lahf
mov
push
leave
mov
shr
test
je
xor
test
or
adc
mov
adc
psubsb
adc
call
add
and
add
add
out
push
mov
mov
shr
xor
push
mov
mov
in
and
xchg
lock
clc
lock
in
and
add
paddd
inc
ret
int3
push
mov
cmp
cmp
mov
push
mov
jne
sar
cmp
inc
or
div
test
je
fnstcw
add
xor
shr
sbb
inc
dec
jne
cmp
(bad)
(bad)
dec
jb
push
mov
shr
xor
sub
mov
shr
dec
ror
mov
sar
ds
call
or
je
adc
push
push
xor
adc
in
add
pop
mov
lock
dec
mov
jne
pop
cs
jmp
int3
mov
push
push
mov
push
adc
xchg
shl
jg
das
inc
push
lea
mov
lea
push
push
(bad)
mov
dec
adc
fistp
mov
jbe
add
(bad)
mov
mov
in
lods
std
cmps
jmp
mov
push
push
or
adc
outs
dec
sti
jbe
push
adc
jno
push
xor
sbb
or
loopne
(bad)
add
jne
pop
jnp
sbb
adc
in
loopne
mov
add
jg
in
jnp
cwde
or
xor
push
hlt
mov
mov
xor
adc
cld
mov
mov
in
(bad)
jmp
jbe
lea
and
xchg
add
fst
pusha
fdiv
icebp
cwde
jp
mov
(bad)
inc
out
adc
jecxz
and
push
or
outs
dec
jae
sub
push
and
test
ins
out
dec
or
xor
sar
ror
xor
enter
add
push
leave
in
add
loop
or
shl
ins
lock
inc
mov
xor
inc
mov
or
mov
xchg
inc
nop
or
pop
adc
popa
rol
popa
add
push
in
add
jo
push
adc
add
iret
mov
push
mov
mov
stos
mov
movs
imul
sahf
jo
pusha
mov
mov
cwde
and
retf
lds
je
add
pusha
mov
mov
pop
movs
shl
and
mov
sbb
push
cld
pop
sbb
add
jl
call
mov
dec
repnz
push
dec
aad
add
or
push
mov
sbb
pop
int
sub
mov
inc
xlat
pop
mov
add
pop
xor
ja
mov
inc
xor
xor
pop
dec
fmul
xor
xchg
sub
mov
in
cli
xchg
imul
push
or
pop
call
ss
hlt
mov
xor
dec
in
call
in
loopne
pop
sub
xor
cmps
dec
call
data16
fcom
xlat
or
mov
adc
in
retf
mov
in
push
add
dec
scas
addr16
jns
push
shl
sub
adc
shl
addr16
rcr
arpl
lea
xor
imul
int
fld
cs
jg
jo
hlt
fnstenv
push
mov
inc
sub
cld
pop
xchg
out
hlt
adc
stc
add
lock
push
xlat
add
clc
sub
(bad)
out
sbb
pop
xor
mov
push
adc
outs
iret
cmc
sbb
ror
es
xor
daa
sub
bswap
fmul
(bad)
mov
cmp
mov
int3
dec
dec
outs
xor
sbb
mov
in
jecxz
popf
or
jle
xor
hlt
add
xor
and
jp
test
push
movs
dec
inc
cld
xor
push
lea
sub
shl
pop
arpl
adc
pop
cmp
fild
or
mov
sub
jl
lea
push
pop
cdq
mov
sub
jg
outs
fwait
popf
push
sub
test
add
adc
lea
mov
aas
sti
outs
push
push
add
jne
xchg
sub
push
mov
jmp
adc
lea
test
sub
imul
mov
int
or
adc
or
mov
out
sti
jg
icebp
out
rep
mov
cdq
xor
mov
rol
aam
pushw
lea
fucomi
or
or
ror
sbb
sbb
pop
in
mov
xor
mov
adc
add
mov
fstp
std
jb
xchg
mov
mov
cs
sbb
and
mov
(bad)
jne
cmp
adc
addr16
call
iret
jb
cmp
imul
lea
loope
mov
pop
add
add
cmp
jb
mov
retf
leave
adc
mov
sub
and
out
push
mov
mov
or
mov
or
push
in
jmp
aas
sbb
xchg
iret
out
sbb
shl
fwait
pop
aad
jne
lea
cmp
jmp
mov
retf
pop
cmp
mov
scas
sar
pop
cmp
jne
sub
mov
out
mov
jge
ret
lods
mov
dec
cmp
jnp
add
add
mov
pop
mov
lea
imul
leave
scas
add
add
or
add
clc
mov
jne
mov
clc
lea
push
push
add
cmp
je
mov
or
mov
push
nop
xor
fidivr
adc
int
cwde
sar
imul
pushf
jbe
xor
mov
lock
ret
mov
mov
adc
sbb
lahf
mov
cmp
enter
adc
aas
jae
adc
mov
add
(bad)
in
sti
arpl
shl
add
jns
dec
or
jne
mov
fwait
call
cld
fcom
in
sbb
or
shl
inc
movnti
scas
add
int3
dec
pop
add
mov
(bad)
lock
(bad)
cmps
push
add
xor
pop
test
mov
cld
jb
push
mov
outs
dec
pop
loopne
fimul
mov
mov
push
jo
sbb
add
jbe
test
inc
fmul
in
lds
mov
imul
add
pop
jo
jp
movs
mov
test
frstor
mov
jne
push
mov
jnp
aas
ret
out
mov
adc
mov
pop
int
int
ds
inc
pop
and
and
and
fs
int
int
push
cmp
inc
sbb
push
sub
cmps
fwait
pop
cmps
nop
cdq
(bad)
jb
fwait
pusha
mov
rcl
mov
shl
pushf
add
add
xor
inc
mov
and
pop
or
xor
cs
fstp
add
push
cmp
repnz
sahf
pop
xor
mov
cmp
cmp
cs
or
or
sahf
retf
cmp
cmp
push
adc
push
adc
or
cmp
push
push
adc
sub
xor
loope
xchg
mov
lds
cmps
fmul
mov
movs
mov
pusha
daa
imul
push
push
ins
xor
or
ins
push
sub
sbb
or
cmp
cmp
retf
inc
push
mov
outs
push
cld
push
add
mov
adc
jbe
lds
add
sbb
sbb
mov
sbb
mov
mov
(bad)
cmp
je
(bad)
jmp
retf
xor
jmp
nop
mov
mov
add
xor
add
xchg
sbb
push
call
add
mov
rcr
push
sub
out
sti
add
xor
add
mov
adc
add
adc
or
cs
inc
cmps
loopne
add
cmp
xor
hlt
aaa
push
mov
test
jne
pop
cdq
jne
ror
dec
push
movs
cs
ja
sub
sti
mov
stos
std
fst
push
sbb
sub
inc
dec
jne
pop
xchg
or
fist
cmp
pop
sahf
in
jnp
push
mov
jl
dec
ret
inc
and
pop
sbb
ficomp
mov
cwde
push
mov
(bad)
in
mov
or
add
xchg
mov
daa
xor
aas
loope
jle
cmp
nop
sbb
xor
mov
nop
xchg
mov
retf
inc
jnp
in
xor
dec
retf
pushf
iret
dec
mov
sbb
cli
xor
dec
jne
shl
pop
pop
fwait
pop
push
mov
(bad)
lahf
inc
push
push
dec
adc
add
scas
pop
(bad)
cmp
jbe
mov
adc
cmp
push
mov
mov
inc
mov
sbb
add
push
pushf
add
xchg
push
ror
mov
jmp
or
add
inc
inc
sbb
faddp
xor
and
data16
loop
scas
rcl
retf
dec
add
retf
jl
add
aas
add
inc
pop
mov
test
jns
add
mov
scas
bnd
inc
jae
mov
or
mov
js
mov
jnp
jb
imul
cli
cmp
fimul
jp
iret
mov
and
mov
or
loope
dec
sbb
inc
out
shl
and
cmp
sub
pop
jb
mov
push
xor
pop
push
dec
adc
pop
hlt
cmp
adc
scas
pop
int3
mov
(bad)
xlat
or
add
add
push
dec
add
loopne
or
(bad)
cmc
pop
call
dec
add
mov
icebp
imul
dec
or
lahf
mov
(bad)
inc
cmp
jne
test
je
mov
push
xchg
ins
add
in
xor
xchg
rol
rol
cmp
lahf
mov
mov
push
mov
ror
scas
push
add
or
cmp
jno
xchg
retf
push
je
mov
(bad)
mov
(bad)
mov
cld
xor
sbb
push
adc
sbb
mov
and
sub
fdivr
out
mov
push
in
push
out
cdq
jge
scas
imul
mov
mov
or
cmovo
fcomp
fmul
pop
sub
xchg
loopne
adc
cmp
aaa
jge
lods
add
mov
pushf
or
jbe
mov
sbb
or
lea
loopne
xor
les
push
mov
dec
lock
push
in
lock
leave
pushf
push
rol
push
in
mov
not
push
(bad)
xchg
push
or
xor
sahf
pop
pushf
xchg
mov
xor
cs
push
pop
pusha
inc
xor
mov
add
add
mov
push
cmp
je
mov
mov
call
sbb
sub
fmul
or
push
sbb
shl
or
retf
dec
(bad)
int3
fwait
movs
xchg
dec
push
mov
pop
inc
movs
loop
sub
xchg
push
mov
jle
push
push
sub
and
icebp
iret
inc
jecxz
mov
mov
nop
loopne
imul
mov
aaa
in
hlt
adc
sbb
sub
lock
or
mov
lea
call
push
cmp
jne
xor
jmp
sub
cmp
inc
add
push
mov
push
arpl
jge
sub
in
cmp
push
and
clc
ins
sbb
pop
pushf
retf
shr
js
nop
and
lock
xchg
seta
jo
je
jmp
bnd
pusha
or
cmps
shl
pop
imul
inc
bound
jns
icebp
jbe
fbld
test
mov
mov
das
mov
std
push
(bad)
mov
sbb
add
push
fisubr
mov
stc
jnp
add
out
mov
test
je
test
rol
(bad)
pop
cmps
jmp
lea
jmp
pop
cmp
ret
(bad)
call
dec
enter
mov
and
cmp
jne
ret
mov
xchg
or
xor
xchg
call
mov
and
pop
sub
mov
in
mov
push
mov
jg
jae
xor
push
sub
cmp
jb
sti
inc
mov
mov
dec
push
xchg
cmp
cmp
or
adc
push
shr
mov
adc
push
mov
(bad)
mov
mov
shl
jno
shr
nop
push
jmp
sbb
fwait
jg
jle
push
or
stos
and
punpcklwd
add
push
clc
or
or
rol
add
sbb
outs
fiadd
or
jle
or
pop
jne
mov
lahf
fwait
cmp
jb
popa
jne
jb
sbb
fwait
mov
or
jne
add
cmp
push
adc
add
pop
mov
js
lahf
sub
push
mov
(bad)
test
dec
sbb
aam
inc
(bad)
jae
or
pusha
call
inc
mov
rol
(bad)
repz
cmp
inc
add
sub
xchg
retf
in
dec
jnp
jnp
lock
inc
je
cmp
loop
dec
mov
mov
jl
mov
push
pop
pop
dec
mov
inc
ds
ror
xor
pushf
mov
rcl
mov
sub
add
mov
push
out
lea
rcl
push
(bad)
sub
lea
rcl
mov
sub
push
mov
shl
sub
popw
pop
lock
clc
push
inc
ficom
mov
lea
jne
lock
sub
push
jb
cld
sbb
add
jg
je
test
jle
(bad)
mov
sbb
cmp
lock
jle
inc
cmp
fistp
sbb
or
pop
je
rol
lahf
sub
clc
jl
jmp
repnz
add
add
xchg
rol
adc
fld
cmp
jb
imul
or
xor
test
je
push
icebp
xor
mov
push
dec
cmps
dec
jg
xor
je
pop
dec
sub
add
add
cdq
sbb
aad
arpl
sbb
add
sub
jg
rcl
jmp
mov
ins
pop
mov
ret
call
mov
les
lods
in
push
mov
leave
je
test
add
pop
jmp
lock
cld
dec
xchg
inc
sti
loopne
jo
jge
outs
xchg
je
mov
lock
xchg
and
das
add
jns
fisttp
aad
or
lea
and
jp
pop
cmps
loope
and
mov
dec
pop
loop
cdq
sbb
rcr
sub
test
sti
add
xchg
cdq
je
mov
scas
test
adc
aas
inc
test
jmp
pop
lods
das
and
jne
test
inc
sbb
mov
sahf
test
mov
xchg
rol
mov
hlt
mov
push
dec
lahf
sbb
jg
or
or
ja
or
scas
fld
cmp
pop
add
jb
mov
test
aas
cmp
or
push
mov
or
xchg
xor
ror
add
lea
push
push
call
xchg
add
fnstenv
jo
mov
pop
pop
dec
inc
add
es
out
sbb
popf
jo
sub
shr
mov
fistp
loopne
mov
add
clc
add
cli
movs
push
mov
shr
mov
js
sbb
dec
mov
cwde
out
(bad)
and
rol
test
dec
outs
pushfw
dec
add
jg
rcr
test
je
mov
pop
inc
sub
jnp
and
mov
loopne
fild
xor
mov
ficomp
shl
pop
lock
mov
xchg
clc
add
cmp
lock
mov
cwde
push
push
fs
stos
push
shl
or
dec
in
ror
scas
adc
or
and
test
loopne
adc
dec
inc
cmp
test
add
inc
xchg
inc
mov
or
push
jnp
xor
test
mov
out
jo
xor
or
cmp
punpcklbw
ret
or
jne
jge
push
mov
cwde
xchg
in
or
nop
movs
mov
jmp
mov
jbe
sub
mov
test
lea
cld
adc
adc
leave
sub
rcl
dec
cmp
ja
push
adc
add
(bad)
sub
add
ret
xor
xor
mov
dec
and
or
sar
xchg
daa
mov
outs
fdiv
lea
into
or
cmps
jnp
in
mov
pop
dec
adc
adc
or
lods
cmps
add
(bad)
jl
mov
add
int
mov
out
mov
enter
mov
fmul
aam
sub
push
fidivr
mov
scas
fdivr
pop
or
jl
jg
cmp
xor
ins
fsubr
out
jmp
adc
in
lea
clc
loope
fstp
mov
retf
sbb
jle
inc
or
pushf
jp
scas
outs
out
mov
sbb
push
mov
sbb
les
push
xor
jmp
(bad)
fmul
add
retf
je
and
push
add
loope
add
add
mov
popa
(bad)
pop
mov
test
ret
mov
inc
xor
mov
push
sbb
mov
arpl
push
mov
cdq
mov
xor
test
scas
mov
add
jae
cmp
or
pop
fldenv
or
outs
pop
je
sbb
push
jmp
push
mov
(bad)
test
mov
jmp
ret
test
push
adc
jbe
retf
cdq
add
adc
cwde
pusha
add
movs
movs
(bad)
sub
je
or
xchg
enter
pop
add
adc
outs
add
ror
jnp
sub
(bad)
pusha
aad
xchg
imul
pop
sbb
push
jo
rol
rcl
in
inc
sub
ret
mov
or
call
cwde
jmp
scas
ret
mov
mov
mov
push
and
out
clc
shl
push
and
aad
sub
mov
int
add
lods
or
popa
iret
mov
mov
mov
in
jbe
pop
adc
mov
aaa
sbb
rcr
jle
and
and
and
mov
lea
and
adc
fst
sahf
mov
test
inc
jle
xlat
dec
aaa
cli
mov
mul
xchg
or
jg
or
ja
fsubr
add
adc
mov
addr16
outs
sbb
mov
jnp
xchg
(bad)
inc
add
in
adc
mov
es
data16
inc
cmps
in
pop
mov
pushf
mov
shl
push
xchg
ja
push
push
push
mov
xchg
inc
mov
add
push
loope
ins
lea
mov
sar
push
dec
and
stc
mov
xor
add
or
outs
mov
dec
mov
add
int3
ins
and
ins
add
push
mov
lods
ret
add
stos
or
or
loope
add
adc
sbb
cmp
shr
push
mov
ins
lods
out
sbb
rol
jecxz
adc
dec
(bad)
or
xchg
test
jp
not
std
sub
mov
popf
push
(bad)
jmp
pushf
out
push
add
and
ds
lea
mov
scas
mov
and
test
ror
jl
jl
lahf
mov
pop
cwde
imul
sub
add
add
call
shl
adc
pop
(bad)
sub
mov
gs
dec
imul
jle
movs
sub
out
mov
mov
jg
mov
mov
test
mov
add
sar
add
add
add
cwde
es
mov
lahf
cmp
jae
add
fild
or
adc
pop
je
xor
cmp
aas
or
movs
dec
movs
dec
push
(bad)
xor
test
or
dec
ret
aam
lds
jne
(bad)
mov
adc
adc
adc
and
push
push
mov
add
and
mov
xchg
add
daa
inc
and
mov
cmp
icebp
mov
std
loopne
push
push
cwde
das
sub
pushw
in
lock
rcl
add
or
dec
aas
pop
xchg
out
ins
repnz
mov
and
out
inc
adc
cmp
jl
inc
add
push
xchg
mov
inc
or
ror
(bad)
call
or
push
rcl
int3
not
cs
cmp
mov
sbb
cmp
inc
sbb
shl
mov
add
ret
pop
jecxz
inc
cmp
lea
aas
(bad)
clc
mov
mov
or
push
add
mov
add
daa
add
push
(bad)
retf
dec
loopne
jb
call
cmps
popf
inc
mov
xor
icebp
mov
mov
and
cmp
mov
push
loope
sbb
add
inc
cmp
jo
cdq
or
xchg
shl
shl
scas
enter
mov
or
push
and
adc
mov
jne
popa
inc
rol
cdq
add
outs
cld
lea
lock
lea
mov
mov
dec
jmp
loope
sbb
das
test
adc
test
mov
jnp
push
lock
movs
xor
js
mov
sahf
dec
sbb
aaa
cmp
push
mov
adc
pop
cmp
loop
loope
or
(bad)
xchg
iret
fild
inc
daa
aaa
push
(bad)
mov
sub
add
int3
cmp
jae
frstor
psadbw
adc
inc
adc
sbb
jb
mov
ficomp
jmp
fcom
imul
mov
mov
cmp
jg
push
mov
add
mov
jmp
cmp
(bad)
mov
fcom
pop
xor
pop
jp
xlat
dec
imul
push
dec
or
ins
sbb
or
add
add
xchg
nop
rcr
aas
fisttp
and
adc
imul
fisttp
pop
sbb
adc
jecxz
ret
aas
push
sahf
inc
adc
dec
sub
jnp
rol
ds
pop
push
xlat
(bad)
mov
in
push
and
push
and
js
xor
je
jl
outs
mov
sbb
cmp
adc
sar
lea
jmp
mov
dec
js
adc
es
cmp
jae
or
movs
jmp
js
push
pusha
shl
jnp
mov
dec
xor
xchg
pop
sbb
fstp
sub
add
jbe
sahf
cdq
mov
(bad)
dec
cmp
sar
xlat
jbe
push
lea
cmp
stos
lock
fist
clc
sub
push
push
dec
call
add
mov
pop
pop
ret
jae
push
clc
div
dec
(bad)
cli
pop
mov
add
je
push
push
stc
mov
and
movs
push
sbb
jmp
sbb
mov
adc
cmp
cwde
push
adc
sar
shl
daa
adc
repnz
sub
push
mov
mov
mov
dec
sub
pop
mov
test
retf
cld
push
lods
cmp
mov
lea
pop
imul
(bad)
jbe
or
iret
jae
push
push
sub
xchg
cmp
pop
sbb
sbb
fcom
data16
sbb
fstp
bswap
out
adc
push
lock
lods
sub
mov
push
ret
pusha
fist
call
mov
(bad)
push
or
sub
js
lock
cmp
jae
dec
add
pop
or
retf
pop
or
cli
cmp
jae
xor
sbb
sub
jae
enter
push
push
adc
lahf
xor
adc
nop
pushf
adc
add
jae
push
add
jne
jge
xchg
clc
xchg
ss
loop
sbb
jecxz
pop
int3
sbb
xor
add
shl
fisttp
pop
mov
(bad)
or
fisttp
test
je
jmp
push
retf
sub
adc
sbb
inc
lock
or
pop
push
lds
or
fcomi
adc
or
jmp
lock
cmp
jae
add
lea
mov
mov
les
add
shr
jmp
je
jo
mov
clc
jbe
push
into
jbe
inc
sbb
sbb
dec
and
not
mov
frstpm(287
pushf
and
sub
adc
jg
adc
arpl
xor
fild
dec
mov
pop
inc
push
dec
dec
or
mov
adc
cmp
out
push
mov
xchg
xchg
inc
or
dec
fistp
inc
lods
jo
test
mov
repnz
jo
mov
call
fistp
sbb
add
or
inc
adc
pushf
cmp
in
or
inc
or
add
in
mov
pop
sbb
sbb
bound
push
push
add
inc
imul
push
push
sbb
jne
jb
ret
ffree
add
sub
push
loope
pop
rol
jae
inc
inc
movzx
add
sub
jne
and
jbe
push
inc
cmp
int
sbb
and
add
add
pop
ret
lsl
add
cmp
clc
pop
pop
or
pop
add
mov
or
(bad)
pop
adc
rol
xchg
add
enter
jne
repz
sti
cmp
adc
enter
sub
sbb
jae
mov
sbb
ret
lods
and
push
pop
call
test
int3
add
or
js
sub
adc
test
ins
jno
(bad)
mov
sar
fdivrp
push
ins
push
xor
lock
cmp
push
ficom
rcl
add
push
test
rcl
call
or
sbb
add
or
imul
sbb
pop
or
fiadd
ins
lock
and
inc
arpl
inc
jle
adc
sti
cmp
jne
fiadd
sti
or
dec
push
lock
repz
pop
push
hlt
pushf
mov
sub
repnz
test
cld
adc
sub
push
daa
(bad)
nop
or
add
jmp
mov
sub
idiv
add
imul
push
pop
mov
cmp
in
or
mov
hlt
mov
hlt
hlt
movs
lahf
arpl
sbb
jmp
lock
adc
in
out
push
add
daa
mov
mov
out
retf
shr
shr
cmp
mov
hlt
retf
mov
sbb
fdiv
mov
sbb
repnz
xor
add
jbe
imul
int
mov
inc
call
jl
das
xchg
cmp
fsubr
or
pop
mov
mov
pop
rcr
sbb
ds
xchg
mov
inc
cmp
add
push
xchg
mov
imul
jp
xor
cmp
push
mov
mov
mov
pop
push
(bad)
xchg
clc
rcr
test
inc
repz
test
push
pop
dec
in
rcl
mov
ret
jae
push
mov
sbb
sbb
neg
xor
scas
push
sbb
jae
mov
push
aam
fs
xchg
sbb
js
or
stos
or
test
xor
inc
pop
pop
pusha
pushf
mov
add
jnp
jne
mov
cwde
ss
in
adc
and
push
inc
push
arpl
xor
pop
jecxz
inc
pop
xor
sub
aad
mov
xchg
and
inc
int3
pop
clc
mov
and
push
ret
inc
lods
mov
ffreep
push
pop
ret
add
sub
push
push
ret
sbb
push
jmp
imul
or
inc
cwde
xchg
xor
cmp
sar
push
lea
cmp
aas
push
sub
ins
rcr
inc
sbb
cmp
div
(bad)
pop
pop
rcr
repnz
or
push
add
ss
jo
hlt
test
fs
mov
pop
sub
cmp
call
xchg
je
int3
sub
(bad)
xchg
cmp
(bad)
cmp
sub
or
mov
scas
adc
push
into
xchg
adc
jle
mov
mov
xchg
ds
or
mov
push
jle
jp
(bad)
and
ja
jb
ins
adc
cmc
inc
cmp
cmp
ja
sbb
mov
push
mov
in
ds
adc
fdivr
and
inc
or
push
inc
shr
dec
mov
ror
outs
push
and
adc
mov
sbb
xlat
sub
lea
sbb
mov
mov
(bad)
adc
jno
inc
push
add
std
and
add
jge
inc
cwde
aad
(bad)
mov
(bad)
fdivr
inc
or
mov
xor
jae
fldenv
call
or
jae
xor
out
push
jo
and
and
and
mov
in
adc
ja
loope
aad
mov
adc
mov
sti
out
adc
fadd
sub
mov
pop
cwde
jge
push
mov
mov
dec
sub
aas
mov
lods
mov
test
sbb
aaa
loope
sahf
shl
adc
jne
in
push
mov
jg
mov
imul
cmps
movs
cld
mov
pop
add
or
aas
xchg
mov
ret
shr
test
dec
enter
fldenv
and
or
mov
push
rcl
push
fidiv
jae
add
push
and
inc
jmp
mov
sbb
loop
inc
ret
jmp
leave
push
or
pop
push
and
jo
shl
fimul
ror
xchg
mov
mov
arpl
ror
sub
push
mov
dec
leave
push
push
test
or
addr16
cmp
and
fs
enter
(bad)
fisub
sub
(bad)
mov
not
cmp
shl
(bad)
xor
repnz
rcl
test
pop
scas
test
jmp
jno
push
inc
push
or
mov
mov
(bad)
(bad)
icebp
nop
call
sub
inc
and
das
adc
xchg
loop
jnp
or
jecxz
popa
adc
int
mov
push
jecxz
ins
and
xchg
and
inc
sub
imul
in
rcl
stc
or
push
inc
adc
in
jns
fstp
add
fmul
mov
inc
sub
push
adc
loopne
or
mov
and
cmp
mov
add
sub
xchg
dec
sar
jmp
push
ret
pop
lea
or
add
fwait
mov
js
add
inc
hlt
rol
pop
(bad)
cmp
retf
stc
push
nop
inc
icebp
test
leave
not
push
not
popa
jno
add
into
xchg
out
adc
loopne
scas
xor
jns
pop
sbb
push
mov
or
mov
cmps
(bad)
int3
mov
mov
std
jmp
cmp
inc
mov
stos
clc
ror
mov
dec
mov
stos
add
cmp
inc
into
xor
jbe
or
xchg
cmp
xchg
add
sub
fisubr
pop
pop
dec
daa
push
ja
lea
int
mov
mov
adc
adc
mov
imul
sbb
lock
int
and
and
dec
fild
daa
inc
inc
sub
mov
push
retf
and
enter
adc
cli
lea
and
inc
stos
or
mov
dec
or
xchg
imul
inc
mov
and
dec
adc
jp
shr
jno
adc
ret
pop
stc
in
push
mov
rol
mov
aaa
cwde
sub
add
add
iret
inc
daa
movsx
jns
(bad)
jecxz
and
dec
jmp
fdiv
test
mov
jno
mov
addr16
add
mov
ret
pop
cld
repz
pop
add
test
push
loopne
retf
shl
icebp
sbb
jae
xor
sbb
cmp
xlat
push
test
sbb
retf
mov
push
(bad)
hlt
cmp
jb
jne
ss
in
add
rol
les
sbb
push
(bad)
inc
or
dec
ja
test
fsub
stc
sub
retf
mov
mov
stc
sub
or
sub
cmp
jae
cmp
retf
jle
repnz
mov
sbb
fld
mov
push
or
mov
pop
sbb
add
sbb
pop
xor
adc
ds
push
aas
aaa
cmp
data16
inc
xchg
inc
adc
dec
jns
int
retf
or
out
sahf
out
xlat
jecxz
(bad)
fwait
out
iret
inc
pop
push
push
and
cmp
out
rol
inc
inc
cdq
out
cmp
mov
inc
pop
inc
add
out
inc
add
pop
xchg
aam
iret
rep
ficom
fnstsw
add
ss
push
call
fdivp
cmp
loope
mov
mov
(bad)
lock
inc
outs
mov
mov
cwde
jg
push
mov
xlat
adc
push
ret
dec
and
leave
cmp
jbe
xor
inc
mov
clc
mov
repnz
jmp
jecxz
loopne
jb
inc
adc
cmp
jne
or
push
(bad)
cmp
push
xor
cmp
scas
clc
ins
xor
mov
jo
or
inc
cmp
jb
jmp
outs
call
cmps
test
mov
xchg
dec
movs
sub
cmp
jg
shr
lea
mov
cmps
pop
sahf
fimul
or
mov
mov
add
pushf
or
(bad)
dec
test
push
or
sbb
and
mov
mov
into
add
cmc
mov
sbb
mov
lea
mov
mov
mov
shr
xor
add
repnz
aaa
scas
add
inc
(bad)
jnp
sbb
sub
fcomp
inc
scas
lods
cld
cmp
mov
int3
inc
data16
push
jae
sub
push
sub
rol
cwde
inc
pop
or
shr
jb
in
(bad)
jbe
(bad)
xor
and
test
out
test
lock
not
and
jmp
jae
jge
imul
div
mov
jb
sub
call
sbb
call
repnz
rol
jno
or
and
push
lea
or
pushw
ins
xor
mov
or
sbb
sub
inc
push
fisttp
aas
je
scas
jae
ds
add
or
inc
mov
adc
inc
test
(bad)
and
loope
clc
js
sub
enter
rol
prefetcht1
imul
shr
adc
adc
push
lods
stos
xor
dec
add
push
pop
lds
push
push
pop
ret
lds
xor
push
aas
jne
xchg
rcl
add
pop
mov
ins
push
retf
cmp
sub
inc
or
adc
mov
mov
test
lock
je
or
mov
push
add
inc
xchg
add
jmp
mov
lea
xchg
sub
and
add
loope
pushf
leave
jbe
lock
mov
je
push
jecxz
mov
mov
pushf
into
sbb
jne
xchg
out
les
push
cs
dec
outs
das
jmp
mov
cmp
jne
push
or
je
mov
nop
add
xchg
stos
jl
or
add
or
push
jl
int
add
or
add
or
call
push
inc
xor
dec
shl
or
and
push
stos
push
call
sub
push
mov
fistp
add
push
lea
adc
shl
dec
and
and
add
cmp
fneni(8087
cmc
jne
push
mov
retf
aam
ins
add
(bad)
dec
shl
fs
or
inc
out
shl
inc
gs
(bad)
or
out
sub
pop
aas
outs
add
mov
retf
pop
or
push
sbb
ror
dec
bound
cmps
jle
push
imul
xchg
sub
(bad)
bound
add
inc
or
or
sbb
and
sub
pop
jmp
js
xchg
or
in
mov
pop
lahf
sbb
jb
inc
push
inc
xor
sar
adc
mov
cwde
loope
jp
xchg
iret
lea
loop
or
pop
aam
pop
call
ins
outs
call
add
jecxz
mov
mov
xor
xor
add
iret
mov
shr
lea
mov
pop
shr
fmul
add
push
es
or
jnp
mov
repz
cmps
adc
pop
xchg
sahf
sbb
aaa
aaa
xchg
out
inc
aaa
add
fnstsw
xchg
jge
cmp
cs
and
add
xchg
inc
or
ja
mov
pop
inc
inc
push
pop
sub
push
jno
ss
ss
add
dec
inc
lahf
add
mov
adc
ret
out
push
mov
push
mov
pop
clc
sbb
adc
fsubr
imul
test
adc
sub
adc
not
jo
hlt
out
jne
jne
mov
retf
jb
xchg
lea
stc
sbb
jnp
mov
mov
cmp
sete
sub
push
push
dec
in
pop
call
rol
aaa
xor
ss
sahf
in
xor
xor
sbb
mov
sub
or
ds
mov
pusha
inc
cmp
ret
iret
rep
test
cmc
push
push
add
push
sub
push
jb
add
add
xor
jns
push
dec
sbb
fs
push
call
sbb
push
pop
jg
add
and
jno
cmp
ret
cld
ins
dec
xchg
repz
cmp
adc
add
lods
add
xchg
cwde
enter
(bad)
mov
mov
inc
inc
inc
cmp
je
cmp
jne
stos
test
jns
lea
cli
out
sbb
js
mov
or
mov
jo
mov
les
xor
ret
ret
int
movs
pusha
or
or
adc
jbe
dec
sub
ret
dec
test
add
(bad)
enter
cmp
js
bound
or
mov
push
clc
inc
aad
enter
test
fisubr
jbe
pop
dec
dec
sbb
rol
xchg
std
push
xchg
sbb
inc
fcom
mov
stos
mov
jge
sub
(bad)
mov
mul
mov
inc
dec
in
jne
cmp
adc
call
loopne
or
sbb
stos
loopne
movs
add
fdiv
cdq
add
jg
fistp
sar
ret
jge
ds
adc
inc
test
sub
es
fdivr
(bad)
fild
fdivr
sbb
adc
pop
mov
push
sub
cmp
jmp
jne
ds
mov
fst
mov
push
neg
(bad)
fild
je
inc
aam
push
ret
fstp
dec
xor
cdq
cmps
int3
sub
in
mov
push
fidivr
shr
inc
push
les
into
add
fdivr
fdivr
clc
or
mov
cdq
mov
xor
sub
adc
clc
xor
sub
aaa
imul
std
sub
cdq
xor
mov
idiv
lock
cmp
jg
sbb
rcr
dec
push
pop
mov
into
popa
fs
repnz
mov
inc
push
add
les
xchg
xor
inc
call
sbb
sub
inc
rcl
sub
js
loope
push
dec
jg
mov
popa
jmp
add
xor
adc
test
push
in
ror
push
mov
jge
mov
mov
cmp
clc
inc
inc
and
cli
push
out
xor
dec
pop
or
jg
mov
add
call
in
adc
test
cli
mov
jmp
shl
fadd
ins
dec
mov
pop
push
mov
dec
mov
sti
sub
scas
sub
or
int3
add
jno
adc
xadd
inc
sub
cmp
out
pop
int
lock
mov
add
mov
inc
es
sbb
adc
xchg
(bad)
sbb
mov
int
xor
in
mov
sbb
clc
imul
pop
jne
mov
loopne
mov
jg
test
pop
add
shl
cmp
push
test
jb
(bad)
out
clc
jmp
inc
lods
add
sbb
lock
mov
fist
adc
jge
inc
sub
mov
aam
pop
adc
sbb
jmp
fidivr
fcomp
add
sub
popa
adc
add
add
data16
stos
ret
or
call
loop
enter
pop
and
sub
sti
xchg
jae
sbb
xor
lods
mov
inc
cmp
jne
pcmpeqb
add
xchg
jno
add
cmp
jl
lock
mov
clc
mov
cmp
nop
sbb
push
fadd
push
pop
push
rep
iret
push
mov
pop
push
push
movs
sub
repz
xor
dec
push
pusha
(bad)
push
pop
xor
and
test
cli
scas
inc
xor
les
je
cmp
or
sbb
jecxz
xor
or
and
or
mov
jmp
ret
lock
lds
inc
test
shl
mov
jae
loop
sub
shl
ret
es
mov
retf
mov
movs
data16
add
enter
or
div
(bad)
mov
ror
ror
je
add
add
icebp
frstor
push
cs
pop
pop
les
test
mov
sbb
mov
sbb
pushf
enter
cld
push
scas
scas
mov
scas
jae
arpl
mov
cld
lea
(bad)
(bad)
int3
inc
dec
rcr
fld
jle
mov
sub
aam
adc
xchg
pop
pop
in
jae
jnp
inc
push
xchg
and
cld
and
fidiv
push
loope
or
shl
push
mov
add
or
fidivr
and
movs
sub
jmp
xchg
push
leave
movs
stos
pusha
lock
sub
or
call
cmps
or
sub
xor
rcl
pop
out
out
pop
mov
pop
pusha
lods
lods
sub
xchg
jle
jnp
push
lock
push
mov
and
and
test
les
pop
or
fist
cmp
fs
mov
pop
push
push
add
jae
aad
arpl
into
push
push
mov
adc
push
and
retf
xchg
sub
cli
shr
add
cli
xlat
xchg
inc
mov
enter
loop
enter
push
mov
std
and
push
stc
push
add
xchg
pop
inc
mov
ja
lea
pop
and
cld
push
push
lock
cmp
ins
mov
shr
xor
add
add
loopne
inc
das
dec
inc
xor
sbb
cmp
test
je
jg
or
pop
lea
add
jne
sbb
push
test
and
ins
dec
mov
into
cmp
lahf
test
fsub
cmp
sahf
or
call
mov
dec
mov
in
mov
ins
or
idiv
add
(bad)
xlat
inc
and
add
js
inc
nop
cmp
push
jbe
xor
pcmpgtd
push
dec
sbb
cmps
lock
(bad)
push
cmp
cmps
neg
sbb
and
add
jmp
add
and
daa
jp
lods
jge
xor
add
cdq
pop
xchg
inc
test
add
ret
mov
sbb
dec
adc
push
push
mov
mov
mov
inc
pop
ret
mov
ret
aas
push
fistp
sub
cmp
and
dec
add
jecxz
sbb
or
mul
icebp
data16
inc
jae
push
mov
inc
add
jg
jo
cmp
imul
add
push
stc
jne
fld
not
cwde
add
or
xchg
inc
sbb
jmp
mov
sbb
cmp
adc
and
cmp
xchg
cli
dec
pop
add
ret
xchg
test
bound
xchg
dec
test
mov
ret
imul
daa
xor
inc
push
ja
(bad)
inc
mov
inc
lock
pop
jbe
xor
mov
dec
cmp
mov
test
jb
pop
cs
enter
retf
in
les
mov
mov
div
loopne
in
(bad)
cmp
cmp
and
mov
xor
add
jle
or
or
shl
jl
inc
mov
fsubr
outs
and
enter
mov
es
sub
lock
clc
call
add
mov
push
repz
mov
xchg
adc
adc
mov
mov
or
cmp
push
push
adc
xchg
xchg
ret
jmp
aaa
sub
inc
xchg
call
jmp
add
repnz
(bad)
add
outs
call
push
dec
and
add
jmp
adc
aam
pop
pop
pop
add
fisub
pop
and
lock
adc
xor
inc
popa
test
je
and
cmps
mov
lock
enter
ret
cdq
push
sbb
test
jg
loope
pop
push
xor
push
sub
mov
ror
inc
or
loop
mov
cli
je
movzx
stos
cmp
jbe
les
int3
rol
rcr
mov
sub
cmp
jb
or
xchg
cmp
adc
in
push
cmp
pusha
push
and
ret
sub
retf
mov
ret
cmp
js
or
in
inc
shr
add
fucomp
sub
pop
ret
jp
rol
add
jo
xor
mov
adc
(bad)
sub
neg
xor
sub
xchg
fs
lock
xor
adc
push
in
bound
pop
xchg
add
pop
adc
push
test
loopne
dec
sub
loopne
sub
dec
aaa
push
addr16
mov
cmps
mov
test
mov
or
mov
or
pop
or
sar
jle
fisttp
lods
and
sub
ret
mov
fdiv
movs
out
leave
push
mov
mov
push
add
jge
clc
or
dec
add
test
lea
mov
pop
fst
div
mov
pop
adc
fild
jmp
out
adc
push
retf
inc
call
(bad)
push
into
adc
jmp
mov
pushf
jne
mov
jnp
adc
jmp
adc
sbb
fimul
jne
xor
sbb
mov
xor
call
loope
loop
cmps
jns
cmps
jecxz
in
in
cmps
jns
loop
jecxz
in
jns
cmps
jns
jmp
loopne
mov
add
test
mov
adc
outs
add
pop
pop
ret
jg
mov
lea
in
pop
or
mov
movs
add
test
test
push
xchg
dec
or
pop
(bad)
xor
xchg
adc
adc
sbb
mov
push
iret
mov
sbb
lock
xor
xchg
add
dec
xor
or
pop
imul
sbb
dec
sbb
mov
cmp
rcl
push
test
and
add
mov
cmp
jbe
jl
xor
or
push
push
pop
std
or
and
scas
mov
cmps
push
and
xor
pop
(bad)
push
sbb
sub
cld
xlat
push
(bad)
mov
data16
dec
adc
xor
ins
xchg
adc
(bad)
xchg
xor
xor
ret
xor
fdiv
lods
xchg
jbe
rsqrtps
shl
and
lods
mov
add
iret
adc
jmp
cs
or
inc
or
push
dec
aas
pop
inc
xor
div
add
mov
xor
mov
xor
push
mov
pop
xor
xor
and
rcr
pop
mov
mul
out
retf
jnp
cmp
sti
adc
mov
in
inc
push
(bad)
loopne
mov
ficomp
xor
in
adc
cmps
fst
push
push
pop
mov
jne
push
ret
pop
jne
sbb
pop
in
jno
dec
fcmovnb
adc
mov
ins
xchg
xor
ds
cmps
mov
push
jl
inc
(bad)
shl
add
lock
mov
cli
(bad)
push
add
inc
jecxz
in
push
jo
jo
in
shl
nop
mov
out
in
adc
out
pop
or
in
std
test
fwait
loopne
mov
sub
in
movs
adc
adc
into
fdiv
jns
mov
in
dec
dec
loopne
dec
and
outs
xor
push
jmp
inc
fcmove
jmp
(bad)
int3
int
push
mov
call
sub
call
push
int3
shl
fist
jmp
push
cmc
stc
aaa
pop
jne
mov
xor
int3
add
(bad)
imul
jmp
pop
jnp
xor
ins
ss
xor
jno
or
pop
or
push
dec
fwait
lock
adc
pop
mov
inc
(bad)
fcom
jmp
mov
sar
push
or
add
pop
outs
enter
cli
mov
pop
mov
inc
and
xor
outs
(bad)
add
int3
fwait
cmp
xchg
jmp
and
mov
fcom
mov
add
add
sub
fdiv
mov
jg
xlat
into
cmp
add
sbb
lahf
movs
jbe
movs
jb
adc
add
sbb
xor
or
or
sbb
mov
mov
or
push
mov
sbb
and
xor
xor
push
and
inc
dec
jbe
pop
in
add
add
xor
mov
push
jg
out
cld
arpl
or
std
rcr
repz
and
(bad)
sub
add
ret
mov
inc
inc
imul
and
add
inc
inc
stc
push
jb
xor
es
jno
(bad)
call
jne
or
sub
(bad)
arpl
add
lea
xor
add
pop
ror
arpl
fisub
mov
jp
or
or
jmp
xor
xor
xor
jmp
ficom
outs
ja
unpckhps
in
mov
jmp
xor
iret
enter
jmp
xor
in
mov
jmp
call
xor
cwde
cmc
jecxz
jg
add
or
rol
and
je
cmp
in
and
inc
mov
inc
sub
out
test
daa
rcl
xor
adc
enter
or
ror
adc
xchg
popa
jo
sbb
stos
adc
inc
data16
call
inc
inc
inc
call
push
fs
jmp
jmp
jmp
inc
jmp
fild
inc
push
jmp
jmp
call
sub
jb
sub
imul
aaa
push
loopne
inc
inc
aas
push
pusha
loopne
lahf
inc
fisttp
mov
clc
mov
jne
sbb
pop
or
mov
out
or
sbb
push
call
das
adc
cmp
les
mov
or
dec
xor
cmc
dec
pop
test
push
pop
add
and
dec
repz
adc
adc
call
xor
test
mov
add
fld
and
or
call
test
cmp
std
inc
cli
jmp
loop
sub
push
retf
sbb
into
push
rol
cli
(bad)
fsubrp
out
push
xor
or
mov
pushw
jnp
cmp
jne
data16
sbb
sbb
setp
fisubr
gs
test
mov
mov
ds
out
dec
pop
sub
and
mov
adc
add
mov
adc
add
test
pop
xchg
or
lahf
jae
pop
push
rcr
pop
adc
add
adc
sbb
dec
or
cld
mov
sti
or
fbld
pop
es
xor
ror
inc
mov
(bad)
push
or
inc
mov
add
and
add
or
fsubrp
lea
and
(bad)
mov
pop
mov
retf
add
adc
repz
xor
or
(bad)
js
add
jl
or
mov
test
cs
iret
jns
out
xchg
fisubr
or
(bad)
xor
jns
imul
fcomip
sbb
loopne
daa
ror
test
loop
sub
mov
dec
rol
mov
js
lea
js
rcr
(bad)
lock
or
dec
int3
shl
fcomip
sbb
loop
lock
jo
add
imul
xchg
test
lock
imul
call
cld
loope
movs
imul
xor
mov
adc
push
or
adc
dec
call
push
push
or
mov
or
add
jo
or
cmp
in
push
cmps
xchg
hlt
cld
loopne
jecxz
sbb
adc
std
sub
loopne
rcr
mov
mov
clc
jp
test
cld
xor
test
in
loop
adc
je
rcr
or
xor
xchg
mov
fiadd
adc
lock
clc
lea
cmp
out
mov
sub
in
rcr
or
cmp
(bad)
and
div
or
mov
push
mov
jbe
data16
in
movs
fstp
cwde
jle
jne
sub
sahf
jmp
xor
rol
mov
xor
outs
dec
nop
(bad)
xchg
jg
add
jbe
xor
lds
cld
mov
fimul
mov
std
jno
movs
jbe
push
cmps
pop
jge
loope
pop
shl
repnz
jnp
shr
mov
jl
mov
or
xchg
cmc
push
pop
sar
xor
push
into
shl
jmp
shr
lock
in
aad
fsub
sbb
les
repz
mov
mov
mov
clc
ja
ds
rcl
or
jb
leave
ja
jne
cld
hlt
daa
in
shl
hlt
push
call
jb
nop
xor
lock
fiadd
lods
repnz
(bad)
shl
out
xchg
ins
jns
clc
ins
js
xor
jmp
jmp
lock
ins
js
xor
jmp
adc
xchg
and
loopne
and
xor
push
sbb
and
ret
and
ds
sub
mov
(bad)
jb
or
xor
xor
and
je
in
push
xor
or
push
out
jge
mov
or
mov
push
iret
add
rol
xor
adc
cdq
nop
je
sar
mov
cmp
pusha
ret
adc
mov
xor
mov
push
hlt
fiadd
fimul
push
add
xchg
and
or
sbb
mov
scas
sbb
push
cmp
popf
rol
repnz
cmp
add
adc
loopne
jne
outs
mov
cwde
ror
test
mov
ret
lods
sbb
dec
dec
rol
pop
push
cmp
clc
gs
(bad)
adc
add
nop
adc
fimul
xor
hlt
push
mov
mov
sar
xor
jb
es
pop
mov
clc
into
push
sbb
aas
into
add
or
hlt
cdq
sub
xor
arpl
jecxz
movs
sbb
in
push
or
mov
es
in
sub
dec
sbb
sbb
lock
or
push
in
and
rol
sbb
fs
xchg
xor
sbb
cmp
test
shr
scas
and
inc
pusha
xor
loope
pop
xor
ror
ror
repnz
jl
sbb
cmp
mov
sbb
fadd
ficomp
or
fnstsw
and
jg
rcr
mov
int
jns
sub
sbb
jo
inc
inc
jne
test
pop
into
shr
(bad)
xchg
sub
stc
jmp
adc
pop
push
or
lods
fiadd
js
jmp
test
lock
pop
mov
or
xor
out
int
out
mov
pusha
jmp
hlt
aad
aad
pop
fst
pop
movs
cmp
pop
rol
ins
imul
pusha
lock
cwde
imul
ffreep
out
jo
pop
shl
dec
adc
sbb
mov
and
mov
call
out
push
rcr
add
cmp
or
int3
test
sbb
test
retf
test
loope
and
or
push
stos
xlat
adc
ja
push
or
and
xlat
pop
(bad)
and
jle
xlat
adc
fidiv
push
xor
pop
push
jo
cs
sbb
test
xor
sbb
adc
fs
push
sbb
mov
loop
jecxz
loope
fwait
shl
js
or
ret
dec
sbb
clc
or
dec
mov
sbb
cld
xchg
adc
(bad)
sbb
xor
pop
pusha
ds
mov
sbb
rcl
mov
movs
jnp
cmc
test
(bad)
push
fs
cld
jl
mov
ja
xchg
and
outs
sbb
sbb
pop
cmp
fdivr
cmp
and
fdivr
or
icebp
sbb
add
mov
stc
sub
mov
jmp
cmp
and
push
or
sub
pop
arpl
fwait
jns
mov
pusha
inc
pop
lea
fild
mov
hlt
popf
sbb
jbe
inc
fbstp
(bad)
shl
sbb
or
pusha
jo
sahf
jle
xor
int
and
hlt
xor
cld
fisub
xor
test
xchg
jl
popf
sahf
sahf
imul
cmp
mov
retf
test
jle
push
pop
adc
xor
sub
aas
or
pop
jno
cmps
or
push
arpl
ficomp
popa
les
xor
movs
lods
outs
and
adc
inc
jb
mov
push
fild
retf
repnz
add
ror
push
cli
test
loopne
cmp
sbb
or
call
ja
inc
jge
push
mov
push
ds
pop
jnp
shr
or
cli
enter
push
(bad)
xlat
adc
ins
inc
mov
ret
clc
imul
ret
dec
pushf
jbe
mov
mov
jnp
clc
xor
jbe
cmps
ins
pop
mov
mov
sub
xchg
jge
sub
jae
or
test
daa
adc
inc
xor
loopne
jo
mov
xor
cli
pop
into
and
adc
ret
adc
adc
mov
jp
push
cli
hlt
sub
daa
add
adc
bound
mov
add
dec
cmp
pop
bswap
dec
push
add
pop
push
push
sbb
out
cmps
adc
gs
outs
test
mov
xlat
sbb
add
pop
add
dec
push
xor
hlt
adc
xchg
fsubr
and
ja
gs
jne
neg
gs
pop
mov
scas
push
dec
out
or
pop
add
dec
test
std
sbb
movs
popa
shl
add
xor
jecxz
mov
jmp
pop
sbb
sub
sbb
cmp
jne
retf
inc
test
mov
cld
mov
and
xor
sbb
enter
in
inc
mov
add
add
jo
mov
aam
add
dec
push
dec
adc
xor
push
push
clc
hlt
push
inc
cld
ins
loopne
ret
(bad)
into
aam
popa
mov
nop
pop
sub
or
mov
inc
int3
cmps
loopne
and
mov
cmp
jae
inc
cmps
sbb
dec
lea
cmp
jbe
pushf
mov
xchg
aas
or
sub
lea
sahf
jo
lea
aas
ror
xor
test
xor
mov
or
cmp
pop
push
les
pusha
es
jb
ins
daa
mov
(bad)
stos
mov
(bad)
cmp
jbe
sub
dec
or
inc
into
push
adc
add
pop
(bad)
mov
outs
or
xor
pop
rcr
pushf
push
int3
mov
retf
add
xchg
adc
jmp
scas
jb
adc
push
push
mov
or
push
repnz
in
mov
cmp
dec
dec
jge
add
hlt
push
push
adc
test
and
iret
xchg
call
push
cmp
jne
mov
inc
inc
in
sahf
pop
stc
jbe
(bad)
in
out
pop
inc
mov
sbb
aas
adc
dec
or
adc
pop
in
mov
punpckhdq
add
push
clc
dec
pop
inc
(bad)
xor
pop
std
push
add
pop
pop
add
mov
stos
mov
add
adc
or
mov
or
or
pop
sbb
syscall
mov
fmul
mov
aam
xchg
push
push
and
adc
xchg
inc
aas
mov
mov
xor
lea
sbb
mov
or
cmp
mov
add
xor
jns
jns
cmp
add
add
repz
push
add
inc
jo
dec
add
jb
dec
sar
xor
jg
imul
push
mov
or
movs
inc
add
repz
pop
push
nop
rol
cdq
ss
call
jae
mov
adc
adc
cmp
cmp
mov
and
cmp
cdq
movs
stc
inc
mov
(bad)
std
aas
cmp
loope
shl
or
inc
pop
lock
xor
mov
ss
ret
and
pushf
xchg
adc
shl
or
stos
mov
mov
jmp
xchg
clc
cmp
ja
xor
ins
sbb
mov
ficomp
cmps
repnz
mov
fucomi
and
enter
or
add
cli
js
cmp
dec
outs
add
scas
adc
ja
aaa
lea
sbb
sub
jg
or
stos
adc
mov
add
add
jmp
push
or
movhps
es
rol
push
mov
jnp
mov
mov
add
pop
add
sbb
sub
call
pop
cmp
pusha
seta
mov
fwait
jecxz
call
lods
pop
ret
sub
loop
fld
test
bswap
push
push
mov
test
sbb
inc
mov
rcr
mov
ds
adc
enter
pop
push
dec
sbb
add
adc
mov
stos
out
(bad)
pop
pop
ret
pop
aas
adc
adc
push
xchg
sbb
ret
jg
shr
outs
mov
add
add
std
jo
sahf
fidivr
and
jbe
ret
dec
xor
les
fimul
call
pop
cmp
xchg
mov
jmp
shl
mov
call
add
push
add
sub
out
sti
out
sbb
push
mov
fisub
ror
mov
add
jo
pop
mov
push
add
clc
inc
(bad)
sbb
add
jge
stos
outs
add
inc
or
jl
add
and
lahf
lods
add
(bad)
mov
(bad)
rol
enter
mov
outs
inc
dec
pop
add
xor
push
pushf
ret
test
mov
mov
inc
scas
push
gs
and
cmp
cmp
sbb
jl
scas
push
pop
ins
loopne
jp
nop
jno
cmp
stos
les
mov
mov
lea
ds
shr
mov
add
push
js
pusha
mov
imul
iret
inc
xor
jg
push
lea
cmp
je
lahf
movzx
inc
add
mov
jne
jp
dec
mov
push
jp
add
ss
add
jle
jge
mov
enter
dec
rcl
add
dec
inc
inc
loopne
in
add
jbe
je
jne
mov
jle
mov
push
mov
add
jp
sbb
push
cwde
xchg
aas
cld
add
ins
mov
add
sub
out
pop
sub
add
inc
mov
neg
shl
sahf
mov
in
or
or
hlt
inc
dec
xchg
mov
scas
and
add
bnd
(bad)
cmp
dec
mov
sub
mov
xchg
lea
add
mov
mov
jnp
mov
test
xor
cmps
jmp
mov
or
clc
mov
and
xchg
imul
sahf
and
xlat
sar
mov
pop
icebp
sbb
aas
inc
xor
es
inc
ss
jnp
je
bound
mov
push
ins
jbe
add
dec
sub
inc
sub
add
and
fnstenv
mov
loopne
adc
dec
sbb
sub
popf
test
sub
ins
fiadd
movs
inc
inc
xchg
inc
mov
iret
push
add
xlat
jmp
adc
sub
sub
jo
mov
dec
je
pop
cdq
lods
adc
std
xchg
xchg
sub
xchg
or
pop
ret
cmps
ss
mov
dec
xor
fdecstp
dec
sti
imul
inc
sti
add
xchg
fs
cmp
sub
loopne
push
and
add
(bad)
jnp
sub
sub
fdiv
sbb
inc
add
ror
pop
dec
(bad)
xor
push
jg
add
push
mov
jl
cs
pop
jg
cmc
mov
dec
mov
outs
jp
mov
inc
test
xlat
add
lods
add
iret
shl
adc
fmul
inc
aaa
dec
(bad)
adc
js
mov
adc
loope
fidivr
add
xchg
in
sbb
sbb
xchg
call
mov
jle
jo
inc
repnz
push
mov
in
pop
jp
fimul
ret
mov
xor
cmps
mov
xchg
add
mov
dec
fld
neg
ret
mov
pusha
xor
add
or
mov
mov
pop
mov
cmp
push
fldz
lahf
outs
and
pop
cmp
dec
out
pop
mov
iret
jmp
sub
mov
mov
or
ret
mov
sbb
mov
ret
cmp
xor
loopne
xchg
push
ja
push
xor
sbb
ins
or
ret
fbstp
mov
xor
test
pop
outs
test
mov
push
push
add
cmp
sti
jl
lea
cmp
inc
(bad)
mov
mov
pop
aam
sbb
and
cdq
idiv
mov
cwde
cmps
sub
pusha
pop
push
lock
adc
loope
jp
loopne
sbb
jb
test
(bad)
mov
sub
jmp
jno
xchg
fadd
lahf
inc
mov
dec
mov
and
or
jg
cld
loope
pop
inc
std
mov
jns
inc
cmp
jl
bound
xchg
stc
(bad)
std
loope
or
add
ret
add
cs
add
cmps
jge
xlat
cmp
mov
sbb
and
push
mov
mov
call
pop
movs
add
jnp
xchg
shl
pop
jge
imul
mov
inc
inc
in
dec
jmp
adc
inc
xlat
icebp
inc
push
or
sbb
push
pop
pop
ja
adc
test
outs
add
push
pusha
sbb
mov
mov
je
lea
mov
cwde
data16
fimul
pop
mov
or
adc
ret
mov
push
mov
add
inc
add
add
clc
pop
add
test
sub
xor
cmp
mov
sub
mov
sti
mov
out
bound
sub
add
stc
xor
push
mov
cmc
add
jge
dec
sti
jbe
mov
mov
mov
push
cli
test
aam
stc
pop
adc
sub
inc
inc
cmp
add
fnsave
adc
push
hlt
mul
dec
and
inc
adc
out
mov
je
sub
add
xor
dec
sub
pop
push
add
scas
clc
aas
push
lock
call
jmp
inc
icebp
cmp
mov
mov
stos
and
mov
dec
push
mov
dec
cmp
mov
and
add
pop
hlt
push
add
xor
lods
(bad)
out
iret
ins
mov
fcom
stos
ds
inc
sar
sbb
cmps
push
push
jmp
(bad)
in
mov
sub
and
push
mov
aad
mov
in
loope
or
test
in
push
add
mov
or
mov
rol
jg
cmp
fmul
fnstenv
jo
pop
push
mov
jmp
or
aas
add
loope
fistp
add
or
or
or
jne
add
test
xchg
inc
add
push
add
stos
adc
cdq
jne
sbb
mov
push
test
inc
cmp
pop
mov
js
add
mov
aam
mov
aad
jg
inc
inc
dec
add
sahf
lea
rcr
jle
enter
push
fisttp
or
add
sub
lea
and
daa
push
mov
mov
ror
inc
fist
mov
sbb
into
cmp
data16
es
mov
pop
xor
add
push
cli
and
xchg
cmp
dec
inc
stos
pop
push
jmp
js
jl
push
sbb
mov
push
mov
mov
les
pop
adc
dec
inc
push
jno
pop
sbb
dec
sbb
inc
in
cmp
movs
(bad)
dec
push
mov
call
jb
mov
mov
jle
push
test
neg
or
mov
jle
push
cli
ins
ins
not
cmp
jae
add
mov
mov
sub
outs
fcom
mov
jno
cmp
setb
ror
popf
pop
retf
cmp
repnz
xchg
cld
mov
pop
sbb
ss
add
mov
add
stos
mov
(bad)
jnp
xchg
mov
call
push
ret
lods
adc
jp
inc
cmp
lea
lock
ja
push
xlat
inc
out
outs
and
loopne
stos
xchg
or
jne
mov
pop
jmp
adc
ss
mov
mov
sbb
fimul
push
cwde
in
ret
sub
mov
hlt
cli
sbb
xchg
popa
xchg
xor
cmp
mov
mov
fs
and
push
lock
inc
or
dec
(bad)
sbb
addr16
mov
or
jne
inc
add
call
clc
inc
inc
and
scas
sub
mov
pop
adc
(bad)
push
enter
push
jno
and
pop
lea
arpl
mov
dec
cmp
pusha
cmp
push
push
fbstp
ror
jae
add
aam
rol
in
and
test
cmp
data16
xchg
ss
or
in
xor
dec
jg
popa
xchg
inc
push
add
retf
adc
jo
cmp
scas
pusha
add
lea
sbb
inc
jo
in
dec
ud2
pop
dec
cmp
jmp
jl
add
mov
scas
inc
push
inc
add
jae
mov
mov
add
(bad)
add
aam
push
push
pop
dec
aad
inc
mov
sbb
mov
mov
inc
lock
pusha
xor
or
mov
test
mov
push
xchg
sbb
jne
mov
push
aas
ret
sub
pop
add
and
mov
push
das
mov
cmps
lock
push
adc
sar
repz
std
mov
and
add
inc
mov
shr
mov
pop
stos
rcl
je
sub
jo
lea
iret
cld
pop
mov
ss
dec
mov
call
ret
mov
mov
add
call
and
add
pop
pop
xor
test
xchg
jl
push
sahf
add
push
push
ss
add
xlat
pushf
mov
inc
push
push
movs
add
mov
dec
retf
mov
push
jne
push
daa
add
add
xlat
push
clc
dec
sbb
mov
push
push
mov
xchg
inc
mov
test
or
or
xor
jns
jno
loop
leave
push
push
or
or
sub
mov
dec
xchg
mov
fld
xchg
(bad)
ds
mov
sub
stc
jle
xchg
mov
mov
xchg
outs
cmps
jl
pop
pop
xchg
push
(bad)
dec
dec
or
xchg
rcl
mov
add
or
mov
mov
sbb
jl
pop
push
push
das
pop
(bad)
loopne
ror
push
push
push
pop
pop
fwait
(bad)
jne
adc
mov
ret
dec
jg
jmp
jnp
push
xor
xor
jle
repz
adc
sahf
and
(bad)
xchg
fcomp
cmps
sub
xchg
xor
mov
xchg
aaa
mov
sar
dec
(bad)
imul
neg
sti
fucomip
cli
gs
dec
pop
xor
push
mov
xchg
or
rcr
mov
pop
mov
ja
aam
push
imul
lock
setg
movs
cmp
sbb
mov
loopne
dec
sbb
xlat
js
pushf
ret
sub
pop
cmp
mov
pushf
rcr
mov
cli
ds
dec
outs
jo
shr
xor
sub
rcl
fs
cmp
test
lea
or
adc
lahf
into
sbb
call
loope
mov
cdq
lods
pop
test
pop
sub
jmp
or
mov
pusha
fsub
pop
cmp
pushf
pop
mov
pop
adc
dec
mov
add
adc
add
ror
leave
mov
test
or
or
pcmpeqb
aam
lea
data16
adc
pop
add
xchg
sub
retf
call
int
add
dec
jne
call
dec
pop
add
mov
shl
inc
mov
mov
mov
test
jl
push
sub
adc
inc
cmp
push
push
dec
add
mov
fld
ror
or
out
jmp
xor
mov
add
push
addr16
or
rol
jno
out
or
add
dec
(bad)
mov
mov
call
call
dec
fs
cmp
mov
push
adc
sub
int3
shr
adc
imul
inc
push
test
je
aas
push
fisubr
into
add
jne
(bad)
test
dec
xchg
and
pop
inc
cli
movs
fld
jle
lea
adc
jne
mov
or
sahf
inc
or
pop
and
fwait
pop
mov
xchg
jno
xor
in
(bad)
fidiv
inc
lea
je
ds
movs
mov
mov
ret
pop
(bad)
mov
xchg
mov
aad
xchg
ins
sub
test
sti
mov
cmp
jbe
in
adc
cld
cmp
ja
cmp
jg
adc
cmp
ja
push
mov
cwde
cmp
add
push
cmp
ret
lods
xchg
pushf
xchg
mov
xchg
scas
clc
xchg
fisttp
icebp
pop
xchg
adc
ror
mov
sar
xchg
popa
cmc
add
xor
cmp
call
neg
and
mov
popf
mov
add
ror
mov
push
jo
imul
xchg
out
clc
or
pop
imul
inc
push
jo
icebp
jmp
sbb
xchg
inc
or
push
and
xchg
and
jno
jmp
call
les
test
sahf
sbb
clc
add
in
sub
jne
and
fdiv
inc
push
cld
std
sbb
sub
ficom
jne
cmp
hlt
xor
push
es
xchg
ret
pop
push
sbb
push
mov
xchg
shr
xchg
jecxz
or
adc
jmp
int3
(bad)
jnp
clc
loope
jl
xchg
scas
lods
mov
test
jne
and
lock
sub
pop
jmp
sti
in
or
add
movs
or
je
retf
inc
gs
or
mov
mov
mov
mov
dec
ds
xchg
pop
or
in
in
fsub
lahf
jmp
cmp
rcl
inc
add
js
inc
shl
ror
push
xchg
add
pop
scas
adc
mov
shl
and
adc
jle
stos
sbb
inc
pusha
nop
aas
jns
out
mov
fidivr
ror
jnp
adc
ror
pusha
jbe
cmps
lods
ret
mov
sbb
xchg
test
pop
jmp
test
mov
mov
fsub
(bad)
jl
and
mov
and
or
or
mov
mov
idiv
add
inc
jo
enter
out
dec
pusha
and
xor
sbb
sub
dec
out
sub
sub
sbb
dec
push
or
sbb
pop
add
mov
cmp
mov
cmp
cmp
(bad)
jns
lahf
pop
pop
push
mov
add
or
cmp
repz
daa
mov
mov
cld
mov
push
jb
in
cli
push
or
xchg
test
and
push
mov
scas
int3
jmp
or
dec
loopne
leave
call
mov
pop
push
or
sbb
sbb
push
push
dec
sbb
fisub
sar
not
test
je
xor
jmp
gs
ret
loopne
push
mov
dec
pop
sahf
add
and
outs
inc
add
popf
mov
cwde
enter
into
arpl
adc
push
and
sub
dec
fcom
and
mov
(bad)
inc
or
add
movs
stos
data16
sbb
into
call
push
cmp
lea
xor
sbb
adc
out
xor
lock
push
inc
inc
cmp
adc
mov
jle
mov
adc
xor
popf
mov
inc
fdivr
mov
adc
dec
cld
lea
dec
xor
add
daa
fsubr
ds
fisttp
lea
mov
out
(bad)
adc
inc
mov
dec
shl
mov
dec
pusha
(bad)
push
jp
mov
les
xor
es
inc
and
sti
inc
call
push
js
pop
fsubr
je
out
cmc
retf
popa
ror
je
add
repz
sub
xor
sbb
jg
dec
sub
and
retf
add
(bad)
js
imul
xor
shl
push
add
adc
loopne
or
jmp
add
inc
popa
out
mov
cmp
shl
mov
xor
call
or
and
cli
jecxz
add
mov
das
cmps
bound
xor
shl
dec
dec
sub
in
adc
sbb
icebp
sbb
sbb
cmp
or
pop
push
inc
aaa
sar
daa
lods
loopne
push
popa
ins
sub
push
pop
mov
mov
pop
xlat
mov
cli
push
sbb
(bad)
cmp
icebp
push
cmps
sbb
rol
jmp
sub
ins
inc
sub
cmp
or
adc
lahf
ret
lmsw
jbe
shr
add
rol
xchg
aam
pop
inc
add
cmps
pop
adc
mov
jp
clc
dec
adc
or
jge
and
xor
xchg
cs
and
popa
and
sub
add
sbb
popf
mov
call
fisttp
popf
jl
popf
fld
mov
scas
jbe
outs
sbb
jno
inc
jb
push
or
mov
xor
adc
and
xor
popa
pop
add
or
adc
sar
fwait
test
xor
ret
and
je
int
adc
ins
out
out
sub
sub
aaa
fprem1
fimul
ror
inc
or
(bad)
ud2
std
cmp
int3
mov
ds
shr
clc
pop
mov
sbb
push
inc
inc
xchg
adc
inc
retf
jp
fidivr
push
pop
ror
adc
shr
ret
xchg
dec
inc
into
jb
iret
pop
fisubr
nop
add
mov
mov
pop
mov
push
pop
and
mov
cmp
xchg
or
mov
dec
mov
pop
jp
in
popf
pop
lea
in
es
sub
cmp
mov
call
inc
mov
mov
mov
mov
jp
stos
out
(bad)
ins
aas
or
ror
mov
out
xchg
or
mov
mov
sbb
adc
cmps
or
dec
mov
xchg
add
retf
xor
and
and
or
lea
js
sbb
pop
or
icebp
arpl
push
lods
shr
mov
outs
je
jb
and
cmp
xchg
sbb
or
sbb
not
js
mov
mov
sti
add
add
stos
mov
or
mov
ja
int3
enter
lods
mov
jge
push
or
les
in
pop
add
sbb
xor
and
fisttp
popa
shl
cmp
xchg
out
mov
aas
ret
ss
or
adc
out
shr
enter
inc
inc
out
push
popf
(bad)
push
inc
imul
pop
mov
jo
cmp
or
mov
ret
jecxz
loopne
retf
xchg
pushf
popa
test
retf
js
pop
fld
test
enter
mul
adc
mov
adc
push
or
imul
jmp
cs
jg
in
add
pusha
scas
sbb
or
xchg
(bad)
stc
mov
push
xchg
push
or
jnp
js
cmp
sete
mov
cmp
arpl
imul
add
mov
jns
test
imul
xchg
or
ror
and
sbb
or
inc
sub
mov
int3
nop
push
adc
pop
inc
not
push
ror
outs
mov
sbb
ret
mov
add
push
fwait
xchg
out
sub
dec
cld
adc
shr
(bad)
sti
inc
xor
aam
in
mov
add
ret
sub
popf
out
dec
rol
xchg
adc
adc
inc
jbe
bound
add
ret
shl
pop
(bad)
mov
hlt
lock
inc
mov
adc
fdivr
mov
inc
mov
(bad)
xlat
in
sbb
test
and
mov
cmp
jbe
lahf
push
ins
jb
fisub
idiv
pop
(bad)
or
push
popf
dec
add
aaa
or
dec
add
es
test
movs
call
out
add
inc
cmp
les
repnz
add
push
pop
dec
enter
rol
pusha
push
cmp
sbb
mov
ret
sbb
inc
pop
mov
sahf
mov
xchg
jecxz
pop
in
les
pusha
and
add
sahf
mov
dec
lds
xor
loopne
aam
scas
add
int3
dec
push
xor
add
nop
hlt
nop
lock
shl
jl
(bad)
in
mov
add
sub
pop
test
mov
mov
ret
cmp
scas
or
inc
xor
push
inc
jge
xchg
mov
leave
out
inc
push
adc
les
ret
and
dec
test
and
dec
mov
and
mov
mov
mov
fdiv
ss
jne
dec
jns
pop
jo
jle
push
push
fwait
mov
arpl
jmp
rol
loop
dec
mov
jns
add
jb
mov
push
scas
push
lahf
mov
jae
stc
cmp
jae
or
ret
loope
xor
add
mov
mov
fcomp
popa
sbb
xchg
or
xchg
xor
sub
fidivr
sbb
jle
aaa
inc
test
mov
pushf
add
jne
pop
inc
js
push
and
add
inc
inc
push
xchg
jbe
adc
(bad)
into
push
popa
add
push
pop
cdq
jmp
or
adc
push
call
add
jge
leave
icebp
test
push
pop
jle
sub
les
sbb
cld
cmp
cld
xor
inc
popa
mov
fcmovnu
bswap
pop
mov
movs
fbld
xor
sbb
xchg
dec
bound
push
mov
inc
dec
jne
sub
cmp
pop
cmp
popa
dec
mov
pop
imul
add
inc
mov
push
bound
cli
movs
pop
mov
jmp
loop
cmp
int
sub
movnti
pop
stos
jne
add
lods
add
push
inc
push
sub
stos
add
cmps
jmp
sti
sbb
jmp
psubusw
cwde
xchg
pusha
xor
jbe
out
add
inc
add
adc
iret
mov
pop
imul
je
add
cmp
sbb
sub
add
add
test
sub
add
sub
sbb
adc
leave
pop
sub
sti
xchg
inc
mov
lea
in
dec
jl
add
inc
mov
jb
mov
xchg
inc
xor
adc
mov
jne
ds
repnz
cmp
jb
mov
pop
test
in
pushf
add
(bad)
loopne
mov
add
inc
sbb
pop
xchg
pop
arpl
or
push
fcomp
xchg
loop
inc
outs
cmps
mov
outs
ret
inc
inc
and
lahf
cld
dec
inc
pop
sbb
add
jl
pop
jne
repnz
cmp
dec
int
clc
xrelease
add
lea
arpl
xchg
fwait
stc
sbb
add
add
or
movs
loope
sbb
js
jno
aaa
mov
xchg
jg
add
or
movs
add
das
jecxz
cmp
or
mov
xchg
scas
jle
sbb
jns
mov
in
add
dec
pop
add
adc
(bad)
mov
jne
add
inc
jmp
movs
sbb
cwde
or
ret
hlt
mov
dec
pusha
loope
pop
pop
pop
jl
and
addr16
mov
cld
sti
mov
dec
inc
sti
fstp
cld
jb
pop
cs
pop
pop
pushf
pop
fwait
sbb
pop
pop
loopne
mov
xchg
mov
inc
pop
dec
inc
lods
outs
ror
fiadd
xchg
mov
ror
ret
dec
arpl
pop
inc
cwde
btr
and
or
add
push
es
cmps
push
ja
dec
mov
xchg
scas
cdq
adc
in
lock
mov
mov
lds
add
loop
cmp
adc
loop
adc
push
pop
push
jge
arpl
xchg
jns
inc
sahf
(bad)
loop
xor
push
adc
mov
xor
xchg
pop
mov
inc
cmp
jae
repz
jge
xor
inc
jae
movs
mov
jb
sbb
pop
xchg
jmp
leave
retf
retf
lahf
pop
jns
jns
add
mov
aam
push
sub
pushf
and
shl
jnp
add
loopne
ret
mov
jo
jb
inc
adc
cmp
ucomiss
jmp
cmp
sar
add
xor
or
repnz
xlat
sar
pop
loopne
add
sbb
mov
rol
adc
stc
aas
sub
xchg
cmc
sbb
lods
int
sbb
push
jle
shl
pop
scas
adc
daa
cmps
aad
pop
sahf
je
xchg
inc
push
stc
clc
push
cmp
push
mov
shr
inc
pop
adc
and
mov
xchg
test
add
xchg
mov
and
jo
and
(bad)
push
mov
mov
xor
push
loopne
xchg
ja
cmp
js
inc
out
or
out
inc
mov
jl
pop
jne
push
mov
fldcw
inc
loop
add
mov
push
test
jbe
xor
jle
xor
push
data16
cmps
add
shl
add
test
push
pop
cmps
lea
inc
mov
mov
inc
sar
sub
cmp
jl
lea
cmovge
adc
sub
xchg
or
sti
idiv
lea
cmp
jle
sub
js
mov
cmp
adc
xchg
add
or
dec
xchg
adc
cmps
out
mov
dec
add
stc
ds
xchg
sub
push
sbb
inc
ins
inc
loopne
loop
jle
add
mov
lods
dec
adc
xchg
mov
ret
loop
and
pop
shl
dec
shl
loop
or
mov
jl
jge
xor
sar
xchg
push
or
mov
push
ds
lods
ins
and
lea
mov
shr
push
sbb
sbb
pop
inc
sahf
sbb
jl
neg
or
cmp
xchg
popf
into
repz
pmulhuw
inc
in
sahf
clc
xchg
pushf
mov
add
xchg
ret
popf
icebp
loopne
pop
mov
push
add
cs
mov
jmp
(bad)
cmp
xchg
je
xchg
retf
cmp
pop
clc
add
add
add
cs
sub
sub
cs
lods
pop
jl
push
dec
cmp
mov
imul
sbb
jecxz
jg
jmp
dec
sub
jne
in
and
fimul
shl
or
or
push
js
popa
rol
mov
or
push
mov
imul
outs
cmp
adc
int
mov
popf
xchg
lea
jle
out
ror
inc
add
ja
scas
add
shr
push
pop
or
push
jge
or
lea
xchg
cwde
push
fstp
std
sbb
or
es
rol
retf
pop
mov
repz
sti
mov
push
aas
sbb
add
sbb
add
adc
cmp
je
mov
sub
imul
xchg
lea
sbb
add
or
mov
push
ret
push
mov
int
and
xor
add
mov
dec
add
into
pushw
mov
cs
iret
lods
jmp
call
xor
ret
jo
(bad)
cld
outs
fild
cwde
jo
sub
shr
mov
push
sub
enter
retf
or
(bad)
cmp
mov
mov
adc
xor
push
sub
add
dec
and
mov
sbb
mov
mov
lea
xor
add
mov
(bad)
sbb
sub
inc
jmp
clc
test
push
add
jne
popf
xor
jnp
lahf
push
xchg
adc
test
aas
push
(bad)
xchg
ret
pop
adc
aaa
push
inc
mov
ja
imul
lea
mov
or
sar
scas
(bad)
in
outs
ja
and
push
adc
inc
push
sbb
sub
sbb
push
ss
add
rcr
push
push
cld
inc
pop
mov
mov
sahf
xor
lea
or
punpcklbw
jbe
inc
bound
call
add
sub
pop
jb
mov
xor
sbb
xor
cmp
jl
imul
inc
and
inc
dec
mov
shl
lock
and
movzx
shr
push
pop
inc
ret
mov
neg
pop
mov
or
jns
jno
and
mov
mov
lea
sbb
es
pop
xchg
xchg
cmps
cmp
cmp
cmp
xchg
xchg
cmps
repnz
inc
movs
mov
dec
inc
cmp
int
or
sbb
cmp
jg
arpl
push
cmp
ja
in
mov
add
lock
out
xor
pop
mov
mov
shl
adc
(bad)
ret
jl
test
mov
test
sbb
mov
jl
arpl
sub
in
pusha
inc
or
dec
or
or
movs
sub
mov
push
test
add
sub
xor
push
jns
out
sahf
mov
cmp
inc
adc
or
push
add
push
mov
xor
push
push
das
mov
xchg
sahf
pushf
imul
pop
or
push
outs
mov
cli
movs
jae
xchg
dec
jge
or
and
test
pop
fisubr
dec
push
inc
or
in
mov
inc
and
inc
xor
cmp
(bad)
les
or
(bad)
push
inc
bound
add
dec
cmp
loop
scas
mov
rcl
pop
lahf
es
sub
inc
loope
mov
cld
add
idiv
(bad)
arpl
inc
mov
dec
push
dec
in
mov
inc
push
mov
dec
pop
inc
sbb
mov
jns
push
cmp
dec
or
mov
cmp
adc
sbb
jae
imul
mov
or
adc
loope
dec
xor
mov
enter
add
add
pop
mov
xchg
dec
loopne
aam
int3
xchg
out
mov
and
or
in
add
call
adc
pop
jmp
movs
pop
mov
(bad)
jl
out
push
ins
cmps
push
push
cmp
and
push
push
enter
iret
jnp
fiadd
push
pop
add
pop
and
add
add
or
cmp
and
mov
cmps
pusha
add
aas
jno
cmp
mov
cs
or
sbb
stos
add
jle
fisttp
pop
popf
cmp
sti
push
cmp
sub
jno
aas
adc
push
xor
jle
inc
add
mov
dec
add
cmp
jmp
push
cld
push
mov
mov
lock
cdq
push
or
es
ds
push
xchg
inc
aaa
sub
std
inc
inc
imul
dec
cmp
add
dec
jne
cmp
std
add
(bad)
adc
cmp
xchg
xchg
mov
xchg
sbb
repz
mov
pop
or
dec
push
iret
and
pop
retf
cmp
sub
mov
rol
rcr
add
mov
movs
mov
pop
ins
loop
dec
mov
cmp
xlat
mov
push
daa
mov
jle
jno
test
or
mov
dec
or
dec
mov
dec
test
xchg
and
push
(bad)
dec
pop
(bad)
(bad)
fcomp
push
mov
add
add
jge
das
dec
mov
lsl
dec
fstp
xor
add
mov
inc
(bad)
(bad)
(bad)
jb
lock
(bad)
jge
lods
jne
cmp
jmp
cmp
add
loop
outs
sub
push
enter
add
imul
loope
or
jge
cs
int
sub
and
(bad)
add
fst
pusha
pop
retf
idiv
lea
add
add
mov
or
mov
sbb
jecxz
nop
mov
call
add
add
cmps
jns
add
add
cmps
push
pop
inc
push
(bad)
mov
ins
add
or
sbb
push
dec
push
scas
fnstenv
sbb
cmp
add
rcl
xchg
cmps
cmp
add
add
retf
push
mov
(bad)
inc
push
dec
leave
add
test
inc
movs
pop
rcr
fimul
add
daa
js
out
add
inc
dec
mov
sbb
call
popa
fsub
js
js
clc
inc
cmp
outs
shl
cmps
mov
pop
iret
jnp
rol
jb
in
stos
xchg
add
sub
jae
or
adc
inc
cmp
xor
dec
inc
push
mov
mov
xor
and
pop
cdq
rcr
ins
ds
and
mov
inc
push
pop
cdq
enter
sbb
pop
rcl
adc
dec
or
sbb
shl
sub
dec
mov
inc
pushf
or
mov
push
mov
add
mov
add
add
push
or
inc
or
mov
adc
mov
retf
es
leave
adc
out
push
or
jb
out
mov
or
push
repnz
sbb
cmp
out
pop
xor
pop
inc
push
ds
pop
mov
ret
xchg
mov
lds
or
and
pop
ret
aaa
test
ins
adc
mov
fmul
pop
ret
je
rol
adc
add
pop
inc
movs
ret
push
lea
jae
iret
mov
mov
inc
icebp
mov
out
mov
out
ins
test
lea
out
xchg
les
dec
add
icebp
clc
loopne
or
dec
add
aas
mov
rcr
leave
shr
xchg
mov
jo
xchg
cmp
cmps
push
retf
xchg
retf
movs
adc
fstp
ffreep
outs
iret
xor
cli
xchg
dec
xchg
test
nop
push
(bad)
xchg
mov
in
cmp
fist
dec
mov
push
jbe
jne
call
(bad)
out
xchg
pop
mov
daa
in
jmp
pop
pcmpgtb
mov
pop
retf
and
or
ret
dec
or
js
movs
imul
call
lea
fcomp
or
push
cwde
push
xchg
push
imul
add
lea
xor
pop
repnz
mov
sar
jg
adc
pop
leave
je
stos
rol
or
not
inc
dec
add
mov
add
fcmovnu
or
pop
add
dec
push
jo
add
sub
xor
jle
jmp
nop
clc
pop
adc
dec
call
arpl
sbb
inc
movs
jle
std
pop
out
sub
stos
lea
retf
adc
sbb
test
test
(bad)
mov
add
rep
adc
add
and
das
add
push
sbb
jns
cmp
xchg
test
jge
mov
adc
xor
jge
jmp
(bad)
jge
pop
and
add
icebp
xchg
inc
in
pop
out
repnz
push
adc
retf
sbb
cs
xor
add
add
sub
js
stc
add
push
xor
lods
cmp
loopne
jmp
into
rol
xor
pop
jbe
mov
mov
rcl
jne
pop
xchg
in
xchg
dec
es
rol
retf
xchg
adc
cmp
dec
dec
dec
inc
or
cmps
jns
cmps
add
add
call
fwait
xchg
dec
sbb
adc
jno
mov
repz
repz
out
sbb
jnp
repz
sar
loopne
xor
dec
repz
repz
add
fcmovbe
aam
and
cmp
mov
and
xchg
inc
cwde
mov
ror
inc
add
(bad)
das
and
mov
pop
scas
mov
mov
xchg
xchg
lahf
jne
sub
push
add
loopne
das
cmp
mov
inc
push
add
adc
loopne
lahf
inc
add
xchg
jle
jmp
(bad)
cmp
add
push
mov
cmp
xchg
ja
cmp
dec
mov
adc
in
pop
cmp
xchg
fdivr
sub
hlt
(bad)
(bad)
lea
jo
in
mov
adc
dec
dec
pop
mov
push
imul
dec
add
mov
(bad)
or
fist
pop
mov
pusha
or
in
ja
adc
enter
push
popa
hlt
xor
cmp
test
pop
pop
test
mov
adc
add
rol
jmp
cwde
mov
inc
pop
mov
jp
lods
xchg
adc
jecxz
push
call
fcmovnu
pusha
mov
fcmovbe
cs
jp
pop
ret
sti
pop
jne
or
xor
data16
cmp
ja
outs
cmp
das
ins
or
push
pusha
dec
adc
inc
dec
mov
sbb
push
lea
sbb
gs
jne
xor
cmp
jle
loope
dec
cmp
and
jl
(bad)
cmps
pusha
fist
inc
add
jge
push
adc
js
pop
inc
dec
enter
(bad)
popa
loope
test
addr16
mov
push
xchg
mov
repz
xchg
fmul
push
fidivr
push
cmp
mov
test
adc
bound
mov
and
aad
popa
es
fnstsw
sub
and
ds
xor
xor
arpl
mov
push
push
shr
les
add
retf
push
add
in
jbe
(bad)
sti
pop
cld
cmp
mov
jle
add
lods
ret
(bad)
mov
inc
cmp
jl
rcl
push
push
or
or
arpl
std
and
lds
mov
aas
fs
add
mov
sub
xchg
and
add
jle
push
jno
mov
in
lea
hlt
adc
or
fdiv
push
lods
add
imul
test
sar
cmp
dec
sbb
mov
mov
add
push
adc
int3
pop
cmp
mov
sub
stc
add
aaa
mov
in
aas
xchg
pusha
or
jg
jo
in
ret
mov
jo
xchg
test
xchg
inc
pop
(bad)
leave
sbb
je
adc
or
in
add
xor
inc
inc
mov
and
add
xchg
and
loopne
cdq
clc
test
jbe
add
dec
cmp
das
push
call
inc
cmps
add
lods
adc
or
mov
mov
jle
ds
in
arpl
mov
jo
lods
adc
sub
ds
clc
add
inc
mov
shr
mov
mov
(bad)
adc
pop
cmp
call
dec
adc
ror
push
popf
jmp
jl
add
sub
mov
or
rcl
push
mov
nop
cs
cmp
lods
or
push
cmp
in
add
adc
or
sub
pusha
mov
nop
ret
fld
push
sub
and
shr
mov
rcr
cmp
add
xor
mov
add
test
sbb
stc
or
shr
sub
jecxz
mov
cmp
je
pop
int3
inc
mov
repnz
ret
mov
cld
jbe
pop
mov
xchg
mov
pusha
jae
mov
pop
out
push
lahf
(bad)
xchg
cs
or
and
or
das
mov
pop
dec
lea
cmps
imul
add
pop
or
dec
mov
sbb
push
ret
adc
add
and
xor
test
push
and
(bad)
cmp
add
jle
pop
mov
ret
hlt
jp
sbb
pusha
je
add
adc
add
or
inc
xchg
call
pop
push
loopne
rcr
mov
add
jge
retf
jbe
mov
mov
jnp
mov
add
add
push
rol
enter
or
push
sbb
cli
jbe
mov
and
jge
jb
inc
mov
pop
or
aaa
pop
pushf
mov
imul
sbb
jb
enter
push
sbb
sbb
fadd
shr
popf
dec
and
adc
and
ret
xchg
pop
cmps
sub
scas
jb
(bad)
pop
fwait
callw
es
ja
icebp
mov
les
shl
inc
cmp
std
adc
push
xor
push
sub
cmp
dec
sub
cli
inc
nop
stos
sub
add
into
clc
mov
sub
push
rol
jno
add
adc
inc
mov
int
outs
xlat
rcl
out
pusha
jbe
add
dec
push
js
retf
int
shl
rcl
xchg
jns
mov
push
adc
mov
mov
rcl
lods
xchg
jmp
add
out
add
push
mov
push
dec
shl
pop
adc
shl
adc
call
mov
add
sub
or
cmp
push
scas
and
or
pop
sub
jle
lea
and
dec
xor
cmp
inc
loop
jbe
pop
adc
daa
inc
dec
add
ins
test
ds
or
mov
lods
mov
cmp
mov
adc
pop
cmp
xor
(bad)
cmp
jle
ss
pop
shl
push
inc
adc
jle
or
pop
(bad)
xor
movaps
xor
pop
ret
jg
inc
adc
jmp
setne
mov
push
jge
test
stos
outs
or
stos
sar
push
nop
jle
push
sbb
fdivp
aad
cdq
loop
add
add
adc
test
inc
movs
add
jp
inc
adc
(bad)
mov
out
cli
dec
inc
and
cmp
sub
mov
(bad)
jge
cmp
in
sbb
iret
and
push
(bad)
sahf
mov
call
sub
(bad)
in
sbb
cmps
adc
xchg
or
daa
je
dec
push
ds
jb
xchg
imul
clc
add
mov
adc
or
cmps
test
xchg
pusha
xchg
or
mov
daa
pop
dec
jp
jno
jae
popa
(bad)
neg
inc
mov
mov
loopne
cli
dec
jp
and
xchg
out
inc
push
(bad)
test
mov
(bad)
mov
cwde
xchg
xchg
adc
pop
jnp
push
popf
cmp
(bad)
xor
(bad)
cmp
xor
inc
jbe
mov
add
cmp
icebp
xchg
and
(bad)
push
mov
inc
push
into
push
pusha
out
test
ret
aaa
adc
ds
into
mov
sub
jg
imul
jae
xor
adc
cmp
lahf
push
adc
cs
test
enter
and
shl
cld
jne
sub
mov
push
mov
xor
ret
mov
adc
test
mov
or
shl
icebp
jmp
xchg
popa
sub
ss
retf
int
and
rol
push
inc
daa
xchg
xchg
(bad)
push
test
sub
xchg
cdq
pop
mov
test
adc
or
sbb
popa
and
xchg
cmps
(bad)
dec
xchg
or
jp
(bad)
loopne
pop
sbb
cmp
jbe
shr
div
(bad)
jbe
add
or
inc
sbb
and
sbb
cs
add
ret
into
lea
dec
jbe
jo
mov
mov
push
popa
cs
jno
jno
call
je
out
cmp
mov
xchg
pop
mov
ja
dec
retf
sub
mov
push
cmp
sub
scas
xor
lea
jnp
ficom
xor
add
div
inc
add
outs
push
or
call
or
test
jb
rol
inc
add
or
fstp
icebp
sub
push
xchg
rol
xchg
lds
add
jnp
push
xor
ret
sbb
xchg
or
in
add
mov
inc
cmp
cmp
rcr
xor
or
cmps
fst
add
cmps
or
jecxz
mov
add
add
push
sbb
(bad)
adc
jb
push
jl
mov
add
add
scas
xchg
retf
out
sbb
mov
inc
jnp
mov
sti
mov
sahf
lea
adc
lock
xor
adc
enter
fstp
mov
cmps
and
mov
out
and
dec
jl
cmp
jae
sub
add
das
xchg
lock
retf
retf
or
mov
in
cld
enter
pop
gs
add
aas
jmp
cld
xchg
jbe
inc
jl
stc
jae
inc
lahf
jne
sbb
mov
in
xor
pop
push
ja
pop
and
test
xchg
lea
mov
aas
cmc
inc
mov
call
enter
shl
pop
mov
xchg
test
jns
add
inc
or
jmp
aad
lock
iret
add
ins
dec
outs
lock
fwait
xor
adc
mov
inc
icebp
jae
sub
sbb
add
dec
ret
pop
push
or
test
call
retf
mov
(bad)
cmp
bswap
movs
mov
sbb
aad
aad
(bad)
or
(bad)
adc
stc
jp
mov
mov
movs
mov
(bad)
jmp
mov
pusha
test
gs
adc
push
add
push
xor
mov
xor
ja
pop
push
pusha
cmp
sbb
mov
jge
sub
pop
and
add
repz
stc
stc
fsub
jno
xchg
sub
adc
xor
aas
mov
adc
xchg
add
shl
pop
loop
pusha
add
sub
push
or
inc
inc
dec
jp
pop
mov
cwde
rol
adc
push
(bad)
or
aam
sub
xchg
and
mov
mov
sub
addr16
add
int
ins
rol
mov
js
fst
xchg
data16
dec
fist
pop
jecxz
lock
mov
push
popf
and
xchg
fld
jb
and
mov
add
adc
jecxz
pop
bound
jo
xchg
pcmpeqw
and
or
cmp
mov
rol
pusha
mov
adc
cld
inc
or
dec
push
jae
scas
xor
add
lock
jmp
pop
mov
mov
mov
or
adc
pop
pop
jecxz
ror
test
(bad)
jmp
stos
adc
mov
(bad)
xchg
adc
or
(bad)
push
mov
and
push
mov
sub
or
out
into
mov
mov
mov
adc
xchg
hlt
xor
mov
adc
pop
(bad)
cmp
mov
movs
ss
inc
inc
sbb
pop
inc
inc
mov
stc
push
cli
scas
test
cmp
pusha
test
rcl
jns
fadd
dec
xor
inc
aaa
jle
cmp
(bad)
pop
jge
mov
or
sbb
mov
(bad)
mov
add
xchg
stos
fld
push
(bad)
cmp
cwde
dec
push
jg
adc
sbb
mov
fwait
jae
sub
test
inc
ds
inc
add
add
jnp
dec
cmp
mov
pushf
retf
movs
fsub
in
add
adc
fs
push
sbb
in
(bad)
or
lock
inc
imul
xor
(bad)
xchg
push
push
and
loopne
out
pop
pop
push
xchg
sub
jno
push
aam
(bad)
hlt
push
add
or
push
rcl
mov
cs
mov
push
mov
mov
arpl
inc
pusha
ret
int3
and
pop
aaa
sbb
xchg
call
or
(bad)
jb
sbb
push
push
push
out
push
lea
cmps
sbb
push
jo
lods
push
add
cmp
add
and
cmp
jmp
push
sbb
pop
cmp
inc
dec
mov
sub
xor
movs
xchg
push
ret
pop
adc
sbb
add
xchg
add
cld
test
and
aas
xor
add
dec
scas
cld
(bad)
mov
inc
lahf
push
push
push
and
stos
inc
push
push
loop
loop
push
push
dec
repz
lea
std
mov
js
push
rcl
stc
or
push
sbb
mov
mov
mov
mov
fstp
je
ud0
lea
cmp
xor
(bad)
jb
lea
clc
xchg
call
(bad)
mov
dec
mov
aad
jl
mov
mov
jge
jae
mov
cmp
call
or
pop
test
mov
xchg
pop
jl
enter
(bad)
ror
sub
enter
fistp
mov
xor
pop
or
int3
or
pop
mov
jnp
retf
jno
or
mov
shl
sub
fmul
add
lods
add
add
push
in
inc
call
mov
jbe
out
jle
inc
lea
jge
push
or
lea
retf
out
mov
aaa
fsub
mov
and
jb
cmp
jp
sub
mov
(bad)
(bad)
mov
out
lahf
adc
mov
lea
in
xchg
imul
ret
sub
shl
fiadd
and
or
jae
mov
es
jno
cmc
inc
xchg
inc
retf
mov
repnz
xor
gs
add
inc
pop
test
and
sbb
and
push
jg
xor
(bad)
into
ja
or
outs
shr
icebp
jmp
xor
inc
outs
mov
inc
mov
mov
sbb
pop
ret
enter
dec
call
adc
inc
sbb
xor
sbb
inc
bound
es
or
mov
push
xchg
dec
imul
hlt
and
or
push
pop
je
and
adc
test
push
fld
xor
(bad)
out
and
add
inc
add
or
push
pmaxsw
dec
adc
push
xchg
inc
shl
mov
retf
push
cmp
jl
cmp
jg
push
stos
push
xchg
jnp
adc
je
dec
and
add
out
lea
out
lods
mov
ds
push
mov
cmp
push
sbb
inc
sbb
adc
dec
mov
dec
and
mov
sbb
add
cmp
sbb
or
cmp
dec
push
adc
arpl
loopne
mov
cmp
cmp
sub
mov
add
adc
jne
add
imul
dec
adc
pushf
or
and
cmp
imul
sbb
xchg
adc
pop
imul
add
inc
sbb
ret
dec
aas
inc
enter
in
ret
je
mov
cmp
cmc
fimul
add
adc
popf
inc
xor
inc
dec
mov
enter
retf
lahf
fcmove
and
sub
stos
movs
sub
(bad)
call
adc
rol
shr
push
jg
sbb
or
sti
cmp
jae
mov
(bad)
loop
adc
movs
lea
data16
inc
inc
pop
ins
pusha
add
jae
mov
pusha
cmp
loopne
mov
mov
push
mov
ror
rcl
add
test
dec
jns
loopne
cmps
sbb
popa
retf
mov
mov
js
mov
and
push
mov
push
mov
cmp
push
pop
dec
lods
lahf
xchg
call
js
in
lahf
add
sbb
inc
pushf
lock
fcomp
idiv
es
push
mov
aaa
sub
or
adc
push
call
mov
clc
lods
jo
xor
push
fadd
jg
cmp
adc
add
jbe
jmp
push
mov
int3
cli
or
loopne
mov
in
lock
clc
or
mov
mov
aam
test
add
mov
jbe
lea
or
push
inc
fsubr
pop
les
or
mov
add
xor
inc
imul
cmp
mov
call
add
(bad)
cmp
std
inc
pushf
push
inc
prefetch
or
(bad)
jge
dec
mov
xchg
xchg
xor
adc
je
fsubr
add
sub
push
nop
packuswb
cmps
pop
dec
or
test
pop
rol
out
fnstcw
rol
mov
iret
adc
add
sub
imul
in
pcmpgtd
jmp
or
xchg
and
lock
pop
clc
push
jne
mov
xor
pop
cwde
inc
mov
mov
add
add
clc
pop
(bad)
int
or
pop
xchg
push
push
pop
je
dec
push
stc
sbb
dec
(bad)
int3
push
xor
adc
or
pop
adc
jnp
fs
or
shld
adc
or
test
inc
dec
fsubr
cmp
(bad)
jne
xor
sub
push
or
mov
pop
lea
push
sub
sub
add
sub
cld
mov
jbe
in
push
push
cmp
push
pop
ins
cmc
dec
jge
add
and
mov
push
aaa
push
xchg
push
jb
or
or
xor
fcompp
mov
inc
cwde
and
inc
dec
xor
loopne
sti
xchg
push
jae
sub
sbb
xor
mov
add
test
cmp
or
push
fstp
inc
xchg
int3
dec
cmp
movs
in
add
push
or
sbb
pop
out
nop
add
xor
dec
ins
bound
add
call
clc
push
sbb
mov
nop
or
cdq
nop
or
cdq
nop
or
pushf
or
push
enter
loopne
sub
fs
cmp
out
xchg
fs
(bad)
xchg
push
mov
mov
(bad)
or
mov
sbb
sub
mov
sti
push
push
mov
cmp
repz
mov
iret
repz
out
int
inc
push
or
sbb
iret
repz
push
jb
add
and
stc
std
inc
or
or
or
and
xchg
adc
adc
(bad)
nop
mov
adc
sbb
and
sbb
push
mov
push
pop
and
fisttp
inc
add
and
cmp
add
into
xchg
sar
push
add
cmp
xchg
mov
pop
jne
fidivr
(bad)
push
imul
xor
lahf
push
or
stc
or
mov
push
cmp
cwde
or
fcom
sti
push
xchg
add
(bad)
push
cdq
sub
test
jg
pop
add
push
xchg
add
lods
ins
or
sub
ret
push
cmp
sbb
jecxz
mov
pop
and
sbb
test
fcomp
data16
or
js
push
or
jno
je
std
and
and
mov
cmps
fstp
daa
jns
sbb
and
iret
sub
(bad)
mov
xor
add
push
sti
stc
mov
mov
popa
pop
rcr
inc
pop
aas
or
jmp
push
or
rcl
push
and
add
or
dec
push
adc
inc
pusha
mov
push
adc
inc
adc
rol
jge
mov
pop
cld
cmps
rol
jns
xchg
xchg
aad
pop
xor
js
ret
test
mov
pop
inc
(bad)
and
dec
or
stc
nop
movs
xor
clc
leave
or
or
loopne
clc
in
sbb
push
adc
shl
push
pop
mov
add
push
sbb
pushf
jg
jle
cmp
xor
inc
je
inc
add
in
adc
outs
sbb
push
jge
pop
cmp
jnp
jg
pusha
xchg
add
jno
add
pushaw
fnsave
mov
cmps
pusha
shr
inc
in
push
jbe
in
adc
mov
sbb
sub
xchg
pusha
lods
jl
push
ja
xchg
(bad)
ret
dec
cmp
test
in
movs
push
sbb
dec
mov
or
cdq
sbb
mov
adc
mov
push
rcr
xor
(bad)
sbb
lods
bound
das
and
nop
dec
sbb
add
xor
ret
mov
push
imul
sti
add
jae
push
aaa
lea
out
sbb
sti
or
or
push
sar
add
lea
xor
outs
sbb
pop
mov
call
xor
push
and
xor
repz
dec
mov
or
rol
pop
(bad)
jbe
sub
hlt
dec
mov
mov
scas
sbb
push
adc
pop
js
cmp
aad
(bad)
es
pop
mov
or
sbb
sbb
pop
push
jmp
icebp
inc
shl
daa
add
pop
cmp
or
jg
jmp
fmul
enter
mov
(bad)
adc
xchg
or
cmp
or
mov
xor
(bad)
dec
adc
bound
or
pop
mov
mov
and
sbb
and
sub
sbb
push
push
clc
cs
mov
pop
xor
or
sbb
inc
shr
push
je
pop
add
push
shl
ror
cmc
pop
mov
or
mov
lea
xchg
mov
int3
jecxz
and
jbe
inc
gs
adc
xor
or
push
mov
mov
mov
clc
loopne
fmul
adc
adc
pop
loope
int3
mov
daa
(bad)
xchg
lea
jp
jns
sub
xchg
xor
push
mov
jnp
inc
mov
and
das
mov
adc
mov
inc
inc
sub
or
ret
fidivr
adc
pop
push
movs
stc
or
or
or
jae
call
pop
or
and
shl
dec
and
mov
jmp
icebp
imul
rol
mov
and
dec
fs
fs
jl
sbb
adc
in
mov
adc
aas
cmp
mov
sub
movs
add
push
cs
stos
or
push
jne
cmp
mov
or
mov
fisttp
sub
clc
lock
push
test
adc
mov
add
fistp
cmp
jne
inc
ret
push
xchg
lock
neg
push
lock
add
xchg
mov
fcmovb
iret
or
inc
push
sar
add
lock
sete
inc
add
scas
mov
jmp
ja
inc
std
adc
xchg
add
fs
cmp
aam
ret
pop
(bad)
jo
xor
and
fcomp
ror
not
rol
sub
push
or
or
shl
repnz
jmp
push
fs
test
mov
mov
out
add
movs
mov
cmps
nop
loopne
push
mov
retf
test
mov
inc
je
or
test
jno
lahf
adc
(bad)
lods
daa
nop
cmp
sbb
mov
cmp
arpl
lea
mov
mov
sbb
jmp
ins
test
push
js
lock
dec
(bad)
xor
push
dec
pop
sbb
mov
in
clc
and
popf
mov
and
xchg
add
je
xchg
test
pop
popa
retf
sub
mov
or
adc
js
jmp
mov
enter
pop
dec
ror
fwait
dec
daa
shl
mov
sar
adc
cmp
inc
mov
popa
test
fwait
push
ds
in
cmp
push
in
or
cs
xor
aam
push
sub
push
repnz
adc
add
sbb
mov
adc
sub
sub
add
cmp
daa
sub
out
cmp
add
fwait
jl
mov
out
dec
and
ja
inc
sti
jmp
jb
sahf
and
mov
jne
pop
add
add
lock
mov
test
(bad)
mov
mov
mov
or
adc
add
rcr
inc
xchg
sub
ret
jecxz
sbb
mov
movsx
and
ja
add
jge
and
je
inc
or
js
adc
mov
xor
add
adc
inc
and
inc
add
(bad)
xor
shl
fadd
sbb
or
pop
mov
inc
inc
inc
ds
jmp
xchg
or
pop
loopne
cmps
jp
or
xchg
cmp
(bad)
push
pushf
mov
cdq
mov
or
aad
push
or
and
add
lar
mov
push
fild
test
mov
jp
clc
ret
jge
test
mov
xor
xor
(bad)
sub
and
xchg
rcl
sahf
inc
xlat
lock
data16
inc
xor
dec
popa
adc
fimul
inc
ins
and
div
mov
dec
js
or
push
or
fs
mov
sbb
add
jg
add
mov
rcr
push
cli
or
mov
adc
pusha
jg
jno
mov
jo
push
mov
xchg
mov
ret
sub
shl
jne
pop
lahf
(bad)
shl
mov
fnstenv
imul
and
mov
or
test
xor
adc
sar
push
inc
mov
int
dec
add
add
or
dec
or
mov
stos
fld
pop
add
push
inc
cmps
jne
into
in
sub
dec
add
xchg
ins
or
jmp
pop
lock
inc
mov
sahf
mov
lahf
aam
or
add
inc
inc
sub
xchg
lock
sbb
add
cmp
cmps
fild
adc
cmp
sbb
and
xor
sub
add
mov
sub
sub
xor
xor
push
adc
push
retf
xchg
push
fwait
push
xchg
pop
xor
lea
cdq
or
mov
in
mov
or
inc
xor
add
cmp
loopne
jp
or
in
pop
cld
lea
sbb
adc
dec
pusha
mov
ret
jae
sub
dec
(bad)
fs
ret
dec
pop
inc
cmp
iret
test
test
push
sbb
pop
or
sub
adc
fiadd
test
call
jmp
push
add
(bad)
xchg
daa
clc
mov
and
add
ret
test
inc
aas
jno
cmp
aas
add
cmp
(bad)
hlt
pop
cdq
jb
or
inc
lods
(bad)
or
adc
adc
and
xchg
mov
sub
xchg
aam
sti
jmp
fnstsw
data16
push
cmps
sbb
popf
sbb
jnp
loop
test
(bad)
nop
or
imul
or
jnp
and
popf
sbb
stc
cwde
js
pop
cld
pop
and
push
push
std
xor
sub
jle
mov
sub
les
add
push
pop
cmps
pop
dec
jle
ror
cmp
pop
imul
loope
push
add
fprem
add
mov
sbb
add
push
lahf
test
sbb
cmp
leave
lahf
stos
mov
add
out
ins
loope
pop
mov
rep
call
jae
xchg
or
or
jb
pop
or
adc
xchg
retf
adc
sbb
mov
mov
add
fsub
movs
inc
inc
(bad)
and
push
ret
mov
fist
call
jmp
pop
pop
call
cli
aaa
ror
mov
test
sti
jbe
push
scas
mov
dec
imul
mov
les
add
add
push
or
test
pop
dec
jmp
mov
out
ja
cwde
mov
mov
fs
cmp
mov
icebp
dec
push
add
call
arpl
and
test
inc
loopne
dec
in
mov
pop
cmp
into
scas
inc
push
push
or
pushf
add
retf
sti
jl
rcr
adc
call
adc
or
dec
jne
push
mov
xchg
stos
push
aad
adc
lods
ins
(bad)
popf
movs
std
test
or
or
adc
cmp
mov
mov
mov
into
(bad)
sbb
xchg
pop
rol
add
jb
add
outs
test
mov
pop
xor
xor
inc
in
add
mov
fmul
pop
xchg
or
fisttp
and
push
sbb
je
adc
jbe
lods
jae
add
test
inc
xchg
dec
arpl
loopne
dec
mov
jo
or
adc
outs
sar
aam
mov
xchg
mov
add
ret
mov
retf
(bad)
std
pushf
aaa
or
jmp
inc
jg
jl
mov
jge
out
das
sub
push
mov
pop
pop
mov
dec
and
jae
dec
adc
push
sub
cs
mov
jle
adc
lds
mov
mov
inc
ds
enter
aas
not
xor
loopne
mov
mov
xor
cmps
lock
sub
adc
adc
cmp
or
repnz
adc
aas
std
std
or
jne
dec
jb
mov
addr16
xor
bnd
adc
mov
inc
jae
pop
nop
popf
lods
popf
and
ror
in
ss
sub
push
or
jl
dec
and
inc
push
daa
(bad)
shl
push
out
sahf
adc
in
popa
cmp
push
scas
sbb
push
movs
jb
or
sub
dec
push
fs
cld
and
or
xor
cmp
sbb
add
mov
add
mov
dec
in
push
cmp
bound
xor
not
pop
enter
jnp
jo
pop
enter
in
pop
enter
add
cmp
cdq
nop
or
and
fwait
nop
or
xor
adc
lods
stos
adc
mov
sub
xchg
fs
or
dec
jns
int
int
dec
addr16
push
cmp
dec
int
xor
je
cmp
jne
xor
mov
add
aaa
retf
outs
out
jmp
or
das
dec
pop
jo
jb
xor
xor
sbb
adc
and
mov
loop
pushf
in
ret
add
jo
add
mov
loop
mov
adc
adc
cmp
imul
pop
adc
mov
adc
cmps
cmps
and
inc
fs
clc
sub
xchg
or
and
add
pop
into
ja
push
sbb
sti
add
pop
and
jg
sbb
add
dec
add
add
or
sub
mov
mov
loopne
or
sbb
sbb
add
movs
push
push
test
cmp
mov
sbb
and
push
pop
int3
icebp
mov
inc
add
jnp
and
add
ss
push
js
add
add
add
or
clc
retf
adc
xor
dec
adc
cmp
shl
mov
adc
sub
adc
add
fbld
fcmovu
mov
add
loopne
jecxz
adc
mov
add
mov
pop
push
popa
ret
rol
add
xor
mov
inc
jnp
xchg
mov
icebp
in
ds
(bad)
xchg
(bad)
sub
push
push
mov
mov
mov
sbb
cmp
movs
outs
retf
or
gs
adc
jmp
fisub
(bad)
out
add
push
mov
in
dec
adc
bound
cmp
in
add
inc
bound
lock
dec
mov
fidivr
popf
add
in
mov
gs
in
mov
mov
lea
mov
ins
mov
adc
cmp
xchg
adc
cmp
dec
mov
and
xor
shl
mov
mov
imul
fstp
shr
test
pushf
jmp
sub
sar
push
xor
jbe
cmp
retf
repz
sub
pop
add
pop
pop
jns
mov
jne
and
cmps
dec
in
rcl
out
repnz
js
(bad)
shr
cmp
sub
push
adc
in
and
je
lea
mov
xchg
adc
outs
lea
addr16
xor
or
loopne
pop
push
lock
dec
jne
inc
push
ds
cmp
test
in
test
pop
sbb
push
and
jne
pop
inc
inc
test
clc
add
(bad)
out
shl
(bad)
pop
xor
int3
adc
cld
xchg
pop
or
sbb
sub
pusha
(bad)
xchg
cmp
xchg
adc
test
and
cmp
je
cdq
mov
push
push
(bad)
mov
js
je
(bad)
mov
aaa
es
add
push
push
jmp
mov
sub
inc
outs
rcl
loop
xor
mov
push
test
iret
dec
ds
in
sbb
jl
call
dec
push
adc
pop
pop
lds
dec
push
xor
and
test
mov
push
dec
mov
add
in
mov
icebp
pop
or
push
sar
fiadd
cmp
sbb
es
cmps
aam
shl
inc
mov
mov
cmovg
fist
mov
push
cmovl
cld
adc
pusha
pop
sbb
push
push
cli
dec
sbb
sar
mov
ret
jae
mov
fcmovne
mov
or
lock
test
enter
push
mov
inc
jb
push
mov
aam
push
push
in
lods
movs
imul
cs
mov
push
push
mov
imul
jmp
lea
cmp
je
je
mov
or
jg
ret
movs
mov
push
jl
mov
and
mov
or
inc
mov
imul
xor
sub
retf
out
or
mov
adc
lock
sub
push
push
test
mov
sub
jle
icebp
je
dec
stos
out
movs
inc
adc
(bad)
aas
mov
jmp
jmp
mov
imul
push
mov
push
icebp
sahf
or
(bad)
xor
cli
cmp
and
clc
sub
lea
or
lods
push
push
imul
ins
sbb
add
idiv
sbb
mov
add
(bad)
mov
clc
mov
inc
jno
sub
mov
movs
or
jb
(bad)
push
xor
gs
lahf
cli
adc
push
mov
mov
push
or
lods
jbe
xor
mov
je
xchg
mov
xlat
pop
add
pop
(bad)
or
push
mov
sub
sbb
data16
mov
push
jl
fstp
add
dec
add
rol
mov
jb
sub
stos
shl
mov
xor
sub
sub
jl
sub
sub
fist
mov
or
push
pop
dec
or
and
push
jb
sbb
pop
pop
inc
mov
pop
pop
int3
outs
dec
loopne
sub
ror
sub
mov
sbb
push
fcmovnbe
inc
and
js
clc
push
add
jl
aam
push
in
push
push
mov
sar
outs
cmps
aaa
pop
sar
push
outs
mov
sbb
aam
sbb
(bad)
scas
mov
mov
add
enter
ins
mov
cmp
fidiv
xor
mov
dec
push
cmp
jge
inc
or
in
add
je
cmps
mov
mov
or
(bad)
loopne
mov
outs
scas
adc
or
aam
mov
inc
retf
aam
sub
in
cmp
test
add
in
mov
inc
mov
xor
mov
push
aam
in
add
add
or
add
aam
enter
jl
mov
sub
dec
mov
adc
mov
xor
fisttp
(bad)
jne
push
mov
push
push
mov
fisttp
mov
cmp
int
inc
out
(bad)
ror
cmp
sbb
push
add
pop
mov
outs
in
(bad)
shl
xchg
push
dec
loopne
std
nop
loopne
rcl
sti
adc
int
cmps
dec
push
and
inc
iret
inc
or
loopne
shr
loop
ins
or
xor
sub
dec
and
cmp
daa
mov
in
mov
add
mov
rcl
aas
or
(bad)
mov
retf
pop
hlt
ror
shl
inc
or
cmc
add
mov
push
jno
aam
mov
into
cld
out
aaa
lods
inc
add
adc
dec
or
sub
inc
in
int3
cmc
pop
setl
and
dec
cmp
jne
add
jecxz
inc
jns
cmp
cs
int3
sbb
mov
xor
push
sbb
pop
aam
adc
cmp
aad
cmps
pop
lods
sbb
cmp
ret
adc
jg
je
add
stos
sub
or
push
jne
and
(bad)
adc
aas
test
jmp
mov
(bad)
adc
nop
mov
dec
(bad)
rcl
push
or
jmp
xchg
ins
test
xchg
and
adc
pop
(bad)
loopne
retf
jo
dec
mov
fs
mov
or
stos
aaa
inc
push
ss
sbb
add
sub
std
sub
dec
sub
push
add
test
fsubr
mov
test
adc
or
fcom
adc
ret
pusha
or
pop
btc
adc
inc
adc
pushf
sub
xor
adc
sahf
je
mov
jge
pop
inc
adc
mov
inc
pop
in
mov
cmp
pop
sub
mov
(bad)
jmp
mov
adc
mov
cdq
and
sbb
jl
sub
cmp
adc
sub
pop
cmp
pushf
mov
add
and
dec
aad
or
dec
adc
add
mov
pusha
inc
and
inc
and
rcl
lds
in
jbe
sub
cmp
or
and
adc
(bad)
adc
lea
push
hlt
sub
mov
cmp
pop
and
adc
inc
add
jne
inc
cmovge
mov
dec
mov
fnstenv
jne
rcl
pusha
enter
and
rol
mov
into
dec
and
gs
inc
inc
push
push
cmp
mov
inc
pop
or
cmp
add
lock
dec
push
mov
push
cmp
test
div
ret
xor
or
sbb
or
in
ffree
pop
mov
or
pop
dec
mov
ret
mov
lahf
dec
adc
data16
or
cmc
inc
mov
int3
xchg
loope
mov
pop
adc
and
adc
dec
add
fidivr
and
fld
je
adc
lahf
ror
pop
es
aas
adc
dec
xor
(bad)
pop
jne
xor
mov
inc
or
retf
sbb
into
push
aas
pop
pop
pop
sbb
add
jb
dec
sub
mov
add
xor
cmps
sub
inc
sbb
push
je
jns
jae
jae
dec
xor
data16
mov
sub
xchg
jp
inc
(bad)
jle
and
jge
and
fmul
sub
pop
icebp
ins
sti
shl
mov
repnz
jne
loopne
fisub
lock
setl
push
cmp
push
out
adc
in
movs
xor
add
xor
or
xlat
or
test
inc
add
(bad)
xor
and
sbb
push
arpl
out
and
dec
jae
pop
cmp
mov
inc
inc
push
xor
add
adc
sbb
mov
loopne
les
cld
jb
and
mov
cmp
or
mov
pop
push
mov
call
mov
mov
xor
cmp
jne
mov
mov
jp
mov
pop
mov
cmp
je
in
sub
adc
and
add
push
sbb
rcl
cmp
jg
int3
mov
push
add
push
sbb
inc
xor
push
pop
cmp
jno
cmp
cld
jno
out
fild
not
add
repz
cmp
push
loop
(bad)
fisttp
mov
mov
ret
push
adc
fbld
mov
lahf
push
push
jle
push
or
ss
inc
into
test
ss
loopne
inc
sub
mov
cmp
aad
add
pop
jne
(bad)
into
int
jmp
push
aas
adc
add
or
cmp
or
inc
and
push
fdivrp
xchg
inc
xchg
mov
xchg
ds
imul
pop
aaa
cmp
sub
out
xchg
test
dec
push
mov
es
idiv
pop
pop
sbb
jg
push
sub
rol
out
loopne
add
xor
pop
add
sbb
cmc
adc
jg
xor
(bad)
or
mov
fistp
xor
adc
es
dec
pop
hlt
sbb
adc
inc
ret
and
or
add
scas
dec
sub
in
mov
dec
pop
push
lea
mov
lock
push
sbb
(bad)
in
inc
sbb
ror
scas
jae
leave
push
push
call
scas
or
fdiv
sub
cmp
fcom
pop
sbb
or
call
clc
jne
rcl
pop
add
inc
cmp
push
push
pop
mov
adc
movs
xor
loope
sub
ror
jo
scas
push
inc
pop
xchg
pop
jb
sar
cmp
cs
xor
sahf
fnstsw
adc
add
mov
pushf
dec
add
test
fmul
xchg
pop
sbb
fbld
shr
adc
ret
rep
adc
or
cmps
push
(bad)
cwde
inc
and
xor
in
aaa
or
(bad)
ins
mov
jno
rol
mov
and
in
and
sbb
mov
push
inc
scas
push
or
pop
mov
xchg
push
inc
or
mov
mov
push
sbb
xor
push
cmps
xor
push
jmp
mov
jnp
xor
xchg
stos
mov
push
dec
or
ds
push
les
das
or
data16
and
out
movs
mov
jb
xor
mov
pop
js
adc
inc
xchg
xor
(bad)
clc
push
pop
mov
jne
mov
(bad)
in
test
dec
push
test
mov
sub
in
sub
mov
pop
and
inc
or
cmps
inc
xchg
mov
sbb
or
dec
mov
inc
cmp
sub
cmp
call
sub
adc
add
push
cwde
cmp
pop
pop
rcl
cmp
sar
and
std
pop
pusha
lea
cmp
enter
and
push
ret
cli
and
in
mov
jne
hlt
(bad)
(bad)
aad
sti
mov
in
and
dec
mov
push
xor
mov
pop
cmp
xor
jl
mov
push
cmp
(bad)
fsubr
pop
ficom
mov
mov
dec
clc
inc
fs
mov
push
push
lea
cmps
lods
mov
sub
dec
sub
pusha
aam
aam
push
adc
in
idiv
jmp
call
cmp
je
jno
sub
lds
xchg
push
sbb
stos
push
fisub
jo
cmc
cmp
in
stos
fdivr
xor
jb
in
es
pop
add
and
mov
fisttp
push
push
int3
xor
sar
mov
test
or
xchg
hlt
test
or
jecxz
arpl
mov
sub
mov
(bad)
adc
test
mov
pop
mov
jp
pop
adc
mov
adc
mov
shl
inc
cmps
int3
ins
add
push
cs
vzeroupper
mov
out
(bad)
mov
push
adc
adc
add
mov
pop
push
mov
test
fadd
xor
movs
popf
ins
cld
or
adc
dec
pop
stc
out
mov
mov
sbb
pop
xlat
sbb
xchg
adc
ds
cmc
push
jg
and
(bad)
mov
mov
add
cmp
sbb
sbb
inc
loopne
xor
cmp
cmp
loopne
push
loopne
shr
lods
push
push
pushf
pop
add
dec
adc
xchg
cdq
add
and
jo
inc
xchg
jns
call
jl
mov
mov
jmp
add
inc
dec
mov
cmp
sbb
into
add
and
jo
out
push
sbb
push
cmp
sub
xor
cmp
jp
push
pushf
adc
or
cmp
stos
jbe
and
push
mov
sub
idiv
dec
xchg
xchg
sahf
test
aam
or
retf
sbb
jmp
movs
mov
xor
or
pushf
ins
pop
imul
xchg
ins
inc
ret
and
adc
out
jo
xchg
out
sbb
mov
add
test
jbe
adc
mov
push
aas
das
cmp
je
lds
push
adc
(bad)
jecxz
inc
jbe
lods
inc
adc
fcom
test
mov
jmp
nop
lea
adc
mov
add
push
aam
sub
test
add
std
mov
pop
stos
xchg
xor
lods
cld
div
pop
inc
pop
lock
push
ins
push
add
lds
shl
add
retf
stc
lods
xor
or
push
pop
cmp
ss
or
mov
stc
js
mov
loopne
rol
fsub
fdivr
mov
cmp
fldenv
icebp
fimul
inc
mov
lahf
pop
pop
in
xor
and
and
ror
push
in
dec
cmp
aam
es
in
cmp
fistp
adc
adc
adc
cmp
dec
fbld
xor
dec
shr
sub
adc
xor
pop
mov
pop
stos
inc
xor
es
mov
movs
push
add
loope
sldt
inc
mov
xchg
pop
or
adc
adc
jne
pop
pop
push
iret
or
addr16
cmp
inc
adc
fcmovu
lock
push
jge
pusha
test
std
xchg
pusha
or
fild
out
aad
xor
hlt
xlat
jo
dec
outs
push
inc
repz
dec
pop
push
sub
dec
frstor
or
mov
pop
adc
inc
jb
mov
jne
jmp
xchg
lock
icebp
jl
loop
pop
scas
ret
loopne
add
and
xchg
in
pop
(bad)
cmp
xchg
movs
sahf
dec
sub
dec
or
mov
ja
dec
or
push
push
add
mov
inc
mov
sbb
dec
jo
xor
pop
into
or
lock
test
in
cmp
push
xchg
xor
add
into
daa
(bad)
and
dec
addr16
stos
das
push
sub
sbb
sbb
pop
push
out
into
ins
ja
shr
add
les
fsub
xor
pop
shl
jl
call
xor
mov
or
rol
dec
sbb
inc
mov
data16
sar
adc
shl
xor
jb
test
(bad)
call
inc
mov
jmp
mov
xchg
push
inc
pop
and
out
or
(bad)
test
lea
xor
lea
daa
pushf
stos
cmp
mov
adc
inc
test
jmp
pop
(bad)
(bad)
mul
xor
inc
stc
jae
mov
cmp
je
mov
inc
inc
lods
into
out
ins
sbb
mov
sqrtps
iret
rcl
lods
add
test
enter
adc
loop
adc
ins
in
test
push
loopne
jmp
sub
bound
jo
adc
cli
add
mov
ret
mov
jae
lea
push
xor
sub
jmp
cmp
fadd
add
cmps
mov
xor
jbe
push
inc
add
and
add
cwde
leave
sar
mov
pop
jp
retf
enter
or
inc
ss
or
push
inc
mov
mov
add
or
rcl
(bad)
lock
add
ret
retf
test
add
mov
add
dec
push
push
stc
test
mov
xchg
cmp
mov
cmp
jb
mov
mov
or
icebp
fild
sub
add
cmovo
jg
inc
or
jmp
rcl
lock
mov
pop
sbb
je
lods
cmp
add
int3
cmp
cmp
sub
xchg
adc
fidivr
(bad)
mov
mov
mov
int3
ja
cmp
xor
mov
xor
(bad)
dec
mov
mov
push
mov
sub
push
xor
add
push
add
adc
sub
sbb
dec
adc
pop
mov
jl
imul
mov
aas
sub
push
pop
pop
mov
cmps
pop
dec
jmp
or
fstp
mov
ror
and
cs
xchg
push
shl
lea
shl
shl
hlt
push
sbb
xchg
cdq
mov
shr
enter
adc
ss
sti
aaa
mov
cmp
das
mov
add
jmp
jmp
dec
repnz
mov
mov
fs
add
test
iret
test
dec
cwde
je
ins
lock
jne
xchg
add
test
push
dec
repnz
mov
adc
mov
xor
push
sub
push
pop
ret
add
retf
mov
and
mov
xor
ja
jne
xor
rcr
and
pop
sbb
cdq
sub
cmp
cmp
es
lea
xor
mov
sbb
mov
ins
push
or
sbb
add
mov
(bad)
bound
jg
mov
ins
sti
out
(bad)
cmp
int
lods
cmp
loop
mov
adc
inc
icebp
add
and
sbb
mov
std
sbb
mov
(bad)
cmp
je
and
jg
fcom
sbb
jg
cmps
stc
and
and
xor
pop
(bad)
mov
mov
inc
test
ja
pop
mov
fs
inc
call
inc
push
cmp
cmp
fwait
test
ror
pop
inc
fmul
hlt
ret
xor
imul
pop
jne
jbe
jo
cmps
dec
pop
adc
sahf
xor
lock
push
and
inc
and
lea
push
and
ror
daa
jae
or
xchg
out
rol
aam
retf
ret
into
pop
mov
xor
jnp
push
inc
xchg
mov
loope
adc
push
ror
cmp
stos
add
sbb
jnp
shr
add
jns
(bad)
das
sbb
pop
iret
adc
xchg
xchg
cmp
int
mov
sar
dec
jbe
not
sub
jmp
stos
dec
pushf
(bad)
and
iret
cmp
or
mov
mov
cmp
dec
cmp
cmp
push
ret
mov
push
les
cld
lds
int3
push
mov
push
ja
sub
cmp
xor
dec
mov
inc
jne
ins
fnstcw
xlat
adc
xor
inc
or
(bad)
jbe
jae
cmp
nop
outs
adc
iret
call
adc
mov
adc
fld
out
pop
mov
outs
sti
xor
cmp
push
pop
or
xchg
or
fild
or
rol
inc
and
xor
pop
cmp
imul
and
inc
jae
push
mov
push
paddusb
sub
mov
xor
dec
adc
test
inc
sahf
rcr
out
in
test
push
or
inc
xchg
or
mov
and
jne
add
xchg
dec
sbb
sbb
sub
push
jns
shr
or
(bad)
mov
cmp
cmp
mov
cmp
and
add
and
fidivr
sbb
and
xchg
jo
dec
das
js
and
pop
and
jno
mov
int3
sahf
jge
adc
mov
push
jnp
fadd
bound
add
vmread
or
mov
repnz
pop
push
inc
mov
jb
inc
ret
fimul
ret
rcr
nop
xor
add
mov
and
(bad)
mov
pop
bound
imul
jo
or
imul
add
push
sub
enter
mov
stc
mov
mov
sbb
leave
pushf
push
xor
test
inc
adc
mov
push
ins
or
pusha
add
shr
lea
lods
push
sbb
pop
add
mov
mov
in
nop
dec
or
mov
adc
pop
xchg
jne
cdq
jge
movs
adc
fdiv
jo
mov
ret
pop
mov
pop
sbb
push
add
pop
aad
inc
sahf
add
addr16
pop
sub
add
mov
push
xor
push
stc
mov
push
sub
fs
push
mov
jge
adc
sbb
pop
clc
imul
mov
adc
or
xchg
dec
je
add
dec
or
cmp
jb
jmp
mov
or
inc
rcl
sbb
or
clc
mov
mov
push
(bad)
aam
mov
and
sbb
mov
je
dec
xor
push
outs
pusha
mul
pop
adc
je
push
sbb
add
mov
ss
ss
cmp
and
cmp
rol
fld
jle
mov
not
jo
dec
popa
cwde
adc
ss
sub
dec
test
mov
ret
loopne
jno
add
xor
push
pop
or
inc
les
push
inc
xchg
fs
inc
mov
in
dec
mov
or
jo
retf
push
or
fidiv
and
or
out
ror
sbb
mov
pop
push
loope
jo
pop
cmp
mov
push
cmp
clc
cs
push
xor
cmp
xor
push
nop
and
mov
jns
add
dec
add
dec
aad
popf
sbb
or
stos
int
nop
push
ret
cmp
cmp
jb
sbb
mov
out
(bad)
mov
test
mov
cmp
push
jmp
fs
dec
cmp
push
enter
add
sub
fs
clc
pusha
mov
or
mov
sub
lods
nop
push
jo
xchg
push
jae
int3
mov
push
cdq
test
jmp
pop
das
lea
sbb
jmp
pop
popf
mov
sub
sbb
mov
aad
add
rcr
(bad)
sbb
fcom
mov
and
mov
lahf
adc
mov
fiadd
mov
call
jmp
ins
pusha
jl
xchg
jl
mov
push
dec
dec
dec
pop
add
push
pop
mov
push
and
inc
pop
or
lahf
out
adc
sbb
add
xchg
sbb
adc
push
cmp
ins
pushf
add
mov
adc
(bad)
cs
add
sar
into
mov
mov
dec
adc
mov
pop
add
enter
pop
adc
and
mov
rcr
(bad)
or
das
push
popa
loopne
cmp
inc
jle
push
call
cmp
push
jl
xchg
mov
and
repz
jne
mov
and
inc
pop
inc
int3
in
je
sbb
in
les
adc
movs
mov
xor
sub
pusha
add
retf
loopne
test
pop
lock
push
pop
inc
sahf
loopne
in
int
movs
push
pushf
in
aam
aam
sub
and
cmp
outs
sbb
lock
femms
push
pusha
in
(bad)
jle
dec
push
test
cmp
sub
xor
rcr
inc
je
lock
and
mov
push
mov
mov
add
and
mov
sub
cwde
mov
add
cmc
sub
inc
dec
in
inc
ret
(bad)
in
sub
push
add
test
dec
and
sub
dec
adc
pusha
cdq
add
ins
ret
push
hlt
fidiv
mov
pop
xchg
es
hlt
(bad)
int3
call
cmps
cmp
in
push
xchg
jb
ja
adc
mov
mov
ror
aaa
and
jns
in
pop
adc
out
jmp
popa
inc
loopne
or
daa
jne
(bad)
and
cmp
(bad)
cld
adc
or
mov
and
push
and
icebp
pop
mov
out
or
mov
xlat
and
jmp
or
dec
inc
loop
prefetch
(bad)
xor
pusha
pusha
mov
dec
mov
push
inc
jb
outs
cld
test
add
xor
hlt
inc
(bad)
imul
inc
ret
jg
push
xchg
jp
or
sub
es
(bad)
daa
mov
or
mov
inc
add
sub
test
and
jg
xor
dec
sti
inc
(bad)
and
push
and
jnp
sbb
pop
lock
push
call
lods
or
es
jo
neg
lods
lock
push
popa
or
push
ins
test
retf
push
(bad)
mov
cmps
dec
inc
xor
inc
xor
dec
cmps
in
mov
and
add
fwait
dec
push
mov
push
ret
sub
ret
xor
scas
ret
jg
push
je
lea
mov
adc
mov
fstp
dec
inc
lea
pop
cld
jno
mov
cdq
xchg
scas
push
maxps
push
xor
int
fs
addr16
lea
sub
mov
inc
xor
pusha
int3
jb
adc
inc
(bad)
sar
stc
cmp
and
xchg
add
ret
add
push
or
or
ja
rcl
pop
int3
sbb
pop
aam
xor
cli
mov
ret
cmp
pop
movs
hlt
nop
aad
dec
add
sbb
pop
adc
adc
ret
adc
lods
cmps
pop
mov
popf
sahf
lea
jmp
xchg
ss
and
in
mov
pop
mov
dec
jno
adc
cmp
add
pop
add
cmp
nop
add
rol
jno
dec
nop
sbb
mov
mov
cli
je
push
pusha
sti
enter
xor
mov
pusha
jge
cmp
sub
mov
add
and
xchg
pop
aas
fwait
pop
add
push
push
pop
and
cmps
fstp
xor
mov
icebp
pop
lods
inc
sub
jb
mov
push
mov
push
add
add
scas
and
mov
push
enter
jle
lahf
test
inc
xchg
test
inc
ret
or
aam
mov
in
adc
sbb
or
pushf
call
mov
lock
add
ss
push
adc
pop
xor
mov
ret
jne
mov
adc
repnz
jl
push
sub
je
push
mov
add
push
and
xchg
xchg
push
add
push
mov
and
mov
lea
arpl
or
popf
xchg
dec
jnp
ret
push
cs
xchg
cmp
adc
ins
mov
xchg
repnz
dec
(bad)
jmp
ja
inc
fwait
add
das
pop
mov
adc
push
xor
sbb
and
popf
adc
les
pop
mov
push
add
or
shl
mov
aam
and
ficom
lea
sub
cmc
jb
jl
xor
cmp
(bad)
mov
xchg
jbe
cmp
adc
imul
or
rcr
push
je
and
test
push
dec
lock
into
ret
pop
jmp
dec
and
pop
lahf
scas
or
push
jle
in
and
xor
mov
pop
mov
nop
int3
movs
inc
or
mov
sub
cmps
sbb
les
test
add
mov
sbb
daa
adc
xor
dec
dec
dec
xor
mov
adc
sahf
and
je
clc
cmp
loop
popa
lea
pop
enter
push
icebp
in
int3
inc
xor
xchg
jecxz
std
pop
cmp
dec
adc
fimul
or
and
adc
les
sbb
outs
outs
jl
call
dec
les
add
aaa
pop
xor
jns
mov
mov
push
int3
cmp
(bad)
cld
jne
mov
fcom
fcom
in
adc
pop
sbb
and
sbb
das
add
or
add
ror
push
sar
xchg
add
loop
jo
ins
call
or
push
sbb
adc
arpl
fdivrp
call
dec
push
adc
mov
mov
adc
jge
cmc
call
fmul
iret
icebp
sbb
imul
mov
pop
sub
sahf
sbb
cmp
sbb
or
repz
or
shl
push
je
sti
cmovo
mov
ret
mov
sti
pop
dec
ret
lea
sbb
add
sti
inc
mov
jmp
loope
mov
or
push
xor
add
sub
(bad)
cmp
dec
das
add
add
rol
add
nop
adc
jecxz
mov
dec
mov
sub
jge
lods
add
or
sub
xchg
ret
xchg
mov
(bad)
call
jne
pop
dec
cmp
out
cmp
add
cdq
or
es
push
imul
mov
test
inc
pop
add
setle
in
mov
mov
pop
lahf
jno
sbb
fneni(8087
mov
push
fcomp
in
shr
sbb
xchg
shl
sbb
and
sbb
in
and
dec
or
mov
jne
jmp
lds
and
cdq
mov
hlt
aam
dec
jmp
jmp
dec
jl
add
pusha
cmp
test
add
scas
(bad)
std
je
lea
xor
dec
test
cwde
inc
retf
sbb
push
vcvtsd2si
or
inc
fsubr
xor
pop
mov
mov
pop
push
stc
xchg
out
adc
inc
sbb
mov
cmp
mov
aaa
dec
mov
enter
mov
cs
sbb
scas
ret
lods
pop
cmp
sbb
cmps
jns
add
mov
nop
xchg
lods
pushf
add
test
jge
loope
inc
arpl
test
dec
inc
aam
add
mov
mov
rcr
pop
test
aam
aam
addr16
mov
out
cmp
mov
xchg
hlt
out
ret
dec
sbb
cmp
gs
pop
lds
adc
cmps
jo
inc
mov
leave
mov
ss
in
mov
enter
push
int3
adc
jl
cmp
dec
xor
mov
test
xchg
sahf
or
push
int
mov
mov
clts
sbb
adc
sti
sbb
cmp
push
sbb
xchg
test
sub
inc
dec
repz
gs
adc
test
xchg
xchg
xor
test
test
enter
(bad)
fist
test
cmc
lea
push
fldl2t
cmp
add
push
cli
fistp
mov
test
add
or
cld
push
in
rcr
or
lea
arpl
mov
in
loop
adc
fadd
jnp
in
in
pop
cmps
fs
dec
in
lea
iret
adc
adc
ja
loope
aad
mov
push
sbb
sar
push
cmp
or
std
rcl
std
or
xchg
(bad)
retf
fnstcw
(bad)
(bad)
cmp
out
ror
mov
(bad)
out
sbb
dec
es
mov
cmp
mov
xchg
add
rol
dec
inc
pop
adc
push
cmp
(bad)
fmul
aam
mov
cwde
cmp
sbb
and
addr16
pop
out
ror
mov
mov
mov
lods
add
jb
call
xor
lea
ret
push
sbb
cmp
aas
mov
mov
inc
or
sub
leave
xchg
add
shl
push
fsub
pop
mov
mov
lock
inc
jl
sbb
daa
xor
jmp
adc
push
push
inc
je
pop
push
cmp
jl
ret
inc
push
mov
nop
xchg
(bad)
jg
sbb
test
and
sbb
push
leave
xor
popf
jmp
nop
in
add
test
je
xor
xchg
xor
int
aam
enter
mov
xchg
and
dec
sbb
shl
cmp
cwde
mov
lods
cmp
push
ret
fwait
int3
push
lods
and
cmp
sub
icebp
mov
mov
xchg
aam
jle
mov
push
cwde
icebp
inc
ss
add
dec
push
cmpps
rcr
lods
xor
and
ja
ror
or
sbb
push
in
cmp
push
test
adc
sbb
ret
mov
inc
or
mov
sub
jl
mul
pushf
ret
adc
or
jns
or
pop
cmp
fwait
pop
add
add
enter
les
mov
int3
xor
and
dec
or
mov
sbb
sbb
inc
loopne
adc
je
xlat
xchg
lea
pop
dec
call
in
push
add
mov
(bad)
cmp
mov
cmp
mov
jle
ret
cmp
jg
pop
push
loope
pop
fdivr
pop
sbb
adc
cmp
lods
ins
sbb
test
call
cmp
dec
sub
mov
and
cmp
and
jns
adc
lock
in
push
xor
pop
xor
out
and
mov
sub
jl
mov
iret
xor
inc
and
movs
push
add
mov
mov
and
sbb
add
rol
adc
stos
fiadd
(bad)
fbld
dec
xor
(bad)
cmp
bound
inc
sbb
inc
push
push
or
adc
sbb
sbb
ja
add
or
jns
pop
add
sbb
fs
pop
jl
add
pop
inc
adc
lea
mov
mov
or
ds
fbld
cmp
mov
adc
add
clc
dec
jae
or
out
push
iret
int3
push
inc
sbb
jno
mov
scas
dec
adc
pop
stos
dec
xlat
push
xchg
mov
repz
cmp
add
dec
(bad)
cmp
mov
mov
pop
jmp
fnstcw
leave
inc
pop
ret
add
push
jo
push
jmp
lods
test
ja
jns
fimul
xlat
cmp
retf
test
mov
sbb
js
cwde
inc
sahf
mov
dec
je
push
add
retf
std
and
sbb
mov
(bad)
and
aas
nop
in
int3
add
mov
adc
or
xchg
popa
ror
enter
mov
add
add
and
add
dec
cmp
mov
fisubr
inc
mov
pop
movd
mov
imul
adc
je
xor
dec
nop
ror
vpcmpgtd
cmp
jmp
fild
and
ins
bound
push
ins
dec
bound
jle
loope
inc
imul
and
mov
mov
(bad)
fadd
lea
rcr
fild
xlat
fsubr
adc
jl
push
cmp
mov
sub
sub
adc
jmp
add
dec
or
mov
and
adc
mov
and
das
pusha
lock
mov
dec
xchg
jae
dec
rcr
inc
pop
mov
adc
add
movs
xchg
or
adc
ds
push
in
je
push
add
out
jb
adc
push
sub
push
cwde
pop
pop
push
pop
and
pop
push
rcr
mov
dec
inc
pop
int3
mov
(bad)
pop
test
maxps
pop
sbb
jo
nop
add
pop
jl
xor
mov
or
loopne
repz
ja
jne
mov
ds
add
add
sub
stos
sub
mov
push
ficom
cli
je
movs
aad
hlt
rcr
fs
add
mov
sbb
scas
cmps
inc
jb
fcmovnu
fs
or
gs
inc
sub
shl
and
(bad)
push
(bad)
pop
lock
push
inc
adc
or
add
sbb
daa
int3
dec
and
add
shr
fstp
xchg
jmp
fnstcw
and
mov
jecxz
pop
iret
sbb
es
stos
and
add
inc
add
cmp
push
lea
lods
add
arpl
jmp
inc
pop
sbb
leave
lahf
sahf
mov
push
mov
sub
push
je
ins
mov
jno
mov
arpl
cmc
sbb
sub
push
(bad)
je
inc
mov
out
jmp
jo
cmp
xchg
jg
and
jle
push
fxch
sbb
call
adc
adc
mov
sub
sbb
jmp
movs
mov
adc
pop
scas
and
xchg
pop
ret
jg
out
sbb
je
enter
push
and
xor
les
mov
pop
mov
loopne
mov
loopne
shr
xchg
clc
popa
mov
and
cwde
pop
or
loopne
cmp
cmps
or
iret
adc
or
xchg
pop
push
cmp
cmp
fisub
pop
mov
pop
xor
sub
mov
adc
add
popa
jmp
pop
and
add
add
sbb
lea
stc
test
lahf
adc
sub
sbb
add
(bad)
je
aad
mov
mul
dec
popf
into
mov
(bad)
les
cmp
mov
mov
xchg
mov
xor
add
push
hlt
xor
dec
popf
nop
inc
popa
mov
or
push
push
adc
xchg
aam
push
scas
in
sub
loopne
inc
loope
fs
dec
mov
cmps
and
add
adc
cmp
pop
mov
ror
sub
dec
sbb
mov
imul
lods
add
inc
sub
sbb
repnz
and
or
leave
or
and
cmp
jnp
pop
cmp
push
xchg
leave
and
nop
inc
dec
mov
sbb
aad
push
cmp
dec
or
loop
dec
mov
jmp
pusha
popa
dec
adc
pop
dec
clc
shr
test
or
iret
cmp
ficomp
popa
ficom
cmps
dec
pushf
push
stos
sti
mov
pop
pop
in
push
sub
jne
or
sub
and
push
push
jo
ds
push
inc
lea
add
sbb
mov
add
inc
pop
cwde
mov
cmp
mov
sub
mov
push
sub
or
in
sbb
mov
adc
or
mov
ror
push
and
and
iret
repz
xchg
sub
xor
clc
dec
cmps
ds
fsubr
sbb
pop
cmc
cmp
xor
jbe
push
and
add
adc
sbb
je
ret
sbb
stos
sub
sub
push
xor
scas
test
rcr
or
mov
sar
inc
jecxz
jno
cmps
shr
or
int3
stc
dec
rcl
rcr
lock
jne
and
mov
inc
and
push
pop
push
ins
ret
(bad)
pusha
imul
mov
cmp
test
in
jmp
mov
lock
xor
scas
and
es
sub
and
inc
add
xor
mov
xchg
add
pop
mov
xchg
in
aaa
aam
xor
lods
(bad)
bound
es
dec
mov
push
(bad)
stos
inc
and
adc
or
lahf
xlat
imul
or
mov
or
mov
(bad)
push
dec
les
pop
ret
dec
xchg
add
dec
in
sbb
test
mov
ds
mov
push
cmp
add
push
adc
fs
mov
cmp
jne
mov
push
and
mov
push
and
(bad)
retf
inc
stc
pop
enter
shl
sbb
movs
push
adc
movs
adc
or
or
scas
adc
rcl
adc
mov
inc
mov
lahf
xchg
and
add
adc
sub
pusha
gs
ret
rcr
out
outs
pop
outs
aad
into
int3
mov
jmp
adc
nop
cmp
cld
inc
adc
idiv
jmp
or
outs
sub
dec
dec
adc
cmc
or
not
mov
pop
xchg
mov
(bad)
shr
aaa
aaa
or
aam
push
enter
and
aam
push
inc
ret
ins
xor
xchg
sbb
or
pushf
add
xor
and
cwde
push
sub
shr
adc
push
mov
fsubr
cdq
and
dec
outs
xchg
ds
cmp
pushf
dec
adc
inc
xor
add
and
xor
add
and
mov
sbb
mov
adc
int
(bad)
push
adc
inc
add
nop
test
adc
shl
add
jnp
add
cmp
mov
add
loop
xlat
mov
and
jbe
push
dec
add
cmps
mov
mov
cmovae
sbb
inc
in
pop
sbb
inc
or
push
add
jo
fist
and
rcr
fisttp
mov
ins
inc
bound
pop
mov
movs
dec
xor
aad
mov
mov
mov
rol
dec
in
push
add
adc
ret
xor
pop
and
jno
cmp
jmp
sbb
jb
pop
outs
or
mov
rcl
mov
add
cmp
and
(bad)
cmp
mov
enter
mov
xor
jns
imul
jge
cmp
inc
or
push
sbb
int3
or
inc
je
je
mov
xchg
es
lock
stos
mov
mov
jne
sbb
or
lahf
loope
(bad)
aaa
sub
xor
mov
mov
adc
lea
add
mov
ret
pop
pop
cmp
adc
and
push
test
push
stos
aas
cmps
push
(bad)
fbld
(bad)
ret
pop
lea
out
xor
call
or
xor
add
or
rcl
sub
inc
repz
or
or
imul
sub
lahf
xchg
psrlw
repz
pusha
adc
push
retf
(bad)
shl
pop
mov
sub
cdq
lods
in
mov
xchg
sahf
pop
ins
add
pusha
test
add
js
cld
sub
sbb
xchg
sub
movs
enter
sbb
jge
dec
es
push
(bad)
pop
sub
mov
dec
add
push
or
or
call
nop
mov
and
and
pop
inc
call
lea
aas
push
jo
push
jmp
std
jmp
cmp
js
test
mov
jns
icebp
sub
test
xor
loopne
xchg
cmp
push
fs
ins
cmp
(bad)
and
add
xor
xor
and
call
mov
sbb
clc
sti
pusha
js
or
mov
or
pop
jne
mov
xchg
mov
xchg
fmul
or
dec
jno
(bad)
mov
es
sbb
xchg
jno
dec
push
push
mov
add
call
in
(bad)
ret
push
sub
push
inc
push
push
ja
dec
inc
mov
cmp
xor
pop
pop
scas
cmp
mov
fsubr
sub
push
push
inc
sbb
sahf
sub
pop
push
add
cmp
test
push
push
pop
push
rol
jle
add
cdq
xchg
sbb
adc
cmp
add
mov
loop
adc
dec
and
lea
sub
call
dec
adc
outs
pushf
push
in
jg
pop
rcr
mov
loop
push
pop
push
push
jg
loopne
or
je
cmp
jne
and
jo
inc
sbb
push
or
jmp
or
jae
aaa
add
mov
push
jns
cmp
mov
daa
mov
inc
jg
xor
movs
loop
jbe
es
push
push
mov
out
mov
repnz
xchg
fmul
sub
pop
pop
adc
out
int3
add
pop
pop
js
sub
inc
push
adc
call
mov
inc
pop
mov
pop
ins
mov
mov
sbb
ins
adc
ror
pop
push
std
dec
and
pop
pop
dec
dec
in
mov
das
push
repnz
dec
sub
inc
sbb
cmps
popf
gs
ss
mov
ds
inc
aaa
xchg
xor
cmp
les
pop
sbb
lods
adc
ret
push
pop
pusha
sub
jmp
pop
and
mov
je
aam
iret
in
and
sar
mov
movs
call
rcr
sub
mov
pop
pushf
add
sbb
jl
push
mov
jb
xchg
xchg
(bad)
or
enter
lahf
loope
call
adc
pop
cwde
dec
push
xor
mov
pop
dec
jmp
cmp
xchg
adc
push
(bad)
push
mov
xlat
jg
sbb
inc
xchg
in
stos
arpl
fnstsw
and
push
adc
inc
adc
cdq
sbb
nop
pop
enter
jg
leave
push
adc
shl
jne
jno
and
pop
or
push
addr16
cdq
pushf
mov
into
jno
sete
mov
mov
pop
dec
loopne
sbb
mov
sbb
test
pusha
sub
sub
jns
push
dec
test
ja
movs
scas
xor
sbb
mov
(bad)
mov
sbb
xchg
in
xchg
add
gs
dec
cdq
bound
sbb
or
mov
and
in
movs
popf
jmp
retf
adc
movs
fisubr
push
leave
adc
add
cmp
(bad)
xchg
mov
mov
fnsave
or
lds
add
and
jmp
fldenv
and
mov
push
(bad)
shl
test
retf
js
xor
pop
stos
push
fidiv
dec
and
sub
sbb
jp
loope
mov
cs
fidivr
and
and
inc
add
mov
sbb
sbb
sbb
fs
xchg
sbb
sbb
sbb
sbb
push
loop
sbb
mov
ins
in
xchg
mov
add
xchg
js
inc
js
add
push
mov
mov
aas
aas
push
push
imul
mov
popf
inc
repnz
mov
push
push
xadd
dec
test
jg
and
add
adc
push
pop
sbb
and
xor
push
or
call
xor
jg
push
arpl
mov
daa
xor
or
pop
inc
adc
sbb
mov
ror
pop
pop
sbb
addr16
add
movs
jl
aas
lods
add
cmp
sbb
cmp
call
and
test
retf
ins
and
inc
mov
jb
jbe
push
popa
and
mov
lock
pop
or
xor
scas
test
fs
mov
adc
test
hlt
mov
scas
test
popf
inc
dec
push
lea
pop
add
dec
sbb
and
in
lods
pop
daa
jbe
mov
adc
mov
std
add
(bad)
mov
loope
dec
mov
fld
or
cdq
clc
add
out
aas
mov
add
jnp
mov
(bad)
push
stos
and
jg
jns
dec
or
inc
jne
inc
xor
mov
ret
pop
lods
push
js
cwde
stos
mov
jbe
rol
scas
sub
xchg
dec
jo
popf
push
pusha
jmp
nop
pop
popa
add
push
cli
pop
loop
sub
lea
and
xchg
pop
push
mov
adc
add
and
and
mov
mov
xor
cld
ss
push
pop
data16
fdivr
jecxz
xchg
and
xor
test
jp
or
lea
add
cmp
in
movs
and
add
and
add
fcom
xchg
mov
xor
es
enter
mov
mov
jmp
int3
sbb
or
dec
cmps
cmp
imul
mov
adc
xor
add
mov
mov
js
dec
push
jne
enter
mov
inc
or
call
dec
cwde
push
dec
mov
aas
(bad)
pusha
or
(bad)
pop
mov
push
sub
inc
daa
fmul
dec
mov
jmp
movs
in
movs
xor
xor
xor
and
adc
sbb
and
push
pusha
mov
inc
jg
cmp
sub
mov
jno
or
push
dec
sbb
je
and
push
mov
push
test
or
jecxz
push
inc
mov
aaa
in
xor
jmp
test
xchg
xor
gs
mov
int
mov
or
leave
ror
enter
test
lea
push
out
je
inc
sbb
loop
mov
push
push
push
add
(bad)
shl
push
cmp
sbb
ret
jo
mov
jg
sub
sub
sbb
xor
test
pop
dec
rcl
mov
lea
jl
lods
push
jne
fisttp
or
add
shr
cmp
cmps
push
dec
xor
adc
xchg
push
add
push
adc
fisttp
and
mov
cmps
push
sub
adc
ja
mov
mov
add
inc
add
add
cmps
loope
data16
or
popf
out
push
add
add
add
outs
mov
or
cmp
adc
fs
or
adc
adc
pop
xchg
jg
mov
mov
fs
adc
adc
adc
movs
popa
jecxz
sub
data16
push
jns
jne
jecxz
mov
loope
test
push
xchg
push
(bad)
fwait
dec
pop
add
mov
push
fdiv
mov
mov
push
sbb
or
dec
jbe
sbb
or
add
ror
rcl
shr
repnz
dec
repz
div
test
sbb
ins
ja
adc
loopne
mov
loop
nop
mov
mov
fistp
add
adc
jg
or
fmul
xchg
or
adc
adc
inc
adc
adc
test
stc
pop
dec
push
adc
mov
mov
and
xor
adc
xchg
dec
movs
xor
adc
test
xchg
xchg
xchg
xchg
adc
adc
adc
xor
arpl
lahf
or
sub
lahf
adc
repnz
test
retf
enter
lahf
adc
adc
imul
pushf
(bad)
cmc
adc
fwait
or
hlt
shl
jbe
rol
imul
cwde
jno
xchg
cld
push
jmp
jecxz
adc
mov
fnstcw
jo
lahf
mov
inc
dec
sbb
les
add
lock
mov
pop
inc
outs
jp
add
push
pop
push
push
push
push
or
adc
and
pop
push
push
xor
push
sbb
xchg
jg
mov
or
scas
xchg
push
pop
fbld
adc
loopne
adc
cmc
sahf
push
fist
or
xchg
shl
call
mov
outs
lods
inc
mov
loope
fadd
in
adc
mov
fcom
or
test
dec
or
add
(bad)
sbb
jne
or
dec
hlt
and
arpl
xchg
sbb
or
push
syscall
and
mov
push
xchg
stos
repnz
cld
ss
ficom
sahf
dec
call
test
(bad)
idiv
cmp
xchg
inc
rcl
loopne
or
pop
sub
or
push
or
mov
sbb
rol
lods
into
mov
loopne
shr
dec
or
and
jle
hlt
and
mov
add
add
mov
inc
mov
ins
mov
inc
sub
pop
stos
and
sbb
jb
fisub
xor
dec
test
sub
add
inc
push
jecxz
xor
xchg
in
dec
inc
call
pshufw
movs
repnz
jo
pop
push
aam
leave
test
dec
pop
mov
dec
add
add
leave
mov
pop
adc
rol
or
mov
add
and
mov
jp
or
cmp
sbb
inc
add
pusha
or
adc
cdq
add
adc
mov
pop
sbb
sar
les
jmp
lahf
adc
xchg
or
inc
pop
cmps
nop
adc
pop
sbb
adc
add
mov
lods
adc
jle
dec
or
xor
pop
es
jp
pop
add
add
cld
and
inc
iret
sub
or
lahf
dec
mov
push
sbb
adc
or
sahf
jl
cmp
int3
inc
ret
sbb
js
sbb
bound
(bad)
cmps
push
xlat
mov
outs
inc
mov
xchg
or
add
push
inc
push
dec
stos
mov
inc
lock
int
lods
pop
dec
mov
jo
arpl
xchg
idiv
cmp
add
sar
sar
inc
inc
xchg
jns
call
mov
test
sbb
or
cmovl
mov
lahf
gs
add
jle
pop
daa
imul
add
test
(bad)
cdq
aaa
fsub
aam
pusha
int3
rol
cld
ds
xchg
loopne
das
mov
add
aam
push
repnz
cli
push
push
push
pop
inc
pop
enter
push
inc
pop
mov
push
push
mov
mov
les
push
and
ins
or
dec
jne
sub
aaa
or
outs
pop
cwde
mov
adc
jmp
push
dec
imul
fild
xor
daa
rol
outs
loope
loop
pcmpeqd
fdivp
jae
dec
fsubr
je
cli
repnz
cmp
push
pop
and
inc
into
fcom
and
mov
fild
push
push
lahf
mov
and
xchg
mov
mov
imul
adc
iret
jnp
mov
xchg
lahf
test
fstp
mov
adc
sub
add
sbb
push
mov
test
push
push
push
sbb
loop
jl
mov
lock
or
(bad)
cdq
push
bound
mov
not
sub
inc
clc
sahf
jo
clc
sub
or
jge
mov
hlt
pop
aam
in
add
push
fsub
push
lahf
push
push
mov
call
js
mov
mov
add
mov
push
outs
test
lods
pop
jge
sbb
cmp
js
sbb
sbb
pop
mov
icebp
mov
and
xor
js
pop
xor
xchg
mov
inc
in
cmp
pop
hlt
lock
mov
add
cmp
jge
mov
dec
push
pop
cmps
mov
jle
pop
xchg
shr
retf
inc
or
inc
add
adc
pause
or
xchg
mov
xor
jmp
or
in
adc
cmp
push
sahf
inc
or
loopne
sbb
cmp
lahf
pop
push
cmp
jle
imul
jge
push
ja
loopne
pop
sub
cmp
jge
mov
jbe
cmp
retf
pop
mov
(bad)
sub
pop
cdq
jg
enter
xchg
lods
add
mov
pop
mov
mov
fisttp
push
dec
or
sub
sar
adc
add
xor
aas
adc
pushf
and
adc
mov
mov
push
push
add
movs
fwait
xor
icebp
pop
jno
clc
sar
ret
jbe
cmp
mov
ret
aad
cwde
clc
aas
mov
lea
add
push
retf
lea
push
mov
std
pop
jmp
ficomp
clc
ret
cmp
cmp
test
jmp
push
sub
call
pop
int
push
arpl
scas
inc
cmc
ins
fcmovne
and
(bad)
or
inc
mov
xchg
sub
mov
jg
rcl
adc
rol
not
mov
jbe
mov
outs
sub
(bad)
cmps
sbb
lods
adc
and
pop
jg
cmp
lods
dec
xchg
scas
(bad)
sub
sbb
add
sub
loopne
xor
sbb
and
sub
or
add
frstor
ret
and
inc
sub
in
sahf
ror
dec
inc
add
cmp
adc
lods
push
inc
pop
cmp
jg
add
cli
cmp
pop
jne
cmps
and
and
mov
pop
adc
or
ret
out
jns
dec
fild
das
in
mov
arpl
(bad)
fsub
arpl
push
adc
lds
out
mov
jle
add
sub
sbb
add
jmp
ds
add
bound
cmp
push
mov
and
adc
sub
sti
and
cmp
cmp
(bad)
adc
jl
jmp
in
lea
add
mov
xchg
xor
add
dec
imul
jecxz
cmp
mov
push
dec
dec
leave
cmp
cmp
test
pop
mov
mov
cmp
add
cld
pop
cmp
pop
inc
dec
sub
mov
es
lea
dec
xchg
dec
shl
jl
add
mov
and
add
add
dec
dec
mov
fimul
add
jmp
cmp
cmp
mov
add
sbb
hlt
lods
xor
xor
leave
mov
adc
shr
inc
addr16
sbb
or
aam
mov
lds
add
mov
sbb
push
mov
fmulp
adc
and
popf
lea
jns
sbb
bswap
pop
push
fist
addr16
sub
push
and
loopne
cmp
rol
loop
adc
cmp
jne
loope
shl
xchg
sbb
in
sub
jl
pop
inc
dec
stos
rol
dec
xor
or
pop
mov
fisttp
sbb
fisttp
dec
ror
je
xor
ins
cli
add
sub
rcr
je
add
in
mov
iret
inc
push
pushf
push
aam
cmps
les
sub
dec
leave
or
or
inc
dec
add
(bad)
jne
pop
adc
fdiv
mov
pop
je
or
push
jl
ins
add
add
iret
mov
enter
adc
(bad)
mov
gs
add
je
sbb
and
cmp
adc
lea
or
rcl
xor
dec
inc
pop
pop
dec
pop
push
push
sub
sbb
push
inc
imul
adc
adc
jmp
mov
je
aad
dec
mov
ss
push
cmp
mov
shl
mov
xor
xor
jns
jmp
xor
or
inc
push
and
push
cmps
add
ror
ret
or
and
enter
int3
loopne
icebp
sub
js
sar
xchg
pop
(bad)
dec
xchg
or
add
push
into
cli
loope
or
push
enter
ldmxcsr
je
movs
dec
cld
mov
adc
ret
and
xchg
pop
test
cwde
mov
adc
jl
imul
jl
sub
js
pop
push
push
sub
add
fld
cwde
mov
das
pop
add
mov
lods
in
retf
or
not
cs
push
add
jne
adc
mov
mov
mov
pop
(bad)
shr
daa
sbb
dec
add
clc
add
cld
xor
and
dec
pusha
dec
cmp
call
pusha
or
fwait
cmp
je
cmp
je
xchg
out
pop
jo
repnz
mov
adc
fmulp
imul
shl
into
xor
mov
(bad)
push
out
or
or
dec
or
add
xchg
dec
push
loopne
loopne
loopne
inc
and
enter
inc
mov
cdq
inc
lock
icebp
movs
xor
test
fdivr
mov
push
mov
retf
jmp
lock
sub
dec
arpl
popf
add
stc
stos
inc
sub
(bad)
les
push
jno
mov
adc
test
loopne
mov
cmp
add
cmps
cmc
xor
fwait
mov
or
iret
hlt
sub
dec
push
xor
mov
shr
jae
add
ret
ret
adc
(bad)
or
dec
cmps
mov
lea
rcr
lods
and
and
aam
add
and
mov
dec
sbb
xchg
clc
in
sub
inc
pop
ret
mov
lock
fiadd
and
push
fs
or
sbb
ins
xchg
sub
dec
cmp
in
rcr
fmul
pop
adc
lea
sbb
dec
loopne
sahf
cmp
jne
cmp
or
test
mov
jmp
mov
mov
adc
loopne
add
lock
mov
pop
mov
test
jnp
inc
fild
pop
pushf
cld
xor
push
popf
jo
adc
pop
jo
mov
jl
and
mov
jmp
out
les
jge
fmul
mov
inc
cmp
or
icebp
jmp
call
in
mov
(bad)
es
outs
mov
movzx
xor
mov
(bad)
mov
inc
call
ja
ds
fadd
pushf
or
or
push
fs
or
shl
push
add
loop
int
mov
loopne
add
test
adc
xor
adc
sbb
hlt
or
enter
xor
add
or
inc
sub
mov
pop
lahf
push
adc
pop
dec
fcom
(bad)
dec
xchg
push
jb
jo
pop
lock
popa
sub
adc
sub
or
jne
leave
dec
call
sbb
out
add
add
test
push
push
push
inc
adc
lea
pop
pop
movs
cmp
sbb
aam
les
enter
add
or
push
mov
sbb
fadd
fadd
cld
add
add
sbb
inc
fdivr
or
add
mov
leave
inc
mov
or
and
jge
add
pop
data16
lds
aaa
jne
inc
jl
shl
fdiv
test
shl
add
sub
mov
bound
adc
push
xchg
pop
inc
fidivr
xor
movs
inc
jo
sar
in
jbe
dec
inc
jmp
loop
aaa
(bad)
ins
lods
call
jg
mov
pusha
dec
loopne
inc
loope
rol
mov
xor
add
inc
sbb
mov
sub
push
mov
jae
sti
outs
or
ja
mov
sub
sar
xchg
push
inc
xchg
mov
in
fdivr
pop
push
int3
ins
jecxz
or
mov
xor
push
jnp
mov
cmp
adc
mov
mul
xchg
pushf
int
les
rcr
push
inc
push
fxch
ret
xor
push
inc
sub
ins
dec
and
(bad)
retf
enter
or
(bad)
(bad)
mov
xor
es
scas
aam
rol
out
cld
and
dec
xchg
add
sub
jae
push
les
pop
inc
stos
mov
je
cmp
sub
push
adc
(bad)
sub
xor
add
ds
out
pop
push
xchg
lods
mov
jo
xor
ins
jne
pop
dec
shr
fidiv
add
or
(bad)
rcr
dec
cmp
cs
cs
mov
jne
fadd
rdpmc
and
mov
enter
gs
cmc
push
inc
sbb
gs
sbb
sub
jne
nop
daa
int
ror
test
(bad)
(bad)
push
add
mov
add
es
shl
add
aam
call
add
push
mov
adc
cmp
mov
and
cmps
mov
xlat
adc
fcomi
adc
push
aaa
pop
mov
adc
xchg
in
sub
retf
je
pop
in
into
or
rcr
fnstenv
xor
fnstcw
test
or
sbb
and
xchg
(bad)
push
je
xor
sbb
mov
add
adc
test
sbb
jl
setbe
adc
dec
enter
jl
jmp
adc
jg
or
sub
dec
fist
lahf
xor
cs
fdivr
call
inc
inc
xlat
test
cmc
mov
xor
shl
sahf
es
push
movs
sub
adc
cmp
in
pop
bound
sub
dec
push
(bad)
cld
add
inc
xor
shl
daa
fsub
shl
adc
clc
cmps
mov
mov
mov
inc
push
cli
shl
lods
sub
pop
fcom
pop
mov
cli
faddp
aas
test
shl
jbe
cmp
shl
mov
add
push
and
push
xchg
clc
sub
cmp
sbb
cwde
push
loopne
or
loop
fnstcw
jmp
mov
cmp
xor
cli
cmp
stos
mov
inc
lss
scas
sbb
cmp
pop
push
inc
inc
inc
mov
mov
outs
(bad)
mov
shr
sbb
loopne
out
add
into
call
fisub
ja
or
sbb
and
xchg
sub
jmp
dec
cmp
mov
push
add
cs
pop
cmp
fcomp
add
xor
sbb
push
(bad)
and
nop
aaa
jg
fld
xor
cli
fadd
dec
add
mov
stos
imul
out
add
(bad)
hlt
sub
jecxz
cs
sahf
fisttp
and
xchg
pop
push
push
mov
inc
dec
inc
std
gs
jge
jl
sub
pop
add
lea
add
sbb
jg
fchs
add
sbb
add
dec
int3
retf
shr
add
ret
je
jecxz
push
es
pop
test
aaa
and
ja
inc
in
sub
(bad)
fistp
and
cmp
pusha
adc
ja
loope
movs
mov
sbb
pop
push
mov
mov
dec
pop
push
sub
inc
jo
mov
add
ret
not
jmp
cmp
or
out
sbb
cli
mov
adc
into
add
push
add
pop
adc
and
mov
inc
sub
arpl
loopne
ret
lea
or
adc
ret
ficom
mov
sar
movs
mov
mov
(bad)
sbb
cld
cli
mov
ins
mov
jecxz
or
sbb
jp
es
or
and
aaa
fcom
shr
hlt
sub
inc
and
adc
fwait
adc
pop
pop
or
mov
std
cld
or
sbb
add
aaa
fld
mov
jmp
or
mov
js
dec
pushaw
sbb
cld
aas
ds
xor
cli
jbe
test
adc
loopne
aas
or
xchg
mov
cdq
push
int3
add
cli
ins
push
sub
or
add
jns
or
jae
cwde
in
add
fwait
adc
loopne
cmc
adc
adc
sbb
pop
cmp
jle
add
retf
popf
test
aaa
cmc
xchg
stos
test
inc
pop
mov
adc
or
imul
cs
jbe
or
xor
sbb
or
sub
push
sbb
cdq
mov
push
add
mov
or
les
inc
add
add
in
cli
outs
cli
sti
inc
mov
and
in
or
add
in
jbe
cwde
call
sbb
mov
nop
pop
rol
pop
push
jbe
js
push
add
std
nop
xor
std
and
xor
(bad)
mov
(bad)
rcr
jne
mov
adc
sar
pusha
inc
ficomp
push
leave
retf
daa
sub
mov
bound
movs
push
mov
or
or
jecxz
jmp
mov
dec
(bad)
adc
loope
in
sbb
inc
cs
xchg
shr
sbb
nop
movs
nop/reserved
sbb
rol
add
push
movs
add
xor
leave
fdivr
add
sbb
call
sbb
xor
sub
in
int
fcom
faddp
mov
std
push
push
mov
sub
push
push
or
(bad)
enter
test
xor
sbb
sub
call
and
adc
xchg
dec
sar
fsub
call
adc
nop
dec
(bad)
pop
ds
adc
sub
icebp
clc
ror
arpl
push
mov
cmp
lock
fwait
mov
(bad)
cmp
xor
mov
mov
lahf
pusha
imul
jb
cdq
cwde
add
and
dec
lock
dec
fnstenv
fstp
sar
cmps
or
push
ret
push
cld
xchg
xchg
push
les
or
adc
adc
or
movs
xor
push
mov
lea
pop
and
adc
bound
imul
sbb
adc
stos
adc
xchg
dec
mov
dec
fwait
sbb
lea
push
js
pusha
add
jo
inc
sbb
push
mov
cmp
mov
push
mov
push
mov
iret
add
jp
jo
jo
mov
and
add
adc
xchg
xor
pop
mov
push
lods
sub
dec
adc
xlat
lea
add
dec
and
mov
mov
xchg
sub
mov
(bad)
push
test
push
test
or
cmp
push
dec
shr
es
dec
call
dec
dec
cmp
mov
sbb
xor
mov
dec
mov
and
mov
jns
test
sbb
sbb
repnz
mov
jle
js
mov
xor
mov
out
(bad)
mov
out
mov
add
(bad)
in
outs
push
inc
mov
xchg
push
call
sub
fdiv
imul
add
idiv
mov
mov
mov
or
adc
cmps
pop
(bad)
add
adc
lahf
ret
push
push
dec
in
jmp
push
movs
push
xchg
add
sub
jmp
pop
(bad)
push
arpl
push
jp
push
jmp
push
pop
mov
outs
dec
inc
test
movs
loope
repnz
inc
fsub
add
les
sbb
setb
xor
popa
lds
adc
nop
xchg
mov
je
or
pushf
push
add
jns
rcpps
xor
jo
cmp
mov
sub
test
push
mov
call
or
adc
movs
je
(bad)
ins
push
dec
jne
ins
popf
push
cmp
inc
mov
mov
mov
(bad)
in
or
adc
popf
jo
sahf
sar
cld
shl
push
mov
push
fwait
es
dec
jno
push
sub
sbb
push
cwde
adc
push
push
or
add
ret
mov
pop
mov
adc
ins
mov
cwde
push
ret
dec
jbe
push
jge
jne
ret
adc
adc
push
pop
inc
pop
loopne
xor
je
pop
cmp
pop
movs
loope
sbb
dec
adc
inc
rcr
ret
adc
ffree
ins
aaa
pushf
and
mov
mov
inc
mov
(bad)
and
jb
data16
dec
loopne
lahf
xchg
loop
dec
nop
push
jno
sbb
pop
rcl
push
and
mov
sub
out
mov
or
rol
or
or
stos
or
xchg
and
push
jns
(bad)
or
or
mov
add
adc
es
xor
push
gs
es
add
mov
imul
out
sub
inc
cmp
add
xchg
xor
pop
inc
inc
dec
stos
mov
or
cmp
sbb
pop
cs
fbstp
sub
inc
fst
push
mov
xchg
pop
fmul
pop
and
leave
push
rcl
inc
mov
pop
shr
cmp
inc
dec
adc
stc
jno
cmps
dec
add
xor
pop
icebp
(bad)
movs
mov
add
and
fisubr
les
sar
or
sbb
aad
ret
cmp
push
cld
jl
cmp
outs
adc
pop
sub
leave
add
ds
pop
repnz
ret
ja
leave
hlt
mov
xchg
sbb
xchg
ret
inc
fsubr
icebp
int3
pop
in
ja
mov
sub
adc
call
adc
add
xchg
xchg
xchg
cs
bnd
mov
je
and
sbb
daa
sub
int3
jne
mov
sub
xor
adc
or
mov
sub
mov
jge
add
inc
push
adc
and
inc
pushf
adc
dec
rol
stos
sub
stos
or
sub
enter
or
std
jecxz
icebp
push
xchg
lods
inc
outs
add
or
pusha
aam
icebp
(bad)
js
into
xchg
xor
dec
xor
test
leave
scas
xchg
fistp
in
sbb
xor
sbb
ret
or
xchg
xor
and
repnz
inc
push
push
push
cwde
mov
shr
mov
sbb
ror
mov
xchg
inc
loop
xor
dec
test
mov
clc
or
push
xchg
cmp
add
and
add
add
cwde
jnp
mov
mov
push
xor
(bad)
clc
mov
rol
inc
iret
lods
xor
sbb
add
dec
fsubr
jmp
ror
sub
jle
cmps
jbe
test
and
inc
push
ret
dec
sub
pop
jg
cmp
mov
mov
ror
push
into
adc
int3
dec
das
jne
inc
inc
push
and
adc
adc
(bad)
fs
and
jo
pop
cmps
inc
add
fsubrp
push
adc
test
cs
pop
jns
mov
jo
add
adc
jnp
scas
mov
enter
sbb
daa
jle
push
inc
cmp
loopne
or
call
jne
or
fbld
push
dec
adc
xor
and
sbb
sbb
sub
repz
jmp
das
lods
mov
lods
popf
inc
ror
xchg
sbb
ror
lahf
pop
sub
cmp
dec
and
cmp
pop
xchg
fadd
mov
pop
add
test
push
fimul
and
cdq
sbb
xchg
and
sbb
ret
pop
sub
and
sbb
jns
adc
jns
xchg
jb
lea
push
mov
and
pop
dec
adc
jno
inc
xor
sub
pop
push
push
sub
dec
pop
fs
aam
xchg
sub
inc
cmp
pop
es
push
pusha
sbb
cwde
cmp
jo
out
add
or
mov
outs
xchg
jmp
adc
scas
and
jb
mov
or
imul
cdq
sbb
pop
stos
rcr
push
adc
popa
jp
and
add
mov
pop
sar
adc
arpl
(bad)
mov
inc
and
ror
cs
leave
adc
jl
push
sbb
stc
hlt
jno
adc
mov
jnp
adc
pop
ror
clc
das
or
adc
cmp
jne
dec
test
std
add
test
inc
mov
mov
push
adc
(bad)
jnp
pop
cmp
ficom
sbb
aam
mov
push
out
mov
cmc
dec
inc
mov
jne
inc
loop
adc
jnp
adc
addr16
hlt
mov
cmp
shr
das
std
outs
sbb
cmp
and
pop
rcl
adc
push
into
lea
mov
loope
les
pop
retf
mov
push
cmps
or
mov
mov
(bad)
or
lods
test
inc
or
daa
cs
ret
adc
shl
shl
or
arpl
cmp
adc
cs
mov
repz
cwde
pop
jo
ffreep
mov
(bad)
in
loop
push
adc
mov
dec
dec
jg
lea
push
add
pop
mov
clc
push
hlt
push
mov
mov
push
pop
rol
outs
push
adc
cwde
retf
jo
mov
cmp
fldcw
pusha
call
push
movs
xchg
aam
push
mov
movs
daa
add
push
xchg
adc
out
cmp
or
sub
test
(bad)
sbb
adc
mov
sbb
xor
ja
push
push
add
dec
fdiv
mov
ret
adc
mov
fld
lea
in
es
mov
shl
loope
mov
jmp
inc
ret
rcr
rcl
fadd
push
pop
pop
in
jo
inc
cmp
daa
lea
adc
push
sti
sbb
mov
cmp
add
or
fdivr
cmp
test
or
inc
inc
push
je
inc
or
pop
inc
adc
nop
add
je
push
les
rcl
push
cli
pusha
mov
or
or
adc
xchg
cmp
xchg
out
add
les
bound
inc
push
cdq
ss
push
cmp
pusha
repz
jmp
inc
add
inc
push
mov
xor
inc
and
push
sahf
pop
mov
pop
cmp
lea
dec
mov
cmp
add
add
dec
mov
cmps
inc
push
or
repz
mov
es
cdq
ja
cmp
or
dec
push
push
ret
bt
rcl
jns
sbb
or
xor
or
ins
je
push
(bad)
mov
push
lods
xor
pusha
cmps
js
jno
push
jno
lds
lods
and
add
leave
jae
adc
jp
add
push
test
test
ja
inc
or
jbe
push
or
mov
sahf
add
xor
cmp
jno
inc
fcomp
pop
enter
and
rol
or
adc
and
movs
cmps
js
adc
cmc
in
add
sub
mov
jns
test
inc
sub
pop
mov
and
mov
cmps
push
push
push
xchg
pop
jb
inc
sub
imul
sbb
mov
out
cmp
push
lods
icebp
pushf
shl
add
pop
leave
and
std
cmp
cmp
loopne
test
inc
push
adc
add
dec
loopne
dec
imul
cmp
cmps
or
adc
in
inc
cmp
pop
or
pop
cmp
jecxz
or
mov
xor
sbb
inc
or
loopne
cmps
add
mov
jbe
shl
pusha
mov
out
retf
ds
or
fild
ret
mov
pop
xchg
bound
sub
(bad)
cmc
add
stc
sbb
cs
jns
in
ret
sbb
aam
clc
jg
fsubr
shl
jl
push
or
or
gs
sbb
pop
and
data16
pop
sub
jnp
ret
and
jmp
and
xchg
test
out
sub
jnp
add
gs
xchg
xor
push
push
xor
shl
lock
inc
push
xor
pop
mov
sub
in
add
mov
cwde
pop
mov
add
aad
dec
and
ffreep
xchg
mov
fisttp
fnstsw
mov
xor
clc
cmps
mov
mov
ret
rol
clc
ror
push
xor
cld
jle
sbb
lods
ss
cmp
shl
jp
pop
xor
xor
or
sbb
into
cmp
mov
add
dec
pop
xor
push
inc
js
push
lods
inc
loope
pop
jbe
pop
aas
push
adc
jo
inc
cmp
cmp
cs
mov
inc
pop
push
pusha
dec
fwait
push
shl
mov
sar
jnp
jo
test
je
sbb
test
mov
or
iret
ret
sub
or
inc
push
mov
lock
and
lock
or
pop
test
or
iret
add
push
dec
jno
mov
imul
dec
add
xchg
ss
and
jno
mov
adc
mov
dec
pop
add
push
add
mov
pushf
add
call
xchg
dec
add
ins
inc
or
and
push
movs
inc
sbb
pusha
in
(bad)
(bad)
enter
adc
jl
mov
retf
and
in
jbe
arpl
dec
scas
push
cmc
push
lods
or
jno
mov
jo
imul
adc
add
jne
arpl
call
bound
add
or
dec
or
neg
and
inc
aad
cmp
mov
xor
jb
sub
(bad)
mov
push
add
jp
sbb
push
into
mov
mov
enter
cdq
or
mov
unpckhps
sahf
pop
inc
add
push
inc
jp
nop
ss
dec
mov
rcr
push
jbe
add
not
cwde
pusha
jmp
lock
and
pop
loopne
or
test
inc
push
clc
retf
int
fild
dec
cld
sub
or
aam
mov
ins
fs
mov
stos
mov
ds
pop
xchg
jb
jo
jg
mov
mov
jb
les
jle
push
scas
add
jns
(bad)
lods
mov
xor
dec
imul
sub
lock
mov
cwde
sub
lea
adc
or
add
add
jl
dec
push
mov
fild
lahf
inc
cmp
leave
cmp
lods
add
fidivr
iret
lods
push
lock
out
cmp
loope
mov
and
rcr
add
push
loope
in
in
fdivr
dec
gs
push
or
popa
inc
pop
mov
and
adc
test
iret
xchg
aad
dec
dec
test
nop
adc
mov
dec
test
adc
sub
call
dec
adc
xchg
stos
and
ins
sbb
sub
imul
jmp
cmp
(bad)
(bad)
(bad)
aas
test
or
repnz
sar
or
push
fs
inc
mov
adc
in
sub
fs
jg
lock
fcmovnb
dec
rcr
xor
ds
fdivr
or
or
inc
add
sub
cmp
jle
or
cmp
jl
inc
xor
xor
add
pop
mov
ret
mov
fnstcw
xchg
test
push
ins
sub
sbb
pop
mov
add
xor
xchg
xor
push
add
push
in
cmp
(bad)
and
cmps
adc
add
dec
and
push
sbb
dec
inc
std
adc
cmp
ja
(bad)
dec
adc
pop
ret
mov
outs
and
cmp
mov
test
sub
xchg
cmp
ja
lods
or
xor
test
and
cmp
mov
divps
adc
adc
sbb
adc
jecxz
sbb
arpl
xchg
fstp
ret
jecxz
add
cli
daa
adc
mov
mov
fwait
sbb
pop
fld
sbb
add
or
xor
call
xchg
test
retf
loope
fisttp
add
ins
or
jne
pop
cmp
jbe
fild
fimul
ror
sbb
cmp
mov
pop
rol
rol
jecxz
fild
push
pusha
ds
pop
add
mov
adc
lock
jecxz
cmp
ss
dec
js
add
(bad)
in
mov
or
push
jb
inc
or
cmps
jl
push
mov
pop
mov
or
push
push
cmp
jns
cmp
mov
dec
int3
sub
or
and
test
movs
aad
add
rol
(bad)
enter
call
stos
sub
addr16
mov
adc
jmp
xor
jmp
cmp
push
mov
push
imul
push
sub
ror
xor
test
xor
push
push
out
or
add
add
jae
ficomp
and
push
and
add
mov
or
cli
ja
movs
pop
xchg
(bad)
(bad)
(bad)
sahf
mov
adc
push
rol
adc
sbb
mov
mov
arpl
neg
mov
jmp
push
xchg
cmc
cmps
pop
mov
add
inc
add
jmp
push
pop
sub
add
push
ja
pop
sbb
inc
pop
lds
test
add
or
cld
ror
add
mov
mov
push
sbb
xor
cmp
cld
test
jl
or
pusha
cmp
jecxz
sub
arpl
add
loop
icebp
sub
stos
pop
jbe
nop
call
sub
aas
fadd
xor
push
mov
sar
rcl
icebp
or
xor
cmp
shl
outs
adc
ror
pusha
sub
test
adc
and
and
sub
push
sahf
clc
inc
gs
sbb
adc
dec
adc
call
mov
in
mov
cmp
sub
jo
adc
mov
push
lock
arpl
js
or
mov
cld
(bad)
sti
push
and
add
fcomp
push
or
test
into
sub
pop
add
or
cld
ja
in
sbb
mov
xor
push
mov
push
inc
pop
lock
mov
push
dec
pop
add
lahf
dec
mov
xor
movs
mov
pop
mov
add
dec
mov
bswap
pop
add
inc
cmps
add
add
pop
pop
inc
sbb
add
das
sub
pop
pop
jns
retf
sub
jnp
push
cmp
adc
int3
push
adc
imul
enter
mov
xchg
ret
or
add
js
repnz
jecxz
call
pop
push
pop
fwait
push
xor
push
pop
clc
push
push
xor
sub
pop
dec
sbb
mov
inc
mov
imul
xchg
or
mov
jno
fnsave
enter
xlat
jbe
add
mov
mov
lea
mov
ret
(bad)
(bad)
push
loope
xor
or
sbb
dec
add
dec
and
sub
rcl
iret
push
pop
xor
cmp
xor
jecxz
jb
rol
add
jnp
adc
sbb
push
mov
sahf
cmp
fldenv
(bad)
push
ds
dec
jmp
dec
sub
jbe
xor
mov
push
pop
adc
test
or
ins
add
pop
stc
outs
adc
mov
(bad)
cdq
clc
loopne
rol
mov
imul
push
mov
sbb
xor
and
jnp
jne
add
adc
push
enter
xlat
xor
add
das
adc
push
(bad)
or
fild
sbb
in
xor
push
mov
mov
or
mov
(bad)
imul
ins
jl
xchg
leave
aas
lea
not
inc
inc
xor
cmp
je
add
mov
aam
mov
ret
into
mov
pop
movs
or
rcl
adc
fadd
xchg
push
cmp
push
push
xor
pop
adc
pop
mov
sbb
and
pushf
sub
ret
add
loope
mov
pushf
and
mov
cs
pop
push
add
xor
fisubr
outs
inc
mov
mov
out
xor
jb
pop
(bad)
repz
adc
lods
dec
push
cmp
leave
nop
shl
dec
sub
test
cmp
sub
cmps
imul
inc
test
mov
add
pop
xchg
mov
fdiv
add
mov
in
dec
in
and
pushf
mov
xor
(bad)
icebp
sbb
sub
cmp
imul
cmp
int3
and
and
pop
int3
and
sbb
inc
sbb
(bad)
or
or
fisubr
movs
fisttp
sti
and
loop
mov
xchg
mov
adc
stos
loop
and
xlat
jno
adc
call
sub
inc
sbb
dec
dec
cmp
cmps
imul
lods
and
dec
xchg
pop
xchg
push
jno
xchg
test
daa
test
pop
and
fwait
inc
loopne
sbb
or
int
jns
pop
and
xchg
je
add
mov
loopne
cmp
data16
push
sbb
jo
fild
cmc
aas
and
xor
push
mov
lea
sbb
sar
fist
stos
or
and
stos
xchg
jl
mov
push
in
push
dec
xor
inc
or
ror
jns
or
xchg
inc
enter
js
pop
xchg
dec
and
or
inc
mov
add
in
push
retf
loopne
sbb
pop
call
dec
ds
inc
ror
add
xchg
add
sbb
pushf
inc
gs
ss
sbb
add
pop
pop
ret
pop
cmp
mov
add
xor
sbb
add
add
adc
mov
and
cmp
test
ret
push
add
sub
cmp
add
xor
push
add
loope
adc
pop
mov
push
lea
sub
and
retf
xchg
clc
jl
adc
or
xchg
outs
ins
inc
mov
dec
pop
push
out
xor
dec
and
push
jne
fwait
ror
and
add
mov
jne
xchg
xor
(bad)
ror
call
xchg
out
sub
push
and
add
movs
jmp
dec
push
push
call
shl
jle
je
or
fcom
and
pop
ret
pop
jns
adc
add
inc
lea
xchg
das
jg
xor
mov
enter
add
gs
arpl
add
lds
aad
or
aaa
mov
mov
jns
mov
jle
or
push
test
mov
or
setg
push
sbb
adc
ficom
xor
mov
mov
or
add
push
les
mov
xchg
rcl
and
outs
mov
out
sbb
cmp
cmp
pusha
mov
(bad)
leave
and
cmovns
add
push
leave
lahf
test
into
add
pusha
xor
mov
nop
pop
push
push
push
adc
push
mov
add
jbe
and
je
ret
iret
inc
add
push
push
push
or
sbb
sub
popf
ror
lea
adc
inc
mov
sub
gs
xor
ret
sbb
ss
adc
retf
push
dec
lods
sub
adc
gs
and
(bad)
xor
push
xchg
pop
call
jmp
(bad)
movs
fsubrp
icebp
sub
xchg
sar
xor
lods
xor
cwde
and
pop
xchg
or
mov
into
inc
mov
dec
test
clc
jl
push
jo
nop
or
xor
bound
add
sbb
adc
out
shl
sbb
(bad)
xchg
repz
dec
pusha
or
jg
or
aam
mov
sahf
aas
iret
pop
call
ret
shl
jns
jg
mov
mov
inc
jmp
bound
dec
pop
sbb
jne
lock
or
aaa
lods
dec
and
add
outs
inc
add
jns
cs
inc
enter
cmp
aas
or
mov
push
mov
cmp
js
jo
out
xchg
cmp
lock
pop
mov
jne
mov
data16
pop
clc
mov
add
xor
js
enter
ret
das
in
loop
sub
sbb
add
push
scas
inc
nop
xor
adc
pusha
mov
in
push
push
xchg
fist
adc
orps
xchg
cmps
int3
inc
mov
rep
and
cmp
dec
outs
sub
dec
inc
mov
out
push
push
imul
shl
add
lods
inc
out
and
jg
je
lods
xchg
mov
ins
(bad)
clc
mov
std
push
push
jbe
jle
pushf
repz
test
sub
cdq
mov
lahf
push
push
xchg
sub
mov
add
sbb
jb
movs
ins
inc
adc
shl
jge
push
adc
jb
cmp
xchg
mov
push
dec
jne
jno
xchg
rol
sbb
dec
ror
test
add
fwait
cmp
jae
pop
ds
dec
ret
loopne
and
bound
xor
sbb
xchg
sbb
rol
push
pop
mov
xchg
ret
in
inc
cwde
aas
inc
aaa
and
fiadd
les
test
arpl
add
iret
fld
xor
je
jle
jecxz
mov
cmp
add
dec
and
add
in
shld
frstor
mov
xor
add
mov
cmp
cs
mov
pushf
movs
mov
pop
das
in
and
test
mov
sub
in
cmp
jnp
pusha
or
es
ret
movs
mov
push
mov
sub
jl
sbb
push
sbb
retf
hlt
fwait
call
xor
cmps
(bad)
loope
sbb
repnz
xlat
jbe
sbb
add
icebp
add
xchg
(bad)
inc
and
lea
sbb
pusha
imul
cmp
push
xchg
push
aas
pusha
mov
sub
shr
push
push
mov
adc
pop
jg
jmp
pop
xor
js
in
push
lds
mov
movs
cmp
out
stos
xor
lfs
mov
enter
sar
stos
(bad)
ja
test
test
cmp
cmc
sbb
inc
out
mov
push
mov
pop
dec
xchg
in
(bad)
pushf
push
push
xchg
mov
push
push
sub
sub
ins
adc
xor
in
fwait
adc
es
xor
fadd
inc
mov
push
push
sub
iret
jge
popf
push
stos
pusha
sbb
in
mov
adc
ret
xchg
cmp
push
sub
pop
dec
xlat
pop
fdivp
jle
jnp
push
push
js
add
out
mov
(bad)
stos
ret
jl
cmp
out
sub
xor
ss
mov
and
es
sbb
mov
xchg
sub
pushf
and
or
inc
test
mov
add
sbb
pop
pop
adc
ja
mov
xor
sub
add
xor
jns
xchg
push
lea
imul
xchg
jns
mov
cmp
xchg
and
adc
pusha
or
add
sbb
out
js
fistp
cmp
cmps
add
adc
mov
pop
sub
pop
sbb
sbb
hlt
mov
push
mov
cmp
inc
inc
dec
movs
popa
dec
rcl
pop
add
xor
jo
(bad)
mul
jmp
loopne
cmp
pop
sub
js
sbb
push
hlt
jbe
popa
scas
push
mov
sbb
adc
mov
pop
sbb
inc
cmp
cs
push
cmp
repnz
rcl
jl
pop
mov
inc
pop
and
inc
out
into
nop
and
out
rol
push
mov
sub
and
lods
add
ja
in
jp
cmp
and
pop
adc
dec
mov
push
pop
add
mov
xor
inc
in
scas
iret
push
add
fs
(bad)
add
cwde
add
push
jnp
sbb
inc
aad
push
and
and
pop
jg
mov
mov
pop
shl
ficom
sbb
xlat
xchg
nop
ins
dec
dec
xchg
jo
rcl
ins
push
mov
sub
int3
mov
jle
push
inc
ret
(bad)
sti
push
cmp
pushf
std
adc
and
cmp
xor
pop
test
xor
loopne
add
mov
inc
fwait
add
or
or
ficomp
xchg
sbb
jns
sbb
and
adc
sub
fwait
inc
pop
mov
add
and
pushf
add
fsub
inc
pop
and
jb
xor
fadd
cdq
or
add
add
add
xchg
out
inc
mov
scas
nop
add
cmp
dec
jns
sbb
add
adc
fwait
xchg
and
add
pop
cmp
dec
jb
pop
and
inc
lods
mov
dec
sahf
cmp
mov
cdq
loop
int3
outs
add
adc
pop
sbb
test
mov
sub
xor
adc
or
add
add
xor
sub
jae
adc
mov
leave
mov
mov
sub
lea
add
adc
aam
sbb
sahf
dec
dec
xchg
iret
or
add
das
inc
into
aam
dec
pop
mov
pop
sub
adc
sbb
push
xchg
mov
push
push
push
xchg
movs
outs
dec
fdivr
sub
dec
cmp
ret
imul
add
sbb
inc
addr16
mov
mov
jo
jge
inc
sub
and
and
xor
fdivr
movs
leave
(bad)
fcomp
jle
addr16
rcr
and
test
cmp
dec
push
xchg
xor
mov
mov
(bad)
loop
adc
fcomp
sbb
les
(bad)
retf
or
cmp
(bad)
mov
mov
je
mov
lahf
cwde
jmp
gs
add
mov
pusha
loop
sub
inc
ins
mov
pop
sub
nop
test
or
inc
cs
pop
pop
call
ret
adc
sub
push
nop
sub
jb
xchg
sub
mov
sub
xchg
xchg
inc
cli
or
mov
int3
sbb
dec
pop
rol
stos
in
add
cmp
test
push
cmp
pop
(bad)
fs
inc
xor
aas
gs
es
cmp
and
jge
sub
int
sahf
lods
dec
mov
or
pop
adc
fst
xchg
cld
sub
in
retf
and
pop
sub
shl
xor
shl
imul
sub
xchg
xchg
pushf
xchg
cmp
pop
adc
mov
mov
clc
sub
sub
lds
xchg
push
or
pop
xor
hlt
dec
push
or
mov
mov
je
fldenv
inc
stos
add
cmps
add
jns
and
or
push
ins
push
dec
adc
jp
or
int3
stos
adc
add
fstp
cld
pop
repz
jne
mov
push
je
ja
sbb
jl
push
add
adc
inc
ja
pop
adc
lock
xor
sbb
cmp
mov
and
xor
ja
loop
out
movs
inc
cmp
mov
clc
pusha
jmp
cmp
ret
cld
cli
fs
mov
dec
fucomp
adc
mov
imul
cld
rol
shl
adc
pushf
mov
xor
sub
add
mov
mov
mov
jne
push
cwde
push
xchg
and
push
jnp
es
mov
shl
jecxz
pushf
cmp
scas
clc
sub
hlt
cmp
fcomip
sbb
aas
cwde
inc
xchg
jl
fucompp
fnstsw
idiv
mov
jp
(bad)
xor
dec
push
seta
ret
xchg
push
sbb
push
mov
mov
add
adc
call
inc
sahf
adc
adc
lds
pop
cs
leave
inc
push
dec
aam
mov
sub
or
dec
pop
mov
cmp
ds
je
fwait
push
xor
jmp
sbb
cli
das
mov
ins
popf
mov
mov
jge
cli
push
mov
and
adc
mov
push
mov
dec
push
and
shld
adc
mov
cld
add
enter
out
and
or
adc
inc
test
pop
mov
pop
or
dec
in
sbb
add
out
scas
sub
jmp
je
sbb
push
fadd
lock
jp
adc
or
inc
push
mov
push
sbb
jae
outs
jae
push
in
push
push
enter
jle
loope
mov
in
je
inc
in
mov
add
or
and
mov
add
add
sub
sub
fs
xor
cmp
imul
cmp
push
aaa
addr16
jns
int
mov
pop
and
mov
and
inc
push
cs
or
add
push
jg
xchg
mov
mov
or
outs
mov
adc
xchg
cmp
mov
dec
into
push
cmp
adc
call
inc
dec
push
adc
xor
imul
push
mov
pop
cmp
inc
mov
into
pop
mov
(bad)
add
mov
and
add
ja
add
retf
xor
push
lods
mov
sbb
sbb
js
pop
xchg
loop
jne
cmp
push
sbb
xchg
add
popa
shl
ja
add
sbb
mov
loopne
xor
and
or
mov
mov
jmp
jb
test
and
dec
or
mov
je
lea
dec
xchg
mov
xor
cld
xchg
gs
xor
jmp
mov
pop
mov
inc
sbb
push
push
adc
push
adc
add
inc
adc
fs
inc
add
or
or
mov
mov
call
or
push
dec
div
xor
int3
imul
nop
lea
adc
call
push
sbb
je
dec
xchg
lock
ret
adc
add
das
and
mov
push
mov
sbb
daa
sbb
dec
sub
cwde
push
in
jle
or
sub
push
adc
add
mov
inc
push
jb
add
add
cmp
cmp
mov
adc
ret
xchg
enter
push
fs
pop
(bad)
repnz
sar
cmp
jb
sub
push
cmps
loope
cmp
dec
dec
mov
add
fst
and
ins
push
pushf
cmp
jle
daa
fbld
int3
xor
and
popf
bound
sub
add
mov
retf
inc
rcr
and
je
sub
pop
rcl
test
mov
push
adc
call
ror
dec
add
add
jne
sbb
dec
mov
cmp
and
outs
retf
(bad)
sub
sub
mul
js
mov
js
add
adc
rol
jmp
jl
adc
dec
and
sub
sub
mov
icebp
sub
dec
aaa
popf
push
imul
or
push
inc
jl
mov
jbe
and
or
inc
nop
or
mov
xor
mov
add
retf
inc
fs
inc
(bad)
push
add
jmp
sbb
pushf
xor
push
xchg
xchg
cmp
inc
cmp
loope
push
sub
and
enter
and
out
or
inc
jne
xchg
cwde
loopne
xchg
cmp
cmp
cmp
mov
mov
iret
inc
fs
jg
sbb
dec
jl
xchg
mov
lods
mov
mov
inc
pop
or
mov
nop
sub
int
xchg
and
nop
test
xor
ret
and
or
jmp
and
std
push
or
mov
ror
mov
adc
dec
adc
popa
xor
sub
lods
push
cmp
and
or
loop
mov
enter
adc
jb
scas
hlt
dec
xor
mov
sbb
mov
add
sub
imul
pop
into
or
inc
or
mov
sub
or
lock
push
inc
pop
mov
pop
cmp
shr
icebp
sahf
(bad)
test
adc
xor
fmul
sub
sub
mov
aam
and
xor
dec
mov
pop
mov
mov
dec
pop
xchg
pop
clc
cmp
in
push
mov
jge
and
mov
dec
loopne
add
and
test
in
data16
adc
sub
push
push
lds
dec
cmp
mov
mov
data16
xchg
inc
push
dec
mov
mov
sar
and
cmp
data16
adc
jl
dec
imul
fbld
sbb
sub
and
push
adc
sbb
inc
pusha
or
push
pop
aam
adc
or
clc
adc
mov
push
cmp
fisttp
jmp
mov
sbb
mov
clc
iret
sbb
mov
(bad)
fadd
inc
out
cmp
inc
clc
rol
sbb
iret
cmp
or
call
and
sub
adc
cmp
test
sbb
aas
inc
cmp
jb
aad
push
nop
jbe
imul
inc
sub
ret
push
mov
cdq
test
push
sbb
mov
es
sub
cmp
inc
cmp
cmp
cmp
cmp
xchg
inc
lock
lods
cmp
push
adc
fs
inc
and
fs
inc
es
inc
pop
xchg
inc
cmp
pusha
inc
cmp
push
cmp
pop
mov
xchg
inc
xchg
pop
mov
pusha
lods
gs
inc
es
data16
cmp
bound
add
fs
leave
and
pop
inc
xor
and
and
and
push
sbb
leave
xchg
imul
mov
and
and
add
sbb
cdq
in
jne
push
cdq
in
jbe
ja
cdq
in
dec
js
jns
nop
dec
push
fs
nop
dec
push
cdq
jnp
jg
push
cdq
in
and
dec
loopne
jb
dec
inc
scas
add
and
and
enter
inc
push
jb
inc
mov
push
loopne
mov
cmp
dec
and
cmp
inc
inc
pusha
fs
inc
es
add
cmp
cmp
dec
xchg
sbb
xchg
cld
dec
mov
jle
xor
and
jl
xor
and
and
and
mov
(bad)
int3
mov
xor
and
(bad)
mov
cdq
in
dec
nop
sbb
in
dec
push
xor
dec
nop
dec
push
cdq
xchg
pusha
xchg
dec
push
cdq
in
xchg
mov
cdq
in
cwde
mov
nop
dec
outs
les
nop
dec
push
aam
loopne
dec
push
cdq
sub
dec
push
cdq
in
test
xchg
test
jb
and
sub
dec
xor
jno
dec
pop
or
dec
xor
leave
cdq
inc
mov
or
sub
cmp
shl
inc
or
lods
mov
ret
pop
sbb
and
ror
adc
sbb
fild
shl
pop
xor
nop
and
and
push
ja
push
in
cmp
je
(bad)
hlt
jb
adc
sbb
ss
mov
fs
cmc
xor
add
inc
cmp
pop
mov
enter
jo
adc
fbstp
jb
pop
pop
pop
or
adc
push
mov
sbb
add
(bad)
dec
ficomp
rol
and
xchg
nop
(bad)
xchg
or
scas
clc
add
jecxz
or
neg
sbb
and
adc
jo
mov
adc
mov
inc
push
sbb
sbb
push
sub
or
jb
cmp
and
movs
add
rcl
sub
loop
or
xchg
and
mov
or
in
adc
adc
pusha
inc
add
ins
inc
or
or
add
pusha
xchg
add
(bad)
mov
ficomp
sahf
cmp
fdivr
cmp
pop
add
mov
xchg
and
cli
push
lahf
mov
sub
js
xor
test
push
push
or
xor
and
cmp
adc
aam
sub
push
mov
push
jb
(bad)
dec
inc
jp
inc
push
push
inc
and
push
lock
cmps
fdiv
pop
enter
inc
and
pop
and
inc
jae
or
xor
enter
(bad)
cmp
pop
inc
mov
mov
pop
dec
push
inc
daa
test
pop
aas
push
inc
or
daa
movs
mov
sub
jle
cmps
adc
ret
fistp
lea
jle
cld
outs
lods
inc
aas
ins
(bad)
cmp
je
mov
or
aad
pop
push
cwde
movs
mul
add
push
inc
adc
dec
adc
cmp
mov
xor
mov
sub
inc
or
and
xor
ja
push
adc
adc
out
sbb
fadd
into
push
pushf
ins
test
cli
xchg
dec
mov
call
push
xor
loopne
cmp
jb
add
loope
and
add
push
add
cli
cmp
or
mov
push
and
and
jbe
out
hlt
cmps
xor
push
add
push
jmp
std
push
xor
sub
in
jmp
pop
repnz
push
jmp
cli
mov
cmp
adc
lock
xchg
ss
std
mov
sub
add
or
(bad)
mov
gs
or
mov
outs
loop
aam
pusha
sti
fs
sar
push
push
call
and
mov
loope
ss
data16
and
data16
test
jne
jmp
push
gs
repz
mov
sub
cmc
aas
std
dec
jne
bound
adc
lods
enter
int3
and
aam
sti
or
inc
pop
(bad)
loopne
es
sbb
lahf
fwait
test
sbb
pop
xor
lock
jne
inc
push
test
xor
sbb
icebp
add
pop
pusha
jecxz
sub
cwde
sbb
adc
xor
or
sub
add
sub
mov
movs
adc
adc
sbb
pop
adc
sbb
mov
push
jge
add
leave
js
lahf
pop
xchg
(bad)
fs
mov
add
push
jle
or
jmp
pop
icebp
inc
pop
xchg
push
cmp
test
jb
sub
cmp
add
bound
push
push
fucomip
ror
ins
or
dec
cmp
and
mov
cmps
cmps
adc
pop
sbb
adc
xchg
add
jg
leave
inc
dec
out
mov
add
add
or
or
add
mov
mov
push
push
fsub
ja
push
sbb
add
call
repz
add
push
add
mov
jecxz
mov
push
mov
mov
fadd
cmp
xor
add
mov
retf
cdq
sbb
cmps
idiv
in
sub
dec
jne
fcom
mov
push
psrad
stos
jnp
mov
mov
cmp
mov
lea
cmp
inc
jge
jns
pop
rcl
add
sbb
mov
pop
and
add
jo
push
or
sub
or
adc
add
push
dec
and
adc
jmp
rcl
inc
iret
dec
push
je
push
cmc
push
mov
gs
fdivr
xchg
jbe
pop
dec
mov
or
stos
sar
pop
in
loopne
sub
dec
or
lahf
push
jb
in
pop
fs
in
and
push
mov
repnz
xor
xchg
adc
push
call
cwde
xor
sub
and
mov
adc
pop
pop
repnz
inc
or
and
push
pop
push
or
jl
or
nop
push
jo
mov
nop
add
sbb
sub
loopne
lds
mov
jae
test
pop
pop
popa
loop
push
in
sbb
jg
add
jmp
push
cmp
aas
xlat
dec
pop
or
jmp
inc
sub
xor
loop
adc
xor
push
add
mov
ss
push
dec
js
bound
add
sbb
bound
inc
enter
push
xchg
sbb
xor
mov
push
jmp
pop
sbb
push
repnz
dec
or
movs
or
leave
ror
jecxz
jb
cmc
test
out
add
adc
add
inc
mov
fild
sub
mov
sub
xor
pop
inc
repz
adc
stos
dec
rol
out
sbb
ficomp
fist
call
shl
mov
aam
test
dec
icebp
cmps
sub
push
sar
movs
mov
ret
out
js
mov
ret
dec
pusha
mov
and
mov
pop
dec
lahf
movs
aam
push
pop
or
adc
rol
adc
inc
js
in
rol
jno
mov
test
mov
les
sub
mov
lock
mov
push
leave
push
ins
add
and
inc
mov
dec
and
inc
add
stos
ret
test
sbb
rcr
mov
push
or
pop
mov
mov
push
dec
lahf
stc
leave
and
xor
xor
shld
dec
out
daa
movs
(bad)
shl
push
rcl
pop
rol
ja
and
(bad)
xchg
arpl
sbb
push
push
ret
pusha
lea
cmp
aad
push
ja
lods
mov
sub
push
push
cs
sbb
cs
xchg
fbld
sbb
and
add
jmp
ret
dec
push
inc
adc
pop
(bad)
xor
xchg
jge
test
repnz
mov
in
mov
jg
fcom
(bad)
jg
popa
xchg
mov
retf
adc
setl
aam
dec
mov
lods
add
popa
gs
mov
mov
mov
sbb
and
or
adc
cmp
ins
xlat
sbb
mov
call
mov
and
stos
cmp
push
shl
push
add
iret
pop
add
xor
adc
adc
mov
ins
xchg
mov
lea
push
ss
rol
je
mov
(bad)
jp
pop
aam
push
push
(bad)
ds
lahf
retf
jnp
shr
pop
sub
cmp
rcl
cmp
jne
rcl
push
(bad)
pop
pushf
fadd
in
mov
mov
test
inc
mov
or
or
jb
addr16
ss
mov
mov
shr
jle
repnz
add
lock
cmp
sar
mov
push
daa
push
scas
popf
loopne
pop
inc
push
ja
lods
int
dec
push
inc
or
in
adc
into
aas
enter
or
test
and
dec
sub
psubd
test
and
pop
cdq
call
sbb
push
call
sar
push
pop
movs
rcr
xchg
in
xor
cmps
in
add
cli
adc
cmp
and
sbb
sub
dec
dec
lods
mov
push
nop
call
or
int
ret
(bad)
jmp
mov
pop
mov
mov
in
xchg
adc
cmp
or
or
nop
pop
sbb
mov
jbe
adc
es
aas
mov
sbb
cmp
cli
cmps
mov
mov
(bad)
retf
xor
or
or
cmp
sbb
xchg
xor
jmp
scas
pusha
jge
jmp
mov
mov
sbb
popf
sbb
loope
cmps
sbb
mov
movs
jnp
test
lds
mov
in
add
xor
or
mov
jecxz
cmp
mov
std
mov
lock
sub
cmp
jo
int
or
jb
clc
cmp
or
clc
push
mov
push
xor
sahf
ret
xchg
inc
add
or
jne
sahf
pop
clc
movs
xchg
xchg
ds
add
mov
add
jb
sbb
and
movs
dec
jno
cmp
cwde
adc
or
sbb
inc
sub
aas
adc
test
or
or
(bad)
mov
add
mov
or
leave
adc
adc
mov
jmp
sbb
mov
call
sub
idiv
inc
inc
lea
test
popa
iret
dec
dec
sbb
out
das
data16
cs
in
sahf
jne
push
pushf
aam
fild
enter
retf
cmp
pop
(bad)
jns
push
adc
mov
scas
xchg
mov
jmp
pop
push
add
cmp
cmp
loopne
cmps
mov
fcom
aam
adc
das
test
and
push
ror
outs
cmp
movzx
cmp
pop
jl
test
push
mov
enter
jp
xchg
aam
add
jmp
fdiv
xchg
mov
stc
add
cmps
pop
inc
mov
mov
outs
ret
dec
pop
cmp
ficomp
and
add
add
jne
xor
push
or
aas
dec
inc
ss
dec
in
or
xor
sub
push
inc
jne
mov
xor
pusha
sub
push
data16
fld
push
mov
fs
call
push
add
mov
pop
xrelease
adc
add
pop
jns
add
pop
mov
call
ret
ror
push
test
push
inc
sbb
out
sahf
test
pop
repz
lock
mov
cmp
mov
movs
imul
es
out
pop
cmp
push
add
xor
add
lahf
int3
inc
in
push
sub
das
repnz
xchg
or
add
iret
mov
add
mov
leave
pop
mov
retf
push
push
mov
hlt
mov
push
or
fsub
(bad)
and
in
rcl
cmps
cmps
or
sub
addr16
pop
mov
push
push
add
inc
les
call
mov
add
mov
in
adc
retf
cmps
xor
out
jmp
push
test
es
mov
xchg
int
mov
add
dec
int
xor
mov
bound
or
sbb
add
push
push
je
push
aas
ret
sbb
jo
cli
jp
inc
sar
call
add
pushf
cli
sub
xor
sbb
xor
jno
add
mov
or
add
mul
xchg
dec
or
movs
iret
gs
push
push
push
mov
mov
add
mov
sub
clc
and
adc
js
loopne
add
pushf
sbb
inc
mov
push
je
or
jle
fcom
or
jbe
aaa
jne
adc
cmp
(bad)
add
fs
push
xor
(bad)
in
inc
jbe
jecxz
inc
sbb
jne
mov
inc
shr
or
mov
sar
or
test
cmp
xor
sbb
cmps
lods
sub
adc
and
inc
mov
inc
adc
mov
add
xor
push
addr16
in
cmp
dec
cmp
pop
cmps
dec
mov
ficom
ins
sahf
je
lods
in
repnz
lods
popa
add
dec
sbb
mov
test
in
or
sbb
test
lahf
and
pop
inc
aaa
mov
(bad)
les
call
sbb
jb
lea
imul
js
jmp
xor
jl
cmp
xchg
xchg
ja
int3
and
call
push
cmp
jo
push
add
and
inc
mov
jo
rcr
and
xor
lds
and
xchg
shl
push
push
and
mov
imul
sti
js
add
mov
js
hlt
xchg
(bad)
(bad)
es
loopne
data16
(bad)
ss
test
call
and
inc
push
cmp
scas
xor
push
ds
lock
mov
sub
xor
mov
bound
sbb
jbe
xor
(bad)
test
xchg
sbb
sub
push
in
inc
ins
sbb
mov
inc
or
scas
dec
fdiv
inc
shl
(bad)
mov
push
add
mov
mov
add
sti
bound
jg
dec
nop
inc
mov
and
fcmovnu
inc
data16
pop
push
push
or
push
mov
adc
adc
mov
mov
in
push
ret
jge
dec
adc
and
inc
xor
fs
xchg
inc
loopne
sub
pop
(bad)
add
sub
nop
add
push
dec
mov
les
adc
lea
lea
mov
and
jg
popa
fwait
sub
or
or
mov
ins
cwde
pusha
(bad)
call
fsubr
lock
ss
ret
lods
xchg
setle
retf
adc
push
sbb
lock
int3
adc
sti
dec
mov
sbb
push
xchg
test
and
test
xor
test
pop
xchg
mov
push
bound
hlt
fidiv
rol
cmp
mov
loop
ins
mov
add
les
or
inc
inc
dec
mov
push
in
lock
clc
jmp
add
add
adc
pop
and
(bad)
mov
call
dec
ror
movs
(bad)
loopne
jbe
push
pop
push
jmp
jne
movs
adc
and
pop
shl
or
lods
(bad)
sbb
sub
mov
inc
clc
aaa
dec
ret
sub
adc
adc
cld
in
adc
aad
fwait
pop
cwde
inc
mov
jge
adc
sub
ret
mov
loopne
clc
xor
push
in
ret
call
adc
and
aas
mov
cmp
ss
ins
push
mov
icebp
push
shl
pop
add
in
test
push
ja
and
call
xor
dec
ins
xor
lock
adc
and
shl
push
adc
(bad)
or
add
add
aad
bound
dec
or
add
cmp
pop
or
pop
inc
pop
pop
fild
bound
es
mov
outs
or
and
pop
or
or
add
test
inc
mov
adc
shr
cmp
inc
xor
fisub
and
inc
dec
push
push
imul
sahf
mov
mov
sbb
std
pusha
inc
push
arpl
xchg
adc
add
and
add
or
and
add
test
pop
lods
call
test
mov
adc
or
mov
push
jecxz
popa
mov
pusha
push
test
adc
test
sub
das
push
dec
push
ret
test
sbb
mov
add
sbb
aad
dec
or
push
add
push
lea
pop
cld
in
mov
cwde
push
push
mov
(bad)
pop
add
(bad)
retw
push
mov
add
in
sbb
xlat
mov
xor
adc
push
lock
mov
int3
inc
adc
add
call
cmp
adc
mov
aaa
jle
dec
sbb
or
xchg
cmp
or
inc
sbb
xor
xor
ficomp
jb
daa
fwait
sbb
mov
sbb
and
add
xchg
mov
add
inc
test
adc
aam
ins
push
cmc
leave
sbb
push
dec
adc
sub
dec
je
cdq
(bad)
int
sub
dec
cmp
stos
mov
inc
cwde
movs
js
mov
adc
je
das
rcl
add
or
inc
adc
lock
popa
shl
je
cmp
daa
or
sub
outs
or
std
dec
inc
popa
pop
xchg
jmp
sbb
inc
xchg
daa
xchg
add
data16
add
sbb
add
imul
cmp
sbb
jbe
lea
add
movs
mov
dec
cmps
sub
add
adc
sbb
jmp
fdiv
add
sub
dec
pop
test
adc
add
and
xchg
shl
clc
jne
mov
clc
or
ret
arpl
sbb
loope
adc
inc
add
mov
loop
test
cwde
or
push
int3
cmp
scas
mov
and
mov
cmp
pop
out
fstp
and
mov
xchg
mov
sar
xor
pop
mov
sbb
sbb
cmp
xchg
add
retf
mov
add
int3
sub
jae
popf
cmps
adc
cwde
push
sbb
mov
pop
sbb
enter
mov
xchg
jb
ins
repz
test
dec
aad
and
and
movs
sub
es
in
sub
push
test
push
add
push
cmps
mov
das
pusha
push
test
add
and
aad
xlat
or
and
in
idiv
loopne
or
jge
daa
in
sub
mov
push
call
add
mov
ja
sbb
movs
xchg
mov
jl
add
ins
jge
dec
and
cmc
push
add
push
movs
mov
inc
fist
(bad)
loopne
test
sbb
pusha
inc
dec
push
and
imul
imul
jg
or
jmp
push
xchg
dec
push
pop
jg
loopne
add
fcomip
test
mov
jmp
mov
dec
or
add
scas
push
daa
xchg
or
dec
cli
(bad)
fs
rol
pop
es
(bad)
cmps
dec
mov
dec
add
push
lock
mov
dec
sbb
push
or
jbe
lods
sbb
retf
mov
pop
je
cmp
add
xchg
jecxz
or
shl
mov
mov
push
psraw
icebp
mov
ror
inc
loopne
push
sbb
mov
popf
aad
sti
xor
dec
xchg
push
cmp
int3
and
outs
call
sbb
lea
mov
mov
mov
inc
imul
dec
mov
ss
repnz
popa
in
mov
sub
add
outs
shl
cdq
cmp
add
je
jecxz
pop
dec
or
pop
push
popf
retf
mov
cmp
sub
push
jo
ins
push
sahf
aad
movs
cmp
push
xor
pop
shr
xor
(bad)
js
mov
inc
retf
jnp
jo
test
and
push
test
movs
cmp
loope
dec
sti
call
call
add
mov
cs
mov
test
xchg
in
add
push
add
xor
imul
les
bound
jo
sub
rol
cwde
or
lock
mov
bnd
cwde
nop
(bad)
jmp
xor
dec
dec
or
sub
into
push
push
xchg
push
xor
icebp
les
aaa
xchg
sub
inc
sbb
test
mov
(bad)
mov
mov
mov
xchg
xor
push
add
pop
fsub
leave
sbb
mov
ins
sub
push
xor
or
or
es
(bad)
shr
push
jge
cmp
iret
cmp
mov
dec
pop
jl
dec
xor
push
jecxz
retf
cs
inc
ficomp
dec
(bad)
xor
push
cmp
add
iret
mov
(bad)
mov
mov
add
push
or
rol
leave
xchg
retf
clc
jge
mov
int
add
pop
add
xchg
dec
push
jns
aas
mov
daa
xchg
ret
stos
inc
and
ret
ins
hlt
js
mov
xor
test
pop
sbb
xchg
xchg
outs
push
or
xchg
mov
jmp
xchg
dec
fstp
xchg
mov
out
les
jge
test
xchg
dec
aad
jle
add
inc
cmp
mov
(bad)
jmp
int3
and
xchg
out
in
int3
add
jmp
push
mov
push
inc
pop
xchg
inc
sub
in
xor
ret
add
xor
ret
lods
fcomp
in
xchg
push
pop
nop
add
cmp
aas
add
dec
sbb
adc
jle
sbb
iret
xor
add
cmp
inc
shl
and
push
ret
sub
or
retf
pushf
ret
retf
outs
xor
ins
inc
int
aad
xor
cmp
jp
dec
sub
and
call
add
jg
mov
hlt
cmp
stc
sub
cmp
sub
mov
add
pop
mov
shr
sahf
ror
sub
jg
stos
add
cmp
and
add
or
ds
out
mov
jle
pop
xchg
xchg
mov
lahf
pop
cmp
xor
add
adc
and
adc
add
push
popf
mov
stos
fist
inc
cmps
fs
adc
fs
adc
adc
inc
test
test
adc
inc
adc
dec
adc
push
adc
dec
adc
jne
xor
xchg
and
adc
adc
sbb
test
adc
jge
adc
mov
addr16
daa
loope
push
add
adc
mov
add
jle
jmp
mov
jns
loopne
adc
jbe
xchg
retf
adc
call
xor
jl
jmp
add
and
fwait
mov
xor
inc
inc
mov
mov
pop
push
mov
shl
jo
es
loope
add
inc
(bad)
or
int
mov
add
in
add
mov
xchg
sbb
add
jle
adc
adc
add
cmp
and
repnz
pop
pop
and
add
and
jb
adc
and
pop
add
adc
ss
or
and
jg
mov
jns
pusha
and
push
adc
xor
loop
hlt
pop
pop
sbb
add
adc
mov
and
adc
or
adc
or
xor
sub
nop
or
ret
clc
xor
mov
pop
sahf
push
cmps
or
sbb
inc
jle
mov
hlt
xchg
cwde
jb
ror
test
lahf
and
sbb
fist
mov
or
jmp
and
pop
add
cmp
lods
je
pop
mov
rol
add
pop
adc
pop
enter
cmp
nop
sbb
inc
adc
adc
adc
cmp
mov
jle
cmp
pop
jne
(bad)
mov
pop
add
add
pusha
les
aad
or
add
aad
push
sbb
xchg
mov
xchg
adc
xchg
retf
add
std
jb
xor
adc
adc
xor
adc
call
not
cmp
cld
ret
mov
imul
or
loop
int3
sub
push
adc
cmp
test
in
mov
les
nop
mov
add
dec
je
pop
mov
sbb
or
cmp
jle
je
dec
add
outs
push
dec
xchg
int3
or
push
cmps
imul
mov
das
js
cmp
outs
xor
mov
(bad)
lock
test
and
dec
pop
add
xchg
and
lock
jo
ja
push
(bad)
add
and
ret
sbb
xor
or
add
mov
dec
dec
push
push
xor
add
mov
shl
test
add
ins
repz
or
sub
cmp
cs
push
mov
sbb
mov
sbb
test
pop
add
stos
inc
pop
mov
add
push
cmps
or
int
pushf
(bad)
mov
sub
and
mov
jecxz
and
sbb
addr16
sahf
mov
xchg
push
test
mov
test
adc
nop
sbb
call
adc
mov
mov
pop
inc
stc
loope
and
out
imul
fbstp
mov
rol
xor
jl
push
ret
xor
mov
jns
or
or
adc
pmulhw
loopne
test
les
xor
adc
(bad)
xchg
and
inc
push
xor
xor
sar
mov
or
xor
or
imul
mov
cs
jle
or
cdq
icebp
call
nop
xchg
or
xchg
icebp
lea
add
or
jg
cmps
pop
and
push
xchg
test
pop
stos
sub
sbb
push
aam
adc
fld
cmps
and
inc
push
adc
fnstcw
xor
jge
adc
mov
cmp
add
pop
rol
shr
inc
cmp
or
jl
arpl
mov
xor
sbb
xchg
clc
jo
pop
xchg
lods
adc
sub
mov
loopne
pop
pop
lahf
xchg
dec
test
add
push
imul
jle
cli
push
adc
xor
out
and
mov
dec
push
mov
cwde
jl
dec
xor
jmp
mov
cmp
mov
add
(bad)
mov
jecxz
rcl
mov
lods
mov
jp
jns
cld
inc
sub
mov
ret
shl
and
sub
xchg
xchg
or
fisttp
fild
mov
ret
cs
mov
and
push
aam
mov
mov
or
lock
retf
(bad)
mov
lods
lahf
xor
pop
adc
xor
loop
enter
push
mov
xchg
pop
cmp
lock
sub
sar
push
mov
idiv
popa
test
imul
(bad)
dec
cwde
dec
dec
in
ds
hlt
or
add
or
mov
ret
dec
mov
mov
and
xchg
mov
jne
xor
mov
add
mov
jecxz
aad
or
test
jge
jl
xchg
inc
add
rol
push
push
sub
inc
mov
ds
mov
nop
sub
retf
inc
(bad)
sbb
or
(bad)
js
pusha
cmps
es
sub
sbb
fwait
pop
enter
add
jbe
add
cwde
sbb
inc
pushf
xor
and
loop
jo
pop
fisttp
ror
aas
add
dec
add
cmp
and
pop
cmp
sbb
mov
or
lea
push
push
pop
adc
inc
pop
push
cmp
inc
(bad)
cmp
sbb
mov
inc
hlt
push
cld
push
push
popa
push
or
nop
in
mov
punpckhdq
fldcw
dec
ror
push
rcr
jno
jg
mov
xor
fst
shl
hlt
adc
sub
add
(bad)
movs
addr16
iret
mov
in
mov
sar
test
or
xchg
mov
xchg
adc
xor
fcos
and
pop
cmp
add
enter
push
bnd
add
pop
push
push
mov
inc
push
and
rol
pushf
ret
rcr
xchg
mov
mov
je
add
mov
mov
bound
jno
pop
jecxz
xor
or
mov
je
dec
jne
jnp
in
add
dec
push
inc
push
mov
mov
rcl
(bad)
gs
xor
add
adc
push
sbb
cmp
pop
mov
rcl
mov
(bad)
push
pop
jg
and
dec
sbb
sub
xchg
add
test
ds
cmps
sbb
adc
xchg
push
xchg
dec
adc
push
inc
jp
(bad)
xor
push
fadd
xor
sbb
in
or
paddb
shr
push
inc
(bad)
and
cmp
pop
sub
mov
push
scas
jb
in
mov
popf
pop
dec
or
sbb
inc
dec
mov
dec
xor
add
inc
jg
sti
push
rcr
sbb
cs
and
jno
sbb
or
push
lock
push
outs
pop
jne
mov
sbb
push
or
inc
xor
(bad)
into
loope
lods
inc
cwde
mov
pop
xor
push
stc
xor
inc
pop
push
lock
mov
test
or
ret
or
idiv
and
stos
dec
mov
test
sbb
mov
cmps
adc
daa
mov
or
inc
xchg
and
or
push
mov
cdq
or
inc
es
push
mov
stos
aas
xor
push
leave
cmp
out
inc
test
mov
cmp
xor
shl
or
(bad)
cmp
cwde
add
mov
mov
mov
sbb
mov
aas
push
rcr
sbb
nop
mov
jb
cli
or
jg
(bad)
faddp
add
lods
test
imul
xor
icebp
loop
sbb
pop
sub
mov
push
loopne
add
jmp
dec
mov
add
pop
xchg
add
jnp
dec
mov
cmp
jle
ret
int3
mov
push
mov
mov
fild
(bad)
je
sub
adc
adc
jbe
xor
cmp
add
add
add
jl
xchg
stos
aaa
mov
or
dec
cli
jbe
or
jb
jle
loop
add
ss
xor
scas
sbb
je
sbb
inc
xchg
lds
mov
test
push
loopne
inc
test
push
or
push
lock
aas
aas
pop
add
adc
jno
into
sbb
test
sti
pop
adc
or
hlt
test
es
xor
add
xchg
push
or
fsubr
call
push
je
ret
dec
ins
aaa
dec
adc
iret
jae
cmp
dec
cld
sub
adc
test
push
mov
repnz
lods
add
out
movs
clc
mov
dec
out
retf
out
inc
sti
movs
mov
(bad)
push
sar
push
push
(bad)
mov
cmp
jg
sbb
retf
inc
xor
cld
sbb
sub
icebp
loop
rol
mov
ss
mov
xchg
sbb
adc
add
cmp
cli
jno
repnz
adc
inc
test
sub
push
test
or
test
loopne
call
lock
mov
and
jecxz
shl
mov
sub
test
mov
rcl
jmp
and
ins
mov
mov
adc
and
mov
ds
and
sub
mov
je
push
rol
daa
mov
push
test
aam
jp
xor
popf
ins
push
push
rcr
mov
jl
pop
and
aad
sbb
adc
stos
and
xchg
dec
mov
sar
dec
imul
push
and
loope
push
push
lods
push
leave
add
scas
loopne
mov
dec
loopne
aaa
push
movs
cmps
pushf
loopne
ret
ret
push
push
ja
out
je
aaa
retf
test
jmp
xor
adc
fdivp
inc
push
sub
push
sub
movs
es
(bad)
ret
test
and
jne
sub
daa
cmps
and
aas
push
sub
fiadd
pop
pop
das
mov
leave
clc
enter
mov
inc
add
push
dec
adc
add
mov
mov
aam
(bad)
pusha
jnp
mov
pop
and
movs
pop
pop
mov
imul
push
mov
push
mov
outs
mov
cmp
adc
pop
lahf
and
frstor
pop
xor
lea
or
loope
test
inc
ret
xchg
mov
dec
push
add
cmp
and
inc
test
dec
loopne
dec
icebp
push
sbb
das
mov
inc
pop
sbb
or
xor
sub
dec
xor
dec
and
jb
push
xor
(bad)
and
sub
pop
mov
shl
hlt
or
(bad)
xor
je
mov
mov
adc
rcl
or
or
dec
shl
mov
mov
fld
adc
scas
jg
mov
cmps
enter
test
mov
pop
call
iret
dec
or
push
pop
xor
inc
inc
cld
lock
jns
cwde
sbb
sar
cmc
xchg
cld
and
xchg
sbb
xchg
xor
mov
xor
pop
inc
lahf
mov
ret
ror
lea
add
xor
sbb
cmp
repnz
jle
jnp
mov
xchg
mov
hlt
scas
mov
add
adc
lods
sbb
cmp
add
ret
inc
mov
xchg
sbb
lea
mov
lock
pop
mov
ror
repnz
push
push
push
std
or
pop
add
and
push
add
sbb
push
add
(bad)
(bad)
arpl
out
ds
or
icebp
mov
movs
sahf
mov
lock
and
(bad)
jl
(bad)
xlat
xor
mov
mov
cmc
push
inc
push
rcl
pop
stc
imul
aaa
sub
aad
movs
inc
sbb
ss
or
push
push
push
and
cmp
xlat
xor
dec
pop
out
xor
sbb
outs
adc
ja
fist
mov
or
test
aaa
pushf
test
lods
pop
or
sbb
xchg
and
mov
retf
jb
mov
stos
imul
and
push
jo
jmp
mov
mov
jmp
add
or
je
imul
inc
xor
xchg
cmps
xor
push
sbb
dec
rol
dec
movs
inc
cmp
cmp
dec
dec
sahf
xor
sbb
pusha
and
int
mov
add
adc
add
sbb
pusha
popa
jmp
or
out
aad
xor
push
outs
popa
add
in
in
adc
pop
ja
adc
cmp
out
call
rol
iret
inc
inc
inc
cld
jae
sbb
inc
jo
pop
pusha
jp
jmp
inc
pop
enter
mov
aam
cli
dec
inc
jbe
and
xor
or
js
sub
push
sbb
push
add
loop
or
add
sub
adc
pop
inc
repnz
pop
pop
sti
loope
rol
mov
les
xchg
call
sar
out
pop
mov
loop
shr
dec
or
imul
sar
xor
mov
test
jne
jbe
add
shl
fwait
aam
ss
mov
sub
or
push
shl
sub
mov
aaa
add
mov
aam
leave
add
cdq
mov
jnp
xchg
adc
push
scas
cmp
jmp
push
xor
popf
fld
cmp
js
inc
inc
cmp
and
sub
lods
aas
push
sub
aaa
or
inc
(bad)
popf
cli
adc
lock
icebp
ja
mov
mov
(bad)
cwde
jle
call
fidivr
xchg
add
dec
mov
or
jg
inc
and
cmp
inc
rcr
sbb
xor
or
dec
pop
mov
pop
sbb
ret
cmp
pop
sub
xor
add
and
pop
xor
push
xchg
and
or
sub
cmp
jmp
push
inc
outs
cld
(bad)
js
dec
push
add
jl
xchg
fisubr
adc
mov
jp
xchg
mov
adc
into
sbb
or
add
bound
pusha
nop
pushf
fwait
add
jg
pop
push
imul
add
inc
retf
rcl
pop
add
sub
mov
add
add
sub
loopne
mov
push
adc
call
pusha
inc
adc
pop
sub
es
lods
xor
push
mov
rol
mov
xchg
push
sub
js
or
jbe
pop
xchg
jo
scas
inc
jge
xchg
adc
mov
mov
in
inc
mov
jmp
xor
jg
or
jg
xchg
ret
aam
mov
and
stc
mov
jmp
sub
xchg
sar
xor
test
mov
fs
xor
loope
aam
jmp
div
sbb
push
xchg
mov
jno
adc
push
out
pop
sbb
mov
sub
pushf
test
jg
and
push
jecxz
push
dec
imul
xchg
pop
pusha
add
in
pop
mov
sbb
jge
pop
inc
dec
pop
imul
fcmovnb
shl
adc
adc
xor
shr
and
mov
aad
add
adc
scas
xchg
data16
leave
shl
in
adc
jle
pusha
sbb
fisttp
out
ret
mov
retf
push
lock
jle
mov
push
lock
dec
fmul
(bad)
mov
mov
data16
mov
add
lahf
and
push
inc
popf
adc
pop
imul
add
sbb
sub
adc
cmp
cmp
test
inc
lahf
mov
adc
cmp
out
mov
add
push
pop
push
adc
stos
mov
inc
push
pop
lds
pop
and
mov
sub
aas
nop
and
aaa
and
or
xchg
xor
cmovle
dec
in
inc
or
add
add
xor
je
outs
test
inc
sub
das
inc
mov
add
mov
xchg
xchg
inc
jb
or
xor
loope
adc
and
or
xor
in
push
push
mov
dec
or
les
mov
nop
ins
ret
sbb
jo
add
or
inc
sbb
dec
cli
add
jl
mov
or
push
pop
add
adc
movs
and
adc
sbb
mov
lock
outs
scas
sub
mov
loope
mov
jg
out
inc
retf
jo
mov
ret
shr
int3
je
lea
adc
ret
jne
and
jb
loop
mov
pop
xchg
ror
add
int3
inc
xor
xor
mov
mov
push
ja
push
inc
xor
jne
retf
add
ja
adc
movs
int
xlat
outs
xor
xor
pop
xchg
jno
mov
ins
xlat
dec
bound
pop
mov
sub
inc
and
mov
retf
arpl
jbe
loopne
les
mov
fisttp
sbb
xchg
sub
cmp
aad
enter
in
stos
push
icebp
dec
jb
mov
loope
push
rol
inc
mov
(bad)
xor
push
ja
and
in
cmps
sti
add
ss
xchg
hlt
push
out
push
fld
call
xchg
mov
add
loope
ss
lds
mov
or
lods
mov
pop
xor
out
aam
adc
inc
fimul
jo
sahf
adc
or
das
test
cwde
push
jo
push
or
data16
xor
push
pusha
in
adc
jne
lea
movs
push
iret
out
inc
push
cmp
xchg
stos
xor
inc
ror
xchg
int
dec
clc
fnsave
xchg
mov
xor
xchg
sbb
adc
add
sti
cld
call
lahf
sub
icebp
lods
mov
inc
jns
and
and
and
adc
popf
dec
adc
in
lods
xchg
ret
test
or
pop
add
mov
jne
dec
test
aad
add
inc
sbb
loope
push
and
adc
add
ins
les
and
mov
dec
and
fcom
sbb
ret
add
xchg
ret
dec
cmp
dec
or
add
push
imul
scas
scas
jbe
inc
push
and
xchg
add
(bad)
or
and
movs
popf
and
or
push
sub
push
jne
xchg
xchg
les
retf
add
cld
lods
jbe
sub
xchg
ret
sub
jecxz
xor
ret
ret
(bad)
pop
inc
iret
mov
retf
xchg
cmps
imul
inc
or
xchg
jl
cmp
retf
in
push
mov
js
and
call
dec
add
mov
stc
(bad)
(bad)
pop
shr
gs
jmp
inc
cmp
adc
lds
mov
inc
or
xchg
push
lods
sub
xlat
pop
xor
dec
sar
sbb
push
pop
mov
cmp
push
dec
or
jmp
lahf
inc
div
xchg
jp
xchg
stc
inc
push
cmp
mov
add
push
push
sub
cwde
adc
mov
pop
jmp
fs
push
xor
pop
(bad)
nop
or
or
cs
pop
ja
dec
sbb
sub
or
int3
das
add
cmps
fistp
rol
mov
adc
bnd
sbb
sbb
cs
hlt
xor
pop
push
sbb
pop
repz
pop
and
dec
push
xchg
and
in
mov
mov
lock
je
mov
call
arpl
cmc
push
sub
xor
mov
add
je
or
push
call
or
dec
mov
xchg
push
(bad)
js
add
dec
pop
xor
(bad)
mov
mov
outs
ror
popa
cmp
dec
cmp
adc
jno
mov
add
pop
fs
int3
pop
inc
out
pop
adc
or
add
jmp
mov
or
dec
jae
mov
sbb
sub
push
inc
mov
inc
shl
sub
cmp
pop
sti
add
push
adc
out
adc
pop
push
dec
ins
pop
add
and
mov
xor
iret
sahf
or
cmp
shl
or
xor
shl
xchg
lahf
add
xchg
inc
int3
lahf
sub
add
mov
push
hlt
sbb
push
ins
xchg
repz
sbb
dec
lea
sub
mov
mov
lahf
clc
xchg
xchg
pop
cmp
adc
add
push
or
and
ucomiss
aaa
and
or
nop
or
int3
call
sub
pop
adc
mov
pop
cs
add
pop
dec
push
lods
and
imul
fs
xchg
retf
test
call
inc
add
out
inc
and
sahf
adc
movs
cmp
jne
or
push
enter
push
jnp
xchg
pop
dec
pop
enter
out
jbe
sbb
pop
mov
sbb
test
cwde
add
sub
sbb
sbb
mov
mov
jo
push
or
test
in
mov
js
push
xor
push
pusha
sbb
bound
jle
mov
mov
(bad)
pop
outs
sbb
dec
xor
in
jbe
mov
cmp
push
cmp
pushf
cwde
mov
add
(bad)
pop
mov
pop
mov
push
aam
shl
xchg
retf
in
in
fmul
or
sub
sbb
in
test
rol
sub
and
es
jnp
pop
fisubr
lds
xor
das
into
xlat
jge
add
pop
lods
push
mov
sbb
fs
aam
fist
or
push
mov
jnp
inc
jle
mov
push
cmp
xchg
xchg
sbb
idiv
mov
pop
add
retf
and
lods
cmp
pushf
add
xor
inc
sbb
daa
rol
sbb
xor
les
dec
or
in
mov
push
data16
cmp
xor
fs
mul
add
ins
or
retf
xchg
sbb
jb
mov
xchg
cwde
mov
push
movs
repnz
or
mov
add
mov
pop
shl
cmp
mov
clc
out
(bad)
or
mov
or
mov
inc
sub
adc
add
call
cwde
fs
and
push
ins
add
cmps
bound
mov
xchg
push
(bad)
push
adc
aam
mov
and
into
pushf
test
mov
jg
jb
xchg
xor
xor
push
rcr
out
retf
psubw
dec
add
adc
inc
sbb
mov
inc
movs
nop
push
popa
js
(bad)
cmp
xor
push
popa
jb
aaa
call
or
loope
enter
add
ins
pop
and
jp
ja
ds
jl
int
jno
rcr
mov
inc
sub
ins
sbb
imul
mov
sub
mov
xor
push
add
mov
mov
mov
mov
mov
fsubp
lods
pop
sub
hlt
xchg
aas
and
test
adc
inc
or
leave
push
pusha
int3
inc
popf
and
jo
int
and
or
xchg
and
js
jmp
xor
sahf
mov
inc
add
add
in
add
add
push
repnz
sbb
sbb
push
hlt
enter
sbb
sbb
enter
dec
(bad)
enter
test
sar
sub
mov
jo
scas
pusha
sbb
fld
dec
sbb
scas
pop
mov
xor
inc
inc
cs
inc
inc
xor
in
cdq
nop
adc
and
retf
sbb
nop
xchg
xchg
xchg
or
sbb
sbb
dec
cmp
fsubr
adc
enter
shl
or
mov
leave
mov
jmp
pop
rcl
in
xlat
fadd
hlt
sbb
mov
adc
xchg
dec
sbb
rcl
sbb
bound
mov
aam
xor
cmp
(bad)
mov
mov
sbb
pop
in
sub
cmp
pop
pop
(bad)
dec
add
mov
nop
daa
pop
fst
jmp
jl
cs
pop
arpl
dec
ret
shr
and
je
mov
pop
mov
xor
push
outs
ins
mov
push
fs
pop
or
mov
pusha
in
cmp
xor
jo
sbb
(bad)
push
mov
inc
mov
int
xchg
test
out
and
nop
cmp
cwde
sub
fcomp
inc
rol
jnp
push
and
mov
sub
scas
call
movs
pop
dec
cmp
rcl
add
sub
adc
stos
js
mov
cld
push
push
imul
retf
clc
push
dec
add
fnstcw
hlt
inc
aad
in
push
and
adc
shl
cmp
inc
jno
push
int3
int3
adc
mov
ins
lea
adc
scas
push
ror
aam
add
push
dec
repz
pop
mov
mov
push
jnp
cmp
inc
mov
jnp
pop
inc
pop
addr16
(bad)
mov
ins
mov
push
inc
inc
shl
shr
fsubr
xor
jp
lods
inc
aaa
int
sar
pushf
push
or
mov
add
iret
js
mov
xchg
or
adc
sbb
fist
pop
pop
mov
cwde
cmp
lods
gs
dec
es
add
cmp
mov
mov
adc
add
(bad)
pusha
add
mov
sbb
mov
(bad)
fwait
xor
arpl
jbe
push
fimul
int3
xchg
sub
sbb
retf
push
sub
xor
or
adc
(bad)
aad
jnp
fdivr
inc
mov
sbb
sub
cmp
cmp
xor
sub
push
sar
xor
pop
push
push
sub
or
shl
or
xchg
mov
and
xor
shl
test
jo
or
or
and
mov
xchg
fstp
hlt
push
push
adc
xor
aaa
lods
add
dec
mov
outs
int
es
int
adc
adc
mov
push
dec
dec
lahf
test
jmp
cs
sub
fwait
test
dec
xor
mov
mov
adc
pop
(bad)
add
and
xor
pusha
sbb
or
lea
add
jmp
je
xor
dec
ja
je
dec
inc
retf
loopne
push
dec
js
xchg
lock
arpl
repz
push
test
inc
lahf
test
mov
pushf
and
add
seto
(bad)
ret
ins
call
xor
inc
or
mov
mov
outs
or
dec
mov
in
xchg
and
adc
fbld
xchg
add
lock
repnz
lea
loop
jo
cmp
xor
dec
mov
xchg
inc
or
pusha
mov
lahf
(bad)
jmp
xor
fnstsw
mov
mov
and
dec
out
out
xor
js
lea
rdmsr
and
(bad)
fbld
mov
add
pop
ss
cld
rol
sub
(bad)
and
jo
mov
add
add
jo
pop
mov
add
sahf
mov
sbb
push
add
lods
adc
cmp
ror
ja
test
sub
data16
mov
or
sbb
or
scas
add
movs
jecxz
repnz
cmc
outs
es
push
mov
in
mov
mov
and
retf
and
push
or
and
loope
pushf
or
ror
and
and
pop
mov
cmp
mov
jecxz
call
pop
mov
pop
out
cmps
add
js
imul
call
outs
pushf
cmp
dec
movs
pop
sbb
and
sbb
js
cmp
jecxz
cmp
cmp
sub
sbb
dec
inc
xchg
and
sti
cmp
dec
arpl
xor
xor
ins
push
nop
loopne
sbb
rcr
pop
or
ret
pusha
push
pop
repnz
jbe
push
sub
pop
mov
sub
sub
sub
and
cmp
push
mov
sbb
dec
mov
jne
lock
lds
cmp
pop
repnz
retf
push
mov
sub
dec
pop
sub
in
stc
mov
cmp
test
fnstenv
pop
push
jo
add
fadd
repz
sbb
xor
ror
or
shr
iret
or
dec
nop
cld
and
pop
jne
push
push
add
jle
scas
fistp
out
fld
lods
movs
add
or
push
rol
rcl
loopne
loope
(bad)
mov
arpl
or
or
imul
push
dec
inc
mov
add
sbb
mov
xchg
add
push
ror
sahf
imul
or
add
and
add
(bad)
xchg
pop
xchg
loop
pop
cmp
lock
mov
jb
xchg
push
push
push
test
xchg
xchg
fstp
cmp
fild
outs
jns
dec
ins
mov
shr
adc
xchg
mov
adc
add
int3
push
aad
mov
xchg
inc
stos
retf
and
fs
fldz
push
call
add
ins
aas
loop
stos
mov
dec
jge
mov
into
inc
jne
and
inc
xlat
push
addr16
clc
je
and
xor
ret
sbb
js
add
gs
js
clc
js
in
jg
lea
imul
sar
pusha
jmp
cmc
in
sub
push
mov
adc
dec
jo
xor
mov
xchg
jne
or
or
lock
lea
lock
cli
ror
mov
add
sub
sbb
ror
into
sbb
add
add
xchg
repz
in
outs
add
fiadd
add
mov
jns
sbb
pusha
in
xchg
push
pop
push
jns
xchg
dec
add
cs
fld
push
or
mov
stos
push
add
jmp
enter
jmp
mov
xor
mov
mov
adc
and
xor
sbb
out
mov
pop
add
push
inc
adc
jns
mov
inc
out
loopne
jl
(bad)
dec
inc
pop
cmp
xchg
(bad)
jmp
jo
pushf
fcom
push
scas
pushf
push
fidivr
ja
dec
adc
sbb
pusha
jmp
jno
leave
arpl
movs
outs
fild
(bad)
mov
inc
imul
and
or
mov
cdq
loopne
mov
jl
(bad)
cs
sar
mov
retf
push
in
dec
mov
xchg
mov
jo
loope
popf
mov
pop
pusha
xchg
cmps
push
aas
sub
nop
xor
mov
add
(bad)
jmp
mov
je
cmps
pop
sbb
sub
xor
xchg
pushf
add
sub
mov
add
mov
out
adc
pushf
add
mov
mov
push
das
call
cdq
sbb
sbb
sub
mov
add
test
popf
lock
imul
dec
jmp
cmps
cmp
loope
jecxz
in
imul
push
dec
mov
leave
mov
mov
mov
sub
retf
rol
cmp
fsub
mov
fcomp
mov
and
sbb
pushf
std
addr16
scas
inc
mov
enter
scas
ror
pop
push
push
sub
cmp
xchg
rcl
mov
and
sbb
push
jl
jmp
push
shr
ret
scas
add
sbb
ret
mov
dec
dec
dec
inc
bound
ins
dec
sbb
je
leave
and
push
mov
add
and
jae
or
rcr
dec
mov
fs
jb
adc
jb
add
xchg
add
xchg
or
shl
hlt
sbb
stos
sbb
sub
fnstenv
mov
or
sub
lods
fsub
mov
pusha
xlat
ja
adc
sub
les
movs
jp
inc
icebp
add
mov
cmp
cmp
jno
ja
ds
jle
adc
xchg
mov
inc
aas
sbb
xchg
dec
movs
add
call
or
cld
adc
ror
mov
push
add
lods
call
mov
sbb
or
dec
push
sahf
or
dec
pusha
imul
repnz
mov
jle
add
sub
mov
push
adc
int3
and
cmp
inc
popa
sbb
ss
push
push
xchg
fiadd
mov
push
scas
add
or
mov
repnz
lods
stos
and
add
pop
retf
add
(bad)
xchg
hlt
or
jmp
inc
or
or
dec
xchg
js
add
xor
mov
cmc
jmp
js
sub
xchg
test
jno
or
movs
sub
inc
mov
push
cmp
gs
test
cld
mov
ret
mov
mov
pop
mov
push
sbb
imul
jmp
fsub
call
mov
aas
push
and
cmp
shl
aaa
or
mov
cmp
(bad)
lock
call
xor
cmp
xor
lea
add
mov
or
or
dec
push
mov
sbb
ret
inc
add
pop
xchg
push
addr16
cwde
add
outs
xchg
popf
push
cs
out
xchg
aas
ja
xchg
push
push
test
mov
stc
inc
jl
and
add
push
cmp
cmp
add
and
mov
add
lahf
xor
test
call
mov
sub
cmp
pop
mov
or
call
or
push
inc
lds
xchg
retf
push
inc
cmp
call
ss
jg
fadd
or
shr
mov
bound
mov
cdq
ret
fist
out
adc
in
ret
movs
sbb
test
adc
or
mov
sbb
fbld
mov
shl
out
push
inc
pop
ret
test
ins
cmp
out
xor
lea
cmp
cs
adc
rol
pushf
jl
mov
or
clc
mov
push
push
(bad)
adc
(bad)
fwait
out
add
or
add
ins
sub
pop
lock
mov
rcl
pop
add
ins
in
xchg
push
add
das
sbb
dec
push
jo
imul
ret
xor
mov
mov
add
sbb
dec
mov
mov
fild
gs
mov
add
ret
xor
lahf
pop
sbb
mov
ret
or
jne
add
pusha
pop
xor
or
stc
clc
jmp
sbb
or
shl
cs
aad
sbb
rcl
sahf
aaa
outs
call
daa
or
xor
push
cmp
or
ror
loopne
mov
pop
adc
repz
movs
mov
out
jle
repz
push
ja
dec
rol
repnz
mov
inc
lock
mov
pop
adc
cwde
dec
or
out
loopne
aas
cmp
imul
adc
inc
pop
je
lods
or
loope
shr
and
ss
add
jb
fld
in
mov
mov
pop
gs
scas
xchg
xchg
and
ret
push
push
pop
xchg
icebp
xchg
xchg
add
lea
aaa
in
ss
add
and
in
aam
cli
and
lods
push
push
shr
mov
mov
mov
enter
inc
xor
or
dec
test
sbb
inc
jo
or
pop
nop
sub
ins
push
pop
call
or
in
or
jb
int
lods
or
out
push
adc
or
(bad)
mov
or
dec
jae
in
push
setl
ret
and
adc
sub
in
adc
pop
repnz
ins
push
enter
adc
aam
push
and
stos
ja
mov
cwde
fmul
ins
pop
stc
and
aam
loopne
std
dec
sub
ins
jge
fisttp
and
sbb
pushf
add
cwde
xor
int3
xchg
add
pushf
dec
push
out
aam
aam
pushf
cwde
dec
adc
call
inc
sar
outs
sub
aaa
add
mov
push
sbb
mov
clc
dec
adc
mov
sub
xchg
out
mov
xchg
lock
or
outs
int3
xor
push
(bad)
sbb
cmps
push
push
jo
out
xchg
lea
cmp
pop
mov
rcr
mov
inc
cmp
jne
mov
mov
ret
mov
adc
in
mov
mov
push
or
in
ror
add
cmp
cmp
jmp
call
je
mov
mov
cmp
add
pop
jl
call
add
les
ins
xlat
push
aam
xchg
inc
sbb
push
les
mov
add
add
push
xor
or
pop
and
xchg
sub
add
in
sbb
lds
push
add
inc
xor
in
push
and
add
cmp
push
sub
or
rol
mov
ret
dec
jb
mov
(bad)
adc
cmc
push
(bad)
mov
iret
push
je
repz
jmp
and
sub
jmp
adc
pop
mov
mov
movs
mov
out
iret
std
or
mov
jnp
repz
cmp
aam
push
xor
push
cmp
add
jne
mov
int3
stc
mov
test
(bad)
mov
fld
jl
ret
lahf
pop
rol
or
cdq
adc
outs
imul
scas
sbb
je
dec
jne
lahf
daa
cmc
(bad)
or
clc
jl
pop
fistp
test
xor
or
iret
cmc
ins
mov
repnz
lea
mov
(bad)
daa
jecxz
(bad)
mov
je
cmp
inc
enter
add
pushf
add
sub
mov
adc
add
cmc
jo
xchg
out
sti
inc
imul
add
mov
and
movs
hlt
jne
(bad)
mov
push
mov
int3
xchg
fisub
jne
jo
xchg
icebp
sub
sbb
outs
je
jo
xor
xchg
push
xor
mov
sub
pop
sub
jo
xor
aad
xchg
aas
mov
shl
popa
add
jo
and
rol
and
or
mov
mov
int3
adc
cmp
pop
movs
sbb
lods
es
push
cli
mov
xor
mov
test
or
std
jno
jge
cmp
sbb
ss
jae
fmul
int
xchg
push
mov
add
ins
xchg
adc
ds
cmp
push
or
lea
mov
cmp
clc
in
push
push
mov
(bad)
loope
mov
fmul
leave
push
and
push
adc
mov
sbb
int3
mov
jno
ret
add
es
ins
ss
nop
scas
in
(bad)
fcomp
xor
jecxz
shl
add
ret
mov
inc
enter
push
clc
add
add
push
out
xchg
or
mov
enter
add
adc
mov
sbb
ja
iret
or
push
pop
mov
aaa
cld
cs
adc
push
xchg
adc
adc
ins
xchg
mov
leave
cmp
xchg
push
sub
out
movsx
ret
cmp
xor
pusha
and
loopne
sbb
test
or
popa
inc
fsubr
push
arpl
lods
(bad)
cmp
ud2
ror
push
fistp
fadd
pop
repnz
adc
fld
enter
mov
int
mov
mov
and
xor
adc
mov
dec
push
xor
pop
enter
xchg
mov
jmp
push
jmp
xchg
jmp
inc
push
stc
jae
jmp
int3
adc
add
jge
xchg
add
adc
movs
(bad)
fistp
push
mov
xchg
sbb
not
enter
sbb
(bad)
mov
push
cmps
mov
jbe
repnz
lea
jnp
inc
mov
push
in
jne
add
adc
mov
mov
add
nop
jge
fdiv
jnp
xor
nop
jo
add
nop
call
mov
pusha
aad
sbb
test
inc
or
jmp
cmp
sub
outs
sub
les
mov
push
clc
inc
jne
fwait
mov
adc
fild
push
add
aam
daa
adc
daa
mov
sbb
sbb
out
and
out
xchg
adc
dec
add
mov
add
ins
fs
sbb
sub
pop
ss
jg
enter
mov
mov
push
sbb
sti
cdq
dec
pop
movs
mov
lds
loopne
cmp
sub
push
or
or
push
jge
push
int
add
xor
xchg
lods
or
mov
js
add
and
dec
push
enter
and
and
push
push
mov
sub
lods
das
add
push
jge
cmc
mov
(bad)
and
out
pushf
je
or
adc
ins
(bad)
hlt
mov
test
and
xor
dec
mov
mov
(bad)
test
xor
repnz
ds
push
dec
ins
js
nop
xchg
cmps
jl
add
por
bound
aaa
adc
lds
sbb
jle
dec
or
pop
mov
js
mov
mov
jmp
mov
inc
stos
lods
out
test
dec
stc
ret
sub
inc
and
jle
sbb
mov
pop
call
(bad)
sub
xor
inc
out
loop
push
or
and
js
aaa
xor
adc
in
adc
jno
push
xchg
int3
imul
push
cmp
mov
stos
inc
jae
and
push
push
mov
adc
int3
dec
pop
aad
mov
or
mov
add
pushf
mov
push
and
push
sbb
xlat
int
rcr
mov
adc
sbb
and
test
(bad)
stos
ds
mov
add
push
add
adc
jl
retf
mov
cwde
sbb
pushf
ret
and
ja
movs
pusha
push
and
out
scas
adc
pushf
aam
xor
pop
push
or
imul
daa
cdq
imul
sub
xchg
aad
xlat
jge
add
test
mov
ins
push
mov
pop
push
and
xchg
icebp
mov
jbe
ins
xor
jo
shr
add
imul
add
dec
outs
in
adc
retf
aaa
enter
arpl
sbb
fiadd
icebp
cmp
add
fnstenv
popa
add
test
and
jl
ja
or
and
lahf
pusha
xchg
mov
inc
setne
mov
add
loope
es
pop
push
pushf
pop
lock
xor
or
ja
push
scas
xor
dec
nop
inc
shl
push
push
out
add
mov
dec
mov
adc
add
cdq
mov
sbb
add
push
pop
push
repnz
retf
dec
push
arpl
cmp
xor
xor
adc
xor
ins
add
xchg
jbe
jp
pop
push
add
cwde
cmp
dec
je
adc
sbb
xchg
enter
pop
in
add
xor
enter
push
jle
mov
je
nop
dec
imul
push
xor
pop
ds
sub
lea
and
dec
and
push
div
sbb
(bad)
(bad)
(bad)
inc
pusha
push
mov
mov
shl
push
jnp
clc
lods
mov
push
mov
loopne
fcomp
add
dec
or
mov
lock
int3
fwait
ins
ficomp
dec
gs
push
into
xor
mov
shr
xchg
xor
test
dec
mov
jl
js
pop
and
shl
add
pop
sub
inc
xchg
adc
fsub
lods
ret
jmp
push
fsub
call
adc
sbb
adc
add
loopne
out
or
push
mov
cdq
add
sub
sti
dec
add
inc
add
fiadd
fidiv
dec
push
pushf
push
or
add
cmp
rep
add
jmp
(bad)
int
xchg
adc
fisttp
or
or
pop
jns
out
(bad)
stos
loopne
add
aad
iret
mov
cmp
or
mov
or
add
add
add
push
or
sub
xor
mov
xor
pop
pop
retf
aas
sub
js
inc
add
push
sahf
and
mov
sbb
adc
pop
mov
or
inc
rcl
nop
inc
push
push
aas
imul
mov
nop
int
sbb
push
mov
cmp
das
enter
inc
pushf
mov
add
fisubr
stos
or
aad
test
sub
js
test
sti
test
and
mov
add
ret
jg
scas
mov
retf
js
adc
(bad)
or
test
pop
fldz
iret
adc
pusha
mov
dec
mov
sub
and
push
adc
fist
iret
enter
retf
push
sbb
pop
push
xchg
je
mov
arpl
add
lods
adc
je
dec
cmps
mov
sbb
adc
cld
jne
pusha
xchg
adc
ret
ins
loopne
bound
mov
mov
add
inc
inc
(bad)
shr
and
mov
mov
and
in
cmp
(bad)
sbb
inc
jecxz
mov
inc
jmp
(bad)
push
pop
inc
xchg
push
data16
or
ret
cmp
pop
cs
(bad)
lock
add
adc
lds
xchg
add
inc
shl
ja
mov
sub
jmp
sbb
pop
mov
ret
das
dec
pop
popa
imul
xchg
rcr
inc
cwde
aaa
add
push
pop
movs
cmps
mov
adc
xchg
dec
cwde
xchg
add
mov
mov
sbb
push
ret
push
sub
rol
imul
add
jmp
enter
lods
mov
call
push
inc
nop
mov
dec
enter
dec
les
aaa
(bad)
dec
sbb
add
push
dec
sbb
lods
jb
add
add
inc
sbb
outs
ds
pop
nop
test
xchg
push
into
xor
xchg
jbe
adc
add
sbb
dec
jnp
inc
pop
fsubr
nop
inc
ins
mov
inc
inc
fcmovb
dec
hlt
and
adc
repnz
fsub
mov
jo
dec
xchg
add
lods
add
mov
movs
es
xchg
and
imul
pop
call
fs
dec
sub
or
mov
ret
daa
test
push
push
mov
sti
sub
jl
sub
scas
or
ins
add
pop
and
sbb
nop
fisub
loopne
loop
sbb
xor
dec
jmp
test
mov
scas
sub
test
sbb
adc
jmp
rol
inc
sbb
dec
jno
dec
jl
cmp
into
movs
je
popf
jne
dec
xor
rcr
cmp
mov
lea
rol
mov
cmp
mov
rcl
jecxz
cmp
movs
sbb
jecxz
cmp
inc
pop
call
pusha
ins
sub
xchg
lahf
inc
push
jne
cmp
mov
push
jmp
cmp
mov
xor
rcr
sbb
(bad)
jp
int
jmp
rcl
sbb
adc
xchg
fnstenv
mov
sub
add
test
sbb
cmp
out
repnz
jnp
movs
jae
sbb
mov
and
mov
xor
lahf
rol
mov
sar
shr
add
mov
ret
and
stos
sbb
enter
mov
lahf
mov
adc
mov
out
(bad)
jbe
out
pop
out
add
call
push
adc
adc
xchg
not
std
xor
outs
jb
xlat
mov
lea
adc
jne
shl
sub
lock
out
mov
push
leave
lea
push
enter
cmp
sub
sub
sbb
adc
sub
outs
add
add
push
inc
call
leave
mov
stos
rcr
xor
xor
push
xor
pop
out
dec
or
inc
out
mov
ret
fiadd
lock
cs
pop
cld
fnstenv
adc
dec
addr16
adc
mov
sub
cmp
pushf
mov
xor
(bad)
mov
push
xchg
xchg
inc
adc
loop
iret
or
push
ja
push
mov
mov
and
mov
(bad)
js
rcl
scas
dec
dec
push
xor
and
sub
pop
sub
jne
loopne
cmp
inc
(bad)
clc
push
dec
and
and
adc
mov
ds
ret
das
adc
lock
out
xchg
ret
jp
jne
push
and
enter
add
test
fld
push
loop
call
inc
cwde
jge
cmp
ret
push
pop
imul
sbb
xchg
mov
sbb
movs
rcr
dec
in
dec
mov
cmp
lods
and
push
or
nop
push
jg
lods
inc
dec
imul
and
mov
or
inc
jecxz
xor
sub
es
or
mov
xor
mov
or
jmp
xor
ds
xor
das
loope
push
daa
adc
mov
in
int3
ss
inc
push
mov
push
call
aaa
rol
dec
fistp
scas
sbb
ins
sbb
xchg
jmp
cmp
sub
test
pusha
mov
ret
sub
sub
adc
movs
test
push
and
inc
inc
add
adc
sbb
(bad)
mov
cmps
and
mov
xchg
push
inc
out
inc
(bad)
jge
mov
or
inc
xor
jo
out
or
cmps
push
sub
cmp
je
xor
add
add
shl
mov
ins
or
rcr
inc
fist
or
cmp
sbb
daa
cmp
(bad)
enter
pop
push
and
xor
cmp
push
fisubr
jl
sub
in
pop
call
sbb
xchg
sub
sub
adc
dec
nop
and
mov
lods
je
lahf
retf
mov
adc
cmp
mov
cmp
add
pop
push
pusha
xchg
(bad)
fistp
sub
arpl
mov
shl
sbb
nop
cmp
add
add
dec
sub
cmp
inc
sahf
ds
jns
sub
shr
mov
outs
add
jge
je
ret
and
sub
sbb
shr
sbb
push
mov
sub
adc
pusha
dec
out
adc
jg
and
and
mov
or
ds
dec
pusha
add
aad
cmp
shl
test
adc
dec
ror
xor
enter
mov
jo
add
pop
and
and
ficomp
push
push
lds
mov
xor
in
test
mov
ja
dec
aaa
stc
sbb
stos
cmp
push
imul
xor
call
inc
xor
add
sub
or
dec
add
inc
fild
dec
pop
jmp
xchg
fucomi
scas
mov
push
fs
(bad)
jmp
dec
movs
add
aaa
mov
cmp
cmps
int3
sar
adc
mov
mov
loope
js
add
cmp
movs
fild
lahf
jo
push
pushf
jmp
push
xchg
sbb
push
dec
(bad)
cmpnltps
push
lahf
push
inc
shl
xchg
cmps
xchg
ins
pop
push
jo
push
ror
push
nop
dec
or
or
lahf
push
xor
jne
sub
or
sti
cmp
adc
mov
and
mov
jbe
or
or
xor
fistp
shl
(bad)
xlat
sar
into
sub
push
ja
sub
nop
pop
cmp
mov
aas
cmp
jp
dec
sub
in
add
arpl
data16
and
mov
sub
aaa
dec
nop
inc
and
push
push
mov
fadd
mov
rcr
fsubr
xor
push
adc
add
in
xchg
push
xchg
mov
cli
sti
xchg
add
sbb
imul
repz
test
in
add
pop
sbb
inc
cmp
sub
or
mov
loop
or
jnp
jne
outs
adc
adc
in
movs
jge
out
fmul
imul
and
adc
pop
(bad)
pop
pop
pop
inc
adc
sub
inc
test
lock
mov
pop
adc
and
or
add
add
je
aaa
add
adc
call
add
sbb
(bad)
popa
push
xor
icebp
add
stos
clc
repnz
xchg
in
adc
test
push
push
dec
and
xor
adc
imul
push
cli
sub
add
push
add
inc
push
push
inc
popf
xchg
add
cmp
sub
jmp
jmp
mov
or
or
mov
push
xchg
sub
inc
cmps
inc
dec
mov
dec
dec
xchg
hlt
enter
mov
test
sub
inc
add
enter
ins
bnd
int3
rcl
add
pop
enter
nop
test
push
push
dec
repz
cmps
xchg
nop
xchg
push
or
push
cmp
and
fwait
or
pop
push
sub
mov
neg
movs
pop
movs
dec
mov
xchg
hlt
xchg
fisttp
fild
mov
stos
movs
sub
push
cli
pop
cmp
or
pop
push
retf
and
int
mov
mov
fwait
push
or
cmp
inc
add
push
jp
sub
test
add
push
xor
and
sahf
sbb
js
sti
pop
push
(bad)
mov
pop
push
push
sub
mov
in
pop
leave
rcr
sbb
adc
rcr
test
sub
cmp
sbb
imul
xchg
int3
shl
sbb
test
jecxz
jl
push
dec
and
dec
add
rcl
popa
mov
xchg
xor
repnz
mov
or
out
shl
mov
push
inc
ss
pop
ror
cmps
pop
xchg
int
or
cmp
call
push
leave
pop
in
pop
fwait
dec
inc
add
add
dec
add
add
inc
inc
imul
or
mov
and
push
add
mov
mov
mov
sbb
xchg
gs
fstp
rcl
jbe
dec
xor
add
jb
xchg
fnstcw
or
inc
jb
adc
jmp
mov
and
pop
or
push
test
inc
shl
cmp
bound
test
in
inc
outs
nop
xchg
lods
das
mov
mov
add
sub
pop
add
jno
pusha
add
fwait
add
and
inc
dec
cmp
cmp
das
loop
ja
ret
pop
int
push
mov
icebp
addr16
lods
test
add
and
arpl
sbb
sbb
or
test
loopne
jo
in
push
mov
hlt
xor
scas
cld
mov
jae
mov
mov
sbb
lea
rcr
sahf
push
jb
push
mov
loopne
jmp
sub
in
out
push
rcr
js
test
push
and
sbb
sbb
sub
(bad)
cmp
addr16
add
xor
sub
les
push
call
add
xchg
aam
push
inc
retf
sub
add
ret
add
xor
xchg
in
jmp
pushf
push
cmp
push
mul
add
jo
cdq
data16
pop
push
adc
clc
adc
add
ror
gs
dec
js
jns
cmp
sahf
inc
xchg
clc
in
lock
test
xchg
sbb
adc
or
xor
jl
cs
popa
addr16
mov
(bad)
aaa
mov
stc
or
or
add
push
mov
clc
repnz
retf
and
and
mov
mov
push
jl
add
jbe
jne
add
jl
js
inc
fs
pop
adc
adc
or
add
dec
mov
or
pop
push
clc
nop
adc
into
or
in
push
rol
ret
or
cmp
or
ror
rol
inc
mov
push
sbb
sbb
and
or
(bad)
adc
rcr
shl
out
inc
icebp
(bad)
xor
jae
push
fldenv
xor
inc
out
ret
or
or
outs
dec
xor
and
pop
mov
xor
cmp
add
pusha
bound
mov
xor
aas
das
mov
retf
nop
bound
dec
(bad)
or
cmp
movs
stos
pop
inc
shr
loope
sub
pop
adc
push
out
xchg
jl
pop
add
mov
mov
adc
sub
ins
retf
pop
ret
push
pop
xchg
in
adc
sbb
inc
or
lds
shr
inc
stos
lods
mov
and
sbb
imul
xor
rcl
add
inc
jl
test
or
mov
jl
popa
inc
add
xor
and
repz
pusha
cdq
dec
dec
aam
add
ds
pop
out
and
pop
push
cld
mov
shl
jle
dec
mov
inc
fwait
aas
dec
(bad)
(bad)
ret
jge
cmp
inc
cmp
add
test
dec
sub
mov
shl
hlt
add
push
add
and
mov
aaa
rcl
jne
iret
xor
mov
sar
cmp
sub
nop
in
in
fnstsw
sub
ret
cmp
xchg
sub
inc
ins
hlt
gs
popa
fld
add
and
jmp
bound
cmp
jo
sbb
pusha
xor
(bad)
mov
add
addr16
or
cmp
mov
sbb
sbb
outs
inc
(bad)
mov
jmp
push
icebp
sub
pusha
pop
iret
fld
and
or
mov
sbb
dec
push
jno
stos
(bad)
pop
addr16
inc
ins
pop
inc
sub
loopne
sbb
addr16
sub
out
add
loope
xchg
xchg
shl
ret
add
mov
sub
cmp
push
mov
test
hlt
mov
push
cmp
fmul
not
jp
pusha
or
imul
push
js
jge
push
dec
jae
ins
add
mov
je
jge
out
shl
cmc
fcomp
aaa
add
push
xchg
xchg
xchg
sar
sub
mov
fdivr
int3
inc
xor
not
jae
pop
mov
add
fwait
or
sti
and
cmp
xor
add
cmp
mov
outs
cmp
int3
in
xor
outs
out
nop
pop
add
mov
jne
dec
jnp
push
fwait
shr
jb
dec
aam
call
and
dec
inc
arpl
and
(bad)
xor
(bad)
ins
sbb
sbb
les
add
aaa
fcom
popa
int
pop
mov
and
cmp
sbb
(bad)
add
mov
dec
mov
xor
jge
(bad)
sbb
les
inc
mov
sub
ret
pop
xor
jb
or
add
cmp
jb
jp
xor
popa
cwde
call
add
repnz
push
mov
add
cmps
or
and
sbb
sbb
lds
or
sbb
pop
stos
push
fsub
sub
push
rcr
shl
adc
adc
adc
test
pop
sub
enter
mov
aas
test
cmc
pop
push
inc
add
fucomi
or
inc
test
pop
ret
sbb
sbb
mov
outs
mov
cmp
inc
inc
dec
dec
push
or
inc
loopne
add
lock
lods
ret
or
add
aas
test
push
mov
add
(bad)
or
add
push
push
and
cwde
or
lea
and
push
or
dec
outs
cmp
outs
fild
xor
add
mov
push
lock
or
dec
sub
xchg
sub
in
cs
sbb
ds
aam
or
sub
sub
push
or
push
test
sbb
mov
mov
dec
or
push
push
enter
jp
jle
push
in
push
add
adc
push
cmps
ss
cwde
adc
and
imul
leave
ret
dec
pop
cwde
mov
push
cmp
jne
adc
ret
xchg
lock
sbb
pop
dec
mov
rol
mov
mov
pop
add
ja
daa
mov
dec
dec
cmp
sti
jmp
jno
jp
mov
loopne
pop
pop
mov
dec
pop
(bad)
call
add
add
jle
mov
push
push
imul
dec
cmc
dec
sbb
inc
xor
and
add
pop
add
dec
mov
mov
addr16
mov
adc
test
push
pop
mov
jbe
push
adc
jmp
cmp
mov
sbb
mov
retf
xchg
sub
mov
aam
sub
test
dec
rol
call
loope
mov
mov
ret
pushaw
sub
cs
and
into
mov
pop
jmp
xchg
or
cmp
int
jne
dec
iret
mov
out
pop
mov
mov
push
push
imul
xchg
mov
mov
(bad)
and
(bad)
push
inc
dec
pop
adc
dec
pusha
mov
call
pop
rol
scas
xchg
ror
lea
add
dec
lock
sbb
dec
mov
sub
mov
dec
inc
sbb
add
xor
sub
jmp
add
or
clc
lea
cmp
or
inc
ret
mov
idiv
mov
inc
pavgb
test
mov
mov
xchg
mov
out
add
dec
enter
mov
cmp
lods
cmp
es
enter
dec
push
les
cli
mov
push
cmps
mov
sub
ficom
and
outs
mov
into
cli
mov
jge
push
mov
add
(bad)
pop
shl
jmp
push
in
add
add
out
(bad)
fs
xchg
jge
mov
sub
push
addr16
add
call
rol
int3
int
out
test
xchg
mov
xchg
xchg
dec
and
jmp
aas
repz
fiadd
loopne
scas
cmp
push
std
push
mov
lods
xchg
xor
sub
mov
add
jns
dec
add
xchg
ss
mov
add
dec
enter
in
push
pop
push
movs
and
and
mov
push
dec
push
popa
jb
jne
mov
or
jo
fucomip
pop
adc
pop
int
cmp
inc
inc
rcl
mov
in
test
adc
push
jle
cdq
cmp
cmp
rol
inc
pop
dec
mov
test
sub
out
or
(bad)
or
mov
ins
out
fdiv
int3
or
push
dec
sar
mov
or
ss
adc
and
sub
and
popa
cmp
aad
sub
test
cmp
sbb
(bad)
and
mov
sub
mov
cwde
push
cmp
xor
mov
and
aas
add
add
or
adc
pusha
pop
and
push
into
pop
or
ja
ret
cmp
stos
add
js
sub
xchg
mov
jp
xchg
sbb
sbb
addr16
scas
lods
fbld
cmp
bound
pusha
aad
int
sar
stos
shl
loopne
sbb
mov
add
lods
loopne
and
add
cdq
xchg
cmp
mov
and
sub
push
pushf
pusha
and
add
xchg
js
movs
imul
sub
add
aam
les
mov
(bad)
pop
jo
xchg
aad
inc
mov
lea
adc
cmp
cmp
jp
adc
std
inc
rol
test
int3
add
xlat
movs
dec
sub
ret
sbb
mov
dec
clc
push
pop
std
gs
mov
rcr
mov
data16
mov
inc
loop
call
add
mov
cmp
je
es
cmp
call
mov
rol
cmp
int3
add
imul
xchg
ins
pusha
dec
and
or
jno
push
stc
mov
jl
rol
in
inc
daa
loopne
sub
sub
xor
add
mov
push
test
movs
lea
cmps
push
sbb
and
mov
test
int
push
call
ret
and
sbb
add
sub
sbb
int3
dec
out
dec
xchg
dec
push
jmp
js
jl
addr16
es
cmp
inc
mov
dec
test
add
and
pusha
adc
shl
xor
and
rcl
dec
mov
pop
push
repnz
rcr
lock
sbb
dec
sbb
inc
xor
or
fwait
pop
pop
push
mov
mov
adc
adc
xchg
mov
js
xchg
bound
adc
jns
mov
jmp
mov
add
lods
arpl
pushf
push
stos
arpl
xchg
or
sub
imul
test
out
cmp
enter
mov
test
sbb
inc
xchg
mov
adc
or
push
shl
gs
add
fidiv
or
sub
dec
adc
dec
cmp
mov
cld
or
sbb
std
aas
inc
test
rcl
adc
retf
dec
jbe
ins
xlat
push
or
and
xchg
jp
add
push
es
push
or
add
cmp
mov
(bad)
repz
adc
bound
or
or
mov
iret
sbb
not
call
or
jo
stos
or
jne
add
jmp
ss
pusha
jae
add
add
data16
popa
in
(bad)
scas
dec
add
or
gs
push
cmp
fiadd
call
adc
adc
loopne
mov
xchg
cmp
test
bswap
icebp
nop
cmc
rol
pop
nop
cmp
pop
lods
inc
leave
jo
adc
mov
and
repnz
out
fmul
lock
fsubr
pop
add
adc
jmp
scas
adc
fs
ret
lea
xor
inc
lods
jle
or
mov
int3
add
dec
call
js
or
adc
sub
jb
push
xchg
mov
sbb
nop
pop
fdiv
add
iret
and
shl
pop
lods
xor
add
add
in
sbb
les
std
ffree
xchg
add
xchg
jae
mov
sub
pop
push
jl
push
stos
push
pop
jp
push
dec
push
pop
push
das
or
cmp
(bad)
fistp
or
sub
call
push
sahf
retf
pop
push
add
lods
arpl
dec
push
pop
leave
arpl
sbb
repnz
push
push
mov
inc
pushf
and
arpl
(bad)
bound
inc
(bad)
movs
loopne
hlt
push
push
sub
push
jmp
or
jnp
aaa
xor
xor
dec
sub
fadd
xor
cwde
push
ja
jae
inc
(bad)
and
test
out
imul
push
push
cmp
and
push
retf
push
dec
push
rcr
popf
or
and
test
add
inc
cmp
fmul
stc
ins
adc
pop
test
mov
add
sub
or
add
pop
sub
dec
jl
mov
push
add
shl
pop
and
imul
add
or
add
inc
outs
lods
dec
mov
ins
adc
xchg
ss
push
sub
inc
jmp
les
in
mov
and
pop
and
ins
daa
or
sbb
test
fisttp
xchg
cdq
lahf
and
dec
jecxz
add
push
add
pop
rcr
jae
dec
xor
adc
mov
dec
add
xchg
or
jo
mov
inc
sub
loopne
loope
out
iret
mov
test
out
gs
sub
pop
sbb
jne
cwde
xchg
or
loopne
cdq
add
cmp
popa
mov
mov
adc
xlat
lea
sub
or
jne
(bad)
mov
cmp
in
push
outs
adc
sbb
(bad)
stc
or
test
dec
add
das
mov
inc
and
inc
mov
outs
jns
inc
sub
pop
cmp
pop
dec
pop
test
jnp
fimul
and
js
(bad)
xchg
and
out
scas
mov
mov
and
xchg
mov
or
mov
adc
sbb
cmp
js
scas
je
or
and
and
dec
pop
push
jo
pop
ins
mov
push
pop
enter
push
inc
sbb
push
xchg
nop
push
ds
ins
hlt
retf
je
add
sub
das
add
sahf
sahf
int3
xor
xor
mov
add
add
test
ds
push
cmp
pop
or
pop
in
cmp
(bad)
popa
pushf
cmp
dec
jns
mov
jns
das
cmp
push
enter
mov
and
sbb
sti
movs
sub
mov
mov
xchg
mov
push
inc
push
cmp
and
inc
add
and
adc
dec
aaa
add
jno
jbe
loopne
push
(bad)
jge
or
xor
or
adc
ss
test
inc
mov
fimul
and
or
adc
ins
inc
xchg
push
xor
in
sub
ficom
dec
aam
add
ror
jecxz
ins
js
pop
mov
rcl
and
test
outs
movs
adc
outs
arpl
fwait
call
lea
pop
adc
mov
icebp
cmps
ret
sub
(bad)
pusha
retf
adc
or
addr16
dec
jmp
pop
test
push
push
bound
cmp
adc
sub
pop
jb
and
push
push
xchg
push
sub
xchg
pop
mov
(bad)
out
and
les
push
mov
push
mov
mov
out
mov
ds
and
pop
nop
push
neg
or
xor
xchg
cmp
sbb
inc
inc
inc
nop
nop
jge
bound
pop
dec
test
push
mov
icebp
add
loopne
xlat
stos
jl
movs
mov
or
sub
adc
in
mov
ds
pop
xchg
or
pop
or
mov
push
mov
cld
leave
lahf
sahf
cs
cmp
hlt
xchg
push
and
add
inc
cwde
lods
inc
lock
add
(bad)
push
stos
or
imul
adc
adc
sti
cmp
je
push
xchg
add
jl
xchg
pushf
test
retf
and
jmp
push
and
inc
pop
enter
add
add
push
stc
add
mov
fld
mov
cwde
shr
mov
ins
adc
shrd
or
pop
adc
pop
(bad)
call
xchg
mov
dec
mov
add
mov
call
inc
repz
mov
dec
mov
sub
daa
dec
lea
xchg
adc
mov
mov
jo
xchg
adc
push
push
mov
jp
scas
lea
dec
lds
fs
push
mov
scas
xor
push
leave
mov
pop
fucomip
sti
sub
ror
popf
call
adc
gs
movs
cmp
test
ins
(bad)
sbb
xor
test
sub
push
jle
add
inc
push
lahf
(bad)
lock
push
push
cmc
xchg
sbb
push
sbb
aaa
xchg
sub
inc
cmp
and
lock
movs
movs
dec
jge
jno
inc
mov
retf
lea
sub
call
ja
mov
cmp
je
cmc
inc
jo
lea
std
aam
fmul
loopne
(bad)
cmc
and
mov
sub
mov
out
add
and
xor
test
sub
scas
inc
xchg
retf
sbb
pop
ins
add
fmul
aad
cwde
mov
ins
add
and
push
je
mov
add
clc
mov
mov
rcl
(bad)
sub
cmp
add
mov
fisub
lds
mov
jl
cmovb
mov
or
in
daa
in
add
add
jb
in
mov
call
pop
mov
adc
xchg
or
sbb
or
and
pop
adc
lahf
mov
imul
adc
(bad)
adc
test
adc
fldenv
and
int
push
sbb
inc
ror
int3
mov
(bad)
fild
(bad)
enter
add
and
mov
aaa
mov
daa
and
popa
add
test
pusha
scas
data16
mov
cmps
lea
jmp
sti
loopne
inc
repz
js
jge
loop
or
jmp
jne
cmp
pop
push
cld
sbb
push
jb
fcmovnu
add
dec
mov
jmp
cmp
cmp
jo
fnstenv
imul
jns
sub
xchg
dec
js
rcl
movs
mov
push
fidiv
jl
lock
ror
cmpxchg
add
add
arpl
shl
push
js
push
and
cli
xor
or
jnp
xor
mov
inc
dec
add
dec
jb
adc
movs
arpl
aad
sbb
jmp
mov
pop
in
and
movs
add
or
push
or
fwait
int
ins
dec
addr16
imul
pusha
arpl
add
inc
or
cmp
jmp
xor
inc
push
bound
xchg
imul
push
outs
test
test
mov
ret
mov
mov
or
pop
dec
cwde
aad
cs
js
or
dec
add
add
sub
or
hlt
adc
enter
fistp
adc
mov
mul
shr
sub
push
push
cdq
or
add
adc
mov
ja
lea
push
xchg
call
mov
push
aam
xor
or
ret
pusha
sbb
inc
or
sub
ror
test
push
push
and
push
pop
popa
popa
mov
cld
mov
mov
jbe
outs
xchg
loopne
(bad)
icebp
mov
(bad)
lahf
mov
jo
fwait
jne
lea
or
hlt
and
xor
hlt
mov
sar
add
inc
rcr
lahf
dec
adc
mov
pusha
add
mov
xchg
push
pop
inc
fbstp
add
aam
pop
(bad)
clc
and
test
xchg
pop
movs
push
stc
jnp
sbb
xchg
push
lock
out
aam
inc
jmp
mov
fidivr
(bad)
jecxz
xchg
rcr
jne
imul
add
dec
sub
test
adc
ins
add
add
mov
(bad)
cli
ss
xor
jb
jmp
adc
or
xor
push
outs
aas
adc
inc
adc
and
cld
adc
ins
mov
not
sbb
push
jo
jnp
cmp
add
sub
jb
scas
adc
pusha
fwait
sub
int
mov
cmp
add
push
xor
mov
pop
stc
sub
mov
push
sub
push
daa
leave
leave
scas
xor
pop
inc
iret
movs
outs
imul
fcmovne
jmp
pop
or
das
inc
out
jb
fcom
stos
lods
xchg
dec
inc
adc
cmp
lea
jno
ins
sbb
or
rcr
push
push
sbb
or
ret
push
mov
shl
xor
xchg
shr
xchg
pushf
mov
ins
test
pop
fistp
or
adc
mov
sub
mov
push
and
adc
neg
adc
adc
pop
adc
add
or
test
sub
mov
movs
std
or
xor
dec
aad
xchg
or
lahf
push
sub
cmp
jle
add
dec
rol
push
push
xchg
iret
sqrtps
dec
inc
mov
xor
ret
add
fsub
dec
cdq
or
add
(bad)
adc
sub
pop
add
push
in
xor
sub
and
(bad)
mov
dec
in
push
loope
int3
pop
add
test
loopne
jno
outs
push
xchg
test
xchg
pop
adc
xchg
sbb
or
add
xchg
add
xchg
mov
or
mov
jecxz
mov
inc
cdq
rcr
adc
sbb
pop
cmp
add
mov
call
adc
ja
adc
rcl
xchg
bound
add
dec
add
jo
xchg
jmp
adc
hlt
push
out
out
jno
leave
jmp
xlat
mov
inc
(bad)
imul
xchg
xor
aad
or
sub
cwde
inc
adc
ret
add
enter
mov
xor
stc
lds
jo
sub
out
shl
or
scas
sbb
rcl
in
bswap
pop
dec
jb
push
adc
cmc
add
pop
jns
ror
dec
ret
outs
xchg
test
add
jge
repnz
push
mov
jmp
cwde
push
setbe
test
mov
int3
mov
jae
lea
mov
inc
call
gs
je
jl
or
or
dec
enter
je
sbb
sbb
cmp
and
sbb
cmp
add
cmp
jecxz
aaa
sbb
add
shr
fmul
adc
push
xchg
jae
adc
push
test
ret
cmp
das
stos
cmp
push
mov
(bad)
cwde
cmp
fs
pop
lahf
jge
adc
dec
or
bound
movs
out
jns
or
in
and
sbb
sbb
clc
sub
loope
in
sbb
mov
cmp
sahf
and
dec
jmp
stos
pop
push
lock
adc
jns
rsqrtps
unpcklps
inc
push
test
je
xor
adc
inc
push
outs
pop
push
add
mov
or
add
daa
inc
mov
jp
ret
shl
push
mov
sbb
push
leave
jae
jno
pusha
push
xchg
out
jns
pop
pop
cmp
sub
sbb
retf
pop
or
and
stc
adc
push
sub
mov
push
or
mov
jo
add
push
jno
dec
adc
mov
movs
mov
and
jmp
cs
mov
mov
mov
sub
mov
mov
adc
sub
sbb
nop
adc
mov
inc
in
test
add
ret
pop
and
adc
jg
inc
xor
sub
ret
push
ret
mov
push
mov
pop
add
adc
fcom
stos
mov
shr
sbb
push
and
mov
fwait
mov
push
fwait
mov
mov
and
push
xor
add
(bad)
or
jns
sub
mov
fsub
test
jne
in
sbb
cwde
mov
dec
jbe
xor
adc
or
add
pushf
pop
rcr
mov
sbb
popa
adc
pop
fnstenv
push
lods
setno
movs
inc
jp
scas
hlt
and
xchg
jo
pop
xchg
and
sub
adc
add
enter
mov
sbb
jb
pop
jmp
rcl
loopne
push
bnd
mov
adc
cmp
add
sbb
cmp
xor
sub
dec
(bad)
jb
(bad)
jg
test
inc
push
test
and
mov
rol
or
mov
adc
test
xor
xchg
sub
or
push
rcl
push
or
je
xchg
stc
mov
rol
retf
sbb
jbe
cmp
call
cmps
mov
push
lods
es
fisttp
loope
stos
rcl
test
dec
and
sub
adc
inc
repnz
out
push
xor
xor
imul
(bad)
mov
in
fcomi
fistp
scas
jl
(bad)
sbb
xor
loop
clc
mov
fadd
outs
add
xchg
sbb
(bad)
push
das
mov
inc
pop
sbb
cmp
push
pop
sub
add
push
jge
pop
add
and
xchg
push
mov
cmp
test
dec
js
push
pop
mov
mov
lds
dec
bound
rol
and
data16
in
push
pop
push
lea
inc
or
mov
ret
mov
push
test
xor
sahf
dec
rol
sub
mov
ror
mov
mov
push
pop
or
mov
(bad)
sub
lods
mov
push
lea
push
add
jo
mov
ret
fwait
(bad)
push
pop
add
lock
pop
js
push
mov
(bad)
lods
mov
and
sub
enter
out
add
popa
pop
int3
add
sub
dec
add
mov
nop
sbb
dec
pop
inc
nop
adc
nop
add
add
or
dec
dec
ror
jo
pop
or
cld
dec
imul
mov
gs
add
or
fcomi
nop
push
sub
sbb
push
or
(bad)
movs
les
push
test
ins
push
pushf
push
daa
inc
ins
sahf
aad
xor
jmp
pusha
push
xchg
sbb
add
xor
cli
cwde
js
mov
xchg
sbb
add
(bad)
les
mov
lods
sbb
call
in
mov
sub
or
je
dec
or
push
(bad)
dec
jmp
push
jmp
push
and
or
(bad)
sub
push
jge
add
lock
xor
push
mov
jne
pop
inc
movs
inc
icebp
and
mov
inc
inc
lods
js
xor
aas
or
sar
add
loopne
scas
or
int3
jl
in
scas
xchg
loope
sub
mov
mov
sbb
xchg
out
or
neg
loopne
mov
loope
mov
xchg
or
scas
xchg
push
into
(bad)
dec
xchg
jo
xchg
or
adc
test
jno
or
jne
fstp
mov
push
push
lock
sub
enter
jl
push
xchg
call
pop
ret
adc
mov
jmp
or
(bad)
shl
pop
jbe
iret
das
dec
shr
fs
addr16
daa
xor
add
dec
iret
sub
adc
or
inc
pop
sbb
inc
xcrypt-ctr
cmps
pop
pop
inc
xchg
xor
mov
or
(bad)
dec
hlt
push
sbb
xchg
sbb
mov
imul
xor
fisub
test
lea
or
sub
jne
inc
into
add
lods
outs
mov
pusha
add
clc
test
pusha
xchg
mov
stc
cmp
push
fidiv
mov
pop
sub
adc
dec
imul
arpl
or
xor
or
and
retf
add
scas
nop
sbb
xchg
and
repnz
lea
jle
jno
mov
sub
pusha
outs
(bad)
(bad)
sbb
into
call
js
xchg
inc
jge
sbb
or
sub
aas
je
mov
mul
outs
sub
aaa
sbb
cmp
gs
jb
mov
mov
adc
call
es
adc
xchg
aam
pop
sbb
movups
arpl
stos
cli
mov
nop
or
(bad)
jmp
test
iret
pop
pop
xchg
lock
push
loope
lock
xchg
loopne
lods
nop
xlat
push
in
dec
and
dec
cmp
lahf
cmovge
push
test
cmps
mov
pop
lds
popf
mov
leave
js
xor
push
mov
aaa
retf
and
xor
xchg
add
mov
push
jmp
mov
cli
inc
inc
add
mov
or
ror
scas
test
mov
and
push
cmps
jbe
sahf
fdivr
sbb
and
int
(bad)
sub
mov
rcl
cmp
add
aaa
call
adc
movs
mov
jg
lods
add
cs
sbb
or
sub
push
mov
or
add
add
loopne
sub
push
clc
xor
rcl
shl
mov
or
xchg
adc
popa
lar
push
cmp
jl
mov
push
mov
add
outs
aaa
adc
mov
dec
jge
mov
adc
dec
pushf
or
add
jmp
and
cmps
dec
add
push
push
xchg
icebp
out
add
push
xlat
scas
inc
pop
adc
inc
cld
pushf
pop
sub
xor
pop
lock
pop
pop
push
imul
xchg
mov
in
(bad)
mov
popf
lea
push
sub
bound
cdq
jno
pop
add
sub
aas
or
xchg
cmp
adc
clc
sbb
fcom
pop
sahf
pop
js
mov
or
shl
(bad)
adc
adc
pusha
xchg
pusha
dec
(bad)
lea
add
add
pop
or
cmp
jge
lea
scas
and
loop
mov
mov
add
cmp
adc
jl
int3
ret
sbb
sbb
pop
mov
or
push
jmp
add
push
push
or
imul
sub
mov
outs
loopne
and
and
ret
adc
icebp
adc
xchg
mov
and
xchg
jmp
pushf
push
loop
xor
push
aaa
xchg
dec
or
mov
loop
test
cmp
test
cmps
les
dec
mov
leave
scas
sub
in
cmp
ret
add
push
xchg
fwait
jge
inc
and
xchg
test
cmp
dec
loope
push
pop
loopne
ss
pop
add
and
or
outs
cmps
rol
inc
sub
mov
jo
lods
cmp
in
inc
mov
pop
xchg
(bad)
xchg
sub
ret
push
mov
add
test
and
xor
ret
call
pop
cwde
nop
sbb
sub
test
test
in
adc
fs
mov
loopne
les
fldenv
cmp
xchg
sbb
adc
int3
mov
mov
xor
(bad)
add
arpl
nop
dec
aaa
and
mov
fs
push
outs
mov
shl
sub
daa
or
pop
mov
movs
jo
shl
(bad)
mov
popf
nop
add
scas
(bad)
lahf
add
pop
mov
rcl
stc
cmc
inc
in
(bad)
ins
mov
mov
(bad)
and
sbb
into
lds
cmp
or
pop
movs
mov
jo
or
xchg
dec
lods
inc
call
cmp
ins
adc
enter
dec
and
add
adc
out
call
xchg
xor
xor
mov
xchg
xchg
(bad)
test
test
pop
mov
jns
sbb
mov
stos
inc
xor
add
push
xor
push
cmp
and
aaa
ror
cs
jmp
lahf
or
jo
sub
mov
push
icebp
sub
dec
repnz
and
and
and
add
adc
or
lahf
xor
addr16
add
cmp
out
or
adc
and
xchg
or
fdivr
pop
cmp
add
pusha
add
test
(bad)
or
lahf
or
das
jg
imul
int
lods
sub
cwde
in
or
xor
inc
mov
cli
xchg
rol
(bad)
shr
or
mov
add
jno
and
lds
test
add
out
or
sbb
add
lahf
and
adc
inc
cmp
fisubr
dec
mov
jl
pop
movs
fwait
lods
je
add
inc
cmps
add
das
fs
add
ror
into
mov
dec
xor
push
push
xor
jle
and
push
mov
adc
loope
mov
int3
add
mov
mov
adc
pop
sub
and
inc
cmp
add
inc
lea
cld
je
and
or
add
sub
cmp
jne
cmp
dec
rcr
cwde
je
test
xor
retf
inc
sbb
add
(bad)
mov
lahf
and
and
add
or
jno
outs
lea
and
shl
mov
movzx
(bad)
iret
jp
ja
cmp
nop
dec
xor
adc
dec
(bad)
sti
(bad)
bound
or
push
push
(bad)
std
cmp
mov
push
(bad)
ins
jne
add
mov
gs
xchg
add
repnz
jecxz
sub
cmp
je
popa
mov
mov
fdivr
xor
(bad)
push
nop
push
mov
add
mov
sub
adc
or
je
or
jne
sbb
sbb
mov
add
sub
push
jne
add
addr16
inc
std
in
pop
mov
or
test
sub
rcr
xor
cmp
loope
jmp
popa
adc
add
in
or
cwde
ret
add
pop
das
icebp
fcomp
cmp
mov
(bad)
popf
enter
or
mov
aaa
popf
push
stos
dec
add
loopne
and
add
ror
add
add
xchg
(bad)
fld
and
(bad)
mov
and
jbe
or
add
mov
cmp
(bad)
daa
nop
mov
mov
ds
xor
daa
mov
adc
add
xchg
pop
push
push
add
les
sbb
mov
sub
retf
ins
sbb
lods
retf
mov
xor
or
push
pop
push
cmp
(bad)
jno
imul
push
jae
rcr
and
ror
push
pop
add
mov
sub
shr
fwait
add
(bad)
lods
add
cmp
gs
pop
(bad)
mov
loop
shl
ret
fdivrp
mov
add
mov
xchg
out
int3
or
mov
adc
sar
xor
or
xchg
add
stos
push
pop
lods
lea
test
xor
xor
xchg
fcom
inc
add
mov
cmp
pop
sbb
xchg
or
jl
inc
dec
mov
mov
xor
inc
dec
jb
push
jb
inc
dec
inc
jb
push
inc
inc
push
rcr
xchg
inc
or
or
out
lds
adc
mov
mov
inc
mul
adc
jns
sbb
push
inc
cmp
in
mov
dec
sub
mov
movaps
xchg
mov
cmp
or
mov
mov
or
sbb
jmp
(bad)
cli
sbb
add
cs
dec
add
lahf
ror
loop
add
inc
test
(bad)
sub
and
fisttp
inc
or
dec
jae
mov
push
xor
es
aam
clc
mov
cmps
arpl
push
enter
mov
fldenv
cmp
push
retf
fs
push
adc
into
iret
xor
or
shl
adc
ror
inc
adc
push
call
sub
dec
xchg
cmp
mov
(bad)
adc
xor
cmp
fsubr
jb
sbb
mov
xchg
mul
inc
push
stos
in
aaa
dec
loop
xor
cmp
or
ret
test
lahf
dec
mov
adc
xchg
sub
inc
inc
and
jae
sub
add
sub
test
pop
add
add
sbb
pusha
jl
pop
pop
jmp
jno
lea
push
sbb
add
jmp
sahf
addr16
xor
loop
xchg
popf
jb
iret
data16
aas
mov
movs
ins
mov
out
mov
stos
push
xchg
outs
movs
sub
jns
data16
push
and
neg
jnp
xlat
push
cmc
mov
push
jnp
outs
or
add
push
xchg
push
or
js
pushf
fimul
push
xor
dec
cmp
aaa
or
adc
adc
jg
call
push
adc
adc
pop
sbb
sbb
inc
clc
add
and
and
inc
xchg
aam
cmp
push
lea
sti
inc
call
xor
retf
inc
mov
mov
rcr
and
inc
dec
je
jns
jno
cmp
jo
out
xor
sbb
pop
add
fld
xchg
adc
adc
push
inc
data16
dec
sbb
add
pop
adc
jne
dec
les
add
es
movs
lahf
add
sub
inc
cmp
or
mov
or
add
sub
push
push
test
fmul
and
fcom
rcl
or
nop
or
and
mov
ins
inc
test
pop
adc
cmp
and
dec
mov
sub
loopne
or
pushf
add
sub
mov
sbb
add
sbb
not
mov
add
mov
xor
cmps
outs
inc
outs
fisttp
sar
adc
sahf
dec
xor
movs
ss
jb
push
push
lods
and
adc
sbb
push
add
mov
out
push
pop
lods
xchg
add
mov
xchg
xchg
ret
popa
or
cmps
jne
dec
inc
imul
and
and
(bad)
fs
push
mov
or
leave
in
(bad)
inc
clc
out
in
and
add
inc
xchg
adc
je
adc
(bad)
(bad)
push
add
(bad)
and
mov
push
nop
adc
lock
outs
js
jp
push
push
pop
sbb
pop
and
cmc
mov
pop
pop
add
sub
cmp
ret
and
and
scas
and
or
mov
add
add
mov
add
sbb
fisttp
pop
jne
pusha
pop
push
mov
sub
shl
pop
push
adc
jns
pop
add
cmp
stos
fisttp
ficom
push
inc
sbb
cmp
inc
fcom
or
ret
mov
pop
adc
xor
inc
outs
cld
shl
mov
inc
popf
shl
mov
(bad)
sub
dec
and
es
adc
mov
cmp
adc
sar
mov
test
add
mov
mov
mov
mov
mov
cmps
fst
movs
clc
push
pop
mov
add
sbb
inc
cmps
dec
inc
push
cmp
cmps
push
sbb
mov
jl
jne
imul
loop
fs
jge
call
ins
dec
and
outs
lds
dec
sti
sub
mov
and
adc
inc
pop
lods
mov
pushf
xchg
je
fstp
dec
bound
jle
and
xchg
xchg
retf
mov
fs
fmul
or
popa
inc
mov
aam
add
and
cmp
pop
add
movs
push
cmps
jno
lds
sbb
add
dec
adc
inc
repz
xchg
sbb
xchg
add
int3
js
inc
cld
push
push
mov
push
js
push
cld
push
adc
ins
xchg
jb
or
sbb
ins
cs
int
lea
jecxz
jl
xchg
fisttp
into
lea
dec
push
in
movs
adc
in
pop
sub
add
push
adc
cmp
pop
mov
pop
adc
call
lods
ja
adc
hlt
es
or
(bad)
call
mov
test
add
ret
dec
test
loope
inc
xchg
push
lods
daa
or
inc
or
cmp
cmp
xlat
rol
pop
push
push
inc
push
jne
lock
iret
loopne
push
adc
or
stos
pop
in
cmps
rcl
loop
or
inc
push
mov
xor
in
mov
jne
jbe
ins
pop
mov
cmp
inc
mov
add
xchg
xchg
call
arpl
cld
add
hlt
pop
mov
mov
vcvtdq2ps
pushf
in
xchg
test
cmp
fwait
jmp
std
int
inc
sub
mov
cs
lods
mov
and
pop
push
pop
int
xor
js
xchg
jns
inc
cmp
jmp
mov
mov
inc
cmp
jne
and
add
cmp
out
sub
add
sqrtps
ror
retf
dec
adc
lock
cwde
push
les
aam
push
sub
pop
cmp
sub
and
push
mov
inc
add
es
cmp
jmp
call
hlt
sbb
ins
pop
dec
je
sti
push
call
fcomp
pusha
cld
adc
add
lea
push
enter
(bad)
push
retf
sub
or
mov
add
int
mov
push
push
mov
push
dec
mov
xor
shl
adc
test
xlat
test
pop
sbb
add
data16
add
test
and
nop
add
in
adc
cld
or
dec
ja
test
jno
jnp
mov
jae
pop
cdq
call
(bad)
xchg
popf
mov
push
dec
add
add
mov
add
jmp
jno
xor
test
or
jle
jbe
mov
and
jbe
not
dec
sbb
mov
cmp
push
imul
dec
aad
add
dec
xor
xchg
or
mov
inc
maxps
push
dec
inc
cdq
xor
pop
jb
push
jmp
jmp
sbb
mov
or
inc
(bad)
xlat
dec
jo
mov
xchg
aam
pop
pop
sbb
lds
sbb
jb
sbb
inc
sub
or
mov
or
xor
cdq
inc
mov
mov
imul
pop
push
add
lea
or
test
sbb
or
pop
or
jmp
nop
inc
repz
add
push
xchg
aam
cmps
das
nop
and
pop
imul
fcmovnb
push
nop
(bad)
out
mov
jne
add
nop
popa
stc
movs
add
ret
pop
pop
add
jne
mov
and
cdq
fs
adc
or
xor
add
xchg
into
adc
mov
jbe
cmp
or
xchg
sbb
add
sti
shl
sub
xor
add
shl
seto
add
call
loopne
lea
cmp
rol
push
imul
and
push
repz
fdivr
push
adc
inc
test
cmp
stc
aas
mov
inc
mov
dec
adc
pop
movs
pop
or
add
sub
adc
fsub
mov
xor
cmp
dec
mov
sbb
pop
sbb
inc
pop
add
add
pop
pop
push
jle
push
jne
sbb
cmp
je
lahf
sti
inc
loopne
push
iret
mov
fs
loope
(bad)
imul
sbb
sub
cmp
push
fadd
inc
pop
push
test
push
ret
imul
mov
in
imul
call
jno
sub
mov
jbe
call
jne
sbb
and
jmp
xchg
mov
inc
mov
rcr
adc
jle
stos
repz
cmp
xchg
or
mov
rcl
btr
mov
mov
cmp
or
cmp
mov
mov
mov
xchg
mov
pop
add
xchg
sbb
and
inc
add
xchg
cmp
lock
sub
daa
mov
or
int3
pop
inc
ret
push
or
mov
push
dec
jae
mov
mov
or
push
scas
ins
aaa
sbb
push
or
mov
mov
push
mov
xchg
mov
mov
mov
dec
rcl
lea
adc
lahf
in
xor
outs
sbb
pop
add
xor
add
dec
movs
js
bnd
dec
inc
mov
pop
and
lods
test
mov
mov
inc
rol
mov
cmp
push
push
cmp
in
xchg
push
mov
sti
je
sbb
nop
sbb
mov
popf
shld
sub
dec
push
push
xor
push
add
pmaddwd
mov
retf
out
pop
fcmovb
ss
xor
push
push
or
jg
out
adc
out
sti
and
xor
add
lahf
dec
add
lds
adc
inc
inc
adc
xlat
pop
nop
inc
(bad)
pop
mov
in
pop
mov
ficom
push
ss
mov
push
mov
push
add
leave
adc
dec
jmp
enter
addr16
mov
inc
push
imul
shl
sub
lock
movs
jbe
fnstcw
das
mov
int3
push
add
and
shr
mov
dec
aas
dec
ins
jg
test
ja
scas
movs
sub
cmp
adc
mov
jnp
ret
mov
pop
dec
jle
mov
je
push
lock
enter
cmp
ret
jmp
fcom
loopne
popa
xchg
arpl
add
push
cdq
in
inc
xor
lock
mov
ror
add
add
add
inc
inc
cmp
aam
dec
lds
mov
adc
xor
xor
aam
adc
inc
hlt
cs
sub
hlt
mov
inc
inc
or
lea
fcom
inc
add
gs
inc
or
inc
mov
ins
and
push
adc
and
push
xchg
inc
std
in
adc
add
dec
ds
retf
inc
cmc
enter
mov
std
mov
mov
test
push
pop
mov
cli
jnp
push
jbe
sar
mov
fs
dec
call
int
pop
jp
mov
jo
inc
(bad)
call
dec
in
jle
test
jmp
lea
or
add
push
js
daa
xchg
mov
in
sbb
arpl
inc
rcl
pusha
pop
test
mov
lds
sub
in
test
hlt
es
push
jmp
mov
lock
adc
cmp
fisttp
cmp
pop
inc
(bad)
pop
and
fmul
fld
inc
inc
inc
test
ja
mov
(bad)
fld
fldcw
out
mov
push
fucomp
fnstsw
fstp
push
xor
inc
(bad)
jge
adc
fisubr
retf
or
or
call
pop
cld
sub
xor
sbb
jmp
fcmovnu
shr
jnp
cmp
mov
dec
sub
loopne
mov
add
sbb
fsubr
mov
sbb
fmul
or
add
jmp
mov
rcr
sbb
fbld
jp
repnz
mov
imul
out
rcr
ror
pop
or
jnp
imul
jo
add
popa
in
jnp
inc
cmp
add
xor
and
ja
sahf
lods
outs
cli
mov
inc
push
mov
sub
mov
mov
rol
popa
jmp
xor
cdq
xor
(bad)
inc
popa
pop
pop
and
and
mov
movs
and
mov
xor
pop
add
sub
sbb
push
push
fdivr
and
mov
shl
mov
push
inc
mov
fsubr
fsub
inc
add
xchg
lock
add
cmp
rol
dec
mov
push
pop
or
scas
dec
pop
rol
ror
add
and
mov
push
lods
call
xchg
and
mov
pop
fwait
xor
inc
inc
int
(bad)
stos
jmp
jmp
jle
sbb
fadd
xchg
xlat
jbe
je
sub
sbb
and
cmp
jo
adc
stos
jmp
test
pop
dec
dec
adc
sahf
retf
xchg
into
lea
adc
sub
cmp
mov
bnd
or
stc
jne
lea
pop
jb
ins
imul
es
fcomp
add
push
add
add
xchg
xlat
adc
dec
push
mov
dec
jnp
sub
mov
xor
scas
xor
mov
pop
fsubr
jb
and
leave
mov
mov
pop
xchg
inc
xchg
hlt
sub
loop
push
das
lds
push
xchg
mov
jecxz
pop
mov
adc
xacquire
add
xor
std
pop
xchg
inc
sub
xor
jns
mov
dec
stc
xchg
and
lahf
xchg
adc
jbe
push
mov
repnz
leave
push
jne
adc
xor
xor
lea
mov
sbb
cmp
(bad)
and
pop
sbb
mov
in
outs
rol
mov
lahf
enter
push
mov
inc
idiv
adc
and
cmp
mov
out
pop
mov
jne
ror
outs
mov
cs
cwde
ins
or
xor
add
int3
sbb
adc
inc
jg
cwde
shl
nop
aas
and
cmps
jno
test
pusha
add
loopne
push
push
clc
or
inc
js
add
dec
pop
pop
pop
js
mov
or
std
fwait
es
adc
jge
push
inc
push
add
add
imul
int3
test
push
mov
icebp
jo
lea
mov
sbb
mov
add
sub
mov
mov
adc
adc
ins
xchg
xchg
arpl
test
sbb
clc
lea
lock
pop
dec
sub
add
mov
and
push
add
cld
mov
data16
pop
adc
dec
push
xor
add
mov
and
mov
add
xchg
stc
add
or
xor
add
mov
push
repnz
lock
in
test
shr
fdivr
arpl
je
push
rcr
enter
jecxz
adc
push
sbb
pop
icebp
test
pop
(bad)
call
bound
jae
push
daa
in
and
aas
and
add
jne
ins
and
sbb
sbb
cld
push
movs
push
cmp
cld
mov
inc
neg
dec
mov
fcomp
push
pop
or
arpl
push
nop
jge
sub
mov
sbb
push
jecxz
xchg
out
dec
pop
sbb
call
xor
xchg
jb
outs
push
test
add
dec
mov
adc
imul
add
mov
push
pop
lds
mov
out
or
dec
pop
add
inc
std
cmp
jge
ror
and
repnz
in
sbb
or
iret
and
out
mov
cmp
scas
add
repnz
mov
mov
pop
outs
lock
mov
lods
mov
dec
daa
xor
or
inc
loope
js
add
pop
in
adc
and
addr16
sub
rcl
push
ins
test
call
push
adc
xchg
or
xchg
lea
inc
add
shl
aam
mov
xchg
movaps
pop
pop
add
adc
or
fstp
dec
push
test
int
inc
xor
stos
add
sub
jge
loop
ins
and
xchg
adc
daa
in
sbb
add
pop
add
dec
adc
ins
add
sbb
or
add
leave
arpl
cmp
jg
push
nop
push
sub
adc
inc
and
(bad)
cmp
test
push
leave
mov
cmp
and
idiv
push
or
jmp
je
add
jbe
or
push
or
std
xchg
cmp
mul
lea
adc
sti
lds
and
sub
add
mov
xor
inc
xchg
push
mov
pop
js
loop
mov
pop
push
dec
push
jmp
pop
jae
or
cmp
mov
jmp
bound
and
dec
add
fsub
xor
or
aad
cdq
and
sbb
loopne
cmps
test
jo
and
cmp
mov
sahf
xchg
jno
pop
movs
std
xchg
jno
jbe
(bad)
or
in
dec
pop
fst
scas
push
dec
sbb
jae
movs
fs
jns
sbb
mov
mov
xchg
pop
jae
sti
retf
adc
ins
xchg
repz
inc
pop
loope
adc
pop
js
fs
das
leave
daa
add
pop
mov
cmp
push
mov
add
xchg
ret
dec
xchg
mov
out
movs
inc
pusha
add
cs
enter
dec
test
shr
mov
pop
test
sahf
mov
popa
xchg
mov
and
and
mov
inc
sub
mov
nop
call
addr16
pop
data16
cdq
test
inc
addr16
mov
int
add
xor
pop
mov
dec
pop
sub
mov
nop
sahf
pop
test
and
push
xor
or
jle
mov
xchg
jo
adc
pusha
cmp
xchg
aas
les
sbb
xchg
cmp
ret
aaa
pop
jg
dec
mov
and
ror
add
or
cdq
(bad)
xor
dec
ret
mov
and
push
mov
sub
push
aad
add
adc
sbb
add
leave
cs
sbb
mov
ret
in
mov
dec
outs
jmp
imul
sbb
enter
js
or
into
push
nop
and
movs
mov
sub
jns
imul
adc
test
mov
cwde
dec
and
mov
mov
mov
xchg
outs
iret
mov
mov
cmp
rcr
dec
or
in
pop
cmps
mov
pop
lods
pusha
loopne
mov
and
daa
movs
inc
and
orps
test
cmps
sub
add
stos
mov
add
add
and
mov
arpl
in
pop
call
imul
push
lods
inc
arpl
xchg
mov
test
mov
adc
xchg
and
or
or
adc
mov
gs
mov
enter
mov
add
adc
fwait
sub
out
test
fmul
sbb
inc
mov
loopne
xchg
jo
lahf
in
popf
adc
inc
in
in
push
cmp
xchg
inc
out
inc
test
inc
pop
les
movs
aad
push
fsubr
test
fild
cmp
adc
inc
adc
jb
add
ror
sbb
(bad)
rcr
jmp
xor
ror
sub
xchg
lea
xchg
dec
call
and
push
xchg
cmp
test
sti
cmp
dec
es
dec
fsub
sbb
push
add
test
inc
and
movs
add
push
data16
cwde
in
sbb
xor
daa
in
xchg
pop
leave
jne
inc
idiv
lock
mov
jne
inc
sub
mov
push
push
or
ins
popa
xchg
aam
adc
in
xchg
stos
sub
in
push
pop
xor
out
popf
not
push
in
mov
push
lahf
mov
push
push
jnp
mov
adc
push
addr16
mov
xor
add
fsubr
mov
ror
sub
bound
add
adc
push
and
jmp
mov
adc
jecxz
adc
adc
adc
xor
dec
add
outs
rcl
mov
sbb
aas
sbb
lods
test
adc
push
dec
ret
jne
retf
jmp
pop
adc
in
mov
daa
inc
sbb
cmp
push
add
mov
ins
lahf
stos
xchg
inc
mov
cmp
pusha
(bad)
in
mov
xor
sub
adc
sti
pop
pop
jle
mov
push
pinsrw
(bad)
mov
iret
xchg
xor
mov
push
xor
mov
mov
push
push
add
xchg
or
mov
sub
and
cmp
xchg
push
cwde
add
je
js
xor
in
call
or
jg
call
jmp
add
and
shl
add
cmps
iret
xchg
loopne
and
mov
sbb
(bad)
stos
movs
out
dec
not
sub
xchg
mov
fstp
in
push
(bad)
cli
test
cwde
test
mov
sub
cmp
retf
adc
ss
enter
jne
cmp
gs
or
add
mov
sbb
pop
or
fimul
adc
lock
push
sti
jne
pop
inc
pusha
xchg
dec
dec
add
dec
cmp
mov
cmp
add
mov
xchg
dec
es
and
bound
sub
mov
cdq
rol
test
adc
or
sub
xchg
pop
mov
and
ins
ss
push
or
jb
retf
movs
ficomp
fcmovnbe
rol
ja
mov
sar
and
call
mov
adc
(bad)
mov
xchg
aas
(bad)
rol
sub
loopne
pop
lahf
lock
add
nop
add
pop
mov
and
cwde
push
xor
add
add
test
pusha
xchg
xor
push
jne
rol
repz
nop
retf
in
push
js
daa
loope
jns
ret
push
or
clc
or
icebp
xor
and
mov
data16
int3
pop
sub
add
out
test
mov
push
or
cwde
pop
sub
shl
retf
pop
daa
js
cmp
xor
inc
inc
mov
fwait
dec
mov
push
hlt
add
xchg
inc
inc
sahf
mov
sbb
push
push
out
jle
dec
mov
cli
ins
add
ss
pushf
ja
repnz
xchg
sar
mov
sub
dec
ret
jmp
mov
dec
add
and
xchg
adc
and
cmc
inc
fs
mov
sub
sub
jl
(bad)
imul
pushf
xchg
out
mov
mov
dec
mov
and
test
add
test
mov
aas
dec
sub
je
cmp
call
and
shr
icebp
movs
xor
push
inc
fadd
mov
mov
rol
shl
lock
data16
mov
popa
imul
pop
adc
add
call
test
jo
adc
xchg
add
xor
sub
and
or
jno
cwde
dec
and
test
and
cmp
fsubr
and
lahf
xor
and
push
lods
and
shl
mov
add
mov
aas
ret
in
mov
rol
or
inc
(bad)
mov
lock
add
sbb
cmp
mov
add
fisttp
cmp
jp
(bad)
push
xchg
xchg
mov
rcr
outs
dec
sub
scas
sbb
stos
enter
xchg
inc
xor
fild
pop
ss
bound
add
dec
hlt
xor
xor
shr
mov
inc
je
push
cmps
adc
and
rol
jo
mov
adc
std
sahf
xor
mov
int3
pusha
jl
dec
mov
test
ja
repz
fadd
out
pop
and
add
mov
rcl
lods
add
test
nop
and
xor
clc
inc
dec
ret
out
popa
repnz
stos
mov
mov
xor
call
inc
sub
cwde
inc
add
lock
mov
jg
jno
mov
push
mov
xchg
and
push
mov
in
mov
outs
fs
or
jne
(bad)
popa
inc
ins
sub
in
ror
dec
lods
and
jp
push
les
inc
push
cmp
(bad)
(bad)
in
lods
shl
sub
jne
or
adc
cmp
jne
lea
aaa
pop
adc
and
adc
push
and
dec
pop
ret
pop
in
(bad)
(bad)
xor
and
(bad)
push
jb
xor
xchg
jo
jbe
pusha
fisubr
jo
push
mov
pop
pop
push
cmc
sbb
or
xlat
xchg
mov
add
and
push
mov
je
and
not
popa
pop
rep
sbb
(bad)
popf
xor
mov
mov
sbb
xchg
add
jle
adc
mov
dec
cdq
sub
pop
ret
sub
push
in
mov
or
cmp
push
aaa
xchg
mov
shr
sahf
das
cmp
rol
mov
mov
pop
jecxz
push
jg
push
dec
jmp
cmp
xorps
xchg
jmp
stos
dec
jl
and
pusha
test
adc
jecxz
shr
imul
inc
mov
jns
fcmovnbe
aaa
cld
jecxz
sti
xchg
push
pushf
push
lods
adc
pop
mov
sar
mov
rol
(bad)
push
stos
movs
inc
lea
movs
shr
enter
add
dec
sar
les
inc
dec
jge
pop
ror
movs
and
mov
jnp
dec
push
clc
jl
repz
ins
dec
nop
mov
(bad)
push
cli
test
and
mov
and
rcl
adc
xor
dec
jl
shr
jne
mov
adc
xor
sub
icebp
add
or
sbb
cmp
xchg
scas
push
push
ins
cmp
mov
nop
pop
pop
and
sub
aaa
fist
mov
aaa
nop
xchg
ret
inc
cld
push
mov
shl
pop
inc
add
jb
stc
mov
jo
cdq
call
mov
lods
dec
jno
inc
mov
adc
ror
push
add
out
sbb
das
xor
xchg
sub
dec
sub
inc
cli
or
mov
inc
shld
sub
nop
or
stc
mov
push
cmp
push
inc
push
push
pop
and
inc
or
add
xchg
repz
ror
add
push
enter
jmp
das
jl
inc
and
push
mov
and
loop
int3
add
hlt
pop
or
xchg
inc
cmp
inc
lds
push
(bad)
and
xor
push
in
mov
dec
and
inc
xor
test
inc
leave
adc
push
inc
pop
and
cmp
and
cmp
push
xor
leave
adc
mov
xor
cmp
xor
test
aam
nop
mov
sub
pop
inc
mov
pop
imul
and
test
and
jmp
or
and
movs
imul
adc
pusha
and
inc
jne
adc
add
bound
inc
cmps
mov
nop
fs
mov
xor
mov
inc
jno
xor
and
jae
jbe
pushf
inc
outs
mov
nop
mov
aaa
cs
pop
sbb
dec
mov
jo
enter
push
imul
cmp
pop
and
cmps
fcom
mov
sub
mov
cmp
cmp
push
or
dec
sti
adc
push
mov
inc
sbb
mov
jmp
fimul
add
or
mov
and
dec
mov
mov
dec
mov
push
mov
and
mov
lock
mov
cwde
pusha
out
push
or
dec
mov
inc
xor
mov
mov
cmp
mov
push
mov
jp
add
push
push
push
mov
dec
xchg
repnz
mov
push
lea
ret
sub
sbb
mov
jle
add
xor
jns
cwde
dec
sbb
daa
add
add
jg
adc
cmp
add
inc
push
pop
cmp
mov
pop
and
dec
mov
xlat
mov
cmp
je
push
mov
push
xor
sub
test
add
add
mov
daa
sbb
pop
stos
xor
ret
adc
dec
adc
cmps
xor
mov
jo
ror
mov
sbb
push
mov
loope
lock
ja
dec
icebp
xchg
and
aam
xlat
cmp
xor
or
cmp
(bad)
xchg
ja
cmp
push
and
add
jg
lods
movs
mov
add
outs
jmp
cmp
cmp
pop
or
or
lahf
and
jo
push
xchg
jno
push
push
cwde
ss
adc
pop
xchg
pop
mov
xchg
sub
push
data16
fld
sbb
jmp
xchg
lock
into
mov
add
cmps
loop
test
in
xor
fisubr
xchg
mov
mov
lock
and
add
push
out
xor
and
or
cmp
mov
ret
cmp
push
sbb
push
adc
inc
xchg
movs
inc
pop
mov
repz
mov
rol
popf
pop
inc
mov
lods
inc
push
enter
and
sub
mov
jmp
pop
mov
sbb
mov
aas
sbb
es
inc
hlt
add
cs
mov
outs
dec
push
int3
loop
shr
std
jno
lahf
(bad)
add
mov
outs
mov
and
out
rol
add
cmp
std
push
ja
hlt
imul
test
or
pop
or
jmp
and
ret
cs
imul
xor
cld
lods
push
inc
or
push
or
sbb
dec
inc
mov
xchg
rcl
xor
(bad)
cwde
adc
ins
cmp
test
cmps
jmp
add
adc
xor
retf
movs
popf
mov
(bad)
shl
mov
outs
jnp
lea
ror
add
out
add
adc
mov
rcr
mov
es
inc
dec
outs
faddp
cmps
jo
imul
inc
xor
clc
lds
adc
mov
shr
push
xchg
dec
xchg
in
cmp
aam
push
ret
add
js
ss
test
sub
jns
int3
mov
xchg
or
push
jle
ss
pusha
out
je
mov
jecxz
xchg
pop
cs
or
repnz
dec
cwde
lods
push
xor
sub
and
jns
add
pop
lock
add
push
push
lds
dec
ret
cmp
cwde
out
std
test
jb
push
aaa
pop
cmp
and
cmp
sar
xchg
pop
mov
gs
stc
mov
gs
(bad)
out
add
and
mov
add
add
lods
sbb
add
inc
mov
mov
fs
sub
in
pop
enter
add
and
pushf
and
adc
rcl
push
xor
inc
enter
in
sub
xchg
push
dec
mov
ja
xchg
sbb
sub
push
inc
out
mov
enter
cdq
movs
xchg
call
and
or
add
xor
mov
add
sbb
test
add
jns
sub
gs
or
fisttp
mov
shl
xchg
add
or
ret
xor
or
retf
in
cdq
adc
rcl
sub
and
leave
push
imul
dec
fst
cmp
mov
sub
sar
rol
mov
lea
jle
lea
adc
push
lahf
cld
mov
ret
mov
add
inc
cdq
dec
scas
add
mov
call
push
adc
add
push
xor
inc
lods
push
and
lahf
mov
(bad)
enter
in
or
mov
aaa
fwait
std
out
pusha
and
in
mov
sub
or
test
jno
adc
out
push
xor
xchg
sub
inc
jae
push
mov
mov
dec
sbb
mov
imul
daa
adc
sub
dec
daa
mov
adc
enter
xor
jmp
rol
sub
mov
pushf
inc
scas
in
pop
cmp
cmp
shl
nop
sub
inc
push
mov
mov
jle
test
cs
mov
add
imul
and
enter
stos
test
inc
call
xchg
es
scas
sbb
xchg
ss
adc
test
dec
pushf
pusha
sub
and
and
jo
jns
mov
loope
dec
xor
add
mov
xchg
mov
stc
mov
ret
fcom
xchg
fstp
sbb
mov
mov
mov
fisub
je
(bad)
adc
dec
sub
dec
sub
imul
dec
mov
adc
add
stos
push
push
sbb
push
out
mov
xchg
scas
lods
fsub
cmp
cmc
int3
jno
mov
lea
cdq
dec
add
dec
in
mov
jo
dec
adc
int3
jle
pop
push
scas
nop
sbb
add
pushf
(bad)
adc
add
fsubr
xchg
or
dec
add
imul
mov
(bad)
test
sub
aaa
or
jle
sbb
movs
and
sub
imul
adc
xchg
int3
adc
and
and
repz
rol
push
(bad)
push
repnz
xchg
and
pop
sub
mov
ja
push
xor
adc
mov
adc
movs
mov
and
dec
dec
mov
push
ds
pushf
retfw
clc
and
sbb
lea
call
or
mov
adc
mov
add
push
fisubr
jmp
mov
add
stos
pop
mov
add
stos
or
mov
popw
lods
add
and
inc
push
shr
xor
ret
xor
(bad)
popf
in
loopne
mov
xchg
retf
movs
sub
mov
test
rcr
or
jmp
sub
outs
cmp
je
pusha
mov
inc
or
and
repnz
push
add
icebp
repnz
(bad)
aas
mov
jne
js
sbb
aad
pop
add
cmps
leave
cmp
shl
test
cmp
enter
or
sar
sub
lock
pop
mov
cmp
in
add
sub
out
push
and
pop
xchg
adc
inc
push
dec
adc
add
rol
cwde
cmp
sub
dec
add
push
es
adc
mov
(bad)
cmps
aas
or
sub
test
cmp
pop
das
push
ret
or
test
push
pop
lahf
jns
add
leave
xor
sbb
inc
dec
shl
mov
rcr
mov
jae
dec
adc
mov
inc
sub
stc
pop
add
push
push
mov
push
pusha
mov
std
and
push
outs
add
push
adc
and
adc
movs
add
test
add
enter
and
or
pop
dec
ins
clc
gs
adc
and
(bad)
cli
or
loope
stos
sbb
xchg
mov
dec
movs
push
xor
pusha
pop
dec
sub
add
add
pop
mov
jmp
jo
mov
imul
jl
(bad)
popf
imul
cmp
sbb
push
add
test
(bad)
mov
mov
je
and
aam
(bad)
cmp
xchg
inc
popf
sub
jmp
xor
xchg
pop
mov
mov
or
sbb
je
add
sbb
pop
or
push
sar
adc
mov
mov
repnz
and
fild
dec
add
test
and
aaa
call
call
sbb
in
sbb
push
and
sbb
mov
repz
bound
scas
nop
call
jge
push
inc
mov
nop
(bad)
xor
adc
fnsave
cwde
in
ins
push
dec
adc
ss
xor
test
add
ret
xor
in
loopne
into
or
adc
or
pop
cs
and
add
retf
adc
outs
mov
pop
lock
mov
inc
movs
sbb
pop
les
cmovb
or
jns
inc
les
push
add
cmp
ror
or
or
movs
adc
push
or
add
pop
push
repnz
sti
js
mov
inc
add
push
popa
or
enter
repz
enter
or
shr
or
mov
push
mov
add
xor
mov
jp
and
les
fwait
add
inc
push
push
or
mov
sub
mov
rcr
inc
sbb
mov
call
jnp
adc
jmp
pop
xor
push
sti
push
mov
ror
lods
lods
cmp
dec
and
sbb
push
mov
dec
gs
xchg
cld
aam
cmps
push
dec
js
sbb
adc
and
sbb
jo
push
xchg
add
out
xchg
inc
test
fldcw
sbb
js
repnz
hlt
or
and
inc
add
add
mov
cmps
xor
jne
or
jno
lds
sbb
dec
into
add
out
or
dec
sub
and
ins
add
je
mov
sbb
xor
add
mov
xor
add
push
pop
mov
cmps
rcl
add
mov
inc
jg
or
and
adc
add
popa
pop
push
cld
call
add
in
mov
test
jbe
push
xor
cmp
mov
pop
ret
add
inc
pop
ficom
dec
adc
(bad)
dec
xor
or
fmul
jb
dec
xor
loope
jae
rcl
sub
mov
push
or
dec
bound
cwde
dec
loope
stc
inc
dec
and
aas
iret
loopne
push
inc
imul
pusha
cmp
in
xor
xchg
nop
mov
cmp
adc
cmps
ins
fs
movs
outs
icebp
aam
aam
push
iret
mov
inc
sub
mov
fcomp
mov
dec
or
ror
je
push
sub
call
inc
inc
fcmovne
dec
mov
loopne
repz
push
push
cmp
inc
sbb
or
push
inc
dec
adc
cli
add
sub
adc
or
cs
add
mov
aas
mov
inc
push
repnz
sbb
push
movs
js
push
push
push
mov
mov
xchg
jmp
jne
cmp
jno
add
dec
test
adc
ds
sbb
add
scas
xor
in
in
in
add
add
ror
and
pop
adc
repz
inc
sub
lock
test
shr
xor
cmp
movs
test
mov
ror
bound
lahf
xor
or
das
add
or
(bad)
fsub
xchg
retf
fmul
and
loope
loopne
add
or
add
mov
cmps
fsub
dec
sub
dec
ss
adc
retf
inc
mov
adc
sub
(bad)
xchg
cmp
sbb
or
repz
movs
pop
pop
add
out
(bad)
sub
lahf
mov
mov
adc
int3
push
(bad)
nop
adc
xchg
enter
fldcw
push
adc
mov
cmp
sub
xchg
out
ds
sbb
mov
and
scas
mov
dec
pop
xchg
xor
pop
dec
sbb
(bad)
push
jmp
iret
sub
jg
popf
sub
push
in
add
push
outs
sub
int3
lods
or
jbe
add
nop
xchg
add
ffree
mov
aam
mov
sbb
add
sub
lds
sbb
call
xchg
xchg
add
push
and
jg
jecxz
inc
test
mov
pop
and
xchg
cld
and
into
jecxz
pusha
add
(bad)
movs
test
sti
push
mov
adc
push
cs
dec
out
add
in
retf
push
shl
add
sub
xchg
xor
add
fs
fcom
mov
or
je
dec
and
ror
xor
xlat
dec
mov
add
bound
out
add
ja
adc
cmp
cli
call
in
(bad)
out
in
xchg
or
and
movs
cdq
inc
dec
ins
add
les
inc
sbb
mul
mov
sbb
xor
rcl
aaa
sbb
fadd
mov
inc
stos
jne
add
inc
push
ror
xor
add
movs
sbb
mov
xor
or
fcom
push
adc
cli
add
adc
and
cmp
sub
jle
dec
dec
jp
push
ret
(bad)
and
add
loope
or
add
jbe
cs
or
jbe
leave
outs
and
inc
shr
cmp
jbe
lods
and
push
jno
mov
push
push
pop
adc
lahf
pop
adc
movs
shr
adc
push
js
inc
jp
ret
jge
mov
adc
add
xor
cmp
popa
pop
test
aas
ret
rcl
sub
shl
nop
test
sub
or
and
ror
sti
fsub
ins
loop
jecxz
imul
adc
and
adc
es
outs
add
fucomi
push
frstor
test
les
out
aad
pop
popa
add
mov
or
add
and
cmp
(bad)
inc
inc
inc
xchg
adc
mov
jl
push
xchg
(bad)
mov
bnd
jae
add
dec
dec
loopne
pop
adc
int3
loop
push
xor
xchg
(bad)
rol
mov
and
add
jb
mov
pop
jge
push
rol
and
pop
stos
adc
dec
mov
das
test
add
dec
lods
inc
pop
les
aaa
pushf
in
or
dec
adc
mov
int
and
lock
mov
xchg
pop
mov
adc
mov
sar
push
pusha
or
xchg
mov
aam
retf
jnp
enter
dec
add
mov
and
mov
jge
inc
mov
ret
push
push
lea
test
add
sbb
jns
call
pushf
clc
sbb
ds
pop
and
add
add
imul
outs
add
dec
mov
imul
movs
mov
add
shl
ficom
sbb
sub
and
inc
out
or
adc
ds
cmp
xchg
les
push
nop
out
mov
inc
xchg
mov
sub
inc
sbb
into
mov
cmps
jb
push
movs
je
retf
sbb
add
inc
jle
push
pop
and
shl
rol
adc
jno
push
sub
mov
dec
adc
mov
dec
mov
cmc
adc
push
dec
shl
je
jne
in
sar
dec
adc
push
or
bound
mov
sysexit
lods
sub
lahf
ret
out
mov
add
mov
lods
or
mov
adc
outs
dec
jmp
add
add
adc
inc
xor
and
push
dec
mov
mov
pop
lea
sub
mov
dec
xchg
rcr
adc
enter
fist
xor
mov
sbb
sar
cmp
mov
shl
mov
pop
cs
dec
ret
push
loopne
or
movs
mov
inc
adc
inc
xchg
and
xor
loope
and
sbb
mov
mov
scas
jne
add
nop
cwde
pop
mov
push
mov
and
les
test
and
adc
fs
cmp
fadd
jmp
cmp
inc
and
mov
movs
stos
aas
xchg
adc
push
mov
add
test
jg
xor
movs
adc
push
in
enter
mov
xor
outs
lods
stc
add
out
xchg
sti
pop
inc
xor
sub
cmp
les
jmp
adc
push
mov
shr
aaa
cs
jne
lods
jl
fsub
inc
jmp
jno
(bad)
aas
add
mov
mov
xchg
jnp
daa
cmp
int
mov
xchg
test
pushf
sbb
out
lods
(bad)
mov
out
cmp
or
jecxz
inc
fisubr
test
add
data16
into
add
pop
imul
and
sbb
loope
sbb
and
inc
int
and
sar
add
or
mov
push
data16
ins
repz
sbb
clc
cmp
je
push
mov
repnz
repz
jo
aaa
sub
dec
mov
mov
and
js
push
xor
push
cmp
fadd
outs
jne
mov
xchg
mov
jmp
repnz
adc
fsubrp
movs
call
repnz
call
mov
cmc
inc
xchg
shr
or
ins
sub
ss
pop
add
lea
mov
push
sub
call
movs
jecxz
retf
lods
add
retf
ins
sbb
test
je
jmp
cmp
jge
inc
push
push
jp
mov
(bad)
and
sub
push
dec
add
xchg
je
xchg
iret
sub
in
or
lock
push
adc
sbb
mov
int3
jmp
push
or
leave
mov
jp
adc
pop
add
and
xchg
sub
mov
daa
push
push
jge
cmp
or
xchg
fs
inc
dec
or
cmps
xor
sbb
imul
pushf
mov
mov
rol
and
fcomp
fiadd
add
cmc
enter
push
xchg
aam
inc
add
sbb
dec
add
scas
mov
cdq
push
adc
inc
mov
pop
mov
mov
jns
(bad)
jmp
call
jne
pop
sbb
or
push
loop
xor
xchg
inc
daa
js
cmp
jg
add
sbb
or
shl
dec
push
dec
or
dec
stos
add
adc
cmovbe
pop
outs
shl
ret
lea
or
hlt
pop
mov
push
loopne
xlat
push
pop
jmp
jl
fmul
(bad)
fst
jae
js
cmp
jg
jo
mov
push
pop
adc
ret
push
fstp
jns
bswap
ret
ror
xchg
xor
sbb
cmp
les
lds
adc
inc
or
and
movs
add
pop
and
rol
mov
xor
or
xor
inc
push
scas
ins
call
dec
shl
jmp
mov
sub
icebp
xor
mov
popa
push
lea
outs
adc
xor
jno
pushf
push
lahf
sub
mov
sti
sbb
push
sbb
xor
jg
nop
or
mov
shl
or
in
sbb
xchg
ja
inc
or
jae
push
ins
fisttp
nop
test
aad
pop
push
mov
mov
fcom
push
out
mov
add
sbb
dec
mov
(bad)
or
push
xor
add
cmps
and
adc
and
xchg
mov
xor
add
jo
lods
mov
mov
xor
pop
loopne
push
rcl
inc
add
dec
inc
mov
mov
mov
dec
fild
icebp
add
jne
mov
mov
add
add
pop
xor
adc
adc
push
ss
mov
imul
xor
and
pop
sar
aas
dec
and
dec
adc
sub
sbb
dec
sbb
pushf
fidiv
push
bound
push
push
and
imul
inc
retf
adc
sbb
fldenv
mov
cmp
sbb
add
mov
popa
xchg
mov
cs
push
jnp
push
ss
inc
dec
mov
xor
push
add
and
in
and
add
mov
fild
add
mov
fcomp
sbb
rol
inc
cmps
popa
adc
mov
test
enter
lods
cli
icebp
sbb
jge
push
xor
inc
pusha
js
and
xlat
mov
adc
mov
loopne
push
movs
push
inc
nop
movs
sub
xor
ds
call
dec
push
push
and
test
xchg
pop
daa
xor
xor
xor
mov
clc
clc
imul
dec
adc
into
fisubr
imul
sar
or
daa
sub
push
xchg
xor
pushf
add
fsubr
xchg
xor
imul
int3
cli
(bad)
sbb
in
xchg
adc
jne
sub
sbb
(bad)
jne
and
or
bts
test
pushf
xchg
cmp
inc
or
adc
dec
pop
movs
sub
push
shr
jns
movs
lock
dec
out
sbb
ins
dec
xchg
inc
mov
pop
nop
add
sub
fstp
fmul
push
cmp
or
call
xor
sahf
xor
bound
jno
je
inc
adc
adc
ss
or
sub
rcr
adc
loope
push
fld
push
push
dec
not
inc
adc
sub
add
pop
fsubr
mov
adc
es
lds
adc
pop
mov
pop
add
cmp
popa
ret
fld
mov
jo
cmp
fdiv
cmp
jmp
mov
cmp
xor
retf
adc
jge
(bad)
mov
jmp
aaa
ss
xchg
fwait
cwde
je
add
jno
sub
pushf
or
test
inc
or
sub
push
sub
and
jne
fidivr
popa
nop
jbe
add
push
adc
jg
stc
push
sahf
cmps
imul
and
mov
or
cmp
inc
mov
pop
adc
or
lods
jb
iret
daa
inc
push
add
mov
xor
mov
xor
sar
cdq
cs
sbb
dec
cmp
add
cmps
mov
in
retf
mul
sbb
mov
jbe
add
cmps
add
mov
add
jle
ds
cmp
cdq
mov
push
push
retf
or
pushw
sub
enter
nop
dec
sbb
or
retf
adc
push
push
lahf
cld
ss
test
pop
test
or
sbb
repnz
sbb
push
pop
xor
fadd
and
rcr
dec
push
sub
add
mov
dec
push
xchg
jl
inc
add
push
inc
cmp
lahf
or
push
cdq
js
push
stos
sbb
push
mov
adc
add
mov
int3
retf
dec
jo
(bad)
pop
or
movs
call
add
aaa
xchg
int
mov
lods
pop
pop
adc
ins
jmp
or
xchg
mov
test
fld
push
stos
inc
sub
mov
adc
sub
cld
dec
and
push
sub
ret
pop
call
xchg
push
imul
and
and
in
cld
adc
push
cmp
and
add
cmp
test
mov
arpl
pop
add
mov
xor
jb
cld
test
sbb
(bad)
adc
shr
dec
inc
and
mov
jmp
loope
push
inc
mov
inc
sbb
in
add
jecxz
push
push
sub
add
dec
les
mov
int
sbb
pop
imul
sub
adc
add
push
(bad)
not
aaa
xchg
jp
mov
sbb
out
add
(bad)
test
test
mov
rol
and
pop
push
(bad)
fmul
jae
xchg
push
fcom
push
sbb
es
xchg
mov
mov
sbb
sahf
adc
xchg
push
mov
xor
jnp
add
or
test
add
jne
fwait
in
mov
adc
test
mov
je
push
or
fiadd
mov
retf
fwait
xor
xor
sub
div
aam
add
mov
sti
mov
pop
bswap
call
xlat
and
mov
popa
push
push
pushf
xchg
fmul
jmp
pop
adc
sub
push
and
add
xchg
adc
pop
xor
jle
inc
inc
and
psrld
add
and
rol
fs
lods
ins
es
test
jno
gs
push
dec
adc
adc
movs
or
cmps
lock
nop
mov
aam
inc
outs
test
xchg
fwait
cmps
shl
xor
push
push
std
jns
cmp
xlat
jmp
imul
outs
jno
sub
pop
mov
xor
xchg
or
pop
inc
mov
pusha
xchg
lea
in
or
xchg
jbe
dec
nop
inc
adc
xchg
pop
sub
mov
rcr
jo
xor
sti
push
retf
mov
adc
out
stos
loop
imul
clc
adc
inc
dec
rol
dec
fs
push
sub
mov
movs
bound
aaa
push
retf
pop
icebp
sar
test
dec
or
push
jno
pushf
ds
xor
pushf
das
or
in
ror
mov
adc
js
in
pop
ret
dec
and
dec
xchg
lods
dec
cmp
or
sub
ret
imul
js
std
mov
popa
psubb
push
add
and
pop
xchg
xchg
jns
test
test
test
and
lods
mov
add
xchg
add
xor
push
add
add
sbb
adc
loopne
in
mov
push
in
add
clc
add
rcl
mov
call
mov
loopne
or
movs
push
popa
lods
cwde
or
jo
and
call
inc
call
or
mov
or
je
cmp
jmp
lahf
push
push
jge
psubusw
cmp
daa
popa
ret
mov
imul
adc
shr
nop
inc
sbb
loop
in
sbb
loope
adc
repnz
mov
and
adc
mov
aad
jns
loopne
push
cmp
inc
adc
sbb
pop
and
scas
es
leave
sbb
mov
add
lea
and
cmp
rcl
outs
push
in
xchg
aam
out
cmps
mov
(bad)
fdiv
mov
sub
cmc
loop
mov
add
test
ss
mov
dec
js
dec
call
dec
clc
pop
adc
push
fs
aam
sahf
inc
add
pop
test
adc
out
pop
jmp
inc
mov
cmp
add
mov
int3
cmp
test
push
jp
add
sub
and
in
push
inc
cmp
fsubr
adc
mov
push
popa
test
cmps
mov
pop
jne
test
cvtps2pi
xchg
je
mov
loopne
push
inc
dec
jne
push
or
mov
jno
sbb
dec
mov
mov
adc
icebp
xor
adc
push
add
repz
and
dec
(bad)
test
cld
add
mov
test
cmp
pop
and
push
mov
and
xchg
mov
mov
push
aaa
(bad)
retf
fwait
mov
jo
pop
test
stc
xor
xor
pop
movs
inc
push
mov
loopne
ret
or
dec
inc
or
jecxz
hlt
adc
fimul
push
push
dec
ds
pop
scas
or
bound
jecxz
xchg
xchg
xchg
xor
in
or
jmp
and
adc
xor
mov
scas
pop
add
mov
dec
pushf
sub
adc
popa
and
cdq
in
aad
shrd
int3
in
add
scas
and
xchg
icebp
je
mov
sub
jmp
add
inc
jnp
or
dec
xor
dec
fldcw
add
iret
out
add
add
dec
je
js
add
rol
or
adc
dec
mov
(bad)
sti
jb
mov
shr
lock
mov
sub
or
aas
mov
fbstp
lahf
and
adc
mov
dec
rol
push
adc
dec
pop
cmp
sbb
jmp
gs
sbb
push
and
mov
out
mov
xchg
cmp
sub
nop
push
sub
sub
xor
int
les
stc
sbb
cmps
fist
scas
test
jns
jle
xchg
push
push
push
lea
pop
repnz
mov
test
add
jns
mov
int3
and
pop
les
pop
cs
or
(bad)
call
test
fsub
mov
mov
cmp
cmp
or
dec
and
xor
popa
jecxz
dec
out
inc
sbb
aam
scas
leave
je
fadd
aam
into
scas
pop
mov
sub
dec
jne
or
mov
in
popa
and
and
jb
sbb
push
dec
pop
sbb
or
inc
fadd
cmp
xor
push
xchg
add
adc
mov
(bad)
cmp
push
xchg
shl
mov
in
call
cmc
add
ins
js
mov
shl
rcr
test
in
dec
add
call
into
mov
push
outs
sbb
fwait
clc
fs
jge
sbb
and
sbb
xchg
bound
ins
push
loopne
push
and
dec
out
cmp
jmp
mov
xlat
(bad)
adc
lods
mov
mov
jnp
ins
out
sub
mov
xor
mov
or
sbb
jae
popa
adc
or
mov
jle
mov
je
push
xlat
in
ds
mov
add
sub
cli
aam
sub
aaa
adc
mov
jb
mov
aas
pop
sbb
mov
add
(bad)
push
in
mov
xlat
jo
pop
outs
jmp
je
xchg
or
and
aas
test
ret
into
add
sbb
cmp
jg
mov
pop
dec
bound
jne
xchg
add
add
cmp
jmp
pop
sbb
data16
mov
pop
aaa
enter
jmp
adc
fwait
aam
adc
into
xor
ret
pop
fcom
mov
dec
in
dec
push
sub
dec
sub
pop
out
mov
adc
push
xor
cmp
js
or
adc
inc
movs
jo
jecxz
and
test
jns
add
xor
adc
movs
cdq
xlat
cmp
and
mov
ja
push
pop
add
ins
mov
(bad)
clc
inc
nop
xchg
inc
outs
sub
xor
xor
sbb
mov
test
xchg
and
retf
mov
sub
(bad)
add
out
sti
call
mov
repz
sub
popa
pop
pushf
and
push
xchg
mov
mov
push
adc
jg
xor
jbe
adc
adc
out
pop
fimul
xchg
mov
sbb
xor
pop
test
add
out
nop
sub
mov
or
jg
xor
and
jnp
cmc
add
dec
jp
jle
loopne
test
and
xor
or
mov
dec
sub
je
dec
xor
and
inc
pop
pop
loopne
ror
stos
loope
and
or
sbb
js
lds
xor
or
outs
pop
sbb
dec
add
sub
pop
in
(bad)
pop
push
mov
lea
adc
inc
jne
pop
add
ret
add
push
(bad)
cmc
retf
lea
jge
inc
mov
sub
push
dec
pop
add
mov
mov
(bad)
mov
test
not
mov
pop
jge
inc
sbb
mov
mov
push
jmp
sar
popf
cmps
movs
pop
adc
mov
add
xor
fmul
and
(bad)
(bad)
jle
and
shl
dec
sub
inc
sahf
push
retf
push
or
les
scas
jecxz
and
xchg
mov
outs
push
inc
adc
and
adc
mov
add
cmp
sbb
inc
mov
or
mov
sbb
mov
xor
movs
push
test
fs
dec
pop
imul
push
sahf
push
adc
je
inc
adc
mov
out
and
enter
inc
add
mov
mov
add
adc
dec
mov
mov
pop
add
and
retf
push
fistp
mov
add
fnstenv
sub
jns
or
(bad)
cmp
mov
inc
out
pop
out
pop
mov
jo
icebp
add
dec
call
sahf
sub
iret
outs
push
and
movs
pop
or
cs
jmp
pop
movs
pop
les
pop
aad
daa
lods
das
push
std
jb
fwait
aas
clc
lea
cmp
jne
cmp
add
xlat
(bad)
cmp
add
add
loopne
pop
fild
mov
inc
imul
dec
mov
fistp
add
cmp
inc
xchg
push
xor
enter
data16
jl
and
jg
mov
adc
jns
pop
adc
imul
cmp
mov
pusha
sbb
pop
data16
sub
push
push
xchg
mov
enter
lods
ins
mov
add
adc
adc
and
inc
pop
mov
and
sbb
loop
jo
(bad)
sahf
std
xchg
jo
jne
or
add
sbb
mov
cli
fdivr
lock
pop
test
add
inc
sar
sbb
inc
shr
pop
and
(bad)
lods
push
sbb
mov
adc
or
push
push
stc
cmp
aaa
or
jmp
cmps
adc
xor
shr
adc
fmul
nop
sbb
sbb
add
ins
pop
aaa
add
push
sbb
and
sub
adc
or
inc
push
cmp
xor
adc
dec
adc
xchg
inc
adc
dec
gs
sbb
push
sbb
push
push
test
push
in
sub
inc
lods
mov
push
sbb
mov
push
push
test
and
loopne
gs
retf
sbb
push
retf
ror
fs
cld
cmp
jecxz
add
add
neg
sub
into
lods
(bad)
popf
pop
xchg
in
or
sahf
xor
dec
pop
xor
push
pop
inc
add
movs
mov
sbb
sbb
sub
mov
jmp
push
(bad)
pop
pop
and
imul
mov
jbe
fistp
dec
and
push
gs
ret
push
pop
fsubp
shl
call
adc
ret
cmp
jo
scas
or
push
mov
sbb
and
inc
movups
pop
addr16
sbb
lahf
fiadd
push
pop
data16
add
repnz
pushf
or
jl
or
cmp
adc
ss
inc
adc
fcmovbe
and
or
cld
fsubr
xchg
and
mov
sbb
call
inc
test
cs
dec
sub
data16
dec
add
mov
sbb
and
fsub
sbb
xchg
in
fisttp
inc
call
std
test
adc
in
jge
je
aas
in
imul
jp
mov
jo
call
xchg
lods
(bad)
sub
in
ret
add
add
cld
cli
sbb
xor
cs
sub
push
and
push
cmp
pop
add
inc
test
loopne
mov
aas
sub
or
adc
jl
xor
cmp
push
mov
add
push
fisubr
movs
add
dec
fist
add
test
and
add
dec
jge
sub
pop
sub
inc
das
test
xchg
sub
pushf
xchg
movs
movs
int3
mov
push
loop
or
cmps
dec
push
adc
cmp
js
xlat
pop
test
inc
test
retf
sub
fidivr
xchg
adc
inc
add
pop
aam
hlt
add
and
mov
xor
mov
xchg
lods
or
test
mov
mov
jmp
inc
jmp
outs
in
test
pop
add
jo
repnz
mov
cld
(bad)
ins
ror
or
or
mov
inc
outs
loop
mov
aaa
gs
imul
sub
inc
pop
(bad)
daa
add
add
pusha
cmp
xchg
jb
dec
not
dec
and
push
xchg
cmp
ret
mov
in
add
iret
dec
inc
push
pushf
(bad)
push
jb
shl
pop
sub
jl
je
lea
adc
mov
pop
js
enter
mov
sub
xor
xor
jns
or
mov
add
sub
(bad)
dec
(bad)
jne
cmc
or
cmp
nop
sub
call
xor
jg
mov
mov
sbb
adc
xor
mov
jmp
inc
test
add
pop
(bad)
push
dec
jns
pop
loopne
add
pop
stos
add
pop
add
sti
je
repz
adc
test
cld
and
jge
add
pop
cmp
lea
cmp
mov
xchg
mov
dec
mov
xchg
push
dec
push
in
push
test
in
fs
adc
mov
adc
mov
in
add
inc
pop
enter
add
add
cld
in
mov
inc
inc
or
and
stos
add
add
call
jbe
mov
and
popa
xor
in
mov
loop
pop
enter
adc
or
cmp
movs
lahf
(bad)
adc
jmp
das
push
or
jg
leave
push
push
stos
es
ffreep
jmp
dec
rcr
ja
push
aam
adc
push
cmp
xor
(bad)
jmp
push
mov
test
mov
mov
or
mov
add
sub
(bad)
in
adc
add
into
xchg
push
xchg
push
call
dec
rcl
and
pop
sbb
pop
leave
push
test
adc
clc
pushf
cmp
push
aaa
or
mov
and
dec
gs
lea
es
inc
lea
int
mov
pop
sbb
rcl
adc
push
sbb
sbb
pop
imul
hlt
cmp
sahf
mov
lea
cmp
adc
cmps
imul
xor
xor
mov
cmc
pop
mov
sbb
dec
adc
jl
cmc
xchg
mov
mov
or
cld
aam
xchg
cwde
xchg
push
push
les
inc
cmp
daa
dec
shr
jo
loope
cs
xor
xor
xchg
mov
xor
adc
mov
fwait
xchg
and
aad
mov
mov
sbb
mov
pop
cmps
cs
adc
fs
or
push
sub
loopne
pop
stc
loope
xlat
jmp
iret
xchg
enter
leave
ficomp
and
push
or
stos
in
and
sbb
stos
in
add
ss
popf
inc
maxps
sub
dec
cs
test
inc
adc
adc
adc
out
pop
ss
dec
mov
or
sub
xor
push
aas
fsub
add
pop
fidiv
mov
sub
(bad)
iret
data16
cs
mov
mov
(bad)
fidivr
repz
push
jle
add
jnp
inc
aad
push
jno
add
ss
push
add
je
inc
pop
stos
push
aas
loop
mov
mov
jle
mov
or
or
cmps
inc
add
mov
jmp
sbb
xor
(bad)
mov
scas
mov
and
mov
(bad)
mov
and
sbb
push
dec
adc
popf
pop
xor
sbb
push
mov
jmp
jne
xor
sub
push
pop
(bad)
pop
aas
sbb
inc
jecxz
push
xchg
mov
nop
adc
lods
add
pop
cmp
sub
in
lods
push
ss
add
sbb
or
jae
jl
add
pusha
add
sub
std
cmp
loopne
push
push
pcmpeqw
xchg
sbb
xor
add
jb
enter
in
push
push
inc
push
mov
add
dec
add
ins
xchg
jo
xchg
add
sbb
sub
mov
clc
lea
and
fsubr
enter
cmp
bound
int3
or
cdq
aam
pop
in
je
ror
daa
(bad)
adc
pop
fcmovnbe
sbb
push
push
and
nop
adc
or
inc
or
pop
push
sub
sbb
xchg
les
adc
add
add
iret
sbb
stos
mov
add
xor
pushf
in
add
inc
loopne
fwait
shl
outs
gs
sbb
mov
pop
push
adc
sub
test
adc
cwde
jae
jo
mov
jle
stos
mov
adc
jne
retf
or
pop
mov
in
and
jle
retf
add
daa
inc
or
or
(bad)
cmp
mov
mov
push
jp
sbb
and
push
add
test
jo
push
pop
addr16
hlt
loopne
or
ss
les
shl
mov
and
jae
push
xchg
and
sbb
or
sub
rcl
cli
mov
sub
adc
mov
dec
fst
loop
mov
shl
shl
xor
add
and
xchg
jb
adc
cdq
cli
add
sar
sub
push
mov
and
mov
push
cmp
gs
paddsw
pop
or
or
add
mov
sahf
sub
ret
sbb
mov
inc
mov
jb
adc
int
xor
sbb
cdq
push
and
pop
inc
push
mov
dec
hlt
xchg
push
retf
push
sub
movs
mov
mov
sub
loopne
xchg
mov
shl
(bad)
cmp
sub
or
xchg
clc
xor
xor
mov
sti
push
rol
pop
ins
mov
adc
mov
add
popa
mov
dec
dec
or
leave
add
fsqrt
add
nop
cli
dec
adc
mov
pushf
and
xchg
push
sahf
popa
push
sbb
retf
xchg
rcl
push
lahf
pop
(bad)
aas
je
fwait
cmp
jbe
imul
add
push
test
pop
stos
pop
repz
scas
cmp
daa
mov
dec
lahf
jg
dec
push
dec
shr
pop
jg
push
daa
ja
jnp
push
pop
sbb
push
aam
add
movs
cmc
dec
sub
je
push
push
aas
ss
loopne
add
cdq
adc
rep
add
push
push
or
cmp
fild
sbb
and
xor
jne
adc
or
ins
sub
mov
mov
cmp
cli
xchg
and
sbb
and
mov
fwait
inc
add
add
adc
push
out
adc
pop
mov
jg
adc
and
fstp
xor
pmuludq
push
mov
out
add
test
cmp
mov
adc
rcl
sub
je
sbb
or
cmps
add
sub
inc
iret
stos
inc
push
pop
sbb
leave
push
add
pop
add
sub
inc
bound
or
test
ret
lahf
xor
fadd
fwait
sub
pop
xor
add
add
add
jle
inc
or
or
daa
shr
xchg
mov
pop
adc
push
add
xchg
arpl
push
jns
sbb
mov
xor
push
shr
repz
push
and
pop
jmp
xor
sub
pop
or
sub
sub
div
cmp
xor
pop
stos
rcl
adc
jo
and
xchg
clc
add
inc
add
add
push
push
mov
dec
pop
add
in
cmp
je
ins
inc
xor
rcl
aam
add
fisub
loopne
enter
dec
inc
push
xchg
rcl
push
push
push
arpl
rol
pop
aam
sub
inc
aam
(bad)
push
test
mov
out
adc
(bad)
sub
sub
pop
jg
push
in
or
in
and
and
and
inc
cs
and
and
scas
sbb
mov
and
and
cmp
test
mov
cdq
dec
ds
inc
jg
xchg
fwait
dec
and
and
xchg
and
and
and
mov
or
sub
test
popf
jmp
retf
adc
and
and
and
cmps
mov
neg
or
add
repz
xchg
shl
cmp
adc
mov
xor
pop
dec
xor
or
fidiv
xor
loope
or
les
push
leave
fdiv
push
xchg
movs
lahf
and
xchg
pop
and
add
adc
or
pop
aas
inc
loope
cmp
pop
push
or
pop
adc
out
gs
inc
xchg
mov
imul
mov
adc
push
sub
push
mov
push
call
iret
add
add
lahf
(bad)
es
jg
cmps
or
loop
inc
xor
rcl
pop
sub
rol
das
jg
sub
cmp
or
push
xchg
push
stc
imul
push
fcom
mov
mov
sub
mov
push
dec
rcr
inc
in
mov
mov
mov
das
and
int3
sub
punpcklwd
inc
inc
(bad)
mov
and
push
xchg
test
lods
pop
push
sbb
aad
inc
shl
pop
sub
mov
cmc
es
sub
inc
rol
sub
and
inc
rol
dec
in
push
adc
stos
mov
(bad)
xor
leave
push
xchg
add
cld
mov
sbb
dec
push
adc
push
loopne
mov
sbb
shl
sub
or
add
sbb
dec
push
jle
and
jae
adc
mov
inc
adc
ret
push
jmp
mov
adc
inc
arpl
inc
and
imul
fsubr
fsubp
test
push
add
add
cmp
mov
sbb
adc
dec
dec
inc
jle
adc
inc
aad
cmp
pop
fstp
fs
cmps
call
jae
push
adc
dec
ins
fcmovu
add
sbb
and
movs
fnstcw
push
retf
ret
loope
outs
sub
dec
dec
dec
hlt
pop
(bad)
mov
push
mov
and
nop
rol
(bad)
sti
fiadd
sub
jnp
pop
lock
jns
jns
adc
dec
cli
cmps
imul
mov
push
hlt
pop
lods
add
and
dec
push
ror
les
mov
dec
adc
jecxz
je
pop
movs
pop
mov
jmp
pop
add
retf
or
(bad)
adc
mov
test
inc
sub
call
or
and
adc
cmp
repnz
sub
lods
sbb
fld
sub
and
push
dec
or
sbb
pop
push
(bad)
sbb
out
push
jne
into
push
inc
push
sub
xor
fcomp
and
or
fsubrp
fld
dec
out
and
iret
pop
pop
pop
adc
inc
imul
mov
push
dec
movs
push
add
scas
dec
pop
jg
mov
sbb
rcl
enter
add
mov
leave
add
jg
mov
add
or
inc
inc
fnsave
dec
add
pusha
aas
nop
mov
inc
pop
sub
sbb
inc
or
mov
popa
jg
adc
adc
sbb
fcomi
into
or
cld
sbb
rcl
je
sti
and
repz
push
test
xor
add
clc
pop
push
inc
sbb
add
jl
pop
inc
dec
call
xor
and
inc
add
and
mov
and
add
enter
inc
ret
dec
bound
lds
(bad)
jl
sbb
mov
dec
cmp
fisub
add
dec
shl
xor
mov
jp
call
fld
xor
lock
adc
adc
mov
scas
mov
shl
dec
push
inc
mov
mov
cmp
add
push
add
inc
aad
sub
iret
mov
aaa
addr16
js
adc
ret
test
enter
fild
mov
jmp
inc
push
xchg
xchg
out
cwde
xchg
jg
les
lds
movs
shl
into
jne
outs
push
ds
(bad)
pop
xchg
sahf
pop
add
jp
jb
fbld
sbb
ror
xchg
ins
jecxz
cmp
adc
pop
mov
imul
and
fidiv
sub
aad
sahf
sahf
nop
or
clc
pusha
cdq
pop
dec
test
sti
mov
nop
jbe
sahf
push
sbb
(bad)
mov
xchg
push
adc
or
cmp
hlt
ret
outs
xchg
and
rol
adc
shr
add
ins
movs
push
or
scas
push
push
stc
mov
dec
adc
ins
lods
in
movs
test
add
mov
lahf
nop
mov
push
push
push
adc
push
fwait
and
icebp
mov
sar
inc
rcl
mov
in
sar
push
call
adc
or
and
xchg
dec
mov
adc
pushf
add
pop
and
pop
inc
add
sbb
inc
enter
mov
stc
jle
jmp
adc
mov
cld
nop
pavgb
jmp
fs
sub
pop
popa
push
mov
sbb
lock
or
cmp
je
pop
push
jp
aad
bnd
test
mov
inc
mov
leave
mov
pop
pushf
jmp
sar
rol
jne
mov
ins
int3
dec
sbb
cmps
mov
pop
jo
mov
add
mov
sbb
retf
ret
push
xchg
xchg
dec
push
add
lea
inc
jne
push
inc
add
mov
push
sub
sub
lds
and
sub
dec
cmp
cli
inc
pop
add
sub
sub
mov
pop
mov
mov
xor
nop
rcl
ds
mov
or
repz
mov
sub
add
in
sub
jecxz
add
pop
mov
pop
jns
fst
enter
sub
and
or
enter
mov
sbb
or
adc
sub
push
push
cmp
cdq
pop
pop
mov
add
dec
arpl
lds
fild
pop
lods
in
pop
and
sub
add
shl
push
lods
mov
aaa
cmp
sub
sahf
or
leave
adc
push
mov
sbb
das
push
push
push
adc
push
jae
pop
or
pop
loopne
adc
ins
and
mov
jnp
repnz
test
aas
jne
or
xchg
push
push
out
out
cdq
adc
lea
adc
dec
or
je
adc
push
mov
mov
push
xor
scas
dec
inc
(bad)
(bad)
sahf
and
inc
inc
dec
and
and
and
or
adc
aad
mov
ret
and
push
sub
jmp
or
add
sbb
inc
mov
inc
repnz
mov
inc
popa
sub
jmp
cmps
push
sbb
enter
shr
adc
arpl
idiv
mov
sub
pop
sub
popf
jmp
retf
int3
or
int3
jmp
sub
sub
jnp
xchg
sub
ins
(bad)
cmc
or
int3
jnp
adc
stos
xchg
sbb
push
or
xor
scas
mov
inc
push
mov
mov
dec
or
shr
push
hlt
pop
ja
shl
fst
es
pop
js
inc
repnz
leave
test
pop
lods
enter
pop
sbb
mov
add
push
push
adc
lods
push
pop
sub
sub
aas
mov
sub
fbstp
push
jo
xor
inc
mov
aas
or
loope
test
daa
nop
and
mov
dec
cmp
adc
add
aas
jnp
aaa
test
out
push
inc
push
or
add
mov
daa
inc
lahf
imul
fs
adc
pop
ret
xchg
mov
xchg
and
add
dec
sub
loop
push
push
jno
or
inc
pop
pushf
jno
js
rol
mov
pop
mov
xchg
jo
mov
dec
in
test
push
sti
fist
jle
loop
cwde
add
push
int
aaa
ins
pusha
push
xchg
das
or
into
sub
ja
cmps
xchg
and
aas
adc
dec
test
repnz
rcl
dec
xchg
nop
repnz
sbb
test
jg
inc
and
leave
cmp
leave
cmp
push
repnz
add
cmp
sbb
jns
and
jb
mov
popa
and
add
mov
lahf
add
push
enter
add
sbb
push
push
les
pop
add
mov
dec
adc
and
cs
jnp
and
add
mov
dec
mov
add
into
mov
sub
xor
push
push
adc
jbe
in
add
out
daa
ja
mov
mov
mov
(bad)
es
or
pop
inc
jo
sbb
push
repz
pop
inc
push
mov
mov
stos
sar
cmp
cmp
adc
and
xor
cmp
dec
cdq
cmp
ret
es
jns
dec
mov
push
inc
or
xlat
xchg
push
push
inc
mov
xor
add
ffree
test
gs
inc
push
int
add
add
nop
test
leave
lahf
inc
jle
sub
dec
and
cmp
cmp
mov
daa
jo
stc
js
rcl
leave
dec
jle
sar
or
js
lea
ds
loopne
inc
sub
xlat
jnp
inc
xor
push
cli
mov
add
mov
(bad)
xor
iret
mov
inc
push
(bad)
cmp
movs
in
xor
mov
add
lahf
pop
or
rol
test
in
enter
sub
push
scas
test
push
sub
enter
sub
sub
add
or
jb
retf
mov
sub
or
and
scas
sub
and
fidivr
sub
and
imul
and
inc
ret
push
and
xor
stos
and
xchg
add
and
ins
shl
rol
add
arpl
or
lods
xor
pusha
jge
cld
push
push
jmp
test
or
mov
cmp
lods
arpl
mov
ins
xor
ja
add
sbb
or
pop
mov
loop
or
retf
fwait
cmp
fisub
jb
inc
leave
adc
jnp
retfw
fist
sbb
test
add
sbb
push
in
and
sbb
sbb
pop
and
xchg
pop
sbb
push
sbb
cdq
and
and
mov
into
movups
xchg
inc
into
movlps
and
add
add
mov
and
and
inc
xchg
nop
sbb
imul
xchg
xchg
add
and
and
and
inc
and
and
or
or
dec
cdq
jp
and
xor
xchg
xor
sub
(bad)
or
mov
daa
adc
aaa
dec
mov
jbe
add
pop
cvtps2pd
je
push
ins
or
ficomp
cmp
sbb
rcr
rol
sub
repnz
xor
clc
sub
and
cmp
mov
dec
fist
dec
mov
add
and
add
pusha
test
push
neg
push
adc
fs
add
bound
adc
test
mov
xor
mov
iret
pushf
jl
mov
je
mov
fs
cdq
addr16
inc
dec
ins
daa
jecxz
das
push
cmp
inc
test
and
push
xchg
xchg
mov
lock
or
xor
movs
sbb
(bad)
sub
xchg
dec
or
test
test
aas
inc
call
in
sub
ins
in
jge
sbb
mov
iret
mov
mov
inc
inc
sbb
pop
push
sbb
push
sbb
dec
enter
(bad)
adc
adc
fdivr
ins
dec
push
pop
movs
push
aas
mov
adc
pusha
ins
push
dec
xchg
call
pop
or
mov
shl
sub
(bad)
mov
adc
mov
xor
lods
pushf
int3
pusha
adc
pop
mov
cwde
enter
sar
mov
in
mov
xor
mov
imul
mov
jnp
sbb
xor
mov
mov
fild
dec
push
dec
mov
mov
(bad)
adc
in
data16
sub
enter
add
test
add
shl
xor
add
out
push
add
nop
jle
pop
mov
imul
clc
or
es
mov
sub
sbb
mov
adc
sar
inc
in
jg
push
cmp
mov
in
cwde
lahf
loop
or
dec
test
and
add
jle
mov
enter
call
dec
jnp
dec
inc
aaa
aas
sub
stos
ret
or
pop
add
sbb
xchg
shl
push
iret
xor
movs
lock
adc
adc
mov
les
mov
and
mov
or
punpcklbw
gs
mov
pop
dec
adc
in
or
stos
loop
stc
mov
stos
cmp
push
add
enter
fcmovnb
jbe
dec
dec
sbb
dec
dec
cmp
imul
or
mov
and
and
push
inc
imul
xchg
loop
test
jmp
cmp
test
mov
sbb
push
scas
jl
popa
sub
mov
or
adc
inc
push
dec
cld
nop
retf
in
adc
out
mov
dec
pop
movs
and
mov
stos
or
dec
push
or
stos
or
inc
push
mov
or
jo
dec
or
push
sbb
cld
cmps
test
test
vdivsd
pop
or
push
popa
sub
or
mov
or
jb
in
dec
inc
jne
push
mov
xor
inc
or
pop
push
cmp
xchg
push
inc
xor
mov
mov
inc
xor
and
mov
inc
or
lock
add
add
das
and
in
cmp
(bad)
cmp
sbb
aam
or
lahf
outs
and
mov
cmp
inc
inc
ins
or
add
jo
aas
ins
fcomp
or
mov
adc
adc
jle
je
stos
xor
lahf
or
inc
adc
sub
ret
ss
dec
out
jmp
or
or
ret
push
fwait
adc
jo
je
push
or
mov
bound
loop
test
jno
mov
push
lock
cmps
adc
push
loopne
xor
dec
call
inc
xchg
or
lahf
or
daa
or
and
xchg
push
xchg
pop
ja
dec
fcomp
nop
mov
add
and
test
repnz
pop
test
test
repz
lods
lods
adc
ds
test
aad
enter
pop
ins
scas
inc
adc
add
test
je
push
je
js
js
jl
add
xor
and
fild
inc
outs
add
fcomp
inc
push
inc
sbb
ins
ret
inc
mov
nop
call
sub
xchg
ret
jmp
and
mov
or
mov
pop
sbb
adc
mov
cdq
idiv
adc
dec
push
add
sub
jmp
xor
sub
ret
jo
jmp
push
jmp
adc
sub
sub
(bad)
mov
mov
jp
clc
sub
sbb
ret
fs
jo
sbb
loope
xor
push
retf
sub
es
aas
add
jmp
pop
(bad)
cmp
dec
imul
jne
pop
adc
clc
and
push
ins
add
push
mov
leave
mov
adc
int3
mov
fst
and
add
and
test
add
push
pop
inc
and
add
adc
or
jne
div
mov
mov
inc
sub
fnstsw
aaa
dec
(bad)
fdivr
push
cmps
test
dec
push
push
xchg
and
pop
stos
ror
add
hlt
jle
shl
dec
adc
or
test
or
(bad)
sub
(bad)
lods
jge
rol
mov
mov
push
mov
hlt
jg
ret
add
fbstp
pop
jp
js
push
push
and
enterw
loop
xchg
lea
dec
sbb
push
push
js
pop
push
ja
call
mov
xor
xchg
jns
retf
inc
fisttp
aad
xchg
mov
dec
in
inc
pusha
mov
cmp
jl
push
test
daa
cmp
sbb
sub
adc
mov
and
(bad)
push
rcr
aam
inc
cmp
cmp
in
pop
lds
and
pop
mov
adc
dec
jmp
ss
cmp
sbb
cmp
jle
inc
ret
xor
push
aam
add
push
push
dec
ror
inc
adc
movs
cmps
(bad)
inc
mov
add
loop
lock
sub
push
fwait
(bad)
push
rol
pop
jg
adc
xor
inc
or
xchg
mov
xor
fsubr
js
xor
and
sahf
clc
push
jo
dec
sub
push
sti
cmp
dec
sbb
cmp
mov
push
add
leave
call
sti
bnd
add
adc
retf
jae
push
push
mov
and
or
imul
pop
jnp
push
in
(bad)
pop
(bad)
fs
iret
pop
retf
dec
mov
sbb
push
stos
dec
retf
cmp
inc
lods
data16
mov
std
nop
xor
imul
jb
or
add
sbb
mov
mov
movs
dec
(bad)
je
push
sub
hlt
add
sub
movs
test
xchg
jmp
ret
es
or
jae
xchg
pop
cmps
sub
scas
test
stos
dec
push
inc
lea
sub
pop
and
aad
(bad)
inc
xchg
add
dec
inc
test
or
loopne
and
inc
cmps
into
or
xor
lock
inc
call
inc
cmp
in
test
mov
xor
sbb
mov
fisttp
jns
sub
add
bound
cmp
imul
stos
imul
push
jmp
or
ins
cwde
or
pusha
dec
adc
mov
add
ret
and
pop
ss
add
or
xor
loopne
mov
pop
push
les
dec
fld
sbb
aas
or
push
je
xor
sbb
sub
or
or
ret
add
mov
add
xchg
ins
push
call
push
icebp
sbb
popa
jnp
mov
cmp
adc
push
stos
inc
enter
fcmovnb
and
mov
aaa
jne
js
dec
fbstp
sub
jecxz
test
pusha
pop
je
xchg
add
into
jmp
aas
jg
inc
mov
add
add
fisub
mov
ss
dec
(bad)
pop
push
cmp
idiv
ficom
push
cmps
cld
adc
jmp
or
fidiv
inc
xchg
lock
dec
adc
dec
pop
mov
jge
mov
dec
adc
sub
and
push
adc
add
jb
jo
mov
ret
mov
inc
sub
repnz
fucomp
jnp
mov
push
jae
cmp
mov
push
movs
mov
bound
(bad)
add
fcom
pop
lock
inc
xor
outs
adc
mov
inc
or
rcr
mov
imul
or
mov
cmp
xor
xchg
test
dec
push
push
sbb
add
mul
popa
or
mov
jns
ror
out
leave
ins
ret
ficomp
aas
rol
dec
cmp
(bad)
mov
scas
mov
mov
ins
ja
sub
mov
adc
dec
sar
push
pop
mov
inc
or
aam
cwde
or
and
adc
cmp
dec
les
aaa
inc
enter
jle
sub
test
xor
fld
call
jno
push
and
sbb
pop
fmulp
in
or
xor
jmp
clc
js
and
fisub
sbb
fmul
dec
and
xchg
in
xor
adc
sub
jno
pop
pminub
aam
pop
adc
scas
inc
add
pop
and
push
icebp
jno
test
and
push
hlt
xchg
shl
fadd
rol
retf
jmp
in
mov
push
dec
xor
xchg
sub
adc
lock
ss
or
push
adc
adc
jmp
fmul
xchg
loopne
and
push
es
dec
lahf
not
call
inc
pop
adc
and
and
pop
pop
jp
jp
and
adc
enter
sbb
dec
cmp
push
and
cmp
mov
jg
push
(bad)
or
xor
fldcw
push
add
xchg
mov
or
add
inc
es
(bad)
fcomp
or
cmp
xchg
dec
aas
lock
xchg
dec
sub
jle
pop
cmps
inc
add
in
sbb
cmp
add
xchg
lahf
cmp
mov
cmp
xlat
fs
sbb
and
mov
test
rcr
cmp
aad
fisub
les
and
ret
pushf
xchg
popf
or
loopne
out
shl
push
daa
je
(bad)
fwait
les
add
(bad)
sbb
xchg
call
xchg
add
cdq
inc
xchg
fs
xchg
sbb
lock
push
es
shl
adc
ret
mov
pop
add
and
cmp
jae
or
xor
dec
adc
add
and
push
mov
lods
adc
pop
daa
and
cli
lea
call
test
push
adc
rcl
sbb
pushf
mov
mov
retf
test
or
loop
cmps
enter
add
lock
mov
pop
idiv
fiadd
rol
loopne
pop
pop
mov
add
inc
push
aam
sub
aaa
and
mov
cmp
mov
sti
add
nop
or
inc
push
and
loope
les
push
pusha
dec
push
add
xor
lea
in
adc
pop
or
push
pop
pusha
clc
dec
loopne
in
mov
addr16
xor
or
and
mov
adc
cwde
adc
and
dec
sub
xlat
jmp
inc
xor
(bad)
and
aas
fist
or
sbb
test
xor
sbb
mov
sub
cmp
dec
stos
daa
gs
adc
dec
jmp
dec
and
mov
sbb
adc
cmp
leave
sbb
fcomp
shl
xchg
adc
iret
add
pop
fdiv
mov
jo
loopne
dec
adc
imul
or
push
inc
or
cmc
mov
ss
pop
test
cmp
jae
xchg
sub
mov
repnz
aam
xchg
mov
test
loop
stc
cmc
sahf
sbb
arpl
ss
fbstp
cmps
or
inc
aas
add
imul
ins
jo
cdq
adc
ja
mov
xor
push
loope
cmp
sub
sub
add
cld
rcl
es
push
(bad)
jg
pop
adc
dec
sbb
cmps
ret
push
inc
push
jns
cwde
lds
in
popa
add
cmp
add
shr
cmps
ds
loopne
jno
pop
scas
xchg
mov
outs
push
ins
fwait
jg
sbb
push
mov
inc
shl
fsub
ret
dec
push
or
push
pop
stos
jmp
js
and
shr
or
and
xor
test
sbb
aaa
stos
mov
xor
xchg
cmp
push
add
xor
xor
adc
xor
xor
xor
cmp
dec
ja
iret
cmp
xor
popa
push
js
push
movhlps
add
sbb
sar
and
mov
jo
push
adc
sub
loopne
call
push
adc
addr16
sub
ja
xor
add
fs
jg
sbb
pusha
jmp
or
fdiv
rol
or
pop
add
pop
or
or
pop
cli
stc
lea
push
sub
movs
imul
add
jae
repnz
ret
lock
push
lea
push
xor
xor
pushf
cmp
jle
pop
cdq
xor
fidivr
sub
inc
add
push
fwait
cld
jne
inc
repnz
add
mov
xor
cmp
xchg
push
(bad)
jmp
add
lock
mov
fiadd
sub
fdivp
add
xlat
in
popf
add
retf
loopne
adc
mov
fstp
push
call
lock
jecxz
cmp
push
lea
push
add
sbb
mov
add
xor
add
es
pop
div
add
pop
movs
fs
inc
je
pusha
sub
pop
cli
cld
cmp
cld
add
cmp
add
push
add
sbb
outs
stos
and
and
sbb
and
mov
(bad)
in
mov
mov
jl
mov
adc
or
sti
dec
loopne
mov
dec
jp
repnz
cmps
mov
dec
push
cmp
inc
gs
les
les
enter
or
push
test
or
test
out
adc
xchg
add
nop
add
xchg
mov
sahf
add
ins
push
loopne
pop
mov
push
(bad)
retf
and
jl
add
in
push
rol
mov
test
cmps
mov
and
in
cmp
sar
push
(bad)
xchg
fist
push
cmp
xor
adc
xchg
dec
dec
push
cmp
or
sti
xchg
arpl
jo
repnz
inc
and
fsubr
sub
in
mov
add
pop
xor
dec
sbb
xchg
sub
or
outs
call
popa
(bad)
in
and
adc
add
add
es
mov
and
inc
jnp
or
push
dec
and
or
xchg
adc
popa
or
jne
(bad)
scas
fisttp
push
popa
adc
mov
xor
outs
and
mov
fsubr
mov
pop
adc
or
add
mov
xor
jnp
inc
leave
adc
pop
inc
adc
jl
xor
push
rcl
pop
xchg
dec
push
xchg
adc
daa
add
jle
mov
imul
push
mov
jge
movs
inc
add
dec
push
scas
cmp
loopne
jle
xchg
out
sahf
and
push
add
jne
cmp
jne
add
mov
sub
sbb
cli
js
mov
sbb
inc
daa
mov
ins
or
or
mov
js
push
jp
mov
or
xor
xor
mov
xor
xlat
adc
mov
or
je
add
jns
sbb
push
mov
mov
cli
xchg
lods
sbb
call
pop
cli
leave
in
xchg
cmp
rcl
add
lods
inc
sahf
out
lea
add
adc
add
cdq
out
pop
xor
pop
xor
mov
or
dec
mov
xor
pop
adc
xchg
addr16
jno
pop
into
push
sbb
je
adc
in
stos
add
dec
mov
add
outs
add
mov
cmp
cmp
je
jge
pushf
mov
bound
inc
and
push
lods
daa
jge
in
test
nop
imul
jmp
cmp
test
jecxz
(bad)
mov
jl
mov
ins
cwde
jg
not
jmp
pop
repnz
add
xchg
add
jge
add
sbb
inc
or
dec
add
shl
lock
hlt
retf
in
dec
(bad)
mov
and
push
rcl
or
push
add
lock
in
or
push
pop
mov
push
jns
out
outs
ins
movs
inc
xchg
dec
mov
test
add
adc
jns
mov
xor
adc
mov
fnstenv
adc
mov
ss
or
or
adc
imul
inc
dec
outs
mov
ror
pop
lahf
das
jecxz
adc
xchg
mov
ds
ficom
or
or
mov
and
jne
pop
psraw
mov
inc
or
sbb
add
add
jb
cmp
stos
pop
je
punpcklbw
adc
jl
clc
sbb
adc
inc
mov
jl
pop
add
add
es
dec
mov
mov
int3
jmp
adc
orps
leave
add
pop
push
add
or
inc
pop
mov
fild
mov
cmps
pusha
repnz
cmps
push
adc
push
loopne
adc
lock
ins
sbb
clc
into
cmp
mov
or
in
test
push
jns
cmp
adc
adc
push
pop
jnp
aam
stos
mov
adc
ret
stos
mov
adc
lods
mov
popa
pop
mov
sti
mov
xchg
push
xchg
mov
or
addr16
sbb
mov
mov
inc
cmp
jle
sbb
mov
jo
arpl
add
retf
cmp
dec
fwait
and
rcpps
adc
clc
popa
fadd
sbb
mov
push
add
lods
je
mov
mov
adc
sbb
sub
mov
pop
push
push
sub
push
add
and
imul
in
repnz
mov
test
call
jge
mov
dec
sbb
inc
xor
cmp
lea
sub
mul
ror
(bad)
dec
inc
pop
adc
test
ret
and
mov
nop
int3
sub
aam
add
sub
gs
adc
imul
dec
jmp
or
sub
mov
loopne
pop
or
cmp
push
idiv
cmc
or
mov
push
lea
jno
push
cli
enter
mov
push
not
cmp
movs
or
and
or
mov
popf
(bad)
mov
cmp
push
dec
or
aaa
sub
xor
xor
xor
pop
cmp
mov
push
xor
mov
or
sub
xor
jne
cmp
mov
inc
pushf
(bad)
jecxz
cs
xlat
cwde
mov
push
mov
add
cdq
loope
out
daa
mov
mov
jge
or
fnstenv
repnz
cmp
mov
dec
mov
or
pop
mov
mov
pop
int3
or
and
lods
or
sbb
aam
sbb
push
mov
dec
movs
mov
or
cs
jecxz
and
hlt
inc
mov
xchg
cld
pop
sub
or
xor
outs
and
pop
mov
xlat
jge
pop
cwde
mov
mov
(bad)
push
xchg
rcl
push
dec
cmp
sbb
movs
loopne
inc
int3
cmp
aaa
adc
adc
mov
mov
mov
push
hlt
std
mov
test
rcr
push
into
mov
add
xchg
push
jb
jbe
gs
adc
add
jnp
mov
fbstp
(bad)
add
sbb
shl
in
add
pop
in
rol
ror
xor
cmp
jge
add
mov
xor
xchg
inc
sub
or
cwde
mov
sbb
and
pop
ret
pop
mov
movs
nop
mov
cmove
je
xchg
test
or
bound
ret
sbb
inc
mov
pop
nop
sub
gs
jnp
std
xor
push
mov
cmp
sbb
les
or
jns
and
push
jbe
or
adc
or
les
test
push
push
arpl
push
push
xor
pop
push
pop
ret
inc
ret
test
inc
or
ss
xchg
push
hlt
jle
sbb
ds
jne
inc
imul
mov
or
sub
sub
pusha
push
or
cmp
add
adc
lahf
or
sub
out
and
aas
add
push
(bad)
jo
and
fucom
inc
push
test
dec
mov
add
cmp
fdiv
push
clc
or
push
or
inc
and
jmp
loope
cwde
punpcklwd
add
or
shl
and
mov
mov
movs
adc
dec
and
jp
lahf
pop
inc
call
adc
mov
hlt
xor
dec
adc
push
inc
xchg
loope
in
sti
ins
pop
retf
fcomp
push
loope
or
into
gs
movs
jg
neg
or
sbb
mov
and
sbb
jge
mov
outs
xchg
jne
out
pop
jnp
pop
add
fcmovnu
jge
push
adc
add
retf
mov
push
mov
jne
call
pop
or
mov
into
pusha
cmp
in
push
icebp
adc
add
inc
inc
pop
jge
xchg
mov
cmp
popf
rcr
stos
xchg
retf
xor
adc
popa
xor
push
xchg
cmp
sbb
int
test
xor
mov
out
(bad)
clc
jg
xchg
pop
mov
push
sbb
push
ret
inc
adc
rcl
fistp
movs
dec
pop
push
push
push
add
idiv
ja
jle
pop
pop
sbb
mov
push
fdivr
add
inc
cmp
jl
dec
add
aas
(bad)
xor
fs
xor
xchg
jb
sbb
xor
push
inc
xor
pusha
push
mov
aas
push
test
jne
in
rcr
je
push
les
dec
xchg
pop
or
into
es
ret
fisubr
sbb
xchg
into
add
repz
push
pop
inc
and
iret
bound
in
push
call
mov
iret
pop
inc
mov
add
cmp
mov
adc
sbb
inc
lea
movs
ror
pop
add
sub
xchg
mov
ss
mov
mov
sar
or
leave
(bad)
test
dec
lock
cwde
add
sub
add
push
lock
int3
pop
jge
test
lods
fs
pop
jbe
push
adc
nop
outs
push
adc
cmps
imul
dec
push
push
xchg
or
(bad)
or
mov
add
cwde
sub
adc
(bad)
xchg
xor
xor
sbb
jne
sub
and
pop
push
inc
xchg
inc
cmps
inc
test
sub
mov
ficom
aad
cmps
sub
call
lods
xchg
and
jo
inc
sahf
xchg
ficom
test
xor
cmp
test
jbe
std
dec
mov
xchg
bsf
(bad)
aam
jmp
add
mov
mov
push
data16
jne
cmp
popf
fstp
pop
ins
enter
sub
sar
jne
mov
or
fdivr
mov
es
add
clc
mov
sub
fidiv
dec
call
ficom
add
sub
enter
and
push
jne
fimul
out
(bad)
push
add
xchg
and
cld
xor
pushf
push
mov
cmc
adc
std
shr
test
push
mov
push
add
repnz
mov
inc
pop
xor
pop
jg
or
and
xor
add
cmp
in
push
mov
push
inc
lahf
mov
jae
test
cmp
push
jp
adc
jne
xor
pushf
cmc
(bad)
adc
outs
(bad)
pop
pop
(bad)
fcompp
stc
jmp
sub
add
sbb
rol
test
push
data16
sbb
sub
or
mov
ds
xor
(bad)
sub
jb
jge
xor
aas
push
stc
pop
jb
pop
push
dec
cmp
jo
push
adc
inc
push
and
inc
adc
les
or
loopne
xor
adc
icebp
or
ds
cld
ja
pop
jmp
pusha
outs
sub
push
sub
push
push
jge
sbb
or
cmp
rol
ss
(bad)
cmp
or
push
aam
or
mov
add
adc
adc
cdq
push
mov
and
xor
and
mov
icebp
xchg
in
jecxz
xor
xor
hlt
push
adc
push
cld
jmp
lock
sub
or
aam
std
push
in
and
jno
dec
add
or
popa
std
jo
call
mov
sbb
mov
jno
or
jecxz
adc
les
push
add
mov
mov
hlt
imul
les
add
sbb
cmp
pop
or
jno
xchg
adc
in
mov
sbb
mov
mov
ficomp
cmp
add
ins
ss
xor
and
jmp
mov
out
xchg
push
add
fistp
mov
loopne
repz
in
or
pop
sub
fsubr
adc
xchg
push
es
sbb
mov
cld
scas
mov
jnp
shr
pop
mov
jg
or
movs
mov
inc
loopne
movs
stos
xchg
jns
clc
adc
daa
fsubr
fdiv
ret
out
inc
inc
xchg
xor
sar
add
fwait
mov
imul
cmp
ja
inc
nop
mov
push
sub
mov
mov
clc
push
mov
and
stos
sar
fwait
jmp
mov
xchg
mov
addr16
push
pop
push
bnd
out
inc
mov
popa
cmp
jle
jle
jne
(bad)
push
hlt
add
adc
popf
or
jmp
jbe
pushw
pop
sub
jmp
sub
jmp
sub
(bad)
jnp
mov
and
add
stos
or
sbb
mov
mov
mov
or
push
push
push
ins
js
xchg
xor
push
cmp
xor
in
push
pop
or
lea
pop
sub
lods
daa
fmul
or
pop
mov
or
cld
test
add
adc
movs
push
loopne
push
scas
dec
cvttps2pi
stc
lods
dec
clc
enter
shr
icebp
mov
pop
xor
xor
dec
xor
sbb
cwde
pop
pop
jb
test
jge
iret
adc
sbb
sbb
fadd
cdq
sub
cmp
inc
lods
cmps
loopne
add
test
or
je
adc
jle
push
and
xor
adc
mov
push
movs
xor
rcr
leave
rcr
push
shl
xchg
mov
ror
sahf
pop
mov
add
shl
nop
loop
or
xor
cmc
jmp
out
pop
pop
jmp
mov
mov
sbb
cdq
ror
call
out
inc
jle
sbb
push
sub
xor
add
mov
add
ror
push
and
sbb
sbb
mov
iret
repz
enter
fs
inc
test
and
push
test
aas
cmp
cs
and
enter
inc
sbb
lods
add
sar
jg
mov
adc
es
pop
adc
outs
xchg
jl
mov
add
adc
xchg
add
ret
neg
or
scas
push
push
pop
arpl
pop
fcomp
or
jmp
dec
dec
adc
ss
and
or
or
mov
aam
(bad)
jmp
xchg
outs
xor
ins
cmp
sbb
pusha
xchg
add
icebp
jmp
rcl
xor
or
push
add
rcl
xlat
and
inc
push
dec
loop
pop
mov
xchg
fild
lea
dec
imul
fsubr
mov
adc
inc
daa
je
sar
pop
jmp
mov
adc
pop
jle
pop
test
cld
jmp
icebp
sbb
loop
std
retf
dec
xchg
xor
xchg
icebp
inc
popf
nop
cdq
pop
mov
xor
data16
fild
and
jno
aam
jnp
ficom
push
pop
push
add
(bad)
adc
mov
(bad)
clc
cdq
sub
jle
fadd
and
cmp
out
les
aas
pop
or
cmp
push
jle
les
add
mov
mov
cmp
aas
rol
mov
mov
mov
and
pop
jns
sub
sub
fbstp
lahf
cs
ret
or
or
iret
adc
xchg
adc
or
xchg
leave
sub
pop
push
fidiv
shl
rcl
mov
xor
cmp
push
xor
sbb
dec
inc
add
and
and
scas
adc
fist
js
fistp
or
pop
dec
push
dec
nop
xor
sbb
mov
sbb
pop
push
adc
mov
jae
sbb
pop
sahf
pop
sbb
rol
push
mov
lock
adc
cmps
and
sub
push
imul
adc
lods
popa
fcom
pop
push
and
test
add
inc
mov
jg
xchg
xlat
xor
nop
and
pusha
and
and
mov
ss
inc
dec
rcl
push
ret
mov
js
loop
sbb
jl
ins
mov
adc
int
adc
push
ror
xlat
xchg
and
add
push
inc
icebp
cli
ins
jbe
dec
sbb
or
cs
inc
and
adc
fmul
call
sub
xor
data16
push
es
enter
push
xor
mov
lahf
dec
add
mov
lahf
cmc
pop
or
xor
or
cmp
fsubp
pop
pop
sbb
sub
dec
aaa
add
cmp
or
xchg
je
iret
add
mov
and
cmp
ss
xor
pop
and
dec
call
es
mov
jo
or
add
loope
add
test
mov
daa
fidivr
inc
sub
mov
mov
int3
push
mov
mov
ins
push
in
js
pop
add
cmp
cmp
push
jge
xchg
xor
dec
mov
out
xlat
add
xchg
adc
cmps
jnp
jnp
jo
push
dec
mov
pop
adc
push
outs
mov
jno
nop
ja
test
fild
mov
jne
cmp
adc
pop
sbb
xor
sub
pushf
and
mov
or
push
push
pop
add
xor
push
pop
pop
inc
pop
pop
jl
(bad)
push
and
jbe
leave
xor
add
mov
loope
stos
push
or
mov
ror
sar
pop
imul
dec
add
fadd
pop
pop
mov
fistp
cmp
jne
jmp
add
icebp
jl
add
dec
adc
je
je
imul
lods
lods
add
imul
cmp
scas
mov
adc
in
cmp
adc
xor
jl
push
sbb
jb
dec
dec
inc
push
push
xchg
adc
js
pop
jmp
sub
sub
popa
add
inc
lods
call
rcl
mov
mov
dec
cmp
push
cdq
lds
xchg
nop
add
sub
data16
adc
add
ret
xor
add
ja
arpl
or
movs
sub
adc
mov
inc
stos
inc
jmp
add
call
fadd
repnz
pop
sub
mov
sbb
adc
rcr
mov
sub
jb
mov
sbb
cmp
lods
pop
xor
sbb
sti
int3
jbe
iret
sti
dec
adc
adc
add
xchg
and
dec
add
jne
ins
pop
test
adc
test
fcmovb
sbb
mov
popa
call
cmp
push
es
adc
or
dec
and
pop
pusha
cmp
fidivr
addr16
sbb
or
pop
adc
jmp
xor
and
sbb
inc
push
pop
cmp
adc
push
repnz
and
fild
jmp
das
movs
lods
add
pop
cmps
pop
dec
aaa
lods
ret
cmp
dec
stc
out
xchg
pop
pop
addr16
and
push
out
jp
in
add
dec
push
xchg
sbb
add
enter
div
pop
ja
repz
sub
pop
dec
cdq
and
pop
ret
nop
sbb
push
pop
push
dec
push
fisttp
clc
fist
mov
sub
into
fadd
xor
mov
pop
push
pop
dec
arpl
jnp
mov
std
(bad)
push
dec
inc
popa
test
push
xor
sbb
loope
sbb
sbb
dec
and
out
mov
std
pop
enter
xor
adc
cmp
sbb
lods
and
rcr
xchg
hlt
adc
outs
and
push
inc
clc
add
sahf
lea
lock
(bad)
dec
in
movs
lea
js
push
or
xchg
push
retf
cmp
sub
push
add
pusha
js
dec
dec
test
test
out
pop
mov
push
mov
nop
pop
mov
in
inc
jb
add
pop
movs
pop
inc
sub
shr
mov
cmp
add
xchg
mov
clc
xor
mov
test
shr
sbb
out
outs
or
fidiv
inc
cmp
mov
aaa
sbb
inc
inc
add
or
jmp
into
xor
pop
mov
sub
ret
mov
test
test
pop
sbb
(bad)
xor
inc
icebp
aaa
pop
out
jmp
push
out
push
push
push
sbb
ins
add
sar
and
call
imul
(bad)
push
imul
sbb
sbb
or
add
gs
adc
in
sub
fisubr
mov
mov
push
adc
cmp
mov
icebp
mov
mov
in
xor
sbb
jns
lea
push
lea
and
xor
mov
mov
cwde
cwde
jb
adc
add
sbb
rcr
push
mov
je
(bad)
push
cdq
sub
daa
push
push
imul
push
add
mov
dec
jno
pop
add
test
sub
jg
aad
jmp
push
jp
daa
and
push
aam
add
lock
sub
sbb
mov
div
nop
(bad)
push
cmp
lahf
mov
pop
dec
pop
test
test
lock
sub
mov
inc
mov
pushaw
add
mov
xor
outs
sbb
inc
lahf
cmp
push
sbb
jne
test
cld
adc
and
jo
loope
pop
inc
sar
mov
les
jmp
sub
sbb
inc
add
div
add
ret
sbb
cmp
sete
call
and
sub
add
push
xchg
adc
movs
add
xor
fdiv
pop
or
mov
jns
pop
lea
xchg
adc
fwait
dec
or
int
enter
leave
aas
test
xchg
mov
sbb
and
add
push
and
push
push
push
sbb
movs
lahf
and
jb
call
mov
or
sbb
imul
push
inc
aam
push
sub
push
mov
adc
push
push
mov
and
add
add
and
fld
das
jl
and
mov
and
xor
mov
sub
pop
sub
pop
cwde
test
jle
dec
in
aas
cwde
clc
mov
outs
pusha
xchg
sub
xor
inc
mov
cmp
jmp
mov
jle
cmp
dec
aaa
pop
inc
sar
pusha
jmp
sub
mov
mov
fld
test
push
xor
push
push
stos
test
fdivp
add
jg
je
xor
shl
adc
int
in
fld
leave
cmp
push
call
jle
sbb
mov
mov
or
or
pop
mov
xchg
jne
fs
ss
ror
ret
mov
jmp
call
pushf
adc
mov
cmp
cmp
mov
les
mov
inc
js
cmps
sar
mov
dec
mov
add
add
ret
lods
ds
ins
xchg
add
push
pushf
ret
aas
add
sbb
mov
mov
fld
mov
pop
in
enter
push
sbb
add
mov
cmp
je
xchg
fistp
add
lock
ret
sub
cmp
jl
int3
js
or
inc
dec
mov
test
adc
clc
jne
and
jl
cmp
ror
add
add
or
lea
and
das
dec
xor
mov
push
add
xchg
and
cmp
add
std
ret
bound
mov
fistp
fdivr
jbe
rcr
add
xchg
add
inc
adc
int3
test
nop
adc
xchg
(bad)
lahf
dec
xor
stc
add
stc
mov
sub
inc
inc
add
cmp
daa
adc
call
test
or
or
or
nop
add
xchg
popa
fnstsw
dec
and
out
mov
cmp
ror
lock
je
inc
or
pusha
inc
jmp
xor
nop
lods
add
xor
adc
fwait
push
in
mov
cmp
cmp
jle
push
cmp
outs
repz
pop
cmp
pushw
or
jo
fwait
loope
inc
out
xchg
add
inc
(bad)
pop
xor
loopne
adc
xchg
call
jbe
icebp
bound
add
xor
cmp
inc
adc
xor
das
sub
jmp
les
jb
dec
cmp
dec
jae
iret
and
es
popf
nop
icebp
mov
stc
pusha
cwde
mov
push
cmps
mov
sub
xor
add
sub
pop
and
pusha
inc
mov
push
jmp
js
pop
inc
xchg
clc
and
dec
pop
or
push
sub
push
inc
dec
gs
inc
enter
imul
xor
sbb
lahf
js
int3
mov
je
add
and
xor
imul
lods
mov
inc
adc
lods
add
scas
jne
xchg
stc
or
push
xchg
mov
xor
inc
clc
jns
test
(bad)
neg
push
mov
lea
movs
sbb
pop
adc
dec
mov
and
push
push
(bad)
ss
lea
mov
js
in
(bad)
and
mov
sub
mov
pushf
and
aam
sbb
mov
jl
repnz
stos
sbb
mov
inc
clc
mov
mov
pop
mov
sbb
inc
hlt
mov
cmp
xor
leave
sar
push
in
imul
fisub
movs
std
or
and
and
inc
arpl
and
lock
xchg
stos
test
cmp
inc
sub
jle
pop
add
in
jecxz
lahf
(bad)
sbb
jb
fld
add
ds
push
dec
inc
sbb
inc
repnz
add
push
lock
cmp
fimul
mov
hlt
aad
pop
xor
pop
jmp
bound
sub
shl
fcmovbe
push
fadd
xchg
and
out
push
push
leave
add
adc
pop
aas
lea
sub
adc
jns
(bad)
add
cs
and
pop
mov
or
ret
xor
shr
push
pop
xor
sbb
or
or
popf
mov
fadd
adc
fcom
lahf
sub
sbb
pop
ror
int3
jae
outs
mov
sub
cli
rcl
fst
shr
je
cmps
mov
cmps
xlat
mov
sbb
shr
push
sbb
add
xchg
cld
adc
pop
in
push
and
add
adc
int3
mov
cmp
dec
clc
cmps
lods
jg
sub
ss
jns
mov
add
jno
mov
and
or
sar
pop
popf
cmp
sbb
in
mov
push
les
popf
mov
sbb
ss
lock
(bad)
sar
aaa
dec
ja
add
out
mov
add
add
push
ja
movsx
addr16
or
pushf
inc
mov
add
lock
fs
mov
xchg
xor
outs
adc
mov
je
mov
cmp
cdq
dec
jae
call
mov
mov
xchg
ss
inc
dec
test
fimul
ins
and
jne
cmp
sbb
cmp
push
sbb
dec
(bad)
adc
push
push
inc
inc
ror
cmps
push
inc
push
jecxz
add
jo
movs
outs
pop
xchg
(bad)
cs
push
pop
cmp
loopne
mov
(bad)
add
or
mov
jbe
mov
cmp
cld
add
adc
jecxz
int
adc
lods
fst
xor
call
test
clc
dec
sub
sub
mov
nop
xor
or
mov
sub
add
gs
mov
inc
sub
ror
sti
mov
fnstcw
fwait
sbb
cdq
adc
xor
lea
(bad)
or
pop
cmp
and
scas
repz
sub
cli
pop
movs
adc
or
lock
out
dec
sbb
push
inc
push
cdq
fimul
aaa
dec
and
loop
in
push
jno
add
sbb
lods
mov
test
sub
cmp
test
dec
nop
clc
ins
or
fnstcw
sbb
test
dec
mov
test
inc
mov
stc
retf
shl
ror
add
data16
add
jmp
ret
xor
stos
sbb
sub
push
retf
mov
call
add
push
jbe
jb
jbe
cld
sbb
jl
sbb
sbb
push
jmp
cmp
adc
dec
int3
(bad)
inc
and
push
fistp
add
pop
pop
inc
cmp
cmc
pop
or
xor
call
push
cmp
arpl
cmc
xor
jg
dec
push
push
pop
clc
adc
xor
fcomp
dec
and
test
mov
or
pop
mov
jle
sbb
cdq
enter
lahf
sub
mov
call
and
mov
and
imul
imul
stc
xchg
gs
mov
sbb
dec
xor
add
push
pop
jno
gs
mov
mov
adc
imul
je
scas
dec
mov
ins
(bad)
imul
mov
mov
dec
nop
nop
sbb
pop
cs
retf
int3
rcl
fsub
retf
in
mov
mov
or
pop
jmp
sbb
mov
cli
popf
cwde
les
cmp
push
mov
pop
cmp
adc
adc
int3
and
push
and
cmp
or
lahf
xor
sti
push
sbb
or
sbb
cmp
or
add
(bad)
push
ins
sub
and
inc
call
inc
pushf
push
jae
jg
inc
cmp
cmp
add
cmp
adc
popa
adc
fwait
shr
inc
lock
sub
add
xchg
mov
sbb
push
add
popa
or
rol
movs
addr16
sub
mov
test
dec
fimul
cmp
cmp
dec
imul
xor
xor
mov
ins
xor
mov
(bad)
or
arpl
or
push
jbe
inc
add
in
adc
push
push
adc
lds
call
mov
sbb
scas
mov
pop
sbb
mov
test
adc
cdq
adc
cmp
push
mov
ss
jne
dec
jae
mov
mov
push
dec
mulps
adc
dec
das
dec
and
inc
inc
dec
test
or
and
jb
and
clc
dec
sbb
sub
and
or
xor
and
adc
rol
clc
push
pusha
push
pop
and
jb
inc
retf
xchg
or
mov
ins
push
push
enter
fadd
jmp
pop
sbb
and
add
add
lock
push
loop
addr16
jle
push
(bad)
sub
cmp
push
push
dec
and
shr
shl
or
mov
xor
push
sub
leave
sbb
mov
ss
int
mov
adc
shl
inc
push
xchg
jmp
sbb
fwait
in
sbb
in
push
je
push
je
adc
mov
in
adc
push
dec
jo
add
(bad)
mov
das
dec
js
je
fisttp
dec
sbb
xchg
aas
pop
or
or
dec
scas
retf
mov
dec
add
cli
push
lds
mov
xchg
out
jmp
or
fld
lods
js
sub
ins
pop
add
loopne
mov
or
pop
adc
jnp
or
mov
lods
ror
pop
outs
aaa
aad
xchg
mov
xchg
mov
je
test
sub
inc
add
ret
and
mov
inc
ss
mov
mov
cs
lods
sub
inc
xchg
adc
dec
push
daa
outs
xchg
int3
mov
rol
out
fadd
xchg
mov
(bad)
mov
pusha
cmp
or
lahf
in
mov
or
and
xor
inc
outs
leave
enter
mov
xor
shl
out
lods
sar
pop
xchg
dec
jbe
fs
cmp
push
sar
fimul
js
adc
or
adc
icebp
sub
cmp
mov
aam
push
outs
dec
daa
sbb
jne
jl
xchg
add
outs
fsin
xchg
dec
pop
jb
adc
test
lea
mov
push
push
push
sub
inc
inc
pop
out
js
xor
xor
mov
cmp
std
push
or
mov
sub
inc
jl
out
(bad)
jnp
fs
adc
inc
cmp
xor
adc
ins
or
outs
cmc
dec
and
mov
adc
jne
push
mov
ror
dec
sbb
lea
ja
dec
out
sbb
or
xchg
push
dec
dec
or
xchg
jp
dec
je
dec
jne
sbb
leave
and
or
inc
push
push
(bad)
jmp
xor
sahf
dec
jns
or
adc
adc
xchg
out
dec
inc
sbb
pop
jecxz
and
sbb
pusha
or
push
sub
xor
icebp
sub
popa
adc
push
jl
inc
mov
lods
dec
pop
push
push
push
xor
retf
dec
mov
mov
xchg
pop
xchg
mov
int3
fmul
jno
push
loopne
imul
cwde
pusha
loop
and
adc
mov
(bad)
mov
pop
dec
cli
push
dec
or
sahf
pop
inc
imul
and
cdq
lock
mov
out
cmc
loopne
push
mov
call
sub
mov
inc
mov
fstp
stos
adc
mov
aam
and
data16
sbb
dec
aam
sub
mov
xchg
cmp
add
or
sahf
push
add
cmp
in
test
xchg
jmp
mov
jp
mov
mov
xchg
push
adc
sahf
test
mov
push
pusha
add
mov
test
xchg
call
leave
push
xor
and
dec
add
and
cdq
sbb
je
mov
sub
inc
jae
sbb
xor
(bad)
rcr
(bad)
sahf
sbb
mov
sbb
or
sbb
adc
push
adc
stos
push
imul
dec
push
xor
or
rol
mov
int
dec
adc
nop
scas
out
ja
pusha
push
sbb
jmp
scas
call
sbb
pop
cmc
adc
int3
loopne
js
push
jmp
push
ins
bound
fimul
jne
jmp
sbb
pusha
call
and
jbe
jo
les
hlt
add
pop
gs
xor
sbb
push
push
mov
xor
adc
sub
push
inc
jle
rcr
(bad)
adc
mov
inc
xlat
adc
(bad)
xor
outs
xor
adc
les
rol
sahf
push
or
add
xor
out
xchg
popf
push
or
sub
bound
push
mov
inc
sub
push
and
gs
mov
fadd
push
je
mov
cld
imul
int3
popa
adc
mov
sbb
(bad)
in
mov
xor
and
cmp
inc
stos
adc
cmp
pushf
or
data16
push
sbb
fidiv
loopne
jmp
xor
jbe
jne
cmps
lea
les
gs
sbb
push
sub
or
outs
push
movs
or
inc
add
cmp
shl
add
push
jne
adc
push
mov
ss
icebp
pop
outs
mov
add
sub
sbb
jg
dec
push
add
adc
in
mov
test
add
sbb
and
sbb
pop
mov
sub
arpl
mov
dec
sbb
pop
scas
push
sub
sbb
dec
add
in
add
cs
push
cld
or
xor
inc
xor
xor
push
mov
or
or
test
push
jbe
sbb
ret
ret
pop
int3
mov
mov
ret
sub
push
add
pop
enter
add
add
xor
mov
dec
mov
adc
or
mov
mov
and
cmp
adc
movs
iret
adc
sub
stos
stos
ja
sub
pop
inc
dec
test
mov
loop
inc
mov
dec
pop
call
mov
fiadd
pop
mov
adc
gs
fdiv
mov
push
shr
inc
mov
inc
jl
fwait
inc
mov
(bad)
mov
(bad)
movs
adc
cmp
ret
arpl
loope
cwde
aaa
and
sub
mov
sub
or
dec
push
(bad)
fisttp
push
mov
rol
jne
sti
push
cmp
jecxz
imul
or
fisub
xor
xchg
add
shl
inc
ret
xchg
sbb
gs
xchg
aas
les
mov
and
in
mov
in
loop
fwait
aas
mov
dec
jne
mov
stc
sbb
push
pushf
and
and
adc
leave
test
lock
mov
and
inc
inc
or
retf
pop
inc
imul
adc
adc
xor
push
inc
mov
inc
fmul
xchg
call
pop
rol
add
bound
jns
test
push
mov
bnd
inc
(bad)
jg
pushf
imul
cmps
mov
dec
and
ss
ret
adc
arpl
mov
addr16
xor
fxch
push
fcmovu
outs
mov
dec
sti
popf
inc
xor
lea
add
xor
jge
mov
adc
push
rcl
fldenv
js
push
push
push
aad
lea
push
push
enter
add
sbb
sub
imul
and
mov
push
push
pop
cli
mov
cli
xor
xor
les
enter
test
mov
push
add
inc
stos
loop
jmp
mov
jne
mov
test
sub
sbb
sub
pop
sub
add
push
push
bound
ss
jl
sbb
lea
fs
mov
dec
loopne
and
lds
push
and
push
cmp
lea
popa
dec
and
cwde
mov
pop
push
sbb
les
push
push
push
add
or
xchg
mov
push
push
mov
dec
mov
add
sub
xchg
mov
fdiv
push
mov
movs
loope
cmp
(bad)
les
iret
pop
in
adc
lock
call
(bad)
jmp
inc
sahf
push
sbb
mov
cmp
lock
cmp
cmp
shl
jnp
and
inc
(bad)
xor
and
inc
es
pop
ret
loopne
mov
and
das
or
adc
movs
inc
inc
sub
aas
push
jne
push
push
push
xlat
imul
call
push
xchg
xchg
adc
les
adc
imul
or
fist
fnstenv
and
sub
xor
xlat
cmp
mov
add
pusha
mov
test
(bad)
dec
sbb
push
mulps
or
adc
mov
push
dec
icebp
(bad)
cmovo
daa
in
out
add
enter
adc
imul
sbb
loop
sar
dec
xchg
out
inc
jle
add
popf
jecxz
cmp
and
mov
dec
fist
mov
retf
and
jnp
sahf
mov
mov
sbb
push
rol
xlat
nop
dec
push
stc
call
xchg
or
cld
and
push
shr
sub
movs
jns
dec
or
mov
(bad)
test
lea
and
sbb
push
or
arpl
fs
cmc
inc
push
adc
jmp
movs
adc
adc
cdq
ror
movs
push
push
or
sahf
hlt
mov
and
sbb
adc
xor
mov
and
mov
js
shl
mov
xor
mov
ror
dec
mov
xlat
(bad)
jmp
lods
(bad)
cmp
jmp
xchg
mov
enter
add
push
sbb
test
adc
add
xchg
scas
sub
pop
popa
inc
fsubr
or
mov
pop
jmp
retf
xchg
jnp
pop
mov
shr
aas
mov
push
ror
fiadd
scas
push
pop
cmp
les
loop
mov
add
push
mov
cwde
push
cdq
mov
call
cmps
mov
push
(bad)
mov
bnd
pop
loope
lock
or
add
imul
inc
lea
inc
pushf
pop
mov
sbb
jle
push
adc
mov
sub
mov
adc
sub
cld
push
mov
test
xchg
les
push
cdq
or
cmp
int
outs
pusha
or
call
jno
mov
push
mov
push
xor
jecxz
rcl
jo
mov
add
jne
push
mov
or
call
pushf
push
(bad)
sbb
xchg
mov
sbb
xor
xor
imul
cs
xor
and
dec
mov
mov
movs
mov
pop
or
dec
sub
xchg
mov
retf
or
add
add
inc
lds
add
pop
and
inc
mov
mov
push
dec
dec
or
ret
in
and
into
das
xor
xor
enter
popa
add
daa
mov
rol
outs
movs
dec
cs
xchg
cmp
or
das
fbld
adc
sub
ja
mov
adc
ja
sbb
push
jl
adc
sbb
and
and
clc
in
xor
dec
push
out
adc
test
mov
cmp
mov
out
xchg
fldenv
and
push
push
cmp
adc
and
pop
movs
mov
add
or
adc
cmp
mov
dec
mov
ror
bound
push
fdiv
xchg
les
inc
cmp
add
mov
aas
add
dec
xor
mov
jl
sub
push
sub
cmp
daa
mov
ja
mov
mov
mov
xchg
(bad)
shl
lahf
sub
adc
cmp
push
ja
adc
ror
mov
inc
ficomp
cwde
and
movs
inc
adc
repnz
sub
(bad)
sbb
rcl
mov
pushf
add
and
daa
dec
jg
push
add
or
push
xchg
mov
jl
cmp
add
adc
adc
pop
movs
xor
xchg
nop
pop
push
js
sahf
push
jns
stc
rcl
cld
in
nop
add
xor
adc
sub
and
push
jnp
cwde
ret
ins
xchg
lods
xchg
sub
rol
(bad)
push
or
cmps
mov
pop
sub
lods
and
mov
xor
push
retf
inc
jecxz
push
or
sbb
dec
pushf
and
jle
add
add
ror
jo
cmp
cmp
xchg
or
dec
(bad)
ud2
push
xchg
mov
mov
xchg
mov
or
cmps
mov
cmp
inc
xor
push
push
rcr
cmps
pop
jl
sbb
stc
or
xchg
inc
(bad)
dec
test
sub
pop
mov
leave
sub
mov
nop
out
bound
pushf
dec
rcr
loope
mov
sbb
mov
inc
ds
cdq
and
add
add
xor
push
xor
and
xor
call
and
nop
xchg
js
inc
or
push
sahf
pop
inc
inc
adc
push
leave
repz
jo
adc
or
dec
dec
nop
add
inc
pop
test
dec
add
sbb
adc
sub
sub
jo
sub
je
outs
rcl
ret
xchg
outs
inc
test
enter
sbb
sbb
fadd
mov
dec
bound
xchg
and
ficomp
xchg
sbb
mov
popa
mov
icebp
dec
scas
idiv
mov
xor
push
stc
(bad)
icebp
jl
sbb
add
and
add
test
aas
test
jmp
add
xchg
sbb
dec
arpl
lahf
push
test
and
add
addr16
mov
sub
fmul
loopne
jmp
loope
inc
jbe
cmp
or
inc
or
pop
inc
sub
cmp
jecxz
adc
gs
xchg
jmp
pop
sbb
or
mov
push
mov
dec
outs
mov
inc
push
mov
lock
push
rcl
mov
mov
sbb
xchg
pop
jno
retf
ficomp
xchg
mov
lea
and
adc
push
pop
adc
dec
inc
push
aaa
lock
fdivr
ins
test
je
or
je
sub
sbb
inc
or
add
push
xor
push
add
dec
rcr
mov
lahf
and
add
jno
mov
mov
sbb
lock
sbb
sbb
sbb
mov
inc
shl
push
inc
inc
or
and
clc
(bad)
sub
and
ret
xchg
adc
sbb
loopne
les
lock
or
cmp
or
les
out
rol
dec
add
add
addr16
hlt
adc
js
aaa
mov
and
inc
sbb
jne
lahf
push
into
test
jg
mov
jmp
rcr
mov
addr16
mov
dec
ins
dec
or
push
add
push
push
or
ficomp
xchg
(bad)
arpl
les
arpl
inc
aaa
jb
and
ret
je
lea
sbb
xor
mov
push
imul
pop
imul
push
or
test
mov
out
ja
push
mov
(bad)
sub
push
push
push
call
jns
icebp
cmp
pop
xor
pop
je
cmp
cmp
mov
adc
push
adc
push
push
push
rcr
in
mov
push
pop
sbb
fst
push
xor
jno
mov
jmp
and
sub
inc
mov
pop
dec
cmps
fwait
je
xor
clc
xor
push
lea
(bad)
push
adc
ins
mov
popf
mov
ret
or
and
pop
mov
add
or
jnp
jl
jmp
mov
dec
hlt
push
stc
scas
jb
add
cmp
sbb
das
adc
icebp
push
mov
lods
xchg
mov
pop
fnsave
aas
into
sbb
(bad)
push
mov
dec
or
fistp
les
in
(bad)
xor
sub
ss
push
push
pop
push
cmps
adc
test
sbb
sbb
mov
sub
dec
adc
or
call
inc
pop
cld
push
mul
push
push
pop
rcr
inc
test
push
or
cmp
pusha
push
xor
mov
inc
xchg
retf
fs
fs
push
mov
or
sbb
xchg
inc
mov
or
enter
xchg
retf
aam
fsub
call
in
hlt
clc
cld
shr
or
and
add
xchg
or
int3
mov
dec
(bad)
sub
in
or
xchg
mov
stos
xor
lea
fiadd
ds
or
sub
mov
nop
les
pusha
in
push
mov
add
xor
and
mov
sbb
pushf
pop
cdq
xor
(bad)
sub
leave
jnp
xchg
push
mov
push
mov
dec
mov
pushf
inc
inc
rcr
arpl
dec
into
cmp
pusha
les
sbb
les
(bad)
popf
fstp
shr
rcr
and
outs
or
sbb
inc
ror
cli
popa
inc
scas
in
adc
loopne
ret
rol
jne
popa
cmp
lock
xor
pop
or
pop
clc
lea
mov
sbb
ss
ret
neg
or
add
xor
mov
(bad)
xor
pop
sti
dec
push
and
les
sbb
mov
mov
enter
mov
in
xor
pop
xchg
and
add
mov
sbb
or
pop
hlt
dec
ret
ins
in
add
nop
daa
pop
js
add
hlt
imul
add
cld
and
push
push
or
cmp
adc
test
xor
rcl
adc
dec
cmp
sbb
lea
add
cmp
push
mov
or
mov
in
push
ins
sub
fld
add
dec
in
adc
mov
sbb
mov
(bad)
dec
jo
mov
loop
bound
cmp
push
mov
adc
fild
in
xor
(bad)
es
call
add
jmp
scas
push
cli
mov
ins
test
sahf
je
push
dec
jl
ret
jbe
aas
dec
adc
mov
dec
dec
mov
push
push
push
pop
push
rol
jno
push
movs
mov
pop
test
xor
cmp
add
and
jo
pusha
test
mov
push
pop
sbb
push
mov
mov
mov
(bad)
pushf
xor
add
(bad)
cld
push
mov
arpl
sbb
mov
cwde
fnstcw
lods
adc
jo
sbb
inc
pop
mov
test
push
mov
mov
add
inc
jo
lea
(bad)
lea
xchg
fidivr
jnp
dec
mov
adc
push
lea
pop
mov
sub
cmp
push
mov
out
pop
adc
mov
mov
in
xor
dec
sub
push
pushf
fnstcw
aam
xchg
ffree
mov
add
mov
sahf
test
or
xor
ss
sub
sub
fisttp
leave
dec
sub
xchg
test
popf
inc
stos
loop
fld
xchg
xchg
nop
jae
(bad)
cwde
or
xchg
in
(bad)
scas
mov
gs
mov
adc
test
ss
or
loope
mov
out
inc
inc
retf
jbe
or
outs
dec
sbb
sub
add
or
xor
dec
loopne
pop
inc
cs
jmp
imul
hlt
pop
stos
push
scas
adc
shr
mov
xchg
dec
fwait
cmp
ins
dec
push
int3
(bad)
jl
int3
movs
icebp
enter
mov
push
or
sbb
xor
clc
add
jmp
mov
daa
inc
sbb
jmp
(bad)
in
(bad)
mov
jae
mov
ins
mov
int3
dec
cs
inc
fadd
push
push
cmc
xor
call
sbb
repnz
xchg
std
in
xor
mov
lods
jne
enter
(bad)
fldenv
cmp
dec
lock
nop
push
in
aas
sub
or
cmps
lods
das
dec
retf
mov
dec
call
adc
fwait
loope
les
xchg
adc
inc
rol
mov
mov
jp
sar
add
mov
loopne
inc
popa
mov
rcr
inc
or
ror
arpl
scas
aam
mov
out
test
ret
mov
xor
dec
push
leave
mov
ror
cmp
movs
mov
cmps
scas
sar
inc
xchg
fild
sbb
aam
inc
ret
push
jecxz
pop
or
push
or
loop
sbb
cmc
fs
or
sbb
mov
push
dec
push
je
pushf
enter
mov
popa
xor
shr
sub
xchg
imul
adc
push
mov
pop
dec
arpl
jl
push
jo
adc
popf
mov
pop
xchg
xchg
inc
add
dec
into
adc
test
jmp
retf
mov
out
mov
je
xor
cmps
mov
cmps
xchg
mov
dec
popf
pop
push
leave
cwde
imul
clc
nop
lea
dec
mov
xchg
jmp
mov
popf
mov
(bad)
ror
or
popa
pop
(bad)
cld
cli
or
pop
cmp
mov
dec
mov
jbe
xor
adc
mov
pop
sbb
dec
les
sub
fst
ror
int
les
xor
mov
add
cmp
cmp
pop
or
rol
push
xor
add
mov
jg
int3
gs
in
xor
fcom
into
mov
or
das
xchg
jo
adc
ror
sbb
es
push
test
or
xchg
nop
scas
scas
in
xchg
push
je
jp
and
ins
inc
loope
pusha
loopne
push
not
pop
stc
sub
adc
sbb
mov
leave
clc
add
add
ret
dec
or
popa
push
iret
jl
cli
mov
mov
jle
out
cmp
push
jno
and
leave
(bad)
pop
gs
pop
leave
cmp
adc
jo
and
inc
sbb
cmp
fisub
mov
sahf
imul
fnstenv
xor
cli
xor
pop
imul
cmp
mov
je
or
push
mov
icebp
or
je
jb
arpl
push
adc
sbb
les
sti
and
inc
add
leave
add
push
push
pop
xchg
push
sbb
sbb
inc
cdq
pop
xchg
es
and
(bad)
dec
pop
shr
je
push
dec
lock
fld
add
pushf
cmc
mov
mov
and
mov
mov
call
xor
lock
test
pop
retf
adc
inc
pop
retf
je
loopne
adc
ja
push
rol
dec
pushf
retf
add
push
mov
dec
mov
add
ret
aas
add
push
(bad)
movs
aas
sbb
stos
jmp
cmp
dec
adc
adc
adc
xchg
inc
pop
fstp
jbe
and
push
ss
rcl
or
add
cmp
inc
clc
inc
or
rol
pusha
mov
test
movs
xchg
jne
daa
aam
std
ret
imul
push
in
jne
fs
jo
loopne
sbb
aam
add
mov
lock
add
sub
adc
dec
sbb
mov
or
dec
test
arpl
mov
mov
sbb
sbb
sbb
add
add
pop
or
add
cmp
test
enter
mov
aas
push
xor
sbb
mov
sbb
sbb
movs
xor
sbb
enter
sbb
mov
enter
arpl
or
not
xor
push
(bad)
movs
popf
rcr
retf
adc
jns
daa
push
call
mov
add
sub
cmp
or
mov
leave
mov
jle
mov
and
stos
or
add
test
sbb
sbb
pop
mov
inc
and
xor
sbb
adc
mov
dec
lahf
sbb
sbb
lea
aas
sbb
sbb
xchg
or
jg
push
add
cmp
or
outs
push
or
add
dec
jnp
push
retf
or
imul
dec
dec
test
in
mov
jae
push
inc
test
retf
(bad)
outs
pop
inc
inc
cmp
cmp
je
adc
gs
gs
jne
es
or
xchg
sbb
fcomp
pop
push
inc
adc
jns
or
repnz
(bad)
sub
xor
nop
and
xor
cdq
stos
inc
sub
pusha
ror
xchg
mov
sub
push
adc
mov
dec
ins
dec
shl
and
cmp
lahf
int
push
mov
or
push
jae
or
mov
adc
push
iret
inc
jb
xchg
push
adc
xchg
cmp
rcl
rcl
dec
jae
call
cmp
dec
dec
cwde
push
push
cwde
push
enter
test
push
cmp
repnz
xchg
push
test
xchg
retf
(bad)
enter
push
loopne
push
outs
xor
sbb
(bad)
push
mov
lea
pushf
and
push
mov
adc
jnp
mov
lea
fld
enter
xchg
inc
xor
xor
stc
ror
mov
pop
push
enter
enter
lods
xchg
xchg
pop
imul
aam
jnp
inc
push
cdq
nop
push
test
enter
sar
imul
jnp
add
adc
mov
iret
jae
push
cs
ds
repnz
je
mov
dec
cdq
sbb
rol
pusha
dec
fmul
(bad)
sub
xchg
dec
movs
sbb
test
sub
jns
and
add
pop
add
sbb
xchg
add
sbb
adc
test
cmovo
jg
jns
lea
xchg
push
sbb
xor
cmps
inc
mov
call
jle
add
and
mov
dec
fwait
pop
push
std
rdpmc
mov
inc
or
jge
movs
jl
mov
inc
or
rol
dec
or
xchg
je
fst
mov
cmps
fld
push
push
mov
jmp
mov
xor
and
sub
jmp
jae
add
add
and
xor
push
cwde
in
jne
sbb
mov
shl
or
outs
fisttp
pop
sub
ror
dec
in
push
inc
dec
pop
jne
call
sbb
test
adc
sbb
lea
sbb
ins
test
sti
test
adc
pop
jmp
out
in
retf
push
ficomp
add
gs
imul
mov
push
test
xchg
adc
ja
nop
xchg
fisub
push
repnz
mov
or
test
jns
inc
inc
repz
syscall
mov
cmp
rcr
pushf
adc
clc
or
xchg
int
lock
rol
popa
jne
lahf
aam
sbb
cmp
les
sbb
ret
xor
sbb
jl
mov
xor
xchg
lahf
add
add
and
mov
dec
fadd
clc
xor
dec
iret
outs
push
stos
sahf
fwait
hlt
add
cld
nop
jl
nop
dec
mov
pop
repz
jb
or
sbb
add
nop
sbb
cmp
or
sbb
nop
sub
xchg
dec
mov
sbb
pop
sbb
add
cmps
or
adc
sbb
sbb
and
nop
mov
sbb
sbb
xor
sbb
jecxz
or
icebp
push
cmp
or
bt
scas
lea
nop
push
shl
inc
push
and
and
sbb
icebp
add
jo
dec
push
fcom
mov
add
dec
adc
dec
xchg
ss
inc
sub
jg
mov
pop
xchg
jo
push
pop
mov
push
pop
lahf
cwde
icebp
popa
push
and
push
and
mov
call
xchg
add
inc
lahf
imul
mov
add
jmp
enter
add
aaa
in
scas
push
xor
repnz
aam
add
(bad)
dec
es
mov
xor
xchg
xchg
into
and
dec
adc
dec
xor
sub
inc
fs
mov
bound
add
mov
xchg
pop
or
xor
movs
push
jb
xor
arpl
clc
movs
and
push
fwait
clc
lea
loop
or
mov
sahf
out
jmp
iret
and
mov
adc
addr16
lea
mov
sar
adc
and
add
jnp
and
loop
jp
mov
hlt
in
aaa
add
jmp
pop
push
sets
add
movs
mov
(bad)
mov
mov
pop
rol
ins
dec
ror
and
or
int3
dec
mov
stos
sbb
or
add
call
or
out
inc
add
push
pop
pop
add
ds
push
pusha
mov
stos
xchg
push
mov
shl
pop
jbe
mov
out
movs
lahf
jae
test
jle
dec
xchg
mov
lahf
cmps
sub
push
ret
xor
xchg
xor
jmp
mov
and
pmaddwd
ds
cmp
int
mov
inc
shl
nop
push
dec
pusha
je
jo
pop
sub
ss
adc
ins
mov
dec
sub
xlat
dec
fistp
and
add
mov
mov
pop
jmp
sbb
xor
push
add
add
je
ss
or
jmp
jl
mov
xchg
xchg
cmc
xchg
daa
sbb
cmp
mov
dec
mov
sar
stos
icebp
pop
jg
jnp
and
add
add
in
dec
mov
jo
mov
push
dec
sbb
mov
pop
test
push
push
arpl
pop
inc
xchg
jns
mov
xchg
js
iret
push
mov
inc
pop
jge
test
add
lock
lea
je
in
and
fbstp
pop
mov
sbb
adc
nop
add
ins
mov
fsub
dec
ret
add
sub
ror
mov
xchg
lsl
jae
mov
mov
adc
loope
mov
cmp
test
pop
movs
push
out
test
les
jae
adc
sbb
push
or
push
inc
mov
fadd
mov
add
push
inc
sahf
ss
dec
cs
adc
rcl
repnz
adc
cmp
sub
cmp
mov
xor
cmp
and
in
cmp
je
sub
movs
pmulhw
xchg
fist
cmp
inc
fst
or
push
push
ret
push
fist
sbb
add
je
js
adc
addr16
arpl
xor
or
(bad)
das
inc
xor
or
cs
sahf
xchg
push
pop
push
(bad)
cmp
push
or
bound
push
xor
cmp
push
mov
sbb
or
dec
and
fwait
ins
scas
cld
xor
fiadd
ss
xchg
xor
push
call
loopne
pop
movs
test
lahf
int
fdivr
xor
rol
cmc
add
add
adc
push
add
dec
adc
enter
add
sbb
aas
cmps
in
fs
push
fbld
add
das
and
inc
and
xchg
cmp
int3
xchg
cld
jg
clc
pop
jne
push
jecxz
add
xchg
xor
sbb
inc
dec
pop
sub
xchg
or
add
or
lahf
cmps
push
adc
and
jge
xor
mov
outs
ss
xchg
test
inc
sub
loope
pop
sbb
mov
les
iret
sbb
mov
stc
jmp
iret
jmp
sub
call
pusha
(bad)
xchg
mov
push
ins
and
or
mov
push
out
add
das
and
xchg
movs
aam
push
or
add
out
adc
inc
xchg
or
xor
adc
and
cmc
xchg
loopne
dec
ds
in
sbb
fst
ret
cld
inc
mov
sub
add
jnp
pusha
(bad)
das
xor
bnd
hlt
inc
cmp
mov
jnp
push
cld
cmc
add
add
fsub
cdq
jmp
cmp
shr
mov
lds
jp
dec
push
jp
icebp
lea
sbb
cmc
cmp
push
push
inc
clc
pusha
(bad)
das
or
mov
pop
ds
inc
jo
pop
mov
pop
pop
cmc
fs
pop
pop
mov
dec
inc
pop
add
dec
cmp
xchg
mov
pop
std
push
and
push
popf
es
sub
mov
adc
fld
mov
push
in
or
aas
jne
js
scas
mov
shr
jmp
inc
sub
sahf
pop
popf
dec
sbb
shr
shl
sub
popa
cmp
xchg
push
push
or
and
xchg
pop
xor
clc
sbb
ror
push
add
inc
jecxz
(bad)
fdivr
xlat
jle
stos
inc
mov
and
fxch
shr
add
addr16
addr16
bound
add
pusha
adc
mov
adc
mov
or
sti
dec
xchg
sub
dec
out
stc
out
push
push
sbb
add
add
sbb
and
jo
addr16
iret
xchg
xchg
mov
retf
push
int3
dec
sub
mov
sub
push
(bad)
pop
and
adc
jmp
sub
sub
inc
fbld
in
mov
lea
cmp
cmp
test
mov
rcl
add
inc
pop
pop
jbe
test
add
adc
xor
add
lea
xor
jmp
daa
jmp
les
mov
pop
add
cmps
inc
sbb
push
and
adc
fldcw
xchg
(bad)
mov
cmp
cwde
nop
or
mov
pop
ja
pop
push
repnz
lods
repz
jg
and
dec
int
test
xchg
mov
push
mov
rcl
mov
loopne
xor
bound
(bad)
mov
push
in
push
lds
cmp
and
in
dec
mov
mov
test
jle
jne
outs
pusha
retf
in
cmp
push
repnz
sbb
inc
mov
cmp
inc
arpl
jae
push
ins
push
push
mov
xchg
jae
or
or
pusha
add
push
push
ins
pop
inc
dec
or
sbb
cmp
jbe
pop
mov
cld
push
shr
stos
fild
fbstp
fld
jle
push
pop
jo
(bad)
pop
cmp
pop
and
inc
in
jnp
sbb
cmp
push
add
sbb
and
xchg
cmp
sbb
in
xor
inc
pop
loopne
sbb
fcom
inc
sub
push
push
mov
cli
xor
aad
rcl
push
or
or
dec
fidiv
iret
and
adc
popa
dec
ins
test
lods
fimul
adc
mov
test
and
leave
sub
or
inc
cmps
iret
xchg
loopne
push
loop
lods
test
movs
in
add
xor
test
sbb
cmp
inc
xchg
xor
cmc
cmp
adc
mov
cmp
cmp
mov
or
mov
and
push
je
add
add
pop
push
in
loopne
adc
rcr
sbb
bound
lea
mov
rol
unpcklps
inc
push
add
dec
adc
sahf
(bad)
daa
pop
jge
lahf
inc
sbb
aam
into
test
push
xor
cmp
aam
inc
dec
push
pop
cmp
outs
sub
add
and
add
fwait
xchg
mov
xor
mov
popa
mov
push
setg
shl
push
jl
or
inc
mov
push
push
test
jmp
out
mov
xchg
mov
inc
dec
push
pop
push
jns
inc
ss
(bad)
mov
es
test
add
mov
loope
daa
inc
lods
dec
mov
cwde
fmul
pop
int
pop
push
es
outs
leave
push
cmp
xchg
add
mov
xor
into
and
loopne
xchg
push
ror
int3
and
rol
popa
nop
mov
or
bswap
cmp
add
xchg
or
mov
in
aam
mov
pop
push
cmp
push
hlt
pop
add
add
popa
inc
nop
retf
xor
loopne
push
jle
lahf
and
cmp
add
and
cmp
ret
div
xor
fadd
enter
fild
push
sbb
jno
push
icebp
lods
inc
xchg
xor
inc
push
loop
test
ins
je
mov
(bad)
sub
fst
fsub
cmp
test
sub
in
jmp
xchg
adc
inc
pusha
imul
ret
dec
cld
jge
pop
sar
sub
sub
cmp
test
add
mov
xchg
mov
cmp
mov
fmul
outs
outs
jmp
lea
push
rol
sub
push
inc
dec
sbb
in
icebp
mov
scas
xchg
retf
jge
out
add
mov
push
movs
and
inc
movs
add
daa
adc
xor
sub
int3
popa
fild
(bad)
mul
test
xchg
ficom
fcom
sub
or
aam
lods
jnp
or
pop
cs
pop
mov
mov
cmp
jns
add
je
push
push
arpl
jge
xor
ins
pop
add
pop
xor
leave
mov
xor
or
stos
or
push
cdq
cmp
and
inc
(bad)
in
sub
mov
sbb
pusha
dec
adc
test
je
lea
jo
(bad)
dec
inc
lock
sar
enter
test
ror
aas
or
add
call
and
test
mov
clc
pop
cmp
inc
mov
sbb
test
fisttp
mov
fmul
push
adc
js
movs
sahf
out
aad
mov
sub
aaa
xor
jle
adc
add
outs
int3
fbstp
dec
enter
lds
jge
jmp
scas
add
xchg
dec
jns
sub
outs
sub
(bad)
cmp
and
(bad)
stc
dec
jmp
inc
cmp
(bad)
dec
push
mov
mov
(bad)
dec
fdivp
mov
fld
loop
lock
mov
test
sysret
mov
fldcw
jmp
xchg
mov
loop
adc
push
fs
cmp
pop
push
cdq
pusha
lds
fneni(8087
fild
xlat
aad
and
dec
popa
outs
sbb
or
in
cmp
jbe
(bad)
dec
sbb
es
adc
std
inc
xlat
fstp
push
inc
cmc
mov
add
rcr
retf
jmp
inc
dec
cmp
push
cmp
add
ret
xchg
add
fstp
or
movs
stos
xor
inc
dec
inc
xor
or
inc
sar
and
sub
push
ds
loopne
add
push
iret
call
lea
ret
cmp
jge
shl
sub
push
lea
xor
adc
stc
and
pop
mov
std
ins
ss
push
xor
adc
shl
(bad)
pop
push
adc
cmp
je
mov
jmp
mov
pushf
push
cmps
cli
aas
mov
pusha
inc
pushf
push
mov
dec
or
jb
cmp
aas
push
mov
aad
test
cld
popa
(bad)
add
rep
mov
push
lods
pop
xchg
enter
sub
(bad)
jge
or
add
lods
(bad)
push
sbb
clc
and
dec
(bad)
lea
xchg
jecxz
rol
stos
jbe
mov
add
push
add
or
sub
je
pop
arpl
mov
pop
sub
stos
cld
test
lods
jmp
and
push
jns
sub
clc
ret
gs
add
cwde
repz
sub
mov
pusha
sbb
pop
fnstcw
pop
(bad)
enter
mov
iret
out
(bad)
enter
test
call
jbe
sbb
lea
jg
mov
cmc
(bad)
jne
or
cmp
jae
mov
xchg
xor
mov
ds
push
mov
cmp
push
hlt
ret
and
loopne
adc
popa
pop
call
pop
mov
jecxz
add
gs
inc
jne
popa
push
add
mov
movs
dec
das
or
mov
jmp
in
inc
push
gs
and
fadd
pop
xchg
jno
aas
push
dec
add
inc
call
test
or
mov
fsubr
jecxz
push
int3
inc
(bad)
data16
inc
aam
push
in
adc
repnz
push
lea
jne
xor
push
mov
mov
wrmsr
xchg
xor
mov
pop
lds
mov
push
add
in
add
jmp
inc
lock
sti
inc
xor
mov
mov
add
or
mov
sub
scas
jno
push
pop
hlt
add
push
push
or
pushf
or
xor
sub
adc
xor
xchg
aam
xchg
pop
ficom
and
adc
movs
and
outs
pop
or
pop
and
add
jle
ds
add
xor
lea
jbe
lods
push
push
je
jno
pop
dec
hlt
and
fwait
popf
or
test
mov
pop
mov
mov
dec
pushf
and
callw
cmp
and
stos
out
mov
test
imul
or
test
or
mov
push
mov
shl
adc
add
and
pop
ror
sub
retf
or
cdq
test
add
push
mov
lea
xor
mov
cmp
(bad)
cld
dec
inc
cwde
push
inc
pop
pop
or
movs
adc
mov
sub
mov
(bad)
push
xchg
push
pop
mov
inc
mov
ret
bound
je
pop
jo
nop
pop
add
jle
or
push
fld
mov
push
jge
imul
inc
pop
mov
inc
in
cmp
rol
mov
and
mov
jae
inc
popa
inc
jne
dec
(bad)
jmp
(bad)
mov
push
xor
sbb
cmp
fisttp
pop
push
adc
add
pop
rcr
mov
out
push
fisttp
(bad)
add
and
ja
je
dec
das
(bad)
test
rcr
sahf
test
test
sub
pop
or
call
or
dec
in
ror
je
dec
jne
dec
cwde
and
stos
fisttp
add
inc
(bad)
clc
mov
in
adc
lahf
imul
or
or
sub
lahf
and
inc
leave
aad
aad
ins
or
adc
dec
mov
xor
mov
or
rcl
jmp
add
add
adc
inc
adc
jge
pop
jb
sub
(bad)
in
(bad)
lock
dec
adc
push
xchg
push
aam
inc
es
push
push
(bad)
les
inc
es
pushf
pushf
push
push
sahf
or
call
or
xor
or
inc
nop
(bad)
rcl
sub
xchg
adc
and
xchg
(bad)
xchg
inc
fcom
lock
dec
lock
js
fs
adc
push
lods
xchg
dec
cs
ds
sub
retf
(bad)
lock
aaa
xchg
sub
aam
test
aam
dec
in
dec
movs
repnz
fsub
xchg
repnz
hlt
xchg
mov
pop
inc
and
and
fs
pop
dec
and
dec
pop
out
sahf
cmps
ret
mov
sbb
push
and
xor
ds
sub
xor
adc
and
add
loopne
loopne
add
and
sub
push
sbb
hlt
movs
xor
hlt
fmul
int3
nop
xchg
retf
(bad)
in
cmp
hlt
int
inc
sub
dec
aas
hlt
loopne
xchg
dec
gs
(bad)
call
add
push
sahf
(bad)
(bad)
sbb
or
xchg
dec
movs
or
adc
nop
dec
enter
nop
or
clc
nop
pop
leave
in
fcomp
xor
xor
clc
jb
pop
leave
sar
fdivr
nop
pop
xor
adc
clc
fsubr
cdq
add
test
jmp
hlt
hlt
mov
aaa
test
pop
mov
ror
enter
movs
int3
push
push
fisttp
and
push
mov
fbstp
lds
or
sbb
mov
xchg
test
add
popa
pop
test
fisttp
xchg
dec
adc
loopne
sbb
mov
xor
dec
inc
xor
adc
mov
mov
cmp
(bad)
int
in
mov
rcr
mov
inc
pushf
push
call
fstp
or
test
sub
data16
adc
adc
and
pop
lds
nop
mov
or
popa
dec
dec
rol
lock
and
dec
mov
es
retf
test
add
jo
xor
ja
add
ror
and
ror
lock
pop
adc
cwde
js
(bad)
fild
or
inc
jb
cmp
inc
pusha
sbb
test
sbb
dec
and
and
mov
mov
inc
pop
and
add
popf
inc
push
xlat
test
push
xor
sbb
pop
mov
pop
adc
in
and
jno
fwait
or
js
pushf
mov
fs
jg
pushf
shl
jb
sub
inc
pop
add
adc
push
push
fs
jo
je
lea
push
mov
std
adc
inc
fs
daa
sbb
adc
dec
push
push
or
jns
sub
aad
sbb
and
mov
sbb
cmp
mov
loopne
int
cmp
push
and
addr16
add
mov
mov
jmp
daa
pusha
inc
pop
pop
sub
and
sbb
pop
or
test
gs
sub
push
mov
sti
push
sahf
test
je
nop
dec
adc
scas
or
loop
xor
add
leave
rcr
push
adc
out
or
test
pusha
sub
mov
dec
xlat
mov
imul
or
sub
sbb
add
push
xchg
and
mov
mov
or
xor
inc
les
xor
push
sub
add
and
xor
push
loopne
mov
xchg
je
or
scas
and
lock
int3
sbb
push
xadd
dec
jmp
mov
ret
jmp
jmp
mov
rcl
inc
mov
sahf
lods
loopne
add
xor
popf
fwait
or
push
pop
lock
jno
test
fld
or
nop
pop
adc
stos
or
jle
sub
jge
arpl
inc
cdq
or
dec
loopne
mov
ret
mov
(bad)
sbb
mov
cmp
lea
test
leave
popf
add
sub
or
in
cld
imul
aas
jmp
cli
adc
jbe
inc
xor
test
cmp
sub
sbb
pushf
push
push
fild
push
cwde
jl
mov
je
icebp
in
push
inc
lahf
xchg
imul
lods
dec
popa
mov
ror
daa
or
add
stc
nop
movs
into
retf
adc
ret
adc
xchg
sub
and
jne
movs
push
mov
jmp
cmp
add
in
adc
sbb
(bad)
sub
je
mov
das
cmp
pop
sub
jg
sbb
mov
cs
clc
sbb
push
adc
movlps
pcmpgtd
or
xchg
cwde
xor
add
mov
ret
adc
call
mov
add
jbe
fild
inc
jmp
xchg
mov
adc
jl
add
es
js
xor
fs
or
int
pusha
outs
pusha
push
leave
iret
inc
inc
sbb
xchg
dec
xchg
mov
dec
pop
dec
and
adc
jbe
xor
in
xchg
or
repnz
add
or
push
js
mov
pushf
cld
and
push
pop
dec
out
in
jp
ret
retf
cmp
add
sti
adc
jae
dec
jge
xor
dec
add
or
xor
nop
out
sbb
adc
jo
and
je
lea
and
add
mov
inc
ins
hlt
shl
push
pop
clc
pcmpgtb
test
or
adc
xor
movs
adc
sbb
mov
inc
cli
ret
imul
xor
inc
inc
jp
or
pop
cmp
push
xor
lahf
jecxz
and
jb
jp
nop
cmp
push
leave
movs
fwait
je
pushf
lahf
je
test
add
dec
push
xchg
adc
repz
and
imul
pusha
add
push
mov
ins
add
xor
add
mov
adc
mov
ret
out
test
adc
fsub
add
ss
mov
sub
jge
in
in
mov
push
test
(bad)
push
jbe
mov
or
sbb
mov
dec
xchg
or
(bad)
and
sub
movs
xchg
add
ror
(bad)
or
fisubr
pop
(bad)
adc
push
fild
enter
jno
jno
clc
mov
and
loope
jno
js
mov
data16
and
push
or
pop
mov
push
les
inc
je
push
sub
push
sub
xlat
push
pop
xor
shr
xor
xor
hlt
push
push
or
and
sti
test
stc
jo
aad
jl
fst
dec
add
inc
and
int3
(bad)
pop
mov
jb
or
jecxz
dec
sub
pop
lea
cs
es
mov
xchg
lods
sub
lea
sub
fadd
jbe
loopne
dec
add
mov
pop
pusha
fs
jo
push
sub
lea
and
not
push
nop
push
push
jnp
mov
lea
mov
dec
nop
push
add
mov
add
adc
sub
pop
or
mov
and
mov
in
inc
xlat
rcr
adc
jle
mov
into
nop
js
jmp
arpl
lea
add
je
xchg
cmps
jmp
jl
sbb
mov
pushf
xchg
dec
mov
movs
loope
je
inc
sbb
imul
iret
sbb
(bad)
xchg
cmp
push
or
cmp
pusha
xor
jl
pop
sub
in
mov
dec
sub
adc
inc
ss
shl
pushf
inc
neg
xchg
cmps
loop
jne
sub
pop
jb
js
je
xchg
lock
xchg
ins
mov
ja
shl
cmp
sbb
sub
mov
nop
or
cmps
xor
ror
loopne
icebp
pusha
mov
push
mov
adc
xchg
mov
rol
icebp
jl
aad
js
mov
or
ss
rcr
sbb
inc
xor
and
es
stc
int
add
xor
push
adc
pop
inc
push
fiadd
loop
test
popa
sar
dec
lea
test
mov
ja
adc
dec
mov
(bad)
dec
push
adc
push
mov
pushf
jge
popa
adc
cmps
jne
mov
push
mov
or
popf
adc
xchg
push
dec
lods
shr
and
fs
fidivr
xor
add
in
(bad)
test
dec
inc
stc
int3
(bad)
xor
ret
or
xchg
fsubrp
mov
mov
pop
jb
adc
push
aam
push
dec
scas
out
ss
enter
mov
add
dec
cli
mov
and
push
add
(bad)
enter
lock
jecxz
inc
imul
enter
data16
jno
addr16
push
push
addr16
push
or
pop
test
enter
add
dec
jl
jl
sbb
add
fwait
mov
sub
adc
out
xor
lea
mov
je
xor
push
xchg
xor
xor
and
dec
test
push
mov
cs
cmp
test
(bad)
stc
xor
xor
cli
push
inc
adc
and
mov
loope
or
dec
loop
adc
rol
push
adc
cmp
ror
push
imul
xor
(bad)
sbb
mov
sub
(bad)
cmp
xchg
sub
xchg
and
sbb
or
fsub
(bad)
xor
aam
push
in
mov
das
fwait
push
loope
pop
adc
iret
mov
or
add
mov
xor
mov
test
mov
pop
loopne
fmul
pop
pop
scas
call
in
cmp
xchg
icebp
add
out
push
test
(bad)
test
aaa
jl
retf
cmp
aam
popa
lds
jmp
pop
xlat
push
shl
pusha
aad
xchg
add
inc
inc
icebp
mov
es
push
pusha
lahf
push
pusha
fadd
or
sbb
push
and
pop
cmp
pop
inc
adc
icebp
imul
dec
mov
sbb
xor
cld
mov
or
pop
dec
pushf
cwde
nop
in
int3
rcr
dec
daa
push
xchg
int
aam
add
cmps
pop
and
ins
push
sub
adc
pusha
in
sbb
push
mov
lods
ins
jmp
test
push
jb
cwde
or
xor
cmp
mov
jp
cmp
in
mov
cld
rol
inc
pop
inc
int3
xor
adc
push
push
cmps
cdq
js
jle
ror
dec
fstp
push
fsubr
xchg
mov
or
jbe
mov
inc
paddusb
xor
mov
sbb
xchg
mov
add
cmp
mov
(bad)
imul
cdq
idiv
mov
pusha
lsl
push
loopne
mov
push
or
dec
and
mov
dec
cmp
add
and
push
ins
sub
pop
fistp
adc
ja
adc
mov
add
dec
sbb
cmp
lds
and
dec
mov
pop
fistp
js
or
fbld
jbe
dec
fcom
dec
sub
jo
ret
js
cdq
sub
push
mov
std
sub
test
or
idiv
push
shl
(bad)
sti
jg
cs
and
enter
cmp
fdivr
cs
push
pop
pop
sbb
mov
enter
test
adc
pushf
jae
add
sbb
ror
jne
or
cwde
add
dec
in
fldcw
add
sbb
xlat
adc
cmp
scas
or
stos
jl
or
sti
loopne
jge
push
lock
sbb
push
nop
mov
mov
add
lods
call
cmp
lods
xchg
jle
and
mov
sub
(bad)
xlat
jmp
pushf
test
xchg
push
push
int3
test
ror
cmp
jl
mov
movs
test
mov
aas
sub
ror
iret
rep
push
sti
psubb
add
xchg
dec
push
pusha
push
lahf
(bad)
out
in
nop
inc
les
nop
and
dec
aaa
loop
dec
cmps
xor
mov
xchg
std
dec
jmp
and
xor
mov
rol
adc
add
mov
add
push
sbb
mov
cmps
(bad)
aaa
mov
test
push
push
repnz
stos
adc
aad
movs
xor
mov
mov
xor
mov
inc
test
inc
push
and
xor
pop
add
pop
mov
ss
enter
mov
inc
rcl
rcr
push
pop
xor
push
or
loope
enter
xchg
push
cmp
movs
push
pop
xor
in
lods
outs
xchg
cmovge
xor
sub
mov
sub
adc
inc
in
push
add
push
adc
add
test
xor
pop
sahf
mov
and
add
sub
push
stc
cs
int3
mov
push
push
inc
sbb
ret
pusha
push
and
shl
pop
sub
pop
add
dec
and
add
dec
push
push
jns
mov
loope
inc
push
xor
inc
aam
sub
xchg
xchg
fdivr
or
mov
adc
je
add
xchg
int3
and
or
test
mov
xor
push
xchg
in
push
scas
inc
jae
les
xchg
mov
cmp
inc
push
call
mov
imul
jmp
mov
aas
lahf
int
or
lahf
cmp
or
mov
jb
add
or
jnp
add
xchg
mov
je
rcl
add
outs
fisttp
imul
and
xchg
xchg
cmp
add
push
repz
aad
jns
movs
icebp
and
nop
retf
inc
xrelease
cmp
jmp
push
add
je
jno
add
inc
(bad)
fild
add
cmp
or
push
pop
or
loop
dec
mov
hlt
cmp
mov
cwde
lods
imul
xchg
inc
mov
retf
mov
and
in
int
pop
ret
in
(bad)
in
mov
cwde
xchg
cmps
sub
xchg
call
push
or
jns
push
or
push
or
adc
jo
sbb
inc
inc
shrd
mov
test
xchg
test
sub
adc
xor
push
cwde
sub
sub
(bad)
les
pusha
mov
dec
push
rcr
fwait
dec
movs
push
push
cmp
movs
mov
jb
mov
call
xor
push
test
(bad)
sub
sub
add
add
xchg
les
mov
cmp
into
dec
or
pop
jecxz
sbb
cmp
lahf
or
stos
ins
lahf
jno
dec
adc
and
or
cld
ret
mov
inc
add
outs
loopne
call
fldenv
pop
inc
inc
in
ror
lds
add
xor
ins
pop
cs
push
jo
or
xchg
mov
jno
push
mov
out
sub
pop
mov
mov
xchg
das
aam
pop
push
in
in
in
fbstp
pusha
xchg
mov
push
or
xchg
movs
loop
adc
loopne
out
cmps
inc
aas
sahf
sub
mov
(bad)
sar
mov
or
dec
xchg
mov
test
or
cmp
xchg
push
mov
movs
xchg
push
mov
push
js
lea
imul
mov
add
sub
js
pusha
shl
or
cdq
lahf
inc
call
add
nop
sub
fnstenv
enter
aas
inc
mov
push
adc
call
and
dec
fidivr
xor
sbb
dec
ins
nop
movs
xor
sbb
sbb
scas
mov
add
popf
dec
lds
inc
jae
push
and
mov
or
adc
jmp
push
loopne
mov
adc
repnz
int3
shr
add
add
(bad)
sub
jl
add
dec
je
fsubr
scas
adc
pop
dec
aas
or
add
shr
ins
add
or
push
or
inc
in
mov
xchg
fcmovnu
sub
mov
and
xchg
loopne
sbb
lahf
adc
adc
mov
ret
sub
cmp
mov
inc
sub
mov
les
pop
fwait
sbb
movs
xchg
and
dec
jg
mov
test
mov
mov
mov
aam
jge
mov
shl
push
mov
pop
or
aam
sub
cmp
jle
outs
push
test
sub
call
sbb
imul
inc
aas
push
push
dec
sub
cmc
jg
jb
push
fs
jmp
add
inc
pop
mov
mov
xchg
out
add
loop
adc
inc
inc
fnstcw
xor
inc
loop
xor
shr
cmp
clc
xlat
out
or
imul
mov
inc
mov
dec
movs
js
(bad)
sub
(bad)
ins
jg
pop
into
icebp
push
push
imul
mov
and
cmc
cmp
sub
xchg
push
push
add
inc
cmp
jo
mov
mov
add
jl
push
je
dec
jge
retf
lods
test
mov
(bad)
les
and
ds
sbb
jp
movs
or
xor
repnz
mov
es
dec
pushf
or
push
jecxz
cs
movs
or
or
int3
mov
adc
es
popa
sbb
sbb
je
push
pop
mov
add
sar
pop
cld
add
jno
cld
int3
cmp
nop
xchg
jnp
adc
cwde
or
dec
es
add
sar
aad
or
and
push
jb
mov
mov
or
mov
mov
scas
pop
add
out
movs
ret
lea
and
sbb
mov
rcr
cdq
pop
aaa
sub
or
push
outs
jl
sbb
call
sbb
loopne
imul
mov
pop
fcom
hlt
mov
jmp
jmp
xchg
add
add
fsubr
xor
mov
push
std
xor
push
and
push
push
mov
dec
pop
and
and
add
mov
add
inc
aas
lea
stc
aaa
or
sub
iret
sub
in
mov
and
xchg
or
adc
mov
(bad)
es
or
adc
stos
push
sub
xor
shr
push
push
imul
std
(bad)
cmp
mov
nop
call
in
jg
call
add
and
and
and
cmc
retf
leave
push
enter
dec
sub
inc
mov
cdq
sub
mov
fs
xor
cmps
push
mov
xchg
pushf
mov
(bad)
in
cmps
push
jg
out
mov
test
mov
ds
xchg
lock
inc
or
dec
inc
dec
lods
dec
(bad)
jg
dec
enter
fwait
enter
jg
add
add
js
or
fisttp
stos
call
mov
es
mov
and
push
sub
lock
sub
or
clc
movs
jno
inc
cmp
mov
pop
call
dec
cmp
push
test
imul
push
call
sbb
popa
xchg
sub
push
daa
lea
xchg
(bad)
mov
cmp
int3
pusha
cmps
push
shl
push
int3
and
push
push
stos
jno
jne
aam
sub
sbb
inc
xor
scas
imul
xchg
and
sub
inc
or
lods
call
cld
dec
aas
push
adc
leave
push
lds
add
sub
sub
das
add
dec
dec
add
push
push
xor
push
popa
sbb
jle
jae
ret
mov
mov
add
jmp
ror
out
and
xchg
mov
xchg
es
mov
and
and
mov
or
dec
xchg
dec
mov
jno
adc
pop
sub
(bad)
push
sar
call
inc
call
add
push
pop
push
imul
test
xor
ins
mov
sub
mov
mov
inc
(bad)
aaa
sub
mov
cmp
push
or
mov
mov
int3
fnstsw
ins
enterw
pop
or
lock
leave
jle
scas
cli
push
sbb
or
and
fstp
xor
jbe
inc
imul
mov
xchg
adc
(bad)
test
inc
and
adc
mov
inc
in
add
packssdw
or
mov
adc
or
jb
sbb
xchg
sbb
addr16
push
inc
and
cmp
adc
mov
mov
mov
je
adc
sbb
in
cmp
cmp
fptan
pop
and
xchg
xchg
mov
push
mov
push
pop
enter
cli
add
in
xchg
xchg
adc
or
push
dec
aaa
leave
and
xchg
jl
outs
mov
js
iret
gs
js
adc
or
xchg
adc
sbb
mov
dec
push
mov
xchg
pushf
or
push
lock
mov
cwde
cwde
cmps
leave
and
lea
into
aam
mov
jmp
and
and
loopne
adc
or
les
push
mov
add
or
stos
jg
xor
adc
nop
ins
inc
mov
adc
jne
lahf
fcom
xchg
adc
mov
and
cmc
jnp
inc
cmp
mov
inc
mov
add
push
lea
xor
js
popf
mov
test
in
pop
add
je
inc
cmps
nop
sbb
inc
inc
and
pop
add
sbb
dec
dec
mov
js
sub
call
fninit
fld
adc
retf
dec
push
cmp
enter
sbb
push
sub
(bad)
icebp
sbb
or
in
xor
ret
aas
inc
cmp
jmp
popf
aaa
popa
and
add
or
add
add
fmul
sub
adc
test
mov
mov
xor
add
mov
or
nop
add
mov
and
bound
xchg
add
sbb
jbe
mov
into
rcr
pop
pop
inc
push
mov
add
enter
test
aas
out
ins
sub
inc
push
pop
bound
mov
adc
(bad)
and
or
add
adc
ds
js
daa
ss
and
clc
pusha
sub
stos
lock
int3
add
cmp
jne
cmp
mov
push
pop
dec
lea
jae
xor
dec
push
aaa
fwait
lock
mov
adc
sbb
sub
or
int3
sub
(bad)
fwait
cmp
hlt
or
cli
or
jnp
xchg
add
adc
sbb
xor
in
in
add
icebp
add
xor
je
scas
pop
pop
fs
mov
push
pop
or
xor
fcom
outs
xchg
repnz
add
mov
out
push
add
add
mov
cld
add
and
ja
or
in
fcom
add
mov
xor
leave
or
adc
mov
sbb
rcl
dec
sbb
cmp
cmp
sub
mov
sub
push
cmp
sub
xor
shr
xrelease
mov
add
add
(bad)
pop
clc
aas
je
ds
jmp
and
ret
sbb
leave
fs
pop
xchg
adc
aaa
inc
sbb
sub
add
and
clc
test
nop
cli
pop
fild
push
mov
retf
xor
mov
push
sbb
cmp
adc
xchg
xor
sbb
mov
dec
jo
xchg
in
fisttp
(bad)
arpl
aaa
xchg
cmp
repz
sahf
outs
push
mov
or
mov
adc
dec
pop
xchg
int
pusha
js
mov
push
inc
inc
aam
div
sbb
and
add
test
or
gs
sbb
adc
into
add
push
sbb
jge
nop
sti
pop
cmp
out
sbb
test
inc
push
data16
jnp
out
mov
sub
inc
scas
xchg
sub
iret
pop
ret
mov
lea
add
sub
add
fldcw
push
add
imul
adc
xchg
retf
mov
ror
lea
adc
inc
or
cmc
xchg
lock
or
push
push
out
fild
inc
nop
add
arpl
push
or
(bad)
ss
jne
out
fmul
push
int
xchg
xor
cmp
not
mov
and
cmp
mov
cmp
push
push
mov
call
push
cmp
data16
(bad)
bound
arpl
mov
push
push
or
push
push
inc
mov
or
or
or
fsub
aam
sub
shl
mov
ret
nop
dec
add
sbb
mov
jecxz
add
ds
xchg
ret
inc
xchg
lods
in
push
and
mov
push
sbb
inc
mov
jmp
or
dec
sub
bound
xchg
mov
and
int3
icebp
push
or
pop
imul
outs
or
inc
loope
and
xor
pop
aaa
fs
jo
je
push
cmp
jmp
jle
das
jbe
sbb
cmp
mov
cmp
cs
or
xor
cmp
push
fcmovu
inc
psllq
int3
not
ret
sub
sub
loopne
or
or
or
rcr
adc
shr
and
push
push
add
mov
stos
mov
sbb
jl
cmp
adc
enter
mov
add
mov
xor
mov
xchg
xor
sub
add
and
and
push
je
dec
add
mov
or
jmp
addr16
and
imul
outs
xor
dec
sbb
test
adc
push
sbb
xor
ret
mov
rol
mov
add
sar
sbb
movs
mov
add
fadd
inc
cdq
les
adc
mov
jne
je
or
and
dec
call
push
xchg
pop
xor
add
sbb
inc
xchg
mov
mov
dec
rol
nop
mov
(bad)
shl
ret
pop
leave
jmp
and
jo
push
test
lods
ja
pop
adc
xor
adc
xchg
nop
imul
in
test
push
mov
and
pushf
lea
add
sbb
mov
adc
cmp
es
dec
pusha
dec
lods
(bad)
aaa
push
mov
pop
sbb
dec
(bad)
cmp
jecxz
or
add
cmp
adc
and
pop
or
mov
cmp
je
pop
sbb
and
mov
dec
pusha
push
lahf
or
hlt
sbb
cmp
sbb
je
inc
retf
pop
mov
pop
xor
or
je
pop
or
rcr
lea
mov
les
stos
(bad)
sbb
jb
leave
std
pop
mov
ret
fadd
xor
sbb
pushf
or
sti
mov
and
add
inc
in
add
aam
dec
push
sub
mov
xchg
xchg
out
or
pusha
or
and
add
bound
hlt
sbb
inc
and
or
sahf
lahf
mov
inc
adc
fld
push
(bad)
ss
(bad)
dec
and
les
ss
cmp
pop
rcr
aaa
inc
mov
pop
xor
test
sbb
nop
es
inc
mov
sub
adc
sahf
add
dec
cmp
or
xchg
push
lods
mov
xchg
lds
or
pusha
sub
sbb
enter
adc
in
and
xor
lock
mov
add
inc
test
xchg
call
xor
xchg
retf
lock
(bad)
in
sub
add
hlt
push
in
mov
mov
and
adc
push
movs
adc
push
retf
call
or
fmul
in
lock
in
sub
or
xchg
test
inc
inc
test
sub
adc
in
mov
add
xchg
add
lods
jne
sbb
xchg
(bad)
call
or
enter
mov
xor
into
xor
mov
nop
xor
or
test
ror
jo
je
mov
mov
mov
arpl
mov
mov
test
out
inc
inc
xchg
sub
mov
pop
jp
jnp
lea
movs
aam
dec
pop
aam
and
nop
mov
mov
or
inc
ins
push
loop
or
ss
(bad)
dec
or
mov
push
sti
fidivr
and
mov
add
mov
push
pop
or
ins
mov
push
in
imul
adc
fs
or
push
push
jo
add
lock
cmp
mov
adc
leave
add
adc
(bad)
jecxz
movs
pop
sub
xor
loop
clc
inc
jno
jg
and
mov
add
test
xor
sti
or
mov
add
std
or
pusha
shl
das
fs
and
sub
in
mov
or
sbb
add
add
add
movd
popf
or
into
les
sbb
mov
leave
fcomp
mov
fisubr
icebp
pop
mov
push
retf
jb
mov
xchg
or
clc
and
rcr
(bad)
sub
jo
or
mov
stc
sub
jmp
mov
mov
das
cmp
xchg
jmp
sbb
add
je
adc
add
icebp
jno
mov
addr16
inc
(bad)
cmp
or
add
dec
leave
push
dec
mov
dec
leave
adc
xchg
enter
xor
mov
cmp
jbe
push
adc
pushf
xor
dec
add
or
xchg
clc
jb
(bad)
mov
test
mov
mov
or
rcl
add
xchg
dec
and
sub
cmp
push
jnp
ds
mov
arpl
cmps
push
cmp
iret
inc
(bad)
xor
cmp
mov
das
xchg
cld
and
xor
mov
push
add
aaa
loop
mov
lods
lods
pusha
xchg
movs
push
out
mov
leave
mov
das
stos
and
test
and
in
inc
pop
ins
sub
add
out
adc
cmps
or
add
add
bound
inc
inc
push
lea
xor
je
dec
rcr
or
push
nop
std
add
pop
pop
test
adc
push
cmp
je
add
in
pop
xchg
add
mov
or
lods
cld
dec
cld
idiv
push
push
hlt
push
in
adc
add
repnz
jae
loopne
icebp
shl
and
call
push
add
stos
add
cmp
mov
add
inc
mov
ret
inc
loope
les
ror
cs
lock
rcl
xor
adc
lock
cmp
pop
sbb
add
inc
in
mov
pop
adc
popf
xchg
adc
xchg
shl
mov
mov
stos
sub
push
stc
rcl
and
and
jmp
retf
xor
pop
addr16
sti
push
or
mov
into
pop
lods
dec
out
adc
jmp
sub
sub
lea
(bad)
push
push
push
js
add
outs
pop
test
sbb
cmp
push
push
add
(bad)
and
je
push
mov
inc
sar
lock
add
fwait
xor
xchg
adc
xchg
jl
adc
xor
inc
sbb
dec
jg
or
pop
mov
cmp
outs
mov
cmp
and
pop
or
pusha
jbe
pushf
dec
cmp
sub
inc
and
adc
sbb
fsub
or
jo
sbb
popf
dec
sub
shr
pop
push
sti
scas
cmp
loopne
dec
fs
(bad)
gs
call
nop
scas
lds
les
cld
jo
cwde
adc
xchg
xchg
adc
pop
ja
stc
or
std
jne
call
add
pop
cmp
push
jo
loopne
stos
loopne
and
stc
ret
add
popa
or
dec
mov
stos
inc
sar
(bad)
in
call
dec
sub
cmps
add
gs
jmp
jb
mov
pop
fsubr
push
aad
push
int3
fs
loopne
repz
leave
and
mov
(bad)
inc
sbb
stos
rcr
aad
cmps
xor
cwde
add
jne
das
imul
mov
popf
add
add
add
sbb
jle
inc
loopne
sbb
xor
inc
fdivr
pusha
arpl
sahf
lods
(bad)
call
jns
imul
ret
jmp
push
dec
jl
sbb
mov
ins
stos
adc
or
retf
dec
imul
sbb
cmp
enter
push
sub
jo
xlat
inc
mov
jo
jb
cmc
mov
adc
ds
(bad)
mov
call
nop
stos
adc
dec
xchg
lea
shr
add
mov
adc
jo
inc
lods
std
or
mov
xchg
xchg
xchg
xchg
sub
std
sbb
cld
or
int
inc
push
adc
lea
and
and
push
xchg
add
ret
arpl
push
daa
ins
outs
cli
xchg
or
rcr
inc
loopne
ret
shl
inc
das
add
rcl
adc
push
cmp
or
add
fdiv
fs
outs
mov
test
retf
sahf
test
rol
std
add
dec
inc
sub
xor
mov
sub
or
mov
into
inc
inc
jge
xchg
cs
(bad)
sbb
add
cld
push
mov
arpl
xchg
inc
add
(bad)
xlat
xchg
sbb
xor
mov
sub
push
pop
push
pop
mov
fmul
(bad)
fs
js
jmp
dec
push
inc
push
mov
push
or
add
push
enter
cdq
inc
into
xor
std
jne
add
cmp
add
or
imul
add
push
stos
bound
das
inc
mov
mov
lock
or
test
dec
sbb
inc
push
push
push
call
adc
pop
push
push
les
adc
fwait
int3
ret
push
push
repnz
adc
pop
mov
dec
fild
imul
mov
aam
hlt
adc
push
adc
(bad)
int
aaa
cmps
sub
lahf
jmp
fs
outs
sbb
xchg
sbb
mov
daa
enter
cwde
mov
adc
jb
les
loop
sbb
mov
or
dec
shr
mov
imul
inc
push
pop
stc
or
push
pop
push
and
push
retf
shl
mov
mov
adc
mov
lods
jnp
outs
adc
rcl
hlt
inc
adc
aas
push
or
cmp
xor
jo
cld
sub
addr16
lock
cmp
popf
dec
add
loopne
sbb
mov
and
adc
cmp
or
xlat
cmps
lds
jl
push
cmp
sub
jl
inc
mov
or
dec
pushf
cmp
mov
jo
add
and
enter
movs
sub
inc
inc
das
rcl
push
adc
stos
sbb
add
add
pop
and
cmp
push
push
cs
iret
pop
adc
ja
mov
jns
and
mov
jp
ja
add
mov
jge
xor
enter
jae
xor
and
pushf
jno
lea
mov
sysexit
xchg
add
daa
pop
dec
or
push
pop
sub
js
mov
in
xchg
or
push
add
js
(bad)
mov
or
jnp
xor
rcl
sahf
jno
ins
inc
mov
test
push
add
adc
sbb
movs
cdq
push
add
inc
call
push
adc
jno
cmc
push
mov
bound
fs
add
std
das
sbb
cmp
mov
call
ja
inc
jle
xor
dec
ins
jmp
mov
movs
shl
(bad)
mov
mov
add
jae
cmp
mov
and
add
adc
dec
jmp
and
addr16
inc
enter
inc
lea
mov
mov
adc
inc
inc
in
call
add
cld
mov
inc
push
ins
sbb
cmp
ficom
mov
test
pushf
cmp
and
in
fdiv
xor
movs
jl
cmp
mov
sub
pop
sub
mov
push
in
mov
loopne
push
jg
cmp
or
and
mov
and
mov
cmp
jge
add
xor
dec
iret
fidivr
ror
pop
jb
jp
out
gs
and
sub
shl
movs
xchg
test
out
inc
rol
outs
mov
in
std
and
mov
sbb
jne
xchg
add
sub
fcmovnu
xchg
xchg
fs
lods
sbb
push
xor
stos
and
retf
inc
test
sub
xor
or
stos
push
cmp
shl
gs
adc
pop
stc
into
imul
aam
into
add
xor
pop
in
retf
or
xchg
and
or
push
and
jle
mov
mov
aaa
in
aaa
stos
sbb
mov
cld
test
dec
imul
dec
adc
cmp
out
sbb
push
pop
add
enter
push
inc
and
push
stos
or
push
loop
movs
arpl
test
js
xor
xor
sbb
inc
xchg
out
sti
(bad)
pusha
add
jo
cld
pop
mov
bound
jmp
or
push
(bad)
(bad)
xchg
icebp
mov
cmp
mov
add
push
push
inc
js
inc
add
jb
push
mov
(bad)
std
jl
lea
inc
jmp
xchg
out
mov
repz
cmp
inc
loope
cmp
mov
retf
push
sti
sub
test
aam
inc
lods
xchg
xchg
pop
nop
xchg
xchg
add
pop
mov
push
cs
leave
ficom
inc
popa
mov
or
inc
or
pop
or
mov
sub
mov
jl
mov
mov
clc
ins
inc
sub
call
dec
dec
out
outs
in
or
test
push
mov
adc
jb
dec
sbb
inc
cld
or
out
pop
and
jnp
test
pop
add
xor
adc
add
loop
push
jg
or
xchg
inc
mov
cmc
dec
mov
cli
sub
jnp
add
loope
shl
add
mov
push
ret
loopne
jmp
out
scas
nop
out
pop
xchg
mov
(bad)
sub
mov
lock
dec
dec
push
out
adc
je
inc
or
lea
jne
nop
test
sbb
pusha
cmp
cld
add
sub
push
test
test
sar
test
adc
(bad)
js
test
push
cmps
aad
mov
push
mov
aas
mov
inc
mul
mov
das
cwde
pushf
out
pmaddwd
xchg
pop
adc
pop
cmp
fimul
pop
inc
pop
in
pushf
add
sar
scas
pushf
add
mov
retf
fbld
xchg
cmp
xchg
lahf
jae
pop
push
push
jo
cmc
rol
inc
sub
pop
add
lock
dec
popa
mov
xchg
xor
popf
mov
pushf
scas
xchg
(bad)
jnp
mov
enter
lods
pushf
lahf
jno
jl
add
imul
outs
pop
xor
add
aam
(bad)
mov
adc
xchg
dec
mov
test
ret
retf
loope
and
add
sbb
adc
xor
cs
aaa
adc
lds
push
mov
scas
scas
je
or
sub
cmp
jbe
fild
cwde
mov
hlt
jns
imul
dec
loope
xchg
mov
push
lea
cmps
fist
xchg
add
ds
imul
lods
sbb
inc
sbb
mov
jb
cs
test
retf
scas
mov
jp
ror
ror
sti
or
inc
loopne
and
arpl
push
xor
and
lea
pop
and
or
or
dec
push
or
or
fisttp
push
jg
lock
pop
adc
icebp
or
sub
push
rcr
dec
dec
jae
add
add
and
xchg
add
sbb
out
xor
push
xchg
(bad)
das
(bad)
stos
inc
test
imul
sbb
inc
mul
or
call
push
lock
and
movs
clc
(bad)
rol
(bad)
push
add
push
cdq
push
jp
sbb
mov
jne
in
add
and
xor
cmp
je
dec
sbb
lods
lahf
(bad)
xchg
add
into
(bad)
imul
push
xor
inc
jl
jne
or
push
mov
mov
(bad)
adc
cmp
nop
sub
push
and
ja
or
sbb
mov
movs
cmp
inc
call
dec
push
sub
mov
in
xchg
inc
mov
cmps
mov
inc
and
lods
mov
inc
rcl
dec
add
add
clc
nop
test
or
cmp
add
mov
iret
dec
(bad)
cmp
out
in
add
rcl
xchg
sbb
popa
or
inc
or
int
xchg
imul
push
sbb
push
sbb
cmp
or
dec
dec
and
pop
cs
jp
jno
sbb
pop
add
add
cmp
and
inc
cwde
mov
mov
cmc
xchg
fstp
pop
dec
sub
add
dec
shl
mov
test
add
pop
dec
pusha
sub
adc
and
inc
or
out
lds
retf
jmp
push
or
lea
in
or
jp
dec
xor
sub
push
stos
dec
push
adc
stos
cmp
test
push
sub
add
pop
adc
sti
adc
adc
sub
add
add
add
mov
inc
dec
or
mov
mov
mov
ret
sbb
cmp
sbb
or
shl
pop
mov
push
mov
scas
sub
sub
or
cmp
add
cmp
jbe
fldenv
inc
add
push
mov
(bad)
jl
pop
leave
mov
mov
jle
push
ds
clc
push
mov
lods
pop
dec
repnz
je
call
or
sub
jno
js
adc
fs
outs
sbb
jmp
sbb
and
dec
leave
repz
lea
sub
add
or
xor
nop
pop
dec
outs
sar
xor
add
mov
add
push
adc
cmp
pop
call
not
and
shl
ror
lea
xor
sub
lea
imul
add
dec
std
(bad)
dec
neg
lods
push
icebp
nop
mov
arpl
push
mov
adc
xchg
xchg
jp
mov
cwde
sbb
jns
nop
scas
add
mov
loop
cli
popf
add
dec
xor
or
sbb
aad
hlt
xchg
or
nop
xchg
jmp
jge
(bad)
xchg
sub
cmp
cmp
sahf
pusha
mov
push
inc
xor
cmp
xchg
xor
jae
xor
mov
and
and
jl
lock
pop
push
adc
mov
mov
pmaxub
dec
add
rol
rol
jo
or
pop
or
pop
xchg
leave
(bad)
adc
push
push
(bad)
cdq
bound
or
retf
dec
add
or
jmp
cmps
shl
adc
mov
dec
mov
add
inc
push
iret
xchg
stc
mov
mov
xchg
dec
xchg
ret
or
fmul
mov
adc
out
test
mov
or
addr16
les
(bad)
imul
aas
and
gs
adc
mov
xor
xchg
dec
cmp
and
mov
jno
fnstcw
mov
ret
daa
test
mov
pop
setle
in
rol
push
leave
ret
mov
das
adc
dec
or
lods
imul
movs
(bad)
je
inc
jbe
mov
ins
rol
adc
in
sub
pop
mov
ret
push
sub
xor
sbb
les
retf
jge
push
sbb
jo
out
push
in
inc
movs
out
pop
lahf
mov
adc
pop
xor
push
add
inc
mov
scas
mov
adc
xor
stos
popa
and
sahf
dec
cmp
xor
lock
or
aam
xor
aas
and
add
fnstcw
cmp
push
and
and
adc
daa
and
jmp
movs
mov
test
jb
shr
jns
mov
pushf
pushf
pop
xor
cmps
push
push
jge
and
cwde
push
(bad)
mov
je
push
nop
add
addr16
(bad)
es
adc
cmc
imul
add
mov
mov
push
xchg
push
sub
and
mov
push
call
and
jl
xchg
loope
inc
xchg
or
push
in
or
mov
and
mov
xor
mov
sbb
in
or
or
sub
fcmovnb
xchg
inc
(bad)
mov
inc
xchg
mov
add
pop
add
sti
cmp
je
not
ret
xchg
dec
ja
mov
mov
shl
mov
dec
sub
mov
pushf
repz
adc
pop
xchg
sar
retf
sub
nop
mov
push
push
sub
test
imul
cmp
ror
push
push
rcl
pushf
je
test
loope
enter
imul
lds
mov
je
push
arpl
pusha
adc
xor
mov
shl
cmp
mov
bound
mov
mov
cwde
mov
mov
into
pop
mov
or
ret
push
adc
mov
retf
adc
push
out
inc
inc
lock
or
jbe
mov
dec
ret
inc
(bad)
and
rcl
push
push
adc
arpl
cmc
push
mov
call
add
jmp
imul
pop
jmp
shl
inc
jo
aad
fidiv
js
fbstp
push
mov
mov
cmp
mov
cmp
cwde
adc
test
pusha
push
and
sti
mov
(bad)
sbb
mov
enter
add
jo
rcr
add
adc
sbb
nop
add
dec
enter
add
lea
push
pop
mov
xlat
bound
dec
outs
add
xchg
pop
ret
sbb
dec
push
mov
aaa
xchg
aaa
or
push
daa
and
mov
sbb
push
or
cmp
add
mov
inc
jecxz
outs
fisttp
fs
out
mov
in
mov
mov
leave
mov
xchg
mov
add
jmp
cli
or
dec
mov
push
add
shl
fwait
test
add
sub
dec
xchg
or
jo
and
pop
add
dec
mov
dec
add
add
xchg
cwde
add
or
pusha
sub
mov
xchg
inc
leave
inc
or
sub
sub
add
push
adc
ins
xor
bnd
fwait
push
add
add
ss
xchg
add
(bad)
bound
out
ret
lods
loopne
adc
rol
jnp
push
mov
movzx
sbb
push
adc
or
(bad)
pop
pop
push
xchg
ins
inc
adc
pusha
sub
sbb
push
dec
and
lock
(bad)
(bad)
hlt
pop
pop
pop
push
sub
pop
and
leave
inc
xchg
inc
sub
jb
and
inc
mov
xor
add
or
push
cwde
xchg
loopne
cmp
push
stc
inc
call
daa
adc
or
jno
fadd
out
and
add
jno
loopne
xchg
add
or
push
lds
outs
pop
mov
imul
aaa
add
loopne
cmp
leave
test
nop
test
mov
push
nop
jo
icebp
enter
mov
inc
cmp
jl
jne
mov
(bad)
add
xor
dec
jne
mov
imul
or
or
xchg
or
push
or
and
xor
nop
pop
fild
mov
cmp
loopne
dec
push
clc
xchg
xchg
push
out
test
fwait
jp
bound
adc
dec
pop
add
xchg
xor
or
and
pop
inc
iret
cmp
jl
jge
add
xchg
(bad)
and
jae
adc
dec
cdq
jg
push
(bad)
leave
jp
xchg
add
inc
adc
lods
push
add
add
aam
(bad)
iret
stos
xor
push
inc
lock
mov
push
fiadd
repz
jge
lock
or
adc
pushf
dec
pop
adc
into
jle
push
dec
jne
add
adc
dec
sub
add
mov
push
rol
rol
ror
or
inc
cs
push
add
xor
ja
jne
imul
push
int
add
rcl
push
pop
pushf
sub
cdq
mov
adc
nop
stos
adc
mov
in
adc
ret
fist
mov
cdq
retf
retf
or
add
xchg
outs
xor
call
add
(bad)
push
push
mov
fist
and
fs
test
cs
or
inc
in
pushf
es
loopne
gs
adc
adc
dec
jle
outs
inc
pusha
adc
adc
add
xchg
sbb
out
call
push
stc
mov
mov
repnz
ror
add
xor
int3
fwait
mov
push
sub
adc
push
xchg
xor
push
shl
or
or
outs
icebp
and
push
xor
mov
dec
int3
stc
push
int3
push
push
inc
jg
mov
mov
or
rcl
xchg
cmp
or
or
and
and
and
retf
push
jae
fmul
hlt
push
dec
fdivr
in
pop
mov
popa
xchg
add
jmp
mov
imul
pop
sbb
call
dec
in
add
out
adc
pop
mov
mov
sub
dec
add
repnz
cdq
jmp
xor
sub
mov
mov
mov
fcomp
push
push
mov
push
jge
add
dec
or
mov
add
dec
mov
add
add
mov
xor
pop
or
dec
pop
sub
adc
movaps
jbe
pop
xor
add
out
fadd
add
mov
or
xchg
fwait
lea
add
adc
dec
inc
dec
inc
jmp
or
pop
aad
mov
cwde
pop
sar
xor
aam
(bad)
mov
or
cmp
pop
cmp
adc
jb
mov
(bad)
push
push
stos
es
or
mov
xor
out
mov
mov
xor
mov
gs
pop
mov
jg
mov
xchg
sub
inc
test
or
lea
sub
mov
ss
xor
es
dec
jno
stos
and
add
push
pop
push
sti
push
or
and
sbb
int3
int3
int3
stc
nop
loope
jnp
and
int3
push
adc
pop
xchg
out
jnp
sbb
inc
ins
cmp
in
mov
shr
ss
jmp
and
fwait
xor
jmp
cmp
pop
adc
cli
cmp
or
jmp
adc
test
inc
mov
or
loope
dec
pop
pop
test
lahf
or
popf
inc
or
sbb
shr
fisttp
jmp
push
add
movs
xor
cwde
in
test
sbb
scas
push
push
add
push
pop
and
mov
push
je
pop
inc
pop
add
rol
movs
aad
push
jno
(bad)
mov
(bad)
call
mov
inc
inc
xor
addr16
sbb
out
sbb
lods
xor
mov
inc
ds
pusha
std
add
iret
les
out
mov
aas
push
push
pusha
std
inc
sbb
adc
ror
rol
jb
in
add
add
cmp
xchg
pop
sub
push
inc
clc
or
mov
(bad)
and
sbb
fimul
xchg
cmc
dec
pop
and
iret
jne
and
stc
inc
js
mov
jl
add
enter
jg
inc
enter
mov
push
imul
push
jae
int3
jmp
pop
mov
jge
jb
jae
xor
xor
pop
cmp
inc
sahf
inc
add
ret
out
in
gs
and
add
jb
jo
jo
inc
pop
cmc
mov
ins
sub
pop
retf
mov
and
imul
dec
ret
pusha
mov
adc
mov
cwde
push
pop
mov
dec
ror
enter
repnz
pop
nop
fcomp
pop
push
or
inc
shl
shl
xchg
lea
mov
fcom
sbb
and
les
pop
or
inc
xchg
add
pop
lea
mov
aaa
inc
mov
stc
or
and
ret
and
popf
cmp
(bad)
xor
or
cmp
outs
cmp
call
lahf
add
add
add
mov
push
and
xor
inc
push
adc
ret
add
pop
sbb
lods
test
adc
and
adc
and
push
popa
jp
pop
cmp
add
sbb
jne
or
sub
mov
mov
push
cmp
(bad)
jl
adc
mov
dec
cmps
pop
bound
push
ror
cld
jno
and
jge
add
and
push
or
inc
sbb
movs
cmps
sub
data16
es
gs
imul
or
xor
adc
or
pop
push
sbb
xor
mov
mov
push
adc
imul
xor
push
sub
imul
rcr
ret
xchg
sbb
int3
pusha
add
push
ins
fwait
dec
jo
jg
push
pusha
adc
jne
xchg
push
xor
les
adc
sub
push
xor
add
xchg
jnp
shl
test
test
mov
push
sar
xchg
fs
leave
test
push
pusha
mov
jmp
inc
or
xchg
test
or
adc
stc
adc
push
add
test
push
and
cwde
xchg
and
sbb
pop
adc
push
mov
idiv
mov
ret
push
(bad)
scas
aas
hlt
push
nop
cmp
ss
sub
stos
add
inc
cmp
sub
push
jne
aaa
mov
aad
(bad)
(bad)
and
dec
fimul
xor
sbb
adc
outs
mov
jne
sub
cmp
or
add
sahf
adc
cmc
popa
adc
and
pop
test
clc
adc
aas
mov
mov
and
adc
nop
lea
outs
add
(bad)
loope
arpl
adc
rol
mov
sti
je
shl
inc
xchg
push
xchg
xor
mov
lahf
je
sbb
jmp
jae
movs
inc
cs
rcr
bound
imul
sub
sar
jmp
or
sti
pop
sti
push
int3
xor
sbb
xchg
xor
sub
inc
pop
inc
or
mov
fild
fs
add
xchg
mov
dec
jmp
(bad)
sub
and
inc
fwait
push
mov
jbe
cmp
adc
inc
or
jge
pop
sbb
jmp
dec
cmp
bound
inc
jae
fmul
add
add
sbb
push
(bad)
mov
je
jnp
pop
shr
fnsave
pop
ins
aam
dec
(bad)
mov
out
pop
add
add
daa
cmc
xchg
(bad)
call
push
or
jmp
lds
sub
ss
and
xor
add
dec
repnz
xlat
mov
cld
stos
add
leave
mov
sbb
adc
inc
lock
outs
test
sub
xchg
adc
(bad)
fldenv
sar
mov
iret
jbe
call
sub
and
or
cmp
sbb
cs
lea
ret
cmovl
bound
rol
sub
sbb
int3
jl
push
sub
fcomp
push
mov
cwde
sbb
add
cmp
data16
pop
mov
inc
enter
adc
pop
adc
inc
adc
add
inc
mov
or
mov
push
push
lds
push
pop
dec
retf
cmp
ds
pop
jae
pop
inc
addr16
call
pusha
add
fs
loope
sbb
sub
cli
sub
cs
cmp
ss
inc
popf
test
add
push
mov
or
push
pusha
cli
daa
and
jnp
xchg
(bad)
xor
pop
inc
add
(bad)
cs
xor
nop
pusha
add
mov
ret
adc
mov
lock
or
test
cdq
out
call
and
ss
cmp
(bad)
mov
shl
lea
shr
dec
call
ins
adc
mov
push
(bad)
repz
mov
sbb
movs
sar
and
cld
push
and
jb
sub
jne
imul
jl
dec
mov
jmp
pmulhuw
test
jb
inc
int3
test
pop
and
sbb
dec
fstp
xchg
push
lea
inc
mov
daa
pop
mov
push
mov
add
ja
adc
push
add
sbb
jne
push
mov
jne
jp
int3
inc
lea
add
xor
xor
bound
shrd
or
test
xchg
sar
add
jg
arpl
push
bound
inc
xchg
xor
dec
sub
sbb
int
inc
les
nop
(bad)
jmp
call
pop
mov
popa
pop
cmp
or
mov
push
inc
pop
test
imul
popa
push
lock
test
or
stos
sub
arpl
stos
sub
test
mov
push
dec
xor
stos
stos
stos
or
fisub
and
cmp
adc
ins
jmp
fidivr
mov
sbb
or
push
inc
mov
mov
dec
add
sub
push
mov
sbb
int3
or
sub
inc
dec
and
and
fcomp
in
mov
xor
or
pusha
mov
or
shl
data16
jecxz
sub
test
mov
dec
sbb
fdivr
cmps
sbb
sar
mov
movs
or
cmp
push
mov
enter
mov
pop
jne
xchg
pusha
or
add
pop
(bad)
or
and
adc
inc
mov
push
mov
and
and
and
leave
pop
push
ret
adc
enter
sub
cmp
mov
pop
stos
jmp
pop
add
imul
or
into
lds
mov
dec
mov
aaa
nop
std
movs
or
cs
mov
mov
mov
mov
sbb
cmp
sub
adc
dec
or
sbb
add
call
jg
mov
and
mov
push
(bad)
add
jns
cmc
push
(bad)
or
inc
mov
call
jns
and
or
aaa
push
ret
rcl
add
jg
and
stos
inc
adc
daa
or
int
pop
xchg
mov
cmp
dec
pop
jo
adc
clc
inc
push
push
add
adc
pop
rcl
lods
mov
stos
mov
mov
adc
rcr
jg
ins
push
add
add
xor
and
movs
in
add
pushf
test
lods
mov
push
add
shr
xchg
sub
push
fimul
pop
sub
test
inc
add
add
dec
mov
jge
pop
nop
sbb
aas
ret
cvtpi2ps
call
inc
dec
jp
add
mov
adc
push
jnp
mov
ins
xchg
hlt
mov
or
pusha
and
mov
stos
xchg
int
pop
mov
cmp
das
leave
xadd
cld
jge
mov
movs
rol
retf
fstp
rol
lea
nop
ds
cmps
sbb
cdq
xchg
add
and
or
nop
and
jg
and
mov
and
and
fcom
and
and
leave
mov
and
pop
cdq
mov
cld
inc
fbld
inc
and
pop
and
popf
jmp
xor
mov
and
pop
pop
cs
mov
pushf
ss
cmp
fisub
mov
adc
loopne
or
stos
stos
or
add
dec
pop
push
inc
push
sub
adc
test
and
dec
test
add
enter
stc
xor
xchg
or
and
dec
xchg
cmp
jmp
mov
popf
sbb
jne
cmps
mov
xor
xor
jle
cs
jae
call
xor
fstp
push
fld
and
pusha
jecxz
xor
rol
push
aad
mov
add
mov
dec
add
inc
cmc
or
jmp
mov
rcr
sbb
sbb
scas
dec
and
and
push
mov
popa
dec
inc
dec
daa
or
add
cmp
dec
pop
sbb
mov
push
fs
jmp
sbb
rcr
sub
add
aam
pop
addr16
push
xor
addr16
scas
leave
aam
push
jge
mov
push
aad
xor
push
cmp
dec
(bad)
push
dec
es
cmps
cwde
inc
dec
push
retf
addr16
or
and
cmp
fild
inc
push
iret
ins
enter
fcmovnu
shr
lods
shr
lods
shr
lods
sar
cmps
push
pop
and
and
cs
mov
pop
sbb
push
push
jg
fwait
enter
sbb
and
fs
ds
adc
mov
loopne
push
xchg
test
jne
cdq
fiadd
pop
jne
cli
sbb
push
xchg
inc
add
sbb
pop
leave
js
and
xchg
pushf
or
and
pop
enter
push
ror
ror
repnz
and
pop
and
or
or
push
add
and
push
mov
nop
add
lods
xchg
inc
and
mov
mov
in
pushf
test
pop
aad
sahf
dec
sub
in
inc
and
inc
es
shr
inc
pop
dec
mov
addr16
jp
cmp
push
sub
or
test
imul
fild
pusha
add
adc
and
mov
jno
pop
and
inc
in
mov
push
imul
fwait
push
enter
or
add
outs
push
or
jb
fadd
enter
cmp
adc
dec
ss
jle
or
or
pop
repnz
cmp
ret
popf
cmps
mov
aas
int3
int3
mov
or
jle
xor
ins
inc
int
in
cmp
mov
mov
adc
jle
inc
add
xor
dec
push
enter
hlt
ret
outs
dec
test
jmp
cmp
push
push
xchg
mov
dec
and
add
ins
inc
or
ret
xchg
fcom
dec
fmul
xchg
lock
call
mov
repz
adc
xor
dec
mov
xchg
sahf
mov
adc
mov
cld
cld
(bad)
add
or
enter
dec
adc
inc
gs
arpl
pop
or
xor
scas
pop
frstor
call
lods
sbb
dec
push
xor
imul
xchg
add
xchg
and
adc
arpl
mov
sub
neg
push
sbb
cmp
je
fmul
stc
mov
stos
loop
xor
jne
mov
pop
push
pop
nop
test
fild
nop
pop
push
in
sar
sti
(bad)
sub
adc
xchg
sbb
adc
rcr
lahf
xchg
cmp
inc
pop
sub
dec
(bad)
popa
add
leave
inc
pushf
mov
push
fimul
and
pop
and
lods
lahf
jb
cmp
and
mov
and
inc
and
jns
push
fimul
fimul
mov
xchg
sbb
inc
push
fmul
(bad)
sbb
sbb
and
(bad)
xchg
test
jb
mov
cmovp
mov
popa
and
cmps
ret
jno
ret
mov
dec
xor
or
add
or
or
or
in
loopne
push
leave
pop
dec
xor
jnp
push
jb
inc
inc
mov
cmp
int
(bad)
pop
mov
leave
jp
ret
(bad)
xor
stos
or
fisubr
pop
sub
lds
jmp
inc
shr
test
adc
mov
xchg
loopne
mov
xchg
jge
loop
xchg
or
in
leave
xor
pop
or
mov
inc
push
ret
mov
lods
dec
fsubp
or
dec
adc
and
aad
adc
adc
jecxz
pop
sub
cmp
(bad)
jns
or
dec
or
and
in
test
xor
rcl
inc
(bad)
fbstp
pushf
adc
(bad)
mov
push
(bad)
(bad)
loopne
jb
or
outs
lods
inc
and
mov
test
nop
pop
add
call
sti
jg
daa
ret
cmp
add
fcmovnb
inc
or
pop
sub
inc
jg
call
dec
push
inc
push
bound
fimul
shl
add
cs
mov
aad
loope
fisubr
cmp
cmp
je
js
(bad)
sub
sub
mov
pop
shl
xor
xor
loopne
enter
xor
pop
push
fsubr
pop
fdivr
mov
or
inc
pop
xor
rcr
mov
dec
or
cs
imul
cmc
lea
neg
je
mov
cs
cli
xor
jle
mov
cmp
jle
outs
movs
push
ja
sub
je
or
push
fs
cmp
rcl
ss
dec
push
dec
rcr
rol
inc
inc
lods
sub
enter
mov
mov
push
dec
dec
(bad)
lods
dec
add
push
fst
jb
cmps
add
adc
cmp
pusha
mov
sub
mov
add
push
nop
cmp
imul
ficomp
pcmpgtb
push
popf
xchg
imul
add
push
mov
pop
jnp
jne
jo
imul
dec
es
sub
pop
mov
xchg
popa
dec
inc
ret
adc
shl
or
sub
mov
dec
sbb
retf
popf
nop
and
and
mov
inc
enter
pop
mov
xor
je
sahf
loopne
pop
push
push
test
jns
dec
nop
pop
iret
(bad)
sub
xchg
dec
sbb
ret
jo
and
or
cmp
and
xor
(bad)
lods
loope
nop
mov
push
repnz
test
inc
xor
sbb
mov
mov
imul
inc
pop
pop
jo
adc
cld
or
test
sbb
push
xor
sub
sbb
jb
pop
dec
aas
js
inc
add
jle
or
sub
and
mov
xlat
and
push
or
fld
add
test
inc
inc
rol
xor
inc
mov
xor
or
sub
adc
cmp
wrmsr
popa
xchg
das
stos
scas
ret
in
dec
sub
push
pop
dec
xor
ins
and
sub
pop
mov
lahf
or
cmp
loope
retf
dec
adc
shl
sub
adc
push
push
sbb
loop
mov
pop
loope
or
(bad)
imul
lods
mov
mov
sbb
push
or
arpl
xor
inc
jnp
add
sub
or
and
and
add
cmps
cmp
jle
pop
adc
imul
adc
or
outs
test
ret
jg
pop
and
xchg
iret
xchg
mov
pop
cmp
mov
mov
inc
dec
leave
push
sbb
(bad)
into
rcl
mov
jo
push
xchg
and
dec
sbb
push
js
pop
xchg
push
inc
xor
sub
xchg
jmp
pop
mov
and
sub
xor
xchg
adc
xchg
inc
add
push
dec
rol
dec
pop
mov
inc
gs
pop
repnz
pop
mov
bound
fst
pop
sbb
loopne
dec
mov
cmp
pop
pop
pushf
xor
cmp
xchg
xor
mov
popf
and
clc
lea
inc
mov
push
push
mov
add
or
(bad)
push
mov
test
inc
pop
xchg
cmps
mov
nop
rcl
rcl
xchg
ret
mov
mov
pusha
push
add
xchg
adc
je
dec
jne
push
adc
pop
movs
dec
mov
sub
out
dec
sbb
aas
fst
mov
cmp
sub
jb
mov
scas
mov
inc
cmp
mov
out
in
and
lods
mov
and
pop
lea
ss
mov
sar
dec
lahf
mov
and
loopne
push
xchg
adc
adc
fcom
jns
or
inc
mov
adc
sbb
test
rcr
movs
out
push
sar
push
cmp
fcomp
and
mov
sbb
(bad)
aas
pop
or
inc
mov
sbb
lock
dec
push
cmp
into
ins
ss
push
pusha
mov
stc
inc
adc
test
adc
call
loope
outs
(bad)
repz
je
repnz
mov
loopne
cmps
pop
pop
adc
add
xor
add
mov
adc
mov
jbe
enter
xchg
sub
and
adc
adc
in
fimul
adc
fidiv
aam
fcom
mov
adc
mov
inc
out
ja
in
inc
push
imul
shr
xor
add
or
jns
cs
sbb
pop
mov
bound
push
dec
loop
push
repnz
call
loop
push
add
xchg
hlt
lds
mov
mov
aam
and
cmc
jg
adc
std
icebp
mov
aad
or
loope
add
or
aas
or
add
add
daa
and
movs
or
adc
pop
xchg
(bad)
pop
xor
add
push
sub
das
lods
int3
ss
pop
xor
in
fs
xchg
add
mov
dec
daa
xor
mov
push
shl
scas
cmp
push
pusha
sub
in
xchg
pop
mov
mov
les
movs
or
lea
mov
push
mov
mov
and
inc
xor
pop
ror
sbb
sbb
mov
pop
(bad)
jae
or
push
push
icebp
and
and
pop
das
sub
mov
xchg
cmp
cdq
shr
push
cmp
mov
out
cmp
push
fidiv
or
mov
mov
inc
fnstcw
movzx
adc
leave
inc
or
int
test
fldcw
jl
push
add
pop
push
sbb
inc
movlhps
test
xchg
js
rcl
shl
sub
fdiv
push
sbb
adc
sbb
addr16
cmp
js
mov
std
push
loope
add
jb
jecxz
jb
dec
imul
addr16
xor
mov
lods
rcl
cs
sahf
sub
adc
or
out
dec
or
push
ror
inc
mov
iret
push
sbb
adc
(bad)
and
test
out
or
sbb
and
and
and
push
xlat
sbb
add
loopne
push
sti
ja
push
std
(bad)
call
adc
sub
aas
pusha
call
mov
lea
call
(bad)
les
into
cmc
fs
mov
out
and
push
xchg
cmc
mov
and
fs
adc
add
arpl
retf
fadd
popa
test
jbe
movs
dec
daa
mov
lock
dec
fldenv
inc
dec
pop
push
movs
cmp
movs
out
pop
add
loopne
or
add
adc
mov
movaps
shl
cmp
adc
mov
ins
push
cwde
adc
je
xor
push
mov
das
lea
or
pop
push
and
dec
jne
mov
rcl
adc
inc
adc
test
cwde
mov
in
call
sbb
cmp
les
xchg
je
push
pop
xchg
and
lods
or
xor
jnp
into
ret
imul
lock
cmc
cmp
fsubr
adc
sub
das
(bad)
fcom
cmp
jbe
push
sbb
pop
inc
mov
fcomi
push
(bad)
pusha
rol
jne
retf
push
sub
jge
aaa
mov
mov
fldcw
fistp
fdivr
add
in
jb
inc
loope
shr
pop
pop
out
push
push
push
push
je
rcl
loope
pop
mov
add
jle
and
adc
sub
or
adc
and
repnz
push
mov
xor
ror
and
test
lods
adc
sub
or
push
pop
jge
push
xor
cmc
mov
dec
pop
inc
js
movs
push
fwait
add
mov
pushf
or
or
mov
das
xchg
std
push
inc
sub
fild
jle
dec
xlat
jne
cwde
add
pop
lock
pop
mov
pop
scas
sub
push
int3
xchg
test
xchg
in
inc
adc
fstp
add
sbb
jne
cmp
jo
pop
pop
xor
inc
adc
push
jnp
dec
push
loop
add
jbe
sti
call
add
sbb
es
stos
jo
clc
cmp
mov
adc
sbb
xor
or
(bad)
sbb
inc
mov
mov
shl
outs
jge
out
dec
or
mov
pop
ror
pop
cmp
pop
loop
add
add
xlat
mov
sub
inc
js
dec
push
xchg
sub
jne
js
push
inc
test
adc
test
dec
adc
and
(bad)
imul
sbb
push
add
mov
adc
jp
cmp
fcom
pop
add
sub
adc
test
cmp
xchg
cmp
das
push
push
add
sub
pop
mov
rol
inc
out
pop
push
std
ror
ror
xor
out
nop
jecxz
jb
adc
add
sbb
xchg
call
inc
call
and
sbb
fnstsw
or
(bad)
addr16
adc
jns
jo
jne
call
adc
adc
and
sub
js
outs
push
into
xor
jge
call
adc
ret
xchg
mov
retf
adc
dec
mov
or
push
fimul
xor
mov
mov
ror
push
mov
xchg
adc
stos
sub
in
mov
ins
retf
cmp
pop
mov
push
cmp
dec
mov
nop
sbb
or
cmp
rol
push
mov
push
cmp
stc
lods
sub
and
add
inc
fld
addr16
mov
inc
enter
sub
cld
pushf
xor
or
mov
mov
leave
or
xor
mov
push
cmp
loop
ret
dec
call
or
xlat
and
test
sti
adc
mov
ret
or
cmp
scas
dec
pop
inc
push
and
aam
pop
and
and
pop
push
idiv
sub
cdq
cmp
adc
clc
daa
shl
xlat
lea
in
daa
sub
movs
pop
or
cwde
sbb
pop
pop
ror
cmp
xchg
or
xor
pop
fild
sbb
adc
push
test
nop
xchg
push
imul
sub
push
push
cdq
mov
repnz
out
xor
push
mov
add
push
popf
mov
add
sub
or
lock
lahf
fcom
xchg
rcl
dec
adc
ret
and
jo
lahf
xchg
call
and
arpl
(bad)
out
cmp
adc
xor
jle
bnd
xchg
pop
push
sub
ins
pop
pop
mov
xchg
push
xor
(bad)
stos
inc
or
inc
lea
xor
pop
(bad)
test
scas
push
lahf
add
mov
pop
or
add
and
mov
and
stc
jmp
popf
cmp
jnp
dec
cwde
les
pusha
(bad)
imul
sbb
and
inc
ds
test
pop
dec
or
cli
or
lea
mov
pop
icebp
inc
jge
movs
mov
sbb
xor
and
xor
pop
cmp
ret
mov
sbb
mov
push
mov
test
mov
cmp
add
xchg
popf
inc
or
and
ret
or
or
lahf
or
xor
bound
inc
lea
adc
and
ret
xchg
lds
cmp
sbb
add
adc
and
adc
dec
or
mov
imul
cmp
ins
and
mov
sbb
mov
xor
sub
cmp
or
jae
in
xchg
adc
fwait
mov
mov
xor
or
bound
jne
push
ret
loopne
data16
xchg
pop
adc
xlat
adc
and
add
sbb
xor
add
add
adc
(bad)
and
or
mov
add
mov
jl
xor
ins
gs
sbb
pop
int3
clc
adc
retf
in
dec
add
and
test
adc
push
jge
imul
dec
imul
ja
nop
inc
ret
jle
push
fld
in
daa
hlt
or
lea
add
fsub
xchg
sahf
mov
add
pop
mov
push
sub
ja
pop
sbb
push
out
shl
adc
or
ret
xchg
je
and
movs
xchg
sbb
dec
inc
mul
adc
inc
inc
sub
retf
shr
push
sub
inc
lock
add
into
cs
hlt
inc
add
add
rcr
clc
or
loopne
shl
aaa
aam
retf
pop
inc
adc
cdq
push
jp
push
out
call
inc
adc
push
lahf
or
xchg
cmp
enter
add
setbe
sbb
jl
out
or
add
mov
leave
das
pop
jp
cs
inc
add
adc
jmp
or
pop
inc
or
fbld
lods
pop
jle
jne
pop
aad
cmp
dec
pop
add
rol
in
sbb
or
push
add
aas
xchg
jmp
pusha
push
adc
mov
pop
imul
sahf
in
add
pop
inc
add
cli
dec
fiadd
add
xor
xchg
call
adc
xchg
add
inc
pop
ins
movs
jno
pop
and
aas
mov
jge
xor
clc
cld
pop
ror
or
mov
xchg
xor
inc
sub
pop
mov
inc
aas
mov
dec
rol
xchg
push
dec
gs
cmp
add
dec
mov
xchg
es
ficom
add
jecxz
lock
push
inc
jp
or
xchg
adc
lahf
pop
cwde
in
mov
xor
aas
jbe
sub
xchg
pop
xchg
xchg
stos
mov
lock
sbb
cli
nop
add
inc
adc
cdq
cmp
or
das
mov
loopne
ds
repnz
push
fcomp
and
add
xchg
cmp
je
mov
push
xchg
pop
mov
push
movs
xchg
push
les
mov
sub
dec
fild
inc
inc
sbb
xchg
lds
lds
or
int3
fdivr
js
push
add
sti
add
mov
scas
mov
jne
or
cmp
nop
mov
push
aam
mov
(bad)
ins
jmp
adc
push
dec
jl
mov
cmp
out
mov
sub
inc
in
jg
and
jg
push
inc
sub
ret
movs
dec
sbb
sub
imul
xor
or
sub
jns
inc
dec
(bad)
je
cs
test
push
inc
(bad)
aam
fadd
sbb
(bad)
shl
push
pop
lods
dec
shr
pusha
and
dec
adc
mov
ja
je
mov
push
inc
dec
sbb
jne
adc
push
push
iret
xor
stos
add
cs
inc
adc
and
sub
inc
movs
addr16
adc
les
sub
je
xor
push
enter
sub
scas
sahf
adc
sbb
and
sub
sbb
pop
jecxz
cmp
or
push
and
lahf
lock
xchg
(bad)
enter
call
mov
add
jle
add
mov
add
or
ret
inc
jg
lsl
and
icebp
add
test
inc
or
mov
mov
shl
pusha
xchg
xor
cmp
int3
daa
ror
add
adc
test
pop
scas
add
mov
dec
add
(bad)
mov
dec
fmul
les
or
stos
add
pushf
push
push
les
inc
pop
es
call
adc
into
pop
inc
dec
dec
sub
xchg
test
or
pop
and
shr
add
pop
sub
pop
test
sbb
push
mov
aaa
or
movs
test
pop
adc
mov
les
push
or
xor
daa
add
adc
lahf
sub
add
sub
sub
pop
jb
sub
and
sub
cwde
mov
mov
repnz
jle
dec
lds
gs
mov
stc
scas
mov
push
push
push
push
push
sub
hlt
lods
adc
scas
xor
inc
xor
lahf
sub
inc
or
push
lahf
pop
and
cdq
xchg
add
sub
dec
sbb
sub
in
cmp
cld
inc
mov
mov
dec
push
nop
push
sub
fwait
dec
in
sub
pop
and
xchg
sub
sub
data16
pop
jbe
jae
stc
add
in
sar
lahf
mov
add
pop
repnz
pushf
xchg
xchg
xchg
sbb
add
pop
and
or
scas
loopne
cmp
or
(bad)
add
test
call
inc
sbb
sbb
adc
cmp
out
mov
add
dec
adc
mov
add
cwde
add
movs
sbb
jns
add
sub
fs
or
sub
sub
inc
inc
xchg
sbb
sub
sub
add
mov
inc
pop
add
push
jmp
inc
push
and
aam
aas
aaa
mov
fdiv
dec
sbb
jne
add
lock
pop
sub
mov
sub
scas
inc
ds
mov
pop
sub
jns
sub
pop
sub
sub
sub
jns
in
pop
sub
pop
and
xchg
xchg
pop
sub
add
mov
sub
js
and
sbb
mul
retf
movlps
out
and
lock
imul
xor
pop
sub
add
jo
adc
jo
fsub
sub
nop
ins
sub
fstp
adc
adc
dec
shl
push
add
inc
stos
jg
fwait
repnz
dec
xchg
and
jb
leave
sub
and
ja
enter
ret
sub
dec
leave
leave
push
sub
sub
test
sub
pop
sub
and
sub
and
popa
adc
sub
or
sbb
sub
sub
adc
add
sub
add
loopne
adc
push
jl
add
xchg
add
push
dec
sub
sub
sbb
add
xor
or
add
mov
inc
fadd
mov
mov
nop
cmp
dec
das
push
or
std
and
repnz
mov
ins
lods
adc
fs
jg
ins
and
cs
adc
adc
pop
jl
sbb
jne
sbb
or
cdq
or
js
mov
mov
call
shr
inc
test
or
cld
ret
js
push
add
or
jg
sub
pop
lock
loope
jo
shl
and
or
inc
ret
retf
test
or
sub
adc
repnz
adc
in
inc
cdq
pusha
mov
in
(bad)
ja
pop
movs
pop
push
adc
jp
push
add
push
and
cmp
imul
jae
jp
push
push
imul
and
push
mov
mov
push
cmp
push
cmp
jmp
lods
or
hlt
sti
inc
not
push
adc
or
push
adc
push
cdq
sbb
lock
dec
sub
shr
inc
loopne
(bad)
dec
xor
pop
mov
(bad)
pop
das
dec
sub
push
add
dec
movs
stos
test
xor
outs
mov
and
fst
fs
es
js
jmp
push
jg
cmp
pop
nop
push
push
inc
clc
sbb
rol
arpl
dec
push
xlat
mov
rcr
push
daa
mov
rol
fadd
jg
jl
push
xchg
adc
xchg
enter
fldcw
rcr
mov
iret
cli
sbb
add
pop
mov
adc
dec
push
and
lock
and
sub
data16
jge
lea
inc
pop
push
sub
jne
popa
sub
push
push
xchg
mov
cmps
scas
pop
cdq
xchg
sbb
push
xor
pop
xor
cmp
sar
mov
fs
inc
and
jne
into
addr16
lock
add
hlt
xchg
push
jmp
and
loopne
sbb
jge
sub
xchg
(bad)
sbb
push
movs
mov
jg
fld
pop
nop
and
pop
cmp
inc
pushf
cmps
cdq
aad
adc
cmps
dec
jp
jae
mov
mov
out
rcl
fild
movs
or
cmps
dec
movs
movs
sub
inc
rol
test
aam
mov
lea
sbb
dec
test
mov
es
sbb
out
jae
ret
add
inc
or
inc
inc
xchg
pop
int3
mov
pop
pop
push
movs
jg
pop
add
aas
push
xchg
cwde
jb
imul
fsubr
(bad)
xor
push
mov
or
xchg
jo
inc
stc
push
jecxz
rcr
push
fwait
mov
push
sbb
loope
jns
mov
xor
out
mov
or
neg
icebp
ds
jmp
and
push
push
push
addr16
mov
sbb
dec
adc
pushf
fwait
dec
and
mov
sub
push
xor
add
add
(bad)
movs
or
jo
stos
sbb
mov
cmps
fld
aam
dec
repz
xchg
sbb
add
stos
movs
ja
rcl
cmp
fs
adc
call
lods
inc
mov
loopne
ins
sub
inc
sbb
call
aas
cmps
push
test
xor
cmps
pop
push
mov
xchg
pusha
sti
adc
rcr
std
adc
sub
(bad)
fldcw
sub
cmp
pop
pop
imul
push
dec
sub
or
add
mov
bound
push
(bad)
into
adc
add
sub
xchg
jbe
add
add
mov
and
jg
cmc
and
or
je
scas
sub
imul
add
dec
xor
or
add
inc
push
mov
loop
xor
fs
xor
push
(bad)
adc
les
(bad)
fs
sub
mov
loopne
pusha
popf
sub
fisttp
sub
jecxz
add
pop
sbb
or
pop
or
cmc
jg
cmp
and
or
sti
aas
jb
inc
loopne
call
mov
imul
or
push
mov
pop
dec
sub
and
sub
xor
mov
loope
xor
mov
sub
vpaddd
add
fwait
or
push
inc
cmp
lds
test
fwait
add
aas
daa
or
pushf
or
test
cli
inc
adc
enter
push
sahf
popa
cmps
fcom
or
sar
call
cs
or
es
cmp
and
mov
stc
push
gs
sbb
inc
call
shr
add
xor
jne
sbb
cmp
jae
rcr
jb
imul
push
mov
cmp
fld
icebp
fild
push
push
rcl
push
adc
ret
cmp
fsub
jo
scas
rcr
ret
test
leave
add
ins
fstp
and
sahf
and
jbe
outs
ja
movs
ret
or
adc
fadd
cld
mov
or
hlt
sti
lock
push
push
mov
pop
push
xchg
aad
test
sub
das
sbb
xor
or
cs
out
loopne
cmc
xor
clc
cmp
loopne
push
fadd
mov
mov
adc
sub
mov
adc
ret
inc
xor
imul
jo
fild
fmul
lock
lods
call
ins
mov
sbb
daa
or
fwait
dec
test
inc
or
test
jns
or
jbe
call
in
lds
push
pop
mov
inc
xor
mov
test
and
inc
mov
and
mov
sar
jl
aad
push
aam
jl
add
cmp
dec
push
xor
pop
inc
jl
pop
aas
ret
pop
xor
push
jo
fadd
push
mov
jle
sub
add
mov
movs
cmps
test
inc
(bad)
and
fbstp
push
nop
inc
pop
test
leave
loopne
cmps
je
pop
call
sub
sbb
dec
js
xchg
test
aas
je
test
mov
data16
inc
pop
in
cmp
inc
jge
or
retf
push
pop
je
dec
loope
adc
fucomp
or
add
push
push
aam
add
pop
pushf
adc
retf
xor
xor
adc
dec
je
mov
xchg
imul
mov
jl
fstp
test
mov
pop
out
inc
loopne
test
or
add
adc
push
jo
pop
js
mov
sub
cmp
test
movs
gs
mov
add
mov
cmp
ret
and
mov
mov
lods
add
jbe
pop
pop
xor
dec
je
push
mov
scas
xor
xor
aas
or
add
or
fmul
mov
adc
aam
or
shl
fiadd
cmp
jae
add
fadd
sub
rcr
cs
jo
fstp
cvtps2pi
pop
clc
add
push
ret
dec
ja
add
jecxz
pop
mov
shl
mov
or
jb
sbb
ins
push
dec
call
sub
pop
cmp
or
and
fs
arpl
sub
or
xchg
and
cmp
scas
jecxz
dec
or
mov
ja
or
jmp
pop
movs
lea
or
icebp
stos
xchg
push
call
xor
mov
add
inc
cs
pop
pop
sub
and
mov
inc
push
pop
add
icebp
mov
adc
cmp
add
jo
jo
jmp
cwde
and
jnp
inc
cmps
call
ret
sub
or
rol
inc
leave
mov
fldenv
mov
cmp
rcr
or
jp
test
jno
adc
ret
dec
sub
add
adc
and
mov
xchg
jg
or
cmp
jae
lods
ret
adc
fcomp
sahf
ret
jg
and
(bad)
sub
sar
ja
fimul
cli
or
inc
add
inc
xor
stos
call
(bad)
popa
pushf
mov
mov
ja
ds
fadd
popf
push
mov
adc
adc
out
mov
xor
sub
jecxz
or
xor
imul
test
frstor
xchg
inc
sub
inc
mov
mov
sbb
sub
adc
scas
in
and
pop
cmp
lahf
mov
pusha
mov
push
test
repz
push
test
dec
mov
add
push
test
sub
repz
mov
pop
fwait
shl
jns
mov
in
mov
push
push
inc
xchg
adc
int3
xor
jo
stos
jno
fs
dec
cmp
loope
mov
mov
push
push
inc
sbb
mov
lea
push
stos
dec
add
fmul
aas
push
imul
shl
ror
sub
js
and
push
call
or
mov
mov
addr16
enter
cld
pop
or
imul
inc
aas
scas
pusha
mov
ins
(bad)
push
and
int3
inc
sbb
mov
mov
xor
mov
test
les
loopne
xchg
out
scas
add
adc
mov
mov
jno
sub
das
repz
xor
mov
(bad)
aam
rcl
and
aad
push
fdiv
call
pop
sahf
cmp
imul
imul
mov
push
mov
add
mov
inc
jl
mov
cmps
leave
mov
xchg
imul
cmps
add
sbb
push
mov
inc
xor
shl
loopne
into
or
sar
nop
jl
aas
or
lea
push
xor
mov
or
or
jb
xor
sub
push
test
cmp
xchg
and
icebp
or
pop
je
add
mov
jg
adc
enter
lahf
xchg
add
xor
jle
test
hlt
popa
popa
inc
cli
add
inc
aaa
fmul
cmps
add
test
inc
push
dec
inc
dec
popf
mov
pusha
and
lods
jno
fwait
xor
mov
xor
sbb
loopne
mov
add
ins
jo
sbb
das
sbb
mov
mov
dec
or
stos
adc
ficom
mov
leave
and
das
ins
pushf
fcmovb
cmp
in
push
fstp
pushf
std
je
loope
inc
cmps
or
and
sbb
mov
jl
jo
add
sar
pop
xchg
sub
mov
lods
push
cmp
outs
mov
mov
pop
or
stc
jmp
add
rcl
add
out
add
ds
mov
dec
push
jo
push
xchg
add
iret
inc
xor
cmps
sti
add
rcr
mov
xlat
or
inc
or
sub
xchg
jl
add
sbb
movs
mov
inc
cwde
pop
ss
cmp
lahf
add
out
sub
jae
scas
fild
sub
cmps
sbb
inc
aaa
hlt
sbb
jl
repz
push
call
imul
mov
push
fsubr
cmp
mov
mov
xor
and
sbb
in
mov
sbb
ret
ror
mov
push
push
push
cld
imul
add
push
xlat
mov
jae
inc
dec
jle
mov
in
xor
jl
ja
inc
sbb
sub
fadd
cmp
rcl
add
jg
call
jne
push
fnstsw
test
jmp
ins
sub
fist
aas
int3
xchg
push
push
mov
mov
adc
jnp
mov
mov
adc
sub
ror
sub
dec
mov
xchg
retf
mov
sub
and
icebp
sbb
mov
pop
lods
aas
inc
dec
dec
(bad)
or
cwde
icebp
xchg
in
adc
push
push
adc
or
sub
cwde
(bad)
sbb
loope
xchg
in
dec
jno
inc
in
mov
pop
or
inc
sub
in
in
dec
add
jmp
retf
movs
mov
ins
push
dec
ret
std
lahf
ficomp
clc
inc
fcmovbe
or
(bad)
dec
ret
xchg
cmp
add
(bad)
push
pop
popf
or
out
gs
xor
pop
test
sub
outs
inc
dec
xor
dec
bound
adc
or
push
xor
adc
cmp
call
pop
add
adc
pop
push
ret
add
nop
mov
shr
je
stos
dec
call
test
ins
push
push
popf
sbb
fsub
mov
dec
or
dec
imul
rcl
aam
pop
mov
dec
rcl
and
pop
or
xchg
add
lahf
jo
cmp
inc
sbb
pop
sbb
dec
inc
imul
retf
aam
pop
xor
and
pop
or
adc
push
jmp
stos
pop
shr
sub
aas
stos
cmp
gs
cmps
ror
push
xchg
and
rcr
pop
inc
inc
hlt
push
push
or
xchg
std
push
cld
cli
mov
loopne
and
push
into
imul
(bad)
clc
imul
pop
mov
(bad)
es
pushf
jmp
movs
cmp
pop
push
(bad)
out
int3
fs
jb
sub
cmp
push
repnz
mov
dec
cmp
xchg
pop
aaa
push
jb
cmp
mov
mov
ja
lea
pop
leave
sahf
test
mov
pop
lea
fcomp
xor
cwde
retf
std
adc
pop
jg
ret
sub
add
inc
cmp
add
or
or
xor
outs
adc
cmp
xchg
dec
test
inc
popf
fstp
xor
xchg
pop
ins
push
xor
js
stc
cmp
imul
or
or
dec
dec
adc
cmp
xchg
inc
mov
adc
and
jecxz
gs
sahf
movs
les
cmps
lock
or
adc
mov
inc
push
mov
jl
hlt
adc
jmp
or
push
(bad)
xchg
cmps
rcl
or
jbe
add
mov
push
add
pop
sbb
sub
push
jo
lock
lds
adc
cmp
js
push
adc
inc
mov
das
sub
jae
adc
or
cmp
inc
sbb
add
pop
rol
popa
jecxz
cld
xchg
add
mov
fcmovnu
push
imul
and
xor
add
push
jl
adc
push
and
daa
adc
pop
outs
sbb
lods
and
xchg
les
xchg
gs
push
rol
cmps
add
ret
dec
push
push
test
push
add
xchg
pop
adc
xor
ss
pop
dec
pop
push
jo
xor
mov
sub
paddb
pop
push
icebp
add
sbb
jl
inc
pop
lahf
xor
pop
push
mov
add
js
fnstsw
cmp
mov
mov
mov
push
xor
pop
inc
push
and
and
xchg
mov
or
mov
inc
add
call
js
jl
sbb
inc
adc
rol
inc
inc
inc
repnz
mov
jo
push
dec
imul
ins
jmp
stos
dec
inc
jmp
xchg
sub
jg
push
mov
cmp
loop
sub
loop
sub
or
lahf
dec
or
sub
mov
dec
hlt
enter
xor
push
xchg
ds
and
out
jo
inc
inc
sbb
push
jmp
jp
js
adc
xchg
or
fmul
push
inc
mov
aam
add
into
outs
inc
mov
fisttp
aas
inc
pop
fisub
lds
xor
dec
mov
or
mov
jg
fidiv
ja
jle
test
fadd
ins
mov
dec
iret
test
jb
adc
fist
les
dec
push
dec
adc
inc
jbe
gs
push
pop
add
mov
enter
add
push
aas
inc
jecxz
mov
mov
repnz
pop
push
dec
push
push
cmp
or
test
sbb
shl
sbb
xchg
es
loop
or
jne
push
and
inc
add
pop
or
add
or
pop
mov
shl
pushf
cmc
enter
dec
test
aam
cmp
dec
call
cmp
ja
xor
xor
mov
sbb
iret
dec
add
and
push
dec
mov
shl
dec
xchg
pop
xchg
rcl
dec
cs
nop
nop
sub
add
mov
add
mov
dec
sar
and
add
mov
mov
mov
jo
mov
je
mov
gs
add
push
inc
(bad)
ja
and
imul
add
(bad)
int
cmps
push
dec
adc
and
adc
ins
dec
pop
lods
cmp
jle
test
push
jle
inc
(bad)
xrelease
cld
test
retf
adc
cmp
dec
sbb
jo
loope
or
jo
(bad)
xor
sbb
sbb
nop
ss
sbb
bound
xchg
adc
(bad)
bound
xchg
test
mov
push
cmp
mov
add
cmp
pop
cmp
adc
lahf
add
fiadd
or
cwde
and
jnp
adc
test
push
fadd
add
push
push
push
or
dec
shl
inc
dec
lahf
(bad)
mov
sub
mov
clc
mov
xchg
pusha
dec
pop
adc
mov
popf
inc
add
pop
pop
test
dec
cmp
dec
imul
jg
or
ret
sub
jle
mov
mov
(bad)
or
aas
fadd
clc
pop
sub
fs
inc
popa
cmp
adc
mov
cli
and
and
outs
pop
(bad)
dec
dec
(bad)
xchg
mov
sub
push
inc
dec
jl
loope
push
adc
mov
mov
push
xor
loop
and
or
inc
mov
jbe
dec
daa
in
jns
pop
mov
ret
shl
push
cmp
and
inc
mov
inc
mov
test
mov
(bad)
jno
iret
cs
mov
das
ds
mov
add
pop
and
test
test
movzx
lea
xchg
clc
mov
jmp
into
dec
mov
or
sub
inc
popf
sbb
push
fwait
pop
sbb
imul
sbb
(bad)
push
rol
lea
nop
sar
test
dec
or
nop
js
or
pop
shr
pop
mov
ins
pusha
jecxz
into
dec
pop
imul
sbb
pop
jle
mov
cmc
adc
mov
or
or
mov
cld
mov
adc
dec
fwait
sbb
sbb
push
lea
pusha
push
ds
lahf
push
popa
fild
call
rol
jg
nop
pop
sub
or
sub
and
mov
and
lods
jg
sbb
jbe
and
stos
shr
inc
and
ja
jae
mov
fist
jne
shl
dec
inc
jge
push
clc
xor
clc
fs
scas
add
jle
cli
bound
push
cmp
sub
dec
dec
mov
sbb
rcr
jb
sbb
jne
add
ret
ret
add
jbe
(bad)
cmc
push
cmp
ds
xor
fst
mov
adc
inc
dec
ss
push
push
fwait
cld
jmp
cmp
and
lods
cli
dec
cld
jmp
push
mov
and
sub
mov
push
pop
pop
bound
xor
(bad)
push
adc
dec
sbb
sbb
adc
ins
jno
imul
jmp
push
cmp
pop
cmp
lea
enter
jo
xchg
movs
or
add
leave
(bad)
rol
dec
pushf
jp
ins
aas
lods
pop
ins
pop
inc
cmp
inc
aam
lock
call
ret
mov
xchg
xchg
and
mov
adc
data16
mov
dec
inc
and
aam
jo
push
mov
jbe
push
mov
xor
rol
dec
pop
add
mov
je
push
push
cmps
stc
mov
jl
jne
pop
push
pop
add
pop
jb
call
add
lock
or
jns
and
sahf
mov
cmp
jns
fdivr
xor
sbb
pop
rcl
jecxz
mov
lods
xchg
mov
ins
xchg
jno
push
xor
mov
scas
push
sub
xor
push
mov
imul
push
jb
and
mov
add
popf
ret
cmp
(bad)
iret
cmps
js
add
lea
xor
ds
sub
(bad)
and
pop
jne
xchg
loopne
jmp
xchg
movs
adc
push
dec
into
pusha
jmp
add
add
jne
movs
sti
push
test
xor
ret
scas
jmp
cmp
xor
mov
push
mov
sbb
and
mov
gs
push
dec
pusha
add
and
cld
xlat
pusha
inc
inc
pop
pop
rcl
or
push
push
jmp
mov
and
sub
cld
sbb
pop
xor
push
mov
or
or
jbe
push
cmp
inc
xchg
add
clc
or
clc
popa
add
unpckhps
jmp
or
add
mov
in
pusha
mov
pop
lock
xchg
pop
sar
add
(bad)
enter
pop
(bad)
hlt
cdq
loope
pop
pop
xchg
je
popf
mov
xor
push
pop
add
(bad)
out
adc
rol
push
fs
cmp
pushf
cdq
popa
call
mov
pusha
sar
push
cmps
mov
mov
sub
clc
js
pop
mov
xchg
dec
push
pusha
pop
mov
cld
sub
nop
inc
cs
clc
lahf
rcr
pop
mov
mov
imul
inc
mov
shr
rcr
and
nop
call
fwait
pop
fcmovbe
dec
and
mov
adc
fwait
std
scas
jne
jmp
add
sub
add
fdiv
pop
push
lods
mov
popa
sti
js
int
inc
shl
pop
sub
ror
jp
pop
pop
pop
pop
pop
movs
pop
and
and
lea
sub
inc
pusha
mov
je
mov
popa
dec
ja
jl
jno
xchg
cmp
sub
popf
add
add
add
lods
lea
sbb
imul
cmp
cmp
pop
sbb
arpl
mov
daa
mov
and
jmp
retf
inc
dec
test
pop
aam
in
xchg
in
out
repnz
xchg
test
xchg
jmp
ins
pop
jo
and
dec
xchg
adc
add
(bad)
inc
dec
and
xor
mov
xchg
adc
xor
je
leave
sbb
das
or
xor
push
sub
or
jge
jne
mov
rol
push
aas
iret
jo
xchg
imul
or
push
lock
rol
cmp
adc
push
mov
xchg
mov
mov
inc
push
inc
dec
adc
and
nop
xor
jne
lods
cld
sbb
pop
adc
and
xor
or
movs
inc
dec
iret
(bad)
shl
inc
dec
fbstp
mov
push
cmp
outs
and
jle
stos
ss
mov
or
aam
mov
fst
or
mov
je
shl
adc
arpl
(bad)
xchg
sub
imul
mov
xor
in
dec
pop
jne
cmp
jne
sub
or
enter
jne
call
imul
sbb
cmp
fwait
xlat
rcl
outs
mov
(bad)
cmp
scas
inc
lods
pop
push
shl
push
test
int3
push
pop
fild
add
leave
sahf
js
cmps
dec
pop
or
sub
mov
and
ret
scas
mov
jmp
pop
stos
shr
lock
ins
ins
inc
inc
jns
add
test
xor
push
inc
mov
xchg
add
clc
pop
ja
out
xchg
stc
dec
pop
outs
aam
sar
gs
lea
mov
js
xor
xchg
popa
mov
or
and
mov
push
pusha
mov
jmp
mov
sti
xchg
mov
lea
inc
push
jbe
add
push
repz
and
inc
loope
add
adc
jge
mov
movs
mov
push
cmp
xlat
push
pop
pop
outs
iret
push
loope
mov
aad
repz
mov
xor
add
scas
dec
pop
push
shl
sub
xor
call
call
or
dec
mov
cmp
add
or
sbb
cwde
adc
fnsave
mov
sbb
xchg
frstor
jns
sbb
jg
adc
sbb
les
in
popa
aad
dec
add
mov
pop
or
adc
push
(bad)
sbb
in
adc
push
clc
or
aas
dec
or
aas
mov
lods
xchg
jl
stos
(bad)
add
cmps
pusha
mov
add
stos
jo
dec
pop
sbb
adc
lea
lea
pop
jo
mov
fstp
retf
ret
jmp
enter
or
or
jb
add
xor
push
add
sbb
fadd
add
xchg
add
mov
add
inc
pusha
mov
test
mov
pop
xor
cmp
add
dec
adc
ja
cmp
mov
push
rcl
jo
cs
jb
dec
inc
dec
push
push
jb
pop
dec
sub
sub
sar
xor
xor
pop
xchg
cmp
dec
cs
adc
inc
cmps
fild
xchg
mov
xor
inc
pop
addr16
bound
js
iret
push
stos
inc
push
jg
lods
pop
adc
dec
push
jge
sub
add
(bad)
mov
xchg
scas
ror
sbb
xor
ds
and
sub
pop
cs
or
nop
mov
sub
pop
xchg
or
pop
pusha
push
dec
pop
jl
sub
je
js
push
sub
pop
mov
mov
ja
pushf
mov
mov
xor
pop
pop
sub
or
xchg
retf
in
lock
clc
pop
sbb
add
jne
adc
aas
push
sub
pop
xchg
dec
fdivrp
jle
lds
js
test
inc
add
out
mov
movs
lds
mov
(bad)
iret
lea
dec
fld
mov
mov
push
test
jmp
in
pop
jmp
xchg
inc
sbb
cmp
(bad)
fisubr
cmp
push
push
sbb
jmp
inc
push
sbb
dec
movs
(bad)
pop
adc
(bad)
pushf
pop
mov
jecxz
rcr
fstp
xchg
pop
sbb
or
dec
xchg
fcmovnb
xchg
pop
xor
adc
add
mov
cmp
mov
pop
mov
into
sbb
adc
sti
push
jge
mov
mov
sub
sbb
inc
and
(bad)
mov
adc
push
inc
lock
cmp
imul
ror
xchg
retf
movs
arpl
push
push
pop
retf
gs
out
ficomp
inc
pop
test
das
and
(bad)
xor
out
lods
out
js
sbb
add
(bad)
adc
sub
add
and
add
xlat
sub
repz
add
push
push
and
jb
pusha
push
or
jb
pop
jb
add
pop
or
or
daa
pop
mov
nop
or
or
sub
inc
xor
pop
sub
aas
clc
dec
sub
(bad)
jg
add
ja
sub
lahf
add
and
lahf
das
adc
sub
xchg
in
and
cmp
inc
sbb
sub
or
js
xchg
pop
call
pop
inc
dec
into
aam
jge
loope
adc
inc
sub
cmps
jnp
fcom
inc
js
cmp
fst
fcom
sub
add
pusha
data16
fstp
jmp
fstp
jmp
push
xor
js
sbb
rcr
(bad)
cld
xor
hlt
fldcw
fistp
or
(bad)
cmp
jle
mov
jae
mov
fdiv
test
cmp
and
shl
not
nop
lahf
xchg
icebp
and
shl
cli
push
mov
call
cmp
xchg
out
dec
jmp
xor
or
mov
faddp
js
ins
test
test
out
mov
sbb
mov
je
xor
add
int
sahf
add
cmc
test
cmp
add
push
cmp
cmp
int3
sbb
xor
cmp
ret
cdq
pushf
adc
stc
movs
cmp
add
push
mov
jp
mov
xchg
retf
push
xchg
adc
mov
popf
dec
dec
adc
push
cdq
test
xor
mov
sub
push
mov
or
push
inc
add
retf
loopne
xor
and
and
xchg
xchg
xchg
ror
pop
pop
pop
js
adc
cmp
pop
inc
lea
sbb
imul
adc
pop
adc
nop
or
mov
mov
pop
inc
fs
or
sub
mov
ja
xchg
or
add
xchg
je
pushf
loopne
test
icebp
push
push
or
pushf
push
xchg
or
push
inc
aas
cmp
pop
add
popf
sub
ins
jp
bound
xlat
push
jp
push
popa
xor
sub
hlt
or
fcom
xor
xchg
jg
and
xchg
xor
dec
mov
dec
cdq
lea
push
jg
xchg
inc
aad
iret
mov
inc
ins
cli
mov
ds
and
adc
and
fs
call
sub
test
mov
xchg
(bad)
mov
jo
dec
stos
xchg
xor
fild
rcr
ret
pop
popa
popf
ret
add
jge
stc
push
cmp
add
fs
les
or
mov
add
mov
outs
arpl
sub
pop
adc
cmps
mov
jae
call
or
inc
pusha
(bad)
push
cmp
icebp
dec
pop
movs
aad
lods
out
lahf
jmp
mov
or
ror
push
nop
adc
inc
mov
add
sub
and
cmp
push
daa
sbb
jo
mul
(bad)
pop
je
iret
dec
add
mov
fsub
lds
mov
daa
push
cmp
add
adc
and
jg
jo
mov
fmul
push
aaa
jl
pop
add
sbb
test
ret
inc
xor
xchg
xchg
sub
fmul
push
lahf
dec
rol
lahf
xchg
push
add
jle
lock
or
add
sub
mov
pusha
sar
pop
and
add
pop
jbe
mov
jp
int
xchg
fcom
inc
outs
mov
aas
je
sbb
pop
enter
sub
or
rcr
inc
dec
sbb
xchg
push
test
mov
pop
cmp
ds
dec
jnp
jge
push
mov
sbb
sbb
push
or
ret
dec
mov
add
push
xchg
xchg
jb
jmp
lods
fdivr
jle
pop
(bad)
push
into
jns
push
push
xchg
xor
das
jmp
das
ins
jbe
pop
adc
pushf
sub
jge
jbe
sbb
sbb
or
push
bound
adc
jle
push
and
jge
and
loope
mov
ja
sub
sub
sub
mov
or
cmp
arpl
data16
test
js
dec
cmp
leave
dec
popa
mov
hlt
and
sub
fisub
sub
push
adc
mov
mov
or
cmps
test
sahf
add
mov
test
lahf
pop
cmp
jmp
xchg
inc
inc
inc
adc
ja
jo
pop
add
or
sbb
dec
sbb
cwde
mov
inc
dec
dec
push
cmp
xchg
in
movs
in
inc
sub
add
cdq
aas
and
xor
in
mov
sbb
push
clc
push
adc
sub
lods
sbb
ror
pop
cmps
xchg
pop
fcmovne
xor
mov
ins
stos
add
sub
dec
aas
add
rcr
push
cmp
sub
push
push
mov
les
mov
push
jg
adc
cwde
ret
mov
jge
mov
ret
cmp
jne
pop
inc
out
pop
cmp
jmp
pop
lahf
pop
or
shl
pop
inc
cmp
jmp
jno
pushf
int
jnp
pop
dec
xchg
retw
cmps
inc
inc
std
into
pop
jp
mov
test
push
mov
popf
rol
inc
push
mov
dec
sbb
jecxz
faddp
push
cmp
cmp
ins
mov
cmp
inc
mov
or
jae
sbb
adc
cmp
cmp
(bad)
inc
fsub
div
sbb
sub
loope
(bad)
sbb
jnp
retf
push
mov
inc
inc
and
adc
sahf
sbb
mov
inc
and
mov
(bad)
cmp
pusha
push
adc
or
ret
cmp
idiv
cmp
inc
and
lods
ret
int
add
push
int3
cmp
ror
push
outs
mov
test
and
ins
mov
and
movs
shr
nop
dec
adc
add
inc
cmps
sbb
clc
and
and
mov
or
mov
(bad)
jp
lock
fwait
xor
and
rol
pop
iret
push
mov
mov
add
or
add
es
jp
sub
int
rol
inc
test
xchg
mov
les
push
vunpckhps
pop
pop
ja
mov
push
in
inc
and
fstp
add
jl
sbb
xor
ret
pop
xchg
xor
and
mov
stc
lea
sub
and
movs
jmp
cmp
inc
stos
(bad)
inc
or
inc
fdiv
mov
inc
mov
inc
iret
add
out
hlt
inc
pop
popf
adc
repz
cmp
push
pop
sbb
sub
xchg
xchg
cmc
mov
(bad)
adc
xchg
add
or
jns
arpl
test
add
mov
pop
xchg
fs
xchg
mov
in
std
xor
push
adc
div
aaa
and
add
dec
inc
adc
dec
mov
fist
jne
jge
jo
cs
(bad)
xchg
xor
sbb
stos
ins
push
add
cdq
dec
hlt
push
mov
mov
dec
push
aam
mov
jno
cmp
je
and
and
and
add
jne
xlat
mov
adc
or
adc
sar
xchg
lods
or
pop
stos
cmp
mul
mov
push
lea
add
pop
dec
add
in
data16
cmp
mov
mov
into
inc
inc
push
cmp
int3
mov
rol
lahf
and
pusha
(bad)
fsubr
inc
push
shl
add
adc
jae
loop
and
les
mov
shl
fwait
or
nop
pushf
test
mov
mov
test
pop
ret
test
je
cmp
jne
cld
jl
cld
test
or
jmp
imul
ror
inc
test
div
lods
xchg
loopne
mov
xor
je
sbb
ss
sub
mov
repz
xor
add
cmp
je
pop
stos
add
add
sbb
add
pop
mov
mov
data16
xor
ret
or
add
push
jae
mov
xor
daa
cmp
xchg
push
lock
or
jmp
sbb
sbb
mov
xchg
inc
push
add
ins
pusha
ins
add
stc
movs
mov
pop
mov
ss
jle
cmp
jecxz
sbb
cmp
mov
pusha
es
push
jp
out
test
inc
adc
xchg
call
mov
sub
sub
inc
push
add
sub
inc
bound
jo
(bad)
push
pop
pop
push
push
add
xor
sbb
js
cmp
sbb
scas
mov
inc
sbb
adc
sahf
add
and
adc
cwde
es
dec
inc
add
addr16
push
adc
add
cmp
xlat
sbb
pop
add
pop
or
sbb
jbe
push
jne
add
pusha
pusha
sub
add
or
pusha
xor
sub
pop
xor
pushf
mov
call
mov
jp
sub
sbb
and
sbb
adc
mov
sbb
mov
dec
ss
retf
rcl
push
mov
sbb
test
test
imul
push
push
adc
push
adc
pop
add
or
clc
or
les
fdiv
mov
push
rcl
jo
mov
dec
xor
xchg
iret
int3
or
mov
mov
pop
jle
mov
push
in
dec
mov
mov
sub
lds
or
lods
gs
pop
add
repz
xchg
add
cli
adc
shl
inc
adc
lods
inc
adc
jns
stos
imul
xor
xor
dec
sub
add
dec
scas
adc
sbb
cld
add
mov
mov
add
mov
aaa
xor
inc
pop
add
sti
push
xchg
lock
xchg
sbb
sub
sbb
sbb
dec
retf
inc
test
adc
inc
call
sbb
adc
inc
mov
pop
push
push
mov
rcr
and
push
add
push
lock
lock
or
fsub
data16
xchg
mov
sbb
xor
add
nop
fmul
popf
mov
int
cdq
test
adc
add
and
(bad)
push
test
jne
cmp
cmp
add
sub
std
or
sbb
mov
adc
fdiv
pop
ret
in
pop
jne
mov
int
xchg
sub
push
or
je
aas
je
cmp
adc
jbe
sbb
or
push
jmp
sub
adc
inc
cdq
inc
mov
lea
push
mov
cmp
or
or
in
push
adc
adc
daa
or
mov
ror
je
or
and
xchg
pop
adc
or
mov
pop
sahf
les
leave
or
call
js
lea
xchg
adc
add
push
mov
jo
adc
ret
mov
sbb
fld
fwait
or
popf
(bad)
fld
bnd
mov
mov
mov
xchg
dec
dec
dec
push
stos
xor
sub
test
mov
and
(bad)
imul
xchg
ins
push
dec
jp
push
and
xchg
dec
mov
sub
sbb
mov
xchg
jae
daa
out
xchg
sbb
pop
mov
jb
adc
adc
adc
out
mov
sahf
push
and
mov
dec
inc
mov
and
push
shl
xor
aaa
push
add
fwait
ret
push
call
sbb
sbb
jb
gs
inc
ss
adc
push
pop
sbb
sbb
push
and
loopne
mov
jge
adc
movs
adc
jge
aas
add
sub
mov
retf
mov
pop
ret
outs
dec
sbb
pop
push
push
cld
sub
push
mov
mov
and
cmp
push
test
sbb
inc
jp
inc
push
mov
mov
mov
xor
pop
jge
and
and
mov
inc
adc
and
jge
scas
das
ret
es
jnp
push
or
mov
pop
or
in
lahf
je
sub
psrlw
inc
jb
mov
cdq
sbb
add
inc
push
mov
dec
add
jne
or
jae
test
jmp
jae
lods
sub
push
xor
xor
sbb
cmps
cmp
movsx
lea
and
adc
sub
loopne
jo
push
xchg
sub
and
shl
js
jmp
or
and
push
lock
xor
icebp
and
test
push
pop
push
add
or
cmp
pop
adc
add
or
and
mov
add
adc
clc
ret
fwait
push
add
movs
jecxz
loopne
jnp
adc
and
xor
sub
movs
pop
jecxz
and
sub
pop
jp
mov
sub
add
push
outs
or
(bad)
xlat
jl
(bad)
popa
daa
inc
adc
arpl
popa
push
inc
jb
lock
add
scas
xor
jmp
cmp
sbb
dec
js
cmp
(bad)
jmp
sbb
adc
xor
sbb
or
jg
xor
pop
xor
je
jb
inc
in
push
scas
add
sub
sbb
lds
mov
pop
in
mov
inc
js
push
dec
jno
movs
call
xor
rcl
or
daa
imul
and
outs
lods
data16
jo
or
xor
sub
(bad)
mov
xor
lahf
mov
lock
lahf
(bad)
pop
mov
mov
ja
cwde
rol
mov
rcl
or
daa
sbb
test
in
mov
or
adc
outs
shl
mov
adc
mov
mov
or
je
test
mov
sahf
ret
add
xor
lock
cs
or
clc
inc
inc
fwait
ret
or
xchg
nop
pop
cmp
into
mov
and
push
mov
mov
loop
test
fnstenv
dec
mov
sbb
idiv
(bad)
cmp
xor
mov
and
(bad)
hlt
push
or
or
cld
repnz
shr
jl
pop
adc
nop
mov
push
push
ja
js
jmp
je
pop
push
call
dec
add
inc
cmp
outs
ins
movzx
stc
lock
adc
fstp
jge
or
call
cmp
jb
pmaddwd
or
adc
or
mov
mov
jl
push
jmp
mov
popa
cs
scas
cmp
mov
stc
pop
js
lods
mov
call
fs
mov
pop
je
jne
ret
arpl
(bad)
xor
dec
rol
dec
aaa
sbb
pop
mov
mov
ins
idiv
cmp
mov
and
push
adc
and
sar
cmp
retf
lock
mov
sub
sub
pop
mov
cmp
push
clc
sub
sub
pop
add
sub
adc
jmp
ds
mov
pop
and
push
cmp
les
pop
cmp
outs
mov
sub
jge
xchg
fadd
lods
cwde
pop
cwde
stos
fild
add
jle
inc
jne
xchg
push
imul
dec
sti
jge
jp
push
call
stos
adc
mov
add
xchg
mov
add
bound
lahf
add
inc
xor
add
add
jne
or
inc
fadd
test
das
xchg
or
dec
ins
push
mov
jmp
test
add
inc
ss
jle
movs
mov
sbb
ja
inc
stos
add
pushf
pop
push
mov
nop
cmp
ja
pop
pop
mov
lods
cmps
pop
js
sbb
adc
jmp
lahf
jecxz
(bad)
sahf
lahf
rcl
jl
or
inc
call
mov
push
je
(bad)
mov
inc
dec
js
cmp
mov
pusha
movs
inc
mov
mov
jmp
sbb
mov
add
xor
jle
or
mul
int
icebp
(bad)
xor
jne
nop
cmp
mov
idiv
js
pop
and
and
jnp
add
data16
mov
xor
jle
and
mov
in
pop
nop
icebp
jne
mov
jge
jne
mov
add
push
mov
sbb
aaa
adc
lock
in
mov
mov
sub
adc
mov
adc
movsx
xchg
test
mov
into
add
mov
xor
jge
jg
mov
and
jnp
xchg
js
mov
dec
push
icebp
or
shr
mov
and
dec
imul
push
clc
pop
sbb
clc
add
add
ret
cmp
add
popa
mov
add
push
sub
nop
dec
fmul
add
js
push
aam
xor
mul
xor
in
xchg
fcomp
je
les
ror
push
ss
inc
mov
add
add
cmp
rol
jmp
sahf
and
retf
mov
nop
push
sbb
push
xchg
loopne
sub
sbb
lock
fimul
inc
mov
cmp
repz
push
or
movs
adc
mov
pop
pop
add
mov
sub
or
add
or
or
fdiv
popa
jmp
push
fistp
cs
pop
clc
mov
xor
xchg
adc
pop
add
sub
stc
mov
les
lea
shr
xchg
or
lock
mov
or
pop
jg
(bad)
adc
cld
mov
adc
or
inc
sbb
cmp
pop
arpl
inc
mov
adc
push
test
xchg
add
cmp
js
fwait
push
add
mov
mov
fiadd
mov
call
jbe
lea
and
adc
mov
push
mov
inc
xor
nop
sub
outs
jo
mov
pop
pop
sub
js
(bad)
ror
add
test
push
cmp
(bad)
loopne
inc
sbb
jp
cld
mov
sub
mov
cmp
pop
rol
sbb
jg
clc
and
data16
aam
out
xor
mov
inc
dec
cmp
mov
push
dec
sub
pop
ror
mov
xor
fstp
or
xor
pusha
test
xchg
movs
jbe
inc
les
jne
dec
adc
jae
js
add
pop
adc
aam
pop
in
push
push
into
retf
(bad)
xor
push
sub
xchg
push
fmul
jno
pop
cmps
mov
dec
scas
pop
clc
mov
cmp
mov
adc
xchg
stos
imul
pop
cmp
pop
leave
push
sub
cmp
lock
and
addr16
push
adc
lods
das
cmp
lods
inc
add
push
and
bound
push
push
inc
mov
adc
rol
adc
inc
jp
jbe
jbe
sub
xlat
xchg
mov
icebp
cmp
loopne
ret
inc
inc
outs
pop
inc
pop
add
pop
add
pop
in
or
add
sub
(bad)
in
cmp
push
push
(bad)
repnz
stos
sub
lds
sbb
push
mov
aas
pop
rcr
cmp
dec
mov
xchg
mov
pop
lahf
nop
sub
inc
dec
push
cmps
jge
pusha
test
adc
dec
movs
test
jno
loop
and
test
or
push
mov
adc
ins
add
sub
test
xchg
std
pop
dec
or
ins
movs
fcmovb
or
sub
mov
sbb
and
out
jnp
mov
sar
sbb
cs
sbb
xor
pop
sub
cli
adc
les
push
add
mov
inc
add
sbb
jnp
add
or
mov
cld
cld
mov
inc
inc
cld
ins
movs
add
xor
aas
pop
stos
lods
stos
and
or
xchg
push
pop
push
cmp
push
adc
pop
rcr
rcl
ins
sub
pop
retf
xchg
sub
adc
mov
aaa
jbe
push
jg
add
pop
push
push
and
xor
leave
test
loope
jno
sub
inc
and
add
dec
xor
add
lods
ret
mov
data16
adc
push
ficom
mov
inc
and
(bad)
sahf
inc
xor
fcmovnbe
mov
mov
cmp
dec
add
in
xchg
int3
sub
and
mov
int
inc
test
mov
add
jo
out
movs
or
jg
adc
mov
add
add
mov
movs
adc
test
scas
lds
or
sub
sbb
mov
rcl
or
inc
mov
or
xchg
das
cmp
xor
pop
dec
mov
jl
imul
xor
cmp
mov
pushf
xchg
call
shl
add
cmp
push
fnstenv
and
vsubps
xor
imul
pop
dec
jg
cwde
ror
retw
cli
pop
add
(bad)
adc
inc
(bad)
push
pop
pusha
push
mov
iret
mov
jecxz
cld
mov
mov
add
adc
xor
outs
jnp
mov
dec
sub
push
adc
retf
test
cmps
je
fidivr
mov
mov
outs
rcr
inc
test
and
fs
jne
mov
popa
es
cmp
jne
mov
sub
hlt
push
repnz
ins
mov
jne
in
add
push
jae
sub
inc
xor
ds
test
push
pop
push
inc
ins
or
xchg
ds
outs
ja
or
inc
mov
popa
cdq
jmp
movs
out
jp
js
and
adc
sbb
dec
test
pop
pop
leave
cdq
pusha
jmp
sub
push
jge
adc
dec
or
jmp
push
fimul
adc
jns
jae
aaa
imul
jmp
adc
in
add
or
add
push
jb
call
scas
and
inc
xor
lock
jl
push
push
pop
dec
adc
add
and
sahf
adc
fdiv
ret
jbe
rol
push
sbb
mov
sbb
push
out
sbb
push
movs
lock
inc
pop
add
inc
retf
int3
or
sub
lahf
jmp
iret
(bad)
or
inc
jo
mov
sub
sub
dec
mov
pop
pusha
fimul
ret
or
call
push
push
push
pop
mov
push
or
dec
add
rcl
inc
jmp
sub
push
and
mov
sbb
sbb
out
cmps
push
call
sbb
mov
adc
push
ret
push
inc
sub
xchg
push
and
js
pop
xor
dec
xchg
adc
sbb
dec
dec
adc
movs
loope
jnp
mov
push
jae
sahf
and
push
stos
retf
dec
mov
test
jmp
cmp
jo
mov
mov
push
jne
pop
adc
adc
sbb
xor
movs
mov
cmc
sbb
or
mov
push
dec
push
es
fldln2
fs
jp
lea
ror
dec
aas
add
mov
xchg
dec
or
jle
js
inc
inc
lock
stc
add
arpl
lea
adc
xchg
rcr
adc
dec
pop
ss
(bad)
scas
dec
jbe
test
scas
shr
rol
adc
mov
xchg
push
loopne
(bad)
fxch
test
sbb
cmp
aaa
les
or
mov
mov
pop
add
sbb
iret
(bad)
pusha
test
sbb
(bad)
out
fnstcw
dec
or
sub
ja
or
push
or
and
adc
sub
cmps
jne
dec
popa
push
add
or
inc
push
shl
cmp
push
ds
or
lock
and
sbb
fwait
pop
inc
cdq
pushf
cmp
nop
rcl
add
xchg
xor
cmp
add
mov
fnstsw
sub
jmp
add
imul
push
pop
dec
pusha
jl
jb
xchg
xchg
pop
or
gs
mov
in
push
cli
mov
inc
lea
dec
cmp
mov
sub
mov
jnp
out
dec
ret
or
cmp
test
adc
dec
jae
mov
xor
add
pusha
int
add
or
test
pop
or
xlat
sub
retf
or
adc
cmp
xor
push
jmp
or
ret
(bad)
fadd
or
pop
fcomp
nop
mov
aas
setp
mov
repz
add
sub
add
out
(bad)
dec
mov
ficom
push
push
or
test
push
inc
call
ins
push
add
push
stos
cmp
pushf
push
in
mov
retf
dec
mov
or
ror
not
gs
cmpxchg8b
into
xchg
cmp
je
adc
sbb
adc
je
leave
jmp
xor
mov
dec
sub
mov
add
add
cmps
loope
add
dec
lahf
jmp
das
call
jmp
push
adc
add
js
mov
inc
xor
out
fidiv
shl
popa
cmp
xchg
loopne
xor
cmp
dec
adc
sbb
sub
or
sahf
fistp
mov
push
mov
jb
cld
fdivp
ins
mov
pop
mov
out
sahf
mov
pop
inc
mov
ds
mov
mov
push
iret
pop
add
or
js
and
ret
adc
fs
and
and
add
aaa
into
in
sbb
cmp
je
inc
xor
aaa
or
and
inc
icebp
sbb
dec
jmp
or
adc
movs
imul
pushf
push
addr16
movs
add
les
out
and
das
out
dec
cld
push
xor
cmp
jne
test
shl
sbb
retf
push
and
imul
push
mov
jne
inc
inc
fidiv
jo
ret
mov
fild
inc
push
jb
data16
aas
sub
mov
ret
rsqrtps
out
dec
sbb
mov
jg
cmp
jle
loope
sbb
xor
enter
dec
mov
je
stc
mov
or
push
mov
in
sub
jecxz
mov
or
dec
ret
push
ret
dec
mov
sbb
or
sbb
inc
jo
push
sbb
dec
lahf
xor
pop
push
fs
jb
push
add
add
and
nop
xor
inc
xor
or
cmp
add
and
out
call
test
fsub
mul
adc
scas
jnp
test
dec
xchg
dec
lods
div
cmp
stos
(bad)
bnd
rcl
mov
add
jae
mov
jl
jl
adc
ja
test
mov
or
adc
xchg
pusha
add
ror
mov
fldenv
hlt
mov
and
push
jge
add
add
mov
mov
sbb
add
in
mov
outs
je
pop
pop
dec
(bad)
push
adc
pop
sbb
add
pop
sbb
pop
push
sbb
fwait
sub
je
pop
clc
xchg
push
mov
cmps
pop
pop
enter
add
clc
inc
mov
add
and
dec
jnp
jne
push
mov
fmul
fld
or
xor
push
add
dec
or
pushf
sbb
js
or
push
sti
xor
sahf
mov
mov
adc
push
sub
icebp
clc
bound
pop
repz
mov
jp
lods
fiadd
xchg
xor
jl
ss
call
(bad)
push
movs
lock
push
sub
popa
mov
in
add
dec
das
sub
shl
mov
push
push
popa
test
repz
(bad)
jge
sub
jnp
shl
adc
sub
or
inc
add
add
or
test
imul
retf
movs
add
pop
test
rcr
call
cmp
mov
rol
push
xchg
add
or
fimul
test
push
sbb
dec
add
(bad)
or
push
outs
lods
and
shl
movzx
push
out
mov
dec
sbb
jmp
dec
js
push
aad
xchg
adc
sub
lea
lods
push
lahf
inc
mov
adc
pop
mov
fild
sti
or
add
cmp
jmp
adc
cli
add
mov
call
sbb
pop
xor
push
mov
ds
inc
lea
sbb
inc
adc
dec
sub
iret
adc
xchg
push
push
fst
or
or
popa
mov
pusha
mov
test
push
cmp
sbb
test
es
inc
mov
inc
and
aam
imul
lea
pop
mov
xchg
ret
push
jmp
sub
jmp
mov
fcmovnb
jg
(bad)
xor
mov
push
mov
cdq
mov
push
or
mov
ds
sub
stos
push
add
sub
push
stos
sbb
js
out
push
aaa
cwde
jns
sti
pop
jne
fldcw
mov
and
cmp
je
cmp
je
je
cmp
je
test
outs
es
je
cmp
je
dec
sub
daa
cmp
and
je
cmp
and
mov
cmp
je
inc
add
je
and
das
jne
ins
enter
push
icebp
cmp
and
or
stos
mov
lods
inc
cmp
pop
outs
push
mov
retf
push
jb
or
cmp
jbe
mov
xchg
pop
and
pop
or
mov
push
pop
nop
and
jo
cmp
add
xchg
call
dec
or
(bad)
repnz
ds
push
sub
lock
add
stc
mov
mov
inc
xor
mov
int3
and
pop
leave
in
cmp
add
loop
loopne
add
rcl
das
aaa
cmp
test
xchg
or
fadd
fmul
inc
xor
aaa
aam
sub
rcr
push
sub
neg
sub
sub
xor
dec
enter
ficom
(bad)
scas
xchg
jne
lock
add
add
int
cmp
push
and
nop
add
leave
xor
scas
fadd
cmp
adc
es
je
add
and
push
outs
cwde
mov
or
push
lods
or
mov
mov
das
mov
adc
xor
mov
ins
push
cmp
bnd
cmp
jg
sar
xor
cld
cmp
jge
cmp
add
mov
sbb
or
sub
fwait
sbb
xchg
inc
sbb
sbb
ficomp
push
scas
adc
or
push
popa
aaa
fcomp
mov
or
sbb
(bad)
in
xlat
es
jge
es
dec
xor
mov
xor
into
into
test
sub
ja
jne
push
add
sub
cdq
shl
dec
pusha
cmp
ja
lea
and
(bad)
js
mov
out
mov
imul
push
test
inc
push
sbb
jmp
(bad)
add
ret
jns
jmp
(bad)
sar
mov
jbe
add
push
cs
push
and
push
jo
inc
xor
out
shl
and
mov
inc
shl
ret
push
xor
add
sbb
add
mov
or
add
in
add
cmps
retf
or
dec
xchg
mov
pop
adc
leave
jns
mov
sub
in
or
pop
push
adc
jbe
enter
retf
add
fadd
pushw
js
mov
leave
xor
adc
imul
sbb
inc
jge
or
adc
jne
adc
jne
xchg
(bad)
cmp
fistp
clc
jo
mov
and
clc
clc
xor
or
es
icebp
nop
(bad)
add
push
mov
or
nop
rcr
and
test
xchg
dec
jmp
pop
xchg
dec
or
fist
mov
inc
mov
sbb
stos
dec
stos
mov
cmp
mov
push
fisttp
adc
cmp
inc
inc
push
xor
mov
jne
in
mov
add
add
jmp
rcr
xchg
inc
pusha
and
xchg
sar
push
ins
dec
push
dec
or
add
inc
or
call
cmp
push
push
dec
loope
ds
cmp
sbb
ret
mov
sbb
inc
sbb
ins
add
sahf
push
jmp
inc
and
shl
dec
push
das
pop
pop
bound
pop
ret
fadd
xchg
int
add
jne
sbb
cmps
dec
dec
movs
fcom
push
mov
mov
adc
xor
mov
pop
add
out
inc
mov
and
adc
lea
sub
cmp
add
xor
movs
jg
fsubr
pop
das
cmc
and
mov
and
push
cmp
in
push
xchg
pusha
fwait
es
call
dec
inc
iret
fs
cmp
add
mov
test
jns
and
add
xchg
jp
pop
rcr
jnp
adc
pop
not
dec
push
imul
sbb
mov
inc
dec
sbb
xor
cmp
gs
or
or
adc
push
mov
pusha
lods
pop
dec
(bad)
or
jo
push
xchg
cmp
adc
pop
sub
pushf
dec
cdq
cmp
aam
popa
pop
jmp
(bad)
clc
jg
cmp
sub
and
mov
outs
cmp
ret
xchg
dec
mov
push
sbb
cmp
dec
jl
sahf
aaa
test
xlat
inc
arpl
ja
mov
and
mov
inc
or
dec
push
and
in
jne
push
mov
and
cld
adc
adc
add
movzx
push
call
lea
xchg
icebp
inc
mov
cdq
sbb
mov
and
inc
push
sub
adc
es
ret
jb
cmp
xchg
ficom
in
sub
ror
repnz
leave
pop
cmp
pop
setl
adc
popf
mov
sub
mov
and
xchg
popf
rcl
ss
dec
adc
mov
movs
(bad)
ds
adc
mov
mov
cmp
mov
pop
lea
scas
test
mov
cwde
mov
nop
loopne
cmp
or
push
mov
pop
retf
dec
inc
popa
enter
lods
mov
mov
sbb
inc
scas
mov
xor
and
leave
xor
add
pushf
or
pushf
sub
and
sbb
movs
or
mov
push
call
and
test
movs
cld
je
add
into
mov
jne
popa
mov
pop
cwde
inc
nop
arpl
je
jno
cmps
mov
je
or
mov
add
or
lahf
mov
rcl
cmps
in
sub
sahf
and
xchg
and
inc
out
mov
add
inc
pop
add
loopne
push
fsubr
retf
call
push
mov
movs
sub
loopne
repz
(bad)
fadd
xchg
sub
fcomp
lods
pop
push
call
inc
dec
lods
jge
inc
or
inc
bound
or
xor
push
test
inc
xchg
ss
mov
or
mov
sub
push
test
add
push
or
jbe
rcl
jge
ror
shl
pop
outs
xor
push
arpl
dec
jmp
mov
dec
sbb
call
mov
xor
shr
retf
jle
out
sti
inc
mov
out
out
cmp
or
xor
ss
pop
adc
adc
cmp
push
cwde
test
test
pusha
add
bound
add
push
(bad)
lea
dec
xchg
push
cmp
jmp
enter
rcr
push
dec
inc
xor
adc
push
or
push
aad
pop
rcl
mov
pop
inc
movs
dec
(bad)
ficomp
jle
lods
push
mov
sbb
xor
push
inc
cmps
fsub
add
div
lea
or
(bad)
mov
mov
jp
dec
push
aas
aad
xchg
mov
cmp
mov
adc
and
and
jp
nop
int3
fwait
por
xchg
push
test
(bad)
rol
sti
and
cmp
adc
push
fisubr
dec
jl
push
adc
rcl
stos
int3
scas
push
nop/reserved
jne
jg
and
push
inc
fist
call
mov
data16
adc
cld
sbb
push
leave
mov
bound
clc
add
pop
in
ds
dec
(bad)
in
sub
pop
add
cmp
in
shr
adc
dec
add
jne
mov
add
in
sub
or
mov
sub
mov
sbb
jmp
xor
aam
xchg
lea
mov
xchg
xor
push
add
pop
adc
shr
or
pop
fmul
inc
loop
adc
mov
ror
gs
xor
pop
cmp
jae
mov
adc
jne
sub
pop
push
adc
and
mov
popa
es
xor
call
pop
add
fcom
mov
push
xchg
xchg
jmp
popa
cmp
stc
outs
push
jl
enter
adc
add
call
add
xor
add
rcl
mov
push
mov
repz
fbld
or
mov
fdivr
xor
push
add
or
or
dec
inc
jbe
bound
xor
xchg
and
dec
in
outs
mov
xchg
cdq
inc
adc
mov
jo
cwde
mov
gs
sub
fist
pop
int3
fcom
add
in
rcr
lods
and
add
(bad)
hlt
fnstcw
mov
enter
or
or
or
and
ds
xor
mov
mov
scas
jo
movs
dec
fsub
mov
add
jae
xchg
push
cwde
jne
pop
sbb
cmp
lahf
push
xor
add
sbb
jmp
mov
dec
xor
js
sti
sub
wrmsr
not
call
mov
pop
loop
call
pusha
iret
sbb
aas
inc
add
stos
inc
xchg
dec
push
stos
rol
pop
rcl
rcl
mov
sbb
dec
add
dec
jo
mov
push
sub
ins
push
push
test
push
inc
adc
lods
pop
sub
pop
adc
shl
ins
out
inc
add
adc
cmc
pushf
and
enter
popa
cmp
enter
clc
push
xor
jl
pop
add
xor
push
lahf
pop
add
les
call
sub
pop
mov
mov
lahf
push
je
adc
sti
js
add
dec
call
or
adc
push
icebp
fst
adc
ret
inc
cdq
mov
mov
sbb
dec
jmp
pop
mov
push
test
jb
jle
push
clc
xchg
dec
clc
jnp
sub
and
pop
push
or
inc
scas
jo
add
clc
and
pop
jae
mov
and
push
mov
clc
adc
push
cld
call
mov
or
push
cmp
jo
dec
or
adc
ror
mov
mov
inc
in
sub
xchg
dec
push
mov
mov
sub
add
xor
sbb
lock
adc
xor
call
(bad)
loope
xchg
mov
test
xchg
mov
fld
or
mov
gs
or
mov
aas
xchg
jmp
nop
(bad)
xor
xchg
mov
add
neg
movzx
mov
cmps
dec
sbb
xchg
fadd
sbb
pop
add
add
jmp
sub
mov
(bad)
jl
adc
repz
xchg
xchg
shl
or
loop
aaa
mov
sbb
sbb
cdq
shr
test
nop
push
sbb
push
or
fild
inc
sub
or
lods
stos
jae
movs
mov
ret
mov
iret
add
sbb
add
dec
xor
test
in
ret
imul
stos
jns
xchg
push
push
sbb
in
lods
in
repnz
inc
bound
jne
jns
inc
add
mov
inc
push
retf
(bad)
mov
in
sub
cwde
or
push
lods
and
retf
or
adc
xchg
rol
ss
push
pop
sbb
ror
test
xchg
jp
mov
push
adc
adc
sbb
mov
jg
jns
inc
and
push
aam
push
aam
mov
test
mov
mov
and
sti
jne
or
movs
fwait
adc
xor
enter
in
fsub
out
inc
js
add
and
sbb
mov
push
push
add
test
jae
add
pop
dec
inc
addr16
in
lods
mov
xor
cmp
adc
adc
sub
push
jb
out
test
sub
aas
or
and
fstp
jmp
cmp
jne
push
popa
mov
push
push
lock
lods
push
pop
sbb
out
sbb
in
adc
popa
fimul
adc
pop
popa
pop
or
pop
dec
xchg
xor
mov
lods
cmp
add
fsub
xchg
psubusb
test
fsub
jl
push
mov
jl
test
push
dec
add
jb
daa
lea
dec
leave
mov
or
call
xor
inc
ds
(bad)
test
and
jg
sbb
push
xlat
inc
or
add
cmc
sbb
jno
ret
mov
add
fild
pop
out
mov
pop
jecxz
or
into
enter
inc
push
jmp
and
test
add
leave
pop
enter
out
pop
out
cmp
pop
and
pop
out
daa
push
repnz
pop
out
lods
lods
xor
nop
retf
enter
test
push
mov
lods
add
mov
mov
jg
adc
test
push
mov
adc
int
or
xor
ins
jmp
je
dec
loopne
aaa
add
inc
loopne
mov
cmp
push
test
add
mov
inc
xlat
xor
and
test
movs
or
pop
inc
inc
sub
mov
or
or
fs
adc
inc
sbb
call
in
or
xchg
aam
or
fild
out
mov
inc
and
or
sub
cs
adc
enter
ret
xchg
or
or
pop
dec
dec
inc
dec
cdq
mov
xchg
or
cmp
push
push
pop
mov
push
fisttp
aam
sub
adc
dec
sbb
cmp
(bad)
sub
aaa
and
mov
adc
mov
sub
or
add
xchg
ss
mov
ror
add
sbb
or
cmp
mov
ds
rcr
push
enter
stc
arpl
jne
or
fcmovnb
pop
mov
push
sbb
ins
jl
adc
hlt
pop
add
cmp
and
xchg
dec
or
dec
in
mov
sbb
jmp
push
push
popa
jl
push
ins
dec
ret
xchg
inc
push
dec
push
xlat
sbb
mov
jg
xor
mov
pushf
(bad)
push
aas
jmp
call
je
sbb
xchg
xor
out
rcl
inc
lea
adc
leave
test
ins
movs
and
ror
xchg
sub
pop
and
xor
rcl
inc
dec
or
sbb
mov
jo
cmp
pushf
add
mov
and
out
lea
lock
es
xlat
xchg
jmp
lds
(bad)
jo
std
pop
rcl
jnp
pop
shl
out
or
jbe
sub
lods
xor
or
jno
jmp
repnz
call
loop
lea
cmps
dec
test
cmps
int3
je
sbb
or
lea
gs
scas
pusha
jmp
adc
adc
xchg
dec
and
or
sahf
dec
popa
je
fs
lods
adc
in
xchg
add
xchg
rcr
adc
or
xchg
js
push
push
not
and
sub
push
fisttp
adc
lea
dec
or
(bad)
lods
mov
repnz
or
and
sbb
xor
and
push
cmc
xor
test
das
in
pop
clc
adc
stc
inc
nop
pop
jb
or
jo
(bad)
or
push
sbb
cmp
push
add
mov
outs
inc
adc
inc
pusha
pop
fld
sub
mov
add
cdq
div
push
add
push
jmp
call
mov
ret
jb
mov
xor
sub
jmp
jne
popa
retf
test
ss
push
xor
xor
adc
test
push
rcl
mov
add
lods
out
cmps
xor
pusha
mov
cmc
xchg
into
ins
loop
daa
bound
ins
sbb
lahf
mov
jns
fadd
test
and
xor
push
xchg
test
hlt
pop
xor
cmp
jne
cmp
sub
or
mov
imul
dec
je
mov
add
push
rol
push
mov
sbb
mov
and
ror
adc
ret
repz
jno
imul
mov
pusha
push
inc
inc
or
idiv
or
sahf
or
inc
inc
mov
sbb
xor
dec
mov
pop
lahf
and
jg
adc
jmp
push
repnz
or
mov
inc
xchg
add
test
pop
fidiv
sbb
xchg
lock
or
mov
popf
cmp
jne
mov
inc
out
push
pop
sub
fsubrp
sub
or
inc
cmp
mov
div
jl
push
cmp
mov
jne
adc
jle
aam
loop
or
fistp
dec
je
icebp
dec
adc
imul
fsub
sbb
push
add
jge
dec
mov
adc
movs
jo
aas
sbb
pusha
cs
jns
(bad)
push
in
mov
pop
mov
je
mov
sub
add
aas
or
data16
js
or
xor
mov
ret
or
or
push
add
pop
sbb
mul
dec
sbb
xor
out
push
and
pushf
mov
jae
and
fwait
push
xor
mov
push
push
push
ror
rcr
push
and
lods
in
adc
add
adc
mov
xchg
or
repnz
stos
push
or
sub
ins
mov
stos
push
xor
push
sahf
mov
movs
cmc
cmp
out
adc
test
jno
xor
add
mov
adc
(bad)
rcr
cmp
fisttp
cwde
sub
jl
jo
pop
xor
adc
pop
or
cmp
pop
push
dec
and
mov
sub
dec
sbb
out
call
in
repnz
mov
xor
stos
adc
ret
and
inc
adc
enter
xor
or
cmc
pop
xchg
adc
mov
xchg
sahf
lahf
push
rol
mov
dec
shl
push
ss
cmps
cmp
push
fs
imul
add
hlt
add
mov
sub
in
or
cmp
push
adc
sbb
or
push
dec
dec
pop
and
adc
add
aad
aaa
rcl
push
jle
imul
cmp
mov
shr
add
xchg
pusha
dec
xchg
xor
or
mov
fistp
inc
shl
sahf
jo
daa
mov
sahf
repz
sub
ret
jne
sub
dec
and
pop
cs
or
push
or
pusha
push
hlt
or
mov
jns
popa
ret
dec
sbb
pop
fwait
sbb
nop
ret
cdq
push
pop
ret
in
push
jno
mov
jns
in
(bad)
inc
data16
int3
mov
gs
pop
js
pop
in
pusha
enter
in
or
rcl
dec
or
movs
mov
mov
test
mov
mov
fsub
inc
sbb
loop
push
call
cmp
push
ret
dec
clc
jmp
push
sub
fcmovnb
cwde
leave
add
mov
aam
add
xor
out
es
out
add
fwait
cmp
jae
and
sbb
dec
test
cmp
xchg
inc
stos
loope
jnp
pop
pop
mov
mov
jno
sub
(bad)
ds
push
xchg
inc
adc
rol
imul
sub
add
adc
ins
xchg
push
push
retf
shl
pop
test
hlt
mov
(bad)
ds
int3
imul
enter
sbb
fild
sub
loope
loop
jb
or
jo
or
xor
scas
dec
js
mov
dec
inc
cmp
out
mov
pusha
mov
inc
gs
inc
lods
(bad)
mov
je
add
push
inc
jp
je
mov
push
jl
mov
push
daa
push
enter
mov
aaa
pusha
mov
ins
je
ins
xchg
and
cmp
add
out
mov
or
test
out
jne
cmp
leave
push
test
or
add
(bad)
push
inc
or
fsubr
fdivr
leave
xchg
sbb
xchg
push
jb
or
dec
in
mov
pop
fcom
fld
or
jb
pop
pop
dec
mov
dec
je
adc
push
iret
xor
mov
jl
or
xchg
or
repnz
push
bound
sbb
add
stc
lods
nop
inc
mov
mov
bound
cmps
or
add
lahf
jge
retf
or
dec
je
inc
mov
repz
xchg
je
inc
scas
jbe
iret
cmps
add
nop
pop
and
ss
wrmsr
sub
pop
jg
mov
add
dec
lds
sbb
xchg
js
inc
je
call
inc
or
add
push
les
retf
inc
loopne
or
add
and
push
sbb
add
test
or
(bad)
lahf
cmp
push
adc
xor
mov
xor
rcr
cmp
dec
shr
jmp
or
ret
mov
ins
push
movs
push
shr
aad
xchg
push
adc
nop
xor
lods
or
lods
dec
mov
and
jne
xchg
add
xor
cdq
retf
and
push
or
stos
push
stos
push
(bad)
movs
jbe
dec
sahf
add
ret
push
cmp
add
sub
and
fcomp
mov
jns
nop
arpl
inc
mov
or
test
adc
add
rcl
jne
pop
push
sbb
ins
xor
add
es
cwde
mov
shl
enter
adc
push
rcl
add
sbb
(bad)
cmp
cmp
pop
add
adc
or
inc
mov
test
shl
push
mov
xchg
hlt
int3
mov
cld
adc
ret
pop
and
dec
scas
and
int3
or
jo
mov
int
push
stos
sub
movs
shr
push
mov
sbb
lods
jne
inc
add
in
popf
push
mov
add
mov
test
dec
ror
sub
(bad)
cmp
inc
enter
adc
sbb
leave
pop
repnz
fisttp
add
sbb
mov
sbb
adc
cmp
push
and
sbb
inc
call
or
das
or
sbb
enter
sbb
sbb
mov
sbb
mov
add
inc
or
or
add
jl
dec
sub
sub
inc
add
adc
or
popa
add
jo
pop
aam
nop
lahf
lock
and
xchg
mov
sbb
imul
in
lea
adc
repnz
(bad)
shl
mov
jnp
mov
test
in
clc
push
add
lea
push
test
inc
inc
js
cwde
dec
imul
scas
cwde
sbb
xchg
adc
mov
sbb
xchg
mov
inc
sbb
sbb
rol
(bad)
push
mov
stos
(bad)
sti
(bad)
in
ins
lea
push
mov
xchg
push
fmul
mov
js
sbb
bound
inc
and
xor
sub
jmp
xchg
xor
or
lahf
jecxz
cmc
push
and
and
cmp
add
popa
push
retf
aas
push
sbb
add
cmp
mov
int3
push
add
inc
cmp
mov
xor
or
daa
mov
mov
cwde
mov
add
pop
pop
aam
sub
repnz
adc
pop
or
or
outs
in
in
cmp
inc
or
cmps
cmp
or
pop
push
inc
cmp
or
dec
inc
cmp
jo
and
push
fstp
jae
test
pushf
mov
jbe
loopne
sbb
pop
pop
inc
sbb
or
mov
loop
jmp
and
js
imul
pop
lea
mov
mov
aaa
mov
inc
or
mov
in
lock
jmp
cmps
and
shl
adc
and
xchg
xor
push
mov
pop
xor
std
(bad)
cdq
mov
xchg
dec
add
pop
sub
push
push
sahf
jp
mov
pop
bnd
(bad)
mov
inc
call
sbb
jge
pop
dec
inc
stos
outs
(bad)
fiadd
sub
popa
adc
mov
add
add
mov
dec
xor
fnstcw
jb
jb
cs
push
push
sbb
hlt
dec
inc
repz
adc
scas
dec
xor
sbb
add
inc
and
sbb
jae
xor
sub
sub
out
jnp
jp
shr
pop
mov
sub
call
add
lock
clc
ja
push
pop
rol
mov
lods
cwde
inc
fidivr
test
or
jl
les
add
cmp
test
ins
mov
sbb
cmp
mov
sub
adc
dec
enter
(bad)
sbb
xor
das
dec
sbb
sub
test
lods
fs
add
cmp
add
pop
adc
push
leave
jecxz
movs
adc
add
imul
jno
sbb
shl
pop
pop
je
or
loop
(bad)
mov
aam
or
cmp
add
mov
sub
jg
(bad)
sti
xor
cwde
clc
or
add
or
sbb
sub
cmp
push
jnp
push
sub
jge
adc
or
and
add
mov
mov
cmp
je
loop
iret
inc
sahf
daa
(bad)
dec
mov
into
dec
xor
pop
xor
cmp
jne
rcl
and
enter
jl
enter
rcl
sbb
xchg
or
loopne
loopne
cmp
and
or
dec
add
push
cmp
or
in
sbb
mov
and
dec
and
pushf
ret
or
push
or
nop
inc
sub
push
mov
mov
nop
lds
inc
repnz
cs
adc
xor
jns
pop
adc
jo
test
das
in
pop
sbb
adc
jbe
push
inc
loopne
pop
sub
sub
rol
sub
jo
pop
sub
xchg
test
daa
pop
inc
sub
das
push
push
enter
daa
loope
jmp
rol
lods
out
push
jecxz
push
push
add
popa
(bad)
ret
cmps
bound
inc
xchg
adc
fisubr
test
and
sub
push
and
sbb
mov
out
ss
add
xor
leave
ret
sbb
xor
add
movs
sub
jo
mov
add
add
and
add
ds
sbb
je
xor
enter
mov
test
push
inc
dec
inc
popa
arpl
imul
pop
call
jno
shr
and
inc
or
mov
pop
mov
fimul
mov
xchg
loopne
add
loop
fdivr
push
push
lock
inc
sub
pop
adc
push
mov
pop
shr
test
dec
or
test
lods
fs
rol
inc
in
mov
and
ret
je
push
sbb
dec
fsub
inc
les
les
mov
sbb
xor
inc
push
je
shl
or
enter
aas
adc
inc
or
pop
mov
inc
scas
xchg
add
or
imul
hlt
jb
sub
aas
sub
inc
or
(bad)
mov
jno
sbb
add
clc
inc
call
pop
adc
adc
push
or
and
inc
mov
push
rcr
jl
add
push
gs
(bad)
shr
adc
(bad)
mov
js
jns
cmp
cmp
in
dec
push
push
dec
dec
pop
imul
fcomp
xchg
mov
loopne
test
sub
inc
sbb
xchg
out
push
pop
push
cmp
iret
inc
cli
les
inc
add
jo
xchg
ret
mov
cmp
push
sbb
fbld
xor
mov
add
push
xor
jge
pop
sub
cmps
jo
push
xor
push
iret
or
scas
push
or
scas
dec
and
jo
add
mov
loop
inc
stos
cmp
fld
or
(bad)
ja
pusha
test
nop
add
jmp
adc
adc
stc
cmp
add
sbb
mov
(bad)
mov
popf
mov
jge
and
dec
bound
jmp
inc
sub
mov
scas
inc
or
ror
or
pop
xor
mov
pop
in
xor
retf
adc
sub
dec
push
stos
stc
adc
das
loope
aad
or
mov
test
add
rcl
adc
sbb
sub
dec
xor
ins
add
jp
mov
and
mov
(bad)
outs
sar
shr
cmp
aaa
sub
out
inc
arpl
mov
mov
cwde
fdivr
mov
adc
or
pop
ins
dec
adc
cs
push
stos
pop
push
mov
sub
ja
movzx
sub
xor
mov
push
adc
test
push
setne
clc
xchg
arpl
push
shl
or
sbb
faddp
xorps
push
movhps
and
iret
gs
fidivr
stc
fcom
push
stc
movs
imul
ss
push
add
push
stos
popa
sbb
jecxz
add
ret
xor
mov
in
or
sbb
(bad)
icebp
and
fst
rol
mov
mov
adc
stos
or
lea
out
(bad)
aam
aad
dec
std
mov
add
test
push
xchg
lock
sbb
js
out
test
mov
and
push
inc
dec
call
cmps
jl
cwde
pop
nop
movs
add
push
nop
imul
dec
jae
pop
in
push
aam
mov
stc
jns
dec
inc
push
push
push
fs
imul
xor
test
and
add
mov
nop
inc
adc
ret
and
leave
mov
dec
mov
lock
inc
pop
movs
mov
inc
shl
inc
adc
stc
add
xor
mov
mov
mov
adc
mov
mov
mov
inc
loope
mov
or
pop
test
push
push
dec
and
sbb
ret
sbb
ins
xchg
mov
pop
jns
adc
mov
scas
pop
int3
loopne
aas
jl
or
fistp
sbb
or
inc
xor
and
mov
mov
or
cmp
or
adc
xor
nop
cmp
jmp
add
inc
inc
sbb
inc
fistp
adc
test
dec
sbb
jbe
lea
mov
cmp
cmp
(bad)
cmps
fxch
lahf
cs
iret
inc
or
cli
mov
pop
pop
ret
xchg
cdq
jbe
cmp
mov
aam
icebp
jne
test
ret
jns
es
ret
(bad)
shl
pop
xlat
int3
ret
fild
cmovle
add
jnp
mov
sbb
lods
push
dec
rcl
inc
adc
jns
push
adc
push
inc
out
mov
push
ror
xchg
cmp
sbb
and
pusha
cmp
dec
sub
jge
in
cmp
push
sub
ss
xor
int3
das
jne
and
inc
fidiv
and
mov
mul
pop
ret
sahf
sbb
adc
dec
aam
push
jg
cmp
xor
retf
aam
adc
adc
stos
mov
mov
pop
add
adc
jno
add
push
xor
mov
fimul
or
push
inc
adc
data16
pushw
sbb
inc
inc
je
sbb
and
je
cmp
xor
mov
mov
inc
adc
and
sbb
sub
test
push
dec
jne
clc
xchg
inc
movs
mul
or
mov
jns
add
js
outs
mov
sbb
mov
adc
lahf
add
ret
xor
add
aad
xchg
or
fwait
sbb
mov
aas
je
cmp
xchg
or
add
xchg
pop
mov
mov
dec
inc
mov
dec
dec
jmp
nop
sbb
or
lahf
leave
add
shl
push
cmp
cld
add
xchg
test
int
es
test
cli
push
cmp
sub
fs
sub
xchg
cmp
iret
sub
dec
push
inc
push
xor
inc
inc
imul
xor
mov
ja
(bad)
stc
ds
mov
lea
cmp
ins
call
ss
push
lock
or
lea
or
das
cmp
sbb
xchg
inc
fwait
lods
sub
les
jbe
mov
dec
or
xchg
lea
cmp
es
and
aas
fsubrp
sbb
cmp
enter
and
pop
mov
xor
and
push
cmp
jne
call
xchg
mov
shl
cs
inc
sbb
mov
enter
xor
test
outs
xchg
mov
adc
jmp
inc
aad
mov
xchg
loopne
add
push
and
mov
adc
inc
cwde
push
mov
push
in
and
sub
sub
or
pop
mov
cmp
sub
pop
push
sbb
push
pop
fcom
clc
lea
and
cmp
rcl
dec
ins
xor
pop
push
pop
dec
dec
inc
cmps
pusha
cs
dec
push
dec
cmp
push
xor
pop
cmps
dec
xor
pop
mov
or
adc
mov
fs
cmp
sbb
pop
dec
ror
xchg
(bad)
(bad)
cmc
mov
cli
loope
adc
mov
or
sbb
movs
xor
or
and
cmp
stc
mov
stc
cmp
jne
or
xor
or
nop
sub
add
(bad)
xor
sub
push
and
push
push
pop
js
femms
in
jle
cmp
and
mov
shl
fld
sub
fsubr
js
into
jne
or
rcr
push
jmp
jo
cmp
push
pushf
daa
mov
xchg
and
retf
stos
jo
mov
adc
(bad)
mov
jmp
add
dec
xchg
jmp
push
xor
jo
jmp
dec
add
cli
xchg
sub
inc
adc
push
pop
cmp
adc
in
push
(bad)
lock
push
sbb
add
push
popa
jnp
leave
push
and
inc
lahf
mov
jo
and
mov
clc
mov
add
push
cmp
jmp
sub
ror
inc
dec
xor
pop
add
xchg
jl
mov
lock
mov
hlt
adc
cmp
and
ret
jb
(bad)
rcr
add
adc
or
dec
and
dec
and
inc
inc
xor
mov
sub
frstor
pusha
mov
push
jp
push
jl
dec
movs
cmp
loopne
enter
xor
or
and
or
or
or
xchg
les
mov
or
loope
mov
mov
mov
xchg
loop
mov
and
push
mov
adc
xor
xchg
dec
inc
push
mov
mov
sub
mov
arpl
pop
ss
push
das
mul
jl
mov
sbb
or
les
xchg
nop
and
or
dec
xchg
sbb
aas
mov
cmp
xor
xchg
hlt
sbb
mov
inc
xchg
mov
sbb
leave
sub
test
xor
(bad)
pop
lea
ss
adc
push
push
mov
data16
mov
sub
and
movs
and
or
(bad)
jnp
(bad)
sar
icebp
sub
in
or
or
inc
and
(bad)
mov
fimul
icebp
mov
xor
out
(bad)
push
aaa
jnp
cmp
push
das
push
jl
loopne
mov
out
dec
add
cmc
cmc
push
push
jnp
adc
sbb
retf
mov
cs
callw
mov
out
add
lahf
dec
rcl
mov
fwait
or
pop
cmp
xor
popa
in
sbb
pop
xchg
mov
mov
cmp
cmp
shl
or
jns
jnp
dec
cmp
rol
je
scas
pop
test
je
inc
jge
ins
retf
mov
test
imul
lods
adc
in
jp
pushf
push
mov
dec
leave
je
fmul
ds
mov
mov
psubw
jmp
popf
int3
rol
in
test
iret
adc
xchg
jbe
mov
or
mov
jmp
mov
adc
and
push
adc
movs
cmps
mov
ss
sub
rdmsr
lock
inc
adc
test
or
and
xor
and
jb
pop
sub
push
add
pusha
cmc
(bad)
mov
ret
in
sbb
shl
ins
add
inc
add
mov
out
sub
adc
(bad)
and
jle
push
sub
stc
fadd
inc
les
xchg
adc
pop
les
cmp
es
dec
gs
shl
test
sub
enter
js
pushf
push
ss
or
jns
mov
push
and
add
in
lods
add
inc
call
and
xchg
xchg
jecxz
cmp
pop
outs
push
add
inc
in
dec
jl
ja
pop
jp
and
sbb
sub
lods
aaa
fadd
dec
mov
xor
mov
sub
adc
push
or
adc
daa
leave
pop
mov
sub
jbe
cmp
and
sub
je
add
mov
xchg
sub
push
xchg
mov
cmp
inc
in
push
in
inc
inc
add
invd
xor
pop
or
lods
inc
cs
inc
inc
inc
inc
push
or
add
adc
movs
adc
inc
mov
inc
inc
inc
inc
push
xor
inc
inc
retf
fist
mov
dec
sbb
xor
cmp
inc
inc
and
or
inc
inc
repnz
sbb
inc
inc
or
ins
inc
inc
inc
inc
mov
mov
and
enter
jnp
inc
leave
int
jb
inc
inc
or
mov
xor
inc
inc
inc
inc
mov
out
cs
jae
(bad)
rcr
repnz
jp
fistp
out
outs
dec
pop
in
fild
dec
gs
inc
inc
inc
add
mov
jbe
(bad)
mov
and
or
fcom
push
push
inc
mov
cmp
sbb
add
mov
mov
and
pop
xchg
add
addr16
xchg
sub
sbb
add
mov
sahf
or
lods
stc
mov
lods
adc
and
or
and
sbb
or
aas
inc
(bad)
pusha
xchg
mov
or
inc
pusha
add
in
stos
out
add
cmp
cmp
movs
sbb
cmps
jmp
sub
call
jmp
aam
fimul
mov
lahf
mov
jns
imul
psrlq
inc
dec
sahf
lock
jmp
sti
pop
aam
ror
cmp
fdivr
leave
clc
pop
cld
mov
inc
push
add
outs
in
or
shl
cld
dec
or
adc
dec
xor
lea
inc
mov
and
mov
push
add
or
push
push
pop
pusha
mov
or
jle
cmps
and
pop
pop
addr16
push
sbb
(bad)
xor
push
push
adc
inc
rcl
xlat
cmc
sub
sub
jmp
clc
cmp
dec
xchg
cmp
lea
out
or
or
jno
jg
outs
push
jne
add
jmp
push
and
pop
repz
mov
adc
add
xor
into
push
push
add
imul
inc
add
adc
les
das
jmp
mov
cmp
pop
fsubr
push
ficom
mov
test
adc
fbstp
and
cwde
inc
mov
inc
mov
adc
dec
test
repnz
xor
adc
mov
dec
mov
loopne
(bad)
mov
adc
add
add
inc
loope
or
or
arpl
jmp
mov
in
jmp
(bad)
xor
jnp
nop
sbb
jnp
xchg
mov
mov
jge
jmp
out
es
adc
cmp
or
cmp
adc
int
sbb
imul
retf
adc
pusha
or
pop
or
je
dec
jne
xlat
push
imul
inc
int3
xor
rcr
les
sbb
loope
fdiv
ins
inc
pop
pop
and
push
inc
lods
xchg
mov
inc
or
cmps
mov
push
xchg
clc
fwait
xchg
dec
adc
sbb
test
ret
in
adc
hlt
xchg
ss
sub
mov
pushf
test
push
sbb
inc
or
rcl
adc
inc
jp
and
iret
mov
stos
sti
or
enter
push
adc
and
sti
sti
push
add
adc
hlt
int3
mov
xor
or
jbe
in
mov
cmp
mov
mov
aas
ret
sub
jae
xchg
and
clc
dec
in
lock
hlt
pushf
push
mov
jmp
call
int3
push
pop
adc
movs
iret
ss
cmp
movs
test
sub
jae
mov
mov
or
and
sbb
jg
enter
add
sbb
adc
cld
dec
add
jns
inc
enter
pop
inc
inc
inc
push
enter
inc
mov
enter
(bad)
jl
pop
or
or
or
mov
mov
sub
adc
or
in
inc
or
mov
add
inc
inc
xchg
xor
inc
pop
rcl
xor
sar
js
adc
push
mov
push
dec
pop
sbb
and
sub
in
inc
pop
aad
and
shr
fs
inc
inc
inc
fs
es
inc
inc
test
mov
sub
add
inc
xor
adc
jmp
or
xchg
test
jae
mov
add
and
push
ret
jns
pop
ret
or
sbb
adc
cmp
jae
inc
pop
aam
mov
or
xor
pop
sbb
pop
xchg
cmp
test
push
fiadd
xor
push
xor
adc
xchg
and
pop
sub
or
dec
pop
cmp
test
lods
mov
sub
fistp
inc
inc
jne
dec
push
inc
and
fsubr
outs
or
mov
mov
pusha
bound
cmp
in
push
shl
push
push
inc
inc
mov
cmp
sbb
stc
mov
push
lahf
adc
or
pop
(bad)
and
xor
cwd
sbb
inc
cmp
or
mov
adc
(bad)
sbb
pop
xchg
and
adc
cmps
icebp
(bad)
mov
rol
ret
cwde
xchg
xor
jle
mov
shl
daa
inc
mov
adc
movs
mov
and
ins
mov
mov
sub
ds
add
fcomp
xchg
inc
(bad)
gs
test
les
push
mov
mov
jnp
les
and
outs
inc
lods
cs
movs
sbb
jns
add
sub
cwde
aaa
mov
test
add
pop
or
imul
push
mov
dec
cmp
add
int3
xchg
xchg
sbb
dec
lea
xor
aam
es
test
mov
mov
mov
and
call
sub
push
push
cmp
scas
cli
mov
pop
sti
sar
add
cmp
inc
add
cli
push
popa
mov
dec
clc
inc
add
push
mov
add
mov
sbb
in
push
rcr
dec
add
dec
fadd
dec
and
mov
pop
shl
push
mov
cmp
cmp
sub
loop
xor
fwait
xchg
rol
or
xchg
and
cmp
or
inc
and
sar
cmp
cmp
sbb
push
and
sar
mov
js
add
das
mov
mov
add
add
jnp
leave
enter
add
push
sub
imul
xchg
clc
ins
(bad)
dec
shl
mov
sbb
inc
add
lahf
push
lods
daa
inc
mov
push
push
cmp
shr
rol
adc
dec
pop
adc
or
mov
mov
xor
adc
or
or
sbb
sbb
imul
outs
adc
je
cmp
sbb
nop
mov
retf
adc
and
jle
sub
popa
sub
or
rcl
push
push
mov
mov
push
adc
loopne
ss
inc
sbb
jns
or
mov
js
sbb
inc
into
lea
push
std
hlt
or
xor
mov
and
jb
aaa
cmp
push
jne
pop
and
or
dec
or
test
jg
mov
nop
stos
mov
dec
test
daa
mov
inc
xor
mov
aaa
leave
scas
adc
xchg
nop
mov
mov
inc
mov
inc
or
and
cmc
fmul
imul
add
and
enter
cmp
jl
push
inc
lock
ss
sbb
aas
sbb
add
ret
cwde
sbb
es
mov
pop
das
(bad)
and
dec
sbb
mov
nop
iret
movs
adc
pop
js
fstp
mov
sub
sbb
ror
sub
arpl
fnsave
hlt
cmp
fild
dec
xor
enter
ins
add
push
dec
adc
dec
dec
xchg
or
mov
xchg
imul
loope
push
test
adc
xchg
add
(bad)
jle
push
loope
hlt
cld
lea
add
jmp
push
mov
or
fadd
adc
push
mov
cmp
push
add
xchg
xchg
add
cdq
out
fild
ja
and
sbb
adc
dec
jecxz
jecxz
mov
mov
std
xor
les
dec
je
daa
sbb
and
push
sub
cwde
push
je
or
dec
adc
mov
js
adc
in
and
xchg
shr
jne
and
mov
xchg
push
adc
mov
cmps
inc
adc
sub
sbb
fs
adc
sbb
add
sub
pop
dec
popa
push
inc
pop
jp
and
pop
add
mul
push
mov
(bad)
mov
or
push
imul
adc
pop
inc
add
jbe
inc
adc
xchg
mov
mov
inc
or
dec
push
inc
inc
push
loop
inc
cmp
mov
dec
mulps
push
push
and
sbb
add
clc
int3
(bad)
ja
xchg
push
inc
rcl
mov
xchg
(bad)
push
ins
inc
sub
repz
cmovge
push
rcl
and
push
int3
nop
ror
push
shr
push
inc
mov
adc
dec
and
loopne
iret
add
or
fmul
adc
sub
sub
push
jo
xchg
cmp
rcl
and
mov
fcomp
stc
push
or
push
push
sbb
mov
add
movs
mov
or
mov
daa
xlat
push
lods
sbb
push
mov
mov
test
cmp
call
xchg
jne
or
push
fst
pop
jl
cwde
je
dec
push
sbb
sahf
ins
xor
cmp
xor
push
mov
xor
dec
fld
adc
inc
pop
daa
pop
push
sbb
push
mov
das
adc
lds
imul
sbb
aaa
test
rcl
mov
outs
adc
call
fmul
xchg
add
inc
fld
ror
retf
test
push
sbb
and
mov
mov
inc
pop
push
add
adc
add
popa
xor
fimul
cmp
movs
std
mov
push
sahf
cmp
adc
or
in
push
pop
pushf
mov
scas
nop
js
sbb
push
ds
pusha
lods
iret
in
mov
fcomp
mov
cmp
pop
pop
pusha
pusha
xchg
jl
adc
add
mov
pop
mov
addr16
jecxz
or
stos
xor
push
mov
adc
adc
je
bound
xor
cs
sub
repz
inc
inc
or
cmp
sub
pusha
dec
xor
not
xor
mov
sbb
fs
pop
loop
and
xchg
in
je
dec
stos
stc
fsubr
fist
and
jp
js
rol
and
lds
cdq
mov
aam
sub
push
xchg
fisttp
(bad)
es
sbb
cdq
sbb
popa
lea
call
add
fadd
push
cmp
out
lea
test
or
scas
dec
rcl
xchg
pop
outs
fist
and
xchg
sub
sbb
lock
or
ds
(bad)
or
pop
dec
push
xor
sub
add
sbb
mov
rol
ins
xchg
jmp
xchg
iret
jle
pop
ret
lea
push
sbb
xor
inc
or
dec
pop
sub
jb
pop
ja
cmp
push
test
inc
push
jl
and
cmp
add
into
arpl
push
or
fs
cmp
or
xchg
sub
and
add
add
outs
sbb
sub
and
cmp
imul
fs
xchg
xor
cmps
cli
cmp
mov
dec
mov
jmp
imul
and
xor
imul
or
adc
adc
mov
jbe
dec
ds
pop
mov
popa
and
push
pop
ret
jge
xchg
mov
adc
cmp
cmp
inc
ret
or
jp
ins
cmp
sub
push
jo
push
push
sbb
sbb
lods
inc
or
das
add
xchg
xor
push
sbb
sbb
push
lods
pop
imul
or
inc
call
xlat
xchg
fsub
je
sub
add
sub
nop
fwait
or
fwait
rcr
and
inc
dec
add
dec
enter
add
sahf
fcom
popf
ins
test
add
enter
adc
pop
xchg
inc
sub
out
sti
test
sti
mov
movs
cdq
imul
xor
bound
rcr
loopne
loopne
dec
push
xchg
popa
in
add
nop
repnz
out
cwde
or
lea
push
pop
jo
add
push
push
and
and
call
dec
mov
js
pop
maxps
lahf
jle
xchg
mov
mov
fucomi
or
adc
in
xchg
sub
repz
fs
out
adc
ds
pusha
mov
pusha
xchg
rcr
and
push
repnz
mov
push
and
ins
pop
jb
or
inc
inc
xchg
xchg
jo
push
pop
int
es
add
pop
xchg
daa
call
mov
add
xor
test
or
pop
cmp
sar
test
mov
dec
push
mov
jle
test
jo
movs
loopne
xor
push
push
pop
movs
movs
fiadd
ret
cmp
ds
in
inc
mov
repz
lea
cmp
loop
sbb
mov
int3
mov
sub
add
xchg
arpl
fisttp
push
sbb
xchg
push
jmp
push
icebp
pop
mov
cmp
gs
bound
(bad)
popa
inc
pusha
add
les
push
shl
mov
or
add
lock
cld
pop
pop
movs
not
mov
lea
xor
es
xor
mov
pop
mov
add
and
es
add
jae
inc
add
ret
add
add
or
add
repnz
loope
dec
ret
jg
xor
sub
gs
repnz
cmp
je
or
je
push
test
or
mov
stc
data16
xchg
inc
outs
loopne
pushf
in
fs
xor
sub
enter
jns
ret
call
sub
ror
sbb
sar
ret
jge
add
imul
xchg
sub
push
inc
fsub
retf
imul
imul
leave
pop
cwde
cld
xchg
xlat
pop
cmp
pushf
test
(bad)
mov
stos
das
cmps
or
push
or
dec
and
ss
loopne
pop
xor
cmc
xor
lahf
adc
jb
leave
leave
push
push
fsub
fdivr
enter
or
dec
fadd
mov
xchg
add
je
pop
jmp
xor
rcl
cmp
add
sbb
inc
and
cli
add
inc
pop
jne
jmp
adc
dec
ins
ror
and
and
int3
(bad)
add
in
cmp
mov
in
xor
cmp
ins
gs
cld
loop
mov
dec
pop
push
xor
cmps
fwait
aas
test
dec
adc
stc
lea
sub
cld
movs
pop
mov
or
loope
cmps
jmp
lock
jns
cmp
nop
les
or
push
inc
push
ds
jno
jns
in
jmp
xor
add
loop
test
add
in
jo
adc
push
daa
mov
add
xchg
xchg
ret
adc
or
pop
fnstenv
lods
shl
sub
lock
jmp
das
push
jmp
push
ret
cmp
ds
add
scas
inc
loopne
and
lahf
pop
inc
popa
add
movs
push
add
push
xor
adc
sahf
es
imul
bswap
js
arpl
pop
clc
push
push
sbb
cmp
pop
cvtpi2ps
(bad)
and
or
sbb
sbb
shr
pop
imul
or
add
jmp
ins
push
xchg
pop
push
arpl
xor
add
retf
or
add
push
add
sti
push
fcmovnbe
xchg
push
je
add
jle
das
push
adc
push
ret
aam
inc
out
push
aaa
inc
dec
(bad)
lahf
sbb
push
rol
sar
add
inc
sar
dec
xchg
jl
out
adc
jmp
enter
push
fcom
icebp
sbb
call
dec
cld
je
mov
inc
int3
or
retf
sub
fdivr
mov
xchg
call
mov
in
jecxz
push
xchg
inc
sub
stc
xchg
movs
ret
out
cmp
stos
push
add
pop
mov
lock
jle
push
test
xor
add
push
inc
adc
and
dec
call
adc
cmp
out
or
inc
mov
outs
jo
sub
push
nop
inc
push
add
jmp
movs
retf
mov
inc
xor
mov
inc
(bad)
fild
inc
sbb
or
nop
nop
sbb
loopne
fild
or
ror
mov
adc
js
add
aam
or
adc
dec
pop
jo
jg
mov
ret
mov
cmps
icebp
retf
dec
ss
in
inc
arpl
jmp
push
adc
mov
push
jg
and
add
mov
dec
or
xchg
fmul
adc
inc
test
aaa
mov
sub
jl
pop
rol
dec
push
stc
sbb
inc
push
push
retf
add
jnp
sub
ror
adc
leave
inc
popa
push
or
push
sub
xor
out
xor
aaa
inc
pushf
add
or
imul
push
call
retf
sbb
inc
sub
or
adc
inc
fadd
mov
add
mov
add
xchg
fidivr
fcom
xor
sbb
add
sbb
add
leave
xchg
ja
push
movs
scas
sbb
adc
xor
rcr
mov
and
jge
xor
mov
imul
loopne
add
mov
rol
adc
lods
add
push
inc
sbb
mov
mov
leave
nop
out
xor
cmp
inc
push
add
icebp
pusha
stos
daa
imul
add
into
mov
sub
loopne
push
sbb
rol
sbb
nop
inc
cmp
pop
cmp
mov
fisttp
or
outs
in
xor
jg
push
rcl
xor
sub
mov
cmp
cmps
adc
and
add
test
mov
inc
add
add
push
sub
jb
dec
jg
push
loop
jnp
inc
or
xchg
xchg
jnp
dec
add
add
jne
cld
fmul
inc
cmps
jo
loope
jae
adc
dec
jp
push
or
cmc
add
push
or
mov
push
and
add
push
mov
add
add
xadd
ficomp
add
sub
fnstenv
sub
ins
cmp
imul
cmp
in
push
dec
or
push
xchg
xor
sbb
adc
jmp
les
sub
mov
inc
mov
sub
retf
adc
adc
dec
add
fucom
test
je
mov
ss
pminub
js
in
sbb
adc
and
jmp
jbe
add
jl
adc
push
dec
and
sbb
iret
mov
sar
inc
cmp
jl
jecxz
test
add
sub
dec
rol
add
add
adc
jl
add
adc
or
test
add
pusha
mov
or
inc
movs
sub
imul
cmp
jl
xor
push
mov
xor
adc
inc
pusha
sbb
add
shl
dec
pop
call
add
call
add
mov
clc
(bad)
fimul
dec
push
add
sbb
call
leave
js
dec
mov
adc
test
sub
int
icebp
mov
and
das
push
pop
pop
xor
mov
push
iret
add
mov
dec
add
int3
sbb
(bad)
mov
es
or
add
mov
xchg
add
pushf
add
and
inc
cmp
push
adc
outs
dec
sbb
(bad)
sti
jg
jmp
cmps
test
cmp
lods
pop
xor
lods
clc
mov
push
outs
and
daa
test
push
mov
push
xchg
test
push
cmp
cmp
inc
cmps
stc
pop
add
pop
mov
jb
sbb
sbb
fadd
push
loop
push
cs
xchg
pop
inc
pusha
push
cmp
cli
jmp
add
xlat
pop
pop
lods
sub
test
mov
sub
neg
adc
ret
add
sub
or
jno
push
ins
int
dec
add
inc
xchg
jg
xor
pop
hlt
aas
pop
jmp
cli
lods
and
ins
mov
dec
je
shl
sub
sbb
inc
inc
adc
dec
mov
or
push
dec
and
ret
iret
push
sub
jge
adc
xor
mov
popf
es
xor
retf
jl
sbb
gs
dec
jl
push
dec
js
push
push
ss
js
push
add
or
pushf
cmp
mov
fwait
daa
hlt
xchg
sub
xchg
sbb
dec
iret
pop
mov
aam
ins
sbb
cmp
xchg
mov
push
mov
ret
push
(bad)
arpl
pop
push
sbb
mov
push
push
adc
pop
dec
pop
mov
sar
movs
(bad)
pop
cwde
add
lods
mov
add
lods
lea
retf
sar
adc
popa
sbb
adc
ja
dec
les
stc
add
xchg
push
push
mov
cmps
xchg
or
or
inc
les
ret
dec
(bad)
(bad)
rcl
add
mov
enter
test
mov
scas
jge
add
add
xor
icebp
je
sub
dec
inc
push
rol
jnp
dec
sbb
or
push
lods
add
out
sbb
mov
push
shr
or
xchg
add
xchg
xor
das
cmp
sub
ja
mov
ins
add
int3
inc
push
jo
sti
test
daa
jns
bound
dec
or
push
loopne
je
sbb
(bad)
push
cdq
lock
add
mov
movs
pop
sub
sub
femms
popa
cmc
cmove
pop
js
clc
sbb
data16
pop
push
fisub
loop
xchg
dec
xor
adc
shl
sbb
add
imul
ss
fs
sbb
pop
ins
xchg
dec
nop
or
jb
add
push
cld
call
mul
add
mov
adc
add
or
add
dec
xor
mov
jno
jle
js
in
push
nop
ss
pop
jb
aam
cmp
cmp
sbb
out
les
dec
add
gs
sbb
dec
(bad)
inc
test
sahf
and
and
sbb
ret
mov
stos
ror
mov
fwait
enter
fcom
inc
jmp
fcomp
(bad)
out
adc
sbb
aaa
push
mov
fs
cwde
add
push
or
loopne
enter
js
mov
mov
jge
jne
push
pop
or
adc
sub
and
adc
call
popf
iret
jb
icebp
push
lock
inc
scas
enter
xchg
or
pushf
adc
fcomip
inc
and
sahf
push
ds
inc
adc
sbb
dec
inc
add
xchg
xor
add
loop
test
nop
call
cld
sub
mov
or
cmps
cdq
popf
sub
nop
mov
pop
or
adc
xor
sbb
or
jmp
cld
add
fsub
jns
imul
xchg
xchg
inc
sbb
daa
inc
sbb
rcr
push
pop
xchg
mov
in
or
lock
inc
fidivr
movs
push
push
cmps
jo
stos
enter
inc
push
cmp
(bad)
fistp
cmp
hlt
retf
xchg
mov
add
and
or
nop
pop
adc
inc
mov
mov
rcl
inc
xchg
lea
inc
inc
mov
(bad)
or
mov
ret
or
cwde
push
lods
sub
add
call
data16
or
pop
adc
test
jmp
or
and
loope
mov
add
sbb
dec
mov
xor
cmps
mov
xor
(bad)
iret
rcl
dec
adc
lods
dec
xchg
mov
adc
ins
pushf
fdivr
es
out
mov
add
dec
jp
or
test
adc
bound
sbb
sbb
sub
js
fcomp
cmp
movs
xchg
add
lahf
mov
mov
inc
pop
imul
jnp
adc
cmps
inc
xor
inc
inc
loope
repz
jno
call
ja
jnp
push
bound
into
cld
pop
jle
mov
clc
mov
mov
pop
jp
fdiv
sahf
xor
mov
pop
repz
mov
xchg
add
fcmove
push
shr
xor
mov
adc
mov
sub
adc
fiadd
cld
mov
sbb
lods
push
mov
mov
sub
xor
dec
jg
xchg
cmp
nop
popa
or
or
add
cmp
ficomp
xchg
mov
scas
push
pop
adc
mov
not
or
push
daa
arpl
sbb
(bad)
push
pop
mov
outs
mov
cmc
imul
or
pop
data16
or
adc
clc
jb
test
jecxz
cmp
pop
or
push
mov
xor
adc
jmp
add
jbe
sar
mov
jl
add
pusha
inc
ds
add
scas
adc
aas
jae
dec
jb
clc
arpl
(bad)
test
push
add
inc
inc
pushf
jl
push
pop
push
aas
cmp
cmp
push
cmp
sub
add
outs
or
(bad)
adc
pop
xor
dec
sbb
sbb
sahf
call
popa
xor
jo
mov
xchg
leave
test
jge
mov
jg
jnp
stos
loope
ss
imul
leave
adc
bound
leave
adc
dec
es
mov
(bad)
daa
add
hlt
push
dec
inc
or
or
call
das
loope
xchg
(bad)
xor
xchg
popf
xchg
lock
adc
mov
jb
hlt
add
das
xchg
adc
clc
add
adc
inc
es
in
cs
cmp
rol
ret
and
xor
pop
mov
sbb
dec
shr
sub
loopne
mov
pop
push
xor
jne
ror
es
loopne
add
loope
cmp
dec
test
mov
retf
sub
adc
test
fdivr
mov
and
jne
mov
pop
mov
js
sbb
sub
or
dec
xor
cmp
ret
sub
jne
push
adc
sahf
cmps
push
int3
pop
cmp
mov
inc
je
mov
fcomp
(bad)
add
jae
and
jmp
aaa
mov
test
adc
or
xor
sub
mov
mov
sub
jne
outs
cmp
sbb
pop
or
out
sti
add
sub
not
inc
je
mov
xor
mov
rol
sub
push
mov
xor
pop
mov
sbb
push
add
sub
push
mov
mov
out
push
(bad)
and
or
xchg
pusha
ret
sbb
push
std
dec
fst
adc
or
mov
lea
xor
push
push
or
and
xchg
imul
fidivr
jb
mov
or
ror
fchs
sbb
jle
sub
pop
mov
out
popa
mov
ret
imul
adc
pop
mov
movs
jne
push
adc
nop
dec
or
(bad)
pop
mov
call
push
mov
pop
sbb
adc
jne
bound
add
cli
cmp
inc
add
das
cs
push
lds
mov
rcr
cmp
inc
ret
xor
xor
xor
aam
or
mov
rol
cmp
and
add
movs
xchg
dec
jle
push
or
int3
adc
test
repnz
sbb
fld
fild
fcom
jo
inc
add
pop
shl
mov
push
cmp
push
xor
sbb
inc
dec
retf
jle
cmp
jl
mov
(bad)
add
sbb
cli
rcl
ja
imul
or
(bad)
mov
cmp
jns
fistp
push
mov
fbld
xor
aaa
mov
ss
jge
call
sub
dec
sbb
loopne
addr16
add
adc
pop
rol
in
jbe
inc
push
(bad)
mov
sub
cmp
fnsave
dec
and
jb
add
mov
xchg
test
cmp
push
jnp
je
inc
js
out
mov
js
test
fs
shl
hlt
nop
add
imul
int
adc
fimul
and
push
jno
mov
or
clc
repnz
in
mov
and
jmp
hlt
clc
lods
fisttp
je
je
sar
sub
xor
sbb
movs
sbb
or
inc
ds
movs
lock
loopne
inc
lock
and
in
cmp
or
int3
mov
adc
sar
push
div
rol
popa
aaa
nop
sbb
and
rol
add
push
pop
add
and
aas
mov
xor
jecxz
lahf
call
mov
dec
ret
je
and
shl
pop
xor
ror
push
jle
int3
inc
pusha
and
jbe
aas
je
fnstcw
pop
push
mov
nop
pop
adc
(bad)
adc
add
in
cmp
sub
push
and
into
xor
neg
mov
movups
push
adc
lods
xchg
sbb
push
test
fmul
mov
cdq
lods
cmp
add
pop
add
sar
mov
fdiv
leave
and
cmp
add
xor
dec
xor
cdq
sahf
out
xchg
mov
lahf
jns
out
xchg
mov
push
jae
test
(bad)
je
inc
mov
mov
xor
pusha
adc
call
sbb
pop
and
rol
dec
xchg
fsub
jmp
movs
cmp
cld
outs
push
xor
dec
xor
lods
dec
mov
movs
rcl
add
lods
je
xchg
jo
mov
stc
xor
div
ret
jp
or
jmp
dec
jge
cmp
jg
jae
(bad)
mov
shl
dec
dec
or
jb
cdq
jne
rcl
push
(bad)
jmp
push
pop
push
cmc
mov
adc
rcl
adc
sbb
rcl
shr
fisttp
mov
sar
jl
pop
dec
xchg
dec
out
div
push
push
xchg
(bad)
add
out
mov
add
dec
fs
pop
ret
dec
aas
sbb
push
mov
daa
js
mov
or
movs
adc
mov
cmps
pop
inc
mov
pop
mov
add
push
sub
push
daa
(bad)
mul
ror
inc
push
mov
push
shl
(bad)
cmp
pusha
lods
mov
call
lods
xor
hlt
arpl
dec
mov
inc
sbb
dec
test
add
inc
inc
ror
pushf
lods
sbb
dec
seto
xchg
add
outs
add
add
inc
fstp
jae
dec
sbb
and
push
sbb
neg
cwde
cmp
and
pop
and
xchg
cmp
out
jg
xor
retf
pop
imul
or
mov
cmc
add
add
ja
test
fild
adc
stos
sbb
(bad)
(bad)
mov
sbb
sub
pop
stos
popa
stc
sahf
push
sbb
rcl
mov
add
call
sub
push
push
cmp
rcr
jbe
ds
or
or
clc
xlat
mov
fimul
cld
sub
push
fwait
je
jp
test
xchg
push
push
inc
xor
xlat
xchg
adc
push
dec
pusha
mov
hlt
xor
push
ja
pop
fcomp
cmp
jle
mov
bndstx
inc
cmp
push
and
clc
out
sbb
aad
sub
dec
pop
dec
ins
inc
pusha
cmp
jecxz
mov
cmp
loop
repz
or
outs
hlt
adc
xor
(bad)
pop
cmp
cmp
lds
add
ja
sbb
cvtps2pi
lods
sub
and
data16
scas
or
push
shl
mov
dec
imul
adc
adc
clc
call
xchg
je
mov
and
sbb
inc
mov
outs
fisub
mov
inc
inc
add
mov
adc
mov
xor
test
fcom
jge
(bad)
(bad)
mov
jbe
lods
fld
ret
jno
xor
aaa
mov
xor
sub
pop
cmps
mov
daa
pusha
pop
or
xor
xchg
or
or
call
and
sahf
inc
pop
push
call
sub
(bad)
jl
mov
jg
jb
ins
mov
jne
les
cmp
hlt
out
fdivr
xchg
loopne
lea
xor
or
ficom
jp
inc
add
inc
or
dec
jmp
test
jge
sbb
mov
dec
jge
add
fs
xchg
rcl
inc
mov
ins
xor
or
pushf
stc
mov
adc
pop
pop
mov
adc
nop
and
add
ds
movs
sbb
and
or
add
adc
push
into
add
xchg
test
mov
dec
aad
xor
and
daa
add
out
and
aas
sub
ret
and
xchg
or
add
inc
dec
mov
data16
in
sub
setb
adc
xchg
imul
push
push
std
xchg
adc
inc
add
loopne
jmp
aas
mov
call
out
mov
push
lods
mov
pop
adc
add
dec
imul
add
outs
add
jle
add
and
jae
mov
jbe
inc
pop
jbe
or
popa
jp
xchg
rcr
mov
sbb
inc
sub
push
and
mov
pop
sbb
lahf
call
dec
sub
adc
aaa
sbb
push
mov
jmp
lea
jmp
pusha
sbb
xchg
and
xchg
sub
(bad)
push
out
lea
mov
sub
test
ss
sbb
xchg
mov
addr16
dec
jbe
mov
sar
ficom
push
pop
and
loopne
lea
mov
adc
adc
dec
outs
pop
adc
or
pop
adc
xchg
stc
das
sbb
test
shl
clc
es
ins
je
jp
adc
mov
aad
jp
mov
loopne
fsubr
les
push
push
and
dec
sbb
out
push
push
sub
xchg
sbb
mov
fbld
rcr
mov
cmp
dec
xor
add
stc
jmp
ret
mov
sub
cmp
xchg
jl
lahf
xchg
mov
jae
arpl
mov
adc
or
add
add
je
push
(bad)
pop
push
adc
fcomi
push
xchg
inc
fiadd
cwde
add
adc
add
inc
test
pop
xor
or
pop
aam
and
push
add
dec
push
adc
rol
push
inc
and
(bad)
leave
mov
add
inc
push
jl
push
fimul
lock
rcr
imul
mov
add
imul
aaa
pusha
jmp
and
es
cmps
fs
mov
je
mov
push
pusha
push
inc
sub
xor
push
cmp
loopne
adc
inc
mov
or
or
jmp
adc
xchg
clc
std
adc
cli
xchg
or
adc
pop
inc
push
inc
je
push
jb
outs
mov
inc
push
or
or
ret
lds
cli
(bad)
mov
mov
jne
push
inc
pushf
sub
push
or
inc
push
sbb
or
adc
cld
jg
aas
ins
arpl
ja
je
cmp
sub
imul
ins
and
je
ins
jmp
std
and
mov
fcom
std
icebp
and
jne
jbe
shl
xor
sbb
or
fisttp
arpl
sbb
and
pop
adc
mov
and
dec
mov
pop
pop
pop
aas
and
popa
test
and
xor
adc
aaa
xor
lahf
xchg
xor
lock
mov
or
enter
retf
push
and
mov
pop
add
add
shr
imul
add
(bad)
mov
out
adc
sub
mov
adc
pop
xor
or
or
or
or
test
sbb
jnp
jmp
in
mov
mov
scas
xchg
cmp
(bad)
and
ja
sub
jo
pusha
adc
push
inc
test
arpl
ror
pusha
xor
jnp
push
cmp
pop
xlat
das
call
fcomi
xor
aas
or
es
mov
jl
shl
dec
loopne
fcom
and
cmp
push
cmp
jnp
test
push
pop
cmp
jmp
repz
shl
sbb
rcr
cmp
dec
div
mov
push
pop
pop
fistp
(bad)
pop
out
cmps
test
cmp
in
pusha
popa
bound
inc
xor
or
mov
dec
add
std
je
inc
fs
inc
add
inc
push
cld
xor
out
jnp
jne
mov
push
cmp
cld
xchg
clc
mov
sbb
xchg
xchg
xor
out
push
push
push
sete
pop
sbb
dec
lock
dec
cld
and
mov
push
hlt
je
or
jg
js
clc
ret
and
pop
push
dec
ins
ret
xchg
shl
xlat
test
add
dec
sub
in
out
adc
sub
sub
mov
inc
jmp
mov
sub
xor
fwait
jne
daa
loope
xchg
pop
cmp
aas
sbb
lock
test
add
mov
lods
jl
sahf
adc
push
call
hlt
mov
inc
test
test
fstp
push
xor
fcmovnb
out
mov
add
cmp
nop
mov
push
inc
xlat
jp
mov
outs
sub
fld
fcomp
dec
adc
in
jg
push
das
jle
lds
pop
mov
jns
pusha
fidivr
jmp
push
jl
cmp
adc
add
(bad)
xchg
mov
xchg
fidiv
and
dec
cmp
in
jmp
dec
aam
inc
movs
fmul
add
aas
sbb
ret
inc
inc
movs
adc
pop
jle
repnz
pop
scas
and
mov
dec
cmp
jge
nop
mov
ss
or
fs
sub
test
push
push
xor
xor
and
fbld
push
or
sbb
je
adc
inc
push
or
adc
or
loope
lods
ja
div
mov
and
repz
cdq
mov
jmp
pop
repnz
jne
sub
sub
sbb
jl
pop
sbb
je
rol
dec
jne
rcr
lock
push
dec
or
xchg
jb
scas
cmp
dec
shl
inc
aam
jne
mov
mov
and
daa
clc
bound
mov
pop
into
sbb
or
dec
mov
outs
cmps
xor
test
inc
loope
fbld
movsx
push
aam
inc
rcl
cmp
lods
add
je
out
or
mov
adc
mov
mov
aaa
xor
and
repz
std
out
sbb
cli
sbb
in
sub
dec
xchg
int3
test
jne
or
dec
and
std
mov
and
adc
push
adc
fisubr
sbb
sub
sbb
add
add
add
dec
inc
mov
sbb
or
nop
cwde
add
mov
xor
shl
iret
repz
enter
in
xor
jg
pusha
add
add
push
add
push
add
dec
add
dec
sub
cmp
adc
add
adc
pop
jle
cmp
fwait
mov
clc
sbb
xchg
push
jp
jl
push
pop
and
mov
rol
call
push
daa
or
pop
xor
push
addr16
aam
iret
sub
into
fidivr
fidiv
dec
mov
mov
test
nop
loopne
adc
xor
jge
fcomp
mov
jp
and
sbb
scas
and
mov
adc
sti
pop
in
popf
lods
(bad)
fcmovnu
cmp
xchg
fidiv
and
scas
add
dec
aam
add
mov
dec
xlat
pop
ins
lock
or
cmp
pop
adc
xchg
lahf
imul
loopne
jne
loope
test
stc
std
xor
adc
mov
pop
dec
jo
xchg
fdiv
or
out
enter
out
xor
dec
jmp
dec
dec
mov
pop
clc
mov
dec
rep
js
pop
in
jmp
push
or
ficom
and
jmp
jns
(bad)
cmp
xchg
fldcw
mov
or
sub
jmp
lss
inc
mov
push
fisttp
retf
movs
cld
aam
movs
ins
jmp
xor
adc
push
sub
mov
(bad)
out
sub
fnstcw
inc
inc
xchg
xorps
and
lea
js
xchg
sbb
pop
fild
icebp
push
es
and
pop
mov
or
dec
lock
call
clc
mov
mov
cmp
mov
data16
(bad)
dec
retf
fstp
dec
jnp
mov
adc
fs
ds
add
push
(bad)
sbb
sub
lahf
jne
fld
lea
adc
push
jbe
adc
xor
in
or
sbb
jno
sbb
cmp
add
cwde
jmp
(bad)
cmp
scas
jle
loopne
mov
add
add
(bad)
adc
rcr
out
or
jle
jb
or
mov
or
sub
dec
inc
ds
pushf
popf
loopne
cmp
shl
lods
ret
and
sbb
shl
fisub
cli
mov
adc
cmp
add
js
leave
add
stc
push
lea
push
jecxz
enter
pushf
add
cmps
cmovb
bnd
mov
mov
inc
mov
ret
xchg
sbb
jmp
sbb
sbb
sbb
pop
push
jb
mov
sbb
mov
shr
mov
add
sbb
clc
jae
shr
sahf
ins
jae
(bad)
pop
adc
inc
mov
push
jb
mov
loope
push
add
or
adc
pop
mov
inc
(bad)
xchg
mov
jo
in
repnz
js
pop
es
inc
cmp
sti
fadd
mov
dec
mov
js
out
and
sahf
xchg
in
inc
sub
test
popa
mov
jo
pushf
jle
push
sbb
sub
xchg
push
cdq
dec
fst
pop
sbb
sub
mov
inc
cmps
push
pop
mov
fs
mov
mov
cmp
mov
sahf
xchg
movs
or
test
movs
or
or
sub
mov
es
inc
sub
jne
aam
and
sub
test
cld
in
in
pop
inc
mov
jle
push
adc
aaa
jno
sbb
movs
pushf
inc
pop
shr
dec
pushf
xchg
add
jl
pusha
mov
xchg
inc
ja
pop
push
(bad)
xchg
ins
sbb
pop
push
pop
scas
popw
outs
xchg
or
jmp
leave
(bad)
std
push
lea
adc
mov
cli
test
fldenv
mov
imul
test
add
jnp
xchg
cdq
mov
aas
push
jmp
cli
push
pushf
adc
rol
inc
dec
jl
add
xchg
inc
in
sub
cmp
mov
push
cmp
ins
mov
call
mov
test
cmp
and
cmp
and
fiadd
cmps
fiadd
sub
inc
ret
cmps
jo
ds
pop
movs
popa
movs
rcl
push
cmps
sbb
adc
dec
pop
push
lds
and
nop
push
pop
adc
pop
lahf
shr
scas
lods
cmp
and
mul
add
lods
and
les
shr
mov
adc
push
fist
add
jecxz
(bad)
push
mov
(bad)
and
hlt
rol
fild
enter
lds
cmp
jne
nop
sub
cmp
ds
mov
and
or
fidivr
movs
dec
les
mov
call
repnz
cmps
inc
push
dec
push
jne
push
add
ja
das
add
push
or
xlat
push
inc
dec
in
add
ret
push
add
shr
lods
ss
dec
fdiv
add
sub
sbb
inc
out
sbb
adc
add
ins
sbb
(bad)
movs
mov
sti
lods
inc
dec
bound
shl
loope
or
dec
push
dec
arpl
js
aad
add
lahf
inc
dec
inc
addr16
mov
xor
cmp
ds
shr
dec
push
lahf
jle
inc
jle
inc
inc
outs
out
dec
inc
inc
jo
and
inc
ret
out
ss
popa
das
pop
aas
ret
jmp
jo
in
pmulhuw
push
dec
inc
jae
(bad)
data16
xor
lea
cli
and
ror
xlat
push
inc
inc
imul
mov
fsubr
mov
jl
inc
je
inc
je
pop
in
ds
dec
dec
je
push
dec
push
je
dec
push
adc
fistp
cmp
add
ss
cs
in
xchg
sub
xchg
push
and
mov
jl
fs
jmp
push
mov
inc
add
push
pusha
ror
ficomp
mov
mov
push
pop
pop
inc
inc
push
fs
push
fistp
pop
enter
shl
fiadd
iret
pop
mov
je
leave
add
pop
test
adc
sahf
test
sti
out
sub
adc
mov
sti
cmp
movs
pop
and
mov
or
and
or
sbb
sub
rcr
add
outs
dec
mov
pop
and
test
inc
adc
leave
mov
dec
jl
add
inc
mov
pop
mov
mov
fadd
and
cmp
cmps
sahf
jnp
dec
and
mov
cmp
and
pop
in
add
dec
dec
test
dec
cdq
add
push
or
adc
dec
call
daa
adc
and
xchg
es
ss
or
sbb
popf
mul
clc
mov
ror
pop
inc
push
ret
daa
ins
dec
(bad)
cld
adc
jae
jo
imul
fs
stos
dec
ins
adc
or
rcl
cmp
mov
stos
xlat
xchg
push
push
and
in
pop
sub
jge
dec
and
clc
(bad)
sbb
xchg
jbe
arpl
pop
push
mov
xor
dec
je
push
adc
sub
pushf
push
cmp
jae
out
mov
cli
inc
(bad)
aam
fs
dec
ficom
inc
mov
mov
pushf
push
adc
test
je
scas
les
add
add
cmp
cmps
popa
(bad)
mov
hlt
cmp
out
mov
fs
push
or
mov
or
mov
cmp
movs
jne
mov
cwde
xchg
push
sub
sbb
or
pop
clc
add
or
leave
adc
xor
mov
mov
dec
jne
mov
pusha
xor
fsub
jl
or
add
(bad)
fild
das
sbb
sbb
fdivr
loopne
dec
jle
pop
fdivr
nop
cwde
push
add
(bad)
mov
loope
loope
aaa
sbb
mov
or
sub
scas
mov
add
inc
fcomp
and
xchg
or
push
inc
add
mov
call
add
or
lods
or
or
mov
int
dec
mov
dec
or
in
pop
mov
push
or
mov
pusha
sbb
cmps
or
mov
adc
lahf
mov
xchg
xlat
test
cmp
mov
lahf
loope
xchg
popf
mov
fsubp
xor
mov
mov
imul
xchg
xlat
mov
loope
mov
mov
int3
test
cmp
jmp
xchg
movups
xor
jle
jmp
(bad)
adc
(bad)
jmp
xor
adc
adc
add
cmp
add
mov
pop
in
leave
sbb
pusha
shl
xchg
repnz
enter
push
fs
jno
test
sbb
or
mov
dec
pop
or
pusha
fld
je
ins
xor
jb
pusha
jp
test
push
jne
sub
mov
icebp
sub
sbb
push
mov
xchg
jle
call
push
sbb
shl
mov
push
xor
nop
sbb
push
imul
xlat
lods
jl
xchg
sbb
sub
cmp
pop
and
adc
add
mov
xchg
lods
fld
movs
cdq
scas
pop
fwait
mov
push
inc
push
push
imul
dec
sub
push
mov
sbb
mov
pop
mov
int3
dec
add
add
inc
cmp
jb
or
cs
in
mov
aaa
in
mov
dec
push
stos
mov
cld
dec
cmp
pop
in
mov
or
lock
sub
and
xchg
push
jmp
scas
add
or
inc
inc
dec
cmp
add
dec
sub
xchg
adc
je
dec
sub
add
call
(bad)
sub
or
mov
mov
lock
popa
je
mov
push
inc
or
add
inc
jg
scas
cmp
loop
call
mov
in
ret
(bad)
movs
jbe
mov
mov
test
std
inc
js
fwait
mov
adc
push
ret
add
add
cmp
dec
inc
dec
je
sub
jg
(bad)
aaa
retf
cld
sub
mov
mov
repz
cs
adc
fmul
fcom
xchg
sahf
imul
ja
pop
and
mov
shr
sbb
mov
xor
pop
test
js
out
into
mov
adc
push
test
pop
xchg
cld
daa
push
clc
xor
mov
cmp
jp
add
pop
je
ret
add
jl
jmp
popa
test
jo
push
push
(bad)
or
ins
call
ret
add
jmp
jmp
or
cmps
idiv
adc
inc
retf
xor
mov
pop
xchg
ret
inc
adc
shl
int
mov
xor
aam
pop
call
jo
sbb
lods
shr
sub
daa
sub
sti
cmp
fimul
pushf
cli
popa
jl
fist
mov
inc
jmp
fidivr
pop
sar
sbb
jecxz
fwait
mov
xchg
push
out
test
push
xor
add
popa
add
push
fsubr
mov
adc
jo
and
ficom
test
fidivr
call
outs
add
add
jns
jnp
xchg
add
add
je
add
jb
add
mov
push
adc
inc
adc
fidivr
leave
pop
pop
pop
fadd
das
add
stos
adc
test
and
lea
add
test
add
fmul
loop
je
jae
or
and
cmc
jecxz
inc
jns
jbe
pop
(bad)
inc
jl
ret
pop
fisttp
nop
ret
dec
imul
or
add
push
push
rol
push
in
jle
data16
add
mov
push
xor
adc
inc
lods
and
imul
pop
fdiv
aaa
in
inc
cmp
mov
fiadd
dec
jbe
sbb
pop
ret
nop
nop
add
push
dec
mov
cmp
mov
je
mov
xor
adc
push
mov
jmp
mov
push
mov
mov
pop
test
lods
xlat
and
inc
outs
pop
sbb
aaa
pop
aas
mov
sbb
or
push
sub
mov
xor
lods
fbld
mov
out
dec
inc
and
sub
test
push
mov
pop
mov
nop
das
mov
pop
out
sbb
mov
std
xor
dec
adc
or
jo
ret
pop
jle
jo
mov
and
push
jno
es
mov
dec
gs
adc
inc
dec
jmp
dec
push
(bad)
pusha
push
mov
es
hlt
or
or
rcr
repz
fwait
add
push
sbb
retf
mov
mov
and
jg
or
int
or
cmp
sar
daa
push
jg
in
mov
out
aaa
mov
and
mov
xor
cmp
xchg
and
jo
push
mov
and
test
rep
enter
aas
ret
lea
adc
sbb
and
push
fistp
call
push
push
jecxz
and
adc
cmp
adc
sbb
loopne
and
push
lahf
push
cmc
add
pop
dec
inc
mov
ret
mul
sar
shr
adc
adc
or
lock
enter
mov
data16
add
lods
mov
imul
sbb
xor
push
call
aad
adc
(bad)
jo
and
or
movs
mov
aam
xchg
rcr
mov
adc
jecxz
pusha
or
xor
jg
pop
and
sar
push
cmp
jo
mov
or
or
outs
mov
fist
pusha
mov
adc
ins
pop
lahf
or
xchg
sbb
lods
push
mov
jo
movs
nop
cmp
shl
mov
adc
lahf
std
or
cdq
or
ret
mov
adc
pop
(bad)
(bad)
jmp
not
mov
inc
dec
jne
ret
cmp
jne
cmp
jne
call
shr
inc
inc
cli
inc
hlt
mov
cld
pop
sub
jne
sbb
add
mov
scas
mov
or
pop
add
ffreep
stos
fcomp
cmp
sub
or
pusha
adc
fild
movs
jle
add
dec
add
xor
or
sbb
adc
push
adc
xchg
enter
push
push
add
movhps
xchg
or
mov
sbb
cwde
mov
jae
sub
cmp
jle
dec
sbb
rcr
mov
cli
dec
add
adc
mov
or
sbb
sub
not
dec
gs
mov
and
push
adc
clc
xchg
xchg
jmp
add
or
das
cmp
pop
sbb
mov
cwde
iret
jp
loop
stos
or
data16
add
mov
adc
jecxz
jmp
jne
xor
or
cmps
jns
jg
add
add
sahf
cmps
imul
push
into
push
stos
out
xor
add
push
loopne
cmp
mov
jge
mov
push
sub
add
push
or
inc
cmp
ror
cs
les
(bad)
or
les
les
outs
outs
fiadd
jne
add
sti
mov
mov
inc
pop
dec
xor
call
push
pop
sbb
jae
lods
lods
repnz
call
pop
ds
push
or
mov
dec
ins
push
js
mov
iret
shl
enter
or
aaa
pop
pop
rol
add
scas
rcr
neg
dec
adc
(bad)
add
sub
loop
add
aam
fcomp
xchg
lods
inc
sbb
sar
jmp
xchg
ins
add
out
mov
(bad)
inc
lods
mov
pop
adc
jmp
aad
out
mov
sub
add
jmp
in
mov
test
pop
ror
cdq
inc
es
aaa
add
xchg
sbb
jae
cmp
ror
jle
mov
or
ins
push
(bad)
cmp
retf
imul
outs
dec
mov
push
(bad)
mov
bnd
pusha
jmp
ret
pop
dec
cmp
inc
mov
mov
add
loope
inc
fsubr
push
sti
lea
xor
repz
add
adc
mov
mov
in
(bad)
ja
xchg
inc
ret
sub
pop
sbb
(bad)
cld
push
sub
pushf
fwait
push
xor
test
push
rcl
xchg
adc
jae
or
fs
mov
shl
and
adc
inc
dec
popa
pop
jo
dec
push
cli
mov
inc
clc
dec
cmp
add
and
or
or
pushf
mov
mov
in
xor
xor
xor
hlt
dec
pushf
cdq
mov
mov
test
pop
and
jo
push
inc
int
mov
(bad)
fwait
adc
xchg
push
xor
or
and
sub
push
xchg
cmc
pop
psrlw
sti
imul
ret
add
pop
inc
fadd
imul
call
jmp
and
or
rcl
sar
xlat
mov
ss
mov
push
dec
cmp
jg
arpl
into
mov
jmp
mov
lds
sub
jno
cmp
and
inc
pop
sbb
sbb
rcl
(bad)
cmp
pop
mov
mov
cmp
ins
dec
fistp
or
cmp
xor
stos
daa
loope
sub
scas
push
adc
jge
scas
je
lea
pop
std
movs
ret
or
push
push
adc
enter
push
aas
mov
movs
xor
inc
or
inc
outs
inc
ret
mov
inc
mov
call
push
mov
mov
jle
or
mov
lods
mov
fstp
pop
test
sub
xchg
mov
and
and
in
or
xchg
pushf
ss
dec
or
cmpps
(bad)
pusha
sti
test
or
or
retf
adc
je
add
rcr
and
mov
xor
(bad)
hlt
or
pop
jmp
outs
sbb
cmp
dec
xor
add
lock
sbb
cmp
sar
cmp
xchg
pop
sbb
fmulp
ret
add
ins
sub
imul
adc
cmps
cdq
jno
daa
clc
(bad)
sub
stos
and
loopne
icebp
(bad)
shl
in
rcr
hlt
push
ret
xchg
clc
jne
inc
pop
test
add
xlat
xchg
ja
mov
cmp
push
clc
sbb
sbb
movaps
pop
xchg
sbb
push
test
xchg
les
cmp
fisttp
inc
and
add
add
or
lea
(bad)
adc
imul
aam
daa
movs
xor
mov
jae
retf
jnp
push
rol
xchg
jne
ret
popa
and
rcr
aas
ins
push
push
push
add
in
add
ja
gs
cdq
sub
out
(bad)
mov
push
push
loop
jle
cmp
jg
adc
wrmsr
popf
shrd
and
inc
fcmovu
jmp
iret
(bad)
jne
pop
add
movs
stos
push
push
jle
add
add
shr
dec
iret
mov
daa
pop
push
scas
sbb
dec
xchg
call
or
mov
inc
push
imul
je
dec
sub
sti
add
pop
sbb
jne
lods
mov
iret
ja
adc
out
cmp
ss
mov
sbb
movs
daa
in
fsubp
movs
pop
mov
nop
push
aas
mov
cs
push
shl
inc
pop
add
call
adc
add
stos
enter
(bad)
ficomp
jb
push
sbb
pop
and
add
xchg
push
test
aam
dec
mov
enter
and
mov
jle
add
or
inc
adc
mov
dec
cmp
cmp
cmp
cs
cmp
push
add
mov
add
push
xchg
mov
cmp
es
enter
and
data16
outs
fdiv
push
repnz
sub
sahf
or
sub
or
push
inc
imul
repz
mov
or
loope
sub
mov
fcomp
sti
popa
sbb
inc
call
not
mov
xchg
sbb
adc
lea
mov
rol
add
mov
add
pop
or
je
or
mov
jb
jmp
adc
adc
pop
add
pop
push
cdq
(bad)
cwde
mov
fs
sbb
sar
push
push
call
sbb
popa
movs
push
mov
and
popa
adc
jg
add
sahf
mov
xor
push
or
xchg
lahf
sbb
sbb
(bad)
lock
daa
push
test
inc
lods
lods
add
inc
and
clc
jne
imul
test
pop
xor
adc
ss
add
or
mov
add
sbb
neg
test
clc
cmp
(bad)
mov
int
mov
mov
mov
add
and
pusha
imul
sub
fwait
mov
sub
push
stos
jmp
or
test
push
mov
and
mov
inc
or
je
cmp
push
call
jne
in
sbb
(bad)
es
and
cmp
sub
push
bound
mov
ret
daa
push
sub
pop
dec
call
sbb
scas
imul
gs
imul
jmp
push
pop
popa
sub
loope
fcmovbe
push
test
add
shr
sbb
mov
push
arpl
inc
shr
pusha
jb
je
pop
xchg
aam
jae
in
stos
sub
pop
add
adc
cmp
sub
and
in
sub
pop
dec
or
mov
in
repz
cmc
pusha
push
clc
cdq
out
or
add
(bad)
cmp
loopne
das
xchg
inc
sahf
nop
scas
seta
inc
xchg
ins
dec
pop
fs
lea
lock
cld
std
fild
xor
sub
push
jmp
ficom
lods
loopne
jo
shr
mov
stos
outs
push
fwait
mov
cmp
xchg
jb
or
and
arpl
inc
int3
jg
stc
pop
or
repnz
(bad)
or
adc
mov
xor
pop
sbb
push
(bad)
sbb
jmp
into
xor
mov
clc
inc
arpl
fcomp
int3
sbb
cmp
shr
sbb
fcom
mov
daa
int
shl
pop
sar
cmp
dec
cmp
mov
cmp
adc
fstp
fmul
mov
jb
je
xchg
in
pop
xor
movzx
jecxz
lock
jp
push
aam
(bad)
jge
aas
add
retf
cmp
mov
xchg
sub
js
in
and
sbb
cmps
adc
push
add
loope
sbb
sub
inc
cmp
inc
dec
jne
xor
and
sub
and
mov
loope
pop
push
and
cmps
popa
daa
arpl
push
inc
pop
or
inc
test
cli
mov
mov
add
or
mov
or
adc
retf
(bad)
mov
fsubr
push
cmp
hlt
fcmovbe
xchg
push
enter
inc
cdq
les
outs
test
adc
xor
add
stos
adc
stos
push
das
push
jae
sub
mov
xchg
loope
mov
mov
lock
and
jge
sbb
dec
imul
pusha
fmul
cmp
xchg
mov
mov
sub
sub
loop
cmp
jbe
or
xlat
jae
inc
lahf
out
out
cmp
sub
iret
jae
or
ins
iret
push
add
sbb
loope
call
add
adc
or
add
or
jmp
add
call
or
enter
les
mov
in
xlat
inc
mov
mov
sbb
out
mov
add
dec
sahf
clc
pop
sbb
sub
push
mov
xor
pop
shl
popa
pop
ret
sbb
iret
sbb
or
(bad)
mov
xchg
adc
test
lea
scas
jns
push
cmp
clc
stc
lea
sub
mov
dec
xchg
mov
cmp
push
mov
add
mov
clc
xchg
sub
iret
pop
dec
and
dec
xchg
xchg
mov
jno
add
test
lds
call
mov
and
mov
inc
dec
push
push
ds
or
sub
push
inc
pop
repnz
sub
add
nop
jecxz
lock
fisttp
lea
jl
in
pop
call
add
(bad)
sub
pop
bnd
(bad)
push
popa
sub
adc
jbe
in
sahf
xchg
push
ret
jo
inc
js
(bad)
mov
repz
retf
jo
(bad)
mov
pop
in
mov
cmp
push
lods
mov
pop
inc
in
push
(bad)
xor
push
pusha
and
fsub
loope
and
test
in
bound
push
push
adc
icebp
sar
movs
push
pop
push
(bad)
lods
sbb
jbe
sbb
cmp
sub
mov
in
mov
add
inc
adc
add
(bad)
loopne
mov
int3
mov
test
addr16
jne
data16
popa
mov
inc
jmp
popf
add
sbb
jl
(bad)
xlat
imul
push
lock
scas
out
or
lods
pop
mov
cmp
sub
push
add
pop
mov
psubw
jmp
mov
adc
jle
push
xchg
and
dec
mov
push
jne
int3
sub
push
ret
or
and
sbb
mov
ins
jae
xor
cmp
inc
int3
(bad)
sti
sbb
sub
cmc
cld
cld
hlt
adc
je
inc
cld
scas
stos
dec
inc
jne
inc
neg
(bad)
cmp
jbe
mov
and
pop
test
add
inc
stc
xor
sub
push
ret
dec
lock
xchg
lahf
push
pop
popa
je
fisub
nop
pop
cmp
cmp
pop
js
or
sub
xchg
rcl
cdq
jle
lods
cmp
push
ins
call
scas
ret
cmp
add
jne
dec
call
push
dec
or
test
sbb
shr
mov
pop
mov
or
fiadd
retf
das
add
repnz
add
or
loopne
add
mov
call
outs
or
lahf
pop
mov
mul
or
or
ret
out
mov
xor
rcr
push
xchg
dec
adc
or
mov
cmp
mov
or
inc
jns
push
mov
(bad)
push
out
leave
add
and
or
(bad)
mov
xchg
xor
(bad)
fadd
mov
xchg
ror
mov
rol
lahf
jbe
test
popa
sbb
mov
mov
ret
add
jae
cmp
pop
dec
sub
sar
enter
ret
xor
add
xor
(bad)
cld
ds
push
mov
jmp
xchg
push
adc
and
and
sub
add
je
cwde
pop
inc
push
mov
mov
push
mov
mov
xor
add
or
push
rcl
movs
jnp
nop
rol
adc
adc
arpl
push
sub
addr16
sub
sbb
push
call
daa
push
push
or
pop
and
mov
in
stc
and
iret
add
pusha
and
pop
je
push
xrelease
add
inc
pop
jne
mov
xor
test
cs
cmp
ins
dec
inc
scas
fcom
data16
sbb
lods
jmp
rcr
aad
dec
rcr
hlt
xor
test
out
jmp
mov
mov
jmp
sub
push
push
cdq
out
(bad)
(bad)
movs
mov
inc
aaa
sbb
push
inc
xor
mul
fiadd
loope
and
xor
cmp
sub
pop
int3
int3
push
add
stos
aam
push
xchg
lods
or
push
fild
xlat
(bad)
adc
pop
cs
sar
dec
jae
fadd
inc
push
in
pushf
sub
adc
rol
add
mov
test
stos
inc
ret
dec
pop
cli
sub
and
enter
les
mov
xor
rcr
repnz
mov
(bad)
or
in
ret
bnd
sbb
ins
pop
imul
add
push
or
or
sbb
push
(bad)
and
adc
test
xor
xchg
push
pop
and
xor
xor
cmp
push
mov
cmp
pop
push
dec
mul
add
clc
push
clc
cmc
push
sbb
sbb
and
pushf
xchg
jp
repnz
push
icebp
in
push
repz
inc
xchg
or
xchg
xor
icebp
pop
test
ret
mov
cld
and
test
jns
cmp
cmp
sub
push
enter
push
sar
nop
popa
iret
inc
inc
sbb
adc
pusha
and
push
lods
pop
lods
pop
or
push
pop
fnsave
sbb
pop
or
test
repnz
test
or
xchg
or
inc
dec
cs
ret
int3
pop
or
pushf
fsubr
mov
mov
sahf
or
mov
push
xchg
ret
je
inc
fisttp
push
scas
or
scas
inc
adc
dec
loope
sbb
adc
adc
scas
push
inc
fld
jecxz
sbb
neg
push
cmp
add
adc
fwait
mov
fld
xor
adc
clc
or
fnstcw
sbb
or
mov
inc
jle
jle
sar
mov
stc
add
add
jmp
add
enter
jmp
and
mov
and
sub
xor
movs
aam
lods
out
mov
nop
add
imul
rcr
adc
and
or
movs
cdq
push
je
or
xchg
mov
in
shr
lahf
test
or
sub
and
imul
and
add
lock
or
dec
xchg
ret
std
popa
jnp
dec
inc
and
iret
xchg
jns
sub
jno
add
call
push
stc
or
inc
push
cmc
adc
les
inc
xor
push
adc
das
mov
and
push
aaa
or
add
jmp
adc
mov
push
inc
mov
push
push
xchg
pop
add
mov
sub
sbb
popa
add
je
mov
dec
retf
stos
leave
and
push
and
(bad)
jmp
sbb
cmps
push
shl
clc
jne
test
inc
(bad)
dec
(bad)
aam
adc
inc
jbe
mov
mov
and
and
and
clc
mov
or
test
add
pop
dec
arpl
inc
enter
ins
sub
or
stos
xor
dec
stos
jmp
mov
sbb
mov
lock
arpl
mov
(bad)
in
out
pop
adc
das
mov
jmp
add
sub
in
stos
ret
call
push
mov
add
pop
push
stos
xchg
popa
jnp
daa
rcl
jns
and
leave
add
dec
rol
add
pusha
aam
int
and
inc
clc
in
and
push
xchg
or
xor
pop
sbb
rcl
ret
stos
or
pop
mov
xor
and
je
inc
aas
adc
adc
and
push
jb
dec
pop
pop
or
enter
dec
sbb
xchg
push
dec
jmp
out
icebp
inc
dec
pop
cld
cmp
add
repnz
lods
popa
rcl
das
mov
sahf
dec
add
retf
jbe
sbb
inc
adc
pop
add
movs
xor
xor
adc
add
ret
int
adc
or
or
add
rol
bound
mov
jno
xchg
(bad)
cmp
mov
inc
sbb
call
fsub
adc
stos
dec
enter
sub
mov
adc
mov
popf
pop
mov
adc
mov
push
repnz
enter
in
pop
pop
push
not
mov
adc
pop
clc
jb
retf
cmc
and
sub
or
mov
scas
and
int
lock
sub
and
lds
repnz
or
inc
sub
and
push
ss
sub
jmp
arpl
push
jo
jno
stos
cmp
loopne
cmp
nop
dec
icebp
fisttp
sub
jb
and
or
imul
pusha
lods
add
rcl
add
inc
in
dec
sub
or
out
shr
scas
fst
les
or
jge
and
pop
and
xor
inc
sbb
mov
repz
push
pop
retf
mov
add
add
cmp
and
cmp
ss
bound
sub
dec
mov
jmp
sti
inc
xchg
xchg
mov
popa
mov
inc
out
and
jo
inc
push
rol
nop
loopne
mov
xchg
mov
and
add
in
fcom
ret
inc
or
shr
mov
mov
jmp
push
cmp
repnz
cmp
(bad)
into
and
sub
xor
jns
inc
retf
inc
shr
movs
sbb
jge
mov
adc
fwait
mov
sbb
fstp
and
jmp
les
mov
add
and
push
jo
or
jne
or
or
or
je
pop
adc
sbb
cwde
add
sti
cmps
dec
adc
iret
xchg
push
dec
mov
and
loopne
cmps
xchg
ins
xchg
pop
fwait
lea
int3
mov
inc
mov
movs
push
mov
mov
iret
sub
lods
out
mov
push
push
push
mov
adc
mov
lahf
push
cmp
ja
cmp
popa
jl
inc
dec
or
inc
das
pop
sbb
adc
cmps
fs
sahf
pop
ja
cmp
inc
mov
or
hlt
iret
hlt
mov
add
sub
dec
pusha
in
jbe
mov
inc
fadd
fwait
mov
(bad)
or
lahf
in
sub
into
arpl
dec
sbb
xor
mov
fadd
pop
je
pop
test
or
dec
add
rol
and
add
xchg
mov
xor
(bad)
jmp
or
ins
xchg
scas
and
js
je
jnp
dec
jl
neg
sbb
ror
cmp
jae
aas
and
adc
std
or
test
inc
dec
outs
inc
add
inc
mov
sub
jnp
ret
jbe
jl
loopne
pop
nop
cmp
int
xchg
sti
or
leave
sbb
popf
or
fiadd
(bad)
(bad)
push
into
je
or
pop
add
or
mov
adc
shr
outs
jge
mov
fidiv
xor
adc
cmps
inc
rol
pusha
call
dec
aas
or
inc
lea
add
xchg
push
test
or
call
push
into
ror
imul
cmp
adc
shl
mov
std
shl
or
ror
adc
pop
shl
ret
pop
cwde
pop
mov
shr
ret
add
sub
add
inc
push
pusha
push
imul
repz
inc
push
clc
mov
shl
or
xchg
inc
loope
jbe
outs
dec
gs
ja
mov
fld
mov
iret
push
loop
or
sub
jo
retf
pop
add
call
dec
clc
repnz
ins
sub
mov
inc
add
pop
cmp
pusha
outs
outs
or
dec
test
stc
mov
add
cld
and
mov
mov
(bad)
xchg
std
cmp
popa
fwait
repz
(bad)
jbe
les
rcr
mov
aaa
xchg
jo
mov
call
add
sub
out
inc
nop
lea
lea
xchg
push
xchg
sub
cdq
xor
push
inc
call
(bad)
rcr
or
imul
jbe
pop
ja
popf
jge
cld
push
adc
mov
mov
adc
jg
dec
add
or
mov
or
xchg
mov
dec
push
add
repnz
jl
jo
test
mov
jne
ja
int3
push
inc
hlt
ja
xor
jmp
mov
out
inc
push
je
test
mov
mov
or
cmp
outs
daa
push
pop
pop
adc
push
mov
add
and
and
cmp
adc
xor
es
xchg
lock
fmul
mov
cli
mov
push
xchg
pop
ret
hlt
test
xchg
mov
sbb
lea
mov
adc
mov
add
add
movs
test
and
hlt
push
cmc
xchg
mov
outs
sar
or
push
xchg
sub
(bad)
mov
jne
sbb
inc
sub
add
scas
and
jge
sbb
xor
xchg
sbb
add
cwde
pusha
cld
add
ret
pop
pop
clc
mov
and
dec
fs
out
shr
add
adc
pop
mov
xor
sub
call
into
push
popf
icebp
and
rcr
out
fs
pop
cli
jle
push
xchg
push
cmp
mov
ins
inc
ss
xlat
push
add
lea
loope
fistp
fdivp
jb
mov
cmp
xor
sar
sub
pop
in
and
inc
repz
imul
pushf
push
mov
jmp
(bad)
movhlps
loopne
loopne
pop
or
mov
xchg
jo
dec
hlt
push
xchg
jmp
ss
inc
shl
cmp
push
loopne
dec
pop
pop
pop
fsubr
xor
inc
or
dec
mov
jb
cli
or
fs
lds
adc
mov
add
je
jmp
mov
sub
push
push
pusha
fadd
in
cld
add
(bad)
mov
jl
xor
loope
mov
push
out
mov
push
inc
push
mov
in
cdq
movs
jb
(bad)
loopne
ss
and
add
push
mov
aas
in
fsubr
sub
movs
fsubr
fsub
call
in
xchg
add
mov
imul
ficom
pop
pop
dec
in
jle
jmp
fild
mov
outs
push
adc
in
in
add
pop
std
sub
add
ds
jb
mov
fsubr
jecxz
pop
or
mov
in
mov
jecxz
clc
cmp
clc
(bad)
push
push
imul
test
lea
in
ret
xchg
inc
mov
test
cmp
add
sub
sub
mov
adc
cmp
xor
jnp
sbb
sbb
push
push
push
dec
pop
popf
and
pop
inc
push
int3
add
inc
inc
(bad)
fild
push
xlat
xor
adc
mov
add
rcr
push
ss
ficom
cmp
inc
inc
dec
jne
xchg
mov
push
es
(bad)
movs
add
or
jecxz
add
pop
add
nop
aam
jg
adc
sbb
xchg
pop
gs
mov
inc
inc
call
test
add
js
mov
sbb
retf
cmp
dec
fadd
xor
test
dec
or
dec
lds
rcr
icebp
jge
call
aas
jb
jge
mov
movs
and
add
adc
mov
imul
loopne
jb
xchg
test
xor
fs
jbe
push
or
in
jge
xchg
sbb
cs
add
sar
nop
sbb
jb
cwde
sub
jbe
cmp
aam
int3
add
shr
(bad)
pop
and
(bad)
cld
cmps
sahf
sbb
push
xchg
cmp
call
clc
hlt
lock
(bad)
sub
icebp
and
mov
loopne
sub
pop
jmp
loope
mov
adc
nop
aam
sub
imul
and
adc
sar
dec
jle
fiadd
push
push
mov
lock
adc
enter
nop
sub
cmp
icebp
mov
and
fist
lods
mov
and
(bad)
sub
in
pop
push
retf
adc
sbb
(bad)
mov
push
sahf
sub
jl
xchg
push
hlt
mov
dec
movs
sub
iret
pop
in
pop
add
sahf
push
outs
push
shr
ss
jmp
cmp
movs
popa
sbb
sahf
ins
and
pop
jle
sub
ds
fidiv
imul
in
mov
mov
jne
and
adc
out
mov
dec
inc
je
js
rol
ds
cmp
imul
in
xor
cmp
xor
xchg
fnstsw
push
(bad)
cs
test
movs
ss
and
and
ins
push
xor
inc
(bad)
and
data16
push
push
outs
sbb
or
test
or
or
pop
rcl
js
add
ss
movs
or
push
push
adc
mov
xchg
xchg
and
jmp
sub
xchg
jne
mov
mov
test
sbb
aaa
sub
jnp
(bad)
arpl
mov
mov
(bad)
adc
pop
jae
js
and
ja
dec
mov
xor
jno
outs
xchg
div
in
mov
ror
sub
gs
aas
ins
aam
mov
mov
test
dec
dec
pop
push
mov
push
mov
jb
xor
jmp
(bad)
or
sub
dec
sti
rcl
lods
lods
push
and
mov
pop
out
add
xchg
out
sbb
ror
jbe
in
sub
jno
pushf
pop
sti
mov
sahf
adc
pop
jecxz
xchg
add
mov
add
jae
out
inc
sub
pusha
pop
adc
mov
mov
add
lea
outs
jno
sub
shr
xchg
cmp
fcomp
and
push
sbb
mov
test
pop
rcl
adc
js
xchg
call
jle
xlat
and
inc
cmp
add
setg
dec
sub
fldenv
jmp
fiadd
fwait
xchg
and
inc
mov
rcr
pop
or
mov
jne
xor
shr
jl
push
push
sete
pusha
loope
sbb
popa
call
rcl
mov
and
rol
mov
xor
mov
jno
push
jo
or
lds
pop
aaa
pusha
jns
pop
(bad)
mov
xor
jl
jbe
(bad)
ss
lea
sbb
(bad)
rcr
test
cmp
sbb
mov
and
xchg
push
push
push
rcr
mov
test
mov
popf
iret
sub
fimul
sbb
and
sub
jp
int3
ror
out
jns
hlt
pop
inc
jb
or
stos
xor
pop
jge
int
(bad)
je
stos
pop
dec
fnstenv
add
inc
push
and
or
cmp
adc
sub
or
push
inc
ret
stos
loop
mov
push
nop
scas
push
mov
cmp
push
jg
jge
mov
lahf
(bad)
jns
mov
jg
stos
push
or
(bad)
pop
adc
movs
ret
jb
adc
std
stc
push
pop
(bad)
aam
mov
retf
jb
into
push
sti
add
push
adc
adc
push
mov
adc
xor
and
or
outs
cwde
mov
mov
mov
sbb
sub
test
cwde
push
mov
mov
cmp
in
mov
sbb
sub
rcl
(bad)
sbb
sbb
in
retf
push
push
jg
push
xor
sbb
lahf
pushf
mov
jg
test
push
add
push
push
push
cwde
pop
sbb
add
sbb
inc
sbb
inc
in
imul
xchg
push
aad
add
cld
push
sub
and
mov
ret
arpl
dec
pop
adc
mov
push
jmp
mov
adc
ror
and
or
inc
and
(bad)
dec
sub
or
xor
and
sbb
gs
sti
jge
add
push
ret
push
ret
gs
dec
je
jb
stos
sub
sahf
stos
int3
dec
mov
repnz
xchg
mov
retf
adc
sbb
inc
jnp
push
(bad)
retf
adc
mov
mov
cdq
inc
mov
das
add
adc
push
sbb
ins
adc
jp
aam
mov
fdiv
mov
mov
pop
xchg
in
sti
push
or
mov
and
stos
sub
fcom
js
inc
mov
stc
fisub
jo
xchg
imul
cmp
jle
ja
nop
mov
in
push
adc
xchg
idiv
mov
daa
pusha
ins
inc
add
lahf
in
mov
mov
lea
mov
adc
or
or
xchg
cmp
dec
jmp
or
rol
jmp
aas
data16
test
test
aam
sub
call
dec
add
ins
or
(bad)
fiadd
int
cmp
cmp
sub
(bad)
sbb
outs
adc
add
mov
add
add
movs
jb
movs
xchg
push
ds
cwde
mov
mov
push
inc
jl
add
pop
add
push
jmp
mov
scas
push
arpl
movs
add
repnz
add
scas
pop
aad
add
repnz
xor
pop
adc
icebp
(bad)
cmps
xor
(bad)
mov
movs
add
aad
repnz
xor
inc
cld
mov
jg
add
(bad)
enter
sbb
jg
push
or
and
add
pop
pop
add
add
add
clc
popf
sub
ret
shr
cwde
xor
cmp
add
rol
out
das
pop
mov
retf
test
jge
cmc
sub
inc
mov
or
adc
add
push
and
jnp
retf
sbb
xchg
push
mov
mov
pop
mov
sbb
mov
les
push
mov
cwde
mov
mul
add
xchg
jge
add
dec
push
fadd
cmps
xchg
test
xchg
ror
xor
rcl
js
scas
rcr
jl
lea
cmp
jmp
add
push
push
jp
rcl
ror
mov
movs
jl
fmul
xchg
(bad)
ja
arpl
mov
inc
mov
pop
fiadd
cld
jns
sub
mov
cmc
sub
push
or
mov
stos
add
mov
loop
mov
scas
add
xor
mov
inc
jmp
mov
test
dec
test
call
in
ss
adc
and
hlt
push
sbb
cwde
sbb
dec
(bad)
data16
push
jmp
pop
add
push
setg
loopne
mov
add
add
mov
push
adc
test
inc
dec
mov
bt
sar
outs
inc
lock
and
gs
adc
push
call
jle
sub
loope
mov
pop
fcmovu
scas
add
clc
push
nop
dec
adc
add
add
sbb
cmp
sub
imul
or
test
je
add
pop
scas
adc
or
push
frstor
push
push
je
adc
jle
push
lahf
inc
push
cmp
scas
cmp
or
sub
or
add
pop
adc
sbb
movs
and
das
xchg
test
sbb
enter
aaa
xchg
mov
mov
sbb
add
jno
mov
fwait
mov
fs
das
ror
in
jne
enter
and
ja
push
add
pop
ja
repz
sub
daa
or
cmp
sbb
or
mov
mov
mov
push
mov
adc
sbb
shr
inc
(bad)
and
xlat
bound
shl
sub
adc
add
loope
ja
je
aas
in
add
sbb
jecxz
or
mov
mov
mov
sar
outs
and
dec
add
sub
icebp
popf
add
dec
push
cmps
and
inc
jns
xor
stc
fisttp
cmp
mov
ins
mov
push
pop
and
das
and
jne
fidiv
push
inc
adc
add
and
mov
packsswb
inc
add
pusha
rol
sub
dec
movs
pop
pusha
retf
add
add
jbe
pop
movs
std
div
lods
mov
icebp
adc
pop
rol
loop
dec
add
retf
mov
pop
jge
jle
ja
push
clc
mov
inc
add
push
cmp
sbb
pop
add
xor
pop
mov
jl
js
add
sbb
aas
cmp
or
xor
push
lea
sub
mov
or
inc
mov
adc
xor
imul
and
scas
pop
or
dec
pop
cs
push
inc
sub
pusha
mov
leave
js
loopne
imul
mov
adc
xor
lea
mov
adc
inc
adc
pop
pop
test
test
shl
shl
jne
or
add
addr16
aam
jmp
mov
rcl
(bad)
in
mov
loop
push
lock
lock
and
ja
and
mov
in
dec
scas
in
sbb
or
inc
mov
(bad)
jecxz
mov
mov
dec
loope
pop
jo
add
jl
or
pusha
sbb
sbb
ja
fidiv
pop
push
add
jnp
sub
in
add
dec
push
cmp
lahf
inc
mov
rcl
cdq
xchg
pop
mov
movs
lock
push
popa
in
in
stos
mov
pop
gs
add
xor
sub
jmp
xchg
push
dec
jge
ret
sar
push
add
mov
adc
fcom
xchg
outs
(bad)
push
nop
pushf
and
jmp
ret
sub
leave
mov
cli
outs
push
mov
movs
adc
cs
enter
(bad)
push
call
jecxz
pusha
jl
dec
popa
dec
icebp
pusha
js
dec
jl
outs
ficomp
or
mov
movs
push
jne
leave
imul
jecxz
inc
push
inc
and
outs
xlat
xor
push
jo
repz
outs
adc
sub
call
xor
cmp
dec
or
xor
inc
std
adc
inc
mov
jl
enter
jg
nop
push
pop
test
jne
loopne
push
dec
cmp
add
(bad)
(bad)
test
je
adc
jo
nop
shl
movs
or
dec
je
add
sub
test
mov
push
push
repnz
leave
push
imul
jmp
imul
jmp
or
sti
pop
into
rcl
nop
mov
ret
push
stos
sbb
jg
cmps
mov
mov
lds
add
pusha
inc
or
bound
dec
xor
adc
icebp
jmp
aaa
push
sub
push
xchg
(bad)
inc
xor
cmps
jb
or
add
mov
pusha
and
adc
dec
jbe
test
or
and
mov
imul
cmc
or
daa
adc
aas
pusha
rcr
test
jne
jmp
cmp
cmps
daa
lods
in
rol
xor
pop
cmp
pop
in
outs
push
aam
fdiv
test
cli
lods
cmp
jmp
adc
(bad)
mov
mov
ss
add
mov
xchg
jl
mov
in
rcl
je
movzx
dec
xor
or
jnp
adc
and
mov
push
outs
pop
gs
push
in
add
jns
pop
pop
loope
sbb
add
fucomp
fwait
add
fistp
aaa
out
pop
lods
enter
jo
das
sub
or
mov
xchg
mov
jbe
loop
add
and
hlt
ficom
lods
cmp
lock
es
mov
lods
rol
push
sbb
push
add
pushf
jl
bound
popa
fild
pusha
repz
ins
popf
mov
cmp
inc
js
mov
in
mov
mov
push
(bad)
adc
ins
adc
mov
jb
cmc
and
mov
fdivr
xor
jl
xchg
shl
pop
jmp
jb
dec
cmp
mov
clts
pop
inc
xchg
out
(bad)
mov
xlat
(bad)
rcr
pop
dec
fbld
shl
push
mov
sbb
cld
imul
mov
(bad)
retf
or
jnp
jns
ficom
loope
jge
xor
int
(bad)
call
jnp
mov
adc
pop
add
inc
push
add
jecxz
pushf
add
js
mov
and
mov
fsub
stos
push
push
xor
add
in
ret
push
cmp
arpl
sbb
xor
cs
arpl
dec
es
fdivr
cmp
adc
not
sbb
out
pushf
or
ds
out
mov
push
cmp
adc
xor
shl
je
add
or
lahf
mov
jmp
sahf
fs
gs
jmp
gs
(bad)
push
sub
inc
call
pop
mov
clc
dec
fadd
jmp
fdiv
mov
xchg
int
cld
push
sbb
iret
mov
and
sbb
mov
push
outs
jns
and
cmc
arpl
mov
fs
push
adc
xchg
inc
es
adc
mov
and
cmps
popf
sbb
xchg
retf
arpl
mov
add
mov
les
adc
jge
push
jns
ret
and
clc
rcl
int3
je
inc
mov
call
dec
push
in
pushf
cmp
push
clc
mov
aaa
push
pop
adc
fdivr
pop
nop
push
sub
shr
mov
loopne
add
mov
pop
in
sahf
mov
scas
xchg
sbb
pop
fwait
push
sbb
(bad)
mov
in
adc
scas
sar
sar
call
adc
adc
ror
mov
shl
mov
ins
pusha
cld
cmp
mov
jmp
sbb
lea
mov
and
sbb
adc
add
maskmovq
div
mov
mov
adc
test
hlt
(bad)
cmps
dec
lods
aaa
dec
mov
sbb
xor
xor
inc
sub
dec
push
push
mov
add
xor
daa
adc
sbb
movs
in
shr
inc
adc
retf
and
call
data16
pop
push
mov
(bad)
imul
loopne
jp
js
jbe
mov
or
jge
gs
aaa
add
mov
dec
dec
push
jnp
mov
mov
sub
nop
retf
push
adc
retf
pop
bound
jmp
outs
pop
mov
add
pusha
or
dec
fmul
sub
mov
push
js
mov
mov
jnp
jbe
adc
or
adc
mov
push
cs
jne
and
mov
fldcw
and
xchg
add
pop
sahf
dec
loopne
mov
pusha
test
mov
and
call
pop
mov
sub
div
pop
pop
sbb
push
pop
adc
stos
cmps
imul
es
jmp
mov
enter
xor
mov
call
call
mov
jo
jae
add
or
jmp
dec
sbb
sbb
mov
adc
mov
add
mov
adc
xor
ins
lods
and
out
sub
cmps
add
xchg
iret
add
inc
add
dec
sbb
rcl
sbb
ficomp
sbb
inc
sbb
push
jne
add
sub
xor
add
sbb
mov
xor
mov
je
loop
or
pop
or
mov
iret
ret
retf
sbb
or
(bad)
and
mov
cmp
cmp
sahf
cmc
and
xor
or
imul
or
sbb
push
imul
adc
push
mov
push
ror
ins
sub
xchg
and
lahf
mov
push
fs
jo
adc
scas
icebp
inc
js
adc
ds
jo
popa
je
and
and
jmp
mov
add
add
push
icebp
out
jmp
in
sahf
test
sub
shr
xor
test
dec
fmul
inc
out
data16
retf
and
inc
or
mov
mov
sar
ret
sub
push
lea
stos
test
pop
jne
rol
cmp
and
or
in
xor
scas
ins
or
pushf
push
and
pusha
(bad)
jge
leave
add
sar
icebp
xchg
fdivr
rol
(bad)
pop
nop
fnstsw
mov
xor
jge
into
pop
inc
lods
or
int3
mov
je
test
arpl
mov
add
mul
jmp
cmp
ficom
xchg
or
adc
jns
leave
sbb
ins
sbb
imul
retf
inc
cld
inc
popf
fadd
ins
sub
mov
das
cmpxchg
push
sbb
ret
fadd
jns
dec
or
pop
out
pop
xor
dec
mov
push
adc
mov
shl
or
mov
lea
daa
jl
push
mov
and
inc
movs
loope
dec
unpckhps
dec
jl
lock
ret
paddusw
sub
mov
jne
ret
jl
and
or
xor
xchg
pusha
rcr
ds
sub
mov
cmp
add
stc
adc
dec
push
adc
add
inc
push
arpl
pop
inc
jno
inc
mov
loop
inc
or
pop
jno
fist
pop
or
or
outs
or
shr
sub
xor
push
xchg
add
push
add
or
adc
add
fwait
leave
dec
sub
sub
or
(bad)
or
dec
mov
shr
add
pop
push
xchg
hlt
ss
mov
movs
mov
(bad)
out
ror
js
rol
dec
jle
xor
sbb
loopne
jl
xor
add
imul
jb
loop
cmp
dec
fdivp
and
mov
mov
add
in
inc
push
pop
mov
ds
sar
cld
or
or
add
and
imul
push
cmp
and
push
push
(bad)
sub
fld
sbb
sub
or
and
dec
imul
sbb
jle
jmp
cmp
push
mov
jle
fldcw
push
dec
ret
out
mov
outs
inc
call
inc
(bad)
in
mov
and
(bad)
and
lock
cmp
es
inc
(bad)
addr16
jmp
push
and
mov
add
push
movs
add
add
mov
shr
ret
js
push
mov
inc
and
pop
pop
xchg
cmp
in
sub
cli
add
push
inc
imul
cmp
adc
in
fadd
fimul
push
fiadd
out
repz
inc
mov
shr
cmp
test
ret
jb
jno
pop
xchg
jb
daa
sub
imul
bnd
mov
xor
aad
or
lock
sub
add
adc
or
cmp
sbb
jg
dec
lds
and
fdiv
lea
sub
and
dec
sbb
sti
adc
mov
loope
addr16
pop
mov
pop
(bad)
sbb
mov
mov
shl
sbb
adc
xchg
xchg
shl
and
push
mov
and
icebp
mov
into
test
lds
test
enter
loop
int3
mov
jle
fcmovu
mov
mov
pop
call
std
or
pop
push
adc
xor
aaa
xchg
dec
mov
jne
jecxz
lds
pop
std
in
(bad)
mov
cld
sti
xchg
mov
xor
sar
sti
clc
or
push
ficom
push
inc
les
mov
dec
jne
push
and
mov
inc
je
fdivr
movs
popf
push
mov
xor
rol
jle
push
inc
fiadd
lods
(bad)
fsub
inc
push
push
jne
idiv
push
sbb
mov
jmp
dec
(bad)
ficomp
loopne
dec
ss
pop
in
jae
call
cmp
fincstp
scas
pop
pop
push
mov
fwait
dec
ret
and
cmp
add
lahf
jmp
aas
add
add
add
pusha
or
rol
ins
xor
cmps
sbb
shr
xchg
dec
push
dec
push
adc
pop
dec
adc
xchg
sbb
or
imul
push
dec
dec
fsubr
(bad)
sbb
and
adc
pop
data16
call
lsl
sub
push
mov
call
jnp
jae
pop
cmp
out
repz
mov
cmp
loop
cmp
mov
ficom
or
fdivrp
or
and
add
repz
cmp
mov
sub
and
iret
adc
adc
aaa
adc
xor
add
imul
sub
ins
adc
(bad)
std
add
pop
push
mov
daa
xor
addr16
xor
mov
adc
lea
push
shl
outs
jo
jns
and
jle
pop
dec
pop
int
mov
or
cld
std
sti
lahf
int3
sar
cli
sti
jo
cli
cmp
js
push
out
sbb
adc
xor
inc
fist
mov
pop
mov
and
std
cld
sti
xchg
out
cld
es
call
adc
or
mov
xchg
test
pop
or
aaa
push
add
loop
adc
test
cmp
xchg
je
cmp
xor
dec
xchg
xor
popf
pop
daa
push
stos
(bad)
pop
xchg
or
jbe
jle
or
add
jne
add
add
xchg
push
sahf
jo
ret
in
jnp
sbb
cld
sti
test
aam
aam
mov
mov
cli
nop
xor
add
movs
arpl
popf
or
sahf
cmps
jge
test
mov
test
ret
dec
xchg
outs
dec
jnp
ficomp
cli
lea
aaa
dec
push
inc
or
inc
ins
inc
or
outs
or
and
(bad)
dec
and
mov
les
js
cmc
cmps
imul
pop
jbe
test
ss
push
lahf
add
push
mov
pusha
xor
push
xchg
sub
adc
pop
adc
test
repnz
in
mov
and
mov
and
xchg
add
xchg
and
(bad)
pop
xor
jl
and
mov
jge
mov
nop
mov
push
xor
das
sahf
repz
aaa
mov
inc
mov
mov
(bad)
sub
cmp
jne
or
mov
shr
inc
aam
cmp
cmp
xor
push
adc
cmp
mov
inc
add
es
lea
test
xor
add
rcl
or
hlt
mov
inc
inc
in
hlt
jne
(bad)
xor
xor
inc
sbb
gs
push
jo
xchg
(bad)
adc
sub
scas
xchg
(bad)
xchg
or
push
jmp
clc
mov
ficom
pop
test
or
repnz
lock
ret
and
js
mov
jo
test
movs
addr16
loop
loope
add
mov
pop
arpl
mov
aam
loopne
dec
mov
sbb
inc
dec
or
sbb
hlt
mov
ficom
sbb
test
jne
mov
sbb
xchg
aam
jp
pop
add
sub
cdq
xchg
jo
dec
rcr
mov
cli
shr
call
or
pop
or
jmp
neg
outs
test
mov
mov
inc
pop
fdivr
mov
jle
push
xor
and
(bad)
sar
ret
shr
lock
add
sub
ins
mov
(bad)
(bad)
cmc
or
add
xor
cli
xchg
add
and
jb
adc
add
jge
hlt
push
daa
jmp
pop
mov
pop
push
sbb
jb
mov
push
mov
and
add
dec
mov
xor
add
xchg
test
and
out
test
cmp
mov
shr
not
add
lds
lods
mov
add
rol
add
or
shl
pop
pop
xor
leave
cli
out
push
loopne
cli
bound
out
mov
mov
ror
mov
lods
enter
adc
ficom
sub
outs
hlt
gs
std
outs
jmp
add
mov
imul
and
pop
mov
push
sbb
retf
adc
(bad)
rcl
pop
mov
movs
sub
ret
mov
push
mov
popa
shr
push
jp
xor
inc
jle
xchg
sbb
jno
aas
dec
lock
sub
push
jb
cmps
ss
or
mov
jge
jle
pop
mov
idiv
rol
fild
jne
adc
repz
and
add
fmulp
shl
or
mov
sbb
in
mov
dec
call
(bad)
and
loopne
push
xlat
adc
or
fadd
fild
fwait
xchg
mov
shl
xchg
fisub
dec
push
xchg
sbb
jl
out
or
mov
add
or
add
push
or
add
call
fst
jno
add
call
jmp
jo
mov
xor
test
pop
add
inc
mov
aas
aas
inc
inc
push
mov
sar
and
cmp
sahf
mov
dec
fidiv
fisttp
pop
(bad)
bndstx
neg
mov
fucomip
xor
retf
inc
and
ret
or
into
iret
mov
js
test
jmp
sbb
sbb
or
mov
add
jg
add
or
inc
sbb
inc
push
and
(bad)
mov
and
clc
or
cmps
lods
xor
mov
fbld
pop
lahf
sub
push
mov
(bad)
fcmovb
fdivr
mov
ins
adc
push
in
ins
je
test
pop
pop
sbb
or
fiadd
stc
add
or
adc
cmps
fisttp
ds
dec
sub
xor
mov
or
dec
rcr
fcomp
adc
push
xor
jg
xchg
jmp
loopne
repz
mov
add
loopne
cmp
inc
mov
adc
inc
sub
cmc
mov
fisub
push
cmp
sub
enter
sbb
add
loopne
cmc
cdq
in
test
jmp
sbb
ret
in
stos
adc
mov
sub
add
or
mov
mov
adc
xchg
sub
std
sbb
icebp
add
push
push
cmp
mov
or
sub
jmp
aam
jne
sbb
sti
sti
push
mov
sbb
cmp
outs
imul
cs
jl
ins
arpl
and
ins
test
stc
jnp
add
jno
sahf
cmp
cmp
popf
add
push
ss
cmp
stos
dec
inc
jmp
cld
pusha
mov
push
jmp
xor
or
add
and
adc
dec
push
in
xchg
inc
push
xchg
push
jmp
lds
pushf
or
push
and
cmp
adc
and
mov
push
cmp
sbb
cmp
ins
addr16
adc
setae
dec
clc
imul
fcomi
pushf
pop
lea
add
cwde
xchg
dec
or
jo
sbb
jno
mov
jle
xor
sbb
ret
or
sub
or
repz
aam
or
xlat
cmp
add
lock
inc
xor
rcl
mov
xor
int3
imul
sub
fwait
jmp
and
loope
mov
jae
out
xlat
mov
pop
inc
scas
sub
and
leave
mov
retf
xor
or
stc
xor
adc
fsub
cmps
and
adc
cmp
inc
add
xor
add
push
add
rol
and
sub
push
and
mov
push
retf
dec
dec
mov
ror
cmp
scas
imul
xchg
push
xchg
jmp
jno
repz
pop
jmp
movs
call
cmps
in
mov
shr
fmul
lea
mov
add
mov
xchg
pushf
outs
clc
test
mov
and
ret
enter
fstp
or
pop
add
dec
(bad)
inc
dec
jbe
(bad)
das
mov
jp
adc
adc
dec
dec
dec
xor
movs
pop
add
add
enter
push
add
mov
inc
arpl
dec
je
inc
dec
jne
mov
jb
adc
jmp
ds
xchg
and
mov
movs
inc
hlt
inc
clc
dec
cli
outs
sar
pop
dec
or
mov
fwait
mov
fisttp
retf
mov
sub
and
fldenv
pop
sbb
int3
sbb
jbe
xchg
pextrw
xchg
pop
add
xor
cwde
xchg
js
inc
retf
and
add
mov
cmps
int3
jo
and
xor
mov
dec
mov
pop
aas
(bad)
jae
inc
popa
sbb
fst
dec
jo
dec
inc
push
outs
(bad)
bound
push
sbb
cli
iret
xchg
mov
inc
mov
pop
leave
jmp
int3
leave
xor
add
sbb
jns
add
add
dec
xlat
lock
dec
add
cmp
pop
das
sbb
mov
pushf
ins
lahf
cmp
adc
mov
loopne
sub
cwde
inc
add
and
add
pop
loopne
jmp
nop
push
sub
mov
call
mov
cmc
jmp
mov
and
sub
push
or
push
inc
adc
movs
shl
cmp
je
les
into
jl
mov
or
shr
leave
xchg
xchg
mov
jmp
inc
out
scas
cdq
jge
cdq
loopne
push
in
mov
mov
add
sbb
js
push
pop
xor
mov
(bad)
lods
sub
(bad)
loop
jmp
jg
sub
inc
cwde
mov
or
imul
xor
and
test
sahf
mov
dec
jno
loop
int3
retf
sbb
cmps
cmp
retf
or
test
rcl
dec
inc
add
add
push
mov
xchg
add
fisubr
dec
mov
inc
and
movs
enter
xor
test
aaa
xlat
neg
xchg
and
mov
push
add
sahf
int
xchg
movs
or
add
or
rol
mov
lahf
xchg
outs
cmp
add
jbe
add
(bad)
ja
and
mov
inc
mov
add
sahf
pop
xor
popf
add
add
hlt
inc
loopne
and
cmp
rol
push
pushf
mov
adc
adc
inc
inc
fimul
add
mov
fild
outs
xor
mov
cld
jmp
data16
ins
arpl
jb
add
dec
dec
sahf
add
bound
dec
add
sbb
xchg
cmp
add
inc
scas
sub
bound
or
add
es
add
add
add
rcl
mov
pop
int
ins
or
not
retf
xor
mov
dec
push
pop
je
mov
loop
add
dec
and
sub
push
int
mov
fstp
cmp
or
sbb
mov
or
add
adc
jecxz
or
and
pop
and
out
or
into
shl
pop
sbb
loope
and
add
push
loop
dec
pusha
xor
or
push
gs
hlt
inc
adc
pop
push
cld
xchg
add
pop
xor
push
ds
dec
cdq
xchg
adc
shr
inc
mov
jne
dec
lock
add
stos
add
mul
sbb
mov
mov
lock
add
ror
pop
int
outs
sbb
punpcklwd
adc
add
cdq
cmp
es
pusha
pushf
sbb
scas
adc
push
inc
pop
inc
cli
sub
pop
pushf
or
or
cmp
adc
sti
sub
out
or
adc
push
int
jmp
inc
xor
jnp
out
mov
or
push
repz
push
imul
add
shl
and
xor
or
(bad)
(bad)
cmp
test
xchg
cmp
(bad)
jmp
lahf
dec
leave
outs
push
xor
stos
adc
ds
sbb
sbb
sbb
xchg
test
das
xor
iret
pop
(bad)
lds
push
test
pop
push
loope
lea
mul
ins
cdq
jne
add
clc
mov
repz
pop
or
adc
add
cld
dec
jne
adc
cdq
enter
arpl
sub
out
lahf
add
and
fcom
add
int3
pop
sub
xchg
and
add
lea
sub
lock
xchg
sub
movs
fcomp
icebp
dec
lods
jle
and
adc
out
push
sbb
xor
xor
jmp
add
ins
mov
push
sbb
lea
(bad)
push
add
jb
sbb
dec
sbb
xor
dec
cdq
fst
xchg
aaa
pop
push
push
or
(bad)
mov
fistp
fcomp
mov
in
iret
mov
cs
push
jp
loop
push
sub
test
adc
add
inc
add
inc
cmp
mov
enter
or
jmp
add
dec
or
add
stc
inc
jle
xor
jo
loope
dec
push
or
push
mov
push
jmp
cmp
imul
and
pop
dec
shl
push
dec
call
or
out
cmp
(bad)
fisttp
add
adc
sub
add
jne
mov
dec
jno
imul
gs
sti
pushf
inc
call
fdivr
fneni(8087
sub
fimul
mov
add
test
add
or
pusha
aas
xchg
(bad)
push
call
xchg
je
ret
jmp
add
lds
sbb
and
add
rcl
minps
fistp
fist
dec
hlt
mov
sub
add
fistp
aam
mov
out
popa
das
aaa
mov
add
ins
mov
jmp
lea
sbb
xor
mov
pop
mov
or
dec
mov
dec
dec
dec
xchg
lds
ret
or
xchg
push
pop
inc
adc
pop
mov
fild
inc
inc
call
cmp
inc
push
pop
(bad)
dec
sbb
pop
pop
add
push
add
sub
pop
push
imul
push
movs
retf
cmp
jp
or
pop
leave
daa
push
fwait
push
adc
clc
jbe
dec
or
lock
dec
jl
dec
nop
mov
mov
adc
mov
cmp
aaa
aaa
in
(bad)
jne
push
(bad)
push
(bad)
cmp
fiadd
sahf
shl
add
fs
or
push
adc
mov
les
cmp
xchg
in
add
add
pop
cld
paddd
pop
shl
sti
repnz
jne
or
cld
jne
std
jne
ss
pushf
cmps
rcl
psubq
lods
jne
pop
adc
das
add
jb
shl
push
push
mov
xor
xchg
push
add
rol
and
shl
xchg
(bad)
mov
lods
cmp
popa
fsub
inc
adc
push
xor
shl
push
add
sar
jo
pop
fsubr
ret
sub
mov
inc
or
inc
and
xchg
dec
mov
iret
les
add
inc
(bad)
jne
sub
add
out
push
mov
fisubr
and
rol
cmps
mov
or
mov
mov
and
mov
rol
adc
jbe
pushf
popf
add
add
dec
jbe
add
xchg
mov
or
mov
mul
std
lock
xchg
jg
pop
not
xor
outs
repnz
not
add
fiadd
fcmovbe
or
loope
push
cmp
pop
jge
or
adc
xor
hlt
and
mov
pop
stc
inc
ja
jmp
or
ror
inc
ins
add
jmp
xlat
mov
aad
xchg
das
fsub
push
inc
add
inc
mov
out
addr16
pop
pop
jne
ja
ins
add
mov
data16
ja
pop
mov
aas
jo
pop
test
push
dec
adc
or
dec
cmp
mov
and
mov
jae
les
es
push
rcr
pop
fs
hlt
or
add
add
inc
inc
xor
std
push
mov
or
add
xchg
int3
xor
mov
pop
dec
adc
jl
cmp
ret
ret
mov
(bad)
jge
fld
pop
sub
xchg
sub
inc
jle
fs
movs
in
inc
in
push
imul
dec
jl
in
push
rol
push
dec
mov
sbb
jl
sbb
mov
mov
fcom
pop
push
ins
cmp
dec
adc
fsub
sub
fistp
pop
lods
or
das
pop
jmp
in
sub
pop
jl
jle
mov
or
cmp
pusha
jmp
inc
adc
jle
or
inc
jne
rcr
xor
xor
scas
sbb
push
dec
pop
mov
add
add
nop
push
aas
or
shl
inc
enter
call
xchg
mov
aam
sub
lds
sub
or
sar
push
cmp
ins
sub
push
loop
xchg
pop
ret
cli
retf
cmp
push
addr16
(bad)
ins
imul
xor
xor
adc
movs
xor
and
sub
sbb
in
mov
jae
pop
sub
adc
xor
rcr
dec
and
adc
ins
push
js
push
add
sub
or
add
mov
jg
dec
mov
mov
pop
dec
stc
loopne
lock
lods
mov
dec
xor
push
dec
inc
adc
aam
jo
pop
xor
int3
mov
sub
rcl
xchg
mov
jmp
and
psubusw
ret
push
inc
je
dec
mov
inc
push
lock
xor
push
pop
inc
cli
pop
sbb
pop
or
sub
push
adc
in
test
or
adc
pop
and
xor
pop
jmp
sbb
adc
sbb
cs
imul
mov
mov
fdivr
jmp
push
cmp
jge
aas
cmp
jne
and
push
add
add
inc
dec
jle
push
sahf
xor
add
inc
ret
(bad)
cmp
cmp
mov
or
repnz
or
loope
mov
ret
or
push
outs
xor
fsubrp
stos
or
sti
ds
mov
push
ds
cdq
hlt
cmp
jne
imul
push
pop
pop
arpl
dec
cmp
jae
pop
inc
xchg
pop
call
xor
dec
and
loop
xor
push
jg
fmul
mov
or
xchg
jo
popa
fld
xor
sub
inc
inc
push
jg
mov
push
pause
mov
js
inc
hlt
add
adc
ror
fstp
pop
push
xchg
sub
adc
and
or
xor
dec
push
adc
xchg
in
xchg
addr16
ds
dec
clc
xor
cwde
enter
dec
iret
mul
cmp
xor
rcl
cwde
pop
jnp
or
ret
sub
loop
inc
iret
inc
mov
xchg
inc
sub
push
jns
push
stos
xor
dec
adc
mov
loopne
inc
or
cmp
inc
popf
mov
div
ins
cmp
mov
scas
leave
jmp
mov
xchg
add
mov
xor
sbb
or
lar
mov
lahf
sbb
fwait
shl
rol
fnstenv
(bad)
push
pop
daa
inc
jbe
inc
nop
inc
dec
cmp
in
or
push
dec
jo
test
dec
pop
and
sbb
inc
sbb
pop
jecxz
(bad)
pop
test
push
pop
dec
and
aas
sahf
push
retf
push
or
(bad)
mov
fnstenv
fistp
cmp
test
in
add
rcr
or
sbb
sub
push
sbb
in
adc
mov
pop
cs
mov
in
mov
sbb
(bad)
and
sbb
int3
fiadd
cmp
pop
and
and
fild
loope
(bad)
ds
stos
je
mov
inc
push
inc
lahf
lock
and
mov
add
mov
je
lea
add
adc
pusha
sbb
lahf
add
xchg
and
pop
jge
xchg
jmp
xor
sbb
adc
push
push
adc
inc
xchg
dec
(bad)
inc
sub
mov
sub
pop
sub
push
adc
inc
inc
xor
fmul
dec
inc
push
add
retf
mov
es
cdq
sbb
sbb
sub
and
xor
ret
jmp
in
or
lods
push
popf
mov
jl
pusha
or
pop
movs
pop
cs
pop
je
xchg
inc
push
mov
push
push
pop
ins
push
jl
stos
inc
lods
or
and
jp
mov
sahf
sbb
bound
daa
sub
inc
aaa
mov
xchg
aas
dec
push
push
cmp
push
out
sar
cmp
ja
(bad)
jne
jmp
imul
clc
jp
adc
fisubr
sub
(bad)
dec
jmp
mov
xchg
mov
mov
xchg
or
and
or
or
ror
add
clc
or
pop
ja
dec
pusha
push
push
pop
mov
cmp
xchg
js
outs
outs
pushf
add
or
jne
xor
push
mov
sub
test
inc
push
sub
stos
jo
sub
or
mov
or
imul
es
mov
dec
ret
sub
jmp
cmp
inc
fs
sub
jmp
sub
cmp
add
dec
aam
pusha
pop
and
nop
movs
icebp
sbb
or
inc
repnz
or
push
lods
sbb
adc
push
add
stos
pop
pop
or
ret
fcom
cmps
imul
js
dec
push
sub
inc
inc
dec
lods
add
mov
in
pop
dec
adc
xor
pop
sbb
stos
add
mov
pop
shr
pop
inc
(bad)
adc
rcr
xchg
ins
inc
and
and
and
ret
retf
loop
mov
mov
pop
inc
xor
test
cmp
je
add
pushf
es
ds
push
mov
push
stos
xchg
mov
retf
jmp
add
test
sbb
aaa
cmp
sbb
or
in
shl
sti
adc
je
sbb
sbb
mov
scas
lock
aas
jnp
and
mov
pop
(bad)
inc
test
cmp
ret
adc
add
cmp
jnp
inc
sar
sub
jle
pop
cmp
xor
xor
or
and
push
inc
pop
cwde
(bad)
push
and
xor
jg
or
ror
push
sbb
add
mov
inc
mov
cmp
es
push
shr
push
lods
adc
mov
fdivr
xchg
jle
ror
shr
std
push
mov
sar
clc
test
iret
pop
pop
jl
jmp
pop
push
push
xchg
js
rol
dec
inc
push
inc
push
pop
push
sub
or
jo
jbe
xchg
scas
jne
jno
push
mov
sub
dec
mov
pop
mov
or
xchg
addr16
nop
mov
stos
push
add
sbb
nop
push
test
push
inc
and
sub
loop
xor
shl
push
and
mov
inc
jb
push
jmp
jnp
int
xor
ret
stos
fcom
sub
dec
jo
aas
add
mov
push
mov
sub
imul
push
mov
push
inc
pop
mov
mov
dec
js
push
cmp
pop
imul
and
cmp
mov
dec
add
push
aas
pop
dec
push
sub
dec
and
mov
dec
mov
xor
pop
jo
cmp
fidiv
dec
sbb
jg
mov
jmp
pop
mov
and
push
mov
push
enter
neg
and
fwait
push
jno
sub
push
ror
mov
sub
scas
add
enter
fsub
outs
xor
sub
dec
out
or
dec
div
inc
xchg
not
inc
mov
pop
pop
adc
jg
outs
cmp
pop
pop
mov
sbb
jge
repz
adc
cmp
iret
add
(bad)
xor
push
ret
and
cld
inc
mov
icebp
push
mov
mov
popa
nop
and
es
add
xchg
inc
retf
lea
push
mov
push
push
add
and
add
cmp
xchg
mov
inc
mov
fimul
call
sti
xchg
pop
rol
xor
sub
test
ins
inc
mov
cmp
cmp
adc
lock
sar
or
dec
inc
call
xchg
add
push
js
retf
dec
call
sub
adc
icebp
hlt
or
scas
mov
sti
(bad)
add
inc
loopne
jae
inc
lds
adc
mov
and
das
push
xchg
add
sub
add
scas
ds
popa
(bad)
sub
add
cld
add
cmp
mov
stos
adc
mov
mov
ret
inc
or
mov
fcmovnb
inc
xchg
lahf
fsubr
push
or
imul
or
push
dec
ror
rcl
xlat
lods
add
ret
push
fisttp
sbb
sub
dec
les
add
pop
xchg
stos
pop
sbb
add
mov
rcl
ins
add
pop
call
mov
dec
xor
mov
or
loopne
lods
fist
clc
cdq
add
mov
les
push
aas
mov
je
pop
mov
add
out
sub
xchg
mov
jmp
mov
pop
push
cli
add
clc
push
push
push
jmp
xchg
add
cmp
fdiv
mov
retf
xor
or
adc
mov
out
dec
cmps
sbb
pop
push
cdq
nop
xor
dec
jl
mov
pop
and
stc
push
cmp
inc
pop
popa
push
sbb
mov
or
mov
(bad)
and
push
pusha
pusha
dec
dec
ds
mov
add
adc
adc
jne
or
inc
and
cmps
cs
sbb
add
jbe
jl
and
movs
inc
(bad)
call
jb
repnz
adc
in
sbb
xor
xor
or
bound
add
jmp
pop
push
mov
dec
call
adc
cmp
mov
sub
aam
mov
add
and
jg
(bad)
in
dec
daa
cli
add
push
lea
inc
sub
cmp
jl
or
in
test
neg
sub
rcl
add
or
push
push
xor
xchg
sbb
shl
addr16
ja
push
adc
cmp
cmp
jne
push
sub
fisubr
(bad)
inc
repz
mov
dec
sbb
xor
and
or
hlt
and
sahf
hlt
jne
jge
xor
push
dec
scas
add
mov
add
jns
add
or
sub
push
xchg
xchg
push
push
jmp
lahf
mov
(bad)
call
push
shr
cs
fs
es
rcl
jmp
fild
sub
outs
fisubr
sub
adc
sub
push
inc
jne
js
cmp
add
push
shr
lea
or
xchg
lock
pop
jbe
xchg
lods
mov
mov
lds
jno
mov
bound
jne
je
mov
mov
inc
and
add
pop
dec
jp
cmp
std
jnp
inc
sbb
outs
push
cdq
inc
xchg
lea
jae
fild
loopne
popf
mov
xchg
pop
jge
and
(bad)
vpsubw
mov
pusha
int3
dec
sbb
mov
ud0
push
shl
adc
mov
add
sti
or
mov
mov
cwde
push
or
add
or
ja
and
and
and
pop
iret
push
mov
push
loope
or
ror
and
inc
fbstp
push
add
mov
ficomp
or
xor
dec
test
sbb
lds
add
or
push
push
pusha
xor
or
addr16
push
dec
add
and
ret
je
sti
ret
nop
cmp
mov
in
push
sbb
jge
and
and
sub
adc
mov
movs
xchg
adc
es
mov
fs
push
or
inc
or
and
pop
aaa
push
xor
pushf
or
lods
test
and
nop
xor
jno
mov
or
retf
dec
mov
and
fmul
mov
enter
mov
add
ret
inc
pop
fadd
pop
cmp
mov
sbb
mov
in
mov
push
xor
fnstcw
ins
push
xor
adc
or
stos
loopne
jne
mov
or
mov
sti
xchg
lea
push
in
mov
cmp
or
mov
bound
std
sub
jmp
mov
add
movs
push
inc
add
sbb
dec
and
pusha
sub
adc
jb
nop
push
inc
je
div
cmp
cdq
cmp
jns
xor
push
retf
sti
(bad)
adc
mov
dec
adc
cmps
add
mov
pop
or
xor
inc
imul
cmp
je
cld
inc
jnp
pop
pop
leave
add
xchg
mov
push
xchg
ror
push
pop
mov
sbb
sbb
loope
pop
or
mov
mov
or
jb
rcl
rol
and
mov
enter
fsub
fdivr
and
retf
sahf
add
adc
and
adc
dec
mov
call
mov
xchg
out
xchg
inc
jb
pop
pop
sar
pop
fdivr
sbb
imul
ret
fmul
push
jnp
cmps
and
dec
daa
imul
addr16
pop
aam
sbb
jnp
sub
add
(bad)
mov
rcl
movs
xchg
jnp
or
cmp
popa
data16
enter
outs
cld
add
ror
shl
mov
mov
jmp
sahf
jb
and
sub
adc
mov
inc
lahf
fbld
xchg
mov
jl
pop
push
xor
shr
rol
pop
iret
ror
or
push
add
cdq
loop
xchg
mov
mov
inc
mov
cmp
je
or
pop
mov
outs
jmp
pop
inc
std
movs
jne
mov
xor
jg
mov
sub
mov
dec
fs
nop
sbb
or
sbb
and
xlat
mov
and
jmp
pop
mov
ja
into
and
and
aam
dec
add
(bad)
sub
cmp
jge
push
or
inc
inc
xchg
mov
pop
add
dec
sub
or
xor
jno
xchg
int
jl
or
or
lock
or
clc
clc
cld
jecxz
mov
jae
cs
add
jb
push
inc
add
add
add
xor
push
and
popa
inc
dec
jmp
dec
jmp
and
dec
or
mov
shr
adc
push
push
xchg
loopne
inc
mov
push
push
imul
mov
push
dec
cmp
loop
jae
cmp
jmp
pop
jg
add
mov
shl
push
or
imul
jle
jg
cli
out
adc
add
(bad)
sar
sbb
inc
inc
inc
push
cmp
sbb
adc
mov
or
int
mov
pop
or
inc
inc
or
popa
repnz
retf
mov
push
mov
add
cmp
dec
inc
mov
outs
rol
add
jne
pop
stos
mov
das
or
adc
or
mov
adc
pop
cmps
lock
bound
mov
ds
jno
aaa
hlt
sub
pop
jle
sbb
sbb
push
mov
or
jle
xor
pop
add
ret
mov
add
bound
mov
cmps
loope
xchg
mov
kxnorb
xchg
call
cmp
pop
(bad)
xor
sbb
test
jg
xor
cmp
sbb
mov
mov
jp
adc
cmp
pop
inc
shr
cdq
push
shr
xchg
int
ins
retf
push
rol
sar
and
mov
shr
or
fld
aas
clc
sbb
lock
out
cmp
fcomp
pop
sti
call
push
aad
or
add
repz
stos
pushf
mov
aas
dec
jmp
xchg
cld
xor
jo
push
je
jmp
test
ins
movs
shl
xchg
jmp
push
xor
repz
jo
nop
adc
adc
or
in
dec
and
mov
and
je
jnp
push
fisub
inc
dec
lock
(bad)
mov
and
push
push
mov
cmp
adc
or
and
gs
mov
aas
xchg
ss
push
push
xor
and
arpl
add
sub
adc
and
cmp
inc
pop
cmp
rcl
or
jg
pop
je
cmp
(bad)
cs
(bad)
cld
mov
sbb
sub
xor
or
retf
cmp
pop
add
xor
adc
mov
adc
adc
fcomp
xor
push
push
fnstsw
test
aam
and
mov
shl
rol
jmp
jge
(bad)
js
cmp
xor
mov
jne
cli
inc
sbb
stos
jo
rol
mov
mov
xor
sbb
out
out
rol
cmps
or
loopne
(bad)
mov
call
mov
ins
jmp
and
adc
or
(bad)
retf
(bad)
adc
inc
jg
ss
xchg
mov
mov
fnstcw
pop
jmp
jmp
pop
gs
call
cmps
f2xm1
push
push
stc
and
in
out
jle
jl
(bad)
xor
fcomp
pop
cmp
mov
add
adc
jecxz
cmp
jne
add
rol
xchg
push
in
sbb
dec
inc
xchg
sbb
lods
lea
sub
xor
loopne
add
pop
fstp
push
in
push
jecxz
cmp
scas
fmul
ins
mov
dec
push
ret
lea
fadd
ret
or
rol
in
adc
jmp
cmps
jo
mov
add
mov
pop
mov
fsubrp
add
or
scas
js
inc
pop
outs
push
inc
je
fsubr
ficom
and
push
add
jne
cmp
push
jge
or
pop
xor
jo
dec
fs
xor
cmp
je
div
add
mov
pop
stos
pop
jbe
sbb
out
cmp
mov
out
jmp
xor
ror
dec
pop
popa
fistp
mov
test
push
inc
inc
xor
popa
mov
sub
(bad)
dec
or
and
xchg
test
push
inc
inc
loopne
xchg
pop
test
adc
push
sbb
or
outs
mov
ins
fsubr
cdq
pop
push
cmp
in
mov
add
outs
or
xor
mov
jge
add
jle
mov
jmp
js
sub
test
add
pusha
pop
ret
repz
mov
rcr
dec
add
xor
pop
scas
sub
daa
jne
in
push
test
jne
jecxz
fist
test
stos
mov
ret
mov
aas
aaa
and
imul
rol
movs
pop
sub
inc
inc
cmp
and
cmp
rol
mov
lods
mov
cmp
sbb
sbb
add
push
ds
scas
rol
jl
push
rol
jge
loopne
popf
jbe
ja
rol
fisttp
jbe
or
pop
push
test
inc
std
(bad)
rol
xchg
mov
add
lods
pop
pop
sbb
cmp
inc
or
mov
inc
dec
cld
fwait
xchg
dec
dec
push
push
mov
mov
add
fisub
movs
dec
ret
rol
ins
sub
frstor
jo
mov
inc
jmp
push
int
pusha
jns
mov
sub
sbb
ds
dec
les
push
dec
rol
push
pop
add
add
mov
movs
imul
cwde
add
dec
mov
outs
inc
or
sbb
jmp
jg
stos
cmp
xchg
dec
imul
or
lods
adc
add
sbb
push
adc
rcl
jo
cmp
cld
or
inc
jmp
aad
dec
inc
cmp
jmp
cmps
dec
push
iret
and
ds
(bad)
jmp
loopne
jbe
push
cmp
ins
std
das
add
jne
repz
dec
inc
push
sbb
pop
jg
bound
je
imul
mov
mov
and
inc
dec
or
shl
idiv
(bad)
mov
ret
xchg
and
dec
sbb
loopne
jmp
mov
jl
inc
es
pop
(bad)
loop
xchg
xor
mov
shr
loopne
xchg
adc
or
dec
(bad)
or
mov
mov
ss
pop
add
or
pop
xor
mov
pop
cmps
cli
mov
out
cmp
(bad)
add
or
or
inc
loopne
push
hlt
push
lds
mov
test
push
dec
push
xchg
dec
fiadd
lods
adc
adc
jno
jne
dec
loopne
add
stos
mov
pusha
or
xor
scas
push
dec
cmp
rol
or
sti
rcr
fcom
add
or
fcos
xchg
mov
and
ficom
cli
adc
cmp
repz
jbe
or
mov
push
fcom
es
(bad)
or
call
sti
fistp
pop
adc
mov
and
xchg
or
dec
loope
test
dec
loopne
push
mov
ds
mov
fiadd
out
xchg
retf
repz
push
mov
adc
(bad)
rcr
mov
inc
push
sbb
and
cmps
mov
stos
mov
adc
pop
xchg
xchg
dec
sbb
pop
cmp
and
jmp
xor
mov
pop
mov
jne
sub
or
add
xor
scas
and
sar
xor
dec
(bad)
sub
pushf
and
and
and
shl
jg
cmp
adc
sbb
jp
nop
(bad)
sbb
ror
popa
jae
sub
cdq
in
sahf
sbb
push
or
push
nop
adc
dec
mov
lock
pop
gs
jl
test
cmp
cmp
jp
fist
sbb
pop
push
and
int3
or
adc
xchg
inc
je
jb
sbb
aas
ret
add
pop
mov
xchg
imul
push
int3
push
test
addr16
sbb
mov
ret
mov
cdq
cmp
and
pop
(bad)
in
dec
sub
push
inc
das
or
shl
push
cmps
dec
ds
cdq
pop
call
sbb
aam
dec
push
pop
rol
xor
cmp
inc
in
ret
push
and
test
mov
cmp
and
in
mov
mov
adc
cmp
(bad)
scas
movs
adc
adc
adc
xchg
sahf
mov
dec
dec
push
mov
sbb
loopne
push
(bad)
or
sti
ds
outs
cmp
call
dec
adc
daa
fsubr
mov
sti
or
cmp
dec
xor
in
adc
dec
add
dec
adc
cmp
jp
rcr
iret
pminsw
retf
pop
repz
push
pop
ins
jge
test
out
mov
into
adc
ret
jg
jbe
ds
adc
popa
mov
mov
mov
outs
and
push
stos
ja
mov
xor
(bad)
movs
pushf
xchg
lods
pop
xor
xor
mov
inc
pop
sbb
jge
ror
shufps
lock
push
(bad)
jg
sahf
sub
(bad)
adc
or
movs
mov
in
jno
push
mov
cmps
or
push
sbb
cmp
sub
ds
jl
les
and
ins
clc
sub
enter
and
xlat
les
xchg
or
add
pop
(bad)
sub
or
js
xchg
sbb
pop
cmp
int
fdiv
push
sub
sub
int3
cmp
int
int3
jmp
push
inc
cmp
and
sahf
data16
mov
dec
pop
mov
add
sub
ficomp
push
xchg
push
mov
aam
jecxz
dec
ins
pop
fwait
mov
fsubr
add
cmp
xchg
add
dec
add
cmp
das
stos
cmp
jmp
cmp
aaa
inc
pop
push
enter
sbb
pop
add
adc
and
outs
cmp
inc
mov
or
xor
add
pop
xchg
push
mov
push
dec
shl
jle
push
push
adc
cmp
add
loopne
sub
add
dec
dec
mov
push
inc
test
outs
mov
xchg
push
add
je
pop
call
adc
sub
mov
pusha
sbb
lahf
mov
mov
lea
pop
scas
or
rcl
int3
add
cwde
cmp
popa
out
and
xchg
cld
inc
adc
test
repnz
sbb
mov
mov
div
push
add
jmp
push
test
sub
ins
mov
push
je
ins
adc
mov
jmp
shr
icebp
and
push
cmps
xchg
gs
test
outs
xchg
pop
ja
push
xchg
mov
mov
movs
push
push
mov
shl
jmp
gs
and
pusha
dec
ins
inc
leave
mov
push
xor
and
inc
movs
add
xor
sti
mov
and
int3
mov
addr16
es
add
cmp
push
int3
add
push
sub
cmp
dec
dec
xor
daa
in
and
adc
or
push
adc
(bad)
rol
sub
jmp
arpl
ficomp
pop
lods
pop
mov
jae
je
inc
pop
sar
push
mov
arpl
mov
bound
xor
aas
scas
sub
popa
push
retf
cmp
mov
adc
push
inc
cmp
jmp
mov
test
jmp
pusha
add
and
inc
add
and
and
lock
mov
cli
adc
js
cmp
jne
lods
sbb
add
and
lahf
and
repnz
mov
ins
sbb
movs
xor
cwde
or
cmps
inc
adc
pop
mov
mov
stc
(bad)
daa
mov
les
(bad)
or
xchg
push
les
push
dec
loopne
push
gs
loope
mov
enter
nop
fst
dec
push
pop
loope
cmp
sub
(bad)
call
cmp
sbb
icebp
mov
dec
push
and
sub
mov
cmp
cmp
(bad)
jmp
push
add
cmp
cmp
adc
scas
add
movs
add
call
and
xchg
jno
inc
les
je
cmp
push
push
ret
fst
pop
repnz
inc
jne
hlt
or
nop
xchg
retf
cmp
or
sbb
rcl
dec
ficomp
mov
sbb
pop
fisttp
mov
cmp
cmp
cmps
in
or
push
sar
aas
pop
fcomp
add
test
out
cdq
das
inc
dec
les
into
mov
into
in
pop
cmps
cmp
sub
sar
push
or
add
sub
cmp
add
mov
pop
mov
or
call
mov
les
jle
and
inc
dec
and
cmp
fistp
sbb
retf
in
adc
mov
stos
pop
sbb
adc
jl
fimul
es
adc
(bad)
sar
and
xor
xor
mov
push
push
fcmovbe
and
or
inc
push
or
inc
mov
mov
inc
or
(bad)
mul
aaa
mov
pop
xor
sbb
push
push
aam
dec
mov
iret
jmp
add
pop
xchg
retf
push
arpl
data16
pusha
sbb
xor
(bad)
push
push
and
pop
cld
out
sbb
test
arpl
xor
cmp
cmp
push
rcpps
or
cmp
lea
ffree
sbb
mov
sub
jmp
ret
adc
mov
out
retf
rcl
sub
inc
ret
mov
fiadd
ja
jbe
and
(bad)
ror
or
je
cmp
je
xor
aam
mov
je
dec
jne
lahf
mov
push
mov
push
push
jmp
and
sbb
pop
mov
arpl
or
test
push
mov
mov
pop
inc
shl
jmp
mov
and
add
mov
outs
jne
addr16
sbb
add
shl
push
fimul
cmp
push
pop
nop
cmp
mov
das
lds
daa
fwait
cmc
adc
jmp
rol
pop
inc
fwait
inc
add
adc
test
leave
ret
mov
or
scas
xchg
mov
sbb
inc
push
imul
lea
xchg
and
cmps
(bad)
fst
sub
inc
sub
jge
sbb
add
add
sbb
dec
shl
jno
add
pop
inc
and
mov
push
jecxz
xchg
sbb
add
and
ret
pop
int3
cmps
xor
or
lock
mov
das
push
jns
daa
or
dec
in
(bad)
aam
xchg
clc
add
mov
rcr
enter
dec
pop
shl
jae
xlat
adc
mov
shr
mov
imul
call
or
jae
add
lods
int3
mov
nop
div
ret
test
sti
push
(bad)
adc
pop
and
fcmove
push
sub
bound
sbb
pushw
pop
push
dec
shr
jb
or
retf
xor
pop
xchg
out
fisttp
lock
push
bound
mov
jns
or
popf
cs
dec
push
sbb
mov
sub
imul
mov
push
ins
into
jmp
loop
add
repz
mov
std
mov
popf
sbb
add
ror
loopne
mov
and
add
xlat
or
scas
sar
rol
mov
jge
add
sbb
jecxz
or
mov
sti
inc
sub
es
in
fdivr
and
fdivr
ins
add
iret
sbb
inc
adc
cs
call
les
frstor
push
aas
je
int3
sub
ins
sar
adc
xchg
loopne
daa
xor
push
mov
mov
sti
or
pop
xchg
mov
movs
cmp
mov
pop
test
pushf
dec
cmps
(bad)
mov
loopne
test
lods
push
call
mov
fbld
fcmove
mov
or
and
ficom
and
pop
enter
out
les
or
movlps
xchg
ret
add
cs
mov
pop
or
mov
add
rcl
sbb
sbb
dec
xchg
dec
xor
cmp
mov
push
mov
or
in
adc
mov
push
jae
cdq
sbb
push
rcr
fdiv
inc
sub
inc
pop
(bad)
movs
dec
mov
or
enter
stos
adc
loope
xor
xor
retf
push
dec
push
ins
loopne
popa
push
out
and
push
mov
(bad)
jbe
push
dec
inc
aaa
nop
add
nop
add
mov
or
cdq
pop
mov
mov
cmp
daa
loop
fwait
pop
push
bound
repz
cmp
in
mov
fld
jne
jmp
in
mov
add
push
jecxz
dec
and
cmp
inc
mov
call
mov
lods
push
fld
cmc
popf
mov
(bad)
mov
add
jg
rcr
or
xor
cmp
xchg
mov
sbb
fldenv
fiadd
fs
jb
repz
xchg
add
inc
push
adc
pusha
inc
dec
lock
loope
pop
dec
cmp
sub
int3
sbb
cdq
add
push
std
push
imul
int3
ret
js
das
lods
(bad)
bound
inc
jl
or
cmp
fcomp
sub
cmp
jle
out
mov
fsubrp
xchg
sbb
adc
psadbw
jg
and
inc
jmp
and
add
in
dec
gs
(bad)
lds
ret
gs
xchg
and
sub
add
add
ret
out
sti
mov
mov
or
iret
inc
push
shl
bound
cmp
push
jns
cwde
popa
sbb
addr16
or
push
mov
int
call
ja
leave
lds
dec
cmp
add
jne
mov
aam
test
jl
xor
inc
xor
jmp
xchg
sbb
adc
(bad)
add
and
scas
pop
ret
mov
inc
shl
cdq
or
cmp
loope
bound
leave
ret
adc
loop
adc
sbb
je
ret
fistp
xor
sbb
jg
sbb
ror
cmp
retf
push
mov
xchg
or
rol
or
mov
or
cmp
push
or
pop
daa
lods
pop
shl
lock
mov
adc
imul
iret
rol
add
dec
ror
retf
fiadd
(bad)
pop
add
dec
loope
jecxz
dec
mov
inc
and
sub
fld
sbb
sbb
shl
add
sbb
mov
out
(bad)
push
or
mov
mov
daa
mov
je
sub
xor
mov
adc
xchg
add
inc
js
out
xor
popf
mov
shl
sub
cmp
push
mov
and
ret
or
in
aas
jl
xchg
push
push
and
mov
fwait
pushw
lods
inc
inc
cmp
xlat
mov
dec
cmp
dec
cmp
test
adc
aas
mov
xor
hlt
push
mov
sbb
aaa
adc
imul
fld
adc
pop
sub
inc
adc
sbb
(bad)
aam
push
(bad)
movs
sbb
loope
sahf
imul
arpl
rol
ss
inc
or
xchg
ret
adc
sub
mov
pop
xor
mov
or
cmps
ja
dec
dec
(bad)
sub
push
imul
adc
inc
cwde
mov
or
iret
cwde
dec
mov
cmc
xor
ror
inc
sbb
nop
imul
inc
add
clc
and
mov
sbb
lea
push
or
mul
xchg
popa
push
ja
jbe
mov
jmp
xchg
push
mov
sub
mov
loopne
fiadd
add
sub
xchg
loop
cmp
adc
sahf
loopne
lea
push
hlt
inc
mov
xchg
mov
and
adc
push
pop
and
add
cmp
jne
outs
jle
outs
cmp
mov
or
jge
loop
or
lahf
lods
dec
cmp
adc
sbb
test
cmps
add
sub
dec
repz
xchg
lods
pushf
fild
seta
fcos
inc
ror
xchg
nop
fstp
inc
inc
mov
in
dec
in
ret
cmps
push
or
mov
inc
push
push
add
test
je
dec
std
lds
imul
mov
ja
clc
xchg
inc
cmp
sub
pop
cmp
jmp
mul
mov
sbb
or
mov
jo
push
pop
in
ss
xor
add
ret
xchg
scas
stc
inc
fist
ins
cmps
loop
push
or
xchg
mov
iret
adc
push
xchg
fsub
loop
jg
mov
or
mov
sub
mov
pushf
les
xchg
push
mov
neg
mov
jge
lahf
hlt
push
ja
rol
movs
lahf
neg
push
inc
jno
push
out
std
mov
xor
add
or
aas
ret
inc
les
jg
call
sbb
mov
xor
or
les
inc
or
and
add
lods
(bad)
push
push
add
pop
dec
push
scas
fcomp
fnsave
adc
inc
jle
lods
ret
or
xor
mov
cli
jl
and
add
inc
inc
dec
jae
cmp
sbb
clc
shl
adc
ins
fldz
int
xor
inc
stos
push
ins
add
mov
sub
jb
pop
imul
and
je
in
ins
fidiv
js
pop
push
pusha
push
push
xchg
dec
push
inc
sbb
jle
adc
(bad)
or
pop
and
pop
xor
popa
cmp
push
sub
mov
retf
ja
popa
sub
xchg
jo
sahf
push
inc
je
dec
js
cmp
add
push
mov
adc
dec
ds
call
adc
adc
inc
sar
add
adc
or
pushf
xor
adc
loope
cmp
xor
sub
fmul
sbb
or
jne
setne
mov
pop
outs
inc
or
add
push
aad
fbld
mov
mov
pop
inc
das
add
cwde
sub
adc
dec
add
cmp
inc
mov
pop
sbb
mov
dec
add
pop
push
test
xor
jne
sub
out
xchg
sbb
and
enter
shl
jnp
and
ins
in
sub
leave
call
xor
push
inc
mov
repz
cdq
mov
les
pop
cmp
hlt
cmp
outs
xchg
test
add
(bad)
out
ins
test
mov
jne
pop
mov
add
sbb
jb
dec
retf
test
je
ss
mov
je
jae
or
sub
inc
push
dec
pop
or
sbb
mov
inc
cwde
aad
adc
shr
lea
fiadd
adc
inc
dec
jg
or
pop
or
mov
not
and
push
add
inc
ffreep
or
mov
jp
and
(bad)
adc
aam
push
es
mov
dec
loope
rcr
mov
or
adc
xchg
movs
cmp
pop
out
or
and
aas
push
mov
lds
aas
jecxz
ret
cmp
rol
ds
add
repz
movs
and
xchg
nop
int3
lods
sub
push
and
inc
mov
call
iret
call
or
shl
in
sub
pop
mov
add
ja
push
xor
adc
sbb
int3
sub
mov
pusha
lock
mov
adc
sub
jno
jg
pop
dec
pusha
inc
loopne
mov
fistp
xabort
pop
inc
sbb
jge
inc
sub
lahf
adc
or
aas
call
or
lahf
dec
pop
dec
cld
mov
mov
cld
push
enter
cmps
xor
cwde
or
cmc
ror
dec
sub
into
cmps
test
push
jp
pop
add
rcl
gs
xchg
mov
jo
mov
sub
sub
cmps
jo
sbb
(bad)
retf
cmp
repnz
dec
cmp
mov
or
(bad)
mov
dec
xor
mov
mov
xor
es
sub
add
je
pop
dec
jne
xchg
mov
cdq
stc
adc
jmp
not
(bad)
popf
or
sti
pop
push
sti
push
ret
mov
jno
push
dec
add
lock
sub
jo
(bad)
adc
and
xchg
dec
lods
or
pop
or
push
adc
push
int
mov
movs
add
push
mov
loopne
xchg
imul
shl
int3
mov
push
or
les
add
aad
sahf
mov
mov
mov
cmp
pop
xor
cmp
call
xor
clc
push
dec
leave
add
xchg
sbb
or
dec
xor
leave
or
ret
stos
movs
leave
hlt
or
push
test
mov
or
sbb
pop
leave
jmp
jb
xor
and
sbb
jne
leave
xchg
pop
adc
sbb
and
leave
adc
pop
enter
sti
ins
or
movs
sti
aas
ret
scas
pop
pop
out
ins
and
sbb
mov
mov
jo
and
addr16
push
ret
dec
repz
add
or
and
shl
mov
ret
dec
aaa
cs
sub
xor
cmc
or
fs
movups
aad
mov
inc
sbb
push
nop
or
ss
bound
test
sub
(bad)
dec
ret
(bad)
sbb
in
(bad)
or
jp
push
in
sbb
sbb
lea
mov
loopne
add
jmp
adc
or
xor
leave
adc
sbb
adc
lds
sti
daa
push
pop
adc
out
sub
pop
and
pop
xor
mov
jb
jmp
add
shl
pop
inc
xor
sbb
enter
in
enter
(bad)
mov
(bad)
cmc
sub
pop
mov
xchg
cmp
ss
lods
pop
ds
test
out
es
or
sbb
fs
sbb
scas
push
cmp
test
out
cmc
pop
enter
inc
and
push
push
mov
les
cmp
cmp
add
mov
test
and
test
add
inc
or
mov
add
inc
pop
mov
or
(bad)
mov
add
mov
hlt
and
jmp
mov
shl
outs
push
and
inc
aas
nop
pop
jb
imul
xor
or
cmp
leave
scas
push
push
push
mov
das
retf
popa
cmp
adc
jl
adc
les
add
xchg
pop
in
test
add
and
push
cmp
mov
adc
fistp
je
sub
fdivr
or
punpcklwd
pop
add
movs
and
add
cmp
daa
frstor
inc
mov
movs
cmp
push
mov
add
xchg
adc
adc
in
dec
adc
mov
int3
cmp
mov
and
movs
or
int3
gs
mov
mov
leave
pop
adc
xor
enter
xor
push
push
xchg
or
dec
adc
or
jne
mov
sar
pusha
repnz
in
les
or
jo
(bad)
and
nop
cmp
or
mov
ins
and
push
sub
test
sub
cmove
inc
mov
loop
pusha
and
push
push
je
leave
inc
push
xchg
sub
cwde
cli
and
fcmovu
test
mov
outs
inc
cwde
je
mov
cmp
ins
loopne
adc
add
push
pop
xchg
in
add
or
or
pop
int3
pop
ret
dec
adc
adc
sbb
xchg
test
je
push
sahf
mov
movs
xor
stc
sbb
cmp
push
inc
or
out
add
mov
and
cmp
stos
shr
(bad)
jg
mov
mov
lea
iret
outs
int
idiv
rcr
inc
mov
popa
mov
lock
mov
cmc
inc
imul
push
call
push
enter
xchg
fnstenv
cmps
push
xor
xchg
sbb
sbb
mov
(bad)
cdq
fisub
stc
inc
loopne
and
jnp
sahf
cmp
sahf
jmp
pop
or
dec
push
or
lahf
pop
jne
sysret
jmp
jo
sbb
mov
cmp
sbb
cli
test
jo
aam
mov
sub
mov
fldenv
frstor
in
xor
inc
enter
cmp
mov
xor
arpl
shl
push
test
adc
sbb
iret
repz
mov
into
adc
fldcw
push
retf
or
mov
retf
push
cs
inc
mov
rcr
add
inc
mov
dec
int3
(bad)
jge
xor
and
add
or
pop
add
jle
clc
adc
add
adc
pop
(bad)
cmp
dec
fs
lds
add
loope
imul
(bad)
stc
test
aad
sub
fistp
jg
mov
or
push
mov
jle
cmp
daa
inc
add
jle
jo
ret
sbb
adc
int3
stos
sbb
dec
push
int3
daa
sti
add
nop
sbb
jae
pop
push
nop
push
or
or
test
dec
add
add
add
pusha
cmp
jl
repz
ds
xchg
inc
mov
pop
in
and
popf
or
shr
and
sub
add
xor
dec
sub
popa
xor
aaa
add
cmp
sub
cmps
cdq
test
mov
and
add
adc
mov
add
movs
in
in
add
cmp
xlat
sbb
and
sub
sub
fwait
(bad)
push
add
test
cmp
je
mov
inc
and
mov
enter
inc
inc
jmp
repnz
cmp
and
push
dec
add
and
jmp
jae
sbb
cmp
sub
sub
pop
pop
sbb
out
cmp
je
sbb
cmp
out
or
mov
leave
(bad)
pushf
test
dec
push
sbb
dec
js
xor
push
push
into
(bad)
out
push
push
dec
jne
adc
pop
mov
add
fdivr
movs
push
adc
push
sub
add
pop
ins
jge
push
push
or
mov
in
pop
in
shl
int3
push
pop
test
sbb
or
and
out
test
and
adc
jne
push
push
and
push
loop
inc
pop
mov
inc
ret
inc
(bad)
pop
push
xor
fs
or
mov
into
add
stos
cmp
test
sbb
(bad)
ret
repnz
loopne
arpl
jle
push
xchg
sub
xchg
inc
jns
jecxz
stc
mov
(bad)
gs
fidiv
cmp
fs
jp
mov
or
xor
(bad)
or
clc
mov
cld
sar
or
or
fxch
cwde
and
test
jg
mov
cmp
mov
ins
in
data16
sbb
repz
push
or
shr
es
stos
mov
cmp
sbb
push
cdq
vmovmskps
imul
and
jo
fsubr
mov
addr16
dec
sub
push
cmp
jg
cmp
shl
cmc
lea
dec
dec
jno
sub
mov
call
aas
jle
jo
add
ret
pusha
mov
sbb
gs
stos
lahf
lahf
rol
and
mov
jp
test
retf
cmp
xchg
inc
sar
push
or
std
nop
pop
js
sbb
jge
xlat
or
in
sub
xchg
inc
sti
xor
popf
mov
or
mov
jae
and
dec
dec
push
push
or
pop
cmp
and
pop
sbb
in
xchg
es
jmp
inc
cmp
lea
outs
dec
add
adc
out
push
xor
mov
int3
jb
mov
stos
xchg
inc
add
adc
inc
mov
mov
(bad)
ds
fs
inc
xor
and
or
daa
and
lods
sbb
icebp
mov
dec
data16
push
inc
call
and
jb
sub
push
ins
cwde
jg
or
ins
push
inc
sub
push
movs
cmp
and
and
call
sbb
xchg
dec
cmp
push
xor
pop
or
cld
dec
sub
sub
in
xchg
sub
repnz
ja
sbb
and
mov
mov
stc
add
pop
cmp
lock
sbb
loopne
mov
inc
add
adc
cdq
add
mov
sub
sti
push
aad
imul
mov
sbb
out
out
dec
es
push
nop
lods
push
jae
mov
jmp
cwde
add
mov
push
str
setl
loop
jg
mov
pop
dec
lods
ins
mov
xor
cmps
test
(bad)
cmps
mov
ror
mov
mov
inc
cmp
mov
ja
in
adc
cmp
pusha
and
inc
enter
ss
arpl
or
adc
fistp
or
xor
dec
loop
repnz
dec
inc
xor
(bad)
ins
arpl
mov
or
aaa
pop
and
cmp
lods
push
out
gs
popa
popa
inc
clc
in
jae
sub
fs
pop
sub
movs
adc
pop
xor
or
fs
xchg
jne
repz
mov
icebp
outs
lods
in
rcl
add
mov
or
loopne
fs
xchg
dec
sar
xor
push
int
and
cmp
jne
pop
xor
shr
das
sbb
jne
loopne
xor
adc
cmps
loope
pop
loopne
pushf
sbb
or
out
hlt
fimul
shl
gs
add
dec
cmp
jl
sbb
fisubr
sub
repnz
rol
or
ss
dec
bound
add
in
and
push
ret
dec
adc
add
push
in
inc
xchg
je
add
inc
inc
push
pop
adc
rol
lahf
stos
dec
ins
inc
dec
add
cmc
mov
sub
mov
xchg
out
scas
xchg
adc
jl
or
jl
jbe
xor
pop
push
pop
das
js
inc
pusha
aas
cmps
xor
inc
sbb
jb
sub
sbb
mov
add
sub
push
pusha
ds
aad
ror
adc
or
and
jle
add
retf
test
inc
inc
jo
int
sbb
adc
jns
pop
pop
cmp
mov
je
in
lea
pop
sub
jmp
into
out
mov
add
xchg
test
push
add
jl
sbb
sub
in
add
mul
mov
adc
sbb
inc
loop
fisttp
xchg
pop
test
add
lods
push
mov
sbb
or
movs
loopne
sub
xchg
sbb
jle
xchg
dec
cmp
mov
pop
add
fs
je
adc
push
loope
dec
and
outs
add
ret
cmps
ins
cmp
adc
ja
inc
pop
cmp
sbb
retf
push
fiadd
sbb
add
adc
sbb
push
xor
xchg
mov
or
ret
add
leave
pop
sbb
xor
rcr
inc
xor
add
fcomi
or
call
lahf
adc
sub
dec
lea
nop
cs
xchg
add
aaa
dec
or
add
pop
jl
(bad)
and
mov
jmp
movs
nop
jg
movs
ins
test
ret
mov
jcxz
gs
pop
xor
rcl
xchg
jo
and
call
mov
imul
cmp
and
inc
push
cmp
mov
and
fidivr
jp
lea
es
jecxz
dec
imul
add
inc
adc
aam
and
xlat
in
test
jne
jmp
dec
dec
push
rcl
ds
mov
adc
ret
fldenv
sbb
(bad)
cmp
test
mov
mov
cmp
sbb
inc
nop
pop
hlt
adc
ficomp
sub
lea
test
xchg
out
mov
push
aaa
repz
inc
push
paddusw
movs
cmp
ret
add
dec
(bad)
fs
aam
cmp
inc
mov
mov
cmp
xor
xor
aam
sbb
into
inc
mov
dec
aaa
push
aad
add
push
enter
mov
pop
push
pop
stos
mov
and
sub
inc
fsubr
test
sub
add
push
int
adc
ins
scas
add
mov
jmp
pusha
stos
les
inc
mov
add
dec
or
sub
pusha
jg
ror
addr16
add
xor
adc
sbb
jle
ret
(bad)
clc
sbb
add
sbb
pushf
or
ja
cmp
mov
push
and
or
or
jge
iret
mov
arpl
jmp
dec
cmp
jl
data16
or
fisub
push
ret
sti
adc
ins
mov
lahf
and
(bad)
sahf
adc
(bad)
mov
mov
inc
xchg
sbb
movs
add
pop
aam
pusha
inc
or
pop
dec
and
add
cmp
and
aas
std
jno
retf
add
movs
push
add
xchg
rol
je
xor
iret
xor
dec
xor
fmul
mov
rcl
add
sub
push
hlt
and
sub
ffree
xor
pop
push
sbb
dec
cmp
jbe
inc
shr
mov
popa
aaa
test
cmp
call
sub
outs
push
push
shl
movs
nop
push
add
inc
mov
ffree
ds
push
jle
stos
mov
push
pop
fcom
dec
popf
lods
shr
ins
out
push
add
inc
push
es
in
add
inc
ds
pop
lock
adc
add
and
int
fadd
loop
fisub
mov
xor
xlat
pushf
xchg
je
adc
aad
pop
cmps
jo
fs
and
pusha
or
jae
rcr
mov
pop
xchg
in
xchg
dec
cmp
rcr
inc
fiadd
inc
cmp
ret
rcl
daa
add
sar
nop
add
sub
out
pop
push
jno
push
push
aas
sbb
jns
retf
mov
xchg
mov
add
(bad)
cs
add
(bad)
pushf
test
mov
adc
adc
movs
add
sbb
adc
adc
add
sub
cmp
loopne
in
les
arpl
add
sub
retf
out
fisub
mov
dec
jnp
push
dec
xor
and
ret
aad
add
dec
or
sub
sbb
adc
cmps
dec
mov
or
or
add
sub
or
add
ret
cmp
mov
jmp
mov
cmps
cmp
pop
fwait
fwait
pusha
or
adc
add
jmp
or
iret
or
call
adc
nop
add
xor
dec
push
mov
adc
icebp
(bad)
ret
cmp
nop
rcr
iret
pop
icebp
cld
je
or
lock
cmp
push
rol
mov
cmp
and
jo
xchg
push
pushf
fmul
adc
mov
retf
adc
inc
gs
sub
lock
sub
cmp
pop
mov
pop
jb
jmp
pop
das
fucomip
push
retf
add
cli
sbb
mov
push
xor
pop
jae
add
xchg
inc
rcl
loopne
shl
mov
ret
add
inc
call
xor
cmp
dec
pop
inc
pop
add
push
out
add
in
add
xchg
or
lock
xor
in
push
fsub
and
fbld
and
adc
add
cld
adc
jbe
adc
or
jo
test
push
dec
push
sub
sub
jecxz
add
cwde
dec
sahf
mov
mov
pop
es
inc
pop
xor
sbb
inc
movs
push
cmp
adc
ins
jle
push
and
dec
jg
(bad)
adc
lock
xchg
mov
add
retf
mov
dec
or
xchg
movmskps
push
inc
scas
bound
ja
push
stc
adc
ins
push
jbe
lods
jg
or
dec
add
jnp
and
sar
or
movs
mov
sahf
jg
dec
cwde
add
push
sbb
xchg
cmps
mov
js
loop
push
ror
cmps
xchg
and
jo
test
cmc
inc
cmp
jo
sbb
in
xor
jmp
adc
add
inc
popf
jmp
push
or
rol
lods
sti
push
fdiv
div
je
div
add
jne
neg
arpl
jmp
pop
jp
and
fstp
mov
imul
pop
icebp
out
fisub
mov
xchg
push
mov
ja
loop
ss
adc
or
xor
and
push
and
jb
sti
cmp
sub
sub
inc
xor
aaa
je
pop
mov
jmp
dec
mov
add
pop
xchg
mov
xor
cmp
cmp
mov
jne
dec
add
push
jecxz
add
adc
(bad)
out
push
(bad)
jmp
fld
fabs
fcomp
push
and
fist
inc
and
jl
or
dec
mov
push
ds
push
or
xchg
push
xchg
(bad)
and
mov
and
out
adc
mov
adc
ja
je
js
cs
pop
or
sbb
pushf
sub
sub
inc
lock
xor
push
and
dec
aaa
(bad)
or
adc
inc
je
addr16
jne
add
nop
add
mov
retf
dec
in
inc
inc
and
inc
jmp
or
sbb
mov
push
fidivr
sbb
aam
pusha
pushf
push
inc
lds
pop
imul
fild
addr16
sub
xchg
dec
xlat
cmp
rcr
mov
clc
cmp
push
inc
sub
in
inc
shl
or
movs
fld
push
(bad)
leave
dec
sub
mov
add
js
push
push
add
enter
push
push
or
fs
pushf
imul
nop
and
mov
test
les
lock
push
gs
icebp
mov
aas
xchg
jmp
mov
mov
pop
lea
loope
sub
mov
add
sub
mov
push
or
adc
stos
pop
in
and
pop
or
push
ret
adc
push
test
lock
push
or
enter
xor
add
cmp
mov
push
rcl
push
adc
adc
(bad)
pusha
or
call
mov
fisttp
lea
(bad)
sbb
sbb
call
dec
push
loop
aaa
push
in
or
dec
jnp
fcom
add
lods
mov
mov
test
or
and
mov
cmc
les
sub
and
fisttp
mov
enter
fs
jnp
call
in
clc
test
add
out
jnp
sub
pop
call
or
push
jns
add
dec
cmc
and
sbb
rcl
sbb
inc
sahf
rcl
mov
cpuid
inc
clc
clc
adc
ins
mov
aas
and
pop
repnz
clc
and
mov
adc
sar
fst
test
jg
retf
adc
xchg
int3
ret
js
jbe
jle
cmp
jno
xor
lock
jl
xchg
js
in
popf
cwde
dec
cs
or
shl
imul
pop
xchg
rcr
mov
dec
inc
pop
dec
or
pop
fs
int3
jo
sbb
dec
out
add
adc
adc
xor
mov
fidiv
add
cmp
aas
lock
xchg
lds
or
mov
jg
lock
xchg
or
lds
dec
cmps
inc
add
dec
sbb
dec
test
mov
push
test
test
push
and
popa
daa
test
sahf
stos
adc
dec
xchg
je
(bad)
les
loope
mov
sub
push
inc
sbb
mov
mov
sbb
xor
cmp
xchg
dec
mov
add
dec
or
stos
mov
adc
inc
sbb
rcr
push
and
and
adc
mov
dec
pop
shr
jle
pop
fst
push
dec
leave
cmp
adc
movs
sbb
push
xchg
test
lea
jns
dec
lds
push
test
sbb
inc
adc
add
aaa
mov
xchg
mov
mov
inc
js
(bad)
js
inc
or
mov
pop
and
push
std
pop
push
mov
dec
mov
in
mov
enter
xor
mov
jo
adc
pushf
inc
mov
pusha
lds
pop
add
mov
push
add
xor
mov
or
xor
or
sub
test
add
cmps
jne
mov
cwde
mov
mov
fldenv
ja
inc
cmp
sub
ror
lods
mov
lods
jb
mov
(bad)
cdq
pop
cs
mov
adc
mov
or
and
lahf
push
push
inc
movs
adc
aaa
sub
jmp
or
test
dec
cld
push
push
cld
push
mov
or
int3
inc
mov
mov
mov
or
push
pmuludq
call
mov
inc
sub
xor
inc
pop
pop
xor
and
sub
add
push
dec
add
aas
and
pop
push
cdq
and
or
or
or
pop
cdq
repz
lea
and
sub
push
mov
adc
cli
mov
test
jns
mov
fld1
jmp
and
nop
and
push
xor
xchg
ret
stos
fs
mov
sub
add
pusha
xor
xor
fld
iret
mov
test
push
fwait
xchg
mov
lods
test
inc
push
sti
fsubr
adc
nop
les
cmp
imul
add
sub
outs
es
out
das
or
jmp
repz
xor
mov
lods
inc
or
push
add
mov
mov
jno
xor
out
adc
and
cmps
add
push
sbb
push
and
ins
in
ss
sub
add
ret
or
push
cmps
xchg
inc
add
mov
rol
or
inc
pop
xchg
sar
adc
jnp
je
xor
lock
sti
test
mov
mov
popf
cmp
push
mov
shr
add
arpl
inc
add
pop
xchg
adc
popf
cmps
mov
retf
test
lods
mov
call
inc
cmp
inc
arpl
jo
add
in
enter
push
add
cdq
les
dec
(bad)
jmp
mov
pusha
nop
mov
xchg
repnz
push
xchg
add
hlt
push
cmps
xor
sbb
jmp
inc
ret
inc
aaa
jne
(bad)
xor
mov
push
into
sbb
xchg
xchg
das
xor
add
add
je
aas
daa
xor
sbb
adc
daa
push
out
or
fiadd
adc
and
call
in
or
dec
das
xchg
push
mov
jo
std
pop
inc
mov
movaps
mov
or
movs
and
cwde
test
loope
add
dec
ror
mov
or
xor
pusha
push
xor
cmp
jnp
mov
cld
aam
xor
aaa
sbb
cmp
mov
es
call
and
lods
out
ror
sbb
push
inc
dec
jmp
cdq
neg
dec
xor
push
hlt
add
cld
data16
jbe
lahf
pop
fcmovnu
xchg
lea
push
sbb
popf
test
xchg
or
ret
or
and
push
xor
hlt
or
push
and
pop
push
pop
xchg
adc
and
in
jecxz
or
and
clc
mov
es
jge
mov
add
sbb
test
cmps
dec
pusha
lock
adc
fadd
inc
bound
lods
stc
fist
push
ss
or
out
jmp
rcl
iret
add
push
sbb
into
rol
leave
into
popf
add
(bad)
adc
jo
add
sbb
jbe
(bad)
pop
sahf
mov
fst
add
xlat
inc
jmp
ret
push
push
xchg
dec
aaa
push
out
add
int3
sub
xor
push
aam
and
loopne
dec
mov
or
or
and
bound
pop
mov
enter
push
add
in
mov
mov
or
loop
sbb
and
ficomp
test
bound
mov
or
xor
sbb
sbb
sbb
xchg
aam
gs
pop
call
mov
push
(bad)
and
xlat
mov
lods
jno
push
jae
ret
enter
pop
add
leave
ja
jo
xlat
hlt
or
xchg
mov
jns
outs
adc
push
push
jno
jl
mov
daa
sbb
push
ins
addr16
or
fwait
call
pop
push
call
out
push
sub
or
xchg
mov
add
lods
movs
imul
mov
test
sbb
imul
pop
jbe
rcr
xchg
cmps
imul
add
ins
dec
and
aad
xor
pop
scas
add
icebp
dec
add
sbb
(bad)
icebp
mov
dec
enter
pop
and
test
jge
and
xor
sar
(bad)
nop
fmulp
jmp
adc
out
std
dec
jnp
add
jno
std
and
(bad)
xchg
add
adc
mov
fild
loope
adc
push
inc
and
mov
xor
cmp
adc
pop
fadd
push
adc
dec
adc
mov
ja
aas
mov
leave
push
pop
dec
std
sub
cmps
cmp
dec
adc
adc
cli
je
cmps
fnstsw
xor
adc
lock
pop
or
fwait
out
push
popf
not
add
loope
inc
push
push
sub
aam
rcl
push
inc
rcl
inc
pop
xchg
pop
jae
jae
repz
push
adc
es
sbb
in
adc
jmp
in
sbb
xor
jmp
(bad)
xchg
xchg
inc
or
ret
jbe
lea
mov
cmp
adc
xchg
adc
sti
femms
xor
test
xchg
out
mov
test
(bad)
mov
and
daa
jmp
les
cdq
jp
push
pop
push
jb
scas
push
push
pop
mov
inc
pop
retf
fisttp
adc
or
imul
imul
jb
xchg
sbb
aam
or
dec
rcl
jg
push
dec
ds
mov
dec
and
xchg
push
and
or
pandn
retf
sub
xchg
pop
dec
sub
adc
aam
test
cmp
je
jp
xchg
retf
enter
adc
sbb
mov
fs
add
in
(bad)
imul
movs
xchg
int
or
jno
or
and
xor
xor
test
add
adc
inc
out
and
adc
adc
stos
mov
or
(bad)
jmp
mov
inc
in
cdq
or
(bad)
adc
in
inc
or
in
add
mov
mov
adc
dec
xor
outs
pop
sbb
adc
jne
adc
or
mov
and
inc
xchg
imul
adc
vaddps
fcom
popf
xchg
add
(bad)
leave
mov
mov
outs
outs
sbb
in
or
cmp
rcr
or
xchg
out
je
mov
nop
je
push
push
mov
add
bound
sbb
addr16
adc
jo
or
je
cmp
lea
in
dec
mov
jg
push
mov
dec
sbb
sbb
test
push
addr16
add
dec
cs
pop
sbb
dec
sub
jns
push
std
or
in
inc
shr
nop
sub
outs
mov
or
ja
mov
jp
or
sub
in
mov
push
pop
mov
call
stos
mov
and
daa
xchg
pop
inc
sbb
out
std
mov
cmp
and
jns
pop
cmps
and
or
mov
and
leave
sbb
sub
ror
dec
sub
and
cmp
or
ins
add
in
and
hlt
push
xor
sbb
push
mov
and
mov
xchg
or
je
sbb
dec
or
cmp
std
add
sbb
inc
or
jmp
and
mov
add
or
test
xchg
and
mov
outs
aas
outs
daa
jmp
push
outs
nop
xchg
push
sub
iret
inc
das
jns
aas
push
add
mov
mov
add
fisttp
es
cmp
in
add
sub
and
cs
or
add
test
aad
add
fwait
sbb
in
mov
jp
mov
adc
fdiv
test
add
lds
adc
push
jb
rol
add
add
pop
and
cmp
and
dec
imul
nop
and
and
or
add
or
xor
rol
adc
add
add
nop
or
jo
sbb
daa
mov
retf
arpl
mov
jbe
and
bound
in
xor
aad
jno
inc
add
mov
jecxz
pop
push
add
xchg
gs
mov
retf
pop
push
fstp
or
jne
inc
and
shl
add
push
xor
push
or
in
mov
punpckhbw
inc
popa
stos
inc
or
or
repnz
mov
push
sub
dec
pop
and
mov
sub
dec
xchg
add
call
outs
xchg
pop
je
iret
push
sbb
xor
iret
ins
inc
mov
xchg
leave
adc
sub
nop
dec
xchg
adc
lock
sbb
pop
or
fnstcw
or
or
fnstcw
int
in
pop
adc
in
pop
imul
out
adc
ss
cmp
fwait
int
mov
inc
pop
sbb
out
jle
adc
cli
sbb
sbb
add
fwait
stos
and
and
jbe
and
adc
stos
sbb
xchg
add
push
pop
sbb
sbb
sbb
fwait
mov
sbb
adc
jae
mov
cmp
pop
pop
ins
sahf
mov
fisub
sbb
xchg
sbb
mov
inc
jg
mov
mov
mov
clc
inc
inc
cs
sbb
mov
add
(bad)
rcl
inc
or
aam
push
pop
test
ins
inc
pop
push
daa
dec
adc
push
enter
pusha
push
jb
js
xchg
enter
mov
jb
and
xchg
hlt
cld
enter
cmp
adc
and
xchg
xor
xchg
fs
cmp
nop
arpl
jo
js
nop
inc
push
or
xchg
cwde
pushf
jmp
or
mov
outs
shr
int3
jmp
lahf
sub
aam
pop
loopne
push
hlt
jmp
cmp
mov
inc
adc
cmp
jmp
push
out
scas
pop
xor
sub
and
jmp
push
fwait
sub
or
mov
sbb
adc
enter
rcl
cmp
aas
xchg
dec
jecxz
call
xchg
std
fimul
imul
outs
cmps
adc
pop
and
push
pop
cmp
repz
jno
(bad)
cdq
repz
repz
int
cmp
aad
jmp
out
sahf
pop
adc
and
out
cmp
popa
imul
sahf
out
mov
out
sahf
mov
ins
sahf
out
jecxz
hlt
sti
es
cmp
repz
pop
push
and
sub
cmp
dec
mov
repz
pop
adc
pop
or
pop
inc
shl
bound
mov
push
(bad)
js
xchg
push
xlat
ins
fadd
retf
push
jne
clc
xlat
mov
or
inc
jmp
or
jns
and
je
mov
adc
cmp
cli
add
mov
jae
loop
jg
xor
dec
je
mov
inc
inc
xor
pop
fcomp
pop
je
mov
nop
inc
add
arpl
mov
out
mov
and
sar
cmc
movs
mov
and
leave
inc
fisttp
popa
or
xor
push
pop
mov
js
push
pop
mov
into
mov
mov
fisttp
lods
enter
push
imul
adc
jbe
fbld
stos
xor
push
cmps
dec
add
in
inc
adc
inc
aas
es
xchg
or
and
or
aaa
add
jp
and
pop
mov
sbb
xor
push
inc
int
dec
cmp
mov
push
add
push
aaa
sub
es
or
sahf
and
xor
adc
dec
mov
mov
in
(bad)
fcomp
xlat
mov
pop
and
or
sar
and
xchg
daa
test
mov
mov
jmp
ds
test
mov
xchg
adc
xor
inc
sub
sub
push
add
(bad)
xchg
push
jl
dec
xor
popa
jae
retf
mov
ret
es
outs
xor
mov
xor
inc
cmp
push
into
fsubr
sub
retf
push
inc
mov
ret
pop
or
test
test
xchg
push
icebp
ret
pop
imul
sub
pop
add
sub
push
ret
loopne
clc
push
rcl
adc
mov
inc
es
sti
push
std
clc
sub
seto
mov
mov
sub
mov
inc
sub
add
inc
xor
adc
mov
add
push
push
test
lahf
sub
or
and
mov
xor
(bad)
mov
fidivr
mov
pop
pop
fisttp
jmp
pop
stc
jo
or
add
jmp
sub
adc
push
mov
adc
sub
scas
mov
pop
sub
jecxz
rol
bound
je
fidiv
sub
push
push
sub
and
and
outs
adc
call
xor
sbb
push
into
adc
cs
or
inc
fucom
jecxz
inc
int3
dec
clc
add
mov
sbb
(bad)
add
fs
call
xor
clc
in
dec
adc
mov
inc
cmp
jb
mov
or
and
jge
loope
pop
sbb
xchg
push
push
xor
ret
loop
and
pop
inc
add
adc
add
daa
push
ja
test
dec
adc
ret
inc
popf
jns
iret
inc
or
jne
or
xor
jg
cmp
and
push
push
adc
cmp
stos
or
jb
or
mov
hlt
adc
sbb
add
add
mov
ret
add
or
sub
ret
mov
icebp
js
cmp
xchg
mov
pop
rol
cs
sbb
fiadd
nop
hlt
es
or
sub
mov
retf
xor
leave
mov
pop
dec
movs
adc
(bad)
pop
push
out
lds
or
push
push
sbb
adc
and
ret
pop
cmp
outs
add
dec
adc
inc
mov
mov
ret
add
jge
ret
xchg
add
add
jmp
cmps
sub
addr16
mov
xchg
xchg
jp
mov
sub
pop
sub
cld
punpckhwd
sahf
(bad)
inc
jbe
jbe
push
jmp
ss
call
dec
dec
jle
and
xor
jg
sbb
push
and
jmp
and
mov
inc
push
sbb
jo
test
xor
pushf
push
xor
mov
add
in
or
and
push
push
leave
adc
pushf
push
push
and
data16
xor
inc
and
jns
xchg
add
in
add
and
push
and
inc
and
cmc
push
and
ins
jle
xchg
lock
or
xlat
or
pop
push
repnz
add
in
add
add
cmp
or
enter
and
inc
sahf
jl
xor
add
daa
inc
push
cdq
imul
xor
pop
and
je
mov
lsl
inc
hlt
add
nop
xchg
add
add
jne
or
(bad)
and
sub
test
pop
in
shl
ins
gs
xor
push
loopne
xchg
pop
inc
cmc
jnp
daa
mov
aaa
cld
mov
push
xor
(bad)
xor
push
dec
push
xor
sub
(bad)
out
mov
add
add
sub
push
mov
shl
jp
sbb
mov
cwde
pop
pop
jmp
in
outs
jmp
or
inc
push
cmp
adc
inc
push
cmp
sbb
and
cmp
nop
sub
xor
in
inc
cmp
push
add
dec
mov
aaa
inc
adc
jb
pop
pop
pusha
fs
retf
and
jmp
or
fdiv
dec
jne
imul
xor
clc
or
call
sbb
and
sbb
adc
lock
test
pop
or
or
pushf
sub
mov
sti
push
and
dec
int3
stos
push
aam
fsub
shr
push
nop
or
mov
int
pop
cs
mov
ss
jbe
add
mov
sub
int3
lea
cmp
pop
je
or
xor
push
or
push
gs
inc
adc
iret
cld
mov
xor
jno
add
in
sti
mov
inc
pop
and
xchg
and
mov
or
push
test
jno
dec
inc
je
getsec
sbb
mov
je
cmp
adc
push
cmps
lock
mov
fs
jmp
mov
xlat
jo
adc
or
pop
inc
loopne
jle
je
or
cmp
cmp
push
inc
fadd
es
xor
cmp
xor
movs
or
mov
or
jbe
lock
test
leave
dec
repz
scas
or
jg
xor
jge
and
je
push
fadd
sahf
leave
cdq
test
or
add
data16
and
pop
ret
cmp
rcl
ss
mov
xor
push
xor
(bad)
dec
inc
ret
sbb
retf
mov
cmp
data16
cdq
inc
add
push
lods
inc
loope
push
call
and
loop
sub
cmc
(bad)
push
dec
imul
and
ins
sub
xor
jmp
bound
lds
popa
xchg
imul
bnd
es
pop
aam
adc
xchg
or
jle
test
jl
jns
retf
add
imul
cmps
pop
xchg
sub
sbb
idiv
mov
push
daa
and
pop
mov
cmp
sbb
mov
test
sub
out
lods
sub
push
sbb
jnp
adc
call
mov
sub
sahf
cmp
lds
int3
push
pop
pop
mov
inc
jb
pop
jmp
or
call
mov
add
pusha
xlat
or
arpl
xchg
dec
adc
inc
add
mov
(bad)
xchg
test
sti
fmul
xchg
mov
jle
push
inc
shl
cmp
sub
test
sub
stc
mov
cmp
or
jb
ins
jns
test
or
in
out
inc
push
or
(bad)
sub
push
loope
dec
sbb
int
sub
dec
jne
and
mov
adc
inc
push
or
mov
popf
mov
pop
jno
push
jns
adc
push
adc
test
mov
xchg
jbe
imul
xor
push
mov
mov
ja
add
pop
push
sub
outs
add
sub
outs
test
and
test
push
call
cmp
pop
inc
imul
adc
ror
jne
pop
push
jae
adc
adc
cmp
jmp
or
mov
ror
adc
push
les
jmp
movs
fist
push
inc
lods
cmc
ds
iret
push
lock
push
fs
int
xchg
fwait
push
ds
inc
mov
inc
mov
retf
adc
daa
sub
movs
cmp
ja
or
test
outs
vmovsd
jne
mov
out
cmc
push
xchg
add
cmp
and
and
pusha
pop
mov
dec
adc
ret
xchg
dec
shl
or
mov
cmp
jge
mov
lds
in
adc
add
retf
shl
(bad)
add
jmp
(bad)
int3
jno
sub
aaa
add
xor
add
push
jp
add
cmp
out
push
(bad)
or
and
aam
adc
inc
mov
je
add
addr16
add
add
mov
mov
add
jge
gs
sub
adc
pop
pop
call
or
js
add
ins
or
push
test
ret
sub
ja
jmp
test
and
cli
xchg
hlt
pop
inc
lea
push
rol
enter
adc
cdq
lods
and
int3
xchg
inc
pop
adc
and
pop
xchg
bound
fadd
out
inc
mov
or
pop
cmp
call
push
mov
or
inc
xlat
dec
sbb
add
or
fisttp
pop
push
out
js
dec
in
add
neg
dec
mov
jl
lods
or
jle
call
cmps
js
sub
popf
pop
jg
xchg
retf
hlt
and
imul
(bad)
pop
xlat
repz
les
xor
(bad)
ficom
or
push
and
add
fmul
ret
mov
push
loope
ins
cmc
mov
push
sbb
call
pop
pop
(bad)
cwde
xchg
mov
or
js
es
jmp
cld
les
ret
lock
or
add
adc
inc
push
push
mov
ja
daa
pop
mov
adc
call
lock
(bad)
mov
mov
popa
inc
test
sub
fst
jae
out
mov
fwait
iret
or
sbb
adc
mov
mov
out
pop
pop
dec
inc
sub
js
ds
pop
fdivr
jmp
aas
call
xlat
sub
cmp
std
pop
mov
and
sub
into
rcr
loop
fimul
adc
je
ins
retf
jae
mov
stos
inc
sbb
xchg
cmp
cld
mov
sbb
inc
ins
adc
pop
mov
jmp
pop
cdq
cmps
rcl
jg
inc
pusha
jle
or
repz
ret
in
data16
pop
inc
mov
inc
sbb
(bad)
fimul
lds
jns
clc
cld
sub
or
mov
fisubr
sub
mov
rcr
add
ficom
adc
lock
into
mov
adc
jp
popf
pushf
or
dec
pop
push
xlat
lahf
ins
rol
sbb
fld
xchg
or
adc
outs
xchg
in
xor
pop
pop
scas
fs
add
and
gs
imul
inc
dec
push
mov
das
bound
or
cmps
and
(bad)
cmp
adc
in
or
cmp
adc
pushf
sbb
push
cmp
rcl
inc
add
dec
mov
test
arpl
ret
mov
out
jae
xchg
adc
cmp
fisub
dec
test
jge
sbb
jmp
clc
std
jmp
push
pop
not
sub
sub
aam
add
xchg
inc
mov
sbb
int3
fimul
mov
and
mov
dec
hlt
aad
push
add
or
push
or
dec
test
cwde
mov
stos
push
les
adc
cmc
jge
push
adc
je
repnz
dec
nop
add
fdiv
add
push
push
or
push
mov
repnz
inc
fdivr
add
pop
or
add
into
add
mov
cmp
pop
ffree
sub
int
sbb
push
inc
outs
cmp
or
in
push
aas
push
aad
popa
add
(bad)
mov
loope
in
or
pop
sub
push
sbb
setb
movsx
cmp
sub
jl
sti
fcomi
xor
into
div
inc
xor
setge
bound
pop
jmp
stc
xsave
(bad)
inc
shl
les
dec
cwde
xor
div
jge
or
xor
(bad)
mov
shr
pop
push
push
fnstenv
pop
mov
sub
push
inc
in
fwait
add
adc
xor
xor
dec
adc
mov
dec
cmp
scas
jne
dec
fdiv
orps
scas
sbb
xchg
cmp
xor
mov
mov
dec
(bad)
add
ret
jg
push
push
push
sub
ja
push
dec
hlt
inc
popa
(bad)
dec
jmp
pop
pop
les
pop
pop
mov
test
or
or
cmp
or
pop
(bad)
pop
jne
loopne
jmp
mov
fmul
add
inc
lock
dec
data16
or
ret
shl
cmp
movs
test
adc
jae
adc
jbe
out
int3
xchg
xor
cmps
jmp
mov
movs
jae
or
ja
or
pop
call
xchg
push
adc
inc
dec
shr
add
pop
xchg
es
sbb
add
sub
or
adc
adc
inc
sbb
push
shl
sub
ds
add
jne
xor
xor
adc
cmp
sub
ds
and
inc
cmp
or
cmp
push
lods
ror
add
pop
dec
xchg
ja
lea
movs
add
xchg
js
rol
add
jbe
sub
add
(bad)
neg
pop
test
xchg
adc
shr
daa
dec
adc
mov
cmp
dec
iret
cmps
pop
jb
shr
je
(bad)
(bad)
cmp
or
sbb
ret
add
mov
cmp
or
xchg
mov
cmp
pushf
sbb
sbb
xchg
xor
pop
add
pop
add
xchg
or
repnz
inc
adc
jne
add
enter
add
sub
sbb
repnz
jne
xchg
or
push
pop
push
and
mov
mov
lea
add
sbb
lods
outs
cdq
jge
mov
or
mov
xor
jg
push
mov
inc
in
sbb
out
mov
adc
sub
rol
je
cmp
jo
daa
xchg
cmp
sub
ret
sbb
push
cld
dec
or
cmp
ja
mov
ins
(bad)
sub
xor
cmp
(bad)
mov
sbb
dec
and
jo
ins
push
cmc
mov
pop
pop
pop
ss
nop
hlt
inc
inc
ds
add
ret
mov
mov
jmp
in
inc
mov
ds
add
mov
popa
cmp
pop
mov
je
test
nop
pushf
push
movs
mov
mov
add
add
mov
shl
mov
loope
fcomp
jne
inc
dec
pop
inc
jg
mov
dec
shl
adc
xor
and
jnp
mov
dec
inc
cmp
adc
jmp
xor
inc
xor
dec
call
pusha
add
dec
dec
mov
mov
(bad)
iret
mov
dec
sbb
shl
pop
ret
mov
jg
mov
adc
and
push
sar
push
xchg
push
imul
jae
sub
mov
cmp
or
add
pop
mov
test
add
call
pusha
icebp
nop
and
mov
or
cmp
mov
cmp
add
inc
adc
or
dec
sbb
call
add
sbb
add
jl
and
mov
xchg
xchg
test
call
out
cmp
jge
mov
leave
js
mov
inc
xchg
cmp
shl
push
mov
cmp
push
mov
jb
ds
ret
sbb
js
jnp
sub
pushf
retf
shr
outs
cwde
jb
rcr
mov
add
or
jl
add
adc
icebp
mov
shl
mov
add
mov
shl
jb
push
xchg
adc
add
jae
xchg
scas
inc
push
pop
cli
jle
test
retf
inc
cmp
leave
push
lahf
dec
dec
cs
js
popa
mov
popa
sub
or
sub
lahf
push
cld
js
pop
jmp
cmp
and
mov
or
jb
push
xchg
sbb
in
outs
dec
mov
ins
inc
rol
sub
cmc
jle
shr
sbb
out
add
inc
and
ret
rcl
pop
or
lea
or
and
es
dec
sbb
xor
mov
data16
cmp
repnz
cmp
enter
retf
push
cmovp
xchg
or
push
and
(bad)
pusha
out
and
jnp
mov
dec
rcl
test
les
lods
(bad)
imul
and
sub
mov
inc
cmps
fadd
sahf
adc
sub
add
rol
shr
mov
outs
fimul
or
sub
outs
sub
mov
mov
pushf
imul
and
adc
dec
mov
cmp
ja
sub
pop
ins
inc
pop
fsubrp
inc
pop
push
inc
fld
add
jecxz
xor
mov
pop
xor
into
rcr
ss
jo
dec
pop
cmp
ins
sbb
dec
jl
dec
dec
aas
jne
scas
push
and
addps
(bad)
mov
fld
test
dec
add
sbb
pop
pop
fwait
dec
fucom
ficomp
mov
shl
inc
xor
fld
or
ds
xchg
cmps
ja
mov
sbb
sub
cmp
cli
mov
ror
mov
push
and
add
or
mov
pop
lahf
ret
add
js
(bad)
mov
cmp
adc
push
fstp
xor
cmps
dec
addr16
inc
add
cwde
dec
lods
or
mov
imul
imul
cmp
popa
and
arpl
jne
lea
imul
pushf
mov
jo
dec
js
push
fs
add
mov
mov
inc
ret
dec
ret
aam
dec
pushf
rol
jg
jne
xor
and
sahf
mov
mov
stos
adc
mov
mov
movs
inc
cmp
cmp
xchg
push
jbe
add
js
mov
ror
mov
mov
ret
sbb
loope
aad
sti
cwde
sbb
into
add
jecxz
jmp
sub
les
in
xor
js
lods
push
clc
aam
push
je
mov
pop
icebp
test
xlat
ja
or
mov
jne
xor
push
mov
test
popa
push
sbb
jmp
rol
xchg
lods
sub
leave
add
movs
jmp
push
pop
cmc
lds
nop
retf
movs
cmp
mov
popa
rcr
mov
das
imul
lock
push
jp
or
clc
sbb
push
movs
cmps
mov
je
(bad)
retf
out
dec
vpsrlw
mov
jmp
rol
pop
sbb
push
or
sub
push
add
and
mov
and
ror
fiadd
fbld
movs
loop
mov
mov
leave
aam
mov
fisttp
and
add
sub
fisttp
rcr
adc
movs
push
inc
adc
jb
pop
sti
inc
adc
std
mov
movs
mov
je
push
sub
jbe
jb
xor
push
jae
pop
leave
ret
push
jae
jns
clc
pmaddwd
ins
push
vmwrite
xor
neg
cmc
ja
push
mov
sar
(bad)
xor
and
adc
or
sbb
movd
xchg
(bad)
pop
out
inc
or
and
pop
xlat
dec
inc
mov
out
sub
and
and
add
xchg
lock
ds
lods
movs
push
jbe
jge
or
add
std
das
xchg
xchg
inc
sahf
cs
adc
les
test
or
jne
push
inc
add
push
sbb
cmp
jne
xor
in
pslld
mov
sbb
and
pop
and
clc
cmps
loopne
inc
dec
and
int3
jo
pop
mov
mov
ja
add
sti
pop
pop
mov
sbb
push
push
inc
add
into
cmp
nop
xchg
jns
push
push
retf
dec
movs
in
mov
push
fstp
jnp
xchg
push
ins
adc
sub
sbb
cmps
imul
dec
jb
push
fbld
test
aas
jle
cmp
jne
cmp
sub
pop
or
or
or
cs
int
pop
sub
mov
push
jecxz
add
jb
xchg
dec
or
and
fist
jns
sub
jmp
sub
push
sti
imul
push
add
push
(bad)
inc
mov
je
xor
push
test
inc
pop
popa
in
ins
pop
adc
call
mov
add
fcom
fwait
fs
(bad)
pop
rol
xchg
mov
sbb
(bad)
mov
rcl
mov
adc
xor
jbe
test
aas
or
ret
mov
mov
push
mov
jle
sbb
sbb
push
jo
add
pusha
inc
mov
lea
cdq
or
stos
mov
add
add
(bad)
jne
xchg
je
jae
lods
inc
pop
mov
jae
mov
or
dec
xor
push
mov
sub
outs
mov
div
je
cmp
or
nop
iret
dec
adc
fisubr
in
pushw
push
and
sub
mov
cmp
add
push
pop
sub
addr16
enter
mov
cli
mov
push
ret
sub
dec
and
loope
add
mov
and
cdq
inc
pop
rol
adc
and
ret
and
and
jmp
xor
adc
je
int
mov
xchg
pop
adc
cli
outs
div
shl
jl
or
rol
or
sbb
fs
mov
lds
jbe
push
xchg
fist
into
inc
pusha
sbb
mov
xor
sub
and
dec
and
nop
je
mov
popa
sub
loopne
or
mov
mov
sub
clc
adc
add
and
data16
pop
push
xchg
add
mov
xor
in
jo
or
in
dec
push
cmp
(bad)
cmc
sub
pop
pop
mov
es
cdq
or
add
out
and
pop
cwde
jecxz
data16
popa
adc
pushf
call
fidiv
push
out
xor
sbb
add
aas
fwait
movs
nop
add
call
loopne
or
or
pop
movs
cs
lods
sti
add
push
hlt
je
add
aad
vmload
or
add
adc
sbb
push
and
leave
add
push
xchg
add
and
(bad)
mov
aam
mov
dec
pop
jne
lods
inc
jbe
pop
dec
test
aam
xor
out
adc
adc
push
sbb
dec
retf
add
ret
lea
sub
add
(bad)
jo
xchg
or
sbb
xchg
clc
cs
xor
js
push
inc
push
adc
sbb
jbe
shr
or
fsub
push
push
push
sub
daa
adc
or
icebp
mov
jbe
or
add
mov
je
dec
sub
fcomp
pop
mov
sub
fcmovbe
mov
popa
dec
jmp
xor
inc
mov
bnd
dec
sbb
jb
jne
mov
jno
rcr
cmp
scas
arpl
adc
cs
pop
and
mov
or
icebp
push
or
inc
and
cmp
sbb
sub
mov
cmp
xor
push
or
dec
sub
or
(bad)
mov
inc
sub
sbb
inc
xchg
inc
add
daa
inc
or
daa
push
add
adc
xchg
inc
sub
sbb
and
jmp
sub
ret
shl
add
xor
cmp
shr
enter
pop
or
push
or
push
sahf
sub
and
shr
push
xor
lahf
pop
ja
dec
les
shr
pusha
cmp
lods
shl
dec
add
ja
sbb
cmps
mov
mov
xor
inc
ins
pop
dec
or
adc
sub
cmp
pop
adc
sub
jae
and
sbb
push
ret
jno
mov
shl
push
in
shl
sbb
fdiv
ror
sahf
and
pop
imul
mov
mov
sbb
mov
in
mov
sbb
or
scas
add
xchg
outs
js
push
fisttp
or
or
push
repnz
adc
scas
ror
out
sbb
loopne
shl
push
cmp
dec
add
pop
sar
jg
push
inc
sahf
fs
pop
ja
cs
fnstsw
ins
imul
pop
sub
adc
mul
jmp
mov
inc
fadd
mov
inc
jo
sub
mov
mov
cmp
jae
mov
jle
or
xor
push
dec
inc
aam
jg
jb
lea
push
push
mov
sbb
xor
cli
fwait
push
stos
mov
les
ror
retf
nop
jl
xor
cmp
into
or
push
js
shl
enter
pusha
cmp
ret
add
ficom
xchg
sbb
sub
and
dec
dec
and
mov
sub
dec
aas
mov
inc
aas
sbb
jo
pop
sbb
aad
fidiv
jge
rcr
sbb
movs
loopne
hlt
xor
fist
inc
cmp
or
outs
jno
pop
mov
inc
push
pop
inc
push
enter
or
mov
jbe
pop
vdivss
and
int
mov
movaps
cmps
pop
push
sub
cs
imul
fisttp
loope
data16
adc
sbb
out
push
jbe
or
fstp
ins
fxch
scas
pop
mov
(bad)
dec
lock
mov
daa
mov
nop
or
loop
pop
jg
test
movs
or
mov
adc
add
jle
ror
cmp
ja
hlt
fimul
lahf
inc
push
in
ret
hlt
xchg
aas
jne
leave
test
sbb
sti
sbb
scas
fstp
add
sub
(bad)
mov
pusha
sbb
xor
inc
iret
or
add
out
in
jecxz
mov
(bad)
lods
rcr
push
mov
push
add
mov
cmp
and
push
and
leave
pop
sub
xor
sub
mov
pop
div
push
adc
push
jb
cmp
dec
mov
sahf
adc
xchg
sbb
sub
push
enter
mov
cmp
sbb
adc
imul
adc
mov
ror
and
jmp
cwde
cs
push
loope
fidiv
add
ins
dec
xchg
enter
push
out
add
and
into
mov
mov
dec
mov
push
cmp
jno
(bad)
push
xchg
sbb
xchg
jmp
shl
bound
(bad)
pop
aas
pusha
shl
inc
jmp
(bad)
leave
and
sub
fimul
les
push
bound
sbb
xor
stos
loopne
mov
mov
or
sub
inc
ja
dec
inc
test
ins
mov
out
pop
(bad)
jmp
adc
pop
jae
add
xchg
adc
push
pop
jbe
mov
int3
cmp
jl
inc
add
ja
js
(bad)
or
inc
cmp
inc
mov
movs
lea
rcl
fnsave
inc
jb
inc
nop
(bad)
add
jb
adc
enter
iret
mov
mov
adc
push
mov
mov
into
mov
pop
and
push
movs
mul
push
nop
outs
pop
inc
and
adc
add
pop
sub
adc
jmp
fs
sub
popf
jg
rol
sub
sbb
sub
sar
dec
xor
sub
data16
repz
dec
sub
enter
or
xor
and
or
jo
pop
adc
pop
retf
(bad)
mov
out
fsub
xor
jo
nop
inc
fmul
repnz
sub
jmp
adc
or
sub
(bad)
dec
aam
or
loopne
pop
cli
in
jns
add
in
mov
xchg
pop
lock
jg
cmp
mov
inc
ret
adc
sub
xor
add
fadd
popa
jp
loopne
dec
movs
shl
or
sahf
ins
lea
pop
aad
add
ret
jecxz
sbb
inc
mov
retw
inc
pop
mov
jne
ins
mov
(bad)
dec
mov
repnz
arpl
int
sbb
je
pop
shr
sar
stos
sbb
adc
xchg
adc
test
aas
adc
test
add
pop
sbb
push
xchg
jge
lahf
jno
jae
pop
test
jo
leave
xchg
ds
inc
cmp
cs
xor
cmp
add
pop
cmp
xchg
or
pop
push
cmp
inc
pop
jno
pop
mov
call
sub
movsx
in
cmp
je
or
daa
loopne
sbb
jl
in
je
jns
jecxz
lods
add
sub
fcomp
add
pusha
aad
(bad)
push
clc
xor
jne
shr
sar
pop
adc
inc
pop
sbb
(bad)
pop
cmp
xchg
add
push
pop
sub
xor
push
push
and
shr
imul
outs
inc
xor
xchg
adc
fild
in
jne
mov
imul
loope
mov
xchg
ret
dec
popa
add
add
jns
and
cld
ret
out
push
sub
add
dec
(bad)
fcomp
push
pusha
pop
pop
mov
push
inc
rol
cmp
dec
or
push
pop
xor
pop
push
fwait
addr16
rcr
pop
add
pop
pop
fwait
out
cmp
pusha
dec
jbe
popa
dec
fwait
addr16
mov
adc
jns
pop
pop
push
rep
sahf
es
aas
arpl
out
fstp
sub
sbb
sbb
lahf
cmp
dec
add
std
dec
and
mov
add
and
(bad)
jge
add
adc
sbb
sbb
mov
call
popf
test
sub
push
adc
imul
cli
xor
xor
or
cmp
sub
sub
call
mov
out
push
lods
push
or
add
fisttp
clc
(bad)
push
dec
pushf
mov
or
dec
nop
fisubr
mov
in
sub
mov
push
inc
jmp
add
xchg
push
pop
adc
mov
fisubr
int
ja
and
pusha
xchg
mov
pop
jns
inc
jne
and
pushf
pmaxub
mov
nop
pop
sbb
icebp
int3
jne
sbb
jmp
sbb
neg
jp
xchg
mov
ror
mov
fs
or
and
or
mov
and
addr16
cs
inc
and
or
mov
inc
in
mov
push
sub
mov
pop
mov
add
outs
test
xchg
add
cmp
and
pusha
sub
lea
push
jmp
sub
pusha
call
push
xchg
nop
adc
lods
out
add
or
add
clc
dec
inc
arpl
xor
cmp
and
jle
inc
or
test
and
aaa
dec
sar
push
bound
call
jb
bound
cli
add
jge
adc
push
xchg
add
(bad)
sub
add
push
and
cld
mov
in
icebp
or
js
push
fsubp
std
loopne
cmp
sbb
(bad)
cmp
test
fldenv
push
dec
ds
add
sbb
or
adc
test
add
int3
ins
sub
mov
cmp
adc
das
adc
dec
mov
sbb
(bad)
loopne
dec
mov
pusha
fwait
jl
je
mov
xchg
(bad)
loopne
cmp
and
test
mov
xchg
or
push
or
data16
sbb
mov
dec
into
jne
imul
dec
aad
test
xchg
aaa
mov
xor
adc
or
je
pop
lea
or
mov
adc
mov
or
ror
push
adc
xor
xchg
loopne
cmp
pop
ret
or
add
jge
jne
ror
cmps
(bad)
jge
cli
xchg
mov
push
cmp
je
inc
and
idiv
cli
or
sbb
pop
adc
inc
add
mov
scas
cmp
add
jp
sbb
jno
jle
mov
jmp
pop
adc
hlt
jne
push
and
or
pop
adc
dec
shl
pop
into
mov
mov
push
es
or
(bad)
mov
fdiv
xor
mov
jge
jne
mov
movs
xor
jge
pop
pop
inc
in
pop
call
jne
mov
or
mov
mov
sub
mov
mov
dec
jmp
xlat
ins
pop
xor
adc
add
gs
cwde
or
dec
dec
inc
adc
mov
fsubr
mov
add
mov
aas
cmp
retf
ins
shr
jno
jmp
test
leave
ret
mov
sub
or
sub
pop
mov
nop
jne
adc
or
stos
pop
mov
fimul
enter
bound
gs
or
ins
mov
jne
cmps
push
es
(bad)
inc
mov
add
sbb
xor
shl
cld
dec
mov
xor
adc
js
add
mov
stc
test
and
data16
dec
cmps
dec
mov
mov
mov
ret
push
jle
cmovno
inc
or
lds
pop
add
rol
and
or
jg
ret
rol
iret
push
and
(bad)
mov
or
and
xor
nop
or
(bad)
les
nop
fwait
add
or
or
jmp
sub
adc
repz
hlt
in
push
push
pop
or
add
and
or
cmc
sbb
cmc
jg
inc
lock
call
push
adc
rcr
mov
mov
xchg
test
shl
mov
mov
dec
adc
xchg
pop
or
xchg
pop
test
jle
cwde
sub
data16
call
movs
sbb
xchg
xchg
add
out
or
sar
or
xchg
sub
dec
out
int3
dec
dec
sahf
and
sbb
and
movzx
xchg
mov
add
int3
sbb
sbb
nop
and
inc
and
sbb
inc
sub
adc
jmp
retf
xchg
enter
cmp
add
cmp
(bad)
in
lea
scas
jae
and
or
pop
sbb
and
popa
loope
shl
adc
rcl
mov
mov
inc
int3
hlt
mov
popa
dec
inc
call
sbb
xor
xor
and
push
enter
adc
cmps
push
or
cmp
dec
test
fmul
add
mov
ins
bound
div
mov
fs
xor
mov
fistp
mov
mov
mov
sar
jle
xor
jns
and
cmp
ss
xchg
sbb
push
push
add
dec
or
pop
stos
jbe
mov
xor
xor
fmul
sti
pop
or
sbb
(bad)
cmp
mov
js
or
mov
sbb
popa
call
out
cwde
loopne
mov
adc
rol
jae
daa
lods
xchg
inc
mov
or
arpl
enter
mov
add
mov
xor
ss
dec
xlat
sbb
push
add
shr
or
int3
int3
sbb
mov
cmp
push
sbb
pusha
inc
pop
comiss
dec
jp
and
cmp
pop
ss
out
ins
leave
xor
jo
push
or
movs
loope
mov
jmp
inc
cmp
loop
scas
jmp
ret
test
movs
add
and
mov
mov
dec
imul
xchg
icebp
inc
push
jmp
aam
iret
in
stos
jne
adc
xchg
or
nop
jne
sbb
xchg
push
push
out
mov
pop
call
(bad)
dec
shr
into
xor
mov
call
push
lods
add
jne
popa
add
and
mov
rcr
jnp
test
cmp
mov
or
add
mov
cmp
dec
jle
icebp
scas
adc
or
jle
dec
adc
inc
shl
adc
mov
pop
test
lods
jg
inc
fistp
outs
adc
in
and
pop
pusha
out
sub
mov
not
pop
inc
not
dec
movs
stos
arpl
pop
and
fsubp
call
xor
inc
xor
inc
sbb
inc
add
leave
mov
and
movs
pop
mov
lea
jno
xor
jl
xor
hlt
outs
add
mov
int3
inc
fcom
movd
inc
js
js
popf
popa
imul
into
pusha
adc
enter
dec
or
sbb
mov
jle
and
std
or
test
fist
xor
mov
ror
jae
cdq
pusha
test
add
cmp
fdivr
scas
cmp
ja
inc
sbb
(bad)
cmp
test
outs
mov
test
pop
imul
nop
inc
dec
xchg
inc
out
inc
pop
push
mov
inc
push
add
xchg
sub
push
mov
mov
push
jp
xchg
push
dec
ss
retf
sub
push
sbb
dec
inc
cmp
imul
jl
pop
outs
ins
dec
cmp
cli
dec
inc
jge
rol
(bad)
add
stc
mov
mov
mov
daa
mov
mov
mov
adc
inc
add
popa
cmp
test
add
pusha
adc
call
repnz
mov
sub
jmp
mov
inc
mov
fincstp
pop
or
inc
push
cli
cmp
jo
jge
dec
lock
or
jo
xchg
cdq
icebp
jo
sbb
mov
adc
in
sbb
jecxz
jb
and
cmp
dec
sub
push
les
dec
adc
mov
out
pop
out
mov
nop
add
and
xchg
xchg
cmp
xor
cmp
add
sub
jge
lea
retf
xchg
clc
fldenv
dec
sbb
sbb
add
scas
(bad)
rcr
mov
imul
adc
push
cs
ret
ss
call
test
sub
push
adc
(bad)
sti
nop
pop
mov
push
clc
inc
lods
push
fild
push
add
clc
add
ret
sbb
add
add
and
add
or
or
sub
sbb
and
jns
repnz
or
adc
sahf
mov
call
jecxz
dec
push
js
dec
add
jge
cs
push
sbb
adc
retf
pop
and
push
cmp
mov
adc
leave
jb
pop
data16
lods
scas
pop
lea
addr16
rcl
push
add
adc
xchg
adc
aaa
rol
mov
shl
mov
hlt
add
mov
adc
ds
ins
js
jl
inc
idiv
sbb
or
jle
call
cld
adc
sub
inc
add
xor
repz
inc
add
pusha
jl
sub
or
sbb
push
mov
in
jecxz
dec
xchg
inc
cdq
push
retf
add
js
or
jb
xor
fild
pop
div
and
push
push
stc
xor
call
out
jnp
push
dec
and
popf
adc
or
push
mov
sub
xchg
jb
jne
ins
jmp
pusha
cdq
xchg
jno
pop
xor
push
xchg
call
pop
imul
pushf
and
dec
pop
test
mov
inc
xchg
mov
jmp
mov
into
test
imul
in
add
add
in
in
push
pop
or
in
in
or
or
xchg
xor
in
clts
or
(bad)
mov
push
rcr
add
and
imul
pop
cmp
out
rol
shl
pop
jno
ficom
push
jo
lahf
sub
movs
add
loop
je
ret
adc
lds
mov
jecxz
imul
test
(bad)
test
xor
push
or
xchg
test
sbb
push
push
cmp
xor
inc
and
or
inc
xchg
adc
bound
dec
les
add
fsubr
or
inc
in
dec
xchg
enter
(bad)
xchg
or
pop
mov
popf
imul
jp
sub
mov
xchg
fs
gs
add
mov
inc
or
or
mov
mov
mov
stc
add
clc
sub
mov
in
add
or
cld
lahf
mov
mov
push
bound
jbe
mov
pop
aam
clc
xchg
retf
scas
add
test
dec
scas
pusha
cmp
cmp
and
inc
inc
(bad)
(bad)
pop
sub
nop
adc
inc
push
xor
xchg
test
ret
mov
add
push
push
adc
add
pop
cmp
or
cmp
aas
jmp
adc
mov
mov
pop
mov
push
sti
or
(bad)
xchg
loopne
clc
sub
dec
add
lea
(bad)
stos
shl
dec
sub
fdiv
dec
shl
fcomp
dec
stos
push
data16
loopne
mov
mov
cmp
(bad)
sbb
out
shl
fadd
dec
xchg
or
and
mov
and
movs
mov
xor
dec
add
pusha
add
inc
inc
adc
xchg
xchg
xor
xor
jbe
or
push
sahf
stos
push
inc
jb
lods
div
push
dec
ins
add
jbe
xchg
add
sti
out
ret
mov
inc
lods
pop
push
or
push
je
inc
and
sub
cli
jae
and
mov
and
jnp
add
xchg
push
dec
in
loopne
out
cdq
push
gs
xchg
pusha
push
hlt
mov
cld
push
loopne
retf
or
add
jle
mov
test
jne
test
repz
jb
ss
jmp
jnp
xchg
mov
retf
clc
popf
aad
ins
clc
mov
sahf
pusha
pusha
fild
js
add
adc
fcompp
inc
sub
rcl
sub
cmp
mov
push
ret
push
or
sub
mov
dec
cmp
mov
and
jbe
lock
push
sub
adc
sub
daa
or
rol
retf
sub
cld
mov
ds
dec
mov
jne
fstp
ja
shl
cmp
inc
in
jmp
dec
sub
mov
cdq
inc
fdiv
out
sbb
pop
(bad)
cmp
xor
arpl
stc
inc
mov
inc
(bad)
push
std
add
adc
inc
sub
or
imul
icebp
and
adc
fild
and
aas
xor
inc
xchg
test
mov
push
inc
mov
mov
adc
imul
mov
pushf
xor
xchg
ror
or
add
fidivr
hlt
inc
jge
push
mov
fwait
push
and
cwde
jae
xchg
add
aam
inc
sbb
or
fsubr
sub
jmp
data16
sbb
int
add
adc
jno
ins
add
sub
sbb
jno
add
rol
and
sub
sbb
sbb
pop
add
push
push
jne
rcl
(bad)
dec
ret
or
lock
jne
inc
lods
push
push
xchg
mov
es
adc
nop
sbb
jne
leave
repnz
mov
popa
xchg
test
enter
jl
das
imul
addr16
xchg
push
add
mov
or
popf
jl
inc
cmp
sbb
xchg
mov
inc
les
adc
sbb
ret
pop
pop
push
push
jbe
cmp
sub
repnz
mov
test
cs
mov
mov
xlat
xchg
add
and
push
dec
btc
jbe
scas
pop
add
or
cmp
neg
sbb
xchg
lods
cld
je
add
std
sbb
push
push
mov
jmp
add
loopne
ja
mov
rcr
mov
mov
cmp
sub
xchg
jb
xchg
or
push
jne
dec
jb
cwde
ror
inc
adc
out
adc
into
mov
lea
or
and
imul
jle
jno
je
pop
or
mov
jo
push
sub
loopne
jmp
loopne
mov
add
pusha
sbb
mov
xchg
add
dec
or
jmp
push
call
or
pop
inc
test
push
mov
test
pop
sbb
test
call
popf
cmp
or
push
hlt
xchg
lods
movs
cmp
fdiv
popa
dec
sbb
sub
mov
sub
mov
push
les
jl
mov
or
xchg
adc
mov
mov
stos
call
and
rcl
addr16
dec
mov
push
mov
mov
shr
push
sbb
mov
jne
dec
dec
js
adc
push
pop
aas
shr
push
jne
mov
fsub
rol
nop
lods
jmp
sub
push
aad
add
push
inc
sbb
pushf
push
in
call
loope
nop
inc
jo
mov
mov
xor
ror
and
pop
adc
jmp
ret
add
clc
test
push
or
ror
add
xchg
shl
rcl
loopne
push
pushf
jae
push
fsubr
gs
inc
mov
and
jb
mov
adc
push
sub
xlat
add
or
or
ja
fist
movs
push
mov
push
mov
mov
inc
sbb
sbb
adc
nop
jbe
mov
std
or
mov
int3
sub
push
dec
adc
(bad)
jle
pop
mov
mov
fsub
dec
fnsave
adc
pop
ret
mov
push
xchg
jo
daa
pop
sub
add
popa
fdiv
fisubr
or
ret
neg
movs
sub
cmp
and
cmp
addr16
inc
adc
mov
icebp
sbb
aam
inc
sbb
jno
xchg
and
ret
push
or
add
pushf
add
(bad)
xchg
jne
es
call
push
lods
call
setb
mov
rcl
daa
add
outs
adc
add
jne
mov
sub
(bad)
push
pop
es
mov
xchg
push
mov
aam
sar
cmp
inc
gs
push
or
shl
das
fiadd
stos
test
push
inc
mov
add
push
scas
cmp
(bad)
ins
mov
das
test
pop
outs
sub
test
and
cld
jg
adc
sbb
es
add
add
outs
mov
cmp
xchg
pop
ret
fld
inc
popa
sti
pop
inc
loope
dec
pop
dec
pop
movs
pop
call
dec
adc
popa
inc
add
or
jmp
cs
mov
cmp
je
fcmovu
nop
xor
fadd
and
adc
pop
adc
popa
call
(bad)
in
push
shl
add
or
xchg
lock
and
xchg
arpl
adc
adc
fcomi
xchg
mov
jo
mov
or
popa
or
inc
add
xor
scas
sbb
or
in
hlt
dec
sbb
add
add
fadd
and
adc
or
pusha
in
mov
cmc
or
jbe
xor
mov
inc
and
sbb
sbb
push
outs
inc
dec
test
clc
jge
stos
test
jmp
fild
ins
cmp
jmp
sub
shl
cmp
push
repnz
pop
cmps
dec
cmp
es
xchg
or
lock
xor
or
xchg
mov
adc
outs
and
inc
les
mov
cdq
sub
aam
or
or
in
add
sbb
add
pop
inc
adc
(bad)
xlat
jmp
sbb
clc
fisub
(bad)
div
or
add
or
jnp
jns
sbb
mov
add
add
inc
sbb
dec
pop
push
into
jecxz
rcr
mov
cmps
rol
(bad)
test
or
inc
jbe
and
mov
dec
mov
mov
mov
dec
inc
retf
inc
mov
lea
lock
xchg
add
cli
mov
sub
movs
pop
or
sbb
jmp
adc
enter
repz
cmps
cmp
nop
nop
unpcklps
push
jmp
pop
dec
mov
push
xchg
mov
or
lods
adc
xchg
mov
mov
cmps
cmp
jb
nop
inc
add
add
or
fs
pop
push
cld
aas
iret
repz
inc
cmp
mov
mov
repz
repz
iret
repz
lock
hlt
clc
clc
cld
addr16
cmp
das
add
out
or
add
sbb
jmp
cmp
movs
mov
mov
pop
xor
sti
and
push
and
sbb
lea
into
jl
cld
pop
and
std
std
mov
adc
sbb
(bad)
pushf
int3
mov
sub
pop
nop
push
xor
push
jl
add
nop
sbb
add
xchg
push
mov
inc
mov
out
push
add
mov
addr16
add
bound
out
fiadd
rol
fsub
call
lock
cmp
popf
adc
sbb
jns
out
sbb
adc
adc
jns
out
or
or
sahf
inc
dec
sahf
add
inc
or
or
repz
xor
pop
(bad)
sub
xchg
cmps
push
add
pop
punpcklwd
xchg
daa
ja
add
jl
push
sub
add
pop
into
xchg
jbe
jmp
sub
jae
lahf
inc
pop
(bad)
outs
ficomp
adc
lock
scas
outs
push
cmp
stos
ins
adc
push
std
push
cmp
jne
sahf
out
imul
call
push
shl
or
jne
jb
jmp
mov
jle
dec
(bad)
jmp
adc
iret
repz
(bad)
jmp
std
std
jmp
cld
cld
js
push
fldpi
sub
jmp
lea
pop
or
dec
ror
cmp
adc
repnz
mov
sub
(bad)
mov
push
enter
push
push
mov
inc
das
icebp
pusha
push
sbb
lock
fwait
pusha
test
ror
bound
jmp
xchg
push
xor
daa
mov
test
add
or
bound
lock
mov
call
push
rcl
movs
pop
adc
jle
push
xchg
sbb
stos
jmp
jle
pop
cdq
data16
in
add
fstp
test
push
jne
outs
dec
jne
xor
or
cmp
mov
add
fs
ret
stos
outs
mov
adc
mov
sahf
mov
mul
ins
mov
out
dec
dec
lahf
mov
mov
jbe
push
push
ret
sahf
inc
test
add
or
and
call
and
jmp
(bad)
repnz
add
sub
pop
scas
stos
cmp
xor
(bad)
jmp
imul
popa
push
or
call
shr
pop
pop
mov
and
inc
cld
dec
and
push
push
iret
sbb
push
jne
retf
jmp
add
(bad)
je
sbb
mov
mov
fidivr
maskmovq
not
or
xchg
push
dec
push
xchg
mov
mov
test
add
xchg
xchg
out
sub
mov
fstp
ins
data16
sbb
add
and
cdq
jp
xor
pop
lea
loopne
stos
mov
xchg
mov
cmps
add
push
pop
fadd
dec
jmp
add
aas
loopne
ror
js
in
sbb
inc
arpl
xchg
aad
jne
sub
fdiv
fistp
xor
jmp
inc
xor
and
pop
bound
movs
mov
cs
adc
dec
mov
sbb
mov
fcmovu
push
sbb
dec
leave
push
dec
ret
mov
jo
outs
push
pop
jae
sub
push
in
loopne
outs
push
push
mov
add
cmp
inc
sub
movs
jp
jmp
test
in
fcmovnb
or
je
add
push
rcl
xchg
shl
es
pop
cmp
or
lahf
jne
jmp
add
mov
lods
jmp
inc
or
loopne
and
fcmovnb
adc
dec
sahf
sub
xor
jno
and
(bad)
je
outs
pusha
jo
dec
in
cmp
movs
mov
fistp
or
jl
and
retf
mov
mov
aam
mov
sub
jle
add
push
div
and
inc
inc
out
shl
cmc
xchg
enter
cld
sbb
ret
icebp
mov
inc
jmp
cmp
outs
inc
stos
and
dec
sbb
add
add
xchg
in
sub
call
inc
mov
pushf
jg
and
(bad)
cmp
je
hlt
sub
pusha
adc
ss
repnz
test
js
cmp
and
into
mov
stos
pop
add
repz
dec
add
mov
or
shl
adc
mov
aad
dec
retf
mov
imul
je
retf
push
xchg
into
hlt
sbb
sti
mov
stc
sbb
ja
and
adc
sbb
in
add
or
aam
jne
push
clc
jbe
and
add
adc
or
dec
and
sbb
sub
fstp
push
shl
fiadd
push
std
mov
sbb
add
adc
add
sbb
ja
shr
cli
jbe
aas
xchg
sub
mul
pop
add
cmps
cld
cs
push
pop
mov
adc
xlat
adc
out
in
pop
cld
(bad)
mov
sbb
lds
push
push
ja
jnp
daa
neg
sbb
pop
push
add
inc
mov
test
sub
xchg
pushf
call
adc
or
rol
push
adc
push
jbe
or
adc
and
mov
pop
adc
add
push
dec
pop
ror
push
pop
aaa
nop
lods
pop
call
mov
cmp
xor
add
or
push
dec
in
js
pop
xchg
sar
daa
dec
jne
jmp
repnz
test
push
xor
or
add
in
pop
bound
adc
jb
(bad)
sub
jns
xchg
jo
icebp
ret
push
ror
nop
imul
and
dec
jecxz
daa
(bad)
daa
mov
mov
adc
fwait
pop
push
ror
ss
adc
mov
add
cmp
retf
jmp
test
aad
retfw
dec
sahf
or
cmp
push
je
in
sti
ja
add
jmp
adc
aam
in
cli
lock
mov
mov
inc
cmp
je
push
repz
add
mov
cli
xchg
sub
dec
xor
fnsave
mov
je
jbe
ret
das
or
or
aaa
cmps
lahf
test
add
imul
jle
add
xchg
cmps
push
les
add
jl
or
push
or
dec
fbstp
push
sbb
cmp
jg
ret
cs
(bad)
jl
jg
mul
dec
lock
inc
xchg
jbe
test
and
rcr
add
jb
ror
add
adc
pop
or
xchg
retf
in
int
pop
mov
outs
sar
xor
loopne
(bad)
mov
add
loop
sub
cmp
aas
scas
sbb
push
cwde
inc
data16
jmp
or
mov
rcl
rcr
cdq
sub
sbb
arpl
jae
inc
jo
test
ins
fistp
cmp
je
popf
jno
pop
pusha
pop
fcomp
push
ss
mov
pop
or
add
fcmovbe
cmp
inc
mov
lods
sub
pop
dec
fsubr
fidivr
mov
cmp
aaa
adc
clc
fwait
cmp
fld
adc
sub
sbb
or
or
call
mov
sub
or
jl
push
cdq
pop
idiv
add
fidiv
sub
aaa
int3
iret
out
cmps
mov
jae
lea
fwait
mov
dec
dec
push
push
ret
add
fisttp
data16
inc
inc
jle
mov
retf
mov
aam
ror
inc
cwde
jns
call
xchg
cmp
fst
je
mov
dec
dec
sub
mov
or
mov
xchg
mov
or
and
push
adc
repnz
add
add
jbe
(bad)
cdq
pop
idiv
add
mov
pusha
adc
dec
sbb
enter
shl
clc
aaa
dec
call
mov
dec
mov
mov
jmp
cmp
jae
adc
shr
dec
fcomp
cmp
(bad)
jae
pop
jbe
call
mov
jmp
pop
shr
add
adc
xor
(bad)
sbb
mov
fcomp
(bad)
mov
addr16
mov
mov
sbb
ret
adc
call
or
js
shr
je
or
inc
dec
js
or
push
push
aaa
fdiv
outs
sbb
adc
add
xchg
(bad)
jmp
add
je
mov
int
sar
and
and
pop
mov
pop
mov
inc
dec
pop
sub
pop
imul
pop
test
xchg
or
pop
ret
lock
bound
push
pop
mov
icebp
xor
and
sar
push
pop
sub
je
dec
pop
sub
or
or
inc
repnz
mov
or
jo
and
jmp
aaa
imul
sub
clc
call
addr16
jge
jg
sbb
xchg
pop
idiv
cmp
das
test
stos
pop
(bad)
jl
dec
jp
inc
mov
cmp
mov
adc
sub
loope
or
and
cmps
loopne
jbe
mov
inc
sub
add
mov
icebp
cmps
dec
push
mov
mov
xchg
dec
push
jb
sbb
and
pop
push
dec
or
mov
push
push
sub
add
jbe
scas
add
xor
scas
push
jmp
or
or
retf
pop
add
push
pop
test
call
ficom
or
je
mov
jmp
imul
and
add
mov
dec
cld
clc
mov
push
ret
sbb
jecxz
jae
cmp
xor
pop
fstp
mov
mov
sub
cmp
xchg
outs
mov
rcr
mov
je
out
jne
fwait
add
dec
jne
mov
cmp
sbb
ds
jmp
jle
or
or
std
fild
call
mov
cli
add
cli
mov
imul
stos
retf
mov
or
idiv
adc
sbb
aad
dec
dec
cmps
push
pushf
add
aam
mov
sbb
mov
mov
add
sahf
movs
sahf
push
repz
push
jle
and
mov
imul
push
push
xchg
sbb
xor
mov
call
shl
mov
ror
inc
pop
ror
pushf
out
iret
out
or
repnz
inc
js
inc
or
push
push
push
add
mov
and
push
push
js
xor
adc
mov
cmp
pop
mov
mov
rol
shl
push
or
and
sub
push
scas
pop
jbe
aam
shr
adc
inc
into
lock
out
ror
sbb
out
jo
or
fdivr
push
inc
and
jg
ins
lods
add
pusha
outs
add
les
test
mov
in
iret
inc
dec
pop
aam
inc
inc
je
ret
xchg
cmps
dec
jp
mov
imul
add
sub
int
xchg
jnp
dec
je
popa
test
or
pop
sbb
ret
sbb
jbe
xor
daa
sub
lea
adc
(bad)
(bad)
retf
dec
sbb
fisub
or
mov
or
cmp
push
add
or
mov
pop
mov
sbb
or
ret
push
pop
pop
iret
dec
mov
adc
fdivr
xchg
add
addr16
idiv
cmp
pop
and
pop
test
(bad)
mov
stos
rcr
adc
clc
inc
mov
adc
mov
and
pcmpeqw
or
mov
or
push
dec
xchg
dec
and
jnp
(bad)
popa
mov
nop
and
push
dec
adc
jno
pop
or
xchg
cmovs
gs
in
jmp
sar
add
add
call
retf
fld
jns
add
lds
ret
push
jmp
mov
jne
jmp
cmp
std
retf
pop
adc
scas
fidiv
cs
dec
mov
jmp
pusha
mov
and
rcr
or
mov
fsub
dec
pop
popa
jl
stos
jp
or
mov
cs
scas
jge
sbb
sbb
push
push
enter
or
push
pop
cmp
lods
jne
enter
cmc
cmp
imul
add
outs
cmp
adc
dec
loopne
adc
inc
(bad)
sar
or
add
or
sti
sahf
lahf
pop
cmp
je
cmp
je
xor
nop
or
push
popa
xchg
sub
mov
jl
call
mov
lock
sbb
inc
push
jmp
jg
xor
ficom
xchg
dec
push
pop
push
test
inc
cmp
into
out
cmp
mov
jbe
inc
inc
pop
cld
ja
or
mov
adc
or
imul
dec
popa
jmp
(bad)
xor
stos
xor
dec
clc
jne
pop
sbb
add
fild
and
in
cmp
and
ds
xor
and
add
pop
call
sub
cmp
mov
inc
retf
jecxz
mov
or
out
popa
cmp
sahf
shl
div
adc
sub
pop
and
fist
les
pop
scas
shl
inc
cld
push
jecxz
rcr
jmp
jge
mov
or
in
xor
lods
jmp
rcl
add
cmp
repz
cmps
sbb
add
aas
push
iret
pop
rol
or
mov
outs
mov
test
pop
dec
test
push
push
jl
rcl
mov
pushf
clc
cmp
and
cmp
fiadd
add
xor
push
add
push
sbb
outs
jmp
sbb
(bad)
sub
mov
test
retf
das
inc
mov
int3
sbb
and
push
test
outs
push
add
sbb
jno
mov
pop
adc
cdq
test
jge
inc
jg
mov
outs
push
rcl
cmp
jb
int3
jb
inc
mov
imul
xchg
and
(bad)
sbb
cmp
jg
sub
sub
add
mov
jg
sub
sub
add
push
push
push
fst
or
loopne
popf
sub
fst
mov
jae
loopne
clc
pop
inc
pop
es
mov
loopne
rcr
icebp
repnz
or
lea
ja
adc
mov
add
clc
inc
push
jne
sub
and
(bad)
sar
pop
adc
push
sbb
or
adc
or
or
in
xchg
sub
mov
aam
gs
pop
dec
xchg
adc
out
cmp
test
pop
sbb
adc
mov
push
mov
jno
shl
inc
xor
lods
adc
std
and
shl
or
popf
dec
out
adc
sub
pop
imul
inc
cmp
ds
add
mov
mov
frstor
xor
ins
or
adc
daa
jnp
aas
in
ror
mov
lock
enter
push
push
mov
jp
pusha
out
fcom
icebp
in
or
jb
pop
mov
call
clc
mov
in
xor
shl
push
and
adc
pop
neg
push
in
or
mov
or
or
mov
mov
pop
dec
leave
xor
mov
js
push
add
addr16
outs
push
ror
lock
scas
cmps
ins
inc
xor
dec
add
sbb
pusha
add
add
sbb
cli
sbb
xchg
adc
js
xchg
aas
cwde
ins
sbb
xchg
sbb
and
sbb
mov
pushf
mov
repz
jle
lods
sub
mov
scas
dec
push
push
cmp
jb
cmp
sbb
stc
int3
or
jl
mov
sbb
adc
push
mov
loope
jns
nop
cld
mov
cmp
push
std
call
(bad)
fs
mov
adc
and
jb
add
mov
mov
dec
jbe
cmps
or
sbb
call
icebp
pop
lods
test
pop
push
stos
out
jo
rcl
cld
in
bnd
fidiv
adc
jne
sub
test
xchg
cmp
or
(bad)
pop
ja
and
xchg
dec
xlat
push
jb
pop
sub
pushf
add
jo
popf
xor
jmp
and
sar
push
pop
cmps
rcl
and
dec
ja
imul
sub
das
pop
inc
(bad)
pop
dec
imul
inc
jmp
test
mov
loop
icebp
js
test
rol
sub
mov
sub
adc
pop
popa
movs
jmp
jae
adc
sbb
or
jl
add
fisub
repz
aam
jmp
test
xchg
cwde
loopne
add
mov
enter
add
mov
(bad)
fsubr
js
clc
pop
lea
out
add
mov
mov
dec
adc
js
je
add
imul
fisttp
daa
or
inc
fnstenv
inc
and
push
lds
and
adc
sub
pop
add
or
cmp
ror
test
retf
sub
inc
xor
imul
hlt
movs
data16
cmp
pop
cmp
or
add
in
dec
clc
mov
icebp
mov
imul
inc
add
aad
inc
adc
test
lock
pop
push
sbb
arpl
shl
mov
in
xchg
stc
push
push
sbb
retf
lock
and
or
in
clc
sbb
arpl
jnp
mov
dec
clc
cmp
mov
add
lea
add
dec
cmp
cmp
clc
or
or
in
xor
push
dec
push
in
ret
xchg
cmp
adc
cmps
pop
xor
dec
dec
fist
scas
aad
pop
push
fild
inc
pop
loop
jle
push
inc
gs
mov
adc
stos
mov
and
cmp
lahf
adc
sbb
loope
dec
mov
arpl
fcmovnb
add
call
cmps
inc
mov
jbe
add
test
jmp
mov
sbb
push
nop
xor
mov
adc
adc
dec
push
sbb
xor
pop
sub
cmps
mov
add
mov
hlt
pop
in
jle
jecxz
dec
or
popf
adc
mov
cmp
push
dec
retf
sub
js
retf
xor
push
xor
cmp
daa
push
cwde
adc
mov
jns
dec
fiadd
push
sub
mov
and
jle
inc
dec
loopne
cld
hlt
dec
jbe
jbe
xchg
sbb
dec
adc
sub
ret
or
push
adc
or
or
xor
aam
and
mov
jae
xor
ins
ret
fist
pop
lahf
adc
les
inc
dec
pop
cmp
jl
ss
inc
inc
pop
adc
pop
sub
pop
dec
push
mov
pop
bswap
sub
test
jle
push
xchg
sbb
adc
mov
sbb
or
loope
jne
and
test
cdq
ret
add
inc
(bad)
sub
(bad)
push
add
clc
sbb
xor
adc
nop
das
fisttp
sbb
or
(bad)
lods
mov
xlat
inc
lds
sub
inc
pop
pop
or
mov
ins
pop
adc
or
lock
in
fsub
jnp
pop
inc
mov
push
add
daa
push
sub
int3
sahf
cmp
call
arpl
jae
clc
daa
std
ret
mov
in
push
push
hlt
pop
test
lahf
cmps
cmp
pushf
jp
lahf
(bad)
adc
xchg
test
(bad)
push
lock
bound
leave
sub
mov
xchg
xchg
cmc
lea
mov
inc
mov
jae
je
push
mov
pop
adc
cmp
push
cmp
arpl
or
in
call
push
xchg
scas
dec
enter
inc
in
jne
imul
sbb
aaa
nop
mov
(bad)
push
dec
xchg
ja
sub
cwde
add
inc
pop
loope
ja
xchg
aaa
mov
cmp
jo
mov
xor
mov
push
sahf
sti
iret
and
cwde
mov
ret
xor
imul
cmps
inc
push
lea
hlt
adc
mov
push
dec
test
sbb
pop
sub
xor
inc
lea
out
sub
pop
mov
mov
outs
mov
mov
pop
jne
mov
pushf
inc
rcl
mov
aaa
sbb
adc
xor
adc
sar
xor
adc
and
hlt
ss
in
pop
or
xchg
cld
ret
mov
cmp
cmp
cmps
add
xor
outs
jb
pop
imul
push
sub
and
push
dec
js
jle
test
jnp
or
daa
cli
push
mov
cmp
push
cmp
sub
fidiv
das
popa
dec
aaa
add
mov
and
mov
xor
jno
sub
imul
cwde
test
pop
mov
lea
xchg
mov
fist
rcl
jne
cmp
clc
mov
dec
sub
lock
mov
and
mov
inc
daa
mov
data16
pushf
add
add
add
xchg
add
cmps
mov
pop
jmp
dec
loopne
fistp
ret
mov
(bad)
push
idiv
pop
out
and
dec
jne
mov
xchg
cmp
mov
push
push
fistp
test
mov
dec
loopne
stos
in
push
jmp
mov
ret
sub
mov
jb
adc
push
push
sub
jne
stos
add
push
mov
movs
push
into
sub
es
es
push
call
dec
xor
push
cs
cmp
sbb
out
dec
ins
jmp
mov
add
loope
inc
enter
leave
mov
(bad)
and
push
retf
xchg
iret
or
push
fld
cld
dec
jle
sub
cdq
and
xlat
jp
fstp
cmp
push
popa
sbb
pop
fld
sbb
jmp
sub
or
(bad)
pop
scas
ins
fsub
and
push
cli
xor
lock
add
dec
inc
push
imul
sbb
rol
push
test
inc
sub
movs
pop
pop
push
push
add
ret
mov
cmp
push
add
cmp
fstp
inc
mov
add
push
push
sbb
inc
adc
rol
xchg
fs
adc
add
jmp
cmp
xchg
mov
hlt
(bad)
lock
and
and
mov
adc
mov
inc
sti
push
cs
inc
or
inc
add
(bad)
mov
aam
addr16
lea
fwait
adc
aam
lahf
mov
test
mov
pop
test
popa
adc
jg
jo
test
add
fild
test
retf
and
inc
push
test
movs
test
jb
mul
test
ficom
xchg
mov
mov
scas
xor
mov
lods
mov
sbb
adc
das
loope
fsub
xor
inc
movs
jo
(bad)
rol
cmp
call
mov
(bad)
xchg
ins
test
mov
rcr
or
dec
test
popa
ror
xor
fs
shl
dec
(bad)
xor
mov
xor
stos
push
sbb
sbb
and
ss
icebp
mov
leavew
push
scas
out
pushf
out
add
mov
std
int3
sbb
leave
fwait
jae
add
retf
push
bnd
dec
push
push
and
sbb
or
jmp
mov
adc
add
lods
and
add
mov
add
es
xchg
add
test
dec
clc
push
sub
cmps
inc
loopne
sub
sahf
rcl
cmp
enter
pushf
jo
inc
es
mov
push
add
cmp
js
push
ins
dec
das
sub
ret
scas
fs
inc
mov
adc
pop
cmp
jbe
test
inc
adc
push
xchg
cmp
pop
pop
xchg
rcl
xor
test
aam
sbb
sti
or
not
or
mov
repz
je
xchg
test
add
cmc
pop
mov
jne
jle
push
pop
lea
and
mov
inc
retf
(bad)
loopne
xor
jo
inc
or
sti
add
or
xor
jl
push
add
ja
(bad)
push
add
xchg
inc
push
push
inc
loopne
test
fwait
sub
inc
into
push
push
xor
push
mov
and
jae
inc
dec
shl
inc
mov
mov
(bad)
shr
add
repnz
push
mov
dec
lea
das
or
mov
or
hlt
jb
mov
mov
and
addr16
dec
or
jmp
movs
daa
call
(bad)
adc
sub
gs
(bad)
and
iret
push
lahf
xor
loope
mov
or
cld
dec
or
test
aam
mov
jecxz
ins
cmp
iret
imul
inc
in
iret
and
mov
ins
mov
sbb
int3
pop
cmps
loop
jmp
mov
mov
add
jo
loope
adc
inc
rol
retf
push
fisub
xor
xlat
nop
mov
jnp
movs
fst
xchg
cmp
xchg
ror
and
xchg
or
rol
inc
movs
cli
aam
cmp
pop
jmp
icebp
push
dec
cmps
inc
mulps
pop
push
jmp
data16
(bad)
sahf
mov
jp
enter
rol
add
in
rol
iret
xchg
sub
iret
arpl
adc
pextrw
je
add
cmp
pusha
hlt
mov
sar
sbb
sar
adc
lock
sub
sub
add
ins
sub
data16
repnz
jmp
or
je
sub
je
test
mov
cmps
cmp
fisttp
mov
je
arpl
repnz
ret
push
in
outs
mov
retf
mov
push
iret
inc
add
loope
mov
mov
pop
and
jmp
clc
repz
add
adc
add
enter
cdq
push
sbb
(bad)
pop
or
push
inc
add
inc
push
arpl
or
dec
sbb
jo
mov
lods
adc
adc
xchg
sbb
clc
sub
push
push
pop
adc
sbb
rol
mov
out
pop
add
jp
pop
mov
fnstsw
cwde
xor
and
shl
or
mov
adc
movs
inc
clc
adc
mov
int3
dec
inc
jp
pop
xor
mov
xor
sub
mov
add
lods
jmp
xor
mov
sahf
and
mov
mov
push
and
pop
cmps
xchg
adc
js
ins
mov
scas
test
movs
ret
enter
mov
sbb
adc
out
pop
aad
adc
jno
sub
inc
lock
inc
push
jne
inc
adc
cmps
icebp
cmp
jne
mov
pusha
cmp
push
mov
jbe
ret
sbb
pop
addr16
or
sbb
inc
sub
cmp
jmp
dec
mov
fst
(bad)
and
add
push
adc
sub
je
push
jg
cmp
push
add
add
mov
adc
(bad)
in
mov
mov
rol
fldcw
add
or
pop
je
adc
leave
push
bound
ins
mov
jecxz
lods
(bad)
dec
pop
or
mov
leave
hlt
mov
ror
add
pushf
ja
out
push
fist
cmp
shl
mov
inc
je
mov
sub
pop
scas
stc
mov
jnp
ret
or
ret
pop
xor
cli
adc
xchg
idiv
shl
or
(bad)
jmp
ror
les
fiadd
cmp
mov
inc
add
je
push
add
mov
jo
adc
pop
or
add
or
sbb
cdq
fstp
push
jl
add
adc
fstp
jg
test
fidiv
sbb
or
mov
out
mov
ins
nop
cmp
shr
and
dec
fmul
sub
and
adc
and
cmp
pop
adc
dec
jmp
or
cli
inc
jb
es
pop
nop
add
add
xlat
test
jbe
popa
shl
loope
and
jecxz
push
(bad)
out
jne
loope
or
call
ss
out
cmp
je
out
test
and
test
jg
fadd
aam
xchg
pop
cmp
or
cld
lods
lods
daa
mov
jne
xor
punpcklwd
mov
or
sub
inc
add
dec
scas
adc
mov
mov
loopne
inc
xor
popa
pusha
push
cmp
adc
xor
mov
or
cwde
adc
inc
test
repz
or
cmps
nop
retf
(bad)
and
or
xchg
mov
inc
add
jp
add
mov
lea
or
call
add
dec
es
sbb
cmp
mov
fadd
add
(bad)
in
icebp
shl
hlt
out
rcl
cs
lea
ret
movs
lds
jge
ret
test
mov
pop
push
pop
bts
jmp
out
jne
mov
xor
fwait
mov
ins
and
inc
lea
cmp
xchg
dec
mov
or
sub
popa
push
sub
fadd
push
cmp
(bad)
stos
aas
push
or
push
mov
data16
inc
and
clc
xchg
adc
sbb
cmp
sub
and
push
mul
out
sbb
mov
inc
add
sbb
sbb
push
or
scas
xchg
jb
adc
adc
bound
bound
in
jno
or
(bad)
div
or
ss
fcom
inc
neg
outs
mov
clc
push
mov
sbb
pop
mov
xchg
adc
add
loop
sbb
int3
or
scas
adc
sub
in
lock
inc
or
hlt
inc
je
test
repz
frstor
mov
and
(bad)
icebp
(bad)
data16
ja
push
pop
xor
cmp
clc
push
popa
or
push
mov
pop
add
mov
or
and
sbb
stos
and
in
xchg
mov
ja
imul
add
xchg
inc
ret
aas
or
xchg
in
pop
fimul
inc
dec
inc
jecxz
mov
(bad)
jmp
xor
mov
and
add
inc
adc
push
call
xor
fadd
pop
mov
pop
fst
fnstenv
inc
xchg
jne
shl
ret
adc
mov
(bad)
ja
cmps
mov
pop
push
mov
pop
loop
lods
sub
jnp
add
call
jmp
inc
jne
push
lods
add
push
pusha
xor
pop
fwait
push
cmp
add
adc
test
add
fld
mov
dec
mov
or
lods
adc
inc
std
ficom
outs
and
jmp
bsf
cs
mov
or
sub
jne
mov
mov
xchg
in
and
ins
in
jno
mov
mov
cdq
sbb
outs
or
add
(bad)
shr
ins
and
(bad)
fcmovnbe
push
daa
or
add
je
fwait
push
pop
mov
enter
inc
punpckhwd
shl
or
enterw
inc
adc
inc
inc
int3
mov
adc
jmp
or
mov
and
ja
adc
inc
mov
xor
push
jbe
sbb
adc
hlt
or
dec
fstp
aad
and
jg
ret
inc
adc
adc
push
stos
imul
enter
and
adc
fldenv
dec
inc
cs
in
and
cmc
adc
jne
or
imul
or
enter
cmp
push
xchg
ds
ret
push
and
imul
sub
mul
push
pop
jo
inc
in
sbb
pop
push
loopne
sub
dec
cwde
adc
jmp
cmp
retf
push
scas
mov
push
pop
enter
out
xor
sub
ins
mov
or
movs
xchg
sahf
adc
out
jmp
rep
mov
dec
jmp
add
mov
loop
call
lock
movs
adc
pop
nop
js
(bad)
cli
test
je
inc
cdq
add
cli
or
call
(bad)
std
or
fs
xor
out
add
add
imul
retf
pop
arpl
xchg
push
jno
push
dec
jnp
fs
(bad)
aam
loopne
movs
inc
cmp
sbb
idiv
add
std
enter
cmp
or
fs
test
and
movs
nop
es
pop
(bad)
cld
xchg
mov
sahf
or
in
push
into
pop
cmp
fsubr
cld
and
into
(bad)
fs
push
mov
jbe
js
adc
and
mov
cmp
jge
and
je
inc
aaa
mov
add
add
fsubp
out
inc
or
scas
or
adc
inc
xor
dec
sar
sbb
or
or
test
shl
in
and
jge
dec
or
enter
mov
mov
nop
fcomp
mov
mov
imul
push
aam
(bad)
ja
retf
xor
adc
jo
add
add
mov
add
out
mov
sub
cwde
cmps
popa
adc
dec
call
std
add
ror
add
sub
iret
hlt
jmp
jmp
mov
or
shl
gs
sbb
and
or
pop
push
xchg
push
or
loope
jo
xchg
xor
arpl
imul
cmp
add
loope
fimul
sub
add
fistp
dec
mov
imul
add
cmp
jge
cmp
xchg
test
movs
or
mov
aas
jp
inc
mov
sbb
cmp
sbb
jbe
ds
jge
and
xor
mov
xlat
cwde
inc
adc
mov
add
mov
jbe
push
sub
das
sbb
loope
inc
nop
fisttp
jl
jnp
cmp
adc
dec
add
mov
xchg
or
adc
sar
in
push
pop
icebp
cmp
push
pop
xor
rcr
and
int
call
add
es
lock
jmp
or
jno
mov
jmp
push
outs
sub
sbb
add
jmp
inc
lock
fs
data16
add
pop
retf
lea
dec
inc
sub
not
push
dec
jge
push
ret
aas
out
sub
nop
and
xor
xor
mov
test
inc
push
jo
aas
nop
push
leave
or
and
and
jnp
lods
xchg
push
add
cld
push
hlt
cmps
sahf
out
in
in
aam
ud2
and
sbb
jmp
push
cmp
inc
push
repnz
out
out
jp
popf
sbb
nop
push
rol
hlt
sbb
jb
cwde
aas
out
mov
mov
jns
out
js
mov
sahf
mov
jnp
inc
or
push
aam
clc
push
inc
inc
dec
aas
push
mov
sbb
pop
and
dec
mov
sbb
pop
out
jne
push
mov
ret
inc
push
sbb
pop
and
or
dec
les
pop
add
and
add
sub
push
test
sar
lea
push
call
fwait
cmp
sub
leave
mov
enter
jmp
hlt
je
ret
addr16
push
fild
jbe
stc
xor
es
or
fld1
sahf
jbe
ret
cmp
mov
push
mov
lods
and
mov
shr
sti
jle
jns
aas
inc
add
sti
je
lock
or
mov
sub
repz
adc
div
call
and
push
push
jmp
and
jecxz
or
xor
add
adc
adc
and
inc
mov
inc
sub
(bad)
or
dec
xchg
scas
and
ss
inc
addr16
cmc
inc
ins
cmp
push
jo
xor
push
adc
retf
pop
and
or
mov
call
xor
or
push
adc
ins
mov
adc
sti
cmps
cmp
call
pop
mov
arpl
cmp
mov
sbb
adc
sub
add
sbb
mov
add
and
add
push
xor
out
jns
mov
add
outs
adc
add
or
sbb
cmp
data16
and
std
in
dec
xor
ror
sysret
in
dec
test
in
imul
xor
shl
inc
shr
ja
add
bound
cmp
test
inc
sbb
sub
push
mov
xor
cmc
sub
xor
int
add
add
les
nop
mov
mov
cmp
loopne
add
fadd
hlt
pop
(bad)
pop
cmp
adc
jbe
neg
add
loopne
fadd
dec
cld
mov
mov
fnstenv
and
jbe
mov
xor
cmp
xchg
ror
sub
movs
mov
cmp
add
add
fsubr
bnd
out
inc
retf
inc
mov
leave
jmp
sahf
(bad)
and
fiadd
push
or
push
fidivr
pop
xchg
add
movs
movs
ret
add
jo
push
hlt
ror
add
cmp
stos
int3
fcomp
loop
pop
je
adc
outs
jbe
test
mov
push
push
movs
pop
add
and
xchg
(bad)
in
lea
and
add
adc
sub
jg
pop
pusha
imul
add
and
jle
sub
dec
ret
out
adc
push
add
jmp
jmp
cmp
jg
lea
mov
fdiv
in
push
xchg
mov
push
or
jle
adc
in
add
mov
sbb
adc
pop
and
ds
and
mov
mov
xchg
push
add
(bad)
mov
mov
ins
and
pushf
loopne
sbb
jns
rcr
push
mov
and
imul
rcl
(bad)
les
jae
int3
enter
(bad)
call
jmp
sbb
push
in
add
shl
push
inc
jmp
xchg
imul
movs
ins
out
sbb
imul
push
and
int3
push
mov
out
test
call
jmp
out
in
push
adc
movs
push
leave
or
pop
sbb
push
xor
movs
mov
or
lea
pop
push
in
jmp
adc
call
cmc
and
add
push
retf
int3
dec
xchg
lock
pop
enter
fadd
(bad)
int
sub
fwait
cmps
xor
jmp
mov
sbb
ins
cmp
push
mov
jb
lea
push
adc
push
dec
ds
aaa
fcom
add
sub
leave
push
push
and
fiadd
dec
call
not
inc
ret
xor
icebp
add
iret
ror
bound
sbb
mov
dec
adc
fldenv
mov
jle
mov
dec
icebp
adc
in
jle
adc
test
mov
aad
adc
jle
or
sub
add
cmp
xor
inc
ins
dec
mul
mov
xor
mov
mov
add
adc
jecxz
inc
pop
xchg
cmp
ret
pop
pop
add
jbe
stos
sbb
sbb
mov
in
jne
je
test
jle
mov
jb
cmp
push
fcomp
sbb
and
or
or
or
clc
add
retf
and
enter
mov
pushf
xchg
or
xchg
jmp
hlt
outs
xor
or
call
add
neg
aam
pop
and
jle
mov
sbb
dec
bound
add
and
loopne
in
popa
or
mov
ror
in
push
xor
mov
adc
ror
js
push
lea
arpl
add
mov
je
and
or
fsub
fmul
mov
add
sbb
and
test
jns
repz
sbb
xor
xchg
and
sti
dec
cmp
mov
aam
adc
lahf
or
mov
dec
das
push
ret
pop
jl
call
les
ins
mov
xchg
mov
into
repz
sbb
jle
mov
shl
addr16
pop
stc
pop
add
mov
add
fld
inc
retf
es
je
xchg
outs
in
sahf
add
mov
xor
test
push
push
cmp
jns
out
inc
or
or
sub
or
jb
iret
in
add
or
in
jb
or
or
dec
or
or
or
jb
pop
and
pop
leave
xor
push
push
setp
add
adc
not
adc
or
cmp
push
jnp
cmp
enter
int
push
adc
add
adc
sbb
pop
leave
adc
adc
enter
push
pop
enter
pop
pop
and
sbb
xchg
sbb
mov
sbb
and
mov
sbb
pop
push
sbb
out
sbb
push
sbb
sub
xchg
fdiv
sbb
sahf
pop
push
push
inc
neg
mov
add
pop
mov
ret
sar
sub
imul
(bad)
(bad)
(bad)
call
movs
add
or
dec
cdq
(bad)
in
fild
(bad)
mov
push
in
repnz
xor
out
sub
rol
adc
iret
xor
mov
xor
dec
mov
call
mov
adc
and
jmp
pop
leave
xor
jmp
add
push
imul
in
in
dec
fsubp
aad
aad
in
cmp
mov
out
out
xchg
in
cmp
out
or
je
leave
and
lock
and
mov
icebp
das
repnz
enter
adc
repz
pop
and
std
hlt
hlt
xchg
push
jnp
imul
std
cmc
sahf
xchg
stos
cmp
mul
popa
in
mov
sbb
inc
call
jns
scas
cmp
aas
stc
stc
dec
sahf
xchg
sub
cli
cli
das
nop
addr16
sti
sti
fdivrp
rol
cld
cld
je
cld
push
cmps
in
fist
jne
mov
xor
sbb
(bad)
(bad)
xor
xchg
ret
push
nop
adc
ins
xor
sub
shl
adc
pop
ins
inc
adc
jns
or
jecxz
xchg
xor
ja
cmp
push
pop
sub
idiv
mov
pop
xor
aam
out
out
in
and
scas
call
cdq
(bad)
sti
jo
out
inc
mov
dec
jmp
pop
ins
nop
jmp
xchg
daa
in
cmp
pop
push
cdq
or
jmp
xchg
or
aad
imul
in
aad
cdq
cmp
(bad)
cli
or
int
repz
sbb
add
xchg
push
cli
stc
sub
(bad)
imul
div
div
xchg
xchg
clc
cdq
mov
inc
bnd
push
stc
dec
push
cmp
sbb
repnz
scas
ss
xchg
or
cmp
aad
xchg
push
jmp
mov
enter
adc
scas
mov
inc
lods
jmp
sbb
shl
pop
push
and
loope
clc
or
dec
or
or
out
or
mul
loope
xchg
pop
leave
mov
sub
in
jnp
jmp
push
mul
and
not
neg
hlt
imul
out
xchg
adc
into
neg
and
test
scas
not
dec
or
popa
imul
mov
test
jns
mul
rcl
nop
jo
mov
loope
cmp
clc
clc
cmp
jmp
pushf
mov
cmp
and
mov
sbb
fwait
and
cli
hlt
or
ins
loopne
mov
repz
jb
mov
xchg
stos
mov
xor
shl
push
movs
imul
in
loop
pop
hlt
shl
or
cmp
hlt
in
add
repz
leave
and
repz
xchg
cmps
jb
or
and
repz
inc
xlat
dec
(bad)
repz
out
inc
or
in
xor
in
xlat
(bad)
repnz
repnz
inc
or
icebp
leave
sub
repnz
sub
repnz
jb
popa
sbb
add
xchg
cmc
mov
leave
xor
or
mov
jne
cmp
xor
cmovle
sub
adc
or
aad
pop
mov
test
pop
mov
mov
adc
sub
fbstp
push
inc
add
loope
and
mov
cmp
mov
push
mov
jmp
jge
xchg
push
mov
pop
shr
pcmpeqw
addr16
pop
xor
jmp
xchg
inc
and
fimul
test
fldenv
and
ins
mov
movs
add
int
ins
mov
push
push
xor
sbb
sub
fadd
stos
or
mov
ins
sahf
or
add
add
or
xchg
inc
adc
std
or
iret
mov
add
push
loopne
fidivr
out
push
(bad)
lods
jg
cmp
ret
int
leave
push
inc
std
and
adc
dec
add
xchg
dec
pop
pop
add
jbe
fnstcw
loopne
stos
ficom
stos
or
mov
sub
or
enter
push
sub
mov
xlat
mov
adc
faddp
xchg
scas
fldln2
outs
loop
and
sahf
and
sbb
outs
inc
or
jo
cmp
into
push
and
mov
ins
clc
jg
dec
test
sar
sbb
add
movapd
pop
inc
fnstsw
jnp
fadd
enter
lock
repz
xor
and
sbb
fdivr
sar
ror
push
repz
pop
aas
jle
cmp
xor
and
(bad)
or
icebp
push
mov
hlt
push
je
(bad)
adc
loope
mov
adc
add
push
sub
jmp
(bad)
jl
fchs
sahf
out
add
jp
shl
add
ror
ret
(bad)
sub
mov
mov
out
jmp
adc
pop
mov
mov
or
cli
imul
adc
test
fcomp
jecxz
ins
dec
js
mov
lea
xor
mov
or
and
dec
cmp
push
push
sysret
mov
cld
jo
and
aam
cmp
(bad)
and
and
inc
out
add
test
mov
add
mov
test
sub
data16
jne
into
pop
inc
shl
cwde
cmp
pop
mov
inc
xchg
rcr
mov
int3
frstor
mov
ret
sbb
out
jmp
mov
fstp
add
stc
dec
jl
push
pop
inc
xchg
mov
ret
sar
add
mov
out
shl
popa
imul
add
mov
jl
jns
xchg
lock
sar
adc
stc
jbe
mov
or
push
jae
push
xor
int3
or
ja
cmp
mov
add
or
or
add
dec
(bad)
and
dec
push
dec
fsub
retf
mov
sbb
fbstp
jecxz
jb
cmp
hlt
sbb
or
inc
jl
pop
sub
loopne
addr16
retf
arpl
pop
and
fdiv
sub
xchg
inc
cmp
addps
mov
(bad)
scas
sbb
inc
je
mov
bswap
mov
aas
pop
cld
test
jne
push
mov
push
add
ror
adc
movs
push
mov
loope
add
shl
inc
and
xchg
push
sbb
cmps
loopne
loopne
mov
mov
push
xor
and
leave
sub
jne
out
xor
mov
pop
aaa
xchg
jle
inc
or
hlt
xor
push
sbb
mov
xor
mov
sbb
add
shl
popa
loopne
inc
xlat
test
aam
xchg
push
or
je
sub
sub
push
push
pop
fwait
sti
or
sbb
push
push
in
or
add
mov
cmps
xchg
cs
ja
(bad)
push
pop
ficom
std
or
jge
inc
push
ret
push
fidivr
leave
adc
mov
xchg
inc
sbb
cs
push
mov
push
xchg
fdiv
xor
shr
xor
(bad)
cmp
shr
rcr
shr
rcr
or
jne
lock
fisubr
jb
movs
out
shl
cmp
cli
xor
jmp
cmp
add
dec
call
sbb
pop
dec
sbb
adc
fld
add
xchg
inc
sbb
icebp
imul
dec
jb
jg
mov
mov
push
mov
repz
jmp
xor
jl
jg
iret
es
xchg
ja
outs
add
ret
xor
sar
or
mov
mov
lea
push
mov
push
xchg
add
xchg
jo
dec
cmp
arpl
scas
dec
nop
lods
add
ja
pop
dec
je
out
nop
lea
in
neg
push
ins
in
sub
sbb
mov
push
mov
call
lock
lods
rcl
mov
leave
add
dec
or
fiadd
add
mov
loope
inc
jne
mov
inc
test
ja
shr
mov
xor
jbe
jmp
ss
or
add
inc
push
inc
or
add
sbb
cs
int3
push
lds
mov
push
mov
inc
add
inc
inc
add
or
ss
sbb
jl
(bad)
pop
int
sub
test
or
bound
add
xor
push
(bad)
push
imul
into
aaa
enter
or
icebp
call
mov
cmp
inc
inc
imul
sub
mov
and
inc
arpl
cwde
imul
or
inc
test
adc
enterw
adc
xchg
and
mov
mov
movd
(bad)
xchg
and
push
loopne
scas
mov
push
pop
inc
pop
jo
mov
adc
sub
or
wbinvd
lea
adc
mov
or
add
ds
test
jg
xchg
pop
push
jl
(bad)
inc
cld
pop
(bad)
xor
fwait
adc
or
add
lds
das
sub
loopne
add
lea
mov
movs
cmps
shl
pop
adc
inc
xor
push
push
lea
adc
and
xor
inc
mov
dec
mov
cmp
out
adc
inc
or
push
push
jbe
or
sbb
jge
adc
sysexit
stos
sar
jmp
out
test
popf
push
leave
mov
push
adc
add
cmp
add
fsub
sbb
sbb
adc
jne
adc
sbb
xor
adc
int
and
adc
jo
pushf
and
add
mov
cmp
cmp
push
call
pushf
and
int3
jno
sbb
push
sub
(bad)
adc
ret
daa
adc
push
ror
mov
ror
add
and
mov
sbb
imul
mov
fnsave
movs
sub
std
add
push
or
dec
bsf
adc
pop
fnsave
ja
sub
xchg
xor
ins
call
pop
pop
rol
les
adc
adc
mov
or
add
adc
(bad)
nop
pushf
or
(bad)
sar
data16
clc
and
or
jecxz
(bad)
xor
sbb
dec
jmp
add
dec
cmp
cmp
jge
cmp
(bad)
jg
add
jnp
mov
les
and
adc
daa
push
arpl
xor
pop
mov
push
add
pop
jo
iret
and
idiv
mov
int
sub
fcmovb
sbb
add
inc
pop
test
int3
mov
inc
js
mov
inc
outs
mov
arpl
imul
div
adc
jmp
adc
pop
mov
xchg
push
cmp
repz
ret
and
in
jmp
popa
add
les
mov
push
mov
fstp
fucomip
stos
bound
inc
fcomp
dec
(bad)
loop
inc
call
lods
or
add
cmps
fwait
or
fst
out
mov
jbe
pop
das
ins
pusha
xlat
or
js
mov
cmp
ja
pop
push
adc
xchg
add
jae
ss
or
inc
ss
mov
dec
add
iret
aam
push
jl
mov
adc
pop
jbe
push
adc
repnz
sub
rol
cmps
push
pop
mov
inc
les
inc
xor
adc
pusha
or
popa
push
pop
push
lahf
sub
inc
jmp
add
dec
xor
inc
adc
movups
cs
push
repz
or
and
pop
sbb
(bad)
pop
sbb
movs
shr
in
shr
jo
add
cs
jno
pusha
sub
ret
inc
pop
pop
sbb
aam
push
xchg
xor
in
dec
xchg
mov
or
mov
sbb
dec
push
pop
loope
outs
dec
enter
(bad)
cmp
sub
lahf
jo
inc
mov
dec
mov
lods
(bad)
push
outs
sub
jno
xor
cmp
jb
fidivr
pop
add
add
adc
popa
in
sub
sbb
aaa
jge
ja
and
sbb
xor
sbb
ja
leave
mov
jbe
mov
xor
mov
add
es
std
nop
fidiv
lahf
adc
sbb
movs
test
ss
jbe
cmp
jmp
mov
ins
fidivr
or
mov
adc
add
add
xchg
jg
ret
ret
dec
cmp
jmp
mov
xchg
xchg
sub
clc
(bad)
fisubr
test
mov
test
test
xor
lock
pop
es
mov
pop
xor
adc
test
cmp
hlt
ficom
adc
inc
mov
mov
data16
pusha
or
push
inc
int
cmp
xor
add
jge
sub
and
(bad)
cld
lods
dec
mov
sub
or
or
adc
add
mov
cli
xor
rcl
add
cmps
lea
fadd
hlt
adc
imul
mov
adc
jecxz
sahf
inc
push
add
int
mov
mov
cmp
inc
cli
sub
mov
adc
call
nop
or
adc
lock
imul
mov
cmp
rcl
adc
cmp
or
sub
nop
push
pusha
ret
fimul
pop
nop
test
xor
lea
shr
fcmovb
pop
or
mov
xchg
cmp
pop
ds
popf
movs
mov
dec
xchg
xchg
xor
and
dec
sub
xchg
cmp
push
scas
pop
call
jecxz
inc
jg
mov
mov
mov
or
xchg
or
add
ret
push
inc
or
sbb
shr
leave
inc
cmp
push
lods
test
xchg
xor
jno
xchg
and
cmc
pop
or
mov
cmp
pusha
sub
mov
test
lods
or
sar
sub
mov
add
movs
sub
jne
aaa
cmp
mov
adc
fs
mov
push
stc
sub
and
adc
mov
adc
add
or
push
mov
not
pop
es
fcmovnb
adc
(bad)
das
(bad)
mov
jg
or
inc
gs
lock
dec
inc
xchg
sbb
pusha
and
test
pusha
adc
test
jo
out
in
xlat
pop
sub
mov
sub
sub
mov
xchg
or
pop
and
rol
retf
fst
push
or
inc
pop
out
test
push
out
mov
into
lods
mov
pusha
add
sub
imul
pop
push
frstor
(bad)
loopne
jb
inc
mov
add
aad
movs
mov
inc
xor
add
xor
dec
push
fcom
mov
mov
test
mov
sub
call
push
out
sub
inc
dec
cmps
jae
out
add
add
push
cdq
ror
pop
and
sbb
push
ins
and
sahf
rcr
fdivr
fdiv
mov
mov
sub
std
and
push
push
cmp
outs
sbb
out
loopne
test
push
aad
fwait
and
push
test
jmp
(bad)
cmp
imul
mov
frstor
mov
inc
sub
xchg
cs
fstp
pop
sbb
fisub
pop
pop
test
mov
in
icebp
xchg
mov
mov
loope
js
pusha
mov
inc
push
call
shr
inc
pop
jl
sub
and
lods
dec
xchg
jo
sub
cwde
lahf
rol
fsubr
dec
dec
mov
mov
push
and
cmps
ds
test
(bad)
adc
dec
test
stos
ror
mov
pop
ror
call
imul
inc
dec
sub
ret
adc
inc
xchg
inc
push
std
cld
stos
or
dec
inc
sub
and
das
mov
mov
pushf
push
sbb
inc
jne
ss
dec
add
inc
push
add
lods
cmp
fdivp
cdq
shl
dec
lds
xor
xor
cld
mov
sbb
popa
adc
inc
ret
dec
(bad)
sub
mov
xchg
adc
push
ret
and
rcl
stos
ins
adc
add
xchg
xchg
mov
push
jp
pushf
push
sahf
out
scas
movs
mov
mov
add
mov
mov
inc
movs
pop
int
cdq
xchg
sbb
movntps
and
enter
test
add
lock
xor
add
gs
div
lahf
out
dec
adc
push
and
jg
push
dec
and
mov
jg
outs
inc
or
jbe
jg
(bad)
jle
xor
jg
jg
jg
jo
fiadd
out
or
in
loop
jne
and
in
pop
add
mov
ffreep
dec
or
sbb
lea
inc
out
ficomp
cmps
fnstsw
push
mov
xor
pop
or
repz
je
xor
lahf
cs
inc
push
neg
pusha
loope
mov
shl
fadd
push
inc
push
mov
inc
test
dec
pop
jp
jo
call
into
adc
(bad)
lds
add
(bad)
hlt
add
or
mov
adc
or
push
or
jp
push
adc
ror
push
adc
xor
rol
mov
shl
inc
mov
adc
xor
fld
stos
add
stos
clc
pop
sub
mov
jno
adc
lea
jmp
sbb
(bad)
lods
sbb
mov
nop
add
jecxz
mov
mov
add
jg
hlt
mov
push
stos
and
shl
lea
and
aam
repnz
jle
mov
mov
or
xchg
(bad)
popa
mov
fiadd
je
(bad)
(bad)
jbe
loopne
faddp
and
push
gs
cmp
push
cmp
push
push
add
or
or
nop
jo
outs
mov
cli
out
push
mov
push
sbb
lods
jmp
jbe
and
and
cmc
jo
mov
pushf
adc
mov
clc
push
es
lahf
push
(bad)
out
dec
sub
mov
cmp
into
pop
and
enter
and
cli
sbb
and
or
xchg
cld
inc
sub
scas
and
jb
mov
shl
pop
pop
inc
stc
inc
jo
jg
and
push
xor
hlt
dec
sbb
and
inc
sub
jne
in
cli
push
jno
je
call
jno
mov
pop
inc
push
add
push
nop
inc
sub
mov
mov
jno
jnp
(bad)
imul
ins
xchg
sub
add
dec
test
cld
sub
jbe
add
adc
mov
clc
jmp
sub
mov
adc
sbb
cs
or
add
call
push
mov
in
inc
shl
add
sub
mov
aam
mov
call
xchg
cmp
into
std
movs
cdq
dec
or
jmp
lock
(bad)
je
jnp
sar
push
and
scas
jbe
retf
inc
lea
sbb
aas
rol
inc
ret
in
jae
out
push
push
nop
ror
xchg
or
rol
test
or
inc
test
mov
leave
xor
call
or
add
sub
jmp
loopne
cmp
or
call
jmp
sbb
jo
or
mov
push
je
mov
mov
inc
mov
or
and
dec
dec
fisttp
mov
add
je
sub
inc
sub
jle
sbb
xchg
push
idiv
mov
mov
sahf
pop
inc
xchg
mov
test
add
add
or
jnp
or
xor
dec
lea
mov
xchg
rcr
loopne
add
or
cs
mul
out
sub
push
mov
loop
adc
ds
or
int
adc
inc
mov
or
mov
loopne
sbb
das
mov
sbb
movs
inc
stos
and
cmc
jne
pop
push
nop
push
aam
cmp
inc
add
cmps
ins
jmp
jmp
rcr
push
or
rcr
sub
jge
dec
std
xor
inc
sub
inc
jmp
int
out
icebp
xor
dec
sbb
mov
cwde
pusha
jmp
add
ret
or
push
mov
fwait
jno
daa
mov
xlat
mov
popf
xchg
fld
jmp
pop
and
mov
outs
test
jp
xor
retf
push
mov
push
and
jmp
inc
das
gs
push
mov
cld
xchg
add
and
lea
push
cmp
icebp
lock
outs
aaa
cmp
ret
pop
adc
ret
adc
mov
movs
sub
pop
mov
test
xor
inc
sbb
mov
scas
mov
mov
(bad)
adc
ret
outs
(bad)
call
xchg
dec
pop
mov
ss
iret
dec
mov
call
inc
mov
out
pushf
mov
sbb
inc
mov
jg
jo
xchg
test
dec
fimul
into
cwde
mov
or
mov
lea
jg
pop
add
sar
or
imul
cld
ds
add
add
mov
jo
leave
jo
hlt
inc
or
(bad)
mov
push
mov
xor
push
cmp
cld
and
pop
or
retf
add
jo
in
add
mov
inc
jo
and
or
jo
or
shr
popf
test
(bad)
ins
push
loopne
outs
jmp
xlat
and
jmp
pop
adc
ret
add
mov
rcl
mov
mov
mov
ds
and
xor
inc
add
xchg
enter
fbld
adc
dec
mov
add
jmp
nop
out
push
(bad)
rol
ins
sub
ficom
cwde
das
mov
lea
mov
rcl
mov
cmp
inc
daa
imul
adc
inc
or
add
stc
or
invd
sub
jo
cmp
add
push
bound
jo
scas
arpl
in
cmp
or
std
in
ret
sbb
clc
lock
or
xor
sbb
xchg
aam
cmp
jns
ret
loope
inc
clc
in
leave
dec
mov
jno
outs
add
xor
shr
stc
mov
dec
or
mov
cmp
add
rcl
popa
neg
sub
and
jb
cmp
js
pop
jb
dec
pop
cmp
dec
and
inc
add
push
mov
sahf
nop
xchg
adc
cld
dec
dec
test
jns
ins
and
test
cmp
scas
adc
add
pop
sti
push
fadd
aaa
retf
or
shr
loop
and
jnp
and
push
imul
jmp
je
jg
imul
add
pop
loopne
std
test
cmp
loop
cmps
popf
and
mov
and
or
adc
pop
mov
inc
test
retf
in
or
les
ins
enter
xchg
fs
jbe
ins
pop
out
push
lds
je
xor
cmp
and
popf
test
sbb
adc
mov
int3
cmc
push
xor
jp
cmp
inc
inc
xor
jmp
sub
in
inc
inc
jb
enter
pop
adc
jnp
pop
(bad)
jl
lahf
mov
cmp
pop
neg
or
xchg
xor
push
xor
jae
or
pop
mov
pop
pop
sbb
cmp
mov
inc
popa
mov
xchg
ja
sbb
and
sbb
fcomp
or
leave
ja
adc
fild
jecxz
inc
cld
pop
clc
mov
mov
and
repnz
clc
mov
sub
push
adc
daa
lds
push
add
cmp
jecxz
int3
mov
cwde
in
push
or
jp
loope
test
popf
(bad)
add
mov
sbb
loopne
test
cdq
or
and
mov
or
and
es
arpl
test
add
sbb
lods
cmp
movs
inc
cdq
adc
jbe
adc
adc
inc
(bad)
test
ficom
cwde
pop
xor
add
lea
sbb
ja
sahf
xchg
repnz
pop
dec
mov
push
paddsw
imul
(bad)
adc
(bad)
push
dec
clc
loope
sub
push
push
jne
mov
dec
jmp
jns
adc
or
xchg
adc
inc
xchg
cli
add
dec
xchg
add
mov
pop
fdiv
push
push
mov
add
and
jmp
jmp
clc
cs
xchg
jecxz
fnstsw
inc
lods
dec
(bad)
push
inc
icebp
jmp
cmps
dec
pop
xlat
es
test
sub
cli
cbw
mov
int3
adc
outs
or
(bad)
or
cmc
dec
loope
push
mov
push
imul
sub
cwde
mov
mov
fnstsw
or
xchg
retf
in
enter
les
cmp
inc
(bad)
push
xchg
fsub
imul
xor
imul
push
xchg
fld
push
or
test
push
dec
pop
loope
mov
aad
push
cmp
inc
movs
mov
pop
mov
pop
push
fwait
push
das
loop
(bad)
lea
push
mov
sub
fbld
mov
mov
or
mov
add
or
mov
popf
shl
mov
dec
inc
and
sub
hlt
mov
rcr
mov
add
mov
ins
or
mov
push
mov
adc
add
dec
and
cs
add
mov
sbb
or
or
int3
pop
xchg
lock
cs
push
je
or
je
or
mov
cmp
push
sbb
mov
ret
shl
call
push
not
outs
leave
mov
adc
ds
mov
lea
neg
sub
imul
or
retf
add
adc
xor
push
mov
dec
call
mov
call
or
xor
call
out
or
daa
daa
lahf
add
cmp
jne
inc
sub
scas
pop
inc
or
adc
and
add
jne
jo
jne
enter
mov
cmp
inc
sbb
inc
xor
pusha
inc
fs
imul
outs
ss
jno
dec
push
js
pop
push
test
retf
push
mov
and
add
mov
out
pop
je
shl
loope
fistp
pop
push
jmp
pop
inc
in
test
fiadd
loope
inc
push
clc
fisubr
les
iret
sbb
je
je
and
jp
js
or
cmp
pop
in
ret
pop
hlt
shr
adc
iret
xor
pop
enter
add
cmp
mov
xor
shr
push
shl
fsin
push
adc
loopne
inc
mov
mov
dec
or
adc
add
movs
and
(bad)
inc
adc
and
rcl
xor
push
mov
jg
or
daa
lea
inc
cld
lods
xor
adc
movaps
or
mov
cmp
adc
add
movs
mov
aaa
lock
je
pop
dec
mov
cmps
jl
xchg
pop
push
sub
add
mov
inc
repz
or
fst
loope
sub
daa
sub
and
ret
fsubr
mov
imul
ret
div
idiv
adc
or
ins
xor
add
std
aam
add
icebp
or
sbb
les
(bad)
or
fcomp
sub
adc
xchg
jecxz
inc
inc
mov
je
pop
and
add
test
jl
add
add
push
push
mov
popf
hlt
push
cmps
add
cmp
loopne
mov
dec
lds
sub
push
push
(bad)
in
or
addr16
and
jle
dec
ja
push
dec
cmp
add
test
lods
mov
addr16
arpl
adc
mov
pop
(bad)
and
pop
loope
loopne
xchg
bound
cmp
push
adc
icebp
sahf
(bad)
dec
or
xchg
lea
xlat
clc
arpl
mov
xor
mov
out
pop
es
sbb
retf
mov
pop
cmp
shr
inc
push
sbb
adc
icebp
popa
xchg
cmp
push
in
test
ins
mov
outs
jp
and
dec
or
pop
mov
jo
dec
daa
add
ror
adc
adc
mov
fs
test
cmp
shr
aad
dec
add
jmp
jno
fst
pusha
lods
adc
add
xchg
loope
sbb
adc
push
push
xchg
sub
inc
or
mov
sub
cdq
mov
dec
sbb
xor
mov
ret
cmps
nop
push
movs
movs
cmp
push
cmp
add
and
sbb
mov
or
jne
and
add
or
ss
add
cmp
aam
cdq
loopne
test
push
stos
int3
stos
ins
cmps
xchg
ret
mov
push
stc
cmp
bt
lea
sub
inc
das
ficom
pop
sub
(bad)
int
lock
je
inc
cld
push
pusha
ficom
adc
and
dec
data16
jb
mov
ss
sti
mov
jmp
inc
add
enter
sbb
loop
cmps
add
xchg
pop
mov
sti
add
cmp
or
adc
push
mov
int3
mov
ja
mov
pop
mov
xlat
sub
dec
and
daa
lock
lock
movs
(bad)
mov
xchg
or
sbb
pop
popf
pop
leave
int3
sub
or
mov
fldz
int
add
mov
mov
mov
mov
jecxz
les
push
mov
jno
xor
mov
ficom
jnp
jo
cli
jo
sub
retf
adc
sti
jne
cmp
hlt
push
nop
inc
imul
cwde
or
add
inc
jl
popa
shr
dec
add
repnz
je
imul
add
pop
arpl
adc
fbld
mov
ficomp
xchg
std
push
push
or
xchg
mov
(bad)
push
xor
fldcw
test
jo
cmp
push
cmp
mov
sahf
out
cmps
repz
cmp
icebp
call
les
mov
mov
and
push
scas
loope
loopne
push
loopne
push
push
in
test
sub
sub
mov
fstp
(bad)
xchg
popf
aam
mov
data16
popf
enter
clc
mov
mov
add
dec
add
pop
xor
fsubr
cld
xor
mov
or
loopne
adc
add
pop
js
or
dec
inc
lea
(bad)
cmp
in
mov
sub
jmp
mov
add
call
cs
mov
add
xchg
push
add
ret
push
sbb
mov
cmps
adc
sbb
push
sub
inc
dec
fdiv
mov
data16
push
jb
es
push
and
hlt
add
xor
add
les
sub
or
cmp
sub
add
pop
sub
outs
dec
mov
shl
popf
push
cmps
lea
push
dec
ss
addr16
inc
loopne
sbb
pop
call
movsx
mov
push
data16
sbb
lahf
ins
loope
mov
mov
adc
je
retf
rcr
pop
pop
fadd
cmp
sub
lea
sub
(bad)
or
pop
inc
sar
add
stos
mov
sbb
adc
out
in
ds
and
push
xor
mov
lock
and
aas
push
adc
sub
xlat
and
push
outs
mov
push
or
ss
and
and
out
jb
dec
cld
pop
call
mov
and
xor
je
add
jne
push
and
inc
icebp
sub
test
ds
push
outs
push
imul
jnp
mov
test
jmp
and
jle
shl
jo
or
out
xchg
push
add
je
mov
push
das
pop
pop
movs
test
pusha
jg
rol
push
pop
pop
dec
js
push
jb
push
push
sti
pop
push
jbe
retf
fmul
mov
retf
in
mov
xchg
out
loopne
aam
imul
imul
pop
outs
mov
push
popa
cmp
sub
movs
pop
ret
shr
in
inc
dec
cmp
scas
mov
cmps
les
repz
es
sar
cdq
inc
loopne
dec
pop
leave
push
mov
ret
call
ret
dec
or
inc
sti
or
cs
aam
xchg
adc
sub
xchg
fldpi
xchg
enter
pop
add
dec
retf
in
xor
nop
stc
mov
add
sti
pop
mov
xor
shl
(bad)
sub
mov
xor
mov
mov
mov
hlt
nop
arpl
hlt
mov
stc
clc
dec
je
or
inc
mov
lods
xchg
mov
sti
movs
dec
icebp
outs
loope
ins
jne
pusha
sub
mov
and
pop
push
sub
mov
(bad)
mov
inc
xor
movs
push
inc
retf
cs
cmp
adc
outs
and
imul
test
mov
pop
mov
call
sahf
mov
ror
add
daa
iret
sub
rcr
jle
int3
sti
push
sub
or
or
inc
inc
xchg
cwde
mov
inc
xor
jp
movs
hlt
lea
rcr
pop
jmp
xchg
and
out
xchg
iret
arpl
test
jp
call
jp
sti
mov
test
in
sub
pop
mov
imul
xchg
or
push
adc
or
pop
jge
mov
dec
pop
jne
add
push
ins
cmp
mov
cmc
jmp
push
xchg
add
xchg
or
loope
dec
mov
add
test
aam
test
mov
inc
mov
sti
pop
jmp
adc
mov
mov
fld
dec
push
pop
xor
or
shr
xchg
cld
div
setp
test
xchg
push
xchg
mov
pop
loopne
jno
loope
cmp
stos
pop
mov
sti
adc
jns
xchg
push
jb
sbb
mov
mov
add
cmp
(bad)
mov
push
(bad)
repnz
(bad)
fisubr
xor
(bad)
loopne
dec
push
mov
gs
enter
arpl
inc
pop
jns
call
jmp
mov
xor
push
rol
mov
and
pop
cmp
pop
jmp
hlt
sti
aaa
mov
hlt
sti
ret
and
ret
hlt
sti
sub
sbb
nop
sti
xchg
pop
ret
cmp
sti
jae
leave
pop
mov
popf
lea
clc
sti
push
jb
test
sti
test
inc
dec
xchg
push
iret
int
sti
adc
sti
dec
push
xchg
push
imul
and
stos
push
daa
or
jno
shl
movs
loope
loop
mov
pop
data16
push
loope
ds
sub
into
xor
ret
dec
xor
push
leave
loopne
loopne
sbb
scas
mov
stos
adc
rol
(bad)
clc
sti
fidiv
nop
daa
clc
sti
jnp
repnz
push
(bad)
hlt
sti
clc
sti
popf
mov
jmp
(bad)
mov
out
test
sbb
sbb
push
and
sti
dec
out
in
mov
stc
cmp
sar
sti
in
sti
lock
pop
out
lods
adc
addr16
shl
lock
jmp
dec
mov
jmp
stos
push
xchg
stos
mov
mov
hlt
mov
and
jne
sub
retf
xchg
and
int3
mov
pushf
test
sub
sti
lahf
mov
add
sub
sub
push
mov
add
out
push
cmp
mov
mov
lea
push
lea
in
or
and
dec
adc
pop
inc
mov
fsub
or
xchg
shl
int3
adc
movs
sbb
dec
bound
scas
fist
retf
pusha
repnz
cmp
or
in
shl
inc
aam
mov
push
add
popa
push
adc
jo
add
dec
stc
or
jle
dec
mov
cdq
fst
add
add
jmp
icebp
sub
loopne
mov
out
inc
mov
mov
je
gs
fucom
sub
(bad)
sti
inc
aas
mov
mov
jle
xchg
xor
and
addr16
lods
jae
xor
jge
pop
pop
movs
add
jmp
cmp
in
push
jmp
lock
and
mov
dec
pop
ss
push
add
mov
pop
mov
pop
arpl
sahf
es
gs
sar
mov
mov
mov
pop
and
add
fsubr
fwait
loope
rcr
jp
call
pop
push
ror
(bad)
inc
aam
stc
and
push
jecxz
add
jb
cmp
je
mov
xchg
jb
push
push
push
and
inc
and
fprem1
inc
mov
pop
or
jge
cmp
dec
cs
aas
mov
ret
inc
inc
xor
je
and
adc
movs
psubsw
add
ret
dec
retf
mov
dec
ret
sar
ds
movs
dec
adc
cmp
ret
je
pop
add
jmp
sub
(bad)
outs
(bad)
push
call
or
push
out
ror
add
fisttp
data16
clc
cmp
jne
mov
jmp
adc
cmps
je
xlat
outs
jo
push
fdivr
adc
inc
add
or
or
mov
cwde
es
xchg
mov
adc
mov
or
jmp
adc
aam
xor
pop
js
or
aaa
jle
mov
mov
mov
mov
push
xchg
sub
adc
movs
xor
shl
popa
pushf
adc
sub
ror
mov
out
lock
lds
popa
mov
push
jbe
jne
imul
adc
push
pop
inc
jo
jge
adc
je
sbb
cmp
mov
nop
sbb
sbb
(bad)
fs
shl
pop
js
xchg
mov
jl
or
mov
mov
push
add
rcr
push
add
addr16
enter
jp
hlt
out
(bad)
xchg
push
movs
out
idiv
pop
les
adc
mov
imul
loopne
mov
sbb
pop
fsubr
pop
(bad)
mov
xchg
xor
ret
cdq
sbb
and
pop
add
xor
xchg
inc
cmps
lahf
add
fcom
iret
int3
inc
xlat
imul
dec
es
xchg
fsub
push
shl
sbb
lea
stc
jmp
rol
add
fidiv
aam
push
inc
add
add
and
sub
jmp
and
pop
and
xchg
sbb
int3
push
ins
jp
mov
pop
adc
sti
mov
mov
imul
dec
and
and
leave
call
mov
sub
outs
push
popf
clc
or
pop
or
repnz
inc
fucomp
sbb
adc
jns
cmp
add
call
jmp
mov
or
pop
clc
jmp
ud0
xchg
out
bound
push
out
xor
shl
retf
lods
jp
retf
mov
cld
je
push
mov
jmp
fisub
(bad)
xor
inc
mov
fidiv
repnz
mov
or
mov
sbb
push
test
adc
jbe
push
xor
cmp
popa
pop
push
push
push
push
stos
push
or
bound
fs
xchg
pusha
pop
push
jne
pop
mov
push
push
adc
push
sbb
mov
push
ins
pop
push
mov
or
dec
cld
aas
add
push
mov
or
add
push
pusha
dec
add
jnp
xchg
sar
js
push
das
stos
dec
dec
enter
or
ins
mov
or
and
push
jle
jge
fistp
loopne
and
bnd
ret
test
push
jle
mov
cmc
aad
add
push
add
push
or
pop
out
jne
bound
int3
add
scas
sbb
lds
and
lods
inc
ret
pop
and
icebp
nop
(bad)
aaa
push
idiv
outs
mov
and
sbb
mov
inc
add
mov
inc
dec
mov
pop
in
cmp
adc
in
mov
pop
push
sub
in
in
(bad)
sub
pop
pop
call
loopne
leave
or
lods
adc
loopne
jo
daa
xor
cmp
into
and
imul
sbb
in
mov
xchg
jb
cmp
or
ret
addr16
jns
jmp
cmp
daa
in
inc
enter
cmp
cmp
ja
push
push
jbe
daa
jne
push
je
cli
ja
idiv
or
call
pop
dec
mov
pop
jmp
mov
xchg
mov
lea
inc
cmp
jg
inc
arpl
rcr
dec
adc
bound
or
xchg
js
sub
push
add
call
call
push
std
and
pop
mov
add
daa
pop
jmp
push
or
cli
add
inc
fmul
sub
aas
inc
test
rcr
or
(bad)
stc
lods
test
and
sub
div
xchg
sar
dec
mov
push
daa
inc
mov
sub
mov
inc
xchg
sub
mov
jnp
adc
jno
or
push
mov
sqrtps
js
shl
adc
pusha
shl
inc
lods
or
cmp
sub
push
pop
mov
fucomip
aaa
dec
inc
fdivr
add
or
pop
sub
ret
push
push
pop
and
jg
push
or
pop
jo
and
mov
jae
loope
sub
dec
sbb
pop
xchg
lods
push
add
or
cdq
dec
pop
adc
pusha
in
mov
cmps
mov
push
pop
sub
cld
or
or
ins
or
pusha
mov
retf
outs
mov
dec
in
inc
push
jne
xchg
cmps
mov
sti
popf
fcom
and
je
inc
mov
xchg
les
mov
mov
popf
dec
je
inc
aad
(bad)
mov
je
push
xchg
add
or
pop
or
fwait
stc
sbb
sub
lock
in
inc
xchg
jg
outs
cdq
aas
sub
push
mov
pop
pop
cmp
(bad)
adc
mov
cmp
das
push
inc
or
mov
pop
or
enter
push
pop
imul
push
and
push
sbb
test
cmps
cmps
aam
add
loopne
ret
retf
popa
xchg
push
inc
(bad)
popa
xchg
jp
dec
lods
(bad)
je
or
test
or
das
dec
je
dec
jne
(bad)
arpl
fadd
mov
cmp
lea
pusha
addr16
xor
push
mov
mov
js
xor
mov
dec
jmp
inc
xor
xor
in
(bad)
xchg
fstp
je
or
push
outs
mov
dec
js
dec
pop
jne
jmp
mov
mov
je
or
ja
sub
and
mov
sub
movs
sub
lea
lea
push
sub
and
adc
mov
jp
inc
adc
adc
and
addr16
push
imul
fild
or
mov
inc
jne
adc
and
push
je
mov
ret
cmp
or
(bad)
jnp
popa
scas
adc
mov
test
mov
aad
sub
jmp
mov
scas
repnz
movzx
add
jne
fisttp
call
pop
or
jne
mov
movs
dec
dec
lock
mov
inc
cld
cmps
in
mov
add
push
(bad)
xchg
add
adc
stc
ins
sub
mov
sub
int3
adc
or
sbb
mov
call
mov
push
add
jmp
mov
xchg
imul
js
dec
lea
or
sub
sub
pusha
pusha
(bad)
int
xchg
sub
and
cld
cmp
mov
jmp
lahf
sub
mov
mov
or
add
fs
mov
ss
cmps
and
sbb
repz
shr
mov
mov
out
push
add
call
add
ror
rol
dec
rcr
pop
les
xchg
xor
or
or
push
popa
mov
mov
sbb
gs
adc
dec
add
js
xor
and
adc
or
mov
or
das
xor
push
adc
pop
shl
sbb
xlat
dec
adc
add
fistp
addr16
pop
adc
sbb
sbb
cmp
fisubr
dec
je
gs
or
inc
mov
sub
stos
xchg
push
pop
mov
adc
imul
int3
and
push
jle
and
pushf
pop
cmp
or
pusha
stos
xor
push
adc
sub
or
ds
outs
lahf
push
mov
jne
and
jl
outs
sub
ror
or
jne
cmp
sbb
add
sub
mov
add
inc
shl
mov
fadd
iret
test
aam
add
push
in
ret
sbb
sbb
mov
sbb
pop
jmp
push
dec
and
mov
push
dec
push
cmp
cmp
and
pmaxsw
pop
adc
test
loop
fs
adc
imul
mov
lods
inc
ror
aaa
adc
mov
and
nop
cli
and
xor
cmp
cmp
stos
dec
pop
dec
add
loop
test
pop
std
add
adc
in
pop
stos
inc
mov
mov
cmp
mov
and
adc
pop
dec
(bad)
imul
pop
loope
adc
pop
je
inc
cmp
jae
mov
ror
xchg
mov
cmp
mov
add
add
loop
iret
xor
mov
shl
test
xor
fmul
sbb
jle
test
xor
mov
test
xchg
add
adc
sar
fnstcw
add
pop
loope
xor
pop
(bad)
outs
call
lock
lds
sbb
adc
dec
aam
push
hlt
cs
add
sub
sbb
and
scas
sub
jne
dec
call
push
or
dec
inc
push
mov
es
push
jecxz
dec
fdiv
xchg
addr16
xchg
scas
or
push
push
imul
fld
cdq
jmp
xor
jge
add
pop
jg
mov
mov
xor
aaa
jmp
leave
scas
rep
jb
adc
cmps
sub
arpl
add
pop
and
pop
xchg
js
mov
and
adc
cmp
jne
pop
add
add
add
sbb
add
imul
sub
add
shl
cmp
les
std
and
movs
rol
(bad)
pop
add
repnz
fist
dec
in
inc
pop
stos
popa
xchg
xchg
cmp
mov
add
mov
(bad)
xor
jp
dec
xchg
repnz
add
sbb
je
pop
mov
pop
mov
bound
pop
out
test
rol
neg
add
mov
xchg
ds
adc
lods
cmp
and
fsubrp
xor
daa
or
pop
shl
mov
xor
jecxz
dec
dec
inc
loopne
imul
sub
je
neg
movs
jecxz
ror
and
shl
jne
lods
aas
sbb
dec
inc
sbb
fdivr
int3
adc
add
jmp
jp
xor
mov
dec
cmc
mov
and
jo
mov
ds
xchg
pop
xchg
cdq
(bad)
out
cmp
leave
sub
inc
popa
enter
dec
cmp
jne
cmp
or
call
push
pop
outs
push
lods
lock
gs
ins
or
inc
out
jno
loope
inc
cmp
jae
add
or
inc
int3
jbe
dec
imul
mov
xchg
xor
sub
or
push
jb
das
imul
sub
xor
add
sub
cmp
cmp
jne
aam
mov
mov
mov
outs
leave
outs
pusha
or
add
lods
mov
mov
es
dec
jmp
lea
mov
and
or
retf
push
dec
or
not
dec
loopne
or
xchg
bound
adc
push
push
inc
aam
dec
cld
jno
loop
cmps
push
pop
inc
push
pop
and
add
(bad)
fnstenv
xor
push
jne
cmps
test
ins
mov
or
jo
cmp
gs
and
and
mov
ja
and
adc
retf
pop
cwde
sbb
push
inc
dec
pop
ror
xor
pusha
sbb
sbb
xlat
push
out
pop
pop
out
mov
aas
mov
ds
dec
fdivr
cmps
push
mov
std
mov
data16
jl
inc
adc
xchg
(bad)
pop
pushf
and
mov
cmp
inc
mov
sbb
mov
cmp
aas
push
push
push
or
je
loope
push
add
mov
mov
mov
jmp
dec
out
mov
or
mov
je
call
xor
iret
sti
jg
out
push
cmp
ja
add
cmp
adc
(bad)
cmp
retf
cmps
add
adc
dec
or
add
(bad)
sub
cmps
nop
and
pop
cld
shr
adc
inc
push
nop
or
(bad)
mov
jge
add
mov
or
adc
jae
cmp
adc
mov
and
xchg
push
add
fcmove
dec
pusha
call
ins
loopne
test
pop
mov
and
mov
bound
cmp
jge
sbb
cmp
adc
cmp
in
mov
pop
sub
sbb
test
lea
ds
xchg
in
xchg
inc
mov
cmp
push
cmps
jb
cmp
je
call
adc
loopne
sub
jmp
rcl
pop
add
push
test
or
popf
add
rcl
adc
push
mov
adc
push
add
or
add
add
inc
jbe
and
mov
jge
push
xor
mov
pop
jo
adc
leave
call
lea
jmp
mov
xchg
int
popf
ins
inc
push
je
or
mov
hlt
adc
inc
adc
adc
enter
xor
shl
ins
sbb
mov
inc
push
js
push
sub
adc
mov
add
add
pop
movs
xor
jbe
icebp
sbb
dec
popf
in
dec
movs
xor
lods
clc
hlt
xchg
push
sbb
jmp
pop
sar
shl
ret
or
add
bnd
or
test
or
loopne
je
adc
pslld
js
ret
jge
inc
ss
mov
mov
rcr
pop
or
test
pop
add
xchg
(bad)
jg
mov
fdivr
(bad)
jle
inc
clc
out
dec
sub
je
shl
call
push
pop
repnz
(bad)
sti
jg
jg
sbb
nop
pusha
in
or
adc
mov
outs
adc
les
fsub
or
es
xchg
retf
loop
inc
outs
scas
and
mov
mul
mov
loop
inc
push
int3
fistp
ins
jne
scas
popa
fadd
outs
xlat
pop
and
cmp
and
adc
fstp
cmp
cmp
pushf
sub
sbb
jo
dec
jae
push
rcr
jmp
xor
sbb
shl
ror
loope
cmp
bnd
(bad)
dec
dec
(bad)
lea
xchg
mov
mov
in
leave
movs
test
mov
cmp
popf
in
cld
mov
in
dec
mov
pop
sbb
or
(bad)
fist
add
aaa
xor
in
hlt
fadd
mov
add
add
cs
aaa
fnstenv
mov
or
dec
lods
daa
fnop
add
xacquire
and
movs
jb
fwait
in
out
push
repnz
xor
les
sti
rcl
movs
inc
pop
pop
adc
js
sbb
test
add
and
mov
push
loopne
jp
or
iret
cdq
out
(bad)
retf
cmp
cld
pop
jl
les
(bad)
jp
jne
mov
stos
sub
add
sub
jecxz
(bad)
mov
out
dec
mov
inc
dec
inc
push
add
inc
jb
loop
mov
mov
in
leave
and
and
repnz
push
loopne
enter
inc
mov
ror
or
jns
mov
int3
and
adc
daa
jg
es
ror
pushf
into
sbb
inc
sub
or
hlt
es
push
mov
cmps
mov
sbb
inc
aas
xchg
inc
pop
aaa
mov
div
ror
push
jb
fstp
fcom
and
loopne
pop
enter
push
cmp
fcmovnbe
xchg
daa
add
or
rcr
repz
(bad)
add
fsub
aam
dec
xor
jle
(bad)
push
jns
dec
loopne
jne
add
mov
in
jb
jle
inc
inc
scas
xchg
aam
aam
daa
cmp
test
icebp
aam
retf
test
mov
js
or
(bad)
dec
adc
lock
ror
mov
dec
cmc
or
cmovno
ret
adc
ja
out
mov
push
jne
std
jbe
push
in
es
fwait
ss
mov
(bad)
pop
push
clc
add
xchg
xchg
mov
mov
xchg
push
push
nop
mov
push
push
cmps
std
daa
movs
sbb
outs
int
clc
or
or
push
add
sbb
xor
push
movs
or
xor
mov
pop
push
push
push
cs
and
fcmovu
out
and
push
xor
ss
sub
sub
es
xor
inc
rol
inc
jae
int
cmp
inc
inc
ror
inc
inc
inc
dec
and
dec
dec
ror
jae
dec
push
dec
int
xor
pop
dec
pop
dec
or
jae
pusha
dec
fs
xor
ror
cmp
and
cmp
ror
cmp
and
xchg
nop
data16
pop
ds
xor
test
mov
stos
pop
xchg
in
and
inc
cwde
xchg
retf
nop
pop
sub
mov
sub
movs
xor
test
mov
sbb
mov
push
adc
add
pop
fidiv
nop
jl
cmps
xchg
add
sub
retf
les
enter
or
test
or
shl
mov
and
sub
jb
loopne
mov
sub
xchg
sub
das
aam
pop
xchg
xor
inc
in
xchg
retf
hlt
inc
clc
popa
inc
retf
xchg
sub
jbe
xchg
dec
add
mov
stc
popa
dec
or
mov
adc
gs
mov
sbb
sbb
xor
repz
mov
or
cmp
inc
xor
mov
cmp
gs
cs
inc
inc
mov
inc
dec
popa
inc
sbb
inc
push
sahf
retf
nop
jl
sub
mov
shl
push
pop
pop
add
das
pop
and
mov
fwait
cmp
call
add
daa
daa
ins
mov
push
or
outs
and
daa
adc
ss
fmul
and
sub
pushf
pushf
pushf
pushf
xor
cmp
inc
and
inc
cmp
cmp
push
dec
dec
cmp
pop
pusha
fs
dec
dec
dec
push
inc
dec
dec
js
cdq
movs
cmp
test
mov
cdq
cwde
pushf
mov
movs
test
and
dec
xor
(bad)
enter
leave
int3
sar
dec
fcomp
loopne
xchg
dec
xor
call
leave
aam
hlt
clc
push
cmp
and
add
add
rol
cmp
leave
and
cmps
xor
adc
dec
xor
and
dec
xor
sub
xor
xor
and
cmp
pop
xor
adc
inc
dec
dec
cdq
fs
imul
pusha
sbb
add
add
mov
push
mov
add
mov
in
dec
loopne
fistp
cmps
cmc
test
inc
(bad)
imul
push
fwait
inc
fsubrp
sub
cmp
sbb
mov
push
xchg
gs
sub
(bad)
je
cmp
call
push
cs
xchg
sbb
cmp
dec
sbb
sbb
outs
and
movs
add
xchg
adc
fild
ret
sar
or
imul
push
arpl
add
test
movs
mov
mov
push
rep
fld
inc
jge
push
mov
ror
mov
sahf
pop
inc
les
(bad)
repz
cld
sbb
push
test
add
lods
mov
lock
mov
xor
jmp
nop
xor
shl
or
lods
add
lea
sbb
(bad)
jl
sub
jle
dec
add
into
mov
add
movs
jmp
mov
sar
sub
mov
fldl2t
jmp
and
or
xor
loopne
fs
jmp
mov
popa
mov
or
xor
cmps
lock
nop
and
add
add
hlt
mov
cld
mov
jo
int3
adc
pop
xchg
xlat
sbb
das
add
ret
punpckhwd
mov
sar
ficomp
shl
mov
jmp
or
adc
clc
xchg
dec
cs
adc
sbb
add
and
in
and
cmp
cmp
inc
inc
xchg
dec
sub
jb
in
dec
xor
inc
mov
loope
cmp
xor
push
mov
ja
and
xor
loopne
sbb
mov
mov
shr
mov
mov
es
sbb
dec
mov
push
sbb
movs
or
push
sbb
mov
int
sbb
xor
push
and
and
ficom
sub
and
cs
das
push
ret
xchg
push
or
outs
and
or
inc
es
movs
imul
pop
dec
dec
push
xchg
sub
dec
push
and
add
mov
mov
jb
sbb
inc
cmps
and
cmp
pop
scas
popa
add
popf
pop
or
(bad)
mov
adc
dec
add
xor
xor
sbb
mov
pop
jp
add
int3
add
add
hlt
mov
inc
int3
xor
and
xchg
mov
or
ror
shl
call
xchg
add
xchg
outs
pop
jne
nop
fsubr
(bad)
push
add
mov
or
and
shr
xor
and
cwde
jmp
and
mov
xchg
mov
push
mov
daa
jecxz
or
or
or
add
or
shl
xchg
lahf
mov
fcom
sub
fdivr
push
aas
push
sub
imul
jo
xchg
loopne
aaa
mov
nop
outs
inc
jo
stos
dec
adc
sbb
inc
mov
pop
xor
mov
(bad)
mov
lea
test
cmp
mov
test
sbb
ins
loope
pop
jne
pop
push
invd
imul
inc
sbb
push
sbb
adc
or
add
cmc
xchg
push
or
cmp
imul
daa
add
popa
ss
xor
and
les
push
fbld
mov
call
lea
push
mov
xchg
pop
inc
mov
push
add
stos
cmp
jns
jne
in
pop
dec
fcomp
cmp
wbinvd
or
ret
sbb
mov
push
xchg
test
inc
jmp
mov
jnp
cmp
mov
inc
ret
rol
mov
and
ja
sbb
scas
cld
mov
inc
pop
out
push
add
mov
fcom
adc
adc
mov
js
add
loopne
loopne
and
cdq
adc
jmp
xor
push
outs
ins
pop
sti
jg
ins
inc
lahf
inc
cmp
ja
add
jmp
sbb
cld
outs
stc
movsx
add
lea
call
push
fwait
stos
stos
inc
jl
pop
jle
popa
sbb
(bad)
ins
bound
and
imul
sbb
and
push
add
pop
les
imul
lods
inc
pop
fsubr
push
push
xchg
or
mov
cwde
xor
daa
push
cmp
add
adc
js
ss
cmp
or
cmc
fiadd
test
jb
in
add
xor
and
sbb
adc
mov
and
je
mov
jo
add
lea
(bad)
mov
fsub
sahf
adc
fs
gs
push
or
adc
add
shl
cmp
jae
shl
or
jo
inc
cmp
push
push
add
pop
fld
push
push
mov
sbb
sbb
sbb
sub
and
mov
inc
or
sti
xlat
in
retf
sub
fs
nop
xchg
ret
sub
inc
mov
sub
add
push
or
jmp
or
pop
lock
pusha
clc
cmp
daa
das
sub
ins
mov
sbb
das
out
sub
xchg
push
xbegin
popf
mov
sbb
pushf
ret
pusha
sbb
mov
clc
jbe
push
add
cmps
push
and
fmul
add
or
data16
je
inc
xor
pop
ins
xor
sub
sbb
or
jp
mov
adc
sbb
dec
ss
arpl
mov
dec
xchg
fsub
add
leave
inc
loop
je
push
out
and
fdivr
push
mov
cs
into
mov
or
pop
and
imul
int
sub
(bad)
xchg
adc
jae
add
mov
fcmovnb
dec
addr16
sbb
ret
(bad)
push
dec
fdiv
daa
movs
inc
clc
call
add
xor
adc
popf
inc
add
push
add
sbb
addr16
push
push
adc
jmp
adc
clc
ja
push
xchg
mov
dec
xchg
sbb
jb
cmp
cmp
movs
pusha
movs
xor
push
jecxz
pop
adc
or
mov
jo
push
iret
inc
sbb
(bad)
jne
or
sub
pop
jmp
xchg
mov
ss
mov
xor
scas
nop
dec
xor
add
loopne
aas
mov
scas
and
repnz
ds
cmp
mov
xchg
cmps
adc
sbb
test
sbb
or
and
push
jo
mov
push
cs
ss
mov
jmp
cs
mov
jp
xlat
xor
or
jmp
add
in
enter
sbb
or
or
aam
mov
sub
mov
pop
sbb
pop
fwait
sub
mov
adc
fcomp
dec
jg
cmp
jmp
jg
bound
add
scas
mov
sbb
push
hlt
push
or
adc
xchg
cwde
call
nop
pushw
adc
clc
in
fadd
cld
mov
add
or
cdq
cdq
fbld
popf
gs
ror
xchg
pop
add
and
lds
or
ret
add
rol
inc
cli
loopne
dec
sbb
mov
jecxz
sub
sbb
jne
sbb
test
push
out
inc
loop
retf
loope
add
mov
and
mov
mov
aaa
popa
inc
fadd
rcr
push
pop
xor
aas
sub
aad
and
push
nop
movs
pushf
mov
mov
and
add
(bad)
fadd
xor
or
pop
das
dec
(bad)
leave
mov
xchg
xchg
std
or
imul
xor
sub
stos
cmp
lahf
mov
or
enter
cdq
test
dec
adc
push
inc
push
enter
shr
adc
inc
test
mov
or
scas
test
dec
es
add
call
add
mov
and
dec
test
in
test
and
test
repnz
cmp
xor
push
cmp
inc
loopne
pop
mov
sbb
leave
inc
push
cmp
pop
enter
mov
xchg
sti
cmps
mov
and
nop
push
and
cmps
icebp
cmp
jb
cmp
cmps
jmp
inc
loopne
cmc
pop
dec
repnz
push
cmp
add
js
jecxz
add
mov
inc
nop
mov
daa
xor
repnz
mov
cmp
push
inc
and
mov
cwde
dec
mov
cwde
lods
inc
and
enter
dec
sbb
inc
loopne
pop
lea
daa
and
test
dec
sub
test
(bad)
xchg
sbb
add
or
xor
test
js
xchg
pop
inc
dec
dec
inc
and
adc
movs
add
inc
and
pushf
cwde
add
leave
nop
nop
mov
mov
pushf
cwde
push
cmp
les
mov
inc
add
lahf
push
js
or
adc
mov
movs
imul
mul
mov
mov
fwait
out
xchg
mov
adc
imul
movs
sbb
or
mov
xchg
outs
call
fcmovne
repz
test
cs
popa
lea
(bad)
into
mov
sahf
adc
mov
pop
mov
mov
addr16
mov
push
inc
std
out
in
adc
or
or
jbe
dec
in
and
sahf
cmps
rcl
or
or
ror
add
pop
iret
mov
pop
add
std
jb
movs
outs
jae
cs
lods
cld
enter
in
mov
mov
or
hlt
mov
ret
inc
sar
adc
dec
xor
ficomp
cld
xchg
add
popa
cwde
imul
push
dec
popa
adc
inc
add
call
or
fnstcw
cmp
push
push
and
jo
lea
pop
push
cmps
rcl
pusha
popa
add
jne
ret
ret
xchg
nop
add
fwait
push
lods
add
add
xor
jo
mov
ret
lods
retf
cmp
lea
mov
push
pop
cmp
mov
pop
sbb
outs
jp
mov
cmc
icebp
adc
inc
and
ins
add
xchg
js
mov
cmp
pop
cld
push
inc
xor
or
dec
push
inc
fucomp
adc
or
mov
dec
imul
dec
cli
mov
push
push
push
pop
pop
pop
pop
pop
mov
test
adc
push
mov
jne
aaa
inc
cdq
jbe
sbb
in
xchg
xor
(bad)
cmp
sbb
mov
xchg
mov
push
aad
cld
sbb
js
push
pushf
data16
or
ret
addr16
retf
sbb
std
(bad)
jae
je
xchg
cli
adc
mov
push
cmp
cs
pop
mov
or
mov
int3
inc
ins
mov
cld
popa
je
pop
jns
xor
or
push
fst
xor
jo
sub
jg
and
dec
and
push
add
mov
push
(bad)
push
loop
mov
and
das
xchg
push
sub
xor
lock
retf
jmp
xor
cmp
push
sub
pop
inc
pop
mov
and
add
fdiv
lods
mov
cmc
or
dec
mov
mov
sub
sbb
sub
jne
div
inc
add
mov
addr16
and
sbb
or
mov
inc
sub
add
mov
out
pop
(bad)
xchg
and
mov
sub
mov
ffree
shl
mov
sbb
pop
cwde
ficom
mov
aad
ja
or
sbb
dec
xor
adc
push
lea
or
pop
movsx
je
push
(bad)
(bad)
add
sub
or
and
mov
sbb
mov
jbe
and
lea
push
or
or
sub
fs
cmps
test
je
call
sbb
add
jo
and
push
push
cmp
sbb
sbb
push
jne
dec
out
mov
test
ficom
lahf
or
pop
cmp
push
hlt
ins
pushf
nop
js
push
dec
cld
mov
mov
mov
xchg
repnz
dec
dec
(bad)
jp
out
js
jne
ja
pop
ss
fwait
mov
push
in
cmps
cmp
pop
push
pop
push
pop
pop
pop
mov
out
jno
inc
add
cmp
inc
cmp
cmps
mov
or
sbb
and
mov
jnp
pop
ins
mov
adc
jb
ror
mov
or
lock
pop
mov
push
nop
pop
fiadd
jecxz
mov
(bad)
pop
rcl
cmp
cmp
hlt
mov
jl
js
je
xor
mov
mov
push
mov
pop
call
test
push
imul
rol
mov
and
push
ftst
je
mov
and
and
or
rcl
mov
mov
adc
ret
shl
shl
cli
dec
and
mov
dec
jnp
add
rcr
inc
adc
std
test
mov
shl
cmp
sahf
retf
add
loope
add
rol
sbb
ret
mov
icebp
aas
test
push
sub
fdivr
ss
push
sub
add
div
jo
lock
dec
pushf
je
mov
or
enter
ins
(bad)
fsub
mov
inc
jl
(bad)
data16
(bad)
jb
inc
push
and
sti
shr
push
and
or
arpl
xchg
(bad)
je
add
sbb
repnz
or
in
add
mov
pop
push
popf
adc
into
adc
inc
sub
in
fucom
js
ja
mov
lea
or
add
rol
jmp
in
hlt
cwde
or
xchg
mov
jo
sti
jle
adc
ret
cmp
mov
mov
or
xchg
nop
push
and
and
mov
daa
cmp
mov
xchg
(bad)
bound
mov
inc
inc
xchg
jle
cmps
xor
mov
mov
jmp
(bad)
jmp
dec
inc
(bad)
ror
add
dec
add
popa
adc
sar
add
xor
push
mov
pop
or
stc
loop
jo
and
xor
and
add
pop
add
and
in
sbb
inc
xchg
adc
and
nop
jl
and
js
lock
popa
pop
add
inc
jno
dec
mov
test
js
inc
shl
add
mov
outs
push
jle
pop
pop
mov
add
adc
jb
dec
mov
pop
ficomp
or
mov
mov
sbb
movsx
or
xchg
mov
sub
sub
adc
push
push
jmp
xchg
push
pop
imul
jl
jo
sbb
and
add
push
in
inc
es
sub
mov
adc
add
(bad)
sub
test
inc
or
mov
add
sbb
sub
adc
adc
adc
inc
xchg
jnp
aad
adc
rcl
dec
rcl
(bad)
or
adc
cmp
add
jp
sbb
inc
push
fbld
mov
(bad)
mov
in
jle
mov
imul
or
call
fmul
add
xor
dec
add
pop
mov
sub
inc
retf
inc
push
clc
push
shr
adc
and
lods
xchg
test
fs
dec
sbb
je
mov
jmp
push
add
pop
dec
sub
mov
cmp
or
xor
(bad)
ins
dec
out
inc
xor
add
mov
and
inc
push
mov
addr16
or
fwait
(bad)
fcmovne
inc
jmp
adc
push
(bad)
mov
loope
sar
mov
ret
or
cmp
cmps
add
js
sbb
jg
mov
add
cmp
or
retf
pop
cmp
add
ja
ss
fdivr
mov
xor
movs
clc
call
and
push
sub
sahf
sub
sahf
xor
sub
rcl
pop
fsub
or
mov
je
fnsave
cmp
and
into
sbb
stos
movs
xor
mov
add
xlat
icebp
fmul
and
push
data16
and
inc
push
xor
add
and
xchg
jmp
outs
cdq
test
ins
mov
cmp
enter
xchg
jo
ss
jmp
dec
jne
dec
out
out
push
ins
lea
pop
add
inc
pop
and
fnstenv
pop
cmp
dec
fdivr
pop
aaa
adc
mov
pop
hlt
and
pop
out
in
arpl
mov
pop
mov
adc
xchg
cmp
push
push
push
mov
jmp
add
or
outs
dec
pop
mov
cmp
outs
xchg
mov
xchg
je
or
jne
dec
cmp
mov
jns
inc
dec
enter
mov
dec
add
jmp
fidivr
movs
adc
dec
lods
inc
jp
add
inc
cs
je
add
push
push
cmp
fcomp
pop
fistp
inc
or
js
and
xchg
es
call
shr
jmp
dec
popa
push
pop
fwait
inc
push
sar
xor
jo
add
sbb
(bad)
jmp
or
sbb
mov
test
or
xor
mov
mov
adc
call
in
push
retf
push
adc
cmp
out
push
daa
or
inc
mov
aam
xor
fiadd
(bad)
call
int3
push
xor
cmp
adc
or
mov
add
loope
repz
lea
pop
mov
mov
fst
test
or
and
pop
hlt
fsubr
loope
cmp
(bad)
jo
sbb
popa
and
lods
test
repnz
pop
js
and
je
loop
clc
psrld
push
push
sub
lea
push
fnstenv
int
stos
or
arpl
add
xchg
popa
inc
inc
mov
call
inc
push
pop
push
int
push
icebp
mov
dec
lea
mov
mov
pop
xor
dec
lock
lock
(bad)
outs
pop
add
pop
mov
xor
out
lahf
ret
push
sti
add
int
push
(bad)
mov
push
pop
dec
out
push
mov
retf
sbb
cld
add
mov
push
cmp
jl
ficomp
jge
mov
fst
aas
or
add
arpl
idiv
daa
and
and
push
(bad)
and
xor
aas
cmp
or
ror
add
into
sub
and
jl
jo
jge
sbb
xor
aaa
mov
pop
pop
dec
test
(bad)
push
mov
pop
dec
or
jle
or
xor
rcl
neg
pop
pusha
add
xor
xchg
cmps
mov
jns
push
mov
add
and
imul
ror
jge
inc
sbb
cmp
bound
or
sti
jl
movs
test
jmp
test
add
ss
mov
(bad)
inc
retf
cmps
shl
cmps
xlat
mov
mov
pusha
sbb
ds
aaa
xor
mov
jne
jmp
jle
ins
lock
or
je
push
mov
or
in
dec
mov
(bad)
jl
adc
div
add
cmp
inc
add
add
aam
push
sub
ret
out
fdivr
pop
mov
mov
sub
shl
push
fiadd
addr16
mov
daa
(bad)
clc
std
mov
mov
fisttp
fsub
rol
hlt
jns
add
mov
dec
(bad)
mov
inc
in
inc
stos
add
jo
inc
mov
repz
or
add
(bad)
paddq
pxor
pop
cmp
movs
stos
jg
dec
dec
push
inc
loop
shl
add
jg
push
inc
adc
and
adc
test
lahf
inc
inc
jo
mov
xor
call
pop
imul
and
adc
div
in
sbb
adc
pop
ins
or
add
ret
aaa
and
pop
inc
cli
pop
pop
mov
fdiv
fild
out
in
add
push
mov
bound
add
shr
inc
int
add
sahf
add
adc
and
push
dec
shl
adc
sbb
xor
cmp
jmp
jp
aad
ds
push
outs
shr
and
test
add
repnz
outs
cmp
or
test
or
(bad)
lahf
clc
(bad)
aas
imul
pop
cmp
cmp
stos
cmps
mov
ret
and
jle
sbb
mov
xchg
inc
jge
or
xchg
cmp
fcmove
jg
(bad)
add
or
jecxz
arpl
mov
bound
push
inc
sbb
add
pop
aam
retf
xor
pop
loopne
loope
mov
jl
sbb
adc
adc
jae
ds
and
mov
or
mov
fld
inc
and
jmp
loop
neg
movs
rcr
ss
cdq
push
gs
cmp
push
imul
or
add
dec
and
inc
sbb
cmps
mov
add
movs
rol
int
fs
or
push
adc
mov
xchg
add
aam
and
push
sub
int
jge
lds
dec
jno
sbb
dec
bound
or
or
popf
lock
xchg
movs
mov
outs
add
fs
lahf
es
jl
pop
jo
fimul
push
es
popa
je
rcr
pop
ret
jne
std
cmp
cmp
jle
push
(bad)
dec
push
add
add
push
push
push
and
inc
shr
sbb
sub
push
add
shl
pop
dec
test
adc
pop
jl
pop
pop
mov
leave
sbb
pop
mov
xchg
add
adc
pusha
call
or
xchg
js
add
sbb
jns
fldenv
mov
dec
lods
pop
ret
loopne
fmul
fcmovb
or
dec
sub
push
fmul
sbb
xchg
(bad)
mov
aaa
mov
and
wrmsr
push
ret
adc
jle
lods
(bad)
push
lods
cld
jecxz
fild
inc
shl
dec
rcl
add
sbb
cmp
scas
es
add
sar
push
add
sbb
sbb
jg
push
push
pop
sub
dec
rcr
test
pusha
in
cmp
pop
and
or
xor
pop
xchg
loope
push
jo
and
and
sbb
jecxz
pop
mov
rcr
cmp
cmp
inc
outs
pushf
xchg
inc
push
data16
pop
adc
and
jge
push
imul
in
sbb
shl
je
stos
push
add
(bad)
jp
jne
stc
ror
push
dec
fidivr
cmp
adc
dec
cwde
jbe
or
xor
add
dec
adc
cli
xchg
js
push
aad
loopne
sub
inc
out
jmp
add
add
dec
(bad)
loope
movs
pop
aaa
or
pushf
das
sbb
repnz
push
shl
adc
mov
xor
xchg
imul
jo
test
je
(bad)
and
test
test
jno
fs
sbb
push
adc
sbb
int3
(bad)
ja
popa
xchg
je
mov
dec
jnp
sbb
mov
ret
sbb
pop
mov
cmps
test
arpl
jp
inc
cmps
dec
int
push
test
xchg
repnz
pop
call
loop
into
pop
rcl
push
adc
leave
(bad)
aam
test
push
sbb
add
jno
not
inc
fcom
jmp
xor
mov
xor
cmp
adc
xchg
popa
(bad)
push
sub
inc
out
call
and
sbb
icebp
ror
mov
inc
cs
repz
mov
or
ret
cmp
mov
or
xchg
jns
inc
rol
arpl
stos
add
mov
loope
jbe
pop
mov
push
loope
cmp
jecxz
jmp
mov
adc
adc
dec
xor
lods
add
pusha
inc
sti
push
dec
jmp
xor
sub
fmul
scas
pop
cmp
jae
pop
xchg
lods
or
js
add
aaa
jl
and
or
add
hlt
cld
push
cmp
(bad)
popf
push
dec
inc
jne
add
xchg
or
in
imul
dec
les
retf
aaa
or
xor
or
(bad)
and
sbb
cmp
adc
sbb
stos
sub
sar
fld
mov
xchg
sub
call
add
mov
or
add
dec
mov
rcr
add
pop
stc
mov
or
xor
add
add
adc
(bad)
or
push
aad
or
xchg
mov
and
pop
(bad)
mov
ret
test
jecxz
test
pop
sbb
jle
mov
cld
adc
inc
mov
or
loop
cmp
jne
jge
add
scas
imul
test
push
rol
add
jg
push
and
add
pop
jmp
movs
adc
pop
scas
test
loopne
cmp
inc
in
inc
lock
dec
imul
cmp
lea
test
push
adc
push
pop
add
inc
or
stc
imul
add
hlt
add
test
ins
fistp
gs
bound
dec
jg
adc
or
dec
jg
jmp
adc
sub
hlt
or
ret
and
lods
and
das
cmps
and
mov
adc
cmp
sbb
fadd
call
lock
scas
gs
in
push
sbb
inc
jno
cmps
push
jae
sub
mov
inc
test
pop
jp
sbb
bound
add
int3
mov
or
adc
popf
inc
jmp
inc
retf
add
or
dec
test
ja
push
ins
jmp
lods
mov
jns
out
rol
pop
mov
(bad)
mov
push
js
jle
cmp
mov
test
(bad)
pushf
or
push
sub
test
xchg
xchg
add
sbb
cmp
add
or
fmul
sub
ss
sub
jnp
cwde
and
jb
je
cmp
loop
sub
in
xor
cmp
jbe
(bad)
jmp
gs
or
repnz
adc
push
jbe
add
sub
jmp
das
aam
dec
pop
xor
(bad)
enter
inc
loop
aas
pop
and
push
add
push
xor
push
push
push
push
and
call
xchg
pop
es
jmp
add
ret
push
inc
sub
mov
jle
xor
cmp
add
jne
test
push
loopne
push
cmp
add
adc
jne
test
hlt
or
pusha
(bad)
push
imul
rcr
add
cmp
(bad)
repnz
rol
sbb
jne
aad
xchg
jg
inc
ds
popf
imul
jbe
push
or
jne
push
les
(bad)
xor
daa
mov
cs
pop
mov
dec
int
jl
cmp
jmp
js
or
fmul
je
or
je
dec
je
xor
cmp
pop
jmp
pop
cmp
jmp
inc
jl
mov
xchg
lods
pop
sub
adc
loopne
retf
sub
lock
pop
rcl
inc
xchg
ins
dec
inc
lock
sbb
add
cmp
imul
xor
inc
pusha
out
cmps
jge
jne
sbb
inc
fs
stc
jle
inc
sub
enter
int3
add
mov
mov
push
inc
pusha
xchg
(bad)
jmp
inc
push
or
xchg
icebp
xchg
clc
sbb
ficomp
fsub
or
add
sub
add
push
adc
fldcw
mov
std
push
mov
pushf
jle
outs
popa
sahf
mov
mov
mov
and
ror
lock
mov
enter
fiadd
adc
fld
inc
inc
js
pop
fld
ror
mov
(bad)
or
dec
xor
and
idiv
call
inc
push
ficomp
call
dec
sub
jg
scas
or
mov
mov
push
xchg
xchg
jmp
mov
cmp
mov
pop
push
in
push
mov
ss
mov
adc
les
out
ins
or
cs
sub
or
std
ins
lea
retf
push
popa
jno
mov
rol
jp
and
push
test
sbb
or
or
mov
sbb
cli
mov
mov
push
inc
lods
push
jne
sub
test
sar
fisttp
fadd
jmp
and
push
or
mov
fadd
fld
pop
js
and
fld
cs
sahf
loopne
push
outs
adc
push
or
rol
rcl
sbb
inc
enter
loope
and
add
pop
(bad)
xchg
sbb
xor
popa
ror
fbld
jmp
das
adc
push
shl
imul
(bad)
sbb
dec
add
and
mov
xor
mov
(bad)
adc
cmp
or
mov
test
mov
mov
push
push
xchg
push
test
call
xchg
clc
loopne
jno
or
pusha
ins
inc
or
out
imul
xchg
jmp
dec
cmp
in
loope
pop
push
ss
ds
adc
fsubr
pop
xchg
fmul
push
mov
pop
or
lock
mov
mov
or
xchg
lock
nop
dec
dec
push
fwait
out
ficom
pop
outs
jp
std
repz
idiv
ficom
aad
push
fwait
stos
shl
movs
shl
pop
jmp
push
add
mov
add
sar
xor
lods
xor
or
pause
cs
and
sub
pop
sub
push
mov
and
pop
jne
out
retf
dec
daa
push
sbb
test
fsub
or
test
xchg
enter
xchg
xor
push
outs
cmc
rcr
out
adc
xor
cmps
repnz
xchg
or
mov
sub
mov
push
push
lock
cmp
adc
gs
or
mov
ret
add
scas
add
or
mov
loop
add
and
rcl
out
mov
add
adc
bound
mov
sbb
sub
push
push
push
push
add
fs
fs
and
imul
pop
mov
(bad)
js
in
imul
inc
or
mov
or
ffreep
push
add
dec
pop
idiv
and
xchg
test
and
iret
mov
xchg
add
or
inc
adc
mov
xor
loope
xor
dec
push
jb
and
shr
add
sub
loop
add
mov
retf
and
pop
or
add
in
adc
test
dec
bswap
rol
fcmovbe
or
or
and
xor
shl
or
test
inc
jmp
int3
clc
sti
fwait
mov
inc
sbb
lock
popf
mov
mov
cld
mov
and
pop
xchg
sbb
mov
addr16
mov
loopne
xor
fdiv
pop
sub
aaa
jge
je
pusha
and
mov
fldcw
fstp
aas
pusha
sub
jne
mov
pusha
jb
sub
xor
xchg
add
pop
fld
imul
fisttp
aam
je
(bad)
les
dec
seto
mov
inc
test
add
pop
jns
dec
sti
add
add
test
or
clc
xor
mov
mov
sbb
add
sub
das
dec
je
add
dec
jne
or
fdivr
and
pop
cmp
test
out
and
and
pop
mov
mov
retf
sbb
jmp
push
and
xchg
in
imul
ins
jmp
inc
fld
fstp
jmp
fisttp
inc
or
or
daa
jo
movs
adc
lock
xchg
cli
(bad)
and
jne
cmp
pop
adc
fwait
call
ret
pop
and
fnstenv
arpl
out
or
push
xor
(bad)
pop
enter
cmp
jbe
sub
xchg
rcr
push
aaa
sbb
loopne
bound
fcomp
js
dec
ret
dec
push
mov
in
dec
jmp
sub
sub
jmp
sub
push
push
or
jns
push
lods
sbb
test
inc
pop
popa
movs
into
adc
div
add
sub
mov
jb
stos
and
mov
and
sbb
ret
in
xchg
adc
xor
mov
jp
mov
aam
sub
add
add
push
push
add
inc
test
pop
ret
inc
repnz
add
push
adc
and
jo
dec
shr
mov
ins
in
sbb
lods
add
adc
(bad)
loopne
pushf
or
push
push
mov
jmp
add
lock
std
mov
or
pop
and
and
push
and
mov
outs
jle
push
add
mov
retf
out
dec
adc
mov
adc
push
pusha
jmp
and
adc
or
cmp
or
xchg
mov
ret
add
(bad)
fwait
add
push
sbb
mov
es
or
xor
arpl
jmp
adc
and
xlat
and
leave
adc
mov
popf
js
or
arpl
dec
sub
push
ret
mov
fs
jno
ret
shr
fimul
and
mov
rol
inc
adc
or
mov
adc
or
mov
fnstcw
fdiv
sub
pop
fdiv
pop
adc
push
mov
cmp
adc
mov
nop
sbb
add
add
fadd
(bad)
aam
and
mov
jbe
(bad)
push
das
adc
jl
(bad)
stos
sub
mov
jne
mov
inc
pusha
jge
adc
jnp
add
rol
and
inc
sbb
mov
sti
fsave
mov
pop
sti
sbb
loop
inc
(bad)
pop
icebp
or
and
or
and
jbe
push
push
mov
test
and
or
movs
mov
fwait
sub
not
fwait
xor
je
sbb
popf
mov
adc
or
sti
cs
call
sbb
fldpi
xor
or
and
mov
lods
in
ds
out
push
test
sbb
mov
pop
scas
push
or
sub
sub
push
(bad)
add
and
mov
dec
bound
mov
mov
and
sar
fist
pop
mov
xchg
sub
les
push
mov
pop
cmp
jo
mov
sub
jmp
jne
cli
cmps
out
std
fiadd
call
sub
mov
(bad)
int
inc
ins
jns
lea
aam
mov
sbb
(bad)
outs
xchg
call
jnp
adc
setbe
and
and
aad
or
call
xchg
ret
out
cli
and
dec
mov
sub
movlps
pusha
pop
dec
add
or
xor
push
add
mov
imul
add
pop
inc
pop
outs
pop
xchg
sbb
out
into
call
ror
nop
neg
out
scas
dec
dec
or
sbb
outs
push
mov
mov
mov
(bad)
js
dec
loope
push
test
sbb
or
fucomi
fisubr
dec
or
aam
addr16
and
fild
and
lods
jle
cmp
mov
retf
fidiv
cmp
inc
ror
in
fmul
push
call
sub
push
adc
mov
test
lahf
call
dec
inc
push
cmc
add
cs
cmp
cmp
imul
dec
and
mov
and
inc
jg
sbb
mov
cmp
adc
je
scas
add
mov
sti
jmp
push
mov
lock
xchg
or
add
in
push
cmp
push
sbb
dec
dec
rol
mov
ret
pop
mov
leave
and
je
mov
into
jmp
hlt
sbb
jmp
mov
adc
jmp
mov
stos
inc
sti
(bad)
rcr
and
push
xchg
mov
test
inc
jle
sub
cmp
xor
sbb
jmp
dec
push
jmp
cmp
xchg
xchg
in
rol
push
dec
xchg
jae
out
loope
lock
add
sbb
mov
ret
fneni(8087
test
mov
pop
jge
cmp
push
je
test
sub
sub
jae
sbb
push
in
mov
or
push
pusha
cmp
push
mov
outs
mov
rcl
bound
pop
push
sub
dec
scas
je
or
dec
cwde
push
pop
add
imul
add
stos
push
cmp
mov
lods
sub
dec
pusha
jmp
(bad)
je
stos
loopne
pop
mov
mov
lods
jge
cmp
add
mov
pusha
adc
shl
jo
or
loope
cmp
add
test
dec
cli
sbb
fld
pop
mov
cdq
inc
je
or
add
mov
repnz
dec
inc
les
add
outs
xor
rol
push
jecxz
push
push
adc
les
jmp
cmp
pop
scas
loope
int3
xor
dec
mov
dec
aas
test
push
shl
sahf
push
push
test
sar
push
cwde
jge
test
push
mov
cli
mov
cmp
cmp
out
pop
adc
lods
dec
xchg
pushf
pusha
and
jo
and
sti
in
jge
jle
movs
push
cmp
lods
xchg
sub
test
(bad)
push
loop
fadd
lods
sar
push
inc
popf
into
call
jmp
add
add
push
pusha
pop
and
mov
add
pop
nop
dec
enter
jl
xor
out
xor
mov
out
xchg
or
fadd
sbb
mov
xor
push
adc
(bad)
pop
pop
stc
jns
mov
ja
into
ja
ret
sar
loop
inc
cld
daa
sub
pop
inc
test
in
jne
out
or
ss
inc
(bad)
jne
inc
or
cmp
adc
and
hlt
int3
add
movs
add
dec
jne
xchg
nop
adc
jl
and
test
adc
ins
ins
push
pushf
dec
push
or
(bad)
cli
cld
jnp
nop
test
add
movs
movzx
and
adc
into
sub
dec
ins
rol
adc
xor
push
ins
xchg
mov
cmp
pop
sub
add
pushf
sub
mov
sbb
sti
jg
add
xor
push
adc
push
sbb
shl
mov
scas
or
lock
add
push
mov
or
xchg
sti
sbb
bound
or
adc
inc
xchg
pop
inc
add
shl
repnz
lods
lock
sahf
push
fcom
ins
fadd
loopne
shr
mov
mov
adc
sahf
dec
test
pop
jne
outs
mov
mov
adc
aam
sub
and
aam
dec
inc
or
imul
call
sbb
add
rcr
jmp
out
jmp
out
push
add
lods
(bad)
mov
mov
jb
ins
mov
sbb
mov
ss
dec
inc
test
cmp
pusha
push
jmp
mov
cmp
retf
into
jmp
lods
push
dec
jb
imul
call
pop
cmovb
xor
push
call
xor
retf
push
retf
das
out
shl
push
add
neg
repnz
sub
movups
and
(bad)
or
les
dec
inc
mov
(bad)
inc
xor
mov
mov
btr
fwait
inc
fild
xchg
fucom
push
int
cmp
push
mov
add
sahf
pusha
push
fcomip
sbb
inc
mov
or
popf
shr
and
jne
push
add
loope
push
dec
and
or
or
loope
rol
sub
inc
pop
dec
in
sub
or
test
dec
or
add
scas
add
ins
cmp
mov
(bad)
push
pop
pop
add
inc
add
jle
and
leave
sar
mov
aas
or
mov
scas
adc
rcl
ja
mov
cmp
xor
cwde
push
movq
pop
es
lea
mov
or
pop
add
mov
add
add
add
push
mov
jge
push
inc
push
ins
dec
hlt
add
sub
cmp
cmp
push
push
aas
in
popf
and
or
push
sub
xchg
add
rcl
sbb
mov
pop
loop
mov
mov
cmps
cmps
fsub
les
call
jne
push
add
add
inc
cmc
and
xchg
(bad)
(bad)
pop
jmp
int3
cmps
fidivr
cmp
mov
dec
sbb
dec
mov
call
pusha
not
inc
push
push
stc
pop
call
es
call
jmp
retf
sub
ret
inc
outs
xchg
ret
cmp
push
sub
mov
fwait
rcl
jnp
fidivr
add
sub
enter
inc
mov
and
je
push
lock
push
jecxz
add
xor
test
test
sub
imul
mov
and
cmps
push
test
push
or
sahf
push
jo
add
dec
sbb
add
ret
mov
mov
inc
xor
mov
or
into
mov
mov
(bad)
repz
push
jmp
adc
pop
aaa
sbb
js
out
push
test
call
inc
and
sbb
sbb
cmp
repnz
jb
in
mov
add
adc
push
sysenter
sbb
inc
(bad)
dec
xor
jns
cmp
pop
out
add
mov
std
sbb
mov
sub
fs
test
ins
repz
jae
mov
xor
(bad)
dec
adc
mov
push
cmp
xor
xchg
lock
outs
and
and
sbb
and
lea
sub
bound
ins
push
push
and
movs
inc
or
push
pop
jbe
fs
cwde
xor
in
pop
jns
adc
fiadd
into
jg
sbb
mov
sti
sub
mov
mov
cmp
cmp
add
or
popa
add
daa
sbb
push
(bad)
dec
jne
daa
push
mov
sbb
rcl
mov
ror
test
repz
ror
pop
and
jmp
and
frstor
xchg
mov
fs
cmp
shl
mov
js
jp
or
mov
jg
jmp
rcl
pop
mov
cli
nop
sub
adc
or
push
dec
fdivr
push
jae
ret
and
pop
or
cmp
ret
sub
call
lods
inc
sub
dec
cmp
mov
push
fidivr
xchg
jmp
xchg
cwde
movs
pop
cmp
cld
inc
cmp
cs
fucomi
push
and
sbb
ret
or
mov
push
(bad)
iret
(bad)
adc
in
in
add
shr
dec
punpckhwd
adc
adc
or
or
pop
enter
push
lods
cmp
cmps
add
int3
mov
xchg
or
lea
cdq
sub
sub
les
dec
cmp
cmc
mov
add
sbb
jne
dec
mov
or
sub
retf
or
je
xchg
jo
push
push
cdq
jmp
in
dec
and
loope
ror
jmp
lds
pop
pop
mov
xchg
outs
aaa
push
in
push
push
ret
push
push
mov
loop
into
add
push
shl
cmp
rol
out
xor
inc
xchg
rol
fnstenv
mov
cli
shl
call
inc
inc
xchg
add
sahf
sbb
jge
in
xchg
outs
in
jb
sub
fnstcw
mov
mov
(bad)
ins
outs
stos
fnstcw
or
add
and
pop
mov
and
cld
mov
push
ja
test
sub
cmp
(bad)
pop
icebp
cmps
jbe
rol
rcl
pop
das
loope
push
shl
popa
jecxz
mov
stos
popa
pop
push
sbb
nop
push
sub
mov
(bad)
cmp
sub
aad
jo
ror
jo
int3
shl
add
xchg
aam
sbb
xchg
pusha
sbb
push
sbb
inc
dec
or
shl
mov
adc
cld
adc
sahf
cdq
test
pusha
dec
xchg
lods
cmp
xlat
jmp
rcl
aam
fs
xchg
adc
cmp
iret
jmp
(bad)
out
and
and
sub
xchg
xor
fadd
retf
(bad)
out
stos
add
inc
jbe
sbb
fiadd
and
sahf
test
dec
popa
and
ror
leave
in
out
cwde
(bad)
lock
add
sbb
xor
movs
push
jl
por
xor
xor
xor
movs
push
nop
pop
int
js
(bad)
rol
add
and
cmp
inc
aad
enter
sub
xor
adc
mov
xor
xlat
fidiv
popa
add
add
xor
popa
sub
(bad)
rol
dec
jmp
adc
and
adc
xchg
out
push
and
dec
adc
or
int3
ret
in
sbb
or
sbb
(bad)
cmps
inc
jg
sub
sbb
dec
push
cmp
shl
into
test
je
cdq
jae
xor
fistp
stos
inc
stos
add
jp
std
popa
xor
ja
jmp
dec
ds
mov
out
add
add
push
adc
movs
imul
xchg
inc
jno
mov
add
rol
dec
adc
pop
add
push
hlt
push
mov
adc
test
ins
mov
je
imul
mov
fwait
psubq
imul
jmp
bswap
imul
test
xchg
sar
inc
mov
dec
rcl
and
pop
ret
and
repnz
xchg
mov
jge
cmp
or
icebp
es
mov
test
stc
cmps
push
cli
lods
mov
xor
mov
mov
push
jb
jl
pushf
adc
push
xor
push
daa
mov
jb
mov
or
je
inc
add
clc
sub
xchg
call
je
mov
inc
push
add
sub
pop
fld
test
dec
or
inc
fiadd
mov
mov
ja
enter
xor
sub
fst
push
mov
jmp
jnp
add
or
pop
sub
or
sub
sub
mov
sub
or
sbb
sub
dec
pusha
and
je
push
jp
inc
popf
dec
add
push
push
push
sbb
pop
movs
jle
xchg
sti
inc
and
jg
add
jns
add
mov
xor
fiadd
nop
imul
add
jmp
mov
sbb
sub
adc
int
jne
push
inc
push
mov
inc
push
dec
je
inc
cmp
rcr
or
pop
adc
jmp
add
js
wrmsr
dec
or
add
push
popa
out
inc
xchg
popa
or
aaa
mov
adc
fimul
lahf
or
cmp
jne
fcmovnb
and
jbe
or
push
or
and
mov
xor
push
(bad)
stc
mov
cmps
dec
inc
push
gs
mov
inc
leave
jle
add
add
jnp
and
shl
and
ins
mov
addr16
loop
inc
cmp
and
pop
add
sub
xchg
popa
clc
sbb
sbb
add
adc
cmp
add
fstp
jmp
leave
ret
or
adc
ror
(bad)
sub
push
fisub
push
cmp
sub
cmp
pop
je
sbb
ds
inc
push
inc
sub
mov
es
or
push
adc
and
sbb
nop
pop
add
push
inc
push
jnp
sub
jbe
pop
test
fdivr
add
hlt
and
movs
aad
stos
test
inc
movs
dec
enter
add
jno
gs
push
rcr
jl
xchg
mov
and
sub
jo
jne
imul
or
add
scas
mov
and
or
pop
inc
xchg
inc
inc
inc
and
ins
sbb
(bad)
fsub
test
jne
sub
xchg
inc
or
mov
fimul
es
inc
jo
inc
or
push
sub
inc
out
iret
popa
retf
mov
sbb
and
cmps
inc
add
and
(bad)
out
sub
cli
fs
in
movs
bound
inc
mov
daa
inc
xor
cmc
nop
sub
cmc
sti
cmp
cmp
lahf
rcl
arpl
cmp
je
mov
ret
mov
ficom
inc
lock
lods
mov
in
sub
repnz
jge
sub
jmp
aad
ss
add
xor
scas
mov
sbb
jo
mov
movs
mov
aaa
jb
(bad)
mov
mov
clc
gs
mov
js
sub
test
mov
leave
and
push
fidiv
xchg
(bad)
adc
and
ror
ins
pusha
rcl
out
xchg
mov
test
lock
stos
xchg
xchg
xlat
sahf
sub
cmp
test
xchg
or
imul
ss
gs
or
lock
test
out
mov
dec
xchg
cli
mov
add
sbb
sbb
mov
shl
inc
mul
push
pop
fcomp
pop
mov
push
stos
aam
inc
sbb
dec
inc
xchg
outs
jecxz
cmp
xchg
mov
jnp
mov
xor
loop
arpl
push
in
xchg
xor
cld
loopne
das
and
xchg
xlat
push
add
rcl
shr
adc
and
lods
retf
sub
sbb
ret
mov
xlat
add
js
jne
sub
xchg
mov
test
ins
jbe
or
add
adc
push
add
sbb
adc
and
add
pop
push
sub
push
test
ds
adc
aas
rol
push
jne
mov
add
ror
adc
movs
cmps
push
dec
and
in
mov
rol
xchg
xchg
push
outs
push
fiadd
loopne
sub
and
dec
xchg
mov
je
dec
add
inc
push
dec
pop
add
jns
neg
pop
push
dec
sub
gs
inc
stos
push
mov
movs
push
or
add
add
test
lods
add
cmp
xor
dec
jmp
add
mov
mov
lea
adc
ins
sbb
add
pop
push
daa
es
mov
cmc
or
push
or
or
loopne
daa
inc
dec
popf
stos
ret
jmp
sbb
jmp
xor
je
jge
xchg
sub
jb
and
xchg
jge
outs
cmp
adc
rcl
xchg
mov
repnz
lock
cmc
inc
push
mov
call
js
mov
pop
push
stos
pusha
outs
or
push
rcr
or
loop
mov
dec
(bad)
fsubr
rol
add
xor
into
inc
retf
call
cmp
test
mov
test
xchg
ret
adc
loope
fmul
or
mov
enter
dec
adc
scas
mov
fcom
sbb
retf
and
add
or
push
(bad)
popa
dec
push
outs
fwait
lea
push
mov
test
fmul
add
(bad)
(bad)
or
test
xor
mov
push
xor
add
mov
aam
fisttp
bound
adc
pop
sub
leave
dec
shl
or
ins
mov
sub
mov
in
inc
cmp
push
jo
add
and
sar
loop
push
lock
ret
daa
xor
or
jne
bound
xchg
outs
add
xor
xor
repnz
pop
in
mov
in
(bad)
jmp
inc
xor
mov
dec
nop
bound
punpcklbw
or
mov
push
or
ja
add
js
pop
xchg
movs
dec
xchg
pop
clc
push
sub
adc
aad
dec
in
and
je
sbb
push
jle
or
mov
sbb
inc
jg
add
ret
add
add
hlt
shrd
fnsave
dec
sar
loop
inc
(bad)
jge
sbb
xchg
add
xor
jo
cmc
pop
xlat
shl
and
xor
out
push
adc
cmp
cdq
fisub
cmp
or
ror
inc
call
ret
jo
adc
xor
inc
mov
push
sub
sbb
(bad)
mov
ss
(bad)
xchg
or
shl
pop
sbb
js
jg
scas
aad
inc
jb
xor
scas
out
xchg
jno
jmp
adc
mov
clc
mov
cmp
sar
out
add
jb
sub
push
sti
sbb
add
mov
jle
inc
adc
or
pop
or
push
jg
jb
pop
jnp
add
dec
dec
leave
jae
fiadd
pop
or
or
pushf
retf
sbb
sbb
lds
leave
adc
and
add
scas
(bad)
js
pop
test
or
cmp
or
retf
dec
adc
or
inc
push
inc
sbb
sbb
sub
idiv
push
cmp
xor
push
dec
fsubr
loopne
ss
xchg
pop
add
inc
popa
adc
lods
push
fwait
adc
jnp
xchg
(bad)
js
jbe
xchg
inc
or
push
add
add
lods
push
fldenv
xchg
inc
cdq
mov
push
mov
push
mov
or
mov
(bad)
shr
push
nop
and
or
pop
in
jo
jbe
call
es
push
shl
in
add
and
ja
cmps
cmp
aas
(bad)
sub
imul
sbb
pop
mov
sub
loopne
adc
xchg
fsubr
xchg
mov
sub
cmps
cmp
pusha
inc
add
leave
xor
enter
add
mov
fmul
mov
cld
jl
loopne
jge
clc
or
pop
inc
add
(bad)
sbb
add
into
sbb
popf
jmp
xor
nop
push
(bad)
fnstenv
clc
gs
inc
imul
sbb
rol
in
add
inc
popa
je
inc
je
cld
add
lds
add
xor
or
leave
jmp
leave
dec
test
mov
popa
cmp
dec
push
ror
clc
mov
push
test
or
pop
das
mov
retf
jl
cmp
or
and
rol
leave
push
add
fadd
sbb
dec
dec
mov
or
clc
hlt
jmp
or
jmp
and
imul
lds
ds
or
(bad)
call
dec
or
sbb
sbb
int3
push
add
mov
aad
inc
or
lock
or
jle
(bad)
fadd
mov
jne
pop
loope
add
leave
not
fcmovnb
pop
adc
jne
xchg
lods
push
push
sbb
and
push
inc
adc
add
jp
jb
mov
adc
outs
push
mov
add
dec
jbe
dec
mov
inc
sub
adc
sbb
cld
xor
mov
mov
xchg
cli
xor
and
adc
psrld
push
iret
hlt
and
js
shl
daa
dec
dec
mov
jmp
add
push
daa
pusha
xchg
add
or
adc
inc
test
les
aaa
inc
dec
adc
add
cwde
sar
pop
jno
fs
ja
test
jp
aaa
loopne
scas
pop
and
test
mov
cmp
adc
mov
dec
or
icebp
push
pop
cmps
xor
sub
and
and
push
loope
dec
add
cmp
xchg
loopne
out
mov
popa
mov
adc
hlt
clc
or
push
fld
pop
lock
stos
mov
push
sar
add
sub
add
scas
fmul
xor
push
adc
add
or
mov
lea
pop
mov
inc
shl
pop
inc
jnp
or
shl
not
test
imul
jl
bound
hlt
add
repz
in
ins
clc
out
xchg
mov
out
mov
inc
fild
cwde
jbe
dec
inc
cwde
ret
cmp
cli
mov
cs
adc
cmp
sbb
aas
test
jp
jno
mov
xchg
inc
xchg
into
adc
outs
push
pushf
jns
xor
mov
fsub
push
xor
add
and
pop
rep
je
lahf
xchg
cmc
mov
inc
in
mov
lock
idiv
fnstcw
inc
stos
inc
or
add
(bad)
and
aaa
fs
es
movs
cmp
mov
and
sub
cmp
lods
mov
shl
push
adc
out
and
push
fdiv
xlat
sbb
nop
mov
jb
mov
and
mov
mov
push
or
jne
shl
data16
add
add
jl
dec
bound
out
xor
clc
pop
sub
xchg
loope
sub
lahf
fs
mov
jmp
mov
push
push
shl
lds
inc
lods
pop
sub
adc
scas
mov
out
or
inc
and
add
es
xor
nop
clc
lea
cmp
test
jno
or
retf
mov
hlt
jmp
pop
push
pop
lds
outs
repnz
(bad)
icebp
mov
add
xor
cmp
and
nop
cmc
push
push
mov
hlt
push
aas
mov
inc
sahf
inc
mov
push
add
inc
movs
fimul
imul
aad
pop
sar
arpl
or
add
inc
aas
sbb
in
add
lock
dec
into
inc
mov
je
les
iret
and
dec
out
and
and
in
pushf
sbb
jge
bound
jge
test
shl
test
mov
lock
fnsetpm(287
or
test
mov
int3
or
std
xchg
adc
jmp
jne
and
sbb
cmp
pop
shl
dec
inc
leave
xchg
hlt
lock
test
dec
es
clc
push
sub
add
mov
inc
and
mov
clc
cld
pop
popf
or
loopne
fs
add
dec
inc
push
pop
or
sbb
sbb
inc
xchg
add
call
mov
jle
or
jo
inc
xchg
inc
and
add
mov
adc
dec
rcl
xor
cmp
mov
sub
inc
call
and
add
retf
ror
lods
test
(bad)
sar
cs
adc
push
ins
mov
imul
lods
sub
add
jl
in
bound
sbb
cmp
lods
fimul
mov
add
add
mov
add
xchg
mov
and
pop
pop
mov
ror
out
bound
pop
sub
retf
or
jp
mov
idiv
sar
test
dec
loop
xchg
cli
div
mov
and
dec
push
ficom
inc
and
fwait
cli
and
xchg
pop
popa
adc
adc
call
neg
shl
cmp
and
out
adc
pushf
ror
fsubr
ret
es
fadd
(bad)
call
push
push
add
dec
and
rol
je
mov
or
push
test
fucom
cmps
sar
add
daa
cmp
sahf
jmp
ss
dec
push
xchg
ret
pushf
or
adc
int
sub
cmp
add
jae
add
jp
lods
nop
pop
test
inc
mov
pop
repnz
lea
loopne
xor
call
clc
pop
or
enter
jge
add
fldenv
test
xor
repnz
dec
jmp
adc
jg
mov
call
ds
aas
shl
and
cs
xchg
or
out
sbb
push
and
push
or
xlat
sub
inc
outs
adc
adc
inc
and
sbb
lock
lods
or
push
ror
mov
sub
sbb
aas
lods
imul
dec
push
and
add
mov
mov
add
jmp
add
push
and
arpl
ds
inc
or
stos
ins
es
and
sub
add
imul
gs
ins
sub
cmc
push
hlt
(bad)
rcl
cmp
jl
(bad)
push
push
and
inc
ss
add
(bad)
adc
dec
mov
pop
or
mov
ins
jns
cmp
and
pop
ret
jne
fdiv
add
scas
inc
ins
arpl
cmc
jmp
iret
lds
mov
stc
inc
or
inc
dec
fsubr
adc
jae
add
fadd
fiadd
push
push
int
sar
sub
xor
or
jne
fwait
xor
lods
xchg
ret
jmp
push
sbb
add
call
mov
or
into
add
push
mov
dec
and
adc
in
jo
mov
jge
push
pop
movs
stos
or
cmp
imul
outs
inc
sub
push
and
pop
xchg
add
rcl
es
add
js
push
jle
adc
ss
ret
aam
leave
inc
xor
rol
fdivr
add
mov
cmp
cmps
jo
fiadd
add
adc
adc
push
xor
test
sub
push
or
add
push
sbb
and
push
fwait
pop
loope
dec
int3
sti
mov
push
dec
mov
jne
cmp
ret
add
sub
mov
jmp
and
ret
mov
inc
add
cdq
scas
cmp
inc
dec
add
scas
adc
sbb
hlt
jmp
or
or
mov
mov
popa
sbb
or
loop
add
add
jl
and
je
mov
iret
pop
or
iret
(bad)
stos
pop
fdiv
or
lock
dec
das
sbb
nop
mov
mov
cld
movs
movs
movs
xor
inc
clc
stos
push
mov
add
loopne
push
or
and
not
sbb
data16
outs
dec
sub
aaa
add
sub
adc
mov
inc
cmps
xor
sbb
or
xchg
test
hlt
adc
sbb
fild
dec
dec
jns
cwde
sub
fidivr
pop
int3
cmp
jae
or
jae
lods
mov
ret
cld
shl
cmp
and
shr
sub
add
jmp
idiv
and
or
pop
(bad)
cld
lock
mov
bswap
or
and
fiadd
inc
daa
sbb
mov
inc
jp
pop
or
dec
add
test
pop
mov
add
adc
push
xchg
mov
add
jmp
leave
and
(bad)
adc
adc
add
sbb
test
mov
loopne
je
push
cmc
push
jmp
and
ficomp
mov
inc
ret
jmp
and
cli
aaa
arpl
mov
mov
cmp
je
push
adc
mov
fld
inc
ret
ins
xchg
sub
mov
ror
pop
inc
push
loopne
xchg
inc
fcmovne
in
push
or
adc
inc
dec
enter
add
or
repz
or
das
ss
aaa
or
in
xchg
mov
popf
imul
in
xchg
inc
hlt
call
jno
pop
inc
fmul
push
outs
or
xor
dec
dec
cli
add
adc
pop
mov
and
cmp
pop
mov
push
cmp
imul
in
sbb
add
push
clc
jmp
arpl
jg
iret
rcr
jl
push
lock
sti
push
lock
adc
retf
pop
or
or
add
push
lds
jecxz
lea
ss
enter
mov
push
dec
outs
ins
jmp
js
and
sbb
mov
dec
mov
xor
div
fcom
mov
mov
dec
push
pop
add
and
(bad)
(bad)
fldpi
jo
jl
dec
sub
js
xor
mov
adc
(bad)
sub
adc
jb
leave
inc
ins
push
test
add
inc
push
inc
imul
xor
bound
and
xchg
mov
cwde
in
or
sbb
scas
sbb
adc
dec
sbb
mov
push
xchg
push
xor
pop
push
adc
dec
sbb
(bad)
pusha
jecxz
push
xchg
aas
leave
sbb
stos
pop
cmp
je
xor
lea
push
sar
loope
dec
and
push
call
out
pushf
inc
fiadd
and
or
fsubr
sub
sti
aas
call
add
add
pusha
adc
or
call
xchg
sbb
add
ss
xchg
sub
add
mov
xchg
ret
out
add
xor
stc
sub
mov
lahf
es
mov
adc
sub
loopne
jo
lahf
js
push
mov
pop
push
mov
xor
inc
out
xchg
out
fnstsw
jmp
and
sbb
adc
push
push
adc
push
add
pusha
sbb
cld
xchg
or
imul
xchg
popa
pop
sbb
jg
xor
dec
lea
push
sbb
push
sbb
xchg
out
mov
cmp
leave
sub
mov
ret
inc
cwde
cmp
retf
adc
sar
cmp
add
and
push
push
jp
cwde
out
mov
push
shl
xor
imul
(bad)
jle
xor
sub
mov
scas
xor
shl
add
add
mov
fmulp
and
and
(bad)
and
bound
jmp
(bad)
xor
movs
jns
out
into
jae
xchg
(bad)
ja
loopne
mov
cli
and
and
inc
test
cmp
jmp
mov
inc
or
cmp
data16
dec
call
lea
cmp
jmp
lods
ficomp
js
push
adc
push
lea
xchg
movs
xchg
mov
xchg
add
xor
or
push
push
(bad)
push
mov
or
ret
xchg
cmps
fadd
movs
movs
add
nop
or
cmps
xchg
mov
jge
jl
jmp
inc
lods
and
ror
inc
(bad)
jle
cmp
adc
and
or
shr
ret
pop
or
and
jmp
(bad)
push
push
retf
out
sub
(bad)
inc
rol
shr
mov
jge
mov
shr
or
mov
out
or
dec
mov
fwait
inc
sub
out
mov
xor
xchg
retf
stc
repnz
scas
test
dec
cli
cli
inc
cli
inc
pop
retf
repz
fs
push
pop
pop
jle
test
inc
in
popa
inc
sub
call
cmc
test
sbb
add
mov
je
retf
pop
inc
lahf
push
pop
fisub
dec
movs
pop
push
cmp
xor
or
jecxz
mov
ins
out
je
div
imul
mov
xchg
sub
neg
and
or
pushw
sbb
or
clc
out
jge
ins
push
and
mov
dec
sti
inc
push
mov
inc
scas
(bad)
xor
ficomp
fdivr
cmp
cmp
and
loop
retf
sti
adc
fdivr
aam
sub
xor
out
and
dec
sub
inc
jle
and
leave
jle
lea
xor
fmul
or
cli
test
sbb
fcmovu
mov
mov
dec
shl
sar
mov
rol
(bad)
stc
imul
movs
and
push
(bad)
adc
jns
mov
test
push
push
sbb
mov
out
and
jge
dec
pop
enter
jecxz
rcl
movs
or
cmp
shr
stc
add
jne
stc
mov
and
push
xor
pusha
ja
jp
mov
jge
add
sbb
sub
inc
pusha
sbb
imul
jp
sbb
push
push
cmc
call
and
add
pop
outs
call
dec
sub
test
fldenv
or
pop
pop
inc
enter
in
jp
mov
clc
push
mov
jne
pop
adc
mov
pop
jle
fld
cmc
jbe
imul
jmp
loopne
icebp
mov
adc
loopne
fcomp
dec
jbe
mov
pop
add
and
mov
push
loopne
xlat
add
out
out
jo
(bad)
sti
sbb
push
lock
sar
add
(bad)
repnz
into
or
lea
or
sbb
sbb
(bad)
sbb
rol
sbb
inc
outs
fist
dec
enter
sahf
mov
jae
add
add
mov
retf
call
add
add
jb
add
into
or
mov
inc
jmp
jmp
std
jmp
sub
jge
sub
cmp
mov
push
bound
mov
dec
cmp
sbb
dec
add
add
fadd
dec
mov
(bad)
mov
ror
dec
mov
test
(bad)
jb
int
pushf
adc
in
loopne
clc
aas
inc
cmp
retf
or
push
lods
call
jp
jnp
or
add
dec
push
imul
adc
add
adc
int
adc
(bad)
mov
loopne
inc
pop
test
or
into
je
adc
lds
jmp
jmp
xchg
push
or
xchg
loope
push
add
or
add
add
pop
int
dec
adc
sbb
adc
mov
push
xchg
es
xor
xor
or
xchg
js
push
pop
adc
or
jae
add
ss
dec
pop
(bad)
mov
mov
inc
and
cmp
xor
into
dec
push
movs
pusha
inc
and
rol
rcr
movs
(bad)
imul
movs
pop
cmpps
mov
or
or
shr
and
pop
cld
fadd
adc
test
or
or
add
mov
movs
push
or
loope
fiadd
mov
push
je
aaa
pop
pop
pop
mov
inc
adc
xlat
push
loopne
dec
jmp
out
mov
jne
and
mov
add
test
pusha
aaa
popa
outs
out
and
push
xor
shr
fcom
pop
push
adc
nop
clc
mov
add
push
and
je
jnp
jo
enter
inc
scas
mov
push
mov
aad
add
mov
mov
mov
popa
loopne
loope
call
push
adc
test
xor
ss
or
imul
add
lods
sbb
sbb
xchg
mov
out
cmp
cmps
retf
je
and
sbb
inc
dec
dec
sahf
pop
jg
into
into
into
adc
or
js
outs
pop
sub
push
pop
nop
pop
test
(bad)
sahf
pop
mov
mov
and
and
or
xchg
adc
pop
imul
scas
inc
mov
sub
enter
call
enter
jns
faddp
or
add
inc
imul
out
push
in
in
test
and
je
leave
leave
xchg
xchg
and
jne
or
mov
jmp
movs
jb
and
retf
movs
in
sub
pop
sbb
out
(bad)
pop
movs
adc
push
mov
dec
inc
sbb
out
adc
xor
fistp
xor
mov
or
sub
push
jg
ror
fimul
hlt
je
pop
push
mov
pop
(bad)
fsubr
or
xor
test
cmc
mov
mov
sar
or
inc
stos
shr
sbb
adc
dec
jmp
and
cmp
push
or
ds
inc
aaa
push
mov
push
loope
lea
pop
popa
lods
and
jmp
add
push
push
add
mov
cmp
push
adc
in
loope
adc
cmps
(bad)
nop
cmps
in
lods
sbb
push
loope
jne
enter
xor
dec
add
add
jg
dec
pop
mov
inc
test
fisttp
jecxz
and
pop
jge
cmp
add
pop
in
xchg
dec
int
movs
dec
inc
and
jmp
xchg
mov
in
les
pop
stos
mov
add
out
push
push
push
dec
inc
cmc
sbb
loop
add
cli
rcl
icebp
hlt
pop
sub
call
jl
and
pop
test
loopne
cs
add
mov
or
add
cwde
hlt
bound
nop
mov
mov
and
or
xchg
xchg
cmps
out
sub
inc
xor
sbb
outs
loop
ret
dec
or
jg
dec
mov
sbb
adc
or
add
adc
jbe
mov
add
sub
push
pop
xchg
shr
sub
ret
adc
punpckldq
inc
sahf
nop
or
cmp
push
cmp
in
inc
jne
add
and
or
xor
jne
imul
enter
sbb
fldz
mov
mov
adc
push
cmp
daa
cwde
dec
sub
add
jne
cmp
xchg
nop
push
sbb
ja
jl
adc
leave
lock
and
(bad)
ins
cli
ins
jae
push
sbb
(bad)
push
fwait
jg
push
mov
daa
and
or
imul
mov
inc
pop
pop
icebp
loop
iret
in
test
jo
mov
dec
or
pusha
and
imul
mov
push
(bad)
cmp
jmp
inc
cmc
cmp
retf
dec
lods
add
xor
test
jmp
faddp
inc
push
in
out
lds
lock
pop
mov
and
mov
sbb
and
xchg
in
shl
ins
mov
mov
jne
call
inc
fisttp
dec
pop
fsave
dec
int3
sub
sub
adc
ror
sbb
idiv
jmp
scas
or
outs
add
jecxz
adc
or
xor
mov
in
pop
mul
pop
loope
add
push
in
jbe
test
je
int3
adc
inc
mov
(bad)
and
mov
mov
cmp
adc
ror
test
into
pushf
add
movs
sbb
add
lock
add
fwait
loopne
shr
fldenv
add
ret
ins
xor
sub
adc
clc
clc
shr
leave
ret
jl
add
(bad)
add
pop
loopne
out
jo
je
pop
and
lods
inc
test
fistp
hlt
push
jae
hlt
in
aas
jp
jmp
fstp
icebp
jne
mov
push
ins
rcr
push
pop
mov
sub
sub
das
cmp
inc
adc
ret
fisttp
mov
mov
add
clc
lahf
add
pusha
inc
add
add
retf
jo
loope
fist
mov
dec
add
mov
mov
mov
rol
jne
or
jmp
adc
push
pop
cmps
or
test
adc
outs
push
mov
mov
imul
xchg
movs
sub
jbe
mov
lock
lea
(bad)
std
mov
dec
push
stos
or
pusha
int3
or
data16
add
arpl
scas
inc
inc
test
jnp
lods
pop
push
fwait
add
mov
lock
sbb
and
pop
cld
jb
jp
or
adc
scas
adc
inc
xor
or
cli
ja
test
or
jp
jo
inc
and
xchg
and
fisubr
xor
and
add
pop
mov
sbb
mov
pusha
add
add
jmp
imul
adc
test
add
sub
rol
pop
mov
ret
imul
rol
adc
xor
imul
lock
adc
sbb
mov
js
fnsave
mov
test
adc
cmps
hlt
or
xor
cld
xor
push
dec
or
shl
jne
sbb
rol
shr
sub
ins
push
push
push
aaa
repz
jmp
ins
add
in
or
sub
fisttp
ret
repz
add
movs
dec
fdivr
push
and
add
(bad)
fiadd
pop
pop
into
fist
sub
add
(bad)
sub
inc
repnz
dec
and
adc
xchg
mov
mov
push
gs
mov
add
jle
sbb
push
(bad)
(bad)
inc
je
mov
call
bound
movs
inc
fisub
in
or
test
ret
adc
push
sbb
inc
add
rcl
aaa
fstp
mov
push
dec
in
add
mov
stos
test
mov
sbb
xchg
je
out
mov
popa
mov
int3
loope
cmp
sbb
ins
xor
enter
mov
sar
fwait
jp
mul
clc
ret
adc
inc
leave
mov
enter
or
dec
pop
sub
push
cwde
or
call
fild
jne
and
or
push
adc
adc
pusha
jecxz
enter
push
cli
adc
or
add
mov
fld
sub
(bad)
jp
pop
cmp
jo
shr
clc
addr16
adc
rcl
inc
loopne
out
jg
rol
xor
neg
aam
xor
neg
out
add
outs
retf
int
cvtdq2pd
(bad)
lahf
out
sahf
or
es
push
and
cmp
sbb
lock
pop
dec
bound
idiv
mov
jp
sahf
rcl
pop
ret
add
xchg
jbe
xchg
add
mov
mov
movs
push
adc
adc
(bad)
out
ins
pop
and
cli
stos
fadd
mov
int
ror
in
mov
das
push
div
mov
and
cmp
mov
sbb
push
mov
fsubp
push
(bad)
push
cmps
pop
repnz
and
mov
sub
ja
pop
sub
cmp
adc
mov
int3
in
jl
movs
(bad)
and
fwait
out
push
daa
ret
mov
rcr
fadd
push
sbb
push
out
ins
xor
loope
sub
iret
icebp
or
jo
out
adc
or
mov
and
loope
sub
or
add
push
loope
adc
loope
sbb
loopne
xchg
pop
icebp
push
pop
xlat
cdq
loop
jbe
pop
inc
js
iret
mov
fs
mov
mov
in
ror
jo
(bad)
mov
push
or
sub
cli
add
fbstp
mov
(bad)
in
idiv
inc
pushf
cmp
fnstcw
fsubp
push
(bad)
pop
and
cmp
ret
fdiv
(bad)
adc
test
imul
popf
les
aaa
aaa
push
lods
mov
mov
jle
dec
adc
shl
and
and
sbb
add
inc
or
pop
cmp
add
jno
retf
call
mov
fnstcw
mov
xchg
cli
out
fisttp
out
repz
rol
jno
(bad)
ret
inc
call
data16
pop
cmp
inc
add
cmp
hlt
stos
push
or
or
inc
jnp
mov
xlat
push
sbb
jb
jmp
jmp
pop
retf
xlat
or
jl
sub
mov
cld
xlat
jle
or
pop
jge
or
add
fiadd
inc
cmp
inc
pop
sar
mov
inc
loopne
cmp
push
les
je
add
add
xor
inc
(bad)
xchg
retf
not
mov
mov
ja
fstp
xor
loope
and
mov
rol
ret
and
ds
add
pop
retf
mov
popa
xchg
movs
and
jns
jns
cmp
leave
loopne
fmul
cwde
ss
mov
jecxz
ins
stc
cwde
jo
xor
add
jne
mov
je
xor
out
or
int
fst
loopne
or
in
loopne
rcl
js
push
in
adc
mov
mov
adc
rcl
mov
ret
add
loopne
popf
enter
leave
sbb
or
mov
shl
fcmovb
or
mov
jne
test
sbb
xor
pushf
push
jnp
pop
mov
ret
mov
or
faddp
add
jmp
or
lahf
ror
loopne
mov
les
movs
add
mov
jb
es
jae
int
retf
shl
rcr
ret
popa
pusha
jp
adc
ror
mov
mov
je
(bad)
ja
jb
pop
ja
mov
add
push
cdq
scas
je
cmc
mov
add
cmp
push
xchg
sbb
dec
loop
inc
fbstp
js
sub
push
mov
add
dec
mov
sub
aam
push
pushf
cdq
les
sbb
repnz
jp
pusha
loop
add
retf
dec
fistp
lods
neg
jo
loopne
xchg
ror
and
shr
fdivr
add
push
add
cmps
imul
cmp
sahf
cli
mov
cmp
add
push
mov
push
mul
inc
cmp
lock
(bad)
pushf
enter
pop
mov
inc
add
jg
pop
shl
sbb
and
lock
dec
addr16
(bad)
sar
sbb
sbb
add
in
mov
xchg
(bad)
std
mov
std
dec
clc
aad
ret
push
xor
lahf
push
shr
outs
(bad)
fisub
call
pop
stos
lock
jnp
mov
out
loope
out
and
mov
add
sbb
adc
xchg
outs
(bad)
lock
dec
pop
aam
sar
(bad)
dec
ja
xor
jmp
arpl
and
inc
sub
mov
pop
cmc
or
jne
fxch
fyl2x
jmp
and
in
fldl2e
fmulp
jnp
or
shl
popa
sub
add
mov
xchg
adc
dec
test
add
ins
or
pop
neg
fcomp
jmp
cmp
or
mov
adc
add
fldln2
inc
in
fnstsw
popa
dec
das
fwait
rol
push
popa
sbb
or
jne
pop
mov
sbb
out
in
mov
push
or
add
push
sub
je
in
jmp
loop
or
clc
dec
test
push
rcpps
cmp
add
lea
fcmovb
mov
cmp
jmp
push
dec
jnp
xchg
in
mov
sahf
fsub
daa
jbe
lock
xor
push
adc
sbb
pop
cwde
inc
dec
xor
and
or
xchg
sbb
clc
dec
jmp
push
pop
jbe
pop
push
hlt
or
lods
jge
push
adc
data16
push
jno
adc
add
icebp
mov
add
popf
pop
mov
add
jmp
scas
rcr
mov
popf
pop
sub
mov
icebp
mov
in
inc
pop
jg
pusha
xchg
loope
stc
rol
mov
out
and
shl
push
and
mov
shl
lods
push
and
int
iret
cld
(bad)
sub
das
and
rol
mov
add
loopne
shl
add
les
cmps
xchg
cmp
js
adc
test
neg
js
mov
or
je
add
imul
add
add
ret
mov
cmp
in
jmp
pop
jl
and
add
add
jb
fnstcw
add
add
cmc
cwde
je
pop
(bad)
loopne
or
or
pop
fimul
sub
xor
rol
fnstcw
cdq
sbb
data16
mov
fldcw
stos
(bad)
(bad)
push
adc
adc
pop
pop
mov
fstp
ret
mov
jmp
jg
int3
push
shr
fldcw
add
hlt
loope
and
mov
jnp
enter
out
ror
fld
and
or
inc
mov
or
je
or
test
fld
fdivr
mov
or
shl
xchg
and
push
xlat
or
push
outs
pop
pop
ret
in
cmp
sbb
call
jle
or
cmp
imul
dec
push
gs
mov
jbe
movs
stos
jmp
daa
je
xlat
pop
shl
sub
mov
jne
sbb
rol
je
mov
cmp
popa
cmc
push
add
test
xchg
jae
xlat
fsubr
mov
in
mov
jbe
dec
sbb
pusha
xor
pop
je
push
or
jne
das
xor
adc
not
xor
push
dec
sub
and
clc
add
add
push
inc
or
adc
jl
push
mov
rcr
adc
adc
cmp
mov
mov
and
aad
pop
or
std
cmp
fmul
das
mov
pusha
je
inc
and
movs
shr
pushf
fnsave
inc
cmp
loopne
call
mov
or
sub
fsub
sub
pop
cmp
push
jge
fcomp
xchg
add
sbb
imul
cwde
loopne
push
dec
cwde
jb
pop
pop
mov
or
lock
and
ret
cmp
xchg
jne
and
aam
add
pop
sub
add
mov
inc
or
jmp
mov
push
dec
je
ins
shl
dec
push
adc
dec
jp
jns
daa
add
rcl
cmp
push
mov
es
cdq
push
sub
pop
adc
stos
push
movs
xor
das
push
adc
pushaw
stos
or
inc
add
sbb
ins
mov
je
jbe
(bad)
mov
clc
or
adc
fld
loope
dec
mov
or
mov
loopne
or
(bad)
adc
pop
lahf
and
pop
and
mov
cwde
dec
or
add
or
movs
push
and
das
push
pop
inc
push
imul
stos
mov
mov
or
stc
fldz
push
push
pop
loop
xchg
add
sti
add
adc
sub
mov
push
mov
fwait
sar
dec
add
pop
hlt
dec
pop
fwait
pushf
(bad)
fadd
pop
or
inc
dec
jb
mov
cld
lds
in
mov
int3
xor
test
out
pop
cmp
jb
mov
gs
pusha
pop
xchg
loope
pop
outs
add
test
ret
and
adc
or
xchg
imul
xchg
fsub
ins
sub
cmp
in
popf
in
add
hlt
div
fistp
pop
fucomip
pop
mov
and
leave
and
jp
aam
or
adc
inc
dec
inc
mov
sub
adc
je
nop
in
mov
enter
add
lea
xchg
arpl
or
enter
sbb
push
dec
push
and
xor
mov
fisub
ret
pop
gs
and
mov
inc
lds
mov
add
xor
cmp
push
je
push
loop
ret
and
loopne
jmp
sbb
inc
retf
aas
mov
jno
fmul
lahf
push
pop
fwait
nop
xchg
lock
les
xchg
or
fwait
pop
call
in
in
mov
leave
int3
retf
adc
imul
retf
inc
mov
rcl
not
and
clc
outs
push
mov
mov
or
daa
xchg
and
js
or
in
rcr
add
lahf
lods
rcl
mov
add
int3
fcomp
enter
movs
(bad)
sbb
pop
xor
rol
add
pop
clc
jb
add
rcr
add
in
ins
jb
sbb
mov
jb
dec
int3
mov
pop
or
adc
jl
sub
sub
add
sbb
lock
sbb
push
into
dec
pop
shr
mov
out
into
lahf
lods
mov
fxch
lock
movs
movs
pop
mov
and
cmp
int3
sub
jnp
or
outs
cmp
rcl
xor
iret
add
ror
test
push
add
push
xor
iret
inc
std
mov
or
repnz
sub
call
lods
xchg
inc
lahf
or
iret
fcomp
enter
add
in
shl
(bad)
xchg
xchg
add
pop
jmp
das
in
cmp
dec
fs
in
pop
call
pusha
nop
outs
nop
xor
in
mov
fcmovb
push
lock
mov
dec
in
das
xchg
sbb
pushf
movs
sbb
jle
pushf
(bad)
shl
mov
push
inc
or
push
cmps
or
shl
jl
test
push
mov
sub
xchg
ret
xlat
cs
jmp
(bad)
cld
fwait
in
repnz
pushf
pop
push
aad
push
cwde
stos
add
rcl
pop
rcl
test
retf
leave
adc
mov
and
test
inc
shl
mov
pushf
loopne
or
xchg
sbb
ror
fdivr
aam
adc
scas
and
lea
dec
imul
sub
mov
pop
ins
ins
jb
cwde
pop
dec
les
xchg
mov
pop
fs
pop
lock
mov
or
or
lahf
push
push
jb
loopne
fadd
fwait
aad
add
pop
adc
push
add
aad
out
add
adc
enter
push
xor
mov
inc
xchg
pop
inc
pop
xor
cdq
aad
push
cmp
nop
sub
push
aas
aam
loopne
and
add
or
jns
adc
pop
in
cmp
outs
out
inc
adc
dec
jns
in
call
add
je
pop
loop
outs
in
rol
mov
and
aam
and
push
sbb
aas
fadd
fisttp
(bad)
dec
adc
sbb
pusha
adc
scas
sub
push
and
adc
stos
jno
pusha
xchg
rcr
adc
adc
jg
cmp
or
sbb
adc
jl
sbb
fmul
add
stos
shr
jg
adc
repnz
add
sbb
pop
adc
add
dec
add
pop
in
fmul
push
lds
add
(bad)
pop
and
and
aam
xchg
mov
(bad)
scas
adc
push
outs
shl
call
inc
dec
cmp
fist
add
mov
fdivp
and
adc
cmp
fcmovnb
mov
lods
mov
cmp
fld
and
aas
or
das
(bad)
or
(bad)
fimul
mov
fld
sbb
in
lgs
call
cmps
aam
fdivr
inc
jmp
adc
inc
lock
sar
fmul
or
and
xor
push
rcl
adc
inc
sbb
jle
adc
fsubr
fisttp
adc
enter
dec
ins
add
fstp
fcomp
xor
and
inc
nop
add
movs
iret
in
push
clc
mov
pop
push
cld
mov
pop
add
jl
sbb
cmp
outs
in
and
add
lods
add
clc
stos
pusha
add
call
or
rcl
adc
or
add
jo
scas
mov
xchg
add
lods
imul
mov
arpl
pop
fcomp
adc
or
pop
and
pop
push
jle
sbb
rcl
mov
fsubr
push
push
xchg
loopne
sbb
aam
jo
in
and
pop
enter
leave
test
lock
mul
sbb
jl
cwde
push
xor
add
in
cmp
adc
loope
fsubrp
push
inc
sub
out
sar
stc
xlat
test
fcom
mov
pop
jo
jb
ret
add
repz
push
jl
outs
dec
out
imul
xchg
and
mov
mov
or
in
(bad)
in
call
imul
fnstcw
popa
sub
(bad)
sub
jecxz
fimul
lods
push
push
jmp
push
pop
mov
or
test
pusha
pop
add
mov
mov
(bad)
mov
sub
(bad)
adc
dec
repnz
pop
in
loopne
xchg
or
push
ret
adc
pop
fistp
sub
and
xchg
push
pop
or
bound
xor
pop
push
inc
adc
jl
inc
dec
lahf
movups
push
mov
sbb
dec
mov
mov
mov
sbb
sbb
and
push
adc
(bad)
out
dec
daa
xor
sahf
jne
ss
cmp
nop
pop
out
pop
sub
xchg
sbb
retf
sbb
pusha
repnz
pop
fmul
test
mov
sahf
fs
pushf
pop
push
shl
mov
push
rcl
sbb
shr
das
call
mov
adc
jne
pop
enter
sub
sbb
dec
les
(bad)
lods
push
retf
jmp
mov
fimul
jmp
pop
jmp
stos
lahf
pop
dec
in
sub
jmp
jns
xor
pop
aas
adc
jmp
adc
mov
aas
jne
(bad)
ficom
or
push
adc
jno
aas
add
xchg
(bad)
lea
hlt
mov
mov
push
lds
jg
mov
or
jns
mov
sub
sahf
movs
mov
iret
push
repnz
push
or
in
movs
mov
inc
and
mov
push
mov
ret
push
in
or
test
fdivr
sbb
mov
or
dec
sub
(bad)
movs
jno
call
movs
and
adc
push
sbb
ror
dec
and
adc
adc
aad
mov
mov
rcl
cmp
pop
mov
pop
out
sbb
retf
lahf
out
jl
aad
adc
cmp
js
cmp
lock
mov
lock
call
aaa
sub
icebp
inc
pop
push
push
pushf
scas
les
mov
icebp
js
and
lock
lock
xchg
cld
jl
mov
or
mov
fwait
loopne
iret
push
sbb
lods
or
mov
add
cld
mov
ins
arpl
xor
retf
xchg
les
(bad)
sbb
add
pop
imul
mov
xor
ret
sbb
ins
sbb
in
or
push
xor
stc
push
pop
sub
add
jns
pusha
js
fs
pop
xor
push
inc
mov
repz
lods
dec
pop
pop
or
jmp
das
inc
(bad)
dec
movs
push
sub
pop
add
movs
jl
push
cwde
frstor
and
scas
jl
mov
out
fisttp
loopne
dec
cwde
add
pop
leave
mov
or
fcomp
(bad)
pop
lock
jg
jecxz
add
rcr
cmp
pop
mov
hlt
cwde
pop
or
sub
push
clc
pop
dec
and
xor
or
or
lea
popa
ja
sbb
test
stc
aas
idiv
inc
or
div
ret
jb
test
and
inc
cmp
sub
test
or
or
mov
and
ins
int3
sahf
ins
adc
outs
lock
aas
push
add
stc
push
out
jb
or
stc
add
adc
stc
test
daa
daa
in
dec
inc
pop
push
sub
or
sub
adc
and
mov
iret
sbb
adc
cli
add
push
hlt
cli
call
adc
mov
and
mov
inc
mov
sti
test
ror
bound
push
sti
fadd
mov
enter
rcl
mov
pop
in
sbb
adc
mov
mov
push
inc
xchg
push
sub
add
sub
mov
xchg
movs
(bad)
jno
nop
pop
xor
jmp
sub
or
and
or
or
or
popf
pop
fld
cmp
xor
std
dec
pop
cld
es
cmp
pop
xor
sbb
(bad)
sbb
and
les
sbb
std
xchg
push
loopne
xor
or
mov
in
std
in
faddp
push
icebp
mov
push
xchg
dec
popf
aas
mov
cmp
cwde
into
lea
fdivr
repz
cmp
popa
push
add
or
pusha
jmp
and
shl
movs
ja
sub
lock
dec
aas
aam
and
jg
mov
mov
test
and
mov
sbb
jb
adc
lahf
xor
pusha
dec
sbb
mov
sbb
and
lahf
aam
rcl
dec
sar
enter
add
push
(bad)
mov
sbb
call
cmps
sub
jge
jle
fisubr
fiadd
enter
adc
jno
js
or
add
(bad)
movs
in
std
mov
add
int3
fsub
or
add
xor
ffree
aas
or
sub
dec
enter
in
mov
lods
jecxz
mov
sub
push
jg
push
sub
xchg
or
fcomp
mov
sbb
add
fild
ins
adc
pop
xchg
movs
xor
push
cwde
jne
es
and
mov
mov
add
in
add
outs
mov
mov
mov
iret
add
inc
nop
jmp
adc
sar
adc
shl
mov
bound
mov
lods
push
(bad)
iret
and
or
or
pop
jb
lock
push
imul
xchg
dec
(bad)
call
or
outs
inc
jg
enter
lock
imul
imul
inc
dec
or
clc
sub
repnz
clts
adc
adc
xor
mov
bound
(bad)
std
or
lahf
leave
push
dec
mov
dec
cmp
lock
inc
pop
fisttp
push
xor
aas
add
xchg
leave
les
sbb
mov
mov
pop
ffree
sti
xor
lds
rcl
xchg
jmp
jmp
or
dec
push
dec
aas
lock
test
mov
or
mov
push
or
imul
and
(bad)
rcr
xchg
aaa
imul
fs
cmp
fs
adc
adc
mov
jl
or
sbb
int3
adc
nop
in
(bad)
in
movs
pop
retf
nop
sahf
loopne
pop
sub
mov
push
les
sub
stc
add
sub
add
dec
add
or
pop
shl
(bad)
cld
xchg
sub
dec
and
mov
dec
or
leave
xor
sub
sub
pushf
add
dec
pop
test
dec
inc
shl
add
arpl
mov
jle
imul
mov
sub
xchg
mov
daa
mov
push
sub
ins
sar
sti
adc
jae
fs
imul
adc
or
xor
mov
jno
pop
call
scas
dec
in
dec
mov
enter
int3
lahf
aaa
ss
mov
jo
popa
outs
or
inc
sub
push
fsubr
out
adc
cdq
fsubr
(bad)
pushf
fs
ins
sbb
dec
add
test
adc
mov
leave
add
or
shl
cmp
ins
inc
mov
pop
xor
dec
lea
es
or
mov
inc
sbb
mov
and
(bad)
sbb
push
inc
dec
sbb
mov
xchg
sbb
test
xchg
call
push
push
nop
imul
shl
push
push
mov
sub
sub
push
add
std
loope
(bad)
fcom
cld
leave
xchg
in
jns
adc
and
sub
or
jne
in
movs
scas
and
inc
or
cs
mov
in
sbb
mov
inc
cmps
bound
mov
push
mov
sbb
(bad)
hlt
inc
(bad)
add
dec
test
repnz
jp
in
movs
ins
mov
imul
push
xor
push
test
xchg
cmp
jg
xor
and
push
imul
add
adc
lahf
sbb
inc
push
ds
in
push
enter
shl
adc
jno
sub
lahf
fcomp
xchg
cmp
adc
int3
jg
mov
jne
jmp
push
push
nop
mov
pop
enter
pop
sahf
mov
dec
mov
pusha
or
iret
les
push
adc
jbe
and
jle
xchg
mov
xor
add
or
pushf
lahf
scas
push
test
adc
adc
pop
add
nop
in
xchg
mov
sbb
sub
outs
dec
clc
cmp
xchg
test
and
adc
pop
adc
xlat
cs
hlt
pop
movs
mov
cs
mov
outs
enter
adc
add
lods
in
adc
or
lds
enter
movhps
mov
cmp
fbld
(bad)
lods
stos
push
push
aas
inc
add
rcr
sbb
or
inc
dec
aas
xchg
sbb
call
loop
(bad)
adc
inc
jmp
sbb
push
sub
cld
or
movs
and
sbb
(bad)
jmp
add
repnz
test
ins
jge
(bad)
and
jmp
push
add
sbb
pop
imul
xchg
pop
inc
and
sbb
jl
dec
fs
push
aas
jge
jns
sub
add
icebp
xchg
pop
fs
cmp
or
jno
sbb
jnp
jb
cld
pop
sbb
jecxz
sbb
push
bound
jb
aad
sbb
jmp
leave
mov
cmc
in
imul
push
daa
inc
sub
sbb
mov
add
gs
adc
cmps
or
sbb
pusha
or
arpl
xchg
xchg
mov
lods
xor
test
in
pushf
pop
mov
jg
push
add
movs
ins
lds
pop
dec
sar
(bad)
lahf
test
sbb
add
fcom
scas
sbb
or
pop
sbb
pop
pushf
in
fidiv
cmp
adc
dec
jmp
aam
xor
push
movs
mov
in
push
lea
adc
pop
loopne
xchg
sahf
movs
(bad)
aas
sbb
sbb
pusha
repnz
adc
pop
sbb
jg
call
mov
stos
push
mov
das
and
jbe
push
dec
call
xlat
in
push
pop
adc
cmc
mov
inc
stos
dec
sbb
imul
test
stc
dec
out
add
cmp
je
mov
or
sub
xor
fucom
nop
in
in
xchg
adc
xlat
(bad)
mov
xor
lahf
leave
outs
repnz
movs
sbb
inc
mov
sbb
pop
xor
xor
pusha
js
sbb
test
pop
lods
push
nop
or
in
enter
sbb
cld
cmp
aaa
add
mov
pop
ror
(bad)
movs
pushf
ret
lea
inc
sbb
mov
jmp
adc
clc
dec
out
popa
mov
push
pop
in
adc
(bad)
push
sar
imul
add
aaa
dec
and
lahf
dec
fdivr
shr
push
cs
int
js
mov
jmp
pop
cmp
fbstp
inc
movs
xchg
aas
test
inc
rcl
movs
sbb
ret
leave
pop
fadd
sub
adc
mov
cmp
mov
lahf
scas
or
xchg
inc
jg
jg
fimul
punpcklbw
mov
hlt
xchg
mov
and
push
jb
mov
push
cwde
rcl
movs
ins
adc
fwait
ss
cmove
mov
xor
push
popa
jg
adc
and
xchg
and
outs
loope
mov
xor
push
and
in
mov
xchg
imul
ins
cmp
mov
xchg
xchg
or
and
jmp
ja
inc
mov
cmp
and
and
push
jmp
jmp
dec
leave
mov
jg
lahf
inc
sub
(bad)
inc
dec
mov
invd
or
or
pop
movs
rol
mov
mov
or
or
add
mov
or
xchg
sub
mov
inc
es
lods
pop
fwait
std
mov
outs
cmp
dec
pop
test
mov
stos
stc
(bad)
pop
js
aam
movs
fistp
fild
push
lods
stos
aaa
imul
fmul
xchg
mov
sub
and
xlat
scas
in
pop
cmp
shr
dec
hlt
pop
aas
and
lea
xor
mov
add
shl
bswap
pop
aam
movs
push
mov
or
loop
rcl
pop
push
add
movnti
std
enter
fsubrp
add
mov
or
arpl
int3
jo
adc
test
out
pop
fsub
xchg
lods
and
mov
test
inc
xchg
inc
add
js
(bad)
arpl
leave
inc
mov
(bad)
retf
test
adc
stc
add
sbb
nop
in
clc
jg
popf
cmp
daa
sub
(bad)
dec
call
push
ins
add
(bad)
mov
xchg
sbb
sbb
outs
in
ss
es
enter
adc
scas
fcomp
sub
push
mov
xor
dec
stos
inc
xchg
mov
pop
jg
std
lea
rcl
adc
sub
dec
std
dec
std
sub
lahf
movaps
dec
lods
add
inc
adc
inc
iret
push
fldcw
call
mov
xor
mov
rcr
mov
add
adc
ds
lock
push
(bad)
(bad)
inc
(bad)
fadd
sbb
inc
sahf
sbb
pushf
add
in
pop
dec
adc
(bad)
adc
dec
mov
call
mov
or
pop
sub
sbb
ins
mov
jl
and
or
pop
inc
mov
ret
cwde
jns
mov
adc
mov
xchg
retf
retf
lea
sbb
adc
inc
dec
dec
push
sub
jne
inc
adc
leave
and
sahf
in
nop
ins
jle
call
push
lods
fs
dec
push
pusha
xor
and
fisub
push
adc
imul
and
sub
sub
in
adc
fmul
jae
out
mov
int3
ror
mov
dec
loopne
idiv
pop
sub
jecxz
pop
xchg
xor
lock
std
jmp
das
mov
add
add
das
and
lock
ins
xchg
push
push
inc
xchg
mov
pushf
fist
push
fdiv
mov
js
mov
xor
in
scas
fsubr
xor
mov
sbb
cmp
cmps
movups
ficomp
aas
xor
pextrw
lea
push
pop
mov
nop
sub
sbb
sahf
add
out
sub
cdq
cs
in
nop
mov
add
xor
repnz
enter
pop
mov
imul
jb
ffreep
adc
retf
movs
cli
xor
push
test
fnstsw
es
xchg
out
dec
dec
adc
sar
imul
shl
push
in
pushf
ss
sub
dec
std
mov
xor
inc
xor
iret
mov
scas
(bad)
imul
imul
rol
adc
sbb
and
inc
enter
in
dec
dec
and
dec
rcl
addr16
stos
sbb
pop
aam
xlat
enter
or
into
enter
sub
mov
aas
mov
fild
lfs
rol
mov
and
iret
fcomp
pop
adc
repnz
xor
sahf
fadd
mov
pxor
call
pop
loope
xor
sysenter
cld
lock
cmp
push
add
mov
xchg
inc
add
xor
xor
fdivr
test
inc
aam
add
add
xchg
(bad)
shl
iret
das
loopne
sub
push
and
add
cmp
lea
sbb
sbb
(bad)
mov
or
shl
mov
pop
pop
fadd
cmp
pusha
call
mov
inc
stos
xor
sub
ret
lods
jns
mov
xor
jecxz
and
jo
aaa
loopne
dec
mov
in
lahf
cmp
xor
(bad)
cwde
xchg
fistp
mov
or
fbstp
aas
add
xor
pop
inc
scas
or
xor
pop
jmp
mov
clc
scas
lock
sbb
and
mov
das
inc
(bad)
in
dec
push
mov
inc
stos
mov
daa
nop
fdivr
and
xchg
mov
sar
cmp
and
jo
xor
movs
push
scas
arpl
add
cmp
rcl
cmp
push
imul
xor
mov
retf
add
dec
fbstp
leave
mov
fs
push
sub
xchg
adc
cmp
mov
in
cmp
stos
push
pusha
and
repnz
or
cmp
mov
ficomp
xchg
add
mov
ret
(bad)
cmove
mov
les
mov
push
and
pop
scas
inc
movs
mov
(bad)
jl
jp
or
std
adc
lods
adc
inc
jb
mov
cmp
sub
mov
das
lods
addr16
les
in
jg
in
nop
add
mov
jg
adc
(bad)
aad
dec
jmp
inc
call
fadd
nop
arpl
xchg
dec
sub
or
jae
je
jns
push
push
jns
xor
push
lahf
sub
adc
and
ins
(bad)
aam
pop
enter
out
sbb
in
(bad)
iret
cmp
lahf
scas
mov
sbb
sbb
or
inc
je
push
pop
or
mov
daa
adc
xchg
mov
jo
adc
push
dec
push
ret
push
dec
enter
aas
push
mov
push
(bad)
pop
xchg
pop
popa
dec
les
fdivrp
stos
(bad)
sub
gs
rcr
and
je
sub
cmp
fisttp
xchg
mov
test
cs
or
ins
push
inc
movs
fadd
jbe
lock
bound
popf
fmul
sbb
rcl
popf
cld
cli
push
sub
repnz
sbb
cli
loopne
jo
mov
inc
loopne
mov
call
lds
inc
adc
shl
nop
add
shl
sub
add
or
inc
or
aam
cmp
popa
aam
out
ins
cwde
out
nop
out
pop
fsub
pop
test
pushf
ins
jmp
je
ret
dec
cmp
pop
inc
mov
les
mov
lahf
adc
icebp
or
jmp
imul
push
lea
xor
loopne
push
inc
in
enter
dec
xor
mov
(bad)
in
cld
(bad)
jge
or
adc
sub
pop
inc
sbb
fistp
inc
dec
jb
inc
and
js
pop
mov
popf
add
loopne
call
and
scas
clc
adc
or
inc
inc
popf
mov
data16
add
ss
inc
jmp
mov
cmp
push
imul
fmul
arpl
sti
sbb
test
inc
xor
dec
fisttp
dec
ins
int3
sub
push
rol
or
fs
mov
lods
inc
nop
sbb
add
fcom
mov
hlt
xor
push
add
pop
inc
mov
dec
sub
sbb
adc
ins
call
les
pop
add
cwde
inc
cmps
mov
push
imul
popf
mov
test
mov
jb
adc
enter
add
loopne
enter
fmul
mov
and
adc
mov
test
sub
outs
jne
std
mov
jno
add
sbb
enter
jmp
fwait
or
pop
mov
inc
pop
push
test
mov
xor
enter
fistp
pusha
pop
rcl
push
push
ins
aam
enter
xchg
dec
xor
lock
sbb
and
xor
es
fs
enter
sar
adc
push
nop
jmp
mov
xchg
les
xchg
dec
xchg
inc
or
mov
imul
in
add
das
ja
aas
leave
pop
test
pop
cmp
dec
pop
push
dec
jns
mov
imul
lods
aam
inc
psraw
test
mov
call
dec
xor
shr
pop
inc
rol
in
dec
int
ficomp
xor
dec
cmp
sub
xor
inc
aad
push
push
xchg
les
das
call
shr
cmp
mov
dec
and
or
mov
dec
mov
mov
xchg
jae
imul
(bad)
and
mov
loopne
out
sar
cmp
(bad)
daa
movs
mov
fdivr
mov
out
psubsb
pop
pop
pusha
test
dec
mov
sub
sbb
or
xor
aaa
jns
call
enter
mov
aaa
les
cmc
add
sbb
xchg
adc
push
dec
push
xchg
mov
adc
pop
jb
xchg
imul
xchg
and
popa
jge
xor
cmp
sub
cmp
jb
aad
sub
or
in
dec
shr
lea
adc
and
push
daa
dec
or
add
out
outs
enter
jno
enter
pop
call
mov
cld
not
mov
mov
cmpps
lods
inc
out
mov
ins
pop
test
jo
je
test
icebp
dec
add
mov
pop
popa
test
movs
push
scas
ror
xchg
cli
fst
ins
xchg
out
sbb
xchg
xor
cmp
imul
sbb
loopne
call
leave
add
inc
sbb
enter
mov
enter
test
inc
or
and
rol
pop
xor
xor
enter
aas
and
fiadd
jo
popa
call
in
imul
mov
loope
stc
mov
lds
adc
cmc
add
add
add
movs
popf
or
xchg
stc
dec
call
adc
inc
outs
(bad)
sbb
sbb
lods
push
add
cld
jmp
cld
fist
aas
pop
clc
nop
pop
adc
push
xor
push
and
(bad)
push
pop
test
lea
ss
jecxz
les
xor
pop
and
das
int3
pusha
xchg
aam
push
popf
inc
mov
dec
(bad)
sti
movs
and
push
push
push
mov
fstp
add
add
mov
cwde
sub
inc
out
pushf
nop
push
imul
mov
xor
mov
lgs
mov
pop
inc
in
pop
jecxz
pushf
push
or
or
jge
push
pushf
cmp
jne
push
cwde
and
cld
add
gs
cld
push
fadd
dec
ret
mov
movs
loopne
inc
pop
add
cld
jmp
mov
push
push
mov
pop
push
jg
push
and
scas
mov
aam
mov
cld
pop
add
add
jecxz
sub
inc
movs
cs
int3
dec
push
pop
inc
pandn
shl
jg
mov
fild
jg
add
mov
js
or
int
xor
sub
sub
push
dec
inc
sub
add
cwde
ins
dec
retf
leave
aam
cdq
lahf
(bad)
enter
add
sbb
mov
dec
ror
xchg
nop
in
push
cmp
sub
bound
mov
dec
dec
mov
mov
push
pop
jb
es
das
dec
in
call
in
lock
(bad)
push
cmp
mov
(bad)
mov
inc
call
sbb
inc
mov
test
(bad)
pop
aad
jg
stos
inc
mov
or
nop
push
mov
and
jb
or
inc
in
es
ss
in
adc
sbb
aam
push
inc
nop
in
mov
repnz
dec
leave
inc
adc
mulps
test
jno
dec
pop
add
xchg
or
jo
pop
push
(bad)
push
cmp
or
retf
stc
jmp
loop
dec
push
imul
push
mov
fnsave
fisttp
adc
adc
push
(bad)
les
fmul
hlt
jle
sbb
ss
mov
add
rol
imul
lock
rcl
inc
outs
push
mov
imul
sbb
pop
adc
xchg
dec
cmps
inc
lods
sbb
js
dec
fwait
nop
adc
jbe
jecxz
mov
mov
adc
cmp
add
shr
inc
adc
ins
cld
cld
mov
xchg
jo
js
jne
mov
lods
jg
ss
mov
pop
adc
imul
inc
cs
pop
loope
in
dec
aaa
xchg
pushf
pop
lock
dec
inc
jl
cmp
or
daa
pop
and
jl
adc
cdq
lds
pop
push
jmp
sub
(bad)
xor
or
pop
test
adc
add
mov
int
sbb
push
add
int
xor
and
xchg
stos
inc
(bad)
int
cwde
repnz
das
and
add
pop
scas
sub
popa
sbb
call
mov
ror
outs
pushf
call
jle
adc
pop
call
pop
sub
(bad)
and
inc
cwde
inc
dec
enter
mov
mov
inc
jecxz
mov
xchg
sub
out
shl
mov
cdq
pusha
xchg
dec
outs
scas
add
and
jns
jl
fs
cmps
dec
mov
sub
inc
and
pop
jmp
and
aad
add
inc
sub
inc
add
ss
test
inc
dec
and
in
sti
rol
add
adc
push
xor
adc
fadd
push
rol
mov
fcom
dec
or
and
adc
aam
or
jg
nop
inc
scas
in
call
lds
out
xchg
mov
popa
push
jg
(bad)
rcr
jno
add
pop
pop
sbb
and
adc
hlt
popa
inc
mov
cmp
dec
xchg
bound
leave
xor
fcomp
or
fadd
xchg
jo
int3
jg
sbb
xor
adc
push
in
in
fsub
std
loopne
or
arpl
jae
or
in
xchg
out
aam
ffreep
and
jmp
aam
pusha
sub
add
aam
arpl
or
aam
lahf
fcomip
push
xchg
pop
iret
dec
movs
mov
mov
enter
and
and
mov
lahf
adc
xchg
xor
shl
add
sbb
popa
enter
sub
cmps
and
es
stos
aam
add
inc
xchg
inc
push
gs
out
xor
repz
push
dec
inc
add
xor
ins
inc
and
aam
aad
cmc
je
imul
jb
scas
mov
movs
jo
scas
adc
push
mov
jne
in
js
cs
add
pushf
sbb
std
adc
or
cmps
add
aam
add
and
idiv
jo
pop
or
ins
pop
sub
and
mov
nop
pop
fst
inc
pop
cmp
adc
and
(bad)
out
test
sbb
pop
test
inc
add
dec
and
aam
lock
test
xchg
dec
sbb
dec
xor
and
mov
xchg
pushf
movs
push
ret
dec
test
iret
add
push
popf
inc
mov
inc
es
test
pop
adc
int
push
aad
int3
test
and
cdq
pop
inc
div
inc
enter
inc
mov
fbld
pop
sub
inc
enter
lock
cmc
push
in
cwde
mov
inc
push
(bad)
mov
dec
aaa
sbb
pusha
push
test
add
aas
stos
mov
fs
in
xchg
mov
js
adc
test
mov
inc
push
jo
push
cmp
test
inc
je
fistp
or
dec
int
sbb
je
adc
fsub
jmp
push
fmul
popa
push
es
scas
int3
pop
and
jo
push
(bad)
jecxz
in
lods
lods
cdq
push
add
and
add
ins
in
add
sbb
rol
nop
add
and
or
push
sub
call
inc
pop
dec
(bad)
call
jge
shr
xchg
cmc
mov
pop
imul
xor
sbb
xor
fdiv
dec
add
add
pop
pop
xchg
add
sub
mov
pusha
mov
fnsave
pop
inc
inc
mov
xor
mov
js
cmp
aam
inc
pushf
rcl
lock
add
xor
and
fistp
cmp
out
push
sbb
cmp
adc
cdq
push
xchg
adc
cmp
sub
cmc
dec
jnp
ss
fs
(bad)
mov
aas
retf
ud0
sub
mov
xor
push
push
adc
fild
push
imul
cmp
pop
movs
xor
push
pop
rcl
and
jns
fs
les
pushf
aas
add
test
mov
or
xor
test
test
inc
push
je
test
loopne
shl
lds
add
push
idiv
shl
inc
sub
pusha
test
mov
xchg
inc
dec
pop
xchg
fdivr
jge
lds
pop
fmul
aas
dec
stos
jl
test
jge
nop
shr
pop
(bad)
xchg
pop
mov
ret
into
add
pop
push
push
nop
xchg
rol
pop
inc
push
jns
loope
inc
aas
mov
and
nop
adc
pushf
sub
push
(bad)
inc
cld
cmp
lods
add
retf
adc
neg
sub
or
das
inc
sub
and
lods
inc
cs
jge
add
and
or
stos
loopne
fisttp
(bad)
(bad)
je
pop
add
jl
or
and
cmp
and
sbb
je
and
test
jmp
aad
xor
xor
sub
pop
dec
ret
aas
nop
daa
and
mov
pop
or
test
mov
xchg
add
cmp
mov
push
push
sbb
ret
nop
mov
nop
add
sti
nop
add
pop
scas
jmp
pop
adc
pop
push
xchg
int3
int3
sub
ret
dec
aaa
add
in
dec
dec
test
cmp
repz
in
nop
out
mov
popa
daa
sbb
inc
or
sub
cmp
or
daa
or
push
cmps
jl
ret
adc
test
add
out
call
rcr
sahf
out
sahf
das
push
arpl
mov
fwait
out
fucomip
idiv
pusha
nop
jns
iret
repz
push
rep
sahf
out
nop
mov
xor
repz
jo
shl
and
jns
xor
adc
or
adc
and
xor
stc
nop
fild
xchg
add
mov
shr
pop
adc
inc
pop
xor
cs
ins
pop
(bad)
dec
in
push
dec
push
sub
lahf
cmp
shl
aam
loope
repz
daa
or
inc
push
pop
leave
add
push
and
rcl
mov
or
pop
or
aas
add
jnp
mov
add
adc
mov
rcl
xchg
adc
mov
fwait
clc
or
outs
cmp
adc
jp
retf
pop
mov
xchg
inc
nop
add
into
pop
adc
test
cmp
push
cmp
pop
mov
sahf
out
pop
jo
xchg
cmp
ins
aaa
jg
lahf
push
lods
mov
push
movs
pop
fdiv
nop
xchg
fbstp
add
inc
cmp
dec
pop
push
loop
push
js
add
inc
lahf
ja
adc
popa
fs
dec
push
ret
and
outs
imul
ret
jbe
js
(bad)
jb
addr16
popa
jb
gs
adc
jae
jnp
jbe
adc
jb
jb
and
ss
and
jmp
push
cmp
inc
outs
jo
jb
addr16
xor
xor
dec
gs
lods
mov
fld
mov
jo
inc
popa
imul
dec
sahf
imul
cwde
nop
and
or
mov
mov
push
dec
lock
sbb
cmp
pop
push
fiadd
fdivrp
cmp
das
add
push
and
push
das
into
jne
fist
add
and
add
adc
in
fld
add
add
adc
mov
mov
or
sub
or
adc
pop
push
cmp
fstp
pop
pop
or
pusha
and
mov
outs
cmp
jnp
push
pop
sbb
iret
repz
cmp
add
pop
adc
cmp
repz
or
iret
repz
adc
adc
cmp
repz
enter
repz
repz
test
cld
repz
cwde
add
push
jl
jns
iret
cmp
sahf
pop
(bad)
ins
sub
out
sahf
mov
add
out
push
adc
sahf
out
les
bound
sahf
out
sahf
movs
add
sahf
out
pop
sbb
out
aam
push
sahf
out
sahf
mov
mov
add
push
push
add
add
jbe
out
sahf
ss
pcmpgtd
lods
jns
out
push
xchg
or
jns
out
push
pushf
arpl
iret
jnp
fcomp
push
outs
cs
push
push
push
mov
call
pop
icebp
sbb
adc
cmp
leave
ret
mov
iret
add
iret
leave
xchg
jns
shr
cmp
repz
adc
leave
repnz
fs
repz
shl
retf
cmp
gs
leave
repz
cmp
pop
sbb
iret
jge
fisubr
leave
repz
mov
repz
cmp
push
adc
jae
repz
leave
(bad)
arpl
cmps
add
pushf
cmp
add
sbb
cmp
imul
iret
repz
and
pop
ja
iret
repz
cmp
addr16
scas
pop
iret
leave
repz
inc
out
pop
pop
leave
repz
cmp
jg
fdivp
mov
das
mov
dec
pop
enter
inc
mov
loope
leave
test
mov
pop
jb
pop
leave
test
and
jb
stc
lds
in
test
aad
pop
jb
pop
cmc
int
and
jb
in
popf
jb
pop
jb
mov
inc
ret
mov
jecxz
rcl
leave
test
retf
and
jb
stos
jmp
and
jb
fstp
sti
(bad)
enter
cmps
out
pop
enter
mov
and
jb
iret
scas
jb
pop
jb
lahf
fild
and
mov
mov
mov
push
out
add
int
jle
adc
adc
inc
ds
(bad)
push
ficomp
push
add
adc
sahf
jne
pop
add
add
sbb
pop
push
popa
push
call
xor
or
add
ret
popa
out
repnz
outs
mov
sub
cwde
fisubr
inc
dec
out
adc
clc
movs
fimul
mov
(bad)
(bad)
jg
imul
arpl
outs
addr16
and
sbb
fstp
pop
fs
je
sub
popa
ins
imul
data16
and
and
bound
fst
mov
aas
mov
push
je
jb
mov
fstp
addr16
jae
je
(bad)
fimul
cmp
bound
jmp
gs
outs
mov
ins
(bad)
outs
int
imul
sub
pop
imul
xchg
jne
loopne
sub
ins
jae
ins
bound
jae
fstp
dec
add
fs
imul
aas
xor
jo
je
jo
mov
into
arpl
neg
ror
jne
imul
outs
and
lods
pop
sub
(bad)
addr16
shrd
mov
aas
mov
adc
mov
jp
(bad)
bound
mov
mov
aas
and
jb
add
add
outs
and
jb
add
inc
call
or
or
out
sbb
and
scas
push
pop
jb
jb
pop
or
or
jb
jb
or
add
pop
or
cli
mov
dec
int3
sub
iret
repz
ins
in
sbb
pop
fdivr
repz
mov
cmp
repz
mov
(bad)
adc
repz
mov
repnz
cmp
repz
sub
push
sbb
repz
mov
cmp
xrelease
cmps
iret
repz
data16
xchg
push
(bad)
cmp
repz
mov
test
cmp
repz
cs
iret
repz
outs
out
push
sahf
pop
fidivr
repz
mov
cmp
repz
cmp
popa
loope
xchg
push
sar
repz
mov
icebp
or
cmp
xrelease
sub
imul
cmp
repz
mov
cmp
repz
and
iret
gs
xchg
push
aad
iret
repz
mov
cmc
or
lea
sub
iret
ins
in
sbb
iret
repz
mov
or
xlat
xor
xchg
push
xchg
push
push
out
sahf
out
shl
xor
mov
jae
repz
out
or
jns
out
retf
sub
stos
sahf
out
sahf
stos
imul
sbb
out
sbb
jns
out
fstp
cmp
mov
pop
jns
out
pop
xchg
sahf
out
(bad)
daa
daa
cmps
sahf
out
sahf
cmps
addr16
pop
jns
out
pop
xchg
xchg
push
push
out
sahf
out
xlat
aaa
aaa
mov
out
sahf
mov
ja
test
jg
jns
out
iret
das
das
scas
sahf
out
sahf
scas
outs
outs
out
out
pop
jns
out
pop
lahf
lahf
pop
pop
out
sahf
out
fistp
aas
mov
mov
cmp
repz
inc
push
and
push
repz
repz
dec
sub
repz
push
add
iret
repz
and
adc
iret
jnp
repz
add
cmp
repz
mov
dec
sbb
push
or
add
cmp
repz
sbb
adc
repz
or
push
push
push
push
cmp
repz
adc
sbb
adc
mov
cmp
or
pop
pop
sub
pushf
cmp
pop
add
or
or
or
leave
inc
jb
push
outs
test
bts
adc
adc
in
jns
adc
in
sbb
cs
cs
sbb
scas
test
ret
mov
xor
or
adc
push
pop
sbb
mov
cs
inc
xchg
das
pop
sbb
add
dec
and
inc
push
das
or
or
out
sahf
push
adc
sbb
jns
out
sub
cmp
add
out
jo
mov
pop
loopne
out
push
jbe
(bad)
or
sbb
jg
(bad)
sar
add
(bad)
(bad)
jmp
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
(bad)
(bad)
call
jmp
rcl
mov
sub
mov
sbb
(bad)
(bad)
(bad)
dec
mov
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
(bad)
jp
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
dec
sar
call
leave
mov
lods
jecxz
fdiv
jne
fild
or
push
cmp
fnop
ficom
push
xlat
(bad)
(bad)
(bad)
dec
push
popa
sar
and
mov
cdq
xchg
mov
mov
or
or
(bad)
(bad)
inc
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
call
mov
mov
movs
in
lahf
xor
mov
js
test
mov
push
loope
or
ins
(bad)
(bad)
out
add
add
hlt
push
imul
ins
sbb
xor
dec
add
(bad)
(bad)
jmp
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
sbb
(bad)
(bad)
mov
bound
ficom
gs
aam
pop
popa
mov
into
pop
cmp
std
inc
mov
aam
movs
fisttp
xchg
fadd
(bad)
shl
jmp
outs
(bad)
(bad)
(bad)
push
mov
sar
add
in
add
pop
dec
or
cmp
add
(bad)
(bad)
jmp
xchg
or
and
test
or
mov
popa
into
push
stc
cld
(bad)
(bad)
(bad)
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
gs
mov
mov
add
(bad)
(bad)
(bad)
cmp
jmp
fild
push
fdiv
or
test
fs
ds
or
(bad)
jg
dec
iret
push
in
dec
xchg
daa
scas
or
sahf
pop
jge
xchg
(bad)
shl
add
(bad)
(bad)
call
inc
push
imul
xor
sbb
push
imul
aam
loopne
push
ret
push
pop
jp
adc
dec
frstor
fistp
mov
mov
(bad)
(bad)
call
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
(bad)
(bad)
(bad)
aas
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
(bad)
(bad)
push
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
(bad)
(bad)
jmp
das
es
lds
or
sub
mov
cmps
call
ret
shl
(bad)
(bad)
jmp
ret
es
pushf
mov
ins
add
ss
jmp
addr16
(bad)
(bad)
mov
hlt
or
adc
mov
jnp
sbb
xchg
or
call
in
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
fcomip
(bad)
mov
outs
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
jmp
call
imul
push
js
or
jmp
ret
cmp
cmps
not
pusha
ror
imul
ja
ds
push
scas
fcomp
fldenv
lock
(bad)
(bad)
(bad)
push
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
jmp
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
stos
(bad)
jmp
aaa
mov
or
sbb
add
sub
sbb
aam
xor
push
sub
(bad)
(bad)
fild
push
(bad)
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
(bad)
(bad)
(bad)
dec
scas
mov
sub
cwde
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
imul
mov
xlat
mov
sbb
test
cmp
call
(bad)
sub
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
std
(bad)
(bad)
jmp
adc
mov
popa
ja
mov
out
repz
gs
fisubr
mov
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
inc
aad
inc
fbstp
push
jo
add
clc
call
mov
mov
xor
pop
nop
sti
mov
jmp
adc
test
cmp
jns
jae
dec
call
(bad)
jge
lds
sub
pop
add
jle
jmp
(bad)
sbb
adc
call
call
cmp
dec
hlt
mov
or
xchg
lea
or
int3
mov
dec
xor
inc
mov
outs
retf
push
pop
mov
mov
lea
push
cwde
xlat
ficom
test
loope
xchg
retf
les
(bad)
call
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
jecxz
std
gs
out
and
cmp
dec
mov
mov
xchg
call
and
cmps
xor
mov
lods
out
sar
mov
adc
stos
and
(bad)
(bad)
dec
jmp
sti
push
jns
das
mov
and
je
or
repnz
push
dec
mov
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
and
(bad)
dec
call
cmps
test
cwde
(bad)
(bad)
call
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
(bad)
(bad)
call
add
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
movs
test
(bad)
(bad)
inc
pop
mov
ja
(bad)
ins
pop
push
dec
sub
or
sub
add
adc
dec
push
lock
mov
scas
mov
push
mov
push
lds
cld
(bad)
push
fst
out
les
fdecstp
jmp
lea
inc
xor
out
sub
dec
jo
outs
sbb
sub
loope
fisub
(bad)
call
lds
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
(bad)
jmp
stc
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
(bad)
(bad)
jmp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
push
mov
mov
stc
dec
xlat
loopne
adc
mov
(bad)
(bad)
(bad)
push
popf
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
sar
(bad)
(bad)
cli
jns
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
(bad)
(bad)
(bad)
jmp
xlat
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
(bad)
(bad)
(bad)
(bad)
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
mov
sub
adc
jns
movs
dec
mov
or
call
mov
mov
in
and
out
mov
or
(bad)
call
cmps
or
jle
xchg
aas
mov
adc
out
sar
(bad)
(bad)
(bad)
push
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
aaa
std
call
aaa
push
add
test
pop
mov
mov
ret
or
push
mov
loop
dec
add
(bad)
idiv
inc
adc
test
or
stc
sbb
xchg
fmul
or
mov
inc
leave
in
push
ja
pop
sub
(bad)
(bad)
call
das
sbb
fild
sbb
repnz
adc
(bad)
(bad)
(bad)
dec
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
(bad)
(bad)
(bad)
(bad)
clc
or
cmp
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
jmp
push
xor
imul
fld
adc
nop
in
and
(bad)
mov
(bad)
jmp
pop
sub
and
mov
and
mov
(bad)
(bad)
(bad)
jmp
pop
fidivr
sub
ds
sbb
sub
call
das
ror
jo
out
jno
pop
cmp
xor
jb
and
push
jbe
icebp
pop
je
fwait
(bad)
(bad)
(bad)
call
jne
fmul
jg
or
jl
je
jns
push
inc
js
mov
in
cli
mov
cs
fdivrp
cmp
nop
es
xchg
or
in
ja
xor
cmp
(bad)
(bad)
out
clc
imul
ins
arpl
sub
shr
aam
cmps
gs
fs
jmp
lea
addr16
xlat
dec
pop
mov
outs
jns
(bad)
(bad)
mov
fimul
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
sar
(bad)
jmp
inc
inc
xor
inc
jae
cmovo
out
inc
sbb
push
xor
mov
(bad)
(bad)
call
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
(bad)
mov
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
(bad)
(bad)
(bad)
out
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
lock
(bad)
call
mov
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
(bad)
dec
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
clc
dec
clc
dec
jmp
es
inc
icebp
(bad)
(bad)
(bad)
call
retf
cmc
cli
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
(bad)
(bad)
(bad)
(bad)
mov
lahf
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
(bad)
(bad)
inc
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
lock
dec
inc
xor
sti
cmp
ret
mov
dec
rol
scas
dec
retf
lahf
lds
mov
mov
inc
int3
inc
ins
xchg
sbb
ror
mov
aad
inc
fcom
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
lds
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
(bad)
(bad)
(bad)
push
fwait
jge
repz
dec
mov
or
(bad)
in
popf
or
(bad)
mov
and
mov
push
pop
and
(bad)
(bad)
(bad)
call
adc
fadd
arpl
pop
xchg
shl
test
into
add
(bad)
(bad)
jmp
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
(bad)
push
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
(bad)
(bad)
(bad)
inc
mov
xor
mov
mov
cmovns
push
dec
adc
std
(bad)
call
xor
mov
ficomp
mov
jmp
cmc
xchg
(bad)
mov
stos
out
scas
mov
push
xchg
bound
pop
imul
xor
(bad)
(bad)
(bad)
(bad)
jge
loopne
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
call
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
(bad)
jmp
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
sar
sbb
add
das
or
in
xchg
loop
(bad)
call
scas
xchg
xchg
loopne
fstp
(bad)
iret
aas
sub
xchg
in
jecxz
std
(bad)
push
push
or
mov
sub
les
and
loop
outs
dec
call
or
(bad)
jge
aad
shl
mov
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
fwait
(bad)
(bad)
(bad)
call
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
push
shl
pop
jecxz
(bad)
push
mov
adc
shl
cmp
das
retf
jnp
dec
ja
(bad)
(bad)
mov
(bad)
push
add
dec
mov
outs
inc
nop
call
cld
(bad)
(bad)
out
nop
sbb
sbb
ficom
daa
mov
mov
out
mov
mov
(bad)
call
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
inc
mov
(bad)
(bad)
(bad)
jmp
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
inc
addr16
(bad)
jmp
jo
in
mov
dec
leave
xor
inc
arpl
(bad)
(bad)
inc
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
(bad)
jmp
clc
inc
add
and
push
cdq
scas
xlat
loopne
retf
xor
inc
in
pop
shl
push
mov
inc
aad
in
jmp
bound
inc
xchg
out
xor
(bad)
(bad)
dec
or
sub
push
in
cmp
pop
cmp
outs
xor
or
xchg
push
cmp
adc
add
dec
dec
cmc
scas
repz
xor
(bad)
(bad)
(bad)
(bad)
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
(bad)
mov
repnz
and
sbb
pusha
jle
cmc
mov
(bad)
out
mov
(bad)
(bad)
(bad)
call
mov
ret
mov
fld
push
jmp
xor
(bad)
and
push
(bad)
(bad)
call
fadd
add
push
or
adc
jmp
into
movs
adc
(bad)
(bad)
(bad)
(bad)
dec
int
adc
inc
adc
cmp
jbe
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
add
dec
and
movs
push
inc
xchg
sbb
test
cli
(bad)
(bad)
inc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
jmp
aam
jmp
(bad)
stc
mov
mov
lock
imul
ss
test
call
cs
mov
call
mov
loope
into
cs
(bad)
(bad)
(bad)
jg
aas
add
add
pop
std
pop
jmp
icebp
and
sub
aam
(bad)
(bad)
jmp
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
(bad)
(bad)
jmp
push
adc
cmp
adc
mov
jle
cmp
pushf
in
adc
loope
mov
cmps
push
data16
jno
ds
outs
sub
mov
add
(bad)
(bad)
dec
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
pop
test
dec
jp
or
xchg
popa
mov
fdivrp
ja
xor
cdq
or
(bad)
(bad)
(bad)
mov
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
jmp
sub
jl
out
sub
cli
(bad)
(bad)
call
push
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
(bad)
(bad)
jmp
sub
push
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
ud0
(bad)
(bad)
cmp
cmc
cmp
enter
pop
aad
inc
in
addr16
cmp
in
dec
add
inc
ror
test
movs
or
cli
inc
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
(bad)
mov
stos
sar
lods
push
mov
enter
mov
mov
mov
test
iret
mov
movs
movaps
mov
(bad)
(bad)
(bad)
jg
fnstenv
das
outs
jl
pop
push
sbb
cmp
add
jno
pop
loopne
call
aad
sub
test
lahf
mov
xor
mov
leave
les
and
or
sbb
or
(bad)
(bad)
(bad)
cmp
xchg
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
inc
aam
jmp
shl
les
mov
(bad)
adc
cli
pop
outs
jmp
sbb
mov
jl
sti
aam
gs
mov
push
shl
(bad)
(bad)
jmp
xor
dec
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
(bad)
(bad)
(bad)
(bad)
cld
lods
mov
pusha
mov
jae
add
pop
fisttp
jno
daa
add
mov
jmp
leave
or
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
(bad)
(bad)
(bad)
stc
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
and
mov
loop
mov
call
ja
add
es
(bad)
fcom
and
or
xchg
cmp
pop
test
push
iret
or
cmps
test
or
scas
daa
jge
sahf
mov
rol
(bad)
(bad)
call
add
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
(bad)
(bad)
call
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
mov
fadd
les
repnz
sar
addr16
mov
ins
add
(bad)
fisttp
ss
fmul
sbb
dec
cmp
retf
fbld
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
(bad)
(bad)
(bad)
inc
push
mov
lds
or
sub
add
xlat
jmp
sub
(bad)
(bad)
(bad)
fstp
sbb
in
arpl
es
mov
or
ss
jb
(bad)
(bad)
inc
test
add
xchg
mov
jp
jnp
sub
xchg
ror
(bad)
(bad)
push
repnz
mov
fcmovnu
and
aam
inc
push
fiadd
int
fcomip
push
mov
ja
sbb
out
punpckhdq
push
cmp
adc
or
(bad)
gs
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
in
sub
mov
(bad)
(bad)
inc
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
(bad)
(bad)
(bad)
push
test
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
cmps
mov
xlat
push
xchg
push
ficom
and
addr16
jp
les
mov
(bad)
call
add
outs
sub
or
mov
sub
sbb
(bad)
jg
push
inc
xor
bound
lods
lds
pop
cmps
xchg
xchg
(bad)
enter
(bad)
(bad)
dec
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
dec
(bad)
(bad)
(bad)
inc
adc
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
(bad)
(bad)
(bad)
call
cwde
pop
fwait
add
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
xchg
(bad)
(bad)
(bad)
inc
jecxz
mov
and
call
shl
ret
fiadd
gs
(bad)
(bad)
fistp
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
jmp
inc
ss
pop
pop
mov
jo
jno
imul
sub
mul
sbb
(bad)
(bad)
call
xor
lahf
mov
mov
cmp
out
cmp
inc
dec
push
lds
jge
fisubr
cmp
jns
(bad)
(bad)
dec
jmp
dec
sub
(bad)
xchg
adc
mov
cmp
or
(bad)
inc
or
or
xchg
into
pop
int3
jg
(bad)
xlat
xor
cli
bound
pop
push
mov
pop
and
test
xchg
xchg
push
xchg
(bad)
(bad)
push
add
loope
shl
cli
retf
xchg
jb
xlat
pop
imul
cli
(bad)
(bad)
inc
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
add
or
add
lahf
loop
cmps
int3
and
mov
inc
mov
shr
lahf
adc
xchg
mov
leave
dec
and
rcl
jmp
(bad)
jmp
gs
das
aas
jns
ss
mov
or
je
adc
xor
dec
(bad)
(bad)
(bad)
(bad)
push
pusha
jle
xor
out
(bad)
(bad)
std
ret
rcl
cmp
call
mov
test
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
(bad)
(bad)
(bad)
dec
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
adc
out
(bad)
(bad)
inc
movs
add
test
mov
push
ja
cwde
pop
ins
(bad)
adc
ss
(bad)
jg
pop
daa
mov
fnstsw
xor
mov
push
rcr
hlt
xchg
mov
lds
(bad)
out
hlt
push
out
rcl
or
mov
lea
test
retf
and
jo
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
sub
in
scas
(bad)
(bad)
(bad)
(bad)
mov
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
(bad)
(bad)
(bad)
push
push
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
jg
cs
dec
shl
out
stc
add
xlat
push
scas
xchg
adc
lea
jmp
dec
popf
mov
inc
mov
and
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
(bad)
(bad)
call
push
jns
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
mov
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
(bad)
(bad)
(bad)
jmp
xchg
mov
xchg
push
mov
repz
inc
gs
dec
xchg
outs
jne
mov
(bad)
cmp
ss
or
push
aas
gs
jns
(bad)
mov
sbb
pop
cld
jmp
mov
daa
repnz
mov
mov
out
and
loope
or
call
cld
mov
jle
shl
imul
inc
cmp
ja
fsub
cld
(bad)
jmp
out
push
or
test
mov
adc
xor
outs
popa
daa
add
push
add
pop
lods
test
(bad)
(bad)
(bad)
fadd
retf
ret
lea
dec
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
add
fs
xchg
push
les
call
sbb
mov
inc
pop
mov
sbb
lods
sbb
popa
fwait
sbb
mov
cld
push
enter
call
mov
cmps
mov
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
(bad)
(bad)
(bad)
clc
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
(bad)
jmp
test
xchg
aad
xor
imul
adc
frstor
in
mov
cmps
daa
(bad)
(bad)
inc
(bad)
es
dec
dec
and
cdq
and
and
adc
(bad)
(bad)
(bad)
jmp
mov
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
rol
(bad)
push
out
jae
pop
scas
jb
xor
jbe
dec
(bad)
(bad)
call
aad
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
cli
scas
(bad)
(bad)
js
push
xchg
jp
mov
std
ins
mov
xchg
cli
fdivrp
push
in
es
jmp
ja
pop
push
repz
arpl
(bad)
dec
stos
pushaw
jmp
xlat
aam
fs
mov
and
push
dec
retf
and
mov
dec
fs
(bad)
dec
sbb
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
(bad)
(bad)
(bad)
push
inc
and
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
(bad)
(bad)
(bad)
(bad)
ds
mov
or
ror
adc
push
mov
cmp
pop
and
pop
in
(bad)
(bad)
(bad)
inc
pop
jmp
xor
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
inc
jae
movs
cmp
pop
out
fldcw
jp
add
jmp
dec
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
adc
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
push
popf
xchg
cmc
add
dec
repnz
(bad)
(bad)
fild
icebp
inc
push
adc
or
cmc
retf
sub
test
fcos
(bad)
(bad)
(bad)
js
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
(bad)
(bad)
(bad)
jmp
fcom
test
fdiv
shl
add
mov
jo
shl
pop
(bad)
(bad)
call
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
(bad)
dec
retf
lahf
enter
or
icebp
int3
inc
pop
je
xchg
iret
rcl
(bad)
jmp
sub
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
(bad)
jmp
stos
xchg
and
repnz
loopne
jo
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
(bad)
(bad)
cmp
adc
repz
mov
pop
mov
mov
sbb
mov
inc
or
fs
(bad)
(bad)
dec
sbb
out
(bad)
rol
cmps
arpl
aad
or
(bad)
(bad)
jmp
stos
data16
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
cmp
cmps
xor
das
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
(bad)
(bad)
call
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
(bad)
(bad)
jmp
adc
test
xchg
pushf
xor
loopne
mov
cwde
xor
(bad)
(bad)
push
gs
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
jg
mov
or
outs
mov
dec
(bad)
mov
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
fcomip
(bad)
dec
addr16
cmps
lods
jne
or
into
outs
es
lods
jg
sub
mov
xchg
(bad)
(bad)
(bad)
call
sahf
sbb
call
inc
mov
and
xor
pop
or
addr16
xchg
(bad)
(bad)
inc
shr
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
mov
sub
jmp
jecxz
in
fmul
clc
(bad)
call
lahf
les
xor
loop
push
dec
jg
outs
test
or
push
sbb
and
lds
sub
mov
inc
add
jl
hlt
(bad)
xchg
test
call
cmp
xor
not
adc
(bad)
(bad)
(bad)
dec
push
retf
mov
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
fcomip
out
imul
ret
ja
imul
setl
(bad)
jmp
(bad)
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
(bad)
(bad)
jmp
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
inc
nop
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
(bad)
(bad)
(bad)
in
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
(bad)
(bad)
(bad)
call
ss
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
cli
scas
push
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
jle
js
mov
add
scas
xor
in
pop
mov
push
in
pop
inc
pop
mov
in
sbb
bound
and
mov
sbb
jmp
sub
sahf
aam
push
stc
mov
in
pop
cmp
(bad)
push
dec
cmp
xor
or
cmp
movs
add
add
pop
dec
sub
scas
cmc
test
and
mov
mov
sbb
js
leave
dec
ror
sar
add
push
movs
not
cmp
and
(bad)
(bad)
call
dec
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
add
fnop
add
mov
push
(bad)
and
stc
popa
call
rcr
mov
ss
or
sbb
into
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
(bad)
(bad)
call
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
sbb
(bad)
cmp
jbe
out
push
into
icebp
mov
inc
pop
hlt
call
clc
inc
call
inc
xchg
push
xor
es
jmp
fdiv
(bad)
(bad)
(bad)
inc
mov
lock
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
(bad)
(bad)
call
jno
xor
push
ja
ss
(bad)
(bad)
(bad)
mov
out
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
(bad)
(bad)
(bad)
ds
inc
(bad)
mov
stos
jle
test
cmp
es
jl
mov
pop
sbb
(bad)
(bad)
jmp
push
in
test
adc
ja
mov
ret
add
cmp
call
adc
mov
outs
xchg
cmps
fidiv
sub
fisubr
sar
(bad)
(bad)
(bad)
mov
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
(bad)
(bad)
call
pop
je
into
jp
mov
push
icebp
(bad)
ins
xchg
clc
sub
and
jb
nop
mov
jne
data16
outs
bound
xchg
dec
mov
ins
aaa
imul
sbb
outs
gs
(bad)
psubsb
arpl
jb
or
dec
and
sbb
jle
or
dec
cld
lock
sbb
enter
aas
mov
test
add
pop
inc
or
nop
mov
mov
pop
mov
or
mov
mov
(bad)
jae
sub
mov
add
adc
adc
and
adc
xchg
pop
jb
jb
xchg
sub
out
(bad)
popa
fwait
lods
dec
mov
fadd
add
mov
add
push
add
add
add
add
add
add
pusha
call
xlat
(bad)
push
add
sbb
out
sbb
sbb
inc
(bad)
test
or
jae
dec
gs
gs
dec
mov
das
ds
outs
dec
xchg
push
movs
cdq
inc
popa
das
jo
mov
or
inc
pop
push
dec
dec
inc
cmovle
fistp
ss
dec
adc
dec
dec
inc
push
inc
push
pop
jbe
fistp
push
pop
push
inc
push
pop
dec
dec
dec
inc
push
inc
inc
adc
das
aaa
adc
addr16
adc
outs
inc
push
rcl
or
cmc
mov
ss
cld
or
sub
call
sub
fldenv
xor
cmp
sub
sub
sub
cs
ds
(bad)
(bad)
push
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
xchg
inc
call
ja
pop
pop
pop
cmp
pusha
lock
arpl
shr
ins
ins
(bad)
jmp
jp
jno
je
jbe
js
jp
jl
jle
add
sub
add
shr
cmp
loope
sbb
ins
add
dec
jmp
sub
and
sub
dec
add
jb
push
jb
adc
add
xor
leave
add
(bad)
and
push
add
add
add
add
ins
or
mov
test
inc
adc
fisub
jbe
aaa
add
pop
lods
and
shr
(bad)
out
popa
mov
add
mov
(bad)
(bad)
dec
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
(bad)
(bad)
dec
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
clc
(bad)
(bad)
in
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
jno
les
add
call
jno
dec
mov
aas
push
add
(bad)
jnp
add
sgdtd
arpl
push
imul
sub
push
push
cmp
dec
outs
je
and
enterw
add
outs
test
xor
xchg
push
xor
xor
mov
imul
xadd
pop
mov
add
pop
sub
and
inc
test
sar
push
mov
ins
cmps
arpl
jmp
add
add
add
dec
in
out
cmp
jae
add
sbb
add
and
frstpm(287
mov
das
and
push
mov
inc
inc
(bad)
gs
out
or
dec
push
jbe
dec
dec
lods
fnstsw
in
add
push
jo
dec
mov
(bad)
cmps
jne
addr16
jae
add
ins
out
cmp
pop
outs
dec
div
imul
pop
popa
push
mov
mov
cmp
fidiv
outs
popa
and
inc
das
pop
ins
sbb
pop
imul
iret
ins
arpl
fdivr
out
out
add
sahf
jne
arpl
scas
jne
imul
pop
inc
jae
push
mov
jbe
mov
push
dec
pop
(bad)
outs
fidivr
push
ds
mov
ins
fcomi
(bad)
mov
jecxz
(bad)
mov
jg
dec
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
jge
(bad)
inc
gs
ins
bound
jmp
adc
dec
ret
sub
jne
inc
jne
pop
cld
inc
jnp
push
outs
xchg
inc
jo
imul
bound
push
inc
popa
outs
adc
in
sti
je
jb
popa
daa
inc
pop
adc
jae
mov
gs
sbb
dec
outs
outs
and
cmp
pushf
ins
jbe
add
aas
scas
inc
not
push
dec
or
jb
adc
mov
ins
jae
gs
cs
stos
cmps
jne
inc
inc
scas
rol
add
sub
out
ja
mov
xor
push
add
in
fild
push
push
add
add
add
ja
out
push
and
push
pop
sbb
xor
push
push
call
and
or
pusha
push
js
js
inc
cmp
movs
mov
add
shr
imul
mov
and
dec
mov
push
add
ss
shr
or
xor
mov
inc
inc
aas
add
sti
push
or
bound
sub
push
lods
push
lahf
scas
and
and
aaa
dec
jecxz
arpl
cmp
mov
push
pop
pop
in
dec
sub
das
pmaxub
mov
and
popa
jecxz
imul
imul
mov
or
mov
dec
fs
and
mov
aas
push
outs
jmp
jo
out
xchg
out
add
retf
loopne
mul
ins
sub
push
imul
scas
cmp
aas
rol
cmp
data16
loope
jg
sub
xchg
into
jg
vpcmpeqb
das
sub
jb
sti
xor
mov
arpl
lahf
popa
out
jo
push
outs
inc
imul
mov
inc
daa
loop
mov
out
mov
outs
bound
retf
adc
sbb
jbe
pop
lock
mov
push
xor
iret
push
lds
gs
mov
fild
push
das
jb
mov
xchg
popa
ret
fidivr
cs
leave
push
xor
(bad)
xor
nop
and
add
das
jbe
jg
add
(bad)
lock
rcl
rol
pop
sahf
aaa
xor
pop
push
jg
ret
iret
push
enter
ss
or
dec
fbstp
scas
jne
jbe
jb
jne
push
lods
cmps
jae
mov
jg
pop
stos
icebp
jbe
push
mov
jno
mov
aad
inc
inc
cmp
outs
(bad)
lahf
sbb
pop
outs
aas
or
arpl
pop
jb
scas
cmp
xchg
pusha
(bad)
scas
ret
push
mov
pop
dec
dec
push
fisttp
mov
jb
shl
push
pop
imul
rcr
(bad)
sbb
pop
cmp
xlat
add
outs
inc
sub
cmp
shl
pop
outs
adc
aas
inc
idiv
ins
pop
je
scas
mov
lea
jae
js
cmp
and
jnp
jecxz
outs
pop
fidivr
lods
loopne
add
pusha
cwde
addr16
pop
inc
jle
mov
pop
push
gs
in
xchg
and
adc
jo
mov
jb
adc
sbb
adc
enter
bound
loopne
jl
repnz
pop
pusha
fsub
jo
pop
cmp
into
mov
inc
jp
cld
cld
les
add
aaa
add
pop
loopne
data16
imul
les
add
push
stos
loope
jno
dec
jb
cmps
or
sbb
add
cmp
mov
dec
xchg
gs
jnp
imul
or
outs
ret
inc
and
mov
fwait
cmp
mov
ins
jp
and
xor
sbb
push
je
xor
int3
mov
popa
xchg
shr
push
mov
cmp
pop
cmps
inc
outs
ror
pop
sbb
add
lea
xchg
dec
cmp
mov
in
xor
mov
mov
sahf
or
mov
sbb
sub
imul
push
mov
xchg
or
clc
es
bound
outs
inc
jae
jne
push
xor
pop
popa
dec
arpl
aaa
and
pop
jb
ins
xor
or
jo
jb
sub
nop
imul
sub
push
and
sbb
sub
mov
stos
push
adc
or
push
ins
lahf
or
mul
addr16
mov
cs
ret
xchg
arpl
cdq
dec
test
gs
or
movhps
imul
pop
adc
jae
or
jbe
mov
fsubr
mov
jne
dec
xor
lahf
and
inc
ss
and
pop
add
inc
pop
popa
imul
fisubr
pop
or
inc
ins
outs
fcom
in
jb
test
pop
pop
pusha
in
ret
cs
jae
adc
or
popa
and
jbe
test
and
test
daa
arpl
push
mov
or
fdivr
hlt
jne
ins
adc
mov
jbe
loope
and
ins
bound
and
push
outs
pop
call
shl
sub
mov
je
inc
mov
jmp
gs
test
dec
outs
neg
push
fsubr
sbb
and
jae
lods
or
imul
imul
jb
imul
xchg
push
push
jmp
popa
pop
ins
jne
push
mov
pusha
dec
sub
enter
jae
enter
data16
popa
mov
call
(bad)
scas
sbb
(bad)
nop
mov
adc
push
pop
sub
imul
imul
aaa
mov
das
jbe
push
repnz
ret
imul
fisubr
sub
outs
mov
jne
pop
popa
or
mov
or
xchg
pop
enter
add
dec
ret
test
(bad)
sbb
daa
jo
lock
(bad)
fisubr
retf
add
(bad)
dec
mov
jno
clts
call
jmp
into
sub
xchg
arpl
movs
sti
sbb
aam
dec
push
xadd
sub
in
lods
pop
mov
inc
imul
call
dec
test
jbe
test
push
push
into
dec
mov
sbb
mov
dec
pop
push
in
dec
loopne
push
cmps
rcl
inc
ror
test
pop
mov
imul
inc
pop
scas
dec
push
stc
in
dec
(bad)
inc
push
inc
sub
cld
rcl
dec
or
clc
inc
inc
inc
sub
test
sar
dec
pop
mov
dec
push
jns
pushf
je
sub
push
push
inc
call
xor
inc
and
rcl
push
inc
fmul
test
mov
sub
push
call
test
inc
cmp
imul
push
add
push
call
push
push
inc
fdiv
fiadd
rcl
fistp
scas
cs
test
dec
dec
lods
inc
pop
inc
movs
xchg
psrad
jno
ins
inc
lahf
or
ins
mov
scas
cmp
pshufw
cmps
inc
adc
sbb
inc
out
lock
dec
das
xor
inc
sub
push
sbb
and
or
clc
push
push
dec
(bad)
jg
shr
call
(bad)
or
or
adc
xor
std
add
or
adc
sbb
add
dec
outs
jmp
ret
lahf
dec
push
add
adc
xchg
popa
fisubr
adc
xor
in
mov
sbb
cmp
inc
pop
lods
pop
neg
push
push
and
xor
pop
mov
jb
pop
push
js
jo
add
add
mov
arpl
push
inc
sub
out
rdtsc
ss
js
xchg
inc
dec
mov
or
(bad)
in
push
ror
sub
jg
inc
scas
add
call
loopne
mov
add
mov
dec
ror
jmp
retf
jno
icebp
pusha
inc
push
outs
dec
mov
clc
ret
movs
add
xor
add
add
data16
jmp
fbld
ins
aas
cmp
gs
xor
retf
out
xchg
xor
jae
ins
outs
addr16
int
test
inc
sahf
ja
pop
outs
adc
loopne
xor
push
cmp
jns
pop
jmp
in
out
push
inc
fadd
je
mov
bound
addr16
pop
push
jae
jb
xor
loopne
push
ja
unpcklps
dec
sbb
lds
pusha
bound
pshufw
jno
in
inc
lock
pop
jnp
and
inc
jne
int
popw
cmp
imul
scas
lods
pop
sub
and
sbb
popa
jbe
or
test
cwde
inc
movs
push
cmp
add
push
gs
jb
inc
loopne
mov
jb
enter
pusha
outs
aam
ss
je
and
push
faddp
outs
push
pop
fwait
data16
inc
push
imul
dec
dec
cmp
outs
inc
and
sub
push
adc
adc
ds
jo
shl
imul
ss
push
dec
data16
cwde
call
outs
popa
inc
fsubp
pop
inc
add
ror
cdq
rol
fisub
pop
es
loopne
imul
mov
and
out
jae
loope
push
or
loopne
(bad)
push
jmp
inc
je
addr16
push
push
pop
mov
dec
mov
mov
push
mov
pop
iret
mov
imul
setle
sub
lds
packuswb
or
out
dec
and
test
int3
push
fild
loop
scas
mov
(bad)
fild
add
add
js
sub
or
pusha
sbb
jp
sub
pop
mov
sub
ins
daa
les
xchg
je
nop
or
mov
je
jne
out
add
xchg
xor
pop
aaa
mov
jne
push
shl
je
ja
sbb
and
dec
bound
into
imul
dec
xchg
popa
data16
ss
or
or
and
arpl
mov
iret
push
fistp
dec
xor
jns
daa
pop
and
repnz
dec
adc
mov
push
out
add
xchg
push
push
fisubr
jb
cmp
popa
addr16
mov
jo
pop
int
lods
push
mov
pusha
mov
fdivr
push
in
xor
mov
int3
and
push
add
dec
(bad)
pop
dec
and
jbe
pop
mov
cmp
inc
popa
inc
cmp
push
stos
loopne
and
inc
inc
pop
es
push
mov
dec
lahf
lock
addr16
pop
xchg
pop
pop
pop
push
aad
loope
push
xchg
cmp
inc
add
mov
pusha
ins
call
dec
into
addr16
sub
mov
mov
and
or
(bad)
and
dec
test
into
fs
dec
or
js
lods
xchg
push
cmp
push
scas
dec
jge
push
sbb
aas
jg
movs
shl
bound
fbld
outs
push
sbb
fs
in
js
mov
xchg
das
gs
jmp
jg
mov
pusha
push
or
outs
aad
addr16
das
mov
outs
xchg
daa
xchg
rcr
jmp
mov
popw
pop
cmp
stc
iret
es
cmp
push
das
push
sub
sub
inc
jl
push
addr16
add
push
jle
sub
push
add
pusha
out
jne
sub
cvtps2pi
pop
push
scas
rcl
mov
and
cmp
push
sub
or
pop
call
push
scas
sbb
push
jb
imul
or
ss
gs
imul
stc
push
test
push
imul
inc
jo
sub
inc
push
jl
mov
sahf
out
mov
push
xor
sbb
iret
out
adc
clc
lock
(bad)
outs
jp
push
rcl
or
mov
pop
mov
sahf
mov
cmp
mov
ss
out
mov
xor
sub
nop
outs
mov
ins
sti
sbb
push
adc
mov
out
add
js
jo
cmp
repz
fs
pop
pop
repz
repz
push
dec
dec
inc
int
cmp
cmp
sbb
jns
out
sahf
hlt
loopne
mov
out
inc
sbb
js
mov
xchg
js
fs
int
cmp
dec
sub
adc
ja
out
sahf
call
and
iret
mov
or
rcl
jg
cmp
sbb
jne
pop
sub
jle
int3
inc
gs
push
mov
mov
cs
dec
mov
sub
mov
push
movs
ret
ins
ss
clc
inc
sbb
fcmovnbe
xchg
push
fidiv
daa
pop
lea
dec
or
inc
outs
js
push
add
not
sub
add
pusha
xlat
adc
inc
dec
push
dec
pushf
and
stc
inc
fdivrp
xor
push
dec
inc
dec
cmovns
add
jg
and
or
fld
or
sub
cmc
cmp
jnp
nop
rcr
mov
sbb
int3
dec
add
and
and
xchg
jnp
mov
xor
call
mov
iret
dec
mov
aas
lea
pushf
add
or
add
cmp
pop
and
pusha
aad
add
adc
mov
dec
and
sub
push
shr
inc
jb
retf
je
dec
les
push
outs
jo
lock
test
cmps
xchg
mov
dec
loope
jbe
add
dec
loope
pushf
jns
pop
mov
mov
cmp
pop
mov
fs
add
lahf
add
add
mov
mov
inc
push
stc
mov
add
add
add
and
dec
mov
dec
push
dec
add
add
push
push
add
cwde
imul
pop
and
inc
dec
or
adc
mov
jae
cmp
adc
push
inc
push
icebp
fsub
sahf
pop
je
repz
add
adc
iret
repz
push
stos
add
stc
cmp
ja
add
xor
str
sar
add
or
mov
xchg
add
or
or
into
mov
pop
or
fnstenv
popa
xchg
movq
jo
gs
addr16
into
cmp
out
dec
(bad)
mov
fnsave
inc
xchg
aas
or
or
mov
stc
or
inc
shl
pusha
loopne
nop
push
shl
mov
lock
(bad)
(bad)
dec
sub
pop
fdivr
mov
inc
les
fs
xchg
push
aam
mov
hlt
or
dec
lock
(bad)
dec
sub
ins
in
sbb
pop
fdivr
jl
add
(bad)
adc
jb
call
ins
dec
retf
push
sbb
jp
push
xchg
(bad)
(bad)
inc
cmps
data16
xchg
push
(bad)
ss
test
dec
into
cs
outs
out
push
sahf
pop
fidivr
mov
inc
(bad)
(bad)
(bad)
inc
and
push
shl
mov
icebp
or
imul
cmp
inc
push
cli
inc
and
xchg
push
aad
mov
cmc
sub
(bad)
(bad)
dec
sub
popf
pop
fnstsw
add
mov
push
shl
mov
repz
dec
sub
pop
fstp
mov
inc
(bad)
daa
cmps
addr16
xchg
push
xlat
aaa
mov
test
lock
das
scas
outs
out
pop
lahf
pop
fistp
mov
(bad)
(bad)
jmp
xor
loopne
jo
lock
test
adc
xchg
aam
movs
in
je
(bad)
(bad)
push
sbb
fsubr
push
mov
int3
sbb
pushf
fsubr
lods
in
cmp
(bad)
(bad)
(bad)
(bad)
mov
rcl
xchg
shl
popa
mov
icebp
add
push
xchg
aad
movs
in
jne
(bad)
(bad)
push
leave
sbb
fldcw
imul
int
pop
popf
(bad)
jge
(bad)
(bad)
(bad)
mov
ret
xchg
shl
bound
repnz
inc
xchg
push
push
xchg
(bad)
data16
out
jbe
(bad)
(bad)
push
retf
call
jp
cli
push
dec
mov
push
pop
sahf
fisubr
outs
scas
out
ds
(bad)
(bad)
(bad)
mov
ret
adc
shl
arpl
repz
inc
xchg
pop
push
xchg
xlat
daa
cmps
out
ja
jmp
push
retf
sbb
fld
imul
nop
inc
loopne
pop
pop
lahf
fild
outs
scas
out
aas
jg
and
xor
pusha
(bad)
(bad)
(bad)
push
nop
mov
lock
and
inc
push
popa
jno
xchg
mov
icebp
add
and
inc
push
(bad)
(bad)
(bad)
(bad)
push
xchg
mov
repnz
and
inc
push
arpl
xchg
mov
repz
and
inc
push
fs
(bad)
(bad)
push
movs
mov
aam
hlt
add
push
gs
xchg
movs
mov
aad
cmc
push
push
es
push
data16
(bad)
(bad)
push
xchg
cmps
mov
(bad)
out
pop
pop
daa
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
or
sub
dec
pop
push
js
cwde
test
enter
or
sub
dec
pop
imul
fldl2t
stc
or
sub
dec
(bad)
jmp
stos
mov
or
sub
dec
pop
imul
(bad)
(bad)
(bad)
jmp
sti
or
sub
dec
pop
ins
jl
pushf
lods
mov
or
pop
ins
jge
popf
(bad)
(bad)
(bad)
jmp
std
push
push
cs
pop
outs
jle
sahf
scas
mov
nop
aas
dec
pop
outs
jg
lahf
dec
cmps
xor
scas
mov
and
add
ja
and
es
inc
sbb
jg
mov
inc
sbb
mov
out
sub
les
push
push
es
outs
jmp
xchg
cli
add
or
hlt
adc
sahf
jmp
cmp
test
mov
pop
lods
push
ins
ss
mov
jbe
cs
mov
sub
mov
jae
not
or
idiv
or
fnstcw
or
mov
call
cmp
cmp
repnz
in
inc
js
cmp
icebp
(bad)
jg
add
mov
aaa
(bad)
pop
leave
cmp
repz
mov
fiadd
inc
and
scas
fsubr
cmp
jle
xor
pop
stc
(bad)
cld
imul
std
mov
xor
out
mov
(bad)
(bad)
mov
int
cdq
and
ins
pop
mov
shl
push
mov
ror
inc
or
jnp
repz
push
movs
cs
dec
fmul
cmp
add
sahf
repnz
adc
test
ret
adc
cmp
adc
arpl
sub
repnz
mov
push
add
mov
stos
add
jmp
push
add
add
(bad)
inc
push
add
movs
add
add
add
add
add
(bad)
(bad)
(bad)
mov
test
outs
add
das
push
jae
mov
pop
xchg
pop
fld
sub
jp
(bad)
(bad)
dec
retf
or
enter
jns
aad
xor
xchg
or
or
mov
or
sar
dec
int3
push
cmp
scas
mov
xchg
adc
adc
aam
jmp
cli
mov
adc
push
inc
pop
rcl
data16
sbb
sbb
enter
push
sbb
sbb
sbb
inc
pop
icebp
pop
mov
and
(bad)
(bad)
(bad)
jmp
es
jmp
mov
jnp
inc
sub
jecxz
mov
mov
adc
(bad)
push
shl
mov
cdq
xor
ss
aaa
xor
and
cmp
cmp
cmp
mov
push
fadd
inc
sbb
inc
xor
push
cld
inc
jl
xchg
dec
mov
iret
(bad)
(bad)
(bad)
dec
dec
adc
dec
popa
push
mov
push
jmp
push
xchg
pop
(bad)
pop
cmp
pop
or
(bad)
(bad)
call
pusha
sahf
popa
in
bound
fs
gs
imul
ins
and
lea
jno
jae
sbb
dec
jbe
ja
mov
xor
aaa
jg
call
call
sbb
xchg
push
(bad)
out
mov
xchg
xchg
xchg
call
add
cmp
mov
imul
mov
(bad)
(bad)
(bad)
push
(bad)
mov
rol
ret
pushf
(bad)
xchg
enter
int3
xchg
into
cdq
shl
(bad)
call
mov
(bad)
fcom
fild
loope
jecxz
in
out
jmp
dec
lock
dec
or
adc
stc
je
mov
repz
or
movs
sbb
and
fild
loope
retf
cs
xor
xor
dec
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
lea
inc
icebp
inc
sbb
inc
pop
inc
jb
xchg
dec
lahf
dec
movs
dec
cmps
dec
movs
jmp
dec
dec
xchg
push
mov
push
gs
dec
push
mov
xlat
push
mov
mov
pop
(bad)
(bad)
(bad)
push
pop
pop
pop
xlat
pop
movs
pop
outs
pop
cmp
pop
les
popa
dec
bound
arpl
arpl
lods
data16
inc
push
push
push
imul
fldcw
sub
outs
(bad)
(bad)
(bad)
push
sbb
jo
jno
jno
jb
jae
jae
je
jne
jne
jbe
jbe
ja
js
js
(bad)
(bad)
push
enter
in
jp
jnp
jl
jl
jge
jge
jle
jle
jg
jg
cmp
xchg
push
adc
daa
test
test
xchg
mov
mov
jecxz
mov
and
lahf
mov
lea
dec
fs
(bad)
(bad)
call
(bad)
xchg
cmp
xchg
xchg
or
xchg
rcl
and
(bad)
(bad)
mov
jb
loopne
dec
cdq
mov
call
inc
pushf
mov
sbb
(bad)
(bad)
call
sub
arpl
cdq
mov
retf
mov
sti
mov
jmp
movs
out
movs
push
cmps
mov
pop
cmps
jns
(bad)
(bad)
test
test
cmp
(bad)
jmp
sahf
stos
cld
stos
pop
lods
mov
lods
shr
jmp
scas
pop
(bad)
(bad)
(bad)
push
ins
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
(bad)
mov
mov
mov
mov
mov
pop
mov
(bad)
push
mov
pop
mov
push
mov
dec
mov
inc
mov
add
jmp
cmp
rol
ret
mov
ret
addr16
(bad)
(bad)
(bad)
push
les
lds
add
(bad)
sbb
mov
(bad)
(bad)
jmp
leave
mov
xlat
leave
and
jo
mov
retf
mov
int3
test
ror
sbb
mov
(bad)
jmp
mov
cld
int
into
xchg
into
fmul
es
jo
mov
rcr
or
shl
rol
ror
xchg
shl
shr
shl
mov
aam
(bad)
(bad)
(bad)
call
(bad)
and
push
aad
(bad)
test
retf
(bad)
adc
pop
xlat
lahf
xlat
in
sub
jb
mov
(bad)
(bad)
fadd
fxch
fst
pop
ficomp
fld
mov
neg
cmp
sbb
fmul
fisttp
(bad)
(bad)
(bad)
fst
ficomp
fsubp
fisub
fild
lods
fcomip
fbstp
loopne
loopne
loopne
loopne
loope
mov
add
loop
loop
jecxz
jecxz
(bad)
(bad)
(bad)
jmp
shl
adc
push
in
in
in
in
in
in
in
out
out
out
out
out
out
(bad)
(bad)
(bad)
jmp
fsubp
push
call
fucomp
sbb
jmp
pop
jmp
push
jmp
(bad)
(bad)
(bad)
(bad)
jmp
jmp
in
dec
in
mov
int3
in
or
dec
in
xchg
(bad)
in
add
inc
out
jle
mov
out
je
add
out
out
out
sub
push
lock
icebp
cwde
icebp
aad
adc
dec
(bad)
(bad)
(bad)
push
mov
(bad)
repnz
aas
repz
mov
repnz
push
cmps
hlt
loope
sbb
cmc
iret
cmc
or
(bad)
(bad)
test
idiv
ins
mul
clc
push
clc
nop
clc
retf
clc
add
(bad)
(bad)
(bad)
(bad)
stc
mov
in
stc
daa
cli
popa
cli
fwait
cli
aam
push
sti
dec
sti
cmp
sub
cld
frndint
adc
(bad)
(bad)
(bad)
std
dec
std
test
mov
(bad)
data16
lahf
(bad)
xlat
(bad)
adc
dec
inc
leave
sahf
xor
call
dec
inc
inc
cmp
xor
das
cs
daa
daa
es
and
and
and
out
pop
pop
push
sbb
sbb
out
pop
push
adc
pushf
adc
adc
test
adc
push
inc
xor
enter
or
inc
leave
or
(bad)
aas
inc
jb
sub
and
sub
aas
pop
pop
jl
sub
jnp
sub
cmp
and
add
push
loope
jg
jae
sub
push
call
jns
out
aam
mov
nop
jnp
xor
inc
(bad)
(bad)
(bad)
inc
xor
inc
inc
sub
sub
sub
inc
inc
inc
cmp
inc
inc
loop
cmp
movs
mov
lock
mov
pop
lea
add
cmp
sbb
or
xor
imul
mov
jmp
call
jl
stc
enter
mov
fwait
mov
add
movs
ror
jae
add
dec
popa
push
mov
call
pop
sbb
(bad)
jp
aaa
push
sti
xor
sti
repz
sbb
xchg
mov
push
es
ret
scas
dec
add
rcr
ja
jae
add
mov
cmp
xor
lods
aaa
jno
xor
xor
xchg
lods
nop
punpcklbw
xor
cmp
cwde
stc
pusha
daa
je
ror
out
sub
fdiv
addr16
mov
pushw
adc
arpl
xchg
push
sub
mov
js
xor
sahf
mov
repnz
inc
adc
xor
cs
inc
arpl
jbe
sub
retf
inc
xchg
xlat
inc
ret
sar
mov
(bad)
mov
push
xchg
inc
stos
stos
call
sbb
ja
rcl
pop
pop
push
sbb
popf
ja
or
inc
or
jne
pop
ins
add
mov
popa
xchg
adc
jb
xor
ja
ja
mov
pop
ins
out
lahf
rol
movs
sti
aaa
repz
push
das
xchg
stos
jmp
push
fs
and
addr16
jb
test
and
xor
pop
jnp
sbb
mov
xchg
daa
xor
xor
sbb
sbb
jl
mov
push
lods
popa
xor
mov
inc
mov
jb
cmp
adc
xchg
inc
jb
push
ret
mov
and
mov
test
sbb
sub
lahf
push
jne
xchg
test
add
cmp
push
outs
das
outs
mov
lds
mov
xor
cs
pop
push
fld
aaa
mov
popa
sbb
add
ror
jecxz
inc
add
aad
loop
mov
mov
jmp
bound
xor
loopne
mov
bound
push
or
pop
outs
mov
stos
ja
cmp
pusha
daa
fld
arpl
sti
test
jg
adc
movs
bound
pop
dec
fsubrp
jne
add
push
dec
xor
pusha
adc
add
cmps
adc
fs
das
outs
mov
pop
push
ja
mov
push
call
lgs
ficom
pop
add
movlps
pop
jns
mov
add
push
mov
pop
loopne
pop
lock
ins
cmps
push
das
je
cmp
push
out
and
add
and
in
out
push
daa
cs
and
push
pop
pop
inc
mov
jp
jae
jbe
loope
cmc
aad
daa
sbb
xchg
mov
dec
push
push
add
dec
fdiv
lock
je
push
and
(bad)
dec
sub
jmp
ins
mov
mov
lea
int
sbb
das
sub
adc
cmp
pop
and
loop
ins
and
add
bound
dec
pop
das
bnd
sub
mov
imul
pusha
imul
push
jns
popa
jb
(bad)
mov
inc
(bad)
ins
outs
outs
je
jo
pop
sub
ins
cmps
push
sub
jne
cmp
or
xor
cli
sub
imul
push
jl
add
inc
or
push
mov
frstor
pop
or
pop
imul
test
mul
mov
inc
adc
aam
jnp
add
adc
inc
ja
adc
inc
into
or
add
mov
ss
cwde
add
and
mov
nop
add
push
mov
add
stos
jl
inc
add
pshufw
inc
dec
lock
int
fld
push
mov
and
add
fnstsw
cmp
or
mov
push
fbstp
test
mov
es
fcomp
sti
dec
das
inc
add
fmul
outs
popa
sub
inc
pop
enter
call
lock
dec
mov
adc
inc
call
jae
(bad)
and
push
inc
bnd
inc
pop
imul
pop
imul
sub
arpl
dec
fild
dec
or
jo
out
pushf
cdq
and
push
arpl
xlat
aad
pop
push
data16
cmps
je
mov
data16
or
in
inc
mov
lock
repnz
cmps
out
sahf
add
xor
or
adc
or
out
or
cmp
cmp
xor
jno
push
or
pop
xchg
fs
cwde
popa
xor
push
ret
ret
xchg
test
cmp
xor
sbb
sub
retf
add
loope
pop
mov
lods
and
mov
jge
jb
ds
adc
sar
test
mov
mov
jae
jns
mov
popa
ja
sbb
sbb
sbb
jecxz
fdivr
pop
lock
add
loope
mov
and
popa
pop
icebp
add
mov
dec
inc
pop
or
sub
jne
jb
stos
shr
je
mov
adc
sbb
jmp
out
loopne
hlt
xchg
popa
mov
fnsave
lahf
adc
mov
addr16
push
xchg
pop
dec
bound
push
arpl
jnp
popa
xor
jbe
jns
or
mov
jmp
int
sbb
sub
jb
push
push
inc
mov
aaa
mov
not
jg
mov
push
sub
ins
test
outs
arpl
pusha
out
daa
and
mov
adc
cmps
sti
xor
das
and
outs
mov
int
push
adc
or
or
lahf
outs
mov
ja
xor
lock
or
mov
loopne
mov
repnz
jo
dec
jl
add
inc
ss
mov
jno
pcmpeqb
sub
ss
rcl
nop
mov
and
or
nop
push
xchg
pusha
jns
int
push
xchg
add
mov
push
out
lock
fistp
out
arpl
cs
fild
scas
rcr
sub
mov
frstor
dec
pop
sahf
cmp
(bad)
jg
(bad)
sbb
inc
push
dec
dec
dec
push
das
push
inc
push
dec
dec
dec
inc
loope
sub
dec
inc
dec
inc
cs
lahf
jge
test
and
je
dec
out
aas
cmps
jecxz
adc
and
rol
loopne
rsqrtps
aaa
xor
push
scas
cwde
dec
shr
inc
jb
pop
inc
ds
jg
js
and
inc
outs
ins
es
sub
or
mov
jae
loopne
xor
pop
aas
jle
add
sbb
push
push
sbb
dec
and
mov
sbb
outs
psrad
das
out
jae
push
jl
pop
dec
gs
mov
xor
pushfw
hlt
jnp
outs
jno
dec
cld
aam
add
push
das
push
test
js
out
mov
clc
int3
shr
addr16
push
lds
pusha
mov
push
test
nop
jb
jb
addr16
aad
inc
loop
inc
ins
jo
popa
pop
adc
dec
xor
ret
ss
pop
lock
push
jo
aam
stos
scas
sbb
pop
xor
inc
call
add
retf
pop
jae
pop
mov
mov
pop
das
and
inc
mov
xor
xchg
xor
pop
sbb
adc
rcl
dec
cmp
and
pop
inc
imul
shl
mov
mov
cs
cmp
xor
xor
inc
cs
xor
in
cs
aaa
cmp
push
cwde
add
pop
retf
mov
popf
cmp
pop
das
push
ret
mov
mov
outs
js
pop
and
loopne
mov
xor
in
mov
jge
xor
movs
je
mov
out
and
xor
jmp
imul
sbb
test
repnz
hlt
inc
addr16
loop
jbe
ins
push
jo
jo
adc
hlt
loopne
int3
loope
push
es
sti
fbld
push
das
aad
je
rcr
das
jae
mov
mov
mov
xor
pop
and
call
sub
fnstsw
sbb
sub
add
cmps
ret
pop
ja
and
sbb
icebp
pop
mov
stos
mov
loop
pop
xchg
pop
sub
cmp
or
push
aas
dec
xor
or
dec
jg
xchg
inc
dec
inc
mov
rcl
push
mov
outs
es
arpl
sbb
jbe
dec
mov
shr
popa
je
dec
std
div
xor
add
scas
cmps
adc
inc
sbb
movs
pop
jg
popa
fimul
aaa
pusha
out
adc
fdivr
aaa
and
iret
ja
out
push
mov
jnp
ins
jns
int
pop
pop
sar
ret
lahf
daa
mov
dec
or
jnp
jnp
daa
jne
ins
dec
fstp
pop
jnp
inc
jae
out
mov
sbb
(bad)
das
pop
dec
mov
das
shl
das
mov
mov
push
mov
adc
xlat
pop
mov
das
lahf
adc
adc
sbb
dec
daa
pop
ja
fwait
add
pop
push
and
cdq
pop
cmp
aad
outs
outs
bswap
dec
or
imul
pop
mov
pusha
jnp
addr16
das
xchg
jae
inc
push
add
push
mov
or
pop
daa
inc
jle
repnz
sti
push
push
dec
push
push
inc
push
dec
add
je
dec
xchg
pop
test
scas
inc
xor
xchg
cwde
sbb
push
inc
sbb
add
(bad)
in
push
icebp
nop
into
retf
jae
jo
mov
pop
imul
push
shl
cmp
or
inc
test
jg
cdq
add
jle
imul
outs
pop
ins
fadd
addr16
leave
cmovns
push
pop
icebp
sbb
imul
mov
icebp
sbb
pop
adc
mov
push
mov
test
in
add
jo
ins
mov
push
daa
add
mov
imul
lea
push
push
nop
pop
rcr
cmp
adc
jns
jge
push
and
pop
lock
xor
inc
jno
clc
out
push
cmps
and
cmp
jo
inc
aaa
mov
jb
cmp
mov
push
es
mov
cmp
and
std
adc
ja
sub
xchg
loopne
sbb
push
retf
or
sbb
dec
push
sbb
fisub
dec
inc
dec
inc
adc
sbb
ja
jle
cs
fidiv
fimul
jne
(bad)
push
addr16
js
xor
cmp
add
or
fcom
sub
pop
inc
pusha
jne
xchg
pop
add
add
push
xor
das
push
fwait
sub
jmp
out
(bad)
mov
mov
and
ins
mov
cmp
pop
sar
mov
gs
out
dec
gs
pop
xlat
push
popa
mov
scas
(bad)
xor
shl
in
outs
and
pop
jnp
xor
inc
xor
sub
sub
fmul
sub
inc
xor
mov
(bad)
cmp
aaa
xor
fcmovnu
jp
imul
js
int3
sbb
push
lods
lods
xchg
sub
inc
aaa
ins
pop
pop
push
or
mov
or
inc
and
outs
les
pop
cmp
dec
adc
call
add
outs
jg
xor
inc
xor
adc
xor
cmp
aaa
ss
sbb
cmp
inc
xor
pop
call
dec
iret
mov
pop
pop
jb
push
adc
arpl
retf
dec
add
cwde
push
jne
xchg
mov
ins
mov
dec
adc
adc
aad
jo
pop
push
or
fcom
push
dec
pop
add
bswap
and
dec
pop
fbld
jge
pop
dec
rcr
out
and
scas
push
mov
sub
ins
daa
je
dec
xchg
gs
sub
jnp
outs
in
ins
push
pop
rol
dec
push
push
push
dec
ins
mov
sbb
push
mov
enter
push
in
jae
add
jne
push
pop
call
inc
jmp
sub
das
and
inc
dec
call
or
add
test
mov
jnp
sbb
outs
outs
xor
cmp
xchg
test
inc
test
cli
xchg
test
mov
dec
adc
popa
aaa
sbb
adc
daa
or
ins
mov
add
push
mov
sub
movs
add
adc
xor
test
xor
adc
dec
dec
inc
sar
or
push
pop
adc
fcom
dec
add
aad
sub
imul
int3
push
pusha
dec
mov
xchg
or
jne
into
dec
leave
cdq
lock
repnz
or
es
adc
jo
inc
dec
mov
xchg
sbb
inc
test
das
das
inc
lods
pop
or
fcomp
or
setno
push
jns
lahf
cmp
push
inc
(bad)
out
cmps
lods
or
xlat
push
push
inc
fcmovne
xchg
adc
pop
push
and
pop
sbb
inc
je
dec
inc
dec
push
dec
fnstenv
push
push
inc
mov
push
or
scas
icebp
les
adc
push
add
xor
mov
js
fisttp
(bad)
in
inc
mov
outs
in
test
and
les
add
adc
mov
push
sbb
ja
fs
add
fimul
mov
ss
shl
mov
add
outs
shl
jnp
pop
or
or
push
cmp
jbe
xchg
ja
stos
les
mov
add
pusha
pop
cmp
in
sbb
dec
ret
mov
jo
fcmovu
xor
dec
xlat
mov
inc
push
(bad)
lds
mov
(bad)
xor
mov
les
scas
mov
arpl
iret
out
xchg
rol
aaa
inc
push
xchg
jmp
cmp
pushf
js
aas
inc
jp
pop
mov
xchg
ins
add
xor
inc
aas
ins
sbb
xchg
imul
dec
(bad)
adc
jo
inc
je
push
imul
xchg
dec
jg
js
jo
ds
jmp
inc
bound
rcl
scas
add
aad
addr16
rol
mov
sbb
(bad)
scas
add
push
pop
das
bound
mov
push
daa
aaa
inc
ins
jno
pop
stos
data16
movs
movs
sub
addr16
ins
and
dec
xlat
jne
dec
shl
sub
fnsave
push
stos
das
inc
js
push
(bad)
imul
repz
mov
inc
out
add
mov
sub
mov
mov
and
inc
(bad)
sti
inc
mov
pop
dec
inc
mov
cmps
stos
pop
mov
adc
xor
dec
pcmpgtb
xchg
jns
imul
lahf
add
xor
data16
addr16
test
pop
shl
mov
inc
sub
jne
add
push
sti
ret
outs
mov
arpl
ja
ja
push
call
jg
inc
sbb
sub
ja
dec
sti
and
add
xchg
bound
mov
dec
mov
inc
imul
scas
add
and
scas
pand
ss
ret
pop
lock
fidivr
ins
(bad)
addr16
pop
or
cdq
daa
ja
cmps
lahf
or
mov
js
push
out
sub
mov
push
cmp
sbb
jae
xchg
sub
cmps
jnp
add
es
push
pop
pop
je
lods
xor
loop
pop
(bad)
out
sub
arpl
push
add
add
pop
nop
jo
or
adc
in
mov
dec
mov
dec
lsl
push
pop
into
(bad)
or
mov
test
jae
jle
jne
sub
inc
ja
adc
fidiv
ret
dec
adc
mov
sub
mov
scas
scas
adc
outs
cmp
mov
push
mov
jo
push
outs
ja
bound
adc
movs
jecxz
mov
or
mov
dec
pop
call
rcl
out
cmp
sub
repz
ret
stos
test
push
xchg
cs
daa
dec
jg
xchg
push
adc
mov
shr
dec
les
jg
or
inc
ins
les
and
push
sbb
sti
iret
push
push
sub
js
imul
mov
je
add
or
out
inc
push
add
mov
sub
sub
les
pop
xchg
and
ins
and
mov
mov
bound
add
xchg
fs
lds
test
add
xchg
xchg
cmp
js
adc
aas
mov
arpl
adc
jae
xchg
popf
or
fdivp
bound
inc
std
xor
cmova
push
jecxz
push
jge
push
xlat
outs
out
xchg
ins
sbb
or
push
xchg
and
outs
addr16
lods
outs
shl
dec
xor
push
lahf
jmp
fs
push
and
and
outs
push
adc
or
jae
dec
ret
ret
shl
cmps
push
xor
ins
outs
dec
es
inc
scas
ret
lds
inc
sub
mov
inc
add
dec
clc
xchg
outs
jp
popa
das
xor
push
outs
xchg
sbb
and
aam
and
adc
xlat
retf
and
sbb
cmps
add
stc
daa
push
push
mov
mov
sub
loopne
inc
outs
test
lock
inc
inc
inc
dec
dec
das
dec
dec
inc
test
call
bound
ds
xor
push
outs
bound
cmp
rcr
pop
adc
jo
xlat
imul
outs
pop
add
adc
pop
sbb
int
outs
pop
push
mov
xchg
outs
mov
les
jo
dec
stos
imul
call
inc
xor
retf
dec
outs
rol
jbe
sub
scas
int
xchg
inc
sbb
aaa
outs
xor
imul
arpl
jl
mov
inc
mov
or
addr16
lods
sub
jo
loope
add
inc
jl
in
pop
push
adc
push
mov
or
pop
scas
adc
js
das
jnp
mov
push
scas
outs
bound
and
sub
es
jle
or
push
adc
fadd
pop
jae
add
(bad)
mov
inc
pop
pop
movs
inc
sbb
sbb
sub
hlt
test
sub
fs
or
out
inc
fist
test
push
mov
jae
pop
cmp
or
into
gs
push
cmp
pusha
fild
popf
adc
push
push
mov
lahf
pop
inc
jnp
pop
or
or
iret
pop
fisttp
and
sbb
add
pop
add
xlat
jmp
or
mov
test
pop
or
imul
pop
(bad)
out
es
outs
ret
mov
arpl
pop
movd
ds
sub
mov
imul
pusha
ret
scas
jp
mov
mov
pop
inc
mov
fistp
mov
addr16
and
or
pop
jnp
sbb
call
(bad)
sbb
jo
add
mov
pop
push
ja
mov
loope
(bad)
daa
popa
mov
mov
(bad)
fidiv
and
fistp
lods
fcmovb
sbb
inc
mov
and
add
scas
pusha
push
icebp
or
lods
or
shr
jmp
cmps
stos
imul
add
mov
and
mov
rol
js
jl
jl
lock
sub
inc
mov
xlat
call
ret
xchg
pop
add
inc
inc
dec
dec
dec
xchg
out
fidivr
lds
ja
inc
inc
push
or
push
push
dec
dec
or
and
shr
mov
sbb
jmp
gs
ret
dec
add
push
icebp
and
pop
pop
adc
jno
imul
out
add
push
xor
xchg
or
mov
push
aaa
mov
pop
add
mov
inc
sub
sbb
xchg
adc
scas
or
fcmovnb
jae
push
push
xor
ja
or
mov
add
add
adc
retf
inc
and
adc
xchg
pop
xor
inc
repz
fwait
push
dec
push
or
push
ret
mov
movs
cmp
dec
jmp
dec
test
je
in
sbb
cmps
inc
jmp
fs
pop
das
loopne
jmp
sub
mov
aas
push
ficom
mov
loopne
inc
inc
cmp
dec
xchg
mov
push
aas
dec
push
jg
popa
pop
ins
mov
fiadd
adc
pop
inc
loopne
dec
scas
push
jmp
mov
push
mov
arpl
xchg
arpl
out
pop
(bad)
mov
pop
inc
aas
xor
push
add
(bad)
popf
dec
mov
inc
and
push
push
and
jp
fimul
mov
or
mov
push
push
inc
mov
ins
cmp
dec
aas
dec
mov
inc
mov
aaa
(bad)
push
push
jmp
mov
cmps
sub
ffree
adc
data16
add
ss
mov
mov
das
pop
push
nop
scas
lahf
mov
xor
push
fidivr
inc
and
cmp
push
ror
lahf
inc
and
(bad)
repz
das
or
or
mov
out
inc
push
push
fistp
inc
dec
dec
inc
xchg
dec
push
or
jle
mov
or
icebp
jmp
out
inc
jbe
ja
nop
ficom
adc
aam
and
push
mov
and
pop
arpl
and
daa
cmp
inc
lods
xor
mov
hlt
test
sub
arpl
push
add
fist
shl
add
adc
arpl
sub
push
aaa
test
inc
sub
(bad)
xor
add
ret
sub
mov
cmp
aas
fild
cmps
scas
pop
jae
ins
aaa
test
mov
rol
sahf
lods
fwait
into
pop
xchg
ins
cmp
stos
xchg
pop
and
adc
in
aaa
sar
sti
test
sbb
dec
jae
ror
dec
ja
bound
les
push
mov
jecxz
push
mov
aad
mov
pop
call
daa
sub
add
sar
shl
ja
inc
add
iret
pop
jnp
aam
inc
and
add
jmp
cmp
daa
push
out
cmps
dec
and
arpl
(bad)
push
jae
das
mov
jp
push
inc
inc
test
mov
ds
cmp
inc
dec
push
inc
dec
inc
dec
dec
inc
sub
sub
inc
pop
aaa
pop
fimul
add
int
sbb
iret
or
lods
jbe
sbb
or
fstp
add
pop
cmp
pusha
dec
xor
clc
jo
jmp
and
cmp
jge
rcr
and
dec
inc
bound
xor
mov
add
out
add
jmp
imul
xchg
mov
inc
mov
mov
aaa
scas
(bad)
xchg
push
fadd
ja
lods
fmul
test
invd
push
push
dec
ror
lods
jne
or
rcl
pop
das
rcr
(bad)
jnp
jo
sbb
cmpxchg
ins
push
stos
push
imul
outs
inc
xchg
add
(bad)
pop
push
(bad)
ror
enter
sub
or
fadd
dec
dec
push
mov
daa
push
inc
push
pop
add
xchg
daa
setle
call
loopne
mov
push
arpl
pop
inc
and
rcr
fbstp
popa
inc
ret
add
adc
xor
pop
push
pop
popa
lods
or
pop
xchg
sub
add
dec
inc
shl
or
and
adc
outs
(bad)
stos
add
popa
push
fild
mov
dec
mov
scas
or
sbb
pop
outs
sub
xor
adc
push
imul
imul
mov
sub
ret
inc
aas
iret
fld
mov
add
add
and
ret
jg
xchg
jbe
adc
push
and
sub
lahf
xor
mov
mov
movs
add
mov
fsub
ror
je
or
comiss
xchg
ja
pop
mov
icebp
pop
rol
inc
jae
mov
je
sahf
push
dec
movs
inc
push
inc
inc
push
inc
push
push
jl
dec
push
lods
outs
push
xchg
test
push
imul
add
push
lods
and
dec
mov
xchg
dec
pop
punpcklwd
loopne
add
sbb
adc
mov
pop
inc
(bad)
(bad)
cmp
pusha
and
loop
adc
aaa
dec
xlat
mov
jno
ss
pop
cmps
rcr
and
scas
rcr
sub
out
xor
call
and
or
bound
shr
dec
pop
xor
pop
rcl
or
xchg
arpl
inc
and
xchg
das
pop
jae
test
ins
adc
movs
fisttp
fidivr
adc
movs
dec
push
sub
outs
out
xchg
outs
rcr
sub
rcl
stos
mov
jo
arpl
add
push
inc
les
add
dec
mov
push
or
aaa
aad
inc
adc
sub
adc
test
mov
inc
popa
xor
mov
aaa
daa
or
ficom
jnp
inc
jo
sbb
mov
leave
pop
ja
adc
inc
cmovl
je
arpl
dec
ins
push
jecxz
(bad)
adc
inc
out
adc
mov
or
mov
xor
push
jmp
xor
mul
(bad)
sar
lods
xor
imul
sbb
shr
scas
inc
mov
mov
pop
adc
push
inc
ret
add
scas
mov
test
ins
inc
daa
imul
jnp
add
ja
cmc
ret
fisub
jae
lea
inc
and
push
fstp
outs
nop
push
rcl
into
sub
or
pop
jle
shr
fdivr
lods
stc
cmp
or
cmp
ins
das
or
stc
sbb
je
jne
ins
imul
mov
or
mov
movs
mov
cmp
xor
xor
xor
lea
popa
push
xor
repnz
xchg
xchg
xor
ss
je
add
sti
movs
addr16
outs
adc
inc
jo
int
adc
sbb
bound
adc
push
push
jmp
and
jns
and
outs
mov
dec
cmp
and
sbb
and
packsswb
arpl
jae
fstp
add
sub
mov
scas
aas
mov
int3
rol
pop
mov
and
inc
add
in
ss
push
rcr
nop
arpl
mov
mov
fwait
loopne
mov
cs
test
and
lods
jne
inc
lahf
pop
das
or
hlt
aam
jecxz
mov
ins
jle
repz
int
mov
dec
mov
jo
out
iret
mov
shr
adc
sub
mov
rep
in
xor
in
out
mov
out
mov
fdivrp
out
inc
push
push
push
pusha
push
push
dec
cmp
add
pop
iret
push
cs
push
adc
bound
imul
mov
inc
jmp
dec
adc
push
inc
push
ins
xor
add
jg
test
inc
pop
popa
ins
sub
inc
pusha
add
xchg
mov
pop
or
dec
lahf
inc
cmp
and
push
or
push
inc
cmp
inc
add
nop
outs
xchg
or
push
daa
dec
add
pop
scas
(bad)
pop
push
cmps
jns
cmp
cmp
rcl
xlat
pop
push
push
dec
sub
mov
pop
daa
inc
cmp
sbb
jp
scas
xchg
shl
jmp
rol
rcl
dec
outs
pop
inc
arpl
push
dec
fiadd
push
addr16
into
jge
lea
push
rol
push
fild
mov
stos
fld
xor
neg
mov
adc
leave
push
or
adc
les
test
das
pop
out
push
(bad)
or
pop
(bad)
mov
test
bound
xchg
push
mov
cwde
add
not
test
mov
dec
frstor
or
pop
dec
mov
cmps
pop
mov
jno
xchg
pop
aas
sub
add
fisubr
pop
jo
adc
dec
call
adc
pop
into
aad
dec
jmp
mov
push
push
sub
mov
int
inc
sti
dec
aas
xchg
push
inc
das
xchg
sub
jo
sub
outs
test
outs
add
adc
inc
in
mov
jb
outs
adc
pop
xchg
xchg
add
add
xchg
cmps
and
xchg
pop
cmp
sub
mov
fiadd
lahf
outs
shl
adc
and
sbb
push
lsl
or
add
inc
cmp
adc
sahf
(bad)
push
mov
xchg
ret
or
loopne
das
push
pop
inc
cmp
cmp
mov
push
movs
pop
out
or
repz
fnstenv
push
push
cmp
out
cmp
sbb
add
lock
enter
shr
mov
test
mov
jb
add
mov
or
hlt
retf
inc
std
enter
test
fisubr
sub
add
fmul
or
psrlq
jge
or
lds
aaa
pop
push
js
test
ja
fiadd
inc
sbb
xchg
fwait
add
ja
sbb
sbb
add
push
lock
fsin
push
fisttp
adc
push
inc
loopne
and
adc
jo
and
add
bound
xchg
mov
add
xchg
push
mov
test
push
aas
sbb
fimul
adc
dec
mov
jg
and
ud2
stc
cmp
adc
push
pop
push
or
dec
lods
mov
outs
(bad)
dec
dec
adc
push
inc
xchg
out
mov
adc
inc
cmovle
outs
data16
je
outs
dec
gs
ficom
outs
dec
xchg
cmp
imul
push
jo
popa
jae
mov
dec
enter
(bad)
add
add
out
jo
pop
ja
sbb
loope
lahf
mov
rcr
fmulp
pop
or
jb
adc
cmps
dec
mov
push
es
and
outs
ins
imul
enter
ret
mov
dec
mov
mov
bound
adc
jle
js
mov
nop
push
fidiv
lahf
add
inc
sbb
jle
mov
(bad)
bound
cmps
xchg
add
adc
dec
stos
adc
inc
sub
mov
mov
pop
das
adc
xchg
inc
popf
inc
fmul
and
pushf
push
data16
aas
add
mov
xchg
shl
mov
add
pop
or
mov
inc
popa
inc
test
cmp
js
push
push
fldenv
ins
xchg
mov
sar
pop
data16
mov
fnstenv
pusha
inc
ror
int3
scas
cwde
cmp
leave
imul
push
in
mov
jo
je
repnz
dec
push
fcom
dec
dec
inc
fwait
(bad)
push
nop
outs
ins
bound
call
ss
aam
es
add
pop
mov
add
push
add
sbb
pusha
push
xchg
dec
jae
aam
or
femms
xchg
mov
mov
je
test
xor
push
pop
pop
outs
dec
rcl
and
push
sub
mov
jmp
adc
lock
and
sbb
sub
adc
or
fnstsw
or
mov
in
push
out
imul
jne
inc
pop
pop
or
loope
jle
and
or
daa
rol
aam
arpl
das
jmp
inc
stos
and
lock
jnp
mov
sub
pop
inc
inc
in
repnz
dec
inc
dec
push
pop
imul
ds
das
inc
sbb
iret
cmp
push
inc
inc
dec
daa
pop
int3
test
in
pop
jge
daa
dec
gs
add
xlat
adc
or
mov
(bad)
das
leave
push
mov
sbb
scas
arpl
daa
ins
cli
sbb
xor
jmp
repz
call
inc
daa
lahf
adc
mov
add
scas
or
and
ins
lods
or
mov
fistp
push
push
dec
(bad)
call
xchg
shl
adc
ins
adc
mov
shl
(bad)
pop
in
test
pop
push
jb
aam
or
daa
pop
adc
push
ins
mov
test
mul
sub
daa
outs
fiadd
lods
and
shr
ss
in
xchg
sub
mov
loopne
and
retf
sbb
(bad)
sub
bound
jg
das
cmp
imul
scas
not
gs
mov
mov
lods
xor
mov
shr
inc
sbb
push
dec
das
repnz
xchg
sbb
pop
push
jmp
mov
cmps
outs
or
repnz
test
nop
add
or
daa
mov
dec
out
ins
aaa
ss
das
add
and
adc
movs
dec
cmps
int
mov
add
call
push
xor
sar
cmp
fs
cmp
jns
out
cmp
adc
sar
pusha
mov
out
cmp
inc
and
push
or
lods
push
inc
test
adc
inc
mov
loopne
and
stc
xchg
mov
mov
outs
xchg
xor
push
dec
outs
gs
cmps
dec
cmp
jne
ds
cmovns
out
sbb
inc
mov
jns
sbb
aam
jo
ror
sbb
mov
adc
sub
pop
mov
(bad)
dec
fs
add
in
adc
push
das
outs
inc
inc
push
cmovge
adc
ret
and
and
inc
sti
ss
jne
and
add
jne
pop
fmulp
cmps
xchg
and
add
mov
sbb
arpl
xlat
shl
pop
push
jg
or
mov
xor
daa
cmps
mov
cmp
mov
je
cmps
inc
(bad)
push
pusha
sub
sub
mul
pop
inc
pop
add
aas
movs
jl
pop
lds
sbb
daa
int
mov
push
nop
mov
cmp
inc
inc
mov
pop
dec
call
adc
(bad)
shl
repnz
clc
push
pop
add
or
mov
pop
in
cmps
outs
jae
inc
and
push
icebp
loopne
adc
outs
and
daa
mov
(bad)
xor
pusha
outs
aam
mov
add
add
and
sbb
jge
fisub
sub
js
ret
mov
and
ja
js
mov
jne
sub
sub
(bad)
imul
mov
push
or
imul
mov
pop
sbb
or
add
add
out
movs
jb
dec
add
adc
cmp
add
push
pop
or
add
xlat
push
das
push
jnp
dec
adc
adc
test
jmp
xor
cmp
add
push
adc
cmp
bound
sub
ror
popa
and
push
sub
sub
cmp
mov
pop
js
sahf
fiadd
add
popa
les
inc
push
stos
push
jno
or
sub
sahf
(bad)
push
jge
mov
sahf
out
loopne
jle
adc
repz
and
inc
push
pusha
jo
iret
repz
nop
mov
int
loopne
jg
adc
jnp
jnp
push
dec
sbb
add
sub
test
cmp
dec
ja
into
adc
test
test
fist
lock
ss
pop
sub
add
stos
xchg
xchg
dec
fisub
mov
add
in
sbb
(bad)
inc
fdivr
xor
loope
pusha
mov
into
repz
nop
mov
fisubr
pop
add
movs
cmc
fs
cmp
in
mov
out
mov
dec
pushf
and
xor
pop
out
jecxz
inc
sbb
xchg
(bad)
jbe
stos
or
lock
or
or
ror
or
(bad)
pop
dec
aaa
shr
jp
lock
sub
xchg
cmp
outs
push
outs
dec
mov
ret
and
add
adc
ins
fwait
out
dec
mov
das
das
xlat
shl
loopne
and
add
add
mov
add
mov
push
(bad)
mov
(bad)
add
lmsw
push
add
inc
dec
add
add
jae
xor
fwait
das
pusha
in
stos
imul
jge
jo
outs
inc
mov
popf
push
mov
xor
add
dec
mov
pop
push
movs
pop
ret
pop
popa
dec
aam
mov
mov
ror
out
push
and
fisubr
mov
inc
js
lods
add
fild
mov
fbld
pop
sti
and
stc
adc
pop
out
(bad)
sub
iret
jmp
hlt
lods
sbb
pusha
push
nop
shr
add
inc
mov
dec
loopne
in
ss
dec
call
lock
popa
lods
mov
and
jo
inc
test
jl
add
mov
jne
adc
xor
mov
push
scas
sub
sub
xchg
or
push
rcl
test
sahf
or
and
popa
pop
add
nop
mov
and
imul
jb
daa
aaa
mov
adc
cmp
xchg
jg
lahf
cld
scas
rol
and
mov
sbb
ror
out
pusha
shl
and
int
dec
cwde
or
hlt
mov
xchg
ret
or
call
ds
fcom
lea
(bad)
pop
nop
and
pop
(bad)
mov
push
outs
nop
or
mov
fsubp
and
or
push
push
and
or
add
lds
iret
int3
pusha
popa
mov
nop
and
rcr
jl
push
or
cs
xchg
xor
sbb
jno
sub
sbb
mov
call
lock
mov
push
mov
add
rcl
shr
jae
mov
imul
and
inc
sub
leave
inc
rol
dec
dec
es
shl
sti
nop
sbb
enter
dec
pop
xchg
pop
shl
or
inc
pop
pop
jae
jl
daa
or
and
jp
fs
dec
dec
rol
cwde
jne
and
imul
push
outs
jo
cmp
cld
jecxz
sbb
orps
jns
(bad)
push
inc
mov
sbb
add
sar
inc
jecxz
sbb
sub
aas
xor
push
fs
bound
nop
mov
inc
les
xor
or
dec
bound
inc
xor
cmp
lock
push
pop
clc
cmp
xor
jge
jmp
ja
in
shl
dec
pop
sbb
cmp
mov
mov
mov
lods
imul
jmp
shl
outs
sub
add
cmp
out
arpl
and
add
lds
xor
pop
test
add
fs
xlat
int
add
inc
push
rol
pop
sub
sbb
mov
fs
push
add
dec
dec
inc
push
aaa
sub
fiadd
push
adc
rcl
jbe
retf
(bad)
ja
pop
mov
fild
xchg
pusha
imul
push
pop
push
sbb
das
sub
mov
mov
ins
jae
bound
jo
add
rcl
inc
mov
inc
fcmovbe
aaa
das
test
pop
fcomp
rol
scas
pop
xchg
dec
stos
movs
xchg
retf
inc
test
movs
dec
pop
dec
dec
cmp
adc
gs
jl
push
fild
ins
sub
popa
jg
push
ror
scas
pop
nop
fidivr
aas
cmp
mov
mov
scas
movlps
add
inc
pop
loope
mov
out
xlat
pop
cmp
inc
dec
or
scas
xor
dec
push
inc
mov
push
fwait
pop
and
iret
js
test
pop
xchg
fwait
push
or
das
sub
xor
push
xchg
sbb
shr
das
mov
push
or
movs
fsub
out
imul
or
pop
add
cmp
dec
mov
cmps
jae
and
and
dec
add
inc
adc
adc
or
push
cmc
mov
jge
ror
xor
and
or
leave
mov
movs
cmp
add
xchg
dec
je
lods
dec
outs
xchg
add
pop
fcomp
cmp
xchg
stos
cmps
(bad)
in
add
jg
adc
clts
daa
dec
leave
push
mov
data16
and
or
mov
cmovns
shr
jmp
jbe
lds
daa
ja
arpl
test
inc
mov
adc
dec
dec
and
pop
mov
iret
push
sub
into
daa
mov
xchg
push
pop
popa
outs
pop
dec
add
pop
dec
or
pusha
sub
pop
or
pushf
sahf
dec
inc
(bad)
jg
daa
pushf
es
mov
aaa
int3
cmp
stos
sti
les
out
push
xor
ret
and
jo
fadd
fadd
xchg
push
xchg
adc
(bad)
push
and
inc
push
inc
dec
dec
inc
and
adc
out
cmp
ja
inc
push
jp
push
pop
mov
shl
sub
call
jmp
and
inc
or
lahf
pop
adc
sub
mov
call
enter
daa
rcr
pop
movs
cdq
mov
iret
jae
ret
je
dec
scas
outs
mul
scas
shl
lahf
das
imul
mov
xlat
ror
jo
icebp
add
or
dec
stos
xor
dec
das
sbb
or
loope
lea
add
daa
or
cmp
and
aam
jp
rol
iret
in
sbb
jp
pop
add
ja
and
lea
addr16
lods
pop
lods
xchg
movs
ret
add
lahf
outs
sub
push
hlt
cmp
sub
in
sbb
cmp
stos
enter
ficomp
daa
pusha
pop
jecxz
rol
fwait
mov
lods
mov
inc
ins
mov
stc
shl
push
das
std
bound
sub
push
cmps
cmp
cmp
arpl
popa
push
or
pop
xchg
inc
popf
data16
sysenter
call
(bad)
pop
imul
fwait
pop
inc
adc
ins
out
jno
xor
and
or
out
add
test
je
in
aaa
jbe
fsub
pop
ret
fild
push
popf
pop
mov
fisttp
jns
push
push
cmps
push
dec
ja
pop
push
hlt
dec
outs
sbb
sbb
stos
xor
jge
mov
jge
sub
pop
mov
mov
sbb
arpl
ret
cdq
imul
inc
xchg
cdq
stos
aaa
aaa
mov
daa
loope
add
mov
dec
addr16
jne
ror
pop
push
sbb
jmp
sbb
xor
sti
pop
ins
fdivr
sbb
lods
out
cmps
nop
fwait
ret
cmp
cmp
xor
add
das
push
dec
aad
xchg
jmp
mov
fs
or
outs
ins
lock
cmp
jmp
stos
icebp
pusha
fiadd
pop
push
and
fs
or
xchg
sub
(bad)
iret
stc
dec
out
mov
push
and
xchg
mov
mov
(bad)
in
add
and
inc
or
sbb
mov
ins
xor
ja
sbb
jge
stos
fsub
and
xchg
jo
adc
jg
xor
jg
mov
addr16
sub
bound
cwde
pop
push
aas
les
imul
mov
fst
(bad)
sub
fistp
sub
pop
mov
cmp
sbb
sbb
sbb
outs
jl
popa
pop
inc
mov
or
inc
pop
sbb
inc
mov
add
retf
push
test
jle
cmp
sub
xchg
les
and
repnz
cmps
outs
xor
outs
data16
push
pop
and
test
add
and
ds
cmp
push
and
cmp
xor
or
daa
daa
add
aaa
test
adc
fidiv
push
pop
and
or
aas
test
xor
jmp
xchg
sbb
push
and
fidiv
or
inc
xchg
and
pusha
arpl
jge
outs
add
in
add
mov
sbb
or
in
ins
mov
mov
pop
add
and
aas
pop
fnsave
jns
mov
sahf
inc
outs
push
mov
out
imul
fstp
aas
imul
imul
mov
outs
fs
mov
fwait
xor
jo
mov
out
add
pop
cmps
xchg
dec
or
loopne
outs
pusha
rcl
rcr
in
xchg
xor
mov
jnp
test
and
ret
dec
adc
popa
ret
or
or
sbb
cmp
push
out
jno
arpl
jo
adc
outs
pusha
cmp
out
dec
push
shr
je
cmp
xor
mov
orps
sbb
xchg
push
inc
loope
jmp
cwde
pop
fadd
mov
xchg
and
retf
sub
add
sbb
cld
dec
std
push
imul
or
addr16
dec
add
outs
mov
xor
cwde
adc
mov
sbb
je
(bad)
rol
loope
mov
lahf
pushf
mov
cmps
ins
cs
lock
inc
and
sub
sub
add
inc
rol
dec
jo
lods
imul
bound
mov
push
loopne
stc
pop
outs
ins
jne
sti
aam
das
retf
pop
adc
cld
sub
sub
out
push
call
bound
aaa
or
cwde
inc
test
mov
fild
adc
fnsave
xor
push
cs
jne
sub
test
aas
mov
es
cmp
ins
xchg
xor
pusha
cld
movs
pop
add
sahf
aam
(bad)
(bad)
scas
jb
cmp
lock
mov
mov
lods
in
rol
scas
pop
inc
fcmovbe
int3
call
and
dec
jne
sub
xchg
lods
mov
out
ret
shl
dec
pop
xor
mov
jae
mov
outs
mov
fs
out
push
cmp
or
call
clc
mov
nop
div
sub
(bad)
nop
jo
jnp
pop
mov
out
outs
jmp
and
ins
stc
xchg
ins
and
cmp
clc
cmp
mov
push
and
pop
or
ror
jne
jmp
mov
jmp
shl
mov
push
jbe
ret
mov
mov
sub
xchg
ret
aas
(bad)
pop
das
xor
mov
pop
jmp
jmp
sub
scas
pop
ss
xchg
popa
mov
ja
(bad)
push
imul
adc
add
addr16
sbb
test
sub
adc
xor
imul
push
ins
mov
test
pusha
push
mov
xor
or
ficomp
mov
and
in
out
push
mov
jecxz
mov
in
sbb
out
inc
das
xchg
(bad)
fucomi
lock
cmp
stos
test
ficom
fild
xor
cmc
imul
and
je
out
add
or
jg
or
(bad)
in
mov
je
outs
div
(bad)
mov
pop
pop
dec
enter
das
mov
pop
lock
inc
aas
inc
(bad)
adc
inc
arpl
and
jo
mov
sub
addr16
pop
jle
add
add
sldt
add
int3
out
cmovo
push
add
shl
outs
xchg
fcmovne
fldcw
pop
or
fldcw
inc
fsubr
movs
(bad)
pop
cmp
sbb
add
inc
fucomp
lods
jo
cmp
inc
and
jmp
add
push
dec
cmp
jb
in
jmp
add
cmp
in
dec
pop
and
call
cmp
lods
xchg
and
jb
bnd
pmuludq
inc
shr
mov
addr16
das
and
jbe
jnp
add
loop
scas
ror
mov
in
add
inc
and
cmp
jns
add
add
ror
jns
mov
out
retf
sbb
jnp
in
xchg
in
pusha
pop
js
cmp
sub
fisub
daa
das
loop
pop
mov
aas
cdq
jb
popf
pushf
sub
div
and
dec
mul
outs
loopne
leave
fldln2
in
retf
sahf
pop
ror
divps
xor
dec
outs
daa
or
iret
outs
daa
inc
into
pop
inc
mov
sbb
sahf
pushf
pushf
and
jmp
dec
mov
in
in
loopne
loopne
mov
fsubr
xchg
je
cmp
cmp
xor
das
aas
(bad)
out
adc
add
shl
std
(bad)
dec
inc
inc
cld
sahf
sbb
and
adc
fs
aas
inc
(bad)
aas
(bad)
call
xchg
xchg
bound
mov
xlat
pop
xchg
dec
pop
mov
jo
cmp
stc
dec
cdq
cmp
pop
arpl
(bad)
retf
or
aas
jg
(bad)
(bad)
in
das
xchg
xchg
pop
dec
pop
test
aas
inc
pop
adc
push
clc
dec
push
push
(bad)
repnz
mov
(bad)
in
or
and
inc
rcl
(bad)
mov
inc
call
cld
(bad)
fsub
jb
mov
and
xlat
mov
aas
push
add
(bad)
mov
(bad)
fadd
aas
dec
je
stos
mov
inc
scas
daa
jp
ret
aas
mov
aaa
(bad)
cld
and
mov
push
jbe
(bad)
fwait
and
ret
dec
push
pusha
(bad)
(bad)
stc
call
aas
push
lds
js
movs
pop
(bad)
aas
clc
out
pop
jmp
faddp
cli
pop
dec
enter
mov
rcr
push
mov
aas
adc
push
ror
sbb
jle
sub
xor
retf
xchg
mov
scas
adc
or
cld
(bad)
std
loop
mov
adc
stc
dec
int
sub
mov
out
dec
or
repnz
jle
jecxz
mov
data16
mov
push
int
clc
push
or
js
aas
add
or
icebp
cmp
mov
into
adc
mov
inc
nop
ja
lods
mov
xchg
aas
ds
jg
out
nop
movs
inc
sar
pop
aam
call
lods
push
fistp
ds
cmc
xor
(bad)
pop
sbb
xchg
mov
fdivp
jecxz
rcl
dec
pop
pop
inc
jle
in
inc
sti
dec
mov
sbb
add
int
idiv
sbb
sub
mov
cmp
add
lahf
mov
pop
jne
jae
jle
(bad)
aas
les
and
mov
(bad)
mov
daa
loop
nop
jle
and
xor
jg
jno
int
outs
mov
mov
mov
fdivr
jbe
retf
add
jg
movs
pop
cmp
call
sahf
rcr
fnstcw
addr16
mul
ds
stc
in
iret
mov
test
(bad)
mov
or
xor
std
in
out
aaa
lea
jne
dec
jle
mov
mov
nop
xor
mov
(bad)
mov
gs
fstp
pusha
pop
sahf
or
dec
js
jle
push
and
or
sbb
mov
outs
mov
inc
inc
xor
push
aaa
loop
pop
add
and
cdq
fnstsw
add
call
push
dec
fistp
or
in
sub
loop
lock
aas
loope
in
outs
mov
push
add
shl
sub
jo
lea
jp
xchg
fld
sahf
ins
std
push
popf
clc
fdivrp
imul
test
dec
out
pop
daa
aas
cli
int
sub
and
into
js
mov
fmulp
push
push
shl
jmp
aas
movs
push
adc
push
pop
inc
xor
pop
fwait
mov
dec
push
call
rcl
sbb
retf
je
outs
(bad)
out
arpl
pop
push
and
push
pop
in
outs
mov
push
mov
jno
add
adc
enter
aas
jp
sub
mov
adc
xor
call
push
sub
sahf
xor
mov
cmc
add
mov
ds
push
adc
fist
mov
call
fdivr
xlat
outs
push
and
push
cmp
jg
in
(bad)
fisttp
sbb
ds
and
(bad)
iret
and
jg
push
mov
dec
outs
es
add
inc
aaa
inc
lahf
fwait
mov
xor
inc
or
and
jl
jmp
cdq
retf
(bad)
mov
pop
sub
push
call
dec
mov
lahf
adc
(bad)
(bad)
mov
mov
push
aas
sahf
ja
cdq
imul
out
xor
sbb
pop
lahf
not
sti
mov
(bad)
mov
ins
repz
pusha
sbb
jns
call
mov
mov
sub
adc
popf
sar
push
mov
mov
sub
xor
or
mov
(bad)
mov
pop
xchg
aaa
xor
xchg
mov
or
int
(bad)
jle
ins
inc
(bad)
shl
mov
shl
(bad)
std
test
(bad)
aas
cmp
sti
sar
lods
sub
fimul
js
sub
inc
jle
mov
sbb
enter
(bad)
fld
sahf
mov
iret
mov
jbe
cmp
xchg
mov
sar
repz
outs
ss
ins
(bad)
push
lods
int
or
(bad)
mov
cld
push
(bad)
call
cmp
xchg
in
cmc
add
pop
cld
retf
mov
nop
test
(bad)
out
outs
inc
imul
mov
retf
(bad)
(bad)
(bad)
sti
push
sub
jle
loop
jge
mov
arpl
ds
or
aas
(bad)
mov
mov
and
movs
or
inc
push
jg
mov
jg
fwait
add
(bad)
push
ins
cmp
ds
mov
pusha
xor
mov
and
(bad)
jg
jmp
and
and
and
jo
add
(bad)
out
mov
mov
pop
and
pop
inc
push
loopne
push
stc
ret
ss
ret
cmp
add
sub
cmp
dec
xor
cmp
sar
(bad)
out
(bad)
mov
in
sar
fimul
push
pop
or
jle
movs
mov
xor
push
out
xchg
xchg
or
cld
mov
ins
jge
call
mov
rol
idiv
dec
jg
in
inc
push
jmp
mov
mov
pop
cld
sti
cdq
mov
daa
aaa
sahf
mov
(bad)
stos
idiv
sti
call
mov
shr
inc
(bad)
mov
dec
pop
adc
(bad)
jmp
les
sahf
mov
mov
dec
sbb
pop
iret
jne
mov
cmc
fild
sbb
fdivr
test
mov
int3
scas
jmp
lahf
(bad)
jg
(bad)
hlt
mov
mov
cmp
cmp
mov
xlat
jl
idiv
mov
add
js
sahf
push
scas
repnz
xor
(bad)
(bad)
stc
call
cs
mov
inc
inc
sub
movs
dec
and
or
(bad)
jg
out
xor
repnz
mov
inc
push
jp
jge
xchg
mov
icebp
push
dec
add
or
aas
jecxz
mov
lock
pop
sub
mov
test
adc
(bad)
js
les
ja
push
outs
jmp
mov
out
aas
inc
(bad)
out
paddd
cld
daa
daa
daa
daa
sti
cli
stc
clc
daa
daa
daa
daa
div
cmc
hlt
daa
daa
daa
daa
repz
lock
daa
daa
daa
out
out
in
in
daa
daa
daa
daa
jmp
jmp
daa
out
in
daa
daa
daa
daa
jecxz
loope
daa
daa
daa
daa
(bad)
fstp
daa
daa
daa
daa
fcmovnu
(bad)
daa
daa
daa
daa
xlat
(bad)
aad
xchg
xchg
and
rol
xchg
xchg
ror
into
int
xchg
xchg
xchg
int3
retf
retf
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
(bad)
in
in
add
lock
inc
pushf
pushf
pushf
mov
push
pushf
pushf
pushf
pushf
push
or
pushf
pushf
or
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
or
pop
pop
pushf
pushf
pushf
pushf
pop
push
push
push
pushf
pushf
pushf
pushf
push
add
pushf
pushf
add
pushf
pushf
pushf
add
add
pushf
pushf
pushf
pushf
add
add
pushf
pushf
pushf
pushf
add
add
call
pop
jno
test
cmp
int3
call
aas
push
popa
xor
or
and
xor
sbb
(bad)
aas
hlt
mov
cmp
aas
aaa
cmp
mov
mov
jmp
daa
popa
add
dec
aas
(bad)
sub
int
jg
xor
leave
cwde
push
aas
sub
lods
sub
jp
adc
push
aas
mov
jg
push
daa
fisttp
rcl
push
aas
in
adc
xchg
mov
inc
sahf
jo
mov
ja
scas
cld
aam
(bad)
hlt
inc
es
jg
fild
loopne
or
(bad)
mov
lods
inc
bound
pop
inc
sahf
clc
jmp
mul
sbb
mov
and
cld
push
(bad)
cli
lahf
push
nop
pop
dec
pusha
xor
aas
xor
(bad)
aas
(bad)
push
aam
dec
gs
xor
dec
cwde
mov
inc
div
sbb
pop
cmp
pushf
xor
pop
mov
dec
mov
mov
imul
cld
sbb
jb
add
imul
and
shl
jmp
in
int3
mov
sar
stc
ins
aas
ds
jl
cmp
(bad)
stc
dec
aas
ret
jno
mov
aam
clc
outs
jo
jp
add
or
je
sub
jno
adc
cmc
push
inc
inc
pusha
loope
xchg
(bad)
std
mov
add
pop
test
mov
fld
push
fstp
push
jae
ja
scas
cld
mov
mov
fbld
or
lock
fidivr
mov
push
in
shl
enter
pop
in
xor
xor
or
and
jbe
out
adc
test
xor
(bad)
sti
and
dec
sbb
stos
ja
jno
inc
or
js
(bad)
jg
aas
xor
or
fist
rcr
aas
lds
mov
cmp
adc
std
int
fsub
pop
sub
int
mov
jp
mov
rol
(bad)
jg
ret
jnp
rcr
xchg
ret
jl
ja
xor
xor
and
mov
dec
mov
pop
sub
loopne
jge
(bad)
out
aaa
sbb
sahf
and
jns
jle
jl
les
(bad)
mov
jmp
repz
sub
pop
fild
stc
mov
nop
xchg
xor
or
push
cmp
outs
(bad)
cld
int
je
push
int3
lea
dec
push
xor
push
cld
stc
jmp
and
mov
cmp
aaa
ret
and
cld
out
ffreep
gs
popf
data16
call
mov
scas
push
ret
sbb
adc
cli
sub
and
dec
fild
adc
jmp
inc
push
fadd
aaa
jg
push
sbb
pop
and
aam
adc
cmp
cmp
out
mov
imul
out
hlt
neg
mov
jecxz
test
cli
repnz
clc
aad
dec
push
call
jb
jno
out
daa
cmp
jle
iret
mov
pop
nop
push
aaa
dec
repz
pop
mov
aam
inc
retf
in
ret
stc
fwait
aas
bound
out
repnz
inc
sbb
fiadd
aas
jecxz
jg
daa
stos
xor
imul
mov
call
loop
jle
int3
xchg
retf
mov
jg
neg
mov
iret
push
gs
ins
cli
sbb
mov
(bad)
out
push
jne
sar
aam
cld
dec
mov
cdq
jl
mov
push
aaa
jg
rcl
cmp
push
inc
dec
pop
lock
shl
je
push
daa
lahf
mov
or
and
test
adc
mov
(bad)
(bad)
cld
int
sub
pop
dec
ins
es
add
inc
cld
stc
fwait
aas
cwde
shl
test
aaa
mov
fisttp
inc
sub
jne
cs
loope
sub
lahf
mov
pop
out
mov
jbe
dec
mov
aas
(bad)
(bad)
cld
enter
jo
call
mov
xor
jp
(bad)
stc
fwait
dec
outs
out
fucom
or
add
jo
add
psubq
scas
jl
push
xchg
or
dec
loopne
inc
xor
dec
jmp
sbb
outs
mov
mov
or
xor
outs
adc
inc
mov
inc
push
or
add
jne
or
lock
mov
(bad)
mov
mov
mov
test
jmp
pop
push
push
es
sbb
cdq
jmp
call
popa
imul
mov
cmp
test
mov
pop
stc
push
add
sub
imul
dec
popa
cmp
jg
aaa
pop
(bad)
fldcw
sbb
repz
dec
push
push
mov
jge
sbb
in
and
ins
lahf
(bad)
jg
mov
es
xor
jnp
push
mov
mov
adc
cmp
pop
(bad)
(bad)
out
sahf
gs
inc
(bad)
mov
fs
mov
(bad)
push
push
scas
xor
push
ret
mov
sbb
inc
push
inc
stos
fnstenv
mov
cdq
fiadd
xor
clc
(bad)
jnp
bound
mov
cld
push
pusha
add
add
repz
jle
pop
mov
popa
mov
mov
jb
rcl
push
xchg
pusha
mov
movs
push
jo
into
mov
idiv
or
jbe
jmp
inc
pop
mov
mov
(bad)
inc
mov
push
sbb
pop
mov
mov
pop
mov
cld
fnstsw
and
dec
hlt
pop
or
fild
ficom
pop
sbb
xor
dec
inc
sahf
inc
aaa
adc
sbb
dec
std
mov
mov
push
mov
ins
std
nop
inc
imul
mov
push
jno
stos
jne
dec
jp
out
fild
call
inc
push
dec
push
mov
mov
stc
jmp
mov
into
xor
repz
mov
inc
aaa
inc
(bad)
mov
test
xor
and
das
(bad)
adc
sar
cmc
or
(bad)
(bad)
mov
xor
mov
lea
aas
inc
fldenv
mov
out
cmp
mov
mov
and
(bad)
pop
cld
jg
adc
mov
in
lahf
scas
lea
ds
out
jle
dec
sub
cmp
pop
adc
adc
mov
xchg
dec
mov
cmp
adc
pop
rcl
aas
test
aas
lea
push
in
enter
inc
add
mov
in
ds
cmp
cmp
ss
xor
jb
mov
cs
sub
sub
sub
daa
daa
mov
(bad)
outs
and
pop
and
fmul
daa
push
outs
sbb
cmp
push
pop
adc
in
jb
adc
nop
or
or
pop
pop
fmul
daa
push
outs
add
into
sahf
pushf
add
adc
std
adc
inc
mov
clc
xor
outs
daa
daa
cmc
rep
repnz
out
in
in
outs
jmp
jbe
cmp
pop
call
fcmovne
in
jecxz
loop
outs
fild
daa
mov
pop
(bad)
fldcw
mov
pop
aad
outs
shl
jbe
cmp
pop
iret
into
outs
int3
fcmovne
leave
in
retf
pop
leave
enter
daa
mov
(bad)
ret
mov
mov
mov
mov
outs
fcmovne
in
in
mov
scas
scas
outs
outs
daa
mov
lods
stos
pop
stos
test
cmps
popf
pushf
fmul
pop
movs
mov
mov
popf
fwait
outs
fcmovne
in
in
cwde
pop
xchg
xchg
outs
daa
daa
mov
xchg
xchg
pop
xchg
nop
mov
adc
mov
mov
sahf
daa
mov
xchg
popf
popf
pushf
outs
fwait
fwait
dec
outs
daa
daa
call
dec
dec
xchg
xchg
outs
xchg
xchg
cmp
aas
xchg
xchg
jb
cmp
xchg
nop
nop
outs
(bad)
in
jb
mov
in
in
mov
leave
leave
mov
xchg
xchg
xchg
xchg
daa
mov
outs
add
outs
aas
jg
jle
popf
pushf
pushf
fsubr
jl
jp
cmp
mov
ja
jb
cmp
jbe
je
in
jbe
aas
jae
jno
leave
in
in
jo
outs
outs
xchg
xchg
fcmovne
outs
ins
aas
ins
ins
daa
daa
mov
imul
imul
aas
addr16
fmul
fs
arpl
mov
aas
pusha
pop
jb
cmp
pop
pop
pop
outs
pop
in
jb
pop
pop
pop
aas
pop
in
in
in
pop
push
push
outs
fcmovne
leave
leave
push
push
push
push
aas
mov
xchg
xchg
push
push
push
push
outs
push
outs
daa
daa
daa
push
dec
dec
aas
dec
dec
dec
dec
dec
dec
dec
dec
dec
fwait
pushf
pushf
fsubr
dec
dec
(bad)
mov
inc
rcr
leave
call
fwait
add
and
mov
fdiv
repnz
call
ds
mov
add
xlat
ds
(bad)
pop
dec
dec
sbb
std
fwait
dec
stos
mov
mov
es
jg
cld
fistp
add
fstp
in
(bad)
sub
sar
dec
sti
inc
fadd
std
es
stc
dec
fistp
add
xchg
push
cmp
popf
mov
add
ds
jns
mov
stc
jg
dec
sub
add
sub
mov
push
(bad)
pop
mov
or
or
mov
inc
hlt
xchg
mov
retf
sti
jg
call
cmc
bound
inc
cwde
or
idiv
mov
bnd
jmp
clc
ds
loope
into
fmul
int3
push
add
ds
(bad)
pop
inc
and
call
push
es
adc
jle
xchg
(bad)
cld
ds
or
mov
ds
ins
xchg
jb
inc
jmp
(bad)
out
pop
or
sar
and
xor
add
stos
int3
cmp
iret
pop
fwait
retf
push
(bad)
or
add
mov
and
adc
add
fild
dec
push
and
pop
xadd
inc
mov
call
add
inc
jbe
aaa
stc
xchg
xor
in
inc
add
jno
ins
loope
ins
sub
mov
push
add
loopne
movs
cs
das
jg
adc
add
cld
rcl
dec
and
push
aas
jmp
cld
loop
or
pop
and
sti
aaa
ja
aas
xor
cdq
or
xchg
sbb
jecxz
jb
hlt
sti
in
cmp
pop
cld
repnz
sbb
dec
addr16
mov
jle
mov
out
push
int3
dec
pop
jb
add
aas
fcomi
jae
shr
inc
sub
rcr
das
mov
imul
aad
test
pop
and
int
jmp
or
out
jo
pusha
jno
pop
dec
and
cld
bnd
not
dec
(bad)
jg
xor
mov
mov
aam
inc
push
aas
iret
jmp
cld
cld
push
pop
test
aas
daa
push
lock
fisubr
rcr
ret
fbld
xor
mov
inc
pop
sti
push
inc
adc
shr
pop
stc
fwait
mov
nop
out
addr16
and
lock
mov
(bad)
mov
sahf
cmp
jg
outs
out
pop
aaa
sbb
xor
popa
sbb
adc
or
stc
jb
ror
out
pop
add
call
out
push
rol
jg
mov
rcr
and
aas
aam
adc
repnz
aas
cli
int
jmp
jno
push
sub
add
and
shl
dec
outs
push
mov
pop
jo
xor
jl
aaa
pop
and
das
int
mov
pop
mov
dec
sbb
fistp
ds
xor
inc
adc
sahf
sub
pop
jmp
jg
cmps
sub
mov
add
aas
mov
(bad)
out
mov
test
pusha
ja
push
xor
mov
cld
sub
cld
mov
mov
adc
dec
cmp
adc
aas
and
(bad)
add
jae
outs
scas
mov
sub
pop
ds
xor
fistp
stc
clc
sbb
sbb
inc
int
repz
jg
sub
push
bound
add
clc
cmp
jg
push
lods
cmps
test
data16
inc
sbb
cmp
jae
outs
out
pop
push
cmp
fnstcw
call
inc
pop
(bad)
loop
mov
daa
cmp
sbb
int3
jnp
and
fild
pop
loope
mov
or
iret
rcr
movs
jmp
fucomi
fisubr
mov
jnp
scas
and
dec
out
shl
retf
sbb
mov
and
mov
jne
and
cmp
xchg
mov
int3
imul
ins
dec
loopne
pop
(bad)
scas
cld
cmc
outs
mov
dec
xor
aaa
mov
jmp
repnz
rcr
xor
dec
lock
add
jae
call
push
aas
or
daa
mov
push
mov
movs
(bad)
xor
inc
scas
inc
jbe
add
aas
sub
inc
aaa
push
(bad)
out
push
pusha
dec
and
loope
mov
inc
rcl
cld
push
outs
cmp
adc
aas
jmp
ror
sub
outs
leave
(bad)
mov
xchg
aas
mov
xor
retf
mov
fcmove
and
xor
retf
outs
das
jg
mov
adc
push
nop
and
jbe
(bad)
out
xor
and
mov
and
lahf
or
push
push
repz
adc
out
inc
mov
xor
jne
inc
cmp
ss
fwait
mov
push
fld
xor
sub
cmps
push
mov
jg
jne
or
aas
mov
and
and
cmp
mov
pop
js
test
mov
cmp
inc
adc
popf
rcr
nop
ds
in
jecxz
add
cmp
(bad)
fdiv
std
repnz
jle
int3
inc
sub
cmp
(bad)
mov
loope
fisttp
push
test
(bad)
out
inc
js
dec
jge
add
dec
adc
test
mov
repnz
pop
jb
pop
inc
fcomp
fisttp
(bad)
mov
and
push
lods
popf
retf
aas
rol
push
js
push
xchg
xor
sbb
dec
pusha
push
push
jl
or
cmp
loope
fsubr
sub
mov
mov
dec
call
aaa
clc
jnp
cmp
cmp
cmp
movs
push
ja
dec
pop
fwait
sub
sahf
dec
dec
mov
fstp
add
cmp
pop
stc
mov
sub
or
cmp
fistp
cmp
fs
push
add
aas
jle
dec
push
(bad)
jbe
jl
or
xor
push
les
test
pop
(bad)
std
loopne
repz
ret
dec
pop
push
pop
mov
sbb
dec
out
fistp
pop
mov
enter
adc
iret
call
or
pop
adc
mov
movs
retf
into
jg
in
rcr
push
mov
ins
mov
mov
adc
mov
aam
lds
push
movs
shl
aam
repnz
mov
sbb
jl
das
push
mov
fs
outs
scas
cld
mov
mov
xlat
sbb
jmp
push
(bad)
out
ficomp
jno
sbb
push
test
mov
add
out
and
aas
adc
pop
mov
stos
mov
fstp
push
xor
and
es
adc
dec
out
outs
scas
cld
xchg
pushf
cmp
inc
rcr
mov
inc
test
aaa
push
(bad)
out
fisttp
inc
retf
adc
fcomp
mov
stc
or
clc
mov
xchg
mov
(bad)
out
(bad)
(bad)
adc
pop
ret
sbb
mov
mov
fisubr
popf
fmul
fistp
int
mov
cmp
dec
and
push
pop
in
scas
outs
loopne
movs
nop
xchg
sub
or
out
adc
pop
stc
push
jle
pop
sbb
sbb
inc
aaa
push
(bad)
out
loop
dec
and
test
pop
cmp
loop
adc
xor
xlat
icebp
adc
jecxz
loope
cli
mov
cmp
int
(bad)
stc
and
jmp
fist
mov
loopne
fistp
push
mov
cdq
out
(bad)
aaa
push
(bad)
out
in
push
push
adc
je
and
dec
adc
mov
jle
sti
push
ret
test
mov
ret
mov
ja
mov
stos
cmp
jl
xor
int3
out
mov
shr
add
adc
call
sbb
pop
stc
fwait
mov
outs
int
jmp
aas
cld
out
fbld
jne
cli
mov
cs
inc
cld
jae
aaa
ja
mov
mov
add
aad
mov
dec
out
mov
dec
dec
jg
push
mov
xor
sub
mov
lahf
cmps
and
cs
inc
sti
mov
jge
xor
(bad)
(bad)
mov
(bad)
or
xor
iret
stc
aas
sub
lahf
or
jge
pop
stc
fist
push
inc
and
or
cmp
(bad)
or
in
push
inc
xchg
dec
cld
fdivr
or
or
fstp
lahf
fwait
lods
xor
pop
rcr
mov
mov
fadd
pop
adc
pop
inc
mov
xchg
loopne
or
add
scas
stc
fwait
imul
lahf
push
push
or
mov
(bad)
pop
loopne
dec
mov
(bad)
mov
inc
clc
mov
mov
mov
aas
push
xor
outs
pop
mov
or
mov
out
push
test
dec
mov
xchg
js
lock
xlat
shr
out
jae
pop
pop
js
sbb
pop
cmp
jg
popf
(bad)
jbe
sbb
stc
fwait
sub
call
fisttp
xor
out
aaa
push
inc
mov
push
shl
jmp
mov
fwait
mov
inc
sbb
dec
pop
loopne
lahf
jno
scas
fistp
stc
(bad)
xor
xchg
push
scas
movs
lahf
int
jg
inc
xchg
add
fmul
cmp
push
in
scas
cld
dec
xchg
fld
shl
pop
out
aas
adc
ficomp
add
fild
mov
lods
jbe
cmps
out
jg
jmp
in
iret
mov
push
inc
clc
pop
push
sub
loop
mov
(bad)
mov
inc
fiadd
pop
or
add
mov
repnz
mov
or
dec
repnz
push
or
clc
int
inc
push
repz
adc
(bad)
cli
add
xchg
repz
(bad)
std
inc
inc
jecxz
push
imul
ficomp
pop
std
out
mov
test
aas
sub
stc
xchg
pop
pop
jmp
mov
adc
mov
std
fsubrp
mov
push
push
push
test
or
jmp
std
mov
loopne
pop
outs
cmps
repnz
cld
mov
cmp
in
adc
sahf
sub
jg
loopne
mov
dec
sti
mov
int
inc
push
in
retf
cli
mov
enter
icebp
(bad)
stc
mov
inc
call
pop
repnz
push
sbb
xchg
xchg
mov
repz
mov
(bad)
repz
mov
or
lods
hlt
push
mov
mov
dec
push
inc
push
retf
sub
scas
cld
mov
mov
iret
test
xchg
idiv
hlt
mov
sub
fwait
sub
aas
inc
xchg
cmp
inc
pop
idiv
mov
push
sub
cmp
repnz
shr
sbb
(bad)
jg
neg
pop
push
pop
pop
test
aas
idiv
cmp
xchg
push
xor
jg
mov
or
sub
cmc
jg
mov
jg
jmp
pop
and
aam
ror
call
in
mov
push
stc
fwait
push
aaa
clc
jmp
ins
fnstsw
adc
xor
ret
(bad)
(bad)
jmp
cmps
out
dec
jmp
cdq
out
pushf
lock
jmp
mov
xor
xor
sti
jg
mov
shl
hlt
retf
jmp
jmp
aas
xor
(bad)
fdivrp
xchg
jmp
mov
xor
inc
cld
jg
mov
stos
sahf
cmp
sahf
fistp
push
fistp
pop
jle
mov
cmp
mov
jne
adc
add
inc
std
call
std
aaa
(bad)
cmp
mov
sar
cmp
ss
pop
clc
call
call
mov
out
fistp
retf
sbb
repnz
push
cmp
(bad)
mov
loope
inc
jmp
(bad)
in
std
out
inc
adc
shl
push
mov
pop
push
aas
idiv
out
pop
(bad)
jmp
mov
add
(bad)
jmp
push
mov
les
out
push
fs
cmps
ret
jns
arpl
das
cs
add
inc
cs
mov
cld
push
sti
test
int
call
ja
call
repz
test
call
ja
sbb
nop
mov
mov
jmp
jg
mov
movs
loop
lea
neg
sub
es
loop
xchg
mov
stc
dec
inc
xchg
test
cmp
repz
retf
xor
dec
out
aaa
call
ins
pop
mov
popa
fmul
cmps
cwde
cmp
inc
jb
xchg
int3
(bad)
(bad)
push
loop
fcomp
nop
cmp
rcl
xor
jecxz
jnp
daa
pop
cmp
sbb
(bad)
scas
data16
(bad)
call
(bad)
in
fwait
imul
icebp
aas
cmp
xchg
mov
jg
ins
sar
adc
push
mov
call
jg
in
mov
movs
enter
stos
out
mov
jnp
jge
mov
fistp
mov
mov
jmp
seta
and
xchg
mov
jg
outs
jmp
mov
dec
pop
mov
pop
add
loopne
pop
imul
xor
xchg
mov
xchg
cmp
mov
cmp
frndint
and
mov
mov
add
mov
push
adc
jg
or
xchg
dec
pop
push
in
movs
xchg
xchg
jle
cmp
jne
jp
(bad)
(bad)
outs
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
pop
movs
hlt
hlt
mov
fnstsw
jle
loop
inc
imul
inc
cdq
xor
fild
repz
aas
mov
dec
call
sahf
push
adc
cmp
(bad)
sar
dec
jmp
sbb
(bad)
fmul
inc
mov
test
aam
fist
nop
cmp
(bad)
(bad)
mov
scas
in
and
inc
bswap
jno
adc
push
repz
in
xor
push
jo
in
aaa
xor
dec
cld
jo
push
jl
sbb
push
fs
(bad)
fisttp
sar
movs
pop
test
daa
xchg
cmp
lahf
xchg
pop
lds
inc
(bad)
jg
dec
out
pop
mov
jno
jmp
data16
int
outs
mov
xchg
sahf
mov
(bad)
ss
mov
stc
test
ret
sub
aaa
clc
jmp
xor
dec
cmps
(bad)
mov
sahf
lock
ficomp
lods
add
cli
push
repz
push
stc
and
xchg
mov
dec
(bad)
dec
push
hlt
aas
js
xor
repz
mov
cmc
xor
mov
pusha
or
sub
jp
dec
cmp
add
mov
out
ror
pushf
cmp
cmp
mov
xchg
bound
cmp
rcl
lock
push
mov
cdq
cmp
sub
aad
mov
xchg
inc
jge
or
repz
cdq
mov
xor
mov
cmps
sub
jbe
stc
jecxz
pop
ror
(bad)
(bad)
dec
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
sub
(bad)
(bad)
inc
ficomp
setb
movs
push
ds
mov
push
mov
inc
outs
xchg
sbb
cmp
(bad)
xchg
aam
(bad)
out
call
xchg
cmp
dec
fld
stos
inc
inc
add
mov
pop
mov
leave
push
mov
xchg
sbb
cmp
and
out
xor
cmps
push
or
cld
(bad)
fdiv
loope
idiv
inc
ficom
inc
loop
push
cmp
mov
jle
mov
and
int3
xor
inc
xor
cld
jmp
js
and
(bad)
xor
xchg
mov
mov
push
xor
test
jg
sahf
mov
xor
fwait
(bad)
fistp
fimul
jne
rcr
or
addr16
mov
das
sbb
mov
stos
mov
jg
(bad)
cmp
cmp
push
stc
jge
test
and
je
in
call
int
(bad)
aas
cdq
jp
xchg
add
fldcw
aaa
mov
jmp
shr
push
pop
and
pop
fimul
cmp
cld
jmp
add
mov
add
jae
mov
ja
test
jg
call
ror
cmp
dec
iret
ss
jns
mov
(bad)
(bad)
(bad)
cmp
sbb
push
daa
add
aas
sub
xchg
mov
mov
stc
dec
call
(bad)
and
inc
sti
int
mov
in
xchg
inc
fldcw
aaa
(bad)
mov
clc
(bad)
lahf
mov
(bad)
mov
mov
repz
cmp
mov
out
in
es
xchg
jmp
mov
xor
stos
jecxz
xor
mov
mov
icebp
fisubr
mov
(bad)
call
in
aaa
(bad)
stc
aas
and
in
int
aaa
aaa
push
mov
pop
addr16
stc
push
enter
cmp
movs
xchg
jl
jbe
push
dec
ficomp
test
jl
jg
int
sbb
mov
xchg
mov
lock
fwait
hlt
outs
mov
jl
cmp
sbb
pop
outs
dec
out
jl
(bad)
js
and
cmp
in
jnp
or
aad
pop
dec
pop
mov
stc
(bad)
in
in
fwait
xor
stos
fdivr
xor
mov
push
loope
(bad)
fld
out
aaa
call
adc
retf
fwait
cmp
std
jns
imul
std
test
jp
sar
out
xor
(bad)
mov
lahf
(bad)
(bad)
call
xor
mov
lea
pop
push
sti
aas
and
or
mov
jg
dec
mov
test
pop
and
pop
in
jb
ds
mov
fwait
push
mov
jbe
cmp
mov
mov
jmp
jg
sub
cld
sahf
mov
push
int3
test
cmp
xlat
pop
out
mov
jb
imul
std
pushf
push
test
sbb
aas
fstp
fiadd
adc
stos
inc
call
mov
dec
rcl
icebp
lods
cmp
dec
xchg
cmp
out
(bad)
jg
push
xchg
ins
pop
dec
mov
nop
out
fsub
mov
dec
jmp
dec
add
cli
ret
pop
push
or
jb
adc
(bad)
jl
pop
dec
push
mov
sub
jp
inc
aaa
fidivr
das
push
ja
popf
jno
dec
popf
mov
xchg
aaa
pop
xlat
add
ds
or
jecxz
push
(bad)
mov
mov
push
xchg
mov
out
xor
pushf
cmp
mov
(bad)
jmp
repz
ret
js
ficom
xor
dec
int
scas
cli
fwait
movs
sub
(bad)
push
adc
and
dec
jle
mov
cs
push
(bad)
int3
test
cmp
dec
(bad)
sti
push
jp
out
aaa
loope
or
and
xchg
cmp
nop
movs
mov
pushf
pop
mov
push
(bad)
mov
lods
adc
pop
(bad)
(bad)
jg
popa
out
sbb
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
int
outs
(bad)
cmp
inc
outs
pop
jbe
mov
cdq
cmp
mov
or
mov
rcl
mov
sahf
add
repz
dec
xchg
jno
sub
shr
cmc
aaa
out
gs
je
bound
mov
maxps
fldenv
pop
das
(bad)
jg
inc
mov
jg
push
aas
mov
imul
cmp
dec
rol
mov
cmp
cs
xchg
dec
or
add
movs
fsubr
and
and
adc
clc
push
call
fsub
jno
or
dec
and
div
inc
or
sbb
xchg
std
jbe
lsl
add
jo
adc
or
icebp
dec
in
repnz
enter
dec
rcl
ret
mov
ret
jle
add
or
add
xor
popa
scas
pop
jg
pop
ds
push
out
adc
in
inc
xchg
add
dec
into
add
and
jo
(bad)
inc
jb
push
inc
push
fs
mov
pop
clc
inc
scas
sub
out
sub
dec
in
adc
loopne
dec
cmp
xor
adc
shl
xor
pop
inc
adc
inc
mov
cs
bound
mov
push
nop
push
mov
movs
loopne
cwde
dec
add
mov
lahf
iret
test
cmp
loopne
in
jb
cmp
add
sub
and
mov
ficomp
xor
into
test
shl
js
test
sbb
adc
push
mov
xchg
test
test
lahf
ins
mov
data16
jns
add
shl
rol
in
mov
pushf
fcom
xchg
xchg
dec
jns
daa
nop
rcr
jns
push
cmp
adc
jae
push
in
mov
add
mov
fwait
inc
enter
(bad)
mov
(bad)
mov
jb
mov
mov
mov
dec
daa
es
cmp
push
fs
(bad)
dec
cs
inc
clc
es
movs
cdq
inc
pop
repnz
mov
add
and
lock
cmp
cld
cmps
and
cmp
sub
push
xchg
jnp
push
add
pop
ror
and
in
sub
jl
ins
xchg
xchg
mov
int3
test
adc
add
push
add
jl
movs
lea
jl
push
adc
imul
or
push
sbb
push
pop
aas
(bad)
bound
(bad)
addr16
mov
mov
jl
jge
sahf
lods
in
add
cwde
inc
enter
outs
and
das
fadd
jge
cmp
mov
aaa
mov
(bad)
mov
out
inc
(bad)
pusha
push
mov
test
dec
xlat
add
mov
cmps
add
imul
add
pop
dec
fiadd
(bad)
call
mov
jmp
sti
xchg
out
daa
scas
or
in
jle
push
and
push
and
out
push
movs
fdivr
dec
sub
adc
fcom
mov
or
xor
pop
(bad)
xchg
or
mov
mov
cmps
mov
fidivr
lock
aaa
aam
or
fsub
pushf
cmp
cmps
or
repz
add
lock
adc
pop
nop
into
jnp
jae
or
push
inc
outs
sub
mov
in
fadd
or
xchg
sbb
add
sbb
scas
add
xchg
mov
fild
xchg
pop
and
add
jns
sub
adc
pop
adc
xlat
add
adc
xchg
sbb
popf
nop
inc
adc
jg
add
aad
adc
outs
shr
daa
sbb
clc
or
lds
pop
mov
sub
leave
rcr
push
inc
add
lods
in
or
mov
pop
idiv
mov
sub
outs
dec
scas
pop
enter
fsubr
(bad)
je
lds
ds
and
xor
inc
mov
dec
mov
lahf
outs
jbe
dec
lods
test
or
je
out
sahf
enter
aas
jae
dec
mov
mov
daa
test
adc
and
cmp
test
push
test
test
push
nop
or
adc
out
test
mov
cs
in
inc
push
(bad)
call
inc
dec
adc
test
data16
add
pop
enter
aaa
call
in
test
fadd
(bad)
aam
js
jo
xchg
test
xchg
clc
add
in
pop
xchg
mov
and
adc
mov
and
inc
mov
nop
(bad)
mov
js
rcr
es
(bad)
imul
outs
les
jo
test
clc
mov
cmp
xchg
cmp
or
ss
add
add
or
cmps
mov
pop
adc
lods
out
sub
push
loop
(bad)
ins
inc
ret
cmps
jle
xchg
or
out
mov
and
add
mov
jbe
fimul
inc
push
mov
call
(bad)
sub
(bad)
in
add
jnp
aas
(bad)
aam
or
pop
enter
sub
xor
mov
(bad)
aas
(bad)
addr16
fistp
mov
push
adc
jnp
xchg
push
fsub
push
pusha
xadd
add
shl
mov
clc
xor
adc
or
dec
mov
dec
jg
cmp
les
xchg
add
mov
cdq
pusha
call
fs
ror
add
pop
xlat
daa
cmp
adc
mov
push
je
scas
adc
repz
cmp
xchg
push
ins
mov
lods
inc
pushf
mov
and
das
push
ins
xchg
test
mov
aad
push
xchg
outs
in
rol
fcom
cmp
fwait
adc
ror
fcmovu
inc
aas
(bad)
addr16
ja
shl
adc
mov
mov
mov
outs
mov
(bad)
jbe
or
ins
pop
hlt
addr16
add
in
inc
es
lea
inc
(bad)
lea
out
mov
ins
push
push
sbb
mov
or
xchg
xor
add
ret
xchg
mov
cmps
jbe
push
cmps
bound
in
mov
mov
outs
inc
push
xor
xor
mov
sub
nop
test
addr16
(bad)
ins
imul
pop
pop
dec
nop
or
mov
add
es
sbb
daa
pop
(bad)
dec
push
test
sbb
sub
sahf
je
lods
dec
shr
daa
addr16
pop
cmp
pushf
mov
push
mov
xlat
daa
cmp
mov
push
xchg
xchg
push
mov
xchg
rcl
fsub
ja
pop
dec
leave
repz
add
jmp
ds
inc
push
push
pop
xchg
xor
ja
xor
pop
push
mov
fs
lds
xchg
push
(bad)
jle
push
pop
push
aas
add
repnz
sbb
add
in
popa
and
dec
adc
out
ins
cmp
dec
(bad)
aas
dec
mov
xchg
ja
add
inc
inc
repz
(bad)
dec
shr
das
xchg
and
xchg
push
mov
das
xchg
nop
xchg
lods
push
nop
and
shl
je
das
jg
inc
lods
in
cmps
cmp
fs
lods
addr16
pushf
inc
push
mov
enter
out
xchg
fadd
hlt
cmps
(bad)
xchg
add
mov
imul
cmp
and
jg
adc
cmp
(bad)
jo
xor
jo
mov
mov
daa
(bad)
xchg
in
pop
and
or
mov
ret
pusha
sbb
daa
pop
xchg
jo
xchg
int3
test
or
jb
js
loopne
test
(bad)
loopne
leave
out
xchg
in
sbb
cmp
enter
add
fdiv
dec
jo
xchg
sbb
ja
sbb
inc
push
mov
lahf
mov
mov
add
push
lods
fcom
inc
fimul
adc
jle
and
in
mov
xchg
add
add
add
enter
in
sbb
ins
pop
outs
and
push
je
in
xchg
movs
jle
inc
mov
and
test
add
add
enter
call
adc
inc
iret
neg
outs
cwde
pop
push
call
in
mov
lods
nop
cmp
fcomp
mov
or
mov
adc
dec
ror
out
xor
dec
add
sub
jo
sub
cmp
mov
pop
inc
cdq
pop
xchg
add
cdq
and
add
dec
inc
sub
cdq
fadd
call
iret
outs
add
add
out
adc
cmp
dec
(bad)
arpl
pop
cwde
dec
inc
push
jnp
call
nop
adc
xlat
fld
dec
ins
daa
das
call
adc
fwait
jl
jb
jp
pusha
inc
sub
retf
inc
out
add
fs
pushf
jp
mov
and
and
fwait
loopne
out
test
test
pushf
dec
sbb
jns
les
push
dec
daa
(bad)
popf
sub
add
lock
xor
xchg
mov
pushf
xor
aas
cmp
lods
in
das
pushf
je
add
fcmovbe
sub
add
leave
or
sub
aam
in
in
sbb
aas
das
scas
jbe
dec
call
and
mov
popf
sbb
push
es
jbe
outs
daa
das
repnz
sahf
push
jo
inc
push
popf
ror
xchg
fcomp
leave
sub
das
pop
in
inc
cmp
call
jle
push
pop
mov
dec
ret
push
(bad)
cld
rcr
dec
es
ret
push
(bad)
daa
xlat
sahf
clc
xchg
pushf
loope
push
lahf
aam
xlat
mov
cmps
nop
sub
jo
dec
sub
push
je
fs
dec
pop
(bad)
into
or
sbb
or
popa
rol
xlat
cmp
mov
out
test
sub
shl
xlat
mov
mov
mov
in
cwde
into
mov
and
inc
sahf
pop
enter
clc
nop
add
daa
sbb
or
xlat
mov
and
add
scas
pop
and
call
and
int3
dec
pop
sub
iret
in
sub
add
add
lods
fs
addr16
lock
aas
lods
jl
dec
push
loope
sub
mov
mov
outs
xchg
xchg
out
sahf
mov
nop
or
mov
cs
hlt
push
mov
or
rol
data16
jmp
imul
in
ror
repnz
mov
xor
and
test
je
(bad)
cs
dec
ror
movs
and
or
dec
es
add
jnp
jns
pop
movs
xor
dec
lods
scas
movs
push
xor
rcl
dec
fistp
xlat
stos
movs
adc
sub
daa
fadd
mov
pusha
out
xchg
cwde
fmul
in
push
xchg
or
mov
cdq
add
aam
nop
adc
jno
outs
and
dec
js
mov
cwde
pop
or
mov
inc
loopne
(bad)
aam
cwde
pop
test
inc
xchg
les
outs
cmps
adc
in
lds
cs
cs
nop
adc
pop
ins
mov
clc
pop
jae
iret
or
cmp
mov
(bad)
sar
fimul
jns
pop
hlt
cmps
add
adc
pop
hlt
and
outs
inc
xchg
push
pop
mov
cmps
inc
mov
mov
inc
mov
fsub
xchg
out
call
nop
or
call
mov
inc
xchg
call
outs
xchg
ror
sbb
jb
xor
fdiv
mov
pop
data16
or
fisub
pop
test
pop
jl
mov
in
jl
push
daa
mov
pushf
lods
xchg
in
fadd
aam
xor
pop
mov
call
je
sbb
sub
pushf
pusha
popa
iret
cmp
sbb
test
daa
mov
dec
js
add
test
sar
ror
cdq
pusha
arpl
(bad)
mov
pop
xor
cmp
stos
adc
repz
cmp
push
(bad)
out
aad
mov
aaa
test
pop
inc
inc
jbe
add
push
iret
call
icebp
dec
stos
add
fbstp
jo
pusha
(bad)
jbe
dec
sbb
lahf
adc
out
dec
int3
pop
fmul
or
push
lods
mov
inc
lock
push
adc
xchg
jle
add
and
xchg
outs
lods
inc
jle
fist
xor
xchg
pop
ret
jo
bts
pop
xchg
cmp
movs
aas
daa
lock
jmp
push
sub
(bad)
lods
daa
dec
jecxz
aam
lods
jmp
jns
dec
test
ins
fs
add
js
and
push
out
jmp
fcomp
int3
aas
(bad)
mov
popf
nop
out
cld
scas
or
adc
mov
jmp
not
out
mov
arpl
je
cmp
jl
or
aam
mov
lahf
aad
inc
mov
scas
int3
push
fcom
push
pop
enter
scas
or
daa
xor
push
sub
aad
enter
ja
inc
pop
and
repnz
push
test
test
pop
enter
pop
add
pop
jb
js
sub
repz
mov
push
sbb
ucomiss
push
add
or
jbe
sahf
pop
ins
ins
and
lahf
int
nop
out
pop
pushf
lods
push
mov
sahf
or
lahf
pushf
ins
jo
pop
sub
xchg
cld
add
add
or
jmp
movs
mov
add
pop
(bad)
or
or
adc
push
mov
mov
js
or
cmps
shr
pusha
dec
call
sub
xor
out
mov
stc
cmp
repz
xchg
retf
sti
push
arpl
jns
cmps
jo
shl
fs
repz
inc
jo
shl
sbb
push
jo
enter
jns
jns
pushw
mov
cmp
and
mov
jns
push
and
iret
repz
js
fild
push
repz
cs
inc
push
out
call
ins
out
sahf
ja
push
imul
int
ins
xchg
mov
(bad)
cmp
mov
push
dec
repz
pop
mov
ret
sahf
cmps
stc
cmp
sbb
js
ds
repz
sbb
loopne
jae
repz
ds
and
push
out
sahf
out
out
fld
jbe
push
pusha
cdq
sar
repz
and
mov
mov
mov
stc
cmp
out
call
xchg
sahf
out
cmp
lock
cwde
cmp
out
enter
push
repz
jge
xchg
int3
repz
out
xor
mov
out
and
push
mov
sub
xor
out
mov
clc
xor
iret
pause
rcr
and
lahf
out
loope
add
stc
cmp
and
jns
int
test
xchg
enter
fisttp
xchg
jno
rol
mov
cmp
shl
inc
jno
mov
icebp
and
repz
fcomp
mov
rcl
lahf
out
call
mov
mov
or
xor
mov
int
jns
jmp
jns
iret
repz
mov
cmp
out
sbb
jns
iret
(bad)
cmp
repz
sub
dec
repz
pop
test
pushf
repz
repz
clc
sub
jns
iret
enter
xchg
cmp
out
or
call
out
fwait
xor
push
jns
jge
cwde
fstp
popf
into
push
mov
repz
repz
out
lahf
xchg
clc
sub
outs
test
shr
sahf
cmps
stc
sbb
mov
cdq
jmp
mov
cmp
out
or
out
iret
sti
sub
call
repz
cmp
mov
pop
int
add
iret
mov
sahf
push
stos
call
out
jbe
loopne
scas
dec
idiv
iret
repz
std
xor
idiv
push
dec
push
mov
cmp
out
add
sahf
out
mov
nop
loopne
mov
out
ds
cdq
jecxz
mov
push
imul
sbb
cmp
repz
mov
mov
push
mov
repz
call
cmp
out
mov
mov
jo
ret
adc
jae
cmp
out
mul
out
out
repz
loopne
lds
(bad)
sar
(bad)
ss
mov
jns
sti
and
out
add
push
sub
push
retf
sbb
int
jns
int3
pusha
retf
clc
inc
int
lahf
cmps
stc
cmp
xor
test
sbb
sar
xchg
push
mov
outs
rol
sar
or
js
and
pop
repz
iret
mov
xor
repz
dec
out
sub
pop
fwait
push
(bad)
out
call
std
lahf
idiv
int
fdivr
jmp
(bad)
fcom
cmps
stc
cmp
adc
loopne
out
ds
loop
and
pop
mov
ja
repnz
in
push
lock
pusha
iret
repz
push
mov
jge
out
sbb
pushw
mov
cmp
data16
fldl2e
dec
jmp
loopne
sahf
cmps
stc
cmp
xchg
lahf
out
rcr
cwde
ins
out
xlat
stc
sahf
cmps
stc
adc
dec
js
push
xor
jl
jns
push
sar
bnd
and
jge
out
iret
or
cmp
xor
ds
sbb
push
or
xor
out
push
mov
sbb
xor
out
fdivr
cli
mov
shr
xchg
push
(bad)
mov
scas
sbb
(bad)
jmp
pop
xchg
push
cmps
fnstcw
jo
add
add
call
fsubr
sahf
out
dec
scas
jb
push
push
add
out
and
or
call
movs
int
nop
push
ret
jl
mov
scas
adc
addr16
ja
mov
cmp
sbb
fild
pop
or
jo
add
adc
xchg
imul
xchg
and
add
and
mov
cmp
dec
mov
daa
(bad)
ror
pop
and
nop
outs
ds
daa
aam
xchg
or
xchg
pop
int3
ss
push
jge
dec
mov
jg
and
or
in
push
test
ret
mov
getsec
iret
pop
(bad)
or
cdq
pop
sbb
aas
(bad)
nop
adc
nop
add
xor
inc
jg
adc
aas
adc
outs
pop
ror
ror
or
ins
push
jno
ror
and
(bad)
fimul
sub
jg
pop
adc
or
cmp
jbe
push
in
dec
dec
xor
xor
fist
leave
and
mov
adc
imul
jb
adc
lods
xor
xchg
ins
cmp
adc
jbe
rcr
rol
dec
sbb
cmc
ret
ret
and
bswap
dec
add
ja
test
mov
fsub
movs
daa
jmp
mov
les
push
aad
fld
push
inc
dec
aas
fadd
popf
cmp
femms
rcl
inc
push
add
nop
push
dec
dec
retf
lahf
into
out
popf
push
push
push
inc
jb
aas
in
mov
arpl
dec
xor
push
lock
sahf
fcomip
test
mov
inc
iret
dec
outs
(bad)
and
lea
push
cld
es
add
and
loopne
mov
fisttp
test
in
and
call
sbb
ret
enter
daa
or
jbe
cmp
inc
jo
out
or
inc
pop
mov
aam
or
outs
movs
scas
in
fidiv
loopne
jbe
in
daa
push
or
daa
sub
sbb
fs
daa
in
ret
xor
push
dec
out
scas
test
addr16
or
pushf
add
test
jg
push
test
ret
mov
push
mov
xor
enter
ret
clc
outs
les
in
in
or
xor
add
add
dec
pop
sub
mov
jmp
sub
in
xchg
xchg
loopne
aam
leave
imul
add
pop
leave
and
push
leave
pop
(bad)
push
test
jmp
add
mov
lock
mov
cld
jb
pushf
in
(bad)
sub
push
mov
sub
rol
dec
bound
scas
add
xchg
(bad)
mov
pop
adc
add
and
push
mov
push
sub
ss
pop
pop
add
pusha
(bad)
test
and
xchg
cwde
mov
pushf
test
xchg
adc
enter
inc
rcl
mov
jb
sub
push
ds
dec
jl
ret
dec
enter
(bad)
jecxz
popf
in
enter
daa
lock
leave
sub
adc
jbe
leave
sub
dec
scas
div
jo
pop
add
cwde
addr16
and
outs
cs
lock
sub
lods
(bad)
in
and
dec
add
push
pop
enter
cmp
sub
mov
pusha
push
and
jb
xchg
ror
push
jb
add
sbb
inc
test
mov
scas
push
shl
push
pop
shl
jl
jecxz
cld
in
jb
jae
adc
push
int3
push
int3
inc
fs
jnp
inc
aaa
push
push
cwde
addr16
jl
mov
inc
push
push
rcl
cld
pop
and
cmp
int
push
xchg
pop
and
push
add
lods
lea
iret
push
call
jecxz
test
push
mov
pushf
sub
daa
xor
in
adc
into
ins
leave
and
cwde
push
leave
and
pop
rcr
push
call
and
jb
adc
sbb
and
mov
xchg
and
movs
cmp
gs
add
inc
mov
movs
mov
shl
and
sbb
cld
outs
pop
adc
mov
sbb
sub
cs
jo
push
bound
mov
mov
call
inc
ficomp
ror
outs
das
rcl
xor
fldenv
mov
mov
xchg
pushf
or
imul
shl
in
pop
pusha
dec
sbb
rcr
nop
jb
inc
jb
shl
inc
aaa
data16
add
jb
sbb
xlat
mov
cs
rol
push
mov
daa
pop
rcr
mov
cmp
mov
pop
add
cmp
out
or
inc
mov
lock
xchg
daa
mov
or
add
adc
pusha
out
pop
dec
mov
pop
mov
mov
push
mov
lock
and
aad
xchg
push
push
and
jle
mov
and
mov
xchg
mov
or
jno
mov
mov
aas
pop
push
mov
daa
pop
(bad)
(bad)
daa
sbb
aad
mov
add
pop
push
cmp
xchg
stos
loopne
inc
pop
cwde
or
daa
mov
xchg
cmp
xchg
adc
pop
pop
xlat
add
dec
fisub
xchg
cwde
stc
push
sub
ins
and
shr
movaps
les
and
cmp
cmp
push
mov
xchg
add
sbb
add
aaa
fsub
and
dec
pop
loopne
fdivr
mov
mov
inc
mov
xor
imul
iret
stc
push
sub
fldcw
iret
push
pusha
xchg
pop
jb
popa
adc
pop
popa
dec
mov
pop
jo
in
mov
ficomp
ror
mov
fcomp
inc
mov
mov
bound
pop
mov
push
bound
imul
nop
cwde
addr16
dec
dec
mov
les
rol
lock
cs
lea
or
adc
inc
repnz
dec
nop
pushf
xchg
inc
cmovs
jo
xchg
in
and
fcmovnu
fcmovnb
daa
xchg
pop
loop
in
mov
mov
cmp
xor
and
inc
xlat
loope
add
addr16
sti
push
mov
addr16
mov
push
add
and
mov
add
xchg
pop
nop
cmp
cmps
in
in
rol
popa
fld
(bad)
nop
pop
mov
mov
gs
xchg
xchg
(bad)
daa
daa
pcmpgtw
imul
cmp
xchg
out
ficomp
mov
(bad)
leave
dec
mov
bswap
add
and
sub
or
dec
inc
ins
push
pusha
ficomp
(bad)
push
dec
dec
and
pop
lods
fwait
inc
dec
dec
jb
pop
fistp
push
sbb
xchg
fbld
jg
inc
dec
(bad)
daa
mov
scas
aam
hlt
xchg
or
icebp
iret
cmp
add
add
xchg
cmp
dec
loopne
daa
pop
jg
cmps
in
cmp
movs
cmp
aam
loopne
daa
mov
addr16
or
loopne
dec
addr16
and
push
jnp
xchg
xchg
add
add
add
aad
cs
sbb
emms
mov
je
adc
sbb
popa
xchg
pop
test
dec
daa
pop
leave
and
mov
and
adc
mov
(bad)
xchg
push
outs
daa
cmp
daa
test
sbb
ror
imul
sub
pop
push
jecxz
loopne
cmp
dec
push
leave
sub
leave
push
cmp
push
data16
add
xchg
outs
sbb
and
dec
dec
call
and
push
push
push
leave
inc
cmp
push
in
xchg
jb
leave
or
push
test
leave
inc
pop
jmp
cmp
push
pop
imul
and
sub
add
mov
repnz
iret
or
push
cmp
jbe
pop
pusha
punpckhbw
pop
pop
mov
push
cwde
and
jbe
mov
sub
nop
es
fistp
mov
xor
movs
retf
sbb
out
(bad)
adc
aaa
out
in
adc
ins
xchg
sub
mov
rcl
in
or
mov
cmp
pop
out
out
daa
xchg
pushf
test
jmp
pop
xor
add
pushf
test
add
cmp
adc
(bad)
call
out
daa
adc
xchg
rol
call
xchg
call
mov
dec
and
shl
enter
aas
rol
adc
sbb
addr16
jo
xchg
push
pop
xlat
outs
or
nop
xchg
arpl
jmp
shr
jbe
xchg
jl
stos
adc
daa
pushf
pusha
pop
in
in
loopne
or
outs
daa
cmp
jmp
leave
add
and
test
and
addr16
outs
inc
ror
outs
ja
in
leave
leave
mov
ret
add
into
add
sbb
jb
add
add
in
pop
jmp
jo
dec
inc
jno
je
jo
pop
xchg
pushf
xchg
sidtd
and
add
mov
or
add
in
add
push
sti
in
inc
in
sub
outs
mov
adc
call
mov
ja
jno
cvtps2pd
(bad)
jb
mov
and
leave
leave
or
in
mov
in
fs
jmp
lock
add
and
wbinvd
add
out
lds
shr
pushf
push
daa
loopne
jb
js
popf
pushf
push
pop
(bad)
xchg
add
shl
aas
sbb
out
sbb
push
fild
jno
lods
mov
mov
sbb
daa
mov
scas
movs
jb
mov
outs
clc
add
inc
jb
call
pushf
xchg
adc
push
out
pop
out
inc
dec
and
inc
mov
leave
xchg
pushf
xlat
dec
mov
jb
xor
popa
xchg
pushf
xchg
test
sbb
daa
inc
jb
xchg
out
ret
movs
shr
and
popa
enter
leave
mov
in
and
icebp
and
adc
xor
mov
repnz
ror
jnp
or
je
add
adc
dec
aaa
or
pushf
je
shl
fadd
outs
pusha
out
jne
and
pushf
jb
add
xchg
push
scas
pop
mov
mov
fmul
out
hlt
or
add
adc
pop
and
xor
sbb
jb
aas
adc
pop
adc
fisttp
mov
mov
jbe
pop
mov
fistp
enter
ficomp
repnz
inc
lods
inc
push
jbe
xchg
pop
nop
add
sub
repz
pop
ja
add
leave
pop
push
cmp
pushf
mov
jb
data16
shl
sbb
fucompp
jg
add
lock
xor
mov
leave
sub
fcom
je
pop
daa
daa
nop
mov
mov
pop
jb
aam
in
xor
nop
add
cwde
cmp
test
cmc
cmp
sbb
and
out
iret
std
sbb
cmp
xchg
cmc
test
movs
aas
xchg
pushf
inc
cs
sub
fdiv
dec
leave
mov
dec
mov
scas
pop
daa
xchg
pop
leave
mov
movs
xchg
mov
nop
adc
lods
mov
pushf
xchg
mov
add
in
daa
adc
repnz
add
add
jbe
pop
test
jb
mov
movs
push
jb
imul
adc
in
not
clc
mov
nop
adc
clc
dec
in
fisttp
xor
pop
mov
or
push
test
repnz
(bad)
jns
mov
sbb
lahf
cmp
sub
mov
stc
sub
sbb
and
sbb
fistp
in
and
je
add
mov
dec
push
dec
add
sbb
dec
inc
pop
pusha
xchg
add
loopne
jp
vmsave
dec
dec
leave
ss
xor
sbb
xor
mov
jp
enter
cli
js
jnp
cs
les
mov
add
(bad)
mov
not
cmp
leave
push
or
sti
cmp
jo
sti
je
xchg
cmps
jnp
cvtps2pi
jbe
addr16
push
loopne
and
pop
(bad)
add
inc
mov
sub
jb
leave
jo
pusha
inc
jb
leave
mov
or
(bad)
enter
mov
mov
sub
add
dec
add
xchg
and
add
or
mov
mov
cmp
stc
cmp
fistp
or
je
dec
push
xor
mov
inc
mov
or
push
mov
xchg
pop
call
inc
or
xchg
cmp
fs
in
fcmovnu
add
loopne
call
sbb
fidivr
push
push
add
mov
push
pop
loopne
jno
adc
lock
enter
jg
jg
xor
call
mov
nop
cwde
movq
sub
outs
ja
addr16
and
add
out
dec
jb
(bad)
call
daa
hlt
pop
jb
sub
or
sub
dec
or
pusha
pop
push
leave
inc
mov
mov
cmp
mov
add
xor
cs
mov
leave
add
add
push
inc
cmovs
enter
out
pusha
xchg
jg
mov
add
daa
adc
aaa
sbb
in
xchg
and
xchg
outs
(bad)
and
iret
aam
or
nop
test
push
and
adc
and
and
and
inc
lods
mov
adc
daa
call
push
sbb
mov
(bad)
xor
add
push
push
shl
test
leave
inc
cmps
test
add
jo
mov
aaa
add
xchg
mov
je
pop
jb
push
mov
nop
int3
push
xor
add
jg
leave
xchg
adc
sbb
leave
inc
cmp
pop
xchg
retf
dec
add
xchg
pop
add
push
xchg
leave
sub
add
loop
add
cmp
jmp
xchg
push
mov
sbb
jb
shl
xchg
xchg
push
je
mov
jb
xchg
mov
iret
xchg
pop
fadd
leave
inc
nop
pop
sbb
push
jo
rol
dec
ja
cmc
std
ja
jo
fst
cmp
lods
dec
pushf
pop
and
jnp
cmp
push
dec
add
or
mov
mov
pop
loopne
adc
pop
adc
or
dec
daa
lock
pushf
dec
scas
push
je
xor
mov
add
enter
add
fs
add
xchg
xchg
out
ret
out
or
mov
enter
or
push
add
add
cmp
cmp
add
jg
jmp
or
je
xchg
or
push
shl
pop
rcr
or
xchg
adc
sbb
mov
es
dec
sub
jo
js
cmp
mov
mov
add
add
add
out
repnz
fs
xchg
or
or
xor
push
or
pop
lds
mov
pop
or
(bad)
cwde
adc
and
(bad)
movs
mov
add
and
adc
retf
or
lea
mov
add
push
or
in
in
or
xlat
xchg
ror
pop
and
pop
(bad)
or
scas
mov
or
(bad)
and
inc
shr
(bad)
mov
jb
test
ja
xchg
mov
(bad)
rcr
jb
(bad)
push
add
xor
jb
pop
data16
jb
add
in
mov
ret
mov
in
shl
push
enter
inc
nop
and
inc
dec
jo
push
daa
nop
pop
nop
arpl
loop
mov
jbe
mov
dec
add
dec
(bad)
subps
mov
ror
fsub
add
out
add
pop
xchg
add
repnz
xor
push
jo
out
adc
ja
in
scas
xchg
xchg
push
xchg
add
cmps
pop
scas
das
mov
add
xchg
pop
push
leave
mov
adc
and
dec
jg
or
lea
pop
xchg
mov
xchg
mov
daa
sub
(bad)
lock
in
fldenv
xchg
push
add
adc
sbb
xor
cmp
add
or
cmp
(bad)
xchg
mov
fisubr
cmp
shl
dec
outs
xor
lahf
xchg
xchg
scas
(bad)
xchg
test
pop
addr16
iret
nop
cwde
add
mov
push
xchg
shl
movs
daa
xchg
mov
adc
daa
push
xlat
mov
adc
fs
xchg
cmp
jmp
iret
mov
scas
xchg
mov
and
mov
cmps
dec
mov
mov
jo
in
adc
leave
sbb
es
xchg
or
push
xchg
cmp
pop
push
mov
add
ret
push
into
pop
(bad)
out
in
xchg
or
or
inc
mov
pop
or
dec
adc
enter
adc
js
xchg
cmp
adc
adc
sbb
sub
adc
add
fisttp
push
movhps
sbb
inc
dec
leave
pop
xor
mov
sbb
push
js
cwde
out
ret
mov
cwde
pusha
(bad)
ror
cmp
cwde
mov
pop
add
mov
inc
dec
cmp
xchg
cdq
mov
cdq
push
push
add
inc
mov
add
je
jg
in
xchg
push
mov
cwde
or
cmp
or
or
in
push
sti
setp
adc
adc
adc
mov
inc
push
adc
pop
xor
enter
sbb
bnd
scas
mov
loop
and
cwde
call
cmps
(bad)
sbb
stc
push
call
pop
jb
cmp
fwait
push
ror
rcl
add
mov
ja
mov
cmp
hlt
daa
cmp
mov
xor
imul
sbb
mov
popf
adc
sbb
iret
jb
adc
pop
mov
aam
pop
and
jns
test
or
dec
and
pushf
fdivr
mov
or
sub
inc
iret
movs
pop
and
push
iret
push
fsub
sbb
out
leave
dec
in
out
add
lahf
inc
jb
xchg
and
in
inc
lahf
push
arpl
outs
add
enter
add
add
cmp
pop
test
mov
ret
or
xchg
and
or
or
or
std
push
mov
daa
adc
adc
push
adc
in
leave
enter
jnp
das
mov
mov
jb
sbb
sbb
xchg
and
sbb
in
fldz
and
std
and
inc
mov
daa
and
and
in
xchg
and
ins
sub
mov
jb
sub
cs
shr
xor
xor
jb
jmp
stc
xor
mov
xor
cmp
inc
push
sbb
push
jl
scas
xchg
fild
setnp
popf
push
test
shl
push
xchg
pushf
in
mov
xchg
pop
jb
cmp
push
popa
xchg
pop
push
mov
add
daa
movs
and
in
xchg
xor
push
pusha
cdq
adc
movs
sub
mov
in
inc
rol
mov
movs
gs
out
in
in
add
push
xchg
dec
cs
xchg
add
popf
dec
mul
sbb
inc
mov
ror
fadd
pushf
dec
cmps
adc
sbb
leave
mov
and
xchg
daa
push
jnp
and
(bad)
xchg
leave
fcomp
cmps
and
leave
aaa
cdq
push
pop
leave
and
add
adc
enter
and
in
clc
and
shl
and
das
or
push
fadd
sar
test
add
inc
xor
inc
pop
push
jbe
pop
mov
fbld
shl
in
leave
and
push
test
and
push
push
leave
and
movs
repnz
mov
clc
cld
dec
shl
xor
inc
es
pop
and
mov
mov
les
pop
lock
inc
stos
add
mov
outs
stos
xor
ds
and
cmp
push
add
cmp
enter
push
add
or
mov
or
inc
ficomp
lds
daa
mov
and
xor
mov
cmovnp
popa
enter
sbb
cmp
daa
sbb
movs
xchg
mov
out
lods
daa
push
xchg
outs
jb
aas
lods
push
mov
or
inc
aaa
lods
dec
mov
mov
aaa
lods
or
pop
in
mov
sub
jb
push
loopne
sbb
xchg
adc
imul
call
adc
xlat
sub
leave
or
hlt
scas
scas
mov
in
cmp
sub
sti
pmulhuw
in
scas
or
and
cmp
gs
daa
xchg
xchg
or
mov
mov
mov
mov
add
pop
or
push
inc
into
cs
mov
xor
jb
dec
or
dec
xchg
xchg
and
pop
punpckhdq
js
xchg
xchg
pop
mov
inc
mov
mov
daa
and
xlat
and
in
dec
inc
nop
xchg
mov
das
clc
and
mov
push
or
enter
dec
ret
mov
pushf
nop
adc
inc
(bad)
mov
enter
das
in
vpmacsdql
pop
xor
repz
push
or
jae
out
adc
adc
and
pop
sbb
sahf
xchg
cmp
nop
sbb
pop
ds
sub
or
ror
inc
popf
fadd
pop
add
arpl
xchg
push
pop
das
in
jo
jbe
cmp
outs
cdq
push
dec
loope
cmp
test
or
mov
psubb
dec
push
sbb
sub
pop
mov
cmps
jmp
jmp
sbb
mov
add
dec
daa
and
push
bound
ins
js
and
cmp
or
int
pop
inc
jg
or
or
cwde
rol
outs
daa
sbb
mov
jb
cmp
push
fadd
loopne
call
lock
push
mov
pop
or
sbb
inc
adc
sbb
or
cli
push
cmp
iret
or
adc
pop
or
push
daa
sar
inc
push
dec
push
add
popa
movs
cmp
clc
dec
mov
mov
mov
inc
addr16
fmul
dec
mov
js
push
mov
ja
dec
iret
push
dec
add
cmp
push
add
pusha
add
aaa
repnz
jg
or
push
jmp
xor
pop
xchg
nop
pop
into
mov
daa
push
add
jns
pop
ror
push
shr
nop
fidiv
add
add
dec
mov
add
push
aaa
fisttp
ffreep
daa
daa
daa
mov
setnp
daa
daa
(bad)
sar
pop
cmps
xchg
and
mov
xor
mov
sahf
mov
and
mov
add
sahf
int3
packsswb
pop
jns
test
pop
call
fs
movs
or
or
mov
outs
daa
in
adc
adc
das
and
sbb
sub
xor
ins
mov
jns
mov
push
xor
mov
jb
loopne
rdtsc
jb
retf
test
add
or
pop
fisubr
jns
aas
push
xor
outs
push
cmp
pop
pop
scas
pusha
push
pushf
pop
jo
js
pop
mov
mov
daa
and
cwde
jb
enter
or
sahf
mov
mov
rcl
inc
into
sahf
int3
psubusb
adc
pop
push
xchg
daa
and
clc
adc
xchg
sbb
ins
retf
or
(bad)
mov
push
dec
sahf
mov
add
add
mov
mov
mov
in
push
fbstp
dec
xor
mov
fist
pop
sbb
aaa
jb
in
add
xor
add
leave
dec
pop
mov
leave
or
mov
fcmovne
ror
shr
out
and
add
pop
mov
push
or
xchg
mov
push
pop
pop
pusha
add
in
enter
add
sbb
repnz
or
sahf
mov
or
ror
xchg
daa
and
adc
loopne
repnz
lock
mov
popa
repnz
cwde
daa
ins
cmp
push
dec
push
inc
cmp
test
xor
mov
push
sub
cmp
inc
dec
mov
iret
mov
jb
je
ss
jo
pop
jb
js
ins
bnd
jb
mov
rcr
xor
aas
dec
es
sbb
and
sub
xchg
daa
pop
leave
dec
add
mov
fsubr
arpl
xchg
mov
push
xchg
daa
outs
mov
retf
add
popf
mov
ja
aam
jmp
fimul
(bad)
mov
xor
leave
dec
cmp
dec
inc
cmps
pop
mov
in
push
jne
or
push
pushf
sbb
repnz
sub
aaa
add
and
pushf
pop
inc
or
pop
adc
arpl
daa
pop
leave
dec
push
mov
or
mov
popa
leave
xchg
xchg
lock
rol
cmp
test
jbe
cmp
inc
add
dec
add
add
pop
pusha
push
jo
or
fmul
mul
mov
enter
xor
ret
dec
ficomp
push
push
xchg
mov
push
in
je
dec
nop
mov
xchg
mov
inc
cmp
retf
cli
add
add
pop
jb
ret
inc
ret
dec
mov
mov
mov
inc
ret
loopne
psubsb
lock
les
or
adc
sbb
and
sub
and
gs
push
inc
ins
pusha
jnp
lock
(bad)
fst
les
pusha
add
pushf
mov
add
jb
dec
xchg
mov
mov
mov
or
or
in
bound
scas
push
jns
scas
push
and
add
sub
sub
aas
pusha
push
push
adc
fbstp
dec
fimul
mov
popf
mov
outs
ror
enter
into
mov
add
fiadd
push
(bad)
xchg
xchg
daa
out
pop
(bad)
imul
or
mov
dec
inc
ficomp
dec
add
packsswb
pop
outs
jns
test
(bad)
xchg
xchg
xchg
daa
pop
or
movs
push
push
inc
jo
xchg
mov
inc
add
ror
(bad)
push
cmp
inc
mov
add
js
mov
xchg
add
jb
mov
cmp
rol
fadd
mov
(bad)
cmp
enter
inc
dec
xchg
inc
adc
enter
mov
add
repnz
add
sahf
mov
retf
or
call
inc
repz
inc
pop
repnz
leave
push
inc
add
add
add
sahf
outs
add
jp
or
xchg
xchg
or
repnz
push
mov
push
sbb
adc
ss
xchg
and
retf
jbe
retf
ja
mov
retf
js
add
and
add
push
jb
dec
mov
inc
lock
enter
mov
mov
add
add
push
add
daa
and
or
leave
(bad)
or
push
int3
ja
int3
cmp
push
inc
add
add
pop
popa
(bad)
ja
daa
push
leave
dec
or
mov
daa
daa
daa
daa
ret
retf
(bad)
loope
daa
daa
daa
in
hlt
dec
rcl
inc
push
adc
int
cs
add
add
add
xchg
repz
adc
into
xor
loopne
sub
dec
push
into
inc
fs
daa
daa
daa
aaa
dec
into
into
into
into
daa
daa
daa
daa
into
into
into
into
(bad)
inc
nop
daa
mov
or
add
daa
daa
out
add
jb
enter
add
add
jb
add
mov
jbe
mov
or
or
jl
fcomp
cmp
push
or
push
jnp
repnz
inc
add
pop
push
pop
in
pusha
xor
jp
sbb
repnz
nop
or
nop
mov
push
loopne
hlt
shl
call
fidiv
jb
rcl
push
ss
daa
and
add
leave
enter
ins
pop
pop
js
xor
in
or
or
mov
adc
out
dec
dec
mov
sbb
enter
sbb
sbb
sbb
jb
jb
sbb
sbb
jmp
push
pop
xchg
outs
and
mov
pop
lea
jns
add
nop
cmp
daa
dec
in
pop
je
inc
mov
add
xchg
cmp
dec
xchg
and
push
ja
jl
sub
pop
iret
dec
mov
cmp
mov
fcom
leave
and
call
out
aam
ins
cdq
add
jb
enter
add
add
imul
fcmove
or
xchg
and
add
shl
daa
xchg
and
call
xchg
jbe
ins
bswap
push
and
xchg
push
out
jb
cs
pop
jl
cmp
div
out
xchg
add
mov
sahf
mov
add
or
pop
or
es
push
cmp
dec
mov
dec
fidiv
adc
sbb
outs
dec
das
mov
mov
and
loopne
mov
aaa
loopne
xchg
xchg
out
jmp
add
xlat
and
xchg
and
sub
push
je
leave
pusha
imul
mov
ins
outs
mov
add
jb
enter
add
add
jb
cli
or
add
xor
dec
js
fmul
inc
ror
hlt
adc
cmp
dec
jmp
push
ror
sbb
push
(bad)
enter
push
adc
add
add
jb
in
add
sbb
xor
cmp
dec
or
daa
inc
mov
popa
or
or
xchg
and
adc
jno
test
iret
adc
dec
movs
fstp
(bad)
inc
mov
push
neg
push
out
repnz
xchg
and
pop
std
or
or
cmp
enter
push
or
or
xor
aas
cmovp
or
or
adc
enter
adc
sbb
jb
sbb
mov
mov
pop
mov
push
in
imul
add
add
add
add
cmps
push
xchg
xchg
mov
push
mov
xchg
mov
jnp
jns
jb
enter
inc
dec
and
push
and
adc
sbb
xchg
and
fdiv
push
jo
add
pop
and
ja
mov
loopne
daa
adc
fstp
xchg
fst
add
add
sub
call
dec
ficom
push
jo
outs
daa
and
add
nop
pop
cwde
pop
jb
daa
and
or
push
sbb
mov
mov
xchg
(bad)
call
push
iret
(bad)
fiadd
add
or
leave
leave
xchg
add
mov
lods
leave
add
retf
enter
push
lahf
outs
mov
in
push
mov
ja
add
mov
lea
sar
pop
(bad)
(bad)
jl
jb
jmp
fild
pop
and
mov
add
or
and
enter
or
dec
cvtpi2ps
ret
punpcklwd
adc
dec
cwde
dec
ffreep
fild
xchg
rol
add
fdivr
loopne
mov
sub
xchg
dec
sti
shl
jbe
add
cs
cwde
popf
pushf
pop
and
stos
mov
xchg
pop
mov
iret
loopne
(bad)
fidiv
jb
pop
loope
push
and
adc
pusha
push
pop
in
push
push
jmp
and
leave
test
loop
sbb
loop
enter
inc
add
add
cmp
pop
pusha
or
jo
add
cmps
inc
js
lods
out
loopne
imul
add
add
shr
out
loopne
mov
jb
out
jecxz
and
xchg
cld
inc
mov
push
push
push
aas
push
add
add
(bad)
add
pop
or
xchg
mov
lea
or
pop
ror
mov
xor
int3
mov
xchg
mov
clc
and
xor
in
in
dec
jb
cmp
jb
frstpm(287
sbb
int3
sahf
icebp
add
cld
pop
push
movlps
push
xor
(bad)
or
in
sbb
in
xchg
js
in
inc
xor
cmps
in
mul
in
in
push
pmulhw
add
xlat
pop
loop
in
clc
sub
fs
mov
xchg
mov
and
push
pop
and
push
dec
aas
ja
leave
leave
in
in
fwait
(bad)
mov
leave
leave
leave
mov
enter
repz
out
or
jbe
cmp
pop
pop
sub
xor
xor
adc
punpcklwd
push
adc
inc
push
out
pop
pushf
addr16
fsubr
loopne
jmp
out
add
leave
inc
push
call
push
in
and
call
ror
dec
pop
dec
mov
jb
je
outs
xor
jb
jmp
cs
test
dec
orps
popf
pushf
pushf
popa
ins
ja
push
dec
mov
jmp
jmp
or
add
fdiv
test
cmp
divps
pop
cmp
js
pop
inc
inc
push
jmp
mov
aas
jmp
pop
mov
test
imul
push
repnz
leave
leave
enter
add
fdivr
jb
in
loopne
psubsb
lock
clc
push
repnz
add
sbb
cmp
jmp
or
adc
sbb
daa
and
and
sub
xor
xchg
xchg
xchg
xchg
adc
push
or
or
sbb
xor
dec
sbb
sbb
sahf
mov
and
and
xchg
xchg
daa
and
dec
(bad)
enter
sub
mov
jle
push
mov
dec
add
add
and
lea
cwde
or
scas
or
mov
xor
iret
pminub
in
cmp
sahf
adc
in
call
inc
add
push
jl
or
cmp
xchg
outs
mov
(bad)
into
enter
fld
in
push
cmp
in
hlt
cld
or
add
(bad)
cmp
and
sub
cmp
adc
and
xor
xchg
xchg
mov
xchg
inc
cwde
bound
bound
fwait
jb
outs
out
adc
sub
inc
jb
enter
add
add
cmps
outs
mov
cmp
(bad)
lock
sbb
xchg
xchg
mov
invd
add
mov
or
dec
inc
sub
test
daa
mov
inc
dec
mov
pop
add
data16
xchg
xchg
add
(bad)
leave
enter
or
mov
ror
in
leave
add
paddsb
add
add
jb
in
or
add
prefetchw
sbb
in
sbb
pushw
fs
icebp
icebp
addr16
in
jbe
xchg
nop
mov
aam
stc
jb
in
add
add
cmc
add
add
and
sbb
pop
push
or
or
mov
xchg
add
inc
lahf
repnz
(bad)
jb
inc
cwde
gs
nop
mov
and
add
aas
in
mov
xchg
add
add
sub
gs
fisttp
push
jae
aas
add
jb
mov
sub
shr
jbe
enter
pavgb
add
jmp
adc
je
bnd
pop
and
sub
jp
add
dec
ror
xlat
data16
dec
sbb
daa
adc
(bad)
fisub
cld
(bad)
jmp
add
or
test
and
sub
in
or
dec
outs
setae
in
in
fbstp
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
and
addr16
fs
cmc
cmc
push
nop
test
mov
push
push
add
xchg
neg
xchg
pop
sub
pop
in
fst
xchg
push
pushf
pop
out
and
sbb
hlt
nop
or
mov
shl
add
call
or
div
stc
div
and
sbb
pop
mov
leave
enter
push
or
unpckhps
pop
or
pop
loope
push
cli
inc
jle
mov
or
lock
das
adc
iret
or
xchg
jg
pop
push
int3
popw
pop
lahf
push
mul
maxps
mov
add
add
ror
(bad)
jb
test
or
cs
outs
push
pushf
and
dec
cs
enter
or
not
imul
mov
fwait
popf
test
pop
push
xor
sahf
xchg
mov
push
push
mov
nop
inc
push
pop
call
lods
mov
out
push
cld
jnp
jl
mov
mov
mov
add
cmps
stc
sahf
adc
or
push
daa
unpcklps
repz
or
pusha
add
fldcw
pop
or
repz
add
pop
jns
mov
lahf
cmp
cmps
push
push
les
out
pusha
mov
adc
and
adc
add
pop
cwde
add
xlat
int3
xchg
adc
xchg
fsubr
aas
inc
push
sub
inc
add
mov
sub
inc
aas
inc
ins
retf
pop
outs
pop
aas
push
inc
mov
and
add
xchg
add
cs
int
repz
jb
dec
cmp
adc
sbb
xor
inc
push
cs
or
test
sub
xor
xor
out
(bad)
jne
ja
mov
add
das
xchg
movs
and
inc
dec
push
push
or
pop
sbb
inc
cs
mul
ins
inc
rcr
push
sahf
push
out
or
sub
sbb
push
(bad)
iret
xchg
popa
adc
xchg
pop
dec
adc
imul
and
inc
shl
fsub
ret
dec
inc
jle
neg
or
add
push
aas
shl
push
and
add
pop
(bad)
push
sbb
(bad)
or
in
jb
or
or
or
daa
outs
daa
mov
lahf
adc
and
dec
dec
inc
push
addr16
das
push
jae
mov
ins
push
in
in
sahf
and
jb
pop
fsubr
ja
and
cmp
repnz
pushf
test
xchg
sub
mov
pop
fidiv
aas
into
aas
xlat
pop
sbb
adc
push
ins
movups
nop
jno
mov
add
mov
add
add
or
outs
ret
(bad)
and
cs
add
xchg
loopne
iret
fild
pop
in
inc
lds
add
adc
mov
add
and
add
inc
ror
stos
cmp
and
in
scas
scas
add
add
movs
add
cmp
cmps
fisttp
cs
ds
movs
sbb
sub
pop
shl
cmovo
pop
inc
mov
or
(bad)
mov
sbb
in
call
adc
add
mov
xor
fsub
dec
xchg
in
fsubp
stc
jb
jle
mov
pop
inc
push
inc
cmp
repz
cmp
sub
sbb
addr16
or
call
jg
add
jle
clc
jns
out
hlt
lock
call
out
fsub
push
aam
les
repz
pop
pop
mov
cwde
repz
repz
sub
iret
pop
dec
or
push
inc
push
iret
repz
cmp
sub
sbb
sahf
out
cmp
pop
hlt
in
mov
lods
cwde
nop
mov
js
push
cmp
repz
inc
cmp
adc
ja
repz
pop
lock
in
jns
out
shl
sahf
out
fs
jg
inc
mov
test
push
rol
cmps
jnp
aam
(bad)
push
test
jbe
cmp
pushf
ror
or
push
mov
jmp
das
sub
sub
jle
repnz
and
setle
mov
add
pop
add
pop
mov
push
sub
ins
popa
mov
jne
jae
inc
fwait
or
call
push
mov
or
(bad)
movs
push
cdq
ret
test
pop
pop
(bad)
sbb
xchg
jp
jmp
enter
xchg
cmps
jb
sbb
jb
in
adc
das
sbb
cwde
adc
sbb
push
or
add
jno
jbe
enter
add
divps
cmp
and
or
in
or
ss
and
sbb
sbb
push
in
xchg
sbb
push
pop
dec
and
sbb
inc
and
cmp
xor
ins
cmp
sub
adc
mov
ja
cmp
jne
push
cwde
mov
cmp
out
sub
je
enter
repz
xchg
test
cmp
push
adc
in
jns
jae
loopne
push
jae
push
xchg
repz
pop
inc
push
inc
jns
fxch
sub
(bad)
cld
push
call
out
out
sub
mov
xchg
mov
jge
out
repz
xor
add
repz
cmp
xchg
mov
sahf
(bad)
repz
cmp
push
dec
push
cmp
scas
aas
inc
lds
xor
add
jle
ret
aam
push
inc
inc
or
addr16
jg
dec
push
jnp
add
enter
jl
xchg
or
ret
mov
adc
pop
in
adc
sbb
call
mov
mov
ret
inc
and
sahf
mov
sub
inc
(bad)
(bad)
(bad)
call
pop
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
add
dec
pop
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
jmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
(bad)
(bad)
(bad)
jmp
inc
or
add
cmps
xchg
cmp
xor
dec
cmps
(bad)
(bad)
(bad)
jmp
pop
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
(bad)
(bad)
(bad)
(bad)
xchg
clc
repz
mov
sub
fwait
xchg
and
and
ins
add
int3
add
aas
jno
or
mov
(bad)
(bad)
(bad)
call
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
mov
inc
cmps
out
aas
inc
cmps
mov
ins
scas
add
push
mov
inc
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
(bad)
(bad)
(bad)
(bad)
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
push
popa
mov
popa
push
pop
sar
jl
mov
das
lea
mov
inc
inc
(bad)
jmp
jb
movs
daa
jmp
mov
inc
(bad)
(bad)
(bad)
call
fst
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
mov
outs
std
xlat
cmp
mov
sbb
add
mov
(bad)
(bad)
push
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
call
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
call
sahf
out
pop
push
xchg
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
cld
ror
add
cmps
fcomp
inc
xchg
pop
adc
sti
cmp
dec
or
inc
rcr
movs
xor
or
inc
in
pop
add
lods
in
iret
fist
test
pushf
rol
push
hlt
inc
or
pop
dec
inc
aaa
pop
leave
cmp
or
sbb
or
femms
out
fimul
xor
ficom
push
push
adc
sbb
fst
adc
leave
fwait
pop
push
add
out
push
or
inc
ins
add
pop
add
test
mov
jge
inc
test
adc
push
push
cmp
out
sahf
out
int3
mov
je
iret
mov
sahf
dec
xor
aaa
cld
in
xor
icebp
cmp
cmp
pop
add
push
sti
les
pop
lahf
js
aam
and
dec
or
daa
inc
push
es
and
out
jns
enter
fdivp
sti
cmp
mov
push
mov
mov
ss
inc
mov
hlt
call
fmul
pop
out
xchg
inc
mov
push
loopne
in
sahf
jmp
and
dec
xor
jg
push
dec
mov
mov
or
or
xchg
push
and
lods
xchg
pop
repnz
scas
add
movs
ss
adc
mov
cmps
loopne
sub
scas
loopne
popf
mov
sbb
scas
addr16
xchg
push
cmps
add
jns
outs
sysexit
nop
jne
xlat
push
in
jne
out
lods
(bad)
lahf
cmps
adc
(bad)
jg
mov
adc
ja
aaa
sub
inc
inc
or
add
add
adc
add
rol
data16
(bad)
fisttp
xlat
adc
int
sbb
ja
fld
sub
add
(bad)
call
sbb
ret
hlt
pop
push
out
cdq
mov
(bad)
xchg
inc
pop
inc
test
out
push
inc
sbb
(bad)
push
jnp
pop
mov
jmp
cli
dec
jmp
popf
nop
and
(bad)
and
jl
mov
call
lea
jns
cmp
sti
popa
outs
ss
cmp
aaa
shl
aas
or
(bad)
(bad)
push
mov
js
ror
loop
dec
mov
xchg
jp
fwait
stos
inc
(bad)
(bad)
(bad)
jmp
sub
lock
add
into
xchg
dec
call
inc
adc
loopne
mov
(bad)
(bad)
(bad)
push
(bad)
xchg
out
cmp
jbe
data16
test
mov
sub
cmp
repnz
(bad)
(bad)
(bad)
fimul
scas
xchg
pop
and
mov
dec
loope
cs
inc
xor
adc
mov
scas
in
and
xchg
add
jnp
inc
add
mov
int
loope
icebp
aaa
xor
lods
add
sahf
aaa
int
jle
xlat
cmp
js
mov
sbb
jge
push
push
push
xchg
enter
add
sub
outs
add
test
inc
add
out
push
sub
add
pop
sub
push
mov
or
pop
add
iret
repz
jne
out
cld
(bad)
js
dec
daa
shl
jo
pop
inc
mov
seto
inc
push
pusha
add
mov
push
push
or
adc
sbb
test
xchg
inc
cmp
ja
(bad)
iret
jg
add
jg
daa
xchg
pop
inc
and
mov
nop
and
mov
and
icebp
sti
pop
add
(bad)
ja
add
adc
add
add
add
pop
and
lods
pop
push
sub
lahf
inc
inc
imul
das
aas
and
sbb
pop
and
push
inc
pop
push
aaa
nop
add
pop
ins
mov
ss
dec
outs
bound
sbb
loopne
fist
sahf
inc
js
sbb
loopne
push
dec
inc
push
mov
dec
pop
jecxz
sbb
ins
inc
test
mov
jno
popa
jo
jg
lods
jbe
jns
lahf
inc
cwde
rcl
mov
popf
inc
push
iret
push
inc
push
pop
retf
push
outs
outs
movs
jge
and
inc
pusha
sbb
pop
add
and
inc
inc
inc
rcl
mov
add
retf
xlat
ffreep
popa
mov
mov
repnz
jo
dec
out
add
mov
je
add
push
xor
aaa
push
inc
or
xor
xchg
or
pop
fdivrp
inc
shl
stc
pop
push
push
sub
and
add
in
push
imul
fisub
adc
cmp
imul
fistp
aaa
and
bound
daa
js
inc
add
out
mov
mov
jl
pop
push
es
adc
add
sub
inc
stos
mov
loope
adc
cmps
cli
adc
ret
ss
fs
add
test
jnp
loope
test
loop
pop
inc
sub
js
fs
ins
jns
(bad)
pop
and
inc
outs
jb
inc
out
stos
adc
cmps
lahf
fimul
mov
pop
push
ss
and
addr16
add
push
shl
and
pushf
fist
and
je
pop
aas
sub
mov
in
scas
add
sub
in
or
nop
pop
dec
jge
mov
add
adc
xor
popf
xchg
nop
pusha
aas
mov
(bad)
push
(bad)
iret
inc
adc
push
mov
inc
out
loope
add
sub
jge
xor
lds
mov
xchg
and
loope
inc
out
ins
add
push
popa
pop
jg
lods
imul
aas
pop
arpl
push
dec
inc
or
push
inc
bound
neg
pop
addr16
push
add
dec
imul
movs
lahf
xchg
pop
add
mov
and
fidivr
jno
mov
or
xor
sub
outs
push
sbb
jb
ja
push
loop
push
imul
pop
sub
imul
ds
stos
push
adc
inc
xchg
fadd
and
(bad)
jo
aas
mov
or
xchg
gs
sti
out
mov
bound
xchg
jne
(bad)
lea
mov
dec
or
aas
mov
inc
cmc
inc
dec
or
shl
rcl
adc
jg
add
movs
add
dec
jne
sbb
adc
(bad)
and
dec
popa
mov
jp
inc
add
or
push
imul
push
jmp
test
mov
das
int
pop
add
neg
ja
sub
daa
inc
ins
ins
push
test
xor
pop
ud2
push
lods
ficomp
inc
push
imul
lahf
push
inc
and
fdiv
cmc
pop
sub
pop
pop
push
mov
scas
xor
test
mov
test
lahf
stos
sub
mov
movs
pusha
mov
pop
or
ins
push
xor
scas
pop
jnp
pop
test
pop
mov
out
fild
sbb
mov
fist
fcmovne
fist
lods
or
add
push
adc
and
rcr
sub
fistp
mov
jg
(bad)
pop
popa
push
mov
jo
sub
fist
mov
mov
into
pop
ins
xchg
jmp
imul
dec
aad
push
gs
xor
stos
xor
add
inc
jo
mov
outs
adc
push
push
mov
xor
add
stos
iret
dec
je
js
sti
test
stos
in
push
inc
ds
adc
dec
sbb
inc
mov
push
xor
lahf
ja
ret
mov
movlps
inc
popf
sbb
movs
xor
or
aad
mov
adc
or
(bad)
aas
gs
or
cmp
cwde
fisub
inc
bound
and
jne
sbb
sbb
push
and
sar
je
pop
adc
push
pop
jo
out
test
out
pop
outs
pop
daa
mov
push
rcl
arpl
dec
or
push
xchg
movs
push
aas
fsubr
or
aas
add
mov
ss
div
add
push
jbe
push
imul
div
cmps
rcl
dec
or
and
lods
aaa
imul
out
xchg
and
and
sbb
outs
js
add
pop
and
out
and
pop
add
pop
cmc
dec
cdq
retf
shr
mov
push
out
xchg
mov
sbb
dec
push
test
push
push
inc
test
xchg
add
adc
adc
adc
add
and
mov
push
jp
pusha
adc
and
aas
xor
scas
adc
push
das
aas
lahf
ja
xchg
inc
add
aaa
and
add
inc
ins
cmp
push
adc
je
add
jae
out
bound
jne
mov
inc
push
mov
mov
mov
popa
js
add
fsub
adc
mov
aad
xchg
mov
jns
mov
lahf
out
or
sub
jno
scas
mov
and
push
arpl
xor
push
add
icebp
scas
call
aas
les
iret
repz
or
jbe
xchg
fwait
movs
cmp
repz
mov
cmp
repz
cmc
push
or
jns
out
sbb
iret
repz
aaa
push
push
pusha
push
jle
test
add
sbb
inc
add
adc
adc
nop
inc
adc
inc
push
inc
mov
inc
mov
sub
or
push
add
mov
das
mov
fisubr
push
or
out
cmp
push
inc
inc
dec
or
inc
fidivr
adc
add
push
or
mov
pop
ss
ret
or
mov
daa
push
adc
pop
jp
add
shl
or
movs
inc
ins
jmp
je
nop
cmp
xchg
cmp
mov
sub
(bad)
jns
stos
mov
dec
sbb
das
(bad)
(bad)
inc
sbb
push
adc
sbb
ja
xchg
rcr
rcl
lock
or
mov
in
cmp
xchg
dec
push
ror
(bad)
(bad)
(bad)
fild
adc
xchg
pop
test
xchg
add
(bad)
ror
(bad)
pop
push
outs
iret
test
push
jmp
ss
dec
or
mov
push
daa
adc
mov
lds
(bad)
(bad)
dec
fild
mov
int3
into
idiv
push
fnsave
cld
imul
pushf
(bad)
mov
xor
mov
adc
test
popf
out
push
shl
out
in
dec
push
inc
add
(bad)
sbb
add
add
or
enter
and
and
inc
jb
loopne
xor
cmps
push
and
mov
ror
sti
(bad)
(bad)
(bad)
fiadd
xchg
or
jge
add
enter
pop
in
in
inc
push
add
(bad)
(bad)
jg
sbb
sub
dec
das
or
shr
inc
pop
pop
inc
call
xchg
dec
dec
aas
ja
(bad)
(bad)
fistp
aas
out
xchg
sub
push
pop
(bad)
stc
icebp
inc
bound
xchg
cwde
push
jmp
(bad)
(bad)
(bad)
(bad)
aas
das
jns
cmps
inc
fidiv
mov
ret
jmp
cli
pop
push
jmp
(bad)
(bad)
fdivp
jb
pop
pop
push
sub
dec
inc
xchg
std
jmp
push
sub
xchg
dec
cmp
out
(bad)
(bad)
(bad)
(bad)
out
in
jg
mul
fadd
fild
xor
mov
rcr
lahf
sbb
(bad)
(bad)
(bad)
(bad)
mov
cs
jl
out
xchg
cli
out
cmp
jmp
xor
gs
(bad)
(bad)
call
out
mov
aam
push
cmps
adc
sub
not
jl
adc
mov
(bad)
(bad)
jmp
push
push
mov
mov
std
shl
xchg
sar
(bad)
cld
fucomip
ret
or
call
popf
scas
popf
fs
pop
sar
(bad)
(bad)
(bad)
(bad)
dec
sbb
sub
(bad)
add
xor
outs
call
mov
inc
or
(bad)
call
xchg
std
int
push
out
mov
retf
add
js
xchg
sub
(bad)
(bad)
call
and
(bad)
cmc
cwde
sub
cmp
rol
xchg
jg
mov
fistp
push
ja
(bad)
(bad)
inc
mov
push
(bad)
jle
pop
cld
xchg
and
movs
jl
adc
iret
sub
jp
adc
ins
(bad)
(bad)
(bad)
jmp
pop
push
xlat
mov
cmp
sti
iret
leave
push
mov
cwde
out
xchg
cmps
addr16
rcr
call
mov
gs
test
(bad)
(bad)
call
(bad)
fbstp
(bad)
mov
sub
into
fimul
scas
sahf
iret
adc
mov
(bad)
dec
es
movs
pushf
mov
test
cmps
call
sbb
(bad)
cli
neg
fst
pop
int3
sbb
gs
mov
jge
(bad)
(bad)
inc
fadd
jecxz
(bad)
repz
jns
mov
outs
in
aas
repnz
sahf
sub
mov
iret
aas
pop
cld
sub
dec
aas
adc
adc
jmp
jecxz
inc
pop
inc
(bad)
(bad)
(bad)
inc
inc
adc
shr
ins
push
dec
test
xlat
dec
pop
push
and
hlt
push
mov
(bad)
(bad)
dec
popa
inc
add
clc
loopne
push
pop
push
das
sbb
mov
clc
jbe
(bad)
(bad)
jmp
call
and
dec
pop
and
ds
xor
ret
jecxz
cdq
pop
ins
leave
xor
or
std
(bad)
jmp
cmps
pop
fcompp
out
jmp
and
inc
inc
pop
lock
jo
dec
xchg
and
ret
es
jbe
sub
(bad)
(bad)
call
xor
or
xchg
retf
js
xrelease
mov
ja
pop
pop
(bad)
(bad)
(bad)
call
mov
aad
sbb
fisubr
push
adc
or
fisub
ins
(bad)
loopne
call
xchg
sbb
dec
mov
jae
jp
stos
adc
cwde
add
pop
dec
pop
xor
(bad)
(bad)
(bad)
push
xchg
in
stos
test
pop
xor
jb
(bad)
retf
mov
das
stc
inc
in
shr
(bad)
(bad)
inc
test
cmc
pop
rol
fidivr
in
pop
inc
mov
sub
push
dec
cld
dec
call
das
clc
call
sbb
pusha
movs
mov
push
mov
xor
pop
leave
fwait
mov
dec
in
push
mov
jae
sbb
pop
out
in
xor
out
cmp
mov
ja
aam
clc
shl
int
(bad)
(bad)
push
int3
stos
(bad)
mov
adc
push
movs
pop
sbb
push
pop
data16
(bad)
(bad)
(bad)
mov
xchg
dec
pop
stos
das
xchg
push
cmp
test
(bad)
ret
push
std
mov
mov
(bad)
(bad)
jmp
push
jbe
cwde
and
dec
sbb
out
inc
push
(bad)
xchg
dec
sub
add
pop
(bad)
cmp
cmp
(bad)
mov
and
jnp
(bad)
mov
(bad)
(bad)
(bad)
cmp
sbb
push
dec
shl
jmp
jl
jge
pop
pop
pop
add
push
sti
sahf
out
repnz
mov
(bad)
call
loopne
pop
and
jmp
fwait
pop
shl
mov
add
pop
outs
clc
(bad)
call
repz
jmp
inc
xchg
lods
imul
in
repnz
jbe
(bad)
(bad)
(bad)
jmp
jecxz
repz
pop
sbb
mov
lods
xchg
mov
mov
push
in
adc
call
test
add
aam
in
and
pop
out
out
(bad)
(bad)
(bad)
dec
ins
loope
enter
and
int
test
xor
imul
(bad)
jg
repz
(bad)
mov
mov
aas
retf
(bad)
in
sub
or
out
mov
push
inc
fisttp
inc
jg
(bad)
push
into
cmp
stos
jno
sub
rol
xchg
xchg
jns
xchg
jge
fcos
(bad)
(bad)
(bad)
mov
jno
out
jmp
or
sub
push
mov
mov
int3
lock
or
dec
(bad)
(bad)
cmp
imul
call
or
out
push
jnp
leave
push
inc
(bad)
(bad)
(bad)
push
fstp
test
jmp
sub
in
pop
push
dec
xor
jmp
or
scas
fstp
(bad)
or
mov
sub
mov
jmp
das
jo
jns
or
call
popa
cmps
cld
xchg
pop
aam
xor
jmp
test
add
out
jb
xchg
pop
aad
sub
mov
out
(bad)
call
jns
fwait
xchg
or
(bad)
pushf
std
xchg
retf
inc
pop
mov
nop
xchg
cmp
sbb
jmp
sub
mov
xor
(bad)
jmp
test
sbb
inc
pop
sbb
jns
jbe
push
mov
push
scas
imul
mov
call
movs
or
call
sub
cmp
jmp
add
pop
adc
arpl
mov
jg
mov
pop
pushf
xor
(bad)
cld
fndisi(8087
or
cmps
(bad)
(bad)
call
xor
jbe
mov
xor
cld
ficomp
adc
mov
jl
pop
push
jno
adc
(bad)
mov
loop
pusha
sbb
adc
or
or
add
(bad)
dec
enter
dec
adc
jmp
mov
nop
adc
push
(bad)
call
cld
inc
iret
test
mov
stos
fisttp
push
push
ror
ret
sahf
cmps
sbb
pop
cmp
mov
gs
push
fistp
div
popa
loope
mov
mov
(bad)
(bad)
inc
add
push
add
mov
fs
daa
dec
stos
mov
dec
mov
pop
mov
or
(bad)
(bad)
dec
out
loope
inc
ja
shr
and
mov
jl
push
or
push
cmp
addr16
mov
enter
cmp
push
scas
(bad)
(bad)
(bad)
(bad)
jl
(bad)
test
push
xchg
scas
nop
jecxz
xor
lea
cmp
inc
add
(bad)
(bad)
call
lods
out
xor
add
das
or
cld
(bad)
xchg
mul
or
adc
jmp
rol
sub
pop
jns
in
mov
xchg
lods
mov
pushf
and
scas
ret
dec
test
jmp
test
cmp
das
clc
(bad)
call
pop
mov
inc
and
pop
cli
jg
cmp
mov
aaa
enter
(bad)
(bad)
mov
mov
(bad)
int3
sbb
ja
pop
adc
nop
lods
(bad)
xor
inc
aaa
(bad)
(bad)
(bad)
inc
inc
jns
xor
inc
stc
jno
sbb
int
stos
ins
mov
outs
add
std
(bad)
(bad)
jmp
mov
test
icebp
les
inc
mov
mov
(bad)
(bad)
push
adc
cdq
adc
pop
jbe
cmps
cdq
ret
mov
xchg
fisttp
cmps
data16
arpl
pop
mov
jmp
xchg
mov
call
and
pop
je
cdq
js
movs
pop
or
popa
sbb
inc
(bad)
(bad)
(bad)
inc
mov
je
xchg
lea
xchg
sti
adc
stc
loop
xchg
cs
or
sub
call
pop
jge
xor
out
stos
ss
lock
jns
add
sbb
xor
pop
ja
mov
test
mov
mov
pusha
adc
loopne
push
mov
cmp
call
ret
inc
scas
and
bound
pop
aaa
pop
in
sar
jecxz
jae
test
out
clc
(bad)
(bad)
(bad)
call
je
mov
stos
es
pop
or
sub
sbb
push
push
xchg
sbb
sub
mov
cld
and
test
imul
and
and
push
gs
jb
sbb
je
popa
into
push
jne
sbb
mov
call
sti
std
jo
or
movs
xlat
or
xchg
(bad)
inc
pushf
(bad)
(bad)
(bad)
mov
test
gs
sar
mov
movs
cmp
inc
inc
out
lods
xchg
xchg
frstpm(287
(bad)
(bad)
(bad)
inc
inc
push
imul
xlat
mov
pushf
push
xchg
or
mov
test
(bad)
jg
push
add
outs
mov
mov
cmp
nop
dec
mov
dec
into
cmp
sub
cmp
(bad)
mov
add
jns
mov
fwait
in
dec
jecxz
xor
push
std
(bad)
push
pushf
in
out
aad
xchg
xchg
stos
retf
ret
mov
stos
jmp
(bad)
fwait
dec
lods
push
arpl
push
mov
adc
mov
and
push
adc
sub
rcr
and
push
(bad)
push
(bad)
shr
jmp
dec
iret
mov
into
or
cmps
add
sahf
in
xchg
out
clc
pop
sub
or
rol
mov
push
call
pop
sub
fld
pop
mov
fistp
les
inc
xor
mov
test
imul
pop
dec
and
pop
lods
ficom
add
jle
test
cmp
int
enter
out
rcr
pop
popa
jle
pop
retf
or
mov
shr
(bad)
(bad)
jmp
ins
sub
cmp
inc
lea
lods
aam
mov
adc
in
xchg
fisttp
xor
(bad)
(bad)
(bad)
jmp
push
lock
enter
int3
xchg
mov
stos
push
out
pop
jae
push
jbe
aad
push
add
(bad)
inc
fs
or
stc
mov
push
pushf
stc
imul
inc
mov
aaa
mov
test
iret
fstp
dec
scas
stos
pop
push
mov
mov
pop
jge
(bad)
(bad)
dec
jnp
inc
aaa
in
sahf
dec
neg
(bad)
mov
mov
std
out
push
rcr
(bad)
cmp
out
xlat
(bad)
ds
pop
jecxz
gs
je
xchg
(bad)
aaa
xor
adc
cdq
cs
je
call
pop
(bad)
out
mov
repnz
mov
xchg
adc
jnp
pop
mov
nop
sub
or
sbb
or
mov
(bad)
(bad)
call
ret
sub
mov
mov
call
in
jp
cdq
sahf
mov
sub
icebp
(bad)
(bad)
jmp
inc
enter
cmp
jb
mov
std
and
jo
je
(bad)
call
or
jg
pop
movs
adc
(bad)
sub
cdq
xor
sar
lods
icebp
in
aas
(bad)
jg
inc
mov
jp
and
fmul
shl
sar
(bad)
(bad)
in
cwde
push
inc
(bad)
sub
xchg
shl
in
imul
clc
push
xchg
lea
mov
fsubp
(bad)
jg
jmp
dec
icebp
pusha
popa
cld
mov
add
xor
ins
sub
shl
mov
adc
(bad)
mov
hlt
or
cdq
loopne
jl
push
jecxz
pop
mov
xlat
mov
push
addr16
xlat
lods
call
mov
xchg
mov
call
in
mov
push
sub
call
push
test
rol
and
mov
aad
lock
dec
sti
lods
fnsave
xor
cmc
xor
pop
and
idiv
(bad)
mov
xchg
sub
xor
dec
jmp
movs
(bad)
(bad)
(bad)
dec
lock
xor
daa
pushw
dec
mov
push
mov
cmp
in
hlt
fidiv
(bad)
(bad)
(bad)
jle
inc
xchg
jge
mov
jmp
and
push
jg
cld
pop
(bad)
iret
mov
(bad)
(bad)
call
mov
sbb
out
adc
push
xor
and
pop
adc
xchg
mov
fidivr
cld
sar
(bad)
jmp
add
mov
test
scas
sbb
(bad)
add
daa
push
ret
pop
rcr
mov
dec
call
fcmovb
fdivr
pusha
pushw
stos
dec
in
stc
xor
adc
cld
cmp
or
(bad)
(bad)
(bad)
dec
ins
in
or
data16
mov
mov
pop
lea
jmp
xor
aas
push
cld
(bad)
dec
jle
sbb
inc
mov
inc
jae
sub
pusha
mov
(bad)
(bad)
push
xchg
mov
cmps
pop
sub
pop
mov
lea
(bad)
(bad)
(bad)
mov
mov
rcr
rcr
push
(bad)
push
pushf
mov
ss
pop
lock
test
xlat
retf
ficom
lds
xchg
(bad)
(bad)
jg
mov
sub
or
loopne
mov
jge
scas
imul
rcr
mov
into
shr
mov
xchg
stc
jnp
test
popf
xchg
retf
xor
(bad)
(bad)
call
(bad)
lods
jecxz
inc
sbb
sti
cmp
ficomp
or
test
inc
xor
xchg
or
call
mov
mov
sti
mov
bnd
call
cdq
sar
push
push
outs
jae
mov
mov
xor
sbb
dec
sub
dec
mov
outs
sahf
cs
(bad)
(bad)
(bad)
stc
mov
daa
mov
pop
(bad)
push
sbb
mov
jns
or
loopne
fisub
(bad)
(bad)
(bad)
call
xor
cdq
hlt
loop
neg
push
xor
in
jb
xor
pushf
jb
xchg
ins
jae
ss
(bad)
(bad)
(bad)
jle
mov
pop
xchg
loopne
movs
pop
icebp
fs
(bad)
gs
sub
pop
sub
inc
(bad)
(bad)
call
loope
push
push
adc
cmp
lods
inc
jno
cdq
and
stos
outs
cli
(bad)
call
or
les
addr16
(bad)
xor
mov
mov
or
dec
(bad)
mov
rcr
sub
pop
mov
pop
imul
outs
mov
xchg
xor
(bad)
(bad)
(bad)
clc
sar
stos
cmps
pop
mov
or
movs
jne
cmp
test
push
das
mov
nop
push
(bad)
call
push
inc
(bad)
cmps
repz
jmp
dec
and
scas
push
mov
sahf
jnp
(bad)
(bad)
(bad)
jmp
and
adc
adc
retf
ret
inc
dec
xchg
dec
sub
inc
jmp
call
sub
xchg
pop
lds
xchg
jnp
pop
sub
xor
push
cmp
mov
call
cmp
add
push
mov
or
icebp
mov
add
lock
(bad)
call
dec
sti
test
arpl
aam
out
adc
inc
lods
pop
call
pop
ret
and
cmp
scas
gs
xchg
xchg
test
xor
outs
fist
(bad)
(bad)
jmp
dec
sub
femms
push
push
mov
inc
in
pop
xor
adc
jge
sub
inc
test
out
mov
out
and
jbe
cmps
ret
or
lahf
clc
xor
hlt
(bad)
test
(bad)
(bad)
(bad)
fmul
mov
cmp
rcr
xchg
dec
inc
cmps
cdq
and
pusha
xor
(bad)
fld
cs
fdivr
(bad)
(bad)
dec
loopne
mov
adc
cs
inc
inc
xor
pop
inc
adc
xor
xchg
lock
ds
call
(bad)
inc
mov
dec
mov
xor
adc
nop
pop
leave
lea
cli
(bad)
(bad)
inc
sbb
aad
pusha
outs
xchg
(bad)
mov
bound
cmp
xor
scas
jmp
fsubr
dec
loope
mov
sar
or
mov
pop
jecxz
mov
lea
cmp
cmp
enter
scas
xor
xchg
aam
inc
add
adc
jmp
inc
or
xchg
and
add
out
xor
inc
pop
ja
mov
sbb
test
call
sahf
test
inc
add
jge
loopne
inc
imul
mov
enter
(bad)
mov
call
les
mov
or
pop
pop
add
data16
data16
mov
(bad)
(bad)
(bad)
inc
add
cmp
mov
xor
mov
into
add
ins
retf
push
or
(bad)
(bad)
(bad)
call
xor
dec
push
shl
daa
push
mov
pop
prefetcht1
clc
mov
adc
(bad)
(bad)
(bad)
push
adc
cld
push
out
loope
jp
call
test
(bad)
(bad)
(bad)
jmp
xchg
(bad)
aaa
mov
int
(bad)
sbb
lock
sahf
gs
mov
int3
mov
sbb
(bad)
(bad)
(bad)
inc
stc
xlat
dec
stos
cmp
or
rcr
mov
stc
inc
mov
adc
cmp
xor
add
(bad)
push
fstp
cmp
push
sub
dec
push
sar
(bad)
(bad)
(bad)
jg
push
in
movs
loop
sti
fwait
push
call
pop
div
jl
loop
aam
mov
jb
mov
test
stc
add
cmp
retf
xchg
(bad)
(bad)
(bad)
(bad)
ja
inc
es
jmp
push
pop
(bad)
int
test
imul
pop
adc
sub
(bad)
jae
or
inc
adc
fidivr
jo
call
aam
(bad)
addr16
ja
and
mov
pushf
xchg
adc
add
ds
sbb
jp
(bad)
(bad)
jmp
add
mov
sti
call
inc
xlat
loopne
retf
pusha
pop
cmps
dec
(bad)
(bad)
(bad)
call
js
test
ins
add
iret
pop
pop
and
xchg
jno
daa
pop
fsubr
out
jae
mov
inc
dec
cs
fsub
inc
fwait
mov
push
hlt
inc
push
jmp
mov
(bad)
loope
(bad)
(bad)
jmp
add
cmp
mov
(bad)
mov
neg
fist
das
into
add
(bad)
(bad)
(bad)
dec
test
loopne
int3
jbe
loope
and
adc
arpl
call
sbb
dec
add
(bad)
(bad)
jmp
stos
push
aam
aam
test
xor
jnp
jno
dec
addr16
(bad)
jg
in
sbb
in
inc
sbb
int
stos
inc
jmp
(bad)
(bad)
(bad)
jl
ret
hlt
pop
popf
pop
aam
pop
iret
cmp
aam
jp
and
call
mov
pop
add
jmp
add
int
retf
lea
mov
push
lahf
sti
pop
mov
hlt
(bad)
mov
mov
push
sub
(bad)
call
jge
pushf
sbb
push
and
movs
xchg
mov
inc
imul
mov
dec
dec
cld
add
test
add
bound
pop
sbb
in
(bad)
(bad)
(bad)
push
cwde
mov
sbb
mov
sbb
les
inc
fisttp
xchg
outs
jge
adc
sbb
(bad)
jmp
and
and
out
pop
add
and
pusha
scas
rcr
jle
repz
clc
add
adc
mov
int3
(bad)
(bad)
(bad)
inc
sub
jnp
jl
loop
fnstcw
pusha
std
inc
shl
adc
jo
(bad)
(bad)
mov
cmps
inc
push
aam
push
scas
aaa
stc
dec
pop
adc
shl
es
push
xor
jmp
ror
or
mov
xchg
cs
push
sbb
dec
fwait
(bad)
(bad)
inc
int
dec
fwait
mov
fs
adc
scas
mov
add
adc
(bad)
(bad)
jg
dec
push
mov
jmp
and
sbb
sub
sbb
lods
xchg
cld
mov
std
(bad)
(bad)
jmp
cmp
pop
(bad)
mov
inc
xchg
scas
mov
inc
lods
jb
and
stc
outs
sbb
stos
push
jle
test
in
jg
fisttp
sahf
cli
jecxz
adc
data16
push
mov
mov
cld
bound
(bad)
hlt
stos
adc
dec
ror
cli
aad
jbe
cld
dec
add
cld
arpl
xchg
js
sbb
int
(bad)
(bad)
(bad)
inc
push
xor
or
cmp
fistp
push
sti
sub
ficom
mov
cli
sbb
mov
jmp
shr
lods
lea
cmp
mov
push
pop
or
movs
adc
cmp
jmp
aas
or
jae
arpl
jge
stos
adc
int3
fbld
jbe
fild
xchg
jmp
call
sub
mov
cdq
adc
imul
js
adc
ret
or
rol
(bad)
push
das
xchg
sbb
out
sub
neg
adc
cmp
call
loope
and
push
test
and
adc
clc
or
pop
jno
(bad)
jge
pop
sub
rcr
mov
push
fadd
jmp
pop
xchg
and
adc
addr16
lea
daa
(bad)
(bad)
(bad)
mov
mov
sub
scas
cmp
mov
in
gs
adc
rcr
(bad)
(bad)
(bad)
jmp
or
sbb
cmp
cmp
(bad)
jle
ins
push
mov
add
(bad)
xchg
xor
ds
in
mov
cmp
mov
mov
xor
(bad)
(bad)
call
jg
fnstcw
sahf
icebp
cmp
mov
xor
mov
fcmovb
mov
(bad)
(bad)
jmp
(bad)
push
dec
imul
jb
pop
sbb
jl
jno
jbe
fwait
imul
(bad)
(bad)
inc
fstp
in
mov
mov
cli
addr16
rol
outs
jg
call
addr16
mov
outs
aad
add
adc
or
test
(bad)
(bad)
dec
shl
jae
enter
push
not
hlt
mov
scas
sbb
scas
ret
dec
jmp
movs
mov
sub
loop
cwde
bound
pop
mov
(bad)
(bad)
(bad)
mov
stos
add
and
push
lea
iret
pop
ins
ss
mov
stos
(bad)
(bad)
(bad)
jmp
add
cmp
cmp
mov
add
sub
imul
and
inc
cmps
add
pusha
mov
jl
arpl
sbb
mov
dec
shl
(bad)
(bad)
(bad)
call
sub
fdivr
fldenv
retf
inc
inc
dec
push
push
cld
mov
push
cmp
loope
repz
sbb
jo
(bad)
(bad)
(bad)
call
or
cli
es
aas
add
aam
movs
dec
imul
rcr
sbb
(bad)
jmp
push
retf
cmps
repnz
jmp
sub
pop
aam
ss
add
call
push
stos
lods
(bad)
in
stos
mov
pop
sbb
xor
out
add
ret
mov
and
das
clc
out
cmps
out
(bad)
push
mov
imul
out
cmp
in
addr16
(bad)
(bad)
call
es
sbb
mov
movs
and
add
add
push
(bad)
(bad)
(bad)
push
cmp
shl
test
mov
jae
xor
adc
dec
jp
cdq
pusha
popa
movs
inc
inc
les
stc
in
push
push
sub
dec
ds
jmp
dec
js
jnp
out
(bad)
(bad)
(bad)
jmp
push
clc
lahf
push
(bad)
test
fist
imul
pop
add
mov
jns
jbe
mov
inc
mov
pusha
or
adc
mov
mov
push
mov
push
call
imul
stc
and
mov
inc
aam
std
and
mov
jp
and
call
cli
(bad)
fild
xor
mov
jmp
fdivrp
stos
int3
mov
(bad)
(bad)
(bad)
call
and
add
xlat
aad
rcr
fisttp
out
aas
cmp
(bad)
(bad)
(bad)
(bad)
call
les
sub
ins
imul
fmul
mov
daa
sbb
lea
(bad)
dec
adc
rcr
or
sbb
jo
imul
(bad)
(bad)
cmp
ret
nop
jle
je
add
(bad)
or
xchg
mov
push
ret
retf
(bad)
(bad)
dec
js
test
mov
fwait
push
adc
pop
dec
(bad)
imul
pop
arpl
in
mov
les
xor
sbb
jns
add
movs
push
add
cmps
mov
(bad)
into
mov
inc
pop
mov
xor
scas
neg
test
in
ret
jmp
(bad)
js
and
pusha
xchg
sub
js
pushf
sub
cmp
ja
pusha
mov
mov
or
cmp
ins
jnp
(bad)
(bad)
jmp
mov
ins
je
pushf
mov
pop
mov
add
(bad)
dec
mov
sbb
push
push
stos
ret
(bad)
jg
xor
pop
adc
(bad)
mov
jno
add
inc
cdq
rcl
sub
adc
int3
pop
(bad)
mov
jmp
pop
add
xor
lods
push
adc
(bad)
(bad)
(bad)
call
xlat
pop
jae
(bad)
lds
scas
push
mov
rol
cmps
xchg
mov
mov
in
add
lods
jmp
(bad)
call
(bad)
dec
imul
(bad)
mov
dec
pop
dec
dec
daa
and
movs
das
push
cli
(bad)
(bad)
(bad)
(bad)
out
(bad)
ret
mov
dec
dec
sbb
shl
(bad)
test
ins
push
mov
push
lahf
loop
loopne
dec
jo
inc
in
pop
xchg
inc
push
sbb
jge
inc
sub
outs
jmp
(bad)
(bad)
(bad)
(bad)
cmp
add
push
dec
xor
ja
pop
add
arpl
(bad)
popa
dec
ins
dec
(bad)
(bad)
(bad)
dec
rol
push
adc
and
mov
stc
lock
xchg
call
push
std
xor
xor
add
aad
and
(bad)
push
add
xchg
fiadd
push
mov
jmp
mov
pop
cmp
cld
das
xchg
sbb
push
js
adc
das
clc
(bad)
jmp
shr
pop
adc
mov
push
ror
cli
psubb
(bad)
(bad)
push
jp
ret
ins
cmps
outs
lea
xchg
lds
cwde
and
stc
int
and
or
ds
mov
push
cmp
in
xor
aas
fs
and
mov
(bad)
(bad)
push
pop
in
and
out
aam
inc
nop
out
xor
movs
(bad)
cmps
aam
(bad)
sbb
das
and
mov
imul
add
mov
ins
scas
clc
(bad)
dec
mov
fdivr
fist
enter
xchg
inc
add
mov
push
into
inc
jmp
fmul
fild
ss
(bad)
(bad)
(bad)
in
xchg
stos
sbb
test
mov
push
jp
adc
sbb
test
fwait
jo
mov
mov
mov
and
push
and
dec
push
add
lock
loopne
push
fist
into
push
xchg
cmps
jo
cmp
sub
arpl
push
out
adc
(bad)
(bad)
push
or
call
adc
cmps
test
mov
sub
rol
dec
iret
adc
adc
mov
fadd
clc
push
cmp
call
cmps
dec
sbb
mov
mov
mov
popa
mov
push
push
and
xlat
add
and
imul
cli
inc
pop
jae
and
lock
inc
sbb
xchg
cmp
or
push
adc
ror
popf
(bad)
(bad)
(bad)
call
iret
inc
repnz
cmp
inc
gs
sub
(bad)
mov
ret
dec
xchg
rcr
inc
retf
sahf
push
jmp
(bad)
(bad)
inc
(bad)
stos
push
daa
es
(bad)
fidiv
out
jns
fisttp
shr
repnz
daa
xchg
or
and
(bad)
(bad)
(bad)
(bad)
jmp
mov
arpl
ror
add
popa
lahf
fs
mov
inc
jecxz
push
inc
loop
in
(bad)
(bad)
call
pop
pop
ret
test
add
arpl
test
and
add
xor
out
xchg
pop
loopne
push
mov
and
test
fsubr
bound
xchg
fisub
jno
jae
lods
add
and
fadd
call
push
add
xchg
mov
mov
cli
inc
add
std
add
daa
or
xor
rep
sbb
cmp
mov
lods
push
jae
jge
stos
cdq
daa
cs
push
outs
cli
(bad)
jmp
les
adc
stc
pop
cmps
lea
sbb
pop
sub
(bad)
jmp
pop
pushf
jne
in
dec
dec
push
mov
xchg
sbb
pop
aaa
hlt
xchg
pop
sub
in
pop
adc
movs
(bad)
(bad)
(bad)
(bad)
jl
les
inc
sub
sbb
cdq
cwde
pop
repnz
mov
pushf
(bad)
jmp
mov
sbb
fiadd
in
mov
into
or
mov
add
pop
rcr
test
jo
in
mov
and
push
add
(bad)
(bad)
jmp
cmp
xchg
loope
xchg
stos
mov
aas
dec
imul
cs
imul
sti
mov
jmp
dec
or
adc
mov
jg
mov
or
data16
mov
sti
jl
add
lock
call
outs
xor
movs
out
(bad)
(bad)
inc
mov
adc
mov
or
(bad)
xor
movs
(bad)
sub
fcomp
pop
lock
call
sub
hlt
pop
hlt
fild
data16
mov
std
js
mov
push
push
(bad)
(bad)
(bad)
(bad)
jmp
cld
in
fdivr
loope
pushf
cmp
stos
pop
adc
test
xchg
loope
bound
jmp
(bad)
(bad)
push
mov
pop
sti
lods
xchg
inc
push
aad
or
loopne
add
push
fisub
(bad)
call
repnz
int3
jmp
lock
dec
mov
xchg
fnstsw
mov
xor
push
(bad)
(bad)
(bad)
push
retf
mov
aam
add
mov
push
retf
pop
mov
sbb
mov
call
xchg
sub
cmc
pop
ins
mov
in
or
mov
clc
es
pop
dec
hlt
push
repz
(bad)
(bad)
call
pop
out
xlat
ret
fisttp
ds
mov
mov
arpl
mov
jmp
mov
sbb
xchg
push
mov
or
mov
add
add
xor
in
sahf
mov
sbb
(bad)
(bad)
call
or
mov
jns
mov
mov
push
cmp
iret
dec
scas
mov
dec
(bad)
fmul
mov
adc
cmps
jne
dec
aad
xor
sub
into
(bad)
(bad)
(bad)
push
clc
rol
xchg
xor
nop
adc
mov
not
mov
mov
in
sahf
(bad)
(bad)
(bad)
(bad)
out
rcl
sub
push
bound
sar
cmp
rcl
and
and
xor
cli
(bad)
call
aad
iret
lods
daa
(bad)
loopne
fnsave
jg
pusha
cmc
lea
leave
cli
dec
lock
out
mov
setno
mov
es
jl
cdq
mov
lds
cdq
mov
ds
mov
(bad)
jmp
or
xchg
jl
(bad)
out
stc
test
pop
loope
popa
loopne
sar
adc
call
push
ret
xchg
inc
fisubr
cmp
xor
xchg
sbb
into
lock
pop
mov
retf
jnp
cmp
add
lock
mov
shl
mov
(bad)
(bad)
(bad)
inc
in
jnp
loop
xor
das
mov
or
jg
ins
cmps
sub
(bad)
(bad)
(bad)
call
pop
arpl
cmps
pop
adc
jne
out
jle
mov
cmp
ss
dec
fucomip
dec
fstp
xchg
mov
call
pop
xchg
jmp
int
je
pusha
mov
sbb
je
cmp
(bad)
jmp
push
jmp
pushf
jecxz
push
mov
lock
repnz
(bad)
(bad)
jmp
mov
mov
inc
mov
mov
loope
out
vpcmpeqb
(bad)
(bad)
(bad)
call
fimul
ret
outs
out
push
outs
xchg
lea
sub
sub
stc
jge
push
(bad)
(bad)
rcr
inc
fimul
or
aaa
dec
cmp
add
or
jle
inc
ret
call
pop
cli
dec
jnp
jmp
mov
aas
adc
push
(bad)
push
xchg
outs
aas
call
mov
pop
fisttp
mov
(bad)
call
push
dec
pop
or
sbb
xchg
(bad)
(bad)
call
dec
pop
(bad)
pushf
push
mov
ins
rcl
fild
pop
mov
(bad)
(bad)
jmp
or
lods
data16
ss
scas
pop
pop
call
add
mov
mov
aaa
int3
jmp
call
dec
ret
mov
push
clc
fadd
enter
enter
pop
cmp
jmp
arpl
mov
fidivr
mov
loopne
xchg
test
(bad)
out
sub
(bad)
(bad)
call
pop
nop
jmp
mov
or
movs
sbb
imul
sbb
and
ret
(bad)
(bad)
fcom
cmp
xchg
mov
comiss
shl
lahf
pop
push
mov
jle
cmps
xchg
enter
mov
pop
fsubr
std
xchg
rcl
imul
xor
push
outs
test
xchg
xor
or
test
std
xor
and
mov
loop
call
push
invd
ror
call
repnz
cld
arpl
(bad)
(bad)
(bad)
dec
out
pusha
push
inc
aam
loope
mov
mov
scas
out
mov
xchg
sbb
jecxz
loop
add
(bad)
(bad)
call
mov
push
add
imul
pop
jbe
outs
pop
push
pushf
in
cmp
(bad)
xlat
les
and
(bad)
push
adc
xor
imul
mov
pop
jmp
cli
mov
scas
(bad)
(bad)
push
jne
ret
push
dec
lea
sub
(bad)
cs
add
cmc
sub
(bad)
(bad)
(bad)
inc
jg
cmp
pop
push
js
or
mov
aam
push
fwait
mov
cdq
or
(bad)
(bad)
(bad)
inc
cs
movs
fstp
push
jge
pop
call
sti
movs
mov
push
dec
ror
aaa
mov
aaa
pop
jae
(bad)
xlat
mov
mov
xor
inc
push
add
mov
push
popa
push
jno
add
add
rol
dec
fisttp
xchg
xor
ret
or
xor
cli
cmps
loope
int
(bad)
(bad)
jmp
mov
sbb
call
xor
sub
and
inc
stc
nop
(bad)
jmp
test
sbb
mov
movs
xor
push
or
mov
inc
push
or
bound
in
fisttp
pushf
mov
std
lahf
loopne
iret
loope
sbb
data16
mov
call
(bad)
pop
pop
mov
cdq
retf
cmp
cmc
iret
push
addr16
(bad)
push
jb
leave
pop
inc
mov
je
dec
test
inc
pop
ss
or
(bad)
(bad)
jg
xor
jbe
cmps
xor
call
sahf
hlt
mov
in
push
push
in
(bad)
mov
push
or
lahf
sub
fimul
push
xor
repz
dec
adc
je
jae
arpl
jmp
(bad)
outs
popa
add
mov
les
fcmovnb
pop
push
jle
mov
imul
out
pop
jecxz
pop
and
mov
lock
lahf
fwait
dec
repz
fldcw
fimul
push
outs
clc
inc
call
mov
popa
or
pushf
adc
pusha
div
call
(bad)
(bad)
(bad)
fisubr
mov
xor
test
lock
fwait
lods
lahf
jae
xchg
idiv
call
(bad)
shl
and
and
(bad)
push
aaa
pop
(bad)
pop
test
add
icebp
jae
inc
movs
dec
js
ret
aam
movs
call
mov
jbe
test
pop
aam
sub
cmp
jg
or
lock
push
popa
add
(bad)
(bad)
dec
inc
add
adc
mov
pop
les
out
mov
sub
(bad)
(bad)
call
push
xchg
into
sub
int3
or
loopne
retf
push
mov
sahf
mov
test
dec
mov
(bad)
(bad)
(bad)
(bad)
stc
lahf
pop
movs
nop
cli
mov
xor
clc
pushf
in
push
mov
mov
(bad)
(bad)
movs
add
jmp
adc
inc
sbb
ins
jns
sub
stos
repz
ins
ret
dec
pop
aad
(bad)
(bad)
mov
jl
add
repz
pop
shr
into
(bad)
enter
test
dec
hlt
(bad)
(bad)
jmp
sti
loopne
addr16
std
scas
icebp
jbe
add
add
push
cmp
jbe
std
(bad)
fbstp
xor
mov
xchg
xchg
cmp
cld
cmps
mov
inc
cld
call
jmp
mov
div
dec
pop
cwde
cmp
sbb
std
(bad)
(bad)
jg
rol
push
jmp
mov
dec
cmp
jmp
jmp
xor
stos
(bad)
call
sbb
and
mov
jmp
inc
pop
or
(bad)
(bad)
jmp
adc
nop
sub
jne
sub
inc
jg
fs
aas
in
int
mov
in
pop
(bad)
call
inc
js
stc
in
gs
xor
push
inc
jb
(bad)
jmp
add
xor
rcl
xor
out
(bad)
push
in
loop
cwde
mov
dec
push
(bad)
(bad)
dec
(bad)
(bad)
xlat
inc
push
mov
je
aaa
push
or
std
(bad)
(bad)
(bad)
jmp
retf
add
sub
sbb
pop
je
ret
or
jmp
adc
inc
dec
mov
call
pop
pop
cmpxchg
add
lods
push
icebp
adc
cmp
jecxz
mov
or
push
pop
xchg
sub
in
(bad)
(bad)
(bad)
call
push
sti
xchg
popa
rcl
or
or
cmps
fdivr
loop
dec
pop
pop
pusha
push
inc
sbb
(bad)
(bad)
inc
(bad)
shl
pusha
nop
xchg
mov
mov
mov
mov
xchg
pop
xchg
jg
(bad)
call
idiv
fucomp
sub
scas
jmp
test
call
push
push
push
imul
add
fmul
cdq
imul
(bad)
dec
jnp
cs
push
popa
pusha
arpl
(bad)
(bad)
jmp
push
push
xor
icebp
clc
push
(bad)
jns
sbb
mov
jno
fnclex
outs
push
(bad)
mov
ret
and
push
adc
stc
or
daa
cmc
or
add
aas
les
push
adc
xor
xor
inc
scas
sub
or
(bad)
mov
ins
imul
rcr
mov
cli
popa
out
mov
mov
xchg
repnz
(bad)
(bad)
(bad)
push
sub
jmp
xchg
pop
adc
inc
cmp
or
cmp
(bad)
in
(bad)
in
xchg
push
mov
(bad)
(bad)
pushf
xchg
push
jae
xor
pop
mov
mov
adc
xor
inc
add
nop
std
fadd
in
aas
(bad)
(bad)
(bad)
jmp
outs
ret
and
retf
leave
dec
push
call
sbb
inc
pop
xor
xchg
sar
xor
ret
(bad)
(bad)
(bad)
call
aaa
lds
lea
mov
movs
sub
adc
fcom
dec
nop
xlat
mov
(bad)
(bad)
call
mov
pushf
popf
sbb
cli
mov
add
push
jge
jp
fs
ficom
loopne
dec
inc
pop
pop
sti
aaa
repz
cmps
lock
inc
or
aam
clc
jg
aaa
out
loop
imul
imul
inc
and
add
mov
sub
vlddqu
and
mov
call
push
int3
add
xor
test
int3
jle
ins
push
movs
fsub
adc
dec
xchg
punpcklwd
lods
shl
inc
xchg
adc
fwait
mov
mov
xchg
scas
lods
popf
sub
call
loopne
mul
in
cwde
hlt
fwait
mov
xor
mov
out
(bad)
push
rcl
cli
(bad)
push
out
and
std
ins
into
popf
lds
(bad)
push
inc
je
pop
xor
call
stos
xchg
nop
mov
cld
(bad)
call
test
adc
fst
jp
fadd
jmp
sahf
mov
pop
push
mov
ins
call
ret
nop
dec
fist
xor
(bad)
(bad)
(bad)
call
inc
and
mov
jmp
cmp
test
mov
mov
push
cmps
retf
loopne
add
pop
(bad)
call
bound
add
cmp
mov
ja
in
fisub
fwait
lahf
inc
mov
pop
xchg
dec
ror
loop
mov
or
(bad)
jmp
test
fwait
call
adc
mov
mov
xor
pop
loopne
lock
mov
icebp
test
fwait
(bad)
jecxz
dec
hlt
repnz
cmp
jne
jecxz
push
mov
cmp
inc
xor
cmps
pushf
arpl
into
icebp
jecxz
xor
and
sti
rol
gs
inc
enter
push
cmp
dec
pop
jmp
xchg
enter
gs
jbe
dec
lds
lds
(bad)
(bad)
(bad)
jmp
mov
mov
ret
cmp
dec
xchg
inc
mov
icebp
adc
add
push
push
into
cmp
xchg
ins
pusha
(bad)
(bad)
jmp
out
dec
mov
retf
inc
iret
int
jge
cdq
mov
out
ror
or
stc
fcom
cmp
(bad)
call
cmp
adc
push
fld
and
push
cmp
dec
imul
(bad)
(bad)
call
fs
cmp
pop
dec
(bad)
ds
mov
outs
pusha
fwait
add
mov
mov
(bad)
jmp
scas
les
pop
jle
sahf
xchg
dec
mov
jbe
adc
test
and
das
cli
xchg
mov
loope
leave
mov
scas
dec
iret
les
and
dec
stos
fs
mov
jmp
adc
sahf
aad
dec
sahf
mov
mov
dec
into
dec
(bad)
(bad)
cmp
int
adc
inc
fwait
push
gs
dec
mov
(bad)
arpl
ins
or
call
loopne
jno
cld
mov
fiadd
in
neg
push
sbb
cmp
push
sti
jmp
rcr
sti
data16
stc
fcmovu
mov
int
repnz
(bad)
(bad)
(bad)
fadd
mov
shl
aad
push
test
fnsave
pop
int
aam
test
pop
into
dec
add
xchg
dec
jle
ins
dec
scas
mov
and
js
test
je
cmp
jecxz
jmp
lahf
xor
jne
xchg
pop
cmp
adc
xor
mov
outs
cmp
or
mov
push
jns
mov
shr
mov
loope
leave
adc
or
(bad)
(bad)
(bad)
push
cld
js
add
and
xor
loop
movs
dec
cmps
mov
jl
jl
(bad)
(bad)
(bad)
fild
pop
cmp
lahf
mov
mov
das
sbb
stc
stos
dec
(bad)
(bad)
(bad)
call
xchg
fdiv
call
movs
enter
and
mov
and
or
aaa
pop
cmp
not
dec
xor
fmul
or
fild
jmp
lods
popa
sbb
mov
jmp
(bad)
jle
jns
aam
(bad)
xor
mov
movs
sar
popf
lock
jp
out
jbe
push
(bad)
(bad)
(bad)
call
(bad)
shr
leave
cmps
pop
ds
push
inc
daa
push
xchg
mov
test
clc
(bad)
aas
mov
popf
or
popf
or
add
pop
xchg
repz
and
(bad)
call
xchg
stc
xor
loope
adc
pop
or
(bad)
(bad)
push
(bad)
sbb
sub
push
cmp
into
and
fdiv
cdq
and
(bad)
(bad)
(bad)
call
mov
xchg
pop
mov
cmps
movs
push
gs
mov
pop
mov
ret
push
fld
(bad)
call
or
jge
jns
sub
mov
dec
in
dec
in
dec
mov
stos
int3
cwde
call
mov
push
xlat
sub
daa
adc
into
loopne
mov
xor
inc
(bad)
(bad)
(bad)
call
movnti
cmp
jbe
add
(bad)
sub
dec
sbb
xor
(bad)
cmc
sbb
(bad)
mov
add
and
fstp
cwde
push
mov
clc
mov
adc
call
push
aaa
iret
lahf
sbb
out
jno
hlt
push
js
(bad)
fwait
test
aaa
retf
inc
loopne
ins
or
(bad)
call
pop
call
pop
dec
mov
adc
call
cmp
aad
in
jmp
ret
pusha
and
mov
sahf
sub
(bad)
(bad)
out
xchg
(bad)
mov
and
push
call
mov
pop
(bad)
jmp
lods
lock
loope
xor
cli
sbb
dec
mov
das
scas
sbb
outs
xor
sar
(bad)
push
mov
xchg
aaa
ffree
or
push
push
fcom
mov
(bad)
(bad)
jmp
mov
sub
not
push
pop
pop
xchg
in
push
fwait
xchg
jecxz
pop
or
push
mov
or
call
mov
scas
dec
into
jmp
hlt
add
std
lock
jmp
push
jl
mov
or
inc
out
(bad)
(bad)
(bad)
inc
jmp
jle
inc
sbb
clc
call
or
dec
xchg
rcl
inc
outs
and
jp
xchg
call
mov
(bad)
clc
push
movs
nop
test
(bad)
(bad)
(bad)
(bad)
sti
push
test
pop
ins
js
das
stos
push
sub
popf
and
push
test
call
jg
loope
stos
(bad)
(bad)
(bad)
(bad)
cli
scas
clc
cmp
iret
aad
pushf
stc
out
enter
xchg
stos
pop
out
jmp
cld
push
int3
fisubr
xlat
(bad)
(bad)
(bad)
call
mov
sub
sbb
mov
jge
and
jle
dec
int3
sti
(bad)
(bad)
(bad)
jmp
cmp
sub
jl
repz
dec
cmp
xchg
adc
sahf
int
cs
fs
(bad)
(bad)
jmp
mov
push
xchg
jle
scas
mov
cs
inc
dec
mov
pusha
mov
icebp
popa
in
(bad)
(bad)
(bad)
call
repz
test
push
dec
cmc
cmp
push
int3
repnz
jl
test
ficomp
es
(bad)
(bad)
(bad)
dec
adc
gs
ret
or
adc
repnz
mov
out
push
adc
xchg
test
inc
outs
add
cmp
jnp
sbb
test
mov
add
std
push
call
dec
std
cmps
cmps
(bad)
mov
cmps
pushf
in
add
mov
inc
(bad)
(bad)
(bad)
push
and
addr16
jmp
call
adc
add
inc
mov
jecxz
(bad)
dec
and
gs
mov
pop
push
not
xchg
inc
pop
jo
xor
push
and
(bad)
(bad)
mov
es
push
div
sub
jns
les
mov
add
mov
push
je
push
pop
inc
push
xor
jbe
and
ins
push
sub
xchg
jne
(bad)
(bad)
(bad)
jmp
push
or
mov
sbb
fdivp
loop
sub
and
mov
(bad)
cmp
(bad)
ds
cmp
outs
cmp
jl
cdq
inc
ss
(bad)
(bad)
mov
mov
or
loopne
fisttp
popa
jo
dec
add
mov
stos
push
cs
push
sbb
(bad)
(bad)
(bad)
call
sub
ja
movs
adc
push
push
jge
mov
ds
or
ja
adc
or
out
(bad)
(bad)
(bad)
stc
and
cli
mov
cs
adc
repz
sub
or
jmp
(bad)
dec
push
xor
add
sub
mov
inc
mov
(bad)
(bad)
dec
pcmpeqw
push
add
push
xor
(bad)
(bad)
call
shr
iret
gs
stc
fwait
(bad)
jge
xchg
cmp
(bad)
sahf
sar
mov
(bad)
(bad)
(bad)
push
push
pop
push
xchg
add
cmp
cmps
ror
mov
pop
jle
in
mov
aad
jmp
push
arpl
dec
aam
iret
mov
nop
jns
out
cmp
(bad)
dec
mov
cs
arpl
push
js
shr
cdq
xlat
dec
inc
cmp
cmp
(bad)
(bad)
fsub
mov
inc
iret
int3
sub
jb
or
and
in
fnstsw
jmp
(bad)
push
(bad)
inc
aad
fsub
fdiv
bound
sbb
xchg
(bad)
mov
sub
hlt
xor
mov
cs
(bad)
(bad)
mov
js
repz
in
push
in
arpl
xchg
ss
jbe
out
shl
ss
arpl
(bad)
(bad)
jmp
or
dec
les
dec
mov
jno
jnp
or
cmp
dec
(bad)
jmp
mov
xchg
adc
jecxz
and
imul
scas
cmps
outs
mov
add
(bad)
out
clc
(bad)
leave
div
stos
xor
data16
cmp
cmps
out
(bad)
jmp
dec
movs
fwait
jns
xor
cmp
push
mov
jle
cmp
push
lock
popf
jmp
push
fwait
cmps
into
aad
ds
cmp
(bad)
iret
(bad)
lock
pop
cmps
icebp
inc
bound
leave
xchg
jne
call
(bad)
push
je
call
retf
ret
call
iret
repz
push
mov
loopne
std
mov
dec
call
scas
imul
fdiv
scas
add
(bad)
(bad)
(bad)
inc
in
mov
fsub
add
not
mov
sbb
push
iret
pop
adc
aad
(bad)
(bad)
(bad)
call
jbe
popf
dec
adc
in
add
sbb
sbb
mov
bound
leave
(bad)
push
xchg
(bad)
sub
sbb
mov
fiadd
add
fdivr
add
dec
(bad)
(bad)
(bad)
push
jmp
imul
pop
jp
fwait
pop
xchg
or
cmp
dec
dec
and
(bad)
(bad)
inc
outs
dec
xor
aaa
cmp
xor
push
loop
sub
and
popf
rol
out
out
add
(bad)
(bad)
(bad)
(bad)
mov
fild
arpl
add
mov
push
loopne
outs
sahf
out
add
jmp
mov
cld
(bad)
call
push
lea
cmp
inc
mov
mov
nop
aas
pop
(bad)
out
clc
call
out
adc
push
xor
imul
repnz
neg
cli
xor
(bad)
(bad)
call
std
ds
je
xlat
movs
adc
fwait
icebp
cdq
mov
scas
mov
into
push
pop
and
call
or
and
stc
ins
jbe
mov
xchg
mov
(bad)
(bad)
jg
es
or
repnz
ret
pop
add
cpuid
loopne
xor
dec
add
(bad)
(bad)
(bad)
push
push
les
sub
jge
in
pop
(bad)
imul
lock
xor
je
sbb
aam
pop
loop
call
xor
or
jnp
mov
sbb
jle
loopne
push
sub
ror
pushf
frstor
cmc
jmp
stos
fwait
mov
stos
in
pop
dec
(bad)
(bad)
(bad)
dec
(bad)
lods
mov
addr16
jmp
cwde
shl
(bad)
inc
or
icebp
imul
mov
jle
jmp
cld
inc
retf
test
sub
ja
(bad)
jl
mov
mov
je
push
sbb
mov
mov
sub
cmp
(bad)
out
clc
push
push
sub
retf
lods
fwait
inc
xor
cwde
push
push
cmp
(bad)
push
pop
out
ins
aas
push
imul
mov
test
enter
call
cmp
aaa
pop
pusha
into
add
ds
inc
clc
mov
jecxz
lahf
test
xor
ins
cmp
inc
xor
cwde
push
icebp
daa
outs
add
je
mov
ror
cmp
jp
or
(bad)
(bad)
(bad)
jmp
jle
shl
int
in
aas
push
in
push
and
stc
adc
mov
or
(bad)
(bad)
inc
fild
out
fidivr
xor
push
test
arpl
sar
push
xlat
aas
das
sbb
imul
fdivr
inc
jne
dec
aas
jmp
movs
idiv
(bad)
(bad)
(bad)
jmp
hlt
in
fdivr
jo
dec
push
jns
mov
jns
ds
jbe
lods
sbb
rol
scas
adc
iret
popa
popa
out
mov
inc
shl
loopne
mov
ja
aaa
std
(bad)
call
sub
adc
sbb
into
xlat
fabs
add
dec
in
inc
jg
in
(bad)
(bad)
(bad)
dec
dec
add
and
lods
add
dec
xchg
jge
cdq
(bad)
(bad)
(bad)
dec
popf
out
sti
rcl
and
nop
and
shl
push
push
cmp
call
(bad)
(bad)
jmp
cmp
jmp
bound
jbe
ret
(bad)
neg
sahf
push
test
cmp
(bad)
(bad)
call
pop
dec
test
repnz
sbb
stc
xchg
call
dec
jmp
scas
clc
mov
das
lahf
xor
mov
js
inc
mov
(bad)
jmp
mov
push
pop
in
js
pop
enter
jmp
jne
jae
aad
(bad)
(bad)
jmp
das
test
stos
stos
xchg
jge
mov
xchg
push
cdq
push
sbb
push
call
aaa
in
pusha
dec
dec
mov
and
jno
out
shr
into
and
(bad)
(bad)
call
ins
mov
push
xchg
sub
push
les
retf
sbb
mov
xchg
aad
(bad)
(bad)
loopne
dec
fistp
imul
repnz
sub
sub
mov
shl
je
(bad)
(bad)
push
pop
mov
sbb
cmp
test
dec
add
adc
xchg
lods
test
jae
jo
(bad)
(bad)
(bad)
jp
clc
push
(bad)
fsub
lock
or
jmp
sub
add
push
cld
(bad)
jmp
or
leave
jbe
mov
pop
mov
fst
repz
(bad)
(bad)
push
jl
iret
jmp
hlt
jge
fiadd
daa
jae
in
mov
fst
(bad)
(bad)
(bad)
(bad)
fdiv
inc
ret
inc
(bad)
das
inc
pop
fstp
ss
jle
jae
cmp
push
inc
mov
push
sub
dec
inc
es
(bad)
mov
enter
xor
in
jg
(bad)
push
cmp
add
repz
xchg
and
cwde
in
nop
shr
(bad)
call
(bad)
in
and
addr16
nop
mov
or
mov
sbb
(bad)
jg
lds
mov
frstor
xor
mov
ret
in
sbb
push
(bad)
(bad)
(bad)
jmp
inc
push
cmp
in
or
gs
or
xor
(bad)
icebp
dec
arpl
xchg
fmul
call
jp
ret
cwde
and
bound
sti
and
jo
jp
xchg
lods
jnp
sahf
mov
jmp
mov
and
cmp
add
in
jecxz
movs
fcmovnbe
cli
in
xchg
jnp
(bad)
(bad)
(bad)
jmp
cmps
out
mov
xchg
adc
int
mov
scas
pop
push
xor
nop
(bad)
(bad)
(bad)
(bad)
ficom
es
push
test
mov
jl
xor
rcr
sub
(bad)
(bad)
call
in
loopne
mov
dec
pop
icebp
jecxz
mov
xchg
mov
icebp
jmp
xchg
cdq
(bad)
xor
cmps
mov
push
pop
cmp
mov
inc
dec
cld
inc
pop
jb
in
cld
mov
push
push
arpl
mov
ja
push
jg
pop
pop
xlat
(bad)
call
cmp
jmp
add
sbb
push
loope
stc
stc
xor
dec
xchg
loop
and
out
xlat
pop
cld
jmp
ss
iret
jmp
mov
fist
std
mov
jg
push
out
not
imul
cmp
or
(bad)
(bad)
(bad)
jmp
inc
jbe
add
add
cs
hlt
or
dec
and
pop
ja
jecxz
jmp
nop
mov
scas
fidiv
in
mov
movs
lock
addr16
or
mov
mov
jb
mov
fdivr
inc
mov
jnp
fcmovbe
ror
fptan
test
(bad)
mov
sahf
fcmovne
scas
in
jmp
scas
mov
sub
(bad)
(bad)
(bad)
dec
push
retf
outs
cmp
outs
call
adc
mov
loope
shl
loopne
and
(bad)
(bad)
(bad)
call
cdq
or
adc
mov
mov
popa
sub
popa
outs
adc
cmp
call
cld
scas
fs
dec
sbb
pop
mov
add
xchg
daa
test
(bad)
(bad)
(bad)
dec
leave
sbb
(bad)
call
out
retf
ins
mov
mov
enter
in
test
mov
jmp
out
aam
mov
lods
mov
test
jns
pop
jge
mov
xor
hlt
sbb
in
fstp
or
adc
add
aas
and
rol
mov
pop
inc
dec
adc
call
push
shl
or
mov
(bad)
push
cld
call
sbb
xchg
xchg
jecxz
xchg
or
and
(bad)
(bad)
call
cmp
movs
jl
(bad)
cmp
dec
xor
add
or
adc
(bad)
into
clc
(bad)
(bad)
jg
and
test
(bad)
out
mov
arpl
fwait
or
inc
cmp
aad
int3
add
inc
mov
retf
imul
mov
sbb
(bad)
jg
mov
ret
mov
jg
rcr
sub
xor
jns
aam
mov
(bad)
(bad)
(bad)
cmp
cld
fmul
cld
mov
movs
rcl
pop
fnstcw
sbb
ins
cmc
(bad)
(bad)
mov
scas
mov
xor
jbe
(bad)
ja
fidiv
loope
jg
xchg
xor
(bad)
(bad)
inc
mov
cmp
scas
js
add
ficomp
inc
pushf
(bad)
(bad)
(bad)
call
add
jp
mov
call
fistp
sub
loope
jb
ret
inc
(bad)
jmp
(bad)
push
repnz
sub
cmp
adc
int
arpl
pop
mov
call
imul
jmp
fld1
xor
push
push
out
push
lds
pushf
cwde
add
dec
daa
push
out
mov
out
loop
(bad)
(bad)
(bad)
jmp
in
scas
into
sub
pop
cmp
xchg
ja
adc
ins
clc
in
ficomp
xchg
(bad)
(bad)
(bad)
(bad)
js
sub
out
dec
mov
cmp
mov
je
out
in
enter
push
xchg
(bad)
aaa
mov
sub
mov
sub
or
nop
(bad)
(bad)
(bad)
jmp
sbb
in
push
mov
hlt
shr
mov
test
in
js
nop
ja
or
push
fistp
enter
push
push
add
sar
push
mov
lods
js
in
xchg
xchg
mov
(bad)
(bad)
jmp
test
cmc
dec
mov
aas
int3
cld
retf
mov
inc
(bad)
sub
xchg
leave
(bad)
dec
repnz
adc
lds
(bad)
(bad)
(bad)
inc
jl
adc
aad
into
jp
shl
ds
dec
push
pop
outs
dec
mov
inc
mov
(bad)
(bad)
(bad)
jmp
out
pop
adc
mov
mov
adc
mov
inc
ficomp
xchg
mov
jnp
ja
mov
loop
(bad)
(bad)
dec
jo
cmp
call
in
shl
inc
dec
cmp
dec
sbb
and
(bad)
push
test
enter
jmp
test
fs
mov
push
not
out
(bad)
jne
loopne
mov
mov
and
(bad)
push
aam
inc
jbe
mov
popf
sbb
sub
not
(bad)
(bad)
(bad)
jmp
rcr
cmp
aas
ror
sets
cld
scas
sbb
mov
stos
out
xchg
dec
mov
jmp
sbb
cmc
(bad)
jmp
cli
cmp
and
lahf
jg
jge
stc
das
pop
pop
pop
jne
dec
loopne
dec
pop
push
mov
(bad)
(bad)
(bad)
(bad)
clc
std
mul
ud1
or
mov
xchg
jae
and
and
aas
jp
cdq
idiv
(bad)
(bad)
(bad)
in
xor
loope
sbb
adc
cwde
dec
xor
in
mov
push
cmc
sbb
cli
dec
stos
pop
fs
imul
or
(bad)
and
(bad)
(bad)
out
jle
xchg
pop
pop
(bad)
popa
bound
aad
out
ja
xchg
fistp
push
pop
sub
inc
movs
jae
mov
(bad)
int
pusha
loopne
fxch
mov
dec
adc
(bad)
(bad)
call
jne
fwait
outs
push
inc
mov
push
out
inc
fistp
pop
call
rcl
sbb
ret
cmp
jne
ja
fbld
sub
shl
dec
(bad)
(bad)
(bad)
jmp
push
in
jecxz
inc
push
adc
inc
push
mov
dec
lock
mov
test
(bad)
(bad)
(bad)
(bad)
cld
adc
sbb
mov
(bad)
mov
pop
adc
(bad)
add
jmp
movs
xor
pop
js
cwde
sub
adc
xchg
js
dec
nop
mov
rcl
inc
xchg
fdivr
(bad)
das
dec
jmp
pop
std
push
inc
jmp
push
cmp
(bad)
push
xchg
jmp
xchg
adc
mov
jns
add
sbb
push
dec
mov
xchg
call
hlt
stos
pusha
stc
hlt
xor
sub
jp
push
dec
pop
out
mov
shr
(bad)
(bad)
(bad)
call
ror
sub
(bad)
outs
cli
and
mov
frstor
xor
jmp
jmp
fsub
mov
rol
(bad)
psubq
(bad)
dec
sahf
mov
(bad)
fs
push
ret
mov
daa
mov
(bad)
(bad)
(bad)
jg
jmp
push
aad
and
icebp
xchg
dec
push
in
out
lods
jmp
aad
push
lock
(bad)
(bad)
push
inc
mul
jns
popa
inc
adc
pusha
sbb
dec
movs
aad
push
fstp
outs
cmps
and
sar
push
aad
loope
cmp
fmul
pop
pop
ins
lahf
xchg
fsubr
aaa
test
out
mov
js
icebp
pop
hlt
sbb
mov
push
shr
icebp
cmc
(bad)
mov
sub
(bad)
call
je
dec
gs
aad
cmp
nop
dec
sbb
in
test
lods
sub
fidivr
lea
(bad)
pop
mov
adc
and
inc
(bad)
(bad)
jg
adc
sar
jecxz
loop
jnp
push
xor
xor
aam
(bad)
fcomip
dec
ds
test
dec
rcr
into
cmp
dec
push
cwde
(bad)
and
fwait
push
(bad)
(bad)
(bad)
call
movs
jno
ds
jo
push
imul
and
inc
or
outs
dec
nop
(bad)
(bad)
(bad)
jmp
inc
daa
xchg
inc
adc
inc
adc
push
outs
fist
add
mov
idiv
(bad)
(bad)
(bad)
cmp
pop
enter
mov
ret
movs
xor
adc
mov
imul
data16
inc
movs
lahf
fmulp
sbb
shr
out
std
adc
loopne
cmc
sub
xchg
(bad)
(bad)
(bad)
inc
and
cdq
push
rol
push
pop
or
dec
inc
sbb
inc
jno
dec
and
call
pop
cli
xor
xor
(bad)
xchg
stos
mov
jge
sbb
rcl
dec
mov
(bad)
jmp
inc
ret
and
xchg
stos
jecxz
test
mov
sbb
(bad)
(bad)
jmp
sbb
sbb
mov
ret
mov
jnp
(bad)
int3
push
jmp
ret
adc
and
lods
(bad)
jmp
stc
fiadd
cmp
pop
addr16
lods
xchg
out
jo
ja
(bad)
(bad)
jmp
add
xchg
and
mov
xchg
sti
jb
aad
push
jl
call
(bad)
(bad)
(bad)
mov
idiv
jo
sbb
aam
lea
adc
jle
addr16
lahf
add
(bad)
(bad)
jmp
sbb
sub
(bad)
in
sbb
outs
mov
jnp
adc
mov
movs
mov
(bad)
(bad)
(bad)
fiadd
jecxz
mov
push
push
mov
sar
pop
inc
jo
jmp
int
xor
sar
mov
jg
push
or
push
test
call
in
cli
sbb
or
cld
mov
ins
mov
gs
(bad)
(bad)
call
cmps
xor
and
add
pop
lahf
dec
imul
loope
xchg
mov
(bad)
out
cli
push
ds
ja
mov
dec
xlat
jg
dec
mov
cmp
rcl
push
adc
iret
(bad)
(bad)
or
pop
cmp
jne
div
(bad)
icebp
mov
jb
out
ret
test
aam
mov
mov
fild
clts
movs
push
cmp
cli
sub
clc
and
inc
push
sbb
xchg
out
xor
or
call
cmp
int
xor
movs
cmp
(bad)
and
inc
outs
(bad)
(bad)
(bad)
(bad)
jmp
les
retf
dec
lock
(bad)
(bad)
jle
out
call
cmp
cli
add
push
push
inc
xor
(bad)
sti
pop
test
add
retf
(bad)
(bad)
(bad)
inc
in
jns
mov
sbb
add
sub
mov
test
ret
fadd
(bad)
(bad)
(bad)
dec
into
test
stos
push
mov
jge
push
and
mov
and
mov
icebp
call
pushf
out
lock
arpl
adc
add
(bad)
js
mov
jg
or
jne
xor
mov
add
xor
or
data16
mov
stos
mov
scas
cmps
sbb
xchg
sub
jne
mov
jg
scas
xlat
adc
pop
or
scas
jae
xor
mov
movs
sub
sbb
dec
sar
outs
adc
sbb
jo
inc
xchg
cmp
push
sahf
or
mov
es
fcmovu
add
lock
xchg
xchg
sub
mov
ja
adc
push
popf
push
or
or
das
mov
retf
cmp
stos
retf
sar
outs
pop
aam
mov
aam
cli
lea
or
jmp
mov
sub
in
push
xor
cmp
int
mov
add
(bad)
cmp
cmp
add
jmp
or
adc
movs
inc
pushf
mov
dec
push
dec
(bad)
sbb
xor
bnd
dec
(bad)
dec
lock
xchg
cmp
test
cmp
movhps
(bad)
shl
scas
les
mov
mov
hlt
cmp
push
aad
xor
sbb
(bad)
(bad)
(bad)
fdiv
mov
pop
dec
sbb
dec
pusha
enter
cmp
rol
fcom
jo
xor
(bad)
(bad)
(bad)
mov
(bad)
into
ins
js
jbe
aaa
aad
out
pop
or
dec
push
fdivr
bound
xor
jmp
xor
jbe
mov
or
ins
or
rcl
lea
jmp
es
sub
fwait
cmp
movs
push
mov
outs
call
ins
xor
dec
jmp
fcmovnb
addr16
cmp
je
jle
jns
cmps
pushf
(bad)
mov
loope
push
adc
push
stos
icebp
push
dec
enter
in
sbb
and
jno
(bad)
(bad)
jg
mov
nop
xchg
and
jle
push
inc
(bad)
push
es
cmp
ret
outs
mov
jl
xchg
cmp
in
jge
out
sub
xchg
or
ds
(bad)
call
shr
jg
(bad)
lods
mov
idiv
inc
mov
dec
pop
cwde
jl
retf
mov
sub
(bad)
(bad)
jmp
jno
ins
mov
test
mov
sbb
in
fcomp
lods
xchg
push
mov
shl
dec
push
jmp
js
mov
mov
(bad)
call
jno
xor
cmp
cwde
hlt
lahf
call
jnp
inc
cmc
je
call
lea
(bad)
(bad)
(bad)
jmp
fstp
and
leave
cmp
mov
hlt
test
comiss
scas
and
dec
(bad)
(bad)
(bad)
inc
ffreep
xor
or
push
rep
xor
ret
jmp
jmp
imul
jns
jbe
push
jne
inc
in
jae
xchg
nop
stc
movs
test
mov
stos
mov
dec
jg
(bad)
dec
fcom
retf
aas
mov
adc
aaa
or
adc
mov
(bad)
dec
ds
pop
push
fdiv
loop
or
sar
mov
jmp
sbb
mov
lods
add
push
mov
lods
aad
cmp
xchg
jg
(bad)
(bad)
call
test
pusha
dec
lods
test
dec
mov
pop
lods
sub
int3
stc
push
ret
push
fdiv
cmp
sub
rcl
mov
mov
scas
jnp
xor
xchg
(bad)
mov
xor
loop
dec
sti
pop
icebp
aaa
scas
cli
(bad)
jmp
jecxz
add
in
dec
mov
sub
movs
test
sub
pop
mov
mov
repnz
jbe
pop
cmps
retf
(bad)
(bad)
(bad)
mov
test
arpl
fs
jmp
jb
sub
outs
pop
xor
scas
and
xlat
add
mov
or
sbb
pop
sbb
and
into
(bad)
(bad)
(bad)
call
or
in
and
push
and
mov
and
shr
stos
scas
push
shl
(bad)
(bad)
(bad)
push
push
mov
inc
xor
xor
adc
dec
mov
jl
jae
fs
or
shl
(bad)
ds
rol
test
fdiv
(bad)
(bad)
in
jmp
adc
repz
pop
xor
sar
(bad)
(bad)
jmp
les
fucom
dec
push
dec
jb
dec
pop
rcl
pop
mov
hlt
loop
(bad)
inc
mov
(bad)
(bad)
push
repz
(bad)
xlat
dec
cmp
mov
pop
(bad)
(bad)
(bad)
inc
call
mov
add
icebp
lds
rcl
stc
sub
cmp
(bad)
(bad)
(bad)
jmp
lds
adc
enter
mov
in
int3
sbb
cli
ins
cmp
lock
mov
sbb
cmp
fbld
push
xchg
sub
cmps
or
pop
mov
jmp
hlt
(bad)
(bad)
call
sub
es
int
push
inc
call
sub
movs
imul
pop
clc
cmps
or
int
retf
adc
fwait
ds
es
mov
call
(bad)
push
ins
add
shl
hlt
out
das
mov
int
out
cmp
sub
mov
jmp
iret
sbb
fsubrp
out
xlat
aad
in
sar
(bad)
push
call
hlt
jp
cdq
push
bound
fst
adc
xchg
(bad)
inc
xchg
(bad)
lock
jbe
mov
pusha
js
cmp
nop
cmp
movs
(bad)
fwait
push
in
loope
(bad)
mov
cmp
sub
sub
xor
aaa
sub
inc
call
mov
retf
mov
ds
cli
jnp
call
xor
pop
jmp
cmp
or
mov
cmp
(bad)
mov
inc
inc
call
pop
jbe
daa
xor
(bad)
(bad)
(bad)
(bad)
dec
xchg
int3
jmp
sbb
mov
in
add
xchg
pop
mov
loope
(bad)
(bad)
push
popf
scas
or
enter
inc
dec
shl
les
xor
retf
(bad)
(bad)
(bad)
call
sbb
cmp
fnsave
sub
movs
mov
mov
jmp
(bad)
xchg
movs
push
jl
pop
shr
inc
inc
cmp
push
xor
cs
clc
jecxz
inc
dec
(bad)
(bad)
(bad)
(bad)
fnsave
repz
mov
out
es
and
fistp
cdq
iret
fcomp
jmp
cmp
fnstcw
xor
sbb
aaa
out
dec
je
fist
fdivr
repz
dec
jmp
(bad)
jmp
cmp
jbe
addr16
fsubr
add
ins
dec
and
aam
adc
push
test
(bad)
clc
add
add
dec
push
ror
mov
out
pop
popf
hlt
sub
mov
or
les
(bad)
(bad)
(bad)
mov
push
daa
(bad)
mov
mov
xchg
fs
jecxz
mov
sti
mov
dec
test
icebp
jb
mov
mov
daa
push
outs
mov
push
shr
cs
mov
sub
cmp
xor
xchg
loope
sub
xchg
cmp
into
ficom
push
dec
mov
into
add
ins
pop
imul
mov
cmp
jp
in
fdiv
jmp
xor
push
dec
outs
add
pop
mov
push
cld
mov
test
mov
sbb
ja
(bad)
(bad)
(bad)
cmp
xchg
xchg
jg
mov
cmp
movs
fisub
push
push
sbb
das
jecxz
cmc
cmp
bound
hlt
mov
int
mov
pop
loopne
push
xor
out
xlat
xchg
ss
lahf
mov
dec
data16
mov
(bad)
jmp
cmps
mov
jmp
loop
fucomip
int
push
xchg
push
sahf
mov
out
(bad)
cdq
push
push
mov
loop
jecxz
out
out
(bad)
inc
jmp
pop
sbb
(bad)
(bad)
dec
jecxz
jmp
cmp
mov
ror
(bad)
daa
int3
popa
idiv
dec
enter
dec
call
(bad)
jmp
mov
inc
loopne
mov
fsubr
mov
jge
pop
jno
mov
or
dec
or
add
mov
sub
mov
adc
sub
(bad)
fldenv
adc
outs
or
push
sbb
jae
(bad)
(bad)
call
mov
retf
jg
or
pop
stos
or
push
push
pop
add
pop
call
outs
mov
(bad)
(bad)
in
(bad)
cmp
in
mov
xchg
mov
mov
mov
sbb
fnstenv
(bad)
mov
cmp
dec
add
push
dec
xor
jmp
dec
inc
inc
xchg
leave
mov
scas
xchg
dec
jbe
(bad)
dec
mov
das
xchg
mov
loop
retf
(bad)
(bad)
(bad)
jmp
int3
jb
lods
inc
pop
xor
mov
mov
repnz
cmp
sahf
inc
pop
scas
out
jmp
push
push
int
cmp
adc
jecxz
and
imul
(bad)
inc
sub
lock
xchg
pop
xor
(bad)
ret
call
add
pop
inc
ins
(bad)
(bad)
(bad)
push
pop
sub
out
push
or
retf
cmp
(bad)
cmp
jo
loopne
adc
mov
stos
xor
mov
(bad)
(bad)
dec
arpl
aas
repnz
hlt
or
and
cdq
ins
aaa
and
mov
dec
imul
pop
push
test
shr
cwde
push
pop
dec
mov
add
loop
(bad)
call
dec
xor
mov
ret
test
repnz
stc
sar
(bad)
dec
aam
mov
pop
(bad)
cmp
xor
pop
mov
pop
ds
pushf
mov
mov
(bad)
(bad)
(bad)
call
cmp
arpl
lods
test
add
or
mov
xor
cmp
(bad)
(bad)
dec
fild
ds
add
inc
aam
jo
call
cwde
call
xor
(bad)
in
repz
jmp
aad
adc
mov
cwde
shr
(bad)
jmp
pop
cwde
xor
mov
cmp
cmp
sub
push
(bad)
scas
mov
fs
pop
daa
xchg
call
dec
sub
ins
mov
iret
cmp
inc
push
and
mov
(bad)
xchg
fcomp
es
cmp
sub
call
into
and
rcl
into
lahf
aaa
cli
ror
push
dec
sbb
sub
(bad)
jp
test
push
push
loope
mov
stc
aam
hlt
mov
(bad)
(bad)
(bad)
dec
inc
test
(bad)
retf
xchg
repnz
in
mov
data16
dec
adc
(bad)
(bad)
in
jno
pop
push
ins
and
or
movs
(bad)
call
imul
lock
outs
addr16
mov
jb
mov
xor
out
iret
xchg
jo
test
jmp
pop
addr16
add
(bad)
jg
fwait
jge
or
pop
into
loope
pop
jp
pop
mov
xchg
adc
cmp
xor
aad
cmp
xchg
inc
fs
dec
(bad)
movs
jp
inc
fnsave
push
(bad)
(bad)
(bad)
(bad)
jmp
sar
lea
hlt
std
js
rol
out
xchg
test
mov
stos
push
(bad)
call
pop
mov
stos
xor
loopne
add
sub
xchg
inc
ss
and
adc
fwait
(bad)
(bad)
(bad)
push
les
scas
xor
xor
js
and
mov
or
jae
sbb
mov
retf
cmps
add
push
aas
inc
shl
cmp
aad
icebp
mov
rol
(bad)
push
sub
mov
jmp
sahf
jb
out
and
(bad)
push
pop
push
cmc
arpl
int3
lods
aaa
push
xor
fist
pop
test
stos
(bad)
(bad)
(bad)
call
fist
cwde
sbb
cmp
mov
fnsave
mov
repz
imul
inc
(bad)
mov
(bad)
(bad)
jns
out
out
mov
push
sti
mov
push
fdivr
ret
dec
daa
cmp
sub
pop
int3
cmp
sti
(bad)
(bad)
(bad)
jmp
out
pop
jl
das
inc
push
lahf
mov
jno
cmps
jle
cmp
leave
pop
pop
xchg
int3
enter
adc
xlat
(bad)
dec
pushw
sub
add
mov
imul
add
pop
(bad)
(bad)
(bad)
inc
push
outs
sbb
imul
call
nop
aas
fbld
(bad)
(bad)
(bad)
dec
sbb
xchg
xor
mov
out
retf
shl
in
inc
or
addr16
push
mov
jnp
aaa
lods
clc
mov
fldenv
aas
ss
(bad)
out
mov
xchg
mov
or
fs
ins
sub
(bad)
call
push
(bad)
in
dec
shr
and
cmp
xor
out
pop
imul
movs
(bad)
imul
(bad)
(bad)
(bad)
out
jnp
push
loop
into
jge
adc
sub
retf
repz
dec
test
xchg
cmps
cmps
mov
scas
adc
call
cmp
int
cmp
dec
jl
mov
loopne
(bad)
mov
lods
jmp
dec
jge
fnstenv
push
fmul
inc
mov
cld
outs
ja
mov
nop
shr
repnz
pushf
push
adc
sub
(bad)
(bad)
(bad)
push
sbb
dec
adc
or
(bad)
leave
jae
dec
push
sub
and
loop
pop
icebp
lahf
mov
call
adc
sbb
(bad)
sti
sbb
xchg
or
mov
adc
(bad)
(bad)
fisubr
in
jnp
sti
dec
(bad)
(bad)
cmp
sub
hlt
pushf
fldcw
call
push
mov
stc
ds
dec
aaa
pop
or
jns
jmp
aaa
retf
loope
lock
clc
(bad)
(bad)
call
outs
call
iret
shr
stc
out
inc
jmp
jle
pushf
test
xlat
xchg
(bad)
(bad)
(bad)
fbstp
repnz
fisubr
out
and
inc
pop
jns
mov
sahf
inc
inc
jo
imul
(bad)
(bad)
dec
mov
mov
xchg
inc
pop
cmp
in
ds
mov
mov
mov
sub
or
cmp
pop
jge
sub
repz
(bad)
(bad)
(bad)
inc
lods
jp
cwde
push
out
ja
inc
xchg
fistp
cmp
sbb
(bad)
(bad)
fistp
out
pushf
xor
fwait
mov
dec
xchg
iret
adc
inc
(bad)
dec
xor
sub
xlat
mov
icebp
(bad)
jmp
xchg
adc
into
jo
fstp
loopne
sbb
popa
scas
mov
ins
jnp
(bad)
(bad)
(bad)
(bad)
mov
outs
daa
ret
adc
cmp
adc
in
dec
or
pop
and
(bad)
call
(bad)
add
data16
icebp
les
push
jle
lods
gs
call
push
mov
mov
jmp
cli
jmp
clc
adc
add
mov
jmp
xlat
and
std
(bad)
(bad)
(bad)
call
or
lahf
cmp
loop
cli
xchg
arpl
rol
and
icebp
pop
out
cdq
cmc
inc
bound
jmp
cmp
clc
dec
mov
sub
sbb
icebp
cld
jmp
icebp
fstp
(bad)
loopne
sbb
fnstcw
mov
and
(bad)
inc
xchg
stos
push
fldenv
sub
(bad)
data16
jns
in
retf
inc
into
mov
in
dec
jno
mov
xor
and
(bad)
(bad)
(bad)
push
scas
xchg
mov
jo
aaa
ds
dec
xor
aad
xor
adc
in
and
icebp
call
cld
push
fdiv
test
nop
dec
test
arpl
xor
ror
(bad)
call
adc
ds
popf
ja
add
enter
jg
(bad)
(bad)
(bad)
(bad)
cmp
aaa
xchg
mov
and
jo
adc
popf
sbb
and
mov
pop
cmps
(bad)
(bad)
jmp
inc
xor
sbb
adc
adc
scas
mov
adc
inc
(bad)
jg
call
mov
nop
sub
jmp
in
pop
xor
xchg
mov
add
xor
rcl
(bad)
(bad)
jg
lods
inc
je
mov
fsub
nop
into
outs
or
pop
lock
repz
call
cld
inc
enter
jnp
faddp
jb
sub
mov
pop
shr
(bad)
(bad)
call
test
add
jb
sub
rcr
sub
mov
push
test
(bad)
(bad)
(bad)
jmp
cmp
cs
ds
out
outs
cld
fisub
data16
xor
(bad)
(bad)
jmp
dec
mov
ret
pop
push
int3
push
fwait
jns
std
and
in
mov
pop
jae
(bad)
(bad)
call
adc
push
jne
movs
ins
mov
xor
xlat
movs
pop
ds
xchg
sti
scas
out
mov
pop
cmp
data16
cli
sbb
xlat
in
jmp
in
xchg
ss
sub
pushf
imul
jl
(bad)
adc
push
loopne
stc
add
js
mov
ret
test
mov
fst
mov
shl
xor
into
(bad)
out
cli
push
scas
icebp
pop
xlat
jns
add
movs
cwde
and
xor
jae
ficom
mov
add
jg
jmp
adc
sub
das
in
ins
scas
and
jg
sub
iret
pop
loop
enter
(bad)
dec
xor
dec
lahf
test
cld
pop
push
or
jmp
cwde
in
test
jecxz
dec
mov
lock
call
jmp
dec
(bad)
popa
pop
xchg
scas
adc
test
(bad)
(bad)
call
arpl
(bad)
call
mov
ror
inc
add
(bad)
(bad)
jmp
fdivr
leave
pop
cmp
sub
push
cli
aam
dec
xchg
fcomp
arpl
mov
ret
inc
dec
cwde
sub
add
jg
fisub
xor
outs
sub
push
fld
(bad)
into
and
mov
(bad)
(bad)
(bad)
jmp
enter
iret
cmp
ret
ins
mov
jb
xchg
data16
and
scas
and
(bad)
(bad)
jnp
cli
mov
mov
lea
aaa
mov
dec
outs
pop
lods
sub
movs
das
dec
nop
jbe
(bad)
(bad)
mov
xor
dec
cmc
pop
jmp
es
add
scas
arpl
pop
mov
std
add
sub
dec
aaa
jmp
mov
iret
dec
mov
rol
scas
cmp
shl
nop
lods
les
adc
js
data16
retf
cmps
mov
xor
sbb
push
or
call
ds
loop
fcomp
test
lahf
(bad)
or
mov
sbb
(bad)
(bad)
inc
inc
adc
ins
movs
jae
push
push
repz
xor
(bad)
fsubr
push
(bad)
fisttp
cld
jmp
or
and
enter
push
xor
push
cmp
enter
scas
dec
sbb
mov
pop
or
into
mov
popa
addr16
int
(bad)
(bad)
(bad)
call
mov
or
pusha
push
fild
dec
ins
inc
xor
add
es
and
(bad)
(bad)
inc
clc
inc
jmp
pop
out
push
mov
adc
pusha
movs
push
sar
ja
xor
(bad)
add
(bad)
inc
push
dec
cwde
or
mov
fidivr
cmp
(bad)
(bad)
(bad)
jmp
or
stos
or
int3
in
scas
outs
dec
icebp
rcr
pop
mov
xchg
xchg
sahf
sar
call
loopne
jle
or
std
and
loopne
xchg
xor
sahf
pop
sub
(bad)
(bad)
(bad)
inc
fnsetpm(287
jnp
xor
and
loope
xchg
mov
int3
or
ret
clc
in
add
xor
out
(bad)
push
jl
pop
add
dec
adc
hlt
xor
mov
(bad)
call
iret
pop
inc
data16
ficom
mov
ss
ds
jecxz
add
(bad)
(bad)
jmp
inc
fisub
(bad)
imul
xor
xchg
aam
mov
mov
sbb
(bad)
fidiv
pop
rcl
pop
or
mov
shr
xchg
pusha
or
dec
cmp
fs
daa
ja
jle
adc
(bad)
cmp
scas
mov
out
in
pop
xchg
leave
add
(bad)
call
loopne
fdiv
ss
clc
cli
xor
and
out
dec
(bad)
(bad)
inc
push
dec
fild
dec
or
stos
add
fucom
out
mov
les
inc
(bad)
(bad)
mov
shl
cld
mov
xor
repnz
(bad)
(bad)
or
out
and
sub
pop
add
adc
cmp
push
je
jae
(bad)
(bad)
call
push
xchg
jnp
rcr
cmc
jecxz
dec
shl
or
(bad)
test
imul
sub
shr
imul
mov
outs
xor
pop
mov
(bad)
push
jmp
in
dec
push
mov
push
push
xchg
test
outs
imul
mov
pushf
xor
popa
dec
mov
pop
cld
daa
sbb
push
jmp
sar
ins
popa
lahf
xchg
shr
pop
cmps
ds
mov
xchg
ss
leave
dec
rol
aam
jne
add
xchg
(bad)
(bad)
(bad)
(bad)
call
inc
(bad)
mov
call
xor
lahf
nop
push
aaa
ins
adc
jns
jmp
(bad)
(bad)
push
dec
mov
and
sbb
mov
(bad)
jmp
fiadd
push
dec
shl
mov
in
out
xor
sbb
stos
mov
inc
inc
test
shr
fst
fistp
lea
(bad)
(bad)
mov
lods
mov
jo
in
pop
sbb
loope
mov
popa
pop
adc
and
(bad)
(bad)
call
arpl
add
sub
fisub
mov
xchg
popa
gs
sbb
sbb
lock
cmp
add
stc
jnp
aam
dec
ins
stos
outs
ins
(bad)
jg
call
xor
dec
fmul
rol
or
jbe
cmp
mov
(bad)
(bad)
jmp
mov
cwde
mov
sbb
xor
daa
jne
and
stc
leave
psrlq
aaa
into
push
call
lock
fnsave
mov
cld
test
sahf
ins
out
(bad)
dec
fnstenv
mov
sbb
jns
sar
(bad)
push
sbb
sar
sub
jg
(bad)
mov
jns
cs
call
retf
adc
scas
rcl
add
sti
mov
(bad)
(bad)
jmp
inc
jp
movs
push
push
int
xor
jae
pop
adc
jmp
push
out
xor
mov
call
(bad)
(bad)
js
pop
mov
leave
sar
mov
lahf
ins
scas
sbb
leave
push
call
or
dec
jmp
retf
jbe
or
xor
and
sub
mov
into
add
in
cwde
cmp
out
es
fsubr
fcom
mov
jb
ins
dec
inc
jnp
or
jmp
hlt
aad
jge
jns
jecxz
outs
sahf
sbb
test
(bad)
(bad)
(bad)
in
cli
cmp
xor
inc
dec
addr16
xchg
push
and
outs
pop
jg
pop
push
and
(bad)
(bad)
dec
fmul
xchg
test
movs
jecxz
mov
add
mov
mov
sub
out
outs
and
adc
repz
inc
pop
std
inc
inc
and
add
ror
xchg
inc
or
(bad)
(bad)
call
mov
mov
or
ins
mov
cmp
mov
jnp
mov
imul
call
fcmovnb
jo
ss
fistp
push
mov
jp
dec
(bad)
(bad)
mov
ja
pop
jl
mov
nop
lock
aaa
xchg
(bad)
out
not
(bad)
mov
dec
pop
out
outs
mov
ss
jle
sti
jl
(bad)
(bad)
jg
push
aam
lods
inc
xor
inc
test
jg
jmp
cs
push
lahf
and
call
(bad)
jmp
sbb
mov
xor
movs
es
(bad)
test
imul
(bad)
(bad)
call
sub
inc
test
aam
pop
stc
xchg
outs
or
pop
std
push
lods
clc
int3
(bad)
(bad)
(bad)
jmp
push
jo
nop
rcl
and
int3
push
lods
fisubr
or
adc
popa
(bad)
pop
sbb
(bad)
(bad)
(bad)
(bad)
jmp
int
int3
das
mov
shl
mov
jmp
push
lods
cwde
cld
(bad)
(bad)
jmp
xor
sub
adc
lahf
mov
stc
cmp
jne
mov
(bad)
call
ss
int
sahf
dec
and
push
sar
ret
test
cld
pop
loopne
pop
xor
fistp
add
ins
in
hlt
push
fs
daa
mov
jg
or
leave
sub
test
mov
xor
pop
(bad)
mov
xchg
ret
inc
xchg
(bad)
dec
mov
cmp
(bad)
call
fidiv
xor
jnp
or
jne
nop
push
iret
clc
mov
(bad)
call
sahf
mov
(bad)
dec
dec
mov
add
pop
cld
gs
jns
lea
neg
pop
loopne
mov
(bad)
(bad)
call
fistp
or
and
sbb
mov
aaa
mov
inc
xor
inc
push
(bad)
jmp
xor
dec
inc
rcl
jle
shl
jns
imul
mov
push
in
loope
dec
data16
pop
adc
(bad)
inc
cmps
adc
mov
jg
ret
xlat
retf
(bad)
aas
xlat
ds
(bad)
mov
cmps
jb
dec
dec
or
loope
push
xchg
push
xor
mov
rcl
or
push
and
(bad)
js
xlat
scas
pop
int3
sub
aas
and
xchg
xlat
cmps
jae
std
out
or
xchg
jg
(bad)
dec
xor
lea
outs
mov
test
out
loope
lahf
sub
jl
stos
(bad)
(bad)
(bad)
(bad)
stc
je
or
fnstenv
cmp
push
adc
cmp
js
push
es
pushf
cmc
clc
(bad)
(bad)
(bad)
call
mov
sahf
das
xor
push
dec
jge
mul
or
inc
dec
mov
popf
mov
dec
(bad)
(bad)
(bad)
dec
lock
mov
call
adc
rol
jmp
push
dec
mov
mov
(bad)
(bad)
push
cmp
push
in
xchg
fs
mov
(bad)
jmp
ffree
xor
cmc
sub
retf
jmp
push
xlat
xor
clc
cmp
jmp
xor
cmp
pop
aas
loope
shl
fs
push
sbb
movs
aam
push
adc
shl
sbb
mov
(bad)
(bad)
call
and
adc
nop
and
inc
icebp
pop
mov
into
jge
push
cmc
(bad)
(bad)
(bad)
(bad)
sti
mov
test
sbb
dec
and
mov
mov
adc
(bad)
sub
js
cmps
sbb
(bad)
(bad)
jmp
mov
add
cmp
xchg
popf
xchg
sbb
out
aam
inc
fiadd
xor
and
call
cmp
adc
pop
inc
retf
popf
dec
cmp
cmp
inc
mov
sub
(bad)
(bad)
(bad)
aas
xchg
xor
or
and
mov
(bad)
fdivr
imul
sub
mov
les
mov
pusha
xor
mov
scas
ds
mov
std
enter
mov
ins
add
ror
pusha
ror
mov
and
in
push
xchg
repnz
cmp
or
(bad)
test
fidivr
(bad)
(bad)
jmp
fistp
add
data16
dec
(bad)
retf
sbb
ror
imul
sbb
(bad)
fcomip
inc
push
call
in
push
mov
sub
call
mov
dec
ja
test
lods
adc
xor
mov
(bad)
(bad)
mov
jmp
inc
xor
push
jne
ret
jne
xchg
adc
jnp
scas
popf
stos
push
(bad)
mov
mov
mov
pop
sub
rcr
fadd
(bad)
(bad)
call
xchg
retf
les
dec
inc
aam
shr
rcr
jle
lahf
xor
lea
sub
call
xchg
outs
mov
jno
test
push
mov
mov
jl
xor
and
inc
or
jae
adc
dec
jmp
mov
jg
xchg
pop
jp
jnp
xchg
cmc
xchg
jle
jecxz
mov
adc
cmps
fwait
cmp
out
cli
call
sbb
into
jmp
cs
iret
fidivr
and
(bad)
(bad)
(bad)
inc
inc
mov
cdq
cmp
mov
jns
(bad)
push
pushf
dec
and
inc
mov
mov
xor
xchg
int
cmp
int3
xchg
lahf
xchg
jnp
js
and
(bad)
mov
retf
shl
pop
pop
stc
adc
or
sub
ret
xor
jg
(bad)
push
rcl
dec
inc
repz
or
xor
addr16
cmps
cdq
mov
(bad)
push
lea
test
mov
out
jns
mov
mov
mov
lea
int3
mov
into
pusha
xchg
pop
or
popf
jnp
in
dec
(bad)
(bad)
(bad)
fbstp
fdivr
sub
push
cmc
test
ins
test
push
dec
or
sub
jnp
dec
push
(bad)
(bad)
(bad)
(bad)
mov
adc
jns
mov
pusha
arpl
popf
cmp
clc
mov
cmp
jmp
and
push
and
retf
(bad)
push
ins
es
mov
adc
mov
repnz
or
xor
addr16
jecxz
rol
sbb
ins
(bad)
(bad)
(bad)
jmp
test
fst
or
call
push
mov
cli
loopne
clc
lds
(bad)
sar
add
pop
stos
xchg
pop
(bad)
jg
bound
popa
jp
(bad)
dec
ret
jne
ror
ror
sub
(bad)
(bad)
(bad)
out
mov
jne
ds
push
hlt
out
std
jl
xchg
arpl
test
add
(bad)
dec
mov
aam
bound
or
(bad)
mov
mov
xchg
mov
sbb
add
pop
push
mov
(bad)
(bad)
(bad)
mov
pop
xchg
sbb
cmp
test
sbb
jle
inc
cli
jmp
fisttp
inc
sub
sbb
sub
mov
(bad)
adc
std
int
mov
call
(bad)
faddp
mov
retf
shr
out
cdq
maskmovq
idiv
movs
bswap
mov
(bad)
mov
gs
jnp
jns
jb
add
adc
mov
mov
dec
jl
cmp
test
push
bnd
adc
push
pop
or
xor
(bad)
(bad)
(bad)
dec
(bad)
xor
mov
xor
mov
in
mov
popa
push
mov
xor
mov
(bad)
(bad)
(bad)
dec
movs
cmc
into
std
into
idiv
sub
ds
pop
sbb
mov
sahf
jnp
pop
daa
je
(bad)
(bad)
push
pop
fwait
sbb
scas
sub
fisub
int
mov
inc
imul
mov
sub
xchg
inc
jg
inc
push
stos
cmps
sub
pop
jmp
(bad)
(bad)
(bad)
mov
stos
int3
cmp
push
fdiv
mov
add
sub
cmps
pop
jg
push
(bad)
mov
cmovge
test
nop
aas
out
adc
xchg
mov
pop
dec
dec
js
outs
es
(bad)
(bad)
std
je
movs
mov
dec
shr
push
lods
push
mov
scas
push
stc
call
imul
(bad)
(bad)
inc
xchg
je
xor
sbb
sbb
loope
out
mov
cli
mov
je
mov
out
out
retf
and
les
sbb
scas
cli
dec
arpl
adc
add
sbb
ins
jne
out
(bad)
(bad)
call
add
imul
(bad)
shr
in
call
ret
mov
xchg
mov
(bad)
dec
mov
jns
ret
add
das
fucom
xchg
fs
inc
jmp
call
pop
push
movs
ror
movs
xor
push
xchg
js
(bad)
and
test
(bad)
(bad)
cmp
adc
hlt
xchg
movs
mov
pop
sbb
hlt
ret
std
aad
clc
in
bound
cmp
outs
jl
add
loope
in
aam
jae
sbb
mov
scas
test
and
or
inc
imul
sbb
imul
(bad)
push
dec
dec
fdiv
aad
jle
retf
rcr
push
sbb
loope
mov
gs
mov
jl
imul
int
into
mov
and
inc
cld
sub
(bad)
inc
test
jmp
aam
in
push
mov
push
cld
push
or
mov
mov
push
inc
retf
jnp
lods
mov
adc
in
pop
xchg
repnz
dec
(bad)
mov
jge
sub
and
adc
cs
js
loope
lock
xchg
ret
shl
and
(bad)
(bad)
inc
lods
or
jl
pop
mov
mov
adc
ret
popf
xchg
packsswb
mov
cs
scas
inc
xlat
out
aam
call
(bad)
in
(bad)
dec
mov
add
ss
ret
clc
jg
lahf
mov
repnz
mov
(bad)
call
cmp
repz
cmp
push
ja
push
jb
retf
(bad)
(bad)
dec
mov
sub
imul
jo
dec
in
das
adc
in
icebp
int3
js
(bad)
(bad)
jg
push
not
pop
cmp
and
lock
loop
cld
sti
or
jmp
stos
xchg
mov
(bad)
(bad)
inc
inc
pop
cs
aad
mov
dec
aad
push
pop
in
in
out
or
shl
loopne
inc
data16
sub
sub
push
sub
fimul
mov
xlat
(bad)
(bad)
(bad)
inc
pushf
xchg
inc
sbb
stc
inc
fidivr
stc
cwde
shl
push
mov
(bad)
jg
fwait
outs
lods
hlt
leave
int
rcr
dec
ret
call
pop
retf
add
das
sar
lods
hlt
cmp
sbb
cmps
adc
arpl
push
jle
mov
and
(bad)
lea
jo
ret
and
mov
outs
mov
(bad)
adc
and
pop
aam
hlt
mov
pop
mov
sub
inc
scas
clc
push
scas
in
cdq
mov
mov
cli
arpl
mov
jge
retf
xchg
(bad)
mov
jo
mov
movs
in
inc
add
shl
push
test
in
lea
(bad)
ficomp
sbb
(bad)
pop
mov
(bad)
(bad)
(bad)
mov
lods
cwde
sub
cmp
push
mov
dec
and
test
(bad)
(bad)
(bad)
call
cli
mov
cwde
push
push
jbe
lods
fstp
add
shr
pusha
dec
xor
mov
(bad)
(bad)
(bad)
fnstcw
sub
std
push
push
stos
outs
pop
dec
mov
frstor
sbb
fdivr
(bad)
(bad)
jg
retf
jae
cmp
rcl
dec
adc
lods
(bad)
mov
sbb
int3
call
adc
push
loopne
dec
(bad)
or
xor
inc
les
jge
or
mov
xchg
cmps
sub
scas
call
mov
pop
and
(bad)
shl
jae
and
add
out
outs
pusha
push
(bad)
(bad)
(bad)
jmp
in
les
inc
xchg
not
dec
test
pop
push
push
fldcw
mov
(bad)
inc
mov
sti
(bad)
pop
jmp
out
pop
inc
jle
cli
mov
adc
inc
(bad)
(bad)
(bad)
jg
ret
(bad)
out
xor
fcomp
xor
aaa
stos
shl
lods
loope
push
dec
pop
(bad)
(bad)
fcomip
dec
and
inc
cmp
adc
call
scas
xchg
setnp
xchg
(bad)
(bad)
(bad)
dec
scas
ds
xchg
ins
ss
pop
icebp
sub
mov
aad
pop
cs
ret
test
shr
mov
jmp
ret
sub
mov
arpl
clc
inc
sub
scas
popf
(bad)
cwde
mov
sti
iret
add
jno
jo
shr
cmps
mov
dec
cmp
and
jg
call
and
dec
out
jle
and
(bad)
call
lahf
mov
jle
rsqrtps
jmp
retf
outs
enter
inc
test
repnz
test
add
movs
mov
dec
push
outs
mov
stos
xlat
mov
and
and
je
mov
aad
or
sbb
push
inc
lahf
(bad)
(bad)
(bad)
call
cmp
ins
fstp
int3
dec
sbb
pop
inc
or
pop
shl
popa
sub
(bad)
(bad)
(bad)
fidiv
or
lods
in
push
ins
rcl
(bad)
xor
sbb
(bad)
mov
mov
and
sbb
(bad)
(bad)
jmp
jns
mov
bound
jp
lea
xchg
xchg
into
mov
cmp
dec
icebp
inc
(bad)
pop
std
pop
or
stos
push
adc
or
mov
(bad)
(bad)
(bad)
dec
mov
pop
mov
and
mov
js
jmp
adc
xor
or
inc
retf
daa
ds
(bad)
(bad)
call
mov
sbb
movs
push
es
lock
or
mov
rol
or
clc
xchg
aas
int3
(bad)
(bad)
(bad)
(bad)
fsubr
fadd
out
popa
mov
cmc
pusha
inc
arpl
xor
xor
mov
(bad)
call
repnz
leave
xchg
mov
daa
ret
push
jl
jl
in
push
cmc
dec
xchg
and
(bad)
(bad)
mov
jne
inc
mov
xchg
pop
ins
retf
in
out
or
ins
sub
pop
repnz
(bad)
(bad)
in
out
push
das
mul
iret
loopne
cmps
pop
mov
push
mov
mov
jns
adc
sti
call
jmp
movs
adc
popf
add
clc
addr16
push
les
aam
inc
imul
pop
jnp
inc
add
aad
sbb
bound
push
mov
xchg
ss
xchg
sbb
in
div
test
mov
dec
push
stos
test
mov
hlt
xchg
xor
das
jae
lds
arpl
(bad)
fcomip
pop
sub
aam
add
and
(bad)
mov
sbb
push
aad
sbb
(bad)
(bad)
fcomip
es
inc
add
xchg
or
fisttp
iret
mov
xor
popa
sbb
jg
cli
clc
js
xor
sub
test
cmp
dec
or
ds
(bad)
call
mov
je
jge
sbb
and
nop
imul
lea
out
mov
in
mov
xchg
gs
push
dec
stos
and
sbb
fs
push
cmp
cmps
pop
xchg
imul
(bad)
pop
and
call
outs
xchg
push
nop
mov
inc
(bad)
xor
pop
in
or
adc
mov
mov
push
sahf
mov
das
mov
dec
gs
pusha
xor
inc
sub
sbb
int3
inc
xchg
jmp
add
mov
mov
into
sub
ss
retf
dec
clc
mov
(bad)
dec
(bad)
pusha
sbb
mov
push
in
jo
and
imul
int
(bad)
outs
sub
je
xchg
push
push
xchg
ja
(bad)
(bad)
aas
out
jno
enter
or
jbe
mov
idiv
call
in
leave
lods
jno
jne
or
mov
cmp
inc
mov
retf
mov
inc
leave
sub
sbb
sbb
sub
clc
aaa
pop
cmc
push
sbb
bound
movs
repnz
(bad)
(bad)
(bad)
inc
jno
dec
pop
mov
js
scas
jecxz
fucomp
sub
add
pop
repnz
rcr
mov
mov
cld
fiadd
sbb
ins
push
push
mov
add
outs
mov
pop
dec
push
jl
out
add
(bad)
icebp
push
mov
enter
add
arpl
mov
mov
lea
push
or
loopne
push
icebp
add
retf
jb
pop
fisttp
aam
add
(bad)
(bad)
push
repnz
jnp
dec
mov
jecxz
retf
nop
jb
add
inc
outs
xchg
mov
data16
in
(bad)
(bad)
(bad)
mov
mov
(bad)
sbb
dec
xchg
dec
setge
retf
and
nop
pop
outs
(bad)
(bad)
(bad)
(bad)
mov
cmp
sar
inc
lock
inc
cli
mov
inc
les
sbb
(bad)
inc
fmul
cmp
cld
or
and
jae
or
xchg
das
cmp
push
mov
lea
xor
(bad)
(bad)
(bad)
call
les
adc
mov
mov
int3
pop
neg
es
push
cs
aaa
cld
(bad)
jmp
xchg
mov
push
rcr
xchg
xchg
dec
gs
pop
push
xchg
push
sbb
sbb
retf
(bad)
(bad)
(bad)
push
xlat
dec
movs
add
jmp
sbb
outs
loop
or
push
out
xor
out
push
gs
int3
push
push
xchg
stc
pop
jmp
push
sbb
leave
mov
inc
(bad)
cld
in
add
jae
ins
push
or
(bad)
(bad)
jmp
pop
jo
inc
cmp
xchg
inc
push
fs
xchg
nop
jmp
scas
adc
(bad)
(bad)
mov
repnz
cs
or
and
std
in
xor
or
cmps
xchg
cld
(bad)
(bad)
fstp
sub
imul
addr16
sub
mov
mov
test
cmp
(bad)
jmp
(bad)
jae
sbb
pop
mov
or
out
shr
add
add
pop
nop
or
mov
mov
into
sbb
cmp
bound
cs
(bad)
jmp
dec
or
adc
inc
push
pop
adc
enter
sar
(bad)
(bad)
jnp
test
mov
jmp
in
jb
cmp
inc
gs
add
popa
ret
dec
mov
pop
call
call
fsub
add
xor
cmp
sahf
cmp
iret
sub
push
cmp
mov
add
or
fisubr
(bad)
(bad)
(bad)
(bad)
call
push
aad
out
add
inc
data16
adc
push
cmp
xor
data16
outs
push
sub
adc
sar
cdq
mov
xor
ins
inc
out
fiadd
(bad)
(bad)
(bad)
cmp
pop
retf
or
cli
mov
int
ror
call
in
and
pop
aaa
and
fldcw
add
hlt
icebp
jl
js
and
aas
mov
dec
les
stos
int3
int
cmp
test
je
add
and
and
loopne
xchg
cli
(bad)
inc
fcomp
(bad)
mov
jno
in
add
sbb
nop
pop
enter
std
dec
lods
or
pop
(bad)
xchg
jge
pop
fiadd
es
pop
xor
(bad)
(bad)
(bad)
push
add
mov
in
jecxz
pop
loop
int
mov
xor
xchg
xor
sub
push
mov
call
(bad)
mov
dec
adc
pop
sbb
mov
add
mov
push
ss
xchg
pop
fidivr
cmp
popa
fcomp
lock
or
outs
pushf
movntps
call
movs
mov
fistp
scas
sbb
mov
cs
sub
dec
pop
sub
fcomip
mov
mov
jmp
pop
loopne
or
push
cmc
sub
dec
dec
cmp
mov
fiadd
movs
push
retf
dec
dec
sub
push
jmp
cdq
mov
(bad)
(bad)
push
mov
push
iret
movs
shr
jmp
mov
push
push
push
shr
inc
and
xor
inc
fnstcw
jl
scas
push
mov
jns
jns
sub
push
leave
outs
push
not
stos
dec
adc
call
and
in
sub
xchg
mov
shr
out
sbb
lahf
and
push
repnz
mov
jo
(bad)
call
retf
fucomp
push
adc
out
mov
mov
sub
test
call
xchg
dec
xor
adc
lock
pop
rcr
mov
push
inc
xchg
rcl
xchg
inc
or
jmp
mov
pop
shl
(bad)
mov
(bad)
fild
xchg
stos
cwde
inc
mov
mov
push
pushf
retf
mov
pop
clc
push
cld
push
(bad)
and
leave
push
xchg
sbb
add
pushw
(bad)
(bad)
(bad)
mov
cdq
or
push
sahf
addr16
mov
pushf
pop
aad
jp
xchg
xchg
hlt
xor
(bad)
inc
scas
ret
xor
xor
pop
adc
push
or
test
ficom
push
scas
dec
repz
xor
mov
jo
push
fs
pop
adc
add
sahf
fldcw
iret
sub
add
test
loop
xchg
jl
loope
retf
and
add
lds
mov
fidiv
xchg
pop
sub
(bad)
mov
inc
ret
aaa
cmp
sbb
cmp
mov
ss
jae
mov
push
sub
ror
(bad)
(bad)
(bad)
(bad)
in
movs
fisubr
jmp
push
sbb
data16
(bad)
mov
jecxz
std
outs
in
mov
pop
(bad)
(bad)
(bad)
jmp
fwait
daa
mov
scas
dec
pop
dec
retf
jne
out
inc
or
loop
(bad)
bound
(bad)
fcomip
call
leave
retf
stc
std
dec
stos
mov
jb
inc
adc
out
(bad)
std
(bad)
(bad)
(bad)
cli
mov
outs
mov
or
xor
add
inc
dec
adc
push
sbb
jg
dec
sbb
jg
stc
outs
or
jae
sbb
das
ror
inc
(bad)
shl
ja
fdivr
xor
jmp
int
or
ror
cmp
test
add
pop
push
shr
test
sbb
clc
(bad)
inc
jmp
test
push
shr
or
mov
pop
cld
push
push
popa
lahf
addr16
mov
(bad)
jge
and
ret
js
arpl
(bad)
(bad)
mov
into
out
or
sbb
sahf
hlt
jno
fwait
pop
mov
inc
mov
dec
mov
inc
cld
pop
aas
(bad)
xchg
inc
inc
in
sahf
pushf
inc
sbb
jbe
(bad)
jg
sbb
mov
mov
clc
mov
sbb
stos
or
jmp
jns
inc
(bad)
(bad)
out
repnz
jo
stos
dec
push
mov
ret
jg
jle
mov
add
retf
(bad)
(bad)
(bad)
push
daa
adc
pop
mov
pop
or
les
pop
gs
inc
xor
fwait
mov
les
pop
clc
xor
(bad)
(bad)
inc
xor
repz
sub
mov
fdivr
mov
int3
and
(bad)
(bad)
(bad)
ficom
push
ins
adc
mov
mov
jnp
movs
je
(bad)
repz
adc
add
push
(bad)
(bad)
(bad)
push
xor
push
sub
leave
sbb
cmps
mov
xor
mov
mov
movs
int3
mov
idiv
mov
call
(bad)
(bad)
(bad)
inc
js
inc
(bad)
pop
adc
push
sub
scas
mov
push
arpl
pushf
xchg
push
(bad)
(bad)
push
call
(bad)
cmps
div
sahf
fisub
jl
xor
push
gs
repnz
cld
push
inc
mov
lods
pushf
push
jnp
sbb
pusha
(bad)
(bad)
(bad)
dec
sbb
push
cmovge
fadd
sbb
out
xor
icebp
inc
imul
(bad)
(bad)
push
jmp
mov
mov
hlt
inc
(bad)
int3
jge
mov
sub
loop
inc
dec
inc
add
(bad)
jg
mov
je
outs
imul
les
test
and
(bad)
call
rcr
cmp
sar
mov
out
mov
retf
cmp
(bad)
(bad)
call
sar
jns
push
in
mov
mov
mov
imul
leave
inc
int
push
scas
(bad)
(bad)
(bad)
(bad)
cmp
out
mov
xchg
add
call
in
and
fxam
call
mov
jp
ja
add
xor
imul
fwait
mov
shl
ins
push
sar
(bad)
mov
jo
clc
in
fisub
into
(bad)
sub
clc
jnp
push
pop
or
jmp
mov
(bad)
(bad)
dec
adc
lahf
mov
test
pop
and
shl
clc
mov
dec
mov
mov
leave
mov
test
comiss
cld
in
fbld
(bad)
(bad)
(bad)
jmp
push
sub
mov
sahf
push
loope
cdq
push
bound
mov
push
(bad)
(bad)
(bad)
dec
cmp
add
test
in
lock
xor
outs
xchg
lods
and
pop
(bad)
dec
mov
scas
add
jmp
outs
mov
test
fstp
(bad)
(bad)
mov
dec
add
add
inc
in
add
mov
push
mov
push
dec
(bad)
mov
jg
(bad)
mov
std
mov
mov
clc
das
outs
jne
imul
imul
dec
jnp
int3
std
fnstcw
pop
stos
pop
mov
call
(bad)
(bad)
jmp
imul
xchg
pop
ror
arpl
arpl
sbb
push
test
fcomp
(bad)
(bad)
(bad)
(bad)
cmp
inc
dec
cmp
xor
mov
stc
in
pop
mov
leave
cmp
cmps
fincstp
(bad)
(bad)
(bad)
push
mov
cli
xchg
xor
das
pushf
cdq
xchg
shl
xchg
cmp
cmp
daa
mov
pop
std
(bad)
fbstp
fimul
mov
jns
add
stc
aaa
xor
dec
int3
mov
mov
call
jle
xchg
sti
and
mov
test
inc
mov
xchg
mov
(bad)
(bad)
(bad)
(bad)
jl
cmc
cmp
mov
retf
ret
inc
rol
out
inc
and
pop
enter
pop
dec
pop
es
mov
leave
mov
cmps
mov
fcomi
popa
prefetch
call
(bad)
in
mov
fisub
aad
xor
out
ss
leave
stos
xchg
jns
cmps
xchg
hlt
out
sub
icebp
mov
or
pop
xor
pop
and
adc
jno
jl
cmp
push
int
fld
xchg
sbb
(bad)
cmp
push
cmps
lock
or
push
cli
sbb
clc
aaa
and
(bad)
(bad)
(bad)
(bad)
out
pop
add
push
sub
lods
and
push
rol
movs
dec
push
and
(bad)
out
dec
and
loope
fs
icebp
dec
call
mov
aam
(bad)
and
aas
inc
in
inc
or
push
shl
out
xor
(bad)
leave
retf
dec
xchg
sbb
ret
sbb
sbb
ret
inc
xchg
inc
inc
(bad)
sub
mov
call
cmc
out
cmp
sub
push
push
shl
data16
rcl
add
(bad)
(bad)
rcl
dec
xchg
mov
mov
or
dec
test
outs
cli
(bad)
push
push
inc
and
xchg
push
jmp
(bad)
(bad)
(bad)
jmp
mov
and
loop
ds
pop
dec
mov
push
dec
fdivr
(bad)
(bad)
cmp
mov
in
enter
enter
dec
add
mov
fidivr
and
(bad)
(bad)
(bad)
push
lods
(bad)
push
les
je
jle
pop
scas
in
popf
cli
das
jl
(bad)
sbb
xor
scas
(bad)
jecxz
(bad)
jg
icebp
add
addr16
xchg
stos
jmp
xchg
std
ret
arpl
aaa
or
sub
inc
push
adc
aaa
sahf
add
movs
lods
(bad)
(bad)
(bad)
jg
cmps
sbb
sub
xor
dec
(bad)
enter
aad
lods
mov
std
loopne
loop
or
(bad)
dec
xchg
mov
call
jg
inc
mov
cmps
sahf
cvtps2pd
pop
pop
mov
mov
xchg
fwait
jg
inc
cld
cmp
xchg
hlt
fistp
inc
jb
sub
fcmovbe
rcl
loop
push
cwde
into
inc
dec
xchg
mov
(bad)
test
daa
cmp
sub
(bad)
(bad)
call
shr
retf
jmp
pop
cmps
xor
sub
pop
xor
pop
sbb
inc
fsubr
shl
loopne
or
and
dec
(bad)
and
sar
scas
push
sbb
add
sbb
or
adc
sub
dec
mov
ds
dec
jmp
xchg
sub
call
(bad)
imul
movs
std
xchg
mov
movs
pop
cmc
sub
imul
(bad)
cmp
nop
dec
push
jb
repnz
(bad)
sti
movs
or
aam
jl
scas
popa
(bad)
(bad)
call
lea
xor
dec
xor
or
inc
lea
test
lea
ret
int3
(bad)
(bad)
(bad)
jmp
ret
sub
aam
shl
push
cmps
pop
or
jae
and
cmp
(bad)
(bad)
jle
push
loop
xor
or
out
dec
icebp
jns
retf
cmp
pop
in
and
(bad)
(bad)
(bad)
jmp
inc
test
push
mov
cmps
dec
call
movs
sub
mov
mov
push
test
es
cld
mov
push
push
cmp
jle
inc
inc
pop
or
enter
push
retf
jmp
shl
cmc
repz
or
popf
cmp
(bad)
(bad)
call
imul
fdivrp
pusha
push
(bad)
adc
mov
inc
js
dec
(bad)
call
loopne
mov
push
xlat
call
jl
sub
adc
xor
mov
dec
cs
adc
movs
and
mov
and
sub
mov
pop
aam
dec
or
in
aad
xchg
movs
jbe
scas
call
call
imul
xchg
fsincos
in
(bad)
(bad)
(bad)
mov
and
repnz
xchg
cmp
push
xor
daa
mul
popa
mov
mov
rcl
aaa
jne
cli
imul
popf
dec
mov
xchg
sar
(bad)
jmp
jne
pop
inc
lahf
jns
(bad)
and
ins
cdq
test
pop
fadd
pushf
imul
(bad)
(bad)
jmp
or
sete
sbb
test
xor
(bad)
(bad)
(bad)
call
mov
sahf
jl
mov
lahf
xchg
push
xchg
inc
mov
ins
sbb
outs
(bad)
(bad)
cmp
pop
sub
hlt
dec
or
mov
mov
push
jnp
(bad)
fild
pop
mov
iret
inc
xor
fld
ret
popf
sub
sbb
(bad)
(bad)
inc
je
nop
sub
fidivr
or
fisubr
inc
rcl
mov
(bad)
mov
rol
cmc
sub
lods
jno
mov
das
dec
test
retf
pop
pop
rcl
fcom
out
jle
mov
call
xchg
dec
mov
sub
clc
jns
neg
stos
xor
lock
(bad)
(bad)
fcomip
sbb
xlat
popa
add
test
into
js
push
clc
mov
pop
mov
(bad)
dec
adc
jmp
(bad)
mov
pop
dec
test
xlat
out
push
aad
es
in
add
dec
(bad)
(bad)
mov
shl
jae
inc
adc
push
in
xlat
int
jne
jp
(bad)
(bad)
inc
int
adc
jge
jb
(bad)
pop
mov
imul
sub
(bad)
(bad)
(bad)
(bad)
call
and
push
or
add
inc
mov
pusha
sbb
mov
leavew
out
lods
push
jbe
xchg
(bad)
(bad)
(bad)
(bad)
aas
adc
mov
fcomi
mov
push
or
adc
clc
mov
mov
adc
adc
les
xor
jle
sub
cmp
cli
out
(bad)
(bad)
(bad)
call
dec
retf
sub
div
stc
stc
sub
loopne
into
mov
(bad)
cld
jmp
rcl
sub
dec
div
and
dec
sub
div
adc
sub
jg
sub
mov
out
push
(bad)
cwde
jp
clc
push
js
(bad)
(bad)
jg
ds
sbb
sub
loope
repnz
cmp
or
ret
gs
add
push
mov
or
xor
xor
jg
pop
mov
mov
outs
inc
mov
stos
xor
test
lahf
rol
scas
(bad)
and
in
push
sar
push
or
or
into
add
xchg
sti
(bad)
xor
(bad)
push
adc
dec
scas
dec
jno
pop
into
add
les
pop
gs
or
lods
fdivrp
add
add
mov
imul
pop
imul
call
add
sbb
pusha
fiadd
leave
js
mov
mov
scas
xchg
xchg
adc
inc
push
mov
mov
(bad)
into
adc
lea
pop
sbb
jg
test
test
jge
push
xchg
jbe
jle
shl
add
das
dec
and
std
stos
mov
fistp
xchg
or
dec
inc
rcl
jecxz
push
jmp
sbb
mov
cmps
jb
stos
iret
xor
(bad)
jl
jbe
mov
sbb
adc
jecxz
sub
mov
shr
(bad)
outs
mov
addr16
sub
(bad)
jmp
push
fst
and
sar
xchg
aaa
les
(bad)
repnz
out
cmps
cmp
(bad)
dec
push
gs
int3
xor
pminsw
pusha
jnp
hlt
sahf
test
(bad)
jmp
aas
call
mov
call
lods
shl
dec
push
call
fldcw
cdq
sub
sysenter
rcl
stos
(bad)
push
lea
dec
cmps
sub
outs
jecxz
(bad)
sub
cs
and
(bad)
(bad)
jg
je
call
fidiv
xchg
shl
enter
dec
(bad)
jg
and
fild
or
mov
jmp
call
sub
inc
jno
mov
adc
in
retf
or
ins
(bad)
(bad)
(bad)
inc
jl
ins
xchg
adc
sti
add
and
(bad)
or
xchg
mov
pop
std
push
ins
out
pop
ins
sbb
lahf
into
fimul
popa
pop
inc
imul
sub
xor
push
and
(bad)
out
add
pop
dec
(bad)
call
jno
fwait
xchg
rol
punpcklbw
dec
adc
(bad)
(bad)
(bad)
inc
nop
cmps
out
in
add
sbb
and
in
sbb
mov
lock
icebp
or
fsub
dec
sar
(bad)
inc
push
dec
xor
sub
adc
shl
imul
adc
cmp
jbe
lods
xchg
or
mov
add
(bad)
(bad)
dec
repz
mov
loopne
hlt
jbe
mov
ss
inc
inc
mov
mov
(bad)
(bad)
(bad)
jmp
mov
mov
fisub
dec
add
xor
pushf
dec
pop
mov
loope
jg
(bad)
(bad)
call
cmp
stos
repnz
mov
mov
sub
push
enter
jg
aam
pop
pop
dec
cwde
aas
sub
inc
pop
retf
cmp
inc
outs
das
cli
(bad)
jmp
mov
dec
add
and
or
sbb
scas
sub
dec
mov
das
(bad)
scas
stc
push
movs
cli
jmp
cli
xchg
cmps
mov
push
(bad)
jmp
(bad)
xchg
cmp
fs
cmp
pop
(bad)
in
and
mov
mov
ss
rol
(bad)
jmp
jmp
repnz
jns
sbb
push
std
push
xchg
aam
jnp
sbb
leave
inc
fsub
cmp
ja
push
jno
inc
cld
(bad)
jnp
push
xchg
jl
xchg
sbb
imul
sti
(bad)
(bad)
(bad)
cmp
ins
and
push
shl
mov
shr
inc
pop
pop
std
jg
sbb
jns
mov
jg
sub
xchg
mov
dec
or
(bad)
(bad)
(bad)
call
gs
cli
xor
and
and
cmps
fadd
push
or
inc
mov
mov
scas
add
xchg
and
pop
nop
into
or
jmp
das
retf
cwde
and
add
mov
fld
xchg
cmc
adc
paddb
arpl
fisubr
(bad)
(bad)
(bad)
(bad)
mov
xchg
enter
add
jbe
mov
mov
jo
mov
sub
(bad)
(bad)
push
sbb
mov
push
xor
(bad)
hlt
cmp
sar
cmp
inc
cmp
inc
(bad)
jl
mov
(bad)
(bad)
(bad)
jmp
push
sbb
adc
aas
je
pop
int
shl
and
inc
adc
scas
je
mov
cmp
push
xchg
push
mov
pop
push
mov
dec
xchg
sbb
adc
sub
imul
dec
and
clc
dec
xchg
call
das
xchg
in
adc
pop
nop
iret
ret
(bad)
int3
push
adc
(bad)
push
jo
jb
cmp
mov
sti
jge
imul
lahf
(bad)
(bad)
fisttp
jne
lahf
fnstsw
in
movs
arpl
stc
and
in
(bad)
inc
mov
(bad)
(bad)
cld
dec
adc
iret
ss
mov
(bad)
call
sbb
and
fs
pop
pushf
jnp
mov
add
cli
(bad)
(bad)
push
rcl
(bad)
and
pop
mov
test
enter
mov
mov
cdq
add
(bad)
out
sub
fist
nop
pop
or
(bad)
jg
add
js
jp
(bad)
hlt
adc
inc
call
icebp
push
cmps
dec
repz
xchg
push
xchg
into
pop
jg
(bad)
(bad)
(bad)
jmp
imul
pop
push
repz
wbinvd
sub
jp
lock
adc
sti
adc
enter
dec
out
jg
imul
mov
bound
neg
jae
or
outs
clc
lahf
jmp
div
mov
cmp
outs
(bad)
cmps
(bad)
push
lock
pushf
retf
pop
dec
out
(bad)
(bad)
(bad)
jmp
lock
pop
sub
mov
jmp
(bad)
(bad)
(bad)
jmp
jo
push
das
lods
shl
outs
fbstp
pop
mov
ins
fstp
or
add
pop
xor
repz
repz
call
sbb
mov
push
cld
push
call
retf
lea
(bad)
inc
push
fmul
lahf
sbb
(bad)
(bad)
(bad)
dec
cmp
aad
inc
into
cmps
je
add
push
adc
loop
pop
mov
mov
dec
fs
(bad)
mov
pop
iret
out
sub
outs
xchg
pusha
push
imul
dec
addr16
pop
pop
aad
test
xchg
test
cs
jb
fwait
xor
inc
mov
(bad)
(bad)
jmp
mov
add
add
adc
push
adc
data16
retf
add
mov
clc
mov
icebp
loop
or
jnp
inc
inc
std
imul
pop
pop
mov
(bad)
icebp
int
bound
pop
jecxz
(bad)
(bad)
(bad)
jp
inc
ja
gs
mov
lods
jne
outs
(bad)
fmulp
pop
ja
cmc
or
mov
gs
sub
(bad)
in
(bad)
dec
dec
or
fimul
cmp
pushf
pop
adc
js
jnp
(bad)
(bad)
(bad)
out
mov
loopne
jno
cmp
xchg
hlt
cmp
cmp
push
imul
(bad)
jmp
(bad)
xchg
sub
and
and
ror
pop
mov
mov
sbb
jmp
adc
and
xchg
xchg
fistp
leave
fsub
(bad)
ins
or
mov
and
(bad)
(bad)
(bad)
dec
mov
mov
xchg
push
push
outs
adc
add
mov
bound
hlt
(bad)
(bad)
jg
(bad)
call
fcomi
addr16
loopne
pop
jg
pop
hlt
stc
mov
mov
icebp
out
(bad)
(bad)
(bad)
jmp
aam
sti
lds
loope
fmul
xchg
rcr
and
pop
sub
(bad)
(bad)
jg
scas
push
mov
pop
dec
or
scas
sbb
xor
or
pusha
call
(bad)
(bad)
(bad)
jmp
nop
scas
jne
retf
cmps
in
jae
sbb
mov
jecxz
pop
xor
pop
sbb
pusha
fmulp
xor
mov
xchg
dec
loopne
(bad)
cmp
fdivr
and
cdq
std
xor
jmp
(bad)
(bad)
(bad)
fucomip
jmp
add
lods
call
push
pushf
into
retf
popa
shl
sub
and
adc
(bad)
(bad)
(bad)
js
pusha
add
cli
aam
popa
cdq
mov
dec
or
int3
dec
jnp
mov
mov
jmp
cs
adc
ret
add
mov
cmps
sbb
in
add
lahf
not
mov
lods
fadd
push
mov
inc
pop
mov
push
and
jns
lods
dec
jmp
jmp
jbe
mov
push
jo
pop
loop
repz
aaa
jle
popf
dec
push
sub
int3
cmps
fwait
rcr
cmc
jmp
jnp
mov
or
fistp
jmp
jg
arpl
retf
ja
mov
pop
mov
ja
mov
arpl
jmp
das
clc
(bad)
(bad)
cmp
xor
and
cwde
jae
xchg
or
sbb
loopne
(bad)
(bad)
jmp
sti
repnz
rcl
js
dec
mov
aad
jecxz
jnp
fld
jl
out
test
bound
(bad)
dec
popf
adc
sahf
loop
clc
aam
call
dec
fld
in
sbb
test
add
(bad)
(bad)
jmp
clc
fisubr
(bad)
push
sub
pop
sbb
pop
iret
add
fwait
adc
cs
mov
sub
(bad)
(bad)
jg
mov
mov
ror
cmp
lock
cmp
int
mov
(bad)
(bad)
(bad)
call
push
mov
(bad)
hlt
sub
ss
sub
hlt
mov
stc
fnstcw
(bad)
(bad)
push
sbb
xchg
pop
xor
movs
sbb
adc
xchg
je
dec
xchg
and
movs
(bad)
outs
adc
sbb
jmp
dec
(bad)
fld
hlt
xor
mov
pop
repnz
adc
mov
adc
cmp
mov
in
cld
ins
mov
mov
push
rcr
or
imul
adc
pmulhw
je
aas
leave
int3
retf
ret
lods
(bad)
(bad)
jmp
outs
jmp
in
movs
loope
jmp
dec
rcl
mov
mov
mov
mov
or
inc
fld
and
mov
xchg
(bad)
(bad)
(bad)
jmp
pushf
jae
dec
dec
mov
add
lock
mov
pop
scas
fisttp
jmp
cwde
add
xor
adc
(bad)
(bad)
(bad)
call
adc
arpl
fadd
push
mov
imul
push
aam
loop
popf
rol
mov
jmp
nop
xor
(bad)
jp
adc
in
or
loopne
sbb
arpl
(bad)
jg
xchg
add
sbb
les
(bad)
inc
xor
outs
jle
push
inc
xor
clc
(bad)
call
(bad)
repz
pusha
sbb
mov
mov
popa
or
mov
sahf
rcr
(bad)
(bad)
(bad)
out
out
push
mov
out
jno
test
jecxz
push
inc
mov
adc
mov
(bad)
push
xchg
mov
mov
mov
stos
rol
add
out
push
jmp
out
fadd
mov
mov
jecxz
in
push
sbb
repz
leave
(bad)
(bad)
(bad)
inc
les
(bad)
dec
mov
cmp
mov
stc
sub
shl
ret
add
cmp
sub
jmp
nop
cmp
std
lahf
shr
int3
(bad)
(bad)
(bad)
(bad)
stc
int3
pop
xlat
jae
cmp
pop
mov
outs
icebp
repz
inc
les
and
pop
out
retf
sbb
lock
pop
mov
pop
cmps
aas
das
xchg
shr
fadd
xchg
adc
(bad)
(bad)
(bad)
in
sub
add
test
bswap
xchg
int3
sbb
div
(bad)
inc
dec
hlt
sbb
mov
in
nop
mov
mov
or
sar
(bad)
adc
and
gs
mov
jle
mov
loope
aaa
data16
mov
cli
add
psllw
outs
cli
inc
std
(bad)
jmp
mov
stc
cmp
inc
mov
jp
xor
push
inc
sbb
cmp
mov
jmp
test
jmp
inc
push
pop
cmc
cmp
std
push
ja
or
(bad)
(bad)
jg
test
sti
inc
pop
mov
or
pop
push
cmp
push
imul
das
and
push
sbb
mov
cmp
ret
test
dec
dec
adc
(bad)
(bad)
mov
pop
pop
pop
fldcw
xchg
dec
jmp
std
adc
adc
pop
(bad)
(bad)
push
dec
movs
fsubr
sbb
inc
mov
jg
push
jg
adc
retf
adc
adc
aam
adc
(bad)
dec
or
sahf
movups
sbb
adc
out
(bad)
(bad)
dec
fnsave
inc
scas
mov
addr16
iret
(bad)
fidivr
out
sub
adc
stos
cmps
movd
ret
fstp
fdivrp
push
fwait
inc
nop
push
dec
arpl
ffree
movs
(bad)
aaa
cmp
std
jmp
jnp
jb
repz
jns
mov
aam
and
xor
icebp
mov
mov
mov
(bad)
xchg
loopne
icebp
add
or
xor
jnp
adc
mov
jb
mov
push
(bad)
(bad)
(bad)
(bad)
dec
sbb
fsub
mov
fisub
mov
fcom
shr
(bad)
(bad)
(bad)
(bad)
ficomp
nop
pop
leave
add
stc
add
icebp
aaa
mov
es
add
push
ja
gs
push
(bad)
mov
movs
repnz
mov
int
repz
mov
jg
fsubr
imul
push
fcom
into
add
or
imul
fild
mov
jg
(bad)
call
sar
pop
fnsave
mov
mov
sbb
add
(bad)
(bad)
(bad)
not
lods
sub
neg
retf
fdivr
or
inc
fmul
push
call
sahf
ret
or
cmp
in
(bad)
inc
cmp
loop
in
mov
mov
push
stos
outs
add
mov
add
(bad)
(bad)
(bad)
call
mov
add
add
cmc
in
fimul
xor
push
ja
push
(bad)
xor
sbb
jmp
add
xchg
xchg
aaa
jmp
sti
inc
add
ins
inc
fdiv
test
in
add
inc
(bad)
add
ss
pushf
shr
xor
fadd
popa
mov
(bad)
push
cdq
imul
fidiv
js
std
ins
in
xchg
mov
cmp
sub
xlat
jb
std
dec
pop
nop
sub
cs
push
(bad)
mov
push
mov
add
repnz
mov
(bad)
icebp
cmp
cmp
sub
mov
call
aam
jns
mov
rcpps
push
lock
dec
(bad)
dec
inc
jae
jae
outs
xor
cmp
dec
xchg
std
dec
jecxz
loope
mov
xor
call
pop
sbb
cmps
aad
and
xor
aam
xlat
adc
and
(bad)
data16
out
jmp
fmul
mov
mov
mov
adc
bound
sbb
test
sti
(bad)
(bad)
call
pop
mov
sub
and
push
or
popa
call
ds
les
inc
hlt
(bad)
(bad)
jg
xchg
sub
mov
adc
repnz
or
cdq
push
mov
(bad)
(bad)
call
jg
and
xchg
aas
push
add
out
and
mov
xchg
mov
lea
inc
(bad)
(bad)
dec
std
jge
mov
inc
xchg
jp
inc
xchg
mov
pusha
adc
(bad)
(bad)
(bad)
(bad)
jmp
add
aad
je
sbb
inc
or
cmp
pop
sbb
pop
cmp
clc
mov
(bad)
(bad)
(bad)
jge
and
fcomi
(bad)
aaa
bound
jmp
and
mov
pop
stc
xor
(bad)
and
(bad)
(bad)
push
jno
xchg
push
sbb
int3
inc
xchg
arpl
in
loope
movs
inc
std
addr16
(bad)
(bad)
(bad)
push
sbb
cmp
mov
xor
add
or
loopne
cs
(bad)
(bad)
jmp
ret
jb
jp
pop
int
adc
or
or
adc
out
jecxz
cld
(bad)
(bad)
(bad)
jmp
push
mov
xor
dec
sbb
and
scas
cmp
fcomip
cmps
cdq
mov
(bad)
(bad)
call
and
iret
addr16
inc
push
shr
pop
cmp
pop
std
xchg
push
inc
jp
pop
inc
hlt
leave
cmp
enter
cli
add
xor
stos
retf
scas
fbld
mov
clc
fst
(bad)
(bad)
jg
mov
adc
mov
cmc
adc
sahf
xor
leave
mov
(bad)
mov
push
add
repnz
mov
ror
push
jg
xchg
lahf
sar
or
dec
addr16
pusha
in
dec
cmp
xor
cmp
es
imul
icebp
ud0
jg
(bad)
push
dec
les
mov
and
jne
sub
sar
push
adc
ds
(bad)
(bad)
(bad)
out
pusha
iret
adc
cmp
cld
sti
sub
outs
cmp
pop
mov
pop
or
push
mov
mov
hlt
or
mov
dec
aad
popa
test
pop
pop
cli
mov
(bad)
fimul
jp
inc
aas
pop
sub
mov
adc
push
pop
pop
mov
imul
loop
jge
xchg
loop
xchg
cdq
repz
(bad)
(bad)
(bad)
(bad)
cmp
cli
fcom
test
push
cmp
inc
sar
sub
xor
or
sar
(bad)
call
pusha
dec
(bad)
dec
dec
fsubr
pushw
imul
fcmovnu
stc
mov
jmp
psllw
jge
out
jo
repnz
push
popf
mov
repz
lock
aaa
jmp
ret
(bad)
(bad)
(bad)
dec
pop
mov
shr
dec
inc
repz
shl
cmps
ret
cmp
sub
xor
xor
call
add
aad
add
(bad)
dec
(bad)
cmp
fucomp
adc
pop
test
aam
and
std
(bad)
dec
mov
push
cld
push
push
cmovg
push
push
mov
ds
inc
clc
test
xchg
bound
ins
ret
iret
fistp
mov
in
lock
(bad)
jg
push
pop
cmp
dec
imul
mov
adc
pop
jne
mov
loope
jmp
xchg
push
outs
loope
push
xor
(bad)
adc
cs
jge
hlt
cmp
add
mov
sub
or
dec
inc
sbb
je
or
jg
(bad)
mov
push
int3
jnp
mov
in
adc
cli
xor
xchg
pop
lahf
jne
push
jmp
adc
lock
(bad)
hlt
sub
pop
je
jmp
(bad)
(bad)
(bad)
mov
pusha
out
push
call
in
iret
jmp
adc
scas
outs
gs
sbb
cld
(bad)
(bad)
push
xchg
retf
add
xor
add
xchg
iret
retf
mov
dec
ror
outs
pop
add
sbb
mov
cmp
add
adc
sar
fsub
mov
or
xor
jmp
jo
test
push
push
cmp
(bad)
push
sbb
ret
xchg
(bad)
sar
(bad)
inc
or
es
xlat
xchg
test
mov
fs
(bad)
(bad)
pushf
mov
fbld
push
pop
mov
mov
stos
adc
fs
lea
cmp
(bad)
(bad)
(bad)
mov
fist
push
das
lods
push
cmp
xor
xchg
mov
mov
rol
dec
xchg
push
sar
fbld
mov
ins
inc
mov
jl
inc
mov
mov
(bad)
(bad)
(bad)
inc
rcl
cli
pop
sahf
cli
mov
push
mov
gs
(bad)
in
push
fild
sub
(bad)
fidivr
ja
scas
mov
and
mov
into
mov
and
or
sbb
and
data16
cmps
ss
mov
push
fimul
pop
or
jg
or
rcr
(bad)
(bad)
(bad)
call
std
jae
mov
ins
push
rcr
test
inc
mov
mov
mov
ja
cli
inc
(bad)
xor
mov
(bad)
(bad)
jmp
or
je
outs
adc
std
push
cmp
fisubr
stos
(bad)
(bad)
call
add
mov
fsub
mov
add
push
jae
mov
aas
loopne
cli
out
clc
pusha
cmps
leave
test
cdq
test
fcomp
(bad)
inc
or
xlat
jecxz
dec
test
mov
sahf
mov
popf
dec
sbb
push
outs
out
cmp
das
frstor
cmp
fs
repnz
sbb
mov
pop
sti
jl
xchg
mov
fnstsw
cmps
cmps
and
(bad)
sahf
fs
(bad)
(bad)
(bad)
push
or
add
adc
xor
mov
mov
or
pop
dec
sahf
push
cmp
push
mov
imul
and
jae
xor
call
ins
int3
mov
(bad)
call
mov
mov
xchg
inc
sub
sbb
mov
retf
aaa
jmp
idiv
(bad)
(bad)
(bad)
(bad)
push
arpl
imul
mov
lds
cmp
adc
push
inc
(bad)
aam
fbld
stos
test
sub
(bad)
(bad)
js
push
adc
bound
jmp
mov
(bad)
ja
es
pop
push
or
fcomip
(bad)
(bad)
mov
mov
stos
xor
mov
and
retf
(bad)
(bad)
(bad)
dec
push
daa
add
shl
shr
cmps
pop
or
xor
or
in
mov
(bad)
(bad)
(bad)
out
lods
cmp
bound
cmc
pop
sub
fcomp
mov
jl
sahf
iret
pop
sub
dec
sub
or
cmp
lahf
outs
mov
xor
add
hlt
push
pop
and
push
sub
fidivr
fistp
xchg
or
ja
(bad)
(bad)
(bad)
jmp
jmp
mov
fsubr
cmp
fcomip
movs
cmp
movs
(bad)
(bad)
(bad)
push
out
pop
and
cmp
fs
lods
adc
adc
aam
add
(bad)
not
xor
jmp
test
ss
mov
cld
dec
inc
jmp
inc
ins
mov
(bad)
(bad)
push
popa
sbb
adc
dec
js
jp
pop
sahf
pushf
(bad)
sbb
aad
stc
add
into
(bad)
push
add
jo
mov
pushf
ins
adc
jecxz
outs
(bad)
sbb
aas
jecxz
jb
clc
cmp
(bad)
(bad)
dec
cmp
aaa
stc
push
sub
leave
out
pop
pop
mov
jle
sti
mov
pop
call
repz
dec
jg
xchg
int3
hlt
jno
xchg
cs
mov
mov
(bad)
scas
or
(bad)
cld
pop
in
cmp
or
mov
mov
pop
or
mov
rcl
imul
cli
mov
mov
pushf
push
clc
adc
pop
(bad)
(bad)
push
pop
mov
mov
lock
sub
pushf
stc
sbb
xor
ins
cld
jmp
cmp
rol
cmp
push
xchg
cmp
cmc
pop
or
mov
aaa
push
mov
leave
outs
retf
rcl
ss
(bad)
(bad)
(bad)
mov
ds
jmp
pop
cmps
(bad)
mov
sahf
outs
popa
jno
ret
retf
mov
loopne
das
add
(bad)
and
cmp
cmp
mov
cmc
sbb
jmp
(bad)
(bad)
jns
xor
test
hlt
pop
cmps
test
in
in
sti
stc
adc
pop
dec
adc
loop
loop
ds
xor
repnz
stc
iret
iret
div
loopne
enter
popa
movs
sub
mov
ret
xchg
daa
xor
(bad)
(bad)
(bad)
inc
pop
adc
mov
mov
adc
inc
cmc
jle
sti
nop
lock
cmc
mov
jg
mov
clc
mov
stc
mov
cs
mov
frstor
push
shl
(bad)
(bad)
mov
stos
call
cmps
jbe
jg
arpl
sar
cmp
(bad)
(bad)
jmp
jbe
dec
cmp
iret
cmps
arpl
pop
hlt
jge
pop
dec
lea
shl
scas
xor
dec
push
ficom
(bad)
dec
xchg
mov
imul
cmp
mov
push
sub
adc
pop
stc
xchg
mov
fbld
dec
ror
pop
test
hlt
popa
jb
retf
(bad)
popa
push
ret
pop
cmc
inc
ins
sub
int
push
stos
mov
popf
not
(bad)
(bad)
(bad)
jg
and
ficom
xchg
rcl
adc
loope
sar
loope
push
jo
sar
(bad)
push
out
mov
pop
push
adc
adc
pop
retf
jne
xor
pop
in
fild
gs
(bad)
(bad)
(bad)
(bad)
jge
pop
xchg
add
add
js
fs
mov
pxor
mov
adc
in
prefetchnta
(bad)
mov
jnp
push
iret
out
jmp
add
gs
xor
cmp
popf
pushf
jae
and
push
xchg
cs
(bad)
icebp
(bad)
(bad)
(bad)
call
test
dec
jecxz
push
out
adc
iret
outs
xchg
jb
enter
cmc
nop
xor
(bad)
(bad)
clc
jbe
retf
dec
or
leave
sti
scas
fdivp
jmp
inc
and
jmp
mov
data16
add
cmps
cmp
(bad)
(bad)
dec
test
mov
adc
outs
sar
inc
outs
int
jnp
cmp
dec
sub
in
inc
mov
mov
jnp
rcr
cmc
(bad)
(bad)
inc
daa
and
mov
test
jg
add
jne
dec
xchg
pop
mov
(bad)
jg
je
mov
and
in
mov
mov
js
lods
lahf
cmp
mov
icebp
(bad)
jmp
xor
mov
pop
aad
and
sbb
sub
mov
movs
call
(bad)
cmp
int
scas
sar
push
xlat
xor
(bad)
(bad)
(bad)
call
dec
add
add
sbb
fisttp
ror
push
std
fwait
pop
sub
(bad)
(bad)
(bad)
jg
push
sbb
icebp
ja
add
mov
push
jp
lods
add
push
(bad)
(bad)
(bad)
push
adc
rol
mov
push
jmp
outs
lds
mov
pop
popa
imul
mov
and
(bad)
pop
mov
jb
retf
stc
inc
cmp
loop
lock
test
(bad)
cdq
xor
inc
mov
pop
(bad)
jle
pop
pop
(bad)
ds
in
sub
lock
(bad)
pop
ret
xlat
arpl
mov
xchg
mov
adc
jo
push
sti
pop
loopne
(bad)
(bad)
mov
push
in
repnz
nop
dec
add
nop
push
add
jp
(bad)
cld
pusha
mov
add
add
jle
dec
xor
out
outs
add
(bad)
out
out
lahf
jno
push
cmp
clc
push
sbb
add
jle
inc
push
mov
dec
xchg
jl
ret
fcomp
(bad)
(bad)
push
xchg
sbb
std
cmp
mov
add
cmp
call
pop
add
xor
mov
aaa
jbe
sub
or
dec
sti
lea
(bad)
inc
test
xor
push
cmp
sub
hlt
lods
(bad)
(bad)
(bad)
jg
and
cmp
xor
imul
adc
(bad)
fbstp
inc
jp
hlt
add
mov
jbe
fstp
mov
inc
(bad)
jg
ja
pop
lahf
ss
dec
xchg
push
cmp
into
cmp
xchg
(bad)
(bad)
(bad)
dec
sahf
sar
lods
push
mov
mov
mov
jbe
adc
sub
adc
cld
(bad)
push
mov
std
int
mov
js
pop
fild
jb
mov
inc
outs
outs
fadd
mov
adc
shl
neg
movs
pop
(bad)
jmp
rcl
pop
xchg
jbe
mov
push
dec
out
xor
push
das
(bad)
lods
arpl
mov
(bad)
rcl
mov
retf
jmp
mov
stos
(bad)
(bad)
(bad)
dec
test
sub
in
jl
add
xchg
test
stos
es
pop
repz
cmps
sbb
or
(bad)
inc
fsub
test
repnz
and
jp
cmp
(bad)
(bad)
call
arpl
sub
out
std
mov
pop
out
xchg
push
out
into
add
and
repnz
(bad)
mov
rcl
out
test
xchg
cld
mov
or
fwait
mov
(bad)
push
sub
add
outs
imul
repz
jg
mov
sti
mov
mov
in
out
sbb
pop
add
aad
push
mov
sub
jbe
mov
adc
retf
mov
jmp
mov
add
(bad)
(bad)
call
xor
pop
loope
xchg
jle
xor
inc
adc
pusha
xor
jg
pop
pushf
sbb
push
lahf
sar
imul
xlat
sub
aad
dec
cmpxchg
(bad)
(bad)
dec
add
xchg
or
popf
int3
cmp
xchg
mov
aas
les
test
jnp
sbb
(bad)
(bad)
(bad)
(bad)
jp
sbb
bound
lea
sub
das
gs
shr
and
rcr
pop
inc
ds
inc
or
(bad)
(bad)
(bad)
jmp
fs
xor
jmp
add
mov
cmc
xchg
adc
adc
mov
jmp
push
lahf
xor
in
out
mov
fnstsw
push
sbb
dec
adc
mov
(bad)
(bad)
call
and
dec
xchg
pop
aam
sub
mov
popa
push
cmp
dec
xor
scas
cmc
retf
(bad)
jmp
push
pusha
(bad)
mov
pop
add
cmp
div
add
(bad)
(bad)
(bad)
(bad)
jg
mov
jp
jmp
xor
sbb
out
(bad)
arpl
aad
call
aaa
dec
call
cmp
jge
push
in
in
pop
icebp
test
rol
aaa
aam
clc
(bad)
(bad)
(bad)
(bad)
mov
pop
sti
fdivr
dec
mov
in
and
sub
add
hlt
mov
jns
(bad)
(bad)
inc
dec
into
push
xchg
jb
mov
push
cld
scas
test
xchg
inc
repz
sub
ficomp
nop
dec
mov
push
pop
call
call
sub
adc
cmp
(bad)
(bad)
in
xor
pushf
adc
lock
icebp
cmp
call
cwde
jecxz
push
(bad)
out
(bad)
(bad)
call
ret
inc
adc
mov
imul
push
jp
push
lods
xchg
xchg
mov
mov
stos
call
xchg
aad
div
xchg
sub
aam
cwde
mov
adc
scas
in
(bad)
call
sub
push
pusha
arpl
sbb
leave
(bad)
aas
imul
mov
call
out
add
ror
cmp
lea
or
mov
shl
adc
jb
xor
stc
fbstp
sub
sar
test
jb
adc
inc
popf
cmp
nop
test
call
(bad)
(bad)
jmp
call
imul
mov
ret
enter
clc
and
das
cli
(bad)
call
nop
out
pop
loope
mov
iret
mov
pushf
adc
sbb
clc
pop
mov
(bad)
jmp
push
pop
das
or
daa
adc
enter
test
lahf
pop
(bad)
sub
loope
add
sub
gs
adc
stos
pop
lahf
cs
xor
(bad)
out
ds
or
xor
sub
add
jmp
fimul
(bad)
(bad)
inc
cdq
mov
fs
mov
scas
dec
aas
pop
jg
inc
lea
scas
pop
inc
cdq
add
(bad)
(bad)
call
jo
add
dec
jmp
out
or
mov
jae
repz
inc
xchg
es
(bad)
(bad)
inc
xor
cmp
je
dec
sbb
sub
xlat
sub
mov
arpl
ja
inc
call
pop
sub
js
or
(bad)
cld
push
mov
jo
jmp
loop
cli
out
adc
frstor
jmp
hlt
ins
int3
jns
jae
aas
or
xor
jno
out
hlt
(bad)
lods
jne
movs
iret
sbb
xchg
cdq
out
mov
call
dec
adc
jne
out
xor
mov
nop
es
outs
pop
daa
sub
in
ss
aad
(bad)
(bad)
stc
jmp
xchg
inc
push
jecxz
sub
sbb
adc
js
mov
cmp
lods
lods
(bad)
(bad)
fbstp
fldenv
mov
int
popf
fnstsw
push
xor
gs
outs
imul
fisubr
xor
inc
adc
(bad)
leave
adc
xchg
pop
xchg
fwait
(bad)
loope
or
js
(bad)
dec
mov
cmc
fcom
or
mov
stos
pop
jne
jecxz
sub
test
clc
call
inc
loopne
dec
push
sar
jae
xor
mov
inc
aad
loopne
push
(bad)
xchg
(bad)
(bad)
(bad)
jmp
or
sar
jp
jmp
adc
sbb
mov
adc
(bad)
(bad)
dec
dec
pushf
imul
test
xor
fsubr
xchg
repnz
(bad)
jmp
push
sbb
test
aam
fdivr
mov
jecxz
(bad)
dec
(bad)
std
aam
xchg
cwde
jae
lock
cmps
and
jge
and
dec
shl
aaa
mov
cmp
(bad)
call
test
fdivr
push
popf
das
xchg
sub
sub
pusha
mov
mov
cmp
push
or
lock
pop
mov
jg
test
jae
dec
rcr
mul
jmp
pop
lock
shl
mov
fisttp
out
(bad)
(bad)
jmp
(bad)
cmps
pushf
cmp
test
xor
mov
mov
mov
fmulp
pop
xchg
movs
mov
(bad)
(bad)
call
mov
cmc
mov
xor
and
repnz
cmp
adc
inc
jg
or
(bad)
jg
sbb
fadd
sub
(bad)
dec
sub
leave
loope
mov
loopne
lahf
sub
pop
shr
retf
cmp
(bad)
(bad)
jmp
pop
arpl
jp
aas
pusha
mov
add
jnp
xchg
adc
pop
jl
outs
das
clc
call
(bad)
push
rcl
es
out
inc
xchg
sti
mov
jle
mov
jmp
rcl
xlat
fstp
cmp
(bad)
and
ins
call
jmp
sahf
push
xchg
adc
retf
xor
push
push
addr16
jbe
int3
jg
add
in
les
das
xchg
in
xchg
outs
cs
xchg
sub
frndint
inc
enter
add
pop
imul
cld
adc
ins
xor
dec
(bad)
(bad)
(bad)
jmp
xor
mov
push
sub
push
mov
clc
ret
je
popf
mov
(bad)
jmp
mov
mov
je
mov
hlt
outs
adc
mov
(bad)
(bad)
call
xlat
inc
push
mov
mov
sahf
push
lock
ret
dec
das
mov
jmp
add
(bad)
(bad)
fcomip
sbb
neg
cli
cdq
pop
push
xchg
test
add
cmc
or
scas
or
outs
inc
mov
xlat
sub
pop
outs
or
jbe
lock
xor
int3
out
or
outs
std
nop
jmp
dec
add
sti
cli
mov
call
retw
fidivr
cli
test
inc
mov
shr
sti
cwde
(bad)
(bad)
(bad)
(bad)
clc
xchg
mov
pop
inc
xrelease
test
xchg
mov
sahf
mov
adc
dec
leave
push
sbb
jmp
mov
mov
fild
and
jmp
(bad)
(bad)
(bad)
jmp
aad
fs
and
sar
sub
adc
push
mov
dec
(bad)
(bad)
(bad)
call
xor
adc
mov
or
mov
pop
lea
(bad)
(bad)
(bad)
dec
sbb
pop
repnz
mov
or
nop
cmove
mov
mov
and
(bad)
dec
shl
adc
sub
je
dec
aad
test
add
inc
icebp
(bad)
int
lods
movs
push
nop
fsubr
jne
idiv
call
cld
shl
rcl
push
fisttp
pop
sbb
mov
sbb
xchg
mov
mov
jns
daa
js
inc
add
js
push
clc
and
lock
push
fiadd
fild
lods
or
fsub
jno
retf
loope
fcom
mov
mov
call
mov
std
add
repnz
mov
adc
dec
(bad)
cmp
dec
in
sub
lea
imul
jmp
popf
mov
pop
lahf
mov
pop
cld
cmp
imul
xchg
or
mov
xlat
cmp
sub
(bad)
(bad)
call
in
mov
add
jmp
mov
sub
lea
ins
add
(bad)
inc
xchg
jg
lods
mov
cmp
lahf
inc
or
popa
inc
mov
(bad)
out
(bad)
mov
(bad)
sbb
jge
fimul
addr16
pop
add
jae
inc
sub
(bad)
(bad)
jmp
cmp
lahf
jmp
inc
scas
xor
or
jnp
scas
jns
push
sar
leave
cmp
dec
push
call
js
xchg
pop
fdecstp
sar
imul
cmp
jg
(bad)
inc
cmps
cmp
js
or
movs
out
ds
shl
cwde
dec
daa
(bad)
(bad)
(bad)
dec
lock
je
inc
inc
mov
test
or
inc
js
mov
into
leave
das
inc
aas
ins
inc
jno
clc
(bad)
(bad)
cmp
adc
sbb
into
les
das
mov
mov
int3
ret
fimul
std
js
mov
sub
sahf
into
rcl
(bad)
(bad)
call
mov
xchg
pop
daa
xchg
xchg
xor
push
(bad)
(bad)
lock
push
jmp
(bad)
(bad)
(bad)
inc
jmp
push
aas
xlat
in
stos
and
and
out
cmp
or
push
mov
mov
out
pushf
ins
adc
(bad)
call
pop
retf
jmp
arpl
pop
(bad)
(bad)
(bad)
push
or
xchg
loopne
cmp
sahf
xchg
das
inc
or
mov
das
test
mov
mov
imul
sbb
clc
div
call
test
stc
scas
fwait
cmp
(bad)
call
mov
test
add
rcr
cmp
jp
sub
pop
ret
cld
xchg
out
cmp
(bad)
(bad)
dec
jbe
hlt
mov
xchg
jne
outs
dec
mov
enter
inc
and
or
retf
sbb
inc
jg
(bad)
call
cmp
sbb
imul
(bad)
(bad)
(bad)
call
cmps
mov
xlat
(bad)
push
sahf
rol
fisttp
xor
push
jns
jno
xlat
mov
jmp
jmp
in
push
mov
jo
jmp
aas
pushf
loopne
popf
inc
fnstenv
cmps
inc
mov
mov
js
dec
in
arpl
mov
jb
dec
ret
cmp
retf
(bad)
inc
(bad)
in
ss
cld
clc
mov
push
cmp
xchg
xchg
jmp
out
mov
dec
mov
lea
adc
mov
mov
mov
push
fild
je
inc
out
adc
imul
(bad)
call
mov
mov
push
mov
daa
jle
mov
popa
stos
cmovb
mov
xor
dec
mov
(bad)
out
out
cli
(bad)
mov
xchg
adc
repnz
sub
cmp
jmp
shl
push
xor
cdq
scas
popa
push
fwait
jns
dec
lahf
pop
sub
dec
ret
test
xchg
push
xchg
gs
adc
shl
gs
leave
pushf
jo
and
call
pusha
cld
inc
jmp
call
nop
sbb
(bad)
push
or
mov
or
fst
cmp
(bad)
push
dec
and
inc
jp
movs
mov
(bad)
(bad)
jmp
inc
jae
or
xor
add
cld
movs
xor
cld
(bad)
mov
jle
stos
jmp
repz
pop
call
jl
(bad)
(bad)
jmp
pop
arpl
sbb
and
push
ds
adc
into
mov
call
mov
pop
fs
in
dec
shl
enter
cdq
pop
(bad)
adc
(bad)
(bad)
jmp
fstp
adc
push
pop
pop
adc
retf
cmp
aam
adc
sbb
xchg
popa
mov
inc
xchg
in
jb
cmp
imul
shr
jg
dec
int
(bad)
(bad)
dec
or
lds
enter
mov
inc
jmp
xor
jmp
cmps
scas
mov
or
(bad)
(bad)
(bad)
dec
ror
mov
mov
dec
sub
arpl
hlt
arpl
(bad)
(bad)
(bad)
inc
outs
mov
lods
stc
jbe
push
sbb
push
ins
pop
xor
dec
mov
sbb
sub
(bad)
(bad)
(bad)
inc
retf
mov
adc
sub
pop
das
adc
and
and
lods
gs
cmps
pushf
shl
call
and
mov
pop
aad
out
inc
xchg
out
clc
(bad)
(bad)
mov
into
(bad)
mov
mov
cs
sbb
sub
repnz
or
push
dec
xchg
pop
and
cmp
das
rcr
inc
jmp
xchg
push
mov
fld
cld
(bad)
mov
push
repz
jecxz
pop
mov
cld
ins
inc
jmp
hlt
xchg
dec
and
(bad)
(bad)
out
clc
mov
pop
imul
repnz
xchg
std
sbb
mov
shl
aaa
(bad)
cmc
mov
sbb
cmps
retf
push
int3
add
mov
cld
rcl
or
rcr
xor
rcr
mov
push
cmp
call
rcr
push
mov
xchg
(bad)
push
mov
(bad)
fwait
sar
(bad)
(bad)
(bad)
mov
cli
cmps
mov
out
sbb
pop
ds
shr
jae
and
pop
rcl
pusha
(bad)
(bad)
(bad)
dec
ins
xchg
inc
sub
sub
test
xor
das
out
stc
div
leave
repnz
(bad)
(bad)
cmp
out
sbb
test
add
sub
stos
jnp
dec
mov
mov
xor
sbb
fadd
mov
mov
jno
sub
xchg
push
(bad)
int3
rol
pop
cmp
pop
sahf
cmp
out
jp
out
into
push
loopne
push
fdivp
(bad)
inc
shl
mov
or
jbe
push
sbb
or
mov
(bad)
call
das
(bad)
and
cmps
xchg
lea
rcl
jmp
mov
push
nop
sbb
cld
(bad)
out
bound
cli
mov
scas
in
push
pop
mov
mov
(bad)
jmp
push
inc
xor
jb
fdiv
aad
jno
mov
add
or
(bad)
inc
xchg
xchg
test
lds
jp
cli
mov
ret
inc
std
lahf
rol
out
jmp
out
jne
test
retf
in
pusha
sti
sar
(bad)
inc
cld
xor
xchg
es
push
mov
add
retf
mov
dec
jo
or
pop
das
stc
(bad)
inc
inc
(bad)
xchg
inc
imul
pop
sbb
fwait
or
push
mov
loopne
or
xchg
xchg
xor
or
add
mov
shr
mov
fldenv
mov
adc
cli
call
push
ja
aas
jge
sub
shl
push
and
adc
dec
sbb
(bad)
(bad)
dec
and
fst
mov
call
cmp
outs
ror
addr16
mov
arpl
jbe
push
stos
pop
pop
div
leave
out
fcomp
popf
mov
cmc
add
jo
les
(bad)
in
jg
jmp
repnz
out
cmps
movs
int3
dec
cmp
or
or
(bad)
(bad)
(bad)
(bad)
in
daa
out
pusha
lods
vpsraw
or
cld
int3
and
jg
pop
push
mov
push
pop
mov
xor
mov
clc
movs
clc
cmp
idiv
(bad)
(bad)
dec
in
data16
mov
jmp
or
inc
mov
sbb
mov
jg
sub
aam
(bad)
cmp
(bad)
(bad)
(bad)
call
xchg
jns
mov
retf
lock
jge
scas
nop
push
imul
cld
dec
or
sub
(bad)
(bad)
inc
clc
outs
fcom
pop
sbb
xor
sub
and
pop
movs
pop
jmp
imul
dec
(bad)
popf
fcom
test
inc
into
and
shl
call
loopne
add
mov
leave
loop
dec
in
or
out
add
push
sub
inc
mov
jae
mov
push
test
and
mov
mov
(bad)
(bad)
push
inc
ficomp
push
or
in
or
inc
cmp
lea
pop
mov
mov
mov
lods
mov
add
or
(bad)
(bad)
(bad)
(bad)
jg
and
aam
jbe
lds
test
les
xor
imul
push
lock
push
jae
jge
retf
ins
xor
xor
add
mov
outs
dec
(bad)
(bad)
(bad)
(bad)
mov
lds
shr
mov
stos
aaa
iret
dec
cmp
pop
mov
sar
(bad)
(bad)
call
lea
cmp
push
imul
jno
mov
call
fisttp
push
jg
(bad)
dec
retf
cs
lock
cli
or
dec
sbb
or
(bad)
(bad)
push
je
xor
adc
js
(bad)
ror
sbb
xchg
pop
jns
out
adc
(bad)
(bad)
(bad)
jg
test
iret
lock
and
pusha
jge
repz
ins
into
mov
fdiv
cmc
(bad)
(bad)
(bad)
dec
push
jae
imul
fsubr
int3
cmps
mov
jns
jns
inc
cmp
mov
lock
(bad)
(bad)
(bad)
mov
push
ror
push
rcl
adc
mov
outs
jecxz
pop
push
jg
push
lods
idiv
pop
or
push
(bad)
call
int3
cmp
mov
jl
push
adc
dec
push
into
cmc
enter
ja
(bad)
pushf
(bad)
(bad)
(bad)
(bad)
cli
push
adc
div
(bad)
jp
add
retf
sbb
cmps
repnz
push
(bad)
call
dec
and
pop
lds
retf
mov
neg
mov
cwde
out
(bad)
(bad)
dec
jae
addr16
aam
xlat
test
mov
sub
dec
stos
jmp
dec
xchg
jecxz
(bad)
(bad)
push
or
xlat
aas
movs
mov
sbb
cmc
fadd
cmp
iret
cld
ror
push
std
add
gs
add
out
loop
or
(bad)
(bad)
(bad)
inc
pop
mov
pop
je
std
shl
push
(bad)
pop
lods
stc
bound
sub
sbb
(bad)
(bad)
call
fdivr
arpl
pushf
pop
pop
pop
shr
pop
out
dec
or
sahf
or
push
inc
clc
jae
jle
cmps
les
mov
adc
xchg
test
mov
pop
(bad)
pop
cld
jp
inc
stos
mov
push
pushf
jmp
fld
push
test
aas
in
jbe
push
dec
push
mov
retf
ins
dec
movs
test
inc
mov
les
mov
loopne
loop
pop
adc
mov
adc
in
cmps
xor
mov
inc
cmp
jno
fcomp
lahf
das
in
and
pop
lds
add
jp
(bad)
jns
dec
cdq
sub
inc
repnz
jp
mov
ret
adc
inc
fsubr
add
lahf
rcl
mov
enter
aaa
xor
js
or
mov
cld
pop
fistp
jb
sub
cwde
fdivr
(bad)
(bad)
push
clc
jmp
cdq
(bad)
in
sbb
or
outs
out
fsubp
repnz
sahf
retf
es
inc
cmp
(bad)
and
push
(bad)
std
mov
sub
leave
dec
test
shl
stos
loopne
dec
fs
jp
(bad)
(bad)
(bad)
call
and
dec
in
or
dec
mov
es
int3
scas
out
sti
or
(bad)
(bad)
(bad)
(bad)
(bad)
mov
iret
adc
sbb
cmc
pop
fisttp
xchg
adc
cdq
jl
jbe
dec
pop
xchg
fbstp
pop
clc
dec
sub
mov
in
adc
push
jo
fstp
xor
or
lods
inc
add
(bad)
(bad)
inc
sbb
add
sub
leave
mov
and
dec
dec
xchg
call
adc
(bad)
fisttp
sbb
pusha
fsubr
pusha
(bad)
neg
nop
std
xchg
cld
cli
mov
(bad)
jmp
cmp
inc
or
repnz
inc
push
add
mov
(bad)
(bad)
(bad)
call
xchg
cmp
mov
sbb
or
pop
loope
mov
dec
dec
mov
int
popa
pushf
bound
push
mov
dec
xchg
pushf
jmp
inc
rcr
push
push
adc
stc
ins
adc
and
and
inc
or
jl
pop
mov
sar
(bad)
dec
cmp
lahf
jo
and
or
jl
add
(bad)
(bad)
mov
imul
mov
dec
push
sub
popf
neg
(bad)
jmp
cmp
inc
mov
into
inc
call
aas
jbe
movs
adc
mov
ja
std
mov
cdq
inc
xchg
(bad)
sti
inc
jae
xchg
sbb
push
pop
mov
cmp
or
sbb
xor
shl
push
push
jnp
jo
dec
xchg
inc
(bad)
(bad)
(bad)
jmp
push
mov
rcr
fwait
push
push
sbb
xor
push
or
dec
cdq
sbb
add
(bad)
(bad)
jl
push
lods
aaa
and
jmp
sti
sahf
xor
inc
pop
aad
test
scas
adc
pop
ja
inc
pushf
xchg
cmp
dec
jmp
cmp
xchg
cmp
jmp
sahf
cmps
cmc
jmp
call
icebp
dec
sub
sbb
adc
cs
(bad)
(bad)
jg
popa
xor
mov
and
ja
nop
rcr
sub
fsubr
sub
repnz
xor
stos
stos
dec
adc
ja
ret
dec
mov
(bad)
(bad)
(bad)
inc
mov
dec
jbe
mov
adc
pushf
aam
push
das
std
jle
(bad)
push
lahf
adc
xchg
(bad)
jmp
in
dec
imul
mov
or
ds
xor
(bad)
call
mov
retf
hlt
icebp
outs
daa
outs
test
jno
test
push
mov
cld
(bad)
(bad)
fcomip
clc
leave
mov
clc
jecxz
mov
jmp
jp
cdq
pop
pop
scas
rcl
cld
dec
fdivrp
leave
aad
push
mov
or
inc
mov
ds
(bad)
call
add
or
xor
les
outs
sub
ror
lahf
mov
mov
adc
(bad)
(bad)
(bad)
cmp
cmp
into
push
mov
cmp
cmps
movs
xor
push
adc
xor
(bad)
(bad)
inc
fimul
gs
retf
pop
(bad)
std
push
push
mov
xlat
(bad)
imul
fsubr
xchg
(bad)
(bad)
(bad)
jmp
jmp
push
adc
bound
mov
sub
cmps
int
scas
add
jg
push
(bad)
mov
and
jle
(bad)
sbb
dec
jne
ins
sbb
xchg
xor
(bad)
(bad)
(bad)
dec
sar
call
inc
mov
call
int3
push
and
(bad)
jmp
jmp
rcr
das
push
mov
ret
cs
loop
pop
ja
mov
stos
xor
(bad)
jg
scas
rcl
cmc
test
shl
lahf
sub
lock
mov
(bad)
push
jmp
cdq
shl
push
mov
mov
pushf
sbb
xchg
movs
pop
and
xor
call
int
xor
hlt
loop
into
out
cmps
pop
pop
cli
mov
iret
sahf
sahf
sub
cmp
mov
(bad)
jmp
cmps
dec
mov
std
lds
and
sub
cld
xchg
push
and
xchg
(bad)
(bad)
(bad)
(bad)
call
icebp
jae
into
mov
lods
xchg
stos
dec
mov
ins
mov
xor
push
sub
loopne
or
push
adc
cmp
xchg
mov
movs
mov
jno
xchg
push
jns
cmp
(bad)
(bad)
(bad)
inc
jmp
add
(bad)
cli
rcr
mov
or
cmp
mov
adc
cmp
in
cmp
push
push
inc
dec
push
daa
add
in
xchg
out
jge
adc
push
cdq
push
push
mov
mov
cmp
inc
fwait
mov
fisttp
daa
dec
and
adc
pop
adc
movs
stos
xor
sbb
add
sbb
cmp
cmp
cmps
ins
pop
mov
nop
getsec
adc
dec
sbb
call
pop
or
or
sbb
sub
dec
mov
mov
repz
mov
xor
addr16
(bad)
(bad)
call
inc
fistp
cmps
dec
popf
adc
dec
aaa
(bad)
mov
out
cmc
and
xchg
mov
daa
(bad)
(bad)
(bad)
(bad)
call
aam
xchg
sahf
mov
loop
push
lock
ror
mov
fldcw
jmp
jnp
xor
dec
fs
loop
pop
arpl
scas
adc
inc
inc
leave
cmp
(bad)
(bad)
push
cs
xchg
(bad)
jmp
add
loopne
loopne
jne
mov
mov
(bad)
call
inc
mov
stos
fmul
mov
out
cmc
cwde
dec
enter
mov
das
or
xor
mov
fdiv
mov
lods
mov
lods
out
sti
cld
mov
add
ret
add
jne
inc
jo
cmp
dec
dec
xor
or
stos
std
out
jle
xor
movs
pop
fwait
push
cmps
mov
(bad)
(bad)
(bad)
call
pop
jp
rcr
dec
call
push
sub
jge
scas
jne
xor
mov
(bad)
jmp
xchg
lock
and
jl
loopne
out
pop
test
mov
cmp
xor
pop
jbe
add
(bad)
dec
push
ret
int
daa
fnstcw
dec
call
hlt
mov
mov
push
push
in
xchg
or
jmp
jp
fidivr
mov
push
aam
xor
lock
(bad)
(bad)
push
das
stos
aam
cmp
xchg
ret
or
js
adc
adc
sti
cmps
shl
fstp
ss
aad
or
(bad)
pop
(bad)
dec
xchg
mov
in
movs
jno
mov
rol
xor
aad
jl
dec
mov
daa
in
mov
enter
dec
mov
jg
sub
test
retf
inc
jb
(bad)
jg
call
cmps
push
loop
jmp
pop
cmps
je
cmp
mov
inc
call
fs
mov
scas
push
jnp
repnz
out
stos
jg
inc
(bad)
(bad)
(bad)
(bad)
push
stos
dec
std
add
fnstsw
mov
inc
cmpxchg
push
dec
cmps
cs
mov
pop
adc
mov
mov
xor
ja
jmp
cmp
in
xchg
sub
pop
add
stos
xchg
dec
mov
(bad)
inc
cld
adc
idiv
mov
dec
jmp
cmp
ror
xchg
scas
adc
ja
sbb
inc
repz
fs
adc
sbb
dec
add
dec
mov
jmp
mov
dec
enter
(bad)
(bad)
das
int3
js
jp
popa
lds
(bad)
stos
and
fiadd
fst
xchg
sub
lock
sbb
ret
cdq
or
lea
cmp
xlat
add
push
popa
scas
push
mov
(bad)
jmp
in
lock
pop
mov
cld
sub
arpl
sar
test
inc
jg
mov
enter
jmp
dec
(bad)
(bad)
(bad)
call
pop
sti
push
fldenv
pop
xchg
mov
inc
adc
pop
ins
dec
stos
add
or
adc
(bad)
dec
sbb
and
scas
mov
or
ds
add
stc
shr
in
(bad)
icebp
lods
dec
inc
mov
inc
es
and
mov
aam
push
ret
mov
adc
nop
xchg
mov
mov
movs
fnstsw
xor
mov
cld
push
movs
daa
shr
adc
mov
cmps
int3
sub
add
pop
popf
mov
ret
mov
cmp
cld
dec
fcomp
jnp
(bad)
dec
jg
mov
mov
cld
call
out
jmp
fsubr
xchg
or
cs
mov
cmp
(bad)
call
ret
jle
jnp
retf
add
popa
push
mov
jg
jmp
sar
inc
cmp
cmps
pop
shr
inc
inc
sbb
shr
inc
loopne
(bad)
and
(bad)
(bad)
inc
mov
add
sub
push
push
xchg
mov
jo
add
(bad)
(bad)
inc
mov
rol
lods
xchg
or
pop
fsubr
cmp
mov
ficom
inc
sub
(bad)
(bad)
jmp
sbb
sub
iret
mov
stc
cmp
pop
(bad)
dec
dec
fdivr
jb
xor
or
aad
mov
sbb
mov
lods
in
call
arpl
adc
and
cmp
test
dec
out
sub
mov
adc
cmove
lock
out
jnp
in
std
ficomp
jecxz
add
dec
jmp
jle
xor
jp
lods
cmps
push
std
(bad)
call
enter
xchg
mov
dec
mov
and
cmp
(bad)
jmp
in
fcmovu
pop
out
sahf
jle
leave
xchg
loop
cdq
sub
push
adc
mov
add
sub
mov
xchg
pop
mov
push
cmp
cmp
loopne
mov
inc
dec
cmps
lahf
call
mov
stc
xor
sar
add
js
clc
and
es
hlt
(bad)
(bad)
jg
lahf
pushf
pop
fcom
and
jbe
call
xor
mov
(bad)
in
inc
in
pop
lods
sbb
dec
dec
fisubr
mov
addr16
(bad)
out
cmps
adc
dec
sbb
inc
or
je
loop
jmp
inc
jmp
clc
loop
inc
push
jecxz
int
(bad)
(bad)
call
inc
inc
test
pop
cld
push
xchg
and
test
jns
push
mov
aad
dec
(bad)
(bad)
(bad)
mov
fisub
sahf
mov
mov
scas
popf
je
sub
arpl
xchg
(bad)
(bad)
dec
push
loop
sti
test
jmp
retf
popa
aam
adc
and
(bad)
aas
mov
jne
jecxz
mov
add
push
hlt
pop
mov
retf
std
(bad)
(bad)
jmp
loop
xchg
cmps
mov
mov
popf
cmp
(bad)
jg
ins
loop
ja
pusha
je
jmp
in
adc
data16
(bad)
jg
(bad)
jmp
push
retf
scas
rcr
xor
pop
call
push
add
sub
push
push
and
xchg
push
stos
jnp
test
ret
imul
sbb
mov
cs
in
mov
jp
xchg
push
nop
inc
call
push
out
mov
and
jle
jle
dec
sbb
(bad)
(bad)
push
loop
pop
inc
inc
outs
cmc
ja
cmp
dec
movs
mov
(bad)
popa
enter
adc
outs
(bad)
(bad)
(bad)
inc
or
xor
inc
or
pop
mov
sub
test
sub
aad
push
imul
mov
fisttp
shl
cld
mov
pop
mov
in
pop
(bad)
(bad)
(bad)
(bad)
(bad)
aas
push
and
clc
js
call
(bad)
mov
or
mov
outs
(bad)
(bad)
pop
mov
nop
pop
jl
xchg
ins
cmp
mov
mov
stc
ficomp
or
pop
retf
fld
push
add
cmp
ja
(bad)
adc
or
pusha
(bad)
in
sub
pop
cmp
mov
in
and
rcr
or
and
push
or
fld
sub
(bad)
mov
cli
pop
scas
pop
xchg
je
stos
retf
inc
imul
cmp
stos
(bad)
(bad)
jmp
jp
lds
jb
xchg
jmp
lea
mov
cwde
pop
mov
mov
loopne
ficomp
or
into
adc
jl
movs
outs
loop
lock
fst
adc
jg
mov
in
pop
sub
jg
cvtps2pi
cli
(bad)
(bad)
(bad)
mov
xchg
mov
fisttp
aas
daa
out
pop
ret
push
push
add
test
(bad)
(bad)
(bad)
mov
ds
mov
sub
call
cdq
(bad)
cmp
sub
cmp
mov
cmps
leave
add
clc
sbb
and
loop
ss
adc
pusha
and
in
or
aaa
pusha
inc
imul
sub
(bad)
(bad)
(bad)
call
cmp
ror
dec
sbb
xchg
int3
in
movs
mov
test
(bad)
push
mov
push
cld
(bad)
cli
sbb
mov
lods
xchg
mov
stc
cmps
sahf
icebp
aaa
mov
std
adc
(bad)
jg
jecxz
jo
jmp
inc
clc
sbb
jmp
sub
(bad)
(bad)
call
jno
aad
jp
add
mov
xchg
cmp
pushf
stos
xor
pop
push
(bad)
(bad)
(bad)
(bad)
clc
fs
in
and
sub
adc
pop
cmp
daa
mov
sahf
jmp
fwait
add
pop
loopne
mov
data16
mov
cli
mov
or
(bad)
(bad)
inc
rol
gs
push
movs
rol
add
push
(bad)
call
or
rcr
js
sbb
and
ror
push
xchg
ret
mov
sub
sahf
push
aas
test
ss
popf
xchg
jns
lahf
pop
inc
pop
loopne
(bad)
(bad)
push
add
xchg
cs
addr16
add
imul
jge
pop
fucomip
adc
add
jb
xchg
xchg
idiv
inc
mov
mov
outs
test
pop
ss
mov
(bad)
(bad)
inc
aas
neg
xchg
and
dec
icebp
cmp
jp
sbb
sti
stc
(bad)
push
aas
mov
fistp
jg
loop
xor
cld
popa
movs
ds
sub
aam
jecxz
dec
(bad)
and
inc
push
aam
jb
(bad)
(bad)
jmp
sbb
or
jecxz
mov
cwde
int3
aas
jl
cmc
mov
pushf
nop
test
pop
in
(bad)
(bad)
inc
cmp
aas
ds
sbb
je
jb
dec
cli
(bad)
imul
inc
xchg
daa
repz
popf
fwait
or
mov
jl
repz
(bad)
jmp
(bad)
(bad)
push
das
inc
pop
xor
xchg
jnp
rol
pop
daa
mov
popa
popa
xchg
(bad)
mov
sub
(bad)
(bad)
dec
xor
pop
fdiv
mov
mov
dec
cld
(bad)
popf
out
int3
cld
xchg
aad
(bad)
jmp
std
prefetcht2
mul
int3
dec
les
sti
pop
aam
js
jg
out
outs
in
cwde
neg
cli
sub
mov
(bad)
(bad)
cmps
(bad)
mov
lea
mov
jmp
(bad)
(bad)
(bad)
push
lock
aam
out
stos
dec
out
pop
sub
fisttp
dec
sbb
(bad)
(bad)
inc
cmp
iret
idiv
pop
iret
repz
inc
xor
pop
jmp
cmp
cmps
(bad)
(bad)
(bad)
push
fwait
xchg
inc
int
dec
cmps
cmp
cwde
loop
mov
pop
sbb
leave
cmp
xchg
jg
(bad)
(bad)
jl
and
stos
push
push
push
jge
jns
rcr
jne
inc
adc
shr
adc
(bad)
inc
dec
jmp
mov
scas
fmul
sub
call
xchg
imul
add
(bad)
(bad)
(bad)
push
sbb
xor
lahf
stc
mov
aaa
mov
(bad)
lock
adc
call
jmp
push
int3
fld
(bad)
sub
cdq
retf
cli
das
clc
imul
(bad)
(bad)
jmp
adc
aam
cmp
in
popa
add
mov
or
inc
sub
aaa
add
dec
inc
dec
mov
loope
dec
push
mov
cmp
jg
sar
mov
es
(bad)
jmp
push
inc
daa
sbb
push
dec
clc
jo
xor
int3
jmp
add
stos
ficomp
dec
inc
retf
imul
loope
ret
cmp
das
test
(bad)
jg
or
xchg
call
and
mov
stos
loope
jnp
or
(bad)
(bad)
(bad)
call
lods
sbb
mov
aam
mov
push
imul
(bad)
mov
in
cdq
aam
mov
(bad)
(bad)
jmp
movs
cmp
adc
mov
int3
mov
cdq
movs
lds
pop
push
xor
inc
xor
xor
(bad)
(bad)
jmp
es
mov
adc
cmp
cmp
or
fistp
out
sub
js
or
add
pop
sbb
call
sti
ret
bound
push
sar
push
std
shl
push
push
inc
mov
sbb
mov
push
jge
jbe
dec
lods
push
or
jmp
ficomp
adc
(bad)
pushf
pop
sbb
cs
mov
jnp
mov
and
xchg
pop
aas
shl
pop
hlt
pop
mov
fdivrp
jg
jmp
das
rcl
in
pop
cmp
mov
mov
xor
clc
(bad)
(bad)
call
xchg
sub
pop
outs
(bad)
stos
std
or
enter
popf
adc
inc
(bad)
mov
(bad)
out
hlt
inc
inc
and
sbb
jbe
xchg
inc
pop
push
and
xlat
ja
(bad)
mov
cmovg
(bad)
(bad)
mov
in
rol
pop
push
sub
out
(bad)
xchg
vpor
inc
fcomp
(bad)
(bad)
(bad)
(bad)
mov
and
(bad)
stc
mov
mov
jmp
test
test
dec
adc
mov
in
jg
cdq
sahf
imul
xchg
push
call
(bad)
jg
icebp
(bad)
jp
dec
cmps
in
call
outs
div
push
xor
hlt
or
jg
js
out
fbld
sahf
push
mov
pop
or
jmp
loope
(bad)
fnstcw
out
loopne
(bad)
fidivr
push
(bad)
ins
add
outs
pop
xchg
xchg
(bad)
(bad)
(bad)
(bad)
jl
ja
adc
or
out
call
test
xor
sub
ret
mov
(bad)
fcomip
mov
outs
xor
test
loope
push
fstp
call
std
(bad)
(bad)
jmp
inc
movs
test
inc
jle
mov
adc
fdiv
fdiv
cwde
inc
sbb
mov
push
adc
daa
loop
sub
clc
js
sbb
bound
fptan
fld
(bad)
(bad)
dec
push
mov
pop
mov
xlat
jmp
mov
je
pop
icebp
movs
(bad)
aad
fldenv
aas
add
jo
(bad)
addr16
(bad)
(bad)
(bad)
jnp
div
popf
jne
dec
jmp
sahf
adc
pop
mov
push
xlat
sbb
loope
add
mov
cmp
or
cmp
(bad)
(bad)
cmp
jmp
in
mov
inc
gs
ror
and
popa
test
jp
daa
cmps
jg
sub
xor
mov
in
sub
int
(bad)
call
std
push
and
xchg
call
push
mov
jbe
addr16
fisttp
(bad)
(bad)
(bad)
inc
aas
mov
in
gs
jno
ror
cwde
dec
leave
stos
cmp
jmp
inc
scas
mov
icebp
(bad)
dec
aaa
int3
jo
test
imul
ja
mov
sub
hlt
(bad)
adc
mov
mov
or
xlat
into
call
cdq
(bad)
(bad)
(bad)
push
sbb
cmp
fmul
mov
fadd
out
pusha
jbe
outs
outs
mov
pop
int
mov
(bad)
(bad)
(bad)
call
es
movs
xchg
push
push
xchg
bound
sub
pop
add
(bad)
(bad)
(bad)
jmp
sub
push
mov
ret
fiadd
inc
test
mov
outs
add
add
ins
inc
cli
scas
(bad)
(bad)
push
sti
cmp
sbb
dec
shl
je
js
push
sar
pusha
(bad)
(bad)
(bad)
jmp
mov
lock
xchg
call
repnz
arpl
pop
sbb
xchg
pop
and
call
jmp
push
sub
inc
vpsubq
sub
xchg
mov
or
(bad)
pop
loopne
repz
fcomp
fbstp
inc
ds
sbb
call
jecxz
cdq
cmps
(bad)
push
pop
jne
ins
cmp
mov
mov
mov
loopne
cld
xlat
call
retf
dec
outs
call
push
mov
mov
push
mov
push
cwde
(bad)
(bad)
(bad)
call
test
cmp
pushf
lods
jle
cmp
sbb
xchg
mov
fiadd
adc
(bad)
(bad)
(bad)
jmp
popa
and
ret
clc
(bad)
cld
adc
jle
sub
xchg
or
out
fs
loopne
mov
(bad)
inc
ret
mov
mov
arpl
pop
jp
push
div
movs
(bad)
(bad)
mov
das
retf
js
(bad)
jbe
jle
je
xchg
gs
add
pop
adc
in
(bad)
(bad)
(bad)
call
mov
jp
jmp
cmp
or
test
and
ins
(bad)
loop
add
clc
(bad)
(bad)
push
mov
fistp
dec
data16
movups
mov
push
jmp
add
stos
lahf
jmp
mov
inc
cmp
add
cmp
cmp
(bad)
(bad)
(bad)
jmp
jle
sub
xor
add
jl
mov
imul
xchg
lahf
mov
cmp
cmp
or
call
loopne
push
mov
jno
sbb
nop
push
mov
scas
pop
adc
jmp
push
dec
pop
xchg
sub
call
mov
js
pop
sub
(bad)
cmp
neg
shl
mov
sbb
or
mov
imul
(bad)
(bad)
(bad)
call
cld
aaa
ins
scas
mov
lea
in
jne
es
sar
mov
sub
inc
(bad)
(bad)
(bad)
call
xor
jg
and
imul
sbb
popf
das
mov
rol
(bad)
jg
sub
dec
and
imul
fisttp
(bad)
dec
fsub
fcomp
push
lock
push
call
mov
inc
lock
push
push
movs
mov
mov
sbb
imul
(bad)
jmp
data16
aaa
test
loop
loopne
and
daa
push
call
push
dec
push
scas
cmps
arpl
(bad)
(bad)
(bad)
inc
out
sbb
call
fcmovb
lock
jl
int
inc
es
imul
(bad)
in
(bad)
(bad)
(bad)
jmp
in
xor
sbb
inc
lods
mov
inc
retf
addr16
(bad)
cli
dec
jo
arpl
and
pop
loopne
call
fwait
ja
dec
stc
adc
in
xor
(bad)
out
mov
mov
(bad)
inc
outs
movs
cmp
and
imul
push
(bad)
(bad)
(bad)
call
xchg
mov
jg
(bad)
mov
jno
push
mov
loopne
movs
and
(bad)
(bad)
inc
push
adc
movs
test
test
adc
inc
pop
xor
adc
adc
jecxz
cmc
aaa
cld
(bad)
push
xor
jne
jmp
mov
out
data16
stos
mov
cdq
(bad)
(bad)
(bad)
jmp
xchg
int3
stos
pop
ret
out
pop
push
mov
jae
cmp
cmp
aaa
xchg
inc
sbb
stc
mov
sti
rol
pushf
inc
cmp
jno
mov
jmp
dec
scas
mov
mov
ja
sub
xor
push
jae
sub
(bad)
pop
bound
jmp
jbe
pop
adc
sub
adc
(bad)
mov
adc
jae
add
jbe
cld
inc
xchg
in
cmp
or
dec
sar
(bad)
(bad)
mov
popf
or
mov
dec
mov
sub
sub
and
push
(bad)
push
ror
inc
ret
imul
ret
xchg
(bad)
(bad)
push
push
sbb
int3
mov
xchg
jl
aaa
clc
das
push
jo
push
xor
das
clc
push
popa
cdq
sti
fdivr
cli
xor
les
pushf
cld
loop
pusha
pop
sar
(bad)
(bad)
jmp
sbb
jae
(bad)
dec
movs
jne
shr
cld
lods
mov
adc
out
iret
jmp
jmp
pop
sub
ror
inc
xor
ja
stos
test
xor
icebp
cmp
dec
idiv
(bad)
(bad)
dec
mov
jne
dec
cli
mov
jecxz
sti
xchg
inc
inc
iret
(bad)
inc
scas
test
or
jl
xchg
jae
add
push
repnz
iret
mov
cli
mov
mov
aam
stos
stc
dec
cli
sar
push
cmp
(bad)
aam
psrld
in
lds
push
mov
xchg
jle
cwde
popa
xchg
(bad)
(bad)
push
lahf
call
shl
xchg
(bad)
loopne
mov
mov
mov
pop
mov
(bad)
(bad)
(bad)
dec
cmp
jp
loopne
jl
push
push
lds
jo
lea
cld
scas
(bad)
sub
ds
int3
(bad)
(bad)
(bad)
call
stos
jbe
mov
dec
cmp
scas
mov
mov
cmp
ror
cmps
rol
mov
(bad)
ds
xchg
mov
adc
cwde
xchg
adc
mov
addr16
gs
(bad)
(bad)
jmp
mov
stos
lahf
pop
jle
sbb
pop
dec
sbb
out
or
(bad)
(bad)
fucom
pop
sti
(bad)
(bad)
(bad)
push
jno
pop
sub
(bad)
sbb
adc
arpl
jb
inc
xor
pop
cmp
or
retf
cli
(bad)
inc
(bad)
daa
mov
cs
jae
mov
lea
out
cli
or
push
pop
xor
stc
cmp
mov
(bad)
call
cmps
bound
add
jne
fst
cmp
inc
inc
jg
jecxz
dec
fdivr
(bad)
(bad)
call
cmp
cmp
cli
stc
mov
push
lods
test
cmp
call
xor
mov
jl
pop
pop
mov
out
adc
xchg
push
test
inc
mov
mov
push
jg
sahf
fs
sub
(bad)
(bad)
(bad)
fcomp
jno
adc
clc
cmc
(bad)
jae
call
sub
shl
(bad)
(bad)
call
movs
sbb
push
(bad)
not
mov
mov
pop
arpl
retf
in
clc
(bad)
(bad)
inc
cld
sbb
aas
mov
shr
stos
mov
mov
jle
call
call
sbb
cmp
aad
cmp
rcr
call
pop
or
cs
test
and
push
(bad)
inc
lods
retf
xchg
sub
pop
shr
leave
pop
(bad)
repz
mov
mov
(bad)
(bad)
(bad)
call
das
retf
sti
sbb
xchg
pop
push
mov
dec
test
jnp
in
fst
(bad)
(bad)
(bad)
push
mov
or
int
popf
pop
sub
sar
push
jmp
jge
inc
add
stos
stos
out
mov
cmps
jne
fdivrp
xor
push
cld
std
pop
pop
or
les
(bad)
(bad)
(bad)
jl
inc
dec
scas
sub
or
addr16
jp
dec
stos
mov
imul
jmp
rcl
cmp
stos
(bad)
inc
add
(bad)
or
arpl
sbb
add
(bad)
(bad)
call
pushf
add
rcr
or
sub
test
(bad)
(bad)
(bad)
call
arpl
out
jmp
jnp
ins
xor
aaa
adc
hlt
neg
dec
pop
adc
cmp
adc
push
cmc
inc
push
and
push
stos
inc
mov
xor
call
add
repz
sbb
clc
lods
inc
cld
(bad)
(bad)
jg
scas
sub
in
and
or
out
out
movs
push
cs
clc
jbe
call
js
call
mov
or
cs
popf
(bad)
mov
movs
lods
aad
inc
gs
add
xchg
arpl
(bad)
(bad)
dec
add
daa
or
xlat
xchg
push
mov
sbb
jp
or
push
(bad)
(bad)
(bad)
dec
mov
retf
pop
xchg
clc
or
ss
shl
pop
hlt
outs
aam
pop
prefetch
or
ds
push
xor
xchg
ret
sar
clc
xchg
stos
xchg
rol
fsubr
jmp
mov
(bad)
(bad)
stc
xchg
dec
mov
add
cmps
push
scas
shr
lods
mov
out
stos
pop
sub
inc
leave
(bad)
jg
jmp
imul
fs
sub
scas
dec
shr
pop
outs
iret
mov
cmp
pop
jmp
inc
xchg
pushf
mov
push
jb
dec
in
cli
sbb
push
jmp
mov
cmp
(bad)
(bad)
(bad)
std
pop
enter
movs
push
loopne
and
adc
jae
pop
stos
imul
mov
and
(bad)
(bad)
(bad)
(bad)
mov
(bad)
out
push
cmp
fiadd
mov
cmp
inc
jmp
jge
lds
je
(bad)
(bad)
push
cmp
sar
add
xchg
daa
add
fcom
mov
dec
test
aas
pop
pushf
pop
cmp
xor
adc
mov
adc
out
dec
push
(bad)
push
ins
int3
xchg
and
test
in
push
je
inc
jmp
fist
(bad)
(bad)
jmp
jg
jnp
lods
fstp
lea
jns
lods
xchg
nop
dec
out
sub
pop
test
(bad)
push
and
mov
mov
mov
out
fwait
mov
jl
mov
addr16
or
rol
jmp
mov
push
inc
stos
sbb
fwait
pop
cmp
je
(bad)
stos
inc
cmp
xchg
lahf
push
sub
fidivr
jae
ins
outs
dec
test
jmp
cmps
xor
pop
aaa
mov
xchg
jle
sub
add
fist
inc
xchg
dec
adc
ja
clc
(bad)
aas
inc
cmp
mov
call
mov
bnd
cmp
ret
mov
daa
ja
repnz
xchg
hlt
and
fnsave
add
out
dec
jmp
fsubr
pop
mov
dec
xchg
mov
lahf
push
mov
or
(bad)
jg
ficom
int
dec
(bad)
repz
and
js
sti
in
loop
shl
call
int
(bad)
add
fdivr
(bad)
pop
rcr
mov
xchg
sar
(bad)
je
fbstp
cmp
add
mov
cld
cmp
jge
cmp
dec
retf
sub
(bad)
mov
dec
js
(bad)
adc
repnz
mov
sbb
push
idiv
(bad)
jmp
inc
pop
mov
or
or
push
fiadd
clc
lock
aam
mov
(bad)
(bad)
jmp
inc
shl
cs
jp
or
loopne
(bad)
call
and
mov
add
and
loop
mov
cmp
mov
rol
das
out
xchg
cmps
in
dec
jnp
in
or
add
pop
jnp
inc
iret
hlt
cmp
mov
(bad)
(bad)
call
dec
daa
inc
sti
mov
ficom
dec
(bad)
pop
(bad)
mov
inc
(bad)
stc
jne
cmps
pop
fld
(bad)
(bad)
(bad)
jmp
shl
cwde
adc
inc
and
sub
dec
fnstsw
cmp
xchg
adc
(bad)
dec
push
clc
mov
into
cmp
mov
(bad)
xchg
xor
mov
mov
shr
mov
rol
mov
arpl
ins
stos
pop
jnp
(bad)
(bad)
dec
pop
jle
cmp
cmc
fsqrt
stos
ja
fst
pop
into
arpl
(bad)
(bad)
(bad)
cli
icebp
lods
jns
retf
or
outs
cli
push
popa
loopne
ret
(bad)
mov
popaw
add
adc
(bad)
(bad)
push
or
mov
lds
lahf
push
popa
(bad)
xchg
test
cdq
or
mov
sar
aad
and
shr
pop
lahf
or
fbld
(bad)
(bad)
(bad)
out
js
cs
iret
test
pop
push
push
pop
loopne
sbb
test
in
sbb
inc
inc
repz
dec
lock
(bad)
(bad)
dec
rcr
(bad)
call
sti
pop
pop
std
lea
cmp
jns
call
jmp
fdiv
or
mov
test
movs
aaa
pop
mov
ret
int
sbb
jmp
mov
mov
inc
add
push
jmp
jmp
push
sbb
cs
icebp
aaa
pop
jg
sub
pop
scas
dec
sbb
(bad)
fldenv
loopne
mov
pop
call
aad
arpl
ss
(bad)
(bad)
dec
dec
xchg
mov
movs
iret
xchg
sti
inc
out
out
call
mov
xor
jmp
inc
fdiv
out
mov
leave
push
sub
in
test
test
push
xor
sub
pop
jne
inc
loop
mov
sub
inc
jno
push
jle
gs
cmc
inc
jbe
shl
je
out
cmp
adc
sub
fldenv
lods
push
stos
dec
xchg
xor
outs
add
pop
and
es
(bad)
(bad)
(bad)
(bad)
mov
cs
and
pop
pop
(bad)
clc
outs
stc
pusha
cmps
jle
lods
xchg
(bad)
pop
or
xlat
dec
mov
(bad)
(bad)
jg
mov
aad
sbb
stos
scas
mov
outs
pop
mov
test
lock
jmp
sbb
rcr
xor
cmps
add
mov
sub
xchg
or
(bad)
fisttp
(bad)
mov
sti
xchg
vhsubpd
push
loope
mov
(bad)
(bad)
push
xchg
push
ds
jg
pusha
sbb
mov
pushf
cwde
sbb
mov
dec
jmp
mov
test
or
inc
pop
or
dec
push
(bad)
jecxz
mov
push
mov
ja
mov
inc
xor
jb
out
lea
daa
or
les
mov
out
clc
jecxz
xor
mov
pop
pop
lahf
jo
into
mov
lods
add
(bad)
(bad)
(bad)
dec
sub
sbb
gs
push
repz
repz
xor
push
ret
gs
lods
(bad)
in
clc
jmp
das
icebp
pop
(bad)
(bad)
(bad)
dec
cmp
imul
stos
mov
retf
retf
jb
pop
ror
call
aaa
adc
(bad)
(bad)
(bad)
(bad)
jle
or
mov
mov
dec
lahf
xchg
dec
dec
jmp
inc
add
(bad)
(bad)
(bad)
jmp
pop
cmp
lea
(bad)
out
loopne
clc
jne
sar
mov
arpl
fbld
mov
jmp
lods
aam
add
loopne
stos
or
push
dec
jge
cmp
cmp
das
and
push
xchg
pop
jnp
add
xor
sbb
in
in
popa
(bad)
(bad)
(bad)
jmp
push
imul
fsub
xor
retf
cli
pop
div
test
mov
pop
mov
sar
(bad)
push
add
(bad)
xor
jbe
add
dec
(bad)
lods
xchg
ds
cmp
lods
jg
(bad)
(bad)
inc
sub
add
pop
pop
jno
pop
xlat
pop
stc
dec
sbb
or
ds
push
test
(bad)
(bad)
jl
push
loope
xchg
imul
mov
pop
sbb
(bad)
dec
rcr
cmp
and
mov
(bad)
(bad)
inc
hlt
sub
lahf
jmp
push
or
retf
or
jle
mov
jg
add
inc
inc
fst
fcom
rcl
fstp
or
sar
sbb
(bad)
(bad)
jg
sbb
das
popa
or
cld
in
jmp
imul
lock
dec
xchg
(bad)
sbb
push
(bad)
(bad)
(bad)
call
cmp
jge
sub
int
inc
sbb
(bad)
inc
cwde
aaa
xlat
js
fs
dec
jmp
repz
loopne
pop
xchg
imul
mov
mov
inc
cmc
imul
ss
mov
mov
xchg
popa
or
cmc
fcmovnbe
stc
aam
sbb
fxch
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
sti
or
pop
mov
jmp
int
ins
sar
clc
std
fsub
(bad)
jmp
inc
mov
sbb
icebp
call
mov
mov
push
xchg
xchg
aaa
cld
cmp
mov
or
dec
in
jmp
push
pop
dec
or
std
add
push
pop
jo
(bad)
(bad)
(bad)
out
or
shl
mov
jp
inc
js
or
pop
and
cmp
(bad)
jp
(bad)
jnp
repz
lock
arpl
orps
mov
call
jnp
repnz
cdq
fs
ret
repnz
movs
bound
sbb
ret
cmp
jge
(bad)
(bad)
(bad)
inc
jo
cmc
jp
push
xchg
in
cmp
(bad)
lds
popf
iret
mov
in
test
adc
mov
push
(bad)
stos
pushf
loop
lods
or
mov
inc
stos
xchg
ja
pop
std
int
(bad)
(bad)
(bad)
(bad)
(bad)
out
iret
push
icebp
fcom
imul
ret
xchg
lock
out
add
push
scas
scas
sbb
(bad)
(bad)
dec
std
dec
clc
adc
push
fwait
push
add
xor
(bad)
(bad)
push
push
mov
push
js
add
retf
mov
rcl
out
push
jo
add
fdivr
das
clc
call
push
ret
pop
and
pop
sub
loope
rcr
cld
(bad)
jmp
fstp
ss
test
pop
add
out
push
push
test
add
(bad)
(bad)
inc
enter
(bad)
shl
int
movs
cmp
pushf
outs
(bad)
inc
into
push
xchg
(bad)
jmp
mov
out
cmp
sbb
inc
loope
cmps
ror
clc
push
call
loopne
(bad)
dec
sti
xchg
fwait
or
cmp
adc
jb
or
(bad)
call
mov
pop
or
push
jb
cmp
inc
cli
aas
push
hlt
lahf
lahf
cmp
or
mov
jle
cwde
nop
mov
or
jae
mov
lock
mov
mov
pop
mov
mov
je
(bad)
push
mov
pop
out
loope
pop
call
call
or
push
pop
add
jp
sub
push
stos
sub
out
dec
xchg
jl
or
fldcw
or
out
sbb
cmp
ins
add
push
inc
jmp
mov
(bad)
(bad)
(bad)
call
sbb
aad
(bad)
adc
inc
in
test
xor
shl
pop
adc
mov
aaa
hlt
xor
pop
call
call
jg
or
(bad)
(bad)
(bad)
mov
das
jns
ret
xchg
loope
add
mov
xor
mov
mov
(bad)
(bad)
call
inc
push
mov
mov
xchg
jne
jle
iret
mov
sub
shr
lods
jae
jge
dec
(bad)
(bad)
(bad)
dec
add
pop
cdq
scas
xchg
push
push
pop
lahf
out
fdiv
addr16
rcr
repz
push
popa
mov
add
(bad)
(bad)
(bad)
(bad)
mov
mov
xchg
scas
xchg
jne
das
xor
lea
int3
jb
call
(bad)
call
pop
push
cmp
mov
aad
push
outs
aad
(bad)
(bad)
(bad)
(bad)
cmp
out
or
js
stos
fcomp
xchg
mov
arpl
or
jno
jne
lea
mov
enter
ret
jle
xor
or
inc
arpl
(bad)
(bad)
jmp
push
rcl
push
test
cmp
pusha
or
shl
inc
mov
stos
add
inc
lods
imul
in
push
mov
sbb
jl
xchg
or
outs
cli
outs
scas
gs
adc
inc
and
dec
je
je
xor
fst
adc
(bad)
(bad)
dec
adc
mov
jmp
adc
enter
or
(bad)
jmp
jmp
bound
inc
lods
(bad)
arpl
mov
sti
call
inc
xlat
pop
(bad)
hlt
jbe
out
adc
mov
jp
dec
push
push
test
(bad)
(bad)
push
xchg
ins
jnp
pop
lahf
lea
pop
xchg
mov
xlat
and
pop
in
pusha
stc
fldenv
or
mov
ja
(bad)
push
add
test
into
push
xor
add
ja
int3
pusha
test
(bad)
dec
enter
add
enter
mov
sub
loope
cmp
fcom
(bad)
jmp
xor
jne
cmps
mov
jbe
xlat
adc
dec
cmps
sub
(bad)
(bad)
(bad)
push
sbb
dec
sti
adc
outs
sub
pop
xchg
and
sti
push
mov
push
pop
(bad)
(bad)
(bad)
inc
jmp
fs
inc
pop
loopne
push
in
and
cmps
pop
inc
in
xchg
mov
cmp
(bad)
(bad)
(bad)
cmp
ss
mov
paddsw
mov
test
out
push
nop
or
and
mov
(bad)
(bad)
out
clc
cmp
mov
ret
movs
in
enter
imul
push
mov
pop
and
(bad)
push
pop
fldenv
add
daa
rcl
cmps
jg
push
fisubr
(bad)
(bad)
(bad)
push
fld
push
mov
adc
inc
lahf
imul
cmc
pushf
sub
out
nop
stos
(bad)
(bad)
dec
ret
pusha
pushf
jl
push
sbb
lods
mov
inc
cmp
(bad)
(bad)
(bad)
in
lea
jns
push
ins
adc
adc
in
scas
aam
adc
xchg
(bad)
(bad)
call
call
push
cmp
mov
cmp
aad
pop
(bad)
in
lock
dec
mov
mov
push
sub
or
int3
mov
outs
or
inc
fild
cld
mov
cdq
xor
test
or
(bad)
(bad)
inc
cmp
adc
inc
mov
xlat
outs
pop
pusha
retf
push
fisttp
inc
movs
xor
or
pop
dec
fcomip
stos
jo
inc
retf
jmp
std
(bad)
(bad)
inc
adc
int
cs
(bad)
and
in
jns
push
pop
fwait
mov
(bad)
(bad)
call
into
adc
retf
aam
sbb
sbb
mov
jno
and
or
(bad)
(bad)
call
std
and
aas
rcl
sti
call
fimul
shr
imul
dec
xor
mov
adc
push
and
outs
pop
(bad)
xchg
das
inc
sti
and
loop
push
pop
xchg
pop
pop
retf
cld
fidiv
and
sbb
(bad)
(bad)
jmp
inc
dec
popa
pop
inc
or
loop
adc
mov
test
xchg
or
addr16
mov
adc
dec
sub
ror
mov
loop
and
mov
test
call
movs
rdpmc
xchg
nop
fsub
xchg
xor
and
(bad)
stc
adc
and
jg
lods
xchg
cmc
push
cld
lods
int
jmp
(bad)
ins
adc
in
xor
(bad)
(bad)
(bad)
fistp
ds
ins
test
and
(bad)
xor
sub
add
(bad)
call
int3
adc
into
sbb
mov
in
mov
cdq
inc
je
cmps
mov
cs
jp
(bad)
(bad)
call
out
dec
dec
push
mul
cmps
push
sub
es
lds
cmp
mov
arpl
std
aas
push
sbb
mov
enter
and
jl
les
imul
(bad)
(bad)
(bad)
(bad)
fsubr
nop
push
(bad)
cmp
not
push
ja
fstp
mov
and
jne
inc
add
(bad)
(bad)
inc
adc
or
dec
fadd
aad
xor
scas
or
fimul
mov
(bad)
(bad)
(bad)
jmp
hlt
jo
arpl
dec
test
adc
cmps
xor
push
mov
not
sub
call
es
xchg
push
ja
and
push
test
lahf
(bad)
(bad)
call
pop
outs
leave
stc
pop
into
and
dec
int3
and
pop
jno
test
or
jp
jmp
jp
add
fmul
lds
loopne
mov
inc
cli
inc
cmp
cmps
sbb
mov
pop
movs
adc
outs
cmc
(bad)
jmp
mov
mov
cmp
xlat
pop
jmp
into
test
mov
call
call
clc
pop
xchg
add
or
push
mov
cmp
jl
mov
mov
cli
fucomi
out
fs
mov
nop
xchg
(bad)
call
dec
fcomp
repnz
icebp
callw
jb
sti
mul
xchg
inc
cmp
(bad)
call
pop
fild
int
lahf
ficom
or
mov
sub
stos
mov
addr16
mov
call
scas
pslld
mov
imul
push
pop
clc
(bad)
(bad)
(bad)
cli
std
sub
ror
dec
out
push
add
jbe
and
pushf
xchg
push
out
in
cs
fistp
xchg
pop
je
xor
add
inc
hlt
pop
arpl
xor
xor
jns
mov
call
sbb
dec
or
in
repnz
pop
mov
sub
fidivr
mov
xor
(bad)
(bad)
jmp
pop
pop
pop
cmc
xor
xor
jl
adc
leave
(bad)
(bad)
dec
push
jb
fdivr
fisubr
int3
and
add
popa
(bad)
ret
(bad)
(bad)
dec
pusha
xor
and
jle
aas
cmps
in
add
jne
push
enter
jmp
inc
adc
cmc
mov
xchg
mov
lds
mov
xchg
lock
rol
outs
mov
(bad)
cmp
mov
dec
les
(bad)
(bad)
(bad)
dec
jecxz
mov
adc
fstp
imul
addr16
fsubp
push
mov
and
lods
jle
(bad)
jg
(bad)
fsubr
jmp
xor
mov
idiv
fstp
push
mov
cli
pop
lock
sbb
outs
xchg
inc
xor
or
aad
xor
adc
test
or
aas
bound
test
push
adc
jmp
cld
popa
fs
(bad)
(bad)
(bad)
call
dec
lods
sub
mov
in
and
movs
adc
xchg
into
mov
mov
mov
out
aaa
sub
push
mov
fnstcw
pop
pop
xchg
(bad)
dec
pop
retf
mov
jo
xor
add
mov
scas
mov
(bad)
(bad)
inc
lods
(bad)
int
xor
jmp
in
loopne
lods
mov
and
ins
mov
and
mov
out
jbe
cdq
in
jns
inc
adc
mov
mov
mov
jno
rol
adc
cmp
fs
pop
nop
out
lea
dec
les
xchg
mov
xchg
or
int3
dec
xchg
sbb
fidiv
add
fcomip
jg
cmc
lahf
out
dec
push
nop
push
movs
(bad)
xchg
push
push
call
jecxz
call
fdiv
sar
outs
gs
fnsetpm(287
mov
sub
push
xor
cli
mov
std
ret
cli
lock
in
call
xchg
dec
mov
or
std
adc
(bad)
mov
add
dec
cmps
stc
sub
cmp
hlt
mov
adc
call
cmp
out
fsub
clc
(bad)
das
xor
sub
repz
xchg
(bad)
out
pop
mov
cmps
pusha
push
xor
nop
mov
mov
(bad)
jmp
(bad)
(bad)
call
enter
sub
sub
pop
adc
pop
idiv
jne
in
cmp
add
icebp
test
(bad)
inc
xchg
out
or
test
or
call
(bad)
(bad)
mov
lea
frstor
cmp
dec
loop
push
loope
test
nop
adc
pop
jae
sbb
or
sbb
fs
enter
ja
(bad)
(bad)
(bad)
dec
inc
or
mov
adc
pushf
xor
les
fmul
leave
mov
out
das
(bad)
(bad)
(bad)
(bad)
jmp
int3
dec
lods
pop
push
jg
add
mov
mov
pop
sub
shl
(bad)
out
cli
mov
(bad)
cli
fnstsw
pop
retf
xlat
fbld
jle
movs
addr16
push
add
(bad)
dec
fisttp
arpl
sub
das
jmp
scas
sti
out
cwde
mov
add
dec
cmp
sub
adc
and
mov
cmp
mov
clc
cwde
ss
fidiv
mov
js
fcomp
or
xor
mov
(bad)
(bad)
(bad)
jg
fdiv
icebp
and
(bad)
pop
loop
iret
pop
dec
push
cmp
in
test
lock
lock
sbb
xor
fmul
ss
mov
(bad)
(bad)
call
add
dec
dec
mov
xchg
jae
rcl
hlt
add
lods
pop
leave
lahf
scas
add
(bad)
(bad)
call
mov
fidiv
add
cmp
and
(bad)
jmp
ror
or
loop
icebp
inc
adc
arpl
loopne
jmp
push
aaa
cld
push
inc
lahf
sub
je
in
or
cmp
mov
adc
(bad)
push
and
popf
mov
imul
sbb
pop
ins
into
and
(bad)
mov
push
int3
(bad)
inc
jns
cmp
xor
jle
call
loopne
int3
mov
lea
pop
arpl
iret
mov
mov
les
jg
cwde
push
inc
(bad)
(bad)
call
mov
into
test
or
fld
int
ret
retf
out
(bad)
(bad)
call
xchg
jno
sub
(bad)
fs
sub
lea
inc
lds
jge
adc
or
cld
outs
in
(bad)
inc
test
sub
sub
test
test
lods
ja
fwait
jge
icebp
(bad)
jmp
lock
cmp
push
dec
mov
ja
and
movs
rcl
push
(bad)
(bad)
(bad)
jmp
gs
addr16
or
addr16
mov
int
aam
outs
cmp
imul
(bad)
(bad)
call
fcomp
in
lods
mul
fdiv
icebp
rcr
cmp
mov
clc
daa
or
(bad)
(bad)
(bad)
aas
jne
pop
icebp
mov
jl
in
into
ins
pushf
jb
pop
pop
or
jnp
ins
adc
(bad)
jmp
mov
lea
neg
pop
mov
inc
dec
add
(bad)
(bad)
(bad)
push
mov
xchg
mov
iret
mov
mov
fstp
ss
shl
and
(bad)
(bad)
call
xor
dec
ror
stos
addr16
(bad)
(bad)
pop
iret
std
popa
test
pop
repnz
jno
dec
push
popf
hlt
(bad)
call
cld
sbb
and
dec
pop
bound
pop
cvtps2pi
cmp
std
push
mov
scas
pop
icebp
dec
adc
cmp
pop
lock
lods
and
inc
pop
cwde
cli
div
aam
cmp
jnp
cbw
sub
mov
rcl
popa
cmp
cmps
lods
loopne
fist
scas
jg
(bad)
(bad)
(bad)
call
aad
daa
push
in
push
and
loop
mov
out
push
js
sub
(bad)
(bad)
inc
push
out
neg
mov
xchg
mov
addr16
xor
sbb
pusha
(bad)
(bad)
(bad)
fild
lea
out
leave
and
jo
pusha
jmp
mov
pop
jbe
pop
leave
jae
jl
(bad)
(bad)
jmp
sbb
push
cmp
sbb
xchg
jecxz
xchg
jg
add
cld
iret
(bad)
loop
mov
jle
mov
ss
jg
test
pop
push
pop
sti
jg
mov
bndstx
jecxz
push
mov
enter
(bad)
jg
jno
jno
push
js
js
mov
loope
sbb
adc
scas
out
xchg
add
inc
(bad)
(bad)
(bad)
(bad)
cmp
jle
lock
lock
out
sbb
sbb
pushf
inc
into
mov
retf
in
into
sub
jmp
aas
jbe
scas
pop
jb
not
xchg
mov
int3
daa
dec
hlt
popf
xchg
sub
in
enter
aaa
nop
fmul
inc
ficom
mov
(bad)
jo
(bad)
(bad)
(bad)
jns
je
mov
ror
in
cmp
jno
dec
xchg
icebp
push
dec
mov
js
rcl
fild
shr
scas
xchg
ins
mov
cld
pop
xor
mov
jmp
sub
pop
adc
arpl
js
cli
dec
jae
push
cmc
adc
call
lods
mov
mov
iret
(bad)
(bad)
out
hlt
xchg
push
(bad)
(bad)
(bad)
inc
cmps
cwde
sbb
inc
xor
sub
xor
pop
adc
mov
and
movs
jne
aam
movs
sub
clc
(bad)
(bad)
(bad)
call
aam
mov
jle
dec
(bad)
jo
retf
loope
std
and
imul
(bad)
call
pusha
mov
pop
scas
int
mov
mov
clc
call
scas
inc
cmp
jae
cli
retf
repnz
stos
jo
and
lods
(bad)
(bad)
(bad)
(bad)
cmp
pop
in
pop
pop
imul
cdq
fdivr
addr16
(bad)
dec
movs
fmulp
mov
mov
mov
ret
lahf
fld
push
pop
pop
xlat
pop
push
aas
(bad)
(bad)
(bad)
call
ins
test
and
popf
sub
jmp
mov
int
(bad)
(bad)
push
pop
add
inc
cli
in
gs
mov
std
pop
fcomi
lock
add
jmp
mov
or
xchg
stos
js
fimul
retf
out
pop
loope
mov
sub
(bad)
(bad)
inc
fwait
jmp
in
repnz
sbb
(bad)
mov
je
(bad)
jmp
and
mov
clc
pop
lods
ret
pop
adc
and
sti
pop
sbb
(bad)
(bad)
dec
sar
rol
push
push
ja
(bad)
mov
pop
mov
sar
fistp
call
sub
(bad)
(bad)
dec
jle
retf
dec
fldcw
push
push
mov
sbb
add
lods
pop
gs
fwait
(bad)
(bad)
(bad)
call
add
pop
cwde
loop
in
and
jb
sub
fs
pusha
xchg
test
fwait
push
jp
scas
cli
(bad)
push
xchg
popa
and
mov
dec
icebp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
sub
xchg
and
shl
and
xchg
ret
daa
xchg
dec
inc
pushf
add
(bad)
(bad)
dec
or
push
rdmsr
je
mov
and
jge
mov
repz
adc
xchg
push
dec
(bad)
(bad)
(bad)
inc
add
out
nop
dec
xor
and
mov
jmp
mov
(bad)
(bad)
(bad)
jmp
or
adc
cmp
push
xchg
jl
mov
xor
mov
sar
jg
clc
fsub
(bad)
js
or
adc
test
jmp
mov
sub
fbld
lods
retf
repnz
inc
aad
popa
outs
or
(bad)
call
push
loopne
jg
imul
arpl
imul
cmc
(bad)
mov
jl
xchg
mov
(bad)
sbb
das
lock
dec
(bad)
(bad)
call
dec
mov
pushf
mov
aam
mov
cmp
(bad)
(bad)
dec
daa
jecxz
xchg
mov
jnp
aaa
adc
and
xchg
pusha
lods
xor
(bad)
(bad)
push
or
sbb
out
push
clc
xlat
call
xchg
fld
push
pop
loop
dec
pop
xchg
push
sub
jae
cld
out
mov
mov
inc
dec
inc
hlt
fidivr
call
(bad)
xchg
mov
push
call
sub
mov
sub
dec
push
mov
xlat
jne
pushf
sbb
(bad)
(bad)
(bad)
cmp
xor
push
int3
sbb
imul
movs
aad
(bad)
adc
sbb
jmp
add
cmp
dec
daa
inc
(bad)
fsubr
dec
(bad)
call
or
stos
ret
jne
jp
mov
ret
cmc
std
xchg
in
mov
mov
mov
icebp
mov
xchg
in
(bad)
into
jno
dec
scas
pop
mov
mov
mov
out
sar
mov
xor
scas
fistp
mov
mov
add
and
jg
push
xchg
dec
xor
cmps
call
(bad)
(bad)
call
push
push
rcl
ja
mov
fcom
push
jnp
not
(bad)
ja
imul
lea
(bad)
(bad)
(bad)
(bad)
jge
es
xchg
mov
mov
and
cmp
test
out
mov
pop
dec
adc
aad
(bad)
(bad)
(bad)
dec
pop
iret
push
rol
mov
shl
cmp
xor
adc
push
sub
mov
push
das
js
aad
stos
push
add
add
fidivr
cdq
add
call
dec
out
xlat
ror
scas
adc
xchg
sahf
cld
xlat
jg
mov
pop
cmp
(bad)
(bad)
(bad)
fist
lods
cmp
out
adc
out
cld
(bad)
fld
fisubr
idiv
push
dec
xchg
fld
mov
sub
jmp
sub
sti
outs
iret
(bad)
pushf
mov
(bad)
add
push
push
in
sbb
imul
fnstcw
in
jbe
inc
cli
jg
cmp
jmp
addr16
std
fstp
pop
enter
pop
cmp
repnz
cmps
ins
outs
xor
in
mov
popf
mov
test
inc
xlat
mov
cmp
dec
rcr
out
sub
mov
mov
mov
pop
movq
std
out
jg
push
adc
aas
pop
(bad)
imul
fwait
out
sbb
cli
pop
jo
scas
sti
(bad)
(bad)
jmp
push
fisttp
sbb
mov
xchg
idiv
xlat
aas
jg
scas
(bad)
push
pushf
out
xchg
mov
loopne
out
mov
push
jae
jb
jl
push
repnz
rcr
pop
xchg
data16
push
dec
mov
(bad)
(bad)
(bad)
fistp
shl
dec
push
int3
jecxz
jmp
and
sub
hlt
sar
xor
(bad)
(bad)
(bad)
call
mov
pushf
add
pop
pop
inc
pop
ins
rcl
ins
adc
xchg
jb
cmp
push
cli
mov
loop
add
push
je
test
inc
add
dec
xchg
(bad)
(bad)
(bad)
jnp
out
data16
or
push
jmp
or
adc
(bad)
(bad)
(bad)
jmp
(bad)
outs
adc
(bad)
ss
push
inc
test
adc
mov
(bad)
(bad)
push
cmp
push
and
mov
imul
pushf
outs
rcr
fsubr
mov
cwde
sub
adc
(bad)
(bad)
call
cmp
sbb
xor
ds
sets
xchg
es
dec
mov
jge
jno
es
mov
inc
push
jmp
mov
leave
movs
hlt
arpl
push
(bad)
adc
cmps
popa
dec
add
outs
ret
outs
outs
inc
js
mov
(bad)
jmp
dec
ror
push
or
rcl
mov
pop
mov
add
adc
or
(bad)
(bad)
(bad)
jmp
xchg
in
sub
dec
es
cmp
mov
scas
or
outs
mov
mov
std
(bad)
jnp
test
mov
adc
mov
(bad)
(bad)
(bad)
jg
ret
jo
jp
loopne
call
xchg
sub
inc
pop
ins
mov
ret
int
cs
sbb
(bad)
jmp
inc
sar
xchg
fidiv
imul
arpl
push
es
dec
mov
scas
push
cmp
mov
add
fnstenv
pop
inc
ficomp
push
mov
cmp
push
outs
mov
jno
cmps
cmp
(bad)
(bad)
sub
aad
imul
jns
inc
sub
pop
das
cmp
xchg
xchg
pop
xor
(bad)
jmp
mov
xor
pop
push
push
jge
mov
sti
popf
mov
xor
cmp
scas
stos
mov
push
out
(bad)
xor
shl
xchg
dec
or
push
ret
sub
fwait
push
cmp
mov
inc
in
cdq
(bad)
(bad)
(bad)
(bad)
jmp
cmp
mov
sbb
aam
xchg
and
pop
adc
add
(bad)
dec
or
(bad)
xchg
fs
ja
mov
push
int3
mov
call
loope
xor
dec
adc
sbb
fs
mov
ror
shr
test
fsubr
outs
cmc
mov
jp
xor
icebp
pop
inc
lock
cmps
cmps
(bad)
(bad)
(bad)
jmp
fimul
xchg
lods
cmp
mov
shr
pop
sar
or
cmp
(bad)
(bad)
(bad)
push
aam
rol
pop
sub
out
mov
daa
sbb
inc
loope
sub
sar
loopne
pop
inc
push
sbb
dec
jmp
mov
xchg
icebp
je
jmp
adc
(bad)
(bad)
inc
xor
cmp
fstp
xchg
stos
fsub
out
cmc
rcl
xchg
out
add
push
dec
mov
and
sbb
ror
repnz
(bad)
sub
(bad)
(bad)
(bad)
inc
out
jp
std
inc
lods
repnz
push
fs
xor
clc
enter
lock
mov
scas
jns
outs
cmp
(bad)
(bad)
inc
sub
int3
shr
outs
or
or
loop
lods
pusha
popa
fdivp
mov
mov
sub
loop
(bad)
jnp
leave
rol
mov
lock
je
xor
adc
(bad)
jmp
add
stos
sbb
dec
dec
cs
xor
jge
pop
test
popf
add
xchg
jmp
icebp
add
adc
js
mov
(bad)
(bad)
(bad)
inc
push
xchg
retf
mov
cmp
and
mov
fwait
xchg
xor
sbb
cmp
inc
dec
mov
ins
test
in
dec
shl
xchg
inc
adc
cwde
adc
(bad)
dec
dec
adc
push
adc
jns
cs
dec
or
mov
out
(bad)
(bad)
inc
jne
mov
(bad)
ins
inc
scas
arpl
jmp
test
add
in
xchg
push
push
push
xor
mov
outs
mov
sahf
inc
adc
mov
icebp
les
add
jnp
cmc
out
pop
inc
in
lea
(bad)
push
call
into
push
(bad)
(bad)
call
shl
inc
mov
sub
inc
mov
icebp
cmps
outs
div
mov
(bad)
(bad)
push
or
lea
push
sbb
popf
dec
push
fcom
mov
test
push
dec
int
add
xor
sbb
pop
sar
and
outs
push
and
mov
cdq
mov
and
out
inc
pop
jae
jl
jp
xchg
dec
(bad)
(bad)
(bad)
inc
stos
js
test
sbb
and
xor
(bad)
sbb
sbb
sub
adc
push
(bad)
mov
jb
mov
push
push
pusha
or
sub
push
pop
mov
lds
and
nop
mov
movs
jns
fnstenv
add
ins
in
cdq
mov
mov
add
xchg
adc
(bad)
call
cmp
xchg
pop
lock
sub
gs
or
fild
rcl
cmp
lods
cmp
mov
sar
call
(bad)
in
jne
adc
mov
(bad)
stos
ins
or
(bad)
(bad)
jp
adc
loopne
rcl
cmc
pop
add
adc
stos
mov
jmp
mov
push
push
stos
hlt
xor
fcomip
cmc
adc
in
push
xchg
and
(bad)
(bad)
(bad)
dec
sub
dec
jp
into
cdq
sahf
add
mov
imul
mov
inc
mov
jg
pop
lock
(bad)
pop
add
loope
imul
pop
and
push
or
(bad)
(bad)
jmp
nop
leave
and
adc
lds
ret
shr
lods
cmp
sbb
(bad)
call
mov
sbb
inc
jo
sar
int
xchg
fnstcw
inc
lds
mov
and
push
mov
(bad)
call
mov
cmp
pop
iret
cmp
adc
add
add
push
sub
scas
cli
imul
dec
mov
cmp
sbb
xor
jecxz
loop
(bad)
inc
and
xor
adc
sar
movs
cmp
(bad)
(bad)
jmp
lock
stos
pop
(bad)
shl
sub
daa
xor
xchg
sub
push
fimul
pushf
xor
shr
(bad)
dec
inc
shl
sub
retf
aam
leave
popa
mov
and
gs
ja
mov
adc
daa
mov
mov
ja
fsubr
cmp
inc
xchg
ja
push
mov
lds
(bad)
xor
and
push
cmp
cs
ins
jge
sbb
ret
push
pop
cmps
(bad)
(bad)
(bad)
fild
outs
lock
js
shl
cmp
mov
or
xchg
lds
clc
inc
xchg
lahf
leave
test
loope
pop
hlt
inc
xor
jae
(bad)
(bad)
dec
sub
mov
sub
add
jl
jmp
hlt
inc
and
add
jno
sub
mov
dec
rcl
xchg
jnp
jecxz
mov
rol
sub
mov
movs
into
xor
(bad)
(bad)
inc
pop
bound
sbb
fwait
push
adc
jle
and
aaa
inc
mov
daa
pop
(bad)
in
das
clc
inc
pusha
ins
inc
inc
inc
xchg
pop
test
jp
not
jmp
inc
(bad)
(bad)
(bad)
call
cwde
inc
xor
aam
lods
sub
mov
add
add
xor
push
aam
push
mov
lock
int3
bound
loopne
outs
test
dec
imul
ret
test
mov
dec
loop
cmp
(bad)
(bad)
(bad)
inc
std
jmp
xor
repz
data16
xchg
or
ja
aam
cdq
jo
or
inc
pop
pop
stc
mov
loop
test
mov
sub
mov
push
arpl
(bad)
(bad)
dec
pop
stos
cmps
sub
dec
mov
movs
movs
push
xor
push
aad
les
sbb
icebp
inc
popa
dec
sub
push
dec
ret
(bad)
(bad)
inc
cli
cmp
test
cmp
push
add
inc
rol
icebp
cmp
call
xchg
int
xlat
mov
cmp
movs
out
and
arpl
call
gs
xchg
cdq
sar
(bad)
call
dec
loop
rcl
push
jae
and
retf
or
jno
fimul
lods
cmp
dec
lock
xchg
cmp
or
xchg
jns
ret
test
stc
retf
jp
mov
pop
mov
cld
test
adc
mov
dec
stc
mov
mov
and
mov
fcomp
xor
clc
(bad)
(bad)
(bad)
fsub
call
jle
inc
dec
fcomp
cdq
ins
test
jmp
cld
scas
scas
push
xor
sub
and
aas
cs
test
call
fiadd
js
sub
mov
sti
pop
add
rcl
repz
(bad)
(bad)
jmp
cs
int
fld
pop
jne
rcr
dec
jg
pop
aad
add
(bad)
mov
inc
aam
popa
je
shl
outs
movs
adc
xchg
add
popa
pop
or
mov
add
(bad)
(bad)
jmp
add
and
add
push
jle
mov
sub
jmp
push
push
sbb
hlt
pusha
test
xchg
(bad)
pop
out
outs
and
rcl
cmp
(bad)
mov
adc
inc
in
adc
int3
sub
xor
lds
retf
jnp
(bad)
(bad)
dec
loopne
bound
adc
cmp
or
ror
sub
dec
retf
fdivr
(bad)
dec
fnsave
sbb
int3
pop
mov
jbe
cmp
cmps
out
mov
jmp
clc
jmp
nop
add
ror
xor
inc
add
sbb
(bad)
(bad)
fild
int
daa
aam
rol
jb
test
(bad)
jo
fimul
cmps
xchg
dec
repz
cli
(bad)
jmp
jmp
lds
push
popf
push
ja
pop
and
or
pushf
dec
inc
sbb
fldenv
dec
push
test
out
xchg
sub
cmps
push
call
mov
mov
test
es
cwde
sub
add
int
xor
(bad)
(bad)
push
xchg
adc
mov
xchg
in
(bad)
mov
popf
lea
(bad)
inc
inc
arpl
push
pushf
test
jmp
adc
add
sbb
add
(bad)
(bad)
call
rcr
imul
adc
inc
and
ficomp
sub
(bad)
jmp
push
dec
out
test
test
(bad)
dec
mov
rcl
cdq
mov
shl
and
xor
and
fcom
add
adc
xchg
mov
jo
enter
daa
add
jg
adc
pop
sub
call
movs
repnz
in
(bad)
es
sahf
and
js
call
cld
cmp
bound
imul
xchg
test
dec
adc
and
dec
add
push
dec
cli
stos
fs
cmp
(bad)
mov
dec
jb
xchg
(bad)
add
and
rcr
es
jle
(bad)
cdq
add
or
cwde
repnz
or
mov
(bad)
xchg
(bad)
(bad)
jg
movs
es
mov
ins
popa
dec
jae
push
push
push
js
pop
fisub
(bad)
(bad)
jmp
push
(bad)
stos
push
push
push
cmp
out
inc
ret
aad
aad
fild
xor
jb
inc
jle
dec
xchg
rcr
ss
loop
(bad)
cmp
adc
jbe
loop
(bad)
jg
hlt
xchg
leave
mov
aaa
inc
test
cmp
out
xchg
push
mov
push
push
sub
cmp
sub
xor
dec
ret
(bad)
call
pop
inc
dec
push
add
xchg
xchg
cmp
jecxz
add
xor
int3
ror
sbb
add
aad
repnz
mov
inc
imul
mov
jne
jl
(bad)
(bad)
(bad)
(bad)
fdivp
pop
rcr
test
(bad)
dec
in
loopne
lea
rcr
(bad)
jmp
(bad)
(bad)
call
in
ds
fstp
pop
call
mov
ret
dec
adc
test
pop
pop
dec
cmp
pop
xchg
mov
jno
(bad)
hlt
(bad)
(bad)
(bad)
jns
out
call
mov
fldcw
pop
fmul
dec
fdiv
fldcw
call
(bad)
xor
(bad)
jae
mov
sub
(bad)
out
js
(bad)
setns
or
push
xchg
mov
call
mov
cdq
repz
or
adc
cmp
(bad)
std
jae
add
shl
(bad)
dec
cs
add
add
arpl
inc
inc
pop
jnp
mov
or
inc
(bad)
jmp
adc
inc
mov
call
mov
sbb
push
aam
xor
aam
mov
fimul
bound
(bad)
dec
xchg
xchg
out
mov
out
mov
sub
pop
in
jbe
add
scas
fcom
fsubr
hlt
push
call
push
mov
outs
repz
in
sahf
(bad)
(bad)
(bad)
call
pop
push
adc
mov
fidiv
pop
mov
not
(bad)
(bad)
(bad)
(bad)
ficom
push
in
or
sar
and
pop
jl
lea
popf
mov
inc
xchg
out
xchg
loopne
addr16
inc
jl
push
jo
jmp
les
call
es
in
fs
mov
push
mov
pop
and
repz
xor
push
push
or
arpl
sub
adc
rcl
mov
jne
adc
sbb
call
xchg
push
sub
mov
(bad)
jg
call
shl
inc
shl
leave
mov
mov
inc
hlt
ss
xchg
repnz
dec
jp
sub
jmp
movs
jecxz
adc
and
(bad)
(bad)
(bad)
call
pop
cs
arpl
mov
cmp
iret
add
pop
add
popa
cmp
jp
push
nop
mov
(bad)
call
jecxz
js
jl
es
push
js
add
(bad)
jmp
adc
add
popf
shl
dec
or
or
or
sub
dec
inc
inc
div
pop
test
sub
loopne
mov
pusha
leave
pushf
jecxz
repz
and
pushf
xor
fisttp
adc
pop
pop
adc
inc
cwde
jle
and
mov
jno
dec
(bad)
(bad)
(bad)
jmp
pop
stos
fild
adc
das
cmp
mov
nop
push
neg
adc
(bad)
(bad)
inc
ficom
sub
scas
fsub
xchg
inc
and
test
and
or
mov
out
jge
xchg
xchg
mov
push
ins
rcr
jns
push
sub
sub
(bad)
(bad)
(bad)
jmp
mov
sub
pop
sbb
sub
(bad)
push
inc
jmp
xor
push
dec
test
xor
in
cs
bswap
out
in
cmp
sub
test
mov
sub
sub
push
clc
sar
(bad)
(bad)
jge
adc
sub
pop
mov
mov
cmp
inc
or
push
jle
inc
pop
arpl
pop
jnp
mov
xor
call
icebp
xor
dec
aaa
cmps
jl
ret
gs
fs
xchg
inc
in
les
(bad)
(bad)
(bad)
call
add
sub
addr16
add
mov
les
mov
ins
or
(bad)
push
fwait
push
in
fist
mov
(bad)
push
sbb
je
or
(bad)
(bad)
(bad)
cld
test
pop
aad
icebp
dec
or
pop
xchg
icebp
dec
test
add
xor
mov
(bad)
(bad)
jmp
(bad)
jo
jmp
push
jp
ins
mov
cmp
ins
mov
or
push
mov
dec
sbb
sbb
xchg
inc
test
mov
cmp
std
(bad)
(bad)
dec
(bad)
or
aas
push
ds
sub
jno
mov
push
push
dec
mov
mov
(bad)
push
test
out
fs
pusha
and
ret
loop
adc
call
std
xchg
push
jl
xchg
enter
push
pushf
cmps
xchg
inc
inc
xchg
imul
dec
fs
call
fiadd
dec
mov
mov
lods
stos
sahf
dec
push
or
dec
mov
into
jle
push
mov
or
(bad)
inc
movs
(bad)
push
mov
xor
div
aaa
cmp
xor
mov
xlat
inc
pop
mov
xchg
xlat
sub
cmps
scas
inc
mov
icebp
lahf
jl
inc
(bad)
dec
ret
dec
push
xor
push
adc
lea
fs
movs
ror
mov
fsub
cmps
fsubr
(bad)
(bad)
jmp
enter
scas
jns
stc
mov
cmp
cmp
sti
in
mov
je
(bad)
(bad)
(bad)
(bad)
call
sub
clc
sti
sub
add
push
ficomp
add
dec
mov
lock
pop
fistp
into
(bad)
(bad)
(bad)
call
idiv
adc
int3
popf
cmps
aam
pop
arpl
mov
adc
fdivr
pop
repz
cmp
inc
cld
popa
sar
mov
repz
std
rcl
in
repz
cmp
enter
outs
test
out
ret
push
jbe
pop
and
cs
out
inc
inc
jge
fcomip
(bad)
jl
in
repnz
push
cwde
mov
mov
sub
mov
xchg
gs
enter
(bad)
(bad)
(bad)
jmp
push
aad
push
xchg
loope
mov
mov
call
mov
dec
jge
xchg
mov
(bad)
out
mov
pop
jl
pop
sub
adc
dec
retf
retf
fild
(bad)
jle
jg
jbe
xchg
sti
jbe
cs
pop
push
push
lock
(bad)
(bad)
dec
stc
test
mov
pusha
ror
xor
inc
add
xor
pop
sbb
mov
(bad)
push
call
popf
xor
jle
mov
gs
int
jb
sub
in
ja
int3
fsubr
loop
adc
xor
jp
es
sub
sbb
jmp
arpl
(bad)
(bad)
aad
jl
mov
sti
test
push
dec
not
sbb
sub
jmp
into
and
ss
lds
cli
call
jl
rcl
test
js
mov
(bad)
(bad)
(bad)
jmp
mov
sti
and
add
mov
xchg
adc
rol
icebp
adc
adc
inc
adc
xchg
lea
push
movs
in
jle
xchg
js
mov
mov
iret
(bad)
sar
mov
jg
(bad)
push
push
push
ret
dec
pop
add
xchg
jmp
outs
cmp
(bad)
sbb
lock
sub
jmp
sub
and
dec
idiv
and
dec
sbb
sub
mov
jmp
addr16
call
iret
jo
movs
xchg
adc
sbb
mov
daa
call
outs
mov
sahf
jmp
lock
call
pop
ror
adc
mov
call
jae
push
push
xchg
jnp
mov
mov
into
push
popa
je
fadd
inc
scas
dec
xchg
arpl
mov
mov
pop
adc
pop
mov
pushw
(bad)
(bad)
(bad)
fisttp
lods
mov
xchg
xchg
push
inc
pushf
add
push
stos
es
dec
imul
jmp
aaa
rcl
cwde
sub
cmp
xchg
xchg
push
mov
(bad)
mov
jbe
ss
hlt
push
loop
sub
in
in
dec
or
push
mov
add
lods
sub
cmc
lock
(bad)
inc
ret
push
jmp
lds
fcmovb
mov
call
shr
dec
call
out
xchg
xor
leave
sub
test
or
mov
mov
mov
xchg
or
adc
test
mov
mov
arpl
imul
call
loop
sbb
mov
repnz
stc
jle
ja
into
add
int3
sbb
ja
jmp
adc
int3
dec
pop
mov
mov
clc
idiv
pop
(bad)
sbb
(bad)
xor
and
test
aam
(bad)
jmp
or
or
ss
sub
jmp
jg
sbb
in
je
push
and
or
mov
int3
aaa
ins
push
pop
fcomip
(bad)
(bad)
cld
lds
ins
stos
leave
sub
(bad)
aam
sahf
loopne
popf
jns
cmp
jl
retf
push
push
push
mov
es
sub
cmp
jmp
movs
movs
cmp
add
jmp
and
jae
mov
es
jle
(bad)
(bad)
(bad)
inc
out
mov
push
adc
mov
ss
inc
mov
push
inc
jg
push
clc
call
dec
popf
retf
push
in
xchg
fild
xor
repnz
stos
in
sub
xor
jmp
mov
mov
dec
ss
xchg
adc
jg
int
sub
push
push
(bad)
sbb
cld
pop
loope
(bad)
(bad)
jmp
aas
loop
fist
test
pop
je
lahf
enter
xchg
sub
(bad)
(bad)
mov
loopne
rcr
mov
or
jns
push
jno
add
outs
dec
push
add
(bad)
(bad)
(bad)
inc
add
xchg
pop
mov
lahf
pushf
pusha
iret
jb
arpl
xor
fstp
(bad)
jmp
les
repnz
push
ss
ss
or
inc
out
sbb
sub
jecxz
call
xor
add
add
shr
(bad)
mov
fsub
les
xor
adc
and
pop
(bad)
(bad)
(bad)
push
mov
int
add
repnz
mov
dec
pushf
iret
fcomi
mov
int
int
rcl
(bad)
jmp
ins
mov
sub
xchg
xchg
mov
push
out
mov
(bad)
(bad)
call
neg
xor
jmp
loope
cmp
push
jb
dec
jmp
xchg
(bad)
(bad)
(bad)
jmp
add
(bad)
test
jb
jae
ret
dec
int
sbb
ror
cdq
jmp
(bad)
mov
push
test
mov
lods
sub
(bad)
push
mov
jo
inc
pop
(bad)
(bad)
(bad)
(bad)
js
push
adc
pop
aas
aas
idiv
push
call
mov
test
inc
ins
std
out
xor
mov
pop
jne
ret
inc
dec
cli
xchg
test
lods
out
movs
sub
pop
not
sub
loopne
(bad)
push
dec
out
(bad)
mov
idiv
test
(bad)
(bad)
jmp
retf
movs
xchg
ror
push
ss
pop
add
dec
clc
xor
dec
aaa
dec
mov
je
dec
ja
mov
mov
ror
js
out
movs
jo
add
sbb
(bad)
xor
xchg
mov
sbb
in
fsub
(bad)
(bad)
push
mov
push
xchg
loopne
cmp
int3
dec
push
cmp
xor
dec
out
clc
in
(bad)
(bad)
jg
fsubr
popa
inc
mov
addr16
and
mov
add
(bad)
(bad)
inc
int3
shl
push
mov
add
sbb
mov
(bad)
(bad)
(bad)
push
lock
fsub
push
xor
pop
dec
call
mov
cdq
shr
(bad)
(bad)
call
sbb
or
in
(bad)
test
outs
cmp
outs
hlt
mov
(bad)
mov
dec
mov
push
mov
out
mov
dec
fld
and
jp
stos
(bad)
jmp
int
fnstenv
(bad)
aam
pop
jns
nop
mov
mov
jmp
push
inc
int3
(bad)
int
and
inc
pop
(bad)
jb
in
scas
add
or
std
mov
inc
pop
test
clc
adc
adc
push
hlt
mov
mov
(bad)
(bad)
push
jae
adc
fwait
xchg
sahf
movs
pop
lods
pop
add
xlat
js
sub
dec
xor
imul
in
adc
xchg
mov
rcl
mov
adc
and
js
rol
jmp
lds
mov
dec
scas
adc
ja
sbb
pop
popf
dec
data16
pop
add
and
mov
xor
mov
xor
mul
jo
pop
loopne
(bad)
push
xor
pop
mov
imul
ret
and
pop
mov
xor
adc
sahf
outs
fcom
jg
js
mov
fst
add
(bad)
(bad)
(bad)
jmp
sbb
and
fcomi
jne
jp
push
jge
(bad)
aas
js
add
jns
sub
add
retf
(bad)
(bad)
(bad)
push
sbb
shr
in
cmps
or
add
add
call
or
cs
imul
dec
xlat
sub
test
mov
(bad)
(bad)
call
aas
cmp
push
jne
cs
xchg
ins
sbb
adc
or
(bad)
(bad)
(bad)
inc
xor
cmp
pop
pop
ds
or
test
cmp
sbb
popa
nop
movs
sbb
and
and
pop
xchg
pop
inc
enter
icebp
jb
cmps
dec
push
ret
mov
shr
jl
rol
push
xchg
fld
dec
jmp
sub
jae
sar
(bad)
(bad)
inc
push
xchg
or
sbb
cmps
add
aaa
mov
ror
repz
(bad)
(bad)
jmp
pop
adc
jecxz
push
add
pop
jg
pop
adc
int
mov
xor
mov
add
daa
xor
scas
push
jns
mov
in
inc
jmp
aaa
cld
jmp
test
sub
sbb
mov
adc
sbb
(bad)
push
dec
mov
cdq
pop
jbe
or
shl
mov
hlt
push
cmps
cdq
jg
repnz
(bad)
jmp
cmp
data16
cmp
ret
dec
cmps
mov
mov
(bad)
out
(bad)
(bad)
call
hlt
aad
cmps
movs
jbe
pop
mov
push
retf
mov
enter
sub
sub
sub
(bad)
(bad)
dec
mov
pop
push
stc
xor
add
cmps
jecxz
aad
pusha
mov
(bad)
(bad)
dec
xor
sub
sbb
mov
rol
test
loopne
xchg
(bad)
(bad)
jl
add
fadd
sahf
inc
jmp
inc
push
mov
dec
(bad)
les
std
mov
movs
add
stos
mov
es
xor
push
mov
shr
ja
(bad)
(bad)
jl
push
mov
xor
cmp
pop
mov
dec
test
and
fsubp
or
ret
cmps
sahf
jae
and
jmp
rcr
pop
sub
push
mov
inc
jge
outs
into
cmp
or
inc
clc
inc
push
(bad)
(bad)
(bad)
jmp
push
adc
ret
add
or
push
movs
sub
and
xchg
lea
cs
adc
pop
in
push
add
pinsrw
lock
dec
lea
shl
retf
cdq
jne
ret
mov
cli
fs
(bad)
(bad)
push
scas
arpl
cld
aas
rcl
loope
jmp
adc
popf
mov
mov
push
sahf
(bad)
(bad)
call
ror
das
pop
dec
out
dec
mov
mov
mov
cmp
(bad)
push
xlat
mov
mov
dec
jbe
in
pop
pop
loope
lahf
shl
iret
in
sar
mov
jmp
dec
fist
in
out
pushf
cmp
adc
dec
cmp
xchg
or
sub
mov
xor
pop
xor
xchg
movs
mov
dec
add
adc
add
(bad)
call
and
es
(bad)
inc
fistp
or
not
add
push
in
mov
sub
mov
cmp
icebp
mov
adc
mov
and
mov
(bad)
push
std
rol
adc
dec
mov
bound
xchg
out
dec
add
(bad)
mov
adc
inc
adc
dec
pushf
push
xor
push
ins
dec
mov
push
or
sbb
aas
ss
es
xchg
mov
and
and
mov
(bad)
jnp
imul
std
push
xor
repnz
jbe
ins
nop
shl
adc
dec
arpl
jl
adc
(bad)
(bad)
push
dec
ins
scas
leave
pop
shr
mov
mov
adc
sbb
je
jge
mov
xchg
dec
pop
popa
and
xchg
pop
cmp
movs
adc
(bad)
(bad)
(bad)
jmp
nop
into
test
jb
aad
push
imul
inc
adc
xchg
sub
shl
es
(bad)
(bad)
(bad)
mov
fst
mul
dec
ret
cld
or
mov
fcomip
jmp
mov
sbb
adc
dec
out
int3
(bad)
out
sub
(bad)
(bad)
(bad)
jl
mov
mov
push
adc
mov
jle
jg
mov
push
icebp
mov
out
(bad)
(bad)
call
dec
sar
clc
jl
pop
mov
cmp
pop
push
inc
mov
sbb
(bad)
in
(bad)
xchg
ud0
(bad)
dec
jmp
cmc
cmp
(bad)
mov
std
(bad)
xchg
and
cmc
repnz
call
dec
mov
pop
dec
ins
fstp
or
dec
pop
neg
(bad)
(bad)
jg
and
mov
std
jb
(bad)
ins
pand
push
mov
mov
cld
(bad)
mov
iret
loop
in
arpl
mov
inc
and
cli
cmps
loop
dec
jge
and
loope
add
xor
(bad)
jmp
cli
das
in
leave
(bad)
jg
imul
add
cmp
cld
cmps
(bad)
(bad)
(bad)
dec
call
adc
or
icebp
jo
aas
add
jo
clc
mov
jmp
pop
cmc
jmp
jno
test
rol
sti
push
das
iret
(bad)
(bad)
inc
out
mov
xchg
cmps
mov
lods
les
arpl
sahf
repz
(bad)
(bad)
jmp
cmp
xor
popa
xchg
mov
call
mov
addr16
icebp
lea
imul
(bad)
(bad)
(bad)
call
dec
int
dec
nop
mov
hlt
stc
stos
sbb
jnp
clc
mov
mov
cld
or
(bad)
(bad)
(bad)
jg
mov
inc
repnz
cmps
or
clc
pop
jmp
(bad)
imul
pop
push
(bad)
pop
inc
dec
lock
bound
std
or
out
cld
jmp
shr
adc
(bad)
(bad)
call
pop
mov
mov
mov
addr16
sbb
out
push
test
pop
dec
(bad)
neg
ins
push
add
xor
arpl
push
xchg
mov
xchg
pop
cmp
xlat
push
gs
(bad)
(bad)
dec
mov
mov
dec
rcl
icebp
scas
xchg
mov
xor
(bad)
(bad)
inc
pop
std
loopne
xor
jge
loope
pop
stc
iret
sub
dec
dec
sbb
inc
inc
(bad)
call
fiadd
push
cmp
int
ror
gs
jg
add
push
(bad)
out
icebp
clc
out
mov
cmp
out
or
into
dec
(bad)
cdq
sub
jae
mov
(bad)
(bad)
out
fadd
rcl
test
fld
xor
add
ficom
fiadd
(bad)
mov
mov
xor
mov
jp
xchg
cdq
mov
add
(bad)
call
jne
cmp
nop
adc
jmp
call
jge
xor
call
and
(bad)
(bad)
imul
shr
(bad)
(bad)
jmp
pusha
in
adc
jne
jp
sbb
xor
(bad)
out
outs
enter
or
(bad)
inc
pop
xor
xchg
repz
enter
es
call
movs
jne
repz
and
data16
(bad)
(bad)
(bad)
call
pop
inc
stos
jns
into
cmp
nop
xchg
arpl
outs
lock
mov
cmps
xor
stos
gs
test
adc
mov
push
int
mov
sbb
jno
(bad)
call
dec
jae
jno
(bad)
(bad)
(bad)
fld
cmps
and
ins
xor
lds
mov
arpl
loopne
out
pop
lock
in
xchg
cmp
jb
(bad)
out
cmp
loop
mov
in
inc
dec
fs
div
ret
in
dec
les
pop
add
aaa
rcl
xchg
call
lods
(bad)
(bad)
(bad)
call
outs
iret
xchg
clc
mov
aas
outs
sbb
retf
(bad)
in
repz
fnstenv
retf
repz
cmp
pop
(bad)
(bad)
(bad)
dec
fidivr
xor
outs
(bad)
mov
sbb
inc
jmp
repz
(bad)
(bad)
jmp
fld
pop
jg
loop
cmc
aaa
(bad)
cmp
pusha
retf
int3
inc
imul
(bad)
cmps
fwait
in
addr16
ftst
idiv
(bad)
(bad)
(bad)
cmp
movs
enter
jge
cli
div
int
and
psllw
idiv
adc
aad
cmc
aaa
std
(bad)
mov
cmp
mov
outs
clc
clc
lahf
push
lods
hlt
outs
call
ds
scas
jns
call
idiv
pushf
scas
push
stc
icebp
jge
mov
ror
jge
iret
aas
xchg
cmc
jno
dec
sub
and
mov
std
iret
xchg
fild
(bad)
(bad)
inc
addr16
sti
ins
hlt
jg
(bad)
cli
cmp
jecxz
cld
retf
lods
push
sti
repnz
sar
(bad)
out
std
aas
cmps
test
cmps
pop
mov
rcl
out
jnp
inc
sar
push
pop
pop
stc
xor
pop
fdiv
pop
ins
ret
ds
enter
fdivr
(bad)
(bad)
dec
dec
(bad)
(bad)
mov
sar
pop
jg
daa
mov
jmp
in
cmp
inc
dec
sub
lds
jmp
ins
jmp
frstor
jle
mov
sub
inc
pop
push
cmc
leave
pop
lods
(bad)
cld
pop
ret
(bad)
call
out
clc
outs
cmp
pop
xchg
mov
out
fstp
mov
(bad)
(bad)
(bad)
push
push
jnp
loop
cld
aas
inc
push
dec
jnp
stc
mov
jno
ds
aaa
mov
xor
dec
dec
(bad)
inc
hlt
icebp
mov
fs
jg
or
jno
cli
adc
(bad)
in
sti
js
and
pushf
mov
xchg
xchg
or
jbe
aaa
mov
push
mov
aad
(bad)
cli
(bad)
dec
(bad)
aas
lds
int3
cmp
fwait
xchg
repz
idiv
dec
mov
shl
stc
stos
inc
lahf
mov
in
in
fdiv
aaa
jno
scas
cs
cmp
scas
jo
add
push
add
or
(bad)
(bad)
call
sbb
jnp
(bad)
dec
and
movs
mov
(bad)
stos
xchg
lds
push
stos
or
(bad)
jmp
lods
(bad)
stos
mov
or
lods
int
and
push
repnz
in
clc
out
cli
fist
and
ret
mov
mov
(bad)
push
dec
cmp
loope
pop
aaa
sbb
movs
leave
or
mov
mov
xor
imul
je
je
jnp
jns
sub
mov
mov
jns
loope
(bad)
inc
pop
mov
jg
add
mov
aas
jmp
jmp
jg
and
(bad)
inc
sub
popf
and
sbb
pushf
mov
pop
fsubr
push
nop
ss
jecxz
jg
(bad)
mov
mov
push
or
outs
int3
or
inc
aas
jge
(bad)
(bad)
(bad)
jmp
mov
dec
pop
pop
cli
cmp
jae
enter
mov
xor
pusha
fld
adc
pop
(bad)
(bad)
(bad)
jmp
adc
jp
pushf
sti
add
pusha
popa
out
retf
je
loop
sub
fs
jmp
pushf
dec
mov
outs
les
pop
das
xchg
cmp
cmp
pop
hlt
mov
xchg
mov
retf
fild
pop
inc
test
xlat
jg
push
mov
bnd
addr16
sar
pop
outs
mov
(bad)
push
pop
cmps
lock
mov
push
cli
lods
cs
inc
cmp
mov
fild
xchg
or
sub
sub
cmp
(bad)
(bad)
(bad)
inc
jo
out
push
dec
add
mov
ins
pop
loopne
repz
jp
fcomp
mov
xor
sbb
push
mov
ins
jle
(bad)
aam
shl
aad
and
push
sbb
mov
enter
int
dec
test
mov
sub
test
sbb
sbb
adc
and
(bad)
(bad)
aas
xchg
mov
int3
dec
and
xor
shr
dec
retf
sbb
pop
aam
jnp
pusha
pop
scas
aam
mov
and
jge
test
sar
call
sbb
mov
les
push
in
or
dec
pusha
add
or
mov
pop
not
pop
jecxz
sbb
(bad)
mov
xchg
mov
test
scas
push
gs
ins
xchg
mov
push
inc
loopne
sbb
stos
int3
std
(bad)
(bad)
push
push
ss
lahf
icebp
inc
and
adc
leave
ss
and
mov
(bad)
(bad)
(bad)
mov
fild
fs
addr16
into
jns
jae
pop
jnp
lea
arpl
(bad)
(bad)
(bad)
cmp
neg
add
pop
add
and
pop
sbb
xor
outs
inc
imul
std
pop
(bad)
repnz
ds
stc
xor
jl
push
popf
(bad)
mov
mov
add
(bad)
(bad)
(bad)
jmp
push
and
cdq
dec
movs
jge
push
je
or
or
fnstenv
ret
out
mov
mov
cs
pop
cmp
inc
pop
and
scas
cli
dec
adc
or
cmp
ret
aam
add
dec
and
(bad)
call
fcmovnbe
mov
push
loope
cmp
imul
add
pop
jbe
jno
(bad)
(bad)
call
std
mov
inc
(bad)
xor
enter
imul
(bad)
sar
(bad)
(bad)
(bad)
call
jmp
or
xchg
push
mov
push
push
xor
xor
adc
(bad)
call
fcomi
pop
xchg
inc
mov
lock
je
je
movs
std
adc
or
inc
add
inc
js
push
xchg
mov
repnz
(bad)
aas
cmp
inc
jbe
fs
(bad)
inc
jge
lahf
addr16
mov
push
xchg
mov
push
fild
xchg
xchg
aad
jle
push
and
fdivp
(bad)
mov
ror
stos
xchg
outs
jmp
and
fwait
pop
scas
jp
lahf
push
cmps
jae
idiv
adc
(bad)
(bad)
(bad)
jmp
(bad)
jl
adc
pushf
scas
cs
mov
mov
ja
test
enter
repnz
push
xchg
jl
(bad)
(bad)
(bad)
inc
sub
lds
fwait
(bad)
lds
xchg
retf
cmp
std
cmp
jae
imul
(bad)
call
xchg
and
in
inc
fs
jmp
xchg
gs
mov
fbstp
call
xchg
out
fld
sub
add
ds
enter
test
sub
add
or
out
movs
in
jb
rcr
repz
ror
sbb
fdiv
(bad)
(bad)
dec
shl
shr
inc
scas
lea
mov
cmp
test
pop
loope
mov
mov
(bad)
(bad)
fistp
push
cmp
inc
add
mov
loop
jecxz
enter
leave
stc
(bad)
(bad)
(bad)
dec
shl
and
(bad)
hlt
pop
and
mov
pop
mov
(bad)
idiv
lea
(bad)
loopne
jg
data16
movs
addr16
cmc
push
inc
push
inc
stos
jnp
xchg
std
(bad)
fwait
or
(bad)
(bad)
jmp
jno
sub
mov
push
mov
cdq
mov
ja
(bad)
mov
iret
pop
or
sbb
cmp
out
jae
jb
gs
lahf
xchg
icebp
ds
(bad)
(bad)
jmp
mov
sbb
shl
jbe
fmul
movs
bound
push
(bad)
jg
and
and
fwait
loop
xor
test
cld
mov
xor
lea
jmp
fwait
mov
mov
(bad)
(bad)
jmp
inc
clc
mov
mov
cld
cmps
jecxz
cmp
test
imul
sbb
sbb
(bad)
(bad)
(bad)
push
cmp
ror
scas
outs
inc
bnd
lods
les
popf
add
ret
out
pop
out
cmp
xchg
hlt
(bad)
(bad)
push
scas
cld
bound
or
outs
push
int
mov
arpl
pop
popf
push
jle
std
(bad)
fisttp
ja
sbb
ret
ret
retf
mov
mov
out
cli
(bad)
in
(bad)
icebp
mov
lea
into
shl
(bad)
scas
daa
hlt
in
(bad)
jle
xchg
(bad)
jmp
retf
xchg
pusha
and
mov
enter
sub
xchg
mov
pop
(bad)
(bad)
(bad)
call
les
dec
pop
aam
mov
add
mov
outs
sub
test
cmp
pop
add
jnp
xor
stos
xchg
xor
mov
sub
jne
jge
jns
xchg
xchg
into
dec
es
pop
or
inc
pop
test
push
stc
xchg
jl
gs
(bad)
(bad)
jmp
gs
and
inc
inc
pop
xor
jae
sub
push
pusha
cmp
aaa
xchg
mov
imul
(bad)
(bad)
call
cmp
mov
cmp
sbb
test
fsub
scas
call
inc
cld
inc
loop
xchg
ins
adc
ret
adc
ins
lock
mov
loop
mov
cmps
pop
xchg
mov
sub
ins
cmc
stc
pop
cld
pop
mov
aam
aad
scas
enterw
and
stos
(bad)
(bad)
mov
xor
lods
sub
aas
fmul
fs
mov
push
pop
das
les
jmp
fs
cmps
mov
or
push
cmp
inc
fisttp
loope
stos
push
shl
dec
dec
icebp
mov
fmul
mov
daa
push
(bad)
jmp
daa
cmp
push
mov
sub
cmc
sub
mov
sbb
sbb
(bad)
(bad)
inc
jae
adc
iret
and
inc
sub
push
cwde
imul
push
xchg
dec
jb
lahf
inc
cmps
sub
xor
and
stos
push
fist
jmp
or
push
es
push
aam
pop
push
lds
std
cmp
cmp
sar
(bad)
jae
mov
lods
push
idiv
pop
mov
daa
test
dec
cmps
mov
push
push
dec
sahf
cmps
mov
cmp
mov
push
dec
jp
push
cmp
ds
ss
(bad)
jmp
mov
out
xchg
mov
(bad)
mov
adc
pop
adc
(bad)
cmp
lea
dec
ins
push
push
xor
inc
cmp
sub
inc
pop
cli
mov
adc
pop
cld
(bad)
(bad)
jmp
das
sub
mov
mov
pop
test
aas
dec
jnp
mov
(bad)
(bad)
push
test
mov
mov
or
or
inc
test
push
test
(bad)
inc
mov
call
pushf
mov
addr16
sti
adc
xor
xchg
inc
mov
add
adc
inc
std
push
(bad)
or
nop
adc
call
ins
outs
and
ins
stos
inc
ror
mov
sub
sar
in
dec
shl
icebp
sub
je
or
sbb
clc
(bad)
(bad)
push
movs
stos
lock
dec
and
ret
dec
in
dec
push
and
shl
cmp
(bad)
(bad)
out
jb
jp
popf
add
fcomip
cmp
pop
lods
xor
call
(bad)
aaa
push
rol
jmp
out
xor
mov
xor
test
jo
xor
mov
xor
(bad)
(bad)
mov
push
xchg
aam
add
mov
imul
(bad)
(bad)
(bad)
jg
cmp
stos
mov
jns
sub
popa
xchg
cdq
outs
mov
inc
inc
fs
scas
pop
or
(bad)
(bad)
dec
push
daa
frstor
mov
jmp
dec
sub
or
dec
sti
jmp
sub
sti
lods
das
jp
jmp
aam
ins
push
xchg
int3
arpl
sub
(bad)
in
shr
mov
mov
cmp
inc
cli
(bad)
popf
cmp
xchg
xchg
mov
xor
retf
mov
(bad)
(bad)
mov
dec
cmps
fdiv
cli
or
dec
inc
or
mov
cld
div
pusha
rol
cmp
pop
sub
call
mov
adc
fbstp
mov
jb
add
ins
ss
inc
jno
inc
sbb
or
mov
(bad)
push
and
push
or
(bad)
adc
jae
ret
sbb
mov
sub
dec
or
es
add
sbb
sub
rol
in
(bad)
(bad)
jmp
mov
mov
mov
imul
into
xchg
add
jmp
mov
inc
mov
(bad)
inc
cdq
cdq
int3
int
jnp
mov
jns
out
adc
(bad)
(bad)
mov
test
out
aad
jmp
fidivr
jg
div
stc
out
not
pushf
fisub
dec
dec
or
loop
test
inc
dec
add
sbb
add
jno
je
xchg
aas
hlt
(bad)
(bad)
(bad)
dec
jg
dec
inc
add
push
into
push
pop
cmc
in
jmp
ss
inc
arpl
adc
(bad)
dec
mov
out
push
out
int
cs
iret
mov
aad
pop
jmp
pop
sub
(bad)
jmp
mov
dec
jne
push
mov
(bad)
shl
jns
jb
and
loop
in
or
(bad)
(bad)
jnp
jne
jg
push
fdivr
scas
cmp
push
lods
jmp
je
dec
lock
into
lods
shr
(bad)
sbb
push
arpl
sub
xchg
(bad)
(bad)
(bad)
dec
ret
cli
mov
jo
mov
aam
arpl
add
(bad)
jmp
aam
jmp
lods
aad
stos
jp
(bad)
daa
mov
mov
add
xchg
dec
push
push
(bad)
(bad)
(bad)
call
jbe
stc
mov
sbb
mov
jno
(bad)
mov
aaa
aas
pusha
push
(bad)
fistp
call
(bad)
(bad)
jmp
sub
pop
cdq
push
out
cwde
jnp
ret
jp
fstp
retf
gs
in
xor
(bad)
(bad)
call
retf
lahf
out
sub
mov
dec
jmp
stos
ins
mov
(bad)
(bad)
push
cmp
push
daa
jne
sub
sahf
nop
outs
mov
sbb
aas
inc
xchg
out
mov
(bad)
(bad)
push
jle
mov
daa
rcl
gs
mov
(bad)
jmp
imul
(bad)
jmp
adc
pop
xor
cmp
or
pop
mov
(bad)
cmp
push
idiv
(bad)
(bad)
(bad)
stc
mov
jge
mov
mov
xchg
shl
adc
mov
cmp
add
xchg
(bad)
(bad)
(bad)
dec
in
daa
sub
pop
stos
fisttp
inc
scas
aad
mov
pop
cmp
call
je
nop
pop
mov
ret
sub
xchg
mov
dec
push
ja
jge
arpl
adc
repz
int3
inc
std
icebp
push
popa
(bad)
(bad)
jmp
(bad)
cli
arpl
movs
test
out
inc
add
cwde
inc
cwde
and
(bad)
jmp
jge
mov
addr16
out
push
ficom
and
dec
mov
sahf
sbb
xchg
(bad)
(bad)
inc
retf
xor
mov
adc
test
enter
sar
cs
xchg
gs
sbb
cdq
xor
pop
(bad)
(bad)
(bad)
(bad)
stc
jmp
or
mov
aad
test
jne
mov
movs
mov
push
(bad)
(bad)
jns
or
mov
pushf
in
xchg
iret
gs
jb
std
jbe
gs
mov
pop
scas
(bad)
(bad)
(bad)
inc
xor
call
fcom
dec
dec
dec
mov
add
out
cs
mov
or
inc
das
cmp
mov
cmps
test
test
in
idiv
mov
adc
sti
fisttp
scas
cli
stc
mov
iret
xchg
es
push
mov
imul
jle
aad
jne
inc
sub
stc
ins
retf
fld
push
mov
xor
(bad)
(bad)
jmp
pop
push
aaa
sub
out
movs
cli
sbb
or
jl
jecxz
pop
imul
pop
jle
movs
(bad)
(bad)
(bad)
(bad)
mov
arpl
out
dec
mov
pop
movs
int3
daa
sub
fidiv
scas
test
jne
mov
stos
(bad)
push
cmp
inc
mov
hlt
out
fimul
push
fwait
pusha
xor
(bad)
(bad)
jg
loopne
lock
pop
ror
dec
jle
pop
outs
add
(bad)
(bad)
(bad)
dec
jp
movs
pop
jb
out
xchg
(bad)
mov
push
stos
dec
rcl
xor
jmp
(bad)
dec
sub
inc
or
xchg
fldenv
and
ins
pop
stc
mov
pop
mov
xor
imul
and
js
mov
and
fiadd
outs
(bad)
inc
scas
mov
ds
enter
repnz
mov
pop
mov
(bad)
div
out
in
or
stos
bound
dec
push
or
scas
mov
jmp
out
test
mov
retf
push
sbb
inc
xor
ss
(bad)
dec
adc
jmpw
test
pop
dec
lea
sub
(bad)
jmp
scas
fadd
xchg
lahf
mov
lahf
dec
adc
push
inc
sub
cmp
cmps
ret
(bad)
(bad)
fcomip
mov
cli
nop
ds
sub
loopne
or
add
adc
push
xlat
(bad)
(bad)
(bad)
call
or
popf
icebp
aam
jne
stos
leave
jbe
ja
ins
ret
push
jno
pop
or
(bad)
(bad)
(bad)
call
jp
test
push
out
stos
loope
push
sbb
mov
and
call
xchg
(bad)
(bad)
inc
xor
and
dec
popa
add
jbe
or
(bad)
or
rcl
pop
inc
sub
dec
cdq
inc
in
push
shl
sbb
fisubr
dec
imul
mov
and
call
rol
push
cld
(bad)
call
push
sbb
mov
mov
leave
add
aam
fild
xor
mov
add
div
packssdw
or
idiv
xor
xor
jmp
sub
test
std
fidiv
in
mov
outs
(bad)
call
and
xor
pop
xor
ret
je
mov
cmp
std
(bad)
(bad)
push
call
jne
(bad)
aad
shl
fidivr
mov
(bad)
jmp
or
(bad)
in
or
(bad)
mov
push
mov
aam
or
loopne
lods
stos
es
adc
repnz
mov
test
cld
push
xor
test
xor
lods
outs
push
push
(bad)
in
ss
push
ret
mov
test
adc
mov
mov
ja
jmp
mov
inc
inc
cmp
movs
xchg
cs
push
mov
jmp
mov
jmp
stc
jne
pop
push
loopne
leave
std
test
add
(bad)
(bad)
(bad)
(bad)
inc
aam
inc
xchg
lahf
mov
cmps
xor
into
retf
xor
mov
dec
mov
xor
xor
ror
test
pop
(bad)
(bad)
(bad)
call
inc
mov
pop
std
jo
sub
and
xor
and
lods
or
cld
(bad)
clc
dec
sub
sahf
mov
mov
push
stos
xor
sbb
(bad)
(bad)
inc
inc
lds
cdq
popf
push
mov
cmp
addr16
dec
lahf
mov
mov
mov
sbb
push
jns
or
lahf
sub
(bad)
(bad)
mov
repnz
mov
mov
nop
and
scas
mov
inc
lea
dec
mov
and
sbb
mov
scas
nop
aam
call
mov
adc
or
pop
sbb
fld
jbe
sub
ss
push
lock
pop
scas
push
or
(bad)
call
loop
or
js
pop
lock
mov
push
adc
pushf
jp
add
xchg
cmp
mov
xchg
add
int
cmp
and
jmp
xchg
(bad)
(bad)
(bad)
call
push
pop
sbb
les
or
scas
out
fisttp
sbb
sbb
into
sti
test
pop
aaa
ss
cwde
jg
icebp
push
sub
call
xchg
add
(bad)
(bad)
(bad)
call
ja
pop
test
and
xor
data16
jmp
lea
dec
mov
xor
dec
or
call
sub
cmp
(bad)
push
sub
and
sub
xor
xor
push
(bad)
ds
iret
(bad)
(bad)
(bad)
(bad)
jge
mov
and
sbb
mov
adc
sar
stos
movs
or
(bad)
(bad)
dec
mov
add
mov
or
sub
sbb
fs
add
popa
pop
(bad)
jg
fs
pop
add
add
movs
pop
and
sub
(bad)
(bad)
(bad)
(bad)
in
cs
shl
xor
test
sub
sub
(bad)
xchg
add
adc
jge
(bad)
mov
xor
(bad)
out
dec
imul
mov
inc
lods
movs
adc
(bad)
jmp
xor
push
ja
gs
mov
ja
inc
addr16
xor
mov
cli
(bad)
(bad)
call
je
adc
ror
push
xchg
add
mov
xor
(bad)
jmp
call
mov
out
add
rcl
jg
cmps
ja
cmp
push
xor
xor
scas
movs
mov
rol
ins
adc
test
(bad)
jmp
jmp
ss
ins
dec
fcmovu
jle
push
popf
inc
sahf
mov
pop
push
rcr
(bad)
call
shr
cmp
pop
push
aam
sub
in
add
cmps
pop
and
pop
(bad)
(bad)
(bad)
jmp
fucomi
add
scas
dec
sub
test
dec
(bad)
push
lea
nop
mov
(bad)
(bad)
(bad)
dec
mov
call
xchg
add
pop
cdq
cmp
jle
xor
(bad)
(bad)
inc
jbe
jne
ds
and
dec
and
sbb
shr
pop
fsubr
jg
pushf
popf
or
das
push
icebp
xchg
stos
sbb
movs
cmps
mov
aam
cli
out
clc
stos
movs
data16
les
sbb
or
push
(bad)
(bad)
jmp
aad
sbb
dec
dec
inc
sbb
xchg
cmps
out
mov
and
jmp
repnz
stos
xchg
out
(bad)
mov
sbb
sti
sbb
(bad)
(bad)
jg
mov
cmp
mov
cmp
push
push
push
outs
int3
(bad)
push
cs
push
cli
xchg
movs
push
xor
fst
inc
loop
aaa
loope
sub
mov
pop
(bad)
imul
xchg
retf
int3
loope
xchg
xchg
(bad)
push
(bad)
jg
loop
push
outs
mov
or
mov
or
mov
fdivr
mov
pop
push
mov
jmp
sbb
sbb
out
cli
das
clc
jl
js
dec
inc
sbb
pop
xor
adc
imul
mov
loopne
jl
test
(bad)
in
movs
xchg
or
mov
ds
iret
jp
lods
(bad)
(bad)
(bad)
cld
or
movs
sub
pushf
retf
test
rcl
out
hlt
mov
loop
add
mov
sahf
(bad)
mov
(bad)
(bad)
(bad)
call
nop
cwde
jmp
lods
push
push
pop
xor
scas
call
mov
or
cmp
bound
(bad)
(bad)
dec
jmp
xchg
(bad)
jmp
repnz
out
xchg
sbb
ret
data16
xchg
mov
je
and
dec
fadd
mov
ror
jae
sub
jnp
outs
or
fwait
test
mov
stc
scas
mov
inc
sub
ret
enter
mov
in
and
add
(bad)
(bad)
(bad)
in
adc
scas
push
dec
ins
or
or
rol
dec
mov
(bad)
jmp
mov
sub
and
je
adc
(bad)
call
das
and
sbb
outs
ds
pop
lock
out
add
(bad)
(bad)
(bad)
aas
scas
push
jnp
cmp
ror
inc
iret
mov
or
or
jnp
movs
jns
sahf
fs
(bad)
(bad)
call
(bad)
jg
shr
sbb
dec
(bad)
lock
(bad)
pop
scas
fbld
jmp
add
(bad)
(bad)
out
xchg
or
ret
jecxz
aaa
mov
leave
jo
cmps
mov
ds
jmp
jecxz
cmps
aam
fisub
adc
mov
or
mov
(bad)
in
pop
das
jl
fldcw
(bad)
call
std
sbb
and
jns
jmp
or
out
outs
xchg
mov
sub
dec
aaa
push
jg
mov
add
hlt
xcrypt-ecb
cmps
push
repz
jns
push
add
or
(bad)
(bad)
(bad)
jmp
inc
sub
out
pop
inc
add
bound
lock
sbb
(bad)
(bad)
(bad)
(bad)
fnstenv
rcl
and
call
mov
(bad)
dec
xchg
clc
add
or
xchg
ins
cld
fbstp
ins
test
adc
pop
retf
test
(bad)
dec
sbb
pop
shl
cmp
gs
retf
add
stc
ret
shl
fwait
inc
ficom
sub
outs
push
ret
add
(bad)
(bad)
dec
(bad)
in
in
jns
mov
pop
loopne
shl
rol
fwait
mov
lahf
mov
mov
sub
vpxor
arpl
xchg
mov
mov
lods
mov
or
arpl
nop
scas
mov
stos
out
push
add
(bad)
(bad)
(bad)
fadd
scas
jne
fsub
rcl
lahf
inc
(bad)
hlt
ret
div
das
mov
xchg
jne
call
push
btr
cmp
add
test
dec
ins
(bad)
mov
mov
adc
rol
xchg
(bad)
(bad)
(bad)
dec
sub
cmp
je
or
sbb
push
adc
je
xchg
jmp
xchg
or
(bad)
jg
nop
or
push
out
out
add
scas
ja
inc
dec
push
mov
mov
aam
dec
mov
(bad)
call
retf
aas
cmps
retf
and
jb
sub
or
cwde
out
jnp
push
sbb
(bad)
or
loopne
sar
fxch
xchg
adc
sub
cmps
push
lods
cmp
iret
enter
mov
pop
out
shl
and
inc
cld
rcr
mov
(bad)
mov
jnp
sub
xor
(bad)
adc
and
les
test
(bad)
(bad)
out
(bad)
in
xchg
(bad)
std
scas
int
fcom
cmps
rcl
movs
and
pop
inc
fcmovnb
out
(bad)
jg
and
outs
mov
dec
or
xchg
jns
(bad)
inc
adc
(bad)
xor
ret
jl
mov
dec
idiv
out
cld
retf
jnp
cld
addr16
(bad)
(bad)
(bad)
jg
cmps
jle
sub
xchg
mov
pop
fwait
jp
je
and
and
push
cld
or
call
fnstenv
sbb
sbb
push
(bad)
hlt
add
push
lock
inc
sbb
call
or
jge
inc
mov
and
sub
arpl
lds
movs
mov
shl
push
div
adc
outs
adc
(bad)
(bad)
jmp
xor
(bad)
out
jmp
cs
cli
icebp
add
std
bound
shl
(bad)
push
mov
jae
mov
stos
stc
jno
dec
call
(bad)
(bad)
(bad)
mov
xchg
cmp
jmp
addr16
jg
je
mov
xchg
fucomip
pop
xchg
jnp
(bad)
(bad)
(bad)
call
add
jnp
mov
out
(bad)
daa
push
js
(bad)
mov
cwde
(bad)
repnz
(bad)
cmc
arpl
fdiv
lock
scas
push
lods
pop
xor
or
adc
jmp
sbb
lds
(bad)
mov
jnp
ss
movs
cmp
jmp
adc
(bad)
(bad)
push
call
mov
fiadd
xchg
xchg
cmp
cmc
push
push
xchg
popa
(bad)
(bad)
dec
mov
popf
(bad)
scas
and
jnp
jmp
inc
(bad)
(bad)
(bad)
call
mov
jle
jl
sbb
outs
and
cmps
push
dec
in
sub
call
std
inc
ficom
xchg
into
icebp
dec
dec
push
push
or
adc
xchg
push
xor
ror
lahf
adc
outs
leave
xchg
mov
nop
mov
sub
jg
mov
push
sub
aaa
mov
dec
cmp
xchg
std
data16
(bad)
(bad)
(bad)
cld
and
outs
sbb
jp
hlt
mov
xor
sti
sbb
cwde
aaa
sbb
cmps
call
mov
lods
xchg
aam
dec
xchg
pop
add
lea
sar
(bad)
(bad)
mov
xchg
pop
js
rol
test
xor
(bad)
(bad)
jg
pop
test
retf
cmc
jae
scas
sbb
pushf
int3
cwde
pushf
xor
jno
fild
repnz
(bad)
(bad)
(bad)
jmp
sub
jmp
adc
fdiv
cmps
mov
cmp
pop
push
fldcw
(bad)
dec
mov
push
mov
dec
mov
dec
add
adc
push
mov
imul
idiv
(bad)
(bad)
dec
add
push
les
and
aaa
aam
pop
(bad)
mov
shl
dec
mov
xchg
jl
mov
stos
ss
rcr
mov
xor
xchg
call
dec
push
pop
cmp
lahf
dec
les
(bad)
push
cli
sbb
cmps
scas
(bad)
(bad)
(bad)
(bad)
call
add
mov
cs
inc
mov
push
shl
fild
mov
test
loopne
loop
ds
pop
dec
jb
push
iret
mov
(bad)
(bad)
jg
jo
mov
add
xor
test
adc
data16
dec
mov
(bad)
(bad)
dec
inc
lods
repz
dec
mov
adc
mov
mov
ds
sbb
ret
(bad)
(bad)
(bad)
call
add
scas
lds
repz
add
(bad)
inc
push
push
pop
(bad)
ins
movs
fisubr
cli
(bad)
(bad)
(bad)
mov
call
imul
cmp
outs
jmp
inc
add
call
push
xlat
out
push
pop
fnstcw
idiv
lds
iret
loopne
cld
sbb
scas
xchg
or
(bad)
(bad)
adc
inc
cmc
and
xchg
movs
pop
das
sar
cmp
dec
xchg
push
dec
push
dec
or
push
push
jmp
push
xor
ds
inc
add
popa
daa
xchg
sub
inc
(bad)
(bad)
(bad)
jg
push
std
cmc
in
data16
jns
pop
mov
adc
inc
in
es
xor
rol
push
in
mov
ret
(bad)
jmp
adc
std
and
jecxz
push
stos
fbld
xchg
xlat
adc
(bad)
(bad)
(bad)
jmp
dec
pop
call
sub
pop
loopne
scas
jp
mov
push
jo
cmp
push
scas
movs
dec
(bad)
(bad)
(bad)
call
push
xchg
sbb
dec
pop
ins
test
call
pop
inc
jns
cmp
(bad)
(bad)
(bad)
mov
stc
in
popf
jbe
xchg
mov
mov
cdq
pushf
mov
jl
(bad)
dec
pop
inc
xor
push
std
(bad)
(bad)
mov
lods
xor
jbe
imul
dec
shl
sub
inc
and
(bad)
(bad)
(bad)
call
fistp
sbb
lea
sbb
arpl
scas
in
jno
fnstenv
(bad)
(bad)
(bad)
(bad)
fsubr
sbb
cmp
jg
push
xchg
int3
mov
jl
js
sti
dec
sub
mov
cmp
ret
(bad)
movs
push
lahf
fadd
xchg
in
mov
mov
mov
aam
(bad)
jmp
outs
or
fst
fstp
shr
or
in
sub
(bad)
sbb
(bad)
(bad)
mov
push
push
and
jb
mov
imul
(bad)
(bad)
push
nop
imul
cdq
icebp
jmp
or
push
aam
stos
mov
out
xchg
mov
add
movs
int3
pusha
stos
push
jle
sbb
je
sar
inc
arpl
fcomip
and
push
xor
cmp
add
mov
sub
pusha
pop
adc
(bad)
call
lock
pop
and
imul
retf
push
mov
call
inc
xchg
enter
adc
sti
inc
push
call
add
(bad)
(bad)
(bad)
(bad)
mov
sahf
sti
test
inc
inc
dec
shr
or
adc
xchg
ret
mov
(bad)
(bad)
(bad)
(bad)
jg
mov
int3
and
and
neg
daa
dec
push
fsubr
and
(bad)
call
inc
aaa
dec
mov
pop
mov
fisubr
xor
rcr
jmp
jb
lods
je
jae
test
call
js
push
(bad)
(bad)
cmp
xchg
out
cmp
cmp
mov
stos
fsubr
mov
addr16
(bad)
(bad)
jg
pop
leave
ds
xor
mov
xchg
sub
xlat
lds
loope
pusha
pop
in
fcmovu
mov
push
(bad)
loopne
neg
int3
in
sub
sub
mov
inc
scas
dec
hlt
test
lock
ins
dec
xchg
daa
push
scas
sbb
(bad)
(bad)
jmp
pop
jns
jae
cmc
jns
mov
inc
ror
or
push
xor
(bad)
(bad)
jmp
dec
mov
sar
mov
push
push
(bad)
xor
jne
xchg
add
or
rcr
sbb
imul
dec
repnz
or
(bad)
jmp
jb
jns
rol
lahf
loope
shr
in
into
das
push
into
ins
out
(bad)
jns
jp
(bad)
(bad)
(bad)
(bad)
jp
mov
or
mov
fstp
inc
and
jne
push
push
cs
add
push
loopne
mov
xchg
ins
pop
int
push
std
(bad)
(bad)
fst
out
inc
push
mov
jae
je
push
dec
stos
dec
out
cmp
xchg
loopne
(bad)
(bad)
jmp
mov
sub
stos
inc
mov
inc
sbb
push
pop
test
sub
fdivr
(bad)
(bad)
call
mov
pop
push
push
jge
jbe
aaa
cld
fldenv
mov
cs
and
mov
(bad)
(bad)
(bad)
(bad)
(bad)
call
push
pop
test
js
adc
mov
adc
xchg
in
adc
jmp
leave
dec
xchg
(bad)
(bad)
jmp
jg
xor
shl
aad
daa
pushf
call
push
cli
or
pop
popa
loop
mov
xchg
(bad)
out
inc
sub
sbb
xchg
das
lock
mov
lods
shl
das
pop
add
cmp
(bad)
jmp
std
push
xor
xchg
imul
cli
xor
(bad)
(bad)
call
cmp
inc
add
hlt
inc
les
push
in
push
cvtdq2ps
imul
inc
retf
push
(bad)
(bad)
(bad)
jmp
or
push
push
pop
fldenv
loopne
push
sub
cdq
xor
mov
mov
(bad)
(bad)
out
clc
xchg
and
outs
mov
popa
lea
pop
cmc
adc
push
pop
(bad)
(bad)
(bad)
push
pop
fsub
or
mov
fcmovbe
gs
aaa
ret
add
push
xor
jmp
dec
in
in
jmp
pop
arpl
mov
and
adc
inc
cmp
repz
daa
adc
mov
(bad)
sbb
shr
(bad)
(bad)
(bad)
jmp
(bad)
js
ins
mov
icebp
lea
jno
xchg
add
ffree
sub
sbb
(bad)
mov
xlat
inc
test
jg
and
ins
scas
pop
xor
gs
xor
sub
les
cmc
ficom
ds
pop
fisub
push
das
fidiv
cwde
out
fimul
dec
(bad)
(bad)
(bad)
call
jmp
es
mov
cmp
cmc
in
add
push
jno
into
lahf
jle
loope
inc
neg
mov
jg
cmp
(bad)
(bad)
(bad)
mov
push
jmp
mov
cwde
and
call
aaa
(bad)
sub
jg
inc
cld
dec
jle
pop
arpl
push
mov
and
ja
clc
stos
jbe
dec
cld
ficomp
jnp
push
xchg
(bad)
add
(bad)
call
lods
out
ds
cmp
enter
or
ins
mov
(bad)
(bad)
call
pop
hlt
jp
dec
push
sub
mov
dec
fwait
scas
test
fs
mov
(bad)
(bad)
call
fidivr
mov
mov
mov
loope
(bad)
movs
jge
out
cld
cwde
in
xor
(bad)
(bad)
call
dec
cmc
(bad)
int
add
popa
call
adc
pop
mov
mov
cmc
mov
jmp
aaa
cli
adc
cmps
xor
mov
jg
or
and
add
outs
icebp
and
(bad)
call
aaa
not
sub
xchg
add
sbb
(bad)
(bad)
jmp
adc
sti
movs
mov
xchg
dec
cdq
push
xchg
sub
dec
mov
test
cmp
(bad)
dec
lods
and
test
pop
mov
cmp
mov
shr
idiv
fcomip
jmp
mov
cmps
cmp
jg
sbb
(bad)
outs
in
test
imul
sub
mov
fnstcw
mov
pop
xchg
mov
in
imul
(bad)
lds
(bad)
(bad)
jmp
jmp
xor
fs
adc
ins
gs
and
push
ror
sahf
jmp
xchg
sbb
rcr
(bad)
push
xchg
je
fbld
loop
(bad)
leave
scas
pop
clc
addr16
lahf
in
dec
sti
or
stc
ficomp
mov
xchg
and
cs
inc
int3
jge
push
shr
and
or
cld
lahf
jmp
ins
xchg
div
push
je
mov
(bad)
(bad)
(bad)
dec
pop
sahf
addr16
jge
dec
aam
leave
std
out
or
imul
push
inc
(bad)
sahf
fdivr
(bad)
fcomip
sbb
sbb
push
inc
and
inc
addr16
xchg
jbe
mov
lea
addr16
pusha
jbe
ins
cmp
pop
jmp
(bad)
dec
inc
adc
jbe
and
adc
outs
test
and
push
aad
popa
dec
pop
(bad)
scas
add
sub
enter
dec
das
ins
dec
sbb
or
sub
cmp
cmp
mov
mov
mov
jecxz
(bad)
(bad)
push
cmp
sub
out
jnp
stc
(bad)
sbb
out
sub
dec
jl
adc
mov
fadd
ret
cwde
pop
pop
add
mov
xchg
das
mov
xor
(bad)
(bad)
(bad)
push
outs
les
lods
cdq
leave
sbb
rcl
push
mov
pop
mov
pusha
fild
dec
(bad)
(bad)
(bad)
call
mov
dec
loope
(bad)
cmp
repnz
and
mov
fimul
neg
(bad)
(bad)
(bad)
inc
mov
mov
iret
jp
jle
pop
(bad)
popa
stos
aad
ins
pop
push
dec
fbld
cmp
(bad)
call
or
aas
add
mov
dec
pop
fwait
jo
(bad)
imul
shl
adc
or
push
inc
stos
loopne
rcl
and
scas
mov
add
jmp
push
cdq
pop
js
sti
add
daa
sbb
or
mov
or
ins
adc
add
jns
mov
gs
dec
int
adc
cmps
sbb
(bad)
(bad)
(bad)
jmp
pop
push
ins
xchg
xor
sbb
add
popa
jns
sub
xor
(bad)
(bad)
(bad)
jmp
rcl
ja
xchg
fiadd
iret
cmc
sub
inc
ja
xor
mov
add
push
fmul
(bad)
(bad)
(bad)
inc
dec
cdq
pop
sbb
mov
push
sbb
pusha
scas
ds
(bad)
shl
(bad)
aas
(bad)
(bad)
(bad)
(bad)
out
in
jb
sub
in
test
pushf
mov
push
scas
jge
loopne
(bad)
in
mov
call
xchg
call
xchg
mov
mov
xor
xchg
mov
xchg
mov
(bad)
dec
rcr
test
movs
pop
xchg
add
aad
and
popa
outs
dec
cmp
std
imul
scas
inc
ds
and
movs
cmp
(bad)
(bad)
call
test
shl
loopne
addr16
stc
aad
xor
stos
fs
adc
in
daa
pop
inc
(bad)
aad
jmp
push
xor
call
pop
fsub
cmp
add
(bad)
push
and
add
mov
sub
inc
(bad)
jmp
fmul
mov
ds
cmps
add
add
push
or
cmps
pop
(bad)
(bad)
(bad)
call
and
fcom
add
shl
lock
dec
loopne
mov
xor
or
(bad)
call
xor
leave
(bad)
fiadd
es
fstp
rol
mov
pop
lahf
repnz
(bad)
(bad)
call
push
sub
leave
mov
ds
div
cli
ror
jmp
xchg
pop
sub
sar
mov
ret
aad
repz
jmp
or
xchg
pop
aas
sahf
repnz
in
fdivr
(bad)
(bad)
(bad)
jmp
aad
repnz
mov
outs
push
cmps
cmc
inc
jecxz
pushf
ret
jo
bound
jno
cdq
mov
(bad)
(bad)
ds
mov
std
cmp
xor
(bad)
call
ins
mov
jno
lds
pop
xchg
mov
mov
(bad)
(bad)
inc
cmps
popf
icebp
mov
sti
inc
add
xchg
inc
loope
sti
sti
cmp
inc
mov
(bad)
(bad)
fadd
in
pusha
push
push
(bad)
sub
shl
(bad)
jg
inc
data16
xor
in
jmp
inc
and
cwde
es
(bad)
(bad)
jmp
push
mov
and
cli
pop
inc
cmc
and
or
js
(bad)
(bad)
(bad)
inc
call
(bad)
icebp
jmp
push
sbb
xchg
xor
pop
xchg
ror
xor
lods
movs
add
ds
lock
call
jnp
xchg
push
jno
sub
xor
xchg
jae
outs
and
ins
test
adc
dec
(bad)
lock
sub
and
add
and
ret
(bad)
(bad)
(bad)
(bad)
call
pop
jns
repnz
and
add
es
pushf
in
ins
jecxz
mov
repz
sub
pop
shr
jmp
cmp
inc
mov
std
mov
sbb
scas
mov
mov
cdq
clc
das
mov
mov
xor
(bad)
push
pop
mov
shl
push
add
pop
pop
cmp
std
fcom
xchg
out
(bad)
(bad)
(bad)
dec
push
test
dec
and
mov
sar
int
out
sti
stos
and
mov
(bad)
hlt
je
sub
xor
xor
adc
nop
sub
xchg
(bad)
(bad)
(bad)
inc
cmp
cli
arpl
jb
ret
mov
mov
nop
mov
adc
mov
imul
stos
je
clc
mov
bound
jo
push
retf
outs
mov
cli
call
lds
mov
test
mov
mov
inc
pop
xchg
bound
inc
(bad)
(bad)
(bad)
call
test
out
loopne
loopne
add
adc
push
xchg
pop
push
jno
dec
xchg
(bad)
(bad)
(bad)
inc
push
inc
aaa
xlat
ins
adc
add
mov
fwait
cmps
mov
adc
cdq
xchg
lock
inc
fstp
ja
inc
(bad)
sar
outs
inc
push
aam
std
loop
pushf
adc
sub
(bad)
(bad)
(bad)
mov
scas
ficomp
daa
sub
sub
sbb
in
dec
iret
inc
mov
xchg
add
xor
and
fld
cmp
cmp
cs
leave
das
(bad)
xchg
(bad)
std
dec
(bad)
(bad)
jg
icebp
add
ficom
mov
add
jl
lds
inc
sbb
dec
aas
push
sbb
and
cmps
jmp
dec
das
stos
es
inc
(bad)
call
cmps
(bad)
or
pop
add
(bad)
(bad)
inc
out
out
dec
in
(bad)
ficom
mov
inc
mov
jno
mov
(bad)
mov
sub
movs
inc
dec
xor
mov
push
nop
ret
jmp
lock
imul
mov
jle
fbld
imul
pop
or
inc
iret
pop
xchg
sbb
push
shl
sub
in
cmp
(bad)
(bad)
inc
stos
popf
fnstenv
add
cmp
rcr
cmp
loope
rcr
pop
cmp
inc
cmp
loop
and
and
rol
mov
jo
cmp
(bad)
(bad)
(bad)
(bad)
fisub
fmul
arpl
sbb
push
ja
inc
aaa
es
jae
or
call
jmp
sub
and
cs
sbb
mov
pop
mov
(bad)
(bad)
(bad)
jmp
adc
fisttp
popf
aad
or
inc
xchg
ins
and
jg
add
(bad)
inc
daa
jb
and
push
jae
loop
imul
mov
(bad)
(bad)
(bad)
clc
daa
jle
cmps
sahf
push
adc
cld
ds
cmp
mov
and
push
and
or
(bad)
int
xchg
(bad)
mov
fs
dec
cmps
es
fidiv
inc
rcl
xor
cmp
pop
sub
fdivr
aaa
std
sbb
mov
adc
clc
neg
jmp
or
xor
ss
ds
int3
js
jp
push
inc
mov
push
xchg
pop
xor
mov
inc
(bad)
(bad)
(bad)
(bad)
fstp
and
into
in
mov
test
gs
mov
pop
push
cmps
pop
mov
(bad)
(bad)
jmp
lock
test
mov
mov
jno
sub
mov
pop
pop
mov
sar
jmp
loopne
(bad)
ffree
rol
int
jne
lea
cwde
fisttp
sub
nop
hlt
jmp
cmp
add
ss
xchg
in
call
jmp
mov
jae
outs
fimul
scas
push
(bad)
cli
cmp
sub
dec
cmc
push
loope
idiv
push
xchg
sub
outs
add
loope
(bad)
(bad)
jmp
retf
(bad)
adc
(bad)
jmp
outs
mov
and
jbe
and
mov
dec
sbb
(bad)
(bad)
jmp
pop
add
xchg
gs
call
mov
add
pushf
xor
stc
cmp
pop
retf
(bad)
(bad)
ds
sub
push
jbe
push
rcr
or
or
test
jecxz
out
(bad)
mov
inc
call
dec
xchg
shl
mov
js
les
sub
(bad)
(bad)
(bad)
jmp
dec
shr
clc
adc
sbb
fmul
sbb
(bad)
(bad)
inc
xor
lds
or
ja
sub
xchg
test
shl
inc
fadd
jmp
scas
int3
movs
ja
xor
jo
pop
repnz
add
cmc
adc
ret
fcom
(bad)
(bad)
push
retf
adc
stos
(bad)
icebp
mov
call
popf
jle
lahf
dec
or
(bad)
(bad)
(bad)
jmp
hlt
inc
xor
ds
pop
jae
mov
bound
inc
fld
fs
leave
xchg
cwde
mov
ret
jmp
fucompp
cmp
cli
inc
fsub
xchg
cmp
cli
mov
repz
pop
and
push
cld
push
lods
jne
cld
into
pop
jp
out
in
(bad)
jmp
enter
icebp
(bad)
cmc
push
enter
pop
idiv
pop
push
les
or
mov
enter
dec
mov
addr16
int
(bad)
(bad)
push
addr16
jle
lfs
ds
dec
sub
scas
cmc
push
idiv
(bad)
(bad)
es
ins
sub
xor
clc
xor
imul
xor
(bad)
(bad)
(bad)
inc
outs
lea
dec
inc
test
iret
pushf
xor
cmp
js
mov
jmp
hlt
mov
cmc
push
movs
mov
add
out
cmp
mov
and
jns
inc
call
jmp
jns
inc
fistp
(bad)
sbb
xchg
xor
sahf
inc
push
aad
xchg
mov
push
sar
mov
fwait
out
mov
pop
test
sbb
jle
pop
dec
or
xchg
mov
mov
jp
xor
jmp
(bad)
(bad)
call
mov
pop
sti
cmp
aas
popa
int3
test
psubusb
cwde
dec
cmp
(bad)
call
pop
sub
sti
and
dec
sub
bswap
dec
sbb
mov
mov
fdivr
dec
les
dec
xchg
push
rol
xor
xor
(bad)
push
(bad)
(bad)
(bad)
dec
imul
jae
mov
pop
inc
pop
jle
fadd
in
mov
pop
in
inc
mov
and
(bad)
(bad)
jmp
das
fdiv
ror
mov
jp
std
sbb
push
ror
sbb
sar
(bad)
jmp
xor
push
sbb
jg
xor
inc
add
retf
adc
inc
adc
std
and
retf
push
cli
sti
push
sbb
ins
inc
push
ret
add
lea
push
fsubr
xchg
repnz
dec
pop
(bad)
(bad)
(bad)
call
out
mov
inc
lock
fimul
jae
mov
ss
cld
pop
pop
call
sub
stos
cs
xchg
test
xchg
(bad)
call
jb
sub
call
add
inc
push
pusha
push
imul
mov
xchg
loopne
lds
jae
aad
out
je
(bad)
(bad)
(bad)
(bad)
call
xchg
retf
std
xchg
xchg
cdq
adc
push
or
scas
sahf
addr16
inc
jecxz
es
push
sbb
adc
or
inc
pop
mov
inc
cmp
cmp
(bad)
dec
and
mov
pop
lods
jl
cld
loopne
mov
popa
dec
sbb
lahf
add
inc
cmp
dec
and
dec
jb
jg
call
add
call
mov
fwait
dec
jnp
mov
(bad)
(bad)
inc
sub
sbb
in
aaa
fs
loop
out
cs
(bad)
(bad)
call
test
mov
push
sub
inc
enter
div
pop
js
jecxz
(bad)
(bad)
push
in
nop
in
push
fwait
inc
inc
pop
bound
inc
int
sbb
les
mov
sub
(bad)
jb
cmp
icebp
adc
mov
ss
retf
call
push
sub
call
jo
out
imul
sub
sub
fisub
dec
not
push
ins
cmp
xor
or
cmp
adc
ja
(bad)
(bad)
(bad)
inc
fwait
xor
ror
scas
xchg
into
xor
ja
or
and
popf
adc
bound
repnz
and
cmp
pop
hlt
jmp
push
mov
sahf
and
mov
into
adc
ins
inc
xchg
pop
fs
das
sar
add
inc
sbb
push
push
int3
pop
pop
adc
in
fs
mov
mov
(bad)
(bad)
(bad)
jnp
jp
pop
sbb
adc
cmp
mov
sbb
xchg
cmp
(bad)
sar
(bad)
(bad)
call
fwait
jp
jg
call
test
test
neg
mov
repz
imul
xchg
sti
mov
dec
jmp
dec
dec
repz
jmp
lods
out
repnz
dec
lock
mov
call
pop
cli
mov
mov
std
das
das
mov
int
cmp
outs
cmp
(bad)
(bad)
push
xlat
cmp
lds
and
icebp
mov
dec
add
sub
sbb
cmps
lods
or
les
out
jg
rol
mov
in
loopne
(bad)
(bad)
(bad)
(bad)
clc
ins
pop
jmp
cmps
fistp
int3
(bad)
call
retf
es
(bad)
(bad)
jmp
scas
adc
adc
mov
retf
pop
stos
mov
jne
(bad)
(bad)
(bad)
mov
push
sbb
or
ret
(bad)
sub
int3
into
xchg
sub
sti
sub
aas
ja
test
sub
mov
(bad)
(bad)
call
fild
push
lds
jp
xor
jbe
push
mov
adc
xchg
xchg
jecxz
(bad)
(bad)
call
jmp
bound
mov
mov
push
mov
sar
(bad)
adc
push
imul
pop
call
ror
mov
dec
xor
mov
xchg
call
adc
(bad)
jmp
push
push
(bad)
xor
test
outs
xor
push
aad
stos
sub
(bad)
(bad)
(bad)
call
data16
retf
and
mov
dec
jo
das
push
scas
ins
or
test
dec
loop
loopne
(bad)
inc
mov
or
cmp
sub
sub
pop
dec
mov
sub
add
(bad)
(bad)
mov
inc
movs
into
jl
dec
xchg
jb
icebp
sbb
cmp
jg
adc
enter
(bad)
dec
out
std
mov
shl
fistp
push
bound
addr16
inc
jno
pop
adc
sub
adc
(bad)
call
std
call
mov
movs
fadd
cmps
lahf
test
outs
call
outs
(bad)
ja
jg
push
cmps
push
stos
bound
inc
inc
fisubr
mov
ins
add
cld
(bad)
(bad)
(bad)
(bad)
cmp
add
test
(bad)
xchg
mov
icebp
or
xor
cmp
pusha
or
pop
(bad)
(bad)
(bad)
push
mov
xor
pop
jp
or
add
inc
cmps
and
and
(bad)
sub
(bad)
(bad)
inc
push
retf
fisubr
mov
pop
xor
mov
xor
adc
sbb
std
dec
inc
test
xor
mov
arpl
cmc
push
std
in
inc
je
sbb
pop
ja
inc
sbb
clc
(bad)
cld
sub
aad
sub
or
xchg
add
ror
retf
daa
retf
push
mov
(bad)
(bad)
inc
fucom
add
(bad)
popf
jns
in
sbb
push
adc
(bad)
(bad)
jmp
scas
mov
sti
xor
xor
jns
xor
jmp
mov
(bad)
mov
jnp
and
(bad)
(bad)
(bad)
jmp
jb
retf
hlt
test
or
nop
add
int
and
adc
jl
mov
test
mov
sbb
mov
sub
scas
ins
stos
ja
xchg
(bad)
rcl
cmc
xchg
(bad)
(bad)
mov
js
sbb
jnp
icebp
ret
xchg
jo
scas
pop
pop
cdq
mov
(bad)
jmp
shr
inc
pop
into
bound
jl
imul
(bad)
sbb
(bad)
jmp
cmp
fdivp
call
jge
retf
cmp
sub
or
or
dec
jns
sti
lock
jmp
mov
dec
push
dec
mov
in
fcmovnbe
repz
jl
jl
sbb
mov
lods
push
xor
adc
js
fcom
pushf
cld
mov
adc
push
sbb
(bad)
(bad)
(bad)
push
jle
call
cmps
mov
cmp
sub
loope
(bad)
(bad)
(bad)
mov
cwde
inc
xchg
pop
pop
or
(bad)
cwde
cs
xor
aad
sub
mov
or
mov
ins
shr
mov
sar
mov
sub
sbb
fiadd
jle
fs
clc
mov
sbb
jmp
out
jecxz
(bad)
(bad)
jmp
hlt
mov
scas
loop
cdq
in
ds
push
popa
xlat
xchg
rcr
lods
and
jno
cli
add
(bad)
(bad)
jmp
pop
add
fdivr
mov
clc
rol
outs
mov
pop
mov
or
data16
or
js
mov
cs
sbb
loope
(bad)
call
movs
push
push
lods
dec
and
or
(bad)
stos
adc
or
and
xchg
xor
(bad)
fbld
add
mov
mov
push
ficom
nop
not
rcr
cmp
inc
test
imul
pop
mov
mov
(bad)
(bad)
dec
loopne
arpl
push
mov
rcr
(bad)
push
mov
lea
(bad)
sar
pop
pop
jmp
(bad)
repnz
nop
test
adc
(bad)
(bad)
inc
retf
and
call
cmp
ins
ins
sub
add
dec
jae
mov
jno
inc
add
mov
mov
pop
bnd
pop
fldcw
(bad)
jmp
dec
sar
(bad)
aas
adc
ss
data16
retf
nop
xchg
jne
call
jmp
adc
jo
loopne
adc
out
jns
mov
xchg
jmp
call
or
iret
ins
add
out
add
mov
ja
fs
(bad)
out
push
pusha
ins
mov
out
jne
mov
and
inc
adc
(bad)
mov
(bad)
mov
test
xchg
rol
loop
and
jl
ud0
shl
lea
jmp
xor
fwait
and
fidiv
cmps
xchg
dec
xchg
bound
shl
es
xor
jmp
gs
add
int3
xchg
jle
dec
cmps
push
leave
xchg
jno
ret
mov
sar
push
pop
inc
jmp
mov
mov
or
cmp
or
es
(bad)
push
mov
mov
xchg
sub
in
xchg
push
pusha
xchg
ins
(bad)
(bad)
jg
add
pop
(bad)
cmp
std
call
push
or
push
cld
(bad)
cld
inc
xchg
stos
retf
lods
mov
xor
push
les
mov
into
imul
pop
pop
movs
jb
(bad)
push
data16
and
jne
pop
add
mov
outs
clc
call
je
add
mov
push
dec
stos
mov
cs
(bad)
(bad)
push
xor
inc
lods
gs
mov
es
loopne
jmp
imul
mov
popf
fnstenv
setae
push
repnz
popf
cwde
or
fcomip
or
adc
mov
inc
aaa
es
push
mov
sbb
sbb
sar
xchg
dec
clc
ins
in
xor
pop
push
retf
sub
daa
lods
and
sar
(bad)
(bad)
inc
repz
pop
cs
mov
popf
dec
rcr
and
mov
test
xor
jl
or
cdq
mov
rcr
ins
xchg
fistp
dec
dec
push
pop
psubusw
ret
call
enter
push
test
fild
sbb
retf
dec
inc
(bad)
enter
inc
mov
jl
sti
(bad)
(bad)
(bad)
(bad)
movs
push
push
enter
rcl
and
adc
pop
cli
sti
and
jb
hlt
mov
(bad)
call
inc
adc
or
mov
shl
jno
stc
adc
pusha
cld
(bad)
(bad)
(bad)
cmp
adc
dec
add
xor
jno
out
das
fwait
inc
test
or
movs
(bad)
(bad)
push
fmul
hlt
in
and
or
or
mov
mov
std
adc
(bad)
jmp
clc
cmp
fdiv
sti
movs
add
ret
mov
xchg
add
mov
outs
or
cmps
jne
pusha
loopne
ja
int3
das
jb
popa
(bad)
(bad)
(bad)
(bad)
jmp
mov
lds
sti
movs
pop
mov
mul
jp
movs
and
fcos
(bad)
(bad)
call
push
xchg
xlat
xor
retf
outs
sub
pusha
icebp
adc
dec
in
test
pop
dec
pop
cmp
mov
(bad)
jmp
popf
(bad)
lods
cmps
or
in
les
fisttp
jmp
test
(bad)
in
(bad)
inc
jle
test
ror
xchg
aad
and
(bad)
dec
test
popf
stc
mov
call
out
and
mov
fisubr
push
out
(bad)
(bad)
(bad)
mov
leave
es
out
mov
or
mov
mov
pop
repnz
pop
(bad)
(bad)
(bad)
call
xchg
leave
push
cmp
arpl
pop
aaa
fsubr
push
mov
ja
(bad)
(bad)
call
mov
cdq
pop
xor
xlat
pop
sbb
sbb
or
xor
mov
jnp
(bad)
(bad)
(bad)
dec
scas
sar
mov
std
lods
and
movs
mov
in
adc
sbb
add
cmp
push
sbb
fistp
jns
mov
push
sbb
sti
ret
(bad)
call
xor
cs
cmp
inc
(bad)
stc
sub
inc
int3
xchg
repz
and
(bad)
(bad)
dec
or
and
push
push
fsub
xor
dec
retf
push
movs
scas
and
retf
dec
shl
mov
(bad)
jmp
je
outs
leave
dec
pop
aas
scas
sbb
fdiv
dec
jmp
sub
(bad)
dec
repz
push
xor
sbb
out
data16
inc
std
sub
pop
mov
or
push
push
mov
in
retf
or
sbb
repnz
(bad)
(bad)
(bad)
call
push
dec
sbb
add
dec
or
push
js
dec
test
sbb
(bad)
(bad)
dec
xchg
xchg
cmp
mov
scas
inc
ss
mov
sbb
push
mov
jmp
jnp
retf
shl
xchg
push
inc
inc
out
out
cld
arpl
test
inc
mov
inc
inc
push
(bad)
(bad)
(bad)
jg
pop
in
push
sub
aad
movs
dec
lds
dec
mov
push
clc
ss
mov
cld
(bad)
call
sahf
sbb
cmp
dec
add
xchg
out
retf
lea
fild
push
jp
sub
sahf
lods
dec
(bad)
(bad)
(bad)
call
outs
dec
ins
fcom
cmp
ins
jno
ss
lock
ret
xor
jns
cli
push
jne
or
call
jno
neg
fadd
xor
jmp
outs
into
popf
and
cmp
(bad)
clc
or
fsub
jmp
cwde
cli
(bad)
clc
add
xor
call
pop
in
sbb
add
mov
es
repz
cmp
(bad)
call
ficomp
test
call
xchg
(bad)
fst
sbb
adc
loope
aad
lock
sbb
mov
shl
or
cli
mov
(bad)
(bad)
(bad)
mov
ins
push
out
pop
jmp
xchg
les
test
aas
aad
mov
mov
fwait
ret
fdiv
mov
adc
mov
push
movs
push
bound
fadd
xor
cs
fild
cmp
push
or
push
adc
(bad)
(bad)
(bad)
lods
cmp
(bad)
loopne
adc
push
sub
loop
icebp
in
out
test
jle
test
mov
dec
inc
clc
inc
lds
lea
(bad)
call
and
mov
lods
push
mov
daa
out
pop
enter
mov
pusha
fldenv
(bad)
(bad)
(bad)
call
addr16
pop
push
and
or
xchg
add
dec
adc
mov
(bad)
push
ss
fstp
fisttp
cwde
xor
test
(bad)
sbb
cdq
dec
cs
push
pop
icebp
and
dec
add
and
clc
(bad)
(bad)
jmp
into
pop
out
mov
adc
iret
jbe
test
pop
nop
or
stc
sbb
movs
dec
(bad)
(bad)
inc
icebp
mov
outs
loop
push
aaa
jns
mov
test
lock
(bad)
(bad)
(bad)
cli
jnp
pop
outs
sbb
cmc
ds
iret
push
call
pop
or
(bad)
(bad)
(bad)
cld
ret
mov
into
aaa
jnp
mov
inc
pop
repnz
push
jge
imul
sbb
cmc
(bad)
call
test
in
mov
gs
mov
push
inc
mov
push
xchg
pop
std
dec
mov
iret
fwait
push
aam
jnp
push
xor
(bad)
jmp
mov
xchg
cmc
mov
jne
sti
mov
mov
push
add
(bad)
call
jno
movs
mov
fwait
sbb
mov
fidiv
cmp
mov
xchg
hlt
dec
push
lods
outs
mov
jg
es
stc
mov
mov
cmp
fdivr
pop
dec
fldenv
lea
cdq
fild
mov
fwait
inc
jne
pop
call
ja
push
clc
hlt
mov
out
sbb
lock
out
cli
(bad)
cli
dec
fldcw
cld
sub
test
fwait
loopne
ret
retf
adc
(bad)
(bad)
inc
and
sbb
xor
pusha
xchg
cmp
ins
cmps
(bad)
(bad)
jmp
repz
mov
inc
jp
xchg
or
add
les
jnp
sbb
fstp
(bad)
(bad)
(bad)
jmp
push
lds
mov
pop
push
jle
cld
fdivr
dec
arpl
mov
xchg
inc
add
(bad)
push
cmp
sub
lock
inc
mov
sub
(bad)
(bad)
call
xchg
and
inc
fwait
jle
push
inc
and
xchg
popf
sbb
mov
jae
sti
loop
(bad)
(bad)
in
jmp
mov
dec
adc
loope
jp
clc
stc
inc
adc
ins
sub
mov
(bad)
(bad)
(bad)
push
cmp
inc
test
push
xchg
and
adc
push
xor
lea
(bad)
(bad)
(bad)
jmp
fs
retf
mov
div
fucomp
adc
and
sbb
push
(bad)
(bad)
(bad)
call
arpl
mov
sar
cld
jmp
outs
xor
mov
mov
adc
inc
and
movs
add
xchg
sub
ss
adc
mov
xchg
addr16
std
push
mov
adc
push
repnz
stc
cmps
rcl
dec
pop
in
mov
call
aad
(bad)
jne
jae
in
sahf
aas
ja
outs
test
aas
(bad)
(bad)
(bad)
dec
aad
sub
mov
cld
cld
pop
test
or
and
outs
push
scas
(bad)
(bad)
(bad)
call
sar
leave
je
out
or
loope
jg
div
test
xor
cmp
jo
out
xchg
ret
mov
call
mov
test
inc
cld
mov
inc
mov
mov
fistp
call
outs
fadd
inc
hlt
xor
loop
fs
mov
(bad)
stc
sub
out
loopne
cli
(bad)
call
call
mov
mul
jmp
sbb
(bad)
(bad)
mov
es
fcmovu
mov
and
(bad)
push
or
inc
sbb
shl
(bad)
(bad)
(bad)
mov
not
lods
fdecstp
sti
sub
(bad)
rcl
dec
jmp
(bad)
call
mov
cmp
test
mov
in
movs
sbb
jne
push
cmp
popf
mov
call
cwde
inc
pop
xchg
fcomip
mov
and
(bad)
xlat
stc
jle
out
popf
clc
(bad)
(bad)
jmp
lea
pop
push
setbe
fs
xor
sub
ja
bound
sbb
loopne
jmp
in
pop
popa
pop
and
pop
cmc
(bad)
fild
daa
test
rcl
sub
fidiv
lahf
xchg
dec
cld
(bad)
(bad)
inc
pusha
(bad)
xchg
xor
jnp
dec
div
mov
jecxz
pop
addr16
ror
outs
push
cmp
lahf
(bad)
dec
inc
in
or
mov
sbb
pop
jle
sbb
inc
(bad)
jl
cmp
fsub
in
mov
adc
cmp
sub
fs
repnz
rol
push
xchg
cmp
xchg
call
(bad)
(bad)
jmp
loopne
inc
ds
test
arpl
aaa
mov
add
cmps
jle
xor
sub
fsubp
xlat
mov
aad
adc
xchg
nop
stc
push
or
xor
scas
pushf
(bad)
(bad)
(bad)
call
xchg
clc
mov
xchg
or
(bad)
ja
rol
imul
cld
push
jne
(bad)
(bad)
call
push
xchg
jno
out
movs
jl
(bad)
rcr
mov
(bad)
pusha
in
outs
mov
aaa
jmp
add
(bad)
(bad)
(bad)
clc
mov
adc
adc
xor
bound
add
or
pop
sbb
adc
xor
mov
(bad)
jmp
jmp
jbe
sbb
add
shl
scas
pop
(bad)
(bad)
(bad)
dec
adc
cli
sub
or
mov
aas
push
dec
xchg
aaa
mov
cmc
or
(bad)
(bad)
call
pop
hlt
stos
outs
fild
fld
int
jno
pushf
lods
aam
mov
jge
or
xor
sbb
stos
iret
iret
fistp
jmp
sub
(bad)
mov
(bad)
jmp
dec
pusha
add
iret
fs
xchg
out
jno
sbb
mov
ds
loope
jb
call
cmp
(bad)
(bad)
jmp
mov
jmp
add
imul
sub
retf
ss
push
cmps
and
or
loop
xchg
or
enter
sub
lods
add
pop
sbb
or
xchg
in
xlat
(bad)
(bad)
(bad)
(bad)
jg
and
std
inc
std
push
jmp
xchg
ret
stc
imul
gs
(bad)
(bad)
(bad)
(bad)
jmp
test
sahf
jge
sub
mov
repz
push
jge
retf
and
jbe
or
(bad)
dec
xor
in
movs
inc
fs
loop
add
pop
retf
cs
sbb
(bad)
dec
pop
aaa
jg
jecxz
loop
adc
mov
pusha
push
jecxz
adc
out
(bad)
(bad)
(bad)
dec
cmps
jl
and
ret
inc
mov
push
call
mov
jecxz
jle
les
(bad)
(bad)
(bad)
nop
imul
mov
js
add
in
ret
or
inc
and
jmp
pop
mov
push
das
popf
stc
loop
or
cmp
(bad)
inc
cli
into
test
xor
retf
mov
ss
cld
xchg
xlat
xor
sub
(bad)
jmp
and
and
inc
pop
sbb
mov
mov
(bad)
(bad)
inc
xchg
imul
mov
cmp
sbb
xor
push
sub
ret
sbb
fidivr
mov
dec
push
pop
jae
sub
xor
repz
fdiv
add
pop
fdivr
call
shl
jmp
repnz
mov
adc
push
jp
das
sar
mov
scas
lods
fiadd
mov
enter
fcomp
sbb
sub
cmp
(bad)
(bad)
(bad)
call
sbb
pop
test
es
xchg
test
adc
scas
inc
call
dec
lahf
jno
icebp
(bad)
push
dec
sbb
sub
(bad)
popa
pop
mov
clc
enter
adc
pop
push
loopne
ins
jns
sbb
(bad)
(bad)
(bad)
(bad)
call
xor
jmp
movs
xor
or
scas
ins
test
fbld
mov
fdivrp
sbb
loop
gs
rcl
cmp
ins
add
xor
xor
cs
cdq
mov
mov
call
add
(bad)
(bad)
(bad)
jmp
cmp
bound
int3
xchg
mov
push
(bad)
pop
push
cmp
and
sub
(bad)
jg
mov
xchg
adc
and
inc
inc
mov
nop
(bad)
(bad)
(bad)
push
mov
xchg
into
pop
cli
sub
cs
popf
and
test
ret
sbb
cmp
enter
cmp
sub
adc
or
or
or
or
das
xor
mul
(bad)
clc
add
xchg
inc
ret
fs
popf
nop
dec
mul
hlt
jnp
pop
mov
mov
lahf
cmps
stos
shl
lock
adc
push
push
repz
push
and
(bad)
(bad)
push
dec
pop
sar
aad
jbe
std
scas
sub
mov
or
mov
stos
push
cmp
int3
push
sub
in
or
dec
sub
xchg
jnp
out
hlt
xor
fwait
pop
test
(bad)
(bad)
(bad)
push
add
mov
shl
in
fstp
mov
and
pop
mov
repz
aam
(bad)
call
(bad)
retf
or
daa
aaa
add
ja
test
lods
xchg
xchg
daa
adc
(bad)
inc
and
jne
mov
add
daa
xchg
iret
shr
in
int3
mov
(bad)
(bad)
(bad)
jmp
stos
icebp
arpl
ins
std
rol
dec
jno
call
jle
push
mov
(bad)
(bad)
(bad)
call
xor
adc
stos
ins
daa
xchg
sahf
out
cmp
lock
inc
jp
lods
push
cli
jmp
adc
xlat
(bad)
jge
aad
(bad)
jg
(bad)
sbb
jae
xchg
add
push
dec
es
dec
jnp
shl
dec
(bad)
(bad)
(bad)
dec
push
test
dec
pop
inc
imul
mov
mov
jmp
push
lahf
fcmovnu
mov
neg
mov
and
ficom
and
push
sbb
jge
idiv
(bad)
jg
(bad)
(bad)
imul
ret
dec
jb
lahf
ds
sbb
add
(bad)
(bad)
(bad)
(bad)
push
mul
mov
jae
push
std
pop
xchg
ja
pop
add
sahf
or
mov
dec
clc
stc
inc
add
(bad)
jmp
aad
xlat
xchg
scas
das
out
dec
lea
scas
inc
(bad)
cs
sub
fmulp
mov
outs
(bad)
(bad)
mov
pop
jecxz
mov
xchg
mov
fmul
js
loope
dec
jae
jo
sbb
cld
(bad)
pop
sbb
inc
(bad)
(bad)
(bad)
jmp
xchg
out
addr16
sbb
dec
fs
into
shl
es
sub
xchg
out
mov
(bad)
push
cld
cmp
outs
sbb
inc
fprem
outs
sbb
loope
aaa
xchg
or
mov
das
clc
jmp
or
es
sar
mov
(bad)
std
cmp
sub
dec
les
push
xchg
repz
(bad)
(bad)
(bad)
stc
adc
mov
fistp
jmp
mov
arpl
(bad)
(bad)
(bad)
inc
or
jle
jbe
push
cmp
sbb
xor
iret
fild
bound
mov
jg
dec
mov
dec
in
les
jb
cmp
xor
(bad)
jmp
cs
cmc
outs
dec
pop
loopne
adc
test
add
bound
or
loope
dec
and
or
mov
xchg
popf
addr16
ret
pop
push
cmc
ffreep
sub
mov
sahf
xor
xor
(bad)
jmp
mov
call
movs
push
das
dec
or
push
arpl
clc
mov
out
pop
push
sbb
pop
or
jp
(bad)
jg
in
(bad)
enter
ins
inc
mov
add
aam
gs
add
jmp
outs
jle
(bad)
inc
pop
sub
aaa
cld
in
shl
cmp
lock
pop
nop
fdiv
into
pop
xor
or
or
(bad)
call
mov
mov
dec
stc
fs
jl
aam
sub
cmp
hlt
jg
imul
ret
sbb
or
adc
or
dec
daa
dec
mov
aas
out
into
xlat
inc
(bad)
inc
push
mov
adc
xor
retf
jg
push
sahf
xor
jg
xor
xchg
inc
sub
inc
cmp
call
mov
js
popa
mov
(bad)
(bad)
call
out
pusha
nop
xor
or
push
add
pop
scas
inc
sub
dec
stos
outs
push
push
jmp
(bad)
clc
mov
lock
mov
xchg
mov
rcr
sbb
sub
dec
sbb
(bad)
(bad)
(bad)
cdq
push
and
jbe
sub
adc
xor
jae
sbb
sar
mov
ret
cmp
fstp
inc
icebp
xchg
aas
fisub
mov
push
fsubr
fstp
and
mov
(bad)
jmp
mov
in
lods
mov
mov
ds
clc
jge
outs
shl
cmp
add
push
inc
retf
push
jp
(bad)
push
mov
fs
xchg
int3
call
add
and
cli
jo
je
or
(bad)
(bad)
dec
sbb
dec
or
jg
dec
scas
lahf
mov
ds
pop
push
in
lea
leave
(bad)
sar
repnz
(bad)
mov
gs
(bad)
(bad)
jmp
fimul
ss
sbb
stos
mov
dec
mov
(bad)
fmul
xor
inc
int3
into
dec
out
cmps
repz
mov
out
cli
or
inc
inc
fimul
(bad)
(bad)
push
outs
pop
ret
(bad)
les
mov
xchg
call
(bad)
mov
or
mov
repz
fdivr
(bad)
(bad)
(bad)
mov
inc
mov
inc
xlat
mov
out
xchg
popa
ss
mov
loopne
cmp
mov
(bad)
mov
push
imul
mov
dec
sbb
mov
sahf
mov
jo
aam
mov
jne
and
cmc
pop
(bad)
adc
dec
push
bound
stos
(bad)
inc
cmp
dec
push
mov
js
or
js
shl
out
frndint
(bad)
(bad)
(bad)
stc
push
arpl
shl
mov
sahf
sbb
xchg
fisub
(bad)
dec
inc
push
icebp
loopne
mov
shl
ja
retf
inc
arpl
push
out
popa
mov
inc
sub
dec
jo
adc
cmp
jle
icebp
mov
push
aas
es
jg
ins
xchg
sub
push
dec
mov
sar
mov
dec
mov
adc
mov
into
mov
popf
popa
jge
sub
or
mov
(bad)
(bad)
inc
repnz
outs
test
sub
fnstenv
out
out
mov
jle
cmp
inc
sub
(bad)
(bad)
(bad)
jmp
dec
push
ss
outs
sub
icebp
xchg
mov
add
scas
sahf
loope
xlat
add
outs
ins
call
xor
leave
int3
jo
shr
in
(bad)
(bad)
(bad)
cmp
ret
in
sti
jg
add
dec
or
test
xlat
and
in
or
(bad)
(bad)
(bad)
inc
xchg
inc
into
dec
sub
stc
cdq
js
jbe
jge
movs
rcl
(bad)
bound
(bad)
(bad)
jmp
imul
cmp
out
jmp
out
out
mov
lods
push
or
xchg
pop
out
(bad)
repz
(bad)
(bad)
inc
shl
aam
jmp
lahf
dec
add
or
test
ret
mov
(bad)
(bad)
(bad)
push
and
mov
inc
fadd
cmp
sub
ins
in
sub
add
pop
add
enter
mov
call
sbb
repz
mov
add
cmps
adc
enter
scas
pop
sbb
clc
fsubr
(bad)
(bad)
mov
cwde
add
jnp
xchg
loopne
scas
(bad)
cmp
test
ret
jg
retfw
repnz
aad
and
and
jbe
ficom
jb
(bad)
jl
add
pusha
xor
jg
mov
out
fisttp
xor
call
pop
mov
jnp
and
in
out
rol
mov
fisttp
push
or
repnz
mov
cmps
mov
dec
retf
(bad)
(bad)
dec
movs
mov
outs
aad
mov
sub
int
mov
jle
popa
pop
sar
inc
sbb
pop
in
pushf
ins
mov
push
cmp
cmps
pop
cmps
rcl
mov
(bad)
(bad)
jmp
in
cmp
in
sub
or
add
add
shl
pusha
movs
rcr
or
(bad)
(bad)
fistp
pusha
in
bound
ret
imul
gs
or
mov
sar
(bad)
jmp
(bad)
adc
xor
adc
sahf
inc
or
ret
cmps
nop
in
scas
and
(bad)
js
out
pop
sbb
ins
cmp
arpl
fdiv
push
pop
add
mov
push
jnp
pop
sub
mov
sbb
ret
pop
(bad)
(bad)
(bad)
call
mov
mov
cmp
inc
shr
popa
xor
mov
pop
push
jecxz
test
sbb
lahf
mov
call
add
adc
mov
into
dec
repz
mov
sbb
std
(bad)
(bad)
mov
xor
ja
leave
scas
add
int
int3
cld
call
adc
(bad)
jg
movs
(bad)
fs
fidivr
clc
push
inc
jmp
xchg
jecxz
or
jmp
cmp
jo
mov
clc
rol
fdiv
mov
mov
jno
test
ins
(bad)
(bad)
(bad)
push
pop
(bad)
je
mov
sbb
in
mov
sub
cmp
cmp
test
inc
test
std
(bad)
call
inc
xor
add
mov
clc
rol
icebp
push
push
frstpm(287
ret
(bad)
jg
(bad)
ins
lock
cld
pop
lds
popf
sbb
xchg
mov
(bad)
(bad)
dec
leave
pop
jl
mov
fsubr
sar
or
(bad)
test
popa
out
in
shl
pop
lock
mov
(bad)
(bad)
push
lock
int3
jno
das
adc
xchg
cmps
push
fadd
scas
and
je
cli
mov
(bad)
(bad)
inc
stos
add
jp
jno
pop
clc
cmp
dec
cmp
aas
jbe
xchg
push
add
mov
(bad)
call
pushf
xor
(bad)
mov
mov
ins
sbb
jle
push
(bad)
mov
xchg
gs
mov
ds
stos
fsub
arpl
(bad)
(bad)
(bad)
mov
shl
xchg
mov
addr16
sub
or
xor
aaa
std
call
(bad)
stos
and
and
add
lahf
cmp
or
clc
adc
call
aam
daa
push
fisub
and
xchg
fcomip
(bad)
jmp
inc
(bad)
mov
clc
call
dec
xor
xlat
add
xchg
or
mov
push
pop
nop
pop
in
repnz
movups
push
into
sti
and
inc
sbb
(bad)
mov
dec
stos
mov
sbb
nop
ror
or
xchg
les
xchg
pop
cld
(bad)
jmp
cmps
js
ret
movs
hlt
cmp
or
mov
out
cmps
das
es
jae
inc
adc
ja
inc
in
mov
adc
jnp
mov
dec
imul
mov
xor
(bad)
(bad)
jmp
cld
jae
cld
sbb
out
nop
pop
mov
jmp
retf
inc
xchg
push
jecxz
inc
add
push
mul
(bad)
mov
int
(bad)
sbb
fistp
sub
push
retf
add
(bad)
(bad)
inc
iret
inc
std
aam
adc
test
(bad)
loop
aad
push
(bad)
pop
stc
movs
out
scas
fld
(bad)
cmp
outs
dec
jl
fs
jo
sbb
xor
push
ins
test
hlt
fcom
jp
aaa
and
cmp
(bad)
(bad)
(bad)
call
sub
cld
jno
or
lds
cmc
mov
xchg
or
paddd
shr
add
pop
xchg
outs
sub
jnp
jecxz
pusha
bound
test
push
(bad)
mov
mov
fstp
jno
lahf
mov
inc
mov
add
int3
jmp
rcr
lea
lds
xor
cvtpi2ps
jne
cmp
ss
fadd
je
mov
xchg
push
call
(bad)
mov
test
movs
pop
js
fidivr
push
fimul
ds
(bad)
xor
retf
mov
xchg
out
inc
imul
sbb
(bad)
mov
add
dec
inc
test
fnstsw
xchg
mov
jg
call
sbb
bound
pop
lods
rcl
lock
inc
pop
add
fild
push
push
sbb
mov
repz
add
jg
jne
cmp
cmp
retf
jg
lods
mov
xor
je
int
mov
lock
(bad)
fcmovnbe
sub
xor
fcmovb
out
mov
xchg
push
push
mov
or
cld
(bad)
dec
dec
lock
iret
shl
pop
mov
pop
in
lock
dec
jnp
sbb
mov
sub
retf
cmp
mov
and
inc
(bad)
(bad)
fisubr
mov
(bad)
jmp
(bad)
adc
out
fadd
fwait
inc
lea
cmp
clc
xchg
jge
cdq
xchg
(bad)
(bad)
(bad)
dec
adc
gs
xor
mov
mov
pop
mov
(bad)
jmp
(bad)
dec
and
jns
scas
push
cmp
mov
xor
nop
mov
movs
cli
(bad)
(bad)
mov
test
ins
pop
ins
sbb
xchg
cdq
jmp
das
jb
adc
xor
loopne
cmps
ins
sub
cli
sbb
add
(bad)
dec
lock
and
sbb
in
sbb
mov
sbb
fist
sub
(bad)
jmp
mov
cmp
jge
xchg
enter
(bad)
fild
aam
push
call
jno
(bad)
fimul
jns
fs
(bad)
(bad)
(bad)
(bad)
js
pop
test
out
xchg
dec
push
inc
fild
jmp
jb
cmp
stos
jmp
daa
(bad)
(bad)
jg
xor
imul
adc
imul
cli
lahf
ins
(bad)
(bad)
(bad)
call
lahf
sbb
lahf
sub
leave
pushf
jmp
dec
ret
gs
or
dec
mov
sti
(bad)
(bad)
sbb
jmp
enter
fsub
and
xchg
cli
in
sti
(bad)
inc
sbb
pop
movs
add
pushf
leave
int3
inc
imul
je
jmp
call
mov
xchg
add
mov
pop
inc
fisubr
pop
xor
fimul
(bad)
(bad)
(bad)
fimul
pop
mov
sbb
sbb
mov
lds
aam
mov
dec
sbb
out
xchg
jg
(bad)
(bad)
call
(bad)
inc
pop
mov
jae
xor
sbb
add
cmp
shr
scas
push
pop
xchg
mov
pop
jno
retf
aaa
cs
mov
pop
xchg
jg
(bad)
inc
lahf
setle
xchg
mov
vhaddps
arpl
xchg
ds
addr16
(bad)
(bad)
inc
cmp
inc
clc
inc
scas
mov
pop
sti
popf
cmp
stos
inc
rol
cmps
cli
xor
movs
(bad)
fcomip
(bad)
fcom
es
adc
out
dec
cwde
idiv
inc
sub
add
(bad)
(bad)
jmp
fwait
test
sbb
xlat
inc
mov
cmp
fld
jp
xor
sbb
(bad)
(bad)
(bad)
jmp
aas
jnp
sbb
shr
xor
dec
out
es
iret
mov
stc
inc
jp
jbe
inc
std
xlat
sub
cmp
inc
clc
icebp
(bad)
(bad)
call
aad
sub
add
movs
mov
ds
sub
inc
loopne
cld
gs
(bad)
call
push
movs
mov
sbb
dec
cwde
loope
in
adc
pop
add
cld
dec
imul
out
outs
clc
(bad)
(bad)
call
sbb
pop
rcr
push
into
loope
inc
and
icebp
jo
call
adc
xor
adc
xchg
adc
sbb
xchg
(bad)
(bad)
out
add
jp
test
lock
pop
mov
scas
cli
cmp
mov
(bad)
push
int3
rcl
repnz
jno
and
(bad)
cdq
dec
jne
call
(bad)
call
and
clc
and
add
jnp
pop
ins
jne
(bad)
(bad)
inc
fchs
daa
ins
aaa
xchg
sbb
xchg
out
or
ret
sub
xchg
jmp
(bad)
(bad)
(bad)
inc
inc
push
and
sahf
xchg
cdq
cmp
xor
push
ins
cli
inc
(bad)
mov
xchg
imul
adc
push
add
daa
inc
adc
mov
clc
cmp
jmp
push
add
out
stos
mov
pop
(bad)
(bad)
(bad)
inc
ret
cmp
shl
sbb
daa
mov
mov
pop
jecxz
rol
push
dec
(bad)
(bad)
call
sbb
pop
scas
in
popa
das
arpl
ret
gs
test
or
or
push
push
sbb
mov
fst
leave
pop
les
mov
ja
sub
aas
adc
(bad)
(bad)
call
sub
fisttp
test
jno
repz
lock
sub
xchg
dec
push
and
aaa
sub
sar
xor
fidiv
mov
add
outs
mov
xor
outs
pop
out
addr16
(bad)
(bad)
call
stos
jle
int
into
sbb
or
movs
mov
mov
and
jmp
aaa
cld
cmp
lock
jns
pop
test
xchg
push
push
addr16
into
inc
adc
leave
sub
sar
(bad)
(bad)
inc
rcr
pop
xchg
push
mov
iret
retf
push
inc
mov
mov
xchg
adc
fist
in
push
sbb
jmp
test
mov
xchg
ja
loopne
adc
lods
(bad)
(bad)
dec
xchg
loopne
and
call
sbb
sahf
mov
pop
pop
in
mov
mov
(bad)
(bad)
push
mov
mov
sar
nop
mov
inc
clc
inc
sbb
das
je
data16
mov
jl
dec
pop
aaa
or
push
out
sbb
hlt
(bad)
cli
jno
and
out
sar
lds
xor
pop
jnp
mov
(bad)
inc
test
add
jnp
mov
daa
or
push
daa
(bad)
(bad)
(bad)
jmp
push
pop
cs
jl
vmwrite
addr16
mov
aas
mov
push
jb
jb
push
mov
ss
repnz
movs
mov
add
pop
jg
(bad)
(bad)
jmp
dec
stos
inc
cld
mov
repz
pop
and
sub
inc
mov
(bad)
(bad)
(bad)
(bad)
ficomp
aaa
jl
es
and
fstp
cmp
fist
pop
xor
dec
push
inc
(bad)
inc
mov
or
xor
add
out
and
or
push
outs
push
pop
adc
inc
mov
dec
xor
mov
(bad)
mov
mov
retf
pusha
popa
mov
das
sar
sbb
(bad)
xchg
(bad)
ss
cmp
das
aas
imul
sub
(bad)
(bad)
(bad)
(bad)
cmp
int
mul
rol
pop
cmp
out
cld
mov
sbb
cmps
rcr
(bad)
inc
xor
xor
xor
dec
(bad)
stos
cld
repz
push
xchg
lahf
lock
mov
(bad)
pop
fld
mov
mov
xchg
mov
pop
cld
add
xor
xor
movs
inc
xor
addr16
std
or
cld
std
xchg
cdq
popf
rcl
xor
ins
mov
and
clc
call
jecxz
stos
add
cmp
data16
mov
or
push
pop
pusha
out
add
jb
add
push
cld
(bad)
clc
(bad)
pop
jno
gs
jb
mov
push
pushf
jae
jo
sub
pop
imul
or
lods
fcmovne
std
aaa
sub
adc
pop
je
sbb
aam
das
mov
std
(bad)
call
mov
bound
lods
cdq
xor
add
(bad)
(bad)
(bad)
(bad)
in
lahf
js
ja
out
adc
test
inc
hlt
mov
push
popf
mov
pop
xor
movs
add
scas
mov
jge
icebp
mov
cli
mov
das
cli
(bad)
dec
or
mov
std
mov
repz
unpckhps
(bad)
(bad)
dec
or
scas
pop
retf
scas
xor
add
mov
imul
lds
call
leave
or
mov
not
push
jg
xor
mov
clc
push
pusha
fisub
cmps
jge
dec
pop
lods
add
mov
sub
fwait
mov
mov
ret
push
movs
(bad)
(bad)
(bad)
(bad)
cmp
jo
mov
inc
xor
add
mov
ins
mov
adc
fs
push
(bad)
fnsetpm(287
(bad)
scas
or
(bad)
push
(bad)
jo
cmp
push
ds
call
in
dec
movs
add
lea
jge
fnsave
sub
jmp
mov
sub
and
je
mov
ud0
(bad)
mov
call
push
test
and
push
ret
fist
mov
stos
outs
pop
sar
(bad)
(bad)
call
pop
xlat
movs
adc
push
call
ja
mov
dec
ins
cmp
(bad)
(bad)
(bad)
jg
sub
mov
push
test
xchg
lods
sahf
mov
xor
push
(bad)
(bad)
jmp
iret
push
retf
fdiv
add
rcl
push
pop
xchg
xor
cli
fisttp
cli
sbb
and
outs
ins
dec
es
(bad)
(bad)
in
sub
rcl
outs
sbb
and
in
stos
std
sub
push
(bad)
idiv
or
ret
out
mov
pop
mov
stos
lods
(bad)
out
mov
jmp
hlt
cwde
pop
(bad)
imul
add
mov
dec
scas
aam
lods
cmc
cmc
pop
mov
daa
cwde
rol
or
or
data16
(bad)
(bad)
jmp
mov
dec
dec
push
jl
xchg
idiv
(bad)
loop
call
(bad)
(bad)
(bad)
call
push
outs
daa
fldcw
mov
cwde
int
pop
push
call
pop
dec
test
(bad)
dec
adc
cdq
and
pop
mov
sbb
cmp
mul
(bad)
adc
sbb
movs
or
or
(bad)
fsub
(bad)
fcomip
call
fisttp
xchg
ins
push
icebp
jne
sub
mov
xlat
jmp
aaa
in
adc
pushf
jo
(bad)
(bad)
dec
pusha
mov
data16
mov
jns
jnp
fbstp
jge
jecxz
movs
icebp
jecxz
fcomip
jmp
bound
out
jp
in
jecxz
jle
dec
outs
fnstsw
mov
(bad)
(bad)
jmp
test
cdq
das
mov
repz
fs
xor
(bad)
(bad)
jmp
mov
(bad)
lds
ins
xchg
adc
inc
inc
fistp
and
mov
(bad)
inc
and
xchg
xchg
popa
cld
nop
mov
inc
mov
out
std
ds
lods
adc
das
sar
repz
fimul
loop
icebp
fdiv
inc
inc
(bad)
cdq
jno
and
add
idiv
retf
repnz
js
xchg
nop
(bad)
call
add
push
shr
xor
xor
xchg
retf
jge
adc
(bad)
(bad)
push
jmp
sti
adc
mov
cmp
mov
xchg
inc
sbb
(bad)
jle
and
int
mov
fcmovb
xor
or
mov
adc
(bad)
(bad)
jmp
fstp
xor
les
pushf
xor
dec
xor
mov
fadd
(bad)
call
push
scas
sbb
ins
and
adc
outs
cld
(bad)
(bad)
jmp
nop
xlat
js
mov
sub
mov
jg
prefetchw
xchg
loope
(bad)
mov
add
sbb
bound
fadd
call
pop
mov
inc
loopne
cmp
sub
push
and
add
outs
iret
sub
sub
dec
aas
xor
push
mov
cmp
pop
adc
(bad)
(bad)
jmp
jb
retf
jmp
sbb
jae
loop
mov
xor
xchg
(bad)
(bad)
(bad)
dec
mov
call
jbe
movs
fcom
out
pop
jae
push
hlt
pushf
mov
jg
and
(bad)
(bad)
call
pop
aad
push
pop
loopne
pop
imul
xor
out
stc
cmp
and
jb
push
ret
fcomip
(bad)
push
jle
mov
arpl
mov
rol
test
xor
xor
dec
sub
sti
arpl
mov
dec
mov
lods
sub
or
sbb
int3
sbb
adc
xor
sar
(bad)
(bad)
fcomip
fst
xor
bound
loop
mov
xor
in
arpl
mov
adc
dec
add
push
jecxz
aam
loop
call
(bad)
jg
(bad)
jns
push
daa
push
dec
add
mov
jg
dec
mov
fsubr
(bad)
(bad)
(bad)
call
sub
ins
or
push
or
add
jl
jbe
xchg
or
(bad)
jmp
xchg
arpl
cmc
scas
cld
outs
xlat
push
inc
in
cmp
arpl
dec
imul
(bad)
sbb
(bad)
inc
mov
out
dec
(bad)
mov
cmp
fs
jo
fwait
ja
pop
pop
dec
fiadd
mov
cmp
ins
movs
cld
test
push
inc
fmul
inc
mov
test
(bad)
mov
stc
push
fidivr
stc
leave
outs
pop
arpl
aaa
std
stos
es
mov
inc
xor
stc
stos
test
push
mov
or
push
sbb
jmp
out
fadd
aas
or
repz
(bad)
imul
sbb
mov
pop
cld
dec
stos
xchg
clc
add
and
jl
push
sub
add
(bad)
(bad)
(bad)
jmp
je
jbe
lea
pop
lds
nop
lds
imul
pop
cld
(bad)
(bad)
jmp
or
push
daa
in
pop
pop
cmps
and
jle
lock
push
or
bswap
pusha
gs
mov
adc
sbb
pop
pusha
add
and
ror
push
mov
ins
mov
jnp
sti
popf
pop
icebp
out
retf
and
nop
loope
es
add
(bad)
(bad)
jmp
(bad)
cmp
adc
stc
jb
not
or
hlt
movs
nop
or
mov
xchg
pop
or
outs
div
scas
into
mov
xchg
jns
test
call
aam
mov
lods
dec
adc
pop
(bad)
jbe
xchg
or
mov
(bad)
(bad)
(bad)
jmp
retf
and
fnsave
sbb
jmp
xor
mov
(bad)
(bad)
jmp
mov
call
add
xchg
dec
aaa
xor
xchg
push
push
jnp
add
lahf
repnz
out
xchg
call
xor
ins
(bad)
pop
jge
xor
test
imul
push
cmp
dec
or
fldcw
pop
sbb
outs
jbe
inc
imul
mov
adc
ins
(bad)
(bad)
(bad)
call
popf
mov
push
inc
pop
mov
icebp
imul
or
std
push
and
pop
dec
sub
(bad)
call
fwait
pop
inc
int3
add
mov
sub
cmps
stc
inc
or
adc
sub
(bad)
call
and
fild
cmp
fdivrp
cmc
pop
or
sbb
loopne
mov
(bad)
(bad)
call
pop
inc
loopne
enter
test
pop
add
mov
leave
call
dec
mov
add
inc
aaa
call
pop
mov
xor
pusha
(bad)
(bad)
jmp
repnz
adc
jge
(bad)
jns
mov
(bad)
(bad)
(bad)
jmp
iret
test
mov
cdq
addr16
inc
or
sbb
lods
les
and
test
jle
(bad)
mov
pop
bnd
call
mov
sub
out
jo
clc
imul
mov
mov
push
or
std
lahf
les
mov
adc
mov
(bad)
(bad)
in
popf
data16
nop
pop
sub
and
cmps
aad
ret
in
enter
je
pushf
(bad)
(bad)
(bad)
dec
cmps
cmp
test
fcmovb
out
aaa
pop
add
mov
(bad)
xchg
and
adc
(bad)
(bad)
jmp
mov
(bad)
and
aad
leave
mov
add
jmp
mov
(bad)
dec
pop
or
cmp
(bad)
lea
xor
ror
mov
add
adc
or
mov
dec
xor
sub
and
call
(bad)
cmp
scas
dec
jp
imul
adc
clc
(bad)
(bad)
call
and
outs
adc
jne
or
sbb
invd
adc
push
in
das
std
lods
inc
scas
mov
in
push
xor
faddp
inc
in
sub
(bad)
push
js
mov
shr
int3
lahf
imul
bound
jno
jmp
or
dec
sub
(bad)
jmp
push
dec
inc
sub
adc
aas
and
pop
jg
iret
es
(bad)
dec
test
add
int
and
add
js
fld1
call
jmp
xor
mov
inc
cdq
ret
fadd
fcom
push
es
(bad)
(bad)
jmp
data16
mov
je
cmps
inc
gs
jo
inc
jmp
add
(bad)
mov
push
sbb
push
jo
ret
add
or
or
jecxz
dec
pusha
mov
lahf
dec
div
mov
inc
fstp
(bad)
(bad)
cld
repz
into
inc
sbb
jns
std
in
jmp
mov
mov
call
dec
push
adc
adc
xchg
cmp
int3
das
mov
(bad)
(bad)
(bad)
dec
xchg
loope
jp
xchg
pop
inc
test
fchs
cmps
cmp
out
cmc
imul
dec
leave
(bad)
(bad)
(bad)
call
dec
fadd
cmps
lock
xchg
(bad)
lods
adc
or
pop
xor
(bad)
(bad)
mov
popf
lds
ins
pop
push
cmps
or
ret
inc
push
xchg
sub
mov
and
aad
jmp
out
mov
cmps
fst
cmp
sbb
jp
inc
jne
scas
nop
xor
push
cmp
cdq
fcomi
rol
xor
popf
push
cs
mov
scas
push
ficom
(bad)
stos
inc
xor
and
or
cmovge
xchg
movs
mov
(bad)
inc
hlt
jno
jl
stos
in
mov
dec
xchg
xchg
(bad)
sti
fistp
mov
(bad)
(bad)
(bad)
cmp
mov
cmp
jecxz
pop
out
xchg
add
and
pop
dec
mov
push
stc
and
jmp
cmps
out
cmp
(bad)
(bad)
(bad)
jmp
loop
adc
sub
pop
mov
mov
cdq
in
push
push
or
out
and
cmps
(bad)
push
inc
(bad)
fwait
jnp
shl
mov
inc
mov
or
xor
push
lock
jmp
jg
into
push
mov
movs
push
sahf
inc
into
cmps
inc
adc
pop
or
(bad)
mov
ja
call
adc
and
cwde
aam
and
or
or
fwait
mov
into
fcomp
movs
repnz
push
in
inc
rol
dec
addr16
aam
sub
inc
cmp
xchg
call
ss
cmps
mov
sub
pop
mov
movaps
stos
(bad)
aad
inc
(bad)
(bad)
(bad)
cmp
sbb
enter
retf
pop
aaa
mov
fcom
repnz
test
(bad)
inc
xchg
push
inc
mov
mov
ds
(bad)
jg
sbb
rcr
mov
cdq
ins
stos
jb
div
xlat
(bad)
dec
and
imul
out
mul
xor
sbb
push
call
(bad)
dec
(bad)
out
and
mov
(bad)
enter
xor
je
jge
movs
pop
xor
test
xchg
test
js
loop
pusha
pop
(bad)
(bad)
fist
or
cmp
jmp
and
test
jmp
cmp
fidivr
ss
(bad)
(bad)
jmp
sub
fidivr
adc
sbb
jae
ret
inc
js
loopne
ins
mov
test
iret
jmp
movs
push
push
out
jp
out
xchg
in
fld
sub
xor
aaa
mov
cmc
nop
push
ja
mov
pop
in
mov
(bad)
out
clc
jmp
loopne
jne
jg
aad
xor
inc
lock
push
mov
(bad)
(bad)
jmp
jmp
jmp
push
mov
sbb
pop
inc
and
mov
(bad)
mov
std
adc
stos
mov
iret
shl
mov
push
jmp
popa
sbb
icebp
fbstp
std
sbb
xchg
and
inc
cmc
js
scas
clc
call
cmp
shl
jbe
out
inc
mov
loop
inc
aas
popf
clc
out
mov
std
dec
cmp
mov
xchg
(bad)
(bad)
jg
push
pop
or
shl
inc
push
xchg
push
jp
pop
inc
aad
(bad)
into
out
aad
jmp
mov
addr16
inc
push
icebp
repz
sar
popa
in
jecxz
and
or
sahf
fsubr
xchg
sub
das
adc
stos
mov
inc
dec
bound
into
adc
call
cmc
sbb
mov
push
pop
sahf
popa
es
fst
aas
ret
(bad)
(bad)
mov
xor
fwait
jge
jns
outs
mov
pop
lock
pop
out
push
xor
(bad)
(bad)
call
repz
mov
test
stc
add
mov
jge
data16
nop
out
fcmovnbe
pop
mov
and
or
retf
dec
xor
rol
sbb
enter
push
cmp
mov
jb
sub
and
push
shl
cmp
jb
(bad)
(bad)
(bad)
jmp
xor
out
mov
mov
test
sub
ins
cmp
mov
(bad)
(bad)
push
add
xchg
leave
jo
(bad)
mov
pop
xchg
xor
jp
and
jne
adc
jmp
int3
mov
xchg
and
clc
sbb
(bad)
(bad)
(bad)
mov
adc
dec
push
xchg
push
addr16
sub
cs
repz
clc
(bad)
inc
aam
in
xlat
adc
xor
repz
mov
lahf
push
xchg
(bad)
(bad)
(bad)
dec
sbb
add
imul
inc
and
jecxz
dec
mov
retf
add
sbb
dec
(bad)
lea
(bad)
(bad)
call
adc
push
add
idiv
cmp
and
mov
popf
xchg
add
daa
imul
fld
xor
movs
mov
dec
pusha
add
stos
shl
shl
cmp
(bad)
(bad)
cmp
mov
sub
push
out
cmp
push
iret
cmc
test
mov
cld
jmp
jae
cmc
pop
into
ins
fs
cwde
lods
push
popf
pop
inc
xor
fwait
pop
lock
inc
lods
mov
adc
and
pop
ins
(bad)
(bad)
(bad)
dec
xchg
ja
ds
jecxz
pop
jmp
imul
jg
pop
or
push
inc
into
stos
mov
loopne
js
mov
inc
sbb
jnp
loop
push
or
jmp
(bad)
jbe
imul
add
ret
add
sub
gs
and
xchg
cmp
cmp
cmps
icebp
inc
and
and
(bad)
(bad)
cmp
dec
fdivr
and
jbe
lods
jnp
sub
jl
add
data16
(bad)
(bad)
call
mul
retf
mov
or
push
and
jle
sahf
push
or
(bad)
(bad)
call
jb
les
inc
cmp
cmp
(bad)
cld
pushf
fcomp
lds
cmp
inc
and
inc
jg
pop
loopne
cmp
pop
out
add
mov
and
dec
inc
jl
push
jecxz
dec
(bad)
add
add
leave
movs
imul
(bad)
(bad)
(bad)
fsubr
cmp
mov
clc
jb
in
clc
imul
jmp
sbb
xlat
sti
xchg
adc
stos
(bad)
(bad)
(bad)
(bad)
aas
pushf
sti
push
jne
std
mov
mov
movs
out
and
xchg
pop
fs
inc
inc
jecxz
and
(bad)
(bad)
dec
xor
data16
repz
call
inc
sbb
sub
cmp
(bad)
(bad)
(bad)
dec
add
dec
sbb
sahf
xor
int3
fidivr
out
push
mov
rcr
js
(bad)
call
lods
pusha
in
aam
xchg
das
into
cli
out
mul
sbb
push
mov
cmp
das
mov
and
stc
push
push
dec
push
cdq
cmp
jmp
pop
iret
aam
call
fiadd
cdq
sbb
xor
mov
jnp
(bad)
call
(bad)
xor
pop
cdq
mov
loop
sar
call
xchg
lea
jo
(bad)
(bad)
call
je
xchg
jecxz
xchg
out
repnz
lods
setno
push
dec
movs
mov
push
sbb
sar
popa
in
or
mov
scas
cmp
cwde
dec
sti
(bad)
(bad)
jmp
sub
jnp
push
push
sar
adc
not
aas
mov
pusha
pushf
push
jg
imul
push
sti
dec
movs
test
stos
or
in
bound
test
imul
mov
ret
mov
push
cmp
and
jmp
mov
stos
popf
stc
jp
adc
push
dec
xchg
mov
dec
lock
scas
movs
and
inc
les
mov
rol
leave
mov
adc
pop
fwait
sti
xchg
or
mov
movs
test
jno
inc
inc
retf
cmp
dec
call
call
mov
sbb
adc
dec
ins
popa
out
repz
(bad)
(bad)
(bad)
push
jl
inc
sar
mov
sub
add
or
cmp
ficomp
cwde
rcr
stc
(bad)
das
cli
xor
push
jge
(bad)
sahf
push
dec
add
add
neg
xchg
or
jp
(bad)
(bad)
(bad)
fist
call
pop
xor
xor
dec
ror
(bad)
dec
mov
jmp
or
(bad)
dec
rcr
(bad)
cmps
clc
xor
add
fsub
(bad)
(bad)
(bad)
inc
push
mov
sbb
cmp
int
outs
icebp
pop
pop
pop
push
pop
imul
add
jne
inc
dec
std
sub
out
jmp
data16
mov
(bad)
jmp
clc
and
les
out
inc
pushf
sbb
pop
dec
js
jne
xchg
(bad)
(bad)
(bad)
(bad)
frstor
ret
ins
sbb
fcmovne
fsub
dec
cdq
lods
adc
jg
mov
jno
cdq
call
(bad)
(bad)
inc
sub
clc
cmc
add
mov
iret
cmp
sub
and
xlat
xchg
mov
fcmovne
(bad)
(bad)
push
out
sbb
push
mov
in
push
xchg
gs
and
cmp
call
sbb
mov
(bad)
call
adc
dec
ret
movs
xchg
mov
stos
mov
xchg
pop
sbb
push
aas
call
add
(bad)
(bad)
jmp
and
xchg
inc
js
add
push
pop
lods
je
push
jp
cli
(bad)
(bad)
push
in
mov
xor
je
stos
int3
pop
pusha
jg
jg
jl
shr
push
and
dec
dec
scas
ins
dec
add
xor
inc
stos
sbb
fst
sbb
js
add
(bad)
(bad)
call
in
add
jecxz
pop
ins
loope
xor
inc
or
pop
add
push
(bad)
jmp
repnz
mov
pop
ins
add
inc
outs
aad
mov
pusha
sar
jmp
or
pop
sub
(bad)
mov
pop
push
enter
jmp
add
mov
or
jl
sahf
jmp
pop
aas
retf
es
jno
push
cwde
mov
xchg
(bad)
call
iret
dec
stc
ja
clc
jae
jo
push
xor
sub
sbb
pushf
jmp
sar
fiadd
fistp
pop
mov
test
(bad)
ds
mov
dec
imul
xchg
push
jmp
fucom
bound
mov
cli
call
mov
retf
and
bound
and
cmps
(bad)
(bad)
mov
jmp
dec
lea
call
jmp
or
std
call
jg
movs
test
mov
lods
jbe
push
mov
in
and
enter
sbb
push
adc
div
and
mov
movs
mov
jo
mov
neg
ss
(bad)
(bad)
jmp
call
arpl
cmp
(bad)
cmp
mov
add
mov
cmp
jnp
pop
repz
push
(bad)
lock
inc
cld
in
sti
dec
xor
clc
mov
or
call
(bad)
lahf
ja
shl
(bad)
(bad)
push
loope
loope
call
cdq
out
push
sbb
cmps
jmp
inc
call
dec
fisub
and
xchg
push
daa
mov
stos
xchg
fcomp
mov
dec
cmp
mov
jmp
fsubr
(bad)
fcomp
mov
pop
sub
jmp
unpckhps
arpl
mov
lock
sbb
pop
std
adc
out
pushf
dec
aad
icebp
or
je
call
cmc
jmp
(bad)
std
push
(bad)
or
pop
inc
mov
js
adc
mov
jne
mov
(bad)
inc
jp
mov
aad
ret
add
add
fcom
gs
(bad)
(bad)
clc
pop
push
jo
ret
and
aam
xchg
mov
(bad)
(bad)
jmp
repz
daa
mov
inc
movs
ficomp
stos
popf
nop
sub
aad
(bad)
(bad)
(bad)
jle
cdq
inc
inc
sub
adc
pop
nop
jge
clc
vcvttps2dq
mov
outs
xor
test
es
pop
leave
scas
pop
fdivrp
cmps
jg
ins
out
rcl
pop
shl
inc
dec
push
jbe
push
mov
icebp
call
(bad)
(bad)
jmp
jge
lea
neg
aam
scas
dec
call
mov
mov
mov
jb
(bad)
(bad)
jmp
repz
adc
mov
lods
ins
lock
adc
push
jo
mov
xchg
sub
(bad)
(bad)
dec
xchg
push
icebp
in
add
fadd
test
adc
inc
add
sti
sub
test
mov
call
int3
jecxz
popa
inc
sbb
mov
aad
lods
popf
loope
adc
(bad)
xor
(bad)
(bad)
call
das
(bad)
mov
mov
test
sbb
push
jge
js
push
and
pop
test
xlat
or
push
fwait
shl
or
pop
inc
pop
(bad)
(bad)
(bad)
(bad)
mov
push
ficom
or
pop
push
mov
loope
cmp
adc
pop
or
cs
cld
(bad)
(bad)
call
loopne
ficomp
(bad)
popa
sub
clc
mov
lahf
gs
or
ret
lock
add
(bad)
push
dec
sar
ds
push
inc
les
cwde
xchg
sub
ror
pop
mov
stos
es
sar
push
in
mov
push
sub
push
jle
jmp
es
sub
outs
idiv
sbb
lock
ds
(bad)
(bad)
call
push
iret
ficom
or
(bad)
lock
cs
outs
xor
mov
mov
or
push
je
add
in
mov
mov
dec
ja
jne
fwait
int
xchg
out
jg
ds
lahf
in
aad
fidivr
xlat
mov
ja
out
movs
mov
iret
fucomi
pop
leave
pop
push
pop
xchg
in
cmp
(bad)
(bad)
(bad)
(bad)
jg
fld
push
lock
enter
xchg
out
mov
push
ds
outs
dec
(bad)
(bad)
(bad)
call
cmp
push
repz
pushf
mov
xchg
mov
jo
sbb
add
jg
test
ret
dec
jae
xlat
loope
mov
lock
(bad)
(bad)
dec
push
jb
call
mov
int3
xchg
cmp
jns
(bad)
push
into
js
add
call
(bad)
(bad)
(bad)
call
lods
cwde
(bad)
bound
and
arpl
ret
icebp
lds
jbe
cdq
push
inc
sub
in
(bad)
(bad)
inc
imul
(bad)
sti
shl
loopne
add
sub
cmp
mov
mov
mov
(bad)
(bad)
dec
mov
arpl
addr16
xor
xchg
data16
ja
popf
or
push
pop
pop
or
mov
and
or
addr16
cmps
(bad)
(bad)
(bad)
call
icebp
int
scas
aaa
test
fs
iret
jle
push
js
ret
and
lock
(bad)
(bad)
call
or
aaa
mov
mov
in
cmps
repnz
mov
scas
fwait
aaa
mov
(bad)
(bad)
dec
fwait
scas
jo
dec
xor
int
outs
add
ins
cdq
jle
repnz
mov
add
sub
mov
shr
(bad)
(bad)
(bad)
jmp
out
push
jmp
pop
outs
stos
faddp
rol
mov
(bad)
cld
bound
dec
xor
add
(bad)
(bad)
jl
inc
mov
movs
(bad)
mov
out
push
ror
inc
and
dec
sahf
(bad)
jg
jg
retf
xchg
cdq
pop
adc
mov
je
push
cld
and
or
mov
push
(bad)
pop
sub
inc
int3
in
test
and
push
(bad)
inc
inc
stos
xor
data16
cli
sti
ret
add
sub
sub
mov
mov
(bad)
(bad)
(bad)
jg
pop
cld
adc
sar
cmps
sar
push
sbb
out
int
mov
adc
cmps
out
(bad)
(bad)
(bad)
dec
inc
and
retf
inc
mov
jg
add
out
jo
scas
or
sbb
call
ret
mov
sub
shr
sub
inc
hlt
pop
sbb
xor
mov
daa
inc
adc
mov
in
jno
fimul
xor
enter
cmp
dec
or
mov
mov
push
adc
rcl
dec
(bad)
(bad)
(bad)
(bad)
mov
stos
neg
inc
mov
lea
adc
add
in
push
mov
out
clc
(bad)
inc
shr
push
bound
push
mov
pusha
sar
(bad)
(bad)
call
lds
push
(bad)
mov
mov
inc
or
sbb
push
enter
cmc
xchg
(bad)
jmp
clc
mov
pop
jp
mov
sbb
stos
add
or
inc
aam
cs
std
(bad)
jg
test
aam
cmp
and
pop
or
inc
in
mov
mov
sbb
ret
cmps
data16
(bad)
xchg
jmp
sbb
stc
add
dec
mov
aad
jae
cmp
shl
jb
jnp
call
(bad)
(bad)
dec
inc
mov
push
pavgw
(bad)
sbb
dec
je
dec
shr
sahf
push
movs
or
jg
or
pop
(bad)
lds
push
call
out
pop
mov
cmps
push
test
(bad)
pop
std
ss
sar
add
add
pop
inc
pop
cmp
das
adc
(bad)
jnp
das
enter
test
jmp
fcmovnb
(bad)
(bad)
(bad)
push
and
jecxz
imul
pcmpgtd
cmps
pop
inc
rep
dec
pop
nop
cwde
push
inc
mov
dec
pop
jmp
popa
test
add
leave
pop
add
rcl
mov
inc
cmc
(bad)
(bad)
(bad)
(bad)
mov
add
lahf
push
inc
clc
and
sub
inc
jg
or
std
mov
(bad)
jmp
jns
aad
arpl
dec
(bad)
(bad)
(bad)
fild
xlat
sub
shl
add
stc
xchg
mov
xchg
push
adc
mov
jmp
rcr
add
sub
retf
scas
jbe
scas
lock
xlat
(bad)
(bad)
(bad)
push
out
push
(bad)
scas
sbb
dec
jp
lea
lahf
adc
pusha
jge
sub
push
mov
jp
(bad)
push
xchg
(bad)
(bad)
(bad)
call
nop
sbb
fld
out
fisttp
lods
test
adc
cmp
paddusw
(bad)
push
push
mov
push
dec
xor
mov
jns
sub
sbb
je
fnstenv
(bad)
(bad)
(bad)
jmp
test
and
inc
fs
jb
jge
pop
loopne
adc
xchg
lods
lods
sub
out
(bad)
call
mov
lock
rcl
aad
sahf
retf
out
out
das
scas
in
sub
fistp
aaa
mov
or
add
add
mov
test
(bad)
(bad)
(bad)
jmp
mov
and
jle
test
xchg
mov
jg
std
or
sub
call
or
cmp
data16
jle
stc
lock
fisttp
call
sti
test
or
hlt
mov
pop
dec
inc
mov
jnp
call
loopne
inc
pop
iret
in
addr16
dec
outs
jg
retf
mov
cmp
(bad)
js
xor
cmps
push
aam
(bad)
inc
dec
fdivr
int3
add
addr16
shr
fstp
xlat
jg
ja
loop
loope
xchg
stos
call
clc
out
mov
dec
out
int3
jecxz
js
cmp
mov
mov
mov
clc
add
(bad)
dec
(bad)
loope
idiv
outs
add
inc
scas
cmps
mov
popf
cmp
(bad)
jp
xor
push
inc
xor
inc
jmp
push
lea
or
(bad)
(bad)
push
js
icebp
iret
repz
pop
xchg
sub
mov
ud0
icebp
sub
loop
aad
(bad)
(bad)
(bad)
dec
in
xchg
xchg
fiadd
mov
scas
pop
mov
ins
out
adc
jns
(bad)
(bad)
push
xlat
xchg
jl
ins
xlat
aad
adc
test
stos
mov
popa
fcom
repnz
lods
(bad)
xor
(bad)
inc
push
jp
dec
inc
popa
gs
not
popf
push
mov
retf
adc
popf
(bad)
(bad)
(bad)
inc
imul
push
cmp
fstp
cmc
or
mov
inc
lds
cmp
inc
movs
lods
out
push
mov
cld
mov
arpl
mov
pusha
fwait
mov
(bad)
(bad)
mov
imul
sar
and
aam
js
fsubp
push
and
aam
aad
pop
aam
call
inc
cmps
xlat
scas
push
add
(bad)
mov
or
aad
cs
sbb
mov
mov
stos
ret
mov
(bad)
(bad)
(bad)
jmp
mov
add
jae
xor
jl
push
push
pop
inc
lea
and
movs
(bad)
(bad)
(bad)
call
or
leave
push
and
aad
pop
add
in
cli
das
jmp
loop
mov
cmp
clc
pop
pop
add
xchg
dec
adc
hlt
sahf
(bad)
(bad)
(bad)
jmp
pop
pop
push
inc
lock
shl
dec
stos
mov
and
lods
or
clc
int3
(bad)
(bad)
(bad)
push
sub
mov
mov
xchg
jmp
call
adc
(bad)
call
pop
dec
loope
jae
fld
push
jmp
stos
hlt
leave
jecxz
jns
mov
pop
(bad)
(bad)
(bad)
dec
mov
push
xor
dec
out
cmp
mov
mov
loope
sub
dec
int3
mov
sub
adc
jg
call
dec
cmp
mov
mov
sub
jbe
cli
(bad)
push
rol
lods
nop
sub
outs
shl
fcomp
out
(bad)
repnz
out
(bad)
(bad)
(bad)
push
or
repz
jp
loope
dec
cmp
mov
cmp
hlt
retf
jge
push
into
jle
or
aad
push
mov
mov
sub
aad
dec
push
outs
out
mov
ss
imul
sar
jmp
add
xor
sbb
jl
int3
cmp
mov
lock
(bad)
inc
fldenv
imul
iret
mov
or
push
movs
add
test
jns
(bad)
call
pop
xor
in
sar
je
mov
mov
inc
fcmovne
mov
inc
int3
push
aaa
ins
test
dec
add
cmp
fild
push
imul
jnp
aad
mov
mul
dec
repz
mov
inc
dec
fiadd
jae
xor
mov
jnp
loopne
clc
fwait
int3
scas
popa
push
stos
ret
pop
(bad)
(bad)
(bad)
inc
push
test
mov
mov
jmp
xchg
out
add
xor
retf
(bad)
(bad)
inc
fstp
frstor
icebp
inc
out
repnz
jecxz
dec
and
sub
cmp
movs
push
pop
call
mov
mov
movs
xor
pop
outs
rcr
(bad)
(bad)
(bad)
mov
mov
cmp
mov
nop
add
and
sahf
mov
call
and
call
loopne
jnp
adc
ds
(bad)
(bad)
dec
outs
mov
in
cmc
pop
mov
hlt
push
mov
int3
jl
cmovb
pop
dec
jmp
add
rcl
cmp
data16
out
jge
(bad)
(bad)
call
adc
(bad)
xchg
es
mov
jecxz
mov
push
in
js
(bad)
(bad)
call
lea
add
and
popf
(bad)
out
cmp
push
imul
push
(bad)
(bad)
(bad)
jg
mov
mov
push
pop
xchg
add
popa
adc
jmp
test
push
les
mov
dec
mov
push
ret
jns
mov
jmp
fst
push
xor
mov
das
es
mov
loopne
mov
mov
sbb
ins
mov
inc
aaa
inc
daa
mov
inc
(bad)
(bad)
out
mov
mov
ds
pop
mov
mov
cld
dec
dec
(bad)
(bad)
(bad)
(bad)
fisttp
sub
or
mov
ins
or
mov
int3
xor
call
(bad)
dec
js
push
in
push
inc
lods
xchg
cmps
aam
rol
iret
pop
(bad)
inc
pushf
icebp
xchg
sbb
push
shr
call
jb
xor
ret
enter
stos
lods
test
add
shl
jbe
sbb
jne
push
or
ror
sti
push
pusha
retf
fsub
inc
dec
jo
loope
mov
xchg
jmp
es
(bad)
(bad)
mov
mov
pop
aas
data16
lds
adc
test
popf
and
inc
xor
inc
stos
cmps
jb
pop
cmp
inc
lods
dec
sahf
jge
push
adc
jmp
and
ja
mov
mov
inc
int3
popa
aam
push
push
mov
pop
mov
call
push
loope
rcr
lahf
push
sar
ins
std
ds
(bad)
(bad)
jmp
xor
adc
enter
ret
or
bound
rcr
loopne
in
sbb
sbb
call
push
inc
and
sub
jmp
push
out
push
pop
outs
cmps
mov
iret
arpl
std
(bad)
(bad)
cmp
nop
sub
push
in
mov
fwait
xor
fwait
fs
jp
es
adc
out
(bad)
(bad)
(bad)
(bad)
fcom
push
int
hlt
mov
sub
(bad)
mov
lahf
dec
inc
test
pop
je
(bad)
mov
aam
pop
movs
mov
inc
xchg
xchg
inc
pop
fadd
es
(bad)
(bad)
stc
pusha
or
sub
call
push
xchg
call
test
pop
movs
(bad)
(bad)
(bad)
(bad)
inc
shl
adc
aas
lods
sbb
mov
xlat
dec
adc
loop
pop
fcomip
(bad)
loop
lea
jmp
ror
call
and
jmp
retf
(bad)
call
es
aam
xchg
or
pop
mov
xchg
aas
jnp
mov
add
adc
push
jb
aam
(bad)
(bad)
(bad)
call
push
xor
cmc
enter
fild
in
xor
aam
pop
(bad)
movs
push
xlat
mov
mov
loopne
sub
cmp
pop
repnz
add
pusha
xchg
fidivr
push
cmps
mov
cld
mov
ds
sahf
sti
ins
sbb
jle
push
retf
(bad)
(bad)
(bad)
(bad)
cli
dec
push
and
nop
sbb
movs
adc
scas
jne
js
mov
addr16
dec
retf
sub
and
dec
imul
mov
outs
clc
call
push
xchg
sub
inc
xor
sub
loopne
test
(bad)
cld
xchg
jmp
jmp
and
adc
jnp
(bad)
xchg
mov
pop
repnz
push
xor
out
dec
loope
push
sub
mov
sbb
sar
(bad)
(bad)
(bad)
call
jecxz
pusha
jl
mov
jg
sbb
rol
and
mov
(bad)
jmp
or
inc
mov
jnp
call
xchg
loop
adc
hlt
call
sub
mov
(bad)
loop
rcr
xchg
dec
ret
loopne
push
and
xor
leave
push
(bad)
mov
popf
cmp
mov
outs
nop
movs
pop
mov
jge
aas
push
arpl
loope
adc
ret
(bad)
(bad)
jmp
cmp
pop
cmps
aas
ins
fdiv
add
clc
dec
mov
xchg
sub
in
pop
and
imul
push
dec
pop
icebp
(bad)
jmp
fisttp
mov
pop
push
mov
inc
add
xor
les
(bad)
inc
shr
call
dec
lea
pop
mov
or
sbb
sub
jp
mov
mov
pop
repz
mov
cmp
repz
cmp
hlt
test
inc
rcl
repz
arpl
xchg
or
dec
aam
push
jmp
jmp
cmps
mov
daa
mov
pop
add
gs
pop
mov
dec
test
je
(bad)
(bad)
(bad)
(bad)
fsubr
repnz
jmp
mov
loop
fdiv
es
inc
cmp
push
(bad)
(bad)
(bad)
call
sti
repz
xor
mov
push
out
loopne
lds
cmp
dec
ins
mov
adc
jl
(bad)
jg
jb
push
lds
daa
cwde
mov
call
mov
adc
pop
mov
call
cmp
retf
test
mov
cmp
aad
hlt
out
jge
mov
(bad)
(bad)
(bad)
push
outs
popa
in
fistp
dec
lods
and
cmp
(bad)
mov
pushf
pop
bound
(bad)
(bad)
jmp
jle
xor
mov
retf
mov
mov
add
inc
jns
xchg
xor
and
mov
push
mov
aas
mov
xchg
sbb
ins
shl
jmp
std
dec
push
(bad)
mov
imul
movs
mov
push
rol
inc
call
mov
imul
adc
push
neg
(bad)
clc
cmc
(bad)
inc
loopne
pop
add
push
loope
data16
dec
aad
and
dec
mov
add
gs
ret
adc
inc
jecxz
or
push
dec
lock
dec
(bad)
jmp
adc
inc
call
jb
clc
sub
xchg
jg
(bad)
inc
fld
gs
test
pop
retf
push
xor
xchg
xchg
sub
dec
movs
outs
pop
sti
loopne
in
out
cli
repz
or
pop
call
(bad)
call
push
push
cli
cmps
or
scas
cmps
mov
imul
mov
out
test
rcl
(bad)
push
push
sar
adc
jge
push
repnz
imul
(bad)
(bad)
call
scas
sbb
shr
adc
xchg
mov
add
lods
or
xchg
shr
(bad)
(bad)
mov
xor
add
pop
push
sub
mov
mov
(bad)
(bad)
push
dec
test
bound
repz
es
test
das
ja
out
jg
(bad)
(bad)
(bad)
(bad)
jmp
aad
adc
jp
cmps
inc
pop
mov
jle
call
ds
mov
cmp
clc
push
(bad)
cmp
shl
sar
add
add
(bad)
(bad)
jmp
data16
push
in
fcmovb
sbb
or
jp
sub
sbb
loop
(bad)
dec
push
lahf
or
inc
or
into
int
iret
mov
ret
xor
(bad)
(bad)
(bad)
mov
ja
pusha
pop
loopne
je
lods
ins
mov
daa
iret
sub
xor
xchg
push
(bad)
(bad)
jmp
mov
into
add
aad
mov
sub
loope
sar
mov
mov
dec
mov
jecxz
shr
lock
or
dec
jae
rcr
or
pop
hlt
(bad)
inc
inc
rcr
cmp
ss
cmp
xchg
mov
(bad)
(bad)
push
stc
cmp
mov
push
sub
fdivr
shl
push
or
out
push
mov
pop
sbb
(bad)
(bad)
(bad)
call
push
inc
cwde
dec
out
add
lea
test
call
or
(bad)
(bad)
jmp
cmp
outs
stc
pop
inc
mov
or
pop
ins
xchg
inc
adc
mov
(bad)
cli
add
adc
sbb
cmp
jo
ja
imul
cmp
pop
push
data16
or
cdq
fist
aam
lods
iret
cdq
mov
cs
and
and
xchg
adc
push
push
dec
(bad)
jg
or
mov
mov
loopne
(bad)
xchg
je
lahf
js
icebp
(bad)
push
inc
ds
sub
pop
pop
mov
cmp
mov
fistp
pop
(bad)
(bad)
inc
push
sar
test
or
push
push
add
ror
out
(bad)
(bad)
(bad)
call
cld
daa
mov
xchg
scas
in
xchg
push
jg
iret
int3
adc
adc
(bad)
inc
shl
xor
jecxz
sahf
xor
push
push
xor
jns
in
(bad)
(bad)
jmp
push
xchg
dec
repnz
mul
scas
mov
(bad)
lock
mov
(bad)
sub
mov
pop
retf
sar
pop
xor
out
push
out
mov
(bad)
mov
push
ins
dec
lods
cmp
cmp
sbb
xor
xlat
(bad)
(bad)
push
jo
sbb
add
mov
and
mov
mov
cli
jg
and
dec
rcl
jae
xor
jns
xchg
loop
repnz
scas
scas
into
jno
(bad)
call
xor
push
push
mov
inc
push
and
push
aad
imul
call
stc
arpl
mov
adc
jbe
cmp
(bad)
call
ret
imul
mov
int
loop
jp
add
(bad)
inc
mov
(bad)
out
fucompp
sbb
shl
cmp
add
jmp
movs
ficom
sti
daa
pop
mov
imul
mov
int3
lahf
push
mov
mov
push
dec
shl
cdq
push
lods
bound
cmc
push
dec
test
mov
or
adc
add
or
(bad)
(bad)
dec
or
mov
leave
adc
ja
leave
bnd
jns
xchg
enter
idiv
(bad)
(bad)
jmp
daa
into
jae
mov
sbb
or
inc
mov
push
repnz
scas
pusha
neg
dec
cwde
dec
sahf
rcl
mov
stc
push
jmp
or
mov
mov
adc
(bad)
(bad)
(bad)
(bad)
jle
sti
lahf
inc
data16
inc
pop
adc
adc
add
mov
dec
sar
inc
(bad)
out
mov
arpl
lahf
mov
cld
(bad)
push
dec
push
adc
(bad)
inc
add
lea
dec
mov
mov
xchg
jecxz
xor
pusha
shl
fld
mov
lea
jecxz
add
(bad)
(bad)
(bad)
call
(bad)
enter
cmp
(bad)
pop
(bad)
movs
in
dec
pop
aad
stc
adc
(bad)
(bad)
(bad)
jmp
jg
test
psrlw
shl
cli
arpl
movs
in
inc
ficomp
mov
xchg
(bad)
cmp
cli
and
retf
dec
or
ss
bound
cmps
js
xchg
sbb
jmp
cli
test
lds
lods
mov
mov
ja
repz
mov
push
(bad)
push
fmul
aam
clc
test
into
adc
xchg
cdq
sbb
ins
leave
pop
pop
pusha
add
inc
cld
fisttp
shl
in
ret
jns
mov
push
(bad)
call
test
mov
cmps
mov
(bad)
add
adc
ins
sbb
lahf
xchg
bound
add
sbb
sbb
fidivr
pop
add
cld
mov
inc
(bad)
gs
ret
iret
aad
push
movs
adc
(bad)
(bad)
(bad)
inc
sbb
dec
test
scas
xlat
jmp
inc
sbb
jg
dec
mov
stos
mov
push
mov
xchg
mov
push
push
int3
ins
test
scas
clc
cmps
daa
push
gs
(bad)
(bad)
(bad)
call
out
adc
pop
jmp
jg
sti
add
mov
popa
push
pop
ds
pop
lods
dec
(bad)
(bad)
jmp
push
add
out
pop
dec
mov
push
sahf
mov
in
enter
mov
pop
xchg
es
sbb
cmps
jmp
pop
call
adc
ror
mov
mov
mov
dec
hlt
push
(bad)
aaa
pop
pop
push
sar
sub
push
add
and
das
mov
js
pop
xor
push
mov
call
(bad)
(bad)
(bad)
(bad)
jp
inc
scas
popf
adc
std
outs
push
fwait
shr
xor
jbe
cmp
jae
das
sbb
in
hlt
xlat
(bad)
(bad)
inc
test
xor
(bad)
mov
ds
mov
outs
or
mov
pushf
(bad)
(bad)
push
hlt
fwait
pop
cmp
inc
pusha
push
cli
sbb
aaa
lds
and
retf
mov
jmp
pop
cdq
push
(bad)
jle
shr
nop
rcr
adc
inc
dec
add
adc
cli
(bad)
(bad)
mov
sahf
inc
or
clc
lahf
ins
xor
sub
in
sub
mov
clc
jae
pop
jmp
stos
cmps
pusha
rcr
fild
inc
inc
dec
cwde
fidiv
dec
clc
std
adc
sbb
shr
test
(bad)
(bad)
(bad)
dec
xchg
xor
dec
adc
xchg
cwde
adc
(bad)
(bad)
jmp
cld
aas
xchg
add
je
out
xlat
rol
outs
sbb
pop
lds
(bad)
call
jmp
sti
arpl
adc
pushf
(bad)
(bad)
jmp
(bad)
movs
je
xlat
pop
or
jmp
fnsave
mov
sbb
cli
inc
pop
mov
(bad)
(bad)
(bad)
dec
mov
pop
and
inc
pop
sbb
in
and
add
pop
jnp
jns
(bad)
sbb
inc
std
inc
fstp
jl
ds
lods
pop
mov
xchg
push
push
aas
push
(bad)
(bad)
call
movs
adc
es
repz
jge
jmp
sbb
sbb
pusha
pop
jg
(bad)
dec
pop
outs
mov
pop
rcr
pop
or
popa
fs
pop
ret
cmp
push
dec
(bad)
(bad)
(bad)
jmp
ins
pop
js
xor
addr16
dec
sti
sahf
mov
int
add
cwde
adc
(bad)
(bad)
(bad)
cmp
in
mov
inc
mov
sahf
or
cs
bound
(bad)
call
inc
repz
enter
in
mov
icebp
pop
addr16
test
ret
(bad)
(bad)
(bad)
jmp
cmc
(bad)
movs
dec
jp
inc
jbe
lods
cmps
jmp
jmp
int3
sbb
mov
mov
mov
(bad)
(bad)
fild
inc
test
cdq
out
sub
test
ins
xor
xor
sub
call
loope
gs
xor
and
ins
cmp
jecxz
test
hlt
data16
(bad)
(bad)
jg
mov
sub
jmp
mov
pop
jae
jno
jl
push
pop
adc
pop
jge
(bad)
(bad)
push
push
(bad)
dec
ret
push
sahf
pop
cmp
or
sbb
ss
or
sbb
adc
(bad)
(bad)
(bad)
dec
add
push
loopne
and
cmps
mov
sub
and
sub
pop
cmps
fist
sbb
xchg
(bad)
(bad)
(bad)
push
out
(bad)
retf
pop
push
add
xchg
aad
std
retf
into
push
push
je
adc
pop
(bad)
xor
(bad)
(bad)
dec
or
in
jbe
cmp
jmp
pop
add
xor
cmp
adc
(bad)
(bad)
jg
push
pop
gs
imul
dec
jp
test
movs
jno
lahf
sbb
(bad)
push
cld
add
pop
push
inc
push
dec
mov
dec
or
cwde
jmp
adc
add
stos
(bad)
(bad)
(bad)
call
pop
shr
add
add
mov
retf
les
and
dec
jmp
lock
(bad)
(bad)
dec
cmps
js
mov
aam
(bad)
mov
out
stc
scas
icebp
sbb
add
cdq
into
add
lahf
int3
mov
(bad)
(bad)
call
add
sar
arpl
loop
repz
pop
xlat
mov
popa
les
lods
fmul
jecxz
xchg
in
std
(bad)
inc
cmp
loope
cmp
mov
jmp
(bad)
jmp
mov
add
mov
loop
lods
repz
ins
inc
fidiv
and
sbb
and
loope
ja
cdq
shl
sub
gs
(bad)
(bad)
(bad)
dec
in
add
cli
lea
or
(bad)
int
ror
loopne
mov
fmul
or
sbb
xchg
(bad)
cli
(bad)
(bad)
(bad)
cld
jmp
dec
mov
sbb
inc
push
cmp
dec
pop
adc
(bad)
jmp
mov
mov
mov
(bad)
scas
mov
(bad)
and
adc
leave
fld
adc
(bad)
(bad)
inc
push
lods
add
jae
fisttp
xchg
adc
or
sub
inc
sbb
adc
mov
fs
xchg
adc
push
push
fiadd
test
(bad)
jmp
adc
daa
inc
aam
aaa
inc
idiv
inc
loop
js
repnz
sti
int
clc
(bad)
(bad)
(bad)
call
fs
pop
sti
xor
(bad)
int
jmp
(bad)
cmps
pop
clc
icebp
gs
push
pop
and
fisttp
sub
jmp
jmp
cmps
sbb
sbb
(bad)
(bad)
(bad)
inc
(bad)
jl
inc
add
jae
xchg
adc
adc
mov
scas
pop
or
sbb
(bad)
(bad)
in
into
jge
mov
cs
imul
shl
repnz
out
add
(bad)
mov
mov
orps
sbb
jae
xor
jle
cs
mov
popa
popa
(bad)
jg
(bad)
jge
jnp
fisubr
inc
jl
push
lods
test
retf
mov
xchg
sar
dec
scas
and
lds
in
ret
std
push
pop
stc
and
dec
xchg
clc
adc
movs
mov
enter
call
add
mov
sub
imul
add
xchg
sbb
(bad)
(bad)
(bad)
jmp
inc
jnp
dec
outs
dec
cmp
sti
mov
sub
mov
cmc
or
cld
ins
test
or
ss
mov
fcomp
(bad)
mov
dec
add
int
mov
jne
fild
call
in
mov
mov
in
mov
add
(bad)
(bad)
jmp
movs
mov
sbb
cmp
mov
push
sub
fdivr
(bad)
(bad)
(bad)
ds
or
popa
xor
adc
mov
cld
sub
in
cwde
test
shl
and
push
std
(bad)
jmp
ret
jg
xlat
inc
and
inc
fwait
in
ja
pop
mov
ins
(bad)
(bad)
(bad)
inc
(bad)
jmp
ret
dec
or
adc
rol
or
add
(bad)
mov
mov
mov
dec
push
and
test
cmps
out
aad
inc
pushf
add
rep
push
ss
sbb
retf
mov
mov
jl
mov
mov
mov
ds
jg
sbb
xor
cmp
test
(bad)
or
mov
nop
fcomip
(bad)
(bad)
call
xchg
inc
imul
push
add
cmp
mov
jg
aad
fdiv
xchg
loopne
sbb
cdq
jb
dec
push
inc
add
pop
std
call
xchg
and
test
sahf
cmp
add
jmp
mov
lahf
dec
adc
in
jg
xchg
or
imul
(bad)
(bad)
push
jne
jp
mov
jle
les
fimul
(bad)
arpl
mov
pop
cld
(bad)
(bad)
jmp
cmp
sbb
call
gs
and
dec
cmp
sub
(bad)
inc
test
dec
inc
loopne
mov
lahf
xor
mov
sub
add
cmps
in
(bad)
(bad)
inc
popf
ds
pop
mov
leave
push
jmp
jl
ror
push
mov
arpl
mov
(bad)
(bad)
push
loopne
mov
cli
inc
outs
jmp
mov
cmp
(bad)
(bad)
jmp
int
sbb
ds
cli
stos
mov
(bad)
test
xchg
jns
(bad)
adc
sbb
scas
adc
push
sar
cli
(bad)
(bad)
(bad)
fist
xlat
add
adc
(bad)
pop
add
jmp
add
cmp
cmp
jmp
adc
aas
and
cmp
fwait
rcl
mov
sbb
jae
(bad)
(bad)
dec
sub
jg
sti
inc
mov
into
push
ds
xchg
iret
inc
lods
inc
sbb
(bad)
(bad)
(bad)
jmp
movs
fcom
lahf
iret
cmp
cld
cmp
mov
sub
mov
push
imul
(bad)
dec
ins
mov
mov
mov
arpl
pop
xchg
call
adc
(bad)
(bad)
(bad)
jmp
in
mov
in
pop
cmp
push
xor
cli
dec
int
int3
mov
jmp
xor
(bad)
inc
adc
or
add
(bad)
into
lods
pop
loop
rcr
hlt
mov
mov
out
ins
and
cld
(bad)
(bad)
call
push
aam
jae
push
inc
or
jl
in
ss
push
ss
push
cli
pop
push
sbb
ins
dec
inc
xor
call
sbb
jbe
inc
xchg
jmp
(bad)
(bad)
dec
mov
jno
sub
jae
fisttp
sti
out
jg
push
xor
mov
sbb
jbe
mov
pusha
imul
mov
sub
(bad)
fcomip
out
jecxz
retf
(bad)
scas
aaa
mov
or
jp
jl
mov
(bad)
(bad)
call
jl
ja
dec
dec
xlat
xchg
add
sbb
inc
ds
cmp
sub
adc
xor
shl
adc
(bad)
(bad)
call
xor
loop
or
push
xchg
add
mov
ins
add
push
clc
adc
fsubp
cmp
nop
clc
push
gs
sub
mov
xlat
dec
(bad)
int3
(bad)
mov
lods
icebp
fstp
add
cdq
inc
mov
pop
fnstsw
stc
dec
ins
mov
jmp
je
add
push
ret
retf
xchg
inc
cdq
dec
sbb
imul
and
jle
(bad)
(bad)
jg
stos
pcmpgtb
pop
xor
pop
xor
ds
inc
xor
xor
pop
call
in
fldcw
and
xor
das
mov
fwait
retf
mov
jmp
clc
fwait
and
cmp
mov
push
mov
mov
sahf
mov
cmps
cwde
xchg
repnz
ret
(bad)
(bad)
(bad)
dec
mov
repnz
lahf
scas
gs
in
rol
pop
jb
inc
cld
cli
cmp
sub
xchg
stos
sub
sub
clc
jp
cmp
fldenv
into
push
xor
shr
xchg
scas
dec
dec
sub
push
repz
or
push
and
or
(bad)
call
ret
mul
daa
mov
scas
pop
sbb
fidivr
jne
cmps
sbb
sbb
push
leave
mov
(bad)
(bad)
jmp
mov
mov
jle
jo
icebp
xchg
pop
or
inc
aam
dec
jmp
pusha
jmp
and
sub
in
xchg
(bad)
(bad)
(bad)
jmp
mov
not
pop
sbb
push
in
daa
or
loopne
jp
jp
(bad)
(bad)
jg
inc
shl
shr
rol
stos
jbe
or
inc
or
push
mov
inc
sbb
sub
repz
(bad)
(bad)
(bad)
(bad)
mov
aad
xchg
push
jbe
cmp
fld
in
push
lods
pop
in
push
dec
ss
(bad)
(bad)
(bad)
call
out
clc
add
cmp
out
xchg
cmps
(bad)
movs
adc
cmp
inc
fild
jae
nop
mov
cmps
stos
sbb
call
rol
xchg
add
jb
add
pop
inc
dec
inc
mov
imul
xchg
sub
popa
rol
loopne
ja
popf
jb
std
sbb
push
in
jecxz
sub
push
mov
icebp
mov
(bad)
fcomip
fcom
das
lods
mov
dec
sub
iret
mov
(bad)
cmp
imul
jmp
or
stc
jae
loop
mov
jmp
sbb
and
(bad)
dec
dec
test
(bad)
test
shr
loopne
add
in
xor
std
inc
mov
shl
adc
retf
(bad)
mov
pop
and
pop
bound
mov
or
push
sub
mov
jg
gs
xchg
in
mov
jmp
lock
mov
cmp
fs
test
mov
push
ja
(bad)
(bad)
mov
push
std
sahf
xchg
test
add
outs
fcomp
push
or
outs
mov
(bad)
fcomip
call
ds
enter
mov
jg
pop
mov
jns
daa
sbb
(bad)
cmps
dec
lods
jg
cmp
movs
mov
clc
(bad)
(bad)
jmp
add
mov
dec
xchg
outs
jns
pushf
pop
inc
add
call
inc
aaa
add
or
retf
fdivr
or
lock
mov
xchg
int
mov
jno
(bad)
xchg
xchg
mov
(bad)
call
adc
add
push
dec
mov
jl
mov
push
mov
add
(bad)
(bad)
jmp
jnp
loop
jmp
lods
jp
pop
cmp
or
loop
cdq
rol
(bad)
dec
sub
(bad)
jmp
rol
das
into
fwait
xchg
retf
xor
jns
add
mov
sub
dec
int3
and
(bad)
inc
int3
sub
and
test
mov
xchg
adc
push
mov
pop
inc
cmp
xlat
push
shl
lahf
sub
add
loope
(bad)
(bad)
(bad)
(bad)
call
(bad)
sbb
pop
lds
mov
daa
jb
sub
lock
dec
es
mov
(bad)
(bad)
(bad)
jmp
mov
mov
pop
mov
pop
cld
ins
iret
lock
mov
add
xchg
ret
xchg
adc
(bad)
(bad)
inc
xchg
inc
jp
clc
fcmovbe
out
push
repnz
adc
repz
clc
or
and
dec
add
cmp
fwait
icebp
gs
mov
test
aam
cli
(bad)
jg
cmps
jmp
iret
sbb
push
ss
jmp
xchg
mov
cmp
(bad)
jnp
fnstcw
shr
test
aam
movs
inc
push
and
xchg
fwait
sti
jne
fcmovne
and
mov
sub
imul
sub
xor
mov
cmp
and
xor
ret
test
add
adc
mov
(bad)
call
pushf
fild
xor
test
cwde
push
xchg
loope
out
jmp
ficom
cld
jmp
jnp
pop
jne
and
ret
scas
ss
dec
sub
mov
adc
call
jbe
or
and
clc
pop
xchg
push
std
(bad)
fidivr
cld
(bad)
xlat
xchg
stos
dec
mov
leave
mov
fld
push
cld
jg
inc
addr16
ret
loopne
mov
pushf
repnz
repnz
mov
mul
test
push
lods
hlt
je
xchg
(bad)
(bad)
inc
not
mov
jo
aam
xchg
jg
dec
out
mov
movs
mov
fdiv
retf
xchg
fstp
enter
arpl
xor
iret
sbb
inc
test
(bad)
mov
xchg
lods
ds
xchg
sub
xchg
div
sub
in
sbb
cmc
inc
mov
test
movs
mov
cli
fbld
sub
popf
cld
pop
mov
std
jo
fs
(bad)
(bad)
call
xor
test
call
loope
inc
xchg
je
aam
sbb
sar
inc
mov
jne
icebp
in
(bad)
(bad)
(bad)
jmp
icebp
movs
mov
inc
mov
int
pop
cs
mov
lods
push
jne
push
inc
(bad)
stc
je
xor
call
cmps
sub
into
imul
rcl
enter
sbb
(bad)
(bad)
push
daa
sub
out
jae
cmp
das
xchg
call
mov
(bad)
(bad)
jg
data16
sbb
dec
or
scas
add
and
fld
lods
jo
(bad)
(bad)
call
fs
push
retf
mov
ins
or
jmp
mov
cld
ret
das
sub
add
call
fisttp
ins
adc
js
ret
jl
test
xchg
mov
lock
ret
fcomip
(bad)
push
xchg
sbb
cmps
sub
mov
and
mov
mov
sbb
(bad)
mul
push
outs
ins
(bad)
cs
lea
fdivr
jne
sbb
mov
(bad)
(bad)
(bad)
jmp
mov
test
hlt
shl
mov
jmp
das
xchg
and
(bad)
(bad)
(bad)
jmp
sbb
aad
mov
fsubr
out
mov
mul
ins
sahf
les
or
(bad)
(bad)
(bad)
jl
repz
xor
pop
dec
cli
ins
or
iret
mov
pop
int
dec
sbb
or
jmp
inc
scas
or
inc
dec
push
dec
sub
cli
(bad)
(bad)
(bad)
inc
adc
test
fstp
iret
jl
imul
xchg
inc
fild
fwait
(bad)
inc
sbb
inc
aad
inc
ins
push
pop
mov
jb
cli
pop
outs
sub
jg
(bad)
mov
push
lahf
xor
xchg
rcr
mov
fs
mov
mov
add
pop
dec
pop
call
in
dec
hlt
nop
sub
into
std
cmp
(bad)
(bad)
jmp
and
and
mov
hlt
mov
popa
rol
(bad)
(bad)
(bad)
(bad)
mov
mov
shr
push
mov
ret
(bad)
call
jmp
push
add
adc
mov
call
(bad)
mov
clc
sub
fst
jp
mov
fsubr
mov
jbe
test
jg
dec
dec
in
or
ror
aaa
into
jg
add
add
sbb
mov
lahf
pusha
imul
outs
dec
out
outs
cmp
fisttp
das
mov
mov
test
push
std
mov
dec
sbb
outs
sub
dec
(bad)
dec
and
pop
push
int3
sti
popa
add
(bad)
(bad)
(bad)
(bad)
jmp
lock
jp
inc
in
lds
js
fidiv
fistp
mov
push
push
mov
sub
shrd
call
inc
in
jmp
adc
push
loopne
ins
cld
into
out
mov
int3
and
dec
jae
push
(bad)
(bad)
(bad)
call
not
fdivp
(bad)
add
fadd
leave
mov
outs
sbb
cld
push
push
sbb
hlt
push
sub
stc
jo
dec
adc
retf
fwait
(bad)
call
jmp
jge
push
das
repz
jmp
iret
js
(bad)
(bad)
(bad)
call
lds
jns
loop
jnp
fdiv
xchg
jg
mov
retf
pop
out
jge
mov
retf
fs
es
call
xor
push
popf
movs
mov
(bad)
(bad)
jmp
adc
test
jmp
shr
sub
mul
mov
adc
test
stc
(bad)
(bad)
in
call
or
dec
add
jb
inc
dec
test
(bad)
sar
nop
and
fnstcw
(bad)
jmp
cmp
push
out
sub
dec
loop
mov
dec
out
(bad)
jmp
leave
(bad)
mov
mov
cmps
xchg
sub
push
push
adc
les
inc
(bad)
call
nop
inc
(bad)
in
mov
nop
inc
retf
dec
mov
mov
fwait
and
pop
(bad)
(bad)
(bad)
jmp
scas
push
jo
add
cmp
pop
cdq
sar
loop
mov
idiv
xchg
movs
jnp
(bad)
sub
(bad)
(bad)
call
sub
(bad)
fdivr
mov
or
jge
call
call
inc
(bad)
(bad)
(bad)
jmp
icebp
sti
scas
fprem1
iret
sti
mov
popf
fdivr
mov
ins
cli
ficom
mov
into
pop
aad
ret
(bad)
(bad)
jg
sahf
ja
pop
pop
lock
cld
xchg
cs
aas
xchg
push
add
stos
(bad)
call
inc
cmp
jl
xchg
mov
fisttp
out
enter
mov
mov
(bad)
(bad)
(bad)
dec
out
push
test
lds
dec
leave
fidiv
dec
xlat
sbb
scas
cmp
mov
push
inc
dec
stc
jmp
or
sbb
into
push
ficomp
ret
push
ftst
xchg
(bad)
(bad)
call
inc
jle
jmp
mov
stc
movs
lods
push
pop
imul
(bad)
mov
clc
(bad)
pop
cmp
push
outs
sahf
pop
sub
xchg
dec
les
xchg
fistp
std
push
(bad)
call
int3
jmp
mov
pop
jnp
adc
int
hlt
mov
jg
mov
lods
push
mov
adc
ror
popf
int3
mov
ja
test
mov
xor
jmp
dec
xchg
add
ja
mov
xchg
xor
or
nop
mov
not
leave
clc
sbb
cmps
sbb
inc
or
pusha
(bad)
(bad)
call
dec
push
sti
add
rcr
ficomp
mov
icebp
xor
dec
imul
ficom
xchg
sub
scas
call
pusha
add
jge
(bad)
ds
(bad)
sti
and
jl
jmp
cli
mov
ins
(bad)
mov
pop
in
jns
xchg
data16
xor
mov
add
std
jmp
jns
and
dec
sbb
pusha
fidivr
lods
cmp
mov
cwde
(bad)
or
fsub
or
sbb
sti
enter
jb
dec
outs
push
mov
push
sahf
xchg
adc
in
rcr
and
cmps
mov
mov
jbe
and
jno
dec
gs
(bad)
jmp
push
mov
xchg
push
inc
(bad)
xor
push
rcr
pop
add
sub
sahf
(bad)
(bad)
(bad)
(bad)
mov
ss
lahf
or
jns
mov
test
retf
xor
sub
inc
cwde
jle
inc
stos
(bad)
(bad)
call
add
sub
data16
dec
jmp
fsubr
pop
les
stc
mov
clc
(bad)
(bad)
push
loop
data16
fucomip
das
add
dec
lods
fmul
adc
mov
mov
sub
(bad)
jmp
aam
jg
pop
mov
cli
adc
mov
mov
jl
mov
jo
ret
sbb
(bad)
jg
xchg
cwde
xchg
gs
pop
dec
out
sub
sti
stos
retf
jbe
icebp
shr
pop
fidiv
stc
xor
cmp
pop
in
sahf
mov
dec
mov
and
push
(bad)
(bad)
mov
jbe
push
fwait
push
jmp
jo
jmp
mov
jg
jmp
data16
mov
fimul
add
call
int3
jbe
int3
xchg
lods
(bad)
(bad)
(bad)
mov
mov
mov
popf
add
loope
adc
(bad)
std
or
(bad)
(bad)
(bad)
inc
inc
inc
jmp
adc
cmc
pop
retf
mov
cmps
sbb
fistp
or
call
bound
shl
jns
add
loop
fbld
push
xchg
mov
xchg
dec
imul
hlt
retf
mov
xor
xchg
xor
adc
test
pop
sub
inc
sar
dec
sub
(bad)
lahf
push
paddusb
(bad)
(bad)
(bad)
mov
pop
mov
sub
inc
adc
hlt
mov
cli
or
into
xor
(bad)
jmp
push
dec
cdq
jl
lea
dec
int
adc
mov
(bad)
push
fidivr
hlt
jg
ja
adc
cli
out
fucomip
ret
add
sub
gs
out
test
out
cli
inc
rol
mov
cdq
out
int3
xchg
or
sub
fisub
loopne
jg
(bad)
dec
ret
jno
fwait
movs
sahf
fnstcw
jmp
mov
push
push
cli
dec
sub
das
jnp
test
loop
(bad)
(bad)
jmp
push
or
out
les
repnz
xchg
(bad)
fst
and
(bad)
mov
mov
dec
imul
cmp
sbb
std
das
into
mov
pop
(bad)
jb
mov
pop
(bad)
(bad)
(bad)
dec
std
cld
dec
ret
mov
push
icebp
test
jbe
mov
js
sbb
(bad)
jmp
inc
(bad)
fild
sub
lock
pop
bound
dec
jg
dec
cmc
sbb
popa
fistp
fdivr
mov
add
adc
(bad)
(bad)
jmp
cmp
pop
dec
xor
jnp
test
addr16
ret
add
mov
lods
cmp
(bad)
(bad)
(bad)
fstp
int3
leave
xor
xchg
ret
ret
retf
jmp
loop
jge
jo
jae
sub
mov
jle
(bad)
mov
pop
fsub
(bad)
(bad)
(bad)
jmp
xlat
loop
out
out
dec
dec
leave
inc
(bad)
fnstcw
xor
xor
inc
sahf
out
(bad)
(bad)
(bad)
jl
xchg
push
stos
dec
(bad)
call
lock
and
pop
test
mov
(bad)
mov
pop
or
dec
lods
(bad)
push
out
(bad)
daa
stos
(bad)
mov
repnz
jne
or
inc
lods
pusha
test
sub
mov
cli
test
jmp
shl
xor
pusha
sbb
push
into
sahf
and
outs
js
xor
inc
neg
shr
retf
test
mov
add
sub
loopne
xchg
and
stc
sub
push
fwait
(bad)
inc
bound
dec
loop
dec
cmp
std
leave
in
fucomip
hlt
jmp
out
mov
out
scas
or
popa
fwait
rcr
cli
adc
(bad)
(bad)
fbld
lds
scas
fbld
retf
imul
sbb
test
out
mov
in
pop
dec
cmps
cmp
sub
cmps
ret
jp
and
adc
stos
inc
xor
iret
call
push
inc
dec
je
push
dec
fcmovnu
repz
and
cdq
sub
nop
xchg
push
push
jbe
add
rcl
sbb
and
call
hlt
cdq
inc
xor
iret
inc
jp
(bad)
pop
or
xchg
mov
idiv
dec
push
push
cdq
iret
aaa
and
or
jmp
rcr
shr
in
cmps
mov
sbb
aad
mov
(bad)
(bad)
fchs
inc
cmp
into
add
ins
push
fistp
js
mov
(bad)
(bad)
(bad)
stc
data16
dec
pop
cmp
fadd
lea
xor
imul
(bad)
(bad)
mov
sahf
call
or
and
hlt
adc
sbb
inc
dec
shr
mov
sar
(bad)
stc
sbb
pop
nop
bound
aam
test
test
enter
mov
mov
pushf
cs
out
push
jmp
leave
push
(bad)
outs
call
(bad)
push
ss
test
jmp
xchg
inc
dec
call
test
(bad)
(bad)
dec
pop
lds
inc
cmp
pop
add
mov
inc
(bad)
(bad)
(bad)
inc
movs
jmp
push
push
imul
mov
jmp
cmc
jo
or
outs
test
pop
or
lods
mov
pop
xchg
xchg
sbb
(bad)
(bad)
push
leave
idiv
and
push
jle
cld
shr
push
inc
jg
push
adc
inc
xchg
jle
lods
(bad)
call
and
ss
xchg
or
addr16
enter
jne
outs
test
(bad)
(bad)
(bad)
(bad)
dec
cmp
push
rcr
(bad)
adc
cdq
shl
xchg
frstpm(287
sub
(bad)
ficom
jne
cmp
enter
retf
call
repz
(bad)
loope
cmp
(bad)
(bad)
jmp
loopne
mov
cmps
sar
test
inc
jl
sbb
imul
in
(bad)
(bad)
dec
or
in
imul
ficom
sbb
lock
ret
lods
ret
dec
push
mov
or
jge
add
int
adc
(bad)
(bad)
(bad)
mov
int3
push
imul
pop
cwde
sub
adc
pop
adc
xchg
and
xchg
mov
das
cli
push
mov
ins
sub
cmc
dec
out
cmp
fild
hlt
mul
(bad)
push
mov
retf
adc
cli
aam
loop
mov
mov
or
sub
(bad)
push
rcl
lar
dec
jp
jp
fcomip
mov
cmps
add
lods
push
aas
(bad)
jmp
mov
shl
jne
mov
push
cwde
cwde
inc
jmp
test
(bad)
(bad)
mov
ja
test
xor
lea
push
out
inc
mov
cmp
loop
stos
sbb
fcom
(bad)
pop
cs
push
jo
mov
loopne
and
(bad)
mov
cmp
sqrtps
aam
push
or
sahf
nop
call
or
adc
mov
dec
retf
jb
add
in
sub
sbb
jmp
(bad)
(bad)
dec
mov
dec
cmp
mov
push
mov
lods
inc
add
out
cdq
dec
inc
out
add
add
fwait
(bad)
dec
adc
pop
movs
xor
in
xor
neg
je
inc
pusha
ss
fmulp
rcl
sbb
(bad)
(bad)
jmp
push
xlat
retf
xchg
ret
pop
inc
mov
pop
je
mov
pop
das
or
push
jb
(bad)
(bad)
(bad)
dec
and
jae
es
mov
daa
cld
in
cmp
mov
sub
and
sbb
add
push
sbb
pusha
cmp
push
rcr
cmp
jmp
dec
cmp
dec
dec
xor
and
(bad)
ds
dec
sub
cmps
push
sbb
adc
pop
ror
(bad)
(bad)
(bad)
call
adc
cmps
mov
inc
mov
int
clc
push
jle
jb
addr16
pop
dec
mov
xor
test
inc
sub
repz
jmp
gs
dec
das
mov
and
aas
pop
or
inc
ret
mov
(bad)
(bad)
mov
in
shl
aas
jl
ins
inc
xor
and
(bad)
fcomip
push
jne
sar
dec
inc
xchg
xor
or
lods
aad
fbld
pop
dec
pop
out
not
xchg
cmp
inc
add
data16
push
push
(bad)
(bad)
inc
loop
pop
fwait
add
addr16
push
icebp
cmp
mov
fs
(bad)
(bad)
dec
jbe
(bad)
test
add
test
cmp
popf
jmp
mov
ret
out
(bad)
call
ss
cmps
pop
(bad)
dec
fstp
jne
cmps
dec
daa
(bad)
mov
(bad)
push
push
adc
dec
jmp
or
in
(bad)
(bad)
jmp
inc
mov
mov
je
jle
int
cwde
mov
sub
inc
jno
daa
sub
nop
cmp
jecxz
dec
mov
adc
mov
dec
outs
shr
(bad)
cmp
and
and
outs
in
adc
mov
aad
xchg
sub
mov
shr
and
xchg
inc
or
mov
(bad)
fbstp
cmc
mov
xchg
jecxz
(bad)
call
sub
enter
mov
(bad)
inc
jb
test
(bad)
or
cdq
xlat
dec
in
(bad)
(bad)
out
ss
push
aam
in
mov
gs
adc
mov
inc
xchg
xor
cmp
hlt
retf
aas
push
mov
jmp
push
mov
call
cli
jge
sub
adc
jmp
mov
dec
jmp
(bad)
(bad)
(bad)
dec
or
push
int
mov
in
xchg
stc
dec
shl
fs
icebp
pop
adc
mov
stc
sub
(bad)
(bad)
jmp
pop
bswap
adc
stc
pop
gs
sbb
sbb
push
mov
pop
mov
fdiv
mov
(bad)
(bad)
dec
mov
loop
int3
out
or
lds
mov
sar
cmp
hlt
jg
sub
cmp
cmp
xchg
or
lods
and
std
dec
dec
hlt
out
(bad)
(bad)
(bad)
push
aas
call
pop
cdq
int3
into
cmps
iret
aad
in
sbb
lock
(bad)
(bad)
(bad)
call
dec
xlat
pop
inc
jg
pop
inc
jns
jmp
pop
cmps
fnstsw
pushf
retf
ficom
mov
scas
leave
dec
and
(bad)
(bad)
jmp
out
sbb
std
and
dec
out
pop
jmp
fidivr
(bad)
jp
pusha
mov
lods
jae
sub
std
jle
xor
dec
(bad)
fisub
jecxz
call
mov
inc
xor
mov
mov
(bad)
(bad)
(bad)
dec
inc
add
mov
sub
xor
out
popf
inc
faddp
pop
and
ret
jae
cmp
pop
cmp
inc
adc
push
push
jno
add
xchg
add
(bad)
(bad)
push
gs
lods
or
(bad)
stos
add
dec
or
out
pop
dec
pop
push
xchg
shl
(bad)
jmp
adc
push
iret
or
jle
xor
iret
(bad)
call
pop
(bad)
mov
sbb
mov
(bad)
jge
(bad)
mov
enter
popa
lahf
popa
(bad)
(bad)
(bad)
(bad)
cmp
push
sbb
(bad)
popf
rcl
push
fisubr
xor
sbb
(bad)
gs
dec
xchg
(bad)
(bad)
(bad)
sti
scas
scas
dec
mov
out
dec
into
cwde
add
xchg
inc
out
movs
mov
jb
xchg
mov
(bad)
jmp
and
mov
outs
dec
cdq
jmp
jmp
mov
mov
inc
loopne
(bad)
(bad)
cmp
out
inc
in
dec
mov
arpl
rdmsr
lock
mov
cmp
popf
and
imul
mov
mov
(bad)
(bad)
(bad)
push
jge
lods
cs
xchg
pop
inc
call
fnstcw
mov
push
test
loope
or
(bad)
(bad)
inc
ret
or
add
dec
sub
push
aad
push
mov
cmp
movs
sub
daa
dec
pushf
mov
packuswb
pop
cmp
mov
xor
lahf
call
push
adc
mov
jmp
fisttp
dec
dec
loop
mov
(bad)
(bad)
in
jg
mov
mov
mov
outs
mov
(bad)
(bad)
mov
dec
shl
dec
rcl
jge
push
mov
sbb
retf
push
cld
icebp
inc
fidiv
xchg
mov
jns
(bad)
fistp
mov
ja
adc
retf
adc
push
adc
jle
mov
sub
not
sti
inc
sbb
sbb
inc
push
out
jbe
add
ja
cmp
mov
shr
je
div
sti
pop
mov
add
fwait
pop
pop
jbe
cmp
(bad)
dec
call
mul
sbb
mov
cmp
push
out
(bad)
(bad)
(bad)
call
in
shl
pop
lds
pop
rol
cli
pop
add
ins
mov
push
xlat
xchg
icebp
imul
inc
stc
test
fld
out
ins
mov
jne
imul
in
(bad)
jg
movs
adc
pusha
lea
ss
retf
mov
mov
(bad)
(bad)
dec
ja
sahf
imul
ret
mov
rcr
iret
and
cmps
jb
loop
(bad)
(bad)
(bad)
call
sbb
(bad)
repnz
imul
cmp
pop
out
mov
pop
pushf
dec
mov
jmp
push
(bad)
inc
hlt
dec
add
in
sahf
push
adc
add
or
xchg
xchg
(bad)
(bad)
mov
repnz
out
(bad)
cmp
mov
cld
and
retf
mov
jl
push
cmc
push
or
repz
inc
stos
dec
sbb
adc
mov
jnp
inc
call
pop
(bad)
(bad)
(bad)
push
mov
sub
es
jb
out
push
cmps
ja
cmp
int
xchg
(bad)
dec
in
cs
xor
and
adc
stos
(bad)
(bad)
(bad)
jmp
int3
lock
push
jb
aas
stc
cmps
fistp
add
mov
jg
xor
(bad)
(bad)
(bad)
(bad)
jmp
std
push
les
push
push
push
mov
mov
mov
add
pop
push
xor
(bad)
(bad)
call
dec
repz
xchg
inc
stc
scas
mov
pop
fst
push
cmp
push
xchg
push
adc
jmp
loopne
fsubr
daa
aas
pop
mov
(bad)
(bad)
(bad)
cld
ja
mov
jl
push
mov
and
std
pop
not
in
loopne
loop
jb
xchg
jb
(bad)
jmp
jmp
xchg
inc
mov
xchg
es
sahf
gs
frstor
(bad)
(bad)
(bad)
(bad)
cmp
pop
cmp
xchg
inc
xor
outs
pop
mov
jae
jb
sub
or
and
jp
das
clc
dec
icebp
xchg
xor
jne
inc
aaa
adc
push
and
inc
das
test
jmp
lods
xchg
aam
jmp
(bad)
mov
cmp
jmp
add
icebp
cs
call
and
pop
call
mov
xor
jo
push
dec
cs
sbb
(bad)
call
pop
out
outs
xchg
icebp
repnz
neg
(bad)
je
lods
cmps
sub
in
add
outs
xchg
pop
cmps
movs
mov
and
fidiv
cmp
mov
jl
xlat
out
dec
neg
(bad)
jmp
add
pop
push
out
inc
push
ins
pop
stos
push
ret
ins
or
daa
fisubr
cwde
(bad)
(bad)
call
push
push
push
push
dec
adc
mov
and
fiadd
loop
dec
pop
cmp
std
(bad)
call
repz
jbe
out
fnstsw
mov
fsub
xchg
jmp
jg
mov
in
(bad)
int3
movs
push
inc
jnp
call
lea
std
(bad)
push
into
daa
shl
push
pop
pop
jbe
push
xor
ret
cmps
ret
lods
inc
std
aaa
sbb
mov
data16
cmp
(bad)
packssdw
xchg
js
(bad)
cmp
jle
jno
imul
push
add
and
xchg
into
fwait
add
hlt
bound
adc
pop
hlt
(bad)
inc
mov
aas
sub
cmp
xor
loop
cmp
(bad)
(bad)
(bad)
push
hlt
ss
addr16
(bad)
mov
retf
adc
add
enter
mov
(bad)
in
repz
shl
pop
not
inc
test
das
ds
lods
add
sub
sbb
xor
gs
inc
add
dec
fbstp
push
jne
and
iret
and
pop
iret
into
mov
jg
adc
repnz
xor
lds
(bad)
out
lock
call
rol
call
repnz
imul
pusha
mov
or
shl
loopne
call
(bad)
cmp
sub
daa
cld
das
clc
mov
fs
imul
or
movs
ret
ja
jbe
(bad)
(bad)
call
popf
not
sub
stc
out
pop
lods
xor
test
bound
aam
mov
(bad)
(bad)
jmp
rcr
test
fnstcw
(bad)
cmp
je
sbb
in
(bad)
(bad)
inc
cmp
inc
stc
std
test
mov
dec
pop
sbb
sub
add
nop
push
(bad)
(bad)
jmp
sub
(bad)
dec
out
pop
in
sbb
sub
sar
pusha
fcomp
push
sbb
jmp
aam
scas
pop
scas
int3
(bad)
mov
leave
xchg
(bad)
outs
pop
push
pushf
sbb
(bad)
(bad)
inc
fld
not
push
frstor
inc
xchg
pop
in
mov
pushf
aad
push
out
jae
(bad)
(bad)
inc
dec
loope
dec
stos
jmp
mov
fadd
dec
cli
mov
(bad)
js
pop
dec
test
es
fcomip
inc
push
jmp
push
and
jo
out
sbb
dec
std
jmp
dec
(bad)
inc
mov
adc
(bad)
(bad)
(bad)
jmp
jl
les
aad
mov
je
das
int
cmp
sub
(bad)
repnz
or
call
mov
mov
scas
cli
pop
pushf
es
and
and
cmp
xchg
cli
call
pop
mov
jne
inc
pop
add
adc
or
aam
and
pop
call
sbb
sbb
(bad)
(bad)
mov
push
shl
mov
add
dec
int
(bad)
(bad)
(bad)
call
retf
into
cmp
dec
or
add
push
ret
add
(bad)
sahf
js
iret
addr16
mov
adc
pushf
ret
cli
push
ror
cmps
dec
sahf
sbb
enter
mov
(bad)
(bad)
jmp
push
or
ja
sti
les
(bad)
sub
xchg
icebp
jmp
dec
push
mov
or
sbb
cmps
push
(bad)
(bad)
call
es
ins
test
mov
xor
sbb
clc
inc
sbb
stc
sbb
js
fsub
cmp
push
sub
xchg
dec
popa
push
aas
test
push
dec
fcomp
(bad)
(bad)
push
pop
sahf
mov
test
xor
dec
or
xchg
rcl
rol
cmp
adc
(bad)
mov
fs
pop
push
mov
cmp
stos
fidivr
(bad)
(bad)
jg
repnz
jg
(bad)
push
pop
icebp
pop
push
inc
jmp
cmp
es
mov
stc
pop
(bad)
(bad)
(bad)
dec
inc
ss
(bad)
mov
mov
push
call
sub
and
jmp
sar
ds
mov
xchg
shl
out
outs
mov
push
sar
cmp
dec
bound
and
push
lock
cmps
sub
(bad)
(bad)
(bad)
inc
fnstsw
test
inc
imul
test
repnz
stos
mov
ret
cmp
(bad)
push
frstor
pop
in
adc
cmp
pusha
loopne
jo
xor
add
dec
(bad)
(bad)
(bad)
inc
sar
call
lods
das
mov
arpl
loope
cmc
rcl
(bad)
aaa
mov
idiv
(bad)
(bad)
inc
mov
std
pop
mov
adc
stc
jb
inc
xor
mov
jp
ss
inc
js
mov
(bad)
(bad)
jmp
ja
int
aam
int
mov
jnp
in
rcl
shl
mov
dec
xchg
pop
mov
push
(bad)
push
and
dec
adc
int3
sbb
add
sub
xlat
test
pop
or
or
cmps
mov
push
idiv
(bad)
cmp
sbb
ja
call
(bad)
cmp
jg
rol
in
or
in
or
cmp
(bad)
push
jg
xchg
or
cs
push
out
ja
pop
clc
jg
pop
inc
loope
inc
pop
sub
sub
pop
sbb
rcr
hlt
sbb
jg
sub
std
pop
push
sbb
in
aas
(bad)
dec
pop
and
sbb
loop
fsub
(bad)
and
or
in
push
push
jmp
fimul
push
mul
add
(bad)
(bad)
push
maxps
fs
pop
aad
and
push
xor
inc
test
cmp
pop
dec
inc
into
(bad)
mov
int3
sbb
cli
int
mov
call
push
(bad)
call
mov
mov
movs
push
cmp
and
xchg
dec
cmp
mov
pop
hlt
outs
cli
push
and
xor
mov
out
in
push
adc
pop
ins
mov
(bad)
(bad)
in
pop
cdq
xchg
or
fstp
cmp
call
jl
clc
fbld
ret
(bad)
(bad)
jmp
gs
aam
or
test
add
(bad)
cmp
(bad)
dec
aas
sub
jmp
in
or
cmps
xor
xchg
not
add
out
jbe
sbb
jae
sar
(bad)
jmp
mov
rcl
loopne
(bad)
in
aam
push
dec
out
sub
(bad)
(bad)
jg
cs
or
mul
retf
loopne
movs
jmp
pop
xchg
pushf
cmp
dec
or
aad
scas
cmp
dec
sbb
iret
out
adc
rcr
pop
inc
add
adc
hlt
loopne
push
xlat
push
jmp
clc
jmp
(bad)
mov
add
jge
aas
sub
iret
pop
sbb
rol
in
psadbw
jg
into
test
jmp
mov
in
push
push
sbb
inc
xchg
js
in
(bad)
call
fldcw
xor
sub
mov
aaa
scas
fldenv
pop
dec
sbb
sbb
mov
push
sbb
ja
test
jmp
pop
xchg
lahf
rcr
in
je
pop
xlat
test
pop
std
push
jae
add
lahf
jne
lahf
sub
jmp
fbstp
add
(bad)
jmp
out
popf
test
ss
inc
cmp
mov
mov
loopne
les
jp
push
movs
int
cdq
push
out
mov
pop
repnz
xchg
pop
dec
lds
sbb
das
mov
push
lock
cmp
sbb
xchg
add
fstp
sbb
std
mov
pop
or
xchg
push
outs
jno
clc
dec
popa
outs
stos
loop
ins
ret
(bad)
(bad)
(bad)
push
arpl
fstp
mov
cmp
push
dec
xor
lahf
sub
mov
(bad)
(bad)
(bad)
dec
aam
lds
es
pop
jmp
loop
dec
bound
mov
xlat
adc
(bad)
jg
(bad)
retfw
lock
mov
int3
push
jg
cmps
push
xor
cli
cmp
jno
cs
(bad)
(bad)
(bad)
call
test
stos
xor
pop
packssdw
mov
sbb
sbb
sub
js
or
jmp
(bad)
call
push
call
dec
dec
(bad)
es
mov
in
sub
faddp
lock
clc
test
ror
mov
cmp
aad
mov
pop
test
icebp
adc
(bad)
das
inc
addr16
das
(bad)
(bad)
jmp
mov
mov
xor
out
jp
sub
mov
xor
and
in
mov
push
iret
or
lds
or
jae
xor
push
mov
aas
fidiv
ins
cmp
jg
pop
(bad)
cli
jle
jb
mov
pusha
or
loopne
xchg
cs
jns
(bad)
jmp
mov
pop
test
frstor
cmp
jnp
(bad)
(bad)
(bad)
(bad)
call
lods
xchg
std
(bad)
iret
sub
xchg
fmul
cmp
pusha
cmps
sbb
sbb
(bad)
(bad)
jmp
jg
jae
inc
rcl
aaa
mov
cvtps2pd
div
adc
imul
je
jg
hlt
dec
ins
add
lock
xor
out
(bad)
pushf
dec
push
(bad)
dec
(bad)
(bad)
(bad)
call
ret
retf
mov
pop
mov
lock
sbb
lds
mov
xor
(bad)
(bad)
(bad)
(bad)
jle
sbb
sahf
jnp
aas
movs
outs
add
xchg
(bad)
outs
pop
popa
and
jo
pop
xchg
sub
mov
(bad)
cmp
jl
push
repnz
mov
hlt
and
adc
mov
bswap
icebp
mov
ret
(bad)
(bad)
std
add
push
inc
pop
aaa
pop
add
nop
out
(bad)
jo
push
nop
stos
out
mov
(bad)
(bad)
jmp
rol
or
sti
sub
data16
add
rcl
xor
cs
inc
(bad)
(bad)
(bad)
call
jle
retf
and
inc
push
jnp
inc
push
sub
out
iret
push
js
hlt
xor
(bad)
(bad)
jmp
rol
std
jl
fadd
popf
in
jo
not
(bad)
push
cmps
push
(bad)
mov
add
adc
xchg
pop
je
int3
das
cmc
push
xor
aas
pusha
add
in
dec
or
(bad)
(bad)
call
cmp
dec
and
aad
xchg
call
xchg
ins
jns
aad
mov
std
(bad)
(bad)
dec
call
push
movups
jno
cmp
dec
and
enter
fnstcw
cld
dec
and
jecxz
shl
stc
mov
mov
jbe
fyl2xp1
(bad)
(bad)
mov
pop
(bad)
rol
push
lds
sbb
popf
xchg
cmc
push
adc
aas
xor
jnp
mov
(bad)
(bad)
(bad)
push
out
mov
mov
aas
pop
cmp
xchg
mov
ret
mov
pop
(bad)
jmp
cwde
sub
ss
sub
in
call
ret
daa
bound
adc
push
push
cmps
mov
(bad)
(bad)
(bad)
call
fdiv
clc
jp
sbb
xchg
cmps
adc
cmp
mov
fcmovnu
jno
js
js
cmp
hlt
fisttp
ins
dec
rcl
inc
jmp
sar
cs
(bad)
mov
lock
push
jle
test
sub
fsubr
(bad)
out
inc
bound
(bad)
jmp
scas
pop
(bad)
dec
and
adc
push
aaa
xchg
sub
(bad)
fild
call
cmp
scas
sbb
adc
mov
loop
stc
out
dec
(bad)
push
fild
test
mov
jmp
mov
icebp
dec
mov
cmp
or
call
std
xchg
sub
inc
mov
sbb
xchg
xchg
mov
mov
jg
scas
inc
pop
pop
(bad)
stc
cwde
push
(bad)
in
test
(bad)
(bad)
(bad)
call
popa
jecxz
push
push
ror
repz
daa
shl
dec
xor
and
rcr
add
(bad)
jmp
jp
daa
fnstcw
cmp
shl
test
mov
hlt
xchg
inc
out
jg
dec
arpl
mov
or
mov
pop
fistp
call
mov
add
mov
jnp
push
cld
(bad)
dec
jmp
cdq
stos
out
cli
pop
iret
inc
nop
jo
dec
jle
cmps
jmp
clc
pop
int3
jge
mov
xchg
mov
ins
fcomp
sbb
cmp
loop
aam
xchg
xchg
loopne
mov
jmp
fnstcw
xor
sbb
jecxz
mov
add
pop
jbe
out
sahf
add
(bad)
(bad)
(bad)
inc
pop
test
add
and
push
movs
or
movs
retf
loop
jno
jne
sbb
cwde
(bad)
(bad)
(bad)
call
adc
adc
and
lds
cmp
and
cmp
cmp
(bad)
(bad)
call
jne
or
jmp
xchg
ret
push
xlat
pop
xchg
xor
call
mov
sbb
(bad)
(bad)
(bad)
jmp
es
aas
call
sbb
and
bound
xchg
cs
add
outs
cmp
aas
clc
cmp
je
add
jg
xchg
retf
xchg
pop
mov
sar
and
cmp
arpl
(bad)
(bad)
jmp
sub
xchg
jg
adc
pop
das
mov
jns
add
sub
imul
fsin
stos
xor
xchg
cmp
sub
outs
stos
pusha
loopne
mov
push
add
pop
inc
fld
mov
pop
shr
mov
or
stos
cmp
inc
cmp
and
jae
xor
jge
imul
push
sbb
pop
jmp
mov
clc
pop
rcr
cwde
icebp
aam
(bad)
fidivr
hlt
mov
(bad)
dec
dec
out
add
loopne
fwait
pusha
jbe
dec
out
es
ret
repnz
(bad)
(bad)
(bad)
call
out
leave
fdivr
jp
cli
push
xchg
(bad)
arpl
cwde
jmp
cmp
gs
(bad)
mov
sbb
test
gs
loopne
and
add
pop
fcmovnbe
mov
(bad)
dec
jecxz
push
fst
xchg
push
out
pop
sub
xor
(bad)
(bad)
call
loopne
adc
mov
or
sti
mov
aad
repnz
jg
cmp
iret
jae
mov
ret
mov
add
popa
push
(bad)
cmps
ins
jnp
(bad)
(bad)
(bad)
jl
loope
imul
mov
pop
pop
pop
fwait
sbb
cmp
mov
scas
push
fwait
shr
cwde
or
xlat
test
std
(bad)
aaa
cld
(bad)
jns
dec
push
jmp
mov
in
clc
daa
mov
push
loopne
sbb
cmc
test
loope
neg
pop
add
mov
stos
inc
repnz
arpl
(bad)
cmp
inc
cld
xchg
sub
call
ret
add
leave
sub
sbb
lahf
call
(bad)
(bad)
inc
fistp
test
jecxz
sbb
lods
es
adc
test
aas
test
xor
jg
fiadd
push
icebp
add
cmp
cmp
call
or
dec
mov
repz
addr16
test
enter
adc
or
jle
(bad)
cmp
hlt
or
or
or
jns
xor
or
mov
(bad)
jmp
mov
fistp
retf
pop
inc
fwait
xchg
hlt
mov
or
(bad)
(bad)
push
mov
or
ret
inc
or
out
add
dec
dec
je
fild
inc
jne
ins
sahf
jmp
jmp
pop
pop
or
or
jmp
push
dec
adc
jmp
(bad)
(bad)
(bad)
inc
mov
aas
imul
outs
mov
push
stos
pop
scas
loope
sub
sbb
(bad)
(bad)
(bad)
call
mov
jbe
mov
push
push
scas
sbb
mov
mov
or
cs
jp
push
pop
xchg
mov
sar
outs
jmp
aad
push
push
push
mov
movs
scas
rcr
movs
je
shr
(bad)
push
add
pop
gs
sub
pop
push
jbe
jecxz
jecxz
xchg
cmp
scas
test
mov
push
leave
sub
scas
retf
xchg
mov
mov
fdiv
mov
movs
jg
sar
(bad)
inc
out
in
jmp
or
sbb
out
int
or
sbb
(bad)
int
jp
sbb
out
pop
imul
sub
dec
je
iret
jo
cmps
push
jns
mov
fidiv
mov
push
in
(bad)
(bad)
out
mov
(bad)
(bad)
(bad)
dec
mov
jo
jbe
cmp
mov
int3
push
adc
rol
add
pop
(bad)
push
hlt
shl
sub
cs
adc
iret
cmc
cmp
inc
iret
fld
adc
fld
or
jae
shl
icebp
pop
iret
mov
jecxz
pop
ds
inc
in
add
ficomp
cmc
retf
adc
(bad)
dec
jg
call
xlat
lods
clc
jns
xchg
pop
bound
(bad)
(bad)
(bad)
stc
or
cli
ds
lods
pop
ins
or
lock
pop
sbb
cmps
cs
xchg
sbb
mov
sbb
cdq
pop
mov
dec
jmp
sbb
sub
jne
jmp
cld
inc
ins
pop
retf
jnp
je
jmp
cld
fwait
mov
push
push
(bad)
scas
add
js
leave
jg
sbb
dec
xor
mov
cmc
gs
call
jmp
aaa
into
push
scas
test
imul
add
aad
(bad)
(bad)
out
clc
jp
retf
adc
mov
sbb
ficomp
ins
fisttp
out
ds
cli
cdq
in
xchg
(bad)
fwait
push
fstp
and
mov
pop
outs
out
pop
fldenv
xchg
in
fst
call
std
(bad)
jo
xlat
mov
jg
test
jmp
in
mov
repnz
xchg
xlat
outs
into
sub
lock
pop
loop
dec
push
(bad)
cmc
neg
(bad)
(bad)
call
mov
in
add
inc
out
mov
sub
inc
mov
not
dec
xchg
das
jmp
(bad)
(bad)
jmp
xchg
or
or
push
int3
pusha
fcomi
push
sbb
sbb
or
(bad)
inc
xchg
les
pop
pop
xor
retf
jmp
hlt
data16
into
test
(bad)
(bad)
mov
aad
push
fs
cmp
test
adc
mov
jmp
or
das
sub
push
repz
mov
add
(bad)
(bad)
mov
cmp
mov
dec
xchg
nop
lahf
loop
inc
add
xchg
ret
out
inc
call
(bad)
(bad)
(bad)
inc
pop
adc
not
pop
xchg
and
cmp
adc
fiadd
sti
inc
pop
out
(bad)
(bad)
(bad)
dec
pop
mov
pop
fmul
push
xchg
mov
ss
cmp
xor
add
movs
cmp
add
(bad)
dec
cs
fild
ret
xor
mov
test
in
mov
rcr
pop
shr
pop
or
pop
inc
pop
or
push
adc
pop
fsubr
(bad)
(bad)
(bad)
dec
pop
xchg
cmp
dec
lods
outs
jno
fs
int3
in
mov
shl
adc
push
(bad)
dec
xchg
pop
ss
mov
xor
shl
sbb
iret
(bad)
adc
adc
stos
pushf
mov
adc
and
mov
cli
movs
movs
fs
or
push
mov
adc
test
addr16
mov
(bad)
(bad)
(bad)
jle
mov
dec
cmp
mov
fstp
test
scas
(bad)
enter
or
das
mov
and
call
xor
popf
pop
inc
push
(bad)
(bad)
jg
pop
aas
mov
ins
dec
fld
neg
mov
jns
outs
add
shl
js
add
lock
(bad)
(bad)
push
mov
clc
imul
out
mov
(bad)
cs
adc
repnz
clc
push
jmp
(bad)
jp
inc
cmp
rol
fnstsw
add
sub
xor
sar
add
lods
in
push
xor
push
fild
mov
or
mov
pop
(bad)
(bad)
jg
aas
cs
jae
add
data16
ins
adc
adc
xchg
or
(bad)
(bad)
(bad)
call
xchg
movs
push
lea
inc
sub
sub
daa
inc
push
adc
push
adc
inc
dec
xchg
adc
(bad)
(bad)
(bad)
inc
inc
dec
push
adc
adc
mov
shl
sahf
sti
out
cmp
cmp
xor
mov
std
inc
mov
push
xlat
sub
(bad)
fstp
fsubrp
jmp
mov
repnz
and
pushf
ficomp
cmc
(bad)
(bad)
fbld
push
cmp
push
je
cmp
out
sbb
lea
movs
xor
xchg
test
(bad)
(bad)
(bad)
(bad)
call
or
loope
push
adc
mov
mov
out
repz
test
or
(bad)
(bad)
jmp
adc
mov
dec
cli
ret
jae
xlat
xchg
shl
in
ret
push
(bad)
(bad)
(bad)
call
jns
cli
inc
mov
rol
(bad)
xor
mov
sbb
or
fcomp
(bad)
(bad)
dec
fild
sbb
loopne
stos
adc
ins
mov
call
adc
cmc
add
dec
mov
ds
loope
sbb
dec
jbe
sbb
cmp
mov
xchg
and
inc
mov
cwde
and
(bad)
call
push
test
stos
jo
or
bound
dec
das
dec
lods
popa
cmc
dec
(bad)
(bad)
(bad)
call
and
jbe
inc
mov
add
xchg
sub
call
sbb
loope
xchg
clc
jmp
pop
jno
pop
pop
sbb
jbe
(bad)
(bad)
inc
dec
pop
adc
dec
popa
cmp
mov
xchg
or
pusha
aad
mov
(bad)
(bad)
(bad)
mov
stos
push
sahf
sbb
ror
aas
cdq
loope
and
mov
(bad)
stos
pop
adc
jle
cld
jg
aad
pop
add
rol
or
add
cwde
inc
adc
(bad)
(bad)
in
adc
repz
test
inc
inc
pop
xchg
dec
pop
sbb
push
scas
pop
(bad)
(bad)
(bad)
push
or
push
dec
out
pop
aad
lds
iret
xlat
dec
add
xor
pop
fnstsw
ret
(bad)
(bad)
fbld
aaa
mov
and
ja
xor
(bad)
in
sub
jg
loopne
inc
lods
adc
pop
out
jecxz
test
sub
stos
push
cmp
xchg
mov
(bad)
(bad)
push
nop
mov
cwde
inc
pop
xchg
xchg
cmp
(bad)
add
fimul
mov
jg
ss
or
loopne
movs
inc
or
(bad)
(bad)
(bad)
cmp
loopne
ins
test
xchg
loopne
mov
inc
ja
adc
pop
pop
sbb
cld
pop
popf
xchg
(bad)
(bad)
call
nop
push
call
test
sbb
xor
push
xchg
add
adc
inc
push
mov
or
(bad)
(bad)
(bad)
(bad)
faddp
add
sbb
jl
xor
ja
fwait
cmp
or
cld
or
mov
add
jmp
sbb
adc
es
std
mov
pop
cmps
(bad)
js
and
push
mov
mov
inc
cwde
push
call
push
fwait
nop
xchg
fdiv
imul
sbb
sub
jne
add
retf
in
cld
jmp
outs
pop
sbb
mov
fiadd
(bad)
(bad)
push
sbb
dec
mov
inc
inc
cmp
stc
adc
add
call
xchg
mov
mov
add
add
int
fwait
sbb
inc
mov
(bad)
dec
mov
push
fnstenv
mov
repz
mov
arpl
mov
jg
(bad)
(bad)
jmp
shl
retf
mov
(bad)
aam
xchg
imul
loope
mov
add
add
xor
or
jmp
call
out
test
pop
push
pusha
pop
(bad)
(bad)
(bad)
push
add
jle
jg
shl
push
stos
add
and
sti
sar
inc
adc
scas
cli
(bad)
(bad)
fdivr
cld
push
xor
nop
add
sub
inc
test
scas
cmps
add
(bad)
jg
rcl
es
mov
loope
or
popa
aaa
add
(bad)
(bad)
push
push
out
inc
jns
lock
cmp
cmp
inc
mov
imul
(bad)
(bad)
(bad)
std
imul
jmp
mov
xor
mov
loop
sub
xchg
cmp
retf
lods
test
(bad)
fcomip
call
pop
dec
aas
out
out
(bad)
sbb
mov
gs
pop
scas
adc
rcl
mov
std
sub
jo
jo
add
adc
imul
lock
sub
push
iret
data16
mov
and
sub
mov
or
add
cmp
call
mov
jl
xor
push
(bad)
call
js
mov
(bad)
int
dec
and
push
ret
ss
pusha
inc
les
mov
ja
add
fs
(bad)
mov
add
iret
rol
fs
das
clc
jo
jo
popf
cmps
nop
or
or
mov
cmps
adc
mov
(bad)
jmp
push
push
outs
test
add
mov
mov
sub
mov
adc
addr16
mov
out
inc
call
call
ja
mov
outs
mov
mov
and
push
fcmove
mov
xor
ja
push
lock
or
data16
nop
dec
lods
daa
lods
(bad)
call
and
mov
data16
sahf
mov
ins
pop
sti
nop
jg
push
(bad)
(bad)
cmp
push
imul
int
mov
mov
xchg
xor
jmp
and
std
inc
call
rcl
mov
into
inc
(bad)
jmp
call
push
mov
test
push
jg
xchg
sbb
sub
movs
(bad)
(bad)
call
or
sub
jnp
test
scas
in
inc
fwait
push
jmp
hlt
mov
call
ins
ror
xlat
mov
outs
les
xchg
ret
loopne
retf
das
jmp
xlat
test
(bad)
js
std
gs
neg
cdq
or
(bad)
nop
add
jae
cmp
outs
or
mov
out
inc
mov
ret
in
ror
mov
aam
sbb
hlt
les
mov
push
sub
(bad)
(bad)
inc
in
js
sub
jg
repnz
push
add
and
ret
scas
cli
(bad)
dec
sbb
or
push
jb
sub
test
jg
(bad)
(bad)
(bad)
(bad)
jp
adc
sbb
imul
push
and
shl
je
ins
(bad)
mov
inc
gs
std
stc
popa
push
mov
nop
push
sti
into
pop
or
stc
(bad)
(bad)
(bad)
call
or
nop
sbb
mov
pop
xor
lock
ss
jmp
push
daa
cli
outs
xor
inc
mov
outs
std
inc
repz
cwde
push
mul
rcl
adc
data16
adc
and
je
mov
outs
adc
push
adc
jns
(bad)
(bad)
jg
sub
popa
or
adc
inc
add
inc
push
fcom
adc
cwde
(bad)
jmp
imul
inc
add
push
jmp
mov
ins
std
push
xor
sub
pop
mov
pushf
xor
jmp
jbe
call
rcl
sub
mov
xchg
(bad)
call
mov
pop
psubw
pop
ds
sbb
mov
(bad)
(bad)
(bad)
sti
push
cwde
in
ja
add
or
cmp
ins
pop
outs
lods
adc
stos
add
dec
add
push
idiv
(bad)
inc
sub
mov
or
mov
sub
dec
inc
push
clc
loopne
mov
aam
hlt
mov
mov
(bad)
push
pop
data16
and
push
adc
push
inc
push
or
call
das
mov
cmp
outs
test
cmp
mov
sar
add
sti
sbb
adc
pop
test
add
pop
xor
jg
fisttp
xlat
cdq
stos
lock
adc
and
div
std
(bad)
(bad)
(bad)
(bad)
in
jno
mov
or
sub
push
ss
add
js
fst
stc
mov
sar
(bad)
dec
dec
and
inc
test
cli
mov
adc
mov
dec
add
or
fs
shl
(bad)
(bad)
(bad)
mov
in
xchg
fwait
sbb
(bad)
jmp
icebp
movs
pop
(bad)
sbb
dec
push
push
or
das
sar
(bad)
inc
lea
inc
jmp
bound
or
test
call
jmp
pusha
inc
mov
jle
mov
test
pusha
sbb
lock
jp
cli
fisttp
pop
pop
add
inc
shl
add
inc
cld
sub
xor
cmp
adc
adc
std
push
mov
shl
shl
push
add
and
dec
jmp
mov
lods
push
sub
(bad)
jmp
aad
and
and
pop
add
lock
outs
xor
sbb
lock
or
cmc
push
mov
push
push
test
(bad)
(bad)
fild
test
xchg
ja
xor
push
push
ja
dec
addr16
adc
(bad)
je
sbb
add
xchg
sahf
mov
lods
adc
mov
xchg
pop
loopne
add
jmp
dec
test
in
adc
(bad)
(bad)
fiadd
mov
add
add
ror
pop
push
fisub
mov
jle
adc
(bad)
(bad)
call
test
test
ss
push
jb
add
jns
loopne
call
and
pushf
(bad)
(bad)
(bad)
call
or
aam
cli
js
cli
mov
dec
jecxz
mov
and
ins
ret
outs
dec
out
scas
int
add
pop
mov
lock
adc
or
test
dec
inc
inc
sbb
add
(bad)
out
xchg
jmp
push
hlt
push
test
(bad)
(bad)
(bad)
inc
shl
div
mov
in
push
xor
jg
dec
jmp
push
imul
inc
sbb
(bad)
(bad)
jmp
pusha
mov
mov
pop
clc
addr16
or
(bad)
iret
push
sbb
(bad)
(bad)
(bad)
mov
push
lods
ret
bound
add
mov
out
fldcw
leave
call
jecxz
inc
add
mov
and
mov
fstp
cmp
or
sar
in
pop
cmp
jp
adc
lea
cmps
(bad)
call
mov
push
inc
and
iret
int
add
inc
sti
dec
and
push
and
inc
push
mov
sti
(bad)
(bad)
(bad)
push
in
mov
(bad)
stos
push
or
xchg
outs
pop
hlt
or
std
cmp
cmp
mov
pop
add
pop
aam
sbb
adc
fdiv
test
adc
(bad)
(bad)
jmp
addr16
jge
push
mov
adc
cli
xlat
add
movs
mov
ror
jg
fcomip
mov
jnp
ins
xor
lods
iret
mov
sub
(bad)
(bad)
jmp
pusha
mov
mov
pop
xchg
test
inc
and
add
sub
(bad)
push
mov
and
pusha
aas
jnp
out
xor
inc
dec
les
dec
fstp
(bad)
(bad)
(bad)
(bad)
stc
outs
test
mov
mov
call
add
mov
clc
es
cmp
call
loope
cld
push
push
aaa
(bad)
cmps
add
push
movs
mov
xchg
(bad)
(bad)
push
(bad)
(bad)
fiadd
gs
in
jg
inc
les
adc
inc
rcl
lahf
mov
and
je
pop
(bad)
in
(bad)
(bad)
sti
dec
cmp
jg
movs
inc
xor
mov
(bad)
jbe
sub
(bad)
out
mov
pop
add
add
mov
cmps
das
dec
dec
jb
push
push
out
jnp
inc
call
nop
imul
outs
and
addr16
sub
(bad)
mov
cmp
lock
lods
mov
mov
inc
adc
(bad)
(bad)
(bad)
call
xchg
fnstenv
mov
scas
aad
inc
pusha
lock
sbb
(bad)
std
(bad)
(bad)
jg
int3
jno
ins
je
fistp
add
dec
fs
out
pop
dec
loopne
add
mov
aaa
mov
outs
ss
jbe
add
jmp
push
sub
sub
sbb
daa
popa
jne
pop
adc
pop
pop
sub
test
mov
repnz
sub
stos
xchg
nop
pop
test
bound
int
popf
xor
mov
das
rcl
cmp
mov
(bad)
cmps
mov
(bad)
(bad)
jmp
cmps
lds
and
dec
sub
dec
das
dec
cmp
dec
fwait
dec
inc
dec
inc
dec
outs
cmps
cdq
cmps
(bad)
fbld
dec
xchg
jle
cmps
frstor
hlt
(bad)
hlt
xlat
je
(bad)
(bad)
call
mov
hlt
shr
cmc
add
dec
aad
rcr
arpl
fucomip
out
je
cwde
add
aaa
mov
(bad)
(bad)
(bad)
mov
inc
and
jle
shr
cmp
mov
push
inc
aad
in
adc
imul
xor
add
(bad)
(bad)
mov
add
push
sbb
or
pop
jmp
stos
gs
nop
jge
rol
and
xchg
ret
fdivr
rol
lahf
push
icebp
cmp
or
rol
rcl
lds
xchg
scas
pop
fsub
lods
(bad)
mov
out
loopne
sub
ret
std
jmp
inc
push
xor
data16
cmp
inc
daa
fadd
enter
push
add
lock
and
iret
lods
in
cmc
cmp
sub
cmp
mov
rcr
sbb
(bad)
mov
out
stc
cmc
inc
mov
xlat
in
out
clc
sub
not
fwait
ror
fwait
inc
imul
fisub
das
shl
(bad)
(bad)
(bad)
jmp
movs
cmp
jg
out
enter
jle
imul
mov
das
mov
imul
pop
mov
mov
pushf
xor
xchg
(bad)
(bad)
(bad)
inc
and
mov
pop
inc
out
mov
rol
jno
ins
mov
rcl
dec
fwait
jae
idiv
(bad)
(bad)
inc
sbb
mov
pop
fucom
ffree
mov
neg
jmp
pop
pop
xor
xchg
cdq
push
add
das
clc
mov
mov
jmp
mov
or
popa
or
mov
xchg
arpl
sbb
sbb
(bad)
mov
sub
jmp
cmp
jbe
or
outs
mov
pop
(bad)
(bad)
(bad)
dec
pop
leave
lock
aas
outs
les
lock
xchg
dec
push
jno
repz
and
leave
jl
(bad)
push
int3
out
(bad)
mov
scas
es
lods
(bad)
gs
sbb
push
inc
mov
test
mov
jmp
dec
inc
push
loopne
adc
(bad)
(bad)
jmp
rep
push
mov
jae
sbb
mov
in
push
inc
mov
(bad)
(bad)
jmp
aaa
jne
(bad)
fs
jge
nop
inc
dec
test
lods
pusha
movs
(bad)
popf
iret
mov
ja
(bad)
(bad)
inc
clc
mov
loopne
rol
pusha
inc
xchg
shl
inc
test
out
pop
push
mov
(bad)
(bad)
inc
stos
xor
seta
and
adc
test
out
in
ret
lods
mov
sar
dec
push
mov
retf
and
js
pop
(bad)
into
ss
imul
inc
cdq
xchg
and
adc
sti
push
cdq
shl
js
add
push
cmp
adc
jmp
inc
xchg
adc
lahf
push
int3
je
imul
iret
cmpxchg
(bad)
call
test
pop
mov
inc
lahf
and
repz
dec
gs
dec
cmp
mov
(bad)
(bad)
jmp
lods
repz
mov
cmp
push
les
mov
jp
(bad)
jmp
push
mov
jbe
cdq
dec
mov
lea
mov
mov
mov
adc
stc
fiadd
cmp
jp
imul
(bad)
pop
sbb
xchg
movs
xor
mov
js
push
pop
(bad)
(bad)
(bad)
dec
mov
js
pop
add
dec
jmp
xor
cmp
stos
inc
test
push
fiadd
(bad)
call
cld
retf
call
cmp
in
(bad)
jg
jmp
xchg
in
jo
jmp
xchg
xor
push
xor
iret
imul
repz
stos
fstp
cmp
stc
jnp
jle
mov
pop
call
mov
dec
add
ret
ja
lahf
jmp
jnp
jge
call
lods
fld
jge
cmps
(bad)
(bad)
(bad)
mov
loope
pop
cld
out
arpl
test
mov
rcr
ins
aas
(bad)
cmp
push
mov
dec
(bad)
ret
adc
push
jb
xor
(bad)
jg
dec
inc
inc
data16
sub
mov
push
sbb
mov
(bad)
(bad)
jmp
rcl
cmc
nop
in
mov
mov
cdq
ins
xor
xchg
ins
fist
cmp
(bad)
inc
repz
pop
jp
add
(bad)
das
mov
and
sbb
dec
sub
fs
ss
sar
in
lods
int
mov
pop
and
jg
dec
call
out
inc
popf
dec
loope
dec
enter
mov
(bad)
(bad)
(bad)
(bad)
dec
shl
cli
cmp
ins
call
aam
jnp
pop
lahf
sahf
in
ins
push
jns
pop
(bad)
mov
stos
pop
ficom
ret
add
add
add
and
frstor
ret
sbb
inc
jg
lahf
xchg
jmp
cdq
fdivr
dec
cli
js
push
mov
jg
scas
outs
xchg
popf
push
mov
call
scas
push
mov
loope
in
jno
js
sbb
fnstsw
dec
cli
push
ret
jmp
jp
adc
cmps
sbb
pushf
dec
inc
cli
(bad)
jmp
scas
mov
outs
aaa
ds
mov
loop
(bad)
xor
ret
(bad)
call
lods
rol
cmc
out
mov
imul
pop
mov
(bad)
jg
iret
mov
jg
fnstsw
sbb
push
outs
aam
ja
dec
popa
(bad)
(bad)
(bad)
jmp
into
mov
sub
fcom
out
push
ror
push
mov
jle
jmp
sti
std
(bad)
(bad)
inc
(bad)
or
pop
dec
data16
sbb
daa
fiadd
push
lods
retf
cli
(bad)
aaa
pop
lods
shr
je
loopne
jae
cmp
clc
inc
rol
xchg
push
daa
jge
(bad)
jmp
mov
scas
mov
mov
jmp
arpl
out
popf
je
xchg
(bad)
(bad)
(bad)
call
mov
xchg
cmp
inc
mov
cmps
adc
shl
not
fisttp
cdq
sub
not
mov
(bad)
push
iret
div
pop
test
inc
jecxz
sub
jl
int3
or
mov
mov
jnp
mov
retf
jne
test
popa
bswap
mov
sbb
dec
(bad)
(bad)
(bad)
jmp
push
sbb
adc
jb
movs
(bad)
sti
pop
push
xchg
out
sbb
pushf
cmps
stos
stos
xchg
cmp
(bad)
call
fs
pop
out
mov
sti
fdiv
int
popa
lods
push
aaa
mov
or
pop
daa
leave
(bad)
(bad)
(bad)
call
xchg
test
push
push
shl
scas
loope
inc
mov
mov
dec
sub
mov
and
sar
sbb
push
pop
cwde
(bad)
xor
stos
test
sub
pop
das
jg
(bad)
(bad)
fcom
in
test
aam
mov
je
stos
into
inc
jne
imul
adc
jmp
(bad)
data16
jns
pushf
xor
cli
pop
int
cmp
(bad)
fdivp
fwait
loope
cmp
popf
jbe
push
cli
mov
cmp
hlt
stos
repnz
call
xor
aad
mov
pop
lahf
int
call
frstor
mov
(bad)
(bad)
push
loopne
jp
(bad)
cmp
add
push
or
xchg
out
ja
add
out
mov
dec
(bad)
cmp
es
fcmovnb
or
enter
sbb
jg
cs
inc
leave
xchg
fcmovnu
or
push
scas
jae
cli
pop
movs
mov
sub
fidivr
mov
sahf
fcomp
pop
cdq
fnstsw
outs
dec
fimul
jae
push
and
jb
(bad)
(bad)
call
test
repz
imul
cdq
(bad)
cwde
ins
jmp
push
and
jns
nop
test
(bad)
(bad)
(bad)
jmp
pop
pop
outs
pop
out
daa
outs
xchg
fwait
test
xlat
out
push
stos
mov
pop
inc
push
aam
(bad)
(bad)
(bad)
inc
fcmovne
jae
mov
clc
mov
or
mov
push
mov
xor
jno
and
loope
(bad)
call
xor
ja
mov
and
mov
jge
repz
or
xor
mov
or
dec
dec
data16
(bad)
(bad)
(bad)
jmp
shl
dec
inc
push
movs
adc
pop
aam
repnz
(bad)
jae
pop
inc
lods
mov
mov
pop
(bad)
call
in
sti
xor
fs
xchg
cmp
add
(bad)
fs
and
outs
aad
fild
ret
int
xchg
outs
lods
fs
(bad)
lods
pop
(bad)
(bad)
(bad)
(bad)
in
pop
jnp
(bad)
xor
xchg
ror
sub
jp
pop
mov
adc
(bad)
push
enter
retf
retf
and
inc
shr
xchg
hlt
xchg
push
(bad)
loope
or
push
push
clc
push
xlat
mov
dec
jp
fcom
xor
lock
cmp
aad
pop
mov
(bad)
fistp
fwait
int3
mov
cmps
add
out
repz
mov
popa
(bad)
(bad)
call
out
jns
mov
xchg
stos
fidivr
dec
pushf
sbb
loope
cmc
mov
push
cmp
push
sub
fstp
xor
ror
add
sbb
cdq
jmp
cdq
pop
cmps
lds
pop
(bad)
(bad)
(bad)
push
xchg
repz
(bad)
mov
inc
cdq
ret
dec
sub
mov
fwait
les
mov
xchg
jnp
and
in
mov
inc
dec
stos
mov
int
loope
pop
aad
mov
popf
pop
je
retf
call
jle
fild
cld
es
mov
ror
jo
sar
dec
enter
push
fadd
and
stc
cmp
mov
sar
call
pop
mov
mov
jb
rep
xor
sub
add
push
add
mov
and
es
aas
push
pop
dec
jo
std
sub
fsub
push
aas
dec
jae
cmp
jmp
push
add
and
clc
(bad)
(bad)
call
cmp
sub
adc
(bad)
jg
lock
test
inc
inc
push
mov
in
dec
adc
add
(bad)
jmp
es
(bad)
daa
scas
push
adc
jp
jb
pop
sub
push
mov
sar
(bad)
jmp
mov
adc
xor
into
push
pop
std
sub
(bad)
jmp
(bad)
into
xchg
rcr
loope
xor
(bad)
movs
mov
mov
mov
cmp
and
pushf
mov
int
jmp
shr
arpl
outs
cmps
loope
jmp
and
lock
out
dec
inc
and
es
call
(bad)
dec
ret
cmp
inc
xor
(bad)
jne
mov
xchg
(bad)
(bad)
dec
inc
mov
and
dec
mov
jbe
xchg
and
iret
xchg
cs
dec
mov
movs
sar
xchg
scas
out
pop
jae
retf
int3
add
mov
test
cld
mov
sar
push
adc
jb
pop
arpl
stc
(bad)
lods
mov
mov
pop
inc
xchg
ret
data16
mov
cwde
pop
pop
sub
(bad)
fild
into
sahf
gs
(bad)
and
ret
adc
push
inc
cmc
pop
pop
(bad)
(bad)
(bad)
mov
popf
outs
sbb
(bad)
mov
push
enter
icebp
mov
mov
mov
push
jmp
leave
inc
movs
(bad)
jmp
xor
ss
or
cwde
add
adc
xor
mov
jmp
xchg
lods
cmps
xchg
int
cmc
into
dec
xchg
xchg
das
mov
ins
or
push
outs
clc
(bad)
jmp
sbb
push
repnz
mov
daa
cmp
in
outs
out
adc
fcmovu
hlt
(bad)
(bad)
(bad)
inc
cli
jns
lahf
sbb
cmps
cmp
pop
outs
ret
lea
cmp
dec
movs
add
pop
jmp
push
mov
in
clc
push
cld
jmp
mov
cld
out
and
mov
loope
aam
ret
jle
test
jecxz
adc
dec
add
and
xchg
(bad)
in
loope
cmp
sbb
(bad)
inc
gs
aas
ror
and
cmp
int3
iret
sub
lods
mov
mov
push
xor
xchg
mov
pop
cmp
xchg
mov
adc
cli
(bad)
push
mov
popa
jl
jno
mov
pop
aaa
ss
imul
mov
fcomip
call
sub
and
xor
sub
cmp
lods
mov
jecxz
lods
adc
addr16
mov
dec
pop
out
dec
outs
dec
mov
aam
jmp
mov
push
ret
mov
sbb
ret
icebp
jmp
aas
out
(bad)
(bad)
jmp
(bad)
popa
push
loope
shl
mov
iret
xor
cmp
jle
push
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
aas
es
loop
jmp
sub
xor
jne
jle
(bad)
outs
test
sar
(bad)
(bad)
call
not
fwait
mov
mov
inc
sub
icebp
inc
adc
jbe
call
mov
(bad)
(bad)
call
mov
inc
lods
push
xor
mov
movs
call
js
sub
xor
lahf
xchg
or
call
dec
out
mov
(bad)
push
sbb
mov
(bad)
xlat
iret
fs
(bad)
out
cli
not
loope
scas
sub
mov
popa
into
inc
in
jb
mov
(bad)
(bad)
(bad)
jmp
mov
and
popa
pop
iret
xchg
xchg
imul
aas
jmp
inc
stc
outs
lods
xchg
sub
pop
cmp
jmp
sub
jge
lea
ja
mov
mov
pop
mov
(bad)
(bad)
mov
jl
div
cs
sti
enter
pop
lds
lock
das
loopne
mov
lea
lods
aas
jno
sbb
test
mov
jbe
xchg
push
lea
mov
ds
mov
(bad)
(bad)
jmp
cmp
div
mov
mov
imul
out
jg
(bad)
(bad)
call
fs
xchg
ror
ret
add
mov
in
aaa
lock
aad
sub
rol
icebp
lods
(bad)
(bad)
(bad)
(bad)
mov
push
inc
into
or
mov
and
out
jnp
jno
das
out
ds
mov
out
and
(bad)
(bad)
jg
(bad)
jae
test
(bad)
xor
lock
xchg
fs
int3
push
pop
out
mov
movs
sti
fdiv
movs
mov
(bad)
mov
xor
cli
push
loopne
add
test
out
mov
or
loope
and
retf
les
in
fs
cmps
fisttp
int3
add
imul
repnz
xchg
or
mov
dec
sbb
out
(bad)
(bad)
(bad)
dec
outs
iret
arpl
test
cs
mov
xchg
in
fistp
xor
mov
jns
dec
(bad)
call
jecxz
outs
int3
lds
jecxz
cdq
rol
(bad)
mov
cli
cld
pop
lds
jno
push
loope
outs
clc
xchg
ins
push
ss
pop
adc
cmp
inc
fwait
sbb
int
push
xor
push
push
mov
xchg
cld
jge
add
lahf
add
iret
xor
shl
pop
(bad)
(bad)
(bad)
(bad)
inc
cmp
or
sub
pop
pop
imul
rcr
std
nop
std
inc
fidivr
retf
jle
(bad)
(bad)
jmp
out
call
(bad)
sahf
fisttp
pop
dec
cmps
dec
jmp
sbb
test
dec
scas
push
dec
xchg
lock
mov
adc
scas
lahf
rol
pop
dec
(bad)
(bad)
(bad)
dec
out
mov
ja
push
das
(bad)
xor
cmp
inc
cmps
jae
add
daa
aam
mov
(bad)
(bad)
(bad)
cmp
mov
jge
push
inc
cli
or
or
sti
add
out
es
sub
xor
shr
(bad)
(bad)
(bad)
(bad)
cli
adc
add
pop
loop
std
lds
in
xor
xor
or
inc
sahf
sgdtd
mov
cmp
pop
jmp
jg
jmp
dec
add
adc
sub
adc
repz
add
or
or
or
cs
add
pop
sub
pop
add
push
sbb
push
and
jbe
add
add
cmp
add
push
add
add
xor
jge
mov
loop
xor
rcl
mov
pop
je
es
std
js
add
enter
cmp
mov
stos
movzx
add
test
push
pusha
lock
sub
or
js
mov
call
pop
mov
pop
shl
push
outs
cli
(bad)
mov
cmps
sbb
push
sbb
or
xor
cmp
adc
icebp
cli
(bad)
(bad)
(bad)
(bad)
(bad)
stc
cmp
stc
sbb
and
iret
or
out
pop
loope
out
xor
std
fist
(bad)
call
das
(bad)
pop
lea
rol
mov
jg
jmp
push
xchg
dec
mov
fcom
xor
xchg
jno
mov
cmp
push
cmps
sbb
shl
adc
jecxz
push
lock
aas
fist
ja
cmc
(bad)
(bad)
mov
mov
test
mov
mov
cmc
movs
jno
shr
sbb
fisttp
scas
cli
ins
jo
adc
ins
out
mov
push
(bad)
(bad)
(bad)
jmp
call
pop
mov
mov
mov
popf
sbb
jp
jmp
(bad)
(bad)
dec
movs
xchg
push
idiv
sti
mov
sti
or
fldenv
icebp
addr16
mov
(bad)
push
pushf
mov
and
mov
xor
adc
push
mov
or
js
ins
out
cmps
push
ret
inc
(bad)
(bad)
(bad)
call
inc
in
pop
push
jmp
jb
sbb
pop
and
pop
mov
push
lock
repnz
repz
out
mov
jmp
fst
neg
test
movs
pop
mov
cmc
pop
sar
or
push
jmp
push
enter
(bad)
jg
fcmove
mov
jp
std
pop
imul
int
ins
mov
lods
lods
aad
(bad)
mov
fst
jnp
(bad)
(bad)
inc
rcr
mov
push
std
jae
cmp
daa
or
out
adc
int
jmp
(bad)
push
jnp
jmp
mov
or
push
push
dec
mov
pop
ror
(bad)
(bad)
(bad)
(bad)
mov
mov
cmp
fidivr
jecxz
loop
(bad)
push
mov
out
(bad)
(bad)
dec
lock
dec
dec
adc
int3
add
ss
stos
xor
fcomip
jg
mov
loop
xor
cmp
call
call
retf
ins
inc
nop
sahf
xor
mov
(bad)
(bad)
jg
outs
cmps
push
pop
dec
imul
mov
mov
cwde
sub
movs
mov
mov
jmp
es
in
mov
mov
inc
mov
xlat
mov
xrelease
fnstsw
(bad)
(bad)
jmp
push
test
int
push
xchg
sbb
movs
ret
stos
push
inc
jmp
pop
pop
sbb
ret
push
ret
cmp
push
call
mov
dec
push
add
mov
xor
xor
mov
and
ss
adc
adc
mov
pop
dec
pop
pop
mov
(bad)
(bad)
(bad)
call
pop
inc
popf
dec
jnp
and
cwde
ret
or
(bad)
or
jmp
inc
sub
ins
lahf
ins
test
xor
std
(bad)
(bad)
loop
loop
cmps
iret
es
(bad)
(bad)
push
pand
cmp
aas
cmp
mov
aad
fisttp
sbb
mov
mov
mov
push
mov
bound
pop
push
xchg
aas
mov
mov
push
xchg
jbe
retf
ret
scas
push
push
mov
out
mov
out
add
(bad)
dec
add
cmps
xchg
or
setno
bound
fsubr
inc
ins
dec
enter
retf
cmp
xchg
mov
shl
stc
sbb
add
hlt
add
repnz
(bad)
rcr
fs
addr16
inc
push
mov
jg
lock
call
pop
xlat
jge
jmp
jge
lahf
mov
(bad)
push
(bad)
(bad)
adc
rol
jg
cmp
cmp
xor
add
mov
sti
push
(bad)
jne
(bad)
(bad)
jmp
push
xor
inc
mov
jo
adc
nop
sbb
xor
and
(bad)
call
sbb
and
pop
xchg
or
or
out
adc
adc
xchg
sub
and
es
aam
sub
xchg
cdq
jle
ds
retf
pop
mov
les
sbb
sub
inc
dec
ss
jo
and
cmp
(bad)
(bad)
in
sub
icebp
pop
mov
rcl
loope
dec
in
fimul
in
push
dec
(bad)
hlt
xor
pop
cmp
(bad)
(bad)
dec
xchg
xchg
xor
out
ret
sub
push
sub
and
pop
adc
or
sub
jmp
jae
bound
pop
dec
or
xchg
pop
call
dec
(bad)
aas
addps
xor
push
mov
mov
jl
pop
loop
mov
(bad)
(bad)
(bad)
call
mov
mov
in
ret
push
cs
mov
and
(bad)
pop
push
xor
shl
(bad)
jmp
xor
int
add
and
ins
mov
retf
(bad)
ror
movs
mov
inc
dec
dec
div
sbb
xor
(bad)
(bad)
call
ror
pop
adc
dec
jg
pop
dec
dec
xlat
retf
jmp
fcom
mov
(bad)
mov
(bad)
(bad)
inc
nop
xchg
push
jg
xlat
movs
js
push
add
mov
xor
mov
pushf
nop
jmp
ss
(bad)
(bad)
dec
cmp
cmp
scas
ds
aam
jge
test
lods
sbb
push
xchg
pslld
mov
inc
test
loopne
add
sbb
(bad)
mov
adc
mov
jmp
xchg
in
inc
push
leave
xor
and
push
dec
cli
repz
movs
pop
lods
and
aam
(bad)
push
dec
and
dec
clc
call
add
dec
into
cmc
jmp
(bad)
fild
dec
sbb
data16
shl
xchg
push
jp
jg
lock
ficomp
loope
outs
push
inc
cwde
addr16
xchg
mov
out
dec
mov
nop
adc
cmp
xchg
sti
inc
(bad)
(bad)
inc
nop
sti
lds
pop
mov
rcl
mov
jne
xchg
mov
(bad)
(bad)
(bad)
fisubr
loopne
push
ja
div
lahf
xchg
cmps
dec
jl
jecxz
add
out
pop
(bad)
(bad)
(bad)
jmp
popf
movs
mov
cwde
lods
mov
jne
retf
jbe
mov
sub
or
(bad)
(bad)
inc
(bad)
mov
(bad)
(bad)
mov
cmps
jmp
jb
lahf
xor
out
fild
jle
cmp
mov
pop
shl
ret
pop
jb
pop
cmp
sbb
jmp
cmps
mov
sub
(bad)
(bad)
call
jg
jg
outs
loopne
push
out
push
jnp
mov
xor
mov
dec
push
pushf
ja
(bad)
jg
lods
aas
in
mov
add
cmp
(bad)
(bad)
push
imul
stos
sbb
mov
dec
cmp
mov
(bad)
(bad)
dec
adc
rcr
aam
sub
mov
sbb
(bad)
push
fcmovnu
mov
call
jp
jle
jae
mov
xchg
cmp
int3
stos
(bad)
jmp
cli
pop
(bad)
cmp
pop
in
(bad)
xor
repnz
(bad)
(bad)
jp
retf
or
aaa
movs
sbb
sbb
movs
sub
mov
(bad)
call
out
cli
xchg
pop
or
pop
xchg
push
mov
mul
arpl
cli
pop
daa
ja
sti
(bad)
(bad)
(bad)
out
dec
mov
je
repnz
pop
outs
xchg
pop
arpl
mov
xor
movs
test
fcomip
jg
cmps
add
and
daa
mov
jo
fidiv
dec
lods
dec
and
fwait
call
(bad)
(bad)
(bad)
(bad)
jmp
lock
imul
pop
jp
aam
in
test
cmps
mov
adc
mov
out
cli
call
daa
scas
dec
mov
js
hlt
cmp
fdiv
clc
div
dec
xor
xor
mov
push
lds
push
push
mov
sahf
dec
(bad)
(bad)
dec
shl
hlt
jbe
into
test
fld
jns
sbb
cmp
push
rol
clc
mov
sbb
push
popa
repz
(bad)
(bad)
(bad)
jmp
lahf
push
sub
mul
sbb
add
pop
jmp
nop
retf
pushf
dec
sub
or
call
adc
stos
xor
cld
push
out
ins
jmp
lock
int
(bad)
(bad)
push
clc
rep
adc
popf
cmp
stos
push
mov
clc
lods
in
fist
mov
mov
call
int3
popf
pop
es
xchg
sub
(bad)
mov
aad
aad
xor
xor
(bad)
(bad)
inc
movs
jmp
inc
mov
shl
mov
mov
xor
mov
adc
(bad)
(bad)
(bad)
call
dec
in
jnp
push
out
push
sub
sub
nop
or
sub
call
jecxz
outs
mov
jae
mov
adc
pop
mov
mov
mov
std
out
imul
push
mov
(bad)
(bad)
(bad)
call
lock
push
or
jns
je
pop
jecxz
int3
cmp
inc
sub
jmp
pusha
dec
ror
dec
dec
ins
cdq
lods
xchg
aaa
aaa
add
and
and
mov
(bad)
(bad)
inc
jge
stc
xchg
or
inc
in
push
pop
push
xchg
pusha
mov
aad
xchg
js
mov
push
mov
cmp
jg
icebp
xor
mov
add
and
in
push
retf
(bad)
(bad)
jmp
(bad)
cdq
inc
cmps
mov
sbb
stos
fadd
test
inc
xchg
or
scas
cwde
neg
test
(bad)
aaa
std
jmp
shl
cmp
and
xor
iret
adc
(bad)
mov
xlat
sbb
fucomip
push
call
clc
(bad)
(bad)
dec
cld
inc
addr16
call
or
inc
aam
push
adc
call
(bad)
(bad)
jmp
push
inc
xchg
ins
inc
retf
in
lods
test
jno
cmp
loop
(bad)
fdivp
(bad)
fwait
cli
(bad)
(bad)
cmp
inc
sbb
out
mov
add
data16
outs
push
xchg
aad
pop
mov
cmps
jge
dec
inc
pop
mov
repz
xchg
dec
out
and
int3
sub
jmp
(bad)
hlt
fwait
sar
mov
fst
in
fsubr
mov
push
pushf
test
rcr
bound
pop
mov
(bad)
jg
in
and
cmps
push
xor
in
outs
cmp
push
(bad)
test
(bad)
(bad)
call
inc
inc
push
sub
shl
or
cmps
ins
loop
jne
pusha
ficomp
outs
cld
outs
pop
pop
pop
(bad)
inc
(bad)
std
out
(bad)
cwde
hlt
(bad)
test
loope
push
lock
pop
jb
scas
dec
dec
(bad)
(bad)
jmp
popa
and
addr16
or
(bad)
xor
gs
mul
mov
test
inc
mov
call
(bad)
(bad)
inc
shl
fsubrp
push
dec
iret
and
outs
dec
xor
jmp
imul
stos
pop
into
sub
fisttp
jmp
test
pop
and
(bad)
jg
cmp
xchg
adc
shl
push
ins
mov
(bad)
call
jg
test
retf
jmp
inc
aaa
jge
adc
ins
ja
xlat
pop
dec
call
jns
repz
push
pop
cmp
adc
or
call
loope
sub
nop
icebp
out
fild
xchg
push
sub
stos
pop
(bad)
nop
pop
mov
(bad)
jmp
xchg
lea
fild
sbb
sbb
fnstenv
aaa
jg
add
lock
pop
bound
or
(bad)
(bad)
(bad)
mov
push
xor
push
mov
cmp
mov
sti
xchg
call
leave
imul
push
shl
and
mov
push
sub
sbb
sbb
pop
and
jb
xchg
pushf
dec
or
push
test
cmp
cli
and
push
and
add
movs
add
inc
call
aaa
dec
sub
jmp
mov
lods
adc
cmp
dec
jnp
or
sbb
int
sub
(bad)
(bad)
(bad)
stc
adc
mov
pop
push
sub
pop
leave
mov
rcr
aaa
adc
(bad)
(bad)
fist
js
leave
xor
aaa
test
iret
cmp
ds
xor
cmp
push
xchg
clc
call
add
into
push
or
aas
jl
aad
add
jb
fisttp
sbb
sbb
jp
loope
(bad)
jg
jno
sub
pop
pushf
pop
ins
js
std
(bad)
mov
sub
mov
push
mov
sub
mov
sbb
aad
or
aad
xor
xor
push
(bad)
imul
out
mov
clc
jmp
inc
(bad)
int3
(bad)
mov
pop
adc
jl
sbb
or
jge
arpl
(bad)
(bad)
ffreep
jnp
fild
iret
xor
imul
jae
and
lock
mov
test
(bad)
(bad)
in
dec
lods
sbb
jo
jle
jno
inc
cs
pop
jg
xor
repnz
(bad)
(bad)
call
pop
fistp
in
pop
or
lea
cmps
not
fucom
xchg
lds
(bad)
(bad)
(bad)
dec
mov
mov
rcr
je
mov
cwde
bound
ins
dec
sbb
bound
(bad)
(bad)
out
clc
jge
(bad)
(bad)
adc
ss
int
fwait
cmp
xor
(bad)
(bad)
inc
clc
clc
dec
pop
pop
adc
fs
xchg
and
lds
push
and
bound
ins
dec
in
(bad)
(bad)
(bad)
frstor
stos
arpl
scas
js
or
test
scas
mov
sub
aam
lods
ins
es
aaa
leave
loop
daa
adc
jno
add
push
stos
rcl
ret
popa
inc
ret
int3
add
and
shl
(bad)
(bad)
(bad)
jmp
cwde
mov
stos
dec
imul
int
mov
inc
(bad)
je
(bad)
out
cli
jg
sub
data16
aaa
xchg
adc
sbb
mov
fcos
sbb
dec
xchg
xor
mov
(bad)
sbb
cmc
repnz
pop
xor
(bad)
(bad)
(bad)
push
pop
mov
or
add
fnsave
daa
and
ins
popa
xchg
mov
add
cli
mov
cdq
repnz
mov
xchg
stos
dec
push
sub
lock
(bad)
call
in
dec
cli
cmc
(bad)
les
and
push
imul
sbb
pop
push
ret
jle
shr
scas
push
jmp
mov
lds
inc
push
(bad)
sar
idiv
push
mov
dec
mov
mov
mov
fisttp
jmp
(bad)
(bad)
(bad)
cmp
stc
dec
retf
int3
call
pusha
xchg
cmp
call
outs
mov
(bad)
(bad)
jmp
jno
or
cmp
xchg
ss
cmps
cmp
jmp
(bad)
(bad)
(bad)
call
cmp
imul
paddb
xor
sahf
jmp
fcomip
(bad)
(bad)
(bad)
jmp
ja
cli
scas
int3
test
push
repnz
and
jmp
bswap
cs
sub
xor
(bad)
(bad)
inc
leave
lods
cmp
sahf
or
mov
gs
enter
repnz
or
(bad)
jmp
sbb
stos
adc
xor
push
out
push
mov
jo
retf
popf
xchg
ret
test
xchg
retf
call
scas
mov
out
and
xchg
dec
fdivr
mov
je
outs
loop
sbb
(bad)
(bad)
(bad)
cli
(bad)
out
scas
cmp
imul
fist
in
out
dec
sti
addr16
mov
or
inc
(bad)
call
lock
in
addr16
mov
ja
popa
cld
(bad)
dec
fsubr
idiv
dec
sbb
clc
(bad)
dec
enter
cmp
aam
pop
fild
icebp
mov
push
jne
ins
sti
(bad)
(bad)
(bad)
call
daa
pop
jmp
cwde
(bad)
stos
inc
leave
pop
int3
inc
movs
inc
cmp
push
and
repnz
push
xchg
jmp
adc
(bad)
dec
(bad)
fucom
push
js
mov
movs
dec
mov
in
mov
xlat
(bad)
call
mov
sbb
dec
mov
pop
dec
or
jle
(bad)
push
mov
and
cmp
xchg
test
daa
outs
outs
push
sub
cmp
push
ret
mov
inc
and
out
dec
pop
or
fnstsw
pusha
and
dec
stos
inc
push
cmps
out
push
add
push
js
push
in
iret
pop
pushf
imul
lods
sar
(bad)
cmp
in
aas
sbb
pusha
imul
pop
adc
je
jmp
cmps
call
test
mov
rcr
addr16
ds
jae
ror
(bad)
(bad)
jmp
ret
inc
loopne
mov
xor
int3
mov
in
(bad)
(bad)
dec
jo
retf
adc
pop
mov
ins
inc
data16
mov
push
mov
(bad)
(bad)
(bad)
jmp
and
mov
jp
sub
cwde
or
(bad)
mov
cdq
mov
pop
jg
std
(bad)
(bad)
push
push
sub
mov
sbb
pop
mov
jge
lock
and
push
mov
jne
jecxz
std
xor
gs
or
or
(bad)
call
clc
cmc
jl
retf
dec
sar
adc
jecxz
jmp
ss
cli
pusha
mov
adc
outs
sbb
(bad)
(bad)
jmp
xor
mov
(bad)
inc
(bad)
loop
daa
sbb
sbb
(bad)
test
icebp
(bad)
push
shr
sbb
clc
mov
push
sahf
and
sbb
push
cmp
(bad)
(bad)
(bad)
push
push
retf
lods
loope
mov
jl
jmp
dec
lds
fst
or
sbb
rcl
push
mov
mov
das
add
jmp
or
sbb
sti
(bad)
or
pusha
repz
outs
push
cmp
loopne
(bad)
(bad)
(bad)
stc
pop
xor
pop
in
fstp
or
(bad)
or
cmp
nop
sbb
xchg
stc
(bad)
mov
and
push
aaa
fsub
icebp
call
adc
test
into
adc
(bad)
push
aad
hlt
inc
enter
mov
std
(bad)
(bad)
(bad)
mov
jmp
jnp
mov
adc
mov
xchg
jmp
push
adc
stc
cmp
dec
jno
jae
(bad)
mov
inc
mov
add
shr
pop
inc
xchg
sti
xlat
jno
(bad)
jg
fmulp
mov
ja
out
sub
jge
cmp
pop
dec
movs
xchg
or
ret
inc
xor
adc
(bad)
mov
in
popa
jl
std
mov
push
bound
retf
xchg
(bad)
(bad)
std
pop
push
cmp
mov
jle
(bad)
mov
push
lods
std
add
outs
add
(bad)
mov
mov
pop
lock
jmp
(bad)
(bad)
push
and
cs
mov
and
adc
mov
das
call
mov
(bad)
jmp
mov
cwde
clc
mov
test
inc
repz
cmp
std
mov
mov
loopne
scas
shr
idiv
shr
hlt
cmps
nop
fnstcw
(bad)
push
cdq
fstp
inc
clc
ficom
mov
fnstsw
(bad)
(bad)
jmp
add
push
add
sbb
jmp
imul
in
icebp
lods
(bad)
(bad)
inc
stos
mov
fsub
push
cmp
mov
lods
cmp
pop
mov
sub
add
clc
cmp
ss
mov
fsubp
neg
test
retf
add
sbb
je
adc
gs
(bad)
(bad)
inc
mov
mov
jne
movs
xor
mov
jb
cmp
mov
push
mov
in
stc
js
jecxz
add
jns
add
mov
mov
movs
sub
(bad)
(bad)
(bad)
dec
stc
lea
jecxz
lds
xor
repz
push
loopne
cmp
push
sbb
jae
(bad)
inc
and
xchg
jge
jo
ss
imul
(bad)
pop
gs
pop
xchg
push
lock
(bad)
call
shl
pop
sbb
in
or
fwait
jne
jno
dec
mov
(bad)
fldenv
push
fs
sbb
mov
mov
mov
call
xor
daa
jmp
not
(bad)
jg
(bad)
(bad)
cmp
repnz
sbb
outs
shr
test
(bad)
jmp
add
and
arpl
leave
repz
cmp
fisub
pop
das
je
xchg
(bad)
jg
dec
adc
adc
ret
dec
gs
lahf
iret
or
pop
dec
mov
(bad)
(bad)
push
repnz
les
and
sbb
jns
call
cmp
test
push
pop
and
not
dec
stc
jae
xor
xor
(bad)
(bad)
jmp
dec
retf
hlt
xchg
icebp
mov
sbb
jl
xchg
pop
xchg
or
(bad)
(bad)
call
xchg
inc
leave
inc
cli
cmp
mov
pushf
push
adc
in
push
mov
dec
add
popf
icebp
mov
jmp
jbe
cmc
pushf
inc
xchg
call
into
(bad)
(bad)
(bad)
inc
inc
mov
xchg
mov
inc
movs
push
pushf
stos
dec
and
xchg
gs
scas
mov
aam
(bad)
mov
sbb
ds
mov
ficom
(bad)
mov
stos
inc
repnz
scas
inc
cmp
aaa
sbb
sub
ins
xchg
pop
xor
push
jl
(bad)
cmps
jmp
repnz
sbb
mov
fcmovnbe
sub
push
push
fld
(bad)
(bad)
(bad)
push
out
sti
jbe
leave
cwde
dec
aaa
jnp
iret
sbb
test
add
xchg
das
clc
jmp
shl
xchg
(bad)
int3
cwde
pop
stos
fwait
jge
or
rcl
fdiv
hlt
xlat
mov
inc
arpl
stc
jns
loop
inc
mov
gs
xor
frstor
push
into
xchg
dec
je
(bad)
mov
sbb
push
fld
mov
(bad)
jmp
pop
hlt
jp
or
aam
sub
add
fnstenv
cs
push
adc
std
scas
xor
icebp
push
dec
imul
add
xchg
pop
xchg
push
std
pusha
popf
popf
pushf
rcl
fs
push
pop
inc
mov
movs
mov
stos
sbb
dec
popa
(bad)
(bad)
(bad)
add
mov
xchg
int
outs
add
popf
aam
sbb
sub
call
loop
icebp
sbb
movs
ja
mov
push
fild
dec
jl
sub
add
gs
(bad)
(bad)
(bad)
call
loope
xor
dec
xchg
pop
add
dec
out
add
fwait
xor
les
shr
(bad)
(bad)
call
icebp
mov
mov
mov
mov
pushf
jle
mov
and
cld
(bad)
(bad)
push
je
pusha
jae
bound
outs
cmp
stos
je
jnp
lock
xchg
pop
push
mov
inc
cmp
inc
and
lods
in
retf
imul
cwde
and
dec
movntq
out
stos
pop
push
ja
sahf
lahf
xchg
outs
dec
push
sti
fbstp
(bad)
and
mov
(bad)
dec
addr16
movs
sbb
repz
dec
pop
iret
sahf
das
imul
icebp
in
sbb
(bad)
(bad)
std
int3
inc
loope
fcomip
mov
pop
ja
mov
mov
ins
fs
ss
xchg
(bad)
jmp
jecxz
ins
mov
pop
shl
mov
stc
fldenv
gs
mov
ins
mov
(bad)
(bad)
(bad)
jmp
into
mov
ret
pop
outs
xchg
ins
(bad)
nop
push
push
or
mov
iret
adc
xor
pop
jnp
(bad)
(bad)
(bad)
(bad)
call
sub
loop
inc
movs
lahf
adc
xchg
push
cmps
ror
jnp
adc
sbb
or
scas
clc
(bad)
std
jmp
xchg
pop
fiadd
nop
retf
sahf
mov
fwait
addr16
(bad)
out
xor
add
adc
aam
lods
xor
(bad)
jmp
push
dec
test
pop
out
ret
scas
(bad)
xor
mov
call
push
cld
fistp
jmp
pop
hlt
push
push
add
push
pop
sbb
cli
cmp
leave
sar
push
push
neg
(bad)
jb
lahf
and
lahf
movs
fwait
add
ja
add
repnz
stos
(bad)
(bad)
jmp
lock
jno
adc
pop
sub
add
(bad)
(bad)
call
cmp
test
jge
fistp
xchg
pop
adc
jmp
in
fld
xchg
push
int
mov
(bad)
(bad)
mov
(bad)
or
mov
jmp
mov
test
test
mov
gs
repnz
xor
(bad)
(bad)
push
call
rcl
inc
push
cmc
int3
call
outs
retf
sub
(bad)
fcomip
loopne
cmp
adc
stos
mov
popa
mov
fnsave
sbb
dec
xchg
or
inc
mov
(bad)
(bad)
(bad)
fidivr
cmp
cwde
jb
mov
out
mov
jmp
jg
cmps
mov
sub
jge
iret
mov
data16
mov
adc
inc
adc
add
es
imul
call
test
into
ret
cmp
(bad)
push
jne
xor
inc
fcom
mov
push
jb
inc
xor
sub
cli
pushf
lock
inc
sbb
into
xor
add
push
pop
(bad)
(bad)
(bad)
jmp
loopne
jbe
cmp
mov
mov
das
inc
adc
cmc
mov
xchg
(bad)
(bad)
(bad)
dec
push
int3
popf
mov
gs
mov
das
test
cwde
dec
pop
lds
daa
mov
call
icebp
add
dec
xchg
jbe
out
mov
mov
arpl
jmp
(bad)
loopne
cmp
mov
cmps
ficom
lahf
daa
in
sbb
or
adc
(bad)
(bad)
(bad)
fcomp
lea
cld
xchg
pop
mov
test
xor
jae
push
adc
(bad)
(bad)
jmp
xchg
into
int
add
inc
xor
lods
shl
fdiv
mov
push
and
mov
push
lock
jl
inc
cs
mov
fimul
push
out
mov
(bad)
call
test
add
sub
xchg
loope
mov
add
(bad)
mov
call
std
or
out
dec
mov
fstp
les
in
inc
leave
mov
std
push
push
test
(bad)
nop
fisubr
pop
cld
adc
(bad)
call
fldcw
out
cdq
xor
imul
lea
mov
mov
(bad)
jmp
in
cld
sar
dec
fsubr
popf
push
repnz
mov
sbb
(bad)
(bad)
(bad)
call
xchg
xchg
xchg
out
fstp
div
(bad)
test
lods
jmp
stos
dec
loopne
popf
int
test
jp
and
(bad)
dec
loope
pop
scas
xor
push
and
and
(bad)
(bad)
mov
int3
test
fmul
push
call
daa
xor
out
cwde
(bad)
sub
outs
clc
inc
sbb
fsubrp
jge
outs
retf
or
(bad)
fadd
(bad)
lods
retf
(bad)
(bad)
jmp
sub
mov
sar
jmp
xchg
xor
mov
sbb
(bad)
(bad)
(bad)
call
inc
leave
stc
out
sub
ins
xchg
dec
mov
mov
or
jne
fidiv
pop
mov
(bad)
jmp
cdq
xchg
pop
nop
mov
sub
xor
inc
addr16
stc
sub
(bad)
(bad)
out
clc
(bad)
jp
xchg
adc
pop
cmp
nop
int3
(bad)
mov
mov
mov
mov
pop
(bad)
mov
mov
push
jnp
data16
cmps
call
sahf
jne
add
adc
stos
push
cld
and
mov
cli
dec
push
jnp
je
dec
test
cmps
xchg
pop
inc
pop
in
xchg
and
and
in
fbstp
cmps
inc
adc
and
and
pop
std
leave
outs
in
pop
stos
sub
jp
nop
test
lahf
ret
mov
xor
(bad)
(bad)
jmp
stos
aaa
xor
ja
mov
(bad)
in
push
xchg
adc
rcr
sub
xchg
inc
(bad)
fsubr
(bad)
(bad)
(bad)
dec
div
and
mov
inc
ret
mov
scas
sbb
or
mov
dec
push
lock
mov
ins
iret
(bad)
(bad)
(bad)
jmp
mov
jno
xchg
dec
xchg
gs
push
dec
aam
sub
push
sbb
shr
cwde
xchg
(bad)
push
cli
jmp
std
jmp
lds
mov
hlt
mov
pop
mov
lods
push
(bad)
jmp
movs
(bad)
jno
sbb
daa
ds
jb
scas
pop
(bad)
(bad)
(bad)
call
mov
sbb
popf
stos
clc
mov
imul
(bad)
(bad)
(bad)
(bad)
js
daa
ror
xchg
les
jmp
xchg
pop
shl
out
fxch
popf
stos
xacquire
daa
lea
push
ja
mov
jle
loope
dec
or
aam
ret
pop
inc
and
std
(bad)
inc
ds
stos
push
in
or
push
adc
mov
loopne
mov
loopne
and
(bad)
div
lds
or
int3
in
mov
push
(bad)
(bad)
(bad)
push
add
fidivr
adc
in
push
mov
sub
sub
out
pop
mov
js
jg
(bad)
jmp
sbb
popf
call
call
push
ins
fisub
pop
xchg
cmp
jmp
fwait
cmps
out
je
inc
ja
dec
sbb
fiadd
sbb
outs
xchg
test
rcr
sub
inc
mov
push
lea
sbb
es
mov
dec
retf
daa
jnp
retf
(bad)
(bad)
(bad)
call
inc
sub
call
and
(bad)
iret
and
hlt
push
mov
stos
ja
fst
lock
cli
sti
fdiv
retf
dec
jecxz
bnd
or
in
add
(bad)
(bad)
inc
idiv
in
inc
in
xchg
out
inc
and
fdivr
mov
arpl
(bad)
cmc
fcom
sahf
shl
add
(bad)
in
sbb
push
sbb
pop
(bad)
mov
shl
xor
(bad)
call
scas
mov
mov
mov
ja
xchg
rcl
cdq
mov
add
adc
pop
mov
movs
aam
les
mov
retf
xchg
adc
add
fild
loopne
das
nop
inc
xchg
bound
ja
into
mov
rcl
in
out
lods
jle
int
jmp
shl
add
push
lock
add
push
enter
fwait
mov
cmp
mov
(bad)
(bad)
jmp
jmp
pushf
test
shl
call
mov
adc
jns
push
jge
(bad)
fimul
jg
mov
shl
retf
jbe
in
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
addr16
lods
sbb
sub
jp
out
out
scas
movs
ja
fild
mov
mov
dec
std
pop
push
dec
leave
dec
pop
(bad)
jp
fnsave
aad
adc
shl
xchg
pop
loopne
dec
sbb
call
(bad)
out
mov
sbb
mov
sub
aaa
(bad)
adc
jbe
lds
gs
or
cld
jne
ret
xchg
jne
out
mov
in
data16
sti
repnz
je
fisubr
lock
push
mov
pop
or
dec
push
subps
dec
arpl
mov
jg
(bad)
rcl
sub
push
in
sahf
cwde
jo
jmp
out
(bad)
(bad)
call
adc
or
mov
(bad)
arpl
mov
push
lds
(bad)
jmp
lock
cmp
xchg
push
pop
(bad)
call
adc
ficom
(bad)
(bad)
(bad)
jmp
push
and
push
stos
imul
adc
dec
aam
xchg
push
xchg
xchg
shr
(bad)
(bad)
dec
test
out
rcl
(bad)
jmp
xchg
rcr
sub
jnp
(bad)
(bad)
jmp
into
push
lea
xor
je
jl
mov
xlat
jns
push
aas
inc
inc
in
sti
cmp
rol
and
jecxz
pop
xchg
pop
fmul
push
fs
inc
aas
jle
xor
(bad)
pusha
fld
mov
adc
ins
or
ins
push
sbb
(bad)
(bad)
mov
push
cld
cmps
pop
dec
xor
hlt
cmp
push
xchg
sub
jecxz
(bad)
imul
inc
out
sbb
push
or
and
(bad)
xchg
fimul
(bad)
(bad)
(bad)
jmp
push
push
xchg
fdiv
jno
mov
mov
mov
fidivr
pop
outs
sbb
(bad)
(bad)
jmp
fld
fsubr
push
dec
cmc
cli
and
fbstp
(bad)
in
pushf
push
dec
mov
cmps
je
(bad)
(bad)
out
mov
dec
cmp
xchg
cmps
add
mov
jb
xchg
jg
ins
retf
les
mov
mov
sbb
fs
mov
cmps
mov
fbld
test
jge
mov
into
xlat
lock
cmp
test
loope
add
adc
das
cli
(bad)
dec
das
push
sub
dec
loope
js
mov
push
jb
or
push
ss
add
out
gs
jmp
push
push
add
fiadd
jg
or
mov
gs
adc
cmc
jmp
sub
cli
(bad)
jmp
retf
push
fst
movs
test
(bad)
(bad)
jmp
adc
push
mov
shl
(bad)
in
scas
(bad)
(bad)
(bad)
inc
push
xor
fild
xchg
enter
xchg
push
gs
in
mov
(bad)
(bad)
(bad)
jmp
mov
inc
mov
jb
mov
imul
outs
loopne
mov
and
sbb
psllq
push
fcomip
(bad)
(bad)
jnp
nop
mov
call
push
fsubr
aaa
cwde
mov
daa
(bad)
(bad)
(bad)
(bad)
ds
inc
jp
std
test
pop
call
lock
jae
in
(bad)
dec
cli
xor
xchg
mov
(bad)
imul
(bad)
(bad)
(bad)
jmp
jl
(bad)
push
popa
mov
sbb
push
into
xor
pushf
into
pop
dec
push
in
or
(bad)
(bad)
call
pusha
shl
in
push
(bad)
jg
dec
and
pop
ins
in
inc
jmp
(bad)
(bad)
dec
fisub
push
test
pusha
mov
sbb
fldcw
push
cmp
jnp
pop
imul
sub
mov
pop
cli
(bad)
fdivr
pop
test
or
out
or
ins
loope
fcmovne
jb
test
call
and
xor
jnp
js
sbb
jle
je
or
das
and
popf
push
shl
(bad)
mov
jb
lds
rcr
outs
mov
ins
inc
sub
dec
xchg
movs
call
add
call
ds
sbb
sar
dec
(bad)
and
sar
lock
(bad)
fdivr
repnz
fimul
jmp
int3
aas
movs
rcl
outs
popa
mov
icebp
pop
push
dec
cmps
(bad)
(bad)
call
mov
test
faddp
and
stos
(bad)
mov
lods
lock
lock
mov
(bad)
jae
add
push
adc
and
pop
movs
sbb
or
(bad)
jmp
push
jae
pop
xchg
and
push
icebp
std
stos
cmp
inc
cmp
in
xlat
push
mov
push
pop
fadd
mov
cs
fisubr
in
out
sub
push
xchg
(bad)
(bad)
mov
sub
inc
popf
jmp
jb
adc
mov
jmp
mov
adc
mov
mov
cmp
sti
(bad)
(bad)
(bad)
(bad)
fcmovnbe
loop
mov
outs
xor
or
sbb
adc
adc
(bad)
(bad)
jmp
dec
aam
stos
jg
mov
mov
retf
mov
sti
cs
movs
jmp
(bad)
jmp
(bad)
inc
dec
sub
and
push
sbb
push
push
cmpxchg
cmps
jno
mov
(bad)
fwait
ins
stos
xchg
aad
pop
outs
fisttp
(bad)
(bad)
out
js
das
outs
in
outs
mov
clc
or
fcomi
outs
cld
jnp
aas
lds
sbb
inc
xor
mov
or
jns
je
xchg
sub
nop
shl
and
xchg
fdivrp
test
(bad)
(bad)
mov
pop
dec
inc
sub
ja
add
enter
fucomp
out
outs
cli
aaa
inc
sub
push
rcl
push
jbe
sbb
cmc
fcomip
push
aas
rcl
dec
movs
xchg
arpl
mov
inc
(bad)
jmp
xor
cwde
pop
call
mov
into
popa
lds
call
jp
push
mov
dec
sahf
sbb
sbb
(bad)
imul
xor
push
ss
mov
fcomip
test
gs
lods
imul
imul
and
in
adc
dec
mov
inc
and
push
ficom
aas
mov
xor
mov
std
retf
mov
out
or
mov
cmp
ja
adc
fyl2x
push
mov
mov
(bad)
pop
xchg
fwait
or
(bad)
call
call
repz
adc
movs
call
cs
mov
pop
call
cmps
scas
fbld
dec
int
test
sub
adc
jmp
jg
jmp
ins
pop
iret
cmp
push
dec
stos
mov
dec
or
pop
jge
(bad)
dec
fcmovnbe
mov
fmul
xchg
xchg
or
sub
cmp
call
fisub
inc
xchg
rol
xlat
aad
cmp
mov
fbld
or
in
pop
std
(bad)
inc
outs
lock
popf
inc
dec
retf
data16
push
dec
js
test
call
inc
jmp
adc
sub
das
push
out
retf
push
test
cmp
mov
push
(bad)
(bad)
(bad)
inc
push
pop
sahf
das
int
cmp
push
stos
loope
lods
jne
jo
fisttp
push
ins
jbe
(bad)
(bad)
inc
and
into
and
movs
adc
jmp
cmp
and
and
mov
jae
fimul
mov
idiv
cs
inc
cli
add
push
cmp
popa
sbb
dec
xchg
fistp
(bad)
inc
not
add
or
(bad)
(bad)
(bad)
push
pop
adc
inc
mov
popa
arpl
shl
cmps
inc
sub
xor
adc
(bad)
(bad)
(bad)
(bad)
fcomp
out
jo
(bad)
(bad)
int
mov
xchg
cmp
inc
mov
gs
adc
pop
xor
(bad)
jo
xchg
cmp
(bad)
fisubr
push
xlat
push
jmp
call
mov
add
adc
mov
es
xor
and
int
out
(bad)
cs
scas
ds
stos
outs
or
(bad)
(bad)
dec
shl
test
and
shr
in
mov
and
and
rol
xor
lds
adc
ret
cmp
push
sbb
sbb
jmp
inc
fisub
jb
(bad)
cld
ret
loop
test
xor
add
xchg
sbb
icebp
push
mov
xor
mov
cs
dec
mov
loope
retf
lds
inc
push
xchg
(bad)
(bad)
std
fidivr
and
das
dec
push
repnz
xchg
(bad)
(bad)
(bad)
(bad)
jg
movs
imul
jp
sahf
in
pop
and
jne
pop
(bad)
push
fisubr
or
inc
ret
in
ret
out
das
(bad)
jb
shl
shr
sahf
and
daa
cld
(bad)
(bad)
(bad)
fild
adc
adc
mov
push
nop
xchg
sar
add
sub
call
lea
pop
mov
fiadd
xchg
(bad)
(bad)
(bad)
mov
adc
leave
sti
push
mov
(bad)
jns
cli
xor
sbb
cli
mov
(bad)
dec
xor
inc
or
mov
mov
and
pop
sub
fnsave
shr
rcl
mov
(bad)
lds
lea
lods
sbb
cmps
(bad)
dec
jp
idiv
and
je
pushf
mov
inc
xchg
jmp
(bad)
fbld
hlt
push
inc
mov
ss
(bad)
(bad)
in
call
cdq
push
mul
pusha
cdq
mov
dec
fbstp
ja
ins
pop
add
mov
ror
fdiv
retf
loop
sub
rcr
(bad)
ins
pop
sbb
into
jmp
xchg
stos
ins
cld
inc
leave
shl
jp
std
xchg
(bad)
(bad)
push
fsub
arpl
push
xor
jl
or
lock
(bad)
iret
sbb
fstp
sub
mov
mov
and
mov
into
es
fdivr
(bad)
dec
mov
sbb
sahf
sbb
mov
add
call
aad
call
(bad)
(bad)
fist
daa
fisubr
ret
dec
xchg
jne
jbe
pop
push
jno
scas
leave
inc
and
(bad)
call
jmp
xchg
and
fimul
fnstenv
inc
push
js
cli
xor
(bad)
(bad)
fdivr
push
nop
mov
inc
scas
fdivr
mov
paddq
mov
test
and
iret
in
or
fisttp
lods
adc
adc
jg
dec
inc
fld
mov
enter
xchg
adc
(bad)
(bad)
dec
retf
push
mov
sbb
ret
repnz
cmp
sbb
loope
cdq
ins
icebp
fimul
mov
fiadd
(bad)
(bad)
dec
adc
sbb
stc
je
mov
fld
sbb
push
or
inc
jge
jnp
adc
(bad)
(bad)
(bad)
jmp
xchg
mov
loope
push
and
nop
into
cmp
enter
ins
pop
or
push
adc
xor
mov
(bad)
test
cmp
xchg
sub
push
jmp
(bad)
call
add
inc
mov
fdivr
pop
stos
inc
loopne
inc
cmp
push
hlt
repnz
xlat
dec
fisub
inc
pushf
(bad)
(bad)
(bad)
call
(bad)
cld
push
(bad)
bound
sbb
and
and
mov
pop
cmp
(bad)
(bad)
(bad)
(bad)
jl
inc
lods
(bad)
nop
out
jae
(bad)
push
jle
inc
push
sbb
xchg
lods
pusha
pop
sub
js
mov
shr
cli
(bad)
(bad)
mov
popf
test
aam
jmp
jne
fst
xor
(bad)
(bad)
(bad)
dec
shl
out
(bad)
nop
push
or
jmp
push
mov
inc
xor
and
(bad)
(bad)
js
leave
not
rol
(bad)
dec
rcr
mov
adc
ja
fadd
shl
out
push
cmp
push
mov
cmp
jmp
cmps
mov
(bad)
(bad)
(bad)
call
xor
shl
pop
jno
imul
xor
add
(bad)
(bad)
(bad)
inc
mov
arpl
adc
jne
test
cmp
push
xor
or
push
jmp
inc
jns
das
push
lods
mov
ds
push
inc
lods
pushf
sahf
(bad)
cmp
jae
in
sub
int3
ja
scas
addr16
(bad)
(bad)
(bad)
cmp
push
mov
cli
lods
movs
call
aad
cdq
cld
cwde
sbb
rcr
(bad)
jmp
addr16
adc
ret
and
test
jmp
mov
outs
loopne
(bad)
call
mov
les
mov
out
out
pop
jl
dec
dec
add
call
mov
cwde
pop
jl
mov
cli
cmp
out
lock
(bad)
(bad)
jmp
mov
iret
pslld
cmp
dec
push
or
sbb
movs
mov
dec
fs
dec
loop
arpl
mov
push
lea
dec
sub
fstp
es
movs
nop
fdiv
add
stc
lea
push
imul
sub
aaa
jmp
cwde
cmp
fbld
aas
add
adc
sahf
or
sahf
xchg
test
or
cs
repnz
cmp
cmps
aaa
cmps
pop
dec
dec
fcmovbe
jbe
cmc
int
sub
ret
(bad)
dec
mov
jne
cwde
outs
call
jbe
in
jbe
inc
aad
scas
pop
outs
cli
(bad)
inc
mov
sbb
pop
sbb
mov
mov
stos
imul
xor
cmp
loope
mov
sub
cdq
xor
sbb
jle
push
ins
and
mov
cli
loope
cmp
mov
xor
inc
pop
mov
int3
into
repz
(bad)
(bad)
(bad)
call
fcmovnbe
pop
inc
xor
add
jns
iret
cmp
jecxz
pop
push
aam
xchg
jno
and
push
mov
(bad)
(bad)
inc
inc
or
xor
inc
adc
icebp
cmp
stos
push
mov
clc
mov
scas
and
adc
pop
adc
sti
or
arpl
jg
test
jb
dec
data16
xchg
movs
icebp
cs
(bad)
(bad)
(bad)
call
fwait
lea
test
add
xor
xor
mov
mov
sar
xchg
push
outs
pop
inc
mov
(bad)
(bad)
cwde
stos
xchg
inc
and
cmp
(bad)
(bad)
jmp
aam
mov
(bad)
out
(bad)
ficomp
add
add
les
mov
jg
(bad)
call
mov
inc
dec
mov
adc
in
push
push
repnz
pop
inc
cld
sbb
inc
xchg
test
mov
jle
jge
(bad)
(bad)
push
add
dec
arpl
push
jle
add
out
ror
pop
(bad)
aas
push
data16
jnp
inc
pop
icebp
(bad)
call
lods
xchg
pusha
sbb
cmp
mov
ror
out
sub
(bad)
(bad)
(bad)
cmp
mov
cmp
in
out
jns
or
jbe
jp
xchg
lahf
int
adc
sbb
fdivrp
(bad)
(bad)
jmp
cmp
mov
cwde
shr
aam
fist
ds
mov
mov
inc
adc
sbb
push
cld
popa
loop
push
xchg
xchg
inc
loop
mov
not
fcomip
(bad)
jmp
jbe
push
pushf
retf
push
scas
mov
iret
outs
xchg
out
arpl
(bad)
push
inc
lods
mov
(bad)
(bad)
(bad)
push
aaa
push
push
pop
mov
push
sub
pop
lods
sub
mov
outs
and
mov
enter
sbb
imul
cmp
ja
nop
stos
add
outs
dec
scas
cmps
push
mov
inc
call
out
retf
retf
mov
(bad)
(bad)
inc
dec
mov
dec
adc
add
jmp
sbb
push
or
sahf
pop
mov
and
(bad)
(bad)
mov
aaa
push
jle
mov
xor
cmps
fdiv
sar
movs
mov
sub
ret
add
jg
call
ds
jo
mov
mov
jmp
scas
xor
xor
jmp
inc
mov
int
and
mov
xchg
sub
pop
sbb
inc
sbb
mov
mov
rol
repnz
dec
or
(bad)
sbb
push
(bad)
push
jl
jae
shl
inc
sub
mov
out
push
push
dec
jbe
and
(bad)
(bad)
jmp
mov
and
sub
dec
outs
lahf
add
pop
sbb
mov
popf
lock
mov
pop
xor
mov
(bad)
jmp
sar
mov
js
daa
sbb
inc
dec
pop
std
call
cld
inc
and
movs
repnz
mov
sub
pushw
ret
mov
movs
(bad)
(bad)
push
hlt
loopne
push
icebp
std
(bad)
neg
ds
mov
xchg
xor
add
mov
pop
inc
or
xor
jne
gs
lods
xchg
(bad)
(bad)
jmp
inc
cmp
str
rol
xor
outs
mov
inc
shr
mov
out
nop
mov
inc
mov
(bad)
call
cmp
cmp
push
mov
xchg
cmps
add
(bad)
clc
(bad)
(bad)
(bad)
out
or
std
dec
xor
movs
fistp
fisttp
cmp
xor
dec
push
sbb
(bad)
(bad)
jmp
mov
push
shr
mov
push
test
repz
into
in
bound
cmc
hlt
push
je
in
(bad)
push
lods
es
cld
cmp
mov
dec
sub
xchg
push
and
push
jge
repz
test
ror
cmp
sbb
clc
packssdw
(bad)
(bad)
(bad)
jmp
lds
fst
sub
sbb
add
int
push
punpcklwd
popa
(bad)
(bad)
(bad)
call
les
and
daa
push
loop
push
and
xchg
int
jp
mov
js
or
(bad)
(bad)
jg
or
jl
mov
xchg
fsubrp
mov
fidivr
rol
mov
mov
push
jb
enter
add
mov
into
dec
and
pop
retf
inc
xlat
aas
xor
add
sahf
cli
inc
int
mov
mov
jbe
jmp
cmc
pop
daa
pop
xchg
fmul
mov
adc
(bad)
(bad)
(bad)
call
pop
dec
lock
outs
out
ret
loop
or
mov
fimul
(bad)
(bad)
(bad)
jmp
pop
inc
sbb
(bad)
lods
in
sub
jno
mov
xor
in
push
bound
pop
sar
(bad)
jmp
popf
dec
or
jg
xchg
jno
push
jae
sub
out
out
in
test
or
cmc
cld
js
jl
inc
adc
adc
or
retf
cmp
test
push
push
mov
jmp
test
cmp
int3
outs
das
daa
jle
mov
xor
mov
fcomip
(bad)
push
jp
clc
adc
iret
mov
call
add
ret
mov
pop
jl
add
adc
(bad)
(bad)
(bad)
push
adc
pop
fstp
(bad)
clc
dec
int3
mov
gs
(bad)
ss
frstor
es
(bad)
(bad)
(bad)
push
jns
xor
aam
cmovg
inc
push
cwde
dec
xchg
jo
mov
xchg
mov
jg
repnz
push
cs
enter
inc
jp
or
sbb
push
fwait
add
aad
inc
dec
das
jge
fisttp
or
mov
loope
xchg
repz
inc
ror
or
outs
dec
push
mov
fldcw
scas
or
jecxz
sbb
int3
gs
mov
std
(bad)
jmp
xchg
aam
mov
inc
aad
mov
cwde
out
enter
xlat
cmp
rol
(bad)
(bad)
call
pop
xchg
add
stos
sub
enter
mov
ror
and
call
mov
push
fwait
mov
addr16
out
mov
adc
(bad)
mov
pop
and
mov
inc
fld
nop
fwait
or
fucomi
hlt
scas
inc
(bad)
call
js
lods
imul
add
mov
mov
inc
stos
sar
push
inc
retf
xchg
jmp
rcl
jp
pop
xchg
xchg
lahf
ss
mov
fdecstp
dec
call
test
imul
xor
and
mov
sbb
pop
inc
fmul
and
jo
(bad)
(bad)
jg
sar
inc
push
cmovbe
and
xchg
int3
into
and
jp
fisub
scas
(bad)
cmp
or
loopne
cld
and
(bad)
(bad)
(bad)
std
xchg
mov
ins
fisttp
mov
(bad)
jmp
ret
adc
add
sar
(bad)
(bad)
dec
jge
and
scas
js
xchg
mov
daa
cs
push
fst
jge
push
out
(bad)
(bad)
jmp
adc
js
xchg
add
dec
inc
stos
xrelease
(bad)
(bad)
jmp
pop
xchg
xchg
jb
stos
adc
and
test
jno
mov
cli
mov
xor
fdivr
call
hlt
int
xchg
or
jle
jmp
enter
mov
jl
ss
ficomp
ins
add
push
dec
pop
sar
pop
sub
retf
mov
ins
(bad)
(bad)
(bad)
fist
xchg
shr
pop
icebp
shl
xchg
shl
xchg
iret
push
mov
xor
(bad)
(bad)
(bad)
jmp
repz
fs
sub
jno
xchg
ret
pop
xor
mov
cs
push
jns
sbb
pop
jmp
(bad)
in
out
mov
xor
fsub
xor
or
inc
pop
mov
add
bound
(bad)
(bad)
(bad)
jns
jnp
jno
stc
les
mov
xchg
mov
xchg
mov
shl
ins
shl
in
(bad)
fcomip
call
push
mov
pop
clc
call
leave
or
xor
mov
enter
das
and
daa
push
sub
jg
and
and
jp
mov
aaa
pop
rcl
(bad)
(bad)
(bad)
jmp
in
mov
outs
lds
sar
es
inc
aam
aas
mov
dec
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
push
out
and
adc
xor
mov
ins
xor
fld
(bad)
jmp
add
inc
daa
inc
push
mov
jne
rol
pop
pop
jge
dec
aas
xchg
cmp
sub
pop
ret
aaa
pop
loop
push
(bad)
(bad)
(bad)
call
push
les
adc
lock
inc
cmp
jb
scas
xchg
scas
ret
lods
xor
jg
fwait
xor
jmp
hlt
cmp
mov
or
(bad)
push
push
add
not
xchg
shr
mov
je
bound
aas
(bad)
lahf
movs
mov
(bad)
fucomip
jmp
push
cmp
inc
test
pop
xor
je
or
movs
mov
pushf
test
fisttp
enter
(bad)
jmp
icebp
js
dec
cmp
pop
out
xor
xlat
(bad)
sub
xlat
movs
popf
mov
std
adc
(bad)
(bad)
jmp
adc
daa
cmps
out
mov
cmp
inc
xor
js
popf
lahf
dec
stos
cld
in
mov
jmp
dec
jge
or
jne
addr16
cmps
push
addr16
test
mov
(bad)
(bad)
xor
outs
scas
pop
dec
hlt
dec
hlt
dec
push
pop
mov
mov
jmp
xchg
ret
inc
(bad)
pop
cmc
(bad)
jmp
aas
dec
or
or
push
scas
mov
inc
mov
jmp
pop
fcmovb
daa
or
int3
fbstp
mov
imul
mov
jle
push
sub
(bad)
(bad)
jg
push
test
and
mov
je
aaa
sub
and
sbb
push
push
mov
and
or
mov
inc
es
pop
frstpm(287
(bad)
xchg
xor
sub
or
inc
pop
dec
ja
fild
(bad)
fcomip
lea
xor
cdq
icebp
mov
es
xor
(bad)
push
xchg
sbb
retf
and
jge
mov
lods
xchg
push
lds
(bad)
(bad)
cmp
add
repnz
push
sub
inc
(bad)
or
add
mov
ss
jecxz
jg
jmp
rcl
call
clc
test
sub
(bad)
(bad)
dec
mov
cmps
xorps
push
in
mov
fdiv
pop
fstp
jmp
jecxz
inc
and
cmp
dec
push
(bad)
(bad)
(bad)
call
fistp
imul
sbb
or
or
jbe
dec
sbb
cld
outs
push
cmp
mov
push
pop
ret
mov
loopne
push
mov
xchg
inc
or
cwde
es
xor
(bad)
inc
std
sbb
sahf
iret
ja
shr
in
sub
inc
int3
test
loop
xchg
and
xchg
xchg
and
sub
(bad)
(bad)
(bad)
fbld
pusha
loope
cs
ss
jns
dec
(bad)
lods
cs
cli
rol
adc
(bad)
(bad)
jmp
cmp
jle
or
jnp
xchg
aam
pop
pop
and
dec
mov
lahf
(bad)
cmps
mov
(bad)
(bad)
dec
aam
loope
lods
les
dec
ja
jp
movs
fs
loopne
adc
push
(bad)
push
scas
push
and
loop
das
clc
arpl
cmp
mov
and
(bad)
push
mov
mov
and
mov
cmp
dec
jmp
int
xchg
(bad)
(bad)
inc
shr
push
sub
inc
add
dec
pop
push
and
stos
sub
aam
sub
mov
inc
clc
cmp
mov
arpl
hlt
and
dec
push
pop
xchg
call
sub
ret
or
jno
xchg
or
int
add
pop
(bad)
(bad)
(bad)
push
add
outs
mov
mov
push
out
mov
test
cld
cmp
sbb
mov
jbe
(bad)
(bad)
inc
mov
or
mov
jl
or
and
push
push
pop
js
or
ins
pop
inc
sbb
mov
(bad)
pop
lods
jl
out
cs
in
push
repnz
push
or
xor
fs
xchg
ja
out
neg
mov
(bad)
(bad)
(bad)
fist
lock
addr16
jns
pop
and
cli
cmp
imul
push
lods
lahf
mov
leave
cli
cld
(bad)
(bad)
inc
jg
mov
(bad)
sub
cmc
sub
fwait
stos
mov
scas
xor
inc
ror
or
(bad)
(bad)
cmp
sub
enter
push
dec
xchg
mov
movs
out
cmp
fdivr
mov
push
hlt
aam
mov
fidiv
dec
movs
cs
popa
push
call
(bad)
(bad)
(bad)
jmp
adc
shr
es
scas
add
pushf
outs
push
leave
push
test
ret
fs
dec
add
sub
cld
test
retf
hlt
ret
outs
lahf
pop
sbb
inc
enter
movs
cmps
int
stos
ins
test
mov
in
dec
scas
sar
dec
ja
jae
add
popa
and
pop
loope
mov
aas
cmps
pop
loope
mov
call
sub
addr16
arpl
mov
data16
aad
iret
add
jmp
mov
hlt
adc
shl
adc
lock
call
mov
or
push
sub
outs
shr
mov
adc
pushf
pop
or
sbb
pop
or
add
inc
pop
xor
sub
inc
or
jmp
(bad)
mov
ins
add
jmp
dec
pushf
and
pop
loop
lahf
or
cmp
aad
push
cmc
nop
movs
bound
pop
mov
jmp
mov
leave
cmp
retf
xchg
jg
out
sub
jmp
jecxz
inc
jbe
in
adc
(bad)
aad
mov
scas
nop
pusha
je
inc
jecxz
inc
repnz
cli
loopne
(bad)
(bad)
dec
shl
sti
mov
and
outs
loope
(bad)
mov
xchg
pop
inc
or
xor
test
sub
cwde
cmps
mov
sti
inc
imul
(bad)
jg
or
ds
icebp
and
pop
cmps
dec
dec
add
and
lock
movs
test
pop
xor
rol
mov
stc
mov
inc
(bad)
(bad)
(bad)
jmp
dec
sbb
mov
jge
(bad)
(bad)
xlat
adc
pop
cmp
(bad)
sbb
pop
pop
lock
call
aas
add
jp
(bad)
loop
push
sbb
adc
xchg
pop
clc
(bad)
call
lea
fmul
mov
jne
pop
fisttp
fisubr
loope
sub
inc
or
cmp
lock
(bad)
(bad)
jmp
or
mov
mov
jge
add
sbb
xchg
cwde
and
and
(bad)
dec
push
pop
jb
dec
(bad)
jmp
(bad)
repnz
jne
(bad)
push
add
retf
add
push
lock
loopne
call
sbb
out
loope
imul
sub
add
test
cmp
repnz
loop
jmp
shr
popa
or
imul
sbb
cmp
(bad)
(bad)
(bad)
call
or
jns
mov
pusha
dec
jg
mov
in
nop
sbb
div
daa
lahf
mov
(bad)
(bad)
(bad)
jg
(bad)
or
mov
aam
mov
cmp
adc
push
test
jmp
(bad)
mov
ss
jl
push
(bad)
push
xor
(bad)
(bad)
push
cld
pop
out
lds
mov
or
lock
stos
fwait
add
xchg
jmp
jp
cli
in
xchg
and
and
imul
(bad)
(bad)
(bad)
jmp
pop
sti
mov
xchg
call
rcr
mov
mov
dec
sar
les
jmp
call
lock
sub
ret
mov
test
add
push
fstp
clc
(bad)
(bad)
(bad)
inc
cmp
js
wbinvd
sar
imul
ret
and
jmp
aad
(bad)
push
cmp
(bad)
in
adc
cld
and
xchg
mov
fcmovu
jne
mov
lods
xchg
inc
test
(bad)
(bad)
dec
inc
pinsrw
in
or
adc
mov
mov
jmp
push
or
test
mov
test
jl
and
and
and
(bad)
(bad)
(bad)
jmp
daa
inc
into
push
xor
cmp
jg
mov
and
xor
out
lock
pop
mov
mov
icebp
test
cli
loop
push
ins
(bad)
(bad)
dec
mov
xchg
push
push
jb
in
adc
xor
push
icebp
mov
(bad)
(bad)
(bad)
(bad)
cmp
fwait
mov
ins
sub
idiv
sub
jno
es
dec
iret
xchg
int
(bad)
(bad)
(bad)
jmp
shr
das
(bad)
sub
xchg
sar
cmps
jmp
mov
pop
sub
push
das
cli
or
mov
xor
cmp
aam
xchg
(bad)
(bad)
inc
xor
dec
clc
jp
pcmpgtw
test
scas
ds
in
(bad)
mov
bound
mov
ja
(bad)
(bad)
dec
mov
xor
xchg
xor
dec
xlat
stc
les
popf
aam
out
xchg
pop
push
scas
(bad)
(bad)
(bad)
call
test
jo
and
pop
push
imul
or
push
sahf
aas
jae
xor
dec
xchg
movs
mul
out
inc
fwait
xchg
push
push
(bad)
sub
xchg
xchg
mov
jmp
adc
jp
shl
push
cmps
and
lea
in
adc
xor
test
into
mov
stos
(bad)
mov
int
add
pop
dec
aaa
adc
push
(bad)
call
mov
xor
cmp
adc
sti
aam
cwde
adc
add
test
(bad)
(bad)
(bad)
call
add
je
imul
mov
xchg
test
pop
xchg
je
out
sub
mov
(bad)
jmp
jae
xor
jmp
xchg
outs
or
cli
and
mov
(bad)
jmp
cwde
sbb
and
mov
addr16
mov
loope
xor
mov
mov
or
out
sbb
or
push
scas
mov
(bad)
std
rcl
mov
cld
add
iret
call
scas
out
or
push
mov
(bad)
(bad)
(bad)
inc
mov
sti
push
push
(bad)
test
stc
cmp
hlt
and
mov
fidivr
cmp
pop
ins
pushf
fcomip
(bad)
call
int
retf
pop
(bad)
pop
nop
sbb
or
into
sbb
(bad)
jmp
mov
xor
pop
jnp
fwait
push
jmp
push
je
inc
ficom
add
(bad)
jmp
mov
mov
movs
mov
inc
and
out
sahf
jne
es
(bad)
jmp
out
and
sub
mov
jae
aad
mov
xchg
inc
(bad)
fwait
out
(bad)
(bad)
mov
add
jl
clc
or
out
push
push
xlat
ror
inc
pushf
pandn
out
(bad)
(bad)
(bad)
inc
adc
xchg
jg
pop
(bad)
je
or
adc
mov
cmp
mov
pusha
mov
mov
lahf
pop
or
out
jbe
out
inc
push
cld
lods
fnclex
sbb
pop
frstor
fcom
popf
fstp
inc
(bad)
mov
popf
xchg
leave
es
and
clc
jo
(bad)
(bad)
dec
scas
or
push
popa
cmc
cmp
(bad)
mov
lock
(bad)
jmp
adc
mov
rcr
mov
inc
mov
sub
ja
jns
(bad)
dec
mov
in
je
xor
lods
xchg
and
add
push
and
pop
loopne
rcr
jmp
mov
pop
nop
pop
mov
sbb
cmc
dec
loope
popf
add
xchg
add
jo
push
or
sub
js
mov
cmp
in
(bad)
and
popa
outs
(bad)
adc
or
mov
ret
sub
fldenv
sar
clc
dec
ss
mov
and
(bad)
repnz
pop
in
(bad)
jmp
push
movs
xor
jecxz
cmc
jge
xchg
push
jmp
mov
xchg
aas
out
jmp
(bad)
cmp
jle
mov
cmc
xchg
(bad)
push
mov
cmp
pop
push
das
mov
aaa
jns
movs
sub
movs
(bad)
in
in
pop
sub
pop
mov
adc
adc
ss
(bad)
jmp
(bad)
push
push
fldenv
aad
jle
imul
fsubr
mov
(bad)
ficomp
test
retf
dec
push
push
jae
fadd
das
cli
(bad)
(bad)
mov
pushf
inc
sub
mov
in
jecxz
scas
imul
(bad)
push
std
(bad)
cmp
adc
push
xor
add
arpl
nop
cmp
(bad)
jg
fisub
es
fisttp
in
push
and
and
repnz
lahf
in
sbb
sar
(bad)
(bad)
dec
loope
cmp
dec
out
and
pop
test
gs
clc
add
sbb
les
cld
(bad)
mov
adc
add
xchg
and
sar
jg
hlt
ror
pop
cmp
xchg
lock
(bad)
(bad)
mov
loopne
inc
test
jmp
stos
or
inc
mov
(bad)
mov
mov
and
push
cmp
mov
(bad)
(bad)
(bad)
jg
mov
xchg
stc
or
cmps
sbb
push
push
ds
inc
(bad)
xor
addr16
inc
int
in
popa
(bad)
mov
lock
stos
mov
pop
(bad)
(bad)
(bad)
dec
dec
or
fwait
sub
repnz
adc
mov
nop
xchg
push
arpl
lods
call
jle
dec
sar
ror
popf
pushf
jbe
jle
test
fdivr
fisttp
addr16
out
xchg
cmps
addr16
cmp
add
bound
mov
in
(bad)
mov
test
mov
push
mov
cmp
enter
hlt
dec
ret
lahf
pop
(bad)
jmp
jge
ret
mov
cmp
mov
xchg
sub
test
or
popf
cmp
icebp
int
push
(bad)
(bad)
(bad)
(bad)
clc
rcr
data16
cli
aaa
xchg
mov
inc
push
mov
aad
inc
js
int3
outs
cli
(bad)
jmp
add
cmc
pop
adc
test
inc
leave
pop
adc
repz
(bad)
(bad)
(bad)
(bad)
cli
or
imul
sub
pushf
movs
sbb
add
out
sbb
jns
and
xchg
jmp
(bad)
(bad)
inc
and
xchg
cwde
sub
sbb
mov
rol
mov
jmp
dec
push
xchg
nop
int3
xor
fadd
ret
mov
(bad)
(bad)
fistp
int3
xor
gs
and
push
and
sbb
repz
es
jo
(bad)
(bad)
(bad)
(bad)
fcomp
dec
not
(bad)
test
cs
cmc
pop
sbb
mov
(bad)
(bad)
(bad)
jmp
out
inc
dec
rcl
and
shl
cmps
mov
sub
push
data16
cmp
(bad)
(bad)
inc
retfw
lahf
outs
sub
mov
sahf
scas
fwait
lods
xor
push
rcr
jb
pop
sar
das
cli
(bad)
fsubp
dec
scas
les
sub
aam
int
int
jnp
sti
sub
out
(bad)
push
std
jmp
push
(bad)
dec
mov
mov
(bad)
arpl
dec
ins
clc
cmp
adc
dec
xchg
js
test
push
jmp
(bad)
(bad)
jmp
je
cmp
das
mov
outs
mov
xor
dec
mov
idiv
(bad)
call
lods
cmc
add
jl
shl
adc
adc
frstor
hlt
(bad)
(bad)
mov
jmp
cwde
adc
jg
add
inc
dec
int3
push
mov
mov
jno
stos
sbb
push
idiv
loop
(bad)
cld
inc
gs
rol
lahf
and
in
addr16
ja
out
repnz
sar
adc
fwait
(bad)
(bad)
mov
out
sar
test
dec
push
pop
pop
mov
(bad)
(bad)
jg
fld
pop
in
enter
or
fisttp
inc
dec
les
sbb
rcl
inc
push
add
pop
push
sub
in
cwde
or
outs
ficomp
out
aas
inc
test
xchg
repz
dec
sahf
sbb
(bad)
cmps
xchg
pushf
imul
inc
ror
pop
pop
(bad)
(bad)
(bad)
(bad)
(bad)
std
sbb
aad
mov
push
aas
xor
pop
fild
xor
cmp
aas
lods
(bad)
(bad)
(bad)
inc
out
mov
mov
xchg
mov
fiadd
lock
loopne
pop
mov
(bad)
inc
lods
bound
pushf
xlat
or
scas
push
lea
jb
sbb
lods
mov
in
lods
out
mov
rcl
mov
push
scas
aas
inc
dec
std
mov
(bad)
(bad)
inc
pushf
xor
mov
cmp
push
(bad)
(bad)
dec
mov
dec
call
mov
mov
mov
mov
inc
cmc
mov
(bad)
(bad)
(bad)
call
cmp
cmp
shl
or
in
jmp
es
cmc
es
xor
inc
jmp
jl
repnz
jg
(bad)
(bad)
call
lea
or
gs
xor
xor
mov
dec
sbb
es
jg
icebp
inc
and
sub
mov
and
inc
pop
call
imul
xor
out
shr
xchg
test
and
lea
(bad)
push
sub
xchg
into
sbb
inc
shr
movs
fldenv
test
(bad)
jmp
cli
(bad)
fild
mov
sub
test
les
pushf
fmul
mov
(bad)
(bad)
aas
or
adc
dec
(bad)
dec
js
lods
cmp
pop
jo
lds
(bad)
(bad)
(bad)
ds
mov
movs
sub
bnd
je
pop
retf
ret
fist
repnz
jl
inc
iret
cdq
(bad)
out
xor
sbb
ja
mov
movs
cld
add
mov
sbb
cwde
xchg
pusha
jge
pop
push
fs
dec
repz
out
gs
fst
xor
sbb
cmp
cli
ret
sbb
inc
xchg
and
dec
and
dec
pop
cmp
sbb
leave
cmp
cmps
push
add
inc
imul
clc
retf
mov
(bad)
inc
cmp
adc
lahf
cmps
popf
mov
jb
push
sub
(bad)
(bad)
(bad)
jmp
faddp
aaa
dec
mov
cdq
or
addr16
inc
into
cld
sbb
xor
pop
fadd
(bad)
(bad)
jns
ficomp
out
in
test
dec
mov
rol
jo
mov
xchg
add
jmp
es
cmc
adc
or
dec
add
cld
(bad)
(bad)
mov
pop
add
jp
call
in
(bad)
jmp
pop
ss
aas
add
call
(bad)
fwait
test
push
sub
fbstp
addr16
mov
xchg
(bad)
(bad)
and
lods
sahf
mov
sar
cmp
arpl
xlat
ror
(bad)
mov
test
cli
(bad)
jmp
fisub
push
jns
ins
adc
mov
mov
inc
data16
sub
inc
stos
jp
scas
mov
stos
push
clc
(bad)
mov
pop
inc
cmp
aas
ins
pop
test
adc
xchg
inc
dec
add
(bad)
(bad)
(bad)
mov
mov
out
xor
push
into
xchg
leave
das
out
pusha
mov
cmc
pop
pop
rcl
jmp
push
call
pop
outs
jne
cld
push
fidiv
(bad)
sbb
add
out
mov
data16
mov
(bad)
jg
fiadd
stc
pop
cmc
sub
pop
mov
jg
mov
sbb
add
xchg
cld
jp
add
call
dec
les
daa
and
or
or
adc
mov
iret
dec
and
add
xchg
cmp
xchg
lods
fist
dec
movs
aas
iret
mov
(bad)
(bad)
(bad)
dec
sub
loopne
adc
in
ds
mov
push
test
xchg
call
inc
(bad)
iret
loopne
retf
mov
hlt
add
xor
clc
clc
xlat
in
mov
add
sub
add
cmps
push
mov
sub
mov
sbb
(bad)
mov
movs
xchg
mov
(bad)
push
adc
shl
pop
ror
or
xchg
mov
(bad)
(bad)
(bad)
push
test
dec
sar
shr
push
jmp
(bad)
int3
lods
gs
imul
movs
icebp
jp
pop
cmp
adc
jle
leave
retf
adc
sti
mov
mov
xchg
out
cli
xor
add
pop
popa
daa
adc
adc
clc
(bad)
inc
cdq
into
push
xchg
(bad)
sahf
or
xchg
pop
(bad)
sti
cmp
push
(bad)
bound
xchg
xor
xchg
test
pop
add
sbb
rcl
mov
jae
repnz
lahf
out
(bad)
(bad)
(bad)
(bad)
ds
gs
sub
fnstsw
xor
stos
pop
dec
cmp
clc
nop
mov
jne
xor
sbb
jmp
ror
aaa
stc
dec
xchg
jp
mov
(bad)
(bad)
(bad)
fcomp
and
add
or
jp
adc
hlt
sti
aaa
std
(bad)
dec
stos
js
xchg
fwait
retf
int
push
xchg
test
push
adc
(bad)
inc
(bad)
(bad)
(bad)
call
mov
push
xor
cmp
adc
xchg
(bad)
jne
stos
push
ins
pop
lea
fsub
enter
(bad)
(bad)
jnp
mov
xchg
fcmovu
pop
cli
sub
mov
mov
rol
cmps
sbb
outs
adc
push
fild
xor
(bad)
(bad)
mov
dec
(bad)
add
mov
add
xchg
in
mov
mov
cmc
call
jmp
loope
call
je
pop
int3
jo
out
mov
dec
hlt
movs
lahf
(bad)
(bad)
(bad)
inc
es
inc
xor
inc
push
sub
push
cmp
mov
jns
push
cmp
(bad)
(bad)
dec
bound
in
cmps
add
int3
or
push
nop
or
aam
mov
cld
icebp
xor
or
add
(bad)
call
sahf
aam
cmp
outs
xor
mov
jbe
(bad)
(bad)
jmp
or
cmps
adc
mov
imul
fwait
out
push
jne
(bad)
(bad)
(bad)
dec
rol
je
out
mov
push
inc
xchg
push
out
(bad)
cmc
xchg
or
(bad)
fcomp
(bad)
(bad)
jmp
xlat
push
cmp
pop
xor
sbb
test
push
aas
neg
retf
sbb
call
loope
jge
and
xchg
jle
cmp
cmp
std
jno
stos
ins
push
fisttp
(bad)
(bad)
(bad)
call
outs
es
imul
sbb
rol
pop
rcl
in
sbb
push
stos
pop
lahf
dec
(bad)
(bad)
mov
rcl
sub
sbb
int
call
movs
cmp
(bad)
call
push
stos
push
mov
js
sbb
or
(bad)
(bad)
(bad)
push
loop
and
popa
mov
mov
pmullw
xchg
sbb
or
mov
(bad)
mov
enter
dec
dec
pop
or
sar
pop
repnz
icebp
xchg
inc
sbb
mov
or
xchg
cmps
and
jb
aad
jns
push
stos
or
scas
jns
push
mov
dec
cmp
adc
adc
(bad)
mov
popf
or
mov
adc
stc
fisubr
(bad)
(bad)
(bad)
(bad)
clc
aas
add
push
push
adc
(bad)
pop
sbb
jl
or
call
mov
xchg
ins
dec
dec
jmp
ins
or
call
cwde
mov
dec
sbb
or
repnz
call
adc
inc
ins
xchg
jl
jp
xor
add
mov
(bad)
(bad)
(bad)
jns
int3
push
lock
dec
jne
jle
gs
aam
movs
and
xchg
sub
outs
and
(bad)
inc
iret
stos
push
jae
cmp
jmp
dec
sub
adc
popa
data16
adc
call
mov
and
int
sbb
out
call
inc
mov
push
jae
push
repz
(bad)
(bad)
(bad)
(bad)
push
pop
cmps
in
mov
test
and
es
adc
fild
popa
(bad)
(bad)
(bad)
(bad)
in
aas
pusha
xor
xchg
push
mov
inc
and
mov
mov
fwait
sbb
loopne
sahf
jmp
cli
call
adc
rsm
mov
dec
call
push
or
cdq
add
(bad)
(bad)
fstp
lahf
jle
mov
(bad)
in
mov
cmp
jo
dec
adc
jecxz
test
xchg
or
(bad)
jg
jne
imul
sbb
inc
call
mov
vphaddubd
and
push
lods
sbb
mov
(bad)
out
cld
cs
xlat
inc
stos
dec
mov
xor
cdq
jb
(bad)
(bad)
(bad)
fsubrp
inc
cmp
inc
pop
sbb
jle
inc
test
mov
mov
inc
inc
hlt
fild
call
push
std
inc
dec
rol
push
xchg
(bad)
(bad)
(bad)
push
mov
cmp
(bad)
sub
leave
add
das
dec
repnz
sbb
mov
(bad)
(bad)
(bad)
inc
mov
xchg
jnp
cdq
in
(bad)
xor
mov
jmp
out
cwde
dec
cs
js
and
mov
jmp
loopne
mov
inc
lods
xlat
fcom
xchg
jns
int3
or
(bad)
(bad)
dec
repz
ss
call
mov
(bad)
fs
inc
rol
mov
pusha
dec
int3
je
xchg
push
int3
(bad)
(bad)
(bad)
(bad)
out
inc
std
add
mov
mov
jmp
push
sbb
fldcw
dec
js
jmp
test
(bad)
adc
shl
jbe
hlt
jmp
sub
jnp
mov
xchg
fimul
push
int3
in
adc
sbb
cs
jmp
xchg
adc
jg
jnp
jl
mov
out
fstp
sbb
out
push
std
mov
les
int3
addr16
inc
fcomp
adc
lock
(bad)
cmp
aad
cmp
lds
(bad)
(bad)
(bad)
fisttp
out
fisubr
push
loop
stos
dec
dec
bound
push
in
push
push
jae
(bad)
(bad)
(bad)
(bad)
mov
jmp
retf
cdq
cdq
retf
pop
int
imul
add
pushf
pop
(bad)
mov
loop
(bad)
(bad)
(bad)
jmp
pop
mov
mov
or
pop
scas
loopne
pop
test
mov
std
inc
movs
xchg
cmps
jnp
and
(bad)
(bad)
call
mov
call
sahf
ss
loop
inc
xor
retf
test
(bad)
(bad)
dec
sub
sahf
aas
jl
ins
mov
push
fild
arpl
repnz
(bad)
jmp
outs
adc
fs
mov
pop
ins
aaa
pop
bound
push
(bad)
(bad)
(bad)
dec
dec
(bad)
push
icebp
ss
scas
cmp
test
enter
dec
(bad)
cmp
(bad)
(bad)
dec
fmul
mov
outs
retf
out
sti
mov
test
fcmovu
jge
inc
cwde
xor
(bad)
(bad)
(bad)
out
outs
mov
loope
sbb
das
inc
pop
xchg
push
je
inc
cwde
push
dec
lds
jb
cdq
pop
(bad)
(bad)
(bad)
call
dec
xor
fcomp
jmp
call
mov
sub
and
call
jg
hlt
je
sbb
or
(bad)
dec
lock
sbb
test
xchg
outs
pushf
mov
sbb
cld
jmp
pop
sbb
push
sbb
mov
push
(bad)
(bad)
(bad)
(bad)
cmp
dec
jne
sbb
jnp
jbe
mov
(bad)
ret
sub
push
xchg
add
jmp
cmp
imul
repz
mov
icebp
xchg
sahf
mov
jb
mov
dec
push
dec
lock
ret
popf
push
xor
test
call
(bad)
dec
scas
loope
icebp
mov
(bad)
cmp
in
aaa
and
arpl
(bad)
(bad)
(bad)
jmp
inc
(bad)
xchg
(bad)
lds
adc
imul
adc
out
jb
(bad)
(bad)
(bad)
push
shl
lahf
ins
add
pusha
stos
aaa
mov
inc
add
xor
pop
mov
inc
pop
mov
push
(bad)
(bad)
(bad)
(bad)
out
imul
sbb
shl
push
and
outs
rcr
inc
inc
lahf
fld
fs
sti
sti
pop
xor
(bad)
(bad)
(bad)
call
ret
mov
aam
shl
dec
lods
repnz
scas
addr16
pop
mov
(bad)
scas
cli
jo
pop
mov
add
pop
scas
xlat
aam
stos
retf
jno
pop
mov
lea
jp
and
(bad)
retf
(bad)
(bad)
push
ja
arpl
add
sbb
stos
dec
sti
jmp
mov
mov
call
(bad)
(bad)
(bad)
jle
imul
and
mov
ins
retf
out
scas
repnz
sbb
test
mov
push
or
pop
jl
out
cli
cmp
call
fs
mov
jmp
or
fs
sbb
les
(bad)
jmp
pop
imul
cdq
lock
and
mov
imul
outs
call
xlat
push
sub
jmp
arpl
sbb
mov
imul
lods
aam
aam
stc
mov
add
pop
dec
cmc
(bad)
(bad)
jg
lods
test
push
loopne
jg
push
jo
out
sbb
out
jo
cmp
es
ds
or
inc
sbb
xchg
aaa
scas
push
fs
mov
(bad)
(bad)
(bad)
stc
sbb
add
mov
and
mov
pop
out
push
mov
dec
add
(bad)
fistp
inc
sub
lds
nop
jbe
mov
stc
scas
(bad)
call
xchg
xor
loopne
aam
mov
dec
jae
in
cmp
jb
(bad)
(bad)
(bad)
fnstenv
mov
xchg
fbstp
sub
jmp
test
sbb
popa
das
shl
xchg
mov
mov
mov
mov
bnd
retf
or
call
idiv
inc
call
mov
popa
push
jno
shr
dec
out
dec
dec
inc
cmp
les
(bad)
(bad)
(bad)
push
push
out
in
inc
jle
xchg
mov
cmps
movs
fcom
cs
(bad)
(bad)
(bad)
call
sbb
xchg
(bad)
cmc
stc
and
inc
scas
sub
dec
(bad)
add
movs
sub
dec
jecxz
mov
pop
push
rcl
movs
push
cld
dec
pop
retf
pusha
mov
jnp
and
ror
ja
jl
sbb
ret
imul
fsubr
cld
jne
mov
xor
bound
adc
rol
call
loopne
jnp
out
retf
pop
mov
dec
(bad)
inc
rcl
daa
mov
(bad)
(bad)
(bad)
push
inc
mov
fwait
pushf
cmp
hlt
(bad)
sbb
repz
jp
sahf
xchg
fdivr
or
iret
push
mov
xchg
ret
ss
jmp
es
(bad)
cmp
sub
(bad)
push
mov
call
(bad)
int
sub
adc
int3
add
(bad)
fild
push
(bad)
cmps
xor
popf
xor
mov
dec
ret
and
or
mov
sub
movs
push
mov
shr
mov
pop
(bad)
cmps
loop
add
jmp
or
jmp
push
pop
cmp
mov
mov
adc
pusha
mov
jmp
sbb
(bad)
(bad)
(bad)
jmp
jl
mov
and
mov
popa
lock
aas
add
cli
ss
(bad)
(bad)
(bad)
call
movs
and
sbb
fcmovnbe
pop
out
xchg
div
(bad)
(bad)
(bad)
call
push
scas
test
sbb
pop
or
push
jmp
cmp
jnp
xlat
sub
push
cmp
(bad)
(bad)
dec
push
popf
fwait
jmp
push
jns
jecxz
arpl
push
jae
sub
fucomp
fsubr
jle
aam
call
add
or
arpl
and
in
sbb
inc
cld
dec
inc
inc
lods
mov
loop
and
mov
mov
and
and
dec
(bad)
(bad)
(bad)
jg
adc
mul
aas
enter
sbb
ret
inc
cmc
push
jns
mov
push
inc
mov
(bad)
(bad)
call
into
jb
dec
call
mov
rcl
pop
push
lahf
push
ins
test
test
xchg
daa
retf
push
outs
iret
repz
retf
push
dec
mov
leave
and
and
test
aad
cli
inc
dec
sbb
push
push
inc
ret
sub
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
cmp
dec
(bad)
lds
iret
cwde
fcom
push
aaa
and
es
imul
xlat
ror
push
pop
lods
add
add
das
sar
sbb
inc
enter
je
enter
jmp
add
lods
pop
sbb
sbb
mov
cmps
shl
(bad)
inc
aam
mov
les
js
dec
rol
mov
call
pop
ins
imul
or
das
mov
mov
in
call
dec
cs
je
xchg
add
push
pop
mov
push
mov
aam
(bad)
out
adc
inc
xchg
rcl
daa
push
mov
jg
jmp
inc
(bad)
mov
mov
fs
out
adc
nop
push
outs
push
xor
enter
(bad)
(bad)
mov
test
add
xor
mov
ret
rcr
(bad)
sub
mov
shl
data16
mov
and
xor
(bad)
(bad)
(bad)
(bad)
jmp
pop
and
ror
ins
xor
inc
ins
aaa
fnstcw
stos
loop
add
(bad)
push
and
pusha
in
mov
outs
pop
sub
xchg
mov
dec
dec
cmp
add
sti
call
sub
into
and
sahf
adc
mov
lahf
pop
ins
ja
call
pop
outs
adc
icebp
jp
sbb
and
mov
stos
or
cmp
mov
pop
push
mov
mov
cli
pop
(bad)
jmp
(bad)
(bad)
call
push
mov
jmp
adc
scas
sbb
push
mov
adc
or
(bad)
(bad)
call
and
pop
and
lahf
and
call
jecxz
and
jmp
(bad)
(bad)
jg
rol
div
inc
mov
movs
xchg
add
jno
test
das
and
(bad)
dec
and
pop
inc
add
fadd
and
std
(bad)
inc
mov
das
scas
in
inc
pop
inc
je
dec
or
into
and
adc
call
inc
mov
inc
dec
jg
pop
inc
movs
sbb
adc
or
xchg
pop
outs
(bad)
(bad)
(bad)
fist
mov
pop
cli
les
js
outs
stc
sub
jns
rol
test
(bad)
push
not
xchg
pusha
(bad)
ror
xlat
xchg
or
xchg
cwde
fist
sbb
adc
bnd
add
(bad)
inc
fiadd
and
cdq
xchg
add
leave
xor
mov
popf
jbe
aam
jns
pop
daa
int
mov
push
hlt
(bad)
(bad)
inc
ret
add
call
ror
fidivr
fild
daa
push
or
(bad)
(bad)
(bad)
fisttp
je
mov
and
out
inc
fucomip
adc
fbstp
or
std
(bad)
mov
das
pop
jp
cmp
test
dec
(bad)
dec
pop
cs
mov
or
inc
jns
pop
dec
clc
mov
(bad)
push
fdivr
out
pop
popa
push
sub
repnz
sub
repz
arpl
(bad)
call
jg
mov
sub
push
stos
jecxz
mov
mov
data16
and
stc
out
add
(bad)
(bad)
(bad)
(bad)
cmp
inc
aaa
movs
repnz
mov
imul
fsubr
xor
(bad)
rcr
mov
inc
ret
mov
jbe
(bad)
(bad)
(bad)
(bad)
jp
gs
cmc
sub
ds
call
push
xchg
or
in
jecxz
ja
sbb
dec
shr
dec
pop
dec
stos
jge
in
lock
push
(bad)
push
push
xchg
fisttp
mov
(bad)
(bad)
(bad)
push
sahf
and
inc
cmp
cmp
gs
inc
push
sub
or
sar
mov
jle
test
jg
call
mov
arpl
leave
iret
in
jno
or
punpckhwd
(bad)
(bad)
jge
fwait
jno
mov
xor
jno
and
icebp
cmp
nop
push
imul
ret
out
cdq
scas
cld
pop
leave
dec
out
sti
(bad)
(bad)
jg
push
xor
pusha
cmp
sbb
scas
in
pop
fbld
mov
push
sbb
mov
or
lods
or
pop
addr16
std
(bad)
(bad)
jle
mov
push
fucomip
mov
ins
and
xor
rol
aad
js
ja
add
(bad)
(bad)
mov
xchg
mov
dec
cdq
out
and
cmc
push
mov
into
xchg
ret
adc
hlt
(bad)
(bad)
dec
sub
xchg
xchg
adc
lock
ret
cld
xchg
xor
into
sahf
mov
mov
scas
imul
add
dec
xor
push
aaa
adc
pop
pop
and
adc
stc
fcmovnb
popa
mov
loop
pop
adc
icebp
push
out
into
lea
xchg
xchg
pop
mov
push
add
push
xor
pop
ja
inc
gs
test
(bad)
push
test
cmps
cli
dec
push
cdq
sub
out
adc
cld
call
push
pop
push
jmp
(bad)
(bad)
fisttp
mov
leave
test
jecxz
mov
dec
mov
dec
int
in
(bad)
call
outs
pop
inc
jo
popa
fnsave
cli
arpl
ins
test
cmp
xlat
data16
mov
scas
and
cmc
movsx
xchg
cmp
addr16
mov
(bad)
(bad)
dec
in
(bad)
pop
adc
ins
cmp
je
push
enter
adc
div
fadd
mov
pusha
adc
scas
mov
(bad)
inc
stc
jns
pop
jle
jns
pop
mov
sub
test
cs
sbb
(bad)
(bad)
(bad)
jmp
mov
pop
dec
mov
jo
inc
add
mov
dec
sbb
sub
dec
clc
fst
jl
hlt
(bad)
jmp
mov
ss
and
ror
adc
mov
jb
int3
(bad)
(bad)
(bad)
dec
cmc
pop
or
mov
in
fidiv
mov
add
(bad)
outs
jmp
shl
(bad)
(bad)
(bad)
(bad)
cmp
fstp
mov
lahf
push
xchg
pop
inc
sub
mov
xchg
jg
popf
push
icebp
(bad)
outs
sub
(bad)
(bad)
call
xchg
cdq
mov
inc
or
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
cmp
pop
std
adc
sbb
xbegin
loope
mov
fld
icebp
jl
cmps
mov
mov
scas
xor
fxch
lock
lock
ret
int
not
pop
(bad)
(bad)
(bad)
push
sahf
sti
jmp
(bad)
mov
addr16
sub
into
aaa
std
pusha
fisub
dec
pusha
dec
and
(bad)
mov
shl
xor
xchg
adc
mov
loopne
mov
lods
lods
push
and
(bad)
(bad)
(bad)
inc
stos
mov
cs
retf
xchg
inc
imul
in
mov
(bad)
xor
fidiv
jmp
adc
sub
sub
imul
lods
pop
pop
movs
adc
mov
dec
mov
mov
push
sbb
fld
(bad)
jg
push
bound
or
push
pop
cmp
aas
imul
call
rcl
(bad)
jp
cwde
jne
jp
mov
sbb
sti
mov
bound
dec
ret
jb
xlat
adc
mov
push
mov
cmp
push
sub
out
xchg
(bad)
scas
stos
add
push
dec
jb
aad
rol
xor
and
scas
or
jg
das
or
neg
outs
and
jge
leave
pop
movs
push
dec
movs
sbb
xor
inc
jno
aaa
jne
int3
fadd
pop
(bad)
fild
call
std
imul
or
jae
adc
xor
gs
pop
inc
icebp
std
push
(bad)
(bad)
(bad)
jmp
mov
aas
or
fstp
dec
pop
aam
lahf
call
outs
aaa
(bad)
(bad)
(bad)
ds
(bad)
push
jae
pushf
cmps
cmps
ja
movsx
addr16
mov
xchg
push
xchg
sub
in
pop
cmc
mov
(bad)
inc
ins
mov
ins
xor
cmp
mov
sub
cmp
and
test
stc
in
ret
ds
pop
cdq
mov
adc
inc
mov
leave
fstp
(bad)
call
add
loope
add
movs
inc
daa
cld
cld
mov
dec
daa
mov
int
mov
in
xor
(bad)
cmp
les
(bad)
cli
and
ds
fwait
push
std
jno
dec
stos
and
jbe
gs
lahf
cs
(bad)
(bad)
call
dec
mov
sti
ja
add
fwait
loope
jne
movs
scas
cld
bnd
scas
and
fwait
js
adc
test
jnp
jo
call
ds
fs
add
push
and
retf
stos
(bad)
call
xor
mov
repz
inc
jge
retf
mov
jmp
push
test
dec
test
call
or
inc
pop
dec
jmp
fdivr
mov
daa
mov
xor
push
sub
inc
mov
xchg
fs
(bad)
call
cli
stc
aad
or
fs
cli
retf
dec
xor
pop
int
aad
cmp
and
jp
adc
or
dec
rol
call
jmp
cld
retf
mov
dec
movs
and
sbb
jmp
sbb
fnstenv
(bad)
mov
jb
cs
push
xlat
(bad)
cs
jg
cmc
pop
nop
adc
(bad)
cmp
xor
fdivr
rol
in
(bad)
loopne
test
pop
inc
nop
dec
(bad)
(bad)
(bad)
push
adc
push
pop
push
xchg
and
or
imul
push
leave
pushf
shl
inc
cs
mov
(bad)
call
ds
mov
mov
cmc
jl
push
pop
adc
fbstp
int3
sub
xlat
shl
es
xor
mov
repnz
call
and
push
jg
push
sub
adc
cmp
mov
xor
fwait
(bad)
jmp
nop
rcr
adc
xchg
pop
sbb
popf
mov
mov
js
(bad)
jg
pop
pop
mov
sub
cmp
or
fidivr
(bad)
(bad)
cmp
jp
daa
mov
mov
or
mov
xchg
pop
aad
xchg
or
jmp
or
mov
addr16
in
(bad)
lods
mov
dec
sub
cmc
jle
push
(bad)
(bad)
(bad)
(bad)
jg
cmp
sbb
popa
mov
mov
addr16
pop
pop
mov
mov
out
pop
cld
dec
xchg
jne
sar
add
pop
inc
add
ins
faddp
(bad)
mov
stc
repnz
ja
cmps
and
jmp
and
inc
cli
frstor
mov
(bad)
(bad)
push
outs
fstp
cli
push
push
daa
xor
das
test
stc
jnp
add
jae
mov
(bad)
push
jle
push
shr
sti
xor
cmp
xchg
out
mov
hlt
(bad)
(bad)
(bad)
dec
jle
xchg
xchg
aad
fstenv
fdivp
xchg
(bad)
test
sub
jmp
hlt
(bad)
(bad)
(bad)
dec
cld
sub
mov
push
out
fcom
enter
add
dec
sub
mov
stos
popf
cmps
mov
pop
es
adc
sbb
call
add
push
and
xor
mov
es
(bad)
stc
pushf
je
gs
cmp
(bad)
jmp
adc
hlt
arpl
inc
push
addr16
mov
sub
movs
cmc
mov
(bad)
(bad)
(bad)
call
and
sub
mov
scas
jae
sbb
adc
jns
cmp
call
sti
xchg
cmp
jae
pop
jmp
or
out
or
stos
push
(bad)
(bad)
jg
repz
pop
mov
push
sahf
ret
retf
clc
jo
retf
es
pop
push
push
clc
push
(bad)
(bad)
(bad)
dec
cdq
rol
add
loope
push
shl
adc
in
pusha
(bad)
xchg
push
inc
inc
sbb
outs
jmp
pop
adc
xchg
pop
je
or
movs
push
adc
ficomp
lahf
(bad)
(bad)
(bad)
call
inc
mov
cmp
fsubr
out
xchg
movs
dec
adc
in
repz
jmp
call
cmp
xchg
adc
stos
test
adc
fiadd
sti
loope
scas
lods
sbb
jl
mov
out
mov
jo
ds
mov
shl
out
mov
sahf
and
(bad)
(bad)
call
imul
mul
mov
xchg
les
iret
ffree
jbe
out
(bad)
(bad)
in
push
sub
mov
je
test
test
sub
jo
jns
int
call
icebp
jmp
sbb
xor
hlt
mov
inc
xor
pop
xor
imul
les
jg
lods
(bad)
(bad)
(bad)
push
mov
mov
pop
ret
pop
mov
or
pop
pop
sub
stos
fild
mov
dec
lods
(bad)
(bad)
(bad)
(bad)
jg
lds
iret
out
xchg
enter
dec
mov
ss
sbb
cs
jp
imul
(bad)
(bad)
(bad)
inc
push
cmp
imul
out
in
fild
div
outs
bound
lock
(bad)
(bad)
jmp
out
mov
inc
cmp
test
cdq
and
xchg
(bad)
dec
push
adc
(bad)
dec
aad
lahf
cmp
or
pop
cmp
push
pop
xchg
(bad)
(bad)
(bad)
jmp
ret
or
sbb
fist
ret
sbb
inc
clc
icebp
xchg
pushf
es
(bad)
(bad)
call
loope
jg
les
pop
mov
sub
pop
bound
mov
jmp
sub
jmp
test
mov
(bad)
dec
ins
lock
(bad)
inc
lahf
xchg
das
rol
out
mov
test
mov
mov
inc
push
jge
jmp
stos
sbb
adc
xor
in
daa
fs
das
and
jl
scas
bnd
(bad)
jge
(bad)
(bad)
(bad)
(bad)
mov
dec
cwde
pop
je
aaa
test
xchg
outs
repnz
sti
ret
jmp
add
retf
popa
repnz
sub
cdq
out
aad
xchg
and
adc
(bad)
(bad)
inc
retf
push
lahf
pushf
pop
imul
in
ja
pop
jmp
pop
xchg
scas
inc
inc
test
sbb
in
call
std
(bad)
out
sbb
mov
retf
xor
(bad)
lods
enter
lahf
inc
loop
pushw
(bad)
(bad)
call
outs
stos
call
cdq
sti
arpl
rcr
adc
push
ret
push
ins
sbb
(bad)
(bad)
push
push
out
ja
loop
bound
pop
pop
stc
pop
mov
mov
jg
(bad)
dec
and
mov
cmp
in
dec
(bad)
(bad)
(bad)
jmp
into
gs
hlt
shl
ja
mov
ror
adc
push
das
mov
(bad)
(bad)
(bad)
mov
into
or
cmps
loopne
and
scas
scas
in
ss
movs
jb
gs
sub
aaa
sub
xor
or
push
xchg
addr16
xchg
mov
fistp
and
mov
(bad)
(bad)
jmp
call
test
(bad)
xchg
xchg
xor
stos
mov
push
les
cmc
or
(bad)
call
xor
clc
loop
adc
mov
dec
lods
xchg
jbe
add
pop
jp
ror
pop
sbb
cmp
les
sbb
fdiv
(bad)
pop
loop
mov
add
jne
retf
mov
(bad)
jbe
cmc
push
(bad)
in
cmp
mov
push
fsubrp
js
mov
push
sub
dec
loop
jbe
out
mov
push
(bad)
mov
js
daa
and
jmp
(bad)
(bad)
(bad)
(bad)
cmp
out
mov
movs
fcomip
test
inc
push
pop
sbb
js
mov
test
cmps
aam
cmp
lahf
inc
shl
cs
stc
pop
cmp
(bad)
ins
xor
jnp
mov
outs
inc
(bad)
(bad)
(bad)
call
repnz
shl
mov
(bad)
sub
xchg
adc
je
icebp
popa
(bad)
(bad)
jmp
inc
push
stc
sub
and
cmc
mov
idiv
pop
inc
rol
or
call
hlt
jae
popa
inc
ins
call
jp
and
dec
rol
inc
pop
mov
mov
or
cmps
mov
cwde
or
das
xchg
jb
(bad)
(bad)
(bad)
(bad)
mov
loop
xor
ins
ins
ror
scas
test
jae
ror
daa
adc
dec
xor
push
call
call
scas
icebp
or
mov
mov
(bad)
cmp
adc
(bad)
jmp
hlt
mov
inc
add
imul
fdiv
inc
fs
cmp
std
(bad)
jmp
aam
pop
das
xlat
and
jmp
and
cwde
je
js
jmp
dec
jbe
push
push
cmp
inc
cld
(bad)
jg
push
inc
out
mov
mov
addr16
inc
jne
jmp
mov
push
test
cmc
adc
push
mov
or
mov
popf
jmp
jmp
cmp
pop
outs
lods
mov
dec
movs
repz
(bad)
(bad)
jmp
cmp
inc
out
pop
repz
out
cld
jns
cmp
add
adc
sar
mul
mov
and
sbb
rcl
sbb
repz
(bad)
call
push
sub
call
repnz
cmp
pop
mov
leave
das
adc
int3
icebp
mov
jbe
outs
dec
(bad)
(bad)
(bad)
(bad)
jmp
xchg
push
xchg
dec
dec
(bad)
dec
jl
iret
jmp
cmp
in
lahf
or
(bad)
call
out
test
mov
dec
bound
outs
or
cmp
ja
jns
push
inc
lds
out
imul
adc
jp
daa
xchg
inc
fs
mov
stos
adc
jo
inc
mov
popf
inc
mov
fs
push
mov
jg
jne
popa
lock
sbb
push
hlt
xchg
js
cmp
cmp
imul
xor
lahf
xor
in
jns
jbe
adc
push
bound
repnz
dec
ins
dec
test
(bad)
push
jmp
xor
movs
ds
jns
inc
xchg
in
fidivr
fsubr
inc
sbb
(bad)
(bad)
push
push
mov
nop
jb
mov
mov
cmp
mov
aad
test
push
jle
in
(bad)
(bad)
aad
(bad)
scas
push
ins
push
xchg
(bad)
jg
dec
test
mov
imul
in
jge
cli
mov
(bad)
(bad)
jmp
sub
sub
cmp
mov
retf
neg
test
je
mov
mov
test
pop
cmp
aam
push
(bad)
ret
cli
(bad)
(bad)
jmp
push
push
out
es
fisttp
or
and
in
mov
clc
(bad)
out
loop
cmp
inc
leave
popf
(bad)
fcmovnbe
jmp
retf
cmp
cmps
cdq
ss
(bad)
fisub
rol
dec
pop
ja
hlt
jmp
dec
fnsave
bound
push
movs
push
mov
xor
cmps
sbb
push
xchg
test
push
ja
xor
das
pop
pop
push
adc
or
push
(bad)
(bad)
dec
xor
sbb
jl
daa
aad
push
cs
stos
mov
pop
pop
sar
(bad)
(bad)
(bad)
std
rcr
sbb
(bad)
xchg
ror
adc
and
or
(bad)
(bad)
(bad)
(bad)
mov
jae
outs
test
mov
movs
mov
(bad)
jb
(bad)
and
push
pusha
ja
jmp
cli
jmp
fsubr
cmp
enter
adc
ins
test
mov
(bad)
jmp
jns
rol
cmp
hlt
mov
pop
and
cmp
dec
arpl
jb
sub
adc
pop
jp
lock
(bad)
jmp
cdq
sbb
int3
pop
(bad)
(bad)
mov
push
iret
lods
pop
jb
cmps
mov
lods
push
aas
(bad)
jp
pop
inc
lock
and
jbe
lods
cmp
adc
xor
jg
xchg
xchg
push
and
pop
push
fisub
pop
jmp
test
jmp
cli
(bad)
(bad)
inc
outs
test
ret
jns
push
pop
ds
xlat
out
push
jo
aaa
fs
aam
(bad)
dec
push
mov
mov
jg
jo
inc
into
cmps
data16
jmp
push
scas
fist
and
gs
or
in
jne
(bad)
(bad)
(bad)
cmp
xchg
xchg
test
daa
ret
test
jmp
xlat
pop
std
(bad)
(bad)
jmp
sahf
int
out
(bad)
mov
fsub
mov
in
repz
mov
adc
dec
push
push
(bad)
fcomip
ja
xor
in
mov
movs
sbb
xchg
sahf
mov
out
(bad)
data16
inc
mov
push
es
push
test
stos
in
pop
xor
inc
add
fdivr
inc
stos
or
(bad)
(bad)
mov
pop
mov
push
and
(bad)
not
popa
or
movs
or
mov
dec
xchg
xor
adc
or
stos
out
jg
inc
inc
xchg
fwait
jle
push
inc
lock
pusha
leave
popa
adc
(bad)
(bad)
(bad)
jmp
adc
iret
xchg
sub
mov
movs
push
xlat
xchg
repnz
(bad)
push
adc
push
ud1
(bad)
pop
sbb
add
push
cwde
call
and
mov
xchg
push
jmp
mov
sbb
addr16
push
xchg
mov
sbb
(bad)
movs
movs
(bad)
dec
test
inc
and
scas
icebp
mov
popa
loope
push
(bad)
inc
jl
int
repnz
mov
mov
(bad)
imul
jmp
push
(bad)
(bad)
mov
stos
and
mov
sub
jl
imul
cmps
sbb
cld
(bad)
in
jnp
stos
daa
dec
jp
nop
jecxz
es
and
test
neg
(bad)
(bad)
(bad)
jmp
pop
cmp
mov
cmp
xchg
xor
ds
or
mov
pop
pop
push
add
das
cli
stos
jmp
idiv
cmp
cmp
jg
cdq
pop
imul
lock
call
push
or
dec
or
div
mov
mov
js
sub
(bad)
(bad)
jmp
adc
in
aad
inc
push
mov
rcl
xchg
or
xchg
fadd
add
push
retf
sar
xor
add
fcos
scas
js
scas
adc
adc
mov
into
push
fmul
or
(bad)
(bad)
aas
int3
(bad)
(bad)
push
iret
mov
jmp
sub
xchg
adc
mov
rcl
jns
and
adc
push
les
(bad)
(bad)
jmp
std
sbb
or
cmp
(bad)
xor
and
aaa
push
mov
mov
inc
ror
mov
sub
add
cmp
(bad)
cmp
addr16
xor
ret
nop
loopne
dec
inc
shl
(bad)
(bad)
call
sbb
adc
mov
or
jb
iret
xor
xor
inc
and
cmps
add
sbb
adc
mov
test
(bad)
(bad)
(bad)
(bad)
fbstp
adc
jl
in
or
xor
or
outs
cmps
pop
pop
or
iret
dec
leave
call
scas
cli
call
mov
loope
adc
and
mov
mov
inc
cmps
jl
mov
jo
push
push
sahf
mov
jl
sub
jmp
iret
cli
rcl
ret
je
in
loope
and
push
inc
outs
neg
(bad)
(bad)
(bad)
call
sub
test
and
out
sbb
dec
inc
int
rol
(bad)
jnp
(bad)
(bad)
(bad)
dec
inc
rol
add
sub
nop
sbb
(bad)
cmc
mov
outs
cmp
lahf
(bad)
dec
or
out
popa
inc
mov
adc
mov
(bad)
(bad)
(bad)
inc
push
sti
pop
pop
retf
inc
fisubr
ret
inc
retf
mov
repz
sar
dec
dec
dec
xchg
(bad)
mov
call
data16
cmp
dec
into
sbb
les
adc
(bad)
(bad)
in
lods
mov
popf
retf
adc
push
and
push
dec
add
pop
lea
mov
mov
cmp
pop
pop
mov
mov
jge
fbld
(bad)
inc
adc
mov
aaa
push
push
mov
xor
dec
sub
cmp
adc
pop
xchg
outs
jmp
repnz
out
jl
push
repnz
(bad)
dec
out
mov
shr
call
jo
pushf
call
loopne
(bad)
inc
push
jecxz
test
mov
pop
hlt
ins
jns
pop
pop
xchg
mov
xchg
cmp
and
call
pushf
cld
(bad)
pop
adc
out
sahf
mov
cmp
add
dec
retf
sbb
ret
push
jno
sub
imul
ss
imul
jp
jno
dec
lock
xor
push
(bad)
push
jmp
ss
(bad)
arpl
xchg
fucomip
mov
(bad)
std
addr16
cmc
add
push
fcomp
(bad)
(bad)
(bad)
(bad)
fprem1
lods
ss
cmp
xlat
mov
or
xor
inc
xchg
sbb
push
in
dec
and
xchg
(bad)
(bad)
(bad)
mov
jle
xchg
jecxz
out
test
mov
(bad)
(bad)
jmp
hlt
mov
or
ins
ficomp
movs
jbe
pop
addr16
dec
(bad)
(bad)
(bad)
dec
jmp
(bad)
xor
and
mov
push
cli
mov
add
cmp
gs
mov
(bad)
mov
jne
imul
sbb
rol
cmps
mov
push
hlt
or
(bad)
call
retf
xchg
fadd
dec
sbb
cli
inc
ins
mov
test
(bad)
jg
inc
es
sbb
cld
fcomp
aaa
mov
xchg
lock
jg
clc
pop
ja
(bad)
call
std
rcl
dec
mov
xor
add
and
mov
fistp
scas
xchg
cmp
mov
mov
call
mov
ins
push
sbb
ror
mov
xchg
inc
(bad)
mov
jg
enter
(bad)
mov
add
xor
mov
xor
xchg
cmc
jle
jl
push
and
or
dec
jge
iret
sub
jge
fstp
mov
(bad)
(bad)
dec
cld
out
push
inc
lods
xor
in
push
cwde
lahf
mov
xor
sub
(bad)
(bad)
push
lea
inc
jnp
in
inc
test
test
pusha
or
mov
add
cli
test
pop
lock
popa
fnstsw
call
nop
out
mov
ja
(bad)
call
(bad)
scas
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
(bad)
sub
push
jo
pop
xor
or
or
jecxz
rcr
scas
inc
push
(bad)
(bad)
(bad)
inc
fdiv
and
daa
ds
cmp
dec
in
add
lahf
push
outs
in
sub
xchg
int3
fdivrp
(bad)
jg
jmp
retf
stos
or
and
and
mov
movs
lea
rep
mov
jg
xor
dec
mov
repnz
push
mov
lods
aam
ret
cld
int3
sbb
dec
jae
outs
mov
loopne
push
sub
dec
push
add
pop
dec
dec
not
xor
mov
xchg
fisttp
mov
jb
dec
outs
or
(bad)
(bad)
(bad)
jmp
pop
push
and
lods
sub
cdq
test
sahf
retf
in
xor
or
jnp
jns
movs
add
jmpw
xchg
cmp
add
sub
(bad)
sub
int
(bad)
xlat
stos
cli
loop
jno
leave
leave
jb
rcl
js
mov
call
out
xchg
mov
pop
stos
out
xchg
add
push
jl
and
fld
push
(bad)
(bad)
call
pushf
out
pop
in
dec
cmps
stos
stos
shl
in
ds
aad
js
outs
mov
cmps
adc
jmp
(bad)
in
leave
or
adc
retf
popw
xchg
pop
mov
gs
and
mov
ja
sahf
sbb
and
ja
scas
sub
adc
dec
es
adc
rcr
adc
daa
outs
sbb
int3
stos
(bad)
(bad)
push
mov
in
fisttp
jno
nop
cdq
jnp
xchg
(bad)
(bad)
jmp
sbb
test
pop
mov
fcom
arpl
je
test
adc
sub
cmp
mov
and
dec
ds
jmp
jg
or
mov
lods
stc
adc
retf
mov
(bad)
leave
lea
addr16
(bad)
(bad)
call
in
repnz
ins
fild
jg
cmp
shl
mov
jno
out
sub
(bad)
(bad)
jmp
sbb
sub
jae
popa
jg
aad
mov
push
loope
inc
icebp
(bad)
cld
inc
fcom
(bad)
(bad)
call
adc
enter
or
scas
test
mov
mov
cmp
(bad)
push
and
(bad)
rol
pushf
dec
cmp
xchg
aas
(bad)
repz
in
jg
cmps
stos
ret
jbe
stc
pop
(bad)
(bad)
(bad)
call
in
cmps
lds
ror
hlt
mov
jmp
call
dec
ds
das
test
fsubr
push
xchg
xchg
sub
inc
cmps
fcmovnb
(bad)
(bad)
(bad)
jmp
cmp
out
pop
or
push
cld
cli
sbb
test
dec
sub
mov
(bad)
(bad)
(bad)
jmp
or
mov
jnp
jo
push
cmps
push
fisttp
cmp
std
pop
jb
inc
push
dec
idiv
(bad)
call
test
and
jmp
sbb
mov
(bad)
push
xchg
jp
dec
popa
fs
sbb
retf
push
(bad)
js
add
jl
pop
or
pop
ror
call
cmp
(bad)
jg
or
dec
jnp
pop
loop
pop
leave
je
cmp
aam
stc
mov
mov
push
in
cmp
sti
inc
adc
(bad)
stos
cli
(bad)
(bad)
inc
xchg
xor
xchg
jp
out
aam
pop
push
add
sub
mov
mov
call
push
pop
mov
jo
mov
out
and
(bad)
(bad)
(bad)
dec
mov
les
mov
gs
dec
jne
aam
mov
jmp
js
je
pushf
dec
xor
stos
aam
inc
mov
add
cs
rcr
fwait
dec
(bad)
dec
mov
xor
xchg
cs
dec
in
pop
pop
push
rcl
aas
pop
mov
add
inc
xchg
jg
pusha
or
add
dec
sub
push
sub
adc
lods
std
jmp
mov
xor
xchg
mov
add
lods
xor
(bad)
mov
jl
inc
in
push
cmps
in
fwait
jbe
pop
repnz
hlt
mov
(bad)
push
(bad)
clc
xchg
dec
(bad)
in
fwait
mov
(bad)
cmc
push
test
repz
cld
and
jg
xchg
(bad)
(bad)
push
popf
mov
push
inc
adc
out
inc
jnp
fbstp
cdq
out
xchg
popa
cmps
and
jmp
call
mov
leave
sub
inc
or
(bad)
(bad)
dec
mov
jbe
fs
shl
pushf
and
push
inc
cwde
mov
lahf
fwait
jmp
xchg
xchg
cmovg
sbb
adc
or
mov
pop
sahf
cmp
dec
xor
loope
cwde
bound
outs
push
(bad)
cli
movnti
xor
sbb
(bad)
(bad)
mov
xor
rcr
loop
sbb
jecxz
pop
mov
and
out
inc
hlt
idiv
mov
mov
jge
mov
div
pop
xor
movs
fs
not
sti
int
dec
ror
js
lods
jp
cmp
jmp
(bad)
inc
inc
mov
pop
pop
push
mov
push
cmp
or
inc
arpl
sbb
stos
adc
rcl
mov
pop
pop
mov
cdq
sub
sub
int3
cmp
popf
adc
fucomp
inc
std
(bad)
(bad)
fadd
jae
adc
std
movs
test
mov
sub
clc
(bad)
jg
hlt
mov
xchg
retf
in
mov
jge
fidiv
sbb
dec
pop
push
sub
iret
sub
jne
mov
push
cdq
or
in
jmp
pop
cli
ds
lods
aas
sbb
jnp
in
sbb
(bad)
push
ins
or
jnp
nop
outs
fs
aad
and
fwait
inc
test
cmp
pushf
nop
(bad)
(bad)
(bad)
dec
dec
mov
mov
inc
push
js
sahf
mov
cmp
mov
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
adc
jb
cld
in
paddusw
cmp
mov
push
pop
pop
sub
push
xchg
dec
jp
popa
movs
or
inc
call
cmp
out
movs
xor
fiadd
inc
jnp
movs
(bad)
inc
xor
std
inc
mov
add
add
adc
xchg
cmc
(bad)
(bad)
jg
nop
fadd
mov
and
repz
int
dec
or
out
in
arpl
jg
sbb
pop
and
into
cwde
je
xor
inc
cs
jmp
ret
loopne
iret
xchg
jns
ret
and
outs
sub
js
in
call
jno
push
iret
hlt
adc
xlat
mov
adc
(bad)
(bad)
jmp
sbb
cmp
aam
jo
call
mov
repz
jno
pop
std
(bad)
(bad)
(bad)
in
loop
sahf
xor
mov
mov
pop
cmp
ins
ror
jmp
scas
adc
dec
jle
jmp
ret
xor
nop
or
add
ss
cmp
sbb
sti
imul
jp
pop
dec
(bad)
(bad)
jg
fsubr
lds
je
pop
(bad)
sbb
adc
push
mov
sbb
aam
shr
(bad)
(bad)
(bad)
call
mov
(bad)
xlat
or
pop
aad
(bad)
into
pusha
inc
jecxz
ficomp
push
cmp
outs
dec
fidivr
xchg
fmulp
mov
jmp
jb
lods
mov
ret
out
frstor
(bad)
(bad)
dec
std
cwde
clc
mov
sub
shl
cdq
imul
xor
lock
fs
jmp
dec
ja
adc
and
scas
stc
sbb
(bad)
inc
sbb
mov
pop
lahf
cmps
pop
xor
imul
jmp
dec
out
mov
in
js
adc
pmuludq
es
not
fldcw
scas
cld
js
clc
mov
(bad)
mov
mov
jl
adc
fnstenv
js
retf
mov
cli
(bad)
jmp
mov
jmp
mov
sahf
pop
and
xchg
clc
shl
inc
rcr
and
xor
xor
movs
in
cli
pop
lock
xor
je
das
cmps
fdivrp
sub
xchg
fcomip
jmp
push
mov
lea
add
xor
rol
cmps
jecxz
pop
pop
cwde
adc
out
rol
(bad)
call
rcr
movs
sub
jecxz
or
(bad)
or
push
lock
mov
inc
stc
mov
jg
idiv
arpl
cdq
mov
lods
xchg
dec
adc
cmp
jmp
fiadd
cld
fwait
daa
xchg
icebp
jmp
mov
cmp
out
fisub
inc
mov
(bad)
out
mov
adc
mov
mov
out
inc
mov
bound
pop
or
sbb
popf
cmps
adc
push
sbb
and
push
xchg
(bad)
call
(bad)
inc
inc
xchg
(bad)
int3
cmp
xchg
xor
add
xor
adc
(bad)
jmp
test
mov
(bad)
and
call
shr
pop
test
or
js
popa
rol
test
data16
cmc
xchg
jle
sbb
clc
aaa
in
cmp
imul
add
sbb
dec
(bad)
xchg
ret
adc
cdq
stos
sub
movs
add
jmp
xchg
ret
dec
iret
movs
or
mov
sbb
jg
loop
jne
pop
in
pop
pushf
test
adc
pop
push
mov
(bad)
inc
loop
retf
cld
retf
aam
sub
repz
popf
scas
jle
(bad)
(bad)
call
lds
cmp
inc
jmp
pxor
call
ins
fsub
imul
pop
(bad)
(bad)
call
push
jnp
(bad)
jnp
fwait
sbb
xor
sbb
jo
mov
push
pop
xchg
cmp
int
fimul
push
fld
(bad)
inc
dec
and
imul
(bad)
mov
mov
sub
or
fs
lods
xchg
jmp
mov
daa
rcl
test
sub
xchg
pop
iret
out
jnp
es
ds
pop
call
jmp
outs
pop
cmc
les
stos
add
outs
fld
pop
imul
lock
add
in
addr16
out
jmp
inc
(bad)
(bad)
(bad)
jmp
sbb
shl
xchg
fs
push
ss
mov
push
mov
pop
jg
std
mov
jle
xlat
jmp
xor
daa
in
push
data16
pushf
mov
jmp
sbb
or
call
inc
fs
dec
pop
jnp
pushf
js
sbb
addr16
jp
jno
adc
ins
or
aam
fist
inc
inc
scas
jmp
or
xchg
icebp
fld
xor
rcr
shr
and
sub
(bad)
(bad)
(bad)
fld
rcr
enter
out
fisttp
lods
xchg
or
cdq
or
dec
cmp
sbb
ja
sub
cmps
outs
cs
xor
jecxz
enter
push
or
fist
(bad)
scas
(bad)
int3
les
(bad)
(bad)
jmp
jne
xchg
jae
sahf
xlat
and
stos
sub
sbb
ins
ja
lock
push
retf
(bad)
shr
(bad)
call
sahf
nop
stos
jg
ds
movs
imul
pop
pop
data16
dec
xor
add
push
cdq
xchg
fdiv
fs
les
(bad)
jg
shr
jp
mov
out
leave
out
in
jl
add
push
cld
scas
cli
xor
push
jle
mov
mov
das
cli
jg
adc
inc
psubw
mov
jle
rcl
ss
xchg
test
(bad)
mov
ins
inc
test
mov
xchg
pop
les
add
sub
(bad)
mov
call
push
retf
xchg
and
das
std
mov
test
(bad)
(bad)
(bad)
call
jmp
out
push
cmps
test
(bad)
cmp
aaa
frstor
or
retf
mov
shl
(bad)
call
mov
rcl
test
dec
test
cs
push
popa
mov
mov
cmp
aam
pop
bound
(bad)
(bad)
fist
jl
aam
add
cmps
add
lea
pop
and
sbb
add
add
dec
pop
je
or
scas
cmp
rcr
xor
nop
xchg
lods
aam
jae
lds
lods
fnstsw
cmp
into
stos
(bad)
(bad)
dec
mov
pop
push
cmp
icebp
enter
outs
aas
retf
push
cld
add
sahf
stos
jmp
or
inc
xchg
je
xor
out
push
sub
pop
(bad)
jg
(bad)
fdivr
lds
mov
stc
(bad)
adc
mov
xchg
(bad)
fist
and
es
outs
loope
jb
mov
icebp
(bad)
dec
xchg
cmc
test
jmp
ficom
jecxz
xchg
cwde
(bad)
(bad)
(bad)
(bad)
cmp
mov
sbb
call
sub
loopne
gs
in
mov
(bad)
(bad)
jmp
add
xchg
shr
idiv
out
or
xor
leave
inc
fsub
out
retf
(bad)
(bad)
jmp
mov
pop
ss
in
inc
inc
enter
retf
es
std
in
jo
ja
icebp
(bad)
push
into
div
jo
imul
imul
fxch
ud0
jmp
ins
cwde
pushf
xor
inc
push
push
xor
and
in
hlt
xchg
repz
and
nop
xlat
(bad)
(bad)
(bad)
jmp
popf
(bad)
imul
push
mov
int3
mov
imul
(bad)
(bad)
jmp
call
fidivr
sbb
pop
cmps
int
retf
stc
push
sbb
pop
cld
call
mov
shr
pop
scas
je
cli
xchg
pop
pop
add
and
(bad)
dec
mov
aaa
jbe
retf
adc
adc
jno
push
mov
ds
mov
mov
and
(bad)
mov
in
jne
inc
stc
fmul
in
mov
call
fs
stc
mov
repz
mov
(bad)
jmp
stc
and
adc
test
add
push
adc
in
pop
dec
out
mov
lds
fcmovnb
(bad)
mov
sbb
or
es
cmc
(bad)
(bad)
(bad)
(bad)
call
ror
cmp
mov
lahf
fcomp
sub
ret
movs
stos
sbb
pop
popa
call
pushf
mov
and
cmps
cld
out
xor
(bad)
(bad)
call
shr
add
adc
idiv
int3
mov
sub
nop
sub
hlt
add
sbb
(bad)
(bad)
(bad)
jmp
cdq
pop
add
adc
sbb
sbb
mov
add
and
or
push
add
leave
cli
pop
mov
into
(bad)
(bad)
(bad)
(bad)
cmp
hlt
inc
mov
jo
je
leave
dec
xor
rol
sahf
(bad)
mov
cmp
push
dec
pop
dec
adc
(bad)
(bad)
call
(bad)
ss
clc
aam
lods
add
das
stos
imul
scas
sysenter
inc
imul
(bad)
(bad)
call
mov
cdq
icebp
cli
(bad)
and
pop
aam
cmp
and
aam
(bad)
(bad)
(bad)
call
dec
inc
cmp
int
pop
clc
nop
imul
(bad)
adc
js
push
(bad)
(bad)
(bad)
dec
and
jo
xchg
js
xchg
iret
pop
push
vpsraw
xor
add
push
dec
leave
jnp
out
pop
std
dec
cmp
mov
mov
ins
mov
(bad)
(bad)
call
cmp
pop
sub
loope
fcom
scas
sub
sub
arpl
and
rol
(bad)
(bad)
(bad)
push
cmp
call
push
out
jae
je
xchg
sub
fnstsw
stc
sbb
cmp
xor
push
retf
pop
xlat
dec
push
mov
sub
adc
jg
(bad)
(bad)
(bad)
(bad)
(bad)
in
push
and
sub
mov
popa
mov
add
dec
adc
in
test
(bad)
(bad)
(bad)
call
cmp
sahf
adc
cmp
mov
cwde
dec
(bad)
sub
(bad)
out
mov
(bad)
ja
adc
mov
push
movs
leave
call
(bad)
dec
mov
loope
fsubp
push
or
cmp
lahf
jb
sub
loope
sub
rcl
aas
lods
leave
stc
push
(bad)
(bad)
(bad)
call
mov
pop
jnp
mov
jmp
dec
out
std
xchg
dec
or
xchg
imul
popa
fiadd
dec
lods
jmp
add
jmp
lds
pop
in
mov
or
iret
push
dec
dec
pop
stos
or
and
cmp
and
out
(bad)
(bad)
call
or
mov
xor
dec
pop
xor
outs
mov
test
cld
adc
je
cwde
aas
into
ficomp
sub
pusha
js
xchg
(bad)
jmp
mov
movs
push
popf
je
cmp
fdivrp
jg
(bad)
push
and
mov
(bad)
push
cmps
or
jne
xor
fsin
inc
imul
scas
jp
cmps
push
and
movs
retf
cld
fidivr
cmp
(bad)
(bad)
jmp
inc
pusha
fst
(bad)
cmp
sub
ja
sbb
pop
call
inc
inc
retf
sbb
(bad)
(bad)
push
sub
pop
cmps
and
sub
adc
sub
jl
(bad)
jg
test
jl
mov
adc
(bad)
(bad)
call
adc
fwait
adc
or
adc
(bad)
cmp
push
int
popf
or
sbb
(bad)
aaa
outs
cmp
sbb
mov
mov
push
mov
pop
call
xor
pop
push
sti
test
(bad)
(bad)
call
mov
inc
sbb
or
mov
cmps
fnstsw
fnstcw
(bad)
(bad)
(bad)
(bad)
(bad)
mov
adc
xor
push
inc
ja
add
js
mov
inc
stos
(bad)
(bad)
jg
in
mov
cli
inc
dec
das
push
stc
rcr
xlat
cli
stos
cmc
mov
xchg
jns
(bad)
(bad)
(bad)
jmp
ds
fbld
fnstcw
lock
push
hlt
(bad)
cmp
stc
pop
pop
retf
inc
adc
(bad)
(bad)
(bad)
cmp
pop
adc
(bad)
mov
cs
dec
sub
cmp
cs
xlat
fs
adc
(bad)
(bad)
push
mov
loope
scas
adc
pop
mov
push
cwde
out
xchg
mov
in
(bad)
jg
push
mov
aaa
sbb
add
jle
push
sbb
jge
test
repnz
add
dec
mov
in
pop
jg
xor
neg
dec
inc
fmul
shl
mov
mov
pop
xchg
mov
pop
div
lds
pop
ja
or
jae
pop
stos
bound
mov
cmp
jl
mov
mov
lods
sbb
repz
sub
cli
lea
xchg
ds
sbb
shl
cmp
aaa
push
cmp
jg
mov
clc
ds
cmp
pop
cmp
fwait
sub
fimul
push
and
(bad)
call
xor
adc
mov
loope
or
mov
add
fdivr
(bad)
(bad)
(bad)
fsubr
xchg
sub
dec
inc
std
popf
iret
stos
cmp
inc
std
je
mov
iret
out
(bad)
(bad)
(bad)
jmp
sahf
mov
mov
dec
inc
ins
cmp
(bad)
leave
jmp
hlt
add
call
jb
cwde
in
data16
fs
mov
jecxz
add
pushf
test
pop
jno
fcomp
(bad)
(bad)
(bad)
inc
xchg
dec
imul
cmps
clc
scas
pop
cmp
mov
aas
inc
cmp
dec
and
cmps
(bad)
(bad)
(bad)
inc
fsubr
popa
je
in
xor
lods
mov
inc
or
push
mov
mov
inc
adc
(bad)
ficom
xor
and
sbb
retf
hlt
in
pop
hlt
outs
xor
add
xor
dec
mov
ror
adc
inc
cdq
mov
(bad)
call
ret
adc
and
pop
and
mov
stos
arpl
test
imul
ret
cmps
cmc
mov
call
gs
mov
scas
nop
dec
(bad)
(bad)
(bad)
jmp
retf
xchg
lea
lahf
xor
dec
xor
xor
cmps
mov
cs
(bad)
dec
fiadd
pop
mov
hlt
retf
lahf
stos
les
pop
dec
sub
(bad)
(bad)
(bad)
mov
dec
jp
push
xchg
mov
gs
shl
mov
cli
(bad)
mov
(bad)
push
cld
pusha
or
lea
arpl
(bad)
push
jg
test
pop
xchg
fcomip
(bad)
inc
jl
push
ja
push
fcmovu
and
movs
mov
mov
hlt
and
(bad)
(bad)
push
div
dec
fist
ret
adc
sbb
cmc
in
mov
bound
aad
inc
sar
(bad)
(bad)
(bad)
jmp
ficomp
fwait
xchg
rcl
inc
leave
mov
stos
or
dec
pop
stos
cmp
aas
sbb
dec
(bad)
(bad)
(bad)
inc
(bad)
jecxz
popf
ret
adc
xchg
cmp
test
fadd
cmps
jge
xor
inc
(bad)
out
mov
es
mov
call
push
in
cwde
pop
add
xchg
xchg
inc
call
jno
push
add
mov
inc
push
sub
pop
ins
inc
push
repnz
inc
fistp
test
cmps
data16
mov
mov
mov
add
sar
call
sbb
mov
cs
ss
cmp
(bad)
(bad)
inc
in
xor
stos
outs
mov
arpl
mov
gs
inc
neg
(bad)
push
fs
jge
pop
pop
push
jmp
sub
push
stos
cs
mov
arpl
adc
lods
sbb
sub
cld
push
mov
mov
add
inc
or
inc
mov
int3
jecxz
out
inc
hlt
sbb
pop
mov
(bad)
(bad)
(bad)
(bad)
in
or
xor
and
in
aad
and
test
(bad)
(bad)
(bad)
jmp
repz
mov
pop
adc
bound
out
and
jns
movs
inc
mov
pop
rol
clc
xchg
fs
jle
iret
and
inc
xor
es
push
adc
sbb
(bad)
(bad)
push
pop
(bad)
mov
fstp
sahf
pop
mov
mov
cmc
xchg
jno
lahf
lock
lock
aad
enter
fild
push
add
push
or
mov
in
pop
test
or
enter
xchg
adc
or
pop
inc
loope
cdq
sub
imul
(bad)
fnstsw
icebp
hlt
mov
cld
pop
cs
add
test
icebp
(bad)
jg
push
rcr
add
cmps
mov
xchg
sti
dec
(bad)
mov
shl
hlt
mov
jae
sbb
xchg
lods
pop
adc
push
sub
(bad)
call
mov
pop
aad
popa
sahf
xchg
cmp
mov
stos
fwait
jno
arpl
enter
xor
loope
fstp
pop
(bad)
jg
jmp
adc
jmp
jp
ss
sahf
add
mov
jnp
cli
jmp
int
fs
push
mov
ja
jmp
ins
sbb
mov
mov
mov
ss
dec
dec
add
mov
jns
jmp
jae
push
hlt
stos
mov
fwait
cmp
bound
mov
xor
xchg
idiv
(bad)
jg
lods
adc
(bad)
cmp
lock
test
(bad)
(bad)
mov
and
push
mov
(bad)
cmp
ror
dec
sbb
add
xor
stos
call
inc
jle
pop
jnp
cmps
cli
xchg
(bad)
(bad)
(bad)
jns
fld
xchg
cmp
sbb
jmp
cmp
mov
fs
jg
and
mov
and
push
call
sar
jb
fdivr
mov
pop
pop
jecxz
ds
or
pop
push
sub
cmp
mov
pop
loope
pop
dec
or
(bad)
(bad)
(bad)
jmp
das
jge
ja
test
jns
dec
cmp
mov
fnstcw
ss
out
cli
jmp
sbb
jb
pop
jmp
test
or
(bad)
(bad)
call
pop
jno
(bad)
popf
aas
pop
sbb
push
dec
rol
pop
push
add
adc
(bad)
(bad)
call
mov
int
aam
xor
mov
inc
sar
fimul
dec
mov
mov
jmp
(bad)
jg
or
je
cmps
imul
jg
dec
rol
ds
fld
movs
mov
loopne
and
adc
iret
fcom
sbb
jmp
jmp
xor
dec
mov
jne
dec
mov
add
leave
das
(bad)
jmp
mov
jle
mov
mov
jns
loop
lods
sub
adc
movs
pushf
mov
in
lds
pop
stc
lock
mov
push
imul
ins
fimul
sbb
ins
fs
mov
int
loop
ror
mov
xor
(bad)
inc
push
lahf
dec
stos
rol
cld
scas
ins
dec
jg
cmp
add
mov
psrlw
and
out
(bad)
(bad)
(bad)
inc
shl
mov
pop
loope
add
push
mov
dec
xor
fscale
es
(bad)
(bad)
(bad)
cmp
pop
cmp
sbb
mov
mov
and
sbb
inc
xchg
(bad)
(bad)
call
lock
mov
jbe
sub
adc
hlt
mov
out
in
adc
(bad)
(bad)
(bad)
call
les
pop
adc
sub
(bad)
mov
xor
pushf
jno
mov
inc
addr16
(bad)
(bad)
call
xor
xchg
cld
lea
push
sub
lea
cmp
retw
dec
es
(bad)
inc
out
mov
or
mov
shl
aaa
xchg
add
pop
aaa
inc
jmp
adc
add
jg
(bad)
(bad)
in
jno
jmp
addr16
mov
lods
xchg
fs
(bad)
inc
and
stos
xchg
cdq
jmp
sbb
or
(bad)
cli
int3
(bad)
inc
cmp
rol
les
or
neg
mov
push
sbb
cdq
clc
fnstcw
mov
inc
loopne
popf
cli
sahf
outs
or
mov
and
enter
xor
aas
shl
mov
pushf
xchg
(bad)
ror
pop
adc
frstor
mov
enter
(bad)
(bad)
call
fdivrp
fnstsw
lock
xor
inc
dec
mov
or
call
mov
sbb
es
int3
aam
int
(bad)
jle
iret
ins
pushf
xor
(bad)
(bad)
jmp
(bad)
stc
mov
push
mov
inc
xchg
jp
and
add
dec
ret
mov
cdq
jne
add
call
outs
cmps
pop
fisubr
inc
pop
inc
or
shl
fimul
inc
call
(bad)
cli
xchg
int
mov
sub
jae
and
mov
mov
test
jnp
jp
aam
(bad)
(bad)
(bad)
call
and
add
xor
fild
jl
and
xor
jno
jmp
imul
cld
(bad)
and
(bad)
sub
test
pop
mov
repnz
popf
jns
mov
xlat
fnsave
sbb
inc
jne
test
(bad)
call
loopne
push
push
fstp
pop
sub
(bad)
ss
mov
outs
fisub
call
scas
test
test
iret
nop
(bad)
(bad)
mov
pop
jecxz
neg
inc
jl
cmp
or
jb
or
loop
pop
outs
sti
(bad)
(bad)
(bad)
call
and
push
pop
xchg
leave
xor
js
icebp
pop
out
mov
ret
test
jb
adc
push
or
test
pop
push
pop
fisub
mov
(bad)
xchg
in
test
scas
lods
mov
(bad)
out
and
inc
pop
ret
dec
push
ret
(bad)
push
(bad)
dec
(bad)
cmc
dec
xchg
loope
cli
je
pop
jne
or
shl
in
dec
adc
push
(bad)
(bad)
(bad)
call
xor
and
mov
movs
(bad)
mov
sbb
js
stos
push
xchg
outs
fistp
(bad)
(bad)
push
popa
and
xor
or
rol
and
test
lock
(bad)
(bad)
(bad)
inc
arpl
mov
adc
or
sbb
adc
repnz
movs
pop
(bad)
call
pop
shl
jmp
(bad)
(bad)
mov
sub
bound
and
push
clc
or
int3
(bad)
(bad)
(bad)
dec
push
mov
test
add
or
push
inc
hlt
mov
cmp
ss
sub
xchg
xchg
mov
dec
push
and
mov
push
xor
push
cmp
and
adc
inc
(bad)
fcomip
mov
call
jae
pop
sbb
mov
inc
mov
out
je
mov
sar
(bad)
dec
mov
sar
sub
sub
popf
inc
add
sub
clc
xchg
and
mov
retf
mov
cmp
push
push
call
add
push
cmc
inc
add
sub
and
(bad)
mov
jecxz
mov
cld
jno
push
jmp
sub
out
pop
push
icebp
pop
add
(bad)
(bad)
(bad)
(bad)
add
outs
dec
hlt
in
and
sub
lods
shl
mov
lock
(bad)
(bad)
(bad)
jmp
ror
inc
lods
hlt
xchg
mov
pop
out
xlat
sti
lods
daa
stc
daa
inc
xor
fistp
(bad)
(bad)
(bad)
(bad)
fistp
cmps
aas
mov
inc
(bad)
in
out
push
mov
push
idiv
icebp
jmp
test
add
fucom
or
pop
cmp
sbb
(bad)
repnz
out
(bad)
(bad)
(bad)
jmp
fdiv
xor
add
rol
dec
cmp
ins
add
hlt
iret
push
pop
sub
inc
adc
(bad)
call
int3
jb
lahf
aas
mov
test
rol
scas
mov
(bad)
(bad)
(bad)
(bad)
fucomp
sbb
fld
idiv
sar
xor
retf
fisubr
xchg
sub
sub
inc
dec
out
jne
mov
and
je
(bad)
fist
push
xor
xor
std
push
dec
leave
xor
out
pop
arpl
dec
add
call
xchg
inc
pop
and
loope
shl
ret
data16
inc
clc
jmp
xchg
(bad)
sub
xor
mov
dec
cmp
inc
jne
cmp
enter
rol
je
call
inc
test
push
mov
pop
mov
xor
mov
xor
scas
jmp
add
xchg
arpl
inc
clc
leave
cmp
push
add
push
shl
xlat
mov
xchg
mov
retf
shr
sbb
xor
das
clc
mov
and
call
sub
test
adc
add
in
mov
mov
lds
data16
(bad)
(bad)
call
fwait
in
inc
pop
mov
xchg
repnz
psrad
mov
jb
jle
inc
movs
(bad)
(bad)
dec
int3
imul
and
push
inc
imul
dec
shr
or
jb
enter
jg
mov
sub
pop
fs
mov
lock
(bad)
jnp
cli
sub
jno
ins
jl
fdivrp
(bad)
(bad)
call
out
mov
into
scas
je
mov
adc
adc
jae
in
bound
jmp
jecxz
push
sub
in
mov
icebp
clc
test
hlt
pop
sbb
cmp
add
dec
mov
pop
lods
in
lods
outs
mov
pop
mov
or
retf
mov
or
adc
push
mov
xchg
js
ret
(bad)
(bad)
out
jle
xlat
test
push
cmp
out
fwait
fs
dec
test
(bad)
(bad)
(bad)
mov
cmp
mov
fwait
data16
(bad)
jl
mov
loopne
inc
inc
lods
jmp
lock
mov
fucomip
test
int3
inc
gs
out
(bad)
(bad)
(bad)
jmp
scas
dec
cmp
cmp
(bad)
loopne
mov
dec
mov
retf
test
call
jmp
outs
pop
mov
mov
xlat
pop
mov
mov
cmp
fucomi
(bad)
(bad)
(bad)
jg
fdiv
std
add
imul
sub
fidiv
xchg
icebp
in
(bad)
outs
imul
imul
and
inc
outs
sub
sti
out
fldcw
ins
jmp
fistp
jae
dec
stos
std
mov
sub
inc
shr
(bad)
in
sar
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
in
xor
lods
jo
jne
mov
adc
and
cmp
jmp
ss
mov
and
cmp
cmp
jl
test
xchg
movs
xchg
aaa
mov
(bad)
jmp
dec
dec
shr
add
jbe
jge
add
adc
aas
outs
add
int3
jp
les
call
test
and
or
neg
dec
sbb
(bad)
jmp
pop
aaa
jb
mov
ror
loopne
cmp
or
jmp
mov
aas
test
jae
js
retf
call
push
mov
out
dec
push
cmp
cmp
inc
push
add
loopne
sub
leave
aaa
aad
mov
loopne
or
lods
pop
test
sti
aad
(bad)
call
cmp
xor
cmp
fsqrt
xor
xchg
or
pop
aam
test
dec
test
mov
ret
dec
nop
lock
push
je
adc
dec
fisub
(bad)
(bad)
dec
outs
or
sbb
mov
pop
or
push
add
jmp
imul
adc
(bad)
xchg
ret
inc
daa
sbb
lock
jno
popf
adc
ja
mov
ret
add
xor
mov
icebp
push
leave
dec
xlat
inc
ss
add
cld
sub
out
cmps
and
(bad)
(bad)
(bad)
inc
sbb
js
jo
test
mov
and
scas
fistp
adc
dec
jmp
inc
jbe
cmp
fwait
lods
mov
jb
in
fcomi
mov
das
test
or
inc
sub
loopne
inc
ret
nop
xchg
vminss
js
mov
(bad)
or
add
inc
in
ret
(bad)
out
ret
scas
xor
(bad)
sar
(bad)
(bad)
dec
mov
xor
andps
push
jmp
sar
xchg
or
loopne
dec
scas
cmp
(bad)
(bad)
jmp
sbb
stc
fwait
(bad)
push
sti
cmp
cmp
dec
or
leave
in
outs
sub
pop
ds
dec
cmp
(bad)
jmp
mov
and
mov
mov
movs
into
dec
cmp
mov
sub
outs
jecxz
loope
dec
in
enter
jmp
shr
fdivr
inc
mov
(bad)
dec
jg
scas
(bad)
mov
pop
xor
in
shr
push
or
jg
inc
mov
(bad)
jmp
mov
jmp
adc
cmp
and
(bad)
jg
xchg
scas
sub
(bad)
push
out
cmp
xchg
cmp
and
and
out
movzx
dec
call
pop
inc
fiadd
add
outs
(bad)
(bad)
(bad)
(bad)
aas
mov
mov
mov
xor
cmp
inc
xchg
cmp
cld
fsubr
push
mov
loopne
mul
addr16
gs
cmc
(bad)
push
test
mov
fcomp
cli
ret
jle
out
stos
add
lock
and
out
mov
cld
(bad)
(bad)
std
xchg
cdq
gs
xchg
adc
das
mul
xlat
ret
ss
xchg
je
(bad)
(bad)
inc
cmps
cmp
jbe
mov
loope
fistp
push
int
out
test
adc
jge
repnz
(bad)
call
int3
add
pushf
inc
int
fcmovnb
lea
shr
cmps
retf
mov
(bad)
(bad)
jnp
sar
loopne
shr
in
jl
stc
test
in
adc
push
(bad)
(bad)
(bad)
xchg
xor
or
xchg
fdivrp
(bad)
(bad)
call
mov
jnp
mov
xchg
popf
sub
ret
cli
ins
les
mov
clc
push
mov
adc
fisub
xor
jle
loop
xor
js
aam
(bad)
call
adc
in
test
jmp
aaa
mov
in
sub
jg
lods
push
aaa
add
sub
in
dec
outs
(bad)
pop
pop
(bad)
(bad)
(bad)
dec
push
mov
pop
aas
sbb
xor
dec
inc
dec
inc
js
inc
scas
in
shl
(bad)
arpl
xchg
jecxz
std
adc
stos
and
mov
mov
pmaxsw
pop
hlt
(bad)
mov
call
jbe
cs
sub
idiv
adc
(bad)
call
mov
sub
inc
mov
xor
int3
sbb
bound
push
sti
(bad)
(bad)
(bad)
call
fidiv
fnstenv
lahf
xchg
jg
nop
leave
or
jbe
scas
stc
fmulp
and
fmul
inc
jno
mov
in
outs
cdq
sub
dec
mov
loope
repnz
int3
adc
(bad)
inc
mov
daa
int
aam
(bad)
sbb
mov
jmp
adc
aad
(bad)
(bad)
call
mov
and
push
cs
inc
cdq
aas
push
push
push
pushf
or
xor
(bad)
push
js
scas
push
and
mov
dec
add
(bad)
dec
fsub
sbb
jmp
cli
pop
ja
dec
ss
lahf
mov
adc
mov
push
xchg
dec
mov
cmp
call
push
mov
into
(bad)
call
xchg
push
inc
ret
hlt
mov
jg
scas
mov
sub
pop
out
popa
(bad)
call
mov
mov
fcomp
lods
leave
repnz
inc
mov
lock
stos
adc
dec
or
push
and
ss
cmp
(bad)
(bad)
dec
fdiv
lea
(bad)
out
stc
sbb
scas
(bad)
es
(bad)
(bad)
(bad)
push
leave
and
clc
mov
sub
jle
cs
bound
cmps
mov
int3
(bad)
(bad)
(bad)
inc
jecxz
xchg
daa
jg
es
jae
dec
cmc
dec
sbb
dec
sti
dec
dec
(bad)
(bad)
(bad)
dec
jle
pop
inc
sub
sti
in
gs
or
inc
hlt
jle
and
lods
sti
sbb
mov
sbb
push
(bad)
push
pop
mov
fwait
pop
rcr
or
aad
out
clc
mov
mov
sbb
pop
ins
cmp
cmc
dec
add
cmp
mov
(bad)
dec
sbb
aaa
pop
mov
add
mov
or
sbb
(bad)
jmp
loop
nop
push
sahf
aaa
sbb
(bad)
fucom
push
sub
inc
mov
sbb
loopne
cld
mov
idiv
sbb
xchg
mov
lods
cmp
loope
sbb
mov
dec
push
fidiv
cmc
xchg
(bad)
(bad)
(bad)
(bad)
fdivr
xchg
repnz
inc
inc
out
popa
jne
jno
out
or
in
sbb
add
lock
(bad)
test
mov
std
mul
or
or
jbe
pop
sbb
call
cmp
movs
mov
out
cli
dec
lods
sub
sbb
or
out
test
dec
and
cli
(bad)
call
aaa
stc
and
mov
cld
aad
lods
ret
sbb
sbb
dec
push
and
mov
dec
(bad)
(bad)
(bad)
inc
sar
ret
sbb
pop
data16
jns
adc
lahf
sub
das
jno
cmp
adc
jbe
push
inc
lahf
jmp
icebp
xchg
lock
sub
(bad)
dec
arpl
cmp
dec
inc
sbb
xchg
add
sub
outs
ds
push
outs
mov
test
loop
push
out
cli
aam
out
test
sub
jmp
ror
xchg
jns
push
in
jne
jo
fcomi
(bad)
(bad)
(bad)
call
pop
test
xor
cmp
in
adc
movs
jae
inc
test
dec
xchg
clc
in
(bad)
(bad)
(bad)
(bad)
clc
sub
cmp
sbb
cmp
aam
movaps
sbb
mov
and
das
scas
(bad)
(bad)
dec
adc
jae
pop
jbe
outs
pop
jge
into
sti
icebp
mov
or
and
inc
xor
(bad)
(bad)
(bad)
call
mov
mov
inc
or
pop
mov
imul
call
call
pop
fcomp
pop
xor
xchg
call
sahf
das
in
push
(bad)
(bad)
xor
leave
iret
fmul
gs
mov
cld
jg
dec
mov
xor
fiadd
dec
push
pop
cmp
mov
aas
jmp
cwde
dec
xchg
data16
fwait
call
(bad)
repz
push
dec
cmp
inc
push
or
shl
push
sar
pop
inc
fmul
clc
out
cmps
call
cmp
sub
mov
xchg
inc
mov
in
div
push
movs
xchg
and
gs
(bad)
(bad)
jmp
mov
pop
xchg
lods
mov
xor
data16
push
outs
addr16
ins
mov
dec
add
push
clc
push
mov
les
jl
xor
sub
xor
dec
add
addr16
nop
ret
jno
inc
dec
sbb
push
push
mov
adc
push
inc
in
hlt
push
push
inc
xchg
movs
sbb
push
jg
(bad)
inc
xchg
int3
stc
sbb
lahf
shl
cmc
or
jg
shr
(bad)
(bad)
(bad)
push
xchg
adc
push
stos
xchg
sbb
sbb
inc
test
and
jb
aad
in
adc
lock
push
in
mov
inc
fsub
imul
jno
jp
xlat
jg
pop
sub
popa
xchg
loop
(bad)
(bad)
inc
cmp
xor
mov
fsubr
mov
std
or
je
push
pop
sbb
(bad)
call
sbb
add
push
push
outs
or
scas
mov
enter
mov
inc
(bad)
jmp
pop
or
inc
push
int3
jl
add
out
popf
outs
lds
(bad)
(bad)
(bad)
(bad)
push
jo
xor
push
xchg
adc
mov
stc
dec
addr16
cmp
mov
icebp
arpl
call
enter
jmp
mov
scas
clc
(bad)
jmp
sub
js
sbb
les
jl
or
repnz
(bad)
(bad)
(bad)
push
sbb
sbb
mov
push
int3
fadd
mov
pushf
cs
(bad)
(bad)
dec
dec
iret
bswap
jp
mov
stos
push
mov
aam
idiv
scas
pop
je
aad
mov
jmp
or
jae
fdivr
cli
jl
int
push
movs
jbe
pop
sbb
cmp
das
fcomp
and
ret
xchg
mov
div
into
out
push
mov
mov
(bad)
hlt
jnp
or
inc
(bad)
push
sahf
or
pop
fisub
mov
sub
cli
sub
(bad)
(bad)
(bad)
jmp
xchg
addr16
neg
data16
push
stc
(bad)
push
shr
mov
sbb
lahf
jno
mov
loop
mov
fistp
frstor
mov
(bad)
jle
(bad)
mov
pop
and
adc
push
int
jns
ins
push
cmc
inc
neg
imul
movs
jmp
jo
sub
mov
mov
sub
jns
out
sub
dec
sbb
cmp
cmp
mov
jmp
add
ins
inc
pop
mov
add
jp
jmp
mov
xchg
jl
and
call
cmc
add
cmc
aad
adc
adc
and
(bad)
(bad)
call
fst
loop
fs
cs
inc
xor
mov
outs
out
fs
rcl
inc
(bad)
jmp
push
les
jmp
jb
dec
cmps
push
repz
(bad)
pop
adc
cmc
dec
(bad)
(bad)
(bad)
inc
jno
sar
sbb
out
adc
jg
pop
test
xchg
dec
mov
(bad)
(bad)
(bad)
inc
push
ret
mov
pusha
mov
in
jp
xor
xchg
punpcklwd
cld
cs
mov
cmp
dec
aas
jp
fdiv
imul
mov
fsubr
in
jmp
add
popa
dec
fs
adc
(bad)
je
mov
push
test
(bad)
jnp
sub
cmp
pop
aas
iret
cs
pop
cmc
(bad)
mov
stc
sahf
daa
paddsb
cmp
fwait
adc
xchg
(bad)
(bad)
(bad)
inc
aam
mov
iret
ror
add
push
jecxz
cmp
fistp
idiv
inc
call
mov
xchg
daa
dec
popf
mov
sbb
rcl
or
mov
ja
scas
sub
ja
(bad)
mov
scas
ss
pop
push
imul
mov
sub
push
sub
add
cmps
add
rcr
js
int
(bad)
(bad)
jmp
add
pop
or
adc
dec
xor
sub
mov
mov
cmp
adc
cmp
pop
pop
mov
xor
mov
push
or
lds
fst
inc
xor
mov
pushf
or
(bad)
xchg
das
add
scas
xchg
or
pusha
(bad)
(bad)
(bad)
jg
aaa
or
jmp
push
retf
out
stos
jno
cld
(bad)
dec
xor
adc
(bad)
(bad)
(bad)
call
lods
mov
dec
or
or
cmp
divps
repnz
pop
and
(bad)
(bad)
(bad)
dec
clc
sub
in
pop
aad
mov
and
sbb
(bad)
sahf
mov
(bad)
dec
leave
fbstp
sub
mov
xor
js
xor
test
(bad)
imul
push
fdiv
push
(bad)
(bad)
(bad)
inc
int
cmc
shl
inc
or
leave
sub
mov
loop
pop
jnp
add
mov
out
sahf
inc
pop
mov
mov
or
lock
dec
jl
(bad)
(bad)
(bad)
push
mov
fucom
ja
push
mov
cmps
push
xchg
pop
push
or
jp
adc
dec
xor
sbb
out
ret
pop
pop
jge
arpl
(bad)
jp
mov
cld
out
(bad)
mov
je
gs
mov
pop
pushf
mov
xchg
movs
mov
or
(bad)
retf
adc
stos
sub
arpl
mov
sbb
aaa
add
xchg
pop
add
or
call
shl
adc
ins
js
pop
or
mov
mov
(bad)
(bad)
(bad)
jmp
mov
push
inc
mov
lds
lods
push
pop
adc
jecxz
dec
push
sbb
outs
outs
leave
xchg
aad
(bad)
add
jmp
mov
(bad)
(bad)
(bad)
inc
inc
scas
jno
imul
sti
stos
lods
jl
jbe
cwde
fnsave
xor
sbb
scas
mov
int3
xor
std
(bad)
(bad)
jmp
aam
ins
push
daa
popf
cmp
outs
pop
and
jno
daa
xlat
mov
jg
jp
push
arpl
mov
pop
push
xlat
leave
lds
enter
ds
or
js
(bad)
jmp
mov
int3
icebp
repnz
pop
sub
xlat
(bad)
call
dec
jmp
adc
sahf
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
lea
sub
xor
jo
into
push
dec
stc
mov
scas
dec
inc
push
mov
daa
inc
jp
outs
stos
mov
arpl
jnp
out
outs
pushfw
stos
xchg
xchg
or
push
out
and
(bad)
(bad)
call
jmp
aam
not
in
adc
inc
mov
mov
pop
mov
push
pop
out
jnp
cmps
or
inc
dec
cld
outs
movs
test
push
outs
pop
retf
(bad)
(bad)
(bad)
dec
(bad)
unpckhps
adc
cld
cdq
sbb
loop
push
out
daa
sbb
rcr
retf
cmovs
test
or
dec
aas
inc
cmps
add
(bad)
(bad)
(bad)
mov
icebp
test
jle
pop
jmp
jo
mov
arpl
mov
sbb
(bad)
(bad)
(bad)
call
adc
pop
cmc
sub
or
mov
scas
cld
sahf
movs
rol
repz
mov
mov
and
pop
pop
mov
rcr
add
mov
jmp
pause
mov
outs
inc
(bad)
mul
jge
or
out
(bad)
(bad)
(bad)
out
mov
call
dec
inc
out
xchg
dec
int
jle
(bad)
mov
test
shr
imul
jo
push
retf
fwait
dec
xchg
inc
adc
dec
(bad)
(bad)
push
lea
jb
ds
push
xchg
cwde
and
and
cld
(bad)
out
adc
mov
cmc
hlt
test
(bad)
mov
bound
(bad)
jg
dec
push
or
xor
cmp
imul
pop
cmp
ins
push
arpl
mov
mov
(bad)
mov
cld
push
(bad)
pop
outs
clc
cmp
(bad)
mov
movs
xchg
int
mov
into
clc
jbe
test
out
mov
jp
(bad)
(bad)
(bad)
(bad)
cmp
or
daa
fwait
pop
push
inc
dec
push
jmp
movq
add
mov
add
lea
push
push
pop
dec
rcl
push
and
adc
pop
mov
jbe
pop
sbb
loopne
(bad)
call
xor
push
pop
jae
in
mov
ds
inc
and
pop
sub
sub
nop
mov
cwde
sbb
push
(bad)
(bad)
(bad)
inc
stos
repnz
test
push
stos
(bad)
int
adc
adc
test
(bad)
(bad)
jmp
xor
jmp
call
aas
pop
sar
mov
call
jmp
or
jno
cld
sbb
lock
dec
jg
test
jl
popa
mov
sub
bound
sbb
(bad)
call
fsubr
idiv
sub
(bad)
ins
mov
xor
lea
mov
clc
jmp
sub
lods
fild
(bad)
sti
mul
stos
shl
and
mov
aad
pop
mov
in
push
push
adc
es
dec
fsub
push
(bad)
or
push
sub
and
jl
(bad)
or
stos
fxch
sbb
push
shl
rcr
addr16
push
jle
(bad)
(bad)
call
hlt
push
pop
fstp
or
ins
fmul
or
dec
dec
push
jl
in
jae
(bad)
(bad)
jmp
addr16
or
jmp
imul
gs
fnstcw
adc
jl
inc
out
call
loopne
int3
sar
or
jmp
rcl
and
inc
call
pop
(bad)
shl
add
xchg
(bad)
call
mov
cmp
ja
push
ret
add
test
(bad)
jmp
imul
dec
call
xor
sbb
jae
(bad)
(bad)
(bad)
jg
pop
ds
jmp
xor
jbe
pop
stc
and
dec
leave
fild
fwait
sahf
push
jg
ret
(bad)
(bad)
call
add
inc
loope
into
ret
mov
das
aam
pop
push
sbb
jg
ja
adc
jge
jmp
(bad)
fsubr
or
hlt
mov
out
push
xchg
ret
sub
imul
xchg
in
dec
or
or
dec
call
das
scas
mov
mul
mov
dec
pop
adc
(bad)
call
inc
test
aaa
fistp
or
push
outs
or
call
out
mov
pop
mov
mov
nop
xchg
(bad)
mov
or
xor
sub
jmp
xchg
shl
imul
retf
mov
sub
ret
cmp
inc
pop
sub
dec
outs
mov
addr16
(bad)
call
xor
imul
mov
inc
adc
retf
adc
dec
or
lods
outs
cmps
dec
push
mov
inc
adc
sar
scas
(bad)
dec
repnz
xchg
sub
out
jo
arpl
dec
(bad)
cli
lock
(bad)
(bad)
push
xor
pop
ret
mov
in
fs
mov
out
enter
ja
leave
pushf
(bad)
mov
(bad)
(bad)
jmp
lock
int
xlat
stos
(bad)
push
(bad)
or
and
addr16
movs
stc
xchg
(bad)
mov
(bad)
sub
(bad)
(bad)
call
inc
mov
outs
int3
or
push
dec
mov
test
mov
xchg
inc
retf
xchg
xor
ja
mov
xor
fldcw
rol
(bad)
out
retf
sbb
jmp
imul
aaa
push
or
(bad)
(bad)
(bad)
mov
mov
dec
pop
push
fisttp
add
sbb
ret
sbb
es
(bad)
(bad)
(bad)
jmp
jmp
push
adc
push
adc
sub
dec
cmp
xchg
jl
neg
(bad)
(bad)
(bad)
jmp
cmps
mov
mov
dec
aas
je
cmp
mov
mov
clc
jg
pusha
pop
xchg
stos
pop
or
movs
inc
imul
mov
js
add
push
pop
(bad)
mov
jl
pop
popf
retf
mov
mov
hlt
call
and
mov
daa
inc
xchg
adc
pop
push
clc
add
jmp
(bad)
(bad)
push
cli
jno
pop
popf
and
xchg
mov
dec
add
icebp
xor
call
(bad)
dec
inc
scas
cmp
adc
pop
or
clc
imul
call
add
and
or
pop
shl
mov
and
jne
lds
add
sub
xor
stos
sahf
repnz
jecxz
push
sbb
(bad)
(bad)
mov
out
pop
daa
shl
or
or
cmp
stos
jo
(bad)
jmp
and
lds
jmp
jle
mov
repz
(bad)
(bad)
call
sti
arpl
and
dec
add
xor
mov
loopne
jg
std
sbb
cmp
outs
and
jl
stos
scas
lods
jo
lahf
sbb
cmp
(bad)
mov
pop
pop
and
test
repnz
add
enter
ja
enter
dec
mov
jecxz
push
cmp
mov
fld
(bad)
(bad)
jmp
mov
xlat
jmp
ret
jle
push
je
mov
aam
clc
repnz
or
loopne
xchg
xor
(bad)
sar
(bad)
jg
mov
dec
sub
nop
ds
imul
call
push
dec
test
fld
push
pop
std
(bad)
(bad)
call
pop
cmps
repnz
aaa
and
fldenv
jge
mov
mov
lock
daa
bound
lahf
add
(bad)
mov
ds
ja
jno
std
test
dec
neg
aaa
fdivrp
(bad)
fbld
fwait
adc
push
aam
inc
arpl
cmp
sub
mov
inc
repz
push
lods
fist
aam
(bad)
call
test
out
jns
mov
jae
jmp
scas
out
push
inc
icebp
(bad)
(bad)
(bad)
push
pop
jbe
cmc
fidiv
ret
sub
(bad)
mov
xlat
je
into
adc
jbe
js
or
call
jmp
adc
lock
scas
out
gs
cmps
and
(bad)
(bad)
call
test
mov
jp
jl
mov
aam
out
inc
push
cmps
dec
inc
jp
dec
test
cmp
(bad)
(bad)
(bad)
dec
test
xchg
(bad)
lods
push
inc
mov
pop
xor
or
xchg
adc
ficomp
aaa
sbb
xor
loop
jg
mov
jno
(bad)
(bad)
(bad)
(bad)
mov
mov
or
jl
repz
outs
test
push
int3
add
mov
mov
(bad)
cmp
cmps
adc
in
icebp
movs
std
adc
int3
sub
imul
jne
xchg
mov
or
addr16
(bad)
(bad)
jmp
inc
sbb
cmp
pop
pop
mov
pop
ja
mov
adc
add
retf
mov
push
out
add
push
out
or
stos
xor
mov
mov
jp
mov
std
cld
(bad)
(bad)
inc
(bad)
aaa
dec
jge
out
mov
mov
jp
imul
xchg
xchg
mov
jnp
(bad)
jg
add
(bad)
in
int
or
mov
imul
sahf
inc
retf
int3
and
lea
inc
stc
cmp
in
retf
push
inc
xchg
out
mov
push
add
mov
out
push
cmp
inc
cli
jbe
push
adc
(bad)
(bad)
dec
dec
mov
jmp
add
int
dec
xrelease
dec
out
ja
(bad)
jmp
not
pop
cmp
pop
cmps
test
(bad)
shr
retf
mov
fisubr
push
inc
mov
mov
bound
adc
arpl
mov
repnz
mov
mov
or
xlat
(bad)
(bad)
fidivr
cwde
lods
cmp
sbb
pop
lods
rol
lock
and
fs
call
dec
cwde
push
dec
in
xor
pop
int3
inc
sbb
mov
mov
add
aad
cbw
mov
mov
leave
and
mov
push
cwde
aam
cmc
test
dec
adc
(bad)
(bad)
(bad)
(bad)
aas
jnp
icebp
push
daa
sbb
xchg
(bad)
sub
xor
scas
gs
fistp
add
and
push
jge
mov
pusha
in
ror
int3
push
call
xor
call
xchg
adc
out
xor
movs
hlt
in
out
adc
ror
mov
inc
clc
mov
ins
(bad)
mov
lahf
cmp
push
ror
out
loopne
dec
(bad)
(bad)
(bad)
call
mov
mov
les
into
pop
jle
fwait
mov
xchg
dec
inc
cmp
pop
into
sahf
xor
(bad)
(bad)
(bad)
inc
cmc
ss
mov
pop
sub
ficomp
hlt
adc
das
sub
sub
(bad)
fcomip
call
sbb
mov
push
punpckhwd
in
push
sub
(bad)
(bad)
fdiv
push
popa
inc
lods
or
bound
fnsave
sub
call
(bad)
xchg
dec
xchg
arpl
push
fdiv
scas
test
sbb
call
(bad)
(bad)
(bad)
call
inc
or
cdq
push
and
or
mov
push
xor
xchg
test
(bad)
out
cli
dec
(bad)
cdq
xor
push
pop
shl
jns
mov
jg
(bad)
inc
das
in
dec
and
ins
xchg
xlat
cmps
push
mov
add
push
add
pop
sar
shl
mov
out
fild
or
fidiv
aas
outs
cs
xor
data16
rcl
sar
call
sub
inc
(bad)
fisub
sbb
push
std
repz
sbb
fdivr
adc
jnp
ss
push
bound
idiv
(bad)
inc
or
push
ror
jns
adc
out
jo
out
inc
and
in
ret
push
repnz
js
loopne
(bad)
(bad)
(bad)
call
int
outs
or
fistp
mov
jo
jge
pushf
ins
fcmovbe
add
movs
(bad)
dec
rol
cwde
mov
fwait
div
je
adc
(bad)
pop
jb
(bad)
(bad)
jg
fsub
pop
sub
lock
cmp
mov
cdq
dec
dec
clc
adc
cli
popf
dec
or
cdq
sahf
add
(bad)
(bad)
(bad)
(bad)
jmp
cmc
outs
sbb
cmp
add
fucomi
sysenter
std
cmp
pop
add
mov
into
stos
mov
and
(bad)
(bad)
(bad)
dec
mov
mov
jle
sub
sbb
mov
aaa
in
jp
pop
aam
mov
hlt
sub
call
in
or
out
cld
shl
inc
aaa
mov
bound
dec
xor
(bad)
(bad)
(bad)
stc
jns
into
ret
xor
xor
and
xchg
out
cmp
lods
and
and
xor
sub
ins
aas
dec
stos
iret
mov
adc
ins
jl
(bad)
(bad)
jg
inc
or
dec
adc
je
inc
xchg
fdiv
hlt
rol
jnp
(bad)
(bad)
(bad)
cmp
sub
(bad)
out
sbb
in
jns
jmp
int3
mov
(bad)
outs
cmp
fisttp
(bad)
mov
hlt
mov
jp
scas
sbb
sahf
es
pop
addr16
(bad)
(bad)
(bad)
push
data16
add
add
(bad)
(bad)
and
ret
ret
mov
(bad)
(bad)
inc
or
ficomp
loope
nop
mov
adc
push
mov
push
mov
sbb
cmp
test
jo
inc
jmp
xchg
call
inc
and
repz
clc
repz
mov
jnp
popa
clc
jl
jg
fcomip
push
jno
into
dec
mov
outs
scas
fstp
lods
pop
and
(bad)
(bad)
(bad)
call
jae
fstp
(bad)
pushf
outs
je
rol
mov
pushf
stos
icebp
push
inc
js
rol
jge
xchg
sbb
jnp
jmp
xor
jo
cmp
push
mov
js
jno
ins
retf
inc
add
imul
in
pop
pop
sti
mov
dec
out
adc
test
(bad)
(bad)
call
cmp
ins
in
jmp
xchg
adc
lods
sahf
loope
dec
jmp
(bad)
mov
out
jge
(bad)
call
dec
inc
imul
std
and
cmps
jecxz
push
aaa
retf
jmp
mov
das
es
cmp
xchg
jmp
add
jg
mov
inc
push
cmc
xor
dec
ret
inc
cdq
push
sub
std
int
dec
stc
cmp
mov
mov
cld
inc
test
aas
push
ret
sahf
add
test
(bad)
(bad)
out
mov
or
fs
cmps
jne
push
(bad)
(bad)
pop
addr16
mov
pushf
push
jb
clc
jmp
inc
cli
ret
enter
jns
sbb
ror
cmp
das
adc
xor
jnp
(bad)
(bad)
call
pop
pop
stos
mov
mov
iret
cli
mov
sbb
scas
outs
stos
cmc
fs
cmp
jb
xlat
add
pop
push
push
or
push
(bad)
call
cli
fstp
(bad)
mov
fldenv
fisttp
test
mov
mov
in
mov
fiadd
out
sub
(bad)
(bad)
(bad)
dec
loope
cmps
(bad)
std
sahf
adc
daa
mov
adc
sub
push
pop
and
jmp
ficomp
(bad)
jg
jmp
popa
mov
push
movs
xor
inc
(bad)
inc
push
lahf
js
test
pop
xchg
xlat
push
in
mov
pop
pop
aam
js
xchg
push
adc
xor
ror
xchg
(bad)
arpl
scas
and
xchg
push
dec
dec
(bad)
(bad)
(bad)
jmp
pop
in
xchg
push
jbe
or
dec
mov
shl
mov
push
jecxz
pop
aam
xchg
xor
(bad)
(bad)
(bad)
cld
les
aad
ret
push
outs
outs
addr16
and
sbb
cmp
or
imul
xlat
add
dec
lock
push
(bad)
cli
add
push
add
mov
imul
fistp
push
fsub
xor
jecxz
aaa
jmp
sar
arpl
pop
shl
loop
mov
lahf
push
(bad)
(bad)
(bad)
push
and
dec
lds
jge
pop
ja
inc
loop
and
pop
cmc
xchg
mov
(bad)
mov
(bad)
mov
in
clc
mov
mov
int
enter
aaa
pusha
mov
out
popf
repnz
jns
xchg
(bad)
(bad)
(bad)
inc
push
dec
(bad)
sbb
cmp
xor
pop
push
jnp
rol
in
pop
(bad)
push
aam
sti
mov
xchg
cld
(bad)
push
pop
std
mov
ins
or
inc
stos
push
push
ins
add
adc
aam
(bad)
(bad)
(bad)
jmp
jns
iret
pop
sub
loope
xor
std
lods
mov
push
cwde
es
pusha
jmp
scas
push
sahf
mov
pop
inc
stc
sub
shr
test
cmp
(bad)
jg
call
xchg
ins
test
mov
icebp
xchg
call
cdq
xor
jmp
fst
mov
shl
ins
pop
lock
(bad)
enter
sar
sub
mov
xor
sub
mov
cmp
cli
dec
rcr
scas
cmp
mov
cmp
push
mov
cwde
pop
xor
movs
mov
inc
scas
retf
fsubrp
cli
(bad)
xchg
fidivr
lock
jmp
icebp
stos
iret
daa
pop
jnp
xchg
and
add
inc
mov
jns
and
mov
loope
adc
xchg
cmp
sbb
(bad)
std
out
add
sbb
mov
imul
test
(bad)
(bad)
jg
xchg
inc
or
int
jo
and
sbb
xchg
ret
fwait
movs
mov
test
mov
jmp
pop
adc
mov
(bad)
cmps
adc
jno
(bad)
dec
mov
jns
hlt
shl
mov
inc
jne
sub
test
push
call
test
mov
mov
push
mov
xlat
lahf
inc
cmps
in
mov
(bad)
(bad)
(bad)
mov
mov
cmps
add
enter
ins
popa
fsub
xor
mov
cli
(bad)
inc
mov
bound
retf
push
xor
je
push
pop
jo
dec
cs
shl
xor
retf
std
xchg
jmp
repz
cmp
shl
push
daa
mov
fstp
jmp
lock
(bad)
dec
shl
cmc
and
test
das
and
sar
or
xchg
xchg
cmp
sub
(bad)
(bad)
(bad)
push
imul
leave
xchg
lea
sbb
int3
push
mov
stc
cmp
xchg
shl
add
inc
popa
mov
cld
out
shl
daa
or
jg
(bad)
(bad)
mov
adc
lahf
hlt
ins
test
cmp
pop
sub
mov
or
inc
dec
shr
popa
dec
pushf
mov
pop
repnz
aam
pop
and
cld
push
push
(bad)
(bad)
(bad)
(bad)
xor
jp
pop
mov
out
cmp
int
xor
movs
xchg
jns
xchg
push
repz
jb
sbb
mov
or
sahf
test
fwait
cmp
add
outs
leave
jle
(bad)
(bad)
jmp
mov
jmp
out
fist
mov
mov
(bad)
(bad)
dec
sar
jecxz
neg
dec
dec
cdq
loopne
cmp
cmp
js
loope
outs
mov
(bad)
(bad)
(bad)
jl
bound
jle
shl
pop
dec
dec
push
scas
or
add
test
(bad)
sub
stc
jecxz
cmovs
pop
das
pop
(bad)
(bad)
push
adc
or
or
push
inc
je
(bad)
es
push
and
sahf
mov
jb
or
std
jmp
neg
push
pushf
dec
test
mov
(bad)
(bad)
mov
xor
xchg
fdivp
in
mov
xor
adc
js
cld
(bad)
call
idiv
sub
je
ficomp
adc
add
scas
xchg
pop
add
mov
mov
dec
sbb
jmp
push
dec
cmp
int3
or
push
fiadd
pop
push
ins
loope
mov
sti
out
jmp
out
mov
popf
xchg
into
sub
dec
fidiv
(bad)
(bad)
(bad)
inc
inc
jb
inc
nop
cdq
out
jae
mov
mov
inc
jb
push
adc
(bad)
(bad)
jg
(bad)
jmp
out
(bad)
mov
dec
ja
addr16
lods
std
movs
movs
lds
loopne
inc
ins
popa
cmp
dec
ins
pop
sti
xor
cmp
adc
(bad)
fmul
lock
fsubr
jecxz
(bad)
add
and
(bad)
(bad)
(bad)
push
mov
sbb
fisttp
sahf
leave
jecxz
mov
jmp
loopne
pop
or
dec
call
sub
outs
les
cmp
(bad)
(bad)
inc
aaa
and
pop
mov
mov
push
sub
inc
repnz
cld
sbb
pop
mov
xchg
repnz
xchg
pop
(bad)
jg
sub
imul
push
pop
add
(bad)
(bad)
(bad)
inc
fiadd
cwde
add
out
xor
sub
cmp
call
sbb
xchg
jl
loop
mov
fxch
(bad)
aaa
es
shl
sahf
fucomip
mov
mov
add
mov
popa
cld
pop
movs
mov
inc
push
das
mov
popa
stos
movs
inc
nop
shr
adc
call
out
lods
dec
mov
(bad)
jnp
(bad)
jl
xchg
jp
sbb
lods
adc
(bad)
(bad)
call
repnz
cmc
cdq
push
sub
and
mov
inc
cli
aad
(bad)
jg
xor
out
mov
jno
in
jg
jmp
jg
call
fcom
push
mov
or
data16
xchg
xchg
stos
inc
in
sub
call
gs
retf
push
adc
lock
pushf
jb
loopne
shr
stos
test
js
dec
jl
(bad)
(bad)
(bad)
cmp
xchg
ror
in
loope
shl
and
daa
stc
retf
and
popf
push
sti
push
cmp
(bad)
jg
mov
or
push
test
mov
xor
cmp
loopne
(bad)
(bad)
(bad)
inc
jmp
sub
xchg
xor
movs
adc
div
es
mov
out
xor
pop
addr16
dec
shr
(bad)
push
sbb
cmp
in
cs
cli
das
push
mov
jb
dec
in
pop
(bad)
(bad)
jmp
add
or
mov
fadd
int
sub
lock
(bad)
(bad)
(bad)
inc
imul
cmp
jae
stos
jp
add
mov
test
mov
(bad)
(bad)
jmp
dec
pop
in
aam
js
add
cmc
mov
jb
js
pop
and
icebp
sbb
cmp
jo
sti
sar
or
imul
shl
arpl
or
(bad)
clc
jo
(bad)
(bad)
(bad)
call
cmp
sahf
ins
add
inc
lahf
clc
xchg
adc
adc
(bad)
jmp
sbb
loopne
iret
sub
cli
xor
xchg
mov
cmp
push
stc
into
mov
push
jae
(bad)
sub
push
aas
(bad)
(bad)
(bad)
(bad)
jle
push
jp
mov
out
outs
mov
adc
xchg
sti
add
inc
inc
stc
mov
inc
and
push
and
aam
xchg
xor
pop
lods
mov
xor
(bad)
(bad)
jmp
push
xchg
xor
jecxz
leave
lods
mov
clc
std
fcomi
dec
sub
push
mov
pop
mov
cmp
movsx
movs
sahf
xlat
adc
sbb
ins
cld
div
out
int3
xor
(bad)
(bad)
(bad)
push
daa
test
mov
imul
or
repnz
inc
neg
(bad)
jg
mov
jb
bound
data16
push
ins
push
sbb
(bad)
(bad)
call
gs
xchg
jno
std
add
mov
pop
mov
arpl
xlat
out
outs
jp
mov
xchg
pop
fwait
sbb
(bad)
(bad)
jmp
popf
push
pop
jo
mov
add
dec
in
addr16
(bad)
(bad)
(bad)
push
add
adc
or
sbb
lahf
sub
mov
cmp
(bad)
(bad)
(bad)
jmp
and
lock
or
iret
adc
mov
out
and
mov
pop
movs
xchg
leave
sub
or
ror
jo
sar
(bad)
(bad)
fisttp
or
inc
sbb
dec
dec
ror
push
int
push
push
leave
arpl
pop
sub
jo
mov
(bad)
(bad)
(bad)
(bad)
fst
mov
inc
es
adc
stos
data16
retf
and
push
andps
xchg
mov
xlat
mov
(bad)
(bad)
call
lods
mov
cmp
lahf
add
scas
jl
mov
dec
clc
(bad)
call
and
push
out
xor
mov
in
(bad)
jmp
hlt
or
repz
and
inc
js
int
jo
icebp
dec
xlat
cmp
lahf
(bad)
(bad)
(bad)
push
pop
sbb
sbb
cmp
jg
mov
and
in
cmp
out
or
(bad)
dec
stc
pop
add
movs
jecxz
inc
add
dec
push
pop
cmps
xor
push
or
ror
test
(bad)
(bad)
jg
cs
neg
scas
jg
sbb
jae
mov
ds
dec
mov
outs
sub
lods
xor
add
cmps
test
inc
(bad)
std
in
pop
les
jmp
cmp
push
sahf
shl
pop
cmp
mov
jecxz
mov
jl
dec
ins
(bad)
dec
cmps
(bad)
(bad)
jg
and
or
int3
cmp
sbb
daa
mov
inc
and
(bad)
out
clc
dec
scas
fdivr
inc
mov
adc
loopne
xlat
call
and
mov
in
mov
pop
std
repz
mov
clc
dec
fcomp
push
xor
call
out
cmp
imul
cmp
daa
or
(bad)
(bad)
(bad)
call
inc
icebp
xchg
ja
test
aam
pop
fiadd
cmc
imul
(bad)
(bad)
jmp
cmp
cmp
push
jae
aaa
sbb
add
fs
cmc
xor
aaa
ret
push
rol
push
and
lock
ret
dec
mov
adc
ins
xor
mov
mov
cmp
jns
or
pop
imul
mov
sub
stos
cmp
cs
sbb
pushf
imul
inc
iret
or
jo
aam
xor
mov
movs
and
dec
add
mov
pop
inc
sar
jae
lahf
inc
leave
add
(bad)
(bad)
call
out
jbe
add
imul
lods
jae
(bad)
xor
push
(bad)
(bad)
jmp
leave
out
aas
rol
out
in
sub
div
cmp
stc
loopne
pop
adc
(bad)
xchg
jnp
inc
outs
addr16
lods
and
push
(bad)
call
add
xchg
repnz
repz
mov
push
adc
(bad)
(bad)
(bad)
(bad)
jmp
pushf
repz
pop
int3
les
xchg
or
pop
mov
or
mov
xchg
xor
(bad)
call
jbe
mov
or
std
ret
pushf
sbb
mov
shl
stc
test
mov
(bad)
(bad)
jg
sbb
and
ss
das
and
pop
mov
or
stos
into
cmp
mov
or
mov
xchg
xchg
ja
ret
dec
xchg
dec
scas
push
(bad)
(bad)
call
push
scas
test
mov
sbb
aam
and
xor
call
mov
mov
lock
cld
mov
xor
or
push
push
call
(bad)
cmp
add
mov
jno
ffreep
and
test
dec
xor
inc
sub
adc
gs
(bad)
fisttp
push
push
out
fcomip
call
test
jg
dec
cmps
mov
stos
jns
dec
and
paddusb
cmc
inc
jecxz
nop
jns
ffreep
rol
inc
jmp
mov
(bad)
(bad)
(bad)
(bad)
sti
jno
popa
fwait
mov
pop
prefetcht2
jg
sti
hlt
dec
mov
xchg
rol
mov
retf
repnz
push
cmc
mov
push
pop
rol
call
sar
(bad)
adc
push
popa
dec
adc
fld
sub
xchg
mov
add
fs
in
cmp
jmp
pop
cmps
imul
jnp
aam
xor
adc
fcomp
mov
call
inc
dec
mov
cwde
daa
mov
sar
add
xchg
add
jecxz
(bad)
(bad)
(bad)
push
imul
jecxz
lods
imul
cmp
mov
xchg
fwait
xchg
jecxz
and
pushf
push
(bad)
(bad)
(bad)
inc
jmp
aas
or
xchg
push
jle
inc
mov
inc
dec
or
cmps
jae
fimul
lds
out
shl
ja
adc
pop
sub
int
xor
mov
add
(bad)
push
sbb
(bad)
(bad)
js
int3
jne
mov
xor
dec
adc
jns
bound
(bad)
cs
sti
fwait
push
mov
(bad)
(bad)
mov
ins
popa
sti
dec
mov
mov
add
lock
adc
push
idiv
mov
(bad)
inc
mov
mov
sub
inc
add
inc
xchg
mov
jmp
(bad)
jmp
cdq
dec
jcxz
adc
xor
or
dec
out
mov
sub
stos
jbe
loope
call
jns
xor
js
pop
es
scas
inc
je
sub
mul
test
(bad)
(bad)
call
mov
xor
mov
aas
xlat
popa
sar
jge
ja
jle
aaa
js
mov
jmp
es
xor
cmp
mov
test
mov
jmp
dec
fnstsw
push
rcr
fadd
inc
sbb
hlt
stos
in
(bad)
(bad)
call
out
not
sbb
fs
loope
in
das
(bad)
xchg
add
(bad)
(bad)
(bad)
(bad)
mov
or
inc
ss
fst
outs
jg
ret
push
or
(bad)
call
cwde
(bad)
sub
sub
mov
xchg
mov
dec
jns
pusha
push
dec
in
jmp
inc
dec
(bad)
(bad)
(bad)
jg
sub
cld
xchg
enter
sbb
retf
stos
mov
xchg
sbb
fwait
xchg
test
fs
fisttp
mov
(bad)
call
push
cmp
xor
dec
xchg
add
jmp
fstp
repnz
popf
mov
dec
fnstcw
push
jle
push
rsm
aad
icebp
adc
ja
(bad)
push
(bad)
paddusw
shl
pop
sbb
popa
and
fbld
(bad)
(bad)
(bad)
dec
sub
add
sar
push
mov
ror
(bad)
pop
mov
call
loope
jecxz
xor
bound
sub
inc
scas
fistp
stos
(bad)
call
push
leave
ds
out
mov
fld
pop
inc
pop
sub
adc
xor
(bad)
mov
inc
fcmovu
adc
sub
mov
outs
aas
scas
sub
inc
ins
inc
lods
icebp
lock
(bad)
(bad)
call
movs
ja
or
xchg
add
mov
out
aas
(bad)
push
imul
and
call
or
mov
out
sbb
dec
push
popf
gs
mov
jg
jmp
sub
xchg
test
(bad)
(bad)
jmp
jecxz
leave
bound
imul
and
(bad)
lock
mov
cld
cmp
pop
jne
or
ja
das
pop
scas
fisttp
out
push
test
xor
sbb
adc
iret
in
cli
jnp
in
loopne
add
(bad)
(bad)
(bad)
(bad)
jl
aad
push
frstor
mul
sbb
push
nop
add
rcr
and
stc
daa
jmp
(bad)
(bad)
call
and
sub
dec
mov
dec
clc
mov
movs
(bad)
lock
push
jmp
mov
(bad)
xlat
retf
(bad)
(bad)
push
les
push
and
not
xor
lods
fs
ja
mov
(bad)
(bad)
(bad)
push
pop
cmps
pop
cs
dec
in
inc
call
test
cmp
pop
jmp
sbb
je
mov
scas
dec
fimul
pop
jnp
pop
mov
xchg
sbb
cli
rol
xor
push
jo
out
pop
daa
scas
(bad)
call
stos
inc
bound
xor
outs
lds
stos
sar
jmp
xchg
jno
test
outs
adc
(bad)
mov
mov
pop
sbb
(bad)
(bad)
cld
push
and
out
imul
loopne
sbb
pop
sbb
sbb
out
dec
jp
test
add
xor
(bad)
or
push
mov
pop
jecxz
xor
loopne
(bad)
call
xchg
mov
dec
jecxz
mov
sub
loop
stos
(bad)
mov
xchg
lahf
adc
std
retfw
(bad)
(bad)
call
repnz
pop
sbb
out
popf
scas
fidiv
mov
adc
(bad)
(bad)
inc
jge
push
xor
int3
cmc
enter
test
xchg
(bad)
(bad)
call
inc
xor
jns
jo
inc
mov
in
(bad)
and
mul
sbb
inc
(bad)
(bad)
(bad)
(bad)
mov
sbb
and
fbld
jle
arpl
movs
in
pop
imul
(bad)
(bad)
(bad)
inc
call
ret
ss
leave
jne
inc
xchg
xchg
cdq
sub
cli
(bad)
jmp
adc
xor
popa
mov
fld
imul
pop
fnstenv
(bad)
(bad)
call
es
into
pavgw
mov
inc
(bad)
sti
mov
stos
nop
xchg
jne
fwait
cmp
(bad)
dec
repnz
div
dec
mov
fdivr
les
ret
pop
cld
mov
out
mov
in
(bad)
(bad)
dec
or
imul
daa
inc
sti
mov
clc
(bad)
cmps
inc
inc
rcl
shl
or
movs
jno
(bad)
(bad)
jmp
lahf
nop
inc
pop
mov
fdivr
ds
stos
ror
(bad)
cmp
(bad)
(bad)
mov
mov
call
out
and
mov
fild
retf
(bad)
(bad)
dec
add
ins
jmp
inc
xchg
or
mov
call
mov
jle
push
and
lahf
movs
xchg
sub
cwde
and
lods
jnp
add
mov
dec
les
bound
in
mov
(bad)
(bad)
(bad)
jg
nop
or
push
fldcw
xchg
mov
adc
(bad)
jmp
jo
pop
jae
pop
inc
adc
call
mov
and
or
xor
(bad)
inc
lahf
(bad)
mov
mul
pop
dec
shl
xchg
dec
stc
inc
fs
mov
sub
movs
cmp
in
xchg
xchg
xchg
push
dec
sbb
shl
enter
fwait
lea
push
scas
loopne
(bad)
fnstcw
mov
(bad)
(bad)
inc
push
dec
(bad)
sub
inc
movs
push
rcl
xchg
ins
mov
int
push
mov
pushf
gs
xor
(bad)
(bad)
dec
sahf
int
xchg
xchg
adc
inc
in
das
aad
jae
(bad)
push
push
test
sbb
sti
jge
sbb
popa
mov
lods
pop
stos
add
jle
stos
mov
sub
or
rol
mov
ins
in
(bad)
(bad)
(bad)
inc
inc
imul
jecxz
loop
retf
add
repz
(bad)
bound
je
in
push
cs
int3
fcmovnb
inc
aam
add
out
or
dec
or
lods
dec
leave
push
adc
mov
mov
loop
(bad)
fidivr
xchg
push
popa
jmp
mov
sub
mov
or
fldenv
std
jno
bound
mov
fist
(bad)
mov
test
aaa
scas
cli
mov
stc
mov
or
mov
jle
xchg
xchg
add
call
sbb
cli
das
mov
mov
cs
xchg
add
stc
sub
sub
(bad)
jmp
jmp
(bad)
jmp
fst
add
dec
out
push
loopne
mov
mov
push
push
inc
mov
or
mov
arpl
dec
inc
or
arpl
(bad)
(bad)
(bad)
call
fwait
out
xchg
and
out
dec
lods
inc
sub
push
cs
sbb
sbb
add
(bad)
(bad)
push
jmp
loopne
sub
aas
pop
and
jmp
add
sbb
pop
fadd
sub
loope
(bad)
(bad)
(bad)
push
jle
xchg
pop
shl
mov
fdivr
stc
pop
fnstcw
cmp
lods
mov
push
adc
scas
push
adc
push
sbb
push
inc
sbb
jg
fiadd
aaa
into
jno
mov
push
dec
pop
hlt
(bad)
inc
fucomip
cmp
push
fdivr
addr16
jno
lods
loop
or
jns
shl
ds
mov
cmp
dec
jp
enter
(bad)
(bad)
mov
pop
and
inc
shr
add
ins
ss
iretw
mov
push
jmp
(bad)
(bad)
call
clc
sbb
(bad)
lahf
push
mov
mov
(bad)
popf
cmps
add
mov
pop
shl
adc
xchg
dec
in
imul
pop
mov
mov
pop
mov
adc
(bad)
(bad)
inc
hlt
gs
inc
xor
push
mov
sbb
outs
mov
sub
(bad)
add
(bad)
(bad)
(bad)
in
inc
push
pop
or
cmp
stos
add
test
sti
push
mov
xchg
sbb
(bad)
(bad)
(bad)
call
cmp
shl
int
inc
(bad)
fstp
dec
jne
sbb
(bad)
(bad)
push
(bad)
(bad)
jmp
dec
push
jns
imul
test
or
add
lea
mov
dec
(bad)
mov
loop
test
mov
jle
pop
test
dec
pop
mov
into
xchg
adc
inc
fcomp
lea
call
mov
mov
pusha
cmp
push
dec
cmps
(bad)
xor
and
(bad)
push
enter
movups
das
sar
out
lods
js
sub
dec
or
sub
lods
inc
jbe
push
mov
or
(bad)
(bad)
jmp
out
std
test
mov
test
mov
(bad)
call
sbb
stc
mov
in
sbb
shl
sub
xor
(bad)
out
clc
(bad)
outs
ret
pop
or
dec
sbb
nop
mov
fisubr
loopne
in
scas
enter
in
lds
adc
(bad)
jg
mov
jnp
add
mov
jge
xor
pushf
(bad)
call
dec
dec
add
fsub
cmp
sub
rcl
aas
aad
push
int3
adc
mov
je
xor
sbb
push
sub
loopne
(bad)
(bad)
fild
sub
fwait
pop
dec
mov
push
inc
outs
or
dec
in
call
lods
jmp
push
mov
rol
xchg
(bad)
jnp
pop
aad
add
movs
popf
loope
mov
push
mov
(bad)
gs
dec
sahf
sub
or
dec
and
dec
loop
jecxz
lods
xchg
jbe
(bad)
(bad)
jmp
pop
dec
or
outs
out
sbb
cmp
bound
jmp
lods
dec
shl
xor
add
lock
mov
pop
xchg
pop
xchg
xlat
mov
test
int3
(bad)
push
sbb
cmp
push
stc
(bad)
(bad)
(bad)
jmp
shr
std
lods
std
(bad)
fld
xor
bnd
adc
cmps
xor
sahf
call
aas
aas
jg
fld
daa
repnz
scas
lock
cdq
dec
dec
xlat
div
inc
pop
mov
and
shl
shl
stos
mov
and
add
mov
fdiv
or
sbb
je
invd
and
(bad)
call
mov
dec
js
sub
cmp
stos
icebp
dec
pop
push
sub
ins
jae
or
(bad)
(bad)
stc
ret
fbstp
cmovae
lea
jmp
push
or
repz
(bad)
inc
(bad)
cdq
jle
rcr
push
or
pop
mov
jl
and
xor
mov
sar
(bad)
(bad)
mov
xchg
out
cli
pop
stos
cwde
dec
cdq
fstp
mov
push
jno
imul
sti
loop
cmp
xchg
mov
jbe
lods
nop
push
hlt
push
pop
sar
mov
jae
fnsave
xor
cmps
xchg
sub
call
and
(bad)
(bad)
mov
int3
xor
(bad)
mov
pop
xor
stos
ins
fmul
jg
(bad)
(bad)
(bad)
inc
jno
and
rol
fadd
(bad)
mov
sbb
fcomi
xchg
or
(bad)
(bad)
inc
fs
mov
loope
cmp
push
xor
std
into
jp
pop
aaa
dec
(bad)
jmp
cwde
outs
dec
sbb
movs
adc
in
(bad)
(bad)
in
cli
adc
loopne
(bad)
(bad)
jmp
pop
push
cmps
fimul
jmp
ss
mov
out
cmp
push
daa
jne
rol
xor
call
fidiv
mov
jle
enter
lahf
(bad)
or
clc
mov
lods
(bad)
push
push
inc
pop
fimul
mov
fsub
mov
popa
(bad)
cli
inc
clc
mov
pop
in
das
adc
ficom
xor
and
test
adc
cwde
or
jecxz
aad
out
lock
clc
dec
xchg
in
inc
imul
out
fiadd
or
leave
call
dec
fcomp
push
push
jg
adc
push
ss
(bad)
(bad)
push
xchg
pop
test
push
pop
je
rcl
mov
mov
in
pop
out
cli
scas
clc
mov
pop
fwait
sbb
jmp
xchg
jmp
inc
cld
push
rcr
out
ret
dec
into
(bad)
(bad)
jg
cld
loop
sbb
into
jmp
push
or
dec
lock
fstp
mov
or
jmp
push
cmp
in
xlat
ret
dec
stc
jbe
(bad)
(bad)
mov
mov
lock
sbb
ret
mov
or
mov
adc
fdivr
sub
inc
mov
adc
sub
push
push
adc
call
jnp
and
sub
das
jecxz
fisubr
scas
and
stos
sub
and
add
and
fist
in
(bad)
mov
fs
xor
pop
in
add
xchg
ins
(bad)
imul
sub
(bad)
(bad)
(bad)
jnp
xlat
mov
in
jle
test
cli
xchg
rcr
out
push
mov
aam
iret
cmp
xor
sar
and
dec
mov
xor
add
(bad)
(bad)
push
cwde
cmp
lea
fimul
adc
mov
and
mov
xchg
(bad)
(bad)
mov
mov
add
xchg
or
outs
push
js
in
(bad)
(bad)
dec
addr16
(bad)
or
ins
stos
out
loop
bswap
fstp
cwde
sub
mov
xor
popf
(bad)
(bad)
(bad)
jmp
cs
inc
pop
(bad)
adc
xchg
push
clc
mov
test
popf
dec
(bad)
jmp
(bad)
loope
push
xor
jb
(bad)
js
mov
and
jbe
shl
call
sub
adc
popa
movs
adc
adc
mov
(bad)
(bad)
inc
inc
das
sbb
js
int
inc
push
imul
pop
inc
inc
fsub
addr16
rcr
inc
inc
cmp
or
iret
pop
(bad)
loope
lock
(bad)
(bad)
(bad)
push
jbe
jbe
mov
mov
inc
push
out
add
mov
and
je
(bad)
(bad)
(bad)
jmp
add
cmp
jp
(bad)
mov
fwait
test
mov
and
dec
push
je
mov
(bad)
jg
mov
xor
out
stos
push
ss
cmp
sbb
sub
test
push
sub
(bad)
(bad)
cmp
fist
push
sbb
cmc
jno
jg
test
dec
std
repnz
inc
shr
(bad)
(bad)
(bad)
call
(bad)
stc
or
jmp
xor
mov
test
loopne
cwde
jmp
test
(bad)
(bad)
(bad)
(bad)
jp
aas
jb
pop
push
pop
mov
out
lahf
jl
inc
mov
or
rol
xchg
sub
jge
(bad)
(bad)
dec
in
out
aad
daa
bound
jns
add
push
jmp
mov
sub
js
xchg
or
adc
pop
mov
outs
(bad)
(bad)
(bad)
jmp
push
in
fld
ins
std
div
(bad)
xchg
or
dec
inc
hlt
(bad)
call
add
fidivr
ja
push
mov
cld
iret
dec
loop
xchg
aam
ror
je
cli
pop
dec
mov
and
(bad)
mov
mov
lods
ins
mov
jbe
jo
or
add
cmp
jmp
xor
cmc
and
mov
mov
cs
pop
fs
inc
es
ins
cmp
data16
xchg
(bad)
(bad)
jg
enter
cmp
mov
pop
sbb
sub
sub
push
jbe
mov
cmps
or
and
xlat
jg
and
jne
movs
(bad)
(bad)
(bad)
push
in
aam
aaa
pusha
out
jae
pushf
arpl
sar
es
dec
or
daa
pop
inc
cmp
call
hlt
pop
xor
cmp
cmp
pop
int3
fisttp
ror
mov
(bad)
(bad)
(bad)
jmp
outs
dec
out
pop
pop
inc
sbb
ins
repz
xchg
rdpmc
mov
mov
pop
xchg
(bad)
(bad)
dec
pop
jge
jle
cmc
ins
je
jmp
sub
sahf
adc
jg
call
jmp
mov
fst
xchg
icebp
mov
mov
mov
push
scas
jp
icebp
push
xor
call
lahf
mov
sub
inc
mov
cdq
les
ficom
xchg
pusha
repnz
clc
sbb
jle
push
and
adc
movs
push
mov
jg
sub
sbb
(bad)
push
mov
xor
bound
call
lods
cmp
call
out
inc
mov
icebp
out
ins
dec
xor
ss
sub
les
jmp
jns
sbb
pop
dec
imul
adc
in
fisttp
mov
adc
jp
loop
lock
(bad)
push
daa
dec
enter
add
fistp
dec
add
or
sbb
call
jle
xor
and
mov
fisttp
or
cmc
cdq
push
cmp
push
and
rcr
pop
cmc
call
and
mov
push
pop
test
inc
frstor
cmps
outs
pop
jl
lods
(bad)
(bad)
(bad)
jmp
xor
int
cmp
jle
repnz
mov
mov
(bad)
or
sbb
sbb
(bad)
(bad)
ds
or
adc
dec
jno
jmp
enter
pop
push
shl
jl
call
in
mov
(bad)
cmp
fcomp
mov
jne
mov
(bad)
(bad)
dec
mov
jge
and
add
and
inc
call
or
dec
clc
add
jp
sub
sub
dec
stos
push
lods
das
push
jle
pop
mov
xchg
and
fdivrp
rcr
out
in
mov
and
pop
les
fldenv
jno
mov
adc
jp
nop
jle
popa
xchg
jb
fidivr
jg
icebp
add
jno
icebp
(bad)
pop
xchg
call
rol
cmp
(bad)
(bad)
(bad)
call
adc
enter
cmps
in
dec
test
jne
xor
adc
mov
sar
mov
ret
sub
retf
pop
push
sub
pop
lock
aaa
jg
outs
sub
adc
mov
(bad)
(bad)
(bad)
mov
sbb
mov
push
test
aaa
stos
xlat
jle
jp
nop
sbb
(bad)
call
sahf
lods
shl
sar
push
pusha
and
dec
mov
and
and
(bad)
(bad)
jmp
dec
pop
jb
and
add
sbb
movs
imul
cmc
lea
ror
lock
(bad)
std
sub
jl
cmp
icebp
jns
scas
lods
add
stos
idiv
sti
push
(bad)
call
fwait
cmp
push
fbld
mov
cmp
cdq
inc
call
icebp
cmc
test
push
jg
xor
iret
lods
(bad)
(bad)
(bad)
call
das
mov
mov
push
jmp
mov
xor
mov
sbb
(bad)
shl
pop
lock
inc
inc
pushf
adc
inc
lods
xchg
and
nop
sub
stc
xchg
(bad)
(bad)
(bad)
jmp
shr
add
mov
jp
jmp
ja
popf
outs
and
std
(bad)
(bad)
dec
addr16
jecxz
mov
mov
dec
lock
cmp
out
cmp
lds
sbb
inc
in
pop
sbb
dec
and
jp
fwait
arpl
(bad)
(bad)
jmp
push
xchg
retf
and
jle
sub
inc
jp
(bad)
(bad)
(bad)
call
sar
das
sbb
push
ficom
inc
(bad)
or
inc
jo
xchg
aad
add
inc
movs
mov
and
sub
sub
push
stos
(bad)
(bad)
(bad)
dec
pop
xchg
sbb
xchg
cmps
aaa
jnp
rcr
lea
push
fiadd
dec
or
(bad)
dec
xor
mov
test
xchg
mov
mov
bound
and
test
dec
cmp
sub
xor
jb
ret
rcr
idiv
popf
adc
call
(bad)
loope
xlat
cmp
push
imul
push
cmp
mov
hlt
mov
lock
adc
repnz
push
xlat
movs
fild
sbb
imul
cmp
std
fsubr
cli
jg
dec
adc
into
stos
sar
lods
imul
in
push
retf
(bad)
push
push
jmp
test
sbb
cdq
sar
pop
test
sti
xchg
jmp
jae
xchg
lods
retf
jno
jno
pop
jecxz
lods
cmps
lock
(bad)
out
push
std
(bad)
mov
inc
xchg
scas
pop
or
jb
sbb
sar
mov
ret
jbe
(bad)
jg
mov
stos
sti
mov
jo
sub
cmp
cmp
data16
aaa
pop
hlt
(bad)
push
je
out
mov
sbb
xlat
into
adc
test
in
scas
cli
(bad)
jg
lds
add
cmp
add
(bad)
(bad)
jg
inc
dec
(bad)
push
xchg
pop
fst
inc
in
sbb
xchg
aad
fucomip
mov
(bad)
(bad)
(bad)
push
sub
push
and
add
je
test
dec
arpl
mov
fld
mov
call
neg
or
inc
in
cli
fwait
add
loop
neg
xchg
mov
cmp
jmp
xlat
jmp
in
mov
sbb
jle
jle
es
clc
(bad)
jg
mov
pop
adc
and
inc
sub
ret
loopne
pop
sti
(bad)
jmp
mov
das
sbb
cli
mov
cli
cmp
adc
and
loopne
mov
jg
mov
push
sbb
or
outs
aad
fcomip
inc
bound
fsubr
mov
xchg
push
mov
(bad)
(bad)
(bad)
jmp
(bad)
fidivr
jmp
xchg
test
xchg
inc
std
or
mov
or
push
cmp
sahf
or
shr
(bad)
(bad)
fild
pop
pusha
jns
jns
ror
mov
inc
and
jp
arpl
(bad)
inc
pop
(bad)
(bad)
(bad)
call
fisttp
jl
loop
imul
push
dec
or
inc
or
nop
jno
sbb
mov
cmc
pop
pushf
in
xchg
jb
jb
jae
popa
loopne
imul
(bad)
fsub
pop
cmp
(bad)
push
retf
xor
add
lods
jo
inc
sbb
jns
and
push
mov
(bad)
jmp
jno
sub
fstp
pop
pop
mov
sbb
repnz
push
sbb
imul
mov
pushf
repnz
and
add
lahf
(bad)
std
call
pop
dec
stos
jle
and
aaa
in
jmp
dec
jbe
cmps
gs
push
pop
xchg
dec
fimul
enter
cmp
xchg
pusha
mov
adc
cld
mov
out
(bad)
fcomip
(bad)
fcmovbe
js
pop
mov
or
mov
aas
jne
sar
cmc
pop
cmps
lock
jmp
imul
jge
pop
jl
xchg
mov
(bad)
call
sub
out
jne
fldcw
mov
lds
cmp
mov
adc
(bad)
(bad)
dec
stos
fnstenv
out
and
jnp
sti
adc
(bad)
div
xor
jmp
jmp
out
or
(bad)
stc
sbb
enter
pop
ror
ins
jmp
lods
inc
cmps
loope
data16
jg
inc
sub
push
repnz
ins
fiadd
(bad)
(bad)
call
movs
cld
jnp
in
inc
bound
sbb
mov
enter
xor
xchg
mov
daa
cwde
hlt
dec
mov
call
and
arpl
mov
mov
jnp
xchg
jmp
call
in
(bad)
(bad)
(bad)
jmp
xor
inc
xor
call
xor
mov
in
popa
repnz
dec
dec
push
cmp
pop
retf
add
(bad)
(bad)
inc
inc
lock
fsub
mov
xchg
lea
rol
popf
or
sbb
dec
(bad)
(bad)
(bad)
(bad)
cmp
ins
and
(bad)
xor
dec
add
cmp
stos
inc
movs
pop
in
fs
scas
shl
(bad)
(bad)
(bad)
jmp
js
int3
cmp
push
sub
scas
xor
in
jae
aas
in
cmp
(bad)
(bad)
call
jg
lahf
push
or
dec
pushf
push
das
nop
xchg
dec
mov
(bad)
mov
pop
mov
fcomip
ins
pop
sete
sub
in
test
jmp
out
cmp
sub
pop
push
and
and
popa
aaa
enter
(bad)
jmp
daa
outs
add
bound
dec
push
ins
and
jae
loope
repnz
(bad)
(bad)
call
mov
scas
sbb
in
mov
jl
mov
jle
mov
inc
rcl
inc
(bad)
(bad)
(bad)
(bad)
cmp
not
ds
sbb
js
jmp
ret
dec
pop
mov
imul
mov
jecxz
push
aad
enter
retf
hlt
or
jo
test
je
xor
mov
xchg
and
call
shr
mov
aam
loopne
jge
(bad)
(bad)
fstp
xchg
(bad)
fiadd
cli
add
cmp
push
movs
push
fadd
xor
fldcw
ja
(bad)
(bad)
(bad)
call
inc
add
stc
push
loopne
and
mov
jb
push
or
jp
cmp
mov
(bad)
(bad)
(bad)
jmp
dec
mov
(bad)
outs
cmps
pusha
push
popf
xchg
aam
lea
add
sti
jmp
call
dec
xlat
jmp
jp
mov
mov
jnp
call
scas
stc
addr16
(bad)
(bad)
(bad)
call
icebp
in
ja
jl
push
push
sahf
aas
fwait
xlat
std
push
test
cmp
cmp
loope
(bad)
(bad)
jmp
or
fiadd
sbb
repz
xor
(bad)
(bad)
(bad)
call
sbb
inc
add
inc
xchg
jbe
xchg
mov
dec
fisttp
(bad)
call
rol
icebp
fwait
lods
or
push
iret
pop
sbb
retf
pop
jae
pop
xchg
xchg
loope
pop
cs
in
out
(bad)
(bad)
(bad)
call
fild
retf
adc
jmp
loope
jne
div
pop
dec
sub
push
aaa
jae
(bad)
(bad)
(bad)
jmp
adc
fisttp
jecxz
inc
lds
mov
or
jns
iret
ds
cmp
setns
(bad)
inc
stos
xchg
test
in
mov
push
cmp
xor
inc
enter
mov
pop
call
sbb
mov
push
xor
xlat
dec
pop
add
loopne
xchg
mov
inc
jae
jp
cdq
or
call
aam
fistp
rol
cld
jbe
pop
(bad)
int
cld
(bad)
(bad)
call
adc
call
mov
sub
out
mov
sbb
(bad)
cs
mov
push
adc
loop
adc
push
into
imul
cmps
add
fdecstp
xchg
sahf
out
or
int3
xor
add
mov
push
sub
mov
push
adc
fcomip
(bad)
(bad)
inc
and
push
jnp
jecxz
push
push
in
loop
xchg
repz
adc
sub
fisttp
dec
stos
hlt
jbe
out
shl
sbb
cdq
mov
cmp
sbb
xor
(bad)
(bad)
(bad)
jmp
fs
cli
mov
lock
nop
dec
pop
push
push
rcr
aas
jecxz
js
or
(bad)
(bad)
call
mov
sti
pop
cmc
(bad)
idiv
test
(bad)
(bad)
dec
addr16
sahf
push
mov
shl
out
xchg
jae
icebp
jne
(bad)
call
or
cmps
lods
mov
lods
aad
pop
xlat
push
pop
pushf
xor
aaa
cmp
mov
retf
pop
out
jmp
aad
pop
in
out
cmp
jle
dec
add
(bad)
(bad)
(bad)
jmp
push
ror
(bad)
sbb
push
enter
sahf
lahf
mov
adc
jns
mov
fucomip
ins
stos
test
sbb
push
std
xor
mov
icebp
(bad)
call
dec
das
enter
jae
mov
push
enter
mov
(bad)
(bad)
(bad)
clc
cmp
add
popf
mul
mov
in
mov
xlat
leave
in
js
loop
lock
fcomip
mov
test
inc
xor
mov
pop
(bad)
inc
fld
cmps
jb
cmps
das
clc
sar
loop
call
inc
in
xor
adc
push
jno
xchg
or
inc
mov
sbb
(bad)
(bad)
mov
dec
mov
int3
xor
sbb
jo
jge
fwait
add
push
outs
add
(bad)
(bad)
(bad)
jmp
iret
fisttp
pop
outs
inc
ret
jno
push
jb
sahf
lods
mov
sbb
mov
xor
(bad)
(bad)
(bad)
jmp
xchg
ins
call
mov
push
in
cmp
int3
jno
and
lahf
xchg
mov
popf
mov
dec
retf
aam
ins
lds
push
jecxz
fmul
adc
mov
repz
and
pop
mov
jb
jmp
jnp
pop
(bad)
(bad)
(bad)
(bad)
inc
scas
and
mov
mov
lods
ins
dec
dec
test
test
sbb
(bad)
(bad)
dec
dec
pusha
xor
call
jmp
adc
and
pop
sbb
sub
(bad)
(bad)
dec
call
cmp
test
or
mov
cmp
mov
arpl
xchg
inc
(bad)
retf
add
icebp
(bad)
jmp
call
jns
xor
jo
cld
(bad)
(bad)
out
push
outs
sti
sub
sub
sub
repnz
popf
addr16
cld
cmps
adc
pop
mov
aaa
sar
movs
jp
cli
icebp
std
scas
cmp
cmp
(bad)
out
jl
fdiv
xlat
pop
call
xchg
push
push
mov
mov
cli
(bad)
jmp
ins
in
mov
pusha
fcmovbe
int3
aaa
ins
leave
retf
adc
les
iret
cwde
pushf
fcomp
scas
retf
lock
bound
in
inc
cld
(bad)
inc
sbb
jnp
pop
sbb
shr
and
dec
fst
shr
cli
mov
mov
ins
(bad)
in
cmp
call
pop
push
jecxz
or
jle
xchg
loope
data16
addr16
xor
aam
bnd
in
outs
cmp
(bad)
jmp
enter
out
add
mov
and
inc
or
dec
sub
push
fidivr
push
outs
clc
push
dec
and
das
xor
fcmovnu
jecxz
data16
(bad)
pop
or
movs
stos
xor
fist
cmp
(bad)
jg
loopne
mov
repnz
icebp
pop
retf
ficomp
mov
stos
mov
(bad)
(bad)
jmp
sar
jg
pop
jne
cld
jmp
xchg
mov
add
rcr
(bad)
stos
jle
sar
(bad)
(bad)
call
xchg
fs
stos
out
in
lods
xchg
(bad)
jmp
mov
call
cmps
cmp
repnz
in
jmp
jb
pop
dec
inc
test
rcr
push
mov
sbb
or
daa
iret
(bad)
(bad)
(bad)
inc
movs
jg
xchg
loop
push
ins
repnz
out
mov
mov
adc
(bad)
ins
sub
js
(bad)
(bad)
inc
or
dec
xchg
add
fsubr
cli
jmp
into
rcr
adc
(bad)
(bad)
jmp
cdq
jmp
inc
sub
ror
loope
jb
jmp
(bad)
mov
jmp
jl
pop
lea
and
cmps
dec
adc
loop
(bad)
(bad)
mov
jl
add
add
push
xchg
push
push
(bad)
rcl
pop
out
mov
dec
sbb
sbb
push
xchg
test
outs
scas
loop
inc
mov
shr
cli
enter
inc
mov
xor
mov
pop
and
push
cmps
icebp
jnp
xchg
sub
(bad)
(bad)
(bad)
call
push
addr16
in
inc
push
jne
cmps
dec
gs
mov
ins
sbb
(bad)
cmp
(bad)
jmp
push
jge
jb
pop
sub
push
adc
pop
inc
push
retf
dec
and
je
scas
mov
fnstsw
movs
mov
sbb
call
push
sub
pop
mov
xor
push
(bad)
push
push
jl
add
mov
mov
sbb
sbb
adc
inc
pop
xor
xchg
jnp
(bad)
shl
sub
(bad)
(bad)
(bad)
call
shr
sar
cmps
lods
rcr
(bad)
aaa
jp
mov
inc
or
jne
addr16
clc
ret
add
mov
scas
sub
aam
les
push
jbe
(bad)
std
dec
in
ds
xor
iret
dec
(bad)
(bad)
inc
stos
loop
(bad)
(bad)
pop
out
xor
imul
daa
fild
(bad)
jmp
rol
movs
or
call
aas
loope
je
je
mov
mov
(bad)
mov
iret
cmps
or
xlat
cmp
dec
loopne
lods
cli
mov
xchg
adc
mov
stos
fidivr
dec
and
leave
test
push
or
ja
inc
sub
(bad)
(bad)
(bad)
jmp
or
cwde
cmc
mov
into
pop
je
aaa
jbe
pop
popa
ret
mov
les
out
(bad)
(bad)
(bad)
dec
cdq
scas
test
mov
pop
add
add
sub
xchg
mov
ins
(bad)
push
cwde
lahf
pop
push
sbb
mov
push
fadd
inc
pop
xlat
push
cmp
jb
fild
loop
or
adc
(bad)
push
out
cli
xor
add
mov
clc
arpl
add
iret
mov
shl
xor
loop
inc
mov
(bad)
out
es
stc
cmp
mov
cli
jecxz
sub
adc
add
sbb
popa
pop
mov
ret
ret
call
xor
jns
push
inc
std
push
inc
push
in
fiadd
jmp
(bad)
inc
shr
lock
cli
data16
cmp
inc
push
addr16
push
leave
add
cmc
push
push
(bad)
(bad)
(bad)
call
pop
lods
movs
loop
or
dec
(bad)
adc
xor
ja
mov
cli
push
or
(bad)
jmp
sbb
nop
pop
jmp
(bad)
out
clc
call
in
repz
in
and
jmp
into
std
les
jecxz
mov
(bad)
out
aad
out
inc
loopne
sbb
add
mov
add
popf
int3
inc
cmc
(bad)
(bad)
jmp
cmp
dec
call
repnz
mov
cmc
jge
std
ss
adc
add
enter
pushf
push
addr16
loope
ffree
pushf
(bad)
jmp
push
inc
add
mov
out
xchg
jae
mov
jle
in
mov
int3
push
sub
(bad)
push
loop
pop
inc
xchg
repnz
pop
cmp
push
or
cld
rol
and
les
and
sub
adc
iret
xor
leave
inc
sbb
arpl
push
sub
(bad)
(bad)
(bad)
push
imul
and
inc
push
jae
dec
lds
sbb
jmp
(bad)
(bad)
dec
xor
dec
push
or
clc
sbb
mov
stos
popa
jle
dec
and
call
(bad)
call
jno
das
xor
sub
loopne
mov
pop
mov
push
outs
or
(bad)
jmp
ror
pushf
mov
jae
(bad)
aam
dec
sbb
mov
mov
(bad)
cmp
cmps
sub
sub
jbe
imul
pop
push
call
dec
and
and
fwait
add
repnz
(bad)
jmp
jg
xor
mov
ja
ss
xchg
mov
adc
(bad)
(bad)
push
pop
int3
or
push
test
cmps
int3
sub
cwde
int3
cmp
and
jmp
clc
push
xor
arpl
push
aam
cmp
(bad)
(bad)
push
jmp
call
and
inc
or
imul
div
sub
(bad)
(bad)
call
jnp
jp
and
cmp
and
fistp
test
xchg
in
mov
(bad)
jmp
into
or
stc
jae
adc
shr
sti
mov
addr16
icebp
icebp
jns
repnz
and
out
clc
scas
jmp
dec
cdq
jnp
xchg
jl
cld
add
inc
(bad)
adc
add
mov
pop
imul
sub
aas
lahf
adc
mov
stos
hlt
xor
ds
push
fs
dec
enter
xlat
sub
adc
add
sbb
or
sti
into
xor
nop
cmc
es
cmp
(bad)
jmp
and
jbe
cmp
inc
fmul
add
sub
inc
mov
js
add
push
jl
xlat
fdivr
xor
add
mov
(bad)
(bad)
(bad)
jg
(bad)
sub
push
push
jl
jae
mul
jl
sub
gs
pop
or
cli
stos
(bad)
(bad)
call
out
xchg
cmp
bnd
mov
adc
cmps
mov
jmp
enter
jns
scas
inc
pusha
mov
out
outs
stc
jbe
mov
std
(bad)
(bad)
inc
dec
addr16
fs
fdiv
out
sub
pop
int
inc
xchg
sbb
rol
xchg
ret
(bad)
push
jbe
dec
mov
xchg
(bad)
dec
fdiv
icebp
(bad)
inc
or
stos
popf
stos
sti
pop
ror
ror
fisub
push
and
jae
jne
add
mov
pop
lea
scas
(bad)
(bad)
jmp
adc
cli
sar
jmp
cmps
or
scas
cli
(bad)
dec
xchg
fnstenv
pop
cmp
jae
ins
or
mov
(bad)
(bad)
(bad)
(bad)
jmp
ror
(bad)
and
cmps
scas
rcl
mov
mov
cmp
in
in
cwde
mov
adc
inc
push
mov
jmp
xchg
dec
sbb
and
and
(bad)
loop
loope
loopne
loope
nop
add
lock
movs
ins
sbb
(bad)
(bad)
(bad)
(bad)
std
inc
fldenv
pop
fistp
sti
shr
xchg
inc
mov
inc
lea
sar
adc
(bad)
(bad)
(bad)
jmp
mov
out
test
adc
test
mov
mov
aaa
enter
ret
xchg
adc
adc
xor
cmp
into
test
mov
(bad)
(bad)
jg
sbb
xor
sbb
lds
sbb
pop
sbb
movs
outs
push
sbb
in
(bad)
(bad)
(bad)
push
cmp
sbb
cmp
push
fwait
pop
or
push
pop
jmp
jecxz
leave
cmp
retf
(bad)
(bad)
call
rcl
fcmovbe
addr16
idiv
cmp
inc
mov
pop
iret
lods
inc
pop
adc
sbb
cdq
fstp
stc
jns
repz
mov
pop
cmp
(bad)
(bad)
(bad)
fild
jg
shl
sbb
sub
lds
cmps
sub
std
in
stos
or
add
pop
std
fsubr
push
idiv
mov
mov
dec
nop
mov
pop
jno
bound
(bad)
(bad)
call
jl
cmc
data16
(bad)
xchg
or
mov
mov
adc
push
(bad)
(bad)
call
cmp
cld
mov
call
jnp
pop
out
(bad)
dec
push
add
jnp
jmp
mov
scas
mov
cwde
outs
xor
pop
popa
adc
dec
or
and
or
fsubr
and
xchg
out
retf
cmc
test
xlat
mov
cmp
and
movzx
enter
ja
jmp
sub
adc
adc
jnp
lock
cmps
test
jmp
jp
cmps
rol
jmp
call
push
jl
(bad)
lea
sbb
scas
inc
dec
mov
test
icebp
mov
pop
movs
cmp
inc
sub
cmp
pop
add
dec
push
or
popf
dec
or
push
nop
lock
in
mov
jp
inc
cmp
(bad)
dec
bound
test
push
ja
test
rol
out
sub
fwait
add
dec
xchg
mov
dec
ret
clc
in
jecxz
mov
pop
sbb
call
outs
jo
push
sub
mov
aaa
cmp
push
mov
retf
call
cmp
xor
ror
mov
xor
(bad)
(bad)
call
jmp
rcl
iret
ret
jae
push
jmp
in
inc
pusha
sub
addr16
(bad)
(bad)
push
push
stc
xor
jbe
mov
sbb
mov
test
call
xchg
pop
out
fild
and
add
outs
adc
je
mov
pop
cwde
jbe
mov
scas
xor
(bad)
mov
sbb
jno
or
ret
test
es
mov
loop
imul
outs
test
cmp
add
adc
(bad)
(bad)
push
push
xchg
jne
shr
pop
sbb
pop
cmpps
scas
jb
or
add
cmps
or
shl
mov
pop
adc
(bad)
cli
mul
push
xchg
and
sub
pop
sbb
shl
fcomi
cmps
rcl
jp
lds
enter
(bad)
(bad)
(bad)
jmp
jg
cdq
mov
pop
into
jmp
rcr
pop
adc
(bad)
das
in
sar
(bad)
(bad)
jmp
int
add
call
jo
or
retf
mov
test
mov
jl
scas
test
jg
ret
add
pop
add
(bad)
(bad)
(bad)
(bad)
jmp
cs
stos
stos
xchg
retf
dec
jl
add
rcl
in
push
jne
xchg
xor
dec
pusha
scas
(bad)
out
clc
sbb
add
fcom
sbb
mov
nop
dec
aas
xor
ret
cmp
sbb
jae
jmp
add
sbb
push
adc
leave
imul
sub
cwde
enter
cs
test
adc
inc
nop
and
cli
pop
cli
(bad)
dec
jno
dec
sub
jae
jp
in
xchg
push
sbb
pop
pop
jno
or
cli
(bad)
(bad)
out
mov
test
inc
out
sar
loopne
adc
out
sbb
dec
test
mov
sahf
mov
sub
(bad)
out
adc
mov
retf
push
mov
xchg
clc
(bad)
call
sbb
ret
aad
test
(bad)
jmp
in
push
neg
(bad)
mov
pop
push
mov
mov
mov
das
pop
push
add
jmp
lods
inc
stos
jmp
or
lock
jns
movs
jp
mov
stc
(bad)
(bad)
(bad)
jmp
movs
jnp
sub
(bad)
and
mov
jnp
cmp
(bad)
(bad)
fbstp
fstp
add
(bad)
push
in
cmp
cwde
jp
(bad)
(bad)
(bad)
(bad)
jmp
in
xchg
push
jl
sub
or
mov
(bad)
pop
popf
lods
(bad)
(bad)
(bad)
(bad)
mov
popa
retf
leave
ficomp
jl
outs
cmp
jg
(bad)
(bad)
icebp
cmps
mov
sar
(bad)
fmul
fiadd
add
mov
(bad)
(bad)
mov
jl
rcr
ins
not
ficom
popf
inc
stos
push
sub
mov
and
mov
rcl
lea
adc
push
sbb
(bad)
(bad)
(bad)
jl
das
arpl
jmp
jg
xchg
ins
jnp
jecxz
(bad)
pop
jne
or
push
fidivr
inc
dec
aam
(bad)
(bad)
jg
(bad)
call
cld
sbb
and
scas
ins
pushf
es
add
jb
inc
sub
jmp
jns
loop
mov
shl
mov
jg
mov
dec
jb
adc
or
xchg
(bad)
jmp
mov
(bad)
in
(bad)
mov
shr
add
or
or
(bad)
(bad)
(bad)
jmp
xchg
mov
fdivr
icebp
pop
loope
mov
cmps
daa
push
bound
mov
stos
(bad)
(bad)
inc
lahf
sub
aam
mov
and
cli
inc
mov
inc
pop
movs
push
movs
jne
xlat
jl
adc
cld
jle
arpl
pop
and
out
inc
(bad)
(bad)
sti
and
xchg
popf
xor
push
out
xlat
xchg
bound
jae
out
dec
or
or
or
leave
(bad)
sbb
mov
ins
shl
jge
xor
and
(bad)
mov
es
pusha
inc
pop
sub
call
shr
add
mov
push
iret
adc
(bad)
dec
shl
sbb
inc
int
xchg
jno
inc
(bad)
call
lahf
add
push
push
sub
mov
(bad)
div
pusha
sub
(bad)
inc
leave
cmp
mov
loope
lock
mov
psubusw
xchg
loope
sbb
mov
mov
add
cli
sbb
(bad)
(bad)
jg
or
add
rcl
and
mov
loopne
and
out
mov
(bad)
dec
jo
push
add
mov
mov
mul
xor
mov
mov
fmul
dec
and
movs
push
inc
pop
pop
sub
mov
mov
icebp
pop
fnsave
(bad)
(bad)
call
dec
adc
sti
push
std
sbb
pop
xor
cmp
iret
mov
adc
in
and
(bad)
(bad)
inc
jmp
div
idiv
mov
mov
cmp
(bad)
jmp
mov
je
movs
add
mov
out
fsubr
cdq
test
and
(bad)
(bad)
(bad)
jmp
pop
mov
std
in
ja
inc
in
test
cld
les
sahf
stc
and
jne
or
add
cli
dec
inc
jno
adc
mov
jbe
jns
mov
ror
mov
ins
jo
cmp
(bad)
(bad)
(bad)
call
dec
mov
jp
adc
stos
repz
aas
push
adc
push
xchg
fcom
loope
(bad)
call
stos
and
jecxz
push
arpl
les
sbb
clc
scas
mov
cmc
and
jmp
push
into
cmps
mov
cdq
aad
push
(bad)
sub
(bad)
(bad)
inc
or
mov
push
or
jl
out
jp
and
cmp
mov
adc
std
or
aaa
mov
pop
inc
and
jp
pop
mov
aad
(bad)
(bad)
fnstcw
ins
and
pushf
xchg
push
mov
(bad)
(bad)
push
inc
enter
jp
sub
jge
fdivr
ror
adc
mov
(bad)
(bad)
call
sbb
or
sar
cmp
jle
mov
push
aaa
add
adc
(bad)
(bad)
call
xor
cmc
cs
in
aaa
stos
xchg
add
pushf
mov
jge
loop
jp
add
fs
mov
mov
ins
cmp
int
push
fidiv
cld
mov
out
jmp
mov
(bad)
(bad)
push
icebp
jp
push
mov
cli
neg
pop
stos
(bad)
sbb
fsub
jle
fisttp
(bad)
jg
fcompp
(bad)
int3
(bad)
mov
leave
adc
inc
(bad)
in
add
sub
cmp
jmp
scas
rol
mov
(bad)
push
cdq
jmp
adc
jmp
cdq
xchg
(bad)
jmp
lea
mov
sahf
pop
enter
dec
adc
mov
inc
out
cmp
ds
(bad)
(bad)
inc
pop
adc
ins
bound
mov
ss
inc
aaa
gs
popf
fist
sbb
and
(bad)
(bad)
dec
sbb
push
or
mov
jne
mov
dec
pop
enter
call
and
out
clc
(bad)
jmp
(bad)
lock
xchg
out
jmp
sbb
sahf
push
into
jg
nop
mov
(bad)
cmp
mov
cld
sbb
sub
sub
cmp
inc
stos
and
cli
inc
cmp
xor
lods
dec
push
sub
inc
call
les
(bad)
fist
push
push
stos
mov
dec
popf
aas
sbb
jmp
jb
movs
int
cwde
shl
push
inc
mov
add
fstp
add
jno
add
or
dec
inc
clc
clc
or
inc
loope
inc
lds
(bad)
jg
jmp
dec
sbb
push
cwde
sub
xor
sub
loop
xor
inc
cmp
xchg
lahf
inc
sahf
(bad)
jmp
push
into
or
cld
cmp
icebp
cmps
xchg
lock
(bad)
cld
mov
pop
icebp
sbb
cmp
je
xchg
cld
fs
dec
shl
sub
retf
jb
xlat
(bad)
out
sub
jge
jmp
(bad)
std
inc
test
(bad)
jg
inc
pop
popf
ret
in
sbb
mov
sbb
mov
in
pop
js
xchg
mov
jmp
(bad)
(bad)
jmp
pop
ins
push
pop
int
lds
jbe
icebp
mov
test
int3
cmc
iret
sub
sahf
mov
(bad)
call
hlt
sub
dec
idiv
dec
loop
mov
or
sbb
imul
(bad)
dec
xchg
jne
call
mov
sub
clc
ror
or
(bad)
(bad)
(bad)
jmp
je
mov
jns
and
xor
dec
jmp
(bad)
xchg
mov
adc
(bad)
jmp
out
push
ins
out
cmps
xchg
lea
cmp
push
lods
scas
call
pop
(bad)
(bad)
(bad)
call
or
xchg
ins
les
or
mov
jns
sub
push
or
fcomip
fcom
xchg
pop
popa
sbb
cmp
(bad)
fbld
dec
sar
adc
xbegin
call
ficomp
sar
mov
jmp
xlat
retf
xchg
push
lods
ds
lods
cmc
mov
(bad)
(bad)
(bad)
mov
cwde
dec
adc
pop
shr
ror
lods
jno
push
or
mov
sub
mov
xlat
(bad)
(bad)
(bad)
call
sbb
adc
mov
int
inc
cmp
jns
inc
sbb
cdq
sbb
stc
xor
es
jmp
cmc
pop
push
inc
leave
arpl
cmp
jmp
and
inc
xor
(bad)
jle
jge
(bad)
ins
cs
xchg
cdq
jmp
jle
loop
imul
int
and
dec
xchg
int
cmp
push
sar
in
in
pop
mov
(bad)
push
jg
or
das
das
pop
mov
cmc
adc
pop
daa
aad
cmp
or
gs
jns
in
mov
sar
jo
(bad)
(bad)
(bad)
inc
add
sar
and
jle
or
push
jecxz
(bad)
jb
and
dec
mov
jmp
sbb
adc
cmc
sub
jmp
ja
rol
imul
cmps
and
icebp
(bad)
jmp
enter
xchg
sbb
push
sbb
push
xchg
aad
add
and
out
dec
add
mov
pop
fsubr
sub
cmp
cmp
(bad)
shl
push
sbb
inc
pop
lahf
out
jmp
hlt
xor
shr
call
out
jge
ret
mul
jg
jg
sub
add
ins
ins
(bad)
push
scas
or
inc
cmp
ja
jg
inc
dec
fmul
xor
ins
jecxz
mov
xor
inc
inc
(bad)
(bad)
jmp
(bad)
jp
imul
in
push
and
gs
mov
mov
mov
pop
bnd
aad
mov
or
shl
pop
je
in
test
rol
(bad)
(bad)
mov
pop
pop
idiv
xor
(bad)
push
sub
loop
retf
daa
fwait
or
test
pop
rol
in
shr
pop
sub
imul
jmp
clc
call
jne
xor
leave
fstp
cmp
lock
cmp
cmp
cld
test
clc
and
xchg
jb
(bad)
dec
ss
repz
addr16
out
test
repnz
jecxz
add
ins
push
jbe
mov
(bad)
(bad)
(bad)
js
xchg
mov
int3
mov
cs
repz
add
lahf
and
cmp
(bad)
(bad)
jg
jmp
js
outs
jnp
cmp
mov
dec
pop
rcl
(bad)
(bad)
jmp
push
iret
pop
xor
icebp
dec
xchg
rcl
sbb
dec
data16
ds
mov
cmp
dec
jne
cmp
mov
sahf
fcomi
ja
daa
(bad)
(bad)
(bad)
mov
fmul
fiadd
xchg
inc
loop
cld
out
popa
cmp
(bad)
(bad)
je
data16
jge
(bad)
(bad)
(bad)
call
aas
movs
pushf
lods
fdivr
mov
cli
sahf
xchg
mov
cli
pop
(bad)
cmps
aad
clc
and
in
sbb
inc
mov
lods
and
push
push
jbe
imul
daa
push
call
mov
test
mov
jmp
sub
enter
mov
and
pop
jecxz
imul
mov
mov
lock
gs
or
fiadd
pop
add
loope
xchg
(bad)
(bad)
(bad)
jmp
out
or
add
enter
aam
fmul
lods
imul
(bad)
call
jae
pop
bound
adc
sbb
fisttp
jp
(bad)
jmp
mov
add
mov
cdq
mov
adc
(bad)
(bad)
(bad)
push
add
adc
pop
dec
cmps
(bad)
cmps
out
jne
pop
cmp
jno
pop
xor
(bad)
jmp
rol
mov
iret
ficom
and
les
cmp
(bad)
fisttp
inc
(bad)
dec
jnp
into
xchg
pusha
mov
sub
adc
jo
fmul
ds
dec
(bad)
out
inc
sbb
or
repnz
jmp
jmp
icebp
add
jge
test
sub
adc
mov
inc
lods
(bad)
cmps
jnp
push
(bad)
jg
call
xchg
mov
pop
pop
mov
aam
outs
imul
pop
pop
pusha
loope
repz
mov
dec
repnz
pop
jecxz
rcl
call
add
clc
dec
adc
pushf
dec
dec
loopne
imul
imul
ret
and
cmp
ficom
push
xchg
leave
adc
cs
add
ins
std
pushf
pop
xlat
sub
call
cmp
(bad)
call
sbb
add
xor
jg
enter
test
(bad)
(bad)
(bad)
(bad)
mov
cmp
xor
ret
or
sub
(bad)
cld
cwde
shl
mov
aam
out
(bad)
(bad)
(bad)
jmp
(bad)
or
mov
aad
dec
mov
pop
in
inc
out
imul
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
sbb
mov
jle
sbb
mov
repz
rcr
jge
jmp
(bad)
jmp
add
in
in
cld
inc
sti
xchg
dec
repnz
cs
push
gs
into
cmp
adc
adc
sbb
mov
inc
stos
push
(bad)
lods
test
adc
mov
dec
aam
push
mov
pop
mul
or
hlt
std
cmps
cwde
sbb
(bad)
(bad)
fbstp
std
cmp
and
test
stos
sar
fidivr
in
mov
pmaxub
(bad)
(bad)
(bad)
out
dec
fstp
hlt
push
cdq
lods
xor
jl
(bad)
mov
xlat
cmp
in
and
(bad)
(bad)
(bad)
fstp
cwde
jno
stos
fsubr
sahf
xchg
nop
xchg
mov
jp
fs
sub
out
xchg
scas
inc
or
(bad)
(bad)
cld
mov
hlt
mov
cdq
ss
imul
xchg
clc
add
adc
adc
push
hlt
push
(bad)
(bad)
jmp
sahf
inc
ret
jb
dec
adc
push
pop
cmps
add
mov
in
les
cld
in
dec
mov
repz
adc
add
(bad)
jg
push
ins
dec
or
and
jnp
js
hlt
jne
inc
test
xor
xchg
out
mov
outs
dec
call
test
mov
xchg
adc
mov
pop
sti
mov
fxam
jno
call
and
cli
js
imul
call
sbb
push
cmovo
ja
rcl
pop
push
adc
into
inc
and
repz
dec
cmps
sbb
arpl
mov
cli
(bad)
jmp
stc
inc
push
push
push
dec
clc
mov
in
hlt
sub
repnz
(bad)
push
xchg
xchg
or
add
mov
xchg
(bad)
inc
push
cmps
shl
xchg
pop
inc
(bad)
retf
ins
sub
call
push
dec
retf
inc
call
and
dec
outs
fwait
nop
mov
pop
imul
hlt
(bad)
(bad)
mov
cli
ja
test
in
jnp
mov
jbe
inc
mov
(bad)
(bad)
fcomip
fmul
jle
inc
mov
pop
mov
jbe
pop
dec
dec
cmps
fisttp
(bad)
inc
mov
mov
(bad)
das
out
cmps
popf
cdq
jbe
fisttp
jmp
movs
lock
or
(bad)
cli
(bad)
sbb
std
dec
scas
push
(bad)
(bad)
(bad)
(bad)
call
maskmovq
neg
arpl
out
in
cmp
out
add
mov
int
dec
bound
out
enter
out
sar
jg
add
or
outs
pop
iret
cmp
mov
(bad)
(bad)
call
int
xor
jno
ds
jmp
lods
mov
mov
mov
mov
ins
clc
test
and
(bad)
(bad)
jmp
or
sbb
nop
push
sti
xor
or
add
inc
repz
push
jle
jb
(bad)
push
dec
cli
jbe
jno
fld
shr
in
push
mov
cli
(bad)
(bad)
dec
fcomp
xchg
lods
test
pop
adc
lods
add
clc
aas
vpand
(bad)
sub
cli
mov
nop
mov
pop
push
jmp
jle
adc
imul
dec
mov
or
sysret
movs
aam
pushf
cli
push
push
push
mov
(bad)
push
mov
bound
cwde
loopne
adc
data16
add
push
jo
(bad)
(bad)
dec
add
mov
pop
pop
xchg
jnp
sbb
dec
aas
fcmovne
test
mov
(bad)
(bad)
dec
pop
fsubr
or
jne
push
cld
loop
mov
cld
jb
push
rol
adc
mov
and
or
push
mov
(bad)
xchg
mov
and
fsin
data16
out
or
(bad)
(bad)
push
popa
fwait
sub
(bad)
jne
push
dec
daa
pop
jo
scas
dec
push
mov
rcr
pop
jae
leave
vpmaxub
stos
xchg
aad
call
mov
xor
mov
in
dec
in
mov
mul
test
or
or
inc
idiv
(bad)
(bad)
jmp
jg
and
mov
test
inc
cmp
jle
push
or
sub
mov
sar
idiv
jge
dec
mov
and
(bad)
(bad)
sti
(bad)
in
retf
int
dec
fist
xchg
cmps
xchg
(bad)
mov
cld
pop
xchg
repz
cwde
xchg
xchg
cmp
(bad)
fcomip
xor
cld
pop
fnstcw
or
fidiv
cmp
(bad)
mov
pop
jmp
aaa
cmp
fild
and
(bad)
(bad)
(bad)
call
ret
fimul
lods
push
pop
sbb
int3
mov
xchg
repnz
(bad)
adc
pop
iret
gs
jmp
(bad)
call
jae
sbb
pop
add
add
push
push
clts
ret
loopne
pop
or
repz
aas
fistp
rcr
dec
scas
(bad)
call
and
push
sbb
push
in
aas
mov
push
jnp
inc
cmps
lock
leave
pop
mov
or
(bad)
pushf
ins
pushf
clc
(bad)
(bad)
(bad)
(bad)
fdivr
rep
mov
xor
xor
fisttp
cmp
sbb
pop
mov
or
cmp
fistp
push
fisubr
call
out
mov
addr16
dec
dec
sub
(bad)
(bad)
(bad)
(bad)
call
fld1
cmp
cmp
mov
sbb
pop
pop
mov
cli
jmp
push
push
ret
inc
cmc
(bad)
(bad)
jmp
ss
mov
aaa
leave
sti
jg
xor
push
ins
sahf
cdq
out
(bad)
fdiv
ins
mov
sar
(bad)
(bad)
fld
pusha
sub
cdq
pinsrw
inc
pop
idiv
sub
xchg
mov
stos
sub
inc
jae
jne
dec
cmp
in
pusha
jne
pop
dec
inc
stc
sub
adc
lock
mov
(bad)
jmp
xchg
dec
push
xor
adc
pop
icebp
xor
scas
inc
js
cmp
jmp
movs
cwde
movs
mov
frstor
xchg
bnd
mov
mov
(bad)
jmp
js
or
cmp
in
in
test
jbe
shr
nop
push
add
popf
out
pop
pop
std
mov
or
xor
(bad)
(bad)
(bad)
jmp
push
push
ret
test
and
cmp
cmp
mov
ret
xlat
scas
and
(bad)
(bad)
(bad)
(bad)
jle
sbb
out
mov
dec
add
retf
adc
sbb
xchg
dec
ja
clc
(bad)
(bad)
dec
adc
cdq
out
jl
shl
xlat
je
mov
mov
push
xor
jp
mov
(bad)
dec
jmp
(bad)
aam
adc
imul
xor
cmps
out
stc
mov
mov
push
inc
jns
or
fwait
(bad)
(bad)
(bad)
call
fisttp
dec
scas
arpl
retf
pop
aam
mov
cmp
adc
(bad)
(bad)
fcomip
mov
cmps
pushf
dec
mov
addr16
sub
pop
mov
mov
(bad)
(bad)
(bad)
jmp
aam
pop
data16
movs
xchg
sbb
mov
adc
push
inc
lock
out
clc
jmp
push
icebp
adc
int3
fcom
bound
loopne
and
(bad)
(bad)
mov
das
cmp
cmc
mov
imul
daa
add
pop
in
pop
mov
jmp
lea
xor
dec
scas
bound
cmp
xchg
(bad)
out
cli
(bad)
fldenv
push
push
mov
pop
repnz
mov
ss
call
in
push
mul
out
ins
sub
sub
jecxz
sub
loop
and
out
adc
loopne
or
sub
scas
int
in
jb
(bad)
stc
xchg
sub
(bad)
(bad)
(bad)
mov
xor
cmp
xor
push
ret
mov
dec
dec
(bad)
jmp
clc
mov
inc
sub
xor
ficomp
inc
mul
adc
xchg
retf
jmp
pop
push
jnp
inc
aad
aam
and
lahf
(bad)
fwait
mov
ret
out
adc
dec
hlt
(bad)
(bad)
call
ins
add
or
cmp
jp
adc
xor
clc
dec
push
xor
arpl
std
fbstp
test
mov
add
jmp
push
push
imul
mov
(bad)
jmp
fdiv
xor
repnz
ds
pop
sti
ja
jae
dec
inc
or
jecxz
(bad)
(bad)
(bad)
call
mov
into
dec
fild
mov
das
xchg
add
(bad)
xor
add
(bad)
(bad)
(bad)
jmp
and
test
mov
pop
and
loop
sub
pop
sbb
pop
popa
add
and
int
xor
jnp
add
(bad)
(bad)
(bad)
call
adc
push
fld
push
jg
push
pop
mov
repnz
fbld
xchg
jecxz
(bad)
(bad)
(bad)
inc
ins
adc
dec
iret
shr
popf
jmp
add
dec
int
mov
dec
in
dec
push
dec
or
pusha
fmul
xchg
add
(bad)
scas
xchg
aaa
int
mov
mov
(bad)
jmp
xor
imul
jmp
inc
stc
add
push
fdivr
das
clc
push
dec
mov
(bad)
(bad)
mov
ds
(bad)
(bad)
jmp
push
lahf
ss
fwait
jnp
or
xchg
jo
mov
lahf
lahf
mov
cmp
(bad)
(bad)
(bad)
cmp
xor
ja
add
(bad)
pop
mov
arpl
or
lock
cmc
fiadd
mov
push
aaa
cmp
test
mov
and
mov
push
jle
pop
mov
cld
icebp
jle
(bad)
mov
jmp
jp
pop
fnstsw
xchg
and
and
dec
mov
(bad)
(bad)
(bad)
jg
jmp
(bad)
js
jg
jne
pop
xacquire
scas
dec
int
into
scas
jo
adc
(bad)
(bad)
(bad)
jmp
jb
in
push
retf
retf
movs
mov
dec
daa
adc
retf
inc
imul
sub
adc
or
fcomip
(bad)
jmp
mov
movs
jb
dec
lods
jo
popf
dec
ret
popa
rol
in
imul
loopne
out
push
iret
ret
lock
loopne
call
mov
aad
jg
jb
jecxz
(bad)
lds
(bad)
(bad)
(bad)
(bad)
aas
je
push
or
jae
or
or
mov
out
sub
pop
cmps
sbb
pop
(bad)
(bad)
cmp
data16
(bad)
nop
(bad)
jmp
pusha
mov
dec
clc
lahf
xor
movs
ret
cmp
inc
sbb
(bad)
(bad)
push
push
sub
jmp
shr
outs
jle
(bad)
aas
xchg
sbb
push
(bad)
stos
sar
jmp
sbb
gs
mov
xor
(bad)
(bad)
(bad)
inc
out
mov
sti
jp
push
dec
dec
cld
iret
mov
and
dec
mov
pop
out
dec
pop
imul
(bad)
(bad)
dec
aaa
test
or
cmp
mov
daa
aam
mov
sbb
jl
leave
cs
lahf
jns
fwait
inc
call
sbb
mov
fidivr
cwde
cld
push
mov
adc
sahf
add
lods
cld
(bad)
inc
pop
fwait
shl
sbb
inc
out
jg
adc
imul
cli
jg
dec
cmp
xor
div
xchg
or
adc
dec
out
xor
xor
jo
js
xlat
dec
popf
aaa
ret
stc
push
inc
out
push
xor
or
(bad)
(bad)
call
jp
(bad)
fcmovu
or
test
out
push
pop
sbb
sub
cmp
jns
out
xchg
push
ds
pop
(bad)
(bad)
call
ja
cmps
inc
cmps
cmp
push
mov
add
cmc
push
or
(bad)
(bad)
inc
arpl
or
pop
jne
fcomp
pop
hlt
aad
popa
pop
ds
jmp
(bad)
aaa
mov
fcom
add
or
mov
cli
outs
mov
jle
xchg
aam
push
stos
cmp
(bad)
ja
mov
fs
icebp
inc
imul
(bad)
jg
test
inc
sbb
xor
iret
pop
and
mov
into
mov
loop
lock
(bad)
push
out
(bad)
add
test
repz
mov
cmp
loopne
int
and
(bad)
dec
jo
push
data16
dec
pop
mov
adc
cs
cwde
or
into
arpl
(bad)
(bad)
(bad)
call
xchg
out
(bad)
out
add
popa
pop
sub
fs
push
or
mov
(bad)
(bad)
jp
adc
lahf
ins
cs
clc
xor
std
int3
add
lods
adc
and
or
jno
out
rcr
shl
call
xchg
push
xor
int
clc
jne
fstp
sbb
mov
(bad)
(bad)
(bad)
inc
movs
jb
and
mov
jmp
popa
imul
std
mov
(bad)
(bad)
inc
sbb
aas
or
mov
adc
and
mov
(bad)
push
in
mov
jae
jmp
aad
std
rol
or
mov
fisttp
pop
mov
(bad)
push
or
fbld
or
jmp
mov
jns
mov
and
xor
retf
pushf
ret
or
sahf
mov
ja
clc
dec
lahf
idiv
sbb
out
or
pop
out
sub
dec
jp
sbb
adc
scas
adc
(bad)
(bad)
jmp
cmp
sbb
movs
jno
jmp
xchg
jmp
dec
leave
(bad)
jmp
shr
enter
ja
mov
mov
add
repz
sar
(bad)
(bad)
jmp
test
data16
ret
cwde
out
movs
push
jb
jne
fadd
data16
push
cdq
fcmovu
icebp
xor
dec
dec
xchg
cs
out
pop
and
sbb
cld
outs
xchg
sar
(bad)
mov
inc
adc
push
dec
stc
mov
add
ds
push
loopne
stc
(bad)
(bad)
(bad)
push
dec
rcl
cmps
in
mov
xor
adc
clc
in
add
ficomp
das
clc
lock
mov
(bad)
jle
aaa
mov
and
cmc
(bad)
(bad)
(bad)
jnp
mov
scas
push
in
mov
and
dec
push
int
cmp
(bad)
out
xchg
xor
jle
pop
mov
jmp
std
or
inc
jg
pushf
pusha
push
stos
scas
test
(bad)
lahf
adc
scas
push
mov
push
xor
jbe
pusha
push
cmp
(bad)
(bad)
(bad)
jmp
lods
pop
push
imul
jge
not
in
jae
call
inc
xor
mov
push
mov
test
imul
or
ds
adc
aam
sbb
pop
mov
xor
jle
and
(bad)
(bad)
jg
(bad)
dec
ja
jge
hlt
mov
add
xor
adc
xchg
mov
xchg
ss
(bad)
jmp
scas
and
push
shl
out
aam
loope
sub
(bad)
(bad)
jg
xchg
inc
and
retf
push
inc
and
inc
push
retf
mov
aaa
adc
add
add
out
cmc
push
repz
outs
outs
jecxz
mov
pop
or
lods
pop
mov
lods
daa
(bad)
(bad)
(bad)
dec
repz
cld
scas
mov
mov
jo
dec
adc
inc
cli
xor
into
cmp
es
(bad)
(bad)
(bad)
push
shr
mov
mov
test
imul
hlt
test
(bad)
push
pop
mov
lds
shl
call
adc
inc
(bad)
(bad)
call
movs
inc
adc
ins
xchg
loope
push
push
cmc
and
cli
pop
sti
jmp
jns
out
call
push
mov
add
cmp
xor
sahf
popf
dec
pusha
(bad)
(bad)
(bad)
dec
add
fldcw
xchg
dec
fild
popa
jns
push
aam
cmp
(bad)
(bad)
(bad)
push
mov
rcr
rol
xor
push
inc
dec
ror
pop
mov
stos
pop
shl
push
nop
jge
and
jp
lods
mov
mov
clc
dec
(bad)
(bad)
(bad)
mov
push
stos
push
popf
mov
mov
push
fwait
push
idiv
test
ja
fnstsw
cmp
(bad)
(bad)
inc
or
in
or
cmp
xchg
dec
stos
cmp
retf
push
xchg
mov
(bad)
(bad)
(bad)
jmp
dec
bound
loopne
mov
mov
ins
fwait
dec
and
xchg
jnp
mov
push
movs
shl
ror
mov
loopne
call
adc
sub
push
hlt
jmp
mov
aad
jmp
push
mov
push
lea
mov
int
adc
adc
js
jae
aad
mov
mov
(bad)
popf
int
pusha
jmp
dec
jmp
je
sbb
shl
xor
pop
test
inc
xchg
jae
and
es
mov
jg
(bad)
ins
sbb
jns
push
sbb
(bad)
(bad)
(bad)
(bad)
fldenv
mov
stos
push
cmp
xor
or
aam
mov
cli
out
mov
push
shl
and
ret
ja
inc
xchg
add
in
or
jmp
loopne
nop
add
inc
add
and
xchg
mov
data16
arpl
cmp
add
push
jle
sub
not
mov
fadd
jg
xor
aas
call
ror
jg
xlat
outs
xor
xchg
out
popa
ret
xchg
jp
mov
(bad)
jge
mov
or
dec
stos
ds
iret
mov
and
ret
pop
push
mov
jl
enter
(bad)
(bad)
(bad)
jmp
push
aaa
sub
push
lock
mov
mov
int3
jmp
xchg
adc
setb
xor
cs
cmp
cmp
clc
sar
pop
outs
(bad)
mov
inc
push
loope
jl
push
mov
ret
lods
adc
sbb
sbb
sub
iret
rcl
jmp
jp
cmp
fyl2xp1
jb
lods
push
adc
mov
(bad)
(bad)
(bad)
jg
pop
cmp
out
fdivr
xor
(bad)
adc
dec
retf
cmp
repz
aam
mov
(bad)
call
call
repnz
montmul
cmps
ret
cli
dec
cmp
adc
scas
(bad)
(bad)
fistp
repz
pop
stc
mov
jo
rcl
cwde
xlat
movs
retf
pop
jae
jns
imul
(bad)
mov
sub
or
repnz
xlat
cmp
mov
xchg
loop
addr16
jmp
cmc
dec
adc
jge
scas
sbb
enter
sbb
inc
repnz
mov
stc
bound
ficomp
mov
pop
pop
fisub
pusha
sbb
fild
fs
mov
xchg
mov
das
xor
fadd
(bad)
dec
mov
mov
mov
jp
jmp
xchg
and
nop
jl
in
leave
arpl
js
sub
lods
enter
cmp
mov
xor
jecxz
(bad)
(bad)
inc
dec
lods
mov
mov
jbe
or
xchg
or
dec
dec
pop
push
(bad)
call
das
xchg
(bad)
scas
clc
outs
popa
stc
mov
aaa
push
sub
repz
int
jnp
pop
jno
cld
(bad)
inc
ss
sbb
sub
ret
(bad)
(bad)
jg
cwde
jno
xchg
(bad)
push
xchg
sub
icebp
push
cmp
retf
sbb
outs
xor
(bad)
(bad)
push
mov
jbe
inc
cmp
les
mov
aaa
les
clc
(bad)
pop
scas
ret
pushf
cmp
jmp
jl
xlat
jns
daa
faddp
cwde
lods
push
xor
das
push
pusha
clc
push
add
fucomi
call
std
jmp
jl
mov
js
popa
or
bound
(bad)
scas
xlat
or
(bad)
(bad)
(bad)
push
mov
inc
sbb
push
js
xchg
dec
sub
ret
xchg
test
jo
(bad)
inc
cld
and
mov
inc
sub
dec
mov
cmp
jmp
out
icebp
cmp
pop
je
test
js
jg
cdq
(bad)
(bad)
jmp
push
dec
sti
dec
xchg
adc
push
push
hlt
data16
inc
add
sbb
ss
movs
push
or
(bad)
(bad)
jmp
js
xchg
push
loopne
cmp
add
xchg
in
mov
cli
out
cmps
mov
jno
xor
das
clc
call
nop
dec
mov
pop
call
inc
ret
sbb
loopne
(bad)
mov
(bad)
inc
mov
call
dec
mov
in
cld
repnz
mov
ja
mov
cdq
xchg
imul
push
cmp
jp
add
pop
xchg
aam
pop
loopne
lock
dec
out
add
pusha
fbld
fimul
mov
in
sahf
mov
dec
cmc
sub
inc
(bad)
repnz
cli
cld
pop
mov
pop
(bad)
(bad)
call
enter
dec
mov
in
inc
cmc
jno
gs
mov
sub
nop
lods
in
sti
(bad)
(bad)
jmp
xor
fisttp
jb
jmp
scas
in
cli
pop
xor
lods
fdiv
(bad)
jg
xchg
fisub
clc
sti
push
pusha
jns
xchg
lds
pushf
jae
or
mov
(bad)
(bad)
jmp
inc
jbe
or
leave
scas
inc
or
ret
pop
lahf
mov
xor
nop
lock
std
xchg
jns
jns
pop
cmps
(bad)
(bad)
(bad)
jl
imul
pop
sbb
nop
mov
div
test
lahf
fisubr
(bad)
push
inc
test
les
scas
(bad)
ror
jecxz
mov
or
mov
rcl
aam
hlt
inc
pop
(bad)
(bad)
(bad)
inc
imul
movs
fcmovnbe
sbb
test
sub
push
add
pop
pusha
xchg
(bad)
(bad)
(bad)
inc
pop
adc
xchg
push
ret
and
adc
ds
shl
mov
push
jmp
dec
jmp
cmp
ss
(bad)
(bad)
(bad)
inc
xchg
and
sub
es
lahf
mov
xchg
outs
call
jle
ins
(bad)
(bad)
(bad)
push
ss
mov
add
fnsave
mov
iret
(bad)
mov
cmps
jl
mov
(bad)
push
push
xchg
fwait
test
test
jge
cmps
pop
xor
or
les
(bad)
push
shl
out
cli
repnz
call
xchg
(bad)
(bad)
(bad)
jmp
ds
cmp
test
push
das
sbb
xchg
fcmovbe
inc
sbb
mov
rcr
mov
outs
mov
outs
repz
jle
mov
xchg
lahf
sub
(bad)
jmp
addr16
pusha
sbb
pop
push
in
sub
fadd
sbb
movs
mov
add
dec
sbb
adc
(bad)
(bad)
mov
adc
cmp
push
aas
stc
push
mov
mov
jmp
jmp
repnz
adc
jle
ds
outs
into
dec
in
lea
(bad)
(bad)
(bad)
push
fcom
mov
les
xchg
push
push
pop
inc
loope
adc
push
mov
jge
xor
adc
lock
(bad)
(bad)
cmp
jae
retf
adc
inc
imul
push
dec
push
out
aad
repz
mov
call
hlt
dec
jae
xor
ret
and
xlat
dec
jmp
shr
jl
cli
inc
std
mov
rol
sub
(bad)
(bad)
jmp
add
push
div
xlat
mov
pusha
out
mov
and
jp
sti
aas
pushf
fidivr
mov
(bad)
dec
mov
bound
jnp
shl
sbb
jno
(bad)
in
mov
int3
pop
jno
xlat
inc
outs
adc
and
sbb
call
icebp
out
jl
add
popa
push
mov
in
icebp
(bad)
dec
cmp
sar
adc
out
std
clc
dec
mov
mov
mov
lods
retf
call
(bad)
(bad)
(bad)
jmp
cdq
push
bound
add
icebp
test
iret
dec
mov
enter
push
das
cli
(bad)
jmp
call
mov
(bad)
dec
out
pop
sbb
push
jmp
add
mov
(bad)
(bad)
jmp
push
les
cmp
jo
sahf
movs
cmp
cmp
fcomi
ror
and
in
shl
(bad)
(bad)
call
imul
mov
pop
(bad)
adc
xor
sahf
dec
aaa
cld
or
enter
dec
cmp
(bad)
push
inc
enter
xchg
popf
mov
in
xchg
mov
loopne
mov
pop
retf
(bad)
(bad)
jg
ins
popf
std
push
popa
sbb
stos
pop
imul
hlt
adc
je
sub
stos
and
popa
std
dec
lock
mov
mov
sbb
mov
das
(bad)
je
call
fldenv
pop
mov
into
das
lods
pop
jecxz
xchg
(bad)
(bad)
call
xchg
jmp
aad
es
in
test
hlt
adc
ss
loopne
xor
inc
mov
xor
loopne
jp
fldenv
or
std
(bad)
(bad)
(bad)
jl
dec
out
jnp
stos
mov
push
cmp
sbb
sbb
dec
or
(bad)
call
pop
loope
pop
jp
(bad)
ja
xchg
nop
movs
jg
push
xor
mov
mov
push
das
and
jns
sub
inc
push
lods
or
retf
inc
clc
(bad)
cld
and
inc
mov
loope
add
jns
(bad)
(bad)
(bad)
call
outs
in
or
and
mov
jne
ja
(bad)
loop
add
pop
pop
lods
mov
out
mov
inc
jb
fs
aas
fldcw
gs
mov
push
adc
popf
out
mov
clc
jns
xor
sahf
adc
(bad)
mov
dec
repz
loope
div
(bad)
call
cs
add
or
and
jne
inc
push
(bad)
jle
xor
push
dec
mov
adc
out
cld
(bad)
call
pop
ds
add
pop
das
(bad)
hlt
mov
inc
cs
(bad)
(bad)
push
or
sar
mov
push
(bad)
pop
mov
adc
movs
and
jl
(bad)
leave
pop
or
dec
push
dec
jg
mov
push
push
push
xchg
or
(bad)
(bad)
jmp
xor
mov
cmp
fimul
dec
and
into
and
div
loope
int
pushf
mov
(bad)
std
xor
mov
imul
outs
loopne
inc
fcomp
fistp
(bad)
jge
mov
add
fisttp
int
imul
int3
mov
add
(bad)
mov
(bad)
cmp
and
jbe
xchg
jo
icebp
mov
(bad)
mov
cmc
test
addr16
test
push
cli
bound
(bad)
(bad)
push
icebp
cmp
or
xchg
add
push
mov
(bad)
(bad)
add
jo
arpl
mov
test
xchg
or
adc
(bad)
(bad)
sti
loopne
imul
gs
mov
(bad)
mov
idiv
mov
dec
jmp
popf
sub
inc
lahf
push
cmp
(bad)
(bad)
push
sbb
sbb
mov
adc
pop
adc
dec
pop
ja
inc
jne
xor
(bad)
(bad)
push
mov
sub
fwait
mov
pxor
int3
iret
das
pop
loopne
jns
pusha
repnz
call
not
push
sub
dec
cmp
mov
push
mov
(bad)
call
fisttp
xchg
add
sub
scas
(bad)
pushf
ja
es
or
(bad)
jmp
mov
pop
ja
enter
mov
ins
fwait
pop
push
add
cs
(bad)
jmp
pop
dec
inc
or
cmps
std
mov
push
imul
or
ret
add
adc
pop
pop
ss
sbb
call
clc
and
sub
fs
cmc
rcl
cld
(bad)
mov
stos
push
repnz
cmp
jb
xchg
xor
(bad)
or
loop
(bad)
push
sahf
jl
xchg
fs
sub
cdq
push
ja
aam
outs
jbe
xor
add
jo
fpatan
lods
xchg
xlat
mov
xor
jl
xchg
loope
jg
inc
adc
sub
cdq
xor
fld
dec
std
call
mov
or
ins
lods
and
ret
shl
dec
cdq
(bad)
jmp
mov
fcom
mov
(bad)
cld
test
sar
ret
(bad)
call
mov
ins
aaa
shl
ins
mov
dec
mov
or
clc
or
iret
jmp
sub
retf
xchg
js
pop
and
xor
mov
add
adc
push
(bad)
dec
and
es
(bad)
inc
push
pop
fild
mov
pop
mov
push
aas
mov
(bad)
(bad)
mov
arpl
into
mov
jbe
jecxz
push
into
jnp
std
ja
push
sub
int
xor
sar
icebp
jmp
sbb
mov
ret
mov
push
cmps
mov
fdivp
(bad)
inc
int
push
xor
(bad)
stos
ror
test
stos
hlt
aaa
inc
cmp
inc
fdivr
(bad)
dec
mov
das
lahf
int3
xchg
mov
jp
cmp
scas
xor
stos
xchg
lods
ret
xchg
mov
(bad)
cmp
mov
jae
mov
cmp
xchg
pop
inc
mov
out
fbld
mov
in
add
test
fild
adc
sti
aad
test
mov
out
sti
stos
movs
(bad)
(bad)
mov
and
push
inc
das
mov
jno
imul
sar
fld
push
jmp
les
add
out
push
xchg
mov
adc
mov
sar
lahf
push
clc
sub
mov
xchg
push
sbb
xchg
xor
adc
fisttp
ss
(bad)
(bad)
inc
out
xchg
pop
push
stos
neg
clc
test
scas
or
out
je
in
mov
(bad)
and
dec
lods
outs
lds
inc
dec
icebp
fwait
pop
pop
sub
popa
xchg
retf
xchg
test
call
scas
test
lods
push
out
das
mov
xchg
fiadd
std
push
nop
popf
jb
enter
cmp
mov
jno
(bad)
(bad)
call
ret
rcr
test
pop
lods
(bad)
mov
in
sub
sub
clc
(bad)
inc
sahf
push
jbe
add
mov
pop
jmp
push
(bad)
push
movs
sbb
bound
jmp
dec
pushf
mov
movs
mov
xor
call
in
nop
mov
in
adc
std
(bad)
jmp
test
push
aas
test
std
mov
sbb
jecxz
repnz
stos
(bad)
(bad)
(bad)
mov
dec
int
outs
adc
jecxz
retf
pop
(bad)
jae
jae
add
jnp
pop
jg
sbb
call
call
icebp
mov
rcl
dec
dec
aas
mov
or
(bad)
mov
in
fucom
and
cmc
pop
mov
sub
add
cld
std
(bad)
(bad)
(bad)
out
movs
les
ja
inc
add
ja
aas
fnstenv
add
rol
(bad)
(bad)
inc
addr16
pusha
dec
int3
xor
push
inc
sbb
sbb
dec
in
or
je
sbb
out
jmp
xor
(bad)
(bad)
call
jns
jecxz
push
add
add
fimul
lea
cmovb
xchg
fimul
(bad)
(bad)
(bad)
jg
paddusw
mov
enter
je
enter
loope
jmp
ds
clc
adc
(bad)
(bad)
dec
push
lods
xchg
jl
ficomp
lahf
aaa
retf
into
imul
dec
xcrypt-cbc
cmps
push
push
xchg
rol
inc
mov
jge
adc
jmp
test
fstp
jnp
dec
mov
aaa
(bad)
(bad)
call
ror
pushw
xchg
test
cld
dec
stos
or
aaa
cmps
pop
and
jg
jmp
sbb
lods
pop
mov
rcl
out
neg
data16
call
out
shl
sub
ror
(bad)
(bad)
inc
push
or
bnd
pop
leave
fstp
cli
push
xchg
mov
cmp
stc
inc
jmp
inc
loopne
push
fdivr
and
dec
jge
dec
(bad)
aas
sbb
nop
or
cmp
adc
fucomi
pop
in
jmp
clc
inc
shr
rol
test
push
cmp
mov
jb
jmp
cli
call
test
mov
clc
out
ror
popf
adc
(bad)
cld
jns
mov
ds
xor
dec
sbb
aaa
jg
imul
(bad)
(bad)
(bad)
jg
je
shl
std
outs
jae
adc
nop
test
mul
mov
(bad)
xchg
jo
sub
fcomip
inc
mov
and
mov
xchg
add
aam
fist
adc
push
inc
and
sbb
mov
mov
gs
nop
mov
into
mov
push
mov
(bad)
pop
or
sub
in
jecxz
(bad)
call
or
push
aas
cmp
cld
xchg
loopne
push
test
xchg
arpl
dec
aad
xchg
cmc
push
call
(bad)
aas
dec
outs
mov
rol
pop
pop
neg
scas
in
fcmovnb
pushf
std
(bad)
(bad)
(bad)
(bad)
in
pushf
loopne
sub
aaa
lds
mov
call
repnz
sub
sub
mov
(bad)
(bad)
(bad)
inc
jb
std
outs
fnstcw
and
(bad)
call
sub
push
sub
or
and
clc
dec
mov
or
lock
or
inc
inc
clc
mov
aam
call
(bad)
jmp
das
lds
dec
jmp
add
mov
(bad)
dec
(bad)
pop
(bad)
fisttp
add
(bad)
(bad)
jae
pop
arpl
cmp
clc
(bad)
jmp
mov
js
cmc
sbb
(bad)
jmp
into
cwde
xor
mov
leave
retf
or
nop
cmp
xor
(bad)
(bad)
jmp
out
pop
into
(bad)
mov
outs
jg
aad
in
bound
push
mov
(bad)
(bad)
call
ins
push
sar
mov
daa
push
pusha
pop
inc
xor
dec
mov
xlat
pop
stos
(bad)
jp
sahf
call
sbb
push
mov
mov
cli
jp
sti
or
cmp
out
movs
in
fbld
jns
(bad)
(bad)
(bad)
jmp
push
jge
in
jle
pop
sub
outs
lods
adc
push
mov
ret
inc
pop
pop
loop
jns
mov
(bad)
mov
mov
jb
stc
sub
jmp
cmp
inc
arpl
and
mov
inc
call
loopne
adc
ins
cli
jne
repnz
rcl
cwde
enter
nop
loopne
pop
(bad)
(bad)
(bad)
(bad)
fist
xlat
or
iret
and
aas
sub
or
bound
xor
ds
clc
call
in
inc
cwde
cwde
xor
mov
retf
sar
out
arpl
jnp
ja
and
sub
lahf
adc
mov
cmc
sbb
(bad)
inc
sub
ins
sbb
mov
mov
aam
inc
out
mov
ins
xor
dec
pop
pop
call
stos
pop
int3
sub
mov
mov
mov
dec
sahf
es
aaa
enter
inc
adc
adc
je
std
xor
cmp
(bad)
(bad)
call
push
cld
and
mov
add
scas
xchg
jmp
inc
jge
sub
fs
(bad)
(bad)
(bad)
inc
lods
test
or
jo
lahf
cmp
cmp
out
push
ret
outs
daa
or
(bad)
jmp
mov
lock
jne
pop
mov
sti
cdq
(bad)
(bad)
call
call
adc
dec
sbb
mov
adc
retf
mov
shl
jmp
outs
cmp
in
xor
xchg
js
push
jne
mov
test
cs
loop
int3
mov
sbb
push
jnp
mov
jne
out
outs
out
add
jg
fs
jmp
aam
pop
ffree
popf
dec
in
adc
dec
mov
gs
fcomip
push
and
or
cmp
or
test
cmc
pop
icebp
in
ins
xor
mov
and
fimul
mov
(bad)
(bad)
inc
sbb
push
mov
cmps
fstp
test
add
in
cmps
mov
stos
lock
sbb
(bad)
jg
push
push
(bad)
mov
nop
enter
inc
pop
dec
add
adc
ins
sbb
(bad)
(bad)
(bad)
dec
xchg
dec
sbb
dec
mov
and
sar
or
das
test
test
shr
jmp
loope
jmp
sar
lea
repnz
mov
leave
sub
rcl
std
push
sub
stos
(bad)
push
test
psubd
adc
cmp
mov
fs
mov
mov
mov
fyl2xp1
fild
repz
inc
push
push
xchg
adc
pusha
sbb
jne
adc
dec
push
adc
shl
xor
cmp
jo
and
sti
xchg
jg
clc
cwde
mov
mov
test
movs
mov
stos
retf
test
(bad)
(bad)
out
test
mov
mov
jle
loop
dec
test
dec
into
pop
lock
push
test
dec
or
cmp
pop
icebp
jecxz
cmp
push
xchg
pop
(bad)
jmp
xchg
inc
push
and
ret
cmc
jnp
dec
and
and
mov
and
push
mov
(bad)
(bad)
inc
(bad)
pop
addr16
mov
sbb
jnp
xchg
ja
and
push
pop
sub
xchg
cmp
mov
add
or
jecxz
lock
push
adc
lock
mov
inc
call
stc
and
(bad)
(bad)
fstp
into
mov
imul
mov
add
rol
and
ret
test
(bad)
mov
mov
div
adc
mov
push
pop
pop
mov
(bad)
idiv
(bad)
(bad)
call
(bad)
pop
cli
lock
ins
adc
(bad)
sbb
dec
or
lds
jge
fistp
lock
call
or
lods
lahf
sub
xor
mov
push
dec
test
ja
sbb
mov
dec
ss
loopne
dec
out
mov
(bad)
(bad)
call
test
mov
jno
adc
outs
mov
pop
aaa
xlat
out
(bad)
mov
jge
in
cmp
test
fstcw
mov
jle
or
mov
inc
(bad)
out
push
std
call
cmps
jnp
xchg
mov
jecxz
xor
outs
in
adc
hlt
xchg
ud0
(bad)
(bad)
mov
rol
(bad)
stc
addr16
pop
xchg
inc
popa
xor
sbb
(bad)
jns
lea
mov
jl
lea
mov
sub
adc
cdq
sbb
(bad)
inc
in
and
in
sub
push
push
jo
adc
and
push
jo
and
xor
shr
outs
stc
xor
push
rol
std
(bad)
(bad)
inc
inc
js
cld
(bad)
loopne
mov
pop
inc
(bad)
push
jp
pop
or
psrlw
dec
inc
push
cmp
jg
dec
jmp
mov
cdq
xchg
sub
cmp
mov
pop
xchg
jb
clc
and
mov
(bad)
inc
sub
fimul
and
inc
outs
or
jns
add
sbb
cdq
(bad)
(bad)
(bad)
(bad)
jle
cwde
and
fwait
(bad)
inc
clc
std
out
jnp
push
xchg
fcomp
std
out
icebp
fmul
jae
mov
outs
cli
push
clc
push
scas
jl
and
pop
sbb
lds
sahf
xlat
adc
dec
mov
(bad)
dec
std
inc
or
pop
xor
ret
cmps
mov
xor
add
jmp
inc
(bad)
(bad)
(bad)
(bad)
dec
popa
pop
lahf
inc
sub
cdq
loope
neg
cwde
lock
xchg
int
inc
fs
xor
(bad)
mov
ja
and
in
pop
mov
jecxz
and
jmp
call
movs
adc
adc
fdivr
imul
mov
sbb
jle
(bad)
(bad)
(bad)
call
imul
ja
xor
cmps
mov
stc
idiv
ror
outs
(bad)
(bad)
(bad)
(bad)
jmp
loopne
pushf
dec
push
jp
mov
push
adc
push
inc
in
xchg
(bad)
mov
cmp
push
add
xor
mov
outs
push
sbb
int
jb
in
pop
enter
or
(bad)
(bad)
(bad)
call
pusha
mov
cld
je
scas
stc
into
mov
hlt
pop
sbb
(bad)
cmc
inc
clc
(bad)
(bad)
push
mov
cmps
sub
mov
sar
out
push
jg
dec
out
fdivr
mov
data16
xor
jecxz
sbb
clc
(bad)
(bad)
dec
sar
outs
push
pop
les
jbe
jmp
adc
leave
jmp
inc
mov
pop
sar
mov
out
jae
in
mov
outs
jae
jns
mov
jmp
je
sub
mov
jg
rol
clc
movs
aas
sub
loopne
xchg
into
aaa
push
enter
(bad)
push
(bad)
mov
cmps
je
add
shl
imul
sub
inc
mov
stc
push
jle
xor
(bad)
(bad)
call
adc
jl
push
push
push
arpl
mov
out
(bad)
in
cmp
cli
(bad)
out
test
mov
or
and
jl
inc
and
scas
xor
push
mov
arpl
(bad)
(bad)
(bad)
dec
push
pop
cmp
neg
int
data16
xor
pop
sti
xchg
fcmovnb
add
(bad)
(bad)
call
jne
(bad)
pop
(bad)
and
in
ficom
mov
test
cdq
sti
mov
jne
out
mov
or
fmulp
mov
aas
cs
sbb
(bad)
(bad)
(bad)
cmp
xor
inc
push
and
in
dec
out
pop
sbb
mov
push
sub
cmps
loopne
(bad)
(bad)
(bad)
(bad)
mov
sbb
fild
pop
inc
shr
mov
jecxz
jge
dec
ins
ins
pop
(bad)
(bad)
jmp
push
(bad)
out
push
cmps
aam
(bad)
repz
jmp
fistp
pusha
shr
inc
cmp
fst
in
xor
push
cmp
mov
mov
push
test
push
push
mov
(bad)
(bad)
call
mov
jno
inc
call
mov
mov
and
ins
push
xchg
int
xchg
or
std
outs
in
ret
or
(bad)
or
(bad)
jg
call
add
iret
jno
ins
(bad)
and
jb
scas
ins
sbb
dec
sahf
loop
test
(bad)
(bad)
jmp
cmps
pop
adc
push
xchg
lahf
std
outs
mov
xchg
pop
(bad)
fsub
jbe
sbb
xchg
inc
(bad)
(bad)
jmp
cmp
cmp
push
repz
jge
ins
xchg
xor
push
add
je
and
popf
inc
xchg
and
(bad)
jg
jns
inc
test
mov
fsubrp
bound
out
ins
aad
out
or
dec
outs
arpl
call
xchg
aam
aad
sbb
mov
add
xchg
sbb
push
cmp
(bad)
(bad)
inc
or
mov
ret
pop
repz
pushf
cwde
and
aam
repz
(bad)
call
jge
imul
fwait
xlat
arpl
pop
and
(bad)
push
xor
nop
pop
pop
std
adc
push
xchg
jno
cli
pop
sub
je
aas
push
sbb
and
out
ss
imul
(bad)
sub
test
pop
mov
inc
aam
(bad)
(bad)
(bad)
jmp
iret
daa
daa
popf
scas
pop
daa
ret
pop
dec
mov
push
add
or
jg
repnz
(bad)
(bad)
dec
pop
dec
push
pop
das
jge
jecxz
add
(bad)
arpl
shl
stc
xor
(bad)
(bad)
(bad)
(bad)
call
mov
dec
into
inc
push
dec
leave
nop
lds
nop
ret
mov
push
mov
xchg
pop
add
icebp
dec
test
addr16
lock
xor
pop
mov
sbb
inc
adc
mov
push
jbe
xor
push
xor
daa
adc
cmp
cld
(bad)
fimul
push
inc
and
jbe
jl
out
mov
inc
inc
inc
fbld
mov
int
push
pop
push
into
or
push
(bad)
(bad)
jmp
cmp
jo
push
fidivr
into
xor
leave
mov
jb
pop
jmp
ss
(bad)
(bad)
inc
arpl
mov
imul
jb
sar
jecxz
cli
sbb
je
jp
push
push
clc
(bad)
dec
lods
pop
mov
ja
jb
dec
leave
mov
imul
ret
sub
(bad)
pop
hlt
jmp
addr16
scas
push
in
push
or
inc
fwait
mov
(bad)
dec
jmp
inc
fisubr
loopne
or
and
sub
scas
sti
sub
cli
call
push
cmps
test
arpl
leave
fisttp
and
fld
adc
popa
xor
rcr
or
mov
cmp
ror
retf
daa
inc
outs
test
jp
mov
pushf
jno
jmp
xchg
push
or
shr
repz
(bad)
(bad)
call
jb
loopne
pop
fst
mov
cdq
call
pushf
mov
sbb
or
(bad)
(bad)
(bad)
mov
mov
daa
jbe
loop
jo
dec
jbe
ds
sub
js
sti
mov
(bad)
inc
adc
scas
stos
pushf
clc
outs
pop
(bad)
push
je
mov
loope
inc
mov
(bad)
jl
fist
cmp
cs
lock
xchg
les
loope
lods
fist
add
cmp
shl
adc
(bad)
popa
cmp
push
daa
(bad)
retf
loope
aam
cwde
loopne
(bad)
jg
fs
into
push
jg
mov
push
xchg
stos
fwait
sahf
stos
pusha
es
(bad)
pushf
out
dec
jo
mov
bound
retf
mov
mov
fidiv
mov
pop
out
cld
leave
(bad)
(bad)
jg
(bad)
jnp
das
je
or
stos
push
rcr
retf
shr
das
test
(bad)
sub
pop
pusha
cld
idiv
dec
mov
stos
mov
call
outs
rcl
out
stos
push
(bad)
(bad)
call
push
sbb
adc
inc
dec
movs
add
movs
out
fstp
daa
call
dec
xchg
outs
sub
test
xchg
fistp
(bad)
or
icebp
dec
or
(bad)
(bad)
call
push
sub
leave
jge
sbb
adc
ret
sub
ror
xchg
cmp
or
clc
push
call
jmp
(bad)
jg
pop
inc
outs
or
ret
out
mov
out
mov
lods
(bad)
xchg
cmps
dec
or
sbb
xchg
mov
jg
not
pushf
xchg
out
pop
xor
sbb
in
jle
mov
adc
mov
sar
inc
sbb
dec
xchg
push
fwait
iret
(bad)
out
test
repz
jecxz
push
sar
cli
ja
jp
fadd
(bad)
mov
jp
adc
(bad)
jmp
pop
push
std
lock
mov
cld
ins
jg
mov
or
bound
(bad)
(bad)
fistp
xchg
(bad)
xchg
mov
mov
or
stc
lock
(bad)
cdq
inc
imul
out
mov
cmc
(bad)
dec
fist
xchg
fsubr
pop
popa
fadd
inc
xchg
loop
mov
dec
xor
ds
(bad)
(bad)
mov
out
lahf
pop
fldcw
das
(bad)
xchg
fidivr
jbe
xchg
mov
clc
sbb
ja
(bad)
(bad)
call
mov
push
jno
xchg
mov
shl
out
or
pushf
dec
pop
dec
aam
outs
aad
lods
push
(bad)
call
inc
(bad)
cld
stos
scas
call
ins
push
push
and
add
mov
fild
push
pop
mov
inc
and
ss
mov
inc
adc
and
cmp
mov
adc
(bad)
(bad)
jmp
push
into
cmp
in
jle
and
push
jecxz
pop
aas
cmp
mov
nop
test
(bad)
(bad)
call
cmps
mov
jb
push
sub
nop
mov
bound
pushf
(bad)
add
adc
outs
push
(bad)
in
push
dec
and
sub
retf
imul
mov
(bad)
dec
retf
inc
adc
mov
sub
xor
call
enter
(bad)
(bad)
dec
sbb
add
xchg
ffreep
mov
mov
push
jae
sar
mov
and
push
std
mov
dec
mov
rcl
outs
das
out
mov
push
cld
mov
lods
lods
sbb
movs
arpl
hlt
and
jg
or
js
jmp
int
inc
mov
add
(bad)
(bad)
(bad)
dec
or
cmc
sbb
add
loope
popf
minps
mov
inc
(bad)
in
ret
or
(bad)
(bad)
call
ficom
or
xchg
ror
cmp
dec
in
dec
mov
outs
dec
add
dec
das
xor
(bad)
(bad)
inc
pop
jae
xlat
in
call
push
xchg
push
js
jo
loope
dec
push
jbe
fcos
(bad)
(bad)
call
cmps
call
scas
mov
jae
inc
xor
xchg
mov
inc
shl
ins
jns
xchg
push
mov
bound
push
mov
(bad)
loope
inc
push
(bad)
mov
enter
sub
rol
jmp
fwait
idiv
call
mov
into
xchg
jge
cld
sbb
retf
mov
fnsave
push
pop
(bad)
(bad)
mov
je
pop
pop
or
jg
cmps
add
fucom
ret
adc
popa
call
lea
mov
in
jo
xchg
(bad)
(bad)
jmp
int
and
ffreep
push
das
push
or
fist
cmp
add
adc
(bad)
or
repnz
bound
adc
(bad)
std
pusha
push
fcomip
(bad)
dec
jb
data16
pop
pop
or
neg
push
xlat
add
jle
inc
ja
add
(bad)
(bad)
(bad)
(bad)
aas
cmp
hlt
pop
jnp
test
fld
cmps
leave
cli
sub
rcr
mov
sbb
call
cmp
in
cmp
jl
cmps
cld
sub
mov
cmp
ds
stos
fidiv
mov
je
aad
jns
xchg
sub
xor
(bad)
and
cli
add
inc
es
shl
jmp
jnp
clc
les
push
sub
inc
xchg
loop
adc
sub
es
les
adc
cmp
mov
sub
cld
jg
mov
popa
mov
jae
jg
(bad)
(bad)
(bad)
(bad)
fmul
aam
push
dec
inc
test
(bad)
cmps
xchg
sub
fiadd
xchg
lahf
imul
(bad)
(bad)
push
cmp
sbb
or
xor
push
(bad)
repnz
ins
mov
push
daa
sbb
pop
in
and
int3
jns
jecxz
jmp
lods
push
push
aad
xor
push
and
hlt
(bad)
(bad)
(bad)
(bad)
jmp
jl
inc
jno
js
stc
cld
cvttps2pi
cmp
pop
hlt
jno
(bad)
jp
cli
(bad)
(bad)
(bad)
push
sahf
jecxz
sbb
jnp
push
imul
and
xor
loope
call
push
retf
adc
dec
adc
mov
or
(bad)
inc
ret
cmp
jle
mov
(bad)
(bad)
mov
fld
fwait
dec
push
xor
jne
push
xor
(bad)
hlt
es
mov
aas
pop
cmps
sbb
sub
(bad)
(bad)
push
inc
sbb
pop
lods
inc
mov
dec
inc
mov
adc
pop
cmps
fst
loop
sbb
pop
cmps
xor
imul
jno
inc
aam
ror
scas
pop
push
call
mov
mov
out
cwde
clc
and
add
leave
xchg
out
mov
test
xor
(bad)
(bad)
(bad)
mov
mov
stos
scas
adc
outs
pop
inc
and
or
push
mov
(bad)
(bad)
(bad)
(bad)
in
sbb
jns
pop
or
jmp
mov
cmp
(bad)
jmp
iret
sub
xchg
repnz
jp
(bad)
(bad)
inc
repnz
push
inc
daa
xchg
mov
out
xchg
scas
out
retf
push
and
mov
sbb
stos
lock
jns
ror
mov
call
sbb
lods
sahf
ds
(bad)
jmp
jns
xchg
push
cmp
outs
(bad)
add
sub
jmp
jns
mov
fwait
push
jb
xlat
scas
pusha
shl
fwait
(bad)
call
jle
das
and
repnz
shl
(bad)
movs
jg
ja
push
cld
add
cmp
stos
mov
(bad)
call
sbb
adc
inc
push
xchg
pop
inc
cmps
cdq
sbb
pop
push
mov
call
(bad)
call
xor
int
fsub
(bad)
and
add
mov
mov
iret
mov
mov
out
das
iret
mov
shr
sti
jl
and
push
cmc
jmp
fimul
(bad)
clc
sbb
test
dec
ss
cmp
fs
jne
jno
sbb
mov
push
neg
out
push
std
jmp
inc
jns
pop
jb
mov
xchg
sub
(bad)
push
mov
adc
(bad)
leave
sub
mov
adc
adc
jmp
or
je
sahf
mov
fidiv
lods
jle
xchg
fmul
(bad)
(bad)
mov
jno
sbb
add
rcl
hlt
cmp
sub
dec
pop
(bad)
(bad)
(bad)
inc
lahf
pop
shl
inc
cmc
xchg
jmp
mov
pop
sti
sbb
lds
jge
sar
(bad)
(bad)
jmp
adc
fistp
push
imul
in
xchg
in
mov
mov
imul
clc
pop
inc
sahf
mov
mov
fisttp
jg
jae
mov
push
(bad)
(bad)
(bad)
dec
clc
int3
push
and
icebp
std
cmp
cld
xchg
mov
rcr
xor
or
dec
gs
repz
(bad)
in
call
test
popf
icebp
imul
aaa
cmp
mov
rcr
xchg
pop
xor
(bad)
out
and
push
fld
(bad)
(bad)
(bad)
out
out
mov
pop
mov
fnstenv
in
jbe
retf
jmp
leave
xchg
jae
mov
scas
lods
adc
and
jo
pushf
mov
ins
movs
daa
lock
cmp
cmp
sbb
fiadd
repz
sub
mov
jl
xor
(bad)
jg
sub
or
xor
(bad)
jmp
not
pop
cld
mov
dec
scas
(bad)
call
icebp
cmp
daa
push
dec
lods
in
jmp
(bad)
call
mov
sbb
das
fist
cmp
call
xchg
jge
xor
mov
out
cs
icebp
push
jg
add
ret
pushf
shl
hlt
call
hlt
cwde
(bad)
cwde
std
ds
push
fnstsw
bound
xchg
cmp
mov
or
mov
(bad)
(bad)
jle
lods
and
cmp
int
push
xchg
push
rcl
push
sub
mov
mov
push
adc
call
dec
pop
fstp
sahf
mov
inc
leave
clc
call
movs
jmp
mov
pushf
jb
mov
and
test
pop
pushf
push
outs
lods
add
mov
push
in
(bad)
push
cmp
adc
rcl
adc
iret
cs
sbb
inc
cld
inc
cmp
sbb
js
daa
adc
push
sar
(bad)
call
ret
inc
daa
push
stc
dec
or
in
mov
out
js
(bad)
shr
int3
xchg
inc
sub
adc
or
mov
jl
(bad)
fbld
mov
add
xchg
ins
sbb
jecxz
add
inc
out
pop
or
popf
xor
arpl
and
jbe
inc
adc
or
icebp
cmp
add
cwde
pop
and
(bad)
(bad)
jmp
in
add
aad
cli
xchg
and
or
add
jmp
out
cmp
jmp
in
jl
das
and
mov
popa
fxch
into
pop
mov
scas
or
push
fwait
ins
pop
aam
fadd
(bad)
lods
jmp
ja
jge
mov
out
xlat
mov
cld
call
repz
adc
scas
imul
fbstp
pop
mov
xor
xor
push
xchg
jg
loope
fbstp
test
frstor
dec
inc
scas
in
xchg
nop
(bad)
xchg
loope
cld
cmp
mov
jb
pop
cmp
outs
movs
fsubr
xchg
inc
mov
call
sbb
int3
(bad)
jb
sbb
(bad)
in
mov
cmp
mov
push
fcmovnbe
adc
cmp
(bad)
icebp
cmp
neg
sbb
add
nop
fcom
adc
ja
cmps
jmp
or
(bad)
dec
ret
xchg
xor
fld
push
push
sbb
adc
adc
call
ins
dec
adc
loop
jg
cmp
cmp
jecxz
adc
sub
jmp
(bad)
call
add
test
stos
(bad)
stos
(bad)
push
cmps
push
xor
cmp
xchg
push
push
int3
clc
mov
sbb
pop
cmps
sub
(bad)
call
out
js
push
cld
test
das
or
in
xchg
(bad)
jg
repz
mov
popf
int
stc
outs
xchg
xchg
in
push
dec
repz
adc
(bad)
(bad)
(bad)
jg
inc
loope
loope
data16
jl
ds
loope
lods
push
inc
xchg
push
push
fmul
xor
loope
jmp
xor
mov
lods
call
test
(bad)
pusha
aaa
dec
xchg
scas
aas
jmp
push
and
aas
cmp
cwde
icebp
ja
sbb
push
clc
adc
mov
fdiv
call
(bad)
(bad)
(bad)
call
lahf
adc
stos
out
sbb
mov
xchg
test
lea
or
jl
fcom
mov
(bad)
(bad)
(bad)
push
jmp
sbb
mov
in
int3
pop
jno
inc
dec
mov
push
lock
(bad)
icebp
mov
xchg
sbb
and
pop
adc
jecxz
push
jb
dec
cmp
add
(bad)
(bad)
(bad)
inc
and
cmp
and
rcl
xchg
mov
pusha
arpl
sbb
fcom
(bad)
push
aaa
sbb
mov
(bad)
(bad)
inc
jo
sbb
pop
outs
or
jmp
loope
pop
xor
jg
pop
cmp
mov
jmp
xchg
pop
mov
lea
cwde
jl
jge
push
xchg
inc
icebp
int3
pop
mov
mov
push
test
out
or
call
(bad)
mov
add
xor
fcom
sub
ret
adc
mov
test
sbb
xchg
or
dec
aam
(bad)
(bad)
(bad)
jmp
jge
ins
hlt
imul
add
ja
cmc
cmc
into
nop
mov
loop
mov
pop
popf
repz
(bad)
(bad)
(bad)
(bad)
sahf
push
pop
adc
fisttp
repz
jmp
gs
cmp
mov
cmp
(bad)
call
scas
rcr
add
sub
(bad)
(bad)
push
or
dec
mov
std
jge
sbb
add
jb
or
test
loopne
fdivp
in
shl
jae
dec
sub
sub
std
call
jl
jo
mov
jns
mov
mov
movs
stc
imul
xlat
inc
push
(bad)
(bad)
(bad)
jmp
dec
push
addr16
push
leave
sar
xchg
fidiv
cld
sub
retf
jle
rol
fidivr
imul
(bad)
(bad)
call
(bad)
loop
lahf
sub
shl
jecxz
pop
sbb
xlat
pop
inc
(bad)
mov
(bad)
(bad)
inc
les
xchg
push
push
adc
jle
ss
stos
jo
push
ss
(bad)
(bad)
clc
xor
(bad)
in
lods
sub
dec
sub
push
mov
ss
xor
dec
(bad)
(bad)
(bad)
dec
sbb
call
sbb
lods
and
xor
mov
(bad)
(bad)
jg
dec
xchg
in
rol
vunpckhps
aaa
pushf
js
pop
int3
(bad)
(bad)
(bad)
call
cmp
mov
repnz
mov
cdq
das
adc
das
loope
loop
mov
pop
popa
pop
std
push
shl
adc
fninit
or
shl
(bad)
(bad)
jmp
cmp
mov
sbb
mov
inc
fdivrp
jg
push
and
outs
(bad)
(bad)
inc
popa
and
lahf
adc
pop
sbb
loopne
(bad)
sti
sub
icebp
ret
stos
xor
xchg
fwait
clc
in
mov
in
adc
sbb
inc
ss
(bad)
jmp
repz
jns
loopne
or
div
loop
jae
push
pop
(bad)
(bad)
call
sub
es
pop
mov
mov
sub
add
push
dec
das
jmp
and
dec
xor
stos
xor
std
dec
cwde
jne
mov
sbb
(bad)
call
inc
rcl
push
or
outs
cmc
nop
xor
scas
cwde
push
push
sbb
and
mov
add
or
adc
mov
loop
int
int
adc
mov
inc
(bad)
jge
push
enter
ds
sbb
mov
(bad)
(bad)
jmp
(bad)
and
ss
repnz
mov
push
fdiv
jns
push
sub
(bad)
call
cmp
or
jmp
int3
inc
js
ss
popf
mov
cli
(bad)
(bad)
(bad)
cld
xchg
rcl
cmp
cli
sub
popa
js
(bad)
cmps
loopne
rcl
stos
dec
retf
jmp
aam
xchg
jecxz
mov
pop
jmp
iret
push
imul
inc
out
imul
push
cld
jmp
sub
jne
test
cld
pushf
lods
xchg
scas
push
fild
int
sbb
jmp
mov
ins
gs
add
pop
xchg
cwde
sbb
dec
call
pop
and
fwait
or
jg
mov
lods
popf
sub
inc
pop
jmp
ficom
(bad)
jg
mov
jg
lock
es
or
inc
mov
mov
(bad)
(bad)
(bad)
dec
bound
fisttp
mov
sub
mov
xor
cmp
fwait
mov
xor
je
lahf
leave
mov
pusha
cmps
adc
(bad)
inc
aas
xlat
or
adc
xchg
and
jb
mov
mov
mov
add
sbb
jne
cli
jmp
adc
sub
cmp
or
call
aas
mov
pop
loopne
add
outs
mov
push
xor
stos
test
(bad)
(bad)
(bad)
push
jp
pushf
adc
out
repz
mov
inc
or
shl
stos
and
mov
cmps
cmc
push
sbb
pop
out
xor
sub
mov
(bad)
(bad)
(bad)
call
aaa
xchg
mov
ins
mov
jns
les
not
fsubr
mov
repnz
or
call
mov
std
mov
mov
scas
xor
push
mov
clc
jg
mov
loope
cwde
cwde
clc
jns
mov
cmp
(bad)
(bad)
dec
mov
xchg
push
outs
fistp
xchg
sar
jns
in
xor
mov
mov
sub
mov
dec
mov
shl
sub
pop
xor
int
cmp
leave
or
loope
call
mov
(bad)
jmp
add
adc
ficomp
xor
adc
sbb
mov
sub
or
in
ds
cmps
aad
push
loope
call
jmp
push
cwde
push
push
js
ror
ds
icebp
popa
ret
clc
dec
loopne
mov
xor
push
clc
xor
fldenv
(bad)
(bad)
std
fcomp
mov
jno
cmp
dec
push
xchg
mov
(bad)
dec
mov
(bad)
(bad)
inc
fld
or
dec
mov
inc
les
pop
xor
rcl
xlat
inc
or
fild
arpl
imul
mov
xor
nop
out
jp
outs
pop
lods
(bad)
aaa
cld
jmp
dec
in
cmp
idiv
sbb
cmp
cmp
inc
add
into
(bad)
push
mov
mov
out
cmp
push
and
(bad)
idiv
push
push
xchg
push
cmp
fnsave
loopne
movs
mov
pop
retf
bound
call
cld
sti
fidivr
pop
pop
retf
mov
pop
adc
and
mov
jmp
cli
mov
mov
mov
jae
addr16
add
(bad)
(bad)
push
leave
hlt
mov
aad
mov
xchg
les
sub
call
push
outs
xchg
movs
test
pop
xor
xchg
es
xchg
ss
sbb
popa
stc
je
(bad)
jg
adc
popa
loopne
sub
push
cmps
xchg
ins
sti
(bad)
(bad)
push
xchg
pop
js
push
fistp
call
pop
sub
iret
push
sbb
mov
sub
int
fidiv
jns
jmp
inc
(bad)
(bad)
(bad)
jmp
pop
hlt
test
call
dec
xchg
out
pop
stos
inc
sbb
sbb
or
test
pushf
cmps
outs
mov
push
(bad)
(bad)
inc
ds
dec
bound
out
xor
jmp
mov
push
aas
or
(bad)
(bad)
call
mov
int3
ins
and
xor
xor
dec
xchg
sub
mov
dec
mov
(bad)
(bad)
inc
xchg
pop
push
popa
mov
add
xor
stc
xchg
push
mov
push
jge
xchg
jle
ins
mov
inc
cmp
addr16
in
fistp
sub
(bad)
(bad)
(bad)
(bad)
push
lahf
fs
mov
xchg
sub
push
cwde
push
out
out
jnp
repnz
enter
loopne
lods
jne
(bad)
(bad)
(bad)
dec
or
cmp
in
cmp
mov
aas
dec
mov
xor
dec
inc
aad
icebp
(bad)
(bad)
call
(bad)
popf
xchg
pop
inc
scas
adc
xchg
lock
out
cmps
jmp
jbe
lods
(bad)
(bad)
call
arpl
loope
(bad)
mov
into
mov
in
push
sar
xchg
mov
mov
or
out
mov
xchg
pop
dec
add
rol
fwait
xor
lods
test
test
mov
push
jns
add
inc
cld
in
je
outs
sahf
fnstsw
dec
fistp
or
inc
out
aaa
push
cmps
cs
add
xchg
xchg
jmp
and
fcomp
cmc
cwde
pop
mov
daa
gs
jns
and
ss
(bad)
out
cli
call
cli
cdq
mov
dec
mov
test
xchg
lea
or
adc
test
sbb
xchg
and
hlt
xor
cmc
icebp
mov
and
retf
fs
inc
mov
cli
mov
loop
fidivr
ins
arpl
ja
clc
rcl
adc
push
aaa
dec
(bad)
hlt
int3
mov
add
or
std
(bad)
(bad)
jg
adc
mov
(bad)
test
cwde
dec
int
ret
inc
daa
push
cmp
mov
(bad)
mov
out
jl
mov
sbb
mov
dec
repz
(bad)
(bad)
(bad)
call
mov
push
in
adc
adc
xor
xor
fdivr
bound
ja
(bad)
(bad)
push
sub
fisub
xor
adc
and
sub
and
(bad)
call
add
xchg
repnz
xchg
xor
sbb
(bad)
ror
sbb
dec
(bad)
jb
retf
dec
pop
jg
jae
outs
jns
(bad)
(bad)
(bad)
push
mov
test
data16
xchg
shr
push
fsub
jb
add
out
mov
(bad)
(bad)
mov
mov
xlat
dec
sub
fwait
outs
mov
imul
dec
repz
xchg
cmp
not
push
mov
call
mov
push
push
adc
mov
sub
inc
sub
xor
cld
test
push
imul
adc
lods
xchg
lock
pop
push
pop
cmp
pop
push
ret
test
fs
adc
xchg
jg
xor
repz
dec
pop
cmp
inc
int
inc
sbb
push
sub
(bad)
inc
dec
and
sbb
push
mov
pop
lods
out
xor
je
adc
mov
icebp
(bad)
cmps
xlat
(bad)
jmp
outs
xor
pop
cmp
ret
mov
cmp
inc
(bad)
jg
clc
cs
inc
(bad)
test
cmp
popf
and
jmp
mov
jmp
add
fwait
add
data16
mov
test
push
add
(bad)
(bad)
(bad)
stc
fstp
(bad)
and
pop
pop
clc
jle
ss
imul
test
popf
pop
push
mov
mov
(bad)
(bad)
(bad)
dec
mov
in
jb
shr
das
xchg
and
push
sar
jmp
jg
sahf
fwait
aad
repnz
fst
into
es
xlat
pop
call
loop
pop
xchg
(bad)
(bad)
(bad)
push
push
enter
push
fld
sub
fild
inc
jnp
mov
xchg
(bad)
(bad)
call
inc
shl
lahf
sbb
mov
mov
push
push
fisttp
(bad)
(bad)
std
and
es
cs
mov
cwde
inc
out
inc
adc
and
call
sub
ret
push
clc
xor
sbb
icebp
(bad)
cmp
call
popf
xchg
dec
xor
(bad)
(bad)
(bad)
call
call
xor
jb
inc
or
test
out
jns
sbb
add
jns
(bad)
(bad)
(bad)
push
mov
in
cmp
pushf
fwait
outs
jns
sub
(bad)
scas
or
repz
jmp
fdivr
stc
xor
stos
push
mov
xchg
nop
retf
dec
cmp
daa
cmc
(bad)
jmp
test
cwde
mov
into
and
jo
sti
aam
icebp
mov
(bad)
jg
xor
dec
aam
push
int3
fstp
add
mov
jmp
jnp
dec
out
mov
(bad)
(bad)
jmp
retf
(bad)
cmp
mov
je
jno
fs
xor
stos
ret
aaa
inc
(bad)
call
out
sub
fild
shr
add
call
push
mov
sbb
dec
in
xor
test
push
sbb
jp
clc
shl
ins
cld
pop
les
jg
fadd
in
add
ds
jmp
sub
dec
mov
inc
mov
repz
iret
xchg
(bad)
jmp
fmul
adc
ja
inc
xor
dec
adc
lock
mov
call
mov
or
pop
or
sahf
repz
icebp
pop
(bad)
jmp
sub
add
or
cmps
sahf
push
sbb
(bad)
push
cld
jns
stc
lds
xchg
mov
cmp
sub
cmp
sub
(bad)
(bad)
(bad)
call
dec
movs
out
(bad)
stos
repnz
xor
pop
fimul
retf
shl
clc
leave
sti
pop
jmp
(bad)
call
cmp
stos
(bad)
ins
stos
movs
pop
xlat
test
mov
pop
add
aas
xor
mov
xor
(bad)
(bad)
jmp
push
push
retf
xchg
pop
inc
sub
idiv
jnp
fcomp
jg
or
cmps
inc
mov
jle
or
pop
popf
jo
jns
mov
cwde
(bad)
(bad)
fcomip
mov
jnp
and
mov
jmp
imul
add
sahf
(bad)
(bad)
(bad)
call
pop
cmp
pop
outs
sbb
sbb
imul
mov
and
xchg
dec
pop
(bad)
xor
cmp
jl
mov
test
cmp
mov
sbb
cld
ret
out
jbe
sbb
ss
add
xor
mov
loope
test
or
hlt
sub
out
loope
push
(bad)
dec
loope
das
sub
inc
ja
pop
ret
jecxz
loope
pop
pop
ja
ret
mov
retf
fild
aad
cmps
jmp
scas
loopne
or
push
icebp
sub
dec
mov
aam
or
mov
jg
push
popf
mov
js
dec
sbb
(bad)
(bad)
call
mov
and
fwait
dec
repz
jmp
(bad)
js
xchg
cld
dec
in
addr16
(bad)
call
inc
inc
pop
mov
jmp
out
jo
fsub
test
or
xchg
repnz
inc
jecxz
push
test
jl
pop
mov
jp
inc
mov
(bad)
(bad)
cli
mov
bound
and
mov
call
xchg
xchg
xchg
push
add
es
(bad)
(bad)
(bad)
inc
pop
(bad)
xor
or
(bad)
mov
mov
int
inc
adc
(bad)
out
push
xor
in
mov
inc
cmp
ins
les
dec
std
pop
in
xor
cli
out
dec
xor
mov
pop
ins
pop
(bad)
mov
and
xchg
mov
jle
pushf
sub
stos
mov
mov
jl
jb
cli
data16
fld
push
(bad)
(bad)
(bad)
inc
mov
mov
inc
retf
mov
adc
or
dec
fcom
pop
stos
push
outs
xor
push
xor
lds
sub
jmp
push
(bad)
jl
stos
inc
mov
mov
cld
(bad)
in
jmp
dec
(bad)
cmps
cmc
pushf
ret
outs
xchg
or
inc
mov
in
xchg
out
div
or
pop
cmp
imul
addr16
fcmovbe
in
(bad)
(bad)
(bad)
clc
push
sub
out
test
xor
mov
sar
fcmovu
dec
xor
(bad)
jmp
fs
jbe
mov
jb
mov
mov
mov
mov
movs
fwait
adc
(bad)
inc
es
xchg
bound
dec
mov
jle
fwait
movs
fcom
mov
xchg
or
jl
sub
push
loop
(bad)
(bad)
ffreep
or
movs
dec
add
mov
push
popf
inc
movs
shl
jg
(bad)
fwait
add
call
jno
and
mov
(bad)
(bad)
mov
dec
mov
pop
push
ja
imul
adc
pop
xchg
leave
mov
rcr
call
cld
dec
jmp
cwde
xchg
push
push
mov
mov
xor
jo
out
mov
(bad)
jmp
adc
js
dec
xor
jle
xchg
lods
xchg
adc
sbb
lock
(bad)
call
push
cwde
movs
repnz
mov
adc
cwde
fild
jo
push
jnp
sar
std
inc
dec
xlat
jno
jmp
jne
pop
(bad)
xchg
loop
mov
int3
icebp
(bad)
cmp
loopne
sub
jecxz
or
inc
out
(bad)
fld
icebp
imul
(bad)
stos
pop
mov
cli
push
test
in
dec
icebp
mov
jmp
mov
xchg
or
(bad)
(bad)
(bad)
(bad)
(bad)
jge
sub
cs
aaa
add
ud1
es
cmc
cmp
and
push
stos
jno
sti
and
fbld
(bad)
(bad)
fsub
(bad)
dec
mov
jl
mov
mov
bound
dec
mov
idiv
(bad)
inc
jae
es
daa
cmps
jno
sub
movs
or
add
or
inc
bnd
mov
(bad)
xchg
ins
mov
sbb
pop
inc
aad
sar
sbb
repz
loop
mov
scas
jg
jle
push
sub
pop
ss
xor
lock
(bad)
(bad)
dec
adc
(bad)
and
rcl
mov
leave
clc
mov
ficomp
icebp
cli
push
sbb
inc
jg
add
loopne
fisub
(bad)
jmp
jle
inc
loop
jge
rcl
and
pop
std
push
adc
loope
push
adc
or
dec
(bad)
(bad)
(bad)
dec
test
rol
jecxz
inc
test
xchg
mov
loopne
les
movs
out
xchg
fs
(bad)
(bad)
jmp
mov
rcr
push
xchg
les
pop
push
jae
sub
mov
aad
fwait
mov
add
fimul
or
jno
jnp
mov
mov
adc
dec
fld
jne
lock
pop
push
add
cmp
cwde
pop
push
inc
in
mov
(bad)
jge
ficomp
adc
cmp
ss
iret
lds
dec
call
cwde
into
outs
(bad)
dec
lea
(bad)
retf
mov
xchg
sbb
inc
fadd
mov
(bad)
(bad)
(bad)
(bad)
mov
fisub
sbb
add
inc
jns
adc
je
ja
jbe
sbb
(bad)
(bad)
(bad)
call
dec
sub
pop
adc
push
cld
cmp
cmp
test
or
ins
or
(bad)
(bad)
push
test
push
lea
rcr
adc
sub
add
arpl
inc
in
jecxz
dec
popf
pop
in
ret
(bad)
(bad)
mov
cmp
(bad)
inc
jmp
xor
out
lds
out
lock
(bad)
(bad)
jmp
inc
hlt
add
push
add
xlat
or
push
rol
sbb
pushf
call
jns
rol
div
xchg
imul
jmp
adc
pop
ja
loopne
(bad)
(bad)
fistp
adc
call
cdq
aaa
dec
cmps
loope
out
cdq
mov
mov
(bad)
jg
and
push
fwait
js
call
pop
inc
adc
jl
mov
jg
(bad)
jmp
mov
pop
mov
jnp
mov
cmp
xchg
lock
push
call
jmp
and
cmp
lahf
fwait
in
mov
(bad)
inc
xchg
sti
or
xchg
loop
hlt
clc
cli
xchg
mov
fcmovnb
pop
popa
clc
mov
(bad)
into
pop
jb
jmp
xor
aam
(bad)
(bad)
call
cmp
jmp
movs
call
push
inc
xor
xor
add
(bad)
(bad)
stc
push
cmps
fdiv
repz
int
xor
xchg
rcr
(bad)
(bad)
inc
(bad)
call
inc
cs
retf
adc
xor
pop
mov
push
sbb
lods
in
or
stos
xor
ficomp
(bad)
fild
push
sbb
or
in
je
(bad)
(bad)
(bad)
cmp
lds
ret
movs
xchg
xlat
inc
rcr
lods
jne
fadd
add
dec
repz
scas
push
sub
(bad)
jmp
push
cmp
or
mov
and
xchg
sbb
test
jge
outs
dec
(bad)
(bad)
(bad)
(bad)
jge
(bad)
or
leave
adc
cmp
ds
cmp
pusha
int
lock
inc
cmp
aas
push
xor
mov
adc
push
iret
mov
js
adc
push
std
arpl
clc
dec
sub
jb
cs
pop
inc
(bad)
das
fucomi
outs
push
and
pop
xchg
jo
sbb
cmp
out
(bad)
(bad)
jmp
add
add
jp
out
int
(bad)
add
mov
idiv
mov
or
adc
sub
or
mov
(bad)
(bad)
(bad)
call
and
and
lock
sub
jno
push
pop
imul
jmp
pop
sub
mov
xor
in
cwde
(bad)
hlt
mov
(bad)
fadd
inc
mov
rol
ror
push
jmp
sar
(bad)
jmp
mov
cwde
ins
sub
out
or
sub
sbb
pusha
(bad)
call
inc
mov
movs
inc
cli
imul
in
xor
xor
mov
or
and
in
jb
enter
sti
xchg
fcomip
mov
icebp
(bad)
push
jle
jno
mov
loopne
pusha
cld
dec
cmp
adc
(bad)
jmp
das
jg
(bad)
jo
js
or
pusha
in
les
sar
outs
(bad)
data16
gs
mov
cs
jns
mov
(bad)
jmp
mov
jg
mov
ins
call
push
mov
dec
pop
sub
inc
xor
retf
sub
je
sub
out
(bad)
(bad)
(bad)
call
mov
cmc
and
pandn
sbb
idiv
dec
fstp
pop
sti
push
xchg
shl
sbb
push
dec
lahf
cmps
dec
out
clc
pop
push
shl
lahf
jp
jae
mov
(bad)
mov
sti
ret
in
sbb
repz
adc
in
xor
(bad)
(bad)
(bad)
(bad)
ficomp
adc
stos
pushf
dec
movs
fcom
in
pop
ffreep
lahf
jo
mov
and
(bad)
mov
call
outs
fs
or
xchg
xchg
mov
in
fdivr
outs
jmp
loope
in
mov
mov
dec
xchg
sti
adc
std
(bad)
(bad)
(bad)
(bad)
jp
pop
lahf
out
retf
rcl
(bad)
shl
cmp
ret
addr16
inc
ret
cmps
lods
cmp
das
enter
inc
pop
ret
cmps
aaa
lahf
and
scas
cli
(bad)
call
outs
out
lea
repnz
push
mov
and
pop
loopne
mov
mov
cmc
cmp
cli
leave
mov
(bad)
pop
aaa
cld
jmp
je
and
mov
fist
inc
or
fs
sub
pop
jmp
jb
in
ret
hlt
icebp
mov
retf
ficomp
sub
(bad)
(bad)
push
xchg
xor
outs
sub
cmps
jne
or
pop
movs
mov
ret
in
xchg
jge
mov
or
mov
loopne
and
pop
bound
and
ins
xor
loop
test
pusha
(bad)
(bad)
(bad)
call
mov
or
xor
cmp
pop
loope
and
(bad)
ret
push
fiadd
xor
sbb
cdq
psrld
aaa
mov
sbb
(bad)
(bad)
dec
in
xor
jecxz
push
xchg
mov
fisubr
mov
dec
std
fnstcw
dec
outs
push
mov
sar
adc
push
loop
nop
xchg
pop
adc
(bad)
(bad)
inc
sbb
(bad)
les
fwait
clc
adc
or
in
lahf
retf
add
test
clc
loope
xchg
mov
mov
cmps
imul
push
inc
adc
push
ins
xchg
sbb
(bad)
(bad)
jmp
je
cmp
jp
inc
loopne
pop
in
jmp
lods
test
mov
xchg
repnz
mov
(bad)
jmp
mov
inc
jnp
arpl
lds
cmp
dec
xor
loope
(bad)
(bad)
jmp
scas
cmp
push
cmp
(bad)
pop
(bad)
jp
add
jmp
push
cmp
repnz
(bad)
(bad)
call
pop
mov
xor
adc
dec
test
pop
cs
jns
stc
mov
sub
loope
(bad)
(bad)
inc
ficom
scas
test
add
dec
lds
div
adc
jmp
in
dec
mov
scas
aaa
cld
add
daa
ror
into
or
ins
ror
std
das
cli
(bad)
inc
rcl
fdiv
xchg
or
cmc
xchg
and
call
(bad)
(bad)
(bad)
(bad)
ficomp
mov
int
mov
jbe
imul
rol
mov
(bad)
(bad)
(bad)
jmp
pop
je
int3
mov
mov
scas
add
ret
mov
add
ret
add
inc
call
(bad)
fadd
shl
pop
lods
sub
les
retf
inc
test
pop
sub
pop
mov
cmp
mov
call
push
cli
mov
xchg
sbb
loop
hlt
and
push
push
jbe
mov
push
or
inc
iret
and
push
cld
(bad)
jmp
inc
mov
pusha
mov
hlt
hlt
(bad)
jbe
(bad)
(bad)
call
das
mov
cmp
mov
test
pop
out
push
cmps
cmp
fwait
mov
(bad)
(bad)
(bad)
mov
in
daa
and
lock
cmps
cmp
das
sti
dec
lods
aam
mov
jge
call
xchg
inc
gs
scas
imul
out
push
dec
lock
add
(bad)
(bad)
(bad)
cmp
push
xor
in
jne
inc
and
ja
ss
pushf
mov
xchg
ins
rcl
(bad)
(bad)
(bad)
mov
add
fisttp
and
xor
call
jno
call
stos
dec
sar
push
test
ficomp
out
clc
dec
jmp
mov
fs
sub
mov
clc
push
mov
stos
mov
icebp
pop
add
or
sbb
xor
(bad)
add
(bad)
call
inc
or
cld
daa
jle
push
or
rol
xchg
shl
pop
or
fdivr
stos
jmp
mov
rep
(bad)
in
mov
pushf
mov
lock
(bad)
jmp
jecxz
mov
inc
fucomip
je
push
ins
jns
sbb
jb
sbb
sub
jae
imul
jp
jmp
clc
or
es
sbb
daa
lock
jl
ffree
dec
sub
mov
pop
sub
jg
int3
dec
add
movs
add
adc
and
adc
cmp
std
(bad)
(bad)
push
fcomp
div
sbb
mov
sti
xor
pop
adc
ins
call
div
mov
in
nop
and
(bad)
cmps
inc
(bad)
out
rol
dec
xchg
popa
adc
and
and
(bad)
mov
stc
inc
ret
(bad)
(bad)
dec
and
inc
call
retf
fadd
dec
dec
nop
ja
cmp
(bad)
jg
adc
sub
jmp
inc
ror
clc
(bad)
(bad)
call
or
sti
cli
aam
scas
or
test
push
out
mov
mov
jo
mov
(bad)
jmp
ret
jmp
inc
aaa
lods
dec
mov
mov
arpl
repnz
(bad)
dec
lock
icebp
add
je
add
fwait
dec
and
inc
ss
shl
repz
pusha
adc
movs
fist
arpl
jno
shl
push
push
sub
add
sar
sbb
adc
jo
jg
mov
retf
sbb
aas
jg
pop
fsincos
or
adc
(bad)
(bad)
(bad)
call
shl
xor
or
xchg
ficom
jecxz
out
xor
sahf
push
cs
xchg
push
jp
xchg
(bad)
(bad)
mov
lods
push
int
test
ins
add
fnsave
xchg
lods
cmp
adc
stos
retf
(bad)
mov
mov
add
pop
or
(bad)
(bad)
(bad)
cmp
ss
or
cwde
mov
pop
lahf
stos
repnz
jbe
push
sahf
inc
cwde
out
mov
sub
(bad)
dec
cmp
jg
es
(bad)
ret
xchg
sbb
rcl
pop
or
test
push
jbe
adc
das
and
int
out
mov
xor
out
out
rcl
jae
adc
sbb
(bad)
in
enter
push
enter
das
nop
jecxz
inc
and
adc
std
lahf
adc
pop
pop
cmc
sbb
(bad)
(bad)
(bad)
(bad)
mov
mov
push
jl
les
add
pop
jne
in
sub
out
inc
inc
fsubr
mov
test
inc
(bad)
dec
data16
iret
xchg
cld
xor
ja
inc
xlat
mov
(bad)
(bad)
jmp
cmp
push
fadd
mov
push
inc
je
lods
scas
ret
pushf
retf
div
dec
cli
jbe
(bad)
(bad)
jmp
cmp
repnz
ds
hlt
std
dec
xchg
lahf
test
pop
cmps
dec
jmp
mov
mov
push
pop
lea
fwait
mov
mov
test
and
push
scas
mov
(bad)
(bad)
inc
sar
xor
mov
jle
jmp
(bad)
jns
cmp
push
je
(bad)
(bad)
push
sbb
retf
mov
leave
call
(bad)
stc
es
or
data16
das
cmc
(bad)
(bad)
jmp
cld
and
sbb
pop
das
leave
(bad)
inc
(bad)
jmp
xchg
fadd
inc
sar
(bad)
jmp
sbb
push
sti
mov
fdivr
(bad)
ds
pop
aam
pop
sub
xor
dec
lahf
scas
rol
aad
mov
fwait
push
jbe
(bad)
(bad)
jg
sbb
cmp
inc
callw
pop
cld
mov
pop
sub
pusha
(bad)
sbb
push
mov
int
xchg
push
inc
(bad)
stc
push
push
xchg
inc
(bad)
(bad)
(bad)
push
test
mov
push
jp
lahf
pop
cs
cmc
xchg
ret
push
push
lea
(bad)
call
sbb
cli
ror
mov
bound
fcomp
(bad)
xor
sbb
jmp
mov
inc
fidivr
(bad)
(bad)
(bad)
jmp
sub
aas
mov
clc
(bad)
shr
dec
adc
mov
mov
clc
cmp
push
ret
jae
and
pop
test
cmps
and
scas
daa
aad
xor
pusha
pop
aas
or
sti
(bad)
(bad)
jmp
sub
mov
mov
icebp
inc
xor
lods
js
push
std
hlt
add
inc
jbe
adc
sbb
pop
fmul
dec
inc
mov
fbstp
scas
(bad)
jmp
rol
mov
jno
fmul
(bad)
scas
into
mov
jmp
jle
pop
add
jmp
shl
dec
cwde
jae
(bad)
(bad)
(bad)
push
(bad)
mov
inc
clc
pop
cmc
sub
cmp
lods
dec
popa
fist
dec
or
(bad)
(bad)
(bad)
push
dec
movs
jnp
imul
inc
xor
retf
lahf
sbb
retf
push
out
stc
sub
(bad)
call
imul
(bad)
(bad)
add
and
dec
ins
or
dec
jl
jnp
popa
sti
fcom
scas
dec
stc
mov
jl
hlt
jg
lods
(bad)
jmp
dec
dec
mov
sahf
das
cmp
mov
je
(bad)
(bad)
jmp
test
sub
dec
adc
ins
bswap
je
test
inc
nop
jns
(bad)
xor
dec
loopne
xchg
inc
mov
je
mov
jg
gs
push
fnsave
xor
jmp
ror
dec
out
push
mov
xchg
aaa
pop
imul
repnz
scas
test
jnp
and
inc
addr16
mov
lods
call
retf
mov
pop
cmp
aad
cmps
in
and
mov
push
xchg
and
push
adc
push
hlt
push
arpl
frstor
lods
bound
(bad)
icebp
jne
mov
xchg
icebp
or
pusha
inc
dec
data16
jns
hlt
ror
push
int
jnp
xor
inc
rol
lods
pop
ins
push
imul
xor
mov
(bad)
(bad)
mov
sbb
sub
xchg
(bad)
mov
and
sar
(bad)
fldenv
ins
mov
jecxz
das
sbb
mov
frstor
loop
sbb
out
test
aaa
dec
jl
mul
std
iret
shl
cmps
pop
cwde
cmp
pop
ret
jb
add
std
lds
pushf
cmp
(bad)
inc
ja
rcr
(bad)
cld
imul
sbb
add
pop
mov
cmp
adc
jmp
push
jge
ret
xchg
outs
(bad)
fstp
mov
dec
js
jns
mov
mov
(bad)
(bad)
jg
xor
or
or
scas
jecxz
(bad)
std
rcl
jmp
pushf
dec
mov
in
movs
add
adc
mov
jb
(bad)
(bad)
(bad)
call
xchg
call
mov
gs
cwde
adc
xor
pop
xchg
xor
dec
dec
lock
call
out
inc
jle
(bad)
(bad)
fbstp
mov
pop
cld
dec
push
xchg
mov
push
lods
dec
mov
(bad)
(bad)
dec
sahf
pop
jmp
arpl
enter
mov
shr
or
mov
jmp
adc
(bad)
(bad)
(bad)
push
inc
mov
xor
xchg
mov
xchg
and
cmc
sbb
fiadd
outs
in
(bad)
ja
xchg
mov
(bad)
jmp
fnstsw
(bad)
jmp
sbb
sub
clc
mov
paddd
jg
xor
(bad)
(bad)
jg
xor
and
ins
inc
mov
xor
rcl
add
cmp
(bad)
aad
add
(bad)
dec
cmp
pop
dec
push
xchg
add
adc
(bad)
(bad)
dec
mov
(bad)
fisttp
inc
mov
test
cmp
jmp
xchg
inc
lods
scas
cmp
movs
fist
sbb
or
ins
mov
std
das
scas
(bad)
add
push
mov
std
cmps
xor
xor
jmp
nop
cmp
retf
(bad)
(bad)
mov
or
xchg
pop
or
popf
ins
xchg
ror
sbb
mov
into
out
clc
(bad)
cmp
and
add
and
sbb
aaa
std
jmp
pop
call
sahf
movs
mov
sub
mov
rcr
es
cmc
(bad)
(bad)
jmp
inc
fwait
in
icebp
repnz
aam
ja
xor
sbb
xor
data16
ret
out
and
aaa
cmps
or
repnz
push
lods
(bad)
jmp
repnz
sete
arpl
mov
pop
add
(bad)
(bad)
mov
cmp
dec
push
add
cli
push
(bad)
jmp
hlt
cmp
pop
adc
jmp
loopne
out
mov
adc
cwde
das
ret
jb
pop
cmc
inc
mov
dec
jnp
dec
stos
push
xor
sti
pop
sbb
sbb
(bad)
(bad)
(bad)
(bad)
out
je
jne
nop
add
test
jnp
inc
mov
aad
sbb
or
dec
sbb
(bad)
hlt
std
movs
mov
mov
inc
xlat
movs
es
cmp
pop
cld
and
(bad)
rol
ja
xor
lock
jmp
add
fs
les
into
lea
out
sub
rcl
(bad)
(bad)
fistp
sub
add
push
int
lahf
movs
cmc
and
ins
imul
jnp
test
push
aam
cmp
xor
mov
and
(bad)
(bad)
(bad)
out
sbb
cmp
popa
sbb
pop
lods
push
cmp
dec
jle
arpl
repnz
jg
call
aas
push
outs
in
pop
jecxz
icebp
js
xchg
scas
cli
inc
dec
add
jle
sti
inc
(bad)
(bad)
(bad)
inc
in
xchg
in
in
xor
jle
aam
fmul
(bad)
sti
mov
(bad)
(bad)
fcomip
les
adc
cmp
xchg
fdivp
sbb
popf
cmc
adc
inc
push
adc
(bad)
(bad)
(bad)
rcl
int3
xor
pop
lods
cmps
retf
dec
sub
test
(bad)
retf
movs
sbb
add
std
mov
dec
ficom
out
(bad)
call
out
xchg
push
and
int
mov
push
call
ss
sub
loope
imul
(bad)
jmp
stc
inc
fcom
aas
(bad)
mov
fsubr
xchg
sub
gs
dec
(bad)
(bad)
(bad)
jmp
jne
fnstenv
dec
or
outs
cmp
call
mov
sub
push
jne
and
and
(bad)
dec
pop
adc
jle
loope
or
cmp
mov
xchg
scas
call
in
mov
nop
jnp
push
xor
imul
mov
call
out
adc
dec
les
push
cmc
push
pop
scas
iret
xchg
push
jmp
inc
pop
adc
(bad)
dec
push
das
inc
shr
in
mov
xchg
stc
mov
jmp
sbb
pop
sbb
xlat
leave
pop
sbb
pop
mov
sbb
dec
pop
mov
fcomip
(bad)
cmp
lods
das
pop
and
repz
ret
stc
loop
fwait
and
(bad)
jle
out
xor
(bad)
scas
pop
and
ja
cmps
js
loop
mov
popf
adc
(bad)
(bad)
(bad)
call
adc
mov
daa
xchg
push
add
mov
dec
cmp
mov
fdivr
pop
(bad)
mov
fcomp
(bad)
ds
or
xor
jmp
hlt
inc
lock
pop
lahf
(bad)
(bad)
(bad)
call
mov
xchg
push
push
(bad)
xchg
mov
inc
(bad)
test
mov
sub
push
cmp
(bad)
(bad)
(bad)
out
push
jp
dec
push
int
ret
test
pop
in
popa
aaa
and
jne
mov
pop
or
xor
(bad)
(bad)
jmp
popf
mov
gs
cmc
mov
ss
pop
or
push
or
jne
sbb
(bad)
push
movs
mov
xlat
dec
(bad)
sbb
mov
and
fist
inc
adc
lock
sar
movs
mov
pop
and
add
cmp
(bad)
(bad)
(bad)
call
lds
scas
mov
adc
xor
mov
xchg
mov
cmp
mov
inc
sbb
jnp
push
sbb
mov
mov
push
cld
jmp
or
sub
push
push
mov
mov
in
shr
xchg
cwde
mov
sbb
(bad)
(bad)
jmp
aas
movs
inc
cmc
xchg
cld
jbe
pop
pop
movs
into
add
sar
bound
movs
and
mov
push
lods
inc
in
adc
push
lea
lea
mov
inc
(bad)
or
stc
xchg
sbb
clc
test
repnz
clc
call
inc
nop
pushf
xor
pop
sub
into
dec
inc
mov
mov
cmp
ins
psubsw
outs
out
hlt
mov
cld
call
ds
inc
and
ja
in
jl
jg
(bad)
mov
add
mov
xlat
imul
or
and
and
addr16
jle
dec
(bad)
(bad)
(bad)
jmp
jnp
jp
jnp
aas
or
mov
mov
xchg
sar
push
xchg
cmps
dec
jb
(bad)
(bad)
jmp
leave
xchg
xor
sub
nop
dec
sar
mov
repnz
fdecstp
add
add
ret
not
cmp
push
or
loopne
outs
sub
mov
inc
mov
test
sbb
or
cmps
outs
aam
cld
aaa
pop
push
retf
dec
ds
call
pop
mov
pop
jns
sbb
jno
cmp
aam
pop
out
(bad)
(bad)
call
xor
lock
daa
push
loopne
jae
arpl
jb
stos
push
pop
jl
push
ds
mov
add
loop
xor
popf
fsub
(bad)
(bad)
(bad)
inc
or
mov
mov
in
bound
mov
wrmsr
pop
in
es
add
loop
(bad)
(bad)
jmp
data16
aam
stc
mov
dec
cmp
aam
ror
xchg
pop
pop
ret
cmp
fwait
pop
in
clc
dec
dec
mov
ret
js
or
jg
imul
das
stos
jg
(bad)
push
outs
xor
repnz
jbe
in
les
adc
inc
mov
and
jmp
iret
jns
ror
in
and
inc
ins
(bad)
(bad)
(bad)
(bad)
jns
imul
cmps
clc
cmp
sar
mov
scas
xchg
or
jno
mov
add
cmp
inc
jp
ret
dec
cs
xlat
adc
jmp
(bad)
(bad)
jmp
mov
push
add
lock
ror
or
inc
or
cmps
dec
popa
mov
(bad)
stc
ret
pop
inc
call
dec
cli
jmp
cli
or
or
sub
js
add
(bad)
(bad)
jg
jns
retf
inc
xlat
fwait
rol
imul
fldz
and
ins
fsubr
int3
jmp
(bad)
mov
ficomp
sbb
or
add
clc
pusha
sub
mov
mov
(bad)
(bad)
dec
aaa
jbe
ins
out
movs
ficomp
pop
jns
jb
je
fisttp
std
jne
movs
inc
lods
(bad)
(bad)
(bad)
call
push
xor
cdq
or
nop
jmp
lods
(bad)
iret
push
inc
jnp
imul
out
cli
nop
int3
pop
xchg
push
inc
(bad)
stos
pop
arpl
imul
hlt
test
fisttp
imul
(bad)
push
movs
dec
int
mov
mov
jne
jle
leave
or
shr
sar
imul
(bad)
(bad)
(bad)
fisub
aaa
nop
push
cdq
adc
push
cwde
fld
push
push
push
jmp
sub
lock
sahf
movs
outs
sub
add
and
push
out
mov
movs
lods
push
fs
cmp
ss
sbb
xchg
or
push
dec
loopne
jmp
push
outs
push
add
dec
daa
push
mov
outs
xchg
stc
jle
dec
and
cdq
mov
addr16
pop
adc
aaa
mov
test
cld
(bad)
jmp
dec
sub
pop
repz
inc
stos
lea
mov
xor
sbb
into
mov
xor
add
out
cmp
mov
pop
shr
sub
(bad)
call
lahf
call
cmp
xchg
test
movs
ins
jg
cmp
out
mov
arpl
push
xor
(bad)
(bad)
dec
xor
ja
imul
out
call
cmp
jo
(bad)
(bad)
out
adc
mov
jno
fdivr
test
not
mov
icebp
xchg
dec
push
mov
scas
test
sahf
lds
xchg
aad
mov
mov
dec
add
cmc
dec
and
out
inc
out
(bad)
(bad)
(bad)
call
inc
loopne
bound
sar
in
jnp
lods
xor
xor
clc
sub
(bad)
(bad)
(bad)
push
xor
cmp
(bad)
xor
(bad)
jnp
int
and
in
or
inc
mov
dec
(bad)
jmp
test
mov
mov
in
sbb
jns
push
std
sar
or
mov
(bad)
inc
sub
rcr
or
mov
call
(bad)
(bad)
(bad)
jg
test
repz
cmc
mov
pop
cdq
pop
xchg
mov
pop
shl
push
test
inc
clc
jmp
ins
pop
cmp
sub
(bad)
(bad)
inc
cmp
mov
and
cmc
jl
pop
shl
pop
into
(bad)
jg
jg
shl
test
cmp
out
jp
test
jg
jo
jmp
jmp
iret
into
out
push
push
(bad)
(bad)
(bad)
inc
jmp
test
pop
imul
ror
mov
sub
in
add
jnp
out
jns
cmps
adc
cmp
pop
dec
(bad)
out
adc
outs
outs
add
fstp
fwait
and
(bad)
(bad)
jmp
(bad)
into
(bad)
adc
mov
jae
cdq
push
add
lods
dec
mov
mov
retf
pop
lahf
adc
aam
pop
neg
cli
cmp
xchg
sub
sub
add
dec
mov
dec
aas
or
xor
scas
sbb
aad
loopne
sub
in
addr16
mov
push
popa
fstp
or
std
(bad)
jmp
(bad)
ss
xchg
sub
mov
mov
call
lea
jmp
mov
retf
in
lds
pop
movs
in
push
push
cdq
sti
sub
jno
aaa
or
and
(bad)
(bad)
(bad)
(bad)
cmp
sbb
dec
aad
lods
shr
imul
inc
pop
jne
xchg
xlat
cli
retf
mov
pop
imul
(bad)
xor
push
sahf
scas
add
jecxz
fcmovnb
mov
inc
sbb
xchg
add
push
mov
jbe
(bad)
addr16
out
jg
(bad)
(bad)
call
mov
mov
repnz
leave
mov
out
mov
jg
xchg
scas
pop
dec
jg
(bad)
dec
sti
jg
jmp
push
xchg
pusha
or
stc
sbb
(bad)
(bad)
(bad)
inc
fmul
retf
fld
add
sahf
mov
lods
cmps
es
push
push
clc
push
and
(bad)
aad
dec
push
fcmovb
inc
and
adc
adc
mov
hlt
mov
dec
xchg
aam
loope
std
test
mov
ss
and
dec
add
fwait
and
adc
(bad)
nop
push
xchg
mov
(bad)
(bad)
jmp
lods
test
lods
rcl
adc
mov
mov
outs
pop
and
sub
mov
inc
inc
(bad)
(bad)
(bad)
jmp
adc
(bad)
dec
outs
push
sbb
inc
inc
mov
or
adc
leave
(bad)
stos
and
in
(bad)
(bad)
(bad)
(bad)
cmp
and
ja
sub
imul
stos
stos
cmps
cwde
mov
(bad)
(bad)
(bad)
(bad)
jp
jmp
dec
xchg
or
sti
cld
jne
or
sti
js
dec
into
xchg
retf
or
(bad)
(bad)
jmp
xor
icebp
jns
ins
retf
cmp
cli
fidiv
xchg
adc
jp
xchg
retf
(bad)
aaa
push
cld
(bad)
(bad)
dec
jne
call
stos
inc
mov
and
inc
bnd
lock
sbb
jbe
(bad)
jg
or
fidiv
outs
mov
sbb
stos
(bad)
(bad)
call
or
add
jo
jnp
daa
sahf
fisubr
(bad)
(bad)
(bad)
jmp
xchg
and
mov
xor
xor
mov
xchg
rcl
bound
retf
std
loop
frstor
(bad)
xor
pop
int
sbb
ror
lock
xchg
ret
jg
sahf
and
xchg
mov
jb
pop
je
popf
inc
push
jmp
push
popa
cs
into
not
stos
(bad)
(bad)
jmp
nop
leave
cdq
sub
dec
je
test
les
pop
movs
mov
ss
dec
jmp
cmp
movs
sbb
sbb
xor
push
pop
ficomp
ins
into
jmp
add
sbb
jecxz
ins
add
jge
push
mov
add
mov
mov
ret
outs
clc
(bad)
(bad)
jns
mov
ja
pop
or
repnz
inc
lods
loopne
stos
mov
jmp
(bad)
call
and
es
(bad)
(bad)
(bad)
(bad)
ja
mov
ins
loopne
rol
and
push
pop
fsub
mov
sbb
(bad)
call
pop
pop
push
imul
ficom
clc
ficomp
je
cli
cwde
(bad)
(bad)
(bad)
push
xor
or
mov
cli
cmp
mov
je
push
push
movs
(bad)
mov
nop
jbe
pop
dec
inc
pop
faddp
push
mov
mov
(bad)
pop
mov
(bad)
(bad)
(bad)
(bad)
fstp
and
xor
hlt
ret
fldpi
push
dec
jge
ret
cmp
jle
or
jmp
mov
push
sar
dec
shl
sub
outs
push
loope
je
test
cmp
or
neg
aas
sbb
sbb
add
(bad)
pop
dec
inc
cmps
add
pop
dec
ja
pop
test
lds
add
pop
shr
(bad)
sahf
imul
push
pop
cmp
gs
fld
lock
jecxz
clc
loop
mov
ja
or
add
adc
es
jmp
push
arpl
scas
xchg
outs
js
iret
jns
dec
(bad)
(bad)
push
sub
jle
call
repz
sbb
push
xor
int
bound
stos
(bad)
(bad)
(bad)
jmp
aaa
loope
mov
outs
or
lods
mov
enter
sti
mov
adc
je
scas
cs
clc
sub
and
(bad)
(bad)
(bad)
(bad)
jmp
dec
lds
sbb
xchg
mov
retf
call
or
dec
jmp
or
(bad)
(bad)
aas
xchg
add
fnsave
fidiv
(bad)
jmp
pop
dec
jmp
test
mov
mov
inc
mov
(bad)
(bad)
mov
ds
pop
lods
mov
ins
push
cwde
adc
xor
jp
and
neg
(bad)
jg
test
pop
mov
dec
adc
xor
and
or
(bad)
jmp
lods
adc
div
test
ret
mov
or
push
jne
data16
daa
add
je
jbe
retf
and
fild
retf
mov
or
adc
(bad)
pop
jl
bound
xor
test
push
jp
sub
adc
into
jecxz
nop
jno
mov
ret
(bad)
mov
bound
mov
mov
call
(bad)
mov
jnp
(bad)
in
stos
iret
fst
jmp
jmp
and
fiadd
bound
(bad)
(bad)
push
in
imul
sahf
repnz
or
xor
and
push
or
(bad)
(bad)
mov
xchg
outs
sub
dec
mov
dec
mov
add
sbb
inc
mov
scas
push
mov
cli
lods
dec
jae
mov
(bad)
(bad)
push
popf
inc
es
push
int3
jle
lods
push
fisttp
mov
(bad)
or
(bad)
out
(bad)
(bad)
(bad)
jmp
xor
in
dec
lods
pop
jp
or
fwait
xchg
aas
dec
cwde
xor
stos
cmps
mov
lds
(bad)
call
cs
fwait
aaa
fs
ins
mov
(bad)
inc
sbb
mov
cmps
icebp
add
mov
aaa
xchg
(bad)
dec
xor
(bad)
sti
arpl
xchg
jno
(bad)
(bad)
(bad)
dec
call
call
ins
or
mov
adc
and
push
(bad)
(bad)
(bad)
push
inc
dec
jmp
jo
mov
out
mov
fwait
jnp
add
adc
(bad)
(bad)
jmp
test
xor
(bad)
nop
das
cdq
fsub
lock
(bad)
cli
sar
hlt
(bad)
(bad)
mov
pop
cmc
scas
lahf
cmp
mov
xchg
pop
mov
mov
fmul
dec
push
fild
jo
test
(bad)
call
sbb
inc
mov
(bad)
push
inc
xor
(bad)
(bad)
(bad)
jp
lahf
sbb
push
xchg
stos
jbe
imul
mov
sub
mov
(bad)
(bad)
loope
iret
pop
movs
xchg
fisttp
xchg
pusha
in
pop
retf
push
test
jg
(bad)
mov
and
jnp
inc
sti
dec
loop
cli
pop
in
jb
not
or
jle
jmp
inc
inc
cmp
lahf
icebp
mov
mov
js
and
or
push
(bad)
(bad)
(bad)
inc
and
jns
pop
or
ja
mov
not
dec
sti
loope
mov
push
mov
add
xchg
add
and
mov
xchg
(bad)
(bad)
(bad)
jg
(bad)
daa
pop
std
sub
inc
or
fsub
jecxz
mov
rol
fstp
cmp
xor
popf
add
inc
and
aas
adc
inc
daa
push
dec
mov
repnz
adc
es
rol
int
fdivr
outs
jecxz
jl
cmps
in
mov
das
ja
cld
dec
sub
xor
xor
sbb
sar
pop
test
mov
scas
movs
lods
add
xor
mov
mov
call
cs
inc
mov
(bad)
and
pop
pusha
(bad)
(bad)
dec
retf
sbb
and
cmps
in
pop
fst
mov
cmp
cmp
lock
icebp
and
mov
push
dec
test
xchg
call
mov
js
mov
outs
sub
inc
push
pop
addr16
cmp
jge
scas
jns
nop
jmp
rol
loopne
mov
or
outs
call
call
cld
call
mov
outs
sbb
sub
xrelease
adc
loop
dec
aas
cld
not
cld
and
mov
(bad)
call
test
gs
jmp
pop
(bad)
and
jg
mov
stc
test
mov
(bad)
(bad)
(bad)
dec
xor
jbe
jnp
in
stos
scas
stc
and
dec
dec
popf
xchg
out
fisubr
push
add
repz
(bad)
(bad)
call
cmp
push
sub
push
cli
in
add
das
inc
cmps
mov
je
(bad)
cmps
push
pusha
retf
mov
(bad)
inc
push
je
inc
jmp
(bad)
aad
or
inc
or
js
loop
test
mov
adc
retf
lea
cmc
sub
lods
sub
cmp
sub
or
mov
jae
cmps
aaa
gs
mov
mov
ficom
inc
jbe
scas
inc
push
jnp
daa
sub
xchg
jnp
movs
inc
loopne
ja
pop
pop
lahf
(bad)
(bad)
dec
jb
cmp
movs
add
xchg
pop
jecxz
push
push
xlat
jl
sbb
cmc
sub
cmp
fld
(bad)
(bad)
(bad)
call
and
push
cmp
jns
ins
mov
pop
adc
pop
test
(bad)
(bad)
call
dec
push
pop
xor
(bad)
mov
in
and
ins
add
sbb
loope
dec
inc
xor
push
and
jg
pushf
xchg
js
out
retf
fwait
push
repnz
adc
clc
and
cmp
xchg
mov
mov
jmp
xchg
(bad)
call
es
add
ds
cmp
ss
aad
pop
(bad)
push
std
ds
sbb
imul
out
or
leave
or
(bad)
inc
jge
xchg
fbstp
pop
jmp
add
ret
add
dec
mov
retf
sti
pop
mov
mov
(bad)
ja
xchg
jle
outs
push
mov
call
mov
pusha
(bad)
(bad)
(bad)
(bad)
call
popf
pop
push
xor
cli
fiadd
dec
adc
mov
pushf
sahf
fwait
mov
xchg
jmp
cli
cmps
jecxz
lahf
test
mov
sub
ins
adc
push
xor
inc
mov
(bad)
jmp
sar
gs
sar
out
xchg
in
(bad)
jmp
add
jno
call
cmp
xor
mov
ins
loopne
(bad)
cmps
pusha
inc
mov
add
mov
sub
xor
sahf
(bad)
test
aas
imul
(bad)
inc
mov
fdivr
push
inc
dec
xlat
dec
push
retf
jmp
pop
aas
pop
sbb
jmp
sti
js
addr16
popa
into
fs
mov
cmc
retf
jne
push
mov
adc
sub
mov
dec
adc
fsubr
pushf
mov
(bad)
jg
jno
outs
inc
ss
sar
ret
sub
sub
jmp
call
push
pop
sbb
adc
cli
out
bound
cmps
scas
fdiv
movs
dec
push
xor
(bad)
(bad)
jg
(bad)
rcl
sti
in
stc
jo
pop
cmp
ficom
aaa
xor
sbb
call
(bad)
pop
std
sbb
lock
mov
cmc
or
mov
(bad)
(bad)
(bad)
aas
jmp
adc
push
adc
mov
sub
mov
pop
inc
jp
js
mov
test
fdivr
jmp
sbb
pop
mov
data16
mov
add
cli
scas
icebp
cmp
js
mov
mov
jmp
lds
add
cmp
das
cmp
rcl
arpl
cmc
sub
stos
ret
jns
(bad)
(bad)
(bad)
call
fcmovbe
ficom
inc
shl
loop
mov
sub
xchg
sub
out
fld
stos
mov
call
into
dec
in
fwait
ret
mov
xor
cwde
pop
(bad)
(bad)
(bad)
push
jl
inc
out
inc
mov
ins
ins
daa
jecxz
(bad)
mov
mov
movs
sbb
(bad)
(bad)
call
add
cmp
cdq
pop
push
out
push
add
fistp
out
movs
shl
psubsb
mov
dec
lods
mov
and
or
cmp
ins
cwde
pop
push
mov
(bad)
fld
fidiv
lods
and
ror
scas
(bad)
jmp
push
popa
xchg
sti
pushf
outs
fwait
xchg
sbb
test
cmp
pop
in
sub
(bad)
stos
outs
push
mov
adc
push
inc
retf
fbstp
cld
outs
clc
(bad)
mov
sub
xor
jle
mov
and
cmp
dec
fnsave
jmp
(bad)
and
xlat
int3
rcl
in
dec
jbe
in
nop
push
inc
inc
pop
jb
cs
(bad)
(bad)
(bad)
inc
lods
gs
jl
push
jno
jmp
mul
push
popf
cmp
mov
int
sbb
dec
shl
cmp
add
pop
dec
sbb
cmps
inc
mov
jle
jg
add
in
hlt
test
out
clc
(bad)
call
dec
and
fstp
and
mov
xchg
data16
push
test
(bad)
jmp
jne
pop
sub
test
push
inc
shl
mov
ins
lock
lods
jmp
shr
add
xor
add
cmp
adc
pushf
lock
pushf
test
jecxz
outs
nop
add
mov
inc
mov
call
dec
mov
outs
ret
sbb
call
sbb
cmps
in
icebp
dec
or
data16
pop
jl
jg
(bad)
jg
jecxz
jne
mov
clc
cmp
add
js
jecxz
(bad)
(bad)
push
sub
out
call
sbb
les
int
(bad)
jg
sub
outs
sbb
cdq
fwait
mov
mov
jnp
rcl
(bad)
push
sub
loopne
xor
das
sar
adc
ficom
jae
pop
in
mov
pop
push
jl
mov
mov
(bad)
(bad)
jmp
sub
sahf
pop
pop
aad
(bad)
in
mov
pop
mov
cmp
cmps
sub
pop
(bad)
(bad)
(bad)
dec
xchg
sbb
jp
mov
mov
or
fnstsw
dec
(bad)
(bad)
jl
xchg
or
movs
es
or
mov
cwde
xor
(bad)
dec
fimul
enter
dec
or
xchg
dec
leave
imul
mov
xchg
and
mov
inc
and
(bad)
mov
cmp
into
es
inc
cld
push
and
stos
int
and
(bad)
(bad)
(bad)
stc
mov
rol
mov
int
xor
lea
push
push
pop
xor
mov
std
(bad)
jmp
pop
pusha
mov
retf
adc
ret
push
mov
(bad)
push
mov
xor
sub
in
xchg
or
pushf
das
retf
(bad)
(bad)
dec
jmp
pop
pushf
or
jmp
add
mov
hlt
cwde
in
adc
adc
xchg
dec
mov
(bad)
jg
repz
mov
hlt
or
mov
scas
clc
(bad)
inc
push
shl
(bad)
push
cmps
fwait
pop
adc
div
clc
mov
(bad)
(bad)
call
mov
mov
addr16
pop
xchg
(bad)
outs
pop
hlt
mov
mov
(bad)
dec
js
jae
mov
jnp
into
add
cmp
(bad)
dec
sar
add
or
neg
pop
mov
mov
(bad)
jmp
pop
mov
and
in
enter
jg
xor
mov
(bad)
(bad)
(bad)
jmp
push
sti
call
adc
hlt
xchg
fild
int3
aaa
add
int3
cmc
cli
lock
mov
cmps
daa
dec
inc
mov
pop
adc
(bad)
(bad)
(bad)
call
imul
inc
cmp
mov
in
ins
push
je
jmp
(bad)
jne
push
cld
or
dec
xchg
sti
(bad)
jbe
xchg
xor
add
cmp
sti
inc
jne
(bad)
call
or
cmp
mov
outs
(bad)
(bad)
(bad)
(bad)
dec
mov
out
mul
addr16
and
das
ret
xlat
jmp
push
pop
mov
(bad)
(bad)
call
rol
cmps
call
(bad)
fsub
test
dec
push
cli
fbstp
push
mov
loope
cld
dec
jb
femms
and
mov
(bad)
xchg
ins
or
mov
aam
in
push
lock
cmp
je
in
stos
(bad)
push
push
inc
jg
push
in
pop
mov
cmp
inc
aas
jnp
std
push
in
xor
jge
xor
mov
jnp
sbb
nop
cwde
js
stc
nop
cmp
xor
push
jmp
jnp
(bad)
(bad)
call
sub
nop
bound
sub
jne
mov
mov
fimul
dec
cmp
jg
mov
(bad)
pushf
sub
xchg
je
fs
movs
cld
(bad)
(bad)
mov
cmp
imul
ret
cmp
fisub
hlt
jno
cmps
addr16
data16
(bad)
call
les
daa
rol
fcomp
(bad)
xchg
cmps
and
mov
adc
xchg
call
or
(bad)
push
push
xor
xchg
pop
pushf
mov
stos
fnstenv
call
cmp
sub
xor
outs
push
faddp
sub
xor
mov
out
movs
lds
push
adc
pop
inc
sbb
outs
outs
clc
sti
shl
mov
fld
(bad)
(bad)
(bad)
jg
in
mov
pop
and
test
push
inc
xor
(bad)
(bad)
(bad)
dec
iret
xor
int
jne
out
jmp
cmc
out
xchg
scas
dec
xchg
stos
jo
pop
fs
(bad)
(bad)
(bad)
(bad)
in
jecxz
sar
cwde
push
jne
pop
enter
or
xchg
push
es
add
std
push
mov
sbb
mov
rcl
add
fnsave
fwait
clc
mov
(bad)
jae
(bad)
cld
(bad)
(bad)
jg
pop
cld
sub
or
and
daa
or
ins
ins
sbb
xchg
inc
adc
fstp
jbe
or
cli
jmp
aaa
inc
loopne
in
dec
jne
sahf
fmul
rcr
inc
pop
xchg
xchg
or
mov
mov
cmp
or
(bad)
jg
xchg
push
and
imul
push
(bad)
jecxz
hlt
lahf
sbb
push
mov
mov
inc
(bad)
and
mov
inc
(bad)
(bad)
(bad)
mov
xlat
loopne
xchg
out
pop
pop
inc
mov
(bad)
(bad)
addr16
lods
add
(bad)
(bad)
(bad)
jmp
xchg
loopne
enter
es
and
aam
ins
outs
jne
cmps
sbb
pop
clc
(bad)
(bad)
push
push
or
pop
inc
out
push
sbb
dec
cs
lahf
mov
lods
aad
scas
sbb
ja
(bad)
jmp
ror
shl
lds
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
inc
outs
ret
repz
xchg
jmp
gs
inc
ds
xchg
rcr
cmp
clc
(bad)
jmp
mov
movs
enter
xlat
pmullw
outs
(bad)
(bad)
inc
sub
mov
push
cmp
mov
xchg
adc
movs
push
out
ret
(bad)
(bad)
inc
imul
and
push
addr16
dec
mov
jo
les
inc
cmps
cmp
ins
int3
dec
push
pop
push
repnz
(bad)
(bad)
call
mov
inc
bound
jmp
hlt
mov
push
(bad)
(bad)
(bad)
push
mov
dec
adc
cld
mov
jle
(bad)
lahf
stc
cmp
sub
ins
cld
dec
xor
fld
push
(bad)
jg
push
mov
iret
mov
fmul
jle
and
(bad)
(bad)
(bad)
call
mov
pop
imul
mov
jmp
mov
mov
add
(bad)
in
dec
jb
sbb
imul
ins
xchg
sbb
aam
xchg
lea
sahf
int
cmp
(bad)
mov
sbb
cdq
fadd
push
or
(bad)
jmp
xchg
adc
inc
push
arpl
mov
mov
sbb
mov
add
xchg
(bad)
bound
sub
daa
sbb
lock
(bad)
jl
pop
mov
out
scas
dec
pop
and
mov
hlt
jns
call
jg
inc
lds
rcl
inc
in
mov
lods
in
mov
pusha
xchg
icebp
mov
mov
xor
mov
std
sbb
std
outs
sbb
mov
(bad)
jmp
push
cdq
dec
repnz
es
aam
and
dec
pop
mov
dec
je
mov
lock
sub
mov
pop
add
mov
cs
add
sub
mov
xor
imul
sub
lods
add
inc
gs
mov
inc
adc
sbb
(bad)
(bad)
(bad)
in
retf
out
or
nop
adc
ror
and
mov
mov
pop
pop
xchg
pop
cmps
mov
xor
mov
(bad)
(bad)
(bad)
inc
popf
popa
daa
jmp
shl
adc
sub
mov
xchg
icebp
mov
mov
call
sbb
or
adc
or
or
ins
scas
sahf
je
repnz
sub
jp
(bad)
jle
ja
fst
(bad)
push
out
push
sub
inc
mov
hlt
cmc
shl
fisttp
fwait
and
pop
addr16
in
(bad)
jmp
cli
mov
adc
data16
mov
sbb
ins
mov
xchg
adc
cmp
pop
sbb
lahf
add
popf
cmps
loop
retf
mov
rcr
outs
stc
dec
xor
mov
pop
xor
loop
dec
cs
arpl
fistp
mov
addr16
imul
jp
pop
icebp
cmp
sbb
rcr
sbb
jmp
leave
ret
pop
jecxz
(bad)
inc
mov
and
test
and
inc
fld
push
rcl
add
mov
mov
mov
scas
in
xchg
mov
idiv
inc
in
retf
fadd
pusha
fist
and
push
js
pop
(bad)
(bad)
inc
sub
ds
(bad)
int
cmp
mov
movs
add
pop
jbe
mov
add
jmp
sahf
push
add
in
push
(bad)
(bad)
js
push
fwait
xchg
jbe
shl
push
bound
xlat
xor
das
xchg
sub
mov
pop
(bad)
push
jmp
push
cli
retf
repnz
add
add
adc
je
(bad)
(bad)
(bad)
fist
popa
xchg
movs
sub
adc
fist
cmps
xchg
loope
cmc
mov
pop
test
jl
(bad)
(bad)
(bad)
(bad)
clc
jnp
cmp
jge
or
mov
retf
cmp
scas
or
cld
inc
jg
(bad)
dec
xchg
dec
pop
pop
div
test
xlat
out
or
cdq
add
retf
ficom
push
call
and
adc
xchg
mov
(bad)
mov
stos
(bad)
(bad)
(bad)
inc
mov
sbb
mov
push
aas
neg
pop
adc
call
and
(bad)
(bad)
call
jp
push
icebp
sbb
popf
imul
dec
jle
jae
sub
xchg
sti
and
and
(bad)
(bad)
(bad)
push
xchg
fld
in
cmp
rcl
lock
add
pop
mov
(bad)
out
adc
jo
(bad)
(bad)
(bad)
dec
call
mov
in
aam
stc
push
push
loop
jbe
les
aas
arpl
(bad)
sbb
(bad)
(bad)
inc
sub
cmp
push
inc
mov
dec
clc
inc
xchg
leave
pop
aam
mov
(bad)
call
stc
push
sbb
jge
lock
enter
in
mov
dec
inc
pop
dec
dec
test
push
mov
(bad)
dec
push
(bad)
in
inc
call
dec
inc
imul
lds
pop
pop
js
pop
not
rcr
pusha
popf
inc
cwde
rcr
mov
jb
(bad)
(bad)
(bad)
(bad)
mov
pop
outs
jae
add
cwde
sahf
aam
xchg
ins
push
jecxz
cmc
sub
pusha
adc
mov
in
mov
push
pop
(bad)
push
je
dec
bswap
loope
adc
mov
clc
mov
(bad)
(bad)
cmp
ds
(bad)
xchg
xchg
retf
push
ins
pusha
pushf
xchg
dec
push
and
and
call
loopne
ins
xor
mov
add
inc
lods
(bad)
mov
xor
(bad)
(bad)
push
push
int3
push
js
mov
cmps
push
cmp
jne
aaa
in
dec
pop
repz
retf
push
jge
ret
ins
xor
dec
pushf
fadd
mov
call
(bad)
(bad)
fild
sub
xchg
popa
mov
cmps
pop
jnp
jnp
movs
push
hlt
fdivp
(bad)
(bad)
(bad)
(bad)
inc
adc
mov
mov
push
loop
imul
xor
or
loop
push
push
sbb
imul
mov
out
jg
push
std
imul
repnz
pop
repnz
fdivr
pop
jmp
mov
aam
mov
call
jmp
push
cli
or
xor
cmps
push
icebp
jne
jecxz
mov
leave
xchg
mov
retf
or
stos
ins
mov
xor
test
(bad)
jg
mov
shl
push
js
and
jmp
rol
ja
mov
aas
xchg
(bad)
inc
dec
jl
bound
jne
jge
inc
clc
(bad)
call
loopne
mov
push
mov
out
push
in
jecxz
sbb
fidivr
(bad)
stos
out
loopne
cmps
cld
fsubr
loopne
inc
(bad)
dec
add
adc
jae
sbb
xchg
hlt
popf
jb
jmp
xchg
sub
(bad)
call
pop
pop
lahf
sub
adc
clc
cli
loop
and
(bad)
xlat
sub
push
(bad)
dec
iret
dec
cmp
cdq
fiadd
lea
push
adc
aas
rol
mov
cmp
mov
jae
inc
jo
dec
inc
mov
add
je
call
(bad)
mov
fst
test
or
fwait
(bad)
out
xor
inc
movs
cmp
out
loope
arpl
xor
cmps
(bad)
mov
(bad)
(bad)
clc
push
sar
fldenv
cmp
inc
cmp
or
nop
xor
inc
dec
xor
xchg
xchg
outs
hlt
mov
(bad)
(bad)
jg
movs
leave
jmp
jg
inc
rcl
movs
adc
jecxz
add
dec
(bad)
jg
(bad)
mov
xor
cmp
mov
mov
sbb
out
dec
cwde
jmp
mov
cmp
xchg
cmp
mov
(bad)
(bad)
jmp
jae
inc
leave
xchg
into
push
xchg
fdivr
mov
test
xchg
shr
das
push
into
dec
xor
jecxz
fs
call
test
clc
adc
mov
idiv
push
cwde
adc
and
fld
(bad)
(bad)
(bad)
jmp
push
xchg
mov
inc
in
lds
inc
dec
jb
mov
jbe
mov
(bad)
inc
imul
dec
sub
outs
jbe
pop
repz
mov
in
ret
xor
mov
std
jmp
iret
xchg
fimul
xchg
(bad)
fcmovu
sahf
jge
inc
clc
mov
mov
clc
test
and
iret
cmp
push
and
scas
sub
outs
movs
popf
dec
pop
pop
jo
bound
or
(bad)
(bad)
inc
xor
xchg
mov
sbb
ins
and
daa
mov
mov
(bad)
(bad)
(bad)
cmp
inc
mov
iret
icebp
movs
cmp
xor
and
cli
imul
outs
mov
aad
adc
mov
(bad)
(bad)
jmp
jp
repz
adc
mov
pop
js
pop
ds
in
dec
jo
pop
cmc
hlt
push
inc
or
fild
jmp
mov
(bad)
pop
fcos
(bad)
(bad)
inc
mov
jae
lahf
dec
aaa
das
dec
lods
dec
pusha
push
jne
and
and
(bad)
(bad)
(bad)
jmp
and
test
repz
loop
jno
ins
jno
sub
out
inc
mov
inc
arpl
add
(bad)
(bad)
inc
jmp
dec
imul
sti
inc
and
push
icebp
mov
out
(bad)
(bad)
(bad)
jmp
inc
fs
test
mov
cmps
mov
cmp
sub
jmp
inc
jmp
mov
hlt
or
xchg
ss
adc
cmp
(bad)
(bad)
push
jae
lods
or
jae
pop
les
mov
cld
nop
div
call
xchg
lea
jecxz
ss
sti
hlt
vfmsub231ss
icebp
cmps
adc
fcomip
sub
test
or
sub
rcr
inc
inc
xchg
(bad)
imul
(bad)
(bad)
(bad)
inc
or
jb
pop
test
push
fwait
test
rol
push
jno
xor
push
jae
loop
pop
shl
inc
call
pop
es
(bad)
(bad)
(bad)
(bad)
mov
dec
cmp
gs
push
shl
in
aas
xor
popa
outs
rcr
(bad)
jg
sar
mov
cld
jle
out
fxam
fs
mov
outs
neg
mov
(bad)
(bad)
(bad)
jmp
jb
xor
les
dec
sbb
mov
mov
jb
fisttp
dec
test
hlt
loopne
inc
push
push
inc
push
xchg
das
cli
fcomip
xchg
scas
add
and
mov
jae
test
lods
test
(bad)
inc
pushf
push
fld
push
fistp
test
or
lods
adc
inc
pop
clc
sub
pusha
push
mov
clc
sbb
fdivr
add
ins
push
inc
out
xchg
fwait
xor
lahf
mov
mov
imul
js
jmp
in
adc
sub
xchg
lods
inc
inc
and
and
push
and
mov
cmps
sti
xchg
sahf
cld
adc
pop
(bad)
int3
pop
xchg
je
push
rol
jecxz
mov
rol
into
dec
jl
xchg
and
test
sub
dec
add
and
adc
dec
or
jge
(bad)
(bad)
jmp
enter
jns
dec
mov
js
iret
js
xchg
cmp
loop
add
shl
cmp
dec
test
jl
ret
(bad)
mov
cmp
push
into
cmc
aam
mov
int
or
lods
pushf
xchg
mov
call
push
fisubr
mov
pop
push
sti
out
and
fwait
test
mov
lods
fadd
push
in
(bad)
push
inc
ds
xlat
retf
pop
adc
sbb
dec
add
cld
cmp
out
mov
jle
inc
cmp
retf
loop
push
gs
or
or
(bad)
(bad)
(bad)
push
inc
loope
push
add
push
pop
movs
jg
xchg
xor
fs
pop
(bad)
pop
add
mov
fs
(bad)
inc
int
pop
in
clc
in
push
push
jle
data16
test
mov
adc
push
sbb
inc
in
xor
sti
(bad)
rol
(bad)
jg
sub
xchg
push
fld
fwait
not
test
xchg
push
jl
aad
(bad)
sbb
mov
xchg
jbe
mov
(bad)
dec
addr16
push
mov
sub
fcomp
fcom
push
mov
fldenv
inc
jle
sub
std
mov
adc
mov
adc
mov
mov
(bad)
(bad)
mov
push
and
rcl
inc
std
pop
gs
xchg
mov
test
xor
js
stos
sub
xchg
pop
lock
(bad)
jmp
jmp
jo
push
jno
popf
movs
jp
lahf
(bad)
dec
inc
(bad)
call
(bad)
inc
inc
imul
adc
leave
lods
test
(bad)
(bad)
dec
mov
cld
pop
push
adc
pop
adc
and
aaa
js
retf
and
aaa
push
push
jno
(bad)
(bad)
jmp
mov
mov
push
lock
loop
xchg
mov
mov
jnp
mov
inc
inc
fwait
sahf
and
int
and
inc
xchg
adc
(bad)
jg
ss
and
(bad)
call
push
jbe
jp
das
fsubr
inc
sub
(bad)
(bad)
fild
ret
or
cmp
in
je
sbb
(bad)
(bad)
call
add
xor
sbb
dec
sti
imul
loop
test
neg
sar
sub
clc
jmp
(bad)
loopne
xor
mov
mov
(bad)
inc
pop
cld
cmp
xchg
and
xchg
xor
xor
sub
outs
popf
xchg
int
fadd
push
(bad)
(bad)
inc
add
xor
cld
cmp
xor
scas
ror
pop
adc
xchg
ficom
inc
cdq
dec
xchg
push
lds
push
out
test
iret
or
fldl2t
clc
lods
xor
stc
retf
adc
aaa
(bad)
(bad)
(bad)
(bad)
jmp
fild
jo
cmp
xchg
enter
cdq
ret
ret
in
(bad)
(bad)
xor
into
xchg
stos
add
xchg
ins
pop
dec
add
mov
shr
gs
mov
xchg
mov
push
dec
adc
xor
icebp
jae
adc
mov
mov
sub
mov
jle
add
jbe
mov
stc
test
(bad)
(bad)
call
leave
call
jns
cwde
mov
leave
pop
and
push
jg
bound
add
sbb
sbb
leave
add
mov
cmp
dec
jo
call
jbe
(bad)
fild
(bad)
xlat
mov
inc
jmp
imul
(bad)
lods
call
jmp
dec
sub
shl
adc
and
cmc
shl
sub
dec
cdq
scas
or
adc
test
xchg
lea
xchg
mov
movs
xlat
call
dec
cli
jae
in
idiv
add
inc
inc
aam
(bad)
inc
lock
(bad)
add
add
ss
jmp
(bad)
repnz
sub
pop
addr16
push
adc
xchg
mov
pop
ins
jecxz
add
pop
por
(bad)
cwde
nop
push
pop
xor
leave
hlt
lahf
in
pop
xchg
ja
adc
ss
and
(bad)
call
sub
sub
cmp
arpl
mov
ror
cmp
mov
aaa
cld
(bad)
jmp
test
ror
cmp
mov
retf
push
retf
and
xor
(bad)
(bad)
call
add
retf
and
adc
popf
pop
xor
push
push
ins
xchg
mov
xchg
sbb
nop
mov
and
jnp
inc
mov
ins
fdiv
jg
mov
dec
outs
ficom
push
adc
dec
fwait
pop
jle
jbe
ins
and
cmps
lods
sbb
jmp
enter
loopne
sbb
ins
jecxz
jmp
mov
mov
sub
(bad)
(bad)
dec
pop
dec
inc
es
iret
or
addr16
inc
jle
les
dec
push
aam
cmp
sub
xchg
(bad)
(bad)
(bad)
call
nop
xchg
pop
push
and
scas
sbb
add
xor
jnp
jl
jbe
(bad)
(bad)
jmp
and
enter
pop
repz
jbe
mov
sbb
loop
jmp
jg
sub
sahf
pop
imul
in
test
dec
mov
fbstp
call
scas
dec
ins
in
dec
jne
xor
add
xchg
popf
sbb
mov
(bad)
jmp
es
mov
fnstcw
cmc
and
adc
loop
lock
(bad)
jmp
adc
cmps
repnz
shl
test
sub
sub
add
or
mov
mov
or
mov
js
fsubr
mov
lock
(bad)
(bad)
mov
adc
jle
icebp
pop
sbb
xchg
cmp
pop
iret
pmuludq
sub
(bad)
(bad)
(bad)
fistp
int3
jle
cwde
test
push
movs
cmps
aad
mov
push
sbb
fucom
or
xor
xor
(bad)
(bad)
push
imul
cmp
sbb
(bad)
adc
out
pop
adc
pop
add
jge
mov
mov
loopne
fstp
xlat
retf
push
ror
inc
jg
std
cli
hlt
pop
cmp
(bad)
(bad)
jmp
ss
inc
cwde
dec
add
add
mov
xchg
lods
mov
stc
(bad)
(bad)
(bad)
call
xchg
popf
dec
pop
loope
outs
mov
or
jbe
stos
inc
(bad)
in
out
lds
jg
(bad)
push
jmp
cs
fild
nop
popf
add
jp
push
sub
(bad)
jmp
jne
cwde
loop
sbb
shl
or
scas
(bad)
(bad)
(bad)
dec
stc
int
sbb
or
pushf
push
shl
mov
adc
in
(bad)
cmp
sbb
stos
push
enter
jmp
xchg
adc
cmps
es
retf
mov
mov
retf
xchg
dec
ss
(bad)
push
setg
sub
mov
mov
gs
pop
cdq
pusha
(bad)
(bad)
mov
inc
sub
lock
xchg
jg
mov
sbb
out
pop
cmp
and
pushf
or
mov
out
cli
(bad)
push
rol
xor
leave
lods
and
add
into
gs
aaa
mov
mov
arpl
test
push
pushf
sti
jle
dec
imul
or
xchg
pop
add
rcr
sbb
fild
mov
dec
pop
(bad)
fmul
mov
dec
pop
cs
push
cdq
pop
mul
gs
add
movs
inc
dec
clc
xor
fmul
sbb
repnz
int
push
cli
daa
and
and
das
sub
(bad)
adc
ss
outs
jg
mov
loop
cmp
mov
dec
cmp
(bad)
(bad)
(bad)
jmp
shl
or
outs
xchg
mov
repnz
mov
(bad)
cmp
jnp
sbb
cmp
cmps
or
int
shl
and
xchg
stc
fwait
loop
push
(bad)
jmp
or
sar
call
or
or
add
nop
jns
xor
aad
cmp
xor
sbb
imul
(bad)
out
in
xchg
mov
mov
arpl
push
test
jae
add
loop
push
pop
lea
sahf
xchg
ins
adc
pop
cmp
inc
das
cli
(bad)
out
scas
cmp
push
xchg
retf
sub
aad
push
xchg
push
(bad)
cmp
or
(bad)
sbb
add
xchg
or
clc
(bad)
(bad)
jg
fadd
jp
mov
jno
daa
add
jno
lock
dec
sub
mov
jmp
rol
(bad)
cmp
daa
xchg
mov
dec
rol
fwait
sbb
(bad)
(bad)
call
dec
ret
dec
ins
scas
xchg
mov
jmp
shr
lods
into
in
jmp
icebp
inc
dec
cmp
(bad)
(bad)
dec
test
sub
fimul
and
gs
add
(bad)
(bad)
(bad)
ds
scas
lahf
pop
push
xchg
pop
pop
clc
(bad)
test
cmp
and
ss
retf
(bad)
push
ds
repz
retf
sahf
add
mov
dec
out
imul
stc
mov
add
outs
in
add
jg
pop
xchg
loope
push
xlat
ffree
(bad)
(bad)
jmp
add
xor
and
in
xor
pop
leave
out
fimul
int
mov
jp
ja
adc
outs
push
test
ret
pop
rcr
add
inc
fiadd
add
mov
shl
aam
mov
call
inc
push
sub
(bad)
(bad)
call
xchg
leave
adc
ret
test
xor
add
js
adc
push
add
(bad)
call
(bad)
pop
and
adc
push
sahf
add
ja
pop
(bad)
mov
ss
hlt
pop
aaa
pop
lods
pop
mov
stc
dec
mov
lods
pop
push
shr
inc
cmp
mov
pushf
sahf
icebp
jns
pop
inc
inc
mov
mov
jg
sub
sub
add
leave
fdiv
bound
mov
outs
mov
out
jmp
sub
(bad)
(bad)
jg
jns
outs
int3
push
push
dec
ret
mov
and
mov
dec
ja
stc
out
ret
pop
(bad)
(bad)
(bad)
dec
adc
popf
test
lods
popa
in
cld
sub
mov
jb
inc
int
(bad)
jb
test
aaa
icebp
call
or
inc
nop
mov
(bad)
aas
inc
test
test
clc
dec
stc
retf
jg
test
add
stos
jb
mov
call
and
aas
add
push
out
and
mov
sar
(bad)
(bad)
fild
stos
loop
xor
mov
push
in
add
mov
popa
imul
jae
jne
mov
mov
jns
sbb
xchg
(bad)
call
and
jecxz
sub
aaa
jecxz
xor
rcr
cmc
das
lahf
cmp
pop
leave
(bad)
mov
jmp
and
mov
xchg
not
test
sbb
lods
dec
ret
mov
enter
jns
(bad)
pop
nop
addr16
(bad)
(bad)
call
pop
dec
ficomp
jns
pop
dec
(bad)
push
mov
xor
lods
xor
das
aad
jmp
aas
and
int
jmp
cmp
adc
jge
(bad)
stc
cli
test
push
(bad)
(bad)
(bad)
inc
retf
jle
mov
cmp
or
ja
cmp
pop
pop
iret
ins
rol
xlat
cmp
std
(bad)
inc
push
movs
pop
inc
jecxz
sub
jno
jecxz
clc
sub
dec
(bad)
mov
fisubr
xchg
stos
in
dec
mov
push
or
sahf
cmp
jbe
adc
(bad)
(bad)
call
stos
jg
or
jne
hlt
les
and
stos
lahf
jp
addr16
icebp
int3
add
(bad)
(bad)
mov
mov
adc
mov
or
sbb
cmp
js
das
push
or
pop
add
cdq
cli
and
mov
jmp
test
dec
pop
into
imul
sbb
cmc
xchg
lahf
or
pop
ret
inc
cmp
loop
pusha
inc
cld
call
hlt
cld
cmp
sar
mov
(bad)
jg
and
jae
loope
test
ficom
xor
and
lods
dec
iret
lahf
adc
inc
push
movs
xor
ret
inc
repnz
mov
sar
jp
and
pusha
add
je
or
clc
mov
(bad)
jbe
leave
sbb
xchg
cmp
inc
sbb
(bad)
jmp
cmps
ror
add
or
je
aaa
xchg
lea
mov
jmp
mov
fwait
(bad)
xchg
dec
add
call
movs
mov
test
sub
(bad)
(bad)
dec
fucom
fld
mov
inc
rcr
mov
pop
mov
int3
sub
mov
(bad)
(bad)
push
fbstp
mov
pop
pop
adc
dec
and
mov
pop
push
pop
jle
loope
cmc
mov
call
(bad)
ds
clc
inc
mov
setbe
es
mov
xlat
fsubr
add
(bad)
(bad)
jmp
stos
test
xchg
push
push
rcl
es
pop
cmp
iret
push
and
rcr
(bad)
push
push
cdq
cmp
mov
adc
in
int
je
(bad)
les
(bad)
(bad)
(bad)
inc
fdivrp
dec
repnz
push
scas
or
push
aas
sbb
sbb
es
aam
add
jmp
jmp
loop
push
and
and
cmps
(bad)
push
(bad)
add
sub
pop
and
xchg
jno
(bad)
fldenv
in
xchg
(bad)
(bad)
(bad)
jmp
lods
mov
in
sub
mov
push
retf
(bad)
mov
popa
push
scas
push
enter
add
mov
mov
jp
sti
and
test
push
push
std
call
add
pop
sbb
popa
ss
or
cld
mov
(bad)
(bad)
inc
pop
mov
icebp
lahf
std
jmp
xchg
mov
pop
fnstcw
cmp
sub
lods
sbb
leave
scas
retf
mov
bound
std
icebp
mov
movs
sbb
sbb
xor
ficom
bound
fwait
jl
xchg
movs
mov
call
cvtps2pd
mov
adc
fsubr
push
js
mov
or
pop
lock
(bad)
cmp
pop
and
sub
bound
push
push
mov
retf
popw
pushf
(bad)
(bad)
(bad)
call
je
loopne
pop
ret
and
jecxz
mov
repz
aad
ret
mov
into
fistp
in
repnz
cmp
mov
push
push
sbb
add
cmp
ins
stos
popf
xor
dec
sub
and
inc
jnp
iret
or
push
mov
add
add
pop
pmaxub
jo
fidivr
sbb
add
push
pslld
in
pop
or
adc
or
cli
adc
push
mov
adc
mov
jo
jp
dec
shl
xchg
or
and
adc
(bad)
inc
cld
and
cmc
das
dec
pushf
push
dec
stos
dec
lods
sub
stc
and
add
inc
imul
add
xor
or
aad
mov
(bad)
call
push
push
cld
imul
or
pop
mov
push
(bad)
(bad)
call
adc
movs
xor
mov
arpl
pop
jne
loopne
jbe
fist
jmp
popa
test
or
cmp
jp
and
xor
or
sbb
hlt
jmp
sub
ja
lods
jmp
jnp
mov
daa
(bad)
push
(bad)
(bad)
(bad)
inc
and
inc
movs
outs
cmp
in
and
hlt
xor
sbb
mov
cwde
jp
movs
cmp
(bad)
(bad)
inc
push
sti
iret
data16
aad
xlat
jge
sbb
mov
icebp
inc
repz
inc
aas
cs
repz
(bad)
fbstp
inc
and
lds
pop
jecxz
imul
jnp
pop
in
call
push
cld
pusha
jge
add
out
ss
push
scas
or
xlat
mov
sar
(bad)
jmp
sub
add
push
push
sub
jge
out
sub
aaa
cmp
inc
adc
gs
lods
inc
sub
(bad)
(bad)
call
fldcw
addr16
adc
or
add
dec
push
adc
pushf
mov
test
(bad)
(bad)
(bad)
cmp
dec
out
mov
mov
xchg
jnp
sbb
out
mov
fucom
pop
in
fcomp
pop
out
push
ret
out
sub
sub
or
or
fbld
jmp
inc
and
cwde
and
out
pop
xchg
movs
dec
xor
call
stc
add
jmp
dec
mov
in
jge
or
sbb
jbe
aad
inc
call
mov
mov
cmp
add
retf
out
stos
push
dec
sti
dec
das
scas
jmp
mov
(bad)
in
add
push
shr
enter
shl
sub
ficomp
and
add
or
jae
outs
cmp
cmp
pop
inc
ds
ins
fidivr
mov
rol
cmc
mov
mov
lods
pop
mov
outs
jno
jle
(bad)
(bad)
push
pop
pop
cmc
lea
or
in
xlat
inc
mov
pop
movs
scas
fbstp
in
sub
hlt
xchg
(bad)
(bad)
(bad)
(bad)
fcmovb
aaa
adc
xor
in
add
jnp
jbe
or
shl
sbb
aas
jmp
lahf
pop
add
inc
mov
dec
dec
dec
inc
xchg
call
aam
xor
call
cmc
cwde
(bad)
(bad)
(bad)
call
cmp
jle
mov
clc
mul
pop
sbb
iret
cmc
test
pusha
imul
icebp
call
fsubrp
xchg
pop
pop
xchg
or
xor
jbe
loope
(bad)
(bad)
call
cs
movs
ds
adc
ins
push
add
and
arpl
repz
xchg
aas
cld
sub
push
mov
hlt
and
fwait
add
cmc
lods
retf
(bad)
(bad)
dec
xchg
ss
dec
fwait
pusha
das
popa
lds
scas
add
pop
(bad)
cmp
jl
repz
sub
mov
jo
sbb
in
mov
mov
lds
cmp
(bad)
mov
data16
lods
in
arpl
xor
loope
pop
ret
inc
xor
pop
sti
ret
sub
shl
(bad)
(bad)
call
ja
jmp
pop
cld
cdq
mov
(bad)
cmp
or
push
xor
(bad)
(bad)
(bad)
dec
mov
sbb
add
cmp
pop
mov
leave
pusha
push
rcr
movs
sub
test
xor
jmp
adc
cmp
xchg
retf
fstp
(bad)
(bad)
(bad)
(bad)
jmp
push
mov
inc
adc
adc
or
cld
pop
(bad)
push
ins
loop
pop
xor
mov
(bad)
(bad)
(bad)
inc
imul
inc
jb
mov
jno
add
push
push
sub
mov
(bad)
(bad)
(bad)
jmp
nop
retf
cmps
sub
mov
inc
lock
mov
xchg
xchg
das
lea
retf
(bad)
(bad)
cli
fisubr
mov
leave
aaa
cmp
xchg
mov
xor
mov
hlt
sbb
in
inc
xlat
es
cmp
(bad)
push
cmp
mov
mov
hlt
out
jge
sbb
repz
push
adc
xchg
jmp
mov
cld
dec
mov
(bad)
(bad)
ficom
dec
dec
lds
out
leave
das
fdivr
es
loop
movs
(bad)
adc
(bad)
jmp
test
cmps
test
das
ficom
loop
sar
push
dec
pop
and
pop
jge
or
dec
xor
leave
fwait
ror
aam
loopne
inc
ss
and
jb
ror
mov
scas
pop
fidiv
xor
das
cs
cld
mov
nop
sti
lahf
arpl
jge
sub
xchg
jns
and
sub
popf
ja
nop
jle
(bad)
(bad)
(bad)
mov
sub
cmp
pop
or
es
lds
dec
(bad)
push
xlat
retf
push
or
pop
push
retf
fist
pop
stc
rcl
(bad)
(bad)
(bad)
dec
and
fist
sub
stos
jle
xor
ss
test
ficomp
(bad)
jmp
xor
iret
mov
pusha
test
pop
lock
cmp
retf
scas
sub
je
test
pop
jo
push
leave
(bad)
push
inc
ins
hlt
das
add
leave
mov
js
pop
adc
iret
mov
test
xchg
jno
fdiv
aad
in
xchg
xchg
repnz
(bad)
(bad)
dec
iret
add
jno
pop
jmp
rcr
(bad)
pushf
mov
in
xor
cmp
ins
in
out
pop
std
xchg
pop
push
inc
dec
cmps
xchg
push
mov
mov
not
(bad)
call
(bad)
in
outs
adc
dec
jl
mov
xlat
adc
push
sub
xchg
pop
clc
dec
jns
and
dec
sbb
push
(bad)
(bad)
call
jae
and
mov
mov
inc
int3
push
mov
sub
scas
loope
cmc
mov
sbb
sub
xchg
and
cmp
lahf
mov
(bad)
(bad)
(bad)
call
(bad)
inc
sub
repnz
sbb
pop
push
mov
dec
cmps
pop
dec
adc
jmp
call
xlat
daa
sub
lds
or
ficom
cmp
ja
(bad)
jmp
repz
xchg
cdq
lock
push
jns
cmps
cdq
and
add
clc
outs
cmp
and
mov
pop
int
in
popf
inc
cmp
inc
and
cmps
dec
push
es
jle
lock
mov
mov
out
cs
jmp
loope
sbb
imul
dec
fsubr
push
adc
xor
(bad)
(bad)
push
neg
mov
dec
push
dec
call
adc
fsub
inc
fisub
add
(bad)
(bad)
(bad)
jmp
and
std
imul
and
sub
pop
js
js
stos
fild
jno
and
(bad)
into
ins
out
(bad)
pop
jb
cs
(bad)
(bad)
inc
push
shl
inc
push
ss
cmp
add
inc
jle
int
dec
cdq
imul
pop
ret
cdq
fwait
add
mov
sub
push
stos
ins
(bad)
fiadd
pop
mov
xchg
pop
ja
(bad)
(bad)
(bad)
push
mov
jnp
aam
sbb
and
sub
push
iret
popa
imul
(bad)
(bad)
(bad)
dec
movs
sub
push
neg
xchg
cmc
in
(bad)
jp
pop
dec
ror
dec
stos
(bad)
(bad)
jmp
dec
add
shl
jp
loopne
out
clc
es
(bad)
(bad)
(bad)
jmp
dec
test
and
xchg
imul
rol
jmp
push
sbb
out
mov
call
mov
dec
xlat
mov
and
adc
jp
mul
(bad)
(bad)
(bad)
call
cmp
mov
sbb
mov
mov
jecxz
into
das
movs
mov
sub
fcomip
add
add
pop
mov
push
daa
arpl
add
imul
cmp
(bad)
dec
xor
gs
sar
cmps
outs
jne
push
jmp
jo
cli
stos
(bad)
aaa
retf
jno
(bad)
call
pop
jl
or
add
mov
(bad)
jmp
aam
lds
adc
pop
push
fbld
adc
jae
mov
lock
dec
dec
cs
shl
push
(bad)
imul
or
nop
(bad)
scas
cmp
shr
fbld
int3
jecxz
(bad)
(bad)
call
and
and
mov
dec
sub
push
rcr
jg
dec
pop
mul
(bad)
dec
adc
cmp
jmp
dec
push
jge
and
pop
jp
dec
push
mov
popa
ja
inc
dec
(bad)
jecxz
out
mov
dec
test
call
or
jl
fisub
fldenv
pop
outs
loope
cli
pop
lock
hlt
(bad)
(bad)
jmp
jmp
mov
out
push
cmc
imul
xchg
int
sub
call
stos
(bad)
(bad)
(bad)
(bad)
es
xor
xlat
int
mov
jae
int
lods
test
out
or
xchg
lock
inc
xor
test
fisubr
jecxz
movs
sbb
adc
ret
sbb
cmps
outs
push
or
lds
ds
fisttp
pop
fs
ds
cld
outs
(bad)
inc
mov
in
into
scas
pop
shl
mov
rcr
(bad)
mov
mov
mov
repnz
mov
test
inc
push
stos
stc
cmp
imul
loope
xor
mov
jge
pop
jmp
adc
xchg
push
les
xor
(bad)
(bad)
mov
(bad)
mov
mov
js
out
mov
push
mov
mov
inc
mov
outs
adc
mov
fcom
call
cli
rcr
dec
lahf
cwde
sar
(bad)
(bad)
call
rol
xor
adc
pop
pop
mov
xor
fcmovnu
fsubr
dec
repnz
(bad)
push
dec
add
(bad)
inc
push
stos
lods
and
clc
(bad)
and
pop
(bad)
(bad)
jmp
adc
or
fwait
popf
fsubr
(bad)
xchg
xchg
cmps
dec
xchg
(bad)
xor
xchg
(bad)
(bad)
(bad)
call
out
mov
fiadd
les
clc
pop
xchg
cmps
rcr
add
sti
fdiv
mov
(bad)
(bad)
push
or
cmp
sub
cmps
jnp
mov
jae
cmc
fdiv
(bad)
(bad)
(bad)
call
idiv
push
or
jns
lds
rcl
xchg
imul
cmp
jp
mov
(bad)
(bad)
jmp
cld
xlat
call
mov
out
scas
jp
sub
cmp
(bad)
jmp
jmp
aas
int
sbb
fs
push
jne
push
sbb
call
mov
call
int
push
rcr
icebp
jmp
xchg
pop
leave
cmp
jl
cmp
dec
add
sahf
push
pop
sub
(bad)
call
sub
cmps
scas
sub
lods
(bad)
jg
xchg
test
(bad)
mul
or
(bad)
(bad)
inc
(bad)
ins
jnp
or
adc
cmp
pushf
loop
push
mov
out
mov
(bad)
(bad)
(bad)
jmp
stos
and
aas
sub
jge
jp
sbb
dec
(bad)
sub
dec
test
pop
jl
and
(bad)
(bad)
clc
jecxz
(bad)
xor
cmp
push
nop
jg
add
jecxz
push
fnstsw
jns
push
(bad)
(bad)
jg
add
adc
aaa
popa
sub
mov
mov
or
and
cld
(bad)
call
bound
or
or
jae
inc
mov
jmp
or
xchg
(bad)
in
push
xchg
jno
push
les
xchg
test
jmp
jge
jp
enter
nop
fisttp
cli
call
sbb
inc
push
or
(bad)
dec
repnz
mov
mov
out
sub
clc
inc
stos
adc
jmp
add
(bad)
adc
jne
cld
jbe
call
adc
(bad)
(bad)
jmp
(bad)
mov
les
xchg
jns
sub
inc
cs
in
push
inc
mov
aaa
lods
fdiv
dec
stos
div
dec
sub
pop
es
pusha
(bad)
sbb
jp
cmp
and
add
retf
push
pop
cli
mov
fisub
(bad)
(bad)
call
pushf
mov
(bad)
out
shl
mul
push
popf
shr
daa
inc
aam
shr
(bad)
mov
xchg
test
and
ds
push
pop
(bad)
fild
jg
out
jg
stc
ret
or
mov
jecxz
jmp
call
xor
(bad)
(bad)
call
mov
pop
or
loope
mov
jge
pop
call
out
push
fidiv
hlt
(bad)
push
xchg
xor
sets
loopne
jmp
cmp
mov
outs
sbb
dec
cmc
shl
cmp
push
cmp
mov
es
adc
ds
into
inc
fwait
mov
retf
clc
(bad)
(bad)
fadd
jno
data16
mov
cmp
into
xchg
(bad)
(bad)
mov
dec
jb
inc
ja
sbb
pop
gs
dec
icebp
fnstcw
jae
push
mov
out
(bad)
jno
sub
pop
fnsave
ds
jg
das
inc
ficomp
jecxz
(bad)
popf
jmp
test
fild
out
jne
jns
(bad)
(bad)
dec
rcl
xor
gs
(bad)
imul
pushf
xchg
sti
rol
push
xchg
les
dec
(bad)
cmp
cmp
(bad)
loope
fstp
into
pop
mov
imul
(bad)
cmp
test
mov
test
jge
cwde
mov
loop
push
push
imul
inc
cmps
stc
out
(bad)
pop
lock
pop
push
ret
cwde
ja
jno
or
mov
jp
mov
inc
sar
(bad)
(bad)
cmp
mov
loopne
ds
les
and
cmp
jp
(bad)
(bad)
call
and
mov
sbb
mov
cmp
cpuid
jnp
xor
imul
cld
fwait
push
cmp
enter
add
push
dec
scas
test
out
jg
sbb
mov
cmc
xor
test
push
mov
shl
fdivr
add
xchg
fimul
stc
mov
sub
jae
push
cli
pop
loopne
rcl
pop
fwait
lds
(bad)
mov
inc
int3
test
les
mov
jmp
add
test
pop
out
cli
xor
int3
xor
(bad)
(bad)
call
fsubr
sub
mov
das
jg
xchg
into
je
test
fistp
inc
or
or
(bad)
call
xchg
icebp
(bad)
fisubr
xor
xor
mov
jmp
dec
cli
and
cli
jmp
pop
add
mov
adc
in
mov
loope
xor
es
(bad)
(bad)
call
mov
cmp
imul
xchg
cmp
jne
mov
and
add
repz
push
adc
scas
xchg
add
adc
out
sti
(bad)
push
imul
inc
add
mov
mov
jmp
jg
mov
jmp
outs
push
test
std
cmps
mov
into
repnz
(bad)
(bad)
(bad)
inc
dec
mov
scas
cdq
pop
pop
mov
push
and
push
lods
jbe
sub
(bad)
dec
add
xchg
shr
cmc
pop
lods
movs
test
out
mov
mov
test
and
ja
jmp
xor
sbb
imul
sar
(bad)
mov
and
shl
in
fcom
(bad)
mov
(bad)
(bad)
stc
fstp
mov
out
ret
add
popa
rdmsr
sbb
clc
jmp
jle
adc
(bad)
sbb
fimul
call
cmp
pop
mov
fistp
(bad)
jmp
jmp
mov
pop
jno
xchg
mov
test
push
fimul
xchg
sub
pop
lods
jae
(bad)
(bad)
dec
lock
mov
out
jns
nop
cli
mov
(bad)
ds
jecxz
sub
inc
sar
jmp
test
sahf
mov
pop
sbb
pop
aaa
cmp
sbb
mov
or
outs
fidiv
in
push
rcr
lods
ror
(bad)
(bad)
(bad)
jmp
aam
neg
cli
jl
mov
inc
xlat
call
pop
xor
out
(bad)
(bad)
call
int3
(bad)
and
nop
xchg
popa
inc
iret
inc
fldcw
adc
bound
cmp
jo
test
(bad)
jmp
xchg
add
pop
dec
repz
cmp
add
(bad)
dec
(bad)
std
or
mov
xor
and
jbe
(bad)
push
lock
jmp
pop
and
movs
mov
movs
iret
shl
int3
into
popf
and
call
xchg
mov
ror
movs
sar
(bad)
(bad)
inc
xchg
xchg
imul
adc
aas
cld
gs
mov
fdivr
loope
pushf
mov
idiv
dec
add
stc
mov
adc
iret
xor
xchg
icebp
test
push
test
add
lods
push
jmp
dec
out
lods
ret
outs
cdq
ret
sar
push
mov
add
mov
jmp
mov
call
test
jmp
xchg
ins
stos
(bad)
call
fidivr
xchg
ret
pop
push
(bad)
push
fwait
xor
mov
(bad)
enter
(bad)
(bad)
(bad)
(bad)
jnp
jmp
loop
jmp
pop
arpl
lahf
sub
dec
xor
lock
in
pop
or
(bad)
(bad)
(bad)
(bad)
call
add
mov
cs
jae
mov
sti
jmp
pop
out
imul
(bad)
mov
cmps
dec
mov
cmp
mov
mov
test
mov
in
xchg
inc
in
std
cmp
(bad)
(bad)
(bad)
dec
mov
xor
sbb
sbb
fist
lds
ror
mov
(bad)
mov
fnsave
push
in
test
pop
test
mov
and
cmps
mov
outs
xlat
jne
cmps
das
fstp
std
(bad)
(bad)
out
jp
cmp
push
cmp
movzx
aaa
mov
push
(bad)
(bad)
mov
inc
jo
cmp
push
enter
adc
mov
mov
cli
call
mov
jmp
cld
test
add
jne
aaa
and
call
ds
(bad)
dec
jmp
imul
loope
add
sbb
xlat
xchg
retf
(bad)
adc
cdq
imul
mov
scas
lock
es
dec
or
xlat
in
adc
(bad)
mov
fdivr
test
push
imul
push
ret
outs
mov
xor
stc
cdq
mov
mov
cmp
pop
mov
(bad)
(bad)
dec
add
ins
jmp
ret
mov
push
fwait
mov
adc
push
aad
loop
in
(bad)
repz
inc
fstp
pop
adc
inc
loop
sub
jmp
mov
(bad)
(bad)
cmp
in
add
mov
sub
(bad)
(bad)
mov
loop
push
scas
imul
jae
cmp
lahf
mov
dec
inc
sub
cmps
pop
jae
add
pop
loopne
bound
mov
mov
jmp
pop
cwde
jmp
imul
das
pop
sub
(bad)
fild
xchg
and
add
in
leave
adc
clc
(bad)
and
xchg
(bad)
(bad)
(bad)
push
lea
cmp
and
pop
jle
sbb
push
das
jo
sbb
shl
xor
fs
je
mov
sar
(bad)
(bad)
(bad)
sti
imul
xor
xor
jle
mov
xchg
icebp
jbe
mov
in
cld
(bad)
(bad)
push
ficomp
adc
iret
fild
pop
addr16
mov
clc
(bad)
jmp
jmp
jg
(bad)
xor
sub
pusha
(bad)
loopne
(bad)
inc
dec
xor
jae
fnsave
jns
loop
inc
(bad)
movs
(bad)
(bad)
(bad)
jmp
mov
adc
push
xor
push
mov
push
retf
xchg
adc
jg
jmp
or
push
fild
(bad)
jmp
sub
mov
inc
mov
(bad)
(bad)
(bad)
mov
xor
xor
dec
dec
in
adc
es
adc
and
mov
inc
jb
dec
inc
ins
or
or
or
dec
xor
(bad)
(bad)
dec
shl
pop
push
xor
jecxz
add
lea
shl
adc
(bad)
(bad)
mov
aas
loope
push
icebp
cmp
in
dec
aaa
cmp
dec
xlat
pop
(bad)
(bad)
mov
fadd
pop
test
lods
mov
mov
inc
xchg
bound
dec
jae
cmp
test
ja
push
movs
pop
push
or
or
or
push
jge
sar
fdivr
(bad)
(bad)
push
icebp
mov
aad
aaa
shr
adc
pop
pop
jae
ret
sub
mov
jecxz
(bad)
(bad)
inc
adc
ret
(bad)
jmp
fisttp
loop
pop
cli
pop
mov
jmp
clc
(bad)
(bad)
call
mov
clc
aas
movs
lods
icebp
jne
out
inc
inc
scas
jbe
push
xchg
dec
rcr
sub
inc
add
(bad)
(bad)
(bad)
call
xor
test
or
cmp
imul
sbb
jmp
push
stc
call
mov
shr
arpl
rol
push
mov
pop
jg
sub
dec
clc
call
push
adc
cmps
fdivr
(bad)
(bad)
call
mov
repz
adc
pop
cmp
and
push
icebp
movs
dec
outs
sub
sbb
nop
lds
sbb
hlt
and
scas
xchg
mov
xor
movs
sbb
data16
movs
push
leave
aaa
ja
push
cld
jmp
aas
jno
inc
arpl
xor
mov
int3
mov
aad
xor
xor
(bad)
(bad)
(bad)
(bad)
inc
rol
jle
aas
pop
imul
jmp
aaa
test
xchg
xchg
cmp
push
pop
out
cmc
and
(bad)
or
mov
(bad)
jg
pusha
test
add
push
pushf
push
loopne
(bad)
(bad)
jg
sar
mov
jmp
cmps
push
(bad)
aam
mov
add
jg
or
jmp
fdiv
jno
pop
jecxz
pusha
jp
stc
jg
dec
pop
sahf
int3
or
dec
and
cmps
sbb
bound
sti
and
loopne
fisubr
les
shl
je
(bad)
call
dec
dec
je
lahf
jae
es
sbb
mov
push
es
leave
and
call
cmc
push
push
push
push
repnz
xor
(bad)
(bad)
(bad)
push
outs
jb
mov
mov
(bad)
sub
pop
pop
fidivr
fdivr
jp
push
bound
(bad)
pop
icebp
ds
mov
and
push
call
test
pusha
fucomip
or
dec
rcl
sub
inc
arpl
push
ss
frstor
mov
movups
jecxz
(bad)
call
jle
sbb
iret
ror
aas
call
mov
mov
(bad)
mov
lods
rcl
add
cwde
jmp
jge
std
cmp
(bad)
(bad)
call
cdq
sar
sbb
mov
stc
xor
xchg
push
push
retf
push
cmp
adc
(bad)
call
rcr
push
lahf
stos
cmps
jle
inc
adc
ins
sar
fbstp
test
aam
loop
xor
fwait
cwde
(bad)
pop
jg
popa
std
xchg
mov
ins
mov
(bad)
(bad)
(bad)
(bad)
out
movs
mov
xor
aas
or
daa
push
jo
inc
dec
push
mov
xor
mov
shr
(bad)
call
ror
ds
cmps
push
xchg
push
push
(bad)
fstp
xchg
dec
mov
mov
inc
(bad)
in
out
loopne
imul
call
je
mov
std
jp
lods
cmps
icebp
push
je
sbb
mov
add
ja
outs
call
pop
retf
push
loopne
idiv
hlt
push
(bad)
jg
pop
sbb
lods
sbb
retf
movs
(bad)
sahf
xchg
mov
fs
mov
(bad)
(bad)
cmp
sub
push
cmp
fdivr
lahf
(bad)
jle
cmc
sub
and
mov
sub
jle
lock
mov
retf
call
sar
xchg
xchg
inc
mov
mov
inc
(bad)
(bad)
fcomip
cmp
(bad)
repnz
call
cmp
cmc
clc
xor
scas
xlat
mov
cs
adc
stos
push
inc
call
jmp
ret
sahf
es
or
adc
(bad)
(bad)
push
pslld
ins
lds
push
fdiv
fs
mov
ins
inc
jp
into
scas
fstp
je
and
sub
dec
xlat
jns
adc
inc
pop
inc
cmp
in
clc
int
add
in
daa
jno
xchg
jmp
jle
jmp
pop
mov
mov
mov
pop
out
add
(bad)
(bad)
(bad)
inc
in
pop
mov
and
push
mov
stc
cmp
stc
mov
(bad)
mov
(bad)
(bad)
cmp
inc
pop
lea
dec
xor
cmp
loop
adc
xor
sti
(bad)
(bad)
(bad)
js
iret
xor
jmp
push
retf
jns
cmp
mov
cmp
jnp
pushf
ret
loope
jg
test
imul
inc
das
mov
mov
out
outs
sti
int3
jmp
cmps
pop
data16
inc
test
(bad)
dec
pusha
or
retf
jmp
push
jp
enter
daa
mov
sbb
jmp
jmp
mov
mov
mov
fmul
fldcw
pop
or
(bad)
sti
cmp
aaa
dec
or
xchg
push
out
rcl
(bad)
mov
mov
popf
add
sahf
jbe
sbb
sbb
(bad)
jmp
outs
(bad)
(bad)
jmp
mov
and
sbb
fsubr
jmp
push
pop
dec
das
jg
and
inc
(bad)
sbb
xchg
mov
pop
cli
in
in
adc
(bad)
(bad)
mov
dec
aad
jne
scas
fcomp
mov
ss
fisttp
call
cdq
adc
xor
jge
(bad)
mov
das
ds
mov
sub
cmp
in
out
(bad)
mov
xor
daa
retf
loope
test
mov
jg
popa
sub
(bad)
sti
sbb
outs
sbb
(bad)
leave
mov
add
pop
cld
pop
push
or
mov
push
adc
mov
iret
sub
cdq
shr
push
mov
(bad)
cli
fdiv
pop
xlat
(bad)
out
inc
ds
(bad)
(bad)
out
sbb
jp
lea
and
call
daa
mov
hlt
jle
or
in
mov
mov
imul
inc
pop
shl
loopne
div
mov
mov
dec
adc
std
(bad)
(bad)
jmp
out
jbe
sub
popa
pop
int
inc
dec
rol
(bad)
mov
and
or
mov
stos
sbb
push
pop
jmp
test
outs
(bad)
(bad)
jmp
mov
enter
into
jmp
sahf
outs
inc
xor
cli
xchg
cmp
(bad)
(bad)
(bad)
call
nop
push
repz
pop
(bad)
mov
outs
sbb
scas
push
sub
stos
(bad)
(bad)
(bad)
call
push
js
retf
mov
jg
mov
daa
push
data16
pusha
pushf
(bad)
(bad)
addr16
xchg
mov
and
mov
sub
popa
xchg
cdq
movs
adc
jg
fcmovu
loop
or
fcom
aaa
mov
xor
or
gs
call
dec
das
lea
pop
js
fild
ins
call
rcr
mov
(bad)
call
pop
pop
out
pushf
or
pushf
jge
out
mov
in
outs
jbe
jmp
push
dec
ins
mov
cli
call
fldenv
nop
(bad)
popa
mov
sahf
loope
iret
jno
jae
repz
inc
or
cmp
sbb
xchg
or
call
ret
movs
xor
pop
adc
push
push
inc
or
inc
rcl
inc
mov
int3
(bad)
(bad)
push
cmp
or
int3
ins
enter
mov
mov
sahf
jmp
in
sahf
(bad)
(bad)
(bad)
dec
and
bound
mov
cmp
fnstcw
xchg
gs
ins
movs
stc
push
ror
add
(bad)
call
cmp
jno
cmps
jb
jl
push
lods
inc
scas
fldcw
(bad)
call
out
mov
inc
repnz
xchg
push
fidiv
sbb
fcomp
dec
jl
pop
mov
xchg
jmp
pop
mov
mov
cdq
std
push
out
and
aas
ds
cmp
mov
push
imul
xchg
(bad)
(bad)
(bad)
inc
gs
jns
call
sbb
cmc
inc
cmps
(bad)
and
(bad)
ins
push
and
cmp
dec
mov
cld
or
xchg
int3
les
mov
fbstp
and
mov
std
(bad)
call
fmul
loope
fisub
das
mov
jnp
mov
jecxz
or
aaa
std
(bad)
mov
lahf
ret
popa
push
mov
mov
repz
push
jbe
push
add
(bad)
(bad)
dec
sahf
in
xchg
nop
pusha
cld
mov
sti
push
(bad)
lods
push
inc
std
(bad)
mov
imul
(bad)
(bad)
jg
iret
dec
stos
hlt
dec
push
data16
fadd
adc
pop
in
(bad)
daa
movs
in
jae
lahf
(bad)
(bad)
(bad)
inc
pop
inc
jecxz
stos
jp
jle
ja
dec
mov
inc
or
ins
or
jmp
dec
sbb
xchg
sar
cdq
mov
div
mov
mov
mul
jno
imul
popa
clc
mov
jl
sbb
(bad)
(bad)
(bad)
clc
pop
aad
cli
jnp
inc
lds
pushf
out
call
push
push
jne
jnp
sbb
ins
(bad)
(bad)
(bad)
call
int
mov
loope
cld
mov
mov
pop
aas
scas
imul
cmp
mov
inc
or
mov
push
push
psubw
call
std
lods
lea
adc
lock
sbb
push
in
or
mov
stc
jno
fisubr
lods
test
(bad)
(bad)
(bad)
call
jmp
jp
cmps
sub
repnz
dec
cmp
scas
push
xlat
rol
fdivr
xchg
mov
sub
fidivr
loop
pushf
fbld
stos
aam
jge
sbb
out
sahf
push
(bad)
(bad)
call
test
inc
pop
outs
dec
and
lock
xor
loopne
aam
std
inc
mov
jns
sbb
push
(bad)
inc
ret
inc
loop
or
sub
mov
xor
jmp
cmp
jmp
mov
jge
or
(bad)
(bad)
inc
inc
arpl
daa
cmp
sbb
cld
and
inc
mov
adc
les
call
xor
lahf
mov
out
cli
(bad)
xor
(bad)
push
mov
jae
inc
xchg
xchg
push
dec
sub
ja
mov
(bad)
dec
ret
test
push
pop
call
mov
cmp
pop
sub
add
and
not
movs
or
fwait
call
sbb
inc
les
jne
test
mov
or
xor
or
ret
movs
inc
ins
daa
stos
dec
in
and
out
mov
xchg
ss
add
inc
call
(bad)
jmp
mov
sub
(bad)
(bad)
xchg
cmp
ficom
cs
cmp
(bad)
fcomip
(bad)
fucomi
push
or
mov
sub
and
pusha
sbb
lods
in
mov
jmp
jnp
jo
and
xor
aad
test
xchg
dec
out
imul
adc
in
ja
or
push
ror
push
test
jge
(bad)
out
cli
mov
sub
xor
cmps
inc
or
sub
ins
fstp
jmp
dec
std
ror
mov
setns
or
xlat
(bad)
fcmovu
ins
or
stc
les
shr
and
mov
int
jg
ins
cld
adc
sub
cld
inc
mov
adc
cld
xor
add
jecxz
repnz
mov
xor
cs
(bad)
(bad)
(bad)
jmp
cmc
xchg
stc
ror
sub
mov
push
and
sbb
cdq
stos
push
mov
sbb
(bad)
(bad)
push
xchg
fld
jp
pop
mov
cs
cmps
retf
jae
cdq
or
and
and
jmp
(bad)
pop
test
pusha
rol
push
and
sbb
mov
mov
data16
gs
inc
adc
mov
(bad)
in
xor
adc
hlt
outs
cli
retf
stc
in
test
jb
xchg
jp
sbb
(bad)
(bad)
out
and
fidivr
jp
outs
fwait
adc
xchg
dec
das
sub
(bad)
repnz
sar
into
stos
xor
aam
xor
dec
cmps
les
push
adc
mov
aad
ss
ss
xor
call
adc
inc
test
dec
add
sbb
mov
test
inc
pop
inc
pop
jne
dec
clc
xchg
pop
pop
leave
jo
cwde
jmp
adc
fisub
add
sbb
pop
or
sbb
iret
add
cmps
jb
sti
(bad)
(bad)
(bad)
inc
jmp
out
adc
push
push
out
or
cmp
inc
inc
sbb
loop
jg
push
push
ins
push
(bad)
xor
adc
cmps
idiv
cs
inc
dec
jg
(bad)
mov
sar
hlt
ja
xchg
pop
jo
(bad)
sub
cmp
(bad)
(bad)
inc
ret
mov
xor
adc
rcr
pushf
ins
jge
imul
adc
add
xor
ins
pop
ins
call
(bad)
pop
or
bound
hlt
sub
retf
ds
sbb
sbb
call
or
push
or
sbb
in
outs
mov
call
js
jp
mov
gs
(bad)
(bad)
(bad)
jmp
mov
inc
out
mov
fmul
mov
xor
scas
sti
and
and
xchg
popa
dec
hlt
inc
cmp
(bad)
(bad)
(bad)
fbld
(bad)
clc
pop
shr
iret
pushf
dec
mov
ja
mov
test
sub
(bad)
(bad)
call
dec
pop
jmp
sub
or
les
mov
inc
adc
sbb
mov
out
cli
inc
mov
inc
pop
sub
fidiv
inc
cmp
cmp
ret
(bad)
(bad)
(bad)
jmp
and
adc
sbb
(bad)
mov
pop
jnp
imul
lahf
xchg
pop
push
adc
bound
call
adc
cmp
add
ficomp
hlt
mov
mov
call
jae
sti
rcr
cmps
mov
jp
pushf
pop
mov
pop
cmps
mov
add
and
ret
xchg
pop
push
lods
inc
cli
hlt
(bad)
(bad)
(bad)
call
jns
fisttp
xor
and
stc
loop
fadd
ret
xchg
sahf
mov
cmp
(bad)
(bad)
(bad)
dec
mov
xor
test
(bad)
mov
mov
xchg
ins
stos
test
sar
(bad)
dec
icebp
cmps
lods
mov
outs
inc
mov
xor
inc
aaa
mov
fisubr
push
pop
pop
out
lea
(bad)
repnz
dec
(bad)
dec
fiadd
leave
(bad)
enter
xchg
in
(bad)
(bad)
(bad)
call
jle
inc
add
pop
dec
outs
shl
sub
and
leave
scas
cmps
jp
add
or
sbb
movs
jmp
jecxz
(bad)
(bad)
(bad)
inc
or
ins
out
mov
mov
adc
mov
test
xchg
add
mov
dec
mov
(bad)
xor
adc
stc
out
mov
popf
repz
std
daa
js
sub
pop
cld
jno
push
aad
xor
push
xor
xchg
mov
out
out
mov
adc
lahf
sahf
mov
xchg
adc
(bad)
push
sbb
nop
add
aaa
xchg
pop
(bad)
(bad)
call
scas
add
nop
scas
sbb
in
lds
(bad)
cmp
call
fidivr
(bad)
(bad)
dec
mov
dec
cmp
ret
cmps
pop
xchg
loopne
jecxz
and
or
mov
push
ror
jmp
xlat
adc
cli
jmp
jmp
pop
int3
cmps
and
xor
or
movs
imul
(bad)
(bad)
fistp
int3
lods
xor
pushf
(bad)
mov
or
mov
std
(bad)
mov
xchg
lea
sub
popa
cmc
js
enter
movsx
in
(bad)
jg
push
and
mov
sub
sub
bound
fdiv
and
inc
and
inc
(bad)
mov
fsub
aas
jmp
or
sbb
mov
hlt
(bad)
(bad)
push
inc
jmp
repnz
or
fiadd
shr
bnd
and
cdq
inc
jmp
(bad)
in
retf
lahf
dec
data16
mov
js
xor
cmp
clc
mov
rol
push
sbb
std
xor
mov
(bad)
(bad)
(bad)
push
outs
mov
push
sub
scas
jb
stc
repz
adc
enter
in
es
mov
(bad)
(bad)
(bad)
call
in
fdiv
dec
in
sbb
push
jo
icebp
jno
push
std
jns
push
push
lods
ds
setl
(bad)
in
sub
lock
mov
data16
mov
lahf
push
icebp
inc
adc
fstp
sub
jb
test
cmp
xor
in
cmps
out
aas
and
(bad)
(bad)
(bad)
call
xchg
movs
std
imul
nop
sub
add
push
mov
add
pop
(bad)
icebp
fwait
shl
push
out
test
mov
cli
jne
sub
push
dec
or
jns
jp
ss
sub
mov
daa
in
repz
add
add
(bad)
call
adc
aaa
cmp
dec
mov
mov
xor
or
test
addr16
(bad)
(bad)
inc
xor
clc
lock
adc
cmps
cmp
rol
and
shl
sbb
int3
cmp
rcr
(bad)
jmp
mov
add
(bad)
push
shl
dec
mov
add
ja
and
hlt
(bad)
(bad)
(bad)
(bad)
fldlg2
(bad)
rol
ins
cmps
xchg
mov
mov
mov
jb
gs
das
jno
pop
cmp
push
lock
adc
out
pop
ds
test
sub
es
out
or
aaa
fsqrt
inc
sub
mov
mov
adc
sub
(bad)
(bad)
inc
sub
jne
popa
adc
scas
lods
or
dec
rcr
jo
jns
push
mov
cmps
adc
dec
or
jmp
push
sub
call
mov
mov
wrmsr
xor
(bad)
call
pop
sbb
mul
jnp
movs
imul
push
sbb
call
pusha
mov
loop
shl
xor
pop
mov
xor
(bad)
(bad)
(bad)
(bad)
fadd
fadd
sbb
adc
popf
xchg
mov
pop
mov
xor
or
push
out
int3
add
adc
pop
(bad)
sar
mov
call
mov
sub
mov
jp
mov
jge
xchg
add
sbb
sub
inc
out
(bad)
(bad)
jg
xchg
das
pop
addr16
xor
mov
test
mov
pop
jmp
(bad)
(bad)
inc
fs
out
scas
dec
lds
mov
lea
sbb
(bad)
and
xor
cmp
outs
sbb
test
jae
mov
outs
adc
and
call
cdq
test
stos
pop
sub
jecxz
jbe
fs
(bad)
(bad)
jmp
jl
iret
shl
or
lods
mov
imul
xchg
scas
stos
(bad)
neg
dec
retf
(bad)
(bad)
stc
sub
cmps
lods
and
mov
push
leave
les
sbb
ins
cmp
(bad)
dec
cmps
and
fmul
js
inc
xchg
pop
xor
in
jmp
xlat
lock
mov
movs
and
jl
mov
or
push
mov
xor
lea
xchg
cmp
fst
test
sti
cs
(bad)
(bad)
dec
test
ror
loope
inc
mov
ins
lea
pop
inc
jp
in
and
xchg
pushf
mov
(bad)
jg
call
hlt
lock
shl
fadd
mov
leave
leave
xchg
es
xchg
stc
(bad)
(bad)
(bad)
(bad)
jnp
and
cs
pop
mov
fwait
outs
mov
cmps
xor
add
mov
loop
ret
rol
cmc
xor
aaa
cld
or
adc
jp
(bad)
jbe
cmp
(bad)
(bad)
call
mov
jp
leave
xchg
dec
xor
add
ss
mov
(bad)
inc
rol
es
sub
out
mov
mov
dec
repnz
lods
fwait
rcl
dec
test
and
dec
and
leave
mov
pop
movs
test
jge
test
cmp
idiv
mov
push
lahf
movs
shr
cmp
(bad)
sti
and
out
ret
adc
test
inc
add
sub
int
xor
xor
mov
sbb
nop
(bad)
(bad)
(bad)
call
cld
test
lahf
sub
mov
fwait
xchg
xchg
repnz
mov
dec
test
cdq
loop
(bad)
(bad)
(bad)
fld
add
test
nop
clc
retf
loope
loop
add
mov
sbb
and
jmp
cld
in
jmp
leave
cdq
xchg
xor
inc
add
xor
mov
(bad)
(bad)
jmp
ja
cwde
sbb
push
xchg
repnz
and
stc
loopne
cmps
mov
pop
sar
(bad)
jg
jg
pop
sahf
lea
jbe
jmp
lods
adc
mov
jb
mov
jno
jp
(bad)
jg
(bad)
imul
cdq
xchg
sbb
aas
arpl
and
fmul
sub
sahf
cmp
cmps
ror
(bad)
(bad)
call
(bad)
and
mov
cmc
cmp
add
fs
(bad)
dec
or
sbb
(bad)
(bad)
call
sub
mov
jge
inc
adc
stc
mov
lahf
jmp
in
cmc
sahf
call
dec
ins
call
dec
pop
ins
or
(bad)
(bad)
jmp
jbe
outs
and
loope
fld
leave
cmp
xor
jmp
nop
jge
lods
jecxz
loopne
(bad)
cmp
test
sub
rol
mov
adc
inc
jno
mov
adc
push
ret
jae
dec
pop
(bad)
xor
cs
fcmove
sti
pop
ss
pushf
and
cld
jmp
mov
rol
dec
dec
repz
stos
fisubr
mov
adc
and
jnp
addr16
add
aaa
sub
mov
pop
or
cld
(bad)
(bad)
jg
imul
cs
or
add
aam
(bad)
cmp
ja
jb
cmp
ins
std
add
ds
dec
fisttp
(bad)
(bad)
jg
out
pop
pop
aaa
inc
push
xchg
push
cmp
inc
dec
lds
adc
mov
fisubr
pop
or
push
xchg
jbe
adc
ret
scas
dec
or
(bad)
(bad)
(bad)
ficom
push
mov
dec
pop
pop
lea
pop
mov
and
inc
pop
nop
cmp
pop
(bad)
(bad)
(bad)
jmp
lods
cmc
fsubr
cli
aad
push
ins
mov
fild
mov
jl
stos
mov
out
cli
jmp
test
adc
mov
mov
(bad)
(bad)
call
mov
mov
inc
or
add
daa
pop
add
jecxz
call
dec
fstp
mov
cwde
mov
mov
sbb
cmc
inc
daa
(bad)
(bad)
(bad)
push
push
bnd
mov
and
sbb
jg
je
pop
cmps
cmc
dec
xlat
push
mov
fnsave
icebp
(bad)
fcmovu
mov
clc
int
add
call
or
jbe
repnz
bt
(bad)
(bad)
jmp
movs
inc
mov
sub
or
pop
xlat
loop
jl
je
jmp
ja
icebp
xchg
imul
(bad)
(bad)
(bad)
jmp
lds
mov
jb
js
loopne
test
pop
test
mov
push
cmp
mov
out
pop
lahf
or
rcl
add
mov
(bad)
push
jecxz
mov
arpl
or
ror
mov
(bad)
jg
add
jp
inc
add
out
pop
xor
scas
call
or
jmp
push
call
(bad)
(bad)
(bad)
jmp
imul
sti
push
popf
mov
mov
je
mov
mov
xor
in
(bad)
(bad)
(bad)
call
outs
mov
pusha
icebp
js
and
add
inc
stc
or
jecxz
inc
mov
xchg
in
pmaxsw
(bad)
pusha
and
jg
push
sbb
jmp
dec
mov
aam
push
mov
xor
aam
cmp
hlt
data16
in
enter
push
inc
pop
mov
adc
mov
loopne
(bad)
jmp
mov
test
scas
sbb
mov
or
(bad)
(bad)
(bad)
(bad)
inc
mov
ss
mov
mov
pop
in
dec
ret
mov
femms
pop
(bad)
fdivr
(bad)
(bad)
dec
mov
push
repz
neg
mov
xlat
jge
(bad)
and
outs
shl
je
call
cld
sbb
loopne
dec
jns
sub
stc
stos
icebp
mov
add
cli
(bad)
jmp
pop
sbb
nop
stc
out
dec
fistp
add
sub
(bad)
dec
jl
rcl
jp
cdq
lods
clc
or
std
add
and
ret
mov
(bad)
(bad)
push
inc
adc
sub
mov
pop
sbb
(bad)
sbb
leave
lods
es
or
dec
mov
hlt
(bad)
dec
dec
cmps
add
mov
scas
retf
push
iret
jmp
xchg
fiadd
pcmpgtw
ss
pop
xchg
jbe
push
sbb
add
dec
(bad)
(bad)
(bad)
call
jle
sbb
xlat
stos
(bad)
push
js
dec
into
fild
jl
data16
jo
sbb
cmc
xor
(bad)
(bad)
(bad)
(bad)
mov
mov
inc
push
pop
jmp
xor
pop
(bad)
push
push
sub
push
pop
mov
xor
loopne
movs
js
mov
push
sbb
push
stos
xchg
lea
fisub
int3
and
push
pusha
mov
es
je
aas
movs
je
pop
aas
(bad)
adc
mov
jmp
lea
aas
pop
mov
add
das
push
rcr
and
aaa
aam
inc
mov
cmp
loope
inc
(bad)
(bad)
(bad)
push
ins
fucomp
div
or
sub
test
mov
enter
cmp
leave
cmp
(bad)
(bad)
jmp
push
inc
fiadd
(bad)
jmp
cmps
pop
popf
arpl
cmc
ds
mov
xchg
or
call
inc
cld
scas
xchg
daa
push
imul
mov
(bad)
(bad)
(bad)
push
ror
(bad)
int3
mov
pop
in
xchg
aad
xchg
ficomp
repnz
out
(bad)
out
clc
jmp
ins
jae
push
cwde
rcl
scas
daa
das
adc
or
iret
mov
pop
rol
arpl
or
es
and
(bad)
dec
sbb
jbe
sub
xchg
fcom
jno
test
and
(bad)
push
std
inc
xchg
add
sub
push
pop
dec
scas
xchg
pop
xchg
mov
push
push
(bad)
(bad)
inc
pop
xchg
sti
mov
pop
lea
add
xor
jp
inc
sbb
(bad)
pop
add
inc
jns
xor
mov
rol
jmp
jns
mov
dec
jae
mov
(bad)
cmp
adc
(bad)
fild
mov
mov
sbb
aad
aam
je
mov
pop
pop
cli
(bad)
(bad)
jmp
jbe
cmps
xor
jno
(bad)
repz
retf
jo
cmp
call
loopne
xchg
fsub
jns
push
imul
out
push
int
(bad)
(bad)
inc
pop
(bad)
aam
xor
mov
cdq
jle
fimul
repz
das
fisttp
sbb
out
enter
(bad)
(bad)
(bad)
jnp
fld
add
cmc
sbb
lock
sub
retf
or
pop
xchg
iret
push
scas
mov
sbb
clc
sbb
jmp
retf
mov
stos
and
cmp
fild
in
(bad)
(bad)
(bad)
out
aam
sbb
aam
leave
dec
adc
fisub
adc
jge
and
(bad)
jmp
or
add
in
sub
adc
inc
inc
dec
jbe
cld
inc
cwde
push
sub
outs
test
fiadd
lahf
scas
jo
mov
xor
jbe
call
popa
add
pop
mov
mov
movs
sub
cmp
adc
push
jl
jecxz
cli
xchg
ret
mov
repz
(bad)
sar
dec
jle
jno
(bad)
(bad)
(bad)
(bad)
cmp
int
sub
emms
jg
add
ins
int3
jg
lds
inc
iret
ins
movs
and
jbe
repz
dec
jnp
mov
repnz
cs
(bad)
jmp
aad
sub
add
lods
(bad)
fist
fstp
mov
hlt
(bad)
inc
mov
stc
jo
arpl
jnp
ins
xchg
call
or
dec
lock
sub
daa
fmul
retf
push
arpl
mov
(bad)
(bad)
(bad)
call
xor
mov
mov
loopne
inc
add
jno
mov
inc
xor
ja
or
(bad)
(bad)
call
xor
mov
sar
mov
fild
repz
pop
shr
sub
mov
test
mov
aam
pop
movs
xchg
adc
in
mov
rcr
(bad)
ror
in
or
(bad)
(bad)
call
retf
out
outs
push
dec
loop
push
mov
stos
out
adc
pop
push
and
xchg
cmp
loop
inc
mov
div
inc
xchg
out
xor
hlt
or
xchg
out
xchg
test
jns
inc
jl
sub
dec
jmp
repz
inc
nop
pop
and
push
test
cli
jmp
(bad)
rcr
lahf
imul
jno
aam
lods
(bad)
(bad)
jg
mov
jg
pusha
je
retf
adc
push
jns
ror
cmp
(bad)
jmp
(bad)
jmp
mov
jg
pop
sbb
stos
popf
test
and
das
push
lea
cli
fs
mov
scas
cli
or
cmps
mov
idiv
cmp
mov
jmp
mov
xchg
cmp
loope
pop
lock
arpl
pop
sbb
cs
cmps
faddp
jmp
inc
dec
jp
movs
jecxz
ret
dec
retf
sub
mov
inc
ds
subps
dec
xchg
dec
inc
dec
sar
jns
xor
ss
cld
push
jns
lods
pop
fisub
jmp
sub
and
mov
xlat
or
and
(bad)
jg
jmp
ror
dec
pushf
pop
jp
sahf
push
dec
xchg
push
div
xor
sub
xchg
inc
ret
loop
dec
daa
add
cmc
(bad)
jnp
pusha
outs
cs
scas
(bad)
(bad)
(bad)
jg
mov
inc
push
pminsw
imul
outs
mov
sbb
jae
xchg
ins
or
call
or
mov
push
fistp
xchg
add
out
sbb
jmp
cmp
jge
inc
push
push
xor
pop
mov
inc
pop
stos
leave
cli
fild
mov
cmp
(bad)
(bad)
(bad)
mov
sbb
fwait
dec
shr
aad
adc
xor
sbb
cs
ss
(bad)
mov
leave
jecxz
push
push
dec
es
xchg
xchg
jmp
(bad)
(bad)
(bad)
jmp
mov
xor
dec
sar
jne
mov
jb
shl
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
mov
jg
call
xor
adc
push
test
gs
(bad)
(bad)
jmp
mov
adc
dec
(bad)
jmp
mov
fcomp
(bad)
inc
adc
maxps
or
test
mov
clc
dec
(bad)
std
inc
push
mov
es
cdq
pushf
cmps
xor
sub
(bad)
cld
jmp
jecxz
cmp
pop
sbb
aam
xchg
or
cmp
jl
push
out
add
shr
fst
(bad)
(bad)
aas
outs
pushf
pop
pop
inc
bound
dec
test
fwait
sbb
fimul
iret
mov
sbb
adc
rol
(bad)
(bad)
(bad)
(bad)
stc
adc
adc
fwait
mov
pushf
shl
(bad)
pusha
pop
bound
pop
daa
adc
fld
inc
mul
repnz
nop
scas
push
imul
dec
pop
mov
aam
(bad)
(bad)
push
scas
dec
mov
xchg
(bad)
in
or
(bad)
fcmovnb
fidivr
(bad)
pop
xchg
imul
std
(bad)
(bad)
(bad)
call
mov
loopne
push
add
(bad)
ss
add
addr16
jns
stos
sbb
(bad)
(bad)
(bad)
(bad)
js
fwait
(bad)
fld
and
jo
push
and
addr16
(bad)
mov
(bad)
(bad)
(bad)
dec
adc
dec
dec
lds
xor
fst
or
repz
icebp
rol
push
in
(bad)
dec
not
lds
cmp
in
push
and
(bad)
jmp
sub
cwde
lea
jge
jns
(bad)
rcl
adc
dec
mov
xchg
sbb
mov
outs
repnz
ins
test
stc
jle
push
add
jmp
fisubr
or
dec
dec
cwde
enter
or
in
icebp
cs
stos
adc
pushf
mov
push
cmp
lods
(bad)
(bad)
(bad)
jmp
int
jno
xchg
(bad)
lock
and
or
cs
xor
aad
xor
es
sub
adc
aam
int
mov
mov
xlat
ja
(bad)
inc
int3
sbb
pusha
int
adc
aas
stos
leave
xor
das
or
daa
cmp
pop
pop
ret
int3
mov
(bad)
sti
std
jne
add
jle
xor
and
xchg
mov
fisttp
jne
pop
call
out
adc
jmp
scas
rcl
mov
(bad)
(bad)
dec
cs
xor
sbb
mov
sub
in
test
or
(bad)
(bad)
(bad)
fdiv
xchg
popf
movs
lods
mov
mov
clc
test
aam
and
ins
das
aad
and
sbb
(bad)
fcomip
scas
stos
int3
cmp
xchg
or
xor
imul
test
mov
test
icebp
mov
aaa
jns
sbb
mov
xchg
popf
retw
pop
out
aas
pop
(bad)
(bad)
(bad)
jp
(bad)
dec
inc
scas
mov
rcr
push
cmp
sub
jmp
cld
dec
and
sbb
fisub
(bad)
(bad)
jg
cwde
jmp
dec
in
mov
push
dec
sub
dec
outs
pop
xchg
pop
fyl2xp1
sub
outs
mov
mov
retf
sub
mov
jl
jle
(bad)
sbb
push
xor
add
test
nop
sbb
(bad)
(bad)
call
inc
pop
pop
and
and
adc
mov
vunpcklps
(bad)
inc
dec
sti
aas
stos
cmp
pop
in
cmp
jmp
fwait
mov
push
xchg
hlt
fistp
bound
xchg
xor
hlt
adc
out
jb
clc
jmp
mov
xor
arpl
mov
(bad)
outs
xor
pop
ins
or
and
(bad)
(bad)
jmp
arpl
inc
xor
aas
stc
popf
test
add
mov
xor
(bad)
(bad)
(bad)
(bad)
fld
mov
xor
sbb
cld
scas
nop
test
hlt
sbb
jmp
jle
(bad)
(bad)
dec
pop
mov
in
xchg
xlat
mov
and
push
dec
inc
add
dec
push
and
data16
out
in
ret
xlat
(bad)
(bad)
(bad)
inc
add
ret
mov
xor
add
push
jl
das
pop
shr
inc
add
imul
push
out
lods
dec
ret
cmp
inc
push
test
arpl
inc
(bad)
inc
out
xor
xchg
idiv
leave
(bad)
ror
fwait
jmp
test
in
clc
jmp
(bad)
jmp
sbb
inc
inc
xor
xlat
xchg
frstor
lods
inc
xor
cmp
(bad)
mov
xchg
xor
mov
loope
outs
push
gs
jno
data16
hlt
jl
retf
jne
(bad)
(bad)
dec
and
mov
gs
std
push
cld
mov
je
sbb
cwde
sbb
lock
call
outs
cmps
std
fs
das
dec
lfence
imul
adc
loop
xor
(bad)
jmp
sbb
je
jecxz
test
div
ins
add
or
(bad)
push
cwde
mov
cmps
inc
inc
mov
jmp
bound
or
xchg
pop
jnp
adc
movs
sahf
mov
(bad)
sub
cmp
leave
mov
(bad)
(bad)
call
and
cmp
sahf
das
aaa
mul
xor
in
js
mov
add
jmp
js
leave
lock
push
dec
push
mov
mov
(bad)
(bad)
push
xchg
adc
es
cmp
add
mov
or
add
xchg
dec
inc
jo
mov
xor
jmp
(bad)
push
inc
outs
clc
mov
(bad)
(bad)
(bad)
(bad)
inc
jmp
dec
lock
adc
sbb
test
ja
lock
std
(bad)
(bad)
inc
mov
and
sbb
jg
inc
fnstsw
adc
test
das
clc
cmp
pop
xchg
sbb
(bad)
je
ret
mov
dec
xchg
pop
ja
in
cmp
xor
xchg
mov
shr
pop
loope
dec
sbb
or
pushf
pop
cmp
js
ror
and
pop
dec
or
xchg
xor
pop
jns
mov
inc
push
sahf
ret
or
mov
fwait
mov
sbb
(bad)
mov
add
fwait
sub
out
rol
or
test
fld
cmp
jg
enter
push
sbb
dec
aad
inc
movs
cmp
add
loope
mov
imul
pop
xor
test
add
fst
xor
js
mov
(bad)
(bad)
call
cmovs
outs
xor
pop
stos
push
popa
fstp
and
out
in
sub
mov
xor
jmp
mov
xor
cmc
leave
aas
mov
mov
lea
mov
(bad)
mov
xor
push
inc
dec
out
pop
pop
(bad)
jg
outs
push
out
fsubr
pop
call
push
and
xchg
jl
(bad)
mov
xchg
and
jle
std
xchg
(bad)
(bad)
jg
sbb
dec
scas
sbb
into
mov
push
ficomp
in
ja
outs
jb
mov
call
jl
adc
mov
ficom
pop
inc
xchg
cdq
outs
(bad)
(bad)
call
sub
cli
ss
mov
adc
cmc
add
call
dec
push
lods
test
test
iret
mov
mov
cmps
mov
pop
mov
mov
xchg
inc
rcl
xor
mov
inc
repz
sub
sub
mov
cmp
in
(bad)
pop
mov
pop
jae
into
adc
(bad)
(bad)
dec
lahf
push
mov
inc
adc
out
mov
pop
push
sub
xor
(bad)
adc
(bad)
(bad)
jmp
hlt
jno
sbb
mov
imul
movs
or
mov
das
adc
ja
mov
ss
and
movs
mov
or
(bad)
(bad)
(bad)
jmp
call
ret
(bad)
cmp
fimul
and
push
mov
push
test
dec
adc
xchg
mov
ficomp
cmp
retf
push
sbb
inc
pop
ret
clc
out
sti
add
jmp
ja
cmp
sub
dec
in
je
fcomip
(bad)
inc
ret
or
pop
scas
in
adc
and
sub
push
mov
mov
test
rcr
bound
bound
(bad)
shl
std
lds
sbb
nop
cld
(bad)
sub
push
push
ds
(bad)
(bad)
(bad)
inc
sub
adc
aam
mov
pop
cwde
retf
cmp
das
cmps
mov
sbb
jmp
arpl
das
repz
aam
sub
std
xchg
xchg
adc
(bad)
call
fld
(bad)
jp
shl
(bad)
sub
pop
ins
or
sub
(bad)
jo
and
fisub
fs
dec
out
lds
xchg
cmp
ja
ja
(bad)
xor
or
sub
(bad)
(bad)
inc
cld
mov
inc
xchg
jecxz
leave
jo
mov
push
je
pop
movs
pop
sbb
out
inc
mov
(bad)
(bad)
jmp
mov
push
aam
xor
call
xchg
(bad)
(bad)
mov
(bad)
dec
push
cmp
mov
mov
mov
sbb
ret
jmp
mov
lock
loope
js
bound
or
sbb
jmp
inc
push
popf
xor
or
push
jg
movs
mov
mov
mov
add
(bad)
(bad)
call
xbegin
jecxz
inc
js
mov
ret
mov
aaa
nop
pop
add
cmp
aaa
std
inc
mov
fidivr
mov
inc
xor
stos
mov
mov
inc
inc
jmp
sub
mov
add
push
jns
pushf
dec
push
sub
out
jns
mov
jmp
jge
mov
in
aam
cmp
and
push
jl
dec
out
push
push
shl
std
sbb
bound
int3
push
idiv
lds
and
fldcw
mov
(bad)
(bad)
(bad)
jmp
fs
daa
xchg
in
mov
sar
pop
push
call
inc
retf
stos
rcr
push
sbb
(bad)
(bad)
(bad)
(bad)
fcmovu
int
jne
shr
pop
xchg
mov
cmps
js
pop
ror
add
(bad)
(bad)
push
jg
cdq
dec
in
push
sbb
es
enter
add
daa
push
lods
call
mov
(bad)
(bad)
call
test
cwde
fs
dec
inc
mov
jle
stc
mov
xchg
cwde
in
mov
mov
push
lds
(bad)
call
xchg
mov
dec
lods
push
pop
aad
outs
or
scas
mov
jg
pop
sbb
mov
popa
mov
sub
jae
xchg
pop
loope
cmp
push
cli
call
sbb
add
out
in
add
scas
(bad)
inc
jp
sub
(bad)
retf
scas
inc
mov
movs
retf
(bad)
(bad)
(bad)
jmp
sahf
mov
hlt
outs
mov
ja
pop
outs
pushw
mov
sub
inc
mov
pop
out
sub
push
mov
(bad)
(bad)
mov
ins
and
in
into
dec
xchg
fild
mov
mov
pop
adc
cmp
ss
(bad)
sbb
pop
stos
sbb
mov
pop
or
pop
dec
jmp
dec
cdq
push
and
cmp
repnz
mov
(bad)
(bad)
call
into
dec
sub
div
out
mov
sbb
and
or
lods
into
jp
outs
clc
(bad)
fld
or
sub
add
bound
xor
jae
not
dec
inc
jp
ja
or
xchg
sub
daa
fwait
adc
(bad)
(bad)
(bad)
in
or
loope
mov
dec
ds
adc
cli
outs
sub
aaa
call
jno
icebp
fild
clc
xlat
push
mul
mul
std
shr
(bad)
(bad)
(bad)
(bad)
call
cdq
jge
push
mov
ins
mov
adc
xchg
out
sbb
outs
xor
(bad)
push
xor
sbb
aam
mov
inc
jecxz
test
push
icebp
jbe
pushf
pop
cmp
leave
mov
std
(bad)
push
fs
cs
and
adc
nop
lahf
cmp
sbb
fcomp
mov
inc
jo
mov
xchg
mov
mov
jae
mov
jmp
iret
xor
jae
sbb
cli
mov
fmul
sub
adc
inc
xor
jmp
dec
pop
sub
scas
mov
dec
cmp
jae
pop
or
xchg
xchg
add
push
outs
lods
cdq
lods
(bad)
(bad)
(bad)
(bad)
(bad)
cld
mov
mov
or
sub
arpl
sub
repz
add
(bad)
(bad)
(bad)
push
dec
shl
bound
or
in
sahf
inc
xor
cmp
xor
pop
out
mov
int3
ficomp
mov
mov
lds
dec
inc
jo
popf
dec
mov
out
push
fdiv
test
imul
push
adc
rcl
inc
int
and
dec
inc
stos
cli
movs
fwait
sbb
fidivr
push
xchg
js
fidivr
inc
dec
sbb
sbb
push
push
jae
xchg
in
dec
mov
jmp
(bad)
jge
retf
data16
jecxz
push
inc
ret
mov
in
or
push
fs
push
sar
jmp
push
std
jecxz
and
and
sub
inc
shl
(bad)
jmp
cwde
int
pop
mov
shl
popf
ins
push
inc
pop
(bad)
adc
hlt
xor
and
std
jmp
test
sub
mov
xchg
test
idiv
xor
(bad)
jns
adc
and
(bad)
(bad)
jg
add
(bad)
push
pop
sub
dec
pop
sub
mov
mov
cdq
cmp
(bad)
(bad)
(bad)
inc
mov
ja
lea
inc
add
cmp
mov
outs
(bad)
das
xchg
aam
shr
jmp
push
test
push
aad
xchg
retf
adc
cmp
das
mov
cmps
mov
sub
xchg
scas
mov
jne
cmp
cwde
out
(bad)
(bad)
dec
lods
icebp
mov
repz
jmp
shl
dec
fcomp
ror
cmps
dec
push
hlt
push
inc
sub
inc
mov
(bad)
(bad)
(bad)
(bad)
mov
sub
rol
push
shl
sub
jg
xchg
hlt
(bad)
(bad)
call
iret
cmps
loopne
or
dec
daa
mov
fadd
mov
ins
jns
jb
fwait
scas
clc
fistp
xor
sti
inc
push
cmp
(bad)
(bad)
(bad)
call
xchg
or
add
dec
jecxz
pushf
jnp
fcom
jmp
ja
xchg
jae
xchg
pop
clc
leave
lahf
(bad)
fnstenv
push
ror
mov
test
(bad)
call
pop
loopne
pop
jne
loope
mov
frstpm(287
rcl
(bad)
(bad)
inc
sub
lods
mov
or
imul
nop
xchg
jg
cmp
adc
xor
pop
test
mov
adc
xor
aaa
cld
(bad)
mov
lods
dec
xchg
xchg
xchg
add
sub
(bad)
(bad)
jmp
and
and
mov
pop
movs
inc
nop
pop
sub
jecxz
mov
loop
out
(bad)
(bad)
jmp
imul
xchg
cld
std
cmp
and
mov
fadd
dec
pushf
mov
fcomip
sbb
cmp
into
xor
sti
neg
jmp
push
push
inc
mov
fcmove
cwde
adc
pop
mov
jae
retf
(bad)
(bad)
jmp
xor
push
mov
jmp
les
push
and
std
pushf
cmp
(bad)
(bad)
mov
ja
xchg
xor
mov
loopne
loope
stos
jns
fistp
out
cmp
sub
iret
push
mov
jecxz
pop
hlt
mov
push
rcr
jo
(bad)
mov
mov
stc
js
pop
xchg
and
hlt
std
push
ja
repz
test
(bad)
(bad)
(bad)
jg
sbb
jb
(bad)
xlat
xchg
pop
ret
or
(bad)
jg
gs
mov
add
inc
cmp
mov
jmp
add
dec
stos
push
ret
(bad)
call
push
cmps
leave
or
pop
push
aas
and
dec
popf
cmp
mov
dec
xor
mov
leave
inc
and
(bad)
(bad)
mov
aas
dec
cmp
or
loopne
xchg
aas
ja
pop
cli
mov
jl
mov
adc
jmp
shr
fs
(bad)
pusha
mov
(bad)
(bad)
(bad)
jg
push
das
rcr
pop
cs
and
inc
(bad)
aam
rol
lea
(bad)
(bad)
(bad)
inc
cmp
cld
outs
out
ficomp
(bad)
dec
daa
je
cmps
loopne
cmps
fstp
mov
in
into
inc
das
clc
(bad)
(bad)
cmp
jmp
jmp
push
sbb
dec
xor
inc
(bad)
(bad)
(bad)
dec
jno
rcr
xor
in
push
adc
cld
sbb
xchg
dec
rol
jmp
inc
cmp
mov
pushf
mov
fs
jmp
cli
arpl
sbb
(bad)
(bad)
(bad)
dec
lods
xlat
mov
das
and
xchg
mov
mov
add
cmps
cld
jo
lds
jmp
fsub
mov
add
inc
fwait
push
out
(bad)
(bad)
(bad)
call
fs
inc
outs
dec
clc
ja
out
add
sbb
movs
call
dec
std
das
jmp
fdiv
cmp
rcr
cli
pop
add
(bad)
(bad)
fbld
fnsave
jmp
cmp
mov
out
pusha
dec
pop
jne
jg
dec
sub
jne
cmc
mov
jo
in
and
imul
outs
(bad)
fidiv
fcom
fadd
outs
out
or
ret
mov
cmp
dec
adc
(bad)
(bad)
dec
jle
add
and
movs
sub
fsub
dec
mov
inc
xchg
pop
inc
dec
mov
je
xor
push
xchg
push
jbe
mov
(bad)
(bad)
(bad)
jmp
ins
adc
mov
imul
xor
cli
add
push
ins
mov
(bad)
jg
jmp
mov
xor
in
mov
fild
push
or
popf
(bad)
(bad)
(bad)
jmp
pusha
push
pop
xchg
pop
sbb
mov
pop
out
das
loope
dec
retf
mov
retf
sar
call
cmp
push
neg
mov
outs
icebp
(bad)
(bad)
call
repz
adc
xor
or
popf
scas
add
not
ds
add
aad
pop
sbb
loop
in
xor
jo
xchg
clc
jg
js
js
push
jp
pusha
push
jmp
movs
xchg
jnp
loop
ja
push
mov
pushf
(bad)
(bad)
(bad)
call
lods
mov
cs
aaa
out
dec
inc
and
aas
sub
lds
sub
(bad)
(bad)
(bad)
js
mov
in
leave
lock
push
adc
sbb
cmc
fucomi
jb
add
xchg
(bad)
(bad)
(bad)
jmp
dec
pop
jae
out
adc
pop
cdq
mov
add
mov
enter
(bad)
call
es
jle
add
cwde
xchg
add
cmp
cmps
dec
adc
add
mov
gs
cmps
jns
mov
jge
xchg
sbb
cmp
not
inc
xlat
jmp
aaa
sahf
mov
data16
jle
mov
or
call
(bad)
jmp
dec
scas
lods
js
ret
rcl
movs
mov
(bad)
(bad)
(bad)
call
fist
xor
mov
cmp
std
xor
(bad)
push
jb
xlat
(bad)
(bad)
(bad)
call
xchg
clc
pop
mov
in
cmp
jg
call
jg
cli
ins
(bad)
mov
lds
out
(bad)
(bad)
(bad)
(bad)
out
call
sbb
(bad)
int
daa
shl
adc
std
retf
or
cmp
(bad)
jg
mov
mov
mov
jb
xchg
push
pushf
add
imul
(bad)
call
cwd
cmp
cmp
push
(bad)
shl
jmp
push
inc
faddp
push
xor
cmc
loope
mov
push
fucomp
mov
xchg
xor
pushf
popf
mov
cmp
push
sti
cmps
into
stos
(bad)
jmp
cmc
xor
(bad)
jb
clc
fiadd
(bad)
(bad)
(bad)
call
sub
mov
xor
movs
(bad)
stc
jns
ret
adc
aam
mov
(bad)
(bad)
jmp
(bad)
pop
(bad)
int3
jbe
lods
mov
test
std
lods
mov
gs
out
(bad)
jecxz
lahf
inc
push
mov
or
dec
sar
stos
js
cdq
stos
add
test
out
cdq
pop
cmp
xchg
jb
jae
nop
inc
out
xor
jmp
and
mov
in
mov
dec
out
gs
(bad)
(bad)
(bad)
call
fld
adc
int3
xor
pop
cld
lods
dec
ror
mov
fisub
imul
(bad)
mov
test
sbb
xor
fcomip
sbb
movs
mul
push
jo
scas
clc
(bad)
jmp
out
js
es
jmp
mov
pop
adc
ficomp
js
sahf
jg
cli
mov
mov
jge
fiadd
sahf
movs
jmp
retf
nop
outs
fistp
dec
ss
mov
sub
dec
jno
cmp
std
hlt
rol
or
(bad)
(bad)
fidiv
and
cwde
mov
jmp
loope
(bad)
fcomip
mov
(bad)
mov
arpl
or
sbb
(bad)
(bad)
dec
push
inc
jbe
retf
popf
jae
mov
shl
aad
add
cmp
inc
push
jp
addr16
sar
rcr
cmp
jmp
hlt
outs
loop
xchg
sbb
and
sub
cli
in
aas
mov
mov
mov
or
cmp
fcomip
dec
movs
push
ret
or
jmp
fmul
mov
(bad)
(bad)
push
std
dec
nop
push
mov
mov
sub
adc
jb
xchg
dec
or
dec
popf
mul
or
loope
sbb
(bad)
(bad)
call
mov
push
dec
pop
dec
cld
or
loop
push
inc
daa
cmc
les
jecxz
(bad)
mov
test
aam
fbld
clc
cdq
retf
(bad)
xor
sub
jnp
push
lds
pop
ins
test
sub
mov
sbb
push
int
dec
mov
cmps
leave
iret
or
xor
inc
enter
jnp
(bad)
scas
(bad)
(bad)
inc
fcom
sbb
mov
lahf
lods
xor
pop
mov
xchg
sub
push
fidiv
ret
outs
loope
daa
dec
into
call
add
mov
mov
mov
jno
lods
(bad)
pop
(bad)
(bad)
jmp
mov
fistp
and
xor
(bad)
rol
dec
(bad)
pop
(bad)
push
rcr
xor
aam
scas
lods
retf
inc
jb
add
cli
sub
push
mov
mov
(bad)
cwde
sub
fadd
mov
jmp
or
xchg
stc
dec
inc
mov
push
mov
stos
cli
jnp
add
mov
pop
pop
loop
(bad)
(bad)
(bad)
jmp
ret
and
les
add
mov
repnz
sub
(bad)
(bad)
(bad)
dec
mov
jne
add
pop
mov
mov
xor
mov
push
inc
adc
sti
outs
cli
(bad)
(bad)
in
mov
push
out
aam
xchg
iret
arpl
mov
jb
int
jmp
aad
and
jmp
aad
push
setle
push
pop
fdiv
movs
inc
stos
sbb
fldcw
ss
(bad)
ret
(bad)
(bad)
(bad)
jmp
adc
mov
loopne
loope
popa
push
repnz
jbe
push
rep
ds
pop
mov
(bad)
call
xchg
or
stc
jnp
repnz
stc
not
push
imul
rol
adc
mov
xchg
and
imul
sub
ja
lea
cmp
nop
or
arpl
pop
mov
lds
sbb
push
hlt
movs
sub
stc
(bad)
(bad)
dec
pusha
cmc
ja
ja
mov
push
cmps
scas
inc
add
movs
iret
xchg
and
(bad)
(bad)
inc
nop
aam
pusha
jge
xchg
(bad)
das
push
pushf
clc
ss
retf
fabs
jl
add
std
(bad)
(bad)
inc
or
mov
test
cdq
push
jmp
test
in
in
cmps
jmp
xor
in
test
or
xchg
pop
dec
lods
and
stc
and
mov
lahf
(bad)
(bad)
inc
and
mov
jecxz
sbb
cwde
loope
adc
mov
lea
mov
dec
mov
adc
js
popf
stos
fild
cs
mov
xchg
pop
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
pop
test
int
push
call
test
push
pop
out
mov
test
(bad)
(bad)
(bad)
call
jle
inc
retf
cmc
mov
hlt
xchg
add
(bad)
xchg
inc
call
xor
cmps
jmp
or
adc
lods
daa
bound
and
sahf
push
(bad)
(bad)
jg
and
cli
(bad)
movs
or
add
out
cmps
mov
or
dec
sub
xlat
scas
or
xchg
int3
frstor
test
clc
jbe
sahf
out
(bad)
jmp
(bad)
stc
out
inc
inc
xchg
fmul
popf
xchg
xor
fisttp
(bad)
cmp
(bad)
(bad)
(bad)
jg
inc
push
xchg
call
aas
mov
(bad)
sbb
pop
loopne
jge
sub
iret
fisub
dec
fstp
and
mov
lds
je
in
scas
pop
in
into
xchg
mov
pop
fstp
rcr
lock
jmp
sbb
mov
jmp
xlat
lods
rcl
pop
sahf
sbb
push
(bad)
dec
outs
pop
ds
retf
cld
fwait
aaa
sahf
popf
mov
(bad)
sub
xchg
(bad)
(bad)
(bad)
(bad)
mov
outs
(bad)
je
jb
xor
push
and
mov
cmp
cmp
das
inc
ss
sahf
cld
mov
push
lods
in
retf
sbb
out
add
sahf
xchg
(bad)
(bad)
(bad)
call
or
push
cwde
jge
pop
mov
xor
les
jge
jo
push
(bad)
(bad)
cmp
adc
add
jmp
push
popf
add
and
mov
(bad)
(bad)
cmp
mov
ret
xor
out
shl
dec
outs
ins
cli
mov
lds
mov
dec
xchg
iret
je
sub
and
psraw
or
or
mov
scas
sahf
test
je
cmp
call
xchg
xor
movs
xor
xor
fld
or
fnstsw
das
adc
shr
push
jmp
jnp
(bad)
dec
gs
fidiv
popa
add
(bad)
(bad)
(bad)
call
push
(bad)
out
out
mov
adc
or
ins
in
pop
push
iret
icebp
(bad)
(bad)
inc
and
and
push
sti
xchg
test
mov
lods
cmps
(bad)
fistp
les
xchg
push
rcl
cmp
and
aaa
retf
jp
xor
cmp
adc
call
jo
mov
and
fisubr
outs
rol
inc
pop
outs
add
inc
dec
fwait
mov
js
push
scas
push
in
and
and
jg
das
lahf
add
loope
pop
push
out
mov
mov
cmp
xor
(bad)
mov
jmp
test
mov
sbb
push
sub
dec
pop
div
fst
aaa
(bad)
(bad)
(bad)
push
js
push
mov
mov
ins
and
and
aad
popf
mov
clc
inc
mov
pushf
fistp
mov
(bad)
push
mov
sub
les
xor
sub
in
mov
add
jmp
sub
dec
call
arpl
inc
push
xchg
or
cmp
push
gs
stos
mov
xor
ins
jnp
xchg
push
sbb
xchg
(bad)
(bad)
jmp
mov
or
ins
mov
shr
sti
and
and
out
icebp
leave
arpl
inc
std
push
cld
push
inc
adc
mov
ret
movs
ins
mov
dec
data16
cwd
mov
mov
and
sbb
mov
dec
fs
and
in
rcr
bound
xor
mov
push
movs
(bad)
jmp
jns
cmp
pushf
add
jnp
(bad)
gs
jp
arpl
push
inc
test
mov
add
jae
rcr
cli
push
shl
cdq
sti
shl
(bad)
(bad)
ds
xchg
imul
llwpcb
or
pop
mov
push
mov
adc
sub
(bad)
(bad)
(bad)
inc
dec
retf
and
sbb
push
adc
jae
into
aaa
fs
(bad)
pushf
outs
xchg
adc
call
fmul
cmp
inc
sub
(bad)
mov
ror
mov
std
xchg
pop
loopne
shr
imul
call
cld
pop
adc
into
inc
or
out
xor
dec
icebp
and
nop
in
(bad)
(bad)
(bad)
call
mov
sahf
outs
pushf
push
xlat
rep
loop
movs
(bad)
jmp
mov
xor
(bad)
(bad)
(bad)
call
(bad)
(bad)
xor
mov
pop
cmp
mov
cmp
cmp
rol
pop
loopne
push
push
adc
or
(bad)
(bad)
(bad)
(bad)
jg
mov
pop
cld
sti
cwd
test
jl
dec
fdivr
aaa
sub
(bad)
push
imul
(bad)
(bad)
push
and
lods
jle
push
(bad)
sti
mov
or
mov
mov
repnz
dec
call
nop
xor
mov
into
xchg
nop
ins
int
ror
js
pop
jno
fisubr
int
jbe
call
int3
rcr
test
test
lds
stos
push
add
dec
pop
lds
sub
(bad)
jmp
iret
and
jns
push
fs
sbb
ss
jl
outs
mov
push
call
mov
loopne
jnp
sahf
js
mov
or
push
lds
in
push
push
push
out
(bad)
(bad)
(bad)
dec
sbb
int
lea
imul
out
push
mov
or
clc
(bad)
(bad)
out
xor
(bad)
inc
push
mov
sahf
and
in
out
(bad)
(bad)
(bad)
inc
push
lea
les
mov
scas
in
xchg
lods
jne
add
jmp
jmp
test
adc
dec
xchg
dec
popa
sub
jg
enter
(bad)
(bad)
(bad)
push
call
add
adc
mov
pop
fidiv
(bad)
stos
(bad)
adc
sbb
jmp
mov
lahf
xor
outs
mov
xor
dec
aaa
xchg
pop
dec
xchg
jl
(bad)
call
aaa
push
inc
cld
ins
mov
dec
test
imul
in
mov
jnp
sahf
cmp
pop
sub
inc
in
sbb
fs
sti
(bad)
test
(bad)
(bad)
(bad)
call
inc
pop
pop
ins
adc
inc
push
xchg
dec
sti
lock
pushf
loopne
or
lods
in
int
jne
(bad)
(bad)
(bad)
inc
xchg
lock
cmp
lahf
pop
add
mov
sub
fistp
bound
hlt
(bad)
(bad)
push
outs
sub
fild
cmp
shr
lahf
push
outs
pop
loop
cld
call
das
ja
call
jecxz
inc
hlt
push
sti
mov
movs
pop
scas
in
(bad)
(bad)
(bad)
jmp
mov
int3
in
push
int
xor
ror
data16
mov
jmp
add
(bad)
pop
pop
pop
hlt
(bad)
(bad)
(bad)
jl
lods
loopne
je
in
data16
les
sbb
lahf
push
repz
(bad)
(bad)
(bad)
dec
pop
and
mov
das
or
xor
xor
push
je
xor
loopne
pop
cld
push
dec
ret
loopne
adc
iret
cmp
stc
imul
(bad)
out
outs
mov
sub
or
xchg
jo
add
(bad)
dec
popa
aaa
lods
jecxz
push
push
outs
(bad)
push
daa
sub
ficomp
cmp
enter
push
into
clc
out
jecxz
mov
sbb
lea
add
retf
sub
(bad)
(bad)
(bad)
(bad)
call
pop
mov
cmp
cmp
fldcw
or
adc
aas
fdivr
pop
call
or
mov
xor
and
and
(bad)
sar
and
fldcw
adc
inc
jl
pop
popf
dec
jbe
aad
mov
lock
jl
xor
call
cs
push
stc
xor
jb
cs
mov
jmp
cmps
(bad)
test
push
pop
sbb
pop
push
xchg
xor
aad
fdivr
(bad)
call
movs
test
or
or
outs
sub
ror
mov
inc
(bad)
(bad)
(bad)
inc
sub
cmp
jno
xchg
jns
mov
or
(bad)
fs
and
fs
call
cmp
jp
xchg
and
and
out
loope
jmp
pop
sar
push
pop
pmuludq
cmps
cmp
fild
out
cmp
xlat
out
(bad)
(bad)
mov
lahf
fdiv
in
out
pop
sub
ss
push
sub
clc
jbe
movs
add
aad
int3
pop
jo
ficomp
push
(bad)
push
aad
aam
sbb
cmp
repz
sub
xchg
inc
(bad)
(bad)
fsubr
(bad)
jmp
jg
ret
mov
cmp
ja
sbb
(bad)
call
(bad)
(bad)
(bad)
(bad)
jnp
xchg
jno
xchg
in
xchg
sub
ds
shr
adc
retf
xchg
call
or
mov
mov
je
(bad)
(bad)
(bad)
call
adc
cmp
pop
inc
dec
lods
fisubr
inc
jecxz
ss
fcmovne
ds
int3
(bad)
(bad)
(bad)
jmp
or
pop
inc
jae
sbb
fadd
sti
movs
fistp
sti
popf
jg
or
pushf
cld
idiv
add
mov
jge
fcmovnb
ds
fisttp
lahf
call
pusha
and
cmp
or
xchg
inc
cmp
xchg
mov
std
jg
mov
mov
xchg
sub
sub
(bad)
(bad)
jmp
add
mov
(bad)
das
addr16
inc
dec
and
cwde
(bad)
inc
xor
call
cmps
pushf
leave
or
addr16
popf
icebp
sub
mov
push
ss
(bad)
(bad)
call
mov
imul
jo
pop
adc
push
cmps
mov
jg
gs
data16
pop
fwait
call
cmp
mov
push
fiadd
sub
xchg
push
into
sti
adc
sbb
push
mov
jg
test
call
out
jmp
(bad)
(bad)
mov
fwait
pop
popf
loopne
cmp
and
adc
test
or
(bad)
(bad)
call
or
ror
les
xor
sbb
pop
fs
dec
enter
dec
(bad)
(bad)
(bad)
inc
in
enter
daa
ja
push
ja
and
jle
mov
rol
ds
mov
(bad)
inc
mov
imul
inc
fsub
xchg
scas
nop
mov
inc
daa
shl
xchg
jl
add
mov
adc
std
aad
mov
inc
std
in
leave
xchg
push
aad
(bad)
dec
xor
cmp
push
jae
add
dec
pop
out
or
(bad)
(bad)
push
out
push
cmp
cmps
mov
stc
in
sti
xor
xchg
sbb
push
retf
std
mov
clc
call
sbb
in
mov
adc
jmp
in
xchg
lea
rcr
retf
(bad)
call
popa
pop
xor
inc
ins
cmps
add
cmp
shr
xor
icebp
pop
push
ins
mov
inc
xor
jo
inc
mov
mov
test
scas
inc
lock
(bad)
call
das
sub
sbb
push
mov
cld
sahf
out
mov
dec
and
cbw
xchg
outs
jle
shl
test
(bad)
(bad)
(bad)
call
pop
push
pusha
pop
mov
in
dec
into
iret
test
mov
(bad)
mov
in
or
cli
dec
push
bnd
xchg
mov
inc
add
ins
push
mov
out
jmp
(bad)
(bad)
(bad)
(bad)
std
adc
dec
lods
aaa
fs
pop
dec
jp
rcr
xchg
loope
dec
xchg
imul
adc
(bad)
inc
aaa
cmp
aam
mov
(bad)
dec
stc
retf
(bad)
jb
movs
inc
mov
cmp
in
inc
sub
and
mov
xchg
add
call
mov
inc
jns
add
les
ja
pop
xchg
xor
inc
(bad)
push
dec
pop
xchg
cli
(bad)
(bad)
in
icebp
int
lods
outs
jo
in
ss
aam
jmp
fidiv
cli
add
push
fs
into
test
jmp
test
jl
shr
and
nop
adc
bts
pop
popa
sub
mov
(bad)
(bad)
mov
imul
jge
sub
fwait
and
jl
xor
mov
jb
dec
sbb
jmp
pop
inc
sbb
pop
in
mov
sub
aas
leave
cld
mov
out
pusha
mov
out
jns
cmp
xor
add
out
fdivp
(bad)
scas
(bad)
jmp
dec
inc
aaa
xchg
inc
dec
add
and
aas
dec
or
cmp
mov
ret
xor
outs
sub
(bad)
out
mov
jl
pop
or
aam
sub
lods
jmp
clc
(bad)
mov
jg
dec
stc
mov
or
xchg
test
lahf
push
mov
and
and
and
mov
push
jmp
(bad)
pop
stos
push
and
retf
mov
jp
out
retf
sub
outs
clc
(bad)
cmp
imul
das
xchg
push
mov
jne
xor
mov
std
(bad)
(bad)
(bad)
std
fld
lods
mov
inc
adc
(bad)
pop
cmc
jbe
jp
xchg
movs
pop
mov
mov
mov
std
pop
add
fisttp
stos
adc
mov
inc
call
cmc
mov
mov
pop
lods
xor
movs
fsubr
dec
ins
or
jmp
jmp
inc
or
xchg
adc
shr
mov
fs
outs
sar
call
pop
pop
lahf
mov
cmp
or
mov
out
sbb
call
ins
inc
neg
jnp
mov
cmp
jp
in
call
xlat
rol
inc
fadd
jmp
je
and
imul
pop
gs
inc
js
xchg
inc
ret
xor
(bad)
(bad)
jmp
inc
ss
enter
add
movs
(bad)
jns
push
mov
inc
fxam
retf
outs
push
(bad)
(bad)
call
test
and
sbb
adc
cmps
push
imul
cmp
cli
aaa
dec
mov
xor
movs
(bad)
(bad)
(bad)
call
xchg
fisubr
and
mov
addr16
js
lock
fistp
in
cli
(bad)
dec
sbb
ins
adc
fs
test
pop
or
dec
out
add
jp
pop
(bad)
(bad)
jmp
push
test
push
test
mov
adc
push
mov
jmp
pop
ret
xchg
pop
jno
push
xchg
aad
jne
push
xor
(bad)
(bad)
jmp
push
clc
dec
fwait
nop
dec
xchg
ror
dec
imul
sbb
(bad)
call
out
sub
mov
and
or
inc
shr
(bad)
(bad)
(bad)
(bad)
(bad)
xor
xor
pop
rcl
(bad)
addr16
cld
push
push
push
xchg
and
ins
pop
sub
(bad)
(bad)
jle
cmp
adc
fisttp
loopne
(bad)
fbstp
mov
adc
popa
int3
ins
dec
in
fbld
(bad)
mov
push
push
mov
inc
mov
mov
pusha
xchg
in
aas
test
adc
mov
(bad)
(bad)
call
sar
jmp
add
jmp
xor
xor
mov
dec
cmp
(bad)
(bad)
(bad)
mov
(bad)
sub
xchg
mov
dec
mov
xlat
add
sbb
push
cli
(bad)
(bad)
(bad)
js
pop
lea
sti
in
movs
dec
cmps
push
push
push
outs
fs
push
imul
es
ret
bound
idiv
out
out
xchg
sub
icebp
gs
(bad)
(bad)
(bad)
mov
shl
and
add
sti
(bad)
jmp
aad
lods
jmp
pop
lahf
inc
mov
enter
(bad)
in
push
dec
inc
inc
stc
adc
jp
sahf
sbb
cmp
pop
cmp
push
call
shl
(bad)
(bad)
(bad)
call
mov
nop
inc
es
add
gs
in
test
retf
stos
aad
in
sub
lods
fdivr
(bad)
(bad)
(bad)
push
mov
inc
pop
jnp
int
inc
dec
jns
jle
in
test
inc
addr16
imul
ret
cli
sub
pop
ds
push
jo
(bad)
push
add
js
popf
rcr
(bad)
sti
outs
mov
jge
and
out
call
push
sub
push
icebp
cmc
(bad)
jmp
scas
cli
(bad)
jg
xchg
popf
mov
and
sub
pop
jo
xor
iret
(bad)
(bad)
(bad)
jmp
adc
sub
pushf
enterw
lods
and
call
add
xchg
xor
(bad)
sub
bound
lods
lods
mov
mov
int
popa
inc
xchg
or
push
repnz
fwait
mov
jmp
(bad)
push
pop
mov
std
clc
dec
pushf
aad
call
fst
int
pop
out
repnz
xchg
imul
ss
(bad)
ja
mov
(bad)
xor
into
cmp
(bad)
xlat
enter
jb
call
movs
push
(bad)
in
dec
jns
add
nop
mov
cld
jmp
or
int3
ja
sar
les
jae
mov
test
dec
in
out
(bad)
jg
test
cmp
pop
pop
mov
inc
inc
inc
mov
shl
(bad)
(bad)
inc
xchg
and
xchg
arpl
arpl
neg
mul
or
(bad)
mov
in
leave
cmps
xor
ins
cmp
pop
dec
xchg
clc
sub
lods
stos
jnp
(bad)
(bad)
(bad)
(bad)
jge
aad
std
jo
mov
mov
dec
mov
ins
jg
sti
jb
iret
mov
stos
mov
std
(bad)
(bad)
fld
cmp
ja
add
cmp
addr16
ja
mov
test
(bad)
(bad)
(bad)
push
cld
dec
call
jg
xchg
fs
fld
(bad)
fstp
pop
mov
lods
pop
inc
push
mov
pop
pop
push
icebp
stos
mov
mov
js
dec
(bad)
repz
(bad)
(bad)
(bad)
fild
stc
inc
cmp
movs
jecxz
aad
js
cmp
nop
ja
(bad)
(bad)
call
std
jmp
cmp
mov
repnz
lods
call
sbb
call
cmp
or
repz
inc
cdq
inc
xor
call
lods
mov
retf
inc
lds
mov
arpl
and
xchg
sbb
std
(bad)
(bad)
jmp
mov
add
cmps
mov
lods
cmc
inc
add
clc
pop
imul
xchg
or
adc
mov
enter
or
jle
sub
(bad)
out
mov
push
sti
shl
ret
push
pushf
dec
(bad)
out
lods
adc
or
scas
cmp
mov
lahf
(bad)
push
fwait
fs
inc
jb
int3
lds
mov
jo
cmp
mov
mov
or
xor
push
cmps
ret
cld
cmp
(bad)
(bad)
(bad)
(bad)
call
aas
push
bound
int
inc
mov
mov
pop
mov
jecxz
and
xor
(bad)
(bad)
(bad)
jmp
in
push
imul
dec
pop
or
add
in
scas
into
fdiv
(bad)
inc
mov
fwait
in
jno
(bad)
xchg
in
mov
jno
outs
test
jmp
ret
lock
add
or
cld
call
or
dec
inc
cmp
or
mov
jne
push
outs
or
movs
test
xor
inc
jg
sub
cs
repnz
pop
sbb
sahf
ins
adc
mov
adc
pop
xor
aam
lock
ins
lods
(bad)
pop
pop
or
aaa
dec
(bad)
(bad)
(bad)
fild
mov
sub
repz
xchg
xlat
test
jnp
mov
push
pop
dec
sub
(bad)
jmp
sbb
push
xchg
out
xor
fwait
dec
les
call
jmp
(bad)
inc
dec
(bad)
(bad)
popf
sti
(bad)
mov
fucomi
add
xor
hlt
adc
dec
fcom
xchg
or
out
adc
outs
push
pushf
sub
clc
int3
adc
(bad)
inc
lea
les
xor
xor
xor
pop
std
rol
neg
std
push
jl
repz
aas
pushf
stos
push
mov
inc
pop
test
cld
push
cwde
or
inc
leave
imul
(bad)
(bad)
(bad)
jg
data16
inc
mov
jns
cmp
mov
sub
xchg
retf
mov
sub
inc
fucomi
xchg
outs
jp
sbb
push
(bad)
clc
ret
dec
pushf
xor
jmp
jecxz
xchg
pop
mov
scas
int3
fwait
jo
jo
cvtpi2ps
test
(bad)
(bad)
jmp
xchg
sub
ret
shr
jne
pop
mov
imul
call
cmps
push
out
cmp
call
dec
sub
push
xchg
jl
(bad)
(bad)
push
int3
xchg
cmp
jns
xchg
loopne
pop
jns
jmp
outs
icebp
out
mov
fs
stc
xchg
dec
rcr
test
jno
inc
mov
aaa
add
push
fld
test
mov
enter
adc
cld
imul
cmp
jbe
data16
loope
das
(bad)
(bad)
(bad)
inc
mov
or
xchg
cld
nop
std
and
inc
movs
push
cwde
jge
push
ins
aad
imul
in
(bad)
push
xchg
cmp
push
or
add
jge
test
in
cmp
mov
je
dec
fs
add
mov
(bad)
(bad)
dec
push
(bad)
pop
test
xchg
loopne
cld
lods
jmp
dec
loope
stos
cmp
cli
add
ret
pop
jl
sub
(bad)
push
cmp
outs
xchg
std
(bad)
(bad)
mov
les
or
sub
das
pop
addr16
adc
(bad)
call
mov
pop
mov
cmps
mov
daa
jns
ja
clc
cmc
mov
lods
add
jmp
(bad)
out
push
inc
mov
sbb
fsub
test
xor
inc
stos
jg
daa
fnstsw
imul
test
shr
leave
mov
cmps
fs
push
fwait
out
mov
popa
push
hlt
es
xor
cld
aaa
sbb
pop
adc
jmp
jo
scas
adc
scas
stc
xchg
jb
(bad)
call
add
adc
mov
mov
cdq
aam
into
jb
mov
mov
mov
mov
jb
enter
(bad)
(bad)
inc
pop
xchg
mov
les
in
scas
mov
pop
test
inc
pop
mov
(bad)
lods
dec
sub
clc
std
call
es
fistp
mov
out
fistp
jbe
xor
jmp
cmps
cmp
or
dec
add
dec
hlt
cmp
stos
out
(bad)
(bad)
(bad)
jle
and
push
js
test
push
push
fnstsw
shr
das
xchg
(bad)
(bad)
(bad)
call
pop
addr16
aad
jne
push
xchg
inc
xlat
add
mov
(bad)
(bad)
(bad)
inc
xor
movs
and
data16
push
push
fisubr
xchg
movs
xchg
addr16
(bad)
(bad)
dec
mov
das
call
pop
test
(bad)
mov
ror
icebp
(bad)
(bad)
(bad)
jl
test
out
jbe
cmp
push
jp
enter
fstp
(bad)
mov
and
clc
aad
dec
pop
and
xchg
xchg
and
adc
cs
pop
push
dec
mov
cwde
in
(bad)
lods
cmps
mov
pop
lea
fwait
ja
mov
cs
repz
push
(bad)
mov
fild
fs
bound
sbb
repz
(bad)
push
push
add
or
ins
push
ja
jmp
sub
mov
(bad)
(bad)
(bad)
(bad)
jnp
cmp
in
jmp
adc
sar
out
rol
push
in
jl
or
(bad)
(bad)
fadd
ins
push
ror
data16
outs
les
(bad)
shr
adc
mov
push
enter
xchg
(bad)
dec
scas
scas
loop
ror
jo
pop
int3
jno
mov
jno
xor
jb
xchg
icebp
inc
and
or
jne
scas
dec
ds
dec
test
in
sub
lods
jae
retf
xchg
xchg
sub
jo
daa
clc
(bad)
(bad)
(bad)
clc
jg
xor
popf
fcmove
js
dec
lea
bswap
enter
in
inc
sbb
not
daa
(bad)
(bad)
(bad)
(bad)
jmp
lods
mov
jbe
dec
xlat
rol
sub
dec
mov
adc
add
mov
dec
(bad)
rcr
sbb
xchg
adc
outs
sub
fdiv
xchg
aam
(bad)
cmp
inc
jo
scas
mov
mov
inc
sbb
jecxz
test
(bad)
(bad)
mov
xor
jbe
inc
cvtps2pd
fldcw
jge
cmps
fld
jmp
test
(bad)
push
(bad)
repz
(bad)
mov
push
sbb
push
(bad)
sahf
inc
pop
or
(bad)
cmp
jne
std
xchg
pop
mov
cs
jg
lock
addr16
mov
cdq
sti
mov
ja
std
stc
fisttp
cmp
lea
push
mov
fcomp
inc
jle
test
(bad)
and
jb
push
inc
push
(bad)
mov
adc
(bad)
dec
and
mov
int3
jp
pop
mov
cmps
pop
cmps
and
(bad)
(bad)
push
es
lahf
aaa
test
inc
and
mov
mov
and
out
mov
adc
fld
(bad)
stos
cmp
test
div
addr16
cmp
test
(bad)
(bad)
call
or
hlt
ficomp
add
sbb
xchg
ror
push
test
loop
call
adc
push
mov
and
pop
(bad)
(bad)
(bad)
call
push
dec
or
add
inc
mov
enter
jle
pop
push
push
scas
aad
cld
(bad)
(bad)
jmp
dec
cmp
sub
mov
pop
pop
sub
xchg
xchg
sahf
jg
jl
xor
sbb
jg
sub
and
std
test
dec
mov
and
lods
enter
and
mov
loope
push
mov
(bad)
jmp
in
aad
pop
adc
out
stos
fdivr
sub
daa
cmc
adc
pop
outs
(bad)
(bad)
(bad)
jmp
add
adc
mov
and
xchg
xchg
xor
cmp
push
rcl
(bad)
(bad)
(bad)
jmp
rcr
and
add
sub
mov
rcl
popa
adc
lahf
jmp
sbb
(bad)
popa
sub
(bad)
in
jmp
dec
mov
mov
cwde
fimul
jb
inc
je
sahf
inc
push
clc
(bad)
jmp
cmp
in
imul
shr
push
fldln2
cmp
cmp
(bad)
rol
lds
(bad)
(bad)
dec
pop
cmp
and
inc
mov
in
shl
aas
mov
xchg
(bad)
(bad)
(bad)
fsub
and
jmp
adc
pushf
jbe
outs
leave
cld
push
in
out
sbb
mov
scas
mov
cmp
mov
(bad)
(bad)
call
push
enter
xlat
inc
out
movs
and
mov
inc
add
cmp
test
loope
push
and
jmp
push
or
push
push
adc
clc
(bad)
call
dec
and
ja
and
(bad)
(bad)
inc
add
or
add
(bad)
not
sbb
cmp
(bad)
(bad)
(bad)
(bad)
fstp
push
aaa
bound
ja
jbe
je
mov
fld
cmp
repz
scas
pop
and
lea
in
iret
mov
movs
cmps
inc
cmp
(bad)
jle
mov
pop
inc
jo
push
mov
pop
sub
(bad)
retf
in
dec
(bad)
(bad)
call
add
aam
mov
xlat
stos
in
pop
mov
inc
lahf
rcr
push
aas
pushf
pop
(bad)
jmp
mov
call
pop
pop
mov
pop
fadd
(bad)
(bad)
(bad)
inc
imul
aad
stos
and
push
loopne
and
push
add
repz
stc
mov
(bad)
(bad)
(bad)
jmp
mov
cmp
loop
mov
add
inc
mov
mov
mov
loopne
mov
mov
ret
cmp
xchg
cwde
imul
mov
aam
in
xor
frstor
shr
add
pop
push
shl
movs
cmps
push
xchg
retf
cdq
and
aad
(bad)
(bad)
call
hlt
dec
into
leave
xor
in
aaa
push
and
(bad)
mov
push
cmp
movs
xchg
pop
or
(bad)
mov
sub
mov
cmp
int
cld
call
pop
rcl
mov
push
mov
bound
add
sbb
push
jbe
ds
fstp
sbb
pop
fcmovne
into
lods
mov
jne
(bad)
(bad)
(bad)
call
icebp
retf
adc
dec
out
push
pop
dec
push
popf
test
nop
lods
add
add
inc
sar
jmp
inc
jnp
leave
(bad)
xor
mov
scas
test
mov
lock
xor
neg
fst
and
jae
mov
ds
dec
add
call
repz
(bad)
mov
(bad)
add
rcl
dec
test
test
mov
inc
or
and
dec
sbb
sub
lods
jle
fild
or
and
div
(bad)
mov
inc
lahf
je
(bad)
jg
inc
push
int3
sbb
pop
add
or
(bad)
out
adc
fbld
push
mov
int3
xchg
not
mov
dec
xor
into
mov
loop
mov
(bad)
(bad)
(bad)
ds
adc
cdq
jo
inc
enter
sub
xchg
sub
loope
scas
or
rol
fs
pop
inc
es
(bad)
(bad)
(bad)
fcomp
sbb
push
cmps
fwait
xor
mov
aaa
not
stc
ror
xchg
push
neg
(bad)
(bad)
(bad)
jmp
stos
dec
mov
dec
mov
inc
in
or
sbb
add
out
shl
inc
dec
cwde
call
sbb
or
sahf
inc
push
xor
mov
jne
enter
push
add
jb
(bad)
push
inc
into
push
outs
xor
mov
jg
add
cmp
fst
into
pusha
dec
pop
adc
mov
cwde
xchg
dec
push
imul
add
mov
sub
jbe
lds
mov
mov
jmp
loope
xor
pop
push
ffree
(bad)
fnstenv
ins
mov
fistp
pop
sbb
lods
dec
imul
mov
xor
movs
test
adc
scas
sbb
add
sub
dec
mov
(bad)
call
cmp
cmp
mov
jg
(bad)
mov
test
aaa
dec
sahf
and
jbe
fs
mov
movs
outs
mov
cmp
(bad)
jmp
scas
test
pop
test
mov
pop
shr
add
addr16
push
push
(bad)
(bad)
(bad)
(bad)
fimul
fcmovb
fnstsw
(bad)
ds
mov
imul
pop
or
ror
hlt
push
push
ds
sub
jg
sbb
(bad)
(bad)
(bad)
push
push
adc
mov
xor
mov
mov
into
dec
mov
nop
popf
(bad)
(bad)
(bad)
(bad)
(bad)
dec
addr16
push
push
jg
mov
cmp
imul
and
bound
or
rol
or
test
mov
fcom
mov
cmp
not
add
stos
lds
or
adc
or
sti
(bad)
(bad)
jmp
ror
std
jmp
mov
jb
fistp
test
inc
cli
lds
pop
iret
push
adc
cdq
(bad)
inc
jbe
mov
xlat
lock
hlt
das
aas
dec
cmp
popa
js
inc
adc
outs
mov
mov
(bad)
(bad)
mov
jg
pop
fbld
not
popa
and
shl
push
sbb
xchg
mov
(bad)
(bad)
(bad)
jmp
jb
cwde
cmps
es
arpl
push
shl
inc
inc
gs
cmp
sahf
lea
(bad)
cmp
mov
cs
inc
arpl
push
pop
vpcmov
and
mov
add
(bad)
jmp
dec
sti
xchg
push
cli
int
jl
iret
and
sub
idiv
(bad)
jmp
add
fwait
and
call
xchg
mov
dec
add
out
cmp
xchg
push
dec
(bad)
mov
lods
push
cld
retf
repnz
mov
sub
movs
jae
lock
(bad)
(bad)
(bad)
cmp
mov
lock
sti
bound
retf
inc
cmp
mov
pop
push
inc
dec
lds
(bad)
and
mov
cld
loopne
loopne
sub
adc
adc
jmp
(bad)
retf
jle
pop
(bad)
scas
movs
and
cmp
sar
sahf
fstp
mov
inc
push
pop
sub
es
(bad)
cmps
lods
inc
(bad)
in
jg
dec
mov
jo
popa
inc
xor
stos
jp
pop
ins
mov
(bad)
(bad)
jmp
mov
cmp
out
or
add
aad
cdq
pop
adc
lods
or
jmp
cli
repnz
inc
push
sub
stos
dec
(bad)
repnz
inc
into
pop
mov
cmps
sbb
std
adc
(bad)
(bad)
(bad)
inc
mov
xor
jge
lods
sub
mov
mov
push
sub
mov
(bad)
inc
jmp
dec
stos
jle
retf
mov
push
pop
pop
xchg
test
(bad)
retf
xor
(bad)
hlt
push
gs
movs
xchg
jo
inc
mov
jg
jmp
add
sbb
lahf
push
sub
sbb
rcr
or
mov
outs
fadd
js
(bad)
clc
(bad)
(bad)
dec
dec
out
sahf
mov
movs
cmp
mov
test
cmps
(bad)
(bad)
(bad)
out
or
movs
out
jmp
pop
cmp
adc
ss
sbb
mov
mov
xchg
jbe
add
cmp
mov
loop
(bad)
and
jg
out
adc
mov
push
data16
pop
sub
push
dec
or
and
pop
daa
jbe
pop
(bad)
(bad)
(bad)
jmp
ret
push
shr
push
mov
dec
add
mov
cmps
int3
xor
add
jb
pop
lods
jnp
jmp
mov
pop
or
push
cmc
and
and
call
or
inc
mov
jnp
cli
ds
(bad)
(bad)
call
mov
jnp
cmp
pop
pushf
retf
out
ja
pusha
cmp
jne
(bad)
(bad)
jmp
popf
ja
dec
sbb
inc
lea
mov
aam
xor
cmp
push
popa
stos
test
stos
(bad)
(bad)
(bad)
jmp
mov
xchg
cs
das
enter
addr16
mov
test
add
xor
push
lds
stos
sub
adc
(bad)
(bad)
jg
(bad)
in
rol
or
stos
stos
add
push
ror
adc
inc
cld
call
cmps
sub
stc
popa
psraw
add
xlat
(bad)
(bad)
jmp
adc
in
ret
fwait
mov
leave
inc
sbb
mov
cs
mov
(bad)
(bad)
jg
or
cs
sbb
clc
test
ret
sbb
jmp
inc
rcr
je
add
inc
cmp
fcomp
sub
not
mov
gs
pop
rol
xor
xchg
pop
(bad)
lods
test
cdq
int3
push
out
fdivr
(bad)
jg
sub
and
hlt
or
mov
ins
iret
mov
das
pop
pop
adc
(bad)
(bad)
(bad)
dec
cmp
cdq
repz
dec
mov
clc
sub
addr16
addr16
add
(bad)
jo
xchg
pop
lock
(bad)
out
adc
xchg
(bad)
mov
mov
es
dec
add
(bad)
mov
xor
repnz
jg
int3
std
(bad)
(bad)
(bad)
call
out
push
push
retf
cmp
pop
popf
dec
test
adc
test
movs
add
fwait
(bad)
(bad)
dec
xchg
jo
mov
xor
(bad)
cmp
adc
ret
int3
mov
cli
inc
shl
and
or
(bad)
jg
dec
pop
xor
test
inc
cs
mov
pop
push
ret
(bad)
cli
xor
cmp
call
sahf
add
dec
retf
mov
push
and
inc
sbb
lods
dec
mov
push
fist
retf
push
popa
pop
call
std
xor
int3
into
cmp
jmp
icebp
movs
movs
in
xor
ficom
cmp
mul
sbb
mov
xor
add
dec
das
mov
or
pop
out
das
stos
mov
push
jno
rsm
inc
mov
call
mov
sbb
stc
retf
stos
sub
ss
aad
fs
cmp
(bad)
push
push
pusha
mov
inc
in
mov
sub
mov
ret
push
jmp
dec
dec
int
inc
mov
xchg
sub
jb
aam
call
jno
mov
xlat
dec
mov
es
dec
mov
dec
or
jecxz
push
scas
mov
xor
aaa
(bad)
(bad)
(bad)
(bad)
mov
xchg
jns
hlt
sbb
pop
dec
out
fs
rol
(bad)
test
(bad)
cld
adc
mov
cli
(bad)
(bad)
jmp
test
and
sbb
outs
push
or
fnstenv
cmp
shr
inc
xchg
cs
pusha
or
pop
(bad)
dec
mov
dec
push
xchg
jecxz
daa
cld
loopne
and
iret
or
call
mov
ror
fisttp
sbb
rcl
xchg
or
dec
sub
imul
sbb
and
call
pop
cwde
mov
(bad)
fild
scas
and
jb
inc
cli
or
enter
leave
rcr
(bad)
(bad)
mov
mov
pop
and
pushf
and
inc
mov
pop
cld
cmp
inc
xchg
(bad)
(bad)
call
pop
in
call
movs
cwde
popf
dec
cmp
adc
pop
mov
sub
(bad)
outs
(bad)
jmp
lods
sbb
outs
scas
enter
adc
ds
retf
and
ins
jo
xchg
cld
mov
mov
push
into
fst
dec
int
(bad)
push
xchg
rcr
call
ret
ins
ret
lods
jmp
push
inc
jmp
xor
push
in
cmp
adc
pop
jg
(bad)
(bad)
(bad)
dec
les
mov
sbb
es
in
pop
adc
or
push
sahf
test
mov
xchg
mov
and
rol
enter
call
cs
pop
js
mov
add
(bad)
call
cs
inc
inc
out
mov
popa
push
pop
(bad)
push
repnz
test
(bad)
(bad)
jmp
shl
into
inc
fstp
mov
push
adc
add
jno
nop
inc
ins
xlat
inc
ja
adc
rol
sub
bound
stos
call
add
mov
ins
sahf
mov
sbb
imul
aad
push
sub
mov
dec
pop
and
push
fsubp
adc
(bad)
(bad)
call
dec
arpl
(bad)
cmps
and
xchg
lods
cwde
mov
pop
repz
jmp
lods
push
das
sub
jo
dec
push
sub
xchg
lods
mov
call
cmp
add
add
shr
out
mov
cmp
sbb
cmp
into
push
sbb
sub
dec
retf
out
cli
(bad)
(bad)
jg
push
jmp
outs
add
xchg
cmp
stos
les
sar
pusha
out
addr16
sbb
sbb
(bad)
dec
loop
sub
push
mov
jmp
pop
iret
push
(bad)
arpl
sub
hlt
(bad)
call
fstp
dec
(bad)
hlt
xor
pusha
dec
add
mov
inc
sar
dec
and
ror
mov
pop
mov
fldcw
sub
sub
pop
adc
fs
jp
mov
jae
int
xor
mov
leave
(bad)
fdiv
sahf
ret
mov
adc
push
jge
bound
sub
jnp
test
cmc
mov
ret
sbb
popa
xchg
movs
movs
xor
and
sub
sub
aas
aas
movs
add
jp
mov
cmp
jb
jns
das
movs
xchg
jecxz
push
loope
aad
(bad)
mov
(bad)
push
or
ret
inc
repnz
movs
adc
(bad)
(bad)
(bad)
stc
mov
je
sub
jmp
dec
popa
inc
ds
sub
hlt
pop
(bad)
(bad)
fbld
call
pop
xlat
sub
movs
sti
movs
rol
(bad)
(bad)
jmp
leave
sbb
xchg
jle
repnz
popa
ds
mov
mov
mov
movs
inc
stos
pop
sub
ret
and
mov
jmp
adc
and
jb
dec
std
jp
sti
(bad)
call
pop
adc
inc
or
xor
(bad)
fsubrp
jne
push
mov
xor
or
dec
pusha
ja
(bad)
pop
test
(bad)
(bad)
(bad)
cmp
jb
inc
lds
ror
cli
adc
mov
adc
mov
sub
(bad)
(bad)
push
sub
(bad)
mov
sbb
icebp
popf
pop
sub
mov
mov
(bad)
(bad)
jmp
pushf
add
dec
test
pop
pop
push
adc
xchg
jnp
xor
mov
xchg
xchg
fisttp
jmp
fcom
add
push
sbb
outs
das
jle
or
mov
xor
cs
bound
fild
add
or
sar
push
jge
cmc
and
(bad)
call
scas
jmp
add
mov
sub
push
jmp
in
cmp
jno
(bad)
jmp
mov
push
mov
fidivr
push
out
add
xchg
aas
push
jl
jl
(bad)
(bad)
(bad)
call
push
or
imul
xor
cmc
adc
sub
call
mov
out
cli
(bad)
inc
add
movs
(bad)
ins
loopne
(bad)
in
mov
in
mov
inc
(bad)
sub
inc
jmp
dec
in
push
ins
jecxz
mov
scas
dec
push
jae
clc
fmul
xchg
inc
pop
or
cmps
inc
into
inc
mov
sar
je
mov
cmp
in
pushf
pop
(bad)
push
lods
js
es
pop
test
mov
ffreep
adc
(bad)
jg
pop
push
popf
or
icebp
fisubr
sbb
call
das
or
out
movs
(bad)
(bad)
call
sub
pop
xchg
ja
xchg
mov
shl
push
pushf
adc
sub
icebp
(bad)
inc
dec
jle
jp
xchg
aad
hlt
jp
(bad)
call
stc
sbb
mov
pop
jo
mov
in
fs
(bad)
(bad)
(bad)
std
in
pop
and
outs
mov
add
ret
pop
mov
cmp
imul
jle
(bad)
(bad)
jmp
fisubr
(bad)
jmp
outs
cmp
jl
loope
xchg
or
(bad)
jg
push
push
stos
ret
stos
cmc
sbb
inc
movs
push
pop
out
and
movs
out
dec
loop
dec
addr16
cmps
adc
movs
aad
pop
jl
shl
cld
lahf
mov
pop
jge
mov
(bad)
call
sar
dec
sbb
sub
outs
adc
add
mov
mov
or
sbb
or
call
(bad)
sbb
test
outs
xchg
enter
dec
mov
test
fs
cmc
mov
jg
push
out
pop
cmovs
and
clc
mov
xor
mov
push
aas
dec
xor
inc
dec
out
int3
ret
scas
hlt
stos
rcl
int
ins
push
cld
bswap
int
(bad)
dec
popa
pop
jb
lahf
inc
les
mov
cmps
mov
jae
sub
(bad)
(bad)
jmp
xchg
lds
cmc
fwait
cmps
lea
lea
imul
jg
mov
shr
mov
mov
or
call
test
adc
out
popa
mov
pop
or
imul
data16
xor
add
(bad)
(bad)
inc
aas
pop
ins
(bad)
jne
cs
pop
(bad)
dec
jne
xchg
mov
(bad)
mov
mov
adc
jns
scas
out
(bad)
(bad)
jg
push
pop
cmp
inc
jge
sub
movs
in
iret
loop
sbb
test
inc
sub
clc
icebp
(bad)
(bad)
inc
dec
cmp
(bad)
push
dec
fwait
push
cmp
shl
outs
mov
add
call
pop
mov
pop
in
jb
or
jo
cmp
inc
lock
retf
imul
push
mov
fdivr
cdq
(bad)
xlat
call
dec
(bad)
js
rcl
cwde
daa
xor
pop
jb
ins
pop
cmc
ret
add
pop
out
test
pop
enter
cwde
mov
push
lds
jp
leave
bound
cmp
(bad)
mov
xchg
sahf
mov
push
retf
in
cmp
aas
and
(bad)
(bad)
out
mov
in
sti
cmp
retf
jge
xor
jecxz
jo
ja
sar
rcr
or
mov
xor
(bad)
fiadd
test
movs
(bad)
(bad)
(bad)
call
xor
or
dec
fisubr
xor
and
sti
or
mov
dec
or
std
(bad)
call
pusha
pop
sbb
mov
loope
jecxz
mov
inc
mov
arpl
clc
shl
sbb
and
(bad)
jmp
scas
fisub
xor
call
mov
jecxz
imul
dec
inc
loope
push
mov
cs
(bad)
(bad)
fcomip
and
mov
xor
mov
mov
jmp
mov
and
pop
js
test
dec
fst
(bad)
call
cmp
mov
repz
(bad)
scas
pop
test
mov
mov
or
sub
mov
imul
cli
push
cld
sbb
into
mov
(bad)
(bad)
(bad)
fistp
leave
(bad)
je
pop
setg
arpl
dec
push
ret
aam
fcomp
pop
pushf
jp
dec
adc
adc
nop
call
inc
push
mov
push
add
or
in
cwde
mov
icebp
pop
std
push
dec
jb
push
(bad)
repnz
sub
(bad)
call
sbb
xlat
xchg
(bad)
ins
or
mov
push
mov
cli
(bad)
call
mov
xchg
(bad)
loopne
and
ror
sahf
icebp
in
sub
lea
std
popa
jecxz
(bad)
jmp
cmp
shr
lods
xchg
out
movs
gs
pop
add
sti
arpl
push
(bad)
frstor
hlt
mov
cmp
jle
jnp
push
mov
mov
jp
xchg
xchg
inc
pop
fstp
test
bswap
lahf
xor
cmp
mov
or
popa
jecxz
and
adc
adc
xchg
jg
lahf
or
(bad)
cmp
push
mov
mov
dec
test
mov
(bad)
(bad)
call
aam
sti
aaa
dec
(bad)
lods
add
lods
sub
jne
out
hlt
pop
stos
rol
scas
sbb
(bad)
jmp
lods
je
in
xchg
sbb
xchg
lods
dec
adc
test
cld
sahf
fcomip
(bad)
inc
mov
mov
xchg
das
ja
mov
inc
xor
sar
loopne
(bad)
(bad)
(bad)
sti
jle
clc
int3
mov
or
mov
jmp
or
(bad)
sub
dec
sbb
test
in
jmp
(bad)
adc
icebp
inc
mov
push
jne
cs
clc
push
ss
cmp
mov
(bad)
jle
stc
loope
mov
dec
mov
sti
pushf
mov
test
(bad)
(bad)
call
iret
movs
retf
mov
sub
push
sbb
push
xor
ins
xchg
xor
sahf
sbb
(bad)
(bad)
jmp
in
adc
in
and
push
shl
jge
mov
add
es
cwde
jne
das
xchg
xor
jmp
adc
adc
enter
pop
push
sub
inc
test
fdiv
sbb
jb
dec
call
inc
les
addr16
mov
neg
push
sbb
push
mov
add
pop
adc
(bad)
call
push
push
ins
fld
adc
cmps
and
and
out
cmp
lea
popa
sbb
dec
sbb
xchg
jne
and
pop
shr
xor
js
adc
(bad)
and
mov
imul
imul
mov
inc
loopne
add
fwait
xchg
loope
and
inc
stos
sbb
ror
and
test
mov
xor
call
aad
pop
stos
push
dec
sub
out
stc
sbb
sbb
and
dec
pop
mov
push
dec
inc
push
sub
xor
sar
sbb
scas
xchg
jmp
rcr
add
sbb
xor
es
(bad)
mov
jmp
fs
ficom
inc
add
push
ja
xchg
test
add
mov
imul
(bad)
(bad)
push
jmp
sbb
pop
frstor
sub
push
fmul
xlat
popa
cmp
or
mov
into
cmp
fistp
iret
lds
enter
add
xchg
in
fdiv
add
(bad)
jmp
fidiv
jp
jmp
push
leave
lock
mov
jmp
(bad)
(bad)
(bad)
mov
jge
in
mov
(bad)
int3
sti
repnz
xlat
test
push
mov
jg
inc
pop
sar
fdivr
sbb
or
push
scas
ja
(bad)
(bad)
fild
inc
xor
jbe
pop
mov
retf
lods
lds
rol
and
clc
(bad)
jmp
out
mov
ret
push
and
dec
(bad)
(bad)
dec
movs
adc
enter
cmp
mov
jg
xchg
mov
(bad)
(bad)
(bad)
jmp
xchg
in
xchg
jbe
cmp
lods
cmps
popf
rcr
push
cli
aaa
shr
cld
scas
imul
sub
push
and
and
pop
inc
sub
mov
cmp
mov
(bad)
push
lods
dec
jecxz
mov
jae
cmp
cmp
out
mov
popf
and
dec
imul
call
fwait
push
cmps
pop
mov
xlat
sbb
idiv
dec
xor
(bad)
(bad)
(bad)
(bad)
call
addr16
ds
rcr
push
shl
cmc
out
movs
push
xor
push
jae
mov
aas
call
xchg
out
cmp
mov
mov
sbb
jmp
fdivr
push
dec
and
jmp
fdiv
mov
jnp
mov
(bad)
dec
pusha
imul
xchg
sub
or
xor
ss
jg
mov
neg
js
(bad)
ficomp
jg
(bad)
call
mov
and
jecxz
pop
idiv
mul
cld
push
cmp
(bad)
(bad)
(bad)
dec
pusha
nop
xor
push
xor
in
jmp
pop
xchg
retf
mov
into
xchg
xchg
push
(bad)
(bad)
jg
mov
jp
mov
out
das
and
cmp
(bad)
fcomip
movs
sub
(bad)
pop
iret
fcomp
sbb
push
mov
jnp
mov
mov
idiv
lods
dec
jbe
xchg
or
clc
(bad)
call
mov
push
mov
xchg
test
mov
cmc
jno
jmp
rol
mov
adc
aas
jp
dec
rcl
(bad)
(bad)
(bad)
jmp
sar
arpl
and
imul
cld
jns
std
jnp
fisubr
jns
xor
(bad)
(bad)
(bad)
fild
sti
xchg
iret
sub
jne
push
sub
push
jbe
std
adc
scas
movs
push
(bad)
(bad)
(bad)
call
pop
cli
xor
cmc
mov
shl
rcl
fnstsw
ds
adc
(bad)
dec
dec
mov
ss
xchg
in
(bad)
outs
cmp
mov
add
scas
jae
scas
call
stos
push
pop
das
cwde
ret
das
in
push
in
(bad)
(bad)
(bad)
(bad)
aas
jge
iret
fistp
lods
(bad)
(bad)
aas
sti
mov
std
ja
cld
mov
push
push
ror
mov
add
outs
inc
call
sub
int3
cmp
dec
xchg
xor
sbb
and
test
jmp
inc
jo
int
pop
fs
rcr
out
jecxz
lock
movs
mov
vpaddd
pusha
test
icebp
retf
stc
sbb
pop
jmp
adc
jp
pop
movs
cmp
jmp
push
nop
adc
pushf
inc
ds
sti
sub
inc
mov
cmp
lods
add
loop
(bad)
(bad)
mov
or
int
pop
push
ja
sbb
cmp
dec
sbb
aad
mov
pop
call
loop
scas
repz
sub
imul
or
js
js
push
(bad)
(bad)
(bad)
call
sar
idiv
push
imul
out
sar
mov
xor
mov
mov
repz
push
test
les
jge
mov
aad
jmp
dec
pop
and
stc
mov
jg
jl
daa
mov
std
mov
jle
mov
jmp
(bad)
push
mov
aad
cwde
dec
mov
adc
std
(bad)
fsubr
fidiv
das
xor
xchg
or
inc
adc
shl
mov
stos
or
sbb
cmps
int3
jl
dec
adc
aad
push
(bad)
(bad)
(bad)
dec
mov
sub
ror
sub
or
dec
jecxz
cmc
(bad)
ins
rol
lock
xchg
(bad)
(bad)
(bad)
mov
mov
pop
inc
out
push
push
adc
frstor
cmp
rcr
inc
ins
fcmovu
jp
(bad)
cdq
(bad)
(bad)
(bad)
inc
fnstenv
xor
push
jecxz
inc
push
mov
mov
das
mov
xchg
xchg
push
cld
inc
and
loope
pop
(bad)
rcr
out
push
cdq
sar
xlat
(bad)
call
(bad)
aad
repnz
adc
in
pop
xchg
xchg
test
cmp
jmp
adc
test
adc
cmp
cdq
idiv
data16
fnstenv
(bad)
fcmovnbe
(bad)
mov
je
sub
(bad)
(bad)
push
fs
xchg
cmp
es
retf
mov
les
bound
jmp
ins
out
iret
cld
inc
fcmovu
in
(bad)
(bad)
jmp
pop
ins
sub
mov
loopne
inc
and
or
mov
into
add
(bad)
(bad)
mov
sub
and
xchg
and
mov
sbb
pusha
arpl
cmp
mov
into
shr
cmp
xchg
ins
lods
ficom
jae
pop
aaa
pop
std
movs
push
mov
add
and
mov
fidiv
in
dec
mov
jle
mov
jg
mov
fcomip
add
lds
imul
das
sbb
cli
and
add
(bad)
(bad)
(bad)
jmp
pop
pop
mov
popa
push
das
sub
bnd
inc
ins
shl
dec
jge
mov
mov
(bad)
(bad)
push
pop
les
add
mov
inc
jae
(bad)
fcom
sahf
cmps
test
scas
ins
inc
add
push
dec
(bad)
adc
mov
ja
in
(bad)
cmps
(bad)
inc
mov
sub
mov
pop
push
ret
out
push
(bad)
(bad)
(bad)
call
jbe
adc
jmp
data16
xchg
(bad)
mov
add
rcl
pop
jl
(bad)
push
and
sub
dec
mov
ret
iret
leave
pusha
sbb
adc
xchg
sbb
loopne
mov
inc
ss
xor
xor
in
retf
(bad)
(bad)
(bad)
(bad)
fnstenv
scas
cmps
jmp
mov
xchg
ror
daa
jo
sbb
xor
arpl
inc
jg
stos
jbe
mov
dec
fwait
scas
mov
loop
test
cmp
(bad)
jmp
mov
jg
mov
js
pop
cmps
sub
inc
sbb
pop
or
mov
inc
call
hlt
jle
and
popf
loope
nop
or
arpl
std
out
adc
(bad)
call
pop
lods
fmul
xor
xchg
in
nop
mov
adc
jmp
pslld
aaa
add
or
(bad)
push
sub
gs
js
mov
fcomp
scas
stc
mov
fild
fwait
daa
cmp
xor
and
and
imul
(bad)
(bad)
(bad)
call
sahf
rcr
dec
rcr
add
les
shr
inc
mov
fistp
jb
or
sub
std
jmp
xchg
ret
adc
xchg
or
mov
imul
call
(bad)
out
pop
mov
push
dec
ret
mov
mov
rcl
cwde
adc
push
and
scas
or
and
ds
mov
jge
(bad)
fisttp
mov
(bad)
retf
(bad)
cmp
xchg
adc
add
(bad)
mov
mov
cmp
sub
xor
sbb
(bad)
call
imul
push
movs
jmp
and
jecxz
xor
cmp
(bad)
mov
push
sub
pop
das
or
(bad)
inc
cld
xor
outs
sbb
(bad)
movs
jl
cmp
(bad)
dec
fs
push
mov
dec
inc
pusha
stos
xchg
or
(bad)
cmps
xchg
xlat
pop
mov
cld
(bad)
(bad)
jmp
clc
cli
mov
nop
hlt
mov
call
fcomp
out
fdiv
mov
ja
sub
shr
(bad)
(bad)
(bad)
fisttp
mov
imul
outs
call
cmp
inc
scas
cmp
mov
test
mov
sbb
add
stos
call
retf
int3
stos
push
adc
(bad)
fcomip
test
push
adc
lods
or
cmc
pop
jne
push
xor
jmp
adc
(bad)
call
dec
shld
enter
push
hlt
lods
mov
or
cmp
(bad)
push
inc
ds
jns
mov
cmp
xchg
std
lds
add
sbb
add
(bad)
(bad)
call
xchg
jmp
rol
cmp
rcr
stc
mov
push
lea
inc
sbb
(bad)
jmp
dec
loopne
sbb
mov
add
mov
fmul
jle
aas
out
icebp
sub
mov
(bad)
dec
sbb
adc
adc
jecxz
jae
stos
jge
clc
int3
(bad)
inc
sbb
or
jl
es
xor
icebp
ret
dec
add
or
and
clc
dec
add
(bad)
fsub
mov
hlt
scas
lahf
jle
jmp
xchg
pop
test
mov
fisubr
clc
push
sub
sub
in
data16
nop
pop
add
xchg
ret
mov
out
push
and
pop
std
call
pushf
cmp
push
outs
aam
xor
out
jnp
fistp
clc
(bad)
(bad)
(bad)
mov
push
icebp
arpl
dec
push
repz
adc
add
jbe
xchg
xor
and
out
ds
inc
popa
mov
sar
mov
in
push
stos
fsubr
push
mov
jno
(bad)
call
rol
shl
adc
es
outs
ins
mov
sti
shl
ficom
sub
(bad)
(bad)
jge
push
shl
mov
int
mov
mov
and
(bad)
mov
pop
clc
cmp
adc
fs
jmp
(bad)
(bad)
(bad)
(bad)
jge
dec
jge
adc
ins
out
or
mov
sti
int3
inc
nop
cmps
add
and
addr16
and
stc
(bad)
(bad)
fcomip
test
push
mov
dec
adc
jnp
data16
jecxz
inc
jle
(bad)
(bad)
dec
mov
sub
popf
mov
xchg
sub
mov
(bad)
jmp
adc
jo
scas
fsub
jae
dec
int
add
sbb
imul
mov
(bad)
(bad)
js
pushf
dec
push
jle
out
pushf
dec
outs
pop
in
jb
mov
fnstsw
or
lock
popf
push
(bad)
and
div
(bad)
sub
retf
add
(bad)
jmp
sub
mov
cmc
add
sub
fs
stc
cmc
sbb
mov
stos
and
retf
jmp
sbb
jle
cmps
cld
aad
enter
mov
cmc
jg
mov
popf
mov
mov
(bad)
(bad)
(bad)
(bad)
jo
outs
(bad)
ins
fdiv
mov
push
in
movs
jmp
movs
repnz
lock
xchg
adc
std
sbb
pop
xchg
push
inc
mov
mov
inc
das
xor
stos
fidivr
stos
and
and
cld
jmp
adc
mov
sbb
punpckhdq
cli
push
movs
or
sbb
imul
(bad)
(bad)
lea
(bad)
(bad)
(bad)
(bad)
call
outs
fist
cmps
xchg
pop
ret
push
push
(bad)
pop
pusha
int3
ret
ds
(bad)
(bad)
(bad)
dec
sub
(bad)
(bad)
std
mov
inc
cdq
sti
mov
mov
pop
clc
rcl
mov
and
int3
add
(bad)
call
adc
push
(bad)
hlt
icebp
xor
cmc
sahf
repz
(bad)
pop
sub
push
mov
jmp
pop
inc
aam
xchg
jmp
or
leave
rcr
out
ret
xchg
dec
and
and
out
mov
in
and
sti
mov
inc
adc
idiv
lea
lods
lahf
lea
(bad)
pop
inc
cmp
or
xchg
jb
and
push
sbb
(bad)
call
and
cmp
retf
mov
push
cmps
dec
jae
outs
ins
scas
mov
sbb
dec
mov
in
iret
xor
(bad)
(bad)
(bad)
(bad)
out
push
cmps
push
fbstp
ds
fisttp
lods
fisttp
cdq
pop
ret
(bad)
adc
(bad)
(bad)
(bad)
cmp
pop
sub
xor
mov
test
cld
std
aas
add
ficom
aaa
cld
add
cmp
int3
call
inc
inc
imul
pop
test
jo
inc
(bad)
(bad)
(bad)
push
data16
pop
out
sti
hlt
pop
(bad)
sbb
jg
sub
add
in
call
(bad)
call
or
movs
inc
scas
xchg
out
call
pushf
in
and
cmp
xchg
mov
inc
hlt
pushf
sub
pusha
out
pop
pop
cmps
xchg
dec
push
aad
xchg
test
gs
adc
jg
pushf
add
jge
xor
mov
out
aam
clc
(bad)
fisttp
or
cmp
mov
minps
pop
jg
mov
dec
in
and
sub
mov
mov
adc
mov
cld
pop
rcr
in
stc
push
push
je
mov
pop
movs
fwait
dec
adc
jmp
in
hlt
out
in
test
xor
and
ds
cmc
pop
sbb
cmp
nop
cmp
pop
icebp
aad
jo
or
add
inc
ja
test
push
and
cmp
rcl
fistp
test
les
mov
fild
and
push
popf
xlat
mov
stos
ins
loope
dec
shl
add
jbe
xchg
(bad)
aaa
(bad)
(bad)
(bad)
call
add
repnz
retf
xor
inc
adc
repz
push
cmp
dec
jg
add
sar
sbb
pop
test
pop
inc
jl
out
ss
pop
test
imul
and
xor
std
(bad)
(bad)
dec
push
lea
sar
pushf
mov
xor
jae
mov
test
push
lock
add
or
or
mov
jmp
mov
mov
nop
jo
push
mov
outs
cmp
ss
enter
inc
and
cld
pop
ret
ret
les
std
outs
pop
and
inc
sub
pop
pop
ficomp
ret
jo
into
adc
in
or
(bad)
(bad)
jmp
stos
iret
bound
cmp
les
adc
(bad)
jno
xchg
and
inc
jb
jns
mov
sbb
gs
sub
jmp
mov
test
or
rcl
push
mov
inc
sti
stos
inc
clc
(bad)
inc
iret
xchg
mov
(bad)
jmp
out
pop
dec
(bad)
not
(bad)
scas
xor
ficomp
jecxz
dec
popa
std
(bad)
jg
popf
jo
jp
and
data16
nop
jne
mul
sub
scas
cli
fwait
cmp
xchg
add
js
sub
push
inc
jmp
(bad)
(bad)
(bad)
inc
sbb
push
jo
add
push
pop
cmps
ins
jns
test
pop
jle
jmp
ret
or
call
add
(bad)
fbld
fst
in
sub
jmp
add
popa
mov
dec
push
pop
mov
stos
(bad)
cli
scas
test
push
lock
and
adc
sub
jmp
pop
(bad)
and
xchg
ins
cmp
inc
and
add
sar
imul
(bad)
(bad)
(bad)
push
dec
inc
sbb
or
xchg
and
repz
mov
sub
test
cld
(bad)
(bad)
cmp
dec
mov
jp
ss
add
adc
(bad)
(bad)
call
jne
(bad)
(bad)
clc
xchg
ins
xchg
sbb
leave
sub
dec
pop
loope
or
leave
sub
jg
mov
push
fistp
loop
cwde
xor
into
retf
daa
dec
push
daa
xchg
arpl
(bad)
(bad)
jmp
mov
xchg
jp
scas
or
cmp
sub
push
jmp
(bad)
mov
jmp
push
cmp
xor
retf
mov
test
xor
jecxz
(bad)
int
es
sbb
das
mov
test
pop
iret
pop
loope
xchg
mov
(bad)
(bad)
(bad)
jns
std
add
ss
xchg
bound
jne
and
aam
neg
and
xor
jl
(bad)
(bad)
jg
push
lods
jp
push
(bad)
cs
push
mov
and
fld
das
(bad)
(bad)
out
adc
js
ret
fiadd
fwait
int3
jge
imul
dec
dec
icebp
pop
and
outs
xchg
mov
movs
xlat
mov
(bad)
(bad)
mov
add
(bad)
addr16
push
inc
mov
push
push
pop
mov
push
jmp
xor
jge
test
fistp
(bad)
out
and
(bad)
(bad)
call
jge
mov
fsubrp
sbb
into
push
fcom
(bad)
scas
dec
int
pop
lahf
(bad)
jg
push
sbb
inc
jne
sbb
sbb
cwde
aaa
jbe
mov
aam
xchg
add
stc
(bad)
sub
(bad)
call
and
mov
loope
fist
xor
mov
jg
jge
and
and
fwait
hlt
(bad)
dec
add
or
test
hlt
jns
pop
test
mov
push
das
int3
ds
mov
mov
loope
call
adc
mov
les
(bad)
(bad)
(bad)
call
mov
shr
push
cmp
popa
mov
push
daa
sbb
ret
popa
inc
ror
fwait
dec
outs
loopne
cmps
adc
pop
add
outs
(bad)
rcr
(bad)
(bad)
(bad)
(bad)
jns
inc
call
in
fmul
iret
mul
dec
jmp
cmp
cmp
jg
(bad)
fcom
push
dec
scas
push
gs
stos
loopne
jno
test
neg
jle
ficomp
fstp
(bad)
(bad)
stc
neg
repnz
cmp
push
test
jl
repz
sbb
lds
adc
dec
repnz
push
hlt
pop
hlt
dec
jnp
adc
dec
sub
fdivr
add
fbld
mov
and
inc
mov
xchg
call
shl
fistp
int
cld
mov
aam
xchg
jo
aaa
add
mov
mov
rcl
popa
int
mov
fldcw
js
int
pop
jp
push
pop
mov
add
shr
add
sub
mov
daa
dec
popa
push
ret
jnp
ret
(bad)
(bad)
(bad)
jle
gs
out
mov
cmp
adc
sub
xor
xchg
push
pusha
lock
push
push
test
jle
mov
(bad)
(bad)
inc
xor
dec
call
ja
shl
or
add
push
mov
(bad)
(bad)
(bad)
jp
pop
fcomp
cdq
cmp
repnz
aad
push
inc
lods
inc
cmp
add
das
popa
adc
inc
loopne
enter
(bad)
dec
call
loopne
(bad)
mov
(bad)
loopne
(bad)
fstp
rcl
sub
mov
repz
aaa
inc
test
(bad)
outs
jg
cmp
pop
xchg
or
icebp
scas
repz
mov
loope
or
cmp
mov
inc
ds
or
inc
add
lock
pop
add
or
adc
inc
cld
pop
or
in
iret
or
push
and
ins
sbb
dec
cli
mov
jno
outs
push
dec
inc
xchg
sbb
add
add
(bad)
(bad)
call
dec
cmp
pop
add
xchg
cmp
xchg
sub
dec
sbb
push
jg
call
pop
mov
xchg
sub
test
pmuludq
sub
mov
in
sar
inc
out
(bad)
stos
mov
or
je
xchg
mov
(bad)
(bad)
(bad)
jmp
vunpckhps
popa
jo
das
retf
aas
cmps
ret
leave
or
pop
dec
push
jb
cld
cmc
cmp
jmp
mov
mov
retf
test
pop
ja
pop
sti
cmp
in
ja
mov
(bad)
mov
xchg
add
xchg
cmp
popf
imul
xor
lea
jae
inc
into
sub
lds
sbb
push
pop
(bad)
jg
jnp
xlat
pop
mov
or
and
fwait
dec
loopne
pop
and
jno
int
and
cdq
clc
call
jle
push
out
or
mov
mov
pop
xchg
sub
xchg
out
add
add
out
ret
std
ja
sub
adc
jno
sub
and
(bad)
(bad)
(bad)
cli
in
rcl
popf
icebp
mov
or
pop
mov
xchg
imul
(bad)
(bad)
inc
ret
je
retf
mov
aad
or
cmp
mov
sub
(bad)
(bad)
(bad)
dec
cld
fwait
mov
retf
lods
cmp
sub
stos
sbb
or
jo
push
adc
(bad)
call
loopne
push
jae
jl
icebp
mov
inc
push
sub
out
test
repz
adc
sub
dec
add
or
add
jns
jns
xchg
es
push
add
pop
mov
ret
or
(bad)
(bad)
(bad)
call
clc
dec
mov
in
push
std
jg
pop
(bad)
(bad)
xor
loopne
(bad)
xor
jmp
imul
outs
clc
(bad)
(bad)
push
das
push
xor
ja
push
lea
dec
fwait
xchg
jae
push
xor
inc
xor
cs
repnz
cmps
xchg
movs
sti
leave
xor
nop
fisttp
ret
mov
clc
xchg
(bad)
(bad)
(bad)
call
dec
mov
cmp
lahf
ds
sub
addr16
xchg
mov
dec
adc
mov
sub
fwait
dec
inc
(bad)
(bad)
(bad)
(bad)
mov
int3
(bad)
out
fisub
xor
in
in
ret
cmp
cdq
pop
mov
pop
aam
repnz
(bad)
call
js
xchg
nop
adc
pushf
shl
bound
fisub
(bad)
mov
mov
addr16
xchg
push
(bad)
jae
adc
psubsw
(bad)
jmp
mov
mov
les
aas
in
mov
aad
imul
add
fdivr
pop
js
loop
fucomi
aad
xchg
cdq
std
pushf
dec
jne
ret
(bad)
jg
jmp
pop
aad
scas
mov
sti
pushf
retf
(bad)
jg
std
mov
lahf
es
test
dec
int
cmps
mov
inc
popf
cmpxchg
out
xor
(bad)
(bad)
jmp
aas
xchg
push
sahf
cwde
cli
sbb
sbb
lods
pushf
shl
mov
push
dec
mov
and
sub
movs
mov
call
hlt
retf
cmp
adc
nop
jg
loop
add
call
fs
cld
adc
push
inc
(bad)
ret
cwde
xchg
jl
or
std
(bad)
push
stc
out
leave
call
neg
idiv
jbe
and
dec
(bad)
push
cmp
int3
or
(bad)
mov
retf
pop
pop
jns
arpl
cmps
popf
push
hlt
jmp
xchg
rol
add
stc
(bad)
(bad)
(bad)
push
cld
cwde
(bad)
enter
mov
in
sbb
ins
xchg
jg
and
xor
or
test
or
mov
out
push
movs
mov
cmp
pop
ds
jmp
(bad)
imul
sbb
test
xor
(bad)
jmp
push
cmc
jecxz
outs
pop
fmul
test
push
sti
(bad)
(bad)
mov
inc
push
(bad)
mov
pop
jle
pop
shl
mov
cmc
add
mov
aaa
adc
inc
or
fsubrp
dec
aad
outs
xor
xchg
sub
inc
and
cld
sub
icebp
(bad)
fwait
test
and
(bad)
(bad)
jg
jbe
jnp
loope
and
jns
add
dec
mov
movs
xchg
mov
ror
clc
xor
jg
(bad)
push
pop
push
inc
mov
test
mov
sar
(bad)
(bad)
dec
xor
jnp
out
js
lahf
lods
daa
xchg
xor
mov
ja
cli
inc
inc
inc
shl
ret
ror
xor
jmp
out
repnz
enter
inc
mov
loop
push
popf
inc
pop
enter
call
(bad)
call
cmp
inc
aam
hlt
in
push
cmps
pop
xlat
xlat
mov
es
rol
inc
mov
lds
xor
dec
int
out
pop
lock
in
popa
(bad)
(bad)
inc
shl
jo
inc
fsubr
sar
mov
jo
inc
hlt
(bad)
(bad)
jg
std
dec
test
mov
jg
mov
push
out
mov
retf
mov
mov
push
arpl
pop
inc
inc
or
push
(bad)
mov
xchg
daa
xor
shl
mov
(bad)
(bad)
call
cmp
data16
(bad)
xchg
mov
cwde
jo
pop
stos
pusha
jbe
and
mov
inc
mov
jge
enter
fmul
sub
mov
movs
jns
xor
mov
sbb
(bad)
pop
add
add
xor
cmps
into
jns
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
fidiv
pop
ffreep
add
cmp
mov
sub
(bad)
scas
ret
loop
(bad)
(bad)
jmp
cmps
mov
dec
iret
fisub
fidiv
rcl
xor
cmps
push
dec
fwait
(bad)
(bad)
(bad)
out
outs
xor
xchg
mov
cmp
and
jg
push
mov
jp
mov
test
int
(bad)
(bad)
mov
jg
lods
neg
mov
std
cmp
cmp
je
fistp
sub
mov
hlt
or
dec
scas
lods
ins
pop
jecxz
ds
(bad)
jmp
(bad)
jno
repz
push
jge
xchg
push
pusha
push
jmp
stos
cmps
imul
cmp
(bad)
add
push
fwait
pop
push
stos
je
mov
push
icebp
iret
idiv
aam
pop
pop
mov
xchg
mov
sub
or
(bad)
xor
scas
rcr
push
daa
test
(bad)
inc
(bad)
es
xor
(bad)
(bad)
(bad)
jg
jb
lods
pop
add
fwait
dec
stos
pushf
sbb
out
rcl
inc
add
fimul
mov
ins
mov
(bad)
(bad)
stc
mov
fwait
gs
adc
and
jb
inc
cmp
stc
adc
xor
repnz
mov
(bad)
cmp
push
cmc
and
in
rol
push
(bad)
cmp
(bad)
test
sar
(bad)
(bad)
jmp
pop
add
adc
repnz
or
aas
stos
add
iret
fdivr
imul
or
outs
xor
adc
push
sbb
repnz
test
sub
out
test
add
call
cmc
rol
aad
jge
sub
pop
cs
call
std
cmp
push
ret
sbb
shr
cwde
or
dec
test
and
jmp
addr16
xor
test
ds
adc
push
stos
push
adc
ja
or
(bad)
(bad)
push
jecxz
pusha
gs
adc
push
cmp
jmp
adc
push
cld
mov
call
jp
in
leave
xor
push
pop
pop
(bad)
rcr
pop
sbb
inc
in
mov
call
and
retf
jmp
cwde
pusha
push
inc
mov
push
pusha
dec
jp
(bad)
(bad)
push
sub
or
adc
int3
mov
mov
sbb
dec
or
or
cmp
or
(bad)
(bad)
call
mov
fcom
rcl
sbb
adc
mov
mov
(bad)
(bad)
jmp
mov
sti
lods
and
inc
mov
dec
pop
jl
mov
jbe
dec
imul
(bad)
call
outs
mov
add
cs
repz
ds
lods
jmp
jb
cwde
mov
int
std
inc
ret
cmp
jmp
(bad)
(bad)
jg
aam
dec
mov
jle
xlat
fmul
mov
jle
mov
adc
push
mov
pop
call
xor
cmp
mov
cs
clc
call
call
sahf
mov
stc
xor
push
push
push
mov
(bad)
dec
mov
sub
ss
mov
ror
jg
cmp
icebp
(bad)
(bad)
dec
jp
xchg
stos
ins
pushf
mov
mov
rcl
add
aaa
out
adc
lods
rcl
out
movs
jle
jl
mov
jl
call
stos
gs
jg
lahf
push
repz
fimul
jno
fistp
(bad)
(bad)
(bad)
dec
mov
out
mov
ficom
pop
in
into
call
(bad)
(bad)
inc
xor
cdq
aaa
and
sub
dec
dec
sbb
lea
inc
dec
mov
std
mov
(bad)
call
mov
cmc
jb
mov
lds
test
push
or
loope
ret
cmps
ins
popw
pop
call
(bad)
(bad)
(bad)
call
jae
call
jne
iret
cmc
xchg
addr16
jecxz
shrd
daa
and
and
(bad)
cmp
inc
cmps
jmp
mov
retf
sub
addr16
arpl
call
mov
ret
push
cmp
mov
mov
pushf
fucomip
add
out
ret
std
jnp
inc
add
or
add
jns
jl
ja
jg
outs
mov
mov
dec
add
scas
jg
adc
cld
and
call
adc
jns
inc
cwde
leave
sub
(bad)
(bad)
(bad)
push
pusha
ror
test
mov
jge
fs
inc
lds
and
add
lahf
repnz
mov
lds
mov
test
add
push
xchg
sub
sahf
lods
adc
xchg
mov
mov
or
xchg
mov
sbb
adc
xor
adc
mov
inc
push
sbb
push
xchg
jle
xor
and
sbb
and
daa
cmp
and
cld
mov
das
cli
(bad)
jle
dec
push
ds
mov
test
xchg
fsubr
pop
mov
test
mov
jmp
cmp
mov
dec
xchg
jne
pop
ins
or
sahf
push
jne
dec
jns
dec
outs
dec
inc
jns
(bad)
(bad)
(bad)
dec
jbe
jg
daa
cmp
cmp
and
retf
sub
clc
xchg
push
fcom
(bad)
(bad)
(bad)
dec
adc
push
adc
iret
nop
int3
jno
cmp
mov
nop
pushf
aad
je
daa
xor
sbb
loopne
inc
shr
mov
xor
jmp
inc
and
test
xor
(bad)
pop
les
fbstp
and
aaa
cld
(bad)
jmp
jle
std
imul
mov
test
inc
adc
mov
pop
test
jmp
pop
push
cmp
mov
xchg
pop
call
cld
fst
sti
xor
in
jmp
stos
push
lods
jmp
enter
jmp
inc
dec
jo
(bad)
rcr
fnsave
shl
repnz
mov
clc
mov
(bad)
out
jp
frstor
sbb
jecxz
popa
shl
xor
outs
push
nop
cld
xchg
push
jmp
cs
retf
iret
cli
scas
rol
pop
jmp
dec
movs
addr16
ret
(bad)
movs
adc
data16
arpl
mov
lds
les
jmp
(bad)
call
cdq
mov
fistp
jmp
(bad)
jecxz
ret
xor
aam
adc
aaa
adc
pop
mov
in
sbb
sbb
pop
aam
or
dec
jae
inc
lock
pop
(bad)
dec
mov
call
mov
or
movs
std
or
jg
cld
ror
(bad)
jmp
add
cmps
jo
scas
cs
repnz
jne
std
dec
es
add
(bad)
inc
push
les
or
clc
ins
mov
jno
inc
push
mov
sbb
sti
mov
fwait
push
mov
in
call
neg
add
push
enter
mov
push
(bad)
hlt
iret
mov
retf
into
jnp
mov
sub
jmp
jecxz
jnp
add
dec
je
pop
xor
and
and
jb
mov
retf
loopne
imul
or
jg
out
jmp
pop
das
jl
in
(bad)
ins
scas
mov
loopne
push
lea
aas
and
sbb
or
mov
test
(bad)
cli
inc
cmp
(bad)
(bad)
push
(bad)
dec
xor
xor
or
jecxz
fdivr
in
push
movs
hlt
lods
ror
adc
jmp
jb
shr
outs
loopne
push
push
sub
(bad)
(bad)
(bad)
inc
or
adc
pop
mov
xchg
inc
ins
sti
jbe
std
and
in
test
adc
cmc
lock
xor
fbstp
xor
lods
test
loopne
retf
inc
mov
(bad)
(bad)
cmp
iret
sub
pop
jle
or
jae
call
out
dec
(bad)
out
or
(bad)
(bad)
jmp
xchg
jecxz
nop
push
inc
fdiv
xor
add
outs
popf
dec
lahf
inc
aam
idiv
inc
(bad)
call
outs
cmps
pop
sbb
xor
dec
sbb
push
mov
add
jns
(bad)
(bad)
(bad)
inc
test
adc
dec
lods
fild
jne
in
inc
mov
sbb
jmp
xor
shl
push
inc
pop
dec
pop
lahf
mov
jmp
lea
or
add
(bad)
(bad)
mov
or
nop
jns
jmp
mov
sub
xchg
xchg
pop
(bad)
jb
outs
adc
sar
adc
mov
mov
fmulp
and
(bad)
(bad)
out
clc
mov
dec
adc
mov
sbb
cmp
push
inc
mov
xor
clc
jg
inc
ins
push
dec
dec
popa
aas
push
cli
add
or
cld
push
push
div
xchg
ds
test
jp
push
lds
sar
std
out
test
jecxz
hlt
dec
add
call
push
xchg
mov
shl
hlt
xor
daa
pop
aaa
pop
mov
mov
xchg
add
jmp
dec
test
adc
ds
mov
ja
test
mov
(bad)
and
add
push
(bad)
inc
cmp
cli
repz
iret
adc
repz
adc
adc
mov
(bad)
(bad)
inc
addr16
mov
je
mov
into
leave
clc
inc
jmp
jmp
(bad)
(bad)
(bad)
inc
push
add
mov
dec
leave
cs
daa
out
scas
xchg
dec
enter
(bad)
(bad)
(bad)
dec
add
nop
test
imul
mov
inc
jno
(bad)
jbe
fstp
(bad)
(bad)
(bad)
jmp
cmp
jmp
(bad)
fimul
xchg
push
ja
xchg
outs
jae
(bad)
(bad)
retf
rcl
mov
cmp
sub
xor
cmp
xchg
adc
std
(bad)
fisttp
int
addr16
aaa
pop
(bad)
les
xchg
cmp
repnz
stos
cmps
aam
(bad)
jmp
inc
sub
adc
fstp
in
dec
dec
mov
mov
add
arpl
nop
mov
or
fsub
pushf
imul
je
retf
gs
mov
test
std
mov
and
popa
sbb
std
sar
(bad)
movs
jne
sbb
(bad)
(bad)
(bad)
push
out
(bad)
repz
lock
ret
cmp
sub
push
xchg
movs
cmp
bound
mov
xor
fild
jle
popf
repz
push
mov
out
pop
sub
clc
xchg
lock
nop
in
into
dec
(bad)
jg
ins
mov
jae
mov
mov
stos
aaa
cmp
(bad)
(bad)
jns
dec
dec
pop
out
pop
mov
mov
or
ins
arpl
xchg
(bad)
(bad)
(bad)
jmp
xchg
(bad)
and
xchg
pop
cmp
and
dec
pop
inc
mov
call
mov
(bad)
call
xor
inc
fxch
cmps
inc
xor
in
pop
pop
iret
jmp
jmp
retf
sbb
imul
inc
push
sub
pop
(bad)
(bad)
(bad)
push
inc
xchg
pop
sar
fisttp
mov
mov
repnz
jns
dec
js
(bad)
jmp
mov
test
lea
xchg
loopne
dec
sub
mov
and
cmp
into
test
int
mov
ret
cmc
test
not
outs
inc
out
data16
(bad)
(bad)
dec
xchg
sbb
sub
stc
les
movs
shr
cmp
test
dec
or
retf
(bad)
adc
xorps
sahf
inc
fld
arpl
(bad)
mov
fcomip
jmp
imul
xor
(bad)
mov
mov
(bad)
(bad)
(bad)
push
and
jnp
xor
mov
int3
rcl
inc
sub
pop
mov
retf
fwait
lods
inc
dec
lahf
cmps
fwait
cli
(bad)
jmp
or
sub
sti
push
pushf
pop
adc
or
outs
mov
jecxz
retf
call
jmp
fwait
mov
jmp
sar
or
sar
call
or
(bad)
(bad)
(bad)
call
pop
dec
pop
mov
push
xor
add
sbb
mov
jl
mov
hlt
xlat
pop
fdivr
(bad)
aam
mov
test
xchg
test
lock
xor
(bad)
push
fs
dec
mov
in
adc
cmp
adc
pop
inc
pusha
inc
cmp
xchg
inc
dec
xor
aaa
xchg
and
mov
sub
retf
ins
sub
mov
add
dec
lods
xchg
dec
(bad)
mov
push
xchg
push
leave
push
sar
mov
imul
sub
or
not
neg
(bad)
(bad)
call
fwait
jl
jmp
jge
dec
or
xchg
dec
mov
add
dec
repnz
or
out
jbe
dec
add
test
clc
cmp
jb
adc
or
sbb
or
xor
(bad)
(bad)
(bad)
inc
adc
lock
mov
test
je
ins
cmp
jnp
adc
popa
pop
or
jle
mov
adc
js
jge
std
cmp
add
cmp
jp
jo
dec
test
inc
out
leave
in
push
cwde
xchg
lock
lea
pop
push
push
jge
call
mov
jg
outs
in
sub
pop
jle
fbstp
add
sar
aaa
in
or
add
(bad)
(bad)
(bad)
call
lock
mov
(bad)
enter
xchg
test
lds
or
add
inc
xchg
and
pop
lods
jmp
xor
(bad)
cmp
cmp
add
outs
cwde
pop
push
push
or
(bad)
mov
sahf
mov
push
sub
and
cli
(bad)
call
sbb
xor
bound
jl
dec
jno
push
jno
cmp
xor
das
out
sbb
xchg
push
ja
mov
mov
leave
dec
dec
data16
and
test
in
(bad)
(bad)
call
mov
js
ins
mov
adc
shr
inc
dec
js
(bad)
(bad)
(bad)
push
call
rol
or
daa
daa
dec
nop
add
mov
push
loopne
out
adc
call
out
jmp
(bad)
dec
fidivr
adc
test
(bad)
dec
or
mov
add
(bad)
(bad)
(bad)
(bad)
cmp
ret
or
fimul
stos
sub
stos
pop
pusha
movs
jge
(bad)
inc
mov
or
cmp
data16
or
cmp
mov
jmp
jmp
pop
push
xor
push
and
cdq
sbb
out
movs
fmul
aam
(bad)
push
js
sub
jg
lock
repz
aam
push
mov
jb
cmp
and
push
sub
xchg
daa
mov
fadd
lock
outs
pop
lods
cld
jge
popf
add
jp
or
(bad)
mov
cmp
cdq
or
add
add
in
sub
(bad)
xchg
outs
cmps
and
scas
sub
or
(bad)
jmp
jg
sub
ret
xchg
cpuid
pop
out
jp
(bad)
jg
jg
pop
repnz
call
sub
clc
mov
fnsave
fdiv
repnz
(bad)
mov
xchg
(bad)
(bad)
push
inc
cmp
inc
push
xor
mov
icebp
(bad)
mov
and
sub
sub
xchg
sub
in
mov
push
mov
ret
(bad)
(bad)
jp
mov
mov
fiadd
cmp
dec
push
pop
arpl
(bad)
(bad)
mov
fsubr
lea
pop
stc
(bad)
scas
out
inc
gs
bound
dec
iret
lods
hlt
fwait
int3
cmps
add
cs
add
mov
je
test
sub
out
mov
push
or
lahf
jg
mov
call
pop
mov
(bad)
je
and
in
out
mov
xchg
mov
pop
jbe
mov
aas
pop
and
sub
out
jbe
cmp
ret
repz
mov
add
pop
mov
xchg
or
xchg
aas
mov
add
das
and
pop
ret
call
stc
jp
mov
popf
adc
clc
add
inc
adc
and
sbb
adc
int3
std
shl
or
cmp
jo
js
jge
jo
fs
rcr
add
add
add
xchg
push
icebp
jg
add
div
add
outs
lock
pop
in
test
sub
mov
popf
mov
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
mov
lods
add
(bad)
fimul
mov
xlat
sti
aam
xor
pop
inc
(bad)
out
and
das
clc
add
pop
or
jle
and
add
adc
adc
add
or
pop
or
sbb
sbb
mul
mov
std
adc
sub
repnz
dec
adc
add
dec
add
loop
cld
add
fdivr
sub
loopne
cmp
add
inc
pop
pusha
or
push
add
jo
push
sbb
loopne
lahf
fst
fs
mov
sbb
pop
dec
jecxz
or
dec
add
daa
and
mov
mov
sbb
fwait
or
adc
sub
add
nop
rcr
adc
lods
ds
jge
inc
lds
or
daa
lock
and
rol
adc
add
fdivr
add
clc
in
fbstp
xor
add
add
xor
and
das
into
pop
cld
jecxz
das
xor
push
push
pop
mov
pop
adc
add
pop
mov
js
lods
cwde
pop
xchg
jg
mov
scas
pop
add
pop
add
popa
add
pop
loope
add
loope
or
xchg
adc
outs
outs
into
mov
xchg
push
dec
mov
(bad)
(bad)
jmp
push
xor
pop
pop
mov
in
repnz
js
ja
sbb
(bad)
push
adc
out
dec
(bad)
stc
cdq
push
xchg
arpl
adc
or
jne
or
mov
(bad)
push
fmul
not
xchg
retf
cmps
pop
icebp
and
movs
test
push
mov
leave
fidiv
shl
xor
pop
sahf
pop
sub
stos
nop
call
mov
xor
mov
inc
stos
sub
adc
sbb
call
dec
and
(bad)
fcomip
jmp
pop
jb
(bad)
cli
imul
pop
(bad)
mov
in
cmp
(bad)
js
ins
or
jge
addr16
ficomp
cmp
mov
cli
pop
pop
(bad)
(bad)
(bad)
out
sbb
(bad)
jno
dec
pop
mov
int3
ret
cmp
mov
call
mul
fimul
int3
ja
cmp
(bad)
(bad)
int3
pand
xor
lahf
sbb
(bad)
out
imul
xor
call
test
mov
(bad)
mov
(bad)
int3
adc
pop
repnz
jns
xchg
pusha
les
sub
jns
cmps
sub
jmp
jne
inc
test
dec
mov
fst
data16
(bad)
(bad)
(bad)
(bad)
js
outs
xor
xchg
jnp
jecxz
mov
jmp
pop
nop
cwde
fcom
push
clc
push
lods
inc
push
mov
mov
xor
adc
ins
dec
add
dec
and
or
lock
fild
and
xor
iret
push
repz
pop
jns
(bad)
fld
pop
jge
xor
pop
out
in
ja
js
push
dec
fucomi
scas
mov
jnp
adc
jp
(bad)
sbb
rcl
loope
iret
or
repz
(bad)
dec
jecxz
jae
push
add
xchg
(bad)
call
push
test
pop
lds
imul
inc
mov
jne
push
icebp
mov
(bad)
(bad)
push
jge
pusha
jne
fistp
mov
cld
mov
sti
cli
jmp
(bad)
(bad)
(bad)
fcmovb
pop
test
mov
pop
mov
retf
in
popf
jmp
pop
jg
neg
loopne
jmp
repnz
push
jmp
rcl
(bad)
jmp
add
jmp
lahf
(bad)
cmp
es
das
scas
cld
popf
jecxz
push
(bad)
(bad)
(bad)
(bad)
fimul
clc
int3
mov
cld
out
xchg
cdq
call
sbb
fistp
jmp
in
jg
iret
(bad)
(bad)
(bad)
push
(bad)
or
mov
in
mov
mov
sub
iret
push
xchg
shr
(bad)
ja
sar
dec
lahf
retf
cwde
(bad)
xlat
jmp
or
popf
call
xchg
repz
(bad)
(bad)
(bad)
(bad)
fidiv
jne
jmp
in
pop
ins
mov
repz
push
scas
inc
icebp
mov
ja
xchg
(bad)
aaa
fcmovb
call
arpl
aas
in
lds
imul
xchg
(bad)
inc
jg
jns
fwait
mov
outs
mov
imul
imul
fs
push
xor
lock
jmp
jo
fucomp
mov
xor
in
cdq
jle
clc
(bad)
das
ss
xchg
ret
pop
fistp
jbe
mov
push
loopne
(bad)
(bad)
(bad)
call
xor
xor
push
imul
push
addr16
das
cmc
xchg
(bad)
cdq
jmp
push
div
pushf
cmc
push
add
xchg
jge
jg
inc
popa
mov
(bad)
(bad)
(bad)
call
push
adc
aam
stos
clc
ds
adc
call
aas
xchg
(bad)
(bad)
(bad)
pop
mov
(bad)
neg
vpandn
std
jno
cld
xchg
je
lea
(bad)
(bad)
(bad)
dec
rcl
jb
mov
pop
pop
mov
pop
and
mov
jbe
popf
inc
lahf
sar
(bad)
call
lods
jnp
out
fwait
jecxz
sub
pop
jecxz
pop
xor
(bad)
jmp
sub
outs
xlat
xor
out
dec
fbld
imul
(bad)
cmp
sub
push
sahf
(bad)
fsubp
lock
mov
add
jle
and
xchg
pop
cli
sbb
outs
mov
imul
or
xor
xchg
(bad)
std
(bad)
(bad)
(bad)
mov
push
xchg
loope
retf
jecxz
data16
in
pusha
jg
mov
jl
mov
imul
iret
jbe
mov
ja
mov
retf
mov
jns
pushf
jno
ins
cmp
adc
ret
jge
rol
(bad)
fisub
scas
xlat
jns
mov
ins
mov
pop
jno
and
push
gs
icebp
cmp
out
in
jnp
adc
icebp
cdq
mov
jns
das
je
add
add
add
add
sbb
jno
imul
sbb
mov
nop
imul
cmps
fwait
add
cmp
(bad)
fcomip
inc
inc
test
cmps
or
je
cmps
loopne
les
pop
std
(bad)
jmp
test
sbb
out
fmulp
xchg
mov
dec
jmp
pusha
dec
call
cmp
rcr
outs
jmp
lds
shr
(bad)
(bad)
jmp
xchg
sti
shl
ret
neg
cs
test
push
clc
push
adc
(bad)
(bad)
fldcw
xchg
pop
inc
or
add
ficom
fcomp
cmps
rcr
push
call
xchg
adc
pop
push
dec
xor
(bad)
(bad)
inc
test
or
stc
(bad)
dec
add
rcl
pop
xor
or
pop
(bad)
(bad)
(bad)
push
sbb
mov
call
test
xor
jg
fiadd
(bad)
hlt
mov
xor
sahf
inc
mov
mov
inc
les
outs
test
das
adc
leave
clc
out
xchg
mov
leave
adc
sbb
inc
cwde
xchg
mov
cwde
mov
and
fcomip
es
cmp
cli
dec
in
adc
and
inc
(bad)
jg
push
inc
sbb
dec
hlt
pop
leave
push
stc
jnp
sbb
jmp
loop
add
jno
inc
sbb
or
(bad)
(bad)
(bad)
push
pop
add
ror
retf
add
(bad)
rol
jo
xchg
sbb
jo
mov
das
cli
pop
sub
pop
into
and
popa
push
je
in
xchg
xor
(bad)
adc
mov
push
xchg
aaa
sar
pop
ret
or
test
(bad)
inc
fcomp
dec
cli
ret
fs
shl
push
and
ret
or
ror
(bad)
(bad)
(bad)
call
mov
sbb
movs
hlt
(bad)
cmp
pop
cmps
cmp
rcr
add
dec
or
and
push
jne
xor
pop
popa
or
push
retf
add
add
sbb
adc
inc
test
imul
repz
add
add
rol
push
mov
add
mov
jmp
add
xchg
(bad)
cmp
add
(bad)
inc
add
stos
pop
xor
inc
rol
fs
dec
lahf
push
xchg
pop
xor
sar
loope
jns
xor
rcr
(bad)
(bad)
(bad)
inc
xchg
je
sbb
push
push
dec
or
adc
call
or
jnp
fild
push
sbb
nop
mov
int3
cmp
(bad)
jmp
nop
add
xlat
je
cwde
add
fcomp
enter
shl
test
(bad)
(bad)
inc
data16
inc
pop
xchg
les
(bad)
sar
popf
in
ja
mov
cmp
call
test
mov
lock
xchg
push
jne
out
sbb
int3
loopne
(bad)
sar
xchg
xchg
xchg
inc
adc
inc
dec
sar
cmc
minps
push
mov
ret
call
and
rcr
xor
cmp
(bad)
(bad)
jmp
add
cmps
xchg
dec
pop
xchg
and
loope
nop
sub
dec
adc
add
lahf
inc
jp
or
sbb
icebp
jne
dec
scas
push
retf
cmp
out
not
mov
add
out
ins
xor
adc
add
enter
mov
mov
in
fwait
pop
lock
cmp
mov
cmp
imul
dec
and
pop
retf
xor
adc
sbb
xchg
push
pop
dec
mov
(bad)
(bad)
(bad)
cmp
cmc
xor
xor
sbb
jl
scas
fnstsw
test
mov
mov
sub
fldlg2
mov
jmp
call
xchg
pushf
sbb
into
or
pop
cmp
pop
pop
jl
jmp
nop
mov
pop
mov
xchg
iret
mov
sub
into
out
jl
pop
mov
inc
mov
cld
jmp
fnstenv
sub
and
ret
lods
fcomp
jg
lds
jmp
inc
mov
add
mov
push
ror
loopne
out
ins
popa
ja
pop
aad
cmc
pop
cmp
jg
test
mov
iret
mov
hlt
(bad)
(bad)
(bad)
mov
pop
xor
mov
sub
mov
xchg
retf
mov
movs
aam
clc
adc
popa
test
pop
mov
xchg
aas
loopne
stos
cmp
aad
cld
repnz
imul
(bad)
(bad)
jmp
hlt
xlat
shr
daa
cmc
sar
in
push
and
repnz
cmp
clc
(bad)
(bad)
jmp
iret
push
(bad)
mov
sub
mov
and
xchg
call
inc
add
cmp
jmp
cmovo
(bad)
(bad)
jg
in
pop
and
xor
fs
xchg
fld
push
cmp
xor
fcmovbe
fdivr
(bad)
(bad)
(bad)
(bad)
dec
adc
nop
arpl
mov
sub
add
push
shl
stos
adc
and
add
loopne
inc
sbb
inc
mov
push
push
fld
movs
repz
add
push
dec
sub
inc
pop
sub
dec
cwde
inc
add
scas
out
mov
sbb
mov
nop
retf
push
lods
add
cmp
retf
cld
pushf
(bad)
jg
or
and
test
fnstcw
call
retf
mov
jb
mov
jmp
jp
xchg
(bad)
sbb
vpmacssdqh
push
or
test
out
adc
repz
ret
fcom
(bad)
(bad)
(bad)
mov
imul
xor
and
xor
rol
jl
(bad)
(bad)
jmp
data16
push
outs
in
sbb
sub
inc
mov
pop
and
and
or
ficomp
loopne
(bad)
(bad)
call
rcl
or
shl
retf
sub
nop
int
(bad)
(bad)
(bad)
mov
push
js
sub
or
push
cdq
aas
mov
sbb
xor
xlat
cmps
xchg
dec
(bad)
(bad)
(bad)
call
pusha
jp
inc
sti
retf
jbe
lahf
ss
inc
jmp
sub
add
lock
call
cmps
jne
bound
inc
call
dec
lods
enter
call
mov
cmps
jae
push
cmps
scas
add
sti
hlt
push
loopne
movs
or
xchg
or
sti
icebp
call
mov
mov
cmp
ret
(bad)
(bad)
(bad)
inc
test
outs
scas
in
int
add
adc
mov
sub
(bad)
(bad)
(bad)
(bad)
clc
add
xchg
jmp
and
cmps
add
arpl
sub
jnp
push
dec
xchg
dec
(bad)
(bad)
(bad)
jg
or
scas
arpl
les
scas
mov
hlt
cmps
push
mov
call
pop
push
addr16
cld
fisub
jnp
xor
loopne
fwait
in
call
popf
cmp
push
jecxz
jmp
ret
(bad)
(bad)
(bad)
dec
mov
pop
into
fwait
loope
mov
or
aam
popf
aam
push
rcr
adc
(bad)
(bad)
call
jmp
aas
xchg
add
pop
je
dec
dec
xlat
cmp
mov
cmp
cmp
push
or
mov
sbb
test
push
loopne
mov
(bad)
inc
xchg
clc
test
dec
mov
push
jno
jne
add
push
and
(bad)
(bad)
jg
in
or
pushf
push
jo
scas
shr
xor
ja
retf
cmps
pop
aam
(bad)
(bad)
jmp
mov
jmp
daa
ds
jns
pop
mov
mov
xchg
jbe
pop
out
clc
(bad)
mov
add
ja
dec
lea
sub
xchg
push
in
mov
(bad)
(bad)
jmp
adc
rol
mov
movs
dec
push
mov
ror
fwait
cs
call
inc
retf
pop
mov
loope
xor
pop
(bad)
(bad)
(bad)
jl
aad
inc
(bad)
pop
(bad)
push
cmp
inc
in
lock
cmp
test
or
push
inc
enter
xor
add
add
enter
fdiv
cmp
cmp
leave
add
jbe
fnstenv
or
fst
mov
popa
jne
jbe
inc
sahf
sahf
xor
je
daa
add
bndstx
dec
scas
adc
inc
inc
mov
dec
inc
adc
adc
test
inc
add
test
mov
add
sub
daa
int
stc
adc
add
inc
or
cld
add
add
dec
or
push
adc
xchg
adc
pop
add
dec
and
dec
dec
inc
pop
pop
adc
mov
mov
inc
adc
add
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
inc
pop
sub
adc
sub
xchg
mov
push
inc
retf
push
jae
xchg
outs
mov
inc
gs
fidiv
fstp
fwait
xchg
jle
fisttp
mov
sbb
cmps
xor
fcomp
fmul
xor
gs
jae
adc
cmp
retf
ror
push
inc
popa
add
push
pop
push
retf
rcr
mov
inc
add
adc
push
ins
sbb
(bad)
jl
mov
pop
mov
call
jnp
sahf
test
xchg
dec
push
and
mov
fisttp
push
dec
imul
nop
daa
cmp
inc
imul
dec
push
out
pop
in
(bad)
fadd
mov
sbb
inc
inc
ins
mov
(bad)
push
or
push
add
pop
and
jnp
ins
outs
jbe
push
mov
push
jo
and
dec
adc
sbb
outs
jo
rol
je
xchg
inc
int3
push
(bad)
fwait
ja
retf
pop
jmp
inc
pop
pusha
cmps
cmp
sbb
daa
mov
ror
loopne
push
cmp
movs
xchg
ins
jmp
xchg
and
mov
ret
and
mov
lods
imul
(bad)
sub
mov
xchg
xchg
jno
mov
cmps
cmc
loopne
pop
push
cmp
inc
xchg
loope
movs
enter
gs
inc
sub
mov
xchg
or
push
stc
pop
cmp
lds
dec
xor
pop
mov
dec
imul
rcr
adc
dec
mov
test
xor
popa
xchg
ins
jmp
pusha
ins
test
aas
inc
into
push
bound
mov
inc
jge
fs
imul
xor
xchg
jae
lea
sahf
popa
aad
jmp
mov
gs
add
and
inc
xchg
cwde
add
xor
lds
shl
sub
rcl
and
lds
pop
push
or
dec
push
jae
add
lods
jns
push
adc
sbb
mov
push
outs
ins
sbb
mov
mov
pop
mov
sub
jo
mov
adc
adc
cdq
je
imul
cmps
imul
popa
jbe
aaa
push
loop
sbb
push
xchg
into
push
nop
jmp
mov
inc
int3
jo
cli
fist
jae
and
jne
ins
fwait
dec
sbb
int3
inc
lahf
jmp
mov
xchg
jbe
jmp
mov
sbb
shr
pushf
inc
jns
ja
jecxz
mov
push
outs
je
retf
in
add
retf
cmp
xor
outs
adc
pop
ins
mov
or
or
cmp
push
jbe
repnz
loop
enter
outs
sub
shl
sbb
scas
xchg
sbb
je
mov
dec
inc
inc
repz
xchg
je
jae
fwait
dec
pop
sbb
outs
lds
or
inc
pop
loopne
or
dec
inc
dec
inc
outs
or
and
sbb
psubusw
jmp
popf
mov
ja
sub
(bad)
dec
in
push
dec
push
xchg
add
sub
or
mov
cmp
mov
dec
scas
out
outs
push
xlat
push
or
push
fnsave
mov
sub
fstp
push
sar
pop
test
imul
bound
addr16
ja
imul
iret
inc
ret
push
dec
inc
dec
adc
sbb
pop
dec
imul
dec
pop
pop
daa
into
jne
movs
fstp
pop
and
dec
fs
icebp
and
xchg
aaa
pusha
push
pop
sub
push
frstor
mov
jecxz
push
js
push
push
jmp
call
movs
adc
rol
mov
mov
imul
mov
xor
cmp
pop
xlat
and
xchg
shr
loope
pop
pop
add
inc
xchg
xor
enter
add
sbb
sbb
(bad)
mov
push
and
test
icebp
repz
push
jae
fcmove
cmp
pop
mov
adc
dec
mov
mov
inc
call
inc
gs
jp
mov
xchg
push
addr16
adc
in
cld
cmp
inc
ins
mov
add
pop
sbb
and
mov
cmps
and
ds
mov
cmp
inc
jae
mov
fidiv
xor
dec
push
xchg
sub
or
ins
adc
bound
sub
adc
movs
or
es
xlat
inc
or
stc
jbe
inc
push
arpl
sbb
mov
push
es
jmp
das
push
add
sub
loop
les
fadd
inc
fild
test
mov
aad
inc
sub
or
adc
fcom
xchg
popa
pop
imul
out
cdq
xlat
and
loope
rol
js
mov
cmp
push
(bad)
cmp
outs
push
popa
jae
mul
inc
stos
(bad)
sbb
inc
out
xor
test
sbb
cmp
std
add
adc
cmova
dec
into
mov
mov
add
jmp
clc
bt
out
cmp
popa
pusha
xchg
add
sub
pop
add
add
mov
ja
push
dec
push
dec
xor
imul
pop
loope
inc
cmp
sub
sbb
adc
xor
cld
es
dec
sbb
dec
mov
mov
(bad)
imul
jo
or
or
(bad)
(bad)
aaa
inc
repz
cmp
enter
jne
es
je
rcl
rcl
(bad)
test
add
ret
(bad)
or
out
pop
popa
mov
lods
mov
jb
pop
sbb
pusha
inc
fwait
cmp
loopne
loopne
outs
test
gs
inc
movlps
add
push
dec
or
jnp
xchg
dec
pushf
mov
sub
or
push
popa
pop
xor
ins
mov
or
push
or
push
in
nop
sbb
daa
dec
and
loop
xchg
lods
sbb
mov
iret
inc
jno
adc
xchg
sub
sub
inc
cmp
add
ror
pop
push
push
inc
jo
in
imul
inc
jae
add
es
outs
mov
and
imul
lea
inc
xchg
movs
add
add
add
jo
imul
xor
push
fstp
dec
out
add
inc
cmps
dec
enter
pop
test
push
or
mov
fs
icebp
bsr
loope
loop
inc
leave
jge
push
test
xchg
lea
lea
in
push
jne
cmps
xchg
mov
repz
movs
hlt
add
je
jne
mov
push
sti
and
ins
sti
jb
jl
push
adc
popa
mov
ja
jge
cmp
pop
mov
mov
cmp
dec
jnp
mov
out
pop
and
jnp
es
dec
out
jbe
xchg
outs
in
xor
mov
mov
loopne
mov
in
mov
sbb
push
movs
ins
pop
test
dec
sbb
dec
jne
outs
push
or
push
and
ins
pop
and
addr16
mov
mov
push
daa
call
sbb
inc
jp
ret
add
inc
sub
fadd
arpl
dec
shr
out
inc
scas
lock
and
sub
aam
inc
inc
mov
js
mov
std
sbb
pusha
sti
imul
xor
adc
push
cdq
adc
sub
in
mov
pop
and
iret
or
cld
ds
enter
inc
addr16
je
jo
mov
popa
imul
and
test
js
and
lods
mov
and
repz
mov
dec
sub
jae
bound
mov
popf
push
jb
(bad)
push
jb
and
les
mov
push
mov
push
push
sar
or
or
dec
imul
dec
add
jae
imul
imul
dec
pop
add
or
push
or
pop
ud2
(bad)
(bad)
(bad)
inc
or
and
lock
xchg
add
sbb
sub
cmp
lock
lock
adc
in
push
stc
sbb
lock
pop
movs
adc
mov
dec
fwait
(bad)
lock
or
(bad)
(bad)
in
setb
movs
adc
sub
lock
add
outs
lock
add
jo
push
lock
add
lock
out
(bad)
jg
lock
add
add
lock
sbb
adc
or
jns
sbb
mov
movs
cmp
or
adc
adc
aad
inc
mov
add
add
inc
add
jg
lock
push
and
sbb
xlat
ud0
or
lock
add
lock
add
push
xlat
xor
fwait
pop
jns
pop
xor
or
or
or
adc
push
dec
adc
stc
pop
shr
or
or
or
pop
bswap
mov
mov
or
or
outs
push
fnsave
es
or
jb
adc
mov
or
pop
pop
add
pop
pop
and
and
invd
dec
invd
push
add
loop
outs
fwait
add
and
cmp
lock
adc
adc
push
pop
inc
lock
lock
pop
sub
pop
sub
and
(bad)
cwde
scas
std
std
or
add
syscall
retf
sbb
adc
mov
not
add
sub
push
add
aam
aad
xor
inc
add
pop
sub
or
cs
xor
js
add
(bad)
mov
or
adc
adc
and
out
add
xor
add
push
movs
jmp
push
mov
mov
xor
or
jo
or
out
and
jo
and
sub
xor
adc
add
pop
ret
or
or
xor
adc
sbb
lock
ror
in
push
or
adc
mov
sub
inc
sti
ja
or
add
mov
shl
push
push
mov
les
(bad)
mov
or
cwde
adc
out
or
push
or
add
push
sub
(bad)
lock
das
and
xor
or
sub
mov
inc
daa
push
cmp
or
or
outs
cli
jmp
sbb
adc
sub
inc
and
xor
dec
inc
and
xchg
lock
add
mov
add
shl
mov
pop
and
and
add
outs
clc
or
adc
or
jno
aad
push
bound
retf
xor
push
cs
pop
data16
(bad)
out
xchg
pop
adc
jo
dec
sbb
and
ret
jmp
or
movs
data16
adc
jb
xor
adc
or
jbe
dec
rcr
add
rcr
sbb
adc
loopne
outs
pop
sbb
cmp
idiv
mov
and
daa
add
push
sbb
push
ds
cmp
pop
jo
mov
sub
lock
sbb
add
xlat
mov
sbb
adc
xchg
je
push
xchg
lock
les
sbb
push
or
cld
add
pop
test
and
push
xor
outs
or
arpl
dec
sub
js
(bad)
aas
cmp
and
push
pop
adc
pusha
adc
pop
xor
(bad)
js
pop
adc
jo
pop
adc
lods
clc
cmp
adc
cwde
(bad)
jno
or
dec
(bad)
jg
mov
test
js
inc
push
dec
push
adc
sub
dec
pop
xchg
dec
or
jl
call
in
es
cmp
sbb
or
sub
push
inc
push
es
imul
jmp
mov
push
pop
pop
gs
dec
sub
inc
fidiv
das
add
jp
add
fcom
mov
push
adc
sbb
enter
add
adc
or
int3
cmp
outs
clc
jmp
inc
sub
and
xor
lock
(bad)
aas
cld
sbb
push
add
xchg
adc
outs
push
push
adc
ds
inc
and
adc
mov
adc
sub
xchg
push
adc
lock
fcomp
xchg
adc
sbb
cmp
(bad)
sbb
sub
cmp
adc
daa
retf
add
push
push
or
movs
push
and
pop
pop
push
mov
(bad)
in
jg
mov
dec
sbb
xor
push
ds
sub
jmp
push
or
jl
(bad)
sub
cli
add
cmp
pusha
adc
add
adc
sub
jmp
add
clc
stos
and
lock
push
push
ins
sub
mov
outs
js
or
dec
or
mov
inc
xlat
das
or
nop
adc
add
pop
or
sbb
sbb
inc
mov
mov
sub
xchg
sbb
daa
sub
pop
add
or
shl
push
add
or
push
sub
or
idiv
add
cwde
or
mov
adc
push
lock
fnstsw
lock
lods
ds
outs
or
lods
lock
add
fsub
imul
mov
es
adc
cmc
inc
jmp
sysenter
or
mov
push
mov
pop
dec
or
scas
mov
add
sub
inc
es
ins
sbb
aam
jp
sbb
leave
pop
push
mov
jecxz
lock
add
adc
call
adc
shr
mov
fist
imul
pop
dec
cmp
aas
xor
dec
sbb
adc
icebp
dec
ss
push
jl
adc
lock
adc
mov
or
ins
sub
push
adc
adc
or
or
add
adc
dec
cmps
mov
or
nop
or
pop
(bad)
out
mov
cmp
pop
jbe
sub
mov
inc
inc
inc
pop
add
fmul
pop
push
jo
or
adc
sub
xchg
lock
dec
inc
adc
sbb
sbb
ds
adc
cld
cmp
sub
(bad)
sub
daa
inc
or
mov
jo
daa
adc
loopne
scas
(bad)
call
push
or
test
or
pop
or
xchg
push
and
bndldx
mov
mov
sbb
inc
pop
sbb
pop
or
push
or
jmp
(bad)
jmp
lock
inc
xor
adc
inc
adc
shr
ss
pop
add
and
lock
or
xor
adc
or
sub
lods
cmp
sbb
fcomp
push
adc
or
mov
pop
push
adc
and
jnp
das
dec
and
nop
sub
(bad)
jmp
cmp
push
push
jg
test
aas
nop
in
fs
ret
fcomip
and
lock
sub
paddw
adc
lock
jb
sub
cmp
ins
push
adc
sbb
add
pusha
xchg
adc
loop
push
pop
lock
sbb
(bad)
clc
push
out
test
pop
xor
pop
sbb
or
inc
popf
icebp
(bad)
(bad)
mov
ja
pop
movs
adc
jo
mov
and
sub
push
dec
sub
fist
aaa
outs
mov
jle
pop
pop
into
or
comiss
ud0
pop
sbb
sub
and
arpl
inc
push
bndstx
dec
setno
dec
cmp
arpl
dec
or
dec
or
ret
push
mov
sub
cmp
or
mov
add
aas
fst
adc
clc
xchg
in
in
cmp
inc
or
xor
adc
cmp
adc
jg
aas
cwde
adc
lock
push
adc
ins
lock
add
sub
dec
or
scas
mov
fdivr
mov
cmps
push
pop
cmp
and
pop
sbb
push
add
scas
(bad)
daa
xor
sbb
push
and
sub
and
add
sbb
(bad)
in
es
sub
and
js
adc
sub
(bad)
push
push
push
inc
mov
loop
or
inc
push
sbb
mov
mov
or
push
push
jno
sbb
push
(bad)
das
(bad)
ficomp
sub
or
inc
fs
jb
push
punpcklwd
cli
pop
sub
add
lock
pop
pop
push
ret
popa
(bad)
outs
fmul
push
fwait
jne
mov
mov
sbb
add
sbb
mov
cmp
in
cli
jmp
sub
and
sbb
and
and
xor
adc
add
sub
and
sub
xor
xor
xchg
push
data16
push
jge
or
je
or
or
cmps
adc
adc
pop
push
sub
push
cmp
inc
sbb
jle
prefetcht0
xor
sbb
fcomp
inc
cmp
adc
mov
sbb
pop
sub
adc
sbb
push
mov
inc
daa
or
pop
pop
xor
dec
fidiv
es
and
push
out
lock
push
mov
sbb
je
outs
push
into
add
ret
push
cld
sbb
std
add
sbb
or
lock
or
xchg
sub
sub
push
adc
call
call
pop
jnp
mov
sbb
or
fcom
xchg
outs
or
dec
call
adc
or
pop
mov
(bad)
cmp
adc
pop
adc
add
lea
fsubr
pop
jl
adc
xor
cmp
add
fmul
std
(bad)
cmp
pop
pop
pop
imul
xor
xor
jns
outs
cli
loope
and
sub
or
or
push
cld
js
fistp
lock
mov
jle
jecxz
ficomp
lock
add
jp
or
inc
inc
mov
dec
pop
dec
out
and
jg
adc
xor
cs
sbb
sub
cs
and
push
sbb
psraw
pusha
push
cmp
fidivr
push
or
push
inc
rcr
lea
xchg
or
leave
cmps
xor
push
inc
adc
sub
push
push
mov
mov
jp
dec
xor
fmul
shl
dec
push
lock
fiadd
outs
(bad)
call
cwde
push
in
adc
add
pop
jb
lods
mov
push
add
sub
jmp
and
cmp
js
in
fist
sub
sub
lock
loopne
or
pop
sbb
add
xor
cmp
or
and
pop
push
push
mov
add
ror
fisttp
add
jecxz
dec
pop
ss
add
pop
push
call
jle
(bad)
es
cmp
dec
mov
xchg
add
rcr
dec
pop
xchg
jmp
or
icebp
mov
add
xor
xor
xor
dec
push
push
pop
test
sub
or
push
adc
outs
xlat
inc
push
data16
adc
adc
jp
adc
adc
sar
and
dec
push
adc
jg
push
fdiv
push
call
inc
adc
or
cwde
lock
xor
xchg
pop
add
pop
or
or
ror
and
inc
add
stos
sbb
add
ja
add
add
adc
clc
add
(bad)
sub
mov
dec
pop
sbb
dec
pop
pop
inc
call
out
jmp
or
adc
and
daa
cmp
add
sub
pop
jl
das
clc
call
sbb
adc
pop
push
or
or
sub
(bad)
sbb
dec
adc
inc
push
push
std
sbb
sub
add
push
xor
pop
sbb
and
mov
or
pop
add
adc
push
jmp
pop
and
pop
adc
ins
adc
cs
dec
add
cmps
call
adc
push
adc
ins
lods
sbb
push
push
push
mov
adc
or
jmp
or
enter
shl
adc
sahf
outs
sbb
hlt
pop
dec
(bad)
mov
mov
sub
sbb
add
and
pusha
(bad)
jg
adc
push
xor
dec
adc
push
sbb
adc
adc
in
clc
sbb
imul
es
out
push
in
retfw
popa
scas
add
popa
lock
adc
mov
aaa
loopne
mov
mov
xor
push
push
jne
loopne
sub
or
jo
and
add
push
mov
inc
pop
mov
mov
ror
fucomi
xor
push
rcl
mov
or
inc
sbb
jmp
add
push
addr16
push
and
or
add
sbb
nop
(bad)
sti
fld
adc
or
or
adc
call
dec
push
or
xchg
add
das
cmp
out
setge
xor
sbb
or
aas
sahf
prefetcht0
push
add
jae
lods
sbb
pop
push
add
inc
push
xor
das
add
pop
rdmsr
outs
jmp
adc
pop
test
push
xor
add
cmps
add
adc
test
mov
mov
inc
xor
mov
ret
sbb
xchg
push
pop
sbb
or
and
push
pop
test
inc
jg
dec
pusha
inc
pop
xor
adc
bound
pop
pop
cdq
(bad)
jne
and
ret
or
sbb
jno
adc
pop
test
mov
sub
mov
adc
lods
push
jmp
push
push
and
adc
or
or
or
aaa
outs
pop
stos
pop
sbb
sbb
lock
call
mov
and
pop
data16
adc
sub
xor
xor
nop
movs
cmp
dec
add
lods
jecxz
ds
lfs
inc
mov
movs
and
inc
sub
mov
je
adc
or
sbb
xchg
xor
dec
cmp
iret
adc
push
push
mov
aaa
adc
sub
sbb
push
bound
push
cmp
pusha
xchg
inc
nop
adc
push
or
call
mov
and
gs
and
push
sub
sbb
adc
fwait
pop
add
inc
dec
add
xlat
sub
push
and
test
pop
xor
fwait
mov
adc
xor
and
sbb
ins
sbb
rcl
pop
fimul
call
dec
(bad)
popa
adc
push
inc
sub
or
sbb
dec
or
sbb
add
pop
or
lock
sub
lea
mov
or
xchg
inc
ret
xor
xchg
movs
sbb
pop
jg
mov
add
jg
sub
unpcklps
adc
xor
aas
adc
or
and
fsubp
int
stos
or
sbb
or
scas
das
les
lock
add
lock
mov
add
pop
lock
stos
add
sub
adc
sbb
dec
push
sub
cmps
or
out
adc
mov
sub
ja
lock
push
or
vpmacssww
sbb
lock
xor
push
lock
adc
pop
sub
inc
xchg
cs
repz
lods
pop
les
push
adc
cs
push
lock
add
or
cmp
sbb
push
das
sbb
pop
sbb
and
sbb
cmp
lahf
movhps
pop
sbb
fiadd
add
(bad)
sbb
add
push
pmaxub
lahf
and
in
sub
jge
lock
push
adc
push
add
adc
(bad)
das
xor
push
adc
and
or
adc
(bad)
jg
sbb
jns
aaa
dec
jo
das
es
sub
sbb
push
fmul
or
adc
gs
mov
sbb
imul
xor
push
pop
adc
or
mov
sbb
cmp
xor
in
sbb
push
fcomp
mov
adc
and
or
es
clc
scas
clc
jbe
sbb
jbe
dec
sub
call
push
sbb
inc
sbb
das
shr
cli
test
ins
and
cmp
adc
movups
jne
adc
or
mov
(bad)
pop
pop
and
or
call
push
inc
pop
and
test
sbb
xor
sbb
dec
sub
add
pop
dec
aas
loopne
push
mov
(bad)
adc
out
sbb
mov
popa
js
push
pop
and
inc
xor
push
add
sub
xor
jle
imul
adc
js
cmp
cmp
adc
pop
mov
adc
pop
jno
(bad)
or
sbb
pop
xchg
adc
scas
adc
inc
push
cmps
js
adc
push
add
gs
sbb
pusha
push
adc
clc
fbstp
dec
daa
or
dec
xor
inc
sbb
fwait
xor
mov
(bad)
and
jae
or
cs
or
lock
add
adc
push
adc
aad
push
or
jecxz
lock
xchg
mov
pop
cwde
dec
test
or
sbb
mov
daa
pop
sbb
and
adc
pop
hlt
push
sbb
adc
xor
dec
pop
or
cs
sub
dec
push
inc
sbb
inc
sar
adc
sbb
or
mov
adc
sbb
test
pop
or
adc
fimul
or
xchg
cwde
mov
cmp
push
push
or
pop
into
ins
or
aas
int
mov
mov
lock
shr
fs
loopne
and
push
lods
adc
add
inc
sub
inc
movs
js
dec
or
in
pop
add
aam
idiv
les
cmp
sub
and
or
jbe
scas
or
mov
or
inc
pop
(bad)
std
stos
cmc
and
ss
and
sub
dec
add
cmp
mov
xor
std
cmps
sbb
aaa
push
pop
pop
or
sub
cli
call
xor
inc
and
sub
or
or
push
fs
and
or
in
das
cli
aaa
cdq
mov
inc
adc
or
arpl
or
adc
xor
stos
repnz
mov
mov
jae
add
fs
add
sbb
lds
or
cli
(bad)
dec
or
dec
sbb
and
adc
sub
adc
sub
mov
sbb
scas
pop
das
and
add
jp
pop
(bad)
pop
or
int
sub
add
and
sub
fimul
loop
aaa
and
mov
rcr
rcpps
adc
addr16
sub
sub
mov
test
xor
sub
adc
jae
cmp
je
or
adc
sbb
fisttp
adc
aaa
pusha
sti
(bad)
jns
inc
mov
ins
adc
xor
jp
sbb
pop
sub
inc
mov
pop
and
pop
cld
neg
pop
pop
push
and
push
or
xor
loopne
fwait
in
cwde
mov
jne
in
mov
repnz
sub
or
clc
neg
adc
or
or
adc
or
inc
and
popa
cmp
add
test
cld
push
and
popf
loopne
enter
scas
clc
adc
(bad)
adc
bound
or
adc
jbe
sub
sub
fdivr
fcomip
jmp
xchg
pop
inc
daa
adc
adc
sub
adc
ds
xor
push
jg
sbb
sub
cmp
and
inc
jp
inc
cmp
cmp
jg
add
and
daa
and
sbb
mov
xor
fwait
leave
jecxz
adc
imul
loopne
or
sub
pop
adc
dec
mov
jo
push
in
add
jo
or
test
adc
cdq
cmp
dec
and
sbb
rcl
pop
xchg
sub
scas
js
mov
pop
les
sbb
pushf
adc
jo
adc
dec
adc
lock
sub
sub
cmp
pop
aad
aas
std
dec
getsec
push
adc
adc
sub
cmp
movs
imul
and
ins
int3
enter
add
mov
add
mov
(bad)
fistp
sbb
sub
jle
daa
pop
pop
loope
sub
mov
add
push
dec
adc
in
jge
movs
rol
adc
push
cmps
es
lock
das
and
mul
sbb
push
jae
mov
lahf
sbb
inc
add
pop
push
xchg
fnsave
pop
sub
mov
add
or
sti
add
lock
add
ficomp
or
jmp
adc
push
push
or
jmp
das
mov
sub
and
pop
lock
add
mov
cmp
push
bound
cmp
int
(bad)
out
adc
push
ja
ins
inc
call
icebp
mov
push
add
cmp
gs
lock
jg
add
mov
mov
jo
push
sbb
or
dec
dec
xor
fs
adc
dec
adc
(bad)
ret
or
sbb
sbb
outs
add
sbb
adc
pusha
mov
(bad)
or
adc
push
and
xor
lock
push
in
jp
out
mov
inc
cmp
or
push
add
jle
push
mov
adc
ror
popa
sbb
xchg
ss
into
pusha
xor
pop
or
adc
pop
(bad)
inc
aam
push
mov
mov
pop
outs
clc
js
xor
imul
int
lea
in
adc
idiv
push
sbb
xlat
lock
or
lock
or
add
add
fmul
mov
or
pop
aaa
dec
add
or
jno
cmp
scas
adc
add
dec
cmp
push
sbb
call
add
adc
sub
push
push
mov
push
adc
std
ja
sti
push
cmp
in
test
dec
push
mov
test
cmp
ss
sbb
inc
or
adc
ret
loopne
call
inc
sbb
and
xor
gs
xor
and
jg
popf
adc
sbb
jb
cmp
dec
add
in
(bad)
aas
or
sub
adc
sbb
call
pop
and
or
jbe
push
pop
sbb
lock
out
cli
dec
push
adc
dec
imul
pop
or
aas
fist
sub
and
xor
pop
cmps
ds
push
sbb
adc
pop
sbb
loope
jmp
adc
pop
popa
push
pop
pop
inc
adc
pop
add
and
pop
push
inc
and
or
inc
pop
or
aam
or
xchg
push
adc
shl
pop
lock
cmp
sbb
add
inc
adc
sub
push
pop
or
push
movs
dec
dec
inc
ss
push
push
cmp
aas
or
adc
jmp
(bad)
(bad)
push
js
sbb
jbe
fisub
xchg
sbb
xor
pop
add
adc
sub
or
(bad)
fistp
jle
and
lods
cmp
or
aaa
sbb
or
mov
push
or
call
cmc
mov
or
push
or
and
(bad)
dec
jmp
pop
pop
sbb
jno
and
and
mov
and
or
inc
push
dec
and
rcr
sub
jmp
(bad)
pop
sbb
ins
jae
aaa
push
ja
outs
out
push
stos
push
inc
mov
mov
add
cmp
(bad)
(bad)
inc
adc
push
inc
pop
xor
push
inc
sbb
sbb
je
scas
call
and
mov
es
push
std
adc
push
(bad)
xor
mov
rol
sbb
es
push
adc
js
push
adc
push
mov
data16
sbb
push
data16
xchg
cmp
lock
jl
sar
jno
test
stos
inc
add
pop
pushf
aaa
dec
sbb
clc
call
pop
xchg
push
sahf
stos
sahf
adc
push
imul
cs
mov
sbb
xchg
pop
test
out
fimul
inc
add
add
add
add
cld
xchg
imul
xchg
mov
add
pop
jbe
add
sar
inc
daa
inc
mov
xchg
mov
es
jbe
sub
xchg
mov
cmp
or
xchg
pop
adc
addr16
xchg
stos
jmp
dec
pop
(bad)
sbb
add
adc
mov
add
add
pop
adc
add
popa
rcr
or
lock
outs
mov
xchg
add
xor
sub
or
mov
mov
mov
sbb
pop
outs
push
pop
pop
pop
pop
push
paddq
push
mov
adc
inc
cwde
aam
ds
dec
adc
popa
or
add
add
adc
loope
rol
add
cmovp
jmp
push
sub
sbb
pop
adc
(bad)
call
mov
or
push
pop
add
or
mov
sub
pop
jge
push
sbb
push
cmp
outs
or
and
and
or
inc
mov
xor
movlps
fist
add
or
jmp
add
cmp
daa
push
adc
or
imul
jmp
adc
adc
and
call
shl
fwait
out
push
push
and
sub
mov
jmp
ret
das
shl
fwait
push
mov
(bad)
pop
test
mov
fmul
push
cmp
jp
cmps
add
mov
adc
ficomp
adc
sbb
ret
push
cmp
and
adc
fimul
or
loopne
fadd
add
cmp
mov
jmp
push
or
push
push
(bad)
les
and
xor
or
sbb
daa
popa
es
and
dec
inc
mov
or
aaa
or
outs
mov
sub
inc
and
pop
xor
jns
or
xor
xor
xor
scas
mov
pusha
xor
or
into
stos
xchg
es
ss
test
daa
inc
sar
mov
adc
and
push
cmovo
xor
jbe
inc
mov
or
pop
dec
lock
mov
inc
push
in
sbb
pop
sbb
clc
jg
pop
push
or
mov
adc
mov
push
je
in
scas
pusha
lahf
add
xchg
push
or
cmp
sub
aaa
jae
adc
sbb
or
ucomiss
in
pop
retf
adc
adc
inc
or
pop
sar
(bad)
fild
and
jne
or
pop
pop
or
add
add
jl
or
into
iret
push
inc
ins
push
jmp
pop
mov
sbb
mov
sub
inc
mov
pop
sub
pop
push
sbb
inc
daa
(bad)
loopne
sbb
les
add
je
jb
sbb
data16
adc
inc
pop
outs
fldcw
mov
adc
push
push
or
lds
and
dec
rcr
push
in
or
adc
xchg
cmp
xor
mov
jae
scas
je
lock
lock
dec
cmp
and
(bad)
(bad)
jg
add
adc
sbb
xor
push
dec
adc
push
cmp
shr
cs
(bad)
cwde
add
inc
sub
and
ss
outs
aam
inc
movs
jae
stos
add
sbb
sbb
jg
(bad)
(bad)
ficomp
sbb
js
sub
out
cmp
and
push
lock
jmp
sbb
lock
sbb
cmps
ds
xor
pop
je
or
xor
retf
sbb
inc
clc
jg
call
cs
sub
movaps
sbb
sub
or
fstp
sub
aaa
inc
outs
(bad)
dec
dec
gs
ficomp
sbb
jg
sbb
push
push
jb
call
cmp
fst
leave
jne
or
sub
(bad)
ficom
dec
inc
xchg
rcr
push
hlt
or
adc
out
adc
aaa
sub
fcomp
sti
add
scas
add
imul
cmp
mov
jns
rcl
sub
adc
lock
push
lock
dec
mov
sbb
and
out
add
pop
mov
mov
jp
add
add
shl
loopne
cmps
sub
sbb
push
and
pop
mov
push
and
das
cmps
add
inc
pop
push
sbb
movhps
lock
dec
inc
setnp
loopne
arpl
add
mov
in
push
and
test
and
pop
cmc
pusha
cmp
ror
call
mov
push
or
inc
cmp
sbb
nop
xor
add
push
out
xor
xor
cmovnp
push
cmp
adc
xor
mov
ret
jg
adc
sahf
outs
jae
stos
jo
push
ins
add
pop
jle
mov
loopne
mov
cs
mov
rcr
pop
sub
daa
ret
call
adc
inc
cmp
push
out
sub
jmp
dec
setle
jl
and
dec
adc
loope
aam
jl
xchg
inc
out
das
or
fs
mov
(bad)
sub
xor
add
jb
pop
adc
cmps
or
mov
call
add
ret
mov
xchg
push
loop
jb
leave
jle
adc
sbb
aad
jne
jg
adc
pmaxub
cmp
sar
test
test
pop
fidivr
inc
cmp
add
(bad)
cmp
cmp
ficomp
add
sub
bound
add
and
sbb
mov
push
ins
mov
pop
add
inc
inc
add
mov
adc
test
es
sbb
or
cmp
mov
adc
sbb
cdq
push
xor
stos
or
push
popf
sbb
rdtsc
push
stc
inc
ins
imul
sub
sbb
das
inc
sbb
dec
inc
imul
xor
jns
xor
call
mov
bound
outs
fcmovnu
or
push
pop
jbe
sbb
outs
pop
sub
push
push
adc
adc
prefetch
or
add
test
push
cs
adc
clc
fwait
add
or
adc
push
(bad)
(bad)
jg
inc
add
push
pop
pop
aas
cmp
xchg
mov
adc
jns
(bad)
(bad)
mov
outs
addr16
inc
xor
daa
xchg
out
into
(bad)
cmp
xchg
pop
and
(bad)
std
in
jg
jg
and
add
es
adc
jg
cmp
lock
sbb
add
pop
push
add
pop
add
dec
(bad)
dec
in
scas
unpcklps
maxps
xchg
cmp
mov
adc
jmp
adc
or
pop
or
inc
push
adc
out
ins
mov
and
ltr
xor
(bad)
dec
sbb
adc
pop
adc
pop
or
adc
adc
lahf
sbb
inc
ss
fisub
add
inc
adc
push
das
retf
sbb
adc
and
mov
adc
or
(bad)
fdivrp
(bad)
cmp
pop
or
push
and
icebp
add
add
pop
push
sub
lods
clc
or
test
sub
or
add
xchg
sahf
fmul
sbb
add
push
(bad)
push
mov
fdivr
push
and
mov
add
stos
arpl
jmp
lock
add
js
add
or
out
add
adc
or
fidiv
or
jmp
add
jnp
jb
or
ins
pop
or
push
mov
add
sbb
sbb
adc
add
add
adc
xor
inc
add
pop
or
push
or
sbb
sub
sub
call
jg
or
push
adc
das
push
dec
jl
pop
sbb
lock
push
jle
fwait
mov
push
lock
or
mov
sbb
or
mov
sbb
lock
add
sub
jmp
push
and
push
or
adc
and
(bad)
jg
mov
inc
push
push
jo
aaa
or
mov
push
ret
push
call
jmp
das
stos
mov
add
or
sbb
lock
scas
and
or
call
pushf
push
lea
pop
mov
sbb
and
gs
push
dec
cdq
fdiv
or
jne
jae
js
push
es
add
push
imul
or
add
cmp
sub
xor
clc
pop
pop
adc
lahf
pop
and
pop
mov
clc
dec
daa
js
xchg
lods
sbb
dec
adc
pinsrw
aad
xchg
and
or
cmc
lea
push
add
push
and
and
pop
add
dec
sbb
(bad)
test
add
push
push
add
or
mov
inc
bound
or
or
adc
push
pop
adc
cld
fimul
sbb
push
cmp
or
add
adc
sbb
mov
adc
int3
cld
mov
mov
push
and
fimul
or
sbb
cld
aaa
mov
xor
or
mov
aaa
xor
outs
pop
jmp
aaa
add
adc
aam
sbb
test
(bad)
sub
adc
dec
dec
push
ret
mov
sbb
fld
stc
add
or
and
xchg
ret
out
call
es
or
or
push
cmp
pop
mov
xor
push
adc
and
push
or
and
mov
dec
add
hlt
jg
ficomp
or
push
sbb
pusha
nop
adc
scas
push
xchg
add
and
in
jmp
loopne
ds
mov
sti
fistp
loopne
inc
sbb
sbb
sbb
jo
movs
outs
int
inc
pop
dec
add
aad
jne
outs
mov
nop
sbb
pop
sbb
adc
fwait
mov
mov
or
xor
or
lds
cmp
push
push
sbb
cs
test
inc
retf
push
out
mov
push
fmul
and
sub
pop
and
add
test
sti
out
mov
retf
outs
loopne
add
cmps
mov
or
inc
cmp
inc
jecxz
inc
call
and
add
call
jae
ret
imul
add
inc
pop
or
pop
jg
xchg
push
push
and
or
inc
push
and
and
(bad)
jg
(bad)
adc
ins
cmp
inc
and
mov
inc
dec
or
push
adc
packssdw
mov
clc
mov
lock
ret
inc
fisub
adc
jmp
add
sub
rcr
or
imul
cld
pop
push
sub
sub
test
mov
mov
emms
or
sub
fidivr
cmp
push
push
jmp
push
push
adc
(bad)
cmps
(bad)
inc
push
inc
inc
sbb
and
adc
and
xchg
call
dec
sub
(bad)
adc
outs
fist
or
mov
or
jg
das
add
or
inc
or
add
push
cmp
dec
push
gs
jo
test
popa
xor
call
outs
ja
imul
and
sub
push
sbb
push
sub
add
or
xchg
push
or
add
sbb
push
aaa
mov
sub
jl
or
sub
adc
pop
int
xor
pop
mov
mov
outs
add
shl
push
inc
pop
popf
sar
or
mov
mov
outs
dec
xor
push
mov
mov
push
push
cs
add
add
or
sbb
or
jmp
(bad)
dec
dec
loopne
das
and
call
add
lock
add
and
mov
jo
pop
bound
push
retf
or
dec
in
mov
cmp
fmul
jae
add
movs
push
push
call
and
out
push
pop
or
sub
sub
loop
lahf
fs
or
inc
mov
inc
push
xchg
lock
mov
arpl
pop
(bad)
fist
mov
or
or
cmp
or
or
and
std
call
adc
or
and
inc
sub
or
push
jo
aas
cwde
adc
sbb
cmp
inc
mov
xor
sbb
dec
dec
mov
je
pop
adc
add
arpl
(bad)
test
inc
sbb
xor
xor
sub
movs
out
(bad)
aas
sub
pop
sbb
xor
sub
and
cmp
and
xor
xor
xor
pop
fucomip
int
xor
inc
cmp
and
sub
and
sbb
xor
neg
in
out
and
pop
and
sub
cmp
push
aaa
cmp
push
inc
cmp
inc
xor
pop
push
sub
xor
outs
arpl
fdivr
daa
add
jne
(bad)
mov
sahf
cmp
ss
aas
dec
ds
dec
das
sub
cmp
cmp
cmp
fcmovnu
cld
cmp
dec
inc
cmp
jb
push
inc
jb
inc
dec
inc
sub
jmp
sub
nop
add
aas
push
js
cmp
push
(bad)
in
out
add
xor
aaa
pop
sub
dec
and
push
cmp
inc
test
jbe
rcl
aaa
aam
inc
aaa
ss
ds
xor
cmp
(bad)
push
cmp
dec
sub
cmp
cmp
and
dec
mov
sar
adc
mov
dec
dec
mov
pusha
sub
cs
daa
cmp
sbb
in
xor
xchg
es
cmp
arpl
aaa
xchg
xor
push
es
or
sub
pop
inc
inc
sbb
jg
cmp
and
dec
inc
xor
pop
ss
sahf
push
xor
sub
inc
inc
sub
dec
out
loope
inc
pop
cmp
outs
aaa
das
xor
cmp
inc
xor
cmp
cmp
rcl
cmp
jmp
dec
jl
aaa
aaa
mov
scas
jb
sub
pop
jo
(bad)
(bad)
(bad)
inc
dec
ins
rcl
sub
in
dec
imul
pop
sub
push
(bad)
pop
icebp
inc
push
pop
xor
push
push
ja
mov
inc
xor
push
mov
dec
(bad)
jmp
mov
ss
aas
mov
ins
cmp
and
push
mov
inc
inc
stos
(bad)
mov
cli
arpl
pop
dec
das
xor
bound
jl
outs
dec
jb
dec
dec
and
mov
inc
pushf
add
push
jge
dec
addr16
inc
dec
bound
fist
lahf
xor
push
sar
pop
jge
pop
sub
or
fidivr
xlat
mov
add
jbe
add
pop
push
cdq
pop
or
pop
adc
or
dec
outs
push
jg
shl
in
je
or
or
or
jl
inc
movs
cmp
push
sbb
and
xor
or
mov
mov
push
cmc
scas
xor
mov
cmp
push
call
add
clc
add
rcl
or
xor
dec
or
rol
push
mov
or
lock
xor
enter
outs
push
or
push
mov
add
mov
or
and
in
add
(bad)
adc
mov
movs
and
fsubr
or
or
stc
jbe
jnp
mov
mov
ret
test
and
test
or
inc
pop
je
fiadd
jge
pop
mov
add
inc
or
dec
xchg
rol
inc
and
push
sbb
adc
xchg
cmp
sub
add
test
inc
out
pop
dec
sbb
and
fisubr
or
or
mov
and
and
cmp
xchg
mov
scas
loopne
cmps
dec
push
cdq
or
pushf
in
or
lock
add
das
jg
mov
adc
sbb
adc
sbb
or
dec
cmp
cmp
mov
adc
pop
add
mov
inc
btr
(bad)
inc
(bad)
cmp
shr
lea
sub
mov
push
sub
repz
pop
cmps
fadd
dec
push
pop
imul
adc
xchg
push
mov
or
mov
lds
(bad)
outs
push
aad
cmp
jge
push
movs
and
mov
push
push
test
sbb
icebp
shr
cmps
adc
mov
mov
popa
and
or
out
int
cmp
or
cmp
add
or
pop
out
fidivr
mov
sub
sbb
sbb
adc
xchg
jp
in
in
in
fimul
stos
add
sbb
add
lods
ins
and
xor
sbb
xor
and
neg
pop
add
adc
push
sbb
cmp
outs
fsub
dec
cmp
sbb
inc
(bad)
(bad)
fidiv
add
jnp
test
dec
ins
pop
pop
or
push
lock
xor
adc
cdq
fistp
mov
dec
aaa
inc
inc
jno
xchg
fidiv
dec
push
adc
clc
fimul
dec
sub
cmps
push
in
mov
sub
push
mov
adc
or
mov
mov
sub
sbb
lods
(bad)
fisub
dec
sbb
out
ins
push
adc
dec
jmp
xchg
mov
mov
xlat
sub
mov
fild
mov
inc
movs
xchg
shr
(bad)
iret
and
or
mov
test
das
mov
mov
push
mov
mov
ud2
push
lock
pop
rol
dec
icebp
xor
xor
push
add
mov
mov
mov
mov
jg
push
(bad)
cmp
mov
cmp
out
sub
mov
mov
aaa
shl
imul
push
lods
ins
imul
xchg
inc
movs
sbb
xchg
das
dec
mov
push
jne
or
adc
call
rol
add
lods
test
or
je
fild
sub
sub
imul
loop
sbb
inc
in
sbb
xor
add
adc
rcr
sbb
add
sub
sub
add
fimul
add
test
ins
icebp
push
adc
or
mov
popa
inc
stos
sbb
mov
jbe
jg
and
aad
loope
fldcw
mov
sti
icebp
ficom
fld
lods
movs
add
push
fnstsw
xor
add
mov
or
add
sbb
lods
mov
sub
sbb
cmp
xor
ins
or
stos
jbe
add
cmc
mov
aas
jne
or
mov
sbb
mov
add
pop
mov
sub
sbb
sar
xor
fisttp
and
mov
ins
sbb
es
nop
add
lock
or
add
imul
mov
mov
mov
pushf
add
mov
jmp
adc
and
add
fwait
add
push
(bad)
pop
aad
retf
lock
sbb
push
add
sbb
fbld
sub
jo
adc
mov
inc
and
add
adc
mov
xor
cmp
and
xor
cdq
icebp
mov
nop
mov
je
in
cdq
popf
mov
sub
xor
js
sahf
mov
sbb
and
xor
cmp
xor
scas
je
sbb
xor
out
out
mul
inc
and
and
inc
push
adc
call
and
sbb
sub
je
sbb
and
adc
mov
or
add
stc
pop
add
loopne
lods
outs
imul
add
push
or
ret
outs
out
push
adc
and
add
xor
jb
aas
setae
push
fcmovnbe
out
jge
inc
adc
mov
jg
jl
add
mov
inc
push
js
out
jo
sbb
leave
dec
jno
call
rcl
fcmovbe
dec
pushf
pushf
pushf
jnp
pusha
pop
cs
rcr
in
or
imul
test
cs
sbb
dec
xor
add
jl
push
mov
dec
out
inc
cs
dec
int3
(bad)
add
leave
data16
cmovs
or
cs
int
out
jb
push
mov
retf
out
inc
gs
inc
fcmovne
mov
aam
add
mov
movs
cmp
push
rol
add
xchg
and
add
test
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
movs
dec
add
dec
add
add
