sbb
outs
call
icebp
mov
call
add
into
pop
jmp
(bad)
jl
inc
inc
push
mov
mov
xor
inc
mov
pop
sbb
mov
iret
repz
pop
ret
and
adc
(bad)
inc
mov
call
fcomp
xor
mov
mov
ret
push
jnp
idiv
mov
and
mov
dec
add
inc
add
or
(bad)
mov
push
mov
adc
mov
push
lea
lea
call
pop
or
add
test
pop
push
or
neg
inc
nop
dec
pop
mov
pop
ret
inc
mov
inc
lods
dec
inc
das
pop
jae
or
push
or
retf
xchg
adc
or
pop
mov
jg
mov
mov
mov
jmp
mov
xor
mov
inc
sub
push
rol
ret
ds
jnp
daa
and
je
or
push
cmp
xor
into
mov
add
setge
mov
dec
or
ret
out
outs
out
sbb
sub
push
cmp
jne
fild
aam
push
push
push
lea
push
jno
adc
in
fist
push
pop
inc
pop
je
pop
adc
in
pop
add
dec
call
add
das
popf
pop
neg
or
dec
push
lea
ja
cmp
in
push
pop
cmp
mov
xor
(bad)
sti
add
mov
sub
stos
sbb
or
push
clc
mov
xchg
mov
dec
pop
leave
and
dec
hlt
xor
in
sbb
outs
mov
jl
lea
movs
add
dec
movs
inc
pop
and
ror
xor
pop
dec
pop
imul
pop
repz
or
das
fstp
fstp
pop
shl
in
int3
add
push
xchg
add
(bad)
dec
imul
push
mov
(bad)
out
mov
pop
push
dec
push
in
sbb
fldcw
arpl
or
cmc
in
idiv
popa
sub
test
push
ss
ins
scas
fadd
or
cmp
outs
mov
push
std
and
sub
pop
pop
lock
leave
in
in
in
add
cmps
ins
and
pop
pop
lock
call
ins
mov
push
adc
dec
cld
jmp
and
sahf
pop
add
add
or
or
in
xlat
fadd
xchg
sbb
fsub
pop
push
xlat
fadd
jbe
sub
xchg
pop
push
outs
xchg
xchg
cmp
cwde
push
push
call
adc
mov
or
movs
adc
cld
add
inc
adc
jnp
cld
push
push
add
sub
(bad)
and
sbb
fwait
out
rcr
and
(bad)
sbb
cmp
in
xchg
add
inc
or
sti
sbb
je
mov
push
push
push
push
push
mov
push
xor
mov
cmp
je
cmp
push
push
cmp
lods
call
outs
dec
xor
idiv
pop
mov
je
cmp
rol
jae
pop
sti
sbb
jmp
cmp
add
dec
fldz
jbe
jo
or
das
pop
movs
pop
cs
cmp
add
std
jecxz
ja
(bad)
jae
mov
cs
das
push
sub
xchg
mov
or
add
sub
imul
jne
or
(bad)
jg
ja
pop
(bad)
sub
mov
lock
push
push
je
cmp
je
cmp
mov
std
pusha
jne
cmp
or
mov
imul
fsubr
inc
add
mov
gs
push
dec
push
shl
iret
add
xlat
imul
mov
jge
mov
push
sbb
dec
xor
aas
xor
dec
cld
inc
pop
push
iret
cmp
int3
dec
or
sbb
dec
hlt
adc
popa
leave
gs
add
adc
push
leave
pop
pop
arpl
test
mov
sti
lea
adc
or
jne
mov
mov
adc
adc
in
mul
push
clc
or
add
jmp
push
adc
inc
sbb
leave
jl
push
push
neg
sbb
sbb
pop
js
adc
xchg
ror
je
shl
jmp
dec
xchg
in
fstp
ss
(bad)
mov
icebp
jno
mov
pusha
outs
and
not
in
in
dec
fidiv
pop
push
aas
cmp
fsub
ins
xor
cmp
jnp
or
je
push
nop
fdivr
fcomip
sub
mov
adc
pusha
add
xor
ss
ja
pop
add
push
outs
inc
mov
add
out
push
pop
xor
and
dec
(bad)
idiv
fcomp
push
out
sbb
out
out
out
fcmovnu
push
(bad)
or
sbb
or
mov
adc
and
mov
add
push
push
sbb
mov
(bad)
mov
push
cmp
imul
sub
and
push
sub
and
scas
mov
enter
adc
cmps
jnp
cdq
lea
adc
push
(bad)
and
jge
jnp
and
adc
sub
push
in
push
fdivp
mov
mov
or
pop
jne
gs
jecxz
jl
rcl
push
and
fadd
dec
cmps
mov
or
xor
push
push
mov
jae
fs
ja
les
enter
mov
mov
push
jb
sbb
mov
aaa
jle
(bad)
sub
fbstp
and
jbe
jbe
ins
mov
neg
fcomip
into
sub
dec
add
mov
jmp
call
packssdw
dec
jae
pop
or
loopne
add
retf
ins
outs
jnp
add
fdivr
outs
push
ja
or
push
(bad)
fstp
imul
and
mov
add
mov
jl
out
or
mov
repnz
or
pop
xor
popa
push
nop
fisttp
retf
cmp
call
les
push
movzx
sub
scas
jnp
dec
jne
or
add
xchg
or
jle
cmp
cmp
(bad)
ins
mov
xchg
mov
sub
in
cmc
jnp
fwait
sbb
add
inc
push
movs
adc
sbb
push
mov
pop
ins
cwde
jle
cmps
mov
xchg
add
scas
xchg
xor
pop
cdq
cld
shr
mov
mov
idiv
lods
mov
push
push
fild
sbb
dec
neg
mov
pop
push
push
jno
mov
xlat
imul
loopne
cmc
hlt
cmp
push
mov
cmp
or
mov
push
cs
inc
sub
pop
je
sbb
dec
je
mov
sbb
add
sub
fld
jmp
js
push
cs
(bad)
add
in
out
mov
(bad)
out
jmp
push
sub
movs
sbb
pop
sbb
or
call
ins
add
push
retf
mov
arpl
lea
add
xor
mov
cmp
inc
mov
and
or
lods
fmul
fild
cmps
jb
(bad)
jmp
push
mov
mov
push
(bad)
mov
jmp
push
pop
lea
xchg
shl
ret
add
aad
shl
test
jb
test
add
push
xor
cwde
rol
add
ins
(bad)
cmp
in
call
rcr
mov
iret
cmp
cmp
mov
(bad)
adc
xchg
pushf
aam
or
(bad)
int3
sahf
xchg
cmps
add
mov
std
push
adc
hlt
and
(bad)
sub
push
jl
or
jle
test
pop
pusha
cmp
jmp
mov
mov
pushf
xor
push
push
push
jle
cmp
mov
dec
lock
mov
shr
xchg
in
out
movs
inc
pop
out
stos
stos
stos
and
inc
mov
lea
push
cwde
inc
inc
inc
and
jmp
or
call
dec
sub
pop
sub
inc
mov
jmp
push
mov
sbb
bound
mov
retf
add
mov
das
pop
sub
or
xchg
pop
sub
mov
mov
js
dec
cmps
add
push
push
sti
in
(bad)
call
add
mov
jecxz
push
stos
xor
inc
dec
xchg
gs
jnp
mov
add
or
std
ficom
jmp
mov
adc
das
sub
mov
xor
data16
or
inc
pop
rol
inc
or
ror
lock
pop
xor
and
jo
fld
ins
mov
stc
jle
inc
mov
test
add
mov
add
(bad)
(bad)
mov
sub
jl
pop
cmp
push
cmc
cmp
xor
jg
push
mov
call
(bad)
pop
jl
push
(bad)
inc
pop
shld
enter
push
cmp
xchg
int
out
jle
jge
je
inc
jmp
push
cmp
hlt
jbe
cmp
mov
cmp
je
mov
add
out
add
add
sti
dec
jne
aaa
jmp
sbb
mov
mov
push
inc
push
cs
add
jg
test
push
mov
push
cmp
xchg
mov
ds
jge
sub
sub
fwait
sti
dec
push
cmp
jne
cmp
mov
xor
lea
push
xchg
test
sar
push
xor
or
mov
adc
adc
fmul
or
iret
(bad)
es
out
paddusw
sub
add
xchg
rol
nop
cmp
inc
outs
xlat
inc
(bad)
ds
xor
push
cmp
fstp
or
movs
out
inc
scas
ins
add
fist
push
mov
push
outs
ja
pop
mov
mov
fimul
rcr
or
ror
sahf
clc
ins
in
dec
inc
cmp
hlt
dec
sbb
and
add
push
push
in
or
push
mov
idiv
inc
imul
fisttp
fmul
(bad)
aaa
or
adc
mov
xor
push
aaa
not
ret
shl
jne
fld
cmp
lds
mov
sub
add
push
leave
push
jo
repnz
xchg
push
lods
dec
sbb
inc
ss
inc
jl
sar
ins
(bad)
or
sar
xchg
xor
or
pop
sbb
jbe
sahf
cwde
(bad)
jg
pop
pop
xor
jno
pop
jb
mov
jbe
cmp
xor
aad
adc
push
out
xchg
push
outs
xor
or
test
and
fidiv
(bad)
sub
inc
jb
lahf
mov
mov
mov
push
test
mov
adc
pop
in
fdivr
ins
and
mov
push
daa
cli
inc
mov
shl
add
jl
xor
lahf
push
pop
mov
cmp
pop
sbb
jbe
push
mov
mov
or
sar
pushw
adc
in
pop
mov
jbe
aaa
mov
sub
lods
sbb
xor
xchg
cmp
push
call
int3
adc
or
mov
or
jge
push
je
fucom
cmps
jnp
xchg
fs
jmp
jmp
jns
inc
push
sbb
push
adc
mov
sbb
mov
or
xchg
in
pop
push
inc
lods
jne
inc
rcl
fistp
and
xchg
and
je
movzx
ror
xor
adc
mov
mov
inc
imul
fist
fistp
(bad)
fsubr
push
or
and
push
xor
fcom
push
xchg
mov
leavew
in
mov
jp
push
sub
add
sub
pop
fisttp
retf
mov
dec
ins
inc
adc
add
leave
cmps
gs
fs
out
jo
test
adc
xchg
mov
icebp
adc
imul
ds
dec
adc
inc
rol
das
stc
jnp
jbe
and
sbb
mov
mov
or
inc
ins
jne
and
sbb
push
sbb
dec
dec
clc
mov
add
pop
ins
leave
add
adc
inc
push
or
jle
push
inc
and
push
adc
jne
cmp
lods
xor
xor
and
push
(bad)
xlat
ja
lock
or
xchg
push
or
or
jl
cdq
inc
jmp
inc
adc
leave
test
cmps
adc
inc
inc
push
xor
add
push
fbld
ins
and
or
cwde
adc
pop
rol
fcomp
mov
sub
pop
cmp
lds
push
push
fistp
xor
jnp
cs
and
rcl
or
nop
push
mov
cwde
push
mov
loop
addr16
fadd
inc
test
pop
loop
or
add
pop
push
mov
mov
and
stos
ins
and
add
aas
hlt
jecxz
inc
aam
jl
dec
fisub
jo
(bad)
fisttp
pop
sbb
rol
and
cmp
push
jbe
fcomi
inc
or
ins
pop
dec
dec
in
jo
jne
push
dec
dec
push
push
xchg
mov
aas
push
push
inc
xor
sar
add
jb
cmps
fs
push
ins
ins
fld
sbb
or
(bad)
push
pop
mov
inc
sbb
sbb
mov
xchg
dec
sbb
cmp
adc
jmp
mov
lds
jmp
sahf
ss
arpl
test
mov
xchg
fadd
add
mov
in
retf
push
lods
adc
aaa
inc
and
test
mov
and
out
add
cmp
xchg
(bad)
pop
out
outs
ja
aad
mov
push
lea
in
es
leave
push
neg
sbb
xchg
icebp
mov
rol
pop
test
shr
cmp
mov
mov
retf
rcr
xchg
adc
cmps
xchg
xor
iret
rcl
pop
mov
(bad)
mov
push
test
push
dec
adc
mov
mov
push
mov
retf
fld
pop
mov
add
popf
inc
cmp
mov
arpl
stos
imul
jecxz
test
div
imul
test
fs
ror
add
std
lea
or
lea
push
or
fs
pop
mov
add
lea
pop
jo
jne
push
nop
mov
sub
jecxz
add
pushf
inc
sub
add
add
cmps
int
cmc
sahf
adc
push
mov
xor
sbb
(bad)
lock
int3
add
dec
das
jne
add
adc
or
daa
fisubr
and
or
loopne
inc
fcom
aaa
lock
dec
cmp
mov
push
push
add
daa
fisttp
(bad)
sub
adc
push
jo
or
sub
jnp
sbb
daa
mov
int3
inc
sbb
and
mov
scas
test
or
and
add
and
add
je
rol
loop
cmp
sub
sahf
lea
and
jmp
add
sbb
jns
cmp
ins
shl
aaa
push
and
push
and
je
sbb
mov
pop
rcr
sahf
push
push
push
sub
dec
js
mov
adc
sbb
mov
adc
in
adc
dec
icebp
and
aaa
sbb
test
sub
push
dec
adc
mov
sub
lock
xor
fiadd
mov
push
xchg
jo
push
inc
inc
push
push
data16
into
icebp
jb
mov
cmp
mov
iret
cmp
mov
add
ss
nop
shl
add
sub
imul
(bad)
int
inc
add
ds
push
loop
xor
or
lods
fstp
push
(bad)
and
imul
push
or
leave
sar
(bad)
ror
pop
pop
pop
sub
icebp
push
xchg
call
adc
lock
adc
cmp
shl
push
inc
push
enter
enter
(bad)
das
mov
(bad)
bound
out
cmp
je
cmp
inc
mov
sbb
and
pusha
out
or
mov
xchg
lahf
into
cmp
cmc
(bad)
jns
fbstp
pop
or
adc
mov
ret
cmp
push
adc
sbb
cdq
int3
pop
inc
push
arpl
sbb
ret
or
je
pop
inc
setle
dec
and
mov
sbb
add
jge
loop
mov
sbb
clc
push
jmp
shl
repz
bound
addr16
add
sbb
inc
mov
add
call
je
add
dec
pop
(bad)
xor
mov
push
push
in
add
add
icebp
pop
into
and
push
pop
cmp
inc
(bad)
mov
push
add
xor
sub
pop
xor
(bad)
lods
sar
dec
xor
and
in
fdiv
add
pop
mov
sbb
push
mov
cmp
into
push
and
push
sub
sbb
pop
imul
int3
jbe
mov
pop
les
mov
in
jo
sahf
or
mov
sbb
test
lea
mov
popf
mov
jg
inc
fsubr
lea
and
sti
or
xchg
outs
nop
les
aas
int3
xor
dec
cmp
lock
int3
fiadd
xchg
pop
xlat
add
sbb
enter
mov
xor
dec
push
add
jae
rol
clc
fmul
test
je
mov
test
rol
add
sbb
pop
cmp
xchg
ret
std
add
push
(bad)
out
mov
push
adc
mov
je
mov
fist
mov
dec
out
jmp
add
loop
adc
sub
adc
ror
neg
add
cmp
lods
or
add
pop
inc
retf
push
mov
(bad)
movs
adc
mov
adc
xchg
mov
xchg
push
jge
loope
mov
stos
ins
push
jmp
das
jbe
fst
sbb
inc
add
mov
or
jp
xor
jno
mov
inc
sub
ins
ins
fwait
sbb
xchg
je
rcl
pop
cmc
jp
retf
pop
std
and
fild
mov
dec
push
movs
rol
inc
jecxz
fld
mov
cmp
xor
fdiv
int3
jmp
sbb
push
sbb
cmpxchg
scas
xor
into
in
pop
add
xor
mov
aas
mov
aam
or
hlt
xchg
mov
cmp
add
push
xor
add
jg
mov
test
popf
adc
or
mov
sub
imul
in
sub
cmp
in
sub
xor
inc
mov
popf
jo
inc
mov
push
adc
rcl
adc
imul
in
in
pminsw
add
add
mov
pop
dec
mov
cmp
rcl
add
add
daa
outs
jo
mov
in
add
xchg
add
iret
sub
arpl
jno
frstor
call
ins
dec
push
cmp
cmp
mov
aam
and
push
(bad)
push
fdiv
daa
xchg
mov
rcr
sbb
out
sub
add
cmp
test
addr16
ja
int
popf
sbb
ins
in
sar
mov
adc
or
test
lods
iret
arpl
add
rol
sbb
ror
(bad)
sub
fs
mov
or
mov
mov
cmp
adc
cwde
or
push
push
je
in
sar
sbb
popf
sub
test
sbb
jmp
push
xor
xor
fst
xchg
and
jns
fdiv
lock
or
xchg
sub
rol
cmp
push
aas
cmp
std
add
add
idiv
imul
in
inc
and
and
sbb
lds
adc
std
in
fnstcw
call
test
add
jbe
call
sub
mov
in
mov
xchg
pusha
and
(bad)
loop
fwait
add
cmp
leave
cmps
inc
std
lods
and
adc
int
xchg
out
push
push
or
rcr
sub
stos
fst
mov
push
pop
loope
aas
jg
push
sbb
xchg
or
or
pushw
mov
mov
and
clc
sub
aam
rcl
cmp
mov
or
xchg
mov
shr
retf
or
or
or
mov
dec
les
pop
and
mov
push
pop
or
pop
cmp
dec
scas
fucom
inc
mov
sahf
add
push
mov
int3
outs
pop
xor
add
add
mov
jmp
add
cmps
fs
and
fsubr
or
or
add
not
std
push
sbb
jmp
or
add
adc
jne
pusha
ret
aam
push
and
sub
sub
into
push
mov
mov
mov
(bad)
or
mov
or
dec
neg
leave
ret
add
js
inc
std
sub
or
test
adc
and
pusha
cmp
adc
cmps
push
lea
adc
mov
ror
pusha
(bad)
jno
lea
outs
and
xor
call
adc
add
mov
mov
jo
xor
mov
sub
adc
aas
xchg
test
mov
sub
push
adc
dec
outs
fwait
mov
pop
sbb
adc
movs
fld
jmp
mov
mov
outs
mov
or
add
shl
cmp
add
sbb
cli
push
cmp
ret
sar
mov
das
jl
cmp
xchg
cmp
mov
or
pop
fidiv
pop
or
je
dec
mov
leave
inc
adc
mov
ja
mov
inc
lea
or
mov
cmp
mov
mov
scas
(bad)
mov
and
scas
mov
add
mov
outs
call
test
sbb
add
fdivr
popa
push
adc
pop
es
fild
or
cmp
fwait
cmp
cmp
ret
daa
pop
(bad)
push
fsub
inc
bound
ins
add
pop
adc
pop
js
mov
imul
sbb
sbb
push
stos
loope
xor
xchg
push
add
mov
push
pop
push
test
jbe
call
jne
loope
jno
nop
mov
rcl
add
je
push
std
mov
mov
outs
test
rol
and
add
jo
lea
mov
sub
pop
sbb
inc
lea
fcom
sbb
and
hlt
pop
add
and
add
xor
fadd
or
pop
ret
jle
sahf
cmp
pop
dec
xlat
fisttp
in
or
sub
and
leave
aaa
sbb
dec
adc
int3
mov
add
shr
sbb
adc
pop
(bad)
retf
pop
mov
retf
cs
jb
daa
jp
cmp
or
in
leave
push
jno
push
adc
aad
push
jns
or
xchg
neg
xchg
inc
jbe
mov
dec
scas
mov
in
jmp
fwait
sbb
push
rcr
or
inc
adc
add
mov
mov
adc
mov
das
pop
retf
and
pop
gs
adc
fst
mov
loope
pop
ss
aam
or
scas
cmp
movs
xchg
(bad)
je
xchg
sbb
jecxz
mov
pop
mov
loop
cmp
fst
or
hlt
leave
dec
sahf
pop
(bad)
mov
mov
fsubr
and
and
fbld
dec
fnsave
nop
xlat
bound
stc
cmp
and
mov
icebp
ins
jne
dec
push
xchg
and
out
pop
ss
jb
jae
jge
sbb
sbb
popa
jae
add
sub
pop
ret
jno
call
fadd
shl
dec
into
sbb
xchg
addr16
cwde
lods
shl
jo
daa
das
enter
adc
in
nop
in
mov
push
scas
and
daa
test
or
jnp
test
bound
test
add
ret
aam
(bad)
jb
push
icebp
add
ficomp
push
and
shl
rcr
fwait
pop
sub
add
jne
mov
pusha
xchg
add
and
je
or
mov
dec
and
push
cmp
mov
xor
add
jp
dec
jns
add
mov
mov
push
mov
movs
and
inc
add
inc
mov
call
push
push
call
ss
leave
aas
rol
cmp
repz
push
mov
sbb
lods
loop
cmp
enter
push
ins
add
cld
dec
sbb
sbb
jne
or
inc
pop
jne
jl
adc
js
adc
je
push
ror
inc
pop
js
popa
mov
jg
mov
popf
mov
mov
or
sub
outs
sti
add
movzx
pop
stc
jne
imul
fwait
pop
cmp
je
cmp
jne
or
push
add
xor
jmp
ja
stos
inc
pop
sub
sub
fild
cmp
jmp
pop
mov
adc
or
xchg
shl
int3
jmp
sbb
add
dec
adc
shl
mov
fild
add
jl
and
arpl
or
and
push
push
into
adc
or
mov
pop
mov
out
test
and
lods
sbb
mov
jnp
adc
fucomp
arpl
adc
sub
inc
ins
cmp
push
add
pop
and
aam
add
div
adc
cmp
fs
xor
jp
call
jecxz
out
push
cmp
xor
pop
xor
pop
hlt
iret
ins
addr16
push
(bad)
xchg
push
call
xor
stos
(bad)
xor
pop
sbb
(bad)
mov
pop
ret
jae
ins
stos
and
jmp
fmul
mov
in
xor
sbb
dec
lds
jp
mov
add
add
outs
cmps
loop
xor
dec
imul
cmp
inc
jne
aaa
pusha
test
fld
sti
out
push
xor
jl
neg
sbb
inc
jae
je
dec
mov
xor
lahf
fwait
mov
mov
adc
pushf
and
pop
cld
shl
sbb
inc
mov
or
push
test
mov
push
xor
pop
test
mov
dec
(bad)
pop
sub
pop
push
stos
sbb
and
rcl
adc
inc
out
adc
jne
movzx
add
mov
icebp
or
lock
cmp
adc
aas
sbb
xchg
xchg
xor
cmp
adc
fisubr
cmp
enter
and
mov
div
popa
jae
jmp
mov
outs
out
mov
add
add
pop
inc
and
add
or
enter
or
enter
or
enter
or
or
add
fwait
shr
mov
(bad)
lahf
mov
ins
cmp
dec
aad
and
test
in
add
push
cdq
add
sub
rcl
adc
sub
mov
inc
adc
repz
int
icebp
ror
add
jnp
pop
dec
cmc
and
mov
div
sbb
outs
frstor
adc
(bad)
cs
jl
inc
push
adc
call
loopne
mov
outs
clc
stos
xchg
pop
fcmovb
ror
push
pushf
retf
clc
(bad)
sbb
aam
enter
push
push
shr
das
inc
fcom
ficom
scas
xchg
es
sbb
clc
push
pop
push
test
nop
dec
xlat
and
test
rol
sbb
cld
inc
out
leave
mov
in
cmp
pop
fmul
mov
dec
and
or
mov
xchg
push
inc
(bad)
(bad)
bound
jne
push
inc
cmps
jae
sti
pop
in
push
mov
call
push
adc
fisubr
call
out
pop
rcl
inc
dec
jne
inc
jno
mov
adc
inc
or
jnp
mov
or
push
push
stos
pop
lds
fcom
mov
or
lds
add
pop
xor
pcmpgtb
mov
jmp
out
pop
mov
and
in
adc
add
add
push
xor
lsl
shl
or
xor
mov
sahf
push
sub
mov
pop
test
xchg
pop
popf
push
(bad)
push
je
and
into
push
sbb
fs
ins
mov
mov
daa
add
push
sbb
loop
cmp
add
sbb
push
aam
js
add
mov
cmps
xor
cdq
mov
daa
cmp
arpl
enter
scas
xchg
mov
or
push
sbb
add
push
fistp
cmp
cmp
cmc
cmp
jo
mov
pop
lock
hlt
mov
push
stos
push
sub
hlt
(bad)
(bad)
or
pop
mov
mov
mov
cmp
ins
dec
or
push
cmp
je
push
pop
ins
fbstp
adc
push
or
or
fs
and
or
mov
add
gs
push
clc
jae
imul
cmp
and
pusha
std
inc
out
jge
mov
mov
ss
pcmpgtd
ss
(bad)
mov
xchg
sub
popa
push
sbb
inc
jo
add
addr16
loop
and
jle
(bad)
imul
xchg
add
pop
ret
nop/reserved
loop
add
sub
fst
lds
pop
test
pop
jmp
xchg
or
xchg
and
pusha
push
mov
jl
fdiv
push
sub
mov
ret
jne
stos
nop
mov
cmp
xchg
cli
cmp
jb
and
or
push
xor
xor
or
dec
jp
jmp
xchg
xor
repnz
jae
push
push
aam
mov
cmp
into
push
mov
xchg
push
push
test
xor
jl
mov
push
js
adc
sbb
mov
push
or
and
test
inc
xor
rol
jl
aad
push
lods
mov
sub
push
pop
call
outs
pop
mov
push
inc
xor
cbw
jae
sbb
aaa
push
pusha
nop
jl
(bad)
mov
dec
sub
jl
cmp
jg
cmp
sar
sbb
pop
jmp
cmp
push
jp
int
pop
shl
test
lea
cdq
cld
pusha
jbe
fisttp
imul
or
inc
mov
push
pop
lea
jmp
sub
mov
and
je
retf
pop
icebp
je
push
stos
sahf
push
push
or
jnp
sub
or
pop
ror
mov
inc
mov
inc
xchg
jmp
clc
cwde
push
xchg
movs
ins
sub
jbe
push
sbb
cmp
ins
fisttp
lds
mov
fs
push
sbb
mov
pop
add
mov
gs
adc
sbb
test
cmp
pop
pop
jle
sbb
mov
mov
push
pop
inc
add
pop
shl
push
add
in
pop
add
ret
or
(bad)
(bad)
mov
cmp
jne
lods
pop
mov
or
mov
jnp
cmp
out
push
adc
movs
sbb
aaa
push
lea
cmps
mov
add
push
lea
mov
call
mov
sti
mov
push
hlt
not
jne
pop
test
hlt
push
or
inc
aaa
loopne
popf
add
les
(bad)
sub
or
or
into
cmp
fs
mov
sbb
mov
fwait
add
stos
inc
fist
cdq
ds
ins
stc
sbb
sub
pop
mov
data16
lahf
and
test
or
es
test
out
in
mov
add
in
cmp
mov
enter
retf
or
(bad)
or
sbb
stc
add
ins
mov
or
adc
mov
cvtpd2ps
outs
sbb
in
or
push
mov
sub
jo
arpl
or
sbb
pop
ds
xchg
and
in
xchg
je
cmp
fist
push
icebp
push
cmp
jbe
xor
pop
in
je
mov
in
data16
dec
mov
push
cmp
pop
mov
xchg
inc
nop
mov
dec
or
pop
push
jmp
adc
adc
test
enter
call
out
push
test
mov
outs
mov
add
out
adc
inc
push
(bad)
hlt
jbe
mov
lods
jecxz
mov
adc
sbb
ins
imul
ror
rol
sub
pop
stos
add
imul
add
jmp
inc
and
add
mov
xchg
fcmovnbe
(bad)
mov
push
or
push
jecxz
add
adc
cwde
adc
out
scas
add
dec
out
push
shl
push
and
push
sub
ret
xor
mov
retf
stos
pop
jmp
and
push
and
sub
(bad)
sbb
sub
cmp
sbb
shl
rcr
inc
adc
xor
pop
ret
icebp
mov
add
push
icebp
adc
dec
loopne
inc
fcomp
test
(bad)
loopne
inc
(bad)
mov
or
add
xchg
xchg
add
and
sub
adc
ret
inc
push
pop
inc
popf
add
xor
xchg
(bad)
mov
dec
and
sbb
pop
mov
sub
xor
jge
mov
out
mov
or
mov
add
hlt
sbb
jl
mov
pop
in
sbb
sub
xchg
mov
sbb
mov
aad
xor
in
sub
in
jbe
jnp
imul
cmp
push
inc
aad
mov
xor
dec
inc
cmp
jb
test
add
and
xor
mov
push
mov
add
add
add
cmp
ins
xor
push
xor
add
cmp
push
ja
mov
mov
imul
inc
inc
shl
cmp
jbe
or
lds
mov
add
jmp
fwait
add
pop
jmp
arpl
or
push
push
add
pop
inc
mov
add
das
aad
movs
push
push
or
adc
jmp
xchg
push
outs
jmp
cmp
jb
mov
ret
in
add
sbb
xacquire
and
movs
inc
icebp
add
mov
fucomp
mov
sub
sub
xor
ins
pop
aad
inc
fidivr
pushf
fcmovnu
ins
inc
inc
out
cmp
jbe
inc
adc
mov
lahf
adc
ret
movs
dec
rol
xor
movs
push
cmps
xor
adc
cdq
movs
shr
add
push
shl
dec
or
adc
enter
mov
into
jb
movs
rcl
ja
fmul
dec
and
int
xchg
cmp
mov
jae
pop
or
xor
mov
mov
adc
out
dec
gs
or
adc
mov
push
xor
(bad)
pop
sbb
fucomi
ja
mov
add
jno
mov
jae
outs
sbb
and
fucomi
xchg
cwde
(bad)
adc
mov
jmp
fnstcw
lock
xchg
es
jle
xchg
sti
(bad)
dec
lock
pop
mov
jmp
sub
mov
sbb
sub
imul
(bad)
jae
sub
mov
mov
ret
jmp
sub
add
popa
adc
dec
cmp
jbe
popa
mov
out
cmp
shl
arpl
inc
popa
retf
or
enter
loopne
cmp
cmp
sahf
push
push
sbb
movs
adc
mov
or
fisubr
sar
and
jecxz
push
lods
loope
add
mov
sbb
mov
sbb
mov
inc
add
add
inc
ret
or
(bad)
xchg
jmp
add
enter
pop
jl
adc
cmp
dec
test
enter
ss
(bad)
lea
retf
jnp
popf
mov
pop
les
fstp
adc
int
adc
add
fwait
outs
clc
scas
hlt
push
push
mov
dec
loope
hlt
mov
cmp
jo
clc
popf
adc
ret
cmp
adc
or
in
rol
(bad)
inc
ret
sbb
add
xchg
jae
add
test
movs
mov
cwde
push
ficomp
out
adc
gs
inc
div
xchg
xlat
push
adc
outs
sub
test
push
add
pop
test
lock
mov
dec
(bad)
or
outs
fst
jg
inc
sti
and
stc
or
or
mov
stc
and
jge
inc
dec
loopne
sbb
ja
clc
sbb
mov
add
cmove
jmp
nop
cmp
call
jl
les
jmp
pushf
punpckhdq
pop
mov
ins
adc
ror
sbb
push
mov
mov
mov
push
lea
scas
call
ret
test
into
mov
fisub
and
mov
test
push
mov
cs
inc
test
mov
cs
add
push
aam
ror
push
push
inc
data16
and
push
or
call
fstp
xchg
in
push
mov
inc
inc
add
ror
test
add
mov
push
daa
mov
jge
and
neg
xor
sbb
and
lock
inc
mov
mov
rol
cli
push
fsub
adc
push
cmp
jno
loopne
sbb
or
inc
into
push
push
ja
les
cmp
je
dec
call
lock
clc
ret
repnz
les
mov
call
cs
dec
retf
lock
jg
xor
scas
rol
dec
and
lods
lea
push
dec
imul
cwde
adc
sahf
in
push
fst
adc
mov
cmp
enter
out
add
neg
lock
inc
call
dec
or
push
mov
pop
push
mov
inc
add
mov
sbb
sub
je
and
aam
stos
add
or
pop
sub
fcomp
imul
cmp
daa
push
lock
leave
test
pop
popa
add
mov
dec
jne
cmc
pop
into
je
adc
mov
jle
aaa
mov
clc
stos
sbb
div
pop
sbb
retf
add
jne
gs
push
mov
leave
and
xor
clc
sbb
lock
test
or
sub
loop
pop
sub
bound
pop
inc
stos
fcomi
ror
mov
push
xor
loopne
add
mov
inc
movs
sar
mov
mov
add
int3
int3
or
(bad)
pop
cmps
or
lds
lahf
pop
xchg
int
pop
jns
addr16
add
cmps
push
push
sub
fsubr
sbb
(bad)
shl
add
leave
add
outs
in
movs
inc
daa
mov
jae
xchg
rcl
vxorps
push
jp
ins
mov
stos
hlt
jecxz
mov
sub
mov
loop
sub
jmp
fidivr
inc
hlt
mov
pusha
imul
ret
aad
mov
add
aam
or
fidivr
ret
test
jbe
cmp
xchg
retf
mov
mov
dec
mov
mov
add
jne
pop
call
inc
imul
les
jl
xchg
mov
mov
lock
mov
pop
movs
je
cmp
test
lea
sbb
(bad)
or
push
push
mov
mov
and
jg
jp
mov
jne
clc
(bad)
and
lods
hlt
push
in
je
mov
cmp
jmp
or
xor
sar
inc
fimul
dec
cld
lock
lock
mov
jmp
test
xchg
push
push
xchg
dec
or
add
cmp
aas
mov
adc
(bad)
test
or
xor
add
shl
or
or
push
dec
jne
adc
ret
sub
sbb
and
pop
out
inc
rol
pop
je
jnp
sub
test
psubb
push
ins
mov
mov
pop
xor
inc
jmp
adc
mov
ret
xlat
pop
add
(bad)
cmps
mov
add
or
xor
in
sub
scas
(bad)
push
shl
and
out
fwait
and
pop
jge
mov
mov
sub
sbb
xor
dec
mov
sub
xchg
jge
mov
aaa
and
cmp
sub
sbb
or
push
push
mov
cmp
cmp
retf
add
xchg
(bad)
hlt
mov
stos
push
jge
mov
mov
cmps
or
add
jl
add
jl
ss
push
mov
bound
cli
add
cmp
test
xor
or
cmp
cli
fs
mov
rol
ins
mov
hlt
pop
add
cmp
call
hlt
and
jmp
dec
out
dec
lea
scas
pushf
scas
jg
and
mov
pop
push
fisttp
aam
lock
ds
jbe
sub
mov
pop
dec
cs
adc
cmps
lea
dec
loopne
sbb
(bad)
mov
out
adc
add
les
push
je
(bad)
gs
jb
cmp
xor
add
or
fnstsw
dec
jle
(bad)
je
push
adc
inc
or
jmp
pusha
jne
adc
push
xchg
(bad)
push
inc
sub
inc
adc
addr16
popw
xor
cmp
jmp
pop
mov
add
sub
popa
outs
jecxz
push
ss
outs
in
call
adc
inc
push
stos
sbb
in
mov
add
add
cmp
je
push
test
out
sbb
push
sbb
xchg
mov
int3
mov
enter
lods
push
loopne
ret
inc
cli
pop
sar
rol
add
fcom
sbb
xor
dec
jb
dec
mov
pop
out
mov
inc
mov
aam
add
push
sysexit
aas
add
mov
loop
mov
sbb
popa
mov
mov
adc
mov
shr
nop
enter
iret
hlt
cli
mov
mov
les
and
and
sub
and
xor
xchg
out
(bad)
cmp
sbb
mov
pop
cmp
mov
add
sub
and
outs
jg
push
out
bnd
adc
popa
ret
jmp
pop
xlat
jmp
push
mov
aas
xor
mov
pop
test
lea
xchg
scas
or
sar
lahf
sbb
cdq
mov
scas
lods
cmps
push
or
xor
xchg
pop
push
mov
rol
xchg
inc
push
js
push
jnp
arpl
add
bound
mov
push
push
call
xchg
and
mov
pop
ror
add
push
dec
add
mov
push
push
sbb
les
fnstcw
aad
rcl
test
or
call
mov
or
nop
dec
inc
pop
xchg
dec
sub
xor
inc
fwait
add
push
push
sub
stos
inc
xor
jne
inc
lods
sbb
das
sbb
push
push
cmp
mov
or
add
and
push
adc
cmp
test
dec
mov
cmp
push
adc
pop
push
in
add
mov
clc
mov
adc
sbb
js
jecxz
inc
push
dec
je
mov
xor
push
push
sbb
ins
inc
pusha
mov
daa
test
adc
(bad)
ins
sub
push
xor
aad
mov
and
push
pushf
lea
cs
fadd
pop
inc
mov
adc
cwde
stos
pusha
es
fnstcw
sbb
fnstcw
push
pop
mov
sar
and
test
movs
jo
dec
test
cmp
je
adc
and
xor
dec
dec
jne
lods
pusha
xor
pop
push
cmc
sbb
jmp
add
sbb
adc
data16
jno
pop
push
or
imul
and
xlat
inc
sub
(bad)
ds
mov
sbb
add
cs
xor
xlat
sbb
jmp
stos
fsubr
mov
push
sbb
mov
pop
xchg
sbb
dec
sbb
sub
add
mov
(bad)
cmp
add
sub
pop
jnp
scas
pop
cmp
jmp
sbb
and
mov
aas
sub
mov
cmp
jo
shl
pop
push
lds
push
js
dec
dec
pop
sbb
push
std
popa
and
sbb
and
mov
cwde
pushf
pop
arpl
push
inc
ret
pop
mov
je
stos
into
lock
pop
cmp
(bad)
push
or
out
adc
or
sub
cmp
adc
pop
and
dec
dec
push
dec
or
shl
adc
adc
or
or
push
je
out
ja
or
mov
sub
or
ja
gs
mov
inc
add
and
cmp
loope
loop
in
push
lods
dec
add
jmp
or
mov
icebp
xchg
or
popf
or
lods
scas
retf
inc
mov
pop
and
and
aas
lods
addr16
push
lea
lea
sbb
sub
adc
lods
ror
pop
call
pusha
cld
int
jle
sbb
adc
and
cwde
inc
push
inc
push
add
dec
cld
push
add
or
add
rol
mov
dec
ins
mov
inc
cdq
or
add
dec
psubq
and
jno
clc
or
push
pusha
pop
dec
mov
in
(bad)
mov
hlt
test
xchg
jg
rcl
(bad)
push
or
sub
call
add
fwait
hlt
js
mov
mov
push
ret
lea
push
ret
sbb
jmp
scas
js
ror
rol
jb
movs
aaa
push
cmp
movs
push
sub
mov
and
mov
and
shl
ins
xlat
aaa
imul
and
cmp
inc
push
dec
inc
out
repz
xchg
push
cmp
jno
xor
loopne
adc
pop
xor
push
fcom
test
sbb
pop
add
mov
cmps
pop
es
dec
push
sbb
cmp
loope
ret
push
and
and
jae
ret
frstor
pop
inc
loopne
pop
push
mov
lea
add
imul
cmp
or
pop
aam
cmp
into
imul
add
sti
jle
shr
inc
jne
add
xor
jmp
adc
es
movs
sbb
or
inc
xor
and
ja
sbb
aaa
mov
pop
fs
and
fadd
popa
ins
in
jne
sub
daa
imul
imul
mov
sub
mov
jb
mov
dec
jmp
sbb
xchg
retf
call
add
fnsave
push
pop
cmp
pop
jbe
xchg
dec
sub
mov
bts
mov
xlat
ds
lock
ins
or
push
pop
fnstenv
cld
pop
push
sub
mov
add
add
je
out
ins
in
sub
jae
push
and
adc
cmps
iret
pop
push
jmp
jmp
sbb
je
and
mov
mov
imul
aaa
xor
mov
rcr
inc
push
in
adc
repnz
shr
pop
push
js
pushf
xor
inc
dec
arpl
pushw
dec
jb
imul
dec
pop
cmp
pop
ja
ror
dec
je
adc
outs
sbb
cmp
sbb
je
ja
test
pusha
fldenv
ret
dec
(bad)
adc
pop
mov
test
test
push
xor
push
push
xor
sbb
xchg
inc
and
adc
xchg
mov
cmp
cmp
cmp
mov
xchg
push
int
and
jecxz
mov
sbb
or
jmp
es
jbe
imul
push
sti
pop
fcmovbe
hlt
clc
fiadd
xchg
cmp
mov
in
adc
dec
and
push
cmp
gs
jne
cmp
push
cwde
fild
cmp
or
add
fwait
out
push
xchg
lea
push
push
loop
mov
push
mov
(bad)
fisubr
mov
stos
and
mov
je
mov
loop
mov
fstp
add
jecxz
cli
inc
add
rol
xchg
fcomp
add
and
daa
mov
(bad)
and
(bad)
fimul
mov
dec
popa
aam
jnp
add
out
cld
je
dec
dec
fisub
or
adc
jg
xchg
fisttp
clc
ret
jl
js
jmp
sar
sub
cmc
out
dec
add
stos
pop
add
push
shr
hlt
pusha
add
(bad)
push
push
sub
or
fwait
sub
or
add
sbb
adc
je
dec
mov
add
and
adc
inc
mov
mov
fisttp
inc
pusha
or
in
out
sahf
outs
jmp
or
outs
(bad)
shr
ficomp
push
xchg
out
or
add
and
je
fld
adc
sub
call
and
sbb
push
loope
loopne
movs
mov
add
clc
test
test
mov
add
mov
cmc
add
adc
xor
add
push
call
sub
es
jns
pop
mov
push
movs
jecxz
mov
add
jns
adc
or
cld
outs
test
inc
test
xor
cmps
movs
ins
inc
and
mov
fisub
push
push
out
mov
add
ds
xchg
inc
cmp
mov
sub
sbb
cmps
arpl
sbb
xchg
fwait
arpl
lods
fcmovbe
or
ins
xlat
pop
ja
fsin
das
aaa
push
(bad)
cld
sub
or
stos
in
sbb
pop
(bad)
add
push
movs
mov
mov
adc
pop
stc
(bad)
ins
adc
push
sbb
adc
in
fdivr
pop
sub
adc
jge
int
jbe
fcom
add
ror
dec
movs
gs
jmp
test
or
push
adc
enter
into
leave
sub
dec
outs
dec
cmc
ficom
je
or
enter
jge
add
cld
push
jnp
mul
jge
sbb
push
push
push
ins
addr16
dec
sbb
push
add
fidiv
jmp
add
pop
xor
mov
add
hlt
lea
mov
push
ins
inc
mov
or
out
jge
sbb
cmp
or
mov
enter
fld
ins
pop
or
push
cmp
xor
adc
push
fadd
and
in
xchg
mov
fild
ja
dec
cmp
xor
stos
adc
out
jbe
xor
fcom
stc
pop
cmp
sbb
in
shl
push
mov
int3
lods
ror
push
loopne
scas
xor
and
pusha
add
xor
es
mov
in
pop
ins
bswap
popa
mov
int
mov
adc
cmp
cli
sar
icebp
mov
icebp
cmp
add
outs
in
ins
pop
rcr
cmp
add
push
xchg
pop
mov
es
jge
aas
xor
and
(bad)
fs
jmp
shr
mov
not
call
popa
cmp
pop
mov
sbb
add
push
loope
push
dec
dec
ficomp
or
lea
mov
pusha
(bad)
or
je
xor
bound
sbb
xchg
lods
mov
(bad)
jmp
icebp
sbb
mov
shl
in
or
push
das
cmp
mov
cmps
les
mov
push
ret
add
(bad)
add
call
mov
lock
stos
loopne
add
dec
and
pop
push
(bad)
or
out
inc
inc
addr16
lea
add
mov
push
push
mov
jecxz
jnp
fstp
cmp
push
dec
lock
js
cmp
sbb
push
ins
rcr
mov
int3
fs
shr
sbb
adc
cmp
bound
cmps
push
jne
jmp
(bad)
stc
add
sti
inc
imul
add
imul
inc
or
push
xor
retf
cdq
fmul
or
inc
lea
push
loope
jmp
test
mov
mov
sbb
or
inc
sub
rcl
pop
cmps
push
push
xor
hlt
daa
mov
dec
mov
movs
dec
je
lds
lds
test
adc
cmp
and
cs
add
outs
in
adc
sbb
jmp
es
or
ficomp
jb
or
fdiv
and
std
shr
xchg
(bad)
push
xor
adc
das
mov
ins
inc
add
imul
xchg
sbb
sti
ins
fmul
mov
sahf
adc
data16
pop
add
or
adc
aam
int
adc
setb
lock
adc
push
push
mov
push
mov
fs
and
xchg
cwde
push
mov
daa
push
retf
data16
bound
and
add
rcl
test
nop
mov
loopne
sub
(bad)
cmps
cli
inc
enter
mov
jbe
sub
sbb
je
popa
xchg
(bad)
or
xchg
mov
push
mov
jne
enter
arpl
pop
push
int
je
bound
or
aad
ds
cmps
popa
jge
test
and
inc
pop
aam
daa
mov
and
or
test
jge
add
push
fisubr
add
dec
loopne
dec
(bad)
push
mov
mov
ja
mov
les
leave
enterw
push
sub
pop
pop
jp
xchg
mov
sub
xchg
cmp
test
add
mov
lea
rol
or
xor
xor
sub
test
add
dec
add
push
lea
mov
add
and
jl
and
cmp
xor
out
mov
add
in
loopne
sub
sbb
pop
xor
in
and
aad
in
popf
mov
push
movs
cmp
int3
dec
push
pop
or
jns
adc
or
cmp
pop
shl
pop
mov
cmp
jmp
or
or
pop
repnz
test
adc
push
adc
mov
loope
daa
and
repnz
mov
in
push
mov
jge
retf
sbb
add
sbb
sub
ins
enter
je
call
mov
jne
or
mov
or
jb
or
sbb
xchg
mov
xor
div
cwde
sti
aas
adc
inc
add
jo
adc
xor
call
mov
mov
push
jnp
cmp
cmp
out
and
icebp
icebp
adc
jbe
adc
jbe
je
jmp
lods
lods
mov
into
jmp
xchg
(bad)
cmp
jl
dec
xchg
and
push
or
jecxz
adc
outs
sbb
jne
mov
adc
(bad)
push
mov
and
test
mov
fwait
enter
into
adc
daa
or
ss
sbb
(bad)
movs
jbe
inc
test
jnp
arpl
jne
lods
and
sub
cs
mov
sbb
jne
sbb
pusha
mov
enter
mov
cmc
stc
sahf
retf
mov
or
in
sub
test
adc
sbb
aad
sahf
popf
push
cmp
sub
sbb
mov
ror
push
add
aad
adc
sub
dec
jmp
pop
mov
push
cmps
mov
cvttps2pi
mov
or
pop
cmp
outs
sub
popa
inc
push
addr16
lds
mov
mov
mov
mov
dec
pop
push
and
add
push
jno
outs
repz
inc
pusha
push
sbb
push
adc
ficomp
lock
and
leave
add
inc
push
mov
or
mov
mov
jne
mov
inc
push
push
sbb
(bad)
sub
out
stos
div
or
dec
aad
push
add
mov
(bad)
sar
lods
push
push
aad
pop
sti
sub
lock
rcl
cdq
fwait
dec
and
out
add
mov
in
and
daa
or
sbb
cli
push
mov
push
shr
loop
cmp
add
inc
xchg
stc
xor
sub
xchg
push
mov
mov
movs
push
popa
jne
or
jne
dec
inc
jmp
jle
jne
inc
push
sbb
ss
push
inc
aaa
sbb
or
push
mov
add
mov
sbb
push
or
lds
push
sbb
push
add
mov
xor
outs
inc
add
push
add
sbb
mov
jne
test
xchg
push
push
add
or
dec
(bad)
and
test
mov
cmp
cmp
push
(bad)
mov
daa
pop
or
iret
xchg
out
dec
js
cmp
push
mov
(bad)
push
(bad)
aaa
xchg
inc
or
add
sti
or
sbb
cmp
nop
pop
add
popa
jl
xor
pop
inc
dec
jne
test
inc
dec
sub
inc
xchg
or
add
dec
pop
pop
pop
sbb
push
or
or
in
lods
repz
stos
test
ret
popa
mov
shl
cmps
add
test
xlat
adc
add
loop
push
jb
mov
pusha
and
popf
mov
mov
xchg
jne
pop
adc
add
(bad)
cmovp
push
test
neg
push
xchg
arpl
push
dec
dec
adc
adc
and
add
adc
add
je
call
push
cdq
js
push
sbb
daa
push
cmps
push
push
add
(bad)
pop
fcomp
xchg
je
sub
xor
fmul
or
push
pop
cdq
enter
or
add
daa
adc
lods
bound
add
ins
inc
ins
and
ror
retf
retf
call
push
rcl
call
inc
add
sub
push
cmp
or
push
test
lea
outs
jne
mov
push
push
fmul
out
add
mov
cmp
aas
xchg
and
mov
or
xor
call
emms
rol
xchg
ficom
inc
jae
arpl
sub
add
pop
sbb
adc
add
lock
scas
inc
push
adc
mov
ret
and
xor
add
pusha
lahf
inc
sbb
pushf
inc
imul
ret
icebp
stos
or
mov
test
xor
mov
shl
inc
and
push
and
xchg
mov
ret
fadd
or
mov
pop
add
fistp
test
mov
mov
sbb
ret
push
or
inc
fwait
sbb
fnsave
add
push
xlat
xlat
stos
adc
dec
gs
adc
sub
pop
sbb
sbb
lods
inc
loopne
adc
xchg
addr16
mov
inc
cli
mov
enter
out
sub
shl
stc
push
adc
mov
stos
xchg
sub
adc
jle
in
imul
jbe
adc
xchg
xchg
pop
lock
rol
push
pop
pop
sub
inc
das
mov
or
push
push
jb
ins
push
mov
outs
cmc
rcr
(bad)
shr
xor
(bad)
add
mov
test
cmp
xchg
sub
mov
lock
(bad)
jmp
mov
shl
add
mov
shr
shl
fisub
fnstcw
jb
or
aaa
lea
jge
push
fnstcw
ret
mov
shl
fst
jmp
mov
arpl
dec
and
adc
cmp
dec
sub
mov
cli
pop
fidiv
push
mov
lods
xchg
and
adc
cmc
push
xor
jbe
loope
mov
repnz
mov
(bad)
aam
clc
and
test
je
cs
jg
sub
shr
xor
mov
xlat
inc
das
jne
and
sahf
pop
sti
jle
fist
jmp
test
fnstsw
and
mov
cmp
in
data16
xchg
adc
mov
xor
pop
adc
adc
mov
fisubr
fisub
rol
xchg
gs
adc
ret
sub
add
test
or
mov
adc
jp
xchg
int3
and
jno
sub
jp
lds
(bad)
jecxz
adc
xor
and
xchg
inc
xor
cmp
lahf
call
mov
daa
add
adc
adc
and
adc
push
mov
or
xchg
leave
test
jle
idiv
sub
mov
pop
mov
and
lock
mov
(bad)
push
adc
(bad)
mov
jmp
or
and
push
or
or
out
cmp
mov
jnp
daa
mov
adc
or
jg
(bad)
aam
imul
fisubr
or
retf
je
stos
mov
stc
fidivr
pop
shl
pop
pusha
repnz
push
mov
in
aam
jmp
sbb
neg
jae
icebp
dec
cld
jg
inc
jo
cli
and
mov
dec
fstp
or
mov
mov
push
in
push
mov
movups
ins
or
out
adc
xlat
inc
add
test
jne
adc
add
adc
jge
pop
fild
and
sub
adc
std
jmp
mov
jbe
sbb
jae
adc
jmp
add
lods
movs
or
or
or
push
pop
sti
shr
mov
mov
pushf
pop
pusha
leave
sbb
pop
sbb
ret
fild
and
mov
mov
ds
fwait
add
jo
js
iret
out
stc
adc
rcl
(bad)
mov
lahf
fldcw
lea
mov
mov
imul
ret
lea
push
je
lea
push
test
adc
add
push
xor
sub
into
dec
cmps
pop
add
pop
dec
sub
bswap
push
push
add
scas
dec
icebp
mov
or
pop
adc
push
pop
xchg
jl
add
add
int
sbb
pop
sub
mov
cmp
xor
(bad)
ja
push
enter
sbb
push
fild
and
fincstp
and
adc
push
pop
and
fcomp
xchg
pop
mov
push
push
push
jnp
mov
jne
jne
push
ss
out
movs
fiadd
dec
xchg
dec
xor
pop
repz
and
enter
pop
add
pop
inc
xor
fist
sbb
and
(bad)
nop
sub
cmp
or
rol
xchg
pop
inc
in
fwait
push
xchg
inc
push
push
pop
cwde
stos
fmul
xor
sbb
(bad)
dec
mov
scas
ins
and
lods
pop
leave
push
pop
mov
dec
adc
arpl
mov
or
or
pop
scas
mov
scas
push
push
push
pop
sbb
inc
inc
mov
xchg
fstp
adc
jmp
stc
jnp
sbb
ss
lods
and
inc
aaa
push
xor
ss
mov
rcr
add
inc
cmp
add
popa
push
dec
add
comiss
xor
mov
out
nop
xchg
adc
loope
cmp
sub
inc
out
mov
rol
sub
aaa
add
imul
cmps
xchg
inc
mov
pop
adc
cld
movs
movs
push
xchg
add
sahf
movs
fld
sub
es
(bad)
push
in
nop
stos
or
mov
sub
mov
jle
or
cmp
mov
push
jnp
enter
and
adc
sbb
pop
hlt
dec
mov
or
sti
aaa
inc
sar
lock
sbb
cmp
(bad)
mov
bndstx
inc
daa
jo
xchg
les
(bad)
gs
test
inc
rol
test
in
mov
mov
cmp
adc
xchg
jnp
rcl
nop
cmp
jge
or
rcr
rcr
ret
adc
adc
test
push
sti
mov
and
das
dec
adc
sub
jae
or
mov
jae
or
dec
call
daa
sbb
shl
xchg
outs
rol
adc
push
adc
sahf
pop
and
loop
jnp
pop
xchg
push
jnp
xchg
cmp
fldcw
or
inc
fstp
(bad)
fcmovnbe
cmp
jge
or
add
xor
or
call
push
shl
push
sbb
mov
pop
ins
sbb
retf
cmp
cmp
sub
xlat
les
add
scas
add
int3
sbb
(bad)
dec
push
shr
aaa
fsub
and
push
popf
repz
fimul
jle
scas
retf
inc
leave
je
ss
xor
icebp
push
js
mov
mov
sbb
sti
cmp
mov
jge
mov
inc
mov
not
cld
int
jp
sbb
mov
repz
add
mov
jne
add
mov
jns
mov
out
scas
inc
or
mov
adc
mov
add
or
(bad)
jle
cmp
jmp
ret
ret
sub
movs
fcmovnu
sub
sbb
mov
(bad)
adc
add
enter
rcl
push
xor
push
mov
or
cmp
sahf
mov
or
or
shl
mov
adc
or
or
test
mov
std
cmp
movs
movs
and
pop
push
icebp
push
clc
lea
cmp
adc
push
(bad)
jmp
mov
add
mov
jne
sub
fst
cmp
jnp
jmp
stos
push
add
jne
inc
push
mov
mov
test
inc
cli
jb
outs
inc
xchg
outs
gs
dec
cmp
jecxz
test
or
or
ds
hlt
dec
lock
mov
push
pop
sub
clc
idiv
inc
pop
sub
jg
shl
pop
and
jmp
add
in
add
sti
or
lea
or
inc
jmp
xor
mov
pop
sub
adc
and
sub
test
adc
push
mov
outs
into
call
or
push
xor
mov
test
jbe
jne
xchg
or
and
les
push
add
ret
pop
adc
ss
mov
xor
add
lock
repz
retf
and
push
je
enter
xor
sub
dec
mov
sub
add
add
jnp
add
pop
push
fst
adc
sub
(bad)
or
push
ss
aam
xchg
xchg
push
dec
test
test
or
mov
adc
pop
mov
xor
pop
cmp
mov
or
ficom
xor
bnd
sub
sub
pop
sbb
das
adc
dec
idiv
shl
lods
push
or
xchg
movs
and
jmp
movs
je
and
or
sbb
outs
in
xchg
fcomp
bound
push
fst
mov
inc
pop
jmp
jne
lahf
lods
jmp
adc
inc
adc
mov
mov
mov
and
leave
push
lea
adc
adc
mov
fstp
adc
add
sbb
hlt
jne
dec
pop
adc
adc
and
pop
cmp
push
pop
test
test
xor
bound
jne
and
outs
(bad)
sbb
sbb
ins
sub
es
add
mov
and
mov
into
inc
xor
xor
pop
cmp
and
sub
push
inc
xor
inc
pop
xor
movs
ret
sub
cmp
xchg
mov
push
rol
lock
rol
and
test
and
or
pop
cmp
dec
jmp
or
cmp
in
fisub
mov
retf
jbe
loop
push
pop
xlat
in
stos
add
cmp
adc
mov
ins
sub
sbb
sbb
in
dec
and
inc
xor
or
inc
mov
cmp
add
pop
cld
push
mov
ins
loopne
ds
lock
jne
push
or
jns
xchg
jmp
xchg
jne
cs
loopne
std
int3
pop
stos
inc
popf
cmp
inc
and
jne
jp
pop
fnsave
xchg
repz
fwait
cmc
pusha
push
cmp
add
pop
or
sbb
aad
out
outs
pop
es
and
pop
js
cmps
fisubr
and
call
repnz
and
dec
add
add
test
add
sbb
add
mov
aaa
scas
iret
adc
test
xchg
add
mov
or
pusha
jge
clc
add
cmp
sub
cld
mov
xchg
cmp
cld
cmps
push
inc
or
cld
jb
ret
sub
call
inc
push
add
scas
rcl
fadd
enter
and
loopne
or
jb
and
(bad)
sbb
(bad)
out
out
(bad)
hlt
sbb
cld
xlat
or
outs
inc
leave
or
or
mov
dec
fmul
fstp
mov
lock
sub
pop
lods
shl
fdiv
addr16
add
xor
or
push
jl
sub
inc
neg
or
push
xchg
arpl
loopne
push
leave
and
xlat
xlat
push
pushf
push
adc
stc
or
adc
mov
sub
test
and
xor
cmp
inc
or
into
je
dec
sahf
mov
jmp
jae
push
sbb
mov
loope
pop
lods
scas
fidivr
cmp
pop
push
ja
mov
pmaxsw
sub
outs
pop
inc
and
add
and
dec
ss
icebp
sbb
ror
cmp
fwait
mov
inc
fnsave
retf
push
iret
fistp
cs
adc
dec
xor
mov
nop
or
or
jmp
shr
je
aam
mov
(bad)
cmp
ins
sbb
sahf
mov
adc
and
jb
jmp
xchg
popa
movs
fmul
fsub
aas
or
ss
(bad)
add
std
mov
jno
jae
rol
sub
(bad)
xor
push
hlt
jae
inc
adc
xchg
hlt
add
adc
add
jp
xchg
and
mov
lea
xor
pop
mov
or
inc
aam
sub
mov
push
ret
cdq
mov
add
pop
retf
xor
add
jbe
shr
adc
xor
(bad)
sar
(bad)
jp
stos
and
push
mov
lea
push
or
mov
sub
add
cmc
jmp
or
out
fidiv
adc
inc
push
enter
loopne
adc
movs
je
push
adc
clc
push
or
arpl
call
jb
jns
push
adc
sub
add
cld
and
int
xchg
ret
cld
out
jmp
mov
or
movs
or
push
stos
add
add
sbb
xchg
ror
add
or
adc
adc
mov
xchg
xor
rcl
lods
push
inc
adc
adc
rol
jb
test
jle
sbb
aam
inc
popa
mov
pop
xchg
lahf
lock
mov
in
(bad)
in
add
xor
or
test
jne
mov
(bad)
push
out
jle
add
call
shl
sti
ds
je
retf
enter
cmp
or
(bad)
mov
and
xchg
mov
hlt
pop
inc
fadd
push
push
add
mov
adc
push
aad
dec
xchg
jbe
ss
dec
in
je
fistp
ret
pop
push
add
cld
add
sbb
push
add
pop
or
xor
retf
(bad)
jae
push
movs
sbb
add
mul
fadd
and
sahf
(bad)
pop
dec
add
add
dec
push
jb
stc
push
push
arpl
mov
or
outs
xlat
jmp
sbb
push
xchg
push
adc
jge
inc
inc
jmp
(bad)
cli
inc
mov
lods
inc
cmps
(bad)
dec
push
push
push
cmp
sbb
icebp
(bad)
shl
add
in
cmp
pop
push
and
or
add
(bad)
fistp
cmp
in
inc
test
clc
add
inc
push
mul
ins
add
cld
pop
shl
xchg
or
sub
mov
imul
or
xchg
mov
ins
pop
sub
adc
dec
cmps
fisubr
jle
call
test
(bad)
je
jp
or
dec
push
xchg
pop
arpl
mov
xchg
pop
mov
xchg
dec
inc
sbb
les
jno
pop
jmp
add
jnp
outs
pop
jge
sbb
or
jp
ja
xor
xchg
inc
fstp
pop
push
push
fnstenv
xor
xchg
add
jge
mov
add
call
es
push
mov
lea
fwait
mov
sbb
sbb
sbb
test
adc
xchg
mov
sbb
scas
jno
rol
or
inc
add
loop
mov
mov
mov
pop
loopne
test
add
lods
sbb
push
adc
cmc
mov
shl
mov
clts
cmp
mov
push
adc
or
or
sti
pop
shl
push
jbe
inc
ins
addr16
sbb
retf
push
sbb
and
jne
sub
sub
lahf
and
lea
or
aam
adc
loopne
fs
ins
cmp
xchg
fstp
adc
test
inc
mov
stos
daa
sbb
ins
or
and
sbb
into
call
call
popf
sar
jmp
sbb
and
add
fld
dec
sbb
xchg
and
aaa
outs
and
inc
add
adc
cmp
and
mov
or
push
jne
push
pop
les
dec
push
or
sbb
sbb
sbb
add
fsub
sub
add
push
fld
add
sbb
aam
aam
sub
cmp
xchg
fild
out
fwait
dec
or
jne
leave
fisttp
rdpmc
push
adc
or
jle
push
mov
shl
pop
mov
cmp
mov
pop
add
xchg
ret
rcl
imul
xchg
clc
mov
nop
jbe
pop
adc
adc
push
and
sbb
sbb
jbe
inc
fdiv
add
adc
push
std
push
dec
leave
dec
adc
lds
clc
sbb
xor
(bad)
rcl
test
xchg
(bad)
das
mov
(bad)
loopne
add
pop
add
outs
xchg
xor
dec
and
add
sbb
pop
es
add
(bad)
(bad)
gs
mov
cmp
cs
xchg
fisub
push
sub
rol
sbb
and
adc
cmps
pop
sub
stos
ror
and
stos
mov
mov
leave
push
and
ss
sbb
data16
add
inc
pop
rcl
mov
cmp
pop
hlt
push
mov
dec
push
scas
push
xchg
jecxz
pop
and
test
inc
push
hlt
ins
pop
fmul
call
mov
mov
and
inc
and
push
dec
loope
sbb
test
sub
movs
cmp
or
out
jbe
adc
add
adc
pop
stos
rol
cmp
hlt
adc
add
retf
pop
sahf
pop
jmp
xchg
mov
inc
shr
cmp
ins
and
push
xor
mov
or
push
cwde
sub
sbb
fwait
sbb
mov
mov
adc
jno
push
pop
test
push
dec
ins
in
fs
lods
pop
push
in
stos
mov
or
jbe
dec
jecxz
push
pushf
jb
sbb
jne
dec
fsubr
jbe
mov
and
fiadd
je
mov
lea
push
and
rcl
add
push
movs
push
js
das
adc
js
or
rcr
add
ret
fst
xchg
push
in
pop
add
(bad)
dec
fmul
xchg
pop
xor
or
inc
mov
sbb
mov
outs
js
ja
fbstp
push
popa
adc
je
cmp
not
inc
mov
leave
or
add
inc
lock
add
inc
inc
inc
adc
mov
inc
push
nop
add
sub
or
push
js
add
add
in
movs
cmp
pop
arpl
cld
fist
je
cmp
je
mov
cmp
sub
mov
mov
adc
xchg
es
mov
mov
inc
cmp
jne
sub
sbb
mov
ret
add
sbb
xchg
and
pop
ja
pop
fnstcw
push
sub
fcomp
xchg
jne
xor
jecxz
stos
test
jle
adc
and
jnp
adc
adc
cmps
push
push
add
jmp
mov
and
mov
or
mov
jnp
push
jb
ror
pop
cld
adc
popa
pop
push
add
loope
fiadd
or
inc
cld
xchg
mov
jne
cmp
scas
aas
add
adc
inc
fucomp
add
add
or
nop
imul
pop
mov
inc
jne
push
or
hlt
call
adc
imul
imul
fnstcw
retf
int
add
pop
jmp
imul
mov
inc
fisubr
(bad)
mov
dec
adc
fisttp
pop
push
fwait
jb
das
and
fcmovb
xor
lea
add
and
inc
dec
mov
mov
or
in
fnstenv
ret
fldcw
dec
or
pop
mov
ss
mov
xchg
ss
push
je
sub
pushf
call
outs
inc
inc
je
fnsave
and
je
push
sub
sub
jb
sub
cmp
xchg
je
inc
jge
jl
adc
adc
xchg
sub
ins
fwait
sbb
mov
sbb
push
mov
and
call
js
xchg
xor
push
pop
in
jge
or
pusha
jne
mov
jmp
jne
repz
cmp
pop
inc
mov
ret
and
or
mov
ja
test
inc
add
cmp
and
dec
fist
pop
adc
nop
or
jbe
add
xchg
push
sbb
sbb
mov
enter
jnp
dec
imul
jge
cmp
dec
push
or
adc
xchg
not
aad
cdq
pop
adc
adc
cmp
or
inc
cs
cmp
popf
jge
mov
inc
dec
jl
inc
cmc
std
cs
call
mov
dec
in
je
lock
ror
call
adc
or
xchg
pop
and
jb
mov
adc
clc
jmp
inc
jle
lea
adc
dec
inc
cmp
retf
gs
dec
mov
jo
lahf
or
sub
fdivr
push
sub
pop
push
adc
sub
std
das
xchg
test
shl
test
je
add
or
adc
pop
inc
inc
cmp
jl
xchg
inc
add
jb
push
and
adc
pop
pop
ja
xchg
jle
fsubr
xchg
call
cmp
inc
aaa
ret
push
pop
and
sub
cmp
or
cmp
dec
repz
sub
or
and
cdq
push
jle
fs
add
stc
adc
pop
and
sar
sti
pop
mov
jmp
add
test
jne
ret
push
jbe
xor
inc
jb
jbe
addr16
push
imul
add
fstp
mov
sbb
jb
pop
call
push
(bad)
neg
xor
shl
enter
add
sub
cmp
jne
fdiv
aaa
xchg
pop
retf
call
mov
loopne
adc
mov
sbb
sbb
push
push
push
xor
loop
lock
and
cmp
in
sub
adc
ror
js
sbb
sahf
test
ds
jp
in
and
aam
and
out
outs
repz
rep
jge
or
sbb
pop
std
inc
and
es
xchg
iret
add
inc
push
mov
mov
or
lock
out
cmc
mov
rcr
pop
sti
mov
cmp
jno
dec
pop
mov
mov
cmp
cmps
(bad)
call
fld
push
aad
movs
dec
pusha
adc
int
ja
mov
stc
scas
mov
cmp
mov
loop
jae
sti
push
jbe
outs
aaa
jb
push
dec
push
add
pushw
push
xor
popw
mov
(bad)
sbb
sbb
ds
fst
dec
inc
add
jne
sub
jae
push
sub
and
xlat
inc
jno
pop
dec
or
test
inc
or
stos
pop
pop
jmp
retf
pop
add
cmc
xor
inc
jmp
repnz
adc
or
xor
add
ret
add
js
shr
imul
add
dec
adc
push
push
pusha
inc
movs
and
mov
stos
add
and
pop
add
pop
stos
int
xor
call
push
add
xchg
in
xor
sub
jl
pop
cwde
sbb
or
imul
jmp
xchg
pop
jle
dec
arpl
add
jne
pcmpeqw
scas
cmp
adc
pusha
fwait
popf
int
xchg
mov
(bad)
mov
add
mov
sar
sub
clc
or
push
in
imul
cli
or
jne
mov
sbb
add
ss
xor
pop
mov
dec
mov
sbb
cmp
jae
gs
mov
rep
push
mov
mov
or
jo
scas
test
iret
test
cmp
scas
lods
ret
mov
xor
jne
out
add
sbb
jbe
add
scas
(bad)
mov
jmp
ds
je
sbb
push
adc
add
shl
mov
dec
adc
test
rcl
arpl
fsub
jns
adc
loopne
mov
mov
in
jne
mov
mov
adc
les
cmps
mov
push
int
icebp
xor
inc
or
lods
add
push
les
push
add
fsubrp
std
sub
ud0
lods
pop
adc
xor
xor
test
sar
pusha
or
mov
fisub
jae
inc
sub
push
inc
inc
mov
sub
adc
mov
mov
add
jle
nop
push
mov
not
not
je
push
mov
add
adc
sbb
sbb
mov
inc
(bad)
sbb
add
add
push
push
aam
nop
add
push
pop
and
sub
das
mov
call
loop
add
je
test
sti
inc
je
cmp
aaa
or
add
pop
inc
das
adc
push
sub
mov
sbb
pop
bound
xor
cwde
bound
jo
hlt
(bad)
out
cmp
xor
and
xor
enter
loopne
push
in
push
sbb
push
xchg
inc
cmp
inc
sbb
pusha
retf
mov
jbe
hlt
call
js
xchg
mov
lea
inc
sar
clc
pop
(bad)
dec
mov
jl
push
dec
push
sbb
mov
sbb
icebp
dec
xor
outs
inc
das
shl
lods
pop
jmp
mov
or
in
adc
adc
jae
add
fmul
(bad)
cmp
push
or
ret
sub
add
push
cmp
and
sbb
sbb
sbb
pusha
stos
dec
hlt
or
cld
rol
xor
leave
clc
clc
cld
add
adc
jle
ins
push
adc
push
movs
push
lods
test
or
fmul
jmp
cmp
mov
push
in
vpand
cmps
or
je
xchg
adc
sub
xor
inc
hlt
and
xor
jmp
inc
jecxz
shl
(bad)
je
cmp
push
inc
add
out
xlat
data16
test
loope
and
inc
jns
imul
xor
fdivr
sub
push
cdq
pop
idiv
loope
add
pop
pop
or
out
out
pop
call
in
push
sbb
adc
cmovo
or
rol
xchg
test
jp
xchg
mov
(bad)
dec
push
add
or
or
int
add
jle
push
imul
dec
movs
inc
pusha
fs
neg
mov
mov
test
dec
pop
pop
xchg
daa
jle
pop
and
adc
pop
cmp
push
fiadd
and
call
mov
adc
and
pop
retf
inc
inc
push
rcl
adc
xor
pop
aad
and
rcr
push
ror
cmps
aaa
sub
bound
xchg
shl
je
shl
xchg
mov
fsubp
cmc
test
cmp
enter
add
add
aaa
xchg
dec
add
add
imul
div
add
nop
movs
aaa
cld
pop
mov
ins
test
mov
mov
add
loopne
loop
stc
push
aad
push
push
jae
inc
mov
iret
push
pop
or
es
sub
mov
adc
pop
sbb
sub
lds
cmps
jo
in
add
enter
mov
jmp
out
lea
add
mov
popa
xchg
mov
cs
xchg
faddp
clc
mov
or
nop
push
pop
fmulp
push
pusha
test
adc
test
or
mov
lds
dec
mov
mov
cmp
lds
ret
sbb
mov
mov
int
arpl
xor
sahf
iret
cmp
pop
std
push
push
pop
sub
or
adc
jo
mov
jbe
mov
xchg
out
pop
aaa
jne
inc
inc
xchg
xchg
cmp
push
inc
inc
(bad)
es
mov
pusha
jb
and
leave
jno
mov
add
add
lods
adc
dec
or
sar
inc
add
xor
test
or
test
popf
fisttp
jmp
cmp
or
mov
or
adc
mov
(bad)
jmp
into
jmp
mov
fimul
inc
push
add
clc
imul
sar
js
cmp
ja
cld
or
jp
mov
or
xchg
push
in
push
xchg
xchg
cmp
push
lods
imul
and
inc
fs
sbb
gs
mov
(bad)
sbb
lods
mov
mov
add
push
xchg
mov
rcl
xchg
retf
jnp
or
je
adc
data16
pop
ror
ret
adc
push
repz
ror
push
or
or
sti
leave
mov
lahf
adc
dec
stos
push
push
lock
ret
jb
fcomp
jle
je
mov
adc
imul
clc
sbb
jnp
cs
arpl
adc
into
push
and
push
dec
pop
xchg
js
cld
inc
inc
lods
mov
adc
pop
and
pop
sub
call
(bad)
jp
and
pusha
mov
das
jae
lea
les
push
mov
fld
sar
adc
std
mov
test
aad
add
sbb
or
pusha
adc
dec
mov
sub
dec
loop
shl
lea
fcom
mov
push
push
mov
(bad)
sbb
or
push
fcomi
sbb
nop
(bad)
jo
cs
inc
mov
mov
mov
shl
test
mov
adc
pop
test
fstp
or
add
data16
fdiv
mov
and
add
jmp
jmp
or
add
or
mov
jmp
inc
fsubr
mov
test
push
lock
add
fldenv
jno
push
daa
out
cmovne
adc
sub
test
cmp
push
jl
push
cmp
sbb
retf
sbb
arpl
push
adc
std
(bad)
clc
jo
fs
mov
jecxz
inc
adc
push
outs
pop
pop
das
mov
mov
leave
mov
outs
adc
icebp
mov
cmp
mov
fsubr
add
mov
rol
add
and
sbb
adc
pop
push
xchg
adc
ins
inc
cmp
mov
add
or
shr
pop
adc
mov
mov
xor
push
pop
bound
cwde
outs
popf
cmp
mov
mul
idiv
mov
test
sbb
and
in
aam
fmul
mov
test
cs
add
cli
xor
mov
sub
ja
test
pop
inc
and
push
lahf
ins
hlt
xchg
sbb
ja
call
jp
dec
retf
inc
inc
dec
add
xor
cmp
sbb
clc
inc
mov
in
das
in
mov
sti
mov
mov
xor
or
inc
or
inc
xchg
ror
or
or
inc
test
sti
sub
jae
dec
rcr
fs
in
xor
repz
xor
mov
scas
mov
push
adc
mov
fmul
pop
sbb
mov
out
mov
(bad)
mov
out
std
jae
mov
or
xchg
fmul
mov
fwait
lea
jo
mov
ja
mov
hlt
xchg
sub
lahf
cmp
push
push
mov
call
push
jne
clc
div
inc
in
push
jg
xor
mov
or
sub
push
add
sbb
in
pusha
movs
fadd
ret
mov
jb
cmp
jae
inc
xchg
pop
adc
jmp
mov
pslld
adc
push
inc
loop
inc
cmp
iret
mov
dec
add
ins
mov
and
out
mov
pop
cmp
fld
adc
or
pop
mov
(bad)
pop
pop
add
dec
inc
fcom
shr
loope
pop
test
or
xchg
mov
sub
cld
push
lock
out
xchg
dec
mov
push
jns
nop
cmp
retf
add
lock
pop
in
mov
add
xchg
and
xchg
sbb
jmp
and
inc
xchg
jno
adc
adc
jo
mov
sub
mov
cdq
vpmadcswd
dec
mov
adc
adc
jno
movs
cmp
mov
adc
and
imul
rcl
pop
data16
sbb
inc
scas
pop
jb
dec
ins
jne
mov
xchg
lea
je
hlt
aaa
es
inc
cmp
mov
xchg
aaa
or
xchg
lock
mov
daa
add
or
addr16
shr
pop
cmp
ins
pop
adc
rol
adc
js
and
mov
loop
pop
jmp
or
cmp
out
add
cs
rcl
scas
mov
jle
addr16
adc
cmp
lock
cmp
or
or
mov
mov
pop
sub
sbb
xchg
xchg
out
sub
outs
aad
or
inc
mov
jp
fwait
xor
or
dec
or
test
mov
mov
pop
shl
pop
retf
pop
jo
scas
ds
jecxz
xor
push
push
dec
dec
xor
push
jmp
push
pop
ss
lea
mov
adc
fdivr
hlt
dec
add
dec
or
sahf
sbb
out
cdq
inc
es
mov
mov
pop
outs
mov
jmp
xchg
daa
loope
mov
das
cmp
cmp
add
leave
pushf
pop
lea
inc
leave
pushf
sbb
std
push
cmp
dec
add
lea
lock
cmp
add
push
jl
cwde
ror
sub
jbe
pusha
out
push
push
pop
push
outs
inc
push
and
push
add
or
ja
cmp
jb
je
cmps
xor
mov
push
or
mov
or
mov
add
pop
inc
ror
pop
pop
sbb
push
add
fnstcw
xor
bound
jmp
pop
cmp
mov
ds
ss
das
xchg
clc
int
inc
arpl
and
dec
or
jne
adc
adc
add
es
push
mov
ins
xchg
or
ret
(bad)
jbe
pop
adc
aam
shl
(bad)
jne
pop
das
and
clc
xlat
popa
push
lods
scas
cmp
cmp
sbb
or
dec
pop
xchg
or
sub
mov
fs
adc
add
xchg
mov
jne
and
adc
ret
cdq
xlat
mov
or
stos
popf
lds
push
mov
outs
and
mov
or
(bad)
sahf
daa
scas
fsubr
pop
or
push
push
jmp
ror
or
daa
or
jnp
shl
popf
pop
pop
dec
cmp
(bad)
add
fild
fs
loope
sub
jge
jno
mov
push
je
cmp
addr16
scas
enter
add
and
(bad)
jnp
add
(bad)
movs
nop
adc
pop
jne
or
sub
jle
ja
cli
add
add
cmp
mov
cmps
mov
stos
xor
jae
pushf
mov
push
xor
or
mov
repz
adc
sbb
js
lea
cs
cmp
aaa
push
(bad)
or
pushf
jne
cdq
out
mov
clc
xchg
mov
xchg
mov
mov
(bad)
rcr
mov
cdq
dec
je
push
(bad)
jmp
xor
or
push
aam
jmp
push
adc
(bad)
les
jp
test
cs
icebp
xor
or
mov
fisubr
and
push
es
jmp
leave
cmp
jbe
mov
icebp
loopne
push
push
in
mov
xor
mov
loopne
or
inc
cmp
mov
push
adc
imul
imul
push
test
fst
aaa
test
out
outs
fldcw
mov
ins
mov
pop
movs
and
mov
pop
cmc
pop
add
push
pop
pmuludq
lea
or
jae
jl
sbb
xor
es
cmp
dec
pop
push
push
cmp
and
jns
or
les
mov
push
sub
int
jg
sub
xlat
push
test
mov
pusha
jp
es
mov
pop
dec
or
adc
nop
mov
sbb
pop
pop
pop
dec
icebp
xchg
dec
test
pusha
or
add
stc
fdiv
push
ins
daa
je
jmp
mov
push
push
cmp
scas
pop
jne
pop
mov
mov
inc
hlt
mov
pop
mov
xchg
add
test
repnz
sub
addr16
(bad)
pop
dec
(bad)
stc
inc
mov
cli
shl
call
push
inc
or
pop
push
mov
test
stc
mov
push
or
adc
cmp
add
xor
test
sbb
pop
adc
ret
shl
xor
mov
or
jne
cmp
ja
push
xor
cmp
add
cmp
mov
xchg
sub
mov
jmp
xchg
(bad)
jb
mov
pop
or
out
call
pop
push
push
sub
cmp
mov
mov
pusha
out
xchg
adc
mov
inc
adc
(bad)
in
add
mov
(bad)
aaa
mov
sub
xchg
jne
sub
mov
fwait
fs
rol
sbb
adc
int3
and
add
or
adc
or
pop
mov
push
jne
pop
pop
std
mov
add
fwait
sub
add
lock
loopne
shld
jbe
push
xor
cmp
xor
sub
fnsave
push
or
add
sahf
sbb
movs
test
jb
cmp
push
aas
push
lahf
cmp
inc
and
jle
mov
mov
aas
or
mov
push
(bad)
leave
into
dec
add
dec
stos
je
add
or
ja
dec
stos
dec
pop
cmp
aad
or
sbb
and
pop
leave
data16
or
daa
dec
jae
or
iret
or
sub
into
and
cmp
and
cmp
hlt
jecxz
dec
sbb
adc
add
inc
rcl
dec
pop
sbb
stos
mov
shl
xor
in
xchg
and
sbb
(bad)
dec
movs
gs
rdmsr
push
mov
push
test
ret
mov
mov
inc
test
jnp
lods
add
mov
(bad)
xchg
retf
shl
cmc
jmp
rol
mov
inc
jge
pop
data16
or
rcl
test
push
push
shl
daa
xor
or
outs
call
ins
xor
mov
mov
stc
movs
push
mov
jmp
bound
je
pop
or
cs
add
or
fwait
retf
inc
or
into
mov
test
push
push
pop
je
inc
mov
scas
sub
adc
pop
test
and
bound
mov
and
mov
ret
cli
cmp
test
inc
ret
push
jmp
in
jbe
js
or
or
pop
cld
xchg
or
sub
and
xchg
sbb
inc
mov
add
pop
xor
or
ja
shl
push
jl
push
push
xor
mov
cli
add
xor
inc
mov
pushf
pop
inc
push
enter
cmp
mov
push
add
push
add
cmp
leave
jbe
jmp
ret
dec
add
xchg
cli
push
mov
and
stc
fs
jbe
out
or
dec
push
push
push
sub
and
cmps
push
xchg
jp
jl
adc
add
sbb
sub
das
sbb
cmps
sub
jmp
sbb
or
sub
mov
popa
push
adc
sar
and
add
jo
and
fbstp
jg
jne
xchg
mov
add
push
dec
push
shl
aam
xor
dec
cmp
loopne
ret
sbb
test
adc
sbb
mov
mov
push
lea
rcl
and
jecxz
sbb
ja
(bad)
or
inc
fs
imul
mov
mov
pop
add
dec
ss
sub
pop
hlt
outs
jle
das
fisttp
xchg
call
sub
push
push
or
fistp
jns
pop
mov
and
inc
push
push
push
je
sbb
ret
mov
pop
sbb
rol
jle
sbb
push
xor
jmp
pop
and
sbb
push
ror
call
jne
cli
push
dec
leave
sahf
mov
ja
xor
dec
push
xchg
ins
inc
in
ss
mov
xlat
inc
add
mov
push
cmps
mov
lods
shl
jbe
push
mov
outs
sar
mov
mov
cmp
mov
frstor
sbb
repnz
add
pop
mov
mov
ins
rol
dec
fisubr
je
jo
popa
cwde
jg
adc
pop
dec
add
cmp
inc
leave
mov
mov
cs
jbe
icebp
or
lods
pop
jmp
push
push
add
outs
scas
fst
cmp
movs
movs
div
pop
push
cmp
imul
sar
sbb
ins
and
inc
lock
enter
and
ret
mov
sbb
in
xchg
push
push
and
jmp
mov
inc
test
(bad)
test
push
push
je
sub
pop
jo
fcom
je
das
jl
adc
pop
mov
jb
mov
add
sbb
jle
mov
cs
cmp
inc
xor
push
arpl
lods
lods
inc
inc
mov
cmp
pop
dec
mov
mov
pop
(bad)
push
shr
fwait
push
jne
add
mov
fwait
stos
outs
or
push
mov
or
adc
mov
and
pushf
jne
push
or
cmp
push
lea
repz
pop
xchg
mov
imul
push
adc
aad
outs
movs
and
sbb
data16
jmp
add
sbb
inc
sub
mov
mov
jmp
jmp
xor
or
sub
sbb
ss
and
or
xor
pusha
and
inc
xor
add
call
push
jne
(bad)
inc
cmp
outs
adc
pop
add
sbb
inc
or
test
sbb
xchg
add
push
scas
inc
retf
push
les
scas
fidiv
cmp
ror
test
fwait
sbb
pop
push
adc
inc
or
or
retf
adc
cwde
adc
mov
test
rcl
sbb
or
push
js
mov
scas
inc
or
pop
xor
je
loop
in
sti
inc
and
push
mov
outs
or
adc
dec
mov
adc
shl
lea
popa
xor
lea
adc
and
stc
mov
mov
sbb
pusha
repz
add
sbb
lahf
dec
dec
add
inc
push
push
aam
push
or
inc
dec
(bad)
fs
dec
push
or
push
or
mov
push
inc
or
xor
iret
inc
xchg
or
sub
ds
and
sti
mov
lea
cmc
xchg
push
adc
mov
cs
sbb
add
inc
jns
xor
xor
scas
ins
sbb
mov
mov
push
push
sub
push
sbb
add
mov
rcr
shr
lock
or
stos
and
fdivr
xor
cmp
shr
loope
sbb
movs
in
dec
sub
mov
adc
mov
rcr
xor
fldcw
aaa
or
mov
xchg
mov
inc
mov
xchg
inc
call
leave
enter
in
push
and
push
jl
and
outs
leave
enter
and
xchg
push
push
pop
xchg
sbb
xor
xchg
cmps
mov
push
mov
jo
jge
jb
jb
jle
mov
push
cmp
je
clc
push
aad
xchg
mov
push
je
and
add
jge
sub
fistp
fimul
mov
ficom
mov
add
cmp
leave
jne
inc
ins
push
pop
mov
jmp
add
shl
aam
mov
aas
imul
and
dec
mov
add
lahf
daa
cmp
xor
sar
mov
lods
mov
jle
mov
scas
lods
cmp
ret
mov
mov
cmp
adc
pop
mov
inc
add
aad
fld
shr
sbb
sub
xor
push
push
inc
aas
dec
imul
lea
pop
mov
retf
mov
pushf
test
repnz
jle
or
jno
or
and
xchg
adc
sar
push
add
in
jge
mov
add
je
cs
loop
retf
dec
cdq
xchg
mov
sbb
mov
sbb
cmp
loope
xchg
and
js
push
in
jmp
stos
popa
mov
fidiv
inc
fmul
ret
ds
out
hlt
dec
inc
arpl
adc
cli
fimul
loope
aas
push
test
mov
stos
out
sbb
retf
mov
or
pop
sbb
cmc
xor
pop
and
and
pop
jo
cmovg
add
je
push
add
add
mov
add
inc
sub
push
add
out
xchg
pop
add
out
mov
xor
add
mov
jnp
or
jp
lock
hlt
and
jae
mov
rol
lods
xor
xchg
daa
shr
mov
sbb
push
mov
leave
and
pop
lock
in
push
mov
pop
mov
and
ins
and
and
mov
mov
fadd
imul
mov
jne
add
shr
xor
movs
sub
jmp
ds
mov
mov
adc
push
stos
std
mov
das
out
dec
retf
mov
sar
fild
sub
call
cmps
std
clc
mov
mov
xchg
pusha
fwait
aad
cmps
fdiv
jmp
inc
push
jmp
sbb
sbb
mov
inc
jo
sbb
mov
add
test
cmp
sbb
inc
and
cmp
fisttp
addr16
cli
push
pushf
add
add
jb
and
sbb
xor
sbb
mov
and
adc
jg
mov
adc
push
adc
xchg
in
sub
or
cmp
mov
ret
les
jo
ficomp
and
repnz
or
mov
push
add
or
std
sub
je
ret
ficomp
jmp
mov
in
mov
(bad)
aaa
push
and
dec
cmps
test
xchg
call
stos
mov
repz
test
imul
stos
dec
jge
(bad)
pop
outs
jnp
push
and
popa
push
inc
push
je
js
(bad)
mov
pop
and
lods
push
push
cmp
retf
fdiv
lds
xor
mov
adc
aas
retf
je
outs
cmp
jmp
and
adc
rcl
ret
push
mov
dec
add
sub
or
push
push
popa
gs
cs
mov
push
cmp
mov
mov
add
sub
cmp
dec
cwde
stos
sar
push
sub
pop
call
inc
lock
jl
ss
pop
push
cli
rol
or
or
sbb
sbb
mov
mov
or
add
sbb
(bad)
xor
push
xor
je
mov
mov
stc
mov
mov
clc
sbb
pop
call
xchg
push
call
(bad)
mov
sub
mov
mov
cmp
sub
jl
test
and
add
jo
loop
lock
push
push
inc
mov
or
push
sahf
clc
rcr
sbb
or
sub
test
dec
clc
cmp
inc
or
pushf
sub
call
daa
nop
clc
adc
daa
int
jl
in
adc
mov
cmp
dec
sub
inc
mov
inc
out
push
add
adc
pop
(bad)
ffreep
data16
jnp
pop
or
imul
cmc
jmp
cmp
push
fistp
das
mov
cmp
jbe
mov
jb
mov
sub
push
nop
pushf
add
add
loope
das
ror
mov
scas
test
in
inc
xlat
cs
dec
pusha
out
shl
lock
xor
movs
sbb
sti
mov
mov
shl
ins
scas
add
or
pop
mov
mov
push
push
or
scas
or
or
push
test
jecxz
push
dec
cdq
and
(bad)
ret
or
sub
fnsave
xor
sub
sub
mov
shl
mov
mov
sub
cli
or
fs
or
xor
jb
idiv
aas
cmp
xor
fidiv
push
ds
push
push
pop
sbb
jnp
adc
cmp
call
movs
adc
adc
stos
lods
push
jne
cs
loopne
cli
enter
cmp
jae
arpl
mov
shr
xchg
lods
std
sub
push
adc
in
out
push
pop
push
out
jne
sub
mov
mov
mov
or
jne
mov
ret
inc
rol
or
xchg
cmp
mov
sbb
rol
jo
(bad)
jne
mov
and
add
add
ja
lahf
xor
cdq
idiv
ret
cmp
mov
push
and
jae
mov
jne
push
dec
xor
jge
or
xor
cmp
movs
xchg
in
jae
adc
cmp
jnp
repnz
mov
or
mov
movs
sbb
or
jo
jg
adc
add
mov
bound
sbb
jo
cmp
in
add
test
inc
add
fld1
push
into
adc
iret
mov
loop
mov
je
std
mov
ret
je
and
setae
(bad)
fidiv
popa
shr
mov
shl
and
push
push
pop
dec
je
add
das
retf
cmp
sbb
cmp
jne
loopne
cld
test
adc
adc
jne
mov
mov
jmp
cmp
and
cmc
jge
and
into
or
(bad)
lods
sbb
sub
sub
add
je
and
adc
mov
push
push
loope
inc
fs
cmp
jne
cmp
push
add
push
popa
dec
cmp
xchg
or
mov
mov
jge
push
mov
gs
or
dec
and
push
in
push
lahf
sub
ja
push
dec
pavgb
or
or
es
add
in
data16
push
sbb
mov
adc
add
inc
and
in
gs
les
and
sub
daa
cmp
mov
ins
sbb
inc
xor
push
sbb
adc
icebp
xor
mov
lds
or
shl
ror
adc
and
adc
pusha
xlat
enter
or
add
sub
cld
mov
call
stos
jne
(bad)
ins
test
adc
push
dec
push
mov
test
push
push
push
mov
popa
add
shl
shl
fadd
cmp
pop
aam
pusha
data16
int3
push
add
or
jbe
mov
in
inc
push
cmp
mov
dec
cmp
pop
lock
sbb
pop
pop
mov
pusha
push
inc
in
mov
movs
cld
or
cli
add
mov
mov
push
push
sub
dec
adc
stos
mov
(bad)
(bad)
xchg
inc
jecxz
inc
xchg
aas
adc
pop
push
ds
inc
mov
test
inc
in
add
sbb
mov
sub
push
pop
inc
inc
cmp
add
jo
cmc
(bad)
call
add
leave
data16
dec
xor
sbb
icebp
(bad)
out
mov
nop
dec
push
bound
or
push
sbb
fcom
out
pop
into
fs
push
push
adc
jo
pop
jle
aam
ins
push
push
xchg
mov
fdiv
loope
push
or
out
mov
add
add
je
add
fisttp
sub
dec
or
add
push
jmp
pop
or
jmp
dec
adc
jo
dec
in
jg
push
sbb
aam
sbb
mov
fs
pop
and
enter
adc
jp
jno
add
xlat
push
ja
je
in
jp
xor
ret
je
adc
xor
sub
mov
pop
call
or
mov
cmp
cmc
shr
sub
jmp
popf
jg
fidivr
dec
popf
je
leave
sbb
sbb
pop
int3
(bad)
or
mov
push
jmp
jge
jo
das
add
mov
ja
push
add
inc
inc
pop
xor
fs
call
sub
aad
loope
push
pop
cmp
(bad)
loopne
dec
shl
and
jo
adc
pop
neg
and
ror
jnp
add
inc
push
add
push
addr16
dec
mov
mov
(bad)
div
leave
nop
leave
xchg
mov
sbb
mov
js
push
mov
pop
loop
pop
dec
pop
push
push
push
(bad)
sub
inc
pop
lods
jo
mov
push
inc
dec
mov
dec
adc
adc
inc
xor
push
pop
xchg
mov
add
xor
mov
dec
add
inc
fwait
ins
pop
add
pop
imul
inc
mov
inc
ficomp
ret
push
mov
sub
mov
pop
into
(bad)
movs
mov
inc
je
nop
pusha
sub
push
push
inc
int
sbb
push
pop
call
sbb
cmp
or
iret
and
jno
pop
mov
xchg
rcr
jmp
outs
adc
dec
jl
call
add
pop
dec
lea
(bad)
mov
jb
mov
fucomi
pop
jmp
movntps
jl
sbb
add
mov
loopne
add
mov
rol
sar
ror
pushf
lock
and
lahf
sub
pop
jp
jae
and
adc
add
lock
add
or
push
arpl
mov
adc
inc
(bad)
and
add
jge
sbb
push
and
xor
pop
add
cmp
mov
das
retf
sbb
retf
cmp
jne
adc
loope
jbe
or
pop
icebp
inc
inc
ja
jns
add
cmovb
xlat
mov
jb
ror
jmp
popa
js
push
call
mov
sbb
mov
mov
sub
sbb
fbld
adc
pop
or
xchg
or
xchg
js
test
bound
lahf
inc
mov
je
test
and
or
lods
inc
xchg
push
push
sbb
call
or
sub
xlat
pop
cmp
adc
fild
xchg
sub
push
push
mov
adc
(bad)
bound
sahf
or
cmp
cmc
mov
add
sbb
sub
into
and
test
mov
adc
mov
call
xchg
adc
mov
call
hlt
push
jnp
jne
adc
xor
sub
add
pop
sbb
leave
and
cmp
test
jnp
push
push
xor
fstp
leave
mov
(bad)
cs
cdq
xor
loop
or
dec
add
sbb
adc
ja
add
push
push
xor
je
push
aaa
xchg
arpl
jbe
pop
adc
cli
xor
int3
push
fbld
sbb
and
fdiv
sbb
ret
add
cmp
inc
cwde
in
xchg
and
push
push
addr16
std
loopne
adc
je
mov
hlt
lock
pop
jl
aaa
leave
outs
aas
test
push
add
add
das
or
test
xor
mov
pop
bound
or
pop
mov
push
mov
repnz
push
add
mov
mov
lock
adc
sbb
pop
ror
push
fsin
xor
cmp
inc
sbb
sbb
out
fs
fs
push
jbe
jb
and
dec
sub
push
sub
xor
add
and
or
push
or
jno
imul
push
push
jg
mov
lea
fsubr
call
push
lea
cmp
xchg
xor
jnp
cs
fisub
xor
dec
pop
mov
retf
pop
jmp
adc
inc
and
rol
or
cmp
add
fisttp
and
mov
mov
jb
(bad)
fnstsw
inc
sbb
add
mov
adc
ins
sub
and
mov
repz
cld
imul
and
popa
jle
enter
movntq
out
and
mov
sub
mov
mov
mov
ret
and
bound
pop
jo
xchg
popa
out
push
(bad)
cmp
mov
jne
or
inc
push
fwait
mov
push
or
add
adc
(bad)
retf
in
and
inc
xor
mov
push
mov
mov
xchg
test
or
mov
stc
shl
inc
add
add
cld
and
xchg
adc
addr16
rcl
nop
cmp
test
(bad)
pop
dec
pop
add
out
inc
add
push
adc
movs
mov
sbb
sbb
push
lea
rcr
inc
cmps
inc
mov
mov
add
call
loope
or
add
test
cwde
lods
pop
mov
adc
pop
movs
xor
xor
add
adc
jno
sbb
clc
jg
adc
push
sbb
xlat
mov
add
shl
sbb
xor
cdq
add
adc
xor
scas
inc
in
jno
adc
shl
clc
aad
test
jae
mov
add
mov
or
adc
jbe
fiadd
imul
loope
cwde
nop
sub
add
mov
bound
repnz
and
mov
pop
xlat
inc
mov
push
sbb
ret
sbb
xchg
shl
cld
push
ret
cmp
and
and
ret
call
push
mov
jo
rcl
push
cmp
rcl
push
jnp
adc
push
pop
pop
xor
dec
(bad)
lock
add
push
adc
into
mov
shr
jmp
cmp
xchg
mov
cs
push
sbb
add
dec
sbb
inc
and
or
fwait
add
xchg
inc
fadd
ins
adc
adc
sub
adc
cmp
sub
pop
sti
fcom
dec
xchg
jne
lods
xor
xchg
or
jmp
test
shr
ret
or
stos
mov
test
pop
or
inc
mov
shr
inc
inc
sbb
inc
aam
inc
in
inc
imul
in
mov
sbb
pop
add
sbb
xchg
popa
aas
(bad)
push
add
loopne
mov
add
cmps
lea
retf
data16
inc
add
std
push
xor
mov
inc
fmul
jne
dec
cmp
mov
mov
movs
(bad)
sub
xchg
jmp
mov
adc
mov
fcom
push
retf
gs
jnp
sub
or
lock
(bad)
repnz
and
adc
sub
pop
mov
cmp
add
or
icebp
(bad)
push
pusha
push
push
inc
pop
push
mov
leave
pop
inc
sbb
jno
pcmpgtb
xor
ss
lock
sbb
add
push
or
pop
nop
add
rol
call
adc
mov
pop
cld
enter
add
clc
std
hlt
out
push
mov
jb
adc
popa
cmc
or
xor
mov
push
icebp
lds
sbb
sbb
test
lods
mov
push
hlt
mov
add
xor
or
or
push
test
cld
sbb
std
add
adc
in
in
pop
mov
retf
nop
in
inc
daa
jg
pop
add
cmp
inc
or
inc
test
in
sti
ror
push
and
xor
ins
fs
push
add
sub
fst
mov
xor
stos
sub
inc
push
push
ret
pop
cmc
add
fisub
inc
sti
ins
icebp
add
push
add
je
retf
retf
je
add
dec
fs
and
daa
push
push
sub
sub
jae
imul
sbb
dec
sub
add
adc
retf
mov
stos
pusha
iret
clc
and
aad
sub
inc
pop
xchg
sar
movs
or
cmp
pop
pop
ss
je
pop
cmps
mov
inc
mov
sub
sub
das
leave
xor
adc
or
test
xor
jg
push
mov
xor
xchg
mov
ins
clc
test
dec
ret
pop
stos
xor
mov
ins
pushf
inc
push
rol
xchg
jne
or
ins
push
int3
jbe
loopne
add
xor
jae
pop
sub
push
pusha
add
gs
(bad)
cmps
fld1
jnp
or
(bad)
ficomp
adc
sbb
adc
jl
movs
ins
pop
or
jo
popa
jbe
push
xor
mov
push
mov
test
jle
inc
inc
push
dec
call
mov
mov
je
push
and
push
ds
fimul
jmp
mov
les
enter
mov
fs
mov
inc
jb
ds
shl
inc
jmp
cs
pushf
pop
xchg
daa
mov
(bad)
data16
pop
in
add
inc
rcr
pop
aad
or
and
jmp
inc
sub
ja
aam
push
movs
pop
sbb
std
push
add
push
mov
call
or
adc
add
mov
out
xor
sbb
push
aas
jbe
adc
dec
and
lea
add
ror
mov
inc
sub
add
xor
sub
aaa
add
sbb
push
cmp
mov
sbb
push
pop
mov
(bad)
rep
mov
stos
and
and
je
es
cmps
sub
pusha
or
adc
sub
push
jnp
sub
xor
je
sub
add
xor
push
inc
call
mov
sub
add
and
jmp
adc
enter
add
inc
pop
add
fs
lods
inc
adc
add
ins
call
fmul
mov
lea
jno
sbb
sub
push
sbb
sub
mov
lea
adc
dec
mov
sbb
push
add
test
or
and
add
jmp
push
mov
inc
sub
dec
shr
inc
test
repnz
sar
or
add
push
jne
retf
cmp
jns
add
out
add
out
inc
(bad)
mov
leave
sbb
or
push
inc
cmps
pop
inc
add
and
mov
or
and
mov
in
not
xchg
cmp
aad
adc
jbe
call
add
push
outs
and
and
mul
sub
jb
in
sub
sub
or
add
(bad)
cmp
loopne
js
lods
sub
fsub
add
add
sbb
dec
xor
or
movsx
ins
cs
mov
jmp
lock
movs
lods
xor
xchg
mov
mov
aam
and
adc
pop
cmp
adc
sub
mov
test
hlt
sti
test
or
pop
fist
cmp
lea
add
xchg
sbb
lock
adc
daa
cdq
add
add
sub
adc
retf
push
adc
mov
pop
pop
jne
xchg
add
cdq
dec
lahf
sar
out
cmps
adc
push
pusha
push
imul
(bad)
je
icebp
hlt
(bad)
shl
or
pop
xchg
lods
or
adc
and
jg
mov
or
inc
and
jecxz
inc
sbb
pop
test
cmp
inc
lds
and
icebp
and
or
sbb
adc
push
(bad)
sbb
or
call
push
push
adc
imul
mov
fs
mov
inc
fld
push
fld
or
pop
add
dec
gs
cmp
stos
or
or
ret
push
sub
adc
outs
inc
mov
add
imul
ja
xor
cmp
xor
push
int
sbb
adc
cmps
mov
xor
pop
xor
lea
cmp
dec
push
sub
rcl
aaa
bnd
je
lea
or
dec
adc
ins
and
mov
movs
ret
push
push
or
cmps
adc
stc
jmp
add
cmp
xor
push
loope
clc
gs
adc
push
lea
imul
adc
test
sub
adc
inc
push
test
es
sub
cmp
adc
mov
jmp
int3
jge
dec
xchg
jge
cmp
test
dec
add
dec
pusha
dec
push
and
leave
dec
ret
sub
add
xlat
or
jno
push
add
icebp
sbb
pushf
shl
jg
sbb
pop
cmp
iret
inc
(bad)
(bad)
pop
mov
test
shl
adc
test
add
inc
(bad)
push
push
sbb
or
mov
sbb
js
and
shl
sar
adc
arpl
sbb
push
mov
dec
loop
fs
adc
mov
push
mov
loopne
loop
adc
push
push
les
inc
ret
xor
push
bound
lahf
add
jle
test
out
outs
and
cmp
mov
inc
outs
jmp
adc
call
mov
adc
je
retf
pop
cmc
pop
aad
push
pop
pop
and
xor
and
inc
lock
push
shl
add
inc
jle
rcr
push
push
sub
mov
dec
pop
sub
push
and
test
mov
add
imul
dec
lahf
loop
xor
in
push
jge
(bad)
adc
clc
inc
mov
inc
inc
pop
inc
jns
inc
cmp
jb
add
aaa
fcomp
mov
sbb
retf
inc
lea
pop
mov
ror
test
je
cmp
and
mov
(bad)
dec
lea
adc
push
imul
xor
inc
xchg
pusha
cmp
xor
fsubr
pop
or
loopne
pushf
pop
dec
jne
mov
loop
push
bound
adc
imul
cs
cmp
xchg
mov
xchg
pop
push
push
add
push
push
repnz
push
and
jl
mov
adc
mov
rcl
repnz
repz
mov
aam
xchg
cmp
pusha
clc
mov
lock
xchg
dec
add
or
ins
fs
sub
push
or
daa
(bad)
cmp
inc
pop
mov
xchg
jb
jne
add
and
pusha
fs
ret
mov
mov
arpl
jne
add
or
cld
aas
xchg
in
xor
or
add
inc
cwde
and
call
adc
mov
xchg
add
and
bound
loopne
pop
add
mov
push
push
mov
pop
test
and
pusha
push
push
je
popf
push
mov
mov
rcl
stos
jbe
dec
inc
mov
mov
mov
sub
(bad)
sbb
inc
ror
sar
inc
adc
mul
mov
add
inc
sub
test
shr
push
or
test
rcl
outs
into
mov
fistp
in
hlt
cmc
pop
leave
(bad)
mov
mov
gs
mov
retf
mov
retf
adc
adc
sbb
xor
mov
and
pop
push
jbe
mov
iret
sub
mov
in
adc
movs
mov
out
cmp
pop
or
vrcpps
xchg
pop
push
sbb
cmp
je
cmp
adc
and
mov
cmp
inc
stos
add
fnstsw
in
mov
call
aam
cmps
mov
hlt
jne
and
dec
add
out
ficomp
cvtps2pi
push
push
fs
mov
sub
mov
adc
add
out
aad
cli
cmp
lea
lds
jmp
outs
jne
hlt
add
push
mov
jp
sub
jno
ins
cwde
loopne
addr16
sbb
inc
pop
add
xchg
cmp
dec
push
data16
mov
sbb
mov
push
jg
mov
mov
mov
push
lods
dec
loope
adc
mov
(bad)
push
imul
pop
push
inc
mov
mov
pop
test
or
pop
and
popa
or
ds
push
or
push
push
(bad)
push
adc
or
into
push
adc
test
int3
ins
or
mov
mov
dec
shr
sub
mov
adc
or
xchg
mov
lods
cli
pop
sbb
jmp
ret
jb
outs
push
inc
(bad)
and
imul
(bad)
jge
jl
pop
inc
dec
sahf
inc
cmp
dec
sub
dec
mov
dec
imul
inc
jmp
adc
test
ja
push
mov
adc
loope
xchg
xchg
test
inc
jb
test
cwde
cli
jbe
retf
sub
add
pop
dec
mov
and
xlat
push
sub
sub
pop
retf
dec
jb
and
test
xchg
in
nop
and
jo
mov
scas
inc
test
rcl
add
int3
sbb
inc
pop
fcmovbe
out
test
sub
(bad)
fwait
jmp
inc
cmp
sub
sub
sbb
out
dec
cmp
popa
lea
push
je
mov
int3
sbb
pop
push
cmp
jmp
fldcw
into
adc
adc
inc
push
inc
in
sbb
pushf
ins
aam
fbstp
shl
ss
fisttp
add
loopne
lea
sbb
sub
in
push
mov
add
sbb
add
scas
pusha
xor
sbb
retf
jnp
push
outs
push
sbb
add
adc
mov
add
and
sbb
jbe
add
cli
and
mov
add
jp
rep
xor
repnz
aas
mov
neg
mov
xlat
int3
ins
mov
mov
lds
add
aaa
lock
in
mov
inc
sbb
add
mov
lds
and
test
iret
ret
(bad)
jmp
pop
pop
push
push
mov
push
clc
and
add
cmp
adc
repnz
jno
enter
and
sub
clc
aaa
imul
aam
adc
dec
add
aaa
pusha
cmp
mov
arpl
dec
sub
mov
fild
rcl
loop
add
pop
dec
repz
dec
xor
and
and
push
sub
loope
sub
int
add
adc
dec
loop
stos
lds
test
das
shl
and
add
ins
sti
retf
in
adc
or
test
adc
call
dec
add
ins
adc
push
xor
push
loop
aas
pop
add
pop
addr16
rol
lock
jae
jl
jge
pop
popa
adc
adc
mov
or
sbb
cs
xor
push
test
push
xchg
pop
in
adc
xor
adc
mov
xchg
addr16
lock
call
mov
pop
cmps
je
aam
mov
sbb
dec
(bad)
pusha
xlat
and
cmp
in
bndldx
push
sbb
sbb
stc
mov
inc
call
fiadd
test
mov
sub
retf
je
and
add
mov
int3
inc
cmp
loope
and
inc
clc
add
test
mov
pop
jns
mov
push
mov
and
push
inc
add
add
jmp
pop
lods
pop
fst
enter
mov
not
mov
mov
mov
ins
xchg
sbb
sbb
adc
je
cmp
or
and
add
or
jge
mov
dec
push
cld
push
push
add
sbb
js
push
das
cld
adc
leave
or
inc
in
pop
arpl
(bad)
and
loopne
sub
adc
xor
scas
xor
mov
sbb
inc
lds
add
adc
mov
movs
mov
je
out
add
pop
mov
xor
push
mov
xor
je
add
aam
adc
fldenv
push
rcr
push
mov
adc
xor
mov
repnz
(bad)
mov
xchg
imul
jle
pop
push
push
sbb
pop
mov
sbb
fdiv
inc
pushf
fsubr
push
ins
imul
rcr
call
sub
out
mov
dec
call
movs
in
loopne
jmp
jns
loope
xchg
int3
add
loopne
xor
mov
inc
push
mov
cmp
xor
dec
and
retf
cmp
or
stos
das
mov
push
nop
xchg
in
or
adc
dec
mov
pop
push
xor
inc
and
or
in
adc
jb
ins
fwait
dec
inc
pop
in
das
bound
cmp
gs
or
xor
bound
pop
inc
test
ret
cmp
rol
or
add
xor
push
test
push
(bad)
in
mov
jg
mov
clc
lods
and
ins
stos
lock
aam
adc
mov
mov
lahf
xchg
push
sbb
add
mov
add
push
dec
add
xchg
data16
and
mov
adc
imul
lock
or
xchg
outs
test
and
xchg
icebp
push
lods
sub
sbb
repz
(bad)
jo
out
mov
mov
shl
push
adc
jp
jmp
call
xchg
aam
inc
jno
je
mov
cmp
mov
jbe
ror
or
xor
lock
inc
lods
mov
add
pop
fist
add
repnz
xchg
sub
cmp
dec
ins
ins
or
push
test
pop
or
cmp
xchg
clc
je
mov
adc
sub
pushf
and
lea
and
push
and
pop
loop
outs
push
jbe
mov
arpl
cmp
lds
loop
jge
mov
neg
jmp
ficom
pop
jmp
jge
out
adc
fnstsw
lea
dec
pop
ja
mov
pop
and
push
(bad)
out
jmp
inc
sti
outs
mov
test
mov
pop
sbb
mov
dec
mov
mov
movs
or
jns
mov
add
imul
jne
sbb
sub
movs
ja
mov
pushf
push
popf
xchg
xor
stos
mov
jo
adc
sub
daa
popa
imul
out
cdq
inc
or
ror
push
sub
pop
mov
mov
clc
adc
xor
mov
jmp
sub
xchg
jbe
ja
jp
mov
sub
dec
mov
add
cmps
mov
sub
push
sbb
out
add
pop
imul
imul
jle
jae
pop
mov
or
rcl
or
outs
add
inc
adc
add
sbb
(bad)
outs
aas
fcmovne
cmp
or
jne
or
jne
push
cmp
mov
dec
push
cmp
cmp
cwde
and
rcl
pushw
add
test
smsw
xchg
mov
lea
xor
jg
out
and
and
sbb
int
adc
sbb
mov
dec
push
adc
push
iret
cmp
cmp
or
fld
pop
add
je
aad
add
ja
push
fsubr
sbb
pop
add
mov
mov
adc
pop
push
js
arpl
rcl
xor
test
push
adc
or
add
fstp
push
and
cmp
mov
inc
(bad)
arpl
shr
cs
rcr
add
dec
and
and
push
push
fwait
jo
sahf
inc
adc
jb
or
lea
cs
add
fwait
imul
add
movs
add
add
cmp
inc
push
xchg
mov
xchg
test
iret
mov
out
jmp
add
and
inc
mov
frstor
or
push
hlt
(bad)
jae
and
or
or
xor
inc
mov
sahf
push
add
push
xchg
scas
adc
je
jmp
outs
gs
jmp
push
mov
adc
jbe
inc
push
xchg
add
adc
sbb
dec
and
sub
fisttp
add
add
imul
pop
sub
sbb
sbb
cli
mov
inc
rcr
call
scas
lock
fst
leave
or
pop
inc
test
adc
dec
sbb
ret
adc
cmp
jbe
add
std
mov
pop
dec
inc
je
dec
adc
jbe
xchg
or
adc
adc
sub
aam
dec
pop
pop
rcr
ret
lock
(bad)
sub
clc
sub
cmp
fwait
or
sbb
mov
inc
or
adc
dec
cmp
or
mov
loope
test
mov
push
pop
or
inc
jmp
fld
int3
aam
and
scas
push
pop
fwait
cmp
mov
mov
or
jmp
sahf
sbb
jmp
jle
or
ins
xchg
lock
nop
leave
pop
dec
and
push
test
sub
cmp
jb
jbe
jl
outs
inc
and
or
add
dec
or
sbb
push
ins
ins
int3
push
dec
int3
pop
inc
push
cmp
fist
adc
cli
or
shl
lds
push
ins
adc
mov
daa
in
pop
iret
xchg
call
mov
xchg
or
loope
outs
xor
add
add
sbb
xlat
or
or
jmp
xor
mov
sub
adc
push
cmps
inc
jl
stc
fxch
jecxz
and
jge
add
outs
xor
xchg
sar
fs
mov
sub
stc
sbb
sahf
test
shl
mov
inc
add
dec
les
sub
adc
sub
cmp
retf
cmp
adc
jecxz
jbe
adc
or
jl
and
and
mov
daa
pop
hlt
mov
and
sar
movs
xchg
sahf
dec
and
and
inc
lock
jo
dec
sub
popf
in
cmp
jbe
xchg
je
adc
push
or
jecxz
ror
xor
push
inc
rol
add
ss
pusha
adc
fs
pop
outs
push
rol
push
cmp
add
jbe
ja
push
push
cmps
adc
mov
or
mov
or
mov
and
mov
outs
mov
inc
dec
jo
push
jge
add
jmp
or
add
inc
push
(bad)
les
add
jnp
adc
lea
call
xchg
dec
lea
pminsw
push
(bad)
dec
scas
mov
jmp
push
jmp
add
fmul
inc
or
fadd
movs
fsubr
xchg
or
sbb
dec
ins
and
retf
push
shr
cmps
mov
dec
dec
and
add
enter
hlt
dec
add
ja
push
mov
fcomp
dec
sbb
and
inc
test
add
sbb
xchg
(bad)
cmp
jb
psllw
out
mov
data16
adc
xchg
adc
and
(bad)
and
pop
adc
push
add
ds
test
hlt
adc
inc
outs
jmp
fbstp
ds
pusha
adc
psubw
mov
jne
les
add
pusha
inc
add
clc
retf
pop
inc
and
std
jmp
cmp
loopne
mov
pop
push
test
inc
retf
pop
les
dec
pusha
lea
ret
hlt
gs
ret
sbb
add
sub
pusha
pop
or
or
out
sbb
sbb
(bad)
data16
adc
add
scas
mov
mov
cmp
pop
fistp
test
stos
xor
add
jb
cvttps2pi
cmc
jno
sub
jb
cdq
mov
in
add
sub
loopne
sbb
mov
sub
cmp
mov
fcom
aam
dec
popf
ficomp
pushf
pop
pop
sbb
fbstp
icebp
pop
ins
mov
and
xchg
daa
fsubr
jmp
cdq
mov
jecxz
ret
xchg
mov
pop
rol
sub
sbb
sub
aam
add
outs
imul
jo
gs
lock
les
in
enter
fmul
mov
hlt
cmp
outs
retf
cwde
imul
fisub
xchg
mov
pop
or
xchg
mov
fldenv
(bad)
and
or
sbb
push
es
and
inc
shl
inc
imul
bound
dec
push
cmp
xchg
daa
(bad)
add
cmc
repz
cmp
(bad)
je
push
dec
ins
test
pop
jl
add
int3
adc
pop
push
jb
push
repnz
add
add
xchg
add
push
adc
pusha
ret
inc
xchg
pusha
dec
inc
arpl
in
xor
hlt
imul
add
inc
jbe
sub
stc
jo
pushw
in
shr
fldz
test
sub
inc
cmp
jbe
sub
add
xor
jbe
push
pop
stos
cmp
pop
mov
and
out
sub
adc
lahf
cmp
xor
dec
das
and
shr
pop
dec
in
push
mov
mov
or
fistp
sbb
and
and
data16
test
pop
xor
popf
ror
mov
lea
xor
push
pop
push
int
or
aad
mov
neg
idiv
mov
jno
xor
in
cmp
shl
jmp
pop
sbb
into
aam
mov
mov
add
dec
sbb
inc
ins
aad
or
clc
mov
in
adc
mov
add
adc
(bad)
xor
mov
(bad)
xor
push
mov
or
sub
inc
jne
push
or
jge
and
cmp
or
ss
aam
and
add
push
push
hlt
jnp
sub
ja
inc
aam
add
aad
add
mov
int3
xor
push
(bad)
adc
mov
sub
jg
outs
and
jl
iret
jle
test
fst
aaa
pop
mov
jmp
push
add
ficomp
rol
add
aad
sub
add
repnz
add
jge
add
sti
jbe
pop
and
cmc
mov
jmp
add
sub
and
in
and
shl
jb
rol
in
fldcw
outs
sub
jbe
mov
int
cmp
xor
mov
test
jge
out
add
xchg
sub
xor
loopne
push
inc
xor
dec
mov
pop
dec
mov
es
jecxz
lock
test
icebp
push
push
xchg
js
push
adc
outs
mov
dec
inc
mov
dec
inc
sub
xchg
ficomp
push
lea
cmp
or
fidiv
lock
fstp
jle
mov
mov
add
mov
jge
fld
add
adc
lods
adc
out
add
add
ror
push
inc
pop
imul
cmp
inc
add
add
mov
add
sub
js
sub
push
add
stc
sbb
mov
imul
add
jl
and
pop
sbb
pop
and
or
mov
fcmovu
or
jmp
jnp
fiadd
push
enter
imul
test
out
sub
adc
add
dec
sub
mov
cmp
clc
retf
mov
ret
jae
lds
push
fsub
bound
ss
or
jge
mov
test
out
imul
adc
sub
shl
mov
sub
clc
inc
fild
imul
dec
jmp
push
stos
inc
xor
jne
cmp
jmp
dec
hlt
mov
sub
mov
mov
or
lods
hlt
xchg
jge
push
sub
ret
push
sbb
rcr
add
adc
mov
pop
mov
xchg
or
pop
dec
or
loopne
pusha
push
mov
popa
sub
jae
(bad)
ja
add
shr
add
lea
sub
fcmovb
pop
test
(bad)
add
sub
imul
add
shr
test
jne
or
pop
call
(bad)
or
mov
sub
sub
lods
(bad)
pop
(bad)
cmp
jle
xor
popa
jo
add
repz
js
ins
ins
sub
pop
sub
repnz
cmp
jb
sbb
(bad)
pop
adc
or
lock
or
inc
imul
popa
push
sub
mov
les
ror
push
fcmove
test
icebp
aam
call
rcl
pop
pop
pusha
mov
(bad)
std
shl
jae
in
mov
mov
add
or
dec
mov
int
sar
or
xchg
popa
and
or
jmp
shl
lods
je
les
(bad)
jb
or
shl
ja
mov
ror
rol
push
cli
add
imul
inc
xor
icebp
add
mov
xchg
loopne
jle
pop
pop
cmp
mov
icebp
icebp
add
add
lds
mov
adc
and
les
pop
js
push
pop
mov
not
and
in
clc
and
or
iret
test
lea
mov
rol
add
lds
and
pop
dec
lea
rol
sub
mov
outs
push
mov
and
or
add
jge
cmp
jo
inc
xlat
(bad)
and
iret
lsl
inc
sbb
or
push
test
cmp
adc
into
mov
pop
enter
xlat
and
inc
push
adc
mov
(bad)
cmc
jbe
stc
neg
sub
sti
add
js
pop
sub
xchg
cmp
rol
pop
dec
and
jns
jbe
out
adc
test
add
lea
mov
or
leave
add
jl
pop
and
xchg
inc
std
jns
aaa
and
pop
sub
inc
not
and
mov
test
fcomp
xchg
out
ins
loopne
mov
test
mov
xchg
in
jg
pop
push
test
pop
mov
shl
sub
sbb
pop
lods
int
scas
cli
mov
add
cld
xchg
add
cmc
and
nop
imul
xor
lods
and
xchg
jno
std
(bad)
mov
call
pop
cmp
jo
fsubr
clc
fisttp
mov
cmp
lock
and
mov
scas
out
daa
mov
fiadd
add
and
inc
pop
mov
mov
imul
sbb
and
add
add
pop
test
hlt
fistp
jge
sub
cmp
pop
es
mov
mov
adc
in
mov
(bad)
out
cld
sub
fsubr
je
enter
test
rol
sahf
in
(bad)
sub
inc
add
cld
std
in
adc
add
and
sbb
inc
xchg
mov
pop
enter
mov
popf
stc
leave
and
int
and
cli
add
cmp
pop
aaa
ret
leave
adc
xchg
or
or
mov
stc
in
adc
inc
jns
jle
sub
jecxz
cli
rcr
xchg
jno
sub
std
ss
cmp
sbb
add
outs
scas
cdq
inc
xor
xchg
xlat
mov
adc
sub
xor
addr16
sar
inc
and
or
cli
push
add
cli
leave
xlat
mov
jp
xor
iret
into
ss
xor
les
popa
test
popa
jle
xor
cmp
fld
je
jae
or
in
mov
fstp
pop
or
xor
cli
add
cmc
inc
addr16
out
jmp
into
dec
into
mov
adc
test
ins
in
div
xor
stc
retf
jb
pusha
dec
mov
and
jo
mov
cwde
fldcw
pop
aam
outs
dec
imul
(bad)
jle
pop
cmp
mov
and
cli
daa
mov
cmp
test
out
aam
sbb
cmp
add
cmp
mov
(bad)
inc
aas
jecxz
jno
xor
cdq
(bad)
lods
sub
dec
fsubr
mov
jbe
jno
add
jl
pop
rol
(bad)
sbb
cli
mov
fs
lods
les
aaa
ins
lods
cmc
std
xchg
sbb
mov
pop
out
sbb
rol
fcom
fnstenv
fcmovb
mov
push
mov
xchg
jmp
inc
pop
or
aaa
pop
mov
sti
inc
loopne
cmps
and
repnz
fstp
enter
xchg
cld
or
ficomp
ret
pop
pop
gs
push
xor
xchg
int3
or
ror
sbb
call
call
rcr
test
mov
jle
outs
sbb
out
(bad)
fsub
fst
mov
or
and
xchg
cmp
les
dec
ficom
cmp
repnz
adc
rcl
outs
xchg
rol
outs
pusha
and
add
repnz
addr16
or
stos
int
stos
mov
fdivr
xor
add
or
rcr
dec
fdivr
out
out
mov
jp
retf
ins
sbb
call
dec
test
inc
rcl
add
jle
lds
add
xchg
aaa
sbb
and
push
or
stc
inc
jl
mov
mov
inc
mov
es
sti
push
sbb
sti
jbe
rol
add
pop
inc
dec
jne
test
add
mov
jmp
cli
add
mov
loope
add
push
rcl
adc
jl
inc
call
push
shr
push
pop
sub
std
inc
hlt
add
aam
xor
stc
xor
and
push
or
jne
push
xchg
or
out
or
lods
iret
dec
adc
lock
and
or
je
lock
push
aam
push
les
ret
mov
jl
jnp
push
push
jge
push
pop
out
pop
cmp
add
or
or
add
mov
fisub
add
lods
outs
sub
ds
loope
iret
sub
or
addr16
(bad)
pop
push
push
mov
ins
mov
aas
and
or
adc
jnp
add
shr
iret
sbb
ja
or
jnp
cmp
or
push
mov
call
mul
add
adc
mov
mov
inc
or
jmp
inc
mov
mov
add
adc
adc
pop
jnp
inc
push
shl
adc
push
lods
adc
pop
add
retf
loop
outs
and
sbb
and
ror
(bad)
out
push
jbe
loopne
xor
push
imul
inc
push
call
adc
and
inc
ds
or
xchg
sub
add
adc
mov
pop
or
and
data16
add
movs
test
mov
or
inc
cmp
je
jmp
cmp
jne
into
(bad)
sti
int
not
mov
je
mov
adc
mov
inc
xor
addr16
push
xor
xor
push
mov
ss
sti
in
inc
shl
mov
ja
add
or
mov
and
adc
mov
jo
mov
mov
inc
dec
sub
sbb
push
inc
cld
js
and
icebp
pop
mov
push
ret
js
js
cmp
add
sbb
or
pop
pop
popa
jl
sub
xchg
and
xchg
xchg
sub
mov
push
pop
cmp
cmp
shl
cmp
mov
in
dec
je
dec
cmp
mov
cs
adc
ret
xor
push
mov
mov
push
pushf
shl
cmp
dec
imul
inc
int3
(bad)
sub
rol
pusha
jo
push
pop
mov
jbe
aaa
lea
cmp
icebp
mov
push
pop
ds
jge
jmp
rcl
sbb
cmp
mov
mov
adc
xlat
adc
cmp
pushf
ds
mov
push
or
mov
pop
add
push
cmp
xor
mov
leave
or
or
and
mov
inc
and
cmp
sbb
mov
cmp
sahf
or
xchg
xor
jmp
sub
mov
cmp
adc
mov
(bad)
in
bound
mov
mov
or
xor
bnd
call
cmp
jne
dec
jns
or
cs
jne
inc
sbb
sub
sbb
dec
xor
cmp
jne
jge
test
bound
out
or
popf
shr
cmp
adc
js
xor
push
(bad)
fdivrp
div
jmp
push
jle
mov
sbb
test
jg
jmp
dec
jmp
and
jnp
mov
ins
out
mov
outs
icebp
sbb
pop
mov
ret
mov
and
pop
xchg
mov
sub
fcmovnb
sti
cld
pop
iret
jle
push
add
fadd
jle
mov
(bad)
pusha
cmp
push
sub
lea
adc
sbb
jle
push
xor
pop
lea
sub
in
sbb
mov
sub
inc
outs
adc
and
add
cmp
(bad)
mov
push
jo
sub
adc
enter
movs
leave
inc
das
pop
(bad)
cmp
xchg
push
push
cmp
popf
ins
pop
rcr
inc
or
call
sbb
ss
sbb
xchg
mov
jo
jbe
inc
in
sub
int3
push
pop
jae
sbb
xor
ret
cdq
mov
jle
push
mov
rcl
adc
ret
push
aam
jge
dec
(bad)
int
push
lea
bound
sub
sub
shl
or
aad
sub
sub
or
sbb
adc
in
add
or
add
xor
inc
ja
mov
push
push
push
push
ror
sbb
cmc
push
or
mov
pop
call
mov
push
add
cmp
ret
in
jmp
or
or
(bad)
jp
arpl
dec
xor
xor
lea
xor
icebp
inc
jmp
jo
mov
cs
cs
pop
inc
loopne
mov
adc
loopne
test
add
pop
or
mov
data16
enter
inc
inc
jo
adc
dec
je
sub
cmp
adc
loop
(bad)
push
push
data16
icebp
sbb
mov
and
dec
add
int3
pop
sbb
pop
add
sbb
inc
sbb
push
push
cmp
mov
(bad)
mov
and
mov
push
enter
clc
inc
lds
dec
leave
call
adc
dec
mov
mov
inc
push
inc
fdiv
cs
mov
mov
or
pop
pop
xchg
sbb
dec
push
mov
add
adc
xchg
add
out
jno
adc
in
mov
adc
sub
xchg
xor
cdq
lods
cmp
mov
fld
push
xor
and
paddusb
or
daa
outs
mov
adc
jb
cld
push
cmp
loopne
mov
popf
and
out
and
mov
xchg
inc
retf
inc
js
mov
dec
inc
mov
inc
mov
or
xlat
pop
ficom
add
push
repnz
ss
sbb
inc
cmps
and
std
push
sahf
loop
fs
inc
call
das
push
adc
and
fxch
mov
cld
dec
mov
adc
add
fadd
jge
mov
cli
jae
inc
test
cld
cli
push
adc
mov
or
push
and
add
push
add
test
aad
aam
sbb
aam
adc
push
add
ins
or
xchg
xor
push
push
mov
js
push
dec
lock
adc
xor
push
push
movs
hlt
mov
pusha
dec
and
or
lds
jnp
mov
mov
mov
in
xor
hlt
cwde
in
sub
mov
(bad)
jg
mov
stos
mov
jmp
push
cwde
mov
push
cmp
cmps
hlt
mov
mov
shr
mov
mov
lods
int3
mov
fnstcw
mov
out
mov
add
push
cmp
dec
jmp
rcr
rcl
xor
icebp
or
push
inc
inc
fmul
dec
jmp
and
rcr
(bad)
mov
int
adc
mov
mov
add
pop
cmp
cmps
jmp
ins
push
add
cdq
pop
in
sbb
iret
add
or
or
cmp
enterw
aaa
add
or
call
js
ds
add
mov
inc
sub
mov
cmps
cmp
mov
jmp
or
xlat
test
or
or
jne
test
push
add
enter
cmp
sbb
cmp
dec
hlt
xor
jge
jmp
cmp
ret
jp
arpl
mov
(bad)
div
imul
adc
and
xor
mov
punpckldq
pusha
mov
cmp
inc
or
adc
inc
and
add
aam
inc
in
ret
sbb
add
jae
in
rcl
pop
or
or
xor
xor
dec
xor
stos
call
cmc
or
shl
(bad)
inc
les
push
mov
or
in
gs
xor
pushf
sbb
hlt
cld
cld
inc
mov
test
arpl
inc
adc
push
enter
mov
xor
popf
sbb
into
add
in
adc
adc
icebp
and
adc
test
dec
shr
add
push
jge
inc
in
mov
inc
ss
mov
pop
ret
nop
cld
pusha
mov
and
in
mov
mov
call
in
inc
jbe
out
jae
pop
loop
push
ins
or
ins
pop
int
inc
data16
push
push
fisubr
mov
pop
lods
mov
jnp
or
nop
and
pop
mul
or
add
or
add
or
int
and
push
arpl
jae
ja
test
add
xlat
add
js
push
call
adc
add
dec
mov
push
sub
fwait
push
es
mov
jb
adc
add
cmp
call
scas
popa
push
lea
jg
lea
adc
mov
jnp
push
leave
xchg
cmc
or
and
mov
push
dec
push
jne
add
stos
adc
sub
jmp
pop
(bad)
cmp
add
jmp
jmp
pop
dec
ret
fadd
pop
cmc
je
sub
repz
call
mov
inc
mov
dec
(bad)
shl
call
out
jmp
push
pop
adc
pusha
lock
add
jmp
push
and
in
dec
dec
mov
hlt
add
nop
das
je
push
jne
and
pop
jmp
add
cwde
xlat
lds
xor
dec
fdivp
mov
push
add
add
inc
mov
jp
push
(bad)
cmp
cwde
movs
or
retf
fadd
in
sub
ins
mov
loopne
mov
add
cmps
adc
xchg
push
call
mov
dec
test
lea
mov
mov
out
cmp
sub
push
push
push
test
mov
ins
inc
mov
mov
popf
in
sub
call
rcr
cli
or
or
mov
push
pushf
mov
cmp
leave
jo
push
ss
sbb
adc
add
clc
cmp
adc
cmp
xor
and
lods
popa
fadd
lods
add
sub
sub
jnp
sbb
dec
push
push
bnd
inc
scas
mov
xor
xor
add
out
cmp
jge
jp
cdq
ficom
jae
pop
int
pop
outs
mov
sub
mov
pushw
inc
sbb
leave
(bad)
rol
stos
rol
adc
mov
xchg
pop
test
or
jnp
ret
add
ins
sub
fwait
lods
sar
pop
ret
push
xor
xchg
and
(bad)
add
mov
sub
sub
dec
fist
push
push
je
mov
dec
add
mov
or
mov
add
inc
jo
mov
cld
cmc
jmp
cmp
push
pop
inc
pop
call
retf
inc
pop
jp
cmp
sbb
scas
or
add
sbb
add
(bad)
fmul
ds
movs
add
enter
mov
mov
enter
xor
shl
es
call
pop
mov
retf
mov
rcl
fcomp
loopne
loopne
ret
fdivr
adc
or
fbld
rcl
add
les
out
dec
dec
adc
scas
jno
pop
xor
inc
sbb
pop
std
xor
loopne
fs
push
call
in
add
pop
inc
lahf
and
je
sbb
push
into
jnp
mov
sub
xchg
and
inc
add
add
pop
sti
inc
xor
push
call
arpl
or
popa
jmp
jg
jmp
lea
bound
push
repz
xor
ja
inc
xor
adc
add
xchg
inc
dec
call
xlat
jbe
inc
call
dec
stos
in
pop
sub
add
test
or
inc
pop
pop
ret
mov
mov
and
jmp
arpl
fld
add
push
sub
mov
mov
or
mov
xchg
sub
sbb
ret
xchg
xor
loop
push
add
cmps
jae
aad
aad
ret
or
fcmovu
and
icebp
test
leave
xchg
mov
or
or
or
push
arpl
hlt
hlt
inc
out
mov
int
hlt
sub
hlt
hlt
lock
adc
ins
or
mov
hlt
hlt
or
dec
add
mov
rol
popa
inc
cli
and
mov
dec
sbb
repnz
retf
inc
sbb
sub
jno
xchg
and
or
dec
mov
adc
add
sbb
js
xor
jmp
mov
push
cdq
imul
mov
push
mov
adc
push
scas
cdq
pop
frstpm(287
sub
cmp
inc
add
hlt
sbb
and
cmp
add
pop
or
push
or
arpl
jo
push
out
test
dec
loopne
inc
jecxz
sahf
push
jne
pop
mov
js
sbb
push
or
test
sti
repnz
or
inc
mov
pop
push
adc
mov
movs
jecxz
lock
push
(bad)
hlt
or
inc
add
jecxz
add
test
inc
lods
loope
loop
(bad)
xor
sub
std
cld
jmp
and
cld
cld
sbb
jmp
pop
lea
adc
shl
out
adc
out
add
xor
add
adc
lahf
clc
cmps
ja
mov
sti
fwait
push
cs
add
(bad)
fild
outs
enter
or
dec
adc
cs
mov
or
enter
dec
dec
adc
fiadd
mov
xor
test
cmp
push
sbb
push
ret
out
(bad)
lds
or
call
stc
sub
enter
add
je
cmp
push
les
mov
retf
cmp
out
sbb
out
xchg
cmp
adc
xchg
cli
pop
leave
dec
and
jmp
mov
mov
mov
push
jge
(bad)
ja
lea
dec
xor
je
mov
stc
cmp
int
sub
or
add
pop
and
test
mov
dec
push
mov
inc
pusha
adc
xor
add
push
lods
pop
ficomp
xor
or
pop
stc
or
cld
push
or
ret
int3
add
fadd
or
push
fadd
rcr
sub
das
sbb
sub
movs
adc
mov
shl
mov
mov
push
jo
je
or
jbe
jmp
jne
add
sub
popw
add
shl
loopne
pop
(bad)
out
(bad)
mov
push
adc
or
push
jle
pop
add
mov
lock
and
ja
shl
sbb
or
push
or
push
lock
push
sbb
mov
mov
or
call
shl
add
push
or
inc
or
mov
in
jge
mov
jne
sub
jbe
call
test
pop
sbb
in
mov
rcr
pop
push
jmp
in
es
xor
bound
push
mov
push
not
daa
mov
aaa
pushf
and
pop
rol
loop
shr
or
shr
shr
sbb
out
mov
jbe
call
clc
and
push
and
fsubr
shr
push
lods
and
movs
clc
rcr
pop
xchg
(bad)
sbb
add
shl
outs
imul
aaa
xor
and
call
fist
mov
sbb
push
movs
and
adc
adc
mov
push
call
push
jp
jp
std
add
sbb
shl
sub
or
push
call
sbb
cld
(bad)
cli
(bad)
sub
push
jne
xor
push
je
jbe
lock
jbe
pop
mov
mov
dec
js
mov
or
cmp
push
pusha
push
jnp
sub
add
push
in
lods
pop
or
push
xchg
jno
stos
push
movs
popa
pop
sub
push
jb
jmp
mov
aad
sbb
cmp
lods
xchg
jb
fistp
or
(bad)
neg
out
add
inc
shr
sbb
test
test
push
add
imul
das
adc
outs
outs
sbb
cmp
xlat
jae
hlt
sub
adc
movs
jne
ret
ins
add
jmp
dec
mov
push
mov
cmp
fs
arpl
ins
add
push
and
cli
cmp
sub
into
inc
pop
add
gs
add
ins
push
stos
inc
rcl
add
inc
aam
cld
pop
dec
fsubr
jae
rcr
data16
in
sub
push
add
push
cmps
inc
dec
adc
bound
cmp
popf
add
mov
pop
mov
ins
ret
cmp
in
add
shl
(bad)
jb
icebp
arpl
cmp
add
adc
or
aam
add
push
add
or
in
ja
pop
adc
test
das
cmp
out
test
adc
dec
sub
pusha
pop
scas
xor
loop
sbb
cwde
test
popf
adc
or
jbe
add
adc
and
dec
add
xor
loope
lds
retf
ins
or
and
sbb
in
push
adc
add
xchg
lods
fsub
hlt
jae
ins
cmp
jbe
jo
addr16
fwait
xor
test
mov
mov
add
xchg
dec
mov
sbb
nop
inc
outs
ds
push
xor
dec
cdq
in
mov
hlt
xchg
xor
sbb
call
push
mov
(bad)
clc
into
js
int
aam
or
(bad)
mov
into
dec
scas
push
sub
test
or
inc
cmp
loope
dec
clc
fstp
or
mov
adc
int
jmp
sub
loopne
dec
or
add
and
retf
pop
jge
pop
in
popa
loop
pop
imul
mov
(bad)
mov
pusha
mov
add
pusha
and
pop
aam
mov
inc
jno
popa
inc
les
push
xchg
and
jnp
cmps
pusha
out
and
dec
pop
mov
sub
dec
rcr
adc
lahf
ins
add
adc
pop
mov
aam
pop
sub
cld
pop
adc
mov
push
pop
sbb
push
enter
mov
adc
outs
mov
loop
in
fldl2e
outs
or
or
cs
jle
add
and
cmc
or
lock
outs
outs
and
sub
adc
sub
adc
mov
bound
add
ins
icebp
outs
add
inc
sbb
ds
jne
rcr
push
movs
js
sub
movs
invd
dec
fild
mov
sub
xor
in
or
adc
arpl
pop
xchg
into
adc
fwait
push
mov
dec
jne
push
cmps
inc
test
ret
xchg
or
stc
inc
sbb
add
mov
inc
nop
outs
xchg
pop
mov
inc
lods
pop
(bad)
and
dec
enter
(bad)
sbb
xchg
fiadd
out
cmp
adc
sub
cmp
dec
lea
xor
loopne
fst
cmp
std
xchg
dec
retf
jne
xor
ss
jl
add
jo
rcl
sub
xchg
mov
push
jg
add
jbe
imul
inc
xchg
dec
sub
sub
sbb
test
adc
xchg
sbb
xor
mov
adc
mov
mov
adc
add
cdq
cmp
fs
xor
mov
test
(bad)
sbb
xor
mov
lock
sar
cmp
push
cmp
jmp
add
(bad)
pop
test
xchg
xor
and
inc
jne
xor
jae
or
sbb
inc
inc
popa
mov
cmp
test
icebp
daa
push
mov
(bad)
lea
sbb
sub
mov
cwde
dec
(bad)
sub
test
push
sub
add
ja
sub
add
sub
add
pop
jl
mov
sub
or
and
mov
pop
(bad)
cmp
xor
and
adc
xor
fwait
cmp
jle
and
and
ror
rol
push
cs
add
jno
mov
push
nop
pop
pop
sbb
hlt
or
adc
xor
in
xor
xor
loope
je
inc
popa
add
add
xchg
xor
sub
pop
sahf
test
pop
push
fidiv
cmp
xor
sub
pop
test
sbb
test
add
or
cmp
mov
outs
test
sub
mov
mov
arpl
sub
int3
inc
jmp
sub
mov
sbb
push
pop
cmp
loopne
dec
xor
adc
pop
je
push
cwde
scas
pop
jbe
push
xchg
dec
xor
sbb
iret
ror
cmp
adc
jo
(bad)
mov
cmp
inc
adc
push
mov
sub
inc
stos
lods
push
and
(bad)
ins
popf
mov
inc
call
mov
sbb
sub
stc
sub
xchg
shl
loopne
shr
aam
pop
sbb
and
and
imul
xor
jae
in
shl
inc
mov
pop
ror
xchg
cmp
ins
icebp
cmp
or
call
dec
je
push
mov
cld
mov
or
adc
mov
inc
fst
sub
stos
or
mov
cmp
or
jb
push
mov
mov
into
sbb
inc
xchg
add
dec
fadd
inc
inc
inc
jns
sar
add
inc
pusha
int
test
je
(bad)
fs
xor
dec
push
(bad)
mov
mul
daa
jo
xchg
or
adc
les
scas
xor
cdq
xchg
inc
jecxz
ret
pop
mov
xchg
daa
or
and
rcl
repnz
mov
mov
mov
call
cmp
add
call
rcl
mov
in
sbb
fs
xor
xor
fwait
dec
int3
call
or
je
mov
sbb
xchg
pop
sbb
inc
ins
pop
mov
sub
enter
push
sub
sbb
fcom
add
pop
ins
pop
(bad)
push
aad
adc
js
scas
mov
aam
cmp
dec
in
aam
(bad)
mov
mov
pop
sbb
scas
mov
inc
adc
test
fdivr
into
aam
lea
les
xor
pop
push
iret
pushf
jge
push
leave
xchg
aad
mov
xor
stos
gs
in
jne
fldcw
int3
xlat
or
ds
xchg
hlt
je
pop
jno
or
add
sar
mov
loopne
dec
jb
loopne
jge
retf
jge
movs
popa
push
sbb
(bad)
popa
nop
add
ins
adc
push
dec
into
xor
das
sbb
mov
or
and
push
in
jae
push
movs
scas
not
mov
or
loop
jo
sbb
inc
fsub
add
sub
retf
call
pop
lock
inc
jl
clc
sbb
retf
inc
dec
pop
adc
or
or
adc
fistp
mov
ret
fcomp
jne
imul
xor
dec
xor
(bad)
sbb
retf
fmulp
dec
lea
test
cld
mov
mov
mov
adc
adc
push
inc
or
fisttp
shl
shr
or
push
pop
adc
ss
xor
jo
ret
nop
add
jne
enter
mov
ror
cmp
adc
add
mov
push
add
and
or
and
pop
add
je
inc
inc
inc
lods
fsubr
mov
(bad)
push
inc
push
stos
mov
pusha
jg
adc
fldenv
mov
sbb
repnz
inc
jns
xor
inc
cmp
pop
sbb
push
inc
fs
push
lods
inc
out
fmul
shr
mov
pop
add
mov
imul
and
sub
dec
aaa
sub
sub
sub
aad
pop
or
(bad)
stos
imul
mov
pop
call
repnz
xor
pop
inc
add
xchg
xchg
push
sub
daa
xor
cmps
(bad)
cmp
add
adc
push
xchg
sub
and
adc
out
jmp
push
mov
fbstp
jle
dec
cmp
and
xchg
lds
jne
push
mov
inc
cwde
fcomp
xchg
jmp
(bad)
cmp
sub
sbb
and
and
imul
sub
adc
retf
mov
cmc
mov
js
sbb
aam
adc
add
jmp
fsub
shl
(bad)
stc
(bad)
pop
test
add
or
popa
jl
push
push
xchg
add
push
xor
pop
and
and
(bad)
(bad)
and
xor
dec
inc
mov
xchg
mov
aad
add
fstp
adc
sti
mov
imul
in
ds
adc
xchg
add
add
rol
mov
adc
call
push
popf
or
adc
mov
pop
stos
fnstenv
scas
out
or
cmps
dec
add
in
sbb
cs
ret
sbb
out
test
cwd
or
mov
cmp
push
sub
aad
pop
out
jne
mov
jnp
inc
push
les
xor
daa
mov
adc
mov
call
lea
or
rol
pop
or
or
sub
les
scas
or
pop
movs
scas
push
lock
rcl
mov
test
cmps
adc
adc
jp
mov
or
(bad)
scas
pop
mov
lea
sub
jmp
mov
popa
pop
push
cwde
pop
test
and
and
test
dec
jne
inc
add
dec
jne
pop
adc
pop
sub
popa
mov
test
mov
cld
dec
sub
js
jnp
dec
movs
mov
in
push
sub
or
inc
push
fldenv
jns
std
add
or
adc
dec
push
add
xlat
fadd
fs
jbe
adc
jmp
xchg
or
scas
in
sbb
leave
mov
push
sbb
sbb
sbb
repnz
xchg
sbb
or
inc
jb
inc
lahf
mov
daa
jnp
xchg
add
adc
or
dec
mov
inc
data16
push
adc
add
inc
sbb
or
data16
std
pop
cmp
inc
jno
push
ror
push
mov
sbb
and
pop
lock
mov
and
adc
adc
mov
jl
imul
fsubrp
adc
sbb
pop
sbb
pop
sbb
or
shl
push
push
jb
add
jo
popa
adc
scas
mov
std
adc
sub
cdq
js
rol
push
mov
or
dec
jl
add
add
sbb
adc
inc
mov
and
icebp
inc
push
test
and
sub
lock
stos
pop
imul
iret
fadd
jnp
push
xor
imul
fcmovnb
inc
sub
sub
adc
sti
dec
push
mov
adc
adc
test
and
mov
test
jo
shr
gs
jne
cwde
mov
push
xor
mov
push
inc
mov
adc
sbb
fdiv
adc
and
adc
xor
or
push
inc
movs
loop
sbb
loopne
test
fldcw
or
data16
jo
lods
or
adc
addr16
push
cmp
or
and
sbb
pop
sbb
test
pop
sbb
cmp
adc
sbb
or
imul
cmp
popa
or
mov
out
cdq
sbb
xchg
jmp
or
xor
pop
lds
push
pop
movs
jge
rep
adc
cs
shl
movs
sub
and
scas
jmp
mov
stos
enter
push
rcr
inc
shr
ins
call
rol
mov
movs
pop
dec
add
ret
pusha
push
adc
add
add
mov
inc
or
mov
ror
loop
xor
xor
pop
clc
jl
xor
mov
loop
adc
fild
add
daa
retf
test
jl
les
add
shl
xor
or
arpl
fdivr
rol
xor
add
xor
out
xor
out
test
push
aaa
jle
inc
mov
jae
xchg
sbb
and
neg
sbb
mov
(bad)
mov
rol
mov
mov
add
push
jmp
cmp
or
dec
inc
outs
or
or
es
xchg
add
shr
cmp
ret
cmps
add
div
adc
xor
dec
stos
xor
iret
clc
clc
and
sbb
enter
push
add
mov
(bad)
fnsetpm(287
ss
das
or
fxtract
or
test
in
int3
sub
fcmovnbe
cmp
push
es
mov
dec
sub
pcmpgtb
pop
push
inc
mov
ins
adc
push
and
inc
and
mov
mov
add
pop
or
outs
dec
fsubr
or
retf
add
mov
cld
add
cmp
mov
xchg
add
sub
xor
add
shl
mov
push
int3
(bad)
or
or
adc
mov
or
sbb
popf
xor
lods
aam
add
jg
inc
mov
retf
mov
inc
mov
inc
mov
adc
mov
or
xchg
fwait
cmp
sbb
mov
outs
xchg
int
loope
mov
clc
ss
or
std
cmp
xor
sub
xchg
shl
mov
mov
cs
xor
mov
dec
and
mov
jne
sub
sysret
fcomp
pusha
imul
fisub
cmp
int3
jle
sub
cmp
push
jne
stos
xchg
repnz
fcomp
sti
xor
out
cmp
pusha
push
sbb
test
imul
cmp
in
ds
pop
pusha
cmp
sbb
cmc
and
aaa
cmp
jo
stos
pop
jecxz
xchg
add
jb
or
jle
ss
mov
add
mov
loop
(bad)
adc
cmp
imul
add
pop
or
mov
add
iret
sar
clc
or
or
or
push
in
or
dec
sub
adc
clc
inc
lds
sahf
jno
cld
cmps
mov
sar
xor
movs
pop
aam
cmp
sbb
out
adc
into
mov
jbe
xor
outs
arpl
dec
stos
adc
sub
or
dec
in
or
mov
out
or
(bad)
call
ins
iret
ror
aaa
inc
xor
xor
cmp
call
or
das
arpl
aas
jne
mov
popf
clc
ds
xor
mov
push
call
dec
xor
pop
adc
out
sub
(bad)
xor
fidivr
jae
(bad)
pop
or
ficom
jbe
int3
in
sub
daa
sub
sub
ss
pop
or
jne
pop
mov
inc
sbb
call
(bad)
hlt
inc
inc
into
pop
in
sub
mov
mov
fnstcw
cmps
idiv
mov
movs
cmp
cmp
sub
iret
outs
jge
or
mov
pop
mov
and
xor
sahf
and
in
xor
cli
jmp
movntq
inc
jmp
aaa
jae
js
adc
jmp
in
pop
rcr
out
and
push
jmp
jl
lock
test
je
(bad)
sbb
push
rol
and
cld
aas
out
adc
push
cld
in
inc
inc
push
ret
loopne
mov
ret
cmps
int3
and
in
xchg
leave
xor
mov
ret
out
jmp
(bad)
leave
pusha
dec
and
fdiv
ret
add
add
xlat
ret
ror
adc
inc
test
xchg
sub
int3
retf
inc
mov
xchg
mov
dec
mov
or
dec
mov
cdq
and
movs
add
or
daa
inc
add
push
xor
inc
xlat
or
fisub
aaa
sbb
icebp
or
pop
pop
enter
dec
pop
call
mov
ins
sub
inc
adc
fdivr
push
mov
ror
and
xor
popa
(bad)
dec
gs
inc
push
xchg
into
or
pop
addr16
cmp
dec
push
shl
adc
add
nop
and
ret
xchg
rol
retf
jns
rcr
jb
repnz
call
ss
retf
in
cs
mov
pop
xchg
repz
mov
mov
pop
add
add
or
or
ret
add
or
inc
sbb
or
adc
rol
or
dec
xor
adc
dec
test
jb
and
xor
and
sbb
repnz
cmp
fnstcw
das
dec
bound
test
xor
popa
fwait
into
and
sysret
fwait
cdq
mov
push
hlt
sub
in
and
sbb
push
retf
pop
mov
or
or
pop
imul
push
dec
add
gs
mov
jp
add
ins
mov
and
xlat
js
or
adc
or
lea
or
ror
sti
or
pop
or
push
adc
mov
test
mov
push
push
xchg
mov
(bad)
ins
(bad)
jno
adc
inc
outs
pusha
loopne
lods
sbb
inc
adc
xor
jbe
xor
imul
ret
sub
je
push
cmp
push
(bad)
pop
adc
or
mov
inc
jno
sub
inc
in
fmul
fsubr
loopne
or
add
sub
fistp
add
or
cld
or
cmc
or
sbb
scas
lock
ret
movs
loop
aaa
push
(bad)
adc
jp
jne
aam
cmp
test
loopne
push
fcmovu
or
sub
and
pop
mov
pusha
adc
jmp
or
mov
add
mov
pop
mov
dec
je
xor
in
sbb
sar
adc
jle
adc
add
xchg
xor
xor
sub
out
and
frstor
mov
(bad)
and
jo
ins
out
int
pop
ror
mov
add
jns
pop
or
dec
nop
cmp
ror
sbb
push
std
cmp
(bad)
jg
add
(bad)
retf
cmp
mov
xchg
cmp
jne
test
ds
dec
cwde
sub
lods
dec
fld
and
cdq
in
mov
mov
aaa
sub
or
dec
cld
add
ror
jns
out
movs
xchg
and
xchg
dec
mov
pop
xor
cmp
add
fs
jge
dec
jp
in
or
jae
push
cdq
nop
inc
ins
add
loope
adc
pop
mov
sbb
pusha
rol
fld
jns
add
out
outs
or
xchg
xchg
out
out
add
pop
push
push
push
adc
(bad)
sbb
pop
mov
push
fs
add
in
inc
or
je
es
arpl
leave
daa
dec
cli
std
or
push
into
leave
sbb
jmp
sbb
dec
adc
dec
(bad)
xchg
adc
ud0
dec
cmp
or
sub
xor
je
or
out
and
je
mov
or
jle
out
inc
and
ss
mov
xor
cmps
je
sub
mov
mov
inc
jne
inc
cmp
rcr
cwde
aaa
jbe
sub
sub
ja
cmps
mov
mov
pop
movaps
adc
sbb
cmp
out
push
ins
fcomp
xor
sub
jne
dec
adc
pop
jo
enter
add
outs
outs
(bad)
(bad)
jg
or
dec
popa
je
xor
outs
jo
imul
popa
jae
ins
bound
jecxz
jns
arpl
and
imul
ss
pop
std
in
in
jg
imul
push
popa
outs
je
push
pushf
pop
mov
xor
xlat
(bad)
push
popf
or
les
shl
pop
adc
popf
adc
hlt
scas
push
mov
mov
ins
jmp
push
add
sbb
add
sub
mov
mov
jl
add
jmp
dec
dec
or
jb
pop
mov
sub
push
inc
mov
nop
jb
sti
add
mov
out
ins
lea
and
mov
mov
add
inc
sub
sbb
jg
pop
mov
jb
xor
sub
mov
aas
add
data16
pop
cmp
and
inc
mov
mov
sbb
retf
dec
cmp
jbe
jg
add
mov
mov
fld
or
add
mov
add
jne
mov
dec
inc
add
add
mov
cmp
and
xor
jg
jg
cli
xor
add
sbb
xor
or
jp
add
add
imul
pop
imul
add
sub
adc
sub
and
cmp
sbb
rcr
jmp
jnp
adc
stos
mov
fsubrp
scas
fxam
xchg
mov
and
mov
fld
cwde
jnp
ror
xor
in
popa
sbb
fdivr
and
jecxz
inc
or
cmp
add
(bad)
adc
imul
ins
or
and
jb
ins
and
outs
outs
xor
push
and
cs
aaa
idiv
mov
cmp
add
movs
lea
inc
cmp
fnstenv
je
xor
imul
push
inc
push
inc
outs
(bad)
jae
outs
add
imul
ins
push
or
jae
mov
ret
ds
sbb
je
mov
fnstenv
pop
adc
inc
jae
fcomp
jb
popa
arpl
repnz
cmps
imul
cmps
imul
imul
imul
cmps
imul
imul
loope
imul
cmp
sbb
ret
push
cmc
add
sub
mov
push
xchg
cmps
sub
mov
mov
cld
pop
cmp
pop
or
jmp
cmp
xchg
imul
popf
or
dec
push
iret
or
dec
pop
andps
loopne
mov
or
jno
sub
xor
in
mov
(bad)
outs
add
sub
cmp
dec
cmp
mov
add
inc
mov
add
rep
and
inc
push
rep
lea
jo
sbb
(bad)
aaa
fild
outs
mov
push
inc
pop
or
inc
mov
stos
cmp
cmp
fisttp
mov
mov
push
push
push
push
pushf
mov
push
add
pop
xor
je
cmp
mov
mov
cmp
cmp
mov
lock
cmp
sub
adc
clc
push
jne
test
push
daa
add
adc
or
jmp
mov
cmp
ja
pop
lods
mov
sbb
jmp
mov
sub
shr
test
pop
stos
cmp
mov
js
shl
pop
(bad)
mov
aaa
inc
xchg
mov
test
inc
popa
push
retf
jae
mov
push
mov
mov
push
sub
and
push
mov
sbb
jmp
or
xor
pop
ins
and
icebp
mov
mov
mov
test
adc
shr
imul
repnz
xchg
pop
mov
push
add
ret
push
cmps
stos
add
pop
rcr
fimul
jne
div
popa
xor
jae
sub
in
add
int3
pusha
loop
daa
test
lods
push
jg
mov
ss
ret
rol
repnz
or
mov
xor
fnstcw
adc
sub
retf
mov
stos
dec
(bad)
fst
in
pop
fistp
popf
mov
inc
rol
outs
lods
les
inc
sub
xor
push
pop
xor
mov
fisub
daa
and
rcr
std
out
fwait
mov
inc
sti
movd
mov
add
movq
push
ins
push
and
aaa
mov
jmp
mov
mov
std
stos
adc
cmc
add
pop
popa
ds
sbb
and
(bad)
pand
jle
jg
loop
das
mov
(bad)
jmp
out
leave
and
mov
pop
ss
mov
mov
and
inc
adc
jo
(bad)
shl
aad
(bad)
adc
rcl
jbe
xor
push
fnstenv
and
test
shl
push
xchg
lea
cmp
mov
pop
add
(bad)
pop
jnp
fimul
add
stc
sbb
and
ins
sub
daa
mov
repnz
cmp
mov
ror
and
shl
rcr
repz
or
dec
inc
aaa
sub
dec
mov
pushf
sub
das
sbb
sar
call
inc
mov
sbb
sti
(bad)
lea
or
or
or
rcr
jg
(bad)
adc
add
pmullw
leave
add
pushf
inc
das
test
adc
neg
mov
fstp
jmp
fnstsw
loope
fnstenv
cmp
jo
xchg
mov
cmc
ret
lds
add
pop
(bad)
jmp
add
xor
or
fsub
jmp
push
sub
mov
ficom
push
inc
test
pop
jo
sbb
jbe
mov
inc
cmc
sub
add
sti
test
(bad)
js
inc
mov
pop
loop
pop
pop
in
ret
int3
jmp
xor
je
xor
xor
add
xor
xor
or
adc
xor
xor
sbb
and
xor
xor
sub
xor
xor
xor
cmp
inc
dec
sub
add
mov
sub
xor
std
push
or
mov
aam
ret
call
adc
shld
and
sub
lea
iret
add
xor
mov
out
or
push
in
adc
sub
push
add
shl
mov
cmp
test
scas
push
ins
or
add
sub
lods
add
cli
int3
(bad)
mov
verr
inc
mov
pusha
pop
and
adc
mov
mov
mov
push
and
add
sbb
push
aad
lods
xchg
jbe
ins
mov
out
rcl
mov
add
xchg
cld
mov
jp
cmp
push
or
sub
dec
inc
inc
mov
push
pop
pusha
and
jmp
push
inc
xor
pop
inc
xor
push
test
sbb
test
gs
add
inc
sbb
sar
loope
lea
nop
mov
add
cmp
or
mov
or
js
and
sti
scas
out
lahf
sbb
ins
dec
into
ss
dec
or
or
sysenter
(bad)
jmp
cli
dec
sub
loope
pop
xor
(bad)
push
pop
pop
mov
add
leave
mov
inc
push
add
push
dec
push
mov
icebp
ins
das
cwde
out
jo
enter
push
mov
inc
rol
pop
cmp
push
or
sub
cli
scas
and
mov
mov
mov
icebp
mov
sbb
mov
enter
ds
loope
cs
add
test
mov
pop
sbb
sar
mov
call
push
outs
arpl
dec
push
dec
inc
pop
jnp
in
outs
(bad)
inc
cmp
inc
ss
sub
cmp
aaa
aaa
sub
pop
inc
xor
inc
aaa
inc
jge
dec
outs
jo
cmp
jb
add
(bad)
push
xor
inc
pop
push
xor
xor
inc
dec
mov
or
jg
add
ds
add
cmp
retf
out
in
in
cmp
mov
test
add
adc
pop
jbe
movs
adc
ins
or
pop
jns
nop
data16
push
mov
mov
aaa
push
add
add
fsubrp
mov
ins
mov
pop
xchg
mov
sbb
addr16
repnz
or
pop
dec
adc
or
mov
push
inc
push
and
repz
push
mov
inc
inc
inc
dec
inc
push
inc
inc
add
pop
inc
dec
dec
add
xor
and
or
push
enter
xor
dec
inc
(bad)
fcom
cs
push
push
inc
push
dec
push
inc
push
pop
pop
add
jbe
jle
dec
inc
inc
dec
add
push
and
inc
dec
push
sti
out
mov
inc
dec
(bad)
add
dec
dec
inc
dec
inc
push
inc
inc
xchg
outs
inc
jo
push
inc
arpl
push
pop
jmp
add
fsubr
ins
shl
mov
sub
cli
fisttp
add
lock
adc
mov
and
data16
popa
aad
push
push
xor
xor
xor
jo
jb
addr16
ja
xor
and
jb
and
ins
push
fimul
test
clc
add
test
or
or
jg
add
add
add
test
add
fistp
icebp
add
add
mov
add
jp
add
(bad)
ret
gs
sbb
adc
adc
ja
inc
adc
jle
or
pop
jg
cmp
add
add
add
(bad)
pop
and
add
ins
add
add
ss
inc
add
add
adc
sbb
and
xor
inc
add
jae
test
dec
shl
sbb
sbb
mov
pusha
jo
push
add
adc
jae
pop
or
xor
sar
or
pusha
and
imul
sbb
loopne
addps
nop
jge
cmp
js
imul
sub
cmps
mov
add
call
aas
sub
imul
addr16
nop
xor
aaa
cwde
add
push
jl
fmul
dec
shl
mov
shl
clc
add
shl
xor
dec
shl
add
inc
in
pop
sbb
xor
rcl
shl
mov
mov
dec
shl
hlt
add
pop
stos
inc
retf
jbe
dec
shl
lods
push
xor
shl
inc
in
or
xor
rcr
pushf
arpl
pop
shl
sbb
outs
cs
shl
dec
cld
call
or
sar
adc
dec
xor
popa
and
rol
shl
xor
jns
shl
mov
mov
xor
dec
repnz
adc
push
retf
xor
gs
or
xor
jmp
call
int
sub
shl
xor
push
adc
xor
or
xor
arpl
xor
and
xor
ror
xor
(bad)
imul
shl
not
or
xor
ja
xor
xor
addr16
scas
pop
int
dec
rol
shl
xor
jg
fdivrp
pop
ror
pop
dec
(bad)
setb
inc
sbb
xchg
and
xchg
and
mov
dec
xchg
fs
xchg
cdq
(bad)
fs
mov
sbb
movs
in
sbb
sub
xchg
mov
int
fs
xchg
fs
fnstsw
std
ret
leave
nop
or
mov
nop
or
mov
and
xor
xor
fist
and
mov
leave
(bad)
cmps
out
leave
nop
or
xlat
mov
inc
leave
nop
test
scas
out
lahf
inc
xor
fistp
ins
aas
add
add
ins
sbb
adc
add
adc
(bad)
mov
pop
inc
pop
out
sbb
add
fistp
and
add
add
scas
scas
mov
sbb
repnz
push
popa
pusha
add
sub
repnz
xor
leave
shl
inc
adc
(bad)
or
sub
out
pusha
mov
nop
cmp
das
cli
xor
in
idiv
jl
mov
mov
mov
mov
sub
rep
mov
mov
sti
mov
mov
(bad)
mov
mov
mov
jg
push
int
jb
cmp
jne
retf
mov
sub
jg
jg
push
je
xor
add
int
cld
lods
or
ins
jmp
adc
repz
das
imul
outs
jb
popa
push
fs
mov
jnp
ins
popa
addr16
hlt
and
arpl
je
xor
stc
fbstp
push
das
ja
ja
ja
sti
mul
arpl
sbb
outs
outs
je
arpl
call
and
arpl
je
jb
fidivr
and
dec
outs
and
pcmpgtw
mov
xor
push
fndisi(8087
fs
es
inc
pop
enter
outs
and
ins
outs
popa
and
mov
pusha
mov
ins
jb
dec
and
fild
jae
jns
imul
push
popa
inc
scas
add
add
(bad)
dec
std
or
push
pop
repnz
add
add
add
add
push
sbb
or
call
or
or
or
dec
dec
ja
inc
xor
ja
stc
pop
push
mov
pushf
mov
aaa
push
das
inc
add
stos
pop
sbb
arpl
xchg
mov
jae
sbb
(bad)
push
jge
push
stos
xchg
fisttp
pop
xor
or
pop
jmp
inc
dec
dec
add
dec
add
cmp
cmp
(bad)
cmp
or
ds
jb
sbb
cmp
in
adc
popf
or
sub
mov
xor
sti
add
das
add
cmp
aaa
push
cwde
std
fiadd
pop
cmp
add
aaa
mov
dec
sbb
cmps
scas
jmp
scas
sahf
adc
movd
adc
std
pop
push
lods
jmp
pop
xor
mov
sub
das
cmp
stc
jae
xlat
or
pop
mov
or
inc
pop
ja
sbb
cmpxchg
xchg
nop
or
pop
xlat
je
mov
and
leave
data16
and
call
(bad)
ret
or
or
pop
xor
cmp
out
pop
ds
cmp
jo
out
sub
les
(bad)
mov
pop
sti
add
cmp
jmp
cmc
pop
daa
and
xchg
add
push
cmp
pop
sub
(bad)
pop
inc
das
daa
cmp
leave
xchg
fisttp
cmp
in
mov
inc
loop
dec
cmp
in
je
in
xchg
daa
fidivr
xlat
jne
daa
cmp
fmul
add
das
jns
dec
dec
add
fnstsw
mov
push
jnp
out
cmps
push
push
sbb
cmp
or
jmp
mov
adc
xchg
add
xchg
sbb
xor
fadd
inc
dec
cs
push
sbb
and
mov
mov
stos
add
iret
out
(bad)
test
pop
imul
ficomp
imul
pop
pop
jecxz
inc
pop
add
lock
or
popa
ins
and
jb
mov
aaa
into
cmp
ins
bound
push
ss
jne
mov
jne
and
imul
fstp
push
mov
dec
pop
pop
push
mov
retf
inc
inc
or
int
or
(bad)
fild
retf
pop
mov
mov
xlat
sbb
test
out
in
pop
cwde
xchg
mov
mov
test
cmp
movnti
mov
add
jne
mov
push
cmp
mov
inc
dec
inc
retf
or
ds
nop
push
aad
xchg
lds
nop
repnz
cmp
cmp
adc
rol
scas
nop
pop
sbb
and
adc
jnp
add
dec
push
or
(bad)
fadd
mov
sub
xchg
and
inc
mov
inc
(bad)
(bad)
dec
mov
mov
mov
add
push
push
push
mov
mov
add
push
pop
mov
mov
jnp
(bad)
(bad)
stc
cmp
jge
mov
cdq
call
sub
mov
pop
mov
cmp
lahf
or
mov
xor
mov
pushw
add
adc
call
cmc
outs
add
jbe
pusha
(bad)
mov
mov
jecxz
jmp
mov
add
dec
div
add
adc
popa
popa
pop
call
outs
jg
cmp
mov
or
jg
sti
(bad)
and
sti
jb
jmp
mov
add
lods
movs
ficomp
pop
cmp
sbb
mov
sbb
jge
in
add
pop
pop
pop
outs
push
jno
pop
mov
retf
push
and
mov
ja
mov
sub
aam
call
sbb
inc
jmp
test
test
pusha
pushw
push
fwait
test
out
ret
adc
xchg
jp
xchg
cmp
outs
ja
inc
xchg
add
call
int3
out
push
mov
fimul
inc
fadd
mov
dec
jne
ret
add
add
mov
mov
and
in
pop
aas
dec
das
dec
and
adc
jecxz
neg
fist
(bad)
push
or
outs
int3
out
dec
test
push
pop
push
fild
or
inc
jecxz
mov
push
jmp
pusha
lods
add
push
and
add
jle
(bad)
inc
sub
fs
add
fcomp
enter
push
adc
cmps
mov
les
cwde
add
sahf
ret
push
loope
addr16
push
ret
push
fisub
not
dec
push
add
sub
add
or
and
cmp
xor
lock
mov
pop
pop
mov
mov
push
push
pop
xchg
scas
mov
fsubr
es
push
inc
mov
rcl
jno
or
push
pop
test
ja
push
push
push
pushf
push
sub
push
mov
sub
(bad)
push
lods
loop
jecxz
mov
push
das
(bad)
and
dec
sub
hlt
(bad)
mov
daa
lea
or
push
pop
mov
add
mov
lock
mov
mov
rol
sti
jmp
cmp
bnd
push
push
imul
dec
dec
mov
loop
xchg
ins
mov
xchg
push
pop
mov
mov
jg
int
sbb
adc
push
(bad)
sbb
inc
mov
push
add
mov
sbb
or
sub
adc
cmp
xor
mov
cmp
das
mov
in
or
xchg
mov
out
neg
adc
stc
retf
pop
sub
adc
std
in
outs
xor
fsubr
nop
jb
retf
mov
aam
sbb
cmp
outs
test
mov
xchg
xor
inc
push
ficomp
pop
and
jp
dec
stc
popa
jae
push
xor
ins
(bad)
pop
imul
adc
jb
add
mov
aaa
xor
pop
verw
dec
retf
xchg
push
push
mov
dec
inc
outs
(bad)
fs
mov
mov
or
and
mov
or
xor
es
jmp
nop
xchg
pop
add
out
es
mov
xor
jmp
mov
repnz
and
cld
in
jmp
push
mov
mov
test
mov
mov
sub
(bad)
repnz
add
mov
jge
pop
mov
data16
clc
data16
pop
shl
fidiv
cs
adc
inc
or
xor
dec
sub
dec
rcl
ret
mov
jmp
push
add
mov
sbb
push
add
call
push
xchg
inc
push
sub
shl
ds
sub
lods
retf
fmul
pop
cmp
sbb
icebp
jge
mov
data16
add
cmp
xchg
sbb
or
xchg
add
fidivr
mov
ins
pop
mov
sbb
daa
data16
outs
or
je
sub
push
adc
in
xlat
sub
mov
cmp
jne
lock
and
add
adc
pop
inc
add
inc
mov
(bad)
dec
dec
sbb
sbb
mov
sbb
pop
sbb
cmps
sbb
lahf
sub
sub
std
ror
add
sbb
fist
neg
jb
repnz
shl
pop
and
jp
inc
mov
push
fs
outs
pop
ss
push
mov
aas
inc
or
std
push
sbb
stc
mov
mov
sbb
add
(bad)
dec
ins
jae
jl
sbb
jo
jl
jl
mov
ror
push
jl
push
jl
jl
dec
xor
jl
jl
sbb
pop
push
add
(bad)
mov
jecxz
xchg
push
sbb
cs
repnz
jne
lea
or
stos
dec
or
je
mov
add
pop
add
inc
sbb
push
or
jecxz
pop
adc
fsub
mov
imul
data16
mov
cld
scas
add
adc
jl
fisub
sub
mov
cmp
(bad)
jae
pop
jl
pop
mov
fmul
idiv
ret
shr
sbb
push
shl
or
push
mov
sub
fisubr
and
ret
into
dec
pop
retf
mov
add
cmc
dec
pop
sub
ja
xor
cmp
inc
adc
daa
pop
add
je
push
mov
jg
add
pop
add
mov
and
and
loopne
adc
or
cwde
das
pusha
lahf
sub
inc
jle
pop
xor
jnp
rol
nop
cmp
fld
and
jmp
push
push
sub
xchg
xor
scas
dec
popa
cmp
popa
sti
sbb
jae
mov
dec
je
sbb
jae
add
xor
test
or
pop
sub
jnp
shl
jmp
inc
pop
std
push
shr
jmp
inc
jmp
push
aad
pusha
ret
fucomip
sbb
sub
mov
fs
mov
adc
pop
loopne
push
invd
and
ja
xchg
pop
loopne
pop
add
pop
add
imul
hlt
out
mov
mov
stos
push
add
jo
mov
push
call
pop
xchg
shr
inc
out
inc
and
repnz
sbb
data16
mov
add
mov
dec
cwde
lds
jmp
add
ret
mov
pushaw
inc
out
cmps
loope
dec
jb
pushw
mov
or
loopne
aaa
push
mov
cmp
sbb
scas
jo
inc
jae
inc
add
sbb
fisttp
out
push
mov
pop
add
sub
sub
ins
mov
icebp
in
retf
sbb
stc
xchg
sub
loope
rol
push
push
inc
dec
pop
test
ret
mov
arpl
je
bnd
inc
movs
jo
sbb
and
xchg
cs
pop
and
test
ja
pusha
jne
push
pop
call
sub
gs
sbb
pop
cli
mov
push
popa
fiadd
in
loope
push
or
(bad)
mov
data16
push
pop
push
inc
sar
mov
adc
mov
xchg
or
cmp
stos
cld
fcmovnb
push
shld
sti
push
push
imul
in
(bad)
or
lods
rol
call
mov
push
and
ror
and
lds
cld
inc
stos
cld
fstp
aas
and
cmp
fstp
(bad)
dec
jne
jmp
or
jmp
cs
mov
scas
mov
arpl
sti
xchg
mov
jb
xor
dec
add
fldcw
mov
mov
in
cld
pop
cmp
push
fild
cs
jmp
rcl
add
lds
es
and
inc
cmp
fistp
jle
std
or
clc
sar
add
inc
mov
fbstp
pop
pop
sub
cmp
loope
push
pop
and
fisttp
iret
push
rcr
mov
or
xchg
xor
daa
add
add
cs
cmps
mov
adc
and
xchg
jo
jmp
sub
fisub
call
jne
mov
sub
imul
dec
pop
xor
lock
add
fidivr
mov
add
ins
ja
push
or
add
jmp
add
loop
das
test
ins
push
fst
hlt
je
sbb
cmp
stos
push
sbb
or
popf
enter
test
add
inc
movs
add
xchg
adc
add
add
stos
jae
and
mov
or
btc
add
sub
dec
mov
retf
xchg
add
add
mov
loopne
enter
push
push
popa
je
test
fsubr
dec
outs
outs
add
std
cs
sbb
ins
js
sub
or
add
jp
outs
data16
outs
mov
or
xor
bound
into
ficom
arpl
adc
(bad)
(bad)
arpl
jno
leave
outs
and
jae
adc
xchg
aaa
ja
fwait
dec
jo
outs
jae
jmp
das
enter
xchg
and
push
dec
xchg
add
mov
xor
or
add
xchg
aas
aaa
xor
and
scas
and
inc
add
scas
aaa
add
sar
inc
cmp
dec
call
push
das
and
or
inc
push
out
das
movs
jp
push
push
call
shl
dec
xor
jmp
fcmovu
xchg
dec
dec
inc
xor
xchg
aas
xlat
rcr
fwait
sub
das
scas
pop
mov
xchg
pop
mov
pop
cmc
hlt
xchg
neg
pop
mov
pop
cld
test
cli
inc
cmp
dec
push
add
inc
xchg
inc
jne
sbb
dec
imul
cmp
test
stos
pop
inc
js
arpl
stos
jne
and
pop
inc
iret
push
pop
push
and
dec
or
sbb
and
pop
(bad)
sti
call
add
invd
add
mov
push
jle
xchg
call
(bad)
add
and
retf
push
(bad)
es
idiv
push
xor
or
and
sbb
mov
mov
mov
cdq
mov
outs
pop
pop
mov
mov
rol
and
arpl
pop
shl
ss
sbb
add
add
and
xor
ror
add
inc
fsubr
jb
mov
shl
ins
sub
imul
test
sbb
call
clc
lea
imul
jno
test
sar
outs
cmp
std
xor
jbe
jae
js
mov
push
push
push
outs
push
fstp
jmp
sub
jb
xchg
adc
push
aaa
retf
in
leave
and
(bad)
adc
add
fucomi
sbb
push
add
in
into
cmp
cmp
scas
sbb
dec
sahf
and
mov
sbb
cmps
push
push
imul
adc
not
push
lock
mov
outs
fs
ror
ja
and
das
jbe
or
sbb
fistp
arpl
xor
adc
or
xor
jns
push
adc
xchg
sbb
mov
pop
cmp
sbb
sahf
ins
pop
adc
leave
inc
sub
outs
ins
jae
xchg
int
adc
xchg
fmul
jae
je
addr16
pop
add
loop
aas
cmp
push
leave
test
add
(bad)
fs
popa
ins
fadd
xchg
mov
xor
add
pop
mov
(bad)
daa
and
adc
sbb
jle
mov
jne
gs
xor
xor
(bad)
mov
jmp
xor
mov
jae
xchg
outs
pop
(bad)
cmps
dec
adc
loop
push
inc
lods
add
and
mov
scas
ja
shr
dec
sub
cmps
pop
loopne
mov
cmps
cmp
xor
add
adc
or
js
xchg
or
ins
call
gs
js
mov
add
mov
aaa
inc
ud2
daa
test
js
jns
xchg
ins
or
js
inc
js
in
pop
pop
pushf
ja
js
js
pop
ja
repz
pop
pop
aas
out
sti
ja
mov
mov
mov
out
pop
jb
xor
or
sub
pop
inc
popa
out
dec
or
ss
neg
inc
push
pop
push
dec
dec
dec
lods
mov
dec
rcl
stc
mov
dec
adc
dec
into
jae
or
fwait
scas
stos
int
adc
mov
dec
shl
inc
sbb
aaa
and
data16
pop
mov
imul
sbb
add
and
mov
aam
sbb
sub
lock
xor
pop
push
pop
addr16
inc
scas
inc
push
stos
mov
adc
dec
add
add
add
in
nop
in
ins
or
or
pop
push
fld
ud2
push
or
push
pop
push
or
sub
pop
push
adc
or
mov
push
add
mov
inc
xchg
add
xchg
pop
xor
add
push
shl
sub
add
push
or
mov
mov
cmp
add
pop
and
pop
stos
mov
cmp
and
mov
das
push
or
movd
sbb
add
add
mov
or
inc
push
add
fdivr
vpcomw
add
ja
ror
call
jae
and
add
fwait
or
aaa
enter
cmps
xchg
add
(bad)
outs
ja
add
push
adc
push
ret
mov
or
or
push
push
pusha
movs
jnp
mov
or
add
retf
add
dec
inc
test
or
adc
cmps
push
ja
jne
or
inc
pop
add
dec
pop
dec
add
sub
push
dec
add
inc
or
arpl
dec
pop
dec
push
or
scas
jnp
pop
inc
add
dec
inc
cmp
ins
or
aas
push
pop
aaa
mov
out
pop
jno
add
xchg
out
jne
add
cmps
dec
jne
xlat
jne
push
rcpps
push
push
pop
dec
fbstp
xlat
adc
or
inc
and
jae
pop
inc
sar
mov
push
pop
or
jl
pusha
jbe
adc
stos
add
or
add
jmp
fwait
je
add
add
add
movs
jnp
adc
add
inc
sbb
pop
not
add
add
or
dec
mov
add
sub
ficomp
rol
cs
fldcw
inc
ud0
lock
inc
jbe
popa
and
xlat
ja
jo
pop
mov
sbb
or
pop
pop
sbb
pop
xor
pop
pop
outs
std
mov
popa
pop
xlat
sti
mov
movq
mov
bound
add
or
mov
aas
jle
clc
add
jle
sub
inc
inc
dec
xchg
fld
movsx
mov
pmovmskb
mov
push
(bad)
mov
sahf
ja
inc
mov
mov
or
or
btr
iret
add
push
pushaw
shl
add
enter
mov
pop
adc
fwait
rcr
pop
add
mov
pop
mov
pop
push
fwait
test
mov
add
mov
push
inc
rol
psadbw
movq
pop
jnp
fild
dec
push
cdq
andps
fdiv
inc
mov
fist
ret
or
ficom
invd
pop
mov
loope
xchg
movsx
mov
inc
mov
cmp
xchg
jnp
test
lods
add
pop
js
xchg
jp
lldt
add
(bad)
sti
pop
mov
gs
xchg
mov
jg
test
sub
add
das
lods
leave
add
dec
xchg
data16
and
das
pop
outs
pop
add
xchg
jne
dec
(bad)
push
test
pusha
(bad)
mov
pop
xlat
xchg
mov
maskmovq
test
aas
inc
pop
arpl
mov
out
loopne
pop
outs
sbb
jae
pop
pop
mov
outs
cmp
jge
test
nop
inc
test
inc
mov
movups
inc
fcom
inc
and
inc
dec
test
mov
add
nop
mov
cmp
fwait
and
out
add
add
inc
add
add
push
icebp
add
add
mov
sub
and
mul
sub
sbb
nop
xchg
sub
aaa
and
fs
inc
cmp
xor
jb
mov
dec
jl
fadd
jne
jne
add
mov
mov
mov
mov
inc
daa
outs
add
add
push
daa
ins
add
jbe
loope
jmp
bound
gs
adc
dec
inc
or
por
fcmovnbe
adc
inc
or
push
sbb
pop
xor
mov
inc
mov
mov
ret
pop
sbb
and
(bad)
jmp
and
cmp
adc
and
or
test
add
lea
inc
xchg
lds
outs
push
push
push
call
mov
xor
enter
sub
add
enter
mov
cli
mov
jne
cmp
sub
sub
mov
mov
cs
enter
push
xchg
dec
push
sbb
(bad)
mov
xor
add
jne
cmp
mov
aas
adc
add
ja
sbb
add
or
adc
push
or
add
pop
sbb
and
cmp
add
ret
ret
aas
push
add
aaa
out
in
inc
pop
and
inc
sbb
inc
pop
and
or
outs
pop
mov
dec
call
push
jo
pop
sbb
xor
or
mov
or
ret
inc
dec
dec
mov
or
or
rcl
fstp
sbb
je
addr16
outs
pop
and
jmp
xlat
lds
or
jns
aas
retf
lea
adc
je
inc
cmp
xor
imul
lods
fs
fld
cmp
inc
xchg
pop
adc
or
shl
stos
mov
sti
sbb
sub
add
fs
inc
sbb
mov
xchg
outs
sbb
add
test
fs
leave
scas
sub
es
je
dec
stos
ja
jmp
mov
add
jb
adc
sub
and
ror
lock
or
jno
jae
mov
push
push
fcom
out
stc
push
mov
inc
inc
and
jmp
cmp
(bad)
fs
rcr
mov
or
sar
shl
or
dec
sbb
xor
fwait
add
add
daa
add
or
sbb
or
or
pushw
fiadd
or
movs
add
add
add
mov
inc
cmp
xor
(bad)
or
cmps
xchg
add
in
out
rcr
(bad)
add
and
add
enter
adc
inc
xchg
int
fld
dec
jo
jg
out
xchg
pop
ret
jns
aaa
fs
xchg
retf
push
addr16
or
je
adc
add
xor
xor
rcr
pop
jnp
(bad)
(bad)
(bad)
aas
in
jnp
pop
push
xlat
mov
int3
ins
xchg
sub
or
inc
call
dec
(bad)
(bad)
(bad)
call
or
sbb
or
add
inc
xchg
and
pop
aaa
sbb
and
(bad)
(bad)
jmp
es
ficomp
out
sub
push
jnp
jl
xor
sbb
jbe
mov
(bad)
(bad)
(bad)
inc
jg
mov
out
aad
(bad)
jmp
jg
(bad)
jp
mov
lss
or
(bad)
fist
aaa
and
repz
fwait
xchg
mov
dec
(bad)
(bad)
(bad)
(bad)
fcom
pop
pop
mov
sub
stos
ss
scas
daa
cmp
outs
push
lea
stos
ins
(bad)
mov
stos
cmps
stos
test
cmp
sub
push
aad
inc
imul
sbb
imul
(bad)
(bad)
js
test
and
xchg
nop
ds
fcom
cli
push
hlt
and
cmp
stos
arpl
push
sub
(bad)
(bad)
jmp
xchg
shr
xor
adc
daa
test
test
sbb
mov
enter
mov
inc
pop
test
mov
adc
out
cmps
fptan
repnz
pop
dec
mov
(bad)
inc
mov
aad
pop
dec
retf
int
pop
inc
adc
inc
div
ins
jnp
(bad)
(bad)
(bad)
call
push
mov
add
call
cmps
aam
sub
fmul
fild
cmps
or
data16
outs
jb
xor
(bad)
shl
mov
(bad)
jmp
push
imul
push
lods
sub
std
jl
jmp
mov
(bad)
(bad)
(bad)
jmp
mov
out
inc
adc
cs
or
push
sub
pop
retf
jno
clc
(bad)
(bad)
inc
loop
adc
push
mov
daa
mov
fistp
cdq
(bad)
(bad)
call
push
sub
(bad)
xchg
mov
repnz
push
sbb
test
xor
sbb
and
js
mov
pop
sub
sbb
clc
mov
jl
jmp
mov
out
test
iret
dec
out
mov
push
mov
xchg
(bad)
(bad)
(bad)
inc
(bad)
xor
mov
rcl
outs
movs
das
das
call
dec
jp
(bad)
(bad)
(bad)
push
jmp
ins
push
mov
add
xor
push
(bad)
stos
cmp
adc
push
into
mov
and
(bad)
(bad)
(bad)
jmp
jo
repz
cmp
and
and
push
cmc
psrlq
lahf
fdivr
fimul
cwde
cmp
(bad)
call
pop
mov
les
je
push
pop
cld
add
(bad)
inc
lds
mov
inc
jp
(bad)
(bad)
(bad)
in
push
jb
cmc
cmps
inc
jnp
and
repz
je
push
rcl
mov
popf
movs
clc
jge
mov
jg
jmp
cmp
cmp
mov
sub
in
in
or
mov
mov
call
out
inc
inc
push
xlat
std
pop
dec
imul
jg
addr16
(bad)
lock
pshufw
and
mov
(bad)
fnsetpm(287
jg
(bad)
call
pop
mov
in
dec
ins
add
mul
push
clc
shr
inc
pop
fistp
push
lods
sub
cmp
mov
(bad)
(bad)
(bad)
call
sbb
ret
mov
push
ds
movs
in
std
mov
fmul
mov
jne
sahf
adc
add
dec
(bad)
(bad)
(bad)
push
push
push
das
enter
sti
sbb
pop
mov
xor
or
fild
not
(bad)
(bad)
(bad)
jmp
enter
pop
xchg
sub
cwde
icebp
in
sbb
inc
inc
xor
pushf
add
push
stc
mov
(bad)
(bad)
(bad)
jmp
jo
pop
cmp
xor
lods
pop
repz
mov
jb
pop
push
(bad)
(bad)
(bad)
jg
xchg
xor
sbb
adc
sub
bound
sbb
rcr
sbb
ins
and
(bad)
(bad)
push
outs
and
sbb
mov
aas
xchg
test
pop
xor
pop
adc
(bad)
inc
pop
mov
adc
dec
mov
xchg
les
repz
(bad)
inc
into
sub
jae
lahf
adc
xlat
ds
mov
and
in
jmp
ret
sbb
out
pop
gs
push
mov
rcl
(bad)
inc
getsec
adc
add
mov
(bad)
(bad)
(bad)
push
mov
sub
in
loop
push
adc
fnstsw
outs
sbb
mov
(bad)
push
bound
bound
push
(bad)
jae
xchg
cmp
push
gs
xor
push
mov
push
mov
movs
xchg
fidiv
dec
loope
into
ja
iret
ror
aas
jecxz
das
fdivr
sbb
push
fsubrp
retf
aad
bound
mov
or
sbb
adc
sbb
or
add
cli
cmp
(bad)
dec
sub
adc
jb
aam
cld
(bad)
(bad)
jmp
rcr
pop
fidiv
sbb
jecxz
xchg
xchg
and
scas
nop
sbb
dec
mov
idiv
outs
test
sti
mov
cmps
loop
retf
das
push
mov
cli
aam
(bad)
(bad)
jmp
inc
push
aas
jo
fadd
pop
push
add
sbb
pop
pusha
rcr
pop
cs
(bad)
(bad)
call
cli
pop
call
pop
xchg
jmp
sub
test
cmp
or
call
add
inc
fdivr
ins
inc
leave
or
adc
loope
aaa
out
push
sbb
pop
adc
xchg
xor
pushf
sbb
cmc
call
push
out
(bad)
(bad)
popa
shl
popa
jno
inc
(bad)
sbb
out
lock
pop
(bad)
(bad)
(bad)
call
repnz
mov
pop
ror
sub
aas
mov
pusha
fs
fstp
call
add
cwde
aad
fidivr
aam
or
dec
jl
pop
mov
(bad)
(bad)
push
jmp
popa
(bad)
pop
fsincos
addr16
pusha
pusha
stos
ja
in
sahf
sar
imul
jp
pop
pop
(bad)
(bad)
jmp
stos
push
mov
ins
mov
dec
mov
xor
pop
sar
dec
pop
dec
xchg
push
into
cmps
retf
fldenv
scas
mov
inc
das
xchg
pop
call
mov
pop
aad
(bad)
(bad)
dec
cmc
add
or
in
in
jne
fs
(bad)
lods
xchg
jp
dec
pop
ror
or
call
das
imul
rcl
jmp
cmp
(bad)
inc
dec
mov
add
and
cmc
push
ficomp
(bad)
jmp
dec
jmp
es
out
pop
push
scas
in
pop
(bad)
(bad)
jg
(bad)
loop
jg
dec
adc
stos
ins
arpl
inc
inc
lods
mov
shr
(bad)
mov
clc
(bad)
(bad)
call
loope
shl
push
dec
xlat
xchg
lds
fdivr
pushf
call
test
(bad)
call
dec
dec
dec
daa
push
push
jmp
dec
inc
jl
(bad)
fsub
xchg
enter
call
xchg
jecxz
mov
cmp
(bad)
ret
and
or
aam
inc
inc
mov
ja
mov
adc
mov
push
js
mov
(bad)
(bad)
(bad)
jmp
pushf
outs
or
jmp
bnd
rcr
add
cld
fsubr
sti
call
(bad)
push
iret
pushf
inc
out
scas
jno
mov
imul
cmc
cmps
adc
(bad)
(bad)
(bad)
in
call
mov
out
sti
and
cmp
xchg
lods
ret
data16
sub
dec
shr
mov
je
jmp
jmp
ins
mov
fdiv
aas
test
shl
or
(bad)
(bad)
(bad)
mov
stos
sub
js
cld
jbe
mov
outs
inc
xor
xchg
xor
push
int3
sbb
das
icebp
dec
scas
jns
lock
rcl
call
(bad)
(bad)
(bad)
ds
aam
out
loopne
punpckhdq
xchg
popf
ja
sti
add
(bad)
jmp
call
lahf
fs
pop
aas
leave
pop
ins
rol
pop
ret
movs
call
mov
int
jge
fcom
jmp
mov
(bad)
mov
ror
cdq
fcom
jae
stos
cmp
fst
adc
(bad)
(bad)
jg
call
cmp
test
mov
xchg
sub
mov
pop
addr16
(bad)
(bad)
(bad)
call
pushf
fisttp
repnz
js
lods
movs
lods
jns
jp
fnsave
shr
test
(bad)
(bad)
jg
cmp
sub
sub
inc
add
cmp
sti
cwde
scas
sub
(bad)
push
test
push
xchg
enter
mov
dec
in
mov
repnz
(bad)
mov
les
dec
and
scas
daa
in
xor
(bad)
mov
test
(bad)
(bad)
(bad)
sahf
icebp
cmc
mov
pop
push
push
mov
jmp
xchg
and
push
mov
adc
fsubr
paddb
es
(bad)
(bad)
(bad)
jmp
mov
inc
and
mov
sbb
jb
xor
ins
adc
inc
bound
cmp
ds
lds
push
sbb
add
call
(bad)
xor
clc
cdq
mov
mov
xchg
addr16
pop
loop
js
in
(bad)
fisub
dec
pop
or
mov
sbb
mov
mov
sbb
test
fiadd
(bad)
cmp
mov
cmc
ins
pop
jge
xchg
dec
movs
mov
(bad)
cli
adc
mov
pop
jl
and
sub
in
cmp
hlt
inc
dec
or
shl
mov
ds
inc
ins
aam
(bad)
(bad)
(bad)
ffreep
sbb
sub
mov
(bad)
mov
cmp
cs
dec
jo
sub
(bad)
(bad)
call
jp
or
outs
xor
test
lods
jle
ins
or
rol
das
rcl
jmp
(bad)
in
jmp
dec
mov
shr
sbb
movs
mov
call
(bad)
(bad)
dec
(bad)
imul
add
xchg
sbb
sub
or
and
push
shl
sbb
jle
(bad)
call
adc
sub
cmp
retf
cmp
imul
(bad)
(bad)
jmp
or
push
xor
fcomp
mov
int3
ret
inc
aaa
repnz
mov
mov
dec
push
rol
xor
test
outs
jo
push
adc
cdq
dec
stc
push
movs
inc
jmp
or
(bad)
(bad)
(bad)
(bad)
mov
dec
call
cmp
or
ds
push
rcl
fwait
mov
int
cmps
inc
(bad)
call
(bad)
mov
mov
mov
es
push
or
pop
xchg
(bad)
(bad)
call
call
pop
fsub
xor
cmp
adc
push
mov
(bad)
(bad)
push
fnstenv
jo
cmp
inc
jg
rcr
sub
inc
sahf
daa
(bad)
push
pop
call
fisttp
(bad)
mov
lock
sbb
add
fsubr
(bad)
(bad)
push
mov
jbe
fdiv
mov
outs
cmp
sub
movs
out
loope
call
(bad)
js
int3
mov
jp
or
jge
js
sbb
nop
adc
xor
adc
call
out
test
in
rol
rcr
shl
mov
pusha
(bad)
mov
(bad)
(bad)
mov
mov
pushf
xor
loope
retfw
out
sbb
fs
inc
leave
test
inc
cld
mov
test
sub
adc
out
dec
cmp
jnp
sar
jmp
adc
in
xor
sub
dec
enter
or
test
adc
push
(bad)
(bad)
(bad)
(bad)
call
jp
(bad)
ret
xlat
adc
sub
adc
fist
imul
mov
mov
push
xlat
mov
aaa
inc
test
mov
xchg
stc
rol
call
push
(bad)
jle
sahf
and
(bad)
call
xchg
clc
in
pop
(bad)
and
add
push
jl
xchg
cld
xchg
adc
arpl
adc
jp
sti
adc
pop
clc
aaa
adc
in
mov
push
in
call
mov
sti
aaa
jp
fimul
(bad)
cmp
add
and
(bad)
jg
sbb
and
outs
mov
inc
cmp
in
push
aaa
sar
jno
xor
inc
out
cmp
(bad)
(bad)
(bad)
(bad)
dec
call
jl
(bad)
out
test
mov
sti
stos
scas
xchg
sbb
ret
or
(bad)
(bad)
(bad)
push
in
stos
add
and
scas
data16
and
pop
pusha
xchg
jne
mov
test
fdiv
inc
add
in
or
scas
sbb
xor
(bad)
(bad)
dec
les
sbb
sar
sbb
aam
add
push
inc
ret
cmp
(bad)
push
cmp
sbb
or
inc
xor
sub
mov
mov
popf
out
cmp
call
and
je
mov
(bad)
(bad)
call
jne
mov
lds
add
ret
ins
cmp
scas
and
ret
call
fsubr
sbb
and
fsubr
(bad)
(bad)
fild
jae
in
pop
sbb
(bad)
adc
inc
fstp
imul
(bad)
(bad)
inc
mov
push
xor
retf
test
adc
cmp
aaa
mul
lods
sub
jg
das
fld
jbe
inc
(bad)
nop
test
movs
cmp
ja
jmp
int
std
(bad)
sbb
jns
outs
inc
mov
in
ins
cmc
jecxz
shl
mov
movs
cmp
push
lea
in
pop
and
(bad)
stc
mov
push
or
adc
gs
(bad)
(bad)
call
aas
mov
inc
lahf
pop
int3
add
jbe
xor
cwde
sbb
and
ins
ffree
inc
clc
(bad)
(bad)
dec
and
je
into
add
or
push
mov
sbb
mov
aaa
xor
sbb
gs
xor
jns
jae
adc
(bad)
(bad)
(bad)
jmp
lds
fadd
daa
cdq
add
inc
mov
mov
je
sub
sub
jg
(bad)
(bad)
(bad)
inc
add
xor
pusha
mov
mov
cmps
xchg
and
push
leave
xor
push
jmp
call
std
sub
popa
jmp
cmp
hlt
xchg
jno
xor
shl
mov
aas
das
dec
adc
inc
xor
mov
clc
push
jge
inc
cli
(bad)
sub
adc
xchg
mov
je
inc
lods
loope
cwde
mov
jne
out
aaa
jp
dec
pop
sar
mov
es
xor
mov
imul
popa
pop
mov
test
(bad)
ds
inc
aam
mov
adc
dec
cs
push
jns
jecxz
cmp
test
aad
push
cli
add
ror
sar
or
sbb
(bad)
and
(bad)
jmp
mov
push
mov
loopne
cwde
imul
pop
pop
ds
out
pop
(bad)
outs
cmc
xchg
xor
call
mov
call
mov
cmp
dec
(bad)
icebp
int3
retf
adc
pusha
(bad)
(bad)
(bad)
(bad)
jmp
mov
dec
sbb
jnp
jne
dec
gs
adc
jle
(bad)
dec
pop
pushf
loop
popa
xchg
sub
loope
mov
jbe
test
and
mov
cmp
and
in
fdivr
jmp
add
xchg
ins
in
add
or
je
push
push
loopne
push
dec
aad
loope
out
out
inc
sub
fistp
(bad)
(bad)
(bad)
mov
pop
daa
test
fbstp
cmovg
icebp
std
mov
sbb
(bad)
inc
or
adc
sti
in
loopne
hlt
imul
cmp
call
mov
retf
add
and
sub
shr
popa
add
test
sbb
lea
sbb
(bad)
inc
adc
sub
jb
add
cmp
cmp
popf
(bad)
jg
push
sub
sbb
fnstenv
xor
pop
sar
call
xchg
pop
in
mov
imul
enter
or
add
mov
mov
jecxz
ja
add
fdivr
mov
loope
adc
(bad)
(bad)
inc
aam
and
sbb
add
mov
in
mov
sbb
fdivr
(bad)
(bad)
call
push
ret
adc
jg
push
push
jmp
xchg
push
push
aad
imul
pop
and
push
call
aad
ins
jo
mov
push
cwde
inc
xor
adc
es
gs
(bad)
(bad)
(bad)
jmp
test
mov
push
(bad)
xchg
mov
aas
push
sbb
mov
push
cmps
not
icebp
outs
hlt
jmp
dec
movs
scas
loop
xchg
fwait
scas
jb
leave
xor
outs
push
sahf
retf
fldenv
xchg
pop
outs
or
cmc
movs
pusha
dec
xor
push
jne
fsub
loopne
stos
icebp
push
push
push
mov
ins
sub
add
loope
test
adc
(bad)
jmp
xchg
mov
fwait
pop
mov
dec
sbb
push
mov
(bad)
jmp
xor
pop
and
sbb
pop
dec
xchg
push
mov
adc
jne
(bad)
stc
add
(bad)
(bad)
jg
mov
dec
and
cs
ficom
stc
push
shl
xor
pop
push
(bad)
call
int
push
push
and
xor
outs
je
mov
pop
jecxz
push
or
pop
(bad)
(bad)
inc
std
and
adc
sbb
mov
fwait
int
push
sbb
fwait
add
clc
aaa
clc
scas
sub
or
stc
data16
ret
xchg
inc
rcl
or
call
clc
xlat
(bad)
loop
gs
xchg
xor
lea
aaa
movs
mov
(bad)
(bad)
call
in
stos
test
push
jg
out
mov
call
lock
shr
mov
(bad)
xlat
inc
aam
jecxz
mov
mov
cmp
jmp
(bad)
cs
mov
in
add
adc
mov
pop
mov
mov
sbb
ja
hlt
inc
stos
or
(bad)
push
pop
pop
xor
out
jbe
cmp
sbb
or
pop
aam
dec
cld
fucomip
test
sti
xor
xchg
mov
(bad)
daa
lods
outs
cld
mov
sbb
add
xchg
sar
(bad)
call
cld
in
cmp
xchg
adc
adc
mov
jge
cld
cs
(bad)
(bad)
jg
imul
xor
cmp
cmp
and
jecxz
mov
push
leave
pop
(bad)
fimul
xchg
xchg
(bad)
(bad)
mov
adc
mov
stos
scas
pop
call
sahf
das
pop
pop
retf
jp
inc
das
mov
xchg
imul
push
imul
dec
in
bound
movs
jo
pop
inc
or
dec
popa
sti
(bad)
(bad)
jmp
pop
imul
fwait
and
inc
add
jbe
nop
ret
ins
cmp
fstp
mov
aas
pop
and
add
lods
cmp
inc
or
movs
enter
call
ja
movs
lock
sub
inc
push
leave
push
movs
xor
into
adc
mov
adc
jp
(bad)
aaa
mov
mov
adc
test
jle
sub
(bad)
idiv
not
sub
or
add
jl
inc
or
mov
int3
clc
inc
cdq
(bad)
fistp
ds
mov
das
pop
mov
mov
xor
pop
pop
test
jbe
test
xor
push
pop
xchg
jb
fwait
mov
fcmovnu
adc
mov
imul
and
fstp
(bad)
mov
jno
xchg
ret
add
inc
or
shl
pop
and
stos
in
mov
sahf
jb
stos
inc
or
jl
xchg
inc
xor
mov
add
ds
jnp
mov
pushf
add
cld
xor
pop
sbb
sub
or
fwait
outs
mov
mov
daa
inc
or
mov
dec
rol
(bad)
adc
das
xchg
hlt
hlt
(bad)
(bad)
add
jecxz
ds
or
jo
jecxz
repz
(bad)
fild
jg
loop
mov
jge
js
cmp
mov
data16
mov
div
mov
pop
es
sub
div
push
mov
jg
push
aam
lock
pop
das
sub
adc
std
out
xchg
lods
xchg
inc
mov
jge
or
dec
out
pop
(bad)
in
pop
mov
test
xor
inc
in
add
fdivrp
in
push
test
fisttp
pop
mov
or
push
lahf
jmp
adc
push
gs
mov
xchg
mov
push
mov
nop
mov
stc
data16
cmp
outs
cmc
pop
and
aas
mov
pop
dec
dec
jge
dec
jge
movs
mov
push
(bad)
(bad)
jmp
mov
add
mov
aad
imul
cmp
dec
xchg
jo
call
clc
out
xor
mov
(bad)
cld
mov
cmc
xchg
ja
inc
sahf
and
mov
dec
jns
fdiv
add
in
fistp
xchg
add
cmps
repnz
jmp
and
ja
add
ret
test
mov
jmp
cs
push
push
ror
in
test
push
fbstp
mov
jl
jmp
inc
jbe
pop
adc
dec
js
ret
xor
test
lods
(bad)
aaa
mov
add
stc
mov
inc
and
(bad)
inc
repnz
popf
xor
mov
int
or
and
xchg
and
(bad)
(bad)
call
fldcw
and
jg
dec
in
or
enter
sbb
xchg
test
neg
dec
xchg
adc
je
xchg
sub
push
movs
adc
stc
test
push
dec
mov
mov
add
mov
push
jne
inc
inc
and
inc
add
sbb
jb
and
xor
retf
test
loopne
pop
cmc
icebp
leave
adc
pop
sub
add
js
dec
icebp
dec
clc
(bad)
mov
mov
sbb
(bad)
(bad)
(bad)
stc
gs
fild
jmp
sub
aam
mov
push
mov
mov
iret
mov
push
(bad)
(bad)
(bad)
jmp
cmp
mov
addr16
adc
je
mov
adc
push
rcl
repnz
xlat
pop
jg
(bad)
jg
or
adc
jno
leave
and
movs
add
xchg
mov
ds
(bad)
(bad)
(bad)
dec
enter
push
jmp
je
pop
push
in
outs
rcr
jmp
call
arpl
and
xor
mov
add
mov
jmp
and
das
mov
or
into
lahf
push
adc
dec
add
(bad)
(bad)
jmp
movs
retf
jmp
mov
jmp
ds
addr16
call
add
movs
dec
add
sub
sbb
or
mov
shr
aad
shl
xchg
ret
out
leave
(bad)
(bad)
fbld
add
retf
cmp
jl
iret
icebp
sahf
pop
aam
add
push
inc
cmc
sbb
loopne
jge
into
push
jge
pop
xor
cli
in
cli
(bad)
inc
xor
xchg
outs
add
mov
sbb
rcl
aaa
dec
js
in
aad
pop
cld
(bad)
(bad)
call
xchg
and
repz
repz
sbb
jbe
push
loopne
rcl
pop
cmp
(bad)
(bad)
(bad)
(bad)
mov
push
repz
adc
add
rol
xchg
loope
push
les
fild
inc
dec
fcom
inc
xchg
push
call
pop
loopne
jnp
inc
jns
add
add
ins
(bad)
(bad)
(bad)
inc
xor
mov
dec
add
pop
xchg
jl
sub
loope
push
aaa
(bad)
xchg
dec
in
in
dec
js
out
push
sub
ret
fnstsw
xchg
pusha
js
enter
jmp
movs
faddp
sub
repz
dec
ds
scas
test
sti
sbb
das
mov
xchg
out
jmp
punpckldq
(bad)
cmp
inc
or
and
(bad)
and
lock
adc
pop
scas
xor
(bad)
(bad)
(bad)
jmp
hlt
call
jnp
std
or
lahf
out
xchg
sbb
sbb
test
(bad)
and
call
xor
loop
repz
jmp
loope
mov
sti
lods
(bad)
fnstsw
mov
jl
js
and
(bad)
(bad)
(bad)
(bad)
test
sub
icebp
ins
push
mov
inc
jns
inc
xor
pandn
(bad)
mov
test
xacquire
fdivr
inc
push
inc
stos
and
ins
hlt
jnp
repnz
int
mov
clc
mov
js
jg
(bad)
jmp
push
lahf
addr16
fistp
fcom
sub
stos
(bad)
aam
sub
(bad)
mov
stos
jmp
inc
(bad)
shl
add
imul
cmp
mov
outs
inc
inc
mov
or
outs
inc
aas
and
(bad)
push
adc
cmp
ret
jbe
xor
in
pcmpgtd
jmp
sub
emms
inc
sub
jmp
(bad)
jg
xchg
xlat
mov
inc
(bad)
(bad)
push
(bad)
xor
xchg
test
ds
mov
das
xchg
xchg
or
fcomip
inc
inc
mov
or
in
dec
or
jp
(bad)
(bad)
call
jle
pop
push
pop
push
fistp
clc
shr
pushf
and
imul
icebp
aad
add
mov
(bad)
(bad)
jmp
xchg
sub
retf
movs
and
(bad)
lahf
xchg
mov
push
(bad)
jmp
inc
adc
loope
adc
(bad)
or
sbb
pop
shl
pop
cli
xchg
xchg
and
jmp
mov
pop
push
or
icebp
jle
xor
jle
and
push
mov
lods
pop
hlt
(bad)
call
stos
adc
pushf
and
loopne
push
std
cs
pop
or
fucomip
(bad)
call
rcl
lds
mov
mov
xchg
test
int
(bad)
push
nop
ds
aaa
cli
(bad)
dec
mov
data16
and
loopne
push
ja
test
das
inc
mov
(bad)
mov
or
int3
test
and
jo
ds
inc
sbb
pop
(bad)
sbb
mov
adc
pop
std
ret
mov
es
jae
jmp
call
(bad)
mov
push
sub
inc
nop
add
fwait
add
pop
add
aam
jmp
addr16
jno
fidivr
test
(bad)
jmp
pop
aam
es
in
retf
in
pop
add
add
inc
xor
(bad)
(bad)
dec
das
sub
inc
adc
cdq
jno
aaa
dec
lock
clc
imul
mov
pop
xchg
mov
or
pop
xchg
mov
call
dec
push
xor
jno
jnp
stos
sbb
xor
stos
push
cmps
stc
sub
call
jae
stc
sub
ja
jnp
pop
cdq
sti
int
int
adc
push
(bad)
(bad)
call
retf
and
xchg
movs
(bad)
mov
xchg
pop
sub
cld
ret
je
(bad)
(bad)
call
sub
mov
mov
cmps
lods
dec
pop
xchg
push
xchg
push
xchg
loop
jns
ficom
shl
cld
jg
inc
test
fisttp
jnp
dec
rol
rdtsc
add
add
lahf
and
pop
jae
add
icebp
adc
inc
setns
cdq
or
mov
fnsave
xor
xor
or
and
mov
and
ss
shl
mov
or
gs
rol
jae
ja
and
xor
cmp
or
mov
mov
jmp
sub
push
cmc
push
ret
or
ffree
cmp
pop
and
fist
or
jmp
js
or
imul
gs
inc
div
or
sbb
and
lock
push
lods
jne
inc
add
jno
jnp
jl
test
jae
outs
or
mov
ins
push
loopne
bound
push
mov
dec
ja
sahf
sti
add
add
and
ins
imul
fs
or
das
xchg
fwait
sbb
(bad)
fld
pop
sub
add
mov
(bad)
sbb
add
sbb
inc
mov
xchg
dec
jo
popa
dec
call
add
pop
push
inc
(bad)
xchg
cmp
inc
cmp
inc
cmp
sbb
adc
jne
test
jbe
pop
sbb
inc
(bad)
fadd
dec
push
add
dec
call
inc
ins
dec
lds
push
jge
mov
loop
dec
push
(bad)
mov
loope
sbb
popa
sbb
or
ret
leave
out
cmp
daa
popa
or
xor
out
jno
das
jae
pop
or
(bad)
jbe
das
mov
adc
cwde
nop
mov
cmp
adc
and
pop
and
mov
bound
xchg
in
popa
inc
ret
in
jo
jge
jns
dec
outs
push
or
leave
xchg
and
push
imul
adc
mov
sbb
cs
fadd
daa
inc
dec
ret
pop
mov
xchg
int
outs
arpl
and
pop
ins
bound
lds
(bad)
pop
les
inc
ja
xor
jmp
xor
out
int
inc
jecxz
popa
imul
sub
jne
dec
dec
pusha
xchg
sub
mov
xchg
sub
ins
cmp
daa
push
popf
ins
out
jns
test
or
mov
sub
cmp
add
ror
mov
sbb
aaa
dec
fist
out
and
inc
retf
jmp
dec
fnstenv
shr
pop
(bad)
fwait
sub
ins
jb
ja
ins
mov
inc
xor
stos
adc
mov
mov
add
inc
or
add
push
mov
adc
mov
sbb
sub
mov
or
gs
shr
mov
xchg
int
das
inc
dec
popa
pushf
movs
out
pop
dec
inc
ret
pop
test
mov
jmp
(bad)
rol
rcl
and
sub
xchg
cmp
sub
push
daa
fwait
or
cmp
cmp
and
fs
dec
cmp
mov
cmp
fsub
xchg
or
xchg
fist
or
jnp
sbb
mov
addr16
and
or
rcr
mov
jnp
ins
push
test
mov
push
xor
add
outs
movs
jmp
das
add
add
xchg
cs
ins
and
pop
imul
fldenv
and
gs
xchg
sub
push
xchg
add
dec
pop
pop
pop
xlat
push
icebp
sbb
sub
jp
popa
cmp
sbb
xchg
jno
add
cmp
not
fwait
mov
(bad)
dec
cmp
sbb
ins
scas
jecxz
or
dec
js
std
nop
cli
or
mov
jg
mov
rcl
or
push
xchg
scas
jae
sub
jne
dec
adc
lds
add
iret
xor
aaa
xchg
pop
pusha
inc
inc
adc
(bad)
and
and
jb
inc
mov
es
cmp
add
push
add
mov
shl
mov
mov
gs
test
das
loopne
lods
sbb
test
sub
sub
and
imul
adc
add
arpl
imul
mov
pop
cmp
adc
je
push
push
add
jge
mov
cmp
jb
cmp
outs
push
add
imul
fnstcw
imul
js
and
push
jns
push
add
jne
dec
outs
in
cmp
loopne
ret
push
inc
shl
xchg
or
lds
mov
je
aad
out
outs
ins
jb
push
outs
fs
mov
adc
in
mov
stos
test
cmp
push
or
mov
fild
inc
push
dec
adc
adc
mov
jae
inc
fcom
mov
test
inc
push
test
dec
jne
jo
inc
bound
push
ins
mov
add
mov
int
or
mov
sub
stc
sbb
outs
sti
cli
retf
es
test
addr16
push
sbb
fs
mov
out
movd
loop
pusha
or
dec
popa
cwde
jp
inc
ins
mov
and
sbb
shl
mov
jns
gs
push
sbb
jne
call
ins
pop
ins
adc
cmp
arpl
sub
pop
dec
outs
pop
jnp
jnp
jmp
mov
mov
cmc
add
or
(bad)
sbb
mov
mov
int3
mov
popa
lods
sub
iret
test
and
dec
inc
mov
inc
rcr
outs
imul
xor
xchg
hlt
popa
jbe
test
mov
icebp
pop
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
or
adc
js
arpl
mov
aam
call
mov
jae
pop
sbb
arpl
sub
je
and
jb
outs
imul
ins
pop
fsub
inc
outs
pop
ins
imul
xchg
dec
push
pop
sahf
in
jnp
scas
std
push
pop
fcompp
aam
adc
inc
sbb
push
out
in
mov
ins
or
popa
adc
int3
cmc
test
ins
ins
jne
or
test
addr16
pop
mov
jae
xor
jno
mov
push
sbb
pop
sbb
ss
movs
pop
mov
rcr
mov
mov
jecxz
dec
mov
jmp
push
pop
sub
fcom
mov
jb
jae
aam
lods
push
jge
aaa
fs
sub
je
or
sbb
es
call
push
inc
je
jb
into
cmp
pop
ins
inc
adc
test
inc
mov
sub
adc
ss
adc
push
jbe
lods
inc
push
int
enter
sub
push
pop
pop
scas
imul
or
popf
data16
sub
aam
push
shl
arpl
cmp
test
mul
popa
test
xchg
in
inc
ins
addr16
fist
div
dec
push
xor
test
mov
jge
and
jmp
lods
xor
loope
lea
inc
push
or
pop
ds
or
inc
or
(bad)
sub
inc
inc
pop
pop
jae
mov
das
repnz
jo
or
xor
dec
xor
add
in
adc
push
dec
jbe
sbb
mov
ds
outs
js
adc
ror
js
test
and
adc
cmp
aas
and
inc
pop
push
in
add
imul
inc
adc
inc
xor
push
mov
ins
popa
or
cdq
mov
in
(bad)
lahf
sbb
fcomi
jae
mov
ins
fadd
mov
enter
je
mov
xor
into
ins
xchg
jb
jo
push
ja
push
into
das
inc
pusha
adc
rcl
add
gs
pop
cli
xchg
and
outs
xor
inc
imul
mov
push
sub
inc
retf
push
mov
sub
or
cmp
je
sub
es
mov
les
mov
xor
jae
mov
scas
inc
outs
mov
dec
adc
repz
jo
mov
repz
inc
pop
mov
adc
call
jl
lods
inc
cmovne
movs
and
or
or
inc
sbb
add
shl
outs
mov
inc
or
xchg
popf
sub
add
pop
mul
inc
scas
add
push
cs
(bad)
and
add
retf
loopne
add
or
lods
cmps
in
push
cs
jnp
iret
bound
xlat
jmp
mov
and
jb
popa
push
je
mov
dec
cwde
add
cs
mov
es
fs
jnp
daa
jnp
mov
ror
or
repz
in
xor
int
xchg
daa
sahf
sbb
sbb
add
adc
add
mov
adc
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
add
pop
add
push
add
add
add
nop
add
add
add
rol
add
mov
add
add
add
or
add
adc
add
push
push
add
nop
push
add
add
add
call
add
add
add
or
add
test
add
add
add
test
sub
add
or
add
add
add
add
call
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
or
add
add
add
daa
add
call
add
add
add
add
add
mov
push
add
or
add
add
cmp
add
add
add
add
add
inc
add
sub
add
pop
add
add
add
push
pop
add
sub
add
inc
pop
add
push
pop
add
push
add
cwde
pop
add
add
add
or
add
add
add
add
inc
add
or
add
add
add
mov
add
or
add
add
push
add
add
add
add
add
add
add
nop
movs
add
call
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
add
dec
add
add
jo
add
cwde
add
add
rol
add
add
add
or
add
retf
scas
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
test
add
test
add
or
add
add
xor
add
aam
add
or
add
into
add
fadd
add
or
add
add
add
int3
add
sahf
add
add
add
add
add
add
xlat
add
sbb
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
or
add
cld
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
iret
add
cld
add
add
add
add
add
add
mov
add
add
add
add
push
add
pop
fiadd
add
add
add
add
add
push
add
add
add
or
add
add
cmp
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
cld
add
add
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
or
inc
add
inc
add
add
add
add
add
add
inc
add
inc
add
add
add
add
push
add
push
add
inc
add
push
add
or
add
add
inc
add
inc
add
push
add
dec
add
or
dec
add
add
inc
add
add
push
add
add
inc
add
dec
add
inc
add
or
push
add
push
add
push
add
push
add
add
inc
add
push
add
push
add
push
add
dec
add
push
add
inc
add
dec
add
dec
add
dec
add
dec
add
push
add
inc
add
pop
add
push
add
dec
add
inc
add
inc
add
dec
add
add
dec
add
push
add
pop
add
inc
add
add
sar
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
add
and
ja
ja
jb
and
add
add
add
and
ja
ja
jb
and
and
and
js
ja
jb
and
and
add
add
and
js
ja
jb
and
and
add
add
and
js
ja
jb
and
and
add
add
and
js
ja
jb
and
and
add
add
and
ja
ja
jb
and
and
add
add
and
ja
ja
and
and
add
add
and
and
and
and
and
and
add
add
and
and
and
and
and
and
add
add
and
and
and
and
and
and
add
and
and
and
add
mov
and
and
and
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
and
add
int3
push
jbe
jo
and
and
add
int3
push
jbe
jo
and
and
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
and
add
mov
push
(bad)
jo
and
and
add
ja
or
and
and
add
ja
or
and
and
add
mov
jg
xchg
and
inc
and
add
ja
ja
ja
jo
and
and
add
addr16
ja
mov
add
add
add
dec
int3
int3
enter
add
add
add
add
(bad)
int3
int3
inc
inc
inc
inc
add
add
add
add
ja
ja
ja
jo
add
add
add
push
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
pop
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
in
or
or
or
or
or
or
or
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
add
or
or
or
or
or
or
or
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
add
or
in
or
or
or
or
or
sub
sub
pop
pop
in
sub
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
in
sub
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
in
sub
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
in
sub
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
in
sub
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
in
sub
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
in
sub
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
add
sub
or
or
or
or
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
in
sub
add
sub
or
or
or
or
sub
sub
add
add
add
add
add
add
add
add
add
add
sub
or
or
or
or
or
sub
add
add
add
add
add
add
add
add
add
sub
sub
or
or
or
or
or
sub
sub
sub
sub
sub
sub
sub
xor
in
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
sub
xor
xor
in
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
sub
xor
xor
in
or
or
or
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
or
sub
sub
xor
xor
in
or
or
or
in
pop
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
or
sub
sub
xor
xor
in
or
or
or
in
pop
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
or
sub
sub
xor
xor
in
or
or
or
in
pop
in
(bad)
cld
cld
cld
cld
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
stc
stc
stc
(bad)
inc
in
or
sub
xor
xor
xor
xor
or
or
or
or
in
pop
in
(bad)
cld
cld
cld
cld
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
stc
stc
stc
(bad)
inc
in
or
sub
xor
xor
xor
xor
or
or
or
or
in
pop
in
(bad)
cld
cld
cld
cld
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
stc
stc
stc
(bad)
inc
in
or
sub
xor
xor
xor
xor
or
or
or
or
in
pop
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
or
sub
xor
xor
xor
xor
or
or
or
or
in
pop
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
or
sub
xor
xor
xor
xor
or
or
or
or
in
pop
in
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
or
inc
in
or
xor
xor
xor
xor
xor
xor
xor
in
or
or
or
in
pop
in
inc
add
inc
(bad)
(bad)
dec
or
(bad)
(bad)
(bad)
dec
add
inc
in
or
xor
xor
xor
xor
xor
xor
cli
or
or
or
or
in
pop
in
inc
(bad)
inc
add
inc
add
add
(bad)
inc
add
inc
in
or
xor
xor
xor
xor
or
or
cli
or
or
or
or
in
pop
in
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
stc
sti
add
(bad)
(bad)
(bad)
cld
inc
pop
in
or
xor
xor
xor
xor
or
or
cli
or
or
or
or
in
pop
in
(bad)
inc
add
add
(bad)
(bad)
stc
stc
add
(bad)
(bad)
(bad)
cld
cld
add
pop
in
or
xor
xor
xor
xor
or
or
cli
or
or
or
or
in
pop
in
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
or
xor
xor
xor
xor
xor
cli
cli
cli
or
or
or
or
in
pop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
pop
in
or
xor
xor
xor
xor
cli
cli
cli
cli
cli
or
or
or
or
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
add
add
add
add
add
add
or
or
or
or
in
or
or
or
or
or
or
or
or
or
or
or
or
pop
cld
add
add
add
add
add
add
pop
pop
or
pop
or
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
add
add
add
add
add
add
pop
or
pop
or
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
cld
add
add
add
add
add
cld
cld
add
cld
cld
cld
cld
cld
cld
cld
in
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
or
or
or
or
or
or
or
or
or
or
or
or
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
loopne
add
pop
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
pop
add
lock
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
or
or
imul
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
or
or
or
sub
in
pop
imul
pop
pop
sub
sub
or
or
or
sub
add
pop
xchg
sub
pop
pop
sub
sub
or
or
or
sub
add
pop
xchg
sub
pop
pop
sub
sub
or
or
or
sub
add
pop
xchg
sub
pop
pop
sub
sub
or
or
or
sub
add
pop
xchg
sub
pop
pop
sub
sub
or
or
or
sub
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
or
or
or
sub
add
pop
pop
pop
pop
xchg
sub
sub
or
or
or
sub
sub
add
add
add
add
add
pop
or
or
or
or
sub
sub
sub
sub
or
or
or
or
add
add
add
add
add
add
add
add
sub
or
or
or
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
xor
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
in
adc
sub
xor
xor
or
or
repz
adc
sub
xor
xor
or
or
cld
(bad)
call
push
pop
(bad)
out
adc
sub
xor
xor
or
or
cld
(bad)
call
push
pop
(bad)
out
adc
sub
xor
xor
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
adc
xor
xor
xor
xor
or
or
nop
out
out
push
cwde
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
xor
xor
xor
xor
or
or
or
outs
sbb
adc
xor
xor
xor
xor
or
or
nop
out
out
jb
or
jmp
outs
push
cmps
lods
mov
adc
xor
xor
xor
or
or
or
nop
out
out
push
cwde
(bad)
mov
(bad)
iret
mov
xor
xor
gs
or
or
nop
out
in
out
out
out
out
out
out
out
out
out
out
out
out
out
out
adc
xor
xor
xor
cli
cli
imul
or
nop
out
mov
mov
mov
mov
in
in
in
in
in
in
in
adc
inc
inc
inc
inc
inc
inc
inc
inc
or
or
nop
out
mov
mov
adc
adc
adc
or
or
or
or
or
or
or
nop
out
test
mov
mov
mov
adc
or
or
or
or
or
or
or
mov
mov
mov
mov
mov
mov
adc
or
or
or
or
or
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
pop
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
dec
xchg
add
sub
add
adc
add
and
add
add
add
add
add
rol
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
js
add
inc
and
ja
inc
add
inc
and
ja
inc
add
inc
and
ja
inc
add
inc
and
and
add
inc
inc
and
inc
or
(bad)
push
and
inc
or
cld
cld
lock
add
cld
cld
cld
lock
add
call
add
call
add
(bad)
(bad)
push
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
(bad)
inc
add
xchg
add
add
add
add
and
adc
add
add
call
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
sub
add
add
add
shl
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
movs
pop
add
aas
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
and
add
add
inc
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
bound
sbb
add
ins
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outs
add
ins
add
add
and
push
add
ins
add
and
inc
add
je
jb
popa
add
je
outs
add
and
data16
ins
add
add
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
dec
add
dec
add
inc
add
inc
add
add
add
and
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
ins
add
add
and
push
add
ins
add
add
je
and
xor
cmp
cmp
xor
sub
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
or
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
push
add
dec
add
pop
add
inc
add
add
pop
add
add
add
and
add
add
push
add
outs
add
add
je
dec
add
ins
add
add
add
cmp
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
or
add
lds
add
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
ds
and
and
and
and
and
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
ds
and
and
and
and
and
and
and
and
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
ins
gs
ins
gs
outs
ins
ins
popa
outs
je
push
imul
cs
imul
and
je
jo
cmp
xor
and
ds
and
and
and
and
and
jb
jae
dec
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
and
and
and
and
and
and
and
and
arpl
imul
and
and
and
and
and
and
and
and
and
and
and
and
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
or
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
and
and
and
and
and
and
and
and
and
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
and
and
and
and
and
and
and
and
and
and
jae
arpl
imul
and
and
and
and
and
and
and
and
cmp
je
jne
je
outs
outs
ds
and
and
and
and
and
and
and
and
and
gs
jb
jo
imul
dec
ins
popa
and
jo
imul
cs
fs
jb
jo
imul
and
and
and
and
and
and
and
and
and
gs
outs
fs
arpl
or
and
and
and
and
and
and
and
and
and
and
gs
outs
fs
je
jae
gs
bound
or
and
and
and
and
and
and
and
and
and
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
and
and
and
and
and
and
and
and
and
gs
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
and
and
and
and
and
and
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
and
and
and
and
and
and
and
and
and
addr16
addr16
or
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
and
and
and
and
and
and
and
ds
and
and
and
and
and
and
and
and
and
and
fs
outs
fs
je
jae
gs
bound
or
and
and
and
and
and
and
and
and
fs
outs
fs
arpl
or
and
and
and
and
and
popa
jae
gs
bound
or
add
add
add
cdq
dec
add
fs
add
cmps
dec
add
ins
dec
add
mov
add
je
add
mov
dec
add
ret
dec
add
test
into
dec
add
fmul
in
dec
add
add
add
cli
dec
add
add
add
or
add
add
add
adc
add
add
add
dec
add
add
add
sub
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
ins
fs
xor
cs
ins
add
push
inc
dec
dec
cs
ins
add
dec
xor
cs
ins
add
push
cs
ins
add
inc
push
xor
cs
ins
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
inc
gs
popa
jbe
inc
imul
add
popa
je
ins
add
inc
imul
dec
gs
gs
jae
jb
add
inc
gs
inc
add
inc
ins
push
push
data16
dec
add
add
add
add
jo
xor
add
or
dec
inc
inc
push
inc
inc
xor
xor
dec
dec
inc
push
dec
or
add
add
add
jns
adc
fidiv
jp
stos
mov
aad
sbb
or
nop
jge
adc
push
pop
(bad)
shr
add
add
in
xchg
dec
es
aaa
icebp
or
dec
mov
mov
adc
leave
adc
add
test
(bad)
and
out
sti
(bad)
fidivr
mov
js
out
repz
in
cmp
jb
adc
jb
shl
stos
out
xchg
and
jns
lds
cmp
mov
rcr
adc
xor
xchg
jge
dec
mov
daa
adc
pop
idiv
or
jl
cli
fild
lahf
inc
pop
dec
nop
and
imul
jg
popa
pop
xor
(bad)
ror
repz
stos
sub
cmps
sub
push
movs
ret
pop
sbb
jb
mov
jecxz
and
push
dec
jb
jmp
dec
inc
shl
das
xor
sub
dec
cli
jnp
movs
loope
imul
arpl
cmp
jg
(bad)
add
pushf
mov
and
jb
sar
daa
push
fucomip
sbb
movs
mov
repnz
not
inc
inc
jle
mov
(bad)
mov
xor
sbb
shl
aas
(bad)
mov
dec
cli
mov
jnp
mov
int3
sbb
xchg
mov
cmps
std
jnp
jnp
cmc
ss
jnp
aam
mov
int
dec
xchg
xor
sahf
cmp
xchg
or
inc
jnp
cmp
xor
add
mov
into
int3
js
punpcklwd
cli
dec
jl
add
push
stc
idiv
xchg
mov
lahf
mov
add
fiadd
lock
jbe
out
out
sbb
sub
rol
adc
mov
fisttp
cmp
icebp
scas
bound
sub
mov
adc
cmps
int3
dec
imul
add
mov
(bad)
xchg
jmp
adc
jb
mov
cmp
jge
ins
fisttp
push
mov
cs
inc
xchg
xchg
outs
xchg
outs
push
pop
push
push
inc
jp
cmp
jne
jp
or
ins
sub
dec
xlat
and
sbb
xchg
xchg
sbb
sbb
dec
mov
or
xor
cmps
fsub
xchg
mov
repz
imul
sbb
ss
mov
xchg
mov
xor
mov
jmp
test
push
test
inc
xchg
pop
pop
dec
jl
and
lods
and
daa
dec
test
push
outs
dec
rcl
adc
call
int3
rcl
mov
imul
into
xchg
ficom
inc
pop
lods
movs
aaa
jmp
push
xor
bound
xor
xor
xchg
sub
xor
out
ins
cmps
or
retf
cli
sbb
shl
sub
outs
retf
mov
xchg
jl
sahf
(bad)
jno
rcr
pop
je
das
push
cmp
(bad)
in
mov
sub
mov
xlat
mov
(bad)
icebp
les
xchg
cmp
xlat
stos
sbb
jge
icebp
sbb
jmp
xlat
cmp
cmp
in
je
cmp
sti
cmp
pushf
das
scas
jne
xlat
cmp
jbe
bound
mov
pop
div
cmp
in
mov
lahf
jmp
mov
imul
sub
mov
scas
xchg
not
data16
ja
in
and
pop
jge
jnp
pop
jg
jmp
scas
jae
lods
jbe
xor
inc
outs
test
pop
out
xchg
mov
xor
jae
(bad)
(bad)
repz
push
cmp
jae
cmp
bnd
push
dec
push
aaa
in
cmp
cld
aam
icebp
sub
lahf
pop
xor
mov
jecxz
adc
jae
fadd
(bad)
fucom
lods
jae
pop
out
mov
fnstcw
sbb
(bad)
iret
and
(bad)
and
inc
jb
inc
dec
(bad)
(bad)
mov
(bad)
aam
push
jmp
addr16
lods
out
jne
cmp
sahf
jns
sahf
add
js
and
cmc
sub
mov
fsubr
(bad)
xlat
(bad)
scas
ins
ja
sahf
and
jp
jmp
dec
retf
mov
outs
neg
jnp
mov
repz
cli
sbb
out
pop
out
arpl
sbb
jecxz
xchg
cwde
lock
fild
fld
xor
das
int
mov
cdq
lock
mov
outs
bound
les
jmp
sahf
sub
clc
jp
les
fwait
daa
mov
les
popf
fs
rcr
xchg
into
xor
rol
fs
in
in
jmp
mov
dec
mov
repz
cmp
sti
dec
stc
cmp
daa
jmp
jl
ds
int
pop
int
mov
inc
jno
dec
rcl
jno
pop
rcl
mov
sub
push
(bad)
call
(bad)
mov
fstp
sbb
push
push
xor
fimul
pop
ret
mov
xchg
scas
mul
sti
cmp
cli
cmp
mov
std
fsub
cld
cmp
sti
jns
neg
lds
cmps
lahf
xchg
hlt
div
neg
fidivr
push
jmp
push
call
(bad)
mov
test
lds
mov
jmp
(bad)
clc
leave
mov
jae
xor
adc
pop
adc
pop
nop
mov
inc
dec
ins
shl
je
xor
aas
xor
cs
cli
rcr
sub
xlat
nop
in
cmp
inc
sbb
mov
fnsave
ins
popa
mov
mov
xchg
inc
cmp
or
movs
sti
xor
in
outs
or
fistp
push
inc
dec
sub
lahf
cmps
(bad)
fwait
jbe
std
mov
std
ror
push
ja
cmp
jg
jg
repz
push
mov
sub
jg
pushf
push
jecxz
mov
cmc
xor
lahf
icebp
jp
mov
pop
mov
jecxz
xor
xchg
jg
jnp
shr
(bad)
mov
mov
dec
lock
into
loopne
in
call
xlat
iret
ins
fistp
repz
int3
sub
pop
and
cmc
jno
lods
dec
(bad)
iret
cli
je
lods
fwait
mov
outs
mov
cli
mov
(bad)
xlat
movs
jmp
ja
jmp
fisub
add
sti
inc
(bad)
fnstcw
out
lahf
cmp
mul
test
dec
aaa
test
cli
adc
mov
mov
xor
out
icebp
jae
aaa
int3
icebp
(bad)
iret
cdq
push
aaa
addr16
gs
xchg
scas
cmp
aam
push
aam
rol
or
jmp
rcr
mov
push
ret
ret
out
or
pop
push
popa
or
adc
popf
cmp
ds
loop
mov
jne
xchg
pop
out
jbe
dec
cmps
out
dec
popf
xchg
adc
jns
cli
jns
jne
or
push
ja
pop
inc
test
ds
jge
xchg
mov
ins
pop
loope
push
repz
popf
pop
sbb
lahf
fbstp
mov
(bad)
fst
xchg
push
or
cmps
cs
das
cmp
and
mov
cs
jle
lahf
ss
inc
mov
jg
sub
(bad)
mov
adc
inc
jne
mov
pop
je
mov
outs
pop
push
fnstcw
hlt
push
adc
jnp
adc
outs
mov
mov
add
mov
imul
mov
mov
sub
sub
pop
(bad)
das
(bad)
fs
loop
cmc
mov
sub
xlat
loop
test
mov
mov
mov
mov
or
sbb
jne
inc
xchg
push
cli
mov
mov
jecxz
cmp
test
(bad)
push
adc
cs
cmp
fwait
in
push
xchg
pop
arpl
jno
add
adc
add
mov
cs
fsubr
pushf
cmp
test
jns
jecxz
pop
mov
cmp
mov
jl
and
and
and
jno
inc
repnz
shl
pop
or
sbb
int3
cmp
mov
imul
mov
and
cmp
pop
ja
push
xchg
in
add
lds
leave
cld
(bad)
in
add
mov
dec
(bad)
popf
pop
es
push
push
mov
lahf
mov
loopne
and
mov
xor
in
and
mov
push
(bad)
mov
in
add
das
sbb
retf
xchg
push
and
imul
(bad)
and
jmp
aas
mov
outs
ja
jge
mov
push
shl
jno
cdq
add
sbb
in
jl
mov
xchg
in
add
sub
pop
fidivr
stc
in
retf
scas
mov
out
call
jp
and
jecxz
aam
cmps
jle
and
out
aam
lods
test
sub
(bad)
xchg
nop
jbe
arpl
std
add
(bad)
shr
std
and
xor
mov
(bad)
jmp
(bad)
cmps
lgs
dec
aam
mov
mov
int3
inc
mov
or
pop
mov
xor
pop
pusha
xchg
xchg
xchg
ror
cwde
jb
inc
sub
hlt
or
pushf
call
xor
mov
loopne
cdq
mov
data16
xchg
data16
int3
or
call
ret
adc
mov
(bad)
mov
adc
inc
repnz
mov
je
retf
xchg
pop
mov
push
push
lods
int3
cmp
or
inc
call
jbe
push
mul
outs
mov
not
pushf
popf
cmp
push
dec
jmp
jb
pop
int3
fnstcw
cmps
dec
call
cmp
xor
jo
xlat
je
div
fstp
mov
repz
dec
int3
sti
push
push
fimul
pop
repz
cmp
(bad)
out
out
and
scas
or
scas
dec
int3
aas
push
xchg
jg
pusha
(bad)
jmp
repnz
ja
add
dec
sub
mov
add
add
mov
stos
cmp
and
push
in
pop
push
pop
ds
retf
sbb
scas
mov
(bad)
aad
adc
(bad)
hlt
loopne
fwait
daa
push
fistp
stos
mov
sub
dec
sub
pop
push
js
pusha
popa
iret
mov
(bad)
out
push
(bad)
and
arpl
call
jmp
les
fstp
xchg
scas
and
pop
test
(bad)
loope
mov
ins
imul
jne
xlat
lea
mov
lods
repz
pop
aaa
loope
jne
fcmovbe
dec
mov
mul
dec
dec
pop
pop
test
pop
push
mov
cli
stos
jmp
fcmovnbe
iret
mov
popa
push
mov
cmp
xchg
adc
and
sbb
xabort
lea
sbb
fnstsw
mov
push
pop
xchg
xchg
push
mov
push
xchg
push
push
xchg
imul
inc
pop
shr
jnp
imul
push
mov
dec
push
movs
shr
ins
jns
mov
dec
mov
sahf
out
jp
dec
jbe
jno
es
mov
mov
shr
(bad)
jae
mov
mov
retw
stos
fwait
dec
ins
fwait
pandn
jl
fdivp
sbb
in
movs
sub
mov
outs
stc
dec
fist
inc
aas
push
ret
ds
xchg
hlt
les
int
daa
sub
fisubr
in
jnp
mov
outs
jge
imul
sub
pop
fcmovnbe
repz
data16
mov
cmp
jnp
xchg
xchg
pop
jge
dec
fist
dec
outs
mov
imul
push
ins
mov
ins
fstp
jp
sbb
idiv
mov
mov
std
mov
lahf
cli
xchg
jge
aaa
jmp
cmc
push
cmp
clc
jmp
not
mov
in
pusha
sub
pushf
fsub
aam
ret
in
push
push
out
mov
cmp
fdivr
loope
into
dec
in
cmp
mov
inc
fisubr
fisub
(bad)
jbe
lods
sti
fcmovu
dec
icebp
pushf
mov
jns
mov
push
push
das
cmp
sbb
pop
mov
ret
lds
jno
leave
pop
loop
cs
sub
jae
or
adc
addr16
cmp
mov
pop
ret
xchg
lods
or
fst
fs
gs
xchg
xchg
and
(bad)
jns
sub
sbb
pop
retf
sub
mov
ja
jmp
int3
shl
inc
dec
jmp
lahf
ds
cmps
or
aas
jge
(bad)
rol
pop
iret
add
xlat
lahf
ss
jp
jb
dec
daa
ja
movs
jge
mov
mov
or
cs
cdq
adc
int3
jmp
lahf
jns
std
cdq
mov
aas
repz
mov
push
shr
not
neg
ja
imul
(bad)
(bad)
out
or
sahf
out
cmp
aaa
in
imul
cmp
out
mov
mov
jecxz
mov
imul
fisubr
sti
in
mov
add
jmp
fidiv
sar
dec
out
mov
out
sti
out
(bad)
mov
or
xchg
retf
jle
push
(bad)
pop
pop
ss
ins
test
in
sar
xor
mov
and
push
movs
jae
dec
out
dec
out
call
cmps
xchg
mov
pop
out
pop
push
ds
repnz
xchg
retf
in
fnstcw
imul
mov
(bad)
jmp
mov
xchg
mov
mov
aas
addr16
std
cld
sub
ret
adc
mov
inc
in
mov
icebp
dec
push
and
ds
pop
jne
in
add
cs
retf
push
dec
cmp
int
jae
push
out
jbe
loopne
rcl
shl
ss
sub
pop
mov
stos
(bad)
retf
imul
sub
push
pop
mov
pop
pop
push
mov
xchg
sub
or
imul
push
push
push
push
sbb
xor
cmp
sbb
aaa
out
fcomp
outs
in
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
(bad)
addr16
lea
addr16
hlt
sbb
cld
out
or
dec
outs
movs
shr
ds
cli
mov
jnp
and
cmp
sbb
outs
in
adc
push
arpl
adc
push
dec
mov
in
mov
push
jmp
or
test
adc
jecxz
bound
and
sub
imul
(bad)
ret
call
pop
sbb
xchg
lahf
test
pop
cmp
jmp
dec
adc
sbb
stc
addr16
fld
sahf
and
push
dec
pop
inc
data16
push
mov
mov
or
cmc
std
ja
mov
jb
jo
int3
xchg
in
(bad)
call
sub
or
ds
in
jnp
imul
icebp
cld
mov
rep
inc
js
out
(bad)
cmc
enter
pop
mov
in
mov
enter
test
push
jns
mov
loopne
aaa
out
fcomp
int3
lea
fcomp
int3
lea
fcomp
int3
lea
xor
inc
sub
sahf
mov
and
mov
bound
(bad)
mov
popa
push
test
mov
add
ret
xor
sbb
cmp
fbld
jne
icebp
aaa
push
pop
inc
gs
jns
pop
cdq
je
out
pusha
mov
xor
aam
xor
cmp
cwde
cmp
ins
lea
stos
cmp
std
cmp
and
std
jo
mov
jge
popa
clc
pop
outs
sbb
repz
outs
nop
cdq
push
push
call
idiv
stos
sbb
dec
inc
pop
mov
jmp
push
sub
jp
sbb
pop
ret
inc
scas
xchg
jnp
ja
sbb
(bad)
sbb
mov
es
call
mov
lock
call
mov
(bad)
nop
mov
nop
ss
rcl
jmp
lds
leave
cs
and
aaa
clc
mov
int
xchg
in
(bad)
popa
cmovae
cli
inc
bound
clc
push
jecxz
cmp
dec
shr
leave
xchg
imul
es
jno
sbb
call
pop
cmps
mov
fmul
je
xchg
or
into
cmc
je
mov
and
inc
dec
cmp
addr16
mov
inc
mov
xor
cmp
inc
jge
cs
mov
inc
mov
test
rcr
movs
cmp
xchg
sahf
shl
mov
mov
les
mov
out
xor
push
rcl
sbb
jecxz
outs
inc
ret
aaa
pop
outs
es
aaa
nop
cmp
mov
jmp
inc
(bad)
cmp
inc
ja
mov
xor
mov
add
fnstenv
jo
cmps
mov
fldenv
xchg
cmps
unpckhps
mov
stc
in
mov
int3
(bad)
jnp
imul
xchg
mov
(bad)
mov
les
dec
cmp
xchg
pop
nop
loope
add
and
pop
sub
cli
mov
xor
stos
adc
inc
adc
xchg
xchg
aaa
sbb
xchg
xor
inc
xchg
or
mov
rol
jae
popa
inc
or
loop
xor
add
nop
mov
push
rol
xor
xchg
jbe
ds
ror
jg
jne
xor
sbb
xlat
aam
fs
mov
sbb
fst
xor
sbb
clc
movs
sbb
lods
xor
mov
loopne
enter
mov
cld
push
cmp
xchg
add
test
and
test
mov
xchg
push
ficomp
adc
sbb
cmps
es
adc
imul
icebp
fisubr
fidivr
and
push
int
icebp
scas
cmp
add
or
ins
out
in
mov
aaa
dec
(bad)
retf
push
call
pop
or
push
mov
add
or
mov
dec
les
out
mov
adc
fisttp
jne
nop
xchg
push
jmp
or
jmp
into
(bad)
fmul
mov
fcom
jmp
xchg
lods
ret
std
lock
aaa
in
jp
rcr
js
add
xchg
clc
mov
mov
sub
push
addr16
pop
movs
clc
xor
popa
aam
(bad)
lahf
int3
fnsave
push
ficomp
dec
jne
xchg
call
jmp
mov
jmp
test
aad
pop
sub
or
aas
mov
xchg
sub
mov
jno
adc
cs
sbb
(bad)
jge
ror
repz
sbb
sbb
push
in
push
test
jmp
cmps
inc
xsaves
and
lock
lds
xlat
jnp
dec
sub
pop
cmp
jmp
fild
shl
movs
mov
xchg
icebp
jmp
mov
add
sub
mov
pop
mov
stos
xor
jne
add
cmp
mov
retf
add
add
in
sbb
pop
xor
cmps
cmps
into
shl
mov
mov
and
inc
and
bound
inc
push
mov
adc
loop
cmp
mov
arpl
imul
jns
inc
les
push
inc
out
mov
clc
xchg
adc
mov
adc
adc
mov
js
pusha
add
es
sbb
scas
cmp
ret
fadd
mov
jbe
loopne
mov
movs
aas
loope
test
xchg
push
and
aaa
repnz
clc
ins
fimul
inc
mov
push
aaa
repnz
and
or
sahf
add
add
add
adc
loopne
loopne
shl
ror
mov
fsubp
jge
dec
add
adc
and
xchg
ror
add
bsf
clc
test
das
imul
inc
mov
mov
adc
xchg
mov
cwde
lea
inc
cwde
push
adc
jle
xchg
xchg
xor
cdq
sbb
inc
dec
or
dec
inc
push
and
push
or
push
cs
or
adc
fwait
sub
push
mov
pusha
push
daa
push
xchg
mov
pop
shl
cli
mov
sbb
stc
shl
mov
fcmovnbe
fs
push
out
xor
push
(bad)
mov
int
xchg
add
sub
add
push
inc
jle
jb
jg
leave
adc
or
jno
and
das
dec
fisubr
and
mov
std
sbb
in
and
mov
ffreep
lds
das
leave
lods
or
jl
mov
mov
pop
shl
sti
and
mov
test
mov
adc
stos
in
and
ror
into
xchg
add
adc
arpl
daa
ficom
stos
ficomp
loopne
jmp
ror
shl
mov
dec
(bad)
ror
stos
fiadd
stc
repnz
(bad)
into
adc
ja
repnz
popa
and
push
sub
xor
rcl
adc
leave
sub
int
iret
fisub
add
or
sub
jno
retf
push
shr
stos
(bad)
test
xchg
inc
sbb
out
cmp
out
in
inc
frstor
int
les
fs
or
add
mov
sbb
and
mov
in
scas
daa
cmp
sbb
sub
push
push
mov
jp
rcl
or
rcl
push
mov
cs
out
mov
hlt
lock
xor
fs
xchg
test
xor
(bad)
cmp
ret
and
and
add
add
add
imul
enter
push
out
stos
outs
(bad)
and
push
inc
pop
mov
test
or
cmc
mov
pop
push
cmp
les
int3
sbb
ss
mov
dec
nop
das
out
dec
mov
(bad)
out
call
dec
inc
(bad)
data16
xlat
and
stc
mov
xlat
in
jmp
call
mov
imul
pusha
mov
jne
sbb
bound
xchg
or
mov
aas
mov
and
xor
pop
popf
nop
pushf
fwait
pop
cwde
xor
jnp
test
rcl
dec
(bad)
jg
mov
enter
fld1
add
sbb
mov
icebp
push
test
sbb
sub
scas
adc
test
jb
xchg
rol
pop
sbb
pop
fsub
mov
or
retf
mov
fldl2t
cmp
sub
mov
cmc
jb
repnz
pop
scas
inc
lods
mov
ret
cld
push
pop
xchg
or
(bad)
iret
jp
add
test
add
jecxz
jp
rcr
pop
pop
jle
movs
jbe
fstp
icebp
ins
test
addr16
jnp
push
and
or
mov
mov
outs
out
in
jb
retf
idiv
inc
xchg
pop
sub
mov
inc
or
loope
mov
xor
sub
xchg
sub
pop
dec
jge
test
push
cmp
sub
cmp
sub
dec
in
mov
cmp
ins
in
sub
mov
adc
into
mov
mov
cmp
xor
cmp
jg
lock
mov
mov
in
pop
xchg
in
jg
xchg
mov
cmc
jg
das
fsubr
add
jns
jo
add
fst
cwde
adc
in
idiv
dec
mov
or
dec
jne
ds
cmps
adc
push
push
push
pop
neg
int
push
xchg
or
xor
int3
pusha
adc
and
out
pop
cmps
repnz
inc
cmp
retf
ds
lods
push
xchg
fbstp
addr16
or
stos
(bad)
mov
(bad)
hlt
adc
sbb
pop
paddq
aas
inc
push
jnp
call
and
mov
jg
ds
bound
lea
sbb
fwait
xor
xor
cmps
(bad)
mov
inc
add
mov
(bad)
or
jo
jl
inc
xchg
cdq
push
(bad)
icebp
jbe
fistp
clc
jmp
cmc
in
fs
fwait
jb
rol
aaa
fistp
stc
imul
mov
pop
inc
adc
bound
adc
ror
shl
xchg
inc
xchg
xchg
jmp
fld1
in
sub
and
mov
pop
sub
jl
xchg
adc
hlt
inc
mov
bound
push
mov
push
dec
jmp
push
add
es
push
mov
movs
pop
inc
pop
and
ins
xchg
test
popa
pop
pop
jecxz
cwde
dec
mov
jnp
xchg
stos
xlat
xor
outs
xchg
cmp
shl
pop
fcom
inc
inc
sbb
pop
movs
push
mov
jne
imul
pop
cs
pop
outs
lock
stos
and
mov
cmp
inc
movs
mov
push
pop
sub
test
sbb
jmp
mov
fcmove
pop
js
arpl
push
aad
arpl
int3
sbb
outs
jle
mov
push
push
jmp
fstp
movs
stos
jne
push
xchg
es
in
dec
sbb
inc
sbb
iret
push
test
pop
loop
mov
mov
scas
not
fucomp
xlat
or
mov
xlat
xchg
ret
cmp
call
push
pushf
jge
push
ret
lea
stos
addr16
fstp
mov
cmps
and
std
pop
mov
push
loop
pop
cdq
mov
cdq
inc
xor
fs
and
les
and
rcr
jnp
mov
jmp
push
push
cmp
push
push
cmp
push
push
xor
push
aad
xor
out
cld
xor
jno
adc
aad
out
mov
pop
test
push
stc
jne
cmp
mov
and
cli
mov
gs
sbb
dec
add
jo
add
cmp
xor
cmp
push
mov
popf
mov
lock
repnz
retf
mov
data16
into
mov
fiadd
sar
popa
leave
ret
repz
ret
in
xor
rol
push
sbb
test
cmp
rcl
pop
int
xchg
inc
jge
mov
loopne
sub
inc
fnsave
nop
inc
leave
out
jmp
scas
xor
ret
cli
or
jbe
out
sbb
in
jle
(bad)
xchg
and
jns
scas
cli
or
mov
add
(bad)
out
sub
repnz
cli
sub
addr16
into
mov
sub
and
mov
adc
push
fwait
lods
addr16
mov
imul
push
cmp
add
cdq
xchg
fcmove
mov
sbb
xor
ror
sbb
sbb
dec
cmp
ds
test
pusha
pop
rol
repnz
pop
sbb
mov
jmp
and
(bad)
repnz
jl
call
movs
or
scas
xchg
das
pusha
sub
mov
repnz
pop
in
inc
retf
add
sbb
dec
pop
inc
jmp
xor
dec
pop
mov
jno
sub
int
jae
inc
int
jb
add
add
neg
cld
push
cmps
dec
jmp
rol
xor
dec
stos
shr
ficom
mov
mov
and
aaa
int3
pop
cmp
cdq
aad
jo
or
ins
adc
test
out
xchg
cwde
adc
add
jnp
adc
mov
jne
dec
mov
cmc
xchg
xchg
sahf
aas
mov
mov
ret
iret
xor
mov
(bad)
test
mov
and
or
adc
cmps
arpl
dec
retf
enter
loope
sbb
xchg
cdq
cmc
mov
mov
adc
pop
nop
aas
shr
sub
or
adc
inc
call
pop
into
stos
popf
not
mov
mov
push
jns
bound
les
mov
test
or
das
lock
in
je
mov
call
and
cmps
pop
mov
inc
mov
fisttp
mov
ins
int
cmp
jmp
(bad)
or
int3
fcom
je
jbe
push
repnz
add
imul
jae
mov
pusha
lea
ret
dec
out
out
sahf
sub
out
pop
loop
mov
test
les
inc
push
lock
jbe
out
and
in
cmp
push
into
pop
xchg
or
sar
mov
jg
leave
arpl
mov
mov
jb
sbb
mov
stos
adc
repnz
pop
test
addr16
xchg
clc
dec
inc
icebp
mov
inc
mov
dec
push
int
ret
sbb
and
pop
jl
xor
sbb
xor
dec
es
fld
fcom
jp
adc
inc
xchg
xor
movs
(bad)
test
repnz
ss
cmp
lods
pop
out
sub
push
ror
dec
or
mov
sub
push
sbb
les
movs
or
push
pop
and
daa
test
mov
icebp
stc
jae
sbb
test
adc
enter
adc
test
leave
pusha
(bad)
sub
adc
jg
xchg
xchg
iret
repnz
cli
xor
les
jmp
lahf
imul
add
movs
test
or
fiadd
push
gs
pop
sub
out
jmp
mov
fnstenv
loopne
in
(bad)
js
cdq
adc
stc
arpl
fs
inc
xor
out
inc
icebp
xor
lods
sub
or
xchg
push
popa
cmc
fmul
and
ins
dec
push
inc
xor
out
or
and
and
dec
push
(bad)
jno
mov
mov
call
adc
addr16
xchg
ins
in
mov
test
mov
dec
pop
(bad)
(bad)
mov
push
div
adc
loop
mov
retf
push
mov
sbb
xchg
cwde
jb
sti
popf
xor
sub
vaddsubpd
dec
loopne
shr
mov
inc
push
mov
ins
dec
add
ret
dec
cmp
movs
push
std
inc
mov
wrmsr
int3
jns
pop
push
sub
mov
inc
outs
mov
adc
jae
push
inc
push
sbb
push
pop
push
or
popa
das
ins
pop
lea
dec
scas
jbe
outs
in
call
or
fild
lds
iret
ror
test
pop
mov
ss
mov
pop
sub
stc
inc
adc
xor
sbb
mov
icebp
scas
ins
ror
js
mov
lods
inc
xlat
add
pusha
fisttp
fdiv
pop
jg
cmc
adc
mov
mov
xor
ret
imul
xchg
inc
ret
cmps
mov
dec
jecxz
out
jb
in
clc
cmp
(bad)
out
xchg
xchg
leave
inc
push
shr
dec
pop
dec
inc
lds
sbb
inc
cmp
ret
sti
xlat
adc
cmp
popa
xchg
mov
mov
imul
and
and
adc
test
cmp
outs
cmps
cmc
jnp
mov
shr
icebp
inc
cld
and
push
outs
les
jl
xchg
inc
sahf
xchg
repz
aaa
into
inc
mov
aaa
pop
js
out
fwait
add
jge
sti
xchg
and
mov
inc
arpl
aam
mov
aad
in
aad
mov
(bad)
push
jo
push
jecxz
(bad)
push
adc
jp
dec
mov
mov
enter
cmps
pop
mov
outs
ret
retf
pop
out
daa
(bad)
adc
dec
stos
es
pop
cs
xchg
movs
add
jmp
rcl
enter
or
sbb
xor
rcr
jns
movaps
in
cmp
pusha
repnz
cld
in
stos
adc
test
sub
icebp
push
sbb
push
and
mov
inc
mov
cmc
ins
mov
pop
push
(bad)
in
xchg
or
stos
dec
retf
and
ror
mov
pop
mov
div
mov
cmc
fld
(bad)
js
xlat
mov
stos
fsub
scas
std
add
outs
pushf
mov
ds
into
or
adc
pop
ret
lea
outs
sbb
xor
mov
push
cwde
fdiv
adc
inc
test
push
test
aad
lods
jno
ins
mov
movs
mov
dec
inc
sub
mov
sub
and
movs
sub
and
int
sbb
or
jns
push
xor
jl
loopne
dec
inc
movs
push
jo
mov
ror
mov
add
data16
xor
jo
retf
cmp
cmp
xchg
lods
das
cmps
pop
and
into
fist
mov
xor
ins
adc
jmp
push
adc
rol
aam
jecxz
sub
nop
xchg
pop
and
js
loop
push
cwde
fcmovu
(bad)
and
imul
and
pusha
ins
mov
repnz
jl
stos
(bad)
push
cmp
fdivr
loop
cwde
mov
push
xor
pop
xor
int3
aad
mov
and
dec
pusha
outs
retf
rol
mov
xchg
das
cli
idiv
and
mov
add
pop
xchg
xor
and
mov
mov
lds
inc
fdiv
stos
xor
dec
fisub
jne
pop
cmps
cmc
pop
fld
mov
or
stos
aas
jl
push
fmul
cwde
and
sbb
stos
test
mov
jb
sbb
cs
popa
ret
pop
mov
mov
push
test
jmp
arpl
pop
fld
pop
pop
xor
xlat
std
lea
inc
add
xchg
xor
sub
retf
fucomip
daa
mov
mov
fimul
sub
in
pop
mov
bound
add
pop
push
ja
jae
push
fstp
mov
fiadd
in
hlt
inc
adc
mov
push
popa
and
inc
lods
(bad)
mov
push
mov
push
repz
rcl
mov
push
aad
xor
das
jae
movs
push
cli
xor
enter
(bad)
jbe
or
call
mov
push
jns
jmp
jmp
mov
add
mov
and
or
lea
jae
imul
push
cli
mov
or
cld
sub
inc
adc
mov
and
mov
push
dec
fisttp
vpandn
(bad)
test
sub
lock
sbb
cli
popf
retf
mov
or
addr16
pop
xchg
mov
adc
movs
jne
scas
add
in
add
stos
clc
aaa
xchg
cld
js
das
or
scas
out
add
int
mov
in
pop
repz
dec
mov
adc
cli
xchg
ds
dec
pop
rcr
lods
and
dec
xor
xchg
test
into
sub
inc
test
inc
mov
fisttp
push
pop
cmp
pop
mov
add
addr16
cmp
movs
mul
nop
and
fst
(bad)
jmp
push
pop
pop
xor
imul
mov
cmp
sub
dec
pop
mov
xor
mov
fs
xor
das
pop
loope
into
fld
lds
bound
jecxz
add
pop
(bad)
xchg
ds
xor
xchg
retf
stc
or
or
sar
mov
push
xchg
xor
ss
add
lods
pushf
mov
mov
cld
pop
scas
fbld
xchg
leave
xchg
test
adc
dec
xor
jne
push
repnz
cmp
jge
inc
stc
loopne
movs
test
fwait
cmc
out
inc
loop
xor
push
sbb
loopne
add
sbb
jecxz
add
rol
jo
add
repz
xor
(bad)
cmp
jg
fs
ja
add
lea
lahf
fwait
mov
pop
and
dec
and
clc
push
cwde
aam
ror
test
adc
das
inc
mov
mov
jmp
(bad)
adc
enter
push
mov
(bad)
pop
(bad)
enter
xchg
mov
mov
lods
mov
mov
push
lds
pop
test
mov
scas
and
adc
add
shl
stos
scas
sub
fnsave
and
xchg
scas
cli
pop
adc
sar
sub
into
inc
pop
jnp
sub
sti
mov
mov
movs
ret
das
mov
imul
and
js
mov
clc
test
nop
cdq
mov
cmp
lods
mov
test
dec
(bad)
mov
dec
lods
jnp
xchg
xor
(bad)
mov
loop
rcl
and
pushf
pop
bound
and
xor
mov
xchg
mov
or
xor
mov
inc
dec
adc
xor
pushf
aad
ret
xor
bound
lahf
imul
pop
push
clc
mov
lods
leave
inc
stos
fiadd
lds
jns
hlt
push
outs
mov
xor
xor
fistp
scas
popa
sub
dec
(bad)
mov
sbb
jae
xor
rcr
fiadd
push
xchg
call
repnz
mov
adc
mov
and
sahf
push
mov
test
scas
sahf
outs
arpl
outs
imul
stc
adc
std
adc
and
xchg
push
and
adc
(bad)
fwait
push
dec
dec
xor
sti
imul
fldcw
test
clc
add
pop
mov
mov
rcl
movs
jmp
inc
aaa
dec
push
es
inc
inc
fbstp
(bad)
call
xchg
mov
mov
stos
or
dec
fnstenv
and
xor
sub
mov
sbb
or
in
xchg
jo
into
adc
popf
jbe
xor
jbe
es
cmp
repz
iret
lahf
ret
lahf
jo
sahf
pusha
xchg
ins
popf
pop
bound
pop
cmp
mov
lahf
inc
sbb
cmp
pop
das
mov
jmp
ins
sbb
jl
les
iret
mov
xchg
pop
jbe
jae
inc
mov
mov
fmul
xchg
sbb
inc
mov
jmp
pop
popa
lea
lods
jno
cs
sub
jecxz
cmps
test
or
test
mov
cmc
fisttp
in
mov
add
pop
jle
xor
mov
adc
mov
cmc
call
sti
mov
mov
fist
repz
or
shr
in
pop
mov
ret
jb
adc
mov
scas
or
xchg
push
cmps
xlat
xchg
xchg
lock
bound
enter
sub
icebp
xor
(bad)
retf
add
cmps
inc
adc
pop
cmp
mov
mov
and
or
mov
mov
nop
ins
loop
lock
mov
xor
aas
popf
mov
mov
loope
xchg
and
pop
jno
cmp
in
sbb
shl
clc
mov
(bad)
cdq
mov
and
je
sbb
sbb
sub
pop
dec
sbb
cld
mov
das
pusha
jne
cs
pop
pop
push
out
popfw
movs
mov
adc
sbb
fwait
xchg
cmp
into
mov
test
push
inc
call
retf
fs
xor
inc
adc
lahf
dec
adc
pop
sbb
or
xchg
icebp
jbe
dec
sbb
inc
(bad)
jmp
fs
add
xor
es
out
sbb
mov
xchg
arpl
mov
xlat
sbb
or
add
movs
cmp
popa
ds
inc
int
outs
popa
add
aam
mov
push
lds
cmc
daa
ja
sbb
in
imul
aas
idiv
imul
es
add
ret
pop
lods
jmp
ror
sar
mov
inc
push
ja
imul
leave
adc
push
push
jg
xchg
retf
les
cdq
mov
add
add
ja
repnz
sti
push
hlt
dec
sbb
in
xchg
div
ins
cs
shl
aaa
cmc
mov
xor
push
inc
fs
inc
es
xchg
mov
add
add
(bad)
ins
mov
add
scas
jno
push
mov
cmc
js
sbb
or
mov
jns
xchg
sbb
scas
out
sbb
adc
daa
clc
and
xor
adc
shl
retf
into
adc
or
movs
(bad)
(bad)
std
or
sub
xor
add
push
adc
or
scas
or
sbb
mov
pop
in
xchg
and
push
(bad)
and
jmp
imul
jmp
mov
enter
inc
adc
add
sub
cmps
sub
xor
maxps
ror
sbb
movs
xchg
pusha
scas
dec
add
hlt
adc
jbe
push
call
call
and
xchg
jge
fild
jae
push
outs
shl
std
ja
xchg
jmp
outs
mov
rcr
sahf
cmp
aam
fist
std
paddw
xor
pushf
xchg
mov
not
hlt
neg
pop
inc
fst
(bad)
pop
adc
adc
adc
repz
xlat
scas
arpl
in
fdivrp
xchg
mul
test
aaa
pop
inc
std
aas
jmp
ss
(bad)
cld
cld
cli
mov
shl
sbb
in
sti
mov
push
pop
inc
dec
(bad)
jge
fs
shl
xor
mov
add
retf
cmp
ror
leave
ins
nop
ret
daa
add
or
das
and
es
mov
jne
inc
es
sbb
pop
inc
in
xor
cmp
and
sbb
repnz
sub
test
jb
mov
and
mov
adc
fwait
dec
sahf
retf
push
hlt
cwde
mov
lock
mov
stos
repz
pop
jne
mov
int
cmc
cmp
movs
out
inc
jecxz
das
ss
(bad)
adc
in
loopne
into
(bad)
fisttp
enter
je
stc
or
and
sbb
repnz
hlt
mov
je
dec
pop
mov
fnsave
bound
cdq
lahf
push
nop
imul
fsubr
(bad)
fld
xor
inc
fisubr
inc
xor
nop
adc
push
push
push
and
dec
jo
mov
lock
retf
or
ficomp
sub
inc
ins
push
push
popf
iret
or
fidivr
sub
mov
or
repz
mov
pop
xchg
in
mov
push
add
or
sbb
sub
ret
rcr
pop
cmp
inc
test
pop
pop
push
ror
jne
adc
xchg
out
call
adc
xchg
mov
push
mov
mov
mov
pop
pop
inc
cmp
aas
mov
or
sub
cmp
dec
retf
mov
mov
ins
(bad)
movs
mov
test
sbb
adc
pop
test
fld
and
pop
jmp
imul
movs
out
dec
cli
mov
push
adc
mov
arpl
in
inc
and
loop
sub
imul
cmps
in
mov
mov
adc
xchg
into
lahf
les
xchg
lea
stos
mov
retf
sbb
mov
sbb
js
cmp
mov
mov
and
in
add
fsub
mov
xor
ins
mov
xchg
sub
jecxz
or
test
pop
mov
and
lock
push
push
cmp
cs
dec
inc
dec
sub
dec
rcl
mov
sub
ins
inc
xor
add
sub
cmps
mov
cli
jno
loope
and
in
icebp
lahf
adc
(bad)
in
data16
fadd
cs
call
lds
cli
ret
mov
add
add
xor
retf
mov
push
outs
add
pop
jmp
jne
cwde
out
mov
jl
dec
into
push
cwde
aaa
pop
mov
ja
mov
push
cmp
test
enter
mov
sbb
push
xchg
loopne
lds
pop
inc
mov
add
or
icebp
push
pushf
outs
lock
mov
dec
cld
push
lods
xchg
dec
mov
rcl
xor
das
mov
inc
popa
mov
and
and
test
nop
imul
adc
daa
inc
add
sbb
imul
sysexit
(bad)
mov
lods
and
arpl
xchg
adc
xor
cmp
dec
test
xchg
pop
fistp
cmp
call
mov
pop
mov
adc
mov
and
push
xchg
and
cmp
mov
xchg
mov
pop
inc
cmps
scas
push
jae
cmp
shl
mov
pop
mov
jge
xor
cld
movs
mov
sbb
mov
mov
arpl
sub
test
sar
cmps
cmps
inc
adc
(bad)
xor
les
out
and
and
mov
push
and
dec
push
push
push
xlat
hlt
mov
sahf
ss
dec
push
pop
xchg
inc
jbe
xchg
cld
fnsave
jle
jp
popf
fld
sbb
in
dec
pop
sbb
ret
aaa
cmp
repz
aad
out
xor
rcl
dec
repnz
mov
mov
cmps
mov
fisttp
pop
add
lods
hlt
xor
mov
test
stos
sbb
and
stos
enter
sbb
mov
push
mov
shl
add
jae
sahf
out
cmp
aad
sahf
stos
out
and
test
add
nop
lahf
addr16
test
mul
push
lock
fcomp
pop
pop
mov
pop
bound
clc
and
(bad)
xchg
push
test
cdq
xor
xchg
ja
das
arpl
dec
lea
fsubr
add
sub
imul
(bad)
or
lods
sub
retf
mov
dec
les
sub
das
icebp
and
outs
retf
pop
call
cmc
adc
sbb
rol
xchg
xchg
lock
xchg
(bad)
sub
pop
sbb
cmp
xor
sub
xor
and
and
jle
retf
adc
dec
mov
add
jo
pop
icebp
push
push
(bad)
mov
outs
dec
jo
dec
jo
push
stos
push
retf
jae
ins
repnz
jp
fcomp
sub
inc
cdq
jnp
pop
push
cmc
scas
ins
push
push
in
nop
inc
add
mov
or
dec
mov
adc
ds
ficom
and
inc
repz
and
fisttp
dec
pop
pop
sub
arpl
mov
xor
push
mov
(bad)
jb
movs
mov
icebp
aaa
cmp
mov
test
call
fsub
jecxz
adc
mov
test
jp
xchg
cmp
mov
xor
outs
cld
cs
sub
pop
fcomp
xchg
mov
pop
inc
dec
cmp
xchg
outs
fisttp
push
retf
mov
cmps
push
inc
test
outs
mov
pusha
call
xchg
(bad)
test
sgdtd
fidiv
xor
out
jae
and
rol
sbb
sbb
out
out
push
pop
xchg
in
push
sbb
add
sbb
inc
into
inc
aas
cmp
ins
les
test
test
nop
mov
cld
adc
mov
add
mov
inc
mov
fwait
jne
cmp
mov
dec
jecxz
push
mov
cld
imul
les
stc
xchg
mov
pop
and
std
mov
scas
stos
pop
and
jmp
adc
test
sahf
jmp
dec
jge
mov
mov
pop
push
pop
or
adc
movs
out
or
adc
xchg
ins
out
stos
add
and
fsubr
test
popf
add
ret
cmp
mov
cmp
mov
mov
mov
dec
outs
mov
js
mov
nop
call
add
dec
nop
test
add
ins
pop
add
push
sbb
push
jno
mov
dec
jb
popa
add
xor
(bad)
sub
xchg
leave
dec
sub
xchg
dec
dec
test
and
imul
adc
lds
jecxz
and
in
jecxz
in
jae
jnp
lods
rcr
sbb
in
aaa
pop
mov
cmp
rol
mov
daa
popa
pop
push
xchg
mov
stos
sub
mov
jmp
mov
and
hlt
test
retf
and
cmp
cli
or
rcl
xor
xchg
repnz
(bad)
cmp
cmp
fst
arpl
and
mov
jg
pop
ja
cmp
jns
stos
pusha
cld
in
mov
jle
nop
adc
and
and
push
retf
test
test
adc
inc
sbb
out
ret
xor
ret
cld
pop
mov
retf
xchg
jae
adc
sbb
adc
inc
ss
outs
push
cmp
mov
dec
ins
je
sub
pushf
daa
push
cmp
inc
mov
loope
loop
in
jnp
inc
xlat
jno
mov
cmp
push
jb
retf
jb
push
sti
xor
mov
sbb
shl
and
(bad)
add
rol
js
jl
icebp
or
retf
pusha
or
inc
retf
sbb
pop
pop
sub
inc
pop
sahf
xchg
push
push
and
xchg
aaa
push
loope
in
or
movs
out
out
pop
test
pop
and
test
aaa
dec
jae
stos
lds
retf
in
int3
inc
push
outs
(bad)
popa
jp
aad
repz
iret
xchg
mov
inc
pushf
in
mov
cli
dec
outs
xchg
shr
or
mov
mov
cli
xchg
pop
inc
push
arpl
mov
test
ficomp
call
pop
or
mov
mov
cmp
push
sti
mov
jns
add
(bad)
pop
mov
inc
test
cld
push
push
fidivr
fsin
or
xchg
scas
dec
fidiv
add
cmp
dec
jge
div
dec
mov
pop
mov
mov
outs
ins
int3
mov
movs
dec
leave
fwait
xchg
movs
or
inc
or
pop
outs
out
pop
xlat
in
je
cs
add
sub
pop
arpl
call
pop
mov
inc
arpl
inc
es
and
call
mov
inc
push
das
in
mov
mov
or
jp
mov
movs
je
mov
outs
daa
push
andps
psrlw
xor
into
mov
cmp
sub
jg
xor
movs
pushf
sbb
xchg
test
jl
pop
inc
jo
jbe
push
cmp
sub
repz
cmp
inc
or
adc
jno
sbb
sar
lock
xchg
sbb
jnp
cmp
loopne
rcr
jmp
out
sbb
nop
fwait
int3
mov
sar
movs
fcom
les
ins
ss
jae
push
sub
(bad)
push
sahf
sbb
mov
and
or
mov
sar
and
push
std
or
sbb
mov
pushf
call
push
push
aad
int
push
cmp
cmp
xchg
pop
ror
xchg
aad
inc
nop
sbb
loope
inc
or
fwait
xchg
fsubp
inc
mov
popf
jge
ficom
pop
pop
mov
jbe
shl
std
pusha
je
pusha
xchg
lahf
js
js
pop
jno
je
jecxz
xchg
xchg
xchg
fistp
ins
inc
dec
mov
movs
fidivr
icebp
cld
lock
ret
adc
sbb
cmp
sahf
aaa
xchg
test
cdq
ror
push
push
add
add
mov
and
rcl
dec
loope
xchg
das
cmp
aaa
mov
jmp
arpl
mov
push
push
out
mov
cmc
add
nop
add
repz
xor
xchg
xchg
adc
pushf
xor
inc
or
mov
xchg
popf
xchg
sub
or
mov
cmp
sahf
ins
shl
mov
mov
push
mov
push
xor
push
xor
push
sub
inc
add
add
and
push
lahf
test
add
fnstsw
sbb
or
dec
mov
xchg
arpl
sbb
sbb
mov
leave
arpl
xlat
xor
ror
je
dec
cmps
mov
test
cmp
xchg
cmp
mov
pop
cmc
mov
push
pop
popf
and
retf
ins
fiadd
fbld
test
retf
xchg
and
cdq
xchg
hlt
xchg
stos
push
test
mov
add
ror
out
pop
ficom
sub
rcl
push
mov
xchg
stos
xor
xchg
ret
and
or
add
jmp
jmp
scas
xchg
mov
pusha
rol
movs
sahf
mov
das
popf
aad
(bad)
outs
pop
mov
cmp
and
int
xor
in
mov
leave
dec
rcl
cmp
mov
aad
bound
add
mov
pop
test
lock
mov
xchg
cmp
out
cli
pop
xor
inc
sti
call
jp
mov
or
bound
or
stos
fcom
mov
mov
(bad)
xor
sbb
cmp
mov
mov
pavgb
aam
mov
add
inc
mov
dec
mov
push
pop
loop
pusha
sub
jp
mov
push
leave
add
cmps
mov
out
push
jl
add
aas
xlat
xchg
xchg
or
movs
cmps
lds
mov
cli
pop
pop
mov
mov
(bad)
arpl
pusha
lds
rol
or
idiv
inc
cmps
mov
and
jl
mov
pop
xor
pop
cld
or
(bad)
jmp
cmp
inc
es
cld
lods
pop
stos
in
bsr
ret
imul
sbb
push
rcr
fadd
jmp
jnp
icebp
or
xchg
test
mov
aad
sbb
pop
test
gs
stos
fninit
stc
inc
cmp
pop
ins
and
fstp
mov
cmps
call
mov
xlat
mov
xor
mov
jbe
adc
loope
mov
or
inc
mov
push
in
mov
push
inc
jecxz
mov
daa
fsubrp
sub
cdq
pop
jmp
ss
mov
out
cli
adc
xchg
imul
cmp
stos
in
mov
rcr
out
pop
adc
or
sbb
jecxz
pop
xor
jle
cmps
jae
mov
and
sbb
jnp
repz
xor
repnz
nop
scas
mov
and
mov
loop
test
pop
(bad)
pop
fisubr
push
xor
movs
jecxz
les
or
push
in
fild
repnz
mov
inc
or
dec
(bad)
sbb
fistp
cmp
shr
popf
cmp
push
xchg
sub
pop
or
out
pop
cmp
mov
les
and
jle
aaa
inc
shl
sbb
mov
sbb
dec
movs
mov
in
mov
push
sar
rcr
fstp
pop
adc
cmps
out
scas
inc
xchg
mov
dec
xor
inc
sti
sbb
js
xor
xchg
and
push
and
aas
push
jp
ins
and
out
pusha
inc
loope
or
enter
sub
cmps
and
dec
lea
outs
mov
add
call
xor
arpl
jnp
ror
aaa
or
scas
cdq
in
sbb
push
popf
dec
mov
pop
lods
retf
pop
xchg
cwde
stos
dec
mov
(bad)
cli
or
pop
(bad)
ds
sub
aaa
jb
aas
(bad)
std
push
xor
push
mov
add
fsub
cld
sbb
mov
in
movs
push
pop
pusha
popa
das
jb
shl
rcl
push
test
rcl
ror
mov
aaa
dec
aaa
in
add
dec
and
scas
stos
(bad)
es
dec
pop
js
clc
shl
imul
pop
or
sub
adc
out
(bad)
cmc
mov
mov
fcom
test
adc
fwait
bound
pop
xor
test
lahf
pop
mov
jge
js
or
in
mov
xchg
xor
add
lds
stos
xchg
jecxz
sti
mov
sbb
jae
rol
mov
sub
test
adc
sahf
jnp
push
retf
movs
mov
and
test
dec
jg
xchg
std
iret
dec
repz
xor
les
add
mov
jb
out
cwde
or
sub
cwde
imul
mov
add
addr16
ret
and
ror
adc
retf
ss
jae
nop
rdpmc
pop
jg
sub
xor
jle
xchg
mov
iret
xor
mov
lods
mov
xchg
xor
sbb
(bad)
jmp
push
dec
jp
dec
jmp
xchg
inc
or
pop
and
adc
inc
xchg
inc
sub
int3
ins
jmp
jecxz
and
movs
pop
xchg
ret
cmp
add
test
add
jmp
xor
fwait
fs
addr16
fst
movs
sar
gs
cmps
sbb
shr
sahf
cmp
lock
cs
adc
and
loope
cld
or
repnz
in
mov
stos
xor
icebp
xor
pop
push
push
stc
xlat
xchg
add
shl
push
jmp
ret
aad
outs
mov
fdiv
push
pop
(bad)
shl
push
repz
repz
sbb
jb
leave
retf
push
stos
mov
stos
pushf
scas
inc
xchg
xor
ins
xchg
popa
adc
sbb
out
stos
xchg
and
pusha
fistp
inc
data16
sub
mov
pop
(bad)
cmp
adc
inc
lods
mov
in
pop
add
push
push
cmps
lods
bound
or
loope
mov
xchg
test
mov
xchg
jb
js
(bad)
jg
mov
xchg
dec
sub
mov
pop
aam
xchg
cmc
neg
cmp
jnp
xchg
cmp
outs
fstp
dec
inc
outs
or
cld
add
push
pushf
test
push
dec
mov
pop
xchg
std
in
or
and
jl
lds
cmps
ret
test
cdq
sub
stc
pop
push
dec
stos
pop
and
push
cmps
test
add
and
xchg
aam
inc
add
pushf
push
sbb
xchg
inc
xor
mov
jno
shl
lds
xchg
das
xchg
sar
mov
into
dec
mov
or
cli
inc
pushf
mov
xchg
sub
fisttp
fwait
inc
dec
cmp
test
das
push
cmp
or
pop
outs
pop
daa
mov
loope
inc
inc
add
inc
sub
cmp
cmps
idiv
push
mov
imul
lods
imul
xchg
fcmovbe
or
jb
ja
in
clc
popa
push
sti
pop
bound
adc
outs
inc
gs
(bad)
pop
cmps
sbb
cli
fmul
int3
adc
psllq
sbb
lea
rcl
popa
cld
pop
aaa
mov
sbb
cmovbe
mov
ins
push
imul
int3
xchg
test
jle
data16
mov
stc
mov
in
or
in
dec
jb
mov
(bad)
outs
pop
jno
inc
je
ret
rcr
jmp
mov
pop
call
outs
imul
or
jne
and
mov
stos
hlt
push
lahf
mov
dec
es
sahf
jl
mov
pop
cmps
fldcw
stos
stos
sti
pushf
aad
dec
mov
leave
and
test
fiadd
cld
fcmovnbe
jg
push
jno
ss
inc
mov
pop
out
and
adc
je
push
and
inc
(bad)
addr16
xor
add
lahf
paddsw
mov
push
addr16
mov
and
xchg
and
mov
nop
jno
mov
mov
add
retf
cmp
pop
dec
sub
(bad)
(bad)
inc
lea
das
mov
pusha
mov
mov
jl
adc
retf
(bad)
push
(bad)
adc
or
sbb
push
int
adc
xchg
movs
xchg
jne
movs
mov
fisub
scas
sbb
sbb
sub
xchg
cmp
fwait
inc
jp
mov
inc
and
fiadd
jmp
mov
movs
xor
or
cmp
retf
add
sbb
inc
fstp
dec
push
imul
sub
imul
ins
ins
mov
(bad)
fld
gs
pop
xchg
cmp
xchg
pop
xchg
ret
in
adc
inc
stos
mov
xchg
cmc
jae
aaa
or
add
mov
xchg
add
push
cmp
aas
adc
(bad)
add
shr
pop
pop
rcr
shl
and
shl
jb
in
out
sub
or
cs
retf
xlat
push
cmp
xchg
ror
and
add
sahf
popa
jecxz
loopne
ss
data16
dec
xchg
loopne
adc
pop
jmp
shl
repnz
and
or
inc
mov
and
jl
shl
sub
and
add
aas
cli
std
jnp
out
ror
cs
clc
pop
and
js
neg
lock
fcomp
rcr
push
inc
jmp
dec
or
inc
(bad)
iret
push
and
mov
stos
in
mov
xchg
pop
adc
pop
sub
iret
jns
mov
mov
cmp
aas
iret
push
sar
or
pop
add
fwait
aam
xchg
scas
(bad)
push
sub
dec
shl
push
push
js
or
mov
xchg
mov
cmc
mov
cmps
fild
and
cmp
iret
mov
movs
arpl
sbb
loope
popa
jge
sahf
loopne
test
mov
inc
lods
repnz
push
clc
sub
test
xchg
mov
push
dec
cmp
into
jg
add
push
pop
lahf
inc
cmp
lods
jge
int3
inc
(bad)
jnp
add
inc
xchg
sub
hlt
dec
es
and
and
or
and
nop
pop
and
or
sbb
mov
xor
sbb
push
scas
xlat
jne
inc
pop
add
ins
int3
push
jle
xor
mov
scas
adc
cmp
int3
cld
dec
jne
mov
fsubrp
sti
(bad)
out
addr16
mov
test
push
push
popf
cli
jnp
nop
mov
adc
pusha
mov
mov
add
inc
cmp
fsubr
mov
mov
lods
jle
push
cmps
adc
dec
enter
mov
adc
js
lods
dec
cmp
movs
and
xchg
push
sbb
es
mov
(bad)
lahf
push
sbb
jl
or
adc
cmc
repz
(bad)
int
xor
bound
ror
aad
hlt
cmp
mov
test
dec
xor
and
loopne
sbb
adc
lock
cld
fs
xor
shl
mov
xor
dec
xor
sbb
mov
mov
fistp
stos
dec
movs
sub
and
push
addr16
mov
les
mov
test
scas
cmc
mov
inc
imul
dec
sahf
repz
es
sbb
in
sub
loop
repz
enter
js
add
dec
push
aas
inc
xchg
sub
mov
mov
cdq
xor
adc
pusha
mov
std
sar
mov
popf
cmp
std
cmc
mov
pop
dec
and
pushf
push
mov
sbb
or
daa
add
xchg
lods
sbb
and
repz
jp
jp
pusha
jns
xor
lods
sti
xchg
dec
(bad)
xor
inc
ds
xor
xchg
adc
mov
addr16
test
pusha
cmp
cs
dec
sbb
xor
mov
call
jns
movs
repnz
dec
sub
lds
imul
push
xor
add
sub
(bad)
shl
sub
ret
daa
xchg
adc
addr16
inc
aad
mov
pushf
fwait
lahf
int
xchg
adc
out
jne
adc
sub
sbb
mov
sahf
in
dec
enter
xchg
mov
ret
iretw
mov
cwde
sbb
scas
sub
pop
pop
and
arpl
inc
les
cmp
pop
xor
les
mov
ins
xlat
xor
cmp
xlat
xor
sub
inc
sub
xchg
mov
outs
jecxz
sbb
ins
shl
hlt
lds
movs
push
inc
xchg
adc
cmp
push
dec
xchg
and
mov
push
cmp
pop
or
aad
adc
popf
dec
cmp
popf
ins
mov
fstp
movs
xchg
add
push
outs
and
cmp
fs
leave
je
dec
xchg
cmp
cld
and
aad
outs
add
out
mov
arpl
mov
sub
les
pop
mov
dec
mov
lds
adc
fst
dec
mov
xchg
icebp
push
les
ret
mov
mov
add
(bad)
cmps
jae
aaa
jae
xchg
inc
push
mov
das
xchg
outs
loop
inc
add
sub
mov
adc
out
rol
adc
lea
xchg
xchg
rol
jno
call
and
cmps
cmc
lds
push
xlat
pop
aam
jecxz
sbb
jle
mov
stc
rcl
imul
fsub
inc
mov
rol
out
inc
call
fnstsw
dec
jns
test
adc
inc
les
outs
inc
pop
in
(bad)
sub
aaa
lods
in
mov
or
pop
push
fadd
dec
pusha
jmp
mov
retf
push
pusha
lea
aad
shl
xor
xchg
inc
xchg
adc
sub
jne
jb
fcom
or
sub
or
push
fs
mov
xor
jmp
jmp
sub
mov
fcom
retf
(bad)
mov
or
pusha
mov
icebp
jmp
mov
mov
mov
add
outs
test
outs
fst
outs
mov
and
enter
fcom
mov
push
leave
jnp
jnp
iret
jl
popf
pop
mov
jmp
adc
neg
inc
in
or
mov
(bad)
dec
jmp
xlat
sbb
cmp
retf
shr
shr
ins
and
push
ja
fst
fnstsw
jmp
scas
hlt
add
cmp
dec
fdiv
jmp
stc
push
dec
movs
inc
pop
xor
push
fnstsw
loope
loope
fstp
dec
jmp
sub
and
and
push
sbb
cli
dec
loopne
cmps
jne
or
movs
lock
loopne
mov
dec
mov
test
mov
or
inc
enter
push
stos
movs
push
fsubr
bound
out
fsubr
add
out
and
mov
xor
add
push
add
xor
dec
push
sub
jo
jne
jecxz
jecxz
jecxz
mov
mov
mov
popf
fwait
add
fdiv
sar
inc
lods
jle
ret
in
mov
in
adc
iret
xchg
xchg
icebp
std
out
sti
fistp
test
popa
jmp
add
and
mov
rcl
xor
and
(bad)
aad
retf
push
lods
stos
xchg
and
ins
sbb
ds
clc
mov
pop
push
loope
xchg
inc
ja
imul
call
push
hlt
int3
mov
fisttp
adc
adc
lds
lahf
add
aam
lea
cmp
add
test
adc
cmc
inc
push
pop
movs
xchg
push
(bad)
adc
xchg
ds
mov
jmp
aam
push
xlat
lds
mov
adc
nop
lods
scas
dec
arpl
cmp
outs
sub
ins
(bad)
sub
inc
adc
mov
dec
loop
inc
add
and
mov
jg
nop
cmp
jg
inc
adc
stos
mov
add
push
xor
cmp
dec
std
clc
mov
xor
cwde
cmc
ins
xor
xchg
push
lahf
adc
add
and
mov
mov
push
mov
or
mov
lods
xor
inc
mov
fiadd
call
call
inc
jae
cdq
mov
inc
pop
cli
out
mov
cdq
cwde
clc
adc
dec
mov
push
inc
std
dec
mov
enter
inc
xor
aaa
ins
(bad)
mov
push
adc
out
test
test
test
test
test
test
test
push
cmc
pop
stc
jmp
std
out
outs
jmp
jae
and
dec
and
mov
mov
(bad)
fisubr
sbb
call
repnz
imul
mov
aam
fbstp
mul
push
dec
(bad)
cmp
mov
xchg
jecxz
jl
test
cmps
dec
out
fsub
inc
fwait
mov
std
movs
test
fs
mov
inc
ret
movs
test
and
lods
mov
and
js
jb
jno
sahf
adc
into
daa
jecxz
int3
gs
inc
aad
mov
fcmovb
sbb
xor
cmp
mov
popf
jne
fsubr
fwait
inc
aas
pushf
leave
xchg
inc
add
imul
jmp
dec
mov
loop
mov
sub
mov
scas
dec
dec
xchg
(bad)
aad
int
pop
jecxz
push
loope
mov
(bad)
jmp
outs
cld
adc
lock
sub
in
sub
aad
sbb
int
ret
mov
(bad)
xor
jne
or
jmp
inc
adc
cmps
sbb
mov
stos
gs
inc
xchg
sub
mov
sub
pop
mov
push
push
pop
pop
sbb
icebp
dec
sbb
lds
icebp
pop
push
(bad)
and
xlat
lock
jle
push
jmp
(bad)
stc
sbb
ja
leave
stc
lea
and
fldenv
add
pop
adc
add
cmps
mov
xor
lods
sub
jmp
loop
mov
push
sti
fsubrp
outs
adc
neg
mov
out
jle
dec
cld
xchg
xchg
jne
xchg
out
fldcw
sbb
neg
mov
sub
adc
in
inc
stos
push
mov
out
push
jp
jo
or
leave
cmp
call
test
stos
in
out
push
pushf
fistp
movs
cmp
psllq
or
sahf
test
cdq
sub
test
int
hlt
xchg
mov
imul
pop
scas
loope
sub
inc
xchg
das
pusha
add
add
sub
(bad)
sbb
xchg
arpl
lea
stos
(bad)
jno
sbb
ja
cmp
fsubrp
les
sbb
loop
ror
cmp
mov
jmp
sbb
ss
pop
fstp
or
scas
call
cs
mov
mov
cmp
inc
cmp
mov
mov
pop
or
adc
xor
inc
add
scas
jmp
bound
or
js
mov
pusha
lock
sbb
jmp
(bad)
xor
mov
and
push
popf
cdq
pop
jnp
xchg
fnsave
mov
repnz
xor
dec
and
jl
ja
es
bound
and
push
add
sbb
push
cld
mov
add
push
fsubr
dec
xor
int3
aas
rcr
add
cmc
data16
xchg
mov
je
arpl
(bad)
cld
xchg
sti
dec
mov
jle
data16
fdivr
ret
out
mov
dec
loope
mov
xchg
jno
push
mov
dec
lahf
sbb
pop
and
mov
out
mov
adc
out
(bad)
popw
lock
dec
out
mov
pop
(bad)
in
sub
js
daa
dec
and
lock
sub
hlt
inc
xchg
loope
ror
aam
mov
pushw
aas
call
jbe
inc
pop
sbb
stos
stos
mov
cmc
lds
retf
jmp
out
jae
xchg
lahf
xor
repz
cmovns
js
add
cmps
(bad)
cmp
or
mov
pushf
sbb
es
xor
outs
mov
call
in
cli
js
mov
mov
mov
lds
push
fwait
cwde
adc
in
imul
test
fwait
jl
sub
cmps
dec
sar
push
fmul
lock
es
and
inc
(bad)
sub
push
repz
test
ins
ins
pop
push
sahf
enter
adc
mov
fwait
pop
imul
cmps
push
xchg
cld
dec
dec
sbb
fsub
xor
imul
jle
cmps
inc
pop
(bad)
pop
arpl
fst
mov
pop
fsub
push
fs
imul
cld
ror
push
pop
aad
or
jnp
(bad)
cld
push
xchg
ficom
jecxz
push
or
test
jmp
dec
and
xchg
adc
in
push
idiv
daa
mov
(bad)
in
jnp
icebp
icebp
dec
add
xor
mov
cdq
loop
lea
pop
sub
jns
push
sbb
xchg
imul
in
mov
enter
(bad)
es
pop
nop
sbb
cwde
jo
sbb
push
icebp
push
scas
mov
xor
cmp
loop
cmp
mov
push
aam
fstp
xchg
inc
test
repz
xor
push
cmp
js
iret
adc
inc
inc
xchg
(bad)
jmp
jbe
and
and
xchg
add
cwde
jno
sbb
(bad)
push
cmp
push
mov
test
loope
sti
in
push
pop
fbstp
push
cmps
push
sbb
sbb
add
pop
pop
pop
pop
jg
lea
sbb
ins
push
cwde
mov
dec
jns
push
or
mov
mov
dec
mov
jnp
push
ja
adc
jns
arpl
or
mov
mov
push
test
sub
push
test
mov
push
shr
push
ficom
xchg
and
test
lock
xchg
(bad)
cmps
and
aaa
push
jnp
mov
pop
ret
bnd
idiv
retf
sub
cmp
movs
inc
jnp
cdq
mul
enter
or
add
mov
and
pop
movs
leave
ins
or
mov
inc
mov
mov
jp
fild
dec
and
arpl
cli
mov
cdq
push
icebp
clc
xchg
loope
pop
sbb
sar
xorps
fsubr
jo
repz
inc
pop
cmp
lea
dec
cmp
add
mov
or
dec
xchg
push
xor
inc
adc
jg
or
mov
or
or
hlt
das
mov
xor
push
es
ds
or
sub
add
sub
loope
pop
out
xchg
dec
jns
(bad)
arpl
imul
dec
retf
loopne
mov
fnstcw
mov
sub
in
jl
pushf
push
inc
cld
jnp
sar
sahf
mov
push
ja
je
xlat
xchg
xchg
add
shr
sub
pop
sahf
mov
stos
jmp
ss
dec
outs
es
add
scas
in
stos
jge
xor
dec
or
cmc
out
sti
jp
mov
ins
pop
push
cs
ficomp
ja
jnp
lock
fwait
jg
cld
and
arpl
fsub
jne
push
es
add
ins
push
xor
mov
push
rcl
retf
hlt
nop
ss
mov
xchg
ror
imul
push
aam
cmp
push
ror
retf
inc
scas
ret
leave
fidiv
lods
xor
push
sbb
aam
jo
dec
inc
in
cwde
and
loop
cmp
sbb
fsub
icebp
pop
cmp
stos
cwde
outs
and
ins
adc
outs
dec
add
imul
nop
or
pusha
nop
not
das
and
dec
and
in
sub
sub
out
std
xor
mov
xor
dec
into
arpl
inc
movs
int3
xor
retf
pop
fimul
fsub
sbb
sub
mov
cmps
inc
add
push
jns
imul
shr
(bad)
outs
fild
out
xchg
push
inc
iret
dec
cmps
test
or
push
sti
xor
mov
cmp
xchg
cld
cld
cmp
mov
mov
mov
or
mov
fimul
and
mov
push
mul
add
imul
(bad)
std
inc
(bad)
push
mov
loop
xchg
enter
jle
adc
lds
dec
mov
cmp
cmp
test
xor
adc
in
retf
fwait
mov
mov
lds
icebp
in
push
repnz
adc
test
lods
(bad)
mov
mov
push
push
xchg
shl
mov
rcl
push
pop
gs
push
pop
lods
inc
or
sub
xchg
ds
or
push
adc
cs
jo
adc
je
push
ror
(bad)
aam
test
(bad)
mov
cmc
stos
(bad)
fisub
push
inc
in
and
or
aam
adc
mov
xlat
or
pop
push
(bad)
(bad)
arpl
pushf
movs
shl
cmc
sbb
fwait
pop
fdiv
jmp
jno
mov
jno
imul
mov
inc
movs
adc
lahf
test
shr
addr16
inc
and
fstp
jle
imul
cmp
iret
movs
or
test
xor
in
aad
jmp
mov
lock
adc
jns
or
pop
jns
pusha
xchg
mov
mov
add
lods
sahf
and
test
out
into
push
stos
cmc
cs
js
aas
cmp
fs
cmp
mov
jns
sub
push
rol
fnsave
add
pop
push
dec
xor
xchg
pop
pop
lods
dec
cmp
mov
test
mov
jge
inc
mov
push
mov
mov
cld
shl
cmp
pushf
and
mov
cmp
cmp
cmp
or
out
mov
loop
outs
pop
hlt
stos
into
popf
and
inc
add
out
clc
add
inc
mov
in
loop
jo
add
cdq
mov
add
jbe
fld
mov
xor
xlat
xchg
xchg
sbb
inc
pop
test
xor
xor
and
mov
jp
or
pop
xchg
sar
inc
mov
adc
push
scas
or
mov
fisttp
fisubr
scas
bnd
adc
aad
iret
dec
or
mov
popf
mov
jge
pop
mov
push
mov
mov
jo
mov
clc
sub
in
pop
dec
pop
cmc
mov
adc
sbb
inc
(bad)
xchg
xchg
xchg
repz
imul
cld
retf
scas
mov
xchg
xchg
pusha
sbb
sub
mov
adc
out
jmp
sahf
call
cmp
add
xchg
mov
pop
add
push
out
push
call
pop
inc
out
stos
ror
sti
xchg
jl
idiv
aam
out
mov
dec
mov
out
pushf
push
sub
push
mov
push
mov
iret
jg
out
mov
(bad)
adc
je
(bad)
jmp
pushf
cmp
repnz
inc
mov
jne
jmp
repz
add
outs
nop
jge
sbb
retf
das
jg
push
adc
dec
cs
stc
pusha
inc
mov
jbe
daa
es
inc
cmps
or
xor
sbb
(bad)
xchg
sbb
hlt
pop
es
cmp
dec
push
repz
std
(bad)
cld
mov
mov
js
and
(bad)
std
inc
ins
mov
lea
repz
push
fnstenv
add
push
mov
arpl
xor
lea
popa
cmps
ja
je
dec
sti
dec
stc
popf
or
pop
mov
dec
(bad)
and
mov
sbb
fild
ins
imul
int3
es
jle
sub
fcmovb
out
popf
pop
icebp
out
add
pop
retf
jmp
movs
movs
addr16
or
push
push
xor
jecxz
inc
dec
ret
repz
push
mov
in
mov
jmp
fild
sahf
imul
test
sub
jp
dec
out
pop
or
jae
(bad)
pop
movs
nop
rol
test
mov
add
test
xchg
retf
xlat
retf
movs
pop
test
mov
and
dec
ret
and
or
pop
sahf
dec
and
cmps
push
inc
loopne
je
add
add
mov
xchg
add
cs
fmul
inc
movs
jge
ror
icebp
and
aaa
out
dec
loope
clc
mov
and
xor
xchg
or
and
push
and
enter
(bad)
push
xchg
cld
add
into
pop
(bad)
sahf
mov
icebp
dec
jnp
into
xchg
(bad)
hlt
mov
mov
cmc
repnz
cmp
push
add
imul
popa
ss
repz
jnp
cmp
inc
xchg
mov
pop
icebp
adc
and
loope
loope
add
cmp
aas
fsubr
scas
push
in
sbb
and
sbb
mov
adc
into
push
iret
idiv
or
inc
and
nop
or
fdivr
push
pop
mov
popa
das
jbe
lds
shr
and
inc
inc
inc
ret
adc
repnz
mov
sahf
dec
xchg
out
xchg
push
enter
fdiv
dec
mov
pusha
cmps
out
jge
(bad)
dec
mov
cmp
test
(bad)
hlt
mov
or
aad
sub
adc
sub
xchg
ror
movs
(bad)
mov
mov
into
inc
daa
das
dec
scas
sbb
push
adc
add
push
mov
dec
popf
dec
jl
movs
xor
push
jl
pop
jno
lahf
sub
jno
xor
lahf
dec
sub
aam
pop
or
sub
sbb
mov
leave
je
pusha
mov
mov
inc
mov
jmp
sbb
jp
mov
cmp
mov
pushf
ds
cmp
jmp
ss
mov
inc
in
outs
movs
mov
xor
dec
je
(bad)
shr
dec
jmp
dec
shr
sar
add
jns
stos
mov
pop
out
std
ror
cmp
imul
inc
cmps
sar
push
jae
mov
mov
jo
mov
push
jae
pop
rep
loope
aaa
scas
rol
and
(bad)
hlt
fild
mov
push
mov
mov
adc
inc
fild
imul
pusha
lea
and
or
sub
jmp
repnz
call
cwde
(bad)
retf
cmc
xor
ret
std
cmp
dec
das
pmaxsw
dec
dec
and
repz
sub
data16
lods
mov
pop
ss
movs
aas
es
cmc
loop
sbb
inc
pop
in
and
outs
repnz
jb
(bad)
xchg
dec
sti
sbb
imul
(bad)
out
inc
dec
push
inc
dec
inc
jb
mov
dec
sbb
(bad)
fldenv
das
into
js
push
sahf
dec
pop
add
push
ret
call
stos
ficomp
push
jmp
and
fisub
push
lods
mov
fwait
dec
or
test
retf
adc
jp
jp
and
and
sbb
pop
push
sub
sahf
xlat
push
in
sbb
retf
mov
xchg
mov
fcom
cwde
adc
lock
jg
mul
test
div
xchg
(bad)
fmul
adc
ret
mov
jae
mov
mov
add
sbb
mul
jnp
arpl
xchg
test
loop
mov
and
cmp
or
pop
or
add
add
cmps
push
nop
dec
cmp
clc
test
sbb
jns
or
pop
jns
or
push
fimul
add
dec
fadd
pop
scas
in
out
jg
loope
xchg
mov
dec
imul
or
inc
nop
dec
cmp
test
in
(bad)
popf
lahf
enter
mov
test
mov
ja
mov
aaa
mov
jecxz
mov
into
inc
loope
adc
adc
dec
or
mov
fldl2e
out
dec
clc
jno
dec
fnstcw
inc
fscale
iret
test
std
bnd
dec
data16
test
lock
idiv
test
(bad)
mul
loope
pop
xchg
(bad)
push
mov
(bad)
mov
sbb
movs
(bad)
std
cmp
ss
adc
dec
jle
inc
jle
and
adc
xor
daa
sub
mov
xor
iret
pop
rcr
push
out
dec
cmp
xlat
dec
xor
xchg
je
movs
jecxz
outs
push
pop
ds
push
mov
in
inc
adc
iret
mov
push
shr
sub
cs
xor
cmp
pop
dec
stc
test
inc
jno
mov
popa
sub
xor
es
inc
adc
outs
jl
(bad)
mov
cwde
cli
imul
cmp
xchg
xchg
ret
xchg
jne
push
dec
pop
jecxz
pop
inc
dec
inc
mov
add
aam
popa
aam
es
iret
and
and
arpl
call
pop
test
test
mov
and
mov
in
add
jnp
icebp
shl
daa
aad
mov
dec
leave
out
les
jg
xchg
aaa
sub
pop
jecxz
inc
movs
mov
int3
jl
into
test
mov
scas
push
mov
mov
shl
bound
jmp
retf
shl
out
push
pushf
push
sub
dec
jae
xchg
hlt
jp
movs
mov
mov
inc
nop
adc
or
adc
test
movs
setle
push
add
inc
dec
inc
mov
fsubp
ins
xchg
xor
adc
mov
call
mov
cmc
sbb
inc
nop
inc
stos
mov
into
loopne
cmc
jl
mov
xchg
dec
push
retf
inc
dec
xchg
xchg
in
dec
rcr
jp
dec
rol
mov
mov
cmp
mov
aam
retf
xor
pop
mov
ja
arpl
es
icebp
nop
or
dec
das
pop
dec
fs
loop
jae
sbb
xchg
pop
pop
pop
stos
push
cmp
dec
xor
lods
std
adc
jmp
cmp
sbb
hlt
mov
pop
jmp
xchg
inc
cmp
test
xchg
loope
cld
outs
and
jle
or
jne
arpl
jmp
pop
pop
sbb
in
aas
add
retf
aad
into
je
ffree
in
or
aas
(bad)
jle
fsubr
fsub
and
sbb
sbb
adc
out
add
adc
cld
add
inc
test
xor
retf
push
fdivr
outs
xchg
jns
xchg
cdq
push
scas
ret
loop
loop
ins
(bad)
icebp
mov
js
dec
into
jecxz
jmp
sbb
add
out
inc
push
iret
clc
inc
retf
xchg
mov
mov
and
jmp
jo
and
jl
int3
dec
stos
pop
mov
cwde
xor
xlat
out
cld
scas
cmp
or
arpl
push
jl
in
xchg
cli
cmp
das
or
mov
out
dec
jne
or
and
leave
xchg
inc
jp
jle
and
and
pop
inc
and
es
stc
jmp
xchg
popf
hlt
mov
inc
test
cs
sbb
pop
retf
hlt
inc
repz
mov
loop
enter
jp
mov
add
je
jecxz
add
rcl
shr
xor
xchg
fwait
mov
cmp
sbb
xlat
repz
sbb
cmp
lea
sbb
lahf
xor
in
mov
repnz
fstp
iret
adc
jg
sbb
jg
inc
aaa
iret
je
nop
push
sbb
dec
stos
pushf
mov
pusha
cmp
mov
movs
leave
(bad)
fbld
and
xor
mov
push
out
ret
ins
pop
cmp
in
dec
gs
movs
jecxz
pop
jne
ret
in
enter
imul
test
or
(bad)
nop
jecxz
addr16
in
in
inc
lods
push
(bad)
aad
inc
jb
shl
pop
jae
inc
adc
inc
ss
jb
fst
jne
jmp
mov
dec
ror
ins
mov
sub
cld
in
lods
inc
pop
pop
add
clc
mov
mov
scas
div
cmc
mov
pop
sahf
dec
inc
cmp
adc
dec
fwait
mov
aam
mov
xchg
ret
(bad)
loopne
jnp
cmp
and
mov
int3
mov
in
iret
stos
sub
inc
bndldx
nop
cmp
fnsave
sub
xchg
dec
push
jno
stos
mov
shl
(bad)
inc
xor
adc
sub
jp
fcmove
ret
imul
scas
xor
adc
fwait
or
inc
out
push
ins
sti
(bad)
ds
pop
jl
inc
popa
mov
pop
mov
xchg
inc
push
sub
out
cmp
and
je
mov
pop
xlat
jle
mov
sub
jg
loope
sub
pop
pop
xrelease
shl
mov
dec
cwde
add
out
push
mov
movs
aaa
mov
xchg
mov
or
xlat
xchg
into
jmp
jecxz
xchg
mov
push
mov
ret
xchg
push
mov
aas
sub
sbb
mov
das
lock
loop
lods
xchg
(bad)
pop
les
lock
movs
retf
cld
rcr
imul
mov
mov
and
dec
out
pop
dec
add
test
sub
push
mov
push
lahf
lods
mov
cmc
push
enter
jno
ret
inc
loop
pop
call
in
mov
loopne
mov
mov
and
jg
sub
std
int
ja
(bad)
pop
inc
jmp
test
jmp
mov
fld
and
test
es
sbb
stos
pop
jb
xor
call
xchg
jle
jae
push
sbb
es
push
adc
push
sbb
push
outs
xor
pop
jmp
mov
jne
adc
mov
xchg
inc
inc
sub
mov
cld
jns
pop
aaa
adc
dec
add
mov
adc
jge
repz
pop
push
xor
push
mov
cli
and
call
inc
(bad)
add
icebp
xor
je
xor
sti
(bad)
mov
dec
jg
cmp
jmp
sar
cmp
movs
fs
inc
out
fimul
loope
scas
cmp
(bad)
in
and
(bad)
jmp
inc
jp
cmp
rcl
or
sub
sbb
adc
xchg
dec
dec
xor
jns
sar
leave
loopne
dec
(bad)
cmp
mov
push
mov
jbe
js
jmp
fstp
js
mov
cmp
mov
jns
fist
mov
sub
clc
push
outs
mov
aam
mov
mov
mov
and
mov
pusha
shl
lds
int3
popa
mov
xchg
mov
add
jne
call
test
inc
js
mov
in
fdivr
pushfw
out
sar
ins
ja
ror
jns
(bad)
pusha
cld
ror
inc
xchg
jle
xchg
nop
in
push
jmp
mov
push
xchg
dec
mov
test
pusha
mov
sub
ins
pop
dec
(bad)
dec
mov
aaa
aam
add
sub
xor
iret
or
or
jo
push
sub
sbb
in
test
imul
fprem1
mov
cwde
pop
mov
loope
stc
sar
int
(bad)
in
rcl
test
sbb
jl
(bad)
jns
add
xchg
pop
push
push
scas
in
aaa
jno
or
xchg
mov
dec
mov
mov
popa
mov
fwait
xor
or
sahf
lods
mov
js
add
ror
push
loop
test
test
xchg
repnz
or
xchg
adc
sub
jl
iret
mov
and
dec
leave
push
in
icebp
jl
jge
into
leave
scas
push
add
sbb
pop
call
pop
jle
adc
jp
dec
pop
rcl
icebp
pop
fcmovnb
call
sub
push
test
leave
ja
(bad)
sbb
adc
xor
loop
xlat
sahf
daa
stos
aam
dec
imul
or
sbb
mov
test
xor
out
jl
and
dec
cli
sub
or
mov
ficom
arpl
dec
out
dec
and
fidivr
mov
inc
inc
fstp
rol
div
repz
jo
pop
fist
ror
test
mov
add
or
sub
mov
sub
xchg
inc
jbe
dec
clc
sub
(bad)
push
and
mov
frstor
outs
test
push
sahf
sar
mov
clc
test
mov
(bad)
mov
add
add
mov
jns
aaa
cmp
(bad)
sub
inc
adc
dec
leave
push
mov
loop
mov
cmc
push
mov
cwde
repz
iret
push
cld
sti
(bad)
cdq
ficom
sbb
imul
scas
rep
push
cmp
xor
mov
out
or
add
xor
arpl
or
stos
sbb
inc
stos
sbb
dec
int
xor
jl
std
(bad)
cmp
inc
out
dec
xchg
test
and
inc
retf
add
cld
pop
xor
jo
xchg
cmp
sub
sub
mov
xor
test
aam
in
mov
in
sbb
out
jnp
hlt
add
push
outs
dec
ficomp
jno
mov
jl
mov
and
jmp
inc
(bad)
(bad)
jns
popf
(bad)
ins
std
mov
pop
push
leave
data16
inc
in
mov
adc
loop
or
adc
sub
ins
xchg
repnz
pop
and
ins
dec
sbb
jne
out
adc
imul
xchg
into
loopne
cmp
(bad)
fucomp
push
xor
mov
(bad)
clc
movs
(bad)
jno
or
xor
push
cwde
xor
sbb
xchg
enter
leave
test
inc
rol
or
in
fstp
sub
enter
or
sub
test
pop
or
ret
and
add
repz
mov
push
pop
ror
pop
cmp
dec
mov
jecxz
(bad)
sub
stos
aam
dec
push
push
pop
dec
inc
push
push
sub
das
dec
sub
or
lds
out
rol
xchg
imul
popa
test
(bad)
and
test
sub
mov
repz
das
dec
popa
pop
pop
lds
cld
pop
in
cli
mov
mov
sub
movzx
mov
adc
push
mov
cld
mov
out
cmp
mov
mov
mov
jmp
cwde
mov
ffree
inc
ficomp
icebp
adc
pusha
and
clc
dec
das
es
es
xor
dec
test
xchg
int3
jmp
adc
jae
ret
idiv
les
das
sbb
xchg
lds
xlat
dec
das
jmp
mov
xlat
mov
mov
xor
xchg
es
int3
clc
jp
sahf
xchg
xchg
push
bound
pop
(bad)
fcomp
mov
push
stos
dec
stc
nop
test
add
mov
shl
cwde
inc
cmp
adc
sub
ins
mov
(bad)
in
mov
pop
mov
ja
inc
retf
push
ds
into
sti
xchg
or
fiadd
ret
mov
out
mov
aam
dec
pusha
lahf
neg
and
xchg
inc
popf
je
stc
add
jge
test
aaa
xchg
dec
out
push
inc
xlat
(bad)
stc
sbb
xor
mov
ins
mov
mov
inc
inc
and
xchg
jl
jp
fdivr
cmp
les
stc
je
shl
inc
xlat
mov
sbb
add
das
data16
push
mov
jg
dec
es
in
sbb
jne
add
pushf
hlt
mov
ret
outs
scas
fisub
pop
cs
mov
xchg
(bad)
fstp
aad
jne
pusha
dec
(bad)
outs
mov
outs
mov
mov
in
scas
mov
lds
push
leave
or
sub
add
xchg
push
inc
out
cmps
imul
stc
sbb
pop
movs
out
push
ficomp
mov
xchg
int
dec
frstor
jp
sbb
inc
test
mov
arpl
xor
jns
(bad)
sbb
dec
cdq
adc
or
imul
xchg
pop
movs
cmps
retf
imul
cdq
jmp
retf
or
rcl
jmp
scas
leave
retf
jo
nop
enter
pop
inc
adc
dec
jne
add
push
in
addr16
aaa
sbb
addr16
adc
ror
repnz
call
jns
call
jb
fstp
retf
ins
aam
cmp
jae
fs
add
mov
daa
je
inc
mov
fadd
clc
xor
xchg
fwait
lahf
popf
mov
pushf
adc
aas
test
repz
or
inc
mov
and
sub
outs
popa
call
xor
sub
dec
pop
xchg
cmps
jae
leave
and
pushf
dec
inc
pop
cmp
into
sub
sar
mov
xchg
jnp
inc
jge
lods
jle
ja
out
cmps
scas
enter
push
lea
jns
cmps
adc
cld
(bad)
pop
pop
popf
cmp
inc
enter
cld
xchg
test
xor
cmp
push
adc
inc
inc
mov
mov
movs
dec
cld
dec
sbb
push
inc
push
or
inc
sbb
mov
shr
push
pop
mov
aas
test
pop
and
ss
mov
sub
pop
push
test
inc
shr
in
adc
pop
movs
xor
cmps
mov
(bad)
sbb
adc
and
xchg
div
das
push
adc
dec
push
cli
int3
push
popf
pop
push
rcr
pop
xor
jg
xchg
xchg
push
jle
call
enter
mov
scas
xor
les
arpl
test
retf
pop
push
mov
adc
clc
pop
out
adc
jmp
cmc
adc
mov
fimul
sbb
rol
add
aaa
rcr
loop
test
mov
cmps
and
loope
shr
xor
dec
push
inc
xchg
shl
loop
sbb
aad
push
adc
pop
pop
pop
sbb
retf
pop
pop
cmp
pop
jbe
stc
shr
pushf
loopne
jmp
in
test
loop
push
test
xor
adc
(bad)
fstp
sbb
cmp
inc
clc
or
sub
cmp
scas
gs
and
fisub
fs
leave
ret
in
inc
adc
pop
push
ret
cmp
jo
popf
mov
jb
in
add
gs
mov
push
ret
and
mov
pop
mov
xor
sbb
dec
icebp
mov
mov
imul
and
add
push
aas
nop
dec
dec
mov
lahf
test
bound
xchg
pop
call
or
(bad)
pop
cmc
sub
xor
add
jmp
sub
adc
aam
xchg
push
(bad)
mov
data16
ret
or
cmp
out
enter
cmc
dec
rol
add
call
sahf
scas
push
and
cwde
and
cmp
mov
in
call
retf
loope
xor
pop
call
ins
xor
mov
xchg
(bad)
ins
in
pop
dec
or
push
out
sbb
add
jmp
ret
or
out
sub
aas
and
and
shl
iret
pushf
pop
fwait
cmp
lahf
dec
clc
arpl
repnz
pop
ins
and
pushf
adc
adc
fdivr
or
sbb
dec
movs
xchg
sbb
out
arpl
add
pop
ret
mov
cmps
push
xchg
mov
jnp
(bad)
popf
les
cmp
shl
cwde
pop
lock
mov
and
ins
adc
bound
popa
xor
xor
stos
aas
aas
test
cmps
sbb
cmp
data16
pop
test
push
inc
xchg
fcmovnbe
jb
imul
int
adc
push
wbinvd
repz
cmp
sbb
mov
sbb
adc
ja
xchg
int
and
fwait
aas
ja
jo
jg
mov
lock
out
call
inc
retf
push
or
push
shl
fdivr
dec
in
iret
mov
xlat
xor
test
jno
imul
mul
mov
ins
xor
loope
mov
mov
sub
aaa
mov
ja
jns
(bad)
jecxz
dec
cwde
outs
mov
push
mov
push
lock
(bad)
mov
mov
push
lods
mov
fs
out
sahf
inc
xlat
mov
jo
sahf
fstp
mov
data16
in
pop
(bad)
xor
inc
mov
stos
push
pop
je
cmp
in
xor
scas
hlt
repz
ins
xchg
leave
lea
lock
shr
out
cwde
push
shr
add
daa
aaa
push
cwde
fmul
push
shl
fld
rcr
add
jns
arpl
push
and
fild
mov
test
push
sub
rcl
xor
mov
cmps
xchg
dec
lods
cmp
or
or
(bad)
sub
cmps
ficom
sahf
popf
jmp
cs
sub
shl
adc
pop
xchg
pop
imul
jbe
(bad)
add
inc
cmps
mov
ss
sub
in
mov
xchg
cdq
xor
popf
pop
mov
sbb
jne
xor
arpl
jg
cmp
or
outs
(bad)
leave
ficomp
and
and
mov
pop
push
mov
mov
push
xchg
mov
std
pop
adc
jg
(bad)
iret
xor
movsx
sbb
mov
es
int3
add
and
(bad)
mov
das
sti
sti
fiadd
jmp
(bad)
sub
mov
mov
cld
sub
retf
arpl
xor
adc
mov
rol
add
pop
repnz
mov
xchg
push
xlat
popf
xchg
inc
jbe
cs
in
pop
pop
push
hlt
in
repz
cmp
ins
jge
fld
push
nop
or
fsub
sub
call
fwait
adc
push
xor
das
push
xor
xchg
and
pop
dec
clc
jno
cmp
sbb
mov
push
mov
pop
adc
mov
imul
sbb
shl
dec
je
push
push
mov
lahf
fist
jo
sbb
xor
pop
dec
push
or
or
lods
sub
hlt
xchg
in
(bad)
add
pusha
xchg
jp
in
and
test
cmp
adc
(bad)
mov
fmul
mov
repnz
adc
mov
push
ss
mov
and
jecxz
ret
xchg
mov
cld
nop
cmp
and
mov
cmps
ins
xchg
inc
sub
cmps
jg
(bad)
and
sbb
sahf
add
retf
mov
sub
pop
retf
(bad)
or
out
stc
ds
cmp
and
jp
adc
sbb
push
mov
mov
lods
test
cmp
lahf
sbb
jmp
in
mov
ins
push
ret
ja
push
popf
pop
stos
jge
push
adc
push
xor
push
iret
xor
xchg
sub
inc
jb
idiv
fnstsw
call
xor
jp
xchg
cmps
and
ret
sub
mov
popa
(bad)
fs
dec
add
xor
or
sub
aas
sbb
inc
ins
aas
inc
clc
adc
push
push
in
iret
mov
dec
cli
and
ja
outs
mov
adc
dec
pop
inc
mov
test
mov
adc
loop
cmps
(bad)
mov
repz
jle
std
jmp
stos
jge
mov
test
sub
push
pop
rcr
ins
xor
imul
test
dec
sar
jne
sub
mov
mov
out
mov
fiadd
je
int3
call
and
(bad)
mov
cdq
push
cmps
cmp
add
sbb
add
call
in
xchg
popa
bnd
pop
add
in
ins
mov
push
mov
adc
pop
imul
test
ins
sub
inc
push
push
xchg
push
(bad)
mov
test
cdq
and
in
jbe
cmps
daa
fist
pop
hlt
ja
jae
inc
aaa
mov
data16
mov
mov
xor
pop
or
in
rcr
scas
pushf
inc
xor
mov
retf
pop
sahf
dec
out
push
mov
(bad)
and
dec
ss
or
pop
or
lds
mov
xchg
xchg
add
jno
mov
adc
outs
jmp
sub
push
leave
pop
daa
cmp
fsubp
call
cmp
repnz
fwait
rol
or
dec
into
repnz
sbb
and
sbb
inc
add
pop
sbb
and
stc
out
xor
jmp
xchg
xlat
jg
js
or
call
push
test
push
mov
test
pushf
add
cli
icebp
imul
sub
imul
iret
jno
scas
mov
(bad)
ins
stc
dec
in
leave
outs
leave
aas
pushf
jg
jmp
stc
or
scas
push
jl
mov
add
inc
aam
dec
push
call
das
mov
frstor
push
fsubr
xchg
clc
pop
out
rcl
scas
jmp
mov
pop
pop
sbb
(bad)
cmp
xor
jno
fistp
and
loope
mov
pop
mov
ror
mov
mov
inc
and
mov
(bad)
sbb
jnp
jne
jp
dec
xlat
push
popf
dec
dec
sbb
fcomip
dec
retf
mov
out
xchg
test
fild
in
int3
push
lods
(bad)
cmp
and
mov
adc
fistp
out
xchg
es
leave
add
int3
mov
cmc
pop
xchg
sub
adc
addr16
jp
jb
sub
sar
xchg
add
dec
iret
cs
mov
stos
mov
retf
je
or
jle
lock
adc
retf
sti
cs
retf
adc
pusha
pop
in
or
inc
or
add
sbb
xchg
sub
mov
dec
push
jl
loopne
rol
aas
push
aas
sub
pushf
call
inc
bound
mov
imul
xor
xor
setne
int
mov
out
and
xchg
ret
inc
adc
xchg
jp
mov
addr16
sub
mov
adc
in
popf
dec
jne
scas
xchg
mov
fdivp
mov
btr
mov
or
pminsw
adc
pop
in
xchg
inc
int3
mov
test
data16
lock
push
ins
jl
hlt
mov
push
push
push
lods
cmc
les
dec
mov
fcomp
jmp
dec
inc
sub
dec
xor
fiadd
jmp
arpl
mov
nop
rcl
sub
pop
popa
test
pop
loop
dec
pop
cmp
ss
gs
shr
leave
sahf
sub
stos
mov
jns
mov
xchg
sub
call
or
pop
jnp
mov
cmp
cmps
ss
pop
fwait
pop
(bad)
adc
jae
sub
push
in
(bad)
jne
fnstenv
cld
mov
pop
into
or
stos
push
cdq
mov
aad
sti
add
xor
arpl
dec
jmp
nop
mov
inc
mov
dec
cmps
xchg
sub
mov
out
xchg
xchg
mov
jge
jl
outs
(bad)
mov
jno
fwait
push
and
mov
jnp
in
call
xor
mov
cwde
in
jne
adc
sub
stc
push
xchg
mov
icebp
dec
jle
cdq
cmp
iret
xchg
es
pop
pop
push
add
retf
inc
sub
sbb
shr
mov
inc
jns
and
and
int
out
inc
pop
fisttp
mov
int3
loopne
sub
add
jmp
(bad)
and
fsubrp
push
ins
test
mov
cli
(bad)
push
dec
(bad)
repnz
mov
or
and
outs
sub
pop
je
push
mov
loop
sub
or
repnz
out
inc
in
xchg
arpl
lock
dec
frstor
je
sar
inc
mov
jecxz
div
pop
scas
sub
hlt
or
cmps
int
jle
pop
mov
jp
ret
js
push
shl
mov
jbe
(bad)
cmp
enter
cwde
mov
mov
stos
clc
retf
movs
loop
or
pop
rcr
inc
scas
ins
xlat
inc
add
push
xchg
daa
ja
or
and
fcmovb
cli
pushf
xchg
jp
(bad)
pushf
xchg
add
jae
and
int
adc
sbb
mov
int3
mov
out
jg
push
fcmovb
dec
(bad)
int3
call
pop
hlt
lds
push
fsubr
jb
xlat
lods
xor
mov
cmp
jl
inc
or
dec
addr16
ret
inc
mov
cmp
ins
xchg
jns
jmp
in
mov
jecxz
dec
mov
rol
jae
fwait
cmps
imul
mov
fst
jmp
loope
jmp
ror
ins
aas
and
cmp
mov
xor
js
mov
and
mov
push
mov
leave
leave
in
test
push
xor
xchg
mov
shl
repnz
lds
push
push
or
pusha
xchg
sbb
mov
in
(bad)
shl
jge
lea
or
mov
arpl
mov
pop
test
pop
mov
add
in
sbb
loopne
(bad)
jne
out
out
pop
fldenv
in
inc
mov
push
sub
lds
sub
ja
dec
neg
sub
fstp
jo
jb
sub
push
xchg
dec
cmp
pop
xor
add
out
outs
icebp
or
mov
in
rcl
inc
mov
push
out
dec
out
imul
(bad)
retf
sub
or
dec
dec
jg
or
sbb
popf
xchg
xchg
dec
shl
jge
push
jb
cs
out
push
add
mov
xchg
and
cmp
push
dec
mov
ret
cmp
xor
cmp
xlat
pop
mov
or
sbb
fadd
cdq
jnp
lds
in
mov
(bad)
test
pop
jno
xchg
out
repz
cli
dec
into
sbb
pop
adc
mov
adc
pop
sub
in
xchg
pop
fist
repz
stos
inc
lods
mov
dec
or
adc
adc
test
retf
icebp
sub
sbb
mov
(bad)
lock
jne
jnp
cmp
adc
cmp
xchg
loopne
and
jecxz
outs
mov
xchg
xchg
mov
mov
mov
push
jp
and
sbb
mov
xchg
cmc
xlat
js
mov
aas
retf
xchg
mov
mov
jo
int3
clc
mov
loopne
(bad)
hlt
data16
test
add
or
mov
xchg
jge
mov
sub
and
enter
pop
xchg
dec
jne
inc
das
xor
mov
lds
cdq
scas
mov
push
inc
dec
xor
(bad)
mov
cmps
inc
fdiv
clc
jne
(bad)
xor
sbb
jecxz
mov
out
xor
ret
(bad)
mov
std
cs
gs
scas
outs
call
push
pusha
fidivr
movs
adc
xor
jno
add
lea
jbe
test
adc
retf
xchg
cmp
or
xchg
cmps
(bad)
mov
adc
lea
outs
jns
add
mov
pop
(bad)
push
push
xor
mov
daa
mov
test
xchg
rol
cmps
adc
movs
mov
fist
sub
cs
rcl
jmp
in
imul
pop
inc
bound
sub
das
and
cmp
les
cmp
pushf
enter
stos
data16
add
mov
ins
mov
test
test
push
cmps
sub
mov
mov
mov
(bad)
es
sbb
mov
adc
in
and
arpl
mov
out
retf
push
shufps
mov
movs
adc
scas
mov
(bad)
popa
out
push
cmp
pop
pusha
jmp
inc
sub
cmp
dec
mov
inc
push
lods
out
imul
stc
lods
xchg
or
mov
inc
xchg
push
inc
das
fwait
call
lahf
jecxz
pop
jp
sar
(bad)
jns
sti
fld
aam
pushf
mov
(bad)
mov
xchg
cs
cdq
or
and
push
or
sahf
or
loop
fild
iret
repz
mov
sub
mov
js
icebp
iret
and
movs
repz
daa
leave
jbe
mov
jns
push
add
xor
pop
mov
pop
mov
xor
xor
lahf
inc
data16
(bad)
icebp
xchg
stos
popa
pop
or
pushf
jo
xor
mov
or
xchg
and
mov
dec
daa
cmp
xor
pop
out
jg
mov
arpl
cwde
add
out
sahf
(bad)
xlat
std
pop
add
xor
mov
and
mov
jmp
and
sahf
sub
mov
xchg
xchg
fsubp
mov
fs
test
fidivr
repz
aam
pop
shl
imul
add
mov
inc
lods
cmp
imul
push
sti
ret
retf
xor
(bad)
mov
and
fwait
imul
mov
jle
arpl
sar
dec
stos
mov
je
sbb
adc
or
out
dec
fwait
in
add
xchg
xchg
addr16
ja
cmp
nop
inc
js
and
push
jns
fisub
or
rcr
test
jg
inc
cmp
lods
sbb
imul
jmp
loop
scas
pop
out
mov
jecxz
mov
xlat
jl
scas
stc
or
dec
(bad)
jns
jns
adc
scas
ss
jo
cdq
xchg
mov
es
mov
inc
push
or
into
ror
lods
mov
cmp
jnp
adc
and
push
stc
push
xchg
add
or
push
fisttp
movs
sar
fs
mov
sbb
adc
cmc
xor
les
cld
mov
mov
inc
or
cmp
test
inc
pop
jne
jmp
ror
adc
dec
stos
jno
push
repz
xchg
aad
scas
jecxz
bound
call
xchg
les
(bad)
jl
retf
leave
ret
jbe
push
xchg
out
or
popf
loopne
push
mov
pushf
push
sub
mov
lods
enter
add
adc
pop
aaa
lods
jno
outs
in
icebp
dec
ins
inc
inc
sbb
sahf
sbb
pop
xor
es
mov
push
gs
mov
enter
inc
iret
ins
and
dec
inc
sub
stos
loop
dec
sub
mov
dec
paddsw
stc
imul
test
pop
push
mov
int
std
sub
push
out
jle
cmps
loop
cmps
gs
(bad)
pop
addr16
jno
shr
es
aaa
aas
sub
cmps
sub
stos
mov
xchg
or
enter
(bad)
mov
and
fwait
inc
xor
loop
cmps
cmps
cmp
das
or
xor
ror
push
ins
adc
push
cdq
mov
pop
stos
loop
and
xchg
pushf
fadd
cs
mov
push
daa
push
jp
js
repz
out
int3
mov
jecxz
cmps
jg
gs
xor
sbb
imul
(bad)
int
mov
jle
jae
sbb
pop
ret
leave
shl
dec
xchg
lods
cmp
(bad)
ror
xlat
fnstenv
cmp
(bad)
fwait
imul
inc
inc
ret
mov
jnp
mov
inc
lea
mov
inc
scas
cld
xchg
jmp
sub
add
inc
and
les
or
fstp
xor
push
inc
sub
fadd
ret
test
out
mov
sbb
xchg
jmp
and
retf
scas
movs
stc
add
push
and
popf
mov
sti
cmp
jb
pop
jno
xchg
fnstsw
repnz
ret
cli
inc
mov
cdq
int
hlt
lds
out
mov
xor
inc
pushf
and
jge
inc
xchg
inc
cdq
mov
pop
gs
xchg
cs
mov
je
dec
dec
mov
and
cmp
jmp
cmc
adc
shl
xchg
in
add
mov
dec
adc
sub
js
call
shl
lahf
movs
stos
adc
xchg
int3
cmc
sub
push
inc
xchg
jmp
cmp
fsubr
jns
mov
or
pop
mul
fcmovne
cmc
mov
cmp
popf
mov
stos
mov
pop
pop
dec
es
add
popa
mov
xor
pop
stos
pop
adc
or
icebp
push
jnp
mov
int3
cs
mov
and
xor
push
mov
mov
stos
xor
pop
das
push
loop
enter
imul
and
add
repz
stc
sbb
jg
out
pop
pop
mov
shl
jge
cdq
call
cmp
je
ins
sahf
cmps
sbb
xchg
(bad)
loope
add
iret
les
inc
or
mov
gs
lahf
popw
outs
push
fcmovnbe
dec
arpl
xor
shl
(bad)
movs
in
in
js
aam
loope
and
lea
and
push
das
fadd
xchg
xor
xor
ret
pop
test
ret
fs
inc
mov
ja
addr16
push
in
pop
pop
sub
fs
fistp
cmp
sahf
(bad)
mov
jbe
cld
xchg
je
mov
test
lock
sub
imul
movs
xor
mov
cmp
(bad)
mov
pop
out
movs
out
mov
pop
sbb
xchg
fistp
fst
xchg
pushf
xor
jno
in
retf
push
or
adc
scas
push
aad
or
stos
jnp
stc
in
lock
push
scas
ret
fwait
sbb
lock
iret
adc
sbb
dec
call
xor
out
mov
sbb
ss
jno
in
outs
stos
lods
(bad)
cli
inc
jl
mov
add
ret
mov
iret
retf
xchg
es
popf
repnz
pop
pop
inc
xchg
mov
and
out
mov
xlat
pop
add
lock
or
adc
stos
leave
cmps
push
adc
xor
push
sahf
leave
pop
jge
aad
jae
jmp
rcl
fisubr
sub
jae
push
adc
inc
inc
mov
jb
pop
jp
stc
retf
or
in
pop
adc
mov
aas
movs
mov
dec
movs
inc
mov
xchg
jae
popa
ins
jge
adc
call
repz
add
or
daa
mov
inc
or
je
bound
leave
inc
push
and
sbb
iret
mov
mov
xor
jp
retf
lock
inc
psrlq
repz
xor
stc
mov
outs
movaps
cmp
sbb
sbb
into
imul
aad
pop
pop
jge
push
pop
cmova
push
xchg
call
sbb
cmp
push
fwait
das
add
jne
shl
or
dec
push
pop
xchg
or
sbb
cmp
movs
loope
mov
stos
ins
aad
pop
jne
add
repz
jbe
xor
cld
imul
push
sub
dec
jbe
jne
mov
test
and
popa
xlat
mov
pop
jge
push
sub
add
xchg
jecxz
jle
pop
jns
retf
ss
dec
push
and
sub
adc
loopne
push
add
adc
sub
in
adc
jecxz
imul
pop
push
push
pop
and
lock
retf
mov
sub
jmp
pop
or
pop
mov
mov
call
cmp
mul
mov
pop
inc
mov
and
xor
(bad)
clc
fsub
or
inc
mov
stos
and
sub
push
push
adc
test
(bad)
mov
loope
pop
jecxz
mov
in
imul
add
cmps
push
xor
push
and
stc
stos
xor
imul
scas
daa
or
mov
fdiv
cld
mov
cmc
dec
fcom
xor
mov
shr
push
or
adc
sub
inc
xchg
fisttp
jne
dec
jp
jl
in
fisttp
pop
jns
movs
mov
scas
sar
test
in
jno
add
or
pop
pop
push
inc
push
xchg
(bad)
ror
icebp
and
push
ret
lahf
cmp
dec
and
hlt
mov
inc
mov
ds
clc
jo
movsx
dec
xchg
fcomp
pop
mov
xchg
mov
xchg
and
dec
cmp
in
pushf
push
daa
dec
icebp
or
sub
retf
and
icebp
sbb
je
out
mov
shr
mov
mov
mov
test
addr16
fcomp
sbb
jmp
popf
inc
cld
popf
push
add
xor
pop
adc
retf
xchg
mov
xlat
add
mov
das
add
mov
repz
mov
call
mov
jb
push
cmp
adc
jae
mov
nop
or
fnstenv
jmp
es
jp
and
outs
dec
xchg
jp
popf
jb
lods
cmps
xor
dec
(bad)
xor
ret
mov
xlat
call
cmp
and
adc
mov
sahf
mov
push
mov
mov
.byte
