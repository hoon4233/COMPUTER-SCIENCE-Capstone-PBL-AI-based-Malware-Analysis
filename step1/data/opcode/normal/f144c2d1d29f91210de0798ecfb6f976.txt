add
popf
idiv
dec
dec
je
mov
out
xchg
mov
xchg
stos
cmp
cmps
out
icebp
inc
cmps
mov
es
daa
mov
jle
push
jmp
mov
(bad)
test
sbb
test
pop
ret
rol
out
inc
cmp
xchg
pop
imul
sbb
rcl
test
or
and
outs
jp
xchg
push
ficomp
add
push
mov
ins
shr
push
adc
or
dec
cli
pop
test
adc
pop
out
xchg
jp
inc
dec
add
repz
scas
popf
push
mov
mov
dec
lods
ds
sbb
enter
aam
dec
test
shl
and
or
jecxz
sub
int
test
cwde
mov
repnz
jne
sub
lock
sub
pop
jp
enter
mov
mov
pop
and
inc
(bad)
out
mov
fidiv
retf
or
push
sar
clc
xchg
jne
and
xor
dec
inc
sub
sbb
add
lds
shr
int
xlat
mov
retf
scas
cdq
lods
or
neg
adc
sub
fnstsw
xor
clc
int3
mov
jge
movs
movs
cwde
add
push
out
adc
mov
jne
pop
push
and
push
pop
hlt
sahf
daa
xchg
addr16
or
cwde
lods
sub
and
pop
lods
push
arpl
ret
sar
lahf
jecxz
ror
xor
pusha
mov
aas
in
aam
sar
sahf
xchg
xor
jmp
retf
add
or
push
push
push
mov
cmp
rol
shr
mov
cmc
cmc
or
pushf
call
retf
xchg
mov
data16
in
das
adc
sbb
cmps
jb
sub
jge
repnz
jo
test
or
inc
add
mov
cld
std
cmp
jns
stc
add
xor
sub
xor
dec
sti
repnz
icebp
adc
(bad)
jp
xchg
add
or
cdq
mov
xor
pop
sbb
popf
test
push
arpl
add
ins
es
in
mov
int
fsubr
into
cli
jl
call
cwde
push
jae
cwde
or
push
sbb
add
lahf
xor
mov
dec
das
push
fnstsw
fild
bound
ficom
jmp
jne
js
mov
push
pushf
cmc
jmp
ret
jne
mov
push
and
es
aaa
(bad)
comiss
sbb
imul
fld
xor
call
or
into
cli
les
movs
out
pop
enter
es
mov
push
repnz
and
pop
push
mov
mov
(bad)
adc
add
loop
and
outs
(bad)
ins
(bad)
pop
call
int3
jbe
xor
add
jle
xor
rsm
mov
adc
lahf
rcl
add
add
mov
stos
cwde
xchg
cld
push
fnstcw
in
or
push
add
btc
cmp
neg
mov
pusha
cmp
pusha
pushf
mov
mov
lea
jne
clc
ror
aad
shl
xor
cmp
mov
and
add
pushf
adc
neg
mov
bt
call
jmp
add
or
seto
mov
bt
bt
clc
test
pusha
pushf
lea
je
call
jmp
movzx
pop
pusha
setae
pusha
lea
mov
jmp
sub
std
adc
iret
(bad)
cdq
cmp
inc
cmp
or
test
clc
mov
mov
or
add
dec
sbb
xchg
ins
(bad)
and
in
aam
adc
and
dec
push
icebp
cmp
stos
lock
(bad)
mov
test
stc
mov
xchg
pop
cmps
mov
adc
scas
xor
inc
push
xor
cmps
push
pushf
mov
mov
push
ret
(bad)
std
inc
and
test
jnp
sub
fdivr
jbe
xor
dec
test
mov
sub
lahf
mov
int3
or
popa
push
xchg
jne
test
rdpmc
cmp
pop
add
inc
call
enter
push
cmps
xlat
cli
inc
adc
das
test
loopne
aas
jns
scas
fbld
dec
adc
xchg
stc
push
mov
movs
(bad)
call
push
sbb
adc
add
sbb
mov
dec
cs
xchg
or
sbb
imul
cmp
test
retf
push
pop
xchg
lahf
add
cmp
push
push
ja
call
cmps
pop
mov
loop
scas
lods
jmp
fdiv
mov
xor
ret
cwde
lock
stos
xchg
lods
inc
sbb
push
dec
fcomp
out
jp
cmp
je
arpl
lock
or
push
push
cs
inc
in
shl
ret
les
stos
call
mov
rol
adc
xchg
mov
mov
into
enter
out
sub
pop
adc
dec
sbb
sbb
imul
mov
xchg
mov
inc
pop
clc
and
dec
mov
sbb
inc
cmps
neg
or
sbb
sbb
mov
cld
xor
mov
push
repz
xor
xchg
stos
cdq
mov
ret
in
mov
sbb
je
cmp
imul
xchg
mov
addr16
ins
xor
les
pop
xchg
xor
sbb
jge
push
cmp
stc
into
add
add
cdq
lds
or
pop
or
sbb
and
shl
setbe
mov
mov
push
bt
clc
call
xchg
ror
pop
imul
fcomi
out
mov
xchg
sub
inc
hlt
ins
test
pusha
xlat
push
or
loop
cmp
jbe
cmp
adc
test
xchg
xor
sub
leave
adc
into
pop
sbb
aam
add
inc
in
ret
cmovne
jo
je
(bad)
xchg
dec
pop
push
jnp
mov
push
xchg
cld
daa
inc
icebp
(bad)
fcmovbe
fisttp
cmp
arpl
dec
push
adc
push
dec
add
xchg
add
in
jb
push
not
arpl
or
fsub
inc
add
jle
xor
cmp
retf
inc
xor
add
and
and
mov
sbb
popa
(bad)
pop
push
pushf
stos
pusha
mov
pushf
lea
call
jmp
fdivr
retf
(bad)
xchg
pop
cwde
fsubr
xchg
imul
jo
dec
fst
inc
and
das
or
or
mov
xor
popf
test
inc
(bad)
test
loopne
xchg
pop
jae
cmp
aad
cmp
mov
fcom
pop
push
movs
ror
leave
mov
dec
cbw
inc
or
mov
dec
int
add
jne
loopne
jmp
sub
sbb
fdiv
cli
fisub
aaa
imul
cmps
cs
pop
xlat
jo
lods
push
mov
ds
mov
(bad)
js
mov
sub
ds
aas
loopne
fdivr
ds
je
aas
pop
into
dec
cmp
add
cmp
mov
or
push
inc
cmps
ds
sbb
out
aas
fcmovb
shl
data16
lods
sbb
clc
aas
call
ss
add
or
push
sbb
cmp
add
cmp
or
data16
pop
cmp
add
sbb
aam
ret
enter
add
or
jl
outs
inc
aas
dec
into
stos
cmp
add
inc
fisub
sbb
add
jb
js
data16
mov
stos
sbb
ins
sbb
pop
cmp
sbb
mov
lods
into
xchg
add
inc
fisub
sub
push
aas
ins
into
inc
cmp
add
cmp
stos
sbb
push
aas
jbe
push
cdq
pushf
cwde
aas
mov
loopne
shr
sbb
aas
jl
push
cmp
add
sbb
loopne
fcmovb
ss
push
cmp
add
dec
ds
sbb
(bad)
aas
shl
fsub
ds
or
pop
into
dec
cmp
add
ds
data16
dec
into
mov
inc
(bad)
enter
jbe
ds
sbb
aas
ss
enter
fsub
sbb
movs
les
lods
les
mov
push
cdq
pushf
call
sbb
stos
shl
fdiv
clc
mov
(bad)
retf
pusha
pop
stc
adc
dec
test
loopne
pop
or
(bad)
jnp
jg
xlat
sahf
fmul
mov
push
js
jno
dec
fmul
and
fcom
mov
xchg
jg
ds
repz
sar
mov
fcomp
sub
push
mov
das
call
dec
jge
aaa
loope
xor
enter
add
test
in
xchg
fsub
sar
adc
outs
and
lods
mov
shr
out
push
add
mov
loopne
out
add
fmul
pop
test
inc
push
adc
or
cmps
adc
rol
(bad)
mov
neg
fsubr
fidivr
retf
inc
fsub
or
push
push
xchg
fcom
sbb
xor
dec
xor
leave
push
inc
pop
cwde
add
je
pop
jb
xchg
rcr
jmp
cwde
push
(bad)
fadd
test
xchg
(bad)
imul
jnp
sbb
xchg
jns
lahf
cmps
ins
rol
mov
push
xchg
add
pop
js
loopne
out
addr16
cmp
cmp
repnz
pop
pop
and
rcl
test
mov
xor
jns
adc
std
push
dec
add
leave
ret
jo
test
push
popa
mov
retf
inc
mov
int
fdiv
lea
repnz
cmp
mov
fcom
(bad)
clc
sti
sub
pusha
shr
loope
jle
jle
call
fdiv
pop
xchg
cmps
fdiv
xchg
adc
or
dec
js
movs
enter
leave
mov
fdivr
mov
fmul
sub
dec
pop
pop
mov
pusha
scas
inc
(bad)
ss
xchg
nop
inc
retf
aaa
or
fcomp
and
aam
pop
enter
fld
push
xchg
push
movs
pop
cmp
add
ins
shr
sbb
or
add
popa
ror
or
fs
lds
imul
stos
cld
fsub
add
mov
sub
mov
mov
ins
xchg
stos
sbb
icebp
xchg
out
das
retf
sbb
adc
mov
fdiv
sub
xchg
cmovo
or
rcr
add
sbb
fs
loope
out
enter
xlat
int
cdq
sub
mov
rol
push
les
test
adc
xchg
cld
shr
and
push
push
ret
in
(bad)
cmp
js
(bad)
xor
cmovns
mov
movs
mov
inc
sub
push
mov
fdivr
xchg
outs
jmp
fsubr
sbb
fidiv
cmp
scas
nop
mov
or
sbb
fsubr
push
stc
inc
lea
push
and
mov
(bad)
sti
adc
sub
mov
jae
dec
ds
sub
xor
dec
xor
cmp
sbb
push
aam
xchg
fcom
das
cdq
neg
add
icebp
pop
fdiv
gs
cmp
dec
jnp
rcl
jae
daa
ins
retf
nop
mov
xlat
jne
sbb
fmul
add
outs
fsubr
mov
pop
in
inc
pop
mov
mov
icebp
test
daa
mov
inc
cmp
xchg
mov
(bad)
mov
lods
fadd
mov
or
xlat
pushf
call
in
mov
fmul
(bad)
push
fdivr
(bad)
adc
dec
sbb
movs
cmc
sub
cmp
loope
iret
rcl
add
out
push
xor
fcomp
outs
call
rcr
out
in
fnsave
lds
dec
pop
jne
adc
xor
test
loopne
cmp
aas
or
arpl
loopne
lock
imul
dec
add
cmc
dec
xchg
and
push
fadd
pop
outs
xchg
js
push
pop
fcom
es
imul
imul
sahf
stos
inc
movs
sbb
sbb
fcom
shr
push
push
test
dec
inc
mov
push
sub
and
dec
xor
push
jmp
fdiv
and
pusha
or
dec
cld
sar
enter
xor
push
mov
sbb
iret
xchg
sub
inc
int3
fiadd
int
rcl
clc
das
cmp
push
push
mov
cli
imul
push
sbb
fsub
test
loop
xchg
retf
nop
xlat
push
dec
or
movs
jnp
push
pusha
xor
cmp
cmp
(bad)
adc
mov
cdq
rol
sbb
inc
ret
sbb
add
retf
push
mov
out
mov
mov
shl
or
pop
adc
scas
mov
xlat
jle
aaa
repnz
sbb
sub
in
ficomp
(bad)
push
xor
not
fcomp
test
shr
test
mov
clc
daa
and
popa
je
sub
pop
or
xor
dec
test
fadd
xchg
repnz
adc
jecxz
push
call
xchg
adc
jl
fcom
dec
sahf
sbb
inc
add
sub
rcr
clc
mov
das
sbb
and
and
sub
cmps
pop
xchg
and
mov
jns
pop
iret
(bad)
mov
ds
mov
fs
or
nop
outs
fsubr
and
add
and
nop
add
ja
call
pop
popa
mov
leave
cmp
outs
push
fucom
lea
adc
cli
xor
xchg
arpl
pop
fsubr
(bad)
pop
fstp
lock
(bad)
fmul
sub
leave
stos
xchg
clc
cmps
fdiv
nop
ss
lock
sbb
cmp
sbb
fdiv
out
fld
mov
lds
jne
stos
fadd
popa
or
adc
hlt
jecxz
sbb
neg
ins
mov
repz
jg
dec
loop
fucom
jne
xchg
pop
mov
fdiv
dec
push
or
in
in
lahf
nop
into
ss
das
or
push
out
and
fdiv
pop
pop
add
jl
(bad)
or
add
(bad)
mov
sub
bnd
ficom
test
retf
ins
cmps
pop
inc
and
ficomp
jge
xor
xor
xlat
scas
mov
mov
jg
mov
stos
hlt
fisubr
mov
fcom
xor
mov
ss
adc
loope
imul
dec
cdq
cmp
clc
ins
ror
xor
dec
push
push
sub
and
pop
sub
nop
retf
mov
xor
ins
xchg
jge
push
and
xchg
jne
jmp
and
cmp
fist
gs
add
jbe
mov
jl
mov
push
in
cmp
pop
aas
gs
clc
dec
pop
xchg
dec
cmp
inc
popf
pop
xlat
in
adc
nop
inc
mov
shl
jp
clc
call
or
into
cld
and
loope
daa
shl
js
mov
push
fcomp
xor
xchg
fucomip
pop
sbb
push
fsub
outs
sbb
in
dec
fsub
arpl
jmp
in
retf
pop
out
aam
and
mov
pop
fcomp
adc
xor
mov
mov
pop
fs
ja
mov
xchg
add
out
and
cmp
pop
lds
adc
fmul
cmps
ja
mov
sub
test
shl
inc
and
neg
icebp
fwait
xor
mov
fdivr
xchg
sub
jp
jbe
outs
jo
mov
cmc
idiv
sub
push
or
mov
imul
js
outs
cmp
jo
xchg
ror
dec
pop
add
or
test
push
or
fsub
fwait
and
es
xor
ins
jne
xlat
adc
add
push
cmps
cmp
mov
jb
jae
cwde
das
and
xchg
repnz
(bad)
(bad)
fadd
jne
ins
dec
mov
aam
xor
data16
and
push
ror
addr16
dec
or
push
mov
xchg
mov
(bad)
cwde
cdq
ret
popa
xor
adc
sub
sub
fdiv
push
push
(bad)
inc
ror
cmp
push
or
fmul
retf
inc
mov
or
clc
pop
inc
cli
scas
fst
cmp
sub
mov
clc
ret
cld
stos
loop
pop
adc
ficom
and
enter
das
stos
call
daa
pop
(bad)
adc
cmp
fnsave
ins
mov
and
jbe
sub
xor
mov
pusha
scas
lods
out
sahf
fdiv
fist
and
cmp
enter
cwde
cwde
in
test
outs
mov
sbb
cmp
(bad)
popf
fmul
stc
aaa
retf
rcr
add
mov
mov
or
xor
push
int
and
mov
inc
add
into
lahf
push
sbb
nop
and
enter
mov
mov
push
xchg
xchg
mov
mov
inc
sbb
out
pop
ret
pop
add
add
fmul
outs
test
out
xchg
cmp
fdivr
in
aaa
ret
mov
(bad)
fsub
and
sub
popa
jp
leave
in
sbb
fmul
(bad)
dec
mov
fadd
bnd
retf
jg
fadd
sar
iret
pop
mov
fsubr
aaa
call
inc
dec
mov
and
push
fcomp
pop
sub
or
mov
fdivr
js
mov
scas
aas
push
jmp
adc
fistp
sub
xchg
pop
mov
push
cmp
test
dec
(bad)
fcomp
js
pop
fsub
pushf
sub
lds
xor
jmp
pop
inc
rcl
dec
fdivr
pop
lock
cs
(bad)
mov
fsub
hlt
and
fsub
pop
dec
arpl
mov
aaa
dec
fcmovne
fst
ficom
bound
sub
xor
popf
adc
and
hlt
(bad)
fcomp
(bad)
test
push
fimul
xlat
fadd
fwait
jae
fmul
sub
xchg
lea
fcomp
sbb
scas
test
push
mov
mov
adc
lods
movs
push
dec
jmp
fsub
lds
inc
rol
rcl
xchg
xchg
sbb
nop
pop
or
mov
pop
outs
adc
call
jbe
loop
shr
xchg
sub
push
xchg
sbb
jmp
fcom
adc
imul
aad
add
cmp
pop
and
test
es
fucomi
xchg
xlat
cli
jo
or
loopne
fsub
call
pushf
adc
cwde
jno
das
aad
ret
neg
mov
push
xlat
xor
jp
lea
mov
scas
das
jmp
(bad)
adc
mov
xor
out
cmp
cmp
sbb
pop
pop
fidivr
paddsb
loope
inc
xchg
mov
xchg
jo
sbb
cmp
mov
call
rol
pop
data16
je
movs
ror
jp
(bad)
jbe
push
in
outs
cwde
(bad)
cwde
nop
mul
dec
fcomp
jne
jo
not
sbb
fsub
fdiv
and
arpl
leave
mov
xor
adc
mov
sub
cmp
loop
jne
or
loope
mov
sbb
iret
fcomp
imul
xor
adc
(bad)
cmp
(bad)
imul
push
and
add
loope
pop
pop
inc
lds
ins
add
and
adc
xchg
jno
neg
add
(bad)
fcom
out
test
shr
aad
jp
sahf
fdivr
idiv
jb
pop
jo
add
fld
mov
retf
sub
mov
fmul
aas
mov
cwde
xchg
fmul
out
sbb
outs
fsub
out
add
lods
dec
rcl
lea
repnz
jge
dec
sbb
add
cwde
push
mov
xor
(bad)
dec
mov
neg
mov
ss
mov
test
mov
movs
jmp
into
sub
xor
and
sub
adc
ds
fldlg2
test
fcomp
pop
push
push
dec
mov
sub
lahf
jns
xor
rcr
fmul
inc
mov
jg
and
fdivr
push
(bad)
push
pop
movs
ds
sbb
push
out
jo
arpl
add
call
push
xchg
fdivr
xor
and
and
fmul
add
xor
es
fdivr
test
or
int
jbe
fmul
add
fmul
mov
pop
or
sahf
sti
mov
popf
cld
push
retf
mov
js
mov
push
stos
loopne
xor
adc
fdivr
jle
lods
and
sub
mov
sub
mov
js
ins
js
mov
mov
inc
fsub
push
cmp
int3
pop
es
push
inc
mov
xchg
mov
pop
pop
xlat
rcl
cwde
dec
test
dec
cs
and
rcr
fcom
cs
cli
fdivr
lahf
rol
push
inc
outs
packuswb
je
and
push
gs
jno
push
mov
mov
mov
dec
sub
loope
popf
jns
pop
fdiv
adc
mov
jecxz
sbb
movs
and
mov
push
pushf
das
in
fsubr
jl
xor
push
fadd
xor
inc
jmp
dec
mov
pop
cwde
clc
push
xlat
jae
les
pop
sub
enter
jg
pop
lds
inc
jmp
fwait
pop
daa
(bad)
cs
cmp
xchg
scas
pop
or
inc
shl
sub
fmul
hlt
rol
jno
mov
push
cld
fsub
or
or
ror
repnz
xor
(bad)
fistp
fcom
mov
jbe
adc
repz
out
lds
xor
sbb
dec
push
and
dec
rcr
push
xchg
aad
stos
cmp
cwde
das
fs
mov
cmp
mov
inc
xchg
push
(bad)
in
push
cmp
or
scas
cmp
or
jne
inc
fadd
jecxz
lock
mov
fsub
dec
imul
ror
mov
aaa
push
(bad)
icebp
outs
mov
fdivr
and
ret
push
addr16
cmps
jo
or
loopne
push
je
cwde
sar
sub
fdivr
fild
fadd
inc
retf
mov
lods
pop
xor
in
sbb
popf
sar
enter
add
cmc
or
scas
mov
in
loope
call
fdivr
cmp
pop
bound
adc
stos
popa
pop
pop
repz
pusha
bound
inc
lds
fmul
xor
iret
xor
mov
mov
sbb
fcom
jo
fwait
(bad)
pop
shr
push
sub
ss
cmp
inc
pop
imul
sbb
inc
dec
fcomp
stos
sub
pop
mov
mov
push
push
push
loopne
cmp
fstp
jle
dec
adc
clc
int3
fdiv
das
pop
out
fsub
sub
jmp
rcr
mov
cmp
stos
loop
test
dec
mov
adc
xor
cmps
push
mov
fnsave
lock
fdivr
retf
pop
sbb
sbb
cli
mov
cwde
cmp
add
pop
push
dec
xchg
pxor
repz
jae
sbb
mov
pop
push
aam
jo
jmp
sti
neg
dec
jb
xor
xchg
scas
fsubr
mov
fcomp
dec
stc
xor
(bad)
or
xor
sbb
fdiv
jo
mov
enter
out
jnp
outs
sub
test
fcom
mov
sub
and
adc
xor
fdiv
lods
add
imul
pop
pop
fdiv
adc
dec
jmp
call
xor
sub
inc
xchg
jnp
rcr
cmc
sbb
fdiv
loopne
inc
xor
push
sub
pop
lods
(bad)
stos
cmps
rcr
mov
lahf
sbb
cmp
mov
data16
mov
in
xor
scas
xchg
lds
xlat
retf
dec
inc
dec
rcl
cwde
icebp
push
fsubr
in
rcl
in
int
out
fcom
(bad)
fst
sar
sub
adc
nop
mov
pop
mov
lods
mov
add
rol
adc
xor
add
mov
pop
mov
imul
pop
adc
add
ror
and
dec
inc
mov
fbstp
push
fdivp
in
add
std
cmp
push
imul
push
das
out
test
fdiv
push
and
dec
push
(bad)
hlt
mov
pop
mov
std
xchg
pop
xlat
(bad)
clc
push
mov
in
mov
dec
neg
fld
dec
adc
add
pop
mov
rol
(bad)
out
daa
cmps
push
test
pushf
push
mov
push
mov
push
pop
push
push
ret
mov
call
add
dec
outs
inc
ins
ins
outs
arpl
gs
fs
add
je
pushf
adc
pushf
lea
jmp
lea
jne
movzx
setl
call
jmp
jmp
pop
xchg
jnp
push
ins
and
sub
inc
add
xchg
dec
adc
sahf
mov
sub
xor
or
mov
loop
cmp
clc
in
mov
jmp
aad
mov
mov
std
jno
aaa
push
push
mov
jbe
and
lods
xlat
loope
mov
xor
or
mov
xor
push
mov
into
les
xchg
int3
stc
cmps
push
cmps
out
not
dec
pop
pop
clc
push
mov
jmp
call
pop
ds
dec
mov
arpl
mov
or
push
add
jb
cmp
cmp
call
call
push
lock
std
std
mov
outs
xor
pop
ret
jae
push
std
cs
mov
pop
xchg
ss
jl
sbb
jge
stc
in
enter
and
aam
push
rol
(bad)
pop
test
add
dec
add
je
push
sbb
in
xchg
push
(bad)
mov
aaa
sbb
mov
jmp
pop
aad
mov
pushf
lea
jmp
jl
jno
sbb
jecxz
aam
jmp
stos
cli
hlt
jg
ss
mov
lock
dec
cmc
cmp
mov
adc
jg
push
mov
retf
mov
lock
mov
pop
or
pop
test
gs
rcr
pop
addr16
and
jge
hlt
sub
adc
cmps
pop
in
rcr
xchg
push
cmp
(bad)
or
iret
pop
mov
adc
into
adc
cmp
cmp
fld
adc
ficom
mov
mov
xor
mov
mov
and
int
loope
rcl
xor
or
add
nop
mov
bt
add
stc
pushf
test
mov
movzx
cmp
shl
push
mov
clc
jmp
jmp
mov
pushf
push
push
pop
push
push
ret
bt
stc
test
xor
pusha
mov
inc
lea
pushf
jmp
js
or
sbb
ret
dec
jmp
add
mov
xchg
mov
out
ins
(bad)
(bad)
or
jns
sbb
sub
scas
add
adc
mov
push
mov
pushf
inc
xlat
mov
call
es
cwde
push
inc
jbe
aaa
fcmovu
pop
add
cmc
icebp
mov
xchg
aas
call
jle
dec
push
stos
pop
shl
gs
hlt
call
mov
cmp
repnz
or
sti
sti
arpl
mov
lds
adc
ror
inc
(bad)
rol
outs
cs
jl
inc
out
push
mov
push
dec
outs
int
jg
or
mov
add
dec
frstor
push
push
mov
sub
ins
inc
sbb
sar
cmp
jne
add
(bad)
mov
je
sbb
push
mov
fsubr
push
addr16
dec
mov
mov
or
add
aad
dec
mov
mov
or
adc
ins
mov
mov
add
nop
jmp
pop
fiadd
pop
(bad)
lock
xlat
push
cdq
aam
sub
xor
(bad)
mov
nop
jg
and
mov
(bad)
mov
out
pop
inc
not
sahf
shr
out
(bad)
shl
and
add
add
sti
push
sub
int
mov
sbb
(bad)
dec
js
ins
sbb
push
sbb
mov
inc
shr
xor
ret
xor
faddp
sub
mov
mov
sbb
fdivr
nop
fldenv
adc
fcomp
dec
ins
sbb
add
(bad)
mov
or
dec
push
pop
jno
stos
mov
sar
jb
add
dec
rol
jmp
fld
cmp
imul
sub
jmp
xchg
mov
adc
sub
xor
dec
ffreep
cmc
fmul
out
fbstp
mov
je
xchg
pop
add
dec
test
lock
sahf
stos
mov
mov
push
fisubr
sbb
arpl
xchg
ds
sbb
(bad)
mov
pusha
in
pop
int3
push
jecxz
es
fimul
gs
xor
and
and
mov
push
jb
push
int3
jb
xor
mov
xor
cld
arpl
call
xor
std
jp
mov
or
add
inc
or
(bad)
jg
push
stos
push
pusha
lods
pusha
inc
call
xchg
lds
mov
sub
hlt
jl
inc
push
xchg
jnp
cmp
sub
pop
adc
xor
push
and
loopne
sbb
pop
std
inc
jno
sbb
jecxz
fwait
and
lods
jbe
je
out
xchg
mov
sub
and
test
add
bound
mov
pop
imul
add
xor
push
adc
pop
and
push
lahf
mov
repz
mov
in
pop
call
sar
add
lock
lock
jmp
outs
test
push
outs
cmp
jae
fs
cmp
(bad)
sbb
fcomip
cmps
xor
jg
jbe
mov
fsubr
enter
loop
push
sti
and
fbstp
cli
movs
in
and
xchg
inc
adc
inc
ror
cs
mov
loopne
(bad)
jmp
sub
dec
or
std
jmp
push
sbb
lock
or
or
add
cmc
daa
push
cmp
mov
icebp
jno
jecxz
js
inc
add
addr16
add
sti
in
scas
retf
(bad)
(bad)
lods
stos
mov
in
xor
ror
push
dec
push
in
add
call
or
js
int3
fdiv
outs
mov
ds
pop
imul
test
add
imul
stc
or
push
test
push
data16
test
sub
inc
iret
add
inc
fisttp
std
adc
inc
sub
bound
and
add
fucomip
sbb
fxch
lods
retf
(bad)
hlt
sti
add
xchg
adc
or
cld
mov
sub
pop
test
(bad)
xchg
dec
into
cmp
inc
in
in
jmp
jmp
ja
sahf
jecxz
add
ror
loop
sub
gs
mov
std
xchg
call
fwait
mov
cmp
jno
mov
(bad)
addr16
add
rol
push
sti
push
sbb
movs
lods
mov
out
loope
dec
cmp
or
mov
jmp
lods
pop
fiadd
xchg
jne
mov
leave
movs
adc
ja
dec
repz
and
sbb
jp
nop
cld
int
xor
xor
sbb
punpckhwd
cdq
(bad)
mov
in
mov
cmp
mov
dec
xchg
adc
cmps
or
sti
xchg
retf
mov
push
call
add
dec
outs
inc
jb
gs
fs
add
pushf
lahf
mov
push
movsx
setb
lahf
lea
push
push
mov
mov
push
pop
pushf
push
ret
cmp
call
add
jmp
jmp
mov
lea
push
pop
push
cwde
mov
movsx
call
pop
(bad)
jle
sub
stos
pop
fs
push
call
stc
ret
ins
mov
jecxz
sub
stos
scas
jne
ins
std
jge
daa
sub
or
dec
adc
pop
xchg
cld
or
imul
mov
sar
inc
call
cmp
mov
inc
loop
add
pop
movs
jl
sar
cmps
jge
push
mov
inc
mov
scas
imul
sbb
and
jae
lods
sub
cmp
xchg
das
jg
nop
mov
add
int3
cmp
cmps
rcl
mov
jmp
pop
fnsave
cmp
gs
cdq
mov
lea
or
dec
nop
sbb
cld
leave
cwde
cmp
push
movs
mov
cmp
lahf
cli
mov
fs
je
call
sar
ins
dec
mov
add
cwde
scas
lods
or
xchg
call
inc
push
imul
nop
cmps
test
fnstsw
push
inc
je
cld
scas
enter
or
jne
ss
or
jle
cwde
push
int
(bad)
rcl
cmp
test
xchg
in
fistp
xor
cmp
out
or
frstor
mov
mov
inc
cld
fidivr
out
xor
pop
mov
enter
into
push
aad
(bad)
aam
addr16
push
mov
(bad)
jge
jp
dec
sub
popf
and
lahf
lods
pop
(bad)
movs
dec
out
pop
inc
push
lahf
or
pop
lea
jge
xor
sbb
ins
aad
or
cli
xor
cmp
call
lea
jb
stc
stc
cmc
push
cmp
pushf
jmp
lea
jne
setb
mov
inc
test
test
sub
pusha
shrd
push
jmp
lea
call
pushf
push
pushf
mov
lea
jmp
shl
push
pushf
mov
lea
je
call
lea
jae
pushf
pusha
mov
pusha
lea
jmp
loope
call
imul
ins
pop
sub
cmps
pop
in
mov
loopne
stc
js
out
movs
or
mov
and
inc
and
jle
dec
and
adc
daa
xchg
mov
add
ficomp
popf
out
fs
adc
adc
loope
popa
jne
xchg
(bad)
repnz
(bad)
push
pop
push
pop
inc
outs
cmp
imul
in
jne
daa
sub
retf
nop
shr
std
jmp
cmp
and
push
xor
jg
jp
call
outs
mov
sbb
sti
mov
push
push
ins
int
xchg
inc
dec
and
pop
out
push
ficomp
sbb
fnstcw
mov
lahf
push
mov
lahf
clc
leave
push
mov
mov
outs
sbb
mov
fdivr
inc
test
enterw
pop
test
xchg
push
mov
inc
cmp
movs
mov
outs
mov
xor
int3
std
or
and
push
xchg
inc
(bad)
jns
lock
(bad)
sub
das
jns
das
cmp
mov
mov
fadd
jnp
stos
stc
xchg
xchg
jns
sub
mov
jae
sub
xchg
ficomp
jmp
mov
mov
mov
fisttp
xor
nop
jne
ret
jo
pop
xlat
cmp
mov
mov
test
ffreep
mov
sub
inc
and
js
sbb
push
cmc
shl
cmp
inc
add
or
clc
sbb
fimul
dec
and
mov
mov
push
lea
jmp
lea
jb
call
pushf
mov
pushf
pushf
push
ret
jg
push
pusha
lea
jne
lea
shrd
jmp
dec
mov
sbb
cmc
mov
clc
push
repnz
call
sete
cmc
call
push
pop
mov
pushf
push
push
ret
mov
pusha
jmp
retf
cmps
jmp
add
inc
jae
add
push
loope
cs
xor
repnz
sbb
and
mov
or
xor
cwde
ins
shl
and
or
sbb
es
push
xor
xchg
adc
scas
popf
daa
outs
data16
mov
mov
pop
sub
out
mov
pop
les
mov
pop
outs
ficomp
and
xor
ss
mov
int
adc
sbb
sub
cmp
jle
call
test
arpl
retf
and
fstp
push
xchg
xor
sub
push
or
and
aam
and
dec
xchg
xor
sbb
mov
mov
lds
call
pushf
lea
je
bswap
jmp
mov
lods
popa
mov
stos
mov
lahf
or
mov
cmps
cli
loop
repz
es
call
rol
fcmovbe
(bad)
sti
repnz
idiv
int
add
dec
out
pop
loop
call
in
cdq
pop
retf
ret
pop
cwde
test
imul
jae
mul
mov
scas
xor
es
aas
cmp
sti
xor
jne
test
les
test
sti
jge
dec
(bad)
sbb
cmps
mov
and
push
bound
mov
retf
sar
les
mov
pop
ficomp
hlt
mov
jp
mov
cwde
test
popf
adc
jmp
and
jecxz
add
inc
es
aas
stc
aad
jg
mov
test
es
dec
(bad)
fcmovnu
ret
push
dec
(bad)
leave
fucom
pushf
inc
rol
mov
mov
xor
adc
mov
and
mov
clc
cmps
dec
cmp
pop
(bad)
push
mov
cmp
icebp
inc
jecxz
inc
xchg
ins
int
out
das
gs
or
ins
hlt
test
mov
mov
inc
mov
cwde
xor
mov
imul
in
retf
dec
sub
dec
adc
fcmovbe
(bad)
in
in
adc
out
jmp
inc
push
mov
in
or
jle
add
aaa
jp
test
outs
hlt
cs
cmc
cmovg
ins
call
pusha
mov
lea
jmp
loope
popf
pop
in
adc
jecxz
sbb
mov
shr
dec
cli
adc
inc
(bad)
ss
repz
(bad)
dec
out
sub
push
leave
ret
cmp
mov
inc
cdq
pop
add
imul
mov
ror
mov
jne
pop
cli
dec
ins
das
mov
push
jnp
test
jecxz
adc
addr16
frstor
xchg
pop
fisttp
je
add
(bad)
sahf
push
ret
mov
nop
push
xchg
out
sub
inc
sbb
push
jo
jno
cdq
in
xor
or
hlt
es
pop
cmp
xor
pushf
push
ret
movzx
pop
mov
not
movsx
lea
jmp
add
add
not
jmp
lea
ret
add
jmp
ss
mov
cmc
jb
pop
into
xchg
inc
stc
cmp
into
mov
lahf
jmp
aas
retf
cmp
jecxz
shl
lock
pop
and
or
in
xchg
sub
arpl
sub
sbb
xchg
mov
mov
xor
fsubrp
test
dec
aad
loopne
add
scas
outs
jae
inc
xor
inc
xchg
sbb
ins
sbb
mov
imul
cdq
popf
in
popf
retf
stos
or
inc
xchg
dec
or
pop
nop
out
stc
fiadd
cmp
or
push
out
arpl
pop
mov
inc
sub
mov
pop
leave
enter
add
push
lea
repnz
dec
mov
data16
pusha
push
out
fstp
loopne
loope
fld
sub
ret
lock
aam
push
sbb
or
bound
cwde
add
sub
inc
cmp
cmp
mov
(bad)
or
jb
dec
rcr
inc
call
ss
ins
hlt
jno
xor
pushf
(bad)
enter
jb
cmps
dec
dec
push
sub
sahf
clc
cmp
mov
adc
push
sub
cwde
mov
leave
xchg
or
sbb
sbb
cmp
or
mov
enter
leave
fiadd
sar
hlt
mov
in
in
ins
mov
popf
inc
jnp
cmp
popa
ss
pop
mov
out
std
retf
xchg
mov
loop
xor
ror
xlat
(bad)
pusha
mov
in
loop
cwde
pop
mov
or
sub
adc
xchg
mov
pop
mov
push
sub
inc
(bad)
enter
fucomp
aam
imul
adc
mov
xor
test
lock
call
(bad)
hlt
mov
les
into
lock
inc
test
outs
mov
sbb
jg
les
fwait
add
xor
pop
test
xlat
imul
pop
cwde
ins
enter
fs
xor
jmp
mul
sbb
pop
es
jl
pusha
mov
in
retf
pop
clc
pop
xchg
push
xchg
mov
(bad)
std
or
les
aaa
mov
mov
cli
push
hlt
or
xchg
sbb
mov
dec
fidiv
add
cmp
mov
and
pop
in
outs
imul
adc
fisubr
rdpmc
push
sbb
mov
xor
jae
loopne
popf
sub
mov
sub
retf
loopne
call
fcom
mov
pop
push
inc
add
(bad)
jmp
mov
and
out
jmp
mov
cmp
inc
or
ror
pushf
aam
sbb
jl
das
add
inc
bound
iret
inc
jb
pusha
inc
or
les
xchg
inc
mov
(bad)
xor
inc
js
jns
jae
in
mov
outs
pop
adc
push
fld
call
sub
ror
mov
dec
fld
cs
jge
sub
leave
cmp
mov
push
push
jp
leave
inc
dec
mov
mul
pusha
xchg
enter
pusha
mov
(bad)
aam
std
shl
dec
pop
popf
dec
sub
int
cmp
and
inc
adc
adc
mov
jae
shr
pop
ins
cdq
enter
jno
int
jmp
shl
adc
cmp
arpl
sub
inc
dec
lock
aam
ret
sbb
pusha
mov
sbb
dec
les
scas
adc
jne
into
jg
xchg
push
cld
xor
retf
sub
pop
jb
dec
jno
ret
sub
or
test
ret
jno
or
stos
in
jle
in
mov
pop
shl
in
retf
sbb
jmp
adc
std
scas
xor
pop
fsub
int
fsubr
add
into
mov
call
xchg
sbb
aad
adc
mov
pop
movs
pop
iret
xlat
ins
jle
into
outs
fstp
retf
push
lds
pop
mov
ffree
ret
xor
or
das
sub
(bad)
fst
add
xor
scas
jle
shl
(bad)
mov
fs
pop
out
es
xlat
stos
and
mov
inc
imul
sbb
(bad)
fisubr
inc
in
xor
cmp
sub
jge
mov
xchg
jo
and
aaa
sbb
sbb
leave
sbb
inc
retf
aas
inc
mov
loopne
push
mov
jmp
repz
movs
push
ins
mov
loopne
ror
and
enter
test
fcom
jns
cmp
xchg
jg
jg
call
xchg
mov
xchg
inc
pushf
int3
scas
fild
in
sub
and
dec
adc
mov
loopne
call
adc
in
pop
push
sbb
pop
cs
and
cmp
add
add
int
inc
push
in
fsub
data16
pop
xchg
xor
outs
imul
jne
pusha
call
hlt
mov
nop
out
imul
xor
lock
push
aas
pop
pop
push
inc
int
das
inc
retf
fstp
imul
les
adc
(bad)
mov
fnsave
in
jg
jmp
lds
jae
enter
sub
sar
test
(bad)
in
mov
popf
mov
cdq
mov
sbb
fistp
out
pop
into
pop
adc
pusha
mov
sbb
mov
ror
mov
shl
xor
lds
xor
loopne
dec
movsx
jle
ja
lock
ja
das
jno
pushf
sbb
adc
sub
sbb
fld
push
mov
or
pop
retf
jnp
rol
cmp
jnp
or
imul
pop
jmp
outs
ins
daa
sbb
xor
jbe
or
jnp
arpl
rep
out
pop
cmp
cmp
mov
fcomi
popa
scas
ror
cmp
arpl
adc
cmp
mov
retf
sbb
sbb
sub
fcmovnbe
stc
add
push
mov
lea
jne
cmp
mov
mov
push
sub
shl
neg
btr
shld
lea
stc
cmc
sub
call
jmp
data16
mov
sbb
das
mov
sbb
add
push
xor
pop
inc
mov
mov
fdivr
lock
xchg
cld
test
jp
call
jae
dec
repz
mov
aas
bound
loopne
dec
xor
dec
jbe
retf
clc
mov
mov
ja
sub
or
retf
(bad)
(bad)
mov
cwde
jmp
daa
cld
ja
add
xchg
out
fmul
iret
das
sub
pop
lds
dec
or
dec
and
inc
sbb
pop
lods
adc
stos
push
test
xchg
movs
and
mov
or
or
in
addr16
add
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
test
(bad)
mov
cmp
mov
ret
add
push
lea
jmp
les
rcl
xchg
fwait
in
das
aad
retf
fiadd
jns
dec
ret
mov
or
add
leave
ret
and
sahf
and
call
shr
sbb
into
imul
cmp
xchg
add
sbb
div
jmp
add
(bad)
xchg
fwait
in
lods
mov
mov
out
xlat
shr
test
cmp
data16
dec
adc
gs
and
imul
imul
mov
dec
call
cmp
adc
and
adc
int
out
mov
das
pop
(bad)
cmp
ins
stos
test
std
mov
ins
xor
jbe
and
sub
ds
cmps
sti
enter
lea
lahf
jmp
cmps
push
add
(bad)
clc
repnz
shl
push
lods
push
jmp
lea
jbe
shl
push
bsf
mov
sar
mov
cmp
add
shld
mov
sar
neg
add
clc
dec
sar
mov
bsr
rol
ror
btc
mov
bt
bt
cmp
call
xchg
iret
mov
inc
mov
add
mov
mov
inc
xor
pandn
imul
mov
mov
mov
shr
outs
gs
ja
cmp
arpl
outs
pop
sbb
adc
addr16
call
sbb
adc
adc
pop
sub
test
cli
shl
out
sub
clc
aad
push
enter
mov
fs
and
retf
mov
cld
mov
mov
mov
ds
add
loope
sbb
push
mov
dec
movlps
jmp
adc
push
mov
pushf
mov
pushf
push
pop
pushf
push
mov
mov
push
ret
movzx
lea
rol
cmc
inc
mov
cmc
bt
add
pushf
pushf
bt
mov
jmp
mov
call
mov
cwde
push
pop
movzx
pushf
mov
pusha
mov
mov
lea
mov
mov
mov
pushf
push
call
lea
jne
xor
push
shrd
stc
mov
push
add
call
dec
clc
cmc
bt
mov
shr
lea
jo
pusha
mov
lea
je
push
adc
pushf
pusha
pushf
lea
jmp
jae
jb
dec
dec
iret
adc
mov
and
dec
hlt
mov
inc
jmp
int3
aaa
add
jnp
lock
shr
mov
daa
jle
popa
jl
sub
je
movs
add
(bad)
repnz
cmc
sbb
movs
aam
cdq
test
cli
sbb
and
retf
aam
mov
bswap
sbb
inc
mov
and
pop
sbb
inc
inc
cli
xor
jne
loope
inc
out
dec
aas
and
fwait
sbb
push
mov
xchg
jle
mov
xchg
or
and
inc
int
lock
pop
out
int
xlat
mov
sbb
movs
repnz
adc
cmc
out
jno
push
or
out
iret
(bad)
or
inc
es
jmp
push
mov
jmp
mov
add
bound
jnp
mov
(bad)
fsubr
cmc
dec
push
shr
in
daa
xchg
sub
dec
hlt
xlat
jl
dec
js
sub
sahf
sub
add
cmp
enter
sub
pop
push
dec
outs
lahf
leave
rcr
daa
gs
push
(bad)
or
or
mov
int3
or
jg
aad
icebp
popf
shl
mov
sbb
shr
test
and
mov
imul
pop
mov
jmp
xor
popa
cmp
shl
aam
jle
cmp
mov
fst
mov
mov
mov
movs
mov
sti
(bad)
xor
outs
sub
mov
movs
jnp
cmp
mov
int
fldcw
mov
js
mov
jg
jbe
push
adc
nop
mov
inc
or
out
test
sti
push
ja
mov
push
dec
pop
jns
or
cwde
cmp
fldcw
js
mov
inc
retf
sub
adc
repnz
(bad)
xchg
mov
(bad)
pop
outs
or
or
pop
call
push
xor
xchg
sti
enter
jae
fistp
sub
out
imul
in
and
clc
int3
loop
icebp
mov
dec
xchg
xlat
mov
retf
imul
adc
out
push
adc
je
jnp
nop
pop
fs
repnz
pusha
or
or
push
cld
daa
xchg
nop
call
loopne
std
daa
in
loopne
pop
inc
clc
inc
xor
xor
push
inc
rol
lods
mov
dec
stos
in
mov
sar
add
es
push
jne
out
aas
sbb
lods
mov
ret
sbb
mov
loopne
sub
push
hlt
xor
pop
out
pop
cmp
cmp
(bad)
push
mov
mov
mov
xchg
je
inc
add
or
or
js
dec
cmps
es
popa
jl
int3
stc
aam
jb
repnz
xchg
xor
cmp
lahf
in
mov
ds
and
je
jo
mov
push
push
pusha
xchg
movzx
jmp
cmp
xor
call
or
cmp
jmp
fst
aaa
out
cwde
inc
dec
pop
jno
(bad)
imul
fdivr
add
add
outs
sub
mov
aas
mov
mov
inc
or
push
cmp
cld
cmps
shl
cs
cmp
retf
fadd
jg
js
lea
ror
cmc
or
mov
es
or
in
jge
icebp
push
mov
lahf
movzx
lea
call
fidiv
inc
imul
adc
mov
sbb
loope
sbb
retf
lds
pop
pushf
jle
in
enter
(bad)
mov
loopne
cmc
cdq
xor
or
call
in
cli
push
xchg
shl
sub
inc
out
loope
mov
cmp
iret
cmp
enter
loop
adc
arpl
outs
std
test
mov
cmp
out
cld
loope
ins
sbb
dec
jae
sahf
cli
jno
mov
(bad)
or
pushf
scas
cmp
mov
adc
in
pop
pop
sbb
(bad)
gs
retf
sub
cmp
shl
loop
pop
bound
cld
(bad)
dec
push
ret
in
pusha
clc
pusha
add
jmp
stc
add
push
pusha
push
push
lea
jmp
bts
mov
clc
cmp
xor
call
mov
mov
call
mov
mov
push
push
retf
imul
cdq
mov
into
lea
je
movs
mov
cli
add
pop
dec
inc
sbb
fwait
mov
dec
scas
imul
jmp
add
jl
jno
dec
(bad)
mov
mov
jecxz
or
jp
add
test
jl
je
mov
push
mov
in
sbb
cmp
sbb
out
nop
iret
inc
icebp
inc
jmp
cs
adc
push
leave
lods
rcr
addr16
jecxz
adc
paddusw
jbe
dec
gs
mov
add
lds
iret
aaa
in
ss
je
pop
adc
inc
jp
xchg
movs
mov
mov
sbb
fwait
dec
mov
jae
sbb
push
mov
jmp
outs
arpl
jl
jae
jae
add
jnp
movs
xor
lahf
fnstsw
or
jge
punpckldq
stc
fwait
mov
xor
bound
hlt
mov
test
fnstenv
ror
jae
stos
icebp
out
push
add
pop
hlt
sbb
xchg
mov
ja
jno
mov
test
clc
int
fstp
fsubp
in
test
or
pop
adc
add
mov
leave
adc
test
test
rcr
push
loope
stos
clc
dec
jb
test
aaa
stos
jg
push
add
mov
dec
adc
lahf
loope
rcr
bt
mov
test
test
pushf
lea
je
bt
pushf
add
jmp
call
and
pop
in
or
in
mov
adc
(bad)
xchg
dec
and
(bad)
stos
mov
ja
inc
fild
pop
xchg
dec
pop
push
stos
lds
adc
in
call
stc
in
jb
add
inc
lock
mov
jnp
pop
dec
cmps
cli
loop
mov
mov
test
bound
or
cmp
pop
ins
or
jmp
push
add
pop
in
in
fnstcw
sub
ror
loope
sbb
stc
test
lods
jo
inc
ret
in
nop
dec
cmp
cmc
mov
daa
cmps
adc
imul
jmp
data16
jmp
cmp
jmp
(bad)
dec
pop
dec
and
or
loopne
pop
ror
mov
mov
not
cwde
not
lea
jmp
out
cmc
out
ret
push
mov
inc
mov
rcr
ins
mov
jno
into
adc
pop
les
int
cmc
cmp
rcr
test
mov
dec
rol
adc
stos
in
adc
xchg
mov
or
scas
jmp
cmp
dec
fcmovne
cmps
mov
sbb
(bad)
mov
add
push
sub
mov
and
xchg
sbb
or
sbb
jae
mov
mov
xchg
ss
hlt
rol
sahf
push
pop
pushf
xlat
fcmovnbe
xor
sbb
mov
xor
cmp
int
scas
jbe
std
inc
jp
push
pop
bound
imul
jno
pop
les
cmp
retf
pop
sar
jp
cmp
movs
mov
dec
push
bound
mov
cmp
pop
or
ror
loopne
sbb
xchg
jmp
push
ret
outs
mov
out
mov
mov
retf
cmp
mov
imul
std
push
mov
jecxz
fsubr
inc
mov
fistp
sbb
xor
jae
sub
add
addr16
push
stc
xchg
push
inc
add
fs
inc
fwait
or
mov
test
xor
minps
shl
mov
add
popa
add
mov
addr16
inc
push
cli
inc
sbb
jns
inc
inc
pop
xchg
or
sbb
or
or
or
fbld
mov
sub
inc
push
jbe
push
aam
pop
stos
inc
leave
xchg
xor
cdq
mov
stos
push
cmp
aad
test
movs
gs
pop
push
xor
inc
mov
push
aas
je
pop
inc
sbb
add
sahf
(bad)
or
sub
inc
mov
or
jle
push
fwait
mov
test
push
adc
test
push
sub
adc
outs
dec
mov
call
sub
rcr
pop
(bad)
mov
fidivr
cld
push
fimul
xchg
mov
sbb
mov
jl
push
xchg
rcl
xchg
pop
jae
mov
xchg
cmp
and
lock
jmp
hlt
fcom
sub
addr16
pop
and
and
mov
mov
cld
push
pop
or
fbstp
imul
xlat
push
mov
jb
jb
push
sub
retf
hlt
push
imul
mov
lock
jge
mov
rcr
scas
cmp
or
fs
xchg
push
ds
pop
and
in
add
pmaxsw
mov
mov
sbb
mov
scas
xor
(bad)
push
imul
shld
scas
jge
dec
retf
add
add
cmp
xlat
icebp
pop
in
sar
pop
push
fcmovne
mov
mov
stos
inc
es
cmp
ja
cli
and
mov
mov
leave
outs
jno
inc
xor
xor
rcl
sub
push
pop
mov
ror
mov
pop
repnz
shl
ins
fs
ins
sbb
daa
push
int3
repnz
icebp
xchg
sbb
inc
addr16
sbb
ror
popa
lods
push
cdq
ror
(bad)
int
mov
jbe
aam
vpsubd
jmp
mov
scas
rol
fwait
mov
mov
jae
ret
and
xor
jo
sar
jb
xchg
mov
add
add
mov
jmp
sbb
sar
rcl
sti
js
sub
xor
cmp
mov
mul
push
sub
out
mov
rcr
fcomp
(bad)
out
and
rcl
sub
aam
xchg
mov
cmp
mov
repz
loope
sbb
ins
shl
lahf
add
daa
or
fst
dec
bound
bt
test
call
or
pusha
pushf
call
mov
bswap
pop
pusha
pushf
mov
push
ret
mov
mov
lea
jmp
mov
push
mov
push
lea
jmp
sbb
ficomp
pop
cmp
inc
idiv
repz
sti
sbb
mov
call
stc
out
sbb
lds
xor
mov
into
jmp
push
in
jno
add
jno
jmp
push
cs
dec
inc
rol
cmc
and
cmps
pusha
sbb
push
and
daa
push
(bad)
sub
xchg
ss
out
dec
loopne
fbld
in
test
or
sbb
sbb
fist
test
sbb
and
popfw
mov
imul
arpl
sub
fmul
mov
pushf
movzx
mov
movsx
add
bswap
mov
lea
pushf
mov
push
pusha
lods
jmp
cwde
pusha
pop
pop
mov
setns
bswap
not
lea
call
mov
pop
pop
pusha
pushf
push
push
ret
pusha
mov
stc
cmp
call
push
push
pop
mov
push
ret
ror
mov
cmp
clc
call
imul
xor
jnp
mov
pop
lds
jmp
sub
push
adc
xchg
dec
scas
jge
mov
jecxz
inc
push
call
in
je
fwait
popf
mov
mov
jecxz
lds
out
call
out
loope
mov
daa
scas
(bad)
pop
xor
movs
sti
sub
outs
imul
icebp
mov
js
pop
jg
retf
jb
rcr
sbb
mov
cs
fsub
leave
fisttp
loop
outs
push
xor
(bad)
mov
xchg
pusha
cwde
outs
je
lods
into
xchg
sub
cmp
imul
(bad)
pop
push
mov
(bad)
xor
aad
cmp
pusha
pop
mov
fldcw
add
dec
popa
jo
outs
arpl
fs
popa
addr16
jo
arpl
jns
popa
arpl
add
inc
and
or
add
call
push
int
into
loopne
adc
xlat
mov
cdq
jae
jp
pop
sub
dec
xor
ficom
leave
xchg
mov
add
loop
pop
les
(bad)
xchg
shr
mov
ja
sbb
or
cmp
not
jo
aas
lsl
(bad)
adc
(bad)
cmps
pop
xor
data16
test
ins
aaa
pop
int3
jmp
push
cdq
js
jl
mov
jno
push
iret
inc
pop
pop
adc
cmp
jge
jge
movs
xor
das
aad
ret
push
into
mov
inc
iret
jae
mov
fwait
dec
mov
inc
ins
je
data16
aad
movs
sbb
ror
shl
enter
aam
in
repz
in
add
push
mov
loope
jo
or
add
(bad)
bound
fcom
cs
pusha
mov
lea
jmp
pop
movsx
lea
pusha
call
aam
(bad)
fsub
adc
std
loopne
mov
fdiv
stc
inc
loop
call
out
inc
sub
mov
dec
xlat
push
imul
popa
mov
ins
imul
mov
sbb
addr16
mov
popf
test
movlps
ja
lods
dec
mov
clc
out
push
add
sti
xchg
cmp
out
enter
nop
adc
repnz
in
movs
in
int3
fistp
xlat
not
pause
dec
mov
jmp
mov
inc
popf
dec
daa
xchg
lds
sbb
jecxz
in
add
(bad)
call
mov
inc
cld
das
sub
imul
pop
shl
mov
or
jecxz
cwde
(bad)
xchg
mov
outs
jo
sbb
adc
outs
pusha
movs
cmp
and
cdq
mov
bound
xor
fadd
cmp
sti
imul
or
(bad)
ins
or
mov
mov
cmps
sar
mov
(bad)
popf
jge
ret
xchg
icebp
shr
jns
nop
inc
cld
sub
xchg
xchg
fisub
loop
pop
in
and
jp
mov
loope
icebp
mov
sti
(bad)
push
add
stos
inc
pushf
sbb
loope
cmp
cmps
sar
and
lods
(bad)
in
cmp
jnp
dec
pop
(bad)
cmp
mov
add
cmp
mov
mov
mov
lea
movs
js
pop
push
inc
pop
ins
xor
xlat
sbb
(bad)
enter
cmp
push
(bad)
fisttp
xlat
pop
pop
test
test
movsx
pushf
xchg
mov
pushf
bswap
push
lea
jmp
call
push
pusha
pusha
pushf
mov
lea
jmp
call
retf
push
cmp
push
xor
test
adc
dec
mov
(bad)
mov
addr16
in
mov
mov
std
repz
stc
retf
pop
mov
pop
sar
iret
(bad)
fcomp
pop
mov
sub
iret
pop
cmp
and
pop
vmwrite
and
retf
xor
mov
bnd
stos
pop
shr
test
loop
aam
sahf
cmp
sar
or
inc
arpl
sbb
sar
(bad)
jnp
and
jbe
cmps
adc
call
div
pop
aaa
in
mov
push
mov
xchg
(bad)
repz
inc
xchg
js
fdiv
fldenv
push
fwait
cmps
call
jnp
pop
call
pop
cwde
jae
inc
retf
loopne
lahf
(bad)
sbb
fwait
mov
jg
cli
pop
pop
add
pop
pop
in
xchg
leave
arpl
jbe
mov
mov
rcr
test
mov
in
add
aam
imul
add
fdivr
pop
shl
pop
stos
xor
fld
jmp
imul
cmp
xor
mul
cwde
or
lds
xor
daa
cld
loopne
cld
cwde
and
and
add
cdq
ror
sub
(bad)
or
dec
pop
push
cwde
imul
test
rcr
xor
mov
jmp
shl
bound
xor
repz
xor
dec
nop
fild
xchg
dec
jno
mov
les
adc
sahf
mov
fld
jae
adc
mov
pushf
ret
or
aam
aad
lahf
mov
movzx
mov
bswap
lea
pushf
jmp
lea
jne
shl
bsr
and
call
(bad)
in
ss
ror
dec
or
in
mov
inc
push
push
xchg
not
xchg
out
dec
jne
mov
(bad)
xchg
xor
movs
arpl
das
fs
xchg
jae
jmp
std
out
cmp
movs
dec
cld
add
ret
cmp
jmp
in
sbb
jne
test
jge
sahf
mov
pop
jp
mov
por
call
xor
in
mov
mov
(bad)
das
mov
pop
jle
add
mov
mov
cmp
lods
leave
xor
stos
mov
out
mov
out
adc
jp
lahf
rol
mov
jno
add
push
mov
push
pushf
lea
jmp
mov
xor
shl
not
sar
shr
sub
sub
push
seto
inc
not
jmp
stos
cmp
add
mov
or
mov
mov
sub
jb
or
imul
(bad)
fidiv
mov
push
pop
and
push
mov
jle
clc
push
xchg
inc
inc
mov
imul
cmp
test
fiadd
mov
cmp
dec
mov
fcom
pop
inc
mov
mov
jge
mov
pushf
lea
fisttp
push
sets
jb
int3
mov
lahf
push
fiadd
xchg
mov
and
cmps
das
cmps
mov
mov
push
test
sahf
and
data16
xchg
xchg
mov
repz
mov
loopne
(bad)
in
lahf
rcr
test
cmp
cmp
or
pusha
mov
lea
jne
xor
rol
adc
mov
jmp
push
xchg
xor
mov
in
mov
add
jmp
push
dec
icebp
stos
out
lock
mov
xchg
test
pop
dec
js
xchg
cmp
dec
and
ja
fild
retf
mov
and
cmps
pop
cmp
mov
mov
adc
jbe
mov
enter
jns
jb
cmps
push
jae
icebp
fwait
(bad)
lods
push
cwde
push
mov
adc
daa
imul
ins
jae
popa
pop
mov
sbb
(bad)
ror
(bad)
lods
ficom
push
push
clc
ficom
xchg
inc
cwde
pop
mov
xor
adc
push
aad
lahf
shl
mov
push
cmps
stos
pushf
push
lea
jmp
sub
and
sbb
push
popa
sbb
jmp
cmps
cli
movs
mov
retf
xchg
ins
repz
in
add
or
comiss
pop
adc
jg
stos
ror
popa
aaa
cmp
ror
mov
out
sbb
inc
xchg
dec
icebp
and
arpl
shr
ds
jmp
push
push
addr16
xchg
mov
dec
mov
sbb
adc
scas
xor
dec
jp
mov
inc
jns
xchg
sbb
pop
xchg
(bad)
hlt
fsub
test
les
out
jnp
scas
cmps
repz
or
adc
mov
iret
or
ror
mov
aas
call
test
test
cmp
push
lea
not
jmp
dec
popf
adc
retf
loop
fsub
dec
inc
rcl
jecxz
pusha
bound
rcr
mov
sbb
sbb
dec
imul
out
pop
in
push
into
cmp
cwde
fs
sub
into
push
mov
jne
inc
jno
xrelease
push
xchg
ficomp
dec
pop
pop
add
xor
data16
push
mov
push
inc
and
xor
cmc
mov
jbe
jmp
ds
mov
aad
pop
add
(bad)
push
push
aas
sub
push
and
pop
mov
test
inc
pop
repz
shr
jge
outs
or
sub
stos
das
aam
enter
adc
mov
dec
push
xor
ror
icebp
dec
dec
ins
mov
push
mov
jbe
mov
or
bound
push
ins
mov
xor
mul
out
pop
xchg
mov
(bad)
out
sub
sti
outs
jp
aad
in
sbb
adc
add
jb
in
fs
stos
jns
pop
std
dec
cs
push
enter
jp
out
fcom
arpl
lahf
cld
mov
xchg
pop
scas
inc
frstor
cmps
cs
in
ret
rcr
adc
mov
pop
lds
xchg
cmp
popf
mov
mov
mov
sub
cmps
pop
push
mov
push
ins
stos
test
xchg
fsubr
adc
pop
xchg
fbld
add
or
shl
ds
lea
jbe
bsf
sub
sbb
mov
shl
clc
mov
mov
je
add
xadd
movsx
shld
btc
shr
pushf
pushf
mov
bswap
sbb
add
jmp
mov
lea
call
pushf
push
call
fidiv
sbb
xor
jle
pop
shr
mov
and
mov
sub
cmp
ds
data16
push
sbb
imul
xor
iretw
pop
mov
sub
push
(bad)
cmps
repnz
mov
cdq
sub
sbb
cmp
mov
das
mov
xor
retf
push
jne
sbb
aaa
shr
adc
pop
in
add
jp
mov
jmp
movs
fisttp
pop
fwait
inc
lods
inc
mov
mov
mov
inc
gs
stos
jp
mov
sti
bound
lahf
into
sar
cmp
test
mov
add
push
cld
(bad)
dec
cwde
ror
add
inc
and
call
jmp
mov
pushf
pushf
mov
pusha
mov
push
push
push
ret
not
push
movzx
pushf
mov
pusha
push
jmp
pushf
pushf
stos
pusha
lea
jmp
mov
adc
ffree
fcmove
(bad)
mov
fs
and
or
test
in
jbe
jle
jo
jbe
adc
test
les
dec
jg
stos
(bad)
aam
cmc
jle
imul
sar
out
or
call
jbe
inc
rcr
mov
pop
adc
ret
loope
popa
push
(bad)
repz
xor
(bad)
in
in
and
rcl
pop
pop
test
call
lock
xchg
stos
repz
dec
mov
cmp
add
jnp
mov
xor
and
or
or
nop
dec
ror
into
popa
outs
jnp
add
dec
popa
ins
dec
popa
imul
gs
lea
je
jmp
outs
jp
mov
adc
jle
xchg
icebp
inc
dec
sub
push
ja
divps
addr16
sbb
data16
fistp
jno
dec
repnz
inc
aad
cld
in
in
inc
repnz
test
retf
faddp
fs
sub
test
xchg
mov
nop
aad
lea
rcl
and
sub
pop
xchg
jne
adc
push
mov
stos
aad
fwait
jne
mov
fwait
aam
and
dec
mov
in
(bad)
repz
lods
out
pop
adc
cmps
xor
mov
outs
adc
test
inc
test
jnp
test
xchg
ins
imul
sbb
jl
add
and
(bad)
and
retf
(bad)
xchg
push
shl
cmp
mov
sbb
inc
or
int3
hlt
stos
and
daa
aaa
inc
or
adc
int3
rcr
test
out
push
xor
ins
adc
dec
daa
imul
xor
pop
jne
lea
out
(bad)
xor
test
push
fcmovnbe
mov
mov
jno
xchg
jmp
jb
xor
sbb
movs
cwde
xchg
and
ffreep
lock
xchg
sti
mov
test
xor
jmp
aas
mov
jge
cs
sti
fstp
adc
aaa
je
pop
xchg
push
mov
jbe
adc
cld
pop
add
jbe
push
clc
add
cli
outs
xchg
inc
cmps
fld
or
int3
aas
jg
ins
lea
je
dec
bsr
shrd
stc
mov
neg
sbb
movsx
add
bswap
movsx
mov
push
call
mov
call
mov
lea
ja
mov
and
sub
cmp
add
add
neg
shld
mov
mov
ror
call
mov
sub
mov
xchg
test
out
add
stos
adc
mov
repz
cmps
jg
mov
pop
into
sub
rcr
lahf
test
adc
loopne
in
mov
dec
mov
out
add
daa
out
fcom
cmp
in
idiv
xchg
sub
scas
call
add
jo
jmp
fisttp
scas
xchg
out
sbb
mov
out
add
bswap
cmp
iret
dec
shl
sar
cs
add
inc
cs
bound
sub
pop
cmps
mov
sub
mov
pop
mov
(bad)
or
imul
add
mov
pop
cmp
sbb
cmp
xchg
sbb
adc
das
aam
or
retf
mov
rol
pop
pushf
not
mov
mov
call
dec
mov
call
sbb
pushf
xchg
lea
mov
shl
shl
push
inc
mov
call
movsx
lea
push
jmp
pusha
lea
je
ror
bsf
xchg
add
push
inc
sub
push
cmc
stc
shr
bsr
pushf
bswap
call
lea
je
stc
stc
clc
bt
add
stc
cmp
clc
cmp
jmp
mov
add
add
add
adc
add
add
mov
pop
adc
and
or
xor
add
or
push
dec
adc
jmp
add
add
xchg
or
add
add
inc
pushf
push
inc
mov
adc
leave
mov
sbb
icebp
je
xor
jne
push
ja
mov
stos
mov
mov
out
(bad)
sbb
sahf
mov
in
and
adc
sbb
mov
out
xchg
aam
das
sbb
cmp
(bad)
retf
ins
xlat
mov
adc
cld
fild
cli
xor
dec
popf
mov
data16
add
mov
iret
icebp
mov
dec
retf
cld
ds
cmc
rcr
fnstsw
cmps
push
das
inc
popf
popf
cmps
fisubr
sub
arpl
fwait
or
or
sbb
sbb
jg
call
mov
or
aam
pop
and
in
add
mov
jb
push
mov
(bad)
fistp
das
int
loop
mov
xchg
or
leave
adc
mov
ja
pop
test
fnstsw
xor
inc
sbb
pusha
pop
adc
stc
sub
push
mov
out
jle
inc
out
dec
stos
dec
mov
imul
iret
test
cmp
jbe
dec
imul
dec
xchg
lahf
ins
je
mov
int3
mov
not
repz
dec
add
and
add
addr16
in
push
ins
das
je
add
lds
jge
or
jno
ins
adc
add
add
mov
xchg
in
test
fwait
push
jmp
sar
sbb
or
fst
ret
cmp
fsubr
inc
xchg
dec
les
ss
cdq
inc
lahf
lahf
lock
call
cmps
add
dec
mov
jge
inc
cmp
add
pop
sbb
jnp
aas
and
xor
mov
mov
push
pop
mov
push
ret
fld
scas
lock
ja
aam
(bad)
(bad)
gs
cmp
push
out
sbb
push
adc
sbb
push
imul
shl
jmp
jmp
sti
out
push
adc
mov
addr16
rol
jg
arpl
add
loope
in
rol
mov
bound
scas
daa
push
ret
mov
push
mov
sbb
jae
scas
jae
dec
push
cmp
pop
arpl
mov
arpl
sbb
fild
call
and
push
ret
inc
retf
repnz
xchg
test
test
icebp
jno
popf
and
xor
aaa
lods
mov
ret
loop
jmp
test
or
push
pushf
lea
je
lea
mov
movsx
lea
call
xor
dec
add
mov
or
jp
sbb
loop
ja
add
movs
das
jb
gs
sbb
and
lock
lds
jb
push
pushf
inc
mov
sti
clc
add
add
fldcw
aas
(bad)
jecxz
ss
out
(bad)
dec
rcr
movs
stc
das
into
pop
retf
adc
mov
mov
out
jno
dec
sub
es
je
les
(bad)
sub
mov
sub
or
pop
lds
lock
xor
pop
loopne
mov
movs
mov
xchg
scas
call
in
maskmovq
not
stc
fild
add
push
xor
popf
xor
pop
push
sbb
inc
or
or
std
xlat
adc
cmc
xchg
mov
fisubr
fcom
inc
pop
int3
pop
xor
test
mov
jmp
sbb
xor
cs
or
(bad)
cmp
add
call
cmc
bt
sub
pushf
call
cmp
jmp
mov
call
and
(bad)
not
movzx
bswap
pusha
lea
lea
not
pushf
jmp
add
add
add
inc
inc
adc
add
add
mov
pop
adc
and
or
xor
add
or
push
dec
adc
jmp
add
add
xchg
or
add
add
and
jl
jg
jecxz
inc
xchg
outs
std
dec
jmp
pop
mov
rol
aas
or
mov
pushf
mov
mov
in
cmp
(bad)
arpl
in
retf
dec
mov
cmp
push
xor
ficom
retf
lods
loop
cmps
addr16
pop
pop
shl
cli
cli
push
inc
ins
mov
push
push
clc
lea
pop
sub
jmp
push
aaa
mov
ret
sub
push
jbe
outs
pop
xor
pusha
(bad)
in
mov
shl
sub
dec
retf
pop
fisttp
push
mov
push
add
stos
fwait
dec
int3
xor
aad
and
jnp
and
dec
imul
in
mov
clc
in
in
fcmovnu
sbb
in
sub
out
xor
call
hlt
push
rcr
push
call
and
adc
pop
add
jmp
js
or
ret
(bad)
dec
xor
fld
loope
cmp
push
outs
jne
cmp
fmul
dec
push
inc
cmp
xchg
pusha
jns
mov
pushf
dec
add
cmp
pop
out
pusha
sub
push
sbb
lods
int
pushf
mov
in
imul
xchg
push
out
outs
arpl
xlat
and
inc
fcomp
cld
dec
sbb
ret
mov
fmul
add
mov
test
push
out
lds
mov
add
(bad)
jno
xchg
inc
inc
cmp
pop
cmp
adc
and
and
nop
and
mov
cld
leave
popa
xchg
fwait
inc
push
int
jecxz
adc
loope
cmc
dec
stc
inc
stc
mov
inc
push
repz
jae
aaa
neg
mov
dec
icebp
xor
mov
inc
cmps
jl
dec
lahf
jbe
pop
dec
(bad)
arpl
(bad)
rcl
jle
mov
sbb
or
imul
ja
(bad)
into
push
stc
loopne
pop
mov
mov
push
fsubr
not
call
and
aad
dec
outs
dec
pop
repz
add
std
ds
jl
sti
stc
mov
into
mov
stos
movs
fsubr
aas
mov
icebp
imul
dec
inc
xor
das
jecxz
in
and
and
ret
push
sbb
or
xchg
sahf
lods
sbb
fxch
in
fisubr
shr
test
leave
cmp
adc
jbe
sub
push
jo
jge
shr
push
and
clc
outs
(bad)
fwait
cmp
ficomp
ins
jl
mov
adc
scas
std
push
push
aam
inc
jae
or
lock
std
jg
jmp
cmp
div
cs
ret
xor
aaa
jo
add
pop
lods
inc
int
pop
rcl
jmp
arpl
add
and
mov
lods
mov
dec
or
mov
or
pop
xor
stos
jl
aad
sub
adc
cmp
mov
outs
mov
push
call
dec
in
sar
ret
cmp
into
sbb
repnz
mov
imul
stos
test
mov
push
mov
imul
jne
mov
cmp
and
cmp
xchg
loopne
and
or
pop
cdq
pmuludq
imul
pop
sub
(bad)
sub
mov
pop
retf
pushf
adc
adc
and
pop
push
bound
clc
mov
(bad)
add
push
adc
pop
int
dec
icebp
xchg
jae
ins
add
repnz
movups
popf
sar
movs
es
xchg
fisubr
sbb
dec
jp
enter
sub
xchg
stc
js
add
pop
dec
in
ror
xchg
adc
cdq
mov
xor
sbb
add
pop
and
enter
mov
dec
lock
lds
cdq
or
xor
scas
jge
mov
popa
imul
xchg
mov
sub
jo
cmp
xchg
inc
mov
mov
lods
dec
jns
std
sub
mov
add
popf
mov
adc
sbb
and
retf
dec
mov
adc
add
push
inc
enter
jmp
iretw
mov
adc
imul
xor
mov
mov
pushf
imul
aam
xor
xchg
xlat
stos
sbb
test
or
sar
inc
std
aam
retf
jb
jecxz
leave
cmps
es
pusha
jge
loop
pushf
xchg
jge
sahf
je
rcr
push
mov
xchg
mov
pop
cmp
ss
jb
scas
ret
(bad)
stc
out
test
xor
lods
adc
and
ins
cli
mov
mov
cmp
pop
push
ja
in
mov
data16
lds
call
and
icebp
fs
pop
mov
adc
fdiv
repz
mov
dec
stos
popf
push
jl
mov
cwde
scas
icebp
fs
imul
pop
retf
dec
pop
adc
test
or
mov
mov
je
rcr
pusha
aam
data16
fcmovu
aad
fisttp
xlat
shl
fdiv
cmp
in
mov
push
movs
sahf
cmps
inc
jl
dec
sbb
fstp
push
mov
pop
(bad)
mov
cmp
mov
scas
sar
loop
mov
pop
test
stos
in
dec
add
xor
repnz
hlt
shr
lds
cmps
adc
xchg
xor
imul
and
push
(bad)
jp
cdq
lds
arpl
pushf
and
xor
jge
loopne
movs
(bad)
int
mov
ss
das
sub
cmp
iret
mul
out
bound
(bad)
jp
xor
inc
stos
jbe
sbb
adc
mov
push
dec
jmp
mov
ds
sub
push
add
pop
outs
cli
add
iret
(bad)
or
dec
dec
sub
in
imul
mov
pop
scas
das
jns
xchg
adc
xchg
mov
mov
popf
push
aam
jbe
mov
and
rcr
xchg
adc
scas
pop
pop
jge
test
jg
xchg
mov
std
dec
outs
div
jmp
push
and
aas
xor
dec
mov
inc
or
sub
movs
mov
sbb
fcomip
hlt
cwde
mov
fwait
and
push
add
push
xchg
in
fst
mov
aad
jnp
cli
mov
inc
jp
inc
push
mov
and
cmp
adc
aam
fsub
leave
js
xor
sbb
sbb
jle
jmp
cmp
not
xchg
mov
sbb
cmc
sub
jae
out
sar
addr16
sbb
xchg
pushf
jge
out
shr
pop
gs
cld
adc
(bad)
arpl
sub
xchg
ins
fdivr
in
movs
xchg
test
add
fstp
lods
rol
test
in
lahf
mov
dec
sub
fcmovnbe
sub
ins
mov
int
addr16
imul
xchg
and
mov
shr
fs
mov
out
jne
sbb
mov
out
adc
int
sbb
fimul
push
dec
mov
jno
ins
or
xor
shl
mov
jo
out
dec
imul
add
das
xchg
rol
adc
dec
xchg
push
int
jno
xchg
jnp
lods
sbb
cli
or
in
mov
sbb
add
cmc
jns
adc
std
clc
cdq
mov
adc
jno
icebp
adc
jnp
leave
outs
cmp
xchg
push
pushf
test
shr
lock
retf
add
in
pop
loopne
jne
imul
mov
mov
ffree
cmp
movs
mov
jle
lds
jbe
in
std
ja
gs
add
mov
and
push
xor
jp
shr
mov
dec
add
bt
mov
xchg
jne
rcr
cmp
mov
or
loope
cli
jp
in
stc
sub
outs
into
mov
stos
stos
lock
sbb
(bad)
dec
push
or
movs
mov
loopne
daa
and
cmps
push
or
adc
out
pop
adc
mov
adc
mov
mov
jno
dec
inc
mov
cli
push
sbb
mov
inc
dec
ficom
mov
sbb
test
jmp
cmp
inc
jg
mov
cwde
cmp
pop
sub
ja
pop
cmc
push
mov
cs
ja
xor
mov
sbb
les
inc
ficom
ds
movs
aam
cmp
adc
std
aaa
shl
push
cmp
mov
cmp
mov
(bad)
stos
mov
sbb
cmp
ret
fsubr
jo
test
add
dec
push
loop
aam
and
sub
mov
(bad)
adc
cs
pop
push
ret
imul
dec
int3
dec
dec
jp
sub
lahf
ins
xor
ins
lock
dec
adc
(bad)
out
sub
jnp
push
(bad)
scas
frstor
sbb
push
call
jg
pop
and
push
jp
stos
fistp
test
mov
rcl
leave
push
(bad)
out
xor
mov
pop
lock
add
jne
adc
mov
jne
dec
sbb
adc
iret
iret
gs
pop
fld
mov
jmp
xchg
(bad)
mov
push
mov
sti
repnz
and
imul
mov
sbb
push
or
loope
jl
int
scas
fsub
sbb
xchg
xor
out
mov
adc
xchg
dec
jle
mov
xchg
cmc
jecxz
in
cld
xor
mov
mov
sub
adc
fwait
xor
sub
pop
xor
adc
ror
(bad)
jb
leave
aad
into
mov
xor
fsub
mov
mov
jne
inc
stos
jp
div
jb
mov
sub
or
out
ins
sbb
and
jle
xor
test
out
pop
stc
imul
rcr
in
ret
add
test
gs
fist
aad
inc
push
jo
push
outs
and
xor
shl
inc
push
pop
in
repz
mov
call
jnp
xchg
jmp
adc
cmp
pushf
rcl
cdq
cmp
lock
xchg
pop
fsubr
mov
lods
xchg
leave
in
dec
test
jnp
outs
maxps
sub
sbb
cmp
ror
mov
js
fmul
in
xchg
(bad)
dec
jle
dec
mov
push
rol
stos
jl
js
fadd
dec
in
jl
out
cmp
inc
mov
jmp
xchg
popa
leave
(bad)
fld
pop
push
push
dec
sbb
xchg
mov
inc
cld
mul
mov
and
ins
add
inc
adc
stos
out
ja
rcl
or
pop
sub
sbb
xor
inc
push
repz
loopne
mov
rcl
xchg
idiv
jae
popa
pop
pop
push
std
jg
sub
add
mov
mov
or
in
sti
adc
adc
rcr
aam
and
mov
and
into
or
xchg
pop
pop
mov
and
out
loope
aam
inc
push
sub
inc
pop
loope
lods
dec
jb
xchg
inc
ror
sub
mov
in
pop
repnz
pop
inc
sbb
pop
jg
cmp
and
push
or
movs
addr16
and
push
pop
outs
add
enter
xchg
and
sub
outs
xor
dec
mov
test
fisubr
jne
jb
dec
jmp
mov
mov
sub
push
mov
dec
inc
fiadd
scas
jmp
inc
pop
cld
jb
sub
das
sub
loop
add
(bad)
push
xor
cpuid
pop
out
loopne
rcr
dec
cmp
mov
mov
cmp
clc
cmp
xor
ret
jae
push
jnp
icebp
jmp
mov
fisubr
(bad)
(bad)
add
mov
adc
mov
cmp
js
clc
repz
dec
loopne
dec
push
outs
ret
xchg
or
aad
xchg
adc
(bad)
mov
mov
add
enter
aas
ja
adc
cmps
test
inc
ror
ret
pop
inc
rcl
fstp
mov
add
sbb
mov
out
pop
jmp
sahf
sub
cmps
sbb
push
cmp
ja
in
pushf
pop
call
or
lods
mov
adc
xchg
push
pushf
retf
mov
pop
and
bound
outs
sbb
and
push
push
test
retf
in
adc
ja
call
and
call
pusha
aad
out
push
dec
pop
in
push
cmp
ins
ins
and
and
sbb
int3
sbb
dec
out
add
adc
and
in
addr16
mov
or
out
ja
ficom
push
(bad)
loop
xchg
push
rcr
cmp
push
loop
retf
jl
jg
inc
sub
and
sbb
cs
dec
inc
mov
fidivr
sbb
pusha
cwde
fldcw
add
add
cmp
das
neg
cld
jnp
jmp
stc
xlat
mov
jecxz
sbb
hlt
hlt
test
inc
div
jae
inc
push
pusha
rcl
sub
daa
cmp
mov
scas
xor
pushf
xor
lds
sar
or
call
add
push
les
inc
retf
outs
bound
sbb
mov
push
inc
fild
sti
sub
icebp
arpl
loopne
stos
fdivr
jmp
mov
rcr
cmp
std
xchg
outs
stos
or
je
jo
call
addr16
std
addr16
pop
jo
jae
cmp
or
cs
std
sub
(bad)
sbb
mov
add
jmp
xor
lds
std
in
dec
mov
sar
xor
movlps
cmps
pop
pop
cmp
mov
mov
cdq
pop
sti
adc
or
dec
scas
dec
movaps
pop
xchg
movs
(bad)
hlt
stos
adc
lea
push
jmp
mov
lea
ja
pusha
pusha
inc
not
inc
inc
setno
inc
jmp
mov
lea
jne
rol
mov
bt
movsx
not
and
sub
shr
bsr
mov
call
inc
jmp
call
call
pusha
xchg
call
pushf
lea
je
adc
shr
sar
add
seta
movzx
not
sub
mov
jmp
add
push
mov
lea
jmp
shl
call
mov
rol
sbb
hlt
les
fadd
iret
pop
ret
out
aaa
sub
inc
inc
pop
add
ss
(bad)
jne
xchg
mov
xor
mov
dec
push
mov
mov
push
mov
scas
test
sub
and
aam
xchg
lahf
stc
pop
inc
scas
aas
mov
xchg
jno
ret
aad
into
add
test
and
sbb
jno
xor
cwde
push
mov
out
or
mov
(bad)
push
pop
ja
mov
mov
pop
inc
push
inc
or
movs
jp
addr16
pushf
stc
add
call
call
lea
jb
push
cmp
pusha
push
pushf
lea
jne
bswap
pusha
shr
bts
mov
jmp
jmp
lea
jl
pop
jmp
call
pop
out
sbb
arpl
ins
xchg
ja
outs
xchg
cs
cdq
movs
sbb
or
mov
dec
pop
sbb
js
ret
xchg
dec
pop
outs
push
iret
je
sbb
inc
mov
mov
fnstenv
cmp
jno
lods
push
por
and
xchg
mov
cld
and
out
fiadd
ficomp
or
or
push
int3
test
mul
sbb
inc
or
fsubr
repnz
pop
(bad)
pop
mov
mov
sub
push
std
mov
in
sub
or
shl
inc
aas
shrd
call
push
adc
sub
jmp
dec
xchg
pop
jmp
cld
mov
cmp
popa
loope
or
vpcmpgtb
stos
bndstx
push
xchg
cmp
mov
push
push
add
(bad)
stc
cmc
movzx
bswap
bt
and
mov
call
adc
xor
stos
shl
jnp
pop
inc
(bad)
and
xor
cmovp
add
xor
pop
aam
mov
inc
jae
jo
sub
jbe
mov
fwait
inc
push
adc
jns
(bad)
(bad)
out
and
jb
mov
jbe
cmc
mov
push
sub
retf
add
mov
push
dec
jae
and
sub
shl
fwait
cmp
xchg
cmp
inc
loopne
cdq
mov
nop
(bad)
clc
xor
or
dec
jmp
pop
popa
lds
fnstcw
push
or
pop
mov
retf
icebp
fldcw
fimul
out
inc
lea
je
bts
add
bsr
inc
cmc
sub
and
movsx
shr
btr
clc
mov
setae
btc
bswap
sar
add
stc
add
mov
mov
call
and
stos
pop
inc
sub
xlat
and
sub
add
repnz
sbb
sub
ins
xor
shl
scas
cmp
out
xchg
jbe
lahf
(bad)
loop
loope
jp
es
adc
dec
sar
mov
rol
jle
push
sbb
jle
or
sub
add
fsub
jl
cmp
cwde
xor
stos
pop
(bad)
push
cmp
mov
ja
mov
and
sbb
lods
repz
push
pop
repz
mov
and
mov
mov
movs
call
add
scas
push
mov
mov
mov
in
jnp
xor
cmps
lds
mov
or
and
fidiv
or
imul
pop
(bad)
mov
mov
lods
not
pop
jmp
mov
push
stos
je
call
bound
(bad)
mov
popf
and
adc
sub
shl
jbe
nop
enter
xlat
cwde
out
nop
or
xchg
rcr
test
imul
lock
mov
sbb
ror
into
push
cmp
dec
push
and
mov
stos
call
mov
adc
pop
test
(bad)
jg
in
dec
call
lods
rcr
ins
or
cmp
mov
jo
fdiv
ret
sub
leave
mov
jns
movs
repnz
test
or
mov
xchg
mov
mov
mov
mov
pushf
mov
mov
push
ret
cld
pusha
cdq
pop
and
mov
push
mov
xchg
dec
mov
or
rol
xchg
cmp
mov
shl
mov
test
data16
pop
sbb
dec
inc
or
jae
repz
mov
test
push
push
loop
leave
test
jmp
nop
xchg
aam
jecxz
cs
icebp
psrlq
das
repz
rol
jns
mov
clc
cmp
out
sar
inc
ds
cdq
cmp
(bad)
cmp
pop
xor
stos
lods
push
xchg
mov
retf
rcl
lods
cwde
in
mov
push
cmp
add
adc
inc
movs
out
js
iret
xor
mov
push
mov
int
lahf
jae
ret
mov
or
cwde
push
and
add
ret
sti
push
or
je
or
enter
gs
cmp
cmp
pop
movsx
lea
lea
jmp
inc
adc
push
ins
cmp
mov
rcr
test
test
or
arpl
mov
ficom
sub
pop
pop
(bad)
les
jmp
mov
retf
xor
jo
mov
sub
leave
mov
pushf
mov
cli
mov
xcrypt-ecb
cmps
mov
sub
xor
call
jle
dec
stos
leave
jnp
out
iret
lahf
lods
add
sub
dec
ins
mov
cmp
in
aaa
ja
mov
add
addr16
popa
lods
(bad)
mov
inc
je
ret
fs
cmp
mov
push
pop
mov
and
jle
pusha
jbe
sbb
mov
popf
scas
fwait
inc
cmc
mov
not
mov
cmp
sub
jmp
push
push
mov
pushf
pusha
jmp
push
mov
and
cmp
test
pusha
call
pusha
mov
pusha
mov
call
bt
repnz
pusha
jmp
jmp
mov
dec
dec
push
add
sub
xor
mov
dec
xor
stos
(bad)
sahf
adc
ins
mov
arpl
and
lods
sbb
test
mov
jmp
pop
push
sbb
and
pop
pop
dec
jbe
mov
push
out
mov
sub
and
sub
repz
adc
lds
in
int3
inc
bound
movs
inc
sbb
popf
adc
xchg
pop
ja
repnz
es
jns
bsr
jmp
into
mov
mov
outs
aam
ror
push
xchg
loop
cmp
pusha
fisttp
inc
xchg
push
dec
ins
push
mov
leave
outs
lds
or
pushf
stos
shr
inc
call
sub
addr16
and
pop
ss
push
push
nop
push
cli
inc
ja
clc
push
mov
mov
sbb
or
repz
scas
jbe
mov
jbe
aaa
pop
lock
add
iret
out
pusha
mov
or
repz
push
xchg
and
add
xchg
int
cli
cmc
sbb
punpckhbw
dec
dec
inc
pop
sar
lods
int
jmp
addr16
fidivr
dec
jae
jecxz
outs
sbb
lods
mov
lock
inc
mov
sar
xor
or
mov
fdivr
add
in
dec
mov
repnz
and
pop
push
jno
loopne
and
xor
xchg
dec
jge
ffree
push
mov
or
xor
pushf
mov
(bad)
lods
sub
cmps
sub
push
sbb
pop
dec
std
adc
mov
sbb
mov
push
popa
stos
dec
pop
js
sar
or
sub
div
jmp
cmp
jmp
scas
sbb
sub
cmp
xor
imul
bnd
test
inc
outs
adc
out
rol
mov
inc
cmp
or
call
dec
ins
push
outs
ins
outs
arpl
popa
addr16
pop
(bad)
dec
adc
lods
mov
nop
(bad)
shl
pop
or
test
pop
pop
jl
adc
sbb
cmp
shr
mov
sbb
stos
dec
mov
sub
pushf
inc
lahf
mov
into
lock
pop
xchg
push
jo
sub
in
aam
ins
xchg
fadd
xchg
shl
movs
jb
mov
pop
leave
(bad)
adc
mov
cmp
fidiv
cmp
cli
add
call
ja
mov
das
call
cmp
scas
sub
mov
jl
lods
xchg
retf
cmp
call
cmps
adc
or
push
xchg
xor
xchg
inc
cmp
loope
shr
pop
aas
in
movs
xchg
(bad)
sbb
and
neg
xchg
mov
mov
jecxz
xor
outs
in
xor
lahf
cdq
call
add
int3
pop
rcr
dec
shr
xor
jae
add
sbb
(bad)
pop
push
sahf
inc
jg
pop
ins
and
out
popf
xchg
pop
pop
daa
sbb
xchg
pop
cmp
test
aas
aam
fcomp
int
cmc
and
mov
lods
ret
ret
or
adc
stos
jo
loopne
call
or
sbb
(bad)
in
mov
dec
and
test
sub
pop
add
push
clc
fnsave
add
(bad)
in
cld
xor
bound
stc
mov
jge
xchg
repnz
jns
icebp
cwde
repz
ret
mov
popf
into
bound
in
mov
jno
xchg
and
sbb
pop
add
(bad)
cs
scas
shl
or
cdq
clc
cmps
adc
xchg
dec
shr
pushf
inc
(bad)
lock
mov
cmp
inc
mov
lods
div
cmp
add
and
outs
pop
and
mov
sub
inc
mov
and
nop
cmp
inc
push
xchg
or
cmps
push
icebp
xchg
mov
repnz
mov
lods
(bad)
mov
adc
aaa
out
(bad)
jmp
push
xor
sbb
(bad)
movs
stos
icebp
popf
call
icebp
inc
mov
mov
jbe
ret
mov
add
enter
leave
or
lahf
jle
jb
in
stc
sbb
aaa
test
sbb
mov
or
cdq
adc
(bad)
and
push
sbb
mov
or
scas
adc
xor
dec
and
jae
(bad)
ret
xchg
in
or
mov
arpl
mov
inc
arpl
and
xchg
dec
mov
std
jl
nop
jge
sti
jg
addr16
repz
jp
mov
and
repz
push
dec
xor
push
lahf
jbe
ds
xor
jecxz
pop
inc
dec
(bad)
fldcw
or
cwde
das
outs
dec
(bad)
cmps
pop
mov
push
mov
xchg
lahf
cmp
pop
and
fs
fisttp
lods
xor
stc
cdq
mov
ret
enter
dec
dec
inc
mov
adc
or
sbb
adc
and
xchg
rol
icebp
mov
(bad)
hlt
jbe
repz
icebp
out
inc
sub
daa
scas
in
jae
dec
jecxz
mov
inc
loope
mov
and
and
dec
inc
pop
in
mov
xchg
scas
xor
lahf
mov
test
sbb
mov
rcl
and
xor
arpl
add
inc
js
sub
enter
mov
sbb
(bad)
rcl
dec
or
and
adc
lahf
xchg
pop
add
out
cmp
mov
lahf
adc
mov
add
xchg
cmp
cli
xchg
dec
adc
cmp
xchg
jae
push
int3
out
add
or
bound
outs
cdq
mov
sbb
cmp
push
xor
xchg
movs
cmp
mov
mov
out
ret
mov
(bad)
cdq
sub
pop
inc
dec
xor
rcl
mov
sbb
mov
cmc
xor
or
xchg
dec
push
mov
inc
mov
mov
lea
jnp
push
push
pushf
mov
mov
lea
push
push
pushf
mov
pushf
push
push
pop
pushf
push
mov
push
ret
cmc
call
push
ins
ins
add
shl
lods
fmul
cmp
push
btr
stc
jae
mov
rcl
call
xor
pusha
lea
call
jmp
neg
mov
call
lea
je
lea
pusha
lea
mov
push
movzx
lea
pushf
call
bt
shl
shrd
sub
mov
test
stc
cmp
jmp
pop
mov
in
rcl
iret
adc
jl
mov
in
add
ins
jno
and
pop
(bad)
jg
push
mul
cmps
into
loope
pusha
dec
xchg
inc
or
xchg
(bad)
jb
jl
xchg
xor
mov
jge
mov
mov
inc
push
fs
jg
pop
(bad)
pop
hlt
push
sahf
imul
fmul
xchg
mov
mov
pushf
add
or
xor
rcr
iret
jnp
sbb
cmp
iret
loope
outs
loopne
push
clc
dec
cmps
(bad)
add
or
in
loope
cld
es
mov
jl
mov
mov
mov
push
pop
mov
mov
adc
mov
jmp
ds
sbb
stos
mov
lahf
je
arpl
test
retf
cli
sti
push
jbe
test
adc
call
popf
add
das
in
push
push
pandn
int3
xchg
test
push
call
mov
lea
je
clc
clc
stc
jmp
mov
adc
mov
lea
jae
call
push
push
mov
lea
jmp
lea
je
jmp
sub
mov
push
jecxz
cli
push
js
sbb
fcom
in
and
ja
ror
mov
xlat
fdivr
in
add
pop
in
test
push
and
push
leave
mov
mov
(bad)
and
xor
cmovle
jne
mov
or
xchg
arpl
cli
inc
movsx
setbe
pop
pusha
pusha
mov
lea
jae
pusha
setne
setg
mov
pusha
push
mov
push
not
mov
pushf
push
mov
push
ret
jmp
mov
movzx
call
add
add
mov
add
xchg
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
sub
cmp
push
ss
xor
aas
aaa
dec
aaa
arpl
int
shl
loopne
div
xor
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
cmp
xor
dec
mov
cdq
mov
aas
movs
aas
ret
and
add
add
xor
xor
xor
jno
fnstenv
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
xor
xor
xor
sbb
ss
xor
jge
xchg
aaa
movs
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
test
mov
int
sar
jg
mov
std
cmp
cmp
cmp
cmp
cmp
js
add
add
add
cwde
add
add
xor
xor
dec
xor
push
xor
xor
dec
xor
xor
in
pop
xor
xor
xor
xor
xor
xor
(bad)
pop
ss
xchg
mov
mov
ss
aaa
leave
aaa
in
aaa
sti
aaa
or
and
mov
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
add
adc
dec
ds
lods
outs
aas
int
add
add
add
add
adc
jle
mov
ins
xor
js
cdq
xor
xor
xor
xor
push
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
loope
cli
xor
push
ss
lea
cmps
ss
sub
xor
aaa
fidiv
in
aaa
adc
cmp
arpl
jnp
mov
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
jle
test
(bad)
ds
ds
ds
out
ds
dec
aas
fs
popf
aas
mov
aas
std
aas
add
add
add
add
xor
xor
xor
xor
pop
xor
xor
xor
out
xor
inc
aaa
dec
aaa
dec
aaa
jbe
jl
xor
aaa
retf
aaa
aam
repnz
clc
aaa
(bad)
aaa
and
sub
cmp
jbe
jg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
xor
cmp
inc
cmp
test
mov
sar
cmp
cmp
cmp
cmp
jo
jbe
mov
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
arpl
mov
sar
or
ds
ds
ds
ds
sar
fnstsw
out
(bad)
and
sub
cmp
aas
jl
test
(bad)
aas
loope
jmp
cld
aas
add
add
add
daa
xor
dec
xor
pop
xor
jl
xor
xor
xor
xor
xor
pop
xor
xor
test
mov
out
xor
xor
add
and
cs
and
out
aaa
cli
aaa
inc
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
push
xchg
cmp
cmp
cmp
cmp
(bad)
cmp
cmp
mov
add
add
add
add
xor
xor
xor
xor
jbe
mov
xor
xor
xor
adc
sbb
das
aaa
dec
aaa
test
int3
aaa
stc
aaa
jmp
daa
cmp
out
inc
cmp
(bad)
ds
inc
aas
push
aas
cmp
aas
add
add
add
cdq
xor
xor
in
xor
xor
pushf
xor
sbb
in
cmp
cmp
cmp
cmp
cmp
scas
cmp
cmp
cmp
cmp
jmp
sar
cli
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
idiv
sar
pop
aas
add
add
add
jbe
das
xor
xor
xor
xor
pop
xor
xor
xor
and
dec
xor
pop
xor
xor
push
xor
xor
xor
xor
bound
mov
cmp
fdivr
sub
aas
cmp
pop
cmp
movs
cmp
cmp
cmp
lea
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
adc
sbb
and
test
add
add
add
jl
fdiv
cmc
xor
xor
mov
loop
out
xor
xor
xor
push
xor
xor
xor
xor
xor
push
ss
ss
ss
xchg
lea
sahf
movs
ss
shl
ss
fdiv
fbstp
jmp
aaa
(bad)
aaa
xchg
aaa
lahf
aaa
movs
aaa
iret
aaa
and
inc
cmp
push
cmp
stos
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
mov
movs
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
int3
cmp
add
add
xor
mov
xor
xor
xor
xor
xor
xor
stos
xor
mov
xchg
xor
xor
xor
xor
xor
xor
and
ss
ss
div
push
xor
ins
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jg
mov
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lods
cmp
sar
add
sbb
daa
xor
cmp
inc
ds
ds
ds
ds
jp
test
mov
cwde
mov
sar
ds
fidivr
call
ds
aas
adc
sbb
and
cs
cmp
inc
aas
dec
aas
push
aas
pusha
aas
outs
aas
xchg
aas
mov
aas
mov
aas
fstp
in
lock
clc
aas
add
add
add
dec
add
add
xor
xor
xor
xor
xor
pop
xor
xor
jae
jl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
imul
xor
xor
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
push
xor
imul
xor
mov
xchg
xor
xor
fidiv
in
out
xor
xor
xor
push
xor
xor
xor
inc
xor
dec
xor
bound
ins
xor
xor
xor
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
daa
xor
dec
xor
imul
call
xor
in
xor
pop
adc
sbb
and
ss
ss
ss
ss
imul
ss
mov
xchg
ss
cmps
ss
mov
fnstenv
jecxz
in
div
add
or
adc
aaa
xor
cmp
aaa
pop
aaa
imul
xchg
xchg
aaa
fwait
aaa
movs
aaa
scas
aaa
mov
aaa
(bad)
aaa
fdiv
out
lock
cli
aaa
add
push
cmp
cmp
cmp
cmp
dec
cmp
cmp
jb
jl
xchg
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
ins
cmp
js
cmp
cmp
cmp
cmp
mov
cmps
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
mov
mov
ds
cmps
ds
or
adc
adc
aas
dec
aas
pop
aas
jl
cmp
add
add
add
add
test
ret
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
gs
fnstcw
jmp
aas
mov
loopne
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
ds
mov
xchg
outs
aas
sar
aas
icebp
aas
add
add
pushf
add
add
xor
dec
xor
test
xor
xor
cmp
cmp
cmp
pop
cmp
jp
mov
xchg
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
xchg
fwait
cmp
cmp
cmp
cmp
(bad)
sbb
call
aas
adc
and
xor
ds
dec
aas
pop
aas
push
aas
(bad)
aas
popf
aas
test
aas
mov
mov
aas
retf
aas
sar
aad
fstp
fistp
in
jmp
aas
stc
aas
std
aas
add
add
js
add
add
pop
xor
xor
xor
xor
xor
xor
xor
and
aam
xor
xor
xor
xor
xor
xor
(bad)
ss
aaa
mov
cmp
pop
cmp
cmp
stos
cmp
cmp
cmp
cmp
inc
ds
jmp
hlt
ds
push
aas
in
jmp
repnz
stc
aas
add
add
mov
xor
xor
mov
sub
pop
xor
xor
(bad)
xor
xor
xor
xor
lock
shl
fidiv
repnz
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
mov
test
cmp
out
jmp
lock
mov
ds
adc
xor
add
add
mov
add
pusha
xor
retf
xor
xor
or
xor
cmp
xor
fidiv
in
xor
inc
xor
xor
xor
xor
dec
xor
xor
jl
xchg
xor
mov
xor
add
push
ss
sbb
and
sub
xor
pop
ss
xchg
cmps
div
and
aaa
pop
aaa
jb
test
pushf
aaa
dec
cmp
aam
cmp
cmp
xchg
adc
cmp
cmp
cmp
cmp
cmp
or
sbb
sbb
ds
fidivr
in
out
add
adc
push
aas
pop
aas
fdivr
add
add
in
add
add
xor
jle
(bad)
xor
xor
xor
xor
xor
and
fwait
xor
xor
xor
xor
xor
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
xchg
xor
push
outs
xor
ss
ss
ss
ss
les
iret
ss
fbstp
add
or
adc
pop
aaa
and
sub
xor
aaa
cdq
aaa
test
cmp
cmp
cmp
push
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
cmp
icebp
cmp
jne
sar
ds
lock
daa
aas
cmp
inc
aas
lods
aas
add
add
add
and
push
xor
xor
xor
xchg
xor
retf
xor
xor
xor
js
sub
pusha
xor
xor
xor
xor
xor
xor
xor
xor
mov
les
add
inc
cmp
cmp
cmp
cmp
cmp
mov
lahf
cmp
cmp
cmp
cmp
pop
cmp
cmc
cmp
mov
add
push
add
pop
add
add
xor
mov
shl
lahf
xor
xor
xor
pop
xor
lea
clc
xor
xor
xor
xor
xor
dec
xor
xor
aad
ins
ss
ss
div
push
aaa
sbb
call
cmp
ds
ds
movs
ds
ds
out
add
add
add
xchg
xor
xor
xor
xor
xor
cli
xor
aas
add
add
add
add
cmp
pop
imul
ds
ds
aas
sub
xor
addr16
jo
mov
xchg
aas
fwait
aas
add
add
add
adc
push
xor
xor
xor
xor
jl
xor
inc
ss
ss
ss
push
aaa
test
(bad)
aaa
fidiv
loopne
out
in
aaa
repnz
clc
aaa
(bad)
aaa
add
or
adc
push
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pusha
cmp
cmp
je
jp
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
stos
ds
out
adc
add
add
jno
jp
mov
stos
xor
jmp
xor
or
dec
aaa
pop
cmp
xlat
ds
aas
add
add
add
cmps
xor
xor
xor
popf
ss
cmp
cmp
cmp
cmp
cs
add
add
add
push
mov
mov
cmp
add
add
jns
fnstcw
(bad)
cmp
aas
add
add
and
add
mov
push
xor
cmp
cmp
cmp
cmp
cmp
in
jmp
add
add
add
adc
add
xor
lods
xor
cmp
cmp
lock
adc
add
pushf
xor
pop
cmp
cmp
cmp
add
add
add
add
add
mov
or
adc
add
add
add
xor
add
and
add
sbb
and
cmp
cmp
pop
cmp
imul
cmp
cmp
cmp
or
pusha
add
sbb
add
push
xor
aaa
cmp
cmp
add
and
add
fbstp
pop
aaa
sbb
aaa
jo
ret
cmp
cmp
cmp
pop
cmp
add
add
lock
add
adc
add
cmp
hlt
cmp
or
lock
ins
add
add
xor
xor
xor
xor
xor
xor
xor
ins
xor
mov
nop
xor
xor
xor
xor
adc
sub
xor
push
xor
mov
nop
xor
shl
lock
xor
xor
jo
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
nop
xor
movs
xor
dec
xor
xor
pop
xor
xor
ins
xor
je
js
jl
xor
xor
xor
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
pop
xor
xor
xor
xor
jl
xor
xor
xor
test
mov
mov
enter
shl
aam
fdiv
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
ss
and
cmp
push
aaa
ins
aaa
test
pushf
aaa
mov
int3
aaa
in
cld
aaa
adc
sub
pop
cmp
cmp
in
cmp
sbb
xor
dec
cmp
cmp
fdivr
hlt
cmp
and
cmp
push
cmp
int3
cmp
cmp
cmp
inc
cmp
cmp
aam
add
sbb
xor
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pushf
cmp
in
cld
cmp
inc
ds
ds
mov
movs
ds
ds
sbb
xor
dec
aas
fs
jl
xchg
aas
lods
aas
les
fdivr
hlt
aas
add
add
push
add
add
and
pushf
xor
cld
xor
sub
inc
xor
xor
aam
in
xor
sbb
xor
dec
xor
xor
fdiv
hlt
xor
and
cmp
push
xor
xor
in
cld
xor
sub
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
xor
fdiv
and
cmp
push
ss
test
pushf
ss
int3
ss
cld
ss
sub
inc
aaa
pop
aaa
je
mov
movs
aaa
mov
aaa
add
sbb
xor
dec
cmp
cmp
fdivr
hlt
cmp
and
cmp
push
cmp
cmp
in
cld
cmp
sub
inc
cmp
cmp
aam
in
cmp
sbb
xor
dec
cmp
cmp
fdivr
hlt
cmp
and
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
movs
cmp
in
cmp
xor
dec
ds
xchg
lods
les
fdivr
hlt
ds
and
push
aas
ins
aas
test
pushf
aas
mov
in
add
add
sbb
add
pop
xor
xor
in
xor
fdiv
hlt
xor
and
cmp
ins
xor
in
cld
xor
sub
inc
xor
xor
aam
fdiv
xor
xor
push
xor
pushf
xor
in
cld
xor
inc
ss
ss
mov
movs
ss
ss
sbb
xor
dec
aaa
fs
jl
xchg
aaa
lods
aaa
les
fdiv
hlt
aaa
or
and
cmp
push
cmp
cmp
in
sub
inc
cmp
cmp
aam
in
cmp
lods
cmp
cmp
cmp
cmp
and
cmp
push
cmp
cmp
in
cld
cmp
sub
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
xchg
cmp
fdivr
and
cmp
push
ds
ds
int3
ds
cld
ds
sub
inc
aas
pop
aas
je
mov
movs
aas
mov
aas
add
add
add
int3
add
add
dec
xor
xor
fdiv
hlt
xor
and
cmp
push
xor
xor
in
cld
xor
sub
inc
xor
xor
add
sbb
xor
dec
xor
xor
fdiv
hlt
xor
and
cmp
push
xor
xor
xor
xor
xor
xor
xor
xor
je
mov
aam
in
xor
xor
dec
ss
xchg
lods
ss
cmp
cmp
in
cmp
pushf
cmp
cld
cmp
sub
inc
cmp
ds
ds
sbb
xor
dec
aas
fs
jl
xchg
aas
lods
aas
les
fdivr
hlt
aas
add
add
xor
cmp
push
xor
xor
in
cld
xor
sub
inc
xor
xor
aam
in
xor
xor
cmp
push
cmp
cmp
cmp
in
cmp
sbb
xor
dec
cmp
cmp
fdivr
hlt
cmp
and
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
mov
aam
in
cmp
xor
dec
ds
xchg
lods
add
add
add
add
pop
xor
xor
xor
xor
je
sbb
xor
dec
aaa
jl
xchg
aaa
lods
aaa
les
pop
cmp
cmp
add
pusha
add
cmp
add
or
pop
xor
xor
xor
mov
in
cmp
cmp
cmp
je
mov
movs
ds
xor
dec
aas
fs
jl
xchg
aas
lods
aas
les
add
add
add
add
add
xor
in
cmp
ds
ds
and
cmp
push
aas
ins
aas
test
pushf
aas
mov
int3
aas
in
cld
aas
add
add
adc
sub
inc
xor
xor
aam
in
xor
sbb
xor
dec
xor
xor
fdiv
hlt
xor
and
cmp
push
xor
xor
in
cld
xor
sub
inc
xor
xor
aam
in
xor
sbb
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
pushf
xor
cld
xor
inc
ss
ss
mov
movs
ss
ss
sbb
xor
dec
aaa
fs
jl
xchg
aaa
lods
aaa
les
fdiv
hlt
aaa
or
mov
movs
cmp
cmp
dec
cmp
cmp
fdivr
or
and
cmp
push
cmp
cmp
in
cld
cmp
sub
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
xchg
cmp
fdivr
and
cmp
push
ds
test
pushf
ds
int3
ds
cld
ds
sub
inc
aas
pop
aas
je
mov
movs
aas
mov
aas
add
add
add
add
sbb
xor
and
dec
xor
xor
or
and
cmp
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
movs
xor
in
xor
xor
dec
ss
xchg
lods
les
fdiv
hlt
ss
push
aaa
int3
aaa
in
cld
aaa
adc
sub
inc
cmp
cmp
aam
in
cmp
sbb
xor
or
and
cmp
push
cmp
cmp
in
cld
cmp
sub
inc
cmp
cmp
aam
in
cmp
sbb
xor
int3
cmp
adc
sub
inc
ds
ds
mov
movs
ds
ds
sbb
xor
dec
aas
fs
jl
xchg
aas
lods
aas
les
fdivr
hlt
aas
add
add
or
and
cmp
push
xor
xor
in
cld
xor
sub
pop
xor
xor
in
xor
sbb
xor
or
and
cmp
push
xor
xor
in
cld
xor
sub
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
xor
fdiv
movs
aaa
mov
aaa
add
sbb
xor
dec
cmp
cmp
fdivr
hlt
cmp
and
cmp
push
cmp
cmp
dec
cmp
cmp
fdivr
hlt
cmp
and
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
movs
cmp
in
cmp
xor
dec
ds
xchg
lods
les
fdivr
hlt
ds
and
cmp
push
aas
ins
aas
test
pushf
aas
mov
add
add
or
int3
xor
xor
xor
sub
inc
xor
xor
aam
in
xor
sbb
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
cwde
xor
jl
xor
aaa
nop
aaa
cwde
aaa
mov
aaa
fdiv
loopne
in
call
add
rol
aam
add
pop
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
sbb
add
pusha
ds
ds
js
jl
cmp
push
add
add
adc
add
cwde
xor
add
add
or
fidiv
cmc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
cmc
xor
es
ss
bound
jl
sahf
movs
ss
ss
shl
add
add
push
xor
xor
xor
sub
rol
add
add
cmp
or
rol
adc
add
les
dec
xor
cmp
add
loopne
add
add
add
xor
and
xlat
ss
jbe
pop
cmp
lea
sar
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
mov
add
add
jnp
xor
xor
ja
add
sub
aas
add
add
add
add
xor
stos
xor
xor
xor
xor
adc
ss
aaa
xchg
aaa
aam
arpl
mov
cmp
cmp
adc
add
add
add
add
pop
xor
xor
xor
xor
xor
xor
mov
adc
arpl
xchg
aaa
push
xchg
cmp
cmp
cmp
cmp
cmp
xlat
cmp
sbb
xor
mov
cmps
aas
add
add
add
repz
cmp
cmp
cmp
cmp
out
add
add
add
add
xor
xor
xor
xor
xor
sub
xor
xor
scas
or
push
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
ds
ds
aas
out
aas
add
add
add
add
fdiv
adc
push
xor
pusha
xor
xor
xor
xor
jmp
ss
mov
repnz
mov
cmp
cmp
aas
add
add
add
popa
xor
xor
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xchg
cmp
call
cmp
cmp
cmp
jp
jmp
aas
add
add
add
add
push
xor
cmp
cmp
cmp
add
jo
add
add
add
shl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lds
push
aas
in
add
add
pop
xor
xor
xor
push
xor
xchg
xor
cmc
xor
xor
jl
mov
lds
je
pop
cmp
cmp
cmp
cmp
push
aas
jge
ret
add
nop
add
add
xor
xor
xor
xor
ss
ss
aaa
mov
push
cmp
out
cmp
cmp
cmp
jbe
leave
cmp
(bad)
sub
dec
aas
fwait
aas
add
add
add
xor
bound
pop
aaa
xchg
cmp
mov
sbb
dec
cmp
test
add
add
adc
jbe
js
hlt
xor
xchg
aas
xor
xor
xor
xor
xor
xor
test
jp
mov
cmp
ret
cmp
cmp
(bad)
cmp
cld
ds
add
add
add
add
xor
xor
in
pop
xor
xor
xor
pop
xor
mov
cmp
cmp
cmp
das
cmp
cmp
cmp
cmp
cmp
ss
aas
mov
add
add
add
add
xor
call
xor
xor
cmp
mov
cmc
aaa
imul
cmp
jge
fstp
add
jle
mov
ds
add
add
add
add
xor
xor
mov
xor
xor
lock
xor
aaa
std
aaa
cmp
int
test
sar
cmp
test
cmp
cmp
cmp
cmp
xor
(bad)
aas
add
add
add
add
dec
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
loopne
cld
cmp
cmp
ss
cmp
cmp
mov
aas
sti
aas
add
add
push
add
add
xor
xor
xor
xor
xor
xor
xor
loopne
jbe
movs
aaa
add
pop
cmp
cmp
test
cmp
cmp
retf
fdivr
and
addr16
sahf
aas
(bad)
aas
add
push
add
add
xor
lea
mov
xor
xor
xor
xor
xor
pop
ss
or
pop
aaa
and
cmp
ds
ds
retf
aas
ins
aas
in
aas
add
push
add
add
add
xor
add
add
add
add
mov
mov
xor
inc
xor
xor
xor
in
ss
aaa
ja
(bad)
aaa
cwde
cmp
int
(bad)
cmp
cmp
xchg
cmp
cmp
or
jns
add
add
pop
add
add
xor
cmps
xor
xor
rdtsc
lods
xor
xor
xor
xor
xor
xchg
xor
and
nop
cmp
cmp
jne
xchg
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
inc
aas
stos
aas
add
add
pop
add
add
mov
xor
xor
xor
xor
cmps
sub
fdiv
push
cmp
or
pop
cmp
cmp
cmp
ins
cmp
cmp
cmp
xor
pop
ds
xor
add
add
mov
aam
call
xor
shl
aam
clc
xor
xor
xor
mov
fwait
shl
sbb
aas
cmp
nop
cmp
cmp
add
add
ret
xor
lods
xor
xor
xor
xor
xor
div
xor
test
jp
add
(bad)
cmp
imul
pop
cmp
cmp
aas
iret
aas
add
add
add
add
sbb
sub
push
xor
mov
xor
xor
cmp
xor
xor
mov
add
add
add
add
xor
xor
xor
xor
xor
ins
xor
pop
xor
xor
xor
xor
xor
xor
xor
ds
push
loopne
test
cmps
cmp
ret
cmp
jl
in
sbb
cmp
cmp
cmp
cmp
lea
add
add
add
add
push
xor
xor
cmp
cmp
nop
aas
add
add
add
xor
mov
xor
xor
(bad)
xor
add
mov
into
aaa
std
aaa
mov
sar
push
cmp
cmp
cmp
call
aas
add
add
add
cmp
movs
xor
xor
xor
shl
ins
xor
xor
xor
pop
xor
ss
cmp
jne
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
or
mov
add
add
sub
sahf
xor
xor
xchg
xor
xor
inc
xor
xor
xor
xor
xor
pusha
aaa
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
add
add
div
pop
xor
lock
xor
xor
xor
xor
xor
mov
aaa
xor
call
cmp
aas
cmp
cmp
ds
aas
jecxz
add
pop
add
add
add
inc
xor
cmp
xor
je
iret
xor
xor
dec
ss
sub
aaa
mov
pop
cmp
xchg
cmp
cmp
cmp
cmp
out
add
add
pop
add
add
mov
xor
mov
or
xor
xor
pop
add
add
mov
xor
xor
xor
xor
xor
xchg
or
xor
xor
aaa
lock
cmp
add
add
pop
add
add
add
mov
cmp
add
or
adc
add
cmps
cmp
cmp
jg
mov
add
add
or
and
add
sub
push
inc
xor
xor
xor
xor
xor
xor
xor
add
or
cmp
add
xor
retf
xor
adc
xor
mov
cmp
cmp
cmp
cmps
ds
ds
aas
mov
add
add
pop
xor
cmp
cmp
cmp
bound
test
inc
or
cmp
add
inc
xor
xchg
arpl
sbb
movs
xor
xor
loopne
sub
pop
cmp
cmp
cmp
cmp
fdivr
inc
aas
xchg
aas
lock
add
add
add
add
pop
xor
xor
xor
xor
push
aaa
push
aaa
shl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
outs
ds
aas
pushf
aas
xlat
aas
add
add
add
xor
mov
adc
cmps
xor
fwait
xor
adc
xor
xor
xor
or
xor
arpl
xchg
aaa
shl
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
sub
pop
xor
xor
xor
xor
xor
xor
(bad)
cmp
cmp
cmp
cmp
cmp
add
or
adc
add
cmps
cmp
aaa
ds
nop
or
push
add
add
xor
xor
jbe
dec
xor
xor
inc
aaa
shl
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
retf
sub
add
add
adc
pop
xor
xor
xor
xor
xor
xor
xor
test
adc
push
aaa
mov
cmp
cmp
(bad)
cmp
inc
cmps
cmp
inc
aas
movs
aas
add
add
add
or
mov
xor
mov
out
xor
cmp
movs
xor
xor
jmp
push
xor
xor
xor
add
add
or
xor
add
and
xor
inc
div
jp
mov
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
or
and
add
inc
xor
xor
cmp
fidivr
and
add
add
or
inc
add
add
xor
popf
xor
xor
xor
xor
int
adc
xor
iret
aaa
adc
pop
cmp
push
cmp
cmp
inc
xchg
add
push
aas
add
add
or
cmp
add
addr16
xor
xor
and
mov
outs
aaa
mov
push
cmp
int
jae
(bad)
cmp
mov
and
cmp
cmp
cmp
mov
js
movs
aas
jecxz
add
or
push
add
add
xor
jge
lods
xor
xor
xor
mov
xor
xor
xchg
xor
xor
xor
xor
mov
aaa
adc
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
ds
aas
add
or
dec
add
add
xor
retf
xor
movs
xor
xor
inc
ss
ss
xor
push
mov
inc
cmp
cmp
cmp
repz
cmp
cmp
cmp
cmp
inc
aas
call
add
add
loop
push
xor
xor
xor
xchg
shl
xor
in
sub
aaa
outs
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
aas
add
add
or
and
add
jo
adc
mov
cld
ss
cmp
cmp
cmp
add
test
mov
ret
jno
add
sub
ins
or
push
popa
je
jle
movs
jg
jle
stos
push
xchg
sub
bound
popf
movs
cli
jns
sbb
and
or
(bad)
inc
call
lods
(bad)
hlt
jp
adc
cdq
arpl
retf
mov
std
imul
or
je
xchg
(bad)
bound
or
fisubr
and
jne
mov
jns
(bad)
cwde
jecxz
xlat
outs
nop
outs
pop
out
push
cmp
jb
scas
push
out
aad
mov
adc
sub
das
out
pop
jbe
data16
js
aas
(bad)
jns
push
(bad)
push
xchg
adc
lock
and
sbb
clc
call
xchg
jge
cwde
push
mov
inc
sbb
fsubr
inc
fisttp
sbb
or
daa
lds
inc
push
aas
call
and
lahf
iret
xchg
inc
(bad)
faddp
pop
pop
movs
pop
shr
es
aam
add
es
xchg
pop
ss
inc
and
mov
adc
lahf
push
ror
push
test
arpl
sbb
mov
loopne
fld
inc
or
cmp
mov
adc
sub
add
ins
mov
or
jb
dec
xchg
dec
cmc
jg
daa
(bad)
jmp
xor
outs
push
push
or
and
inc
mov
bound
xchg
sbb
cld
push
stos
xor
jge
jmp
inc
adc
xchg
sub
imul
sbb
add
xchg
mov
jmp
rcl
push
loop
push
dec
add
fs
lahf
xchg
cmps
test
xbegin
add
cmp
jmp
sub
addr16
and
aaa
mov
out
js
xchg
mov
sbb
or
mov
dec
sub
add
jmp
cmp
lock
out
mov
adc
push
and
pop
imul
data16
fnstenv
sub
invd
add
push
inc
pop
sar
mov
xor
mov
xchg
das
sbb
xor
lds
sbb
loop
ins
adc
xor
xor
mov
rcr
and
cdq
add
sahf
mov
repnz
add
jo
pop
inc
jle
adc
mov
xchg
stos
jmp
mov
mov
adc
lods
clc
lea
lahf
aam
add
test
mov
or
or
icebp
cs
sub
jmp
sub
mov
inc
add
popa
and
aad
iret
sub
or
gs
imul
outs
adc
std
and
sbb
jg
xchg
sbb
call
cld
mov
xchg
xor
push
xor
call
xchg
pop
sub
mov
ss
adc
icebp
push
stc
outs
mov
sti
or
data16
(bad)
pusha
xor
call
lea
je
lea
jmp
fld
jo
test
and
mov
sub
xor
das
dec
adc
popf
ins
xchg
mov
mov
jle
xlat
xor
cdq
hlt
scas
xor
sub
sti
inc
jge
or
pusha
pop
mov
fldenv
mov
test
out
xor
fcmove
fs
dec
xchg
add
lods
ins
jno
cmp
fdiv
or
repnz
popa
les
mov
pop
xchg
ds
dec
sbb
sbb
ficomp
jl
in
jmp
movs
jle
push
call
cmp
or
mov
mov
xchg
mov
or
mov
dec
jp
stos
test
hlt
xlat
inc
ins
or
cmps
aam
push
jl
cmp
cdq
mov
fadd
ds
sub
pop
mov
push
test
xchg
mov
mov
add
sub
and
dec
and
stos
mov
dec
jns
sbb
pop
sub
sbb
out
pop
daa
(bad)
call
es
add
and
iret
mov
adc
sub
dec
and
out
cli
adc
xchg
fninit
lods
and
fwait
inc
adc
push
mov
mov
ror
mov
retf
jnp
dec
jecxz
mov
outs
xchg
call
ret
xor
dec
push
jnp
xor
or
jp
jmp
fs
je
pushf
not
movsx
mov
movsx
lea
lea
push
lea
call
push
push
jmp
mov
jmp
cmp
mov
call
dec
inc
dec
cs
ins
add
(bad)
(bad)
jmp
inc
mov
xor
(bad)
cmps
aas
fcmove
aas
aam
loope
mov
xor
push
out
imul
push
imul
cmp
cmp
pop
or
je
jp
js
pop
test
test
xlat
dec
cmp
fldenv
pop
jg
xchg
mov
outs
rol
add
nop
xchg
cli
and
arpl
xor
cmps
cmp
push
sub
cli
adc
movs
loope
xor
xor
cli
mov
push
aas
or
arpl
fsub
ins
shr
ror
sbb
inc
fbld
cmp
push
fild
fisttp
adc
out
jg
test
ss
cmp
push
push
push
sub
or
mov
pushf
outs
(bad)
aad
arpl
sbb
cmps
or
scas
lock
push
jl
mov
gs
shl
enter
std
or
or
rcl
mov
mov
add
adc
pop
scas
add
adc
fstp
jo
(bad)
xchg
mul
out
aas
sbb
and
sbb
mov
aam
or
xor
dec
sub
aaa
daa
pop
inc
push
jbe
scas
add
xchg
push
dec
ds
div
jne
push
(bad)
xlat
inc
mov
lock
and
ds
shl
mov
loopne
adc
push
inc
or
popa
clc
cmps
and
push
bt
cmp
clc
or
pusha
call
stc
test
pusha
jmp
push
test
(bad)
pop
mov
or
sbb
sub
enter
in
dec
shl
hlt
ds
sbb
mov
dec
into
push
cmp
or
xor
mov
fnstsw
fadd
add
clc
jne
(bad)
loop
lahf
xor
mov
ret
jo
mov
mov
inc
sbb
push
pusha
movs
or
ret
cs
mov
leave
add
call
sbb
pop
xor
jb
add
popf
cmp
adc
xchg
iret
movs
les
jne
je
les
not
enter
enter
sbb
inc
and
movs
xlat
sub
sar
les
or
enter
jmp
fst
fmul
mul
sub
in
mov
aas
add
sub
(bad)
jo
adc
sbb
mov
mov
ds
sbb
or
adc
xor
rol
loopne
mov
mov
or
sbb
add
add
sbb
sbb
adc
adc
sub
sub
and
cmp
cmp
xor
xor
int3
sbb
les
ror
sub
xor
mov
aas
loopne
cld
cmp
add
sbb
add
mov
mov
mov
dec
inc
dec
ds
sbb
pop
aas
pop
into
push
cmp
add
ds
je
aas
add
sbb
adc
sub
sub
and
and
cmp
xor
xor
int3
inc
les
fdivr
aam
sbb
in
cld
into
hlt
cmp
add
sbb
cwde
aas
xchg
into
nop
cmp
add
sbb
mov
xlat
mov
dec
mov
aas
pop
inc
mov
push
sbb
add
cs
jo
or
add
sbb
test
adc
ds
xor
test
das
les
mov
in
(bad)
cld
dec
push
mov
mov
cmp
adc
cwde
and
nop
ror
scas
mov
shl
inc
int3
bound
jl
mov
js
jo
jnp
and
ds
aaa
add
inc
xor
xor
jge
sar
(bad)
cmp
add
inc
lds
les
(bad)
mov
cmp
pmaddubsw
sub
jl
fadd
mov
sbb
sub
sub
mov
call
shr
inc
fsub
fmul
mov
fstp
shr
pop
and
sub
fcmovnbe
xor
aaa
ret
xor
ret
rcr
mov
fidiv
mov
jl
sbb
xor
ds
test
cwde
push
xor
cld
and
xor
cwde
cld
and
retf
xlat
iret
jge
pop
out
ret
sub
lods
pop
xor
cwde
push
xor
cmp
in
inc
pop
(bad)
adc
sbb
pushf
mov
adc
xor
adc
xor
xor
xor
retf
cwde
mov
pusha
cwde
test
dec
cwde
aaa
xor
test
dec
cwde
aaa
xor
test
add
add
dec
nop
cwde
mov
add
cwde
mov
add
cwde
outs
sbb
xor
add
cwde
lds
add
cwde
lds
push
cwde
jecxz
xlat
sbb
lods
push
xor
inc
cwde
mov
add
cwde
mov
add
cwde
outs
adc
test
xor
enter
inc
jmp
sbb
ret
cmp
(bad)
push
pusha
cwde
in
jle
xlat
cmp
rol
fild
ret
rcr
call
leave
sbb
sti
leave
sbb
sbb
inc
shr
mov
xor
xlat
inc
cld
ficomp
outs
inc
cld
fcomp
aaa
fcmovne
ret
pop
loopne
cmps
xor
sub
cmp
mov
into
xor
xor
shr
mov
push
retf
xor
add
mov
cmc
or
xlat
movaps
ret
arpl
(bad)
lock
sar
(bad)
leave
sbb
aaa
aam
addr16
shl
rcr
sbb
sbb
call
loopne
sbb
dec
lock
inc
cld
mov
aaa
test
or
pushf
pop
sbb
dec
lods
xchg
jge
test
fdiv
xor
and
mov
xor
cmp
dec
sub
push
xor
pop
mov
xor
inc
fmulp
cmp
lods
xchg
pop
mov
lods
xchg
pop
inc
fld
pop
rcr
mov
cmp
sub
ret
into
fdiv
(bad)
and
push
adc
xor
call
push
xor
sbb
sbb
dec
ret
cmp
and
mov
outs
pop
(bad)
jo
rcl
shr
dec
jp
cmp
mov
push
out
push
or
sub
shl
mov
xor
sar
mov
pusha
push
jbe
xor
ds
sbb
mov
pusha
xor
cmp
push
add
jb
xor
lds
sub
mov
pop
movs
sbb
sahf
mov
sbb
fsubr
fstp
dec
ret
inc
out
or
cwde
mov
push
pushf
sbb
cld
fcomp
aaa
fcmovne
ret
sar
pushf
xor
mov
xor
fsub
cld
es
jle
rol
cmp
add
clc
xchg
adc
les
and
xchg
mov
push
arpl
mov
bnd
cmp
push
mov
mov
xor
mov
(bad)
or
hlt
mov
xor
loopne
jp
mov
retf
xlat
mov
test
xchg
sbb
nop
xor
jl
add
enter
pop
cld
cmp
mov
sbb
dec
inc
lods
adc
aas
dec
xor
shl
js
rcl
cmp
mov
pop
cld
and
ss
repnz
lods
rcr
push
int3
pusha
pusha
xor
pop
jl
dec
test
pop
xor
inc
xchg
ficom
mov
dec
push
xor
push
inc
mov
mov
adc
out
push
pop
sbb
dec
js
je
cwde
cld
jo
aaa
or
fadd
xor
or
rol
aaa
add
fcmovnb
popa
clc
mov
lahf
mov
adc
pop
sbb
mov
sub
enter
(bad)
retf
fistp
adc
mov
shl
fcomi
retf
pop
xor
aam
mov
add
add
sub
js
sub
jae
xor
int
xchg
(bad)
fcom
fiadd
mov
fidiv
les
sbb
int3
retf
adc
add
adc
shl
push
aaa
in
out
je
lds
fild
jl
and
outs
enter
cwde
xor
nop
(bad)
leave
std
xor
test
cmp
xchg
mov
mov
mov
jnp
adc
add
xor
mov
xor
jl
je
or
add
sbb
dec
adc
sub
cld
and
aaa
cmp
xor
or
sbb
aaa
aam
addr16
call
mov
mov
lock
clc
mov
dec
lock
inc
cld
sbb
cwde
iret
nop
leave
sub
daa
lds
mov
ret
add
pop
xor
xchg
ja
jl
jle
int3
(bad)
(bad)
jo
dec
add
sbb
adc
aaa
sub
and
xor
enter
aaa
sar
data16
cmp
js
hlt
retf
xor
mov
mov
retf
test
out
or
cwde
push
push
or
cmp
mov
(bad)
mov
xor
movs
pop
hlt
sbb
(bad)
pop
cld
lds
(bad)
jbe
pop
outs
or
mov
pop
outs
sbb
sbb
dec
loopne
cld
inc
cld
clc
sbb
lock
mov
or
cmp
aam
inc
cld
xchg
sbb
lods
dec
and
mov
fidiv
mov
dec
dec
aam
inc
cld
pop
sbb
push
iret
push
sbb
dec
or
add
sbb
aaa
adc
sub
and
dec
jnp
cmp
sub
fcom
inc
add
rol
clc
jnp
sub
xor
push
or
lods
daa
dec
or
pop
fisttp
cwde
sbb
push
int3
out
and
sbb
(bad)
iret
(bad)
leave
pushf
fdivr
inc
dec
mov
aam
pop
and
dec
scas
adc
sar
sub
enter
xor
xor
aaa
loopne
(bad)
cmp
cld
mov
inc
dec
mov
lds
fdivr
hlt
xor
int
mov
xor
pop
loopne
jbe
dec
sbb
pushf
inc
mov
or
xor
mov
xor
pop
sub
enter
aaa
movs
inc
fstp
js
mov
mov
pop
jbe
xor
leave
sbb
sti
leave
sbb
sbb
inc
shr
and
mov
xor
inc
mov
test
pop
sbb
xor
dec
fs
jl
cld
je
aaa
or
add
sbb
adc
sub
inc
nop
mov
and
add
in
inc
pop
ficomp
sbb
les
xor
aam
rcl
inc
cld
call
stos
pop
xabort
call
pusha
pop
mov
out
pop
leave
xchg
mov
scas
cmp
xchg
aam
inc
cld
movs
sbb
mov
dec
pop
sbb
pusha
push
cmp
fld
jle
push
mov
cmp
pop
xor
leave
inc
dec
ins
repnz
mov
fmul
jecxz
xor
js
sbb
jo
(bad)
jle
jo
pop
add
sbb
add
sub
mov
test
add
and
push
sbb
ins
inc
enter
mov
mov
enter
fwait
push
sbb
inc
lock
push
mov
xor
sbb
loopne
clc
retf
sbb
sbb
test
out
cwde
leave
adc
mov
dec
mov
ds
aaa
jo
add
sbb
sbb
dec
and
xor
jmp
sbb
leave
inc
in
pop
dec
mov
xchg
xor
scas
pop
mov
dec
push
xor
nop
shr
sbb
xor
adc
mov
adc
repnz
sti
ja
cwde
pushf
push
(bad)
hlt
fsubr
repnz
enter
outs
pop
(bad)
inc
xor
jle
js
push
(bad)
jle
adc
inc
lods
mov
leave
xor
mov
dec
enter
dec
jle
mov
sar
enter
enter
push
mov
sub
mov
dec
jl
je
cld
or
aaa
add
sbb
adc
sub
nop
mov
aaa
and
out
leave
xor
sbb
jle
ret
sbb
sbb
(bad)
aam
inc
fwait
rcl
loopne
mov
clc
mov
into
test
pusha
pop
mov
out
pop
leave
pushf
lock
or
sub
sbb
lods
mov
mov
dec
leave
add
pusha
jmp
and
enter
and
xchg
(bad)
enter
cmps
add
mov
mov
and
dec
js
and
mov
ror
mov
push
pusha
xchg
jmp
sub
outs
cwde
out
call
mov
xchg
ds
hlt
add
test
pushf
pop
fild
loopne
lds
cmp
lods
mov
mov
jne
jno
mov
xchg
test
cmps
test
or
pushf
add
inc
mov
leave
in
ficomp
cli
fdiv
call
shl
jmp
jle
cmp
mov
push
pop
xor
enter
push
dec
ror
jo
hlt
jl
mov
inc
fsub
inc
scas
add
xor
sbb
xor
adc
xor
xchg
mov
cmp
and
fwait
inc
mov
sti
les
inc
fadd
push
pop
aam
xor
jp
mov
mov
mov
and
fdiv
mov
mov
cmp
je
gs
cdq
mov
ret
xchg
cmp
test
fcom
push
cwde
mov
sbb
gs
push
in
xchg
mov
xor
mov
js
fidiv
ds
push
test
push
cmp
sub
add
cmp
sub
sbb
dec
out
sbb
inc
sub
add
pop
out
adc
and
aaa
retf
mov
inc
xor
xlat
aam
inc
jmp
sbb
ret
leave
ds
push
push
xlat
inc
cld
ficomp
push
inc
cld
fcomp
aaa
fcmovne
ret
cwde
mov
sbb
sbb
sbb
dec
ret
cwde
ds
xor
inc
cld
ficomp
push
inc
cld
fcomp
aaa
fcmovne
ret
cwde
mov
sbb
sbb
sbb
dec
ret
cwde
sbb
or
adc
xlat
inc
cld
ficomp
push
inc
cld
fcomp
aaa
fcmovne
ret
cwde
mov
sbb
sbb
sbb
dec
ret
cwde
add
sbb
adc
xlat
inc
cld
ficomp
push
inc
cld
fcomp
aaa
fcmovne
ret
cwde
mov
xor
js
cmp
or
sub
sub
pop
and
lock
mov
xor
aaa
int3
iret
(bad)
lds
pop
sbb
sbb
sbb
dec
ret
inc
inc
jns
mov
xlat
leave
sbb
jecxz
sbb
sbb
mov
shl
data16
add
loopne
mov
clc
mov
js
mov
dec
adc
mov
aaa
test
mov
pop
dec
mov
in
mov
aaa
pop
iret
push
leave
sub
pusha
rol
pop
sbb
dec
add
sbb
adc
aaa
sub
and
cmp
sbb
xor
push
out
sbb
inc
jne
ror
sar
rcr
scas
(bad)
sbb
sub
add
loopne
(bad)
cmp
sub
adc
lock
dec
fmul
xor
xlat
iret
fmulp
repz
fmul
sbb
sbb
or
cmp
aam
inc
cld
mov
aaa
mov
mov
or
cmp
aam
inc
cld
sbb
or
leave
add
cmp
aam
inc
cld
cwde
sbb
cwde
iret
cwde
leave
sbb
or
nop
scas
pusha
xor
jecxz
xor
sub
ds
mov
mov
mov
sbb
outs
add
(bad)
sub
inc
pop
cld
adc
pop
aam
inc
cld
pop
sbb
pop
iret
pop
leave
sbb
pop
sbb
aaa
push
iret
push
leave
adc
push
out
push
cmp
aam
inc
sti
push
sbb
leave
and
out
cmp
aam
inc
cld
sbb
jl
jl
cmp
out
jl
dec
jl
jl
cld
jl
cwde
call
or
fucom
or
add
pop
sbb
sbb
sbb
dec
ret
inc
inc
add
sbb
push
xor
sbb
xchg
sbb
fcmovnbe
ret
jecxz
push
inc
adc
adc
xor
ss
push
sub
scas
push
cmp
sub
add
cmp
sub
sbb
int3
out
sbb
les
add
fsubr
jecxz
aam
mov
outs
inc
cld
fcomp
aaa
fcmovne
ret
shl
outs
xor
enter
inc
jmp
sbb
ret
cmp
pop
fnstcw
sbb
(bad)
and
fsubr
fstp
dec
ret
cdq
adc
leave
sbb
sti
leave
sbb
sbb
mov
xchg
and
sub
aaa
xlat
iret
fmulp
hlt
mov
fmul
sbb
sbb
mov
xlat
sbb
(bad)
dec
sbb
fmul
fcmovne
add
jp
test
pop
aam
scas
xor
out
or
in
and
fisttp
or
in
add
adc
outs
jae
mov
ror
sbb
sti
leave
sbb
sbb
inc
shr
sbb
jns
enter
xor
shl
pop
sbb
dec
ret
dec
test
out
xlat
leave
sbb
sti
leave
sbb
sbb
inc
shr
test
pushf
xlat
sbb
(bad)
dec
sbb
fmul
fcmovne
add
add
or
pushf
sub
iret
fmulp
hlt
mov
fmul
sbb
sbb
mov
push
inc
xchg
mov
cli
test
xchg
mov
ds
movs
out
je
mov
mov
sbb
sub
add
inc
out
(bad)
cmp
sub
pshufw
xor
inc
cld
ficomp
outs
inc
cld
fcomp
aaa
fcmovne
ret
ror
into
ins
mov
mov
fiadd
or
fadd
fistp
aaa
ret
pop
icebp
loop
mov
pop
or
sbb
jle
xlat
cmp
rol
fild
ret
sar
push
je
jp
xor
(bad)
sbb
fcmovnbe
ret
rcl
add
xlat
pop
sbb
sbb
dec
ret
dec
inc
sbb
add
push
daa
xor
leave
sbb
sti
leave
sbb
sbb
inc
shr
cmp
scas
xor
in
pop
dec
xor
jb
adc
sub
fcomp
sub
out
nop
jbe
push
xchg
dec
fmul
and
mov
cmp
inc
cwde
inc
xor
pop
sbb
sbb
dec
ret
cwde
movs
shl
xor
cwde
movs
or
(bad)
xlat
iret
fmulp
repz
fmul
sbb
sbb
sbb
int3
mov
xlat
leave
sbb
jecxz
sbb
sbb
test
rcr
sbb
inc
inc
enter
shl
stos
fistp
mov
js
sbb
sub
adc
xlat
loopne
cmp
les
and
xlat
inc
sbb
mov
aam
mov
mov
cld
dec
retf
sbb
dec
mov
xchg
stos
sbb
cld
nop
das
lahf
mov
sub
sbb
inc
shl
or
pop
and
mov
les
inc
jge
enter
mov
push
ins
pop
pop
dec
pop
mov
aas
inc
cld
pop
add
sub
mov
test
mov
in
mov
loopne
mov
mov
dec
adc
pop
in
mov
nop
repz
fiadd
cld
mov
mov
mov
sti
xchg
mov
loope
sub
pop
call
scas
dec
sti
pop
movs
scas
dec
nop
mov
ret
cmp
sbb
dec
cmp
mov
mov
inc
dec
pop
inc
mov
aas
inc
mov
mov
sub
pop
mov
nop
mov
dec
inc
and
jmp
lahf
repnz
sub
mov
inc
jo
add
cmp
jo
push
adc
shr
add
aam
daa
in
lock
je
mov
out
fcom
mov
mov
jge
xlat
or
dec
out
sub
inc
ret
fs
(bad)
mov
fsub
rcl
(bad)
daa
cwde
pop
cmc
dec
lea
aas
and
ficom
ret
js
rcr
mov
fstp
cmp
pop
loopne
test
ret
fild
enter
xlat
sub
and
(bad)
sbb
mov
lock
adc
aad
dec
xchg
retf
fstp
int
cmp
scas
sub
(bad)
cmp
xor
popa
jg
mov
add
scas
or
(bad)
jne
xchg
popf
push
stos
(bad)
pop
std
sub
sub
sbb
fnstsw
mov
or
test
rcl
clc
ins
push
aad
push
push
xchg
inc
fnsave
xchg
mov
loopne
cwde
call
cmc
imul
jmp
or
ins
fld
sahf
nop
pop
dec
xchg
push
fsub
cmp
out
jg
daa
cmp
pop
dec
mov
inc
(bad)
clc
aad
loop
mov
jmp
ds
aaa
lock
sbb
cmp
rcr
fcomp
arpl
enter
ficom
out
loopne
xlat
push
imul
push
jnp
push
fsubr
in
(bad)
loopne
out
clc
in
(bad)
or
cmp
repz
pusha
fs
adc
push
xchg
iret
lock
add
loopne
sahf
dec
sqrtps
popa
aad
imul
sub
popf
push
(bad)
loopne
ret
and
clc
pop
mov
mov
lods
pmaxub
fs
imul
mov
pop
and
mov
mov
or
or
or
cmp
(bad)
enter
xlat
int
jb
arpl
stos
fisub
xlat
in
add
into
pop
adc
add
adc
(bad)
fist
inc
pop
cwde
out
cwde
(bad)
ds
in
lods
pusha
fnstsw
jbe
sub
pop
nop
(bad)
cmp
inc
movs
xor
and
jp
jb
adc
jp
xchg
sub
retf
call
(bad)
(bad)
aad
fcomp
push
pop
pop
test
push
xlat
pop
fwait
enter
xor
jb
or
rcr
lods
pop
xchg
cmp
cmp
aad
pop
mov
ret
icebp
fisubr
dec
xchg
push
pusha
and
lods
int
push
ficomp
in
inc
imul
in
outs
mov
in
int3
xlat
push
mov
pop
imul
push
cmp
ins
xor
rol
es
loop
adc
scas
xchg
in
or
cld
add
loop
xchg
clc
loopne
inc
call
xchg
jl
pop
retf
jmp
xor
aad
sbb
and
fninit
ins
sbb
fcomp
xchg
fst
mov
xchg
(bad)
jno
fst
ffree
aam
scas
repnz
inc
mov
mov
jmp
add
xchg
pop
and
(bad)
cmp
aaa
rcr
je
aad
or
fdivr
aam
xor
cmps
jno
sti
js
mov
cmps
fcom
push
into
mov
in
fld
test
push
adc
lods
dec
inc
call
aam
xchg
imul
inc
shl
inc
or
loopne
test
rcr
lds
ret
les
mov
rol
xor
ret
rol
(bad)
imul
mov
ret
mov
xchg
and
jno
test
lods
rcr
outs
cmp
pop
mov
cli
fcom
sbb
inc
repnz
dec
shl
movs
sbb
pop
inc
sbb
xlat
ins
pop
or
and
sar
loopne
jecxz
scas
adc
fild
rcr
ins
and
data16
(bad)
jp
mov
(bad)
(bad)
hlt
out
sbb
pop
call
call
push
push
xor
adc
mov
imul
push
in
mov
push
shr
inc
in
ins
mov
std
std
arpl
loope
or
xchg
xor
jge
clc
mov
test
call
jns
mov
in
nop
pop
xchg
xor
bound
sbb
(bad)
and
mov
rcl
rol
or
lods
mov
ja
pop
jbe
shl
hlt
dec
rol
jle
rol
sub
hlt
pushf
mov
shl
pop
cmp
clc
data16
shr
jge
mov
xor
out
and
or
ds
mov
jno
mov
inc
lods
in
rcl
popf
or
cmc
jl
push
rcl
sahf
xor
add
(bad)
adc
push
in
or
aas
mov
scas
cmp
push
mov
aam
pusha
shl
mov
dec
test
inc
fmul
aam
pop
iret
xchg
or
xor
add
in
and
cmps
int
daa
sub
or
mov
test
mov
xchg
call
movs
inc
nop
js
mov
dec
xlat
sbb
imul
retf
sbb
(bad)
hlt
xchg
or
cld
xor
pushf
into
mov
add
xor
in
(bad)
mov
inc
aas
jl
sbb
sbb
test
push
sbb
and
sbb
clc
shr
adc
inc
loopne
push
cwde
into
mov
push
xor
mov
aas
xor
in
scas
ja
dec
cmp
add
enter
ds
sbb
js
sub
shr
cmc
out
mov
and
ds
fsub
ds
shr
sbb
mov
cmp
sbb
lock
int3
inc
loopne
push
xchg
into
dec
cmp
add
inc
(bad)
enter
lods
sbb
je
sub
fdivr
lock
movs
add
or
and
aam
sbb
mov
cmp
add
(bad)
fild
ds
fadd
xor
mov
inc
cld
xchg
fistp
cmp
in
mov
fbstp
inc
call
mov
push
inc
ds
sbb
dec
aas
fs
sbb
xor
in
aas
cmp
sbb
loopne
test
cmp
add
inc
lock
movs
ds
sbb
sub
add
sbb
xor
jg
(bad)
ds
mov
call
xor
enter
out
push
inc
ds
sbb
or
and
fwait
rol
and
inc
in
pushf
push
mov
movs
cmp
add
and
mov
aas
cmp
in
sahf
scas
inc
mov
sbb
xor
loopne
ds
sbb
or
sub
sar
inc
add
sub
sar
cdq
sbb
pop
aas
or
cmp
call
dec
inc
js
sub
aam
idiv
rcl
lds
add
sar
pushf
and
clc
shl
mov
pop
add
add
xchg
mov
push
push
cli
jne
repnz
into
and
lock
fcom
loopne
fisub
xchg
ret
sahf
les
std
sar
and
sbb
push
push
nop
stos
sbb
adc
test
cmp
sub
jb
loopne
fsub
push
sub
lods
ds
fisttp
and
pop
dec
push
scas
push
fist
(bad)
loopne
mov
and
cs
and
add
mov
enter
sbb
mov
or
pop
push
rcl
pop
xor
or
call
fisttp
jle
xor
shl
nop
out
out
jecxz
mov
add
pop
sbb
popf
aaa
retf
adc
adc
cmp
int3
out
ror
mov
mov
xchg
xlat
mov
sbb
pop
adc
mov
ret
fist
adc
inc
xchg
ret
repnz
pop
hlt
je
cmp
mov
pop
ret
mov
ds
outs
jmp
jl
(bad)
pop
xor
mov
push
std
fldcw
mov
xchg
pop
and
clc
inc
add
data16
adc
retf
and
test
nop
and
push
test
ret
sahf
add
dec
push
adc
(bad)
pop
std
leave
inc
xor
fld
aam
ja
cmp
popf
dec
ins
cmp
int3
ss
adc
call
wrmsr
cli
sub
retf
sar
push
add
jle
into
(bad)
loopne
(bad)
and
mov
(bad)
in
mov
xlat
sbb
inc
push
fadd
push
rol
int3
in
movs
sub
adc
es
rcr
(bad)
fisubr
les
push
sbb
xor
push
loopne
or
pop
scas
xor
pop
ret
dec
cmp
sahf
pop
sub
leave
inc
push
pop
adc
loope
addr16
fwait
dec
add
cmps
mov
ss
movs
mov
fcom
in
dec
pushf
retf
push
xor
xor
jne
stos
cli
neg
fisttp
aad
iret
test
mov
jno
ret
push
and
sar
adc
daa
xor
in
push
out
cmp
xor
fwait
dec
or
mov
jo
mov
push
rcr
and
enter
lahf
add
xlat
xchg
pop
sbb
sub
in
mov
in
dec
cmps
or
or
retw
xor
cs
push
mov
test
fidivr
pop
and
or
sbb
push
pop
loopne
ret
xchg
(bad)
xchg
pusha
and
loopne
cmp
jbe
repz
retf
loopne
shl
cmp
loopne
jns
lahf
xchg
jne
repnz
fiadd
int3
and
ror
cmp
jle
jl
stc
pop
sub
sbb
xor
mov
movs
jle
aas
shl
inc
inc
cmps
movs
mov
mov
inc
xchg
aas
jbe
mov
mov
cmp
fcom
jb
retf
ret
xchg
xchg
push
inc
sbb
adc
retf
pop
sub
rcl
xor
shl
jle
xlat
jnp
sub
push
je
mov
push
sbb
fucom
push
mov
add
fisub
repz
inc
sbb
push
mov
loopne
bound
sbb
sahf
stos
mov
ret
and
and
dec
and
fs
mov
xchg
outs
je
(bad)
mov
xor
adc
popf
mov
and
into
shl
and
retf
push
pop
in
mov
fidivr
and
in
jo
fnstenv
lock
add
adc
fisttp
loope
and
mov
out
xchg
cmp
inc
jl
ss
dec
aas
or
pop
nop
or
cmc
ror
add
(bad)
in
outs
add
aas
cdq
sar
xchg
in
mov
pop
push
aad
aas
xor
pop
dec
pop
(bad)
lods
aam
sbb
popf
jl
push
(bad)
scas
(bad)
and
inc
jg
sbb
or
sub
jo
inc
outs
int3
jge
test
out
mov
xchg
sub
int3
dec
(bad)
enter
retf
sbb
sub
clc
rcl
repnz
push
cmp
enter
ins
fstp
mov
ss
jle
dec
cmp
(bad)
adc
sti
je
test
arpl
pop
add
xchg
and
lock
xor
cld
fdivr
rol
in
dec
iret
pop
mov
(bad)
jecxz
imul
dec
int
jb
out
adc
(bad)
fcmove
xor
pop
pop
cmp
jp
enter
adc
(bad)
dec
push
push
out
movnti
aaa
xchg
lds
inc
pop
clc
mov
int
push
imul
and
pushf
xchg
jmp
xchg
sbb
popa
inc
lds
leave
and
bound
jg
cs
popa
fwait
inc
call
pop
ret
xlat
xchg
inc
mov
int
popf
fisttp
mov
jbe
jne
push
and
dec
add
cwde
cmp
dec
and
not
or
pop
jle
(bad)
sbb
lock
(bad)
push
cmp
cmp
sbb
loop
loop
xlat
inc
loopne
(bad)
dec
adc
jo
fstp
ins
out
and
inc
pop
outs
pop
and
dec
dec
sbb
ds
or
cs
je
jp
inc
shl
adc
sbb
add
loopne
fisubr
or
ror
or
int3
mov
add
sbb
loopne
sar
jg
pushf
enter
pcmpgtw
mov
pushf
mov
add
scas
sub
hlt
repnz
sub
clc
jmp
sub
sub
retf
test
test
adc
inc
xchg
loopne
cmps
and
fs
adc
mov
outs
shl
loop
mov
push
and
bswap
inc
push
shl
xor
int
xor
sbb
sub
es
icebp
sub
mov
add
(bad)
lock
popf
cmp
imul
shr
aad
pop
in
and
pop
cmps
fist
xlat
fist
(bad)
jmp
push
push
xor
ds
or
or
mov
xlat
jne
push
cmp
fidiv
enter
fwait
push
aaa
sub
add
daa
or
es
pusha
gs
sbb
jo
push
into
cs
cmp
aaa
xor
lds
push
cmp
push
push
add
push
mov
pop
push
rcr
sar
(bad)
push
jbe
je
rcr
jp
dec
les
hlt
js
sbb
xor
cld
(bad)
sbb
enter
pushf
adc
pusha
dec
imul
adc
pop
test
mov
mov
retf
mov
push
mov
xor
push
imul
add
cvtdq2ps
ds
hlt
push
mov
(bad)
mov
ss
mov
je
shl
ss
repz
pop
jp
repz
(bad)
out
mov
ds
add
scas
ds
mov
sbb
xor
pop
cld
popw
loop
shr
jno
stos
and
xor
cmp
xchg
aaa
outs
enter
(bad)
es
add
(bad)
(bad)
cs
cld
adc
aaa
adc
xor
enter
add
in
mov
inc
push
movs
cmps
outs
xor
fld
loope
adc
retf
ret
cdq
les
(bad)
(bad)
in
push
mov
cmp
fadd
mov
or
cs
popf
inc
xchg
cmp
in
fiadd
inc
fadd
add
rcl
fidivr
imul
jne
call
pop
bound
and
cs
cs
push
int
xor
fisttp
jns
into
xchg
mov
clc
movs
(bad)
leave
cmp
(bad)
push
mov
sub
popf
(bad)
sub
je
mov
xchg
in
jne
ds
sub
pushf
pop
jno
add
pushf
rcr
imul
add
leave
and
pop
mov
fnstenv
cwde
fadd
fisub
(bad)
loopne
add
fwait
mov
pop
cs
fwait
ret
sbb
out
fwait
cmp
sbb
sub
cmp
sbb
test
loope
retf
scas
loope
stos
daa
push
sbb
add
jmp
add
pop
mov
(bad)
shl
shl
test
fdivr
sahf
xchg
ret
xor
or
mul
out
stc
daa
fisttp
mov
retf
pop
fdiv
leave
mov
out
push
in
xor
cmp
enter
dec
push
dec
int
in
or
test
mov
mov
pop
in
dec
jo
push
pop
and
fldcw
sbb
and
push
pop
fstp
jg
retf
jmp
cmp
fisubr
jl
pop
pop
adc
and
sub
mov
pushf
inc
pop
jns
ja
mov
lahf
mov
lds
cmp
mov
mov
int3
cs
(bad)
xchg
mov
repz
es
pop
push
push
dec
xchg
and
mov
xchg
xchg
or
jmp
and
mov
inc
into
push
mov
push
inc
sbb
inc
and
add
cmp
call
and
sbb
shl
sbb
jl
sbb
enter
add
adc
cwde
add
push
enter
mov
sbb
ret
(bad)
and
push
and
test
mov
popf
or
dec
stc
addr16
ins
jge
jmp
mov
jecxz
ins
bound
xor
jns
mov
fprem1
sbb
sbb
mov
push
push
inc
(bad)
mov
mov
or
cdq
push
sar
test
dec
outs
dec
xor
iret
mov
aaa
dec
iret
sub
inc
jecxz
cs
lahf
dec
in
movs
mov
repnz
push
retf
and
push
aaa
enter
loop
(bad)
cmc
ret
sub
dec
aad
imul
(bad)
sub
jle
inc
fidiv
out
push
cmp
mov
imul
inc
mov
xchg
rol
aaa
mov
ror
adc
scas
inc
mov
lds
aaa
or
pushf
jl
push
or
push
fnstenv
dec
fldcw
retf
dec
hlt
fld
imul
leave
(bad)
stos
les
push
mov
and
cmp
fdivr
mov
push
sbb
pop
push
mov
rcr
sbb
daa
repnz
adc
in
lds
dec
jns
clc
aaa
nop
pusha
(bad)
xor
(bad)
push
aaa
push
(bad)
loop
cld
into
mov
sbb
call
dec
(bad)
idiv
pop
stos
rcr
jbe
pop
push
lock
fldz
adc
cmp
leave
adc
jne
inc
jbe
punpckldq
inc
test
sub
popa
inc
(bad)
pop
lods
jo
popf
les
push
jo
sahf
and
fisubr
jecxz
icebp
mov
inc
hlt
or
mov
ret
shl
cmp
fwait
push
les
out
inc
mov
cmps
add
in
mov
xor
inc
(bad)
push
mov
loopne
shl
sbb
call
adc
push
xchg
dec
push
dec
call
push
aaa
aam
(bad)
lahf
mov
cmp
or
lds
mov
imul
pop
icebp
rol
adc
scas
repz
pop
retf
pusha
fsubr
in
mov
scas
js
xor
adc
cmc
mov
pop
rcr
jbe
aam
loope
clc
enter
(bad)
daa
fnsave
and
xchg
int3
and
jmp
and
int
outs
cmp
stos
xor
push
loop
pop
stc
fidivr
mov
cdq
and
(bad)
lock
cmp
cmps
retf
xlat
dec
cs
icebp
cwde
pop
int3
xor
mov
cmps
jo
out
es
fadd
or
in
mov
push
in
push
aad
mov
retf
xchg
dec
ret
add
(bad)
aad
cdq
sbb
in
pop
lods
dec
ins
push
cmp
mov
lock
imul
jge
imul
sbb
adc
add
push
push
sbb
arpl
je
retf
ret
jge
arpl
mov
(bad)
cmp
and
sbb
aad
imul
inc
lahf
call
adc
in
(bad)
xlat
js
loop
xchg
shl
fld
mov
mov
or
adc
adc
sub
mov
or
enter
fisttp
or
les
lahf
(bad)
fstp
ins
movs
push
in
push
out
pop
fidiv
mov
or
cmp
(bad)
mov
inc
xor
mov
inc
mov
xchg
cmp
dec
xor
mov
mov
jne
dec
push
mov
inc
in
jg
cmp
jo
stos
pop
scas
pop
mov
test
jge
dec
adc
mov
mov
pusha
dec
mov
push
stc
mov
mov
rol
adc
lods
in
js
retf
aam
aam
in
aam
aam
mov
mov
mov
mov
pop
mov
ror
pop
mov
mov
mov
cmp
inc
dec
mov
xor
xchg
push
cwde
clc
fnstenv
fdiv
test
push
xor
rcr
and
push
cld
jb
leave
mov
cmp
outs
inc
dec
mov
fnsave
jo
sub
fsubr
cmp
sbb
cmp
fxch
xor
push
adc
movs
frstor
std
and
cmp
div
sub
scas
inc
ret
cmps
fstp
add
ret
mov
popf
dec
test
(bad)
inc
test
test
or
out
loop
jo
(bad)
(bad)
cwde
(bad)
mov
cmp
pop
cld
call
mov
pop
jno
jo
add
and
test
fmul
ja
js
pusha
int
in
jne
xor
pop
imul
xor
or
fsubr
rcl
pushf
xchg
je
sub
ins
and
push
push
push
push
ret
les
xchg
sub
pop
push
mov
jge
xor
sbb
push
sbb
cmps
test
arpl
lahf
fcomp
xlat
add
std
jno
ror
movs
wrmsr
ds
int3
clc
fs
adc
mov
push
pusha
mov
xchg
(bad)
lods
out
mov
add
scas
push
je
je
pop
pop
into
ficom
out
add
out
enter
adc
or
ins
inc
mov
cmp
movs
sub
loop
nop
push
popf
sub
sti
push
jmp
mov
pop
sub
push
sbb
imul
cmp
pop
mov
rcl
xor
ds
or
xor
fsub
dec
test
pushf
bt
or
pushf
call
lea
add
bt
cmc
push
pushf
sub
pushf
push
pop
pusha
test
test
add
jno
cmp
call
setnp
mov
lahf
mov
pusha
lea
call
lea
jne
not
movzx
movzx
mov
mov
pushf
lea
jmp
ins
add
mov
je
mov
pushf
xchg
inc
cmp
push
cdq
inc
retf
sub
cmp
daa
dec
mov
cmp
int
int3
pop
clc
and
mov
scas
add
inc
jecxz
into
and
and
lods
push
sub
push
mov
pop
inc
sbb
jb
mov
lds
dec
jne
in
mov
jmp
sub
mov
xor
test
sbb
mov
jb
cmp
xchg
ins
xlat
ret
std
mov
xchg
or
daa
mov
aad
retf
push
push
adc
jae
mov
mov
sub
adc
xor
mov
clc
fs
enter
les
or
xor
rol
out
ret
mov
mov
xor
mov
lea
jge
cmp
cmp
push
pushf
pushf
lea
jbe
mov
bts
bt
bsf
sub
or
adc
shld
mov
add
btc
shld
stc
mov
btr
bt
sbb
add
clc
inc
shl
mov
shr
call
call
mov
not
mov
pop
pusha
push
ret
jmp
push
inc
sbb
cmps
popf
mov
mov
push
dec
arpl
inc
dec
add
jge
push
lods
daa
mov
retf
aad
sbb
xchg
enter
fistp
jb
push
sub
or
add
pop
jl
frstor
xlat
ds
stos
js
scas
xchg
inc
add
jmp
call
push
ins
lods
mov
mov
cwde
jo
in
pop
lods
bound
(bad)
cmc
fiadd
cdq
push
outs
adc
mov
retf
dec
imul
aas
push
sar
push
mov
jmp
sti
ror
aam
ins
mov
xchg
enter
stos
dec
into
stos
push
fnstenv
pop
xchg
xor
xor
add
pusha
mov
lea
jmp
mov
mov
movzx
push
lahf
jmp
adc
pushf
mov
push
push
ret
lea
call
pushf
pusha
lea
jne
movsx
mov
pushf
lea
jmp
jmp
call
add
in
cmps
and
lods
cld
repnz
inc
ror
push
mov
and
adc
imul
enter
dec
push
sub
mov
scas
xor
and
aaa
ficom
int
(bad)
ficomp
pop
clc
sbb
or
or
std
sahf
ror
mov
pop
(bad)
cli
jg
sbb
jge
(bad)
cmp
xor
(bad)
(bad)
jae
outs
jns
dec
mov
mov
retf
cmp
adc
shl
cmp
sbb
test
pop
xchg
push
cmp
pop
mov
hlt
arpl
xor
mov
jge
add
stc
bt
or
mov
stc
call
(bad)
shl
repz
and
mov
popf
(bad)
scas
es
add
(bad)
mov
fadd
outs
test
movs
inc
xor
fwait
or
int
rcr
ds
pop
adc
dec
adc
cmc
jg
cmps
add
mov
iret
cmp
xor
and
ds
add
push
sbb
je
cmp
inc
jae
xor
or
sbb
adc
ss
aam
xchg
gs
xchg
or
mov
dec
mov
fisttp
fsubr
lahf
das
in
stos
fisttp
test
add
shl
not
clc
sub
call
jmp
call
call
call
lea
je
clc
cmp
pushf
lea
jne
push
mov
pusha
inc
call
test
xor
pushf
dec
pushf
pusha
push
clc
cmp
cwde
push
lea
bswap
cwde
mov
pushf
mov
mov
mov
lea
ja
pushf
call
cmp
xor
push
dec
jmp
movsx
movzx
push
mov
jmp
movs
xor
xor
pop
push
(bad)
cmps
pop
into
retf
adc
(bad)
dec
shr
adc
arpl
mov
and
cwde
ud1
popf
mov
jb
and
jmp
(bad)
jle
inc
stc
or
call
pushf
fld
xor
cwde
add
leave
push
mov
enter
call
or
in
xchg
je
inc
mov
push
test
mov
sub
jle
stc
mov
dec
outs
mov
xchg
pop
fadd
dec
sub
pusha
lock
aaa
stos
inc
pushf
jo
pop
inc
adc
jnp
mov
lahf
das
xor
xor
mov
pushf
mov
bswap
mov
push
pop
bswap
setge
push
call
push
pusha
mov
pushf
push
jmp
push
cmp
push
lea
jno
jne
bswap
call
call
add
adc
pminub
mov
add
inc
leave
in
loop
adc
mov
inc
mov
stc
ss
push
nop
cmp
adc
xlat
xchg
shr
out
loop
pop
test
add
bound
jmp
jecxz
hlt
mov
xor
inc
add
adc
retf
mov
ss
and
xor
or
mov
add
aaa
add
ret
and
test
loop
sub
jno
pop
and
fsubrp
mov
in
cmp
inc
cmp
das
fst
dec
js
popf
inc
fild
bound
cmps
mov
fdivr
pop
mov
push
adc
loope
mov
push
mov
sub
cmc
rcl
mov
xchg
ror
adc
sub
cmps
shl
xor
mov
scas
push
mov
fmul
int
retf
test
lahf
sub
int3
stos
test
jno
ror
cs
jmp
xchg
out
sub
mov
mov
mov
jno
mov
and
jne
inc
pop
imul
add
or
xor
(bad)
xor
adc
hlt
cmp
cmp
mov
imul
xchg
daa
idiv
xchg
push
lea
push
adc
xor
(bad)
sbb
(bad)
retf
lahf
sub
mov
inc
inc
xchg
out
fild
cmc
das
push
je
retf
xchg
jge
add
xor
xchg
mov
and
mov
cmovnp
imul
out
sti
mov
call
test
xchg
push
pop
mov
arpl
cmp
push
(bad)
les
lahf
jp
in
leave
pop
dec
dec
cs
jo
retf
add
mov
and
push
aad
push
or
sub
out
mov
inc
add
sti
mov
fs
je
stc
cmp
add
pushf
stc
pusha
cmp
push
lea
jb
pushf
mov
clc
cmp
call
mov
push
and
cmps
add
adc
test
jl
out
mov
mov
enter
arpl
mov
ds
or
mov
inc
pop
call
enter
mov
nop
js
mov
push
or
fld
and
jns
xor
mov
retf
lea
and
or
adc
jmp
sub
jl
sub
dec
leave
sub
mov
repz
(bad)
ja
mov
imul
nop
cdq
out
push
pop
out
cs
out
js
fidivr
inc
sub
sahf
or
pop
(bad)
aaa
outs
and
aaa
mov
or
sub
xor
lea
jb
cmp
stc
bt
bt
cmp
pushf
jmp
lea
jne
pusha
lea
jmp
jmp
call
jmp
mov
lds
push
imul
and
addr16
pusha
fild
mov
fnstsw
sar
icebp
rcr
out
and
jmp
push
and
add
je
aad
(bad)
repz
mov
xchg
aam
push
xchg
repnz
outs
ror
popa
test
inc
pop
cmp
je
sahf
or
cmp
shl
mov
imul
ins
scas
pop
test
ss
dec
pop
and
mov
fsub
push
mov
cld
out
xchg
psubsw
dec
sub
inc
movs
pop
pop
cmp
dec
out
or
or
mov
sbb
jno
lahf
mov
in
enter
fldcw
fdiv
or
sub
outs
sbb
push
call
repnz
pusha
mov
lea
jne
pusha
pushf
setnp
pusha
mov
call
inc
bnd
inc
ins
mov
aam
cmp
out
push
movs
lds
cmp
dec
arpl
out
push
jmp
in
jmp
aam
jge
cmps
xor
push
jb
push
cld
push
or
scas
outs
pop
shl
aam
mov
mov
aas
sbb
add
inc
leave
push
imul
cmp
mov
leave
adc
icebp
repnz
push
inc
and
or
mov
mov
dec
mov
adc
ss
dec
shl
adc
cdq
jle
cmp
adc
(bad)
icebp
cmps
lods
jmp
dec
xchg
and
and
retf
inc
cs
jge
mov
in
sbb
adc
mov
stc
fidiv
push
pop
inc
cmp
jne
rcr
je
mov
inc
je
in
dec
push
call
push
int
jb
dec
mov
ret
aaa
pop
test
imul
and
les
cmp
or
cmp
lea
and
aam
mov
fld
(bad)
or
les
xor
sar
mov
mov
mov
dec
pop
out
jo
test
mov
and
dec
push
push
in
and
inc
jmp
bound
mov
push
mov
jbe
or
pop
into
js
or
xor
pop
xchg
or
jne
(bad)
stc
scas
xor
jl
leave
cmp
mov
sub
xlat
aaa
mov
cmp
pop
and
dec
sub
jp
mov
enter
popa
or
push
and
push
jecxz
sbb
mov
mov
sub
xor
dec
pusha
rol
pushf
pop
dec
repz
and
lahf
daa
xchg
retf
inc
pusha
mov
cmp
mov
xor
stc
push
jmp
cmp
call
push
call
mov
pushf
mov
lea
ja
pushf
push
pusha
jmp
dec
movs
outs
push
jbe
aas
call
mov
neg
pusha
sbb
jl
mov
push
adc
add
cdq
push
shl
aas
add
sti
jl
js
ja
(bad)
scas
push
mov
ficom
mov
ficomp
rep
jecxz
aas
das
iret
xchg
mov
mov
movs
test
mov
test
xlat
mov
jmp
lock
repz
add
call
call
out
sub
sbb
jge
jo
cwde
test
push
in
in
cmp
dec
push
stos
jbe
mov
mov
inc
bound
add
ins
iret
dec
xor
push
arpl
aas
or
dec
jle
dec
push
lahf
mov
scas
aas
add
cs
test
or
and
icebp
(bad)
aad
fisub
add
and
stos
jne
outs
adc
xlat
imul
sub
int3
rcr
bound
inc
mov
add
lea
aad
ins
mov
int3
xor
fnsave
adc
cmc
cmp
push
sbb
lods
adc
jg
pop
mov
jo
aaa
xchg
lods
sub
pusha
outs
js
xor
xchg
cwde
gs
imul
fs
sub
jnp
cmp
xor
or
sub
pop
xchg
dec
sbb
and
daa
fwait
sbb
dec
pop
dec
cmp
mov
inc
lahf
or
and
js
add
or
movs
cdq
cwde
les
out
pop
out
aas
pop
sub
adc
inc
cmp
push
je
xchg
pop
test
mov
jmp
xor
loopne
rcl
out
test
sub
pop
sti
sbb
fs
mov
push
push
push
cs
xor
setp
jne
test
(bad)
lahf
mov
mov
movs
and
mov
xor
int3
add
lea
xchg
imul
daa
add
mov
add
or
xchg
dec
lds
add
arpl
sbb
jle
lock
outs
sub
aad
and
inc
adc
cld
test
pop
mov
lahf
and
and
std
es
lea
jp
pushf
mov
shld
test
shrd
mov
cmc
cmp
pushf
pushf
lea
jbe
shl
bt
mov
inc
btr
shl
add
bsf
mov
rcl
call
push
call
push
lea
call
pusha
mov
adc
jmp
pusha
pusha
mov
push
push
lea
jmp
mov
xchg
mov
mov
ins
xor
js
push
or
mov
sub
sub
push
(bad)
push
fst
or
push
pop
push
das
jmp
mov
jmp
push
mov
xchg
out
mov
sub
cmp
(bad)
fld
push
inc
xchg
iret
jo
mov
cmovno
pop
and
push
pop
inc
or
xlat
movs
adc
cmps
add
mov
stos
sub
jge
mul
mov
test
adc
(bad)
adc
dec
test
mov
xor
pop
xchg
and
cs
in
outs
fs
mov
add
push
adc
dec
xchg
or
and
sbb
pushf
inc
bt
xor
cmp
pushf
bt
neg
stc
bt
ror
test
mov
call
push
mov
mov
jmp
shrd
rcr
dec
mov
test
clc
bt
shl
call
sahf
icebp
popf
(bad)
mov
bound
lea
pop
lds
call
add
or
cmp
or
cld
dec
push
push
pop
xchg
jp
inc
ins
jns
(bad)
int3
das
hlt
jecxz
sbb
test
push
mov
mov
jns
outs
stos
and
out
xor
outs
(bad)
scas
fldenv
lods
in
mov
xor
(bad)
or
xchg
mov
movs
push
rcl
or
add
and
or
and
jb
retf
adc
push
mov
fwait
mov
add
ret
jb
or
adc
xor
(bad)
dec
adc
jo
xor
mov
mov
add
mov
push
or
(bad)
ins
mov
cmp
and
dec
jmp
arpl
sahf
and
out
sbb
add
cmp
inc
add
pop
xchg
dec
mov
fbstp
loopne
aas
sbb
lods
jmp
push
mov
loop
fld
mov
inc
call
mov
std
xchg
int3
or
and
fs
ja
mov
call
jmp
pushf
add
stc
bt
test
call
pusha
push
lea
jb
push
call
push
jmp
call
call
ins
mov
jnp
rol
test
jbe
mov
xchg
add
mov
push
test
pop
sub
pop
rcr
jecxz
sub
inc
(bad)
loop
sar
xchg
mov
xlat
mov
movs
xor
int
das
jle
mov
mov
sub
fsubr
and
xchg
mov
add
rcl
xor
pop
pushf
in
std
test
in
fs
fdiv
mov
sbb
mov
sysexit
adc
adc
mov
ds
fcomip
cld
(bad)
cmp
pop
adc
xlat
add
xchg
scas
not
push
(bad)
dec
test
pusha
add
cmc
mov
jmp
clc
jmp
lea
je
pusha
lea
not
movsx
pushf
mov
mov
pop
lea
call
sets
mov
bt
test
shl
pusha
mov
mov
jmp
imul
cmp
les
cmps
xor
mov
cmps
mov
scas
je
sbb
mov
lock
xor
shr
jp
aaa
xchg
xchg
aad
sahf
ins
rcr
pop
data16
mov
nop
fdivr
inc
int3
cmp
in
int3
sub
(bad)
das
popf
inc
cmp
and
or
xor
ror
jge
ret
imul
or
and
call
add
and
cmp
mov
jge
push
jl
ja
add
xchg
popa
(bad)
std
cli
fs
adc
daa
arpl
loope
(bad)
ror
jmp
cld
les
pusha
and
sbb
cmps
jmp
mov
loopne
or
mov
dec
movs
pushf
test
ror
adc
jns
daa
out
retf
pushw
or
adc
lock
or
xchg
fucomp
imul
shl
dec
daa
xor
push
push
adc
shr
add
pop
and
mov
sar
test
addr16
xchg
fimul
call
xchg
mov
sub
push
xor
(bad)
fwait
loop
in
and
xchg
or
pop
mov
push
mov
mov
scas
in
ins
dec
in
mov
push
cdq
mov
dec
retf
xchg
dec
les
ins
sbb
ret
mov
dec
mov
aam
fs
xor
neg
data16
inc
add
inc
iret
ins
cmps
adc
inc
jecxz
aad
jnp
cmp
xchg
inc
(bad)
mov
aas
bound
cmp
fs
movs
call
je
cmp
sub
retf
movs
sbb
imul
js
scas
mov
sbb
pop
ins
aad
pushf
lahf
test
ret
adc
push
aam
sub
lea
jne
push
push
bswap
mov
mov
pusha
lea
jmp
jmp
rol
push
clc
stc
cmp
neg
push
jmp
in
add
inc
fwait
jb
call
test
jmp
jmp
cmps
scas
mov
jmp
mov
mov
dec
(bad)
in
jmp
sbb
repnz
dec
and
xor
repz
lods
adc
or
jae
test
outs
jb
sbb
aad
pusha
popf
stos
mov
mov
dec
fnsave
or
sub
aas
aam
jge
icebp
xlat
test
scas
pop
scas
inc
sbb
inc
in
mov
movs
iret
mov
add
xor
sbb
sti
rcr
jbe
or
mov
cdq
xchg
pop
aam
fadd
int3
fcmovnu
mov
leave
pop
cmp
sbb
pusha
or
pushf
call
lea
je
push
mov
lea
pop
not
call
sub
rol
bts
mov
test
add
push
cmp
movzx
call
aaa
push
btc
rcl
ror
push
cwde
das
shrd
push
lahf
add
stc
seta
mov
test
test
stc
test
test
pusha
push
jmp
push
lea
je
js
cmp
call
mov
mov
mov
pushf
mov
push
ret
outs
je
jae
jb
ins
cs
add
bt
clc
shr
pusha
cmc
stc
cmp
push
mov
mov
pushf
lea
je
clc
cmp
call
push
lock
std
std
test
or
data16
leave
int3
lahf
or
mov
pop
inc
ss
jg
ins
ins
jge
dec
in
mov
push
and
aam
push
enter
fldenv
mov
inc
jb
pushf
xor
outs
dec
add
ffree
inc
push
xor
xchg
push
(bad)
stos
je
pop
pop
outs
test
adc
enter
fiadd
fwait
jge
dec
movs
sub
xor
mov
mov
adc
sti
(bad)
or
sbb
aad
aas
dec
dec
and
out
push
mov
push
in
push
sbb
mov
arpl
cld
bnd
mov
out
sbb
es
daa
test
cdq
jge
stc
outs
push
rcr
adc
sti
xor
rcr
mov
mov
adc
cmp
xchg
aad
imul
xor
sbb
add
mov
addr16
(bad)
sbb
jnp
jl
or
mov
out
bound
and
fmul
cwde
push
and
and
(bad)
out
lahf
sbb
arpl
(bad)
inc
add
jno
and
lea
je
stc
pusha
pusha
add
clc
clc
cmp
pushf
push
mov
lea
jb
pushf
test
cmp
mov
lea
jae
btr
mov
sar
sbb
mov
dec
btr
shrd
mov
rol
not
pushf
rcl
mov
mov
mov
sub
test
bt
repnz
jmp
call
mov
cmps
mov
cmp
cmp
aad
out
jne
sbb
into
jmp
ficomp
and
or
cld
xchg
xor
call
sub
scas
jmp
jp
mov
fdivr
add
mov
mov
xlat
inc
push
jl
hlt
cli
shr
and
sbb
test
js
dec
mov
js
ds
mov
(bad)
ror
sbb
mov
push
inc
mov
pusha
xchg
ss
test
mov
repz
sbb
push
pushf
enter
or
pop
add
mov
cmp
mov
jle
cmps
inc
sub
fisttp
jns
push
push
push
xchg
sub
test
loope
and
mov
cmp
(bad)
sub
xor
repz
mov
jbe
jl
sub
dec
in
sub
or
jecxz
int3
push
les
jle
sub
(bad)
int3
mov
ins
xchg
jae
dec
adc
out
pusha
int
loopne
test
pop
aam
test
pop
movs
in
loopne
and
cmps
aad
pop
cdq
sbb
and
call
sub
sub
sbb
cmp
mov
ins
stos
repz
inc
into
inc
mov
test
adc
dec
or
ffreep
mov
inc
es
xor
pop
fcomp
fwait
sub
inc
inc
sbb
push
jne
gs
cmp
out
mov
ins
add
push
in
xchg
scas
mov
dec
in
or
or
sbb
in
in
pop
lar
lods
test
xor
sbb
or
dec
sub
pop
shr
sbb
xchg
fistp
cmps
sub
iret
pop
jae
jnp
ror
dec
scas
into
(bad)
pop
gs
mov
ret
movs
push
aaa
push
mov
xor
data16
push
xor
cmp
and
push
imul
into
imul
sub
clc
push
inc
(bad)
int3
clc
scas
out
jge
shr
ret
daa
sti
mov
aad
je
push
repnz
jnp
popf
call
ret
mov
push
js
in
sub
pop
push
xchg
inc
sbb
add
push
call
scas
ror
ss
pop
imul
jecxz
loopne
pop
or
ss
adc
leave
cmp
ins
cmc
aad
sbb
rcl
sub
pop
pusha
out
mov
xchg
scas
jne
jmp
stos
lds
fsubp
mov
push
xchg
jge
shr
retf
add
in
dec
mov
ror
iret
xchg
push
jl
adc
jmp
sub
sub
aaa
or
lea
push
mov
das
inc
mov
rol
int
xor
sub
jmp
xchg
xchg
out
and
outs
push
xchg
dec
inc
push
cmp
nop
xor
push
cmps
dec
jg
push
or
sbb
leave
push
mov
call
cmp
dec
cmp
(bad)
sbb
or
xchg
ret
ins
aam
or
jmp
pop
sub
jne
aam
dec
pop
xchg
aaa
xchg
dec
sbb
imul
leave
pop
movs
scas
shl
cmps
pop
sbb
pop
mov
jae
movs
jo
pushf
sbb
sti
icebp
int3
pop
cld
je
inc
xor
jne
sub
(bad)
mov
(bad)
pusha
imul
retf
xchg
adc
adc
sub
push
popa
inc
mov
push
push
pop
(bad)
push
pop
cmp
sbb
imul
sbb
cmp
jns
adc
nop
cdq
cmp
xchg
pop
xchg
inc
sub
leave
out
sti
push
cmp
test
ret
cmp
addr16
sub
pop
or
and
enter
icebp
add
add
pop
add
push
fs
and
xchg
jns
mov
sbb
jnp
push
ins
int
lods
sar
iret
mov
(bad)
pop
dec
xchg
sar
cmp
jl
jg
lods
jo
xor
out
fisttp
addr16
mov
inc
loopne
mov
push
popa
inc
stc
hlt
aas
add
stc
mov
pop
lea
add
cli
and
adc
mov
xor
imul
test
push
and
mov
inc
gs
pop
push
or
xor
mov
or
adc
call
mov
mov
not
jmp
dec
stos
das
fsub
mov
jp
je
inc
cmp
jle
cmp
iret
outs
fiadd
xlat
push
push
jmp
mov
cmp
mov
bswap
imul
or
or
gs
and
std
mov
sub
(bad)
and
rcl
test
std
repnz
inc
or
push
jns
xchg
adc
lods
jmp
cmc
xchg
jmp
push
add
and
(bad)
js
call
sbb
mov
mov
pusha
inc
push
mov
push
lea
call
call
push
pop
pushf
push
push
push
ret
pushf
call
pusha
call
int3
sbb
xlat
aaa
loop
or
loope
jno
push
addr16
cmp
mov
mov
adc
mov
(bad)
xor
mov
xor
inc
ins
mov
push
in
add
ins
imul
xchg
sub
sub
shl
xchg
dec
mov
push
adc
add
mov
dec
popf
fwait
add
(bad)
mov
inc
cmc
xchg
shr
jb
mov
sub
adc
mov
add
mov
mov
into
sub
in
orps
jecxz
dec
inc
sbb
push
fstp
fisub
jbe
ja
xchg
xchg
sbb
pop
cmp
push
out
cwde
or
mov
lds
popa
lahf
retf
sbb
jmp
cs
mov
jo
cwde
dec
je
(bad)
jge
and
lahf
adc
aaa
add
sub
int3
cmp
push
addr16
je
call
les
es
mov
ficomp
int
jle
inc
sub
push
into
stos
mov
ins
pop
outs
clc
cli
mov
fmul
and
xlat
out
movs
push
(bad)
call
push
mov
or
cmp
in
(bad)
ret
mov
(bad)
adc
sbb
add
shr
imul
pop
inc
aas
stc
cmp
dec
fisttp
arpl
xor
sub
std
ja
pop
pusha
mov
and
mov
cmp
push
movs
enter
jno
dec
repz
push
jo
(bad)
in
sti
pop
cli
mov
add
push
test
jbe
cmp
pop
test
inc
pop
dec
adc
add
adc
into
stos
push
jmp
xor
int
inc
and
mov
push
push
ret
call
or
in
inc
pop
into
out
push
jp
mov
mov
enter
(bad)
mov
jle
ins
in
pop
inc
pand
dec
mov
cs
add
xchg
xor
retf
aam
mov
sub
cmps
dec
jmp
adc
cli
shl
clc
scas
jge
lea
jne
inc
push
jne
push
inc
popa
push
cmp
xor
and
dec
inc
jno
add
jne
ins
aas
sub
je
sbb
outs
add
sbb
sbb
mov
jle
adc
nop
inc
or
adc
int
adc
enter
xor
and
repz
not
lea
bswap
push
mov
push
jmp
push
inc
mov
sbb
mov
push
retf
jecxz
jo
ins
cli
je
add
int3
xchg
jnp
ror
shr
fidivr
nop
jno
sti
xchg
xchg
push
jo
mov
(bad)
mov
sbb
je
mov
push
mov
push
sbb
jg
idiv
jns
retf
and
into
repnz
loope
popa
scas
dec
cld
xchg
pop
mov
add
sbb
adc
cmps
jl
jb
into
ja
push
cmp
stos
cmps
int3
cmps
test
or
cmc
lock
cdq
cmp
js
sub
cmps
and
add
or
std
or
adc
fldenv
cld
aaa
adc
test
hlt
sar
repz
or
xor
xor
retf
xchg
mov
fst
pop
xor
stos
aad
shl
mov
fiadd
in
mov
xor
mov
dec
bnd
or
jmp
push
int
pop
fnstenv
out
(bad)
imul
sub
and
fld
adc
cli
call
fst
inc
(bad)
or
jno
dec
mov
sub
out
test
push
fnstsw
repnz
popf
cld
push
inc
(bad)
(bad)
popa
xchg
mov
push
(bad)
ja
(bad)
cwde
mov
xchg
daa
sub
pop
and
lods
push
add
add
sbb
pop
fwait
out
outs
sbb
call
lahf
adc
cmp
imul
int3
es
in
and
ds
inc
call
and
adc
mov
cmp
dec
mov
(bad)
js
and
jl
pop
dec
jmp
sub
sbb
xchg
sub
cmp
add
popf
pop
xor
and
sbb
pop
adc
ffree
imul
and
add
sub
jmp
int
les
mov
xor
dec
sbb
mov
call
pop
je
push
xor
aad
rcr
fild
ret
pop
addr16
jecxz
call
cmp
das
mov
aaa
in
mov
cli
cwde
xlat
inc
(bad)
cwde
xor
pop
loopne
jns
ffreep
jo
add
adc
mov
fcmovu
mov
add
(bad)
lahf
mov
sbb
pop
ins
mov
ja
loopne
mov
out
jl
mov
and
adc
(bad)
(bad)
sbb
cmp
mov
dec
nop
repnz
push
loope
(bad)
and
test
and
mov
cwde
sbb
cmp
out
leave
scas
je
lahf
pextrw
push
mov
mov
mov
mov
mov
lea
jmp
jmp
cmp
bt
add
call
clc
add
mov
mov
jmp
call
push
jmp
jmp
pushf
mov
lea
jne
pusha
pushfw
pop
not
inc
jmp
shr
loop
imul
cmp
mov
repz
jo
inc
or
popa
jl
retf
mov
(bad)
cmp
pop
loopne
adc
adc
(bad)
cdq
mov
add
xchg
outs
in
movs
enter
sbb
aaa
and
hlt
mov
pop
nop
cmp
bound
repnz
mov
mov
xchg
js
xchg
pushf
sub
sbb
in
inc
test
jge
daa
aaa
cmc
inc
bound
cmps
inc
xor
add
and
popa
pop
outs
hlt
rcl
adc
pop
mov
adc
stc
aaa
pop
and
xor
ja
xchg
and
jg
test
mov
jg
mov
and
in
lahf
nop
mov
(bad)
bound
jnp
jg
sbb
and
add
inc
nop
call
inc
xchg
or
in
ds
xchg
mov
jae
sub
mov
mov
sub
lock
scas
cmps
loope
es
ret
ret
and
mov
stc
call
leave
mov
jg
push
jae
ret
movs
or
ins
adc
fisttp
shl
inc
add
dec
test
fild
rol
cmp
mov
push
std
mov
xor
add
add
fistp
and
dec
mov
push
and
loopne
sti
cwde
fist
mov
sbb
lods
ror
sbb
push
sbb
cmp
(bad)
dec
and
call
push
pusha
jmp
mov
neg
call
xchg
jmp
mov
pusha
push
mov
lea
jmp
lea
call
fidiv
push
leave
das
xor
fldenv
dec
cmp
adc
mov
and
push
pop
test
xchg
shl
test
iret
mov
or
or
inc
jle
js
mov
cmp
fidivr
lods
sub
call
jp
mov
lods
pop
fneni(8087
mov
cmp
stos
xchg
fadd
fistp
sub
inc
jns
jecxz
cld
cmp
loopne
jns
push
imul
scas
or
sbb
ds
cmc
sub
add
cli
or
or
or
pusha
push
jmp
mov
jmp
jmp
lea
call
test
clc
pusha
cmp
mov
lea
jae
test
cmp
push
pushf
mov
lea
jae
bt
jmp
lea
jge
pushf
lea
jne
pusha
lea
call
push
pushf
mov
pusha
lea
jmp
xchg
pop
lea
mov
pusha
mov
bswap
mov
mov
lea
pop
mov
mov
mov
mov
pop
push
push
ret
jmp
pusha
setns
jmp
push
push
imul
cmc
test
add
pusha
pushf
push
mov
lea
jmp
setno
pushf
lods
stc
call
clc
mov
call
push
pop
push
push
push
ret
inc
jmp
add
dec
je
jne
jb
push
jns
je
ins
dec
outs
outs
jb
popa
je
outs
outs
add
bt
test
xor
cmc
test
repnz
push
lea
jmp
rol
call
push
or
jne
(bad)
(bad)
cmp
test
jbe
fldenv
push
popf
cli
and
dec
adc
mov
cmc
sub
das
push
imul
pushf
idiv
cmp
inc
sub
dec
push
jb
dec
sar
pop
lea
enter
push
or
or
call
cmc
lock
cmc
test
add
ret
and
movs
jl
lds
xchg
adc
out
jle
arpl
jl
jecxz
sub
sbb
shr
mov
call
cli
push
fucomi
cmps
int3
push
aam
push
jge
ret
push
push
cli
cmp
pop
jge
mov
or
pop
inc
pop
or
mov
movs
or
push
sub
xor
mov
mov
mov
or
or
push
jmp
call
cwde
mov
movsx
lea
call
aaa
ror
sbb
out
mov
xor
push
xor
sub
bound
imul
(bad)
sub
js
test
stc
test
jne
jp
stos
lahf
stos
jmp
in
xchg
ins
out
or
stc
int
fs
push
xchg
sti
and
(bad)
pop
pop
mov
retf
clc
fdiv
push
xor
lea
jb
xchg
jge
mov
and
inc
xchg
hlt
fdivr
push
imul
stc
cmps
cmp
jmp
dec
fs
aam
inc
in
inc
pushf
in
iret
fst
cmc
mov
lds
js
add
and
xor
jge
aas
je
scas
mov
movs
das
out
movs
jecxz
jae
dec
test
pop
fdivp
jo
mov
pop
inc
cs
movs
sbb
jle
dec
push
push
(bad)
sahf
and
or
or
cmp
into
cmp
adc
mov
bt
mov
not
ror
lea
add
mov
stc
clc
clc
sub
pushf
rep
push
lea
lea
pop
mov
pusha
lea
jmp
pusha
pushf
mov
mov
jmp
out
call
loope
push
fbld
outs
mov
sbb
sbb
jecxz
aam
sub
scas
or
cmp
inc
pop
cmp
and
jns
cdq
fs
lods
xchg
cmp
mov
adc
adc
ins
mov
pop
sbb
popf
adc
mov
data16
add
sub
imul
data16
aam
xor
xchg
sbb
fsubr
cmp
call
fstp
xor
(bad)
mov
mov
mov
or
jg
fcmovnbe
ss
aad
jbe
imul
dec
(bad)
push
movs
pop
aas
dec
jae
adc
xor
sbb
aas
cmp
daa
ja
add
mov
sub
dec
fs
fldenv
sar
mov
add
xchg
ret
cli
loope
jmp
test
dec
and
mov
imul
ins
fld
mov
sub
push
xchg
inc
retf
lea
enter
sbb
inc
enter
jno
cli
leave
out
stc
mov
adc
cmp
and
push
ins
movs
pop
neg
jl
dec
xchg
jne
cvtdq2ps
jo
int3
push
bound
push
sub
pop
data16
xchg
sbb
add
jb
mov
clc
push
(bad)
push
addr16
dec
(bad)
mov
xchg
add
inc
jb
hlt
cmp
hlt
dec
jae
aas
fidivr
(bad)
pop
fstp
(bad)
sti
scas
and
imul
fistp
cmps
cmp
pushf
jb
or
push
popa
ficomp
jl
push
sbb
inc
fs
mov
push
lods
shl
pusha
pusha
mov
jmp
push
call
add
jmp
lea
je
pusha
pusha
mov
call
pushf
pushf
lea
jne
lahf
jmp
add
push
pusha
lea
je
pusha
add
mov
lea
jmp
lea
jb
pushf
call
xchg
outs
outs
neg
dec
call
iret
out
push
dec
out
xchg
ret
enter
and
xor
jmp
shr
xor
(bad)
mov
cwde
std
cmc
in
pop
and
mov
fmul
xlat
ja
or
imul
xor
cmp
test
push
adc
out
or
mov
mov
push
test
rol
nop
mov
ins
sti
or
push
xchg
fistp
mov
retf
call
pop
mov
pop
add
xchg
and
push
xchg
div
pop
data16
pop
bound
inc
pop
dec
stos
jbe
inc
addr16
sbb
out
inc
push
add
sub
and
push
sub
push
mov
outs
pop
push
jmp
pop
jle
lahf
add
leave
pop
cdq
mov
and
int
mov
xchg
jae
call
mov
jns
cld
xchg
sbb
dec
cmp
fisttp
shr
and
rol
(bad)
(bad)
push
add
adc
aaa
or
adc
and
sti
out
or
sub
(bad)
jmp
sub
push
fidiv
adc
sbb
int3
in
mov
les
jnp
jmp
mov
mov
sub
aad
dec
fs
das
jmp
sar
adc
mov
data16
inc
mov
sub
xor
adc
dec
out
je
pop
mov
icebp
adc
jne
xchg
sbb
dec
ds
gs
ds
arpl
xchg
out
movs
mov
(bad)
in
pop
cmp
sub
fprem1
inc
and
call
mov
adc
rcr
and
adc
push
xchg
jb
xor
add
fild
mov
rcr
in
mov
fdiv
cmp
or
mov
push
in
and
cmp
dec
jmp
and
mov
cmp
mov
cmp
pop
int
sub
mov
adc
xor
imul
add
push
xchg
push
jl
jp
cmp
pop
mov
push
cmp
scas
add
(bad)
inc
cmp
xchg
fs
pusha
ds
mov
je
add
push
pushf
dec
imul
call
jo
and
xor
mov
sahf
sub
cmps
mov
test
sahf
clc
xchg
aad
dec
push
ins
in
pop
push
mov
mov
icebp
push
push
and
movs
nop
cmps
mov
icebp
jl
int
sti
iret
(bad)
mov
movs
cmp
inc
inc
fsub
hlt
pop
das
out
xor
out
movs
mov
dec
int
retf
sbb
or
add
xor
sti
jns
shr
inc
or
call
mov
not
not
lea
pop
push
mov
pushf
jmp
stos
and
pop
mov
nop
mov
stos
sbb
sbb
call
int
enter
or
rol
loop
cli
stos
xor
pop
mov
mov
mov
call
int3
sbb
out
(bad)
inc
pop
fistp
push
jnp
repz
lahf
mov
movs
inc
lea
mov
les
inc
mov
pusha
pop
cmp
int3
cld
push
je
shl
push
mov
das
jge
mov
jnp
dec
pop
in
ja
add
retf
mov
adc
das
xchg
or
in
jmp
and
xchg
and
sbb
mov
je
inc
jge
stos
jmp
push
test
call
aad
mov
dec
fwait
xor
or
add
xchg
movzx
pusha
dec
and
mov
mov
jmp
jmp
push
inc
mov
lea
jmp
js
push
jbe
push
int3
shl
sub
pop
ret
in
fwait
mov
ins
pop
out
xor
cmp
push
sbb
sbb
dec
push
mov
mov
push
add
dec
stos
xor
pop
stos
mov
dec
mov
ret
add
or
pusha
xchg
dec
fsub
dec
pop
fdiv
pop
pop
push
sub
pop
and
into
hlt
movs
ror
out
pop
cmp
repz
sti
cmp
stos
dec
push
mov
mov
push
fcomp
sbb
pop
mov
rcr
adc
mov
stos
xor
mov
aad
xchg
data16
pop
inc
stos
push
loopne
cmp
test
ss
lods
movs
fbstp
(bad)
dec
xchg
stos
mov
xor
sbb
mov
adc
cmp
and
inc
pop
imul
and
add
and
shr
sbb
rol
sahf
sbb
sti
xlat
or
ror
xchg
mov
jae
ins
add
add
xor
cmp
dec
hlt
mov
lea
xchg
sbb
jb
pop
mov
jmp
icebp
cmp
push
and
mov
mov
and
cmp
pop
aam
movs
inc
outs
stc
inc
dec
fwait
or
fadd
pushf
dec
out
jae
gs
repnz
aad
push
mov
dec
sub
gs
mov
imul
cdq
jecxz
push
sahf
add
mov
mov
leave
dec
repz
jnp
mov
inc
push
add
xchg
or
cmp
xor
and
or
(bad)
mov
xchg
shl
mov
adc
push
dec
sub
lods
inc
(bad)
and
jne
xchg
inc
imul
or
loopne
jb
and
or
arpl
xchg
mov
push
popf
sar
cmp
push
and
das
das
fwait
or
mov
stc
outs
add
sub
fisttp
cwde
mov
jb
out
and
cmp
jecxz
sahf
sbb
iret
inc
ins
cmps
and
es
out
es
ds
pop
pushf
adc
js
div
xchg
dec
push
in
adc
out
aas
or
add
mov
pushf
lea
jmp
mov
or
pusha
lea
je
push
mov
bswap
pop
pusha
mov
lea
pusha
mov
push
push
xchg
not
push
pop
pushf
pushf
mov
bswap
mov
jmp
call
retf
clc
xlat
cli
xchg
ja
mov
jnp
push
out
xchg
jmp
sar
nop
(bad)
pop
mov
cmp
pushf
shl
inc
shr
popf
bound
jecxz
dec
fldcw
mov
xor
in
sbb
add
lock
ins
xlat
adc
rcr
sbb
and
call
cdq
jmp
shr
sbb
mov
scas
dec
adc
imul
shr
add
les
aaa
xor
adc
inc
pop
dec
xor
cmp
and
xchg
icebp
das
mov
(bad)
stos
movs
and
pop
lds
jp
arpl
ret
loope
and
repz
loope
(bad)
iret
jnp
lods
mov
sbb
ins
fisub
ins
or
and
test
and
xor
inc
paddq
aam
push
ss
dec
mov
in
imul
push
bound
inc
std
mov
cwde
lods
cdq
sbb
sub
sbb
into
arpl
and
gs
lods
sbb
push
addr16
push
or
bound
aaa
mov
fadd
and
inc
mov
pop
mov
fcomp
cwde
pop
jae
or
imul
(bad)
jns
or
mov
mov
mov
pop
xor
pop
sbb
cdq
je
mov
push
call
sbb
call
aas
sub
adc
cdq
cmp
clc
cs
nop
outs
sub
dec
in
lahf
je
gs
lods
pop
add
xlat
jb
pop
xchg
outs
jne
or
mov
inc
mov
mov
or
sbb
sbb
pop
loop
mov
sbb
iret
imul
push
les
xchg
dec
push
mov
and
xor
mov
test
lea
ins
xchg
mov
imul
pop
xchg
inc
xlat
or
lods
sub
xchg
int3
mov
fwait
add
xor
mov
jmp
pmuludq
fcomp
xchg
icebp
stos
and
fld
cli
test
xlat
test
idiv
cmp
pop
daa
sbb
cmp
mov
pop
pop
push
inc
ds
cmc
fimul
std
pop
inc
(bad)
adc
mov
or
btr
ror
bswap
bswap
add
rcl
jmp
aas
retf
lahf
or
aam
cmc
dec
push
rcl
ror
cmp
sub
jle
add
ror
or
call
inc
in
mov
sub
xor
daa
test
or
int3
cmp
ror
mov
push
xchg
push
jge
or
cmp
push
xor
adc
clc
pushf
data16
jmp
and
sbb
lds
daa
fwait
inc
ins
inc
sub
test
ja
push
ins
cmps
jmp
stc
adc
pop
sbb
cld
(bad)
sti
sub
xchg
sub
xchg
int3
cmps
dec
iret
xor
les
sahf
push
add
pop
dec
and
in
sahf
cld
push
mov
mov
mov
mov
test
sub
pushf
cmc
bswap
cmp
mov
inc
sbb
jmp
inc
sub
inc
loope
or
mov
stc
add
jae
jns
push
cmc
scas
cs
sub
jb
fst
or
mov
(bad)
je
dec
scas
int
nop
mov
push
ins
xor
dec
jmp
xor
pop
leave
cmp
pop
add
pop
(bad)
sub
arpl
div
pop
jmp
into
popf
outs
repz
std
inc
pop
pop
cmp
lock
sbb
xor
push
xor
in
clc
out
and
inc
dec
or
ins
addr16
adc
add
(bad)
mov
mov
mov
shr
pop
xchg
test
xchg
sbb
gs
jbe
push
inc
jnp
ror
test
mov
stc
adc
fisub
mov
cmp
jle
add
movs
fcomp
pop
inc
aas
dec
repz
call
test
leave
or
xchg
or
aam
fistp
fdivr
mov
cmp
add
push
fnstsw
add
or
mul
leave
cmp
test
out
add
sahf
outs
push
mov
(bad)
mov
(bad)
call
adc
add
push
mov
imul
dec
bound
shl
pop
sbb
sub
sbb
aas
sbb
daa
pop
hlt
cmps
adc
cmp
push
lods
mov
xchg
jnp
outs
xor
jl
or
jno
loope
xchg
je
dec
push
inc
fbstp
mov
js
inc
loope
retf
test
jmp
adc
sub
(bad)
mov
test
pop
sbb
inc
inc
cld
push
jmp
test
outs
mov
pop
add
pop
in
stos
jae
movs
and
adc
in
lahf
pop
test
dec
rol
add
jnp
sbb
inc
pop
loope
dec
test
shl
clc
mov
popf
cmps
int3
add
sbb
lods
sub
aaa
and
adc
or
dec
mov
ja
and
push
adc
ror
xchg
scas
sub
xchg
pop
aas
inc
fdiv
cmps
jnp
ins
adc
and
pop
fild
adc
pop
bound
mov
in
cmp
bound
cmp
leave
sbb
into
mov
sbb
xchg
cmp
and
jecxz
and
fs
jg
aad
leave
gs
xchg
pop
lds
mov
xor
pop
(bad)
ds
test
sub
xchg
or
sub
push
or
or
mov
mov
push
xor
and
sbb
mov
jns
test
jns
jp
mov
dec
pop
xor
lds
inc
mov
fwait
pop
mov
cmp
int3
sbb
rcr
push
pop
mov
dec
sar
mov
cld
sub
sub
jp
mov
out
ret
sahf
stc
sbb
mov
xor
cmp
imul
xor
test
pop
cdq
pop
cli
add
fsub
dec
imul
adc
pop
push
push
idiv
mov
(bad)
mov
ins
sbb
imul
int3
ds
cwde
inc
xchg
dec
(bad)
fmul
fwait
mov
aas
leave
xchg
int
mov
sub
dec
adc
sbb
out
add
int
jmp
pop
push
leave
xchg
push
dec
int3
mov
adc
fidiv
ss
data16
sub
out
shl
ins
addr16
dec
adc
rol
push
add
inc
lahf
fwait
mov
add
inc
cwde
dec
(bad)
shl
(bad)
or
clc
add
jmp
sbb
sub
xchg
out
ins
push
cdq
cmp
fld
out
rcr
rol
mov
inc
pop
or
mov
push
sub
ja
call
xchg
test
sub
sub
push
dec
pop
repz
adc
lods
cmp
xchg
jno
push
sbb
xor
aam
mov
jecxz
adc
call
bound
adc
push
scas
int3
or
xchg
push
cdq
dec
push
push
fisub
or
outs
or
dec
inc
dec
outs
aad
ja
push
fs
std
or
idiv
jl
mov
and
push
push
or
ror
mov
mov
bswap
bswap
mov
sar
inc
add
mov
pushf
sub
rcr
shr
xor
lea
xchg
lods
seto
inc
stc
jmp
cmp
addr16
jge
inc
sar
pop
pop
out
adc
cld
and
iret
sbb
je
lods
add
pop
push
fcomp
lahf
mov
jle
dec
lods
jae
inc
rol
test
sub
retf
add
push
mov
shr
gs
and
jge
sub
mov
xchg
les
add
out
mov
pop
jg
xchg
dec
pop
mov
mov
push
jb
pop
mov
jmp
and
sub
inc
push
imul
retf
and
out
adc
aam
cmps
dec
inc
push
out
fs
push
or
(bad)
out
inc
lds
movs
cmp
retf
mov
sub
mov
not
pop
cmps
pop
or
shl
daa
cmp
fsub
xor
sahf
cmc
call
xchg
call
ss
and
xor
popa
push
adc
js
mov
out
lea
retf
mov
nop
stos
(bad)
mov
les
add
sbb
enter
push
cmp
rcl
arpl
jo
sbb
and
nop
xor
(bad)
mov
in
sar
outs
sti
mov
cmp
pop
pop
mov
push
adc
sub
mov
xchg
pop
jge
push
mov
pop
cmp
jnp
xchg
in
lea
dec
in
loopne
jne
xchg
push
cmp
call
loope
out
jbe
ins
mov
in
xchg
xlat
dec
test
ret
push
pushf
inc
push
pushf
mov
push
lea
jmp
aaa
cmp
sub
xchg
add
mov
adc
mov
retf
outs
nop
jnp
jbe
pop
outs
test
leave
add
add
idiv
not
push
mov
or
ds
mov
add
lahf
das
push
cmp
jno
les
loop
inc
jp
or
sbb
not
mov
aad
retf
jno
das
add
ins
mov
jp
repnz
out
jecxz
shl
(bad)
outs
or
xor
or
ret
(bad)
(bad)
loope
jb
jbe
mov
mov
cmp
cmp
inc
inc
push
inc
mov
test
jo
popa
dec
xchg
mov
inc
hlt
xchg
mov
dec
push
lds
scas
aaa
sub
sbb
shl
imul
fild
jp
in
mov
cmp
stc
add
xchg
ret
add
add
sbb
push
repz
hlt
inc
jp
ret
and
je
push
lea
jmp
push
jmp
adc
add
jmp
add
mov
xchg
xchg
add
loop
stos
cmp
cmp
push
mov
xor
sbb
aaa
inc
push
dec
jae
mov
std
dec
loop
xchg
jae
loopne
jae
push
push
push
fistp
mov
dec
lods
xchg
lods
sub
pop
cmp
mov
mov
pop
pushf
push
mov
jae
jo
scas
arpl
adc
mov
cmps
xchg
neg
maskmovq
not
loop
cmp
jmp
mov
inc
cmps
dec
in
pop
out
(bad)
mov
jge
lods
sahf
sub
fadd
and
out
pop
or
aad
sti
sbb
mov
push
(bad)
dec
scas
les
sbb
pop
pop
sub
add
sub
scas
stc
xchg
repz
iret
sti
sar
stos
ret
adc
scas
int
sahf
repz
and
jne
lea
mov
push
push
push
lea
jmp
pusha
pushf
mov
mov
call
clc
call
mov
lea
push
lea
call
push
lea
jae
bt
call
pop
xchg
dec
cmp
ins
mov
push
fsub
and
mov
(bad)
popa
(bad)
pop
mov
out
sub
movs
scas
xlat
daa
inc
sti
sbb
popf
jo
shl
or
fstp
pop
mov
push
inc
mov
ret
lock
or
pop
fwait
sbb
rcl
fwait
(bad)
dec
sahf
(bad)
ret
jecxz
adc
daa
fs
adc
scas
jae
cmp
or
gs
aam
xchg
jbe
xchg
sti
or
not
call
cs
ins
add
stos
mov
scas
push
es
and
and
lods
and
test
and
movs
pop
mov
xchg
rcr
repz
xchg
or
je
adc
lods
pusha
lds
bnd
pop
sub
test
clc
pop
sbb
sbb
retf
xor
pop
jbe
mov
mov
push
push
xchg
outs
dec
add
lahf
mov
scas
cmp
adc
mul
in
push
xor
or
cmp
cli
jg
aas
jmp
mov
and
sbb
or
or
sub
int3
add
repz
jge
fadd
jnp
popf
cmps
leave
sbb
(bad)
fstp
add
data16
inc
and
mov
inc
jecxz
mov
dec
and
jmp
test
ds
aas
or
mov
loope
inc
mov
or
ficomp
fcomp
test
pusha
ins
bound
mov
js
(bad)
retf
aad
cli
xchg
jbe
sahf
lock
cli
movs
jnp
lea
jb
pushf
pusha
push
ret
xchg
pop
pop
stos
push
int
mov
in
je
(bad)
add
sbb
lahf
stc
push
mov
ret
std
jo
std
xchg
mov
cli
mov
test
mov
enter
mov
dec
cwde
xor
dec
cwde
push
xor
mov
inc
jmp
out
imul
fidiv
loopne
or
sbb
sub
fwait
and
popf
add
xor
inc
pop
jmp
jp
mov
movaps
jmp
xor
outs
cdq
repnz
in
mov
shr
mov
mov
into
or
add
int
or
mov
inc
outs
ins
push
pop
ret
inc
call
sub
adc
sub
fld
push
lds
pop
loope
cmps
add
pop
lds
iret
mov
call
(bad)
jmp
loope
in
mov
sbb
outs
or
out
fdiv
add
arpl
jp
mov
cmp
adc
mov
and
jo
inc
(bad)
retf
jne
mov
mov
lods
out
add
mov
mov
mov
nop
(bad)
imul
fstp
dec
pushf
mov
enter
jno
xor
mov
ror
dec
je
xor
mov
(bad)
cmp
out
sbb
scas
ins
cmp
xchg
lds
pop
mov
sbb
or
out
inc
push
das
mov
fwait
and
scas
xor
lods
neg
psubsw
add
loopne
stc
add
dec
jnp
jg
sbb
repz
or
sbb
xchg
sti
mov
add
adc
dec
or
ins
lahf
add
retf
inc
dec
mov
loope
push
aaa
sbb
dec
adc
or
mov
cli
leave
push
add
adc
mov
ss
dec
cmp
jbe
xchg
cmc
inc
xor
mov
xor
aaa
jl
mov
or
out
push
or
pusha
lea
jne
pusha
mov
cwde
lea
setne
mov
lahf
mov
pushf
pushf
lea
pushf
call
call
rcl
clc
aad
rol
mov
bsr
sub
setnp
btr
push
neg
shld
push
jmp
mov
mov
xchg
popa
lahf
push
sub
jbe
mov
pop
lds
push
pop
daa
inc
aam
xchg
iret
adc
fs
pop
loop
push
scas
aam
call
dec
inc
popf
inc
jb
mov
(bad)
push
adc
mov
in
jae
adc
sbb
rcl
xor
jnp
lahf
stos
jecxz
aam
jl
hlt
mov
or
or
xlat
inc
into
scas
jbe
pusha
xchg
daa
sar
jmp
pop
lahf
mov
loop
not
jl
mov
mov
add
ss
mov
(bad)
inc
cwde
push
into
mov
outs
mov
loop
push
scas
or
add
adc
inc
pop
cmp
jmp
ins
or
mov
push
xchg
outs
mov
sahf
in
xchg
mov
inc
and
retfw
or
jmp
add
btr
mov
pusha
stc
cmc
pusha
cmp
push
mov
mov
call
outs
stos
push
push
mov
in
sub
in
jbe
add
outs
nop
mov
jle
sub
add
mov
fimul
aam
xchg
outs
adc
adc
fadd
xor
enter
push
or
jae
or
pop
ret
cmp
jne
pop
in
ret
push
sub
in
add
inc
test
in
adc
push
jnp
not
jb
adc
(bad)
ds
out
or
push
cmp
mov
dec
das
fistp
xor
daa
cdq
cmps
mov
push
test
in
fdiv
add
or
in
arpl
and
xchg
stc
jmp
lea
jb
stc
test
stc
bt
cmp
push
pusha
lea
jne
xor
shl
mov
cmc
bt
add
call
pushf
imul
mov
call
rol
test
psubsw
push
add
(bad)
xor
push
pop
mov
mov
dec
mov
(bad)
and
js
jecxz
ins
jns
ins
jo
dec
jmp
push
inc
add
mov
sub
inc
and
mov
pop
jmp
add
mov
xlat
jp
mov
ficom
xchg
push
popf
psubsw
cmp
add
stos
mov
pop
mov
movs
fisttp
clc
stc
jg
adc
imul
jae
mov
sahf
mov
dec
xchg
pop
jo
loopne
xor
pop
loop
inc
popf
sar
into
jb
or
call
jo
sbb
fld
cmp
dec
dec
push
push
movs
into
mov
xchg
repz
push
add
bswap
jo
outs
add
scas
das
or
shr
push
cmc
outs
retf
xor
pop
cmp
push
xor
sub
movs
mov
test
rcr
into
sti
bound
push
shr
ret
or
xchg
sub
mov
cli
cwde
shl
jne
xchg
out
jno
pop
xchg
add
inc
movs
ret
mov
adc
xchg
aam
jae
xor
pmullw
jae
sub
jae
dec
mov
xchg
lods
into
outs
xchg
aaa
out
imul
jnp
xchg
fs
jecxz
xlat
xchg
fild
push
inc
dec
xchg
mov
cmp
neg
pop
xchg
inc
(bad)
les
xchg
in
sub
and
pop
shr
pop
cld
jns
arpl
pop
arpl
loope
lock
data16
dec
inc
js
mov
pushf
xchg
add
jle
ficom
adc
(bad)
dec
in
sbb
lods
pop
inc
lods
jl
inc
call
fs
adc
mov
fs
call
xchg
mov
fs
cmp
gs
cmp
dec
loopne
fwait
xor
movs
fbstp
rcr
mov
int
out
mov
dec
test
ins
or
or
outs
pop
jnp
shr
iret
jns
out
iret
or
movs
mov
xchg
retf
xchg
push
cli
mov
xor
sub
(bad)
(bad)
and
retf
sbb
adc
cmp
xor
mov
mov
dec
pushf
ins
pop
int3
stos
enter
cwde
loope
dec
cmp
and
or
and
aas
push
pop
sub
mov
xor
test
lahf
cmp
or
pop
jb
inc
ins
inc
in
test
mov
lock
jb
loop
ins
or
push
xchg
inc
iret
ja
mov
sahf
call
sbb
dec
(bad)
es
sub
jmp
popa
push
pop
mov
mov
dec
inc
and
aaa
lds
dec
or
push
retf
in
mov
and
mov
sbb
lods
scas
jl
sbb
xor
mov
xchg
jnp
imul
mov
cmp
xor
icebp
sti
icebp
xchg
xchg
jae
test
xchg
add
push
mov
idiv
pushf
outs
push
cs
std
cmp
cdq
cmp
std
xchg
(bad)
push
sti
cs
sahf
adc
pop
std
icebp
mov
pop
scas
mov
int
ficomp
(bad)
dec
push
and
(bad)
pop
mov
inc
and
or
xor
inc
xchg
ins
lahf
inc
dec
dec
pop
push
popf
cmp
mov
cmp
ds
pop
je
or
out
mov
inc
not
pushf
inc
adc
cmc
clc
xor
xchg
push
daa
xadd
bswap
mov
shl
mov
push
test
mov
shl
add
inc
clc
mov
cmp
jmp
clc
dec
rcl
jbe
in
outs
ss
(bad)
loopne
call
mov
mov
jge
jl
daa
and
es
sahf
adc
xchg
or
pop
fwait
xchg
pusha
idiv
sub
aaa
mov
cmps
mov
je
ins
repnz
mov
add
cmps
cdq
xor
inc
stos
mov
fidivr
enter
call
jmp
rcl
pop
push
or
inc
ret
push
push
outs
scas
mov
mov
in
xchg
cwde
jmp
int3
data16
pop
imul
test
cmp
(bad)
or
push
sub
jp
mov
aaa
sbb
cli
adc
and
scas
test
push
in
in
or
out
retf
enter
and
call
and
push
mov
rcr
mov
out
sar
shl
sti
xchg
retf
out
push
mov
call
xor
imul
or
pop
shl
retf
cdq
push
dec
clc
(bad)
clc
pop
mov
pop
or
add
into
(bad)
push
mov
lahf
fidivr
mov
xor
inc
push
ret
jbe
add
je
div
shl
dec
test
icebp
out
in
mov
xor
jmp
mov
xor
cmp
dec
cmp
les
inc
sti
fwait
mov
into
aad
mov
add
jmp
hlt
mov
cld
sbb
fwait
push
repz
lds
scas
pusha
stos
xor
cdq
or
in
rcr
pushf
xchg
not
call
inc
mov
(bad)
lea
(bad)
cmps
stc
push
popa
adc
lds
outs
(bad)
leave
and
mov
xchg
jge
fwait
pop
mov
mov
xor
pop
mov
fdiv
cmp
pop
aam
or
mov
inc
cmps
dec
adc
mul
shr
pop
rcr
aas
in
dec
push
xlat
mov
cmps
lods
jge
neg
mov
std
xor
nop
xor
dec
add
jg
pop
loop
jb
std
idiv
adc
xor
mov
xor
xlat
and
punpckhwd
inc
push
inc
pushf
sbb
cdq
adc
or
pop
ja
arpl
sahf
fucomp
xchg
mov
xchg
dec
inc
pop
inc
gs
push
mov
dec
scas
(bad)
cld
jns
mov
out
sahf
in
pop
xor
jmp
cmp
pushf
push
call
mov
xor
(bad)
fdivr
xchg
call
adc
sti
sub
aam
inc
dec
mov
mov
push
xor
movs
ss
loop
push
mov
leave
push
sub
xlat
movs
shl
fst
test
in
add
icebp
(bad)
cmp
pop
mov
mov
pop
je
pop
pusha
dec
dec
rcr
pop
pop
cmps
fsubp
test
mov
or
pop
in
cmp
or
call
sahf
in
xchg
jge
jl
or
mov
rol
or
pop
pusha
mov
cwde
mov
mov
sub
mov
mov
dec
sbb
sahf
inc
xchg
outs
mov
mov
pusha
jnp
jmp
add
imul
call
std
xor
daa
arpl
mov
push
push
jae
jecxz
sbb
daa
mov
pop
pop
in
xchg
or
cwde
mov
popf
jmp
add
pop
cmc
ins
shr
ret
ins
or
jecxz
jmp
or
add
ret
add
shl
cmp
cmp
adc
imul
adc
test
jl
push
sbb
cwde
lods
xor
push
lods
xchg
ins
cwde
cmp
or
test
lods
into
(bad)
mov
rcr
mov
adc
pop
add
mov
sub
jle
mov
push
cmp
jb
ja
jmp
ffree
sbb
push
das
(bad)
cmps
mov
mov
sbb
xchg
cmp
xchg
jmp
pop
xchg
mov
clc
sub
push
cmp
das
mov
in
lods
mov
repz
add
fisub
dec
movs
imul
imul
ins
jp
cmps
les
jecxz
dec
jg
adc
mov
inc
mov
stc
pusha
mov
cmp
bt
cmc
mov
sub
stc
cmp
pushf
repnz
jmp
mov
addr16
shl
mov
(bad)
scas
fld
adc
mov
call
sbb
adc
sbb
push
jae
push
dec
add
gs
inc
jb
js
jne
mov
pop
outs
xchg
inc
sbb
adc
push
xor
mov
lahf
shl
jg
fdiv
leave
push
mov
(bad)
xchg
ss
pop
leave
sbb
stc
inc
inc
and
bswap
in
icebp
jbe
mov
lahf
lahf
ins
xchg
inc
call
dec
push
aam
jmp
sbb
(bad)
push
xlat
movs
loope
and
push
sub
sub
push
in
cmp
lahf
leave
add
inc
adc
ss
shl
adc
out
mov
test
or
pop
jae
xchg
iret
sbb
fnstenv
mov
mov
test
in
in
mov
or
js
aam
inc
ret
push
pop
cld
xor
sbb
or
repnz
ss
jp
stos
jmp
mov
dec
inc
imul
mov
xchg
push
cmps
xchg
and
jb
and
(bad)
pop
cmps
or
sub
xchg
xor
jmp
scas
or
jge
in
xor
cmp
icebp
sub
retf
pushf
xchg
add
push
stc
pop
pop
test
pop
enter
push
or
xchg
pop
jo
stc
lods
xor
test
test
lods
jmp
lods
dec
and
imul
mov
or
pusha
fwait
inc
mov
sti
enter
cdq
enter
mov
or
pusha
adc
dec
jo
mov
arpl
fld
fbstp
hlt
cwde
movs
jmp
sub
sahf
loopne
jmp
mov
dec
xor
out
adc
mov
arpl
ss
xor
sub
scas
mov
fild
fbld
pop
mov
cmp
aad
loopne
sub
and
lods
daa
stos
js
jmp
cmp
repnz
out
mov
outs
hlt
aam
jle
pop
in
test
idiv
cmp
lock
shl
mov
dec
and
test
mov
push
push
shr
xchg
cdq
idiv
loop
les
mov
and
push
push
fiadd
or
loope
call
or
pushf
mov
jmp
pushf
pushf
push
dec
mov
jmp
lea
jb
pushf
push
cmp
pushf
lea
jb
jg
bt
push
add
pusha
lea
je
ja
add
pushf
pushf
pushf
pushf
lea
jmp
lea
jae
adc
rcl
mov
shr
push
neg
mov
pusha
cmp
dec
mov
jmp
adc
mov
push
inc
sbb
div
cli
jb
pop
xor
in
jp
sub
nop
jne
or
or
cli
mov
cmp
stos
data16
jg
sbb
fcmovnu
adc
push
cmp
xor
popa
mov
int3
lahf
je
sub
mov
xchg
aas
add
lea
push
sub
dec
in
or
push
and
test
cmp
(bad)
push
mov
in
and
sbb
sahf
data16
push
jge
loopne
(bad)
pop
xchg
dec
call
in
lods
mov
xor
imul
xchg
sub
pop
shr
(bad)
fstp
nop
jne
mul
aaa
push
push
or
pop
mov
fisubr
xchg
es
adc
xchg
adc
xchg
in
retf
jno
cwde
adc
mov
xor
xchg
mul
out
jmp
mov
and
cmp
inc
sbb
std
jge
cwde
push
or
adc
mov
dec
push
icebp
sbb
dec
(bad)
(bad)
mov
lahf
fadd
ret
cmp
in
aas
mov
mov
mov
or
jp
dec
scas
icebp
jl
ins
cli
ror
imul
push
retf
inc
iret
mov
cmp
repnz
sub
ins
dec
inc
cmp
sbb
xor
ins
pop
sub
add
cmps
pushf
add
ins
push
cmps
test
iret
sub
and
cs
inc
shl
shl
cmps
mov
and
sbb
or
sub
xchg
xor
test
sub
adc
cld
ret
mov
gs
mov
and
push
outs
adc
out
add
xor
or
fstp
repnz
add
xchg
add
js
(bad)
call
shl
and
push
lea
je
cmp
clc
cmp
pusha
lea
jne
jnp
pusha
inc
mov
mov
jmp
call
mul
add
stos
push
mov
and
dec
inc
sbb
aaa
push
jbe
push
add
out
(bad)
and
(bad)
movs
nop
push
dec
mov
loopne
push
sbb
add
call
sbb
push
jp
aam
lods
aam
lds
xchg
sbb
xor
cmps
dec
out
cmp
fdiv
inc
ins
push
(bad)
jg
bound
mov
sub
jmp
in
dec
adc
loopne
mov
mov
popf
cmp
push
int3
xchg
pop
mov
adc
inc
arpl
push
test
daa
xchg
aaa
or
mov
sub
mov
pop
jp
clc
cld
arpl
dec
jne
mov
les
test
or
lea
or
(bad)
out
retf
xor
call
fmul
add
mov
cmp
mov
shl
ror
add
shl
mov
pushf
add
mov
mov
pushf
cmc
cmp
call
cmc
call
add
xor
fistp
lea
outs
cmp
dec
xchg
dec
push
sbb
(bad)
test
mov
stos
mov
sub
imul
dec
xchg
pop
xchg
lahf
jns
xor
jae
sub
jmp
enter
arpl
xchg
mov
mov
jnp
leave
loope
mov
and
jo
into
sbb
and
pop
popf
fcomip
rol
ins
aad
xchg
test
loop
mov
cmps
pushf
xchg
mov
or
fs
arpl
(bad)
jmp
sub
enter
xor
jno
cdq
xor
out
fidiv
sar
sar
push
pop
repnz
inc
or
fdivr
sub
xor
(bad)
inc
add
(bad)
call
pusha
mov
or
push
pushf
lea
jne
rol
mov
stc
or
push
lea
je
bswap
pusha
not
mov
lea
not
push
mov
jmp
pusha
pushf
pushf
lea
jne
jmp
push
pusha
lea
je
shl
rol
movzx
xor
shr
sub
mov
bswap
pushf
bt
das
mov
btr
shl
shr
clc
sbb
clc
mov
cmc
bt
pusha
clc
or
call
push
pushf
test
call
pushf
mov
push
pusha
pushf
lea
jge
push
push
pusha
lea
call
push
mov
lea
jle
mov
pushf
mov
lea
jmp
mov
bt
and
sar
clc
mov
pushf
test
jmp
push
mov
shl
es
sub
dec
jb
sub
xor
sar
jns
jb
sbb
and
or
(bad)
repz
adc
jns
(bad)
mov
xchg
outs
mov
sar
cmp
dec
inc
mov
aaa
or
xlat
neg
data16
sbb
pop
retf
iret
call
ja
sbb
daa
ror
ins
shl
xchg
inc
pop
inc
scas
dec
jmp
and
mov
clc
ret
inc
cli
arpl
outs
mov
dec
sub
test
movs
jl
push
in
push
cmp
mov
int
shl
sahf
(bad)
test
mov
test
test
test
not
cmp
call
add
mov
mov
push
pusha
lea
jmp
push
test
jmp
loop
mov
xchg
push
mov
cmps
clc
jg
push
in
sbb
adc
imul
sbb
ins
movs
daa
xchg
xor
cmp
inc
popa
pop
pusha
ins
push
xchg
cmps
rcr
shl
cmp
in
jnp
iret
jmp
dec
nop
and
push
add
cmp
jo
pop
repz
jmp
pusha
xchg
mov
call
cmp
int3
imul
inc
mov
inc
out
pop
mov
stc
pop
mov
adc
mov
outs
pop
mov
inc
aam
and
imul
xlat
xor
or
mov
fld
adc
jecxz
ja
mov
xchg
jmp
movs
dec
fwait
mov
popf
inc
push
xchg
mov
aam
les
xchg
test
into
dec
adc
test
pop
jmp
add
adc
fadd
in
dec
movs
xor
push
jp
add
test
aas
jns
je
xchg
jl
inc
xor
into
pop
test
pusha
push
add
stos
test
push
dec
add
fidiv
cld
cmp
cmp
cmp
pop
addr16
or
sbb
les
push
add
sahf
fdiv
xchg
call
pushf
jmp
lea
je
lea
mov
movsx
lea
pushf
mov
pushf
bswap
pop
not
lea
mov
pushf
lea
call
pushf
call
and
jne
mov
mov
in
cmp
aad
mov
pop
and
add
mov
xchg
cmp
xor
or
and
pop
fild
popa
cmp
ins
xor
pop
add
cmp
pushf
test
mov
fwait
jnp
in
jge
ja
inc
and
add
fcom
fdivr
mov
je
push
fst
mov
(bad)
push
rcr
sub
stos
mov
jnp
stos
ret
(bad)
sub
popf
stos
jo
mov
add
data16
adc
dec
leave
dec
loopne
mov
xchg
push
stos
dec
cmp
pop
add
xlat
cmp
fisttp
test
xchg
add
or
call
add
clc
mov
stc
pushf
test
test
jmp
add
mov
cli
or
inc
or
out
cmps
repz
mov
out
jne
push
adc
inc
test
sbb
mov
inc
sub
dec
loopne
mov
mov
push
pop
das
mov
inc
stos
aad
je
ret
fwait
bound
cmp
cmp
push
ins
or
mov
movs
sbb
adc
adc
mov
jl
jmp
dec
push
pop
pop
lods
mov
dec
inc
(bad)
sahf
out
pop
cmp
sub
dec
std
fiadd
mov
and
arpl
not
mov
pop
xchg
push
push
mov
clc
rcl
pop
ds
das
pop
js
or
aad
retf
call
sahf
sbb
xor
mov
and
jae
test
pop
daa
mov
out
pop
cmc
mov
sahf
pusha
(bad)
and
loopne
sub
out
xchg
xor
shl
or
push
jl
xchg
fld
pop
xchg
cmc
rcr
xchg
in
jns
cs
daa
sbb
les
or
sti
enter
call
mov
xchg
div
(bad)
push
pop
inc
push
inc
stc
inc
xlat
inc
(bad)
std
call
retf
in
cwde
dec
aam
pop
mov
cmps
sahf
pop
or
push
shl
mov
loope
xchg
lahf
cs
jno
or
cli
jg
jl
add
add
cli
test
fsubr
dec
int
jg
das
mov
sahf
aad
les
push
pushf
mov
lea
jb
test
cmp
pusha
pushf
lea
jae
test
bsf
mov
neg
stc
mov
mov
mov
pusha
mov
push
sub
pushf
test
mov
cmc
repnz
mov
pushf
push
mov
lea
jmp
lea
call
pusha
lea
jp
jae
pusha
pusha
mov
push
push
inc
pushf
push
mov
jmp
pusha
lea
je
push
pushf
lea
jmp
aaa
pop
and
cmp
not
jge
call
add
xor
inc
int3
aaa
mov
pop
pop
ins
rcr
sbb
jp
icebp
pop
or
movs
cli
sti
mov
or
pop
sub
es
in
pop
pop
xchg
test
outs
lods
mov
fcom
adc
add
jo
aaa
sbb
(bad)
in
mov
jnp
movs
frstor
xchg
xor
ret
pop
mov
fs
aam
xchg
mov
retf
addr16
mov
sub
cwde
(bad)
jmp
addr16
xchg
hlt
or
jecxz
mov
jp
push
movs
pop
arpl
add
mov
mov
outs
imul
mov
rcl
sub
mov
or
aam
icebp
mov
push
lea
jae
test
test
pushf
cmp
add
mov
pusha
mov
pushf
push
lea
jmp
call
(bad)
or
test
sbb
rep
movs
cmp
inc
push
cmps
stc
jecxz
cwde
in
scas
jp
loope
jmp
stos
cmp
jns
in
adc
add
push
cdq
mov
jbe
jo
int
mov
dec
jbe
idiv
and
(bad)
mov
fs
push
aad
cli
leave
xchg
loopne
int3
mov
cs
add
cmp
push
push
jo
mov
ja
cli
cmp
(bad)
fsub
jnp
mov
out
ret
(bad)
jmp
aas
or
sar
push
(bad)
fsubrp
xchg
mov
enter
pop
bswap
lea
pushf
pushf
mov
mov
mov
lahf
not
lea
mov
pushf
mov
jmp
and
pop
pop
xor
adc
jnp
shl
mov
pop
xor
sbb
add
push
das
sar
jge
cwde
mov
adc
or
xor
mov
repz
and
(bad)
fmul
test
xor
push
dec
fiadd
and
adc
mov
loopne
shl
out
aas
sbb
pop
jae
outs
jns
in
mov
outs
sbb
dec
fbstp
inc
ror
retf
int3
sbb
jno
lea
inc
cld
cmp
cmp
sti
pop
push
mov
xchg
mov
leave
mov
rol
mov
fstp
ror
dec
mov
sub
shr
cmp
fist
xchg
test
std
call
xchg
fs
xor
jle
push
dec
ja
imul
mov
jo
cmp
into
ficomp
mov
add
in
aas
cmp
loope
jo
dec
leave
(bad)
mov
xchg
jle
and
push
mov
imul
mov
loopne
pop
xchg
jp
mov
push
xchg
popa
or
aad
movs
(bad)
fst
shld
pop
mov
mov
cdq
cmp
sahf
sar
retf
mov
or
adc
adc
add
or
jmp
add
xchg
or
adc
adc
adc
or
jmp
stc
mov
cmp
call
pushf
lea
je
bswap
jmp
or
mov
ds
sbb
mov
retf
pcmpeqb
mov
pop
or
inc
sbb
cmps
jle
xor
or
xor
fldenv
(bad)
out
(bad)
imul
adc
jmp
jne
xchg
pop
inc
leave
push
repnz
adc
rcr
fnstcw
in
cmps
aaa
mov
sbb
dec
rcr
cmp
jb
jmp
dec
or
movs
jle
jne
push
call
sbb
popf
es
lds
ja
inc
repz
or
xchg
stos
gs
inc
jg
js
mov
(bad)
fdivr
xor
fidivr
scas
xchg
pop
in
xor
mov
es
jae
call
or
cmp
adc
add
dec
js
mov
pop
pop
xchg
sbb
enter
push
or
iret
jecxz
pmuludq
and
je
bt
pushf
cmp
add
jmp
pusha
mov
pushf
lea
je
pushf
mov
mov
mov
lea
jmp
push
dec
cld
cmp
cmp
push
popfw
call
call
push
adc
(bad)
icebp
inc
retf
xlat
ss
add
hlt
popa
inc
ds
inc
es
xchg
fistp
jmp
fwait
xor
mov
cmp
push
mov
imul
sub
nop
pop
jmp
sti
and
dec
push
mov
test
sub
add
retf
sub
fsubr
test
retf
dec
add
add
test
mov
rol
in
out
mov
sbb
inc
into
cmps
or
fstp
pop
cli
mov
push
jno
dec
aaa
aad
out
xor
jbe
cmp
pop
or
xchg
xlat
push
retf
loop
in
jno
fist
(bad)
inc
xchg
add
or
iret
cmp
int
pushf
lea
jg
pushf
lea
je
pushf
adc
mov
push
mov
pushf
lea
jmp
(bad)
fild
cmp
ficomp
out
add
jns
fisub
push
and
sbb
push
mov
inc
cmps
sub
cmp
dec
shl
xchg
dec
repz
xor
aas
cwde
dec
dec
cmp
les
repz
sahf
fwait
lods
std
sbb
xor
dec
sbb
lock
cdq
sub
push
pushf
mov
sub
int
lods
iret
fnstenv
pop
movs
shl
cmp
or
popa
dec
lds
jae
push
iret
mov
add
cld
jbe
adc
mov
seta
mov
fdiv
ret
push
jb
push
mov
xchg
div
(bad)
pop
shr
retf
sbb
mov
xchg
dec
retf
pop
ds
pop
jns
inc
pop
dec
nop
jl
jnp
mov
jnp
dec
push
lock
popf
mov
icebp
aaa
test
push
test
inc
retf
inc
cmp
adc
jl
daa
pop
add
xlat
xor
xchg
adc
push
jno
mov
xchg
adc
jbe
jne
pop
inc
push
mov
iret
psubw
add
cmp
push
leave
pop
test
xchg
and
mov
mov
loop
mov
ret
or
int3
nop
imul
pop
test
bt
test
cmp
push
pusha
push
lea
ja
clc
neg
cmp
sub
bsf
shr
add
jmp
pop
loop
test
cmp
cli
inc
call
neg
ret
outs
push
div
pusha
inc
(bad)
fcomi
popa
sub
retf
pop
dec
push
push
fist
add
push
add
push
xchg
dec
js
lods
or
and
jge
lods
cmc
punpckhwd
add
dec
mov
adc
sbb
xchg
stos
dec
cmp
loopne
aaa
mov
mov
out
outs
dec
lods
stos
xchg
sbb
or
cs
les
rol
jl
mov
cld
push
aaa
push
pop
and
mov
pop
inc
push
cld
mov
xchg
and
cli
or
int3
cmp
iret
mov
add
push
jmp
and
jle
jmp
sbb
mov
dec
rcl
sar
das
lods
push
loope
bnd
loope
repnz
pop
out
mov
ret
gs
mov
inc
lahf
pop
mov
repnz
mov
scas
call
out
aaa
aas
lea
sar
inc
push
inc
ret
or
loop
jl
fwait
sub
push
in
add
ins
cli
(bad)
push
push
scas
inc
push
dec
xchg
mov
ret
sbb
scas
xchg
and
or
cmps
daa
adc
pop
fld
je
mov
call
jmp
addr16
loopne
push
xchg
sbb
mov
jg
(bad)
scas
mov
adc
cmc
push
push
arpl
rcr
mov
je
push
and
jnp
sbb
inc
jne
or
retf
fstp
cld
push
lea
je
jae
pusha
add
pushf
lea
jnp
push
mov
push
pushf
mov
lea
jmp
retf
test
jns
xchg
cmps
popf
(bad)
sbb
xchg
cmp
scas
addr16
push
mov
mov
mov
enter
das
jecxz
adc
push
sub
pop
repz
mov
aam
(bad)
pop
aaa
jno
or
mov
and
arpl
aam
xchg
das
xor
sbb
test
add
data16
dec
pushf
mov
aam
pop
popa
pop
cmp
bound
mov
pop
jge
dec
aas
callw
mov
adc
lahf
std
mov
sar
pop
jg
dec
adc
in
adc
jb
popa
add
ror
push
jmp
sbb
sub
or
xchg
stos
gs
cmps
shr
or
mov
jno
sbb
leave
xchg
retf
(bad)
mov
and
push
mov
inc
push
sub
mov
xor
inc
ins
dec
fdiv
repz
push
stos
aad
scas
inc
sar
outs
sub
mov
in
data16
test
add
jg
or
xchg
xor
or
mov
aam
movs
sub
fimul
jl
dec
sar
dec
sub
xor
rcr
inc
adc
xchg
ds
inc
loope
std
mov
sti
jmp
jo
popf
int
jnp
sub
out
mov
fld
ret
in
mov
sbb
div
inc
dec
sub
inc
adc
sahf
leave
in
enter
test
mov
clc
cmp
call
xchg
fadd
sbb
addr16
mov
stos
inc
jmp
sbb
gs
retf
lods
in
add
adc
cli
jae
(bad)
nop
rol
out
pop
js
push
jno
daa
mov
xchg
xor
dec
movs
pop
int
mov
scas
push
(bad)
not
cmp
or
sub
mov
leave
outs
cmp
jnp
add
loope
pop
sar
mov
inc
mov
mov
stc
xchg
arpl
fld
ror
dec
jnp
fisttp
ret
pop
and
add
pop
pop
outs
add
push
jns
ja
and
icebp
out
outs
adc
or
or
leave
adc
mov
inc
pushf
mov
(bad)
cmp
and
imul
pusha
lahf
jg
add
or
add
movq
test
lods
add
add
mov
ins
addr16
xchg
inc
or
xor
cmp
mov
push
mov
ja
rcl
pop
xor
mov
ret
sub
push
sub
mov
scas
inc
jl
jne
pop
lahf
std
jecxz
xchg
loope
fld
test
xchg
fistp
push
mov
das
fld
inc
sbb
fcom
xor
mov
and
add
out
mov
pusha
mov
sub
sbb
retf
cmp
js
jb
popf
(bad)
inc
mov
imul
fistp
push
icebp
xlat
fadd
fstp
push
arpl
pop
xchg
dec
shl
(bad)
jl
gs
cmp
mov
jae
sub
call
ret
mov
fmul
mov
(bad)
jecxz
lods
call
mov
test
shl
lock
xor
rcr
in
loope
push
cmp
and
xor
into
popa
jl
add
fbld
dec
jmp
add
cmp
mov
std
out
imul
or
mov
jecxz
jbe
sbb
loopne
xchg
outs
std
dec
or
hlt
out
retf
adc
mov
imul
mov
(bad)
lock
das
rcl
iret
mov
aaa
shl
xor
(bad)
loope
mov
jne
push
cs
mov
mov
dec
or
scas
mov
idiv
movs
mov
dec
mov
sahf
adc
jnp
in
aas
jle
xchg
push
pop
jecxz
cwde
push
push
int
shl
div
xchg
or
fistp
and
ins
(bad)
in
push
aaa
gs
dec
(bad)
dec
int3
fwait
loopne
or
popa
xor
ret
(bad)
leave
loope
in
and
jl
ret
scas
aaa
xchg
aam
retf
add
iret
cmp
dec
repnz
jge
mov
loope
or
mov
inc
bound
gs
mov
lahf
adc
call
mov
nop
jmp
arpl
inc
gs
in
cmp
mov
test
pop
pop
push
in
xor
aaa
adc
cmp
sbb
inc
retf
fimul
add
xor
mov
call
mov
sub
nop
clc
and
mov
hlt
cmp
aad
xchg
je
sbb
ffreep
xchg
or
dec
xchg
nop
sub
sub
adc
dec
rcr
test
xor
fcomp
sub
out
xor
sbb
push
inc
rcl
rol
(bad)
mov
dec
xor
push
shl
out
cmc
sub
pusha
push
out
xchg
loopne
popf
xchg
mov
push
shl
xor
or
mov
test
iret
adc
xchg
stc
retf
imul
adc
inc
mov
mov
add
jg
out
ins
test
not
inc
ss
lods
xchg
movs
jg
das
sbb
and
mov
jmp
stos
sbb
aaa
mov
adc
int
rol
jnp
mov
imul
in
sbb
in
push
ja
adc
jo
mov
cmps
int
or
ret
jecxz
xchg
out
out
sti
push
sub
mov
sbb
jle
popa
cmp
xchg
mov
shl
or
cmps
mov
jb
sbb
jmp
sahf
les
mov
pusha
lea
jne
pusha
mov
stos
pushf
pusha
lea
jmp
not
call
mov
not
not
setp
mov
jmp
clc
sub
cmc
test
cmp
jmp
ins
in
mov
arpl
mov
(bad)
mov
or
inc
cmp
xchg
add
jbe
ss
adc
movs
sbb
(bad)
sahf
inc
xlat
dec
dec
lods
add
adc
mov
mov
pop
sahf
mov
int
cmps
pop
or
setg
retf
sbb
mul
mov
inc
lahf
cs
dec
pop
call
dec
retf
(bad)
fmul
shl
cwde
sahf
mov
das
mov
mov
fld
push
in
jo
repz
push
jb
or
idiv
test
xchg
int
jo
cmp
pop
sbb
mov
movs
xchg
xor
ds
cli
out
repnz
sbb
jmp
mul
cli
or
les
pusha
sub
fisttp
scas
mov
mov
sub
lock
loope
inc
mov
sti
into
out
mov
cmp
movs
popa
and
cmps
out
xor
mov
in
sbb
inc
leave
cmps
in
into
daa
jp
sub
push
jl
stos
pop
test
stc
fwait
in
sbb
dec
mov
sbb
pop
outs
or
data16
cmps
imul
sub
cwde
mov
div
push
mov
pop
xchg
xor
add
aam
cs
push
dec
sahf
int3
or
push
jmp
or
xchg
mov
push
sub
std
push
cmp
mov
cmp
or
cmp
sbb
mov
stc
into
adc
ins
nop
aaa
and
cli
loopne
mov
push
add
sub
cmp
pushf
hlt
cmps
push
jno
ins
sub
(bad)
jl
pop
lds
xchg
into
jmp
ds
sahf
ret
mov
clc
(bad)
push
add
or
pop
arpl
xchg
mov
or
jmp
push
rcr
inc
or
push
lods
retf
ret
mov
or
inc
cmps
inc
push
and
pop
sbb
inc
jno
iret
ror
pop
xchg
out
les
ret
not
fisttp
ins
mov
push
(bad)
jno
xchg
sbb
dec
mov
js
sub
mov
mov
ret
mov
inc
adc
imul
pop
mov
cmp
jg
add
cmp
mov
xchg
or
pop
sub
sub
loope
jmp
sbb
inc
pop
shr
(bad)
mov
faddp
syscall
add
pusha
push
popa
xchg
scas
mov
mov
or
ret
mov
push
dec
push
fst
out
dec
sub
loopne
push
jg
sub
les
add
xchg
cwde
xchg
mov
xchg
movs
mov
cmp
mov
ror
push
fild
inc
jbe
inc
rol
jno
xchg
jbe
call
jmp
pusha
imul
adc
mov
dec
loopne
lock
out
les
add
cwde
sbb
mov
adc
and
jns
sahf
sar
or
pusha
pusha
jmp
xchg
mov
lea
jmp
add
inc
js
ins
ins
outs
arpl
gs
outs
outs
ins
add
xor
jmp
add
(bad)
movd
mov
sbb
push
or
inc
call
in
push
add
gs
mov
(bad)
jmp
ror
or
mov
(bad)
and
adc
cmps
sbb
xchg
and
ret
leave
ins
out
sub
mov
dec
mov
xor
lahf
inc
addr16
push
and
pusha
call
xchg
or
shl
(bad)
xor
push
loop
mov
jp
xor
outs
inc
mov
jns
push
iret
sub
mov
frstor
pop
pcmpeqb
add
retf
(bad)
jno
cdq
adc
adc
into
mov
shr
add
fdiv
fcomi
xor
mov
ds
sbb
xor
std
enter
enter
xchg
enter
out
sub
or
enter
repnz
rcr
jg
mov
xor
and
pop
fwait
jmp
cli
ret
adc
push
hlt
mov
rol
mov
dec
adc
inc
(bad)
in
fld
sti
pop
(bad)
adc
pushf
sbb
and
mov
mov
mov
add
clc
das
shl
inc
lock
add
enter
jb
adc
out
xor
mov
aaa
or
rcr
jl
push
mov
push
jo
and
dec
sbb
fwait
mov
push
enter
xchg
pop
or
dec
dec
dec
add
mov
xchg
rol
mov
int3
sub
bound
inc
mov
jmp
xchg
pusha
xchg
movs
cmp
xchg
dec
xor
lods
mov
dec
cmp
mov
xchg
dec
pop
xor
add
sbb
lea
(bad)
ror
data16
or
push
pop
mov
cwde
sbb
ds
mov
test
sar
sub
test
movs
les
sbb
pop
pop
and
xor
js
cld
dec
pop
test
push
or
and
mov
mov
fcomp
sub
mov
dec
inc
dec
pop
or
inc
dec
pop
sbb
or
and
cwde
mov
and
or
mov
inc
movaps
mov
sub
in
pop
lods
mov
enter
test
dec
jo
lods
rol
and
add
push
pop
sbb
js
and
test
fcmovne
xchg
clc
ret
inc
fcomp
adc
aam
xlat
xchg
inc
add
loopne
fld
aas
and
fiadd
jl
and
jb
retf
call
popf
iret
inc
cmp
pusha
sbb
xlat
sub
ins
cmp
dec
xchg
add
jmp
inc
popa
aad
fdivr
mov
mov
and
fbstp
push
sub
ins
fld
jb
shl
xlat
mov
shl
fistp
mov
js
dec
sub
sbb
out
pop
shl
and
ss
retf
pop
fadd
dec
pusha
fcmovb
mov
mov
mov
sbb
sub
pop
into
fdivr
pusha
dec
aad
mov
mov
adc
inc
mov
and
inc
and
pop
sub
dec
scas
xchg
aas
inc
sbb
iret
ret
or
fcomp
stos
(bad)
xor
jmp
out
fbld
cmps
push
js
sbb
shl
in
adc
xor
sahf
cmp
sbb
loopne
mov
(bad)
ror
stos
lock
out
rol
rcl
mov
jmp
lock
rcr
rcl
div
adc
add
push
fnstenv
out
stos
xor
sub
out
std
jo
pop
cmp
(bad)
je
movs
popf
(bad)
ror
iret
pop
pop
(bad)
js
adc
mov
int3
fild
fisttp
adc
sbb
aam
jmp
jp
add
rcl
inc
clc
xor
cld
xor
aas
cmp
jmp
dec
enter
sub
mov
in
cmp
mov
(bad)
fmul
inc
xchg
fld
mov
inc
mov
int3
add
cmc
cmp
mov
pop
jmp
repz
adc
fsub
cmp
sahf
js
mov
pop
(bad)
sahf
adc
mov
loopne
cmp
dec
adc
mov
xor
or
adc
leave
enter
repnz
ds
sub
xchg
xor
rcr
fimul
add
xchg
cmp
or
adc
lock
int
leave
int3
dec
inc
ss
dec
(bad)
sbb
cmc
(bad)
movs
seta
pop
jmp
cmp
dec
inc
push
jl
fist
cmp
(bad)
inc
fcom
dec
and
outs
retf
sar
into
leave
(bad)
pop
fisub
imul
ret
pop
shr
xchg
les
or
pop
movs
add
sub
pop
or
nop
xor
add
adc
retf
out
jp
scas
sti
sub
fwait
(bad)
jge
inc
xlat
jle
js
fmulp
ficomp
mov
in
scas
mov
mov
(bad)
mov
adc
or
lods
cmp
add
fisubr
or
push
lods
add
xchg
(bad)
frstor
bound
(bad)
stc
pop
xlat
jns
clc
mov
sub
pusha
aam
adc
xor
out
mov
xchg
out
sub
loopne
ins
gs
aaa
dec
aas
out
enter
ret
rcr
sub
leavew
fadd
mov
sub
cmp
les
mov
add
jp
inc
add
add
ss
not
sub
call
mov
inc
push
pop
fild
das
add
(bad)
mov
cdq
mov
fs
jge
fcmovne
dec
aas
int3
xlat
jmp
sbb
fbld
push
leave
jecxz
daa
add
ins
loopne
pop
iret
mov
and
fstp
inc
cwde
shl
pop
sbb
mov
push
adc
mov
push
int
and
push
mov
pop
inc
fistp
pusha
mov
into
out
stos
mov
cmp
push
jae
mov
cmp
inc
xor
fdivr
xor
sbb
sbb
inc
jns
push
or
inc
or
fdivr
in
inc
int3
mov
jne
mov
fwait
xlat
jae
mov
js
inc
daa
into
push
fst
data16
(bad)
jne
lods
mov
out
into
mov
push
cmc
push
(bad)
popf
xor
adc
retf
inc
fisubr
call
adc
aas
leave
ficomp
test
or
sub
jbe
(bad)
sti
jb
sbb
(bad)
cmp
shr
fldcw
add
xor
xchg
fnsave
inc
popf
loope
sub
xchg
and
jmp
lods
into
(bad)
fbld
pop
push
mov
out
mov
(bad)
jae
cs
js
(bad)
outs
pusha
fisttp
inc
cs
fstp
lds
mov
mov
sbb
stos
xor
mov
cmp
nop
jge
ret
or
mov
sub
sub
lds
sbb
ja
xor
jbe
(bad)
dec
inc
fbld
ror
imul
ss
pop
push
addr16
mov
inc
in
cmp
outs
loopne
mov
fidivr
add
daa
(bad)
lock
push
test
sbb
and
ss
(bad)
neg
rcr
cmps
js
jbe
mov
cs
repz
cli
fiadd
mov
pop
adc
ja
push
adc
push
pop
mov
(bad)
jl
xlat
iret
pop
xchg
inc
add
sub
sbb
clc
or
cmp
push
sti
xchg
xchg
(bad)
leave
inc
xor
pop
dec
mov
push
movs
mov
add
(bad)
fiadd
loop
cmp
mov
loopne
mov
sbb
loopne
cmp
aad
push
sub
add
pop
pop
and
dec
xchg
xor
fistp
rcr
into
(bad)
adc
pop
loop
arpl
in
mov
ret
mov
jecxz
and
cmp
aas
sbb
sub
rol
and
cmp
pop
pop
rcl
loopne
rol
addr16
sbb
iret
es
icebp
inc
shl
adc
(bad)
mov
mov
mov
lock
mov
mov
loopne
ret
(bad)
rcr
(bad)
add
leave
xchg
inc
ins
jb
ja
adc
fsub
out
adc
sub
mov
stc
inc
xchg
sub
iret
push
xchg
jbe
(bad)
mov
add
out
arpl
fiadd
or
pop
xlat
pop
inc
loope
std
mov
fmul
lock
in
addr16
adc
inc
xor
imul
mov
inc
shl
das
sahf
fwait
adc
mov
jmp
out
xlat
cdq
sbb
movs
sub
dec
cmp
lods
push
sar
movs
dec
jb
or
pop
out
inc
fdiv
add
popa
ja
imul
aad
mov
mov
(bad)
fadd
inc
pop
ret
mov
(bad)
mov
cdq
retf
movs
rol
or
inc
(bad)
sti
sbb
cmps
push
jl
dec
inc
aam
mov
int3
shl
mov
cmp
inc
pop
pop
rol
xor
pop
mov
xlat
cwde
shl
mov
adc
ror
or
jl
xor
cmp
cwde
add
xchg
sar
fs
xor
and
jp
ins
and
inc
rcr
sub
enter
pop
retf
add
mov
jb
mov
cmp
add
xor
dec
lds
stc
and
nop
adc
hlt
and
pop
in
jo
shl
jmp
mov
xor
adc
xlat
repnz
dec
test
dec
mov
mov
adc
jbe
test
pop
mov
jmp
mov
sahf
xor
js
inc
adc
clc
cmp
int3
add
pushf
xchg
inc
jns
adc
jns
shl
icebp
fbld
sub
sub
call
mov
out
test
aas
aaa
(bad)
fnsave
adc
adc
mov
cmc
pop
sbb
pusha
mov
push
and
inc
test
mov
cmp
aas
inc
or
mov
adc
rcr
jl
mov
ret
shl
adc
sbb
aas
cmp
ja
adc
mov
jecxz
lods
test
jb
sbb
cmp
push
cmp
cdq
pushf
cmp
lods
in
cmp
and
cmp
inc
(bad)
jb
mov
clc
xchg
out
fwait
ss
sub
mov
xchg
mov
repnz
jp
mov
xor
bound
std
(bad)
jmp
sbb
icebp
jno
and
rcr
ins
sbb
and
mov
or
(bad)
int
xor
fdivr
retf
dec
cmps
pop
or
push
push
aad
push
sub
enter
sbb
pop
ss
arpl
inc
mov
ret
retf
inc
(bad)
(bad)
outs
pop
sub
dec
or
mov
jo
fbld
cmp
fsubr
test
jg
inc
adc
popf
enter
jae
mov
stos
sbb
and
jne
mov
mov
add
shr
mov
and
fiadd
(bad)
out
and
xlat
ja
test
pop
jmp
dec
push
out
xchg
neg
jge
or
sub
cmp
fistp
mov
inc
cmp
pop
out
aas
add
(bad)
ins
test
mov
sub
js
adc
aad
jmp
pop
or
fistp
or
pop
leave
adc
lock
inc
mov
jl
clc
mov
pop
xchg
iret
or
jae
lods
rcr
push
fsub
xchg
add
iret
sub
cdq
(bad)
xor
dec
fadd
pop
cli
lds
mov
retf
loopne
fsub
out
rcr
iret
inc
add
mov
shl
add
push
mov
into
xchg
ja
pop
sahf
add
ror
sub
lock
and
(bad)
mov
dec
mov
test
mov
popf
mov
and
scas
(bad)
cli
push
movs
sub
fistp
mov
xor
mov
(bad)
mov
cwde
adc
lock
pushf
call
mov
rcr
cmp
add
pushf
inc
pop
xchg
cwde
movs
clc
fcomp
repz
fucom
sub
sub
loopne
mov
lds
pop
jmp
inc
aam
lds
mov
retf
xlat
mov
(bad)
std
test
pop
setne
mov
loope
dec
sbb
adc
xor
fisubr
popa
jl
cmp
fistp
cmp
xor
xlat
pusha
mov
mov
js
inc
ja
data16
repz
stos
ss
pushf
mov
adc
xlat
or
mov
sbb
shl
push
shl
sub
fild
test
cmp
pop
inc
add
mov
shl
inc
bound
adc
scas
pusha
sahf
movs
and
pushf
inc
arpl
lock
(bad)
and
mov
adc
xchg
lods
leave
loopne
adc
shl
psrad
inc
push
xchg
jle
adc
out
xor
mov
outs
js
bnd
xor
loopne
lock
mov
(bad)
or
add
sahf
sbb
jmp
adc
call
sti
fisub
out
sbb
aas
jae
lahf
inc
ret
and
out
sbb
leave
cld
jge
mov
inc
mov
mov
add
pusha
dec
rcl
inc
clc
fisttp
xor
sbb
pop
mov
push
iret
jle
mov
call
xor
cmp
inc
ss
jp
sbb
ret
out
jae
ja
cdq
push
push
idiv
jmp
fstp
call
movs
sub
inc
je
fisttp
cmp
xchg
and
dec
sti
sub
or
cmp
mov
hlt
inc
lods
sar
js
xlat
js
pop
cwde
loopne
mov
or
or
leave
pusha
mov
add
add
add
aas
lods
pusha
bound
push
adc
fmulp
jne
sahf
xlat
inc
mov
mov
into
mov
movs
jmp
hlt
or
cmp
xchg
inc
not
xchg
in
rcr
ins
into
add
in
xor
inc
icebp
and
fucomp
scas
test
adc
fdiv
or
push
das
popa
dec
retf
mov
pop
dec
enter
fist
sbb
out
leave
xchg
xchg
pop
inc
pop
add
pusha
fwait
into
inc
rcr
or
sti
in
xchg
mov
push
xchg
pop
iret
or
scas
(bad)
jb
or
or
pushf
fldenv
fild
das
mov
mov
xchg
loopne
jmp
or
inc
jmp
ror
add
fistp
pop
pop
fisttp
jno
adc
sbb
fucomi
icebp
cmp
jb
pusha
mov
mov
jo
js
lods
ror
inc
inc
jne
cmp
popf
jmp
mov
je
add
mov
addr16
or
(bad)
adc
out
mov
mov
push
aad
movs
neg
or
(bad)
mov
push
push
sub
inc
fsubr
pop
xchg
pop
mov
pop
dec
xor
cld
ss
inc
fdiv
and
sbb
cld
mov
lea
ret
into
shr
pop
fistp
dec
cmps
mov
jns
movs
ins
(bad)
sub
jge
or
mov
or
cmps
(bad)
aam
leave
sub
xor
rcr
out
icebp
cmp
loop
das
js
xor
iret
movs
test
aad
das
xlat
lock
mov
xchg
leave
inc
fwait
push
xlat
ja
lock
iret
in
imul
js
fcomp
dec
outs
adc
mov
cwd
dec
cmp
xchg
adc
push
xchg
stos
ret
leave
and
push
(bad)
sub
and
neg
mov
inc
add
adc
call
fimul
jp
aaa
pop
push
in
mov
std
mov
out
xchg
mov
test
mov
xchg
mov
push
js
call
cmp
sbb
fucomip
addr16
push
push
adc
aam
nop
cmps
into
add
imul
ds
ror
out
out
mov
fsubp
bound
and
mov
into
mov
inc
fild
push
aad
mov
dec
jmp
enter
in
add
aas
xor
sbb
shr
retf
pop
std
xchg
call
inc
in
fsub
jmp
mov
out
adc
cmp
push
adc
les
jb
ret
pop
popf
xchg
mov
xor
dec
pop
jb
mov
push
push
pop
out
jmp
or
fadd
loop
add
jle
loopne
push
mov
mov
mov
push
js
adc
jg
pop
fsubr
into
pop
in
lods
jo
pop
pusha
ds
addr16
sub
or
cmp
push
movs
fiadd
jnp
pop
pop
sahf
add
jmp
loopne
out
dec
rcl
leave
cmp
dec
repnz
aaa
cmp
sbb
fsubr
shl
xchg
aam
out
dec
xor
cdq
scas
call
sti
fistp
ds
cmp
sbb
je
xor
enter
into
sahf
ror
les
add
std
and
mov
test
dec
shl
stos
mov
xchg
pushf
dec
mov
xchg
iret
pop
dec
in
inc
xor
loope
stc
ret
pop
xchg
jmp
int3
pop
push
lods
in
mov
out
dec
stos
mov
cwde
popa
pusha
sub
adc
push
pusha
in
idiv
lds
outs
test
cmp
push
gs
jb
scas
pop
aam
loopne
mov
movs
test
pop
out
add
aam
ja
mov
xchg
je
repnz
out
jae
loopne
jmp
push
nop
inc
fbld
push
mov
sub
mov
cmp
or
aam
loop
fild
fwait
jl
push
sub
cmp
retf
std
xchg
loop
sbb
jmp
neg
sub
fistp
stc
cmp
(bad)
xchg
adc
xlat
jae
jo
lea
add
mov
les
inc
xlat
cmp
popf
daa
and
or
scas
iret
sbb
mov
cld
ret
and
mov
push
jbe
js
sbb
adc
pop
(bad)
aam
(bad)
scas
cmc
popa
ja
ret
leave
mov
xor
js
and
jo
jmp
jle
jo
scas
shl
sub
mov
inc
inc
jmp
loop
and
xchg
imul
stos
mov
jl
dec
jg
rcr
loopne
pushf
repz
mov
inc
js
(bad)
shl
push
mov
ins
inc
inc
pop
imul
sar
loop
hlt
sar
xor
or
push
and
sbb
xor
sbb
cs
mov
std
rol
pusha
fild
and
lahf
in
in
loope
ficomp
aam
mov
xchg
test
fadd
(bad)
pushf
movs
jb
push
and
rcr
out
(bad)
call
inc
call
nop
mov
les
xor
mov
das
es
pusha
jle
out
in
loopne
xchg
cld
or
fwait
pop
rol
in
fsubp
xchg
push
cmp
add
adc
mov
jo
out
rcr
sub
ja
pop
xchg
xlat
rol
aam
stc
in
push
enter
test
dec
mov
mov
movs
jl
out
test
call
pop
pop
ficomp
and
and
out
jo
xchg
inc
scas
mov
(bad)
and
cmp
xchg
dec
mov
popf
loopne
inc
lahf
ret
adc
pop
adc
jne
xchg
stos
and
jo
into
outs
(bad)
fimul
pusha
mov
out
lds
into
call
jmp
mov
push
fidiv
and
iret
pusha
mov
sub
and
mov
inc
daa
fisttp
inc
xchg
sbb
dec
mov
ins
fisubr
fdivr
mov
sub
inc
fsub
cmp
jp
sbb
hlt
sub
fcom
loopne
xchg
or
xchg
ins
fistp
mov
xor
mov
call
mov
cmp
mov
mov
inc
nop
leave
cs
cmp
ja
rcr
pusha
jns
and
push
cwde
sub
inc
add
xlat
cld
xor
(bad)
gs
xchg
cmp
stos
addr16
jbe
inc
push
add
jne
and
sub
push
or
push
retf
inc
in
and
jne
int3
pop
xor
out
popf
mov
lea
mov
mov
xor
jbe
inc
and
xor
(bad)
rcr
and
fild
ins
js
iret
repnz
mov
and
inc
sbb
cmp
movs
lock
xchg
sti
ror
(bad)
pop
jecxz
popf
and
mov
and
mov
pop
addr16
movs
sub
arpl
mov
(bad)
cli
cmp
inc
ss
mov
mov
jb
les
out
add
sahf
cmp
and
jnp
mov
pusha
pop
add
jo
shl
lods
daa
cmps
call
adc
arpl
test
jl
mov
mov
mov
pop
mov
loopne
(bad)
aam
sahf
dec
popa
fadd
jl
js
sub
enter
mov
pusha
mov
aad
pushf
lds
lods
jl
sbb
test
daa
in
call
mov
push
or
adc
mov
leave
call
jg
xchg
jb
pop
test
and
mov
push
cld
xor
and
push
int
pop
lahf
cmc
ficom
adc
fist
sub
dec
ror
cli
mov
in
paddusb
xor
div
imul
inc
pop
shl
fstp
pop
out
mov
xchg
cmp
fadd
jg
add
sbb
outs
bound
ret
pop
stos
(bad)
xor
(bad)
or
cs
mov
push
push
aam
jbe
mov
mov
mov
loopne
sti
mov
call
dec
je
mov
leave
sub
inc
dec
cmp
jne
push
sub
xchg
xchg
(bad)
into
inc
jo
jecxz
inc
ret
(bad)
rcl
je
jb
or
jae
aam
dec
mov
sbb
repz
jl
test
les
pop
iret
pushf
fcomp
mov
pop
pusha
imul
adc
loopne
cld
retf
cmp
fmulp
fidivr
fsubr
sub
ins
mov
cmp
mov
inc
xchg
pusha
into
cmp
test
sbb
cwde
les
je
aad
adc
cmp
mov
mov
pop
add
adc
outs
push
shl
pop
dec
ja
fstp
js
jne
pusha
adc
enter
cdq
scas
enter
aad
js
loopne
movs
mov
push
cwde
out
mov
pop
call
push
fcmovbe
mov
rcl
test
or
js
xchg
inc
ds
inc
fadd
bound
push
mov
mov
push
cmp
test
mov
pop
ret
loop
add
pop
and
mul
sar
mov
jb
adc
in
or
xor
mov
push
scas
jo
cmps
dec
xchg
(bad)
fcmovnb
jmp
push
scas
mov
cwde
jle
add
sub
pop
out
aad
int
fild
cs
jg
or
ja
neg
mov
les
idiv
rcl
loopne
call
mov
out
mov
js
popa
pop
ds
pop
cld
jp
push
fisttp
cmp
jb
dec
bound
xchg
aas
cmp
mov
aam
sub
jecxz
dec
jmp
mov
cmp
jns
aaa
enter
iret
push
sahf
dec
pop
retf
dec
lods
add
push
popf
sbb
mov
xor
pushf
shr
out
movs
mov
ficom
out
add
loopne
loope
adc
jge
into
pop
xlat
adc
mov
(bad)
(bad)
cdq
lds
fistp
jl
pop
cmp
stc
enter
das
jb
xor
ds
(bad)
in
mov
sbb
dec
loopne
mov
pop
pop
cmp
das
xor
sub
es
xor
mov
frstor
les
cmp
(bad)
std
inc
outs
jo
and
ds
jmp
loopne
dec
cmp
aam
dec
in
in
and
out
fild
sbb
cmp
iret
pop
cli
jo
pop
jne
push
jb
inc
push
or
imul
push
dec
in
int
test
mov
enter
fcomp
loopne
mov
sbb
add
mov
retf
into
xlat
cld
pop
dec
xor
into
(bad)
fcomp
jnp
adc
sahf
mov
dec
adc
mov
add
jb
in
ficom
out
cwde
into
or
clc
pop
cmp
mul
jbe
rcl
daa
inc
xlat
shl
fsubr
fld
rcr
iret
mov
xor
sub
inc
pop
inc
xchg
and
cld
rcl
cli
cwde
sar
fdivr
stos
add
(bad)
push
xchg
js
popf
pop
xlat
lods
fisubr
jg
xor
inc
aam
out
mov
rol
xor
adc
fld
repz
mov
and
xor
into
sub
ins
retf
lock
lods
jo
faddp
test
lods
rol
ror
int3
cld
push
push
das
sti
stc
les
ins
in
sbb
mov
xor
into
sbb
repnz
sar
cwde
adc
js
jbe
ror
into
pop
movs
sbb
aam
xchg
jmp
(bad)
out
jmp
xchg
push
sbb
or
shr
fcomp
js
(bad)
ficom
cmp
out
dec
fst
sbb
sbb
outs
inc
sahf
sbb
shr
inc
fnstsw
mov
pop
(bad)
jnp
les
cmp
fcomp
int3
and
test
adc
mov
fcom
xor
outs
imul
jg
xchg
out
movs
jb
sbb
xor
mov
jns
mov
(bad)
call
rcr
add
mov
sub
inc
(bad)
xchg
aaa
jle
xor
jp
adc
add
pop
or
aas
sbb
int3
loopne
lds
dec
sbb
hlt
push
fwait
or
mov
or
jl
and
cmp
inc
dec
or
jo
inc
das
stos
cld
dec
sub
jb
inc
xchg
or
fistp
arpl
sub
cmp
leave
pop
dec
push
es
inc
dec
mov
sbb
or
in
int
dec
mov
fbstp
stc
mov
sbb
popa
and
loopne
adc
out
rol
jo
test
in
adc
adc
test
dec
mov
shl
repnz
inc
mov
sub
inc
mov
or
scas
je
(bad)
loopne
or
jne
sub
push
xchg
mov
pop
sbb
sahf
sub
jmp
xchg
dec
aam
or
sbb
inc
fs
mov
mov
fxch
pusha
mov
or
jg
ins
xchg
pop
scas
jmp
pop
add
cmp
inc
(bad)
sbb
inc
mov
mov
fld
push
mov
mov
push
fwait
sub
(bad)
mov
test
ins
add
movs
jle
adc
hlt
sub
xlat
jg
(bad)
jo
cmp
aas
gs
mov
adc
sahf
xor
sub
and
js
dec
inc
jecxz
dec
jecxz
cmp
lahf
push
mov
inc
call
into
loopne
mov
inc
js
(bad)
and
adc
ror
in
pop
pop
add
pushf
ret
cld
push
mov
and
int3
dec
and
loopne
js
cmp
fstp
xchg
xor
rcr
scas
and
arpl
and
(bad)
mov
retf
je
fldcw
sub
push
fwait
push
sti
out
lods
add
das
and
jnp
inc
in
nop
js
mov
rcr
push
or
test
inc
call
cs
call
or
fnsave
push
div
add
loopne
adc
adc
jmp
cmp
add
add
sahf
or
outs
das
push
push
adc
fwait
jge
mov
push
cmp
pop
and
lods
pop
dec
aaa
pop
add
sbb
pop
out
mov
xchg
stc
fwait
loop
lds
xlat
bound
imul
leave
ret
adc
js
mov
xor
leave
dec
cwde
xor
enter
dec
pop
das
mov
neg
inc
test
pop
dec
cdq
js
sahf
push
inc
nop
sar
fistp
mov
cwde
add
or
mov
loopne
cmp
cmps
xor
loopne
push
dec
mov
fidiv
jnp
sbb
ffree
loopne
cmp
ficomp
or
icebp
bound
or
retf
jmp
(bad)
fsub
and
mov
adc
retf
mov
(bad)
repz
into
gs
out
fidiv
xchg
cmp
or
push
stos
add
js
inc
adc
es
pop
ror
fistp
inc
clc
mov
sbb
inc
test
jb
(bad)
fbld
xlat
shl
call
mov
int3
loopne
stos
cmp
dec
ja
pop
test
jo
and
stos
inc
(bad)
dec
inc
fisttp
mov
cmps
mov
mov
push
scas
and
add
sbb
test
lods
mov
imul
ret
xor
add
icebp
les
inc
and
or
push
sub
push
or
sbb
in
or
xor
adc
cmp
mov
loop
into
leave
mov
std
ins
jl
test
sbb
sti
or
(bad)
sub
repnz
xchg
jp
mov
repz
call
xor
aaa
(bad)
push
or
or
jno
push
mov
dec
int
shl
loop
call
dec
jp
je
xor
cmp
lahf
out
ja
inc
xlat
sar
cwde
bound
dec
cmp
pop
adc
sar
xchg
enter
mov
jo
pop
cmp
sub
xchg
hlt
or
mov
mov
mov
or
fild
pop
push
fsub
jg
push
mov
or
movs
sub
pusha
(bad)
or
test
pop
mov
loope
aas
sub
sbb
inc
retf
adc
shl
in
adc
ret
mov
aaa
fdiv
pusha
dec
sbb
fst
pop
cli
push
inc
jne
aaa
and
jl
dec
cmc
sbb
and
shl
push
xchg
int3
jge
fnstcw
movs
pop
pop
xlat
pop
imul
dec
int
gs
mov
cmp
dec
or
shl
imul
ds
or
mov
xchg
jb
lea
mov
in
nop
cmp
les
test
retf
and
and
dec
pusha
sbb
or
(bad)
aaa
fiadd
sub
loopne
or
in
pop
mov
movs
in
pop
push
int
pop
xor
lock
nop
sub
stc
xchg
adc
or
pusha
enter
inc
dec
push
sub
out
into
ret
jecxz
int3
nop
and
hlt
dec
mov
inc
mov
xlat
enter
js
imul
jae
mov
adc
and
std
sbb
ficomp
enter
push
(bad)
bound
fsubr
dec
add
sbb
enter
cmp
jbe
fsub
sub
pusha
jmp
cmp
mov
loopne
sub
call
mov
push
dec
sahf
pop
les
enter
push
push
and
push
or
imul
xor
jge
pop
fldenv
push
imul
adc
leave
mov
inc
pop
lea
jle
test
push
dec
add
adc
pushf
maxps
sbb
xor
pop
sub
retf
in
sub
int3
leave
lea
xchg
adc
sbb
in
fwait
sub
stc
pop
scas
je
popa
pop
mov
push
push
sbb
enter
in
outs
adc
or
cmp
pop
push
push
and
pusha
push
pop
jbe
pop
mov
retf
fbld
adc
adc
jnp
xor
mov
push
pop
out
sbb
loopne
add
pop
and
shl
popa
sti
jo
push
xchg
daa
mov
fs
and
dec
sbb
mov
jmp
mov
mov
jne
sbb
fistp
(bad)
mov
mov
inc
adc
stos
out
mov
mov
shr
les
inc
jmp
adc
lods
dec
sub
aaa
shr
push
outs
test
pop
dec
add
sahf
inc
pop
add
mov
inc
into
loop
(bad)
push
ds
sahf
leave
adc
mov
cld
mov
fiadd
adc
push
cmp
ret
cmp
jns
and
(bad)
pop
adc
xor
mov
(bad)
cdq
sbb
xlat
es
fdivr
std
xor
not
fnstsw
in
adc
push
test
mov
add
in
pusha
pop
inc
es
test
mov
and
fimul
ror
xlat
inc
and
pop
ja
stos
push
stos
xchg
mov
or
dec
stc
inc
xchg
and
or
push
cmp
push
inc
cwde
mov
cmps
inc
pop
inc
jecxz
dec
sbb
lds
push
jnp
pop
jg
mov
pop
or
dec
jecxz
int3
popf
aaa
call
loope
sahf
dec
cli
in
loopne
push
inc
shl
lahf
add
(bad)
retf
mov
mov
fcmovu
pop
sub
loopne
add
mov
sub
cmp
sub
nop
jg
push
dec
loopne
jl
fistp
sbb
imul
test
ins
push
fisub
sbb
mov
(bad)
shl
int3
mov
scas
inc
mov
mov
mov
jg
fiadd
loopne
leave
mov
and
lods
adc
xchg
xlat
xlat
pusha
pop
cwde
outs
xor
idiv
jmp
add
sbb
in
jne
sub
inc
mov
scas
mov
int
fcomp
(bad)
adc
lock
rcr
push
inc
shl
dec
or
int
push
mov
push
das
mov
bswap
jb
dec
enter
pop
push
xor
xchg
fadd
loop
xchg
leave
or
xchg
sub
int3
(bad)
iret
fcomp
cmps
into
add
mov
fdivrp
sbb
mov
mov
xlat
add
mov
adc
dec
xchg
int
cli
loop
inc
hlt
lods
iret
sub
mov
pop
pop
mov
repnz
or
sub
fstp
mov
lods
jo
scas
lahf
pop
js
arpl
mov
and
mov
out
mov
sbb
xchg
imul
xchg
mov
cmp
xchg
push
(bad)
xlat
push
call
shr
jnp
rcr
movs
sbb
int
cmp
cdq
and
sbb
sub
lock
loopne
cmp
add
clc
push
cld
push
lock
jae
dec
mov
rol
jge
inc
inc
scas
loopne
pop
movs
shr
retf
or
xor
push
cwde
mov
mov
xchg
pop
jns
popa
cmp
xlat
push
mov
mov
mov
ffreep
add
popf
pop
add
cmp
dec
xor
movs
cs
cwde
mov
mov
add
fadd
push
fwait
out
inc
cwde
ficomp
retf
jp
lods
int
dec
pop
fcomp
dec
ins
mov
fild
mov
fdivr
dec
out
sbb
cmps
jp
mov
lds
pop
adc
cli
mov
movs
fsubr
mov
jecxz
jbe
shr
mov
xlat
jnp
stc
sub
add
int
jns
push
mov
pop
mov
pop
mov
sub
xor
call
hlt
cli
fdiv
daa
stos
aas
fnsave
sub
outs
loopne
cs
je
xor
retf
shl
inc
mov
push
or
cwde
pop
dec
mov
imul
fisttp
shl
cmc
test
pop
inc
inc
mov
xor
push
add
mov
cmp
mov
jb
adc
cmp
mov
call
inc
mov
cmp
(bad)
fcmovb
retf
fistp
pop
call
aad
loope
cmp
pop
fcom
repnz
mov
cmps
cld
fmul
push
jno
adc
or
sar
add
fdiv
dec
lahf
pushf
push
sti
xor
and
das
push
xor
fs
dec
mov
cmps
aas
dec
dec
hlt
adc
fsubp
mov
icebp
or
pop
fsubr
int3
(bad)
(bad)
xchg
nop
fmul
pop
adc
loope
jle
xor
jns
push
fsubr
not
leave
aad
mov
pop
movs
aaa
daa
dec
mov
idiv
outs
push
xchg
retf
xor
jno
xchg
mov
sbb
hlt
xlat
mov
xchg
jle
fdiv
test
jmp
mov
push
xchg
or
fmul
cli
mov
pop
popf
push
mov
div
cmp
mov
mov
(bad)
data16
leave
push
inc
xchg
sbb
mov
sbb
int
mov
pop
enter
dec
scas
(bad)
mov
mov
in
push
test
adc
(bad)
xlat
xor
call
and
sub
push
pop
loope
push
mov
fadd
mov
sbb
push
mov
cld
mov
shl
sbb
jno
(bad)
call
in
jbe
fcomp
clc
sub
outs
sbb
retf
fcomp
dec
ss
fadd
test
fdiv
sbb
adc
and
(bad)
sbb
hlt
inc
inc
fld
popa
mov
push
clc
fmul
sbb
call
mov
in
sar
iret
dec
ins
add
mov
mov
fsub
xor
push
or
xlat
ret
(bad)
loopne
inc
sti
inc
adc
fsubr
lahf
cmc
loope
pop
mov
or
mov
mov
aaa
dec
xchg
xchg
aas
pop
mov
mov
es
inc
jp
inc
mov
shl
dec
fdiv
mov
lock
xchg
repnz
pop
aad
les
sub
adc
pop
call
mov
fadd
daa
leave
ficom
aam
rcl
push
xchg
fst
mov
movs
outs
rol
push
retf
test
push
lods
aam
push
and
xchg
dec
xchg
loop
or
ret
sbb
cld
sbb
sub
mov
jecxz
fsub
fcmovu
jl
xor
adc
mov
adc
in
fcomp
nop
add
ret
or
mov
fnstsw
lea
xor
push
shl
shr
xlat
shl
lods
ins
imul
cwde
repnz
sub
aas
fdivr
test
lahf
pop
sub
shl
adc
xchg
pop
cmp
xchg
fadd
push
jmp
loope
fsub
pop
mov
mov
stos
fdivr
(bad)
sbb
sbb
jmp
out
(bad)
(bad)
add
jo
push
mov
push
adc
push
xor
mov
fnsave
dec
lock
pop
retf
cmp
cwde
mov
fild
fsubr
(bad)
js
popa
out
cmp
pop
inc
mov
dec
sbb
cwde
adc
push
mov
movups
fadd
loop
ret
retf
pop
popa
inc
pushf
outs
adc
mov
mov
push
scas
out
mov
push
sbb
xchg
inc
cmp
pop
lock
mov
sti
inc
or
fbld
cmps
retf
and
pop
retf
gs
sbb
push
fsubr
sub
xchg
(bad)
call
dec
push
sbb
ret
fsubr
or
sub
stos
movs
sub
jb
inc
pusha
xlat
or
cmp
xor
scas
fdivr
fiadd
jl
mov
pop
cld
addr16
lahf
cli
mov
and
cmp
shl
inc
imul
fucom
cmps
test
test
leave
cmc
(bad)
stos
jns
push
jmp
fld
and
and
sbb
xlat
in
jp
pop
mov
hlt
fsub
or
leave
out
std
pop
fadd
sub
sub
sub
fsubp
std
(bad)
out
loopne
mov
in
sub
test
fdivr
jbe
xlat
fdiv
mov
rol
jmp
cld
loope
and
cmp
adc
and
mov
lods
add
ret
scas
pusha
ds
retf
rol
ja
dec
js
or
mov
mov
mov
sar
cmp
sbb
jae
mov
aaa
xchg
jl
sbb
xlat
sub
lods
pop
in
xchg
data16
or
cmps
int3
mov
fsubr
popa
adc
push
and
dec
mov
lods
int
neg
inc
bound
cld
adc
sti
sbb
test
pop
pop
xor
in
fsubr
(bad)
sub
mov
pop
lahf
retf
xor
scas
sub
jge
je
adc
adc
fdivr
inc
cld
loop
fcomp
and
adc
xchg
aam
call
fdiv
js
or
out
inc
test
push
mov
fistp
(bad)
xchg
push
jmp
add
fwait
clc
mov
imul
adc
lods
hlt
pop
push
cmc
inc
mov
pop
cli
fcomp
stc
dec
pop
ss
inc
sub
and
mov
adc
push
push
jmp
xchg
rcr
dec
add
jg
push
int3
cs
test
(bad)
sbb
fidivr
adc
(bad)
call
ins
push
aaa
mov
or
outs
inc
jmp
cli
std
fdiv
gs
bound
(bad)
jg
pop
addr16
into
jecxz
push
xlat
movs
sub
nop
int
push
cwde
sub
jge
fdivp
jne
jnp
(bad)
sbb
push
fsub
ud1
fcom
test
fadd
cdq
popf
scas
out
pop
test
sar
mov
retf
mov
fsub
cmp
shr
jl
sbb
fwait
mov
sbb
jb
fsubr
push
out
ret
adc
cwde
dec
and
aaa
mov
repnz
push
mov
fsubr
lods
mov
push
sbb
fdiv
mov
mov
rol
mov
addr16
adc
jb
shr
dec
sub
dec
fmul
test
dec
adc
pop
lds
xchg
fisub
xor
mov
pop
add
cmp
adc
fmul
add
fdiv
xor
and
aas
and
fsubr
cmp
cdq
mov
jmp
out
mov
jae
int
inc
sub
(bad)
pop
fdivr
lea
stc
adc
ins
mov
test
leave
outs
aad
in
mov
cmp
inc
aam
(bad)
stos
jle
mov
scas
pop
jo
push
in
into
jg
mov
pop
int
xlat
pop
mov
icebp
in
std
fdivr
xor
push
mov
cli
adc
push
jbe
mov
mov
xchg
push
mov
data16
push
rcl
fsubr
xchg
or
pop
add
test
sbb
push
fdivr
lahf
xor
mov
pop
retf
pop
mov
pushf
mov
and
pusha
mov
cmps
pop
push
std
fdiv
out
je
iret
jnp
scas
test
fiadd
mov
and
jge
movs
xor
fdiv
mov
adc
push
dec
mov
test
shr
repz
fmul
test
test
cmc
fcom
loope
sbb
mov
lahf
mov
jp
pop
jg
arpl
mov
or
inc
sub
mov
dec
rcr
ss
pop
push
mov
cmp
stc
xor
fcomp
push
clc
mov
fadd
mov
jnp
mov
dec
dec
(bad)
fcom
icebp
loopne
cmp
imul
fdiv
or
xchg
fimul
fs
popa
xchg
outs
fadd
scas
ret
jecxz
daa
fcmovnbe
adc
cmc
pop
clc
push
mov
pushf
test
fisttp
inc
add
sbb
xor
sbb
fsub
push
xor
cs
bound
pop
push
inc
cmp
cwde
ja
adc
loopne
add
adc
inc
mov
aas
in
cdq
xor
int3
mov
in
js
adc
enter
ds
sub
sub
lods
mov
pushf
pop
int
ds
fsub
hlt
(bad)
fs
cmp
pop
xor
jmp
push
jb
pop
xchg
cdq
sub
lods
stos
fsub
mov
fdiv
test
push
fadd
shl
cmp
fcmovnu
fdivr
into
sub
or
fsubr
pop
mov
scas
fisttp
jnp
pop
pop
int
call
add
jns
mov
or
and
es
outs
ja
cmp
mov
stos
xor
movs
out
frstor
dec
mov
or
int
mov
fcmovu
mov
xor
and
das
hlt
lock
mov
movs
ds
adc
mov
xchg
movs
fdivrp
or
mov
push
push
mov
pop
cmps
and
add
mov
rcl
add
in
sub
dec
xor
inc
adc
inc
xlat
ror
in
pop
aaa
mov
pop
fmul
data16
test
mov
sbb
sbb
sahf
sbb
jbe
shl
xlat
cmc
dec
out
sbb
add
jle
sub
push
mov
leave
jae
adc
popa
add
mov
cdq
sbb
fisub
inc
xchg
and
nop
sub
fmulp
mov
sbb
and
arpl
ds
push
sub
mov
and
out
int3
add
ins
cmp
in
jns
jnp
push
out
int3
jp
dec
test
jbe
fsub
xchg
and
repz
clc
xor
jne
push
jb
ss
mov
fcom
neg
lock
xor
jecxz
sub
in
cmp
aam
and
stos
lea
into
je
mov
mov
ins
imul
sub
loopne
lea
ret
fistp
pop
dec
fidiv
(bad)
call
xor
xchg
jp
adc
loope
add
nop
pop
add
(bad)
push
jns
cmp
xor
add
jb
fisttp
fst
js
loopne
or
scas
cmp
out
jp
push
push
out
fild
sub
xor
neg
xor
outs
jnp
xchg
rcr
push
xor
repnz
int
sahf
or
shl
loopne
push
outs
add
sub
mov
pop
jp
push
jno
leave
dec
loop
xor
xlat
pop
rol
push
dec
pop
into
in
pop
in
xor
mov
js
mov
imul
sbb
sbb
ret
ss
sub
cmp
mov
inc
sub
(bad)
mov
xchg
jnp
adc
daa
cmp
push
mov
popa
(bad)
mov
ds
shr
mov
sbb
(bad)
jge
ror
push
int
sahf
xor
and
xlat
inc
inc
rol
inc
jmp
mov
daa
addr16
xlat
jno
or
sub
inc
mov
push
dec
pusha
jle
repz
jmp
jp
loope
mov
sub
loopne
pop
dec
add
inc
add
push
pop
cmp
movs
cwde
push
sbb
add
pop
jno
mov
jg
push
repz
cdq
stos
clc
jb
mov
fbstp
cs
fiadd
sbb
xlat
xor
xlat
xchg
outs
lahf
mov
loopne
outs
dec
adc
repnz
into
call
pusha
cmp
mov
push
aad
in
lds
js
fidiv
enter
outs
sti
sahf
push
loopne
xchg
aas
stc
int
push
xor
jb
and
mov
mov
lea
and
mov
xchg
or
loopne
fsub
or
int3
loopne
sub
(bad)
scas
enter
xchg
mov
dec
sbb
js
fistp
loopne
cmp
cmp
inc
fwait
call
ficom
ds
cmp
dec
jge
fsub
xlat
inc
data16
or
mov
mov
dec
or
shl
jbe
ins
cdq
add
int3
sub
sbb
sti
dec
in
mov
clc
ja
xchg
or
and
in
cmp
xchg
mov
cmp
lock
fild
or
fiadd
ror
and
dec
pop
fnstenv
mov
fsub
shl
pop
loopne
push
pop
push
(bad)
cmp
mov
nop
(bad)
in
aam
stos
mov
cmps
and
lds
dec
xor
mov
sub
xchg
sub
pop
mov
pusha
pop
fist
pusha
and
(bad)
dec
inc
push
inc
aas
dec
push
and
cdq
sub
loopne
pop
enter
dec
pop
sbb
stos
xchg
cmp
add
or
add
hlt
or
inc
mov
cs
shl
inc
mov
dec
xor
ja
bound
fsubr
inc
out
dec
sub
mov
mov
xor
js
mov
and
push
cmp
jns
dec
sti
sbb
loopne
rcr
and
fist
(bad)
xlat
jl
mov
xchg
push
(bad)
rcr
and
mov
and
fst
data16
js
pop
jle
sbb
loopne
cmp
imul
in
imul
aaa
rcl
aas
pop
(bad)
adc
call
nop
inc
dec
sbb
mov
cld
shr
mov
pushf
std
push
in
jne
sub
adc
test
loopne
pop
test
les
shl
xchg
inc
imul
jg
sub
adc
mov
pusha
pop
or
(bad)
andnps
and
sbb
nop
jg
jl
jecxz
(bad)
loopne
cs
pusha
fcmovnb
cmp
xchg
lahf
(bad)
cmp
or
sar
xlat
aaa
push
stos
movs
in
pop
dec
sbb
ret
test
mov
sahf
sub
test
dec
fsub
out
adc
xchg
test
cdq
mov
and
adc
cdq
mov
ret
(bad)
cld
adc
dec
(bad)
int
pusha
mov
and
inc
or
das
sbb
xor
mov
push
inc
or
cmp
ds
les
mov
and
jp
jb
mov
pop
shl
aad
cmp
pop
movs
js
aas
mov
into
(bad)
xor
sub
cmp
mov
out
push
dec
add
bound
cmp
mov
add
xchg
pop
sbb
inc
mov
arpl
cdq
js
add
test
xchg
stc
js
cli
js
push
cmc
fcomip
(bad)
mov
xor
dec
pushf
dec
sar
fdivr
jns
stc
jnp
and
stc
imul
push
loopne
pop
fimul
ror
pop
xlat
enter
(bad)
mov
sbb
cdq
(bad)
gs
mov
dec
sar
jmp
lock
push
test
aaa
or
xchg
pusha
inc
icebp
dec
mov
add
loopne
jmp
rol
rol
test
jo
fsub
bound
shr
jo
je
xor
push
lahf
dec
inc
cmp
js
fdiv
cmp
ins
fisttp
cwde
mov
mov
std
dec
jnp
pop
mov
fwait
dec
jle
xchg
push
je
xlat
(bad)
shl
cs
xor
movs
call
ror
ds
pop
pop
test
int
push
ins
pushf
je
(bad)
retf
cdq
mov
call
and
add
jg
ins
mov
sbb
jle
(bad)
push
xor
mov
mov
hlt
fmul
xchg
dec
pop
ret
add
js
cmp
pop
push
(bad)
inc
stc
dec
xor
dec
movs
(bad)
into
jle
or
loopne
stos
mov
push
hlt
add
or
jae
retf
pop
lds
es
int
mov
clc
pop
psubusw
push
adc
push
out
aam
push
pop
ds
into
or
call
fcmovne
mov
enter
and
cmp
cld
scas
mov
test
sbb
mov
or
push
gs
in
mov
retf
add
out
lahf
pop
or
dec
inc
pop
mov
pop
retf
push
cdq
cmp
mov
dec
nop
xlat
and
int3
loopne
mov
mov
outs
cmps
jb
(bad)
cmp
pusha
pop
arpl
dec
pop
les
push
and
fbld
out
add
nop
pop
loopne
add
pop
enter
xor
call
(bad)
aad
test
or
je
lahf
dec
rol
mov
or
enter
jne
ret
fistp
in
enter
push
mov
pop
sar
retf
jg
pop
mov
xor
pop
cmp
pop
mov
(bad)
or
js
push
or
das
loopne
pop
and
mov
cld
mov
mov
aas
mov
(bad)
(bad)
adc
shl
jns
fcmove
add
cmp
dec
push
push
rcr
ret
js
pop
int3
xchg
push
and
pusha
sbb
es
loop
mov
dec
dec
or
push
fidiv
ror
call
loopne
sub
fistp
or
pop
loopne
aam
cmp
fwait
(bad)
inc
xlat
ss
push
sub
sbb
aam
push
fsubrp
loope
test
pop
(bad)
pushf
fsub
cmp
inc
push
out
shl
add
hlt
in
scas
mov
jp
(bad)
push
and
mov
mov
push
sbb
push
shl
ret
cwde
inc
scas
nop
xchg
and
in
cmc
jp
add
fdivr
test
fistp
xchg
test
mov
mov
inc
inc
xor
scas
mov
loopne
shl
js
jg
pop
pop
fild
sti
fidivr
or
cmp
bound
ins
cmps
push
add
pusha
mov
std
sbb
fisttp
outs
loopne
int3
mov
ins
in
jle
add
cli
pushf
and
sti
sbb
call
jge
sub
aad
fwait
mov
out
dec
test
stc
cmp
nop
push
js
cmp
cwde
(bad)
into
dec
push
in
ror
lock
stc
mov
pop
add
lock
and
cmp
je
inc
ins
cmp
leave
mov
pop
ja
inc
mov
add
xor
xchg
sbb
loopne
int
mov
mov
call
daa
push
xchg
mov
stos
inc
test
stos
add
push
xlat
fmul
out
pop
jb
inc
cmp
xchg
loopne
cmp
push
int
imul
pop
fbld
or
leave
mov
push
sub
loop
leave
pop
sbb
push
fbld
inc
push
sbb
arpl
mov
ins
push
adc
mov
xor
jno
sbb
add
sbb
daa
jnp
rcl
mov
inc
adc
xchg
fistp
outs
jns
into
pop
int
cmps
pop
sbb
or
ds
and
cmps
mov
xchg
pop
mov
jg
and
es
sbb
mov
or
cdq
mov
jg
xor
fs
jno
into
and
lods
ja
jg
or
cdq
sub
jge
or
mov
aas
rcl
add
hlt
mov
ins
aam
xor
fnstenv
push
mov
xchg
sbb
mov
cmp
and
and
jns
add
das
mov
(bad)
out
jno
inc
mov
xor
xchg
popf
mov
xchg
and
mov
hlt
adc
pusha
sbb
cmc
inc
(bad)
(bad)
clc
cmp
adc
shl
mov
or
mov
add
out
pop
ret
mov
sub
ds
and
imul
adc
adc
push
and
ja
shl
push
mov
(bad)
aad
call
inc
jmp
cmc
pop
jbe
pop
xchg
cwde
push
or
ficom
jecxz
mov
outs
enter
das
in
xor
push
stc
mov
inc
inc
mov
nop
cmp
add
dec
push
fcmovnu
adc
adc
es
jmp
fstp
stos
add
xchg
xor
outs
or
ret
push
stos
cmps
sub
push
cld
push
loopne
or
cmp
ja
xchg
inc
dec
adc
fisub
js
sub
push
pop
mov
cmp
xor
add
pop
and
inc
ror
fstp
mov
mov
nop
add
cdq
scas
push
ds
addr16
mov
ret
jno
sub
jg
es
sub
fbld
sub
dec
push
(bad)
fdivr
jmp
sbb
dec
loopne
cs
and
push
add
push
and
push
inc
cmp
cmp
add
adc
jne
lds
jg
mov
fsub
push
popf
add
loopne
pop
or
cmp
lahf
sahf
xor
pushf
retf
outs
xchg
xchg
mov
xor
push
mov
xchg
and
lods
and
cwde
mov
imul
ja
enter
add
ret
fbstp
jno
add
xor
fstp
push
mov
pusha
fild
aaa
pop
dec
or
aaa
lds
cmp
mov
fstp
ret
mov
leave
bound
xchg
out
inc
inc
and
pop
movs
pop
in
mov
push
pop
mov
adc
rcl
sbb
sub
clc
jb
add
mov
(bad)
gs
test
dec
sbb
dec
enter
mov
into
xor
call
inc
pusha
in
and
push
push
push
dec
in
lahf
dec
mov
sub
daa
ja
push
xchg
sbb
pop
xchg
fbstp
out
ds
mov
adc
lds
jo
std
cmp
fld
ss
sbb
lock
dec
or
jge
or
sub
mov
xchg
les
cs
push
sub
in
push
andnps
push
fbstp
inc
pop
int
jns
fucomi
gs
iret
fwait
push
sub
mov
sub
enter
inc
lock
inc
dec
sbb
push
(bad)
cmp
mov
sub
push
popa
(bad)
lahf
test
add
repnz
das
shl
mov
or
test
pusha
inc
and
inc
das
cdq
fwait
push
aas
ds
adc
jne
cmp
mov
jb
es
mov
add
out
fmul
sbb
ds
mov
movs
dec
out
xor
mov
adc
scas
clc
xchg
push
rol
sbb
int3
into
loopne
and
xlat
daa
fild
sbb
or
cmp
adc
and
js
jne
dec
dec
dec
adc
(bad)
fild
xchg
scas
sbb
dec
leave
mov
inc
dec
in
pop
mov
cmp
cs
jb
movs
leave
xlat
mov
pusha
cmps
and
push
pop
add
loope
mov
dec
dec
inc
fsub
jnp
inc
or
loopne
pop
(bad)
inc
xchg
jbe
(bad)
fstp
mov
test
push
dec
enter
loope
push
sub
mov
mov
daa
xlat
shl
cmp
or
mov
jo
cmp
dec
dec
shl
movs
mov
jge
sti
xlat
faddp
les
pop
jo
test
pop
out
jg
inc
fbstp
les
pop
push
jmp
cmp
mov
jns
aas
stos
adc
cmp
pop
xchg
jb
mov
jo
cmp
dec
jp
mov
sahf
xor
cdq
pop
aam
inc
jb
jp
in
push
inc
imul
stc
xor
dec
fwait
je
pop
mov
lds
mov
jp
dec
js
aas
mov
jl
inc
fiadd
jle
add
and
xchg
pop
cmps
adc
cmp
dec
xchg
ret
daa
push
push
dec
xlat
lods
cmp
cwde
jmp
push
sbb
cmp
ret
jg
scas
jmp
(bad)
div
pop
jle
les
mov
sub
xor
mov
aas
popf
pusha
int
and
inc
cmp
enter
xlat
add
je
dec
(bad)
les
loopne
fucomp
mov
sub
xchg
sub
xor
fwait
cmp
pop
ficom
jns
or
in
or
sbb
outs
mov
push
jp
dec
cwde
add
shr
ss
push
lahf
add
(bad)
sub
pusha
ins
into
push
push
int
call
inc
sbb
cli
std
jb
in
mov
xchg
icebp
sbb
fadd
arpl
xor
cmp
test
dec
je
dec
jp
xlat
loopne
mov
clc
sahf
xor
mov
mov
xor
fild
or
dec
into
mov
sbb
push
pop
out
mov
mul
or
mov
retf
xchg
clc
adc
lock
mov
jle
mov
push
loop
dec
mov
jge
xor
or
xchg
ja
inc
sub
retf
js
call
int
add
std
mov
and
pop
mov
sbb
js
dec
sbb
fidivr
push
jnp
inc
mov
mov
dec
out
mov
cwde
and
neg
loopne
retf
sub
cmp
mov
adc
or
retf
stc
lea
mov
mov
xor
retf
sbb
sbb
pusha
fdiv
inc
imul
stos
mov
int3
push
pusha
fnsave
push
ja
fbstp
cmp
lds
xchg
call
neg
xor
pusha
and
or
or
inc
mov
pop
scas
jae
(bad)
in
loop
mov
mov
retf
add
cmp
ins
lods
cmp
lds
pop
scas
icebp
adc
cmp
and
cmp
sbb
fbstp
and
adc
add
pushf
inc
mov
(bad)
int3
jae
and
add
sub
adc
and
bound
cmc
push
pop
loopne
pop
dec
xchg
add
inc
xchg
enter
jge
dec
movs
cmp
add
xchg
inc
sub
sbb
mul
test
xchg
or
mov
movs
push
(bad)
aam
cmp
or
mov
and
pusha
ja
fadd
ret
jmp
pop
lahf
pop
mov
ret
sbb
iret
dec
daa
(bad)
cmp
stos
push
sbb
fist
xor
idiv
cmp
xchg
push
ins
cmp
pop
aaa
jo
frstor
mov
dec
jp
pop
push
pop
imul
outs
out
push
shr
xor
sahf
enter
lahf
push
fsubrp
and
and
adc
mov
int
lods
pop
into
div
in
gs
pusha
pop
addr16
jns
add
sbb
adc
(bad)
ror
int3
jg
cmps
inc
repz
and
sbb
retf
call
and
sub
out
aad
adc
mov
jmp
outs
clc
mov
mov
(bad)
icebp
inc
xchg
xchg
or
push
jp
ja
xchg
sub
and
pop
jmp
loop
pop
loopne
pop
and
imul
daa
and
add
mov
js
jg
(bad)
pop
push
sub
mov
loopne
dec
mov
mov
xchg
cmp
xor
mov
sbb
data16
mov
push
or
mov
and
out
sar
pop
adc
and
lock
fisttp
jo
(bad)
xor
cmc
sub
add
out
pop
loop
inc
pusha
or
ds
ins
xor
stc
enter
add
out
(bad)
pop
pop
inc
arpl
dec
das
cmps
js
jg
sub
mov
out
sar
mov
mov
sbb
inc
sbb
aaa
mov
cmps
call
adc
stos
xor
loopne
in
lahf
fst
in
(bad)
cli
sti
lock
and
xchg
add
cdq
adc
dec
lahf
jnp
daa
int
inc
lahf
push
add
sub
jo
mov
cld
mov
(bad)
cs
jno
sub
loopne
push
pop
jg
adc
inc
cld
bound
jp
loope
pusha
int3
mov
sub
jo
push
adc
add
xchg
cmps
jo
jb
cmps
jbe
jle
scas
pusha
xchg
mov
(bad)
ror
in
pop
das
les
out
(bad)
dec
xor
inc
push
jecxz
adc
cli
mov
stos
mov
call
pushf
mov
test
jl
fbstp
fst
or
call
shl
lea
int
ffreep
and
dec
sub
jns
add
xchg
in
loopne
test
xchg
add
(bad)
in
or
(bad)
out
push
aaa
push
loopne
push
sub
push
mov
rol
dec
pop
xchg
jmp
fisttp
loopne
inc
push
imul
mov
add
and
out
fcom
stc
cdq
cmp
mov
ja
js
loopne
inc
inc
lods
mov
dec
jmp
mov
cmp
sub
sub
fwait
outs
inc
cmps
std
mov
add
lds
lock
and
out
ror
mov
fisub
jb
sbb
cwde
adc
(bad)
jecxz
ds
xlat
pusha
push
inc
push
or
add
arpl
mov
test
test
loopne
jne
mov
retf
stos
not
push
popa
dec
cmps
and
(bad)
stc
pop
out
mov
retf
sbb
aaa
dec
sub
loope
pop
int3
ins
and
dec
into
in
out
mov
dec
push
int3
mov
xor
jo
test
jns
mov
inc
xor
icebp
jecxz
clc
add
xchg
iret
out
xor
popf
push
ds
loopne
out
jo
xlat
jp
xlat
(bad)
fbstp
push
out
(bad)
adc
inc
ror
pop
mov
loopne
push
gs
fcomp
pusha
and
push
pop
cwde
xor
adc
pop
ins
push
stos
mov
mov
and
pop
and
scas
dec
inc
dec
adc
test
cld
add
add
pop
xchg
and
pop
xor
pop
fadd
push
add
repnz
mov
mov
in
sbb
mov
xchg
and
sub
jl
sub
les
inc
leave
mov
mov
xor
shr
add
xor
out
loope
push
push
scas
cmp
pushf
iret
mov
xchg
and
jmp
int3
(bad)
xchg
(bad)
stos
cmc
push
and
(bad)
mov
loopne
or
loopne
inc
mov
addr16
mov
shr
xchg
add
sub
in
mov
xlat
loopne
out
(bad)
mov
pop
int
push
arpl
push
and
(bad)
aaa
mov
jae
xchg
ins
jle
sbb
mov
cdq
fstp
in
pop
rcl
xchg
dec
mov
mov
lds
add
bound
push
jae
mov
inc
in
mov
mov
lock
rol
jo
xchg
jg
retf
push
lds
loop
and
ins
int3
js
xor
mov
cmp
dec
add
sbb
aaa
adc
mov
xor
adc
shl
nop
sti
push
dec
out
fadd
jno
or
xor
push
sbb
mov
mov
jp
test
inc
iret
mov
jl
(bad)
pusha
xchg
pop
mov
clc
and
jl
jmp
xchg
int
dec
dec
scas
loop
out
lahf
or
xchg
add
cmp
or
mov
jb
lock
dec
or
popf
dec
jb
pop
jmp
dec
and
rcl
push
lahf
cmp
mov
jnp
xchg
push
imul
dec
sahf
repz
inc
push
xchg
retf
outs
add
idiv
mov
fild
ins
pop
or
adc
pop
iret
fldenv
js
imul
dec
ror
movs
push
sub
cmp
sar
xchg
ins
ror
jmp
mov
cs
loope
into
aaa
pop
sub
adc
popf
fs
inc
add
pushf
aas
out
stos
fadd
dec
cmps
loopne
test
shl
fsub
xlat
push
dec
es
or
icebp
xchg
in
mov
pop
dec
sub
mov
and
pusha
pop
sub
js
xchg
xor
ins
mov
rcr
adc
and
mov
ja
fbld
ror
cld
xchg
enter
repnz
mov
push
shl
push
sub
inc
cdq
cmp
and
inc
and
cmp
mov
add
repnz
(bad)
stos
pop
mov
push
sub
inc
mov
and
inc
push
and
cmps
in
ffree
ret
mov
push
arpl
fcom
inc
enter
pop
sub
in
jns
aas
je
in
adc
push
lods
fistp
nop
mul
in
pop
pusha
in
fstp
adc
push
jno
pop
xchg
xchg
lods
or
cld
add
mov
scas
add
dec
cmp
jmp
call
retf
mov
sub
cwde
jae
push
out
pop
jne
ins
outs
pusha
hlt
retf
stos
js
loop
xchg
scas
cmp
push
aaa
loopne
outs
pop
pop
pop
test
sbb
mov
pop
popf
xchg
mov
into
into
or
jecxz
stos
cs
dec
popf
lods
aad
test
xlat
cld
or
push
dec
dec
xor
dec
add
or
hlt
lds
imul
clc
mov
mov
mov
push
pusha
in
add
mov
and
nop
and
fisttp
(bad)
jmp
dec
lods
fcomp
or
xchg
sahf
xlat
(bad)
es
adc
sbb
into
pop
je
inc
test
pop
fisubr
inc
or
adc
aad
dec
jecxz
xchg
ss
sub
out
xchg
pop
mov
nop
mov
test
or
add
or
mov
pop
ficom
leave
cld
test
fsub
xchg
loopne
jbe
add
push
pusha
ins
(bad)
lds
mov
shr
into
jp
add
ror
sbb
lock
pop
or
xor
movs
and
pop
inc
dec
popa
cmps
ins
inc
and
add
js
lds
mov
movs
js
enter
ds
out
dec
mov
fmul
ret
lock
test
pop
call
out
and
sub
aas
ins
lahf
cwde
pop
loopne
dec
mov
cmp
sub
ror
cli
sub
pop
lds
ret
bound
sbb
outs
pop
ret
xchg
iret
sub
out
and
fisubr
(bad)
sbb
xchg
daa
inc
int3
hlt
loope
cmp
push
jbe
mov
xor
pop
xor
inc
and
pushf
in
sysret
(bad)
lds
xor
dec
js
call
es
lods
adc
(bad)
inc
fmul
sub
mov
jecxz
pop
push
mov
loop
xor
icebp
lea
std
call
popf
push
lea
mov
daa
mov
scas
fdiv
scas
mov
movs
fsubr
sbb
or
ja
jle
push
and
xor
icebp
es
mov
sbb
fist
mov
sub
mov
(bad)
adc
rol
sahf
add
fsubr
push
ss
inc
inc
fmul
lock
(bad)
adc
pop
(bad)
jae
mov
fdiv
dec
push
inc
or
sub
sub
ins
xchg
aaa
fdivr
sbb
adc
aad
jmp
inc
xlat
push
movs
rcr
xlat
inc
and
ret
jp
add
jg
fcom
aas
jle
sar
addr16
fmul
js
ins
mov
ret
and
mov
repnz
cmp
loop
pop
add
arpl
xor
neg
(bad)
retf
xchg
xor
addr16
gs
fsub
repnz
leave
add
mov
(bad)
push
mov
and
sub
sub
push
mov
bound
xor
cmp
mov
fmul
and
inc
neg
retf
or
and
or
mov
stc
fcom
cli
or
cmp
fisttp
scas
jp
jne
pop
rcl
mov
add
test
xlat
clc
push
mov
cld
enter
out
fadd
jp
dec
sbb
fsubr
mov
pop
(bad)
cmps
cwde
pop
cmps
jno
xchg
outs
fsub
rcl
and
imul
fcomp
push
pop
xor
cs
fcomp
jno
inc
inc
mov
rcl
jl
sbb
js
fsubr
retf
dec
jnp
mov
movs
xor
jmp
mov
push
cmps
cld
test
mov
fsubr
loopne
out
push
add
fsubr
add
adc
fdivr
fistp
pop
ins
psllq
cmp
call
out
adc
stos
fdivr
adc
cmc
addr16
fdivr
mov
int3
test
es
inc
in
push
sbb
ret
cs
dec
xchg
fsubr
add
fcom
cld
push
gs
mov
lea
imul
fcomp
das
pop
jle
push
ds
mov
or
retf
popa
cmp
mov
ret
xchg
ins
scas
mov
aad
call
and
fcomp
xor
add
xor
and
int
mov
sti
xor
sbb
in
nop
xchg
xchg
add
in
in
ror
jmp
inc
or
int3
mov
lahf
shr
push
lods
or
gs
lods
ror
mov
mov
sub
dec
cmp
xchg
dec
popa
jge
fwait
sbb
sahf
fdiv
ret
es
icebp
ins
fdiv
and
fcomp
cmc
mov
ja
fsubr
jp
mov
lahf
dec
ror
repnz
js
xor
(bad)
out
cmp
int3
pop
and
retf
cmp
push
xlat
fs
sub
jmp
xor
cmc
mov
mov
cwde
fdiv
je
sbb
sub
dec
xchg
xor
rcl
pop
fistp
clc
int
mov
and
and
popa
in
push
dec
pop
fadd
pop
retf
cmps
xor
fadd
xchg
inc
popa
cmp
retf
inc
push
inc
ins
adc
sbb
dec
pop
(bad)
cmp
gs
cmps
fdivr
sub
adc
pop
jp
leave
xor
and
mov
and
ss
sbb
retf
es
into
sahf
(bad)
std
sub
stos
and
aam
ins
adc
in
inc
xor
ins
push
mov
int
lods
dec
leave
dec
shl
call
push
and
rol
loope
mov
fdiv
out
repnz
inc
fadd
test
mov
fdivr
dec
(bad)
pop
jae
retf
sbb
cmps
pop
lahf
je
mov
popa
jl
mov
imul
mov
lock
adc
xchg
jg
adc
sbb
mov
xchg
rcr
(bad)
mov
ficom
enter
sub
std
add
loop
out
mov
arpl
dec
fsub
mov
xchg
cs
and
push
out
push
dec
fcomp
push
call
dec
leave
fwait
cli
fisub
dec
in
mov
mov
sahf
xchg
xchg
mov
mov
pop
popf
push
aam
sti
in
sub
mov
pop
cwde
movs
push
icebp
xor
mov
push
es
icebp
loopne
ja
and
fs
stos
push
clc
popf
fmul
xchg
faddp
enter
test
xlat
xchg
mov
dec
call
mov
sub
cmp
fcomp
xchg
fmul
add
jo
(bad)
cwde
aas
setae
jp
adc
aas
jb
mov
ja
inc
outs
fdiv
bound
lock
cmp
or
mov
cwde
jge
push
jae
fcom
mov
mov
dec
fs
and
loopne
sbb
push
(bad)
jl
lds
in
fldcw
rcr
bound
fadd
aam
fistp
out
(bad)
pop
add
push
test
cmp
in
cmp
jnp
fsubr
ss
jne
mov
fucom
bound
push
call
jle
jb
lods
xlat
dec
push
push
sub
cmp
out
xchg
and
fsubr
ja
les
test
cmp
jno
cdq
sub
xchg
mov
sbb
popa
fadd
shr
rep
dec
add
leave
pop
push
sub
pop
cs
retf
mov
add
sbb
fs
pop
imul
pop
sbb
in
loopne
mov
jnp
pop
push
aas
pmuludq
lods
stos
lds
dec
or
jl
nop
(bad)
loopne
fucomip
enter
mov
fsub
pushf
pop
mov
jns
js
push
outs
shr
repz
lea
movs
mov
fisttp
(bad)
jp
test
jp
into
mov
fwait
xor
mov
shl
sub
mov
xchg
jnp
jno
inc
(bad)
stos
cwde
mov
out
inc
mov
jns
ret
push
and
retf
jnp
pop
lods
and
leave
jg
scas
pop
(bad)
jge
cli
inc
xchg
jmp
arpl
fldenv
lea
(bad)
dec
mov
mov
mov
daa
fs
lea
inc
dec
sbb
pop
jno
push
mov
stos
fcmovnu
scas
cdq
aam
inc
or
dec
sti
lods
pop
cmp
in
test
and
test
inc
mov
je
xchg
pushf
jns
call
bound
xchg
xor
mov
mov
into
fbstp
sbb
xor
or
outs
rcl
pop
loop
jp
jg
icebp
stos
mov
fdivr
xchg
call
(bad)
(bad)
lds
pop
xor
or
sub
jo
mov
stos
cmc
pop
xchg
lods
retf
imul
mov
jnp
sbb
jo
fbld
jle
jp
mov
loop
ja
inc
aas
add
cmp
movs
fadd
dec
ror
icebp
xor
or
jl
leave
out
mov
push
pusha
fs
xor
or
not
xor
dec
pop
jo
mov
mov
lods
and
jge
nop
rcr
mov
adc
mov
mov
sbb
ss
jge
adc
mov
or
pop
inc
inc
int
into
xor
(bad)
aad
mov
or
js
int
jmp
xchg
dec
xor
pop
mov
popa
xor
icebp
fsub
pop
mov
push
test
jne
pop
xchg
rcl
add
or
fidivr
dec
adc
inc
jbe
xchg
inc
xor
ret
dec
or
out
dec
dec
jns
mov
mov
sbb
inc
xchg
xlat
into
lods
lods
nop
fild
(bad)
dec
jno
jb
push
test
push
sub
ss
leave
fiadd
sbb
movs
dec
lock
pusha
jp
cdq
stos
cmps
lea
inc
int
fld
stos
fisubr
xlat
divps
jmp
mov
ins
outs
inc
aaa
push
jle
and
jo
into
pop
sbb
aas
xor
pop
iret
push
pop
das
shl
or
dec
inc
sub
sbb
(bad)
pop
mov
or
js
fild
and
xor
je
(bad)
pandn
ja
xchg
fs
sub
mov
adc
sldt
repz
fcomp
fbstp
cmp
mov
outs
inc
fdivr
daa
aam
enter
jnp
pop
push
sti
adc
int3
ret
int
enter
test
xor
xchg
push
push
pop
cmc
jmp
add
pop
shl
retf
mov
sub
fbld
xchg
int
pop
cld
jmp
rol
test
call
or
dec
push
das
add
cmps
mov
daa
xchg
enter
dec
pushf
repz
loopne
xor
inc
push
and
pushf
in
retf
mov
xor
jno
fucomip
inc
sbb
sub
inc
stc
push
rcl
mov
lahf
shl
ds
je
das
std
and
test
cmp
xchg
ror
xor
cmp
neg
cmp
test
outs
mov
pusha
sub
lods
lods
enter
idiv
fcomp
jg
jns
fstp
add
(bad)
push
in
aas
js
mov
sahf
pop
jecxz
xchg
fisub
jg
popf
fisub
fild
movs
shr
jns
mov
retf
mov
or
push
cld
xor
xor
mov
pop
aas
push
cs
mov
sar
mov
fist
pop
enter
dec
add
pop
xor
repnz
inc
and
and
xor
cmp
cmc
cmp
cmp
and
stc
xchg
mov
js
aas
(bad)
pop
cmp
inc
push
stos
dec
adc
aas
sub
stos
cdq
dec
les
inc
xchg
fist
pop
imul
mov
sub
pushf
in
cmp
mov
fsubr
loopne
pusha
cwde
out
and
jg
shr
loopne
int
sbb
xchg
in
retf
push
cdq
mov
xchg
dec
adc
outs
dec
mov
cmp
cs
or
sub
dec
js
stc
aad
mov
push
pop
cmp
and
fbld
cmp
add
(bad)
ret
pop
mov
(bad)
ins
les
(bad)
xor
neg
sub
stos
aaa
mov
or
sti
je
cmp
and
push
sbb
add
cmc
nop
xchg
into
add
jno
test
mov
neg
fisubr
sbb
pusha
dec
mov
aam
aam
and
jne
sbb
js
push
pusha
dec
data16
xor
and
loopne
mov
jl
std
jb
or
jle
stos
xor
fcomp
fdivr
shl
popf
sbb
sbb
push
clc
stos
ret
adc
xchg
test
add
addr16
fisub
sbb
retf
les
ins
pop
push
aas
add
stc
xor
enter
push
fisub
inc
inc
sbb
dec
stos
cld
fcmovbe
mov
shl
add
fiadd
pop
pusha
pop
stos
jecxz
sub
in
mov
sbb
push
sbb
out
cli
mov
ffreep
clc
hlt
and
inc
xchg
dec
push
nop
(bad)
ds
push
mov
push
ror
mov
fild
mov
movzx
cmp
jmp
pop
or
stos
fnstsw
push
out
xor
push
sbb
add
ins
(bad)
cli
ficomp
aas
sub
stos
das
fbstp
jb
mov
cmp
out
call
inc
pop
rcr
nop
or
ret
fistp
sbb
outs
xchg
pop
fs
cmp
scas
fidivr
adc
rcl
cwde
shl
imul
mov
addr16
dec
sahf
fild
call
xor
int
lea
sub
sahf
and
push
shl
jecxz
rcr
mov
test
or
in
loop
and
or
out
sahf
les
aam
xchg
sub
rol
xchg
xchg
mov
xchg
xchg
test
cmp
jmp
sbb
inc
test
or
enter
cmp
cld
in
into
pop
(bad)
scas
dec
fimul
movs
test
xor
mov
xchg
jmp
mov
aas
or
mov
fistp
xchg
fdivp
hlt
sbb
ins
jb
aas
jecxz
daa
pop
mov
jmp
mov
sahf
jmp
lods
xlat
pusha
xor
fistp
pusha
mov
xor
dec
sti
scas
sbb
fisttp
add
dec
push
ja
js
fs
cwde
inc
mov
jg
js
ss
inc
add
lds
loopne
(bad)
bound
out
xor
sbb
mov
into
pop
inc
cdq
sub
fdivr
lods
cs
xor
loop
enter
sub
test
fnstenv
loopne
sar
xor
inc
push
sub
(bad)
rol
in
cmp
cmc
call
repnz
div
adc
popa
sbb
icebp
or
test
ja
jno
jecxz
popa
inc
fldl2t
jle
dec
xchg
xchg
inc
je
cmp
arpl
int3
add
aas
je
fmul
(bad)
inc
add
xor
aaa
inc
jno
xchg
mov
mov
(bad)
sbb
pop
cli
push
pop
sahf
fcmovne
fistp
dec
arpl
pop
js
xchg
sub
(bad)
pop
enter
test
fisttp
(bad)
jmp
inc
add
mov
mov
imul
xchg
sub
add
jp
ror
mov
cmps
pop
pop
lods
(bad)
lock
test
push
fiadd
leave
inc
sub
(bad)
fcom
pusha
or
sbb
stc
fnstcw
inc
js
inc
dec
sbb
xor
ficom
les
mov
int
jge
jecxz
rcr
in
jmp
(bad)
retf
push
and
(bad)
fbld
mov
push
inc
push
or
xor
pop
pop
frstor
pusha
sub
sbb
or
scas
adc
fdivp
mov
ficomp
scas
cwde
cmps
imul
dec
push
ins
int
loope
loop
cmp
in
ret
cld
push
iret
adc
rcl
gs
js
mov
sbb
jmp
rol
jne
iret
js
gs
lods
sbb
in
mov
mov
cli
xor
fsub
xchg
inc
es
test
xor
xor
fwait
mov
repz
mov
sti
jl
dec
cwde
fs
sti
xchg
xor
jbe
mov
cmp
adc
rcr
popa
xchg
mov
or
inc
pop
sbb
addr16
cmp
inc
in
inc
pusha
js
loope
aam
or
adc
mov
(bad)
mov
inc
sub
test
jnp
popa
or
jno
sbb
or
jp
mov
les
xchg
mov
and
nop
inc
ffreep
lods
pop
mov
sbb
and
aad
dec
sbb
inc
pop
xlat
imul
mov
or
fisttp
(bad)
fmulp
jno
repnz
dec
mov
add
ss
push
jecxz
nop
jecxz
inc
pop
enter
retf
xor
scas
jecxz
push
dec
xchg
arpl
mov
mov
je
sahf
cmp
scas
jae
mov
push
pop
mov
cdq
inc
mov
jns
mov
mov
(bad)
ror
in
cwde
sub
fnsave
test
imul
mov
outs
push
sahf
sbb
(bad)
and
mov
sbb
bound
(bad)
popf
xchg
pop
jg
neg
in
aas
xor
outs
stos
or
mov
push
fsubr
lods
xchg
popf
cwde
pusha
dec
jnp
outs
mov
sbb
leave
or
mov
sub
jge
pushf
(bad)
xlat
fdivr
jnp
rol
push
mov
sbb
adc
xchg
sbb
inc
in
sahf
dec
inc
pop
dec
mov
sub
fimul
test
pusha
lds
jge
xchg
inc
sbb
sub
mov
xor
out
push
pop
(bad)
arpl
shl
jno
test
call
inc
pushf
retf
imul
sbb
mov
dec
(bad)
pop
nop
mov
mov
pop
fist
jns
or
int3
shl
cmc
sbb
hlt
call
nop
std
addr16
aam
cmp
pop
std
stos
int3
lds
and
rcr
das
mov
dec
inc
cmp
cmp
shr
mov
and
xchg
call
je
div
ds
pop
dec
and
jno
add
or
mov
enter
add
cmp
jo
aam
sbb
mov
jnp
aas
retf
inc
xor
mov
fild
adc
(bad)
xchg
cld
and
inc
aas
sbb
push
xchg
adc
loopne
jp
and
ret
mov
int
rol
pop
lds
sahf
(bad)
push
das
xor
mov
imul
movs
or
cmps
test
lods
cmp
cdq
add
fcom
fsubp
pop
ins
mov
pop
loopne
mov
(bad)
jno
xor
inc
call
jp
add
cs
cwde
js
mov
pushf
nop
cli
cwde
xlat
in
and
fstp
or
dec
inc
fild
cmp
mov
jecxz
clc
inc
aad
out
xchg
mov
les
cdq
test
xor
fisttp
daa
sti
sub
pop
ret
cmp
inc
pop
add
pop
popa
ret
pusha
fild
mov
pop
mov
sti
std
xchg
ins
mov
js
mov
cmp
sub
or
js
in
cmp
sub
sbb
jmp
pusha
call
dec
xor
daa
call
jne
jnp
out
dec
leave
xor
dec
fmul
cld
jmp
imul
jmp
xchg
call
sub
xchg
ins
cld
stos
fcmove
test
rcl
enter
inc
(bad)
sub
bswap
inc
cdq
ds
mov
mov
add
mov
and
add
push
data16
sub
inc
jp
jmp
jo
sbb
fild
repnz
or
stos
shl
cmp
pop
(bad)
jecxz
es
pop
xchg
cld
or
lods
inc
xchg
inc
and
ror
inc
jp
inc
cld
fisttp
adc
xchg
iret
adc
mov
sbb
cdq
rol
pop
pop
(bad)
and
inc
(bad)
out
mov
mov
aaa
pop
ret
aas
cmp
fbstp
jns
out
out
push
pop
mov
(bad)
jns
pop
lds
and
xchg
adc
and
sahf
push
add
cmp
ds
mov
stos
pop
loopne
push
sub
sub
mov
dec
push
or
pusha
in
add
mov
push
jmp
bnd
test
scas
inc
mov
inc
gs
into
and
add
jbe
mov
das
aam
mov
adc
add
js
xor
sbb
ins
mov
loopne
mov
(bad)
mov
mov
push
xor
lods
in
fld
add
jg
frstor
or
fcomp
loopne
cmps
mov
mov
jmp
hlt
pop
mov
push
clc
mov
(bad)
sbb
cmp
adc
data16
mov
fmul
jns
lea
and
(bad)
test
xor
out
mov
push
dec
jmp
mov
sub
jmp
pushf
add
fsubr
sub
fcom
pop
or
sub
jmp
xchg
fsub
arpl
dec
cmp
scas
mov
jge
pop
mov
(bad)
fist
fadd
cmc
xor
fdivr
inc
les
popa
fld
dec
fcomp
cmps
mov
fwait
repz
fldenv
cwde
xchg
daa
xchg
fdivr
xchg
sahf
in
fadd
cli
mov
xor
xor
pop
lds
lods
sbb
cdq
ins
in
xchg
xlat
jmp
add
loopne
mov
outs
(bad)
clc
cli
sbb
dec
jge
addr16
and
push
push
xchg
out
ins
or
jbe
pop
outs
or
call
test
or
jmp
movs
dec
dec
fadd
push
push
dec
pushf
xchg
fdivr
pop
xchg
pop
dec
or
fsubrp
arpl
ja
ror
fdiv
js
call
xchg
mov
mov
jbe
sbb
push
pusha
psubusb
iret
cld
mov
fcom
and
adc
push
jno
retf
pushf
les
ins
fdivrp
hlt
pop
xlat
loopne
call
xchg
jno
cmp
clc
mov
xlat
push
dec
push
push
mov
fbstp
pmaxsw
pop
and
lahf
push
push
test
out
ins
ins
push
mov
and
test
mov
inc
lahf
lahf
cmp
test
dec
mov
fcomp
add
dec
mov
fwait
repz
inc
mov
fimul
pusha
and
cmp
cdq
add
out
xchg
fwait
iret
and
stos
and
pop
mov
jp
sub
push
cmc
call
dec
sbb
fdivr
(bad)
cs
jo
les
call
hlt
sti
out
cmp
lods
out
iret
dec
loope
cmp
fistp
fild
aam
fdivr
sbb
data16
(bad)
inc
mov
pushf
daa
jae
jl
sub
cmp
pusha
xor
loopne
sbb
rcr
xor
dec
cld
dec
mov
(bad)
fcomip
jmp
ja
pop
jp
call
mov
dec
or
sbb
mov
and
test
jg
aam
std
cmp
and
jo
in
jns
vsqrtsd
inc
and
pop
xor
add
cwde
sahf
fld
(bad)
fimul
popa
out
loope
dec
sub
push
fiadd
or
add
and
es
cmp
sub
sbb
cmps
inc
loop
mov
fadd
je
mov
xor
sbb
jbe
xchg
xor
sbb
mov
and
cmp
dec
imul
daa
(bad)
jp
mov
int
(bad)
in
jg
daa
aas
cmovg
mov
mov
mov
out
xor
stos
add
addr16
loopne
mov
or
mov
cmp
dec
popa
mov
test
std
out
and
gs
into
movs
loopne
mov
dec
jbe
adc
and
xor
dec
xchg
add
js
cmps
jle
fbld
adc
mov
jle
pop
js
ds
dec
sbb
mov
loopne
jo
or
jnp
or
pop
jmp
(bad)
out
neg
aaa
test
fsubr
adc
fild
pop
(bad)
mov
xchg
stos
imul
push
dec
in
add
(bad)
fsubr
dec
js
xor
outs
jp
loop
dec
pop
or
sbb
mov
fist
add
xchg
sub
repz
and
clc
cld
inc
test
addr16
and
push
cwde
sbb
repz
aam
movs
xchg
sbb
sbb
mov
push
sbb
jns
sub
adc
fcomip
(bad)
push
dec
add
mov
iret
outs
cmp
pop
xor
mov
jge
call
cdq
adc
and
outs
fist
push
pop
add
push
pop
adc
xor
and
rcl
inc
int3
out
and
push
xlat
adc
mov
pusha
jle
pop
sti
push
inc
inc
push
fmul
loopne
jae
add
sbb
pop
popf
mov
add
mov
leave
imul
sbb
jl
(bad)
jle
push
mov
fimul
and
loop
jb
mov
mov
xchg
lock
rcr
or
fdivr
pop
dec
shl
ficomp
dec
sti
fbstp
sub
shr
arpl
dec
pusha
xor
push
fdecstp
jmp
(bad)
hlt
nop
call
or
hlt
sbb
aad
repz
cmp
enter
lahf
jmp
pop
xchg
and
nop
fs
xchg
mov
test
vpaddusw
sbb
mov
repnz
pop
cmp
jo
add
iret
cmp
mov
cmp
fstp
cld
push
or
mov
inc
cmp
into
nop
adc
sub
pop
add
js
(bad)
mov
(bad)
push
or
sbb
repnz
scas
inc
popf
loopne
es
ds
xor
pop
dec
pop
or
mov
pusha
fsubr
fild
mov
test
and
iret
pop
nop
xor
xchg
popa
mov
sub
fisttp
push
mov
adc
shr
mov
dec
scas
icebp
loopne
inc
aad
iret
jns
call
mov
push
dec
ja
aas
or
aas
sub
xchg
outs
push
jo
add
les
nop
inc
push
mov
popf
cmc
lea
popf
pusha
aam
dec
test
mov
sahf
retf
xchg
xlat
pop
adc
xchg
push
xchg
pop
xor
push
into
scas
cmp
rol
push
xor
mov
pusha
fistp
add
pop
cld
dec
inc
cmp
mov
nop
stos
push
sbb
inc
push
inc
icebp
jbe
rcr
and
ds
into
cmp
sbb
add
jmp
fisub
call
mov
and
sbb
xor
dec
fcomp
stos
es
inc
jge
inc
pop
out
or
fist
or
and
ret
mov
add
pusha
fsub
dec
mov
inc
fnstcw
mov
push
scas
jns
sbb
dec
mov
sbb
mov
xchg
mov
out
out
pop
and
sub
cmp
xchg
loop
ss
or
fdivr
mov
and
and
inc
mov
xlat
lahf
pop
push
pop
and
and
aas
mov
gs
and
and
nop
call
inc
je
jbe
out
jmp
push
xchg
inc
push
imul
(bad)
push
mov
adc
jno
mov
fld
popf
ins
inc
jp
stos
repz
xchg
adc
or
test
ja
popf
or
jmp
mov
(bad)
outs
sti
xor
mov
sbb
into
adc
std
sub
push
mov
ins
mov
outs
mov
mov
out
add
sbb
loopne
mov
fmul
mov
jo
inc
cmps
js
and
or
div
cmp
cmp
(bad)
fisubr
jecxz
and
jae
xchg
(bad)
pop
fmul
or
shl
fistp
sub
cmp
fcom
dec
lahf
mov
repz
stc
aad
lock
hlt
push
fsubr
push
out
xor
sub
adc
sar
fdiv
sbb
ds
(bad)
fsub
clc
mov
dec
fsubr
mov
sbb
mov
dec
(bad)
push
adc
fsubr
jae
sti
jmp
loop
mov
adc
inc
ds
jmp
std
push
pop
sbb
mov
jne
mov
aam
fdiv
inc
addr16
out
and
push
inc
fmul
ja
sub
jns
fmul
lods
mov
js
jle
pop
mov
sub
jo
inc
and
jle
and
mov
mov
stos
loop
in
repnz
pop
or
int
dec
daa
es
pusha
loop
arpl
push
je
cmp
jle
outs
in
les
out
js
sbb
cli
fcomp
push
mov
jg
xchg
retf
dec
or
stos
fsubr
movs
pop
add
in
fcomp
jmp
jns
out
aas
psubusb
pop
add
or
mov
stos
fcom
sbb
(bad)
loopne
xchg
test
xchg
pop
mov
jno
lahf
dec
or
cmp
and
sbb
push
jmp
xchg
or
jmp
push
clc
rol
test
jge
pop
jno
call
pop
push
in
daa
jge
push
jge
push
mov
mov
rcr
loop
mov
(bad)
and
(bad)
not
dec
cmp
sub
loopne
imul
mov
xchg
mov
mov
push
inc
pop
jp
pusha
jae
test
push
retf
mov
dec
or
ss
inc
jne
mov
add
inc
or
xor
pusha
in
dec
sbb
fstp
rcr
mov
loopne
cwde
cmps
(bad)
mov
scas
xchg
fsubr
adc
loopne
or
xchg
les
adc
jae
rol
sub
pushf
add
stc
dec
outs
das
outs
cwde
cmc
add
aaa
push
pop
out
jp
xchg
or
pop
sub
nop
cmp
clc
aam
je
mov
rcl
ins
xor
cmp
call
std
fs
or
inc
pop
pop
xchg
stos
push
test
xchg
add
push
ins
inc
mov
xor
add
mov
cdq
lods
xor
repnz
xor
enter
cmps
sbb
or
add
push
frstor
nop
ins
inc
enter
fist
push
mov
aas
or
xchg
ds
inc
pusha
mov
stos
out
dec
inc
cs
jno
loopne
loopne
movs
jg
sub
pusha
add
and
int3
or
jnp
xor
xchg
sahf
loopne
rcl
test
sub
sti
add
jo
leave
and
clc
xchg
pusha
mov
jle
test
loopne
popf
cmp
ss
ins
sahf
xlat
lods
xor
imul
cmp
jmp
xor
les
je
shl
repnz
sbb
xchg
push
adc
ss
fisttp
inc
int3
mov
xor
cmp
xor
into
inc
jns
mov
fxam
dec
bswap
and
jmp
and
push
in
dec
pop
cmp
in
mov
fs
mov
shl
jbe
jg
aam
dec
out
lds
and
jae
nop
sub
int3
pop
js
inc
push
ficomp
push
ret
mov
sub
inc
aas
add
dec
jge
sub
sar
inc
add
add
xor
push
jp
int
(bad)
cmp
pusha
sub
cmp
mov
retf
lds
pop
push
rcr
and
mov
popf
loopne
dec
pushf
test
dec
cwde
sub
ins
sub
sub
dec
rcl
mov
dec
dec
call
test
mov
inc
push
psubd
call
and
inc
loope
push
stos
lods
sub
pop
(bad)
(bad)
clc
inc
jb
loopne
mov
dec
imul
push
sub
pushf
mov
and
cmp
push
cmp
mov
shl
rol
mov
shl
imul
dec
fstp
mov
movs
rol
push
add
pop
and
pusha
mov
aam
lea
mov
push
test
jb
mov
lds
cmp
sub
xchg
inc
fdivrp
mov
mul
pusha
retf
lock
add
adc
sbb
hlt
imul
cli
out
jno
adc
add
movs
inc
ret
adc
cmp
fsub
mov
pop
iret
xor
xchg
hlt
sub
cmps
sub
jae
or
dec
push
mov
dec
sbb
mov
cli
mov
fmul
jge
xor
and
pop
addr16
cs
dec
and
in
jle
xor
fmul
sub
mov
fdiv
test
ret
(bad)
jae
push
lods
add
fwait
xchg
leave
mov
and
stos
fsub
jmp
push
jnp
cld
faddp
mov
jae
jb
cmp
xchg
dec
or
mov
push
jae
(bad)
into
sbb
mov
jno
out
add
sbb
call
shr
jne
push
dec
daa
cwde
sub
out
xor
mov
fdiv
mov
retf
mov
pop
dec
mov
sar
ja
fwait
scas
push
dec
fdiv
mov
mov
mov
out
jnp
nop
jge
push
sub
gs
push
push
adc
pop
jle
leave
push
push
jp
in
push
mov
xor
lds
js
scas
jnp
into
and
mov
fcom
mov
xchg
fucom
sbb
dec
add
xchg
cld
psrld
popa
jmp
mov
xlat
push
and
loopne
push
push
or
adc
(bad)
cmc
xor
jne
fsubr
cmp
movs
xchg
bound
push
ss
xor
(bad)
fsub
mov
xor
pop
and
shl
test
mov
retf
push
ret
in
or
cmc
(bad)
pop
movs
pop
(bad)
lock
lods
xor
inc
dec
mov
cwde
or
popa
jne
sahf
cwde
cmps
dec
leave
(bad)
cmp
mov
and
xor
retf
push
sahf
aaa
jp
mov
inc
lock
mov
in
sub
push
sti
push
push
loop
fcom
sub
push
pop
test
cmp
dec
add
xor
jecxz
xchg
dec
push
cmps
mov
(bad)
cmp
fsub
jne
jge
mov
jp
and
repnz
pop
jo
clc
test
icebp
mov
mov
add
pop
sbb
mov
fdiv
retf
and
push
sbb
jg
aam
frstor
bound
fcomp
imul
stos
add
dec
out
(bad)
fdivr
into
inc
(bad)
fsubr
(bad)
mov
push
hlt
fdiv
repnz
fdiv
inc
ror
mov
ret
hlt
les
popa
fistp
xchg
cld
cmp
jge
push
jne
leave
and
or
mov
test
pop
adc
jb
popa
cdq
into
icebp
ds
repnz
loopne
pop
add
jecxz
fldenv
sahf
cmp
sbb
fisub
or
not
ins
sub
fadd
sub
sub
lea
dec
(bad)
lods
jno
in
je
pusha
push
jne
mov
pop
je
pop
xlat
movs
push
lahf
fild
mov
or
mov
mov
ror
xchg
hlt
mov
or
in
jne
cmp
je
push
pop
jae
out
pop
jne
ficom
ins
mov
mov
mov
aad
mov
enter
stos
lds
mov
push
mov
and
xor
call
fwait
stos
out
daa
repnz
fucomp
pop
loopne
hlt
ins
xchg
out
pop
es
call
icebp
mov
cmp
and
and
jo
dec
xchg
(bad)
and
and
fadd
mov
mov
ins
xchg
or
push
push
daa
push
ret
add
push
jecxz
popf
push
enter
or
push
test
into
and
js
sti
mov
cmp
jg
fist
test
sbb
inc
test
cdq
test
xor
repz
mov
call
adc
xchg
ins
add
shl
mov
mov
mov
jno
add
cmp
jno
out
cmp
adc
popa
dec
rol
dec
dec
or
push
jae
cmp
mov
cmp
fbstp
(bad)
fistp
mov
xor
push
mov
shl
push
cmp
rcr
in
xchg
push
pop
add
(bad)
dec
cmp
dec
cmp
mov
xor
rcl
mov
and
mov
sbb
enter
push
test
rol
xor
mov
in
adc
outs
sbb
imul
add
mov
outs
jnp
cdq
test
and
mov
jns
loopne
std
cmp
mov
test
mov
push
loop
or
push
adc
js
mov
mov
pop
adc
xchg
dec
adc
enter
(bad)
cwde
(bad)
adc
fisttp
fidiv
and
lods
repz
bswap
nop
jg
dec
push
xchg
(bad)
and
cli
jp
adc
(bad)
cld
jnp
sbb
je
(bad)
popa
jp
(bad)
lahf
fstp
dec
inc
cdq
pop
xchg
cwde
jmp
sub
inc
nop
add
fdiv
test
dec
pop
push
add
and
push
xchg
jp
jmp
test
dec
add
dec
fild
test
mov
sub
lahf
fist
adc
sub
retf
jb
pusha
ja
ins
jmp
pop
js
loopne
or
sar
adc
cmp
movs
cli
aad
ret
loopne
(bad)
imul
xchg
shl
neg
lock
popa
out
pusha
lds
add
iret
call
or
ror
popa
dec
mov
pop
popa
dec
mov
rcl
pop
shr
cli
jmp
mov
mov
sti
out
sub
mov
adc
fild
inc
sbb
lahf
or
fsub
out
or
fst
add
and
dec
mov
xchg
cmp
jle
xor
cmp
fild
pop
inc
pop
jnp
push
jns
pusha
push
imul
mov
js
lea
out
fsubrp
fs
xchg
xlat
fs
es
xor
outs
xor
stos
adc
inc
cmp
push
xor
add
and
jmp
cmp
es
(bad)
in
sub
xchg
test
and
mov
shl
aam
(bad)
fidiv
not
in
cmp
fsubr
daa
push
lds
call
xlat
sub
mov
mov
xchg
push
int3
(bad)
sub
mov
mov
mov
mov
sbb
mov
mov
loopne
inc
sub
and
cmp
pop
ja
or
or
retf
dec
pusha
lds
inc
pop
inc
stc
dec
js
dec
jne
or
fistp
mov
jle
call
ins
pop
les
jmp
out
fnstsw
movs
inc
or
and
jb
jae
add
xchg
mov
mov
lahf
pop
dec
or
fld
movs
les
or
mov
mov
and
jae
imul
cmps
lahf
lock
fwait
pop
jb
xchg
jle
sar
loopne
fs
cmp
into
cmps
xor
mov
push
mov
push
xor
push
call
test
aam
mov
jg
lods
aad
push
pusha
push
sub
lea
push
xlat
out
xchg
cmp
int
xor
test
cmp
enter
dec
dec
sbb
cmps
jno
jnp
gs
popa
dec
call
xchg
(bad)
push
jp
sub
inc
sub
idiv
jb
adc
sbb
test
push
push
mov
cmps
cwde
cli
std
je
fbstp
daa
push
rol
sub
int3
cmp
jo
sbb
push
iret
in
call
mov
and
mov
xchg
test
es
jb
and
xlat
sbb
and
push
sub
inc
dec
lock
push
mov
loopne
or
arpl
sbb
dec
aam
sub
or
pop
(bad)
push
nop
mov
dec
(bad)
jp
add
sti
jge
jo
mov
fild
jbe
into
popf
jo
shl
push
aas
dec
in
test
fisubr
test
ins
dec
pop
(bad)
pusha
cwde
push
xor
cli
in
jle
(bad)
cli
push
add
or
movs
inc
aas
out
dec
cs
ja
fwait
iret
xor
cmp
test
xor
cmp
and
or
rol
int3
pop
out
pushf
jb
fs
add
mov
mov
mov
mov
push
adc
or
adc
out
clc
dec
pusha
jmp
iret
mov
adc
xlat
pop
lea
arpl
leave
dec
into
fisttp
(bad)
loopne
sub
and
jo
push
cdq
aam
rcl
fidivr
ds
movs
jns
sbb
mov
jne
mov
(bad)
fbld
mov
iret
fwait
aam
mov
inc
into
adc
pushf
loopne
jl
jno
mov
cmps
loop
sub
dec
xor
and
mov
cwde
and
mov
in
push
scas
dec
bound
out
out
mov
push
push
shl
aas
out
jae
sbb
pop
mov
mov
xlat
xchg
int3
popf
fist
aad
xchg
sbb
mov
(bad)
push
push
stc
sbb
add
pop
inc
aam
jg
mov
fiadd
mov
test
int
loopne
inc
pop
pop
jae
test
fmul
push
jns
test
sbb
jo
fisttp
into
cli
adc
or
les
mov
mov
push
xor
dec
sub
and
sub
leave
aas
rcr
jb
cwde
pusha
lahf
dec
int
cdq
inc
int3
cmps
mov
enter
int
out
mov
mov
pusha
cmps
pop
inc
xchg
mov
cmp
jno
mov
repnz
in
add
cdq
jp
xor
pop
sub
push
pop
mov
xor
xlat
inc
xchg
push
outs
rcl
aas
imul
push
es
dec
mov
inc
pop
int
outs
fisttp
cmp
pop
ins
ja
xchg
(bad)
push
mov
cmp
or
bswap
ror
mov
mov
inc
sbb
pop
sbb
test
mov
add
fwait
lea
mov
rol
cmp
mov
jle
fisttp
jbe
aaa
iret
int3
pop
loopne
pop
cmps
add
mov
jg
cmp
cwde
arpl
lods
into
loopne
mov
fcmovne
sub
lea
add
push
imul
loopne
outs
hlt
nop
and
mov
cmp
fidivr
mov
or
sbb
or
lds
xor
mov
imul
push
add
in
out
jns
pusha
and
jbe
lahf
std
lds
mov
jmp
mov
cdq
mov
and
adc
mov
xchg
add
outs
adc
call
jae
or
enter
repnz
xchg
outs
push
scas
mov
inc
push
fbld
fs
repz
jg
or
inc
gs
jbe
dec
js
(bad)
int3
out
pop
frstor
test
data16
mov
fistp
push
js
(bad)
sbb
inc
jno
pop
fidiv
xchg
aam
jbe
sbb
int3
in
push
and
(bad)
loopne
nop
xchg
inc
dec
pusha
inc
iret
or
and
push
xor
xchg
test
mov
out
xchg
pop
sbb
je
cwde
xlat
mov
data16
pusha
icebp
rcl
into
push
mov
and
stos
fld
pop
jns
aad
test
or
loop
or
mov
push
popf
das
add
xchg
dec
inc
jmp
imul
enter
test
jge
aas
push
das
xchg
(bad)
mov
pushf
movs
jl
dec
jecxz
sub
retf
cmp
int
fist
in
push
out
sbb
jmp
adc
mov
sbb
mov
xchg
adc
or
loopne
dec
mov
dec
push
dec
adc
fisub
pop
jle
pop
enter
xchg
ret
xor
inc
sub
cld
data16
pushf
push
push
loopne
mov
out
xchg
outs
ror
jg
sub
cmp
dec
xchg
pop
nop
test
xchg
and
adc
dec
fsubr
adc
xor
nop
and
sub
mov
(bad)
mov
into
loopne
push
xchg
mov
push
call
in
enter
(bad)
loopne
jbe
cdq
adc
xchg
or
pop
xchg
into
sub
loopne
or
pop
push
loop
push
dec
mov
push
pusha
mov
imul
fwait
pop
adc
shl
push
fwait
mov
bound
mov
xchg
cmp
and
push
loop
or
les
mov
dec
mov
daa
jo
not
loop
sub
push
jecxz
pop
nop
push
jg
dec
cmp
mov
out
pop
push
loopne
and
push
xor
leave
or
sbb
jmp
iret
sub
sbb
fs
(bad)
xchg
cmps
and
icebp
cmp
out
stos
mov
test
mov
jmp
call
and
sub
fucomp
nop
add
push
jb
out
(bad)
loopne
mov
iret
mov
pop
sbb
hlt
sub
cdq
pusha
xlat
xor
add
sbb
pop
push
aas
lods
shl
cmp
out
or
das
icebp
mov
rcr
and
out
(bad)
and
jae
mov
sub
cmc
aam
or
push
bound
jl
mov
sbb
rcl
sub
nop
sbb
jmp
add
ret
in
(bad)
mov
dec
sub
sub
int3
mov
pop
cld
in
adc
test
mov
add
push
mov
inc
iret
xor
std
push
(bad)
loopne
inc
inc
and
inc
cmps
cli
retf
push
push
sub
inc
jg
lods
sub
mov
ins
int
mov
test
xlat
mov
and
pusha
mov
jmp
jo
pop
mov
cli
ror
addr16
stos
adc
pop
rcr
or
ret
adc
xor
(bad)
or
fwait
mov
xor
and
pushf
ror
inc
and
add
or
and
call
add
push
push
mov
out
push
and
xchg
xchg
ficomp
ja
inc
adc
leave
std
push
cs
cwde
mov
xchg
js
mov
aam
movs
cwde
jp
mov
int
test
mov
movs
jl
xchg
dec
(bad)
out
aas
jmp
xor
lahf
sbb
fmul
adc
js
or
add
scas
inc
sub
pushf
pop
mov
dec
arpl
pop
adc
dec
pop
push
(bad)
sub
jmp
scas
(bad)
fstp
inc
add
dec
mov
outs
xchg
xchg
jp
dec
lock
fidiv
jb
mov
(bad)
leave
mov
call
(bad)
sbb
movs
pop
test
(bad)
repnz
fidiv
xlat
(bad)
push
popa
and
inc
adc
jg
and
jmp
or
mov
push
or
dec
sahf
pop
in
lods
xor
mov
mov
leave
in
test
inc
out
loopne
data16
fcom
in
inc
sbb
leave
xor
rol
ret
(bad)
push
mov
mov
stos
lds
mov
int
js
cmc
mov
mov
call
test
stos
pop
sub
loope
push
lods
shl
arpl
icebp
cmp
ins
jge
clc
push
retf
and
sbb
aaa
sub
retf
adc
pop
fidiv
cmc
hlt
leave
xor
in
inc
ds
cmp
stc
sub
fldl2e
imul
aaa
jecxz
pop
xchg
adc
(bad)
scas
outs
clc
cmp
xchg
popf
fdivr
sub
lea
jnp
or
pop
jno
clc
xor
cmp
out
pushf
fsubr
cmp
push
xlat
push
(bad)
fwait
dec
ret
shl
cmp
xchg
pop
xor
cmp
push
push
cs
push
mov
in
sbb
shl
sbb
scas
mov
cs
adc
fsub
jg
cmp
sbb
xor
sar
scas
in
add
jae
movs
fnstcw
xchg
fsubr
xchg
mov
mov
fsub
mov
adc
and
popa
ja
cmps
mov
mov
div
dec
mov
xor
jne
jl
xor
pop
pushf
sbb
push
dec
pop
and
xchg
add
sub
add
shl
push
enter
rol
ret
loop
js
cdq
fild
jno
sub
addr16
pop
fcom
mov
mov
leave
fist
popf
ins
shl
nop
inc
popf
sub
mov
push
push
fsubr
pop
cmp
data16
(bad)
mov
cs
jmp
leave
jb
cld
int3
fdiv
fwait
xchg
dec
add
xchg
sahf
mov
jecxz
loop
and
xor
fisubr
arpl
js
and
push
daa
xor
jno
xchg
ret
sub
(bad)
push
dec
addr16
call
cmp
in
not
pop
cmc
mov
sbb
inc
fs
fsubr
icebp
sub
retf
fdiv
sbb
pop
int3
inc
cli
loop
fsubr
xor
fcomp
ror
aam
fdivr
sub
les
cli
push
or
(bad)
and
loope
fsubr
dec
int3
in
call
xchg
inc
sti
xor
out
(bad)
push
mov
sub
add
inc
mov
mov
dec
shl
xor
jae
mov
jl
outs
popa
cmp
and
fcomp
pusha
arpl
ret
cli
add
daa
cmp
cwde
retf
xchg
sub
mov
cwde
jmp
clc
ror
aam
fmul
iret
nop
ins
(bad)
pop
inc
xchg
fsubr
mov
mov
mov
push
or
pop
imul
repnz
xchg
rcl
fisubr
mov
sbb
cmp
add
cwde
fwait
out
xlat
inc
stos
add
in
cmps
rcr
dec
mov
jae
jmp
sar
fs
sub
test
out
adc
hlt
(bad)
xlat
sbb
les
cld
int
fmul
idiv
mov
fmul
(bad)
sbb
fadd
xor
xchg
mov
inc
nop
mov
js
enter
fcom
mov
outs
fdiv
scas
and
push
stc
adc
retf
clc
popa
and
ret
call
pushf
inc
lea
pop
pop
sub
push
push
inc
mov
in
and
hlt
fcomp
ja
(bad)
push
cmp
pushf
xchg
fs
fucomp
cld
mov
data16
fild
push
mov
popf
cmp
and
test
xor
cwde
jnp
inc
add
nop
fdivr
sbb
xor
xor
xchg
jecxz
daa
push
fcom
mov
shl
xchg
and
fadd
fst
fmul
rcl
rcr
addr16
scas
mov
add
adc
sub
jmp
cli
pop
in
dec
enter
pushf
mov
jecxz
mov
xlat
adc
cmp
lock
xor
mov
sub
cmp
jmp
(bad)
aam
test
mov
int
sbb
mov
mov
or
jp
mov
sub
jmp
ss
(bad)
fsub
(bad)
mov
mov
pop
mov
xchg
dec
mov
xchg
cmp
xchg
and
jae
retf
sbb
sbb
sahf
fsub
test
es
push
sub
and
mov
fdivr
xor
mov
rcl
js
cmovge
fadd
adc
jmp
out
mov
fnsave
mov
adc
cli
push
xor
loopne
retfw
daa
dec
fmul
out
(bad)
fisub
mov
lds
xchg
xchg
sbb
aas
leave
sub
je
cmp
adc
inc
dec
call
pop
xor
pop
mov
xor
scas
fcom
mov
dec
sbb
xlat
fsubr
cmps
sub
xchg
fcom
aas
pop
jne
jle
cld
adc
sbb
retf
repnz
stos
adc
sub
mov
fldenv
mov
pop
fs
jnp
push
int3
cmovno
cmp
dec
sbb
xor
xlat
shl
and
adc
fadd
inc
xchg
into
sbb
shr
push
shl
fadd
retfw
stos
xor
ins
out
push
cmps
pop
fdiv
jmp
cwde
(bad)
popf
mov
mov
jge
in
fild
sbb
dec
sti
aas
pushf
cmps
gs
ror
mov
loope
fdiv
shl
cmp
cld
fdivr
and
fsub
enter
pushf
scas
pop
fidivr
xchg
and
repz
fsub
cld
shl
div
mov
leave
xlat
out
arpl
and
xor
std
sub
add
push
enter
lock
stos
push
inc
jne
leave
cld
mov
ret
mov
mov
loopne
daa
fucom
in
mov
pop
mov
pop
mov
retf
cwde
out
and
mov
lock
and
popa
or
loopne
dec
dec
repz
dec
mov
das
jne
daa
cli
aas
push
pop
ret
adc
les
lea
call
jne
xor
or
mov
jo
retf
push
fldcw
pop
inc
(bad)
adc
mov
add
in
and
push
push
cmp
fcmovnu
dec
stos
jae
mov
mov
jmp
adc
aad
pop
loopne
sahf
ret
jno
cs
inc
add
je
out
jae
push
xor
ds
icebp
movs
xchg
cdq
out
fcmovbe
loop
(bad)
ret
fwait
inc
lods
sbb
dec
jns
cmp
pusha
mov
mov
cdq
lock
xlat
enter
mov
imul
in
fistp
inc
pushf
cli
or
aad
mov
dec
mov
out
imul
xchg
cld
mov
inc
pusha
push
(bad)
cmp
dec
loop
jnp
push
mov
inc
jle
js
cmp
mov
mov
cmp
aaa
repnz
sub
(bad)
fdivr
loope
and
leave
inc
xchg
out
ins
in
lahf
(bad)
cmc
movs
mov
fadd
and
push
fdivr
inc
push
xlat
mov
fcom
fsubrp
jbe
sbb
int
xchg
mov
pop
jmp
fsub
leave
into
jl
daa
mov
out
jnp
repz
fsubr
jle
in
cmp
mov
psubusw
jmp
xor
(bad)
sub
shl
pop
or
jns
add
enter
fdiv
in
sub
fdiv
fmul
dec
fcom
popa
xor
neg
sbb
and
cmp
push
imul
pop
aam
bound
pop
dec
xlat
inc
push
xchg
ja
fsub
and
jp
iret
cmp
push
fst
test
aaa
mov
fisub
sub
gs
call
faddp
mov
jns
fdiv
in
or
mov
fcom
jecxz
lock
xor
sbb
stc
sub
xchg
lods
fadd
mov
ret
ficom
icebp
pop
rcr
jecxz
repnz
or
fsubr
cmp
adc
sbb
in
mov
ror
xor
ss
movs
push
mov
sub
fadd
dec
jbe
imul
mov
cwde
xlat
jp
inc
mov
fcom
bound
fwait
sbb
fidivr
outs
and
test
call
pop
stos
dec
ds
xchg
ja
and
mov
imul
push
jp
add
fsubr
mov
sub
(bad)
(bad)
cli
fcomp
cmc
sbb
psubusb
pushf
out
push
and
imul
inc
mov
out
pop
call
or
push
add
cld
mov
inc
out
dec
scas
fadd
push
xor
and
xchg
jb
fsub
int
ret
frstor
imul
push
sbb
fdiv
mov
popf
pop
fsub
lahf
mov
(bad)
fcomp
sub
mov
test
and
adc
sub
stos
imul
or
mov
test
add
(bad)
fmul
add
ins
xor
leave
jae
sar
fsub
std
sub
push
sar
push
fcomp
enter
rcr
ds
ins
or
pop
test
xchg
pushf
sub
or
imul
out
rcl
cmps
or
xchg
sbb
fucomip
push
outs
mov
into
addr16
dec
lds
cdq
xchg
mov
xchg
fcom
cld
sbb
lea
jp
pop
fadd
paddsb
(bad)
call
pop
fsub
pop
dec
pop
or
ficom
clc
xchg
aad
loopne
rcl
adc
fstp
ins
dec
mov
lods
xchg
mov
rcr
repz
iret
cmp
mov
or
bound
or
mov
fdivr
xor
fsubp
cmp
jno
stos
js
hlt
jg
mov
push
dec
mov
fisttp
icebp
dec
popf
(bad)
nop
nop
mov
fdiv
mov
cld
and
stc
shl
cmp
pop
xor
call
sub
xlat
dec
ins
xlat
adc
jno
cwde
sti
sub
mov
lods
nop
mov
xchg
jb
inc
jge
iret
cmp
xor
pop
movs
cld
mov
leave
or
pop
test
inc
sub
call
(bad)
call
mov
inc
mov
(bad)
ins
rcr
xor
sub
cmp
icebp
sahf
shl
jbe
inc
mov
fsubr
add
pushf
in
pop
rcr
pop
cmp
aad
jmp
pop
and
retf
addr16
fmul
(bad)
jns
fcom
ja
call
fmul
mov
aad
loop
movs
dec
inc
add
adc
cwde
hlt
cmps
stos
add
(bad)
std
test
xchg
je
adc
sbb
mov
dec
adc
pop
movs
pop
and
je
sub
ret
sub
jns
fcom
xlat
(bad)
pop
adc
ins
pop
leave
aad
dec
outs
mov
mov
inc
fisub
sbb
mov
js
retf
pop
push
xor
mov
out
jmp
fmul
aaa
je
dec
pop
fbstp
cmps
fbld
shl
jbe
lea
dec
dec
mov
add
pop
dec
or
inc
leave
sbb
in
push
int
ja
rcl
addr16
aam
leave
xchg
cmc
mov
mov
xchg
je
inc
mov
add
or
lock
lahf
in
sub
pop
xor
sbb
dec
mov
dec
pop
mov
or
sbb
cmc
sub
add
hlt
cmp
jl
cmp
jnp
push
add
mov
sbb
ins
fistp
in
imul
int3
cmps
dec
fcomp
cmp
xchg
fld
seto
repnz
adc
leave
int3
rcr
outs
or
cmp
push
repz
xchg
out
push
iret
retf
jl
in
lods
mov
into
ss
or
fsubr
outs
nop
or
push
xchg
mov
inc
or
call
in
pop
dec
sbb
or
test
adc
in
je
(bad)
jg
or
rcl
loopne
xchg
fdiv
sub
int3
test
hlt
pushf
xlat
jmp
pop
jp
adc
push
xlat
repz
(bad)
bound
cwde
iret
call
pop
daa
xlat
fadd
and
fcom
dec
popf
jo
pop
rol
pop
shl
inc
addr16
fcmovnbe
mov
sar
call
popf
jecxz
clc
pop
aam
xchg
adc
pop
jno
and
push
out
mov
xchg
xor
loop
pushf
repz
ret
fucom
inc
call
fcom
out
(bad)
jns
mov
popa
cmp
mov
jp
xlat
fst
adc
and
in
int
jg
fadd
hlt
out
fwait
cmps
std
nop
cmp
stc
mov
sub
push
sbb
rcr
push
xchg
(bad)
mov
add
sbb
and
sbb
fist
or
and
sub
pop
cld
fmul
jecxz
out
sub
mov
or
pop
xchg
repnz
retf
push
pop
lahf
sub
shl
adc
push
jge
dec
inc
cmp
xor
fdivr
sub
sub
sbb
xlat
xor
fisttp
ret
icebp
mov
dec
add
fdiv
daa
in
lahf
or
mov
fsub
push
fs
mov
dec
sahf
xlat
push
rcr
sbb
aad
enter
cmp
jb
pop
stos
dec
xchg
sahf
icebp
xor
movs
mov
add
lods
outs
add
jp
cmps
shr
fadd
pop
dec
cwde
cmp
pop
les
in
dec
xchg
cli
inc
adc
pop
std
pushf
test
ror
pop
xchg
fdiv
mov
mov
xchg
lea
add
outs
or
stos
sub
cmp
pop
retf
and
fsubr
sub
fcom
jae
adc
xchg
imul
das
pop
fld
mov
fmul
pop
cmps
gs
xchg
ins
dec
xor
cmp
dec
jp
stos
fcomp
pusha
mov
outs
std
fmul
ret
leave
cmp
mov
aaa
add
add
repz
out
pop
fisub
adc
int3
xor
cmps
out
ficom
test
nop
cmp
cs
jne
in
push
push
sbb
dec
adc
mov
add
retf
mov
mov
inc
pop
outs
adc
fist
bound
clc
add
gs
push
push
(bad)
movs
shr
retf
pusha
sbb
lods
mov
xchg
jbe
retf
mov
lds
adc
xor
xchg
cmp
popa
dec
inc
into
enter
sbb
xchg
(bad)
fdivr
mov
out
mov
fsub
ins
rol
icebp
cmps
mov
out
mov
and
repnz
fcom
dec
or
fdivr
xchg
sbb
imul
xchg
jecxz
mov
adc
mov
fcom
jae
in
push
pop
jl
cmc
jb
push
loop
mov
test
les
sti
xchg
fs
je
fsubr
movs
xor
not
mov
div
sahf
xchg
fstp
or
ret
sbb
mov
loopne
sti
cdq
push
mov
rcr
in
fmul
mov
fsub
pop
jecxz
mov
ror
retf
data16
adc
cmp
fsubr
fwait
inc
sub
cmps
mov
jno
fcom
loopne
in
mov
out
and
test
pop
mov
dec
adc
enter
push
pop
outs
pop
jmp
pushf
push
and
xlat
nop
mov
add
bound
push
jl
cli
pop
or
fadd
rol
stos
fsubr
xor
xlat
cmp
nop
pop
mov
cs
xor
(bad)
jns
es
sub
sub
ins
xlat
add
aas
cli
xlat
dec
ins
push
dec
ret
fwait
cmp
aas
mov
stos
jmp
stos
fild
xlat
or
mov
mov
fdiv
xchg
sbb
mov
jne
ja
lods
push
pop
mov
call
in
pcmpeqd
pop
sbb
fmul
aad
out
icebp
cli
pop
loop
fadd
dec
loopne
pusha
push
xlat
pop
ficomp
mov
inc
push
cmp
sub
jae
stos
pop
and
mov
fadd
scas
jb
(bad)
mov
xchg
das
sbb
mov
movs
push
sub
sbb
jge
mov
dec
retf
cmps
jae
cmp
gs
inc
jmp
scas
shr
(bad)
cs
pop
mov
in
jb
add
inc
pushf
add
xchg
inc
jl
fdiv
ins
pop
dec
int3
mov
mov
pop
out
clc
cmp
sti
and
adc
shr
fdivr
es
dec
add
inc
cmp
or
and
psubusb
mov
sbb
ss
mov
or
xor
sub
scas
imul
xchg
out
fcomp
sub
inc
clc
in
fadd
mov
call
xchg
lea
nop
fucomp
jge
imul
push
cmps
lock
aad
pop
movs
jp
addr16
inc
int
out
pop
pop
int3
pop
push
sub
loopne
mov
addr16
push
xlat
mov
call
loopne
inc
aam
addr16
(bad)
fmul
and
push
int
xchg
(bad)
mov
shl
dec
pop
pop
mov
xchg
movs
jno
adc
pushf
mov
inc
push
sbb
jp
inc
sahf
std
test
mov
mov
adc
loop
mov
fdiv
adc
dec
loopne
mov
idiv
mov
leave
or
loope
sbb
add
data16
mov
push
mov
jbe
dec
sub
les
outs
int
adc
aam
je
jp
mov
add
jo
cmp
gs
movs
xchg
or
jae
dec
test
fdiv
test
rcl
add
inc
imul
or
xchg
and
(bad)
aaa
xor
sbb
and
ins
shr
xchg
sar
fcmovnbe
shl
sub
fcom
xor
lods
fwait
cmp
out
bound
or
retf
in
fdiv
dec
inc
cmp
fild
cmp
and
fsub
jo
push
sbb
scas
enter
push
and
jecxz
fmul
clc
fadd
ja
inc
fsub
scas
scas
push
fdivr
lock
sub
fcomp
mov
mov
clc
sti
shl
or
cmp
repnz
movs
shl
xchg
lods
cwde
mov
out
into
nop
inc
mov
(bad)
fadd
and
cmp
add
and
out
mov
ret
ror
fdivr
and
sub
xchg
arpl
enter
repz
hlt
ficomp
scas
push
push
mov
test
movs
cdq
jge
call
or
aas
xlat
inc
pop
stos
test
fmul
xchg
jl
ja
data16
inc
fsubr
jmp
jl
or
mov
pop
test
fdivp
cmps
xchg
sub
stc
mov
(bad)
fcomp
mov
mov
jbe
or
xor
dec
popf
fsub
pop
xor
pusha
sub
aam
fdivr
push
ror
fistp
add
sub
movs
jbe
sub
jo
add
mov
dec
xchg
fsub
cmc
inc
dec
sahf
jmp
add
add
mov
add
or
(bad)
in
(bad)
dec
sahf
xchg
jmp
fsubr
jge
aad
dec
push
ret
pop
scas
ins
loopne
retf
add
jge
xlat
fcomip
call
mov
ds
jno
nop
sub
inc
pop
outs
stos
(bad)
mov
mov
loop
fistp
in
mov
pop
adc
xchg
push
sub
clc
add
(bad)
xchg
dec
popf
add
out
sahf
mov
xchg
std
stos
push
stos
dec
or
jnp
pop
push
shl
add
rol
(bad)
jle
xor
movs
jg
push
test
xor
mov
push
dec
aam
dec
pusha
push
cmp
mov
das
add
xor
add
call
mov
sub
outs
fmul
fst
not
inc
cli
test
scas
cs
add
xor
cmps
cmp
mov
pusha
xor
repz
inc
loopne
icebp
jae
sub
adc
adc
shl
fmulp
in
fild
jno
adc
xchg
add
xor
sar
out
inc
js
adc
mov
enter
fwait
aad
mov
cli
mov
movs
add
sub
sar
ins
popa
out
or
fcmovnbe
lea
xchg
mov
loopne
inc
inc
mov
xor
prefetch
or
test
imul
sub
lahf
mov
xor
mov
fsub
jns
push
push
pop
mov
jmp
or
movs
dec
pop
dec
mov
push
dec
rcl
test
out
xchg
stos
pusha
push
sbb
sbb
outs
sub
sar
cli
inc
pushf
add
iret
mul
jle
bnd
jae
stos
sahf
or
dec
jb
cs
movs
mov
fild
pop
jmp
mov
fwait
das
cmp
sub
or
fdiv
cmc
xlat
xor
adc
add
int3
mov
les
push
les
addr16
add
mov
cmp
fild
sub
sbb
aaa
dec
adc
lahf
push
jno
iret
xchg
leave
sub
xor
aaa
fstp
pop
fistp
cmovb
lock
mov
inc
mov
int3
sbb
or
call
mov
xlat
mov
scas
adc
add
mov
(bad)
jb
mov
pop
je
pop
mov
sahf
jmp
ficomp
inc
(bad)
repz
aad
in
ds
(bad)
(bad)
and
pop
inc
jns
scas
rol
jl
cmps
ja
iret
call
mov
jmp
pop
js
out
call
jae
hlt
fsub
(bad)
push
and
(bad)
cli
sub
inc
and
cli
jb
pop
icebp
popf
bound
xchg
movs
lahf
stc
adc
mov
mov
xchg
call
mov
repz
sub
jmp
cmc
imul
mov
inc
pop
loopne
sbb
push
fwait
xchg
sub
jo
call
fld
popf
lahf
rcr
into
pop
cmc
xchg
sbb
dec
dec
repz
(bad)
test
loop
jns
std
jb
loopne
push
push
jnp
clc
and
mov
and
loopne
mov
mov
fisubr
(bad)
mov
dec
inc
cdq
test
add
xchg
ss
xchg
mov
call
fdiv
jecxz
stc
in
jb
adc
call
(bad)
xchg
(bad)
and
and
add
sahf
jns
xchg
(bad)
rcr
cmps
jmp
mov
push
test
adc
vcvtps2pd
adc
(bad)
cmps
call
sub
mov
xchg
stos
mov
movs
mov
pop
retf
jge
push
or
mov
adc
jns
lahf
pusha
loop
and
mov
push
mov
test
(bad)
mov
adc
in
xlat
xor
arpl
jl
pusha
int3
retf
fist
(bad)
xchg
sub
add
pusha
add
mov
add
adc
or
test
or
push
mov
mov
(bad)
add
add
mov
out
cmp
out
scas
js
mov
xchg
enter
test
jp
stos
(bad)
cdq
fcom
dec
add
pop
mov
xchg
mov
clc
cmp
xchg
into
sahf
into
fcomip
add
dec
pusha
xor
ss
mov
sbb
rcr
cmp
xor
ret
jo
daa
pop
cmps
xchg
rol
or
inc
xchg
std
movs
sub
inc
push
jl
das
icebp
call
out
icebp
jnp
cdq
aas
push
push
mov
adc
mov
mov
pusha
adc
xor
mov
popa
mov
loopne
cwde
popa
mov
rcl
jns
shl
xchg
ret
outs
loopne
stos
es
sbb
jg
test
cs
in
icebp
cmp
sbb
leave
pop
retf
std
dec
stos
cmp
and
arpl
sti
pusha
dec
push
frstor
push
add
push
rcr
jb
jmp
sbb
ret
cwde
pusha
(bad)
aam
iret
jle
dec
pop
nop
retf
pop
push
retf
out
adc
and
popf
aad
lds
loope
lock
push
jno
repnz
es
dec
cwde
fimul
xor
aas
loopne
aas
(bad)
fisubr
add
div
scas
fld
or
dec
enter
jbe
jb
fist
xchg
test
das
xchg
mov
out
test
and
out
xchg
nop
cmp
pop
inc
mov
imul
jno
and
daa
cwde
in
inc
scas
or
loop
outs
retf
loope
mov
sbb
int3
mov
pop
dec
loopne
jae
push
pusha
arpl
lds
and
js
xchg
xchg
cs
ins
imul
jmp
cmps
and
pop
rcl
enter
sub
retf
cdq
inc
test
or
inc
scas
jp
mov
adc
pop
or
fwait
sub
mov
sbb
xchg
loope
mov
icebp
repz
lea
push
sbb
gs
icebp
mov
bound
int3
push
cli
sbb
movs
adc
inc
mov
mov
cmp
(bad)
cmp
jp
sbb
loopne
scas
adc
or
in
fld
dec
push
shl
fcmovne
imul
rcl
cmp
jne
dec
shr
retf
push
call
pop
sar
(bad)
xchg
add
lds
aam
or
add
cmc
pop
js
rcl
retf
jg
jb
push
jmp
xchg
push
into
into
adc
fs
icebp
or
test
dec
inc
mov
fwait
xchg
gs
lds
out
push
cmp
fs
mov
pusha
mov
loopne
stos
out
pop
ror
mov
int3
jae
int
dec
jnp
loopne
in
sub
mov
xor
lahf
scas
enter
loopne
shld
clc
ss
imul
jle
icebp
sbb
mov
inc
xchg
std
mov
out
pop
out
cmp
icebp
mov
cmps
(bad)
cmps
pop
leave
enter
push
xor
cld
mov
rcl
movs
loopne
cwde
enter
jnp
fst
cwde
push
pusha
cmp
jl
mov
iret
sub
dec
js
sub
jno
xor
push
pop
add
dec
dec
and
fsubr
push
out
or
in
add
sti
dec
push
aas
mov
mov
cmp
dec
fst
add
and
mov
icebp
cwde
nop
pusha
ret
fsub
sbb
loopne
fucomip
push
popf
out
sub
les
pop
cmp
xor
cmc
xchg
cld
sbb
mov
fbld
mov
pop
fdivr
push
pusha
xchg
imul
xor
data16
(bad)
stc
out
mov
pop
stos
add
mov
cmp
jmp
and
out
pmaxub
fild
js
jno
pop
xchg
mov
fcmovne
pop
scas
and
fnstcw
(bad)
mov
pop
jecxz
(bad)
inc
fbstp
sti
mov
and
sub
sub
fnstenv
test
test
inc
call
push
cmp
(bad)
jno
fistp
add
mov
mov
dec
adc
add
imul
and
repnz
cwde
inc
mov
retf
jmp
sub
fs
aaa
sub
add
pop
stos
retf
mov
dec
int3
xchg
push
mov
out
data16
jo
and
enter
(bad)
mov
adc
stos
push
movs
(bad)
jbe
fnsave
loopne
dec
ss
sbb
mov
pop
xor
rcr
mov
test
call
mov
cmp
jl
loop
(bad)
fistp
inc
fwait
add
ds
or
xor
dec
cs
ret
loopne
push
pusha
ins
ds
retf
jo
jne
add
stc
dec
mov
cmp
(bad)
lahf
fisttp
rcl
cdq
jge
rcr
ret
les
repnz
jg
cmps
repnz
inc
or
jmp
or
es
and
nop
out
adc
xchg
push
sub
mov
push
out
in
push
ror
inc
ror
(bad)
call
fdiv
fdiv
dec
jmp
ffreep
adc
mov
mov
jp
int
jg
enter
push
jns
pop
cs
loopne
mov
xchg
aas
push
xchg
pop
add
mov
test
and
out
mov
or
xchg
aad
ficomp
aas
clc
push
dec
jle
outs
ja
fsub
mov
enter
mov
nop
(bad)
fld
cs
cmp
and
fistp
sbb
and
push
cmp
jmp
xor
mov
ds
inc
das
rcr
vandps
dec
dec
jp
and
int
movs
ins
pop
adc
hlt
mov
mov
push
inc
adc
aam
test
fisttp
rcl
and
enter
dec
or
adc
dec
(bad)
jne
ins
neg
hlt
in
je
jo
sub
mov
pop
fchs
push
sti
fisub
or
aad
or
scas
call
sub
not
cmp
int3
sbb
and
fcmove
test
mov
aam
push
pusha
sbb
cmp
cmp
jb
test
repz
cld
inc
bound
jns
push
and
push
ret
xchg
sub
test
dec
dec
xchg
imul
mov
sbb
shr
lds
pop
ja
or
pop
inc
cwde
(bad)
cld
pop
imul
sahf
pushf
jno
pop
adc
jp
mov
jo
in
enter
cmp
test
cmovae
cmps
int
xlat
add
push
pop
mov
outs
mov
mov
je
pop
ds
in
pop
test
mov
jle
out
and
add
int3
cdq
jg
adc
jns
push
sub
add
pop
inc
into
(bad)
mov
inc
mov
gs
mov
and
mov
addr16
out
fistp
jl
mov
mov
xchg
mov
clc
(bad)
sbb
loope
aad
ja
in
jbe
es
stos
cmp
inc
sbb
loope
ds
or
xor
sub
iret
mov
enter
dec
out
sbb
sub
mov
inc
call
icebp
adc
mov
in
cmc
xor
das
int
and
add
loopne
mov
and
xchg
sbb
das
fist
aaa
xchg
push
retf
push
mov
mov
imul
inc
scas
mov
inc
loopne
iret
push
fcom
fisub
test
popa
sar
mov
adc
add
lock
push
inc
mov
pop
sbb
jmp
movs
mov
pop
push
lds
push
(bad)
xchg
(bad)
ins
xchg
pop
les
mov
jecxz
rcl
out
loop
js
xor
inc
sub
mov
aas
and
dec
xchg
repnz
les
inc
loop
push
fsub
outs
rol
test
mov
popf
arpl
xchg
repnz
stos
mov
arpl
call
ret
push
pushf
and
sub
aad
mov
cmp
dec
icebp
or
add
pop
fwait
sti
out
cld
add
xor
adc
loop
jmp
pop
(bad)
fisttp
leave
jo
fiadd
add
aam
cld
in
sar
mov
jp
mov
push
loopne
mov
inc
jmp
sbb
ret
and
lods
push
fwait
call
jne
lahf
loopne
xchg
stos
dec
iret
leave
dec
fwait
mov
fisubr
xchg
outs
inc
xchg
mov
pop
mov
(bad)
and
(bad)
stos
int
sub
aas
aas
push
inc
repnz
pusha
mov
add
mov
rcl
loopne
daa
lea
(bad)
fisttp
adc
rcr
push
je
add
pop
(bad)
shl
cmp
js
xor
fnsave
cmp
mov
sbb
ret
sub
xor
xor
fadd
dec
loop
inc
cmc
retf
ficom
pop
mov
fistp
sub
and
xchg
dec
pop
inc
mov
shl
xchg
imul
ins
pop
dec
cmp
dec
dec
mov
or
xor
test
dec
popf
mov
ins
cmp
dec
inc
mov
jo
push
pop
fild
cwde
sub
(bad)
jmp
es
xchg
dec
out
addr16
stos
xchg
call
sub
aaa
pusha
mov
jno
aam
cmps
scas
lds
fild
push
das
mov
pop
jo
inc
pop
fdivr
mov
popa
nop
ds
adc
xor
dec
or
sbb
xchg
pop
push
jmp
outs
fcmovnu
stos
xchg
sbb
adc
xor
sub
sbb
mov
sub
loopne
jl
push
adc
or
hlt
sbb
mov
mov
cmc
ret
jg
ret
sbb
test
add
mov
sub
push
pushf
fistp
pop
fild
je
xchg
cmp
mov
jne
adc
repnz
pop
lds
push
jmp
cmp
adc
sub
stos
icebp
jp
call
iret
rcr
inc
leave
and
int
int3
mov
push
inc
ficom
ret
(bad)
ins
fcomp
xchg
xor
jmp
mov
mov
scas
hlt
push
dec
mov
dec
icebp
mov
pop
neg
xchg
push
and
mov
push
sub
loopne
push
ds
fsubr
inc
sub
into
xor
inc
into
fild
aaa
movs
xchg
out
xchg
sbb
mov
push
adc
enter
or
jecxz
dec
mov
enter
pusha
(bad)
in
das
movs
jecxz
jne
gs
sub
mov
test
mov
pop
enter
frstor
mov
cmp
(bad)
jne
ds
retf
cmp
sub
test
pop
cld
loop
and
fld
sub
xchg
dec
mov
sbb
dec
push
add
bound
jbe
sbb
in
mov
mov
scas
icebp
inc
push
mov
jp
enter
cli
iret
test
mov
scas
cmp
cmp
sub
inc
push
sub
lahf
fwait
push
inc
cmp
(bad)
mov
and
jo
(bad)
or
in
push
(bad)
sub
cld
sbb
jle
push
loopne
ins
call
adc
les
rol
cld
mov
sbb
pop
dec
push
add
mov
loopne
push
(bad)
aad
add
push
dec
adc
pop
sub
nop
dec
xchg
shr
(bad)
xor
in
cmc
sbb
inc
cdq
adc
outs
xor
mov
stos
sub
loop
mov
mov
int
adc
mov
repnz
inc
mov
cmp
call
and
xchg
movs
pop
adc
out
jmp
arpl
pusha
xchg
mov
dec
pushf
(bad)
dec
cmp
ss
mov
mov
lea
add
mov
nop
pop
nop
jnp
fwait
aaa
mov
je
fwait
or
fnsave
lock
leave
fdiv
out
pop
jnp
aaa
in
in
pop
pusha
mov
push
test
dec
mov
mov
xchg
repz
and
cmp
fistp
fcmovu
dec
push
or
or
cmc
push
(bad)
lock
into
xchg
add
cmp
dec
(bad)
xchg
mov
mov
das
dec
test
out
push
dec
adc
fsubrp
dec
stos
out
in
rol
scas
cmp
add
sbb
push
push
js
inc
dec
and
dec
shld
add
test
(bad)
mov
fimul
es
ins
test
(bad)
daa
sti
inc
jp
cwde
(bad)
inc
aas
clc
data16
mov
pop
xchg
js
fisub
jmp
(bad)
push
jle
push
lods
pop
pushf
cwde
and
aas
repnz
adc
nop
stos
fs
lds
fsub
pushf
clc
into
enter
jge
xlat
pushf
aas
neg
jl
or
shr
dec
test
fdiv
enter
(bad)
xlat
pusha
mov
and
mov
in
sbb
cs
aad
sar
fisub
leave
pusha
cmp
in
push
lea
leave
(bad)
dec
push
push
add
xchg
dec
dec
or
fbld
cdq
cmp
push
sub
xlat
loopne
mov
and
inc
fistp
and
mov
push
into
fadd
xor
inc
clc
dec
mov
cmp
jne
mov
fcom
jmp
test
or
mov
add
sahf
loopne
sub
iret
fnstcw
inc
and
out
outs
js
mov
jno
je
inc
int3
or
jne
js
fbstp
scas
pop
cmp
xchg
and
fisttp
mov
xchg
push
mov
and
mov
int
pop
or
loopne
ficomp
ror
fmul
inc
add
or
fsubrp
ins
aaa
or
xor
xlat
dec
sub
inc
imul
daa
jge
lds
jno
popf
xlat
pusha
(bad)
loopne
sub
mov
enter
les
and
in
fidivr
movs
gs
mov
sbb
test
inc
xor
fdiv
fsubr
in
xor
and
inc
loopne
add
pushf
and
jl
jns
dec
push
mov
xchg
ror
repnz
loopne
push
lods
dec
shr
dec
sub
popf
or
push
ja
or
and
repz
sub
jmp
mov
loopne
les
test
jo
mov
pusha
js
rcl
fild
or
in
or
ds
imul
int
xor
loop
sbb
adc
push
dec
push
fwait
(bad)
in
retf
sbb
jo
inc
fist
inc
fisttp
mov
xor
sbb
stc
xor
and
cli
les
loope
xchg
test
loopne
add
ret
pop
(bad)
jl
mov
add
fwait
and
pop
call
sub
jecxz
fisubr
nop
cmp
addr16
aaa
jo
ret
loopne
inc
ds
add
out
sub
push
shl
mov
jns
aam
mov
fst
ja
inc
cdq
sbb
loopne
add
pop
xchg
sbb
xor
inc
adc
rol
ja
mov
int3
mov
mov
dec
jns
gs
mov
stc
fistp
lods
stos
rcr
cmp
pop
xor
adc
xchg
into
icebp
fwait
cs
jno
mov
or
ficomp
xchg
inc
lods
adc
mov
sub
scas
dec
or
xchg
xchg
push
stos
int3
mov
inc
inc
jno
or
xchg
test
add
popa
outs
mov
sar
cmp
xchg
mov
dec
pusha
jg
mov
or
sbb
cmp
sub
mov
mov
loopne
repz
in
pop
push
ins
outs
sub
mov
dec
jns
xor
inc
ins
fcmovne
push
push
pop
inc
repz
dec
xchg
xchg
mov
or
inc
push
pusha
or
mov
and
mov
(bad)
shl
cmp
or
call
jno
mov
aaa
out
and
stc
mov
loopne
and
xlat
cmp
mov
xchg
scas
cwde
ficomp
leave
pop
push
pusha
mov
cmp
or
or
pop
or
mov
or
sbb
sbb
movs
movs
js
mov
add
add
ror
call
rol
jmp
cmp
loop
mov
in
mov
mov
cmps
inc
imul
sub
xor
jne
lods
sar
cdq
sub
fidiv
jmp
retf
ins
cmps
inc
xchg
(bad)
fidivr
pusha
shl
inc
ss
add
or
adc
bound
and
and
dec
dec
cdq
inc
and
sahf
or
mov
jg
adc
(bad)
popf
pop
enter
sbb
and
xlat
lahf
loopne
dec
cmp
cmp
jno
jecxz
xchg
cmp
push
repnz
not
xlat
sbb
mov
pop
mov
push
pop
ror
ret
(bad)
sbb
outs
movs
pop
push
enter
sub
xchg
xchg
sbb
rcl
jo
sub
push
xchg
retf
call
dec
push
xchg
enter
xchg
mov
or
sbb
dec
test
mov
sbb
xor
cwde
clc
push
push
adc
and
test
out
les
mov
and
jb
jne
fcompp
(bad)
jmp
cmps
not
mov
jecxz
pushf
pushf
mov
mov
pop
out
mov
xor
mov
ja
bound
bswap
fimul
je
mov
jae
mov
daa
dec
(bad)
add
and
mov
pusha
(bad)
pop
sub
push
fidivr
jmp
fistp
jno
into
loopne
inc
in
fbld
sbb
or
mov
movs
imul
pop
add
xchg
lea
dec
and
mov
fs
inc
dec
inc
ins
out
stc
test
adc
rcl
xor
jle
movs
add
and
jne
mov
or
fmul
das
les
addr16
and
std
retf
mov
es
push
jle
push
and
xchg
repz
rcl
das
cld
mov
pushf
mov
push
fidivr
in
cmp
sub
xchg
add
(bad)
clc
or
push
add
fadd
(bad)
cdq
jmp
xchg
cmp
dec
and
out
inc
cmps
mov
sahf
and
push
(bad)
adc
mov
aam
xchg
jbe
aam
cmp
repz
or
sbb
shl
mov
or
(bad)
mov
test
aaa
xlat
aas
dec
neg
arpl
bound
mov
shl
xor
das
push
adc
out
push
jbe
jg
in
or
sbb
fsubr
jne
mov
aas
lea
pop
and
pushf
sbb
push
cmp
data16
jns
ficomp
dec
mov
push
cmp
cmp
aad
repz
inc
(bad)
mov
nop
cs
aam
inc
js
call
loopne
push
push
cmp
js
je
fbld
and
sahf
fdivp
cmp
or
mov
jno
pop
and
sub
cmp
loope
inc
pop
std
or
push
pop
cdq
je
dec
pusha
or
mov
sahf
aam
and
add
push
cmps
xchg
sub
loopne
inc
movs
push
adc
loopne
push
cmp
add
(bad)
jb
fst
mov
or
pop
inc
js
or
iret
ss
pop
add
jmp
loop
and
mov
cmc
in
mov
cmp
mov
dec
mov
js
inc
lods
xchg
test
jp
(bad)
loopne
cmp
shl
pushf
stos
shr
sub
mov
xchg
jae
jecxz
loopne
test
aad
fist
push
jae
fld
inc
fs
imul
in
inc
adc
setns
and
mov
daa
std
inc
add
push
pop
inc
aas
and
sub
push
int3
or
movs
outs
das
jbe
pop
mov
jg
sbb
mov
rcl
ffree
mov
mov
pop
fdivr
xchg
mov
cmp
je
retf
clc
mov
xor
fstp
into
inc
inc
int3
and
adc
jmp
add
call
nop
xchg
scas
fdiv
mov
and
push
call
addr16
out
push
js
sub
test
dec
pop
and
or
adc
cmp
sbb
sbb
dec
cmp
adc
mov
pop
ins
cmp
addr16
in
les
cmp
pop
mov
adc
mov
dec
mov
in
inc
and
jg
fsub
aaa
pusha
jmp
adc
fcomp
adc
iret
jbe
cs
loope
test
fiadd
mov
xchg
jp
inc
mov
call
(bad)
jmp
cmp
mov
inc
stos
idiv
loop
ror
and
jl
push
call
neg
push
cmps
mov
inc
cs
add
sbb
cld
fsub
xchg
pop
mov
neg
out
xor
mov
adc
retf
jb
test
cmp
int
fisub
cs
and
pusha
mov
scas
mov
xor
mov
dec
inc
lds
fbstp
push
popa
into
xchg
in
retf
cmp
ror
sub
add
mov
push
cmp
cld
fcmovnb
jmp
mov
fcomip
add
aas
loope
int3
dec
jns
jb
jecxz
inc
ret
js
pop
pop
pushf
dec
movs
iret
cdq
and
inc
into
adc
fist
outs
xor
lods
(bad)
(bad)
cmp
js
(bad)
pop
cmp
je
adc
sub
xchg
int
cdq
mov
xchg
das
ror
push
cld
rcr
jns
test
adc
fist
jbe
fdiv
movs
fs
push
cmp
cmp
push
sbb
mov
pop
pop
push
dec
sahf
std
repnz
push
and
sub
pop
and
and
add
xor
dec
movs
test
or
sar
mov
stc
test
sub
js
inc
inc
imul
jle
pop
push
cmp
cmp
adc
sbb
pop
sub
lods
nop
sub
popa
test
jle
push
push
or
jmp
cmp
rol
leave
inc
push
push
inc
push
aaa
repz
or
dec
jecxz
into
or
push
daa
das
xchg
xor
lds
xchg
add
cwde
retf
adc
fist
push
loopne
jb
pop
xor
xchg
push
(bad)
jo
jbe
push
mov
cmp
call
pop
dec
retf
pusha
sbb
add
adc
retf
push
xchg
push
xlat
jno
stos
(bad)
leave
lods
into
or
push
daa
(bad)
mov
jb
addr16
call
and
mov
adc
xor
loopne
fdivr
inc
test
add
cmp
iret
fnstcw
dec
outs
shl
and
cmps
movs
aam
fstp
stos
shl
fcomip
popa
jno
daa
or
xchg
imul
loopne
mov
dec
fdivr
das
retf
cmp
jl
xor
pushf
xor
imul
xor
int3
sbb
cdq
push
jp
and
push
or
fcom
sbb
in
fsubr
push
push
mov
fdivr
les
push
push
retf
jle
push
in
pop
frstor
pop
outs
xchg
jb
lock
(bad)
(bad)
addr16
stos
(bad)
loopne
push
inc
aam
fmul
in
loopne
aad
xchg
inc
pop
lahf
mov
xchg
arpl
fsub
dec
mov
xchg
cmc
out
fdivr
cld
add
dec
(bad)
sub
mov
(bad)
out
hlt
jl
fcomp
jne
jge
mov
add
dec
shl
xor
mov
push
int3
cld
xor
push
fadd
mov
pop
sbb
lods
(bad)
fdivr
retf
xchg
xchg
add
leave
xlat
mov
sub
add
(bad)
out
push
add
fdivr
add
cmp
mov
dec
xchg
retf
jmp
push
xor
fs
clc
das
mov
icebp
sbb
xor
fld
fmul
and
rol
fcomp
lods
jmp
jae
sub
cwde
mov
and
cmp
(bad)
ja
dec
fdiv
xor
gs
ret
fmul
sub
ja
and
jge
sub
retf
loopne
ins
test
sub
js
jl
pop
fdivr
mov
cwde
ret
jp
fmul
or
leave
int3
xor
xor
jne
call
out
pushw
das
xlat
pushf
movs
repnz
out
in
pop
inc
fcom
outs
add
dec
mov
stos
leave
sbb
dec
inc
ins
repnz
jmp
jno
dec
test
push
sub
mov
pop
test
stos
cmp
push
sub
aam
fisttp
fmul
and
pop
fsub
add
aad
ss
and
ror
jmp
xlat
fnstsw
shl
cmp
add
fisttp
leave
pop
aam
push
pop
cmp
test
fdivr
iret
cmps
jns
lahf
ins
popf
fsubr
das
push
push
into
sahf
pop
push
fsubr
push
inc
dec
and
les
jne
loope
mov
in
lock
movs
dec
aam
xor
cs
xlat
shl
or
mov
out
jae
add
cmc
cmp
mov
test
retf
fsub
mov
call
sub
mov
addr16
mov
arpl
fistp
cld
sub
mov
cwde
mov
mov
xchg
or
retf
adc
cmp
push
out
in
(bad)
and
add
sbb
pop
sbb
cmps
pop
and
dec
imul
mov
cmps
in
fsub
mov
pop
dec
xlat
ja
inc
push
loope
fcom
add
or
addr16
and
jmp
fsubr
sar
sbb
(bad)
out
mov
xchg
xlat
leave
mov
mov
fdivr
mov
rol
mov
push
sbb
push
rcr
cmp
fwait
xor
ja
rcl
mov
call
pop
jne
add
popf
fsub
cmp
into
fsub
icebp
inc
pop
or
sar
retf
sti
fmul
bound
pop
cmc
xor
fdivr
mov
aas
or
enter
movs
cmps
sub
mov
daa
call
bound
int
js
movs
fdivr
mov
push
(bad)
add
aad
fsub
mov
push
jmp
cwde
jge
fidivr
jmp
das
adc
cwde
xor
(bad)
xlat
mov
mov
in
(bad)
fwait
pop
sar
fdivr
mov
dec
mov
push
or
push
in
lods
cdq
scas
clc
dec
fdivr
(bad)
or
aad
lock
cmps
mov
mov
mov
shl
repnz
mov
out
sbb
(bad)
pop
mov
cwde
imul
push
cmp
fmul
push
push
add
xlat
push
inc
cmp
jo
jge
stos
xor
imul
or
arpl
(bad)
aaa
xor
in
shr
test
std
out
out
jns
clc
jge
xchg
les
fcmovnbe
cmc
sub
fdivr
mov
fdivr
gs
mov
jmp
cmps
js
fs
mov
xor
sti
test
or
sbb
nop
push
xor
push
jnp
add
push
out
add
fmul
outs
mov
xlat
out
push
rcpps
adc
aam
sti
jmp
inc
pop
loopne
mov
fmul
mov
dec
cmps
fcom
jmp
loope
xor
stos
cwde
call
mov
sbb
mov
adc
cmp
(bad)
pop
adc
pusha
mov
cli
mov
call
test
pop
ins
fdiv
adc
fcom
icebp
lea
fcomp
test
stos
fst
in
nop
inc
imul
and
mov
iret
jmp
or
fmul
movs
mov
xor
xchg
ret
mov
out
mov
lahf
cld
into
aas
sbb
lock
(bad)
aaa
(bad)
int3
data16
repz
imul
imul
imul
ja
push
(bad)
mov
inc
pop
call
mov
in
or
leave
push
adc
push
es
pop
fdivr
ins
lock
xchg
xchg
bound
jecxz
or
xchg
xchg
mov
imul
and
aam
pop
loopne
mov
fist
pushf
jp
xchg
sub
aas
es
mov
mov
mov
mov
repnz
ins
dec
or
movs
xchg
xchg
jno
push
mov
sbb
jg
ins
push
xchg
dec
mov
fstp
scas
mov
sbb
and
xchg
ret
jge
mov
les
loopne
adc
stos
rol
test
pop
cld
pop
pop
ja
sti
dec
fild
call
in
rol
fmul
es
int
or
cwde
inc
neg
pop
rcr
lea
fbld
or
push
in
imul
jle
enter
mov
out
addr16
xchg
or
push
fidivr
xchg
scas
push
dec
sbb
fistp
pop
(bad)
mov
push
dec
in
sub
ret
loopne
add
(bad)
or
pop
fbld
dec
pop
fisttp
mov
pop
pop
repz
stos
mov
in
jno
fs
and
ss
dec
mov
mov
or
aad
adc
xor
adc
push
das
mov
rol
jmp
jle
es
pop
push
sahf
bound
mov
mov
(bad)
xor
sbb
fstp
xchg
popa
add
ss
fst
into
int3
loopne
call
pop
stc
dec
out
addr16
push
adc
jmp
and
test
jne
out
stc
pushf
imul
fst
in
jg
aam
sar
lods
js
jmp
lods
sub
jnp
and
push
aas
xlat
jne
in
pusha
jb
push
arpl
adc
fistp
sbb
cmps
pop
les
and
push
out
inc
inc
gs
mov
cmps
je
xchg
movd
js
mov
push
inc
test
je
mov
(bad)
sbb
cdq
mov
mov
das
int
(bad)
out
sub
fild
pushf
and
pop
into
add
fmul
fwait
xor
sub
cmp
out
popf
sub
mov
sub
cmp
addr16
enter
pop
and
cmc
sbb
and
sub
jae
inc
push
into
mov
pop
jne
std
cmps
inc
inc
or
(bad)
xor
adc
test
xor
lock
jmp
(bad)
movs
push
out
rcl
call
mov
inc
jmp
loopne
pop
jns
cmp
data16
push
loop
call
mov
or
jp
sub
inc
cmps
mov
sub
in
add
and
(bad)
cmc
call
je
ja
into
popf
sub
add
inc
dec
outs
xchg
pop
and
inc
lods
pop
xor
mov
pop
push
mov
pop
outs
outs
mov
mov
enter
cmp
mov
cmc
and
fisubr
mov
popa
mov
pusha
sbb
cld
test
mov
mov
or
push
or
or
inc
push
pop
pop
xchg
shl
add
retf
in
aad
repnz
xchg
(bad)
push
mov
xchg
(bad)
sbb
cmp
push
lahf
sbb
call
sbb
push
jmp
or
aas
icebp
xchg
enter
xchg
loopne
mov
into
pop
adc
mov
dec
aas
add
mov
mov
repz
fnstenv
cmp
lock
xchg
fild
push
loop
shl
ror
xchg
gs
js
movs
mov
mov
pop
sub
mov
or
push
les
add
mov
in
cmp
js
ss
inc
hlt
ret
(bad)
jg
into
push
add
addr16
jns
or
jge
fistp
clc
cmp
push
mov
ds
sbb
sahf
mov
fsubr
jmp
pop
retf
mov
dec
pusha
mov
mov
cld
mov
int
(bad)
fwait
push
fdiv
movs
pop
pop
push
mov
into
adc
(bad)
jp
add
sbb
loope
sbb
mov
shl
sti
adc
sub
aam
push
mov
int
call
adc
cld
cmc
xlat
lahf
xor
pop
test
push
sub
jecxz
dec
call
aas
push
mov
sub
and
adc
jmp
es
clc
push
fsub
jp
fdivr
lahf
rcl
cmps
jae
fmul
mov
rcr
dec
in
loopne
pop
sbb
bound
mov
ins
push
fstp
pop
sbb
popa
adc
push
movs
and
xchg
fsubr
repnz
pushf
sar
adc
add
cmp
frstor
(bad)
aad
std
shr
sbb
xlat
pop
scas
inc
dec
mov
sub
xchg
push
fsubr
xor
fstp
cdq
dec
imul
inc
cmps
xchg
cmp
sar
inc
xchg
movs
fdiv
ins
xor
mov
das
dec
mov
sbb
push
shr
loop
fcomp
xor
mov
mov
mov
call
xor
dec
loopne
nop
aam
xchg
or
and
lods
stos
xchg
jg
fisttp
lock
push
lock
mov
fdiv
sbb
cmp
push
dec
fdiv
sub
shl
cmps
dec
push
or
push
test
int3
jb
add
out
sahf
pushf
pop
ja
fadd
cmp
jnp
stos
fdivr
sbb
call
in
scas
les
jl
mov
movs
adc
stc
inc
int
dec
ins
retf
push
call
jecxz
icebp
cwde
pop
fwait
mov
pop
popa
or
or
leave
fnstsw
mov
sbb
fstp
lods
lahf
fcom
adc
xchg
or
bound
loopne
add
movs
cs
retf
mov
fsubr
sub
jne
inc
rcl
xor
mov
jo
pop
xor
inc
and
cmp
lds
push
scas
cwde
add
fcom
sub
call
sbb
fst
or
push
scas
and
pop
and
test
bswap
fnstsw
fdiv
pop
js
pop
repz
and
fcom
and
ficom
fcomp
fmul
inc
(bad)
jnp
rol
cs
and
cld
jmp
cmp
pop
cwde
inc
pop
cmp
and
loop
dec
push
fdivr
add
fdivr
ja
mov
sbb
test
ins
cmp
xchg
fadd
ret
pushf
or
jg
enter
mov
movs
cli
fadd
dec
or
xchg
fcom
add
out
rcr
mov
dec
test
call
mov
or
fcom
xor
cwde
xchg
neg
mov
sahf
leave
test
or
lea
cmp
retf
mov
or
pop
add
fsubr
call
add
pop
stc
dec
rcr
out
lods
xor
xlat
xchg
cmc
xor
das
out
add
lds
fdiv
shl
fld
icebp
adc
or
dec
rcl
out
fsubr
cmp
add
gs
cdq
or
in
add
fild
mov
sub
shl
or
dec
mov
loop
or
adc
push
std
push
scas
loope
xchg
fadd
inc
addr16
sti
dec
fmul
and
(bad)
repz
lea
pop
jmp
in
(bad)
clc
pop
pop
leave
shl
fdiv
enter
movs
sub
xchg
repz
fcom
shl
jmp
(bad)
push
mov
retf
(bad)
stos
pop
movs
xor
mov
mov
jbe
sub
(bad)
scas
scas
and
jge
fcomp
pushf
aas
mov
ins
push
mov
jp
pop
jo
or
stos
pop
pop
sub
cs
frstor
std
(bad)
push
sahf
pop
mov
idiv
jne
icebp
adc
add
cmc
jo
(bad)
aam
cmp
or
sub
adc
call
and
aas
sahf
fsub
cmc
stc
bound
xchg
inc
cmp
add
addr16
hlt
fadd
pop
mov
mov
loopne
mov
xchg
pop
push
and
enter
push
sub
js
fbstp
fwait
push
test
xchg
cmp
outs
push
js
push
cmp
add
xor
mov
sar
xchg
js
fcmovnu
jb
lahf
icebp
ret
jb
sub
ins
out
(bad)
in
mov
fdiv
mov
sub
out
repz
fld
lock
movs
mov
jns
xor
(bad)
cs
out
xchg
jp
or
push
outs
ja
push
mov
js
jg
xlat
stos
mov
push
lods
push
pop
loopne
in
pop
ins
sub
addr16
fadd
leave
mov
xchg
dec
or
dec
mov
scas
xlat
or
push
in
adc
sar
sub
aas
aam
cs
outs
xor
add
pop
rcl
xor
inc
pop
or
js
mov
aaa
pop
xchg
iret
jns
mov
push
jns
call
mov
sbb
dec
mov
cmp
jle
xchg
mov
les
and
mov
and
lds
jmp
dec
iret
push
scas
xor
test
leave
add
(bad)
inc
push
inc
push
xor
adc
dec
rep
jbe
cmp
sbb
sbb
mov
xchg
sub
stos
pop
adc
js
inc
arpl
ror
or
fcomp
hlt
mov
push
mov
inc
or
sbb
add
mov
cmp
ret
jle
js
js
fist
pop
std
mov
mov
pusha
jo
les
xchg
and
add
pusha
adc
popf
lock
push
mov
inc
lds
xchg
test
outs
mov
mov
xchg
imul
fsub
jno
enter
add
int
mov
push
inc
xchg
sbb
shl
cmp
adc
popf
jp
add
pop
and
mov
mov
xchg
sbb
xchg
or
pop
pop
jne
dec
push
(bad)
dec
inc
je
enter
jbe
cmp
aaa
les
movs
pop
push
jle
and
mov
pop
dec
outs
inc
ss
fs
mov
ds
dec
jns
xchg
inc
sub
repz
xlat
stos
sub
inc
pop
in
and
in
loop
mov
xchg
aam
push
call
jb
sub
(bad)
lods
mov
call
shl
cdq
jl
aam
push
cdq
stos
lods
ficomp
add
add
int
sbb
mov
lahf
test
loopne
cmp
nop
xchg
pop
and
(bad)
and
repnz
or
mov
les
inc
jmp
aam
icebp
stos
(bad)
out
push
mov
rep
movs
jns
fucomi
pop
inc
aas
daa
fldcw
retf
push
mov
out
lods
es
push
or
mov
or
sub
pushf
or
int3
mov
test
mov
dec
dec
(bad)
push
xchg
or
out
rcr
(bad)
popf
mov
adc
dec
das
in
mov
int3
daa
sbb
cmp
pop
into
xor
out
aas
xchg
sbb
inc
(bad)
sbb
loopne
sar
fcmovnu
pusha
fbld
repnz
sub
call
(bad)
sbb
pop
xlat
add
lods
and
sti
fs
retf
adc
fwait
inc
mov
imul
pushf
xor
add
or
arpl
pop
cmp
sahf
cmps
xlat
nop
cmp
pop
daa
push
mov
jae
push
out
mov
sbb
ja
push
dec
fs
mov
fnsave
xchg
and
xlat
ss
nop
das
test
sbb
or
xchg
fdivrp
(bad)
sahf
loopne
sub
fldcw
jo
jno
ret
aas
cli
or
inc
fnstenv
sub
mov
mov
call
xchg
sbb
in
push
and
out
jp
and
mov
inc
pop
test
push
jae
pop
xor
pop
sub
push
fsubrp
int3
sbb
add
pusha
clc
or
stos
fild
xchg
lods
mov
movs
(bad)
and
aaa
pop
push
rcl
aas
xchg
mov
adc
xor
loope
pop
push
(bad)
rol
mov
out
xlat
pusha
adc
pop
add
int3
nop
mov
ds
inc
add
jae
jno
lods
fwait
scas
retf
jne
dec
pushf
dec
push
pop
fbld
sub
adc
scas
and
std
mov
or
scas
out
fiadd
xor
pushf
enter
sbb
jbe
fldenv
or
push
(bad)
rol
pusha
shl
mov
sbb
ss
dec
sub
inc
stos
je
pop
test
xchg
adc
xor
loopne
jbe
push
aam
push
cdq
div
jmp
out
inc
lods
cdq
outs
jns
enter
cmp
popa
xor
mov
jb
(bad)
jle
and
jno
pop
repz
pop
(bad)
add
adc
mov
stc
cld
jmp
shl
leave
ret
shl
mov
xchg
pop
stos
pop
xchg
pop
aas
sbb
sar
fist
pushf
mov
les
mov
lea
jl
out
mov
repnz
pop
fistp
cmps
cmp
cmps
out
outs
das
imul
push
sar
rcl
loopne
sbb
xor
sbb
sbb
push
push
adc
add
in
inc
xchg
mov
mov
and
add
outs
repnz
or
addr16
cmp
cmc
push
mov
ds
inc
call
(bad)
int3
xchg
movs
mov
cdq
and
dec
in
inc
test
ret
xchg
or
add
hlt
mov
les
add
jns
jg
jns
pop
enter
test
fimul
loopne
mov
fcomip
mov
jmp
inc
pusha
aad
push
add
call
xchg
sbb
inc
pop
fistp
jo
mov
mov
inc
les
es
movs
push
inc
dec
ins
imul
mov
(bad)
repz
inc
pop
mov
xchg
sub
xchg
dec
jle
shl
mov
push
dec
movs
jl
jp
and
lahf
ret
dec
pop
jl
jb
loopne
fcmovnb
push
push
dec
jmp
mov
loopne
xor
inc
loopne
inc
jo
and
out
xchg
mov
pop
hlt
and
jmp
jmp
cmp
outs
and
fnstcw
add
inc
lods
mov
jae
fbld
ins
stc
iret
pop
xor
xchg
add
fist
ret
push
or
sub
push
gs
retf
push
sub
and
lock
pusha
call
xchg
mov
popa
cmp
adc
jns
mov
push
jge
inc
int
lods
sbb
cld
dec
or
(bad)
retf
sub
enter
test
or
fld
jb
shl
inc
fnsave
inc
pushf
aas
mov
iret
test
dec
mov
push
icebp
adc
cs
js
xchg
cmp
test
inc
shr
and
jb
js
(bad)
popf
(bad)
rol
(bad)
fisttp
mov
mov
mov
js
cwde
cld
pusha
push
mov
movs
cmps
test
test
mov
or
or
mov
and
neg
or
retf
call
xlat
gs
pop
dec
lahf
jae
jne
fisttp
in
jne
lods
call
ficom
mov
mov
(bad)
cli
xchg
call
retf
arpl
data16
push
cli
cmp
jne
xor
push
lock
jo
mov
nop
jp
add
neg
imul
add
iret
mov
fnstenv
lds
loopne
dec
fldenv
aad
ret
loopne
jb
lea
dec
xchg
aas
add
inc
inc
xchg
pop
sti
mov
add
jge
lds
das
aas
enter
mov
adc
out
in
iret
pop
mov
or
ins
fbstp
fwait
int3
in
shl
aad
aaa
cmc
and
fcomp
(bad)
mov
dec
stos
sbb
mov
mov
or
cmp
leave
pop
sahf
out
push
mov
call
cmps
xor
js
(bad)
iret
sbb
xor
jl
fcomp
pop
and
xchg
and
cmp
and
push
data16
cmp
(bad)
adc
into
inc
add
xor
int
xchg
cmc
mov
jno
int
(bad)
ja
shl
arpl
sahf
ret
mov
push
dec
test
fiadd
nop
xchg
fcomip
cld
cmp
xchg
fnstcw
sbb
pop
shl
mov
pop
imul
mov
je
jle
pop
xchg
in
pop
xor
cmp
pusha
shr
and
pop
repz
xchg
or
inc
jne
pop
or
lahf
mov
into
rcr
test
dec
outs
cmp
mov
sub
aad
leave
jns
aas
dec
pop
pop
dec
mov
or
vaddsubpd
movs
in
mov
push
aas
aam
pop
mov
xchg
sar
sub
jnp
outs
lahf
idiv
repz
xchg
cmp
adc
jne
jo
popa
fidivr
mov
pop
dec
mov
fisub
dec
xadd
addr16
mov
mov
jmp
or
movs
and
outs
xchg
push
mov
cs
xchg
jp
mov
daa
mov
dec
mov
pushf
xchg
out
add
ror
lea
aad
fidivr
je
pop
loopne
push
test
add
(bad)
test
pop
inc
add
fdivr
fisttp
push
(bad)
(bad)
out
aam
mov
loope
pop
fsubp
sub
push
test
arpl
xor
jl
add
int
call
stos
aas
lmsw
fcom
xor
add
leave
scas
cwde
loopne
not
fs
dec
cmp
pop
and
or
pop
xlat
jnp
sub
rcl
mov
mov
imul
add
(bad)
(bad)
xlat
ss
or
icebp
int
ror
push
mov
dec
pushf
jmp
push
fwait
popf
jnp
fist
push
repz
cwde
mov
dec
mov
leave
sub
outs
jg
cmp
sar
int
sbb
ficomp
sbb
(bad)
xor
call
aaa
push
fild
push
inc
mov
sbb
sbb
mov
or
fnstcw
jbe
jne
xor
xchg
call
(bad)
ror
inc
sar
scas
lahf
outs
js
cli
ja
inc
xchg
mov
aas
adc
(bad)
dec
lds
out
mov
pop
fistp
loop
inc
inc
and
push
loope
sub
sub
popf
outs
jae
adc
jns
or
and
or
mov
mov
dec
out
cdq
add
adc
inc
(bad)
jl
xchg
push
jo
fiadd
jge
stos
fst
ins
out
ror
fwait
jb
or
and
mov
mov
out
sahf
sbb
and
push
push
cmps
imul
ror
out
add
add
fnstcw
pop
jae
test
lock
js
dec
pop
or
dec
mov
add
mov
cli
or
leave
inc
dec
mov
push
aad
aas
(bad)
mov
xchg
fwait
(bad)
and
mov
cmp
or
fcmove
popf
cdq
mov
cmps
mov
loopne
stc
push
cmp
loope
repz
xor
out
or
jg
push
outs
inc
dec
mov
xlat
and
cmp
repz
cdq
imul
jmp
mov
sbb
sbb
mov
rcr
and
and
jno
sti
adc
mov
or
fisttp
mov
mov
xchg
sbb
imul
(bad)
stc
and
inc
dec
loopne
add
and
mov
inc
mov
(bad)
and
fistp
adc
adc
int
jmp
ds
mov
push
into
cli
jp
jbe
jbe
rol
or
jp
aas
cmp
xchg
pop
movs
mov
sahf
fstp
repnz
sub
dec
dec
lds
neg
loope
inc
mov
push
loopne
imul
imul
arpl
icebp
cmps
xor
xchg
adc
sbb
jle
hlt
jmp
lds
mov
js
out
icebp
mov
mov
sbb
frstor
push
loopne
inc
mov
aam
jmp
jae
push
out
aas
sahf
pop
lock
cmp
dec
push
fist
adc
mov
jne
es
mov
ret
cmp
aas
int3
mov
mov
(bad)
xor
add
or
pop
frstor
xchg
sbb
nop
out
pop
xchg
sbb
fist
test
bound
lock
mov
and
sbb
pushf
arpl
push
outs
sbb
stos
mov
mov
mov
fwait
in
or
aaa
mov
fmul
cmc
enter
pop
aas
vsqrtss
mov
stos
pop
jno
loop
in
into
ror
or
push
call
mov
mov
jae
push
push
mov
aas
dec
cwde
xchg
pop
add
jg
pushf
jl
mov
call
mov
into
sbb
sar
xor
cmp
stc
inc
adc
frstor
fisub
(bad)
fild
out
mov
mov
xor
loopne
arpl
movs
xlat
pop
jmp
lds
and
fst
fcomip
xchg
fiadd
fidiv
jg
loop
push
nop
aas
pop
xor
das
sbb
cmp
mov
jb
fst
mov
sar
add
aas
iret
or
shl
mov
arpl
sub
ficomp
dec
push
icebp
mov
pop
arpl
int
pop
push
or
jbe
and
sbb
shl
es
sub
cli
or
leave
inc
das
call
pushf
adc
or
mov
or
cmp
push
ds
adc
push
sub
jecxz
push
mov
sbb
dec
bound
xor
mov
inc
cwde
add
sbb
pusha
and
popf
loopne
jmp
mov
adc
inc
setne
jae
out
xor
or
jns
sbb
sbb
sbb
adc
loopne
mov
xchg
mov
mov
in
jg
aad
inc
ja
mov
js
add
xchg
xor
out
mov
jge
sub
sub
and
js
leave
pusha
jno
jmp
xor
lahf
jp
dec
shl
pop
not
or
ja
outs
loopne
jae
call
lock
out
test
mov
cmp
xchg
je
ret
and
cmp
fcmovnb
loopne
dec
xlat
out
(bad)
pop
xchg
sbb
mov
fnsave
mov
and
retf
and
jmp
jmp
sub
int
pop
or
and
dec
sbb
push
xchg
inc
push
pop
add
inc
test
out
xor
cmp
inc
data16
adc
mov
push
fdivrp
mov
and
dec
and
xchg
adc
fidivr
int
nop
xlat
movs
sub
inc
xor
ja
xor
nop
into
jp
(bad)
xchg
retf
ror
arpl
pop
inc
mov
ret
ja
or
fiadd
imul
loopne
sar
clc
pop
inc
rol
adc
into
sbb
and
mov
dec
cmp
aaa
cmp
inc
pop
fsub
adc
ret
out
ret
outs
cmc
ss
js
fsub
int3
imul
sub
mov
scas
ffreep
mov
cmp
mov
and
mov
adc
cs
push
int
jp
sti
cmp
data16
call
xchg
fwait
xor
dec
iret
cwde
fld
stos
cmc
ficomp
jmp
jg
or
pop
int3
mov
sbb
js
leave
imul
fist
call
and
sbb
(bad)
xor
or
dec
adc
aad
sub
add
inc
push
push
repnz
push
stos
mov
mov
imul
fdiv
outs
add
pop
mov
lds
pusha
pop
inc
mov
gs
adc
jae
neg
cdq
out
cmp
mov
jbe
cmp
push
mov
rcl
fs
or
test
fdivrp
mov
iret
neg
loopne
push
aad
aas
dec
mov
jmp
rcl
sbb
fbld
sub
adc
jb
or
(bad)
repz
xor
xchg
imul
jle
push
mov
push
out
push
les
mov
sub
call
movs
sub
adc
stos
mov
jp
inc
pop
pusha
pop
cmp
out
fist
xchg
out
test
or
test
aad
push
cmp
xlat
stos
popa
loopne
cmp
or
in
fimul
aad
xchg
sub
lahf
add
mul
jl
leave
sub
out
mov
mov
(bad)
call
adc
xchg
and
xchg
loopne
ins
push
test
pop
mov
dec
mov
mov
in
rol
sar
mov
and
iret
inc
add
pop
push
jmp
sti
sub
idiv
inc
sbb
and
and
mov
jo
cmps
call
jno
cs
nop
mov
add
sub
(bad)
aas
outs
sub
ret
mov
or
sub
js
test
lods
or
cmc
inc
ret
or
repz
adc
xor
dec
push
xchg
and
adc
mov
aas
xor
cmp
jge
in
xchg
mov
jbe
dec
add
hlt
xor
sti
scas
or
inc
loop
push
adc
inc
sub
mov
mov
sti
cmps
jl
(bad)
mov
retf
int
bound
xchg
xchg
cmp
jno
mov
popf
inc
pushf
iret
dec
cwde
imul
jl
xchg
test
dec
jae
mov
inc
or
out
mov
sub
pop
aam
mov
cmp
mov
lds
call
(bad)
icebp
(bad)
not
push
rol
push
stos
mov
xchg
jo
rcl
jb
imul
lock
test
cld
jle
retf
sub
add
cdq
xchg
loopne
dec
jo
cmp
or
nop
pusha
hlt
test
out
mov
into
pop
cmc
mov
push
mov
xchg
cmp
sub
pop
fdivr
jl
ret
loopne
push
(bad)
pusha
pop
cmp
or
sub
fisttp
fnsave
popf
adc
inc
retf
mov
leave
or
jp
mov
or
cdq
sub
scas
xor
js
test
fbld
push
xchg
jae
out
imul
sbb
pop
xchg
call
and
jo
xor
mov
jg
xchg
out
cld
jns
fst
or
jecxz
cdq
aas
ss
push
add
or
out
enter
mov
fiadd
cmp
or
jl
jbe
in
int3
movs
scas
cmp
ror
jg
pushf
nop
inc
sahf
xlat
or
movs
sub
out
ret
out
cdq
enter
call
repz
cmp
cs
js
jle
pop
jne
fldcw
in
mov
inc
loop
pop
daa
fdiv
add
pop
jmp
jo
call
push
rol
stc
cwde
(bad)
sahf
mov
lock
repnz
jbe
mov
xor
mov
cmp
dec
cmc
cmps
pop
fs
ds
push
ja
movs
out
sub
inc
call
ror
pop
out
js
pop
xchg
adc
push
mov
and
sti
xchg
scas
push
mov
jne
sbb
loopne
(bad)
fdivp
mov
or
inc
xlat
xchg
cwde
jo
nop
fwait
mov
ins
push
inc
sub
mov
nop
xchg
aam
out
cdq
cwde
jnp
retf
inc
push
xor
addr16
xchg
cmp
call
push
or
push
mov
pop
pop
cld
ficomp
jmp
pop
movs
addr16
adc
aas
cdq
mov
jae
jg
push
rcr
jnp
sub
ins
jp
std
(bad)
and
pop
inc
jns
clc
arpl
div
push
xchg
les
fbld
mov
leave
adc
shr
inc
push
repz
out
ret
xor
cmp
adc
cmp
inc
mov
loop
out
pop
das
int
lds
sub
add
push
xchg
jae
push
test
inc
mov
repnz
pusha
inc
sub
shl
sbb
push
dec
sub
adc
and
dec
out
loopne
pop
jns
lock
pop
jp
aas
cmp
addr16
(bad)
pop
jb
popf
sbb
sub
fisub
in
or
sbb
mov
dec
xor
pusha
jmp
xlat
imul
mov
loopne
sbb
add
xor
fcomp
stos
pop
test
leave
jle
enter
imul
xchg
xchg
imul
inc
xlat
dec
mov
jnp
rol
xchg
clc
mov
or
xchg
sub
dec
clc
mov
(bad)
xchg
jnp
add
xor
rcl
jns
add
mov
add
es
dec
sub
fisttp
dec
ds
in
ja
push
pusha
mov
push
dec
and
leave
mov
test
enter
(bad)
cld
dec
out
adc
jb
xor
stos
ds
rcl
fst
xor
pusha
xor
mov
sti
mov
dec
(bad)
cmp
xor
(bad)
mov
inc
ror
pop
adc
daa
pop
aam
mov
mov
or
loopne
lock
xor
cmps
stos
shr
iret
and
cmc
outs
xor
cld
xor
xchg
mov
in
inc
(bad)
push
adc
pusha
js
add
aam
xchg
out
mov
sar
jmp
lahf
test
and
mov
lods
sub
iret
dec
dec
jmp
into
sbb
mov
push
nop
rcl
sar
and
dec
push
movs
fdiv
inc
mov
adc
fbstp
pop
retf
adc
mov
jb
data16
or
jb
fidivr
add
inc
loope
push
or
lds
sub
push
psubb
(bad)
out
les
xor
(bad)
dec
fisub
bnd
xor
js
dec
fcom
movs
xor
sub
bound
rcl
push
dec
retf
xchg
cmp
and
xchg
dec
in
(bad)
fsub
(bad)
addr16
dec
loope
inc
fist
xor
jnp
in
add
(bad)
(bad)
jmp
idiv
cwde
sbb
dec
mov
jl
pop
and
bound
push
jno
add
test
dec
les
add
push
fadd
out
cmp
or
pop
loopne
adc
jp
fcom
pusha
push
dec
rcr
sub
lea
dec
jne
mov
test
fwait
push
sbb
loopne
mov
mov
mov
sub
addr16
repnz
inc
int
rol
xor
cmp
shl
xchg
jmp
cmp
sub
xor
ins
mov
xor
jae
xor
fnstsw
xor
pop
dec
dec
test
adc
out
imul
jl
aas
sbb
push
frstor
int3
jne
cmp
loopne
or
lock
dec
cdq
int
ds
push
dec
(bad)
pop
loopne
out
mov
ss
or
mov
ror
shr
pop
inc
pusha
(bad)
scas
vcvtsd2ss
int
push
inc
pop
pop
pop
les
mov
test
stos
enter
inc
ret
fnstcw
dec
int3
jb
mov
fidivr
and
mov
inc
lahf
jnp
cmp
adc
popf
push
aas
jmp
mov
out
xor
or
and
mov
add
jo
adc
adc
and
or
add
mov
and
scas
rcr
cmc
imul
ja
and
pop
inc
inc
or
cdq
scas
push
in
je
push
mov
and
xor
test
or
cmp
or
xchg
sub
not
out
pop
aaa
clc
push
fbld
xor
add
mov
movs
scas
push
pop
or
and
sub
mov
cwde
jbe
xchg
jge
fild
(bad)
jns
in
enter
cld
push
cmps
(bad)
int
cmps
mov
lods
jae
leave
and
inc
mov
and
xchg
hlt
adc
inc
fdivr
add
jns
ss
scas
cmp
inc
retf
inc
stos
inc
sti
push
imul
mov
mov
loop
inc
(bad)
xlat
xchg
push
sbb
jecxz
pusha
adc
out
sbb
push
or
sbb
aas
push
pop
cmp
ds
test
and
sbb
sbb
jmp
mov
jbe
cmps
cmp
pop
pusha
adc
int
inc
mov
clc
jmp
adc
and
mov
xchg
call
sbb
pop
daa
fnstcw
jp
pop
sub
inc
int3
(bad)
jl
test
xchg
add
test
pop
add
pop
repz
test
mov
fist
mov
in
mov
sbb
push
outs
addr16
fcomp
mov
dec
pop
loop
das
ss
fist
pop
push
repz
sbb
and
xchg
aas
imul
out
in
or
dec
pushf
nop
dec
pop
mov
mov
into
rcl
push
xor
inc
jecxz
stos
not
loop
and
push
aaa
lds
or
xchg
or
cmp
cs
ins
lds
push
retf
mov
outs
out
sbb
lea
sahf
fdivr
aas
and
pop
fnstsw
dec
ret
cs
and
stos
add
test
mov
dec
enter
xor
mov
mov
mov
outs
rcr
and
in
jno
scas
dec
cld
and
mov
pusha
sbb
mov
imul
inc
dec
icebp
loopne
and
pop
dec
cwde
cdq
sar
dec
retf
adc
shl
inc
cli
jmp
xchg
pop
cwde
add
add
jbe
js
adc
cli
pusha
mov
jmp
dec
ja
call
push
test
mov
jecxz
mov
aas
clc
and
fcmovne
pop
push
dec
dec
mov
mov
inc
sub
mov
mov
xor
adc
outs
fwait
or
jne
lock
ret
adc
jns
test
cmp
xor
test
or
xchg
mov
jmp
retf
mov
mov
mov
jb
stos
dec
and
ins
nop
adc
outs
(bad)
and
aad
inc
xor
jecxz
xlat
lock
cmp
inc
retf
cmps
pop
movs
and
and
jb
sub
fst
int3
lahf
dec
fldcw
imul
gs
test
call
fwait
ror
pusha
and
adc
je
xor
stos
sbb
dec
jmp
sbb
aas
xchg
jbe
outs
or
imul
jns
stc
cmp
test
sbb
xor
fcos
pop
scas
adc
sahf
inc
mov
jecxz
int
jl
push
adc
into
pop
xchg
xchg
push
shl
pop
cmp
(bad)
pop
or
add
adc
nop
pop
push
aas
inc
mov
ds
pop
inc
mov
sbb
push
loopne
sub
rdpmc
fs
jp
jb
sbb
add
xor
clc
loopne
or
popa
enter
push
scas
and
and
sbb
int3
(bad)
fwait
push
mov
mov
mov
test
pop
out
add
into
es
iret
iret
push
push
mov
inc
arpl
fist
leave
fild
and
clc
bnd
mov
out
mov
or
cmp
aas
repnz
xchg
cs
push
xchg
jae
test
cmp
inc
cmp
adc
leave
jmp
and
outs
mov
fild
jecxz
mov
inc
pusha
das
int3
shl
popf
mov
sub
pusha
push
xor
into
xlat
pop
sbb
adc
scas
pop
dec
gs
bound
jg
inc
(bad)
mov
sbb
movs
and
mov
sbb
iret
cdq
push
mov
xchg
aas
loopne
and
mov
repnz
cli
out
retf
cmp
lahf
and
sub
jg
pusha
rcl
dec
not
push
mov
lds
int
fild
mov
xor
jg
push
sahf
mov
or
out
xchg
dec
push
or
lea
dec
jb
xor
sbb
mov
leave
int
xor
inc
mov
xor
retf
fcomip
in
sbb
or
loopne
inc
or
int3
push
push
adc
pusha
retf
mov
je
fnstcw
inc
dec
loope
pop
call
xchg
popa
movs
add
add
cs
outs
xchg
fcomp
stos
jle
js
dec
mov
and
cmp
mov
mov
sub
sub
jbe
jmp
cmp
adc
mov
jg
cmp
aas
pop
out
sahf
bound
into
mov
lods
dec
and
es
sahf
js
xor
jmp
or
sub
data16
popf
xor
inc
popf
cdq
inc
adc
popf
ret
xchg
cmp
inc
jnp
ror
mov
cmp
js
add
rcr
cs
mov
xlat
(bad)
cmp
aam
mov
pop
inc
ficomp
mov
xchg
pop
daa
cmp
push
and
sub
and
jp
faddp
push
sbb
pop
xchg
xor
dec
test
jns
pushf
xchg
out
scas
les
cmp
and
push
js
inc
add
addr16
push
bound
jmp
add
and
xor
fnstenv
xchg
jle
mov
movs
mov
or
mov
out
xchg
cmp
or
pop
mov
mov
inc
fisttp
fist
mov
bound
mov
xor
scas
cmps
cmp
icebp
or
ds
jbe
in
stc
ja
outs
inc
pop
shr
jo
mov
adc
(bad)
and
or
movs
(bad)
fisttp
bound
test
shl
cmp
inc
and
sbb
inc
in
popf
jmp
and
sub
ror
std
pop
xchg
push
call
xchg
add
call
mov
and
or
push
pusha
fimul
test
jno
ins
and
mov
xchg
sub
jns
ins
push
fsub
pushf
xchg
mov
jmp
dec
in
movs
and
or
mov
fadd
push
mov
test
outs
enter
jl
pop
xchg
outs
into
dec
call
pop
pushf
mov
repnz
sbb
sar
std
mov
lahf
cmp
inc
ins
je
pop
aas
jnp
scas
mov
call
pusha
mov
cld
scas
mov
mov
stos
adc
inc
(bad)
jmp
inc
cmp
and
xchg
push
dec
fist
inc
ins
xor
ret
add
mov
pop
cdq
cmp
add
add
call
push
sbb
xchg
retf
mov
or
push
xor
icebp
into
ss
push
push
fldcw
adc
adc
cmp
arpl
and
and
ror
fist
setne
rcr
inc
mov
push
push
dec
dec
jns
mov
sbb
in
or
fwait
jmp
icebp
repz
ds
jg
push
stos
or
movs
or
into
jle
fsubrp
sbb
std
lock
iret
pop
int
cmp
lds
jo
mov
fbld
cmps
int
std
scas
jne
and
xor
jmp
xchg
mov
or
pop
and
stos
push
adc
dec
cmp
xor
sar
mov
add
into
push
jae
add
pop
dec
sti
(bad)
mov
push
mov
mov
jp
fndisi(8087
jbe
in
mov
xchg
rcr
fcomp
test
ror
out
rcr
pop
(bad)
and
pop
pop
loopne
lea
xlat
cli
push
fcomip
inc
ins
adc
pop
stc
push
loopne
(bad)
mov
fisttp
test
rcr
sub
inc
je
ret
cli
cli
loope
lds
add
or
jo
sbb
fucom
dec
mov
sbb
ficomp
dec
ja
ins
out
sbb
sub
jecxz
fcomp
inc
pop
inc
and
clc
push
call
sub
mov
arpl
or
or
jl
call
nop
inc
cmp
jnp
enter
test
mov
mov
cdq
sbb
neg
jle
call
pusha
out
cmc
sbb
shl
or
gs
arpl
add
(bad)
nop
into
lods
sbb
xor
jb
(bad)
clc
lods
push
cmp
pusha
mov
push
push
fist
imul
pusha
addr16
les
aas
and
ret
loope
or
loop
xor
or
in
xor
test
leave
inc
and
pusha
dec
push
bts
cmp
jo
sbb
in
imul
inc
adc
std
pop
sahf
and
fnclex
and
rol
dec
and
fnstsw
jbe
pop
sub
xchg
mov
adc
jbe
cmps
shl
fisttp
cmp
cmp
loopne
pop
mov
int
leave
(bad)
lea
adc
push
dec
push
mov
out
or
or
into
js
pop
mov
or
int
loope
mov
dec
(bad)
mov
mov
mov
or
fucomip
aas
add
mov
pop
je
cwde
or
fwait
mov
pop
or
inc
xchg
rcr
xchg
lods
jo
js
jno
mov
inc
mov
ret
pop
jns
ror
or
lock
xor
mov
inc
imul
adc
iret
shl
jns
test
data16
adc
loope
or
pop
or
xchg
das
scas
push
int
sub
add
push
and
add
jbe
xchg
fld
fist
retf
loopne
pop
xchg
dec
mov
aas
and
test
mov
mov
neg
and
stos
mov
dec
pop
test
cs
cmp
cdq
ds
sub
stos
jne
jg
dec
cmps
jnp
sub
js
mov
jp
fild
sub
xlat
jno
(bad)
adc
add
arpl
iret
mov
out
sbb
or
retf
cmp
cmp
js
inc
popa
or
and
pop
pop
mov
inc
cli
push
in
mov
(bad)
jmp
dec
jecxz
mov
ficom
fidivr
dec
jne
mov
(bad)
mov
sub
(bad)
and
adc
movs
into
xchg
jecxz
mov
popf
mov
pop
push
push
sub
push
inc
pop
call
shl
inc
int3
stos
ficom
sar
shl
sbb
and
mov
mov
cmp
imul
fimul
leave
mov
push
ficomp
pop
xor
lods
push
fild
imul
pop
out
pop
xor
inc
in
aam
out
and
add
add
retf
fnsave
push
sbb
mov
in
mov
xor
fcmovnu
mov
sub
in
mov
jae
fidivr
mov
xor
in
shrd
adc
sbb
jl
sbb
aas
movs
jb
and
cs
mul
xor
push
sbb
pop
fwait
dec
push
push
mov
dec
cmps
bound
push
sbb
enter
sbb
jo
fadd
mov
lds
cmc
mov
xchg
imul
mov
or
adc
shl
sub
xchg
or
push
pop
mov
xchg
loopne
cmp
shl
test
push
add
aaa
call
xchg
push
pop
rol
jo
push
ret
xor
sub
js
push
xchg
push
and
jmp
lods
or
and
lods
xlat
inc
test
pop
call
sahf
stos
test
add
sub
pop
jae
lds
mov
pushf
xchg
int
or
xor
fidivr
out
aad
and
mov
into
jl
dec
inc
clc
pop
(bad)
sub
sub
mov
cli
jmp
repnz
leave
mov
(bad)
(bad)
push
and
inc
and
sub
(bad)
and
pop
lods
stos
fwait
push
in
dec
outs
in
dec
cmp
or
icebp
push
ss
test
or
out
shl
dec
push
call
test
rcl
sub
ins
pop
xor
pop
ret
inc
test
dec
std
mov
mov
inc
out
xor
mov
cmp
cmp
xchg
xlat
imul
cdq
add
mov
push
mov
mov
lahf
arpl
push
mov
mov
and
pusha
mov
xor
mov
cmps
and
(bad)
in
sub
sbb
mov
cwde
ror
mov
mov
jae
mov
rcl
(bad)
mov
add
icebp
cmp
rcl
inc
mov
and
loope
dec
cli
jl
out
mov
out
(bad)
adc
cmp
cmp
sub
popa
ins
xlat
cdq
test
test
mov
jnp
xor
sti
pop
jbe
(bad)
xor
mov
cwde
popa
test
es
push
lds
mov
inc
lea
test
bound
dec
(bad)
pop
mov
dec
lods
pop
and
(bad)
jne
enter
add
fistp
(bad)
xor
int3
dec
mov
cdq
pop
daa
ror
jbe
xchg
stos
push
xchg
xor
(bad)
dec
mov
and
pusha
fidiv
cwde
jmp
fwait
pop
into
push
cmp
sbb
fisttp
pop
dec
jl
xor
movs
into
mov
int3
fsub
mov
xchg
aad
dec
pop
idiv
pop
pop
add
bnd
push
shr
xchg
xor
sbb
and
xor
sbb
lds
es
add
dec
or
xor
dec
fld
cmc
clc
or
pop
test
leave
inc
sub
lds
push
jle
jb
push
out
jg
test
(bad)
and
popf
outs
cmp
ds
dec
dec
cwde
aad
xchg
cld
ss
dec
int
repz
pop
push
int3
js
mov
inc
shl
ins
jg
fwait
sbb
lods
leave
xor
frstor
jno
cld
xor
sub
outs
imul
dec
inc
xchg
loopne
jle
sub
adc
xchg
(bad)
test
push
adc
enter
mov
das
xchg
mov
inc
stos
rcr
cmp
cmps
mov
sub
fisubr
mov
sub
cmc
iret
jecxz
jmp
(bad)
loopne
add
movs
push
fdiv
movs
es
sub
jo
jmp
imul
jp
pushf
aas
rcr
in
shr
and
xor
pushf
cli
and
lock
jge
imul
cld
xchg
xor
sub
or
cdq
aaa
test
outs
cmp
mov
pop
sub
push
test
xchg
out
ja
cmp
xchg
test
pop
push
das
adc
jl
or
pusha
movs
sub
loopne
mov
jns
or
adc
fisubr
xlat
leave
mov
dec
cld
outs
aam
dec
push
push
in
inc
sub
sub
inc
(bad)
fsubr
jge
and
ficom
cmp
js
mov
mov
jno
adc
ja
sub
nop
push
in
fisub
mov
fimul
leave
inc
rol
jmp
xor
jbe
sahf
repz
dec
std
xchg
sbb
hlt
jle
in
jno
ins
(bad)
pop
es
add
xchg
dec
fwait
xchg
repz
mov
pusha
rol
sbb
inc
mov
push
adc
aam
js
or
ret
mov
pop
jnp
jmp
adc
sbb
sub
xchg
pop
jo
fcomip
pushf
push
mov
mov
xor
sub
pextrw
test
inc
je
add
or
enter
cwde
cmc
pusha
dec
or
sbb
and
push
fmulp
fcmovu
js
mov
or
shl
jns
pop
inc
xchg
movs
push
sub
and
mov
frstor
movs
mov
arpl
xlat
out
dec
fild
dec
jp
ficomp
jnp
dec
add
jb
pop
out
movs
jmp
ins
xlat
std
and
int
mov
cmp
outs
push
retf
or
repz
or
xchg
push
xlat
rcl
mov
cmps
mov
push
(bad)
mov
sbb
daa
or
jo
push
jo
sbb
and
pop
sub
fcmovb
or
push
stos
das
aas
sbb
push
cmp
mov
pop
fistp
enter
add
stc
ja
mov
or
(bad)
data16
enter
hlt
pop
js
sbb
mov
or
pop
lods
(bad)
loopne
mov
js
xchg
and
cmp
je
jl
lea
sub
aam
dec
xor
in
sbb
mov
addr16
fsub
xor
xlat
inc
leave
sti
add
add
and
inc
push
jl
fadd
stos
sub
and
loopne
dec
sbb
int
scas
shr
lock
mov
enter
outs
loopne
jno
xor
adc
mov
dec
leave
sbb
dec
and
jb
cmp
int
jmp
fsub
aas
dec
xchg
dec
and
xchg
inc
es
jb
add
pop
cdq
pop
hlt
add
mov
vpmacssdqh
ds
sbb
test
lea
mov
jp
cmp
aas
cdq
into
fidiv
sbb
pop
mov
adc
push
push
jnp
fcmove
inc
loopne
dec
xor
pop
push
js
dec
mov
repnz
sbb
stos
and
in
fucomip
sub
pusha
popf
and
stc
sbb
mov
(bad)
xchg
bound
in
and
cld
(bad)
imul
jmp
cmp
adc
cmp
fisttp
push
pop
add
xchg
pop
dec
push
inc
repnz
inc
add
sub
xor
cli
call
mov
push
popf
xchg
pop
out
addr16
addr16
clc
inc
shl
xlat
cmps
sub
pop
ficomp
(bad)
shl
and
push
sbb
push
lahf
mov
cmp
or
push
out
std
fsubr
aas
aad
or
cmc
push
lods
sub
sbb
pusha
iret
xchg
jae
outs
dec
mov
into
dec
or
pop
repz
gs
dec
pop
inc
int3
ret
(bad)
ja
or
call
xchg
adc
adc
jp
daa
out
xchg
mov
add
dec
repz
(bad)
loopne
int3
aad
pusha
jle
fisttp
(bad)
(bad)
mov
dec
pushf
push
push
dec
xor
xchg
into
mov
jne
ins
pusha
aaa
cmp
push
jno
(bad)
fdiv
adc
sar
inc
sahf
fstp
and
jo
xor
push
aad
rol
pop
mov
das
adc
jmp
inc
(bad)
pop
mov
inc
mov
(bad)
or
cwde
jae
loopne
js
adc
call
cwde
inc
dec
mov
addr16
(bad)
dec
adc
fsubp
(bad)
jo
mov
dec
not
icebp
mov
jmp
cmp
and
fcom
lods
jns
or
addr16
mov
pushf
movs
inc
(bad)
and
jl
enter
pop
adc
out
dec
pop
aaa
stos
shr
push
and
loopne
xor
or
int
mov
dec
clc
inc
clc
leave
mov
cwde
retf
inc
outs
push
vmovntps
js
xchg
push
pop
popf
cwde
inc
aam
test
push
fisttp
pop
stos
push
dec
jl
in
mov
loope
popa
jb
stos
xchg
or
fdiv
jno
dec
xchg
mov
jns
movs
jl
push
enter
(bad)
in
mov
cmp
scas
sti
sbb
inc
cmp
ins
pop
mov
pusha
jl
enter
mov
outs
mov
rcr
jne
outs
or
loop
sub
mov
mov
(bad)
out
jbe
dec
shr
aas
sub
jns
mov
stc
mov
dec
push
ss
push
pop
mov
add
push
xlat
jns
into
sbb
xchg
mov
sub
cmp
dec
iret
jns
sbb
sti
inc
mov
xchg
adc
ds
adc
imul
mov
add
addr16
inc
mov
push
and
ds
rcr
push
mov
js
mov
inc
or
aas
push
sbb
mov
loopne
es
xchg
xlat
cmp
(bad)
fist
mov
push
jns
mov
jmp
cs
pop
ror
int3
pop
fcomip
mov
pop
add
movs
or
or
mov
pop
push
sbb
mov
mov
daa
neg
lds
mov
pushf
iret
(bad)
fst
sub
sub
clc
nop
sub
dec
test
sub
scas
(bad)
cmp
jne
lods
inc
sbb
cmp
add
and
and
xor
ror
adc
jle
xor
cwde
sub
popf
ins
inc
call
fcomp
mov
cmp
xchg
xchg
mov
cmp
pop
enter
cs
dec
aam
xor
mov
out
jbe
xchg
popa
scas
dec
loope
pushf
push
call
pusha
mov
jno
rcr
out
cmp
mov
das
xor
fistp
and
inc
(bad)
ds
cmps
add
pusha
mov
adc
mov
aam
cwde
mov
fistp
inc
(bad)
dec
sbb
shl
mov
adc
inc
mov
mov
jg
outs
js
shl
xchg
sub
iret
ins
push
iret
into
adc
ret
out
add
xor
fbld
(bad)
xor
call
mov
repz
dec
cmp
clc
jmp
lods
lock
cmp
enter
stc
pop
arpl
adc
dec
jb
xor
push
xchg
sbb
scas
ss
sbb
pusha
xlat
sti
xchg
and
mov
and
loopne
xchg
cmp
xor
cs
push
rcl
mov
(bad)
in
dec
retf
clc
and
cmc
stos
stc
test
push
fld
(bad)
(bad)
fsubrp
stos
add
xor
neg
repz
mov
xor
mov
pop
into
ret
inc
inc
pop
push
xchg
aaa
frstpm(287
inc
dec
xchg
xchg
mov
iret
push
int
dec
test
stos
mov
mov
das
mov
test
jle
or
enter
push
call
or
leave
push
or
inc
inc
mov
(bad)
shr
movs
add
test
out
(bad)
pop
pop
jg
data16
xchg
scas
movs
inc
or
dec
fsub
sub
xchg
jmp
sbb
shr
shl
sbb
scas
mov
(bad)
shl
jp
xchg
and
(bad)
pusha
xchg
mov
jno
sub
popa
shl
mov
aam
and
adc
pop
inc
add
outs
outs
(bad)
fist
xchg
pop
imul
repz
xor
test
adc
add
test
stc
and
mov
jle
loopne
sbb
leave
mov
popf
push
fsubr
mov
fcmovu
mov
imul
mov
inc
dec
xlat
jnp
dec
(bad)
loopne
pop
lock
jbe
(bad)
pop
dec
push
loope
xor
inc
pop
mov
(bad)
jno
pop
pop
xchg
inc
pop
mov
jb
sub
(bad)
mov
out
cmps
and
fcom
inc
shl
xor
(bad)
or
popa
pop
pusha
adc
inc
(bad)
ss
inc
xchg
jl
push
lods
out
push
ror
or
test
mov
mov
aad
dec
into
(bad)
ja
and
outs
je
ds
xchg
or
dec
mov
outs
lods
and
fcom
mov
pop
jno
adc
fcom
push
aad
cdq
jmp
lock
dec
and
pop
inc
and
lea
pusha
fimul
not
add
and
xor
dec
sahf
popa
inc
cwde
sar
and
jnp
xor
mov
mov
loopne
mov
je
mov
or
mov
stos
jg
les
(bad)
lock
jbe
add
in
mov
sbb
jmp
imul
(bad)
push
xlat
pusha
xor
mov
fs
rcl
mov
jnp
or
sahf
test
push
mov
inc
jp
or
lahf
repnz
(bad)
ret
test
addr16
or
add
add
ja
outs
and
stc
pop
imul
sub
or
rcl
(bad)
and
xchg
sbb
sbb
lock
pop
jno
repnz
mov
movs
sbb
and
cmp
fld
mov
pop
aaa
cmp
adc
fld
loopne
xor
xchg
push
daa
push
xchg
lea
iret
(bad)
loop
cwde
pusha
inc
sub
(bad)
sbb
push
retf
fcom
(bad)
jns
mov
mov
das
xchg
inc
xchg
mov
pushf
pop
cmc
inc
xchg
loopne
imul
or
jne
add
in
jp
fdiv
cmp
pop
jae
add
sar
pop
or
mov
pop
fimul
mov
scas
es
pop
stc
dec
neg
neg
xchg
push
mov
push
or
es
jmp
int3
lahf
dec
ror
xlat
pusha
fs
xchg
jg
out
movs
mov
or
jno
lahf
pop
pop
retf
jb
xchg
and
pop
sbb
lods
lds
jp
add
cld
jmp
ds
jle
jnp
mov
jl
cwde
jp
icebp
mov
sub
or
mov
das
jae
retf
int
inc
xor
or
xlat
(bad)
(bad)
xchg
pop
xor
inc
mov
inc
rcr
cdq
xor
pop
jp
lods
in
repnz
push
ja
mov
push
add
imul
mov
aaa
add
cdq
dec
in
mov
loopne
sbb
aad
sar
loopne
push
cdq
adc
fmul
push
nop
cmc
sbb
add
outs
in
cmp
jecxz
fisubr
fstp
mov
sbb
daa
aas
inc
repz
push
out
imul
fcmove
cdq
or
lods
jns
jmp
xchg
in
mov
scas
adc
rcr
les
(bad)
sub
pusha
push
ret
xchg
and
js
movs
push
fmulp
sub
cmp
scas
mov
nop
inc
xchg
xchg
cmps
out
out
lea
test
aad
pop
cdq
sti
int3
push
push
cdq
bound
loopne
sbb
dec
lea
xor
(bad)
sub
out
push
cmps
xchg
inc
mov
cmp
loopne
cdq
out
rol
lahf
fnstenv
mov
or
or
and
pusha
adc
rcr
pop
adc
hlt
add
push
add
adc
inc
ficomp
pop
cdq
xchg
dec
inc
addr16
push
ss
mov
cmc
mov
pusha
vunpckhps
iret
mov
cmp
jp
jns
fsubrp
pusha
int
jnp
shl
je
adc
mov
mov
or
in
mov
or
aas
xchg
es
loopne
sub
xlat
mov
(bad)
je
mov
xchg
lea
or
mov
push
mov
push
int3
sub
jno
into
fistp
arpl
cwde
inc
sub
int3
dec
mov
int
test
jo
sub
stc
mov
cmp
xchg
mov
into
sbb
rcr
cld
fwait
and
jmp
mov
and
nop
pop
jl
sub
enter
or
cdq
xor
clc
mov
mov
mov
mov
je
pop
dec
imul
cld
mov
cld
es
mov
inc
stos
mov
ficomp
fstp
jg
es
mov
mov
dec
xchg
dec
mov
div
inc
fistp
not
std
dec
fmul
out
in
mov
and
adc
mov
xor
jne
push
fs
aam
mov
(bad)
(bad)
cdq
clc
inc
fnsave
pusha
stos
dec
cs
rcr
and
pop
loop
and
pop
ficom
loopne
xchg
ret
and
pop
aaa
sbb
dec
shl
mov
loopne
retf
in
inc
enter
jg
out
out
inc
int3
js
mov
push
cs
fsub
sbb
cmps
jecxz
bound
bnd
out
cmovo
fbstp
mov
test
inc
xchg
xor
(bad)
mov
in
in
sbb
sti
out
sbb
sbb
push
mov
movs
xchg
addr16
and
inc
sub
aad
inc
xor
addr16
push
pusha
and
cmp
cmp
gs
sbb
inc
into
push
cwde
adc
inc
adc
pusha
push
and
mov
outs
mov
in
pop
jmp
mov
cmp
dec
neg
pop
aaa
cld
jg
mov
dec
stc
(bad)
ror
test
and
pusha
shl
faddp
jns
fistp
jg
daa
imul
fcmovu
push
xchg
dec
pop
mov
test
cdq
sbb
mov
add
mov
fisttp
sti
mov
mov
nop
cmp
scas
jge
push
pusha
adc
pop
cmc
jp
pop
std
(bad)
and
jno
call
(bad)
xchg
inc
inc
and
xlat
pusha
add
shl
repz
cwde
mov
lea
hlt
test
mov
pop
sbb
or
jns
scas
push
fsub
arpl
(bad)
movs
js
pusha
call
and
pop
or
imul
jmp
mov
fild
sub
out
sbb
aad
cmp
ror
(bad)
nop
dec
jge
and
dec
mov
xor
(bad)
jle
sub
xor
and
mov
dec
iret
mov
and
and
loopne
mov
and
pop
xchg
aaa
loope
sub
push
sub
out
mov
xor
adc
push
lahf
xchg
ficomp
repz
rcr
jle
mov
dec
cmp
add
dec
dec
nop
sbb
inc
mov
fcmovu
jl
xchg
sbb
retf
push
and
les
pop
jg
jle
inc
je
add
pop
and
dec
ffreep
mov
aaa
clc
inc
mov
jmp
jp
xchg
or
pop
out
pop
pusha
in
or
xor
popf
loopne
int
sub
mov
xor
ins
pusha
rol
mov
fiadd
pop
es
xchg
push
test
test
pop
dec
mov
(bad)
es
aam
fs
push
sub
movs
gs
fldcw
lods
int
out
push
xchg
shl
jl
pop
add
jae
or
mov
(bad)
cs
sar
mov
sbb
jns
pushf
pusha
push
sbb
lods
out
dec
xlat
jp
imul
ret
pop
sub
movs
pop
xchg
mov
out
(bad)
leave
cmp
loope
mov
push
test
(bad)
or
jns
scas
cdq
repnz
pop
adc
stos
add
inc
add
imul
(bad)
xchg
xchg
scas
(bad)
ds
xor
mov
into
or
shl
jmp
les
or
pop
arpl
add
into
adc
sbb
sti
sub
je
sbb
and
(bad)
(bad)
xor
cmp
sub
or
jno
ins
mov
loopne
and
into
test
sbb
mov
ds
adc
add
jbe
setl
gs
test
fnsave
ds
stc
(bad)
xchg
add
xchg
jno
cld
dec
sub
or
imul
inc
scas
xchg
lds
dec
jp
mov
shl
int
mov
pop
out
int3
loopne
mov
mov
fcomp
fst
pop
es
int3
ror
dec
(bad)
fadd
jmp
sbb
and
xchg
mov
loopne
jae
jns
scas
or
add
pop
sub
shl
pop
movs
fwait
ins
je
push
lods
(bad)
aas
cwde
shl
fbstp
add
dec
jnp
add
mov
bound
js
add
sub
ds
movs
pop
cmc
sti
sub
in
ins
movs
arpl
loopne
dec
test
fsub
inc
adc
or
loopne
(bad)
out
xor
pop
inc
xchg
stc
sbb
lock
push
js
js
(bad)
inc
jg
mov
jbe
std
mov
scas
outs
in
rol
add
imul
dec
pushf
dec
into
mov
hlt
mov
into
adc
mov
mov
mov
and
or
test
mov
sub
dec
jl
(bad)
pop
push
cmp
jmp
jns
ds
sub
in
pop
jno
pop
add
mov
pusha
in
mov
loop
pop
sub
mov
scas
mov
jg
push
jno
je
js
retf
mov
movs
fild
pusha
xchg
das
and
inc
(bad)
mov
in
cli
sti
add
xor
cmps
jmp
pop
pop
add
xor
add
mov
jl
out
cdq
pop
gs
cli
ins
jns
or
sbb
or
(bad)
jae
jne
fistp
push
push
mov
dec
pusha
inc
mov
jbe
cmp
xchg
stos
and
mov
fcomp
inc
xor
mov
cmps
jp
aad
cmp
or
call
add
mov
push
iret
sahf
test
rol
jb
pusha
mov
push
das
repnz
imul
add
scas
in
das
fstp
add
pusha
test
mov
daa
aas
xlat
in
dec
dec
xchg
push
rcl
xchg
ss
mov
pop
(bad)
in
mov
loopne
cdq
push
xor
pop
call
mov
mov
ja
push
add
addr16
sbb
mov
push
cmps
dec
outs
xchg
push
mov
and
pusha
mov
leave
mov
sar
dec
nop
shl
jecxz
ror
pusha
leave
fisttp
aaa
(bad)
pop
and
xchg
in
idiv
jb
in
test
jle
lock
jne
lds
and
ja
fdiv
push
ins
dec
fldcw
xor
loopne
lods
nop
mov
test
mov
sti
(bad)
cmp
out
dec
push
out
pushf
cdq
xor
fiadd
mov
fs
dec
mov
push
rcl
rcl
and
data16
in
test
dec
loope
cs
or
adc
ret
push
add
retf
or
aas
inc
mov
(bad)
stos
shl
inc
mov
sbb
test
dec
dec
and
call
fidivr
add
jne
push
pop
push
cdq
pop
in
xchg
sub
pop
out
(bad)
jmp
std
stos
loopne
(bad)
popa
iret
xor
jge
fimul
stos
retf
cdq
sub
sar
lods
repz
cmp
adc
dec
fwait
add
jnp
mov
hlt
sub
inc
add
jle
pop
cmp
cmp
rcr
push
xchg
out
cmp
sub
cmp
mov
addr16
fcmove
push
js
cmp
fisttp
mov
xor
in
and
pop
repnz
xchg
add
sub
(bad)
or
pop
scas
mov
fisttp
out
mov
dec
sbb
push
jns
rcl
sbb
int3
cdq
sbb
cdq
fsub
aas
jmp
lock
push
sub
push
or
dec
mov
fistp
test
stos
push
lea
stos
inc
clc
loopne
cmps
and
loop
and
lock
pop
in
enter
(bad)
(bad)
and
into
fisttp
sub
out
sbb
shr
jb
dec
inc
push
jl
retf
mov
and
mov
popw
sub
js
loope
cmp
mov
(bad)
aas
and
dec
cdq
sbb
test
daa
mov
les
push
pusha
nop
mov
cmp
adc
mov
xchg
sub
stos
int
and
xchg
pushf
dec
test
lea
fild
aas
into
lock
(bad)
mov
fbld
dec
add
sbb
dec
loope
pop
dec
pusha
mov
sahf
or
mov
push
aam
mov
push
xor
xchg
sbb
adc
mov
inc
dec
arpl
xchg
jg
xchg
and
add
xor
push
cs
adc
loope
je
ret
sbb
jns
nop
pop
push
mov
iret
adc
movs
adc
movs
sbb
push
scas
pop
call
mov
out
test
dec
lea
outs
jg
imul
(bad)
sbb
xchg
push
scas
and
outs
fwait
ins
push
xor
jg
in
sbb
mov
outs
hlt
pop
nop
popf
pop
mov
call
dec
pop
fucom
icebp
cmc
mov
pusha
and
sub
mov
and
fld
lahf
(bad)
scas
jbe
aaa
pop
out
and
inc
and
jl
fldenv
push
fistp
jbe
push
xchg
adc
aas
cdq
cmp
(bad)
push
rcl
outs
pop
aaa
xor
sti
aaa
cli
sar
jge
ins
cdq
jl
push
jmp
retf
aas
bnd
int
or
int3
in
shl
enter
and
jmp
es
loopne
mov
cmps
out
jae
jmp
pop
dec
inc
pop
sub
mov
xchg
lods
push
dec
push
cwde
inc
push
xchg
xor
outs
push
pusha
jb
fstp
dec
ds
add
jmp
imul
pop
test
cli
imul
bnd
cwde
movs
mov
and
aam
(bad)
or
call
fcom
pop
stos
(bad)
and
fsubr
pop
mov
mov
sbb
fisttp
add
push
dec
xlat
xchg
xchg
dec
ret
push
and
jecxz
out
cwde
and
mov
leave
push
or
ins
pusha
xchg
nop
sub
scas
mov
rol
cmps
jle
cmps
xchg
rol
ins
sbb
cmp
out
scas
movs
cdq
mov
and
dec
xor
fisttp
dec
or
dec
mov
xchg
in
sub
(bad)
pop
into
lods
and
aas
cmp
xlat
ds
scas
sub
dec
fst
ret
addr16
cld
jmp
iret
test
add
(bad)
mov
or
call
dec
sub
fstp
lea
and
inc
add
ds
or
xor
repnz
push
pusha
xchg
dec
shl
leave
xor
hlt
mov
push
or
mov
pop
mov
mov
or
mov
mov
mov
mov
in
retf
js
mov
push
xchg
nop
jle
or
mov
and
dec
popa
lds
fist
add
xchg
outs
dec
sar
mov
leave
mov
outs
fbld
das
jns
ins
cmp
jae
inc
mov
pop
xchg
xchg
xchg
in
dec
call
mov
cwde
mov
jmp
pop
push
adc
das
out
ficom
das
fisttp
jno
or
test
fistp
mov
mov
inc
cmp
xchg
mov
in
add
sub
ss
rcr
push
pop
mov
retf
outs
jmp
pop
das
shr
push
add
mov
mov
xchg
cmp
xor
stos
loop
push
loop
(bad)
jae
fbstp
xor
and
int
adc
(bad)
jae
inc
cmps
adc
add
and
aam
xor
push
xchg
add
call
push
enter
cmp
shl
mov
loopne
es
fimul
and
or
cwde
gs
mov
dec
sar
dec
cmp
push
nop
fwait
test
movs
pop
div
aam
fimul
and
jg
sub
loopne
xchg
mov
je
enter
sbb
jb
mov
(bad)
aad
xchg
inc
ss
push
add
jl
xor
dec
fnstcw
push
sar
daa
je
xchg
(bad)
adc
shr
sbb
jne
fld
mov
or
sbb
sar
sub
fild
ds
inc
or
loopne
(bad)
fnsave
push
jne
loopne
and
jl
rol
test
cli
xchg
or
mov
jge
add
lods
jmp
fwait
movs
sar
fdiv
push
mov
or
in
mov
mov
xor
scas
inc
enter
jo
test
bound
and
jb
push
movs
(bad)
pop
pop
lods
cmp
lahf
sar
aad
mov
loopne
xchg
inc
arpl
xchg
fbstp
sub
adc
leave
mov
mov
xchg
inc
loop
and
add
mov
in
stos
mov
fst
push
shl
test
sub
les
loopne
retf
sub
cmps
(bad)
jb
cmps
pop
mov
ret
icebp
int3
fldenv
push
shrd
pusha
aam
fstp
pop
mov
fistp
repz
mov
sbb
or
cmp
(bad)
movs
pop
ror
adc
cdq
push
loopne
lahf
mov
daa
movs
mov
or
stos
inc
inc
xor
pop
pop
iret
push
out
in
inc
cmps
ficom
in
mov
jp
(bad)
leave
pop
aas
mov
sub
adc
xchg
sub
out
rol
call
dec
cli
cmp
mov
(bad)
jbe
jmp
lds
loopne
mov
(bad)
xor
sub
jo
mov
stos
sub
fild
mov
pop
xchg
shl
jns
jns
stc
sbb
pop
shr
xchg
xchg
mov
inc
sub
mov
cmps
repz
aas
popa
mov
inc
fild
sahf
addr16
shr
pusha
ins
(bad)
or
fs
test
test
jbe
adc
xlat
cli
mov
int
in
jp
scas
inc
jo
icebp
push
cmp
and
pusha
sbb
inc
cmps
mov
xchg
xchg
rcr
fneni(8087
sub
push
dec
stos
loopne
pop
pop
jmp
mov
arpl
hlt
and
mov
out
aas
(bad)
into
jl
or
lods
mov
sbb
jmp
sbb
out
dec
sub
in
pop
mov
mov
aas
imul
dec
jbe
add
aam
pop
mov
js
addr16
call
push
cmp
jns
mov
inc
push
pop
ror
dec
cmps
pop
or
inc
and
js
jp
hlt
out
mov
loopne
fsub
daa
clc
or
cmp
and
fisttp
jg
call
push
inc
or
enter
or
cmp
in
imul
sbb
fisub
xor
push
cmpxchg
rol
inc
stc
add
fs
fld
arpl
jle
ds
push
and
jnp
or
jge
mov
adc
mov
cmc
xor
sbb
dec
scas
dec
xor
lods
or
jns
inc
hlt
push
and
push
or
ret
fiadd
je
pop
stos
dec
sbb
jl
cmp
jmp
(bad)
cld
xor
jmp
ret
pop
iret
push
imul
inc
fxam
jmp
mov
inc
or
pop
sahf
nop
in
cmp
fistp
pop
jmp
mov
jl
mov
outs
mov
daa
jl
gs
cwde
mov
lods
dec
push
sbb
xor
mov
jae
adc
movs
xchg
jge
mov
dec
out
out
sub
pop
repz
mov
pop
jle
pop
pusha
or
adc
stos
xor
out
add
cmps
add
pop
in
pop
bswap
ja
mov
sar
jmp
lock
test
pop
xchg
out
rcr
(bad)
test
or
mov
loop
xchg
mov
add
xor
fbld
pop
cmp
sahf
jg
mov
sar
mov
xchg
repnz
or
cmc
repnz
sbb
(bad)
loopne
fmul
sbb
cdq
xacquire
jbe
nop
and
jno
mov
(bad)
ss
(bad)
push
push
cmp
mov
cdq
stos
pop
in
aas
mov
lds
xchg
jg
pop
push
or
movs
fidivr
and
or
xlat
xchg
adc
out
jmp
in
jg
(bad)
xor
push
call
mov
es
cwde
lds
das
push
push
push
push
xchg
sub
add
into
call
outs
jl
jne
mov
cld
outs
iret
(bad)
and
mov
ret
push
loopne
mov
push
jb
push
pop
les
pusha
shr
push
add
xchg
inc
retf
lods
sub
je
cmp
jno
xor
aam
or
in
pop
mul
sbb
sub
fwait
or
inc
les
lahf
pop
int3
mov
sbb
sbb
fiadd
ret
stc
ds
js
mov
xor
dec
jae
push
and
(bad)
fimul
loopne
jmp
outs
and
cmp
mov
cdq
call
cmp
imul
not
xor
ss
loopne
push
mov
je
mov
lahf
cmp
ficomp
push
cmp
dec
mov
int3
xlat
pusha
enter
push
cmp
pop
cwde
fdivr
rcl
fs
jnp
aaa
jb
mov
std
fcom
rol
inc
test
jg
(bad)
push
xor
dec
fs
cmps
xor
pushf
ins
rcl
dec
ins
shl
xor
loopne
xchg
fld
das
es
xor
jnp
mov
(bad)
jno
xor
push
pop
mov
push
xchg
out
sbb
into
mov
loopne
jge
and
cli
sub
sti
jle
repz
das
into
xchg
addr16
sti
jae
dec
int
and
into
push
lds
enter
mov
in
lahf
(bad)
jp
dec
ficom
push
push
enter
enter
(bad)
cli
cmp
hlt
push
push
imul
xor
mov
cld
aam
lahf
cmp
mov
dec
(bad)
push
stos
sar
fcmovnu
sbb
cs
push
xor
lea
(bad)
or
int3
loopne
jge
pop
fadd
call
mov
stos
es
(bad)
inc
pop
push
jno
push
sbb
repnz
and
in
inc
pop
add
stos
pop
jl
(bad)
or
push
pop
stos
stc
int
es
nop
imul
dec
adc
sbb
pusha
or
mov
fmulp
jns
int3
in
jmp
and
ror
or
and
shl
nop
xchg
jmp
jb
or
pop
rcl
push
ins
aas
data16
add
mov
xchg
mov
ds
fimul
add
cmp
xchg
adc
mov
or
nop
outs
pushf
enter
mov
pop
pop
in
loopne
sub
push
push
jb
and
dec
or
push
jp
xlat
fs
pop
jns
jbe
jle
fcomp
mov
jmp
push
adc
xchg
les
scas
in
lods
call
pop
sbb
and
sbb
idiv
pop
and
pop
sbb
sub
or
in
inc
es
std
mov
iret
adc
adc
ja
jmp
sub
xor
push
nop
addr16
jns
mov
pop
nop
fmul
adc
lock
loopne
or
test
bound
jmp
gs
dec
movs
xchg
sbb
cmp
push
jns
mul
retf
and
test
pusha
xor
xchg
fisubr
and
cmp
jmp
or
stos
mov
add
xchg
add
and
xchg
push
xor
int
mov
xchg
jne
inc
jns
pop
pop
call
and
mov
cmp
fisubr
pop
cmp
mov
or
call
imul
xchg
fimul
cmc
dec
mov
mov
pop
xchg
sub
jg
adc
pushf
and
jb
xchg
and
mov
and
ficomp
push
cmp
ss
fist
mov
cmp
cmc
(bad)
push
mov
inc
iret
adc
in
std
in
and
push
xor
adc
pop
sbb
push
cmp
push
in
and
dec
out
in
mov
fstp
jb
test
daa
push
adc
inc
adc
adc
fidiv
xchg
or
cmps
mov
xor
rcr
dec
test
add
xlat
fmul
inc
cdq
mov
inc
dec
dec
push
mov
push
or
adc
aam
or
(bad)
aaa
push
mov
cmp
ret
fsub
cmc
xor
mov
loope
push
mov
gs
pop
mov
call
inc
or
cmp
sbb
mov
inc
ja
in
adc
mov
pusha
pushf
enter
aas
dec
mov
cmp
test
ror
pop
mov
lock
ror
and
lods
mov
jle
fadd
not
mov
jl
xor
mov
mov
inc
mov
push
jge
sti
bnd
(bad)
nop
pop
sbb
xchg
sub
mov
test
cmp
xchg
sub
pop
adc
inc
pushf
mov
rol
push
outs
int3
test
cld
sti
jge
sbb
call
nop
fneni(8087
mov
cmp
dec
fisttp
ja
test
adc
adc
jns
sub
ffreep
jns
push
mov
sub
mov
retf
sahf
push
jg
fidiv
push
cmp
movs
test
lea
mov
inc
fnstcw
pop
into
or
mov
cmp
inc
mov
mov
into
cmp
pop
shl
fld
ins
jmp
lods
std
or
daa
mov
xor
stc
ret
pop
add
std
lods
arpl
dec
loop
cmps
push
xor
hlt
loope
mov
test
or
and
(bad)
jns
inc
adc
sbb
sbb
popa
sub
inc
ds
rcl
cmp
cmp
inc
jnp
ficomp
cmp
loopne
mov
mov
mov
daa
inc
mov
enter
fdivr
dec
stos
mov
cwde
mov
sar
inc
sbb
(bad)
in
gs
push
js
sub
inc
fistp
iret
loop
cld
adc
shl
(bad)
hlt
inc
call
add
add
push
and
les
mov
outs
fmulp
or
pop
vmxoff
les
nop
mov
test
push
sbb
(bad)
imul
sbb
push
inc
call
cs
pop
mov
sbb
ret
enter
sbb
ins
mov
adc
sbb
pop
das
je
out
xor
mov
pop
jns
mov
(bad)
jo
mov
retf
popa
xor
add
jo
pop
xor
into
xor
icebp
daa
lea
test
daa
daa
or
and
out
xlat
adc
out
scas
aam
shl
je
jmp
inc
int3
ja
retf
int3
out
pop
xor
sub
fdivr
mov
in
or
mov
fmul
repnz
pop
pop
out
test
cs
mov
pop
add
mov
jno
inc
rcl
ja
jns
mov
(bad)
mov
add
cmp
pop
dec
xchg
stc
mov
xchg
cmp
cmp
pusha
pushf
test
cmp
pop
pop
dec
push
jns
fadd
cmp
jno
(bad)
xlat
cld
mov
shl
std
test
cmps
mov
xchg
leave
inc
adc
xor
push
cmp
xlat
inc
or
pop
pop
js
push
xor
js
mov
ja
xor
int
pop
daa
cmp
add
es
and
in
sub
loopne
int3
cmp
jecxz
push
cs
dec
xlat
jl
rol
das
dec
mov
cmp
clc
cmc
enter
out
xchg
push
sub
sub
adc
in
dec
cmp
addr16
fnstenv
mov
and
cdq
mov
dec
call
xor
mov
enter
adc
xchg
or
lods
pop
xor
xor
cmp
clc
dec
cmp
cld
int
pop
inc
inc
out
xor
lock
adc
inc
add
pop
stos
dec
neg
xchg
out
mov
mov
xor
add
mov
rcl
ret
cdq
jp
ds
popf
leave
dec
inc
push
dec
mov
cmps
mov
aaa
adc
lock
daa
rcr
cmp
jno
pop
call
fwait
icebp
xor
rcl
mov
ror
(bad)
push
test
add
shl
call
cld
fcom
cmp
pop
cwde
sar
cwde
sar
add
(bad)
jb
jge
mov
out
rol
pop
fld
push
mov
dec
jl
lods
jp
jns
loopne
sbb
repz
and
call
bound
dec
xor
inc
sbb
pop
adc
jge
fdivr
push
sbb
sbb
cmp
mov
ror
ja
add
pushf
pushf
in
ficomp
jns
fcomp
lds
ja
and
in
mov
ins
and
or
sbb
jle
fwait
add
test
xchg
into
loopne
lds
cmp
add
xor
sbb
inc
mov
arpl
loop
rol
sub
pop
outs
cmp
(bad)
dec
xchg
(bad)
push
(bad)
fisub
mov
call
dec
add
mov
into
cmp
ficomp
sbb
lods
iret
mov
mov
ret
call
jmp
inc
fwait
inc
outs
into
dec
lahf
push
cmp
push
adc
jae
mov
mov
in
mov
stc
(bad)
stos
sbb
dec
dec
add
inc
mov
js
int3
int
nop
lods
retf
mov
mov
adc
daa
dec
stc
aad
ja
cmp
xlat
push
rcl
mov
push
or
push
lock
ja
add
cwde
sub
inc
jecxz
addr16
push
mov
xchg
daa
xlat
iret
or
and
push
jo
sub
xchg
fnstsw
add
daa
cmp
loopne
adc
cmp
jb
les
pushf
fmulp
fisttp
fisubr
jnp
mov
sti
fdiv
xor
sbb
bound
add
ins
jns
pop
ret
add
sub
dec
clc
clc
(bad)
rcr
cwde
in
out
jno
add
inc
dec
pushf
les
jge
mov
stc
int3
js
jo
rcr
sub
rol
stc
cmp
div
jmp
daa
inc
fcomp
cmp
and
in
xchg
mov
add
dec
in
sbb
(bad)
js
hlt
cmp
xchg
sub
fstp
push
push
dec
xor
mov
ror
cmp
ret
imul
cmp
test
pop
jns
ret
(bad)
fidiv
cmp
cmp
pop
into
out
pop
(bad)
fstp
sbb
push
lahf
sbb
fbstp
pop
jge
sub
(bad)
cwde
std
stc
sbb
xor
sbb
cmp
jecxz
mov
aam
cwde
or
cwde
(bad)
add
(bad)
mov
test
add
mov
stc
cmp
js
push
mov
out
sahf
mov
xchg
cmp
cmp
push
loop
retf
push
jo
js
inc
cdq
lock
pop
xor
push
mov
sar
data16
aaa
lea
je
adc
add
(bad)
ds
leave
cs
mov
xchg
sbb
jns
cwde
xchg
aad
cmc
mov
add
inc
sbb
sub
call
jno
xor
xor
fidivr
(bad)
stos
(bad)
fcom
stc
out
jbe
daa
push
cwde
dec
in
sbb
xchg
aas
mov
xor
pop
fs
mov
mov
retf
lods
mov
xchg
repz
les
sub
(bad)
int3
push
dec
cmps
mov
fdivr
rcr
jl
jae
fwait
xor
enter
cmp
mov
mov
or
in
pop
mov
stc
sbb
aas
push
loop
xchg
or
adc
clc
mov
repz
aaa
and
mov
jns
cmp
leave
or
or
and
mov
mov
lods
les
inc
std
out
fadd
push
sahf
add
iret
inc
sbb
mov
fsubr
or
jmp
sbb
add
nop
dec
mov
loopne
jle
lods
cmc
adc
dec
dec
lock
or
mov
and
les
sub
out
fsub
push
pop
test
int
jge
outs
push
cli
fmul
lds
mov
inc
sub
das
pop
js
lock
pop
pop
inc
mov
mov
mov
adc
sbb
jg
add
mov
dec
fadd
xor
cdq
add
dec
shr
sahf
sub
jmp
mov
rol
(bad)
and
enter
lock
dec
cwde
in
and
mov
rcr
or
gs
aad
enter
dec
fnsave
cwde
xchg
push
mov
ins
fild
imul
sub
sbb
lods
popf
mov
aad
int
lods
stc
cs
sub
sbb
jns
call
push
mov
sar
mov
push
gs
xchg
push
stos
retf
pusha
inc
mov
xor
inc
es
pop
add
and
sub
icebp
pop
cmp
sub
ds
sbb
inc
and
dec
dec
pop
sbb
cmp
or
leave
or
loope
fmul
mov
dec
cmp
inc
sbb
sub
pushf
push
jo
scas
jecxz
loopne
xor
push
mov
sub
add
pop
mov
mov
clc
jp
cmp
pop
sbb
imul
sbb
punpcklbw
test
adc
into
sub
out
adc
je
enter
sub
test
push
daa
dec
pop
out
cli
dec
inc
sar
movs
add
std
cmc
nop
stc
add
mov
shr
jns
sbb
dec
mov
or
dec
retf
push
dec
lods
ret
pop
aam
sbb
arpl
ret
cld
int
cmp
out
fstp
cmp
lea
mov
xlat
inc
xor
mov
or
sbb
cmp
lods
clc
pushf
popa
sbb
mov
xor
xlat
xlat
adc
dec
test
xchg
cmp
mov
pop
or
or
aam
xor
xor
xor
(bad)
scas
pushf
fisubr
fwait
lock
add
jl
add
jl
imul
ret
sbb
xor
dec
cmps
aam
int
pop
mov
jl
inc
pop
pop
xor
enter
aas
xor
xlat
jg
xchg
in
js
mov
sbb
mov
ret
cwde
push
push
out
cmc
(bad)
fld
push
fistp
cmp
sub
mov
inc
jmp
or
iret
or
push
sahf
dec
aas
aas
push
fwait
sbb
cmp
cmp
cmp
pop
pop
(bad)
adc
int
es
xchg
add
imul
fisttp
or
pop
shl
cdq
mov
push
iret
jnp
repz
and
fistp
dec
fnstsw
mov
mov
repnz
jle
xor
dec
sbb
xchg
and
retf
cmp
shl
xor
cmp
loop
add
fistp
cmp
les
js
push
in
sbb
or
daa
inc
sub
leave
cmp
aam
sbb
addr16
mov
pop
dec
dec
cmp
add
add
int
lods
cld
sub
mov
pop
xor
adc
call
sub
sub
test
int3
dec
std
cld
mov
in
mov
mov
outs
sub
add
daa
or
sub
mov
inc
jp
cld
mov
add
les
add
jnp
mov
cmp
mov
pop
add
mov
lock
icebp
xor
dec
adc
add
and
pusha
je
dec
add
lods
dec
pop
mul
test
adc
sti
lahf
or
sbb
cs
lock
pop
les
adc
int3
xchg
mov
add
pop
push
sahf
fs
fcomp
add
cmps
cmp
in
cmp
xchg
mov
sbb
lds
aam
pop
and
ret
or
cmp
or
leave
dec
jbe
jo
daa
pop
and
mov
mov
cmps
ret
mov
mov
push
dec
lock
(bad)
test
ret
test
pop
aaa
out
push
ja
add
test
mov
sub
mov
jge
js
test
fcomp
(bad)
cmp
pop
pusha
cmp
mov
test
rcl
mov
xor
sub
mov
add
movups
ja
sbb
fldenv
cmp
xlat
xchg
push
pop
outs
pusha
iret
sbb
test
inc
add
test
add
lahf
mov
and
push
or
add
pusha
add
xchg
idiv
jmp
cld
in
dec
clc
push
pusha
les
sbb
ss
xchg
shl
jg
rol
lock
pop
cmp
fisub
jl
push
push
mov
inc
cmc
inc
and
call
clc
fimul
imul
sahf
push
xlat
shr
cmp
xlat
je
sbb
aas
xor
in
dec
add
add
test
mov
and
fist
sbb
or
scas
add
push
jno
xor
sub
pop
sub
das
add
test
in
adc
(bad)
add
add
sub
sbb
or
pop
or
lods
int
add
pop
mov
adc
(bad)
mov
pop
mov
cmp
imul
sub
mov
cld
(bad)
push
fdivrp
rcl
push
add
push
pop
xor
push
mov
or
mov
int3
jmp
push
cmp
cmp
pop
(bad)
xor
stc
lods
pop
xor
pop
push
xchg
sub
or
aam
push
and
sub
arpl
sbb
rdtsc
and
(bad)
jmp
pop
enter
adc
fneni(8087
mul
js
enter
retf
adc
call
inc
or
mov
hlt
and
es
ret
or
dec
inc
xor
push
jecxz
out
cld
fdivr
mov
lea
out
nop
fs
jbe
or
gs
sub
sbb
leave
es
dec
test
je
mov
sub
jns
cmp
cmp
fimul
ja
or
shl
push
inc
and
(bad)
sbb
loope
xor
je
enter
out
push
enter
add
dec
retf
adc
sbb
xchg
xlat
cmp
pop
inc
xlat
mov
cs
adc
jmp
hlt
fdivp
push
call
pop
js
inc
out
xlat
pop
mov
xlat
and
fcmovb
xlat
imul
aaa
enter
cmp
jle
push
mov
mov
pusha
pop
sub
sti
jns
ret
lods
nop
outs
lahf
or
pop
cmp
mov
add
push
sub
imul
jb
fcmovb
test
push
ins
pop
js
out
add
inc
test
add
stos
jp
mov
loope
je
daa
out
pop
clc
jle
xchg
sub
cwde
push
mov
push
ds
jmp
fistp
lea
inc
fisttp
cmp
jb
leave
movs
pop
dec
pop
and
(bad)
retf
fsubr
dec
ja
mov
xlat
dec
adc
push
loopne
scas
sti
adc
test
sbb
mov
xor
cmp
push
xchg
add
inc
xor
cmp
mov
lods
or
or
hlt
fld
iret
loopne
sub
call
inc
pop
std
lods
int3
jg
rcl
xor
dec
shr
in
mov
stc
in
fmul
sub
in
push
shl
sti
sahf
test
jb
pop
sub
inc
sbb
mov
xor
inc
sbb
ret
xchg
call
xchg
gs
inc
dec
pop
test
je
sahf
pop
js
push
ins
dec
pop
or
int
fs
call
or
adc
mov
mov
bnd
add
pop
sbb
inc
inc
pop
sbb
jb
fwait
leave
xlat
lock
dec
dec
jmp
cwde
int3
sbb
iret
(bad)
pop
stos
stc
clc
je
test
test
mov
ja
inc
lock
lods
shl
loopne
cmp
rcr
ss
lock
mov
scas
xor
fsubr
mov
les
or
lods
mov
adc
(bad)
cmp
mov
ins
stos
gs
pop
mov
xor
mov
sub
clc
addr16
retf
fwait
xor
fisttp
and
repz
ret
push
jle
push
or
jb
pop
clc
mov
add
pop
in
pop
dec
push
ds
in
(bad)
or
dec
pop
push
daa
shl
div
stc
in
les
xor
out
push
ja
sti
or
xchg
into
stc
adc
aas
push
lods
aam
clc
les
sub
cmp
mov
sub
and
test
mov
dec
cmp
les
stc
fist
int3
ins
das
int
pop
call
jmp
in
mov
dec
pushf
push
sbb
mov
push
pop
pop
std
dec
jno
mov
push
loopne
frstor
sbb
mov
or
pop
pop
jbe
dec
pop
sub
or
aam
cmp
xor
enter
xor
dec
sub
(bad)
repz
call
ror
mov
xchg
pop
add
mov
out
push
xchg
stc
in
ficom
dec
adc
mov
pop
(bad)
rcr
mov
or
lods
cmp
push
test
std
adc
js
mov
pusha
nop
mov
or
sbb
outs
dec
sbb
sub
je
xor
fbld
je
and
cmp
push
clc
hlt
mov
adc
aaa
add
lods
enter
sub
xchg
mov
in
mov
into
sahf
fdivr
test
test
mov
call
arpl
mov
sbb
push
jo
jno
mov
mov
test
out
in
push
movs
dec
cwde
and
sub
int
shl
test
add
out
or
mov
movs
sub
int3
mov
ja
fld
(bad)
mov
popf
pop
std
icebp
cmp
shl
pop
pusha
faddp
sbb
and
jmp
ror
mov
iret
mov
adc
mov
shl
sahf
dec
in
dec
sbb
dec
inc
daa
rol
adc
add
ret
into
mov
or
or
cwde
push
loopne
nop
pop
mov
cmp
mov
sub
js
test
inc
in
jno
pop
cmp
xor
dec
and
push
xchg
jp
(bad)
xor
xor
sub
lock
(bad)
lds
fistp
(bad)
cmp
or
pushf
sub
jbe
lock
xor
nop
cmp
aad
or
xchg
mov
adc
lods
pop
lods
cmp
mov
mov
dec
(bad)
inc
mov
mov
xlat
pop
add
or
xchg
aaa
fcom
or
add
lock
cmp
das
push
cs
int3
xchg
dec
(bad)
ror
dec
inc
fsubr
sbb
fcomp
in
test
add
daa
xor
cmp
sbb
sub
or
cmp
(bad)
js
push
jmp
mov
cmp
or
push
imul
aam
xor
sub
add
lds
fsub
not
dec
aas
mov
dec
pushf
sbb
daa
fimul
js
out
jl
out
(bad)
adc
inc
and
xor
movs
cmp
cvtdq2ps
ja
stc
push
call
icebp
add
xchg
lahf
fcmovne
fs
jecxz
xor
adc
push
mov
cmp
(bad)
and
jo
push
shl
pop
and
mov
pop
call
pop
(bad)
dec
call
and
inc
scas
aas
mov
jge
dec
fnsave
xchg
push
lods
inc
sbb
stos
dec
sar
loopne
enter
cmp
mov
aas
pop
jns
rol
data16
add
sbb
shl
or
xor
into
jae
fisubr
mov
xchg
mov
inc
dec
and
pushf
js
cdq
lahf
mov
arpl
mov
js
js
loopne
add
fwait
loope
add
sahf
mov
(bad)
pop
xor
inc
jmp
cmc
data16
nop
pop
and
xor
and
mov
or
es
xchg
in
out
sbb
out
xchg
rcl
sbb
fiadd
not
out
jno
fsub
jg
push
call
cmp
pop
loop
cwde
setne
and
lods
fsubp
mov
repnz
aas
stos
pop
fdiv
rcl
pushf
and
xor
fbld
mov
xchg
outs
sar
mov
adc
aaa
fcomp
push
out
aad
loop
sbb
fs
push
into
jnp
jmp
ret
ret
ins
xor
sbb
shl
inc
push
movs
cli
jbe
int
cmps
push
mov
mov
idiv
fistp
loope
jg
inc
sub
fisttp
xor
inc
sar
inc
dec
or
pushf
mov
out
and
cmp
ds
push
mov
cmp
loopne
sub
cmp
cmp
xchg
stc
cmp
in
bound
cwde
lods
lea
sbb
imul
push
dec
sub
adc
mov
in
(bad)
xlat
dec
or
aam
fcomip
leave
push
in
popf
mov
inc
clc
mov
and
cmp
pop
mov
or
call
sub
out
ja
pushf
sbb
adc
neg
cmp
sbb
rol
sbb
dec
xor
dec
movs
fadd
sbb
xchg
ja
js
lea
sbb
push
repnz
cmp
mov
inc
mov
and
or
mov
lahf
call
pop
cmp
lock
stos
pop
inc
push
mov
in
pop
loope
retf
(bad)
loop
cmp
jae
sub
mov
stc
lahf
test
xchg
retf
and
cmp
add
inc
call
cmp
sub
lods
push
cmp
mov
loope
adc
dec
clc
xchg
adc
cmp
mov
cwde
pop
aam
inc
repz
popa
adc
pop
lods
xor
enter
sub
mov
shl
cmp
sub
pop
mov
iret
xchg
dec
mov
shrd
sub
lock
scas
aad
push
jg
jl
xor
lods
fwait
push
mov
scas
sbb
push
sqrtps
enter
or
aad
test
adc
inc
add
jmp
cli
call
cwde
inc
enter
jns
pushf
dec
(bad)
jmp
jge
lods
adc
enter
test
repnz
enter
neg
je
test
int3
add
adc
mov
pusha
adc
(bad)
das
or
mov
mov
cmp
pushf
shl
hlt
cmp
arpl
mov
test
push
aam
inc
cmp
and
ror
push
sub
adc
daa
pop
sar
cmp
js
aad
dec
mov
lods
mov
js
jmp
call
push
lahf
jb
pop
xchg
repz
inc
inc
inc
mov
mov
or
scas
jmp
or
fmul
xor
call
out
les
cli
add
mov
push
fmul
cmp
mov
ret
test
pop
mov
push
cmp
rol
inc
sbb
test
pop
jns
cwde
cmp
adc
mov
sub
or
movs
dec
dec
(bad)
sbb
add
xchg
push
fsubr
cmp
and
jl
test
or
jns
int
mov
push
cld
rol
mov
push
cmp
jbe
cwde
or
mov
cmp
(bad)
aaa
jl
cmps
cld
fdiv
bound
iret
rcr
pop
rcl
test
fwait
xchg
push
int3
dec
lods
add
inc
push
jb
out
pop
push
lock
pop
mov
movs
dec
add
mov
dec
ds
aam
dec
ret
dec
pop
xor
(bad)
pop
(bad)
js
xchg
add
dec
loopne
jmp
mov
sbb
rol
cmp
sbb
mov
cli
pusha
inc
pop
mov
iret
or
xchg
inc
jle
xor
sbb
out
mov
ins
and
pop
js
jmp
jle
dec
rol
or
pop
mov
dec
js
js
leave
sbb
sub
test
fs
sub
dec
sbb
sub
mov
lods
push
int3
mov
and
das
push
or
(bad)
test
sub
sub
scas
test
fsubr
mov
stos
sub
add
in
jmp
xchg
iret
fmul
cmp
or
cmp
int
ret
xchg
test
(bad)
test
xor
push
mov
xchg
sub
inc
mov
arpl
in
dec
(bad)
mov
dec
push
cmp
sbb
pop
retf
lahf
cwde
adc
rol
xchg
and
cmp
test
rol
pop
xor
xchg
ja
and
iret
jg
pop
inc
inc
sbb
xor
imul
xchg
cmp
in
fnsave
cwde
mov
sub
outs
aad
pop
adc
mov
js
dec
sub
push
scas
cld
jne
mov
ret
fsub
jmp
mov
movs
stos
sub
xor
popf
push
sub
cmp
push
(bad)
add
xor
popf
lods
inc
inc
cmp
les
inc
mov
daa
popa
mov
jae
and
mov
cmp
fwait
cmp
pop
loop
dec
fdivr
call
inc
inc
cmp
retf
rcl
add
daa
daa
ins
sub
cs
xor
cmps
popa
pop
push
inc
imul
pop
aas
and
ret
cmps
ror
rcr
push
loopne
push
inc
cmp
xlat
xor
inc
call
cmps
jp
sbb
ret
or
daa
daa
sbb
sbb
push
(bad)
jb
(bad)
pop
inc
dec
stos
dec
in
push
and
cwde
sub
icebp
mov
xchg
mov
adc
fs
or
loope
sbb
dec
ror
dec
ret
fidiv
push
add
aaa
pusha
shl
pop
cmp
mov
inc
in
into
rol
fmulp
dec
xchg
push
fiadd
stc
rcl
sub
ins
pusha
jl
adc
lods
rcl
nop
mov
call
cmp
sub
or
test
fbld
inc
sbb
jge
mov
and
cmp
ja
cwde
push
jne
and
ret
daa
in
xor
cmp
cwde
sbb
ja
(bad)
in
push
sti
xchg
aam
div
mov
lods
push
dec
sbb
pushf
cmp
xor
cld
mov
arpl
xor
sub
dec
sbb
cld
mov
int
je
je
lods
adc
adc
cld
inc
push
xor
sub
jle
sahf
sti
sbb
push
add
dec
cs
pop
push
mov
aad
or
sbb
push
test
sbb
int
mov
sbb
js
in
call
ja
js
shl
ins
xor
frstor
lahf
int3
or
ds
cmp
leave
mov
fs
fidivr
mov
add
sub
xchg
pop
push
and
add
xchg
test
out
sub
jns
mov
cmp
adc
clc
sbb
rcr
stos
test
cmp
add
mov
cmp
jne
lods
dec
xchg
lods
push
fisub
mov
pop
mov
inc
pusha
ins
add
cwde
addr16
push
sbb
xor
jnp
or
cmps
cmps
xchg
lock
xor
cmp
mov
aam
cwde
inc
sar
imul
pop
mov
dec
jmp
aaa
je
fldenv
jo
and
push
(bad)
adc
(bad)
xlat
mov
and
mov
push
cmp
mov
push
loopne
pop
aas
xchg
fimul
sub
int3
les
mov
or
maxsd
js
iret
jne
call
xchg
int
jle
mov
fnstcw
mov
movs
jl
push
add
and
add
sub
push
xchg
or
sub
jns
dec
retf
mov
stc
inc
hlt
jl
mov
and
sbb
pop
fstp
mov
mov
clc
mov
pop
std
into
sub
in
pop
cmp
pop
ja
ja
cwde
out
popf
daa
pop
pop
add
inc
movs
into
mov
and
loopne
popw
fsub
sub
xor
lock
inc
jns
clc
repz
add
fcom
mov
fsubr
xchg
xor
shr
clc
inc
imul
sbb
test
jle
ins
mov
fcmovbe
bsr
fild
cmp
jg
xlat
jle
push
loope
loop
xor
or
jo
aaa
add
pop
xchg
push
xlat
rcr
in
stos
dec
inc
mov
xor
cmp
lock
sub
ja
sub
inc
mov
in
sahf
and
or
add
aaa
daa
ret
pop
add
or
sub
cmp
cwde
xor
pop
ja
sub
xchg
fdivr
hlt
fld
in
rcr
ss
push
fmul
xlat
lahf
or
push
cdq
int3
sub
push
jmp
lock
mov
inc
jle
push
push
pop
or
mov
lahf
std
cmp
das
or
push
cmp
call
int
mov
daa
push
sub
shl
push
cs
cmp
mov
aaa
lea
push
arpl
outs
shl
jbe
or
test
mov
or
movs
fstp
popa
test
lahf
jmp
(bad)
push
dec
push
cmp
jnp
(bad)
adc
sbb
sbb
fsubp
pop
pushf
outs
sar
int
daa
sub
pop
dec
fild
pop
in
inc
je
enter
int
mov
push
push
es
lods
shl
mov
pop
mov
xchg
inc
jmp
sub
lahf
sub
mov
shl
push
dec
push
push
add
rol
mov
jmp
inc
xchg
push
(bad)
jle
js
sti
push
push
jno
or
cmp
xor
mov
jae
push
or
shr
xor
ret
loopne
pushf
push
je
(bad)
aam
cld
sbb
xor
hlt
cs
xor
lock
inc
or
sub
cld
cs
fsub
adc
and
mov
sbb
mov
inc
push
cmp
jp
(bad)
imul
xchg
pop
pop
push
std
push
mov
imul
mov
call
xor
fwait
pushf
sub
cld
sbb
enter
int3
iret
pop
lods
pop
cdq
mov
mov
and
pop
not
or
adc
mov
daa
bound
and
push
cs
inc
out
test
xchg
dec
test
jge
pop
mov
jne
ret
pop
out
in
daa
cmp
mov
iret
dec
pushf
mov
and
jp
cmp
fstp
lock
add
sbb
add
cwde
inc
lds
mov
scas
xlat
pushf
add
mov
and
rcl
dec
movs
push
fucomi
je
mov
std
nop
rcl
neg
jns
xchg
or
pop
mov
adc
add
mov
xchg
dec
and
es
mov
inc
iret
jle
hlt
js
imul
(bad)
sub
and
movs
(bad)
pusha
retf
lea
cmps
std
add
xchg
fistp
in
fstp
push
mov
push
fdivr
push
inc
clc
cmp
pop
inc
pop
cmp
cmp
cmp
pop
clc
mov
pop
mov
sub
push
inc
test
add
cmc
sahf
imul
(bad)
(bad)
pop
(bad)
int
jmp
push
out
jmp
adc
jnp
xlat
gs
fwait
in
fcom
ins
fld
and
dec
mov
sub
push
sar
sbb
mov
pop
inc
jge
and
mov
inc
or
mov
int
sbb
lds
pop
daa
push
xchg
imul
std
fdivr
and
mov
outs
js
test
cmp
mov
xchg
fadd
push
pop
sbb
js
inc
in
imul
and
dec
lods
fwait
jo
mov
inc
sub
enter
daa
nop
in
dec
outs
jl
or
adc
push
mov
fdivp
xchg
sbb
sub
cmp
sbb
out
ins
jo
sbb
sub
sub
call
stc
lock
mov
arpl
push
popf
push
(bad)
cld
dec
pop
sub
and
sbb
scas
jns
fidiv
sub
pop
or
fsubr
pop
push
sbb
ror
inc
pop
mov
les
sub
stc
sub
(bad)
call
ret
out
sub
xchg
push
mov
je
js
out
ror
jns
mov
jmp
or
fcomp
mov
sbb
sbb
lods
xor
jg
mov
sub
fiadd
dec
push
xor
sbb
cmp
int3
xor
out
enter
add
cs
test
sbb
mov
(bad)
mov
fs
and
popf
pushf
js
call
fstp
pop
fadd
inc
aam
dec
arpl
sbb
mov
data16
push
ret
sub
mov
dec
pushf
cwde
inc
je
enter
shr
clc
ficomp
ja
les
jg
stc
lahf
inc
xor
pop
pop
lock
rcr
stos
enter
ja
mov
sub
xor
mov
shl
ficom
push
call
lods
cmp
xlat
test
retf
inc
add
adc
sbb
(bad)
stc
xor
pop
adc
int
push
dec
add
xor
jmp
das
pop
cwde
mov
jb
lock
cli
cmp
fcmovnbe
inc
enter
and
les
out
dec
mov
(bad)
xchg
pop
leave
popf
pop
inc
retf
dec
out
add
cmp
push
dec
add
mov
sub
pop
inc
out
ds
or
cwde
je
rcl
les
adc
dec
(bad)
pop
mov
push
sbb
dec
cmp
into
jns
popf
sbb
out
sti
cdq
mov
push
icebp
call
cmp
dec
in
sbb
xchg
ror
lock
xchg
push
ret
cmp
les
enter
in
mov
cmp
jae
and
inc
daa
fcomip
mov
fsub
and
js
mov
mov
mov
in
jne
pop
mov
mov
dec
pusha
or
push
enter
lds
lods
cmp
push
js
repnz
jns
lds
xchg
fs
cmp
fstp
add
push
mov
int3
cmp
hlt
mov
xor
and
pop
mov
aas
js
xchg
enter
push
jl
jbe
mov
int3
adc
add
call
fsubr
leave
xor
xlat
cmp
dec
push
cmp
dec
mov
out
mov
les
clc
pushf
clc
movs
sub
pop
sub
dec
enter
cmp
imul
cmp
add
jle
xor
adc
or
sbb
cmps
xor
dec
cmovs
xchg
cmp
dec
stos
in
pop
jp
popa
cmp
xor
jne
out
add
loopne
(bad)
xor
xor
mov
retf
cld
clc
loopne
jp
mov
or
popf
sub
stc
aam
dec
push
mov
lock
xor
fwait
jge
mov
loop
cmp
inc
rcl
mov
xchg
inc
push
xor
jmp
xor
push
sub
xor
test
movs
add
mov
pop
add
fnsave
call
or
int3
jecxz
inc
adc
xor
iret
loop
and
mul
hlt
mov
push
sub
xor
mov
(bad)
hlt
bound
cmp
inc
jp
inc
cmp
daa
ins
jle
movs
xlat
in
ins
jle
fsubr
dec
rol
(bad)
dec
jbe
rcl
int3
sahf
mov
daa
(bad)
in
xchg
ret
and
out
and
jns
or
inc
jae
test
les
gs
and
aam
cmp
jmp
leavew
(bad)
in
jecxz
ret
pop
mov
rcr
push
shl
jp
dec
inc
push
outs
cmp
dec
sahf
push
push
les
daa
aaa
xchg
sbb
call
out
cld
pop
sub
adc
mov
mov
dec
movs
jnp
sbb
cmp
retf
clc
je
or
mov
xchg
xor
sub
sub
in
dec
or
cmp
xchg
add
aaa
xor
dec
jno
cli
push
fcomp
sub
pop
push
sbb
and
outs
add
mov
fdiv
in
xchg
jns
pop
(bad)
cli
repz
(bad)
movs
outs
shl
shl
daa
in
jle
(bad)
into
test
jmp
cmp
dec
sub
inc
jmp
scas
into
js
mov
(bad)
fcomp
pop
and
push
out
fdiv
pop
sub
adc
dec
sbb
sub
mov
lea
sub
pop
inc
test
xor
sub
mov
cmps
les
cwde
xchg
cmp
inc
sub
or
push
sbb
or
inc
fistp
movs
mov
inc
aas
daa
dec
jns
mov
push
inc
test
das
out
xor
mov
daa
int3
aaa
add
movs
push
sbb
jp
out
pop
sbb
(bad)
in
mov
scas
sar
sub
push
pop
mov
mov
push
sub
(bad)
enter
ret
repz
js
push
xlat
cwde
sbb
rol
test
fwait
dec
mov
pop
pop
cmp
cmp
and
xchg
adc
in
pop
xchg
test
xchg
dec
out
nop
and
mov
cld
sbb
mov
add
es
aam
push
rcr
push
cwde
movs
in
jg
out
test
(bad)
push
or
sbb
iret
dec
adc
mov
popf
idiv
shr
ret
jmp
sbb
pusha
repnz
pushf
xor
aam
lea
adc
jmp
imul
xor
sub
pop
jl
mov
(bad)
into
pop
ret
sbb
xor
imul
mov
aad
rcr
dec
out
imul
cmps
loope
pop
dec
sbb
rcl
mov
in
push
aam
pop
call
int3
dec
gs
aaa
mov
dec
movs
jg
call
out
movs
dec
stos
jns
xchg
ins
mov
adc
(bad)
nop
cmc
hlt
fdivr
stos
mov
mov
mov
cmp
sbb
inc
ins
mov
les
into
stc
adc
dec
jo
test
add
cmp
mov
data16
xor
adc
mov
sub
outs
jns
push
sbb
cwde
ins
push
push
sbb
push
and
iret
fs
das
loop
mov
lock
inc
aas
adc
push
and
xor
outs
or
inc
xlat
cwde
aas
fchs
push
rol
pop
mov
sub
pop
popf
arpl
xor
lahf
cmp
fisubr
ins
outs
fdiv
pop
daa
lods
stc
xor
or
cwde
and
sub
push
inc
pop
cmp
in
dec
xlat
and
dec
mov
inc
test
pop
jb
mov
push
pop
fsub
dec
cmp
pop
fwait
xchg
hlt
mov
sbb
mov
push
mov
(bad)
push
cmp
gs
js
xor
add
mov
bound
xchg
cmp
pushf
sub
into
adc
aam
pop
xor
add
add
xor
and
aas
xor
push
mov
mov
pop
loop
pop
adc
nop
push
outs
pop
fcmovnu
and
or
int3
out
mov
add
repz
aas
xor
ja
sub
adc
adc
jl
xor
xor
fwait
inc
dec
mov
mov
mov
xor
push
jb
xchg
je
in
sbb
or
xchg
dec
loopne
daa
cmp
fmul
mov
add
or
jl
xchg
mov
mov
call
sbb
aam
xor
call
lods
jp
xchg
mov
cld
bound
push
jp
cmp
div
std
and
dec
ror
mov
in
cld
scas
ins
setb
loop
sub
rcr
or
xchg
mov
enter
or
jbe
hlt
pop
sub
and
pop
gs
mov
into
xor
mov
xlat
xor
cmp
mov
fild
pop
and
or
pop
ja
jo
mov
jecxz
xchg
jnp
jecxz
inc
(bad)
xlat
in
fistp
fdivr
push
dec
inc
ins
pop
lds
enter
call
adc
fst
inc
sub
and
pop
lods
pop
arpl
adc
adc
xchg
adc
sbb
call
retf
push
js
jecxz
dec
(bad)
std
push
dec
jle
mov
and
daa
mov
pop
in
sbb
es
lock
scas
mov
sub
push
clc
pop
enter
mov
push
data16
aam
stos
sub
xor
sti
js
sbb
pop
daa
lock
mov
xor
call
popa
pop
xor
push
sahf
mov
sbb
stos
inc
rol
inc
mul
dec
fcmovnb
fadd
shl
loopne
jmp
aas
sar
lahf
push
adc
hlt
stc
dec
push
mov
mov
jo
adc
fisubr
push
jo
or
clc
xor
mov
(bad)
in
cmp
push
int3
lock
cmp
sbb
sub
sbb
inc
push
dec
mov
les
or
adc
cmp
(bad)
pop
xor
mov
or
out
jne
or
and
sub
and
rol
daa
aas
push
ja
jnp
and
dec
mov
add
sbb
xchg
pop
imul
les
js
and
push
sub
into
aas
sahf
cdq
mov
dec
adc
jl
jmp
push
fimul
test
mov
cld
dec
bound
xor
test
lock
(bad)
loop
fnstsw
lock
jbe
cmp
sub
aaa
in
lea
cmp
stc
js
adc
cmp
dec
sbb
or
adc
imul
out
jo
jae
in
or
lds
fadd
ror
ret
sbb
xor
mov
pop
add
fsubr
scas
les
push
inc
cmps
test
jge
jns
outs
inc
das
adc
mov
and
cwde
adc
aas
shl
pop
iret
inc
daa
xchg
mov
popf
pushf
xlat
mov
int3
fcom
sub
and
cli
neg
sub
add
sbb
mov
lods
dec
int3
bound
mov
pop
test
sub
(bad)
pop
fs
bnd
pushf
rcr
xor
hlt
hlt
(bad)
adc
aad
lahf
loopne
or
ror
clc
enter
or
xor
cmp
sub
or
mov
dec
push
pop
fdivr
rcr
aam
lock
sbb
mov
cli
fisub
ins
or
pop
push
fiadd
pop
or
je
(bad)
dec
pushw
into
call
sbb
pop
pop
js
fwait
popf
jo
sub
cmc
mov
outs
stc
out
popa
mov
add
inc
mov
inc
xchg
cli
xchg
lock
cmp
dec
fdiv
adc
out
fcom
js
hlt
sub
and
mov
test
mov
sub
das
je
ins
ja
les
xchg
call
daa
cmp
jns
stos
xlat
or
cmp
and
es
stc
fimul
push
arpl
adc
push
jge
aaa
push
mov
xor
sub
lock
iret
nop
xchg
push
jo
sub
stc
call
lods
sbb
jnp
lahf
sbb
xchg
sbb
mov
rcr
ja
out
or
pop
xor
inc
aas
and
push
mov
inc
cmp
sar
hlt
or
cmp
xor
enter
sub
xlat
sbb
sti
xor
mov
pop
out
push
and
ja
(bad)
in
xor
iret
mov
xor
retf
mov
loopne
les
mov
and
cmp
js
pushf
xchg
mov
jns
lds
inc
mov
sar
fmul
xor
adc
dec
int3
loope
enter
jo
cmp
mov
call
clc
aam
xchg
aam
loopne
add
sahf
mov
adc
rcr
das
imul
push
and
fstp
sub
pop
ja
push
iret
ficomp
sbb
mov
mov
je
fistp
test
inc
inc
js
push
dec
shl
daa
sbb
sub
push
add
call
mov
inc
cdq
leave
js
or
push
add
add
xor
dec
adc
daa
test
mov
cmp
mov
fisttp
xchg
cs
scas
fdivr
rcr
mov
leave
pop
dec
add
sbb
sub
push
lock
not
movs
sub
fdiv
sub
in
sub
es
popa
dec
add
and
daa
test
dec
sub
jmp
js
and
xchg
pop
out
mov
stos
fimul
cmp
mov
pop
mov
mov
fcomp
sub
sbb
rcr
aam
mov
stc
iret
int
dec
mov
cmp
pop
js
aaa
mov
cmps
mov
inc
jo
pop
and
ret
pop
mov
mov
cmp
or
in
fdivr
cli
add
jns
cmp
mov
stc
mov
lahf
or
ror
xchg
xor
mov
pushf
sbb
and
dec
(bad)
je
rcr
loopne
xor
jge
es
test
inc
cs
and
iret
das
fcmovnbe
repz
ja
pop
enter
and
lahf
sbb
inc
dec
and
fcomp
lock
adc
sub
cmp
adc
xchg
(bad)
fild
mov
repnz
push
test
jl
(bad)
daa
push
(bad)
call
or
add
js
sti
cmps
(bad)
mov
pop
popa
push
mov
cmp
stc
cwde
adc
or
cwde
pop
add
pushf
mov
fs
fdivr
sbb
out
js
sti
stc
loop
jl
scas
push
sbb
inc
adc
hlt
and
inc
cdq
pop
jl
cmp
push
sub
and
push
leave
jg
jmp
inc
sub
sub
stos
mov
inc
add
je
and
pushf
mov
xor
cmps
leave
or
call
gs
(bad)
push
cmp
push
cmp
jl
lods
arpl
dec
dec
pop
nop
inc
mov
cmp
sbb
jne
xchg
call
sbb
inc
pop
jl
(bad)
xor
mov
loopne
mov
xchg
into
mov
xor
pushf
cwde
lods
js
dec
xor
add
fwait
add
inc
test
int
loope
adc
xor
cmp
push
in
fdivr
and
xor
stc
daa
jns
push
xchg
sahf
nop
ins
popf
test
out
push
out
jnp
test
cli
mov
add
jno
jns
shr
inc
and
lahf
or
mov
adc
xchg
add
test
inc
pop
push
xchg
and
sub
or
cmp
call
stos
sbb
sub
and
retf
ret
cmps
or
xchg
movs
mov
js
add
pop
shl
aad
sahf
cmp
mov
in
dec
outs
adc
es
in
int
add
cmp
push
mov
daa
inc
clc
xor
xor
or
out
sub
xor
cmps
jnp
cwde
jecxz
cmp
lds
pop
(bad)
je
adc
cmps
test
clc
retf
sbb
sub
dec
out
xor
dec
ss
push
dec
cmp
test
and
mov
xchg
mov
enter
cdq
ja
and
aas
retf
jmp
je
inc
cmps
out
xor
cmp
in
add
pop
call
nop
jbe
jl
xchg
lock
fimul
out
jmp
mov
dec
adc
(bad)
cli
(bad)
pusha
jo
jns
and
sbb
cdq
push
fnsave
push
ss
mov
add
jle
fld
ins
pop
stc
lods
mov
int3
push
mov
dec
mov
cmps
pop
sbb
cmp
int
data16
movs
enter
dec
fcomp
test
and
push
int
movs
xchg
stos
mov
pop
add
or
imul
fs
enter
out
sub
es
les
xchg
jo
repz
push
inc
cld
or
cld
in
xor
out
nop
sbb
out
stc
cmp
popf
xchg
jne
dec
mov
enter
xlat
in
mov
mov
(bad)
lods
dec
leave
scas
nop
inc
test
popa
icebp
and
xor
mov
sbb
aaa
les
in
pop
mov
pop
pop
rcl
xor
sub
dec
xor
cs
adc
lds
cmp
sbb
in
add
enter
mov
fcmovbe
pop
push
mov
js
cld
push
test
stc
fucomp
jg
mov
xor
sbb
arpl
int
jo
sar
movs
mov
or
pop
sub
cld
mov
test
enter
dec
fdiv
jbe
ret
inc
rcl
mov
push
xchg
pop
aam
mov
and
adc
pop
push
ins
dec
xor
fistp
xor
mov
das
mov
xchg
in
or
jns
fsubr
adc
cdq
cmp
jge
ds
dec
arpl
addr16
shr
mov
pop
(bad)
(bad)
pop
cld
xchg
push
push
adc
cmp
pop
pushf
sete
adc
sbb
fsubr
hlt
cmps
mov
jbe
sbb
cmps
push
popa
js
xor
add
xor
fcom
movd
mov
repz
rcl
(bad)
pop
shl
lock
xchg
sub
pop
mov
and
or
mov
push
add
push
cmp
xor
scas
sar
and
ja
inc
iret
jns
xlat
add
lea
call
daa
(bad)
cli
mov
cmp
cwde
cdq
xchg
pusha
sub
clc
call
xchg
ss
ins
xchg
mov
push
inc
push
inc
jo
sub
and
cmp
cld
(bad)
ins
out
sbb
push
sub
add
popa
sub
fwait
movs
dec
int3
dec
ja
stos
inc
and
shl
pop
and
stos
and
fisttp
jecxz
lds
pop
ja
mov
jle
pop
out
sbb
sub
loope
push
cmc
sub
jl
lds
fmul
push
cmp
(bad)
ret
jns
aam
jbe
cwde
mov
push
stc
inc
pop
xor
nop
mov
repz
pusha
aam
daa
(bad)
cmp
mov
(bad)
icebp
mov
dec
fistp
sub
mov
pop
fisub
repnz
loopne
call
xlat
push
and
dec
add
sbb
sub
or
mov
dec
test
cld
cmp
dec
fldenv
mov
inc
ja
fcom
jns
xlat
test
xor
sahf
(bad)
jns
jo
mov
inc
or
dec
test
out
add
std
xlat
into
(bad)
stos
je
sub
in
popa
cs
scas
pushf
xor
inc
adc
and
push
jo
and
push
(bad)
jae
cmp
lds
repnz
bound
mov
stc
loope
xchg
sub
xchg
cmp
sti
cwde
in
adc
add
movs
(bad)
push
js
lods
stos
xchg
cmp
pop
bound
xor
add
xor
push
loopne
enter
int
xchg
xchg
iret
adc
dec
aam
nop
xlat
mov
fcmovbe
popa
fstp
or
lods
sbb
sbb
(bad)
call
cmp
xlat
dec
jmp
add
xor
mov
aam
inc
ins
push
jns
inc
mov
jne
imul
mov
aam
stos
loopne
jp
cmp
cmp
pop
mov
jne
jno
das
cwde
xchg
push
nop
les
inc
jp
cld
mov
daa
pop
test
in
fisubr
(bad)
out
and
add
sbb
(bad)
mov
pop
in
dec
add
sbb
push
sbb
cmp
sbb
inc
(bad)
aad
test
xor
dec
cwde
int3
fistp
jne
retf
mov
sub
xchg
or
sub
pusha
dec
and
cmp
pop
mov
out
push
push
pushf
in
xlat
loope
outs
lds
inc
mov
xchg
js
or
dec
inc
mov
int3
in
out
mov
jl
mov
push
aam
jle
dec
push
repz
pop
lods
arpl
sbb
xor
out
aam
int
push
mov
sbb
pop
xor
repnz
or
cmp
shl
and
xchg
xlat
in
js
sub
mov
xor
sti
jmp
pop
inc
fwait
mov
mov
mov
pop
mov
inc
cwde
push
sti
cmp
outs
or
into
in
or
or
cmps
rol
adc
and
sar
(bad)
jno
push
dec
xchg
inc
push
pop
push
aam
sbb
repnz
xor
mov
in
scas
and
mov
(bad)
mov
outs
add
xor
je
mov
and
dec
jp
sbb
cmp
loope
add
movs
daa
idiv
mov
ret
fdivrp
xor
lods
pusha
mov
fld
inc
adc
loopne
stos
dec
mov
hlt
leave
in
fld
fidivr
lea
adc
pusha
ror
inc
push
and
mov
mov
xor
repz
sar
sub
cmp
lock
adc
inc
in
call
sbb
out
addr16
cwde
add
adc
clc
loopne
out
(bad)
mov
sti
fdiv
inc
mov
mov
ficomp
aaa
add
int3
sbb
adc
fld
sub
mov
ret
jne
push
fucom
out
popa
stc
adc
(bad)
mov
push
xor
fild
add
push
xor
lahf
(bad)
rol
in
jp
xor
push
mov
cmp
movs
fbld
dec
and
and
push
les
pop
or
xchg
jb
mov
inc
test
jmp
adc
nop
clc
imul
mov
xlat
or
lods
es
push
cwde
out
dec
mov
pop
push
lods
sbb
push
push
pushf
mov
test
add
sub
pop
xchg
inc
push
cwde
push
test
mov
in
pop
out
add
mov
xor
jl
dec
not
mov
add
test
mov
das
in
dec
daa
mov
adc
dec
(bad)
and
jnp
sbb
cdq
lods
shl
mov
and
es
jnp
fcmovnu
push
in
mov
dec
in
fidivr
out
jge
fwait
sub
fisttp
pusha
fnsave
jmp
jns
js
sub
sbb
push
sub
xor
dec
lea
sbb
out
xor
inc
int3
fimul
add
adc
inc
pop
or
les
std
cmp
inc
pop
mov
xchg
out
or
test
mov
add
js
sub
mov
sbb
mov
test
out
sar
mov
xchg
out
in
in
xlat
xlat
xor
pop
dec
call
dec
pop
push
clc
imul
sbb
inc
jne
mov
in
out
sti
aas
mov
dec
imul
cmps
int3
iret
into
add
xor
cmps
push
fisttp
xor
push
adc
lds
dec
mov
add
daa
retf
mov
cwde
outs
xor
jne
in
sub
movs
shl
push
fsubr
lahf
xor
jle
mov
call
push
ss
add
(bad)
loop
push
cwde
push
adc
mov
das
ror
dec
or
jns
inc
mov
push
repnz
pop
in
inc
dec
lahf
loopne
push
and
imul
loop
or
inc
xor
or
out
in
or
mov
retf
call
out
mov
mov
stos
js
jb
lds
jmp
inc
and
mov
sub
xor
sub
add
or
ins
push
sub
stos
and
xor
sbb
out
push
js
lock
push
les
ins
cmp
xchg
fs
xor
ret
sbb
adc
sbb
add
shl
dec
fdiv
adc
clc
sub
or
pop
jns
rol
(bad)
jnp
cwde
add
cdq
add
sub
scas
stc
jae
push
xor
fbld
lahf
aam
jae
clc
(bad)
clc
pushf
lds
cmc
fistp
int3
jbe
scas
dec
fsub
iret
sbb
movs
inc
mov
les
sub
ror
mov
mov
loope
add
sahf
mov
ins
or
mov
xchg
ret
xor
sub
inc
jp
add
pop
xchg
xor
test
in
mov
shr
stc
push
ficom
or
shl
mov
mov
dec
mov
stos
sbb
cmp
dec
cdq
int3
or
out
out
sub
in
xchg
je
jo
pop
cmp
sar
mov
out
aad
pop
xor
xchg
scas
pusha
xor
or
cli
lock
or
cwde
call
push
pusha
cmp
jbe
nop
xor
jmp
inc
pop
push
aas
ret
fdivr
and
sbb
adc
loope
and
jnp
dec
jne
mov
lods
pop
adc
dec
push
popf
icebp
mov
cmp
call
jle
rol
fwait
jle
js
pop
je
push
xchg
mov
jnp
ret
js
jle
xchg
ror
lock
call
pop
sti
cli
jmp
add
jns
mov
retf
loopne
ficom
mov
or
pop
cli
pop
out
jne
inc
pop
aam
jo
pop
mov
adc
xor
inc
fwait
cmp
xor
mov
(bad)
push
xor
daa
mov
cmp
daa
xor
add
push
push
jl
add
push
cld
ret
arpl
sbb
push
mov
sub
fsub
mov
cdq
jle
add
dec
lods
loope
fdiv
mov
pop
push
inc
jmp
(bad)
cdq
cmp
fist
dec
dec
(bad)
(bad)
out
and
sbb
pop
jb
pushf
sub
jns
scas
mov
push
in
in
fisubr
fadd
jb
lods
cli
mov
ficomp
out
mov
loope
push
dec
fisubr
fnstcw
stc
in
popa
jmp
test
leave
and
push
lock
(bad)
mov
jno
mov
adc
pop
dec
cmp
and
popf
pop
inc
pop
pop
enter
dec
or
js
xor
imul
push
dec
loopne
mov
lahf
out
mov
sbb
in
dec
dec
pushf
retf
dec
sub
pop
mov
cmps
xlat
mov
lods
stos
arpl
cdq
mov
sub
cwde
lds
pusha
mov
test
jo
sub
xchg
in
(bad)
dec
pop
fs
jg
cmc
xor
fisub
cmp
xor
ss
(bad)
adc
add
sub
(bad)
inc
into
and
call
inc
jae
ins
and
adc
scas
fadd
in
out
mov
cdq
xor
cmc
cmp
pop
cmp
lods
loop
retf
cmps
ins
push
call
add
add
clc
mov
or
jle
sbb
mov
inc
loopne
sbb
lods
and
pop
in
mov
mov
cmp
push
mov
in
mov
inc
js
test
cs
adc
mov
ja
pop
rcl
in
nop
dec
enter
pop
mov
shl
pop
mov
mov
mov
cdq
cmp
sub
jo
movs
add
in
dec
lds
and
add
aam
fimul
movs
cmps
and
sbb
out
add
loopne
sbb
jecxz
(bad)
cs
cmp
mov
pop
sbb
mov
mov
mov
inc
repnz
les
or
lods
add
lock
(bad)
js
out
je
addr16
mov
add
stc
in
(bad)
xor
call
add
and
inc
cmp
adc
mov
inc
pop
into
sbb
ror
test
sub
js
sti
xor
dec
mov
inc
je
xor
sar
cmp
icebp
dec
sbb
jle
(bad)
xlat
in
es
pop
add
fstp
into
sub
jbe
adc
xchg
lahf
sbb
add
loopne
sbb
out
rcr
pushf
js
adc
test
mov
outs
jo
xor
xor
ret
les
mov
cmp
jmp
sbb
xor
xchg
xchg
rcl
and
clc
out
enter
int3
xor
xor
into
(bad)
fld
add
fdiv
outs
dec
jle
xor
xchg
jo
nop
shr
pop
(bad)
push
cmp
mov
clc
xor
or
hlt
sbb
hlt
data16
int
mov
pushf
sub
mov
call
mov
add
mov
daa
cmp
js
test
ret
pop
mov
cwde
dec
enter
jle
add
inc
jl
xor
mov
test
out
add
daa
push
push
sbb
movs
in
and
loopne
xlat
div
in
in
sub
pop
jbe
pop
test
popf
aad
inc
dec
imul
adc
clc
xor
addr16
push
mov
loopne
dec
bound
jns
sub
mov
sbb
adc
ret
bound
xor
mov
pop
sbb
and
test
inc
sti
fwait
mov
fmul
mov
retf
das
rcr
push
push
jno
popa
hlt
pushf
lds
sbb
cmps
xor
and
mov
mov
mov
sar
out
mov
inc
dec
mov
sbb
pop
inc
sbb
mov
jmp
xchg
xor
sbb
iret
xor
mov
test
iret
dec
mov
push
adc
scas
loope
test
sbb
add
mov
jmp
std
cmp
(bad)
xor
or
push
imul
les
mov
dec
cmp
popf
add
lock
jle
mov
inc
sti
cmps
or
jne
out
pop
pop
std
mov
jno
inc
inc
dec
xchg
pop
cmp
push
leave
in
add
out
fst
add
cmp
daa
(bad)
retf
out
lock
mov
ror
sti
pop
lds
data16
mov
test
jo
fadd
out
push
push
fiadd
mov
sub
jecxz
dec
mov
js
mov
pop
ror
retf
xor
jns
fisub
sti
push
fisubr
push
mov
add
je
ror
jbe
in
mov
hlt
mov
push
cmp
mov
repz
add
les
sub
btr
mov
mov
test
xor
call
js
sti
ror
cmp
push
jmp
sbb
or
inc
ret
je
(bad)
out
and
les
cmp
mov
lods
jae
clc
xor
and
cwde
xor
dec
jno
jo
xor
jae
ficomp
add
mov
clc
fadd
mov
or
add
rol
enter
lock
sar
repz
add
mov
movs
fdivr
in
xor
dec
mov
push
mov
ret
mov
js
mov
ins
fisubr
call
add
push
mov
xor
xor
(bad)
mov
cmps
out
xor
mov
or
aam
das
add
mov
enter
daa
add
call
cmps
stos
sbb
pop
cli
(bad)
fidiv
stc
(bad)
fdiv
mov
sub
sub
fbld
push
jmp
sub
js
mov
mov
mov
out
call
xor
mov
push
jns
adc
jns
xchg
and
sbb
fwait
xchg
rol
sbb
shr
mov
into
ins
call
xchg
pushf
test
cli
and
adc
ins
or
stos
xchg
in
add
cld
cld
pop
leave
fwait
inc
sub
(bad)
pushf
pushf
sub
inc
push
fnsetpm(287
pop
or
icebp
sbb
test
adc
sub
or
scas
sar
call
in
mov
lds
clc
dec
pop
xor
sbb
and
and
jns
(bad)
std
ror
sub
inc
je
pop
mov
out
inc
dec
mov
dec
outs
jg
fsub
adc
imul
inc
fsubr
lods
out
mov
mov
out
mov
nop
mov
clc
jne
inc
loopne
xor
adc
xor
daa
bound
and
icebp
cmp
mov
sub
mov
lods
out
mov
inc
jecxz
mov
add
cmp
lds
dec
movs
xchg
js
sub
add
mov
push
push
mov
mov
jl
rcr
sbb
rol
outs
(bad)
and
xor
addr16
clc
cmp
jbe
(bad)
ror
mov
scas
cmp
mov
jns
enter
es
inc
call
js
lock
pushf
jo
call
sub
sub
daa
push
mov
cmps
imul
mov
icebp
add
dec
sub
push
jle
jns
pop
mov
mov
pop
jle
or
call
fld
jnp
mov
(bad)
repz
sahf
call
sbb
pop
fstp
sti
push
shl
jg
cmp
stos
jle
xchg
cmps
xchg
mov
gs
pop
lock
in
jae
mov
sahf
mov
cs
mov
lahf
lods
loopne
jo
mov
xchg
xchg
push
sbb
into
dec
out
xor
add
daa
out
shl
shr
ds
cmp
call
xchg
enter
cmp
xchg
jmp
leave
cmp
pushf
lock
xor
cmp
cwde
mov
(bad)
mov
or
dec
inc
popf
aam
inc
sub
mov
sub
push
mov
add
stos
popf
stc
rcr
stos
dec
int3
dec
and
cmp
cmps
inc
clc
lods
mov
fmul
jmp
in
push
ret
ins
in
and
repz
addr16
sub
sub
push
inc
les
or
dec
xor
jns
in
or
push
jmp
(bad)
fcom
mov
rcr
ret
subps
cmps
mov
dec
push
aaa
(bad)
pusha
les
dec
or
cld
adc
xor
jmp
dec
test
sub
jecxz
pop
imul
daa
inc
popa
loopne
fdivr
pop
inc
cld
mov
cmp
adc
fcomp
cmp
cmp
rol
push
cwde
loop
jp
push
ins
inc
jno
int3
(bad)
out
mov
mov
pushf
js
jl
enter
adc
add
scas
enter
inc
fisubr
jl
jmp
mov
adc
push
xorps
and
in
aaa
pop
js
ror
mov
enter
lds
out
pusha
cmpxchg
dec
sub
mov
fisttp
jne
inc
xor
jle
aam
inc
ret
lock
cmp
aaa
or
inc
js
xor
js
pop
fsubr
mov
in
xchg
cmp
dec
pop
lds
xor
mov
fs
call
fsub
adc
fcomp
dec
lock
and
mov
fsubr
icebp
out
sub
mov
xchg
lds
or
pop
call
movs
cmp
ins
adc
rol
xor
cmp
mov
jle
js
inc
push
xor
loopne
sub
sub
shl
sar
pop
dec
adc
cwde
jo
push
pop
jl
push
cmp
mov
lahf
cmp
call
push
dec
inc
pop
xor
cmp
stos
pop
call
sbb
cmp
jbe
lds
pop
sub
inc
pop
in
mov
lock
push
mov
or
nop
daa
nop
daa
retf
ins
arpl
xchg
or
clc
xor
sub
adc
les
inc
xor
out
cmp
test
push
shl
loopne
push
movs
(bad)
mov
or
mov
pusha
movs
or
lods
leave
or
mov
xlat
loopne
sbb
xor
out
fisubr
add
mov
rol
in
adc
lods
ret
mov
xchg
sbb
inc
pop
mov
stos
cmp
fwait
cwde
adc
mov
inc
cmp
fisubr
or
and
cdq
push
lock
aas
or
mov
fs
sti
ficomp
in
pop
repnz
push
fstp
cmp
icebp
test
imul
aam
pop
test
pop
inc
call
je
icebp
jp
sbb
mov
cmp
inc
out
imul
jle
jmp
inc
pop
enter
sub
or
push
pop
pop
sbb
xlat
in
jle
dec
cmc
mov
jmp
cld
cld
or
xor
pusha
cmp
cmp
daa
inc
js
lods
cmps
jle
lds
and
cld
xor
ficomp
mov
fmul
push
ins
mov
fdivr
ror
pop
push
fdivr
jmp
popf
mov
pop
aam
lods
inc
fimul
ins
jle
jge
hlt
sbb
jl
cmp
lea
sub
test
sub
inc
dec
movs
loopne
jg
or
mov
in
mov
or
sar
push
xchg
lea
xchg
add
rol
xlat
pop
jle
(bad)
(bad)
(bad)
lock
fnstenv
push
je
xor
or
sbb
mov
repnz
mov
loopne
push
jbe
lock
(bad)
stc
aad
inc
jmp
mov
sbb
leave
in
jmp
in
pop
daa
xor
pop
xor
jno
xor
(bad)
sbb
dec
pop
loopne
inc
es
call
or
sbb
or
inc
add
fwait
test
sbb
mov
mov
and
add
mov
movs
cmp
test
add
add
or
cmp
xlat
pop
int3
xchg
enter
push
mov
mov
push
fadd
out
rol
cli
sub
dec
inc
pop
mov
mov
cdq
add
nop
push
xor
sbb
stos
loopne
sub
popa
dec
jo
jmp
xor
mov
xor
or
daa
jne
mov
je
sub
out
xchg
faddp
inc
pop
fld
mov
cmp
dec
test
xor
sub
stos
lock
lahf
into
mov
xchg
rcr
dec
jae
scas
sub
daa
lods
iret
nop
imul
sbb
(bad)
push
dec
push
ds
ret
cmp
cwde
and
lds
retf
les
call
lock
and
sbb
sub
inc
cmp
sub
pop
sub
dec
rol
pop
jo
cwde
inc
jge
pop
mov
dec
xchg
cmp
rcl
call
and
cmp
jo
mov
pop
mov
sbb
jnp
lahf
mov
and
int
xchg
jns
vpsraw
mov
call
mov
call
mov
sub
and
push
xor
and
out
fmul
pop
shr
adc
mov
dec
shl
out
pop
mov
push
mov
int3
dec
sub
hlt
fistp
ins
jl
out
mov
lods
jnp
or
or
sub
push
mov
cmp
lds
leave
jae
pop
fdiv
pop
inc
mov
outs
jo
mov
sbb
cs
fdivr
jl
pushf
lods
les
xchg
clc
js
je
mov
sub
mov
retf
mov
mov
xor
loop
rcl
xor
xor
outs
push
call
xchg
xlat
ss
sub
sbb
add
push
stc
mov
fadd
jns
fld
push
jae
push
hlt
mov
adc
mov
mov
xlat
scas
into
cwde
xchg
jb
jae
aas
loopne
mov
in
mov
loop
sub
stc
sbb
ins
aaa
jle
xor
sar
(bad)
into
add
lea
scas
or
out
(bad)
jl
adc
push
cwde
mov
(bad)
push
fs
ins
cli
sbb
repnz
xchg
sbb
daa
jl
jp
mov
(bad)
data16
or
sahf
loopne
cmp
in
cmp
mov
or
cwde
das
pop
pop
std
test
mov
stos
or
or
hlt
fidiv
test
dec
xchg
pop
in
adc
inc
stos
pop
sub
pushf
cwde
pop
scas
xchg
adc
add
pop
adc
pop
(bad)
sbb
test
retf
dec
sbb
mov
out
in
inc
pusha
inc
xor
cld
pop
push
mov
inc
shl
test
pop
jecxz
lds
pop
rcl
sub
cmp
pushf
rcr
mov
or
sub
js
popa
sbb
xchg
cli
xchg
enter
call
(bad)
jae
(bad)
fnsetpm(287
push
addr16
dec
cmp
jge
inc
sub
enter
je
test
loopne
mov
int3
aam
xchg
adc
jbe
aam
xor
call
fisubr
dec
mov
lahf
rol
repnz
fwait
push
movs
push
mov
mov
and
sbb
and
test
into
call
adc
or
or
cmp
in
and
jecxz
push
js
adc
cmp
test
and
add
sbb
push
sub
lock
(bad)
lds
mov
mov
adc
or
pop
adc
pop
mov
daa
mov
push
aaa
fcomp
xor
iret
pop
cld
adc
mov
inc
mov
xor
mov
dec
mov
xor
ins
(bad)
jns
pop
and
ret
inc
cld
adc
mov
push
xor
rcr
push
sbb
es
enter
jle
sub
aas
adc
in
cwde
lock
pop
ja
add
jnp
cwde
adc
enter
(bad)
xor
popf
cmp
mov
jle
fwait
xor
imul
sbb
pusha
dec
xchg
jge
xor
pop
push
jo
pop
inc
int3
xor
push
jl
(bad)
(bad)
xlat
jbe
outs
cmp
xor
inc
pusha
js
ins
sub
pop
out
test
in
pop
daa
enter
cmp
sbb
xchg
cwde
stos
iret
sbb
arpl
jae
adc
jb
cmps
adc
and
je
(bad)
dec
hlt
(bad)
cld
cmp
sub
push
pop
jno
fdivr
fdivr
inc
cmp
jno
outs
pusha
xor
adc
adc
sub
jle
jg
sbb
sub
add
fimul
push
push
adc
mov
jns
ror
adc
shl
data16
inc
das
ss
dec
add
mov
dec
out
sbb
je
adc
int3
mov
sbb
shr
test
call
xor
xor
sbb
out
sbb
sbb
mov
mov
dec
pusha
sahf
fidivr
jmp
(bad)
into
jecxz
xchg
nop
in
jb
cmp
mov
je
and
aam
pop
dec
pop
and
ins
cwde
clc
fistp
xor
mov
and
or
enter
dec
and
fmul
das
das
sbb
sbb
hlt
adc
jp
pop
pop
into
push
aam
mov
ins
loopne
mov
cmp
mov
dec
sub
fcomp
xor
xlat
ret
retf
mov
cli
jne
into
cwde
dec
ds
sub
shl
aam
idiv
pushf
cmps
add
ins
pop
jle
sub
cdq
push
js
retf
movs
imul
outs
ins
(bad)
adc
xor
mov
(bad)
clc
shr
jo
dec
mov
sti
xchg
stos
pop
adc
push
in
int
loopne
pop
in
loope
sub
das
mov
or
scas
pusha
push
xor
(bad)
stc
(bad)
cmp
hlt
mov
jle
add
jmp
je
bound
mov
dec
enter
jle
add
add
neg
mov
cmp
dec
int3
je
movs
ret
mov
loopne
sbb
jno
rcr
js
scas
cmp
pop
or
jae
inc
cmp
fcmovb
jo
and
test
leave
in
retf
pop
xlat
ret
stc
sub
aas
jp
pop
sbb
and
inc
inc
dec
pop
jbe
pop
int
call
leave
leave
cmp
inc
rcr
sub
and
pop
pop
pop
enter
mov
mov
scas
call
stc
jl
int
or
ret
rcr
in
xchg
int3
imul
add
hlt
daa
xchg
mov
dec
ret
ins
jnp
cmp
sub
ror
mov
out
and
mov
fsubr
sbb
fwait
js
mov
fistp
sub
push
hlt
shl
xchg
into
iret
jmp
cmps
cwde
inc
out
jbe
clc
xor
mov
inc
mov
xor
in
inc
clc
ret
jmp
shl
sub
call
test
idiv
(bad)
(bad)
or
adc
aaa
jmp
js
add
(bad)
fwait
rcr
dec
shl
sub
dec
adc
sti
jnp
cmp
push
mul
sub
lock
aam
fwait
leave
sub
jmp
scas
mov
xor
push
and
iret
in
mov
xor
mov
pop
push
mov
mov
stc
shl
aad
fidiv
mov
push
(bad)
jo
inc
and
cwde
(bad)
fmul
sbb
inc
fwait
sub
cwde
js
mov
out
add
push
inc
jo
jo
sub
je
movs
ror
int
mov
sub
or
add
cmp
out
bnd
or
call
xlat
daa
clc
jo
cdq
pushf
out
js
call
mov
inc
shl
push
dec
js
xchg
cmp
popf
sbb
mov
dec
fistp
or
(bad)
test
fbstp
(bad)
rcr
in
in
adc
push
stos
out
sbb
hlt
xchg
xchg
adc
fist
and
(bad)
rcl
dec
adc
jo
aam
(bad)
aas
je
cwde
mov
out
int3
movs
sbb
jo
mov
sub
iret
movs
push
std
in
ja
fcmovu
popf
aad
jle
add
xchg
xor
arpl
dec
mov
xor
aam
push
or
mov
aaa
test
push
mov
and
sar
test
outs
dec
out
sub
in
in
hlt
into
sbb
xchg
mov
aas
cwde
xor
push
add
push
mov
xor
lds
pop
mov
in
pop
cdq
shl
push
sbb
scas
(bad)
outs
ins
lds
push
or
call
loope
lahf
xchg
ds
inc
aam
fsubr
and
ins
push
lds
add
lea
in
push
mov
add
xchg
cmp
xlat
xchg
dec
rcl
sbb
cwde
ins
(bad)
es
in
xlat
mov
cmps
(bad)
fsubr
std
call
mov
push
xor
cmp
adc
jle
call
les
syscall
addr16
fs
sub
and
sbb
jl
or
test
jge
movs
pop
fwait
in
int
rcl
loope
shr
xchg
das
sub
mov
pop
adc
mov
pop
dec
push
mov
iret
dec
outs
cmp
stc
aad
inc
sbb
pop
test
fistp
pop
iret
pop
dec
pop
sar
and
and
test
stos
xchg
sub
movs
fdiv
test
rcl
mov
push
add
sbb
or
stc
js
call
dec
sbb
sar
and
mov
stc
into
mov
pushf
or
add
cmp
ret
fwait
shl
(bad)
aam
pop
xor
clc
sbb
je
not
mov
inc
push
jle
lock
test
popf
pop
add
and
mov
jp
clc
ins
mov
cwde
xor
or
xchg
sbb
fcmovnu
sub
dec
cwde
cmc
xor
push
in
pop
push
xor
comiss
jne
lods
inc
lods
cmp
cmp
fimul
pop
test
int3
int3
sar
sbb
call
mov
clc
and
daa
mov
cmp
hlt
xlat
jmp
sbb
sbb
mov
add
mov
add
sub
and
lds
cmc
jmp
mov
das
gs
call
stc
xlat
mov
sar
fnstsw
xor
or
push
ror
cld
jo
xor
icebp
cmp
mov
or
pop
mov
jo
xchg
dec
push
je
inc
lea
dec
sub
daa
mov
adc
test
cmp
pop
pop
xor
mov
ret
adc
jmp
pop
repnz
sub
dec
loopne
pop
mov
je
dec
inc
xchg
xor
fmul
add
mov
fidiv
cli
and
int
setg
mov
and
cmp
add
scas
in
jo
cmp
mov
jmp
sbb
fwait
sub
int
aam
mov
xchg
jge
pop
mov
fmulp
add
jp
pop
mov
ror
xor
mov
ins
adc
sbb
cmp
movs
cmp
cs
out
dec
or
popf
movs
cmp
fadd
ja
mov
mov
sub
sbb
retf
fisub
mov
and
sub
fistp
push
inc
test
lock
xor
push
dec
dec
scas
xor
sbb
test
xor
mov
dec
jmp
or
daa
das
test
(bad)
nop
outs
mov
mov
mov
pusha
test
into
push
sub
je
adc
stc
rcr
and
(bad)
fdivr
je
or
and
push
push
daa
(bad)
call
mov
fist
cli
push
lahf
es
fdivr
push
in
call
sub
in
call
inc
mov
push
mov
push
pop
inc
push
cdq
repz
xchg
enter
mov
je
lods
cmp
sub
inc
dec
aam
in
jp
push
pop
sub
cmp
scas
sbb
mov
sbb
lea
in
pop
ret
call
mov
ins
fld
dec
xchg
pop
jl
nop
mov
sub
dec
dec
mov
test
std
mov
mov
in
fmul
cmp
push
sub
sub
push
mov
dec
addr16
clc
xlat
mov
fild
stos
mov
and
cwde
pop
adc
adc
pop
add
jns
fdivr
adc
push
xor
sbb
and
push
ret
js
add
push
push
cdq
and
push
adc
mov
(bad)
push
add
mov
in
jmp
test
rol
jnp
xlat
std
nop
push
cmp
fnstsw
xchg
mov
cmp
xor
cmp
adc
xchg
cmp
jecxz
fwait
dec
mov
inc
or
xor
mov
mov
xchg
les
dec
xor
sbb
cmps
mov
fwait
sbb
dec
retf
sub
jl
pusha
and
imul
jne
call
sbb
add
cmp
rcl
into
add
push
jmp
aam
add
or
mov
js
imul
cmp
adc
sub
fcom
ja
pop
xor
or
pop
mov
aam
push
cmp
loopne
dec
cmp
hlt
in
jbe
cmp
ds
jle
aam
repz
into
or
mov
and
inc
jbe
les
jl
xor
ds
mov
ja
js
mov
neg
les
std
ficomp
fld
mov
xchg
mov
fdivr
in
cmps
jnp
lock
test
aam
outs
add
pop
push
mov
cmps
sbb
sbb
jecxz
inc
addr16
ja
enter
js
dec
add
sub
faddp
sbb
rol
sbb
cmc
push
or
int3
cdq
pop
pop
into
adc
(bad)
fsubr
push
mov
call
xor
inc
mov
dec
data16
mov
adc
cmp
jg
pop
sbb
fs
leave
pop
cmps
aas
push
pop
lar
inc
dec
sbb
cs
mov
movs
pusha
push
leave
std
inc
pop
dec
cwde
lds
cmp
add
dec
mov
mov
daa
xchg
mov
ins
push
sub
in
add
sbb
neg
lds
xchg
mov
mov
loopne
mov
push
cmp
mov
pop
push
mov
sbb
aad
ds
sub
jns
je
in
ja
call
dec
or
sti
dec
jl
xor
and
shl
inc
xor
inc
push
or
mov
and
push
pop
pushf
pop
pcmpeqd
mov
sub
jns
dec
sub
nop
sar
(bad)
gs
mov
fcmovbe
jae
sbb
dec
stc
test
dec
xor
xlat
dec
mov
jecxz
sbb
ss
xchg
leave
jmp
(bad)
repz
pop
jo
cmp
iret
mov
shl
cmp
dec
adc
cdq
dec
sbb
mov
inc
ins
xchg
sub
push
cmp
neg
iret
out
mov
inc
dec
stos
add
xchg
dec
dec
inc
test
and
aad
nop
enter
lods
push
push
aas
sbb
test
push
jle
cwde
nop
pop
inc
mov
inc
xor
aad
mov
xor
mov
pop
adc
fcmovnu
clc
sbb
or
mov
cmp
(bad)
movs
inc
neg
mov
pop
fwait
xor
in
dec
or
cmp
dec
js
pop
les
pop
mov
lock
mov
aam
xor
jp
pop
sub
pop
enter
and
cmp
push
pop
or
mov
dec
xlat
addr16
dec
jo
mov
dec
in
test
cmps
cdq
pop
xor
inc
and
cdq
mov
popa
xlat
sub
retf
jb
fdiv
pop
js
fnstcw
pop
pop
(bad)
jmp
push
inc
js
hlt
call
adc
into
imul
sbb
mov
mov
hlt
mov
cmps
or
inc
cmp
mov
xor
add
lahf
add
or
mov
fsubr
mov
aas
mov
push
sub
je
cmp
mov
mov
pop
pop
or
xor
xchg
pop
xchg
fisubr
cmp
call
inc
popa
add
push
xor
xchg
stc
test
cmp
sub
cwde
mov
jo
stos
mov
sub
xor
push
and
sbb
aas
cmp
add
adc
cmp
dec
cmp
out
movs
into
lods
fucomip
xor
cmc
or
xor
fwait
jmp
jmp
enter
xor
xchg
push
cmp
icebp
pop
sbb
pop
dec
les
pop
inc
ins
nop
inc
lods
std
push
js
in
popf
call
xor
add
loope
adc
std
stos
movs
sbb
ror
mov
and
mov
in
dec
and
jb
js
out
mov
pop
mov
mov
jae
into
cld
iret
xchg
cmc
(bad)
push
mov
dec
les
mov
xchg
fcmove
daa
into
sbb
daa
cmp
aaa
jo
and
sbb
aad
dec
das
ins
fs
pushf
xor
call
int
xor
fxch
sub
stos
and
sbb
or
fs
and
lods
ja
push
jo
sahf
sub
cmp
ja
cwde
jge
lea
js
in
mov
je
leave
mov
mov
sbb
mov
cmp
or
add
mov
mov
mov
ins
stc
loop
outs
inc
repz
adc
mov
pusha
dec
in
daa
inc
shr
and
xor
scas
pushf
fstp
and
into
sub
adc
sub
outs
mov
lea
jecxz
mov
add
and
jns
mov
loopne
jmp
ret
fimul
sar
cmp
std
rcl
dec
mov
out
or
jle
mov
xchg
sbb
xchg
(bad)
inc
(bad)
push
stos
cmp
arpl
adc
cmp
fcomp
call
mov
sub
mov
push
pop
cwde
sbb
fst
pop
fimul
cwde
mov
(bad)
loopne
loopne
inc
cmp
aaa
xlat
push
call
jnp
out
fadd
adc
hlt
cmps
sub
scas
movs
and
int
jnp
add
retf
in
push
lods
cld
fsubr
fwait
sbb
dec
movs
mov
cmp
or
hlt
inc
pop
push
pop
popa
fld
cmp
(bad)
and
jmp
and
sub
xchg
mov
ret
loopne
sub
inc
pop
retf
lock
xchg
lahf
inc
stc
aad
js
jmp
push
lods
pop
adc
or
add
out
inc
adc
xor
xchg
dec
cmp
push
dec
push
inc
mov
js
jp
and
dec
not
sbb
sti
out
mov
mov
es
jns
and
jae
daa
xor
mov
lods
inc
hlt
das
les
or
scas
cwde
push
push
adc
pushf
or
stc
xor
in
mov
xchg
fdivr
scas
pop
daa
and
xor
outs
sbb
xor
or
pushf
int
test
in
xchg
fisttp
popa
out
fdivr
std
pop
repz
xor
push
push
mov
leave
adc
jle
dec
inc
push
or
adc
or
jmp
(bad)
add
push
rol
sbb
bound
jmp
int3
xor
push
test
adc
adc
mov
loopne
cmp
cs
loopne
lods
xor
scas
add
ficomp
sti
enter
add
push
(bad)
xor
sub
mov
loop
xchg
mov
and
push
cmp
daa
loope
aaa
push
int3
pop
cmp
imul
retf
movs
xchg
inc
test
xor
int3
(bad)
lock
jmp
test
adc
pop
dec
jg
inc
jge
xchg
call
mov
jb
or
cmp
jns
or
push
movs
pop
pop
test
out
pop
pop
aas
fistp
lods
sbb
add
cmp
ins
push
jmp
pushf
dec
mov
sub
clc
mov
mov
popa
mov
outs
(bad)
push
mov
je
mov
xchg
cmp
rol
shr
add
add
push
fmul
gs
jo
inc
neg
inc
or
clc
cwde
aas
jp
push
inc
aam
test
cmp
inc
mov
aas
adc
cmp
cmps
add
rcl
icebp
clc
xchg
in
cmp
dec
jmp
or
inc
imul
push
and
fst
std
cmc
pop
int3
xor
lods
push
aaa
mov
inc
and
adc
xchg
pop
add
cmp
sub
add
and
mov
mov
fidiv
imul
ins
scas
and
adc
out
shr
fsubr
mov
mov
sub
mov
add
or
sbb
xcrypt-cbc
cmps
aam
or
xchg
or
pushf
pop
mov
mov
mov
aam
sub
shl
pop
mov
int3
sub
ficomp
in
or
ficomp
mov
add
imul
bound
pop
jecxz
nop
fild
mov
mov
dec
mov
aas
pusha
dec
icebp
sub
mov
and
fadd
mov
cmp
fisttp
mov
int
adc
cmps
jmp
pop
cs
retf
dec
test
and
cmp
cmp
imul
xor
sub
push
js
lods
into
mov
pop
adc
push
cmps
js
dec
into
inc
les
dec
rcl
neg
cmp
dec
sub
pusha
add
je
pop
pop
dec
shl
hlt
xchg
inc
add
in
lods
stc
cmp
add
bound
xor
mov
imul
dec
movs
fild
dec
cwde
pop
dec
cmp
(bad)
mov
mov
(bad)
push
push
xchg
lahf
call
mov
pop
lods
pop
js
call
xlat
fsubr
push
cmp
lock
fmul
retf
cmp
int3
dec
dec
xor
addr16
adc
js
cmps
mov
daa
push
aaa
cwde
vucomisd
les
and
push
fisubr
in
arpl
loopne
loop
jae
xchg
int
mov
cmp
mov
push
fs
xor
movs
xor
fld
inc
fdiv
mov
ins
xor
pop
nop
and
je
cmp
xor
mov
cdq
(bad)
sbb
in
jg
das
cmc
sub
js
mov
pop
add
cmp
mov
pushf
cwde
add
add
mov
int3
int
jnp
into
jb
in
ins
daa
xor
js
out
in
cmps
mov
jp
call
lods
ins
add
sub
aas
dec
jg
xor
add
sti
push
add
leave
scas
push
fcomp
dec
sbb
movs
imul
sbb
daa
mov
push
pop
je
ret
hlt
push
loopne
xchg
cmp
push
fisttp
call
stos
push
mov
or
and
fcmovne
sub
leave
in
mov
clc
in
or
or
dec
fsubr
dec
sbb
retf
mov
sbb
stc
pop
lock
sub
leave
call
mov
enter
fdivrp
push
hlt
mov
xchg
adc
cmp
push
pop
lock
cmps
push
ins
sub
dec
shl
mov
cmc
ret
inc
stc
ret
movs
add
shl
aam
xor
mov
leave
sbb
add
lods
les
cmps
or
mov
pushf
push
mov
xor
or
dec
repnz
mov
sbb
xchg
mov
xchg
test
push
add
lock
xor
xor
mov
out
or
xchg
mov
shl
inc
(bad)
cmp
mov
jp
popf
and
and
cmp
xchg
shl
idiv
fcom
cmp
iret
mov
mov
jo
in
and
and
cmp
fsub
fsubr
jns
push
jmp
fsubr
imul
mov
add
mov
inc
aas
xchg
mov
fwait
pop
fsub
pop
adc
xor
enter
xor
dec
jl
or
jbe
std
and
dec
loope
and
jbe
les
mov
scas
lock
call
jge
push
mov
sub
scas
cmp
out
mov
out
fisubr
or
cmp
fs
xchg
scas
movs
push
in
and
mov
and
pushf
movd
sub
push
jo
inc
fimul
and
and
test
pop
in
jbe
mov
lock
and
or
enter
mov
and
push
jp
les
cli
dec
inc
in
mov
pop
iret
xchg
int3
sub
dec
add
cli
inc
stos
add
xor
js
and
jo
addr16
dec
pusha
cld
shl
sbb
mov
mov
mov
xlat
cld
mov
fistp
imul
sub
lahf
fdivr
in
loopne
aam
scas
xchg
mov
and
test
inc
out
fnstcw
rol
cwde
or
xlat
jbe
dec
mov
mov
jle
js
cwde
loopne
inc
and
es
pop
cmp
in
aaa
gs
xchg
adc
or
out
dec
jns
cmp
pop
dec
inc
mov
test
xor
mov
addr16
inc
loopne
pop
aas
(bad)
pop
xor
add
aam
out
sbb
inc
push
fistp
test
mov
out
fadd
mov
aas
sbb
xchg
cmp
ja
adc
cdq
cmp
gs
cld
cmp
jns
xchg
js
sub
mov
movs
cmp
aam
dec
mov
pop
cmp
cmp
pop
xchg
add
loope
adc
adc
enter
aad
add
push
aad
mov
aas
add
adc
adc
ret
dec
jl
cmp
dec
rcl
int3
cmp
in
jns
in
mov
pop
les
and
pop
mov
mov
jp
pushf
mov
xor
outs
jo
stos
dec
cmp
jno
mov
mov
inc
dec
fcmovnbe
mov
ffreep
pop
dec
(bad)
and
je
test
or
mov
push
loopne
dec
or
aas
xor
pushf
xchg
mov
lods
ins
xor
and
push
into
pop
sbb
clc
or
pop
loop
daa
addr16
adc
repz
mov
or
xchg
nop
push
push
cmc
add
pop
jmp
ja
imul
pusha
lods
and
daa
pop
jmp
fld
ins
cmp
mov
xor
adc
mov
enter
daa
iret
into
xor
ss
sub
dec
dec
inc
or
mov
or
cmps
sbb
jo
test
outs
push
dec
cmp
jl
sub
aas
xlat
dec
int3
out
mov
retf
int3
push
cld
jl
das
and
movs
js
sub
loopne
fcomp
stos
dec
in
xlat
xor
sbb
sar
sbb
adc
xchg
pushf
scas
movs
lods
pop
movs
xor
rcr
das
add
sti
cmp
aad
into
push
pusha
inc
rcl
popfw
test
ins
jne
lods
mov
dec
push
mov
sbb
sbb
in
push
out
jle
sub
ja
xor
in
and
mov
mov
aaa
ins
xor
adc
clc
mov
fild
jnp
push
retf
xchg
mov
pop
jno
push
out
sub
pushf
push
enter
mov
cs
inc
sub
mov
inc
outs
(bad)
daa
fs
daa
cmp
mov
sub
in
enter
adc
push
dec
enter
jb
pop
adc
cmp
mov
dec
ror
es
fs
add
lahf
mov
call
and
sub
xchg
movs
pop
shr
int3
out
and
in
clc
loopne
push
jo
add
xor
pop
daa
sbb
inc
ds
fsubr
cmps
cmp
sbb
scas
(bad)
stc
sbb
mov
inc
jg
sbb
or
sub
call
jl
test
inc
or
or
outs
jbe
add
xor
iret
fsubr
push
and
mov
loopne
mov
ins
push
sbb
loopne
fdivr
stc
daa
lods
cmp
mov
and
dec
push
cmp
pop
pushf
add
or
push
jmp
test
mov
pop
xor
scas
mov
add
imul
je
push
jae
sub
push
mov
lods
cmp
ja
inc
fbstp
pop
nop
ret
jl
out
xchg
outs
aam
ror
(bad)
enter
or
cmp
scas
retf
pop
xchg
icebp
(bad)
add
jecxz
pop
mov
add
xor
xchg
cmp
lahf
lods
loopne
js
jo
sub
sbb
scas
pop
stos
enter
jle
push
add
out
in
xchg
xor
add
movs
enter
and
mov
cmp
mov
daa
pop
xor
adc
dec
fmul
xchg
sbb
out
fcomp
pop
fadd
movs
in
lock
cmp
ss
test
and
in
sbb
push
les
cmp
adc
lods
sub
les
inc
and
mov
out
cdq
or
lock
push
inc
jp
inc
sar
jp
dec
aad
test
sbb
fwait
add
repnz
cmp
ja
shl
daa
mov
pop
dec
xor
mov
jne
fist
fwait
jmp
ja
js
in
or
xor
jg
je
fisttp
sbb
jns
pop
fcomp
or
lods
add
sub
dec
fldcw
cmp
imul
stos
aas
js
xlat
or
into
in
jnp
dec
inc
pop
fstp
add
test
rcl
inc
dec
or
aam
xchg
adc
int3
scas
call
mov
in
dec
loopne
mov
cmp
jecxz
ja
in
pop
fistp
inc
and
jle
push
(bad)
cmp
pushf
sub
sub
pop
js
dec
popa
mov
sahf
pushf
sub
cmp
push
push
cmp
push
lods
call
xchg
pop
enter
ret
cmps
jnp
and
nop
push
and
in
push
stc
add
dec
xor
pop
js
sbb
add
lahf
push
ficom
aam
ficom
dec
enter
sub
sub
push
xchg
mov
in
fidivr
daa
inc
or
call
pop
xchg
dec
enter
add
mov
mov
retf
lock
dec
cmp
xchg
ins
mov
dec
je
jl
mov
pop
mov
xor
mov
ret
not
jle
xor
test
jnp
mov
jge
movs
cmp
out
lods
add
dec
dec
add
stos
enter
push
pop
jp
pop
mov
sub
inc
pusha
test
add
ins
sahf
jle
add
push
movs
adc
mov
fdiv
call
mov
fs
ins
mov
cld
call
mov
ins
add
push
jns
in
jl
dec
cmp
jmp
xchg
sub
aam
les
(bad)
adc
push
clc
adc
push
cmp
inc
sub
inc
shl
dec
dec
jge
sub
push
lds
scas
in
mov
sub
cmc
jb
sbb
jg
and
sub
loope
sub
cmp
add
push
cmp
js
out
hlt
inc
bound
xor
in
xor
ja
and
mov
sub
xchg
jae
call
xor
not
jp
mov
cmp
data16
xor
nop
(bad)
and
inc
(bad)
pop
ins
js
pop
sbb
int3
cmp
loope
mov
call
cmp
loopne
sbb
sti
or
sbb
push
mov
aam
mov
push
and
dec
xor
add
inc
mov
ret
adc
outs
sbb
das
jecxz
xchg
fdivr
adc
test
lods
out
mov
push
sub
in
nop
lds
jno
push
mov
jb
mov
xor
mov
aam
cmps
dec
nop
push
into
pop
sahf
call
mov
jno
fisub
das
dec
loopne
gs
aad
sbb
mov
rol
sub
add
dec
mov
mov
mov
(bad)
retf
cmp
daa
pop
sbb
add
stc
(bad)
(bad)
mov
fst
dec
add
nop
jnp
imul
push
mov
in
push
ins
ins
sbb
ret
out
cmps
mov
sbb
and
inc
jle
fwait
xor
fsub
pop
or
pop
test
sub
cmps
inc
dec
xor
(bad)
and
sbb
call
daa
imul
sbb
and
push
cli
in
xor
mov
jge
push
mov
rcr
lds
cmp
fdiv
in
sbb
retf
fiadd
daa
imul
sub
stc
jl
add
pusha
push
leave
lock
push
enter
jns
scas
ins
add
jne
sbb
in
jp
jo
fadd
shr
pop
les
sti
hlt
push
xlat
sub
lock
add
jo
test
ins
inc
iret
lock
jbe
pop
sub
shr
cmp
cmp
stc
push
lea
jecxz
mov
pushf
mov
dec
aaa
sbb
mov
retf
mov
test
shr
fwait
das
sub
outs
mov
je
clc
push
rcr
dec
sbb
xchg
je
test
cmova
arpl
repnz
imul
jb
inc
jns
out
sub
pop
fs
mov
xor
pop
mov
int3
lods
fsub
mov
stc
out
xlat
jmp
lock
int
jne
push
add
push
js
push
rol
or
sbb
fisubr
or
scas
mov
cwde
and
jnp
cmp
cdq
pop
ins
pushf
add
lods
call
movs
add
les
push
cmp
mov
mov
adc
stc
add
enter
add
dec
sahf
enter
ins
push
in
mov
push
call
sbb
daa
pop
cmp
mov
aam
jl
mov
dec
fdivr
cmp
(bad)
fdivr
sub
cmp
into
mov
stos
mov
dec
push
pop
sub
mov
sbb
jge
mov
cmp
pop
cmp
(bad)
push
mov
std
fsubrp
xchg
mov
dec
or
add
sub
and
and
frstor
nop
mov
repnz
pop
aad
add
adc
fucomp
lock
add
loopne
jp
mov
add
lahf
cmp
out
or
sub
dec
ins
pop
cmps
push
dec
add
ret
mov
xor
inc
out
movs
leave
and
xchg
enter
enter
xor
pop
mov
sub
inc
cmp
cmp
pop
dec
push
int
imul
and
shl
push
aad
jns
fcom
or
into
pop
jo
dec
and
test
mov
ror
out
cwde
mov
bnd
lods
dec
lea
jge
pusha
mov
xor
add
popf
in
add
inc
cmp
add
jmp
lahf
pop
stos
dec
sub
(bad)
xor
inc
shl
bound
inc
or
dec
and
pop
xor
fcmovb
std
aaa
pop
mov
pop
je
push
xor
fimul
or
or
sti
fdivr
mov
scas
stc
out
imul
mov
push
jl
js
aad
adc
mov
das
pop
adc
add
pop
ins
mov
pop
xor
or
fwait
xor
inc
movs
hlt
mov
sub
sahf
pop
xchg
push
sub
dec
mov
pop
(bad)
push
and
add
jo
add
lock
fistp
out
neg
out
mov
gs
pop
aam
cmp
jno
mov
retf
(bad)
mov
ja
test
cdq
(bad)
pushf
push
leave
jbe
or
movs
mov
dec
test
aaa
cmp
xchg
jo
push
je
rcl
mov
fcomp
ja
ins
and
add
or
lock
pop
ins
sti
enter
xor
dec
test
ror
or
and
ins
iret
rcr
shl
jno
clc
shr
and
lds
and
retf
sub
fistp
popw
xor
sub
mul
jle
sub
aam
cmp
mov
out
push
nop
sqrtps
dec
cmp
nop
xor
call
mov
xor
fld
or
xchg
cmp
xor
hlt
js
cli
mov
xor
push
sbb
retf
loopne
pushf
(bad)
es
adc
out
cli
fidivr
pusha
jecxz
js
push
dec
mov
and
and
sbb
movs
sbb
loope
call
jecxz
call
inc
push
iret
sahf
or
adc
test
xor
push
push
cmc
mov
sub
aad
sbb
(bad)
rcr
repnz
adc
cmp
cdq
cmp
push
inc
rcl
pop
inc
outs
cmp
pusha
and
add
sub
shr
loopne
cwde
pop
in
cwde
jo
fwait
inc
rol
adc
cmp
int3
sbb
pop
jne
test
jp
aad
pop
in
jle
pop
shl
leave
xchg
xor
nop
mov
jl
xor
xor
and
int3
mov
dec
adc
adc
(bad)
sub
xor
jg
lock
mov
push
cmp
add
push
and
push
or
int3
pop
mov
(bad)
in
inc
fimul
inc
xchg
loopne
lods
and
test
rcr
xor
test
mov
mov
in
sbb
adc
pop
cmp
std
stc
inc
ds
int
mov
mov
cmp
cmp
fmul
sub
pop
mov
pop
add
daa
les
lock
lds
ret
or
lea
and
clc
clc
enter
loopne
(bad)
dec
retf
fwait
sub
cmp
pop
pop
ficom
(bad)
pushf
jb
pop
sub
dec
push
in
jmp
or
dec
mov
jmp
lahf
adc
pop
add
xlat
cld
dec
daa
cmp
test
ror
xchg
cwde
sbb
mov
fisub
mov
mov
mov
stos
fwait
call
sub
(bad)
cmp
dec
std
sub
pop
or
ins
mov
jb
dec
sbb
mov
dec
mov
mov
push
jae
pcmpeqb
retf
lds
sbb
pop
pop
out
mov
popa
xchg
fadd
je
mov
jnp
add
cli
adc
add
xor
dec
mov
mov
cmp
gs
push
inc
push
lods
inc
mov
adc
cmp
pop
into
aaa
mov
push
nop
sbb
in
stos
(bad)
cmp
sbb
ficomp
cmp
lea
mov
or
pop
adc
enter
into
and
in
lds
xlat
sub
loope
add
jmp
pop
xor
js
sub
and
cmp
xchg
push
xor
sti
pop
or
test
fiadd
iret
push
call
test
xor
push
jg
in
fdivrp
mov
mov
xor
mov
das
mov
arpl
push
in
pop
sub
neg
mov
inc
cld
std
mov
test
jno
or
scas
inc
dec
mov
mov
jno
fwait
add
mov
mov
pushf
cwde
cmp
cld
ins
shr
pop
sbb
int3
stos
xor
dec
push
xor
pop
(bad)
or
ins
stos
push
aad
xlat
cld
mov
enter
movs
mov
fisttp
outs
ret
out
loopne
fidiv
pop
ins
add
call
pop
xor
(bad)
call
mov
ja
add
mov
andnps
lds
add
adc
jmp
sbb
push
jle
ret
(bad)
sub
and
jge
and
sub
ins
mov
lds
adc
jle
add
sbb
les
mov
push
push
xor
cdq
mov
add
sub
push
inc
rcr
call
fld
int3
sbb
test
xor
dec
dec
repnz
lods
jle
sub
jp
pop
aaa
jbe
popf
into
call
add
dec
pusha
pop
dec
jns
enter
adc
pop
lods
cld
dec
mov
add
fmul
mov
xor
nop
jmp
add
js
aas
dec
sbb
mov
shl
in
sbb
push
dec
cld
clc
comiss
in
cmp
mov
loopne
fdivr
fsub
fwait
pop
cmc
dec
shl
jl
cli
fisttp
cmp
mov
cs
shr
mov
cmp
xchg
sub
jp
loopne
dec
xor
shr
repz
movs
sar
sti
adc
sub
add
xor
movs
push
mov
lods
dec
pop
test
pop
jp
pop
mov
xor
pop
outs
js
sti
daa
fcom
(bad)
das
fidiv
pop
lock
jns
cmps
xchg
adc
pushf
xchg
lahf
scas
fadd
aas
xor
inc
pushf
xchg
cmp
fidiv
inc
or
dec
int3
das
xor
movs
mov
pushf
pop
push
mov
inc
fwait
sub
ficomp
loopne
and
loopne
mov
mov
pop
lock
cld
sbb
pop
mov
ret
xor
(bad)
clc
ficom
neg
pop
dec
fisttp
sub
mov
mov
jp
xchg
hlt
shl
pop
outs
push
xor
aas
cmp
xchg
out
xchg
mov
lock
shr
inc
ins
sub
call
std
pop
ja
inc
sbb
mov
lods
fdivrp
xor
dec
cwde
loopne
(bad)
stc
fwait
sub
fisub
jle
lock
push
fcomp
movs
sar
leave
gs
inc
stc
enter
jle
add
xor
in
daa
std
xlat
add
fadd
cs
sbb
(bad)
mov
mov
ror
mov
cwde
xchg
aam
add
ficom
retf
test
fdiv
mov
or
inc
or
cmp
inc
clc
imul
int3
mov
dec
and
jp
mov
cmp
mov
pusha
adc
call
pusha
stos
sub
push
enter
cmp
mov
sub
adc
daa
dec
hlt
mov
pusha
and
clc
call
dec
push
xor
dec
icebp
js
sbb
pusha
test
push
daa
dec
xchg
xor
jp
adc
aas
xor
ds
hlt
jg
sub
mov
je
mul
xchg
(bad)
int3
ret
(bad)
(bad)
pushf
mov
adc
jmp
hlt
and
(bad)
js
pop
xchg
loope
jo
stos
xor
add
cwde
jbe
mov
pushw
push
cmp
cmp
fsub
mov
dec
ds
ficomp
push
imul
inc
sbb
sub
dec
inc
add
popf
cmp
sti
pop
dec
xchg
fild
mov
ins
push
icebp
js
cmp
add
js
mov
rcr
cdq
cmp
mov
les
jl
lahf
and
sub
(bad)
aaa
add
push
adc
sbb
cmp
xchg
jns
test
pop
shl
mov
jmp
aam
mov
push
pop
mov
mov
or
mov
jle
mov
add
call
ror
fiadd
das
(bad)
ficomp
pop
(bad)
mov
jmp
dec
shr
pop
jl
jl
mov
jl
jns
fistp
cld
nop
(bad)
retf
jo
push
data16
loopne
inc
int3
daa
imul
or
add
shl
inc
js
int3
enter
(bad)
mov
sbb
push
and
sub
push
gs
fadd
jns
xlat
and
ret
jmp
les
inc
fstp
dec
mov
or
add
test
xchg
jle
xor
js
dec
out
sub
jns
retf
cmps
push
call
add
push
cli
pop
(bad)
cmp
frstor
cld
aaa
adc
sbb
jo
stos
pop
in
ins
push
push
in
cmp
lahf
and
iret
pop
xchg
sub
sahf
test
adc
mov
cld
cmps
fiadd
inc
rcl
and
outs
inc
call
mov
mov
and
out
dec
jnp
dec
aam
ret
xor
fcom
mov
dec
xchg
jbe
les
adc
add
loopne
and
push
mov
jg
adc
fadd
xor
jo
mov
fstp
add
cmp
clc
(bad)
or
or
mul
dec
mov
into
sub
movs
repz
xor
popf
mov
inc
pop
sbb
pop
cmp
jae
pop
sbb
fsubr
inc
mov
xchg
cmp
sub
add
aam
pop
not
cli
lahf
stc
mov
addr16
pop
lods
xchg
push
xor
or
sub
fidivr
xchg
push
mov
push
cs
or
cmp
xor
jmp
bound
push
scas
lods
adc
cwde
cwde
bound
mov
adc
aaa
xchg
add
imul
aad
out
jge
xor
xchg
xchg
dec
sahf
sub
pop
or
mov
(bad)
hlt
cmp
js
push
or
pusha
int3
jmp
mov
add
dec
mov
pop
loopne
cmp
dec
rol
pop
cmc
or
icebp
inc
dec
push
inc
mov
jle
mov
les
aaa
mov
clc
stc
adc
xor
jp
pop
clc
icebp
push
sbb
xchg
pop
inc
(bad)
shl
xchg
mov
push
pop
jb
mov
dec
mov
mul
cdq
xor
or
pushf
lock
cmps
stos
leave
rcl
mov
out
dec
daa
xchg
inc
xor
leave
pop
adc
mov
jns
jge
adc
js
sbb
xchg
scas
cmp
pop
stos
push
pop
xor
mov
dec
jmp
cwde
xchg
sub
sbb
loop
adc
add
fdiv
pushf
push
lahf
call
cmp
pop
xor
(bad)
pop
out
daa
test
xor
push
inc
imul
jb
jmp
popa
xchg
mov
fnstcw
js
pusha
in
je
int3
mov
test
fs
add
push
daa
xor
push
inc
mov
pop
ins
jae
push
mov
fcmovnu
mov
jl
test
jno
ins
jl
mov
nop
xchg
fdivr
sar
in
js
cmp
(bad)
das
jp
mov
fadd
mov
adc
test
and
cmp
mov
mov
mov
xor
mov
lods
int
inc
jp
mov
push
and
push
mov
mov
(bad)
lds
pusha
fs
sub
in
mov
in
or
pop
xchg
or
inc
fdiv
cdq
xchg
mov
in
out
sub
xchg
in
xor
sbb
clc
mov
adc
push
into
push
sahf
ret
inc
xor
sahf
pusha
xlat
dec
ror
in
xor
call
in
cmp
pop
outs
(bad)
jle
xor
jno
in
pop
cmps
push
cmp
arpl
inc
and
and
or
mov
std
mov
out
shl
test
and
sub
js
add
mov
ds
movs
push
mov
(bad)
addr16
jg
cmp
mov
test
mov
sbb
ins
push
push
hlt
and
cld
rcl
jns
aad
push
xchg
test
cmp
in
xchg
mov
cmp
jg
inc
adc
cmp
imul
push
leave
ins
cmp
popf
add
cmp
and
jp
pop
and
push
mov
inc
lock
sbb
fs
outs
pop
pop
inc
ret
push
dec
into
loopne
sahf
aad
in
bound
das
add
inc
mov
mov
in
rcr
xor
pop
fmulp
ret
jp
fidivr
mov
rcl
sahf
push
aas
pusha
out
jb
fidiv
mov
bound
mov
and
push
push
loopne
mov
std
dec
(bad)
mov
aam
push
int
fwait
add
xchg
push
leave
bound
dec
sub
add
clc
push
sub
loopne
int
(bad)
mov
call
xor
dec
stos
repnz
call
xlat
in
(bad)
mov
cli
stos
call
adc
fistp
push
cmp
syscall
xchg
ins
mov
test
mov
sub
pop
das
into
mov
sahf
aam
ins
sub
cmp
sub
cmps
movs
(bad)
(bad)
and
pusha
lds
repnz
call
inc
pop
je
mov
cwde
mov
call
(bad)
ret
and
xor
mov
push
les
add
(bad)
xor
mov
sub
sbb
cmp
test
lahf
inc
mov
push
jge
retf
adc
inc
jmp
push
ror
les
mov
or
or
xor
cld
fsubr
aad
xor
jl
xor
fisubr
shr
js
jl
shr
ret
leave
in
dec
jo
pop
xchg
add
sbb
add
clc
or
shr
xchg
mov
mov
adc
lds
mov
cmp
(bad)
cwde
dec
mov
mov
lods
push
cld
in
adc
call
mov
retf
xacquire
les
jns
scas
xor
xchg
mov
jle
sbb
mov
pop
mov
sub
cmp
xor
push
mov
ds
mov
pop
outs
mov
fcomp
retf
loopne
dec
daa
fsub
dec
(bad)
stos
addr16
fcom
and
sbb
sbb
(bad)
xchg
data16
(bad)
lahf
loope
ret
push
sub
fsub
mov
ficom
sar
sbb
mov
shl
dec
cmp
fsubr
js
arpl
cwde
push
fcom
aas
jae
loope
repnz
adc
lods
sub
xchg
fsub
outs
movs
ins
pop
cmp
fmul
mov
xlat
aaa
xchg
cld
leave
mov
aad
xor
fdivr
popa
cmp
shl
cmp
and
popf
sub
mov
(bad)
jns
jb
gs
aas
test
fcomp
scas
or
sub
stc
xchg
fstp
jno
pop
mov
aad
retf
pop
xor
push
loop
test
fdiv
lock
pop
adc
rcr
adc
cmps
sbb
cmp
test
test
fmul
imul
xor
push
daa
ins
fdivr
(bad)
mov
ror
push
(bad)
ds
fmul
and
or
bound
fisttp
int3
pop
xchg
sar
lea
jns
xor
sti
and
sub
sub
aas
dec
inc
aad
and
pop
in
test
or
(bad)
iret
cs
je
push
adc
sub
lock
enter
aaa
cmp
pushf
fdivr
mov
push
fadd
jnp
or
aam
adc
scas
outs
sub
cmp
mov
mov
inc
fdivr
(bad)
mov
popa
jbe
dec
fcom
loopne
mov
xchg
ja
rcr
std
sahf
lea
jmp
cmp
outs
dec
xchg
jbe
jo
std
fcomp
fcom
fnsave
cmc
dec
dec
es
inc
jge
push
and
inc
leave
and
push
xchg
fcom
fsub
mul
shl
dec
cmp
leave
jmp
fsubr
imul
call
std
jg
dec
fadd
lds
test
ds
mov
and
xchg
dec
dec
xchg
add
pop
jmp
pop
popf
les
lds
xchg
fcom
ret
popf
xlat
fcomp
cmp
fadd
call
fnstsw
ja
loope
out
lock
fadd
sar
or
repz
add
jb
xchg
call
pop
(bad)
scas
in
ds
(bad)
sub
xchg
dec
loopne
dec
fdivr
stos
movs
xlat
ret
je
and
xlat
pop
fs
inc
jle
cmp
mov
sub
sar
inc
and
mov
fld
int
es
cs
test
dec
fldcw
leave
inc
fsub
inc
ret
fcmovnu
xor
gs
xor
(bad)
fsub
mov
inc
fcomp
fcom
xchg
cmp
jo
dec
inc
lods
fsub
mov
pop
jns
sub
in
jle
daa
cwde
jmp
fdiv
inc
imul
test
retf
inc
inc
clc
int3
mov
mov
sbb
xchg
test
mov
lock
push
pop
mov
in
dec
push
fmul
pop
stos
xor
push
stc
cmps
adc
pop
sti
sub
and
clc
push
pop
in
fs
add
mov
jecxz
sti
cmps
pop
jnp
and
aam
movs
nop
sar
adc
xor
jae
ins
in
fdivr
outs
mov
dec
inc
js
push
ror
fsub
push
or
and
(bad)
gs
push
inc
inc
fcomp
clc
test
out
pusha
clc
pop
out
ret
repz
add
js
jge
pop
jnp
in
fst
enter
fcmovu
out
sub
cdq
adc
sbb
hlt
imul
leave
jne
lods
jmp
pop
leave
cmp
(bad)
cmp
push
adc
add
mov
jae
inc
sub
lds
or
mov
xchg
fdivr
ficomp
sbb
fidivr
fsubr
test
sub
push
add
retf
rol
push
test
popa
sahf
pop
(bad)
fcomp
sbb
cmp
mov
mov
cmp
or
test
idiv
mov
outs
outs
mov
(bad)
jne
adc
xor
into
test
popf
in
movs
fcom
arpl
ja
jae
fdivr
stos
repnz
fcomp
test
ja
dec
sahf
and
pop
adc
jl
mov
pop
gs
fsubr
xor
and
hlt
mov
out
xlat
mov
add
mov
fsubr
push
xor
sbb
movs
lods
xchg
fsub
arpl
sti
push
ret
scas
mov
pop
clc
in
push
push
pop
(bad)
cli
fdiv
lds
inc
jne
mov
push
fdiv
stos
shl
gs
adc
shl
jl
or
dec
(bad)
push
loopne
imul
push
xchg
lock
mov
lds
test
dec
daa
cmp
push
(bad)
or
push
loope
jg
fadd
aas
mov
fsub
xchg
nop
fnsave
jg
(bad)
inc
imul
into
xor
dec
ins
jns
jno
out
sbb
push
movs
push
jae
hlt
mov
out
mov
mov
es
adc
cs
push
fcomp
shr
push
fmul
arpl
into
xchg
repz
fdivr
jl
dec
icebp
pop
cmp
pcmpeqd
in
xchg
stos
mov
push
add
(bad)
and
jno
cmp
mov
fsub
add
jne
dec
daa
xchg
fadd
xchg
fsubr
fs
mov
jo
cmp
ret
rcr
arpl
mov
fdivr
and
mov
mov
push
ror
int
fst
sub
push
xchg
and
xchg
adc
iret
sar
adc
cmp
inc
push
(bad)
and
pop
fdivr
out
in
jl
call
cmps
xchg
push
fmul
js
test
or
cmp
fisub
fcom
orps
add
fsub
and
mov
fmul
adc
data16
(bad)
call
cmp
fmul
aaa
xchg
pusha
xchg
or
cmp
out
dec
sub
mov
sbb
pop
outs
ss
cmp
loope
fsub
xchg
or
pop
rcr
scas
and
(bad)
leave
repnz
cmp
push
pop
fisttp
mov
fisub
je
mov
sbb
ret
cdq
jae
mov
(bad)
dec
sbb
fwait
inc
and
fdiv
push
hlt
push
dec
mov
cs
or
sub
or
mov
repnz
fdiv
pop
jg
xchg
push
push
xlat
push
xor
ret
hlt
(bad)
cli
out
(bad)
adc
add
xor
inc
and
dec
popa
add
fsubr
jg
jb
cmps
pop
cmp
imul
inc
jne
push
mov
iret
xchg
add
or
into
push
imul
sbb
movs
sbb
cdq
mov
daa
fcomp
out
mov
fcomp
push
lods
sub
fdivr
jg
jp
addr16
pusha
xlat
sti
push
adc
call
xchg
fcom
mov
inc
cld
mov
pop
dec
jno
scas
fist
pop
leave
push
xor
xchg
dec
jno
ins
inc
xchg
fsubr
cli
push
sahf
mov
sbb
gs
clc
pop
stos
out
nop
shr
fdiv
pop
and
icebp
sub
xor
push
mov
cld
pusha
ret
pop
ret
sbb
dec
add
fdivr
jg
in
or
mov
cli
fdiv
loopne
push
fwait
sub
cwde
and
mov
push
cli
mov
gs
js
mov
add
int
(bad)
adc
pushf
mov
fcom
ret
sbb
lods
mov
inc
shl
test
and
(bad)
retf
mov
ret
add
cld
bound
xor
je
pop
and
sti
jns
xchg
fsubr
ss
aaa
std
mov
sbb
xchg
xchg
hlt
lahf
mov
imul
mov
jecxz
cmp
fsub
sbb
fcom
dec
adc
daa
fdivr
mov
pop
push
outs
fmul
or
test
repnz
cwde
xlat
sub
icebp
push
sub
pop
add
mov
ror
jae
push
fadd
or
pop
shrd
mov
aaa
adc
and
shl
mov
cmp
xlat
fsubr
dec
aas
je
popf
scas
rcr
add
pop
xor
xor
fcom
fidivr
xor
add
sub
xchg
int3
popf
test
fdiv
nop
lock
mov
mov
adc
int
ja
fdivr
mov
dec
in
adc
dec
std
imul
stc
fadd
jmp
jle
mov
fdiv
and
dec
xchg
or
fcomp
jl
inc
fld
loope
cmp
nop
xor
cmp
mov
stos
ror
frstor
repz
retf
xchg
jns
jno
sar
xchg
jnp
popa
stos
fimul
inc
xor
mov
mov
fdivr
jb
adc
adc
mov
(bad)
push
call
out
in
push
mov
or
loopne
dec
fsubr
test
xor
add
int
pop
or
shl
scas
push
cmp
popf
les
call
ret
xchg
std
clc
popa
jnp
fsubr
xor
push
sbb
sbb
mov
iret
mov
je
out
jg
test
(bad)
xchg
push
mov
mov
or
xchg
clc
jns
mov
mov
movs
adc
loope
or
popf
bound
cwde
or
sub
mov
stos
js
adc
lahf
fsub
retf
aam
inc
xor
mov
stos
xchg
jmp
pop
mov
add
add
nop
and
pop
iret
popf
es
sbb
inc
in
mov
adc
aaa
mov
cmp
imul
fsub
sub
scas
out
push
pop
mov
(bad)
ins
xchg
ror
repz
adc
jb
pop
cmp
je
fild
fimul
mov
leave
fsubr
aad
or
pop
into
dec
cs
mov
movs
cld
or
out
xchg
(bad)
popf
inc
js
bound
fsub
pop
cmc
inc
sub
mov
sub
test
mov
cs
fs
jns
aaa
aam
fistp
iret
fdivr
mov
cmp
mov
pop
js
jo
leave
fild
retf
(bad)
fimul
das
mov
xchg
lock
dec
fdiv
xchg
dec
fsub
pop
jle
xchg
or
fisub
push
js
pop
bound
inc
xchg
and
fmul
mov
jne
push
shl
fcom
loop
adc
pop
jmp
and
push
fsubr
dec
mov
xor
imul
clc
sti
pop
jbe
pop
fdiv
jecxz
push
std
(bad)
jmp
mov
aaa
xor
leave
jb
jno
ss
nop
fcomp
ins
sti
xor
aas
jp
ins
pop
sbb
sbb
sahf
sar
dec
cmp
mov
and
mov
into
jl
shr
sub
leave
xor
inc
mov
push
add
scas
fsub
add
mov
ds
movs
stos
and
leave
dec
les
in
scas
mov
sbb
out
mov
push
cdq
(bad)
cwde
add
fwait
out
fdivr
cli
mov
xor
adc
or
outs
mov
ins
adc
(bad)
int3
fst
mov
add
mov
sbb
xchg
fdivr
or
fcomp
sub
fdivrp
push
add
fmul
popa
push
addr16
loope
push
fmul
mov
adc
dec
sbb
inc
shl
sbb
jmp
jl
out
and
fsubr
lahf
test
nop
push
mov
enter
(bad)
hlt
mov
sbb
mov
adc
push
mov
call
data16
mov
es
ja
cs
js
clc
repnz
fsin
sub
fcomp
neg
jmp
ja
jne
adc
pop
xor
das
push
inc
fs
out
test
arpl
inc
pop
cld
imul
mov
and
lods
ja
cmp
sub
mov
xchg
push
mov
leave
pop
xchg
dec
addr16
in
cmp
mov
inc
daa
fcmovnu
xchg
movs
retf
jle
fbld
scas
icebp
out
neg
outs
pop
adc
rcr
(bad)
int
add
jl
and
(bad)
pusha
clc
test
sub
sti
mov
xchg
mov
clc
scas
(bad)
pop
(bad)
adc
ror
test
xchg
push
iret
arpl
addr16
mov
bound
mov
fst
or
(bad)
int3
cmp
in
into
xchg
dec
xchg
into
jns
jne
ret
daa
jnp
fsub
jle
push
xlat
jne
in
into
pusha
mov
dec
push
cmp
jg
fdiv
das
pop
movups
ror
xchg
fucomi
call
loope
out
and
sbb
fsubr
dec
inc
aaa
xor
fcomp
mov
pop
adc
(bad)
neg
push
inc
inc
mov
mov
fdivr
nop
fadd
jmp
sbb
inc
aaa
leave
outs
ficomp
pop
sbb
add
fnstenv
sub
add
and
push
fsub
pop
lds
into
gs
ficomp
mov
fsubr
shl
data16
cmp
dec
cmps
(bad)
mov
fdiv
jecxz
lods
sub
sub
pop
in
sti
push
ins
fcom
(bad)
mov
movs
fld
cwde
jno
inc
add
xchg
leave
sbb
dec
mov
(bad)
out
mov
loopne
ror
add
aad
enter
retf
stos
mov
mov
cmc
pop
pop
xchg
sub
movs
adc
inc
dec
out
into
fcomp
call
aam
mov
fcomp
enter
ins
mov
scas
cmp
add
pusha
pop
into
fcmovne
dec
lds
pop
inc
inc
dec
dec
(bad)
jo
jne
nop
movs
movs
(bad)
out
je
mov
sbb
mov
cmp
stc
sbb
mov
fdiv
fsubr
mov
sub
addr16
fmul
test
in
repz
(bad)
lds
fcom
jmp
inc
inc
fdiv
fsub
ja
push
xor
push
xor
sbb
cdq
pushf
into
xchg
fdivr
fmul
fmul
cld
mov
fcom
jmp
test
lock
imul
fnsave
add
xor
xchg
ror
adc
push
mov
popa
fdiv
and
and
loop
pop
dec
xchg
cwde
pop
push
xchg
push
iret
dec
pop
mov
push
dec
fdivr
cdq
call
outs
sti
add
sbb
push
dec
pop
in
fadd
cmps
and
hlt
stos
fisttp
outs
std
mov
jae
push
xor
fild
jo
fcomp
add
fsubr
sahf
test
mov
xor
enter
or
arpl
and
fs
jnp
cwde
pop
cld
repnz
std
sti
popf
add
or
jb
into
stc
add
add
fdivr
pop
sub
cld
push
pop
fdivr
sub
sbb
jle
inc
fwait
addr16
jne
push
(bad)
mov
mov
iret
icebp
jns
adc
pop
jne
dec
js
push
cmps
fsubr
pop
push
add
gs
mov
rcr
(bad)
xchg
fwait
pop
test
push
mov
ret
adc
sti
pop
lahf
add
push
push
adc
loope
sahf
sbb
and
fdiv
sub
xchg
sbb
mov
mov
push
push
and
mov
cmp
(bad)
mov
sbb
jmp
data16
xlat
div
xor
sbb
fidiv
arpl
shl
pop
repnz
retf
jecxz
adc
sub
repz
pop
addr16
aad
popf
fsubr
or
mov
add
push
lods
and
hlt
mov
fdivr
mov
cmp
lods
and
leave
inc
xor
sub
or
fsubr
outs
mov
jmp
jg
xlat
pop
ins
jmp
into
mov
xchg
in
test
dec
xchg
xchg
push
pop
xacquire
in
push
lods
lock
(bad)
adc
leave
xor
adc
push
and
jl
or
(bad)
aad
ret
lea
jns
jp
loop
(bad)
shr
addr16
fdiv
jnp
lahf
daa
push
fdiv
(bad)
jmp
inc
inc
into
popf
mov
pop
mov
ror
fldcw
fcomp
lods
or
ja
clc
into
xor
in
mov
leave
dec
ins
fld1
jnp
(bad)
fadd
fcmove
fucomp
aad
jp
shl
js
mov
add
stos
es
loop
jo
jge
fdiv
jp
out
jmp
pop
in
cdq
inc
xchg
pushf
fmul
out
out
jle
popa
push
cmp
aam
adc
test
stc
imul
and
mov
(bad)
daa
and
jbe
adc
std
fmul
in
fadd
fcmovb
pop
fsubr
cmc
inc
aam
push
outs
fcomp
sbb
lock
mov
jp
mov
mov
adc
leave
push
push
cmp
(bad)
pusha
fsubr
mov
rcl
push
mov
lea
jle
cmp
ret
mov
fdivr
dec
aad
xlat
call
fchs
pushf
dec
repnz
xor
in
jg
mov
fsub
pop
sub
xchg
jne
je
mov
cmps
or
and
rcr
mov
fstp
js
jp
std
cmp
cmp
ds
cmp
inc
leave
lock
fsub
(bad)
fsub
push
jns
mov
dec
(bad)
rol
rcr
mov
ret
pop
xor
lods
or
outs
test
ficom
cli
leave
in
mov
or
fmul
imul
fadd
dec
je
(bad)
add
push
adc
inc
jp
mov
xchg
fmul
fs
xchg
xchg
fadd
ret
add
addr16
xor
cmp
sbb
adc
(bad)
mov
push
sub
dec
ds
cmp
dec
jge
push
mov
push
nop
fcomp
inc
jo
(bad)
and
xchg
jp
mov
sub
gs
jne
lods
dec
stc
sbb
jmp
sahf
add
fsubr
or
test
xchg
push
clc
call
jmp
xor
clc
dec
sbb
cli
inc
loop
test
leave
push
dec
or
mov
inc
dec
push
loope
xchg
and
xchg
fdivr
dec
stos
sti
or
pop
adc
out
push
fs
cmps
jmp
sub
fcom
pop
sbb
fmul
sub
and
fcomp
and
xor
cwde
sub
enter
xor
out
jae
stos
int
inc
gs
or
inc
hlt
ins
dec
fdiv
mov
retf
add
pop
int3
shl
int
clc
in
add
fdiv
in
sub
lahf
cmp
fsubr
cld
cwde
push
je
fcomp
ror
adc
jne
xlat
dec
pop
test
sbb
(bad)
in
lock
fcom
xchg
enter
neg
or
cmp
fmul
mov
jbe
int
pop
retf
cmp
sbb
test
jge
ja
retf
icebp
add
push
jnp
cmp
mov
pop
or
adc
stos
mov
pop
ret
ret
sbb
ja
lods
fcomp
add
cmp
mov
pop
and
sbb
fst
scas
and
outs
sub
retf
sub
cwde
pop
leave
xor
and
shl
mov
push
sub
(bad)
cld
das
inc
fs
dec
fstp
cmp
ds
bound
push
fadd
and
push
sar
dec
pop
fdiv
sar
test
ret
jns
cmps
sbb
(bad)
fsubr
inc
aas
xchg
pop
lods
scas
jmp
(bad)
cmp
repz
mov
xor
rcl
or
xor
lock
cmp
int
jmp
add
aad
dec
mov
repnz
std
sub
nop
int
in
fsubr
mov
fdivr
dec
cli
loope
sbb
lods
leave
(bad)
aaa
jns
cmp
femms
inc
ret
cmp
cdq
bound
stos
mov
nop
int3
lods
cmp
into
jle
cmp
imul
jnp
xor
cmp
cwde
sahf
mov
mov
frstor
fcomp
mov
cmp
test
mov
dec
adc
jmp
mov
fs
fsubr
dec
loop
pushf
mov
aaa
fsubr
scas
and
push
pop
sti
(bad)
in
mov
js
pop
mov
xchg
sub
mov
mov
(bad)
fadd
inc
xchg
call
mov
push
loopne
push
clc
inc
hlt
in
or
xor
fdivr
ret
pushf
pop
ins
mov
xor
call
jb
mov
pop
test
mov
sbb
inc
jp
cmp
arpl
add
test
push
jns
int3
push
inc
sti
lods
inc
push
cmp
mov
fsub
sar
mov
xchg
jl
and
pop
pop
sbb
push
test
call
push
data16
fmul
adc
repz
(bad)
add
out
stos
cmp
sub
push
add
push
ja
cdq
push
adc
mov
pop
adc
mov
jp
jno
jb
xchg
aaa
fadd
xchg
cmp
inc
movs
mov
push
mov
js
mov
imul
rcr
int
fdiv
xchg
adc
jb
xor
test
xchg
xor
or
leave
push
imul
xchg
dec
rol
jmp
js
je
clc
lods
fadd
shl
mov
push
pop
ins
add
fadd
sahf
adc
cmps
mov
call
xchg
fsubr
scas
cmps
(bad)
fcos
in
clc
outs
push
cwde
fcomp
call
fdiv
push
or
fcom
cmp
aaa
push
sahf
in
mov
push
ret
jo
jg
fsubr
adc
dec
fcomp
cld
loop
push
dec
fdiv
int
jmp
test
icebp
inc
imul
leave
aaa
or
pop
jge
xor
xchg
mov
int3
movs
(bad)
jmp
add
in
fsub
loop
xor
cld
pop
mov
jg
das
ins
fcom
add
sbb
bnd
adc
outs
xchg
pop
push
xchg
fadd
int
fs
js
jmp
adc
nop
ins
ja
jge
movs
cli
mov
ins
xlat
shl
std
sbb
outs
push
sub
les
call
ds
or
mov
push
movs
gs
retf
jo
xchg
fadd
pop
mov
(bad)
jmp
dec
add
push
ffreep
clc
in
add
dec
scas
test
push
and
aad
xchg
lea
loop
fcomp
mov
and
fwait
pop
or
fdiv
push
adc
and
and
fcom
rcr
xor
lods
pop
cmp
pusha
fcom
xor
or
mov
jl
add
repz
test
push
es
cli
fmul
movs
jg
add
push
dec
jns
addr16
cld
sbb
and
push
or
sub
clc
sbb
xor
mov
sbb
and
jnp
lahf
cmps
push
mov
hlt
dec
arpl
leave
mov
sbb
les
and
sub
pop
jle
out
cmp
fstp
loope
cli
push
std
fdiv
outs
repnz
(bad)
loopne
(bad)
fsub
das
mov
adc
dec
pop
push
cmc
cmp
movs
fadd
push
inc
imul
pop
fbld
(bad)
cli
fsub
cmps
and
fadd
pcmpeqd
(bad)
jle
pop
lods
fcomp
adc
pop
push
pop
(bad)
add
xor
mov
or
inc
out
hlt
sub
fdivr
xchg
rol
adc
push
rcr
sbb
movs
mov
adc
(bad)
(bad)
aaa
fisttp
jmp
add
fcom
ror
cmp
cmp
daa
xor
into
(bad)
or
std
fsub
int3
mov
add
mov
xchg
repnz
fcomp
std
ds
int3
pop
hlt
mov
scas
into
sub
pop
xchg
clc
cmps
pop
cmp
fcom
and
sub
jno
int3
mov
fidiv
es
js
mov
fcom
dec
dec
jg
sbb
in
lods
fist
mov
jae
cwde
adc
mov
cmp
cmp
iret
jp
fdivr
shl
push
fsubr
and
inc
mov
cmp
fdivr
cmp
cmp
das
out
xlat
mov
ins
cmp
push
fcom
push
fisubr
mov
sbb
aaa
sbb
fsub
xchg
inc
jp
loopne
jg
pop
cmps
out
add
ret
jae
push
ror
push
inc
fdiv
dec
in
loop
out
fnsave
stos
rol
add
call
clc
(bad)
cdq
dec
inc
fdivr
add
cmp
pop
jne
stos
inc
or
dec
mov
or
test
fsub
loope
daa
js
xchg
xchg
out
cmp
sbb
adc
adc
fsub
push
dec
inc
popf
bound
scas
xor
and
mov
cmp
add
cmp
push
loop
lea
clc
mov
out
shl
mov
(bad)
sbb
pop
popf
xchg
repz
xchg
jb
pop
and
lods
out
mov
scas
sbb
test
fidiv
add
adc
xor
fsubr
clc
sahf
mov
fdiv
adc
int3
pusha
cmp
ss
dec
inc
mov
jle
jmp
out
inc
push
mov
(bad)
sub
mov
out
cs
retf
retf
xchg
jo
dec
fsub
sbb
cmp
adc
les
jbe
pop
xchg
mov
push
stos
shl
push
adc
into
jo
and
inc
outs
xchg
cld
shr
dec
lea
cwde
fadd
lods
xor
push
jmp
test
ins
mov
mov
jmp
fadd
rcl
add
push
data16
shr
sbb
push
adc
pop
fsubrp
lds
push
lock
mov
push
add
pop
int
jl
pop
in
sub
push
leave
pop
arpl
ins
push
sub
fs
cmp
aaa
push
shl
jno
std
xor
mov
ins
retf
leave
xchg
sbb
les
jo
fistp
cmp
enter
or
(bad)
fsubr
push
clc
push
fdiv
out
inc
inc
xlat
jno
not
(bad)
jge
hlt
imul
ret
sbb
pop
jo
fs
in
fwait
iret
dec
popf
cmps
loopne
out
cmp
fsubr
cdq
call
ins
xor
fwait
ret
cli
psubb
outs
retf
xlat
sahf
cmp
(bad)
mov
and
xor
xchg
je
push
mov
xor
or
sub
mov
fstp
push
adc
push
sub
and
fmul
dec
hlt
loope
pop
ret
push
xchg
test
bound
jne
mov
and
pop
js
xchg
and
jecxz
mov
mov
sub
sbb
or
div
fmul
in
add
mov
cmp
(bad)
sar
repnz
adc
add
fld
div
dec
(bad)
xor
repnz
call
adc
sub
retf
data16
not
call
sbb
retf
out
xchg
leave
and
mov
xor
mov
mov
add
and
push
adc
adc
xor
sar
gs
aas
test
dec
test
pop
adc
ret
rol
dec
xor
inc
repz
xchg
loopne
ror
loop
lock
fmul
scas
int
fdiv
sub
and
pop
inc
lods
mov
imul
mov
pop
sbb
push
fdivr
lds
fmul
jbe
in
sar
loope
aas
inc
inc
fst
add
mov
sbb
(bad)
shr
mov
int3
push
jmp
shl
jns
fmul
clc
sbb
xor
fadd
ficomp
sub
shl
sbb
ins
es
fdiv
adc
bound
dec
xlat
in
and
dec
pushf
test
mov
rcr
or
or
pop
push
dec
fmul
(bad)
mov
xor
push
xchg
jbe
xlat
out
xor
(bad)
movs
enter
sbb
std
and
sahf
push
jmp
scas
jo
jbe
jge
cwde
mov
sbb
fsubr
inc
jp
(bad)
ja
cmc
lods
(bad)
fs
xchg
popa
fcom
movntps
and
stos
mov
push
pop
fcom
outs
imul
fmul
push
pop
push
fmul
(bad)
sbb
and
test
xlat
stos
or
add
ja
test
sbb
js
or
sbb
shr
fcom
sub
mov
loope
fsub
fwait
in
popf
jmp
(bad)
mov
sbb
je
mov
sbb
retf
popf
stos
xor
xchg
pop
int
scas
movs
fsub
ja
push
rcr
out
pop
test
xchg
fadd
or
leave
cmc
es
fdivr
lods
cwde
push
inc
pop
dec
shl
imul
lods
mov
and
addr16
fmul
jmp
loop
je
js
xchg
sub
ss
ret
and
pop
mov
fadd
sub
out
inc
adc
jo
mov
mov
in
sub
sbb
xchg
fld
popf
pop
mov
test
shl
or
sbb
ret
sbb
jo
ds
xchg
adc
fstp
xchg
and
(bad)
(bad)
sbb
fcom
(bad)
jl
fsub
(bad)
jle
fisub
add
fmul
fs
or
lock
mov
jp
pop
push
fdiv
dec
aas
rcl
cmp
loop
push
jmp
test
ds
scas
dec
out
jmp
sar
lods
sti
jl
mov
push
or
into
fcom
cmp
dec
xchg
inc
cmps
rcr
fmul
nop
out
addr16
iret
jmp
fmul
sbb
xchg
(bad)
outs
and
xchg
mov
mov
sbb
popf
enter
or
adc
out
inc
push
in
fdivr
pop
inc
not
addr16
test
movs
xchg
pusha
retf
mov
add
lods
das
out
in
enter
jg
ret
ins
dec
shr
mov
fstp
cli
hlt
inc
xor
inc
fsub
test
std
inc
xlat
outs
dec
fcomp
(bad)
fwait
or
fcom
push
add
push
fdiv
into
or
fcomp
mov
or
push
sub
std
leave
pop
add
loop
test
push
cwde
cmp
and
mov
outs
les
sbb
call
mov
jge
jmp
pop
aaa
mov
sbb
ds
and
stos
push
idiv
fsub
xlat
xor
icebp
push
outs
aaa
call
hlt
repnz
sub
fsubr
ins
adc
pop
xchg
and
sbb
sub
(bad)
popf
fsubr
jns
and
or
mov
popf
mov
loop
fadd
xor
nop
pop
and
popa
push
fadd
sbb
icebp
push
pop
jbe
and
or
pop
icebp
cmp
pop
dec
fcom
adc
push
xlat
cwde
test
out
xchg
jmp
push
fcom
or
push
lock
mov
movs
adc
mov
test
iret
stc
fcomp
inc
test
jno
xlat
cmp
mov
std
ffreep
and
aas
fcom
push
daa
xchg
mov
loope
pop
jecxz
fimul
mov
es
xlat
jb
int3
retf
or
xor
adc
dec
jns
xor
xbegin
pusha
xchg
jg
fidiv
retf
aam
in
(bad)
cmp
push
sub
rcl
ins
icebp
or
scas
adc
add
fdiv
inc
push
fwait
mov
adc
inc
int3
pushf
xchg
jge
fsubr
sbb
or
mov
xchg
jmp
out
push
push
sub
inc
cmp
(bad)
cmp
mov
ror
mov
sbb
xor
xor
dec
fadd
push
pop
and
ins
xchg
into
in
cld
das
push
jg
jns
js
js
pop
fcomp
xchg
xor
or
int
std
pop
xor
cmp
pop
push
cmp
iret
inc
call
xchg
shr
popf
js
dec
fsub
adc
fcmovnu
add
(bad)
and
cmc
scas
sub
loope
call
call
stos
test
push
imul
xchg
and
mov
mov
push
arpl
ins
mov
popf
pop
inc
mov
leave
pop
xor
fcomi
cmp
and
jmp
inc
sub
shl
aas
jge
movs
loopne
xor
jns
fsub
sbb
loop
pop
in
xor
rcl
stc
in
adc
add
fadd
mov
fmul
fiadd
imul
jl
dec
hlt
fs
ds
and
pop
sbb
sub
fdiv
xor
pop
inc
jbe
xor
mov
mov
push
fnstsw
(bad)
cmp
mov
dec
ins
std
retf
fs
fcomp
int
sahf
cmp
xchg
les
(bad)
ss
clc
push
inc
push
(bad)
in
fcomp
push
lods
and
jo
mov
call
je
push
fdiv
push
cld
inc
lods
adc
xchg
cwde
jmp
jmp
sub
into
imul
sub
mov
jl
or
cmps
sub
push
fmul
int
fcom
and
mov
fcom
add
in
dec
push
and
push
fist
mov
dec
pushf
xchg
fsub
mov
aad
sti
xlat
gs
loope
lods
cmp
fs
js
test
into
dec
in
cmps
ror
jno
jns
nop
cmp
mov
fdivr
add
xor
jge
(bad)
xchg
cld
pop
mov
sahf
and
mov
mov
add
gs
fidiv
xlat
(bad)
mov
adc
dec
not
push
lea
fsub
jge
loop
retf
mov
dec
adc
sbb
jne
mov
jg
xor
out
sbb
add
sub
push
cwde
(bad)
jle
fwait
int3
pop
push
cli
pop
fdiv
push
stos
lahf
test
fadd
mov
(bad)
nop
fisubr
sbb
jmp
fcom
test
mov
scas
ins
or
push
adc
aas
fdivr
sbb
push
pop
pop
mov
and
(bad)
fadd
push
xchg
sbb
dec
cmp
pop
fadd
lahf
fsubr
xor
sbb
or
leave
imul
xchg
mov
scas
lods
stc
fdivr
imul
fdivr
xor
stos
unpckhps
sbb
xchg
mov
xor
sbb
outs
repnz
retf
nop
or
and
fdivr
shr
pop
pop
int
mov
or
mov
pop
pop
push
adc
inc
hlt
fisub
sbb
jmp
dec
shl
and
hlt
mov
int
push
(bad)
cmp
retf
fdivr
mov
lea
pop
push
push
out
or
fcomp
fiadd
xor
mov
and
xchg
sub
sub
int
inc
sbb
sbb
fnsave
push
shr
fcomp
iret
mov
add
neg
rcl
imul
leave
dec
call
jne
sub
mov
xor
sbb
ss
jecxz
jmp
fadd
rol
pop
cmp
fsub
in
mov
dec
or
jecxz
sub
addr16
stos
(bad)
jbe
push
dec
jnp
xor
ficomp
addr16
mov
aaa
mov
fild
fsub
push
adc
lods
lds
in
xchg
mov
iret
out
imul
xor
xor
mov
and
sub
jae
in
and
jbe
cld
xchg
je
xchg
fmul
loopne
fidivr
inc
sub
sbb
mov
fdivr
inc
ins
xlat
xchg
push
jmp
pop
sbb
mov
fdiv
sbb
mov
xchg
mov
cmc
into
xor
sbb
xchg
jmp
xchg
cmp
or
out
fmul
rcl
push
cmp
mov
out
movs
push
call
shr
fmul
jno
test
(bad)
out
cmp
mov
adc
jbe
ja
mov
mov
adc
jo
fadd
lock
xlat
mov
mov
into
inc
aam
(bad)
imul
sahf
fmul
cmp
clc
adc
xchg
clc
inc
call
fdiv
dec
movs
out
push
fdiv
daa
add
leave
repz
dec
push
rcl
mov
imul
scas
std
hlt
(bad)
fdivp
push
sbb
retf
or
js
fmul
movs
nop
jmp
push
enter
add
ss
xor
fsub
mov
(bad)
adc
inc
sbb
xor
adc
repz
mov
shr
fdivr
inc
int3
fcomi
fsub
cmp
repnz
fdiv
dec
les
jl
pop
push
fadd
push
dec
jne
push
ins
fcomp
jo
test
inc
fcom
jnp
mov
fcomp
push
dec
outs
fist
jbe
cmp
cwde
fcom
aas
pushf
cmc
imul
push
and
mov
fadd
pop
pop
cmps
les
adc
cwde
js
inc
ins
fcom
rcl
and
(bad)
mov
fadd
xor
icebp
dec
clc
dec
adc
mov
je
fsub
mov
in
outs
cmp
pop
repnz
pop
push
movs
jle
fs
xchg
xor
inc
jge
sub
and
js
sub
mov
dec
pop
mov
lahf
data16
inc
or
test
xlat
outs
inc
push
pop
sahf
sbb
pushf
mov
xor
(bad)
gs
jmp
inc
dec
jle
test
mov
add
lods
pusha
cli
cdq
fstp
ret
push
stos
adc
mov
xchg
pop
movq
fisubr
cwde
pop
shl
xor
ds
jne
fsub
xor
inc
leave
push
mov
movs
js
adc
(bad)
jle
xor
fsubr
push
cli
push
xchg
fmul
mov
(bad)
xor
sbb
fdivr
pop
add
out
xor
enter
sub
or
adc
outs
fst
(bad)
addr16
sahf
movs
cmp
daa
xor
or
jecxz
fdiv
mov
cmc
cmp
dec
or
pop
mov
inc
fwait
or
mov
enter
mov
sbb
pop
rcl
aas
mov
idiv
mov
out
fadd
std
pmaxsw
iret
fsub
mov
imul
sub
inc
das
pop
jp
cmp
daa
pop
dec
sar
mov
sub
jmp
fcomp
and
lahf
nop
fadd
pop
sbb
mov
pop
xlat
test
inc
sbb
sbb
pop
cmp
outs
das
fsub
int3
pusha
inc
scas
dec
jmp
test
pop
mov
cmps
mov
xor
or
test
or
mov
into
in
cli
dec
and
fmul
push
add
loopne
cmp
adc
iret
fmul
(bad)
arpl
imul
xlat
or
mov
leave
and
popa
mov
adc
push
pop
(bad)
(bad)
cmp
loope
enter
in
mov
mov
fdiv
cmp
xor
mov
fcom
out
jns
loopne
clc
fdiv
pop
dec
jnp
or
xor
in
mov
mov
add
es
dec
adc
arpl
cmc
fcomi
mov
cdq
rcl
scas
mov
jnp
out
movs
or
fadd
xchg
xor
inc
mov
sahf
sub
lods
and
in
and
mov
ins
mov
xbegin
js
fild
rcr
adc
add
std
jo
into
ins
add
fmul
outs
sbb
mov
pop
fmul
mov
stc
pop
push
jp
std
test
mov
shl
loopne
lea
pop
cwde
inc
mov
(bad)
mov
sahf
rcr
popa
sbb
(bad)
fdiv
cwde
cmp
std
inc
(bad)
fdiv
les
sub
jg
in
mov
lahf
mov
and
retf
inc
mov
stc
out
inc
ins
in
xchg
pop
fidiv
sub
fcomp
dec
sub
arpl
ret
aad
popf
mov
adc
pop
mov
mov
gs
pop
jp
jae
dec
cmp
fcomp
jno
mov
jp
movs
sbb
in
out
in
lahf
mov
sbb
push
repz
push
sub
sub
and
repnz
jmp
(bad)
jecxz
test
fimul
aaa
in
dec
data16
retf
arpl
popa
pop
add
daa
fdiv
push
fxch
inc
jo
jb
mov
pop
pop
xor
inc
add
mov
pop
fsub
push
mov
adc
nop
add
jl
sahf
pop
iret
in
fcomp
ja
mov
fdiv
int3
xchg
adc
pop
xor
push
push
push
mov
cs
hlt
pop
retf
xchg
daa
clc
pop
fcom
leave
lahf
pop
fdivr
mov
stc
dec
pop
jp
fdivr
mov
loopne
test
cmps
push
fadd
lods
or
sar
push
movs
loopne
cmps
std
mov
push
push
jmp
(bad)
sub
outs
mov
test
retf
cmp
bound
dec
enter
and
fmul
hlt
or
clc
out
xor
js
sub
sti
dec
mov
fstp
and
jne
xchg
fs
xor
aaa
lea
shl
in
nop
fdiv
fdiv
mov
mov
jns
fcomp
push
inc
outs
add
fcomp
cmp
(bad)
fmul
shr
mov
stos
jnp
in
adc
inc
sub
lahf
lods
not
pop
lock
fmul
pusha
outs
and
and
mov
jno
fsubr
out
pop
jg
aaa
jbe
out
mov
xlat
mov
fwait
ds
jne
mov
mov
out
fdiv
test
xor
(bad)
push
mov
xor
adc
sbb
xlat
or
js
ror
rcr
dec
push
ds
das
es
fnsave
jns
ret
test
retf
test
add
popa
sbb
dec
pop
dec
jp
push
and
add
sub
adc
sbb
jecxz
mov
fsub
pushw
or
xor
push
sbb
push
xlat
mov
movs
mov
imul
int
mov
not
push
and
fdiv
dec
xor
jge
push
(bad)
ins
sbb
jae
pop
add
addr16
leavew
sub
push
jmp
das
xchg
sub
mov
dec
je
jle
retf
test
push
cmp
push
hlt
fmul
push
pop
mov
les
mov
lock
stc
loope
mov
scas
rol
fdivr
mov
inc
and
scas
test
adc
fsubr
jb
cmp
add
mov
(bad)
fcom
xchg
fsub
mov
inc
sub
(bad)
fmul
fist
pop
out
adc
adc
int
cmp
iret
fsub
movs
(bad)
fcom
(bad)
imul
into
push
das
xchg
mov
and
push
fsub
adc
or
or
inc
mov
or
fsubr
inc
jmp
rcr
mov
push
fcom
pop
ds
into
or
(bad)
push
fsubr
(bad)
jnp
stos
pop
fcmovb
xlat
pop
movs
aad
loopne
in
in
fdiv
ja
cmp
icebp
(bad)
jle
adc
fidivr
loopne
pusha
mov
int
hlt
cld
ficom
std
imul
push
sbb
cwde
in
cdq
fsub
je
test
cmp
cmc
jbe
fdivr
adc
xor
out
inc
mov
loop
and
retf
mov
ins
mov
mov
add
mov
loope
adc
mov
sbb
mov
sbb
adc
jp
das
jecxz
push
mov
sub
push
adc
mov
inc
popa
ror
mov
fcom
push
mov
lea
mov
cs
fdivr
mov
rcl
push
lds
ins
test
fcmove
addr16
xor
out
mov
ja
sub
jb
gs
into
and
daa
sbb
jbe
fdivr
xchg
mov
xor
mov
shl
fdivr
stc
adc
fcom
pop
sti
dec
fdiv
jns
out
and
add
mov
movs
adc
sbb
cdq
jg
scas
pop
push
out
adc
fdivr
inc
leave
inc
popf
sbb
ror
xchg
jmp
ds
retf
xchg
in
fadd
call
add
hlt
nop
mov
sub
add
bound
fcomp
(bad)
loope
int3
jnp
fcomp
loopne
adc
mov
xor
push
(bad)
fscale
int3
fcom
test
add
cmp
lods
aam
mov
je
lock
xor
jp
daa
fdivr
and
clc
ds
jle
adc
jmp
test
lods
shr
stc
cmp
jl
sahf
inc
cmps
test
hlt
xchg
fld
(bad)
jns
dec
cmp
push
and
fwait
dec
stc
loop
mov
xlat
and
(bad)
xor
xchg
dec
fcom
adc
push
js
imul
cmp
xor
es
(bad)
xor
xor
aaa
out
fsub
cmps
rcr
pop
mov
cdq
in
dec
lea
ins
mov
sbb
jge
outs
fld
jae
mov
fsubr
mov
or
pop
jo
xchg
cmp
popa
fsub
push
add
(bad)
out
inc
adc
not
adc
cmc
pusha
mov
inc
ret
fadd
outs
inc
add
jmp
xlat
mov
sub
jb
sub
sbb
jp
fwait
lahf
mov
xchg
jne
lock
test
scas
popa
loop
stos
xchg
aaa
(bad)
fadd
adc
(bad)
xor
bound
push
(bad)
sub
push
fdivr
or
jmp
mov
and
or
mov
push
fisttp
loopne
mov
dec
movs
test
fimul
xor
sub
fidiv
jp
adc
ror
cmc
or
cdq
sbb
xor
fadd
mov
dec
sbb
xor
fs
retf
mov
test
icebp
jecxz
fsubr
test
mov
repnz
adc
fdivr
cwde
cmps
(bad)
pop
fdivr
adc
js
retf
or
sbb
xlat
push
mov
fcomp
pop
mov
in
cmp
mov
rcr
shl
leave
and
fcomp
(bad)
sub
add
int
lods
lods
jmp
fiadd
scas
sub
fadd
or
add
lods
pop
movs
pop
mov
xor
ins
loopne
xchg
(bad)
(bad)
leave
fld
or
mov
dec
adc
inc
sbb
iret
in
fmul
imul
arpl
jmp
sbb
loop
mov
(bad)
fcom
adc
ss
xchg
(bad)
inc
add
loope
icebp
fmul
out
jnp
adc
lds
ret
adc
mov
pop
fsubr
adc
and
jns
dec
sub
adc
in
mov
fcmovu
and
in
out
mov
add
fmul
xor
xlat
in
clc
mov
iret
sbb
shr
adc
test
pop
fcomp
fucomi
jecxz
or
loope
mov
push
pmulhw
aam
fdivr
dec
push
(bad)
fstp
es
jbe
dec
add
inc
stos
mov
ror
fsub
and
adc
push
ins
(bad)
mov
call
fild
mov
add
mov
cs
push
(bad)
sar
and
lahf
push
pop
(bad)
into
inc
inc
inc
clc
xchg
fdivr
ss
xchg
push
rcr
stos
add
rcr
ror
daa
xchg
(bad)
fdivr
retf
xlat
inc
into
movs
call
adc
dec
dec
aas
dec
pop
idiv
aam
and
pop
out
or
xchg
in
ds
sub
ss
push
mov
and
push
popf
rcr
loopne
rol
(bad)
push
cld
idiv
fsubr
mov
loop
out
es
sbb
shl
retf
out
mov
adc
sar
rcr
aam
fdiv
mov
lods
test
dec
fcomp
add
fmulp
popf
iret
leave
in
and
or
adc
mov
ror
push
mov
je
mov
adc
inc
inc
jb
dec
cwde
mov
xchg
in
add
xchg
sub
xlat
scas
mov
cs
je
fnstcw
sub
push
fld
adc
sbb
add
fdiv
test
push
popa
fadd
pop
jo
fdivr
in
xchg
push
sbb
dec
cld
lods
inc
mov
dec
mov
sbb
repz
push
or
mov
cmps
fsubr
adc
fadd
jp
xchg
mov
daa
adc
popf
pop
jge
dec
rcr
data16
fsub
xlat
fstp
lds
mov
out
ror
sbb
mov
fcomp
dec
pop
sbb
shr
(bad)
mov
xchg
aaa
fdivr
push
fdiv
inc
inc
nop
(bad)
jbe
fdiv
and
mov
sbb
clc
mov
lea
mov
pop
jne
stos
les
push
clc
and
fdivr
daa
xor
or
sub
add
mov
fsub
test
xchg
add
pop
or
in
inc
test
out
into
add
cdq
cmps
arpl
lahf
fwait
sub
cli
(bad)
mov
adc
xchg
test
mov
add
jno
dec
leave
cwde
clc
sbb
xor
fmul
(bad)
push
aas
cmp
mov
mov
bound
jnp
pop
ds
neg
sub
(bad)
fsubr
div
mov
mov
adc
push
xchg
in
lds
jl
retf
cmc
xchg
jmp
inc
xchg
mov
fdivr
lahf
ins
or
adc
stos
std
push
sti
(bad)
loop
mov
div
mov
sbb
leave
rcr
xchg
aad
pushw
stos
cmp
mov
pop
dec
fidiv
in
repnz
jo
sub
or
sbb
pop
sbb
test
fsubr
mov
retf
mov
mov
push
and
and
fsub
outs
ret
xchg
mov
mov
and
cs
and
outs
ret
push
cmp
push
xchg
push
fdivr
dec
dec
arpl
pop
out
enter
jp
pop
cs
mov
jge
add
mov
xchg
fsubr
push
ror
jmp
lock
fwait
int3
adc
fdiv
int
das
cwde
std
dec
fld
iret
outs
xchg
inc
(bad)
and
add
xor
inc
pop
nop
sahf
dec
lds
ins
fcom
mov
daa
sar
adc
xor
mov
xchg
fsub
fld
adc
enter
(bad)
es
xchg
clc
loope
int
jnp
mov
fimul
lds
add
sbb
xchg
fdiv
add
pop
cwde
adc
push
jnp
or
push
sub
ret
xchg
fsubr
xor
dec
adc
aas
pop
xor
test
sbb
in
call
(bad)
sbb
jle
jbe
adc
out
fsub
(bad)
retf
jl
xlat
fadd
pop
int3
out
ins
and
call
fist
rcr
push
mov
leave
adc
ins
cwde
clc
jp
js
fdiv
mov
movs
add
pop
xor
mov
sub
mov
pop
mov
fcom
adc
lea
pop
pop
fdivr
adc
es
sub
mov
call
enter
mov
test
mov
fsub
mov
add
arpl
cmp
popf
or
loope
pop
jmp
sbb
jb
xchg
jecxz
pop
fcomp
mov
pop
fsub
xchg
dec
cmp
pop
xchg
pop
mov
lds
fdiv
iret
retf
call
fsubr
mov
fsubr
and
pop
xchg
scas
fst
imul
adc
movs
pop
lock
pop
retf
pop
xchg
retf
dec
test
mov
add
neg
sar
js
fidiv
sbb
loopne
fadd
inc
cwde
fcmovnbe
ret
add
das
fdiv
mov
fwait
pop
push
jbe
fmul
imul
fdivr
xchg
(bad)
lods
xor
dec
aam
inc
cld
sbb
mov
jle
sbb
add
xor
test
out
imul
sub
pop
inc
dec
lods
aad
fcom
sti
je
pusha
adc
lods
lahf
popa
inc
xlat
rol
sbb
std
loop
mov
xchg
pop
dec
test
std
mov
fcom
sti
dec
daa
fsubr
push
pusha
out
xchg
fs
push
sbb
xor
adc
cmps
fdivr
jno
mov
nop
adc
int3
xor
test
push
lahf
sbb
cmps
add
and
mov
retf
xlat
std
fnstenv
and
or
jle
pop
(bad)
cmp
(bad)
test
mov
aas
sub
jne
les
std
retf
js
sub
xchg
shr
adc
rol
sbb
cdq
jb
mul
xchg
push
push
iret
inc
push
xchg
pop
ret
out
inc
pop
or
mov
ror
adc
xchg
and
(bad)
pusha
inc
push
rcl
pusha
shl
je
xor
sahf
aas
test
or
imul
add
loope
ret
xchg
jge
daa
xchg
inc
push
jne
(bad)
les
lds
loopne
jae
leave
pop
rol
xor
enter
jle
imul
ss
in
bound
int3
or
inc
sub
jmp
call
cmp
sub
mov
jp
inc
dec
dec
dec
mov
mov
push
sub
pop
cs
shl
xlat
ror
inc
xchg
jno
jmp
rol
cmp
enter
rcl
cmp
pop
out
sub
inc
mov
sti
rcr
(bad)
xchg
in
xor
adc
and
outs
mov
aas
outs
retw
adc
test
popa
sbb
iret
xchg
push
push
sub
das
dec
and
les
pop
call
adc
repnz
inc
mov
mov
inc
repnz
call
imul
aam
jne
add
sbb
mov
add
fdiv
sbb
mov
push
adc
and
shl
icebp
stos
dec
aam
mov
push
adc
mov
icebp
cmp
into
loopne
sub
jns
aaa
adc
dec
and
mov
inc
dec
cmps
lods
inc
dec
pop
retf
or
pop
sbb
clc
jns
mov
xchg
shl
mov
adc
xchg
inc
rcr
mov
push
call
shl
inc
call
js
(bad)
and
popf
ins
mov
pushf
nop
pop
cmp
das
repnz
dec
pop
es
sub
out
div
fld
and
xor
fcomip
gs
rcr
hlt
mov
adc
xchg
and
jle
pop
icebp
dec
aad
fs
cmps
div
hlt
repz
or
leave
dec
push
cld
mov
cmp
sub
xchg
scas
mov
sub
mov
shl
mov
lods
xor
adc
loopne
fsubrp
mov
xor
xchg
and
adc
sbb
inc
jl
fldcw
mov
movs
mov
add
jae
fxam
out
dec
or
and
sbb
bound
mov
dec
push
ja
xor
mov
loopne
fsub
ret
cmps
movs
fadd
adc
int3
sbb
mul
sbb
sahf
bound
ror
xchg
les
les
je
test
loopne
or
mov
xchg
pop
push
cmps
pop
vsqrtps
lds
mov
and
pusha
dec
stc
enter
lods
out
jle
adc
(bad)
mov
pusha
scas
out
push
lods
cmp
fstp
sub
mov
cmp
or
rcr
mov
shl
push
out
stc
retf
aas
pop
fisub
popf
in
pop
bound
add
js
sub
mov
scas
mov
inc
and
jae
je
test
xchg
repnz
ja
sahf
js
inc
ja
sar
mul
(bad)
mov
jo
xchg
int3
fst
sub
mov
jmp
inc
fcomi
xchg
push
adc
mov
and
mov
sbb
mov
mov
cmps
sbb
fisub
fbstp
jge
sub
mov
jo
cs
out
jle
cmp
fs
add
xchg
and
adc
scas
pop
sub
adc
jns
pop
dec
int
ffreep
inc
jmp
mov
icebp
call
fadd
(bad)
(bad)
xchg
std
xor
inc
mov
ret
mov
mov
inc
ret
nop
mov
int3
ret
nop
icebp
cdq
cmp
lahf
sbb
int3
xchg
adc
ins
mov
fild
sub
(bad)
rcl
jl
dec
add
call
push
in
addr16
call
out
outs
cmp
rol
mov
sub
jns
jb
bound
ret
sub
rol
js
pusha
idiv
mov
mov
enter
push
cmp
loope
or
jb
adc
aas
xchg
xor
add
xchg
in
fs
cmp
aad
rcr
add
fstp
mov
and
stos
or
(bad)
fistp
cmp
mov
call
inc
sbb
stos
loopne
jmp
cdq
xor
retf
sbb
or
loopne
mov
out
mov
(bad)
inc
sbb
adc
mov
jmp
pop
cmp
jno
push
aas
xchg
cmc
and
fst
xor
clc
lods
sbb
ror
dec
xchg
inc
std
(bad)
icebp
je
adc
sbb
xchg
jno
das
cmp
inc
(bad)
imul
(bad)
loopne
cwde
cmp
shl
scas
xchg
out
xchg
ret
mov
xor
cmp
ins
lods
fnstenv
cli
rol
or
fwait
push
pop
ins
jmp
js
jecxz
mov
xchg
dec
xor
loopne
rcr
jae
push
test
pop
stc
push
test
jb
cwde
call
mov
jno
jmp
fstp
or
aam
popf
pop
popa
pop
aam
xchg
xchg
sub
mov
ins
cmp
jbe
ficomp
dec
xor
adc
cmp
imul
dec
ffreep
sub
in
pop
sbb
xchg
cld
add
(bad)
mov
aas
stc
inc
sahf
add
cmc
test
int3
lds
cmp
lahf
add
cmp
mov
js
xchg
shr
pop
push
fild
dec
jp
imul
push
or
adc
and
cld
loopne
out
mov
ret
xor
xlat
cmp
(bad)
xor
sbb
(bad)
mov
adc
mov
pushf
loopne
pop
jge
das
add
ss
aaa
pop
and
jns
cmp
sub
pop
test
push
pop
fistp
add
jne
mov
xchg
xor
test
jae
outs
out
ins
fsubp
or
mov
pusha
aad
daa
add
in
mov
pop
dec
jmp
and
in
mov
fstp
fimul
or
xlat
pusha
ja
jge
sub
stos
es
xchg
or
xor
mov
push
xchg
jns
movs
ds
or
outs
sbb
das
adc
int3
jo
aas
add
(bad)
jbe
dec
and
stc
dec
push
dec
sbb
inc
push
xchg
mov
jp
ror
test
mov
pop
fldcw
enter
push
addr16
jp
mov
adc
adc
mov
xchg
jp
aaa
pushf
into
pop
pop
mov
rol
mov
pop
test
adc
xchg
pop
ins
and
jns
jno
lock
iret
retf
mov
scas
(bad)
in
inc
xchg
push
dec
cmp
ret
sub
mov
mov
xor
(bad)
(bad)
fidivr
cmps
enter
mov
(bad)
inc
cmp
push
jns
xchg
push
cs
(bad)
push
mov
xchg
cmp
mov
fistp
jno
xlat
xor
xchg
fs
pusha
mov
test
push
cs
call
cmps
scas
in
mov
mov
(bad)
outs
xor
pop
xchg
pop
clc
cmps
call
mov
sbb
jo
cdq
rcl
int
push
fisubr
test
(bad)
pop
nop
mov
add
movs
adc
shr
sub
call
jnp
loope
or
loopne
js
enter
mov
mov
jp
or
pusha
lea
fst
in
fbstp
mov
out
xchg
jae
enter
repz
sbb
inc
lahf
xchg
ins
out
and
mov
icebp
cmps
ret
out
jle
cmp
test
jle
mov
pop
cmp
test
packssdw
push
test
or
fwait
data16
fimul
imul
pop
push
inc
mov
or
daa
push
fstp
pop
jae
pop
pop
aad
lods
out
outs
mov
dec
outs
je
sub
aaa
movs
and
sbb
mov
mov
xchg
inc
shl
fst
xchg
push
mov
ret
cld
retf
inc
mov
inc
inc
(bad)
out
and
daa
pop
push
cmp
adc
cmp
jg
mov
pop
es
leave
xlat
enter
mov
fistp
cmp
push
js
ja
pop
lahf
out
cs
ror
xor
loope
out
in
outs
sub
cmp
jge
loope
lahf
or
push
lods
cmp
ds
xchg
es
fwait
lahf
jo
xchg
sub
jg
lds
cdq
and
pop
in
mov
or
pop
pusha
push
push
test
cmp
push
lahf
push
jmp
jns
and
adc
scas
cdq
test
inc
out
gs
(bad)
pop
or
out
mov
(bad)
mov
hlt
or
fidiv
fbld
xchg
mov
inc
xchg
sbb
repnz
mov
push
movs
call
shl
ja
fucomp
and
popf
pop
fbstp
mov
pop
add
mov
dec
push
jb
cli
sub
loopne
gs
pop
mov
and
xor
dec
xlat
sbb
fbld
sahf
or
fwait
mov
outs
fisub
mov
jg
iret
cmp
cmp
nop
sub
pop
fsub
dec
jb
das
xchg
(bad)
adc
fadd
mov
and
loopne
mov
push
dec
enter
loopne
and
sub
xlat
xchg
sti
mov
sbb
xlat
mov
lea
ficom
shr
add
pop
or
mov
mov
dec
jno
lds
mov
(bad)
cmp
(bad)
mov
mov
pusha
mov
mov
and
pop
ss
iret
std
mov
fisttp
mov
outs
mov
(bad)
es
rcr
mov
inc
xlat
inc
fist
dec
jns
pusha
and
(bad)
mov
or
cmps
fnsave
mov
(bad)
hlt
mov
into
inc
fndisi(8087
cmp
or
jae
(bad)
mov
xor
pop
fisttp
or
jg
sar
mov
enter
loopne
movs
or
and
les
jl
scas
cmp
popa
rol
loopne
and
cmc
mov
aad
lods
pop
inc
and
pop
mov
jo
hlt
test
je
pop
jo
jnp
pop
fisttp
(bad)
sbb
xor
fmul
mov
pop
sar
or
in
pusha
sub
sbb
std
mov
add
cmp
loope
sub
or
and
or
and
mov
data16
lahf
pop
mov
or
cmp
call
and
jl
mov
dec
sub
mov
popf
pusha
(bad)
xchg
outs
and
loopne
mov
jne
jbe
ins
pcmpeqb
pop
ret
out
mov
mov
movs
clc
xlat
int3
pusha
jmp
ffreep
call
aas
stc
(bad)
cs
inc
or
add
pop
mov
inc
or
mov
add
jne
sbb
mov
mov
sahf
mov
addr16
(bad)
into
push
ds
addr16
pop
or
jo
add
mov
ror
int
and
int3
out
mov
lds
jl
mov
fisttp
or
sub
xor
int3
pop
pusha
inc
xor
jno
sar
lock
push
cmps
test
mov
ret
jbe
lods
sbb
cmp
push
aas
and
nop
xor
into
fild
ret
inc
mov
sub
jno
jmp
fstp
dec
pop
fisttp
cmc
jg
xchg
dec
call
aaa
and
pop
loopne
popa
aas
mov
ret
push
jl
and
lods
iret
in
sar
add
jns
jbe
mov
xor
jns
scas
xor
rol
push
sub
adc
cmc
ja
and
mov
pop
data16
mov
xchg
or
pop
mov
lahf
int3
mov
lahf
or
fdiv
or
scas
xchg
bound
sub
sub
popa
(bad)
les
scas
jb
repnz
jp
fmul
pushf
in
xor
push
inc
div
cld
out
jbe
jns
push
int
fisttp
not
retf
cmp
out
test
mov
sub
push
sahf
mov
cld
pop
mov
aas
mov
pop
pop
jns
sub
lods
js
or
mov
je
cwde
xchg
jle
xor
aad
add
leave
pop
ins
outs
xor
adc
fdiv
out
jns
cmp
cdq
outs
push
mov
imul
add
pushf
add
adc
mov
aad
sub
int3
(bad)
test
hlt
repz
mov
clc
js
xchg
and
push
out
lahf
ret
pushf
inc
xchg
add
gs
outs
xlat
out
(bad)
jb
pop
sub
adc
enter
(bad)
sbb
mov
push
mov
mov
ror
push
test
fsubp
or
(bad)
cdq
aam
(bad)
cld
push
ss
ja
push
dec
jno
xchg
test
lods
pusha
add
(bad)
test
inc
mov
cmp
cmp
les
or
test
inc
cdq
cs
sbb
movs
pop
ins
repnz
aaa
dec
jmp
sar
mov
outs
cld
pop
xchg
out
jge
inc
cmp
fsubp
sub
xchg
cmp
(bad)
stc
push
(bad)
and
(bad)
add
mov
jmp
pop
pop
ficom
cmps
pop
enter
test
lea
movs
pushf
mov
loopne
xchg
retf
ss
leave
push
push
mov
pop
enter
jbe
push
sub
cmp
(bad)
out
sahf
fwait
enter
push
pusha
jmp
jl
into
(bad)
cmp
loopne
in
push
dec
push
enter
jmp
pusha
mov
push
jge
cmps
in
push
mov
call
dec
and
mov
sbb
cmp
call
les
mov
or
jo
outs
mov
inc
jmp
jns
mov
cli
(bad)
imul
pop
vcvttss2si
mov
adc
movs
cmp
or
lds
or
xchg
jae
retf
fwait
sbb
dec
lahf
push
leave
(bad)
jmp
mov
adc
lods
jbe
jmp
(bad)
and
stc
dec
in
dec
scas
inc
stc
sub
or
mov
retf
js
retf
lds
jg
xor
aas
dec
fnsave
xchg
ficomp
pusha
test
push
and
xchg
loopne
iret
pop
iret
mov
stos
ret
dec
mov
add
lahf
sbb
xor
mov
adc
pop
add
fiadd
cmp
dec
mov
xchg
test
fistp
mov
xchg
mov
add
jb
popa
pop
or
pop
pusha
adc
(bad)
int
iret
sbb
pusha
cld
stc
cmp
cs
and
dec
xor
or
and
add
mov
xchg
ficomp
or
sbb
jecxz
out
push
jp
cmp
in
movs
call
sbb
mov
mov
sub
leave
inc
cmp
repnz
clc
dec
ins
adc
stos
add
cmp
xchg
mov
retf
loopne
aas
imul
xchg
ret
mov
cld
pop
test
inc
cs
cs
mov
pusha
pushf
popf
cmps
dec
sti
cld
jnp
jg
aas
repz
push
pop
pop
sbb
sub
loop
fisttp
adc
int
jmp
xchg
jbe
fisubr
iret
sar
clc
pop
sbb
(bad)
cmps
push
test
inc
sub
mov
jmp
std
mov
sbb
pusha
push
push
adc
mov
ret
sbb
jnp
sbb
sbb
sar
inc
dec
pop
in
xchg
sbb
add
mov
push
dec
dec
pop
cmps
jo
sar
xchg
xchg
scas
rol
and
ds
mov
jmp
aam
stc
dec
lea
loopne
jmp
jmp
or
and
add
inc
xor
or
(bad)
mov
dec
ror
jg
jno
dec
pop
mov
mov
jmp
inc
pop
jns
and
(bad)
push
push
(bad)
xchg
enter
pop
xlat
retf
add
clc
sub
xlat
sub
and
dec
mov
xor
adc
test
or
fild
jae
and
mov
fstp
mov
sub
inc
or
xor
sub
xchg
cmp
pop
jmp
push
cmp
nop
int3
xor
xlat
lods
in
adc
cld
iret
cdq
fild
push
dec
pusha
mov
repnz
ins
push
mov
inc
cdq
jmp
inc
fs
test
jecxz
icebp
dec
or
jno
push
fbld
mov
out
cmp
aaa
and
mov
adc
test
arpl
sbb
enter
cmps
pop
into
jp
jb
push
shl
mov
lds
repnz
cmp
cwde
jo
nop
sbb
mov
inc
adc
cmp
or
cmp
pusha
loop
xchg
push
hlt
pop
pop
fcmove
data16
cmc
mov
stos
test
les
popf
fwait
shl
loope
pop
cmp
out
into
sbb
or
aas
xor
jmp
push
cmps
push
ret
mov
call
jno
loopne
retf
js
leave
dec
(bad)
or
dec
inc
pop
fbstp
in
jl
xlat
xchg
mov
(bad)
cmp
shl
ss
dec
adc
xor
pop
das
fild
xor
(bad)
push
sbb
and
dec
inc
push
and
fmul
mov
dec
mov
xchg
xchg
ret
or
jp
push
dec
adc
sahf
cmp
jno
int
loopne
call
js
cmc
mov
das
jo
ror
push
pushf
pop
out
xchg
fild
mov
xchg
dec
push
or
aaa
loopne
push
fistp
mov
push
in
dec
mov
rcl
jns
pop
(bad)
call
xchg
mov
push
xchg
inc
xor
or
mov
dec
sub
aaa
(bad)
jle
push
test
fild
daa
imul
cs
adc
mov
inc
xchg
pop
xchg
sbb
fisttp
(bad)
or
inc
cwde
mov
test
cld
mov
dec
sbb
mov
mov
clc
xlat
cdq
jecxz
xchg
dec
inc
int3
ins
(bad)
jmp
sahf
jl
xchg
and
loopne
push
jg
fist
imul
and
ds
rcr
scas
sub
or
clc
xor
push
pop
fistp
mov
mov
nop
adc
jae
mov
mov
(bad)
or
jg
sub
stc
in
xchg
sbb
ret
mov
into
adc
test
popf
jne
inc
or
or
rcr
aas
mov
mov
call
pop
mov
pusha
cdq
add
jle
out
pushf
adc
mov
addr16
(bad)
jmp
aaa
gs
in
sub
shl
xor
dec
hlt
popa
pop
add
dec
mov
in
sbb
ds
clc
dec
add
adc
je
es
jo
shl
je
fstp
jns
clc
add
and
xor
jne
test
mov
xlat
enter
inc
aad
shr
(bad)
lods
(bad)
jae
cmp
lahf
inc
dec
es
fist
fs
(bad)
fdivr
arpl
mov
and
inc
(bad)
cli
cmp
int3
pusha
test
(bad)
out
clts
dec
mov
pop
lds
cmp
sub
test
ds
sub
sub
out
xlat
scas
int
cs
xchg
xchg
mov
xchg
iret
mov
mov
mov
jp
mov
mov
pop
sahf
scas
or
push
jle
test
xor
loope
cld
dec
ss
movs
jbe
xchg
add
jne
or
mov
xor
fs
xchg
add
enter
mov
push
cmps
ins
dec
dec
mov
popa
inc
es
inc
pop
jno
sub
dec
pusha
pop
arpl
test
iret
xrelease
sbb
pop
(bad)
mov
cwde
lds
dec
xlat
cld
cmp
(bad)
fs
xchg
jmp
test
inc
lahf
in
mov
and
outs
outs
call
into
lods
inc
mov
adc
movs
daa
lahf
fbstp
sub
mov
and
ja
sbb
imul
sub
out
ss
daa
jb
mov
mov
push
mov
imul
sbb
ror
xor
sub
into
dec
sti
test
mov
enter
pop
mov
cmp
push
sbb
cdq
icebp
sbb
rcr
xchg
imul
ins
lods
sub
sar
ret
loopne
xchg
pop
loopne
iret
rcr
sub
repnz
call
nop
stc
pop
inc
or
fistp
mov
outs
xchg
dec
jl
and
xchg
movs
push
aas
or
inc
inc
adc
mov
jo
pop
inc
pop
or
xlat
pusha
popa
jo
addr16
inc
push
sub
mov
mov
dec
movs
mov
fmulp
jge
mov
les
or
lds
push
and
leave
sub
mov
jecxz
inc
in
and
daa
mov
aam
movs
push
inc
stc
out
push
xchg
sbb
mov
jb
add
jo
in
stos
mov
sub
repz
sbb
out
pusha
leave
mov
push
mov
cmp
sbb
(bad)
ror
or
pop
push
clc
dec
jge
loope
fidivr
lahf
sub
mov
cdq
cmps
int
into
icebp
ja
test
and
or
mov
cdq
scas
mov
add
cmp
fstp
dec
ret
cmp
loop
aas
xchg
lock
jns
pop
mov
(bad)
sbb
inc
xchg
push
aad
cmps
das
or
push
jb
jle
push
pop
sbb
adc
rcr
push
jp
jmp
inc
shl
jge
inc
aam
pushf
xchg
ja
xor
jg
stos
add
pushf
inc
cmps
xchg
aam
cmp
or
sahf
pop
nop
or
adc
push
dec
pop
je
mov
pushf
repz
push
out
ins
push
xchg
adc
mov
pop
loop
retf
adc
test
enter
pop
das
aas
fwait
jl
movs
xor
test
div
loopne
cmp
dec
ret
mov
add
xor
call
lahf
enter
mov
nop
lods
fistp
retf
and
icebp
pop
ins
daa
and
js
mov
xor
(bad)
and
int3
add
cmp
ror
sbb
pusha
pushf
sahf
or
into
hlt
cmp
xchg
cld
jae
gs
icebp
sbb
xchg
mov
ins
in
arpl
pop
pop
fmul
mov
add
jmp
fistp
and
add
mov
jge
stc
pushf
jle
xchg
cmp
xor
cli
popf
dec
mov
and
or
jnp
jmp
cdq
je
jno
inc
pop
pop
mov
loope
pusha
jnp
in
sub
rcl
sahf
cmc
test
or
add
sbb
loope
nop
stos
jg
or
sub
cmp
cmp
mov
adc
js
loopne
jp
add
ins
fsub
xor
loop
call
mov
fbstp
cmp
add
in
out
mov
loopne
cmc
push
push
dec
sti
sbb
imul
in
daa
mov
movs
pop
outs
retf
int
shl
xor
movs
stos
xor
in
dec
shr
push
jl
loope
push
sbb
inc
movs
loop
sti
mov
add
fidiv
jg
or
jnp
mov
mov
sbb
pop
pop
rcr
dec
adc
stc
xlat
push
dec
xor
test
mov
or
mov
and
fchs
in
loopne
cmps
or
jns
xor
loop
mov
xlat
les
mov
and
mov
sbb
loopne
dec
jmp
adc
mov
cmp
sub
pusha
(bad)
add
mov
and
dec
ficomp
loopne
in
loop
inc
or
inc
and
add
sub
call
call
adc
pushf
ja
rcl
jns
outs
sub
mov
test
shl
pop
cmp
rol
dec
xrelease
stos
out
fstp
pop
(bad)
jmp
fld
fisttp
fistp
pop
mov
(bad)
jbe
inc
jp
inc
pop
and
gs
movs
push
mov
or
in
into
sbb
inc
or
jmp
fild
loop
cmp
cmp
in
ds
push
add
pusha
leave
loope
or
idiv
adc
(bad)
adc
enter
xlat
aaa
cdq
in
pop
pusha
retf
mov
loopne
mov
mov
pop
imul
repnz
mov
cmp
xchg
loopne
gs
(bad)
call
loope
in
out
xchg
pop
fistp
aad
jne
inc
mov
sti
sub
xchg
mov
cmps
enter
jmp
mov
dec
hlt
js
movs
dec
dec
nop
lahf
neg
ror
mov
sub
mov
test
add
test
imul
xchg
pop
stos
lock
ja
enter
lock
in
push
call
xchg
in
xor
iret
mov
and
xor
or
lea
add
push
mov
aaa
jbe
scas
(bad)
int
popf
aas
ds
sub
fistp
sbb
dec
mov
push
aas
ficom
dec
jne
loopne
jmp
push
or
rcl
push
dec
push
adc
add
fwait
push
sub
neg
call
adc
fisub
add
xor
sub
cld
push
cmp
(bad)
fild
pusha
mov
pop
in
test
cmp
iret
lock
or
aam
aas
shr
(bad)
std
pop
bound
shl
jno
jbe
xor
push
add
xchg
mov
and
enter
les
xchg
cmp
js
mov
push
pop
adc
loopne
push
cld
pop
(bad)
mov
push
std
add
mov
cmp
rcr
iret
cmp
xlat
mov
into
push
jns
retf
xchg
mov
add
aas
jns
aas
outs
out
push
in
test
ins
lock
je
and
pop
sub
pop
in
fbstp
xchg
aaa
and
push
xor
fidiv
and
push
inc
jae
in
push
ja
sub
jnp
mov
and
cld
xchg
mov
loopne
jg
mov
cmp
adc
(bad)
in
and
es
add
jno
push
test
loopne
out
dec
inc
jecxz
and
jns
pop
inc
xchg
xor
imul
dec
adc
sub
dec
cmp
(bad)
cld
or
xlat
pusha
arpl
imul
rcr
xchg
mov
dec
add
fcomip
and
fisubr
mov
and
les
test
scas
outs
enter
stos
sub
icebp
shl
jge
inc
sbb
adc
frstor
cmp
xchg
sub
loop
xchg
dec
repz
cwde
pusha
sbb
cmp
push
dec
test
fistp
sub
mov
out
int3
loopne
jo
push
test
arpl
mov
sahf
sbb
jmp
(bad)
jge
gs
or
push
les
fdivr
mov
aas
inc
and
push
into
mov
xor
adc
stos
mov
push
out
or
mov
adc
pop
dec
pop
test
cmp
pusha
rcr
push
ins
push
shl
cmp
push
ss
or
adc
add
cld
outs
ja
pusha
add
mov
mov
rcl
xchg
lahf
dec
jp
fsubp
cs
xlat
ins
outs
pusha
dec
push
jne
cwde
imul
or
test
push
cs
xchg
sar
fisttp
fcomip
mov
mov
mov
out
fist
sub
les
mov
es
push
test
and
(bad)
in
mov
inc
scas
cmp
pop
mov
jo
adc
xchg
pop
mov
loopne
push
shr
hlt
jmp
imul
popf
fucom
in
lds
nop
lods
jg
sbb
and
mov
(bad)
shl
pop
int
(bad)
pushf
enter
fadd
push
mov
and
push
xchg
enter
fbld
sbb
inc
sub
mov
adc
mov
enter
add
stos
or
repz
push
je
aas
xor
jno
inc
push
leave
and
or
nop
sub
dec
cmp
out
or
xchg
mov
gs
or
movs
xor
and
in
adc
movs
clc
fcom
pusha
add
cdq
or
iret
sahf
dec
inc
mov
mov
(bad)
dec
pop
test
sub
loopne
inc
movs
jns
enter
out
xor
mov
(bad)
lock
ja
adc
pop
jecxz
sub
jnp
mov
sbb
rcl
in
pop
pop
aaa
adc
mov
mov
daa
js
fisubr
int
shl
sbb
les
dec
jae
mov
xor
imul
pop
push
cli
std
(bad)
js
fstp
xlat
dec
adc
dec
fisttp
dec
sbb
mov
loope
sbb
or
sti
pop
and
aas
cmp
xchg
fimul
jno
inc
add
int
fnstsw
call
push
jae
call
jl
call
xchg
cs
mov
neg
idiv
hlt
mul
loopne
scas
adc
adc
pop
cmp
adc
mov
fsubp
ins
int3
add
ret
stos
pop
push
mov
sub
push
mov
in
mov
retf
add
cmps
imul
sub
sub
mov
or
dec
push
in
sahf
xor
dec
test
jl
sub
jbe
stos
mov
pop
ds
ret
(bad)
sbb
dec
fisub
test
mov
mov
push
cmp
ins
inc
mov
push
addr16
inc
loopne
push
lds
pushf
and
lahf
in
push
pop
jmp
fbstp
or
push
push
xchg
scas
gs
jecxz
fisub
(bad)
aaa
imul
sbb
pusha
ss
cmp
and
jmp
adc
pusha
xor
icebp
mov
and
mov
mov
ret
xor
ds
jns
pop
add
or
call
push
and
jnp
adc
movs
or
mov
(bad)
sahf
cwde
in
iret
cmp
cmp
mov
out
sbb
iret
mov
jae
js
inc
sub
xchg
dec
cli
in
outs
inc
xor
leave
mov
fadd
push
fwait
mov
out
repnz
push
mov
xor
mov
stc
shr
ja
mov
and
std
retf
add
sbb
js
or
mov
outs
mov
sbb
jmp
fsubr
mov
iret
mov
inc
and
pop
dec
retfw
sbb
(bad)
cli
imul
mov
pop
cmp
mov
sub
fdivrp
or
xchg
push
mov
fucomi
stc
pop
fbld
jmp
push
dec
mul
xor
push
xlat
mov
in
jle
dec
fwait
cmp
add
repnz
pusha
dec
pop
and
lods
jg
and
inc
jo
adc
and
adc
push
cmp
and
int
shl
push
and
inc
mov
outs
sub
js
(bad)
inc
inc
fistp
xlat
stc
cmp
inc
fsubr
add
js
aaa
xchg
mov
adc
addr16
(bad)
inc
sbb
sti
(bad)
mov
and
js
cmp
adc
fisub
pop
jmp
xchg
add
leave
inc
and
adc
xchg
dec
mov
ret
out
push
pusha
in
or
dec
je
ss
xchg
ret
cwde
cli
pusha
push
ins
xchg
xchg
push
or
fwait
mov
push
push
inc
sbb
cdq
enter
retf
push
jo
fdivr
xchg
gs
data16
dec
les
inc
cmp
sbb
cmps
cmp
push
dec
pusha
mov
inc
mov
push
dec
push
lea
dec
jns
inc
xor
lods
loope
mov
lea
call
nop
and
(bad)
cmp
js
xchg
push
mov
(bad)
out
mov
out
pop
pop
pop
loopne
inc
mov
pusha
inc
cmp
neg
or
sbb
jb
rcr
adc
and
test
mov
mov
cmps
ss
xchg
js
sbb
push
ins
push
push
mov
jmp
bound
call
jno
out
out
cmps
mov
dec
xchg
mov
adc
pop
pop
sti
adc
xor
addr16
ja
(bad)
xchg
cdq
pop
push
sahf
loopne
retf
dec
int3
mov
xchg
inc
lahf
push
fisubr
cmps
jno
int
out
jle
rol
xor
pop
lds
sbb
sub
mov
js
sub
cmp
cmp
mov
clc
cli
mov
cmp
cli
or
ss
mov
mov
ror
jp
test
pusha
add
repnz
sub
(bad)
push
call
cmp
pusha
repnz
ja
adc
jo
push
mov
sbb
add
pop
mov
and
fwait
clc
xchg
and
int3
pop
retf
and
cmp
inc
dec
icebp
cmp
mov
jo
in
jo
xchg
or
js
dec
mov
push
outs
adc
jae
enter
and
mov
xlat
ror
push
pop
fidiv
xchg
je
fmulp
inc
test
sbb
or
jmp
mov
xchg
dec
(bad)
add
sub
jbe
xlat
sub
push
fild
cld
cs
into
sbb
xchg
inc
and
inc
in
cli
mov
lahf
add
pop
or
adc
dec
cmps
(bad)
fadd
lods
cwde
pusha
and
sub
cmp
popa
fsub
jmp
sub
sub
inc
sar
loopne
xchg
lds
add
mov
sbb
cmp
push
imul
mov
jae
xor
or
ins
adc
jae
jg
push
mov
jle
xor
mov
fidiv
xchg
je
fcom
mov
dec
push
or
ja
xor
sub
fimul
in
dec
outs
and
mov
sbb
xchg
jne
jg
gs
push
adc
stos
or
in
jp
jne
inc
pop
add
shl
jo
int3
mov
cmp
mov
mov
cmp
dec
xchg
pop
leave
mov
inc
mov
fimul
sbb
jge
imul
test
mov
into
js
mov
push
out
and
sbb
mov
out
jecxz
or
and
adc
das
xchg
xlat
movs
cmp
sub
cdq
jbe
fcmovnb
push
xor
icebp
pop
dec
inc
add
cdq
push
retf
fistp
cmp
int3
push
cdq
dec
mov
loop
pop
pop
pop
shr
xlat
das
push
fld
js
mov
jmp
push
out
inc
push
scas
lock
(bad)
mov
push
retf
sbb
mov
xchg
jge
pop
xor
sti
mov
bound
sahf
inc
jno
push
addr16
pusha
xor
aad
dec
bound
in
loopne
xchg
addr16
xchg
push
js
push
mov
cmps
movs
hlt
(bad)
lock
dec
aam
xlat
fild
xor
fsubr
jb
cs
jp
push
inc
shl
mov
cmp
mov
call
(bad)
rcr
xlat
sub
jns
in
dec
xchg
pop
ficom
popf
ins
and
inc
das
loop
dec
add
js
retf
sbb
xor
in
imul
loopne
push
cdq
push
fistp
add
push
imul
(bad)
jle
xchg
mov
sbb
jmp
push
mov
adc
xchg
iret
add
enter
loopne
cmp
sbb
push
(bad)
lahf
push
push
mov
cwde
dec
sub
inc
ficom
jbe
pop
imul
test
fistp
test
ja
or
ret
inc
push
jns
inc
fsub
loop
dec
xchg
push
adc
and
sub
adc
(bad)
inc
enter
add
adc
aad
push
mov
call
jns
inc
pop
xchg
ds
shr
mov
shl
stos
mov
nop
inc
fild
into
arpl
dec
add
sub
mov
in
or
mov
add
popw
or
fisubr
or
and
dec
mov
out
fs
leave
mov
cwde
mov
aaa
mov
addr16
pushf
out
(bad)
inc
xchg
dec
stos
add
or
adc
jbe
add
int
aas
add
xchg
js
fucomip
leave
jg
cmp
jo
mov
and
dec
scas
mov
xchg
and
jle
add
mov
dec
aaa
mov
adc
mov
(bad)
test
mov
add
jle
pop
mov
inc
or
inc
and
stc
and
mov
sbb
mov
jge
dec
(bad)
fcmovnbe
mov
sahf
adc
and
leave
xor
mov
inc
bound
fcmovnb
loopne
arpl
xchg
or
mov
mov
in
and
sbb
dec
or
jne
add
inc
movs
adc
ret
aas
(bad)
lock
shl
add
loopne
xor
dec
push
sub
or
fcomi
push
inc
cwde
sbb
leave
push
and
(bad)
js
add
ins
loopne
mov
sbb
xor
mov
adc
test
mov
cmp
(bad)
mov
pop
div
jmp
sar
pop
popa
dec
dec
add
fbld
mov
call
adc
and
pop
and
sbb
mov
cmps
test
js
je
mov
add
cwde
and
pop
in
and
sbb
iret
or
mov
mov
adc
sub
int3
mov
scas
inc
icebp
das
out
out
and
(bad)
mov
pop
out
push
ret
mov
and
mov
cwde
leave
pop
jo
mov
shl
bnd
dec
mov
dec
mov
data16
or
jb
cmp
xchg
pop
retf
cmc
mov
test
test
ds
(bad)
imul
ja
dec
cli
jnp
cwde
mov
jmp
scas
(bad)
jb
clc
mov
leave
or
inc
sub
mov
rcl
daa
inc
cwde
call
test
addr16
fadd
xchg
push
lods
fcomp
shl
push
fnstenv
jge
mov
fwait
jns
adc
jecxz
(bad)
stc
test
push
and
xchg
adc
mov
jae
mov
and
clc
mov
int
inc
jnp
in
xor
outs
push
(bad)
rcr
inc
add
jbe
mov
mov
jo
test
repnz
push
out
mov
movs
shr
jle
retf
or
aam
push
cmp
fsubr
xchg
or
rcr
inc
ret
dec
and
push
xlat
xchg
in
(bad)
addr16
mov
rcl
jae
inc
sbb
stos
(bad)
add
loope
inc
and
shr
pushf
cmc
clc
push
outs
daa
xor
(bad)
je
fcomp
sbb
iret
fucom
fadd
aad
mov
jns
xchg
push
loope
mov
fstp
push
sbb
sti
pop
mov
aas
fsub
div
in
aad
fadd
sar
ret
(bad)
mov
xchg
cmp
mov
mov
fsub
sub
pop
iret
mov
and
fcom
or
push
cmps
stc
js
shr
gs
dec
ret
fcmovb
mov
fsub
or
fcomp
out
add
movs
xor
mov
cwde
out
mov
fmul
add
push
xchg
fdiv
push
aam
mov
adc
jae
shl
sub
xor
jno
mov
xchg
fyl2xp1
or
fisubr
inc
rcl
xchg
in
sub
adc
mov
(bad)
pop
inc
xchg
xchg
nop
dec
add
pop
pop
aas
fdiv
lods
test
xor
stc
dec
aad
pusha
add
in
or
ins
push
mov
rcr
test
outs
cmp
pop
dec
mov
fadd
push
mov
popa
test
fdivr
mov
clc
jp
cwde
cs
sbb
fsub
push
sbb
das
inc
cmp
cld
leave
fsubr
dec
aam
push
add
test
inc
pop
(bad)
mov
xchg
outs
imul
xlat
dec
add
add
dec
fs
jg
mov
cmp
jmp
ret
xchg
mov
sbb
xlat
fsub
stc
retf
mov
hlt
xor
mov
mov
or
dec
xor
clc
aam
push
mov
xor
push
dec
(bad)
aam
xor
gs
jmp
fcmovnu
pop
push
lock
popa
out
inc
leave
lds
jbe
enter
sub
pop
fcom
xor
fdivr
mov
sub
fdivr
add
fwait
add
or
adc
adc
mov
outs
fcom
call
lds
cwde
cmp
push
int3
stos
fadd
test
hlt
ret
mov
ret
push
pushf
fs
xchg
fsubr
and
mov
das
sbb
push
fsub
xlat
sub
xor
sahf
jno
cmps
sbb
imul
(bad)
ja
push
xchg
mov
cmp
shl
cld
aad
fdivr
cmp
xor
jns
pop
xor
hlt
sub
retf
test
mov
add
fild
sub
xor
outs
mov
xor
aaa
fdivr
mov
or
pop
mov
test
ret
add
movs
lahf
or
sbb
add
dec
fdiv
xchg
call
mov
cmp
cmc
inc
fistp
cwde
xchg
int3
(bad)
mov
pop
fcom
xor
fstp
or
stos
clc
in
pop
sbb
fld
jl
or
mov
loopne
fdiv
retf
(bad)
dec
inc
sbb
ss
adc
mov
mov
sub
cmp
and
fcom
inc
sub
inc
cmp
mov
add
repz
imul
arpl
sub
cmp
enter
sbb
rcl
pop
sbb
aas
dec
in
movs
pop
fstp
cwde
call
in
rcl
xor
aas
comiss
push
sbb
xor
test
cmp
cdq
mov
addr16
sub
(bad)
inc
test
sbb
cld
xchg
fdiv
add
leave
cmps
push
mov
mov
mov
(bad)
xchg
mov
push
xlat
outs
enter
mov
icebp
inc
retf
lods
rol
inc
dec
mov
jmp
dec
sbb
aas
rep
mov
pop
jge
or
addr16
xchg
jp
or
add
test
inc
jbe
dec
sti
jno
test
mov
push
inc
xchg
dec
imul
sub
xchg
or
dec
int3
push
cmp
jno
ss
test
add
cmp
in
xchg
and
or
add
cmp
inc
sub
mov
mov
fnstenv
cmp
cmc
cmp
jmp
push
fadd
and
pop
xlat
push
js
mov
push
push
stc
adc
sub
or
adc
ret
xlat
jmp
and
mov
adc
call
fild
mov
adc
inc
mov
sti
ja
dec
mov
sbb
cmp
mov
jmp
mov
pop
imul
sub
mov
pusha
(bad)
retf
push
mov
jecxz
and
invd
adc
pop
jne
loopne
push
jg
enter
adc
mov
cmp
pop
adc
or
int
lods
push
frstor
dec
js
bound
fcomp
xchg
enter
(bad)
out
fild
(bad)
push
int
outs
fwait
jne
icebp
add
inc
test
mov
mov
div
out
jns
sbb
popa
dec
xor
pusha
mov
mov
and
jg
dec
fidivr
loopne
ins
cmp
fbld
pusha
add
lods
mov
retf
or
cmp
sub
sar
inc
mov
xchg
pop
jo
fwait
mov
into
call
fistp
loop
dec
sahf
inc
ror
jle
or
(bad)
das
or
fnstcw
outs
shl
xchg
sbb
jno
clc
popf
mov
fs
xchg
dec
ja
cmc
aad
in
js
or
dec
arpl
or
xchg
xchg
jbe
sub
sub
adc
fidiv
lahf
xchg
jmp
push
imul
add
(bad)
(bad)
xchg
dec
or
mov
xchg
stc
mov
stos
fmul
dec
and
aaa
and
push
cmp
pusha
gs
mov
rcr
fist
or
leave
scas
cwde
mov
fdiv
inc
push
jae
cdq
jl
pop
es
cmp
mov
mov
js
loopne
mov
add
inc
call
inc
add
and
xor
movs
fld
daa
and
xor
adc
pusha
aad
ror
jmp
jns
cdq
scas
test
xor
call
mov
fistp
xor
jo
lock
jns
jo
sub
dec
cld
jmp
mov
fwait
clc
jmp
and
ror
pop
and
xor
cmp
xor
sti
mov
fsubr
pmulhw
xchg
mov
inc
sti
or
ja
adc
jae
aaa
retf
and
inc
xor
fbstp
out
les
mov
xchg
es
mov
and
xchg
xchg
daa
rcl
and
and
dec
cld
hlt
mov
fsubr
sbb
mov
mov
ret
push
enter
jne
or
sbb
aaa
mov
inc
mov
out
push
pusha
fdiv
aam
aas
enter
and
mov
int3
je
mov
ss
loopne
pop
jl
ret
xchg
pop
jno
pop
or
icebp
stc
outs
mov
ror
(bad)
jne
test
fidivr
scas
aas
not
pop
sbb
into
(bad)
cmp
xchg
fisubr
mov
or
(bad)
(bad)
retf
scas
outs
dec
xchg
sub
int
cmp
fnstcw
pop
into
dec
les
add
or
mov
call
(bad)
cli
add
jne
out
sbb
fbld
movs
(bad)
sbb
sub
loopne
pushf
or
inc
pop
or
mov
mov
inc
paddusb
sbb
push
or
ins
or
je
cmps
jb
addr16
(bad)
iret
pushf
push
ja
jl
fldcw
adc
xchg
push
xchg
jb
rcl
mov
jo
cs
or
jbe
mov
sbb
inc
rcl
jb
mov
(bad)
xor
xor
test
inc
js
sbb
dec
jns
xchg
fmul
dec
jp
scas
sbb
out
leave
out
aas
out
or
gs
push
call
mov
loop
rcr
pop
cmp
nop
mov
jno
xchg
sbb
nop
fsubrp
aaa
lock
out
sub
sbb
rol
cmp
inc
add
fsubr
push
push
inc
jl
xstore-rng
cmps
add
push
mov
aam
jge
lods
sbb
or
hlt
in
stc
ds
aas
cld
push
es
inc
nop
adc
jns
jo
mov
fs
jns
test
jo
xor
push
and
xor
std
fnstcw
xchg
pop
loopne
pop
lahf
ficomp
fiadd
mov
fsub
loop
aad
and
aaa
shl
jmp
in
jmp
sub
jnp
xor
scas
arpl
pop
xchg
mov
repnz
cwde
xor
ret
adc
sbb
pop
mov
push
push
add
fild
cs
add
les
push
jecxz
into
loopne
cwde
cs
adc
jnp
pop
fbstp
push
cmp
pop
dec
(bad)
fist
and
jo
sub
xor
inc
mov
in
loop
mov
inc
xor
int
(bad)
cmp
cmp
cs
inc
dec
fild
cmp
adc
jge
inc
call
sbb
icebp
out
jl
inc
push
xor
dec
jmp
nop
lahf
rcl
into
add
ins
xchg
add
adc
cmp
neg
fild
dec
and
xor
mov
retf
ficomp
and
popa
push
js
pop
fucomip
mov
mov
dec
repnz
sbb
jae
adc
xlat
ror
push
or
xor
dec
iret
jae
dec
jo
dec
test
jecxz
daa
aas
sub
leave
pop
loop
pushf
add
cmp
ror
fisub
imul
(bad)
sti
adc
shl
sti
not
(bad)
mov
(bad)
xchg
cmp
fild
mov
pushf
adc
xor
adc
test
fcomp
xor
cs
or
push
mov
fistp
push
mov
mov
jns
leave
or
mov
(bad)
jmp
jns
sahf
pop
mov
inc
mov
dec
mov
pop
xchg
mov
scas
push
jo
(bad)
lea
pop
sti
rcl
retf
xor
cmp
std
jge
enter
in
test
sbb
mov
mov
test
mov
add
cmps
mov
pop
inc
cmp
or
inc
call
cmps
fdivr
pop
fwait
les
std
repnz
mov
sub
mov
scas
pop
mov
shr
outs
dec
loopne
and
aad
lahf
aad
loopne
(bad)
(bad)
stos
add
leave
push
and
fdivr
sbb
push
cwde
fistp
outs
aad
shl
fistp
inc
dec
ffreep
fiadd
pusha
lds
cld
mov
call
push
adc
or
ds
xor
xor
xchg
or
sbb
das
or
pop
mov
test
mov
lock
dec
xchg
mov
adc
lock
cs
pop
sub
(bad)
xchg
loopne
retf
mov
mov
mov
fbstp
inc
loopne
jbe
out
dec
xchg
fcomp
xor
loopne
lds
push
adc
je
dec
or
jns
out
mov
into
sub
dec
cmps
daa
pop
std
mov
into
fimul
push
je
sbb
cmps
add
fidivr
push
rcl
dec
hlt
or
xchg
push
lds
in
outs
loopne
jae
or
les
mov
shr
outs
lods
xchg
inc
fld
dec
lds
fnstcw
pop
call
loopne
and
lahf
add
test
and
in
fsubr
add
stos
and
adc
les
imul
sbb
xor
sbb
add
pushf
push
fcomp
mov
(bad)
pop
int
call
pop
je
icebp
cs
mov
daa
sub
rcl
rcl
jb
and
sbb
retf
in
and
aam
fcomp
sbb
loope
adc
push
pop
mov
push
mov
sar
add
inc
sub
push
sub
cld
fsubr
mov
sbb
(bad)
retf
mov
int3
lea
fdivr
sbb
outs
mov
mov
retf
cld
out
fist
mov
retf
call
js
jecxz
call
mov
pop
xor
pop
popf
loope
jmp
mov
mov
push
or
xchg
shr
scas
outs
sbb
pop
jle
mov
mov
(bad)
push
iret
mov
test
dec
popa
and
pop
jbe
mov
add
cmp
fild
xchg
xor
jno
or
ret
mov
sub
fcomp
clc
fnsave
cld
pop
ret
inc
dec
fdivr
(bad)
push
cmp
and
pop
fdiv
mov
jmp
sbb
adc
inc
shl
mov
nop
fisttp
mov
(bad)
test
and
cmp
or
cmp
pop
out
mov
loopne
xor
fcom
into
or
mov
push
pop
push
lods
ins
mov
bound
leave
imul
std
hlt
fcom
retf
add
clc
lock
shl
mov
pop
jno
imul
cmp
push
fcom
xchg
jns
enter
fsub
(bad)
movs
dec
ficom
shl
pusha
mov
test
xor
pop
fsub
push
mov
mov
xchg
out
mov
mov
nop
pop
fisub
mov
rcr
ret
mov
fcmovnb
mov
inc
xor
cwde
mov
push
ss
(bad)
test
mov
xor
sub
sub
loopne
pusha
mov
fist
outs
aam
pop
les
popa
jp
dec
sub
mov
(bad)
loopne
adc
jno
or
fwait
cli
sub
xor
test
mov
pop
pushf
outs
repz
hlt
mov
jbe
ret
jge
cmp
jbe
mov
int
adc
push
adc
and
das
test
jmp
sub
add
loopne
loopne
outs
xor
sub
call
and
shl
jg
pop
jecxz
fidivr
repnz
out
jl
adc
in
pop
aas
cmps
mov
and
xchg
andnps
(bad)
push
std
pop
add
loopne
aaa
cmps
xchg
dec
jg
fist
out
mul
sbb
enter
pop
ret
les
iret
or
add
jno
dec
lds
lock
cmp
rol
pop
pop
mov
out
dec
imul
lea
call
push
(bad)
rol
xchg
sbb
push
pop
ret
mov
int
pop
pop
or
and
xchg
fild
fidiv
add
or
scas
jb
dec
out
in
push
stos
in
std
movs
add
mov
scas
dec
ret
cmp
xor
stos
repz
iret
pop
sahf
jmp
ror
mov
adc
pop
push
lock
sub
cmp
cmp
mov
inc
rol
and
scas
fidivr
shr
ret
xor
inc
or
xchg
outs
dec
dec
pushf
mov
movs
and
sub
cmps
ins
push
fidivr
inc
xchg
cli
jp
sub
call
fild
iret
push
xor
sub
cli
mov
push
aas
rcr
mov
xlat
bound
mov
or
or
fiadd
mov
push
adc
in
or
xchg
lahf
adc
int
call
pushf
aam
sti
gs
xor
xor
pop
retf
fist
dec
popf
jge
push
jbe
jo
out
pop
mov
icebp
scas
(bad)
(bad)
cs
pop
call
movs
ror
jl
enter
push
xchg
jmp
hlt
push
and
xchg
cmp
sbb
inc
adc
add
loopne
pop
cmp
sbb
add
jb
dec
shl
or
lahf
cmps
dec
cmps
and
sbb
call
aaa
and
(bad)
sti
dec
pop
fsub
(bad)
sar
pop
adc
mov
cmp
dec
test
pop
ds
fmul
pop
movs
mov
in
adc
jne
cli
fnstcw
nop
(bad)
jecxz
pop
loopne
dec
hlt
jmp
push
loop
pop
sub
into
mov
and
dec
sub
or
and
add
add
pop
push
cmp
scas
xchg
and
add
mov
loopne
call
or
mov
push
or
cmp
iret
(bad)
mov
jmp
xchg
scas
gs
push
mov
imul
inc
mov
loopne
in
mov
jns
and
jnp
mov
push
(bad)
ss
sub
(bad)
call
in
dec
fist
fsub
or
fbld
outs
fs
mov
or
pop
loopne
imul
inc
push
or
ins
pop
pusha
fistp
push
xor
shr
mov
jo
fst
xchg
and
sbb
inc
mov
(bad)
ja
(bad)
xor
mov
mov
mov
and
repz
cmp
out
sbb
xchg
and
leave
pop
lods
iret
mov
leave
xchg
mov
xchg
sub
cmp
xor
or
loop
pop
sahf
hlt
pop
gs
fdiv
push
push
dec
dec
test
aad
inc
(bad)
ss
fisub
aam
lock
sub
pop
jb
inc
stc
pop
repnz
fsub
in
xchg
xor
fcomp
ds
rcr
clc
dec
js
mov
enter
stos
or
leave
fcom
jne
psubusb
xlat
movs
push
pop
(bad)
fiadd
jno
adc
fdivr
mov
outs
fadd
test
or
fdiv
mov
pushf
pop
arpl
neg
aam
mov
jo
pop
jl
adc
lods
fisttp
jecxz
lock
mov
xor
jp
pop
sbb
fcomp
jbe
loope
loop
fdiv
xchg
xchg
cmps
cmp
xchg
or
mov
sti
cmp
rol
into
jae
jmp
icebp
test
fdiv
enter
jo
fcom
pop
xchg
lds
adc
pop
shl
cli
xlat
int
ins
(bad)
stc
in
mov
(bad)
fdivr
fneni(8087
out
sbb
dec
out
sub
xchg
fcom
mov
imul
jnp
rcr
aaa
in
dec
add
lea
ss
cmc
fcom
xchg
(bad)
fdivr
jbe
dec
imul
push
push
push
fnstsw
cdq
cwde
(bad)
stos
enter
or
lods
out
fcom
inc
and
dec
mov
mov
mov
xor
sbb
or
and
add
push
clc
arpl
aas
xor
enter
mov
scas
ja
in
xchg
iret
jno
jg
cmp
sbb
clc
jbe
and
leave
out
push
xchg
popf
dec
ficom
push
pusha
and
ffree
fstp
out
mov
mov
arpl
popf
adc
push
jecxz
fcomp
xor
sahf
sub
adc
push
or
dec
cs
fidiv
movs
adc
shl
xor
mov
mov
sbb
and
or
fld
retf
nop
adc
pop
(bad)
xor
mov
int3
icebp
das
pop
in
std
aam
mov
call
and
out
out
fsubr
jmp
inc
mov
mov
mov
fcom
xchg
mov
xor
and
push
dec
inc
sbb
pop
dec
out
jmp
stos
xlat
je
jnp
jg
jge
sub
push
xor
loope
adc
xchg
cmp
iret
jle
imul
pop
in
and
adc
adc
(bad)
test
xchg
or
scas
add
icebp
fdiv
sub
xor
fwait
adc
fdiv
fidivr
push
cld
fsubr
push
push
mov
call
pop
jecxz
movs
outs
jno
out
fdiv
pop
inc
xchg
jle
shl
pop
cmp
ins
fdivr
and
outs
(bad)
gs
popf
push
jns
adc
xlat
mov
(bad)
in
shl
aaa
fst
xor
test
xlat
js
pop
cdq
pop
inc
inc
mov
sbb
fdivr
hlt
ret
dec
daa
mov
ret
fadd
das
aas
stos
rol
jmp
fiadd
pop
mov
sar
in
shr
out
leave
jle
loopne
cmc
rcl
fdiv
fwait
mov
iret
out
xchg
mov
fsubr
ffreep
and
mov
lods
fsub
fwait
sar
rol
cmp
mov
sbb
nop
les
or
xchg
fnsave
bnd
loop
lock
mov
fidiv
xor
sti
or
xchg
es
jmp
add
movs
sbb
adc
fmul
mov
fcom
mov
ret
adc
fsub
inc
mov
nop
mov
mov
and
lahf
xor
cwde
or
addr16
fcom
not
ins
xchg
sbb
and
jo
fsubr
punpckhdq
movs
out
jnp
push
or
push
dec
ja
pop
fsubr
leave
pop
mov
(bad)
enter
movs
jb
fsubr
out
ret
jae
jg
pop
fucom
loop
outs
fxch
call
ja
pop
or
sbb
xchg
mov
sahf
sbb
add
repz
cmp
lock
sbb
loope
fmul
jmp
jae
test
rcr
adc
and
cmp
mov
mov
push
in
mov
shl
and
xchg
or
dec
mov
dec
aaa
dec
cmp
push
xchg
fdivr
shl
inc
push
out
arpl
jns
leave
in
mov
add
mov
xor
mov
jmp
push
fadd
mov
sar
pop
jno
aas
xchg
fdiv
bound
or
cmp
fsub
cmp
mov
pop
push
mov
pop
repz
mov
fcomp
and
in
and
jmp
mov
push
fdivr
out
not
and
adc
or
push
jmp
sub
ret
clc
pop
jns
movs
ffree
mov
cwde
jl
xchg
pop
adc
das
fadd
sub
adc
add
add
xchg
fsub
pop
mov
(bad)
fsub
in
out
push
cwde
jbe
ds
std
jb
cmp
icebp
add
or
sar
mov
xchg
out
pop
dec
sub
fcomp
fild
sbb
repz
in
push
or
fisttp
xchg
pushf
sub
mov
xchg
sbb
push
clc
push
push
hlt
fcomp
mov
fsub
mov
fadd
push
int
fdiv
cwde
push
mul
push
xchg
aam
fsub
out
mov
sbb
dec
cld
scas
adc
leave
cmp
test
fistp
xchg
movs
fcmovu
cmc
neg
repnz
push
or
mov
inc
pop
imul
mov
sbb
ror
arpl
ins
cmc
lock
xor
cwde
ja
mov
jecxz
adc
xchg
fsubr
pop
cmp
in
sub
rol
xchg
xchg
aam
dec
mov
mov
push
jg
adc
mov
iret
xor
mov
xor
push
imul
pop
cmp
add
test
inc
dec
add
jg
lahf
and
or
loop
lods
imul
fcom
or
fs
mov
jne
push
pop
test
adc
(bad)
pop
adc
das
mov
inc
popa
pop
imul
ja
fmul
retf
or
cmp
cs
jp
call
ds
xchg
mov
iret
lds
out
add
fadd
push
jl
xor
push
xor
lods
pop
fsubp
add
push
sub
dec
pop
jbe
jg
pushf
scas
jo
mov
ja
adc
mov
dec
mov
or
xchg
scas
push
or
fdiv
jno
rcr
and
cmp
xlat
(bad)
std
pop
(bad)
ins
sub
adc
fsubr
int3
sti
outs
scas
xor
push
loope
add
test
dec
in
shl
fcomp
fsubr
push
xor
fcomp
pop
push
mov
sub
clc
aas
push
push
or
outs
dec
in
jp
test
push
maskmovq
sub
stos
add
inc
adc
bound
cmp
jo
fadd
into
in
retf
mov
xchg
retf
(bad)
cmps
pop
cdq
(bad)
xor
push
inc
mov
cmp
fdivr
(bad)
rol
int3
inc
mov
add
push
sbb
sub
cmp
(bad)
aad
loop
pop
shl
pop
rcr
stos
mov
or
fdivr
push
or
hlt
test
fdiv
cs
jno
rcl
xlat
fnstcw
ss
pop
sar
out
lds
inc
popa
mov
fdivr
add
es
push
leave
add
lods
rcr
out
mov
fcom
(bad)
ds
fdivr
popf
and
fmul
xchg
pop
push
fnstsw
fst
fstp
sbb
mov
push
pop
pop
loop
scas
or
inc
cs
and
ja
fisttp
call
fmul
fisttp
cmp
mov
ja
mov
stos
pop
scas
dec
mov
sub
out
out
mov
retf
fadd
add
fadd
mov
cs
and
xchg
out
js
fsub
pop
jmp
mov
retf
jnp
in
(bad)
and
call
pop
xor
add
mov
inc
and
sub
cmp
out
scas
pop
jle
std
mov
(bad)
data16
jnp
mov
and
mov
inc
call
inc
jo
dec
cmp
dec
mov
daa
clc
push
jle
xor
outs
xchg
rcl
pop
mov
xlat
shl
pop
mov
in
js
pop
fsubr
jg
movs
adc
push
ret
jmp
neg
je
push
outs
leave
test
fdivr
mov
jno
mov
xlat
xchg
enter
inc
xor
nop
daa
fcomp
stc
je
fist
xor
outs
xor
dec
xchg
mov
xchg
jmp
xchg
push
dec
sbb
jno
add
sti
dec
lock
push
adc
jnp
das
jb
imul
out
and
or
mov
(bad)
fdiv
loope
ret
sub
add
xor
imul
sbb
fsubr
inc
fwait
fs
inc
(bad)
inc
and
jmp
cmova
call
jle
mov
fcom
xor
fwait
out
fsubr
loope
movs
lahf
mov
mov
sbb
dec
out
and
ds
ficom
xlat
inc
add
xchg
adc
fsubr
and
sar
cmp
fcmove
fsubr
scas
sbb
stos
imul
in
mov
inc
mov
int
ins
shl
inc
add
data16
fimul
jno
fucomi
fcmovne
lahf
(bad)
and
fcom
(bad)
lock
mov
loopne
and
or
adc
call
jecxz
out
repnz
movs
xchg
not
outs
cmp
pop
lods
cwde
es
xchg
adc
push
and
icebp
js
sti
out
xor
jg
mov
test
pop
stos
call
div
jo
loopne
icebp
cdq
pop
jp
inc
mov
adc
(bad)
clc
add
pop
lods
inc
inc
lahf
into
or
sub
pusha
lahf
into
icebp
and
mov
fdivr
mov
push
fiadd
inc
hlt
scas
pop
cwde
pop
fistp
cmc
loopne
inc
and
push
xlat
iret
or
push
aas
in
jae
test
or
xchg
pop
les
fsubr
repnz
jp
(bad)
rol
int
jle
cmp
sbb
pop
cmps
retf
jg
cmp
scas
push
iret
popf
push
inc
fcom
sub
scas
xchg
(bad)
sub
cmp
adc
repnz
xchg
fnop
ret
sbb
sub
jl
aam
cwde
pusha
pop
pop
mov
retf
fidivr
push
fistp
dec
pushf
les
xchg
xor
std
adc
inc
pop
pop
sub
nop
leave
cmp
xchg
gs
inc
or
push
cmp
fsubr
inc
lds
adc
push
fsubr
ror
icebp
sub
cmp
and
sbb
lahf
icebp
push
mov
mov
xchg
xchg
bound
(bad)
js
stos
mov
sbb
shl
dec
into
lea
xlat
mov
xchg
(bad)
inc
jle
push
add
mov
bound
add
int3
xchg
fwait
dec
outs
call
xor
inc
(bad)
cmp
xor
xchg
ins
leave
dec
ds
jbe
push
and
dec
(bad)
in
push
rol
rcr
push
fisubr
rol
mov
inc
cmp
push
push
movs
pop
pop
sub
enter
fcmovnbe
icebp
lods
out
cmp
retf
enter
push
pusha
pop
mov
in
loopne
jns
scas
jo
or
push
fcomp
loopne
daa
jg
pushf
or
push
movs
ins
dec
dec
sbb
sub
lds
call
enter
and
cmc
out
ret
in
test
call
aas
aaa
xchg
pop
inc
inc
sbb
adc
nop
jnp
lock
fisttp
fdiv
inc
adc
xor
push
push
pop
jmp
cmp
and
xchg
mov
mov
int3
cld
mov
stos
cld
(bad)
pusha
add
inc
mov
into
aaa
mov
nop
je
leave
inc
xchg
scas
mov
lea
shl
stos
jl
fstp
movs
push
pushf
loopne
aad
imul
cmc
or
outs
mov
adc
rol
aam
add
xchg
sbb
in
jmp
aaa
aam
fwait
rcr
or
arpl
aaa
in
xchg
shl
inc
push
dec
scas
ss
xchg
add
cmp
cmp
cld
int3
js
popf
inc
push
or
cmp
fwait
xchg
jmp
xlat
sub
jg
pop
sub
jno
scas
push
cmp
and
loopne
pop
scas
popf
dec
and
mov
inc
inc
call
mov
push
scas
lods
cbw
add
int3
cdq
push
ret
jae
push
adc
scas
push
sub
fcomp
es
xor
pop
cdq
div
adc
cmp
jo
outs
jb
push
retf
xchg
(bad)
push
inc
cmp
inc
sbb
xchg
imul
mov
cmc
(bad)
cli
push
imul
clc
sbb
or
mov
pop
and
in
pop
push
push
mov
std
xor
aam
inc
and
xchg
loopne
(bad)
mov
lea
fxch
outs
(bad)
(bad)
push
aam
add
into
js
jcxz
fwait
movs
cmp
and
stos
push
ja
dec
mov
ror
popa
mov
(bad)
pop
or
loope
push
or
xor
xor
out
(bad)
dec
cmp
fcomi
cmp
jns
push
loopne
pusha
inc
fwait
hlt
sbb
jno
lods
outs
sub
ja
or
test
sub
(bad)
dec
mov
in
dec
sahf
push
or
add
aam
add
int3
loopne
pop
div
cmps
inc
cld
pop
loop
push
jo
mov
xchg
xor
add
dec
test
outs
sahf
mov
ror
sbb
sahf
push
push
in
adc
fnstcw
fnsave
test
sub
lods
ss
push
xchg
pop
inc
sub
add
mov
ret
into
adc
ror
inc
repz
xor
loope
sbb
cmc
jle
daa
xlat
vmovntps
sbb
test
sub
jno
das
sbb
mov
pop
cmp
aas
lock
push
push
je
and
inc
rcr
mov
arpl
jmp
dec
xlat
imul
mov
mov
inc
loopne
ss
dec
sub
int
jg
xor
ret
sub
shl
push
ds
push
repnz
ds
in
pop
push
rol
dec
movs
jle
sub
lods
xor
neg
shl
push
shr
dec
movs
dec
cmps
inc
aas
xor
inc
pop
lahf
mov
enter
pusha
(bad)
xrelease
push
push
jae
inc
pop
test
cmc
fdiv
lea
add
cwde
xchg
mov
cmp
ja
mov
mov
mov
call
xlat
nop
xchg
sbb
ret
mul
pop
jae
cwde
arpl
xchg
jae
mov
loopne
jo
mov
or
fnstsw
xor
test
pop
out
jecxz
repz
mov
mov
dec
rcr
add
aaa
or
clc
jl
sbb
add
push
dec
in
je
add
into
push
push
add
xor
sbb
leave
dec
cwde
dec
pop
stc
int3
inc
stos
rcl
cmp
imul
or
xor
stos
xchg
lock
jb
cmps
and
pop
jbe
dec
fisub
dec
xchg
pop
icebp
leave
dec
sbb
xor
mov
or
dec
(bad)
jp
icebp
mov
sbb
mov
fdiv
push
pop
inc
ret
dec
loopne
sbb
pop
xchg
sbb
xchg
arpl
les
and
cld
lods
xor
adc
outs
shl
xor
xor
sbb
les
xchg
push
das
jp
xchg
sbb
cmp
pop
loopne
push
dec
push
in
mov
xor
pusha
or
push
(bad)
and
mov
fnsave
dec
repz
loopne
es
movs
sub
pop
and
adc
fistp
scas
jo
push
icebp
xor
mov
inc
outs
pop
xchg
in
cmps
ror
fisttp
push
ins
mov
mov
imul
dec
sbb
ja
jb
and
rcr
push
out
pop
rcl
xor
(bad)
rcr
jo
stc
rcr
mov
cmp
mov
mov
out
adc
lds
jb
xchg
aas
jp
inc
jb
stos
mov
loopne
pushf
out
mov
mov
push
or
push
mov
imul
or
or
lods
bound
(bad)
bound
loopne
out
nop
jmp
pushf
mov
add
add
lds
mov
cmp
mov
stos
int
gs
sahf
fbstp
je
in
dec
xchg
je
enter
push
dec
les
ret
retf
loope
cmp
cmp
addr16
xor
adc
cmp
pop
in
dec
into
jb
ret
dec
iret
or
mov
inc
dec
movs
jnp
movs
js
mov
test
imul
xchg
push
ds
pusha
cwde
xor
ins
add
mov
pop
(bad)
cdq
mov
and
inc
inc
cdq
mov
mov
mov
sub
repz
and
(bad)
mov
cmp
loopne
push
gs
cmp
push
hlt
xchg
jle
dec
push
mov
cmp
mov
repz
push
xor
adc
les
rcr
sub
fld
test
mov
mov
push
fistp
(bad)
fwait
outs
jg
mov
dec
fdiv
lods
inc
push
xlat
ror
cdq
sub
pushf
inc
or
inc
xor
in
int
es
mov
les
or
sahf
and
push
mov
icebp
xchg
je
lods
fdiv
jp
inc
lds
mov
mov
scas
add
int3
loopne
imul
mov
mov
jg
xor
jno
dec
in
pushf
sbb
rcl
sbb
cmps
xchg
stc
cs
or
cmc
ror
xchg
neg
mov
dec
int
push
cmps
cmp
mov
leave
or
xor
fidiv
leave
sbb
pusha
push
inc
jp
jbe
shr
xchg
and
loop
and
mov
outs
mov
or
mov
sub
clc
sub
call
dec
xchg
jmp
jecxz
daa
cwde
sbb
or
iret
add
retf
inc
outs
xchg
jne
push
fcomp
ficom
sub
leave
xchg
add
mov
test
jns
(bad)
ror
add
addr16
push
lods
lods
add
pop
dec
cli
mov
std
lds
pop
(bad)
mov
dec
adc
and
loope
mov
mov
test
cmc
mov
rcr
dec
imul
sub
lods
dec
mov
fild
or
loope
pop
jo
cmps
test
xchg
imul
xor
dec
push
je
sub
cs
push
call
jne
inc
int
aad
jns
pusha
in
lds
stc
mov
pop
ins
fcom
aaa
lahf
mov
mov
rcr
test
cmp
dec
in
inc
push
outs
(bad)
fsubr
int3
daa
push
fidiv
fdivr
xchg
and
jle
cmp
cmovb
das
push
lahf
into
or
shl
xchg
add
test
cld
add
push
sub
call
add
xchg
lock
lahf
xor
(bad)
dec
or
push
inc
dec
test
fild
fistp
jns
into
and
dec
pop
mov
push
push
pop
push
fdivr
retf
loop
fisttp
loopne
aas
cwde
fidiv
dec
sub
out
mov
iret
aas
add
jo
ja
adc
fsubrp
fs
xchg
stos
daa
mov
popa
mov
inc
mov
adc
pop
or
inc
into
jo
xchg
mov
fbstp
scas
fcomp
pop
push
jo
(bad)
popf
cmp
(bad)
xchg
lds
ficomp
lods
pop
mov
and
(bad)
pop
push
xchg
in
sub
retf
je
or
js
mov
mov
push
std
jo
sub
xchg
cmp
pop
test
sbb
movs
pop
jle
sbb
popf
mov
mov
xor
inc
mov
outs
ja
(bad)
je
(bad)
pop
jb
sbb
or
rol
ja
or
movs
push
and
dec
cdq
dec
mov
repnz
add
xchg
sub
jmp
dec
(bad)
jne
sbb
lahf
cdq
cld
test
rcl
pop
xchg
sbb
jecxz
mov
mov
pusha
sar
inc
ret
xchg
bound
in
into
push
or
test
cwde
out
mov
movs
dec
add
mov
leave
inc
add
fwait
test
jmp
shl
out
jp
or
int
out
rcl
cmps
or
pop
lock
nop
movs
push
and
imul
sub
bound
xor
pusha
add
lahf
cli
jmp
push
rcr
mov
dec
jae
sbb
or
or
pusha
cmp
mul
or
mov
push
(bad)
mov
outs
jb
mov
or
lods
call
dec
mov
mov
mov
scas
call
dec
add
xor
fs
pusha
lds
xor
sbb
pop
xchg
xor
bound
fld
jne
cmp
jle
stos
pop
pop
mov
jae
push
add
(bad)
(bad)
iret
test
pop
xchg
into
arpl
lahf
in
sub
dec
data16
pusha
xlat
call
sub
into
jno
stos
ins
push
dec
lahf
int3
push
popf
or
xchg
loope
loopne
xor
(bad)
fisttp
dec
mov
test
push
cmp
ja
lods
fistp
inc
adc
mov
out
cmp
sub
xchg
outs
ret
in
jmp
ror
in
sub
pushf
mov
(bad)
mov
out
cmp
jo
lods
daa
and
popf
out
outs
push
rcl
loopne
arpl
jp
push
and
mov
inc
inc
mov
adc
xchg
aas
(bad)
mov
test
movs
mov
lods
fcom
xchg
or
int
arpl
adc
add
xchg
xchg
mov
sbb
mov
inc
ins
test
mov
inc
(bad)
loopne
loopne
push
ss
dec
mov
mov
icebp
xor
arpl
and
das
lds
(bad)
inc
cs
stos
mov
fsub
ds
fsubr
int3
call
ret
into
stos
mov
(bad)
or
mov
stc
nop
mov
fdiv
mov
sbb
pushf
fcomp
mov
fsubr
out
jmp
or
lock
(bad)
int
mov
pop
fsub
mov
retf
(bad)
fadd
xchg
dec
inc
jns
cli
ret
sbb
pop
frstor
mov
sbb
fdivr
cmps
jns
stos
mov
ss
inc
call
pop
push
addr16
jno
push
mov
mov
xchg
fist
shl
or
jge
fdiv
jp
sbb
adc
mov
fisttp
or
(bad)
pop
lods
in
shl
xchg
das
fadd
test
pop
(bad)
(bad)
mov
ins
fsub
sbb
aas
aaa
xor
loop
add
sahf
daa
sbb
push
jg
cmp
dec
arpl
fsub
je
and
mov
adc
ds
xor
outs
loope
je
push
fadd
fist
push
adc
sub
mov
stc
(bad)
stos
cmc
add
xchg
js
xor
ins
not
pop
ficom
stc
mov
mov
jg
dec
mov
dec
leave
mov
jmp
fdiv
cmps
push
add
push
ins
xor
mov
or
mov
fdiv
mov
outs
push
bound
jle
mov
fdiv
pop
aad
test
(bad)
loop
xor
mov
push
(bad)
fsubr
push
loop
leave
hlt
add
retf
nop
into
push
lahf
fmul
rcl
dec
sbb
es
jae
mov
imul
dec
mov
cdq
push
leave
add
sbb
movs
pop
loop
rcr
retf
jno
lock
cmp
adc
ds
jge
dec
(bad)
adc
sbb
mov
cmp
fsubr
inc
mov
stc
bound
out
test
inc
pop
inc
pop
fdiv
idiv
cmps
jp
push
stos
push
xchg
jbe
fistp
or
out
inc
fmul
fbld
dec
sbb
lea
in
pop
test
fcom
iret
pusha
and
push
fimul
call
das
cwde
cwde
ins
retf
cmps
jmp
nop
out
or
test
cli
fdivr
outs
mov
push
movs
sub
fsubr
jne
xor
arpl
in
cmp
push
ins
mov
adc
sub
fsubr
stc
sub
jmp
aaa
nop
push
push
xchg
adc
jmp
fisttp
sub
fsubr
cmps
jne
mov
push
add
or
add
mov
ror
sub
fstp
push
sub
cmp
pusha
mov
adc
fdivr
xor
scas
fdiv
mov
xchg
push
mov
jmp
imul
xchg
repz
jge
stc
cmp
hlt
add
fisttp
ins
pusha
mov
popf
fidivr
out
mov
ror
adc
cwde
frstor
push
retf
mov
data16
mov
fs
pop
fdivr
(bad)
out
mov
jmp
ror
or
mov
inc
sub
push
dec
sbb
mov
enter
and
dec
js
es
push
sub
inc
jle
push
mov
cwde
(bad)
out
pop
ss
fdiv
movs
push
fsub
pop
or
xchg
mov
fldenv
or
sbb
dec
(bad)
fdiv
cmps
test
retf
and
loopne
sbb
fdivr
mov
inc
xor
push
and
or
xchg
shl
(bad)
enter
and
adc
dec
pusha
fdiv
inc
retf
jecxz
jo
mov
scas
outs
pop
test
fs
xchg
jno
fdivr
jmp
fcom
aam
mov
pop
jae
push
mov
and
mov
arpl
cmc
xlat
jno
ror
xor
xchg
ficomp
xchg
cmp
sbb
fwait
xlat
xor
cmps
xor
aas
and
mov
mov
test
lds
test
sbb
mov
test
fadd
mov
mov
push
pop
push
loope
fmul
xor
cld
and
inc
add
cld
push
jne
fcom
jecxz
and
add
fcom
cdq
(bad)
ins
ja
jmp
addr16
or
dec
out
clc
cmc
sub
mov
rol
jno
paddsb
ja
or
push
cmps
mov
mov
cmp
fild
out
xlat
push
ret
in
mov
cwde
retf
inc
adc
test
mov
push
push
out
pop
fcom
xchg
fcomp
pop
call
sar
push
(bad)
es
iret
jmp
fmul
loopne
fcmovbe
jo
ins
lds
inc
shl
dec
adc
push
pop
fsub
dec
and
add
bound
cmps
fisub
jno
inc
call
out
mov
fsub
retf
pop
and
dec
xchg
push
mov
repnz
clc
cdq
dec
pop
fmul
(bad)
jno
xchg
jge
daa
shl
scas
clc
cmps
inc
jae
fsub
mov
fmul
xchg
xchg
pop
sbb
aaa
test
mov
rol
cwde
fst
sub
(bad)
mov
fdivr
call
xchg
shl
aad
sub
data16
xlat
retf
ret
push
sub
sti
fadd
ja
dec
fadd
lods
and
jg
jae
push
bound
dec
pop
sbb
outs
mov
mov
sub
rcr
and
and
int
pusha
in
fidivr
pop
fisub
iret
cwde
out
daa
dec
fcomp
xchg
sar
test
sbb
mov
jmp
mov
stos
outs
enter
les
stos
xchg
xchg
add
mov
adc
ins
movs
push
push
xor
push
inc
js
loopne
fst
fdiv
and
mov
in
mov
jp
fmul
lahf
and
pushf
fldcw
push
cld
fadd
iret
(bad)
pop
jbe
fdivr
lahf
dec
add
loope
lock
loop
sub
pop
mov
sbb
fdiv
sbb
fdiv
mov
fcom
xor
test
in
gs
(bad)
or
and
xor
outs
xor
leave
add
ret
movs
sbb
mov
mov
jg
inc
std
fisub
fsub
mov
cmps
inc
lds
(bad)
(bad)
retf
xchg
sub
xchg
push
dec
outs
popa
xchg
in
test
fcomp
mov
clc
rcr
mov
xchg
(bad)
dec
fdivr
mov
test
mov
jne
mov
mov
ins
sbb
jle
pop
jmp
stos
add
sub
int3
and
aas
mov
sbb
cs
rol
outs
leave
sub
cmp
inc
cwde
daa
xor
lods
pop
lods
(bad)
push
pusha
add
fdiv
repnz
cmp
fsub
jmp
and
stos
xor
into
imul
nop
cdq
push
jecxz
push
fnstsw
pop
aaa
hlt
push
in
cmp
push
ins
xlat
sbb
cwde
in
retf
rol
(bad)
(bad)
clc
mov
arpl
xchg
fcomp
cmp
mov
mov
push
mov
jno
inc
pop
test
js
push
push
cmp
addps
cmc
and
fdiv
rol
cld
call
push
(bad)
pop
(bad)
fadd
inc
fsub
dec
mov
mov
push
pop
push
pop
jnp
(bad)
jne
pop
cmps
test
sbb
sbb
push
es
xlat
fidivr
fcom
rcr
daa
loop
fnsave
sbb
outs
shr
and
cmovs
sub
retf
sbb
lods
mov
(bad)
sub
cld
fcom
dec
pushf
push
xlat
adc
loopne
mov
stos
into
lds
enter
rol
dec
rcl
jle
cdq
hlt
jo
retf
mov
sahf
xchg
cmp
loopne
and
mov
lahf
mov
xor
sub
xchg
dec
push
popa
xor
in
sbb
add
inc
ins
cmps
pop
mov
or
aad
loope
add
xchg
mov
mov
fsub
xchg
int
repnz
out
mov
push
add
jp
mov
fild
fidiv
or
test
push
test
jb
xlat
or
call
mov
fdiv
std
adc
mov
iret
xchg
sbb
(bad)
fcomp
inc
or
xor
fsubr
loopne
xor
push
sub
jns
jnp
mov
imul
fdiv
shl
jno
dec
sub
push
leave
mov
adc
movs
stos
js
(bad)
gs
lods
lock
xor
addr16
adc
sub
pop
shl
and
xor
mov
dec
pop
xor
dec
adc
fwait
ret
rol
sar
retf
jne
repz
push
jg
mov
rol
cwde
adc
or
ins
(bad)
ins
stos
mov
(bad)
dec
add
xchg
ss
xor
xor
stc
cmp
jne
pushf
les
lahf
loopne
jp
mov
or
pop
push
cdq
ret
enter
push
pop
retf
out
stos
(bad)
(bad)
scas
fwait
jp
mov
xor
xor
pop
mov
aaa
sbb
inc
(bad)
xor
jmp
in
outs
jbe
aaa
dec
test
mov
jl
inc
or
and
dec
loopne
std
and
jle
retf
movs
sahf
jecxz
data16
int3
xchg
mov
push
loopne
aas
fld
dec
enter
adc
mov
cwde
push
js
nop
sub
fadd
push
repz
inc
mov
cmp
js
dec
fild
fwait
leave
pop
and
xchg
mov
jg
(bad)
rcl
pop
in
out
jecxz
and
sbb
scas
xor
push
aad
pop
dec
loopne
inc
call
out
cs
add
(bad)
pop
add
jl
sbb
es
sub
cmp
mov
loopne
out
dec
sub
ret
or
pop
dec
push
cdq
mov
in
mov
test
inc
call
xor
shl
ret
ja
enter
fisub
adc
repnz
pop
popf
je
mov
test
test
push
push
add
xchg
mov
call
ins
jae
outs
mov
xchg
loopne
ja
rcl
jns
mul
(bad)
pop
push
inc
retf
lea
fdiv
sub
stos
sub
ret
jnp
xchg
int3
out
cmp
js
mov
mov
dec
test
outs
or
loope
push
mov
imul
xchg
pusha
nop
js
daa
jg
add
data16
sub
test
sbb
iret
adc
lods
stos
push
div
pusha
xchg
fsubp
add
sbb
inc
inc
push
int
jmp
sti
adc
out
(bad)
enter
xor
jbe
fisttp
mov
test
fistp
mov
or
pushf
or
add
call
pop
test
jbe
shl
mov
mov
stos
adc
push
sbb
js
fistp
cmp
aam
out
fimul
loopne
int3
pusha
sahf
push
sub
adc
(bad)
out
scas
or
(bad)
or
out
adc
mov
ds
outs
mov
addr16
(bad)
clc
stc
pusha
or
push
call
fistp
mov
out
enter
jns
or
(bad)
(bad)
pop
mov
ss
stos
sbb
jbe
cli
das
movs
data16
loopne
addr16
pop
mov
xchg
mov
mov
mov
loopne
loopne
js
pusha
jns
movs
into
sub
clc
(bad)
gs
pusha
(bad)
ficom
add
outs
fmul
or
mov
retf
jg
pop
xor
sbb
inc
push
call
clc
loopne
imul
int
inc
fwait
cdq
pop
aas
xor
jmp
scas
pop
sub
adc
cmp
ins
pushf
int3
mov
mov
ins
test
aas
clc
mov
imul
fwait
pop
push
es
in
pop
in
(bad)
sbb
cmp
movs
in
push
iret
in
jge
cmp
inc
lods
fwait
test
xchg
(bad)
lock
pop
or
sbb
mov
das
lock
rcr
and
daa
rcr
enter
push
inc
(bad)
cmp
nop
(bad)
mov
out
add
dec
inc
mov
test
and
mov
sub
pop
lahf
jp
mov
repnz
loop
inc
adc
cmp
pop
dec
retf
ret
out
add
jo
pushf
cmp
mov
neg
mov
or
mov
jb
aas
popf
mov
xor
lahf
adc
push
addr16
sub
mov
dec
repz
cmp
cmp
dec
inc
inc
jno
sub
es
stos
sbb
mov
inc
out
aad
mov
js
sahf
xlat
xlat
dec
pusha
jmp
(bad)
sti
mov
fistp
push
mov
fadd
enter
sar
rol
idiv
aam
inc
sub
ja
scas
or
out
inc
out
js
mov
stos
repnz
or
sahf
pop
jl
add
(bad)
fistp
jmp
jle
das
push
sbb
jne
push
(bad)
pop
xchg
int
fidivr
mov
pop
(bad)
pop
mov
in
in
push
ret
mov
shl
loopne
jno
cs
xchg
cmps
call
and
fadd
loopne
or
ds
push
mov
adc
add
cmps
and
xor
or
fisub
xchg
mov
(bad)
mul
xor
into
fucomip
cmp
or
nop
or
pop
push
add
adc
lods
mov
pop
pop
out
mov
mov
xchg
mov
icebp
pop
scas
and
pusha
retf
push
bound
xchg
and
mov
dec
inc
fld
adc
jg
call
add
stc
jae
shl
div
and
movs
jmp
pusha
jp
mov
xlat
inc
add
popf
ret
inc
xchg
loopne
or
sbb
(bad)
mov
mov
loopne
add
sub
or
enter
inc
fmul
imul
std
imul
sahf
xor
ds
jmp
and
add
je
push
jl
pop
retf
fild
or
sbb
imul
pop
push
fbstp
fdivr
shl
jno
push
cmc
sbb
aas
sbb
loopne
adc
xchg
test
int3
dec
jle
fisttp
cmp
cwde
fiadd
mov
les
lods
xchg
xlat
pusha
adc
test
sar
inc
jmp
ds
xchg
movs
les
pop
leave
dec
fwait
jg
stc
lahf
shl
pop
mov
clc
dec
mov
out
call
inc
or
jae
sbb
add
shl
std
pop
int3
js
push
cwde
inc
cdq
les
rcr
enter
ja
sbb
xchg
rol
loopne
mov
xchg
pop
push
sbb
cld
movs
loopne
aam
(bad)
rol
add
pop
sub
push
ins
pop
int3
inc
shr
out
stos
outs
xor
pop
lods
jo
ja
loop
push
retf
or
mov
fwait
mov
sar
sbb
mov
xor
mov
lods
std
or
push
hlt
fnsave
pop
cmp
jmp
sahf
or
sub
out
(bad)
mov
fs
mov
push
xor
and
mov
xchg
fstp
jb
mov
in
je
in
push
in
lea
mov
lahf
push
out
inc
xchg
xor
nop
out
out
fucomp
int
fwait
cdq
mov
xchg
xor
scas
inc
inc
movs
std
mov
inc
add
mov
pop
loopne
imul
xor
fild
add
sub
mov
ja
inc
push
sbb
mov
in
repz
jge
les
rcr
xlat
adc
sub
(bad)
out
test
mov
fdiv
loope
in
test
fist
push
dec
cld
and
xor
lods
or
bound
fbld
xor
fcom
pusha
xlat
xchg
imul
cld
fisubr
pop
int
mov
or
push
test
js
cs
not
iret
pushf
psrlq
loope
mov
mov
cld
xchg
mov
(bad)
push
xor
outs
jns
std
ror
lahf
out
mov
jne
push
inc
push
imul
add
rol
outs
mov
mov
cmp
cmp
icebp
js
mov
xor
pop
cmp
jno
adc
enter
(bad)
fcmovbe
enter
into
call
lds
dec
out
cmps
push
(bad)
or
mov
cmp
rcr
pop
jb
inc
mov
js
lock
int3
jno
sar
jbe
lock
inc
cwde
mov
loop
or
xor
hlt
and
mov
cmp
jne
dec
xchg
sub
or
int
push
jns
out
aaa
push
stos
pop
jnp
lds
inc
xchg
ror
cwde
scas
or
mov
call
iret
retf
in
mov
jns
add
inc
push
cmp
mov
sahf
xchg
jmp
mov
aaa
inc
mov
dec
inc
mov
cs
clc
ret
push
xor
mov
retf
out
stos
mov
dec
ja
enter
jg
fwait
lods
loopne
loopne
and
hlt
push
imul
xchg
xor
mov
sbb
or
loop
out
movs
jns
ja
out
cdq
cmp
aaa
inc
jl
xchg
loop
push
out
push
cdq
add
fdiv
shl
xchg
aas
xlat
jp
or
fisubr
loope
(bad)
loop
js
(bad)
jle
inc
or
enter
movs
leave
mov
dec
and
arpl
loopne
add
push
jp
(bad)
and
arpl
aad
ins
mov
xchg
js
xchg
fs
stos
in
fidiv
jmp
and
jl
pusha
adc
mov
loop
popf
inc
ffreep
lds
cs
xor
aas
cwde
push
mov
fidivr
or
inc
push
push
lahf
or
adc
jno
cmps
fxam
jnp
sar
rcr
test
push
adc
push
les
jmp
pop
mov
out
sub
adc
mov
jnp
xor
lock
jns
jecxz
into
fdiv
test
lea
and
mov
pop
adc
xor
hlt
loopne
adc
sahf
imul
add
pop
imul
(bad)
sub
jne
sbb
aas
jl
cmp
push
sbb
and
inc
or
jns
xor
ins
fwait
hlt
pop
fistp
push
xchg
jbe
(bad)
popa
xchg
push
dec
test
jbe
xchg
jae
lea
mul
add
(bad)
pushf
jle
out
mov
mov
je
cmp
pusha
xlat
clc
dec
repnz
fistp
mov
aas
inc
pop
(bad)
clc
scas
pop
xlat
add
lds
test
cmp
xchg
in
fld
adc
add
(bad)
mov
jl
test
xchg
push
jle
stc
bound
xchg
cs
mov
pop
adc
mov
mov
aam
jae
pop
rcr
and
pop
mov
inc
mov
ss
add
and
in
mov
pop
adc
inc
rcr
lds
xchg
cmp
sub
scas
jmp
dec
ins
iret
sti
dec
cmp
popf
cmc
push
xor
call
test
jle
shr
push
mov
fimul
jae
pop
mov
loopne
inc
les
out
pop
dec
dec
adc
dec
test
ror
enter
cmp
lahf
pop
lds
loopne
push
mov
xchg
mov
into
xchg
leave
mov
punpckhdq
movs
jp
mov
jno
clc
rcl
icebp
movs
sbb
jecxz
(bad)
daa
sbb
cmp
mov
and
dec
lds
mov
jno
mov
xchg
sar
add
add
call
aas
loopne
mov
fdivp
dec
xor
pop
in
lods
inc
sub
mov
mov
dec
add
xor
pop
(bad)
jl
and
sub
fsub
mov
sub
in
mov
adc
pusha
jg
int
loopne
xchg
scas
cmps
sbb
fbld
fist
fld
cmp
adc
jg
cmp
popa
xadd
repnz
loopne
xor
and
mov
and
std
inc
pop
mov
dec
push
into
(bad)
xchg
xor
sbb
dec
aaa
mov
inc
fistp
dec
fbstp
sbb
cdq
fsubrp
call
cmp
out
(bad)
enter
pusha
fs
sub
ins
jmp
gs
or
ret
xlat
add
cmp
or
fsubr
fistp
fwait
xchg
jno
out
jmp
mov
jl
fdiv
inc
xor
out
stos
ds
lock
movs
sbb
mov
ret
or
sub
cld
(bad)
aad
cs
or
or
loopne
dec
enter
movs
mov
pop
and
dec
cmp
addr16
sub
in
adc
xor
icebp
dec
dec
out
idiv
cmp
fdivr
dec
mov
lods
xor
(bad)
adc
daa
jle
mov
ret
pushf
xchg
push
int3
pop
push
leave
retf
lods
ret
in
inc
les
cmp
retf
enter
cmp
and
xlat
test
push
rol
xchg
sbb
and
mov
pusha
in
sub
push
ret
inc
daa
jae
shr
(bad)
retf
ds
add
push
out
push
gs
pop
adc
das
mov
fmul
loopne
push
call
push
test
mov
stos
outs
pop
push
into
rcl
test
(bad)
push
rcl
rol
aas
jmp
cwde
inc
jne
dec
inc
fild
inc
xchg
xchg
fwait
push
jno
and
bound
loope
xchg
xor
lahf
fcmovbe
repnz
add
dec
cwde
(bad)
jae
ins
cdq
fcomp
sub
loopne
sbb
iret
mov
jg
sbb
shr
icebp
xchg
ficomp
xor
movs
int3
nop
sar
and
mov
jp
ret
jecxz
cli
fld
clc
retf
dec
dec
in
aas
cld
scas
sbb
in
pop
(bad)
int3
xor
cmp
into
add
push
inc
mov
pop
push
pusha
test
rcl
push
dec
into
sub
and
ror
loopne
mov
retf
es
mov
fidivr
pop
(bad)
pusha
sbb
pushf
js
pop
xchg
dec
retf
mov
adc
cmp
pop
(bad)
xchg
dec
cmp
xor
mov
stc
mov
mov
int3
rcl
(bad)
mov
cmc
jnp
mov
add
or
test
ret
and
int3
cbw
scas
dec
(bad)
(bad)
sar
push
push
cmps
into
rol
fstp
ret
mov
adc
sbb
movs
sbb
ror
dec
push
pushf
jecxz
pop
push
ror
or
adc
inc
in
push
jae
xlat
push
sbb
das
inc
add
adc
pusha
push
push
sub
loopne
xchg
std
rcr
jns
mov
ja
das
daa
pop
push
jno
out
int
dec
stc
xchg
ret
jge
rcl
add
sahf
jne
lea
(bad)
aas
ja
push
dec
and
xor
lock
pusha
jg
mov
shl
xor
mov
jp
push
inc
ja
loopne
jle
sar
pop
fsub
jns
out
out
push
and
dec
pop
(bad)
sbb
fsub
js
cmps
push
sub
mov
std
cmp
aam
js
mov
and
xor
dec
int
iret
stos
and
stos
movs
into
jmp
xor
mov
push
and
xchg
jmp
popf
mov
pushf
jp
adc
xchg
pusha
or
cmp
pop
retf
sbb
jns
cmp
test
pusha
pop
inc
mov
ins
lds
(bad)
and
fist
pop
cmps
mov
mov
cs
(bad)
stc
adc
jle
dec
pop
xchg
sbb
jl
(bad)
mov
je
mov
mov
in
dec
aad
hlt
pop
pop
cmp
pop
xor
popf
retf
jb
dec
(bad)
mov
jle
and
shr
or
mov
out
adc
mov
jg
das
outs
mov
or
pop
sbb
pushf
cmc
add
mov
cmp
int
scas
pop
ss
add
pop
lods
and
push
lds
repnz
sbb
adc
lds
sub
push
test
sti
pop
xchg
mov
cli
sbb
mov
sub
xor
push
aas
push
push
xor
ss
add
loop
dec
sub
jb
out
ins
retf
out
pop
mov
imul
aad
hlt
mov
jmp
mov
cmp
inc
push
int3
(bad)
(bad)
mov
mov
dec
shr
add
push
sbb
push
ds
lds
or
dec
nop
pop
or
inc
repnz
push
aas
ins
repnz
or
push
movs
mov
mov
add
push
jns
retf
and
loopne
xor
mov
mov
mov
sahf
xor
or
sbb
mov
dec
lahf
stos
push
pop
jae
rol
sbb
dec
fstp
dec
push
mov
(bad)
sub
adc
ror
je
es
xlat
inc
dec
cmp
fist
call
and
sub
inc
jb
push
idiv
retf
ja
jmp
cwde
ror
mov
or
push
add
pushf
out
mov
gs
pop
icebp
das
popa
popa
mov
out
mov
and
ds
push
and
test
inc
popf
rcr
dec
add
push
jnp
repnz
and
fbstp
push
(bad)
jmp
fstp
into
pushf
imul
mov
and
fist
sahf
mov
loopne
cdq
sbb
ret
inc
jnp
jb
scas
pusha
xor
cmp
cmp
in
pop
cmp
jle
cmp
scas
mov
shl
int3
imul
xchg
add
pop
xchg
cwde
mov
mov
popf
fsub
cmc
imul
outs
mov
inc
or
sar
add
ds
xor
lock
int
pop
(bad)
sub
and
ret
xor
lods
xchg
add
in
or
pushf
pop
enter
lods
ss
adc
sahf
pop
ja
xor
cmps
mov
adc
jns
mov
and
bound
xchg
imul
enter
lds
imul
and
jnp
cwde
sbb
mov
lea
inc
inc
shl
rcr
or
outs
fldcw
add
push
mov
and
jp
mov
push
lods
push
call
and
add
dec
xchg
add
jae
xchg
pop
adc
repnz
rcpps
inc
cmp
mov
or
loopne
in
pushf
cs
push
mov
dec
aas
adc
(bad)
jp
add
mov
and
adc
sbb
ffreep
xchg
bnd
cs
adc
fcom
loopne
js
adc
dec
mov
push
cmp
loopne
sbb
inc
sub
sub
movs
ficomp
dec
int3
out
sub
cli
test
pop
jle
jo
ret
push
retf
jae
std
pop
call
push
mov
fdiv
lock
jp
(bad)
jb
fnsave
div
fstp
gs
or
or
aas
mov
adc
cmp
rcr
and
aas
xor
retf
fbld
cmp
inc
pusha
inc
jge
loope
imul
ins
add
pusha
arpl
aam
out
das
jl
and
pop
sbb
cwde
fcom
adc
sub
pushf
jnp
sub
xor
add
mov
fisttp
fnstcw
adc
push
cmp
fistp
mov
ret
jns
push
test
mov
xor
mov
add
mov
outs
arpl
das
ss
mov
mov
xchg
or
(bad)
and
cmp
lods
(bad)
sbb
pop
out
scas
mov
xchg
add
ja
or
js
dec
fucomip
jo
add
sbb
or
sbb
cmp
out
xor
and
push
es
pop
test
xor
xchg
aad
outs
push
popa
fbstp
dec
jmp
inc
dec
jge
push
mov
dec
xchg
jo
in
sub
cmp
sbb
pop
mov
pop
jmp
lock
ja
mov
inc
enter
cmp
hlt
or
inc
pop
pop
xchg
clc
push
mov
dec
jp
sub
ja
int3
js
cs
mov
call
add
imul
lods
inc
cbw
adc
inc
rcr
test
pop
and
jno
adc
sar
push
mov
mov
adc
add
jo
add
pusha
xor
add
push
pop
and
sub
int3
sbb
in
cmp
mov
das
pusha
mov
(bad)
jmp
aas
scas
lds
jno
lods
int
jb
add
inc
(bad)
stos
(bad)
sbb
dec
pushf
cld
push
push
inc
mov
aam
mov
repz
sbb
(bad)
sub
push
(bad)
pop
js
ror
sahf
push
in
pop
aad
pop
pop
fst
cmc
cwde
sub
jnp
mov
icebp
aas
and
jns
mov
scas
cs
mov
lock
xchg
add
out
leave
out
cdq
mov
and
aam
push
daa
int3
pop
fiadd
mov
adc
pop
loopne
dec
jne
call
cli
push
sbb
rcl
(bad)
loopne
ja
nop
cmp
sub
sub
or
mov
shl
or
or
(bad)
jl
add
pop
daa
pop
shl
jge
sub
sub
rcr
movs
test
mov
or
mov
xchg
cmc
ret
aas
pop
sar
or
pusha
dec
hlt
push
sbb
(bad)
fstp
add
push
push
mov
mov
inc
cmp
jno
inc
mov
sbb
cmp
aas
xor
xor
fadd
xchg
push
cdq
mov
std
push
xchg
or
sbb
xchg
sar
mov
nop
js
cmp
jae
and
cwde
dec
sbb
dec
add
ds
mov
add
call
ret
pop
int3
leave
pusha
in
cmp
rol
pop
cmp
mov
pop
ja
or
sar
xor
sbb
ins
mov
sahf
mov
jmp
dec
inc
lea
or
adc
fistp
jns
push
push
jmp
pop
out
loopne
ins
(bad)
in
add
int
jge
enter
or
mov
jne
and
ret
jnp
int
dec
shr
xor
dec
loopne
mov
loopne
call
cwde
pop
fcom
in
cmp
add
sub
sub
std
pop
xchg
cld
add
push
mov
in
(bad)
xor
je
es
mov
dec
aad
jmp
mov
pop
loopne
cmovs
sbb
add
ret
sub
push
ffreep
push
xchg
mov
jbe
ss
dec
mov
add
jp
adc
jg
aas
add
out
loopne
icebp
mov
pusha
xchg
test
shr
je
cmps
xchg
leave
pushf
and
movs
jle
push
sbb
fdiv
or
loopne
sahf
pop
leave
inc
xchg
push
dec
xchg
pop
movs
push
push
into
loopne
and
cdq
test
cmp
or
out
xor
pushf
mov
xchg
lds
push
dec
xor
cmp
sahf
(bad)
push
mov
jb
push
xor
adc
jne
out
cdq
jae
sub
test
les
movs
pop
cmp
or
pop
xchg
js
test
sbb
aam
nop
fsub
adc
std
push
push
add
pop
adc
fistp
(bad)
push
shr
stc
mov
xchg
mov
out
mul
push
fwait
sbb
add
jmp
out
jo
es
jp
lods
aam
cmp
fisttp
ror
jge
repnz
mov
fs
or
ret
cwde
sub
xor
int3
jp
mov
lods
outs
(bad)
test
enter
jmp
add
mov
pop
movs
mov
mov
jle
arpl
or
mov
pop
fild
xchg
icebp
ret
lods
loopne
jae
sahf
push
cwde
pop
sub
push
loopne
jb
and
inc
daa
sbb
into
es
cs
xchg
push
jno
inc
push
ret
add
mov
fdiv
scas
inc
sub
pop
xor
aas
cwde
scas
rol
cli
inc
cdq
ds
xchg
add
add
dec
add
dec
jle
add
in
xchg
push
mov
push
sbb
inc
and
xchg
sbb
pusha
dec
mov
popf
in
repnz
xchg
sub
movs
lods
dec
addr16
cli
aam
(bad)
add
jp
adc
ror
push
nop
in
inc
ret
call
sbb
popf
int
sbb
cwde
or
idiv
inc
cmp
ds
and
and
aas
fadd
aaa
es
inc
mov
push
xchg
enter
sbb
push
xchg
(bad)
cmps
ret
push
call
out
outs
outs
data16
cmp
mov
or
xchg
cmp
xor
cdq
fmul
repnz
inc
xchg
popa
ror
stos
add
into
fisttp
cld
sub
loopne
dec
mov
call
push
xchg
pop
xchg
mov
jne
call
pop
xchg
dec
mov
pop
je
pop
mov
jp
mov
dec
cmp
fwait
mov
mov
lock
out
rol
leave
shr
sar
aas
nop
mov
hlt
das
hlt
ins
push
pusha
adc
inc
push
and
aas
dec
fdiv
pop
into
mov
adc
clc
inc
test
repnz
scas
jns
mov
sbb
push
inc
pop
mov
loopne
or
movs
ret
mov
sti
fist
push
jne
mov
dec
pop
enter
call
(bad)
shl
sbb
inc
pop
sbb
sub
lea
outs
jae
jb
mov
jg
leave
xchg
inc
sar
jl
cdq
sti
push
sbb
pop
lock
adc
dec
sbb
ds
jg
scas
xchg
fldenv
or
cmp
mov
sub
cmps
inc
inc
mov
sbb
cmp
jmp
sahf
addr16
in
into
loopne
xlat
in
mov
sub
xchg
out
out
add
je
enter
jb
loop
clc
adc
inc
xchg
mov
pop
cmp
lods
cmc
push
mov
adc
retf
les
add
xor
push
xchg
cld
cmp
push
cmps
sub
(bad)
xchg
jnp
inc
or
dec
cmp
mov
fidivr
mov
ja
or
dec
add
inc
and
pusha
fwait
pop
add
mov
mov
fwait
cwde
js
xchg
push
cli
push
loopne
pusha
jle
push
pop
push
stos
jno
int
cli
pop
jb
cmp
cmc
ins
pop
fbld
cli
int3
dec
mov
das
and
sahf
pop
(bad)
loopne
mov
test
mov
out
push
or
sti
fcmovnb
ficomp
jg
(bad)
stos
and
push
adc
outs
sbb
add
into
std
(bad)
hlt
es
fiadd
loopne
xchg
mov
call
sbb
into
jecxz
jae
pop
mov
stos
fimul
sub
iret
jae
jmp
sbb
mov
aas
call
outs
(bad)
ja
sbb
jnp
xor
cmps
jmp
push
test
jae
mov
icebp
sub
pop
xlat
fist
sbb
out
cli
cmp
jno
pusha
xchg
es
jmp
push
mov
sbb
inc
push
cmps
sub
adc
pushf
add
repnz
jp
sub
push
out
or
fbld
push
aam
xchg
retf
xchg
push
mov
aad
dec
mov
sahf
cdq
or
mov
(bad)
hlt
dec
add
ds
and
or
pop
adc
xor
inc
and
mov
mov
nop
mov
sti
mov
inc
cmps
fistp
or
sbb
sti
js
push
ret
push
cli
ffreep
repz
inc
jno
sbb
xlat
rcr
sub
fisub
test
les
xchg
out
aam
es
repz
jmp
js
in
out
push
adc
ffreep
fsubr
aaa
loopne
xchg
and
fimul
cmps
xor
(bad)
xor
pusha
fdiv
stc
add
xchg
cmp
ror
and
js
ret
mov
(bad)
push
jne
dec
jb
xchg
lock
jae
jbe
sbb
xor
mov
rol
and
jb
popa
mov
cdq
adc
and
fsubr
fmul
enter
(bad)
fisttp
outs
fdiv
movs
outs
xchg
mov
in
inc
xchg
int
push
add
mov
pop
es
mov
outs
push
fsub
add
out
or
sahf
adc
inc
aas
scas
int
jns
pop
sbb
xor
cmps
pop
sub
xchg
dec
xchg
dec
mov
call
out
xchg
cmc
not
fs
out
jmp
test
(bad)
xor
popa
movs
out
ret
adc
push
pop
pushf
shl
(bad)
loop
out
xchg
sub
or
sub
sbb
mov
jp
xor
in
xchg
push
sahf
push
add
dec
or
jne
cwde
inc
pusha
pop
enter
add
push
fwait
pop
retf
popa
push
jg
es
pop
mov
sbb
xor
shr
cmps
mov
out
sar
shl
call
out
inc
cmp
and
cdq
and
ficomp
adc
inc
xor
sahf
fnsave
call
(bad)
xchg
and
cwde
imul
cmps
rcr
outs
inc
pop
in
das
sub
and
ins
sbb
push
jmp
pop
int3
jo
clc
retf
push
fmulp
or
jnp
jns
and
or
inc
loop
sahf
icebp
loop
enter
xlat
mov
inc
xchg
dec
imul
xlat
mov
mov
ror
lahf
push
(bad)
mov
adc
and
pop
pop
stos
loop
cdq
jo
pop
xor
loopne
ss
mov
add
dec
cmp
aas
jo
fcmovu
in
sbb
mov
pop
iret
mov
mov
je
dec
call
jae
inc
sti
add
sbb
push
mov
mov
pop
jb
les
sbb
dec
jle
sbb
cmp
(bad)
loopne
gs
push
out
xchg
test
pop
sti
add
add
pop
movs
xlat
mov
aam
popf
pop
into
sbb
adc
mov
push
cmp
ins
or
(bad)
mov
jge
arpl
fstp
movs
xchg
mov
cmps
test
(bad)
loopne
push
pop
popf
add
out
ret
add
push
sar
imul
retf
rcr
mov
ret
cli
aad
je
sbb
mov
push
std
loop
cmp
lods
or
sub
int
cwde
mov
and
loopne
push
xlat
jmp
outs
dec
call
or
(bad)
sbb
(bad)
cwde
shl
mov
sub
and
ret
js
mov
cmp
in
pop
loopne
or
cmp
inc
jmp
xor
imul
lock
shr
pop
int3
mov
repz
(bad)
dec
fcmovb
shl
fild
imul
scas
sub
test
sbb
scas
mov
or
les
ins
mov
pop
pusha
loopne
push
pop
or
loope
push
fidiv
fmul
test
xchg
js
fstp
sub
xor
fistp
dec
pop
adc
mov
stc
add
mov
clc
sub
loop
loopne
pop
or
push
rol
sbb
scas
clc
mov
sbb
loopne
outs
mov
push
dec
in
lea
ret
xchg
ror
cmp
in
pop
cmp
fnsave
fistp
xlat
sbb
mov
fsub
lock
jp
xchg
hlt
sub
jmp
cmp
stos
cmps
sub
lahf
inc
int
fdiv
mov
clc
pop
je
xchg
(bad)
ds
addr16
popf
push
cdq
test
gs
xor
jmp
pop
icebp
add
fcomp
call
jge
mov
(bad)
xchg
enter
mov
stc
bound
les
mov
ss
sub
sub
repnz
popf
or
and
jbe
xchg
cdq
xor
xor
push
adc
test
and
pop
out
ins
scas
test
pop
test
pop
retf
pop
push
pusha
mov
popf
lods
jg
push
outs
push
dec
or
xlat
shl
loopne
or
add
sub
mov
iret
das
or
nop
inc
aas
or
jp
nop
mov
inc
jns
jae
pop
mov
and
shr
mov
fmul
mov
sbb
fsubr
xor
jg
faddp
scas
retf
les
scas
pop
test
sahf
test
in
add
pop
mov
cmp
daa
aam
inc
mov
not
(bad)
js
sub
fsubr
clc
pop
add
cdq
and
sbb
pop
fcom
cs
fcomp
inc
jns
leave
loop
mov
std
rol
fdivr
aas
xchg
or
icebp
pop
pop
pop
scas
pop
pop
sub
leave
test
test
rcl
das
fsubr
shl
inc
fcomp
pop
ret
dec
xchg
rol
fdiv
mov
adc
xchg
pop
shl
sub
out
inc
sbb
dec
shl
(bad)
rcl
xlat
test
in
frstor
popa
jno
pop
mov
pop
loopne
fcomp
or
stos
rcr
mov
sbb
pop
es
lods
pop
and
mov
inc
pushf
es
add
cmps
in
sbb
xchg
cmp
and
movs
fsub
ins
jno
(bad)
xchg
in
fcom
push
pusha
or
or
cwde
addr16
rcr
sub
xor
sahf
push
adc
cld
jno
cli
scas
loop
pop
fadd
ins
and
inc
jb
stc
fsub
das
lea
rol
out
adc
leave
sub
icebp
cdq
pop
sbb
xor
xchg
test
inc
mov
test
stos
dec
fcom
push
nop
fimul
(bad)
(bad)
fmul
jne
pop
ret
mov
add
loop
mov
iret
lea
mov
mov
ret
imul
stos
push
mov
and
gs
inc
rcl
cmps
fsub
push
not
repnz
cdq
fdiv
xlat
iret
mov
inc
ins
popa
xor
mov
xor
xchg
push
mov
mov
repnz
mov
push
xor
push
push
jge
push
cmc
mov
add
mov
sbb
cmp
ret
add
(bad)
jle
and
inc
xchg
fucomi
xlat
cmp
das
jp
push
cwde
xor
xor
jb
(bad)
mov
sbb
cmp
dec
pushf
and
cli
pusha
rcl
mov
push
mov
jge
xchg
or
cli
fdiv
add
jae
cmps
shr
in
mov
jle
retf
or
idiv
mov
pop
inc
sub
mov
sub
xchg
retf
repnz
jae
pop
shl
mov
out
sbb
cmp
ss
or
add
jne
ror
fild
ss
adc
pusha
and
push
ja
and
test
and
fild
jp
xchg
dec
daa
jmp
inc
xor
sbb
xor
xchg
pop
mov
xor
inc
int
cmps
cwde
jle
mov
into
fistp
cmp
pop
dec
mov
(bad)
adc
jl
mov
int
iret
rcr
(bad)
cli
sti
adc
jb
outs
pop
jno
aam
ja
mov
pop
bound
imul
jno
aam
add
out
mov
jecxz
fmul
or
mov
or
or
and
loopne
dec
js
mov
xor
xchg
out
das
in
push
mov
nop
cli
mov
lock
outs
push
ret
inc
mov
psrlw
add
push
push
mov
add
int
add
lods
ss
jmp
js
cmp
mov
push
pop
push
imul
fisttp
jecxz
push
cmp
push
dec
jo
dec
js
shl
mov
add
pop
and
leave
mov
dec
dec
movs
xchg
mov
mov
or
aas
ds
fsub
in
shl
xchg
je
fnstcw
cdq
cli
mov
and
bound
les
cdq
cmc
pop
and
and
push
(bad)
xchg
xor
loopne
mov
faddp
fistp
pusha
pop
sbb
jae
cli
(bad)
cmp
retf
and
sub
and
out
or
jmp
cwde
enter
cmp
ja
mov
dec
js
scas
add
fistp
psubusb
mov
add
cmp
push
fisttp
cmps
sahf
(bad)
out
push
cdq
mov
fisttp
in
pop
sub
cmp
mov
mov
add
xor
jbe
mov
jl
mov
mov
loope
xchg
dec
dec
adc
(bad)
add
bound
jns
fs
lea
je
lods
adc
int
mov
ficom
out
adc
movs
push
inc
xchg
cmp
lods
adc
mov
into
jp
cmp
mov
and
mov
shr
arpl
pop
mov
sub
and
jae
jnp
nop
outs
xchg
and
in
cmps
aas
xor
(bad)
test
jno
pusha
hlt
shl
aaa
mov
inc
icebp
cmp
jne
push
xor
fisub
enter
or
mul
mov
add
retf
xor
cmp
inc
(bad)
call
add
int
nop
popa
pop
aas
mov
das
mov
mov
cmp
or
dec
sub
iret
loopne
inc
dec
xchg
sbb
pusha
cmp
test
dec
stos
into
ds
jg
mov
js
push
and
mov
nop
pusha
adc
rep
sub
or
sbb
push
aas
and
jae
mov
sbb
nop
pop
aad
xchg
add
mov
retf
adc
lahf
cmp
inc
movs
sbb
mov
jmp
inc
fmul
test
lds
xchg
fimul
sti
arpl
mov
push
mov
in
(bad)
daa
scas
jnp
es
movs
jb
sahf
xchg
add
enter
leave
push
or
cli
dec
jno
mov
rcl
pop
fdivr
lahf
xor
scas
aad
fwait
test
cmp
stos
sbb
fimul
mov
into
jl
adc
push
std
inc
add
loopne
mov
call
cmp
loopne
jmp
out
push
into
adc
jns
adc
xor
xchg
movs
cmp
scas
imul
cwde
jge
push
iret
fisttp
leave
mov
cmps
xor
mov
test
in
nop
jne
cld
pop
in
out
jp
add
add
jp
push
leave
retf
mov
(bad)
aas
sbb
cmp
cmp
jl
leave
bound
or
leave
mov
dec
pushf
mov
jge
push
dec
push
cs
mov
movs
fld
bound
mov
mov
push
in
ds
xlat
push
pusha
add
es
in
cld
cdq
mov
out
and
into
cdq
adc
(bad)
xchg
in
outs
xor
retf
(bad)
rol
xchg
and
push
call
xor
je
retf
sub
fistp
into
jne
aas
arpl
mov
(bad)
mov
pop
out
jno
pop
pop
dec
jb
addr16
or
pop
sar
mov
dec
mov
jb
fldenv
sub
dec
es
ds
jmp
mov
outs
ins
pop
sub
cwde
mov
loopne
pop
and
iret
adc
into
test
pop
push
mov
movs
inc
push
add
fimul
jle
test
pop
cld
jne
ins
xchg
and
push
enter
mov
jno
sahf
xlat
pusha
fmul
xor
sub
(bad)
call
pusha
adc
jmp
mov
pop
pusha
and
out
fild
inc
add
xchg
in
out
inc
push
in
push
mov
push
fldenv
sbb
mov
(bad)
outs
dec
sub
xor
or
fidiv
add
jb
sbb
in
add
pop
xchg
ret
mov
pop
ja
or
add
es
lods
fsubrp
pop
call
neg
loope
dec
jmp
mov
out
pop
sbb
mov
and
call
push
xor
cmps
scas
jnp
fistp
mov
sub
dec
adc
cmp
fist
sahf
outs
push
xlat
test
les
or
xor
dec
xor
jbe
sti
mov
fs
cs
jne
inc
dec
hlt
and
jge
int
jne
retf
push
dec
aas
xchg
push
jae
and
dec
je
dec
mov
(bad)
jmp
(bad)
arpl
sbb
push
adc
jle
outs
(bad)
push
int3
mov
mov
idiv
fwait
or
scas
xchg
and
test
ror
imul
mov
xchg
inc
ins
cli
push
ja
leave
pop
and
xchg
cmp
and
repz
and
les
pusha
pop
sub
fbld
jo
mov
or
dec
jp
mov
adc
pop
ins
aam
fisttp
dec
(bad)
mov
and
fwait
mov
cmps
or
jl
pusha
aam
in
jne
iret
add
addr16
sar
ins
imul
fild
dec
in
adc
mov
int
rcr
push
rcl
inc
mov
push
cmp
xor
enter
rol
push
and
inc
(bad)
(bad)
xlat
mov
into
dec
(bad)
sub
(bad)
pusha
into
int
add
cdq
inc
xor
inc
inc
fadd
mov
jae
pusha
enter
inc
mov
imul
fst
inc
inc
(bad)
lock
inc
or
inc
loope
movs
cmc
loopne
popa
sub
in
push
fcomp
leave
pop
retf
js
pop
inc
mov
push
lock
aad
cmp
js
ror
pop
cmp
pop
mov
fild
jno
adc
ror
test
scas
out
mov
push
dec
popf
nop
cmp
iret
add
xchg
popa
fstp
ja
inc
sub
mov
cmp
popa
xchg
sub
push
xor
fist
lds
mov
inc
movs
mov
and
and
sbb
jl
fisttp
gs
fs
int
mov
dec
nop
or
pusha
cmps
outs
or
js
pop
add
js
mov
cmc
push
stc
enter
imul
jp
cmp
(bad)
mov
fdivr
sbb
push
sbb
and
je
mov
stc
and
cmps
icebp
test
je
sbb
jae
xchg
ret
cmps
fld
into
xor
test
cmp
sub
inc
ror
pop
fistp
jno
mov
mov
xchg
cmp
jne
in
dec
mov
aad
in
aam
xchg
mov
ffreep
pusha
ins
jecxz
pop
sbb
dec
push
xchg
lds
inc
out
pop
add
jmp
shl
shl
mov
dec
or
sbb
jnp
ins
jp
pop
es
gs
imul
jmp
or
push
dec
cmp
cmp
ins
or
cmp
pusha
pop
mov
ror
mov
xor
jecxz
pop
inc
cmp
xchg
pop
mov
inc
dec
test
stos
dec
outs
in
and
push
dec
sbb
sbb
stos
push
cli
imul
mov
jae
loope
rcl
sbb
int3
push
in
iret
mov
fs
mov
arpl
jns
shl
pusha
sub
mov
(bad)
mov
pushf
xchg
dec
in
xchg
fdivr
(bad)
mov
sbb
or
das
inc
lds
call
pop
rcl
shl
aam
dec
ins
ret
scas
(bad)
aas
xor
in
ins
pop
js
xchg
lods
popf
dec
push
and
and
mov
inc
dec
loopne
and
cs
adc
cwde
or
in
fs
xlat
pusha
outs
repz
cdq
cmp
aad
movs
mov
enter
test
stos
in
js
loopne
push
xchg
out
test
lods
sar
cmps
outs
or
sub
lods
sbb
add
mov
(bad)
mov
mov
add
and
cmc
sub
dec
cld
mov
cmp
jg
add
fisttp
mov
sbb
ds
jne
das
mov
xor
cmps
arpl
cwde
jp
lods
pop
fisttp
pop
int
fsubr
aam
movs
leave
jns
push
pop
call
pusha
inc
fidiv
cmp
xor
push
add
out
push
fistp
or
xchg
adc
rcr
jmp
sbb
(bad)
loopne
mov
fistp
xor
mov
ret
jbe
loopne
cmp
js
dec
fwait
stos
mov
adc
xchg
push
jo
xchg
outs
and
mov
adc
sub
xchg
in
cmp
enter
fistp
stos
jl
addr16
imul
icebp
add
mov
jnp
sub
jbe
sbb
aam
dec
dec
or
mov
std
test
pop
sbb
scas
mov
out
xor
popw
xchg
sub
adc
cmp
daa
mov
pop
sbb
xchg
dec
xlat
pusha
retf
pop
xor
imul
(bad)
and
mov
jbe
and
mov
lahf
mov
pop
xchg
and
ins
ss
repz
push
pop
add
xor
inc
js
and
scas
iret
mov
cmp
ds
jp
cld
shr
or
jecxz
mov
mov
aad
into
std
movs
xchg
jbe
xchg
test
test
sub
stos
xchg
(bad)
idiv
fimul
inc
jb
jecxz
fucomip
mov
add
pop
fisubr
jecxz
jno
jp
into
mov
icebp
fist
push
mov
test
and
es
lods
adc
mov
aad
shr
mov
loopne
arpl
cmps
xor
pop
enter
xor
xchg
in
int
jo
es
out
or
push
bound
lods
add
jge
int3
inc
retf
pop
retf
fnstsw
lds
jb
ja
mov
call
leave
pop
cmp
push
mov
add
rcr
out
out
retf
bound
ffreep
pop
pop
ja
mov
or
mov
cmp
(bad)
push
or
inc
add
mov
jo
test
mov
retf
fucomip
in
sti
jo
or
into
fnsave
es
add
push
sbb
push
es
mov
mov
cwde
xor
or
scas
cmps
lds
mov
sbb
lds
rcl
push
dec
aas
fiadd
cmp
mov
mov
loopne
jmp
idiv
fbld
pop
loopne
add
jg
sahf
cmp
test
sti
mov
sub
sub
jmp
xchg
hlt
fnstsw
in
xchg
cmp
mov
pusha
dec
out
sbb
es
(bad)
mov
cli
cld
pop
push
mov
dec
aam
aaa
clc
xchg
aas
and
mov
clc
loopne
jns
loopne
cwde
or
fisttp
lea
out
mov
cli
jns
(bad)
popf
sub
fiadd
clc
ficomp
push
sbb
fistp
sbb
mov
sub
leave
inc
or
push
sub
inc
popa
push
push
xor
rcr
idiv
mov
pop
fbstp
mov
out
sub
daa
mov
mov
and
repz
es
jg
les
in
lea
je
and
pop
arpl
sub
pop
iret
out
repnz
mov
sahf
call
fmul
or
mov
test
xchg
mov
loopne
mov
jno
pop
or
leave
mov
jb
mov
adc
pop
loopne
dec
mov
leave
dec
push
push
jl
fnstsw
pusha
fnsave
adc
pop
jb
mov
or
cdq
repz
sbb
xor
call
mov
fistp
add
sti
pop
call
out
mov
or
loopne
xchg
data16
(bad)
fld
pop
fiadd
sub
and
mov
ss
ins
mov
sub
push
xor
mov
sbb
shr
dec
jp
mov
int3
mov
dec
je
pop
xor
jg
sub
fld
jp
sbb
loopne
cwde
mov
(bad)
push
and
cld
push
mov
mov
std
or
and
pop
add
pushf
cmp
cld
jo
cmc
fidivr
or
(bad)
xchg
mov
scas
cmp
jbe
scas
aam
addr16
in
sahf
inc
ret
and
stos
sbb
clc
cmps
jnp
jg
sar
or
push
pushf
iret
mov
mov
inc
xlat
adc
mov
jle
add
popf
dec
div
adc
hlt
mov
imul
pop
out
mov
add
add
push
in
cmp
jb
add
in
stc
dec
pop
mov
and
ins
js
dec
jle
enter
daa
pop
pop
mov
lea
sub
icebp
push
cmp
bound
fadd
jne
push
dec
aam
inc
or
mov
xchg
adc
dec
ret
jns
ins
ins
mov
xchg
cld
frstor
or
scas
out
push
add
nop
test
or
xchg
adc
sbb
lods
dec
and
xchg
aam
aam
pop
push
mov
dec
or
shr
add
movs
sub
mov
sub
pop
imul
aas
jns
mov
into
daa
mov
add
xor
loopne
fnstenv
inc
lock
(bad)
add
adc
int3
pop
imul
out
lock
and
fisttp
sub
mov
mov
or
fidivr
pop
xor
stc
imul
jecxz
mov
cmp
or
enter
mov
and
jbe
or
(bad)
mov
dec
fistp
push
mov
adc
and
push
ret
push
sub
retf
xor
ins
ins
mov
mov
mov
xor
out
or
fimul
aas
mov
call
add
ds
out
add
repnz
sub
pop
push
cwde
ds
pop
jnp
fcomp
in
fistp
es
ds
push
push
xchg
cwde
cmps
(bad)
imul
xchg
fadd
jecxz
addr16
mov
jns
add
ss
icebp
mov
add
mov
mov
dec
repnz
pop
call
test
ins
scas
(bad)
stos
ret
lds
js
and
xchg
push
ror
and
dec
sub
push
xor
and
inc
out
sahf
loopne
mov
sahf
pop
jmp
mov
(bad)
cmp
push
mov
jns
mov
in
stc
sahf
jge
jge
out
adc
add
enter
pop
pusha
fwait
xlat
test
xchg
outs
sbb
mov
loopne
push
dec
shl
cmp
shl
sub
ret
rcl
jnp
call
push
push
inc
mov
aas
in
shl
cmp
lock
fmul
jmp
push
ret
jecxz
and
repz
jecxz
and
or
push
pop
mov
bound
aad
(bad)
mov
sub
lds
pusha
mov
lods
stos
xor
or
fstp
xchg
shl
dec
sub
and
xchg
and
inc
push
pop
fwait
gs
mov
mov
je
sbb
pusha
ins
add
xor
in
push
push
xchg
mov
fmul
mov
mov
pop
fcmovbe
lea
or
(bad)
add
test
jae
or
scas
out
in
and
aad
sub
ret
and
push
adc
cmp
les
stos
mov
and
and
fisub
xchg
push
mov
or
push
push
in
or
pop
mov
call
pop
and
dec
retf
movs
jmp
inc
nop
int
or
rol
adc
rcl
dec
add
setnp
loopne
fcom
lock
and
pop
bound
or
test
xlat
fnstcw
pop
rcl
loopne
ja
cld
sbb
enter
jecxz
mov
mov
loopne
and
cli
outs
sar
add
fcomp
or
or
inc
add
mov
cmp
bnd
push
shr
rcr
ds
cmp
inc
push
and
jp
sbb
cmp
or
in
repnz
jp
push
fucomip
dec
test
xor
lock
nop
nop
dec
cli
or
fsubrp
mov
inc
jmp
rcl
inc
or
sbb
das
jl
icebp
lods
adc
xor
mov
mov
mov
jo
adc
or
retf
ficom
cli
mov
push
pusha
repnz
cmp
pop
je
lea
add
xchg
scas
push
dec
jb
and
fnstcw
scas
(bad)
cdq
fsubr
sbb
push
xchg
push
fdivr
repnz
push
cld
call
(bad)
call
mov
sub
and
jbe
xchg
adc
jp
pop
lock
pusha
cld
fisttp
imul
jecxz
mov
movs
call
jmp
fidiv
les
and
das
jno
inc
dec
leave
sub
pushf
sbb
inc
outs
and
cmps
cmp
xor
in
mov
push
or
rcr
pop
fwait
pop
jmp
and
loope
loopne
inc
test
fild
push
(bad)
cmc
ins
jmp
jae
mov
mov
(bad)
or
add
aas
or
in
stos
add
inc
pop
xchg
fisubr
cmp
and
pop
pop
jp
mov
push
mov
stos
mov
fisttp
fwait
out
cld
scas
or
test
xchg
add
into
lods
xor
pop
and
push
sub
sbb
inc
mov
mov
and
add
pop
xor
fistp
sar
je
xor
loopne
mov
loopne
(bad)
push
enter
out
jae
rcl
imul
cmps
ja
gs
shr
aaa
sahf
cld
push
or
imul
jae
or
jmp
or
jg
(bad)
aaa
out
xchg
int3
mov
mov
lahf
mov
add
cwde
test
cmps
cwde
sbb
std
dec
sub
les
(bad)
mov
mov
adc
add
jge
xor
xlat
sub
sbb
mov
(bad)
or
and
(bad)
pusha
dec
push
push
adc
retf
sahf
out
adc
hlt
xchg
pushf
sbb
(bad)
not
into
sbb
dec
mov
rcl
jbe
inc
movs
add
push
mov
jns
and
loop
push
or
outs
push
ret
push
stos
movs
sbb
shr
mov
lock
test
ins
out
in
mov
pusha
dec
(bad)
cmp
loopne
ss
sub
leave
pop
(bad)
ja
int3
in
sahf
ins
xchg
sub
ss
shl
pop
cld
adc
sub
cdq
(bad)
jb
xchg
jp
dec
fucomp
retf
jnp
xchg
scas
pop
into
pop
inc
sub
push
push
addr16
jl
(bad)
xchg
(bad)
mov
imul
mov
outs
lods
js
leave
inc
jmp
and
into
or
std
push
pop
ret
lds
or
mov
std
into
in
cmps
sub
mov
(bad)
jbe
xchg
cmp
movs
test
add
loopne
mov
add
push
fstp
test
dec
jo
sub
jbe
ficomp
addr16
cmp
lea
push
mov
xor
adc
inc
fsub
(bad)
and
cmp
out
dec
js
in
cwde
or
cmp
add
fcom
xor
in
mov
fdiv
xchg
cmps
sti
adc
loopne
fcom
ss
push
test
sub
ror
in
mov
adc
jmp
mov
jo
xor
jmp
aas
cmp
loopne
adc
fcomp
dec
dec
repz
xchg
xor
loope
pop
sub
push
jbe
fcom
lds
xor
retf
mov
ja
mov
enter
jl
int
xlat
ss
jmp
sar
js
fisttp
adc
fdivr
mov
lahf
ins
fsubr
test
ret
push
stos
jmp
data16
(bad)
jl
jb
(bad)
cli
fsubr
sbb
mov
xlat
mov
add
or
mov
loop
out
or
sbb
fdivr
jbe
retf
fild
xchg
das
mov
xor
lds
sub
pop
sbb
test
xchg
repnz
sbb
cmps
pushw
int
jnp
jo
fdiv
test
push
sbb
adc
mov
fdivr
in
cdq
fadd
ret
mov
jae
fadd
fstp
xlat
call
in
sub
fdivr
fsubrp
int
mov
pop
test
fcom
inc
leave
imul
rcr
repz
arpl
comiss
test
ins
int
mov
xchg
push
int3
shl
aas
sub
fld
outs
xor
fsub
mov
mov
inc
jmp
test
mov
sub
scas
in
ret
fmul
cmp
sbb
fadd
jmp
loope
cmc
add
xlat
pop
clc
cmp
icebp
mov
mov
xchg
pop
jo
adc
inc
outs
push
fdiv
loopne
inc
fcom
lahf
lock
data16
rcr
push
inc
clc
xchg
xor
out
mov
(bad)
stc
jg
fsubr
xor
push
push
mov
add
pop
xor
dec
and
out
sbb
jb
call
add
add
add
push
cmp
loopne
adc
js
movs
stos
xor
inc
jne
ror
int
jo
jmp
and
jp
xlat
fldcw
clc
call
cmp
xor
(bad)
in
out
out
xchg
sbb
and
xor
(bad)
and
sub
jno
xor
mov
xchg
or
pop
dec
inc
lods
mov
sub
cmc
dec
push
imul
sub
mov
dec
or
jb
pop
mov
inc
push
sub
mov
cmp
jnp
or
mov
jg
push
jmp
movs
or
adc
pusha
pop
xchg
xor
cmps
or
pop
ror
mov
scas
clc
out
test
sub
mov
cdq
in
mov
clc
in
test
push
xor
push
sbb
inc
mov
jmp
sub
outs
(bad)
add
aas
dec
dec
fadd
jns
inc
ss
jmp
xchg
xchg
jbe
test
pushf
scas
or
sbb
jae
add
in
scas
ins
fst
or
push
scas
push
pop
je
fild
xchg
sub
cmps
dec
popf
jne
js
dec
outs
loopne
push
pop
in
inc
xor
test
push
dec
rcl
inc
mov
dec
clc
xchg
mov
jns
jae
jbe
ret
xchg
stc
enter
aas
dec
int3
and
outs
dec
shl
xor
dec
lahf
popf
sbb
cmp
popa
inc
or
repnz
into
call
sbb
loopne
mov
or
or
cmp
xor
movs
fimul
sub
add
xor
mov
jno
stos
enter
jb
sub
xchg
adc
fnsave
(bad)
js
jno
div
cmp
pusha
xchg
gs
sbb
cs
inc
add
in
sar
jg
cmp
ficom
xor
sbb
pop
fbld
fwait
cmp
loop
int3
pop
mov
int
shl
mov
cmp
dec
dec
les
aas
in
pusha
int
sti
outs
(bad)
cmp
mov
xchg
je
or
call
or
das
iret
das
sub
xor
jecxz
imul
dec
lds
fcomip
das
ss
and
test
mov
push
repz
movs
pandn
mov
jne
xchg
or
or
xor
mov
inc
xor
bound
cmc
mov
mov
dec
(bad)
loope
js
fbld
je
fstp
jno
push
pop
stc
imul
push
xchg
(bad)
jmp
lods
mov
js
lea
push
cmps
mov
cmp
mov
or
cli
jl
rcl
adc
inc
lock
mov
xchg
out
(bad)
ret
int3
or
sbb
mov
dec
mov
cmp
sub
(bad)
push
mov
sub
and
pop
mov
mov
fcomp
out
je
aam
push
jecxz
out
jo
sub
push
push
sti
fcom
pop
and
fadd
adc
aad
in
les
clc
and
fmul
jle
or
mov
inc
fadd
data16
clc
push
je
leave
lock
lods
xchg
sub
push
fdivr
outs
les
mov
pop
arpl
sub
fsubr
rcr
mov
pop
cmp
jbe
sti
pop
fcom
sahf
fisub
mov
pop
adc
pop
jns
xchg
fmul
xor
fsub
fwait
and
lods
xor
fdivr
bnd
and
inc
clc
adc
ror
fs
loopne
cmp
movs
sahf
dec
fst
or
call
fsubr
stc
dec
cmps
fcomp
or
xchg
pop
fcom
mov
mov
stos
inc
(bad)
out
test
fcom
xor
pop
aad
and
inc
cmp
scas
fsubr
movs
std
jecxz
inc
call
jg
loop
in
mov
daa
xor
fcom
or
sbb
pop
psubusb
fadd
in
fs
cmp
sbb
adc
aas
outs
movs
mov
fmul
cmp
mov
push
ret
push
out
ss
in
fsubr
xchg
cmps
fadd
fdivrp
popf
addr16
push
cmp
neg
ror
loop
cwde
repz
bound
mov
and
ja
sbb
(bad)
rcr
stos
dec
cld
sub
add
enter
leave
inc
jo
nop
cmp
mov
or
pop
ins
fsubr
fnsave
je
stos
sbb
fdivr
cmps
bound
push
rcl
(bad)
fdivr
outs
or
mov
fcomp
sar
xchg
addr16
push
movs
push
imul
sbb
(bad)
dec
ins
fild
retf
std
pushf
cwde
cmp
mov
lods
loop
sbb
cdq
fdivr
cmps
pop
test
pop
fsub
mov
xor
mov
push
sar
inc
cmp
and
dec
fdivr
int
popa
call
xor
js
xchg
clc
pop
clc
out
pop
call
lahf
jle
jmp
rcl
jne
cmp
add
dec
pop
push
xchg
fcom
mov
jb
imul
enter
shl
sbb
mov
fmul
and
cld
div
(bad)
shr
fsub
scas
jbe
mov
sbb
(bad)
and
xchg
ficomp
inc
jp
call
add
arpl
stos
mov
push
sbb
add
cwde
jmp
shr
mov
sbb
push
pop
fdiv
xor
fsubr
(bad)
repz
xor
xor
cwde
dec
sub
xor
dec
fmul
shr
fwait
and
xor
mov
mov
jnp
pop
xor
push
fyl2xp1
push
xor
and
jge
sar
mov
out
fsub
jle
inc
fdivr
lods
lahf
imul
xor
and
les
pop
repnz
adc
out
ins
out
fadd
cmp
dec
mov
dec
push
mov
push
or
sub
aas
mov
or
or
mov
out
sub
aad
cmp
jl
mov
adc
adc
loopne
popa
mov
dec
inc
cld
clc
and
lock
sbb
mov
add
(bad)
cmp
xchg
pop
scas
jp
xor
jmp
fdivr
inc
repnz
loop
adc
push
or
call
inc
add
push
cmps
cmp
cli
(bad)
cld
aad
jmp
adc
cmps
pop
icebp
movs
fimul
sbb
rcl
sub
mov
shl
retf
icebp
ret
popa
jle
push
(bad)
movs
pop
(bad)
inc
mov
xchg
leave
cdq
cmp
push
pop
pop
xchg
hlt
mov
fsubr
fistp
out
rcr
pop
call
inc
jb
mov
mov
das
lock
xlat
inc
sahf
mov
and
cld
xchg
mov
mov
cmp
push
rcr
aad
lock
fcom
sub
fnstsw
xor
dec
and
cwde
cmps
push
jp
xor
cmp
cwde
push
stos
mov
xor
jge
mov
loopne
inc
adc
icebp
popa
add
or
xlat
aad
out
mov
sub
iret
stos
xor
push
rcl
add
fdivr
aam
cmp
xchg
xchg
fsubp
mov
or
rcr
xchg
mov
sbb
sbb
leave
adc
xor
push
lods
in
pop
ins
add
fcomp
push
in
jmp
push
adc
arpl
cmp
(bad)
sub
loop
shr
cmp
cli
dec
or
mov
xchg
gs
add
sub
mov
fsubr
cmp
jmp
fld
dec
mov
nop
and
mov
push
inc
aaa
fdiv
mov
dec
dec
inc
sbb
lds
jle
out
nop
xor
sahf
fcom
cmp
movs
dec
fadd
int
mov
test
pop
js
mov
fdiv
xor
cmp
jno
cmps
fdiv
mov
data16
xor
mov
pop
cld
sbb
sbb
loop
push
pop
xlat
and
lea
fdivr
mov
mov
retf
xchg
cmp
cmp
fisub
test
enter
jne
call
iret
adc
jbe
hlt
mov
mov
paddw
and
shr
call
fisttp
xchg
adc
ja
cmp
mov
and
ins
daa
in
jmp
into
loopne
xchg
push
es
das
jmp
aam
add
jne
call
pop
out
mov
fstp
adc
push
push
fcom
jmp
mov
pusha
ins
shl
std
mov
xor
xchg
inc
int
push
ins
neg
cdq
(bad)
jmp
xchg
(bad)
sbb
in
and
fadd
hlt
mov
dec
in
test
movs
push
imul
fdiv
cmp
fimul
sbb
shl
enter
jne
mov
xchg
and
fadd
push
retf
movs
mov
gs
mov
test
jp
or
mov
or
jmp
or
fdivr
mov
pop
call
adc
mov
mov
push
stos
imul
add
push
ficomp
xor
or
fsub
mov
pop
fadd
jae
mov
pop
push
sub
dec
aaa
ret
push
imul
int
or
inc
loop
xchg
popa
mov
test
loopne
fdivr
fild
in
imul
mov
cmp
xchg
jecxz
clc
fcmovnbe
inc
fld
addr16
out
(bad)
movs
test
mov
out
ds
inc
and
or
or
push
in
pop
pushf
lods
sahf
adc
adc
xchg
push
inc
gs
jge
pop
jbe
ins
mov
jb
xlat
pop
loope
sub
vorpd
(bad)
mov
and
scas
inc
neg
or
sub
jp
aad
std
(bad)
call
fsub
or
sub
mov
lds
sbb
sub
or
lahf
pop
dec
cld
(bad)
mov
mov
in
dec
xchg
es
cdq
sub
fdivr
test
loopne
fdiv
test
sahf
sti
hlt
fmul
cmp
adc
mov
fisub
xor
pop
lea
xor
fwait
xor
inc
mov
sahf
sub
mov
fstp
dec
xchg
jbe
in
rcr
call
mov
mov
sub
popa
or
loopne
jmp
in
and
sub
push
jno
stc
fsubr
scas
retf
xor
imul
fdiv
lock
fistp
or
fadd
mov
cmps
fdivr
cmps
add
mov
adc
in
jns
push
stos
fcom
jno
adc
das
retf
fst
adc
shl
pop
int3
cmp
(bad)
mov
fmul
int
mov
dec
movs
fsubr
mov
mov
jae
bound
and
fsub
enter
in
in
daa
adc
cmp
and
and
sbb
imul
es
xchg
std
xor
and
movs
test
cmp
pop
inc
xor
js
fmul
inc
or
out
sub
fcmove
cmp
int3
pop
mov
int
dec
xchg
data16
inc
mov
and
jp
dec
call
pop
add
fdivr
push
arpl
leave
add
and
shr
jl
dec
jge
xchg
int3
ret
xchg
fsubr
jno
shr
adc
push
rcr
xor
jmp
adc
fsub
mov
push
rcl
in
jle
imul
jno
pop
out
or
cld
icebp
dec
aas
cmp
xchg
xchg
fsub
out
sub
fcomp
inc
rol
fnstenv
xchg
test
lahf
mov
jg
jno
fcomp
jp
adc
imul
push
dec
xlat
sbb
mov
push
xchg
or
inc
mov
dec
push
xchg
jmp
aas
mov
addr16
pop
push
arpl
out
inc
rol
mov
and
sub
cmc
add
pop
or
cdq
pop
aam
aas
cmp
dec
es
(bad)
sahf
dec
or
out
fcom
mov
mov
leave
mov
jge
fs
xchg
dec
pop
push
jo
jmp
(bad)
or
push
cmp
xchg
jecxz
mov
lods
push
data16
outs
mov
shl
and
xchg
popf
fsub
mov
mov
xor
cwde
and
cmp
sbb
paddq
push
fsubr
mov
out
push
cmps
loop
inc
cmp
int
call
ins
or
jge
push
fcmovb
jecxz
pop
fadd
icebp
push
cmp
xlat
(bad)
fscale
hlt
mov
or
xchg
inc
push
fdivr
ret
inc
mov
or
(bad)
loopne
fmul
xor
movs
fdivr
cmp
das
outs
fcmovbe
dec
mov
add
and
aad
dec
outs
jmp
les
in
fimul
sub
fmul
adc
in
fisttp
jmp
dec
mov
inc
test
js
outs
movs
inc
scas
outs
sub
test
xchg
cli
popa
rcr
dec
lea
pop
scas
ja
js
mov
rcr
or
sbb
cmp
js
cs
xor
pop
dec
scas
inc
xchg
int3
dec
cmp
(bad)
xchg
cli
and
cmp
int
adc
test
sbb
call
in
les
dec
inc
push
sar
mov
ins
out
int
out
xchg
loopne
out
rol
fsub
aad
(bad)
inc
jns
outs
push
add
sbb
into
xchg
and
add
ret
and
pop
add
fbld
pop
mov
mov
movs
sbb
js
add
add
nop
jns
icebp
fbld
test
pop
sahf
jp
sbb
in
adc
pop
lods
mov
inc
push
sbb
mov
jbe
ins
jge
neg
adc
retf
mov
jnp
iret
fxtract
sub
cmp
push
xor
lock
mov
std
sar
or
shl
inc
mov
mov
pop
std
mov
mov
mov
xchg
and
xor
std
mov
fbld
in
fsub
ins
mov
pop
mov
lock
jb
cdq
cmps
jae
jp
push
fadd
cmp
cwde
cmps
in
mov
mov
fmul
enterw
data16
mov
mov
stos
push
outs
mov
sbb
mov
cs
mov
jb
aas
(bad)
imul
sahf
mov
adc
mov
pop
xlat
sub
push
mov
leave
fbld
scas
add
loope
call
and
pop
fs
sub
js
call
sbb
(bad)
test
mov
inc
xor
and
fwait
and
add
and
in
out
imul
mov
xchg
push
mov
std
inc
(bad)
cdq
mov
sub
mov
ins
inc
pop
shl
adc
mov
cmp
hlt
push
push
jne
dec
(bad)
xlat
add
jecxz
adc
sub
sub
lods
stos
inc
mov
pop
push
lahf
es
add
mov
stos
jb
fild
xor
fwait
inc
mov
ds
xchg
fist
push
aas
(bad)
fstp
push
sbb
sub
adc
jnp
jl
iret
scas
(bad)
(bad)
jg
sub
jge
and
adc
cmp
call
jo
adc
mov
setno
xchg
pop
push
idiv
or
sbb
xchg
sub
cmp
inc
out
daa
sbb
push
out
sbb
aam
inc
wrmsr
cwde
push
and
xchg
fs
daa
out
int3
sub
mov
adc
xor
fbld
push
out
jl
nop
jp
sub
or
icebp
mov
jl
jp
aam
mov
sbb
loope
je
clc
pusha
xor
js
enter
or
pop
frstor
mov
sub
mov
into
xchg
scas
mov
adc
iret
pop
mov
sbb
pop
cmps
(bad)
push
cmp
dec
add
adc
and
jp
sahf
mov
push
mov
mov
imul
jne
inc
and
adc
ret
xchg
pop
cmp
mov
cmp
cmp
lea
pushf
js
in
cmp
ins
xchg
mov
loopne
sub
ss
sbb
jb
jae
sbb
dec
dec
add
js
or
(bad)
mov
scas
add
sar
cmp
fild
cdq
aaa
sub
shl
fld
cmp
xchg
aas
nop
xlat
push
iret
cmp
loopne
aad
(bad)
jbe
pop
mov
into
dec
xor
inc
cmps
imul
popa
add
in
xor
sub
or
push
mov
cdq
and
pusha
dec
mov
stos
jp
jns
add
dec
mov
jnp
jl
mov
push
or
and
push
clc
jo
xchg
inc
js
(bad)
fild
shl
sub
or
cmp
fisubr
ja
out
pop
mov
aas
lahf
adc
ins
mov
dec
fwait
pusha
cmp
mov
mov
mov
push
outs
into
lds
loopne
jg
push
pusha
sbb
nop
and
rcr
into
xlat
push
dec
sbb
mov
jl
into
iret
aas
jmp
cmps
jmp
jno
stos
movs
mov
or
lahf
ss
sbb
inc
mov
ret
pop
mov
ja
fsub
stos
in
push
add
test
inc
ja
lahf
or
mov
mov
fild
cmp
out
dec
add
fistp
mov
rol
sahf
cli
test
je
ficomp
xchg
repnz
push
sbb
mov
sbb
cmp
jno
pop
sub
inc
fild
xchg
faddp
int3
dec
out
aad
mov
mov
mov
mov
imul
pop
lods
mov
mov
mov
xor
sub
cmp
push
mov
jg
js
pushf
leave
jno
xchg
aam
in
xchg
and
push
push
cmp
jae
cmp
sub
push
int
loopne
call
pop
inc
aam
inc
cwde
jo
js
pop
ror
imul
or
cmp
mov
mov
int
movs
mov
pop
gs
int3
jmp
pop
clc
pop
or
(bad)
mov
lods
inc
sbb
push
cmp
outs
sbb
out
in
enter
loopne
or
and
fs
mov
jne
out
mov
add
ja
mov
sbb
xor
and
imul
je
add
sub
movs
lahf
lock
push
pop
in
mov
sub
daa
int
je
adc
xchg
sub
fistp
xor
push
xchg
(bad)
daa
inc
mov
mov
adc
add
jne
in
pop
fistp
pop
cmp
push
or
jb
pop
jns
inc
dec
pop
dec
adc
sbb
std
and
into
fmul
call
xchg
mov
jnp
in
(bad)
pop
dec
dec
sbb
js
jmp
ret
cmp
mov
outs
inc
test
lock
ins
(bad)
js
aaa
dec
mov
stc
je
out
cdq
fwait
adc
adc
mov
loop
fcom
dec
cmp
push
pusha
jno
pop
int
test
aad
cmp
test
lahf
sbb
jecxz
push
mov
pusha
loope
push
arpl
inc
xor
mov
xor
ret
fadd
daa
rcr
jecxz
jmp
bnd
jl
jmp
out
mov
test
jge
inc
ins
fcomp
push
or
adc
mov
and
cmp
clc
or
cli
add
xchg
loop
sbb
int
inc
fcomp
shr
sub
in
dec
ficomp
inc
add
and
mov
leave
dec
jns
lahf
fsubr
test
or
and
fmul
dec
inc
and
pop
push
stos
jge
inc
in
push
or
ins
in
mov
xchg
and
std
movs
xlat
or
mov
mov
popa
test
xchg
dec
fcomp
adc
fsub
inc
int
ret
ss
sub
mov
fsub
cmp
int3
jle
xor
sbb
fsub
out
fldenv
pusha
out
mov
mov
dec
scas
sar
fsub
rcl
enter
or
inc
cmc
fcomp
mov
aad
sub
aaa
rcl
xor
inc
add
and
mov
out
push
jb
jmp
(bad)
xlat
add
mov
test
add
outs
dec
xchg
call
dec
(bad)
fdivr
mov
mov
mov
pop
stc
mov
and
xlat
mul
in
clc
add
inc
inc
xor
ss
in
mov
mov
cwde
rcl
(bad)
cli
adc
sbb
arpl
adc
stos
fdivr
jle
sub
icebp
mov
xor
repz
call
cmc
retf
in
sbb
mov
jno
pop
sbb
imul
xor
add
or
pop
inc
pusha
(bad)
sbb
cmp
or
cmc
(bad)
sti
call
pushf
icebp
repnz
or
push
cmp
sbb
mov
adc
fdivr
pop
pop
stc
sbb
mov
addr16
fdiv
push
jno
lahf
adc
rcl
xor
xlat
xchg
xchg
call
jmp
push
out
inc
int
cmp
sar
fdivr
pop
aas
cmp
push
sub
ins
and
push
test
pop
jnp
outs
push
sbb
push
fist
outs
test
popa
add
push
pop
daa
(bad)
fsubr
jne
jg
out
(bad)
je
inc
lods
mov
push
dec
sbb
xor
sub
dec
loop
fcom
adc
retf
inc
fsubr
mov
lahf
dec
jle
jbe
pop
fcomp
test
fadd
pop
or
repnz
pop
je
ret
mov
adc
in
xchg
aam
mov
cmp
jp
fmul
test
pop
fadd
js
sbb
xlat
inc
cmp
sub
enter
stos
fdivr
cmps
jecxz
add
(bad)
xchg
pop
cs
rcr
mov
cmp
test
mov
pop
cli
(bad)
call
pop
push
pop
add
adc
jmp
push
add
fmul
push
or
fcomp
push
rdtsc
shl
jge
jmp
ins
and
scas
(bad)
fs
inc
push
push
adc
cmp
xchg
fdivr
mov
pop
fadd
fidiv
mov
or
gs
out
int3
fxch
mov
adc
mov
add
repnz
out
fcomp
into
ret
xor
fiadd
jnp
cmc
dec
ja
pop
test
xlat
leave
rcl
arpl
call
test
aad
clc
push
fdivr
rcr
add
test
xor
push
and
nop
xor
push
cmp
leave
ret
test
clc
mov
add
pop
fdivr
mov
push
fsubr
dec
pop
add
test
fdivp
adc
add
loop
xchg
bound
es
out
shl
add
xor
sub
test
push
pop
icebp
leave
iret
fdiv
push
mov
aad
aas
pop
je
repz
ffree
mov
mov
int3
cli
cwde
pushf
cmc
ins
psubusb
int3
cmp
fnstsw
pop
fsub
popf
movs
imul
out
test
bound
dec
lds
xchg
rcl
adc
aam
into
xchg
hlt
add
popf
or
sbb
leave
cwde
movups
fsubr
imul
std
ins
test
push
xchg
fadd
dec
mov
jl
leave
push
cs
fcomp
in
adc
stos
imul
mov
nop
into
fdivr
push
icebp
ret
push
(bad)
and
or
mov
jbe
fsub
jmp
adc
cmp
dec
in
cwde
push
add
rcr
into
ror
fadd
fucom
jmp
(bad)
sbb
xor
and
fstp
pushf
xor
test
push
push
fst
sbb
fcomp
lahf
jbe
mov
iret
adc
mov
inc
fs
cdq
jb
and
adc
mov
mov
or
js
fsub
sub
jmp
fcom
out
and
test
or
or
sbb
pop
push
mov
dec
jp
call
(bad)
(bad)
cld
push
popf
xlat
and
mov
jmp
mov
push
pop
call
dec
dec
stos
scas
and
lea
xlat
push
imul
lds
in
pop
sbb
cmps
jl
sbb
fwait
pop
sar
push
ss
mov
dec
push
in
cmps
addr16
mov
add
pop
icebp
fcomp
inc
(bad)
xchg
add
fsubr
dec
pop
add
test
xor
or
mov
pop
and
lds
fmul
in
inc
call
stos
test
fcom
ficomp
loopne
xlat
int3
pop
ins
imul
inc
pushf
sub
retf
out
jno
mov
push
ret
outs
idiv
js
dec
fdiv
xor
addr16
fcomp
inc
xchg
lock
xchg
and
sbb
leave
add
fld
loopne
retf
adc
popf
lods
and
popa
out
mov
(bad)
enter
sub
test
shr
loop
jbe
or
dec
pop
push
adc
xor
xchg
ror
sahf
fcomp
inc
shl
cld
lock
repnz
and
addr16
cdq
dec
(bad)
xchg
retf
xor
test
pop
mov
add
or
(bad)
out
sbb
nop
xchg
test
mov
sahf
jmp
sub
pusha
fwait
inc
xchg
push
mov
clc
add
sbb
retf
icebp
and
jge
jno
neg
test
into
out
push
push
sub
fdivr
mov
in
fmul
jnp
xor
jo
sub
fmul
add
sti
fmul
in
(bad)
aas
mov
call
sub
enter
shl
pop
daa
adc
fdivr
mov
fidivr
xor
leave
xlat
or
pop
sbb
into
cwde
cwde
cmps
adc
sbb
jo
sub
fadd
push
xchg
stos
jecxz
(bad)
fmul
push
lods
jmp
fadd
hlt
cmp
inc
loop
mov
mov
mov
add
pop
pop
cmps
fcomp
lock
mov
mov
fdiv
mov
int3
leave
clc
inc
into
fsub
push
cmp
pop
call
jne
mov
movs
sub
mov
cli
repnz
pusha
fst
icebp
inc
fadd
or
(bad)
outs
(bad)
sbb
mov
int3
push
mov
cwde
(bad)
mov
shl
push
or
pop
cmps
mov
fdivr
cmova
fsub
sub
sar
dec
mov
push
rcl
dec
mov
pop
sbb
rcr
(bad)
cmp
push
lods
dec
stc
test
fdiv
or
add
stos
xor
cli
sahf
(bad)
retf
mov
rcr
stos
jmp
sbb
inc
int
fldenv
cs
fmul
and
pop
adc
dec
cld
pop
xor
or
mov
jge
and
fist
out
in
fdiv
dec
popa
scas
sbb
sbb
rol
loop
or
or
and
jo
rcr
jnp
pop
test
fadd
stos
push
fdivr
pop
mov
add
mov
fsub
dec
jp
pop
push
ins
mov
hlt
jg
cmp
sub
cs
mov
mov
fdiv
and
es
fcom
clc
dec
push
xor
push
inc
fmul
pop
xchg
nop
or
jb
les
retf
(bad)
fld
sub
inc
xlat
pop
cmc
std
sbb
dec
xor
ins
jo
mov
iret
mov
sbb
out
ja
pop
fdivr
push
repnz
fcom
and
mov
nop
in
xchg
xchg
dec
push
fisubr
sbb
inc
sbb
ret
stc
sub
or
jnp
cmp
sar
add
jl
jne
xlat
shl
mov
xchg
inc
outs
pop
mov
sbb
cdq
in
ds
pushf
retf
aam
fcomp
inc
sbb
fdivr
jmp
arpl
retf
cmps
lods
movs
or
or
mov
lea
fsubr
mov
(bad)
xor
in
fcomi
scas
call
jae
outs
movs
fadd
loop
dec
fsub
xor
sub
cs
dec
push
and
mov
sbb
loope
ds
sub
popa
aam
fcom
jae
mov
fdiv
sbb
pop
push
jo
mov
xlat
out
mov
loope
into
outs
inc
xchg
nop
cmp
(bad)
fadd
or
repz
xchg
fmul
loopne
mov
sbb
fldcw
leave
int3
cmp
inc
mov
mov
adc
mov
jb
fisub
add
pushf
stc
je
das
or
cs
lods
adc
sub
cmp
iret
xchg
lea
mov
aas
push
mov
xlat
dec
mov
sub
call
sar
out
adc
fdivr
pop
jmp
fadd
repz
jmp
and
add
cli
cmp
and
sbb
fmul
jl
shr
push
int3
mov
fdiv
dec
mov
les
xchg
jmp
sub
mov
inc
cs
jnp
fdivr
fwait
push
cli
dec
movs
nop
imul
add
shl
pop
mov
retf
inc
cmp
in
fdivr
mov
(bad)
jge
je
daa
mov
fbstp
fisub
sar
aaa
fcom
jg
out
shl
test
xor
dec
ja
jno
sbb
sbb
push
inc
(bad)
iret
cmps
xchg
sub
dec
dec
aas
xor
sub
jae
add
adc
movs
test
repnz
or
pop
js
adc
sub
mov
xlat
and
mov
aaa
fcom
or
jns
movs
pusha
mov
sub
enter
fisttp
jbe
and
lods
cmps
mov
fsub
dec
shl
mov
sbb
mov
rol
xchg
and
ficom
xor
out
add
aas
adc
scas
pop
stc
scas
cld
or
lods
les
fidiv
rcr
mov
enter
mov
(bad)
pop
inc
pop
cmp
(bad)
loopne
xor
lock
add
dec
mov
loopne
jmp
push
repnz
(bad)
mov
stc
fsub
jno
pushf
inc
and
fmul
fdiv
add
fsub
push
rcr
pop
adc
sub
lock
sahf
xchg
repz
cmp
aas
cwde
idiv
adc
bound
sbb
xor
fcom
push
cmps
call
push
loope
xchg
cli
mov
gs
jmp
sub
cmp
add
inc
fdiv
rcr
dec
enter
(bad)
pop
mov
sub
xchg
fdivr
gs
ins
iret
mov
(bad)
cmp
(bad)
pop
icebp
fstp
cmp
rcl
jbe
pop
pop
fsubr
and
dec
call
fnsave
(bad)
loopne
pop
aam
call
outs
mov
fsubr
lahf
nop
push
xlat
fwait
pusha
fsub
shl
mov
lods
push
or
fadd
cdq
outs
js
jp
retf
dec
mov
mov
cmp
pop
adc
in
test
push
ret
and
push
push
xchg
pop
mov
sbb
test
fsub
jbe
mov
or
inc
fsub
sti
xor
fsub
imul
jp
ins
jmp
bound
fdivr
in
addr16
and
ss
sbb
xchg
pushw
shr
int3
fdivr
sti
fdivp
and
hlt
bound
fsub
pop
mov
mov
xchg
int
mov
fmul
push
or
mov
mov
dec
sub
shl
and
fadd
push
ins
loope
pop
call
xlat
out
sub
fmul
loopne
hlt
jl
cdq
fdiv
pop
mov
sub
retf
mov
add
jno
gs
in
fnstcw
addr16
fadd
jg
popa
mov
cwde
cmps
fmul
xchg
icebp
shl
pusha
push
retf
clc
test
pop
or
add
dec
data16
push
cvtps2pd
pushf
out
pop
mov
cld
fst
jnp
into
out
ret
lock
sbb
jns
dec
pusha
sbb
fdiv
jnp
jl
scas
sbb
jmp
cmp
pop
mov
mov
ins
mov
data16
test
pop
adc
sub
mov
mov
mov
inc
adc
int
cmps
jmp
loop
sbb
jecxz
inc
fsubr
mov
inc
dec
fmul
sbb
das
dec
jmp
out
rcr
xor
bound
xchg
fstp
and
jnp
fcomp
cmovne
jmp
pop
fsubr
dec
gs
into
in
jmp
dec
call
jmp
mov
dec
loop
leave
jne
pop
ficomp
push
cmps
xor
mov
jge
mov
push
cli
mov
and
imul
pop
das
pop
loopne
jbe
xor
sub
ret
retf
pusha
inc
stc
mov
cmp
jns
movs
fmul
adc
xor
lds
jp
in
xor
fadd
mov
shl
mov
pop
das
popf
sub
ins
stos
jnp
js
add
lods
aaa
aad
in
out
data16
xor
(bad)
mov
fs
xlat
les
push
cwde
adc
cmp
shl
cld
test
imul
fdiv
aas
push
ret
xlat
test
out
xchg
rcr
jmp
add
mov
fmul
outs
stos
add
cmc
fidiv
leave
cmp
pop
hlt
inc
jmp
in
push
pop
jg
mov
sub
in
xchg
pop
sub
mov
cmp
movs
sbb
and
arpl
sub
adc
xchg
jbe
movs
cmps
gs
xchg
add
(bad)
(bad)
stc
pop
jl
inc
mov
push
sub
pop
cmps
fild
jp
mov
xor
dec
pop
mov
ja
and
cmp
fadd
aad
fwait
popa
or
popf
fcom
pushf
pop
in
ja
imul
movs
cmp
jmp
cdq
xchg
fdiv
std
xor
shl
out
add
mov
mov
adc
mov
mov
cmp
aad
scas
jmp
in
fdivr
and
mov
and
nop
push
xor
xchg
ror
push
sbb
push
jmp
add
sub
fsub
cmp
aad
mov
xchg
rcl
(bad)
fmul
jmp
cmp
dec
sub
test
fsub
xchg
fisttp
mov
fmul
and
aam
sahf
popa
or
fldenv
test
mov
pop
ins
inc
lahf
sbb
call
pushf
fadd
mov
hlt
fsub
dec
imul
(bad)
and
fcom
lahf
dec
test
cmp
adc
shl
cwde
mov
fidivr
aam
and
fcom
aaa
adc
jle
lods
(bad)
fdivr
retf
std
push
outs
(bad)
inc
add
fcomi
lea
inc
les
fdiv
pushf
push
sahf
in
fsub
(bad)
mov
pop
fsubr
cmp
fmul
dec
push
mov
pusha
ins
sub
inc
repnz
fdiv
and
ficom
dec
clc
das
mov
ss
outs
hlt
push
dec
fmul
jmp
mov
rcl
int
call
inc
adc
pop
add
sbb
or
mov
fmul
sbb
enter
iret
fcomp
cmps
pop
mov
fadd
repz
rcl
inc
xor
nop
or
mov
add
fsubr
daa
mov
lods
mov
mov
fdivr
add
fsubr
xchg
rol
pop
pop
fmul
mov
(bad)
icebp
pop
das
fdiv
in
arpl
mov
(bad)
out
adc
loope
jne
sbb
add
dec
sub
aaa
fdiv
loop
rcl
rol
inc
fdivr
pop
adc
xchg
outs
pop
popa
in
mov
js
fcomp
jl
pop
int3
push
push
cmp
mov
scas
loopne
test
push
addr16
cdq
ja
int
mov
sub
les
add
iret
mov
xchg
sbb
shl
shr
and
push
mov
in
pop
dec
add
mov
xchg
xchg
repz
pusha
outs
retf
and
jg
js
mov
xor
popa
add
clc
daa
outs
(bad)
xchg
shr
xlat
fild
adc
jnp
das
hlt
inc
lock
mov
std
mov
je
ja
sahf
cmp
adc
mov
xor
jl
loopne
(bad)
leave
or
sub
xchg
mov
mov
mov
fisttp
aam
mov
icebp
lods
movs
neg
mov
int
(bad)
xlat
jecxz
cmp
inc
pop
sub
xor
jp
pop
icebp
gs
push
and
add
(bad)
pusha
mov
nop
jns
inc
cld
pop
xor
add
sub
and
xor
cwde
xor
fsub
aam
push
cmp
int3
mov
iret
adc
retf
and
call
(bad)
cmp
lock
jns
dec
mov
je
stos
mov
and
adc
push
lahf
mov
mov
out
cmp
fmul
pop
xchg
add
loopne
jns
lods
repz
fsub
dec
popf
movs
inc
xchg
inc
sahf
xor
sar
lods
jno
sbb
pusha
dec
push
sub
fistp
lods
rol
or
sbb
js
lahf
push
je
into
enter
imul
imul
xchg
adc
jb
iret
loop
pop
inc
cmps
or
int3
sub
pusha
rol
jo
outs
mov
or
stos
daa
aad
fsub
add
stc
in
cmps
xlat
(bad)
mov
into
in
sbb
pop
sub
add
fmul
push
or
xlat
adc
pop
mov
cmc
fcom
sbb
aas
shl
ficom
cmp
cmp
xor
and
inc
add
xchg
lods
sub
dec
repnz
cmp
fdiv
stos
(bad)
scas
jecxz
mov
pop
test
call
sahf
adc
clc
and
sub
repz
pop
in
mov
(bad)
jnp
ffreep
call
mov
cli
cwde
call
leave
fsub
int3
ja
call
bound
xor
adc
iret
fmul
fsubr
(bad)
xor
fwait
ret
ret
(bad)
pop
lods
into
push
loopne
jmp
jne
ins
or
stos
leave
jae
rcr
js
pop
movs
jmp
pop
add
in
or
je
jle
cmp
fsub
fst
test
icebp
fstp
xchg
mov
mov
ins
push
mov
push
mov
les
xor
fcomp
(bad)
out
mov
sub
leave
jno
sub
push
shr
rep
loop
dec
adc
or
pop
pop
push
rcr
sub
icebp
rcr
sbb
push
mov
jns
arpl
xor
mov
ficom
lods
(bad)
int3
pop
aam
sub
std
jns
out
aas
xchg
add
daa
bound
fcom
jmp
cmp
aam
xchg
rcr
cmp
in
cmp
jl
add
inc
xlat
cwde
rol
sub
adc
mov
nop
adc
hlt
pop
push
jb
mov
push
fsubr
mov
data16
fsubr
jl
scas
or
les
cmp
mov
data16
cmp
cmps
xchg
iret
shl
add
xor
push
add
fcomp
stos
xlat
cdq
cmp
pushf
js
aam
sbb
inc
push
arpl
fdivr
add
xchg
inc
push
fdivr
rol
xchg
aaa
dec
fsubr
sbb
ins
push
packssdw
xlat
shl
dec
stos
xchg
lock
cmp
xchg
outs
sbb
add
repz
call
punpckhbw
arpl
retf
sub
stc
inc
xlat
add
out
mov
fadd
lods
pop
jmp
ja
jns
inc
fcomp
dec
push
mov
lahf
rcr
adc
(bad)
fmul
aaa
pop
in
xlat
leave
cmps
fsubr
jnp
adc
push
mov
push
push
and
sub
fsub
pop
inc
xchg
out
jb
fdiv
jmp
in
fucom
or
and
in
call
std
test
push
sub
add
test
lds
fcom
cmps
jb
ficom
push
sbb
pop
in
push
mov
mov
cwde
gs
sbb
cmp
jbe
(bad)
sub
and
push
fcomp
dec
jp
imul
adc
push
push
add
cmps
add
addr16
jmp
pop
adc
neg
push
lahf
cli
fidivr
push
fadd
int3
(bad)
repnz
in
add
mov
adc
rcl
in
mov
mov
mov
cmp
adc
lock
push
jmp
shl
out
dec
sub
mov
aam
test
idiv
fmul
xchg
xchg
mov
sahf
out
and
fnstsw
daa
clc
add
fstp
push
(bad)
jb
adc
push
fmul
cld
xor
xchg
fild
fsubr
call
fdivr
imul
dec
dec
dec
add
mov
and
pop
pop
push
jno
js
lds
stc
dec
inc
lods
push
test
fadd
sbb
add
sbb
rcr
out
adc
push
(bad)
loope
fsub
(bad)
hlt
das
ja
leave
mov
loopne
fcomp
jnp
cld
inc
retf
pushf
pop
bndldx
sub
iret
xchg
neg
movs
fisub
or
aam
idiv
cmps
and
xor
in
jbe
inc
xchg
pop
mov
ins
outs
xor
pushf
cmp
jg
into
jl
sar
xchg
retf
test
fadd
out
daa
cwde
xlat
xchg
mov
sbb
fild
in
mov
inc
fmul
pop
scas
in
inc
ss
fst
popf
pushf
out
int3
inc
push
mov
push
xor
popf
(bad)
adc
and
mov
add
clc
fadd
cmps
int3
fidiv
sbb
cmps
mov
xlat
lock
jecxz
xchg
rcr
ins
dec
pop
inc
mov
cmp
imul
ds
fcomp
ret
ins
repnz
gs
xor
test
mov
jbe
shl
fs
fnstsw
jne
int
cmps
hlt
cmp
fdiv
retf
fdivr
retf
fcomp
jle
popf
imul
xor
or
fcomp
icebp
ds
push
(bad)
cli
pop
fcomp
shr
das
push
call
push
ds
push
or
inc
sbb
je
pop
fwait
xor
jmp
or
sbb
cmps
fdivr
call
sub
push
(bad)
pushf
xchg
adc
xchg
nop
cmp
sti
jmp
ret
or
out
or
cmp
test
popf
pop
adc
fstp
cmps
les
jecxz
popa
and
push
dec
fsub
leave
cli
xor
arpl
push
fcomp
into
pop
mov
loopne
ror
inc
jno
or
call
into
mov
sbb
mov
jl
fcom
mov
push
call
in
hlt
push
push
fadd
lods
xchg
jae
inc
aad
ror
scas
xor
mov
rcr
or
fnstenv
push
pop
cmp
add
jmp
fsub
int3
fwait
(bad)
dec
shl
shl
sbb
xchg
fmul
mov
inc
fdiv
push
lahf
push
pop
adc
cmp
repz
je
mov
out
cld
xchg
inc
test
xchg
inc
mov
mov
ja
xchg
loope
sbb
std
test
jo
xchg
clc
mov
sahf
inc
mov
xor
fstp
(bad)
in
or
ins
fdivr
adc
sub
scas
fadd
popa
add
je
xor
xchg
clc
mov
fadd
xor
pop
(bad)
jp
imul
adc
fld
inc
rcr
xchg
adc
lds
push
push
fdiv
add
fdivr
mov
adc
leave
mov
add
aam
dec
xor
sbb
inc
test
jge
pop
fcomp
mov
jmp
rcr
sub
ret
fmul
xor
int
or
jmp
xor
leave
inc
stos
scas
ja
mov
retf
fst
lods
mov
fcomp
in
(bad)
sub
aaa
(bad)
xor
bound
clc
leave
and
mov
add
into
push
sti
jbe
push
stos
btr
(bad)
addr16
inc
inc
nop
mov
ret
xchg
mov
mov
popa
(bad)
fdivr
ds
pop
loopne
fsubr
retf
add
dec
or
inc
push
addr16
or
or
lock
pushf
sar
scas
shl
shl
mov
or
inc
fs
lds
(bad)
cs
mov
xor
mov
sbb
mov
sbb
in
dec
or
fistp
fdivr
push
sub
push
xchg
mov
(bad)
repnz
xor
fsubr
jge
fcom
aaa
xchg
push
shr
fmul
sub
sub
lods
les
cld
jb
mov
xor
addr16
loopne
(bad)
in
scas
inc
fsub
ins
jp
inc
xor
xlat
inc
fdiv
and
cmp
xor
in
rcl
test
fcom
cmp
retf
js
mov
test
icebp
sub
loopne
jno
adc
mov
pop
and
out
sbb
push
fdivr
sub
sub
cld
getsec
call
pop
out
ror
fadd
fmulp
cld
sbb
cld
or
leave
call
(bad)
sar
popa
js
cs
cmc
sub
mov
fmul
aaa
shl
stc
inc
fadd
mov
sbb
inc
shr
sar
fist
and
xchg
xchg
jnp
ins
nop
xor
ins
jns
popf
addr16
fdiv
(bad)
dec
ja
retf
pop
xchg
and
fcom
cld
clc
sbb
fadd
shl
dec
fdiv
sub
dec
xchg
fadd
xchg
pop
adc
fcom
in
js
fnsave
and
sub
nop
xchg
cmp
test
sbb
dec
add
inc
fcmovb
sbb
pop
(bad)
sub
fadd
xchg
or
cmp
xlat
mov
test
retf
inc
sbb
add
pop
aam
iret
push
adc
add
rcl
add
sbb
lods
jg
push
sbb
loop
imul
outs
pop
addr16
int3
mov
fadd
pop
fsubr
(bad)
cmp
clc
ins
test
imul
sbb
movs
pop
sbb
inc
loope
jb
nop
inc
mov
clc
cmp
pop
test
push
popf
pop
div
mov
jb
cmp
pop
sar
ret
and
mov
inc
pop
mov
fs
jo
push
(bad)
mov
inc
adc
sub
mov
push
popf
jne
iret
imul
xor
or
fsubr
push
xchg
sub
in
(bad)
xor
pop
sub
lds
xor
mov
bound
xlat
and
jo
sub
jecxz
daa
out
idiv
out
(bad)
pop
lds
stc
nop
sub
sub
jg
call
scas
and
fstp
jno
jnp
pop
sar
mov
xlat
pop
fild
aad
sti
addr16
clc
jno
fsubr
jl
gs
and
in
add
xlat
inc
jmp
mov
or
rcl
push
jl
aas
in
nop
jae
xchg
mov
add
pop
mov
out
cmp
div
(bad)
jo
inc
pop
dec
fcom
scas
push
retf
daa
(bad)
xchg
mov
or
jb
outs
fcomp
cmp
inc
and
cdq
push
xor
push
dec
scas
int3
test
sub
pushf
xor
jmp
pop
clc
nop
leave
cmp
xor
adc
cmps
xor
ins
fdivr
push
jle
sahf
dec
sub
dec
pop
fadd
adc
push
push
cmc
repz
idiv
adc
pop
pop
xchg
sbb
pop
cmps
add
fstp
xor
dec
(bad)
fdivr
enter
dec
inc
fidivr
add
clc
lock
(bad)
adc
fwait
push
xor
pop
pop
rcr
xchg
xchg
cmovg
sbb
jmp
dec
pop
sub
fsubr
das
les
(bad)
enter
inc
ins
pop
jg
cld
inc
stos
mov
retf
lods
fs
into
inc
push
inc
fdivr
mov
sar
cmp
mov
inc
shl
mov
pop
call
aas
fistp
shr
inc
adc
aam
loop
adc
aam
xchg
or
dec
xchg
imul
popf
mov
out
dec
in
cmp
(bad)
fcmovbe
fptan
test
(bad)
push
fdivrp
pop
jno
lahf
test
in
leave
mov
in
fistp
jns
in
sbb
(bad)
mov
mov
pop
sub
and
sub
or
cld
stos
sub
js
adc
pop
or
mov
adc
mov
retf
add
std
add
fild
mov
or
jcxz
pushf
cmp
movs
or
cmc
rcl
or
je
out
out
add
mov
add
inc
loop
xchg
cmp
aam
jecxz
push
add
stc
repz
outs
sbb
out
dec
cmc
pop
dec
fld
fsubr
cmp
(bad)
fwait
retf
xor
arpl
or
mov
sahf
sbb
ss
(bad)
jecxz
xchg
push
cmp
mov
je
ins
jbe
sbb
mov
out
xchg
mov
or
and
loope
mov
mov
dec
aad
sub
fcomp
mov
sbb
pop
cmps
add
(bad)
pop
adc
pop
dec
jle
fcom
jge
push
mov
inc
mov
lods
push
pop
les
dec
fcomp
sahf
stc
pop
outs
aam
mov
fnstsw
mov
push
sar
sahf
inc
jl
fdivr
lock
push
or
retf
xor
lods
ins
test
jmp
popa
ficom
xlat
adc
(bad)
jae
clc
push
or
adc
fcom
cmp
int
inc
xchg
fdivr
xchg
cld
sbb
mov
into
in
ja
movs
mov
mov
rcr
jno
sbb
cli
fsub
or
imul
fcomp
push
out
cmps
xchg
dec
fcom
fs
dec
sbb
push
loope
or
sti
scas
pusha
rcr
outs
ss
call
popf
scas
mov
push
lahf
(bad)
xchg
loopne
or
and
mov
mov
pop
frstor
fsubr
cmp
ds
fistp
push
call
sbb
or
mov
shl
fmul
aas
test
pop
inc
add
icebp
jno
(bad)
js
jl
fisttp
xlat
popa
ror
cmp
loop
sar
push
inc
sub
pushw
fadd
fwait
cmp
ror
adc
pop
daa
(bad)
fcomp
or
mov
hlt
fsubr
fisub
and
xor
cld
cmps
leave
mov
mov
rol
xchg
xchg
inc
sbb
or
jg
adc
(bad)
(bad)
dec
or
test
mov
in
(bad)
cmp
push
adc
cwde
jmp
fcomp
add
xor
jnp
nop
scas
push
or
ror
mov
mov
popa
and
dec
pushf
das
inc
(bad)
xchg
jmp
(bad)
sub
inc
cmp
(bad)
popa
sbb
pop
push
(bad)
imul
xlat
add
and
js
(bad)
fadd
sub
fdiv
mov
retf
push
stc
jmp
ins
fnstcw
(bad)
fdivr
jnp
inc
fadd
sub
rsm
and
mov
cmp
sbb
or
test
out
sbb
(bad)
or
retf
(bad)
and
push
fsub
push
mov
imul
stos
jo
pop
out
mov
jmp
push
data16
fimul
ss
(bad)
stos
adc
int
push
cdq
gs
jb
jne
das
inc
mov
cmp
fsub
jb
loope
test
call
jge
mov
cld
test
add
fdivr
jmp
sbb
cdq
mov
jmp
stos
sar
xor
jmp
arpl
xor
and
mov
jmp
add
adc
add
test
jle
push
push
sub
mov
neg
ret
fsub
ds
inc
pop
cmp
cmp
aad
dec
mov
leave
pop
outs
test
push
sub
ins
mov
push
push
out
dec
rcl
fmul
shl
fdivr
sbb
and
(bad)
fcomp
rcr
mov
mov
aam
jecxz
es
clc
adc
pop
adc
daa
cmp
fdiv
push
ret
mov
arpl
and
pop
neg
stos
dec
inc
js
(bad)
cmc
fadd
ret
fmul
pop
xor
pop
fadd
pop
mov
in
fmul
imul
push
mov
mov
arpl
aas
cmp
jge
pop
sbb
jo
sub
out
lea
fnstsw
fwait
add
adc
aas
fild
rol
(bad)
in
out
xbegin
xlat
push
or
mov
fist
aad
shl
cmp
jmp
into
not
or
pop
or
cmp
mov
xchg
add
mov
lahf
adc
pushf
pusha
out
lds
xlat
push
aas
dec
call
push
sbb
sub
sub
int3
pusha
sub
and
dec
cmps
mov
jmp
push
outs
stos
or
inc
xor
inc
fcmovb
fadd
inc
or
xor
mov
inc
mov
inc
push
sub
movs
push
test
ror
cmp
imul
gs
cmp
sbb
fbstp
or
ret
xor
mov
icebp
not
dec
shl
mov
jb
or
dec
push
xor
pusha
leave
or
retf
xchg
stc
mov
push
les
dec
popa
mov
pusha
mov
repnz
or
fistp
sar
cld
fiadd
xor
sbb
dec
cwde
test
push
pop
jmp
xchg
test
mov
adc
imul
adc
rcl
sahf
adc
mov
inc
dec
stc
popf
mov
jle
repz
pusha
add
ins
(bad)
movs
add
adc
xor
and
cs
sub
int
shl
jmp
jo
push
les
out
push
adc
jbe
nop
loopne
xchg
and
cmps
cmps
daa
xlat
fist
or
xor
and
aad
sahf
js
add
cmp
mov
lods
stos
add
add
int
lea
(bad)
popf
push
loopne
mov
dec
gs
xor
inc
lahf
aam
mov
dec
js
stc
cld
xor
rcr
out
repz
mov
imul
mov
jecxz
or
jp
ret
or
aas
(bad)
rcl
adc
fwait
fwait
popa
sbb
sub
cdq
test
or
mov
repnz
aas
push
dec
pop
or
jge
xlat
shr
xchg
xlat
pusha
int
out
js
inc
sbb
aam
cmc
mov
loopne
push
add
inc
dec
dec
outs
cli
shl
cmp
cdq
out
push
inc
xor
jae
xchg
jecxz
mov
cmp
push
cld
ss
test
dec
stos
scas
bnd
pop
movs
loopne
cli
mov
imul
jae
jmp
sub
loopne
aam
mov
jns
imul
dec
sar
jne
fcomi
jecxz
and
(bad)
loopne
ret
aas
and
dec
dec
mov
xchg
std
jmp
push
int
mov
xchg
mov
aas
xor
(bad)
call
cwde
cmps
or
shr
fidivr
aas
ss
dec
sub
add
cmp
ret
loopne
inc
in
mov
neg
sbb
js
mov
rol
lahf
repz
pop
mov
sub
xchg
pop
dec
xchg
int3
fimul
and
out
rol
inc
cwde
stos
add
ins
fwait
cmp
repnz
(bad)
xor
daa
push
jb
xchg
(bad)
aad
sub
ins
loopne
lahf
dec
cli
push
pop
movs
pop
mov
sub
loopne
push
into
fld
xchg
out
mov
mov
nop
jbe
rcr
inc
enter
fdivr
loope
ret
not
add
cmp
icebp
enter
xchg
or
jbe
mov
pop
mov
(bad)
jmp
pusha
daa
cwde
sbb
push
dec
cmc
loopne
gs
retf
add
cdq
mov
inc
aad
dec
scas
pop
icebp
aad
xchg
test
fwait
xchg
xchg
test
jl
loopne
sub
dec
call
or
in
stos
nop
mov
mov
pop
popf
mov
xchg
ret
(bad)
arpl
mov
aas
js
cmp
icebp
or
fcmovnu
push
xchg
call
mov
pusha
clc
(bad)
pop
test
(bad)
jmp
mov
test
call
or
mov
inc
xchg
jg
dec
scas
dec
imul
mov
add
adc
in
ins
lahf
fsub
dec
xlat
add
rol
and
fbstp
fldcw
jne
xor
js
xchg
std
pop
fbstp
adc
cmps
pop
mov
adc
pushf
cdq
pop
jp
outs
lods
add
mov
jle
int
mov
fist
adc
movs
in
mov
jle
add
add
out
adc
mov
out
push
test
jle
sar
mov
xchg
adc
repz
sub
mov
fcomp
repz
loope
int3
aaa
out
cld
push
sbb
dec
jle
fcmove
push
xor
mov
test
popw
adc
ss
adc
mov
(bad)
loope
imul
jbe
call
fdivr
xor
inc
fcom
jl
cmp
test
adc
mov
in
ss
cmp
xor
xchg
fdivr
lahf
mov
mov
fsubr
xor
or
push
mov
shl
lea
sub
adc
sbb
ret
jecxz
int3
mov
adc
ins
ret
js
cmp
inc
hlt
pushf
fcom
push
call
cmp
data16
es
loopne
jb
pop
fdiv
dec
gs
fdivr
pusha
mov
dec
adc
inc
or
addr16
mov
or
sar
xor
jp
adc
sub
pop
std
jno
mov
js
outs
cmps
fsubr
xchg
and
xchg
dec
or
(bad)
inc
repnz
fdivr
jne
dec
jae
cmp
fsubr
iret
shl
xor
ret
lds
leave
sbb
clc
push
inc
lods
in
dec
sbb
loopne
sar
aam
mov
mov
mov
push
aam
and
xor
stos
mov
jge
pop
or
mov
mov
pop
jmp
ficomp
mov
cmp
mul
loopne
cmps
fadd
mov
dec
fimul
cmp
sar
xor
lods
fmul
add
jo
jg
es
inc
fcom
sub
xchg
mov
nop
or
neg
(bad)
sti
cs
fs
mov
add
jmp
push
push
mov
inc
mov
fcomp
xlat
jno
add
arpl
lea
dec
mul
cli
fwait
inc
sar
daa
pop
push
ins
dec
(bad)
fdiv
and
push
jl
jmp
ss
jecxz
or
xchg
fsubr
jmp
test
push
inc
fst
fst
fsubr
(bad)
outs
jmp
add
cmc
xchg
mov
adc
pop
add
fsubr
in
outs
jp
mul
dec
mov
sbb
ret
iret
xor
je
pop
xor
cmp
leave
fisttp
mov
repnz
clc
fadd
jmp
retf
sahf
(bad)
fadd
imul
icebp
test
(bad)
fadd
ds
aam
cmp
les
popf
lods
xchg
loopne
fdivr
sub
scas
ret
mov
ret
loope
(bad)
xor
(bad)
jns
in
fcomp
rcl
mov
pop
pop
aam
jge
ja
ret
mov
out
or
inc
xlat
call
sbb
hlt
push
lahf
fmul
xor
cdq
int3
rcr
outs
mov
add
or
xlat
out
jle
mov
(bad)
out
mov
lock
aad
cmp
es
cs
cmps
inc
mov
push
pop
retf
jne
cmp
inc
or
add
fldcw
or
mov
cwde
ret
jne
inc
fmul
xchg
in
jns
retf
leave
jle
fist
jnp
add
stos
stos
dec
xor
inc
xchg
sti
fdivr
cmps
imul
dec
add
sbb
and
repz
jp
iret
fistp
jnp
std
cwde
inc
and
fdiv
(bad)
out
ss
dec
fmul
mov
loopne
pop
fs
fwait
ret
cmp
mov
fstp
inc
(bad)
outs
fcom
cmps
pop
xchg
mov
lods
xor
jo
adc
adc
out
loopne
mov
data16
mov
fstp
fsub
xchg
adc
gs
lds
call
leave
jo
cmps
ja
std
je
xchg
adc
ins
imul
pop
(bad)
sbb
mov
popf
adc
add
(bad)
mov
jle
pop
mov
push
mov
pusha
adc
idiv
cld
sub
mov
pop
xor
cli
arpl
ins
add
xchg
paddw
scas
pushf
fsubr
call
pop
and
in
xchg
or
pop
fld
push
call
jns
call
fsub
in
pop
fsub
sahf
or
lahf
fidiv
push
test
sub
(bad)
addr16
cwde
stos
mov
jbe
fstp
mov
out
call
or
pop
and
out
int3
sbb
fst
(bad)
mov
mov
stos
mov
dec
adc
cmp
cdq
mov
xor
into
into
rol
retf
icebp
lds
cmps
dec
xchg
xchg
inc
sbb
jle
add
test
xlat
cld
or
sbb
jae
mov
sub
movs
mov
outs
leave
xlat
xor
lea
es
fcomp
mul
jmp
push
add
or
adc
cmp
int3
ja
out
fdivr
lea
fadd
call
sbb
pop
clc
xchg
inc
mov
jmp
es
pop
push
xlat
in
call
test
enter
and
fdivr
(bad)
jne
loop
aam
fst
mov
inc
cwde
jb
mov
pop
pusha
sub
xor
lods
cmp
sub
mov
out
popa
fdivr
(bad)
(bad)
in
dec
xchg
dec
aas
retf
mov
imul
(bad)
inc
mov
mov
dec
add
pop
mov
mov
pop
clc
jmp
fstp
adc
leave
cmps
clc
in
pusha
ins
pop
xchg
add
(bad)
in
jne
mov
xchg
fdivr
xor
push
fdivr
or
ret
sbb
or
into
imul
pop
aaa
mov
dec
ret
movs
test
sbb
cmp
mov
addr16
(bad)
aam
inc
sbb
fisub
fdiv
imul
jnp
xchg
inc
sbb
fsubr
adc
cmp
mov
adc
leave
retf
push
sbb
cli
(bad)
sbb
popa
ss
cmp
addr16
aas
mov
cwde
jmp
sub
mov
into
sub
pop
jo
ror
xlat
pop
add
and
imul
out
push
fist
pextrw
adc
pop
in
test
fcomp
mov
xlat
pop
in
mov
in
or
push
pop
mov
fsub
test
dec
fcom
dec
inc
xor
or
(bad)
(bad)
jmp
sbb
pop
fist
xor
sub
repnz
fmul
leave
or
xchg
pop
and
xchg
(bad)
repnz
sub
dec
fnstsw
xor
mov
jmp
inc
mov
jl
cwde
xchg
xor
mov
cmp
jns
push
(bad)
fcomp
(bad)
push
pop
cmp
sub
sub
shl
lods
fsub
push
push
mov
mov
iret
cmp
add
in
js
xor
add
pop
xlat
loopne
xchg
adc
(bad)
cld
ds
in
cmps
and
dec
push
xchg
fcomp
sbb
add
xor
push
leave
fadd
xchg
fistp
in
xor
sub
cwde
and
je
inc
pushf
dec
aas
fcom
xor
or
add
fsub
int3
jp
mov
inc
pop
ja
lods
sub
imul
jae
xor
pop
aad
loope
lahf
enter
sub
lahf
fdivr
adc
xor
inc
lock
movs
push
sti
retf
leave
ja
push
push
mov
xlat
add
adc
cmp
push
fadd
mov
fucomp
cdq
inc
pop
loop
fsubr
outs
(bad)
enter
or
pop
and
inc
out
cmps
cmp
lea
pushf
jno
les
jmp
xor
or
sub
rcr
push
movs
pop
rcl
inc
mov
cmps
xor
test
scas
fmul
sub
fsub
cdq
addr16
and
aam
jno
adc
pop
enter
test
lahf
sti
mov
retf
jns
mov
nop
fcom
dec
push
push
movs
sub
jns
inc
fadd
test
outs
psubusb
call
or
adc
rol
xchg
loopne
mov
clc
(bad)
jmp
mov
dec
pop
lods
pop
dec
jle
fdiv
std
(bad)
adc
lods
repnz
inc
fsub
fdiv
sahf
xchg
cmp
nop
or
clc
bound
xlat
pop
fs
cwde
out
fdivr
sar
(bad)
cld
fcmovnu
adc
mov
fcom
sub
aad
push
jge
rol
nop
rol
pop
fadd
enter
js
mov
inc
in
jl
fisub
data16
or
and
push
ins
fcom
push
mov
jge
sbb
mov
mov
push
xlat
in
sub
and
xor
adc
push
jno
mov
(bad)
mov
xchg
retf
fcomp
out
fdivr
sbb
sbb
rol
push
cmps
push
(bad)
loopne
sbb
(bad)
xor
mov
test
push
dec
cmps
in
bound
(bad)
jno
push
jae
icebp
in
cmp
ret
ds
or
fcom
mov
repnz
popf
ret
cld
cmps
mov
mov
imul
retf
lods
xlat
lahf
scas
jmp
jno
add
mov
fdiv
test
add
mov
jle
or
int
imul
fld
(bad)
arpl
fmul
sbb
data16
push
push
das
neg
imul
sbb
pop
(bad)
dec
pop
jo
and
xor
in
jo
mov
int3
xor
bound
ins
ins
sar
add
inc
call
iret
cmp
enter
mov
out
cmp
push
scas
aad
icebp
ficom
xchg
fdivr
xchg
add
fcom
int
dec
fsubr
ficomp
xlat
fwait
cwde
push
(bad)
and
pop
in
loope
(bad)
test
or
jo
jge
stos
xchg
inc
mov
call
mov
cwde
fimul
jp
push
jae
mov
fstp
push
mov
aas
jmp
cmps
push
cld
sub
ins
std
jmp
add
test
add
adc
cmps
aaa
and
enter
into
nop
imul
ret
(bad)
lds
xchg
loop
push
push
jmp
sub
mov
dec
outs
pop
shl
pop
mov
fcmovu
prefetch
(bad)
fidiv
mov
sahf
or
(bad)
pop
leave
xchg
mov
xlat
pandn
dec
jnp
inc
dec
mov
and
jno
xchg
mov
sti
inc
pop
cli
xchg
sub
out
push
pusha
retf
lods
pop
dec
sbb
je
push
mov
lds
call
movs
cdq
inc
retf
mov
fist
es
mov
sub
inc
jmp
dec
(bad)
mov
mov
lahf
and
dec
mov
les
inc
sahf
ja
fisub
jbe
nop
cs
repz
sub
sar
test
add
and
cmp
ss
xchg
bound
lock
call
pop
xchg
loopne
jo
les
sub
inc
jnp
adc
mov
inc
fidiv
loopne
jmp
aas
pop
pop
jge
xchg
aam
iret
adc
loopne
add
xor
pop
xor
shl
adc
adc
fild
out
je
cmp
sar
cld
icebp
cmp
test
repnz
jmp
movs
mov
xchg
jno
out
in
aam
push
dec
mov
loop
jmp
pop
jne
pop
fbstp
and
rcr
or
les
outs
das
dec
mov
repnz
mov
shl
imul
lock
xchg
rol
mov
pop
adc
nop
or
mov
fwait
call
neg
mov
xor
mov
dec
ins
lahf
inc
adc
rcr
push
lahf
dec
xchg
std
movs
sahf
mov
ja
cmp
(bad)
push
jae
lahf
mov
rcr
iret
(bad)
sub
xor
sub
sti
rcr
xchg
xlat
mov
sub
mov
jmp
mov
sbb
mov
add
jo
mov
jbe
in
lock
loopne
push
cmp
out
xchg
js
pop
js
jb
dec
mov
cmp
shl
sbb
and
das
cmp
es
icebp
or
mov
adc
dec
or
cld
dec
mov
and
cdq
jmp
lea
push
cmp
jecxz
and
xchg
jp
mov
stos
inc
mov
idiv
cmps
aas
js
stos
push
mov
lods
mov
cmp
rcr
out
js
inc
push
(bad)
loopne
pushf
imul
int
fsubr
sbb
imul
int3
out
shl
(bad)
leave
jp
push
push
or
dec
pushf
dec
push
lods
das
sti
addr16
jp
fcom
mov
(bad)
leave
pop
clc
xchg
jnp
or
dec
mov
xchg
enter
pop
mov
repnz
js
imul
mov
mov
jno
rcl
xchg
aad
sub
add
pop
push
loopne
jp
xchg
sub
add
jecxz
imul
pop
aas
mul
adc
scas
sbb
loopne
popf
ss
aas
stc
fnsave
or
dec
mov
rol
or
mov
(bad)
nop
xor
out
jmp
fild
jne
mov
ss
or
repz
(bad)
(bad)
or
std
xor
inc
(bad)
jmp
dec
sahf
iret
(bad)
pusha
dec
mov
repnz
in
fbld
iret
mov
leave
xchg
mov
rcr
mov
push
xchg
test
add
aaa
cwde
or
(bad)
cli
push
inc
test
leave
fsub
adc
mov
into
icebp
movs
inc
push
loopne
push
fmul
enter
vunpcklps
test
push
cli
mov
adc
push
popa
xchg
pop
pop
retf
or
mov
sbb
inc
daa
int3
jbe
retf
je
mov
or
fmul
xchg
jb
xor
cmc
xlat
fsub
add
fsubp
leave
stc
jle
fcom
jmp
fsub
mov
scas
mul
mov
fsub
rcl
jle
ret
int
(bad)
fsubr
fs
add
inc
cmp
fild
clc
(bad)
mov
or
imul
out
adc
loop
fisttp
mov
gs
mov
hlt
rcr
sub
addr16
fdivr
in
in
mov
pop
and
retf
and
mov
fsub
loop
xor
or
jl
les
mov
cmps
cdq
hlt
sbb
jnp
pop
sub
mov
mov
mov
aas
js
mov
sbb
fdiv
retf
add
lods
into
inc
add
add
pop
fmul
xlat
aas
xor
pop
push
fsubr
test
fdivr
cmps
adc
popa
adc
mov
add
and
fdiv
lds
push
imul
mov
mov
fsubr
push
inc
out
xchg
mov
inc
call
jno
inc
faddp
pop
mov
aas
outs
jbe
jns
(bad)
loopne
push
inc
fmul
adc
pop
add
mov
sbb
and
hlt
sar
fsubr
ins
xchg
adc
loopne
fsubr
(bad)
loope
cmp
pop
fcom
int
mov
jmp
or
scas
mov
cli
mov
dec
das
or
loopne
in
pushf
cmp
dec
sbb
xor
sub
movs
fmul
push
stos
es
inc
pusha
inc
fdivr
cmc
fwait
pop
das
imul
and
xchg
jae
pop
jbe
(bad)
dec
enter
loopne
add
ret
jae
mov
pop
js
(bad)
jne
mov
out
sub
cmp
xchg
and
inc
aas
imul
push
sti
push
sbb
xchg
(bad)
faddp
adc
mov
xor
int3
mov
inc
jns
clc
popa
jns
sar
loop
push
lock
lods
sbb
les
(bad)
out
or
xor
leave
cmp
das
aaa
movs
jno
fsub
(bad)
sub
mov
stc
clc
mov
xor
stos
ror
jmp
mov
mov
stos
pop
sbb
pusha
popf
sbb
pop
push
push
(bad)
cmc
xchg
(bad)
out
rcl
and
mov
push
nop
(bad)
ins
jae
xor
call
jno
fcomp
xchg
and
out
cmp
aam
jmp
pop
rcr
push
fidiv
push
js
retf
jbe
loopne
outs
lea
mov
and
push
xor
cmp
leave
dec
popf
inc
test
mov
cwde
cmps
mov
mov
mov
lods
pop
add
xchg
jae
into
fild
pop
dec
xchg
shl
jmp
popf
jb
and
sub
fistp
mov
or
enter
test
mov
shl
pushf
jo
lea
xchg
cmps
pop
mov
out
and
xor
nop
push
mov
inc
sub
js
mov
aad
fadd
sub
mov
adc
jo
gs
xchg
je
or
push
mov
clc
sub
dec
dec
sub
xchg
sbb
fsubp
mov
loopne
fidiv
sub
arpl
nop
push
xchg
repnz
push
sar
dec
std
pop
pop
cmc
sbb
jae
rcl
add
mov
je
(bad)
jmp
jge
cld
xchg
xchg
pop
stos
pop
adc
or
push
dec
mov
test
mov
mov
jmp
mov
push
or
aas
jp
rcr
dec
cld
dec
adc
int3
out
loopne
xchg
pop
sbb
xchg
sub
shr
inc
pop
mov
scas
xchg
xchg
dec
fisttp
dec
jp
inc
arpl
lahf
jg
imul
cwde
fmul
or
sbb
sbb
xchg
into
and
call
test
fisttp
jbe
jmp
pop
cld
mov
loopne
fidivr
jno
hlt
mov
xor
push
pop
or
mov
scas
fiadd
mov
jb
xor
and
adc
pusha
(bad)
retf
jge
sub
out
pop
jnp
int
pusha
xlat
xor
dec
mov
ins
jle
mov
mov
lods
xchg
sub
aas
fisub
jmp
cmp
xchg
sbb
scas
sbb
pushf
cs
cld
fld
mov
sub
add
pop
jns
xor
jbe
sbb
sbb
pop
fdiv
cmp
jmp
stos
repnz
cld
mov
push
icebp
xchg
push
jle
cli
cmp
cmc
xlat
inc
xor
and
pushf
push
in
or
xchg
(bad)
mov
jmp
jg
add
loop
in
xlat
enter
rcr
pusha
mov
xor
out
scas
arpl
push
mov
push
pop
popf
xchg
rol
jmp
into
cs
jmp
fsub
xchg
in
mov
(bad)
in
mov
shl
int
dec
inc
(bad)
inc
mov
dec
ins
pop
cwde
mul
loope
mov
jmp
call
enter
dec
cli
jge
mov
int
cwde
or
cmp
dec
stos
retf
cmps
jo
enter
cwde
or
pushf
daa
(bad)
call
imul
and
push
daa
fbld
xchg
in
sub
lea
pop
xor
les
fimul
pop
xor
je
push
lds
fdivr
out
xor
rol
add
cmc
dec
(bad)
mov
sbb
push
xor
hlt
sub
mov
jmp
loop
mov
sub
dec
(bad)
mov
cmp
fs
stc
(bad)
inc
rcl
cdq
int
cwde
std
pop
mov
cdq
dec
mov
and
scas
nop
add
lods
fs
int
dec
ror
loopne
outs
sbb
push
and
sub
add
dec
and
js
and
mov
push
sub
les
adc
sti
int
xor
iret
inc
(bad)
repnz
xor
inc
pop
repz
ds
lods
push
jmp
div
aam
sub
mov
or
fadd
inc
test
popf
and
jge
pop
push
loopne
jnp
das
jmp
sub
(bad)
pop
and
js
mov
xchg
xor
repnz
adc
fnstenv
mov
pusha
xchg
xor
js
cld
sbb
into
call
and
mov
cmp
loope
jnp
iret
sti
fmul
mov
sahf
sbb
xlat
xchg
jg
and
xor
ins
and
aad
cmp
popf
into
or
xor
imul
outs
cmp
or
add
push
popf
pop
loope
bound
pusha
ret
popa
sub
jp
push
jne
mov
bound
ins
gs
fstp
adc
in
call
movs
rcl
mov
pusha
(bad)
loopne
jmp
dec
lods
lea
pusha
test
or
dec
cmps
nop
mov
in
outs
push
jns
jmp
fild
call
lahf
and
jb
mov
and
or
shl
cmp
jne
mov
fadd
ja
xchg
out
pop
ins
test
(bad)
push
loopne
inc
mov
and
imul
cli
push
fld
les
rcr
mov
js
sub
pop
xchg
dec
js
mov
pop
loopne
cmps
mov
fistp
cdq
stos
iret
xor
mov
mov
sub
pop
fwait
loopne
jo
xlat
or
movs
add
les
cmp
mov
push
stos
ins
ja
mov
test
push
(bad)
ror
fild
cmp
fadd
cmp
cmp
jecxz
inc
xchg
in
out
mov
fsub
mov
fwait
ds
call
aas
sub
retf
out
sub
test
dec
sbb
js
dec
or
or
push
xchg
xor
test
fwait
test
mov
je
pop
xchg
lock
nop
xor
cmp
xor
mov
lods
fadd
mov
and
fild
(bad)
stc
call
pusha
sub
push
ror
fsubr
test
fcom
fnsave
fdivr
dec
fadd
hlt
jns
sbb
push
fsub
jb
std
test
fsub
push
sub
xchg
add
jmp
xchg
mov
cmp
(bad)
dec
fsubr
xor
cmps
fmul
loope
inc
mov
mov
pop
pop
jnp
sbb
push
rcr
add
out
push
or
aam
retf
(bad)
in
aaa
(bad)
popa
mov
outs
(bad)
fadd
daa
gs
aad
and
shl
lods
dec
cmc
imul
test
je
inc
clc
mov
cmp
push
out
shr
or
jae
push
xchg
push
add
pop
push
xchg
xor
fnsave
in
lods
ins
mov
inc
pop
cld
je
ror
cdq
mov
fmul
imul
cmp
inc
fsubr
dec
shr
arpl
sub
jmp
mov
add
and
xchg
out
call
mov
push
arpl
in
jbe
mov
(bad)
mov
xchg
stos
cmp
dec
popa
sbb
fsubr
pushf
or
mov
test
pop
mov
jmp
or
xor
cld
mov
sahf
(bad)
nop
ds
mov
xchg
fadd
xchg
cmp
loopne
out
xlat
cmp
rep
test
fstp
iret
adc
cwde
int3
sti
fld
(bad)
dec
jmp
pop
add
pop
mov
sbb
adc
rol
adc
mov
xor
push
aas
fcom
loopne
mov
cs
gs
adc
popa
mov
pop
adc
mov
loop
mov
cmp
in
pop
retf
aam
fimul
clc
aad
fcomp
js
jae
and
mov
stc
mov
jle
jnp
aad
fmul
lock
cld
fmul
das
call
(bad)
repnz
fcomp
xor
add
push
fsub
push
fmul
adc
call
out
jg
mov
jae
shl
fld
mov
nop
mov
call
jns
in
loopne
fld
lock
mov
outs
out
ins
ss
out
xlat
dec
in
rol
mov
pop
cmps
or
scas
clc
cmp
fdiv
pop
jl
fcomp
gs
add
cmp
icebp
xor
jns
dec
lock
fadd
mov
xor
es
imul
das
cmps
xor
outs
mov
cmp
fiadd
sub
push
repnz
or
fidivr
cmp
outs
mov
les
push
pusha
mov
mov
dec
push
xchg
mov
neg
dec
add
out
pop
call
mov
je
adc
js
mov
loopne
cmp
adc
push
fdiv
icebp
aam
fcomp
adc
es
out
push
cmp
dec
repz
aaa
or
test
sub
mov
sbb
push
lahf
jns
imul
push
sbb
(bad)
and
xchg
fadd
inc
(bad)
pop
je
in
jp
fadd
mov
mov
fcomp
add
stos
ficomp
pop
mov
nop
fsubp
adc
mov
jo
inc
scas
sbb
push
or
lods
jp
dec
pop
retf
scas
in
sbb
(bad)
es
xchg
data16
(bad)
xchg
loope
scas
dec
cdq
sub
data16
sub
cs
aad
movs
or
ret
mov
retf
xchg
mov
into
sbb
and
fsubr
mov
jnp
lods
rcr
lahf
cld
fistp
mov
leave
fcmovu
shr
out
xchg
out
xchg
or
aaa
clc
mov
mov
ins
fsub
out
stos
inc
push
xlat
mov
push
nop
add
mov
sti
mov
arpl
adc
add
or
pop
fdivr
fs
les
movs
cmp
jl
jne
fdiv
jb
outs
or
lock
mov
jecxz
aas
lea
sbb
ret
shl
pop
xor
sub
ds
sub
mov
fdivr
loop
mov
imul
fs
cmp
imul
loopne
cmp
adc
rcr
cs
add
push
cmp
(bad)
out
mov
push
adc
test
test
in
call
pop
mov
test
lock
jbe
leave
push
add
addr16
mov
test
or
sti
inc
mov
dec
(bad)
cmc
push
dec
stos
jb
fst
inc
jle
xor
jbe
jmp
push
xchg
cmp
dec
xchg
cwde
iret
dec
cmp
mov
test
fsubr
jae
dec
cwde
push
out
dec
mov
add
xor
fadd
inc
pop
cmp
call
jecxz
mov
fsubr
adc
adc
xor
push
or
daa
jae
or
fs
xor
adc
pop
aaa
sbb
outs
sbb
mov
add
dec
jae
or
lahf
leave
pop
jae
cmp
repnz
xlat
xor
stc
iret
cld
sbb
call
fcom
lods
pop
and
cdq
mov
out
add
outs
in
(bad)
push
push
lock
cmp
lods
mov
cs
xor
ret
rcr
mov
sbb
add
in
cmp
leave
jnp
clc
loopne
mov
mov
leave
mov
fdiv
xchg
imul
aam
fcomp
and
sbb
(bad)
stos
mov
dec
dec
fdiv
aaa
jnp
sub
sub
or
int3
mov
dec
mov
cmc
xor
addr16
call
xor
sbb
out
repnz
ficom
sbb
js
sub
fsubr
jl
sahf
mov
or
mov
fcomp
hlt
sub
xor
jg
cwde
pusha
sbb
out
iret
xlat
aam
(bad)
jns
fdiv
stos
dec
fmul
adc
mov
sub
imul
cmp
outs
sbb
xlat
sar
mov
sbb
xlat
sub
(bad)
push
mov
mov
mov
push
xchg
push
ss
add
xchg
mov
fdivr
pop
iret
jmp
fcomp
imul
push
fs
inc
push
xlat
mov
or
into
adc
jb
pop
mov
dec
push
push
sar
fcomp
cwde
je
sar
icebp
sub
(bad)
pop
add
sub
retf
mov
loopne
ss
loop
dec
push
fmul
sbb
and
pop
sub
push
clc
retf
jbe
add
daa
push
jle
dec
lock
repnz
fnsave
mov
xchg
push
int3
movs
clc
fiadd
es
sti
aam
retf
frstor
cmp
loop
jo
sub
(bad)
jns
prefetcht1
adc
and
ins
daa
mov
pop
movs
add
or
fdivr
sub
mov
fadd
pop
mov
push
xor
and
mov
rcl
fcom
mov
sub
fadd
mov
and
mov
int
(bad)
fcom
xchg
test
fsubr
sub
and
push
fdiv
hlt
outs
dec
xlat
es
mov
clc
jne
fcomp
xor
xor
adc
addr16
push
shr
shr
pop
das
and
jle
retf
test
cmp
fidivr
and
mov
xor
in
and
int
or
dec
adc
lds
jnp
int
ror
jmp
pop
call
fsub
mov
sub
fcomp
repz
push
cmp
int
sub
mov
fcomp
jo
sbb
pop
ret
and
leave
mov
enter
add
imul
inc
jmp
mov
test
cmp
fst
aas
test
arpl
(bad)
lea
jns
pop
lahf
pop
fdiv
in
mov
mov
sub
inc
lock
cmp
mov
or
cs
add
aaa
dec
iret
sbb
scas
cmp
sbb
das
out
xlat
sahf
(bad)
sub
cmp
into
ss
sub
xor
mov
sti
cmp
dec
fcmovnu
clc
push
es
shl
jae
into
leave
shr
loopne
cmp
sub
popa
fdiv
nop
fdivr
pop
ds
fsub
xor
hlt
fisubr
fcom
mov
cmp
inc
jmp
xchg
adc
pop
cdq
sbb
call
outs
test
stc
dec
sub
or
loopne
cmps
add
adc
mov
mov
pop
nop
add
sub
or
pop
retf
faddp
popa
mov
out
or
or
cmp
inc
fstp
mov
fist
cmp
cmc
fadd
xchg
or
popf
xchg
fcom
aam
cmps
pop
retf
ins
(bad)
je
cwde
lds
jne
adc
or
neg
push
jno
mov
jmp
mov
fcom
pop
adc
cwde
pop
in
enter
sub
or
ror
and
(bad)
leave
fldenv
pop
xor
je
sub
xchg
fdivr
and
dec
stos
rcl
fisubr
fdivp
push
xor
scas
add
jbe
cmp
lea
mov
pop
or
enter
cmp
(bad)
call
repz
or
shl
lods
enter
iret
(bad)
sti
push
mov
and
es
or
fsub
push
push
adc
ss
xlat
add
sar
fistp
pop
mov
push
(bad)
shr
test
lods
jbe
bound
(bad)
add
mov
je
push
sti
add
adc
leave
mov
xchg
pop
jmp
sbb
sbb
shr
pop
cdq
mov
jno
fstp
cmps
dec
std
imul
push
leave
xchg
fnstcw
mov
jno
ror
loopne
aas
in
push
sbb
iret
ret
repz
dec
(bad)
cdq
rcl
pop
ficomp
adc
xchg
idiv
(bad)
cmp
push
ins
bound
(bad)
(bad)
aas
xchg
adc
data16
adc
xor
mov
test
adc
jg
imul
test
cmp
dec
out
jp
ficomp
not
xchg
loopne
std
push
sar
dec
cmps
adc
add
repz
xor
sti
mov
mov
add
cmps
mov
or
cmc
fimul
jnp
test
mov
inc
out
cdq
push
and
test
add
out
push
leave
fwait
movs
pop
dec
inc
mov
pushf
push
dec
lea
ret
rcl
repz
push
rcr
add
aas
mov
jbe
mov
icebp
adc
sub
out
daa
and
mov
movs
xchg
mov
pop
shr
push
pop
pop
mov
jae
xor
mul
push
je
ins
jns
sub
ret
inc
stos
je
jne
sti
jae
cmp
repnz
adc
in
push
mov
xchg
sub
inc
cmp
dec
sub
scas
and
inc
push
xor
int3
js
inc
cmp
test
mov
inc
shl
mov
mov
and
inc
aas
mov
adc
popa
stos
test
jne
js
shl
add
in
mov
mov
(bad)
inc
mov
or
mov
mov
mov
fsub
xchg
jb
or
sti
pop
(bad)
scas
mov
loopne
nop
mov
ret
test
mov
in
jl
add
cli
cmps
je
xchg
adc
loopne
mov
sbb
sar
movs
mov
pop
outs
scas
inc
mov
pushf
fbld
stc
or
js
jge
sub
in
or
pop
in
fadd
ret
jmp
bound
aaa
push
sub
cmp
data16
lock
jl
mov
imul
jge
push
inc
cmp
dec
pusha
(bad)
mov
xlat
and
push
test
into
js
add
pop
jmp
or
scas
inc
lock
pop
and
jmp
ins
and
jle
call
mov
jne
pop
(bad)
ss
push
add
js
xchg
fidiv
and
aam
(bad)
movs
test
sbb
jno
sbb
loopne
or
cmps
dec
push
inc
fbstp
jl
mov
adc
mov
mov
mov
jo
xchg
inc
xlat
sub
stc
push
mov
pop
scas
xor
fwait
push
jmp
in
dec
pop
cli
add
aaa
add
scas
cmp
sub
push
outs
mov
cmp
or
(bad)
add
xchg
jae
mov
sar
xchg
fmul
jp
mov
sbb
adc
std
loopne
sbb
cmovo
xor
inc
sti
jns
pop
mov
pop
repnz
leave
pop
shl
loopne
inc
(bad)
out
sbb
cwde
shl
adc
pop
inc
jns
aaa
fxch
ds
dec
mov
in
dec
add
mov
out
ret
dec
xor
repnz
enter
cmp
fucomip
jns
pusha
je
js
mov
ins
adc
iret
or
push
xchg
lahf
test
xchg
dec
pop
jae
or
pop
adc
les
mov
jne
outs
cmps
fstp
sub
(bad)
fstp
mov
fmulp
jo
fdivr
fisubr
xchg
fistp
js
jbe
push
and
jmp
ret
sub
in
(bad)
fsubr
movs
adc
cdq
xchg
jae
pop
or
and
sbb
ss
fsubr
or
sub
xchg
sub
jb
mov
pop
cmp
jns
adc
sahf
and
pusha
scas
nop
pop
mov
ins
aam
push
mov
into
int3
mov
add
test
cmp
pop
push
test
dec
sbb
pushf
mov
adc
jg
cmps
push
and
pop
loopne
mov
aad
inc
sub
push
jmp
fsub
pushf
rcr
stos
sbb
jp
or
pop
sub
scas
jo
push
sbb
sub
or
sar
add
mov
jbe
or
inc
and
lock
jae
ror
jnp
xchg
into
das
jbe
pusha
push
js
in
cmp
jp
fistp
inc
cmp
or
in
pop
scas
test
hlt
fiadd
xchg
and
or
ret
mov
std
push
aas
hlt
pop
repnz
aaa
and
pop
inc
inc
cmovs
ja
ins
je
cmp
push
fisub
mov
push
mov
xor
movd
fsub
ret
jp
mov
xor
iret
jge
shr
add
rcl
inc
add
mov
xchg
cmp
outs
frstor
fwait
jnp
inc
mov
mov
dec
jo
in
pop
cmps
push
imul
xor
je
jae
test
cdq
rcr
or
jp
jp
sbb
xchg
jno
stos
aaa
and
sub
mov
(bad)
push
mov
xchg
fbld
out
or
pop
pop
mov
fisttp
loopne
(bad)
enter
xchg
cmp
xor
pop
jp
call
cld
add
pop
fisttp
ins
pop
aad
dec
leave
mov
js
ds
cmp
(bad)
mov
mov
or
inc
push
inc
xchg
xor
inc
push
or
out
dec
mov
lock
imul
cmp
jno
jbe
call
cmc
retf
and
jae
mov
mov
fldln2
lods
retf
or
mov
jno
js
out
fbld
dec
stc
loop
adc
inc
mul
jp
xchg
stos
mov
je
sbb
pop
mov
movs
jmp
pop
fistp
ffreep
ins
mov
inc
inc
ret
dec
or
and
je
adc
nop
iret
fbstp
add
outs
sub
sbb
and
xor
mov
mov
pop
out
jecxz
push
jle
lock
cmp
out
enter
jmp
mov
out
pop
mov
sahf
or
shl
scas
sar
mov
or
cs
fisttp
xor
test
pop
scas
mov
pusha
push
mov
rep
or
stos
mov
add
inc
fld
cmp
jg
or
lds
pusha
pop
fmul
or
mov
mov
sbb
inc
shl
mov
push
push
aas
mov
pop
test
or
adc
cmp
sbb
retf
xor
xchg
scas
push
rol
imul
nop
pop
pop
inc
push
cmps
mov
in
cwde
pusha
cli
cmp
and
or
dec
xor
sbb
cs
push
pop
xchg
aas
inc
or
cld
test
ror
(bad)
ficom
daa
loopne
shl
enter
test
in
add
and
inc
pop
or
mov
pop
pop
out
sub
mov
xchg
adc
js
es
cmp
jne
push
ret
push
xchg
call
inc
mov
mov
jge
das
and
js
cmp
mov
push
jae
xor
aam
out
or
mov
mov
ret
pop
fistp
mov
mov
xor
mov
cmp
or
jle
adc
sub
adc
mov
mov
xchg
push
xchg
mov
jl
in
popa
popf
adc
rol
icebp
pushf
add
aam
jno
adc
nop
test
xchg
(bad)
jbe
pop
and
mov
fsub
cmc
int3
pop
xor
jo
push
pushf
dec
(bad)
call
adc
jbe
xadd
mov
bound
and
sub
mov
scas
(bad)
ror
cmp
js
jmp
mov
dec
fiadd
xchg
loopne
push
sbb
ret
sub
dec
cmp
aaa
add
jbe
dec
or
cmps
pusha
cwde
call
int
dec
icebp
sub
dec
daa
fld
xor
sub
dec
into
ds
fldcw
inc
(bad)
jg
sbb
icebp
lods
dec
(bad)
xlat
xchg
lock
je
mov
lods
add
add
push
loopne
fidiv
jg
mov
sbb
out
aam
xchg
out
cld
pop
pop
pop
aad
cmp
lock
mov
jmp
cmp
or
stos
sbb
xchg
inc
push
push
pop
or
in
add
jno
inc
add
inc
and
push
test
les
daa
js
loopne
cld
mov
push
lock
jae
inc
xlat
pop
mov
and
fwait
inc
fistp
shl
test
dec
ret
test
adc
dec
fidivr
sub
xchg
in
lds
je
dec
jne
sti
(bad)
fisubr
sub
and
fsubr
mov
sbb
mov
repnz
jnp
xlat
sbb
mov
enter
jg
into
enter
pop
xchg
dec
rol
pop
push
push
mov
pop
lds
cmps
sbb
inc
mov
dec
sub
adc
es
or
dec
cmc
(bad)
ret
lods
mov
dec
jmp
fcmovb
add
mov
xchg
mov
mov
gs
repz
pop
pop
push
addr16
(bad)
xor
into
into
dec
data16
inc
sub
pop
int3
pop
cmp
mov
inc
fld
sbb
xchg
cli
xlat
ror
std
jmp
sub
mov
sub
fbld
movs
cmp
add
loopne
mov
cmps
in
jge
xchg
mov
sub
ficom
fild
cdq
sub
jmp
pusha
push
sub
enter
shl
sbb
sahf
ds
fistp
(bad)
lock
popf
dec
pop
loopne
in
nop
dec
cli
inc
add
icebp
cdq
and
add
xor
jge
jl
mov
xchg
cmp
outs
stos
dec
imul
jo
mov
in
out
jo
mov
jnp
fsin
and
cmp
ficomp
mov
ror
call
jl
add
adc
or
sbb
sub
pop
shl
sbb
push
cld
je
cld
cmp
cmp
out
mov
fsub
cli
test
in
jbe
in
leave
ds
inc
xor
jp
and
or
sbb
pusha
pop
outs
jle
test
jl
dec
shr
fsub
out
shl
stc
outs
jbe
mov
fsub
shr
shl
fist
cmps
retf
mov
sbb
push
xor
repz
xor
fwait
adc
fiadd
je
add
retf
inc
adc
or
fisttp
shl
xchg
sub
daa
sub
nop
dec
sbb
sahf
sbb
test
push
addr16
inc
mov
movs
mov
xchg
stc
jmp
pop
and
or
sti
rol
loopne
call
pop
sbb
sbb
call
outs
fsub
lock
push
cmp
mov
mov
pop
mov
cmc
cwde
je
bound
jecxz
cmp
xchg
fsubr
adc
pusha
js
out
add
fsubr
xchg
in
fist
call
mov
fisttp
jl
mov
mov
sbb
dec
les
aam
jmp
and
ret
cs
sub
nop
fs
xchg
pop
xchg
dec
push
or
sbb
add
adc
push
(bad)
test
ror
mov
mov
xchg
dec
mov
adc
loopne
cld
or
into
imul
mov
sub
loope
adc
mov
movs
(bad)
dec
fstp
mov
sub
mov
ds
bound
lods
xchg
push
in
jg
mov
iret
sub
sbb
dec
sbb
leave
mov
mov
sub
and
inc
cli
mov
or
ficom
dec
inc
xchg
mov
cmp
outs
jle
mov
xchg
xchg
mov
cmp
daa
cwde
outs
in
push
fild
xchg
add
pushf
adc
fadd
ret
jb
int
jo
nop
sti
push
xlat
pop
(bad)
adc
call
imul
mov
shl
aas
dec
pop
fild
jg
mov
mov
int
mov
cs
cmp
in
push
push
retf
js
cmp
pop
mov
dec
push
in
inc
xor
xchg
mov
and
leave
es
inc
fmul
inc
pop
push
fisubr
fistp
ret
sbb
aam
into
call
outs
or
push
popa
jns
sub
int3
in
fmul
inc
xlat
pop
cmc
cmc
sahf
pop
outs
lods
pop
mov
adc
xchg
in
mov
or
add
stos
out
rol
loop
cmp
pushf
icebp
inc
stos
lods
and
adc
iret
sbb
sub
cmp
fild
imul
inc
xor
xchg
mov
jbe
lods
xor
push
js
clc
add
push
cld
mov
loopne
mov
or
xor
fcomp
mov
jge
add
cdq
xchg
jb
leave
inc
fstp
inc
xchg
mov
push
and
call
imul
fadd
mov
pop
aad
cmp
ins
pushf
jg
popa
int
daa
aad
add
iret
add
pusha
xor
lods
call
out
push
loope
loopne
loopne
or
sti
jmp
clc
stos
mov
test
mov
inc
test
mov
or
dec
leave
mov
enter
inc
call
das
pushf
xchg
loopne
jg
sbb
stc
fisttp
rcl
push
pop
sub
or
pop
pop
adc
xchg
add
in
call
xchg
pusha
repz
pop
loopne
mov
fcomip
jge
mov
xor
sbb
mov
int
mov
mov
or
(bad)
mov
pop
jl
jns
mov
add
ss
pop
repz
mov
push
jecxz
inc
movs
(bad)
jge
int3
add
pop
mov
cmp
sub
push
repz
mov
mov
dec
jge
hlt
cmp
mov
ja
ins
sahf
push
stos
lods
leave
ret
nop
call
fsub
arpl
mov
xor
call
cmp
inc
pop
add
pop
adc
or
frstor
outs
jae
dec
popf
(bad)
arpl
(bad)
dec
or
mov
iret
es
iret
and
xor
sbb
cs
mov
dec
or
pusha
push
lds
nop
pop
gs
or
push
inc
jns
mov
add
jl
iret
sbb
pop
test
push
pop
aas
dec
dec
call
mov
mov
(bad)
out
(bad)
fld
mov
fidivr
xchg
sub
push
add
ins
(bad)
fdivr
xor
lds
stc
jl
imul
cdq
pop
sbb
fcom
fild
xchg
mov
(bad)
jmp
add
loopne
ins
mov
add
mov
test
xor
dec
jns
or
mov
inc
fidiv
mov
in
fimul
stc
ret
xor
add
aas
pop
cmp
xchg
jmp
hlt
mov
aas
enter
pushfw
int3
stos
mov
daa
push
jne
mov
and
test
ss
sbb
loopne
jno
into
daa
fidiv
mov
adc
fisttp
idiv
shr
lea
mov
repnz
cli
jb
push
outs
movs
cmp
aas
pop
xchg
push
push
adc
push
or
(bad)
add
dec
push
jno
mov
mov
sub
cmps
lods
push
jb
vpcomuq
leave
pop
and
add
pusha
sbb
daa
outs
or
loopne
push
cdq
lock
icebp
(bad)
fisub
mov
enter
mov
mov
mov
mov
dec
(bad)
jmp
push
sbb
ins
jmp
into
mov
sbb
je
pop
aaa
pusha
or
hlt
adc
into
sub
or
repnz
fwait
mov
cmp
pop
sub
sbb
dec
jae
fbstp
imul
mov
scas
and
sub
pop
loopne
mov
stc
dec
xor
pop
imul
stos
pop
ins
mov
and
sar
rcr
movs
lods
(bad)
into
inc
js
(bad)
mov
(bad)
push
lds
pop
into
(bad)
dec
adc
xor
lods
xor
cwde
pusha
sbb
imul
mov
mov
xor
daa
pop
repz
sbb
out
mov
mov
jecxz
mov
push
jns
mul
shr
push
aas
into
cmps
push
xor
sub
mov
cmp
inc
and
and
fidiv
aas
mov
mov
jg
fidivr
and
jae
and
sahf
pop
(bad)
cmps
shl
mov
cwde
fcomip
push
sub
or
sbb
loopne
dec
jne
test
int3
or
xchg
mov
js
pop
add
adc
sbb
(bad)
in
sbb
cmc
pusha
xlat
rcr
adc
call
fisub
xchg
loopne
push
inc
fwait
imul
mov
dec
in
jno
xchg
xchg
(bad)
imul
pop
pushf
mov
(bad)
jmp
mov
nop
jp
fwait
dec
cld
ins
ffree
repz
sub
push
jg
mov
dec
out
mov
test
mov
outs
aad
add
push
push
and
ja
jg
dec
dec
xor
mov
jae
inc
(bad)
and
add
mov
add
dec
cmp
pop
nop
or
pop
loopne
aaa
clc
dec
lods
ds
mov
lock
hlt
and
sub
jae
sub
aad
sar
in
int3
push
out
mov
sub
fst
aas
mov
sahf
(bad)
shl
(bad)
fcomp
fsubr
mov
pop
inc
mov
jne
jmp
fidivr
cs
mov
inc
in
fdivr
fisttp
jp
sbb
test
jbe
and
push
adc
cmp
mov
scas
adc
adc
jg
cmps
pop
pushf
pop
rcr
sub
jmp
jge
mov
hlt
pop
or
xchg
loope
es
fnsave
div
rol
fist
pop
push
pop
adc
pushf
fild
ficomp
sub
fisttp
xchg
test
and
jns
je
icebp
cmp
or
push
dec
test
call
mov
fsubr
out
daa
and
loopne
test
stc
dec
jl
sar
mov
imul
add
sar
pop
enter
jmp
shr
ds
cmps
sbb
dec
call
pushf
int
adc
jno
test
xchg
stc
dec
loope
addr16
sub
movs
lods
push
and
push
int
lds
and
sub
inc
cmp
jne
xlat
xor
xchg
push
or
(bad)
mov
dec
fs
add
sbb
repnz
retf
(bad)
pusha
and
loopne
repnz
xchg
pop
dec
mov
fistp
dec
xchg
into
sahf
cmp
jbe
(bad)
dec
dec
and
fcmove
push
sbb
xor
pop
xchg
and
pop
nop
push
cmps
ficomp
and
jae
sbb
std
and
xchg
(bad)
push
add
or
adc
xor
sub
loop
fiadd
lea
sub
or
cmp
out
pop
push
sti
xchg
mov
in
jnp
xor
jae
mov
xor
push
cmp
jne
lods
or
xchg
mov
sbb
inc
ret
fiadd
fild
mov
out
pop
or
(bad)
cmp
add
jns
xchg
push
cmp
lods
adc
add
(bad)
ja
sbb
and
fsubp
hlt
sbb
(bad)
and
lds
jbe
inc
adc
dec
inc
test
jb
xor
fiadd
fstp
lock
outs
jle
push
sub
loopne
inc
int3
or
mov
sbb
push
test
add
popf
or
xchg
aaa
int3
jne
dec
jae
icebp
adc
(bad)
jge
rcr
dec
jmp
imul
out
sub
test
out
mov
push
(bad)
loopne
lahf
pusha
cmp
sahf
aam
jle
sar
dec
std
pop
pop
xchg
cmp
mov
std
mov
cmps
push
out
cmp
jnp
xchg
add
mov
dec
push
cmp
mov
cmp
mov
outs
mov
arpl
(bad)
pop
cmp
ficomp
dec
inc
sub
out
or
pusha
(bad)
push
leave
ja
cmp
xor
pop
mov
mov
aam
pop
js
mov
mov
xor
dec
sub
stos
add
adc
fdivr
js
stos
pop
xor
rcr
add
test
shl
icebp
cmp
mov
fisttp
nop
xchg
dec
fstp
mov
fwait
sub
or
adc
popf
mov
sub
addr16
into
(bad)
add
loopne
mov
test
mov
cdq
in
and
aam
push
mov
push
sub
adc
fild
cmps
inc
cmp
lahf
xchg
fbld
push
scas
cli
fisttp
xchg
jmp
js
shl
push
mov
mov
ds
out
call
out
outs
dec
in
(bad)
mov
xor
jno
jne
jg
push
mov
dec
mov
dec
test
rcr
push
cmc
xlat
push
jle
mov
arpl
sar
lahf
or
fistp
aaa
xchg
jnp
fimul
sbb
push
jle
adc
loopne
pop
inc
hlt
adc
sbb
iret
dec
push
pop
add
(bad)
and
idiv
call
sar
push
pop
or
push
push
jo
pop
pop
shr
mov
icebp
or
retf
add
pop
xor
cmp
mov
stos
popa
out
retf
pushf
das
sti
adc
mov
hlt
pop
das
popf
ficomp
jmp
es
xor
sbb
push
loopne
stos
aas
jmp
mov
aam
fstp
sub
push
sub
retf
fcmovnu
add
sti
dec
push
enter
rcr
pop
fistp
dec
jmp
xor
movs
sbb
lds
inc
cdq
(bad)
aam
pop
sbb
pop
jns
outs
shr
jle
adc
push
mov
sbb
xchg
cmp
test
or
jmp
test
pop
mov
sbb
into
mov
mov
aam
adc
(bad)
fwait
adc
scas
jns
movs
out
adc
xchg
rcr
mov
mov
cdq
sbb
dec
stc
enter
cmp
dec
mov
xchg
das
(bad)
mov
ins
fisubr
xchg
mov
shr
shr
in
icebp
jns
jecxz
inc
imul
hlt
or
jb
pop
pushf
inc
sub
add
xchg
inc
inc
xlat
daa
cmp
cmps
jns
adc
fdiv
jg
mov
jne
test
or
test
pop
call
xchg
fisttp
repnz
in
dec
fwait
js
sbb
pop
test
inc
xchg
push
mov
dec
call
movs
dec
(bad)
test
pusha
cmp
cdq
mov
sahf
lods
loopne
and
sub
jmp
xor
arpl
mov
into
pop
neg
cmps
paddusb
ss
enter
loopne
popa
in
push
jmp
pop
loopne
and
pushf
scas
(bad)
into
push
in
loope
(bad)
shl
pop
bound
js
std
cli
retf
jecxz
sbb
jb
sub
pop
retf
retf
xchg
lock
sbb
out
rcl
xchg
adc
mov
cli
adc
ins
mov
mov
loopne
js
xchg
pusha
xor
sahf
add
bound
pushf
repz
lds
push
sahf
in
mov
rcl
leave
pop
dec
inc
out
mov
mov
(bad)
loop
fmulp
fisttp
outs
icebp
add
add
sbb
shl
call
and
test
jp
cmps
fsubr
stc
fld
cmp
adc
inc
add
xor
mov
fbld
je
ds
cld
xchg
sub
inc
cmc
jmp
pop
scas
loopne
pop
mov
mov
int3
sub
pop
jns
pop
xchg
aad
icebp
xchg
aad
and
in
mov
or
xchg
in
pop
push
push
xchg
fstp
sbb
clc
inc
dec
cmps
jae
mov
imul
ins
loop
leave
in
into
jmp
jmp
loop
cmps
jecxz
xor
js
fist
dec
sub
sti
sub
hlt
loopne
ror
jl
mov
les
sbb
loopne
mov
enter
out
xchg
iret
dec
pushf
mov
fld
fldz
aaa
lds
mov
rol
lds
inc
jae
stos
je
inc
fsub
out
jae
fldcw
and
test
int
jns
mov
rcl
mov
lock
iret
push
mov
or
mov
push
mov
cmp
test
dec
push
div
mov
pop
test
sub
dec
pop
sub
mov
pandn
mov
popf
mov
xor
jmp
dec
push
pop
js
push
(bad)
retf
fwait
add
test
add
and
lds
push
pop
je
rcr
jnp
push
loop
sub
mov
mov
lea
mov
mov
pushf
call
sbb
mov
ds
dec
hlt
out
jp
(bad)
jno
into
jno
outs
xor
cs
jns
jb
jo
pushf
or
dec
(bad)
ins
adc
jmp
and
xchg
cmp
rcr
xchg
push
in
icebp
cdq
cs
xlat
enter
and
enter
mov
cmc
pusha
mov
jns
xchg
jbe
and
iretw
loop
pusha
mov
fisubr
shl
inc
cmp
lds
cwde
shl
mov
sub
test
ja
pop
es
fwait
push
mov
leave
pop
or
aam
in
in
adc
xchg
cmps
cmps
mov
das
push
imul
aam
jmp
enter
cld
pusha
les
in
add
and
(bad)
xchg
inc
repz
push
push
mov
dec
sub
pop
hlt
les
neg
mov
pop
jns
jp
jmp
out
pop
int3
leave
mov
ja
inc
pop
nop
(bad)
lods
or
jae
add
jmp
add
mov
mov
inc
and
call
cmp
sub
sbb
sbb
out
pop
into
out
or
js
inc
stos
fsubr
aam
dec
xchg
jge
loope
push
jns
mov
push
js
lds
xor
retf
sub
inc
sbb
loopne
ja
xchg
stos
push
add
xor
pushf
xchg
dec
cwde
nop
(bad)
call
or
aam
xchg
ror
cdq
fwait
and
xor
movs
inc
inc
mov
mov
dec
xchg
mov
xor
push
pop
es
(bad)
jmp
es
test
movs
add
mov
cmp
jmp
fisubr
aas
cmp
add
stos
into
push
shr
and
mov
repz
xor
sub
sub
sbb
jle
lods
mov
pop
es
sbb
es
fild
or
lea
sub
jp
sub
jg
fwait
pusha
fstp
outs
les
repnz
or
mul
inc
js
jp
dec
loopne
(bad)
mov
jl
xchg
and
pushf
xchg
call
pushf
(bad)
(bad)
leave
mov
outs
jmp
call
sbb
into
loop
dec
mov
push
fisttp
mov
mov
dec
dec
fld
jne
pop
inc
shr
xor
aad
in
loop
pop
pusha
xchg
cmp
xor
mov
jns
sbb
cld
fidivr
add
mov
(bad)
(bad)
out
int
pusha
sbb
cmc
jg
stc
dec
sub
mov
xor
sbb
cld
fincstp
add
sub
out
popf
jo
sbb
test
xchg
push
bound
push
fiadd
icebp
pop
mov
mov
aas
dec
sbb
adc
jle
fnstcw
mov
and
inc
leave
cmps
jmp
fsubr
pusha
dec
test
int
nop
xor
dec
(bad)
loopne
out
fcmovu
cmp
nop
add
jns
in
inc
shl
push
push
and
into
pop
imul
mov
mov
mov
lea
loopne
imul
add
dec
outs
lods
loop
xlat
mov
xor
test
call
push
test
xchg
push
jns
dec
in
fs
or
mov
loope
addr16
sbb
call
mov
inc
push
xor
fucomip
xchg
sbb
cwde
jecxz
ror
lock
imul
into
ja
cmp
mov
fucomp
test
fcmovb
xor
or
jmp
stos
jl
fadd
lods
xchg
sbb
mov
and
and
jno
jl
pop
test
jne
test
xchg
loopne
add
lds
cwde
frstor
jmp
sub
stos
data16
dec
js
and
xchg
mov
test
or
repz
and
ins
scas
xor
outs
fstp
add
pop
ret
out
or
enter
pop
in
mov
mov
and
out
aad
out
js
jg
xor
jmp
xchg
retf
xchg
cmps
xor
xor
jmp
pop
loopne
into
(bad)
sahf
dec
add
fs
fwait
(bad)
sub
call
push
dec
fisub
not
jno
cmc
add
js
xchg
out
aas
(bad)
mov
sbb
lds
enter
or
das
cs
mov
in
adc
pop
mov
cmp
xchg
or
repz
inc
cmp
movs
sti
push
jnp
test
sub
sbb
cmps
enter
mov
mov
cmp
pushf
xchg
pop
sub
sahf
pop
arpl
mov
jns
lods
xchg
sub
push
xor
push
scas
test
movs
mov
repz
inc
stos
mov
stc
idiv
dec
mov
sbb
fs
sub
add
adc
lds
mov
mul
xchg
pop
pushf
lds
jne
add
adc
dec
mov
xor
out
jmp
adc
add
xor
mov
and
ja
sub
or
cmps
fsub
out
sbb
movs
mov
sbb
mov
jo
lahf
repz
sub
pusha
inc
jg
not
lea
loopne
xchg
mov
pop
enter
adc
fidiv
les
add
scas
mov
shl
push
xor
lods
mov
mov
cmp
sub
jne
cmp
push
leave
add
xor
or
xchg
pop
pop
sub
aam
push
pusha
jle
test
cmp
into
ret
dec
(bad)
in
mov
add
mov
sub
adc
test
cmp
add
cli
fld
aas
or
pushf
loopne
call
cmps
sbb
xor
xchg
and
dec
fild
stos
(bad)
bound
push
inc
or
inc
add
jg
sbb
adc
daa
inc
fsub
jmp
or
vcvtdq2ps
mov
sbb
aam
lahf
int
mov
cmp
or
push
outs
push
and
pop
jb
or
sub
inc
mov
dec
pop
rcl
xchg
add
lock
das
sbb
sbb
gs
adc
lods
js
cmp
mov
xchg
sbb
call
push
inc
or
sub
outs
pop
rol
and
xlat
mov
jnp
jmp
and
and
jp
mov
dec
xchg
mov
(bad)
sar
test
popf
call
mov
xchg
inc
dec
js
or
cmp
test
data16
outs
add
sahf
pop
scas
test
mov
and
into
into
int3
idiv
jg
mov
mov
popf
xlat
mov
pusha
aad
push
fist
inc
mov
inc
mov
pushf
push
push
and
push
xlat
pop
lods
sbb
push
mov
sub
push
pop
push
jo
pop
and
loope
sti
dec
push
add
mov
cmp
data16
fcomi
and
loopne
jle
xchg
cmps
sbb
sbb
out
push
(bad)
xor
xchg
(bad)
loop
fild
cmps
test
mov
push
fs
and
and
and
les
mov
push
js
sbb
xchg
lea
movs
pop
imul
lock
and
call
mov
in
xor
inc
cmp
ss
and
leave
stos
add
daa
les
popa
sbb
outs
out
mov
jne
les
out
(bad)
pop
mov
pop
mov
jns
sbb
jp
sbb
cld
add
aas
mov
mov
push
cmp
or
fbld
gs
inc
aam
dec
fbld
sbb
mov
mov
pop
push
add
mov
push
mov
cmps
mov
inc
fcom
xor
xor
je
mov
jmp
jmp
fdivr
ins
fistp
xchg
cwde
cmp
repnz
jge
pop
call
fsubr
pusha
movs
sbb
fld
mov
cwde
pop
jp
out
xchg
and
das
cld
mov
and
std
fadd
lock
sbb
stos
leave
dec
jmp
push
clc
jecxz
fmul
(bad)
adc
mov
mov
(bad)
into
xlat
cs
mov
sbb
out
pop
pop
rol
and
call
ret
popa
mov
int3
movs
pop
dec
push
push
cmps
cmp
clc
clc
les
or
mov
lds
cmps
sbb
retf
test
cli
movs
test
js
pusha
shl
xchg
and
cwde
cmp
xchg
int
nop
add
mov
in
and
das
sbb
(bad)
std
fisub
cmp
xchg
into
jae
ja
mov
enter
xchg
adc
mov
pop
cmp
push
mov
data16
jne
sub
jbe
jb
les
adc
jle
xchg
pop
pop
xor
pusha
add
or
mov
bound
enter
xlat
and
ss
lods
iret
push
rcl
push
sahf
fsubr
push
dec
pop
cmps
jnp
pop
pop
jp
inc
cmp
js
push
ror
add
lds
out
mov
mov
aas
sub
into
aad
adc
push
sub
aad
push
std
cwde
leave
scas
popf
ror
(bad)
dec
das
mov
out
fistp
xor
sub
adc
push
out
test
jbe
xor
lock
mov
xchg
(bad)
xlat
js
pop
fld
out
cwde
xor
imul
pop
in
dec
adc
sbb
in
xor
jbe
outs
jl
pop
sub
movs
xor
push
iret
inc
jne
or
stc
and
xchg
xor
stos
and
sub
ffreep
mov
out
jno
aaa
adc
cmps
and
mov
out
mov
fmul
jb
cmp
out
sub
dec
adc
jnp
retf
dec
ror
aam
dec
(bad)
imul
or
adc
outs
xchg
pop
enter
and
mov
cmp
mov
mov
mov
popa
jo
fidivr
in
jns
jl
cmp
xchg
xor
data16
(bad)
mov
jnp
and
(bad)
pop
cmps
lds
dec
out
shl
mov
test
dec
cmps
jns
into
aas
mov
enter
xchg
cwde
mov
arpl
and
jns
or
and
push
xchg
push
sub
outs
out
iret
cmps
aam
mov
ds
pop
loopne
push
aad
jno
jle
cmp
dec
dec
cmc
pusha
mov
loop
ins
out
nop
push
dec
inc
push
loopne
pop
cmp
bnd
fst
pop
adc
ins
mov
jb
add
and
or
rcr
mov
mov
push
int
bound
or
dec
fcmovne
mov
and
fimul
pop
and
imul
sbb
rol
mov
fs
and
pop
loopne
ds
out
punpcklbw
mov
inc
pop
xor
arpl
or
(bad)
or
out
mul
cmp
loopne
push
xchg
mov
pop
jmp
xchg
sub
mov
push
or
out
xor
out
(bad)
in
repz
sub
push
lea
fbld
cli
ss
fs
test
ror
(bad)
loop
inc
ret
adc
sub
test
into
loope
jns
push
cli
pop
ja
js
jne
ss
or
stos
push
outs
test
out
cmp
cmp
and
dec
fisttp
scas
inc
shr
ficomp
push
mov
jmp
dec
xchg
fcom
loopne
dec
in
pop
dec
cmp
adc
fcomp
inc
push
dec
gs
jo
dec
enter
call
in
es
xor
mov
fucomp
sbb
xor
adc
movs
adc
aam
shr
stos
hlt
mov
icebp
ficomp
(bad)
pop
mov
sbb
stos
loop
adc
xor
inc
xor
jo
mov
icebp
in
xor
enter
shl
(bad)
(bad)
mov
test
dec
jmp
inc
jnp
test
cmp
(bad)
xchg
inc
sub
jnp
cli
cmp
or
fist
pop
mov
inc
enter
mov
cmp
retf
repz
cmp
out
mov
jp
fistp
mov
aas
mov
ss
jecxz
out
ret
jmp
mov
repnz
jmp
jo
out
sar
mov
xor
mov
rcr
xchg
sub
or
outs
add
je
dec
scas
mov
aam
mov
add
dec
adc
sti
mov
jp
push
in
ficomp
sar
fwait
scas
shl
(bad)
addr16
xor
(bad)
and
pop
rol
jne
pushf
add
cmps
daa
inc
es
xor
push
inc
fisttp
iret
or
ror
cmp
outs
pop
sbb
out
ficom
cmp
xchg
add
jne
into
or
xor
dec
data16
inc
adc
cld
adc
(bad)
or
pop
push
inc
aam
dec
shl
sub
sub
xchg
ficom
ja
shl
and
add
mov
ds
in
in
(bad)
mov
ja
fist
mov
test
sub
sub
cmp
add
add
call
test
push
pop
(bad)
xchg
(bad)
icebp
adc
gs
repnz
in
push
push
mov
pop
mov
(bad)
lahf
mov
fild
and
in
mov
mov
adc
daa
adc
lock
add
mov
xor
mov
sbb
mov
iret
push
pusha
out
adc
push
pop
fcompp
into
loope
les
inc
dec
mov
xlat
mov
inc
loop
mov
inc
inc
cld
pop
adc
jp
or
jle
aas
mov
or
dec
(bad)
cmc
jb
mov
mov
jns
mul
and
or
mov
dec
iret
sbb
and
inc
adc
outs
(bad)
cmp
mov
or
jge
and
imul
push
inc
push
iret
pop
fiadd
int3
mov
cwde
lods
jo
test
clc
mov
rcl
fisubr
scas
pusha
test
leave
imul
shl
cmp
sti
or
adc
mov
jne
cmp
xchg
add
test
dec
stc
mov
cmp
les
inc
test
pop
mov
sbb
mov
xchg
int
mov
mov
stos
jl
dec
pop
pop
cmc
and
dec
pop
dec
out
fidivr
and
into
sar
(bad)
cli
push
add
add
mov
adc
mov
scas
imul
imul
fcomp
(bad)
int3
or
mov
mov
mov
nop
(bad)
test
xchg
loopne
mov
inc
(bad)
dec
stc
jne
movs
inc
sahf
pop
aad
aam
inc
pusha
dec
hlt
sub
jno
lds
sbb
cmps
cli
aam
mov
les
and
iret
lods
ud2
mov
(bad)
js
test
and
xor
sahf
jae
lock
fild
push
mov
ss
lahf
loop
int
xchg
push
jmp
sbb
imul
rcr
repnz
jmp
nop
pop
ins
popa
inc
mov
cmp
jae
sti
jae
fistp
xor
jo
dec
inc
lahf
les
pop
cmc
jecxz
xor
test
add
pop
movs
sbb
sbb
lods
jbe
mov
pusha
stc
cs
add
loop
inc
sub
mov
fnstcw
inc
sbb
jo
jl
xor
into
fbld
adc
pop
or
neg
fmul
daa
es
sub
gs
fmul
nop
test
sbb
xlat
sbb
dec
fbld
jbe
cld
movs
fdivr
dec
push
popf
mov
fwait
ins
scas
lahf
nop
pop
sbb
lahf
scas
push
sub
mov
xor
pop
(bad)
cmp
scas
frstor
sti
adc
cmp
fbstp
loopne
or
inc
push
pop
call
outs
mov
mov
sbb
loop
inc
lahf
inc
fisub
pop
aas
jbe
ret
shl
call
sbb
pop
gs
fcom
and
cmp
inc
imul
in
jb
je
out
jbe
loope
adc
ret
xchg
loop
je
inc
or
cmp
loopne
mov
in
and
inc
div
push
int
sub
pop
cmp
lock
lea
fidiv
pusha
data16
shl
nop
push
add
jae
pop
push
ins
addr16
inc
(bad)
push
pop
xor
or
pop
test
fsubr
leave
jg
and
cmp
mov
mov
push
outs
daa
mov
dec
jp
icebp
push
or
sbb
push
adc
pop
push
and
mov
adc
xchg
adc
outs
push
fcom
shr
pop
sub
mov
pop
mul
mov
in
repnz
fnstsw
sbb
(bad)
into
push
jne
fsubr
in
test
pusha
fcom
pop
jbe
xor
fcom
iret
push
pop
cwde
(bad)
push
fwait
cmc
pop
or
xchg
sti
stos
imul
push
fnsave
(bad)
xchg
ins
fadd
inc
push
or
aam
sub
out
jecxz
mov
jno
cmps
popf
(bad)
fsubr
jl
pop
jp
fmul
ja
fcom
push
imul
mov
cmc
mov
sub
cwde
fnstsw
cmp
lods
xor
out
push
pop
ins
fsub
mul
pop
ja
jne
clc
push
loop
aam
xlat
mov
test
pusha
in
call
sbb
js
jno
lods
enter
arpl
aam
push
out
fdivr
cmp
ja
lock
jne
cs
pop
leave
das
mov
fcmovnbe
loopne
jmp
je
sbb
pop
mov
dec
nop
or
loopne
test
lods
ror
retf
cmp
jno
repz
adc
fsub
cmp
xchg
and
inc
add
cmc
push
pop
xor
ret
mov
sbb
xchg
(bad)
pop
fld
xchg
mov
pushf
cmp
pop
push
getsec
and
dec
sbb
cli
mov
ror
and
in
sub
mov
fcom
in
push
mov
dec
fsubr
jmp
leave
cdq
and
cwde
leave
jns
stc
jmp
stos
mov
cwde
adc
das
dec
aad
retf
ins
test
aam
fstp
fiadd
jmp
jmp
lds
push
xor
jnp
repz
mov
fdivr
imul
sbb
xor
cmp
xor
sub
jnp
fmul
into
loopne
xor
inc
jae
fmul
std
in
mov
mov
cmc
sar
cwde
(bad)
popf
dec
ss
popa
fdiv
mov
inc
ret
fdivr
fnstsw
out
neg
mov
push
xor
inc
(bad)
leave
sbb
les
mov
cmp
fsubr
arpl
push
mov
push
push
fcom
lds
pusha
push
dec
cmp
inc
inc
cwde
mov
pushf
cmp
or
mov
ja
fsubr
xlat
movs
adc
pop
pop
sbb
jno
sub
aad
lea
xchg
cmps
sbb
cmp
fucomi
out
mov
adc
xchg
mov
loope
fdiv
cmp
lock
fdivr
rcr
pop
xor
in
mov
sbb
stc
inc
fdiv
push
fcomp
bound
fbld
pop
ja
ret
fsubr
(bad)
loopne
call
sti
iret
push
pop
ficom
repz
and
fnstsw
add
in
ins
xor
(bad)
out
lods
jb
cmc
pop
out
push
test
test
adc
clc
sbb
sbb
and
or
push
cmp
lea
fyl2xp1
inc
imul
(bad)
inc
mov
test
fmul
gs
mov
fistp
push
dec
xchg
shl
into
fmul
push
(bad)
cmps
fimul
adc
lds
pop
inc
push
pop
ror
jle
sahf
pop
cmp
out
xchg
shl
jne
call
xlat
ss
xor
imul
inc
sub
mov
fsubr
cmp
jg
test
mov
mov
jo
fcom
add
jmp
loop
and
movs
cmps
fsubr
shr
dec
jg
jg
cmps
jmp
add
dec
fcomi
mov
dec
mov
lahf
(bad)
aad
into
push
fdivr
arpl
xor
outs
dec
xchg
fwait
add
fmul
lods
fdiv
or
mov
xchg
(bad)
jge
fcomp
pushf
push
mov
add
rcl
loop
or
call
cmovbe
push
mov
xchg
cmp
inc
fcomp
jecxz
mov
fdiv
xor
call
out
cmc
and
xor
(bad)
in
pop
adc
stos
fsubr
xor
inc
std
adc
ficomp
cdq
xor
or
inc
loopne
mov
dec
pop
jg
xor
or
mov
cs
fsubr
jne
mov
fcom
mov
jmp
xor
int3
jmp
dec
mov
mov
push
fnstenv
dec
or
sbb
jo
mov
adc
mov
(bad)
(bad)
cmp
mov
dec
aaa
(bad)
xor
push
fs
jae
movs
jno
test
mov
out
sub
(bad)
dec
outs
loop
jl
sti
sahf
cli
fcom
clc
jmp
cmp
cmps
sbb
sub
fsubr
and
xchg
jns
jo
push
fcomp
ret
push
std
das
cdq
or
shl
enter
ret
inc
pop
dec
fadd
dec
jae
adc
rcr
mov
test
js
or
popa
xchg
fsubr
aas
popf
dec
push
gs
pop
fild
and
cmc
fsub
mov
(bad)
pusha
mov
xor
aad
xor
jne
aaa
nop
mov
jns
sub
add
cmps
ins
fsub
aas
or
mov
push
mov
sub
call
pop
dec
fmul
ss
dec
test
ret
push
lods
jg
or
adc
clc
add
outs
pop
js
mov
rcl
out
cmp
sbb
jb
idiv
mov
jae
int
mov
(bad)
data16
sub
pop
leave
movs
push
outs
xor
mov
std
js
sub
fcom
sahf
mov
xlat
call
pushf
cmp
fcomp
in
xchg
fwait
sub
push
cwde
sbb
test
adc
stos
mov
dec
jecxz
cmp
outs
adc
and
pop
mov
and
(bad)
int
aad
popa
fcom
fcom
mov
cs
lods
and
mov
fmul
mov
and
pop
push
shl
xor
cld
cwde
outs
push
in
adc
loopne
lock
mov
lods
push
jb
or
cs
clc
ror
inc
push
sbb
test
fs
sub
mov
cli
test
dec
dec
xlat
pusha
jg
jae
inc
pop
sbb
mov
call
call
fisttp
rcl
(bad)
retf
mov
mov
add
push
pop
sbb
scas
mov
js
or
out
or
xlat
sub
push
cmp
outs
stos
pop
pop
pop
rol
xor
(bad)
cmps
or
push
je
pop
es
add
or
fcom
push
jp
dec
sub
(bad)
fdivr
mov
fsub
leave
(bad)
pop
push
jne
fsubr
cwde
xor
in
jb
ret
jecxz
stc
fadd
and
adc
push
iret
test
repnz
cs
fdiv
loop
fcomp
cbw
adc
sti
or
ds
or
out
xchg
cwde
jg
jle
(bad)
push
pop
mov
stos
rol
sbb
ficom
sub
imul
lods
fcom
ins
mov
mov
cmps
fnstcw
xchg
xchg
addr16
daa
(bad)
loope
jg
shl
xor
pushf
add
aaa
mov
push
pop
add
out
sub
and
test
(bad)
fcmovbe
sub
xchg
dec
push
cmc
shl
mov
jns
xchg
or
fdiv
sub
cmp
jae
cmp
jne
jmp
pop
cmp
out
jmp
xlat
jmp
test
inc
fcom
js
add
repz
(bad)
adc
ror
dec
push
mov
and
xor
test
fdivr
cmp
push
out
fmul
iret
pop
sar
sbb
sbb
data16
xor
xor
jmp
inc
popa
test
fsubr
icebp
pop
(bad)
fdivr
clc
sbb
push
inc
jnp
pushf
in
(bad)
stc
cmps
mov
or
jmp
(bad)
or
push
lods
rol
and
cwde
ss
pop
arpl
mov
out
xor
nop
sbb
push
retf
cld
rcr
clc
jp
(bad)
aaa
cmp
std
pop
fmul
loope
mov
pop
pop
sbb
cmps
cmp
xor
scas
data16
popa
xchg
fst
ins
xchg
xor
ins
enter
pop
cmc
lea
fdivr
xchg
stos
leave
and
fdiv
lods
mov
repz
js
xchg
fdivr
dec
mov
pop
and
call
jo
and
jge
pop
cld
fs
dec
call
lahf
pop
sub
mov
fcomp
ret
mov
jnp
mov
cmp
or
fisubr
push
lods
inc
inc
xchg
pushf
(bad)
ds
imul
add
retf
sub
aam
movs
and
or
cs
stos
xlat
and
and
cmp
arpl
mov
fstp
inc
mov
adc
adc
les
dec
dec
push
adc
shr
(bad)
fmul
out
mov
fcom
sub
jp
fcom
ret
call
or
xchg
mov
pop
rcl
push
test
adc
repz
mov
inc
push
es
push
cmps
inc
pusha
cld
jno
xor
mov
mov
rcl
mov
fdivr
(bad)
neg
adc
xchg
mov
retf
xlat
jae
mov
xchg
sti
mov
push
sub
pop
in
mov
adc
cmp
(bad)
push
fdivr
fistp
xlat
push
mov
hlt
cmp
push
add
cmc
pop
call
inc
pop
or
or
pop
fmul
push
cmp
into
js
push
imul
sub
loopne
or
rsm
mov
in
adc
fcmovu
in
mov
jl
and
jmp
mov
sub
mov
inc
enter
xchg
daa
mov
fnstenv
std
mov
addr16
fsub
lods
jne
fsub
out
psubusb
ins
xchg
jbe
loope
add
in
sahf
pop
mov
loop
inc
arpl
push
(bad)
enter
add
mov
inc
cmp
retf
fsubr
ret
adc
pushf
pop
fdiv
ins
cwde
mov
fsub
or
adc
sbb
out
pop
call
fmul
pop
mov
sub
int
fsub
call
pop
mov
sbb
enter
enter
arpl
push
mov
sub
push
mov
sub
mov
iret
fdivr
push
ja
cld
sbb
cmp
fs
cmps
mov
add
scas
pop
xchg
mov
ret
and
pop
inc
js
pop
add
xchg
ins
pop
push
mov
cmp
cmps
inc
fsub
sub
cmps
repnz
retf
(bad)
daa
rcpps
pop
cmc
int
pusha
sbb
cmp
(bad)
sbb
mov
push
cdq
sub
jbe
ja
mov
pop
xlat
retf
jle
(bad)
mov
xor
jae
fmul
test
fwait
rcr
mov
dec
cmps
and
mov
pop
add
dec
fcomp
push
enter
sbb
ret
add
popa
mov
in
cwde
call
or
shl
cmp
cmp
mov
mov
and
in
(bad)
mov
test
fdiv
mov
nop
into
and
inc
xor
pop
dec
and
mov
cs
mov
cmp
fmul
cmp
ficomp
scas
cwde
inc
add
jns
shr
cmc
call
adc
add
dec
lock
(bad)
pop
xchg
loopne
push
(bad)
ja
fimul
mov
stos
clc
repnz
push
and
rol
xor
dec
fucom
mov
popaw
in
inc
dec
xchg
scas
shl
cli
ret
fsub
push
fst
fcom
add
fadd
js
or
ret
pop
clc
pop
dec
or
(bad)
pop
mov
add
adc
xchg
out
xor
sbb
mov
sbb
jne
pop
addr16
repnz
not
mov
add
mov
mul
mov
add
mov
sbb
fsub
aad
rcr
cld
xchg
mov
dec
jle
cmc
gs
mov
fdiv
inc
mov
mov
cmps
ins
dec
xlat
jb
xchg
aam
int
push
cdq
fidivr
addr16
sub
js
repz
and
mov
pop
fucomp
out
scas
shl
(bad)
fcom
aam
sub
call
pusha
xchg
fld
xor
(bad)
push
(bad)
jge
adc
pop
jp
push
out
fcom
clc
dec
dec
xor
mov
(bad)
fdivr
les
test
stos
(bad)
repnz
pop
mov
std
mov
or
ret
data16
mov
shl
mov
inc
jb
movs
pop
cs
xlat
adc
mov
scas
mov
cmp
ret
cmp
fstp
jo
iret
dec
adc
sub
push
mov
in
fcom
push
add
jmp
(bad)
(bad)
xor
dec
scas
mov
add
or
fucomp
mov
push
js
add
dec
int
fimul
inc
loopne
or
mov
shl
mov
loopne
icebp
fcomp
adc
mov
dec
ja
sub
movs
inc
in
fsub
dec
push
lock
ins
inc
mov
repz
xor
sbb
xor
out
fcom
or
sub
xor
adc
jmp
aad
pop
aas
xor
sbb
mov
push
xor
mov
sbb
push
arpl
xor
inc
cmps
fcmovnu
retf
lock
mov
xor
test
popa
je
dec
dec
fcom
jle
retf
jae
dec
test
xchg
fadd
pop
in
(bad)
imul
cmps
xor
(bad)
rcr
loop
sahf
enter
(bad)
(bad)
arpl
jo
dec
cld
cmp
push
sbb
mov
stc
fidiv
sbb
adc
mov
bts
inc
popa
sahf
adc
pop
sub
leave
and
jbe
fcom
cmp
add
sub
fcom
test
push
cwde
and
pop
retf
add
iret
push
(bad)
cmp
inc
dec
(bad)
push
mov
les
jl
adc
cli
push
call
jp
push
ret
(bad)
adc
shr
sbb
jl
inc
or
aaa
outs
mov
mov
inc
pusha
sub
pop
jnp
out
ins
and
xchg
mov
fidiv
mov
leave
int
out
fsubr
jle
stos
mov
pop
call
or
or
and
adc
cli
fsubr
adc
fimul
xchg
xchg
sbb
push
pop
cmc
sar
retf
in
cwde
mov
xchg
jae
fadd
stc
jo
cmp
xor
dec
sub
stos
and
cmp
fstp
add
push
sbb
pop
fsubr
mov
sti
shl
ja
cmp
shl
add
fucomi
jmp
cmp
ins
mov
(bad)
outs
imul
mov
fild
xchg
add
push
(bad)
fwait
jb
push
jg
in
lds
retf
push
cmp
dec
jl
fdiv
imul
or
mov
js
add
sbb
xor
or
adc
cmp
test
ds
in
aam
push
and
fst
dec
rol
fs
push
test
(bad)
jo
fdivr
(bad)
repz
nop
xchg
call
mov
and
fdiv
mov
mov
sbb
pop
retf
mov
pop
pop
add
inc
and
or
mov
(bad)
mov
cmp
or
mov
jle
cmp
pop
mov
adc
sahf
push
retf
sub
pop
std
gs
mov
pop
fisttp
push
fsub
sub
std
test
fmul
sub
inc
push
add
xlat
xchg
add
jb
repnz
mov
fmul
gs
std
mov
mov
inc
loop
cwde
sub
repz
mov
fcom
jle
scas
rcr
imul
push
push
dec
das
fisub
dec
clc
sbb
leave
shl
fadd
fcom
xchg
clc
mov
retf
(bad)
fdivr
dec
xchg
jp
inc
loopne
fsubr
mov
pop
arpl
(bad)
pop
sub
mov
or
in
mov
push
inc
mov
mov
nop
inc
jg
adc
in
lds
push
sbb
sub
fldl2t
scas
xor
(bad)
push
fnstcw
faddp
or
dec
push
mov
cmp
pop
xchg
cli
dec
add
data16
ret
js
fadd
bound
jmp
jl
stos
fsubr
or
dec
adc
ror
pop
push
dec
imul
mov
push
xchg
pop
enter
popf
(bad)
adc
cmps
iret
mov
cli
dec
dec
mov
cmp
retf
inc
jg
adc
cdq
ins
out
fist
ins
lds
outs
sub
jae
rcl
dec
outs
(bad)
jae
xchg
cli
mov
sar
jl
test
(bad)
or
inc
icebp
adc
xor
out
(bad)
fisub
pop
imul
cmc
fldenv
inc
or
out
int
movs
out
and
mov
(bad)
push
inc
das
mov
ja
iret
aas
das
or
ret
out
lea
enter
aad
in
test
sub
push
sahf
and
lahf
ficomp
dec
jbe
cdq
(bad)
movs
adc
cwde
pop
pusha
scas
sti
pop
in
mov
(bad)
jmp
and
loopne
cmp
mov
xchg
inc
xchg
rcr
or
inc
aas
and
push
inc
fbld
inc
push
and
in
out
fadd
mov
inc
pop
retf
aam
out
jg
dec
aas
jp
and
in
and
xor
jnp
movs
scas
pop
pop
sub
mov
iret
sbb
add
movs
out
xchg
arpl
mov
mov
hlt
fadd
mov
pop
mov
loopne
ja
dec
dec
jns
pop
fwait
in
aaa
fcom
mov
add
add
cmps
sbb
test
aad
mov
pop
cdq
push
leave
add
xchg
mov
shl
mov
clc
adc
jmp
xchg
das
rcr
dec
xor
fbld
mov
add
jae
xchg
push
cmp
xchg
push
(bad)
lods
jno
ja
ss
add
(bad)
inc
sbb
fild
dec
mov
aas
scas
and
mov
in
sub
xchg
daa
xor
lahf
push
ficomp
fs
push
or
jo
and
loopne
jmp
push
jne
aas
iret
push
aad
stc
(bad)
lea
hlt
leave
das
inc
jge
les
out
xchg
jno
pop
and
out
inc
outs
loopne
dec
push
cmp
and
cmp
int
xchg
mov
xor
cs
xchg
dec
pusha
sti
je
cdq
dec
mov
loopne
xchg
neg
imul
pop
std
sub
sti
mov
call
stc
xor
dec
aad
jae
gs
jns
xchg
xchg
jl
and
or
repnz
mov
add
ja
push
mov
aaa
mov
push
js
loopne
xchg
xchg
cld
sub
sub
pop
mov
loopne
pop
mov
aas
(bad)
rcr
out
jle
mov
sbb
cmps
stos
push
mov
loopne
jno
imul
mov
lahf
cmp
adc
cmp
fidivr
lds
mov
inc
jnp
aad
fisttp
cmps
aaa
mov
in
sti
and
fnstcw
retf
pop
and
mov
cmps
mov
inc
imul
iret
jns
imul
cmp
pop
sar
jb
jl
sbb
fnstcw
mov
jmp
js
daa
sub
push
sahf
jnp
loopne
or
sub
and
into
inc
in
push
imul
mov
add
or
cmp
aas
jne
inc
inc
(bad)
addr16
fisttp
jne
mov
dec
xlat
js
nop
test
fwait
inc
pushf
xor
mov
or
xchg
and
and
lahf
fadd
and
test
ds
pop
inc
loopne
js
xor
or
fistp
(bad)
and
lahf
in
into
pop
pop
xchg
push
mov
sahf
loopne
push
ficomp
test
sub
pop
fist
pop
(bad)
ins
xchg
sub
stc
test
push
adc
mov
cwde
dec
bound
cmps
mov
leave
adc
les
sbb
jg
cmp
add
loope
push
xchg
cmp
mov
popa
and
je
mov
sbb
ret
pop
xor
(bad)
and
ja
push
mov
and
cmp
or
fdivr
lds
xor
js
out
lods
xor
add
sbb
jmp
ficom
cdq
aaa
xor
or
cmp
pusha
mov
pop
push
add
mov
pusha
cmp
stos
je
xchg
loopne
sub
int
dec
or
and
and
cld
and
test
pushf
lds
rol
sbb
xor
iret
imul
repnz
inc
jmp
adc
loopne
enter
stos
cli
sbb
lods
push
jne
jmp
dec
mov
je
xchg
or
push
lock
repz
sub
inc
outs
mov
aad
cmp
pop
lds
ret
and
add
pop
jb
adc
(bad)
ja
jmp
adc
aad
aas
loopne
pop
outs
fisub
push
ja
fistp
or
mov
push
inc
xchg
adc
or
mov
out
jp
test
jnp
jnp
and
lahf
xor
and
call
and
repnz
mov
ins
mov
rcr
dec
jo
sbb
movs
nop
xlat
mov
ror
out
jo
adc
cli
cmp
stc
fdiv
mov
test
mov
dec
pop
test
fild
scas
mov
pop
cmps
js
jne
ficomp
xchg
(bad)
and
xlat
pusha
mov
fidivr
leave
jns
xchg
mov
repz
mov
movs
push
pusha
sub
stos
push
pop
enter
cwde
fstp
ror
cmp
pop
fcomp
pop
dec
rcl
sub
lods
cmp
adc
cmp
or
sbb
cli
les
cli
inc
pusha
ss
jns
jp
cmp
and
vrsqrtss
and
mov
inc
stos
sub
or
mov
call
mov
cmps
loop
lea
push
in
mov
xor
cmp
repnz
jl
xchg
shl
pop
les
(bad)
shr
inc
cmps
mov
test
mov
inc
pop
add
push
xor
adc
add
inc
jb
jg
add
or
jno
sub
pop
or
loopne
dec
aad
aad
xchg
fsub
retf
into
scas
dec
push
rol
call
xor
or
ins
inc
dec
pushf
cmps
jns
pop
push
dec
inc
test
(bad)
cli
xchg
jmp
js
xchg
les
xchg
(bad)
pop
pop
stos
cmp
inc
mov
movs
ror
push
popf
ror
pusha
sbb
jns
stc
push
push
jae
mov
shl
dec
imul
pop
enter
leave
call
iret
cwde
inc
inc
push
je
pop
jle
ss
int3
(bad)
jmp
xchg
mov
jb
jg
aam
fisttp
loope
push
pop
push
cdq
sahf
movs
ficom
pop
or
mov
movs
outs
mov
cmp
cmp
cmp
add
xchg
(bad)
xchg
mov
std
arpl
jl
sbb
xchg
adc
cmp
xchg
aad
aas
jmp
xor
ret
fucomip
lods
mov
jb
nop
mov
jg
imul
(bad)
in
or
je
mov
cmp
and
or
jl
or
mov
dec
mov
xor
nop
loopne
ror
test
into
and
xor
movs
loope
lds
mov
cwde
and
rol
adc
jge
nop
mov
mov
addr16
repz
fdivp
jbe
mov
dec
jle
xor
add
sub
cmps
jns
add
sub
inc
pop
fwait
dec
test
ins
std
cmp
jbe
sbb
cwde
mov
push
add
movs
inc
or
mov
mov
dec
sbb
push
je
lock
fbld
xlat
xor
dec
(bad)
pop
cmp
pop
repz
inc
or
int3
dec
and
lds
mov
fiadd
dec
cmc
xchg
icebp
aad
fmul
inc
pop
rol
pusha
(bad)
aas
in
loopne
gs
inc
pop
loopne
and
mov
inc
add
mov
iret
jae
(bad)
test
test
fidiv
rol
stos
pop
call
or
out
pop
sti
ins
jecxz
and
push
int
push
jns
mov
(bad)
and
stc
cmc
jp
fisttp
arpl
mov
xchg
fdivr
mov
std
and
in
cmps
test
sahf
pandn
fcomp
lods
(bad)
movntq
out
sbb
xchg
daa
imul
add
sub
jmp
or
enter
pop
dec
fisttp
cmp
aad
stos
fsub
cmc
bound
xor
in
pop
enter
into
shl
je
adc
fcomp
push
lods
dec
pusha
imul
out
fild
xchg
push
aas
hlt
or
xchg
gs
hlt
sti
sbb
add
xor
sub
sbb
mov
push
xor
cmc
cmc
add
pop
icebp
push
bound
dec
sahf
ins
loopne
pop
jg
fs
in
xchg
inc
dec
outs
sub
push
and
gs
repnz
cdq
cmc
lahf
movs
test
cmps
mov
aaa
sti
stos
cmp
and
lods
leave
fcmovnu
xor
aam
xchg
cli
xor
push
scas
in
dec
aaa
loopne
sub
fdivr
addr16
out
push
or
dec
jge
les
cwde
rol
xchg
test
sbb
or
xor
xor
or
clc
test
fbstp
test
mov
es
fist
inc
push
in
mov
std
dec
repnz
jb
(bad)
xchg
repnz
nop
dec
mov
outs
mov
ins
fsub
or
in
(bad)
mov
aaa
sub
mov
in
ret
into
jecxz
stos
pop
or
xchg
scas
inc
(bad)
ror
shl
enter
daa
mov
ror
xchg
outs
inc
inc
aad
lods
loop
xchg
jge
inc
mov
mov
call
mov
and
push
mov
js
jno
cmp
pop
pop
lea
mov
int3
xchg
mov
call
xchg
pop
push
fbld
mov
xchg
outs
push
mov
jl
xchg
movs
jg
sub
ss
mov
daa
int
test
mov
xchg
std
ror
xchg
sahf
fs
xlat
fisttp
ds
fild
sbb
ins
adc
jge
cmp
or
test
jns
pop
and
xor
clc
jmp
bnd
xlat
pusha
mov
lods
cdq
dec
lahf
enter
mov
pusha
cmp
icebp
cld
out
inc
xor
and
outs
pop
fisub
js
dec
jmp
lods
icebp
and
int3
mov
adc
add
mov
leave
repnz
pushf
mov
and
mov
push
rol
mov
imul
fbld
js
cmp
repz
(bad)
xor
jmp
xchg
rcl
jae
jmp
cmp
nop
sbb
sbb
xchg
outs
retf
fcomp
cdq
shl
nop
in
or
jb
lds
push
inc
dec
mov
test
xor
pop
lock
jno
je
ss
in
push
(bad)
stos
inc
or
push
aad
mov
jo
xchg
mov
mov
pushf
loopne
push
out
pusha
jle
aaa
mov
mov
sub
(bad)
mov
jg
sbb
movs
dec
cmp
sbb
bound
add
fistp
cmp
imul
in
xlat
and
pop
mov
test
push
aas
ds
pop
or
retf
or
cmps
cs
lea
xor
inc
fcmovb
sahf
aas
cwde
fbld
cmp
xlat
push
mov
inc
sub
aam
and
push
cs
aaa
dec
mov
mov
jae
mov
dec
loope
imul
xchg
lds
mov
inc
scas
push
fbld
fisub
les
fwait
jb
inc
(bad)
in
pop
adc
fild
sbb
lea
call
not
mov
sbb
mov
retf
cdq
jecxz
or
inc
xchg
push
fist
mov
test
pusha
lea
test
fsub
cs
dec
sbb
and
or
hlt
js
fmul
ret
test
movs
xlat
dec
fadd
bound
shl
mov
mov
pop
mov
add
in
mov
call
adc
fmul
rcl
aas
push
shr
dec
jp
xor
xor
cmc
cmp
lock
push
xor
adc
cwde
into
addr16
out
into
push
hlt
scas
outs
addr16
je
dec
xchg
cmps
or
int3
or
mov
cmp
push
push
adc
mov
push
les
cmp
adc
das
cmps
jnp
mov
cmp
stos
sbb
jns
push
das
cmp
pop
mov
jle
push
inc
clc
add
cmp
fsin
data16
nop
inc
xchg
aam
sahf
pop
loope
or
ins
mov
add
leave
rcr
pop
xchg
sub
sub
mov
cmp
push
sbb
xchg
scas
retf
daa
and
imul
popf
js
mov
and
xlat
fistp
and
ret
sub
pushf
sbb
imul
data16
rcr
daa
and
into
outs
ret
and
fist
aam
add
mov
fucomip
mov
fstp
mov
iret
cdq
inc
cmp
mov
pop
push
jns
sbb
inc
cmp
in
ins
pusha
cdq
cmp
test
cmp
xor
(bad)
mov
stc
es
push
mov
mov
in
cwde
mov
or
dec
scas
pop
pop
sbb
pusha
add
ret
(bad)
jmp
add
and
dec
push
aaa
sub
sbb
neg
dec
shl
into
or
mov
push
call
jp
inc
push
imul
mov
mov
in
cmps
sbb
jp
sti
adc
mov
pusha
jbe
das
fidiv
loop
(bad)
or
sub
idiv
mov
imul
pusha
sub
pop
add
sar
stos
imul
loopne
and
mov
mov
sub
and
jl
pushf
aas
aas
cmp
mov
sbb
xchg
test
sub
hlt
and
ja
cmp
push
push
jno
loopne
nop
les
out
mov
sub
hlt
mov
add
lahf
pop
sub
mov
and
dec
dec
sbb
(bad)
retf
lds
mov
ja
lock
rol
and
or
(bad)
cmp
xchg
(bad)
shr
pusha
xor
fadd
pop
xchg
adc
cmp
mov
push
jmp
test
sub
jp
into
or
inc
jmp
or
and
sub
aam
sbb
dec
lock
xchg
out
inc
inc
mov
retf
cwde
jmp
lods
shl
mov
sub
adc
add
or
xor
test
mov
pop
test
mov
lods
xchg
push
and
push
xlat
jne
rol
dec
aas
enter
(bad)
shl
ficomp
xchg
fisttp
jnp
dec
mov
dec
nop
imul
lea
sub
mov
mov
loope
jmp
test
fistp
cmps
int
f2xm1
dec
int3
fsubr
loopne
call
pop
adc
sub
add
fbstp
data16
fdivr
out
imul
stos
jg
dec
mov
sbb
mov
adc
xchg
nop
pusha
(bad)
stos
fisub
and
ds
push
inc
jmp
xchg
add
pop
sub
into
sub
lods
xchg
push
xor
sbb
inc
or
push
aad
pop
xchg
scas
mov
in
loope
jp
push
or
punpcklbw
cmp
mov
aam
inc
test
fisubr
jns
jo
cmps
sbb
push
hlt
out
loopne
sub
repz
stos
mov
mov
shr
out
call
jae
(bad)
out
mov
or
xchg
jmp
adc
cwde
arpl
xchg
mov
cmp
sbb
aam
jnp
sbb
in
or
loopne
fcom
pop
mov
out
jmp
xchg
pop
pushf
jp
sub
mov
add
sbb
jnp
popf
pop
and
lds
repnz
push
mov
mov
pop
stc
jns
lds
fild
je
dec
jl
leave
jne
outs
aas
push
adc
scas
in
jge
fs
dec
enter
leave
std
push
jae
mov
pop
push
cmp
dec
icebp
fmul
(bad)
adc
into
push
fstp
and
test
(bad)
popa
(bad)
fistp
(bad)
push
js
loopne
push
mov
mov
push
and
loop
cmp
out
cli
dec
dec
js
or
jg
pop
sbb
jne
xchg
xor
xlat
xchg
add
daa
mov
out
inc
mov
xchg
xchg
and
test
add
mov
ss
ins
cmp
rcl
(bad)
mov
call
adc
xor
jb
inc
sbb
int
add
sbb
jg
sbb
add
jle
or
push
jmp
mov
mov
inc
aas
fmulp
dec
in
sub
push
pop
hlt
mov
(bad)
repz
pop
mov
fild
xor
dec
iret
jnp
call
push
addr16
sbb
fist
inc
mov
xchg
and
hlt
xchg
mov
jo
cmp
dec
cmp
jecxz
into
aas
adc
push
pop
aad
cmc
xor
cmp
adc
repnz
repz
adc
aas
push
scas
pop
fdivr
sbb
stos
push
mov
(bad)
jg
fild
fistp
xor
xchg
in
mov
push
int3
cmp
fbstp
mov
xor
loopne
aad
sti
pop
imul
es
xchg
push
xchg
das
cmp
fdivr
loopne
xchg
inc
data16
rcr
add
cmps
push
xor
lahf
(bad)
lahf
outs
call
push
jo
das
pushf
adc
outs
jl
aad
push
dec
or
call
(bad)
rol
outs
jae
ret
lahf
repz
push
and
hlt
jnp
jg
fisubr
dec
addr16
(bad)
loopne
or
ds
push
xor
repnz
push
jne
(bad)
cmps
out
in
inc
retf
pop
nop
xor
shl
into
pop
cmp
cli
fsub
inc
and
mov
xchg
addr16
fiadd
jmp
sub
cld
dec
jl
pop
push
jae
jno
cmp
xchg
xchg
scas
js
jmp
mov
scas
pushf
icebp
jnp
aas
js
mov
jbe
xor
fbld
pop
(bad)
nop
jns
lahf
aad
nop
push
stc
cmps
xlat
xor
sbb
or
push
pop
xor
mov
rcr
ret
data16
rcr
adc
push
lds
mov
push
mov
mul
movs
xchg
jnp
xchg
out
add
jmp
aam
call
out
mov
dec
(bad)
jae
movs
pop
test
call
push
sbb
test
add
movs
fbld
imul
and
arpl
mov
pop
stos
into
ficomp
push
sub
int
pop
fistp
or
pop
loopne
bound
sbb
or
test
push
xlat
sub
pusha
adc
or
and
pop
call
dec
cmp
dec
ror
cmp
jp
mov
rol
jbe
jae
jmp
repnz
jmp
dec
into
or
aam
movs
xlat
aam
test
adc
cmp
ret
mov
jns
inc
add
and
mov
loopne
stos
mov
cmps
dec
sar
ja
dec
call
and
aam
sub
or
fisubr
add
imul
xchg
cmp
mov
pop
pop
fsub
jmp
mov
push
test
xchg
sbb
jno
test
push
in
jns
mov
gs
jecxz
mov
loop
mov
dec
shr
mov
xchg
cmp
inc
xchg
jbe
mov
push
ss
mov
xor
fdivr
stos
es
in
dec
out
mov
call
cmc
pop
sbb
loope
pop
mov
mov
pop
call
int
imul
xchg
cwde
sub
in
dec
and
cli
scas
push
adc
popf
mov
sbb
inc
jno
xchg
sbb
(bad)
cdq
loope
outs
xchg
repnz
and
and
dec
fsub
xor
mov
cmp
loopne
push
pop
(bad)
fist
push
cmc
mov
push
jb
add
sub
stos
mov
stos
jne
sub
icebp
pop
fucomip
xchg
jle
and
cld
(bad)
sbb
cmp
dec
ins
fs
add
inc
shl
xchg
sbb
xor
aam
pop
cmp
dec
das
gs
xor
inc
addr16
jo
mov
sub
aas
loope
cmp
and
pop
dec
mov
jne
cdq
movs
or
(bad)
stos
call
nop
inc
neg
or
mov
retf
loopne
sbb
aas
ins
lds
enter
shr
sub
or
adc
xor
or
jmp
loopne
mov
lahf
xchg
xchg
inc
mov
(bad)
js
stc
and
int
sbb
push
dec
fistp
sub
aaa
or
fistp
inc
push
lahf
mov
jns
pop
xor
push
fs
or
sbb
xor
ror
fadd
mov
jb
ds
pop
mov
cmp
or
and
out
inc
addr16
neg
call
mov
cmp
adc
adc
imul
inc
push
cli
and
adc
aas
mov
(bad)
outs
shl
dec
pop
ror
repnz
xchg
fistp
popf
clc
inc
loopne
push
(bad)
call
jo
test
out
pusha
add
xchg
stos
mov
mov
mov
or
mov
fild
test
dec
push
jnp
lds
mov
inc
fistp
(bad)
mov
xchg
add
out
push
lods
or
lods
popf
push
es
or
int3
(bad)
push
push
sub
sbb
retf
gs
into
add
xchg
sbb
pop
push
jg
mul
cs
stc
iret
adc
xor
mov
sbb
jo
movlps
pusha
mov
fcompp
icebp
cmp
push
cmp
das
bsr
push
fldcw
bound
pusha
fimul
fnstcw
test
leave
fistp
xchg
icebp
cmp
fsub
mov
push
daa
xchg
loopne
fsub
add
xchg
push
xchg
ror
fst
dec
scas
into
inc
loopne
add
mov
inc
popa
pop
mov
fdiv
and
dec
cmp
cmps
push
lds
rcr
jnp
jmp
aas
or
test
sub
mov
aad
cs
into
loop
(bad)
std
or
push
repnz
not
add
fs
sub
add
dec
pop
pusha
aam
stos
add
mov
mov
nop
or
clc
add
push
fld
lock
fiadd
pop
mov
(bad)
xchg
(bad)
popa
xchg
jbe
xchg
(bad)
add
mov
jp
retf
into
jl
scas
xchg
and
pusha
sub
jecxz
pop
mov
into
ins
test
push
movaps
jns
jns
lds
add
ja
add
sub
(bad)
daa
fcomp
jb
fcom
jge
loopne
add
fisttp
loop
jl
dec
mov
dec
imul
stc
in
mov
mov
or
mov
test
pop
daa
lds
jl
and
pop
das
js
inc
int3
arpl
sbb
cmc
shr
iret
dec
mov
out
movs
loop
sub
xor
in
int
fstp
into
push
xor
je
outs
outs
lahf
xchg
sbb
mov
stc
ror
mov
outs
sbb
popf
sbb
sub
lahf
jns
cmps
dec
sti
push
xchg
cmp
mov
or
in
data16
fistp
jbe
and
aas
rcl
jbe
(bad)
js
pusha
mov
add
jns
sub
jns
adc
loopne
mov
jmp
push
or
push
pop
loopne
pop
inc
mov
ror
add
imul
inc
xlat
fcmovnu
inc
popa
xchg
movs
inc
sbb
and
jp
imul
cmp
push
mul
xlat
add
(bad)
mov
fmul
fidivr
cmpps
push
cmp
stos
inc
mov
xor
fldenv
cmps
nop
jns
imul
sub
xchg
jecxz
sbb
mov
jle
xor
in
shl
stc
(bad)
cmp
add
xchg
push
fmul
fst
cdq
sub
mov
nop
mul
out
mov
les
and
(bad)
mov
nop
push
xor
jns
mov
lods
dec
ret
data16
test
xor
mov
mov
mov
adc
or
fisub
xchg
fild
fwait
pop
pop
arpl
repz
pop
dec
jle
stos
xchg
push
loopne
stc
jl
mov
jno
and
push
push
mov
shr
push
cmps
mov
jmp
or
pop
mov
mov
in
popf
leave
lahf
stos
cmc
retf
xchg
push
pop
mov
sub
xor
add
dec
dec
and
call
hlt
or
pop
xor
fst
mov
mov
dec
and
test
xchg
jns
cmp
sbb
pusha
(bad)
imul
daa
xchg
dec
jno
outs
push
(bad)
add
or
jbe
sbb
push
lahf
or
(bad)
push
jp
mov
mov
and
inc
ret
popa
mov
bnd
sub
pop
adc
pop
mov
repnz
inc
push
call
sbb
loopne
rcr
adc
js
outs
(bad)
mov
pop
and
push
inc
adc
mov
push
fdivrp
push
outs
dec
cmp
mov
cdq
outs
cmp
push
clc
pop
test
push
repz
mov
xor
push
mov
aas
stos
or
clc
pusha
clc
pop
or
or
inc
(bad)
mov
int3
test
adc
sti
dec
mov
cmp
in
pop
ret
jns
cld
(bad)
lock
mov
loopne
fsubr
retf
push
cmc
lods
repz
loopne
(bad)
sub
dec
sbb
inc
jp
imul
or
jns
cld
xor
aam
push
loopne
fwait
adc
les
jmp
fadd
stos
aam
cmp
scas
rcr
stos
repnz
out
shr
fcomp
fild
and
loope
push
sub
and
les
fcomp
inc
sub
(bad)
jle
dec
jno
inc
mov
in
outs
lea
fmul
(bad)
mov
adc
mov
sbb
cmp
fdivr
sub
xor
imul
adc
adc
pop
mov
ja
mov
xlat
mov
jno
hlt
jle
and
sub
dec
icebp
mov
loopne
arpl
iret
ror
pop
pop
push
mov
fcomp
cmps
cmp
xor
sbb
fdivr
test
jo
out
add
not
clc
sub
cmp
pop
dec
adc
fsubr
jmp
sbb
int3
mov
fstp
fadd
(bad)
repz
jmp
jmp
pop
cmp
push
mov
xlat
fstp
inc
cmp
aad
int3
xor
shl
ret
ret
fsub
outs
push
push
mov
repz
leave
push
pop
sbb
jle
pop
jne
jmp
aad
xor
sub
xchg
xchg
push
pop
xor
aam
pop
(bad)
jmp
movs
mov
pop
in
sar
jmp
lahf
dec
into
in
jbe
sbb
daa
movs
pop
mov
pop
mov
pop
jns
add
fsubr
lds
aam
fsubr
sub
and
out
sti
fdiv
icebp
sbb
sbb
xchg
xor
cwde
aas
leave
in
xchg
inc
jnp
adc
sbb
movs
and
xor
das
loop
test
fsub
dec
daa
ret
(bad)
jg
adc
sbb
xor
ins
mov
jl
(bad)
(bad)
add
mov
jb
(bad)
and
fdivr
fsub
adc
and
jmp
sbb
jns
test
fsub
fdiv
jno
(bad)
scas
mov
xlat
ja
rol
jb
cmp
loopne
jo
fcom
enter
xchg
gs
je
test
clc
int
dec
iret
or
rcl
out
enter
retf
inc
jno
push
mov
sbb
pushf
stos
sub
retf
retf
pop
xchg
pop
push
fidiv
push
ja
(bad)
sbb
retf
add
loope
sub
cli
cmps
dec
adc
aad
xor
into
sub
xor
pop
ret
pushf
mov
int3
inc
dec
xchg
data16
dec
fmul
idiv
sbb
cmc
fmul
mov
hlt
ins
pop
pop
push
fdivr
sbb
xlat
and
rol
cmp
imul
icebp
sbb
dec
outs
fcomp
leave
mov
fdivr
push
inc
fcomp
xor
fdiv
add
fmul
movs
iret
cmp
push
call
push
jae
push
ins
sbb
xchg
movs
fsubr
das
jg
jl
popa
mov
fs
outs
mov
jne
mov
cmp
push
pop
std
jns
mov
sub
or
aaa
fdivr
pop
aas
xchg
mov
js
mov
mul
mov
dec
jmp
or
lock
push
clc
adc
xchg
data16
xchg
test
fs
in
mov
clc
cmp
inc
xchg
push
mov
jmp
jnp
jmp
fsubr
js
fcomp
push
(bad)
aaa
cmp
stos
fcom
xchg
lahf
push
adc
std
xchg
sbb
adc
mov
fadd
fisttp
shl
mov
leave
cmp
nop
inc
pop
scas
out
xlat
and
(bad)
fdiv
mov
xchg
(bad)
push
fild
fsubr
sbb
fdivr
push
mov
cli
es
in
je
pushw
mov
leave
cwde
loope
push
js
movs
and
ja
shl
mov
inc
push
test
fsubr
jl
xor
sub
call
(bad)
in
cwde
jne
ficomp
inc
dec
dec
js
mov
retf
push
pop
clc
adc
test
and
hlt
clc
push
ror
sbb
inc
and
stos
rcr
mov
sahf
push
mov
xor
out
lods
pop
dec
mov
fadd
sub
and
pop
xchg
xchg
pop
dec
dec
in
xlat
fdivr
jmp
mov
xchg
fmul
mov
aad
fldenv
pop
mov
sahf
pop
rol
das
and
xor
mov
test
ror
jne
push
dec
inc
in
call
pop
not
(bad)
(bad)
xor
lock
cld
fsubr
cmp
fcmovu
rcr
push
or
cdq
pushf
push
add
push
(bad)
or
cs
fsubr
and
xor
mov
stc
or
pmuludq
pop
or
fwait
jle
cmp
or
jmp
and
cmp
fsubr
push
jg
popf
js
push
repnz
mov
mov
fsubr
sbb
xor
inc
ins
ja
hlt
xchg
xor
cmp
test
fsubr
inc
repnz
jns
test
xor
mov
mov
loope
lods
fcomp
movs
fcomip
aaa
inc
fisubr
fmul
add
cmp
push
adc
mov
cmps
fdiv
mov
xor
leave
test
das
cwde
enter
fdivr
mov
xchg
rcr
test
xchg
out
mov
mov
rep
fcom
mov
cmp
(bad)
les
stos
sbb
cdq
adc
push
addr16
push
(bad)
pushf
cld
test
fcom
sub
mov
fmul
mov
cli
fisttp
es
rcl
int
dec
aad
cdq
jnp
jae
je
loop
or
loope
mov
pusha
and
fiadd
push
add
jle
jl
inc
rol
and
mov
loop
xchg
push
lock
imul
pop
mov
pop
fxch
or
cmp
xlat
fadd
fsubr
imul
mov
js
pop
mov
cli
pop
cwde
je
retf
jae
add
push
xor
stc
frstor
xrelease
loop
je
(bad)
fnsave
mov
lea
sbb
repz
push
loope
and
fcomp
mov
xchg
fcom
repnz
in
mov
(bad)
rcr
push
adc
fdivr
push
test
mov
pop
(bad)
dec
aam
sub
in
in
test
cli
xor
mov
ja
std
lahf
(bad)
imul
sub
pop
call
xlat
pop
jge
add
mov
mov
xlat
imul
mov
out
or
adc
(bad)
push
lods
(bad)
sbb
fprem
in
aas
mov
and
aam
(bad)
sub
jns
leave
xchg
lods
das
cli
mov
mov
repz
mov
mov
lods
jecxz
pop
ret
fdivr
xor
shl
xchg
mov
retf
add
mov
nop
fsub
outs
xlat
and
xor
pop
pop
aaa
(bad)
mov
fadd
shr
push
sub
sbb
xlat
xchg
or
sbb
sti
outs
bound
cmp
push
popa
cwde
(bad)
mov
leave
dec
dec
pop
out
loopne
add
push
gs
ss
retf
call
and
fdivr
test
inc
fmul
movs
jo
sub
or
scas
jb
cmp
(bad)
sti
fstp
push
inc
cdq
(bad)
std
and
push
sbb
sahf
leave
icebp
int3
mov
in
mov
mov
push
fmul
out
scas
or
ja
dec
jb
icebp
scas
jno
gs
and
push
ret
cmp
fsub
stos
pop
inc
ins
mov
fnsave
imul
pop
mov
fadd
pop
scas
push
ficom
mov
and
inc
dec
fcom
retf
xor
inc
cmp
add
call
aas
or
stc
ret
outs
pop
sbb
out
adc
adc
jle
sub
lods
cmp
push
xchg
enter
shl
loopne
pop
mov
out
retf
in
mov
fsubr
push
inc
cld
mov
push
push
fdivr
loopne
cmps
inc
jl
or
mov
pusha
mov
adc
out
xchg
mov
stc
fcom
fbld
mov
mov
mov
aas
out
pop
mov
mov
cmp
xor
adc
fcomp
fwait
out
setno
xor
mov
add
pop
(bad)
cmp
jle
cmp
or
mul
or
sar
je
addr16
fdivr
xchg
fmul
pop
xchg
pop
or
test
push
mov
dec
addr16
and
clc
ds
rcr
and
jae
stos
in
fcomp
out
adc
mov
cmp
or
jbe
movs
push
dec
clc
sub
and
mov
add
mov
fsub
fisttp
lods
xchg
out
cmps
(bad)
(bad)
fcomp
pop
jmp
push
cmp
mov
add
xchg
neg
adc
hlt
lahf
xchg
jge
das
cmp
call
pop
xor
fwait
(bad)
fcomp
stc
pop
call
fsub
sub
xlat
fcom
cmp
popf
shr
js
test
cmp
push
inc
mov
inc
inc
mov
mov
leave
adc
push
call
int
dec
push
and
or
jns
fadd
dec
dec
adc
xor
mov
fcom
pop
imul
or
rol
test
pop
cli
mov
and
cdq
fcomp
and
sbb
nop
cmps
jns
fisubr
retf
xor
jmp
fsub
in
or
fcmovb
cmps
dec
fwait
cld
or
fdiv
xor
imul
pop
mov
jns
js
pusha
sbb
push
cmp
dec
fcomip
pop
push
sahf
fld
mov
mov
sti
and
enter
out
lds
xor
ja
pop
retf
and
(bad)
mov
inc
(bad)
jle
adc
scas
lahf
ror
push
sbb
add
shl
cmp
js
pusha
stos
out
and
and
repz
xor
cwde
rcr
jns
pop
fcmovbe
and
pusha
or
mov
add
imul
cmp
xchg
stc
cmp
stc
aas
into
shr
xchg
mov
iret
inc
push
in
xor
js
(bad)
pop
mov
push
push
sti
mov
loope
aam
lds
(bad)
outs
(bad)
and
scas
sbb
or
lds
pushf
cmp
or
ret
and
push
or
test
or
cdq
xchg
into
fimul
pusha
rcr
(bad)
mov
out
pop
fist
shr
into
daa
rol
cdq
loopne
push
add
pop
ds
add
pop
cmps
in
xor
pop
add
into
jl
mov
ror
fbld
(bad)
test
inc
push
mov
or
leave
and
xchg
pop
push
rcr
mov
mov
les
fiadd
call
add
push
push
and
push
std
add
fcmovne
inc
out
stc
test
jp
dec
test
ins
sbb
inc
cmp
movs
iret
jae
(bad)
out
sbb
pop
sub
(bad)
sbb
lds
sub
adc
dec
in
int
rcl
out
jp
loopne
cmp
xchg
or
stos
test
inc
inc
mov
std
js
jns
into
push
(bad)
fmul
loopne
xchg
pop
add
cmps
jns
mov
aas
aad
fist
mov
dec
push
std
dec
jmp
xchg
mov
mov
or
adc
adc
sbb
std
add
fbstp
enter
pushf
xchg
mov
push
push
mov
adc
xabort
pusha
mov
rcr
mov
mov
sbb
test
pop
nop
into
jecxz
pop
cli
sub
push
into
data16
inc
jg
call
sbb
ja
cmp
jno
xchg
rol
mov
sar
test
aam
dec
sub
cmc
xchg
adc
sbb
jae
repnz
out
sbb
jne
dec
jb
push
cmp
push
loopne
sub
sti
or
pusha
inc
jns
adc
imul
sbb
loopne
pop
sub
cmps
mov
(bad)
repnz
int3
popa
and
adc
loopne
imul
add
dec
and
add
daa
xchg
aaa
lds
mov
mov
jg
fdiv
loopne
mov
dec
sar
cmovae
inc
je
dec
push
xchg
inc
mov
retf
dec
or
xor
fadd
loopne
pop
inc
leave
mov
(bad)
outs
push
jp
je
adc
adc
rcl
jbe
and
pop
mov
stos
push
cmp
scas
push
loop
sub
xchg
dec
dec
retf
out
out
mov
inc
test
push
jbe
sub
jp
data16
xchg
neg
and
fsub
push
jp
cwde
fmul
and
fbstp
(bad)
mov
pop
pusha
ret
fild
nop
out
aam
lahf
lahf
cmp
pusha
cmp
sbb
sub
mov
xor
cmp
ret
outs
test
inc
int3
cs
out
aam
or
test
dec
retf
(bad)
retf
pop
dec
bound
iret
mov
imul
stos
ss
mov
or
cwde
mov
mov
jp
adc
mov
or
sahf
fiadd
or
mov
pusha
push
mov
cld
iret
jb
movs
inc
push
fbld
cs
sahf
js
sbb
xchg
adc
mov
cs
mov
repnz
mov
jnp
dec
jbe
and
xchg
dec
ret
pusha
sub
int
jmp
sub
push
jl
arpl
aad
or
(bad)
cmp
pop
out
dec
jb
inc
mov
icebp
jno
cmp
jns
scas
mov
push
test
pusha
xor
mov
pop
jo
iret
aaa
adc
cmp
mov
dec
push
inc
add
adc
inc
scas
add
fdivr
xchg
sub
out
ret
dec
sbb
cli
aas
push
pop
push
inc
cmp
cmp
sbb
in
rep
sar
rcr
and
push
js
pop
stos
push
adc
xchg
pusha
fnsave
retf
imul
pop
fist
pop
dec
cdq
fidiv
fmulp
sahf
cmps
sub
mov
in
sbb
inc
cmp
int
jo
jno
ins
fimul
and
retf
aam
xor
mov
push
xor
xchg
mov
test
fild
cwde
cmps
xchg
inc
ror
ss
fild
in
scas
fwait
cmp
pusha
mov
cmp
add
aaa
mov
mov
mov
lods
fcom
inc
add
jmp
jne
sbb
repz
sahf
les
mov
adc
daa
ret
jbe
adc
(bad)
jmp
std
inc
shl
xchg
enter
mov
ss
mov
mov
push
out
or
pop
loopne
dec
jmp
ficom
jl
movs
cmp
cmps
js
loopne
mov
mov
int3
jge
xchg
sub
jae
jne
jo
(bad)
and
sub
sub
dec
mov
ja
sub
push
inc
mov
call
add
push
sub
(bad)
push
push
ds
dec
int3
sub
add
cmp
add
jns
aas
adc
rcl
pop
adc
mov
dec
pop
xlat
add
(bad)
mov
movs
nop
add
loopne
call
pop
repnz
fbld
pop
hlt
icebp
pusha
mov
mov
cmp
mov
(bad)
ror
push
push
out
push
rcl
imul
xchg
pop
push
(bad)
ins
or
cmp
jmp
inc
push
ror
xor
cmp
sbb
(bad)
jge
lea
cmp
pusha
shl
sub
jb
cmp
(bad)
into
loopne
loope
rol
jmp
mov
cdq
mov
test
inc
push
xchg
jle
mov
sub
inc
cmc
jae
fild
repz
aam
mov
lea
push
sbb
movs
in
adc
(bad)
ret
push
out
outs
add
les
(bad)
(bad)
int
js
and
xchg
aaa
or
mov
push
inc
add
movs
(bad)
leave
inc
jnp
mov
fbld
(bad)
dec
push
fisttp
int
aam
mov
int
cwde
dec
dec
or
cmp
pop
out
bound
test
not
(bad)
ret
test
int3
or
(bad)
fisubr
loopne
xor
retf
gs
aam
ins
imul
push
and
inc
push
aas
loopne
ficom
rcr
(bad)
xchg
and
enter
pop
inc
cdq
xchg
sbb
sub
bound
or
sub
jb
push
and
dec
sub
dec
loop
sub
outs
add
xor
clc
jmp
mov
lahf
pop
iret
mov
cmps
push
add
mov
pop
mov
in
xor
nop
sub
aad
xchg
frstor
xchg
out
or
lock
daa
fdivr
push
loopne
jmp
stos
iret
cld
add
pop
add
jbe
ss
shl
es
scas
jae
xchg
es
int3
ror
loop
aad
sbb
and
(bad)
cwde
cdq
sti
push
test
out
inc
jmp
xor
loopne
sbb
xor
leave
dec
dec
jle
js
mov
jl
sahf
jo
xor
lock
gs
fmul
fisub
rcr
and
(bad)
lock
or
js
(bad)
fsub
dec
pop
mov
nop
cmp
iret
imul
add
imul
test
(bad)
xchg
xchg
mov
pop
ins
cmp
or
or
mov
imul
bound
jg
fistp
aas
loopne
hlt
jbe
or
sbb
and
adc
stos
out
add
inc
jl
adc
scas
dec
(bad)
add
cmp
add
push
xlat
jb
adc
movs
xor
inc
dec
loopne
jnp
rol
jns
movs
out
fadd
test
inc
dec
mov
popa
mov
inc
pop
jmp
mov
cmp
cmps
(bad)
jo
pop
cwde
test
aaa
aad
add
ficomp
xor
test
ror
push
sahf
fnstcw
inc
xor
data16
cmp
(bad)
addr16
mov
add
es
ret
jns
test
sbb
cmp
sbb
aas
sahf
xchg
and
cmp
jo
data16
and
xor
dec
adc
mov
inc
(bad)
aad
inc
mov
fcomp
ss
das
push
add
loope
add
cmp
js
inc
cld
mov
and
lods
hlt
sub
mov
or
and
push
aam
mov
xchg
leave
and
shl
sbb
pop
jg
jle
(bad)
out
adc
xor
jl
fsubr
or
mov
jg
jae
inc
sub
fisub
pop
mov
ins
clc
or
fimul
fcomp
(bad)
mov
nop
push
fs
fcomp
outs
ja
mov
xor
jbe
arpl
(bad)
jne
mov
adc
fadd
hlt
aam
fwait
add
enter
out
mov
ja
inc
(bad)
sbb
push
cmp
mov
ds
(bad)
fadd
cs
in
scas
je
rcr
mov
fnsave
outs
pop
jg
retf
mov
adc
jecxz
sub
inc
fcomp
lds
daa
retf
clc
mov
jle
in
scas
sbb
fistp
jmp
xlat
test
or
mov
arpl
add
mov
sbb
mov
call
cdq
call
or
or
dec
push
adc
ja
sub
jae
dec
jmp
outs
loopne
pop
scas
clc
aad
retf
scas
retf
and
lds
xchg
jecxz
fcomp
inc
push
fisttp
or
dec
or
movs
loopne
jbe
sbb
loopne
pop
dec
dec
(bad)
fbstp
mul
ins
and
sub
rcl
dec
xor
sbb
jg
les
cmps
imul
pop
xor
lds
mov
test
loopne
xchg
sub
pop
cmp
iret
movs
push
and
or
cmp
and
sbb
fisub
sub
dec
test
in
xor
push
xchg
add
sub
or
add
repz
push
(bad)
jmp
les
fist
add
cmps
fneni(8087
or
out
or
sbb
mov
cmp
dec
inc
retf
adc
mov
lahf
dec
mov
iret
pop
pop
loopne
pop
cld
xchg
xchg
fsubr
dec
or
sub
aaa
sub
sub
mov
fbld
or
dec
push
fisubr
inc
add
loop
jno
jmp
pop
out
xor
or
into
adc
inc
and
jl
cdq
(bad)
lock
pop
fadd
xchg
sar
mov
stos
cmp
pop
mov
mov
inc
lds
jmp
xchg
sbb
out
xchg
int3
std
retf
ror
pushf
ins
std
pop
arpl
ret
jbe
mov
movs
(bad)
and
and
pusha
push
inc
les
(bad)
cwde
jne
push
push
jns
(bad)
xor
stc
add
mov
and
fistp
inc
mov
pusha
adc
mov
les
fild
scas
aam
push
repnz
dec
popf
add
mov
pusha
dec
jmp
add
cmp
pop
xor
fild
ffreep
pop
aas
mov
mov
call
jbe
rcr
outs
mov
cld
fs
xchg
mov
out
mov
cmc
xchg
lds
mov
lea
adc
or
stos
xchg
(bad)
(bad)
sar
ficom
loopne
jno
or
mov
ret
icebp
std
enter
cmp
xor
mov
dec
xchg
leave
pusha
xchg
int
inc
jl
(bad)
(bad)
push
inc
mov
enter
icebp
fs
(bad)
loopne
test
in
inc
(bad)
cmp
frstor
jp
add
add
mov
inc
dec
lods
mov
mov
dec
loopne
push
mov
mov
or
pop
mov
xchg
push
jecxz
dec
xor
les
out
jp
loopne
fcmovne
daa
rcr
cmp
je
pop
fisttp
or
cld
in
mov
call
mov
sub
cmp
mov
jg
dec
int
pushf
push
aas
out
and
call
jbe
loopne
test
scas
into
cdq
(bad)
std
les
sub
sbb
adc
hlt
outs
out
es
sbb
or
inc
mov
out
xlat
std
sbb
test
mov
addr16
lahf
mov
dec
scas
pushf
sbb
loopne
jns
or
es
cmp
loopne
mov
je
pop
dec
ret
mov
inc
sbb
add
xchg
cmp
xor
mov
inc
mov
jne
retf
aas
mov
mov
mov
test
das
pop
and
out
and
mov
xchg
push
pop
fisttp
xchg
lods
addr16
cmp
xchg
xchg
mov
push
cdq
imul
push
call
sbb
ins
or
leave
mov
outs
pop
dec
adc
test
sbb
fcomp
cmc
inc
repz
xchg
shl
xchg
ss
into
enter
inc
mov
and
(bad)
jmp
call
mov
rcl
cdq
sub
out
mov
rcl
addr16
mov
inc
imul
mov
mov
jbe
xchg
fcom
inc
sub
dec
fsub
mov
fcom
sti
xor
fadd
push
jno
ret
fmul
xchg
sahf
pop
pop
jne
xor
cmp
mov
mov
sar
ret
push
push
fdivr
loope
mov
fadd
push
inc
xchg
mov
xchg
sub
in
mov
pop
lods
imul
jp
cmp
lods
push
int
aaa
lahf
stos
fstp
jae
sbb
sbb
mov
pop
cwde
rcl
cmp
rcl
sub
scas
adc
test
inc
cmp
lds
les
(bad)
fcom
adc
repz
clc
mov
xchg
fdiv
mov
and
shl
dec
jl
adc
cli
in
cld
cmp
or
enter
jmp
out
(bad)
xorps
pop
or
adc
neg
fdivr
fmul
cld
sbb
daa
leave
scas
pop
pop
pop
jmp
jno
in
ror
xchg
(bad)
repz
fsubr
cmp
add
inc
fadd
adc
stos
out
test
pop
loop
fmul
shl
push
in
jmp
retf
ss
fwait
cld
in
cmp
fadd
add
or
sub
xlat
sbb
es
cmps
mov
dec
push
lds
sar
movs
and
adc
jmp
rcr
jno
xor
shl
mov
mov
or
movs
xchg
call
fdivr
add
retf
fdiv
out
rcr
dec
mov
push
pop
idiv
(bad)
ins
retf
pusha
lds
repz
fcom
lods
xor
pusha
jbe
xlat
mov
fdivr
jae
imul
mov
push
fcomp
(bad)
xchg
(bad)
(bad)
movs
retf
fisub
or
cmp
scas
and
xor
nop
call
and
xor
out
pop
(bad)
lods
add
lods
repz
mov
xor
jno
jo
cld
fadd
xchg
cmp
jae
jns
fsubr
pop
jo
sub
inc
sub
sub
fsub
test
pop
inc
adc
fmul
js
(bad)
or
shl
mov
add
fcom
out
ffreep
jle
sar
test
mov
stos
cmp
loope
shr
fcmovu
cmp
gs
imul
add
imul
sub
adc
inc
pop
movs
test
fmul
push
push
scas
mov
cli
dec
shr
xor
dec
cld
fcomp
jecxz
xor
sub
(bad)
imul
lods
shr
rcl
iret
jle
neg
mov
stos
jmp
(bad)
push
rol
sbb
cmp
inc
and
sbb
lock
loopne
int3
sub
pop
fsubr
pushf
xchg
pop
imul
inc
mov
push
in
aad
sub
pop
cli
mov
or
dec
cmp
fadd
inc
mov
in
adc
pcmpgtd
cwde
sub
scas
lock
pusha
xor
sbb
aaa
mov
loopne
loope
inc
push
jle
dec
clc
cmp
in
fdiv
cmp
int
mov
rcl
in
std
movs
fcomp
xor
ss
sar
jbe
pushf
test
or
mov
lods
cwde
(bad)
cmp
stc
seto
repnz
out
mov
ret
loopne
mov
fadd
and
or
test
add
out
in
push
and
dec
int3
daa
fs
and
je
adc
test
xlat
pop
push
mov
jnp
jbe
xor
push
mov
loop
lods
iret
xlat
pop
add
mov
mov
retf
jb
and
retf
hlt
aam
mov
fcomp
dec
mov
xchg
fdiv
inc
push
and
inc
fwait
jge
push
mov
rol
sar
fsub
std
mov
test
mov
nop
stos
retf
sti
rcr
xchg
mov
pop
and
pop
sub
rcr
mov
add
fsubr
aam
outs
mov
dec
mov
adc
shl
fdivr
jecxz
imul
xor
mov
ror
(bad)
dec
mov
fsubr
ss
sbb
fstp
mov
mov
sti
cmps
shl
call
jmp
dec
loop
mov
mov
push
pop
leave
cmp
mov
hlt
add
les
cmp
mov
(bad)
sub
mov
call
out
(bad)
fwait
aam
jns
(bad)
mov
movs
mov
cmps
sar
in
xor
dec
mov
xlat
call
sub
mov
fsubr
xchg
fst
mov
loop
iret
scas
fld
inc
adc
fwait
hlt
push
fmul
es
adc
sub
sbb
fadd
js
fimul
loopne
into
imul
(bad)
int
adc
sbb
add
jmp
aad
out
loope
sbb
outs
pop
bound
cmp
adc
addr16
and
inc
adc
fdivr
retf
sub
popf
das
or
scas
retf
ficomp
mov
and
cwde
sbb
cli
jmp
lds
lods
xchg
jle
pop
into
ins
fdiv
dec
push
push
fdivr
in
retf
adc
or
jmp
mov
pop
dec
mov
popf
cmc
scas
cwde
pop
or
imul
popf
jne
push
adc
(bad)
fcmovu
imul
fdiv
dec
lahf
call
or
cmp
jo
sub
dec
fmul
pop
call
(bad)
xchg
stos
sbb
(bad)
xor
out
aas
cwde
aam
xor
inc
pop
mov
jecxz
sub
fdiv
mov
call
inc
fdiv
in
push
fadd
iret
cmp
shl
xor
jecxz
lods
ins
test
shl
loopne
fild
fst
xor
rcr
idiv
loop
repnz
add
dec
push
push
fsub
ror
int
iret
mov
push
mov
or
arpl
sub
fmul
mov
shl
mov
nop
push
mov
call
fnsave
mov
inc
mov
xchg
fmul
jb
cmp
adc
imul
or
test
xchg
rcl
and
js
scas
jo
ret
cmp
push
ins
sbb
mov
fnstsw
aaa
clc
jp
inc
leave
xchg
mov
push
js
je
sbb
mov
ror
js
xor
fmul
push
test
xchg
adc
fisttp
mov
in
xchg
test
inc
fcmovne
loopne
mov
outs
sub
rcr
mov
imul
push
mov
rcl
mov
out
fdiv
leave
adc
les
sahf
stos
test
inc
cmp
pop
cmps
inc
and
xchg
and
mov
sbb
aam
leave
(bad)
in
inc
or
xor
fisttp
pusha
call
movs
pop
shr
movs
mov
or
in
dec
mov
stos
sbb
hlt
fsubr
adc
jnp
(bad)
shl
leave
dec
sbb
pop
frstor
or
inc
sbb
and
js
xchg
out
cli
sub
aad
retf
pop
repz
or
inc
fistp
push
and
ffreep
stos
add
loopne
ja
xchg
(bad)
outs
add
ds
xchg
jno
inc
jnp
cmp
push
ret
and
(bad)
out
stos
dec
int3
cdq
jg
jp
pop
sub
cwde
and
iret
pop
inc
add
fbld
xchg
stos
ret
call
jp
mov
retf
inc
fwait
popa
cwde
add
imul
mov
jns
retf
fucomi
imul
lds
mov
fsubp
add
push
fwait
dec
icebp
mov
cmp
sub
loope
ss
add
xor
jo
sbb
jmp
stos
push
mov
lock
call
add
jl
fcmovbe
js
imul
gs
ret
adc
cld
test
or
xor
adc
loop
aad
sub
push
push
dec
jp
dec
sbb
sbb
repz
loopne
push
push
aam
push
pop
or
pop
pop
push
xlat
lahf
fucomip
movs
or
out
dec
dec
pop
sub
or
fbld
rcl
daa
int
daa
sub
pop
scas
fldenv
sbb
mov
dec
mov
idiv
xchg
fcmovnu
aaa
mov
int
mov
sub
loopne
push
dec
xchg
call
adc
ret
pop
repz
nop
(bad)
int
mov
leave
dec
dec
gs
in
test
add
dec
les
fidiv
fnstsw
rol
loopne
inc
pop
xchg
jb
xor
cmps
loopne
xchg
add
jg
jno
mov
loop
or
ret
mov
jecxz
mov
mov
cmps
pusha
and
sbb
in
lods
mov
pop
test
popa
test
popa
push
adc
js
pop
and
leave
sub
adc
iret
dec
dec
cmp
imul
mov
jmp
sub
cmp
cmp
fcom
sub
fmul
mov
or
xor
adc
xor
loopne
mov
(bad)
das
call
sub
scas
sahf
stc
and
iret
movs
stc
dec
fchs
fwait
pop
hlt
jle
and
add
fisub
add
shl
sbb
cmp
(bad)
loopne
jns
cmp
cdq
pop
push
push
mov
dec
mov
nop
jnp
dec
sbb
test
ror
das
lds
sbb
pop
scas
or
lods
and
inc
cli
call
inc
movs
xchg
lahf
popf
mov
int
pushf
and
mov
in
xchg
inc
mov
pop
out
sub
cmp
rcr
dec
cmps
lds
push
sahf
or
push
push
or
xlat
xor
int
fld
jle
mov
(bad)
shl
pop
int3
sar
and
jp
loopne
shr
mov
xchg
(bad)
cmp
xchg
in
dec
mov
sub
fld
addr16
shl
mov
shl
pop
mov
(bad)
fistp
jmp
push
or
fs
xor
jmp
sub
jg
into
(bad)
push
mov
push
(bad)
push
jl
cmc
mov
pusha
ror
sahf
mov
rcr
cmc
dec
inc
shr
(bad)
mov
shl
pop
inc
mov
test
xchg
in
jge
cmp
push
mov
pop
vmread
cdq
mov
stos
popa
mov
loopne
stc
sbb
sub
popa
mov
sub
mov
push
mov
pop
and
loopne
in
xchg
adc
pop
fmulp
ins
mov
push
sbb
pop
sar
mov
jne
je
cdq
jbe
mov
loopne
jno
inc
adc
js
adc
jne
cmp
and
sbb
xchg
pusha
inc
leave
dec
and
pop
and
jg
lock
push
push
stos
inc
icebp
jmp
mov
cmp
pop
pusha
(bad)
fild
and
dec
pop
sti
call
cmps
lods
das
inc
pushf
(bad)
int3
jns
nop
loope
das
and
push
adc
cmps
mov
mov
sub
mov
and
add
loop
pop
jns
rcl
dec
inc
xchg
popa
xchg
pop
sub
fmul
loopne
stos
jmp
push
(bad)
scas
jo
inc
pop
stos
in
pop
mov
data16
aad
cmp
mov
push
sbb
mov
retf
pop
push
stos
add
out
mov
and
lods
xchg
cmp
sub
adc
in
lock
pop
repnz
sbb
add
mov
test
lahf
dec
xor
adc
xchg
mov
pusha
lods
fistp
dec
fptan
pop
iret
pop
dec
dec
test
imul
(bad)
shr
into
loopne
sub
ret
push
imul
pop
push
xchg
aaa
jae
cmps
push
ja
add
push
adc
stos
(bad)
sub
jbe
or
pop
mov
aam
fldcw
imul
(bad)
call
or
cdq
mov
clc
push
test
jb
popa
push
pusha
ja
arpl
cmp
push
mov
mov
leave
es
and
mov
lods
and
cmp
imul
or
cmp
(bad)
adc
push
xchg
inc
inc
mul
sbb
scas
ins
jns
jno
push
mov
or
pop
ins
faddp
xchg
push
movs
pop
in
loop
(bad)
cwde
out
test
loop
add
push
pop
addr16
les
mov
outs
loopne
mov
inc
addr16
rol
add
push
push
test
push
jbe
repz
ret
(bad)
adc
cdq
fdivr
mov
movs
dec
xchg
sub
stos
or
repz
loopne
xchg
ret
sahf
push
add
hlt
dec
fbld
pop
xor
ds
push
fwait
push
cmc
aas
inc
jl
loop
cmp
fnstcw
or
add
add
das
jp
(bad)
aam
and
(bad)
fisub
mov
mov
pusha
ds
adc
(bad)
xchg
ins
and
fst
leave
dec
sub
pop
lds
scas
pusha
jne
(bad)
and
imul
pop
inc
cmp
sbb
inc
or
xchg
scas
jl
xchg
adc
xor
loopne
test
mov
fdivr
iret
jg
or
jo
or
pushf
dec
cmps
mov
(bad)
sub
mov
fdiv
enter
aas
clc
ss
xchg
fistp
xchg
gs
dec
pushf
jo
pop
js
into
xchg
sbb
rol
aas
rcr
pop
cmp
sbb
pusha
or
mov
mov
leave
jne
shr
xchg
pusha
push
out
push
or
imul
hlt
inc
jmp
cmps
movs
daa
and
xor
outs
or
push
loopne
repz
adc
in
leave
mov
div
or
jnp
fild
add
dec
mov
sbb
pusha
rol
inc
fmul
das
xor
mov
pop
aam
dec
stos
mov
addr16
and
mov
jl
xchg
push
xchg
mov
outs
push
xor
iret
push
add
cmp
mov
inc
xor
jg
pop
pop
es
fidivr
ja
fisub
mov
sub
clc
mov
test
mov
xchg
dec
ja
(bad)
loopne
xchg
cmp
aas
xor
push
lds
fbld
idiv
and
arpl
jmp
cmp
rep
scas
add
xchg
pop
mov
mov
bound
mov
xchg
and
add
nop
xchg
sbb
sbb
mov
pusha
mov
push
jmp
xor
xlat
inc
xor
sub
arpl
jo
xor
enter
nop
aam
fcompp
cld
pushf
into
js
push
leave
pop
push
adc
cmp
in
test
xlat
movs
in
mov
loop
mov
mov
mov
inc
and
cmp
or
js
ins
fisub
push
aad
xchg
inc
test
(bad)
xrelease
jne
inc
getsec
gs
push
mov
sub
cdq
jge
sub
int
add
push
pop
sbb
dec
lea
scas
pop
adc
mov
or
jge
pop
xchg
mov
aam
push
popf
or
mov
add
mov
xlat
out
push
push
cmp
and
push
call
idiv
(bad)
push
mov
and
aad
adc
mov
xchg
inc
sbb
div
ds
aas
aam
iret
cmps
mov
out
cmp
jmp
dec
sbb
sub
push
jmp
push
retf
or
sbb
sub
mov
adc
jg
push
add
push
dec
js
xor
cmp
loopne
nop
cdq
dec
jmp
into
mov
in
add
pop
out
and
jmp
rol
inc
loopne
mov
es
and
in
mov
push
pminub
sahf
fwait
ret
jp
int
aas
cli
movs
out
pop
push
or
pusha
mov
mov
fiadd
fisttp
mov
mov
das
scas
mov
cmp
mov
mov
out
fwait
and
sbb
jne
mov
pusha
jne
cmp
sbb
xchg
pusha
vminsd
hlt
cdq
or
dec
rol
cmp
push
nop
lods
inc
loopne
jno
fistp
sbb
push
push
and
push
daa
fcomip
push
mov
mov
sub
repz
jne
push
mov
jne
fadd
fmul
das
aam
pop
inc
sub
or
pop
sbb
add
retf
add
into
(bad)
cmp
cmps
mov
xchg
test
pop
jbe
sahf
sub
pushf
sub
sbb
adc
pop
icebp
cmp
pop
jb
fld
add
fild
lods
into
addr16
push
js
mov
dec
push
loopne
jns
dec
dec
lods
inc
(bad)
sbb
scas
dec
out
jmp
sar
pop
jns
mov
ror
lahf
jecxz
test
popf
jns
mov
(bad)
out
loop
int3
jae
mov
push
dec
and
dec
jno
mov
lods
fucomip
cmp
sub
or
and
mov
aam
mov
loop
dec
sbb
call
inc
test
test
stc
mov
loopne
scas
mov
js
inc
lea
rcl
jp
inc
fs
inc
pop
jp
mov
ds
rol
push
test
add
and
rcl
jno
jge
cmps
ds
jo
mov
fcomp
xlat
add
pop
test
enter
mov
mov
mov
dec
mov
pusha
cdq
enter
sbb
ss
inc
loopne
arpl
pop
mov
or
popf
mov
nop
cmp
outs
sub
(bad)
fimul
and
or
sbb
add
rcr
cdq
out
jbe
fidivr
xchg
je
and
and
out
fcmovnb
or
dec
jl
or
sbb
sar
repnz
sbb
cdq
pop
cs
jns
adc
cdq
xchg
inc
xchg
mov
int3
fst
push
(bad)
or
bound
push
daa
aad
pushf
inc
jg
call
mov
movs
in
jp
push
and
jnp
mov
xchg
jle
pop
xlat
loopne
and
adc
mov
int
mov
sbb
xchg
mov
cmps
dec
pop
leave
or
xor
jns
dec
dec
jbe
add
jns
movs
add
and
sbb
loopne
or
cs
pop
or
fisttp
pop
pop
add
loopne
lods
loope
fs
mov
cmp
retf
outs
adc
jb
xchg
cmc
dec
sub
mov
mov
jecxz
es
pop
bound
int3
mov
movs
loope
aam
dec
mov
push
jmp
cmps
in
cmp
jb
xor
and
sbb
(bad)
dec
add
xor
xchg
mov
mov
call
sar
(bad)
(bad)
les
jb
icebp
mov
gs
push
jle
push
or
ret
cdq
mov
add
into
test
aad
rcl
mov
shl
mov
(bad)
sub
cld
hlt
stos
inc
data16
mov
mov
and
and
push
icebp
fild
out
cdq
dec
je
mov
in
int
cs
ret
xor
cmp
adc
iret
lea
xchg
cmp
or
or
inc
xor
imul
js
lea
aas
sahf
enter
jmp
retf
jp
in
push
out
fsub
gs
mov
out
sbb
mov
xchg
pop
cli
jge
xor
push
dec
push
jnp
(bad)
es
mov
inc
fwait
add
and
push
dec
js
dec
push
jg
cmp
inc
outs
adc
cmp
fadd
(bad)
loopne
pop
scas
fcom
push
mov
test
mov
add
fsubr
fnsave
sbb
and
outs
xchg
loopne
cmp
pop
pop
inc
pusha
jbe
neg
inc
fisub
stos
and
xlat
cmp
shl
inc
xor
ins
es
xchg
jo
push
and
repz
outs
das
sbb
(bad)
jecxz
mov
fidiv
xchg
rcl
pop
cmp
xor
scas
popa
fcom
pop
lock
dec
mov
dec
cmps
xor
gs
ficom
loop
fdiv
push
in
adc
fdiv
cmp
add
fsubr
sbb
(bad)
mov
xchg
xor
dec
or
hlt
(bad)
jmp
movs
sti
push
sub
dec
cdq
xor
das
adc
cs
cld
repnz
test
cmp
add
push
cmp
cmp
pop
(bad)
cmc
sub
(bad)
mov
outs
jns
mov
xchg
cmp
repz
cli
dec
clc
aam
cmp
lock
adc
std
clc
neg
inc
addr16
dec
mov
fcom
and
fcmovu
add
push
mov
lea
je
cmp
std
mov
ins
sbb
les
sub
gs
imul
pop
add
add
fdiv
mov
repz
and
lea
push
pop
fdivr
sbb
loopne
inc
and
dec
xor
dec
mov
(bad)
fadd
fdiv
pop
jae
and
add
hlt
dec
call
lock
mov
cmp
das
cmp
mov
fdiv
inc
jg
inc
jo
xor
les
cmc
add
push
cwde
(bad)
adc
or
loope
pop
out
out
nop
(bad)
mov
add
mov
mov
jl
xor
pop
jae
sbb
clc
int3
les
pop
mov
dec
icebp
test
and
and
movs
fbld
push
mov
int3
je
data16
sub
add
jo
mov
fcom
shr
jmp
cmps
xchg
add
int
pop
movs
push
outs
or
loop
mov
test
in
lods
xor
add
loopne
clc
and
xlat
mov
mov
or
jae
fsubr
mov
inc
mov
and
dec
dec
add
mov
cmp
and
div
dec
aam
xchg
xlat
sbb
icebp
in
mov
out
rcr
push
pop
mov
sbb
iret
mov
xacquire
in
retf
push
xlat
div
adc
lds
ret
faddp
(bad)
sub
mov
fsub
in
repnz
bound
fcomp
lods
out
ffree
mov
fsubr
int
jp
cwde
lods
les
adc
mov
pop
mov
cwde
mov
stc
(bad)
call
loope
xor
retf
retf
popa
sub
leave
sub
mov
xor
loope
mov
fmul
dec
push
scas
jbe
inc
jb
call
arpl
mov
fdivr
cld
sbb
mov
(bad)
dec
rcr
std
mov
pop
stc
push
xchg
fdivr
js
jge
adc
mov
mov
icebp
fstp
mov
pop
pop
fdivr
sub
shl
scas
inc
js
pop
dec
loop
or
xor
sub
push
push
push
xchg
inc
cs
sub
add
dec
cmp
bound
push
rol
mov
add
cli
(bad)
jmp
ret
fninit
xchg
push
cwde
icebp
fdivr
push
xor
mov
jmp
add
or
dec
jbe
loope
xor
ss
stc
pop
test
sub
stos
cmp
or
xchg
and
fnstsw
in
or
pushf
jne
scas
mov
fimul
idiv
loope
xchg
mov
aad
and
lahf
(bad)
pop
pop
rcr
stos
movs
mov
ffreep
push
aam
fldcw
(bad)
rcl
into
xchg
rcl
(bad)
pop
loopne
sbb
mov
rcr
mov
ret
add
adc
jae
jo
loopne
aam
cli
in
mov
sti
sbb
(bad)
cmp
xchg
xchg
or
loopne
sub
enter
js
push
je
sub
mov
stc
inc
aaa
movs
pop
xchg
and
pop
das
sub
(bad)
or
fdiv
xchg
inc
nop
adc
icebp
xor
push
outs
cmc
into
xchg
mov
retf
dec
mov
lahf
inc
inc
xor
add
fbstp
push
jecxz
fidiv
rcr
ja
bound
or
rcr
inc
mov
jmp
(bad)
enter
aas
icebp
(bad)
in
mov
inc
retf
aas
scas
je
pop
mul
pop
fist
push
fucom
xor
enter
fdivp
stc
mov
jns
push
into
fild
jecxz
pop
fst
cld
or
(bad)
jb
in
int3
adc
into
pusha
je
cmp
jae
add
scas
adc
or
pop
xchg
shl
jno
js
fbld
(bad)
in
sbb
lds
inc
enter
xlat
pusha
mov
ins
add
mov
jo
pushf
gs
cs
and
les
jmp
mov
ret
jecxz
dec
sbb
outs
call
(bad)
jge
retf
jmp
jle
mov
adc
sbb
mov
or
push
inc
mov
xchg
pop
dec
fistp
xlat
jl
pusha
ins
jl
js
jg
shl
int
arpl
mov
pop
pop
mov
inc
lods
xor
rcl
and
addr16
enter
push
clc
mov
jle
dec
loop
mov
cld
fisubr
push
outs
jb
jns
push
xor
dec
lds
pusha
or
jb
mov
pop
pusha
mov
outs
sbb
je
aas
mov
mov
jp
out
ficom
jp
adc
inc
hlt
out
and
outs
jno
lea
daa
ins
js
pop
and
gs
aas
or
sub
gs
icebp
loop
test
mov
lods
xchg
jne
fst
mov
inc
jae
movs
or
cmp
cmp
loope
loopne
clc
std
inc
push
int3
adc
push
dec
jbe
leave
push
pop
imul
loopne
xchg
adc
or
pop
push
fsubr
or
cli
ds
push
mov
xchg
pop
mov
test
xchg
pop
jmp
pop
out
jb
rcl
mov
pushf
fld
or
mov
rcl
pop
sub
les
retf
fisttp
in
retf
call
loope
mov
xor
cdq
sub
sbb
xchg
adc
adc
or
and
jecxz
out
(bad)
(bad)
pop
push
jmp
xor
mov
ror
shr
pop
sbb
int
xor
cmp
dec
ror
mov
movs
(bad)
dec
rol
iret
mov
dec
pop
mov
out
sub
cmp
mov
push
aad
cmp
add
fild
loop
dec
mov
aam
loop
retf
jb
cmp
loopne
inc
jae
aaa
jmp
call
mov
xchg
scas
dec
or
int3
fbstp
(bad)
jbe
stos
and
js
dec
mov
mov
clc
aaa
mov
inc
dec
xchg
push
inc
mov
inc
xchg
sar
test
loopne
scas
jbe
add
or
xchg
inc
push
cs
mov
cmp
ss
mov
inc
and
jmp
dec
lds
fwait
pop
sbb
push
popf
ror
fnstcw
xor
sti
pusha
cmp
dec
int
fsub
dec
popf
in
jp
xor
(bad)
fdivr
jb
fld
sub
aas
push
mov
or
aaa
into
jmp
mov
fwait
leave
and
fstp
nop
sti
xchg
mov
enter
addr16
mov
ins
bound
pop
and
jl
push
adc
inc
mov
sbb
(bad)
mov
call
jns
xor
mov
add
xlat
push
mov
or
xchg
sub
mov
loopne
pop
push
aam
inc
cmps
dec
fcmovnb
stc
sahf
sbb
ins
pop
(bad)
(bad)
cmp
mov
push
add
rcl
int
test
pop
dec
or
test
jmp
pusha
mov
pop
or
mov
pandn
xchg
sbb
xor
mov
xchg
fbstp
lds
mov
inc
pop
and
fcom
cmp
inc
ins
add
and
out
mov
mov
xchg
cmp
jne
clc
aas
in
inc
adc
cmp
stos
jno
pop
xor
loopne
sub
xchg
ror
ficomp
jle
sub
xchg
jle
imul
xor
mov
sub
inc
lahf
mov
js
xchg
inc
pop
leave
mov
mov
mov
ret
push
daa
loope
push
ss
out
pop
xor
sahf
(bad)
jle
ins
test
mov
loopne
scas
mov
cmp
lahf
aad
(bad)
fild
(bad)
mov
shl
test
xchg
mov
fist
cmp
js
dec
xchg
cmp
and
cmp
dec
xor
xlat
scas
mov
cmp
fistp
pop
test
cs
mov
je
dec
in
out
scas
dec
(bad)
pop
lahf
movs
mov
xchg
pusha
lds
jns
mov
jo
adc
jns
enter
mov
xlat
(bad)
jle
aas
inc
jmp
into
and
mov
outs
xor
pop
daa
pop
inc
adc
test
lods
cld
es
lods
mov
jmp
leave
imul
jns
je
pop
es
jmp
ins
and
nop
xor
cmp
movs
xor
inc
dec
sahf
daa
mov
(bad)
out
mov
fmul
and
test
jge
aam
or
push
aas
ffreep
gs
mov
pop
mov
add
sub
mov
fadd
out
push
fisttp
add
pusha
fdivr
pushf
dec
push
and
jmp
cmp
outs
inc
mov
jb
stos
dec
sbb
addr16
int
out
inc
and
loopne
loopne
and
cmp
jo
dec
(bad)
jecxz
fsubr
mov
popa
leave
movs
add
push
jp
lods
retf
daa
cdq
and
outs
clc
pop
pusha
mov
xchg
or
xor
std
shl
sbb
sbb
out
stos
inc
and
jbe
adc
mov
mov
sbb
xchg
pop
mov
in
jns
dec
pop
pushf
repnz
inc
adc
pop
mov
pop
mov
xchg
out
xor
add
(bad)
adc
and
stos
fimul
lods
ret
mov
ds
cwde
lock
xor
lods
ret
sub
sub
(bad)
cmp
mov
and
adc
mov
cmp
or
dec
test
daa
fnstcw
sub
pop
mov
xor
fimul
jno
fbstp
outs
rcl
les
dec
xchg
stos
fdivr
fucom
jl
jmp
pop
jl
push
loopne
dec
cmp
jecxz
push
xlat
ja
shl
fistp
shl
adc
scas
sub
fbstp
pop
mov
jns
push
jmp
nop
mov
nop
or
adc
mov
jge
jno
cdq
mov
pusha
lds
sbb
test
mov
call
fsubr
sub
jbe
outs
test
jmp
dec
(bad)
fmul
pusha
xchg
outs
aam
and
out
(bad)
mov
(bad)
jno
pop
inc
fsub
push
cs
das
cmp
jo
inc
cmp
stos
int3
fisttp
ret
pop
cli
adc
pop
add
mov
pop
stc
xor
jmp
mov
pop
xor
repz
mov
jecxz
lahf
and
ins
adc
mov
clc
push
mov
retf
jg
jmp
cmc
mov
add
or
call
outs
mul
fidivr
sbb
jb
sbb
sbb
dec
mov
pop
fmul
rol
add
lahf
inc
add
imul
aad
cld
inc
jge
pop
cs
lock
pop
in
cmp
je
ja
lods
(bad)
ficom
mov
dec
adc
fstp
sbb
mov
pop
xchg
sbb
mov
add
sub
push
push
(bad)
jp
mov
xchg
outs
mov
vmread
imul
je
aaa
mov
mov
jne
push
add
jl
sub
jp
fiadd
xor
push
jmp
mov
sbb
push
mov
mov
dec
pop
add
or
push
pop
push
pusha
push
pop
jbe
in
push
iret
sbb
push
jle
fadd
mov
das
sub
jmp
arpl
popf
ficomp
and
add
pop
jo
div
inc
jmp
push
xor
nop
popf
retf
ja
scas
xlat
pop
sbb
inc
sbb
jmp
sbb
sub
mov
dec
jl
push
fiadd
fdivr
sar
and
sub
and
lahf
in
mov
push
push
mov
cmp
out
sti
daa
cmp
add
pop
pushf
and
and
and
ja
(bad)
jmp
clc
les
stos
lock
(bad)
and
sub
jae
icebp
iret
dec
pop
mov
mov
enter
data16
fiadd
gs
add
test
outs
inc
xor
loopne
sbb
sub
test
jb
in
adc
scas
jb
das
enter
fimul
(bad)
cdq
inc
push
xchg
enter
jge
xchg
mov
mov
(bad)
push
xor
outs
sub
xchg
inc
aas
adc
enter
jns
mov
movs
xor
loop
mov
pusha
ins
int3
pop
xlat
add
adc
cwde
inc
jbe
fcomp
pusha
and
nop
sbb
clc
jb
les
sbb
cmp
fcmove
jp
out
pop
fisub
xchg
mov
test
xor
inc
fiadd
sub
mov
cmps
or
pusha
(bad)
xor
mov
ficom
pop
(bad)
fisttp
(bad)
xchg
(bad)
mov
fimul
jns
into
cdq
ror
test
sar
add
fwait
idiv
rol
mov
iret
pop
pop
out
(bad)
(bad)
lods
inc
adc
mov
xchg
js
dec
enter
loope
loope
es
sub
ror
mov
jae
jne
cdq
aaa
inc
shl
xor
bound
iret
xchg
inc
inc
aad
pop
xor
outs
cwde
nop
push
mov
in
out
imul
and
clc
push
push
mov
lds
mov
mov
jecxz
js
and
inc
mov
enter
mov
fsub
scas
(bad)
sahf
loopne
mov
mov
out
aam
imul
jnp
out
xor
xchg
fnstcw
scas
add
popa
pop
ret
mov
mov
sbb
and
or
mov
fimul
pop
xchg
add
loop
loop
int
adc
in
hlt
pcmpeqb
(bad)
sbb
add
cmp
mov
add
pusha
xlat
add
retf
cmp
push
push
jne
not
jp
shl
inc
sbb
sti
lds
loope
jnp
jge
bound
pop
loop
rol
aam
adc
pop
mov
int3
add
xchg
push
cmp
sahf
ja
dec
mov
rol
inc
leave
inc
xlat
mov
(bad)
popa
loop
inc
je
cmp
pop
int
jnp
out
lods
jle
enter
push
xchg
out
ins
and
rcr
fwait
push
fcomp
fstp
into
and
or
fld
mov
retf
loopne
test
and
or
hlt
mov
jp
cli
lds
xor
sar
icebp
out
call
call
shl
movs
or
or
(bad)
(bad)
pop
pop
sahf
cld
push
hlt
ret
dec
fisttp
adc
daa
mov
xchg
pop
pushf
popa
in
(bad)
and
nop
in
xchg
jmp
cli
inc
js
loopne
jge
fs
retf
jae
fcom
jecxz
into
in
mov
bound
and
mov
dec
popf
and
add
mov
jecxz
pusha
pop
into
push
pushf
mov
pop
out
or
in
mov
push
or
loopne
sub
or
mov
or
stc
into
loop
sub
aas
in
add
sub
inc
js
adc
and
mov
test
sub
pop
pusha
and
sbb
cdq
inc
call
cmp
aaa
jae
or
pop
(bad)
xor
xor
inc
stos
and
outs
or
ss
add
in
les
js
fisttp
fucomi
or
xor
push
pop
(bad)
mov
pusha
cli
push
dec
enter
cmp
and
pop
sub
pop
sub
pushf
and
enter
into
dec
cwde
cwde
jge
scas
aad
call
or
(bad)
scas
or
(bad)
sub
loop
imul
fmul
mov
jmp
sbb
in
xchg
inc
add
dec
or
inc
out
fs
jle
call
stc
ja
dec
xor
push
jle
rol
lea
addr16
std
pop
push
bswap
rol
fistp
mov
inc
jo
push
(bad)
pusha
cmp
mov
cmp
int3
data16
(bad)
fsub
addr16
ror
or
aad
shr
ds
nop
add
out
(bad)
cmp
dec
push
into
fisttp
mov
pop
rcr
sbb
push
jg
dec
adc
dec
mov
mov
sub
loope
mov
shl
pop
int
adc
retf
or
adc
sbb
push
outs
call
fdiv
enter
mov
mov
(bad)
pop
pop
sbb
(bad)
pop
sub
xchg
mov
frstor
pop
out
ss
xor
(bad)
sub
pop
cwde
std
in
rcl
ret
clc
aaa
jno
jae
das
in
xchg
call
enter
mov
and
fiadd
popa
addr16
fiadd
out
jo
dec
jae
pop
jle
js
mov
enter
adc
sub
dec
stos
and
cdq
sub
push
jno
fild
mov
sbb
aas
aam
jle
cmp
in
push
in
test
lods
cmp
jae
jl
fidivr
fs
hlt
fiadd
fstp
into
pop
(bad)
stc
mov
push
dec
int3
or
test
out
outs
push
mov
shl
push
ret
test
mov
sub
inc
aad
or
shl
adc
and
shl
jne
addr16
jle
push
aad
sbb
fild
lods
fstp
mov
mov
adc
or
aam
sub
or
loopne
ror
fistp
popa
scas
inc
fwait
xchg
js
jmp
dec
fsub
sub
mov
and
add
push
cmp
pushf
loopne
jge
dec
mov
push
(bad)
std
or
xchg
pop
(bad)
mov
xchg
jb
ds
dec
stc
mov
mov
mov
(bad)
jmp
add
pop
push
scas
daa
mov
push
fsub
sub
sub
dec
inc
mov
or
adc
or
cwde
(bad)
out
inc
jmp
inc
cdq
fmul
pushf
ror
out
mov
(bad)
inc
mov
jl
fiadd
mov
cli
or
sub
pop
jle
dec
inc
int3
jno
cmps
cdq
(bad)
xor
sub
xlat
shl
and
jg
sbb
sbb
(bad)
and
jo
dec
sbb
xchg
aaa
pop
sbb
inc
movs
push
jbe
and
add
mov
popf
out
loope
test
(bad)
pop
mov
push
gs
jge
adc
or
add
adc
mov
and
sbb
ficomp
call
inc
mov
fist
fistp
or
jl
loopne
or
mov
es
jl
jp
std
pop
cmp
mov
(bad)
std
mov
int
inc
je
push
scas
mov
les
push
pusha
leave
mov
iret
or
and
and
mov
sub
loopne
jo
rcr
add
push
xchg
enter
sub
jl
xor
mov
jne
jmp
call
mov
jb
gs
fsub
xor
in
xchg
mov
push
bnd
xor
retf
into
fcom
fild
inc
dec
cmp
cmc
mov
mov
dec
adc
stc
mov
or
jmp
jno
ss
cmp
or
loopne
int3
xchg
xchg
cwde
data16
out
rcr
in
push
loopne
into
(bad)
sbb
inc
mov
or
cdq
out
xor
fmul
mov
mov
cmp
sbb
or
loopne
aaa
scas
cmp
fistp
repz
mov
sub
int3
mov
push
scas
push
into
sar
mov
dec
fisub
push
outs
pop
push
push
pusha
ins
outs
shl
jns
xchg
test
cli
sbb
or
jmp
add
adc
dec
aas
sbb
test
arpl
sbb
pusha
out
pop
out
cmp
mov
inc
int3
pushf
sub
adc
repz
adc
or
and
dec
aaa
call
cmp
pusha
(bad)
xor
push
into
aaa
in
sub
cmp
aad
mov
scas
(bad)
or
mov
add
aas
sub
addr16
and
or
leave
and
jmp
jnp
inc
pop
sar
xchg
pusha
enter
ret
mov
pop
push
pop
adc
mov
cmc
sub
push
push
jg
push
mov
xor
call
sub
cmc
(bad)
jge
fistp
fs
idiv
pop
pop
enter
movs
leave
jnp
mov
pop
mov
popf
or
sub
ror
cmp
and
cmp
mov
pushf
js
lods
dec
xchg
xlat
shl
pusha
jl
fldcw
sbb
cmps
fwait
loopne
movs
pop
xchg
out
adc
inc
inc
rcr
pop
pusha
scas
sbb
jmp
movs
aas
jo
mov
daa
js
arpl
shl
shl
aad
push
inc
jg
cld
pop
out
(bad)
rcl
in
mov
aas
add
push
ror
fsubr
cmp
gs
stos
aas
je
clc
sahf
push
lods
adc
fstp
xor
ror
outs
and
mov
imul
mov
mov
xlat
stos
pop
mov
clc
in
sbb
fs
ds
inc
mov
cmc
cmps
xchg
icebp
(bad)
pusha
fisttp
ds
out
imul
mov
clc
sahf
iret
popf
add
push
pop
push
js
pop
test
xor
pop
cmp
cld
push
add
cs
mov
fsubr
call
sub
push
mov
loop
pusha
and
dec
mov
inc
xor
inc
sbb
or
add
jmp
pusha
cmp
pop
sti
stc
and
pusha
aam
sub
dec
jae
addr16
repnz
mov
(bad)
fcmovnbe
mov
jle
stos
loopne
fcmovu
fcom
hlt
jo
pop
fst
and
cmps
in
aam
dec
les
mov
or
add
add
aaa
icebp
call
into
push
(bad)
mov
push
dec
pop
cdq
or
call
loopne
pusha
cmp
inc
(bad)
push
jno
cwde
jmp
xchg
dec
cmp
and
fisttp
fild
mov
sahf
mov
std
mov
imul
or
pop
push
leave
popf
scas
in
push
rol
dec
sub
cld
fldcw
mov
not
push
add
fstp
fistp
mov
ror
inc
int3
or
aaa
push
pop
sbb
cdq
adc
dec
mov
stos
mov
or
int
pop
adc
(bad)
scas
(bad)
das
mov
pop
adc
dec
xchg
mov
push
sub
int3
loopne
leave
mov
sbb
movs
jno
push
test
or
pop
push
add
or
test
sub
fwait
cdq
jno
in
leave
in
jbe
cmp
js
test
sbb
xchg
sbb
into
mov
mov
adc
pop
push
ror
pop
sub
and
iret
or
adc
cmp
fcomp
clc
ret
mov
xchg
sub
pop
pop
mov
je
mov
popf
adc
jg
icebp
out
pop
ret
inc
fdiv
mov
pop
jno
sbb
push
dec
fstp
xor
xor
retf
repnz
(bad)
shl
cli
fsub
lea
add
mov
or
es
pop
mov
xchg
mov
aam
call
xchg
xor
sbb
dec
fstp
jne
push
mov
pop
rcl
or
mov
lock
ss
adc
fcmove
cmp
inc
add
xor
lods
stos
sbb
xor
imul
ss
dec
ss
mov
ret
int3
adc
test
sub
push
cdq
dec
and
mov
pop
mov
add
in
mov
xchg
loopne
xchg
xchg
ds
sar
(bad)
xchg
movs
stos
(bad)
in
lds
jp
(bad)
add
pop
jnp
nop
cmps
cmp
ja
xor
fisttp
outs
xchg
adc
repz
into
jb
popa
dec
les
cli
movs
aaa
dec
xchg
retf
xor
fnstsw
mov
inc
and
xor
jmp
jg
arpl
movs
xchg
cdq
jb
lods
jmp
jbe
js
mov
imul
mov
int3
or
add
xlat
int
mov
fbld
jmp
mov
inc
mul
(bad)
add
pop
fidivr
aaa
dec
adc
rol
cs
pop
dec
ds
cmp
push
jmp
sub
out
mov
popf
fdivr
cdq
inc
jecxz
or
push
loopne
loopne
fisttp
pushf
mov
jo
xchg
jle
fs
mov
mov
dec
stos
jo
jae
dec
aad
jns
mov
and
mov
clc
cmps
loopne
sbb
mov
mov
mov
jne
jl
call
pop
test
fcomp
dec
es
pop
addr16
xbegin
(bad)
cmp
stos
out
xor
scas
mov
mov
in
sbb
mov
(bad)
add
mov
pop
push
fmul
retf
loopne
add
test
dec
fldenv
bound
stos
fsubrp
pop
into
sbb
pushf
sbb
addr16
or
lahf
clc
sub
(bad)
dec
stos
or
xor
and
adc
ret
loopne
pop
sub
cmp
test
adc
mov
push
test
fild
gs
(bad)
xchg
sti
jmp
sbb
cmps
sahf
pop
aad
pushf
mov
sbb
pop
jmp
mov
dec
xor
loopne
pushf
xor
not
cwde
dec
or
in
xchg
lea
or
push
fs
fcom
jecxz
lds
popf
xchg
push
pop
pop
mov
sbb
inc
mov
cmpps
js
out
outs
shl
std
jp
inc
scas
daa
aam
stc
in
mov
pusha
scas
or
xchg
test
rcr
aas
arpl
push
dec
xor
inc
pusha
sbb
or
sub
pop
aad
loopne
cmp
or
push
fist
(bad)
ficom
mov
sbb
stc
lods
xchg
mov
cli
push
data16
mov
aam
clc
pusha
push
inc
ret
loopne
mov
mov
sbb
sub
fcom
jl
xor
pop
inc
into
sar
ret
nop
and
fimul
xor
adc
and
mov
mov
jmp
fistp
adc
jp
add
and
scas
dec
mov
fdiv
jns
cmps
ins
call
gs
addr16
dec
xchg
pop
sub
push
mov
daa
cmp
js
pop
mov
add
int3
pop
sahf
ffree
xchg
jge
xchg
dec
scas
int
or
mov
push
pop
xchg
cwde
jo
adc
mov
in
(bad)
aas
pushf
scas
pop
fdiv
movs
std
inc
jp
int
and
inc
ret
mov
aad
(bad)
cdq
xor
jb
mov
jecxz
call
ror
fbstp
repnz
js
or
dec
pop
or
test
leave
pop
jp
imul
mov
cmp
mov
pop
arpl
xor
pavgb
or
ror
xchg
call
xchg
mov
mov
ja
dec
xor
retf
fbstp
fcomp
dec
mov
jns
sub
hlt
call
sbb
aam
mov
add
cmp
push
xor
or
xor
movs
xchg
out
cmp
push
aad
and
mov
push
ret
or
sub
pop
inc
or
mov
ficom
mov
mov
adc
daa
and
push
hlt
cmc
sbb
mov
cmps
leave
cmps
loopne
jg
inc
xchg
pop
scas
or
and
retf
jno
dec
or
add
fbld
into
pop
add
ror
add
xchg
pop
repz
popf
push
sti
aas
in
fcom
sahf
adc
sbb
aam
dec
outs
movs
cwde
pop
inc
xchg
(bad)
out
dec
jg
js
(bad)
pusha
add
mov
cmp
ds
jo
jg
sub
push
out
sbb
test
jle
jae
jns
ins
in
adc
or
mov
fistp
adc
fwait
jno
test
shl
xor
clc
int
imul
fist
jo
shl
inc
adc
icebp
fnstsw
(bad)
test
hlt
inc
sub
xor
cmp
add
xor
jno
das
fistp
call
enter
pop
ds
jmp
dec
cmp
imul
mov
push
inc
test
(bad)
fld
js
or
fsub
pop
adc
int
xchg
xor
xchg
jp
inc
push
xchg
rcl
test
fiadd
mov
jbe
ds
xor
test
cmp
jmp
xchg
call
aam
xor
sub
mov
call
lods
fwait
mov
or
pushf
rol
fsub
sub
(bad)
int3
lds
ficom
fdiv
es
adc
xor
push
mov
cmp
add
adc
scas
test
pusha
lds
call
repnz
loope
mov
dec
xchg
dec
into
push
iret
jo
jo
aas
inc
fcomi
sbb
out
mov
fst
sbb
out
dec
inc
aas
fdivrp
ds
dec
pop
and
inc
and
xchg
sbb
rcl
or
js
stos
mov
ds
mov
xor
add
or
out
aaa
or
hlt
add
add
fidivr
fwait
add
pop
fiadd
lahf
icebp
push
sbb
cmps
shl
fist
dec
sti
pusha
xlat
jbe
ss
call
(bad)
ja
fdiv
mov
cwde
std
fimul
add
push
mov
jp
sub
or
jns
add
(bad)
fstp
cmp
hlt
test
inc
xlat
pop
jecxz
cmps
jmp
sar
inc
push
jo
(bad)
cmp
fcmovnu
add
xor
cmc
test
pop
enter
mov
push
xlat
or
dec
into
aam
hlt
cmp
(bad)
and
or
ret
pop
loopne
loope
mov
or
and
(bad)
fwait
test
cmp
push
sar
xor
repnz
mov
sbb
shl
shl
xchg
sub
inc
mov
xchg
cmc
sar
pop
aad
add
dec
push
push
js
sub
inc
sbb
sar
dec
cmps
aad
xor
lea
jbe
cwde
clc
pusha
fucomp
retf
sar
mov
dec
sbb
daa
add
(bad)
jmp
cli
sbb
push
mov
fmul
sub
jne
xor
aas
lods
fwait
mov
jno
(bad)
jp
add
mov
xchg
mov
jns
jmp
je
das
loopne
jecxz
sbb
jl
mov
loopne
cs
outs
cs
mov
pop
pop
xchg
cmp
add
stc
mov
jmp
loop
scas
mov
loop
(bad)
(bad)
test
push
fisubr
cmp
test
call
and
lahf
jle
mov
or
mov
repnz
fsubr
ds
fist
xor
dec
mov
add
sbb
sub
pop
cmps
aaa
or
ss
cmp
pusha
(bad)
push
cdq
sbb
sub
or
sahf
cmovbe
push
retf
call
inc
sub
dec
jl
cmps
dec
jno
mov
sbb
lods
or
sar
ja
xor
iret
adc
ja
inc
stos
repz
into
aaa
fucomp
out
and
outs
repnz
xor
dec
mov
jg
and
enter
shl
imul
mov
push
mov
outs
push
cdq
fisubr
cmp
push
pop
mov
je
arpl
jno
das
xor
adc
not
(bad)
cmp
pavgw
clc
mov
mov
loopne
cmp
idiv
and
imul
dec
inc
dec
or
inc
or
xlat
loop
inc
mov
and
pop
shl
jo
mov
ret
dec
rol
pop
pop
jns
or
repnz
cmps
pop
mov
mov
ds
leave
or
jno
mov
pop
fdivrp
pop
sar
fs
leave
fiadd
nop
adc
cmp
xor
sub
pop
pusha
int
jle
or
xor
hlt
test
rcr
nop
or
jge
adc
out
(bad)
cs
and
(bad)
cmp
int
and
cmp
pop
popf
and
(bad)
cld
push
mov
pushf
mov
mov
mov
imul
adc
pushf
pop
aad
or
das
push
rcr
push
idiv
stos
pop
(bad)
fsub
or
enter
pop
call
test
pop
adc
fldcw
ror
xchg
aam
jmp
mov
cmp
push
mov
mov
fadd
ins
or
fld
jle
and
xor
push
inc
mov
inc
sbb
cmp
sub
popf
inc
push
sbb
xor
mov
and
imul
not
push
fsubr
fst
pop
shr
out
aad
xor
pop
iret
mov
icebp
cwde
adc
test
inc
ja
xchg
cdq
adc
jmp
lea
lods
dec
jbe
and
rcl
and
jns
push
sub
add
pop
cmp
cmps
or
sbb
pop
mov
dec
jp
push
aas
icebp
mov
push
enter
nop
and
in
test
fistp
adc
adc
cld
movs
ficomp
int
and
mov
lahf
pop
cmp
mul
arpl
jl
int
aam
cmp
xchg
test
sub
(bad)
je
sbb
in
icebp
xchg
mov
pusha
into
cmp
mov
cmp
or
jmp
sbb
add
int
push
rcr
jno
into
xor
(bad)
pop
jns
mov
loopne
hlt
aad
std
dec
int3
out
dec
dec
aas
jnp
sub
repnz
jns
(bad)
and
mov
push
cmp
lods
mov
lock
aaa
jne
dec
mov
dec
or
shr
xor
xchg
iret
jp
(bad)
xchg
ficomp
jbe
mov
shr
ret
lods
mov
es
add
push
dec
aaa
dec
sub
and
inc
jae
jns
jp
cmc
pop
jo
mov
jg
loopne
sahf
adc
fcmovu
push
add
or
sbb
jmp
or
cmps
jne
and
fst
test
loope
add
test
adc
leave
pusha
sbb
cmp
dec
push
xlat
call
les
test
push
mov
inc
inc
and
scas
inc
push
push
loopne
jp
fistp
xchg
mov
mov
add
push
into
mov
xor
outs
scas
into
mov
xchg
and
xor
sbb
test
(bad)
in
cdq
inc
mov
dec
cmp
dec
js
fdivr
or
loopne
mov
mov
jae
jp
dec
repz
nop
add
scas
mov
addr16
(bad)
in
sbb
push
enter
push
jg
lods
arpl
xor
mov
mov
loopne
add
jns
mov
xchg
xchg
in
out
fs
dec
add
sub
div
(bad)
into
pop
outs
gs
push
jp
sar
shl
sub
test
arpl
popf
data16
inc
mov
sbb
inc
scas
jns
jno
xchg
aam
pop
mov
cwde
lahf
aas
jmp
retf
jg
iret
test
enter
cs
add
xor
pop
mov
mov
sahf
push
aas
jbe
out
leave
mov
aam
dec
mov
fsub
leave
mov
mov
cld
out
shr
cwde
push
mov
cmps
and
sahf
add
je
inc
mov
cli
push
jne
out
inc
js
or
mov
in
inc
jbe
add
add
or
test
test
mov
neg
xchg
call
push
pop
mov
push
adc
cmc
mov
push
xor
adc
push
js
or
aaa
into
xchg
scas
fcomp
cmc
dec
dec
call
pop
mov
cwde
(bad)
jp
pop
(bad)
inc
xor
fsubrp
adc
add
call
xor
sub
cmp
cmps
imul
out
mov
movs
in
cs
cwde
sub
fisub
sub
and
mov
dec
fisttp
inc
lods
mov
int
lds
dec
(bad)
in
xor
adc
adc
cld
rol
mov
arpl
mov
mov
aad
aas
adc
int
pop
shr
and
stos
addr16
inc
aas
xchg
into
fstp
xor
mov
mov
xchg
stc
int3
jecxz
loope
dec
pop
cmp
pop
fisttp
pop
xchg
scas
loope
loopne
cs
aaa
xlat
xor
mov
sbb
scas
jns
pop
xchg
pop
xchg
or
stos
test
adc
int3
pop
fucom
pushf
pop
pop
es
jns
xor
imul
push
adc
dec
lods
sbb
push
minps
push
jp
fistp
movs
sub
shl
pop
cli
mov
js
les
mov
fild
dec
xlat
dec
test
mov
sub
in
dec
icebp
sub
imul
in
mov
cmp
ja
nop
cmps
mov
dec
dec
pop
and
jmp
push
mov
lods
lods
adc
jb
ret
xchg
or
push
movs
dec
cmp
aam
ss
adc
pop
adc
push
loopne
fwait
inc
fs
mov
cwde
(bad)
(bad)
cmp
jns
jb
and
push
mov
and
cmp
jno
out
mov
sub
pmulhw
mov
push
mov
adc
xor
inc
push
bound
sti
rcr
in
test
cmp
adc
test
cmp
loopne
inc
sub
sbb
mov
out
js
pusha
js
fdiv
imul
sbb
lods
js
mov
outs
push
rcl
dec
add
adc
mov
clc
pusha
push
cmp
in
or
inc
mov
xchg
call
pop
jg
aam
cmp
xchg
movs
les
xchg
fbstp
cwde
pop
or
fwait
xor
add
cmp
cmp
fiadd
cs
or
mov
ja
jne
cmp
xchg
fcmovu
dec
cld
push
xchg
pusha
or
mov
test
popa
sar
(bad)
xchg
cdq
xor
ins
loopne
or
xchg
(bad)
cmp
mov
sar
jno
popa
mov
push
test
js
or
loopne
mov
fnstcw
sahf
(bad)
push
int
mov
mov
or
and
jmp
in
jne
daa
rol
fsubr
dec
out
jns
call
ret
not
popf
es
add
sub
xchg
sbb
push
jbe
jbe
ror
(bad)
out
pop
mov
lea
mov
stos
bnd
or
jno
mov
push
push
push
xchg
lock
xchg
js
inc
inc
pop
jno
ins
and
jl
outs
and
cmp
add
int
push
scas
jnp
pusha
dec
fistp
repnz
jg
push
(bad)
mov
aas
pop
pusha
outs
js
xor
pop
fisubr
mov
xchg
test
loopne
int3
pusha
les
pop
jne
pop
cmc
aam
and
pandn
mov
repz
mov
inc
out
cli
ins
xor
cmps
(bad)
sbb
sbb
mov
xor
jb
jb
add
sbb
jecxz
dec
lahf
inc
jp
adc
xchg
sub
jns
movs
pop
loopne
in
mov
push
enter
(bad)
pusha
sub
fist
cmc
pop
call
sub
sbb
mov
sbb
das
retf
das
es
cmc
js
adc
stos
xchg
sti
push
ins
xchg
xor
push
xchg
xchg
div
jbe
sbb
inc
xor
retf
jae
fadd
cmc
(bad)
pop
fidiv
mov
repz
(bad)
(bad)
pop
rcl
int
mov
outs
in
out
xlat
jmp
shl
xor
lods
sbb
(bad)
(bad)
fucomip
and
inc
ret
pushf
loopne
arpl
inc
fidivr
(bad)
fcomp
sub
pusha
std
mov
or
loopne
out
xchg
imul
repnz
dec
jae
lods
aam
sub
repnz
push
ss
js
shl
pop
pop
pop
jns
jno
and
jns
cmps
jg
push
pusha
jl
pop
mov
js
loope
pop
xor
jne
pop
cmp
aaa
or
iret
cs
dec
inc
dec
std
xor
loopne
pop
mov
or
in
shl
jg
xchg
pop
jne
popa
or
dec
sub
and
push
repnz
fs
lods
sbb
add
loopne
xor
push
jle
scas
stos
cmps
pop
mov
loopne
xor
sub
pop
ret
fbstp
and
leave
fbld
pop
or
mov
xor
(bad)
sar
enter
retf
push
pop
fbstp
xor
sub
test
into
les
mov
movs
or
and
jae
xor
pusha
mov
adc
adc
popa
hlt
pop
ror
push
mov
retf
sub
jae
or
jle
xchg
imul
(bad)
jns
aad
or
hlt
lahf
and
scas
jmp
push
fdivr
pop
neg
adc
mov
mov
fsub
nop
imul
sub
fsubr
es
add
ja
fld
xor
ds
retf
clc
pop
int
out
int
loop
fdivr
test
sub
push
retf
mov
cmp
shl
cli
sbb
mov
fnstenv
aam
fdiv
iret
xor
scas
sbb
movs
jo
js
fsubr
retf
data16
mov
jo
cmps
sbb
pop
mov
daa
push
fmul
xchg
jb
aad
sbb
loope
inc
cmp
fcom
push
adc
lea
jl
mov
pop
pop
mul
xchg
sub
xor
adc
cmp
dec
mov
or
ret
pop
push
in
mov
xchg
out
sbb
clc
push
xor
xor
fisttp
pop
pop
cld
lds
shl
fwait
pop
test
push
imul
ja
xor
push
mov
fadd
shl
add
sub
lock
retf
inc
sbb
inc
je
dec
jle
rep
fadd
add
push
ja
rcl
cdq
fsubr
aad
dec
or
cmps
and
aaa
add
mov
nop
psubusb
fcom
stos
mov
je
jge
sbb
sub
int
lods
sub
push
mov
ror
imul
or
daa
inc
jo
cmp
stos
sbb
call
adc
add
xor
imul
sub
test
mov
cmc
scas
rol
out
or
and
fadd
mov
daa
dec
cmp
lea
jg
and
mov
lock
fwait
ret
sub
cmp
fcomp
retf
adc
jg
pop
lods
pop
xor
add
rol
and
fstp
mov
imul
clc
stos
xchg
jae
pop
in
dec
inc
lock
addr16
rol
fsubr
pop
xchg
ja
and
icebp
std
ins
adc
in
mov
fsub
jae
push
and
push
xor
movs
ins
cwde
aad
xor
repz
push
xchg
pop
sbb
fadd
out
dec
fiadd
js
movs
inc
mov
lock
mov
cmps
jbe
push
mov
mov
fstp
xor
sti
frstor
or
repnz
dec
arpl
cmp
fdivr
push
sti
xchg
lock
push
pop
scas
dec
mov
mov
push
add
mov
sti
adc
dec
and
pop
cmp
sbb
mov
xor
fisttp
bound
test
in
(bad)
adc
push
sbb
std
adc
and
fist
in
cld
sbb
shr
mov
fadd
div
xor
in
push
pop
adc
pop
add
mov
push
jbe
ror
push
cmp
(bad)
fsubr
arpl
outs
cwde
xor
mov
adc
mov
rcl
mov
leave
and
hlt
pop
mov
loop
push
jmp
cld
push
xor
ficom
push
test
dec
cmps
fsubr
inc
sbb
cmp
sub
jmp
ret
inc
stos
fcomp
push
jle
aam
jns
nop
or
fcom
(bad)
loop
imul
fstp
jo
(bad)
loope
pushf
int
fdivr
addr16
cmp
jb
fadd
daa
scas
retf
sbb
push
fdiv
push
mov
or
mov
jnp
dec
mov
mov
mov
mov
pop
aam
retf
rcl
and
loop
fcomp
mov
(bad)
fsubr
or
pop
push
into
(bad)
fmul
push
adc
call
push
fmul
and
jmp
lea
retf
icebp
imul
dec
les
pop
inc
jp
fcomp
div
or
jge
add
xchg
sub
sub
fdiv
shl
leave
cmp
cmps
mov
aam
mov
das
test
sub
jb
les
arpl
add
cmps
fmul
out
xor
jnp
ror
jns
push
fsub
enter
ins
push
dec
mov
add
and
fs
xchg
inc
mov
mov
fsub
inc
inc
inc
rcl
add
or
rcl
push
mov
sahf
bound
cwde
bnd
fadd
sbb
mov
pop
jnp
sbb
js
mov
jge
and
jcxz
sbb
add
fdiv
push
movs
leave
imul
pop
fldcw
frstor
int
scas
(bad)
jecxz
inc
pop
outs
sbb
mov
fdiv
pop
out
test
faddp
inc
fadd
out
xchg
repz
inc
dec
pop
fdiv
dec
mov
rcl
fiadd
ror
enter
call
out
mov
fadd
in
or
jecxz
xor
inc
xchg
imul
lahf
mov
sub
jbe
sub
cwde
pop
ret
loop
stos
and
lods
adc
fist
jmp
in
loopne
out
push
fcom
cmp
jo
sub
jecxz
push
data16
iret
sti
or
fmul
cmc
add
sbb
(bad)
xlat
jno
inc
imul
pop
xchg
xlat
pop
push
and
dec
(bad)
dec
jo
ficom
push
xchg
xchg
arpl
nop
or
ret
adc
stmxcsr
fcomp
popf
call
mov
imul
rcr
fsub
fwait
adc
adc
push
fs
hlt
xlat
pop
pop
push
pop
mov
out
xchg
sub
jb
sub
fiadd
cmp
and
and
loopne
in
mov
(bad)
jno
xchg
lock
mov
jg
sub
call
int
fnstcw
pop
jnp
fild
inc
jp
mov
std
or
inc
mov
lahf
add
push
stc
test
pop
lds
pusha
test
add
dec
or
dec
push
mov
shr
gs
aad
js
das
add
and
and
sbb
and
scas
outs
mov
test
sub
mov
xchg
bound
fadd
xchg
sub
sahf
imul
aad
and
pop
scas
test
push
xor
fcomp
xchg
leave
and
out
jae
inc
cmps
jae
scas
fild
movs
inc
mov
push
xchg
pop
pop
not
xchg
out
or
in
and
imul
and
pop
loop
mov
xor
push
jne
pop
jne
mov
inc
push
fwait
pop
pop
push
inc
or
sbb
mov
xor
mov
shl
sub
sub
mov
pop
dec
jbe
test
lahf
out
adc
sbb
and
mov
push
(bad)
icebp
add
or
add
div
mov
mov
or
and
mov
push
xor
fld
(bad)
outs
mov
fbld
dec
int
out
or
xor
mov
aam
mov
fidivr
lods
les
cmp
inc
dec
pop
jle
aas
push
push
iret
out
add
sbb
push
fsubr
adc
outs
cwde
push
push
ffree
mov
mov
cmc
xchg
and
ja
xlat
jns
mov
repz
mov
mov
aam
rol
pop
xchg
enter
push
jl
(bad)
sbb
sub
loopne
push
mov
mov
jp
mov
pop
push
push
mov
xor
test
stos
out
cmp
neg
enter
pop
retf
adc
pusha
and
ret
cmp
mov
xchg
jg
scas
jmp
or
cmp
daa
pop
loopne
stc
loop
sar
xor
dec
xor
sub
rcl
mov
pusha
mov
jns
fild
inc
or
test
jl
and
jl
mov
inc
jns
ret
pop
sub
and
in
pop
(bad)
jne
or
xor
sbb
fdiv
adc
inc
xchg
in
pop
mov
rol
cli
mov
add
aam
cmp
push
dec
and
xchg
mov
pusha
jnp
mov
push
(bad)
mov
dec
and
sbb
(bad)
in
imul
icebp
fcmovu
pusha
or
mov
mov
push
jl
movs
rcr
nop
test
pop
mov
or
in
dec
lds
mov
cli
push
add
dec
call
retf
stos
enter
(bad)
push
outs
inc
ins
cmps
js
add
inc
enter
jo
and
pop
idiv
xlat
xchg
call
dec
fld
repz
push
inc
inc
or
mov
sti
mov
mov
je
jmp
or
jle
test
mov
(bad)
dec
xlat
or
or
mov
xlat
jecxz
(bad)
pop
mov
or
shr
call
inc
pop
mov
dec
loopne
dec
xchg
daa
pop
and
aam
pop
pop
push
inc
hlt
cmc
das
cmp
pop
fs
(bad)
add
xor
rcr
and
outs
stc
cs
mov
mov
pop
(bad)
loope
inc
xlat
gs
jmp
aam
xchg
inc
(bad)
mov
aaa
pop
adc
mov
mov
loopne
dec
pop
aad
fdiv
cli
mov
popa
call
js
fstp
jecxz
push
cwde
pop
sub
jno
aad
cld
pop
(bad)
fild
outs
mov
cli
les
scas
mov
jecxz
push
or
cmp
inc
inc
and
js
lods
sti
sahf
es
xlat
push
cmc
xchg
fdiv
xor
fcom
sub
pop
fdiv
adc
sti
adc
fadd
mov
pop
popf
fadd
fcomp
ds
xor
mov
xchg
inc
cmp
xor
lock
add
and
mov
ror
retf
push
mov
push
mov
xchg
lods
clc
sahf
fmul
push
sbb
adc
fidivr
aaa
hlt
ror
pop
sar
dec
call
ins
psubq
fdivr
mov
pop
in
and
cmp
xchg
pop
hlt
fdiv
dec
ja
mov
xchg
hlt
adc
cld
mov
pop
mov
loop
cwde
hlt
fs
cli
jmp
sbb
mov
adc
stos
or
fcomp
push
push
jno
mov
inc
fcom
xchg
cwde
pop
sub
xlat
xchg
dec
cmp
in
loope
fcomp
cs
jmp
das
mov
into
movs
jmp
adc
xadd
mov
mov
test
pop
int3
and
sub
mov
rcpps
in
xchg
fsubr
test
clc
and
jmp
add
fadd
cld
test
fdiv
retf
cmc
pop
popa
fdiv
adc
add
imul
pop
fsubr
ss
pop
fsub
pushf
cmp
rcl
in
jle
lods
cmps
and
fwait
xlat
jg
repnz
jnp
sub
leave
retf
jecxz
pop
jl
sti
pop
mov
pop
adc
mov
loop
stc
retf
enter
inc
fs
jnp
push
push
jbe
sar
in
je
jae
sar
jmp
add
xchg
pop
sbb
push
fsubr
cmc
push
and
das
fmul
jge
lahf
push
enter
cmp
ror
mov
mov
xchg
push
push
sbb
mov
xor
lods
xchg
repz
and
lds
cmp
cs
push
fdiv
das
sahf
fist
sbb
cmp
in
cmp
cmp
sbb
sbb
fcom
jmp
add
or
mov
xchg
xchg
dec
stos
inc
fadd
inc
jmp
or
ins
mov
loopne
xor
arpl
jb
enter
fcomp
mov
mov
push
enter
pop
call
xlat
cmps
aaa
or
pop
dec
ret
sbb
inc
ror
stos
(bad)
(bad)
jl
cmp
icebp
cmp
pop
inc
fdivr
ins
pop
mov
pop
cmp
cmp
in
into
imul
cwde
in
or
push
xchg
xlat
inc
cmps
add
ins
jae
fnsave
adc
pop
imul
in
imul
mov
fdiv
aaa
imul
mov
fdivr
add
pop
mov
shr
scas
ret
mov
mov
pop
gs
(bad)
iret
in
sbb
sub
mov
sbb
push
fsubr
mov
mov
bound
fsubr
pop
pop
retf
push
jmp
ds
pop
pop
jbe
adc
mov
jb
xlat
xor
neg
inc
lds
fcom
ins
dec
mul
pusha
xor
xlat
pop
cmp
push
aam
int
mov
and
pusha
test
popa
xor
in
in
cmp
push
test
cs
call
in
mov
cmp
pop
sar
nop
cmp
int
adc
push
retf
sbb
xchg
jb
clc
fcmovnu
pusha
(bad)
jmp
and
(bad)
ficomp
clc
jbe
out
add
inc
int3
cs
xor
xor
sub
pop
outs
cmp
in
fimul
fmul
push
adc
xchg
rol
pop
sbb
int3
cmps
jns
pop
cmp
shl
cwde
outs
dec
test
not
loope
(bad)
mov
push
js
or
mov
mov
pop
pop
pusha
packuswb
fcomp
out
(bad)
scas
retf
popf
test
inc
sbb
fadd
add
sub
popf
inc
loop
icebp
lahf
xor
ins
gs
in
rcr
or
les
ror
adc
cli
push
sbb
dec
inc
mov
xor
add
inc
fadd
xor
ficomp
mov
xchg
(bad)
pop
jnp
add
inc
mov
js
mov
in
fnsave
push
test
std
sbb
and
(bad)
(bad)
fs
fmul
loopne
inc
repnz
imul
mov
mov
in
xor
xlat
ins
fcomp
lea
je
cmp
cmp
stc
cmp
pushf
push
push
jmp
pushf
lea
ja
pusha
push
lea
jb
bt
stc
jmp
movsx
pop
lea
pushf
lea
call
call
fsub
in
pushf
rcl
jb
sbb
xor
fs
inc
ret
cwde
ins
pop
retfw
cmp
push
aam
xor
les
aaa
sub
fadd
les
cs
and
jmp
inc
sub
aaa
xor
aaa
int
xlat
sub
jb
fucom
or
retf
sahf
(bad)
into
rol
xor
inc
(bad)
fnsave
clc
test
pop
adc
mov
inc
add
test
mov
xlat
push
sbb
fist
sub
cmp
sahf
fcomp
es
sbb
mov
sub
cs
aas
xor
adc
mov
retf
aas
push
mov
pop
push
inc
xchg
and
test
movs
inc
jae
inc
push
out
sbb
hlt
pop
daa
popf
cmp
fsubr
(bad)
pop
retf
ja
xor
sbb
jle
daa
cmp
xor
rol
inc
loopne
sbb
out
mov
addr16
dec
es
cmps
cmp
test
mov
mov
cmp
aas
dec
mov
dec
fstp
in
in
test
add
pop
aas
inc
mov
scas
ror
mov
imul
pop
sar
push
daa
inc
cmps
ret
repnz
sub
pop
dec
xchg
sbb
xchg
fimul
cmps
push
jns
test
test
adc
test
pusha
sbb
jle
dec
mov
xor
test
xor
dec
out
int3
xor
lds
ror
scas
cmp
addr16
test
leave
inc
xor
xor
xchg
inc
inc
sbb
into
sbb
xor
out
sbb
les
in
sbb
xor
rcr
fsub
call
les
(bad)
push
mov
pop
push
jmp
add
rcr
test
imul
frstor
xlat
add
rol
xchg
(bad)
out
sub
mov
jmp
push
dec
push
push
push
mov
push
test
loop
pop
sub
imul
push
inc
sub
dec
mov
sub
int
jmp
push
test
xor
repz
and
sub
cld
pop
jno
scas
retf
(bad)
mov
in
pop
inc
test
and
retf
adc
rcr
rcl
inc
jnp
add
jbe
push
ins
push
push
jae
add
call
jle
data16
cdq
mov
sub
loopne
je
rcl
and
popf
leave
inc
cld
nop
and
pop
cdq
push
cs
fwait
adc
cs
fiadd
(bad)
call
movs
pop
fbstp
inc
push
leave
pop
inc
pop
jno
jb
neg
push
xlat
xor
aas
ret
fcom
mov
inc
inc
sub
(bad)
pop
inc
add
int3
or
fiadd
enter
call
xor
dec
jb
mov
fcomp
pushf
les
push
cmp
and
je
leave
ins
fsub
dec
int3
pop
das
imul
int
cmp
xor
js
int3
push
loopne
cmp
cmps
js
js
pop
dec
jmp
hlt
rol
jns
push
ja
lock
test
out
sar
aad
push
shl
movlps
push
out
mov
ds
or
or
cmp
dec
dec
test
mov
sbb
(bad)
fcom
rcpps
push
outs
data16
pushf
add
cmps
push
fmul
sbb
lods
or
and
and
inc
adc
aaa
fstp
popa
inc
pop
jmp
out
ret
add
lea
js
xor
adc
mov
(bad)
push
inc
popw
aas
mov
jmp
daa
mov
jns
mov
pop
inc
pusha
push
push
cmps
leave
fistp
ins
cmp
sbb
ds
jl
sbb
es
xchg
mov
xchg
and
mov
mov
stos
les
sub
and
adc
cmc
xor
in
push
jecxz
fisubr
cmps
or
sar
hlt
clc
aas
jae
cld
or
jmp
push
jmp
imul
repz
pop
ja
sbb
jmp
inc
adc
push
rcl
inc
cmp
inc
adc
shr
enter
loopne
call
push
push
out
or
push
bound
(bad)
adc
and
push
add
dec
lods
pop
pop
sbb
loopne
lock
jno
xor
movs
jle
int
int3
add
sar
dec
fild
in
aaa
int3
enterw
or
mov
cmp
idiv
ret
rcl
enter
aaa
cld
cmp
dec
in
daa
(bad)
loopne
and
xchg
jnp
jne
into
xor
enter
in
ret
leave
daa
es
nop
ret
pop
cwde
push
fcomip
inc
xchg
in
or
sub
xor
add
out
mov
jno
adc
push
jne
iret
out
push
xchg
ret
jmp
cwde
mov
repz
shl
(bad)
shl
sbb
inc
fist
das
fwait
lods
mov
loop
mov
(bad)
in
jmp
shl
(bad)
enter
or
pop
fst
enter
jo
xchg
lock
idiv
aad
add
pop
inc
or
popf
mov
sahf
cmp
int
shr
out
dec
sub
jl
sbb
xlat
sti
in
cdq
cmp
cwde
mov
pop
mov
pop
mov
push
dec
das
dec
sbb
dec
mov
data16
mov
cmp
mov
mov
mov
jg
in
rol
cmp
fucom
aas
mov
in
jb
jbe
fistp
and
inc
call
cmp
or
dec
inc
dec
jbe
adc
xor
retf
add
(bad)
loopne
fist
imul
or
push
aaa
pop
in
mov
shl
xor
mov
dec
fbstp
dec
retf
pop
sahf
dec
cwde
fucom
in
hlt
inc
bnd
sti
mov
pop
cli
inc
push
enter
mov
ds
push
es
sub
fcomip
pop
cmc
scas
arpl
add
ss
arpl
das
pop
jno
xor
push
adc
stc
sahf
jnp
adc
retf
outs
call
mov
imul
enter
pop
fmul
xchg
inc
int3
je
fidiv
or
adc
fild
push
push
clc
sbb
sub
push
pusha
mov
call
(bad)
jmp
inc
xchg
adc
shl
(bad)
cmps
push
into
mov
call
fucom
lods
add
out
sub
shl
leave
scas
retf
clc
push
push
leave
xchg
mov
call
cwde
push
or
cld
and
mov
lods
adc
xchg
(bad)
(bad)
in
retf
add
jp
push
shr
outs
dec
adc
jp
test
cmps
inc
stos
pop
add
and
push
lds
leave
push
xchg
jle
rol
sbb
push
rol
repz
fild
fiadd
push
xor
dec
sti
xor
pop
out
test
ja
scas
mov
xchg
daa
push
lea
enter
inc
(bad)
inc
out
rol
sbb
jmp
shl
(bad)
sahf
fild
sbb
stc
and
enter
popa
ins
adc
ss
jb
pop
cmp
jnp
out
mov
fsubr
ret
out
sar
sbb
ss
inc
mov
out
call
pop
mov
add
and
inc
addr16
cmp
mov
jb
inc
jne
jne
lods
lds
aas
or
inc
push
rol
fmul
inc
pop
push
dec
xlat
imul
or
sub
jbe
xlat
mov
fistp
ds
jg
sbb
retf
js
popf
lods
mov
lahf
or
sahf
sahf
pop
xchg
xchg
sahf
xchg
jg
into
movs
test
lods
icebp
sbb
sbb
mov
cdq
aad
lock
test
enter
ror
in
push
cmp
mov
xchg
sbb
pusha
inc
and
xor
das
ror
and
mov
inc
ins
aaa
repz
jl
cmp
ds
push
rcr
mov
sub
aaa
mov
cmp
mov
jb
stc
and
xor
sbb
neg
test
stos
ret
mov
inc
stc
xor
add
xlat
loope
pusha
lods
shl
rol
arpl
pop
adc
out
rcr
cwde
fcom
xchg
xor
lahf
cmp
mov
ds
pusha
sar
pmaxub
imul
scas
cmp
cmp
sub
lods
leave
dec
iret
mov
out
mov
sbb
inc
adc
(bad)
and
xchg
and
cmps
pop
sbb
outs
or
pop
or
pop
out
xor
add
sbb
pop
loopne
mov
pop
enter
xor
and
das
clc
push
fmul
fwait
xlat
call
push
cwde
mov
xor
pusha
jp
pusha
fsub
test
in
fidivr
loop
mov
inc
loopne
or
pop
aad
dec
jge
and
pop
pinsrw
sbb
out
jp
and
and
dec
xor
enter
jmp
iret
pop
xor
call
mov
sbb
lds
dec
push
xor
mov
ins
mov
jl
mov
out
aam
clc
sub
pop
cmps
int
and
or
cwde
sub
outs
push
(bad)
cmps
add
int3
mov
and
ss
mov
and
mov
test
outs
inc
xor
retf
adc
retf
scas
xor
pop
xor
sub
push
mov
mov
xor
jl
retf
dec
mov
stc
add
adc
xlat
push
aaa
lods
daa
retf
pop
retf
pop
ror
pop
sbb
sahf
stc
sbb
push
loopne
repnz
inc
test
and
movs
push
sbb
fld
fimul
lock
xchg
add
lods
jnp
sub
sbb
add
pop
cmp
(bad)
mov
cs
pushf
imul
xor
imul
xor
and
mov
ret
out
popf
xor
outs
ficom
push
test
jns
sbb
inc
jmp
add
jmp
inc
cmp
and
mov
mov
mov
movs
hlt
out
xchg
dec
ds
mov
lds
loopne
pop
lods
dec
dec
test
addr16
push
sahf
mov
mov
out
retf
sub
mov
cdq
xchg
sar
pop
imul
(bad)
out
rol
xchg
loopne
and
sbb
inc
scas
aaa
scas
push
xor
test
sbb
add
push
mov
not
sub
enter
pusha
aas
test
xor
lock
sbb
xor
addr16
xchg
add
sub
sar
inc
out
aaa
pop
sbb
popf
mov
fs
jo
dec
mov
mov
push
sub
nop
add
mov
adc
cmp
add
(bad)
jle
icebp
inc
les
aaa
cmp
es
jmp
neg
lea
pop
push
jl
dec
dec
dec
xchg
nop
pusha
xor
mov
push
cmp
cmp
lods
mov
retf
rol
shl
call
scas
inc
aaa
rcr
push
push
fimul
in
pop
mov
fcomp
popf
into
call
mov
xor
ja
inc
out
in
dec
daa
dec
mov
push
dec
add
cmp
popa
iret
sub
(bad)
adc
and
pop
cwde
ins
enter
pop
adc
imul
mov
pushw
popf
mov
and
aam
mov
push
cmc
ins
mov
xchg
jb
psubw
cmp
aam
or
ds
push
dec
scas
fs
ret
iret
jmp
(bad)
adc
mov
xor
jl
ret
cmp
xor
xor
int3
enter
mov
ins
fcom
ret
push
cmp
push
es
aas
mov
(bad)
loopne
cld
dec
push
adc
jae
in
loopne
mov
cmp
(bad)
add
call
outs
jne
cmp
xchg
es
xor
mov
into
call
ds
cmp
cwde
outs
movs
mov
js
pop
ins
fnsave
sbb
push
mov
jnp
and
shl
sub
icebp
test
or
pop
ss
hlt
add
(bad)
xor
pusha
ins
dec
xchg
lock
out
jb
stos
inc
loopne
out
outs
dec
les
into
mov
and
data16
into
ins
(bad)
(bad)
fxch
sbb
add
xor
adc
int3
movs
pop
sub
pop
les
jno
movs
imul
movs
rcl
add
xchg
mov
or
loope
loopne
inc
jb
and
nop
xor
hlt
dec
daa
mov
popa
mov
jge
lock
int3
clc
mov
push
fbstp
or
loopne
sbb
mov
or
jg
add
pop
mov
scas
adc
in
sbb
sub
adc
ss
movntq
(bad)
repnz
pushf
int3
shl
sbb
(bad)
fsub
pop
mov
in
adc
in
cli
fcom
fcomp
xor
mov
pop
mov
mov
pop
jle
pop
mov
add
movs
fbld
int
das
xor
loopne
push
and
int
inc
rcr
cdq
mov
mov
dec
test
ds
es
jns
dec
push
mov
push
shl
jno
or
outs
movs
pop
retf
push
sub
jb
push
repnz
xor
test
call
xchg
xor
jmp
arpl
(bad)
movs
xor
xchg
pop
fiadd
jno
shr
test
xor
cmp
mov
mov
mov
mov
lods
pop
cmp
hlt
adc
sub
xor
cmp
fs
sub
neg
mov
in
mov
xchg
popf
and
mov
inc
mov
mov
imul
bsf
outs
(bad)
sub
push
int
adc
or
mov
aaa
jns
call
outs
cmp
test
push
repnz
scas
cmp
aas
fbstp
fnsave
inc
jae
and
pop
es
adc
test
shl
fadd
xchg
pop
clc
mov
ins
fs
mov
es
ins
cmp
push
loop
mov
out
pop
cld
ins
and
ds
inc
mov
fcompp
xlat
repz
sub
xor
pop
push
leave
mov
mov
sbb
and
jmp
(bad)
imul
inc
jb
shl
outs
sbb
out
and
in
jp
push
push
push
xor
ret
js
in
(bad)
test
or
or
pop
ins
pop
enter
mov
xlat
mov
jmp
sbb
rol
fst
int
pushf
pop
stos
shl
xchg
cld
xor
and
js
adc
dec
clc
and
and
jmp
mov
sbb
jo
and
dec
adc
test
jg
outs
lds
into
inc
adc
imul
(bad)
adc
lds
cli
push
sar
add
mov
xor
mov
sub
and
pop
fild
or
adc
mov
pop
aas
jno
mov
neg
loop
test
adc
mul
cwde
jb
xor
pop
push
cmp
movs
xor
inc
loopne
jmp
in
dec
xor
dec
aad
dec
sbb
pop
dec
nop
and
ror
test
mov
les
jae
ffree
mov
mov
shl
jo
mov
fnsave
mov
sar
mov
das
lahf
loopne
cmps
cmps
ret
jbe
mov
out
test
cmps
xchg
pop
scas
int
lods
fst
cmp
stos
sbb
jl
sbb
sbb
cdq
punpckldq
call
sbb
xchg
xadd
dec
adc
sub
std
fnstsw
add
jb
in
enter
daa
mov
xchg
loope
sub
mov
push
nop
les
aas
fdivp
rcr
sub
lock
cs
add
(bad)
sbb
repz
cli
int
ds
clc
jl
xchg
inc
std
jae
aas
sti
inc
imul
loope
loopne
push
out
in
mov
scas
jmp
out
out
or
dec
sbb
push
rol
sar
xlat
(bad)
cmp
aad
loopne
adc
pop
cwde
xchg
pop
adc
data16
pop
icebp
inc
sbb
add
outs
sub
loopne
cmps
cmp
es
sar
sahf
and
mov
sub
ds
dec
sub
jg
repz
data16
jb
pop
popa
enter
pop
inc
or
mov
movs
cld
in
pop
movs
push
xlat
lahf
loopne
retf
test
sub
pop
xchg
in
das
pop
int
retf
enter
pop
ficom
pop
adc
dec
cmp
cwde
and
xor
scas
add
outs
xlat
in
pop
xchg
loop
or
jmp
ins
(bad)
test
aam
sub
mov
cmp
lock
jle
addr16
and
lock
(bad)
and
int
mov
int3
adc
pop
sbb
test
add
cwde
cmp
pop
sar
sub
(bad)
movs
and
or
data16
jbe
sbb
nop
in
mov
cwde
ret
xor
movs
movs
scas
mov
and
mov
inc
pop
rol
jl
hlt
adc
mov
inc
in
sbb
pop
or
and
dec
push
mov
fistp
std
cmp
xchg
ret
jle
ja
or
sub
test
jae
scas
xor
add
in
test
movzx
pop
in
mov
jl
rcl
into
les
ins
rcl
pop
pop
pop
push
(bad)
push
jl
bswap
jle
push
mov
enter
push
pushf
pop
jmp
enter
adc
fsubr
in
xchg
nop
cmp
pop
sub
test
popf
jne
fs
add
sahf
inc
or
jae
lds
add
jecxz
ss
popf
jns
cmp
ret
jl
push
lock
retf
ss
cmp
in
ds
(bad)
enter
cld
aam
xchg
fidivr
xor
inc
ficom
xor
pop
push
jb
sbb
cs
ss
or
or
mov
lods
push
daa
arpl
dec
imul
or
cs
xchg
in
mov
aam
sbb
or
sub
cmp
xchg
cmp
cmp
and
arpl
push
nop
dec
inc
adc
and
mov
sar
inc
das
out
enter
jl
cmp
aaa
daa
add
xchg
pop
xor
mov
inc
das
inc
pushf
push
out
cmp
rol
cmp
or
ja
clc
sar
fld
inc
push
mov
cmps
movs
aad
fstp
jne
xor
mov
in
mov
cmp
jnp
push
mov
or
in
scas
jg
xor
jb
xchg
sbb
stos
jb
xchg
sbb
and
mov
pop
(bad)
xlat
sbb
(bad)
enter
jg
sbb
inc
push
outs
(bad)
lds
int
pop
pusha
in
sub
jbe
dec
cmp
dec
enter
mov
ret
or
push
push
xchg
das
sbb
inc
cmp
int3
mov
es
jp
cmp
sbb
xor
daa
aas
xchg
pop
xor
cmc
js
pop
jb
xchg
push
mov
jg
xor
in
mov
and
in
push
inc
cmps
adc
jg
xor
cld
push
sub
fnsetpm(287
into
sbb
mov
mov
inc
inc
or
xor
repnz
mov
pop
mov
iret
xor
mov
hlt
scas
pusha
out
test
dec
mov
cmps
cdq
test
lds
out
push
mov
push
fwait
pop
mov
das
out
mov
aam
ror
jns
or
or
bound
jb
into
push
fstp
sub
pop
mov
inc
add
loopne
pop
cmp
mov
cmp
mov
lock
retf
movs
mov
rol
sub
fbstp
scas
xor
enter
mov
inc
cld
mov
fisub
into
inc
lds
in
pop
or
aam
sbb
stos
outs
ret
into
pusha
test
pop
loopne
adc
fs
fs
(bad)
shr
mov
out
cmp
(bad)
cmp
mov
push
test
enter
out
sbb
retf
jl
mov
adc
pop
inc
stos
ss
fs
cmp
cld
int3
inc
push
or
dec
jns
fistp
adc
enter
je
and
cmp
retf
mov
hlt
data16
stos
mov
vpslld
mov
sub
aam
cmp
jp
pushf
cs
test
inc
pextrw
inc
add
mov
jbe
test
and
cli
pop
jbe
inc
stos
mov
cdq
shl
mov
fidiv
shl
pushf
xchg
and
jns
imul
shl
cli
(bad)
(bad)
fnsave
hlt
dec
into
cli
std
dec
cmc
iret
xor
sti
(bad)
hlt
aas
xor
cwde
push
mov
popf
fistp
sub
adc
jnp
call
and
mov
dec
push
daa
mov
(bad)
xor
movs
in
lahf
mov
in
jo
cld
mov
sub
add
cld
mov
ds
pushf
into
lods
shr
into
in
out
xor
dec
sbb
lahf
adc
mov
ss
mov
jp
(bad)
pop
das
neg
mov
in
dec
push
int3
lock
jo
loopne
sub
shl
add
ss
jge
inc
loop
pop
mov
and
test
xchg
rcl
in
cmps
sub
addr16
mov
ret
dec
std
inc
mov
(bad)
loopne
mov
xor
sbb
(bad)
cld
push
test
push
sub
cmp
cmps
test
lods
ret
mov
imul
icebp
mov
mov
enter
mov
fld
stos
push
pop
push
sahf
dec
adc
jg
or
push
or
es
jle
pop
push
sar
dec
adc
test
or
retf
push
cmp
pop
jns
pop
clc
cli
cmp
jb
sub
mov
(bad)
push
sti
mov
xor
lods
sub
in
jp
mov
not
fsub
pop
in
(bad)
call
js
xor
das
scas
adc
shl
adc
lods
aaa
pop
js
pushf
dec
pop
retf
out
xor
pusha
pop
push
shr
test
jb
repz
loope
mov
lea
mov
push
out
inc
retf
jl
popf
popf
leave
cli
mov
hlt
stos
adc
push
jns
lahf
es
add
(bad)
or
xor
cmps
dec
pop
or
jnp
cld
xchg
adc
fld
stos
pop
xchg
sub
call
cmp
retf
or
call
in
in
int3
fld
rcl
mov
hlt
sti
adc
lds
adc
aam
jp
out
push
aaa
fadd
jl
push
das
inc
add
daa
les
(bad)
sbb
sar
xchg
adc
pop
in
fs
adc
pop
push
ins
fsubp
pusha
pop
or
test
or
into
jae
les
or
push
push
mul
fisubr
mov
cmp
aad
or
shr
pop
movnti
jge
(bad)
fadd
xor
push
das
sub
leave
in
sbb
cmp
inc
add
int3
pop
cmp
jo
push
mov
fnstcw
or
ds
loopne
jge
xor
mov
xor
enter
adc
(bad)
cmp
scas
push
dec
test
inc
leave
mov
mov
pop
cmp
inc
dec
clc
pop
loopne
or
shl
push
fadd
loop
je
cld
aam
push
call
sbb
fprem
push
aam
push
loope
loope
and
sbb
inc
inc
cmps
mov
into
cld
retf
inc
retf
loopne
out
cld
(bad)
add
aad
nop
in
fmul
push
fidivr
shl
pop
fistp
and
hlt
cli
sub
cmp
add
xor
inc
stc
(bad)
data16
pusha
dec
jno
mov
call
into
aas
sar
and
add
into
loopne
sbb
aas
xlat
inc
add
inc
add
mov
jo
retf
aam
jb
enter
cmp
or
xchg
xor
sub
or
cs
enter
(bad)
clc
mov
add
dec
fiadd
jo
sbb
lds
jns
(bad)
(bad)
mov
inc
inc
mov
inc
xchg
push
push
ret
inc
inc
fs
xlat
mov
loopne
stc
fisttp
(bad)
test
mov
push
mov
mov
out
mov
mov
popa
mov
clc
sub
imul
mov
dec
and
inc
aad
les
push
jl
enter
pop
sbb
or
push
int3
mov
mov
push
sbb
adc
pop
and
scas
dec
mov
nop
push
adc
inc
push
into
add
mov
shl
sub
mov
xor
ret
cmp
push
jecxz
sub
pusha
mov
xor
sub
ret
loopne
jmp
aaa
test
bound
adc
gs
mov
(bad)
cmp
dec
aaa
es
pop
ror
jne
pop
push
push
mov
mov
sub
push
push
mov
sub
push
xlat
jno
cmp
jge
into
and
retf
fwait
jle
rcr
mov
pop
hlt
jg
ret
cmp
pop
(bad)
ret
jno
jne
or
jg
sub
or
lahf
add
lods
pop
rol
xchg
and
retf
pop
clc
into
aaa
(bad)
sbb
add
aas
inc
out
ror
loopne
jp
das
les
loopne
push
int3
mov
sub
adc
jae
jl
or
popf
inc
mov
inc
jb
add
int
leave
xchg
shl
and
leave
js
retf
(bad)
std
sub
dec
xchg
mov
loopne
fidiv
movs
xor
ins
xor
fs
ret
jl
push
enter
in
mov
ret
mov
inc
xlat
pop
aam
bound
inc
sbb
fadd
xchg
pop
add
xchg
cmp
pop
scas
add
inc
ret
ror
ins
adc
ret
aas
retf
pushf
jbe
das
jne
push
pop
lahf
and
jb
pusha
or
inc
out
popa
dec
jae
loopne
data16
xchg
add
pop
jl
ja
lods
jae
in
out
das
sbb
cmp
dec
pop
adc
addr16
outs
enter
call
push
out
sub
std
enter
cmp
fnsave
enter
aas
cld
jne
call
ret
fisubr
pop
add
movs
inc
inc
pop
fsubr
push
hlt
push
inc
fcom
gs
xor
dec
retf
and
std
addr16
sti
mov
xor
dec
add
pop
gs
int3
cvtdq2ps
les
popa
sbb
inc
pop
fistp
cld
hlt
and
loop
lea
fsubr
cmps
mov
mov
adc
or
into
and
mov
or
ret
sub
les
sbb
int
or
int3
and
lods
mov
ins
adc
dec
dec
or
scas
push
push
push
xor
cmp
fiadd
nop
sub
sub
xor
bound
enter
xor
inc
clc
and
loopne
mov
sbb
push
cmp
and
fisttp
cmp
cmp
mov
xchg
retf
into
clc
cmp
(bad)
ror
push
dec
push
ss
xor
(bad)
sbb
adc
rcr
push
dec
inc
cmp
mov
pusha
xor
dec
mov
retf
push
mov
push
mov
cmp
fst
mov
cmc
pop
das
cmp
fs
cmp
push
dec
mov
lahf
daa
int
(bad)
pusha
jmp
mov
cmp
mov
xor
cmp
(bad)
fdivr
jns
movs
frstor
int3
and
dec
aad
jp
inc
adc
mov
mov
pop
inc
add
inc
imul
adc
add
lds
movs
leave
inc
ins
mov
pop
sub
ins
xchg
(bad)
les
rcr
rcr
(bad)
js
dec
mov
adc
mov
dec
and
in
cmp
out
mov
in
sub
sar
or
sahf
(bad)
xor
xor
pop
leave
add
ds
mov
add
ss
mov
je
imul
mov
mov
sub
and
sbb
pop
xchg
mov
jp
push
dec
dec
in
outs
dec
popa
mov
(bad)
idiv
enter
push
das
cmp
cmp
out
adc
and
inc
xor
dec
mov
gs
(bad)
sbb
sbb
movs
mov
call
jb
add
mov
or
loopne
in
rol
push
ja
retf
pop
cwde
js
js
stos
sub
in
or
inc
out
retf
add
dec
pop
test
js
pop
mov
loope
aam
iret
inc
in
push
mov
bound
in
ds
jle
and
cmp
mov
outs
or
push
imul
fild
leave
dec
loop
jle
cmp
xlat
fisttp
jge
retf
pop
fdiv
and
mov
inc
jmp
cs
or
xchg
sub
pop
in
sub
arpl
int3
mov
jb
les
inc
into
xchg
shl
pop
inc
xchg
cmovg
shl
retf
ds
shr
neg
xor
pop
ja
push
mov
add
retf
push
mov
xor
loopne
sbb
(bad)
cs
or
lds
fnstenv
int3
mov
cli
push
enter
or
jp
aas
mov
add
push
pop
cmp
add
mov
test
add
mov
(bad)
jle
mov
add
add
dec
cmp
inc
mov
stos
pop
mov
mov
(bad)
aas
ret
cmp
add
sbb
ret
aas
retf
cmp
add
inc
into
ds
int3
retf
aas
xor
xor
add
inc
ss
cmp
cmp
add
inc
cmp
cs
or
pop
es
pop
in
leave
dec
jno
mov
inc
(bad)
mov
imul
or
cli
loopne
(bad)
dec
cmp
subps
fcom
rol
pop
jne
xor
and
syscall
sbb
out
pop
ja
int
add
inc
push
xlat
add
mov
out
pop
adc
(bad)
pop
pushf
cdq
out
mov
inc
(bad)
data16
dec
or
or
and
mov
daa
outs
ins
sub
hlt
push
ret
and
inc
jo
popf
push
push
push
or
push
pop
sahf
pop
pop
and
jp
or
retf
test
fstp
add
or
nop
adc
bound
push
jo
xchg
and
sub
pop
and
jge
ret
into
pusha
inc
pop
sbb
in
and
in
neg
and
loop
jo
mov
popf
cmp
xchg
nop
addr16
add
dec
xchg
xor
cmc
sbb
pop
leave
mov
dec
mov
add
and
imul
mov
icebp
(bad)
movntps
test
in
ss
mov
leave
mov
ret
jnp
dec
loopne
xchg
mov
pop
dec
das
mov
popf
sbb
clc
retf
idiv
sub
jp
cld
sbb
lahf
imul
push
aad
fidiv
ins
lds
fdiv
dec
scas
mov
dec
stos
inc
and
add
ins
push
push
test
(bad)
jl
retf
inc
aam
enter
xchg
iret
cwde
addr16
push
or
or
cmp
fnstcw
jb
int
mov
and
dec
aaa
test
call
mov
(bad)
jmp
or
lock
dec
mov
in
mov
fimul
xlat
aad
aaa
outs
mov
bound
pop
jg
js
mov
pop
pop
add
add
or
xor
int
inc
xchg
sahf
pop
inc
push
test
xchg
pop
jp
push
push
push
mov
jl
ret
sar
dec
cmp
pop
int
test
adc
mov
sar
xchg
xchg
out
fwait
push
xor
mov
xchg
les
push
pop
sub
xor
jecxz
pusha
push
movs
test
icebp
jmp
sbb
sbb
fadd
mov
add
addr16
and
ficom
dec
mov
sbb
sar
xor
pop
mov
jl
mov
ins
xor
popf
pop
pop
popa
sbb
adc
pop
sub
les
(bad)
int3
xor
shr
mov
aaa
inc
and
inc
adc
dec
pop
mov
inc
cwde
jp
adc
stos
xchg
jns
xchg
or
cli
pusha
adc
add
into
out
mov
mov
pusha
arpl
fadd
(bad)
sbb
sbb
leave
sbb
xor
lock
lea
leave
xchg
add
rcl
jmp
std
sar
and
xchg
cld
fst
lock
sub
sub
imul
je
xor
inc
jl
leave
dec
sub
aad
fisubr
aaa
inc
fild
xor
or
js
xor
inc
pop
pop
jmp
stc
mov
adc
mov
cmp
fcmovne
shl
mov
popf
pop
aam
inc
cmp
inc
cwde
adc
pop
(bad)
pop
jecxz
mov
jmp
out
lea
pop
loop
retf
fwait
cmp
cs
or
pop
jl
inc
int3
cmp
ins
iret
jnp
mov
aad
fbld
cwde
rcr
aam
inc
push
je
xor
fisttp
call
push
push
mov
ror
ficomp
pop
outs
rcr
iret
mov
ret
jb
lods
loope
rol
or
inc
lock
cmp
(bad)
fwait
js
and
xor
les
mov
pushf
mov
dec
(bad)
out
pushf
ja
sbb
daa
pop
push
add
cmp
pop
stc
enter
xor
push
(bad)
dec
pop
jle
jp
dec
jno
fsubr
mov
(bad)
cli
sbb
adc
ins
xchg
lods
mov
mov
test
movs
(bad)
xchg
ficomp
loope
mov
jbe
dec
retf
ret
or
cmc
(bad)
enter
xor
and
jmp
adc
add
(bad)
fcmovne
or
lds
pop
(bad)
addr16
movs
inc
sar
test
cmp
xchg
aas
movs
jp
xor
mov
ins
enter
test
or
test
int
mov
rcr
fsubr
dec
shr
inc
enter
pushf
imul
jae
inc
aaa
pop
add
mov
add
loopne
test
and
dec
mov
lahf
shr
inc
xor
je
push
imul
aas
leave
aad
enter
fcom
in
sbb
inc
fisubr
cmps
mov
and
test
sahf
cmp
adc
fmul
cld
push
movs
loopne
inc
push
out
cmc
add
cmp
aad
mov
dec
mov
dec
push
xor
pop
push
test
pop
adc
ins
jp
(bad)
pop
dec
retf
les
out
pop
sahf
sbb
sti
enter
xchg
ret
mov
add
mov
and
xchg
pop
mov
xor
push
pop
cli
push
pop
adc
jl
into
cmp
and
mov
jecxz
fistp
stc
dec
scas
mov
push
in
mov
loopne
pop
xlat
pop
mov
fbstp
pop
and
mov
inc
hlt
sub
jns
dec
sbb
nop
mov
jns
mov
sbb
stos
sub
cmp
pop
push
sbb
out
lock
cs
(bad)
dec
mov
inc
fistp
cmp
push
dec
mov
es
lds
jno
rcr
adc
xchg
inc
in
mov
pusha
stc
ins
shr
out
fisubr
loopne
and
jb
ins
retf
and
jecxz
mov
in
push
jno
jnp
and
(bad)
ss
and
sbb
jle
inc
and
mov
data16
js
test
inc
and
add
jg
mov
or
mov
leave
aam
dec
call
mov
sub
push
sub
or
shl
jge
pop
sub
inc
add
sub
sub
xchg
pop
(bad)
xchg
stc
(bad)
mov
mov
inc
cmps
mov
inc
pop
jns
int3
push
sub
sbb
stc
push
mov
mov
cs
cmp
or
pop
ror
sub
pushf
call
mov
mov
pop
adc
test
cmps
clc
cmp
aaa
daa
retf
mov
movs
test
sub
pop
pop
inc
test
mov
jmp
mov
push
jo
imul
push
mov
loopne
shr
or
cmp
(bad)
jbe
xchg
push
cmp
mov
fdiv
loopne
es
ja
pop
test
fwait
pop
in
loop
mov
mov
pop
outs
add
lea
inc
add
push
jne
dec
inc
dec
jp
(bad)
gs
sbb
iret
sub
xor
mov
pop
push
mov
push
loopne
xchg
pop
xlat
push
sub
in
das
sar
pop
fidivr
jb
pop
push
jle
mov
jp
(bad)
iret
mov
xchg
fwait
movs
cmp
pop
adc
cld
cld
dec
loopne
inc
push
push
repnz
mov
icebp
dec
pusha
cld
sub
cmp
adc
xor
mov
xor
xor
mov
aam
rdpmc
out
dec
imul
sbb
xor
add
cmps
and
push
arpl
cmp
call
pusha
inc
cld
mov
lds
mov
call
ret
stos
jbe
movs
adc
mov
inc
and
adc
pop
jle
ret
sub
pushf
cmps
or
pop
jno
add
add
inc
jecxz
mov
lds
push
retf
pusha
clc
or
int
adc
or
mov
shl
mov
aam
lods
ret
jnp
inc
cmp
loopne
into
repz
sbb
cmp
add
ret
ss
push
push
mov
xor
lods
pop
push
add
or
es
xor
sub
jge
jmp
sub
jo
jl
and
pop
cdq
xlat
mov
mov
out
or
dec
mov
rcl
sbb
cwde
cmp
xor
or
pop
jg
cdq
les
mov
fdivr
sbb
fmul
dec
ins
retf
mov
les
mov
scas
sub
sub
ret
loopne
stos
sub
dec
or
dec
mov
cmps
sbb
icebp
stos
sub
call
jo
mov
jae
push
mov
jp
pusha
push
shl
fadd
and
pop
cmp
xchg
cmp
jns
add
movs
in
pop
scas
imul
iret
xor
cmc
xor
pop
loopne
xchg
fdivr
aas
les
sbb
cmp
ins
push
cdq
push
sbb
daa
jb
cmp
shr
imul
out
sub
das
push
int
enter
jb
enter
push
xor
in
jns
out
ret
and
mov
lds
sbb
pop
(bad)
xor
pop
retf
in
cdq
cmp
dec
loop
dec
and
and
es
push
pop
enter
sub
(bad)
xchg
std
ds
in
ds
retf
adc
xchg
leave
pop
pop
aam
stos
xor
add
cli
dec
(bad)
jge
retf
cmps
xor
cli
jmp
jb
daa
inc
sbb
cdq
sub
aas
inc
into
ds
int
pause
xchg
inc
out
inc
popf
in
nop
cmp
test
iret
xor
enter
call
cmc
pop
inc
loop
push
sub
and
shr
adc
pusha
and
pop
mov
(bad)
idiv
pop
add
pop
and
retf
bound
xchg
and
and
enter
call
imul
loopne
mov
dec
call
sbb
dec
mov
cmps
mov
mov
or
dec
shl
cmp
es
inc
sbb
out
xchg
pop
das
jb
hlt
adc
sub
hlt
rcl
and
bnd
or
js
mov
movs
and
fidiv
rcr
mov
imul
hlt
add
aaa
cmps
cmps
dec
pop
and
scas
shl
(bad)
pop
pop
pop
push
sti
idiv
(bad)
out
mov
in
clc
aas
jb
stos
cdq
aaa
(bad)
push
push
mov
add
inc
pop
xor
outs
int
push
push
mov
push
loopne
fwait
aas
(bad)
add
jle
(bad)
jb
ins
(bad)
push
push
fwait
cmp
mov
retf
int
jecxz
mov
mov
call
mov
xchg
xor
xchg
xchg
jb
mov
push
sub
inc
cwde
retf
jae
pushf
pop
mov
sub
(bad)
xor
xor
(bad)
cld
push
dec
mov
and
jl
xchg
pop
pop
mov
jbe
rol
pushf
rol
aas
rcl
and
pop
and
aam
cmp
gs
in
(bad)
jmp
cmps
cmp
adc
into
add
(bad)
ja
in
in
pushf
rol
aam
jge
retf
add
into
pop
enter
retf
pop
out
jb
fcomi
adc
aas
jmp
inc
(bad)
pop
call
push
mov
add
aaa
mov
shl
inc
jns
dec
mov
popf
ins
add
sbb
mov
jmp
pushf
push
scas
inc
jae
mov
aam
pop
popf
mov
jb
aad
pop
xchg
fsubr
xor
dec
inc
in
mov
sub
push
cmps
sbb
pop
cs
loopne
pop
mov
shl
sbb
mov
pusha
mov
lock
movzx
aas
repz
cwde
mov
add
fadd
mov
cs
clc
ficomp
cmp
mov
xor
sub
jecxz
aas
inc
push
dec
jg
iret
xchg
cmp
dec
or
xchg
jg
(bad)
repnz
shr
out
mov
and
int3
dec
jmp
in
shr
fnstsw
mov
pop
int
dec
(bad)
mov
jp
fwait
ins
sbb
cmps
add
pop
mov
xlat
dec
enter
pop
push
hlt
rcr
dec
jno
mov
mov
xchg
jmp
cmp
iret
test
fcmovnb
or
int3
sbb
aas
sub
inc
xor
mov
push
mov
movs
mov
jg
sar
shr
rcl
mov
cmp
les
and
xor
mov
or
sar
in
cmp
aas
pop
ja
int3
and
inc
pop
jg
sub
pop
pop
cmp
shl
sub
enter
ins
rcr
push
int3
test
or
shr
mov
out
loopne
add
fist
lock
fisttp
pop
inc
cmp
fwait
pop
pop
in
(bad)
jl
(bad)
(bad)
rcr
enter
cmp
adc
xchg
aad
sub
or
add
mov
aaa
in
jbe
enter
mov
fcomip
mov
inc
gs
mov
add
(bad)
(bad)
out
mov
int3
add
mov
dec
int
jle
test
xor
push
cmps
xchg
stos
rcl
add
sub
mov
jae
int3
lock
test
adc
cli
add
(bad)
cli
add
hlt
cmp
dec
mov
xor
rcl
outs
pop
sbb
imul
mov
jmp
sub
lods
xchg
ret
aaa
add
mov
adc
clc
scas
int
dec
push
js
or
inc
scas
test
push
mov
mov
mov
call
les
cmp
in
sbb
ror
loopne
(bad)
xchg
hlt
knotb
pop
dec
and
loopne
aad
xor
adc
inc
dec
dec
int
cmps
cmp
mov
inc
xchg
dec
cmp
shl
sbb
fs
or
mov
inc
addr16
pusha
fsub
in
push
enter
loopne
or
idiv
and
mov
not
pop
dec
xor
jb
call
and
mov
push
xor
push
retf
pop
xor
bound
inc
ss
push
sub
xor
sbb
pop
mov
test
rol
les
fidivr
push
push
push
push
cld
int3
jmp
clc
cmc
or
(bad)
cli
ins
enter
push
(bad)
cli
mov
idiv
inc
inc
jmp
cs
sub
inc
xchg
push
or
jbe
sub
push
fcomp
xchg
push
out
or
into
xchg
and
sahf
stos
jge
pop
xor
pop
mov
in
mov
xor
cmp
fild
jl
or
mov
or
mov
test
cmp
add
movs
inc
push
aas
adc
dec
outs
jns
les
xor
sub
adc
cld
scas
add
cld
lock
fdivr
hlt
sbb
loopne
fwait
push
xor
dec
les
mov
ffree
loopne
rol
xor
das
fsub
not
sub
inc
and
fbld
xor
mov
or
mov
pop
inc
ret
leave
push
mov
in
outs
adc
shr
fcos
stc
pop
fdiv
sbb
ret
shl
into
cmp
pop
and
aas
es
or
jl
xchg
mov
ds
jecxz
jg
dec
cmp
sar
aad
push
xchg
pop
sbb
aaa
aam
pop
loopne
aam
or
pop
add
rcl
clc
imul
lock
fadd
or
inc
ds
jecxz
sbb
lock
sbb
in
sbb
jl
dec
jle
hlt
int3
fwait
push
repnz
clc
mov
sbb
sbb
mov
jbe
xor
pop
popf
mov
enter
stos
inc
sbb
test
retf
push
in
or
pop
frndint
or
fs
dec
and
fistp
jl
cmp
dec
enter
pop
push
add
dec
add
push
in
add
jmp
enter
cmp
clc
pushf
je
xor
xor
scas
sbb
sbb
ins
xlat
fstp
cmps
jge
cmp
(bad)
xchg
mov
rol
retf
outs
shl
mov
cmp
cmps
retf
xor
push
retf
mov
mov
pop
push
pop
loopne
pop
and
jb
jl
shl
jp
cmps
inc
mov
pop
outs
cmp
pop
(bad)
(bad)
aas
or
inc
ds
fcomp
push
jle
pop
int3
aas
sub
stos
cmp
or
mov
or
je
icebp
in
jae
loope
mov
imul
lock
inc
(bad)
or
out
or
sbb
or
sbb
fdivrp
loop
fmul
mov
add
mov
fild
ficomp
dec
das
mov
cld
add
popf
push
sub
rol
enter
mov
and
test
jnp
sub
add
into
jbe
pop
xor
inc
cmp
pop
jno
xlat
xchg
retf
ret
add
push
adc
xor
add
cdq
test
pop
and
pop
push
mov
push
dec
ins
fist
outs
(bad)
sub
loopne
mov
ja
jae
push
jbe
pop
enter
into
pusha
cmp
lock
jno
cmp
aam
sub
inc
fisttp
sub
shl
push
fs
loopne
mov
(bad)
xor
in
fistp
cld
mov
sbb
add
(bad)
cmp
ins
retf
ins
adc
movs
pop
jno
lds
call
fcomp
or
mov
sub
movs
mov
outs
cli
mov
int
xchg
ins
mov
or
push
push
int3
imul
sahf
jo
mov
gs
gs
push
xor
pop
sbb
repnz
inc
push
fsub
or
into
pop
xchg
sub
out
xchg
pop
xchg
xor
sbb
cli
sub
inc
ret
xor
or
add
pop
dec
out
adc
dec
out
sub
xor
adc
or
jno
mov
shl
dec
sbb
sbb
out
rcl
popa
push
bound
or
jno
nop
(bad)
mov
fnsave
pop
in
add
mov
test
enter
out
jnp
xchg
(bad)
aaa
push
shl
mov
xchg
pushf
adc
in
out
mov
adc
push
aam
cli
or
bound
jmp
jo
inc
pushf
outs
loope
test
in
nop
sub
sub
(bad)
xor
retf
ud2
jp
jecxz
sar
dec
dec
stos
(bad)
inc
(bad)
sbb
mov
and
jp
fucomp
dec
mov
enter
pop
mov
(bad)
mov
std
test
xlat
inc
int
sbb
iret
and
not
cmp
out
std
jo
aad
int
and
stc
call
and
xor
inc
or
xchg
es
aam
mov
cmps
or
mov
and
xor
lods
push
cmp
ss
les
nop
(bad)
push
xor
mov
cmp
and
mov
gs
nop
pushf
shr
mov
xor
cmp
sahf
in
or
out
test
bound
adc
xor
pop
push
sub
xor
fscale
dec
pop
ficom
aam
and
mov
xor
ins
mov
retf
jecxz
retf
push
nop
mov
aaa
das
mov
int3
or
movs
pop
in
out
sub
lock
int3
dec
dec
iret
push
ss
ds
xor
enter
into
mov
cdq
je
mov
(bad)
adc
aas
cmp
xor
cld
inc
loopne
in
adc
clc
ja
loop
or
jge
out
movs
mov
rcr
repz
or
sbb
nop
cmp
inc
mov
adc
ret
pop
out
hlt
jecxz
enter
push
sub
add
shr
mov
jl
mov
sub
ins
ja
call
in
mov
push
pop
ret
outs
mov
call
scas
retf
(bad)
fsub
sub
cld
das
(bad)
xchg
in
push
mov
lds
cdq
mov
fdivr
push
push
dec
jbe
hlt
mov
aas
mov
cmp
mov
cmp
(bad)
das
loope
mov
icebp
lds
hlt
sbb
scas
sbb
test
test
add
cmp
xor
jno
data16
or
and
mov
cld
sub
pop
inc
lock
int3
pusha
pop
stos
xor
sub
add
pop
jbe
mov
adc
or
loopne
sbb
(bad)
int3
adc
mov
aaa
mov
pop
lods
mov
outs
cld
aas
mov
lahf
clc
add
test
out
add
add
jbe
jl
cmp
loop
push
jge
ins
pop
push
jb
clc
xor
test
ret
subps
in
pop
div
pushf
cli
aaa
cld
mov
cmp
push
aam
mov
or
jb
enter
fs
scas
sub
lods
and
push
popf
sti
repnz
push
in
jl
or
xor
inc
mov
dec
out
push
add
add
pusha
dec
fmul
(bad)
hlt
fld
cwde
jmp
pop
and
adc
jnp
inc
jns
push
test
sar
mov
mov
jecxz
in
push
jmp
pop
xor
les
xchg
xor
fstp
jmp
ja
clc
mov
rcr
adc
pop
add
lods
mov
clc
lds
mov
mov
mov
push
cmp
leave
inc
shl
push
ror
stos
push
adc
data16
call
push
jb
jb
add
cld
fdivr
dec
in
xchg
stc
or
icebp
mov
mov
sub
loope
gs
xchg
push
sub
inc
ret
call
push
fstp
cmp
push
popf
fiadd
xor
sub
jbe
sbb
imul
add
sbb
cmp
add
push
or
inc
adc
idiv
ins
or
add
nop
aam
mov
aad
sbb
cmp
les
cmp
sub
xchg
into
mov
ror
mov
ror
in
mov
or
rcl
in
sbb
lods
or
pop
inc
jnp
mov
cld
in
and
dec
cmps
cmps
popa
(bad)
scas
jb
jb
push
call
cmp
retw
and
mov
out
and
add
nop
lock
sub
cmp
es
popf
aas
adc
mov
inc
int
lock
adc
push
cwde
sahf
cmp
xchg
mov
and
fldcw
cmp
ror
jae
sbb
mov
sbb
adc
inc
dec
and
mov
or
push
push
xlat
out
mov
sar
test
popf
xor
imul
ins
mov
fidivr
std
cs
add
mov
fsub
pusha
push
inc
cld
ss
pop
cld
pop
mov
push
int3
pushf
int
xor
std
fstp
and
mov
fmul
data16
xor
shl
lahf
cwde
dec
aad
sub
mov
sub
mov
ins
popa
dec
rcl
rcr
nop
(bad)
cmp
mov
cmc
push
pop
cmps
rol
outs
dec
push
call
or
xor
push
add
aam
(bad)
dec
imul
and
push
fimul
es
call
mov
xlat
jg
jl
fnstenv
sub
pop
retf
outs
int
in
pop
dec
xchg
(bad)
int3
scas
sahf
xor
mov
mov
xchg
les
inc
sub
sbb
jnp
cld
mov
adc
lock
sub
imul
aad
jl
enter
sub
or
mov
xor
int
loopne
cmp
lea
jo
or
sbb
push
push
mul
jge
(bad)
fimul
push
push
dec
shl
jle
add
add
mov
ret
push
daa
sub
jbe
or
xor
es
jns
in
xor
jecxz
(bad)
fucom
pop
adc
or
pushf
mov
cs
xor
les
adc
add
or
adc
push
imul
mov
jbe
ds
aaa
xchg
leave
cmp
sbb
enter
inc
inc
cmp
cmp
inc
push
dec
mov
(bad)
cmp
(bad)
pop
lock
or
cmp
(bad)
int3
outs
ror
dec
jmp
cmc
cmp
push
and
in
je
and
enter
inc
inc
pop
pop
cmps
push
pop
pop
cmp
mov
hlt
in
cdq
xchg
sbb
dec
shl
xlat
cli
call
xlat
neg
std
dec
enter
sti
pop
loop
psraw
cdq
fstp
ds
out
in
in
ret
bound
xchg
cmp
cmp
jmp
pop
xchg
mov
mov
addr16
lock
out
inc
jle
pop
out
ret
cmp
mov
pop
cmp
dec
or
pop
rcr
mov
outs
lods
test
stos
aaa
xchg
pushf
push
xchg
xchg
(bad)
nop
movs
scas
(bad)
(bad)
xchg
xor
test
test
call
scas
xchg
aaa
sahf
scas
outs
popf
call
inc
cmp
test
pop
ins
fcomi
clc
mov
outs
jmp
movs
mov
or
inc
outs
ss
cmp
stos
jo
dec
int3
push
call
sub
sub
jecxz
fmul
inc
movs
cmps
dec
push
jo
icebp
mov
mov
mov
mov
retf
popf
scas
add
ret
fidivr
pusha
sbb
xor
outs
xor
and
repz
sahf
cmp
(bad)
mov
push
fwait
outs
mov
xor
inc
f2xm1
xor
rcr
imul
adc
push
sbb
cwde
dec
inc
adc
aaa
popf
sub
stos
jg
mov
sub
xlat
dec
daa
cmp
jbe
ss
sbb
outs
fld
mov
inc
pop
push
cmp
fnstsw
hlt
aas
lock
jb
mov
fbstp
jae
cmp
arpl
add
add
or
add
xor
xor
popa
ret
sbb
adc
sbb
sbb
mov
(bad)
jmp
std
push
jp
shl
(bad)
mov
xor
iret
fisubr
xor
adc
jmp
(bad)
mov
vmovmskps
jmp
push
pusha
push
mov
out
xchg
dec
inc
mov
adc
ins
imul
mov
inc
lock
sub
jo
pusha
or
mov
pop
je
cld
pusha
outs
loopne
test
sbb
cmps
ror
retf
or
in
jge
jnp
rcr
jno
movs
xor
inc
pop
and
gs
ficomp
ffreep
adc
out
je
sub
pop
mov
xor
into
in
(bad)
sub
inc
cs
add
in
out
pop
bound
dec
aas
push
nop
and
je
jle
jg
mov
dec
repnz
push
js
jae
dec
arpl
loopne
sbb
shr
mov
stos
fidivr
rcl
or
xchg
inc
sub
enter
int
or
mov
bound
xchg
xor
enter
imul
popf
fcmovnb
pop
sbb
test
or
inc
add
cs
lock
into
inc
dec
ficomp
cmp
adc
mov
xchg
cmp
ret
and
bswap
pop
push
fsub
fcmovb
xlat
ret
jbe
pop
push
pop
xchg
out
xchg
sub
mov
movs
sar
xchg
hlt
rcl
mov
lods
ss
jb
sahf
les
and
push
mov
jns
mov
push
pop
inc
mov
jle
mov
push
jle
push
call
xlat
leave
pop
loop
sub
add
sbb
ret
(bad)
(bad)
sub
(bad)
leave
pop
and
enter
mov
pop
and
enter
jbe
leave
into
aam
sbb
(bad)
pop
push
nop
add
jbe
test
hlt
cdq
enter
pop
cmp
hlt
xchg
jbe
outs
jbe
je
js
std
add
mov
nop
sbb
in
pop
add
mov
and
les
es
jg
scas
jo
dec
xchg
jp
(bad)
jo
and
dec
cs
sbb
rol
fst
add
ja
into
ret
push
push
jp
fld
xor
test
fst
jmp
ins
shl
inc
xlat
test
outs
inc
adc
xchg
loopne
fst
out
out
imul
add
and
aaa
cmps
and
into
cwde
ror
push
mov
iret
mov
in
in
loopne
sub
cmp
in
outs
dec
rcl
sub
inc
pop
push
xor
loopne
call
xor
(bad)
addr16
or
jg
iret
xor
daa
aas
jbe
cmps
add
inc
push
mov
in
rol
clc
(bad)
cld
cli
in
inc
test
pop
or
push
cld
cmps
(bad)
ins
or
mov
fs
mov
mov
sbb
fidivr
cmp
(bad)
imul
outs
and
lock
sbb
push
and
adc
test
dec
into
idiv
xor
in
or
sub
mov
loope
add
mov
cmp
mov
xchg
adc
repnz
xchg
mov
jmp
push
fist
xor
daa
push
pusha
test
aas
add
or
je
xor
es
mov
dec
sbb
jo
mov
imul
and
or
pusha
ficomp
push
ins
es
mov
call
lds
adc
or
cmp
test
push
loopne
add
mov
mov
movs
mov
inc
call
sub
xor
and
xchg
adc
jecxz
mov
and
sti
ret
aad
in
add
jmp
inc
cmc
xor
push
int
inc
ret
pushf
jl
sar
mov
test
(bad)
cs
daa
mov
dec
jle
test
int3
xor
and
test
rol
mov
mov
ror
loop
mov
push
inc
mov
rol
fiadd
pop
jl
mov
adc
pop
mov
mov
push
fisttp
add
loope
jb
push
xor
sub
outs
imul
jo
cmp
inc
in
pop
shl
cmp
imul
pop
cmc
ins
xor
xor
add
fst
jbe
or
or
push
push
sub
(bad)
xchg
push
loop
popf
push
call
pop
fcmovnbe
aas
or
adc
inc
lds
pop
pop
inc
fadd
aas
pop
or
push
push
icebp
sbb
jae
pop
push
enter
adc
cmc
in
pushf
loopne
jns
push
mov
imul
mov
pop
xchg
mov
inc
iret
mov
sar
push
inc
enter
test
int3
les
call
in
mov
dec
sbb
cmps
and
jae
into
sbb
fidivr
sub
pop
cmp
jo
in
inc
std
dec
rol
and
into
jl
ja
pop
das
int
sar
sub
aad
arpl
mov
mov
mov
or
movs
mov
pop
sbb
lods
js
popf
das
jo
cwde
push
iret
fcomp
add
and
call
loope
adc
sar
jae
mov
mul
jb
or
or
mov
shl
cmp
inc
dec
addr16
sti
cmp
aas
or
je
sbb
adc
in
mov
adc
test
loopne
and
loopne
push
dec
js
dec
mov
pavgw
inc
add
int3
mov
mov
jp
std
cmp
inc
ins
sbb
aas
mov
fidivr
mov
jl
mov
jo
fbld
or
mov
imul
(bad)
cld
imul
rcr
pop
shl
or
pushf
adc
test
or
aad
inc
loopne
ds
mov
cmps
psrlw
push
in
mov
pop
loopne
ins
mov
stos
iret
loop
das
jns
xor
cwde
int
outs
les
loop
in
leave
xchg
sbb
adc
and
outs
sub
sub
imul
dec
sahf
in
jp
inc
add
js
leave
sub
daa
inc
les
cld
rcr
jmp
jns
fist
and
js
loopne
sbb
ins
sbb
xor
push
les
retf
fidiv
retf
enter
mov
mov
rcr
sbb
xchg
inc
pusha
fist
sbb
mov
cld
movs
out
inc
scas
test
sub
push
mov
(bad)
push
pop
xor
inc
adc
aad
or
cmp
lods
xor
(bad)
jb
dec
xor
lea
aaa
mov
pop
pop
lahf
fisttp
cs
sbb
data16
sub
cdq
sbb
and
mov
xchg
dec
and
mov
popf
add
add
or
sub
call
inc
cmps
int
clc
pop
pop
pop
(bad)
into
inc
out
xchg
in
sbb
sbb
sub
or
dec
adc
stc
push
clc
scas
push
mov
sbb
aam
push
mov
cmc
outs
push
test
xchg
cmp
or
push
push
lock
clc
jae
mov
out
pop
push
int
inc
sbb
ins
or
fmul
enter
jecxz
adc
add
mov
mov
or
mov
fidiv
xor
outs
mov
mov
enter
cld
in
stos
dec
sbb
clc
pop
cmovns
cmp
lock
scas
cmp
mov
sub
adc
cwde
je
sbb
mov
pushf
sahf
sbb
inc
fcomp
ror
ins
mov
adc
pop
(bad)
sub
adc
sub
imul
imul
inc
hlt
add
sbb
inc
cmp
xchg
jle
(bad)
hlt
mov
test
pop
test
sbb
sti
inc
loop
push
loope
loopne
fistp
mov
in
in
jecxz
jmp
fsub
add
inc
in
aas
in
inc
cmps
jmp
shl
shl
sar
mov
pusha
std
repnz
inc
int3
xor
push
test
stc
jb
push
or
dec
xlat
or
fisttp
fisttp
xor
nop
loop
les
mov
(bad)
pop
or
int
mov
ret
cdq
(bad)
aas
nop
sahf
inc
mov
mov
arpl
xchg
rcl
sub
ins
mov
push
ins
mov
xchg
bound
sbb
cld
push
movs
push
adc
dec
inc
(bad)
int
jae
sbb
call
dec
test
sbb
xchg
das
daa
cmp
test
dec
sbb
imul
(bad)
lds
fisttp
mov
push
in
(bad)
dec
mov
jo
call
adc
cmp
dec
cmc
call
fild
into
mov
jb
retf
mov
ins
sbb
fwait
jae
shr
inc
mov
movs
or
push
aam
lds
stc
in
loopne
ror
fild
aas
inc
jg
pop
shl
or
js
ss
mov
inc
push
sub
lea
cmp
cmp
pop
push
xor
mov
fbstp
rcr
mov
test
push
rol
imul
pop
lods
xor
mov
pop
push
dec
mov
or
repz
(bad)
sbb
ficomp
into
mov
add
mov
popf
(bad)
pop
ins
or
inc
adc
pop
cmp
push
test
sbb
push
clc
fdiv
dec
lds
dec
mov
cli
popa
jmp
fdecstp
nop
cli
sahf
mov
dec
mov
mov
in
(bad)
aad
xor
pop
and
pop
repnz
cli
out
xor
mov
and
fdiv
ins
and
iret
sbb
mov
sub
call
leave
xchg
mov
mov
jb
lock
dec
pop
sbb
dec
mov
adc
into
shl
inc
jae
mov
rcr
push
lods
loope
(bad)
out
xchg
daa
cwde
fiadd
push
mov
jns
mov
out
sub
sub
push
pusha
shr
jo
scas
pusha
cmp
sbb
push
dec
imul
push
es
mov
loopne
add
bnd
arpl
jl
pop
fcmovu
mov
inc
cmp
add
ror
sbb
imul
(bad)
loopne
loope
push
das
sbb
inc
dec
loopne
stos
test
fcomp
mov
movs
add
sar
stc
retw
xchg
jne
push
xor
xchg
shr
xadd
sub
jl
or
out
jbe
sub
xchg
xlat
les
ds
adc
xlat
retf
inc
xor
fistp
fild
jno
xchg
push
out
mov
cmp
fiadd
fucomi
xchg
inc
and
rcl
cli
xor
mov
data16
cmp
neg
sub
inc
lods
sbb
lahf
pop
add
fidivr
pop
jp
cld
cld
test
movs
outs
pop
or
pop
loopne
cmps
sar
jp
test
pcmpeqd
cs
xchg
sbb
mov
cmp
hlt
(bad)
xor
adc
inc
ins
sbb
xchg
pop
xor
les
sbb
enter
sub
add
mov
in
mov
repz
mov
pop
sbb
(bad)
ds
and
mov
inc
and
sbb
or
add
sub
int
xor
pusha
(bad)
xchg
cld
mov
clc
adc
aas
hlt
sti
push
inc
mov
pushf
hlt
enter
or
enter
int3
out
pop
jae
jle
jg
pop
jo
jle
push
clc
cmp
jecxz
mov
(bad)
add
pop
into
clc
sub
or
and
(bad)
xor
ss
jle
fmulp
push
daa
pop
cmp
push
aas
(bad)
fld
ret
test
inc
pop
fldcw
lods
leave
sbb
cmp
mov
je
mov
out
int3
aam
pop
ins
sbb
aas
jnp
push
(bad)
(bad)
gs
(bad)
jp
ret
or
enter
or
inc
push
lock
std
and
mov
mov
xor
pop
adc
aaa
ror
ret
aaa
clc
sub
ret
imul
push
rol
fld
fist
outs
dec
xor
dec
push
and
xor
retf
clc
cmp
push
popf
inc
call
hlt
test
adc
sahf
mov
inc
mov
xor
retf
icebp
add
jmp
push
imul
inc
xchg
retf
jle
lods
mov
adc
dec
sbb
ds
xor
sub
push
pop
pop
mov
and
cmp
cmps
and
leave
out
les
xchg
mov
in
pop
jge
out
xchg
inc
jnp
leave
inc
jae
test
add
bound
test
daa
out
and
jl
data16
sbb
sbb
mov
int3
pushf
mov
adc
pop
mov
mov
sub
cmp
pushf
pusha
adc
mov
pop
dec
sbb
inc
je
clc
int3
in
jb
inc
pop
sbb
push
mov
inc
(bad)
retf
push
mov
fnsave
push
sbb
in
xor
in
fcmovnb
enter
jecxz
push
retf
out
movs
sbb
jmp
fnsave
push
or
test
scas
lods
pop
gs
and
popf
arpl
ret
sbb
call
jg
cmp
das
les
enter
(bad)
int3
into
lods
(bad)
into
pushf
fldcw
mov
mov
(bad)
(bad)
sbb
sub
mov
inc
add
test
or
xor
lock
pop
loopne
out
neg
pop
bound
jp
test
xchg
out
lods
les
cwde
ds
in
cli
inc
js
pusha
sub
cmp
inc
pop
pushf
outs
lds
push
add
cmp
mov
gs
push
push
xor
in
das
fist
inc
ins
(bad)
xchg
ror
adc
mov
pop
loop
dec
push
sub
sbb
cmp
addr16
mov
cli
dec
mov
mov
cmp
mov
loope
ins
stc
out
std
idiv
pusha
pop
mov
repnz
retf
imul
mov
sbb
in
in
sub
iret
nop
push
icebp
in
gs
cmp
rcl
les
inc
repz
ss
mov
sbb
stos
pop
(bad)
int3
inc
jle
data16
mov
lahf
push
sbb
pushf
xor
xchg
push
idiv
xor
dec
aas
les
imul
cmps
and
(bad)
jl
mov
adc
and
mov
lds
nop
sub
ret
je
mov
ins
mov
or
dec
shl
aam
sbb
cmp
in
add
leave
idiv
sub
enter
das
cdq
mov
pop
shl
pop
adc
imul
jne
mov
jne
cs
push
mov
jnp
into
adc
mov
cli
mov
push
inc
dec
loopne
adc
call
aas
adc
in
inc
sbb
jl
sahf
sub
xchg
sbb
and
ret
xor
sub
movs
push
es
pop
pop
aad
imul
push
rcr
int3
push
fiadd
mov
jae
or
jae
sbb
iret
pushf
inc
ret
or
sub
idiv
sbb
dec
dec
cmp
ror
jecxz
push
xlat
in
ins
push
mov
das
ds
jl
adc
or
pop
daa
pop
mov
leave
push
loopne
dec
mov
les
les
retf
mov
or
jno
sti
jae
xchg
neg
pop
mov
jmp
cmp
jmp
mov
inc
pop
cmp
pop
or
cmp
sbb
push
loopne
js
fwait
or
adc
fstp
inc
(bad)
jg
fnsave
dec
outs
mov
xor
sbb
dec
dec
imul
push
popa
sub
test
push
push
es
add
mov
sahf
call
dec
dec
sar
mov
cmp
or
aam
call
ret
xlat
call
add
and
into
in
or
int3
mov
mov
or
jne
sbb
or
repz
sub
sub
adc
repnz
sbb
test
and
or
xchg
pop
or
daa
cli
dec
inc
lahf
sub
cmp
(bad)
scas
mov
ja
ins
movhps
neg
call
jae
xchg
aas
in
adc
xor
or
pushf
mov
pop
bound
add
ror
xchg
cmp
cmps
push
and
push
xlat
inc
jo
push
fs
je
and
cdq
xchg
out
xor
out
lods
sbb
shr
(bad)
mov
xor
jno
xchg
in
jle
fnstsw
jecxz
in
inc
retf
xor
add
ds
movs
in
mov
es
movs
repnz
pop
leave
inc
mov
dec
test
ret
xchg
mov
es
fucom
push
dec
imul
popa
imul
aas
inc
or
pop
lahf
xlat
mov
in
jmp
outs
xchg
adc
adc
xor
fstp
pop
fcom
ds
bound
sbb
xchg
xor
add
jbe
cmp
pushf
je
mov
inc
pushf
(bad)
mov
mov
push
pushf
jmp
sbb
mov
pop
fabs
and
in
sbb
clc
cmp
and
add
sti
in
into
out
push
cmp
test
jg
mov
mov
cmp
push
inc
jno
add
fbstp
arpl
loopne
lea
jmp
ins
add
std
mov
outs
jns
pop
ins
(bad)
fcom
test
cmp
or
mov
ins
es
popa
pop
push
push
fsubr
fadd
(bad)
xlat
push
adc
pop
adc
xchg
test
ds
xor
cmps
cmps
push
(bad)
shr
lock
xchg
mov
adc
sbb
(bad)
ds
nop
nop
sbb
push
inc
ins
test
sub
aam
pop
xchg
movs
sbb
xchg
data16
cmp
pop
nop
mov
test
fs
push
pop
or
mov
stos
mov
cmp
(bad)
daa
mov
xor
add
(bad)
ins
xchg
cdq
mov
xchg
into
push
lods
pop
mov
aas
mov
adc
pusha
(bad)
cmp
clc
inc
aas
adc
jae
sti
adc
ins
xchg
push
mov
xor
dec
int3
jno
iret
sub
rcr
ss
xchg
xor
add
xchg
lahf
int
sbb
icebp
aas
daa
xchg
loopne
cmp
(bad)
icebp
cmps
mov
scas
rcr
cdq
xchg
xor
mov
and
mov
ror
mov
xchg
bound
(bad)
ins
sbb
add
and
(bad)
cmc
xchg
or
jge
test
retf
in
or
mov
ins
lock
xchg
aad
ds
jne
aad
lods
into
mov
(bad)
pop
mov
sbb
rcl
movs
inc
iret
sbb
adc
dec
push
add
int3
addr16
movs
jmp
or
add
push
adc
add
stos
mov
cld
js
mov
clc
cmps
xchg
pop
scas
mov
adc
sbb
fild
(bad)
nop
je
or
and
shr
xchg
dec
adc
jne
cmp
leave
lsl
and
xchg
sub
in
mul
xchg
repz
and
es
js
inc
push
imul
and
daa
dec
push
mov
repnz
retf
ja
lea
aam
push
cmps
push
push
call
or
mov
ins
xor
fcmovnu
loope
scas
mov
ins
imul
stos
and
pop
lock
sbb
jno
ret
mov
bound
sub
lods
pop
sub
cwde
xor
sub
or
adc
out
sbb
xor
cmp
sahf
cwde
hlt
rol
ins
pop
(bad)
fs
or
(bad)
or
add
jg
shr
stos
or
sti
cmp
mov
cli
and
sbb
sbb
in
rol
out
loopne
rcl
loopne
xlat
leave
fisttp
clc
push
cld
in
sub
stos
enter
mov
inc
mov
arpl
ins
call
inc
adc
mov
es
in
xchg
fimul
es
mov
cwde
sub
sbb
jb
mov
pop
jno
sar
mov
sub
mov
mov
xor
jp
mov
loope
jl
iret
nop
fadd
rcpps
shl
cmp
sbb
add
loop
stos
jbe
or
cmp
fidivr
adc
pop
xchg
dec
rol
xchg
out
dec
jg
sbb
ins
add
mov
(bad)
imul
jno
cmp
int3
or
xchg
cmc
or
sbb
aam
into
loopne
and
stc
loop
movs
jne
ins
daa
pop
aaa
sub
fidiv
push
enter
aas
jge
fist
aad
cmp
push
enter
and
xchg
inc
xor
sub
dec
or
inc
sbb
sub
and
sti
enter
jnp
jl
cmp
cmps
inc
mov
adc
sar
pop
pop
lea
jbe
add
popa
cmp
ins
sahf
mov
repnz
aam
inc
or
es
sub
add
and
shr
xchg
xor
and
push
rol
pop
mov
inc
shl
lds
inc
pushf
xor
retf
mov
(bad)
pop
shl
cmp
(bad)
mov
pop
lds
test
inc
xor
in
sbb
jge
lods
pop
mov
push
lods
mov
cmps
leave
adc
cmp
or
stos
pop
out
ret
adc
adc
aas
xor
cmps
sub
mov
push
cdq
data16
cmp
and
mov
fmul
sbb
xor
in
pusha
push
pop
push
stos
pusha
jo
adc
dec
lods
jp
pop
out
jns
add
std
test
aaa
adc
add
sub
sub
adc
movs
leave
pop
push
cmp
data16
xchg
movs
sbb
xor
ret
gs
popf
xor
fxtract
and
cli
out
dec
inc
fwait
push
out
leave
add
leave
sbb
int3
enter
pusha
mov
in
pop
jmp
jbe
sbb
loop
sbb
inc
lods
das
xchg
push
mov
inc
retf
mov
(bad)
lock
aaa
or
in
je
sub
pop
mov
mov
test
push
ja
mov
inc
mov
cmp
add
ds
iret
and
mov
aam
pop
mov
call
das
dec
out
jle
and
ins
and
ja
xor
aad
add
cmps
xor
xor
mov
outs
shr
and
inc
cs
jle
ss
sub
ret
pop
dec
pushf
or
in
push
(bad)
loopne
adc
mov
sub
jl
cmp
or
int
push
stos
aam
push
(bad)
jb
inc
ss
fdiv
out
inc
sbb
idiv
enter
mov
fidivr
movs
push
shl
ja
cdq
in
mov
push
loopne
into
push
popf
cmp
mov
and
fs
and
inc
pop
pop
daa
mov
scas
imul
aaa
nop
xor
sub
shr
rol
jl
ret
ror
fdiv
call
lods
cli
movs
(bad)
int3
mov
mov
dec
xor
xchg
inc
mov
fst
imul
cmp
scas
adc
pusha
push
mov
mov
adc
sub
mov
dec
cdq
mov
sahf
cli
fidivr
mov
xchg
in
pop
movs
push
lea
fcmovbe
fnsave
pusha
cmp
dec
dec
dec
xor
mov
and
jl
shl
pop
sbb
int
push
test
jns
movs
inc
and
into
xchg
aas
and
fcmovnu
(bad)
fs
mov
mov
movs
rcr
adc
test
inc
sbb
mov
sub
adc
jo
jns
or
push
loopne
inc
ret
xchg
pusha
sbb
xchg
add
push
pushf
div
cmp
pushf
and
call
js
es
push
add
fisubr
push
jmp
jns
mov
pop
add
or
mov
adc
sub
mov
aaa
(bad)
jl
fs
(bad)
jmp
jmp
and
pop
(bad)
xchg
ins
enter
add
retf
push
dec
sub
mov
sar
iret
xchg
pop
fwait
and
jne
movs
xchg
retf
xor
leave
dec
in
jge
inc
push
iret
fdivr
and
(bad)
xor
adc
jg
(bad)
pop
jb
aaa
xchg
fs
xor
pop
dec
pop
sbb
imul
push
int
movs
and
imul
adc
daa
fs
adc
mov
sbb
xor
dec
sbb
sar
pop
and
xchg
je
push
movs
or
mov
clc
data16
adc
cmps
sti
add
fwait
imul
add
cmc
add
cmp
lock
xchg
repnz
popf
pop
sbb
cmc
dec
xchg
push
mov
xor
adc
push
sub
fcom
push
jecxz
jo
mov
or
je
ror
push
ins
leave
imul
int3
add
in
mov
fdivr
aas
add
xor
adc
push
pop
xchg
jb
dec
aas
rcr
jo
add
loope
jb
and
mov
in
je
cmp
ret
popf
mov
xchg
xor
jp
xchg
loopne
pop
iret
sub
clc
mov
js
xchg
jae
xchg
and
lods
cwde
ret
mov
dec
mov
jle
(bad)
bound
(bad)
jle
int3
push
xor
mov
mov
cs
(bad)
fnstcw
pop
or
dec
enter
lds
mov
cs
adc
pop
cmp
push
loopne
outs
es
sub
gs
out
(bad)
rcl
movs
mov
dec
push
leave
mov
lahf
leave
mov
cmp
lods
sbb
les
and
mov
pop
pop
jnp
cwde
cmp
jno
cwde
aas
rcl
sahf
icebp
call
int3
(bad)
fldenv
dec
addps
outs
in
sbb
movs
jnp
popa
jmp
sbb
xchg
loopne
(bad)
cs
fistp
ds
(bad)
or
loope
mov
xchg
push
xor
sub
fst
cmp
daa
cmp
daa
movs
imul
pop
rcr
retf
xor
ret
push
mov
jle
xchg
pop
in
mov
dec
mov
pop
popa
(bad)
push
into
pusha
iret
inc
addr16
imul
imul
(bad)
cmps
xlat
sbb
dec
jns
ss
(bad)
lahf
pop
mov
in
xchg
fimul
jno
inc
int3
popf
ss
adc
cwde
mov
aaa
leave
pop
inc
mov
pushf
pusha
es
push
pop
fisubr
push
xor
sbb
xor
jnp
das
xor
sahf
mov
cld
and
and
xchg
push
push
fdivr
bts
int
xor
int
xor
cmp
sub
fidiv
in
mov
cmc
cmp
push
repz
sbb
fldenv
push
out
stos
out
cmp
mov
sbb
gs
loop
shl
dec
ja
jp
stos
ret
fst
xchg
int
shl
mov
(bad)
(bad)
add
adc
sub
xchg
xor
xchg
call
js
outs
jg
push
into
inc
mov
xor
jne
dec
ret
mov
jns
push
xchg
mov
pop
ins
sub
jne
mov
loopne
or
pop
shl
xchg
inc
adc
(bad)
mov
out
and
ror
sbb
outs
mov
repnz
jb
or
ret
bound
inc
js
pusha
cmp
or
add
and
mov
imul
bound
(bad)
sub
ins
push
inc
lds
dec
dec
add
sub
inc
retf
aaa
or
push
ds
(bad)
int3
addr16
(bad)
and
les
jl
or
ds
daa
ret
rcr
pusha
push
fidivr
mov
mov
mov
push
jns
mov
push
cli
dec
(bad)
rcl
daa
add
sti
sbb
retf
es
cmp
cmp
sbb
xor
mov
mov
imul
mov
mov
jp
sbb
mov
dec
lahf
scas
in
retf
cmp
pop
loopne
add
ins
adc
int
push
and
pop
retf
shl
dec
aad
xor
or
jl
pop
jnp
mov
xchg
cdq
push
jbe
push
movs
mov
iret
push
in
sbb
das
mov
(bad)
(bad)
iret
xor
std
mov
stos
in
jbe
jb
rol
mov
mov
pminsw
in
and
iret
lods
mov
int
fbld
xchg
(bad)
push
jle
xor
mov
push
leave
sub
cmp
or
out
inc
aam
mov
xor
xor
movs
adc
mov
mov
enter
ds
nop
aam
mov
xor
cmp
and
mov
xor
call
aas
or
inc
loop
mov
cs
(bad)
sub
sub
xchg
loope
ret
sbb
cli
sbb
fdivr
dec
(bad)
xor
(bad)
stc
sub
pop
mov
mov
push
sbb
repz
in
inc
lea
shl
(bad)
xchg
mov
adc
mov
movs
ficomp
xchg
mov
lods
mov
loope
out
leave
add
sub
mov
inc
dec
or
push
add
aam
sar
mov
loope
sub
in
jp
enter
aas
jbe
pusha
cmp
mov
addr16
sbb
loopne
(bad)
fnstcw
cmp
and
inc
lds
enter
in
xchg
jge
and
cmp
or
inc
retf
in
vpsrlq
dec
retf
inc
jo
cmp
rol
outs
int3
pushf
inc
shl
in
inc
ror
sbb
sub
mov
sbb
or
fdivr
cmp
inc
jae
xchg
not
cmp
push
(bad)
mov
xor
mov
int3
dec
cmps
loop
int3
int3
pushf
rcr
mov
in
mov
jl
push
sub
gs
pushf
int
jno
fs
popf
das
adc
enter
mov
mov
mov
(bad)
in
pop
xchg
cmc
mov
rcr
mov
sub
ds
enter
jne
das
fimul
aas
retf
aas
sbb
jne
push
add
ss
enter
call
add
add
imul
(bad)
mov
pop
in
sub
sub
int3
in
outs
lock
in
inc
imul
ins
push
jp
sbb
lods
outs
(bad)
lock
sub
loopne
add
cmp
clc
jne
mov
sar
sbb
mov
popa
inc
retf
data16
aaa
inc
scas
int
lods
fisttp
pop
mov
push
dec
adc
sub
loopne
rol
rol
ss
mov
stc
xchg
inc
stos
dec
jge
sub
test
fs
nop
(bad)
scas
lods
jno
add
sub
pop
mov
cdq
push
add
mov
jbe
jne
and
loopne
push
push
jno
add
into
dec
xor
scas
push
mov
scas
enter
repz
jo
mov
daa
mov
pop
inc
iret
in
push
dec
ins
inc
cmp
lods
push
and
jo
mov
xor
cdq
enter
xlat
cmps
pop
mov
lods
add
fptan
nop
test
imul
sbb
push
mov
fisubr
sbb
aam
ins
div
in
mov
xor
pusha
mov
adc
icebp
mov
test
sbb
loopne
mov
pop
movs
sub
out
mov
pop
dec
inc
adc
sub
jnp
pop
adc
mov
jmp
mov
cmc
push
jno
dec
in
lahf
leave
inc
and
in
test
inc
out
jmp
in
and
sub
pop
retf
push
int3
sub
jmp
inc
aam
push
jbe
adc
rol
test
pop
inc
inc
xlat
jp
mov
cld
lds
add
dec
dec
mov
adc
mov
mov
pusha
push
jne
lods
and
icebp
lahf
rcr
outs
mov
push
cmp
inc
mov
clc
pop
lock
jno
xor
pop
fld
push
(bad)
loopne
test
push
jo
adc
int3
pusha
push
js
out
and
mov
jmp
loopne
xchg
or
scas
neg
mov
cwde
ins
cmp
sbb
mov
retf
and
aas
loopne
hlt
fnstcw
cmp
data16
call
jp
add
fisubr
mov
ror
inc
sbb
push
xor
cmps
loopne
push
out
sub
cmp
psubusw
cs
test
data16
ret
xor
xchg
dec
icebp
dec
(bad)
je
mov
outs
shl
inc
enter
int3
dec
sbb
dec
add
jmp
les
clc
add
enter
loopne
dec
xchg
xchg
and
addr16
xlat
pop
iret
enter
fdivr
loop
mov
xor
shr
adc
adc
ret
(bad)
fld
sbb
sbb
jbe
mov
shl
pop
xchg
movs
or
test
(bad)
clc
loopne
scas
mov
sbb
jl
loopne
sub
pop
add
lds
cmp
xor
mov
adc
pop
sub
aam
sbb
(bad)
or
test
lds
jns
jae
pop
ret
(bad)
leave
inc
test
jp
stos
add
inc
xor
pop
ret
fs
shl
cmp
inc
shl
imul
inc
inc
aas
push
mov
int3
sbb
xchg
inc
sbb
test
mov
inc
sbb
sub
mov
loopne
sbb
enter
movs
aaa
call
add
inc
lods
cdq
or
nop
aas
inc
push
int3
test
cs
and
rcr
push
dec
sub
scas
(bad)
retf
xor
fs
mov
cmp
cmp
inc
cmp
mov
lahf
cs
push
mov
movs
and
(bad)
lahf
int3
adc
aam
sbb
push
das
add
pushf
mov
inc
fbstp
cmp
ins
cmp
jae
les
retf
imul
jne
(bad)
sub
aas
imul
cs
adc
jg
ja
pop
nop
aaa
ficomp
and
pop
dec
jl
jns
(bad)
and
dec
into
ret
pop
pushf
xor
mov
nop
push
cmp
cmp
push
aaa
inc
rcl
wrmsr
jp
les
scas
mov
enter
pop
outs
xor
xchg
mov
scas
pop
(bad)
lock
jbe
xor
not
ror
or
jns
js
les
data16
fmul
hlt
es
sub
xor
les
cmp
test
cmp
inc
add
mov
int3
cmp
add
enter
(bad)
lea
pop
aam
ror
aas
sub
ss
in
jl
mov
scas
hlt
retf
mov
les
aas
call
inc
les
ins
ret
fdivr
retf
mov
dec
cmp
or
je
sbb
adc
cs
sbb
cmp
lods
pusha
mov
outs
sub
idiv
sub
enter
push
push
cmc
fild
(bad)
aaa
adc
aaa
pop
cdq
sbb
inc
fist
rol
arpl
mov
sbb
fld
xchg
xlat
pop
pop
adc
sub
dec
sub
enter
mov
in
dec
in
jge
sbb
jns
cwde
dec
xlat
and
sbb
int3
pushf
scas
les
inc
xchg
or
jnp
and
pop
inc
int
xor
sub
pop
inc
adc
push
xor
sub
scas
sub
in
aaa
push
and
pop
aas
(bad)
lods
(bad)
movs
sbb
adc
jne
movs
dec
cwde
sbb
mov
aam
add
mov
cmp
addr16
cwde
and
jmp
push
fsub
aas
xor
sub
mov
(bad)
fmul
xchg
cmp
cmps
inc
(bad)
outs
aam
aaa
out
fbld
pop
inc
jb
outs
fild
popf
jno
dec
mov
jb
push
fiadd
outs
aam
aaa
sar
and
scas
ret
jmp
fiadd
in
pop
in
sahf
int3
rol
aaa
dec
jl
and
pop
dec
push
scas
xor
inc
stc
mov
adc
and
fucomip
scas
in
cmp
xchg
mov
mov
out
xor
(bad)
jg
sbb
pop
mov
lock
stos
mov
mov
retf
jmp
mul
cmc
xor
sbb
mul
lahf
dec
test
push
cwde
retf
enter
xlat
(bad)
aaa
push
imul
fdiv
icebp
mov
shr
and
aaa
add
xor
mov
scas
les
add
fiadd
outs
pop
lds
adc
and
lds
push
cmps
in
pop
test
aaa
cmc
jl
and
pop
dec
shl
pop
inc
push
pop
enter
xor
js
lods
inc
dec
clc
pop
add
cdq
scas
les
inc
sbb
xchg
pop
dec
pushf
scas
inc
xor
sub
aaa
in
jl
and
pop
dec
dec
scas
add
ffreep
adc
xor
fucomip
cld
push
fsubr
outs
sub
imul
pushf
data16
inc
jg
sti
(bad)
mov
push
addr16
mov
jbe
ret
je
movs
dec
sub
pop
aaa
sub
ds
int
int
cmp
cdq
sbb
or
push
in
mov
dec
mov
push
push
cmc
dec
loop
es
and
out
repz
sbb
retf
call
ret
sbb
cld
pop
je
imul
out
cld
or
adc
shr
call
xor
jmp
test
ret
jns
test
mov
enter
enter
ficomp
ror
(bad)
cs
push
and
mov
pop
sbb
push
leave
add
mov
jae
ror
adc
and
cld
adc
arpl
test
pop
(bad)
les
push
test
idiv
push
out
leave
out
dec
std
cli
dec
xor
mov
adc
int3
add
aaa
pushf
call
sub
lea
shl
xor
into
jno
adc
xor
cli
lods
in
(bad)
ficom
mov
sub
andnps
icebp
pop
xchg
retf
cmp
rol
xchg
fdivr
pusha
add
sbb
push
pop
push
add
adc
jb
add
sbb
pop
xchg
iret
call
jae
sar
ss
int3
outs
es
sub
test
dec
loopne
xor
push
xor
movs
cld
cmp
pop
sbb
adc
fucom
add
jecxz
out
stc
mov
jg
aam
ins
push
inc
inc
data16
lods
rol
mov
and
sub
xchg
aaa
cmp
push
frstpm(287
repz
mov
mov
ins
ret
inc
aam
(bad)
in
(bad)
cdq
dec
ins
jge
mov
or
mov
sbb
and
mov
retf
pop
fist
pusha
add
int3
clc
or
adc
jmp
sbb
adc
cld
push
xchg
add
push
shr
xor
pop
cmp
ret
xor
cmps
arpl
sbb
jmp
fisubr
mov
pop
mov
ins
and
push
mov
daa
aam
pop
imul
mov
pop
push
sbb
les
jns
or
cs
popf
rcr
add
and
push
and
push
sub
inc
lods
cmp
ins
arpl
sbb
popa
ret
dec
outs
sbb
in
mov
pop
pop
rol
rcr
scas
or
xchg
les
test
loop
adc
bnd
aad
and
leave
in
xor
les
mov
ins
jmp
or
enter
lods
jge
pop
add
test
sbb
push
mov
mov
push
out
imul
shl
dec
xor
cmp
aas
cmp
inc
sbb
fiadd
ret
mov
dec
data16
rol
add
retf
les
call
ret
cld
xor
xor
ins
cmp
mov
data16
ror
cld
sbb
into
loopne
out
jns
inc
fstp
shl
call
push
dec
ret
aaa
add
into
adc
sti
ins
int3
montmul
cmps
les
mov
jg
and
fwait
jb
xor
add
adc
pop
fwait
push
push
ds
mov
sub
and
jb
or
retf
gs
cmp
and
test
fidiv
push
(bad)
rcl
aaa
and
dec
jp
ja
out
sub
fwait
adc
sub
xchg
jae
in
shl
rcr
nop
lock
mov
shl
fisubr
aaa
cmp
push
aaa
and
xor
enter
leave
dec
fs
rcr
inc
mul
test
jmp
and
jo
out
push
pop
cmp
xchg
lock
pop
and
sbb
enter
clc
imul
adc
das
or
les
and
ret
leave
retf
and
jbe
inc
mov
and
mov
lods
cmp
leave
cli
add
cmp
pop
and
enter
xor
xor
jb
(bad)
push
ficomp
movs
adc
ret
xor
pop
mov
pop
or
retf
mov
and
cmp
mov
ret
pop
sqrtps
sbb
fucom
ret
aaa
or
push
push
push
sub
jb
xor
shr
enter
and
sbb
lock
jmp
cmp
(bad)
fs
out
rcl
mov
(bad)
(bad)
cmp
cmps
rcl
mov
outs
xor
out
ret
adc
ins
jp
enter
movs
cs
xchg
cmp
mov
leave
dec
mov
aaa
(bad)
enter
dec
pop
cmp
xor
call
xor
adc
ficom
jae
sub
jns
(bad)
fiadd
ss
xor
js
cmp
jmp
pop
adc
sar
ss
(bad)
ins
ret
fcompp
cmp
mov
ss
mov
retf
add
inc
popa
fisub
jo
mov
push
xor
ret
jae
out
inc
out
shr
and
jo
or
ret
sbb
sbb
aam
xor
adc
int3
rcr
sbb
jns
fld
jns
inc
shr
jb
test
hlt
jbe
cmp
fidivr
std
icebp
or
fdivr
imul
sbb
jnp
xchg
pop
das
ret
dec
or
cmp
push
push
add
xchg
in
pop
sbb
fld
ret
stos
leave
ffreep
pop
xor
jbe
pop
clc
rcr
sub
xor
ud2
sub
cmp
adc
mov
fdivr
fsubr
sbb
and
fiadd
pop
repnz
adc
mov
int
fiadd
or
inc
push
shl
maskmovq
mov
push
xor
ins
into
inc
add
in
inc
or
xadd
inc
sbb
or
or
ret
fnsave
loope
sub
or
jl
stos
sahf
pop
push
test
fwait
(bad)
ret
rol
in
push
pop
mov
std
pop
xchg
adc
mov
pop
mov
sti
and
pop
xchg
sub
inc
pop
and
cmp
xor
cwde
adc
dec
dec
cld
push
xlat
jge
cmp
test
xlat
push
sbb
ds
add
imul
into
ret
and
ds
add
je
leave
dec
dec
add
push
pop
movq
int3
in
xor
jno
outs
dec
hlt
imul
aas
aad
xor
clc
xchg
push
mov
sbb
jle
es
fidivr
dec
and
pushf
into
xlat
cmp
mov
das
pop
mov
fnstsw
pop
or
pop
dec
shr
and
call
test
(bad)
enter
or
or
int
enter
xor
dec
sbb
dec
leave
xchg
mov
sbb
xlat
ror
daa
mov
(bad)
cmp
cmp
frstor
(bad)
loop
sbb
fcomp
mov
ret
cmp
movs
lock
fst
dec
xchg
inc
add
fstp
inc
iret
aas
pop
int3
or
jb
dec
jnp
or
cmp
push
dec
and
mov
fimul
loopne
scas
aaa
bound
imul
push
pop
sahf
sbb
mov
adc
loopne
imul
mov
inc
sub
pop
and
sar
cmp
fnstenv
fisubr
rcr
sbb
cmp
pushf
inc
add
mov
xor
lock
jp
cmp
mov
adc
pop
loopne
pop
retf
xchg
cmp
outs
add
sub
xor
mov
mov
cmp
dec
mov
ret
sub
jnp
out
add
(bad)
int3
and
pop
adc
adc
(bad)
inc
jnp
outs
pop
sub
add
cmp
sbb
or
mov
jl
pop
cli
shr
jnp
or
rol
ja
imul
lods
fimul
mov
sbb
inc
add
xor
imul
sbb
inc
sub
pushf
cmc
shl
adc
or
outs
das
gs
fnstenv
jle
pop
rol
repz
(bad)
(bad)
pop
test
ins
and
lds
dec
push
rcr
mov
rcl
ret
leave
push
test
mov
stos
lods
movs
retf
into
and
pop
xchg
ds
in
inc
sub
mov
and
cmp
shl
pop
cmp
aas
in
cmps
ja
loopne
ds
es
mov
scas
dec
ror
sub
pop
jne
jg
add
rol
add
or
dec
(bad)
sbb
lds
(bad)
adc
scas
adc
mov
daa
call
jl
mov
fwait
ds
sbb
fild
adc
mov
out
or
scas
test
aam
cmp
cmp
into
pusha
pop
add
inc
dec
push
retf
dec
jb
inc
mov
jae
xchg
jmp
fld
imul
fadd
cwde
ins
aaa
bound
jg
push
xchg
out
and
(bad)
inc
sbb
mov
fadd
loop
in
fwait
xor
fstp
xor
jmp
inc
add
pop
shl
lods
(bad)
cmp
fild
inc
or
clc
fistp
push
xchg
test
aaa
mov
push
in
retf
call
add
bound
(bad)
cmp
adc
sar
inc
push
inc
cmp
inc
leave
inc
sbb
sbb
pop
mov
ds
jg
inc
ret
adc
fadd
xlat
ins
sbb
cmp
push
mov
(bad)
test
mov
std
stos
in
sbb
les
(bad)
retf
inc
pop
lock
sub
mov
loop
or
and
xor
inc
xchg
cwde
lds
cmp
sub
cmp
fsub
shl
xor
sub
xlat
shr
dec
pop
mov
pop
and
cmp
xchg
push
xlat
mov
loopne
and
inc
out
leave
mov
(bad)
leave
mov
and
mov
dec
pop
xor
shl
shl
jmp
sahf
test
loopne
nop
rol
pusha
int
jne
add
add
push
pop
movs
xchg
mov
(bad)
into
pusha
jp
fidiv
fsub
pop
jae
int3
(bad)
xor
js
xor
call
jg
pop
les
xor
cmp
leave
test
(bad)
scas
rol
iret
push
aam
pop
pushf
in
popa
pop
sub
js
aas
ret
xchg
call
sub
leave
mov
push
pusha
fisubr
ror
pop
dec
or
or
pop
or
xor
cmp
fldcw
mov
push
mov
jae
pop
and
push
mov
inc
push
das
or
in
xor
cmp
inc
add
push
fisubr
outs
popf
out
pop
push
cmp
pusha
inc
test
fild
or
sub
mov
or
daa
sub
pop
int3
dec
xchg
xchg
dec
inc
test
outs
mov
call
cmp
sub
add
fcomp
sub
pop
repnz
das
sub
cmc
and
jno
ficomp
in
mov
aas
xchg
add
outs
inc
pop
scas
icebp
enter
out
xlat
mov
in
xor
pop
xchg
in
shl
aam
push
and
or
nop
xchg
push
cwde
push
popf
enter
psubusb
inc
pop
bound
inc
ss
shl
adc
(bad)
mov
xchg
addr16
das
sub
call
outs
nop
push
xchg
aas
dec
jl
adc
push
pusha
mov
xor
lds
shl
into
xchg
push
cld
push
mov
stos
dec
fadd
adc
in
cmps
mov
les
or
adc
sbb
mov
das
push
int3
xlat
dec
or
pop
mov
xor
fucom
cmp
bndldx
lods
retf
retf
int3
(bad)
sahf
out
(bad)
or
push
sahf
sub
mov
mov
jp
shl
stos
pop
mov
mov
ret
mov
jo
mov
ss
xor
mov
data16
outs
into
inc
xchg
push
jne
xchg
sahf
pop
pop
rol
cmp
adc
repnz
lds
sub
fld
mov
fcom
test
cmc
out
aad
iret
cli
add
ror
fdivr
inc
dec
xor
and
push
out
xchg
lods
shl
mov
test
(bad)
fidivr
jmp
adc
push
les
(bad)
es
cmps
stc
ror
push
(bad)
(bad)
jae
imul
fdiv
mov
mov
fst
add
add
vpsubsb
inc
in
inc
dec
test
inc
or
xchg
jae
int3
push
(bad)
xlat
push
int3
lds
(bad)
and
add
push
xor
or
push
mov
test
push
cwde
cmp
movs
xor
js
mov
int
sub
mov
xchg
pop
iret
data16
xor
inc
xlat
enter
inc
out
pushf
and
mov
lock
(bad)
adc
jbe
cli
jne
cmp
jl
cmp
mov
pop
pop
mov
in
xchg
or
xchg
loopne
fimul
and
int
rcr
ss
mov
adc
cmp
vpsrlq
cmps
into
js
cmps
jne
inc
push
ror
push
add
xchg
call
push
jbe
cmp
xor
sub
pusha
pop
ret
(bad)
dec
gs
pop
cmp
sub
pop
loope
cmps
outs
adc
in
lahf
test
xchg
adc
xlat
xor
mov
ds
cld
int
mov
cmc
dec
data16
xchg
and
dec
sbb
repz
jl
ins
cmp
popf
fnsave
xlat
dec
sub
rol
add
ror
dec
sbb
sar
shl
fild
daa
dec
stc
sub
loopne
enter
cwde
push
mov
mov
cmp
rcl
rol
jp
cmp
retf
jnp
adc
cmps
enter
(bad)
(bad)
sahf
cs
cmp
sub
jns
or
or
pusha
mov
add
out
ror
in
enter
xchg
test
not
loope
mov
cli
outs
mov
fs
xor
movs
cld
inc
repnz
cld
hlt
pop
inc
ret
mov
lds
jbe
mov
in
fs
(bad)
lahf
movs
add
aaa
jmp
out
fisubr
popa
in
xchg
retf
add
mov
out
lock
sbb
inc
das
(bad)
fld
and
jb
xchg
rcl
inc
mov
mov
arpl
enter
lock
stc
fld
adc
aas
mov
pop
sbb
call
mov
add
sar
das
rcl
mov
xor
xchg
fstp
xchg
cdq
call
jmp
mov
aam
out
aam
xor
js
mov
mov
push
and
ss
sub
retf
fistp
(bad)
dec
and
jmp
mov
loopne
mov
loopne
mov
fsub
in
dec
mov
js
xor
and
xchg
xor
scas
cmc
loop
push
(bad)
add
in
mov
cmp
cmp
pushf
lea
fidivr
mov
push
ret
sub
arpl
pushf
cmps
mov
sbb
sub
sbb
cld
stos
mov
leave
aas
iret
scas
sub
(bad)
dec
aam
lds
xchg
popf
(bad)
outs
jne
out
hlt
cmp
les
inc
clc
imul
jmp
xchg
pop
sbb
or
pop
mov
clc
loop
fimul
loopne
int3
sbb
inc
mov
ror
lods
xchg
daa
je
enter
fnstcw
ins
inc
sub
cmp
add
jno
push
je
call
inc
in
sub
fucom
(bad)
enter
int
lds
mov
int3
scas
ss
mov
shr
cmp
push
js
sahf
dec
cmp
cwde
popa
repnz
movs
sub
retf
hlt
xchg
mov
int3
push
or
shl
cmp
xchg
pushf
stos
xchg
and
pop
in
clc
out
jmp
cmp
sbb
clc
cmp
sbb
dec
dec
enter
inc
test
iret
xor
sbb
xchg
ins
mov
jmp
cmp
sbb
and
frstpm(287
lods
dec
push
(bad)
cld
inc
sbb
adc
adc
mov
push
adc
(bad)
push
push
inc
popf
and
adc
sbb
setns
aad
cs
xchg
out
retf
gs
and
lock
cdq
pop
cmp
sbb
ror
mov
nop
std
jne
lods
sub
sub
mov
ret
jle
pop
loope
aaa
mov
leave
mov
mov
jmp
jmp
aam
fadd
inc
or
in
push
cld
fild
shr
pop
and
pop
pusha
pop
push
mov
mov
xor
mov
shl
inc
sub
add
and
dec
or
cmps
dec
jae
bound
push
lods
cwde
pop
cs
int3
push
cmp
sub
sbb
pop
out
das
pop
rcr
sbb
xor
and
loop
lock
jnp
arpl
pop
rcr
jmp
lock
hlt
cdq
scas
jmp
pop
ds
cmp
rcl
cmps
pop
out
int3
retf
sbb
xor
jns
arpl
or
xor
and
je
call
jmp
push
fdivr
and
pushw
loopne
push
cdq
ins
cmps
pop
push
loopne
mov
(bad)
sbb
jmp
ins
add
test
add
enter
dec
js
pop
loopne
in
shl
sub
popf
fs
sbb
sub
mov
push
add
or
mov
cmp
aam
aad
in
lods
outs
out
clc
shl
adc
pop
pop
repz
sbb
into
das
fistp
cs
sar
into
leave
sub
adc
inc
push
gs
fistp
movs
jno
in
mov
imul
dec
sub
mov
leave
push
test
cmc
das
xchg
jmp
or
jnp
inc
fadd
imul
or
mov
adc
mov
pop
stos
std
xor
ret
dec
pop
jne
xchg
and
and
sub
sbb
sub
mov
pusha
sub
sbb
add
inc
jae
push
sahf
adc
fnstcw
mov
jp
test
jbe
xor
movs
addr16
enter
add
hlt
ds
sbb
(bad)
hlt
loopne
sub
inc
pushf
enter
mov
sbb
ds
cmp
or
nop
stos
adc
xchg
in
pop
lock
add
enter
rol
fcmovnu
ins
adc
pop
adc
and
xchg
ins
jae
cmc
cld
adc
arpl
lock
aad
test
in
test
ds
test
jno
push
in
fwait
xchg
test
int3
pushf
mov
loope
adc
or
push
mov
add
and
les
imul
push
fild
cmp
mov
sbb
pushf
add
mov
cld
cld
das
sbb
cmp
sub
lds
inc
(bad)
call
add
popf
fistp
(bad)
rcr
jecxz
scas
fmulp
mov
(bad)
jo
fmul
add
movs
mov
fwait
call
rcl
mov
stos
sbb
ins
push
pop
adc
add
sub
mov
cmp
pusha
pushf
jne
aas
xchg
push
aaa
daa
dec
gs
sub
dec
pushf
(bad)
cmp
cmc
aad
psubd
pushf
cli
mov
pop
repz
xor
mov
addr16
xchg
popa
or
fmul
jmp
dec
mov
push
out
nop
and
and
ror
xor
or
dec
fstp
inc
call
jno
(bad)
loopne
push
mov
icebp
es
scas
jb
mov
and
inc
fmul
popa
and
jne
mov
int
mov
inc
sahf
dec
cld
cmp
push
enter
(bad)
loopne
bound
push
in
scas
or
scas
jmp
xor
fdivp
or
adc
scas
mov
popf
outs
ror
jle
test
cmp
jne
popf
jb
push
(bad)
jl
adc
add
enter
clc
push
loopne
xchg
push
shl
jle
rcl
outs
xor
int
aaa
fxch
and
int3
dec
sub
(bad)
xlat
mov
inc
or
in
jl
push
pop
pop
mov
mov
or
cmp
push
add
ret
loopne
retf
shl
or
jl
loopne
je
(bad)
cli
dec
and
cmp
mov
inc
xor
nop
xor
xchg
mov
jp
cmp
lods
sbb
loop
jae
loopne
out
ret
jp
jnp
je
push
jmp
(bad)
in
(bad)
adc
push
mov
push
jp
sar
pop
adc
pop
mov
mov
shl
jp
aas
in
in
sbb
mov
es
pushf
jl
lods
inc
test
sbb
dec
xchg
fwait
je
aaa
popa
ja
and
mov
xor
mov
add
mov
push
pushf
rcr
push
jge
jne
mov
cmp
adc
cmp
sub
xor
rol
xor
inc
mov
sub
stos
iret
push
dec
cmp
popf
loopne
xor
fist
mov
xchg
jmp
xor
daa
pop
data16
cmps
gs
(bad)
jb
dec
mov
in
push
(bad)
cld
cmp
lods
push
ror
mov
pop
mov
jbe
ret
aam
xor
pop
mov
sar
ins
retf
test
inc
push
dec
push
lahf
add
add
add
jno
xchg
addr16
pop
xchg
seta
shl
ror
dec
xlat
jo
fiadd
aas
lods
dec
mov
clc
cmp
into
enter
jno
xchg
push
cmp
sub
shl
sbb
out
jno
mov
mov
cmp
out
sub
cdq
or
mov
sbb
push
xor
cs
in
rol
dec
fs
xchg
push
xchg
ss
pop
push
mov
xchg
push
sub
or
add
stc
enter
cld
out
mov
in
scas
xor
mov
enter
aaa
out
push
and
mov
jg
aaa
pop
and
(bad)
(bad)
inc
ficomp
xchg
fild
imul
hlt
xchg
cmp
adc
daa
dec
jns
mov
push
out
sbb
sub
prefetchnta
push
or
xchg
adc
jmp
push
fdiv
adc
(bad)
adc
xor
push
test
enter
jns
xchg
sbb
pop
xlat
jp
and
xor
adc
dec
cmp
leave
xchg
add
or
fcom
mov
sbb
cmp
push
pop
pusha
fnstcw
int3
ja
push
retf
jno
(bad)
int3
sub
pop
das
push
in
dec
jno
ficomp
pusha
cdq
xor
push
adc
in
pop
scas
adc
(bad)
adc
sbb
mov
(bad)
loopne
push
add
lods
and
enter
adc
pop
sub
inc
jbe
je
int3
sub
ss
push
fst
pop
or
jp
xchg
jl
mov
or
cmp
push
(bad)
cmp
xlat
pop
(bad)
int3
push
jg
cli
idiv
and
fst
add
xchg
ds
push
push
clc
rcl
jp
mov
xchg
sub
or
push
xor
mov
push
imul
rol
aas
inc
(bad)
in
dec
pushf
add
sub
dec
jl
cmp
add
cmp
cmp
(bad)
mov
push
pop
mov
jbe
dec
inc
ret
pop
aam
add
pushf
loope
push
in
fs
cmp
enter
je
or
(bad)
adc
and
fimul
push
sub
add
int3
push
les
jne
in
push
nop
inc
add
jecxz
cmp
ins
fimul
iret
imul
cmps
call
xor
pop
lds
shr
(bad)
mov
sub
cmc
cmp
imul
push
mov
sbb
push
dec
lods
pop
adc
out
ins
or
push
mov
inc
or
sbb
aad
retf
cwde
mov
inc
bound
cmp
xor
call
out
pop
mov
fisub
fcomp
push
lahf
popf
cmp
fisub
nop
inc
in
leave
es
jle
cli
xor
and
in
xor
inc
ret
mov
dec
icebp
add
mov
aam
jp
cs
jp
fadd
add
pop
jne
and
les
shr
sar
lods
ror
and
mov
inc
xchg
pop
mov
cli
mov
dec
ins
cdq
pop
mov
and
add
mov
outs
xor
pop
inc
jbe
or
jmp
pusha
test
pusha
aas
addr16
lock
jmp
pop
push
and
xor
out
leave
ret
mov
loop
sbb
or
clc
imul
cs
sbb
ret
loope
popa
cld
ret
outs
mov
into
imul
outs
fldcw
mov
stos
mov
call
cmp
ins
stos
ss
in
movs
and
xor
or
loopne
dec
mov
inc
iret
imul
aam
cwde
ins
fcom
loopne
jp
xor
adc
and
js
fld
retf
xor
pop
or
cs
cmps
push
test
leave
xchg
sub
push
pop
call
into
dec
lock
jmp
mov
pop
push
scas
iret
mov
les
shr
int3
jns
xor
fcomp
dec
mov
cs
sub
ja
add
shl
enter
loopne
je
xchg
push
test
outs
add
test
pop
add
dec
retf
sahf
push
mov
leave
sbb
sbb
sbb
fnsave
setge
movs
pop
and
fild
lods
sahf
cmps
les
dec
push
jae
mov
lds
xlat
dec
dec
pop
jmp
lock
sbb
add
sbb
mov
add
out
xlat
push
imul
lock
pop
cs
fist
add
xor
pop
(bad)
sar
jae
dec
mov
aaa
mov
pop
adc
add
inc
xor
cli
aas
bound
scas
jne
popf
ds
xchg
jns
sbb
sub
loopne
xchg
int3
aas
fadd
xchg
outs
push
push
sbb
add
(bad)
cli
inc
push
add
enter
mov
inc
aam
ret
cdq
add
out
mov
xchg
push
fs
retw
pushf
or
mov
xchg
rol
pop
cmp
movs
scas
(bad)
rol
mov
xchg
push
stc
clc
mov
xchg
and
mov
int
mov
les
fiadd
retf
hlt
ins
xlat
ret
cmc
pop
pop
iret
xor
(bad)
push
loop
mov
js
cmp
xchg
jo
mov
sub
js
aad
mov
icebp
pushf
das
or
repnz
push
(bad)
ret
pop
fcmovne
xor
stos
sahf
sbb
lock
or
mov
mov
xchg
sbb
rol
daa
cmc
mov
(bad)
fisubr
ins
jo
jle
out
xor
mov
not
out
push
int
cld
dec
enter
(bad)
sbb
jge
push
imul
mov
nop
fild
jmp
mov
dec
jp
aas
pop
ficomp
jg
dec
cmps
dec
sub
stos
mov
stos
dec
stos
in
jl
xor
jle
sub
xor
inc
sbb
bound
cmp
push
xor
adc
cmp
enter
daa
les
retf
inc
jb
push
cmp
mul
in
ss
cmp
test
retf
int
aad
mov
cs
js
in
jl
rcl
add
push
add
add
push
jae
inc
pop
mov
inc
sbb
mov
inc
in
inc
sbb
cmp
xchg
ds
pop
mov
sbb
shr
add
ror
repz
sbb
cwde
aaa
int3
adc
rcr
sub
mov
jne
fstp
jge
(bad)
les
mov
push
fisubr
iret
sbb
adc
fld
in
lahf
lea
sbb
fld
jp
div
imul
pop
dec
je
fild
loopne
cmp
mov
mov
and
in
sub
xadd
leave
pop
arpl
dec
inc
test
inc
adc
xchg
push
js
add
sbb
xor
xchg
mov
cmp
inc
sub
in
and
mov
cmps
adc
xchg
dec
imul
dec
test
inc
dec
xor
mov
int3
lock
jl
ret
adc
inc
lods
call
mov
jg
rol
rcl
inc
mov
scas
inc
pusha
push
bound
pop
mov
mov
mov
rol
add
fs
shr
(bad)
loopne
jl
out
test
int
sub
cmp
fs
and
test
jle
xor
ja
add
leave
outs
into
mov
retf
jae
or
popf
cmp
adc
mov
or
jne
arpl
sahf
jbe
pop
push
sahf
cmp
sbb
inc
loopne
in
mov
jg
enter
call
inc
mov
mov
or
mov
add
cmp
inc
pusha
retf
push
add
cdq
jg
retf
xor
pop
push
mov
xor
aad
inc
jg
xor
(bad)
push
mov
loopne
ret
push
aas
in
jl
add
xor
into
sbb
vcvtsi2sd
fs
pop
jle
cdq
popa
and
nop
inc
push
mov
ss
and
dec
push
jne
mov
adc
jecxz
dec
int3
(bad)
and
xor
pop
rcl
int3
loopne
aad
inc
int3
rcr
icebp
push
fcmovbe
leave
imul
jo
aam
mov
jge
pop
in
enter
outs
ficomp
clc
out
and
dec
push
fimul
inc
push
js
cmp
sbb
xchg
adc
lods
cdq
popw
(bad)
enter
jg
inc
aas
retf
dec
push
pop
cld
(bad)
or
out
movs
pop
mov
in
inc
hlt
repz
cmp
sub
addr16
and
call
cmp
pop
dec
lock
add
cld
(bad)
leave
xchg
ret
das
repz
aas
sub
pop
test
adc
addr16
stc
add
cld
inc
xor
xchg
or
sti
lds
jecxz
jb
and
iret
and
addr16
mov
(bad)
push
daa
pop
mov
inc
sbb
pusha
lock
xor
sbb
ja
gs
aas
hlt
fisttp
stos
dec
xor
aam
test
pop
ror
lahf
enter
sbb
cld
ret
ficomp
inc
sbb
inc
in
xor
data16
sub
fadd
pop
adc
cmp
je
imul
int3
int3
cmp
in
adc
sbb
enter
adc
aam
int3
inc
pusha
std
mov
repz
(bad)
pusha
shl
enter
aam
data16
dec
fst
int3
outs
fs
xor
rcr
das
(bad)
test
and
cs
mov
hlt
int
xchg
jo
mov
aam
das
mov
push
movs
(bad)
sbb
xchg
push
ret
cmp
mov
fistp
or
bound
xor
in
dec
push
test
jb
ins
mov
or
callw
and
ret
adc
cmp
aaa
mov
inc
and
jp
cmp
loopne
ss
ins
cmp
into
and
xor
inc
push
imul
mov
inc
mov
(bad)
enter
cs
(bad)
xchg
pop
xchg
ins
and
mov
xor
ins
push
cmp
push
mov
pop
aam
sub
rcr
in
loopne
int
rcl
aad
(bad)
ins
and
(bad)
stc
scas
and
mov
ins
retf
js
sbb
xlat
push
in
ret
and
pop
xor
stc
lods
mov
cmp
mov
sub
cmps
aad
in
add
in
popf
mov
enter
inc
push
push
jp
rol
jne
fs
jns
add
jg
ins
icebp
rdpmc
pop
mov
sub
mov
int
dec
inc
cmps
dec
add
sub
xor
jmp
jns
iret
sar
jmp
push
into
stos
(bad)
std
into
add
xchg
cmp
test
(bad)
and
adc
xchg
dec
int3
push
repnz
pushf
jmp
mov
(bad)
inc
sbb
jp
(bad)
inc
pusha
inc
(bad)
clc
loopne
les
aaa
mov
mov
mov
icebp
mov
push
(bad)
stos
aad
jl
adc
(bad)
and
pop
aad
test
out
and
ss
sub
jle
pop
(bad)
outs
outs
jbe
lods
sbb
jmp
div
(bad)
jno
pusha
jnp
xchg
mov
mov
(bad)
ret
adc
jno
dec
shl
jae
pop
and
jno
movs
add
mov
xchg
movs
cmp
cwde
inc
add
sub
retf
ret
aaa
mov
dec
les
lods
rol
movs
loop
pop
push
fnstenv
(bad)
cs
je
mov
call
adc
sbb
xchg
and
je
cmp
push
sahf
das
inc
add
outs
sub
add
pop
cwde
fnsave
fidivr
or
pop
lock
and
das
xlat
sub
daa
fucomp
mov
lea
push
pop
add
and
das
pop
sbb
inc
inc
lea
jg
repnz
mov
mov
lds
add
in
pop
dec
or
push
ror
pop
xchg
push
jmp
out
inc
stos
iret
rcl
dec
movs
int3
jo
aam
mov
push
dec
adc
cli
cmp
mov
cdq
(bad)
mov
es
mov
inc
pop
sub
(bad)
loop
not
(bad)
sbb
xchg
outs
jns
test
mov
sub
aad
jnp
inc
and
ret
xor
adc
in
stc
test
fsub
ret
jns
cmps
(bad)
mov
jmp
test
and
rcr
or
enter
test
cmc
call
jp
mov
aaa
xchg
in
(bad)
neg
aad
iret
xor
add
adc
jo
rcr
int3
pop
sub
or
inc
loopne
pop
pop
jmp
dec
mov
fild
cld
cdq
scas
jns
pusha
pop
inc
(bad)
fcomip
iret
ror
and
data16
jbe
data16
shr
jp
int3
aad
push
inc
mov
cli
cmp
adc
sub
xor
int
push
les
mov
inc
in
pop
sbb
and
gs
ins
pop
shrd
cmc
jmp
push
sub
push
mov
xor
sbb
jbe
cmp
xchg
mov
movs
jmp
adc
ins
ret
stc
push
aam
repnz
ds
fcompp
add
add
or
mov
and
dec
retf
cmp
fwait
jmp
dec
or
add
sahf
js
(bad)
dec
add
push
(bad)
xlat
out
cmps
in
repz
inc
outs
icebp
or
push
rcr
push
rcr
ss
int
jo
int3
push
out
push
ret
je
inc
into
dec
push
pop
and
or
int
stc
mov
add
cld
push
jge
jge
push
pop
into
sub
sub
jo
pusha
xor
mov
dec
les
push
punpckhwd
mov
and
adc
sbb
xor
out
xchg
mov
pop
sub
inc
clc
or
scas
and
retf
push
jmp
fistp
scas
push
jl
pop
inc
call
(bad)
or
sti
(bad)
fs
loopne
out
retf
push
shl
ss
rcl
cdq
mov
js
dec
push
aaa
cmps
inc
js
mov
add
cmp
add
and
ss
gs
shl
loope
arpl
mov
dec
loope
fs
add
adc
iret
cs
jl
push
jl
mov
cmps
xor
ss
cwde
and
cmc
int
cmp
xchg
mov
sbb
mov
sbb
les
clc
std
jb
mov
fiadd
retf
loopne
cmp
fild
mov
jo
data16
and
add
fsubrp
cld
(bad)
push
jne
cmp
lds
or
xor
rcr
fidiv
(bad)
jnp
neg
pushf
jmp
cmp
mov
and
imul
repnz
cmp
xchg
jb
ja
add
mov
mov
inc
jp
(bad)
pusha
inc
sub
das
and
mov
jecxz
jb
sbb
jl
scas
cmp
xchg
cmc
outs
push
push
push
xchg
dec
hlt
movs
sbb
jo
dec
in
sbb
repnz
(bad)
push
shl
retf
dec
mov
test
sbb
jmp
adc
movs
out
or
ret
fnstcw
daa
es
imul
movs
cmps
lahf
fisubr
push
jl
jnp
gs
mov
aam
xchg
mov
sub
enter
test
pushf
sbb
xor
and
jle
data16
call
call
hlt
ret
aam
pusha
mov
push
into
xchg
lods
int3
xchg
test
cmp
mov
and
mov
inc
movs
test
jle
clc
mov
enter
jl
inc
ss
xchg
push
jno
pcmpgtb
push
push
es
imul
in
fisttp
xor
push
and
jns
sbb
call
(bad)
into
add
outs
pop
nop
lods
adc
scas
or
loopne
push
sub
adc
sub
push
fistp
adc
push
cmp
pop
push
mov
enter
popa
int
mov
popa
xchg
in
or
jle
cmp
push
les
xor
adc
ja
xchg
enter
cld
mov
sbb
cs
movs
dec
mov
leave
inc
test
jmp
mov
sbb
(bad)
and
xchg
push
aad
(bad)
imul
mov
mov
ins
mov
jo
dec
out
ds
sub
cmps
cmp
cld
pusha
pop
jns
xchg
cmp
loopne
lea
fs
(bad)
data16
sub
cs
and
aam
sub
cmc
mov
cs
mov
mov
push
mov
ret
xor
inc
out
out
inc
addr16
popf
push
cmp
lock
shl
jl
jbe
mov
or
sbb
inc
jae
popf
push
retf
or
dec
xchg
pop
lods
lock
fmul
add
aaa
or
add
sahf
scas
push
cmp
jle
pop
aaa
mov
aaa
pop
rcl
or
stos
sbb
adc
gs
fistp
jp
cmc
inc
out
inc
dec
xchg
aam
jae
cmp
cmp
(bad)
arpl
ret
ds
sub
push
call
clc
ds
nop
sub
aam
and
loopne
and
mov
rcr
in
shl
pop
mov
pop
(bad)
lock
pop
mov
data16
push
loop
jo
lahf
push
icebp
mov
xlat
sbb
mov
xor
mov
add
pop
pop
fldcw
adc
xor
rcl
jl
int3
pusha
jle
mov
in
mov
aam
jp
push
xor
cmps
or
fstp
push
loopne
ficom
mov
retf
xlat
push
jns
(bad)
pop
fcomp
add
mov
mov
adc
xor
sub
ss
leave
dec
int3
movs
pop
mov
mov
adc
cld
les
mov
ds
leave
and
inc
aas
xor
jae
pushf
and
dec
mov
aaa
inc
int
fidiv
mov
mov
pusha
dec
cwde
stos
xor
and
leave
push
aam
sbb
sub
leave
adc
call
aaa
dec
test
int3
scas
(bad)
mov
data16
call
loope
enter
push
mov
jp
les
push
push
dec
mov
imul
lds
ins
dec
mov
inc
les
add
lds
sub
xor
sub
loope
or
ret
adc
or
mov
mov
aas
in
adc
ret
jne
cdq
lahf
in
sub
push
ins
repz
xchg
inc
or
les
sbb
leave
pop
mov
pop
xor
ror
xor
xor
sbb
pushf
sbb
daa
and
push
push
adc
imul
inc
sub
aam
nop
ins
hlt
cs
sbb
xchg
push
pushf
cdq
in
jbe
xchg
mov
adc
or
inc
bound
js
sbb
mov
cli
xor
push
cmp
dec
pusha
in
mov
sub
pusha
cs
inc
lds
mov
push
pop
and
push
in
push
cmp
ds
adc
call
nop
sub
and
add
cmp
nop
imul
xchg
(bad)
pop
dec
or
aam
cli
ret
fist
inc
out
cmp
cmc
enter
inc
xchg
cs
cwde
test
fsubr
outs
lds
cs
pushf
cs
push
sbb
xor
shl
loopne
push
ins
mov
dec
cli
stos
push
das
push
jb
jno
xor
add
sub
push
cmp
and
and
add
ret
sbb
push
cmp
repz
xlat
cmp
mov
sbb
mov
jbe
add
pop
adc
xchg
pop
cmp
add
mov
or
out
out
mov
out
jae
out
imul
icebp
mov
pop
jno
mov
or
mov
jnp
ds
int3
(bad)
adc
and
ins
int3
xchg
popa
mov
aaa
dec
mov
or
out
loopne
in
cmp
add
es
add
aam
mov
mov
jae
loope
pop
jg
dec
inc
mov
jecxz
cmp
add
xor
aaa
fadd
out
inc
call
sub
pop
popf
pop
into
pusha
clc
jg
in
jbe
mov
mov
jmp
cmp
pop
jl
xchg
inc
or
stos
(bad)
cmp
les
ins
loopne
clc
rcr
pop
in
jmp
jns
xor
push
pop
das
shl
cs
in
pop
mov
xor
test
lods
call
pop
jle
push
cwde
and
cmp
mov
pushf
sub
xchg
lods
push
imul
dec
dec
fcmove
xor
cmp
sbb
add
jb
push
fldenv
jmp
es
int3
fnstcw
enter
call
test
pusha
jbe
cmp
sub
adc
jecxz
xor
jns
sub
jmp
jno
jl
cmp
jo
jne
les
stc
loopne
mov
ficom
(bad)
mov
xchg
loope
out
pop
sbb
imul
mov
(bad)
dec
fiadd
mov
jmp
mov
xor
adc
dec
call
ja
retf
pop
(bad)
imul
ds
and
in
sub
fdivp
pop
add
enter
xor
jo
sub
aad
mov
mov
aam
pop
xchg
out
mov
xor
pop
push
inc
ficom
xor
fadd
xlat
push
sub
imul
push
test
jmp
push
mov
add
xlat
inc
mov
ins
(bad)
fstp
leave
or
or
movs
adc
jmp
push
ret
test
mov
xchg
cmp
sub
lock
inc
xor
enter
movs
pop
push
iret
push
mov
hlt
jl
out
dec
mov
mov
mov
push
mov
xchg
popf
repnz
inc
mov
jae
(bad)
cmp
iret
push
enter
lds
and
ret
and
rcr
cli
push
rcr
jae
out
cmp
fild
mov
lds
adc
loopne
pop
jne
shl
pop
retf
fld
cmp
mov
imul
add
and
jb
pop
clc
dec
or
(bad)
xlat
jecxz
ds
sub
push
sar
jne
bound
(bad)
pusha
jp
inc
loopne
or
jne
adc
and
and
scas
xchg
daa
shl
imul
dec
cmp
call
jne
iret
cmps
scas
ds
nop
lods
test
enter
cmp
mov
pop
pop
xor
je
out
retf
pop
dec
ret
lahf
jp
clc
in
mov
xlat
outs
leave
sbb
sub
pushf
add
div
lea
sti
out
jmp
in
push
dec
int
push
inc
fstp
int3
shl
add
and
(bad)
cs
jg
sbb
ds
out
inc
stos
ret
xor
adc
and
int
test
es
mov
jmp
cmp
adc
ror
sbb
into
ins
push
xchg
jne
je
cdq
leave
out
mov
adc
pop
jns
add
je
add
lds
mov
lods
xchg
xor
add
push
iret
in
mov
mov
sub
sub
pop
mov
ins
jge
jg
mov
imul
test
pop
pusha
jp
jnp
pop
mov
xchg
push
sub
and
sub
in
daa
adc
xor
adc
and
dec
outs
lods
ret
(bad)
(bad)
test
pop
shl
and
scas
dec
cwde
push
cmp
mov
or
push
cmp
pop
arpl
pop
int
jo
sbb
or
mov
in
retf
fidiv
repz
bound
push
pushf
stos
pop
pop
jg
fnstcw
cmp
jmp
popf
mov
xor
clc
cmps
shl
adc
cmc
jno
idiv
pop
sub
push
jbe
in
fistp
pushf
xchg
cld
xor
retf
xor
cmp
fdiv
ds
ss
enter
call
movs
ja
outs
xor
lahf
fnstcw
mov
enter
adc
or
push
movs
cwde
test
push
pop
sub
repnz
add
mov
ret
jl
iret
cld
pusha
(bad)
jg
mov
jne
add
imul
mov
ins
mov
inc
and
add
push
or
pop
aaa
adc
xor
jae
jb
ficomp
xchg
cmp
push
push
loopne
cmc
or
mov
jns
xchg
bnd
sub
xchg
or
xor
dec
and
mov
sub
jnp
cmp
ret
div
add
cmp
ffreep
lock
cmp
(bad)
xchg
cmp
ret
shl
ret
and
test
mov
xchg
(bad)
jle
add
sub
enter
and
aad
lods
movs
pop
and
mov
xlat
pop
pop
popa
fchs
cmp
or
movntps
jne
adc
call
jno
imul
movs
inc
lahf
jl
jle
clc
rcr
lea
les
cmps
mov
cld
std
jle
add
mov
fucom
clc
sub
inc
xor
movs
pop
mov
and
daa
or
mov
in
mov
jno
xor
mov
mov
jl
push
cli
sub
js
mov
jle
jo
add
push
xchg
(bad)
xchg
adc
into
xchg
(bad)
sbb
int
xor
jnp
cmp
into
mov
xlat
sti
sub
pop
and
sbb
sub
jno
sti
or
jp
les
jb
cmp
push
and
je
test
xchg
jae
nop
jns
or
fyl2x
js
ins
js
jg
fiadd
push
movs
push
cmp
ficomp
adc
add
cwde
sbb
cwde
adc
or
push
dec
sbb
mov
cs
loopne
xor
cmp
mov
imul
(bad)
jb
shr
ret
xchg
pop
mov
adc
imul
cmp
sub
mov
test
cld
hlt
std
and
mov
pusha
add
pop
add
in
push
aas
lahf
pop
dec
jo
adc
push
push
int3
pop
inc
jne
leave
pop
lock
dec
repnz
outs
mov
imul
fprem
fyl2x
jns
xchg
add
ss
cmps
dec
push
fisttp
dec
loopne
cs
sar
add
bound
hlt
or
outs
inc
in
adc
and
cvtdq2ps
ins
cmp
(bad)
loopne
add
dec
push
lahf
fist
fidivr
cmp
icebp
and
je
fldcw
aad
xor
ror
(bad)
mov
push
fsub
push
jp
shl
jmp
inc
jg
dec
(bad)
retf
dec
pop
fcom
jl
out
jno
lods
fadd
xor
xchg
(bad)
cmp
rcr
hlt
sbb
int
xor
dec
and
mov
xor
aam
sbb
jbe
or
xchg
ja
xchg
pushf
clc
mov
inc
jp
shl
add
ins
adc
cmp
aaa
push
fsub
loop
in
push
cmp
into
leave
pop
ja
lahf
mov
les
sub
ins
sub
popf
daa
push
or
sbb
sbb
adc
lock
out
enter
mov
sub
stc
ret
into
add
adc
or
mov
adc
or
inc
scas
xchg
pusha
jno
sbb
sub
adc
mov
pop
in
dec
ret
int
cmc
stos
cmp
cld
jg
inc
jle
into
nop
push
pop
stos
pop
mov
pop
adc
add
out
xchg
les
jns
fwait
ret
pop
pusha
fstp
int3
les
cmp
ret
enter
and
jnp
add
imul
mov
xor
cwde
and
xchg
and
jg
cmp
xlat
pop
clc
loopne
push
int
stos
mov
(bad)
gs
dec
fisub
in
int
adc
ficomp
pop
test
out
xchg
pushf
icebp
movs
sub
psllw
or
add
dec
(bad)
movs
mov
add
dec
lds
cwde
and
dec
jbe
es
jnp
fbstp
loop
mov
aaa
xor
hlt
lds
jp
sahf
inc
stc
leave
sbb
sub
sbb
mov
mov
daa
into
ins
hlt
push
aam
shl
dec
ja
adc
dec
enter
dec
call
xor
int3
jae
cmp
jl
call
push
out
jb
mov
cs
jne
xchg
rcl
repz
inc
aam
enter
mov
xchg
int
in
push
xor
pop
fld
nop
or
(bad)
sti
imul
cmp
inc
inc
stos
daa
xor
aam
lea
call
sub
enter
retf
test
mov
or
dec
imul
enter
loop
(bad)
jb
jmp
adc
rcr
mov
sub
adc
mov
pop
add
ins
aaa
mov
idiv
fidiv
dec
pop
sbb
mov
jmp
aad
mov
sbb
pusha
add
ds
push
test
inc
mov
xlat
cmp
scas
cs
inc
ret
mov
loopne
and
cld
aam
(bad)
mov
adc
(bad)
pop
and
dec
pop
gs
addr16
aam
inc
fnstenv
(bad)
push
adc
lds
cli
(bad)
pop
(bad)
push
(bad)
or
cmp
mov
push
daa
ins
xor
hlt
cmp
(bad)
mov
mov
shr
fsub
rcl
dec
sub
cdq
pusha
push
scas
fsubr
mov
add
pop
into
or
daa
add
scas
aaa
(bad)
ds
(bad)
or
shr
pop
fisub
push
dec
call
and
xchg
aad
push
push
or
pop
ror
ins
xor
xor
cmp
pop
xor
test
jmp
fmul
jno
pusha
js
mov
into
popa
aam
into
add
adc
gs
inc
xchg
mov
in
push
mov
push
xor
sbb
pop
xchg
push
cmc
sub
xor
sub
or
idiv
adc
jns
mov
aam
and
fistp
jb
adc
jp
movs
data16
fwait
scas
add
xchg
fsub
lock
imul
mov
xchg
daa
mov
bound
push
stos
and
cmp
femms
xor
imul
pop
push
adc
dec
or
mov
xor
pop
mov
push
dec
pop
pop
inc
inc
pushf
sbb
scas
cmc
fwait
or
adc
lods
xchg
aaa
dec
mov
inc
out
xor
pop
cld
xchg
mov
loopne
call
adc
jns
sbb
adc
jle
mov
sub
mov
inc
mov
in
in
movs
mov
mov
pop
and
mov
imul
xlat
sbb
pop
push
inc
sub
stos
add
lods
scas
imul
lods
inc
dec
retfw
cmp
sub
sub
adc
pop
push
(bad)
sbb
imul
mov
add
cmc
sbb
sahf
adc
aad
sbb
adc
jns
pop
test
fs
pop
call
mov
test
inc
cdq
pop
(bad)
sbb
inc
lds
aam
pop
fdivr
cwde
push
sub
ret
in
fcomp
and
add
jne
and
sbb
pop
arpl
jo
dec
push
xor
jnp
out
xchg
inc
leave
out
xchg
inc
(bad)
inc
or
(bad)
jmp
les
sbb
ror
aas
xor
xor
jl
enter
and
mov
sub
rcr
scas
cmp
sbb
mov
call
jbe
mov
sbb
push
in
pop
mov
adc
jl
ret
sbb
retf
es
lock
and
ret
into
mov
xlat
xchg
cmp
dec
sahf
lock
or
pop
in
adc
add
push
push
xchg
adc
sbb
les
loopne
out
pusha
outs
jne
in
lahf
addr16
pop
movs
cli
mul
push
cmc
mov
lods
fucom
xor
call
out
jb
xor
xchg
cmp
pop
fldenv
pushf
pop
in
mov
inc
sub
(bad)
(bad)
push
cs
xchg
xor
jnp
(bad)
call
leave
pop
enter
or
ins
xlat
punpckhbw
xor
loopne
jnp
stos
or
outs
fisttp
loopne
stc
fcomp
adc
test
or
jno
pop
loop
sub
into
not
or
ror
push
leave
mov
mov
jno
jmp
sbb
pop
(bad)
fsubr
pop
pop
xchg
leave
or
push
push
(bad)
bound
pop
adc
das
aaa
add
aad
shr
mov
aas
or
mov
outs
rcr
in
jb
retf
push
push
sbb
pop
test
dec
cmp
xor
xchg
xchg
out
add
sbb
push
scas
ja
shl
ret
aas
sub
les
ins
inc
loopne
inc
xchg
and
in
xor
ins
dec
or
loopne
add
imul
bound
dec
mov
fist
adc
mov
cmp
or
jne
cmp
sub
xchg
sub
enter
jb
in
and
repnz
fwait
loopne
loope
aaa
sbb
shl
fst
hlt
enter
xor
pusha
cli
jp
inc
xchg
pop
cwde
dec
mov
cmps
mov
xchg
and
fistp
jp
xchg
sub
xchg
mov
xchg
rcr
push
xchg
pop
jmp
cld
mov
xor
mov
call
sub
push
ja
sbb
xor
xchg
rsm
repnz
dec
push
jmp
sub
aas
pop
shr
mov
dec
clc
pop
cmc
mov
(bad)
mov
ret
and
out
test
(bad)
pop
aam
sahf
clc
loopne
push
es
push
test
(bad)
sbb
in
pushf
pop
in
scas
mov
cli
popf
fcomip
add
ja
pop
pop
mov
data16
mov
mov
xlat
pop
imul
add
push
mov
stos
int3
std
dec
pop
cmp
mov
or
in
push
cli
pop
mov
and
inc
sub
data16
mov
enter
and
movaps
aas
leave
push
pop
es
mov
addr16
call
push
adc
or
add
xor
jae
sbb
jle
inc
inc
stc
jae
fisttp
pushf
cmp
rcl
pop
push
mov
inc
mov
retf
dec
cs
in
add
jae
mov
push
xchg
nop
adc
push
pop
ficom
out
fsub
(bad)
repnz
and
dec
mov
(bad)
inc
fsub
aam
adc
jbe
sub
pushf
jg
sub
in
icebp
push
out
xlat
fs
mov
and
sbb
inc
pop
sahf
retf
ss
sar
mov
sub
inc
cwde
or
jno
mov
bound
fdivp
leave
xchg
ficomp
inc
lahf
xlat
add
xor
not
jle
inc
ins
jb
and
jo
pop
(bad)
xor
imul
fsub
inc
les
pop
or
ss
sahf
mov
jo
stos
or
pop
popf
sub
cwde
jb
ret
imul
pop
rcr
push
and
(bad)
xchg
mov
push
or
push
inc
out
sbb
pusha
jp
cmp
out
retf
in
mov
adc
dec
cs
xchg
(bad)
cmp
aas
js
test
add
movs
out
sbb
mov
mov
pop
sbb
add
cld
icebp
das
clc
not
popa
or
sar
mov
(bad)
aas
rcr
fsubr
fnstcw
cmc
xchg
nop
pop
rcl
not
(bad)
sub
cwde
xchg
enterw
mov
out
stos
pusha
cmp
inc
jl
mov
pop
adc
mov
and
jne
push
adc
mov
jb
add
test
inc
mov
ret
jno
cmp
dec
repnz
sbb
dec
pop
mov
retf
mov
fiadd
(bad)
cmp
dec
retf
and
push
push
jne
in
idiv
ret
loopne
jmp
push
retf
xor
test
push
movs
jg
(bad)
fsubr
aam
xor
fld
jp
xor
ret
fstp
pop
adc
adc
cmc
dec
vpavgb
rol
jb
int3
jae
cli
or
imul
sbb
xchg
lods
cmp
rcl
not
xor
mov
jl
xor
jae
sbb
pusha
ret
push
mov
xor
rol
or
mov
fbld
fisub
in
iret
jle
mov
add
enter
mov
scas
xchg
sbb
pop
and
stos
pop
sbb
setb
cli
push
ins
cmp
mov
xor
jecxz
dec
cmp
xchg
mov
cmp
adc
ficomp
and
cmps
jb
outs
mov
fprem
ins
(bad)
fadd
add
aam
push
mov
sbb
xchg
repz
sub
mov
outs
je
mov
(bad)
ret
imul
gs
sbb
adc
inc
xchg
clc
push
mov
pop
dec
add
push
iret
in
aad
out
push
adc
popf
popaw
cmp
xchg
shl
lods
pop
enter
test
ins
sti
jae
stc
(bad)
mov
rcl
ret
xor
push
inc
ja
inc
adc
iret
cwde
sub
sahf
inc
cmp
mov
popf
movs
inc
pop
mov
lds
in
mov
or
popf
retf
jbe
mov
and
aas
fwait
inc
fist
test
dec
sub
push
cld
pop
pop
rcl
adc
mov
ds
fchs
jns
cdq
sub
push
arpl
push
inc
cmp
sub
dec
retf
mov
xchg
xchg
mov
lahf
push
pop
or
push
or
imul
jmp
int3
cmp
mov
imul
sbb
out
out
popf
sub
and
les
xor
xchg
pop
fisub
int
push
cwde
add
imul
sar
cdq
cmp
hlt
ss
jp
mov
and
lds
into
sub
ds
jne
sar
mov
sbb
xor
call
(bad)
(bad)
ins
xor
test
test
aad
fnstcw
dec
jbe
cmp
xor
popf
aas
push
jbe
out
jl
inc
(bad)
push
fdiv
xor
jecxz
ja
in
pop
fcmovne
pop
popf
fwait
mov
int
adc
iret
sbb
outs
(bad)
bound
cmp
cs
jno
jne
push
sbb
sbb
cli
inc
xor
(bad)
fsub
jmp
pop
or
leave
mov
jg
test
les
call
aas
adc
ret
fdivr
or
add
iret
and
jecxz
xor
sub
inc
rol
push
mov
add
nop
and
xor
adc
sbb
sub
jno
iret
mov
push
pop
ret
and
shl
ja
xor
mov
mov
rcl
jb
inc
push
inc
enter
mov
jae
sbb
int3
into
test
sub
and
mov
lock
jo
ja
pusha
push
and
push
inc
adc
aas
xchg
xchg
(bad)
cli
call
les
inc
dec
sti
(bad)
pop
int3
mov
dec
inc
call
loopne
ja
mov
aas
pop
add
or
(bad)
(bad)
lods
add
popf
inc
xchg
pop
add
sub
scas
adc
pop
push
jg
or
or
ret
aas
stos
mov
jb
xor
ss
ret
retf
or
sbb
add
mov
mov
cmp
jbe
xor
adc
dec
je
add
push
(bad)
in
sbb
cmp
mov
xchg
and
sub
dec
aad
movs
test
cmp
sub
jo
xor
mov
ja
mov
jo
movs
push
repz
loopne
(bad)
push
imul
adc
aas
dec
sub
sub
jge
(bad)
xor
lods
cwde
sub
int
int
and
or
ror
or
mov
pusha
lods
(bad)
lods
push
dec
push
cmp
fwait
xor
jl
add
mov
cdq
cmp
adc
xchg
mov
test
mov
call
add
mov
jle
mov
ss
imul
or
sub
jmp
cmp
into
dec
cs
xor
mov
pop
cmps
mov
xor
jbe
int
pop
dec
lods
jo
add
test
fbstp
push
cmp
loopne
aas
outs
repnz
loop
in
repnz
sub
call
int3
mov
and
xor
stos
dec
je
lods
aas
push
cmc
(bad)
imul
xchg
mov
xchg
pop
fidivr
imul
pop
mov
out
test
movs
mov
mov
imul
or
or
rcl
pop
inc
pusha
mov
ins
add
push
fdiv
cdq
jl
inc
or
inc
je
(bad)
push
aas
cs
sbb
or
push
mov
fisubr
add
nop
ret
scas
mov
xchg
int3
sub
jl
(bad)
push
xchg
daa
mov
fadd
fdiv
nop
add
push
(bad)
jmp
mov
(bad)
fidivr
sub
adc
inc
cmp
dec
pop
scas
push
pop
adc
push
int
sbb
lahf
sub
mov
jae
cmovno
cmp
bound
scas
jp
cmp
sub
push
mov
push
pop
daa
inc
std
jp
arpl
outs
jecxz
push
sbb
sbb
xor
sbb
pop
and
les
and
sahf
imul
jl
mov
call
lahf
and
push
out
pop
int3
jge
jle
or
push
push
scas
sbb
push
and
cmp
pop
or
add
and
bound
sub
addr16
(bad)
jmp
or
jle
leave
rdtsc
loop
ja
aam
ret
dec
sar
les
into
sub
les
push
repnz
sub
cli
jg
shl
mov
xchg
mov
jmp
push
outs
pop
add
in
adc
retf
lahf
clc
sub
inc
add
stc
mov
xchg
ret
scas
sub
dec
xor
cwde
dec
sbb
or
jg
enter
iret
add
or
imul
xlat
mov
retf
dec
lds
loopne
sti
mov
mov
stc
pop
pop
cmp
jl
test
or
mov
or
cld
stos
(bad)
xchg
pop
inc
popa
popa
hlt
pop
loopne
in
cmp
jle
jb
out
jle
js
jmp
sbb
and
ret
shr
or
jns
jbe
cmp
in
push
(bad)
ins
xchg
push
(bad)
jnp
xlat
movs
(bad)
sub
mov
adc
dec
loopne
bound
mov
pop
addr16
pop
sub
mov
adc
xlat
or
mov
fprem
pop
mov
pop
push
mov
xor
mov
sahf
neg
inc
sub
add
add
jno
in
aad
mov
(bad)
jmp
xor
stc
or
cs
mov
cld
mov
nop
cs
aam
cmp
pop
or
fldenv
jno
ss
inc
cld
into
inc
fst
cs
add
dec
dec
rcr
and
pop
lds
jp
(bad)
jcxz
dec
sub
mov
mov
sbb
pop
cld
sbb
pop
and
mov
imul
dec
add
gs
pop
sahf
inc
ret
adc
xor
aas
punpckhbw
out
imul
sti
jb
(bad)
aas
sub
jp
loop
inc
ret
int3
cmp
fadd
(bad)
jmp
or
push
ss
cld
lock
pop
and
retf
fiadd
and
shl
sar
dec
(bad)
and
movs
cld
jo
jbe
in
scas
inc
sahf
enter
pop
dec
les
fwait
(bad)
into
scas
jmp
cmp
imul
sbb
fdivp
sbb
inc
xor
pop
rcr
pop
aas
nop
add
cmp
xlat
ret
ret
fisttp
fcom
dec
(bad)
add
loopne
dec
les
mov
lock
mov
lds
fstp
and
xor
add
xchg
xchg
cmp
pusha
cwde
paddb
es
sub
pop
and
jle
aad
aas
(bad)
xlat
add
xor
adc
xlat
jo
push
aas
add
and
or
mov
push
dec
mov
mov
hlt
mov
les
int3
mov
cwde
xacquire
xchg
sbb
int3
cdq
fcom
test
pxor
cmp
fld
inc
push
fdivr
pushf
imul
sahf
outs
mov
int3
test
sbb
dec
daa
in
mov
icebp
cmp
jo
enter
and
sbb
add
fisubr
jbe
pop
(bad)
dec
add
es
cmp
clc
jae
mov
cmp
push
sbb
jl
cmc
xchg
pop
test
pushf
ja
call
mov
pop
fidivr
dec
pusha
cld
jae
add
fistp
out
xchg
clc
clc
pop
aas
enter
pusha
jle
es
jns
sub
jns
aaa
aas
ret
push
xor
cmp
fs
clc
in
ds
pop
aaa
mov
or
sub
outs
mov
mov
pushf
ss
jns
stos
ds
jmp
aaa
sbb
lea
int3
adc
mov
xor
lods
sub
in
pop
loopne
(bad)
into
out
mov
loop
mov
inc
sub
mov
repz
in
and
ds
add
pop
pushf
in
push
pop
shl
inc
test
ins
push
jnp
mov
bound
(bad)
and
das
dec
cwde
loopne
sbb
js
pop
das
jb
dec
outs
gs
cmps
dec
(bad)
div
cmp
aad
push
jmp
dec
inc
aam
ss
add
pop
movs
adc
dec
in
xchg
rcr
jmp
hlt
sub
jmp
sub
cld
loopne
or
and
rcl
mov
lock
into
sbb
dec
add
retf
dec
les
mov
mov
push
pop
enter
lahf
cmp
adc
popw
ja
ins
retf
push
mov
fisttp
in
sub
cmpxchg
nop
jmp
push
jne
arpl
retf
cs
push
out
ret
cld
aad
ins
in
inc
dec
call
scas
nop
dec
cmp
mov
xchg
inc
je
mov
sar
mov
shr
and
fld
mov
cmp
(bad)
ret
xor
xchg
sahf
and
or
cld
clc
fld
jns
cmp
add
int3
int
fldenv
xchg
jo
pop
cmp
and
mov
or
ficom
cwde
imul
or
xor
es
mov
or
test
sbb
sub
lock
mov
sar
adc
add
daa
lock
test
addr16
loopne
dec
xor
and
pop
lea
cs
icebp
xchg
cmp
pop
outs
mov
pop
popf
push
imul
cmps
push
retf
push
jbe
add
xor
lods
or
fnsave
mov
push
sbb
fcmovnbe
lock
or
getsec
push
repz
mov
loopne
mov
xor
jmp
pop
enter
jne
out
ret
or
mov
push
or
ss
and
imul
mov
xchg
sbb
xor
sub
in
xchg
movs
fiadd
hlt
add
mov
imul
sar
cld
(bad)
sbb
call
ins
int
std
cdq
jo
cmps
or
sbb
push
int3
inc
cwde
pop
iret
jle
ficomp
imul
sbb
and
adc
sub
lds
jo
dec
cmp
daa
mov
cmp
fsub
cmp
xlat
int
mov
sub
out
mov
fnstcw
dec
xchg
cmp
inc
push
ins
jo
or
inc
scas
lods
iret
adc
fisttp
stos
pop
into
mov
lock
je
int3
addr16
cmps
and
pop
inc
pop
xor
adc
adc
hlt
push
fisubr
adc
cmp
or
push
in
xchg
shr
ret
sbb
mov
imul
nop
ret
in
mov
dec
push
push
cmp
enter
pop
inc
inc
push
and
inc
pop
xchg
lahf
popf
push
sbb
jbe
cmps
enter
add
adc
cmp
or
ins
dec
nop
mov
int3
pop
cdq
jg
pop
pop
sub
sub
aas
movs
int
fld
jmp
pusha
fadd
loopne
fst
pop
jbe
xor
ins
loopne
movs
push
stos
or
ins
sbb
mov
mov
adc
cli
fcmovnu
sar
adc
adc
inc
xchg
pop
mov
push
push
jg
sahf
or
jno
pop
cmp
rol
pusha
aam
test
add
daa
mov
(bad)
loopne
and
adc
imul
jno
jecxz
inc
mov
dec
add
pop
xchg
mov
adc
pop
adc
sbb
push
adc
inc
je
sub
loope
cmc
les
jo
sbb
ds
loop
les
mov
dec
in
imul
xchg
pop
loopne
dec
(bad)
mov
add
lock
dec
mov
icebp
inc
push
pop
scas
jno
cdq
inc
or
jle
xlat
jg
push
jp
or
mov
xchg
ficomp
ins
ret
fmul
or
outs
and
dec
adc
outs
pop
sbb
rcl
jb
xchg
(bad)
(bad)
sbb
fmulp
cwde
sub
(bad)
cmp
and
dec
rcr
into
sbb
inc
push
shr
mov
mov
xlat
mov
mov
cmp
xchg
repz
sar
outs
mov
int
data16
aam
outs
pop
adc
jo
pop
pop
adc
xchg
sbb
mov
in
or
and
test
sub
jp
or
pop
dec
cmp
fucom
repz
popa
mov
lahf
and
pop
ret
mov
imul
cmp
cmp
pop
sub
adc
push
rol
mov
jnp
lds
push
lock
ret
mov
call
ret
mov
sahf
pusha
cmps
xor
sub
icebp
mov
les
add
pusha
ja
jmp
(bad)
nop
mov
push
das
ds
cmp
fst
xor
(bad)
(bad)
fnstsw
adc
fist
shl
fs
mov
sti
ret
push
pop
aad
out
mov
xchg
stos
or
jmp
(bad)
cld
sbb
daa
scas
movs
sub
cmp
fdiv
dec
(bad)
jg
sbb
cmps
mov
call
push
xor
cmp
pop
pushf
xchg
mov
pop
cmp
dec
mov
lock
out
sbb
movs
xor
xor
dec
pop
(bad)
loop
scas
sub
sahf
inc
es
pop
fisubr
cld
gs
and
inc
mov
in
fistp
inc
inc
push
pop
mov
test
enter
push
dec
sub
addr16
push
sub
dec
fstp
rcl
(bad)
jmp
lahf
lahf
xor
push
jle
cmp
int
ret
lea
fldpi
icebp
mov
sahf
repnz
mov
int3
int3
pop
cwde
int
mov
cmp
in
mov
test
cmp
and
repnz
cmps
push
xor
sbb
jle
pop
cmp
xchg
out
ins
push
ror
(bad)
ret
xlat
ud2
int3
push
shr
into
adc
mov
adc
xchg
sbb
(bad)
push
and
inc
fcmovne
ins
cmp
loope
ss
add
xchg
pusha
outs
rcl
adc
(bad)
sub
push
(bad)
pop
retf
ds
jae
int
fstp
adc
sahf
inc
(bad)
in
sub
push
les
mov
movs
mov
loopne
lahf
sub
(bad)
adc
adc
xor
inc
mov
and
jg
dec
and
les
jmp
cmp
pop
rcr
loop
stos
push
or
stc
mov
or
mov
jge
fstp
and
enter
xchg
push
jg
add
pop
std
fadd
ins
outs
fcomip
sbb
mov
pop
outs
in
pop
repnz
sbb
push
imul
adc
les
xchg
sbb
ror
add
pop
idiv
sbb
xor
inc
xchg
push
cld
xor
cmp
sbb
adc
mov
and
jns
mov
lds
xor
test
dec
aad
scas
inc
jnp
inc
cmps
jle
mov
fisttp
dec
xchg
stos
push
cmp
dec
and
ss
or
stc
pop
dec
enter
jb
stc
mov
pop
ror
cdq
sub
xchg
hlt
push
cmp
xor
inc
jns
sti
icebp
ficom
cmp
or
jp
aad
iret
ins
cmp
inc
stos
ss
retf
push
ret
(bad)
or
lea
lods
iret
test
(bad)
cmp
in
pop
stc
loop
xchg
outs
xchg
dec
push
out
jp
sbb
or
push
dec
sbb
(bad)
sub
inc
add
loopne
int3
jg
push
jmp
push
fsub
imul
sub
call
cmc
loopne
repnz
imul
out
enter
adc
sti
sbb
je
out
and
hlt
xor
mov
cmp
dec
or
test
xlat
xchg
push
enter
ins
(bad)
pop
mov
mov
xchg
aas
sbb
scas
inc
movs
mov
cdq
ret
and
pop
lods
cli
push
dec
xor
fmul
push
int
dec
and
cmp
mov
pop
xor
scas
cmp
pop
mov
fsubr
jmp
xchg
inc
daa
sar
jmp
into
mov
nop
(bad)
jns
cmp
test
test
dec
xor
mov
mov
jo
push
cmp
adc
ret
in
and
imul
(bad)
idiv
stc
or
adc
and
inc
mov
mov
adc
push
add
mov
pop
cmps
adc
mov
jb
dec
mov
or
(bad)
in
leave
(bad)
inc
inc
or
xor
mov
jp
mov
dec
pop
nop
push
xor
jbe
sub
and
xchg
add
xchg
sbb
call
mov
(bad)
sbb
loope
mov
xor
int
popf
in
aam
ret
cmp
aam
jg
xchg
dec
adc
sub
and
adc
cmc
adc
xchg
aam
xchg
fwait
int
in
aam
repz
pop
push
addr16
dec
call
fld
mov
ds
mov
mov
and
out
ja
into
xor
aad
in
call
loopne
pop
cmp
(bad)
ret
adc
mov
fsub
in
test
loop
pop
je
lds
aaa
adc
fdivrp
jo
dec
adc
or
lods
pop
pop
pop
xchg
icebp
xchg
shr
fstp
stos
dec
out
xor
add
pop
sar
aaa
out
mov
jae
mov
cmp
fist
mov
pop
aas
das
sub
ret
pop
es
rcl
pop
or
loop
mov
out
mov
push
mov
cmp
cmps
pop
int3
cmp
into
mov
aam
add
loopne
mov
retf
push
frstor
int3
(bad)
enter
mov
fdiv
jbe
cs
xor
push
imul
pop
push
xor
daa
add
inc
or
mov
xchg
pmulhuw
(bad)
ficom
mov
les
or
leave
mov
inc
or
push
xchg
lds
fdivr
cmp
push
mov
scas
mov
leave
fwait
jmp
mov
dec
ret
cmp
push
fcom
leave
sub
popf
jno
ret
scas
int3
leave
cdq
fstp
call
pop
clc
pop
aaa
in
add
(bad)
pop
aaa
lds
xor
dec
cmp
rol
mov
jecxz
jnp
xchg
ds
aad
in
in
jb
xchg
xchg
or
ror
jmp
adc
lods
mov
ret
or
in
push
or
xchg
push
je
inc
test
pop
(bad)
leave
inc
sub
or
pop
(bad)
into
sub
bound
lds
mov
int
les
in
das
fcmovnu
ret
pop
aas
push
dec
jno
pop
jo
into
ins
or
icebp
sub
mov
mov
xchg
mov
repz
call
nop
ror
fnstenv
xchg
ret
xlat
and
sub
push
repnz
jp
mov
sahf
inc
sbb
xlat
mov
dec
jb
jle
js
ret
cmp
int
imul
adc
dec
sahf
js
(bad)
cli
(bad)
xchg
movs
(bad)
enter
xlat
push
aas
js
(bad)
mov
rol
xchg
inc
rcl
lock
adc
in
shl
retf
aaa
dec
dec
das
xor
cmps
pop
repz
push
jb
aad
fstp
add
dec
pop
mov
sbb
ret
and
aaa
retf
pop
bound
adc
or
test
mov
pop
cmp
pop
cmp
inc
das
inc
in
sub
enter
out
ror
pusha
inc
adc
push
in
ja
jne
pop
push
fstp
out
mov
jne
fdivr
push
pop
(bad)
xor
or
pop
enter
test
es
aas
push
xor
shl
popf
in
repz
(bad)
mov
movs
push
mov
ret
xlat
ficomp
pop
dec
jmp
adc
dec
push
adc
(bad)
out
mov
nop
(bad)
and
mov
sub
(bad)
jb
sti
cld
add
ins
mov
lds
sbb
and
jo
sbb
xor
ins
jg
enter
adc
nop
lahf
inc
sar
jae
test
loopne
sub
xchg
scas
pop
and
lods
aaa
hlt
pop
ror
mov
sbb
and
adc
and
jnp
retf
lods
loopne
or
loope
enter
sbb
ins
add
fld
and
dec
jl
or
cld
and
mov
mov
movs
pop
mov
fimul
repnz
and
pop
xchg
sbb
xchg
cmps
das
int3
add
and
jmp
fidivr
pop
xor
mov
call
leave
inc
or
adc
je
sbb
int3
fucom
daa
aas
fldenv
bound
add
neg
test
xchg
mov
lock
call
push
leave
shl
or
or
xor
sub
push
(bad)
and
xor
xor
ffreep
and
pop
xchg
out
shl
ins
imul
mov
enter
fcmovnb
daa
sbb
pushf
es
adc
in
mov
jno
cs
(bad)
cmp
loopne
ins
daa
test
ins
cmp
sbb
pop
sub
ins
add
ret
sbb
popa
sar
gs
and
push
fisub
repz
data16
loope
cmc
and
ffreep
mov
out
inc
fimul
mov
add
out
mov
mov
inc
push
ds
shl
out
sub
dec
xchg
test
leave
mov
(bad)
mov
aas
adc
pop
stc
inc
mov
push
mov
xchg
mov
ret
inc
add
xchg
cld
jl
in
test
cmp
add
xor
not
fiadd
fld
retf
dec
arpl
cmp
inc
fsub
or
hlt
inc
jecxz
cli
in
ins
or
mov
adc
push
jns
(bad)
mov
mov
sbb
pop
mov
sbb
idiv
(bad)
fbstp
fist
or
and
ja
and
aad
test
mov
cmp
repnz
sub
rcl
adc
in
jl
sbb
mov
cmp
adc
push
iret
test
sub
fs
mov
fdiv
outs
fst
pop
cwde
xlat
add
fiadd
aad
(bad)
fcmovb
ror
or
psrad
fisubr
pop
divps
imul
popf
aad
popf
add
push
fiadd
or
shr
loope
daa
(bad)
outs
fnstenv
fiadd
aas
push
pop
sahf
add
jae
aad
or
and
jno
fcomp
add
sbb
rcl
ja
cmp
sbb
xor
jae
retf
pop
lods
les
jmp
push
xor
dec
xor
leave
rcl
mul
xor
push
jmp
(bad)
push
clc
sub
imul
out
les
lock
fdiv
inc
sub
imul
test
jno
aad
addr16
sub
stos
jmp
jmp
lods
out
std
fs
imul
lock
mov
(bad)
outs
hlt
int3
stos
cmps
test
cmp
jae
repnz
inc
push
in
adc
(bad)
scas
pop
loopne
jle
shr
pusha
inc
push
call
in
clc
retf
xchg
popa
push
int
in
and
ins
push
xor
or
ror
ret
cmp
in
or
loope
xchg
lods
cmp
stos
push
out
jmp
mov
loop
jnp
out
fcmovne
loopne
xchg
push
in
scas
js
adc
shr
fwait
cld
push
clc
xchg
mov
rcl
retf
cmp
push
in
lods
mov
inc
test
imul
ficom
out
dec
repnz
mov
pop
in
int3
stos
stos
scas
das
fs
mov
adc
mov
inc
iret
jno
mov
xchg
mov
ret
xor
scas
push
fs
scas
xor
push
popf
push
in
scas
push
lock
dec
repnz
mov
pop
cwde
int3
stos
stos
scas
(bad)
fs
mov
je
loopne
mov
sub
mov
cwde
xor
shl
cmp
stos
stos
scas
cmp
push
scas
sahf
fiadd
dec
lock
call
out
push
(bad)
xchg
push
in
scas
push
sti
fmul
leave
stos
cld
scas
sbb
stos
clc
inc
mov
pop
mov
jle
icebp
sub
xor
xchg
daa
jae
scas
jg
xchg
cmp
mov
dec
jb
(bad)
call
sbb
scas
dec
add
pop
xchg
xor
xchg
xor
test
int
pslld
jmp
test
sbb
ficom
scas
inc
out
dec
ror
cmp
jmp
popa
sbb
and
cs
jno
scas
jg
mov
scas
(bad)
(bad)
push
nop
sar
in
ss
mov
and
push
xor
(bad)
mov
call
ror
cmps
ins
cmp
scas
jg
je
loopne
jae
scas
sub
push
pushf
jmp
je
xchg
scas
inc
je
xchg
mov
xchg
int3
stos
stos
scas
ss
in
push
xor
je
test
jp
je
in
(bad)
xchg
lea
xchg
xchg
push
loop
sbb
sti
scas
inc
pop
sub
push
cs
inc
int3
mov
add
daa
dec
hlt
scas
test
lock
sub
jl
mov
stos
clc
(bad)
xchg
jl
adc
jae
jp
cmps
push
rol
leave
les
sahf
jp
jmp
enter
shr
xchg
pop
jmp
(bad)
call
rcl
int3
data16
pop
xchg
leave
fbstp
xlat
or
jne
lock
or
xor
mov
or
jb
outs
cdq
mov
sbb
in
les
add
xchg
ror
sbb
test
pushf
int
call
and
pop
inc
push
je
jns
fwait
mov
aam
sub
data16
pop
enter
in
xor
mov
pop
mov
data16
neg
jo
sub
push
inc
and
and
cmp
fst
into
das
imul
push
push
jo
fcomip
loop
push
inc
pop
push
stc
mov
jg
scas
sahf
sub
stos
fimul
jb
call
lock
iret
cmp
adc
adc
sub
add
inc
pop
pop
xchg
jnp
sub
push
push
mov
(bad)
ins
mov
adc
xchg
mul
pop
jp
int3
add
pop
adc
not
jg
call
mov
xor
inc
and
int3
je
sub
adc
(bad)
jg
jecxz
xchg
into
push
mov
(bad)
call
leave
int
aas
enter
pushf
clc
imul
mov
or
cmp
dec
fild
leave
xchg
(bad)
mov
sbb
or
xchg
dec
or
lock
jns
mov
test
mov
sar
mov
or
cmp
out
cli
popf
and
mov
dec
adc
mov
mov
movs
loopne
setno
ret
push
add
aam
cmp
lea
mov
loop
or
mov
xor
lahf
xor
cmps
leave
inc
xor
pop
stos
and
and
sbb
imul
clc
mov
or
(bad)
in
add
loopne
retf
jp
dec
loopne
or
add
aam
xlat
cwde
push
hlt
loopne
inc
popf
xlat
cmp
and
call
push
push
movs
ficomp
or
(bad)
cli
xor
xchg
arpl
xchg
xor
and
xor
dec
fsubr
imul
shl
xchg
bound
push
jns
dec
inc
pop
imul
retf
data16
cmp
mov
movs
xor
outs
xor
jl
xor
daa
lds
mov
shl
xor
mov
leave
aam
dec
mov
mov
or
sub
ja
and
and
jle
ins
test
out
cmps
retfw
inc
mov
dec
jns
fnsave
push
(bad)
(bad)
cmp
xor
sbb
adc
pop
ret
pop
js
and
shl
adc
push
fisttp
mov
cmp
int3
lods
repz
gs
inc
push
popf
nop
sub
pushw
lock
retf
inc
push
sbb
pushf
dec
xlat
dec
hlt
inc
sbb
cmp
rcl
loopne
or
dec
jns
leave
or
inc
xchg
loopne
je
push
sbb
(bad)
cmps
pop
enter
mov
ret
test
int3
sub
mov
loop
mov
shr
mov
iret
mov
popf
dec
cmp
sbb
add
clc
imul
pop
inc
push
push
sub
xor
lds
xor
aam
loopne
(bad)
stos
pop
dec
mov
push
push
bound
sub
pop
shl
nop
cdq
xchg
and
xchg
pop
retf
mov
and
mov
das
add
sub
pop
xchg
adc
xor
mov
push
pop
mov
cmp
retf
inc
cmp
test
adc
mov
rol
sti
mov
(bad)
or
add
inc
mov
adc
ret
call
stc
add
mov
and
shl
cli
cmp
push
mov
xlat
push
shr
jae
addr16
rol
(bad)
(bad)
loopne
mov
in
mov
gs
loope
xor
loop
call
les
cmps
test
adc
push
pop
sar
ret
mov
dec
enter
sub
jp
xor
in
jmp
dec
retf
pop
aad
sbb
movs
ja
fsub
ret
xchg
adc
lds
fsub
hlt
jp
mov
cld
xchg
inc
pop
add
hlt
es
js
imul
jmp
mov
dec
arpl
cmp
test
and
movntps
nop
cmc
and
(bad)
xchg
mov
aaa
in
dec
push
enter
fisubr
mov
and
push
add
loopne
stc
pop
out
in
xchg
lock
in
sub
fwait
and
xor
fadd
cmp
pushf
es
inc
mov
iret
enter
or
jg
cmp
daa
movs
fmulp
pop
outs
sub
call
adc
(bad)
jecxz
add
sub
and
mov
sub
jb
sti
or
adc
fld1
mov
push
push
push
aas
xor
sub
out
cmp
push
iret
lds
cmp
les
push
ss
fisubr
outs
adc
mov
pop
lock
mov
xchg
std
fdivrp
adc
ins
rcl
pop
(bad)
stos
sbb
jge
fsubp
aad
jecxz
and
mov
and
clc
xchg
popa
sub
pop
mov
(bad)
fmul
mov
mov
xchg
repz
aas
push
daa
pushf
or
inc
adc
test
into
add
jns
loopne
sub
mov
jl
pushf
cmps
pop
pop
repnz
push
xchg
int
int3
xor
fild
adc
add
xor
xor
rol
add
or
or
push
stos
dec
loopne
push
data16
or
sub
fld
sub
mov
loopne
pop
das
inc
pop
stos
xor
sub
push
es
sub
jo
mov
dec
mov
ss
nop
xlat
fcomp
sub
or
shr
jo
jnp
ror
aas
ret
outs
mov
ss
add
push
push
cdq
dec
(bad)
jno
lea
pop
ret
aad
ss
mov
add
andps
xor
cli
cwde
inc
push
cdq
fstp
mov
inc
or
adc
push
daa
sbb
jb
ins
nop
call
xlat
fcom
adc
pop
add
and
and
mov
inc
jl
pop
sahf
jae
sub
add
mov
nop
inc
stc
xchg
dec
lea
xchg
cwde
push
xlat
in
add
xchg
fisubr
xlat
ficom
nop
ret
push
vpsllw
in
sbb
xchg
add
pop
bound
stos
cmp
mov
ss
ret
xchg
push
(bad)
dec
xlat
mov
lds
leave
pop
xchg
es
push
sbb
fist
push
(bad)
out
pop
or
test
sub
shr
push
sbb
hlt
xchg
push
add
mov
stos
sub
push
test
add
in
cmovno
xor
push
mov
and
scas
mov
mov
shl
int3
push
aad
pop
sub
mov
sbb
cmps
ins
sub
pushf
push
aam
xor
prefetch
push
push
mov
iret
sbb
enter
mov
xor
lahf
xor
cmp
aaa
daa
sbb
dec
sbb
movs
test
retf
sbb
ins
inc
adc
inc
adc
dec
cmp
loop
(bad)
stos
in
out
in
in
(bad)
and
rcl
or
mov
xchg
sbb
cmc
sbb
inc
enter
mov
int
test
push
xchg
and
cmc
add
jmp
mov
inc
or
mov
inc
sub
push
into
data16
inc
push
aaa
fimul
bound
and
cmp
in
cmp
cmps
jge
jae
or
or
mov
adc
push
sbb
addr16
add
test
cmp
and
les
jns
xor
and
xlat
pop
push
and
and
dec
shl
mov
pop
imul
mov
push
(bad)
sub
fcom
push
loope
addr16
jno
cs
pop
int
xor
out
xlat
nop
push
int3
arpl
call
mov
inc
and
xor
int
js
dec
test
(bad)
test
mov
lea
fistp
pop
(bad)
pop
(bad)
jl
ins
ins
xchg
jle
mov
xor
jecxz
jg
dec
retf
pop
inc
dec
or
or
das
loopne
out
dec
push
cmp
sbb
sub
mov
mov
leave
mov
mov
lock
out
pop
add
sbb
inc
div
mov
mov
xchg
add
inc
sbb
pusha
rol
cli
jne
movs
dec
mov
or
rcr
loopne
and
in
fcom
neg
inc
jae
add
outs
cmp
push
sub
push
add
cmp
or
mov
jae
jo
ret
ss
cmps
add
mov
jns
les
aad
dec
in
sub
pop
repnz
jns
jl
fnstsw
jo
pop
mov
mov
in
sub
mov
ficomp
adc
out
js
mov
push
imul
jmp
into
in
xor
fdivr
add
scas
mov
icebp
cmp
jb
dec
call
aas
gs
pop
aam
cmp
xchg
jns
xchg
mov
mov
cli
aad
imul
push
xor
push
daa
sbb
mov
jmp
mov
mov
add
int3
fdiv
sub
loopne
cmp
push
jne
(bad)
(bad)
arpl
std
push
ror
data16
pop
pop
mov
fsubr
ret
mov
inc
pop
aam
or
mov
mov
outs
inc
scas
sub
popf
adc
test
pop
(bad)
fsubp
pop
(bad)
jmp
and
shl
pushaw
fisubr
iret
div
ins
(bad)
icebp
cmp
pusha
jmp
inc
ficomp
pop
dec
je
stc
mov
(bad)
pusha
push
inc
cmps
pop
fcmovnb
pop
xor
mov
and
pusha
sub
pop
mov
je
ret
mov
in
test
(bad)
sub
or
push
xor
pop
sbb
dec
outs
in
xchg
je
xchg
add
int
clc
gs
mov
mov
inc
rcr
scas
adc
pop
jle
or
dec
sub
int
movs
aas
loope
hlt
mov
mov
jbe
aad
das
data16
into
sbb
shr
idiv
dec
mov
sbb
fisttp
pop
jl
movs
ror
xchg
fidivr
mov
ror
in
jns
fs
loopne
enter
lea
push
fsub
xor
test
les
out
or
push
outs
sar
loopne
mov
sub
cmp
cmp
les
inc
pop
out
jne
xor
pop
int
cdq
gs
test
inc
test
ficomp
aam
and
mov
mov
sub
and
or
fisubr
(bad)
xlat
or
(bad)
fdiv
jle
int3
cmp
adc
mov
push
rol
das
pop
cmp
or
cmp
pop
ret
add
int3
imul
pop
adc
ds
push
xor
pop
xor
leave
xor
and
pop
enter
xchg
cmp
adc
in
movs
and
fbstp
push
sub
and
add
inc
cmp
and
retf
popf
jnp
jns
fs
hlt
popa
popa
int3
(bad)
fcmovne
in
clc
ficom
repnz
idiv
in
pmaddwd
js
push
call
push
lahf
shr
xchg
addr16
and
imul
add
or
ins
ret
outs
and
retf
ret
pop
pushf
add
popf
xor
jns
mov
mov
sar
sbb
push
out
fistp
sbb
adc
sar
xchg
sahf
jmp
mov
fmulp
inc
test
push
push
ret
dec
fcomp
les
lea
int3
stos
pop
lds
inc
cmp
out
cwde
retf
shl
and
(bad)
xor
dec
cmp
sub
jb
mov
movs
cmp
jnp
int
cmp
call
(bad)
out
cmp
and
shl
jl
movs
leave
pop
ficomp
cwde
xchg
add
inc
xchg
popf
das
inc
int3
push
leave
cs
je
repnz
test
add
mov
and
jo
sub
ins
cmps
or
enter
lods
jmp
call
pop
loopne
cmp
mov
push
xchg
data16
adc
fst
stos
call
or
cli
jae
push
aam
inc
loopne
mov
fnsave
dec
sub
xor
ret
pusha
lds
gs
in
sub
xor
bound
popa
inc
push
dec
jle
push
jge
xchg
lock
add
sahf
dec
outs
bound
jl
add
or
xor
les
dec
les
sbb
mov
out
into
les
mov
xor
mov
ret
xchg
mov
add
push
fistp
popf
mov
pop
lds
sbb
pop
xchg
or
scas
cmp
fmul
pop
fcmovu
outs
cmp
aaa
cmp
loopne
imul
xchg
mov
push
sbb
imul
sar
lea
in
sbb
sbb
jns
lds
and
cs
ss
sahf
pop
retf
mov
or
repnz
retf
xor
icebp
inc
pop
(bad)
loop
les
lock
ror
and
pop
xlat
data16
mov
cmp
sbb
adc
xor
ret
push
ret
mov
fistp
push
popf
aad
sbb
in
mov
jle
inc
inc
cmp
inc
dec
xor
adc
xchg
pop
ret
mov
mov
mov
mov
push
sub
dec
aas
lock
sub
fcmovnb
jbe
push
ja
xor
out
test
pop
inc
and
in
in
mov
mov
cmc
cwde
leave
std
xchg
or
cdq
test
popa
pusha
cbw
(bad)
lods
test
pushf
test
push
lds
mov
hlt
pop
push
clc
push
inc
push
inc
repz
pop
hlt
(bad)
push
lds
ror
jnp
stc
push
(bad)
and
jns
inc
lahf
or
je
cmp
jno
sbb
aad
rol
xchg
push
mov
jb
cmc
scas
aad
jp
jbe
dec
xchg
mov
mov
xchg
cmp
or
jg
jb
gs
jp
pop
bound
and
les
loopne
ja
xchg
mov
xchg
xor
ins
es
mov
dec
dec
adc
loopne
in
(bad)
push
push
mov
in
jns
mov
js
movs
clc
sbb
and
and
fidiv
js
rcr
and
enter
add
mov
mov
hlt
iret
cmp
loopne
inc
sbb
push
cmp
retf
ror
push
lock
sti
fld
ins
cmp
mov
jo
add
aad
jb
push
jmp
jb
xchg
call
scas
lods
sbb
lds
xlat
fst
push
jns
sbb
pusha
fnstenv
sbb
and
pop
hlt
add
retf
sub
and
push
cmp
push
sbb
dec
sub
call
test
sub
xor
das
sbb
or
test
jb
xor
sbb
cmp
shr
mov
or
loopne
dec
push
int3
add
mov
cmps
pusha
call
into
jb
mov
loopne
mov
int3
cld
les
callw
push
jp
mov
pop
add
les
aas
(bad)
mov
push
xchg
and
retf
xchg
adc
sbb
bound
sti
sub
sbb
xchg
add
jl
pop
or
mov
js
call
and
or
xor
leave
dec
mov
(bad)
int
and
enter
pop
push
das
ror
jae
je
and
aam
in
pop
into
out
fs
cmp
or
outs
xor
fs
sub
mov
sub
mov
dec
jne
inc
mov
data16
outs
push
adc
clc
fisubr
jb
cld
xor
shr
test
shl
jmp
xacquire
jp
mov
rcr
sub
cmps
dec
cmp
retf
adc
inc
jmp
lahf
sbb
leave
cmp
cli
add
fdivr
inc
cli
out
mov
mov
fidivr
inc
xor
add
add
cmp
and
xchg
push
imul
push
jbe
or
xor
stos
rol
mov
and
pop
inc
loop
sub
in
pop
shr
std
fldcw
daa
sbb
sub
lods
rol
daa
into
pop
or
or
adc
ins
movs
mov
adc
(bad)
fadd
mov
jno
add
inc
dec
or
inc
retf
fnstsw
(bad)
fsubr
imul
cmp
add
sbb
inc
or
cmp
fidivr
xchg
clc
fcmovnbe
mov
sub
or
adc
jno
add
fstp
call
adc
jo
xor
aam
rcr
mov
jp
push
int3
add
xchg
fwait
jo
pop
sub
inc
in
mov
movs
fisubr
stos
adc
xor
mov
sar
pop
je
out
scas
das
cmps
push
les
into
xor
or
fdivr
push
loopne
or
fsubr
cmp
lds
mov
push
fcom
popa
ret
xor
popf
pop
(bad)
arpl
ficom
pop
add
ret
ins
loopne
fcomp
jb
sub
xor
sbb
ds
retf
out
jp
mov
jmp
sbb
in
xor
inc
cmp
loopne
(bad)
jmp
mov
and
les
dec
call
mov
je
aas
jae
faddp
mov
je
jo
out
fild
in
add
xlat
and
fst
lods
inc
pop
jnp
cmp
jp
(bad)
inc
sbb
les
push
dec
fwait
sub
stc
in
and
sub
or
add
or
cmp
sbb
sbb
mov
xlat
mov
inc
outs
fcompp
mov
fisttp
imul
call
push
cs
jmp
sbb
sbb
push
push
or
pop
(bad)
(bad)
xor
or
das
pop
mov
mov
cmp
mov
mov
xor
int3
es
sub
inc
(bad)
imul
xor
pop
(bad)
sub
enter
xor
sub
pop
jp
pop
inc
add
xchg
mov
mov
xchg
push
push
stc
into
(bad)
in
xor
mov
xor
mov
pop
aad
cmp
aaa
sbb
dec
xchg
mov
imul
pop
popa
hlt
shl
xor
loopne
popf
ds
pop
xor
les
cmp
sbb
dec
ins
scas
mov
adc
call
sbb
ret
sbb
pop
ss
cmps
adc
mov
dec
in
add
sbb
jg
repnz
ds
out
and
mov
xor
mov
or
pop
dec
push
pop
test
in
ins
cmp
and
fwait
or
jmp
in
lods
ror
jbe
bound
clc
cmps
inc
sbb
sub
pop
clc
pop
push
cmps
mov
pop
cmp
aam
mov
xor
imul
push
jmp
lahf
adc
cdq
shl
movs
hlt
jge
or
mov
xor
adc
scas
push
sub
ret
xor
leave
pop
sub
pop
xor
in
jmp
pop
dec
sub
push
test
fwait
and
cli
fxch
sbb
test
xchg
dec
retf
push
sub
faddp
xchg
push
(bad)
int
mov
nop
mov
inc
mov
scas
outs
push
pop
jae
out
pop
pop
call
cmp
xor
or
pop
jb
cmps
jnp
rcr
ss
aaa
les
add
mov
in
jne
adc
test
dec
push
inc
pop
and
pop
pop
sbb
call
cmp
mov
leave
rcl
mov
shl
xchg
loop
rcl
inc
push
mov
jne
sbb
ror
add
fnsave
sbb
cmp
and
jg
test
xchg
fidivr
ret
retf
push
or
sbb
aas
fsubr
sar
sub
(bad)
pop
shl
jmp
adc
pop
fsubr
shr
mov
pop
fwait
(bad)
cld
pop
xor
aas
rcr
pop
pop
sbb
inc
nop
sub
lea
mov
out
sub
adc
cmp
(bad)
rcr
ret
mov
das
mov
and
adc
jns
in
inc
xchg
cmps
mov
xor
and
lea
fsub
fimul
xor
sub
push
push
pop
mov
fmul
aam
loope
clc
popa
add
adc
cmp
fsubr
cmc
or
retf
pop
scas
shl
popf
xchg
daa
sub
call
mov
mov
xor
pop
outs
in
mov
dec
mov
out
and
xor
lods
int
in
or
add
daa
(bad)
ror
ins
ret
ins
retf
push
clc
movs
retf
jae
pop
adc
in
gs
enter
(bad)
(bad)
pop
into
xor
loop
xchg
test
cwde
cmp
add
add
mov
not
int3
enter
adc
push
mov
cmp
mov
sbb
aas
inc
shr
aad
fbstp
or
jp
(bad)
scas
shl
pop
cmps
lods
inc
ret
dec
test
xchg
int3
sar
jle
add
movs
dec
ss
pop
les
pop
scas
mov
cmps
xchg
pop
mov
pushf
adc
mov
dec
adc
xchg
xor
and
xor
cmps
mov
mov
jo
push
and
int
int3
push
(bad)
pusha
mov
and
and
cwde
(bad)
jo
scas
lea
stos
add
mov
test
mov
push
push
iret
mov
call
outs
pop
les
mov
pop
jo
xchg
push
(bad)
dec
mov
jo
aad
ret
push
mov
dec
sbb
sub
push
adc
pusha
lds
rol
popa
cmps
ss
sub
xchg
scas
repnz
cli
hlt
adc
cmp
and
or
xor
inc
xchg
mov
mov
clc
hlt
push
pop
or
mov
xor
pop
xchg
xor
mov
mov
js
cwde
imul
(bad)
push
xchg
in
pop
mov
add
cmp
push
sbb
pop
out
jp
and
pop
outs
xor
call
ret
adc
out
rol
add
add
and
scas
xchg
sbb
cs
add
inc
hlt
iret
or
inc
cmp
xchg
inc
mov
sbb
mov
jge
imul
test
bound
xor
mov
mov
sbb
dec
xor
pop
les
push
sbb
loopne
inc
mov
adc
addr16
xor
sbb
jmp
mov
adc
push
icebp
bound
adc
inc
loopne
aad
mov
fist
pop
mov
ins
aas
mov
das
jbe
jo
push
mov
rcr
enter
or
inc
push
jno
add
sub
adc
push
aad
and
enter
inc
fidiv
(bad)
mov
mov
mov
(bad)
mov
sahf
or
sbb
imul
sahf
repnz
or
pop
movs
ror
in
out
pop
mov
mov
xchg
je
iret
or
daa
pop
adc
cli
lock
and
inc
mov
and
add
or
es
pop
sbb
fcomip
jge
pusha
enter
(bad)
js
jnp
jle
outs
sub
sbb
mov
leave
push
rcr
jp
sti
xchg
imul
scas
into
jb
rol
cmps
inc
inc
add
sub
fwait
int3
or
jp
or
mov
xchg
or
(bad)
sbb
fcom
fild
dec
stos
(bad)
and
jae
and
(bad)
leave
add
mov
mov
dec
cmps
inc
test
jbe
aaa
jne
inc
cmp
ficomp
jno
mov
cmp
or
ins
push
popf
cdq
add
push
mov
rcr
xchg
cld
pop
or
stos
cwde
repz
les
or
add
push
jns
int
in
frstor
jl
mov
retf
call
shr
sbb
pop
int3
fs
cmps
mov
and
push
or
ins
and
in
in
inc
dec
iret
fisttp
push
push
pop
out
mov
test
mov
gs
jae
daa
push
sbb
dec
fsubr
xlat
xor
xchg
inc
jno
xlat
aas
fldcw
dec
push
jle
dec
mul
add
push
sti
and
mov
imul
fnstsw
retf
jmp
or
adc
push
(bad)
fadd
mov
shl
retf
sbb
sub
lods
fwait
inc
and
test
jns
ins
sahf
add
(bad)
jp
sub
mov
xor
jp
fwait
in
in
fidivr
pop
xchg
(bad)
sub
adc
xor
cld
push
int3
fst
mov
mov
or
pop
pop
pop
xchg
fscale
sbb
cmps
inc
push
adc
dec
movs
push
in
push
stos
jnp
aaa
aas
sahf
inc
das
mov
ror
jo
xor
cvtps2pi
inc
jp
jl
inc
subps
(bad)
jno
ret
inc
pop
xchg
retf
and
sar
or
or
cmp
ret
mov
jb
addr16
nop
jl
sbb
and
inc
jo
or
mov
ins
and
dec
pop
inc
mov
xchg
ins
xor
mov
cmp
push
fcmovnu
xlat
sbb
mov
repnz
fcom
inc
pop
sbb
outs
ins
fdivr
jo
iret
mov
enter
(bad)
sbb
adc
leave
ins
inc
jmp
(bad)
fisubr
mov
and
push
repnz
cmp
sbb
xlat
jns
inc
sbb
mov
jl
and
and
and
sahf
lds
ds
or
or
dec
mov
std
or
lock
scas
sub
test
rol
pop
aam
adc
pop
pop
push
sahf
xlat
jb
adc
inc
xor
push
xchg
sbb
push
xor
push
(bad)
pop
imul
fldcw
fcmove
pusha
xchg
(bad)
cmp
pop
jg
addr16
imul
int
clc
add
in
cmp
xchg
into
(bad)
pushf
xor
or
out
cwde
xor
add
pop
imul
ret
aaa
ss
inc
loopne
or
lea
imul
jo
pop
enter
ficom
enter
shl
stc
push
jnp
scas
sbb
cmps
jb
movs
mov
mov
push
into
jecxz
dec
ret
cmp
int3
and
xor
clc
fldcw
(bad)
or
cmp
les
adc
inc
mov
fst
fsub
jns
mov
aad
lods
mov
jne
nop
movs
sub
sub
dec
ror
imul
ds
das
push
ja
push
push
and
mov
dec
jo
add
fistp
mov
pop
mov
cmp
fs
cwde
das
inc
rcl
pop
mov
adc
sbb
push
xor
enter
push
pop
ds
fcom
movs
cmp
jle
mov
or
ret
push
jae
cmp
cmp
mov
into
adc
(bad)
std
push
add
push
aas
inc
sub
adc
mov
fldcw
push
lea
xchg
popf
add
test
scas
inc
or
cmp
fs
or
mov
and
or
fist
xor
mov
pop
mov
inc
or
call
push
(bad)
cmp
push
add
les
sbb
mov
push
jne
mov
or
in
and
in
imul
mov
xor
inc
or
mov
movs
inc
push
or
scas
push
xor
loopne
mov
(bad)
jmp
jmp
xor
ds
jo
push
dec
inc
movs
mov
push
stos
inc
dec
das
lahf
pop
outs
and
nop
int3
jmp
fcom
push
fs
pop
push
scas
mov
cmps
aaa
scas
add
es
out
loopne
push
vmread
push
adc
or
push
sub
or
push
push
clc
or
es
aam
int
inc
push
or
push
mov
aad
mov
ins
retf
test
clc
scas
cld
push
pop
(bad)
xlat
xor
imul
push
sub
cmp
ds
test
cmp
int3
pop
adc
sbb
ja
add
pushf
mov
jne
jo
cmp
lock
scas
loope
sub
push
adc
inc
call
add
xchg
or
push
push
les
push
add
std
dec
adc
enter
sub
dec
adc
cmp
xchg
push
cmp
or
jg
aas
xchg
sar
ja
data16
popf
std
push
inc
sub
sbb
retf
mov
dec
sti
jns
jmp
aam
xchg
fcomp
cdq
mov
mov
repnz
push
pop
sahf
loopne
data16
sbb
dec
ins
and
jno
js
stos
cmps
xlat
in
add
mov
fcomip
aas
inc
dec
test
pop
inc
dec
mov
out
loopne
inc
xor
or
cwde
xchg
nop
xor
jge
sub
dec
adc
mov
xchg
int3
dec
loopne
mov
cmp
xchg
(bad)
rol
das
dec
or
loopne
test
pop
das
push
nop
sub
fcmovu
mov
sbb
arpl
pop
int
ret
cmps
loop
int3
push
ret
sub
pusha
push
es
imul
je
mov
sbb
in
adc
lods
inc
sbb
mov
je
outs
adc
imul
pushf
pop
cmp
stos
or
jbe
test
adc
add
in
or
or
call
int3
and
push
(bad)
jns
mov
inc
imul
(bad)
bound
inc
outs
pop
inc
add
shl
jle
or
retf
adc
jl
or
push
js
and
or
call
pop
or
(bad)
lds
in
fst
sub
sub
or
jae
xchg
or
pop
clc
fimul
jae
fwait
and
cmp
cmp
aas
js
int3
aad
int3
lock
lds
fdiv
ins
adc
dec
pop
add
sub
loopne
out
sbb
cmp
cmp
retf
xchg
ret
aas
add
pop
dec
iret
mov
fld
sti
xchg
and
ret
lock
scas
mov
mov
test
inc
xor
inc
or
leave
cmp
retf
pop
shr
mov
arpl
or
fnsave
cmp
dec
ins
adc
jo
inc
pop
pop
call
retf
inc
aad
or
mov
sbb
dec
push
call
outs
rcl
into
into
rcl
xchg
jno
fst
stc
mov
data16
iret
inc
push
int3
inc
jge
and
adc
jp
inc
add
fld
xor
les
retf
into
neg
xor
inc
js
add
leave
push
retf
repnz
sbb
in
xor
jo
mov
mov
inc
jg
or
aaa
fcomp
in
pop
lea
int3
xchg
mov
sub
into
pop
ret
add
mov
(bad)
cdq
adc
cmp
loopne
dec
iret
mov
adc
jbe
adc
dec
jmp
xor
inc
out
mov
or
push
jne
xlat
daa
ins
mov
ds
imul
sar
lock
mov
fmulp
adc
inc
mov
sbb
pop
icebp
fist
fistp
cmp
and
in
cwde
cmp
and
and
sbb
cmps
fldcw
push
inc
inc
cwde
(bad)
sbb
xlat
stos
xchg
mov
les
fwait
xchg
or
mov
(bad)
jl
out
cs
ret
js
xor
adc
mov
inc
push
sub
adc
push
inc
inc
js
sbb
dec
aaa
inc
inc
push
inc
gs
daa
and
aaa
popa
movs
(bad)
pushf
push
add
ficomp
icebp
das
fldenv
adc
and
cwde
pop
loopne
loope
or
enter
ret
inc
add
sbb
mov
push
pop
movs
dec
xlat
fiadd
dec
cli
nop
gs
test
call
jg
hlt
shl
xor
(bad)
enter
mov
jne
enter
jge
mov
loopne
lahf
push
cmps
nop
data16
shr
scas
aam
cmp
scas
loop
je
loop
cs
xor
sub
pop
inc
mov
sbb
lahf
stos
push
sub
pop
jnp
push
test
mov
in
mov
ret
push
mov
jmp
sub
cs
es
mov
mov
add
fild
ret
adc
(bad)
inc
scas
pop
shr
xor
(bad)
jp
(bad)
es
xchg
or
add
inc
js
sub
rcr
cmp
or
xchg
movs
jne
(bad)
enter
js
(bad)
aam
mov
sub
pop
ds
sar
outs
mov
aas
iret
repnz
push
fistp
mov
inc
jns
jmp
loopne
aas
sti
mov
xor
rcl
into
aad
sub
ds
add
or
mov
js
shr
inc
out
sbb
loopne
cdq
mov
add
sbb
ret
jp
push
mov
(bad)
jb
inc
aam
dec
cmp
inc
ds
inc
mov
leave
sti
loopne
call
pop
fdivr
mov
sar
(bad)
jl
sar
mov
inc
lock
sub
add
inc
cdq
and
imul
addr16
int3
sbb
mul
pushf
jb
imul
cmp
jg
inc
add
cli
pop
int3
fmul
xor
call
inc
aad
ret
adc
fmulp
rcr
dec
aam
push
fsub
lods
push
adc
inc
test
jbe
xchg
fmul
mov
and
leave
test
pop
outs
dec
push
jnp
dec
jno
lock
adc
mov
mov
push
mov
movsx
push
ja
jl
xor
sub
sbb
ror
sub
scas
jae
jno
clc
aad
retf
dec
add
movs
not
mov
sbb
popf
mov
outs
xor
sub
push
sbb
pop
pop
enter
or
leave
inc
dec
dec
ret
dec
sub
dec
call
inc
sub
sub
cmp
outs
mov
pop
in
add
mov
add
pop
mov
push
aam
aaa
enter
push
jp
push
call
mov
mov
aas
(bad)
pop
fs
push
mov
mov
in
ret
adc
inc
jb
arpl
jl
and
aas
jns
data16
dec
jl
mov
sub
dec
test
push
(bad)
xlat
bound
jl
ds
nop
xlat
mov
icebp
ins
push
cs
xlat
mov
inc
sbb
fadd
rol
inc
fsubr
inc
pop
ficomp
xlat
adc
inc
jb
(bad)
xor
das
mov
jb
pop
retf
leave
or
and
pop
sbb
fucomi
imul
bound
outs
(bad)
je
push
das
fiadd
lds
mov
jo
jle
ret
dec
add
jp
pop
rol
in
inc
xchg
jbe
ret
jno
aad
fs
lock
mov
xchg
in
push
(bad)
dec
jl
sbb
mov
or
int
clc
push
xchg
jb
jl
cdq
mov
push
aaa
and
mov
scas
xor
(bad)
fdiv
xchg
(bad)
push
and
fldenv
out
call
scas
stos
jg
jmp
cmp
push
shl
push
call
outs
ds
popf
repnz
adc
das
xchg
jnp
test
enter
push
shr
mov
pop
jb
and
push
les
nop
shr
imul
dec
out
mov
pop
jae
and
ins
data16
push
adc
ins
or
add
cmp
pop
aaa
(bad)
(bad)
push
push
sbb
or
xor
dec
jmp
sti
xchg
add
sub
sub
push
inc
add
or
dec
xor
inc
(bad)
sbb
ret
add
icebp
push
(bad)
retf
out
(bad)
sbb
jecxz
sbb
shl
sbb
pop
jl
enter
stc
test
mov
pop
pop
repz
sub
rcr
daa
jmp
lds
mov
add
int
in
fidiv
push
out
data16
jo
and
dec
mov
mov
pop
int
pop
fld
sbb
pop
ret
sub
push
pop
scas
inc
mov
push
jge
cdq
mov
shr
inc
pushf
push
adc
cmp
inc
lds
fcom
cmp
mov
fnstenv
movs
sbb
rcl
mov
push
fdiv
push
fstp
and
mov
xchg
ret
repnz
add
inc
in
stos
xor
mov
or
ss
sbb
mov
aad
adc
mov
pop
adc
mov
lock
push
jne
pop
pop
ficomp
mov
ret
and
sub
or
jae
cmp
adc
rol
aam
xor
mov
nop
lods
and
pop
adc
or
out
or
mov
in
xchg
jmp
dec
xchg
call
rol
cmp
pop
popf
pop
xchg
jmp
mov
ss
lds
cwde
jl
dec
pop
push
mov
and
cmp
jb
sbb
jb
mov
xchg
pop
out
push
xchg
shr
and
pop
out
lahf
retf
(bad)
dec
sbb
sbb
sbb
or
out
pop
add
jp
xor
mov
scas
outs
ror
(bad)
xlat
aas
xchg
inc
clc
(bad)
pop
int3
in
in
cmp
jo
(bad)
out
adc
xchg
retf
add
dec
call
(bad)
outs
jno
mov
sbb
into
loopne
mov
mov
add
jp
fisub
mov
xchg
cwde
aad
or
push
xchg
pop
or
sbb
sub
hlt
or
int3
jp
inc
enter
xchg
stc
test
cld
mov
fld
xor
sbb
xor
push
retf
aam
js
leave
pop
std
pop
fstp
stos
cmp
cld
push
xchg
fsubr
mov
(bad)
movs
xchg
push
movs
pop
in
hlt
fiadd
pop
imul
(bad)
cld
sar
aas
je
(bad)
jmp
lods
and
add
sub
loopne
stos
lock
mov
lock
ret
outs
sti
add
or
repnz
(bad)
out
jnp
clc
cdq
mov
bound
dec
and
imul
stc
pop
mov
fdivr
inc
or
aad
xchg
mov
inc
adc
in
int3
pushf
cmp
adc
mov
fst
adc
mov
imul
inc
mov
(bad)
pop
repz
pop
(bad)
or
push
ins
mov
dec
into
or
xor
aas
ja
jg
push
in
ja
mov
sahf
or
sub
pop
xor
dec
cwde
cmc
pop
xchg
xchg
xchg
into
movs
jo
into
inc
pop
or
loop
mov
in
jno
or
xchg
test
mov
mov
inc
nop
mov
xlat
push
pop
call
mov
shl
inc
leave
jmp
xchg
nop
les
fst
es
out
cmps
pop
fist
mov
mov
xor
mov
add
(bad)
es
push
jno
and
(bad)
es
xchg
mov
and
add
pop
pop
jle
jnp
idiv
inc
mov
fidivr
push
das
adc
enter
sub
sub
pop
(bad)
mov
dec
cmp
fldcw
ffree
sbb
and
fstp
fimul
ss
test
or
xor
mov
in
pop
xor
cwde
ins
xor
cmp
or
movs
mov
push
and
into
bound
dec
leave
jbe
ss
ret
not
or
addr16
dec
jno
daa
pop
jp
out
dec
imul
cdq
fldenv
mov
loop
pop
stc
jne
daa
adc
call
mov
rcr
ins
mov
cmp
movs
enter
or
out
ins
jne
xchg
sub
and
nop
sbb
ret
jp
loopne
jbe
loope
or
inc
mov
sbb
adc
inc
and
push
jbe
scas
movs
xor
push
and
ss
xchg
cmp
and
cld
push
call
test
int
scas
aas
push
(bad)
cmp
push
jns
mov
mov
das
lds
out
repz
popw
jle
jl
or
test
nop
in
jp
retf
cmps
mul
sub
xor
ret
mov
(bad)
xor
cmp
fwait
or
enter
enter
(bad)
cmc
jge
aam
cmp
scas
mov
add
add
mov
retf
into
nop
(bad)
dec
imul
push
aas
dec
jns
into
rcr
mov
xor
and
(bad)
push
push
cmp
inc
in
into
jno
adc
or
popa
mov
dec
sbb
mov
adc
pop
test
das
mov
push
and
or
dec
sahf
in
xchg
nop
push
pop
and
sahf
and
imul
jbe
mov
add
push
cmp
enter
(bad)
sbb
jge
xor
inc
(bad)
xor
sbb
loopne
and
jo
loop
mov
mul
call
cmp
sbb
inc
push
and
adc
mov
push
(bad)
sub
sahf
call
fadd
jae
add
sub
xor
ss
ficomp
and
(bad)
jp
je
sbb
nop
stc
pop
in
inc
push
push
sub
fwait
or
cmps
les
fcmovu
xor
xchg
retf
sub
js
rol
sar
sub
(bad)
fld
int3
fsubrp
pop
inc
and
mov
add
mov
and
popa
mov
inc
fadd
and
push
dec
xchg
repz
hlt
int3
pop
out
cli
jnp
(bad)
or
and
(bad)
push
leave
iret
les
mov
mov
fcomi
ret
jo
leave
or
mov
xor
xor
sbb
out
es
int
or
mov
enter
mov
mov
pop
cmp
ret
(bad)
pop
rcr
jns
stos
les
xor
jns
mov
push
and
ret
enter
and
xchg
inc
sub
in
stc
leave
mov
xchg
cwde
mov
mov
ret
fcom
cmp
(bad)
xlat
fidivr
mov
dec
retf
sbb
add
scas
pop
jle
popf
or
fbld
mov
pop
jne
pop
test
pop
(bad)
mov
in
into
pop
jmp
cdq
xor
cmp
jo
xchg
(bad)
pop
icebp
dec
mov
rcl
stos
push
loopne
mov
stos
and
push
stos
push
inc
pop
cdq
shl
sti
jno
nop
inc
fldenv
cld
aas
addr16
ins
cdq
es
sub
hlt
pop
imul
fidivr
test
push
or
cmps
add
cwde
pop
sub
imul
cmp
repnz
sbb
jae
mov
xlat
clc
mov
sbb
cs
leave
mov
imul
inc
xchg
lsl
outs
xor
push
fcmovnu
mov
sub
test
inc
sar
xor
cld
mov
ret
loopne
and
clc
pop
pop
add
jnp
test
mov
push
rcl
shl
loopne
(bad)
leave
inc
test
jb
call
push
repz
hlt
fnsave
in
outs
or
cwde
popf
xchg
ds
and
push
sbb
pop
push
adc
call
mov
bound
retf
or
or
in
add
ret
loope
les
inc
rcl
mov
inc
sub
mov
iret
loope
add
sbb
aas
xchg
add
std
pop
cdq
or
xor
leave
add
ins
and
push
and
xlat
popf
rcl
and
sub
mov
and
les
leave
fild
and
ds
inc
inc
ins
cmp
pop
sar
jp
in
adc
push
outs
test
mov
cwde
cwde
nop
int
xchg
and
stos
push
xchg
jnp
mov
or
aas
es
mov
popf
mov
cdq
xchg
sbb
sub
(bad)
(bad)
scas
add
loopne
imul
jle
jle
nop
cs
dec
shr
cmps
stos
and
sahf
and
adc
mov
push
in
push
shr
mov
pop
jae
bound
loopne
mov
inc
and
outs
clc
in
mov
xor
loopne
dec
xor
pop
repnz
aaa
popf
enter
sbb
cmp
clc
push
and
arpl
outs
or
into
pop
pop
cmp
jle
inc
or
sub
bound
(bad)
cli
sub
nop
retf
in
pop
cmps
add
add
js
cdq
mov
sbb
mov
repz
pushf
mov
add
movs
pusha
cs
mov
inc
pop
mov
addr16
push
aas
out
fidivr
rol
aas
stos
pushf
loopne
inc
adc
add
test
sbb
aaa
inc
pop
mov
jl
xor
inc
xor
mov
xor
xchg
sbb
call
push
push
int3
mov
cmp
or
adc
mov
test
aas
push
dec
dec
int3
add
xlat
fadd
dec
mov
inc
outs
pop
add
fsub
jo
rcl
ret
and
xchg
das
sbb
(bad)
scas
sbb
and
push
push
mov
loopne
dec
push
imul
das
bound
loopne
sub
int3
into
ror
test
mov
and
mov
jb
sbb
dec
jmp
inc
fstp
inc
xlat
adc
push
mov
jbe
fcomp
adc
sub
sub
aaa
cmp
dec
jno
xlat
ror
outs
les
push
ret
clc
es
rcl
stc
jg
and
jle
jmp
dec
pop
adc
push
mov
mov
lahf
push
nop
sbb
sub
mov
push
das
sbb
int
adc
add
out
mov
mov
fisttp
ret
sub
nop
int
dec
(bad)
icebp
sbb
mov
cmp
aad
retf
lock
mov
pop
mov
rcl
add
pop
and
in
(bad)
mov
push
xlat
pop
jb
jmp
and
pop
call
out
out
jle
into
or
and
add
xchg
fisubr
inc
push
loopne
push
xchg
lea
xor
bound
xchg
jge
jae
call
cld
push
sub
movs
or
addr16
and
sbb
imul
cmp
aad
scas
cmp
jne
in
mov
ins
sub
nop
in
push
sbb
jne
mov
cmp
aas
dec
cmps
jns
sbb
cmp
sbb
sub
cs
int3
(bad)
into
int3
jmp
shl
sub
jmp
mov
(bad)
adc
dec
adc
das
dec
retf
das
jg
sbb
enter
int3
jl
add
xor
or
or
daa
js
push
push
inc
cmp
sub
in
mov
inc
pusha
(bad)
and
mov
mov
xlat
fst
jmp
xor
fistp
adc
imul
daa
cwde
mov
sub
mov
and
mov
jl
add
pop
lea
je
pusha
sub
xor
jmp
imul
sbb
or
test
mov
cmp
fcomip
imul
das
jno
fnstcw
sahf
ins
or
ins
sub
and
(bad)
and
and
pop
(bad)
xlat
pop
sbb
cmp
pop
sbb
ins
inc
add
jg
out
sbb
mov
mov
sub
das
jp
fisub
pop
cwde
js
test
sti
hlt
clc
shl
adc
cmps
and
fwait
(bad)
movs
hlt
mov
dec
jg
jns
adc
xlat
rol
enter
jno
add
cmp
pop
ja
retf
sub
sbb
push
minps
test
push
jmp
cs
dec
xchg
aas
jae
movd
sahf
mov
rol
in
and
aam
push
mov
test
push
push
loopne
xor
in
rcl
or
ins
les
retf
xchg
fcmovbe
into
sbb
clc
mov
jl
mov
jmp
jbe
dec
pop
xchg
retf
add
cmp
(bad)
sbb
rol
push
pop
xlat
lods
cmc
lea
mov
inc
adc
jo
ins
aaa
mov
jmp
xchg
push
idiv
pop
sub
mov
xchg
bnd
shr
int
je
loope
push
iret
jg
(bad)
or
stos
sub
icebp
cmp
movs
sub
add
fisubr
cmp
xor
push
adc
inc
sbb
fdivr
pop
or
ficomp
pop
ja
pop
or
jne
test
sbb
push
out
adc
inc
daa
sbb
pop
pop
pop
out
ins
xor
into
call
das
pop
push
(bad)
push
jne
add
fsub
jne
xor
jle
or
adc
dec
cmp
dec
xor
aad
inc
and
jmp
jmp
fld
cmp
mov
cmp
xor
mov
mov
adc
mov
add
mov
call
shl
and
lea
lahf
add
sbb
pop
into
jb
shl
or
dec
xor
retf
hlt
mov
adc
dec
inc
das
retf
lods
lods
aam
mov
mov
xchg
enter
push
leave
inc
lock
jmp
pushf
inc
or
add
push
adc
adc
jb
xor
lahf
dec
push
jmp
ja
es
xor
fidiv
mov
dec
in
aad
add
jne
add
sar
in
push
call
jp
shl
jle
call
adc
jae
push
int3
dec
lds
or
xor
adc
lahf
push
idiv
in
(bad)
cmp
into
(bad)
aaa
or
or
jnp
call
pop
add
pop
xor
push
mov
cdq
mov
pusha
jns
nop
cmp
into
sti
pop
sub
and
xor
data16
lds
inc
push
cmp
sbb
sub
(bad)
in
iret
fisub
enter
add
push
not
into
movs
cmp
scas
and
sub
and
js
shl
or
les
inc
sbb
cmp
pusha
xchg
push
inc
into
pop
jno
(bad)
push
(bad)
in
jp
in
aas
in
adc
aaa
xchg
xor
inc
cwde
pop
jb
pop
aas
std
xchg
lods
jle
and
(bad)
dec
shl
aam
pop
aam
in
xchg
sub
jl
sti
cs
ficom
dec
dec
jno
loope
mov
test
or
inc
loopne
mov
iret
inc
pop
popf
dec
fcomp
jno
and
dec
add
shr
mov
ins
pushf
push
scas
dec
and
and
and
or
inc
lock
ja
dec
fsub
push
and
cmp
imul
and
fwait
sti
loopne
and
xchg
push
adc
push
sub
xor
ins
ret
in
push
xchg
mov
retf
mov
aam
pop
shl
sub
das
dec
add
fwait
xlat
fnstsw
ss
sub
cwde
add
sub
add
sahf
push
mov
ss
cmp
or
jge
push
gs
sbb
push
test
sbb
loopne
pop
push
test
repnz
fld
push
and
lahf
push
cmp
test
aaa
jmp
std
fidiv
enter
jecxz
mov
and
ins
push
pushf
jg
cmps
add
or
pop
ffree
ins
pop
pop
jno
xlat
mov
ret
mov
fld
inc
pop
sub
adc
xchg
mov
and
xor
int3
loopne
retf
sub
aam
sub
push
cmp
push
js
jp
ins
retf
sbb
xchg
aad
bound
(bad)
mov
pop
jle
pop
xchg
cmp
(bad)
push
cmps
jo
pop
xor
xchg
(bad)
or
xor
fbstp
ror
mov
je
iret
in
push
sub
fidivr
mov
cmovs
fwait
test
loopne
enter
xor
gs
daa
lock
cmps
gs
das
sbb
shl
clc
test
inc
pop
jbe
xchg
mov
stos
cmp
sbb
cli
push
jp
cld
xor
or
jno
xor
popa
shl
mov
pop
leave
leave
or
xlat
pop
pop
xchg
cmp
push
mov
sub
add
add
ss
mov
push
xchg
mov
in
sbb
inc
int3
xchg
jmp
push
ret
jg
sbb
addr16
jp
scas
aas
xor
xchg
out
adc
xchg
jns
ss
bound
xor
loop
mov
push
(bad)
push
and
ss
mov
and
dec
stos
pop
dec
xor
xor
or
mov
mov
fist
shl
cmps
inc
in
jg
and
shr
push
jb
jo
clc
mov
fisubr
inc
cmp
push
push
push
mov
lea
cs
scas
jp
scas
call
dec
push
out
push
call
shr
(bad)
enter
xor
retw
leave
movs
jmp
ins
jno
mov
xor
xchg
ficomp
sub
cli
push
in
xchg
xchg
xor
add
cmp
test
mov
inc
out
or
fild
ins
sub
mov
inc
not
sub
addr16
iret
xchg
gs
push
pop
mov
imul
mov
xor
jb
pop
stos
mov
pop
push
cmp
(bad)
in
xchg
adc
cmc
nop
in
push
idiv
sbb
ja
add
adc
lods
push
pop
fldenv
imul
xchg
dec
punpckhbw
dec
xchg
out
pop
sti
xchg
or
nop
int
sub
jnp
daa
mov
ss
xor
or
ins
xor
call
push
fs
pop
fld
pop
xchg
es
in
add
xlat
enter
lea
in
test
push
push
cmp
lds
mov
sbb
jg
jmp
mov
cs
cmc
cmp
loopne
ja
inc
push
daa
ins
xor
pop
fistp
mov
call
jne
cmp
dec
pushf
imul
pop
sub
mov
cmc
xlat
pop
mov
pop
or
icebp
aaa
inc
in
aaa
cmp
add
push
push
mov
dec
push
rcr
dec
dec
mov
pop
cmc
xchg
mov
sub
test
push
int
inc
or
dec
dec
(bad)
retf
inc
push
sub
iret
ins
add
(bad)
fistp
cli
sbb
adc
ss
xor
sbb
push
das
fcmovu
ficomp
cdq
lahf
and
xor
js
pop
data16
cmp
inc
mov
xor
mov
fldcw
dec
mov
jp
(bad)
or
mov
mov
retf
ins
outs
sbb
inc
pop
ror
pop
pop
js
outs
sub
sbb
mov
repnz
(bad)
push
das
loopne
mov
(bad)
mov
push
cld
dec
pop
imul
ja
mov
movs
into
pop
daa
adc
cmps
movs
push
mov
aaa
mov
xor
call
rol
pop
adc
ficom
fdivr
fcomp
xor
push
jbe
mov
mov
test
add
cld
and
jp
pop
or
movs
cwde
aad
fild
adc
pop
lock
xor
jecxz
jp
jg
cdq
or
out
movs
xor
push
lock
or
pop
jb
or
mov
pop
pop
and
push
mov
and
out
imul
add
mov
cdq
fwait
mov
dec
add
ror
and
das
adc
xor
rcl
out
pop
mov
loopne
mov
pop
inc
inc
ror
call
out
test
fs
out
cdq
int
retf
pop
and
sahf
(bad)
cli
pop
mov
daa
call
or
pop
jmp
repnz
retf
and
add
push
rcl
or
mov
sbb
push
test
mov
jo
scas
scas
or
(bad)
stos
aas
sbb
push
dec
add
jge
jae
(bad)
aas
inc
mov
pop
add
mov
mul
hlt
jb
stc
cli
mov
pextrw
and
arpl
xor
xchg
fld
xchg
push
cmp
and
outs
xchg
aam
stos
xchg
les
jmp
enter
es
pop
or
dec
cwde
call
retf
add
sub
or
in
add
and
adc
pop
ficomp
lods
into
add
cmp
daa
imul
push
pop
fld
lods
mov
jmp
sti
sbb
xchg
idiv
ins
pop
inc
jp
and
ins
repnz
mov
imul
dec
mov
(bad)
xor
xor
add
in
outs
iret
mov
rcr
lea
dec
sahf
cmp
pop
adc
inc
pop
sub
ins
movs
push
inc
fcom
cmp
cmp
or
shl
jp
xor
pusha
sub
mov
movs
repz
jmp
fiadd
movs
stc
inc
xor
jl
int3
int
sub
mov
popf
mov
add
cmp
and
sbb
inc
mov
pop
sbb
enter
(bad)
xchg
and
(bad)
push
sub
rcl
pop
cmpps
inc
fistp
lds
ins
out
sbb
jno
ds
jmp
mov
adc
push
mov
pop
add
test
inc
stos
lds
js
or
cli
xchg
pop
push
inc
sub
(bad)
or
jb
loopne
hlt
add
push
push
leave
cmp
ins
fsubr
or
push
fistp
jne
push
mov
jmp
xchg
push
jecxz
cmp
fnstenv
in
pop
rol
mov
in
xchg
ret
pop
pop
movs
fmul
sahf
xlat
push
jle
jb
aam
gs
push
xor
add
mov
shr
aad
sub
inc
les
xor
add
sbb
sar
pop
loopne
in
add
cli
ffree
or
pop
mov
call
mov
and
call
mov
out
cmp
ds
xchg
cwde
aas
test
lods
cmp
cmp
mov
dec
in
clc
pop
add
lea
icebp
adc
dec
mov
xor
mov
jl
les
in
(bad)
and
push
mov
(bad)
and
fidivr
push
cmps
loope
mov
mov
addr16
pop
les
out
xchg
and
xchg
into
enter
mov
mov
mov
adc
(bad)
aad
cmp
iret
sub
enter
and
rcr
add
xchg
cmp
dec
mov
push
xchg
cmp
jns
and
cdq
das
dec
les
fs
cmp
pop
and
inc
xor
inc
fldcw
add
push
addr16
data16
cmp
sub
les
jno
mov
adc
aam
mov
fimul
adc
dec
dec
push
fnstsw
out
or
adc
imul
cmp
imul
jns
add
retf
adc
jb
ins
sub
sbb
imul
mov
jl
xchg
xchg
adc
sbb
and
mov
inc
sub
xor
jno
rcr
inc
pop
mov
xchg
pop
jnp
xor
aam
sbb
xor
xchg
xor
push
movs
sbb
pop
cmp
add
lea
sub
fcmovbe
aas
lods
push
mov
mov
pop
jne
or
into
and
xor
ret
adc
push
pop
pop
and
bound
push
aas
les
aad
xor
jp
repnz
add
mov
xlat
push
cld
mov
lock
lahf
push
stos
xchg
ins
mov
enter
jecxz
rol
daa
mov
int
ret
adc
xor
xor
cmp
add
les
pop
in
loop
dec
or
stc
sub
lds
or
fadd
adc
dec
mov
lock
pop
ret
shl
out
stc
sahf
pop
xchg
jg
retf
stos
jbe
jb
push
loopne
cmp
pop
adc
jo
mov
outs
ret
data16
bnd
adc
push
inc
scas
repnz
and
into
xchg
out
inc
add
jp
mov
test
jo
inc
pop
jns
and
or
int
test
mov
jne
xor
sbb
(bad)
sub
scas
(bad)
rcr
pushf
(bad)
out
inc
cmp
or
xchg
jae
jl
int3
fld
aad
fdiv
jmp
ud2
xor
and
imul
(bad)
or
push
xlat
fnsave
adc
ficom
mov
sub
call
mov
push
cwde
test
pop
js
mov
pop
mov
iret
cmps
les
push
cmp
rcl
mov
gs
push
jo
enter
jmp
test
jo
jbe
loopne
sub
lock
xchg
dec
and
jmp
or
or
jb
out
xor
xchg
(bad)
mov
mov
jns
xor
inc
int3
or
pop
cmp
cli
or
or
push
mov
inc
xchg
sbb
jno
sbb
push
aaa
test
push
xor
or
cmp
pop
and
mov
push
fild
mov
aas
fnstsw
out
push
xlat
mov
ret
push
push
sahf
and
lock
loope
xor
sub
pushf
sub
jmp
in
stc
iret
pop
jl
inc
repz
or
lds
xor
(bad)
ficom
js
(bad)
outs
mov
inc
inc
sub
enter
push
sbb
in
ret
mov
mov
bound
fiadd
xor
pop
inc
cmp
ins
or
out
dec
cmp
add
mov
pop
nop
xor
adc
ss
int3
push
and
mov
outs
or
adc
mov
xchg
sar
shl
lods
lea
adc
arpl
xor
(bad)
mov
adc
aad
fcmovu
jo
sbb
pop
sub
rcl
mov
cmp
fld
je
and
in
add
icebp
and
ret
mov
cmp
out
jp
pop
clc
int3
sub
jle
xchg
jno
test
cmp
jbe
cmps
popf
sub
into
shr
and
fucomp
ins
cmp
sub
lods
add
adc
(bad)
dec
and
scas
mov
lds
pop
or
loopne
xor
cwde
push
enter
sub
push
mov
in
jmp
scas
xor
(bad)
les
push
cmc
jmp
shl
xor
shr
push
push
loopne
mov
sahf
das
mov
xor
scas
fisub
imul
adc
test
cmp
add
sub
popa
push
push
or
xchg
pop
pop
dec
test
fmul
jb
sub
push
xor
or
push
or
xchg
aas
sub
retf
fnstcw
ror
fs
add
mov
inc
mov
neg
or
inc
sbb
movs
or
xchg
sub
xor
xor
xor
xchg
mov
in
or
xor
jb
in
adc
dec
pop
xor
call
call
xchg
and
test
stos
pop
imul
jae
fdivr
mov
movs
ins
pop
fild
int3
in
fiadd
or
pop
gs
sub
cmp
pushf
jle
push
aam
add
gs
loopne
int3
fadd
jbe
(bad)
ror
adc
xchg
call
xor
sub
loopne
dec
pop
push
into
fisttp
enter
jmp
mov
inc
mov
push
and
test
xchg
dec
jecxz
repnz
jp
and
xor
bswap
repnz
jae
je
out
les
cdq
dec
xor
sbb
clc
les
mov
mov
dec
in
int3
movs
pop
and
enter
cmps
and
and
jmp
mov
xor
pop
xchg
xchg
jle
imul
imul
ss
push
push
jae
ret
xlat
push
adc
ins
xor
inc
cs
sbb
cmps
ffree
pop
mov
mov
adc
ss
cmp
inc
or
cmp
out
sar
adc
or
leave
cmp
add
and
lea
loopne
or
add
sub
aam
sub
mov
dec
dec
dec
xchg
sbb
lods
rcr
and
fimul
or
sub
adc
loopne
mov
je
pop
jg
fsub
pop
enter
inc
add
adc
xchg
jg
cmp
psubb
sub
fsubr
retf
mov
cmps
cdq
add
add
int3
add
dec
pop
xor
pop
call
sbb
ss
push
dec
daa
shr
jbe
lods
mov
je
dec
sbb
mov
mov
int3
jg
cld
mov
into
push
sub
sbb
xor
loopne
sar
fbld
sbb
mov
dec
xchg
or
inc
mov
daa
jmp
loopne
sub
and
pop
xor
inc
fwait
mov
fidiv
stc
xlat
dec
sub
cmp
dec
inc
jne
mov
jle
ins
jl
dec
(bad)
hlt
outs
mov
ds
or
xchg
cmp
cmp
cmp
mov
enter
sahf
mov
xor
push
adc
sub
xor
xchg
mov
pop
mov
ins
inc
rcl
sub
int3
dec
add
test
fisubr
inc
push
fmul
fld
adc
xor
ja
push
std
outs
or
cmp
xchg
and
sbb
xor
nop
jo
es
in
enter
cmp
dec
cmp
mov
in
sub
or
or
bound
inc
sbb
add
inc
add
dec
ss
fdiv
push
add
shr
dec
daa
push
iret
push
fld
mov
push
add
mov
or
je
cmp
ret
jle
sub
iret
sub
in
adc
call
or
in
adc
ja
gs
clc
ss
xor
das
cmp
retf
movs
enter
and
jbe
scas
mov
jne
test
add
xchg
jge
dec
adc
fisttp
jbe
ds
jb
scas
and
jecxz
pop
fisttp
mov
inc
push
pop
shr
sub
sbb
(bad)
(bad)
jns
fst
adc
dec
and
mov
sahf
into
ins
push
bswap
ins
ins
dec
cmp
or
or
mov
adc
out
dec
xor
int3
imul
pop
and
pop
jns
jnp
mov
mov
pop
or
mov
xor
mov
loopne
in
test
and
lods
scas
rcl
jp
into
enter
(bad)
cmp
test
outs
xchg
mov
sbb
cmp
shl
sub
sbb
mov
imul
and
jp
xchg
jae
mov
sub
xchg
sbb
inc
mov
or
hlt
out
cmps
mov
and
xchg
and
(bad)
sub
ins
ja
fld
or
adc
scas
je
movs
jb
movs
es
loopne
shr
mov
gs
and
lahf
(bad)
popf
ret
aam
add
rep
and
(bad)
cmp
adc
jle
pop
and
retf
sar
mov
xchg
cmp
pop
enter
jno
data16
movs
cmp
pop
sub
xor
xchg
int3
sbb
push
jnp
add
mov
pop
push
sub
call
push
pop
inc
add
or
fiadd
pusha
push
(bad)
popf
jle
xor
add
ja
hlt
push
sahf
xor
jo
jp
xor
das
and
cmp
jne
jl
mov
aaa
and
int3
in
mov
push
iret
sub
(bad)
push
dec
les
ror
ins
out
push
in
or
add
into
aam
leave
aad
jecxz
in
push
(bad)
xor
cmp
cmp
pop
jmp
into
jae
lahf
add
sbb
daa
out
xor
ss
cmp
jbe
mov
inc
push
fsub
mov
test
push
test
in
jle
mov
cmp
lahf
and
add
(bad)
(bad)
inc
sbb
sbb
scas
xlat
mov
cdq
inc
sahf
cmp
fdivr
les
ret
add
ret
adc
pushf
pop
shl
sbb
mov
xlat
int3
mov
adc
std
xlat
and
mov
xor
mov
push
je
mov
mov
out
and
sub
sub
adc
adc
int3
cld
inc
or
xor
cmp
cmps
loop
add
adc
jmp
cmp
pop
sbb
ret
inc
push
in
fst
icebp
pop
dec
inc
inc
into
xchg
out
push
movs
jmp
in
adc
aad
push
pop
mov
sub
ret
arpl
and
fcomp
and
jge
scas
fldcw
loope
mov
xor
xor
adc
dec
cmp
mov
push
cmc
out
push
sahf
retf
dec
and
push
out
jnp
rcr
jecxz
push
retf
jle
stc
inc
or
stos
das
mov
ss
js
and
adc
into
or
add
cmp
test
inc
pop
ja
inc
shl
jbe
loopne
lods
push
shl
push
cmp
jns
ror
inc
sbb
jge
movs
add
add
leave
or
outs
dec
add
jae
imul
xor
cmps
shl
or
mov
(bad)
nop
dec
fwait
(bad)
stc
inc
es
sahf
pop
(bad)
and
sub
add
dec
and
popa
jle
pop
mov
test
in
inc
mov
imul
(bad)
(bad)
jns
(bad)
dec
sti
aas
int
mov
div
shr
add
sar
ss
out
push
int3
fucomp
and
mov
cmp
cmp
leave
inc
lods
jae
fsub
(bad)
and
jmp
ret
xor
jl
push
loop
add
mov
sub
sub
aaa
xchg
and
fsubr
xor
inc
(bad)
ins
fdiv
cld
or
sahf
int3
ins
sbb
jnp
sar
or
call
xchg
and
mov
loope
cmp
dec
(bad)
sbb
fistp
es
fidiv
pop
lods
and
xlat
push
jg
ss
lds
pushf
dec
cmp
mov
xor
pop
ins
sub
mov
pop
xchg
sub
loopne
pop
xchg
ss
jge
imul
sbb
je
dec
jb
es
xchg
icebp
das
cmp
adc
jne
(bad)
xlat
xchg
pop
xor
mov
and
sub
(bad)
push
pop
sar
mov
cwde
cld
or
xchg
xor
jecxz
jg
cmp
stos
popf
add
loopne
jb
ss
jb
lods
(bad)
cmp
cdq
or
add
xlat
cwde
cwde
and
sbb
repz
into
aaa
adc
shr
loopne
pop
xor
add
ret
outs
shr
xchg
cmp
xchg
fidiv
and
call
loop
and
cli
ret
cld
mov
loope
aas
mov
xchg
or
sbb
lods
stc
pop
cs
add
test
sub
or
xor
jecxz
sbb
xor
clc
pop
aaa
sub
nop
pop
movs
or
(bad)
fsubr
and
fstp
lea
out
imul
fimul
rcr
jb
mov
stos
ret
clc
test
xor
test
test
or
cs
xor
ror
push
test
jg
int3
dec
retf
(bad)
mov
sbb
fisubr
sub
cmp
aam
push
aam
sub
outs
jbe
sub
push
sbb
cmp
(bad)
jge
pop
popa
xor
pop
add
aas
cmp
out
sbb
fidivr
and
sbb
rcl
sbb
dec
jle
push
and
pop
in
data16
and
pushf
scas
adc
cld
cmp
es
lds
sbb
aad
popf
sbb
test
inc
sbb
sub
and
ds
fdivr
in
stos
cmc
xlat
sub
mov
sub
(bad)
pop
imul
pop
lods
push
adc
ja
fs
mov
aas
add
jbe
(bad)
jp
popf
sti
rol
and
dec
ds
loopne
add
movs
fidivr
call
push
scas
inc
sbb
or
or
add
hlt
xor
adc
mov
test
outs
outs
sar
jae
xchg
add
mov
jg
fucom
add
add
inc
je
rcl
add
mov
sub
inc
loope
sbb
popa
and
xchg
xor
cmps
cmp
push
ror
scas
mov
shl
mov
in
xchg
push
and
call
movsx
test
imul
lds
jp
pop
push
mov
dec
add
xor
xlat
add
jns
aad
xchg
jo
test
icebp
inc
shl
jle
inc
imul
inc
pushf
enter
xor
dec
aas
or
add
dec
vmwrite
into
cmps
(bad)
rcl
loopne
cmp
jbe
in
(bad)
ja
data16
or
mov
sub
jl
dec
and
mov
or
fbld
sbb
rol
inc
inc
ret
in
and
jb
imul
push
pusha
xor
or
in
jns
ds
clc
int3
push
fadd
imul
adc
mov
dec
mov
ds
sbb
imul
xor
push
xchg
xor
sub
mov
cmp
push
fldcw
(bad)
loopne
push
imul
imul
and
cld
pop
adc
pop
pop
not
inc
add
adc
jp
ins
lds
test
pop
or
in
sub
das
in
nop/reserved
rcr
fiadd
adc
adc
fisubr
fsub
and
into
pop
fld
in
int
neg
jge
jb
mov
ror
movs
imul
pop
mov
and
xchg
std
adc
inc
cmp
std
(bad)
jmp
sti
jp
push
cmps
xor
popf
lds
loopne
sub
sub
mov
pop
in
inc
cmp
inc
cmp
pop
add
jl
or
xor
pop
mov
movs
aaa
inc
repnz
adc
cmc
sub
pop
loope
dec
sbb
push
aas
add
fwait
call
mov
jmp
cwde
dec
cmp
push
adc
cld
and
cmp
ret
ret
fs
je
fistp
dec
xchg
in
cld
mov
add
aaa
iret
into
inc
(bad)
mov
inc
movs
test
dec
loop
sar
into
sub
inc
mov
loopne
xchg
imul
or
sub
jge
leave
push
or
dec
add
add
test
std
int3
scas
int
std
push
fmul
fstp
es
pop
and
sub
(bad)
ret
cmp
test
cmp
jno
cmp
and
test
or
jns
xor
test
xlat
cmp
in
sahf
daa
lock
xor
push
retf
adc
(bad)
test
outs
sub
mov
xchg
and
mov
popf
leave
call
xor
pop
sub
and
push
fsubrp
dec
movs
std
inc
mov
sbb
sbb
cmps
sub
aad
lahf
jo
inc
xor
add
outs
push
xor
adc
stos
jns
adc
test
in
pop
mov
sub
push
inc
pop
mov
int
call
jae
outs
movd
outs
mov
xor
cmp
push
push
enter
sub
popf
push
cld
cwde
retf
dec
push
mov
imul
add
mov
xor
sahf
retf
or
push
mov
daa
cdq
retf
dec
and
dec
push
pop
sub
aam
cmp
push
or
and
xor
into
mov
cmp
jbe
dec
mov
adc
push
fcom
xchg
jg
iret
pop
out
nop
(bad)
add
pop
retf
and
clc
or
or
inc
inc
mov
addr16
lahf
int3
xor
push
and
out
pop
pop
ret
and
dec
jp
jae
aas
xor
pop
lods
or
fld
daa
shl
pop
add
inc
inc
sbb
add
and
xor
inc
xchg
xor
dec
test
add
mov
int
repz
dec
cs
ins
not
jle
inc
aas
rcl
mov
xor
fistp
push
sub
stos
mov
loopne
cmp
ret
push
adc
ror
inc
iret
jae
sbb
jecxz
pop
fisubr
sbb
enter
and
call
cmp
add
sub
outs
sbb
dec
or
pusha
mov
rcr
xor
div
sub
jo
scas
scas
inc
and
and
(bad)
cmp
call
add
nop
jmp
loopne
in
sub
out
adc
aad
test
jns
jno
into
mov
ins
cmp
test
jno
in
js
call
fld
das
(bad)
or
shr
std
inc
inc
mov
(bad)
(bad)
out
mov
pushf
cli
ins
pop
(bad)
loopne
push
push
cmps
jno
jle
aam
mov
dec
or
add
and
cmp
sar
loope
neg
cmp
inc
pusha
shr
add
dec
cmp
outs
jno
sbb
aaa
dec
sbb
add
jae
add
aas
inc
pop
add
hlt
mov
pushf
or
ret
xor
sub
(bad)
cmp
sbb
push
loopne
mov
push
out
es
mov
xchg
inc
fistp
jmp
pop
or
cmp
das
or
xor
in
mov
mov
aam
inc
sub
lahf
lock
cmps
lods
adc
sub
cmps
add
ss
sub
in
test
in
mov
repnz
add
dec
sub
mov
not
inc
cmp
out
js
fstp
fiadd
xchg
imul
mov
ret
jg
sub
mov
fild
mov
inc
xchg
push
lea
mov
mov
vmovss
pop
icebp
mov
cwde
enter
pop
popf
and
xchg
clc
cli
xchg
leave
push
add
iret
and
in
and
in
imul
adc
pop
mov
adc
add
mov
gs
inc
xor
inc
in
fnsave
int
and
ret
add
and
fidivr
add
jg
nop
ret
pop
or
cmps
jae
add
ins
jmp
loopne
cmps
cmp
and
push
xlat
enter
imul
fidivr
cmp
cli
and
and
xor
mov
cmp
add
cli
imul
inc
data16
(bad)
in
push
outs
pop
or
cmp
int
pop
lds
add
ins
fistp
inc
or
ret
jbe
pop
rcl
mov
call
ficom
hlt
cli
jbe
push
push
or
sbb
sar
mov
mov
es
aaa
dec
pop
jo
daa
mov
or
pop
mov
getsec
cmp
jns
jecxz
(bad)
and
and
int
jno
lahf
push
and
cmps
mov
(bad)
call
or
call
jg
shl
add
sahf
pop
mov
mov
int
leave
push
inc
xor
in
pop
dec
push
cdq
push
or
jno
jmp
xchg
rol
sti
dec
push
icebp
in
loopne
mov
jae
cs
cmp
fsub
dec
sbb
imul
ins
xor
sahf
imul
fwait
imul
mov
mov
pop
jb
push
and
and
xor
or
cmc
outs
int
fs
adc
fdivr
fnstcw
mov
mov
shr
and
pushf
rcl
(bad)
pop
sbb
and
retf
setno
inc
es
xor
ss
xor
xchg
sbb
pop
cmps
cmp
xchg
or
sbb
inc
add
dec
add
pop
or
(bad)
(bad)
mov
inc
push
sbb
inc
jl
pop
stos
aas
push
cld
push
mov
int3
jns
fdiv
mov
pushf
push
mov
pop
cdq
hlt
dec
(bad)
xlat
movs
iret
push
xor
inc
int3
ja
rcr
fadd
repnz
outs
sub
and
test
mov
jbe
xor
inc
loop
pop
inc
loopne
or
dec
mov
jle
jb
jle
(bad)
shr
jge
outs
jns
rcl
or
or
loop
or
ds
adc
inc
or
or
or
sahf
xor
call
xor
push
pop
cli
jecxz
cvtdq2ps
lods
jmp
sub
sub
xor
std
fnsave
sahf
add
mov
mov
and
push
xor
test
mov
mov
cwde
imul
iret
dec
inc
mov
das
test
pop
and
or
pop
push
pinsrw
cli
mov
cmc
ins
into
fist
pop
pop
cwde
cmp
sti
(bad)
jae
les
sbb
push
and
sbb
into
push
inc
popa
jns
xchg
int3
jno
push
pop
push
and
or
outs
fisub
out
sbb
sbb
xchg
inc
jo
adc
push
pop
ret
sub
(bad)
aaa
(bad)
into
and
and
mov
jns
fistp
mov
cmp
lods
aam
int3
scas
push
shl
mov
pop
loopne
movs
daa
pop
aas
les
add
into
push
xor
test
sbb
adc
call
into
jae
xchg
xchg
sahf
push
sub
or
ds
out
mov
cmp
xchg
pop
push
add
outs
pop
push
cld
push
push
fnsave
or
push
sub
dec
push
fdivr
(bad)
xchg
pop
shr
enter
mov
sub
iret
xor
retf
movs
das
push
and
or
fst
shl
and
mov
in
out
loopne
jno
test
or
or
cmps
cmps
ins
in
sbb
(bad)
jmp
push
lea
cld
or
jnp
into
hlt
sub
(bad)
cli
(bad)
cmp
loopne
mov
int
fs
aaa
mov
ins
push
nop
sti
adc
push
xor
push
cmps
in
cmc
xor
mov
fisttp
and
push
ja
dec
push
dec
xor
cmp
jne
xchg
jp
sub
loopne
inc
add
scas
mov
pop
sbb
lock
in
xor
sub
sbb
dec
sti
sbb
mov
rcl
(bad)
cli
or
or
cmp
cmp
daa
pop
inc
stc
mov
cmp
dec
mov
xor
cmp
pushf
retf
jne
sar
in
aad
movs
jl
aad
fdiv
push
pusha
ja
adc
rcr
add
cmp
jno
mov
popf
enter
push
icebp
sub
push
mov
fdivr
loopne
jbe
mov
and
in
fst
in
mov
es
jo
or
loop
jg
jb
jb
add
sbb
inc
push
in
jno
mov
sbb
idiv
shl
dec
mov
mul
test
xor
dec
mov
jb
int3
sbb
ret
adc
ja
xlat
or
pop
xor
clc
sub
mov
mov
ins
dec
push
jae
pop
int
inc
into
cmp
jb
sub
add
jmp
xchg
shr
adc
ins
xor
sbb
xor
loope
sbb
clc
cmp
mov
add
cdq
inc
pop
fist
push
dec
or
xchg
shl
rcr
jb
movs
xchg
push
fisubr
push
mov
push
ins
aam
enter
mov
and
or
inc
push
pop
fiadd
ror
mov
xchg
popf
into
push
cs
xor
mov
fmul
lds
dec
fidivr
test
sub
pop
std
xlat
jg
not
add
or
sub
test
xor
mov
adc
mov
xor
or
ins
repz
ds
ror
pop
popf
loopne
mov
xchg
(bad)
sbb
mov
test
or
outs
jl
or
push
or
push
cmp
in
sub
xlat
lods
xchg
ins
retf
fdiv
pop
sub
inc
jno
fs
sbb
mov
xchg
leave
dec
scas
and
xchg
mov
pop
and
or
iret
cld
sbb
jmp
mov
in
sbb
sub
sbb
push
pop
ins
xor
rcl
or
pop
pop
push
ss
enter
(bad)
jge
shr
das
xor
cmp
enter
sub
into
pop
push
fiadd
sahf
inc
or
ficomp
das
repz
or
inc
mov
fdivr
jmp
ror
push
jno
add
lods
shl
add
loopne
jbe
jnp
xchg
fs
add
shl
into
pop
cmp
sbb
jb
fild
movs
cmps
dec
cdq
cmp
pushf
sahf
icebp
and
les
mov
mov
aad
push
iret
(bad)
sub
pop
sbb
and
lahf
xor
sti
xlat
adc
push
test
mov
sbb
out
add
arpl
or
leave
jo
repz
jne
dec
test
sub
aad
test
in
mov
aas
outs
call
pop
push
xor
or
retf
pop
push
int3
xchg
jge
mov
enter
mov
mov
pop
loopne
mov
sahf
xor
xor
jno
push
xchg
xlat
dec
loopne
test
xor
push
sub
pop
lds
add
sbb
push
pop
lods
loope
xchg
cmp
aas
push
inc
add
pop
int3
or
les
add
out
stc
into
push
stos
sub
int
lods
clc
xchg
or
mov
xchg
inc
(bad)
jecxz
into
out
daa
pop
ret
aam
in
or
sbb
jno
adc
xchg
mov
mov
int
adc
into
or
iret
push
add
xor
nop
xchg
dec
mov
adc
or
lods
jno
ins
or
neg
rol
daa
push
adc
or
push
mov
lods
popf
loope
inc
mov
das
mov
mov
data16
test
jbe
sub
pusha
cmc
movs
cld
inc
and
neg
pop
sbb
imul
int3
data16
cwde
sti
xor
fcomip
mov
in
ja
xchg
adc
or
jmp
sbb
jmp
inc
push
pop
fcomp
test
or
leave
inc
add
mov
add
sahf
cmp
ja
add
mov
or
mov
fwait
xchg
jb
jmp
ja
bound
imul
and
inc
test
xchg
cmp
ret
or
mov
out
mov
daa
fwait
int3
test
mov
push
dec
pop
or
xchg
mov
dec
jbe
pop
loope
cmp
dec
and
(bad)
push
and
test
add
cwde
xor
jo
mov
sub
mov
(bad)
out
add
pop
repz
adc
mov
call
lock
jecxz
xor
int
shr
ficom
pop
popf
shl
or
jnp
mov
clc
xor
pop
test
std
mov
push
push
xor
push
movs
shr
adc
mov
hlt
jne
sti
jo
fs
inc
stos
test
push
in
rol
sbb
mov
jno
test
xchg
xchg
nop
dec
and
add
sbb
add
movs
cmps
xchg
es
sar
mov
fsubr
and
pop
sar
ret
lea
adc
cld
sbb
loop
sub
ins
(bad)
mov
inc
inc
pop
ds
sbb
and
ins
arpl
(bad)
mov
pop
adc
mov
mov
sbb
int3
and
inc
ds
loop
leave
mov
cdq
imul
xchg
sbb
(bad)
mov
xor
inc
cdq
add
cmp
retf
jg
ja
adc
xchg
bound
sub
adc
jl
adc
inc
lds
cmp
in
fsub
call
popa
mov
lock
push
out
mov
inc
nop
int
mov
jg
bound
pop
(bad)
or
icebp
inc
add
and
adc
retf
cs
fisub
fdivr
scas
dec
push
es
sub
call
mov
cmp
cmp
dec
add
or
sbb
jb
loopne
jnp
pusha
out
cmp
pop
in
loopne
rep
mov
repnz
mov
out
popa
mov
xor
mov
mov
outs
jns
cs
add
mov
ffree
clc
arpl
jns
mov
mov
push
mov
push
sub
fdivp
pop
xor
jo
nop
ins
leave
dec
xchg
cmps
xchg
cmp
adc
cmp
mov
xor
jp
pop
jbe
les
and
cmp
enter
lds
jle
aad
xor
dec
iret
sub
pusha
xor
inc
imul
jecxz
inc
xchg
mov
add
mov
push
mov
xor
std
jns
scas
xor
jmp
call
push
jl
into
ss
dec
cmps
add
in
xchg
cmps
jecxz
dec
cld
daa
into
mov
cmps
or
cmps
and
mov
outs
jnp
repnz
mov
ror
sahf
loop
mov
leave
xor
jo
out
loopne
push
das
(bad)
or
ret
pop
imul
(bad)
and
mov
sahf
repnz
mov
int3
imul
jae
and
call
sbb
push
or
cmp
lahf
jo
mov
mov
dec
retf
enter
lds
sub
ins
add
ja
fst
sti
mov
or
ins
(bad)
imul
cmp
lock
aad
cmp
add
out
mov
mov
int
add
outs
ret
mov
or
fucomp
je
cmp
aaa
stos
(bad)
aad
mov
mov
xchg
clc
and
scas
pop
cli
fcomp
cmp
ss
rcl
outs
out
jae
jns
int3
aad
mov
pop
mov
add
(bad)
out
test
push
in
mov
out
dec
mov
mov
cmc
call
and
fldcw
sbb
rol
repz
cmp
ss
jmp
div
sar
cld
and
inc
jle
lea
fdiv
xchg
into
jnp
mov
sbb
ja
imul
jp
jb
mov
dec
sbb
xchg
ja
into
mov
mov
xchg
adc
fidivr
add
and
aaa
scas
inc
es
lock
lock
in
lahf
imul
or
rcr
test
add
fiadd
xchg
sbb
adc
mov
and
and
cmp
and
and
scas
pop
xlat
test
xchg
or
dec
movs
shl
add
mov
dec
int3
loopne
add
xor
shl
call
add
loopne
es
push
push
ins
dec
inc
fwait
cld
outs
cmp
xchg
sbb
popa
inc
sahf
adc
mov
popf
scas
cmp
int3
push
xchg
mov
adc
pop
mov
stc
push
leave
mov
xchg
test
stos
stos
push
cmp
iret
out
xor
stos
in
xchg
sub
adc
push
sub
push
jp
and
lock
dec
mov
loopne
dec
loopne
dec
xor
(bad)
cmp
pop
fisttp
pop
mov
shr
stc
sbb
das
fst
add
mov
push
push
or
js
es
mov
xor
iret
lds
rcl
xor
(bad)
jne
jne
gs
(bad)
enter
call
gs
sbb
ret
fld
nop
mov
xchg
and
into
cli
pop
imul
cmp
sub
retf
sbb
lock
into
enter
lea
popa
fnstcw
xchg
mov
(bad)
nop
xchg
hlt
and
or
repnz
add
sbb
mov
movs
sar
push
cld
lods
push
pop
dec
fdiv
or
jno
inc
adc
loopne
adc
xor
push
xchg
bound
xor
sar
sub
repz
xor
(bad)
les
(bad)
int
jg
retf
cmc
xor
or
fxch
enter
shl
add
push
daa
fcomp
xchg
adc
xlat
test
push
push
cmp
xor
mov
int3
sbb
cwde
push
retf
int
aam
retf
dec
xlat
shr
jae
(bad)
sbb
lahf
in
aad
xchg
movs
inc
pop
enter
stc
dec
(bad)
add
stos
in
xchg
sbb
mov
inc
loopne
lds
pop
jae
pop
adc
xlat
adc
leave
sbb
sub
je
or
jmp
fiadd
push
sub
leave
dec
dec
and
fcom
stos
sar
mov
dec
not
test
ins
or
inc
and
inc
mov
enter
add
and
dec
xchg
mov
push
mov
rcl
mov
adc
movs
fisubr
clc
cmp
add
lds
xor
fiadd
mov
jns
mov
test
shl
imul
rcr
retf
push
popf
or
int
sahf
add
ror
iret
mov
xor
jg
icebp
iret
dec
outs
ds
pop
mov
xlat
ja
jecxz
gs
mov
dec
inc
mov
mov
faddp
push
add
xchg
adc
int3
and
pop
adc
or
repz
add
out
rcr
gs
inc
push
addr16
stc
stc
inc
ss
and
jns
cmp
adc
pop
cmp
xchg
adc
sbb
ret
cmp
sbb
dec
inc
or
push
int3
cmp
stos
mov
mov
xor
push
jmp
dec
or
je
int3
xor
shr
(bad)
std
or
push
push
and
adc
cli
pop
sub
imul
or
fdiv
jo
mov
jbe
stos
mov
fcmovnbe
xor
idiv
dec
push
scas
dec
scas
ror
js
pop
jmp
mov
pusha
jp
add
or
das
movs
es
movs
adc
mul
ss
int
mov
sub
in
mov
cmp
jae
push
dec
push
and
xor
cmp
push
fld
inc
xor
jle
sub
es
ja
rcr
add
mov
in
aad
fidivr
fld
and
add
mov
or
(bad)
or
fadd
push
aad
mov
mov
imul
enter
aas
and
cs
ins
xchg
mov
cmp
sub
xchg
jbe
and
rol
mov
and
push
or
mov
ja
dec
mov
ds
es
cmp
cmp
mov
icebp
lds
cmovne
in
add
mov
add
xlat
fnstenv
jno
ret
cmp
push
mov
fidivr
or
stc
pop
add
xchg
outs
iret
test
add
add
or
adc
add
add
sbb
int3
daa
and
aas
fdiv
push
dec
and
movs
jae
call
stc
scas
xchg
fldenv
jmp
loopne
mov
fild
mov
retf
push
mov
jg
aam
add
jp
cmc
(bad)
loopne
iret
jmp
movs
arpl
not
(bad)
mov
aam
cmp
or
pop
out
in
enter
fild
sub
jae
sbb
fs
sub
push
pop
xor
ins
int
pop
inc
adc
call
les
cmp
enter
sahf
sbb
mov
enter
jmp
push
jo
and
push
ins
js
pop
xor
retf
push
xor
jg
inc
mov
int3
ret
jbe
lds
fwait
mov
ds
dec
mov
lock
ret
hlt
adc
push
mov
and
clc
xchg
mov
repnz
pushf
mov
add
mov
addr16
xchg
xor
pop
or
inc
sahf
adc
loopne
xchg
ror
ins
ret
mov
cmp
ins
test
rcr
mov
loope
push
mov
retf
inc
pop
sub
jae
into
cld
mov
mov
or
xor
push
in
dec
add
push
aaa
dec
mov
leave
ins
cmp
out
or
aam
and
icebp
or
push
xchg
stos
stc
mov
adc
outs
jns
mov
(bad)
aas
cld
and
fmul
cmp
ins
sub
test
pop
push
std
add
imul
and
fimul
arpl
or
pop
test
mov
ins
sahf
jl
pop
jbe
jb
push
jp
sahf
push
lds
lods
xlat
imul
hlt
call
fs
add
sub
in
mov
loopne
fisubr
cmc
jle
sbb
shl
in
rol
xor
vmovlps
adc
jle
adc
(bad)
rcl
pop
sbb
and
fadd
ins
inc
mov
and
xor
add
mov
pusha
push
inc
mov
dec
dec
dec
add
ja
leave
dec
(bad)
sahf
jb
push
pusha
cmp
cmp
ss
popf
xchg
push
into
dec
fistp
retf
jp
or
sub
add
inc
dec
jns
adc
or
xor
jns
fdiv
inc
or
pop
jb
dec
or
mov
jge
and
adc
pop
cmp
dec
cwde
outs
pop
mov
push
xor
jge
pop
jmp
test
stos
mov
jae
icebp
das
and
dec
sbb
test
pop
(bad)
enter
ja
xlat
pop
in
jmp
sar
inc
and
pop
dec
iret
vpmaxud
push
fsubr
jle
pop
adc
or
xlat
sub
stos
dec
lahf
adc
and
push
or
in
adc
fidiv
push
pushf
scas
cmps
nop
sbb
test
sahf
in
pop
push
retf
fwait
xchg
ins
in
aaa
lock
movs
in
daa
cmp
test
pop
cdq
mov
or
scas
in
sbb
xor
ss
push
or
lahf
mov
add
shr
(bad)
add
xor
sbb
adc
mov
cmp
pop
and
popa
fdiv
add
lock
loope
int3
push
imul
mov
xor
pop
popf
(bad)
sbb
dec
jae
add
sbb
mov
(bad)
loopne
aad
clc
xchg
xchg
cli
pop
lods
jle
add
xor
dec
sub
stc
shr
sub
mov
ins
xchg
or
lock
cmc
jno
adc
pop
pop
inc
cmp
std
leave
jmp
aas
xchg
popf
repz
jo
loop
scas
aam
clc
fidivr
movs
shr
and
cli
lods
mov
aad
(bad)
push
(bad)
mov
sahf
test
cld
push
fucomp
dec
adc
sahf
xor
not
das
mov
cs
xchg
or
int
mov
stos
pop
movs
retf
aad
dec
int3
inc
rcr
int3
inc
ret
movs
mov
clc
into
shr
mov
cwde
loopne
mov
lods
mov
outs
xlat
das
scas
ins
dec
inc
loope
test
sbb
mul
loop
and
xchg
cld
test
and
mov
sbb
fimul
mov
or
mov
aas
pop
test
imul
pop
aas
into
jb
jl
xchg
pop
out
and
pop
out
mov
mov
pop
push
icebp
inc
cmc
repz
mov
leave
pop
sahf
mov
test
dec
test
xor
sub
sahf
mov
scas
scas
retf
sub
int3
inc
inc
enter
dec
(bad)
xor
jmp
sbb
int
or
clc
enter
xor
lds
mov
pop
pushw
movs
call
cmp
inc
push
mov
and
outs
das
and
shl
dec
pop
fmulp
arpl
add
ds
in
call
jbe
and
jg
ds
pop
es
xchg
sbb
push
test
outs
mov
jb
iret
loop
mov
pop
stos
jle
jbe
call
sahf
pop
data16
loopne
in
mov
dec
sub
mov
test
(bad)
xchg
jp
(bad)
fld
test
ins
fistp
pop
(bad)
dec
call
data16
jo
adc
jg
dec
cdq
jb
xlat
cwde
in
adc
mov
cmp
mov
loop
jmp
fadd
push
xor
cs
test
outs
xor
and
mov
fld
loope
pop
inc
sub
rcr
mov
and
mov
pop
gs
retw
inc
adc
or
pop
mov
cmps
xor
cwde
outs
(bad)
and
rcr
icebp
in
push
mov
push
inc
or
fiadd
mov
sbb
sahf
adc
push
add
gs
mov
out
sbb
inc
mov
iret
repnz
xor
xchg
pushf
mov
getsec
sar
jo
sub
pop
jnp
repnz
out
lods
loopne
mov
and
cwde
adc
or
add
pop
popf
push
retf
icebp
adc
and
sar
imul
movs
push
dec
push
mov
imul
mov
fdiv
and
jne
push
shl
rcr
push
ins
or
xchg
xchg
in
pop
sbb
jge
add
inc
xor
push
jmp
inc
pop
out
jno
les
sub
push
rol
aam
jl
sbb
xor
cmp
or
add
mov
loopne
int
inc
retf
fwait
retf
mul
sub
lods
int3
pop
ins
pusha
xor
pop
aam
(bad)
retf
cmp
js
in
and
out
pop
stos
int
pop
cs
or
mov
outs
out
leave
push
and
cmc
aaa
jae
in
lds
enter
or
cmp
dec
shr
aaa
das
pop
fcmovb
pop
add
dec
sub
mul
or
sbb
and
adc
repnz
jmp
aam
into
sbb
iret
fcomp
cmp
push
jl
inc
ret
mov
ins
(bad)
repnz
pop
push
les
sti
push
inc
cmp
mov
dec
sbb
add
jae
push
inc
sbb
retf
inc
out
lahf
stc
mov
sub
shl
mov
xor
and
fild
jmp
shr
loopne
pop
jl
int3
aas
cmc
push
ins
stc
xor
lds
push
fist
add
adc
shl
mov
pop
fisttp
sbb
jbe
jno
daa
pop
sub
imul
dec
or
xor
cmp
inc
out
inc
rol
sub
inc
or
dec
cmp
iret
iret
(bad)
shl
pop
int
inc
cmp
xor
inc
sbb
stc
pop
cmp
adc
sub
shr
cmp
retf
mov
les
out
retf
pop
pop
ja
jp
aaa
sub
int
not
inc
sub
les
jmp
rol
loopne
push
push
popa
mov
xor
jmp
pop
mov
adc
sbb
push
out
fnsave
adc
in
sahf
and
cld
add
mov
cmp
push
sub
(bad)
lods
mov
outs
repnz
call
jecxz
xor
rcr
int
jbe
mov
icebp
or
mov
pop
(bad)
scas
push
xor
xor
in
mov
frstor
sahf
lock
pop
or
int
mov
shl
(bad)
mov
or
cs
push
std
dec
xor
icebp
dec
fs
xchg
lods
push
lea
push
sbb
js
add
and
inc
sbb
pusha
test
mov
sbb
mov
push
(bad)
sbb
fild
fisubr
lods
xchg
ds
mov
add
lahf
cli
cwde
adc
jmp
into
shr
xchg
and
push
add
inc
add
push
lea
jbe
sub
sti
xlat
mov
cmps
call
inc
sub
pop
ds
fs
(bad)
dec
dec
or
out
(bad)
mov
xchg
imul
jle
dec
xlat
jnp
pop
scas
xor
daa
mov
sub
out
ret
icebp
sub
dec
les
pop
jnp
mov
or
push
or
fisubr
mov
fcomp
call
mov
mov
and
shl
pop
aas
xor
neg
jg
sub
loop
dec
les
(bad)
push
jae
push
and
into
xor
lahf
mov
xchg
imul
call
xlat
lock
scas
clc
rcr
inc
test
sbb
push
fsub
or
jl
pushf
inc
repnz
loope
adc
std
xchg
jp
jecxz
add
shr
pop
ror
aad
xor
enter
ret
int
daa
cmps
(bad)
mov
push
mov
pop
adc
add
lea
(bad)
les
add
ins
cs
push
inc
and
inc
push
add
clc
cwde
imul
(bad)
sub
sar
in
mov
adc
(bad)
xor
sbb
mov
lods
add
stc
in
aam
jne
jle
aad
adc
rcr
cmp
cmp
leave
push
pop
sbb
outs
jnp
push
dec
int3
jp
clc
xor
push
pop
rol
xchg
nop
fcmovne
in
xor
dec
add
mov
dec
push
xchg
int3
rdtsc
jne
retf
sub
xchg
xchg
jecxz
ret
xchg
rcr
xchg
or
dec
ror
enter
daa
dec
fs
and
lock
mov
jg
std
inc
lock
add
repz
xchg
push
sbb
add
movs
or
scas
mov
dec
mov
and
add
enter
outs
aam
dec
jmp
fnstcw
cwde
cwde
ins
enter
and
xor
icebp
icebp
or
pop
add
sbb
mov
jl
lahf
adc
push
pop
lds
int
add
pop
jmp
pop
cmp
rol
rcr
cmp
ret
xor
ficom
jmp
xchg
inc
fcom
jo
xchg
xor
(bad)
push
or
imul
pop
ficomp
jo
js
add
(bad)
in
jns
fidivr
ds
or
ror
hlt
xor
cmp
fsubrp
loope
vsqrtss
mov
pop
imul
or
xchg
imul
pop
ret
mov
(bad)
xchg
int3
jae
xchg
aaa
outs
inc
cwde
inc
add
sbb
fwait
les
sub
xchg
aam
lea
into
ffree
push
push
dec
int3
enter
xor
int
das
fucomp
pop
lahf
aas
xor
ror
jg
cmp
jmp
xchg
inc
aam
std
sub
fild
ins
(bad)
ss
sahf
outs
cmp
sub
fisttp
cmp
cmp
mov
xor
retf
fisub
jno
stos
dec
nop
enter
and
mov
test
xor
xchg
shl
into
sbb
sub
out
xor
inc
cs
fstp
addr16
sub
adc
(bad)
push
enter
push
loop
or
outs
gs
shl
pushf
push
fsubr
mov
mov
test
cdq
inc
mul
sahf
adc
pop
aas
sbb
ins
sbb
rol
add
xchg
or
into
fld
inc
ins
fmul
add
addr16
mov
cdq
aam
push
fld
fnstenv
pusha
in
xchg
pushf
dec
call
or
inc
(bad)
leave
dec
push
fwait
jb
cmp
lods
sub
repz
and
outs
xor
push
ss
sti
add
sti
mov
loope
jbe
jmp
call
add
jp
fimul
stc
xchg
(bad)
and
sub
sbb
xchg
xor
push
pusha
ret
push
hlt
loop
loop
jo
or
in
inc
jmp
sahf
out
mov
push
pop
aad
add
fisttp
xchg
jmp
mov
(bad)
(bad)
xor
sbb
test
dec
in
iret
inc
je
and
div
fisub
mov
and
ror
and
mov
ins
sub
shl
lds
test
xchg
xor
sub
sub
mov
fadd
pop
inc
es
push
ror
sbb
(bad)
push
loop
ret
push
daa
fadd
jno
xchg
(bad)
fld
sub
dec
pop
pop
xor
daa
cmc
add
push
cmps
xchg
inc
mov
ret
sub
retf
dec
shr
and
add
and
and
cmp
popf
das
and
cld
les
sahf
push
sub
and
jae
push
test
pop
in
cdq
loop
inc
int3
clc
ficomp
mov
jb
pop
mov
clc
sub
mov
(bad)
dec
sahf
fldenv
xor
xor
pusha
test
outs
or
je
into
das
ror
and
and
rcl
fidivr
ficomp
inc
(bad)
sbb
imul
(bad)
rcl
dec
inc
add
mov
es
mov
in
push
dec
repnz
scas
loopne
mov
(bad)
push
aam
pushf
push
mov
repnz
sbb
imul
xor
ficom
dec
add
push
mov
mov
jb
jp
mov
retf
add
(bad)
adc
stc
xchg
cmp
xor
fdiv
or
push
out
int3
push
stc
xor
and
inc
push
loope
hlt
loopne
daa
mov
add
call
leave
dec
adc
adc
push
inc
rcr
(bad)
inc
dec
loopne
sub
pop
call
or
pop
push
cmp
fnsave
push
sub
test
cs
retf
ffree
mov
outs
repz
add
xchg
jne
inc
push
fild
mov
dec
add
popf
mov
pop
loopne
sbb
aaa
pusha
push
ins
rol
scas
out
in
inc
cmp
xor
inc
jp
shl
fisttp
ja
jg
jne
pop
aam
mov
scas
fs
outs
jecxz
mov
push
inc
push
fld
or
and
and
lods
cmp
sbb
ja
mov
cmp
fadd
push
lods
inc
or
xchg
xor
movs
scas
aad
pushf
inc
out
push
into
sub
scas
cmp
sub
ins
xor
mov
mov
push
movs
adc
das
jbe
dec
push
dec
(bad)
jp
stos
adc
retf
rcr
loope
push
push
add
neg
ror
sub
out
ins
ret
dec
pop
aam
mov
mov
add
sub
add
daa
(bad)
xor
shr
dec
xlat
push
pop
ss
dec
adc
(bad)
cmp
std
jg
mov
add
inc
icebp
xor
rcr
iret
(bad)
pop
dec
adc
sub
cmp
jg
mov
push
mov
iret
push
cs
imul
data16
retf
add
xor
imul
pop
in
repz
adc
xchg
test
xlat
into
sbb
call
into
pushf
mov
fnsave
dec
sbb
mov
mov
int3
imul
push
inc
fldcw
ret
std
push
add
and
in
xchg
fst
jo
es
push
and
xchg
cmp
hlt
and
jb
and
pop
loopne
shr
sub
sub
xchg
add
popf
dec
push
jns
(bad)
es
sub
or
xor
xchg
cmp
js
xor
jne
in
test
jb
mov
cmp
retf
sbb
and
jno
dec
retf
pop
dec
push
mov
mov
stos
jge
cmp
(bad)
push
ficom
sbb
xchg
mov
rol
sub
mov
fwait
push
in
cmp
aam
xchg
loopne
push
dec
lock
fcomp
leave
mov
loop
jns
pop
(bad)
aad
or
(bad)
call
stos
(bad)
cmp
push
popa
call
dec
jl
lds
rol
and
mov
xor
xor
data16
xchg
sahf
jae
shl
imul
and
ficom
lock
es
les
nop
cmp
mov
cli
js
mov
jecxz
retf
sbb
add
mov
fucom
addr16
mov
mov
sbb
call
outs
gs
cmp
fstp
jecxz
sub
out
stc
sub
mov
test
sub
fisubr
lods
cs
or
push
inc
lods
and
fs
add
loope
rcl
clc
leave
dec
pop
mov
ins
in
dec
mov
popf
push
fcmovnb
pop
push
clc
ficom
ins
popa
inc
mov
and
adc
and
mov
sub
or
inc
jbe
sub
shr
pop
scas
pop
imul
pop
test
inc
mov
pushf
pushf
jnp
inc
cs
clc
data16
add
xor
jae
or
xlat
test
fst
stc
lock
lock
ficom
pusha
pop
(bad)
sbb
ds
mov
clc
(bad)
lock
push
mov
jns
push
js
push
xor
inc
mov
shr
cmp
sti
call
jo
stos
pop
pop
sbb
add
mov
nop
pop
and
dec
fst
fwait
jle
(bad)
fisttp
sub
mov
and
mov
jl
push
push
mov
out
stc
and
shr
mov
ret
fsub
xlat
xor
mov
mov
hlt
loopne
jns
scas
pushf
inc
arpl
pushf
outs
ds
(bad)
push
enter
sbb
test
push
loop
push
add
daa
les
inc
lock
sbb
add
les
sbb
loopne
stos
ret
pop
shr
iret
dec
les
mov
mov
xchg
loopne
xchg
inc
test
mov
ins
push
setl
jge
xchg
pushf
cmps
jp
aaa
xlat
std
ins
jo
cmp
pop
rcr
jns
mov
add
pop
dec
clc
xchg
shl
pop
fiadd
int3
cwde
xlat
dec
sbb
rcr
pop
rol
ja
into
enter
in
dec
loop
jl
test
sbb
lock
adc
dec
inc
rcl
inc
cli
shl
mov
and
test
rcr
mov
ficomp
pop
jmp
in
jecxz
(bad)
retf
lds
xor
fstp
daa
sbb
sub
or
int
push
xor
mov
lods
inc
imul
fisttp
cmps
in
test
pop
inc
sub
mov
jg
popf
push
xchg
cmp
movs
imul
dec
lock
dec
mov
mov
mov
mov
jp
add
push
dec
rcr
mov
cld
loopne
mov
xchg
sar
fdiv
pop
add
fdivr
dec
fld
lock
and
in
fwait
call
pop
push
sbb
test
inc
fimul
cmp
xor
push
jbe
inc
bound
ins
mov
test
pop
inc
push
bound
or
movs
loop
and
cld
push
xor
xchg
out
sbb
enter
sub
mov
mov
dec
fmulp
(bad)
mov
ss
bswap
sub
ret
sub
aam
ret
and
push
pop
addr16
xor
popf
aam
adc
loopne
in
push
stos
in
shl
inc
loop
xor
rol
ins
pop
add
in
sbb
sahf
mov
enter
xchg
or
pop
cmp
pop
cmp
jns
jo
push
ret
das
scas
movs
and
push
jns
aam
aas
sbb
mov
push
cmp
and
pop
and
call
pop
in
enter
inc
mov
pop
push
cmps
sbb
in
sbb
add
jg
enter
mov
cmp
hlt
push
xor
sub
cmps
and
mov
jg
js
stc
cdq
xchg
pusha
adc
or
jle
mov
xchg
ja
call
scas
xchg
or
fcom
sub
and
out
int
loopne
repnz
ss
adc
adc
and
les
cmp
sub
out
sub
mov
addr16
pop
inc
lea
dec
mov
call
jno
jmp
jmp
test
push
mov
push
das
fistp
jne
outs
cmps
inc
jne
in
mov
(bad)
pop
adc
imul
mov
xor
pop
dec
mov
or
je
sbb
pop
mov
cwde
jb
adc
cmp
(bad)
imul
sbb
dec
in
in
and
retf
pop
cs
imul
or
mul
ins
ins
retf
aas
push
fstp
ss
(bad)
icebp
push
inc
sar
xchg
mov
test
sti
(bad)
pop
add
pushf
ds
and
inc
push
mov
cmp
pushf
inc
sbb
or
in
pop
sub
sbb
sub
pop
xchg
imul
test
xlat
xor
xor
aaa
push
lock
(bad)
(bad)
fmul
(bad)
test
jno
dec
jnp
push
xchg
in
adc
jns
push
jmp
pop
in
sub
pop
dec
mov
add
out
movs
dec
fidivr
adc
mov
out
xor
into
es
clc
in
xchg
xor
lock
mov
cmp
enter
dec
sub
out
dec
mov
xchg
call
mov
retf
or
in
adc
shr
jle
or
add
cmps
pop
mov
sbb
(bad)
push
mov
push
loopne
xchg
in
add
or
jge
pop
add
dec
mov
test
cld
jne
jnp
xchg
cmp
mov
mov
xchg
cld
shr
sbb
data16
jmp
or
lahf
or
test
or
jle
xor
stos
sub
movs
in
adc
mov
xor
push
push
or
sub
push
mov
ja
cs
push
jnp
outs
sub
xchg
mov
pop
test
outs
sahf
jns
mul
mov
mov
jg
push
arpl
jb
sbb
out
jae
aaa
mov
ret
or
cmp
(bad)
lock
fwait
sbb
ins
inc
and
fisub
aas
in
loop
or
sub
inc
icebp
test
adc
retf
push
push
imul
sub
inc
cld
add
and
in
inc
mov
sar
call
js
adc
xchg
imul
clc
mov
in
cli
adc
push
inc
rol
clc
fdiv
jns
sub
pop
call
fucomip
test
repnz
and
scas
aas
div
inc
and
mov
iret
add
push
iret
cmp
ss
fild
push
xchg
jb
sbb
mov
cwde
sub
push
(bad)
leave
mov
lahf
js
push
sub
aas
fiadd
loopne
and
xor
xor
push
fisttp
ds
and
inc
pop
je
(bad)
cmp
xchg
or
jo
in
fisub
imul
lds
imul
test
push
(bad)
mov
cmp
mov
ror
test
shr
loopne
iret
push
(bad)
(bad)
frstor
loop
sbb
clc
push
jno
and
mov
ret
xchg
mov
cmp
xlat
repz
iret
pop
or
(bad)
adc
in
jmp
jl
mov
push
cmp
cmp
push
(bad)
repz
mov
test
loope
ret
je
xor
pop
xchg
movs
xchg
test
and
xor
pop
das
jl
popf
or
adc
xor
and
adc
ss
rcr
sub
cmp
mov
call
arpl
in
and
mov
push
mov
xor
lahf
jnp
xor
lds
lahf
shr
jno
dec
movs
repz
call
js
jg
ss
sbb
push
sub
cmp
sbb
sub
dec
cmps
mov
add
xor
add
mov
leave
jns
(bad)
jne
pop
adc
cld
ss
cmp
or
sahf
fistp
and
mov
jecxz
push
sub
push
fisttp
xlat
ror
sub
stos
lahf
adc
cmp
pop
mov
push
jno
out
inc
or
cmp
into
push
sbb
jmp
xlat
ins
retf
add
fcomip
push
out
xchg
shr
push
enter
push
in
or
jmp
add
imul
sbb
xor
out
xor
xchg
ins
shl
stc
(bad)
pop
adc
cmp
in
into
push
imul
imul
pop
cmp
enter
push
pop
mov
add
mov
sbb
cmp
(bad)
fsubr
dec
mov
pop
adc
dec
rcl
call
cmps
out
ins
jle
mov
inc
imul
inc
gs
cmp
inc
or
pop
and
cmp
sbb
(bad)
sar
ror
xor
popf
call
aam
sub
xchg
xchg
xchg
xor
or
stos
or
push
sub
fstp
iret
push
mov
ret
and
lock
or
mov
ret
aaa
aad
imul
mov
add
mov
das
sbb
sbb
sbb
push
les
pop
fwait
sbb
les
int3
(bad)
pushf
jmp
push
jge
and
push
xchg
push
std
shr
stos
mov
ret
aas
fdiv
jl
(bad)
cdq
sbb
or
imul
pop
jg
pop
out
iret
push
jno
(bad)
cmp
and
es
(bad)
pop
enter
aas
jmp
sbb
jle
aam
sar
push
enter
lea
dec
pop
mov
rcl
sub
shl
jg
mov
jp
(bad)
push
xchg
jne
sub
xchg
push
in
and
cmp
fild
mov
in
mov
xchg
inc
repnz
and
test
xor
bnd
xor
xchg
pushf
or
mov
xor
push
pop
out
cmp
adc
pop
int3
pop
and
sub
pop
sbb
push
ins
sbb
jne
jno
scas
pop
xor
mov
xchg
cmp
test
in
push
pop
les
cmps
xor
add
xor
out
mov
pop
mov
cmp
stos
jg
cmp
in
pushf
ins
sub
pop
pop
inc
int
inc
sbb
jb
and
inc
enter
repnz
and
out
and
les
test
popa
fisub
ins
mov
xchg
int
inc
in
syscall
jle
inc
(bad)
push
jnp
sbb
sbb
ja
or
aam
push
mov
dec
sbb
xchg
ds
mov
cmp
int3
loope
add
sbb
pop
sbb
imul
dec
loope
mov
call
cmc
mov
xlat
mov
push
xor
adc
pop
pop
jnp
fidivr
sub
cmps
mov
movs
cmp
jecxz
ret
sub
and
sub
ins
rcr
sub
repnz
jb
test
cdq
xor
(bad)
jne
test
jno
scas
push
add
sub
fsub
test
inc
xchg
pop
pop
(bad)
dec
mul
ds
call
pop
adc
dec
xor
mov
jbe
add
push
arpl
mov
xlat
repnz
(bad)
or
mov
aas
add
push
dec
shl
cmp
push
mov
outs
xchg
(bad)
addr16
xchg
add
pop
jo
jae
xchg
xchg
(bad)
cli
fimul
mov
mov
cmp
jl
hlt
fimul
enter
mov
dec
jb
ins
pop
jl
cmp
xchg
cmp
shr
cmp
ins
sbb
ins
test
xor
fisttp
push
mov
cmp
pop
jmp
mov
pop
int3
cmp
sbb
dec
imul
add
jmp
out
dec
sbb
push
int3
or
fadd
fimul
lods
and
jmp
xchg
pop
mov
leave
sub
jp
jl
cwde
mov
sbb
bound
retf
ins
sub
sbb
xor
pop
cmp
mov
add
jb
push
cs
sbb
daa
fst
jecxz
mov
jae
outs
and
push
test
mov
loop
push
cmp
or
cld
cmp
fcom
add
lock
add
clc
loopne
xor
push
jo
scas
fwait
adc
cmp
inc
cmp
pop
jle
inc
jae
dec
cmp
stc
add
sbb
int3
jle
jp
in
retf
and
loopne
loope
cmp
mov
inc
aas
jge
cwde
(bad)
inc
aam
dec
mov
pop
imul
in
and
mov
inc
add
or
pop
pop
jb
shr
mov
or
adc
(bad)
dec
cwde
cmp
and
mov
(bad)
xor
sbb
test
imul
or
mov
ret
in
mov
shr
(bad)
(bad)
inc
sub
adc
aad
cmp
data16
xor
cmp
xor
dec
out
outs
lds
adc
imul
(bad)
mov
in
pop
mov
xchg
adc
ror
(bad)
ins
(bad)
in
cmc
xor
push
out
push
(bad)
mov
mov
imul
add
xchg
(bad)
jae
cmp
mov
mov
das
add
and
xchg
mov
mov
xchg
cmp
sub
sub
and
xor
je
add
fist
in
and
sbb
xor
pusha
(bad)
adc
aad
push
xor
sbb
cwde
xor
sub
pop
test
dec
mov
xchg
mov
jmp
scas
ja
jl
jno
dec
jl
mov
xor
(bad)
mov
mov
mov
fsubp
xlat
and
into
stc
mov
mov
(bad)
mov
cmps
and
cli
push
cwde
shr
shl
retf
leave
ins
fistp
cwde
sbb
or
pop
inc
cmp
mov
or
jo
fbstp
jecxz
dec
cmps
fcmovne
push
enter
shr
mov
mov
jle
add
xor
sub
mov
push
popf
in
or
and
sbb
cmp
lock
xchg
lahf
add
lock
fidiv
push
cli
cmp
mov
fstp
xlat
int
xor
pop
jno
and
popf
ss
aam
cmp
mov
int
aas
pop
push
ret
stos
pop
xchg
mov
sbb
mov
xor
xchg
jle
fisttp
xchg
adc
mov
sub
in
jo
sar
pop
int
cmc
call
aas
xchg
dec
cmp
mov
(bad)
mov
or
pop
lea
cmp
retf
jb
or
xchg
pop
js
pop
enter
fcmove
mov
pop
das
and
pop
enter
add
lds
out
jp
sub
(bad)
fdiv
mov
scas
mov
shl
jl
adc
sti
push
movs
add
sub
lods
sbb
rol
stos
cld
and
mov
mov
shl
mov
ja
sub
push
mov
mov
(bad)
jb
xor
pop
and
pop
jb
(bad)
int
push
push
pop
in
xlat
in
dec
and
ret
or
fiadd
loopne
repnz
por
jle
and
(bad)
sahf
int3
retf
xchg
paddd
adc
lods
out
fbld
push
in
add
loopne
mov
int
ins
nop
int
(bad)
aad
repnz
xlat
or
pop
sub
fadd
sub
clc
shl
in
call
cmp
out
fild
xchg
jg
(bad)
lds
iret
cli
rol
and
mov
adc
scas
xchg
gs
wbinvd
cmps
icebp
jp
xchg
or
push
or
adc
outs
jle
jo
cmp
sub
fsubp
jge
push
and
rol
add
shr
mov
lds
dec
fs
and
push
ret
or
or
ret
xchg
sub
inc
sub
fmul
loopne
shl
mov
xor
sbb
test
test
mov
loopne
xor
mov
jno
sbb
jl
or
outs
inc
cmp
test
pushf
xor
cmp
call
mov
(bad)
mov
push
scas
into
loope
push
pop
das
jae
sar
cmp
inc
jg
dec
(bad)
or
scas
mov
xchg
dec
dec
and
add
xchg
pushf
mov
xchg
add
loopne
pop
cmp
ds
shld
jle
imul
adc
push
lock
jae
inc
int
cmp
or
out
or
mov
mov
test
rcr
mov
pop
mov
jne
mov
scas
dec
inc
push
sub
push
push
xor
sbb
stc
movs
cmp
fist
inc
loopne
pusha
mov
call
shl
int
and
xlat
xor
fld
jnp
push
inc
mov
ret
ins
adc
xlat
add
fidivr
cwde
mov
lea
xor
in
cmp
sahf
(bad)
nop
bound
shl
enter
add
shl
jae
pop
arpl
cmp
add
jb
mov
pop
js
mov
sahf
push
outs
jae
lods
repnz
xchg
popa
(bad)
mov
retf
clc
fstp
iret
dec
in
and
mov
scas
sbb
(bad)
xlat
sub
sbb
mov
cdq
scas
int3
ins
jae
xor
fs
mov
imul
shr
sbb
jp
jae
sahf
pop
pushf
int
les
jg
test
sbb
sbb
jno
or
leave
gs
ins
jl
jecxz
push
int
ins
xor
out
mov
fucomi
in
jmp
aas
sub
iret
repnz
int
and
in
or
clc
jnp
mov
inc
nop
ins
sar
int3
xchg
mov
inc
push
aam
sbb
cmps
aas
scas
sbb
call
push
in
int
aam
or
cdq
fwait
lahf
cld
sub
lds
xlat
rcl
ror
das
ins
vandps
mov
jle
fstp
jo
mov
cmps
jl
pop
and
enter
xor
ficomp
(bad)
fmulp
int
das
mov
sub
add
add
pop
in
fnstcw
xor
aas
ror
into
and
in
ffreep
aaa
cli
pop
or
fisubr
push
sub
clc
mov
mov
out
cmp
add
or
retf
or
inc
stos
jl
sub
adc
mov
xor
pop
in
mov
(bad)
ss
fdiv
retf
lods
je
sti
push
cmps
loop
or
inc
push
lods
sbb
into
popf
sahf
push
(bad)
(bad)
ror
out
aas
pop
not
cmp
test
ret
or
dec
mov
rol
sbb
pusha
(bad)
sbb
sbb
lds
adc
jb
ret
jnp
(bad)
push
inc
fstp
dec
in
dec
outs
cmps
and
(bad)
bound
shr
xor
xchg
jle
mov
inc
add
aad
ds
inc
mul
dec
dec
or
cmp
hlt
aaa
dec
mov
ffreep
nop
hlt
pop
repnz
or
cmp
xchg
fst
les
jb
dec
or
or
cmp
outs
pop
cmp
jp
push
in
repz
enter
popf
test
loop
out
(bad)
fimul
cmps
scas
fidiv
mov
sbb
fcmovu
(bad)
sbb
or
xchg
sub
xor
popf
mov
sub
clc
into
ins
sbb
pusha
xchg
(bad)
pop
sets
mov
pop
call
pop
loopne
jmp
ja
pop
cmp
push
pop
cmp
jmp
rcl
fdiv
ds
shl
dec
iret
push
scas
sahf
cmp
les
push
lods
xchg
push
or
or
pop
hlt
test
inc
ret
adc
fdivr
shl
vunpckhps
hlt
pushf
xor
mov
xchg
sub
jo
lds
jmp
push
hlt
mov
iret
test
push
lds
ins
int
cld
xor
pop
xchg
(bad)
rcr
cli
mul
arpl
mov
rcl
cmp
pusha
pop
fld
xlat
xchg
movs
cdq
ret
sub
mov
pop
jecxz
mov
ins
sbb
xchg
xchg
and
mov
daa
xlat
fadd
rol
fisubr
fcomi
enter
jp
pop
leave
int
in
dec
add
push
dec
push
cmp
adc
mov
ficomp
cld
in
sub
mov
lods
xchg
jle
mov
jns
(bad)
cmp
aam
sub
imul
pop
sub
push
enter
movs
cmps
aam
sub
push
aaa
gs
mov
loopne
xlat
pop
fs
push
push
xor
mov
into
fist
enter
aaa
and
aam
jge
jne
mov
out
in
inc
ror
bound
inc
aas
add
ret
shl
stos
push
cli
retf
call
popf
punpckldq
ror
loopne
out
out
in
push
add
push
stc
lahf
mov
add
enter
dec
stos
out
xchg
add
mov
add
xor
ficomp
push
in
xchg
xor
xor
and
adc
in
or
daa
mov
test
sub
jb
dec
or
mov
push
clc
push
mov
inc
or
adc
rol
lods
aam
sbb
clc
stos
aas
lahf
aad
jbe
adc
push
sbb
push
scas
es
and
sahf
cmp
ins
jno
outs
sbb
clc
ds
pop
cmp
and
cmp
sbb
stos
cmps
gs
jne
(bad)
jmp
mov
dec
push
scas
dec
mov
sbb
xor
cmp
popf
scas
gs
jmp
jmp
xor
in
sbb
push
xor
sub
push
add
mov
sti
xchg
push
or
jmp
xchg
adc
xor
inc
adc
pop
sbb
movs
bnd
mov
push
(bad)
push
popf
shl
int3
jno
dec
addr16
dec
xlat
push
xor
or
dec
mov
push
mov
pop
cmp
rol
inc
ds
hlt
jb
dec
int3
vpackssdw
mov
lods
scas
or
jno
and
loopne
sahf
dec
mov
inc
xor
xchg
pop
outs
pop
es
sbb
stc
ins
sub
push
ds
push
inc
pop
dec
mov
hlt
pusha
inc
cmp
rcr
xor
adc
aas
jno
add
or
and
pop
jae
or
mov
nop
call
add
test
movs
dec
pushf
jb
xor
jno
mov
into
sbb
inc
or
cld
push
pop
and
push
int3
leave
inc
dec
retf
cmp
ret
xor
inc
xchg
aam
push
inc
add
fst
sbb
addr16
add
lahf
pop
daa
xor
and
adc
xor
dec
jecxz
mov
cmp
pop
fst
fbld
inc
push
call
xor
add
addr16
or
aas
push
stos
out
xchg
pop
call
rcr
int
inc
retf
inc
xor
add
fild
call
int
add
out
fs
fcom
pop
bound
sub
and
xchg
sar
xchg
les
xchg
lock
in
fisub
sbb
fist
xchg
cmp
fstp
cmc
xchg
(bad)
les
(bad)
jb
and
ret
and
test
mov
or
jg
in
call
adc
xor
shl
cld
shl
and
xor
push
popf
cld
imul
lods
bound
jae
pop
(bad)
aam
fimul
rcr
dec
pushf
sbb
(bad)
ins
into
push
aas
gs
inc
int
dec
in
addr16
in
push
mov
add
ins
call
mul
out
ins
mov
or
leave
ds
pop
jp
stc
dec
dec
jno
sbb
imul
(bad)
cmps
fadd
inc
add
mov
test
push
ret
xor
call
adc
cmc
(bad)
xlat
inc
or
add
nop
sti
sub
pushf
enter
and
sub
in
mov
out
mov
push
fild
stc
rol
push
not
pop
add
imul
inc
jp
mov
mov
xlat
fistp
jb
vmulss
mov
mov
lock
mov
das
jno
cmp
inc
xor
jae
hlt
cmp
jb
mov
lahf
into
add
push
rcl
jno
mov
dec
out
das
add
push
int
adc
sbb
int
jmp
or
jge
lahf
(bad)
xor
push
xor
mov
addr16
test
das
pusha
add
(bad)
shl
vmovlps
xor
imul
(bad)
stc
ror
dec
cmp
pop
mov
push
push
push
lea
cdq
dec
xor
and
test
iret
push
add
sub
jae
int
add
cmp
or
test
mov
bound
pop
and
pushf
repnz
xor
call
push
out
jns
mov
ja
adc
sbb
jno
(bad)
in
add
xor
sub
test
out
xchg
loopne
push
outs
add
sub
cmp
loope
loopne
cmps
xor
scas
or
and
mov
xor
lahf
pop
add
and
fidiv
lahf
iret
ja
je
cmp
fistp
pop
test
(bad)
jae
xor
xor
fild
ret
or
lods
or
jns
ret
(bad)
fldcw
cdq
cmps
sar
dec
data16
(bad)
pop
vhaddps
fst
pushf
int3
movs
pop
clc
test
in
(bad)
mov
or
cmp
push
pop
xchg
ja
in
fbld
sbb
(bad)
out
movs
fcmovnu
jg
out
int
adc
ret
fiadd
jl
out
cmpps
mov
(bad)
es
mov
fstp
add
in
fadd
into
sbb
cmp
sub
mov
push
mov
push
sub
inc
loopne
shl
fisttp
mov
dec
xchg
sub
mov
nop
dec
mov
lahf
or
cmp
or
repz
loop
test
test
dec
mov
dec
inc
ror
sbb
in
lock
dec
xor
mov
jg
mov
mov
jl
and
or
sti
inc
and
push
fcomi
jl
fisttp
ja
int
loopne
out
xchg
cld
xor
rcr
inc
push
xchg
fisub
jno
dec
mov
cmp
loopne
loop
xor
adc
push
inc
mov
not
lahf
inc
mov
adc
outs
cmp
fstp
mov
call
adc
scas
sbb
(bad)
adc
xor
push
fist
hlt
fisttp
aad
(bad)
cld
push
push
push
mov
or
in
paddd
rcr
or
jno
std
jns
cmp
and
push
mov
pop
dec
retf
mov
mov
(bad)
(bad)
or
(bad)
test
add
sbb
fsubp
wrmsr
fdivp
pop
jno
push
std
rol
fsubp
and
popf
xchg
or
jecxz
(bad)
sti
sbb
enter
call
inc
out
pop
(bad)
sub
int
es
test
out
gs
movs
inc
and
push
jns
out
and
pop
jmp
shld
pop
adc
sar
cmp
pop
pop
xchg
push
dec
cld
dec
adc
fdiv
add
dec
in
das
ins
call
jno
xchg
jne
cli
ins
pop
imul
enter
mov
or
outs
inc
and
sbb
xlat
jp
jae
ins
mov
ds
in
dec
ret
xchg
xor
cwde
lds
(bad)
test
lock
shr
mov
imul
in
mov
sbb
jmp
push
push
pop
or
(bad)
or
adc
xchg
push
inc
inc
out
std
pop
mov
mov
add
lds
ror
cld
push
sar
ins
adc
(bad)
fstp
repnz
xchg
jns
cmps
mov
push
cmp
cwde
ret
dec
aas
and
xor
mov
jae
cld
into
xor
icebp
mov
stos
pop
lods
lods
push
ds
ret
ss
aam
mov
xlat
loopne
dec
pop
rcr
xor
push
cmps
cmps
cwde
dec
mov
idiv
mov
mul
jb
jae
(bad)
sahf
fist
enter
retf
jg
sub
and
mov
lahf
xor
loopne
clc
pop
scas
cmovs
mov
pop
call
cwde
adc
mov
jnp
inc
pop
jnp
jb
add
cmp
(bad)
mov
pop
imul
push
dec
and
retf
imul
fcmovnb
fdivr
nop
(bad)
ficomp
xchg
and
mov
ins
pop
push
mov
dec
lahf
push
sub
push
test
mov
int3
dec
rcr
cmp
jno
jl
mov
(bad)
cli
mov
inc
sbb
and
pop
or
jl
popa
and
fidivr
aaa
dec
popf
sahf
mov
(bad)
imul
in
out
aad
das
loope
sahf
or
xor
inc
sbb
cdq
cmp
push
dec
jmp
jno
sbb
inc
add
lods
scas
das
shl
pop
jmp
loopne
xchg
fldenv
adc
xor
(bad)
pushf
jb
cwde
ins
enter
sbb
sbb
shr
sbb
xor
popa
enter
or
jae
mov
(bad)
js
add
xor
add
ficomp
cmps
or
clc
pop
mov
sub
in
and
cmp
enter
mov
xor
add
and
xor
pop
fcmovb
sbb
ret
rcr
add
mov
aam
faddp
jnp
jns
es
je
pop
call
popf
cld
daa
int3
aas
ret
xor
outs
jns
push
sar
jae
pop
popf
test
add
arpl
jo
aad
dec
cwde
imul
int3
inc
push
enter
or
jns
mov
adc
je
mov
xchg
mov
enter
fcmovnbe
sbb
bound
(bad)
ds
add
cwde
div
xchg
out
fstp
les
inc
push
inc
test
ins
sbb
enter
inc
les
sub
icebp
int
leave
fsubrp
aas
mov
cmps
sbb
pop
add
imul
add
nop
cli
jle
xor
loopne
mov
inc
popf
(bad)
nop
sbb
or
cld
loopne
push
test
push
jo
ins
into
pusha
cli
dec
fsubp
and
dec
xor
outs
add
jp
cmp
in
lock
cmps
push
dec
imul
mov
inc
cmp
fbstp
xor
sbb
les
fild
jns
pop
inc
or
mov
xor
push
retf
pusha
xchg
dec
xchg
push
aas
dec
sbb
(bad)
fnstcw
pop
cld
sub
sub
pop
ficomp
sub
(bad)
into
test
call
dec
(bad)
sub
cmp
imul
xor
in
(bad)
jl
(bad)
mov
and
dec
xor
rcl
out
ret
pop
and
sbb
outs
or
inc
dec
ret
push
pop
xchg
xchg
aas
int3
ficom
dec
pop
ds
fldenv
cmp
xor
and
ds
repnz
mov
int
test
out
sar
cmp
xchg
je
retf
xchg
xor
jg
sub
loop
nop
push
in
mov
sub
stos
pop
loopne
mov
fs
inc
add
sbb
add
or
(bad)
ja
bound
fld
call
jb
dec
pop
sbb
les
pop
mov
inc
stc
jnp
repnz
dec
mov
fnsave
pop
push
jnp
pop
xor
imul
jmp
fdiv
xor
xor
and
ret
add
pop
ret
push
jge
push
sbb
push
add
(bad)
or
jle
mul
js
sbb
(bad)
pop
fiadd
cmp
dec
fsub
fbld
jns
fsubp
xchg
repnz
hlt
xchg
push
or
add
outs
dec
cmp
add
jnp
aaa
mov
cmp
arpl
or
das
jo
imul
or
and
je
xor
push
scas
mov
aaa
or
or
add
aaa
ficomp
cmp
lods
enter
movs
adc
push
inc
add
jnp
ja
fidiv
pop
push
mov
movs
mov
aas
sbb
ins
stos
jb
inc
scas
cmp
cmp
add
mov
inc
ss
jl
xor
fisubr
sub
inc
popa
jg
or
push
mov
adc
or
add
test
ins
das
push
or
add
dec
xor
ins
and
sub
sbb
dec
inc
sbb
or
outs
pop
bound
fisubr
lea
(bad)
sbb
les
xchg
adc
cwde
pushf
push
test
pop
or
lods
mov
jmp
mov
scas
ins
retf
mov
and
add
enter
or
sub
jl
push
mov
dec
ins
in
jnp
arpl
imul
jl
jbe
push
ins
cmp
add
ins
cmp
fdivr
sub
pop
cs
push
xchg
dec
gs
ds
ins
pop
cmp
xchg
add
sahf
fisubr
pop
pop
mov
jnp
jl
cmp
popa
or
jmp
aas
repnz
call
js
inc
clc
cmp
fild
outs
push
fisubr
and
outs
mov
add
pop
push
aam
jge
jnp
jnp
pusha
jo
arpl
ss
iret
and
rcr
dec
jle
xchg
shl
mov
and
dec
(bad)
jbe
fiadd
or
movs
push
(bad)
pop
(bad)
fcom
push
jle
push
jg
cmp
scas
dec
xchg
or
jmp
dec
xchg
mov
dec
loop
or
iret
mov
mov
out
xor
das
add
jno
cmp
adc
and
loope
fsubr
pmaxsw
push
rcr
push
add
les
dec
jb
nop
imul
daa
mov
xor
xor
xor
xor
retf
(bad)
sub
ja
and
test
mov
les
and
cs
xor
lea
lds
jne
jae
and
jl
mov
pop
xchg
xor
push
inc
fld
frstor
fs
mov
push
sub
leave
add
sub
adc
(bad)
dec
leave
aad
fs
xor
neg
(bad)
cld
jbe
push
mov
cmps
inc
adc
lahf
or
inc
pop
outs
lock
push
jl
std
fldenv
xor
inc
leave
pop
repnz
dec
int
sbb
push
cmps
daa
xor
jl
(bad)
sub
cmp
and
les
push
imul
jecxz
push
ret
push
and
inc
lods
cli
adc
out
add
sbb
das
push
sub
jnp
imul
xchg
pusha
cs
mov
xchg
sbb
sbb
dec
xor
imul
shl
dec
popa
popf
jae
mov
sbb
push
and
loopne
pop
or
ret
pusha
or
and
es
or
adc
je
adc
ja
arpl
inc
std
sub
jge
imul
add
or
xchg
ret
sbb
inc
rcr
cmp
push
data16
or
pop
or
adc
jge
pop
jnp
pop
inc
enter
pop
mov
sbb
dec
sbb
push
in
mov
cwde
add
outs
sub
or
and
adc
cmp
ss
pushf
fild
outs
and
xchg
es
sub
push
ins
rol
jb
mov
and
xor
fs
js
dec
add
out
dec
sbb
sbb
pop
jge
inc
push
and
or
sub
sub
rol
xor
mov
xchg
in
scas
xor
mov
or
pop
movs
or
call
fs
and
push
scas
ins
jl
mov
cwde
sub
pop
ins
pop
mov
sub
jp
add
or
and
push
push
dec
pusha
add
jl
sbb
push
loop
push
(bad)
repnz
add
sub
loop
(bad)
jg
dec
xor
push
pop
adc
sbb
mov
les
adc
pop
cmps
sub
dec
dec
jge
test
bound
jno
data16
aam
and
outs
ins
aam
xor
and
pop
mov
cmp
mov
xor
push
mov
mov
jb
xchg
sub
push
mov
test
pop
ins
std
scas
xchg
lds
movs
mov
add
push
jne
fsub
pop
sbb
int3
jne
pop
fs
stos
ja
inc
fsub
mov
mov
fild
mov
mov
rcr
ud1
lods
pop
dec
inc
add
bnd
les
shl
or
(bad)
pavgb
lock
sub
rcr
adc
(bad)
(bad)
sahf
sti
and
daa
(bad)
adc
jmp
xchg
das
cmp
mov
js
mov
adc
imul
bound
mov
ret
sub
push
inc
jb
aam
inc
push
outs
mov
dec
fnstcw
jge
in
jne
lea
call
test
adc
lock
xchg
sub
arpl
mov
inc
and
mov
or
mov
push
pop
push
push
push
push
ret
push
mov
int
inc
std
jb
mov
xchg
(bad)
pop
arpl
and
mov
or
adc
pop
push
pop
sbb
sub
mov
cmps
jbe
adc
mov
xor
stos
arpl
inc
mov
push
inc
das
adc
fcmovne
jne
jo
mul
cmps
test
pushf
mov
push
pop
xchg
out
sahf
fs
imul
jo
pop
call
mov
icebp
int
fidiv
pusha
push
mov
add
out
xlat
push
mov
in
adc
pop
jnp
xchg
or
(bad)
mov
push
xchg
stc
push
cmp
cs
xor
cdq
dec
pop
cmp
outs
sbb
xchg
dec
cmp
cs
jb
add
or
sub
inc
sub
inc
leave
sbb
iret
stc
mov
stos
(bad)
hlt
push
sub
inc
jmp
cmp
or
push
je
and
scas
sbb
jmp
mov
clc
(bad)
push
add
gs
inc
test
aaa
in
mov
xor
mov
leave
in
mov
call
add
sub
push
clc
aam
sti
sub
xor
outs
adc
xor
sahf
jnp
mov
pop
inc
sbb
(bad)
push
or
or
pop
mov
add
adc
(bad)
repz
fs
cmp
mov
and
jmp
mov
hlt
loope
clc
data16
mov
or
mov
cmp
retf
add
dec
mov
inc
jmp
call
and
retf
cmps
in
jae
adc
jno
push
or
clc
sub
sub
or
js
imul
jns
cmp
cli
sbb
in
repz
imul
jmp
lods
sub
cmp
int
pop
lods
test
dec
scas
mov
fs
pop
and
sub
dec
js
out
xchg
(bad)
lds
push
neg
xlat
rol
mov
rcr
imul
mov
cdq
and
sbb
adc
pop
pushf
stos
xchg
data16
sub
aas
xchg
scas
or
idiv
adc
hlt
adc
fidiv
push
fs
sbb
xchg
jg
cmp
mov
and
jne
enter
mov
in
icebp
or
mov
rcl
pushf
lea
call
pusha
mov
push
push
mov
pusha
push
mov
pusha
lea
jmp
sub
dec
cli
(bad)
adc
je
mov
fst
sbb
cmp
fwait
clc
and
mov
add
fcmovbe
cmp
add
mov
(bad)
out
and
jmp
and
cmc
adc
popf
inc
mov
push
cmp
fcom
and
pop
out
test
push
jne
pop
test
call
push
cmp
repnz
cmp
xchg
fldl2t
jae
cmp
mov
hlt
sub
add
inc
fs
scas
leave
dec
mov
mov
dec
sub
stos
enter
xchg
pop
pop
xor
imul
adc
(bad)
push
cmp
mov
or
and
adc
mov
ins
repnz
pop
cmps
xchg
mov
pop
inc
aad
not
clc
push
cmc
sub
mov
add
lea
pushf
dec
rcr
pop
js
xchg
dec
js
adc
les
ds
mov
les
mov
lods
jne
sub
cdq
jle
jle
pop
mov
enter
push
add
icebp
shl
fucomp
mov
xor
(bad)
int
repz
bound
mov
outs
or
adc
mov
xchg
or
cs
gs
push
adc
test
mov
mov
out
jne
or
cmp
push
dec
jae
mov
aam
shr
shl
xchg
iret
std
das
push
les
mov
cmp
push
sar
cmp
mov
mov
mov
adc
add
xor
mov
push
mov
push
lea
jmp
stc
clc
push
or
mov
lea
jne
stc
mov
stc
stc
cmc
push
or
pushf
lea
je
push
setns
xchg
lea
not
mov
pusha
lea
call
clc
call
retf
popa
mov
call
xor
rcr
aam
and
jmp
imul
xor
cmps
cli
aam
push
mov
xchg
pushf
cmp
push
fsubr
jnp
int3
inc
mov
or
addr16
mov
test
shl
out
add
jae
dec
out
loope
sub
adc
mov
imul
pop
push
cmps
sbb
sub
jle
mov
es
test
(bad)
and
xor
cmp
xchg
sbb
mov
dec
sar
push
enter
ins
adc
outs
mov
test
daa
and
inc
xor
or
mov
cs
push
lea
jne
jmp
pushf
mov
mov
pushf
dec
pusha
clc
bt
push
popfw
push
inc
push
pushf
push
adc
push
pushf
push
push
push
ret
btc
sar
shr
rcr
dec
sar
mov
mov
pusha
inc
add
pushf
not
mov
mov
pushf
jmp
mov
clc
jmp
pushf
lea
jne
or
sub
rcr
btr
movsx
inc
mov
adc
push
cmp
add
jmp
cmp
sub
test
push
or
pusha
pushf
jmp
movsx
lea
mov
lea
lea
mov
push
mov
jmp
mov
lea
je
pusha
lea
jmp
dec
not
lea
jne
stos
not
call
sub
mov
cmp
cmp
push
pushf
lea
ja
pushf
mov
call
bt
rol
stc
clc
neg
cmc
lea
jl
xor
pusha
dec
mov
cmp
pusha
jmp
push
loop
mov
test
je
inc
mov
je
mov
add
in
cmp
xchg
out
xor
test
fiadd
dec
cmc
xchg
cli
ins
pushf
lahf
or
inc
sbb
ret
sahf
adc
or
jo
hlt
rcl
fmul
out
out
call
push
add
loop
pop
sbb
and
and
sub
push
repnz
fild
xor
adc
cmc
fnsave
and
(bad)
mov
lahf
fiadd
fsubr
adc
int
(bad)
or
mov
adc
adc
sub
add
sar
ror
bsf
sbb
mov
bsf
mov
cmc
mov
cmp
movzx
ror
mov
mov
pushf
call
push
fcom
sbb
mov
fsub
out
jbe
mov
jae
rol
(bad)
(bad)
ret
out
jmp
dec
es
dec
mov
retf
gs
nop
xor
fdiv
es
push
stc
call
inc
push
cwde
repz
xor
xor
je
add
push
adc
pop
(bad)
jbe
inc
mov
shl
sbb
fadd
std
ret
pop
dec
xor
mov
jp
add
hlt
sub
sbb
fidiv
sbb
push
fdivr
outs
inc
in
mov
and
mov
xlat
jno
(bad)
(bad)
cmps
daa
js
shl
jmp
cwde
mov
pusha
shl
bound
pop
lods
mov
popa
iret
je
sbb
movs
mov
sti
mov
jecxz
cdq
cwde
fnstsw
data16
adc
cmp
add
inc
pop
mov
sub
adc
or
fdivr
push
cmp
ja
js
add
mov
out
jne
test
add
adc
mov
popf
dec
cmp
loop
xchg
mov
xchg
add
fmul
push
ror
sbb
(bad)
cmps
cwde
call
cmp
bound
jbe
dec
popf
pop
neg
(bad)
xchg
cmp
mov
mov
mov
pop
fst
adc
je
shl
fdiv
jae
jp
jno
fdivr
mov
imul
out
xchg
aam
push
push
shr
push
(bad)
fcom
mov
std
pmullw
shl
(bad)
into
jg
iret
mov
xor
mov
out
dec
mov
imul
lods
scas
(bad)
fcmovnu
(bad)
sbb
sub
les
and
lock
scas
mov
cmp
mov
pop
adc
dec
pop
adc
mov
sahf
mov
inc
add
in
mov
pop
(bad)
out
jne
jl
fsub
sub
xor
sbb
ins
cmp
mov
inc
jbe
dec
xlat
pop
fsubp
sub
xchg
sbb
inc
stos
fmul
sbb
xchg
mov
popa
lock
and
fadd
push
clc
lods
iret
leave
push
dec
out
sbb
fcom
xor
retf
shl
fmulp
sbb
cwde
fdiv
mov
loop
mov
lods
inc
fs
xlat
mov
mov
cwde
out
frstor
cli
lock
jl
mov
and
dec
and
pop
inc
enter
pop
jo
pusha
jbe
cld
mov
popa
ds
ss
je
xchg
rol
xor
fdiv
(bad)
jns
(bad)
xchg
fstp
ins
inc
sbb
add
mov
(bad)
stos
mov
out
sub
sbb
xchg
retf
les
inc
cmp
scas
mov
fdivr
into
adc
pop
js
pop
cmc
stc
and
addr16
cmp
or
mov
std
pop
fcom
xchg
mov
retf
fsubr
push
int
add
mov
xchg
or
sti
sub
add
daa
sbb
sub
add
icebp
scas
ss
(bad)
(bad)
pop
fdivr
xchg
es
int
push
(bad)
fdiv
std
cmps
in
or
or
xchg
sbb
sahf
dec
xlat
pop
xchg
dec
jecxz
pop
add
mov
jmp
stc
xlat
add
push
adc
xchg
ins
iret
call
ror
fs
and
add
pop
ins
or
or
imul
pop
push
pop
jl
outs
or
jbe
push
jmp
(bad)
outs
jle
sbb
pop
dec
sub
cmp
xor
xchg
mov
or
imul
sub
adc
xor
and
or
cmp
jmp
pop
in
jl
ins
sbb
push
xchg
dec
or
pop
leave
pop
xor
push
arpl
hlt
ja
pusha
int3
jne
jnp
push
pop
xchg
enter
inc
and
das
sbb
popf
mov
xchg
xor
retf
jno
sbb
push
add
das
outs
cmp
add
xchg
sbb
data16
das
dec
mov
sub
pop
sub
cld
int
push
pop
jge
imul
aas
jnp
je
xor
pop
push
imul
fidivr
jge
cmp
outs
idiv
ins
mov
sub
jno
push
xor
push
dec
xchg
add
xor
pop
push
dec
and
popa
fiadd
jno
xchg
pop
sbb
or
and
jge
pusha
jnp
frstor
outs
jge
mov
fsqrt
adc
enter
imul
pop
sub
push
xchg
aaa
imul
cmps
loop
jmp
lods
jnp
dec
cmp
adc
cmp
mov
outs
mov
xor
add
push
inc
mov
pop
cmp
daa
(bad)
ja
dec
dec
dec
cmp
bound
mov
mov
or
mov
into
sub
inc
jnp
pop
adc
add
mov
outs
mov
adc
and
bound
pop
popa
jge
adc
sub
add
cmp
cmp
dec
daa
inc
fld
adc
mov
push
sbb
scas
push
jg
cmpps
push
cmp
push
pop
adc
(bad)
imul
mov
jle
imul
cmp
pushf
jl
inc
pop
cmp
enter
push
inc
ins
imul
das
mov
jo
sahf
push
imul
std
push
rcr
shl
jge
ror
enter
enter
xchg
pop
(bad)
mov
rol
ror
push
enter
imul
nop
sbb
push
mov
pusha
cmp
cmp
cmp
inc
in
xor
push
ins
and
fs
push
sbb
arpl
push
dec
pop
jle
xor
jmp
adc
je
push
movs
ds
in
hlt
pop
sbb
or
repnz
fs
mov
mov
out
std
mov
mov
sar
jnp
outs
sar
cmp
mov
dec
shr
push
jb
pusha
sbb
rcr
daa
aas
push
sar
jge
push
push
enter
pop
shr
sbb
popa
ja
pop
add
sar
imul
mov
arpl
ins
mov
cdq
movs
jle
(bad)
jge
rcl
imul
mov
sub
mov
mov
sar
mov
pop
xchg
push
adc
push
nop/reserved
cli
int3
in
das
jmp
ins
ffree
jge
ins
and
cmps
add
out
xor
xor
les
bound
xor
and
pop
ja
push
xor
or
fsub
add
imul
les
pusha
loop
lods
loope
shr
cs
in
sbb
fcmovu
pop
and
pushf
cmp
mov
imul
fs
ret
aaa
cmp
movs
cmp
(bad)
mov
xor
cld
mov
pusha
and
add
enter
aas
lock
(bad)
adc
ins
aam
out
adc
and
cmps
xchg
loopne
int3
test
inc
or
pop
lds
inc
aaa
mov
(bad)
cmps
inc
sub
in
mov
adc
loope
daa
jge
pusha
jmp
sar
out
(bad)
adc
jae
fimul
xor
rcl
and
shl
cdq
xor
(bad)
jmp
dec
paddq
gs
mov
inc
imul
sub
push
mov
(bad)
ja
or
sar
mov
ja
test
rcl
pop
aas
sti
addr16
jl
add
inc
xchg
inc
xor
xor
arpl
shl
xor
stos
iret
int3
or
ins
push
sar
mov
or
cli
movs
mov
sar
dec
popa
lods
mov
sbb
push
ins
push
cmps
je
mov
ror
push
out
pop
xor
push
mov
sbb
xchg
inc
jmp
das
int
(bad)
add
call
push
(bad)
sub
dec
jle
ins
and
js
iret
or
bound
mov
jmp
repnz
popa
sbb
int3
daa
add
lods
cli
data16
sti
arpl
fs
fsub
imul
jnp
ins
push
rol
add
cmp
dec
repz
icebp
cmp
inc
enter
pop
fisub
push
add
stos
mov
and
adc
popa
cs
sub
sub
push
inc
cmps
sbb
fcomp
pop
mov
jl
pusha
push
les
test
push
xchg
sub
xchg
popa
ins
sub
jle
pop
imul
shl
xor
ret
mov
dec
(bad)
cs
stc
cmp
jmp
mov
popa
mov
push
mov
xor
fs
popa
mov
push
popa
push
enter
push
sti
ja
sar
push
fldcw
loop
pop
push
nop
mov
into
ins
dec
fdivrp
push
pop
ins
mov
sub
pop
pop
sahf
(bad)
jge
shl
(bad)
push
in
inc
inc
out
dec
adc
cmp
dec
dec
push
inc
sbb
cli
aaa
imul
and
cs
push
mov
push
pop
ret
add
outs
lods
xor
jge
dec
pop
enter
adc
imul
popa
adc
sbb
cs
pop
sub
inc
into
shl
ror
pusha
mov
xchg
mov
imul
or
jl
or
inc
jnp
push
cmp
mov
(bad)
addr16
adc
in
ror
jmp
dec
mov
jnp
scas
cmps
imul
bound
push
xchg
int3
dec
push
outs
mov
and
cmp
dec
in
movs
pusha
mov
and
mov
rol
ss
sbb
shl
sar
dec
jl
xchg
(bad)
ja
bound
mov
dec
(bad)
sbb
jo
pop
pop
xchg
mov
jae
and
mov
je
mov
mov
xchg
pusha
retf
mov
pop
ins
mov
jle
cmp
(bad)
push
rcl
xchg
aaa
fadd
imul
test
lods
cmp
rcl
mov
dec
dec
inc
out
outs
add
imul
fbstp
pop
push
lock
push
jge
jmp
and
cmp
outs
jo
sar
test
sub
cmp
pop
ror
outs
mov
pop
xor
ja
cmp
xor
cli
cmp
jl
push
test
jl
outs
into
ins
pop
ss
pop
hlt
popa
shl
push
or
adc
aaa
shr
ret
enter
push
add
loop
and
das
add
enter
pop
or
sub
mov
cmps
fnstenv
inc
mov
sub
mov
mov
mov
adc
cmp
and
sub
call
nop
cmc
and
(bad)
ins
and
pop
adc
cvttps2pi
daa
dec
sub
and
mov
sub
sub
sub
shl
aaa
(bad)
rcl
sub
sub
sub
daa
dec
sub
adc
sub
sub
mov
jge
mov
sbb
jl
xor
sbb
sub
inc
cld
jmp
add
std
sbb
mov
mov
out
daa
xchg
mov
jle
out
pop
mov
push
enter
jge
ja
sbb
mov
mov
jge
ja
jnp
sbb
iret
xor
fiadd
push
lods
ror
fs
cmp
sub
xlat
ror
fmul
(bad)
fcomp
mov
fdiv
mov
aad
lea
dec
mov
hlt
fsubr
or
(bad)
jae
and
scas
or
vpaddw
jmp
pop
loopne
fstp
and
fimul
fsubr
mov
rcr
dec
ins
enter
sub
jl
out
push
fcom
jbe
movs
std
loop
cmp
cmp
lea
fcomp
das
and
inc
push
fisttp
fnsave
ja
push
xlat
sbb
int
out
mov
outs
outs
jb
bound
ins
cmp
retf
mov
mov
aam
mov
cmp
or
(bad)
pop
push
cs
mov
imul
or
adc
xchg
push
(bad)
in
sbb
or
add
pop
and
jp
pop
pop
ss
ins
mov
adc
pop
(bad)
jl
popa
push
and
ret
mov
inc
lods
shl
dec
movs
test
popa
or
xchg
push
test
mov
pop
push
xor
add
fcom
inc
sbb
sub
int
test
fcomp
adc
fcomp
mov
sub
aas
fs
in
aaa
and
push
int
rcl
bound
call
fcomp
movs
cwde
repz
fisttp
add
xor
mov
aam
fnsave
xchg
nop
ss
fsubr
and
fmul
xchg
scas
pop
and
add
mov
cmp
fs
lods
(bad)
out
xlat
fadd
xor
dec
pop
lock
jge
or
mov
xlat
adc
dec
ins
dec
ret
loopne
dec
pop
outs
fadd
retf
pop
xor
mov
jbe
psubusb
out
es
call
dec
pop
rol
hlt
dec
dec
retf
js
out
leave
sbb
clc
xchg
push
retf
icebp
and
add
test
xor
in
cmp
cmps
jle
add
jno
int3
loopne
jbe
fmul
movs
es
test
test
fild
push
fcmovne
jmp
fwait
lahf
fsub
xor
je
mov
dec
inc
mov
xchg
repnz
test
push
or
inc
dec
and
adc
gs
dec
int3
fsub
mov
out
aad
js
push
add
pop
in
cwde
ficomp
imul
fidivr
jnp
in
sbb
sbb
fsubr
leave
nop
pop
pop
fcomp
mov
pop
jp
cmp
aaa
mov
(bad)
ja
mov
popa
call
fdivr
or
and
mov
cwde
movs
fs
push
adc
mov
pop
xor
mov
fcom
test
bound
retf
das
inc
jmp
popf
mov
jp
adc
ins
cmp
sbb
fsub
sbb
outs
fdivr
fidiv
cmp
icebp
mov
add
(bad)
mov
cmc
fcomp
or
scas
pop
lock
mov
rcr
cli
loopne
ss
std
adc
xchg
clc
fs
ret
(bad)
or
sbb
jge
data16
test
stos
or
bswap
in
push
fcom
and
sub
fadd
xchg
jp
(bad)
mov
call
and
bound
cmp
sbb
jns
fisttp
xchg
call
cs
add
repnz
fdivr
mov
aad
xor
mov
cmc
stc
xor
adc
gs
cmp
fsubr
movs
push
(bad)
je
cmp
daa
or
xchg
jno
mov
xchg
jb
ss
pop
xor
shl
fstp
sub
movs
fsubr
or
jne
fadd
mov
(bad)
call
enter
aaa
shl
push
jne
fadd
mov
sbb
rcl
dec
mov
aad
imul
repz
pop
int
jle
cmp
fdiv
xchg
jmp
fcomp
mov
out
fadd
div
dec
mov
dec
stos
fsub
mov
gs
xchg
xlat
clc
cmp
cld
xchg
dec
push
imul
(bad)
ror
and
addr16
fdiv
ret
dec
mov
popf
fisttp
inc
out
xchg
xor
sub
push
xor
call
cmp
inc
leave
test
mov
stos
repnz
fsub
clc
or
mov
rcl
pushf
push
push
out
fsub
xor
push
fisttp
int3
ins
test
or
aaa
jnp
into
mov
cwde
jmp
or
mov
fdiv
in
aas
fcomp
push
lea
sar
and
cmp
jp
cmp
fsub
test
adc
jl
cmp
add
jmp
mov
xchg
push
fcomp
jbe
mov
fwait
(bad)
sti
ficom
and
lahf
mov
pusha
das
add
pop
push
ins
or
lahf
sub
push
mov
pop
sbb
jno
leave
repnz
xor
and
stos
imul
mov
(bad)
retf
out
ret
es
retf
cmp
(bad)
loope
fcmovnu
sub
jl
pop
fwait
jae
fsubr
lahf
scas
add
push
fsubr
add
sub
mov
das
pushf
test
push
mov
nop
js
fdiv
inc
cmps
xlat
in
xor
push
idiv
les
das
pop
add
sbb
int
mov
mov
mov
sbb
push
jne
pop
dec
lea
mov
mov
sub
jmp
add
fdivr
repz
in
pop
sbb
pop
jge
test
ficomp
fsub
mov
int3
fnsave
mov
mov
callw
pop
mov
pop
push
or
ror
xor
jne
xchg
sbb
dec
nop
out
xor
fcomi
push
test
les
fdivr
cmp
fidiv
jmp
stos
scas
ins
stos
adc
fcom
cmp
fmul
inc
xchg
sub
cs
xlat
push
jmp
push
sti
pushf
push
hlt
fdiv
sahf
adc
stos
and
ja
lahf
retf
mov
sbb
imul
scas
adc
sub
out
adc
daa
lods
sbb
fadd
or
(bad)
arpl
fstp
ret
push
imul
dec
push
mov
outs
test
jb
outs
aas
fcom
ror
into
stos
inc
lods
sub
mov
hlt
cmp
or
gs
loop
js
inc
fild
fadd
test
xchg
push
mov
inc
rcl
push
in
sbb
xor
(bad)
fcomp
jl
add
xor
shr
cs
adc
sahf
cmp
add
jnp
ficomp
or
fdivr
push
int
sar
addr16
or
enter
push
mov
das
(bad)
jns
jb
fsub
cmp
fsubr
loop
out
(bad)
aad
fidiv
push
data16
sbb
inc
cmps
imul
retf
sbb
loope
mov
or
xor
scas
repnz
fcomp
and
jg
fsubr
lods
enter
retf
push
sbb
dec
aam
in
fsub
(bad)
cmp
fsub
comiss
dec
sahf
fadd
mov
int
shr
mov
fsub
dec
sbb
mov
and
inc
(bad)
repz
movs
jbe
call
mov
pusha
leave
(bad)
mov
jmp
jmp
fdiv
xchg
aaa
retf
push
imul
in
lea
xor
mov
cwde
in
fisubr
cmps
dec
je
stos
movsx
add
mov
call
xlat
jmp
xor
cmp
xchg
call
cmp
jbe
cs
sbb
mov
mov
fcomp
scas
mov
fcmovu
dec
mov
inc
adc
rcl
std
mov
dec
jecxz
(bad)
push
into
pusha
xor
inc
sub
retf
loop
mov
cli
fdiv
mov
jge
ds
mov
add
fadd
cld
add
fmul
daa
xchg
arpl
out
in
jo
fld
fisubr
adc
jmp
xchg
jl
aad
enter
sbb
xchg
(bad)
jmp
retf
or
mov
test
push
in
cmp
jmp
(bad)
adc
fmul
lock
add
adc
imul
jne
pop
inc
fcom
mov
cmp
fcomp
ins
test
inc
pop
cmp
pop
scas
mov
fcomp
das
shl
retf
and
pop
fsubr
or
sbb
mov
sbb
pop
fcomp
inc
out
jns
cmc
fcom
cli
push
js
ins
jmp
fsubr
push
mov
mov
das
or
jmp
out
ja
mov
ret
aam
fdiv
fadd
sbb
pop
fsubr
popf
(bad)
sar
cmp
retf
ins
sbb
shl
popa
sbb
pushf
fcomp
cwde
pusha
and
cmp
fldenv
loope
popf
retf
push
mov
std
loop
mov
jbe
(bad)
sbb
xor
add
sub
pop
pop
push
xor
retf
pop
xor
xchg
pusha
clc
mov
rcl
dec
cmp
test
ror
fdivr
add
cmp
ins
or
fmul
sbb
cdq
xor
dec
fadd
test
repz
mov
fsubr
mov
cdq
pop
and
xchg
outs
frstor
pop
fadd
in
mov
psrlq
loop
cmp
div
push
or
in
cmp
fmul
aad
xchg
fistp
xor
cwde
mov
icebp
mov
jmp
or
inc
mov
test
xchg
repnz
push
push
cmp
lea
scas
mov
sbb
mov
pop
in
out
movs
icebp
fmul
jmp
fdivr
jb
arpl
and
(bad)
fsubr
cs
fcom
pusha
aad
push
xchg
jmp
mov
fdiv
sbb
dec
add
or
pop
cmp
add
popa
mov
retf
mov
pop
lahf
fadd
push
fsub
xor
in
adc
dec
fsubp
rcl
push
je
cwde
daa
std
and
adc
add
xchg
dec
arpl
shl
xlat
inc
leave
sub
cmp
fcom
mov
push
fdiv
pop
jns
xchg
xchg
xchg
out
jl
(bad)
fcom
sub
push
cmp
es
cwde
dec
stc
xor
sahf
lods
into
retf
neg
fld
push
test
clc
dec
sbb
sub
fimul
mov
fcom
cli
and
(bad)
and
sbb
mov
dec
xchg
dec
fdivr
push
jl
jmp
loope
imul
fdiv
in
pop
jge
add
ins
fldcw
scas
movs
push
imul
js
adc
in
add
xor
cmc
enter
adc
popa
arpl
loopne
xlat
hlt
add
cwde
test
leave
bts
jecxz
pop
aad
push
shl
cmc
mov
fdivr
out
inc
sub
xchg
cmp
mov
dec
push
in
repnz
adc
sar
pop
and
mov
mov
adc
add
(bad)
xor
sub
fstp
loope
dec
xchg
loop
xchg
mov
or
add
ss
jecxz
(bad)
lock
idiv
outs
fdiv
push
sbb
int
(bad)
push
in
out
fsubr
or
fdivr
inc
test
leave
call
xchg
mov
cwde
rcr
call
add
mov
xchg
stos
sbb
push
test
adc
sub
movs
cmp
inc
pop
pop
xor
jns
fcom
jno
push
cmp
stos
loopne
scas
push
add
ja
sub
dec
in
sbb
mov
adc
ins
sbb
cmp
bound
or
imul
(bad)
out
aam
ja
in
push
pop
stc
xor
retf
(bad)
fmul
inc
dec
outs
push
push
sbb
mov
(bad)
jg
movs
lds
xchg
add
(bad)
mov
xchg
das
pop
xchg
mov
out
fsub
add
pushf
fidivr
jbe
loopne
call
enter
xor
adc
fadd
leave
out
inc
mov
out
fsub
pop
not
fdiv
mov
mov
pop
sbb
xlat
jp
or
pop
ret
pushf
stos
fidivr
ret
fadd
pop
inc
sbb
retf
popf
stos
mov
xor
call
cmps
jo
clc
jle
push
hlt
sub
mov
out
cmp
sub
xor
jb
aad
xchg
cli
xchg
xchg
dec
mov
aam
in
xor
mov
inc
xlat
push
add
(bad)
xchg
dec
xchg
jns
std
inc
(bad)
mov
loopne
jne
fdiv
aam
mov
cmp
stos
mov
adc
pushf
leave
mov
or
shl
ja
cmps
lock
adc
pop
fs
or
adc
add
icebp
into
pop
jge
dec
retf
popa
clc
fdivr
adc
jmp
(bad)
fcom
movs
xor
mov
loopne
or
fsub
pop
lea
fmul
mov
ins
leave
cdq
pop
shl
push
pushf
fadd
xchg
sbb
push
lods
mov
sub
movs
add
js
xchg
mov
fadd
jmp
inc
add
(bad)
ins
fmul
cmc
xchg
nop
or
xchg
lahf
loopne
dec
movs
fdivr
(bad)
mov
pop
and
data16
ds
cwde
shr
cmp
cmps
fcomp
cmp
xchg
pop
ja
pop
add
mov
retf
sti
leave
dec
bnd
clc
iret
mov
stos
(bad)
cwde
and
jmp
xor
imul
(bad)
push
retf
lahf
cld
pop
xlat
fadd
inc
mov
fdivr
sbb
mov
icebp
sub
out
xchg
call
and
mov
outs
mov
mov
lock
out
mov
add
jmp
fsub
pop
clc
loop
das
loopne
call
(bad)
dec
jecxz
pushf
(bad)
fsub
test
and
bound
int
inc
xlat
jns
jge
imul
sbb
mov
inc
jp
(bad)
mov
retf
xchg
mov
ja
fst
mov
dec
adc
in
and
fdiv
aaa
jge
jo
jb
int3
das
in
hlt
xchg
leave
out
sub
cmps
pop
sub
fstp
xchg
adc
inc
(bad)
push
pop
and
shr
(bad)
sahf
popa
push
imul
dec
fadd
adc
mov
fadd
cmp
dec
push
out
mov
aad
or
pop
cs
mov
popf
pop
or
fmul
jl
shr
repz
pop
pop
bound
ffree
mov
loopne
sbb
cli
fs
cmp
nop
iret
leave
call
xlat
mov
pop
mov
sbb
outs
push
sbb
sub
fmul
mov
outs
fcom
into
bound
add
cdq
jge
mov
fdivr
xchg
fsubr
fadd
retf
int
loope
xor
jae
or
sbb
test
lods
or
xor
xlat
and
test
fdiv
push
mov
lods
mov
mov
sbb
movs
fdivr
sub
and
fsub
sbb
lds
fstp
sub
(bad)
inc
mov
xchg
jg
sub
xchg
push
cmp
pop
xor
xchg
xlat
mov
inc
fmul
mov
or
adc
paddusw
popa
adc
push
daa
iret
inc
fmul
and
mov
sbb
xor
sbb
and
mov
xchg
loop
retf
addr16
cmp
jmp
in
mov
mov
mov
leave
into
jp
xchg
mov
jnp
or
test
nop
dec
xlat
clc
adc
mov
fist
sbb
mov
clc
and
out
addr16
pop
and
sbb
mov
fwait
lock
fcomp
sub
scas
add
xor
std
leave
or
test
lock
mov
fmul
bound
xor
fwait
mov
pop
scas
ds
jno
cmp
mov
(bad)
add
xlat
in
jbe
adc
push
ins
mov
inc
dec
jle
cli
mov
(bad)
fcom
dec
or
jb
xor
or
cs
fcomp
mov
out
popf
ror
leave
mov
xchg
rcr
mov
addr16
fsubr
and
cwde
sbb
or
js
xchg
movs
adc
mov
cmp
xchg
push
mov
rcr
js
sbb
or
test
inc
loopne
inc
test
cmps
push
pop
mov
add
das
inc
xlat
aad
cld
popfw
xlat
shl
in
repnz
ror
mov
mov
cs
xchg
jne
push
ror
outs
popf
push
gs
fdiv
outs
jp
cmp
and
and
add
retf
sub
dec
jl
xor
jo
fiadd
mov
or
retf
imul
dec
daa
jle
add
or
jp
ins
jb
or
cmp
jge
ds
cmp
or
fnsave
and
or
mov
ins
jmp
sub
and
sbb
in
cli
cs
aam
and
jmp
mov
ret
adc
clc
mov
enter
pop
or
bndstx
test
outs
mov
hlt
add
(bad)
sbb
or
int3
push
leave
pusha
(bad)
(bad)
pop
sbb
add
jmp
and
jb
xor
retf
or
dec
dec
jle
push
fistp
jg
jb
or
int
mov
mov
call
push
xor
int
test
pop
xchg
ja
pop
cmp
add
and
sub
jo
or
les
mov
sub
out
push
jo
sub
add
or
add
cld
into
pop
xchg
mov
push
adc
sub
fsubr
jno
sub
jl
dec
shl
pop
xchg
inc
push
sub
bound
fistp
add
mov
pop
or
or
inc
cmp
jo
jle
jb
jnp
movs
adc
jl
jmp
jmp
int3
aas
ins
aam
fwait
jnp
and
jle
repnz
lods
push
and
popa
mov
lock
add
outs
add
mov
push
imul
out
push
adc
pop
movs
or
inc
fs
lods
cwde
xchg
xor
outs
into
dec
sub
pop
pop
xchg
jp
xor
inc
arpl
sti
add
push
dec
ins
and
scas
mov
sbb
mov
and
jo
adc
outs
loopne
ret
and
loopne
pop
cmp
and
ds
mov
imul
ja
jb
cmp
leave
scas
dec
and
jae
and
dec
and
cs
jo
scas
xor
jge
xor
adc
adc
add
in
add
fcomp
dec
cmps
ins
dec
lock
cmp
sbb
shl
sub
pop
adc
push
adc
pushf
imul
dec
jle
movs
pop
pop
and
cmp
push
aam
adc
push
inc
push
jl
stos
gs
push
bound
enter
nop
jno
push
add
bound
dec
sub
xor
jo
ds
jl
cwde
jbe
jmp
scas
sbb
mov
adc
lods
out
jl
pop
cmp
movs
jl
jp
nop
inc
es
jo
lock
outs
in
clc
ror
int
popf
xchg
jb
jno
inc
or
ret
call
xchg
mov
je
pop
movs
mov
bnd
or
(bad)
scas
rcl
pusha
xchg
gs
cmps
jbe
pop
cmp
add
sub
and
cld
push
jo
dec
mov
and
or
inc
or
push
test
sub
pop
(bad)
retf
pop
and
es
into
scas
nop
or
and
mov
idiv
outs
pop
xchg
xor
sub
ins
add
cdq
jl
ja
lods
and
loopne
or
or
(bad)
scas
and
(bad)
scas
imul
jo
call
sub
xchg
call
shr
jnp
or
pop
shr
sub
push
mov
(bad)
fbstp
adc
mov
int3
xchg
sbb
sbb
and
push
addr16
jb
imul
inc
pusha
mov
jle
out
or
jo
(bad)
mov
outs
adc
push
mov
push
movs
outs
lahf
je
jp
cli
lahf
mov
sbb
add
scas
sub
shr
adc
ins
pop
cdq
sub
cmps
call
hlt
pushf
gs
fwait
pop
sub
push
clc
dec
cld
xchg
cmp
in
mov
into
or
cs
sub
jo
inc
out
iret
cs
push
cmps
fisub
sub
dec
nop
push
mov
or
ja
sahf
push
int3
or
add
mov
push
jle
pop
stos
cmp
cmp
add
ja
into
(bad)
sub
lds
pushf
sub
ja
xor
xor
jnp
mov
ins
inc
cwde
ins
fwait
mov
psubd
sub
sub
jp
sbb
xchg
sar
outs
dec
fwait
cli
sub
jae
js
xchg
(bad)
mov
and
sub
pop
cmps
sub
repnz
je
jle
jl
and
adc
cli
repnz
nop
lods
aam
or
mov
cs
mov
mov
add
cld
lods
jnp
mov
(bad)
loop
adc
sub
inc
(bad)
jmp
jg
fwait
xchg
outs
retf
jo
or
jno
outs
in
cmp
jecxz
mov
and
imul
out
lock
push
jg
sti
sbb
outs
mov
xor
jg
xor
loope
mov
inc
js
mov
adc
daa
mov
and
(bad)
cld
sbb
push
dec
jge
movs
jmp
sub
dec
(bad)
sub
xor
push
mov
loop
and
inc
mov
cld
mov
movs
mov
inc
jbe
rcr
in
cmps
xor
and
ja
and
jp
hlt
out
jge
je
add
push
fdivr
dec
push
mov
hlt
(bad)
jle
gs
in
cdq
xor
addr16
pop
jns
test
mov
sub
cld
in
lods
push
jno
sub
and
push
mov
mov
mov
nop
xchg
xchg
xchg
jns
jl
jns
movs
(bad)
and
lahf
ins
jbe
loop
test
adc
jo
test
and
addr16
pusha
les
sub
pop
xor
jb
dec
hlt
jno
test
enter
jl
pusha
movs
mov
out
nop
ins
jp
dec
call
and
(bad)
jl
pop
iret
jl
jmp
sub
mov
jns
sbb
imul
imul
(bad)
cmp
inc
adc
mov
test
dec
and
adc
cmps
cmp
mov
and
mov
jge
bound
mov
dec
movs
sbb
push
adc
data16
sti
int3
or
(bad)
and
push
sbb
outs
imul
repnz
retf
test
mov
into
push
sti
fdiv
sti
es
icebp
out
pop
les
cli
test
push
jno
out
(bad)
out
call
push
test
movs
push
movs
jl
push
lods
fmul
loopne
rcl
inc
and
(bad)
or
gs
xor
inc
sub
jae
mov
xchg
mov
push
ins
cmp
adc
jmp
repz
sbb
or
retf
enter
sub
leave
fsubr
push
(bad)
dec
cmp
jno
sbb
adc
(bad)
adc
inc
rcr
fisttp
mov
jns
popa
movs
loope
push
nop
fwait
dec
and
(bad)
pusha
mov
xchg
push
mov
repnz
or
mov
cmp
jo
inc
(bad)
fimul
dec
rcr
lds
inc
pop
dec
sar
outs
ins
(bad)
fucomp
dec
enter
pop
fadd
or
dec
push
retf
cwde
(bad)
cmp
mov
mov
adc
and
imul
ins
add
int3
(bad)
int3
ins
mov
ret
retf
retf
adc
enter
mov
leave
jne
add
cmps
jo
lahf
mov
jns
scas
xor
jbe
fadd
mov
fmul
cdq
add
cmp
(bad)
push
mov
test
stos
inc
cmp
or
xlat
scas
add
dec
or
inc
add
adc
fisubr
or
nop
pop
(bad)
cwde
ja
add
arpl
ss
cmp
arpl
ins
add
jge
sbb
or
ret
sbb
popf
rcr
jns
test
sbb
or
enter
bound
fs
shl
sbb
sub
mov
div
dec
rol
stos
int
jbe
sub
ds
add
xor
dec
sbb
jo
add
rcr
stos
and
cmp
test
mov
pop
ror
fs
pusha
jb
outs
cmp
push
xchg
adc
std
fcomp
sub
inc
das
retf
push
push
jae
pop
mov
aad
mov
pop
mov
dec
fsub
ret
mov
fdivr
cmp
icebp
imul
fimul
scas
in
out
adc
xchg
out
stc
mov
add
jnp
je
or
jl
cmp
dec
pop
xor
ficomp
ins
outs
mov
rcl
int3
icebp
outs
jle
push
cwde
jns
push
rol
ret
adc
mov
sub
push
inc
and
clc
mov
in
fcmovu
hlt
fidivr
or
stos
bound
(bad)
mov
inc
int3
adc
clc
jb
cmp
push
cmp
mov
and
mov
and
inc
adc
pop
cmp
inc
mov
(bad)
fisttp
cld
cld
mov
adc
jle
adc
pusha
cmp
sbb
push
push
add
mov
pop
dec
cmp
xchg
dec
mov
push
adc
cmp
mov
fdivrp
in
cmp
ficomp
repnz
cwde
dec
fld
xchg
leave
enter
add
mov
xor
nop
cmps
ror
mov
into
call
rcr
sbb
pop
movs
sbb
cmp
inc
cld
(bad)
jl
adc
jns
das
int
xor
sbb
(bad)
movs
out
add
cmp
daa
mov
(bad)
mov
pop
cmp
add
pop
retf
inc
xlat
xchg
iret
pop
fmul
fwait
inc
sub
jmp
push
lahf
jg
or
arpl
sub
cs
sub
cmp
ret
sub
xor
push
bound
sahf
and
jb
in
xor
aad
imul
mov
js
aas
fnsave
pop
cli
ficom
push
in
arpl
fisttp
dec
cmp
dec
adc
mov
adc
jbe
fsub
xchg
mov
xlat
pushf
sbb
lea
sbb
nop
inc
push
xor
ss
aam
add
call
leave
pop
mov
jecxz
or
xchg
daa
lea
stos
mov
fwait
inc
mov
jne
mov
pushf
imul
xor
dec
(bad)
hlt
push
test
psubsw
xor
mov
ins
push
mov
sub
iret
push
sub
jecxz
(bad)
mov
test
pop
xor
mov
mov
call
(bad)
or
mov
fcomp
fidivr
xor
ret
mov
and
enter
fisubr
test
xor
push
cmp
mov
popa
(bad)
dec
adc
mov
and
test
dec
inc
dec
cs
fcmovnbe
or
jge
add
adc
imul
jp
or
pop
add
retf
xor
push
add
jbe
call
sub
out
arpl
cmp
ss
icebp
push
nop
iret
lock
aad
stc
xchg
xchg
cdq
mov
sub
popa
adc
mov
int3
(bad)
test
jl
or
ror
mov
add
cmp
pop
or
pop
and
test
sti
gs
push
pop
push
xlat
mov
out
cmp
cmp
dec
mov
xchg
gs
dec
loopne
push
push
pop
mov
sbb
add
repnz
sbb
xor
loopne
jmp
mov
test
and
cmp
fs
mov
and
mov
push
or
add
inc
jg
int3
push
sbb
dec
mov
in
push
mov
mov
mov
not
loop
xor
test
xchg
adc
fsubr
dec
int3
mov
sub
mov
jmp
cmps
add
sbb
sub
and
ins
cli
sbb
mov
lods
and
retf
mov
ror
xor
cmp
sub
je
sub
xor
pusha
pushf
call
bswap
not
lea
jmp
pusha
call
lea
call
rep
mov
pop
mov
push
lea
jmp
cmc
pushf
movzx
rcr
mov
mov
bt
push
add
push
pushf
push
bt
mov
cmp
jmp
lea
jne
dec
rol
sub
not
mov
sar
add
add
pushf
test
jmp
sub
jmp
and
push
int
fsubr
push
cs
sbb
loop
leave
lds
sar
mov
sub
inc
les
std
or
lods
dec
mov
push
cli
jns
or
sub
or
push
adc
cmp
cmps
in
pop
(bad)
xlat
fidiv
(bad)
mov
sbb
lahf
outs
pop
into
sbb
push
js
and
clc
mul
pop
xor
sub
iret
ror
pop
out
push
inc
retf
xchg
(bad)
push
cdq
movs
add
icebp
xor
inc
xchg
scas
shl
lahf
ins
sub
imul
pop
icebp
int3
xor
ins
aaa
cli
(bad)
clc
jmp
add
dec
ins
push
jb
bound
outs
fs
outs
arpl
popa
addr16
lea
call
push
jmp
test
push
shr
fadd
cmp
cmps
xor
jmp
fdivr
pop
xchg
daa
shr
imul
sub
jnp
add
shl
lods
sub
jo
call
and
outs
scas
popa
push
int
jae
les
adc
push
mov
cmp
loop
punpckhwd
push
mov
pop
add
sahf
and
rol
cmp
xchg
mov
(bad)
pop
nop
xor
movs
mov
cmps
dec
jl
dec
out
and
dec
push
and
dec
mov
das
dec
into
in
retf
xchg
mov
adc
push
inc
cli
sub
jb
xchg
dec
mov
pop
ret
fdivr
inc
or
jmp
pop
cwde
arpl
sub
adc
stc
call
mov
cmc
clc
or
pusha
lea
je
lea
lea
pusha
jmp
push
push
lea
jae
test
cmp
cmc
cmp
push
call
hlt
xchg
je
xchg
movs
add
or
ss
mov
xor
or
adc
gs
mov
iret
push
repnz
adc
adc
(bad)
lahf
inc
lds
dec
or
stos
jg
jge
aaa
sub
mov
aaa
dec
js
hlt
mov
vhsubps
(bad)
cmp
je
dec
push
or
jg
jmp
inc
mov
xlat
add
les
in
lods
sbb
or
sub
out
into
popa
cdq
cmps
out
les
or
push
stos
rcr
push
call
jmp
mov
(bad)
out
cmps
fdiv
push
dec
(bad)
cs
stos
push
pop
int
add
(bad)
cmp
push
mov
fstp
int3
jmp
cmps
test
cmp
in
dec
fmul
std
cli
mov
clc
lods
in
jns
lahf
test
xor
aam
jle
push
inc
int3
pushf
inc
adc
dec
call
mov
popf
sub
cmp
inc
mov
call
jbe
(bad)
cmp
adc
stos
or
fwait
mov
jp
cdq
push
mov
iret
call
call
retf
bound
outs
xchg
in
jae
nop
add
mov
xor
fsubr
aaa
inc
jo
xchg
dec
mov
loop
and
sub
push
adc
sbb
mov
addr16
outs
and
add
test
adc
and
push
aas
je
aam
ss
push
(bad)
dec
std
dec
in
mov
xchg
fstp
popf
out
xor
loopne
inc
aaa
cmp
jecxz
push
pop
fimul
pop
jb
rcr
(bad)
xchg
mov
sbb
jge
mov
lock
fwait
xor
ret
fisttp
push
pop
pop
mov
inc
ins
mov
gs
xor
mov
mov
push
sar
pop
pop
mov
mov
sub
inc
(bad)
adc
jns
imul
inc
mov
lods
jg
and
je
inc
inc
sbb
dec
cli
repnz
das
jmp
jg
mov
mov
aas
aas
pop
push
nop
lds
lods
test
ret
xor
fcmove
hlt
lea
cs
aas
jmp
or
call
out
cdq
repnz
and
jp
inc
push
jne
xchg
data16
call
popa
icebp
sbb
inc
add
js
cli
hlt
scas
rcr
je
into
dec
xchg
or
push
mov
int
clc
cmp
pushf
lea
jbe
bsr
xor
sub
shld
adc
movzx
mov
movzx
bts
mov
sub
sub
add
ror
pushf
sub
pusha
shr
shl
shl
movzx
stc
mov
cmp
call
lea
mov
not
movzx
mov
pushf
call
mov
or
add
shl
bts
add
lea
bsr
stc
mov
call
dec
or
mov
test
stc
push
and
jmp
mov
pushf
lea
jae
cmp
stc
sub
pushf
pushf
lea
call
push
lea
jae
setae
pushf
mov
pushf
inc
not
inc
jmp
xchg
mov
jnp
stc
cmp
xor
cwde
fcomi
popa
inc
outs
xchg
mov
sbb
xchg
xlat
sar
test
mov
push
adc
sar
lahf
push
iret
jnp
cmp
lea
xor
jg
jno
imul
gs
sub
or
inc
dec
add
inc
(bad)
xor
movs
xchg
mov
fild
(bad)
pop
dec
xchg
out
fdivp
ficomp
sar
mov
fisub
sbb
lea
jo
(bad)
dec
inc
sahf
movs
inc
(bad)
or
or
stc
xchg
xor
arpl
and
int3
mov
fsubr
pop
dec
push
cli
push
jmp
add
push
cmp
sub
call
cmc
cmp
jmp
pushf
sub
pushf
mov
rep
pushf
pop
mov
push
pusha
pushf
lea
jmp
outs
je
jae
jb
ins
cs
add
mov
cmp
mov
add
mov
pop
fld
or
xor
dec
adc
leave
test
test
xchg
and
icebp
mov
push
pusha
cmp
add
shl
pop
arpl
xor
(bad)
mov
hlt
in
ffree
rol
inc
es
ret
pop
test
mov
in
push
inc
mov
xchg
pop
sub
dec
frstor
inc
lahf
imul
inc
scas
mov
sbb
push
shr
dec
mov
pop
xchg
int3
cmps
sbb
ret
lods
push
jmp
cmp
and
mov
xchg
add
(bad)
(bad)
in
stc
xor
movs
add
jns
jle
repz
scas
call
fdivr
mov
fcmovb
inc
popa
pop
es
jge
xchg
int3
mov
fadd
sahf
cld
sub
fisttp
push
pop
sbb
xchg
call
btr
rcl
push
xor
shl
mov
stc
pushf
not
mov
push
call
enter
push
int
inc
leave
into
push
(bad)
shl
adc
jmp
ret
out
adc
test
shl
scas
repz
sbb
scas
xor
cwde
xchg
scas
repz
push
cmp
mov
aas
pop
xchg
imul
retf
lds
adc
jp
or
(bad)
sub
in
in
add
ds
leave
std
frstor
lahf
jb
pop
inc
xchg
mov
gs
js
pusha
(bad)
fwait
adc
dec
je
popf
dec
pop
test
sub
stos
push
xor
mov
xor
ret
dec
push
daa
adc
movs
sbb
or
xor
mov
mov
leave
jns
rol
int3
das
hlt
dec
xor
or
push
dec
movsx
push
jmp
iret
adc
aas
push
iret
mov
repnz
ret
mov
popf
jp
sahf
fcomp
nop
xlat
sbb
pop
mov
ja
and
mov
test
test
push
neg
(bad)
ds
mov
mov
fsubr
and
xor
dec
and
jnp
jg
xchg
retf
push
(bad)
sbb
push
sub
(bad)
repz
mov
dec
or
mov
es
dec
sub
lds
lods
aam
mov
ror
jecxz
scas
jmp
and
sub
ja
xchg
out
pop
push
in
imul
addr16
js
loop
in
jl
mov
jmp
(bad)
call
pop
ret
loopne
inc
lods
pop
leave
aam
int
cdq
push
imul
jmp
mov
iret
xor
xchg
test
repnz
cmp
enter
push
push
aam
fimul
xor
das
(bad)
enter
div
fcom
rcl
ins
mov
mov
mov
fsubr
mov
arpl
mov
jne
aad
pushf
mov
jg
leave
movs
retf
xor
jmp
mov
dec
mov
aaa
jbe
mov
addr16
data16
add
fstp
mov
adc
aaa
lods
mov
or
dec
mov
cmp
xchg
lea
fadd
movs
jbe
mov
fstp
dec
fwait
xor
dec
dec
inc
or
sti
arpl
cmp
pop
mov
nop
mov
fs
rcr
fucomi
xchg
adc
and
ins
push
arpl
jl
sysenter
and
cwde
mov
jecxz
cmp
movs
fsub
bound
xlat
mov
cli
bound
fbstp
jo
inc
mov
out
and
ins
scas
aas
mov
in
ror
movs
mov
sub
and
lods
in
and
push
pop
les
push
je
mov
cld
outs
sti
out
cdq
dec
push
or
and
jae
pusha
dec
stc
pusha
cld
clc
push
popfw
call
imul
sbb
inc
mov
(bad)
cld
adc
sti
sti
jmp
js
jle
cwde
fdivr
fdivr
add
adc
xchg
fld
aad
int
scas
movs
fisubr
inc
cmp
jg
mov
xor
adc
addr16
jp
push
fiadd
aaa
fsubr
pop
out
xchg
fld
aam
jge
and
daa
iret
data16
(bad)
sbb
je
sar
iret
push
xor
fcomi
out
(bad)
outs
adc
and
jmp
mov
mov
inc
xchg
cmp
sbb
arpl
rol
(bad)
pushf
lock
out
loop
test
adc
repnz
dec
or
dec
out
or
mov
dec
cld
call
and
push
push
jae
mov
mov
push
fcmovb
inc
in
shr
add
jecxz
mov
mov
push
push
ins
shl
outs
clc
cmp
mov
mov
lock
mov
fisub
ss
in
jbe
test
add
outs
xchg
xchg
aam
fld
int
mov
jo
push
in
stc
in
in
out
inc
xor
test
cmps
dec
test
shl
inc
add
push
and
lea
adc
adc
retf
shr
mov
cmp
pop
jno
arpl
jne
out
adc
stos
fxch
popa
stos
cli
clc
loope
jb
loopne
shl
test
dec
mov
mov
xchg
xchg
dec
pop
push
adc
xlat
adc
jmp
test
lods
adc
mov
xlat
add
or
out
xchg
mov
mov
bound
sub
cmp
popf
xchg
cmp
push
jbe
aaa
pusha
retf
jnp
cmp
enter
inc
lds
call
popa
sub
aas
or
xor
pop
mov
icebp
call
shl
adc
inc
lahf
outs
or
es
pop
cmp
sbb
leave
fcom
repz
imul
retf
or
(bad)
popf
popf
mov
leave
aaa
pop
push
mov
aam
ret
xor
inc
lea
dec
fstp
inc
pushf
cwde
movzx
mov
pushf
pushf
pushf
pusha
lea
call
mov
mov
pop
movzx
movsx
jg
push
movsx
movzx
push
lea
call
lods
iret
lahf
mov
and
(bad)
popa
pushf
movs
jnp
lock
(bad)
pop
lds
shl
out
adc
loop
cmp
js
sbb
(bad)
popa
aad
aam
fstp
and
xchg
imul
out
aad
lds
mov
push
fst
shr
dec
shl
xchg
lds
test
mov
push
int3
shl
mov
not
imul
or
scas
pushf
or
push
bound
mov
loope
cdq
dec
push
mov
push
das
add
cmp
pushf
mov
push
lea
jb
cmc
cmp
clc
cmp
cmp
pusha
pusha
lea
jae
add
bsf
btr
mov
test
or
ror
mov
lea
rol
inc
xor
mov
pushf
sub
pushf
clc
repnz
push
pushf
pusha
lea
jmp
call
setne
bsf
aad
push
cmp
xor
cwde
cwde
lea
call
lea
je
test
jns
clc
stc
or
pusha
lea
je
btr
neg
sub
shl
neg
neg
shld
mov
or
mov
rcr
bts
ror
shr
dec
inc
mov
pusha
or
jmp
xchg
fidiv
push
ret
aad
outs
xor
shr
mov
(bad)
inc
cli
adc
enter
test
rcr
mov
(bad)
(bad)
mov
push
inc
dec
xor
enter
call
mov
mov
leave
cmps
push
sub
lock
push
ss
test
pushf
sbb
sqrtps
rcr
ror
jecxz
dec
dec
lods
dec
add
inc
push
pop
sbb
or
jl
dec
xor
rcl
pop
test
xchg
jmp
mov
movs
lods
lock
mov
or
dec
es
adc
daa
aad
mov
add
mov
(bad)
cmp
or
icebp
jmp
into
cmp
fisub
sbb
out
xchg
push
neg
fisttp
fcmove
mov
sti
jns
sub
xchg
add
outs
inc
jl
imul
dec
jmp
ss
shl
data16
mov
jmp
inc
cmp
cwde
pop
pop
push
xor
and
gs
cmp
jo
rol
ret
mov
shr
stos
retf
xor
arpl
push
in
and
xchg
mov
fmul
or
jl
and
movs
push
xchg
mov
push
fimul
fbstp
xor
add
add
mov
je
jo
or
or
(bad)
(bad)
inc
pop
mov
add
cwde
pop
imul
xlat
cmp
and
pop
or
push
xchg
fnstenv
aaa
mov
mov
(bad)
or
add
fdiv
arpl
dec
sub
ffreep
and
xor
or
sub
ins
jl
jmp
repnz
std
int
lfs
push
mov
push
test
jp
dec
sar
jno
sub
xor
push
loope
adc
outs
mov
cld
and
or
jle
test
ins
mov
pop
dec
sub
xor
xor
mov
in
push
out
mov
push
pusha
push
div
cmp
jns
out
call
in
in
repz
sbb
push
(bad)
test
inc
stos
xor
in
push
aam
loope
cmc
imul
mov
scas
lea
bsr
push
(bad)
cld
hlt
fwait
push
xor
push
dec
repz
outs
jae
pop
in
push
dec
mov
xor
inc
jnp
mov
(bad)
je
mov
dec
das
inc
loop
push
lea
or
aas
adc
shl
pop
adc
add
test
repnz
or
dec
inc
jp
bnd
mov
mov
rep
bswap
jmp
lea
jne
jge
pushf
mov
stos
mov
lea
jmp
scas
imul
outs
sub
pop
and
xchg
xchg
aaa
jecxz
pop
mov
movs
mov
and
test
jle
or
leave
mov
jle
and
adc
or
pop
push
or
dec
lods
sub
jno
pusha
(bad)
(bad)
loop
jle
mov
sub
cmp
or
sub
shr
mov
fdivr
dec
clc
mov
and
cmp
(bad)
imul
push
mov
adc
inc
pop
xor
sbb
mov
pushf
test
add
fmul
mov
sbb
test
mov
dec
ret
cmp
inc
gs
xchg
in
mov
inc
sub
adc
ja
das
pop
(bad)
out
aam
cwde
adc
sbb
mov
cmp
jl
mov
call
movs
or
adc
cld
mov
cmp
(bad)
in
call
jnp
push
pop
test
ins
mov
mov
jo
dec
stos
add
sbb
jb
leave
ins
xchg
jge
test
mov
scas
mov
jb
jo
mov
xor
or
out
bound
pop
jnp
aaa
cdq
adc
xor
pop
mov
sub
cld
lahf
stc
xor
jbe
cmps
cmps
xor
jle
call
cmp
inc
jge
pop
sbb
pushf
ret
in
mov
ds
sbb
adc
adc
pop
xchg
lahf
inc
pop
push
leave
adc
pusha
xor
cmp
jne
arpl
dec
adc
enter
push
loop
inc
xchg
rcr
push
dec
lods
stc
sub
xor
mov
xor
adc
mov
inc
imul
add
icebp
mov
adc
jb
shl
mov
adc
cwde
(bad)
adc
and
std
addr16
jbe
sub
pusha
stc
push
shr
int
outs
pop
addr16
dec
pop
fnstcw
adc
dec
movs
retf
cmc
sub
jo
mov
fist
sbb
push
fbstp
and
push
outs
hlt
ror
inc
leave
or
mov
pusha
fild
loop
jp
fcom
or
inc
rcr
jmp
xor
inc
cmc
outs
push
mov
or
retf
jne
inc
in
mov
je
mov
or
add
and
sbb
adc
adc
mov
xor
std
out
aad
xchg
push
cmp
mov
cli
adc
adc
cmp
jl
enter
cld
xor
push
mov
test
lods
pop
les
daa
cmp
aad
int3
nop
xchg
mov
dec
int
xor
pop
cmps
sahf
mov
les
and
mov
inc
push
test
inc
(bad)
mov
ret
stc
mov
dec
test
jl
(bad)
arpl
das
enter
ins
aaa
xor
cmp
mov
mov
aaa
imul
aas
cmps
add
mov
push
and
mov
add
adc
pop
push
(bad)
cmc
rol
rol
mov
jmp
das
xchg
cmp
mov
jmp
nop
mov
ret
inc
cli
cmp
pop
adc
sbb
cmps
cli
push
pop
jbe
ds
cmp
xchg
inc
jb
jmp
(bad)
repz
push
ins
mov
and
sti
js
mov
ror
or
inc
push
pop
lea
inc
and
lea
ja
add
mov
jae
add
add
sub
mov
bt
call
xchg
pusha
push
pushf
call
mov
call
mov
fidiv
push
repz
jnp
push
cmps
dec
cli
pop
fmul
mov
and
mov
mov
or
xchg
(bad)
add
push
cli
(bad)
pop
inc
cld
push
mov
test
daa
push
push
sbb
jl
ins
push
and
popf
fld
lods
push
aad
std
jmp
aas
cmp
jle
and
mov
xchg
xchg
inc
daa
nop/reserved
ins
cli
adc
mov
dec
cs
xor
shr
adc
mov
in
jle
xchg
push
lds
ret
ds
mov
cmp
dec
ftst
fcom
push
call
mov
sbb
or
inc
popa
mov
add
and
test
push
shr
mov
je
and
or
jno
lahf
imul
test
test
mov
sub
lds
mov
add
add
adc
lods
dec
or
mov
paddq
cwde
adc
mov
fldenv
lahf
pop
clc
mov
aad
cli
xor
dec
lods
sub
or
mov
xchg
push
lods
inc
sub
mov
out
xor
xchg
dec
mov
hlt
aam
pop
loopne
mov
imul
iret
ret
fdiv
mov
iret
cmps
push
or
sub
sbb
cmp
mov
jae
cdq
inc
les
aad
inc
and
push
jo
out
pusha
push
lea
jmp
std
cwde
rcl
push
nop
pop
lds
push
popa
dec
or
dec
stc
aad
mov
mov
js
or
cmc
rcr
cs
call
xor
pop
std
sbb
mov
aaa
retf
unpckhps
(bad)
rcl
not
push
je
cs
(bad)
lods
or
loop
inc
inc
stos
jp
lods
ins
dec
add
js
jno
xor
and
test
inc
xchg
jne
dec
lock
add
ret
(bad)
cdq
fmul
sbb
loop
push
push
call
movs
add
es
ror
dec
adc
xchg
lahf
cmp
out
aam
ror
cmps
and
mov
out
or
inc
dec
cvtpi2ps
clc
push
pop
test
clc
cmp
push
pusha
push
lea
ja
xor
xor
sar
inc
sub
inc
rcr
rcl
bsr
add
and
mov
shl
sub
mov
push
pushf
pushf
repnz
call
popa
adc
xor
mov
push
sub
sbb
stc
mov
out
adc
or
mov
or
mov
mov
hlt
jno
jne
xor
mov
inc
test
les
add
(bad)
cmp
jmp
daa
in
mov
retf
mov
popa
fisub
push
not
leave
not
mov
xor
jae
dec
add
aas
out
shl
ds
inc
xor
xor
cmp
xor
fs
cdq
ins
mov
pop
mov
(bad)
icebp
pushf
stos
push
cmp
mov
inc
jle
jmp
pushf
clc
call
adc
ficomp
add
mov
and
out
call
jo
xor
jnp
add
stos
mov
jne
movs
sub
push
adc
ins
and
pop
(bad)
jp
ins
mov
stc
add
pop
(bad)
sub
pushf
xchg
ja
adc
inc
lods
and
mov
and
add
dec
jnp
shl
jb
mov
and
int
xchg
sbb
test
pop
adc
int3
in
mov
gs
test
out
push
pop
dec
aad
icebp
push
(bad)
test
es
mov
jae
lods
aaa
mov
scas
inc
clc
push
fnstsw
xchg
cwde
cmp
adc
call
iret
sbb
(bad)
jae
nop
(bad)
faddp
xor
pusha
push
cmp
ss
aas
pop
shl
xor
lods
jp
jmp
mov
leave
cli
lock
ds
mov
cmp
push
pop
cmp
sub
jo
je
pop
inc
pop
add
js
mov
dec
dec
xor
stos
push
jnp
pop
fadd
daa
mov
and
repz
imul
dec
mov
jp
cmp
pop
repz
adc
mov
inc
sti
add
data16
popf
call
mov
mov
push
(bad)
aas
lods
fimul
jae
popf
xor
in
pop
mov
mov
mov
xchg
mov
mov
lods
and
mov
(bad)
fidivr
pop
imul
arpl
xor
ja
sub
push
cwde
push
mov
push
movs
mov
call
adc
and
sub
mov
lea
jae
call
setne
lahf
mov
mov
mov
push
lea
ja
call
test
(bad)
mov
in
cmps
call
add
or
inc
mov
push
pop
shr
inc
and
call
(bad)
aas
repz
pop
mov
sti
mov
push
fs
cdq
into
scas
mov
push
cmp
(bad)
cmc
and
and
addr16
or
stos
popa
pop
jle
scas
rep
sub
pop
shl
(bad)
sti
xchg
mov
jp
idiv
push
faddp
jg
cmp
cdq
ds
cmp
mov
repnz
lea
pusha
call
pusha
lea
jne
cmc
rcl
pusha
movsx
mov
push
stc
pushf
clc
add
cmp
movzx
adc
clc
rcr
sar
mov
jmp
cmc
clc
sub
jmp
mov
push
repnz
mov
mov
pushf
pushf
lea
jmp
jmp
mov
inc
dec
mov
jne
cmp
adc
xor
dec
xor
(bad)
or
out
mov
fisttp
inc
ja
inc
jge
xchg
loope
push
imul
or
jns
push
iret
ret
xchg
push
dec
jns
stc
jle
push
retf
iret
lahf
std
sub
das
popf
inc
or
adc
mov
gs
cmp
jp
cmp
cmp
or
daa
pop
(bad)
xchg
sub
mov
cld
aad
push
fidiv
and
and
push
pop
lods
mov
enter
in
repz
fs
push
adc
cdq
add
sbb
push
mov
sbb
call
jno
pop
fsub
vpminsw
sub
or
cmp
ins
sbb
clc
cmp
pusha
call
hlt
sbb
mov
fs
dec
addr16
jbe
outs
dec
into
mov
in
adc
xor
mov
jnp
imul
bound
lock
loopne
out
cmp
xor
sbb
sahf
jl
(bad)
jle
ror
sub
ror
xor
in
sar
lods
xor
mov
adc
mov
ins
pop
pusha
pcmpeqb
sbb
xchg
pop
jg
jae
mov
or
loop
jg
es
es
sub
cmps
mov
jmp
cmp
cmps
jecxz
call
pop
int3
mov
ret
leave
lea
ds
gs
dec
data16
push
test
out
xchg
jae
mov
out
je
call
dec
add
jmp
mov
xor
or
out
xchg
inc
mov
sar
outs
(bad)
stc
mov
rol
sbb
in
xchg
push
out
jne
(bad)
adc
out
dec
setl
mov
adc
aam
hlt
xor
add
in
popa
imul
xchg
sti
stos
sahf
iret
les
mov
add
(bad)
das
movs
xor
pushf
cmp
(bad)
dec
fistp
add
ins
lea
mov
push
pop
inc
dec
fs
mov
jecxz
bound
cdq
ficom
push
outs
mov
leave
into
push
jbe
(bad)
nop
into
pop
outs
push
loope
push
add
test
(bad)
cs
cmps
add
and
push
arpl
fs
lock
lods
cmps
dec
js
push
xchg
loop
jne
retf
push
add
mov
dec
mov
adc
push
inc
jnp
mov
add
sub
fcmovu
daa
xor
pushf
xchg
cmp
mov
pop
fist
cmps
loop
xor
dec
or
add
jge
or
cmp
or
addr16
call
sub
inc
push
xor
inc
dec
js
into
and
data16
addr16
bound
mov
push
mov
cdq
js
fistp
data16
and
jo
ja
push
clc
inc
add
icebp
int3
cli
mov
sub
push
mov
mov
xor
sar
test
xchg
jne
inc
sar
mov
mov
gs
push
repz
jmp
push
jmp
mov
or
ins
mov
push
mov
(bad)
sub
std
cmp
movs
mov
jmp
sub
push
jge
out
sti
out
add
(bad)
xchg
mov
repnz
or
sbb
jne
adc
add
pushf
pusha
pusha
pushf
mov
mov
call
call
jmp
jmp
lea
call
pusha
adc
pusha
call
call
lea
jae
cmc
pushf
cmp
pusha
lea
jae
call
sub
in
cmps
add
and
shr
aad
cmp
and
mov
cmp
lock
jae
in
(bad)
push
mov
sub
jb
jl
pop
les
dec
aaa
jmp
test
mov
or
add
sub
jl
xor
movs
xchg
test
or
push
mov
or
shr
cmp
xchg
cmp
sub
cmp
mov
fmul
mov
fsub
fwait
jno
cmp
sub
xchg
cmps
lea
aaa
(bad)
xchg
jae
add
test
fild
push
cmp
imul
pop
shl
scas
imul
xchg
fbld
fiadd
push
scas
jg
mov
es
lahf
inc
mov
out
int
inc
icebp
sbb
cmps
jnp
push
jge
cmps
ss
out
aam
iret
dec
mov
cmp
loope
xchg
jb
test
mov
outs
in
pop
push
sub
jmp
bound
rcr
xchg
push
xor
fsubr
jle
es
imul
mov
out
xlat
outs
sti
and
les
adc
jno
add
and
sar
mov
sbb
or
ret
pmulhuw
(bad)
sti
xchg
movs
retf
iret
fst
xchg
sahf
jmp
cmp
dec
js
pushf
mov
pushf
pusha
xchg
call
mov
xlat
push
mov
xchg
sub
pop
xchg
add
jno
cmp
idiv
(bad)
ret
fld
pop
(bad)
sub
pop
cmp
jae
mov
pop
pusha
int
sar
jbe
mov
mov
mov
cli
xchg
add
test
icebp
pop
nop
cli
ret
jle
ins
jbe
adc
or
xchg
mov
js
ds
pop
xlat
ds
push
mov
test
and
push
adc
push
test
in
cmp
and
rol
mov
mov
(bad)
loopne
pop
(bad)
retf
hlt
cdq
mov
xchg
sbb
cmp
push
gs
popf
add
in
(bad)
(bad)
or
aaa
xor
sub
fisubr
pop
std
xchg
jmp
jl
add
lea
jb
call
jmp
push
out
and
(bad)
arpl
push
push
fsubp
leave
repz
jno
test
aaa
mov
loope
std
mov
mov
xchg
jb
add
pavgw
scas
mov
popa
imul
scas
xchg
fstp
sbb
mov
psubsb
jmp
ret
sbb
push
push
cwde
mov
pop
ret
icebp
mov
cmps
sti
frstor
adc
(bad)
mov
daa
lods
test
(bad)
mov
addr16
and
jae
outs
test
fistp
dec
out
jno
(bad)
pusha
je
(bad)
xchg
inc
dec
fild
sbb
add
leave
in
xchg
ss
pop
mov
fnstsw
mul
add
cmps
cmp
inc
in
sub
mov
or
push
push
lods
cdq
mov
test
mov
cmc
jmp
out
push
in
cdq
push
cmp
imul
mov
into
pop
push
je
sub
rol
fs
xor
cmp
cmp
jp
aam
push
in
mov
lods
push
dec
jle
push
xor
xlat
jno
into
mov
jbe
mov
xor
retf
sub
jbe
jo
cmps
xchg
(bad)
int3
push
loopne
or
and
mov
mov
push
xchg
mov
sub
pop
and
mov
xchg
hlt
scas
or
stc
int3
div
sahf
rcl
dec
or
dec
in
sub
sbb
pop
dec
enter
lods
sub
test
jle
fdiv
or
xor
jg
or
dec
ret
sub
out
test
dec
jmp
xchg
mov
aas
ret
lea
pusha
stos
ret
dec
and
popf
cdq
mov
cs
mov
(bad)
sub
xor
hlt
inc
push
pop
fsub
xor
inc
scas
addr16
or
push
jmp
shl
mov
dec
(bad)
push
dec
pop
mov
push
mov
test
daa
rol
inc
and
pop
xor
push
push
jb
add
jl
jbe
leave
movs
adc
(bad)
mov
push
jnp
shl
and
xor
mov
dec
ins
cmp
test
sub
fadd
retf
std
ror
and
push
rcr
jbe
mov
adc
push
fstp
pop
int3
(bad)
std
xchg
lahf
jo
dec
data16
ins
ror
xor
cmp
mov
and
mov
inc
and
inc
jmp
cmc
test
mov
jmp
pushf
jmp
call
pop
xor
ds
aas
pop
leave
mov
lahf
adc
rcl
jmp
shr
xor
dec
dec
stc
dec
test
outs
ins
push
out
cld
inc
push
mov
jbe
imul
sbb
call
mov
jmp
sbb
ss
mov
scas
jge
mov
hlt
sbb
addr16
pop
jp
ficomp
xchg
sbb
jecxz
out
pop
xchg
aaa
xchg
ins
xchg
sbb
test
js
in
jbe
cmps
sbb
pop
test
into
call
mov
sub
nop
daa
add
pusha
mov
nop
inc
popa
sbb
pop
cli
movs
sub
mov
shr
outs
loope
or
pop
pop
aas
jno
mov
pop
out
jb
or
dec
jg
mov
add
fwait
xor
in
fst
bswap
movsx
pusha
mov
pushf
mov
mov
push
push
not
setns
lods
stc
stc
rol
push
test
neg
cmp
clc
call
jmp
shr
pushf
cmp
jmp
lea
jne
btc
ror
inc
jmp
call
xor
inc
cs
jns
xchg
xchg
mov
cmp
jge
enter
dec
into
fwait
je
ja
sbb
mov
lds
lock
stc
in
sbb
test
lock
dec
sub
lea
mov
cmps
jl
or
into
outs
push
dec
je
cwde
int3
cld
inc
cmp
xchg
sar
and
mov
loop
jo
dec
(bad)
in
push
sbb
cmp
bound
cmp
or
ret
adc
jnp
add
out
adc
aad
in
repz
js
(bad)
and
fmul
add
dec
aad
xchg
mov
into
jmp
lds
add
mov
dec
sbb
popa
std
arpl
or
xor
add
push
sub
lahf
cmp
push
movzx
cmc
stc
push
aam
push
rol
bts
cmp
daa
xor
bswap
push
movsx
not
lea
push
mov
jmp
daa
lds
test
jne
outs
pop
mov
fs
sub
(bad)
pop
adc
rcr
dec
(bad)
fimul
movs
mov
xchg
cmp
push
xchg
cmp
movs
sbb
adc
add
popf
out
push
xchg
sbb
inc
sub
inc
and
xchg
mov
inc
jle
push
push
add
(bad)
out
shl
xor
or
(bad)
add
xchg
jecxz
mov
xchg
push
pop
popa
jne
push
dec
sub
inc
(bad)
push
dec
adc
test
cmp
and
leave
pop
fld
mov
jbe
dec
enter
(bad)
jp
outs
dec
lahf
xor
push
xor
imul
dec
(bad)
jae
mov
das
jo
bound
mov
pop
jnp
pop
and
inc
push
sub
inc
gs
pushf
inc
or
xor
cmps
bnd
mov
mov
add
ret
imul
push
pop
mov
mov
mov
mov
int
leave
xor
and
push
rol
dec
pop
sbb
out
aad
imul
addr16
cmps
fsub
xor
aad
xor
add
pop
(bad)
js
retf
les
fidiv
aam
and
mov
jno
out
dec
mov
and
repnz
mov
fistp
into
or
push
mov
or
xlat
mov
sti
xchg
pop
sub
mov
mov
(bad)
jmp
jbe
or
or
xor
inc
jmp
in
sbb
mov
pop
lods
sbb
inc
add
and
push
jmp
pop
xor
sbb
sbb
movs
xor
xor
test
adc
cs
nop
cwde
daa
pop
push
(bad)
(bad)
dec
popa
push
inc
loopne
leave
movs
pop
mov
sbb
scas
add
loope
jns
and
in
sub
sahf
xchg
or
and
push
pusha
je
imul
jecxz
inc
mov
out
inc
sahf
imul
out
pop
popa
aas
jae
cmps
dec
aaa
rcl
scas
add
and
out
sti
retw
ror
cdq
das
pop
sbb
(bad)
cmp
push
lea
ja
lea
not
not
je
pop
bswap
movzx
pushf
movzx
mov
lea
push
call
sub
lea
jno
pusha
pusha
pushf
not
jmp
dec
bound
inc
add
in
jge
mov
xor
add
xlat
sti
sub
add
pushf
inc
mov
(bad)
das
inc
add
clc
jecxz
jb
cdq
cmc
stos
das
inc
add
cli
dec
dec
push
cmps
jnp
cmps
das
inc
add
clc
pop
mov
scas
dec
mov
inc
add
cli
jg
mov
das
inc
add
add
pushf
xchg
out
cmps
das
inc
add
add
mov
inc
xchg
pusha
das
es
add
add
mov
es
add
add
stos
dec
adc
xor
das
inc
add
add
out
movs
push
inc
mov
inc
add
add
sub
xor
add
aad
out
adc
(bad)
outs
xor
add
xchg
mov
popf
das
inc
add
out
or
pusha
jmp
inc
add
cld
xchg
imul
ja
mov
call
push
daa
cli
das
inc
add
add
xor
cmp
inc
add
clc
lods
dec
inc
movs
inc
cmp
add
jb
and
ss
das
inc
add
add
adc
test
(bad)
xor
add
xchg
sub
das
inc
add
lock
jb
inc
add
(bad)
cmc
(bad)
jno
mov
out
das
inc
add
cld
dec
jns
mov
inc
add
cld
mov
mov
(bad)
adc
mov
inc
add
(bad)
fwait
es
mov
iret
das
inc
add
loop
adc
mul
outs
das
inc
add
enter
mov
inc
add
out
movs
xor
fiadd
scas
das
inc
add
imul
nop
test
inc
add
(bad)
out
adc
mov
jmp
sub
mov
fidiv
add
out
idiv
inc
add
rcr
mov
add
out
sub
xor
add
fbld
xor
inc
add
(bad)
jg
pusha
out
jmp
xor
inc
add
add
iret
popf
xor
add
std
leave
retf
xor
jae
inc
add
fucompp
inc
add
stc
sbb
xchg
das
add
jns
add
dec
jo
enter
push
sar
iret
cmp
call
(bad)
mov
jns
xchg
sbb
popf
stos
pusha
inc
jge
movs
xor
and
pop
mov
ror
inc
push
lock
sbb
imul
vucomiss
dec
popf
lods
or
mov
movs
adc
add
and
dec
ret
push
xor
xchg
mov
pop
mov
inc
inc
jle
inc
std
int
pop
pusha
xor
or
sub
jnp
shr
dec
cli
stc
jmp
mov
jmp
btr
xor
sete
jmp
pushf
call
mov
push
jmp
push
cmp
mov
pusha
lea
jae
shr
rol
mov
dec
mov
btc
mov
test
pusha
push
pushf
sub
call
mov
mov
jmp
jmp
lea
call
call
xor
popf
aad
(bad)
int
and
sbb
push
inc
sbb
jge
rcl
fisubr
lock
adc
test
lods
dec
jbe
xor
setbe
dec
mov
add
sub
cmp
or
jge
repnz
ror
ret
in
jbe
iret
daa
sub
pushf
aaa
data16
(bad)
push
mov
xchg
pop
shl
xchg
jmp
jno
jmp
push
pushf
je
dec
dec
out
mov
jns
cmc
outs
std
(bad)
ficomp
enter
repz
mov
aam
mov
mov
pushw
ret
pop
fsub
add
inc
fs
pop
adc
sub
loope
push
imul
icebp
call
test
mov
test
push
and
(bad)
cdq
sub
mov
je
add
pushf
jmp
test
pusha
push
cmp
mov
jmp
shl
clc
and
jb
mov
pop
sbb
pusha
inc
or
mov
std
mov
cli
int
int
mov
mov
shr
jmp
sub
xchg
daa
(bad)
adc
mov
or
div
xchg
mov
sub
call
mov
pop
jbe
add
and
cwd
test
cmc
mov
sbb
sub
rcl
mov
jle
cwde
pop
and
mov
pop
or
pop
in
sbb
mov
inc
pop
inc
xor
mov
stos
and
int3
cmp
and
inc
popf
jl
rcl
neg
aam
cmp
jnp
and
jnp
in
ret
sub
add
repz
and
or
sub
pop
mov
jecxz
pushf
test
push
pusha
pushf
push
lea
je
bt
sub
jmp
call
mov
push
mov
mov
lea
jmp
(bad)
scas
mov
imul
(bad)
test
ss
out
dec
int3
jns
add
pop
outs
xor
pop
jbe
addr16
push
stos
xchg
(bad)
sahf
xlat
bound
pop
test
mov
loopne
sbb
mov
adc
jb
mov
inc
in
mov
mov
inc
cmp
out
loopne
test
sub
and
dec
pop
cdq
shr
mov
sbb
and
jbe
add
ret
pop
and
cld
cs
sti
into
imul
popa
lea
push
hlt
fbstp
jnp
pop
ss
xor
call
pop
popa
mov
sbb
jmp
in
addr16
jmp
pop
pop
in
pop
loop
(bad)
out
(bad)
pushf
fst
test
xchg
imul
pushf
in
add
or
push
push
stos
gs
mov
data16
shl
xchg
dec
and
mov
out
jnp
adc
sbb
adc
repnz
mov
loope
mov
fisubr
dec
push
hlt
sub
arpl
movs
pop
pop
push
xchg
lock
xchg
jnp
popa
ja
or
add
cmc
mov
div
add
outs
into
fcom
call
cmp
dec
push
inc
pop
or
daa
fild
fs
call
bt
jmp
add
jmp
pop
adc
xchg
jne
repnz
shl
scas
inc
push
dec
or
loope
jb
call
movs
outs
or
lahf
movs
cmp
ror
inc
cld
xor
and
sbb
mov
hlt
mov
loop
dec
int3
mov
mov
xor
fxtract
dec
dec
mov
push
call
call
ins
(bad)
xor
scas
(bad)
leave
scas
movs
repnz
popa
hlt
mov
adc
pop
dec
scas
cdq
out
sar
dec
pop
dec
mov
hlt
jl
aaa
in
mov
mov
mov
sbb
dec
or
jmp
(bad)
pushf
movzx
mov
mov
push
pusha
pushf
mov
lea
jmp
push
mov
lea
call
call
lea
call
pusha
pushf
adc
call
call
push
lea
jae
cmc
bt
bt
cmp
pusha
pusha
jmp
not
neg
add
pushf
pushf
mov
mov
push
mov
jmp
dec
cmps
jno
cs
adc
dec
nop
mov
aas
push
cs
sahf
push
sbb
pusha
loop
pop
ds
jae
pop
add
ficom
push
inc
push
cdq
jne
lock
mov
sahf
mov
ret
push
mov
out
ret
stc
(bad)
fcomi
push
dec
in
mov
jmp
sbb
fstp
jnp
mov
outs
mov
adc
jg
mov
int3
jmp
sbb
pop
push
inc
retf
xchg
dec
scas
push
mov
pusha
jl
push
and
push
adc
push
jge
adc
mov
in
jbe
jb
inc
adc
sub
jp
cmp
push
jo
inc
jne
mov
shr
sub
jae
adc
repz
push
adc
adc
sub
sub
add
push
add
and
push
movzx
mov
mov
bswap
lea
pusha
push
xchg
lahf
mov
pop
lea
pushf
mov
pusha
mov
mov
push
push
pop
mov
pushf
push
push
ret
call
inc
jmp
mov
xor
cmp
add
ror
cmc
cmp
xchg
ins
cwde
(bad)
push
sti
xlat
repnz
daa
ret
or
icebp
xchg
ins
mov
(bad)
xor
lock
les
outs
xor
dec
adc
into
sahf
pop
stc
retf
and
sub
inc
cmp
dec
jns
gs
sub
mov
mov
sub
adc
dec
clc
inc
loope
in
call
addr16
jl
stc
or
ins
xchg
inc
je
jp
ror
dec
xchg
or
and
fcmovbe
inc
bt
stc
stc
cmp
push
mov
pusha
lea
ja
not
inc
seta
dec
dec
push
inc
rcr
not
xchg
cwde
ror
adc
mov
jmp
lea
je
call
call
lods
jmp
jae
adc
lods
retf
add
push
add
dec
int
sub
xor
jno
adc
add
aam
adc
test
cmp
test
jo
in
mov
ror
fdiv
sbb
mov
jno
outs
lahf
push
call
lahf
sti
sub
mov
mov
cdq
aam
push
cs
cdq
and
cmp
pushf
pusha
lea
ja
bt
bt
pushf
imul
push
jmp
pusha
lea
call
jmp
push
mov
and
out
aas
fistp
sbb
je
jle
fild
sbb
leave
gs
cmps
inc
ins
adc
push
fisttp
icebp
push
inc
inc
cmps
xchg
hlt
shl
adc
mov
jb
btr
cmp
mov
push
popa
pushf
cmp
scas
mov
pop
dec
sub
and
loopne
lods
xor
xchg
(bad)
xor
jle
in
repnz
sbb
movs
fisttp
fstp
popa
(bad)
js
mov
pop
sub
mov
cld
in
dec
ret
and
stc
addr16
push
sbb
daa
fs
imul
mov
sbb
mov
int
cmps
sub
rcr
cmp
push
popa
sbb
xor
sub
cmp
lea
mov
scas
call
out
fisttp
aam
cdq
and
lahf
add
call
fs
jae
clc
push
xor
mov
lea
call
pushf
pushf
pusha
lea
jae
call
cmp
or
call
mov
cmc
bt
stc
test
call
sete
bswap
lahf
pusha
mov
lea
pusha
jmp
jmp
push
pusha
push
mov
jmp
lea
ja
pusha
add
mov
cmp
clc
stc
or
call
push
or
push
mov
mov
pushf
lea
jne
rol
movsx
cmp
mov
clc
jmp
mov
cmp
jle
int
inc
xor
xor
pop
rcr
adc
xor
adc
inc
in
retf
pop
(bad)
into
gs
ds
jecxz
in
jo
fsubp
xchg
xchg
or
jne
int
cli
shr
add
push
xor
test
cmp
test
push
test
inc
stc
xor
sar
clc
xor
rcr
aam
and
aam
push
push
mov
adc
sbb
pop
dec
inc
imul
sbb
pop
adc
dec
push
pop
xchg
and
push
lods
add
cdq
and
adc
daa
mov
ins
jno
cdq
jl
mov
mov
sub
cmps
push
cld
or
fwait
mov
adc
jnp
(bad)
std
xor
cdq
jne
pop
scas
sbb
pop
add
not
jbe
fnsave
xchg
dec
ret
xor
int3
sbb
cmps
icebp
sub
push
add
mov
fld
sub
push
scas
rcl
cs
push
dec
sar
les
ret
bnd
mov
pushf
pop
sbb
and
dec
push
lea
sar
xchg
ds
pop
mov
enter
mov
sbb
or
xchg
or
fadd
mov
mov
sti
inc
dec
push
popa
xchg
mov
adc
jg
mov
lods
jne
jmp
mov
lds
cdq
pop
ret
xor
dec
jmp
cmp
jmp
outs
je
jae
jb
ins
cs
add
and
call
push
pusha
call
bt
clc
jmp
pusha
mov
pushf
push
lea
jmp
pusha
push
bt
pushf
cmp
lea
jg
pusha
push
lea
ja
inc
sub
lea
add
jmp
icebp
call
jl
js
dec
adc
or
add
idiv
sbb
sub
cld
les
mov
(bad)
loop
xor
jecxz
pop
mov
daa
pushf
sbb
outs
daa
out
lock
add
je
xchg
sub
loopne
hlt
sar
cdq
jge
inc
push
mov
in
adc
jb
sbb
aam
dec
popf
jp
push
leave
hlt
fisubr
dec
popa
pop
add
jae
xor
cmp
mov
daa
retf
loope
xchg
(bad)
fnstsw
xchg
popf
les
push
sbb
mov
imul
in
cld
cmps
imul
pop
imul
push
mov
bswap
out
or
inc
xchg
mov
(bad)
addr16
(bad)
fcmovnu
(bad)
ror
imul
int3
xchg
test
lea
pushf
call
pushf
pusha
mov
lea
ja
cmp
adc
sete
sub
pushf
setns
add
rcr
lea
add
sete
btr
neg
mov
rol
and
sub
rcr
mov
call
cmp
pusha
lea
ja
cmp
add
pushf
stc
call
lock
icebp
aam
mov
pop
dec
and
lahf
jb
jmp
sti
movs
test
dec
ret
mov
inc
sbb
ins
dec
cwde
push
dec
push
jbe
mov
and
mov
cmp
mov
inc
out
jae
add
and
jecxz
adc
retf
adc
int
mov
xor
xchg
stc
lds
clc
cmp
pushf
inc
jmp
cmp
out
repnz
mov
mov
pop
rcr
daa
stos
adc
inc
add
in
inc
fwait
sbb
dec
cmps
cmps
mov
and
or
sbb
or
pusha
bswap
bt
mov
push
cmc
and
test
mov
add
add
test
cmc
push
jmp
pushf
lea
jle
inc
pushf
inc
add
adc
cmp
sub
bt
xchg
movsx
mov
inc
mov
pusha
clc
mov
bswap
cmc
push
mov
stc
sub
mov
push
jmp
not
cmc
sub
push
jmp
clc
bt
test
push
mov
lea
je
push
sub
bt
stc
pushf
cmp
cmp
mov
push
lea
ja
jmp
add
dec
gs
gs
jne
jb
outs
je
jb
ins
add
sti
inc
fsub
cmc
cmp
scas
sub
xlat
fist
imul
aam
or
add
faddp
aas
call
cli
fbstp
cli
(bad)
mov
div
pop
pop
cli
repz
xchg
stos
(bad)
jb
call
jno
xor
mov
lock
cld
es
ja
sbb
mov
sub
popa
cmove
mov
nop
test
jmp
mov
push
dec
push
jne
aas
inc
sbb
or
or
sbb
cmc
cmp
push
mov
mov
call
cmp
jmp
add
mov
pusha
lea
jle
pusha
lea
jne
push
pushfw
pop
call
stc
aaa
xchg
dec
stos
das
call
in
add
pop
inc
fld
dec
or
fsubr
pop
(bad)
int3
stos
in
in
(bad)
sub
cmp
lock
push
into
loop
test
stos
add
pop
shl
push
fcmovnu
scas
retf
mov
inc
daa
and
ret
fld
mov
(bad)
in
add
add
xlat
shr
test
pop
sub
xchg
add
push
and
out
inc
sbb
push
iret
popa
xchg
sbb
mov
std
stc
push
rcr
loop
fcom
xor
es
sti
fbld
pusha
dec
and
mov
outs
mov
sub
int3
pop
cmp
xor
cld
cdq
sbb
adc
ins
or
or
sbb
mov
out
xchg
mov
push
and
lea
jae
and
xchg
jmp
bswap
lea
mov
call
cmp
lea
jb
pusha
pushf
lea
je
pusha
push
stc
cmp
call
xchg
rol
movsx
mov
or
shl
push
shrd
push
jmp
lea
ret
shr
out
sub
dec
xchg
(bad)
out
or
bound
mov
aad
addr16
push
fadd
inc
jns
repz
cmp
xor
jae
mov
inc
and
adc
sti
and
pop
lods
aas
mov
mov
test
add
adc
(bad)
out
movs
xchg
sbb
mov
stos
sahf
sbb
jo
mov
bnd
test
scas
fcmovnb
scas
inc
iret
mov
sub
cmc
cmp
fld
sti
and
add
es
xor
xor
sbb
je
inc
cld
iret
adc
scas
mov
dec
ret
aad
xlat
mov
pop
ss
sbb
into
xchg
lea
movsx
bswap
movzx
mov
push
lea
ja
push
lea
jb
cmc
cmp
jmp
pusha
call
lea
jne
movsx
movsx
movsx
mov
mov
push
pushf
lea
jmp
clc
repnz
jmp
in
sar
aam
jge
in
mov
retf
out
ins
int
ds
arpl
and
(bad)
mov
repnz
sub
mov
retf
mov
pop
(bad)
mov
jmp
inc
mov
aaa
shl
addr16
ins
push
mov
daa
retf
rcr
ins
dec
nop
pop
cwde
xor
mov
push
retf
push
popa
sbb
call
mov
clc
cmc
(bad)
or
push
arpl
lods
arpl
rol
cli
sub
test
stos
xor
cmps
lods
or
push
adc
adc
cdq
sbb
sbb
jne
or
movs
sahf
loopne
jmp
jno
call
adc
mov
xchg
add
push
dec
cmps
lds
mov
add
ret
lods
pop
mov
jbe
sub
(bad)
je
movs
icebp
mov
pop
mov
sbb
clc
shl
es
push
pop
add
adc
movs
clc
mov
mov
xchg
mov
idiv
in
jge
mov
arpl
ins
pop
out
cmps
daa
mov
inc
push
cmps
dec
dec
pop
mov
add
mov
loop
xor
add
cdq
sbb
aaa
push
mov
fwait
sub
pusha
pushf
jmp
fs
adc
and
adc
lahf
loopne
aad
fsub
fisttp
sbb
aam
imul
cmps
inc
sbb
scas
int3
nop
mov
pop
loop
popf
xchg
fs
xor
cmps
call
jl
ja
int3
aam
or
sub
jb
push
dec
xlat
sahf
movs
dec
imul
or
inc
mov
out
scas
xchg
js
sar
sub
cmp
fs
or
xlat
jecxz
mov
mov
adc
or
cli
mov
int3
dec
and
cmp
jo
add
xchg
or
dec
lods
jp
mov
xchg
cmp
js
rcr
sahf
sar
je
scas
mov
cdq
sbb
or
jmp
mov
bt
stc
call
xchg
call
cmp
pushf
jmp
loop
loop
mov
xlat
retf
jo
jae
mov
fstp
(bad)
(bad)
mov
pop
mov
sub
retf
mov
and
fdiv
pop
add
adc
fcom
ds
add
push
ss
cdq
cmp
cmp
push
enter
mov
lods
and
inc
jmp
(bad)
mov
xchg
jb
cmp
xchg
and
inc
test
pop
mov
das
iret
dec
lock
dec
lods
dec
lods
or
cli
shr
jne
and
pop
pop
jnp
aaa
mov
mov
int
callw
out
mov
dec
popf
jb
jle
in
ja
pop
hlt
(bad)
(bad)
push
jecxz
aaa
xchg
ja
cmp
push
mul
fcom
xor
mov
bswap
mov
movsx
jmp
xchg
mov
add
rcl
test
rsm
adc
and
lds
sahf
push
lea
dec
imul
xor
ret
pop
aaa
or
inc
xlat
or
cmps
adc
pop
cli
imul
jmp
jne
xor
movs
push
cmp
fisub
dec
(bad)
ins
fistp
fisub
aas
ins
(bad)
push
push
jbe
add
movs
push
lods
and
pop
cmp
and
dec
mov
out
leave
push
mov
imul
lods
iret
push
and
pusha
and
pusha
cmps
dec
cs
mov
sar
mov
popf
pop
(bad)
ror
leave
jl
out
cli
sbb
push
sub
fld
ins
dec
or
adc
jns
in
add
or
inc
inc
test
jmp
mov
jl
test
ficomp
aam
js
aas
and
push
or
adc
test
mov
xor
stc
test
call
mov
cmp
add
call
mov
rcl
cdq
cmps
sub
or
in
enter
inc
out
jge
mov
and
pop
pop
(bad)
inc
mov
adc
das
sub
fcom
outs
neg
pop
je
daa
jae
sbb
ja
repnz
pop
dec
xor
sbb
xchg
in
inc
xor
les
sbb
cli
out
inc
shl
cmp
inc
(bad)
or
mov
xchg
fs
bnd
es
paddusw
out
data16
xor
jecxz
jg
retf
in
sbb
xlat
jge
std
xchg
mov
sub
sbb
in
cdq
mov
pop
aas
push
inc
je
lea
and
mov
or
stc
pop
xlat
movs
or
sbb
repz
xor
adc
sub
in
add
inc
jb
gs
outs
outs
ins
add
aam
or
stc
cli
bswap
lea
mov
mov
jmp
jmp
lods
pushf
xchg
inc
cmp
mov
mov
mov
out
scas
add
repnz
inc
rcr
pop
pop
jno
cwde
inc
fisubr
mov
mov
(bad)
(bad)
xchg
mov
mov
imul
popf
push
mov
add
sub
(bad)
cmps
out
inc
in
(bad)
cmp
in
jge
xchg
cmp
push
icebp
jg
iret
test
mov
push
lea
pusha
inc
push
push
lods
dec
(bad)
aam
call
mov
out
sahf
(bad)
in
push
xor
ror
mov
or
and
push
and
jp
cmp
lds
int
sar
mov
loope
mov
and
pop
ret
cdq
adc
ds
movs
bt
add
push
mov
call
rep
call
jp
push
movzx
test
xchg
test
bt
clc
xor
cmp
cmp
test
cmc
xor
bt
neg
jmp
jmp
push
pop
pushf
mov
lea
jmp
mov
test
mov
call
xor
cmp
bt
clc
push
neg
jmp
sbb
rol
clc
neg
mov
sub
add
jmp
pushf
mov
pusha
lea
jmp
bt
sub
call
jmp
mov
pushf
lea
call
cmp
jmp
mov
push
mov
mov
jmp
push
pusha
pushf
lea
je
pushf
xor
cmc
call
mov
pushf
pop
jmp
mov
jmp
mov
pushf
mov
mov
jmp
mov
mov
pushf
push
pushf
lea
jmp
push
pop
pushf
push
pushf
push
lea
jmp
call
call
jmp
cmp
mov
stc
xor
test
call
mov
mov
push
pushf
push
lea
mov
lea
jmp
pusha
call
pushf
mov
push
pushf
push
call
push
jmp
push
mov
pushf
jmp
bsf
movzx
neg
add
shld
sub
pushf
not
dec
rcl
shl
sub
bts
neg
btr
xor
shrd
btc
add
shl
test
add
shld
movsx
movzx
pusha
push
test
mov
jmp
mov
mov
pusha
push
lea
jmp
add
movzx
je
sub
cmc
cmc
sub
btr
add
clc
lea
setae
neg
btc
bts
stc
bt
ror
sub
sub
rcr
mov
test
add
call
stc
sub
pushf
add
call
xchg
rdtsc
pusha
rol
mov
lahf
lea
adc
pop
neg
or
pop
rol
pop
cmc
popf
lahf
pusha
pop
mov
bswap
mov
push
mov
pop
lea
jnp
bswap
movsx
pop
movsx
bswap
pop
xchg
pop
xchg
bswap
mov
pop
mov
call
bsr
das
mov
sar
dec
stc
or
mov
stc
pushf
add
jmp
pusha
mov
call
push
mov
mov
jmp
push
call
mov
mov
lea
je
push
mov
mov
call
movsx
mov
test
dec
inc
bt
mov
clc
pushf
sub
call
add
call
xchg
cld
pusha
mov
mov
call
mov
pushf
lea
jmp
bt
clc
jmp
jmp
pushf
lea
bt
cmp
not
push
pusha
xor
clc
pushf
sub
mov
push
mov
pushf
lea
jmp
pushf
mov
pusha
call
mov
push
mov
pusha
mov
lea
jmp
cld
call
shld
mov
bt
pushf
pusha
sub
pushf
mov
call
mov
pushf
jmp
jmp
mov
mov
mov
push
push
lea
jmp
bt
add
call
push
push
mov
mov
pushf
jmp
mov
pushf
mov
pusha
mov
pushf
mov
jmp
mov
jmp
add
outs
adc
adc
add
arpl
add
lock
pusha
or
adc
add
scas
add
popa
lods
add
imul
adc
add
pop
loopne
adc
add
push
xchg
adc
add
fs
add
ins
sbb
adc
add
push
mov
add
dec
mov
add
imul
adc
add
outs
adc
adc
add
fs
add
pop
retf
outs
add
popa
cmp
adc
add
push
xchg
adc
add
popa
or
adc
add
outs
adc
adc
add
outs
fwait
add
popa
cmp
adc
add
fs
add
popa
lods
add
addr16
add
pop
in
adc
add
pusha
std
add
outs
push
add
pop
in
adc
add
arpl
add
pusha
xchg
add
push
add
imul
adc
add
dec
clc
add
push
mov
add
imul
add
imul
adc
add
outs
adc
adc
add
outs
add
pusha
inc
add
lock
pop
pushf
add
dec
mov
add
lock
pop
clc
add
fs
add
push
add
push
xchg
adc
add
addr16
add
pusha
push
adc
add
push
dec
add
pop
loopne
adc
add
push
add
push
sbb
adc
adc
add
pop
push
add
fs
add
scas
add
imul
adc
add
fs
add
lock
push
xchg
adc
add
pusha
std
add
ins
pop
add
arpl
add
push
add
push
add
pop
retf
(bad)
inc
adc
add
push
js
adc
add
pop
retf
outs
push
add
outs
fwait
add
pusha
push
adc
adc
add
pop
retf
dec
inc
add
push
add
lock
pop
clc
add
pop
retf
popa
lods
add
push
add
jb
add
imul
adc
add
popa
lods
add
push
inc
add
push
sbb
adc
add
pop
pushf
add
push
mov
add
ins
sbb
adc
add
push
add
pop
retf
addr16
add
outs
add
fs
add
arpl
adc
add
ins
sbb
adc
add
ins
sbb
adc
add
jb
add
pusha
push
adc
add
outs
adc
adc
add
jb
add
imul
adc
add
pop
in
adc
add
jb
add
pop
loopne
adc
add
arpl
add
pop
in
adc
adc
add
pusha
xchg
add
jb
add
outs
fwait
add
pop
in
adc
add
dec
mov
add
pusha
push
adc
add
outs
adc
adc
add
outs
add
push
add
jb
add
outs
adc
adc
add
push
add
scas
add
pop
in
adc
add
pusha
std
add
arpl
add
addr16
add
dec
mov
add
scas
add
push
dec
add
pop
pushf
add
jb
add
pusha
std
add
popa
or
adc
add
ins
pop
add
jb
add
pusha
inc
add
pop
retf
dec
inc
add
imul
add
outs
adc
adc
add
pop
clc
add
imul
adc
add
push
inc
add
push
add
push
add
push
add
pop
loopne
adc
add
pop
rol
adc
add
arpl
add
push
add
pusha
push
adc
add
arpl
adc
add
fs
add
addr16
add
popa
or
adc
add
fs
add
addr16
add
pusha
or
adc
add
scas
add
push
add
fs
add
jb
add
dec
clc
add
jb
add
outs
add
jb
add
ins
sbb
adc
add
jb
add
pop
retf
outs
add
arpl
push
lea
mov
mov
pushf
lea
jmp
push
mov
mov
mov
mov
mov
pusha
pushf
lea
jmp
cmc
cmc
cmp
pushf
pushf
push
lea
jne
call
jmp
lea
jne
adc
shld
or
ror
mov
bt
pushf
pushf
and
bt
call
sub
push
pushf
call
movzx
call
push
call
pushf
push
mov
pusha
pushf
lea
jmp
pusha
btc
shrd
sub
mov
adc
test
mov
jmp
call
and
mov
sub
rol
inc
mov
push
test
call
call
mov
pushf
clc
sub
mov
pushf
mov
push
mov
mov
mov
lea
jmp
mov
mov
bswap
pushf
call
pusha
stc
sub
mov
lea
jne
clc
pushf
clc
lea
jge
sub
push
xchg
pushf
pusha
mov
mov
mov
push
push
mov
mov
push
ret
shld
aam
call
pusha
call
cmc
pushf
neg
mov
lea
jns
cmc
ror
bt
stc
test
sub
cmp
jle
mov
test
test
sub
pushf
mov
jmp
sub
mov
mov
mov
push
jmp
mov
pusha
push
push
pushf
mov
call
cmp
not
mov
xor
call
pushf
pushf
mov
mov
mov
lea
jmp
mov
mov
pushf
pushf
mov
mov
mov
mov
mov
mov
push
lea
jmp
pushf
push
push
pop
pushf
mov
pushf
mov
lea
jmp
push
cmc
cmp
sub
pushf
mov
mov
mov
lea
jmp
pushf
lea
jne
pushf
clc
pusha
jmp
jmp
not
cmc
push
jmp
test
mov
clc
call
mov
mov
cmp
pusha
jmp
dec
sbb
pushf
cbw
mov
push
xchg
pushf
clc
xor
cmp
add
pusha
test
cmp
xor
mov
stc
neg
push
call
mov
push
mov
pushf
pop
push
push
pop
pushf
mov
mov
lea
jmp
push
jmp
jmp
mov
push
call
ror
inc
cmc
cmc
ror
lea
dec
stc
sub
movzx
mov
sub
shrd
cmp
rcr
mov
rol
mov
add
lea
mov
sbb
bsr
lea
sbb
xor
bswap
shl
add
stc
movsx
neg
bts
push
ror
stc
test
lea
pushf
xor
cmp
neg
xor
lea
ror
pushf
bt
movzx
bsr
shr
btr
mov
stc
test
bswap
call
push
mov
call
mov
jmp
lea
je
push
mov
pusha
push
jmp
mov
call
bsr
mov
call
mov
mov
lea
jmp
pushf
dec
jmp
sub
pushf
call
movsx
cmp
shl
bts
mov
rcr
push
mov
jmp
cmp
stc
sub
test
pushf
and
call
mov
pushf
mov
jmp
mov
mov
jmp
push
cld
pushf
call
mov
pushf
lea
jmp
push
pusha
call
push
pusha
push
pop
push
push
mov
pushf
lea
jmp
mov
push
mov
lea
jmp
cpuid
clc
stc
sub
pusha
cmc
mov
cmp
pusha
push
mov
push
call
bts
daa
mov
jmp
mov
jmp
pushf
mov
push
mov
jmp
mov
mov
call
mov
push
pop
mov
lea
jmp
mov
push
mov
pushf
call
push
mov
pushf
dec
pushf
push
lea
jmp
pushf
mov
mov
pusha
lea
jmp
bswap
mov
movsx
movzx
bswap
lahf
mov
pusha
pusha
mov
jmp
pop
push
pushf
push
push
lea
jmp
jmp
movzx
ror
mov
shrd
jmp
mov
mov
push
push
mov
lea
jmp
inc
cmc
cmc
movzx
clc
cmp
call
push
push
mov
push
call
pushf
mov
pusha
pusha
pushf
jmp
push
jmp
cld
mov
pushf
jmp
mov
mov
mov
mov
pushf
pop
jmp
mov
sub
add
add
rol
ror
mov
pushf
add
push
jmp
mov
xchg
call
call
call
push
pusha
mov
mov
pushf
call
pushf
pushf
div
push
pushf
mov
mov
mov
call
pushf
pop
pushf
mov
jmp
lea
std
push
std
std
mov
cld
cld
push
call
mov
pushf
pop
jmp
call
pusha
mov
pusha
push
lea
jmp
jmp
push
jmp
and
call
mov
mov
mov
jmp
jmp
cmc
rcl
ror
mov
clc
add
pusha
jmp
xor
lea
not
setle
push
mov
push
push
pusha
lea
jmp
push
popf
mov
lea
jmp
add
add
mov
not
lea
movzx
not
xchg
pop
mov
pop
push
movzx
pop
mov
xchg
pusha
xchg
lea
xchg
lea
seta
not
pop
mov
lea
not
jmp
mov
pushf
push
pusha
mov
lea
jmp
inc
xor
mov
test
call
stc
jmp
push
mov
call
aas
mov
neg
ror
cmp
mov
jmp
aam
mov
test
add
jmp
cmp
sub
pushf
test
shr
pushf
mov
pusha
pushf
pop
mov
pushf
call
push
mov
pushf
push
push
lea
jmp
bsr
movsx
mov
pusha
bt
add
pushf
mov
mov
push
mov
mov
lea
jmp
jmp
mov
mov
pushf
pushf
mov
push
lea
jmp
pushf
mov
pushf
pusha
lea
jmp
call
jmp
mov
push
mov
push
mov
pushf
pop
call
div
push
mov
pushf
jmp
das
and
mov
bts
bt
stc
mov
test
test
sub
pusha
mul
pusha
jmp
mov
mov
pushf
mov
pusha
mov
pushf
pushf
jmp
inc
sbb
clc
rcl
mov
push
sub
jmp
bt
add
call
mov
push
mov
push
pushf
mov
pushf
push
ret
mov
cmp
mov
jmp
bt
clc
mov
xor
pushf
pusha
dec
call
sar
not
stc
mov
pushf
cmc
sub
pushf
pushf
mov
mov
push
mov
lea
jmp
cwde
mov
jmp
cmp
pushf
mov
or
lea
jno
pushf
mov
lea
je
stc
xor
test
pushf
cmc
xchg
call
bt
not
jmp
call
add
push
push
clc
not
bt
call
dec
bt
jmp
push
pushf
mov
call
cmc
push
cmc
push
pop
test
add
jmp
mov
pusha
call
dec
push
push
jmp
mov
mov
rcl
mov
bt
add
jmp
stc
add
pusha
mov
push
mov
pushf
lea
jmp
call
sub
sub
lea
shr
pushf
movsx
mov
mov
shl
cmc
cmp
shr
stc
pushf
jmp
pushf
clc
neg
bt
add
call
bswap
mov
shl
sbb
pushf
add
setbe
mov
call
inc
shr
neg
movsx
call
mov
cld
lea
pushf
pusha
std
xchg
jmp
mov
mov
mov
push
mov
lea
jmp
push
mov
mov
call
push
ror
clc
cmp
mov
sub
stc
mov
bt
cmc
bt
sub
jmp
push
pop
push
mov
lea
jmp
rep
add
shl
mov
shl
shr
test
mov
test
clc
cmc
test
push
popf
mov
mov
lea
jmp
pushf
pop
lea
jo
pop
pusha
mov
pusha
lea
jmp
pushf
pop
jmp
mov
mov
pushf
mov
jmp
rcl
cmc
stc
mov
push
cmc
sub
pusha
shr
call
mov
call
jmp
mov
pushf
call
pushf
jmp
call
pushf
call
push
mov
push
mov
push
pushf
lea
jmp
shrd
mov
push
add
pusha
push
lea
jmp
pushf
jmp
call
pushf
pusha
mov
jmp
lea
mov
call
pusha
mov
call
add
pushf
pushf
mov
pushf
pusha
pushf
lea
jmp
mov
bswap
movsx
pusha
mov
push
push
pushf
push
ret
pushf
btr
not
shl
jmp
stc
add
jmp
pushf
dec
pushf
xor
call
dec
lea
jo
rol
neg
ror
and
sub
pushf
push
mov
jmp
call
mov
lea
jle
push
mov
pushf
pusha
lea
jmp
push
mov
push
mov
pusha
pusha
lea
jmp
mov
pushf
mov
push
jmp
mov
pushf
call
mov
add
jmp
jmp
mov
mov
lea
jmp
pusha
shr
push
mov
neg
mov
cmp
test
add
jmp
mov
push
pushf
mov
lea
jmp
mov
mov
push
mov
call
jmp
bt
mov
rcr
or
dec
setl
mov
call
pushf
not
mov
dec
mov
pusha
clc
pushf
ror
mov
stc
pushf
add
stc
cmp
clc
sub
clc
call
call
push
mov
call
lea
jle
lea
pusha
not
mov
cmp
clc
clc
xor
cmc
sub
mov
mov
mov
lea
jmp
rol
neg
dec
dec
shl
xor
call
pushf
call
push
mov
mov
call
lea
pusha
push
lea
jmp
push
pop
push
mov
mov
lea
jmp
push
mov
mov
mov
pushf
mov
pusha
lea
jmp
jmp
pushf
mov
jmp
clc
jp
add
pusha
jmp
mov
mov
mov
jmp
mov
push
mov
jmp
add
call
lea
pop
mov
pop
mov
pop
movzx
pushf
jmp
xchg
mov
setae
add
test
mov
jmp
xor
pushf
call
pusha
pushf
mov
call
clc
add
push
push
mov
push
lea
jmp
mov
mov
push
ret
push
push
pop
mov
pusha
mov
pushf
lea
jmp
mov
call
push
stc
bswap
mov
cmp
btc
sbb
lea
mov
push
rcr
test
mov
test
jmp
mov
push
call
test
shl
pushf
xadd
mov
bts
movzx
xor
xor
adc
jmp
push
push
pusha
pusha
call
mov
mov
lea
jne
shrd
dec
push
xor
mov
stc
bt
pusha
and
call
sets
sar
mov
clc
jmp
mov
mov
jmp
mov
pushf
pushf
mov
mov
lea
jmp
mov
mov
shl
pushf
mov
mov
pushf
pushf
pop
pusha
push
pop
push
pushf
mov
lea
jmp
rcr
bt
lea
call
call
mov
jmp
mov
pushf
jmp
add
call
pushf
jmp
pushf
lea
jb
push
jmp
pushf
mov
mov
pushf
push
pushf
push
ret
cmc
test
cmp
cmp
mov
push
pushf
mov
pusha
mov
jmp
call
mov
push
mov
jmp
mov
mov
mov
lea
jmp
call
sets
mov
push
cmp
clc
clc
add
push
call
push
lea
ja
lahf
xadd
aad
mov
jle
daa
shrd
lea
aaa
das
clc
sub
ror
lea
aas
lea
shl
bswap
lea
and
bsr
mov
sub
lea
mov
mov
bswap
push
mov
pushf
pop
movsx
push
not
std
mov
bswap
ja
not
pusha
lea
mov
pushf
call
mov
push
pop
mov
push
mov
push
lea
jmp
stc
neg
push
mov
stc
add
cmc
stc
mov
add
stc
clc
bt
cbw
push
mov
clc
test
cwde
jmp
pushf
call
adc
movzx
clc
xor
cmc
test
neg
jmp
call
not
test
test
bt
cmp
not
pusha
jmp
mov
push
push
lea
jmp
lea
mov
pushf
push
pushf
pusha
push
ret
lea
mov
push
lea
jle
cpuid
jmp
push
jmp
movsx
mov
cmp
push
popf
pusha
push
push
pushf
lea
jmp
jmp
jmp
xchg
pushf
mov
push
push
mov
pushf
jmp
mov
mov
mov
pusha
pusha
push
ret
test
or
pusha
cmc
cmp
call
pushf
pusha
add
stc
clc
clc
shld
jmp
mov
mov
call
ror
rcr
cmc
cmc
test
sub
sar
bsf
mov
jmp
pushf
pusha
call
pushf
jmp
pushf
lea
jmp
mov
mov
mov
pushf
pop
call
cmp
dec
bsr
shl
mov
rol
sub
ror
mov
neg
mov
pushf
pushf
bt
pusha
add
mov
shrd
mov
mov
mov
push
pushf
pop
mov
push
call
push
push
call
call
jmp
mov
mov
call
jmp
stc
cwde
cmp
mov
sub
pushf
pushf
jmp
add
jmp
bt
pusha
sub
call
jmp
setns
pushf
mov
call
add
jmp
call
mov
inc
jmp
mov
pushf
push
pusha
lea
jmp
mov
pusha
push
pusha
lea
jmp
mov
push
mov
mov
mov
lea
jmp
mov
pushf
pushf
lea
jmp
btr
rdtsc
stc
sub
call
push
stc
add
pusha
call
bsf
bswap
lea
movzx
dec
clc
sub
ror
clc
lea
ror
mov
call
push
mov
mov
call
pusha
not
mov
jmp
bt
cmp
std
popf
pushf
push
lea
jmp
jmp
mov
pusha
jmp
stc
rcl
mov
bsr
mov
cmp
clc
movzx
pusha
mov
test
stc
clc
mov
sub
call
mov
mov
jmp
call
push
mov
mov
pushf
push
push
lea
jmp
mov
pushf
lea
jns
push
jmp
call
mov
mov
jmp
btr
cmp
xor
bts
lea
jo
movsx
rol
mov
pusha
jmp
mov
pusha
mov
jmp
jmp
lea
call
mov
jmp
jmp
mov
mov
push
jmp
dec
pushf
lea
jmp
jmp
adc
sub
mov
add
movsx
bts
shl
lea
adc
bts
sbb
inc
neg
push
mov
call
sar
cmc
pusha
movzx
pusha
clc
xchg
call
pushf
call
seta
add
mov
stc
adc
mov
stc
sub
push
shl
pusha
mov
mov
pusha
mov
pushf
pushf
pop
lea
jl
pusha
mov
mov
push
pop
pusha
push
pushf
push
lea
jmp
mov
push
mov
lea
jmp
push
pop
mov
mov
mov
lea
jmp
push
mov
pushf
lea
jmp
jo
push
pusha
mov
jmp
call
mov
mov
push
lea
jmp
add
test
clc
not
sub
jnp
cmc
neg
clc
pushf
stc
cmc
add
pushf
pusha
clc
pushf
add
push
sub
call
jmp
call
jmp
sub
cmp
test
shr
pushf
pusha
mov
pushf
mov
mov
pushf
pushf
pop
pushf
push
push
pop
pushf
lea
jmp
das
mov
mov
inc
cmp
mov
test
clc
jge
add
call
pushf
push
pop
mov
mov
mov
lea
jmp
pushf
pusha
mov
mov
mov
mov
mov
lea
jmp
jmp
sub
push
shl
call
not
stc
bsf
btr
mov
clc
ror
not
movzx
sub
rcl
rol
mov
ror
pushf
push
pop
pusha
lea
push
dec
call
test
shl
lea
xchg
sub
clc
shl
adc
rol
lea
bsr
and
lea
bt
shld
sub
lea
mov
movzx
pushf
pusha
pushf
pop
lea
xchg
call
mov
pushf
push
pushf
pushf
pushf
pop
call
push
push
pop
push
lea
jmp
mov
stc
cmp
mov
pushf
mov
lea
jne
dec
jmp
push
bswap
bswap
mov
call
clc
xchg
stc
push
stc
mov
pusha
sub
push
call
push
mov
pushf
mov
pusha
pushf
pushf
pushf
lea
jmp
pushf
jmp
push
push
pop
mov
pushf
pushf
lea
jmp
push
jmp
mov
call
sub
jmp
xchg
push
movzx
repz
shl
push
or
bt
xor
push
dec
bswap
push
sbb
stc
setno
mov
xadd
bswap
stc
sub
btr
jmp
jmp
mov
mov
mov
push
mov
push
mov
pushf
lea
jmp
pusha
mov
mov
pusha
mov
jmp
pusha
mov
mov
mov
lea
jmp
jmp
btc
sub
neg
mov
sub
movsx
mov
cmc
clc
test
push
sub
pusha
push
mov
mov
mov
lea
jmp
pushf
pop
jmp
rep
sar
cld
bsf
mov
jmp
mov
pushf
call
mov
call
lea
jne
jmp
push
mov
pushf
pushf
push
pushf
lea
jmp
bt
sub
mov
cmp
pushf
and
pushf
push
push
jmp
mov
pusha
pushf
lea
jmp
lea
clc
push
cmc
cmp
not
bt
clc
push
xor
cmp
test
clc
sub
push
mov
pushf
pusha
push
mov
lea
jmp
jmp
call
pushf
mov
pusha
mov
mov
push
push
lea
jmp
mov
push
mov
mov
mov
lea
jmp
pusha
cmp
mov
test
sub
call
mov
jmp
shrd
ror
bsr
sub
mov
rol
mov
pusha
stc
push
add
mov
push
jmp
jmp
mov
pushf
mov
pushf
mov
call
pusha
jmp
xor
lea
pusha
lea
mov
pusha
lea
jmp
movsx
xor
mov
jmp
xor
jmp
jmp
jmp
cmc
dec
adc
pushf
mov
rcl
add
mov
mov
call
mov
pushf
mov
lea
jmp
pushf
pop
call
mov
push
call
pushf
mov
push
pushf
pusha
jmp
call
add
dec
add
add
push
add
add
add
add
jns
