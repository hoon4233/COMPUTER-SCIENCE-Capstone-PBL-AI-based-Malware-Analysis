ja
sar
jmp
add
adc
push
or
inc
in
jbe
add
xor
pop
or
inc
add
jne
out
imul
xchg
aam
mov
inc
and
mov
cmp
adc
in
or
cmp
mov
adc
push
mov
lock
call
(bad)
call
hlt
icebp
mov
push
push
push
mov
mov
mov
mov
(bad)
std
out
fstp
jne
sub
ret
mov
aas
aaa
int3
sub
jae
pop
or
je
mov
(bad)
out
sub
mov
movs
jo
(bad)
mov
ror
add
push
daa
inc
(bad)
(bad)
sti
cmp
push
ror
mov
lea
push
push
or
push
lea
push
push
sbb
xlat
ins
and
push
push
pop
dec
push
call
xor
hlt
sub
inc
push
or
mov
sub
mov
mov
push
push
push
test
push
mov
std
mov
xor
jmp
push
in
cmp
pop
jbe
mov
imul
arpl
xor
or
cmps
mov
loope
mov
push
mov
inc
adc
and
lea
mov
xor
dec
push
fbstp
pop
mov
sbb
mov
adc
neg
ret
retf
fild
mov
adc
std
fdivrp
cs
pusha
inc
cmp
lea
je
(bad)
xor
fnstcw
mov
in
sbb
test
dec
cmp
push
xor
jne
mov
mov
in
in
or
mov
sub
add
push
sub
inc
ret
sbb
and
popa
psubw
pop
aam
add
movups
sbb
loopne
mov
das
jns
push
jp
add
and
aaa
sbb
iret
je
add
push
sub
jne
xor
cmp
(bad)
lock
cmps
mov
add
push
adc
xchg
cs
mov
jge
into
mov
and
and
lar
shl
jbe
pop
add
mov
pop
and
sbb
arpl
adc
add
out
in
sub
ins
push
push
pushf
and
mov
(bad)
mov
xchg
ret
push
inc
jo
les
mov
sbb
mov
cmps
mov
rcr
push
adc
add
cmp
jns
aaa
test
add
add
sbb
xchg
adc
sbb
outs
add
add
mov
cmp
pop
xchg
fsub
jbe
pop
add
sbb
adc
prefetchnta
sbb
jmp
inc
push
dec
or
jmp
neg
and
ret
ficom
or
pop
ss
adc
cmp
mov
mov
add
pop
mov
pop
ret
push
xor
outs
outs
icebp
mov
pop
mov
lea
mov
or
pop
pop
mov
movups
sbb
adc
mov
push
dec
push
mov
test
jne
dec
push
push
pop
js
sbb
push
push
push
mov
call
adc
test
rol
outs
mov
sub
rcl
jb
push
mov
cmp
dec
mov
jb
mov
pop
cmp
pop
jmp
int3
add
lods
inc
push
repz
xor
mov
mov
sar
push
jno
mov
push
mov
imul
push
xor
xor
fs
or
bound
push
or
sbb
fimul
stc
dec
mov
int3
repz
mov
and
mov
xchg
aam
fs
(bad)
ins
test
push
mov
jp
fstp
loop
xchg
mov
addr16
mov
sti
push
jl
or
push
mov
(bad)
ds
sti
lahf
and
(bad)
jl
cmp
ja
and
repz
movs
and
sub
mov
sbb
cs
dec
xlat
mov
dec
sbb
mov
ins
cmp
mov
mov
adc
aaa
dec
neg
scas
adc
(bad)
mov
in
or
xor
and
xchg
pop
adc
bnd
test
or
into
xchg
mov
or
or
pusha
cmp
je
jmp
arpl
(bad)
cmp
call
sbb
mov
inc
pop
fisttp
movs
fwait
les
add
shr
pop
pop
pop
das
xor
in
sbb
aaa
cs
cwde
pusha
push
add
aaa
jmp
fidiv
mov
adc
mov
push
fwait
adc
test
or
or
dec
loop
je
cmp
push
push
fcom
push
rol
inc
(bad)
and
clc
mov
push
out
and
and
lea
stc
cs
mov
fild
jne
mov
(bad)
addr16
or
mov
pop
je
in
cmp
shl
inc
cmp
cmp
pop
add
mov
fcmovnbe
push
cmp
add
scas
fdivr
or
lods
cmp
mov
cdq
xchg
xor
mov
xor
or
test
xchg
add
dec
lahf
cmps
adc
mov
adc
jl
adc
movs
pop
movs
xchg
xor
rcl
mov
cdq
dec
and
out
(bad)
test
jmp
das
je
dec
je
add
xor
xor
int3
xlat
adc
adc
mov
ficomp
ss
adc
xor
xchg
pop
dec
dec
mov
jo
pop
or
in
frstor
in
push
fcom
test
push
in
sub
sbb
sbb
in
push
push
jg
adc
mov
and
jmp
and
jne
(bad)
fmul
ins
mov
mov
jmp
inc
mov
xor
test
enter
lahf
jae
das
jecxz
mov
adc
and
gs
movs
push
and
nop
push
jae
shl
sbb
dec
popa
or
shr
or
pop
add
rol
dec
add
sbb
clc
add
in
pop
lods
das
add
rcr
adc
jb
inc
mov
mov
sub
je
add
je
dec
adc
push
mov
add
jb
sbb
adc
mov
lea
cmp
sub
arpl
lea
cmps
fs
or
add
sbb
ja
mov
push
or
daa
cmp
pop
push
hlt
xor
ret
push
cmp
inc
pushf
or
out
jmp
ret
dec
cmp
adc
adc
or
pop
sar
aaa
repnz
dec
xor
inc
cmp
or
ins
jno
xor
jecxz
push
les
or
sub
bound
sbb
ja
dec
mov
in
or
jae
test
(bad)
es
inc
mov
pop
cmp
add
fsubrp
cli
xor
jmp
inc
(bad)
enter
sbb
cld
or
fild
jne
xor
repnz
sbb
or
test
mov
jmp
mov
inc
mov
mov
in
arpl
sub
or
sub
adc
cld
out
mov
or
dec
cs
xchg
or
push
aaa
inc
dec
enter
shl
mov
mov
xlat
push
mov
je
je
int3
loop
mov
and
frstor
hlt
ss
cmp
or
out
or
femms
pop
or
cld
movs
push
pop
push
push
push
pop
and
lea
shl
cs
(bad)
pop
cmc
dec
int
jg
mov
adc
and
push
mov
jmp
data16
pop
fdivr
jne
push
jnp
sub
push
add
xor
mov
dec
loopne
es
adc
fnsave
jns
add
(bad)
add
sbb
adc
xor
inc
or
and
ins
mov
mov
popf
inc
adc
retf
mov
sub
push
jne
lea
jnp
mov
or
push
inc
fwait
mov
push
jl
jb
dec
mov
ret
mov
and
lods
mov
dec
ja
push
je
or
push
lds
adc
sub
cmp
jnp
sbb
les
je
adc
sbb
jmp
jmp
xor
mov
add
es
inc
or
xor
add
and
test
dec
sbb
ret
sub
mov
arpl
xchg
aaa
sub
and
les
rcr
ret
and
xchg
pop
adc
or
xchg
ins
sub
mov
or
mov
xor
stos
and
movs
inc
adc
mov
mov
inc
jmp
ds
(bad)
dec
(bad)
or
je
sub
sbb
sbb
cld
jge
dec
mov
add
fist
dec
cmps
jle
pop
push
add
dec
xchg
aas
adc
xchg
mov
mov
inc
jmp
jne
mov
inc
aad
sub
nop
pop
and
push
nop
xchg
cmp
or
adc
(bad)
xor
ret
in
cmps
call
adc
or
and
mov
fs
pop
jmp
mov
sti
xor
add
je
into
add
mov
pop
test
js
clc
shl
pop
and
shl
test
jb
cmc
cmps
jno
loope
out
fist
adc
sub
sbb
add
aam
sbb
cmp
mov
fidivr
pushf
push
shl
(bad)
jle
add
sbb
mov
push
sbb
mov
call
jl
adc
push
push
pop
out
(bad)
stos
gs
xor
and
pop
or
push
pop
xchg
add
pop
push
sub
jg
dec
add
add
shr
rcl
loopne
or
sbb
inc
mov
fs
repz
push
sub
fld
pop
dec
call
outs
ins
jp
jne
cmp
push
add
fiadd
inc
das
fstp
mov
dec
mov
or
inc
add
and
int
ja
and
fldcw
and
pop
sub
imul
mov
push
pop
inc
adc
not
call
mov
mov
inc
inc
retf
mov
inc
and
(bad)
pop
daa
sti
in
ror
add
mov
xchg
in
cli
dec
into
or
(bad)
out
jae
mov
mov
(bad)
add
xor
mov
cmp
mov
stos
sbb
or
push
sub
push
(bad)
fsubr
mov
pop
(bad)
add
inc
sbb
or
sub
hlt
dec
rep
push
mov
inc
mov
mov
push
xchg
or
ss
sti
sub
push
adc
shl
cmp
and
arpl
xor
aaa
mov
push
push
xchg
hlt
sbb
add
xchg
mov
and
sbb
lods
fsubr
pop
push
ja
scas
arpl
dec
mov
pusha
add
add
pop
pop
pop
push
mov
or
add
and
cmp
out
(bad)
inc
or
push
mov
sbb
cwde
(bad)
xchg
mov
pusha
xor
inc
adc
inc
loopne
push
jp
mov
ja
push
adc
les
adc
mov
fild
adc
daa
mov
cld
ins
lea
arpl
push
mov
jbe
mov
jo
adc
cmp
das
mov
cli
(bad)
addr16
sub
sub
inc
into
loope
pop
add
xor
inc
xlat
inc
xchg
mov
push
mov
cmps
or
cmp
scas
mov
pop
lock
add
ds
push
mov
sti
rcr
push
mov
data16
es
pop
cmp
dec
ret
adc
pop
mov
push
in
jnp
popa
(bad)
mov
jae
arpl
bswap
test
add
push
hlt
sub
cmp
sub
push
psrlq
loopne
sahf
add
push
and
shl
fsub
xchg
sub
jae
mul
pop
mov
dec
add
or
pop
imul
rol
inc
lahf
cld
push
jmp
int3
into
xchg
aad
test
pop
pop
call
add
lds
adc
arpl
pop
ja
jo
inc
push
popf
cli
ja
and
sbb
xor
sti
ds
sbb
push
(bad)
pop
xlat
sbb
pusha
aas
mov
push
jo
push
sub
push
add
sub
dec
push
add
fdivrp
cmp
fs
cmp
jae
or
inc
sti
push
movlps
add
or
sbb
aam
jmp
fdivr
gs
fwait
ins
mov
inc
sbb
leave
(bad)
iret
and
add
and
push
sti
adc
push
mov
mov
inc
sbb
test
movs
push
std
loope
mov
mov
ins
pop
movs
cli
repnz
or
mov
push
push
jecxz
mov
xchg
inc
push
shr
push
loopne
pop
or
loope
stc
push
lea
push
shr
and
lea
js
test
xchg
and
cwde
pop
and
(bad)
leave
inc
inc
add
lock
inc
mov
inc
leave
jo
cmp
pop
shr
sbb
xchg
jle
mov
pop
jle
in
jmp
adc
call
push
dec
je
jmp
and
fimul
outs
je
sub
push
jmp
mov
js
mov
cs
(bad)
mov
sub
jno
inc
push
add
hlt
sub
xchg
push
imul
add
and
es
movs
rcl
sbb
push
inc
sahf
and
add
mov
test
(bad)
push
push
push
jb
fisubr
mov
and
adc
loop
jmp
xor
xor
adc
or
int3
xlat
fnstcw
leave
(bad)
and
sub
or
jmp
sub
cmp
mov
nop
push
adc
daa
add
and
mov
add
dec
je
jmp
and
or
push
push
mov
push
sbb
jmp
jno
sar
add
pop
mov
xchg
popa
add
pop
lock
mov
pop
iret
push
shl
mov
push
xlat
popa
mov
stos
add
loop
add
mov
dec
loope
pop
mov
xor
mov
cmp
sbb
push
movs
mov
bound
inc
push
jbe
movs
dec
push
(bad)
ins
js
mov
cmp
imul
dec
dec
and
add
sub
or
mov
call
xor
push
jbe
outs
daa
call
push
mov
bound
fidivr
or
or
xchg
add
and
pop
sbb
jge
and
mov
dec
pushf
daa
ror
pop
cmp
call
scas
shl
push
push
jbe
out
pop
hlt
inc
or
out
fdivr
js
in
je
test
and
test
jne
inc
call
fist
add
mov
pop
cmp
mov
fcomp
fwait
aas
xor
sub
aaa
add
mov
jl
jno
adc
push
adc
cmp
leave
std
dec
hlt
adc
pop
mov
and
rol
mov
adc
jl
sti
das
mov
lea
push
jo
jns
in
ror
sbb
add
cmp
adc
dec
pop
add
add
add
int3
out
or
ins
adc
scas
dec
leave
inc
pop
test
js
icebp
xor
lea
jp
push
mov
ret
arpl
xor
es
scas
cmps
add
dec
or
or
(bad)
out
inc
mov
inc
daa
dec
add
arpl
jbe
add
inc
ins
mov
sbb
fs
pop
ins
mul
jb
mov
lods
aaa
sbb
mov
and
mov
or
sbb
dec
outs
add
or
mov
push
jb
jns
jne
jae
outs
gs
dec
mov
pop
add
adc
mov
ins
icebp
cmps
inc
call
js
add
mov
loope
inc
lahf
fmul
sbb
rcr
jae
sub
outs
jp
xor
popf
sbb
lods
imul
aam
(bad)
scas
mov
mov
cmps
add
repz
or
jne
sbb
add
mov
rcr
add
aaa
sbb
mov
test
gs
xchg
icebp
jbe
mov
xchg
mov
lea
pop
and
leave
fadd
sar
(bad)
sub
leave
and
sub
outs
push
sub
push
add
enter
and
loope
fild
cmp
lahf
lock
add
inc
outs
ins
ins
popa
outs
fs
popa
je
in
xchg
xor
aaa
push
add
sbb
mov
mov
js
inc
ins
fs
js
ret
arpl
mov
das
aam
or
adc
pop
sar
dec
cmps
(bad)
or
rol
sbb
or
mov
mov
or
pop
rol
lds
aaa
les
adc
add
and
and
push
ror
iret
and
push
sbb
and
in
mov
je
in
inc
clc
sub
or
div
add
hlt
adc
push
loop
test
mov
jle
or
mov
pop
mov
inc
jo
jle
dec
push
push
rol
fidivr
rcr
sbb
inc
add
hlt
movs
mov
mov
fdivr
cli
imul
into
or
and
add
dec
leave
or
pop
sti
push
imul
or
ret
inc
pop
dec
sti
inc
inc
add
add
or
or
je
add
loopne
sbb
jge
imul
daa
scas
fs
sbb
lods
repnz
inc
out
sub
add
push
mov
lahf
inc
jo
in
dec
dec
and
add
fadd
sbb
add
and
cli
lahf
push
inc
push
dec
jo
imul
or
leave
in
jb
push
loop
add
js
mov
clc
lea
xchg
xchg
xor
sbb
es
loopne
adc
shl
aam
rol
clc
sbb
jle
inc
fadd
sub
lea
cmp
das
mov
sar
out
or
out
(bad)
jl
or
inc
push
dec
gs
fs
ret
lods
cmp
cld
push
dec
sbb
dec
fadd
das
ret
adc
push
xor
in
jmp
outs
in
imul
ins
mov
inc
ins
outs
arpl
loopne
sti
or
test
mov
jae
add
fiadd
lds
mov
popa
jae
shl
push
cli
sbb
test
or
je
test
push
xchg
and
in
mov
adc
add
or
js
inc
or
sub
repz
pop
add
(bad)
cli
or
jne
cmc
add
add
push
mov
mov
mov
xchg
js
push
aam
push
xchg
sub
fstp
cmp
mov
jne
(bad)
and
dec
lea
(bad)
jbe
mov
rep
push
lea
outs
mov
ja
sub
adc
jmp
out
fcom
jge
or
mov
inc
push
inc
push
push
shr
mov
inc
pushf
pop
push
sbb
or
push
fs
jmp
add
sbb
retf
mov
(bad)
sahf
lea
jmp
retf
mov
cld
sbb
or
ds
test
int
add
sub
(bad)
adc
cld
sete
and
push
add
dec
cmp
add
loopne
add
add
add
sar
adc
xchg
mov
jmp
sbb
jns
pop
mov
jle
add
ds
jo
add
fnstenvw
adc
in
mov
es
ror
or
pop
mov
mov
loope
cwde
(bad)
out
stos
add
enter
inc
(bad)
push
dec
push
fs
add
inc
push
in
or
mov
rcl
add
or
pop
mov
popa
dec
dec
rcl
leave
(bad)
mov
xchg
std
loopne
cdq
idiv
mov
inc
xchg
or
inc
add
in
and
addr16
fwait
mov
adc
xchg
int
cmp
mov
mov
arpl
test
inc
and
mov
sub
lea
(bad)
and
ja
push
and
fimul
fucomp
xor
or
mov
rcl
jmp
pop
(bad)
mov
aaa
test
rcl
les
loope
add
icebp
pushf
mov
or
fistp
jge
mov
jmp
push
ds
dec
and
movs
movzx
scas
fnsave
adc
sbb
loop
movq
mov
retf
xchg
test
fdivr
lds
test
iret
pushf
or
mov
add
jmp
bound
pop
mov
push
sub
mov
popa
sub
shl
xchg
add
mov
jmp
aad
jmp
imul
cs
rol
lock
clc
add
mov
xor
dec
in
mov
sub
inc
jbe
xchg
les
inc
jmp
jb
push
mov
stos
ds
das
sbb
ins
int
lea
cmp
dec
inc
and
inc
mov
xlat
adc
repnz
fsub
mov
lods
mov
rcr
jns
xchg
adc
dec
sub
popa
addr16
mov
gs
jne
arpl
mov
out
inc
stos
adc
ret
jmp
mov
ss
mov
ficomp
icebp
inc
cmp
adc
mov
sbb
push
mov
jl
xlat
sub
or
dec
outs
aad
sbb
repz
jmp
ret
mov
push
xor
retf
adc
shl
push
imul
sub
fmul
sbb
xor
cmp
clc
in
adc
push
dec
fmul
jl
das
add
push
add
test
daa
fstp
in
jae
cmp
test
iret
pop
mov
mov
mov
jl
sti
jle
add
sbb
aaa
imul
loope
repz
add
mov
sti
std
outs
push
add
jmp
inc
push
in
in
jne
popa
jne
mov
pusha
dec
inc
(bad)
push
lock
arpl
enter
sub
cdq
push
push
out
or
or
sar
cmp
adc
or
and
in
enter
outs
aaa
imul
mov
enter
jnp
adc
call
push
pop
stos
jl
and
and
fs
sub
test
sub
in
mov
mov
and
cmp
jg
je
sub
je
add
je
ins
movs
in
push
jmp
push
jb
add
loope
xchg
(bad)
mov
or
pop
and
pop
(bad)
sbb
or
wbinvd
pushf
push
jmp
sub
inc
inc
jmp
(bad)
mov
mov
fnclex
and
or
enter
add
xchg
dec
retf
popf
add
aad
cmp
inc
push
sbb
mov
mov
mov
mov
cs
cmp
sub
mov
sub
mov
fwait
xchg
mov
push
ins
pop
adc
lock
push
(bad)
mov
cmp
fimul
add
je
pusha
jnp
dec
adc
adc
rol
ret
sar
xor
pop
pop
or
add
stos
out
sbb
push
or
pop
pushf
(bad)
adc
das
out
lods
inc
lods
xchg
in
push
push
xchg
jne
fnstenv
or
cmove
dec
sbb
or
icebp
test
mov
push
fdiv
add
pushf
pop
shr
xchg
or
ss
inc
(bad)
jge
fmul
xor
add
adc
mov
inc
fidiv
frstor
mov
inc
pop
mov
out
daa
rcl
rol
dec
or
dec
mov
shl
out
in
stc
enter
or
idiv
lods
das
and
xchg
lods
not
popf
sub
rol
ja
aam
mov
dec
hlt
pushf
ss
int3
xor
push
mov
ret
in
dec
mov
dec
int3
inc
add
cmp
push
gs
div
sub
inc
add
test
inc
call
pop
cld
shr
movs
imul
out
bound
sbb
or
mov
mov
aaa
add
push
mov
cmp
pushf
xchg
movs
sbb
xlat
sti
jl
push
or
clc
cwde
popf
cmp
cmp
push
mov
pop
push
loopne
pop
stos
lods
sti
in
pop
aaa
out
fnstcw
xor
jmp
inc
movs
cmp
push
jno
and
xchg
outs
mov
xor
push
loopne
xchg
add
shr
inc
lea
pop
das
ins
dec
cmp
sar
and
sbb
adc
mov
add
add
stc
pop
cs
add
(bad)
into
mov
inc
xor
daa
in
mov
mov
push
push
cmp
test
out
pop
shr
xchg
repz
js
fsub
dec
add
data16
mov
adc
cld
std
es
imul
push
inc
(bad)
adc
in
int3
adc
test
sub
jp
adc
xchg
mov
dec
or
jmp
mov
popf
mov
mov
cmp
ds
in
inc
dec
jmp
adc
js
scas
push
sbb
jbe
rcl
inc
mov
adc
inc
icebp
mov
pushf
ds
pop
and
gs
aaa
pop
ja
cmp
add
xchg
inc
sbb
mov
cdq
(bad)
fisub
imul
or
push
mov
push
aam
mov
sub
sub
stos
pop
pop
mov
xor
sub
es
xor
mul
jne
adc
stos
scas
fs
mov
push
mov
enter
and
add
enter
mov
push
push
push
add
jbe
sti
push
inc
add
inc
xor
leave
jbe
aam
push
repz
neg
push
xchg
fnsave
not
push
call
cmovb
mov
pusha
cs
das
cmp
dec
mov
es
dec
cmp
sub
or
pop
sbb
adc
or
adc
inc
inc
aaa
dec
mov
iret
dec
ret
push
sbb
mov
jo
inc
inc
mov
call
fs
popa
mov
xchg
popf
sbb
pop
push
mov
mov
das
je
sar
test
xchg
or
mov
ret
jb
cmp
loopne
mov
mov
cmp
jno
adc
cmp
rol
cmp
xchg
jne
and
test
and
push
xchg
adc
adc
inc
hlt
fmul
rol
lods
jne
mov
ds
clc
mov
xor
adc
jne
cmp
sub
iret
mov
jae
sub
mov
cmp
je
xor
mov
xchg
sbb
cmp
add
test
push
cmp
ins
lock
data16
(bad)
fld
sbb
test
idiv
add
adc
cli
jns
push
ret
pop
jmp
push
ficom
inc
jbe
cmc
xor
mul
pop
call
not
add
add
add
mov
mov
cmp
xor
xor
fidiv
adc
in
sub
add
jbe
mov
push
ds
dec
cmp
ror
adc
jo
mov
enter
cdq
or
les
adc
cmp
add
or
xchg
mov
or
ins
jae
call
or
sbb
ds
xchg
mov
and
jbe
popa
inc
sub
and
add
call
jmp
push
gs
or
xlat
inc
adc
push
xlat
in
jne
lock
or
lock
add
ret
push
jmp
cwde
sysret
push
int3
adc
repnz
cs
mov
xchg
inc
enter
ins
lock
leave
dec
pop
bnd
js
jl
loope
das
jns
lock
mov
add
adc
and
add
jbe
adc
mov
test
je
mov
and
xchg
lock
fidivr
ficom
xchg
xor
add
cmp
das
adc
mov
xchg
and
mov
add
jmp
cmp
int3
inc
add
push
pusha
jns
pop
mov
dec
ja
fcomp
jl
movzx
push
or
rol
aam
mov
mov
aaa
lods
mov
and
push
dec
add
hlt
push
mov
inc
imul
and
dec
and
test
push
sbb
add
adc
rol
cmps
add
add
es
fidivr
jl
test
mov
mov
push
inc
pop
jne
dec
add
xchg
jmp
ret
das
popa
outs
push
mov
aaa
inc
push
dec
dec
sbb
dec
fsub
push
pop
inc
fnstsw
(bad)
je
mov
jne
das
out
cli
jne
sahf
hlt
loop
(bad)
(bad)
loopne
xchg
mov
add
iret
add
xchg
add
fmul
xor
ins
out
sbb
mov
mov
inc
add
test
xor
add
adc
push
aas
mov
jne
fst
addr16
dec
jae
ret
add
jne
mov
xchg
mov
pop
add
hlt
or
xchg
shl
fucomp
imul
sbb
(bad)
jl
jmp
scas
(bad)
jmp
add
pop
or
aam
sbb
test
pop
ror
add
add
lea
(bad)
pop
test
xor
mov
or
inc
pop
mov
repnz
ret
in
test
ret
push
adc
cmps
imul
test
outs
adc
jae
mov
cmp
add
int
sub
aaa
loope
shr
daa
mov
mov
and
outs
cmp
jb
cdq
popf
lock
daa
pop
sub
mov
push
stos
and
xor
xchg
sub
sbb
jo
mov
xor
mov
sub
adc
pop
push
and
mov
sti
pop
push
mov
outs
in
cmp
repz
jmp
adc
in
jbe
dec
or
sbb
movs
or
mov
push
add
jne
push
cli
fcomi
(bad)
dec
xor
pop
inc
mov
or
je
jmp
or
or
sahf
btc
fcomi
aam
add
(bad)
add
rcr
adc
loopne
jmp
arpl
fidivr
js
nop
or
mov
jns
or
int3
ret
mov
arpl
pop
jne
popa
add
inc
or
sub
pop
rol
je
push
push
xor
xor
daa
or
xlat
ficomp
loop
push
pop
cmp
jle
or
jne
inc
dec
push
mov
jmp
outs
dec
xchg
arpl
pop
mov
pop
shl
stc
(bad)
inc
sub
fmul
pop
add
(bad)
dec
and
outs
sub
dec
shr
sbb
push
sub
les
add
iret
sub
or
or
jnp
pop
push
adc
push
push
xchg
push
xor
test
ret
shl
push
cmps
stc
push
add
sti
dec
les
or
or
mov
push
js
inc
mov
sbb
cmp
cmp
mov
shl
xchg
call
sbb
xchg
inc
push
in
xor
(bad)
xchg
sti
adc
addr16
mov
adc
pop
jne
imul
mov
cmp
add
mov
hlt
out
mov
adc
mov
(bad)
call
sub
xlat
int
test
jb
sti
adc
sbb
or
inc
inc
inc
es
dec
pop
ret
add
call
or
fisubr
jne
sub
stos
sub
cmp
(bad)
lock
dec
lea
push
add
pop
mov
or
or
lods
rol
fsub
and
xor
aad
pop
shr
push
dec
hlt
stos
xchg
(bad)
mov
inc
pop
mov
(bad)
sbb
xchg
add
(bad)
pop
push
sbb
add
inc
sub
stc
adc
(bad)
jo
add
add
adc
push
push
mov
pavgw
dec
xor
cs
sbb
cmp
mov
(bad)
(bad)
nop
scas
sub
or
inc
in
add
and
and
sbb
je
mov
loope
jno
adc
add
adc
cmp
pop
mov
push
inc
mov
xor
xor
outs
stos
or
shl
inc
push
and
push
xchg
adc
sub
dec
cmp
or
or
mov
jb
add
pop
pop
stos
test
or
out
adc
les
mov
dec
sub
test
jle
push
mov
push
sbb
and
add
cmps
xchg
sub
iret
lock
arpl
sub
mov
adc
movs
push
add
mov
cld
push
add
(bad)
test
lea
pop
sub
push
lahf
cmp
jbe
jo
sub
add
inc
es
jne
stos
xor
dec
xchg
lds
and
adc
fadd
pusha
out
jmp
movs
dec
ins
xchg
rcr
lds
in
add
push
popf
or
cmp
or
mov
addr16
(bad)
cmp
jle
sub
test
inc
jge
outs
dec
fstp
inc
or
ret
inc
fmul
test
test
sar
add
pop
and
jbe
add
inc
mov
pop
sub
int3
xchg
xchg
or
and
popf
mov
jge
and
mov
or
mov
or
add
mul
inc
lea
adc
sub
or
pop
xchg
lods
mov
mov
mov
xchg
in
push
pop
mov
lds
(bad)
enter
pop
popf
retf
mul
inc
dec
dec
mov
aam
call
sbb
pushf
fnsave
or
jb
cmp
xor
loopne
fdiv
xchg
inc
sbb
push
or
jae
sub
or
push
dec
fmul
loopne
sub
mov
jnp
mov
push
in
push
addr16
arpl
xlat
aad
push
lock
dec
js
mov
mov
loopne
push
ret
or
js
mov
ins
xor
adc
aaa
enter
add
xchg
inc
mov
jmp
movs
loopne
sub
push
sbb
push
mov
(bad)
pop
leave
cmp
jne
cmp
jne
add
add
jne
in
xchg
sbb
jne
add
add
das
wbinvd
mov
pop
pop
or
mov
(bad)
inc
enter
push
iret
cwde
cli
stos
mov
int
cmp
dec
or
push
cmp
sar
xchg
jle
dec
xchg
mov
dec
lods
fadd
cs
and
pop
dec
xor
sbb
(bad)
call
mov
out
jle
add
fmul
(bad)
inc
mov
(bad)
ins
lods
cmp
or
test
ds
mov
push
jne
lea
adc
adc
cmp
and
retf
repz
or
mov
(bad)
dec
and
push
xchg
(bad)
stc
and
jecxz
cmp
jl
lea
push
or
int3
xor
or
pusha
cmc
inc
pop
jne
cli
push
xchg
pop
adc
jl
shl
mov
add
jl
add
xor
and
mov
int3
and
or
cs
and
scas
icebp
or
mov
mov
sub
jmp
jne
ins
enter
mov
sbb
and
fstp
je
icebp
or
push
sahf
fcmovnu
adc
dec
je
inc
sub
xor
and
mov
xor
cmp
sbb
call
stos
and
xchg
pushw
mov
stos
mov
test
ret
and
clc
add
push
pusha
jo
nop
add
inc
ret
mov
add
adc
lea
and
(bad)
sub
push
push
cmp
je
mov
jnp
mov
ja
mov
inc
das
popf
es
sbb
mov
bound
test
das
sbb
in
xchg
jne
dec
pop
dec
mov
xchg
ins
and
xor
jb
jnp
xchg
ja
pop
mov
loopne
mov
mov
lods
arpl
les
sahf
cmp
jbe
pop
push
pop
stos
movs
jle
fcmovnu
add
shl
fwait
mov
mov
das
popa
sbb
jecxz
and
cdq
dec
pop
adc
push
popa
mov
retf
adc
fild
add
mov
dec
xchg
sbb
cmp
rol
or
cwde
addr16
call
jmp
sbb
lock
push
(bad)
mov
mov
outs
jg
xor
push
mov
mov
cmp
enter
pushf
cmp
ja
out
sbb
mov
shl
int3
xor
loop
(bad)
adc
lods
mov
lea
cmc
sbb
or
or
clc
sbb
fs
or
mov
dec
loopne
mov
ins
cmps
pop
mov
sub
xchg
dec
jo
adc
punpckhwd
push
jmp
push
jae
mov
xchg
addr16
xor
stc
cwde
add
xchg
clc
cdq
add
fs
ror
dec
je
popf
aaa
sub
pop
push
je
dec
adc
mov
sub
or
add
or
adc
inc
(bad)
sbb
enter
xchg
xchg
ins
xor
sbb
jo
pop
xor
je
xlat
je
in
push
sti
push
mov
jmp
pop
push
sbb
pop
sbb
jle
add
inc
daa
push
ret
mov
push
es
or
fs
and
and
test
je
aaa
sub
jmp
lds
rol
sub
jle
mov
xchg
dec
add
leave
sub
dec
push
mov
aaa
cmp
jae
dec
and
or
sahf
sub
stos
cmp
or
inc
push
add
adc
mov
pop
jp
xor
sub
xchg
sbb
jb
sub
push
or
and
loop
add
rol
ins
mov
mov
add
(bad)
adc
stos
imul
adc
mov
call
sti
(bad)
jb
mov
mov
mov
shl
add
adc
and
inc
add
aas
sub
in
jmp
lahf
rol
dec
cmp
mov
(bad)
pushaw
hlt
and
aaa
inc
pop
add
aas
add
enter
xor
xchg
test
add
push
das
dec
pop
push
xchg
fidiv
sbb
cmp
into
xor
call
xchg
loop
test
iret
out
adc
cld
inc
mov
ret
add
adc
or
jb
lock
and
shr
lds
dec
pop
jb
clc
out
pop
inc
cmp
cmp
imul
or
pop
int
xchg
inc
jle
jmp
retf
inc
ret
xor
je
pop
mov
sbb
(bad)
fidiv
jmp
xchg
ror
xchg
push
mov
sub
xchg
cdq
cmp
inc
std
arpl
xor
je
lea
mov
xchg
xchg
push
mov
add
aad
or
nop
inc
repnz
aad
mov
cs
dec
adc
add
add
dec
cmp
ror
sub
xchg
test
idiv
mov
out
sbb
jb
and
addr16
push
js
jmp
dec
mov
sti
fld
cmp
xor
sbb
fxch
and
nop
loop
es
fbld
xchg
adc
adc
push
stos
repnz
imul
mov
or
push
js
jmp
push
add
pop
add
add
add
int3
jmp
add
dec
aam
inc
jecxz
in
pop
dec
ss
or
mov
lods
mov
sahf
pop
mov
add
xor
cmp
pusha
cli
adc
jae
ds
cmp
out
inc
shl
fcom
gs
mov
sbb
xor
cmps
adc
fisub
(bad)
not
shl
ficom
xchg
pushf
sub
jo
sub
pusha
adc
adc
cmps
mov
ins
jmp
loop
fdiv
mov
add
mov
sub
repz
push
enter
out
ins
stos
jp
xchg
mov
mul
or
xchg
pop
mov
retf
push
cmp
fcom
pop
div
addr16
leave
ror
data16
pop
push
or
paddb
jmp
mov
cmp
or
pop
pushf
or
jmp
mov
sub
mov
adc
inc
test
cmp
js
fmul
cmp
jbe
addr16
mov
jb
shr
popa
arpl
movs
ds
mov
pop
dec
sub
test
jne
adc
or
adc
fwait
aam
add
adc
cwde
or
mov
jmp
push
test
sub
mov
add
cmp
sub
and
pop
repz
adc
pop
push
lahf
test
hlt
loopne
jnp
sub
sbb
mov
and
sbb
shl
mov
push
sbb
retf
pop
cmc
rol
jb
ins
pop
mov
and
xor
push
cmp
lea
sub
lea
sbb
fmul
xor
and
xor
mov
add
and
mov
inc
sbb
xchg
pop
sbb
and
xchg
xor
sbb
mov
push
jmp
shl
and
xlat
mov
pusha
mov
nop
(bad)
cmp
cs
test
push
jnp
(bad)
xor
mov
adc
call
fild
and
mov
inc
add
rol
jne
pop
pop
pop
movs
loopne
js
or
loopne
fwait
jo
pop
add
mov
dec
mov
pop
mov
push
adc
popf
test
(bad)
shr
xor
adc
out
in
jmp
or
inc
inc
in
xor
or
cmp
push
fist
jl
idiv
sbb
mov
icebp
(bad)
mov
call
or
aaa
jge
sbb
xor
adc
xor
aam
cmp
or
xor
clc
retf
xor
cli
call
mov
inc
cmp
ja
fild
lahf
js
cwde
cmps
mov
icebp
leave
xchg
add
or
hlt
mov
sub
(bad)
sbb
add
cld
mov
xor
imul
pop
fwait
rcr
cli
sub
mov
test
imul
and
adc
ins
imul
mov
push
jo
ret
push
hlt
pop
mov
je
repz
(bad)
clc
cmp
daa
psubq
and
bound
and
in
shr
cwde
jmp
ins
lds
jg
(bad)
xlat
ins
adc
ret
call
scas
test
cmc
sbb
(bad)
push
or
test
pop
pop
mov
adc
stos
scas
mov
gs
pop
mov
mov
add
sar
inc
mov
or
adc
repz
and
pop
movs
and
stc
aas
or
pop
pop
jns
dec
or
cli
(bad)
out
jg
lea
sub
fmul
popa
sbb
je
rol
xchg
fsub
ds
aas
(bad)
jo
push
adc
xchg
or
inc
cmp
in
punpcklwd
xchg
cmp
mov
dec
xchg
dec
rcr
pushf
sbb
or
shr
sahf
lea
mov
pop
add
fbld
add
jno
adc
cld
mov
sbb
push
and
out
and
jne
xor
adc
pop
clc
cmp
xlat
in
enter
jne
and
fs
in
dec
mov
mov
test
add
add
mov
sbb
inc
pop
jb
in
cmps
mov
mov
ror
cmc
ficomp
or
adc
int
sbb
push
inc
mov
clc
lods
rol
sbb
int3
jbe
xchg
push
or
ins
jecxz
jmp
mov
mov
test
sar
cmp
and
cmp
pop
sub
sub
inc
or
or
ss
dec
jecxz
push
inc
inc
adc
jne
adc
shl
inc
add
and
push
ja
cmc
add
and
jne
repnz
inc
sbb
push
inc
adc
out
jle
mov
inc
and
cwde
pop
mov
stos
lods
shr
and
mov
inc
fisttp
test
jecxz
shl
fisttp
idiv
cmp
inc
adc
adc
sbb
pop
add
add
push
adc
adc
xor
fmul
cmp
push
add
and
push
outs
popa
jb
retf
bound
pop
pop
sbb
jo
or
add
cmc
adc
cmps
arpl
sub
fs
push
mov
mov
repz
xor
lods
push
fs
cmovbe
dec
push
xor
adc
movs
xchg
adc
jnp
push
push
cmp
add
or
xor
adc
les
shl
add
cld
ret
and
inc
mov
push
mov
aam
add
mov
xor
add
and
and
mov
ret
inc
fisub
sbb
pop
outs
jne
cmp
sbb
retf
or
cmp
sbb
pop
(bad)
push
adc
add
mov
jnp
mov
adc
add
aas
push
jne
dec
and
mov
fs
adc
push
arpl
shl
cmc
in
jo
iret
out
ffreep
add
and
(bad)
push
std
mov
mov
jbe
jae
add
sub
std
call
adc
fild
sbb
ret
(bad)
and
pop
pusha
hlt
push
dec
inc
mov
imul
push
mov
and
iret
jne
sub
pop
push
(bad)
cld
jmp
loop
and
data16
sbb
inc
frstor
or
or
or
jne
mov
adc
push
inc
sbb
out
xchg
fwait
pop
inc
ret
and
jae
sbb
sbb
fsub
ja
rcl
push
out
pop
add
dec
lds
add
or
je
pop
jno
clc
inc
aam
mov
jnp
add
pop
xchg
mov
inc
and
ss
add
xor
pop
lock
inc
adc
(bad)
cmp
scas
mov
inc
scas
mov
jle
inc
adc
inc
or
push
fld
pop
(bad)
pop
inc
xor
pop
sbb
jmp
mov
pop
shl
sbb
xor
and
sbb
ja
ins
pop
sbb
je
pusha
add
pop
fstp
sbb
mov
jg
stos
nop
mov
aam
inc
aad
inc
std
daa
mov
inc
sub
popa
mov
es
add
adc
(bad)
fmul
mov
pop
cmp
enter
cmp
or
stos
push
inc
int3
dec
mov
dec
(bad)
sub
and
and
cmp
xchg
popf
outs
add
repz
push
cdq
mov
sub
and
pop
or
data16
fistp
fstp
cs
sub
sbb
hlt
lea
mov
stos
lods
fdiv
inc
xorps
jle
in
dec
je
lea
inc
cmps
mov
sbb
ret
xchg
popf
mov
xor
dec
jge
jmp
inc
cmps
add
add
or
push
leave
sub
sub
hlt
add
clc
add
repz
lods
dec
lea
xlat
inc
cwde
adc
rol
aam
pop
jmp
aad
(bad)
push
add
push
inc
jl
loope
ret
adc
ins
lea
inc
pusha
adc
cli
les
lds
mov
or
add
lds
jb
inc
and
cli
cmovs
xchg
nop
add
dec
pop
cmps
add
add
adc
sbb
jp
popf
sbb
mov
push
fadd
popa
and
xor
je
xchg
mov
in
sub
push
push
xchg
add
dec
rcl
dec
cld
push
adc
js
(bad)
push
adc
cmp
fsubrp
fs
xchg
imul
add
mov
iret
mov
fs
mov
mov
ss
jb
adc
arpl
xor
sbb
xchg
js
lds
dec
inc
cmp
sbb
push
loopne
adc
xchg
sti
mov
pusha
(bad)
js
shl
mov
push
cwde
call
push
clc
je
out
fadd
scas
fstp
or
push
add
pushfw
add
lods
mov
adc
push
xchg
pop
hlt
and
fcom
repz
adc
arpl
sbb
push
jnp
pop
test
add
sti
push
push
mov
mov
fnsave
shl
aad
fwait
js
mov
mov
scas
aas
lds
cmp
push
mov
movs
fcom
imul
cli
add
call
int3
jbe
fst
pop
dec
mul
sbb
or
call
sub
ja
pop
test
mov
pop
mov
and
push
cmc
sbb
cmp
mov
lea
pop
jge
aas
mov
out
jno
aaa
and
add
mov
int3
adc
adc
bound
(bad)
loop
or
out
xchg
or
xchg
lahf
clc
xchg
pop
mov
xor
fcmovb
mov
jl
fld
je
sub
repnz
cmp
jne
sbb
in
xlat
(bad)
ss
ins
ins
aad
ja
addr16
xor
jle
pop
movs
or
add
xor
xchg
(bad)
mov
xchg
aaa
aaa
add
pop
sbb
or
in
inc
out
add
out
jg
aas
ins
in
add
adc
jp
fcom
or
ins
cmp
sti
bound
rcr
xor
je
imul
or
or
mov
scas
pop
(bad)
adc
xchg
repz
test
movs
and
je
call
inc
sar
call
in
in
push
int
adc
push
or
xor
out
bound
add
xchg
lea
adc
mov
pop
enter
pop
cli
in
fnstenv
mov
jmp
pop
in
xchg
iret
in
stos
push
fcom
ins
and
shl
pushf
out
cmp
outs
sub
inc
fwait
sub
sub
jne
add
imul
in
fdiv
cmp
pop
or
mov
or
ins
dec
or
je
or
xor
or
ins
inc
push
cmps
pop
xor
inc
sar
rcr
and
jmp
inc
or
das
pop
ins
jae
inc
pop
push
inc
out
sbb
inc
push
inc
mov
test
mov
xchg
push
push
pop
sar
in
mul
adc
call
daa
and
mov
cmp
adc
aas
push
imul
sub
ins
cmp
mov
das
push
mov
inc
pop
inc
mov
pop
jbe
pop
xor
sub
push
mov
outs
in
sbb
adc
mul
jmp
push
or
out
add
and
or
cmps
or
inc
lea
push
repnz
lds
cmp
jne
mov
sbb
jecxz
add
jmp
test
(bad)
xor
mov
in
cmp
xchg
cmp
fldenv
xchg
adc
in
sbb
cmp
jle
push
add
and
mov
adc
(bad)
int
or
xchg
push
mov
pop
jo
inc
inc
mov
and
and
mov
hlt
test
mov
dec
js
and
mov
rcr
add
cmp
or
push
int
popa
sub
in
sub
dec
or
or
adc
das
mov
mov
or
mov
cmp
fadd
sbb
add
adc
or
push
inc
nop
jnp
adc
add
add
lods
iret
fldcw
es
fmul
pusha
or
not
pop
(bad)
fsub
in
sbb
fmul
or
out
mov
add
in
dec
adc
and
sub
iret
mov
push
cmp
pop
cwde
sub
or
mov
xlat
sbb
clc
sar
test
and
pop
je
mov
xor
push
mov
mov
mov
repz
add
outs
ror
jne
rol
enter
pop
pop
fs
push
mov
pop
push
or
pusha
into
push
and
sbb
adc
call
or
daa
ins
int
mov
mov
push
iret
in
push
cmp
xor
scas
adc
or
mov
in
or
mov
je
iret
fsub
pop
adc
adc
loopne
adc
rol
scas
enter
push
cmp
pop
or
inc
dec
rol
fld
or
jns
jne
mov
cmp
and
test
dec
push
or
mov
xor
sbb
jb
aam
and
ror
or
es
shr
es
sub
cmp
sub
stos
sub
xchg
push
mov
lea
mov
sbb
mov
js
inc
mov
shl
push
or
inc
or
pop
jl
mov
cmp
sub
shl
or
mov
mov
sub
sbb
stos
pop
adc
xchg
push
pusha
test
repz
sub
imul
aad
(bad)
js
dec
xchg
out
jmp
mov
sbb
dec
adc
call
push
push
add
sbb
(bad)
shl
loopne
xor
xchg
ror
add
call
shl
les
adc
call
pop
test
push
jno
in
push
add
mov
dec
dec
int3
inc
xchg
retf
dec
pop
xor
mov
cs
and
sahf
lods
int3
and
dec
call
mov
pop
out
sbb
xor
sbb
adc
push
adc
push
movs
inc
adc
mov
add
push
jl
dec
and
inc
or
or
daa
nop/reserved
sbb
xor
inc
add
inc
ror
mov
push
push
test
fisttp
add
xchg
or
jl
int
adc
adc
cmp
add
sub
stc
je
jnp
push
add
inc
je
jge
jmp
push
call
test
and
lock
imul
sbb
ds
adc
or
push
adc
add
ret
or
add
loop
fcmovne
xchg
dec
jmp
add
inc
add
mov
inc
aaa
add
mov
mov
ins
push
ficomp
mul
outs
push
xchg
cmp
push
add
pop
adc
push
mov
pop
mov
jo
push
lock
inc
jne
test
and
fwait
mov
or
jae
fisub
and
sbb
add
int
push
inc
mov
(bad)
ficomp
sbb
cmp
shr
mov
dec
mov
xlat
scas
ja
outs
test
adc
mov
outs
push
cmp
jl
dec
mov
retf
jl
sub
inc
in
int
vmovdqu
mov
or
mov
outs
mov
sbb
inc
cmp
jmp
lea
jp
push
adc
xor
cmp
movs
push
(bad)
out
mov
data16
ror
jnp
pop
sbb
xor
jl
mov
mov
ret
or
inc
xchg
out
adc
adc
js
nop
call
push
loope
cmp
outs
add
retf
jp
or
push
dec
xchg
aaa
jl
sub
cmc
mov
mov
jmp
jg
dec
xor
cmp
jle
push
loop
adc
jbe
aad
cli
jbe
mov
into
sub
mov
jbe
xchg
add
adc
mov
push
je
add
cmp
jmp
inc
push
fisubr
sub
fidivr
sub
xlat
mov
cmp
jno
aad
or
pop
ja
jge
mov
jnp
cwde
dec
icebp
out
stc
mov
movs
and
loop
dec
(bad)
loope
mov
mov
enter
inc
sti
dec
call
and
add
adc
fadd
dec
sub
cmp
retf
scas
inc
cmp
jmp
cld
(bad)
sub
pop
or
sub
mov
push
pusha
pop
mov
mov
cmps
or
push
loopne
jg
jmp
inc
lods
sbb
iret
loopne
outs
adc
inc
loopne
lds
pop
call
sbb
mov
rol
jle
mov
push
movs
or
push
dec
aam
inc
jl
imul
push
pushf
sbb
pop
test
add
cmps
jmp
adc
pop
cmps
stos
push
or
(bad)
and
rol
jecxz
cmp
inc
cmp
int
mov
mov
push
xchg
push
add
ss
cmp
xor
rol
cli
push
ror
push
iret
or
inc
unpcklps
sar
or
dec
lock
inc
xor
jbe
in
dec
inc
cmp
pop
mov
popf
add
cdq
dec
ret
cmp
fadd
xor
shl
ds
sbb
shr
xor
cmp
std
push
push
stos
ret
jmp
nop
push
push
mov
inc
pop
ins
fadd
lods
cmp
aad
adc
(bad)
aaa
rcl
rcl
xor
or
xchg
mov
push
mov
jmp
push
mov
ins
or
pop
mov
mov
ret
gs
arpl
push
xchg
dec
sbb
dec
push
les
sbb
or
int3
outs
cld
movs
pop
xchg
mov
sar
add
pop
fcomp
ja
bound
sahf
dec
dec
add
sbb
dec
sbb
add
jnp
or
loop
or
adc
add
cmp
sar
shr
dec
add
jmp
aam
fistp
xchg
jnp
ret
or
cs
and
nop
jg
xor
mov
push
sbb
cmp
push
or
cmp
fisubr
sub
push
jmp
and
dec
or
les
dec
loope
pop
push
mov
mov
jnp
dec
add
sub
and
lods
(bad)
sub
js
add
rcr
pop
fwait
push
fld
inc
jo
js
cmp
jmp
push
dec
test
and
mov
dec
add
mov
or
and
leave
inc
jmp
jo
cmp
ins
and
mov
shr
es
lods
test
outs
aaa
or
jmp
push
inc
cmps
sbb
or
int
call
dec
mov
pop
hlt
push
int
mov
mov
sbb
add
pop
pop
push
cli
das
fadd
push
sbb
popa
adc
(bad)
fldlg2
mov
ret
ret
das
push
nop
ret
fidivr
jne
sbb
imul
rcr
mov
mov
jnp
or
addr16
inc
mov
push
call
sbb
dec
imul
mov
add
xor
call
stc
sub
loopne
add
jl
movs
fsub
pop
xchg
pop
inc
xor
test
sahf
mov
mov
shl
mov
inc
mov
lea
adc
dec
push
add
rol
xor
mov
sbb
adc
cmp
ret
and
push
and
pusha
xchg
adc
cmp
push
inc
ret
sub
ret
jo
inc
fimul
inc
arpl
sbb
add
add
jnp
adc
or
mov
sbb
rol
(bad)
std
outs
ins
adc
adc
mov
inc
and
push
mov
lods
sub
push
sub
ret
or
mov
xchg
xor
sub
mov
sti
push
lock
xor
mov
mov
cmc
xchg
push
mov
cmp
dec
sbb
add
fild
add
mov
add
mov
sub
mov
jge
mov
or
jo
pop
test
and
shl
xor
call
add
ja
mov
aam
lods
adc
ins
pop
mov
push
add
add
ss
mov
add
mov
pop
sbb
sbb
sbb
add
sbb
mov
ja
outs
fsub
cwde
add
shr
jmp
retf
cmps
imul
shl
rol
fwait
cmps
imul
cmps
lods
and
cmps
imul
sub
loop
mov
and
call
js
adc
add
xor
popa
or
or
inc
ror
add
pop
enter
sbb
xchg
cmp
mov
xchg
cwde
inc
out
inc
xchg
xor
je
mov
mov
adc
inc
adc
dec
ret
fsub
push
and
jmp
push
adc
pop
pop
or
and
nop
xor
xchg
or
add
inc
xor
xchg
jb
daa
mov
inc
pop
ss
inc
xchg
(bad)
dec
test
jg
icebp
call
shl
lea
add
fsub
in
xchg
fdivr
mov
pop
inc
call
mov
retf
sar
mov
add
fnstenv
sti
xor
sub
cli
adc
pop
loope
sar
cmps
xor
add
adc
inc
fiadd
retf
cdq
popa
stos
add
cmp
add
or
adc
ror
xor
loop
aaa
xchg
sbb
adc
cmp
out
push
xor
sbb
mov
xor
adc
test
inc
enter
sub
sbb
mov
mov
das
or
lods
test
ret
sub
mov
ror
and
fld
lods
sbb
mov
dec
mov
jnp
sub
sbb
push
sbb
jmp
pop
pop
sbb
mov
mov
cmp
sbb
scas
mov
and
(bad)
outs
dec
shl
or
push
or
test
call
enter
cmp
and
sbb
xor
fstp
jne
jmp
and
sub
xchg
jl
and
clc
or
and
fadd
or
mov
test
or
mov
push
jge
sub
(bad)
ret
jmp
shr
ret
cmovo
cmp
pop
xchg
ret
cmp
std
dec
add
push
daa
sub
pop
mov
inc
inc
in
mov
ret
xor
inc
or
in
sbb
test
pusha
dec
movzx
cmps
movsx
xor
and
jno
aad
jmp
push
xor
or
add
jbe
inc
adc
scas
adc
ds
shr
add
cmp
test
push
cmp
xor
sahf
add
div
inc
push
adc
mov
or
inc
cs
mov
in
cmp
sbb
dec
(bad)
mov
es
inc
jb
add
adc
add
retf
dec
test
cdq
push
mov
sub
xchg
out
ins
add
dec
cs
sub
push
mov
jmp
ficomp
test
xchg
xor
sub
adc
add
les
add
add
dec
cld
cdq
jmp
jge
dec
push
(bad)
inc
sbb
adc
ror
std
mov
or
jae
inc
cld
jge
and
imul
inc
or
jge
mov
out
push
inc
adc
pop
mov
dec
jne
(bad)
pop
cmp
fs
fnstenv
mov
inc
shl
cmc
mov
add
mov
mov
cdq
mov
push
add
(bad)
fdivr
sbb
push
adc
dec
and
jno
or
mov
inc
js
(bad)
aas
outs
outs
outs
sub
mov
clc
inc
and
gs
and
cmp
pop
sub
add
mov
inc
mov
cmp
aam
clc
fcmovb
mov
pop
mov
mov
push
pop
stos
sbb
loop
repz
add
push
jnp
push
jmp
add
sbb
call
add
and
adc
cmp
je
xchg
pusha
iret
or
wrmsr
push
add
push
aam
je
and
xchg
mov
loope
push
add
add
mov
ds
cmc
out
mov
push
and
mov
mov
jle
and
mov
cmp
call
sbb
mov
cmp
jne
aas
test
inc
cmp
fadd
sub
call
or
into
add
mov
or
ss
pop
imul
inc
or
mov
not
add
pop
xchg
push
inc
inc
or
add
ror
aad
and
sub
test
pusha
xor
inc
and
dec
mov
stos
je
mov
and
shr
or
jno
lods
rcl
popa
(bad)
pusha
fstp
movs
jb
adc
jmp
pop
cmp
inc
mov
push
mov
cmp
or
add
daa
in
jbe
fwait
mov
lea
jmp
inc
and
jl
bound
adc
test
test
or
jmp
xor
jne
cmps
or
sub
sub
imul
test
mov
inc
bound
rcr
mov
adc
ret
pop
inc
push
push
jmp
scas
ret
lds
cmovo
jne
sar
push
adc
pop
xchg
sub
retf
or
adc
push
ret
xchg
sbb
add
sbb
adc
cmp
push
jmp
or
mov
mov
inc
or
adc
fisub
push
les
ret
mov
mov
jne
ror
mov
test
xchg
pmaxub
aam
call
fs
mov
dec
push
dec
aad
ja
pop
pop
or
jne
cmp
inc
cdq
outs
add
inc
xchg
sub
pop
jl
sbb
jne
jmp
xor
add
mov
xchg
clc
adc
jno
mov
xchg
jb
or
das
scas
add
add
int
dec
push
and
fcom
or
inc
ucomiss
add
mov
mov
mov
add
inc
rcl
fdivrp
mov
jno
or
cmp
call
imul
inc
sbb
add
and
call
and
nop
jl
imul
dec
inc
sub
add
sbb
and
jge
cmp
sub
mov
xor
stos
cld
fcomp
stc
jo
pop
mov
or
or
and
imul
sub
pop
(bad)
fisubr
xchg
shr
popa
pop
sub
mov
add
loop
dec
lock
xchg
cwde
mov
mov
xchg
mov
xor
jb
add
shr
inc
push
loope
inc
stos
jbe
inc
mov
fnsave
and
je
imul
push
ret
pop
out
in
push
lods
sub
and
call
hlt
add
cmp
push
or
dec
xchg
inc
bound
out
inc
lods
imul
cmp
enter
xchg
inc
inc
add
mov
or
add
adc
xor
jmp
pop
mov
xor
and
gs
adc
push
add
pop
mov
push
aaa
enter
push
add
add
xchg
xor
cmp
adc
(bad)
int
lahf
adc
dec
pop
jp
jae
sub
xor
jmp
add
aas
mov
les
or
(bad)
ins
add
ret
jne
jo
jo
sbb
push
jmp
js
or
fs
add
shl
outs
adc
(bad)
jne
pop
add
mov
mov
add
lea
sub
sub
push
cld
sub
call
cs
nop
xchg
scas
ins
sbb
mov
js
aad
nop
sbb
mov
ss
mov
cmp
or
jmp
or
shr
int
retf
in
aas
retf
cld
mov
sub
mov
mov
call
xor
(bad)
or
lds
jo
adc
retf
movs
ins
mov
or
iret
mov
or
inc
add
je
pop
test
dec
dec
sbb
stos
sbb
mov
mov
pop
bound
adc
xchg
jno
popa
sbb
cmps
push
jnp
xor
test
push
sub
jmp
and
lods
xor
xchg
adc
or
daa
daa
fnstsw
add
mov
movs
fwait
mov
int
mov
sub
loop
jns
sar
in
adc
rol
aam
retf
es
mov
ss
dec
int3
lods
or
fadd
outs
add
sub
mov
mov
(bad)
ss
lods
ror
call
les
aad
(bad)
inc
ret
pushf
mov
sbb
retf
sar
pop
cli
rcr
sub
add
jae
adc
inc
adc
jge
imul
or
pop
imul
pop
imul
push
add
sbb
cmp
cmp
push
add
(bad)
(bad)
dec
call
movs
sti
fs
or
add
pop
in
outs
push
in
adc
call
adc
test
lock
xchg
rcl
int
xchg
or
mov
push
xchg
test
shl
shl
sbb
adc
cmp
xchg
repz
add
shl
scas
ret
fdiv
jl
dec
jmp
adc
jge
inc
xor
aaa
and
sub
ror
les
adc
repnz
mov
popa
inc
xchg
mov
(bad)
jmp
adc
jo
xor
icebp
in
lock
fwait
movs
leave
pushf
sub
aas
in
scas
gs
pop
jge
mov
pushf
cmp
imul
sbb
jnp
mov
in
mov
(bad)
sahf
(bad)
(bad)
cli
add
test
loopne
mov
int
fcmovne
sbb
xchg
ja
sti
int
popf
jl
daa
dec
sub
xchg
pop
and
sbb
out
or
stos
sar
mov
inc
sbb
out
mov
mov
shr
(bad)
stos
pusha
add
adc
test
mov
and
outs
aad
push
sub
and
add
add
icebp
(bad)
mov
(bad)
cli
add
loopne
cmp
fild
not
add
sbb
lods
dec
mov
and
or
and
test
cwde
aad
shr
ret
aad
xor
mov
lods
dec
scas
xor
(bad)
jp
test
push
lods
push
aas
push
daa
push
push
or
or
cmp
je
mov
lods
inc
(bad)
mov
sub
jle
mov
not
inc
and
add
sbb
aad
inc
adc
xlat
cmp
mov
jb
jb
adc
shr
test
mov
push
add
outs
mov
adc
mov
or
and
test
push
pop
adc
sbb
lahf
mov
add
xor
ins
sti
fwait
and
fldenv
sbb
add
fsub
xor
sbb
add
adc
test
fcmovne
add
xor
imul
push
mov
stos
fcmovne
stos
xchg
mov
sbb
ins
push
xor
jle
imul
adc
inc
in
xlat
xchg
(bad)
fld
add
adc
or
push
repnz
je
adc
mov
fs
movs
(bad)
xor
pop
xchg
js
pop
test
inc
repz
int
add
xor
inc
inc
add
adc
dec
jg
lods
mov
push
push
mov
ins
pusha
xlat
add
cmp
inc
pop
push
push
adc
cmp
add
in
pop
or
ss
in
jo
adc
sbb
aaa
xor
xor
add
cld
xor
ss
xlat
push
add
xor
sub
sbb
push
pop
jle
call
arpl
sub
lods
ror
sub
shl
jmp
(bad)
cli
jbe
lods
imul
mov
dec
inc
inc
jbe
cmp
inc
inc
sub
push
inc
jmp
xor
aas
push
mov
jns
hlt
sub
sub
adc
pop
push
cmp
push
xor
xor
movs
mov
dec
stos
outs
jge
pop
sub
add
cmc
div
inc
or
and
inc
ins
test
mov
leave
and
adc
add
cdq
xchg
sub
mov
xor
aas
mov
hlt
and
js
and
add
les
sbb
adc
cli
inc
dec
push
jp
or
ds
add
gs
or
rol
movs
mov
je
out
(bad)
xor
mov
daa
test
addr16
or
dec
loopne
leave
icebp
clc
rcl
ret
je
mov
or
les
jmp
pusha
dec
ret
cdq
mov
xchg
mov
cmp
sub
add
je
dec
jb
out
xchg
mov
and
loope
gs
or
and
xor
cmp
ja
outs
pop
imul
sub
jmp
retf
fistp
dec
xchg
or
push
jl
pushf
retf
jbe
aaa
jl
adc
and
in
sub
or
lahf
inc
sub
cmps
or
dec
sub
inc
jns
loop
add
or
push
ins
lods
mov
mov
into
inc
hlt
ins
add
(bad)
loop
add
cld
xchg
pcmpeqb
fsub
adc
adc
mov
dec
inc
ret
clc
dec
push
mov
jge
test
push
cmp
add
push
inc
fidiv
pop
sub
fs
mov
jo
pop
mov
fisttp
push
mov
push
add
lar
aad
mov
jg
add
inc
cmp
xchg
mov
mov
sbb
inc
lock
xor
add
mov
jecxz
clc
shr
lea
lea
push
cmps
pop
ins
inc
icebp
add
pop
mov
loop
movs
adc
mov
add
xchg
lahf
mov
cmps
dec
add
stos
je
sub
or
lods
clc
mov
xchg
xlat
add
lock
mov
pop
xchg
mov
lea
sbb
sbb
add
push
pop
clc
sub
fwait
hlt
daa
jle
lea
adc
cmps
stos
mov
mov
lea
xor
dec
add
call
fld
ret
mov
inc
sbb
or
push
or
or
push
in
sub
mov
imul
push
in
adc
add
ret
sbb
ins
jg
pop
push
add
sbb
sub
xlat
and
mov
jae
and
add
inc
js
out
mov
mov
cmp
ret
call
and
out
pop
xchg
or
pop
jg
cmp
cmp
mov
push
mov
scas
cmp
jge
stc
or
add
add
mov
dec
jle
add
(bad)
xchg
popf
cmp
or
sbb
pop
xor
adc
push
inc
add
or
or
sub
rcr
clc
nop
add
adc
add
fisubr
mov
mov
mov
rol
xchg
or
sbb
xchg
mov
ret
in
inc
and
test
and
pop
sub
not
jmp
xchg
dec
fistp
jmp
in
push
fisttp
movhlps
mov
add
adc
jmp
faddp
jecxz
mov
add
xor
xor
lds
stos
inc
mov
les
mov
in
adc
or
mov
shl
pop
pop
ins
call
add
cli
ret
jp
outs
js
add
outs
sbb
and
test
mov
add
push
add
imul
and
add
mov
fdiv
mov
jo
xor
mov
fwait
jl
inc
int3
mov
mov
out
push
xor
lea
pop
or
rcl
icebp
add
add
iret
hlt
subps
add
add
adc
int
dec
xchg
leave
fadd
adc
or
add
dec
or
mov
cmp
cmp
and
xor
sti
sbb
inc
or
inc
add
push
and
daa
int
add
add
out
rol
pop
inc
mov
mov
inc
and
sub
or
xchg
dec
pop
inc
jno
test
shl
test
mov
cmp
dec
inc
jno
test
fstp
jno
test
dec
ror
inc
dec
dec
cmp
xor
push
inc
or
push
jno
nop
mov
pop
test
popa
outs
enter
jno
enter
pop
pop
pusha
sbb
add
inc
jne
jb
add
cmp
jb
ja
or
mov
sub
daa
jbe
jo
mov
add
add
jbe
rol
add
pop
gs
(bad)
out
push
jmp
sbb
jl
sbb
dec
push
test
pop
cmps
push
lea
push
cdq
shl
cld
pop
push
scas
xor
jo
pop
je
cli
mov
ss
je
add
or
int
mov
mov
or
sahf
stos
int3
mov
ftst
jnp
jl
mov
pop
mov
mov
lds
pop
pop
mov
sti
mov
xor
adc
(bad)
mov
mov
and
lahf
ins
mov
and
nop
mov
neg
shl
sbb
sbb
add
in
or
push
lods
or
add
je
ror
add
movs
ret
cmp
add
push
ss
in
jno
ret
cmp
dec
cmp
mov
dec
push
(bad)
sysret
push
or
gs
call
cmp
xchg
ud2
shl
or
gs
ins
xchg
dec
push
or
inc
lods
js
or
test
pop
scas
data16
mov
in
adc
jb
jge
mov
add
pop
arpl
jo
je
push
sahf
or
jecxz
daa
addr16
xchg
dec
pusha
ret
fcmovb
pop
or
scas
push
xor
imul
pop
or
add
std
cld
add
fild
mov
into
mov
mov
rol
mov
add
add
ds
xor
loop
or
add
les
test
es
mov
nop
enter
sub
mov
mov
mov
xchg
and
(bad)
shl
pop
xchg
loope
push
cld
mov
jb
xor
sbb
xlat
into
xor
xor
mov
hlt
movs
test
dec
push
and
or
inc
and
dec
mov
js
or
(bad)
mov
mov
jl
mov
dec
and
push
and
and
xor
sahf
(bad)
and
pop
add
xchg
xchg
and
and
and
mov
(bad)
add
repnz
or
add
ret
adc
sub
mov
int3
mov
retf
(bad)
pop
add
pop
fisub
xchg
sbb
pop
push
inc
jbe
out
clc
or
ins
push
and
push
enter
lea
mov
popa
push
adc
leave
leave
and
and
leave
leave
leave
and
and
enter
jb
jb
and
jb
and
leave
fbld
pushf
pushf
and
rcr
push
fxch
cmp
add
push
bound
adc
pop
test
xchg
jne
cmps
and
aaa
aas
push
and
push
add
fisubr
imul
dec
adc
xchg
jbe
sub
or
pop
cmp
or
or
test
outs
jmp
call
mov
test
pop
cmc
addr16
dec
add
push
mov
cmp
jbe
aas
enter
rol
or
inc
mov
or
std
(bad)
inc
bndldx
lea
inc
out
(bad)
jbe
mov
sbb
pop
adc
push
mov
dec
mov
jge
sbb
pop
add
inc
test
pop
or
ret
or
push
sti
xor
or
push
out
dec
fwait
adc
mov
adc
cmp
jne
add
push
in
sub
mov
or
add
jne
add
mov
mov
push
in
inc
cmp
jne
mov
outs
and
test
fisub
mov
inc
jmp
fld
in
cwde
sbb
inc
pop
cmp
stc
fistp
mov
mov
adc
and
(bad)
push
pusha
jmp
push
loop
(bad)
std
retf
or
dec
sub
cwde
aad
ficom
or
pop
and
xor
lea
xor
push
sub
add
pushf
cmps
or
inc
mov
xor
arpl
jl
cmp
mov
leave
cmp
nop
adc
arpl
cld
or
fcomp
sbb
enter
inc
ss
inc
xor
sub
pop
mov
in
(bad)
fbld
or
cmc
mov
sahf
xchg
cdq
add
jbe
or
jg
push
sbb
add
inc
nop
(bad)
loopne
and
inc
inc
cmp
adc
imul
adc
mov
stos
push
mov
adc
add
adc
add
popa
(bad)
add
mov
call
mov
xchg
or
fwait
add
or
aam
add
or
adc
shr
inc
out
add
in
sbb
std
fld
push
fisttp
sbb
in
pop
push
pop
mov
or
mov
ret
stos
or
add
pop
imul
push
stos
and
dec
sbb
inc
fwait
sub
aas
adc
cdq
jns
pop
add
mov
push
inc
je
add
mov
add
(bad)
sbb
sahf
int
stos
mov
rcl
mov
sbb
mov
and
and
lea
mov
mov
scas
loope
div
xor
pop
add
stos
pop
mov
fstp
add
mov
add
sahf
(bad)
or
out
sub
sub
fidivr
sub
adc
or
mov
jns
mov
xor
out
sbb
cmp
int3
cmp
and
or
cmp
and
adc
loope
pop
and
pop
adc
and
add
xchg
pop
mov
cs
sbb
add
mov
(bad)
nop
adc
mov
fwait
repnz
(bad)
cmp
stc
add
shl
xor
dec
test
or
(bad)
and
(bad)
pop
add
push
jp
loopne
stos
mov
out
push
or
fdivr
xor
adc
loope
aad
xchg
mov
pusha
add
push
sub
push
jno
adc
push
push
or
mov
and
push
inc
sbb
sbb
pop
test
cmp
jbe
mov
fadd
(bad)
adc
loop
stos
sbb
retf
iret
sbb
mov
add
jbe
mov
or
push
lea
stc
ja
mov
add
mov
adc
and
ins
pop
and
mov
xor
mov
jmp
loopne
push
xchg
lahf
sub
cmp
jb
and
outs
inc
lock
xor
or
(bad)
clc
mov
push
push
or
mov
and
xchg
mov
adc
(bad)
and
add
fcomp
or
push
push
pop
mov
mov
pop
(bad)
bound
and
(bad)
mov
xchg
jge
cmovae
inc
push
mov
mov
cmp
pcmpeqw
cmp
adc
sbb
mov
xor
or
sub
xor
or
push
(bad)
sbb
add
gs
push
push
or
dec
mov
retf
mov
mov
and
ds
stc
mov
cmp
inc
dec
adc
mov
dec
mov
and
int3
mov
dec
jo
scas
popf
cmp
xor
sahf
retf
mov
mov
inc
scas
stos
push
push
pop
or
aas
jecxz
push
test
push
ins
xlat
adc
aad
or
pop
inc
or
dec
dec
inc
xchg
leave
ret
lahf
lods
(bad)
aas
cmp
mov
lods
pop
outs
xor
fmul
adc
fld
add
std
aas
rol
ins
pop
ret
pop
inc
(bad)
dec
fs
push
add
add
sub
rcl
inc
stos
inc
cmps
push
mov
and
adc
push
mov
mov
cmp
adc
inc
jo
sbb
aaa
mov
shl
add
mov
fiadd
add
pop
mov
inc
cmp
or
push
jle
or
xor
sub
jae
mov
or
jne
call
loopne
outs
ins
or
ret
mov
sbb
out
mul
inc
inc
add
jmp
push
cmp
or
sub
das
imul
sub
jbe
sahf
lea
sub
aam
inc
adc
sub
sub
xor
inc
jb
icebp
stos
loopne
push
and
pop
aad
adc
(bad)
xchg
push
or
push
paddd
ret
add
dec
daa
jle
mov
mov
movzx
sar
mov
lods
fcmovnbe
daa
fimul
inc
imul
mov
xchg
or
sub
sbb
mov
add
data16
test
sub
sub
neg
jo
adc
mov
dec
stc
and
add
jg
mov
loopne
or
jae
(bad)
gs
jne
cmp
xor
adc
add
in
xchg
xchg
mov
sbb
sbb
mov
dec
sbb
arpl
test
mov
mov
fdivr
jmp
aam
mov
mov
xor
adc
or
mov
sbb
imul
sub
push
and
jo
test
push
and
shl
push
add
aaa
fisubr
jmp
daa
and
lea
shr
cmp
add
xor
cmp
sub
sub
adc
xor
imul
and
and
cmp
cmp
sbb
mov
fidiv
add
xor
push
mov
add
enter
cmp
mov
mov
mov
std
cmp
or
sub
mov
xor
mov
mov
adc
mov
icebp
nop
xchg
cmp
add
or
add
sub
test
xchg
adc
in
not
inc
add
(bad)
mov
add
xchg
lea
repz
dec
adc
std
in
lea
mov
pop
loope
enter
mul
or
mov
cmc
ret
mov
jle
sbb
pop
scas
ins
ins
add
jmp
data16
iret
loop
push
jae
adc
sahf
push
xchg
pop
adc
sahf
pop
ret
out
(bad)
test
sub
inc
push
or
adc
repz
add
es
push
add
adc
enter
mov
jecxz
jge
mov
and
sahf
std
data16
or
jl
aaa
adc
sti
daa
repnz
daa
xor
stos
ja
test
mov
jge
mov
ins
mov
ret
jge
inc
xchg
inc
pop
xor
loope
ficom
push
and
hlt
sub
rcl
jge
sub
add
pop
inc
or
arpl
cmp
cmp
xchg
mov
dec
push
outs
add
adc
nop
(bad)
addr16
mov
add
jne
sub
cmp
arpl
(bad)
in
sahf
mov
mov
sub
mov
cmp
je
push
imul
cmp
fld
into
sub
call
sub
in
push
jo
or
lock
pop
inc
nop
jnp
mov
cdq
add
adc
ja
pop
sbb
mov
fcomi
ror
pop
add
mov
or
adc
stc
or
les
lock
add
mov
test
in
or
push
stos
xchg
pop
sti
add
in
xor
div
out
or
cmp
pop
inc
dec
ins
adc
add
push
xchg
push
push
push
jl
push
or
jne
push
movs
mov
ror
(bad)
mov
pop
add
(bad)
and
inc
jnp
es
jle
add
shl
test
add
jmp
mov
adc
jg
lds
pop
jl
fbstp
or
jmp
sub
aas
mov
pop
push
dec
add
cmp
sbb
mov
pushf
or
outs
mov
jne
inc
sub
sbb
lea
mov
xchg
pusha
sbb
mov
adc
xchg
or
fimul
push
jl
mov
xor
sbb
test
cmp
pop
les
(bad)
push
push
xchg
push
jp
push
mov
jmp
fwait
ins
ss
or
sbb
mov
lock
mov
arpl
leave
add
mov
xor
mov
mov
mov
stos
jmp
xchg
mov
cmps
pusha
xor
mov
add
(bad)
aad
mov
in
cmp
sbb
sub
cld
add
pop
lods
sub
(bad)
lea
xchg
test
xlat
(bad)
(bad)
ins
or
sbb
sub
jbe
into
inc
sub
pop
test
clc
inc
add
(bad)
(bad)
push
sub
add
fadd
idiv
test
push
jle
lea
sub
jbe
fcomp
mov
add
add
fsubr
or
mov
add
mov
sar
mov
inc
xchg
mov
ror
adc
mov
push
add
ret
shl
dec
inc
dec
fimul
or
jl
ja
(bad)
inc
and
popf
ins
fs
jo
cmps
xchg
mov
mov
ins
add
or
push
push
rol
mov
inc
adc
cmc
push
loopne
cli
test
mov
pop
push
repnz
and
sbb
mov
and
rol
jl
dec
jae
call
adc
rcr
inc
imul
mov
mov
push
push
add
add
das
in
jl
sub
add
jmp
mov
pop
data16
or
ror
inc
aad
cmp
in
enter
call
ins
fisttp
dec
or
add
push
(bad)
or
add
xchg
sbb
dec
and
scas
test
push
sar
mov
sub
mov
push
js
rol
sbb
add
jbe
dec
or
fcmovne
rcl
cli
mov
xchg
(bad)
lods
dec
jge
call
cmp
dec
sti
cmp
sbb
rcr
jbe
iret
sub
sub
out
sub
mov
call
adc
or
and
js
lea
xor
jmp
stos
jo
retf
data16
and
pop
js
es
add
dec
and
ins
dec
inc
add
pop
dec
dec
test
or
pusha
enter
adc
push
mov
push
inc
jbe
xchg
jo
mov
sub
in
test
dec
inc
pop
xchg
fadd
inc
sar
or
or
mov
adc
sub
mov
add
xchg
xor
inc
push
sub
cmp
ins
push
sub
ins
or
(bad)
mov
mov
scas
popf
or
push
inc
and
xchg
shr
adc
adc
xor
stos
ins
sub
and
jl
cmp
mov
sub
enter
data16
push
dec
ror
cs
inc
pop
test
dec
jo
xchg
jae
cmps
js
ds
enter
in
add
pop
push
adc
ficomp
jne
pop
pop
push
sub
aaa
and
push
aam
mov
mov
and
mov
push
adc
or
jnp
dec
xchg
dec
mov
gs
and
add
push
cmp
dec
sub
popf
push
ins
or
xor
and
xchg
sbb
adc
cwde
sub
fs
push
cmp
pop
mov
jb
add
mov
cmp
aaa
dec
push
xchg
inc
add
adc
out
gs
(bad)
je
mov
xchg
push
add
adc
inc
into
shl
jmp
fnstcw
test
xor
pop
aad
inc
outs
ret
ficomp
pop
cli
adc
add
mov
sbb
bts
sahf
push
mov
inc
adc
inc
retf
hlt
mov
sub
mov
cld
cmp
mov
dec
pop
vsubpd
test
lahf
popaw
out
adc
xchg
cmp
enter
test
or
mov
loopne
addr16
adc
mov
test
inc
or
test
add
or
jl
jbe
add
and
mov
xchg
sbb
cli
scas
and
mov
inc
push
mov
or
ror
dec
xor
xlat
fwait
jmp
cmc
add
jo
pop
cmp
jae
mov
pop
inc
icebp
push
and
xor
scas
(bad)
xchg
jl
and
cmp
ror
retf
shl
test
mov
jbe
(bad)
xchg
add
test
pop
and
mov
cmp
sub
into
push
mov
xchg
and
push
sub
mov
sbb
push
add
xlat
ins
imul
aaa
pop
ret
push
in
pop
mov
push
or
aam
adc
dec
or
dec
aaa
cmp
iret
jmp
mov
xor
mov
xor
push
inc
ja
adc
xchg
je
mov
mov
add
jmp
xchg
adc
add
mov
popf
cmp
neg
out
test
sbb
xlat
push
sbb
(bad)
in
mov
push
or
mov
(bad)
je
aaa
aad
or
mov
push
call
push
or
ds
pop
mov
jne
adc
add
cmp
(bad)
jnp
mov
aad
clc
mov
xlat
in
push
loop
mov
jns
add
pop
mov
aas
(bad)
pop
inc
mov
push
add
outs
jmp
dec
or
mov
cmp
inc
stos
ins
pop
add
mov
mov
jne
pop
or
xchg
adc
push
sub
cmp
mov
aad
and
retf
addr16
add
cmp
xchg
sbb
inc
pop
mov
sbb
loopne
mov
inc
inc
sub
jl
jl
mov
xchg
or
or
mov
jl
lahf
jne
adc
sbb
jmp
dec
mov
(bad)
fadd
mov
into
mov
mov
test
mov
stos
dec
jne
bound
fdivr
aaa
daa
mov
pop
mov
imul
jmp
jnp
adc
xchg
mov
sbb
movs
outs
pmullw
test
cmc
lods
hlt
sub
jmp
jo
fisubr
xlat
push
cmp
xchg
sub
mov
dec
inc
mov
aam
add
ret
push
inc
cmp
cs
(bad)
test
aaa
jmp
arpl
ret
add
popf
push
jnp
sbb
jl
pop
aad
dec
mov
mov
mov
push
stos
fcmovnu
push
sub
mov
ds
loopne
push
jno
ret
dec
shl
sub
dec
adc
pmaxsw
or
(bad)
or
or
dec
stos
cwde
rcr
mov
pusha
arpl
iret
mov
rcr
mov
daa
pop
std
pop
cmp
mov
sar
mov
(bad)
push
inc
inc
sub
call
xchg
dec
adc
pop
add
pop
mov
nop
inc
mov
or
xor
mov
sub
push
test
mov
das
add
(bad)
or
lea
nop
add
inc
ret
fisttp
mov
inc
pop
ret
jno
push
pop
test
xlat
mov
aaa
loopne
inc
jmp
pop
adc
lock
in
sub
sub
es
jle
idiv
retf
xor
or
ins
adc
push
mov
push
add
and
fidiv
push
add
and
push
lods
(bad)
loop
mov
mov
das
dec
ror
mov
xchg
repz
popf
add
ret
dec
mov
mov
dec
cmp
mov
push
xchg
add
dec
fbld
sbb
lods
inc
cmp
fadd
sub
ins
inc
in
add
push
dec
stos
fidivr
dec
adc
add
adc
in
je
xor
mov
adc
push
mov
push
add
jae
jne
mov
gs
adc
(bad)
cmp
mov
mov
xor
shl
pop
mov
jne
xor
inc
sti
jb
xor
inc
push
push
out
sub
xchg
push
adc
sbb
scas
into
ds
movs
push
add
jnp
in
aad
sbb
lea
and
je
jae
adc
call
mov
imul
mov
dec
outs
adc
inc
stc
mov
xchg
lds
inc
xchg
mov
or
test
xchg
or
test
cmp
push
test
dec
sub
cmps
add
imul
sub
data16
jne
(bad)
cmp
(bad)
jle
(bad)
(bad)
fnstenv
jmp
mov
ins
jecxz
pop
dec
or
mov
pop
xchg
cs
push
fnstsw
jne
dec
adc
lahf
mov
mov
and
std
add
xchg
sub
lds
xchg
jle
push
jge
jmp
jb
mov
(bad)
call
sub
(bad)
push
cmps
sbb
mov
fld
inc
sbb
jge
dec
mov
jmp
mov
mov
sti
dec
aad
dec
pop
pusha
adc
or
sub
sbb
mov
sub
bound
xchg
and
pop
lea
mov
push
call
xchg
sbb
cli
mov
sbb
xor
sub
stos
sar
add
cmp
adc
adc
popa
mov
out
xchg
pusha
enter
ja
cmp
mov
setbe
push
cld
jp
ret
cmp
and
push
loopne
push
out
adc
push
or
mov
add
sub
push
xchg
test
push
aad
pusha
pop
push
or
imul
jmp
jo
fcomp
cmc
inc
pop
adc
xchg
sbb
jmp
mov
and
inc
rcl
lds
fyl2x
inc
imul
ss
lfs
mov
es
jae
arpl
sub
or
or
nop
out
or
seta
sub
shl
pop
jmp
mov
add
adc
pop
jge
retf
cmp
jae
jo
addr16
repnz
setae
enter
int3
jmp
and
ins
repnz
sbb
out
(bad)
test
(bad)
jae
dec
add
sbb
sub
cmp
cmp
cmc
in
add
pusha
mov
jmp
push
add
push
mov
jne
movs
pop
int3
lahf
push
test
xor
leave
shl
sbb
and
push
and
loopne
inc
adc
pusha
inc
push
jmp
or
adc
sbb
add
jns
sbb
xor
mov
jnp
xchg
addr16
push
jle
pop
push
mov
jb
push
fs
sbb
mov
xchg
mov
stos
push
rcl
imul
cmp
fcomp
mul
jns
fdivr
fstp
pmaxub
syscall
loopne
pop
add
leave
add
push
or
adc
(bad)
ret
jmp
adc
mov
dec
adc
pop
lahf
add
aaa
jmp
or
cwde
mov
pushf
sub
mov
cmp
pop
pop
xor
(bad)
jne
mov
sahf
and
add
in
pop
add
mov
and
inc
lock
mov
aaa
mov
sbb
sbb
bnd
pusha
imul
jbe
neg
aas
inc
sbb
or
ret
leave
mov
mov
mov
retf
shl
jo
xor
add
sbb
push
stc
or
xor
or
jmp
push
repnz
inc
popa
add
jae
or
sbb
mov
or
dec
xor
mov
pop
out
lahf
data16
js
sbb
adc
sbb
fstp
pop
push
mov
xchg
dec
xor
sub
sub
sbb
repz
aaa
mov
or
or
aam
fistp
cmp
push
pmulhuw
push
mov
lods
pop
sar
add
inc
cmp
stos
fwait
ret
sub
sub
(bad)
pop
and
inc
mov
cmp
sbb
test
mov
jbe
jg
cmp
push
jl
sbb
rol
out
cs
sbb
nop
push
jl
inc
inc
mov
mov
(bad)
aam
pop
loopne
loopne
and
sbb
xchg
jl
dec
add
jo
fs
call
daa
adc
push
fimul
hlt
sbb
outs
sub
sbb
(bad)
sbb
mov
push
sub
mov
xlat
loop
adc
inc
push
pop
adc
fiadd
enter
mov
push
into
xor
out
sub
jbe
inc
xor
push
fldcw
ins
xchg
pusha
or
or
sahf
mov
jg
or
fstp
add
(bad)
sar
and
(bad)
fadd
and
dec
sub
cmp
jge
push
enter
push
loope
sbb
push
pop
ds
xchg
or
mov
jbe
iret
shl
sbb
add
push
or
mov
in
mov
dec
pop
jge
jmp
jne
or
sbb
cmp
push
xchg
outs
xor
push
sbb
push
shr
pop
inc
push
sub
loopne
add
jecxz
dec
aad
lahf
sub
sbb
test
pop
push
sub
pushf
outs
rcr
jne
jge
int
xchg
or
and
mov
test
stos
std
mov
mov
add
inc
sub
sub
mov
adc
mov
jmp
mov
dec
test
in
mov
mov
in
daa
nop
or
mov
add
mov
mov
sbb
dec
xchg
mov
adc
rcl
mov
mov
add
inc
mov
cli
adc
lods
adc
nop
push
dec
xor
xor
push
mov
pop
clc
or
mov
in
add
pop
xchg
sub
xchg
sbb
inc
sub
int
stos
pop
mov
xor
js
(bad)
xchg
clc
scas
jle
pusha
or
mov
push
cmp
xchg
fnsetpm(287
shl
mov
and
lds
push
adc
(bad)
push
and
cmp
outs
popf
call
jb
inc
or
ins
mov
pushf
retf
mov
jl
jle
pop
out
aad
push
arpl
into
sbb
adc
shrd
out
jl
push
xor
sbb
leave
repz
add
dec
and
add
push
mov
pop
push
lea
std
stc
mov
mov
rcl
adc
jge
xchg
cmps
fidivr
mov
or
cmp
mov
jmp
sbb
and
or
or
mov
pop
cwde
(bad)
cmp
adc
shl
or
cmovb
and
retf
cmp
or
sub
pop
add
adc
pop
push
(bad)
mov
jb
sahf
mov
or
cwde
pop
mov
ret
test
into
adc
dec
fld
push
sub
rol
jb
and
ins
aad
movs
jae
das
retf
add
or
mov
mov
xchg
mov
pop
jae
lea
dec
enter
adc
outs
mov
xchg
mov
xor
test
inc
mov
(bad)
adc
dec
aad
mov
outs
scas
sub
jmp
and
mov
mov
jecxz
mov
add
add
adc
icebp
jbe
in
adc
sbb
push
adc
(bad)
xchg
cmp
ret
int3
loop
mov
add
mov
mov
add
sbb
lea
sub
pop
add
xchg
and
retf
ja
cmp
xchg
cmp
push
in
xchg
(bad)
pop
add
and
inc
inc
dec
add
add
inc
sar
dec
sub
adc
mov
dec
shl
in
mov
xchg
popa
outs
add
pop
sub
jne
pop
test
ss
pop
inc
or
mov
mov
or
stos
pop
sub
push
cmp
ficom
dec
cwde
mov
fs
add
ror
movs
les
stos
sub
add
xchg
dec
daa
mov
scas
cmp
jg
push
jne
lea
cmp
jge
adc
and
lods
mov
dec
inc
jnp
mov
inc
dec
js
inc
mov
in
add
adc
sbb
adc
xchg
push
adc
inc
aas
adc
fistp
mov
lods
xchg
dec
mov
pop
mov
mov
adc
pop
add
leave
jne
or
or
(bad)
fstp
sbb
xchg
clc
repz
lea
pop
mov
cmp
jmp
leave
sbb
jg
add
(bad)
adc
enter
leave
dec
and
pop
dec
aam
mov
fadd
aam
sub
push
int3
into
xchg
add
clc
js
aaa
jecxz
unpcklps
test
pop
cmp
inc
dec
or
jne
jno
push
pop
pop
dec
add
pop
das
pop
fstp
or
ja
dec
or
push
jbe
xlat
inc
mov
mov
out
mov
mov
xor
(bad)
and
mov
cmp
adc
push
daa
add
pusha
lods
clc
loopne
aam
outs
lea
ret
inc
adc
and
mov
int3
inc
inc
test
iret
push
inc
cwde
add
pop
mov
and
test
test
adc
xor
xor
mov
add
call
inc
or
sub
test
sub
add
enter
or
mov
add
pop
mov
sbb
sub
adc
adc
add
or
cmp
sub
and
neg
fmul
popf
stos
push
fistp
movs
bound
stos
xor
(bad)
js
xor
mov
mov
dec
outs
shl
je
inc
cli
push
jmp
stos
xchg
jae
bound
adc
stos
retf
inc
adc
mov
add
arpl
clc
jae
push
sbb
mov
and
push
adc
adc
loopne
nop
pop
pop
sbb
mov
xor
data16
pop
lods
outs
jno
cmps
push
push
mov
test
sbb
jae
bound
clc
cmp
lods
mov
enter
push
pop
js
mov
mov
daa
cli
gs
mov
mov
xlat
or
daa
ins
pop
or
enter
push
adc
enter
mov
cmp
mov
sub
jb
mov
in
sbb
(bad)
push
stos
jo
jmp
loope
or
dec
and
mov
jmp
(bad)
out
or
xor
dec
test
push
xor
inc
sti
and
sub
adc
adc
test
and
loopne
xlat
mov
(bad)
cmp
cmps
adc
ss
jecxz
loopne
popa
sub
mov
retf
or
adc
xchg
mov
xchg
sub
cmovne
xor
xor
je
ins
jo
and
mov
pusha
cmp
sub
sub
lods
add
dec
or
inc
or
jmp
pop
std
push
inc
push
pop
push
aad
ja
mov
xor
adc
push
out
xchg
or
push
add
push
mov
adc
push
ins
pop
lock
cmp
fdiv
push
ins
mov
sbb
fmul
xchg
pop
call
js
rol
xor
mov
call
add
push
add
add
add
sbb
sahf
movs
dec
cmps
shr
push
push
popf
push
xchg
ds
adc
repnz
fild
ficom
in
mov
fstp
cmp
mov
sti
add
xchg
and
dec
lahf
or
jne
inc
xchg
sub
ret
add
repz
fs
jne
push
stos
jb
mov
and
and
sar
jb
inc
sbb
sbb
mul
jno
xchg
lods
jmp
mov
stos
dec
push
and
inc
in
or
adc
push
fmul
push
push
ret
dec
cld
mov
cmp
sub
test
je
mul
mov
rol
out
mov
pop
or
mul
sub
dec
test
xchg
loop
push
js
arpl
sub
(bad)
jne
mov
lods
lods
xor
and
test
ss
cwde
push
stos
rol
fisub
jl
pop
mov
inc
mov
cmps
in
int
mov
es
add
push
pusha
add
lea
loope
stos
out
mov
and
mov
repz
in
mov
test
mov
rol
mov
or
xor
jae
in
jns
inc
add
cmp
mov
jo
xor
cmp
inc
cmp
daa
xchg
sbb
and
sbb
or
add
adc
inc
pop
push
ins
lods
push
sbb
stos
and
or
adc
push
sbb
imul
(bad)
or
cmp
(bad)
push
mov
or
lahf
ret
sbb
neg
push
add
inc
rcr
sbb
dec
ja
inc
jnp
sbb
inc
sub
mov
mov
fwait
adc
jge
idiv
ja
jge
inc
or
ss
sbb
xchg
adc
inc
cld
rcr
mov
inc
push
and
jmp
inc
aad
pop
jb
mov
out
int3
or
jge
ror
pop
add
test
sub
inc
pusha
or
mov
inc
stos
and
adc
cmp
jmp
mov
and
xchg
xchg
inc
push
add
mov
mov
out
xchg
sub
add
mul
pop
mov
mov
in
or
or
xor
inc
movs
add
pusha
sub
jg
push
lea
jmp
add
pop
pop
sbb
mov
int
inc
xor
not
in
dec
adc
or
pusha
jle
jae
push
fs
clc
int3
mov
sti
lea
mov
xchg
and
test
ffreep
fucomi
(bad)
adc
inc
and
ret
jge
rcl
xor
mov
fdiv
add
and
mov
rcr
pop
dec
or
sti
jb
mov
jmp
pop
pop
and
xchg
xchg
pop
or
mov
sbb
pop
lds
push
pop
lods
add
inc
xor
sub
cld
inc
cmp
dec
call
adc
lea
push
sbb
in
sbb
js
add
fs
or
mov
jp
add
nop
cmp
add
adc
jo
movs
adc
out
sbb
out
adc
jo
mov
xor
lods
pop
out
ret
jo
push
mov
adc
push
ins
sbb
ins
push
cwde
xor
int
mov
jae
sub
cmp
mov
lea
(bad)
pushf
mov
mov
xchg
or
pushf
cmp
mov
inc
and
sbb
pop
push
mov
inc
fst
mov
mov
adc
adc
or
push
add
(bad)
mov
ud0
inc
adc
jmp
test
push
xchg
xchg
je
mov
mov
dec
shl
sub
and
(bad)
loop
mov
cmp
cmp
jo
sub
mov
in
and
adc
inc
mov
add
push
pop
xor
imul
sbb
in
adc
sub
jo
scas
or
adc
xchg
test
push
test
jge
push
pop
push
add
xchg
pop
or
xor
xor
cmp
loopne
sub
je
cmps
dec
dec
add
fcom
jne
jbe
xchg
fnsave
adc
bnd
(bad)
pop
test
add
jne
push
cmp
mov
dec
sti
jge
push
inc
mov
in
(bad)
call
cwde
jbe
out
aad
ja
and
adc
and
or
jp
cmc
or
sub
dec
jne
clc
inc
call
jb
inc
jno
outs
dec
cmp
xchg
jmp
les
push
jbe
test
push
mov
outs
add
xlat
inc
add
adc
sahf
lahf
ins
mov
pop
mov
adc
xchg
addr16
xchg
lahf
mov
mov
inc
or
aad
add
enter
mov
inc
add
data16
pop
add
cmp
mov
fistp
pusha
mov
add
push
mov
popa
inc
sbb
jo
mov
sub
xchg
push
mov
xor
jp
addr16
sub
data16
adc
xor
je
sbb
std
add
push
sbb
stc
inc
neg
add
cmp
jb
nop
test
push
mov
int3
dec
sbb
ror
js
mov
sbb
add
jge
js
add
and
xor
sub
push
inc
stos
cmp
inc
mov
xor
push
std
test
std
js
xchg
sbb
or
lahf
push
ins
sbb
(bad)
mov
or
mov
adc
repz
pop
(bad)
mov
cs
scas
xchg
outs
adc
cmp
test
sbb
add
dec
xor
xchg
push
dec
lods
sbb
add
jne
add
add
fld
dec
inc
js
outs
cmc
or
xchg
test
js
inc
jo
mov
mov
mov
inc
add
das
dec
mov
jp
xchg
test
fst
outs
mov
push
jmp
enter
sbb
rcl
fdiv
sbb
sbb
loopne
xor
hlt
clc
cld
add
add
or
fs
sbb
fs
sub
fs
cmp
fs
dec
dec
push
fs
pop
pop
pusha
fs
fs
jl
fs
fs
cwde
pushf
mov
movs
test
mov
fs
mov
fs
enter
fs
fsub
(bad)
fs
clc
int3
int3
pop
or
add
add
xor
xor
xor
xor
test
xor
xor
test
xor
xor
test
xor
xor
test
xor
repz
sets
test
rol
and
inc
add
sub
cdq
stc
xchg
inc
add
cmp
cmps
jmp
dec
pop
cmps
imul
(bad)
in
pop
add
xor
add
ins
ja
jo
cs
ins
add
inc
jne
outs
(bad)
cmp
add
dec
push
add
(bad)
std
jmp
je
arpl
outs
jb
and
popa
xor
and
cmp
ds
(bad)
push
push
inc
push
dec
inc
inc
inc
inc
dec
dec
cmp
ins
mov
push
dec
inc
dec
or
and
add
push
push
inc
imul
call
push
dec
push
inc
xor
pop
add
add
jae
inc
push
push
das
in
push
push
aas
imul
dec
inc
arpl
cmp
xor
or
inc
gs
push
fstp
(bad)
push
push
and
push
popa
je
cmp
outs
fstp
pop
jns
jbe
jb
jb
and
jne
fcmovnu
repnz
ror
dec
push
pop
jae
mov
sbb
inc
aas
xor
daa
push
retf
jmp
add
je
jnp
adc
je
sub
jb
jae
sti
fbld
outs
ja
pop
inc
jne
jb
fucomp
fisubr
jmp
popa
ins
inc
jl
in
xchg
inc
push
aaa
push
inc
pop
dec
ins
outs
imul
(bad)
or
data16
je
push
cs
aam
lods
mov
cs
sbb
cmp
add
pop
jbe
mov
repnz
inc
add
fwait
or
shl
hlt
and
or
leave
dec
ss
in
add
fdiv
ins
jae
sub
pop
(bad)
rol
cmp
mov
sbb
pop
and
mov
fldenv
add
lods
cmp
fprem
mov
dec
aam
ret
call
fs
fs
repz
repz
jnp
mov
pop
fsub
call
ins
pop
sbb
xlat
add
imul
test
xor
jae
addr16
jo
mov
add
jb
sbb
mov
push
daa
sbb
inc
jo
and
and
ds
mov
push
repnz
ins
(bad)
rol
inc
out
and
mov
ficomp
gs
test
xor
push
sub
inc
call
push
lahf
shr
fdiv
mov
fcomp
jae
mov
mov
push
fnsave
movs
add
aas
push
add
das
adc
mov
sti
shl
(bad)
jae
dec
sti
sbb
(bad)
ds
and
or
pop
inc
dec
or
sub
sub
sub
add
cmps
push
jae
jns
add
cmp
dec
sbb
dec
pop
dec
mov
inc
push
(bad)
and
inc
mov
pop
pop
sbb
jmp
mov
sub
or
add
add
adc
fwait
mov
inc
add
push
add
xor
sub
push
cmp
xlat
cmp
call
aas
mov
sbb
out
jns
scas
lldt
sbb
add
fcomip
lock
test
mov
out
out
sub
pop
add
add
idiv
aas
pop
paddusw
pop
mov
fs
pusha
dec
dec
add
push
pop
or
or
adc
sbb
sub
inc
push
pusha
jo
mov
frstor
add
add
add
sub
dec
add
pop
mov
inc
or
add
adc
add
mov
mov
or
popa
add
out
adc
or
mov
xor
add
or
cvtpi2ps
inc
adc
adc
sub
add
adc
aaa
(bad)
jg
or
inc
add
push
add
inc
add
add
outs
inc
les
push
mov
xlat
jne
test
pop
inc
adc
fdecstp
pop
or
push
fisttp
push
das
inc
inc
aaa
dec
sbb
or
adc
pop
adc
lock
js
and
cld
jg
add
add
add
dec
gs
(bad)
pop
mov
xor
data16
mov
push
push
jnp
add
mov
mov
data16
push
test
push
push
out
sub
add
add
cmp
ja
sbb
gs
add
inc
push
mov
xor
add
add
js
pop
pop
add
pop
sbb
(bad)
push
mov
into
xchg
retf
xchg
adc
jecxz
inc
call
cdq
outs
add
out
out
xchg
or
jae
ja
outs
setp
mov
push
sbb
test
mov
pop
pop
sti
fadd
push
and
or
and
scas
mov
sub
xchg
shr
and
or
xor
push
xchg
cmovg
dec
add
jne
and
pop
gs
add
test
test
xchg
or
outs
or
jnp
mov
add
add
or
rcr
popa
or
neg
add
fild
mov
add
add
mov
rol
push
retf
or
gs
mov
xlat
push
sub
mov
bound
scas
sub
mov
imul
mov
mov
jnp
iret
mov
add
xlat
mov
mov
sub
popa
sbb
in
outs
pop
dec
jnp
pop
xor
xchg
sub
or
nop
out
out
xor
xchg
pushw
add
push
add
ret
xchg
mov
xchg
outs
xchg
sbb
pop
nop
and
mov
js
outs
add
adc
pop
push
xchg
inc
add
sub
pop
fisttp
and
daa
cmps
mov
das
je
inc
and
shr
scas
add
retf
cmp
push
leave
outs
sbb
cmp
push
cmp
call
add
sub
test
xchg
out
lea
frstor
imul
mov
addr16
imul
pop
push
arpl
pop
xchg
jge
cmp
neg
sub
or
sub
mov
fs
add
pusha
ss
fiadd
push
mov
(bad)
or
push
adc
rcr
das
add
sbb
cdq
cmp
inc
in
std
dec
pop
adc
sbb
aas
sbb
cdq
rol
addr16
push
add
imul
or
xchg
shld
push
xchg
jae
or
add
mov
pusha
pop
cmp
outs
push
jbe
adc
sub
ins
and
xchg
sub
xchg
xchg
sub
push
dec
add
xor
ror
dec
jnp
jno
(bad)
stc
xchg
jmp
inc
mov
xlat
outs
or
adc
and
aad
xlat
arpl
push
repz
je
pop
push
outs
ins
add
dec
fsub
push
ins
outs
pop
fs
ds
and
arpl
mov
imul
pop
jns
outs
ins
imul
mov
xchg
inc
mov
daa
loope
mov
xchg
and
mov
sbb
aaa
and
xchg
jns
or
cmp
push
and
sbb
aaa
inc
dec
dec
dec
es
aaa
sar
mov
cmp
aad
add
leave
mov
pop
cwde
or
aas
lock
mov
mov
mov
sub
push
inc
and
mov
add
mov
cdq
and
jb
sbb
sbb
mov
jg
adc
shr
adc
pop
cs
mov
add
stc
(bad)
and
cdq
mov
repz
jnp
mov
ror
sti
pop
fiadd
add
cmc
call
inc
push
add
aaa
popa
mov
psubq
inc
and
xchg
or
jae
test
or
sbb
shr
xchg
pop
pop
inc
jb
push
test
repnz
sbb
test
popa
sbb
imul
or
sub
mov
or
jb
push
add
push
popa
xchg
lock
mov
scas
cmp
xor
mov
popa
mov
popa
stos
(bad)
jmp
push
repnz
xor
cmp
in
lds
lahf
stos
aad
lahf
js
(bad)
fs
jbe
push
mov
popa
fstp
xor
jno
jns
dec
nop
or
loopne
mov
jns
popa
push
pop
fist
pop
addr16
fdiv
push
xchg
sbb
sub
pop
add
or
cmp
push
adc
adc
sti
imul
mov
mov
das
sub
ja
mov
gs
mov
jno
mov
cld
ror
pop
retf
jp
popf
push
fwait
int
adc
rcr
fs
xor
hlt
dec
retf
popa
pop
pop
lods
add
add
jb
inc
mul
jmp
push
or
adc
pop
cmp
addr16
or
stos
jnp
xor
pop
pop
cmp
test
shl
sbb
or
retf
mov
jne
and
fcomp
ins
add
dec
add
cmps
fimul
and
mov
sub
call
ja
sbb
out
and
sbb
add
push
outs
push
pusha
xor
arpl
and
xchg
pop
xchg
push
mov
pop
or
jmp
cmp
mov
jg
push
es
or
mov
add
(bad)
xor
or
xor
pop
arpl
or
fidiv
retf
adc
test
adc
push
sub
(bad)
aad
imul
add
bound
pushf
xor
adc
or
bndldx
in
xlat
add
push
movs
mov
xchg
jmp
xor
imul
add
mov
mov
ins
or
and
in
add
and
(bad)
xchg
push
mov
arpl
sbb
jmp
gs
jl
pop
jne
or
out
push
int
test
sar
and
or
sbb
push
fcom
push
outs
adc
push
or
push
push
jb
sbb
test
sbb
and
maxps
pop
or
jge
sahf
pop
add
rcr
dec
dec
mov
push
mov
dec
daa
or
outs
jg
mov
mov
pop
mov
mov
sbb
push
movs
pop
clc
or
push
dec
mov
or
inc
iret
xchg
pop
ret
push
mov
das
or
mov
xchg
pop
xor
outs
pusha
pop
pop
sbb
xchg
inc
fwait
popa
or
or
pop
btr
in
popa
and
ins
mov
sbb
stc
imul
rcr
cmp
xor
adc
sbb
sub
out
lods
sti
pop
mov
dec
sbb
sbb
call
fs
pusha
mov
jg
xchg
ins
sub
push
jecxz
jmp
das
cwde
test
arpl
leave
sbb
xlat
mov
jbe
jne
rol
not
xor
dec
xor
add
loope
and
or
adc
and
outs
adc
arpl
adc
adc
shr
mov
pop
(bad)
sbb
enter
popf
je
cmp
movs
je
add
push
leave
(bad)
stc
dec
inc
sub
jne
jl
out
add
inc
popa
setb
pusha
or
push
(bad)
es
jne
ja
ins
stc
xchg
lock
jo
dec
std
addr16
inc
mov
outs
pop
repz
jnp
add
adc
mov
inc
das
ins
push
cwde
shl
mov
push
int3
fwait
iret
sbb
jmp
adc
inc
and
call
ror
push
sub
xchg
or
or
adc
lea
sbb
in
pop
aaa
jo
outs
arpl
or
jb
addr16
out
mov
push
rcl
daa
sar
outs
jae
jbe
outs
xchg
xlat
jp
sti
sbb
test
or
jae
call
and
pop
or
shr
(bad)
push
or
dec
cld
out
ret
inc
test
pop
xor
das
add
pop
sbb
fiadd
popf
add
cmp
(bad)
push
add
ds
mov
imul
loope
(bad)
pop
mov
dec
inc
push
inc
jge
add
dec
cmp
push
scas
ja
inc
popf
mov
sub
call
dec
pusha
sbb
out
or
addr16
popa
jmp
jp
aaa
xor
mov
fisubr
and
sbb
es
sbb
ror
sub
popf
inc
push
or
inc
gs
push
movs
scas
add
mov
xlat
adc
test
aad
ins
arpl
xchg
jp
inc
push
jae
mov
or
pop
inc
inc
fnsave
gs
ins
push
add
ficom
sbb
or
jo
imul
and
bound
arpl
add
sbb
dec
imul
repz
jge
pop
gs
xor
out
jmp
addr16
dec
mov
mov
icebp
stc
dec
or
add
jecxz
add
fidiv
push
sbb
jno
xor
pop
mov
(bad)
pop
das
push
test
pop
das
(bad)
pushf
jl
(bad)
lds
push
or
mov
add
mov
fistp
dec
xor
pop
pusha
rcr
sbb
and
or
pop
add
ins
cmp
or
or
test
sbb
pop
in
jns
cmp
or
cmp
cmp
cmp
in
rol
fisttp
xor
(bad)
push
mov
sti
fistp
sub
lahf
add
enter
imul
pop
pushf
addr16
xor
std
cmp
test
inc
push
add
xchg
lea
dec
push
jmp
add
fldenv
rcl
mov
inc
ret
outs
jne
nop
push
adc
je
add
or
xchg
retf
daa
cs
ss
addr16
test
sbb
popa
scas
inc
enter
xor
xchg
(bad)
cmp
cwde
das
push
mov
add
add
sub
mov
mov
stc
fs
clc
sub
jns
cmp
pop
fisttp
mov
mov
daa
jmp
and
add
or
lock
stc
imul
ret
xor
mov
daa
sbb
push
sti
push
sbb
pop
cmp
and
lds
add
daa
popf
cmp
adc
or
mov
(bad)
das
add
dec
loopne
dec
out
lea
jmp
pop
xchg
arpl
add
adc
cmp
daa
sbb
dec
jno
dec
data16
jae
mov
cmp
jns
pusha
inc
jmp
jno
or
sub
mov
add
add
add
jno
inc
dec
or
test
pop
or
add
pop
aam
xor
inc
push
adc
repnz
loopne
in
jno
add
inc
ins
dec
inc
cdq
jmp
gs
popa
outs
fs
gs
dec
jb
outs
addr16
ud2
jb
mov
inc
imul
jns
push
sar
sbb
mov
mov
sbb
daa
push
imul
outs
adc
push
inc
js
je
push
inc
sbb
arpl
or
cmp
outs
jbe
outs
outs
sbb
dec
mov
mov
push
ds
cmp
ins
push
sbb
jae
lods
or
pop
std
or
ins
(bad)
mov
jb
lods
xorps
mov
dec
gs
push
push
pop
xor
sbb
pop
ins
xchg
dec
mov
adc
dec
imul
add
fwait
add
adc
or
mov
sbb
fldlg2
jmp
sbb
(bad)
sbb
push
push
mov
jo
or
ins
ins
mov
jbe
ins
jg
popa
call
inc
int
popa
cmp
outs
outs
sbb
(bad)
xor
cwde
adc
bound
pushf
pusha
ret
dec
jb
enter
(bad)
dec
and
into
fs
in
sbb
cmp
loope
mov
std
or
ins
test
push
dec
inc
rcr
pusha
test
popa
imul
push
sbb
or
das
sbb
and
sbb
lea
mov
imul
ja
repz
inc
jns
aaa
push
imul
and
and
push
xchg
nop
in
(bad)
adc
and
push
push
outs
imul
rsm
push
mov
retf
push
push
gs
push
popa
and
pusha
into
mov
bound
adc
ins
jmp
sub
mov
sbb
ins
inc
mov
imul
les
push
push
xor
nop
sub
jae
popa
popa
xchg
fist
jne
push
sub
and
jo
fnstenv
adc
push
dec
gs
and
lds
in
cmp
push
ss
cmp
adc
xchg
retf
mov
push
call
add
adc
adc
jae
imul
adc
xor
outs
jbe
push
scas
xchg
mov
imul
push
adc
xor
idiv
enter
add
jae
out
jge
dec
mov
jb
jb
addr16
adc
cmovge
fmul
arpl
jne
xor
sbb
ins
repz
js
mov
repz
jno
jne
dec
inc
mov
mov
mov
pop
inc
jne
inc
sub
mov
mov
loope
or
or
jnp
jns
arpl
push
push
mov
mov
mov
inc
outs
js
lds
imul
arpl
mov
int
ret
xor
push
shl
popa
xor
ins
push
imul
add
lock
addr16
pusha
or
sub
inc
mov
or
stos
ins
jae
push
push
fwait
xchg
pop
add
mov
dec
or
setbe
xchg
sub
mov
retf
cmovl
or
sbb
pop
imul
cmovae
fidivr
xor
add
mov
pop
ds
sar
mov
cdq
sti
adc
push
jecxz
adc
fcomp
mov
or
ja
or
inc
push
std
ins
fld
sbb
jo
aad
repnz
fldcw
or
add
ins
inc
add
add
cmp
fisubr
add
push
imul
test
add
fist
sbb
mov
into
fsubp
add
xor
pop
adc
out
fld
and
or
xchg
add
cs
ret
arpl
xor
fnsave
sti
adc
pop
or
daa
inc
imul
sub
push
or
or
cs
mov
push
adc
lock
test
or
add
add
inc
add
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
add
add
add
add
pop
add
add
add
add
sbb
add
or
add
cwde
add
or
add
fadd
sbb
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
js
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
sub
add
in
add
add
add
add
add
sbb
add
daa
add
push
add
add
add
add
add
sbb
add
add
add
sub
add
add
add
add
add
add
add
add
sbb
add
add
add
das
add
test
add
in
add
add
add
add
add
add
test
add
add
add
pop
add
sub
add
add
add
add
add
add
add
js
add
or
add
or
add
test
add
add
add
add
add
add
add
add
cmp
add
in
add
add
add
mov
add
in
add
add
add
add
add
add
add
rol
add
or
add
add
add
add
lock
add
add
scas
add
add
add
add
add
add
lods
add
fadd
add
in
add
add
add
lock
add
stos
add
add
add
add
add
add
add
add
add
sub
add
or
add
add
add
add
dec
add
add
add
in
add
add
add
movs
scas
add
add
add
add
add
add
add
scas
add
inc
add
in
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
cmp
add
in
add
add
add
cwde
mov
add
add
in
add
add
add
add
add
add
add
fadd
add
or
add
add
add
add
clc
add
add
mov
add
in
add
add
add
je
add
mov
add
in
add
add
add
sub
add
add
add
add
add
add
pop
add
add
add
or
add
nop
add
or
add
call
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
loopne
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
fadd
add
push
add
add
add
add
add
add
ret
add
(bad)
add
add
add
add
add
add
mov
xchg
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
int3
add
lock
add
add
add
add
add
int
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
enter
or
add
adc
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
les
add
adc
add
in
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
cwde
add
add
test
add
add
add
mov
rol
add
add
in
add
add
add
je
add
add
add
in
add
add
add
js
add
add
add
in
add
add
add
or
inc
add
push
add
inc
add
push
add
dec
add
inc
add
add
add
add
inc
add
push
add
inc
add
add
add
inc
add
inc
add
inc
add
add
push
add
inc
add
dec
add
inc
add
inc
add
dec
add
inc
add
add
add
push
add
push
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
push
add
or
add
jg
daa
bound
xchg
and
sub
ja
inc
inc
movq
add
add
inc
add
test
add
inc
inc
(bad)
(bad)
cld
inc
jg
retf
ud0
pusha
ja
inc
inc
inc
hlt
inc
inc
add
add
add
add
push
add
add
add
jg
pop
adc
adc
adc
pop
fstp
fstp
shl
sbb
adc
adc
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
lahf
lahf
add
js
add
sbb
add
add
add
add
rol
add
fcomp
add
out
add
nop
add
(bad)
inc
lock
inc
fist
inc
sar
add
js
add
outs
inc
shl
mov
out
add
iret
iret
add
mov
lock
xor
add
add
test
add
add
(bad)
jmp
call
lea
dec
jns
inc
addr16
mov
inc
add
scas
xor
xchg
bound
add
add
add
add
push
push
add
dec
sbb
add
adc
bound
add
idiv
add
call
pop
add
loopne
add
fild
add
push
xor
pop
mov
add
pushf
cwde
add
test
rol
mov
add
loopne
add
clc
lock
cli
cmc
add
stc
repnz
imul
add
(bad)
add
add
add
lahf
push
add
cmps
pop
add
push
loope
jp
cmc
add
(bad)
add
popf
and
add
add
add
add
and
add
inc
push
add
cmp
test
push
cmps
into
add
mov
add
jne
add
fs
sub
add
inc
push
add
jp
add
lahf
add
dec
popa
add
in
add
out
add
out
add
lea
push
add
add
(bad)
xchg
fadd
add
add
push
xchg
add
inc
adc
add
idiv
add
idiv
add
clc
std
add
stc
std
add
stc
std
add
cli
std
add
sti
inc
jmp
cld
inc
int3
idiv
add
into
rol
cdq
mov
test
add
jg
push
addr16
inc
push
push
add
add
add
idiv
add
add
add
idiv
add
(bad)
pop
add
add
ds
add
xchg
add
pop
add
add
add
jns
add
add
add
sub
add
push
out
add
out
pop
mov
cmc
add
add
add
ltr
inc
add
call
cmc
add
(bad)
add
loop
add
add
add
in
add
out
add
inc
add
bound
mov
push
data16
add
loope
mov
add
jmp
add
in
add
fist
add
add
add
add
add
add
shl
add
add
add
ror
scas
rcl
add
leave
add
add
add
add
xchg
mov
mov
repnz
pop
add
mov
mov
xchg
sub
add
add
xchg
jno
addr16
pop
add
push
add
ds
fs
icebp
std
add
ins
inc
shl
mov
call
add
mov
xor
pop
mov
add
cmp
imul
dec
jle
dec
jge
mov
ret
fcmovu
fiadd
out
out
into
into
into
add
repnz
xchg
add
mov
inc
ficom
inc
sar
add
jns
add
sbb
cmps
add
xchg
xchg
add
jnp
and
outs
add
jae
add
xchg
add
add
add
add
mov
add
add
dec
in
sub
jle
imul
sub
dec
dec
push
push
aaa
in
cmp
pop
push
jge
sub
sub
mov
rol
sub
jle
sub
jle
push
stos
sub
sub
add
add
add
add
add
push
test
add
add
dec
in
sahf
out
or
pusha
push
pop
dec
dec
push
push
sbb
mov
push
pop
dec
dec
dec
dec
push
jns
(bad)
sahf
out
out
daa
popa
pop
inc
inc
inc
inc
push
push
arpl
jo
jo
arpl
add
add
add
add
add
fadd
add
add
dec
dec
dec
dec
in
or
or
or
or
or
dec
dec
push
push
std
jp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
js
dec
dec
dec
dec
ja
repnz
cmc
div
loopne
loop
inc
inc
inc
inc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
(bad)
fcomp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
xor
xor
add
xor
xor
add
add
add
ja
ja
add
add
add
add
mov
mov
add
add
add
add
cmp
cmp
mov
xor
add
add
mov
mov
add
xor
add
add
cmp
ja
add
mov
add
add
mov
add
add
pop
mov
cmp
xor
add
add
cmp
add
add
cmp
add
mov
mov
add
mov
mov
add
add
cmp
xor
jnp
cmp
mov
mov
add
add
mov
mov
cmp
cmp
add
add
cmp
cmp
cmp
cmp
mov
mov
add
add
jae
jae
jae
jnp
cmp
add
mov
mov
xor
mov
mov
add
mov
mov
add
add
mov
mov
add
add
and
inc
int3
add
adc
add
dec
add
push
or
mov
push
inc
int3
add
adc
or
int3
add
adc
mov
mov
mov
mov
bound
add
cmp
add
and
movs
dec
into
add
push
mov
add
daa
push
push
push
cmp
add
jg
inc
push
not
jno
mov
add
add
push
push
push
test
add
jg
inc
push
not
mov
add
push
push
push
add
add
add
add
jg
inc
push
not
add
add
add
add
add
push
add
add
lock
push
add
push
add
push
add
jg
add
aas
lock
pop
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
sldt
add
add
xadd
add
loopne
add
loopne
add
rol
add
add
add
add
add
add
pop
lock
pop
clc
add
add
add
add
add
add
add
aas
inc
arpl
les
add
and
add
inc
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
dec
sldt
pop
add
add
add
push
or
and
jo
add
jnp
add
jo
add
add
arpl
arpl
jo
jo
jg
jg
add
add
dec
pop
add
push
pusha
add
push
push
add
pop
ins
add
pop
ins
add
push
jo
add
add
pop
js
add
add
gs
add
add
gs
add
add
addr16
add
add
pusha
jg
add
add
imul
ins
jnp
sub
add
add
add
add
add
push
add
iret
pop
add
call
add
jge
add
jo
add
and
adc
nop
add
pop
xchg
or
outs
test
inc
add
pop
add
jae
dec
fidiv
push
push
cmc
xchg
xor
call
inc
add
mov
add
imul
add
ins
add
outs
xchg
add
add
ja
add
jp
add
jae
add
je
add
jae
add
jp
add
jnp
add
jge
add
jle
add
js
add
jp
add
jg
add
test
nop
add
add
adc
lahf
add
and
add
pop
rol
(bad)
jb
add
adc
add
xchg
add
(bad)
mov
add
mov
mov
add
mov
add
add
mov
add
mov
add
mov
mov
add
retf
leave
iret
add
int
add
retf
add
rol
push
iret
aad
add
rol
add
xlat
add
fcomp
add
(bad)
add
fstp
add
(bad)
rol
add
loopne
add
loop
push
loop
add
lock
div
add
fild
arpl
out
pop
repz
sbb
(bad)
iret
add
(bad)
inc
(bad)
(bad)
(bad)
(bad)
adc
adc
adc
adc
adc
adc
adc
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fs
push
push
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jb
jb
jb
jb
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jle
jb
jb
jb
jbe
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jle
jb
jb
jae
jle
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jle
jb
jb
jae
jg
jbe
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
ins
add
add
jb
jb
jae
jg
jle
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
add
jb
cmp
jle
fs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
add
add
add
cmp
jle
jle
jbe
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
add
add
add
jae
jg
jle
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
cmp
cmp
jnp
jp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
add
jo
jae
jg
jnp
jp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jb
jb
jb
jb
jb
jb
jb
jo
jae
jg
jp
jp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
imul
imul
imul
push
xor
jp
(bad)
(bad)
(bad)
(bad)
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
data16
gs
ins
jne
(bad)
(bad)
(bad)
(bad)
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popa
imul
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
inc
popa
dec
dec
dec
push
popa
ins
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sub
dec
popa
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
or
or
das
xor
adc
pop
adc
adc
sbb
sub
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
or
xor
xor
pop
adc
adc
push
sbb
inc
dec
popa
(bad)
(bad)
(bad)
sbb
sbb
rdpmc
cmp
sub
xor
add
push
pop
pop
push
adc
adc
adc
dec
popa
(bad)
sbb
and
cmp
xor
xor
add
push
pop
pop
push
and
push
sbb
inc
dec
inc
(bad)
sbb
and
cmp
add
xchg
adc
adc
pop
sbb
inc
inc
(bad)
(bad)
(bad)
sbb
or
xor
xor
adc
push
gs
adc
adc
pop
push
inc
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
or
aaa
mov
sub
mov
adc
push
pop
arpl
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
jle
adc
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
outs
adc
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
adc
and
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
xchg
inc
xchg
xchg
inc
(bad)
(bad)
(bad)
lock
push
add
push
add
push
add
jg
add
aas
lock
pop
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
sldt
add
add
xadd
add
loopne
add
loopne
add
rol
add
add
add
add
add
add
pop
lock
add
add
add
add
add
add
aas
inc
add
inc
arpl
sbb
add
add
add
add
adc
adc
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
pop
rol
add
js
ins
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outs
fs
ins
outs
outs
gs
and
and
jae
gs
bound
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
ins
popa
outs
imul
jb
imul
xor
and
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
outs
popa
ins
gs
push
imul
imul
je
jo
cmp
xor
and
das
and
gs
jb
jo
imul
push
inc
push
and
arpl
jbe
jb
cmp
fs
jb
jo
imul
gs
outs
fs
arpl
and
gs
outs
fs
je
jae
gs
bound
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outs
popa
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
and
jb
imul
xor
xor
xor
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
das
and
fs
outs
fs
je
jae
gs
bound
and
fs
outs
fs
arpl
and
popa
jae
gs
bound
or
add
mov
cmp
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
add
add
add
add
inc
cmp
add
add
add
add
add
add
bound
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
inc
js
je
jb
arpl
jae
add
push
gs
ins
outs
jae
dec
gs
add
inc
gs
gs
dec
bound
arpl
dec
ins
gs
outs
imul
add
add
inc
gs
popa
ins
ins
outs
arpl
add
push
gs
outs
jne
add
push
popa
jb
sbb
add
nop
jae
add
add
add
je
sub
and
popa
and
add
sub
xchg
pop
repnz
add
add
xor
inc
cs
data16
int3
rcl
xchg
adc
adc
shl
movs
arpl
mov
jmp
scas
mov
adc
add
loope
hlt
mov
movs
enter
add
shl
and
mov
inc
data16
mov
mov
mov
push
push
pop
movs
mov
mov
cmp
dec
and
xor
inc
mov
xchg
pop
mov
push
(bad)
pushf
pop
call
pop
pusha
push
jae
shl
and
xor
scas
(bad)
out
xor
xor
ds
rol
jecxz
jno
gs
in
mov
cld
popw
cld
xchg
jmp
das
sti
inc
outs
popa
(bad)
mov
(bad)
fiadd
outs
loopne
cld
repz
pop
std
sbb
cwde
jg
in
dec
mov
cmp
cmp
enter
mov
inc
add
mov
mov
pop
fwait
pushf
(bad)
out
ja
mov
mov
(bad)
fisubr
(bad)
sti
inc
pop
cmp
popa
inc
ret
ret
sti
popa
add
xchg
in
xchg
or
and
adc
mov
std
imul
aas
cli
and
cmc
push
xor
inc
adc
sti
adc
mov
(bad)
icebp
sub
sub
sti
pop
clc
das
jg
shr
cld
sub
fnstenv
fcmove
out
inc
gs
rcr
mov
jge
adc
(bad)
xchg
sbb
fwait
cwde
fnstcw
cmps
adc
out
es
loope
call
in
scas
fistp
mov
sbb
movs
popf
pop
scas
addr16
ret
and
es
mov
add
sub
jg
(bad)
cld
nop
mov
lods
repz
enter
hlt
mov
pop
int3
clc
(bad)
cmp
mov
sub
push
pop
mov
fadd
add
add
sbb
das
cmp
mov
adc
jge
inc
push
mov
jecxz
and
aad
icebp
jne
sub
sar
and
int3
fsqrt
loope
sbb
and
movs
ret
push
pop
repnz
cmps
popa
mov
add
jbe
mov
or
daa
mul
ins
lock
in
xchg
dec
test
mov
sub
inc
(bad)
sub
pop
stos
pop
push
push
retf
dec
adc
lods
and
je
add
dec
outs
out
popf
pop
push
in
js
sbb
mov
push
xchg
mov
in
mov
add
call
lea
ds
out
inc
addr16
adc
and
mov
int3
xor
sbb
mov
adc
pusha
mov
xor
popf
dec
pop
mov
std
push
pop
dec
sahf
ret
jmp
inc
xor
pop
jns
mov
hlt
jmp
cmp
mov
sub
into
jmp
stos
mov
test
dec
xlat
and
sub
mov
and
scas
das
push
movs
cmp
inc
fs
daa
cmps
inc
mov
imul
or
lock
add
and
shl
std
or
push
js
icebp
cld
add
je
sub
add
add
xchg
in
sub
xchg
adc
fisttp
lea
mov
in
rcr
test
xor
cdq
test
xchg
pop
xchg
push
test
aam
pushf
mov
add
push
xchg
outs
push
popf
mov
in
mov
das
mov
xchg
adc
not
mov
mov
clc
mov
adc
inc
lock
popa
adc
ret
loop
add
and
jl
jne
xor
je
cmps
pop
shr
mov
xlat
bound
scas
ss
xor
mov
bound
jp
mov
sub
repz
sar
jecxz
cmp
sbb
inc
jmp
add
cld
loope
stos
in
test
and
xchg
(bad)
cmp
and
inc
xor
(bad)
and
pop
repz
mov
adc
jmp
rcl
push
sbb
dec
dec
sbb
add
js
xchg
mov
pop
and
shl
iret
out
jg
pop
fxch
out
ins
sbb
lods
mov
clc
and
inc
push
or
lods
add
sbb
add
or
or
xor
jmp
sbb
ds
sar
int
cmps
or
int3
pop
cli
xor
dec
out
(bad)
lods
(bad)
cmp
mov
int3
or
(bad)
mov
nop
xor
xor
xor
sbb
pop
xchg
mov
xor
adc
lods
xor
cmps
inc
or
retf
jmp
(bad)
cli
adc
dec
xor
cmp
into
js
clc
dec
test
add
xchg
pop
or
pop
sbb
(bad)
jp
xchg
in
sahf
sub
adc
inc
cmps
inc
mov
jns
mov
fcmovnb
inc
dec
mov
scas
movs
dec
lods
jp
dec
lea
fucomp
out
shl
stos
xlat
cmp
push
ret
lea
xchg
repz
add
add
or
(bad)
fs
pop
in
add
pop
ss
push
mov
fs
data16
mov
jo
add
add
lahf
(bad)
out
and
pop
retf
sahf
shr
sahf
push
mov
loopne
sub
cmps
push
(bad)
leave
retf
pop
stc
(bad)
int3
xchg
adc
mov
add
inc
mov
sbb
iret
nop
rcr
ins
arpl
(bad)
and
xor
adc
adc
xchg
in
xor
or
mov
not
jnp
mov
xchg
cmps
add
and
add
dec
or
sbb
inc
xor
dec
in
sub
icebp
adc
mov
je
fiadd
xchg
es
jns
xchg
sub
in
mov
lock
mov
jmp
mov
sbb
dec
mov
aaa
sbb
cmc
mov
imul
and
jmp
retf
jbe
or
cld
and
push
shl
cmp
loope
sahf
neg
adc
or
rol
push
shl
out
push
lock
shl
pop
lods
pusha
fcmovnbe
xchg
adc
aas
dec
(bad)
lock
add
add
dec
and
pusha
push
rol
rcr
sbb
xchg
add
mov
add
dec
adc
out
and
(bad)
call
mov
pushf
pop
mov
shl
adc
jecxz
mov
add
adc
mov
and
cmovs
into
fbld
fsubr
mov
pop
sbb
fnsave
enter
xor
xchg
mov
dec
adc
lock
imul
xchg
mov
push
ds
pop
sub
stc
sub
push
out
mov
jge
cmps
mov
sbb
in
lods
and
sub
shl
repnz
int
les
or
mov
pop
imul
and
ret
stos
daa
mov
enter
in
add
sub
xor
add
inc
add
pop
fsub
ret
sub
jge
inc
cmp
or
or
lock
dec
xchg
gs
mov
pop
sbb
retf
push
test
popf
sub
jno
rol
shl
xchg
or
dec
jns
ret
nop
test
popf
cmp
fild
dec
retf
int
gs
inc
sub
scas
outs
inc
fs
test
mov
xor
dec
sub
jae
das
into
in
je
out
cdq
jmp
sub
popa
and
cmp
loopne
retf
cmps
shr
shr
add
mov
xchg
adc
mov
lods
mov
adc
cmp
retf
mov
into
jne
add
(bad)
call
das
rol
pop
retf
es
mov
sub
sub
cmp
and
rcr
dec
aas
push
add
cmps
arpl
je
sub
je
(bad)
sub
xchg
aad
sub
enter
cld
mov
xchg
sub
add
inc
push
push
mov
sbb
adc
jno
gs
push
repz
lock
jecxz
sbb
pop
lahf
push
lock
icebp
lods
frstor
(bad)
mov
inc
add
or
cmp
test
mov
lods
jl
call
mov
cs
pop
arpl
mov
mov
xor
int
xor
mov
xor
mov
adc
adc
jmp
jnp
mov
inc
push
add
xor
sub
jl
loope
mov
shl
fiadd
in
scas
ds
mov
into
(bad)
push
push
gs
sbb
outs
stc
clc
popa
(bad)
pop
out
fs
es
jo
mov
and
mov
jmp
or
aam
gs
lds
call
sahf
dec
sub
inc
dec
retf
inc
sub
xor
(bad)
in
jne
and
xchg
in
push
push
pushf
cld
popf
dec
dec
push
xor
add
dec
or
movs
sub
cmp
fidiv
mov
outs
shr
dec
shr
rcr
sar
inc
sub
pop
mov
scas
iret
inc
mov
and
pop
push
(bad)
inc
call
push
jecxz
push
jo
cwde
jmp
ins
stc
mov
cmp
jnp
es
stc
jb
call
adc
inc
mov
push
or
idiv
mov
push
ins
cmps
or
cmp
shr
ds
push
repz
cmp
int
jbe
out
cmp
and
pop
rcr
mov
xor
push
das
cwde
ficom
push
push
cmps
out
std
cli
loopne
inc
ror
jmp
add
and
pop
jp
cmp
push
gs
in
push
mov
hlt
add
cmps
mov
jmp
ins
call
(bad)
or
cmps
fwait
or
mov
adc
cdq
sbb
daa
xchg
push
test
push
jno
sub
ins
or
push
je
cmp
loopne
ds
pop
sub
mov
fimul
or
pushf
scas
test
(bad)
xor
mov
mov
cmp
cwde
add
xor
not
mov
ja
mov
(bad)
push
and
pusha
sti
rol
pusha
push
mov
scas
push
push
jb
(bad)
fst
stos
shl
out
ins
adc
xchg
mov
adc
sbb
mov
xchg
adc
fcomi
call
adc
lock
xchg
in
dec
and
gs
pushf
mov
push
lods
or
popa
adc
pusha
cmp
mov
or
arpl
cli
and
in
cmp
sub
mov
mov
jg
pop
mov
jle
or
outs
and
movs
xchg
push
bound
lds
add
jnp
mov
mov
lods
pop
push
xor
sub
into
and
dec
pop
dec
es
sbb
adc
ins
push
movs
jb
fnstcw
ficom
push
or
outs
stos
add
sbb
in
(bad)
or
fst
imul
pop
jmp
mov
shl
mov
xchg
aam
sub
sub
fadd
bound
test
(bad)
mov
mov
xchg
and
popa
and
push
pop
xchg
adc
mov
out
data16
ret
fxch
std
add
adc
in
mov
jno
sub
xchg
push
or
add
test
scas
add
fwait
icebp
cmps
fcmovnb
mov
xchg
scas
ins
rcl
and
ds
es
sbb
and
push
add
retf
or
sbb
push
dec
mov
das
and
pop
jnp
stc
call
mov
outs
loopne
pop
ins
and
add
dec
mov
push
fisub
dec
cmp
mov
retf
dec
sar
jne
in
stos
push
(bad)
scas
call
xchg
cmc
(bad)
ins
pop
cs
in
xchg
mov
mov
xchg
sbb
and
bound
push
sub
dec
mov
and
inc
out
ja
fistp
jne
je
aas
push
xchg
sub
jo
xor
push
pushf
icebp
sub
jae
pop
xchg
cmp
jmp
jae
loope
mov
add
int3
xor
dec
sub
arpl
aad
inc
add
loop
(bad)
pushf
mov
add
xchg
add
adc
es
popa
sahf
mov
push
movs
outs
daa
adc
mov
test
mov
dec
cmp
into
push
mov
dec
aam
and
in
mov
ficom
cmp
neg
add
movs
mov
sbb
es
lods
dec
mov
cli
pop
pop
ret
in
pusha
sub
dec
rcr
and
xchg
loope
xchg
jp
loopne
icebp
adc
call
outs
inc
jp
sbb
repnz
sbb
jnp
push
pop
test
or
sar
retf
pop
dec
clc
and
not
mov
pop
xor
mov
xlat
popf
xchg
xchg
sar
ret
(bad)
mov
retf
scas
and
mov
pushf
jno
loop
fsubr
adc
xor
adc
movs
cmp
jecxz
jae
into
outs
sbb
xor
daa
push
push
jg
cs
fidiv
cmp
fist
mov
jmp
push
jnp
(bad)
mov
pusha
push
xor
in
xor
mov
xor
cmp
ret
and
mov
rcr
xor
into
xlat
pop
mov
jp
push
cmp
mov
push
sub
loope
pop
add
loope
imul
ret
mov
jo
sbb
iret
and
fcmovu
leave
iret
push
and
jne
jb
int
sbb
xchg
sar
add
inc
retf
jns
xchg
shld
mov
(bad)
dec
dec
and
xchg
mov
(bad)
dec
(bad)
dec
frstor
pushf
retf
ret
mov
pop
mov
and
mov
enter
lds
sub
setne
sub
mov
mov
jne
mov
test
or
dec
jp
ror
xchg
mov
or
ja
mov
repz
fsubp
ins
xor
xchg
sti
rcr
mov
stc
out
mov
add
stos
sbb
movs
std
xchg
xchg
loopne
mov
push
rcl
xor
(bad)
mov
adc
cwde
pop
cdq
fwait
in
adc
dec
ins
sub
loope
jle
mov
popa
dec
mov
inc
fcmovnbe
sar
pusha
xor
clc
test
or
jmp
test
pop
xor
jl
mov
pop
pop
and
adc
leave
(bad)
inc
rcr
lock
and
(bad)
lahf
or
mov
jb
pushf
cs
js
xchg
or
xor
in
into
and
xor
icebp
push
in
adc
pusha
aad
pop
icebp
cmp
in
dec
cld
xor
lock
cmc
pop
addr16
lock
mov
vhaddpd
(bad)
xchg
dec
mov
imul
mov
cmp
jno
pop
pop
cs
stos
das
cmp
pop
shl
xor
inc
jo
xchg
aaa
in
mov
push
mov
outs
(bad)
pop
sbb
repnz
cmp
leave
out
movs
cmp
sbb
pop
cmp
retf
add
call
sbb
adc
data16
in
pop
popa
push
sbb
int3
mov
(bad)
and
mov
loope
sub
ficomp
lea
mov
sub
add
add
paddsw
int3
mov
and
add
scas
push
or
test
je
cmp
dec
mov
dec
mov
jno
cli
or
lods
out
aaa
xchg
pop
and
sub
mov
adc
data16
fcom
mov
pushf
into
add
aaa
test
xchg
adc
inc
xchg
xchg
add
bound
stc
repz
(bad)
(bad)
adc
jl
das
rcr
mov
xchg
jg
add
and
xor
into
jno
repnz
adc
xor
mov
jecxz
dec
sbb
movs
dec
push
inc
mov
repnz
repz
adc
push
in
call
mov
mov
fimul
dec
sbb
lock
scas
mov
retf
(bad)
cli
jb
add
stos
nop
outs
pushf
jno
cdq
cld
cmp
jp
fcom
mul
shl
jmp
dec
sti
repnz
inc
pminub
dec
xor
sub
lahf
clc
shl
jb
inc
xchg
fcom
call
aam
mov
mov
std
mov
xchg
mov
rol
cmp
outs
xchg
cmp
inc
fidiv
or
add
sbb
dec
xlat
mov
pop
cdq
pop
jmp
(bad)
jp
xor
hlt
(bad)
and
pop
sbb
sahf
xchg
pop
xchg
xor
mov
mov
fistp
shr
cmp
ss
inc
bound
jp
pushf
jmp
pusha
inc
lods
shr
call
adc
add
push
rcl
cmp
or
movs
test
ret
jmp
outs
cwde
mov
and
nop
daa
inc
scas
xor
inc
shl
loopne
and
add
adc
test
jo
and
or
push
stos
sub
pop
iret
repnz
pop
mov
imul
push
sbb
cmp
cwde
das
push
movs
dec
dec
sub
cmp
aaa
sub
sahf
popa
jge
sti
mov
xor
add
mov
add
iret
push
(bad)
test
push
adc
pusha
dec
mov
push
in
mov
or
aad
test
and
mov
jns
pusha
jno
jle
push
in
out
out
cmp
push
pop
push
and
sbb
push
retf
imul
inc
popf
div
scas
and
sub
into
lock
out
xlat
sbb
mov
jne
jne
sub
jmp
ret
je
stos
fisub
push
and
pop
pop
or
outs
fld
mov
fbstp
ret
pop
hlt
mov
gs
hlt
push
shr
mov
xlat
mov
add
je
sbb
dec
push
rcr
ffreep
cld
ss
or
sbb
and
pop
call
inc
dec
pop
iret
jbe
pop
fisttp
inc
in
jg
xchg
into
inc
add
push
or
mov
(bad)
mov
jno
in
jge
push
arpl
popf
repnz
add
rcr
ret
mov
rcl
mov
aad
rol
sub
ss
push
jp
in
jmp
aam
jge
lock
neg
mov
jle
test
add
pop
sti
adc
push
loope
clc
cwde
idiv
or
dec
xchg
cld
mov
dec
mov
push
pop
cs
mov
mov
sbb
sub
mov
mov
sub
call
in
and
lods
sub
ds
lahf
ins
pop
sbb
mov
lea
mov
jns
rcl
outs
movs
mov
and
leave
jle
repz
popa
cmp
cs
sbb
sbb
das
ror
fsubr
push
and
(bad)
repz
aaa
shl
lea
lahf
fisubr
mov
mov
inc
clc
leave
test
mov
test
push
mov
loope
dec
cdq
js
xlat
mov
rol
cld
cmp
leave
inc
xor
fmul
shr
retf
(bad)
inc
call
inc
cmp
fst
adc
mov
std
cwde
out
dec
fdiv
mov
cmp
lds
ss
xor
repnz
pop
(bad)
push
mov
xlat
inc
cmp
mov
cmp
repz
setge
mov
lahf
lock
cmps
jmp
mov
push
loop
ror
sub
cli
inc
outs
(bad)
xor
lea
or
or
ror
adc
in
jmp
(bad)
mov
push
mov
aam
add
pop
push
mov
add
xchg
movs
cmp
adc
mov
dec
mov
in
in
cmp
mov
adc
push
inc
adc
cmp
inc
push
ins
mov
push
inc
test
xor
fcmovb
xor
xchg
fsub
sti
add
or
mov
jnp
aas
das
stos
enter
(bad)
repz
xchg
cmp
lahf
into
shr
dec
(bad)
jne
or
imul
xchg
gs
test
push
and
jbe
es
pop
sbb
xlat
push
xor
jnp
xor
jmp
test
(bad)
mov
push
dec
inc
repnz
push
mov
idiv
mov
ds
jge
icebp
cmp
mov
aas
sub
cmps
mov
nop
fsubr
das
mov
add
pop
ss
dec
xchg
test
cli
outs
cmp
jo
int3
sbb
movs
add
fyl2xp1
fcomp
and
dec
bound
jecxz
push
push
mov
cwde
mov
add
cmp
ins
cdq
scas
mov
mov
cli
stc
shr
aaa
jbe
mov
dec
mov
mov
and
imul
pop
ins
mov
ror
sub
cmp
add
inc
test
xchg
or
adc
test
mov
inc
sub
cmp
cmp
push
cmp
jmp
pop
dec
push
dec
(bad)
mov
pop
jo
es
mov
mov
cmps
sub
adc
pop
adc
cmp
xchg
out
lds
jbe
mov
push
scas
lds
aam
jecxz
jmp
xchg
cwde
fwait
mov
adc
mov
movs
test
outs
pop
pop
and
jnp
and
lods
test
test
out
rol
enter
sbb
or
movs
adc
cmp
fld
and
or
sub
lods
repnz
sti
mov
add
push
jae
ss
ins
movs
mov
add
mov
sbb
lahf
cld
(bad)
int
sbb
jo
rol
mov
mov
cld
and
mov
mov
adc
mov
sbb
(bad)
ror
repnz
mov
fcomp
sbb
push
jmp
jo
jns
add
cs
sub
stos
jns
mov
pop
ror
or
out
fsub
inc
leave
jmp
sub
lahf
inc
or
shr
mov
sbb
jbe
mov
and
push
std
hlt
adc
mov
xlat
mov
mov
daa
or
cmpps
shl
mov
adc
cmp
les
(bad)
popa
and
stos
out
loopne
loop
test
mov
inc
and
lods
jecxz
cmp
xchg
(bad)
and
push
xchg
mov
jmp
pop
mov
mov
int3
test
out
sub
and
or
adc
div
pop
lods
dec
jge
loop
pop
ins
xor
or
iret
mov
mov
ins
jmp
test
arpl
in
aam
(bad)
push
jg
dec
bound
push
test
sub
daa
outs
ins
push
rcr
(bad)
and
(bad)
std
pop
sbb
inc
rcl
xor
push
in
mov
int3
pop
add
mov
push
jmp
rol
icebp
push
data16
clc
sub
loope
stos
mov
out
aas
cmc
push
retf
retf
stos
mov
xchg
fcomip
sbb
or
pop
sub
cmp
arpl
test
ficomp
movs
pop
imul
stc
clc
scas
cmps
(bad)
mov
mov
mov
in
jecxz
xor
hlt
scas
jecxz
mov
gs
loop
jmp
sbb
fcom
xchg
xchg
in
arpl
clc
sub
aam
sbb
xlat
mov
mov
mov
(bad)
aad
iret
pop
adc
call
addr16
jne
xchg
sbb
mov
ror
(bad)
or
or
(bad)
jo
dec
and
xlat
or
sti
es
nop
(bad)
mov
push
bndldx
call
inc
aam
mov
lods
int
out
int
push
dec
hlt
dec
cdq
mov
loope
cli
sub
sub
mov
(bad)
pop
js
jns
out
js
repnz
jb
(bad)
cmp
(bad)
sub
or
(bad)
out
repnz
pop
ins
dec
sub
in
sub
iret
fmul
dec
stc
mov
mov
mov
sub
pusha
push
test
mov
xchg
mov
sub
jb
push
cmp
aaa
nop
lds
imul
or
sub
cmp
jmp
shr
push
(bad)
jp
mov
sub
mov
inc
mov
push
push
lods
dec
add
or
push
lods
xchg
inc
test
and
dec
sub
imul
push
nop
sti
inc
lahf
push
imul
fcom
push
mov
or
pop
dec
mov
popa
ret
inc
outs
call
adc
test
ss
mov
sub
push
dec
mov
outs
aam
cdq
sbb
cmps
mov
dec
out
fidivr
mov
ret
xchg
jmp
cmps
fimul
pop
pop
cli
sbb
cmps
cmp
je
movs
push
ret
int3
je
jmp
pop
je
inc
leave
rcl
and
mov
icebp
(bad)
(bad)
cld
dec
inc
inc
add
sti
imul
or
inc
push
(bad)
mov
popa
dec
xchg
push
jmp
jb
outs
mov
iret
sub
jecxz
lds
dec
out
push
and
movs
inc
push
xlat
mov
cmp
test
sbb
jmp
fstp
cmp
push
push
jnp
mov
xlat
test
idiv
repnz
xor
pop
sub
cmp
rol
outs
jnp
jmp
mov
mov
dec
sahf
jl
mov
mov
inc
dec
inc
xchg
std
das
dec
stos
aaa
mov
pop
inc
adc
outs
push
push
pop
pcmpeqd
jns
xor
ja
sbb
sub
int3
cmp
cld
push
and
loope
loop
or
arpl
xor
rcr
icebp
into
push
ins
adc
pusha
push
test
adc
sbb
pushf
mov
mov
jb
sub
sub
push
mov
ror
push
in
push
mov
scas
and
jg
or
push
and
inc
in
(bad)
inc
(bad)
loope
ss
scas
out
rcr
dec
std
cdq
pop
dec
xor
xor
cs
sbb
mov
cmp
mov
aas
jb
and
std
fcomp
cmps
shr
inc
cli
xchg
scas
test
repnz
stos
cld
popf
call
cmp
bound
xor
push
mov
jne
sub
stc
dec
movs
and
jp
add
cmp
out
ja
pop
sbb
xchg
(bad)
out
(bad)
cld
mov
pop
test
loop
int
imul
mov
push
mov
and
and
fnstsw
add
fwait
repnz
fiadd
pop
retf
mov
mov
cmp
out
bound
pusha
cdq
popf
sahf
data16
cs
push
test
dec
push
mov
pop
push
adc
or
push
ret
stos
pushf
sbb
dec
push
call
mov
lods
add
mov
cmp
pop
push
cli
lds
shl
cli
xor
mov
or
stc
aad
xchg
addr16
cld
and
aaa
mov
(bad)
in
or
or
mov
imul
leave
(bad)
lea
xlat
test
mov
sbb
sub
out
(bad)
pusha
cmp
in
and
daa
sub
js
mov
loop
adc
pop
psubw
xor
sti
sub
cmp
mov
mov
ret
gs
sbb
lods
lea
cmp
(bad)
jb
add
aad
cwde
rcl
out
push
xlat
jl
dec
inc
pop
lods
call
push
sbb
add
aaa
inc
push
mov
scas
outs
mov
fnstsw
scas
mov
out
jmp
inc
push
ss
into
and
aam
cld
repnz
lea
test
push
fs
cmp
gs
and
pop
cdq
pushf
push
cdq
out
gs
ds
rcl
pop
dec
sbb
jl
mov
and
dec
cmp
fucomp
push
cmp
sar
pusha
sti
cmp
rcr
pop
fcomp
sahf
pop
mov
cmc
(bad)
xchg
jp
jnp
stos
imul
fs
(bad)
out
mov
xor
lods
retf
(bad)
or
lds
pop
ins
pop
aas
jg
xchg
or
sbb
pop
outs
and
sbb
and
outs
push
inc
push
xor
xlat
repnz
mov
pop
lds
fdiv
jmp
sar
sub
in
xchg
aaa
inc
xor
mov
add
jmp
mov
pop
lea
out
cs
aaa
xchg
push
inc
fs
es
or
jns
in
adc
adc
mov
pavgb
or
push
dec
scas
int3
cmp
sahf
movs
std
pusha
xor
xor
adc
test
int
test
sub
cli
jns
inc
(bad)
aas
sbb
outs
iret
sbb
neg
mov
popa
icebp
in
mov
add
jae
lea
xor
pop
xchg
loope
fwait
inc
xchg
faddp
shl
or
jae
(bad)
(bad)
stc
mov
in
sub
pop
xor
lds
xchg
(bad)
lahf
xchg
xor
pop
sbb
ins
ja
push
mov
mov
mov
jmp
(bad)
loop
test
shr
push
pop
jmp
loop
dec
pslld
in
xlat
jmp
push
pop
lea
cli
stos
shl
sbb
pop
jmp
mov
bound
pop
dec
jnp
shr
jmp
inc
mov
popf
mov
and
in
scas
cmps
or
loop
cmc
enter
add
inc
daa
aam
outs
fimul
pop
lea
test
lds
push
cmps
and
repz
add
cmp
sub
fnstcw
int
int3
push
jle
cmp
jmp
xchg
in
inc
jecxz
(bad)
rcr
mov
cmps
stos
movs
hlt
(bad)
shl
mov
aad
mov
outs
sub
aaa
pop
mul
xchg
adc
fs
pop
jg
sahf
mov
jns
shl
cmp
(bad)
sbb
push
push
int
js
cdq
mov
adc
retf
jno
es
push
bound
jmp
mov
pop
cmp
test
sbb
mov
pop
fisubr
pop
jmp
mov
test
and
and
xchg
dec
cwde
jg
clc
sbb
pop
sti
push
outs
cli
mov
mov
or
pop
cmp
jne
sbb
dec
pop
out
push
jle
cmp
mov
(bad)
pop
xchg
or
retf
sbb
sbb
(bad)
jg
xor
mov
push
aas
retf
push
scas
scas
pop
ret
pop
push
call
das
xlat
cli
pushf
stos
or
cmp
jmp
xor
mov
inc
inc
sahf
adc
xchg
mov
test
outs
jno
and
jle
loopne
mov
getsec
iret
sbb
and
pop
test
pusha
test
sub
sub
stos
mov
shl
sub
add
jo
(bad)
sbb
mov
lods
std
jb
shr
sahf
test
sbb
push
imul
das
xlat
mov
ret
mov
xchg
cmovs
or
xchg
movs
adc
push
push
or
imul
add
mov
xchg
add
rcl
mov
lods
mov
adc
fsub
out
pop
imul
and
xchg
es
and
sar
mov
adc
dec
(bad)
dec
neg
pop
cmp
cdq
imul
unpckhps
dec
add
mov
sub
adc
pushf
popa
scas
jmp
sbb
xchg
and
les
ins
cdq
jbe
enter
or
mov
fldenv
xor
jg
icebp
xor
js
outs
xchg
outs
sbb
jb
bound
call
adc
xor
mov
inc
or
movs
mov
sbb
and
or
pop
aaa
and
push
sub
rcl
jne
push
adc
jmp
dec
int
adc
mov
in
cmc
xor
loope
stc
adc
cld
inc
or
adc
sub
aam
dec
in
cli
ins
push
jo
leave
push
inc
pop
cld
sub
test
adc
out
aad
sbb
in
dec
fs
std
fstp
into
pop
xchg
out
jg
add
cdq
inc
mov
mov
inc
xchg
lock
push
test
and
inc
(bad)
in
pop
inc
dec
aad
out
cmc
cli
fsubr
dec
shl
pop
(bad)
jge
add
ins
mov
out
mov
mov
or
test
mov
test
or
mov
cmp
cli
sti
pop
lock
adc
bound
fisub
sar
in
push
in
pusha
scas
sti
inc
ds
repnz
adc
sub
popa
mov
xchg
out
scas
cld
retf
cli
pusha
and
fs
retf
(bad)
sub
fwait
loope
pop
je
adc
mov
sti
cli
add
and
out
cmp
or
fadd
movs
pop
xchg
adc
sbb
dec
jmp
inc
test
frstor
test
dec
lock
cdq
xchg
popf
sar
in
xchg
and
pop
iret
adc
mov
hlt
mov
addr16
pushf
sub
icebp
std
popf
loope
inc
dec
pop
adc
and
pop
sub
add
push
jne
lahf
mov
jno
out
ins
call
cld
shl
sub
fistp
mov
and
sub
out
iret
neg
push
dec
imul
repnz
dec
inc
aad
mov
xor
into
fimul
cmp
ds
sbb
jge
cmp
lds
sti
push
xor
loope
adc
mov
cmps
jle
sbb
or
lds
inc
mov
cmp
call
mov
push
push
xchg
out
stos
popf
cs
outs
pop
sti
sbb
push
sub
cld
ror
sub
push
leave
data16
in
sub
jo
sub
cs
or
aaa
sbb
inc
xor
jp
fs
xor
je
pop
rcl
mov
and
ret
icebp
gs
inc
mov
jae
stc
int3
pop
mov
jmp
call
add
pminub
jne
jmp
mov
cmps
mov
jbe
jo
sub
inc
rcr
adc
ss
xchg
jae
inc
add
jl
movs
icebp
sbb
(bad)
cmp
ret
mov
jo
sub
ja
daa
rcl
jno
dec
js
mov
leave
sbb
in
inc
dec
or
add
arpl
stc
dec
mov
lods
xlat
sub
ficom
xchg
sets
ss
cmp
fld
(bad)
fisttp
jp
fimul
int3
lods
cmpxchg
push
mov
sbb
add
test
std
xor
shl
lods
in
push
ss
sbb
cmp
iret
(bad)
pop
das
xchg
adc
ds
(bad)
sbb
aam
inc
inc
jns
sbb
jecxz
sbb
ins
xchg
xor
adc
sub
(bad)
aad
and
cli
mov
rcl
or
xlat
shl
les
test
push
dec
fwait
mov
fs
ss
pop
dec
daa
mov
into
ins
xchg
bound
inc
cmp
xor
sar
mov
mov
pop
mov
mov
cmp
cld
sti
mov
stos
dec
stc
(bad)
sub
push
push
or
xlat
and
xchg
mov
mov
cli
pop
std
push
hlt
xbegin
cmp
outs
add
cmp
pop
cmps
mov
aaa
(bad)
clc
mov
push
adc
(bad)
mov
xchg
pop
sub
and
loopne
push
into
pop
call
sbb
cmc
sahf
(bad)
adc
inc
mov
push
ss
imul
mov
outs
ja
add
or
jg
sbb
out
lahf
xor
pop
xor
mov
repz
cmps
pop
mov
into
imul
aad
ins
ds
xchg
sbb
xchg
xchg
int
fidivr
pop
mov
int
mov
xchg
cmp
pushf
fisttp
sub
push
xor
(bad)
stc
fsubrp
das
ins
fs
xchg
lds
sbb
aam
cmp
push
dec
stc
jecxz
jnp
imul
push
stos
std
repnz
loopne
pop
stos
push
arpl
mov
pushf
fidiv
sub
push
add
jge
fwait
(bad)
cmp
sub
sbb
push
jo
pop
pop
or
lods
repnz
pop
add
jmp
(bad)
xchg
mov
inc
xchg
sti
jb
mov
adc
out
jecxz
inc
push
test
popa
iret
adc
pop
fadd
jb
pop
adc
xchg
xchg
(bad)
mov
or
adc
adc
out
cs
cmp
mov
shr
in
and
sbb
xor
jl
mov
sbb
jmp
or
out
jmp
cld
fcomp
aad
int
cmp
loopne
and
adc
jo
dec
jae
cdq
cmp
jmp
mov
dec
je
adc
mov
test
nop
sbb
mov
imul
ret
xchg
jae
dec
test
add
data16
stos
add
sahf
sar
adc
inc
dec
and
jecxz
xchg
jg
test
ds
and
or
push
fwait
add
ins
sbb
nop
gs
pop
mov
dec
xchg
cmp
outs
(bad)
call
and
sub
jmp
xor
popa
push
test
cmp
ror
add
xor
cmp
shl
sub
daa
push
mov
pop
loop
shr
adc
popf
pop
in
or
inc
sbb
pop
pop
lds
icebp
inc
mov
leave
jle
and
(bad)
out
mov
push
stc
push
push
ja
pop
add
pop
add
add
stos
fmul
ret
and
dec
jl
repnz
ror
bound
or
call
add
ret
call
loope
and
rol
(bad)
fdiv
jge
scas
sub
out
mov
push
ins
into
stc
jl
shr
fld
outs
jmp
mov
cmc
iret
es
mov
mov
or
jae
(bad)
ror
push
in
mov
and
nop
out
sbb
and
jg
cld
mov
dec
imul
sbb
xlat
imul
xchg
jno
pop
test
in
jb
cmps
mov
jg
fwait
add
dec
(bad)
loopne
or
sub
aas
stos
adc
aaa
pusha
lods
sar
jae
jle
and
arpl
adc
mov
mov
div
cdq
stos
into
mov
dec
fdivr
movs
(bad)
xor
dec
xchg
mov
sbb
mov
mov
xor
jl
sti
int
cs
int3
sub
fiadd
push
inc
xor
movs
mov
or
sub
aad
mov
xchg
dec
test
stos
xor
pop
pop
xchg
mov
jge
xchg
jmp
ja
inc
bound
iret
xor
ror
add
mov
inc
(bad)
sti
pop
jmp
or
shl
stos
test
idiv
cmp
(bad)
call
(bad)
mov
push
out
pushf
pop
mov
jbe
push
or
ffree
in
fdiv
sahf
mov
pcmpeqd
pop
or
adc
inc
int3
add
adc
loope
pop
or
ds
je
jg
rol
mov
call
adc
xor
(bad)
jg
push
add
(bad)
mov
jle
jg
dec
dec
push
popf
or
jae
mov
mov
mov
pusha
in
je
outs
adc
mov
xchg
mov
push
into
mov
das
ret
sahf
jmp
and
xor
int
xor
sbb
outs
adc
dec
rcl
fwait
jle
rol
inc
cmps
adc
add
mov
arpl
lea
jmp
xor
xchg
pop
fild
jmp
xchg
out
mov
icebp
mov
pop
push
jno
scas
shr
cmp
not
popf
mov
int3
mov
shl
mov
sub
push
or
nop
mov
adc
sbb
xor
pop
pop
lods
push
mov
or
cld
pop
jecxz
cwde
cmp
hlt
add
sub
mov
mov
call
fwait
gs
xor
xchg
pushf
mov
enter
mov
dec
jns
cwde
aas
xchg
pop
mov
out
pop
mov
rcl
sar
pop
std
int3
pop
sbb
div
mov
ret
or
jne
in
cmc
rcl
cmps
inc
cmc
sar
push
fwait
xor
popa
jo
pop
or
xchg
add
cmps
sub
mov
xchg
stos
mov
add
or
jae
fstp
fs
push
push
lock
inc
dec
inc
inc
sbb
push
push
iret
loope
xor
cs
cmp
pusha
mov
imul
fnstcw
lea
add
mov
jge
jecxz
test
js
scas
popa
out
mov
scas
arpl
push
cmp
das
dec
push
ret
lock
lods
hlt
sti
cs
xchg
aaa
out
ja
xchg
pusha
and
push
mov
hlt
mov
int3
sbb
shl
pop
fcmove
(bad)
loopne
cmps
dec
xor
xchg
ds
jnp
jae
daa
jnp
shl
dec
jno
dec
xchg
sbb
xchg
cmp
cmc
add
mov
mov
popa
cmp
outs
push
pop
ret
gs
(bad)
jb
cmc
jecxz
mov
dec
mov
fistp
in
mov
mov
push
and
mov
xchg
cmp
sti
imul
jo
add
mov
push
das
push
aad
adc
ret
pop
xchg
cmps
xor
push
mov
mov
and
rcr
inc
sahf
nop
aad
aaa
dec
xchg
test
jge
pop
dec
push
hlt
daa
mov
sti
retf
inc
addr16
shl
ret
dec
in
cmps
les
fdivr
mov
ret
in
arpl
xchg
movs
mov
repz
stc
les
jne
inc
icebp
jl
cdq
pop
mov
ror
ss
mov
sub
stc
outs
mov
repz
call
adc
jae
stos
cmp
loope
push
jge
sbb
daa
mov
mov
out
mov
clc
mov
cmps
fwait
jo
stos
lods
aam
and
call
inc
cld
(bad)
sbb
pop
inc
adc
sbb
adc
ror
in
cmp
mov
sbb
jbe
jge
cmp
shl
mov
adc
sti
ja
xchg
pop
mov
mov
out
mov
add
jmp
sahf
je
shld
(bad)
loop
in
adc
in
test
ret
sbb
mov
cmp
(bad)
daa
pop
aaa
sbb
xchg
iret
cdq
pop
push
js
mov
jmp
test
sbb
sub
(bad)
repz
or
cmp
scas
xor
pop
movs
sti
add
cmp
call
sar
dec
movs
xlat
bound
sub
out
iret
in
jmp
and
xchg
lahf
sti
or
lock
inc
or
xor
inc
xor
inc
xor
inc
cs
in
cmc
xor
mov
clc
cmp
daa
push
mov
in
mov
stc
xchg
dec
dec
rdpmc
xchg
push
fldl2e
or
test
mov
mov
not
xchg
push
imul
stc
enter
call
repnz
hlt
ret
dec
add
xlat
call
sub
sbb
mov
mov
sub
mov
jmp
mov
popa
cmp
sbb
mov
js
or
pop
ret
cmp
cwde
movs
xchg
cld
mov
stc
or
add
mov
sbb
jl
inc
push
(bad)
mov
mov
inc
push
jle
idiv
cmp
jae
push
pop
mov
pop
mov
cmps
xor
mov
mov
hlt
(bad)
rcr
popf
test
sbb
cmps
ficomp
and
into
lahf
mov
rol
mov
push
sbb
fdiv
inc
ds
xchg
mov
test
sti
ud0
mov
outs
shl
call
sub
cmp
pop
ficom
(bad)
dec
pop
xor
les
inc
call
xor
pop
test
push
and
fistp
loopne
push
repnz
xor
fadd
out
add
sbb
je
ror
test
xor
repnz
sub
mov
in
adc
pop
xchg
cwde
xchg
pushf
xchg
int
xchg
cld
mov
into
sar
daa
push
ss
jg
cs
and
ss
push
mov
push
jg
daa
fcomp
aad
fiadd
gs
in
rcr
call
sar
or
out
shr
call
sub
xor
jge
aad
jmp
pop
inc
push
mov
sahf
or
jo
popf
stos
xor
into
ja
fld
nop
xchg
xor
loop
mov
adc
add
outs
sub
fst
pushf
push
mov
and
call
std
mov
push
loopne
jb
cmps
mov
out
sub
jmp
push
outs
xlat
mov
int
cmp
in
sti
ss
test
(bad)
test
cld
or
push
xor
sub
cld
mov
mov
scas
cmp
popa
mov
hlt
enter
mov
jnp
mov
pop
mov
xchg
out
cmp
dec
cmps
push
mov
stc
cmp
xchg
jne
sti
cmp
pop
(bad)
sub
inc
cmp
sub
arpl
push
ret
(bad)
push
inc
mov
mov
xchg
sbb
pop
dec
(bad)
sbb
stc
pop
add
mov
lods
mov
xchg
xor
cmovns
aam
stos
pop
xor
loope
stc
in
test
aam
ret
shl
and
push
and
jae
ins
inc
je
dec
aas
or
ss
data16
sbb
cli
test
shr
test
cmc
mov
cld
jo
add
retf
pop
ins
aam
and
inc
outs
pop
and
pop
iret
fist
sbb
lea
loop
fstp
aad
shr
arpl
adc
jae
retf
in
jle
call
mov
lods
test
xchg
addr16
mov
mov
dec
stc
mov
jge
shl
jo
mov
push
(bad)
bound
sub
pop
fdiv
call
jg
push
fsubp
stos
imul
xchg
mov
test
xlat
jb
sbb
imul
in
xchg
lock
rol
repz
inc
or
jg
cmp
xlat
movs
fdivr
cmc
clc
std
adc
cmp
mov
mov
shl
ins
or
xchg
out
mov
push
cli
fld
cmps
jb
leave
or
and
mov
push
popf
ds
aam
ins
xchg
out
add
xor
jge
jmp
jle
call
cdq
fdivr
mov
xchg
retf
jmp
(bad)
cld
das
pop
inc
inc
cmp
mov
push
in
jmp
les
lock
or
in
push
repz
(bad)
(bad)
push
mov
pop
cmp
dec
sbb
xlat
out
xchg
jb
fwait
xchg
mov
xchg
mov
or
je
xchg
inc
ss
int3
push
inc
call
mov
sbb
stos
push
out
lock
sub
add
shl
retf
popa
int3
mov
pop
push
(bad)
stos
enter
fstp
jge
jp
in
xchg
in
int
dec
jns
movntps
bound
pop
int3
data16
sub
imul
jnp
test
cdq
(bad)
outs
std
cld
imul
not
push
stos
mov
inc
pop
add
sar
cmp
dec
sub
mov
arpl
out
or
and
into
inc
push
stos
dec
clc
sar
int
cwde
das
lods
stc
dec
and
dec
push
push
dec
test
out
push
int
mov
mov
cld
pop
push
sub
xchg
mov
dec
ja
aaa
xor
pop
stos
adc
in
xor
scas
mov
cmp
cmp
cmc
pop
cli
lahf
cmps
idiv
inc
sub
ss
movs
or
and
jns
jmp
popf
adc
pop
out
xchg
xchg
dec
in
mov
les
test
ret
xchg
daa
enter
push
stc
sahf
mov
jb
cdq
dec
in
iret
mov
in
or
int
cwde
ins
push
xchg
out
xor
mov
ja
in
cmp
lods
push
push
test
iret
test
sub
mov
sar
mov
cmps
dec
or
rcr
lods
mov
call
(bad)
fbld
fisttp
cmps
inc
stc
cmc
and
out
and
sbb
push
cmps
dec
(bad)
inc
outs
cmps
dec
dec
pop
out
cmp
popf
sbb
pop
inc
cmps
sbb
add
fnstcw
pop
jns
(bad)
fimul
mov
inc
jle
mov
mov
or
ror
mov
mov
mov
xchg
retf
mov
xchg
test
imul
or
jne
cmp
inc
popf
push
(bad)
cmp
bound
aas
retf
and
pop
cmps
(bad)
sti
stos
push
pop
fdiv
push
cli
lahf
mov
retf
mov
leave
sub
mov
sub
dec
icebp
mov
push
xchg
mov
int3
push
adc
js
into
inc
clc
pop
mov
add
test
in
fwait
retf
in
jbe
and
fld
mov
mov
xchg
adc
test
push
adc
das
fstp
aaa
xchg
rcl
jmp
fcom
js
stc
out
es
push
add
call
loop
leave
int3
repnz
mov
fs
jae
sti
int
nop
sbb
lods
in
in
loop
lods
and
repz
into
ja
loope
pop
int
add
stos
push
out
add
xchg
ja
mov
das
pop
(bad)
mov
test
pusha
jo
mov
fmul
fistp
popf
adc
and
mov
daa
popf
sar
retf
mov
rcr
outs
sbb
or
imul
sbb
jo
jb
sub
mov
(bad)
test
mov
xor
out
int
aaa
mov
sub
add
ins
addr16
mov
and
and
pop
pop
inc
clc
jmp
(bad)
gs
leave
enter
mov
lahf
jae
xchg
das
sbb
push
fwait
and
and
pop
outs
clc
retf
push
mov
mov
xor
stc
or
or
adc
loope
dec
mov
adc
dec
mov
cmp
add
mov
retf
xlat
mov
or
xchg
cmps
adc
arpl
lods
movs
inc
sub
add
sub
mov
repz
rcl
fcom
test
cmp
(bad)
sbb
int
out
xlat
lds
cmps
cmp
sub
cmps
push
enter
scas
push
mov
aad
sbb
stc
jge
inc
js
jecxz
mov
inc
sub
aas
jmp
push
cmp
dec
xor
jb
dec
pop
sub
hlt
pushf
jge
jmp
shr
mov
xchg
mov
push
sbb
lods
push
push
cdq
ficomp
inc
rol
mov
retf
cmps
pop
outs
loope
rol
repz
(bad)
mov
sar
jp
or
mov
fs
das
imul
stos
push
mov
or
mov
adc
sub
dec
jle
jle
leave
xor
adc
in
clc
pop
icebp
jo
cs
nop
sbb
push
std
jo
push
xchg
adc
fwait
aas
jmp
add
scas
repz
adc
xor
hlt
xor
sahf
scas
lods
lea
out
jns
cdq
mov
add
sbb
push
and
(bad)
mul
cmp
sbb
dec
inc
and
xchg
or
xor
scas
add
adc
and
out
dec
sub
out
nop
sbb
dec
jo
sti
add
jns
mov
cdq
jmp
pop
scas
xchg
mov
sub
ins
sub
adc
out
jno
mov
cld
and
xchg
out
xchg
and
or
mov
add
movs
add
mov
test
jns
scas
inc
test
cmp
pop
xchg
add
and
es
pusha
cmps
(bad)
cmp
push
or
loop
shr
fcomp
pop
cmps
div
adc
mov
fistp
adc
cmp
dec
gs
mov
fnstenv
cli
adc
and
inc
stos
lods
push
xchg
mov
xor
test
mov
je
sub
jmp
(bad)
xchg
add
test
xor
mov
jg
push
lea
jg
or
(bad)
jmp
imul
aaa
cmovnp
leave
dec
push
leave
cmp
cmp
push
xchg
daa
call
jno
stos
fidiv
ret
(bad)
das
push
inc
xchg
stos
imul
push
loop
mov
pop
aas
and
sbb
sbb
jmp
and
add
enter
jl
adc
xchg
addr16
pop
push
fistp
ss
(bad)
std
sbb
data16
add
arpl
dec
sbb
js
xor
ins
leave
addr16
and
cmp
fidivr
mov
shl
sbb
add
mov
cmps
rol
xor
fxch
xchg
cmp
fnstsw
mov
adc
dec
call
(bad)
fld
xchg
sar
fst
addr16
dec
pop
mov
push
call
xor
cmp
test
scas
fmul
aam
lods
stos
mov
es
jmp
leave
fist
dec
push
leave
adc
hlt
xchg
adc
push
sub
mov
daa
lea
xchg
addr16
or
ds
xor
dec
in
dec
movs
scas
pop
scas
fisttp
pop
adc
dec
mov
add
fwait
fs
push
inc
mov
mov
arpl
cmp
sbb
jb
dec
inc
mov
cmc
jg
pop
lahf
sbb
in
mov
inc
call
fdiv
mov
out
xchg
int3
jecxz
loop
mov
adc
mov
stos
in
push
popa
inc
pcmpgtw
ja
bound
out
xchg
mov
das
pop
adc
stos
jecxz
push
dec
jmp
call
int
ret
arpl
mov
mov
xor
pusha
in
lock
aad
fld
mov
push
inc
mov
ja
in
and
pop
imul
sbb
fs
inc
lahf
sbb
and
xor
sbb
ins
out
inc
inc
imul
stos
stos
add
sbb
js
mov
retf
into
mov
movs
shl
mov
jno
adc
push
jae
add
and
ror
xor
xchg
adc
or
jmp
push
push
lock
shr
dec
ds
movs
mov
fcom
or
add
(bad)
mov
aam
inc
xchg
xchg
bound
lods
and
and
mov
mov
cmp
neg
jns
stc
sub
out
adc
xchg
xchg
test
xor
iret
mov
push
movs
daa
gs
add
xchg
mov
inc
movs
jns
adc
add
push
push
inc
mov
iret
dec
pop
cmp
(bad)
push
mov
fadd
sub
cli
test
sti
into
dec
les
sub
cwde
push
mov
jns
mov
and
sub
dec
push
stos
ret
dec
inc
pushf
test
jl
into
call
test
dec
in
shr
and
add
or
test
mov
out
ins
js
and
pop
loopne
sahf
sar
inc
lods
fdiv
or
pop
sahf
fwait
add
call
(bad)
data16
gs
cs
test
jnp
dec
inc
popf
sub
idiv
dec
xchg
jbe
jg
mov
cwde
mov
dec
dec
test
iret
push
push
cmc
in
push
fisub
fninit
movs
movs
jbe
mov
loop
adc
gs
push
movs
ret
sub
push
or
imul
jmp
into
jmp
lods
xchg
push
hlt
dec
cdq
push
cdq
pushf
add
adc
mov
adc
add
dec
add
push
sub
adc
add
sub
ins
movs
sub
mov
or
(bad)
mov
mov
mov
sbb
scas
sbb
pop
les
mov
jb
fs
shl
cmps
ds
mov
retf
sub
push
retf
neg
jle
lock
mov
movs
mov
push
pop
sbb
mov
mov
xor
cmp
dec
jne
push
dec
stos
pop
cmc
outs
mov
jle
push
es
xchg
in
xor
adc
sub
outs
ret
fidivr
mov
mov
rcl
or
and
leave
dec
scas
loopne
xor
mov
sub
xchg
aaa
shl
mov
addr16
push
mov
xor
hlt
dec
mov
adc
ja
pop
jl
stc
push
ins
fild
idiv
sahf
nop
xlat
mov
mov
aam
mov
lock
hlt
mov
jl
in
sbb
gs
adc
xor
scas
jmp
mov
jmp
popf
test
dec
mov
xchg
out
sbb
cmp
fnstenv
das
imul
sub
movs
repnz
out
fs
lods
out
adc
stos
in
clc
or
and
(bad)
pushf
sub
popf
inc
(bad)
jle
jno
dec
and
aam
pop
push
loop
mov
jb
jnp
mov
mov
push
xor
cli
int
or
jns
sub
push
lods
pop
cmc
iret
inc
retf
xchg
das
lds
jb
cwde
loop
(bad)
adc
pop
mov
xchg
stos
push
mov
loopne
xor
fisub
xor
cmps
pop
cli
shr
mov
fdivrp
jns
daa
push
repz
mov
jbe
fstp
cdq
push
jns
test
sahf
into
out
dec
xor
loopne
jno
out
fdiv
lock
xor
pop
mov
nop
pop
popa
stos
pop
pop
mov
shr
rol
inc
push
push
push
cmps
cs
sub
pop
adc
mov
dec
dec
sbb
mov
ss
in
les
mov
mov
fist
xchg
stos
sahf
mov
mov
outs
jbe
shr
dec
gs
cmp
push
push
sbb
iret
sbb
stc
mov
inc
repz
jo
jne
lds
mov
(bad)
pop
xor
sti
adc
int3
fcom
mov
fdivr
cmp
stc
sub
retf
xor
(bad)
jle
jns
movups
out
icebp
stos
mov
mov
outs
add
hlt
cmp
cdq
es
sub
enter
(bad)
cld
adc
mov
sub
fmul
mov
xchg
out
mov
ja
sub
(bad)
dec
add
mov
fwait
test
inc
xchg
pop
or
cmp
js
jge
cmps
xchg
add
mov
xchg
stc
jbe
mov
cmp
sbb
jp
mov
iret
cmp
adc
mov
(bad)
xchg
dec
inc
or
mov
aam
fcom
leave
(bad)
ret
pop
out
mov
dec
outs
dec
jmp
or
jne
icebp
xchg
leave
and
adc
fwait
pushf
jmp
add
cmp
xchg
in
stc
scas
aad
sub
fnstcw
out
and
xor
and
mov
add
outs
mov
out
fisub
sub
mov
enter
lods
ret
pop
mov
daa
shl
jnp
int3
mov
les
scas
(bad)
mov
imul
fsubr
outs
dec
not
sbb
cmp
(bad)
call
ja
xchg
mov
push
sbb
ror
xchg
dec
inc
addr16
mov
sub
cmp
sbb
push
mov
int3
mov
popf
push
xor
ficomp
add
lds
xchg
scas
aam
in
cli
cmp
sub
pop
xor
jle
xchg
pop
sub
pop
xlat
mov
sub
jno
cmps
aaa
jg
xchg
repz
sbb
sahf
scas
aam
loop
scas
mov
push
inc
in
ins
mov
lock
cmp
mov
rcr
rol
out
xchg
jmp
inc
xchg
mov
add
fwait
repz
mov
sbb
push
stc
mov
movs
inc
out
movs
stc
xor
jae
stos
lods
mov
inc
sbb
adc
pushf
push
jg
iret
enter
inc
mov
jb
sbb
mov
mov
sub
ja
pushf
retf
or
mov
xchg
jae
or
mov
cdq
stos
cmps
mov
es
cmp
push
adc
mov
outs
or
out
sbb
and
jnp
dec
push
out
cmp
mov
push
jb
mov
cmp
loop
or
push
outs
loopne
adc
sbb
mov
cmp
fnstcw
mov
dec
cli
inc
aad
and
ins
push
xchg
and
sub
jmp
dec
(bad)
mov
ja
jb
out
test
mov
mov
xchg
inc
in
add
jecxz
mov
mov
inc
sbb
add
jae
inc
ins
pusha
ins
mov
sub
cs
dec
mov
movs
inc
push
dec
mov
xchg
mov
mov
in
jecxz
jmp
cwde
jb
pop
fisttp
xchg
nop
push
ins
mov
inc
or
ins
xor
into
cmp
mov
jge
lahf
ds
or
rol
add
and
xor
(bad)
sbb
push
pop
push
es
retf
pop
in
pop
inc
or
dec
js
push
test
or
xlat
and
mov
call
or
or
ret
add
or
out
mov
mov
cmp
loope
lods
cmps
loope
adc
xchg
jecxz
loop
(bad)
inc
or
cmc
mov
in
jecxz
sbb
jne
mov
daa
and
fldcw
xlat
aaa
(bad)
mov
mov
fidiv
mov
test
mov
stc
xor
arpl
mov
dec
cmp
dec
push
clc
jbe
lahf
dec
push
push
adc
scas
jae
pop
dec
mov
adc
pop
push
jbe
or
mov
mov
adc
aas
dec
add
neg
sar
fiadd
(bad)
out
ret
adc
push
push
fidiv
mov
fmul
fidiv
pop
mov
cmps
jmp
mov
jecxz
movs
ror
daa
xor
pop
pop
sbb
lock
mov
cmc
push
mov
xchg
cld
fisubr
sbb
jbe
dec
stos
xchg
mov
out
mov
cld
jg
jns
or
mov
pop
in
ds
mov
mov
cdq
jmp
add
sbb
dec
scas
sub
xchg
mov
and
(bad)
push
xlat
mov
mov
rol
aad
inc
rcl
push
jg
jmp
les
adc
push
ins
nop
int3
mov
outs
inc
xchg
test
pop
mov
cli
xchg
jne
scas
push
jno
mov
pop
rcl
out
cmp
push
rcr
cmp
cmps
xchg
jnp
test
lock
(bad)
jno
inc
pusha
(bad)
stc
mov
adc
mov
and
cmp
or
popa
stos
jmp
or
sub
nop
push
or
fisubr
mov
(bad)
int3
pop
ins
xor
jo
cmp
(bad)
retf
xchg
shl
dec
mov
dec
pushf
fistp
popf
mov
adc
aas
(bad)
pop
jmp
outs
aas
mov
pop
(bad)
inc
push
ficom
(bad)
retf
adc
icebp
fsub
jbe
jb
adc
ds
fisub
ret
rol
ins
int3
xchg
mov
aas
dec
jb
cmp
cmps
bound
add
push
inc
sti
adc
das
jge
add
jns
cmp
dec
ror
aad
lds
daa
cli
dec
sahf
cmp
outs
pop
pop
push
js
sbb
sub
enter
cwde
loop
ja
dec
rcl
addr16
inc
or
push
mov
mov
lods
add
adc
mov
cwde
push
push
jecxz
cmp
push
xchg
pop
aam
mov
out
xlat
adc
ja
jle
cmp
mov
ficomp
fcom
jge
mov
xchg
sbb
das
sub
aaa
scas
ficom
xchg
push
mov
sub
in
and
push
out
enter
jbe
sub
loope
sub
mov
outs
xlat
sbb
mov
shl
and
dec
cmp
sub
dec
data16
sub
add
push
dec
stos
xor
pop
(bad)
cmc
in
dec
sar
or
mov
sub
sahf
inc
dec
cld
push
jbe
ss
sti
lods
test
fcomp
jmp
push
in
aaa
or
hlt
int
xchg
sub
sbb
out
ficomp
or
ret
mov
dec
or
outs
or
retf
jno
adc
sub
ins
call
outs
retf
sub
mov
call
jp
jg
not
jg
jmp
scas
cwde
(bad)
cwde
fcomp
imul
adc
fcom
leave
mov
popa
pusha
cmc
imul
cdq
cmp
lahf
ss
mov
adc
xchg
leave
imul
iret
nop
outs
ret
pop
lds
dec
pop
int3
inc
push
jns
xchg
fucomip
icebp
and
stc
maskmovq
imul
push
jae
shl
out
std
arpl
fild
adc
jae
(bad)
cwde
sbb
and
retf
popf
mov
in
cwde
mov
add
(bad)
mov
pop
or
js
sahf
add
xchg
rcl
push
push
cmps
(bad)
push
sahf
push
retf
lds
cwde
cs
xchg
xor
xchg
jb
push
dec
pop
lock
pop
mov
xor
outs
(bad)
in
mov
or
loop
inc
lods
test
sahf
out
cmp
(bad)
jbe
scas
add
(bad)
addr16
icebp
ss
push
shl
xor
ss
arpl
sub
and
retf
adc
sti
fidiv
mov
mul
stos
push
jg
dec
out
out
fnstcw
mov
jns
ss
cmps
dec
stos
mov
xchg
clc
sbb
out
adc
sar
push
lahf
aad
jl
mov
lahf
out
jno
test
icebp
test
add
push
jns
jnp
clc
out
adc
cdq
jns
dec
loop
jno
push
mov
pop
test
sub
sub
paddd
stos
and
ja
pop
add
(bad)
ret
dec
sbb
push
(bad)
test
imul
xchg
add
ins
inc
cmp
sub
hlt
mov
mov
pop
faddp
scas
mov
and
pop
arpl
popa
das
test
jno
popa
frstor
xchg
jge
in
xchg
and
pusha
push
push
in
jne
xchg
jb
add
mov
retf
(bad)
jo
sub
clc
in
xchg
add
adc
cmp
repnz
sbb
jle
xor
lods
xchg
cmc
jo
and
call
and
mov
ins
in
mov
jne
xchg
inc
sub
jp
xchg
dec
xchg
adc
pop
sahf
xlat
mov
ror
push
(bad)
pop
fidivr
sbb
(bad)
out
mov
cmc
cmp
cmp
or
xchg
imul
ss
sar
mov
dec
dec
xor
(bad)
jns
out
mov
ins
lds
cs
test
ficom
mov
sub
sbb
pop
sar
mov
repnz
add
fs
pop
fnstsw
loopne
pop
mov
int
imul
add
repz
or
fisttp
sahf
ss
cmc
stos
xchg
and
scas
shl
ja
mov
shl
dec
add
sti
out
retf
xlat
aam
sub
or
jmp
jae
mov
mov
cmp
(bad)
ds
xchg
stc
or
sbb
movs
imul
sbb
xor
pop
cld
mov
push
inc
leave
cmp
mov
lahf
xchg
loopne
mov
push
not
mov
shl
xor
dec
or
mov
repz
push
(bad)
fisubr
setp
jb
and
retfw
ror
adc
fisub
inc
add
test
ds
retf
repnz
retf
inc
sti
mov
in
cmp
pop
cmps
jae
or
cmps
dec
cmp
lods
pop
ss
sti
mov
adc
push
mov
pop
loop
add
sbb
les
mov
sbb
jle
(bad)
cwde
repnz
iret
retf
push
bound
jno
scas
cmp
sahf
xor
mul
out
mov
(bad)
jp
sahf
mov
pop
movs
test
and
or
icebp
xchg
xchg
call
or
push
imul
push
(bad)
in
cmp
aam
fs
mov
mov
jnp
cmc
test
sbb
adc
lods
cmp
adc
cmp
push
(bad)
mov
xor
jae
into
dec
mov
xor
outs
xchg
(bad)
jmp
mov
pushf
mov
hlt
fsincos
or
jnp
cmp
push
and
out
mov
nop
xchg
mov
int
dec
fcom
cmc
cli
lods
push
mov
adc
iret
push
or
mov
(bad)
out
push
dec
shl
retf
push
push
imul
inc
adc
add
lods
mov
loop
(bad)
mov
test
clc
lods
mov
jb
jno
mov
mov
lods
mov
pop
in
in
jns
nop
jcxz
mov
jecxz
dec
jg
mov
(bad)
outs
xchg
repnz
mov
call
sub
cdq
aad
mov
sub
and
div
mov
jle
sti
in
call
bound
outs
inc
jmp
push
push
cld
scas
jae
fist
popf
ret
cli
jmp
pop
test
mov
jg
stos
pxor
ja
lahf
push
inc
sti
bound
out
test
mov
sbb
or
fcos
mov
in
jmp
nop
nop
aas
test
jle
push
(bad)
data16
jle
in
inc
mov
out
in
ret
inc
jge
jns
lea
pop
xor
ret
mov
jns
test
jmp
sti
out
stc
pop
test
mov
jle
jbe
fdiv
cli
test
daa
out
loop
mov
mov
ret
jecxz
sar
arpl
adc
repnz
movd
(bad)
jge
sub
mov
retf
lahf
fmul
ds
cli
idiv
add
mov
mov
dec
xchg
add
jb
cmp
cmp
mov
movs
out
sahf
popa
fsub
jno
add
fsub
mov
dec
(bad)
mov
or
inc
push
adc
and
jbe
into
les
hlt
hlt
icebp
adc
cmp
jmp
mov
dec
or
fcom
scas
cli
(bad)
jg
jge
dec
inc
in
mov
jp
mul
iret
cld
(bad)
out
pop
icebp
xchg
aas
sti
rcl
mov
push
pop
por
bound
dec
pop
cmps
mov
pop
jo
and
not
adc
jecxz
jb
mov
ja
pushf
pusha
push
pusha
pusha
bound
xor
out
scas
sar
out
pop
mov
std
out
sti
imul
pop
and
fwait
jmp
popf
aas
ret
lahf
pop
ret
outs
daa
mul
mov
es
sub
repnz
jno
jle
mov
imul
dec
das
xor
xchg
ja
cwde
or
scas
inc
(bad)
cld
call
mov
mov
sbb
mov
push
fmul
sbb
mov
jnp
mul
mov
or
push
ins
jnp
(bad)
call
(bad)
je
stos
sbb
div
outs
dec
xchg
sti
cmp
and
arpl
mov
jae
xchg
mov
dec
adc
call
cmp
outs
fcomi
jmp
clc
mov
(bad)
rol
out
(bad)
jg
adc
out
inc
push
nop
ret
mov
push
mov
call
clc
cld
xchg
ins
rcl
aad
hlt
xor
cld
mov
outs
ins
lods
jmp
mov
mov
cmp
(bad)
in
xor
ins
dec
rcr
call
clc
fidivr
pushf
sub
test
dec
repz
and
mov
inc
enter
(bad)
mov
or
adc
mov
pop
ret
push
out
jbe
jne
xor
push
stos
movs
pusha
inc
fstp
dec
and
inc
fwait
mov
xchg
icebp
jne
pop
dec
popf
add
sbb
mov
shl
push
pop
hlt
adc
push
push
push
cmc
mov
bndldx
xchg
cmp
in
mov
mov
(bad)
ret
push
hlt
into
mov
icebp
mov
(bad)
adc
pop
mov
iret
lea
jl
sar
dec
dec
imul
lods
adc
inc
cmp
push
sahf
ins
ins
cli
xor
jns
scas
adc
ror
xchg
push
mov
test
pop
add
mov
dec
xor
jnp
out
test
aaa
sub
mov
dec
pusha
push
out
cld
int
fst
xor
aaa
xchg
add
movsx
rol
push
cmp
stc
div
rcl
lods
mov
or
mov
out
shr
das
xor
ret
sub
test
push
(bad)
stos
add
xchg
jle
cmp
mov
push
sti
cmc
fsubr
(bad)
cli
add
stc
cwde
addr16
inc
or
jg
jb
repz
shl
push
cmps
xchg
jno
push
jae
daa
test
out
cmp
loope
inc
arpl
leave
mov
loop
or
mov
push
aas
es
pusha
sub
in
and
(bad)
jmp
js
mov
pusha
adc
or
push
mov
dec
rol
das
in
rol
xor
cmps
lock
mov
pusha
sbb
icebp
mov
dec
mov
sub
cmps
jle
rol
push
add
mov
sub
out
pop
adc
popf
js
inc
test
int3
call
xor
mov
rcl
(bad)
mov
cwde
mov
test
dec
sbb
mov
fprem
mov
sbb
repnz
lods
jle
in
add
dec
push
mov
je
add
mov
cmp
daa
or
sub
outs
add
inc
pusha
push
pop
cs
sar
addr16
test
push
mul
xor
xchg
cmc
jge
cmp
lock
jmp
(bad)
imul
xchg
(bad)
cmp
into
dec
xlat
rcl
pop
xor
lods
jle
iret
popa
stos
in
out
inc
fisttp
movs
mov
pop
std
sahf
jle
test
push
xor
loope
das
jmp
fldcw
stc
jmp
jbe
dec
stos
ja
push
push
int
stos
pusha
rcr
into
fdiv
or
push
push
push
call
outs
xor
cmp
mov
ins
sbb
jno
outs
mov
stos
ins
in
jmp
inc
in
scas
push
dec
repz
jmp
and
imul
adc
fist
xchg
shl
js
or
mov
cs
mov
sub
sub
jmp
mov
sbb
retf
jae
dec
ret
lods
mov
mov
push
test
ret
test
cmp
fdiv
xor
sub
pop
or
sbb
add
push
xchg
pop
cmps
push
cmc
shr
lods
rol
lock
cwde
cdq
jl
retf
fs
add
adc
dec
jb
repz
or
add
cs
cmps
sbb
nop
(bad)
out
fcomi
xor
or
cmps
dec
ss
lahf
sub
popf
(bad)
or
mov
call
pop
jp
aas
sbb
dec
mov
ins
adc
push
sbb
(bad)
shr
ins
stos
push
aam
call
cld
xchg
pop
js
mov
movs
call
fsub
jp
pop
xchg
push
ret
mov
cmp
aad
cmp
jecxz
aas
pop
hlt
pop
push
ja
ss
cmps
xchg
xor
jp
or
pop
and
popf
fucom
ds
cli
rcr
xor
imul
mov
stos
jno
sbb
xor
add
and
dec
aas
das
jbe
leave
inc
enter
enter
mov
add
cwde
dec
in
mov
mov
add
retf
mov
dec
inc
jns
adc
popf
call
neg
cmp
call
adc
cmp
jbe
fwait
lea
ins
or
lahf
arpl
loope
mov
stc
hlt
xlat
clc
gs
pop
lea
call
call
mov
jo
and
iret
das
std
or
das
sub
add
inc
jmp
test
(bad)
xchg
jne
xor
xor
lds
xchg
mov
mov
mov
lods
xchg
mov
retf
or
es
sbb
sub
push
push
jne
ja
ds
jmp
mov
inc
jnp
ror
xor
pusha
pusha
inc
outs
cwde
call
mov
mov
pop
sub
fbld
loop
aam
add
and
pop
mov
dec
loope
jl
pop
je
xchg
int3
add
dec
add
adc
je
dec
xchg
push
adc
adc
push
test
idiv
int
and
push
rol
push
sbb
ins
hlt
push
sub
sub
xor
aam
aaa
ja
push
imul
(bad)
lea
ja
dec
xchg
mov
jnp
inc
ret
std
test
ret
jp
clc
fwait
jmp
imul
lds
jnp
pop
jno
jns
ror
jmp
xor
cmps
arpl
stos
mov
popa
movs
lods
or
mov
xchg
dec
repnz
inc
mov
sub
ret
shl
add
in
fdiv
inc
fwait
push
aad
fcomp
je
or
add
mov
ficomp
dec
retf
xchg
mov
mov
rol
mov
xchg
ror
xchg
xchg
xor
iret
loop
div
mov
sahf
inc
das
mov
inc
jecxz
ds
jns
sub
outs
dec
jge
popf
mov
les
fiadd
aad
cwde
mov
retf
mov
shl
pop
cs
xchg
push
add
or
inc
cmps
dec
std
dec
mov
pop
mov
test
(bad)
hlt
in
fidivr
outs
sub
ror
xchg
sub
pop
mov
and
test
in
mov
mov
add
pop
retf
dec
fs
repnz
mov
sti
pop
stc
mov
inc
push
jg
outs
aas
repz
pop
into
jp
out
clc
in
sub
mov
pop
lods
or
mov
ss
stc
mov
inc
cmp
push
shl
fwait
scas
int
mov
in
pop
mov
dec
enter
iret
mov
fcomi
js
jne
cmp
stc
add
in
sbb
sbb
stc
sahf
pop
loope
pop
(bad)
mov
outs
cli
push
pop
jg
adc
lods
dec
push
loopne
mov
lea
jmp
add
mov
sbb
jae
or
das
sub
mov
hlt
outs
loope
jle
adc
pop
clc
in
aas
xchg
sbb
or
mov
ret
shl
scas
mov
loopne
cs
into
inc
fidiv
cmp
lock
pop
in
mov
cmp
mov
leave
popa
ss
jns
cmp
dec
adc
or
mov
jbe
jbe
repnz
lahf
fmul
fcom
cmp
aam
retf
lea
fld
jecxz
call
mul
ins
jecxz
jo
jp
stos
or
pop
scas
scas
and
fist
mov
jns
sbb
mov
add
neg
cld
push
add
xor
enter
(bad)
ins
jae
into
mov
enter
out
sbb
retf
mov
push
js
clc
inc
(bad)
cli
push
es
add
imul
sbb
lock
js
mov
jp
push
push
push
push
cld
xor
jle
icebp
pop
cmp
pop
loope
ror
jmp
jo
inc
xchg
(bad)
movs
pop
cmp
mov
inc
cmps
jbe
ss
fcomp
xchg
mov
mov
pusha
pop
(bad)
xchg
(bad)
fistp
cdq
mov
xor
mov
xchg
jo
(bad)
and
jmp
or
sub
fstp
mov
lods
int
jmp
outs
jge
stos
sbb
mov
xor
xchg
push
dec
sbb
dec
out
ins
sub
push
inc
push
fnsave
jb
lods
jmp
adc
inc
inc
jle
addr16
mov
mov
push
pop
fcom
dec
pop
cmp
jnp
sub
xor
and
mov
pop
mov
out
adc
pop
(bad)
fcom
or
mov
out
mov
mov
push
call
lods
sbb
repnz
int3
or
sbb
mov
mov
or
dec
dec
retf
xchg
sbb
sbb
stc
adc
ds
jle
fist
out
stos
sysret
mov
iret
mov
or
or
dec
cmp
mov
push
inc
in
in
int
dec
xchg
div
shr
jl
test
mov
lds
push
add
lahf
and
mov
sbb
leave
jp
shl
hlt
sti
stos
mov
sbb
xchg
adc
push
dec
push
js
retf
push
jmp
movs
lods
cmp
xor
inc
cdq
push
jnp
out
inc
leave
push
cwde
inc
out
add
xor
xchg
xor
xchg
ret
lock
xchg
sbb
ret
pop
inc
xchg
int
stos
(bad)
push
mov
xor
xchg
xor
mov
push
sti
sub
pop
xchg
add
jmp
sbb
cli
jmp
jmp
mov
jmp
aad
inc
jg
jl
or
mov
fisub
jmp
xlat
cs
int
mov
pop
adc
push
jmp
jne
out
out
mov
push
xor
jge
push
push
out
mov
cmp
or
pop
fimul
push
push
imul
push
push
loopne
fisub
xor
mov
push
es
cdq
lods
xlat
movs
test
mov
mov
mov
mov
lods
sub
sub
leave
sbb
pop
jg
mov
jmp
mov
sti
jle
mov
sti
jle
mov
hlt
dec
repz
aas
push
aaa
push
xor
mov
test
sub
mov
fidivr
add
mov
mov
xor
sti
or
adc
repz
gs
ffree
cmp
ins
call
jp
push
in
bound
add
fmul
mov
mov
lea
mov
prefetcht2
div
bound
xor
mov
add
xlat
in
stos
ret
(bad)
(bad)
sbb
movs
data16
sahf
sbb
dec
fs
leave
cmp
cs
push
adc
fdivr
gs
pop
push
test
add
inc
pop
addr16
sub
jl
xchg
leave
or
out
(bad)
std
icebp
popf
ror
pop
popf
inc
movs
inc
sub
and
sbb
dec
xor
lods
pop
icebp
xor
pop
js
test
lods
mul
jecxz
loopne
dec
push
push
(bad)
(bad)
cmps
clc
adc
jge
arpl
pop
dec
aas
(bad)
jl
mov
imul
rcr
jns
mov
outs
ret
fstp
push
add
sbb
jo
stos
push
xchg
sbb
div
jl
dec
popf
push
in
or
out
aaa
and
pop
std
(bad)
xor
nop
lock
dec
cmps
fldcw
pop
adc
fist
jne
into
mov
jmp
or
call
cmp
stc
or
pop
test
jl
mov
jl
arpl
popa
je
cmps
imul
int3
fdivr
jg
test
jmp
pushf
shl
mov
pop
push
lea
stc
idiv
mov
or
or
inc
(bad)
retf
repnz
push
jne
adc
fsubr
push
lods
fdiv
mov
dec
fld
push
loopne
outs
jbe
loopne
in
and
cmc
xor
leave
shl
adc
push
mov
lock
xor
fisub
scas
movhps
push
in
cmp
mov
lods
dec
xor
mov
jle
push
mov
ja
sub
sti
push
(bad)
sub
imul
in
ss
dec
mov
cmp
jp
movs
push
cmp
cmps
stos
dec
fnstsw
xchg
mov
push
jne
push
ror
mov
adc
lods
xchg
(bad)
pusha
cmp
lods
mov
sahf
ins
sbb
pop
xor
pop
push
test
mov
ror
mov
or
add
sub
sub
mov
sub
inc
jp
add
call
test
push
or
mov
lds
ret
xchg
mov
pop
jp
cmp
cwde
adc
in
mov
aaa
mov
lahf
inc
sub
sub
pop
push
jne
jns
xor
lods
pop
in
ret
bound
out
push
jg
stos
cdq
into
xor
dec
or
xlat
stos
xchg
cli
imul
aam
or
mov
pop
sub
lods
or
adc
push
fadd
or
lods
in
ret
sar
cmps
pop
cmps
lods
sti
push
enter
xor
mov
push
pop
mov
mov
in
mov
inc
inc
cmp
retf
sub
cmps
adc
cs
sub
imul
mov
lea
hlt
je
and
loopne
xlat
sar
mov
movs
jge
mov
scas
mov
scas
(bad)
popf
aam
sub
mov
mov
daa
dec
fucom
test
adc
mov
aaa
pusha
mov
lock
aad
das
in
xchg
test
add
pushf
shr
push
dec
lods
ds
or
jg
in
mov
and
push
stos
loop
push
mov
icebp
xor
xchg
das
dec
pop
loopne
mov
mov
scas
mov
arpl
cmc
sub
in
fidivr
leave
mov
lahf
popf
fsubr
mov
sub
inc
repnz
and
push
xor
pop
imul
lods
xchg
mov
neg
adc
and
das
(bad)
in
ins
pop
mov
sub
arpl
mov
(bad)
outs
dec
pushf
cld
mov
inc
jg
or
dec
imul
in
jno
sbb
mov
fucomi
or
shl
cs
loopne
inc
mov
inc
lods
push
pop
jg
movs
hlt
cmp
xchg
ds
idiv
fist
mov
mov
mov
fs
lock
pop
in
lods
(bad)
call
arpl
dec
xor
and
push
xor
cmp
aaa
iret
in
mov
dec
popa
leave
cs
mov
push
mov
and
cmp
loope
test
out
movs
pop
xlat
push
daa
jb
add
inc
jg
ror
out
test
fisub
test
cmp
dec
test
pop
fadd
stc
inc
rcr
(bad)
push
mov
in
fst
jbe
add
je
leave
shl
xor
mov
cmc
jne
rcl
jb
fs
aas
rdmsr
inc
push
push
sti
ret
push
pop
push
es
int3
mov
mov
jmp
cwde
ja
(bad)
fstp
jg
adc
xor
dec
cs
adc
cmc
jmp
(bad)
cmc
neg
movs
(bad)
test
arpl
push
ja
fs
and
psrlq
rcl
mov
loopne
inc
jmp
in
sbb
(bad)
sbb
cmp
test
mov
mov
inc
js
dec
dec
xchg
xchg
sub
arpl
lds
mov
inc
mov
movs
adc
mov
les
adc
jnp
popf
xchg
add
mov
xchg
out
fldcw
adc
fadd
pop
mov
(bad)
sbb
or
xchg
cli
push
lds
inc
push
push
mov
xlat
lea
das
add
or
push
mov
test
mov
pusha
adc
and
stos
cmp
fstp
mov
test
int3
add
ds
push
jp
aaa
mov
mov
loope
or
mov
push
pushf
or
int3
cmp
sbb
out
mov
or
lsl
jp
imul
out
in
mov
pop
xchg
mov
into
pusha
pushf
mov
push
out
pop
ret
int
inc
aaa
ja
xchg
in
lods
or
(bad)
dec
test
jns
in
jae
loopne
xchg
mov
stos
cmp
and
scas
pop
js
dec
push
sbb
fmul
aam
mov
jnp
sbb
xchg
sbb
rol
sub
repnz
jl
sahf
inc
ficom
sbb
dec
inc
call
jge
lahf
add
int3
xchg
sub
pop
or
aad
mov
push
push
jbe
test
sbb
fisttp
adc
mov
inc
or
ins
stc
add
sbb
xchg
mov
jnp
inc
push
dec
mov
inc
or
dec
ds
daa
mov
and
and
push
rol
dec
mov
bswap
(bad)
jmp
loop
pusha
int
inc
dec
jb
push
int
push
daa
sbb
sub
and
push
pusha
mov
push
ins
adc
or
iret
call
nop
pop
lods
(bad)
fwait
retf
fstp
icebp
test
(bad)
cmps
inc
movs
mov
push
push
and
add
repnz
cmp
pop
adc
pop
mov
popf
add
sub
pop
je
adc
cdq
rcl
jb
(bad)
sbb
cmp
mov
push
mov
and
mov
call
sub
cmp
cwde
fisttp
fcomp
add
fadd
mov
rcr
inc
or
fstp
js
adc
and
pop
pop
add
mov
push
icebp
add
lods
repnz
jge
loope
je
sub
jo
and
cmp
inc
fidiv
push
jbe
push
clc
add
adc
pop
xor
data16
lahf
test
mov
sbb
in
mov
and
pop
mov
mov
push
aam
fst
push
cdq
xchg
ret
xchg
into
movs
dec
push
ja
cmps
clc
jp
mov
addr16
mov
cmp
movs
test
fdivp
and
xlat
das
inc
jle
in
aaa
imul
fs
fmul
lock
call
imul
jns
jno
adc
not
mov
mov
mov
xchg
push
lea
or
iret
xchg
xchg
retf
mov
scas
and
xchg
inc
cli
movs
rol
mov
repnz
dec
sub
mov
outs
cwde
cmp
es
inc
cmp
push
ret
sbb
fwait
dec
pusha
mov
loope
sbb
cmp
jg
sbb
imul
jmp
iret
adc
mov
inc
pushf
sbb
popf
xor
add
retf
gs
add
icebp
mov
xor
std
pop
inc
inc
jge
cld
cmp
imul
cs
mov
movs
pop
lods
lods
iret
icebp
mov
mov
cdq
retf
nop
js
data16
inc
or
dec
mov
mov
inc
stos
add
mov
dec
dec
dec
sub
push
es
jno
cmp
xchg
clc
popa
jno
cmp
and
sub
retf
cli
aam
movs
rcr
ins
sbb
inc
shl
sar
daa
(bad)
mov
mov
jmp
mov
mov
push
inc
xchg
pop
stos
inc
sar
retf
mov
jle
aaa
cmp
sbb
pop
imul
fbld
stc
repz
fistp
retf
sub
pop
sub
xchg
pop
inc
sbb
(bad)
sbb
adc
lock
test
sub
mov
mov
inc
fucomip
jbe
(bad)
fmulp
pop
inc
add
(bad)
mov
stc
adc
ja
cmps
mov
das
xor
(bad)
in
xchg
xor
in
call
pop
test
stos
or
stc
out
out
lds
sbb
stos
inc
mov
cmc
sub
mov
outs
call
nop
repnz
mov
push
pop
sub
popa
dec
addr16
push
mov
(bad)
and
mov
inc
jecxz
cmp
daa
sub
popf
out
cmovs
jb
push
idiv
xlat
sbb
mov
adc
outs
outs
icebp
cmp
jmp
cmp
pop
(bad)
pop
or
xchg
aaa
fcmove
repz
mov
xlat
cmps
mov
mov
(bad)
mov
(bad)
push
xchg
iret
test
in
mov
(bad)
fwait
outs
rcr
stc
je
aas
sub
cs
cmp
retf
les
pusha
adc
adc
adc
xchg
loopne
shl
mov
rol
js
dec
ret
or
ins
jno
push
xor
mov
jl
test
int
int3
jecxz
repnz
stc
cmp
cli
pop
popa
sbb
dec
cdq
mov
ins
loope
jns
dec
adc
mov
cmps
test
mov
aaa
les
data16
mov
add
jge
or
xchg
sahf
sbb
(bad)
dec
out
rcl
xlat
pop
jmp
shl
sbb
movs
jle
add
fsubr
mov
xor
ins
mov
or
aas
xchg
mov
lods
add
rol
cmp
je
sbb
mov
(bad)
cdq
stos
retf
jns
outs
and
mov
shl
push
aas
addr16
xor
pop
mov
add
dec
inc
div
cmp
aas
test
xchg
pop
cmp
mov
push
jle
(bad)
scas
xlat
ins
mov
movs
movs
jmp
cmp
sbb
stos
jb
xor
fild
xchg
loopne
push
sahf
push
dec
lock
icebp
test
and
jle
fcmovbe
push
scas
aaa
cmp
adc
data16
repnz
xlat
push
or
dec
xchg
pop
inc
adc
mov
and
sub
push
pop
add
icebp
push
cld
adc
inc
call
ins
test
xlat
stc
mov
xchg
adc
dec
or
jge
add
bound
xchg
clc
push
inc
mov
dec
ds
cmp
test
in
bound
add
and
out
cli
loopne
mov
xor
adc
aas
or
in
inc
cmp
sub
cmp
add
stos
cmps
and
in
je
dec
inc
jmp
mov
idiv
fnstenv
xor
mov
mov
push
jge
mov
(bad)
fldcw
out
enter
mov
or
in
push
not
or
xor
or
sbb
mov
ror
scas
std
adc
xchg
push
in
ss
cmp
sti
jecxz
scas
xor
add
push
out
sub
sbb
in
jae
push
sub
jb
bound
loope
iret
loop
cmp
push
jnp
out
mov
les
aas
sub
adc
mov
jg
stc
jg
call
add
ja
pusha
clc
imul
call
scas
scas
or
xchg
xor
pop
in
pop
xor
cmps
jnp
jnp
xchg
imul
mov
push
and
dec
or
in
jbe
test
jl
xchg
mov
(bad)
movs
xchg
aaa
mov
mov
jae
push
xchg
jbe
daa
adc
adc
addr16
pop
push
jns
add
mov
and
push
jb
dec
xchg
pop
sbb
xchg
jmp
and
addr16
(bad)
cmc
pop
or
fistp
xor
jle
icebp
(bad)
cmps
(bad)
movs
repnz
add
pusha
outs
pop
push
dec
pusha
or
push
retf
jnp
xor
push
je
jae
jp
push
push
xlat
ja
call
daa
in
or
jl
and
add
daa
into
mov
lods
mov
mov
push
and
mov
sub
push
cmp
movs
mov
dec
mov
les
imul
pop
xor
call
outs
sbb
(bad)
or
pop
popf
push
cwde
lahf
push
lahf
test
mov
loopne
(bad)
cmp
lea
arpl
sti
lods
dec
jo
or
sub
fsub
stc
or
scas
out
lahf
loopne
test
cmps
outs
cmp
add
inc
jnp
stc
bnd
lods
jnp
xor
mov
inc
jno
push
in
lods
mov
out
cld
mov
or
js
push
scas
inc
ss
pop
or
sub
jmp
ins
loope
popf
scas
fwait
fwait
xor
mov
cmp
sbb
inc
mov
sahf
fwait
test
xor
mov
int
xchg
fs
xchg
movs
cmp
xchg
push
dec
and
jmp
ds
and
push
stos
xor
push
xor
rcr
ror
lds
rol
shr
outs
daa
cmps
inc
xor
(bad)
push
div
or
ret
shr
out
imul
sub
imul
cmps
xchg
call
mov
xchg
cmp
pop
jae
call
leave
scas
dec
lea
xchg
add
(bad)
xor
or
xor
push
dec
mov
stc
inc
cdq
shl
shl
dec
data16
loopne
lock
outs
push
lahf
cmp
cmp
inc
arpl
in
cdq
je
xor
test
inc
ror
sar
mov
int
mov
mov
pop
sahf
rcr
ins
stos
sbb
cmp
pop
sbb
in
xchg
mov
(bad)
jl
std
inc
push
inc
xor
mov
loop
pop
xlat
mov
(bad)
rcl
dec
xor
jno
mov
adc
(bad)
xor
ficom
test
bound
data16
lds
xchg
loopne
pop
jno
stc
ins
jbe
inc
loop
dec
adc
std
sbb
popf
fist
sub
fsubr
mov
sti
hlt
add
push
mov
adc
movs
or
pop
in
mov
mov
scas
adc
mov
call
iret
add
dec
fdiv
dec
dec
add
sub
jl
out
push
adc
pop
adc
or
xchg
popf
jo
clc
sbb
adc
cmp
(bad)
outs
stos
loopne
mov
xor
inc
or
pop
shl
dec
in
or
jl
rol
mov
sbb
jb
jo
cwde
mov
aam
sbb
lahf
push
(bad)
mov
lods
mov
movs
(bad)
push
xor
jp
or
aam
inc
inc
out
shr
idiv
pop
fistp
or
jle
ja
dec
fucomi
repz
test
mov
push
cdq
clc
mov
fsubr
xchg
mov
imul
adc
test
or
fimul
mov
push
sub
jnp
call
inc
das
sub
jo
add
int3
and
pop
mov
cld
sahf
and
cmp
push
in
sbb
xlat
pushf
or
sbb
pop
push
sbb
add
add
rcr
arpl
sbb
jns
cmp
stc
push
retf
push
add
inc
mov
mov
adc
call
push
outs
sbb
clc
mov
shr
push
sti
mov
rol
es
icebp
jmp
sbb
push
aas
bound
scas
xchg
(bad)
enter
pop
adc
sub
add
mov
mov
and
cmp
sbb
jmp
cmp
aam
sub
push
ins
inc
jbe
mov
sbb
iret
or
scas
mov
cli
xchg
pop
cs
ds
mov
mov
or
imul
aam
sbb
movs
sub
lahf
dec
and
out
and
jl
iret
fstp
inc
iret
inc
pop
and
cli
pop
ret
push
and
or
xchg
aas
sub
sbb
dec
add
ja
mov
jg
aam
adc
mov
stos
cmps
(bad)
or
fmul
sbb
sub
mov
rcl
pop
inc
adc
cmp
aaa
and
or
lds
cmp
fwait
mov
ins
(bad)
and
sbb
sbb
or
retf
push
fwait
test
imul
(bad)
in
push
adc
call
mov
movs
or
into
daa
sar
out
imul
paddw
push
icebp
mov
test
jae
ret
iret
mov
dec
repnz
xlat
mov
je
cmp
pop
mov
mov
sti
sub
retf
je
addr16
add
sub
das
mov
xchg
cwde
popf
cld
in
cmp
xchg
es
iret
mov
(bad)
out
fidiv
dec
ja
and
mov
or
daa
(bad)
ja
(bad)
adc
mov
and
cmp
ret
push
mov
xor
loopne
adc
inc
mov
mov
add
imul
inc
rol
cmc
jae
sar
aad
out
in
and
adc
or
mov
or
ret
test
imul
jmp
or
push
xchg
inc
lea
enter
dec
cmp
(bad)
cli
and
adc
sbb
pop
mov
fdivr
push
inc
and
dec
dec
imul
sub
xor
ficomp
mov
imul
pop
jbe
out
leave
inc
mov
dec
fstp
mov
jne
push
cmp
lahf
sbb
loopne
mov
lds
xchg
xchg
mov
cmp
sbb
adc
xlat
sbb
xchg
mov
movs
lock
dec
mov
or
call
jne
dec
imul
fist
lahf
sub
test
dec
xor
mov
add
sbb
jle
jge
mov
add
adc
adc
repz
shr
cmp
jecxz
and
shr
cmps
jno
movs
or
and
in
ja
mov
out
dec
add
inc
add
add
rcr
sysexit
test
xor
(bad)
mov
inc
mov
outs
imul
or
cmp
lahf
inc
leave
xchg
movs
sub
imul
jle
fadd
das
sub
cmp
mov
xchg
and
xchg
and
call
cmp
adc
xor
fstp
sbb
rol
shl
cmp
repz
in
out
mov
inc
or
jbe
out
pop
ret
fcomp
stc
ja
iret
cdq
and
xor
mov
mov
outs
lea
or
leave
pop
dec
jbe
cmp
push
cmps
ja
mov
mov
mov
pop
test
out
dec
add
test
rcr
xor
sbb
in
fcmovnb
lahf
jno
mov
(bad)
or
movs
in
sub
fstp
loop
fdivr
push
(bad)
and
stos
cmovge
and
lahf
dec
xchg
lock
movs
inc
add
jmp
mov
es
xor
sbb
cmc
js
cmp
sbb
jg
dec
sub
push
fwait
lods
inc
hlt
mov
xor
lods
lock
out
sub
xchg
jnp
das
sbb
enter
lock
in
in
or
mov
jp
jb
sti
cmp
outs
rsqrtps
mov
push
mov
mov
cmps
push
xor
dec
add
cmovnp
fwait
lds
or
xchg
pop
sub
push
jl
stc
cli
in
sbb
add
cld
jae
popa
gs
adc
mov
out
cmp
xchg
in
jle
shl
(bad)
in
fstp
stc
mov
(bad)
mov
jmp
sub
lods
cmp
imul
or
(bad)
gs
lds
bound
pop
sub
rcl
pop
cwde
mov
add
clc
cmp
push
or
sub
repnz
std
jge
dec
popa
mov
mov
inc
push
and
sub
mov
inc
stos
mov
pop
mov
imul
sbb
xchg
jge
cli
movs
pop
in
sub
jne
push
pop
setne
lds
fistp
out
inc
or
fisub
dec
and
sub
lea
jmp
xlat
inc
dec
sbb
lods
sub
(bad)
(bad)
lods
fs
or
push
pop
sub
inc
dec
inc
les
les
mov
jae
pop
xchg
jmp
xchg
xchg
ds
fwait
jo
jg
aas
cmps
lock
fcom
aas
xchg
inc
adc
jge
(bad)
inc
add
push
bound
xchg
sub
pop
jno
les
xor
mov
in
mov
cdq
pop
loope
add
aaa
xchg
dec
test
adc
push
adc
jp
pop
aad
push
(bad)
jno
sub
mov
aas
lods
call
mov
lahf
(bad)
mov
mov
fdiv
shl
jle
jl
adc
call
popf
repnz
sar
jle
fldcw
inc
xlat
adc
loopne
ins
inc
outs
jle
loopne
xchg
and
(bad)
jl
inc
stos
sar
xor
js
in
jmp
pop
mov
pop
or
leave
pop
call
mov
pusha
adc
clc
sbb
jo
xchg
mov
call
sub
mov
mov
rcl
add
outs
ins
cmp
daa
fcomp
clc
rol
inc
push
fs
sbb
add
sbb
int3
or
pop
hlt
ss
iret
dec
in
push
mov
sbb
push
pop
and
inc
dec
mov
lock
and
jo
mov
jle
ret
aam
test
retf
clc
pop
sbb
shl
adc
mov
lods
and
or
pop
push
lock
aas
or
les
(bad)
out
push
mov
fist
or
sti
retf
dec
addr16
out
dec
fadd
xor
mov
outs
fcom
fwait
test
cmc
and
sar
out
xlat
xchg
ret
ret
inc
imul
loopne
fisub
xchg
push
pop
xor
push
mov
pusha
and
add
in
into
jg
lock
enter
sbb
gs
setno
jg
sbb
inc
push
scas
mov
out
jo
(bad)
add
outs
jg
dec
dec
aaa
sub
nop
aad
jmp
bnd
push
push
(bad)
fnstsw
cmp
push
sbb
scas
or
push
scas
sbb
mov
jge
dec
cmc
adc
aas
ret
test
push
aaa
jl
jae
or
mov
mov
out
cmp
test
cmp
pop
cmps
mov
jo
sub
xchg
cmp
mov
jle
rcr
dec
movs
jne
mov
mov
(bad)
in
shld
cmp
data16
popa
mov
inc
shl
mov
inc
(bad)
ds
or
xchg
jle
mov
fnstenv
shl
mov
add
dec
inc
inc
mov
out
sbb
mov
imul
in
jecxz
int
mov
enter
ret
push
sbb
jg
pusha
jns
fwait
lahf
xchg
inc
leave
jb
jo
cli
sbb
dec
add
in
sbb
sub
repz
jb
jno
(bad)
xchg
jmp
leave
jmp
cmp
adc
and
imul
xchg
stos
adc
cmp
sub
pop
retf
fadd
jae
sub
inc
hlt
in
dec
pushf
icebp
push
adc
out
pop
lods
into
xlat
inc
lahf
js
aad
fild
jb
call
cmp
push
mov
outs
(bad)
sbb
adc
or
inc
cmp
int
dec
xchg
push
stc
xchg
mov
xlat
ja
xchg
ficomp
cmp
out
mov
push
add
enter
xlat
jle
stc
mov
jnp
cld
fidivr
pushf
and
sbb
fnstenv
mov
and
cmp
pop
sbb
cld
lock
shr
clc
cmp
xor
xlat
test
outs
mov
adc
cmp
fs
in
leave
mov
imul
lea
(bad)
push
mov
adc
cmps
scas
enter
xchg
push
jbe
int3
lock
mov
push
lods
sbb
fucomi
mov
mov
jae
call
popa
in
xchg
cmc
test
repnz
bound
jmp
mov
and
xchg
sub
mov
push
fld
into
inc
or
mov
loope
jmp
lds
and
in
fdivr
je
les
fwait
sahf
iret
cmps
mov
not
mov
jl
fild
push
inc
scas
loop
lea
aam
fist
dec
or
mov
push
popa
mov
ret
nop
push
mov
jno
push
dec
mov
lahf
(bad)
pop
loopne
mov
dec
jns
pop
dec
repz
jle
inc
dec
adc
arpl
dec
cmc
aaa
pop
leave
sub
cmp
mov
sbb
sub
sub
jae
outs
jne
into
add
(bad)
test
fwait
xchg
sbb
arpl
data16
adc
(bad)
push
outs
shl
fldenv
or
movs
fwait
rep
or
xlat
or
mov
sbb
mov
push
call
retf
lods
cmps
fisub
stos
xchg
mov
leave
inc
push
movs
in
cmp
or
pop
shl
adc
xchg
out
scas
rcr
cld
pop
out
fimul
retf
fs
scas
inc
loopne
fidiv
xlat
dec
cld
dec
jg
sub
or
inc
mov
(bad)
lods
mov
cdq
mov
cmc
sar
hlt
cmc
cmp
xchg
inc
xchg
pop
int3
xchg
(bad)
mov
or
imul
test
outs
js
mov
call
cld
nop
or
and
jo
psubsb
jbe
shr
stc
out
mov
xchg
mov
popa
fdivr
loop
pop
adc
push
fldenv
sbb
dec
jno
mov
cli
xchg
jge
xor
int
lea
jl
fisttp
jg
(bad)
or
int
scas
pop
cmps
sahf
push
std
mov
cwde
xchg
push
push
pop
xlat
fld
dec
jns
xchg
jecxz
out
xor
pop
jp
push
cdq
mov
js
sbb
jecxz
cmp
into
xchg
out
mov
fwait
mov
sbb
call
jecxz
sbb
or
mov
sub
stc
call
jmp
push
adc
cmp
ret
jp
int
push
pop
or
or
sbb
sbb
movs
sahf
fidiv
test
int3
fisttp
inc
pushf
and
out
fimul
(bad)
iret
stc
(bad)
sbb
aas
fdivr
add
push
add
cmp
pop
scas
push
add
ficomp
adc
cmps
jmp
jl
outs
fst
outs
clc
pop
cli
movs
mov
xchg
xchg
test
nop
(bad)
call
dec
jp
mov
in
imul
jno
adc
sbb
mov
pop
stc
loop
lahf
test
out
cld
stos
rcl
scas
inc
imul
mov
cmp
push
out
mov
xor
gs
nop
xchg
cmp
jo
xchg
sub
movs
sar
mov
aam
push
pop
call
cmc
inc
mov
cmp
stos
jg
adc
(bad)
repz
retf
loopne
(bad)
dec
test
mov
fcmovu
dec
cmc
xchg
push
push
int
dec
sub
inc
dec
sub
xchg
ins
arpl
in
and
pop
push
imul
pop
mov
sbb
xor
push
jge
fwait
xchg
jecxz
mov
cmp
nop
mov
aas
mov
jne
sti
push
mov
pslld
mov
loop
js
dec
loop
or
aad
mov
mov
xchg
(bad)
in
xor
pushf
clc
xchg
repz
xchg
adc
cmp
ret
shr
sbb
jno
data16
dec
fidiv
push
retf
xor
push
outs
mov
repnz
aas
in
pop
push
jl
jb
iret
arpl
call
mov
sub
mov
lahf
xchg
push
mov
fidivr
ret
cmp
outs
add
inc
jno
test
mov
sub
push
test
enter
mov
and
adc
jmp
cmps
mov
test
add
xor
aad
jmp
and
jnp
and
jp
jmp
loop
ins
in
call
test
sbb
push
popf
mov
rcl
call
jmp
call
sbb
mov
int3
mov
lea
scas
xchg
sbb
pushf
xor
aas
mov
push
pop
xor
ins
mov
movs
fbstp
mov
inc
jecxz
adc
sbb
xchg
js
pusha
mov
sub
sbb
jnp
jle
mov
mov
jae
mov
xchg
sahf
mov
push
ret
adc
push
mov
inc
ins
push
push
(bad)
sbb
addr16
pop
shl
and
push
mov
(bad)
push
mov
aad
movs
(bad)
ja
leave
mov
mov
scas
xor
out
ins
jb
sbb
shl
lods
xor
arpl
ret
shr
jle
sub
rcl
repnz
mov
mul
jle
aad
sub
in
mov
sbb
mov
mov
or
pop
mov
mov
std
inc
sub
aad
xlat
sahf
sbb
adc
xchg
nop
xchg
mov
xlat
iret
test
mov
(bad)
push
aad
mov
sbb
sbb
xchg
int
shl
pop
dec
or
push
push
xor
sub
or
or
sub
in
or
xchg
lods
jmp
bound
mov
inc
push
mov
jnp
inc
cmp
out
mov
jp
pop
pop
ds
cli
xchg
or
les
lahf
xor
mov
mov
test
mov
adc
out
sbb
sti
mov
test
in
adc
mov
scas
sahf
mov
jmp
adc
cmp
mov
xchg
es
not
or
icebp
dec
ret
fidivr
loop
ror
jns
ficomp
leave
mov
or
mov
mov
xor
mov
or
stos
push
out
in
jge
sbb
push
jmp
mov
je
jl
cmp
sub
sub
dec
inc
xor
and
icebp
imul
scas
adc
cmp
cmp
push
fisttp
call
inc
cmp
arpl
mov
aam
fmul
mov
sub
retf
ret
inc
pusha
add
sub
and
sti
punpcklwd
dec
(bad)
outs
cld
cmp
imul
jge
dec
pop
bound
fild
bound
push
sub
lahf
jnp
jle
mov
inc
xlat
sbb
jge
sbb
in
inc
jns
test
xlat
xor
xchg
fsub
xor
mov
push
cmc
mov
sub
mov
xor
movs
push
xor
xor
jmp
test
(bad)
xchg
ins
imul
jnp
push
popf
lahf
sub
gs
xchg
xchg
xchg
std
cmc
dec
out
rcl
imul
call
aad
aas
idiv
mov
adc
sub
pop
test
fst
(bad)
lea
int
fcom
add
xchg
xchg
xor
xchg
aas
mov
out
add
test
jmp
xor
push
jnp
pop
retf
stc
xor
faddp
int3
mov
bound
cmp
inc
ja
aam
fmulp
mov
inc
inc
jecxz
dec
mov
sub
cmp
(bad)
xchg
aad
and
stos
xchg
js
lock
arpl
and
int
lock
mov
out
rcl
clc
cmp
adc
gs
jmp
mov
xor
xchg
leave
bound
inc
dec
ja
mov
mov
inc
xor
jns
jp
scas
cmp
dec
dec
adc
fcmovbe
mov
fnstcw
shl
push
or
xor
xlat
add
sbb
sbb
call
ss
inc
das
(bad)
call
and
in
adc
cs
sbb
imul
call
sub
mov
add
xchg
xchg
xchg
fucom
lahf
enter
pop
inc
pop
ror
cs
jp
ins
rol
adc
fild
das
and
cmp
ja
iret
or
xor
mov
imul
dec
neg
adc
cld
mov
push
sub
in
xor
popf
into
mov
sbb
in
jge
inc
jmp
stos
push
xlat
add
cmp
and
(bad)
adc
clc
dec
sub
jae
sbb
pop
cdq
sti
jle
inc
add
std
add
add
or
and
cdq
mov
mov
and
push
cs
jmp
sub
push
icebp
stc
lock
pop
repz
pusha
sbb
xor
mov
loope
sbb
pop
imul
js
aaa
pop
xchg
(bad)
arpl
sbb
lods
mov
outs
(bad)
int
mov
(bad)
in
jb
into
scas
push
imul
icebp
repz
push
arpl
test
in
dec
push
mov
pusha
in
xchg
ins
adc
nop
push
push
mov
inc
jbe
addr16
movs
ins
xor
jmp
lods
shl
add
mov
pushf
data16
dec
adc
out
pop
sub
dec
pop
ret
scas
mov
fldcw
jmp
fdivr
add
mov
jecxz
xchg
adc
jo
mov
sub
stos
push
adc
lods
mov
fcomp
enter
add
mov
sub
or
fsubr
loope
outs
mov
adc
rcl
xchg
cwde
ins
push
aad
dec
clc
sahf
repz
add
and
xchg
outs
arpl
jnp
jmp
lods
dec
cmp
xchg
jl
cmp
jmp
dec
aaa
sub
aaa
clc
jle
push
fabs
imul
dec
out
or
push
mov
stos
fild
add
jge
mov
inc
pop
mov
mov
out
lock
mov
xlat
cmp
rcr
and
push
jno
sub
jle
push
fwait
mov
push
mov
dec
loopne
xor
mov
mov
cmp
std
popf
ror
jp
mov
cmp
push
ja
and
stc
ja
das
adc
aaa
mov
adc
mov
jle
sbb
das
dec
imul
mov
dec
push
mov
cmp
sub
xchg
xchg
pop
pop
mov
jnp
adc
stc
out
lock
hlt
ins
js
es
pop
addr16
jp
test
in
pop
push
in
pop
xchg
mov
sub
xor
push
mov
cmp
das
into
sub
jnp
and
or
pop
clc
and
cmp
mov
out
fild
enterw
jmp
mov
adc
mov
test
xchg
mov
(bad)
adc
imul
mov
lahf
mov
jo
dec
inc
jg
in
aaa
push
shr
call
push
push
adc
daa
fdivr
lds
mov
pop
sahf
mov
sbb
add
retf
mov
pop
mov
or
and
ret
inc
je
jnp
dec
dec
(bad)
out
and
jmp
add
arpl
ret
inc
add
hlt
and
cmps
add
test
adc
mov
adc
shr
xchg
call
arpl
repz
sbb
ja
mov
xchg
mov
imul
aam
int3
mov
outs
loopne
sbb
fldcw
and
in
mov
retf
mov
and
sti
std
je
movs
popa
or
pop
stc
fist
movs
sbb
pushf
cld
test
inc
movs
bound
push
rcl
stc
test
ja
push
(bad)
sbb
ins
sbb
pushf
loopne
adc
in
adc
(bad)
fisttp
popf
push
js
adc
cld
mov
pop
jmp
inc
lds
push
inc
ror
ror
lods
mov
das
mov
dec
psubq
sub
stc
xchg
adc
adc
not
je
sub
in
mov
xor
or
jne
daa
sahf
cld
cmc
mov
mov
xchg
inc
adc
ret
cmp
jns
stc
mov
rcr
imul
lods
lahf
pop
sub
push
cmp
jo
and
fs
clc
xchg
push
mov
stc
xor
stos
inc
loope
cld
jo
ror
iret
cmp
xor
js
arpl
sub
xor
pop
cdq
(bad)
nop
dec
lahf
xor
cmp
mov
cmps
lea
pop
mov
xchg
ins
retf
xchg
call
loopne
push
cmps
xor
out
sub
push
mov
mov
pop
mov
xor
adc
pop
jb
shl
jle
jle
jo
(bad)
sub
aad
fistp
outs
cmp
cmc
int3
call
(bad)
inc
ja
sub
(bad)
lods
movs
faddp
fst
ins
out
jne
icebp
jae
aas
fadd
lods
rol
jns
adc
fist
xor
icebp
lea
(bad)
sbb
adc
sbb
cli
rcr
fild
je
mov
fistp
in
jae
dec
(bad)
cmps
inc
hlt
mov
(bad)
outs
pop
loopne
clc
std
div
dec
adc
mov
in
int
cmp
(bad)
repz
and
pop
cdq
dec
fwait
mov
idiv
bound
nop
cmp
sbb
dec
and
(bad)
xor
cmps
sbb
popa
test
and
and
push
jmp
aad
and
mov
sub
push
dec
popf
pop
nop
cmp
ds
pop
push
fwait
lods
mov
out
push
inc
ins
adc
mov
jge
mov
adc
in
cwde
mov
cmp
je
mov
bound
and
fisub
mov
adc
imul
xor
push
(bad)
adc
mov
daa
mov
aad
aam
adc
int
aas
in
sub
test
aaa
xchg
dec
adc
pop
icebp
jno
adc
bound
dec
sub
jbe
sub
ins
jmp
loopne
lods
sub
pop
dec
jbe
jle
jne
xchg
mov
add
and
add
in
jmp
or
popf
and
sahf
pop
mov
add
push
(bad)
lods
adc
jbe
dec
and
dec
fstp
enter
cmp
clc
adc
lock
sbb
je
(bad)
and
jl
stc
mov
lea
jnp
pop
out
and
test
pop
inc
ss
test
mov
cmp
call
pushf
ds
popf
push
push
mov
fdiv
dec
enter
(bad)
gs
sub
mov
sub
pop
cmp
fisubr
lods
cs
stc
mov
pop
ins
jns
push
inc
(bad)
imul
or
xchg
fsubr
xchg
pop
xchg
sbb
outs
fadd
scas
push
pop
(bad)
ficomp
xchg
push
pop
shr
lods
xchg
loopne
and
pop
and
hlt
pop
jp
xchg
mov
retf
popa
dec
xchg
fstp
outs
inc
outs
in
mov
adc
(bad)
mov
pop
int3
inc
repnz
into
mov
retf
movs
mov
add
lea
push
xchg
movs
xor
(bad)
(bad)
dec
cmp
or
out
xchg
js
out
dec
out
xor
xchg
shl
jl
les
sbb
in
mul
push
in
daa
push
jmp
xchg
fs
ds
or
mov
adc
jg
shr
pop
pop
imul
adc
sbb
call
push
xor
mov
fsubr
xchg
sub
js
cmp
jb
test
std
xchg
cmp
or
stos
stos
pushf
inc
mov
not
push
dec
mov
dec
ds
xor
fdivr
jns
jmp
jno
mov
sbb
mov
or
int3
xor
jmp
(bad)
ficomp
push
inc
outs
movs
adc
gs
pop
inc
sar
inc
test
inc
pop
sbb
dec
jmp
cmp
add
pop
stc
sbb
aad
clc
sbb
cli
mov
xor
das
cmp
cs
fisub
iret
xchg
call
out
cmc
stos
adc
not
out
sub
outs
(bad)
popf
sub
ficomp
inc
popa
pop
fild
ins
mov
imul
mov
sbb
inc
in
mov
jmp
or
jns
cmps
pop
sub
mov
jle
push
mov
movs
mov
sub
mov
stos
fwait
out
mov
xchg
xor
pushf
les
stos
sbb
adc
jecxz
add
(bad)
xor
jge
aas
cli
ret
mov
xor
fiadd
sti
pop
jle
neg
rcr
jae
call
fdiv
in
mov
sub
or
sti
mov
(bad)
sub
pop
adc
mov
sbb
gs
jg
mov
ficomp
jo
add
out
arpl
pop
bound
inc
push
mov
(bad)
mov
cs
in
pop
test
mov
mov
sub
test
xor
dec
aaa
test
add
mov
fcomp
popa
shr
lock
out
std
or
pop
push
fdivr
retf
rcr
scas
mov
sahf
pop
cmc
and
aam
xor
push
leave
push
dec
xchg
(bad)
iret
jbe
pop
pop
jmp
sub
test
sub
or
repnz
sbb
mov
xchg
push
stc
lea
test
(bad)
mov
jmp
lods
imul
arpl
bound
dec
iret
and
jge
jg
fidivr
lds
loop
repz
add
push
push
enter
cld
xor
adc
fidiv
mov
jae
xor
mov
lahf
pop
jns
sbb
je
sbb
inc
into
pop
adc
mov
std
sar
mov
rcr
or
test
(bad)
sub
cmp
mov
sbb
lahf
xlat
xchg
mov
cmp
arpl
dec
test
test
mov
rcr
cmp
xchg
idiv
and
test
jo
fcom
neg
jbe
imul
jae
outs
leave
sbb
mov
loop
adc
ret
in
push
shl
dec
jmp
dec
xchg
(bad)
cld
leave
mov
push
icebp
mov
mov
cmc
jp
sbb
jg
shr
imul
stos
(bad)
popf
sub
xchg
push
in
mov
mov
lods
popa
jle
ds
rol
jmp
ja
aas
stc
call
mov
add
lea
cmp
mov
aad
add
sbb
inc
and
xchg
scas
lods
mov
sahf
popa
stc
cwde
sbb
std
dec
mov
ins
or
(bad)
dec
in
ds
push
dec
adc
fistp
mov
repnz
push
jbe
repnz
pop
es
pop
mov
pop
xor
fwait
jp
push
or
pusha
test
jl
sub
sbb
fisubr
jns
sbb
ins
lds
dec
out
aad
dec
sti
xchg
xor
push
add
clc
out
js
test
lea
(bad)
aad
mov
data16
inc
push
fstp
jno
sti
mov
cmps
add
cld
mov
pop
pusha
push
rol
iret
mov
out
dec
aaa
xor
and
cwde
ret
int3
push
(bad)
movs
xchg
nop
or
movs
arpl
retf
push
outs
or
xlat
(bad)
fwait
mov
lea
dec
jmp
dec
cmp
pop
mov
cmc
std
cmc
daa
arpl
cmp
daa
cmc
shl
dec
lahf
jl
adc
aaa
ficom
adc
(bad)
aad
loopne
mov
jmp
jbe
sbb
in
xor
daa
jbe
je
and
add
pop
add
sar
xor
sub
in
arpl
sbb
dec
mov
jnp
ins
fadd
out
pop
nop
mov
inc
sbb
mov
mov
std
cmc
retf
jne
jecxz
push
jle
sub
xchg
push
mov
inc
jle
int
jge
repz
mov
cmp
jae
or
xlat
add
call
cs
lahf
jns
ficomp
push
out
shl
cmps
jno
mov
out
mov
mov
fadd
mov
mov
fld
fmulp
dec
jecxz
sub
or
xor
mov
push
std
or
jmp
mov
mov
inc
fneni(8087
push
gs
sub
call
repz
jbe
stos
movsx
(bad)
cwde
lods
add
imul
jmp
push
out
adc
push
or
or
xchg
mov
sbb
aad
call
daa
scas
cmc
shl
xor
repz
jg
and
bound
mov
jge
sbb
iret
pop
ss
loop
xchg
jg
test
(bad)
inc
cmp
xor
mov
jnp
or
cmps
mov
cld
push
scas
ins
dec
jo
add
std
scas
mov
push
xlat
movs
arpl
aad
sub
pop
mov
test
inc
xchg
inc
(bad)
scas
outs
addr16
sub
mov
sub
int
pop
mov
and
jne
or
sbb
into
push
shl
sbb
jl
nop
mov
mov
push
aas
jecxz
sbb
cmc
jge
(bad)
dec
cmp
push
mov
cmp
ficomp
fimul
sbb
loop
(bad)
movs
xchg
in
push
ins
stos
daa
mov
popa
and
ret
adc
cmp
jle
dec
pop
jns
lea
dec
inc
sub
mov
das
(bad)
and
call
ins
sti
lods
mov
mov
repz
pop
jecxz
outs
lods
mov
(bad)
mov
clc
shl
inc
ret
add
push
dec
pop
and
sub
pop
or
ja
ror
ja
sahf
push
loope
repnz
scas
das
pop
sbb
mov
push
mov
push
and
pusha
retf
mov
pop
test
adc
pop
out
clc
lock
cli
jge
cmp
inc
aad
(bad)
cmp
pusha
pop
pushf
mov
cli
bound
jl
in
(bad)
mov
sti
scas
or
sub
in
das
or
inc
mov
inc
daa
cs
in
sti
dec
xchg
or
mov
dec
cdq
iret
mov
adc
test
ror
shr
rol
dec
pop
call
mov
and
gs
aas
ja
xchg
cmp
fs
test
(bad)
imul
fs
mov
sbb
lods
mov
(bad)
mov
mov
and
imul
mov
xlat
test
das
hlt
repz
shl
scas
dec
(bad)
shr
sbb
mov
cdq
loop
das
jge
in
clc
push
add
xor
ins
iret
fcmovnb
adc
les
sbb
es
push
xor
xor
(bad)
xor
dec
sub
dec
std
out
mov
in
sub
in
sub
adc
cmp
mov
cwde
push
int
mov
movs
imul
mov
gs
jb
add
adc
inc
fidiv
pushf
mov
jbe
jns
dec
jbe
mov
fstp
mov
mov
sbb
pushf
xor
dec
cmp
aad
mov
aam
jo
cld
and
xor
mov
inc
add
ret
sar
xlat
outs
inc
jp
popf
dec
dec
mov
sbb
adc
idiv
fnstenv
sub
inc
cmps
pop
in
scas
in
(bad)
mov
sub
or
push
xlat
leave
adc
int3
repz
xchg
adc
out
mov
sub
mov
out
aam
cmps
add
ja
gs
shl
xchg
jl
call
(bad)
ja
std
shl
and
ret
mov
leave
jmp
(bad)
ja
xchg
and
xchg
(bad)
repz
ins
(bad)
ins
clc
xor
pushf
and
add
dec
daa
dec
ja
sub
mov
popf
mov
stos
(bad)
adc
xlat
fimul
aas
jle
bound
mov
imul
push
pusha
pop
test
and
dec
or
xchg
lds
mov
cmp
fisttp
or
adc
and
mov
mov
jg
adc
repnz
fwait
fwait
call
mov
dec
mov
cmps
add
popa
xchg
sbb
push
js
repnz
retf
cmp
ins
add
hlt
cli
aam
in
ror
stc
call
and
sub
mov
out
mov
jae
sbb
mov
jb
jmp
fwait
mov
mov
in
popa
or
inc
add
sbb
and
pop
mov
fnstcw
daa
repz
and
shl
not
mov
cmp
mov
push
sub
scas
ds
push
nop
mov
cs
jmp
popa
cdq
push
aam
scas
mov
dec
aas
jbe
out
sbb
or
fwait
test
fild
test
cdq
mov
mov
loopne
test
jl
sti
inc
jmp
scas
mov
jp
push
cwde
inc
and
fsubr
mov
add
sub
idiv
lds
rol
(bad)
pop
lods
pop
lock
(bad)
jp
mov
add
or
dec
ret
jle
test
div
push
add
adc
lea
popa
xchg
add
xchg
and
xor
cdq
cmps
shl
imul
mov
shl
in
out
mov
xchg
outs
aas
push
add
retf
push
jp
into
jmp
pop
sbb
push
mov
aam
(bad)
xor
shl
sbb
dec
adc
sub
add
sbb
data16
repz
clc
pop
sub
aas
xchg
movs
add
pop
imul
sub
and
retf
test
fwait
mov
dec
xor
test
xchg
xchg
fisubr
mov
int3
out
addr16
xor
sbb
loop
cmp
movs
into
(bad)
mov
dec
inc
call
out
sahf
pop
scas
(bad)
jmp
(bad)
cli
mov
fcom
cmps
stos
int3
inc
pop
cwde
neg
push
add
push
in
(bad)
sub
xlat
sbb
retf
sub
sub
jo
or
rol
xchg
aas
pop
xor
test
(bad)
imul
sbb
jnp
add
es
adc
sub
xchg
fsubr
in
lock
push
cmp
dec
add
sbb
xor
xchg
mov
mov
mov
ss
fcomp
fdivr
cmp
xchg
mov
inc
mov
lods
jecxz
or
jl
xchg
add
add
clc
add
jl
test
xchg
mov
fwait
call
sbb
test
gs
xchg
sbb
scas
ret
mov
cmp
repz
cmp
push
scas
ins
in
cmp
cmp
pop
test
in
ss
xchg
xchg
out
dec
(bad)
movnti
push
jnp
icebp
inc
leave
pushf
cli
jmp
retf
dec
mov
push
sub
cmc
push
dec
stos
sbb
stos
movs
mov
sahf
lods
add
pop
dec
aaa
test
mov
data16
dec
call
adc
xor
sbb
je
pop
dec
dec
js
pop
aas
les
ins
add
aad
push
cmp
sub
cmp
mov
dec
fbstp
sub
sahf
xchg
out
mov
xlat
push
add
into
cmp
scas
outs
out
push
and
pop
test
dec
sub
shl
ret
sub
loop
xor
iret
loopne
push
push
push
out
outs
inc
stos
mov
pop
adc
push
idiv
aam
in
cmp
or
pushf
pop
ror
add
mov
inc
xor
sub
lds
hlt
add
mov
loopne
out
mul
adc
(bad)
out
dec
and
xchg
inc
test
mov
pop
dec
int3
fisub
adc
loopne
sbb
nop
(bad)
mov
sbb
outs
xor
aaa
les
lock
sub
ficom
cli
aam
pop
in
std
cmps
sub
stc
mov
aas
inc
stos
std
sub
jmp
sahf
or
inc
lea
aaa
ror
call
in
xor
cmps
inc
shl
bound
(bad)
scas
push
jl
cmp
sbb
call
push
leave
sub
rol
out
mov
adc
shr
jbe
mov
adc
sbb
jno
push
push
(bad)
and
jne
mov
jp
jbe
cmp
adc
xor
add
or
mov
xor
dec
dec
jle
push
push
out
add
cli
pusha
cld
mov
pop
fcom
test
ja
ja
rcl
(bad)
mov
daa
(bad)
adc
jge
pop
bound
hlt
mov
inc
jns
pop
stos
jno
cmp
xchg
jbe
ins
std
mov
frndint
cmp
out
mov
jno
iret
push
test
inc
push
pop
(bad)
ret
stos
shl
pop
pop
cmps
push
iret
jb
das
inc
arpl
or
aas
or
jo
pop
pop
scas
imul
test
dec
call
adc
mov
xlat
inc
sar
sti
mov
push
mov
adc
repnz
or
imul
std
out
mov
dec
shr
mov
leave
mov
(bad)
xor
imul
jnp
(bad)
xlat
dec
sub
fisttp
jecxz
adc
test
ret
addr16
sbb
call
movs
push
or
dec
cmp
das
cmp
push
adc
ins
mov
mov
mov
addr16
inc
pop
out
xor
mov
add
das
test
aaa
inc
outs
ja
je
cmp
push
sbb
fwait
mov
pop
sub
dec
jg
add
les
outs
jmp
mov
imul
adc
jmp
jp
aam
xor
pop
ror
fild
mov
js
pop
jmp
adc
stc
push
test
test
outs
cmp
cmp
and
adc
mov
inc
sbb
iret
xlat
(bad)
xchg
jmp
repnz
sub
mov
fld
mov
xchg
pushf
pushf
loop
rcr
sti
into
cli
inc
sub
rcr
call
les
adc
xchg
xor
inc
fdiv
mov
fild
jmp
xor
jmp
lea
(bad)
fs
jnp
cdq
or
xchg
test
and
add
cmp
sub
cld
push
gs
jmp
call
jmp
loope
inc
cmps
adc
and
xor
mov
add
fidivr
int
cmps
int
add
jle
jnp
and
dec
imul
add
std
jnp
jle
cmps
jmp
icebp
pop
call
cwde
ficomp
leave
pop
je
arpl
mov
lahf
enter
in
jl
add
sub
ins
out
inc
loopne
ja
fwait
dec
sbb
cmps
loopne
inc
mov
mov
jp
je
mov
clc
xchg
dec
mov
xchg
test
inc
mov
imul
shr
mov
shl
daa
and
mov
out
call
fld
fwait
xor
xor
test
shl
addr16
ror
inc
outs
sbb
mov
in
sub
fisubr
cld
add
clc
or
xchg
ret
mov
jmp
mov
or
leave
mov
pop
pusha
add
int
push
ss
pop
dec
sti
add
shl
outs
repz
cmp
ja
aam
gs
add
mov
arpl
test
pop
pop
jge
in
aaa
push
pop
adc
xchg
mov
out
dec
pop
xor
pop
enter
sbb
adc
icebp
mov
js
xchg
xchg
aad
rcl
jno
dec
inc
loop
dec
movs
out
jno
push
ror
not
xor
mov
mov
push
cmp
cmp
adc
pop
loop
xchg
fist
aas
adc
les
out
stos
scas
arpl
mov
push
mov
out
push
inc
data16
fadd
mov
adc
mov
mov
aad
arpl
idiv
ss
dec
pop
xchg
stc
movs
ja
and
fdivr
cmps
push
push
pop
lods
mov
out
mov
xchg
cmc
repz
out
adc
lahf
inc
push
dec
jmp
pop
and
movs
and
push
cmc
dec
add
lea
shl
cwde
push
sbb
bound
xlat
ret
add
mov
dec
fstp
dec
dec
jecxz
xchg
jnp
adc
sbb
xchg
data16
paddsw
aas
push
mov
or
xor
popa
cdq
shr
out
xlat
pop
jmp
(bad)
sti
inc
sar
nop
mov
sbb
jmp
push
or
push
sbb
add
add
aam
fimul
inc
in
cmp
dec
mov
retf
push
ds
mov
mov
inc
xchg
pusha
and
fdivrp
(bad)
pop
add
mov
jno
xor
mov
bound
and
sbb
enter
jbe
movs
jg
iret
mov
daa
cmps
push
gs
cmc
shl
out
ds
hlt
dec
adc
mov
pop
iret
sub
mov
pop
mov
jle
shl
out
cwde
movs
sub
stos
inc
adc
iret
push
inc
push
and
push
in
add
jbe
mov
aam
or
ja
(bad)
sar
xchg
jno
outs
hlt
jg
fisubr
jnp
push
xchg
fisttp
mov
sub
repnz
rcr
fbld
push
icebp
inc
into
xchg
test
sbb
xor
cmp
jp
cs
cmp
pop
push
ror
or
scas
dec
aaa
xor
push
das
sti
sar
leave
es
ins
cmp
mov
pushf
jmp
dec
add
popa
es
xor
jno
inc
and
(bad)
cwde
icebp
test
push
mov
dec
xor
lods
cdq
test
xchg
sbb
pop
sbb
adc
ja
add
add
vmovntps
aaa
push
mov
test
movs
xchg
jns
shl
xor
mov
in
xor
mov
jecxz
jle
xor
les
test
sub
xor
inc
cmp
imul
pushf
daa
xchg
int3
xlat
pop
test
mov
call
popa
add
mov
ja
jbe
call
add
jb
arpl
test
arpl
mov
mov
cmp
push
cli
inc
bound
dec
sbb
push
push
jmp
xor
pop
aas
and
mov
lods
leave
jae
fiadd
int3
dec
das
repz
mov
adc
fldenv
sbb
and
cld
dec
cmp
dec
xor
xchg
mov
jl
xchg
mov
push
scas
xchg
xor
sbb
and
jbe
daa
ins
mov
mov
cmp
iret
movs
fwait
mov
(bad)
ret
xchg
mov
repnz
(bad)
cmp
repnz
pop
les
dec
popa
xor
jg
rcr
ss
mov
pop
pop
adc
pushf
and
dec
mov
jbe
xor
frstor
pop
pushf
addr16
sub
and
gs
sub
xor
aam
dec
add
clc
mov
push
cmp
inc
clc
inc
jle
sbb
clc
add
(bad)
cmp
jg
rol
in
js
cld
mov
hlt
push
dec
test
mov
(bad)
cdq
fstp
out
and
jno
and
dec
out
inc
xlat
jge
movs
shr
aas
ds
cwde
mov
adc
xchg
dec
movs
and
or
aam
adc
and
cli
xor
iret
pop
int3
xor
test
cmp
or
mov
dec
inc
pop
add
outs
add
and
and
cmp
xchg
jecxz
add
scas
loopne
jecxz
repnz
xchg
fadd
iret
cmp
(bad)
in
mov
pop
dec
ss
(bad)
std
dec
inc
sbb
mov
adc
pop
and
aam
movaps
(bad)
xchg
shl
ret
push
data16
xor
mov
pop
xchg
xor
add
pop
cli
sbb
push
in
xor
popf
jg
outs
loopne
call
aas
lods
mov
fnstsw
mov
fstp
adc
sar
xchg
fwait
dec
loope
aas
mov
jg
pop
aaa
jnp
xlat
fs
mov
push
into
ror
and
popa
push
push
imul
push
cwde
xor
jl
push
mov
std
clc
jnp
cli
mov
xor
dec
(bad)
cld
mov
or
xor
(bad)
jg
adc
add
enter
add
mov
push
popf
inc
or
push
dec
add
xor
push
lods
jge
sahf
(bad)
xchg
cli
stc
jl
pop
dec
jnp
xchg
(bad)
leave
sub
pop
call
lock
push
mov
cmp
data16
(bad)
dec
leave
adc
push
jb
pop
jl
sub
out
pop
pop
out
(bad)
clc
cwde
mov
cmp
inc
jmp
out
fsubr
ins
repz
sub
cmp
cdq
repnz
xchg
xchg
mov
popa
mov
lock
mov
clc
pop
jg
(bad)
out
stc
mov
cmp
xchg
cmps
mov
test
cld
pushf
dec
xchg
imul
jno
cmps
ja
ficom
jl
inc
push
sbb
and
popa
scas
cmp
stos
outs
fsub
dec
lods
xor
pop
mov
jmp
and
std
repz
out
jmp
movs
leave
add
xchg
(bad)
(bad)
rol
loop
(bad)
(bad)
stc
mov
xlat
adc
jmp
inc
mov
dec
sbb
xlat
das
add
sub
iret
push
pop
call
pusha
fcmovb
ins
(bad)
fs
in
mov
stc
out
ins
push
mov
xor
leave
pop
es
xchg
mov
mov
sub
jbe
pop
fidivr
add
mov
iret
scas
cmp
stc
test
add
mov
rol
xchg
xchg
mov
rol
ja
sti
mov
movs
iret
push
inc
xor
out
lock
rol
add
repnz
iret
sub
xor
sbb
pop
adc
icebp
fucomp
fst
clc
(bad)
sbb
sub
jmp
sbb
xor
push
mov
push
add
js
(bad)
mov
leave
stos
scas
pusha
mov
push
xchg
push
xchg
es
ds
loopne
clc
ins
icebp
push
or
cld
pop
(bad)
cmps
pmulhuw
pop
xor
ja
imul
pop
idiv
call
mov
cmp
cmp
mov
dec
ds
stc
out
stos
ja
xchg
outs
or
pop
jo
lahf
lods
cwde
loopne
sbb
mov
and
in
movs
pop
ins
add
mov
shl
sbb
stc
lahf
lods
pushf
cmps
and
mov
repnz
xor
int
pushf
jmp
xor
cmp
loop
pop
lds
sub
pop
mov
dec
mov
retf
push
and
inc
sub
or
rcl
ret
jmp
call
mov
push
jnp
aas
loop
rol
repz
shl
jecxz
jle
addr16
inc
cmp
fmul
adc
sbb
mov
cmp
repz
loope
jmp
cmp
mov
mov
and
jns
jge
gs
or
cld
mov
rcl
dec
dec
sbb
sub
nop
mov
xchg
mov
push
in
les
jmp
std
stc
outs
jp
in
popa
push
mov
add
outs
pushf
mov
jmp
jmp
sbb
xlat
in
fdivr
push
in
repnz
sahf
push
mov
mov
enter
mov
jae
stc
pop
pop
jl
test
xchg
test
fild
dec
adc
gs
inc
lds
(bad)
lahf
iret
xor
jb
stos
and
mov
mov
pop
sti
mov
adc
cld
aaa
or
mov
pop
dec
in
cmc
out
pop
cmps
jmp
mov
or
mov
in
(bad)
stos
inc
mov
cmp
adc
shr
in
aam
pop
test
in
push
push
mov
in
bnd
mov
mov
es
and
cli
ret
dec
push
sbb
(bad)
cmp
jl
into
les
pop
es
cmp
aaa
mov
rol
mov
int3
cli
js
cmp
xor
or
out
in
nop
mov
call
es
adc
(bad)
mov
jl
cmp
nop
movs
icebp
add
dec
pop
loope
loope
gs
popa
jp
retf
jb
retf
std
or
adc
inc
les
mov
in
push
xchg
push
adc
inc
cmp
add
and
mov
lahf
cmp
mov
jno
mov
jmp
pop
(bad)
inc
sub
stos
into
jmp
fld
jb
push
int3
inc
mov
ss
dec
add
push
mov
push
mov
test
(bad)
es
gs
mov
pop
mov
dec
xchg
pop
dec
add
out
repnz
xor
mov
lss
mov
sub
adc
xchg
jns
mov
xor
aad
jns
loop
popf
inc
daa
into
cmc
push
scas
rcr
or
xor
shl
call
gs
pop
push
sbb
inc
pop
or
daa
lods
ja
iret
pop
jnp
cmp
mov
and
add
jmp
xlat
or
xor
sub
rol
or
out
inc
loopne
sub
mov
movs
out
int
sbb
xchg
scas
mov
aaa
outs
fwait
or
mov
mov
push
js
sbb
test
xor
test
and
xor
dec
push
aas
xchg
mov
ror
dec
test
push
cmp
call
retf
xchg
(bad)
int3
dec
inc
pop
ret
int3
popf
fldcw
cdq
lods
les
push
mov
pop
push
call
mov
pop
adc
out
je
clc
outs
mov
lds
pop
xchg
mov
push
ja
loopne
daa
aam
(bad)
sti
xchg
in
sbb
std
pushf
cmp
adc
jno
or
xchg
lods
stos
stos
jmp
int
dec
xchg
and
xchg
or
mul
cmp
inc
add
aas
test
gs
sbb
sub
shr
sub
aas
inc
pop
out
xor
loopne
jmp
mov
out
enter
mov
fadd
cli
mov
clc
aam
cwde
pop
ret
pop
cmp
movs
aaa
leave
pop
xchg
imul
stc
repnz
outs
jge
aas
pushf
pushf
icebp
inc
loopne
push
mov
test
cli
or
adc
xor
pushf
mov
add
loope
cwde
ins
ins
(bad)
xchg
dec
cmc
inc
jl
nop
xchg
or
and
xchg
pop
dec
clc
xlat
repz
adc
pop
push
imul
call
inc
xlat
push
cmp
out
pop
xchg
in
in
adc
cmp
popf
cmp
cld
mov
(bad)
lock
retf
stos
mov
dec
nop
mov
fwait
xor
in
jp
adc
sub
jecxz
or
push
idiv
out
mov
shl
repz
jb
and
sub
je
or
pop
mov
xchg
jae
mov
push
in
ja
movs
ret
adc
nop
ss
add
sub
ds
push
push
aam
jno
scas
mov
xchg
jmp
cdq
cmc
push
das
xchg
sahf
mov
mov
pop
fcomp
inc
imul
pop
jecxz
iret
xchg
aaa
aaa
jmp
jbe
or
or
mov
loop
pop
mov
vpackuswb
mov
push
jb
inc
cmc
shl
nop
add
adc
pop
push
inc
out
outs
xor
mov
addr16
mov
loopne
mov
cmp
sub
and
fst
or
test
mov
aas
push
or
inc
or
popf
lods
xor
pop
scas
test
ja
jmp
mov
pop
pop
or
adc
lock
cmp
shr
cwde
jmp
fwait
push
mov
(bad)
lds
in
mov
pop
push
inc
push
xchg
retf
mov
jmp
fmul
ins
adc
ror
in
jae
test
jl
mov
ret
jge
dec
jbe
sub
dec
int3
call
(bad)
es
dec
sub
jbe
pop
test
dec
jnp
aaa
scas
cs
stc
repnz
scas
or
dec
xchg
shl
popa
aam
loopne
jns
jbe
sahf
jns
inc
jecxz
ficom
dec
fisub
and
push
dec
out
test
mov
push
in
nop
test
jp
pop
ss
and
lds
(bad)
enter
bound
jle
aaa
push
dec
xchg
mov
add
jb
pop
xchg
and
retf
mov
inc
lods
cmps
jo
hlt
(bad)
ins
sar
(bad)
mov
sub
in
ret
xchg
ins
jmp
dec
inc
xor
dec
test
aas
xchg
mov
fisttp
dec
mov
data16
inc
dec
cmps
ins
sub
aad
xchg
add
into
jge
enter
inc
stos
sti
push
xchg
mov
(bad)
in
int
push
fstp
and
cmp
cmp
aam
cld
ficomp
or
movs
fimul
xchg
loopne
hlt
int
sbb
dec
hlt
in
ja
ja
aam
test
dec
mov
ins
cld
imul
scas
cmp
inc
(bad)
popa
xchg
jge
or
fnstsw
mov
cli
mov
mov
sbb
add
popa
(bad)
and
mov
fisub
sti
or
mov
xor
neg
dec
inc
ret
mov
nop
or
and
sbb
push
mov
adc
pop
sub
mov
les
cmp
scas
mov
adc
sbb
popa
ins
js
mov
neg
cli
mov
adc
mov
mov
shr
shl
ins
pop
test
sub
hlt
into
jb
mov
outs
cmp
jnp
pusha
pushf
test
or
jo
and
cmp
ret
in
cs
xchg
std
push
jmp
pop
stc
xchg
dec
jmp
(bad)
mov
mov
mov
ins
daa
mov
fs
in
sbb
jns
mov
push
jle
mov
in
stos
into
jl
stc
fcomp
or
and
mov
xchg
push
sbb
adc
push
xchg
stos
jecxz
lods
icebp
xlat
lds
xor
adc
dec
adc
lods
lahf
jae
imul
(bad)
out
push
jmp
inc
pop
lds
cmp
xchg
lods
push
scas
idiv
xchg
outs
lea
ins
pop
push
sti
dec
dec
add
ins
addr16
dec
out
push
popf
sub
mov
xor
leave
inc
movs
jne
jmp
das
inc
mov
pushf
mov
mov
adc
fcmovb
ja
xor
sbb
sbb
stos
sbb
jnp
fucomip
arpl
xor
es
mov
lahf
pop
fwait
iret
pop
dec
mov
pop
arpl
repz
cmps
push
cli
addr16
add
sbb
pusha
xchg
(bad)
xor
cmp
into
data16
add
outs
in
lahf
scas
mov
std
arpl
push
(bad)
xchg
stos
add
in
.byte
.byte
.byte
