fcomp
add
out
add
pop
add
add
add
mov
jnp
cwde
inc
cdq
rol
mov
ror
mov
and
pop
sbb
mov
ins
not
scas
xlat
jo
cmps
sub
cmps
push
cmp
iret
cmp
scas
dec
fst
mov
mov
aam
(bad)
ror
icebp
inc
jne
je
loop
imul
dec
daa
xchg
jne
out
les
xchg
(bad)
stc
jae
and
div
add
mov
cmp
jmp
cmp
scas
inc
or
in
arpl
les
jbe
(bad)
pop
jmp
imul
setnp
pop
mov
out
enter
cmp
mov
popf
loop
xchg
scas
out
jb
jmp
fucom
add
jle
out
mov
cdq
pop
dec
dec
enter
push
jg
fwait
and
ins
adc
cmp
sbb
ins
xchg
stos
aas
xchg
inc
enter
in
sbb
aaa
fcmovnb
cld
jmp
lock
(bad)
pop
mov
sahf
mov
jg
(bad)
jae
pop
jns
inc
cdq
ror
les
pop
fisubr
and
jg
jmp
mov
arpl
xchg
cmp
in
xor
(bad)
sbb
jg
ficom
lods
(bad)
mov
xchg
int
xor
in
dec
push
stc
push
mov
mov
mov
mov
mov
sub
and
mov
es
mov
sub
push
mov
les
in
or
xchg
aam
mov
nop
pop
push
jbe
lds
or
cmps
add
test
pop
mov
jg
cmp
or
movs
dec
lods
ds
loopne
sbb
add
sbb
push
mov
add
pop
push
mov
push
adc
pop
retf
test
push
push
sbb
fnstenv
xchg
push
scas
jge
xchg
daa
inc
popf
cmp
daa
or
pop
adc
retf
popa
sbb
(bad)
shr
imul
icebp
out
mul
out
movs
sub
mov
repz
(bad)
push
cmp
push
out
dec
push
in
dec
movs
loopne
rcr
xor
xor
xchg
out
adc
mov
loop
movs
or
xchg
mov
lds
scas
mov
in
push
leave
or
jbe
mov
out
jmp
push
pop
iret
cld
add
ins
pop
call
popf
push
cmps
ins
add
jp
and
mov
test
das
shl
add
add
into
xchg
inc
inc
mov
inc
pop
and
push
clc
mov
outs
mov
mov
jns
lods
pop
or
inc
fisub
cdq
mov
out
jne
and
mov
add
test
pop
pop
call
sbb
dec
retf
ja
inc
dec
test
addr16
jge
mov
inc
shl
sub
ficomp
jb
sub
shr
jle
mov
(bad)
ins
pusha
xor
and
or
sub
lock
jecxz
ret
imul
stos
popf
jo
push
or
push
inc
lock
sub
mov
adc
pop
mov
inc
push
test
mov
xor
shl
cwde
xor
or
lock
xchg
add
xor
mov
jnp
aaa
dec
jns
inc
push
arpl
cmp
inc
cmp
(bad)
fidiv
daa
dec
sbb
into
mov
or
fucomi
idiv
call
jp
cmp
mov
ret
lock
stos
rcl
lods
sbb
push
out
mov
dec
and
call
lods
or
xchg
inc
and
xor
pop
ins
inc
es
out
mov
pop
retf
daa
lea
dec
push
push
sub
in
cld
(bad)
fild
ins
mov
cmp
or
(bad)
stc
jecxz
ficom
aam
inc
das
aam
lods
mov
cmp
les
scas
inc
test
retf
cmc
dec
icebp
add
mov
outs
sbb
loopne
sbb
mov
retf
push
dec
inc
bound
cwde
in
cmc
(bad)
fst
sti
sbb
jae
add
inc
out
jg
inc
mov
rcl
call
lock
mov
inc
aad
add
mov
loopne
ja
lods
shr
cmp
add
xor
call
pop
ins
mov
test
xor
push
rol
pop
imul
jnp
mov
sub
jge
cmp
fisttp
inc
mov
sbb
pop
jb
or
dec
in
and
jle
add
cmp
js
cdq
gs
ret
push
shl
retf
mov
cmp
in
sbb
repz
(bad)
addr16
es
or
pop
repz
pop
jecxz
push
push
dec
outs
lods
xchg
lods
pop
pop
leave
mov
xor
jle
das
es
out
mov
in
cmp
into
je
cs
inc
cmp
mov
test
sub
mov
mov
lahf
add
mov
out
aam
fld
xchg
xlat
test
add
pop
ja
ja
(bad)
push
inc
fmul
sub
jmp
sbb
dec
jb
mov
test
xchg
(bad)
xor
daa
xchg
push
push
bound
cmovno
test
lods
sub
fcmovu
lods
inc
mov
pop
mov
cmp
(bad)
sbb
hlt
imul
mov
or
imul
jge
test
pop
outs
out
jbe
jo
mov
enter
fstp
sar
fsubr
sbb
cmc
test
inc
sysret
ja
fdivr
bnd
das
dec
rol
stc
mov
push
lods
in
pop
cmp
or
popf
push
pop
pop
mov
iret
mov
mov
int
or
dec
jle
push
pop
adc
aad
fisttp
stos
xchg
ja
xchg
cld
sbb
outs
mov
and
jne
lock
mov
fsubrp
jg
test
mov
lahf
push
push
dec
das
out
jp
mov
ret
and
or
cmps
push
and
pop
push
dec
std
xchg
or
sbb
jbe
pusha
cmps
mov
int
mov
adc
je
mov
push
push
push
out
cli
pop
pop
push
cmp
int
sub
dec
push
mov
inc
xor
dec
(bad)
fld
int3
mov
mov
test
(bad)
mov
(bad)
cmps
push
ins
cdq
push
mov
add
push
sbb
inc
jl
mov
retf
inc
mov
mul
mov
jmp
jp
xchg
or
cmp
mov
push
sub
dec
xchg
inc
rcr
es
or
(bad)
mov
or
das
cmp
ins
fisubr
jge
scas
sbb
cmp
mov
add
pop
pop
or
mov
fimul
test
xchg
dec
jp
inc
data16
enter
cli
and
inc
arpl
ret
shr
adc
aad
or
in
inc
push
and
iret
pop
ins
jg
retf
mov
sbb
add
jnp
repz
gs
inc
aam
bound
push
mov
pop
enter
gs
lods
push
mov
or
mov
mov
pop
xchg
cmp
leave
int
out
jne
xchg
mov
inc
pop
in
js
cli
dec
into
push
push
repnz
es
push
dec
xor
or
pop
in
inc
je
xchg
fs
mov
xor
in
arpl
pop
cwde
fst
jns
bound
les
push
fwait
dec
cmps
arpl
(bad)
lock
inc
sahf
pop
sbb
retf
mov
ror
xor
mov
ds
add
sub
in
je
daa
retf
jnp
jle
ret
test
ss
popa
add
add
aad
mov
jg
inc
stos
push
jb
sti
dec
jno
or
jae
inc
cwde
xchg
lahf
dec
icebp
mov
(bad)
and
cmp
cli
pushf
and
mov
dec
push
sbb
(bad)
shl
iret
push
mov
js
sahf
add
dec
or
xlat
jne
mov
xchg
call
sti
cli
mov
push
aam
xor
test
pop
pop
or
dec
ja
jecxz
movs
adc
in
or
cmp
(bad)
xor
cld
int3
call
imul
scas
sub
dec
ret
push
ret
bound
arpl
and
(bad)
stc
push
jg
fst
xchg
dec
fbld
sbb
out
dec
retf
int
loopne
cmp
(bad)
out
push
cmp
mov
fcmovne
retf
popa
xchg
adc
leave
xchg
mov
lahf
pop
cmp
je
pop
fmul
scas
in
push
pop
add
add
dec
popf
hlt
jae
aad
es
fcomi
outs
into
shl
cmc
pop
dec
mov
push
mov
(bad)
addr16
push
inc
rcr
gs
imul
pusha
call
popf
or
js
(bad)
fstp
push
repnz
pop
mov
mov
jnp
in
mov
loope
popf
movs
pop
xchg
fwait
mov
mov
mov
leave
fs
mov
inc
and
sub
sbb
(bad)
call
xchg
mov
out
mov
bound
sbb
cmps
fs
mov
fsubr
icebp
out
outs
loop
adc
jl
lods
adc
xor
adc
loop
sar
jbe
and
adc
rcl
cmp
sbb
into
inc
call
jle
ret
cdq
stos
mov
jmp
sub
xor
or
and
sbb
ror
mov
inc
xor
jne
mov
jns
fistp
mov
or
mov
push
jno
mov
sti
mov
cmp
push
mov
dec
sbb
dec
jnp
lahf
int
aad
mov
jge
fisttp
jmp
mov
jbe
jp
call
xor
cwde
int
cmps
or
into
fimul
les
jnp
icebp
popa
cmc
addr16
int
mov
leave
cmp
dec
ss
pop
jb
stc
dec
mov
mov
fwait
push
add
ins
sub
ficom
cld
scas
xor
xchg
add
sahf
pop
call
mul
repz
or
dec
pextrw
test
inc
fisttp
das
das
jge
test
fs
mov
cmps
outs
push
jl
mov
lds
xchg
xchg
mov
push
and
add
pop
daa
aas
push
mov
ja
add
loopne
mov
mov
retf
ret
mov
(bad)
dec
cmp
jmp
clc
leave
jno
das
pop
pop
test
mov
pop
push
or
dec
xchg
mov
sub
imul
ret
ins
dec
mov
mov
sbb
xchg
pop
xchg
mov
cli
xlat
vprotw
ins
cmp
fld
nop
das
xor
inc
dec
jns
das
fbstp
outs
arpl
xor
sbb
dec
scas
adc
cmp
outs
add
xchg
int3
dec
add
enter
fstp
dec
and
call
pop
mov
aad
in
jae
xor
(bad)
jnp
shl
xchg
mov
cmp
(bad)
mov
jns
inc
jmp
mov
inc
call
out
stos
imul
xor
or
mov
sub
aaa
cdq
xor
and
jae
mov
out
adc
or
enter
cmp
dec
stos
scas
aam
in
mov
in
idiv
cmc
sbb
push
add
aam
xchg
movs
pop
mov
stos
daa
mov
lods
mov
sahf
adc
dec
xchg
jge
push
jg
mov
shl
and
stc
xor
sbb
stos
call
cmps
sbb
into
and
ror
adc
dec
in
pop
ror
stos
inc
pop
cmp
jge
pop
std
int3
push
push
gs
mov
sub
inc
out
std
add
sub
bound
xor
jl
cmp
xchg
xor
fdivr
jne
addr16
es
sub
inc
dec
popf
mov
ror
mov
inc
jle
aam
pop
adc
pushf
mov
stos
jbe
fld
xchg
cli
mov
pop
xor
stc
xchg
pusha
test
mov
mov
daa
(bad)
dec
rcr
fdivr
cmp
xchg
inc
and
clc
fidiv
fbstp
repnz
into
mov
ins
xchg
push
hlt
push
retf
(bad)
rol
in
aaa
xchg
pop
xor
leave
xor
les
bound
xor
int
ror
je
jns
push
jbe
clc
leave
je
pusha
cmp
imul
fs
push
les
inc
test
fstp
and
adc
je
sbb
push
mov
dec
dec
dec
cmp
sbb
dec
sahf
aas
(bad)
mov
test
add
hlt
outs
aaa
sbb
loop
cmp
mov
jg
popa
cmp
ja
pop
mul
in
xor
mov
cmp
push
into
rcr
mov
cmp
add
xor
lds
div
jbe
sub
fadd
add
xchg
not
lods
add
jmp
idiv
dec
nop
inc
push
and
mov
js
ins
push
rcl
push
stos
sub
mov
add
inc
lods
jae
stos
ret
out
ins
dec
add
xor
mov
int3
lock
and
imul
sbb
push
push
outs
(bad)
(bad)
ret
mov
iret
inc
mov
or
sub
adc
cmp
mov
sahf
push
add
das
add
mov
ds
retf
jns
push
(bad)
(bad)
push
jmp
lods
rcl
jae
mov
test
ret
repz
xchg
pop
iret
pop
cmps
sahf
cmc
add
pop
das
mov
xlat
push
push
out
xor
gs
xchg
jmp
sbb
fdivp
xchg
inc
and
add
iret
into
sti
pusha
push
add
shr
xchg
dec
jecxz
push
out
and
outs
enter
sub
pop
into
cdq
push
add
shl
call
sbb
(bad)
push
push
popw
jge
pop
and
into
inc
dec
icebp
pop
pop
hlt
xor
fsubp
les
lods
mov
mov
nop
dec
adc
dec
sahf
sub
mov
cmp
idiv
test
lock
and
cmps
out
fld
xchg
sub
or
push
mov
push
cmc
das
xor
and
dec
mov
mov
mov
mov
xor
or
mov
aaa
out
xor
pop
call
mov
mov
dec
add
pusha
sub
cmp
fcmovnu
ss
inc
cmps
pop
inc
sub
mov
and
xor
push
out
pop
lahf
xlat
add
into
or
fucomp
gs
repz
push
into
inc
js
ins
dec
and
xor
out
das
test
fbstp
adc
scas
scas
mov
xchg
call
mov
shl
mov
adc
dec
fwait
aam
add
mov
cwde
cwde
mov
cmp
into
pop
cli
aaa
dec
push
fucomi
arpl
or
jb
clc
sbb
pop
daa
jno
mov
scas
jecxz
pushf
les
repnz
jns
adc
push
shl
loop
in
mov
add
mov
dec
push
add
pop
inc
clc
pushf
adc
add
push
xor
adc
fld
or
push
cld
mov
xchg
mov
icebp
aad
lea
add
iret
popa
dec
add
jmp
in
pop
fist
out
shl
cmp
fwait
mov
jle
and
imul
or
mov
xchg
rcr
int3
mov
mov
call
cmp
aas
mov
hlt
cmp
ret
xchg
in
mov
sub
sbb
cmc
push
call
mov
int3
lahf
cmp
jmp
es
stos
jmp
repnz
jne
fld
push
int
push
xchg
push
ins
xlat
(bad)
jb
mov
(bad)
jg
hlt
sar
mov
add
out
mov
and
outs
int
or
adc
pop
ror
fsubr
xlat
jl
cmp
popa
jo
pop
jo
jle
and
xor
(bad)
popa
repnz
retf
push
mov
mov
scas
mov
and
xor
addr16
stos
ror
mov
icebp
jmp
cmp
dec
repnz
(bad)
fcmovne
mov
mov
lahf
das
mov
rol
mov
inc
stc
jb
cld
jle
inc
iret
inc
push
retf
or
(bad)
fs
jecxz
pop
cli
add
adc
xor
mov
xor
pop
adc
and
mov
add
jne
pushf
mov
stc
push
imul
test
pop
mov
retf
adc
lods
fild
sti
mov
dec
cmp
inc
pushf
and
cmp
mov
xchg
pop
add
mov
mov
mov
inc
adc
pop
or
idiv
rcl
inc
lds
les
pop
(bad)
mov
cli
push
and
cmc
xchg
adc
and
sub
jmp
lea
jmp
push
sub
and
mov
sbb
cmp
iret
fsub
cmc
mov
sub
xor
and
pop
rcr
sub
gs
pop
push
inc
pushf
sahf
or
cmp
or
cwde
(bad)
pop
loop
dec
das
aaa
pop
sti
fwait
enter
jbe
fwait
jbe
mov
mov
rcr
fdiv
sbb
scas
inc
aaa
pop
inc
ins
frstor
sub
mov
xchg
idiv
int3
push
jns
loop
test
test
aas
aad
xor
jo
popf
enter
pop
pop
test
in
fiadd
xor
aad
xor
cs
sti
inc
arpl
dec
int
std
xchg
int3
xor
imul
lds
imul
mov
mov
not
xlat
in
push
dec
sub
xchg
jle
ins
pop
mov
cmp
shl
ret
mov
ja
fild
push
jbe
loope
dec
push
sahf
inc
sti
lock
cwde
das
daa
sbb
mov
xor
adc
les
ds
xchg
test
jbe
pop
push
lahf
out
xor
xor
sub
cmps
mov
outs
and
test
std
lea
and
cs
xor
jo
ss
sub
cmp
scas
inc
lds
fld
xchg
ins
xor
fs
mov
scas
popf
fwait
pushf
fsubr
daa
push
dec
mov
int
ret
or
adc
out
push
lds
je
sub
xchg
ffree
fisubr
sahf
retf
mov
xor
out
scas
(bad)
adc
inc
xor
ror
outs
inc
out
cmp
adc
ds
lds
popa
mov
xchg
mov
clc
psubd
call
cdq
cli
sbb
les
inc
xor
(bad)
xchg
push
xchg
push
aad
xchg
and
cli
sbb
addr16
pop
mov
xchg
sub
test
cli
adc
push
pop
xchg
xchg
xchg
cmp
add
and
enter
adc
adc
(bad)
stc
sub
sub
rcl
icebp
loope
or
int3
mov
les
push
sahf
mov
mov
dec
gs
dec
shl
cmp
push
les
iret
sbb
imul
(bad)
scas
xchg
clc
fwait
or
jae
mov
lock
mov
jmp
or
dec
add
mov
js
jmp
mov
ins
imul
xchg
dec
cmps
fsubr
lahf
xor
jbe
ins
mov
repnz
mov
inc
sbb
inc
push
fnop
mov
jmp
push
pop
sbb
retf
movs
sbb
push
outs
sbb
(bad)
sbb
pop
(bad)
jno
out
cmp
call
and
mov
outs
cmp
xchg
sar
lahf
loop
xchg
dec
lea
sub
jmp
(bad)
xchg
mov
jo
iret
int
cmps
pop
or
sub
repnz
push
fsub
mov
mov
sbb
and
xor
mov
pop
xchg
cmp
pop
dec
in
and
pusha
fidiv
sub
jecxz
fcomi
movs
sub
xor
(bad)
fild
jnp
je
adc
retf
cwde
xchg
clc
push
and
add
cmps
push
pop
inc
add
ret
in
xchg
repz
push
in
jmp
xchg
rol
loopne
lahf
pop
push
into
jmp
pusha
mov
mov
push
mov
push
jp
sbb
es
push
mov
sbb
inc
es
repz
jnp
jnp
in
ret
dec
push
add
xor
jo
push
add
inc
into
aam
inc
lods
inc
push
and
pop
inc
cli
retf
add
out
fmul
call
repnz
cmc
bound
test
(bad)
mov
shl
psllw
fsubp
repz
mov
call
push
cmps
aad
push
xchg
jmp
mov
dec
dec
dec
movs
jae
sbb
inc
sub
pop
add
neg
pop
mov
test
pop
sub
push
and
cs
ret
(bad)
out
lock
lahf
add
jp
pop
retf
mov
xchg
and
mov
data16
adc
mov
adc
in
icebp
test
mov
ror
aaa
dec
jle
js
mov
outs
adc
push
or
cmp
inc
adc
clc
jmp
dec
cs
xchg
sbb
js
mov
hlt
jge
aam
pop
aad
jmp
dec
inc
push
fwait
dec
jne
inc
fcmovnb
mov
sti
test
xchg
pop
and
and
push
out
imul
push
ins
pop
cld
push
aaa
inc
pop
or
inc
pop
jns
xchg
add
cmp
jle
aam
ret
add
fstp
int3
cmps
add
mov
lods
xchg
sbb
mov
inc
fdivp
sahf
(bad)
clc
(bad)
pop
inc
mov
cwde
cmps
hlt
ins
mov
(bad)
jl
retf
fucom
mov
cs
ds
push
and
mov
jle
loop
loope
xchg
jmp
int
loop
cmp
lahf
dec
rol
push
sar
ror
mov
or
lock
or
sub
bound
mov
ja
add
add
fcom
or
sub
aam
movs
jg
adc
nop
push
xchg
ret
sub
sub
add
inc
mov
dec
test
lahf
shl
lea
jns
push
fstp
bnd
push
sbb
test
dec
stc
pop
mov
int
test
push
sub
out
das
mov
jo
jmp
adc
add
test
je
jp
adc
ss
dec
cmp
adc
sub
mov
arpl
out
mov
xor
and
xchg
mov
push
jbe
retf
stos
push
inc
cmp
mov
add
fwait
inc
push
add
jne
test
inc
enter
or
dec
je
cmp
push
rcl
pop
mov
or
push
sub
js
outs
lea
mov
jmp
mov
stos
int3
inc
mov
push
test
cs
mov
lock
xchg
fisub
enter
sahf
fst
xchg
in
loopne
push
ss
pushf
sub
sbb
popf
pop
mov
cmps
add
js
jmp
int
movs
fstp
mov
cwde
test
clc
mov
fisttp
outs
jnp
mov
mov
stc
sbb
cmc
fisubr
or
outs
xor
xor
sbb
shl
push
das
push
mov
jnp
inc
adc
jl
popa
mov
and
daa
retf
jne
jge
sbb
mov
dec
or
es
stc
xchg
(bad)
(bad)
mov
fstp
lods
stos
adc
jl
aas
aas
fcom
xor
jne
ss
xlat
out
jne
sbb
cmp
shl
jbe
pusha
out
out
fucomip
popf
test
mov
stc
test
lahf
hlt
adc
ja
leave
outs
call
xor
push
sbb
fcmove
nop
ret
in
fisttp
sub
(bad)
push
cmp
xchg
sar
sbb
cmp
xchg
in
punpckhwd
mov
into
jno
jmp
mov
and
mov
jns
pop
mov
xchg
jg
cdq
push
mov
jge
xor
dec
push
repz
syscall
dec
mov
jno
mov
cmp
stc
arpl
add
mov
inc
and
cmp
data16
inc
xor
inc
outs
pop
shl
mov
pop
ret
inc
fisttp
es
xor
addr16
push
jo
push
sub
mov
test
cli
nop
sar
iret
rcl
inc
inc
mov
cmp
nop
mov
ss
outs
mov
push
sub
cmp
ret
or
adc
and
in
in
push
ret
jl
mov
adc
pop
mov
jb
inc
dec
icebp
xor
cmc
inc
test
lds
sub
div
add
adc
xchg
repz
div
xchg
and
in
pop
jmp
mov
lds
aas
pop
and
or
lods
sar
ins
inc
or
imul
jmp
sub
xlat
inc
jo
jnp
aad
inc
dec
push
mov
cvtdq2ps
loope
xchg
sub
and
das
popa
aaa
push
mov
inc
repnz
dec
sub
sub
and
dec
fstp
aam
pop
hlt
in
mov
mov
outs
fwait
cmp
sub
or
loope
lods
lods
mov
mov
mov
xor
jle
pop
retf
push
push
or
sbb
sahf
jge
jno
dec
sbb
ins
(bad)
(bad)
int3
cmp
int3
ret
add
jbe
jnp
fwait
movs
sub
in
sbb
(bad)
push
sbb
pop
and
pop
jnp
ror
dec
adc
cli
jl
scas
rol
xchg
fbstp
mov
push
mov
inc
sub
in
mov
mov
sub
push
mov
stc
das
push
mov
fcomip
leave
pusha
mov
xchg
in
repz
cmp
inc
mov
push
fisttp
scas
sti
dec
xor
mov
jl
popa
pop
pop
dec
jno
out
dec
or
or
cmps
push
neg
mov
push
in
push
adc
dec
mov
xor
pop
and
or
pop
pop
arpl
ror
int
xor
test
repz
push
and
add
int
mov
in
leave
das
dec
ss
push
ror
xlat
sub
mov
xor
fs
ins
fld
mov
sub
xchg
in
mov
sbb
jl
mov
aas
ss
inc
mov
das
cwde
in
cld
push
(bad)
dec
ret
push
adc
lods
pushf
nop
iret
mov
xchg
xlat
pop
dec
rcr
pop
dec
jbe
pop
fcom
dec
mov
mov
in
rcl
xor
xchg
inc
xor
jmp
cmps
xchg
call
nop
push
mov
mov
test
add
push
mov
fbstp
lock
ss
ficom
mov
mov
push
fsub
add
mov
repnz
mov
pop
sub
fwait
cmps
inc
(bad)
and
and
dec
cmp
scas
fild
(bad)
push
xor
pop
and
div
pop
inc
mov
rcr
add
xchg
lds
xchg
cs
inc
loope
add
fsubr
jle
xlat
jns
cmp
push
iret
pop
pop
pop
sar
ds
and
clc
je
ret
jns
loope
sub
aaa
inc
pushf
fidiv
inc
rcr
adc
mov
adc
sbb
mov
pop
and
les
es
xchg
or
aad
adc
iret
leave
sbb
sar
(bad)
mov
hlt
jle
neg
pop
loopne
cmp
push
pop
cmp
xor
push
pop
lods
not
ret
scas
add
mov
int
and
jns
cmp
mov
dec
dec
mov
cmp
dec
xlat
push
sbb
(bad)
mov
adc
and
cwde
or
imul
inc
ja
sub
inc
nop
(bad)
lock
jg
test
gs
popf
add
or
xor
dec
iret
fldenv
push
out
adc
gs
std
scas
stos
inc
loope
xlat
pushf
pop
jecxz
jns
adc
cli
and
push
cli
push
ds
shl
inc
das
xor
and
stc
xlat
pop
dec
dec
adc
jecxz
pop
nop
mov
test
mov
mov
xor
mov
cld
dec
repz
rcr
push
and
icebp
push
cmp
or
cmps
xchg
scas
mov
push
(bad)
pop
jo
or
out
pop
int
mov
pop
in
jge
mov
inc
xor
add
xlat
xchg
sbb
xchg
mov
lods
xlat
adc
(bad)
test
ret
stc
push
or
and
xchg
jne
rcr
rol
ja
fsub
cdq
sub
add
inc
mov
cmovb
adc
outs
xor
adc
rcl
cs
cld
pop
inc
loop
lods
retf
nop
pop
data16
jb
in
and
das
ror
add
out
dec
out
push
iret
in
jmp
loope
call
xor
dec
dec
mov
and
lock
push
mov
lods
popf
mov
daa
dec
ffreep
mov
fdiv
push
addr16
pop
stc
scas
sub
stos
popa
push
js
arpl
shr
cmps
or
xor
jp
cmp
ja
loopne
push
mov
and
aad
push
xchg
mov
jae
int3
je
out
mov
push
idiv
xchg
adc
fs
push
push
out
sub
mov
std
or
pop
mov
test
add
cld
dec
dec
pop
mov
jo
mov
cmp
ret
and
cmp
pop
(bad)
sub
lea
cmp
add
test
fdiv
ret
dec
retf
xor
cmp
jmp
inc
sub
int
popa
test
add
mov
pusha
gs
(bad)
cmp
rcl
test
mov
push
cmp
shl
(bad)
adc
inc
inc
fidiv
les
add
adc
mov
sbb
mov
lahf
jecxz
mov
jnp
jmp
iret
mov
stc
jecxz
(bad)
dec
popf
pop
aaa
cmp
adc
adc
hlt
mov
sub
inc
jno
std
repz
hlt
jmp
jnp
adc
xchg
pop
in
xchg
jge
lahf
daa
fcom
movs
scas
pop
inc
sbb
push
inc
out
mov
mov
int
dec
jo
xchg
adc
cwde
jecxz
js
dec
and
mov
(bad)
outs
ja
adc
sbb
push
gs
xchg
mov
daa
sub
ret
add
inc
mov
rcr
cmps
mov
gs
sahf
out
cwde
lea
inc
shr
sar
std
add
mov
and
xlat
mov
lds
cdq
dec
adc
inc
popa
test
(bad)
cwde
sub
add
inc
icebp
mov
mov
or
out
ret
test
cli
xchg
fcmove
cmc
test
and
add
mov
and
int3
inc
out
xchg
hlt
and
pusha
push
or
mov
in
push
xchg
cwde
lock
jmp
aas
jo
(bad)
add
jo
adc
imul
out
int
mov
stos
jmp
addr16
pop
ds
sbb
iret
stos
stos
jecxz
xor
xlat
(bad)
icebp
aaa
cmp
jl
stos
jns
cmps
mov
(bad)
mov
out
nop
push
aaa
ds
sbb
mov
mov
ins
call
sub
call
popf
popa
pushf
push
out
sub
cmp
mov
retf
xchg
add
push
xchg
mov
push
fmul
retf
xlat
and
iret
mov
mov
add
dec
daa
dec
pop
mov
movs
fimul
pop
adc
sub
ins
shl
std
repz
loope
xchg
call
cmc
scas
sti
adc
mov
xor
imul
hlt
shr
cmps
jle
fs
inc
sbb
sbb
(bad)
sub
add
pop
movs
mov
aad
xor
sbb
loop
outs
inc
xor
adc
pop
pop
xchg
fnsave
retf
leave
scas
sbb
xchg
mov
or
ins
retf
out
xchg
fidivr
and
addr16
mov
movs
and
push
arpl
dec
mov
sbb
or
push
pop
and
stos
or
xchg
std
jno
int3
cli
js
retf
test
nop
mov
stc
inc
ja
aam
and
imul
int
mov
xchg
or
jl
push
xchg
xor
sbb
fdivr
jo
sti
pushf
test
popa
or
or
inc
or
leave
push
out
or
sbb
and
jmp
add
mov
mov
xor
mov
xor
mov
sbb
mov
dec
mov
jne
add
mov
sbb
or
sbb
cmp
aaa
add
add
mov
out
adc
fld
pop
xchg
fisttp
push
std
jle
add
sbb
fnstenv
mov
cmc
movs
fiadd
mov
mov
cdq
pop
movs
outs
jbe
inc
test
and
lods
clc
movs
xor
test
scas
mov
inc
sbb
add
mov
popf
inc
loop
pop
cwde
mov
icebp
out
pop
out
div
push
xor
push
dec
sub
mov
popa
pop
je
jmp
xchg
mov
stos
mov
scas
inc
inc
push
mov
inc
push
or
repz
dec
push
push
push
xor
icebp
add
fcmove
pop
repz
sbb
cmp
pop
imul
lds
imul
stos
pop
rol
xor
(bad)
push
pop
lea
xlat
in
rcl
xchg
ret
cmps
sar
scas
outs
cld
pop
jp
icebp
push
int3
dec
in
(bad)
test
pop
and
jecxz
js
mov
add
in
adc
mov
rol
mov
mov
imul
jb
in
push
jo
and
sub
pop
add
stc
push
cwde
cmp
inc
call
cmc
push
sbb
popf
inc
mov
push
pop
adc
and
stos
inc
outs
stc
adc
lahf
adc
aam
outs
mov
dec
repnz
adc
and
adc
mov
xor
scas
cld
add
test
xchg
(bad)
sbb
call
push
sub
jbe
leave
(bad)
jnp
inc
test
call
(bad)
std
add
pop
xor
and
mov
mov
rcr
aam
or
xchg
fisttp
xchg
(bad)
test
pusha
scas
pop
mov
in
push
xchg
(bad)
fisttp
cmp
fmul
outs
out
out
push
aad
push
push
add
dec
pushf
jle
xchg
sbb
not
dec
push
int
jb
fdivp
mov
(bad)
mov
outs
xchg
dec
sub
out
adc
push
pushf
ror
push
ret
pop
add
cmp
jge
and
nop
mov
pop
xor
fdiv
daa
adc
mov
pop
out
mov
sub
inc
mov
or
xchg
adc
mov
xlat
data16
repz
js
xchg
jae
outs
shl
mov
in
ja
xor
ins
mov
mov
push
adc
fisub
idiv
mov
sbb
dec
imul
xchg
cmp
aam
or
cmp
or
scas
sub
fnstcw
xchg
xchg
cmp
or
sub
xchg
icebp
sbb
and
sub
add
fcmove
jmp
ret
dec
stos
dec
leave
add
repnz
(bad)
xchg
push
fsubr
ins
loop
cmps
repnz
fisubr
nop
aad
jno
pop
fnstsw
push
xor
fnstenv
sbb
lods
pusha
pop
sbb
loopne
fidiv
js
or
ds
add
dec
xchg
stos
mov
push
mov
(bad)
mul
cld
dec
mov
xchg
xor
test
retf
sahf
mov
ja
retf
scas
fs
cmc
stc
loope
(bad)
mov
push
pop
cmps
cdq
hlt
adc
scas
fist
ss
movs
or
stc
jmp
jae
lea
mov
test
mov
push
fidiv
jp
mov
stos
sub
inc
sub
adc
push
mov
sbb
inc
out
xor
jno
cmp
popf
inc
mov
xor
xchg
xor
jb
pop
xlat
adc
pop
dec
xor
inc
mov
icebp
cmp
jmp
push
aas
xchg
cmp
mov
xor
nop
cs
xor
test
jecxz
stc
pop
mov
cdq
dec
push
hlt
cs
mov
sti
cwde
je
(bad)
stc
lock
mov
mov
es
pop
nop
add
iret
lods
mov
sub
(bad)
mov
retf
rcl
movs
adc
xor
jmp
outs
(bad)
test
cs
mov
cmc
int
inc
pop
popf
dec
hlt
scas
outs
mov
call
mov
xor
pop
and
sbb
xchg
pop
(bad)
xor
jg
pop
jecxz
adc
mov
das
call
(bad)
rcl
out
mov
sbb
call
sbb
mov
fild
inc
cmps
push
mov
cmps
mov
repz
in
stc
add
ins
loop
inc
fldcw
ret
mov
push
add
inc
and
jp
ror
loop
cmp
(bad)
pop
loop
xor
xlat
cmp
or
lods
scas
cld
lods
cmp
xchg
inc
pop
bound
push
ins
sub
ret
loope
sub
les
sub
pop
sub
call
push
(bad)
jmp
sbb
aad
jl
push
fld
push
gs
test
fisubr
mov
jp
mov
pop
or
lods
ja
outs
jno
mov
ss
and
daa
push
call
mov
mov
fsub
sub
cmp
inc
jno
jge
loopne
adc
xor
inc
adc
das
cdq
push
cmp
(bad)
mov
pop
or
mov
cmp
add
sbb
jmp
mov
push
mov
ret
cmp
mov
out
mov
(bad)
nop
push
repnz
jo
adc
dec
mov
or
pusha
push
in
test
jmp
jl
shl
jb
mov
popa
dec
mov
mov
or
in
jecxz
push
daa
das
jmp
popf
and
inc
mov
push
and
lock
sti
jp
aaa
in
hlt
jo
ins
(bad)
xchg
out
outs
mov
and
sub
repnz
imul
cmps
jmp
sbb
out
push
pop
ins
adc
sti
imul
push
aad
push
xchg
xor
cld
test
pop
mov
popf
mov
loop
cmp
or
push
jecxz
push
mov
xchg
cmp
stos
inc
aam
leave
pop
ror
pop
iret
adc
stc
pushf
or
pop
lods
sub
and
daa
(bad)
sbb
and
cdq
in
pop
push
ret
and
ror
add
inc
xchg
or
dec
adc
sub
push
test
movs
or
pop
in
test
or
mov
cmp
popf
mov
sub
mov
out
sbb
cmp
cmp
outs
jo
inc
(bad)
push
inc
popa
clc
js
out
adc
int3
int3
fild
lods
(bad)
ret
ret
ins
push
fnsave
dec
dec
es
dec
jne
mov
std
inc
and
add
call
lods
movs
jnp
inc
mov
dec
test
xor
and
sub
out
push
mov
mov
xchg
sub
popa
pop
stc
jae
fcmovnb
outs
jmp
mov
or
and
and
pop
cwde
addr16
(bad)
pop
sbb
cmp
int3
and
xor
mov
cmp
inc
ret
in
mov
popa
xchg
pop
test
mov
pop
mov
xchg
pop
(bad)
pop
iret
ss
jno
aam
rcr
ja
popa
add
push
mov
repnz
mov
jmp
sub
ds
sub
inc
cmp
movd
loopne
jmp
(bad)
pop
push
cmps
shl
aad
push
stos
jp
retf
cmp
adc
add
cmp
dec
xor
adc
mov
jl
dec
in
sub
cmp
call
stc
in
fisub
pop
loope
movs
pop
jg
(bad)
mov
dec
xor
sbb
jle
jnp
pop
out
pushf
sub
js
lods
sti
sbb
loopne
call
jnp
sbb
ss
mov
jno
pop
push
or
dec
fist
scas
out
cwde
and
mov
jmp
push
sbb
movs
add
fild
lahf
daa
sbb
sub
jp
pushf
bound
xor
sub
and
loope
xchg
lods
inc
fcomp
out
mov
fmul
inc
je
int3
mov
push
jae
mov
xor
push
out
je
lock
dec
cwde
mov
jg
mov
aas
jecxz
and
outs
mov
sub
mov
cwde
imul
jae
cmps
leave
inc
sub
jnp
cs
fsubr
add
adc
arpl
add
es
or
sub
fsubr
mov
push
xchg
sti
mov
sub
jo
out
mov
mov
jo
mov
add
fnstsw
jmp
push
test
xor
loop
pop
out
stc
add
iret
call
leave
sub
push
shl
js
and
cmp
cmps
(bad)
adc
aad
sti
sbb
mulps
jb
fistp
mov
xor
into
sbb
pop
add
xchg
shr
call
xlat
test
int3
mov
out
xchg
loope
test
lods
jmp
pop
xor
pop
jp
int3
repz
dec
movs
mov
(bad)
retf
xor
(bad)
and
pop
inc
cld
jecxz
push
sbb
ins
pop
pop
ds
in
fcom
outs
fdivr
outs
test
stc
fsub
push
jb
jecxz
inc
mov
stc
pusha
push
les
xchg
outs
aaa
sbb
in
daa
(bad)
fs
mov
pop
aad
mov
xor
outs
stc
stos
jecxz
push
(bad)
and
mov
imul
add
inc
out
push
ficomp
mov
ds
add
push
dec
data16
sbb
loop
movs
adc
call
clc
es
pop
(bad)
lods
xchg
jbe
push
inc
rcl
jmp
sub
jmp
sbb
adc
out
cmp
repz
dec
jecxz
mov
shl
rcr
xor
rol
movs
mov
jecxz
push
pop
pop
hlt
cdq
xor
(bad)
xchg
int
mov
xchg
or
cli
ss
add
xlat
cli
not
in
mov
iret
xchg
and
mov
sub
mov
or
es
fstp
es
xor
mov
adc
pop
pop
call
xor
xchg
sub
ins
out
adc
mov
addr16
and
pop
js
mov
lea
and
ins
cmp
cmc
retf
je
outs
ins
push
pop
cmp
(bad)
push
lods
inc
push
mov
(bad)
and
mov
inc
rcl
cdq
loopne
loopne
arpl
jmp
aaa
adc
sbb
aas
mov
xchg
inc
icebp
bound
out
mov
lock
ficomp
int
mov
cmps
jne
sbb
xor
test
sbb
repnz
cli
(bad)
push
dec
and
leave
inc
movs
add
jp
popa
xchg
pop
test
xchg
lock
gs
sbb
dec
outs
inc
and
mov
dec
mov
mov
xor
icebp
add
aad
adc
repnz
das
mov
adc
movs
into
popa
mov
push
cmp
call
ins
imul
clc
cmp
cmp
xchg
ja
mov
les
mov
fadd
jo
popf
xor
inc
lods
mov
pop
out
arpl
fwait
jge
adc
xchg
adc
mov
movs
(bad)
imul
and
mov
sub
fld
call
in
shl
outs
jmp
jne
jecxz
in
jge
dec
bound
data16
push
mov
bound
add
jbe
cmp
push
aad
dec
sub
rcr
push
mov
pop
movs
xor
mov
and
inc
scas
jecxz
mov
xlat
mov
push
minps
add
sbb
dec
nop
cmp
cmc
jp
and
mov
je
outs
or
cdq
fcom
dec
pop
icebp
xchg
aam
pop
rol
out
ret
lock
nop
jl
scas
sbb
mov
xor
cli
mov
add
cmps
push
inc
div
inc
test
cmc
pop
aas
jg
push
pusha
inc
cmps
xor
dec
and
xlat
lea
mov
dec
jge
mov
or
pop
aam
push
jmp
add
fadd
cli
into
mov
pop
imul
dec
cmp
dec
dec
les
dec
ins
inc
mov
cmc
inc
sub
push
loope
mov
pop
or
xor
mov
stc
cdq
xchg
sahf
aas
fsub
call
cmp
retf
xor
arpl
push
mov
jno
jns
shl
and
fild
inc
xchg
push
lods
fxch
(bad)
pop
daa
jp
jne
jbe
fcmovnu
fimul
lds
adc
es
jns
(bad)
test
cmps
mov
arpl
nop
or
sbb
mov
pop
lock
sti
ins
lock
je
(bad)
adc
loope
call
jnp
aas
mov
bound
pop
test
pop
adc
in
xchg
pop
movs
ret
mov
fwait
retf
into
adc
shl
add
loopne
mov
dec
(bad)
mov
mov
je
fadd
mov
(bad)
sahf
cmp
push
or
jns
das
lahf
lods
mov
loopne
push
add
fmul
pusha
pop
rcr
push
inc
push
bound
call
sbb
add
push
test
cld
xor
clc
retf
jge
in
gs
and
adc
imul
adc
(bad)
mov
ins
(bad)
outs
add
cmps
fadd
jno
cmp
mov
add
cmp
ja
fs
push
jo
fisub
fdiv
or
enter
in
push
arpl
push
nop
int
and
sub
fmul
cmps
pop
push
(bad)
test
jmp
mov
fidiv
bound
test
call
xor
or
mov
pop
and
or
sbb
aam
push
rcl
fs
repnz
daa
pop
mov
in
pop
cmp
inc
dec
movs
loope
int
das
xor
inc
dec
call
into
icebp
jmp
pop
adc
cmp
push
dec
(bad)
xor
test
repnz
sub
add
sub
(bad)
mov
cwde
xchg
aas
adc
gs
push
xchg
pop
and
add
xchg
dec
ret
xor
xchg
loop
xchg
daa
je
and
or
adc
rcl
lods
dec
pop
jmp
mov
jbe
scas
dec
arpl
or
mov
daa
es
pop
outs
add
add
aam
out
push
xor
test
aaa
idiv
fisub
out
shl
mov
test
and
jbe
call
repnz
and
aad
sbb
fisub
imul
adc
xor
leave
lods
inc
pop
into
or
lds
pop
in
pop
jno
push
mov
and
cdq
out
je
pop
fdiv
mov
stos
xor
(bad)
mov
dec
out
adc
sub
mov
js
aad
add
iret
shl
loope
sahf
outs
xlat
retf
cmp
or
adc
icebp
inc
add
xchg
pop
push
jg
lds
add
pushf
inc
fstp
add
xor
mov
cmp
popa
fmul
or
mov
pop
lea
pop
pusha
int3
test
into
mov
xor
loop
jno
mov
(bad)
mov
and
jnp
mov
(bad)
in
outs
adc
ret
xor
in
cmp
(bad)
pop
aaa
in
cmc
scas
mov
into
popa
das
adc
rcr
stos
sub
test
in
dec
das
mov
inc
rcr
retf
iret
int
cmc
pop
imul
bound
xchg
pop
xchg
neg
xor
mov
push
mov
scas
into
adc
(bad)
dec
dec
addr16
pop
ins
dec
outs
cli
iret
push
fdivr
scas
push
mov
cmps
jmp
pusha
mov
(bad)
out
scas
loopne
xor
xchg
mov
adc
sub
mov
sbb
jne
push
nop
in
mov
mov
pop
mov
gs
lods
mov
ror
or
pusha
xchg
rcl
jo
xor
cmp
mov
cmc
fst
imul
jge
call
sub
outs
pop
add
cmps
xchg
add
or
arpl
imul
mov
and
loop
repz
add
add
mov
lds
xchg
dec
jp
lahf
fld
inc
stos
sub
mov
aad
movs
push
xchg
push
xor
pop
movs
rcr
fwait
mov
adc
ror
lods
scas
dec
arpl
test
in
lock
and
push
dec
mov
call
mov
(bad)
mov
add
mov
(bad)
mov
sub
int
pop
leave
push
push
push
pop
pop
int3
push
test
xchg
dec
int3
fisttp
pop
popa
pop
ret
(bad)
in
(bad)
loop
xchg
ret
(bad)
mov
cdq
mov
addr16
dec
rcl
cdq
nop
imul
les
in
or
std
cmps
ror
jnp
pop
inc
adc
icebp
repnz
call
sub
inc
cmc
lahf
jp
push
xor
lods
lods
cli
xchg
sbb
mov
scas
push
iret
retf
or
push
push
scas
repz
mov
and
inc
imul
sub
xor
(bad)
test
sahf
dec
jge
xchg
fimul
scas
fbld
fwait
xlat
fmul
xchg
stc
in
pop
test
movs
clc
retf
adc
out
xchg
dec
sbb
call
retf
jo
loopne
test
retf
fisub
xchg
add
fsubr
cmp
mov
(bad)
in
cwde
push
jg
mov
or
cmps
sbb
imul
test
inc
(bad)
mov
mov
rol
or
pushf
icebp
fist
pop
pusha
cwde
call
(bad)
pusha
fimul
mov
cmp
mov
mov
mov
xchg
data16
inc
push
loope
stos
ror
or
xchg
out
fwait
push
movs
pop
je
ret
jg
in
mov
sub
adc
movs
adc
ins
int
out
inc
push
sub
mov
jnp
shr
mov
rcr
pop
xor
retf
call
das
sar
(bad)
fild
pop
push
jmp
test
stos
lods
das
pop
cdq
sbb
fwait
gs
je
rcl
std
xlat
fdiv
or
cmp
mov
add
retf
xor
or
cmp
fstp
inc
aaa
ja
(bad)
loope
adc
inc
push
sbb
jbe
pop
mov
jg
test
addr16
pop
xor
and
push
sub
pop
retf
(bad)
loope
inc
lods
jo
les
rol
pop
xor
pop
xchg
loope
int
push
push
mov
in
cmp
loope
ins
retf
jns
aad
inc
icebp
add
mov
add
and
or
dec
pop
loopne
or
nop
jmp
jge
adc
(bad)
hlt
or
xor
inc
fnstenv
mov
cli
sbb
retf
mov
leave
int3
mov
ds
shl
sbb
cmp
popa
in
push
hlt
push
movs
pop
test
shr
sbb
sbb
push
imul
and
or
adc
cld
mov
xchg
scas
add
idiv
bound
sbb
sbb
fsub
dec
inc
cmps
loopne
jl
loop
sub
(bad)
fadd
mov
mov
loopne
imul
or
mov
dec
rcr
lea
jne
dec
xchg
sub
cmps
push
cmp
mov
pop
iret
sbb
cli
xor
xchg
fild
fistp
loopne
mov
ffreep
push
fdivr
xchg
jg
cmp
push
push
lods
and
jae
lds
loop
inc
dec
sub
sub
call
arpl
dec
sti
fwait
(bad)
in
test
and
jns
add
aad
ss
xor
cmp
fmul
bound
push
mov
jle
cli
pusha
pop
and
cmp
iret
aad
pop
addr16
mov
cmp
mov
xor
inc
inc
out
outs
pop
adc
mov
pushf
fiadd
sbb
(bad)
imul
sub
add
lods
push
push
aad
lock
dec
imul
in
and
fnstenv
fsubr
shl
dec
loop
push
dec
mov
xchg
imul
cmp
jp
push
in
jmp
pop
clc
sub
hlt
mov
cmc
jae
repz
fcom
xchg
stos
les
or
or
mov
pop
mov
rol
add
(bad)
xlat
popf
mov
aam
sbb
rcl
arpl
sub
loop
or
push
push
add
aad
out
inc
sahf
add
mov
push
or
push
(bad)
fucomip
jae
stc
mov
stos
sahf
imul
ror
bound
imul
jnp
pop
shr
xchg
out
cmp
sbb
mov
mov
pusha
out
sub
arpl
mov
mov
and
sub
pop
outs
lds
pop
jle
pop
jle
mov
or
aad
repnz
or
movs
clc
inc
cdq
addr16
cmps
and
xchg
jbe
push
jne
mov
je
sub
aam
mov
ins
push
mov
out
xor
xchg
xor
xor
adc
pushf
xor
fwait
popf
or
adc
jle
fst
scas
(bad)
aaa
fiadd
add
push
aad
(bad)
mov
mov
or
stc
js
dec
inc
mov
pop
mov
push
shl
inc
sbb
push
push
xor
push
inc
popa
scas
pop
sub
mov
nop
mov
daa
sub
leave
mov
loop
inc
sbb
enter
call
sbb
(bad)
dec
mov
(bad)
sahf
mov
jb
fmul
cmp
mov
gs
imul
sub
or
sbb
mov
mov
adc
lock
cmp
popf
cmp
adc
cmp
outs
xchg
gs
or
xchg
shr
xor
add
inc
adc
not
xor
int
add
add
(bad)
mov
pop
add
stos
cwde
out
jne
js
in
arpl
xor
mov
or
inc
xchg
aad
in
push
fwait
lods
push
fisub
repnz
daa
addr16
and
and
sti
ret
in
test
dec
mov
sbb
ins
(bad)
mov
adc
adc
push
shl
mov
dec
loopne
xor
cs
repnz
icebp
jecxz
mov
push
(bad)
idiv
inc
mov
sbb
cmp
sub
call
mov
outs
inc
stc
pusha
pop
push
mov
cwde
js
xor
div
int
xor
sbb
push
fstp
dec
adc
dec
popa
cdq
and
fidivr
arpl
cmc
xchg
test
into
jns
cmps
lods
adc
cmp
not
inc
xchg
sub
ss
inc
mov
jno
cmp
push
inc
mov
mov
out
adc
push
cld
xchg
pop
loop
inc
sbb
mov
xchg
rcr
jo
test
ins
pushf
inc
in
jge
(bad)
jnp
shld
(bad)
dec
fild
adc
push
and
rcr
retf
fdivr
cli
loop
popa
pop
mov
sub
dec
movs
mov
sub
sbb
mov
(bad)
pusha
push
mov
xor
mov
mov
out
mov
ins
dec
retf
repz
shl
out
jnp
mov
popf
jno
adc
push
push
push
shr
fnstenv
mov
and
xchg
pop
cmp
shl
gs
pop
inc
mov
adc
xchg
test
outs
jmp
jbe
xor
xor
cmps
(bad)
icebp
push
cmp
dec
imul
movs
xor
js
push
(bad)
pop
sti
das
movs
ss
jb
loop
pop
jmp
ret
in
pop
cdq
std
dec
xor
fild
iret
xchg
mov
in
popf
(bad)
call
shr
pop
mov
imul
lods
pop
xchg
popa
shl
or
addr16
mov
out
pop
xchg
(bad)
jmp
sbb
leave
mov
scas
stos
pop
in
test
push
adc
add
sbb
test
cwde
test
mov
mov
imul
cmp
neg
inc
retf
cmp
or
xchg
adc
int3
mov
push
mov
cmp
jl
dec
(bad)
test
repz
or
fstp
xor
jmp
ficom
sub
rol
cmp
dec
ja
mov
jne
push
(bad)
dec
inc
pop
mov
xor
pop
or
sub
xchg
(bad)
in
push
adc
adc
idiv
sar
adc
test
xor
or
andnps
pop
in
mov
cmp
push
dec
mov
fwait
adc
push
ret
or
cmp
add
out
out
outs
xchg
mov
xchg
fdiv
mov
leave
stc
shl
inc
xor
test
outs
or
cmp
cmp
mov
mov
xchg
arpl
ins
push
mov
dec
sar
or
retf
and
cmp
aas
aad
inc
repz
xor
mov
out
cmp
lods
mov
jno
sbb
mov
push
mov
inc
pop
xchg
inc
xor
repnz
inc
sbb
data16
fsubrp
fistp
scas
cmps
es
xchg
xor
movs
inc
fsubr
inc
outs
push
and
mov
sub
stos
sbb
clc
xor
retf
cmp
outs
push
xor
dec
push
dec
(bad)
(bad)
loop
adc
adc
or
mov
mov
xlat
ds
pop
mov
or
sti
push
jl
out
mov
jecxz
not
mov
scas
xor
sub
ja
sub
add
mov
punpcklwd
retf
cs
jle
add
stos
xor
dec
jge
(bad)
push
push
jecxz
test
in
jmp
cld
jae
push
in
sahf
inc
mov
stc
stc
jmp
data16
les
repz
dec
repz
leave
fs
pop
sbb
lock
out
sub
shr
loop
in
and
inc
xor
stos
test
mov
pop
xor
xor
or
xor
mov
cmp
jmp
test
add
mov
mov
pop
push
pop
out
lock
pop
movs
in
pop
movs
outs
std
nop
sub
sahf
inc
xor
and
push
pop
jae
or
jno
add
leave
test
jb
sbb
sbb
sub
inc
adc
fwait
pushf
stos
test
pushf
mov
leave
(bad)
leave
out
sub
jnp
mov
scas
xor
jp
mov
jmp
enter
lods
cs
jmp
shl
lock
pop
rcl
add
xchg
into
xchg
push
add
jmp
sub
aaa
out
xor
imul
mov
fwait
imul
popf
into
adc
xlat
loope
mov
add
dec
push
add
in
jg
cmps
mov
sar
dec
mov
mov
ja
push
add
fsubr
sub
inc
outs
mov
outs
fidiv
test
aas
push
popf
aad
mov
ins
inc
push
inc
or
fs
test
xor
call
cdq
fisttp
jg
cmp
mov
es
outs
push
sti
mov
inc
push
xchg
(bad)
stos
lods
stos
jns
mov
nop
cld
fisubr
fisubr
adc
test
stos
add
inc
jnp
je
neg
sub
retf
scas
sub
mov
(bad)
aaa
push
cmp
inc
push
rcr
dec
div
jge
dec
popf
jle
into
sbb
pushf
in
aam
fistp
int
xchg
fld
js
and
fnsave
dec
lea
adc
out
and
lahf
fisttp
imul
rol
jp
push
iret
or
test
scas
sbb
adc
xor
jmp
jl
sahf
pop
pop
bound
pop
push
inc
repnz
test
mov
lods
shr
leave
or
or
sub
mov
es
jmp
xchg
push
or
test
pop
lock
aam
jae
xchg
or
push
pushf
enter
repnz
fistp
dec
or
sbb
lds
(bad)
pop
ret
fwait
add
les
je
xchg
daa
pop
int3
and
mov
lds
push
shl
dec
cmp
or
lock
dec
adc
jmp
(bad)
scas
out
ret
jne
xlat
aam
dec
push
dec
retf
sbb
cmp
sar
push
pop
jecxz
sar
add
(bad)
mov
jl
cmps
imul
imul
outs
hlt
clc
idiv
sub
xor
push
sub
xorps
addr16
cmp
lock
(bad)
daa
jle
icebp
retf
shr
cmp
dec
jl
repz
mov
dec
push
push
sub
nop
xchg
lds
pop
dec
stos
add
mov
sar
aaa
scas
mov
adc
pop
jp
movs
jg
add
scas
jecxz
cdq
mov
mov
outs
lahf
and
mov
retf
cmp
dec
addr16
stc
mov
arpl
cmc
fbld
add
xchg
shr
aam
icebp
test
enter
push
mov
pop
push
jo
xchg
scas
pop
hlt
mov
push
inc
push
cmp
cld
ss
pop
add
mov
sar
in
sbb
xor
imul
jle
in
lods
cdq
push
and
rcr
mov
xchg
and
xor
aas
aad
pusha
push
inc
xchg
cdq
addr16
nop
ins
imul
inc
jmp
mov
call
pusha
and
enter
loop
add
mov
iret
aam
xchg
pop
sar
in
adc
fimul
xlat
icebp
es
sahf
push
lock
inc
jo
fild
in
popf
xor
xor
lds
gs
push
and
or
fcmovu
fsub
in
js
mov
or
out
adc
fisttp
jnp
push
xchg
stos
push
xchg
clc
jmp
stc
pop
add
inc
std
dec
pop
mov
sbb
daa
sub
mov
sub
movs
jno
add
movs
jno
aad
mov
push
(bad)
push
push
mov
jno
mov
retf
lods
pushf
push
dec
ja
cmp
xchg
mov
jo
das
lods
mov
int3
jmp
call
imul
in
outs
xchg
push
(bad)
cmp
push
test
inc
cli
je
xchg
pushf
in
js
push
cmp
fld
jne
xor
jo
mov
sbb
fdivr
cmp
mov
mov
xor
jp
ret
mov
mov
popa
into
xchg
mov
cmc
mov
ja
in
mov
int
xor
loop
fdiv
pop
adc
rol
mov
add
sbb
xchg
popf
adc
ins
xor
mov
add
les
cmp
or
bts
cs
and
cmp
xor
or
fiadd
clc
push
dec
jge
xchg
xor
sbb
add
out
push
hlt
test
dec
js
clc
pop
fwait
(bad)
fucomi
sub
les
jp
nop
pop
into
push
inc
jns
stc
dec
add
addr16
(bad)
fcom
rcr
cdq
add
imul
stos
sbb
and
or
jle
xor
jle
push
mov
pop
hlt
mov
mov
push
sbb
int
pop
jp
gs
fcomp
push
jp
cmp
add
loopne
in
fdiv
retf
ja
jnp
jmp
popa
imul
dec
cmp
pop
mov
movs
movs
dec
pop
cmps
mov
mov
or
adc
mov
addr16
loop
ins
loopne
fstp
xlat
inc
cdq
cmps
push
imul
lds
add
out
pop
std
aaa
fisttp
test
xor
iret
xchg
mov
dec
popa
and
jb
jmp
cmove
sub
repz
sub
sub
(bad)
push
push
xor
ror
or
imul
mov
das
leave
repz
rol
(bad)
retf
cmp
outs
repnz
xor
cmp
sub
daa
inc
daa
ret
push
add
arpl
repz
aad
les
or
lods
cmp
sbb
lock
cmp
dec
pop
push
neg
jb
adc
fstp
cmp
test
push
cmp
mov
dec
das
push
loope
into
push
mov
rcl
lahf
xor
fisub
pusha
loopne
mov
mov
mov
push
in
pop
mov
adc
sbb
in
sbb
rol
mov
mov
push
mov
into
stos
cdq
ins
jae
js
mov
add
mov
ficomp
adc
rol
or
jge
(bad)
xor
or
pop
dec
call
inc
aas
xor
cvttps2pi
test
push
and
hlt
sub
ja
jmp
and
or
xchg
repnz
pop
std
cmp
loopne
(bad)
out
xor
je
daa
add
in
push
cmp
mov
dec
adc
fist
xchg
xchg
out
call
adc
jmp
nop
mov
mov
mov
mov
outs
aad
xchg
movs
into
nop
ds
mov
inc
cmc
dec
push
in
leave
sti
jg
loopne
in
in
add
(bad)
mov
ficom
sbb
enter
movs
fld
fs
and
popa
lock
mov
ins
fimul
pop
xor
jle
push
fiadd
fs
and
sub
sbb
mov
fstp
push
add
into
mov
fs
ja
jnp
lods
xchg
rcr
rcr
inc
push
jg
cmps
lahf
fcom
jmp
or
xchg
pop
scas
push
or
xchg
sti
cli
hlt
mov
push
cmp
in
xlat
xchg
pavgb
mov
add
cs
jne
dec
or
dec
inc
outs
sub
add
cmp
clc
sbb
sub
cmp
das
jbe
mov
push
je
add
push
retf
pusha
gs
jb
ins
push
sub
xor
repnz
repz
stc
sbb
cmp
dec
add
int
lds
ja
xchg
jae
dec
or
cmp
(bad)
repz
dec
mov
cmp
inc
pushf
xchg
pop
sub
xchg
sbb
retf
jne
push
mov
dec
push
mov
xchg
or
or
mov
pop
out
add
push
or
mov
jle
mov
clc
or
cwde
add
or
lahf
sbb
sbb
mov
sbb
sub
shr
into
aaa
popa
or
into
dec
jmp
popf
push
cmp
and
cmp
jne
cld
aam
mov
jnp
call
inc
fwait
(bad)
push
add
pop
push
cmp
jecxz
ins
mov
cmp
ins
xchg
test
jmp
retf
daa
xchg
jb
test
bnd
inc
push
jns
gs
neg
ret
in
rol
mov
adc
jno
and
lods
(bad)
sahf
push
loope
and
test
fistp
outs
push
dec
jg
or
test
test
add
push
or
aad
sbb
sbb
out
push
mov
push
lahf
inc
or
fcom
add
dec
out
and
cmps
pop
sbb
ret
aas
rcr
emms
ret
shr
cmp
cmp
cmp
jae
mov
dec
dec
cmps
loope
(bad)
loop
mov
and
icebp
inc
out
cmp
fadd
pop
jge
inc
jae
push
mov
test
mov
ror
fdiv
sub
mov
in
mov
aaa
inc
gs
mov
cmp
adc
(bad)
cs
retf
mov
add
je
jo
pop
push
jns
and
ss
in
sbb
scas
sub
mov
aaa
ret
loope
push
jno
in
cwde
mov
push
mov
bound
mov
test
imul
push
ins
pusha
add
sahf
das
dec
jno
pop
aaa
loope
sub
mov
jae
ret
add
push
jbe
loopne
retf
adc
arpl
push
js
push
call
dec
test
adc
(bad)
outs
inc
inc
jmp
inc
cld
repz
div
jne
and
pop
mov
pop
out
das
div
in
call
repnz
mov
adc
test
dec
dec
jns
test
popa
bound
add
pop
scas
or
mov
fsub
in
movs
mov
popf
imul
cmp
cmc
data16
sub
lds
inc
out
mov
div
sub
adc
inc
repz
push
inc
dec
inc
inc
rol
xchg
aam
ins
rcr
sub
in
xor
cmps
sbb
ffree
xchg
(bad)
scas
retf
mov
shl
jb
scas
adc
or
je
inc
jp
je
xchg
fcomp
mov
xchg
test
test
jb
xchg
and
adc
rol
ins
(bad)
outs
mov
or
rcl
mov
retf
jge
and
mov
pop
scas
cmp
out
xchg
mov
sbb
pop
retf
xor
sti
(bad)
retf
or
iret
inc
mov
xor
sahf
(bad)
ja
dec
push
add
mov
in
pop
ins
pop
sbb
in
addr16
imul
shl
xor
ja
out
out
sti
sbb
sub
or
or
sbb
fistp
arpl
mov
pop
mov
pop
js
sbb
or
outs
adc
imul
cmp
or
int3
dec
sbb
int3
inc
mov
jp
mov
dec
xchg
xchg
stos
dec
xchg
push
(bad)
pop
bound
or
cld
iret
fcmovnu
and
mov
push
xchg
cmp
mov
adc
push
int3
cld
lods
cwde
sbb
sub
jnp
test
repz
push
cmp
out
push
outs
pushf
adc
or
cmp
inc
or
mov
call
data16
jmp
jne
loope
push
imul
cmps
mov
aaa
xor
shr
mov
mov
xchg
xor
ss
cmps
test
adc
dec
out
xor
pop
ins
retf
stos
pusha
or
xchg
addr16
push
mov
mov
mov
mov
jp
and
test
lods
adc
hlt
mov
jo
nop
fisub
sbb
push
mov
sub
icebp
iret
add
pop
pushf
inc
outs
movs
cmp
fisttp
adc
imul
mov
out
mov
sbb
pop
or
ret
lea
fadd
xchg
adc
stos
pop
call
loopne
clc
out
inc
lock
push
push
pop
lahf
xor
jle
call
sbb
in
pop
popf
cmp
jecxz
outs
push
int3
push
sub
adc
ins
xor
push
std
gs
adc
out
pop
sub
adc
mov
push
fucomi
xchg
fild
push
xchg
outs
push
mov
jge
clc
shl
das
lods
or
ret
adc
or
mov
jae
adc
sbb
dec
call
jecxz
cmp
test
fistp
ins
or
adc
xchg
mov
int3
ins
xchg
(bad)
loop
shr
(bad)
jecxz
stos
add
push
jnp
xchg
push
mov
outs
aad
lods
xlat
fisttp
dec
and
cmp
adc
cmp
pusha
sub
(bad)
dec
push
int
push
inc
and
sub
mov
inc
std
(bad)
adc
jbe
xor
add
dec
cmp
dec
xor
outs
shl
add
xor
jbe
add
icebp
inc
push
pop
gs
xchg
push
jbe
adc
cmps
repnz
cld
(bad)
mov
sbb
push
dec
or
pop
mov
or
mov
loop
mov
aas
sub
cmp
rcl
xchg
scas
div
xor
retf
jae
adc
int3
cwde
stc
fimul
sub
and
inc
sub
xchg
sub
test
bound
mov
pand
push
(bad)
jl
in
jp
cwde
int3
pop
std
imul
xchg
mov
in
mov
enter
sahf
test
call
push
push
jge
lahf
cld
aas
xor
pop
mov
sbb
and
enter
out
mov
scas
mov
shl
cmp
sbb
div
xchg
mov
sub
movs
and
or
add
popf
mov
out
aaa
lahf
fwait
xchg
jg
jne
mov
or
or
mov
iret
jg
retf
out
mov
call
enter
adc
popa
pop
sahf
mov
sbb
aaa
inc
pop
enter
mov
sahf
retf
pop
mov
mov
movs
scas
cmp
pop
es
cmps
xchg
lahf
fdiv
sti
ins
popf
les
push
sub
cmp
sbb
arpl
fbstp
sbb
jmp
pop
iret
cmc
mov
jg
sub
ret
xor
jg
dec
icebp
lea
clc
xlat
rol
popa
(bad)
sub
push
sbb
ror
adc
jo
outs
in
cmp
je
xchg
movs
cdq
pop
mov
pushf
push
ds
int
adc
mov
dec
pop
daa
sbb
cmp
out
pop
mov
les
xlat
xor
bswap
call
sbb
loop
mov
mov
lock
ja
scas
cmp
adc
pop
hlt
in
shl
aaa
in
adc
or
push
out
(bad)
sub
test
mov
pop
mov
je
out
retf
xor
mov
enter
out
push
adc
mov
pusha
cli
sub
xchg
aaa
sbb
lods
test
adc
fs
dec
jb
jmp
fwait
cli
es
imul
test
mov
mov
pop
cmp
(bad)
in
push
mov
pop
cmp
(bad)
xlat
addr16
idiv
add
(bad)
fcmove
movs
push
shl
iret
in
push
in
sub
xchg
mov
es
imul
(bad)
retf
sbb
xchg
mov
(bad)
outs
mov
loopne
jb
and
rcr
(bad)
std
mov
pop
or
jmp
aad
adc
pop
pop
pop
cwde
mov
das
cmp
jno
loope
repz
int
mov
xor
dec
mov
xor
ss
and
push
out
add
ins
cwde
xor
ins
jne
inc
pop
jg
inc
adc
and
outs
cdq
and
lods
aad
cmp
loop
dec
or
push
movs
add
test
pop
mov
fmul
mov
sbb
mov
push
ins
out
shr
retf
bound
sbb
jae
mov
sub
ins
pop
stos
cld
cmp
mov
aad
arpl
inc
retf
inc
mov
mov
movs
jmp
lods
out
push
pushf
into
jmp
sub
add
cli
push
pop
xchg
dec
mov
cmp
pop
call
(bad)
pop
push
push
pop
imul
push
mov
es
pop
ins
fidivr
in
cmps
pusha
fldcw
and
push
add
mul
imul
xor
xchg
in
clc
dec
mov
retf
repz
les
mov
pop
mov
(bad)
mov
imul
xor
adc
cmps
mov
dec
fstp
iret
in
and
das
int3
pop
sahf
fimul
jle
lahf
or
enter
adc
inc
push
mov
sub
cmp
pop
rcl
fldenv
sub
leave
into
add
cdq
jle
push
mov
jmp
mov
clc
jl
cmp
enter
movs
add
pop
adc
push
(bad)
and
xchg
jge
retf
imul
mov
xor
ins
lods
shl
repnz
sbb
(bad)
push
xchg
stc
push
mov
iret
lahf
or
pop
pop
scas
movd
xor
stos
scas
out
mov
aad
lds
stos
mov
repnz
mov
loop
push
xchg
push
jbe
cdq
retf
in
jl
shr
and
xlat
jmp
int3
and
and
pop
xor
mov
cld
inc
jmp
loop
out
inc
xchg
push
pop
scas
dec
loop
or
rcl
dec
inc
mov
inc
adc
pop
inc
sbb
mov
push
cmc
shr
xor
test
leave
rol
jl
jns
aam
(bad)
fwait
sub
xor
mov
jbe
(bad)
push
cmps
dec
jecxz
xor
cmp
sub
test
loopne
and
rcr
mov
inc
sbb
jge
test
shl
sub
addr16
or
sbb
mov
sti
sub
mov
jecxz
pop
fist
push
mov
sub
aaa
jp
shr
ja
sahf
nop
sub
pushf
int3
aam
mov
xchg
leave
stos
xor
popf
sbb
pop
enter
pop
test
jns
fisttp
mov
lock
cmp
movs
xchg
mov
test
loopne
cmp
xchg
inc
jae
or
scas
aas
enter
lahf
int3
add
daa
sti
push
mov
mov
xchg
inc
loop
lds
das
or
mov
mov
mov
xchg
das
fcom
inc
arpl
(bad)
pushf
fcmovnb
jo
movs
out
es
aam
jb
dec
mov
jne
dec
and
(bad)
adc
lahf
pushf
pushf
pop
add
out
add
push
or
out
mov
dec
(bad)
es
add
in
cwde
jne
(bad)
stc
test
inc
cmp
pop
cmp
lock
fcmovu
sub
push
retf
pop
jo
dec
loope
push
pop
xor
cmc
mov
and
jmp
lds
add
aam
mov
xchg
cmc
push
cmp
mov
pop
pop
and
jp
cdq
(bad)
pop
mov
aad
push
pop
shl
xchg
sbb
dec
je
nop
add
mov
pop
fwait
push
enter
xor
sbb
inc
xor
dec
jnp
lods
inc
or
dec
xor
loop
test
jl
repnz
jmp
cli
mov
std
pop
emms
inc
das
inc
ds
jge
outs
cli
sub
lea
pop
cmp
add
in
fcomp
pop
out
jg
fimul
call
jne
fld
cmp
cmc
mov
call
and
out
push
int
mov
mov
loopne
lods
js
cwde
lods
pop
stos
xchg
aam
and
pushf
(bad)
xchg
cmp
retf
into
jbe
push
sub
ret
scas
lods
push
pop
std
adc
cmp
in
dec
das
sbb
out
outs
ins
dec
rcr
jg
inc
mov
adc
or
ja
push
push
dec
cmp
adc
fldcw
xor
cdq
sub
sub
dec
in
xchg
sar
cwde
inc
repnz
adc
ror
aaa
test
mov
popa
mov
jb
imul
jge
aas
mov
push
cmp
or
jns
iret
popa
aad
jmp
scas
mov
js
leave
stos
cmc
sub
pop
lods
aad
(bad)
xchg
shr
sub
mov
addr16
outs
popa
dec
rcr
xor
aam
pop
fsubr
fs
mov
fs
test
lahf
addr16
or
fistp
data16
mov
dec
loopne
push
jmp
mov
iret
f2xm1
enter
push
(bad)
sbb
adc
icebp
scas
push
cld
movs
fwait
mov
cmps
icebp
push
data16
cmp
add
xor
cli
jmp
jg
out
shl
pop
sub
mov
jmp
sar
or
stc
xor
fisttp
dec
cdq
mov
addr16
mov
xchg
(bad)
imul
aad
jecxz
(bad)
fisub
ss
in
xor
fild
cmps
cmp
arpl
sub
scas
mov
cmp
sub
mov
or
int
call
mov
jo
mov
leave
das
sti
fldcw
cmp
xchg
leave
jne
jnp
dec
shl
fldcw
icebp
cdq
xor
push
add
fnstenv
dec
push
retf
mov
push
cmp
dec
pop
mov
loope
add
ret
jecxz
add
push
mov
mov
adc
fwait
inc
retf
repnz
jmp
aad
push
aaa
sbb
aaa
sub
mov
enter
sbb
retf
jle
cmps
jge
dec
std
push
mov
sub
(bad)
dec
int3
das
lds
dec
xor
sbb
enter
fbld
cwde
aaa
or
jge
add
dec
lea
retf
pop
jns
clc
inc
in
inc
stos
mov
(bad)
cld
daa
adc
sbb
sub
sub
les
bound
cmp
cmp
push
lock
mov
sbb
pop
cld
inc
mov
dec
cmovae
fidiv
(bad)
icebp
in
dec
pop
imul
fild
jmp
sub
hlt
pop
cli
inc
shl
sbb
xor
xor
sbb
inc
into
mov
cmps
test
aas
popf
pop
inc
jecxz
push
xchg
js
mov
cmp
push
lods
pop
jl
push
sbb
or
sub
shr
in
dec
pop
pop
ret
push
lods
xor
rcr
cmp
xchg
int3
inc
out
jp
cmp
shl
icebp
sahf
retf
into
jb
and
mov
jno
iret
mov
adc
stos
and
leave
push
nop
dec
mov
test
out
xor
or
mov
pusha
jbe
ror
daa
cmp
lahf
adc
push
xor
jb
and
sar
dec
stos
enter
xchg
neg
sub
outs
ja
int3
pop
fwait
adc
inc
leave
sub
or
jno
(bad)
xchg
ficom
inc
inc
in
ret
cmp
xchg
ss
ins
xor
sbb
movs
xchg
pop
rol
or
in
pop
dec
fxam
loopne
ror
shr
jecxz
loopne
push
dec
pushf
lea
mov
aad
mov
dec
enter
xor
add
xchg
mov
and
cmp
mov
mov
xchg
test
jle
sbb
sahf
jb
jmp
mov
test
ret
sub
je
das
cmp
cmp
mov
mov
push
mov
or
jecxz
dec
cwde
leave
dec
ins
leave
push
aas
(bad)
inc
jbe
mov
hlt
retf
jp
push
aas
stos
scas
in
scas
mov
jge
dec
imul
lods
mov
dec
pop
jg
and
pop
sbb
sti
push
aam
cmp
js
ss
xor
das
gs
cmc
push
xor
adc
movs
not
jl
dec
sti
pop
jmp
add
nop
xchg
mov
cmp
scas
mov
cmc
xor
out
sub
mov
mov
dec
or
cdq
jp
fsubr
ins
lods
pop
out
sub
arpl
xor
jge
mov
mov
movs
inc
div
cmp
in
imul
adc
ret
fwait
xor
push
mov
xor
dec
xchg
xchg
push
cld
xor
cmps
outs
xchg
jge
inc
jbe
jg
push
xor
jmp
mov
js
mov
cdq
mov
leave
ins
mov
pop
rol
cli
jecxz
imul
lahf
pop
mov
out
xchg
push
mov
pop
xchg
sbb
or
loope
movs
shl
and
inc
pop
es
lahf
retf
cwde
cld
sahf
mov
not
fwait
(bad)
call
xchg
mov
sahf
fcomi
mov
fld
ret
xchg
daa
mov
out
ins
pop
jae
fdiv
dec
dec
cmp
test
mov
shr
inc
out
push
sbb
test
add
es
test
jl
fnstcw
into
clc
call
add
pop
inc
repnz
lock
outs
xor
js
jle
movs
add
mov
lahf
inc
cmp
movs
fdiv
mov
test
dec
sbb
and
add
push
add
out
repz
mov
xchg
ficom
mov
mul
in
push
pop
int
mov
push
add
adc
out
int3
sub
mov
ret
cmc
and
xchg
int3
out
sbb
rcr
push
xor
dec
xor
loope
sub
xlat
rcr
inc
test
xchg
scas
sub
leave
ins
scas
outs
rdtsc
(bad)
fisttp
lods
scas
mov
push
(bad)
push
dec
int3
repnz
inc
cmp
(bad)
in
sbb
cld
xchg
xchg
push
mov
(bad)
sti
jg
xchg
idiv
pop
xchg
stos
out
or
shl
ret
rol
and
xchg
mov
nop
cli
gs
push
scas
jno
and
or
adc
or
test
inc
push
into
xor
clc
xchg
pop
or
mov
xchg
jns
sti
lods
dec
push
push
add
jle
ret
xor
mov
mov
xchg
cwde
push
mov
mov
out
inc
push
jle
aam
into
mov
lock
pop
mov
and
xor
inc
stos
or
fisubr
pop
adc
pop
outs
sub
or
jecxz
iret
retf
push
inc
cmp
jns
je
mov
(bad)
sub
push
mov
xor
xor
pop
and
or
scas
fwait
movs
mov
ret
xor
push
mov
test
xchg
ja
movs
cli
mov
fs
push
int3
inc
add
ror
jle
cdq
popa
(bad)
xchg
jecxz
fld
test
retf
repz
cli
das
cmp
fs
in
inc
mov
add
mov
mov
ret
sahf
dec
jp
xchg
(bad)
js
sbb
xor
push
mov
pop
in
adc
mov
shl
int3
or
mov
jno
jae
data16
scas
out
sbb
lahf
in
in
xchg
loope
mov
xor
test
xchg
xor
sbb
cmp
jp
in
dec
jmp
(bad)
mov
retf
mov
js
pusha
ds
(bad)
ins
out
sub
repnz
mov
push
jecxz
mov
sub
pop
stos
cmp
jo
pop
sub
mov
fist
cmp
jo
fwait
retf
xor
sahf
jbe
and
loop
dec
jbe
shl
mov
xor
int
xor
cdq
xor
test
nop
mov
jecxz
rep
pop
and
dec
jb
test
cmc
loop
pop
pusha
dec
mov
jecxz
xor
mov
dec
ja
jns
inc
lea
call
lea
add
add
lds
push
dec
xchg
add
mov
shr
lock
in
cli
call
cli
and
imul
pop
imul
and
lahf
or
jnp
fst
mul
(bad)
test
aas
xchg
not
(bad)
sbb
dec
shl
xor
test
xchg
xchg
jae
ret
fmul
dec
push
call
push
dec
xor
movs
retf
aad
daa
push
(bad)
(bad)
add
in
cmp
call
fcom
or
mov
mov
out
inc
cmp
ja
(bad)
xor
fbstp
pop
cdq
(bad)
retf
lds
xor
and
lock
pop
sub
push
mov
inc
cmp
mov
scas
ss
sub
(bad)
jecxz
xchg
cmp
aad
sub
std
call
enter
xor
fild
cmp
cmp
lods
addr16
ficom
dec
pusha
mov
mov
mov
adc
stos
ret
mov
arpl
es
mov
fild
sar
push
and
dec
movs
mov
je
jp
pop
aaa
jbe
push
xchg
shr
and
mov
dec
aas
mov
inc
outs
pop
and
shl
enter
data16
rcr
inc
cdq
cmp
pop
cmp
das
adc
paddw
cmp
dec
test
call
imul
cli
dec
or
mov
or
cmp
fsub
data16
out
cmps
pop
enter
loop
aas
mov
arpl
stos
bound
mov
icebp
push
xor
out
retf
mov
dec
sub
aaa
enter
adc
(bad)
call
iret
mov
and
mov
imul
mov
pusha
fsubr
rol
push
aam
fsubr
inc
or
pop
and
jmp
and
test
push
fucomp
pop
ja
pop
data16
xor
or
cdq
jmp
jle
dec
cmp
std
mov
push
retf
lods
lods
js
mov
int
add
jns
loopne
dec
mov
sub
imul
mov
movs
xchg
xor
mov
pop
fild
xor
xchg
mov
mov
push
pop
mov
cmp
adc
pop
shl
retf
loope
loope
cmp
or
mov
jecxz
out
and
mov
shr
(bad)
jmp
call
int
cmp
data16
sar
mov
outs
fcmovnu
adc
xlat
(bad)
mov
xor
adc
adc
mov
out
fst
out
mov
mov
int
out
repnz
je
add
int
cli
sbb
rcr
and
in
sub
es
lahf
xchg
retf
scas
mov
sbb
shl
in
and
add
call
jno
sub
nop
enter
adc
gs
mov
mov
stos
and
pop
dec
inc
ins
jo
mov
jecxz
and
js
js
sub
ret
xchg
sbb
pop
mov
jmp
cdq
icebp
js
sbb
and
xor
mov
je
mov
sahf
mov
dec
test
dec
mov
mov
push
(bad)
mov
sub
mov
sbb
sbb
int3
sub
mov
add
sub
cmp
je
scas
xor
or
jno
cmp
sbb
mov
and
js
fstp
xchg
gs
jge
ds
stos
aad
cmp
jno
ins
es
push
push
and
rol
jle
lods
cwde
test
sbb
retf
cdq
mov
mov
add
xlat
in
inc
pop
jns
addps
out
(bad)
push
movs
sub
test
inc
jb
jo
outs
and
push
add
fisttp
jle
(bad)
xchg
test
imul
clc
dec
dec
lock
pop
test
mov
add
cmp
push
add
fsubr
dec
call
sti
int3
outs
sub
jno
xchg
add
xor
cs
jbe
cwde
sub
push
adc
int
(bad)
shl
mov
xchg
out
push
stos
pop
inc
xchg
repz
inc
bound
fwait
sti
test
repz
mov
or
xor
cmp
fimul
pop
dec
sahf
adc
sar
inc
mov
sub
out
ss
mov
fwait
shl
mov
int
icebp
mul
add
ret
sub
push
push
dec
shr
add
xchg
fidivr
xchg
cdq
(bad)
ss
or
jl
xor
mov
test
and
(bad)
nop
(bad)
jp
stos
dec
iret
dec
(bad)
mov
jo
xchg
jo
and
pop
imul
push
mov
(bad)
out
jl
inc
mov
aas
push
push
nop
dec
mov
add
push
inc
std
sub
cmp
rcl
cs
push
and
inc
movs
cmp
sahf
popf
sub
ja
mov
out
sti
repz
adc
mov
test
(bad)
fmul
adc
jge
and
xchg
add
adc
jg
out
outs
mov
push
fwait
out
xchg
cmp
pop
in
stos
test
fild
sub
jecxz
jno
mov
sbb
xchg
lock
xchg
pop
add
sbb
test
mov
sub
mov
jnp
out
xor
cmc
rcl
icebp
(bad)
fadd
ds
sti
mov
jnp
inc
push
pop
dec
pop
xchg
mov
sar
ror
int3
in
das
mov
xchg
mov
jb
pop
jno
ret
imul
jl
ja
adc
and
stos
mov
(bad)
test
not
sub
addr16
(bad)
or
add
pop
fcmove
jb
shr
sub
mov
adc
jmp
mov
adc
stos
mov
retf
out
popf
ret
ret
loop
inc
cmp
inc
sub
cmps
mov
mov
xor
sub
adc
cmp
sbb
popf
mov
push
ss
cs
jp
dec
mov
das
repz
jmp
pop
rcr
jmp
js
dec
jmp
int
pusha
(bad)
cmp
dec
imul
lock
(bad)
jno
hlt
jne
lock
test
adc
push
cwde
aaa
mov
or
inc
jnp
ret
push
nop
arpl
and
or
jb
pop
cdq
pop
adc
ins
sub
dec
outs
mov
ja
into
mov
pop
mov
(bad)
mov
inc
dec
(bad)
cmp
push
pop
pop
push
push
cmps
mov
mov
test
es
jae
cmps
adc
jecxz
and
(bad)
mov
cmp
lock
sti
inc
cdq
dec
jnp
mov
jnp
cmp
sub
jle
bound
scas
mov
ja
cmc
scas
(bad)
push
mov
cmp
sub
enter
xchg
idiv
mov
mov
test
xor
aam
xor
xchg
xchg
daa
lds
lds
pop
dec
fild
push
fwait
movnti
jg
je
sub
jb
in
jl
rcr
(bad)
or
push
imul
shl
ret
or
add
xor
pop
xchg
add
mov
mov
imul
pop
pop
loopne
jmp
imul
jp
test
cmp
daa
pop
pop
rep
fistp
cmp
pop
jns
loope
fmul
sub
hlt
push
mov
imul
rcl
fld
dec
dec
rcr
mov
mov
jne
xor
icebp
xchg
scas
lods
jnp
loop
test
and
and
inc
mov
or
pushf
xchg
sub
call
test
push
inc
push
sti
sti
stos
mov
dec
sahf
mov
xchg
mov
loope
mov
sub
outs
cmc
mov
xor
add
cs
push
aam
jmp
in
in
mov
out
ja
mov
sbb
push
mov
mov
fs
and
(bad)
mov
test
xchg
pop
fs
fild
adc
push
mov
cmp
fwait
test
jnp
jne
sbb
inc
fist
enter
and
push
jb
shl
or
add
imul
retf
std
push
loop
shl
outs
jle
sbb
cmps
xor
je
call
stc
in
shl
out
mov
mov
sbb
xor
ja
add
and
mov
mov
adc
jl
xchg
popa
in
inc
loope
(bad)
ficomp
sti
sti
xor
and
jo
popa
fild
sub
xchg
popa
cmps
test
dec
mov
sub
jge
bound
je
shr
cmps
sti
pusha
data16
and
popa
jno
adc
add
mov
rcr
sub
cs
dec
pop
jb
lods
jne
sar
stc
dec
retf
hlt
repz
xor
add
mov
arpl
pop
dec
outs
jle
dec
and
loopne
loope
and
or
jns
in
inc
sbb
xor
xor
dec
pop
lock
rcr
retf
neg
cwde
leave
imul
push
jnp
dec
and
sbb
data16
jp
mov
aad
jnp
jmp
(bad)
push
mov
push
int3
fs
in
(bad)
mov
movs
retf
push
adc
je
aad
jae
test
sbb
and
jmp
scas
cmp
jb
cmp
or
sub
popa
cmp
mov
xchg
xchg
sub
(bad)
dec
mov
sub
imul
add
dec
leave
and
rol
jno
cmps
int3
add
enter
dec
jo
js
popa
lea
jmp
jmp
xchg
mov
adc
clc
loope
ins
call
xchg
mov
retf
cmp
xlat
cmp
dec
jmp
ret
stos
call
pop
pushf
out
push
mov
sub
xchg
bnd
stc
cmp
push
xchg
das
out
adc
or
enter
sbb
scas
sti
mov
fld
mov
(bad)
jae
mov
mov
leave
das
inc
push
mov
arpl
outs
cmp
(bad)
ja
arpl
push
xchg
out
xchg
push
mov
out
cdq
jno
pusha
dec
ds
mov
neg
inc
xchg
inc
pushf
adc
scas
push
mov
or
push
aaa
rcl
pop
lea
aas
(bad)
pushf
stc
mov
pop
jne
cmp
retf
adc
in
xor
cmc
loop
and
test
lods
and
test
rol
test
retf
(bad)
ins
xchg
jmp
(bad)
or
lods
and
push
ins
ins
inc
jmp
jp
sub
mov
pop
xor
xor
lods
int
(bad)
aam
mov
into
mov
mov
inc
call
stos
clc
mov
out
push
ror
pop
or
jnp
into
in
dec
sbb
cmps
ds
jb
ss
arpl
add
pop
sub
fisub
adc
dec
dec
and
mov
imul
sbb
xor
xchg
add
or
push
mov
inc
jno
push
movs
push
add
je
add
sbb
imul
cwde
sub
mov
jns
rcl
and
adc
jge
xchg
push
push
mov
sbb
push
xchg
fs
jmp
xchg
jns
inc
sbb
ret
and
adc
jg
cmp
cmp
pop
shl
rol
das
mov
cmp
movs
aaa
push
dec
imul
jnp
cdq
lahf
popa
ds
(bad)
cmp
mov
stos
retf
dec
push
outs
sbb
add
mov
add
jb
cs
fsubr
jbe
push
arpl
dec
test
adc
and
xor
test
cmps
jle
jb
popf
inc
mov
fidivr
mov
pop
loope
fistp
into
pop
sub
lock
test
push
push
outs
or
xor
push
pop
xor
stc
or
lea
sbb
push
inc
ret
sbb
xor
inc
push
test
jmp
and
(bad)
jmp
mov
cli
in
addr16
dec
lahf
ja
mov
mov
sbb
outs
dec
(bad)
xor
push
dec
jns
mov
mov
aam
xchg
jge
add
push
cli
mov
pop
shr
pusha
cdq
lods
dec
out
lds
ins
cwde
inc
lods
ss
sub
fwait
mov
nop
push
enter
clc
retf
(bad)
rcr
jae
mov
xlat
mov
xor
jns
out
in
fdivr
pop
test
inc
repz
popa
jg
adc
(bad)
shr
and
pop
xlat
je
cmps
lods
int
cwde
adc
ret
fisub
pop
jmp
xchg
lahf
mov
aaa
inc
es
mov
mov
or
sbb
bound
je
rcl
stc
repz
pushf
adc
out
pop
inc
popa
cmp
icebp
push
add
cmp
clc
dec
inc
and
fist
and
cdq
xor
push
(bad)
sub
lahf
jmp
pop
sbb
popa
ss
dec
(bad)
clc
imul
scas
mov
or
into
ror
or
ss
stos
nop
push
stos
mov
and
pop
jl
push
fmul
push
dec
aaa
ins
data16
dec
lea
loope
out
adc
push
mov
aad
in
loop
or
aaa
push
sbb
jb
jmp
sub
adc
mov
jno
repz
adc
fiadd
das
mov
stos
sub
out
mov
fisub
ss
int
das
xor
scas
push
scas
mov
add
in
iret
lods
mov
mov
cdq
xchg
mov
jns
or
adc
jne
mov
aam
ja
sbb
xor
dec
push
xlat
ins
xchg
mov
imul
lea
aaa
add
inc
scas
or
xchg
xor
movs
xor
sub
clc
fucomp
or
test
inc
imul
hlt
call
gs
mov
test
or
leave
mov
inc
cmp
or
test
ins
inc
mov
in
pop
mov
test
in
icebp
shl
pop
sbb
adc
dec
(bad)
shrd
sar
inc
or
sar
out
xchg
pop
loopne
sbb
jmp
xlat
test
xor
ret
adc
ins
cld
pop
jbe
jp
fstp
or
pop
aas
fnstsw
pushf
push
movs
xor
jl
enter
stos
call
es
mov
inc
mov
dec
stos
sar
xor
lods
push
dec
mov
call
pop
mov
dec
xchg
sti
shr
dec
jb
(bad)
mov
mov
push
or
in
pusha
shl
cmps
cmps
call
(bad)
pushf
mov
sub
aas
pop
fstp
fidiv
pop
or
jmp
push
cmp
pop
and
repnz
mov
cwde
enter
out
xchg
fisttp
enter
mov
jle
add
mov
scas
jo
adc
je
cld
(bad)
sub
mov
add
cmp
icebp
mov
les
int3
adc
lahf
loopne
mov
dec
jl
stos
repz
mov
add
or
in
bound
sub
scas
mov
fs
push
(bad)
repnz
int
fisub
(bad)
cmps
inc
mov
pop
call
and
adc
jne
test
and
adc
or
xor
jae
add
push
lahf
sub
adc
or
mov
xchg
in
lods
fadd
out
add
test
outs
xchg
jns
push
ss
inc
pop
push
test
xor
sub
and
mov
imul
jmp
fld
xchg
outs
add
push
pushf
dec
lea
outs
mov
cli
adc
and
arpl
jno
or
xchg
aaa
lock
scas
cdq
cmp
div
inc
inc
push
stc
sub
push
enter
push
movs
sahf
mov
movs
or
ins
inc
mov
repz
pop
js
in
xor
out
xchg
fsubr
push
movs
cmp
add
ss
push
(bad)
push
and
popa
pop
iret
sub
cmp
sub
fild
es
out
sub
test
mov
lock
inc
jns
adc
xchg
push
jmp
out
mov
fistp
inc
inc
add
je
sbb
and
dec
sbb
outs
sub
aaa
stc
xlat
lods
pop
and
imul
icebp
pop
inc
pop
popa
mov
fld
pop
retf
ss
test
mul
call
inc
pop
(bad)
hlt
scas
popf
pop
inc
scas
data16
xlat
retf
retf
stos
lds
std
xchg
or
mov
dec
sub
inc
xor
xchg
std
cmp
or
in
jns
sti
jnp
fstp
lock
test
cdq
mul
xchg
popa
shl
and
pop
stos
loopne
sub
movs
mov
add
retf
aam
push
mov
adc
dec
xchg
mov
sar
mov
enter
jl
das
jo
iret
out
cmp
mov
movs
loop
enter
movq
sub
sbb
cmps
adc
sbb
leave
loop
or
mov
ins
pop
popf
fsubrp
mov
jmp
(bad)
inc
push
mov
fcomp
dec
fs
cmp
dec
pop
jg
sbb
shr
fistp
xchg
retf
dec
jl
rcr
test
dec
enter
ins
push
fisub
jns
xor
add
inc
pop
mov
sub
or
and
aad
mov
cmp
mov
mov
mov
repnz
sbb
sbb
lea
jge
inc
mov
arpl
and
test
pop
loope
mov
mov
popf
inc
fsub
mov
loopne
mov
xor
cmp
jo
or
add
stc
adc
aad
lods
cmp
ficom
bound
cwde
test
out
aaa
dec
sub
xor
mov
xchg
mov
jge
mov
pop
xchg
fisub
mov
and
ret
cmp
mov
fcom
stc
mov
sbb
rcr
fwait
retf
push
pop
sub
add
inc
push
imul
dec
inc
mov
iret
adc
xor
sub
fwait
mov
cmp
outs
nop
mov
into
es
jb
leave
mov
adc
sbb
inc
push
adc
pop
adc
mov
dec
retf
and
ins
pusha
sti
pusha
jl
fst
mov
jl
(bad)
jo
cld
shr
inc
or
jle
call
lods
fcmovnbe
loopne
pop
call
jle
or
ins
fcomp
out
mov
inc
xchg
or
xor
test
shl
adc
mov
push
fxch
loope
mov
not
dec
pushw
stos
stc
aaa
inc
aas
fs
adc
adc
sbb
enter
loope
cmp
fs
ins
loope
in
mov
das
js
mov
or
pop
dec
or
icebp
sbb
dec
push
fldcw
jle
ins
loop
cmps
fldenv
adc
jge
das
dec
rcl
out
cmc
sub
mov
movs
and
mov
fsubr
and
cmps
fstp
adc
pop
rcr
and
shl
ss
or
and
call
xor
cmps
cmps
loope
mov
lods
mov
out
mov
aam
jb
inc
xor
mov
mov
lock
sbb
sahf
pop
outs
inc
xchg
fld
push
pop
(bad)
lahf
fwait
adc
add
xor
inc
mov
loope
mov
(bad)
aas
xchg
scas
pop
or
or
cmps
mov
movs
xchg
cmp
inc
fmulp
out
enter
adc
xchg
dec
push
dec
test
inc
in
and
xor
test
movs
hlt
xor
xchg
das
inc
sbb
push
mov
pop
adc
mov
inc
das
or
sub
pop
sbb
call
(bad)
repz
adc
popa
bound
jo
or
repnz
inc
cmps
lods
stos
sar
loope
sti
in
xchg
xchg
dec
test
jl
mov
xchg
mov
or
jecxz
cli
ins
jns
cmps
xchg
and
inc
and
cmp
cmp
les
xchg
mov
fiadd
push
loop
out
jmp
cmps
fs
jmp
test
popa
or
das
jmp
test
mov
jmp
cmps
not
or
xchg
nop
movq
xchg
and
adc
push
or
pop
cmp
clc
outs
sbb
sti
dec
mov
into
xor
sub
cld
mov
mov
sub
fs
clc
stos
test
je
ret
sub
enter
jae
clc
and
mov
mov
shl
mov
and
cmp
pushf
inc
xchg
add
out
jae
test
dec
xor
mov
stc
in
es
dec
or
add
out
jnp
into
es
ret
inc
cs
cli
push
rcr
shl
cld
mov
pop
jg
sub
pop
clc
xlat
test
ds
test
jmp
std
and
adc
mov
mov
or
sti
xchg
mov
shl
ins
mov
mov
mov
mov
ret
jge
dec
pusha
stc
lock
mov
jns
div
ins
cmps
popa
mov
cmp
enter
push
jb
add
loop
dec
sar
ins
cs
sbb
(bad)
ror
xchg
rcr
aam
dec
cmp
and
(bad)
(bad)
sar
lods
xchg
inc
test
mov
push
push
sub
lock
pushw
(bad)
adc
pop
leave
add
jecxz
pushf
ins
mov
and
out
xor
jmp
fnstenv
je
sub
pop
lods
xchg
arpl
out
gs
rcl
retf
loopne
push
rol
call
xchg
mov
xor
(bad)
mov
jle
jg
in
shl
sbb
ja
cld
shr
js
inc
call
stc
movs
jnp
imul
adc
dec
aaa
push
inc
lods
push
push
mov
lds
xor
mov
xor
scas
test
int
adc
(bad)
out
push
push
xchg
mov
neg
add
fimul
jmp
arpl
loope
mov
jg
repz
mov
test
and
cdq
fsubrp
sbb
jl
(bad)
test
xor
pop
mov
(bad)
fadd
cs
test
stc
stos
rol
loopne
repnz
jge
sbb
push
sub
loope
scas
push
jecxz
and
push
cs
out
and
mov
push
out
popf
outs
test
mov
jns
jecxz
inc
repnz
sub
bound
int
push
cmp
or
cmp
je
mov
inc
call
sub
and
sub
sbb
(bad)
fstp
mov
dec
lods
enter
dec
fdivr
dec
add
adc
or
fwait
pop
and
cmp
xor
cmp
mov
aad
stc
cmps
pusha
sub
mov
push
xor
outs
sbb
xchg
fist
movs
pop
je
push
mov
push
adc
(bad)
cmp
add
out
sbb
shl
or
cmp
cli
pushf
jbe
and
rol
jl
int
inc
sub
icebp
mov
xchg
fwait
sub
mov
dec
in
cld
enter
arpl
sahf
adc
shl
push
aaa
or
xor
jbe
cmp
aad
imul
jle
fiadd
and
shl
sub
outs
sub
(bad)
push
clc
dec
pop
sub
sbb
(bad)
arpl
mov
push
mov
push
jp
xchg
test
pushf
mov
retf
and
cli
ficomp
mov
dec
add
sub
mov
push
xchg
mov
cmc
xchg
or
dec
pop
not
cs
dec
pop
lock
mov
lahf
movs
push
retf
adc
imul
das
sub
cs
add
repnz
sub
test
cmc
jp
mov
cmp
jae
jae
sub
xor
mov
add
pop
inc
mov
mov
cwde
sub
lds
retf
jns
js
ja
xchg
in
and
test
daa
inc
dec
sub
fs
dec
xchg
loope
mov
dec
iret
loopne
mov
aad
mov
push
ret
fnstsw
and
(bad)
mov
inc
xchg
pop
jmp
iret
mov
jnp
std
scas
into
out
repnz
ret
test
mov
pusha
xchg
hlt
je
sub
out
xor
mov
in
popf
or
or
imul
inc
and
cmp
pop
scas
jmp
mov
ja
in
xor
push
popf
leave
jo
sar
sahf
xor
push
leave
lds
jmp
dec
mov
sub
add
loope
mov
nop
mov
das
dec
pusha
xchg
(bad)
iret
ja
mov
adc
cmp
rcl
repnz
orps
jecxz
(bad)
fst
inc
sbb
cdq
xchg
mov
loope
xor
arpl
or
enter
mov
scas
hlt
fcomp
adc
sbb
jne
and
xchg
in
mov
scas
or
out
cmp
mov
jb
(bad)
adc
or
sbb
or
mov
or
mov
sahf
pcmpgtw
pop
or
xchg
adc
push
inc
loope
jmp
nop
xchg
mov
lods
push
xor
cmp
and
aas
mov
pop
mov
stc
shl
je
ins
mov
xchg
ins
mov
ja
sub
hlt
js
push
add
jp
mov
mov
dec
aas
dec
arpl
push
aam
outs
jnp
int
std
sbb
popa
sar
pop
test
mov
cmps
fs
cmp
xchg
in
cmp
repz
cs
shld
pop
lods
ins
ret
or
shr
push
mov
push
cli
cli
shr
in
jnp
inc
cmp
mov
push
data16
ret
pop
mov
mul
loope
sysexit
imul
adc
xchg
xchg
imul
es
repz
xor
jmp
arpl
in
stc
and
test
fst
ins
adc
loop
xor
sbb
imul
aam
ins
dec
push
sub
dec
mov
push
jp
inc
ror
cmp
mul
daa
test
fcom
movs
cmp
add
push
cli
(bad)
mov
xlat
ret
pop
mov
push
outs
(bad)
mov
fsub
add
jmp
push
inc
shl
and
js
das
leave
fnsave
pusha
jl
push
cwde
add
pushf
mov
xlat
adc
inc
and
fcmovbe
adc
add
mov
les
out
rcr
or
jbe
sar
xchg
pop
sub
or
movs
pop
sub
dec
dec
jmp
test
mov
inc
(bad)
mov
shr
xor
pop
sub
or
xchg
jmp
lods
xor
jmp
push
sbb
push
and
mov
dec
mov
inc
adc
mov
cmp
int
fidivr
and
cld
ror
cdq
stc
dec
inc
enter
inc
xchg
mov
fs
idiv
mov
cdq
(bad)
shl
ret
and
cmp
xchg
push
bound
dec
adc
push
addr16
stc
sub
dec
(bad)
push
aam
repz
mov
out
ret
or
lock
jb
sub
xchg
push
or
add
dec
popa
pop
call
push
pop
mov
sbb
cs
fcom
cmp
pop
mov
mov
sti
mov
xor
inc
mov
add
shl
and
cwde
aaa
dec
adc
push
cld
mov
movs
iret
cmp
pop
cmp
test
jmp
push
std
dec
sub
xor
mov
movs
jno
cmp
dec
pop
inc
push
(bad)
call
and
mov
lahf
pop
ficom
(bad)
int
push
popf
dec
push
xor
test
stos
loop
addr16
xor
fild
cmp
mov
mov
(bad)
js
jnp
bswap
repnz
mov
dec
dec
sub
cmps
int
sub
lock
mov
inc
push
imul
call
add
push
jl
jnp
fwait
enter
in
pop
push
sub
mov
jne
mov
xchg
mov
dec
cmp
stos
dec
ss
mov
jnp
mov
mov
pop
test
sbb
mov
neg
dec
ja
pop
dec
pop
push
add
or
sbb
cmp
shl
push
aaa
(bad)
cmp
add
dec
(bad)
test
popa
js
pop
(bad)
cmp
imul
dec
adc
(bad)
push
inc
sub
jmp
cmp
pop
pop
add
loopne
or
mov
inc
sub
lahf
in
add
icebp
pop
retf
sub
scas
mov
popa
fldenv
loop
jl
xor
jne
(bad)
mov
sbb
out
or
movs
mov
mov
xchg
cmps
cmp
imul
rcr
adc
call
pop
xor
ret
lea
mov
xor
push
sbb
dec
loope
jmp
add
sbb
add
jns
nop
dec
aaa
push
leave
jmp
jg
adc
daa
shl
and
popf
mov
movs
push
jg
movs
cmps
push
clc
jge
call
(bad)
rcr
sahf
rcl
or
test
inc
xor
and
(bad)
std
jb
mov
(bad)
mov
jno
add
(bad)
popf
js
cmps
aam
leave
cli
sub
mov
adc
(bad)
xor
stc
add
push
xor
mov
out
adc
cmc
jl
jge
lods
mov
mov
dec
mov
or
pop
out
pushf
clc
(bad)
pop
xchg
and
cdq
loopne
out
jno
jo
fbld
repz
inc
scas
mov
js
push
addr16
xor
push
xchg
sbb
mov
mov
cmps
push
jno
or
cmp
and
cmp
lods
jno
or
mov
sahf
loope
jecxz
adc
add
data16
daa
dec
ds
mov
pop
mov
xchg
inc
js
xchg
push
lahf
fsubr
adc
(bad)
sbb
push
pop
sbb
in
xchg
je
outs
and
or
leave
cmp
sub
jbe
jp
std
mov
xor
fst
nop
add
mov
xor
clc
bound
test
ss
inc
not
xchg
add
mov
mov
add
xchg
xor
xchg
test
std
hlt
jnp
loope
test
inc
jo
dec
push
xor
push
cli
push
in
retf
sub
adc
or
(bad)
sub
or
loop
pop
push
movs
xchg
lock
mov
fcmovb
sub
xor
add
add
inc
(bad)
push
xchg
xchg
outs
mov
ret
mov
inc
sbb
les
xchg
outs
aad
lods
div
sbb
in
in
test
pop
jge
(bad)
or
pop
xchg
mov
bound
push
pop
ins
mov
or
das
pop
sub
call
push
inc
sub
pop
rcr
jl
sbb
and
mov
and
push
sub
data16
cmp
cmp
mov
repnz
mov
lods
pop
pop
xor
call
jg
inc
dec
jg
pop
out
enter
loope
mov
popf
add
push
pop
(bad)
popf
data16
xor
mov
fsub
imul
pop
imul
(bad)
cmovl
jno
aam
jge
sahf
dec
call
jo
into
pop
xchg
xor
out
fldenv
je
mov
call
imul
lds
mov
xchg
in
bound
lods
inc
cld
call
xchg
add
and
push
push
mov
cmc
xor
adc
or
xchg
mov
xor
mov
cmps
std
adc
xchg
pop
je
test
fsubr
adc
and
inc
das
out
and
inc
pop
repz
mov
xor
sbb
sbb
rol
ret
out
dec
ja
js
cli
ret
adc
sti
sub
mov
daa
mov
xchg
lods
and
pop
popf
clc
rol
jle
cmc
les
pop
stc
icebp
int3
mov
cmps
fcom
adc
popf
outs
rcl
inc
cmc
rol
mov
(bad)
jbe
adc
or
test
jo
scas
adc
or
rcr
push
pop
mov
jmp
mov
fld
aas
push
pop
daa
push
bound
or
push
ja
shl
dec
cs
mov
(bad)
jg
add
inc
adc
rol
mov
inc
(bad)
sub
jb
pop
inc
and
stos
adc
fwait
add
out
xor
jnp
retf
les
ja
lock
pop
cld
jae
mov
add
std
or
jge
or
jecxz
cdq
leave
add
sahf
inc
mov
icebp
pop
fiadd
loope
ins
out
push
add
cmps
ficomp
lock
pop
mov
jp
adc
jae
(bad)
xlat
jmp
pusha
int
mov
sti
fadd
ds
or
add
(bad)
fcmovbe
dec
jp
or
sub
mov
popf
jo
jmp
repz
xor
xor
fcomp
test
(bad)
retf
mov
sbb
mov
jmp
pop
pusha
jg
jbe
adc
iret
add
scas
popa
adc
xor
hlt
jo
fadd
std
stos
rcl
ror
dec
sbb
out
fmul
mov
jg
mov
and
or
ss
jp
or
loop
sar
push
and
sahf
xor
sub
lods
sub
mov
jmp
movs
jne
(bad)
mov
xor
xchg
(bad)
out
fdivr
xchg
or
mov
imul
pop
rol
inc
push
or
mov
imul
ins
call
das
(bad)
pop
ror
repnz
fucom
adc
lods
mov
xchg
xchg
mov
movs
loopne
cmps
(bad)
push
inc
out
pushf
xchg
xlat
cld
push
add
xchg
xchg
jns
xor
pushf
push
cs
mov
imul
lahf
push
sub
es
in
(bad)
pusha
dec
inc
pusha
inc
add
mov
add
call
(bad)
shl
loop
(bad)
mov
inc
mov
nop
icebp
sub
adc
out
imul
in
and
sub
jge
dec
xchg
js
stos
movs
repz
xor
loop
and
push
(bad)
mov
and
dec
inc
shl
(bad)
sub
jmp
mov
movs
push
mov
or
test
pop
mov
fsub
iret
ficomp
jle
ins
cs
jbe
pop
imul
jne
adc
xor
xchg
(bad)
jae
sub
xor
bnd
test
sbb
shl
xor
xchg
nop
ror
lds
inc
sti
mov
mov
hlt
mov
outs
shl
call
mov
pop
sub
cmc
push
jae
xchg
or
call
clc
push
mov
ss
movs
or
push
cmps
cmp
scas
and
fst
jno
pop
sub
pop
cmp
and
mov
test
jle
jmp
(bad)
mov
dec
imul
sub
cmp
out
xor
fstp
aas
and
out
sub
pop
fistp
lods
aaa
popa
add
addr16
add
sub
cmp
test
and
add
mov
dec
mov
dec
cmp
adc
or
xor
push
mov
pop
add
push
loope
mov
mov
adc
inc
add
movs
xor
pop
xchg
mov
dec
push
pop
into
xor
iret
mov
(bad)
jnp
sbb
mov
xchg
leave
cmp
fld
and
loopne
cmps
fadd
loope
movs
ret
dec
call
imul
lods
dec
cmc
imul
pop
loopne
(bad)
lods
ja
xor
inc
cmp
ins
mov
test
loopne
dec
lds
add
fmul
and
mov
stos
test
and
jmp
xchg
cld
fcmovu
jae
or
out
adc
rol
dec
in
lods
das
iret
push
popa
out
cmp
push
xchg
sub
out
and
or
mov
fdivr
push
jl
push
ins
lods
loope
jno
popa
push
outs
das
add
idiv
or
cwde
xor
push
add
lods
push
sub
pop
adc
mov
cwde
pop
push
imul
dec
sbb
sti
sbb
mov
jne
loop
mov
imul
lods
das
xchg
xchg
push
loopne
mov
mov
mov
das
(bad)
mov
imul
cmps
scas
and
test
mov
(bad)
jo
outs
jnp
fs
test
call
push
int3
mov
sahf
fld
xchg
test
and
pop
dec
push
sub
or
aad
cld
mov
stc
(bad)
rol
es
ror
arpl
repz
or
jo
std
sbb
daa
cmc
div
rcl
loopne
cmp
mov
xchg
jg
mov
push
xor
sub
hlt
stc
pop
std
arpl
addr16
mov
pop
(bad)
pusha
test
push
sub
push
ds
loopne
adc
and
jge
pop
rol
out
das
outs
xor
adc
test
mov
inc
pavgb
mov
retf
outs
sbb
xchg
sub
fstp
ret
sti
push
movs
or
cmp
pop
fild
out
pop
sub
xchg
push
push
imul
dec
mov
lods
jne
cli
jmp
fiadd
test
nop
and
pop
mov
scas
addr16
sbb
jl
jmp
mov
out
jp
aaa
jmp
xchg
int3
pop
mov
mov
cwde
fnstcw
retf
out
cmp
push
sbb
inc
fdiv
mov
je
adc
ins
loope
sub
mov
out
gs
stos
adc
xchg
dec
push
sti
icebp
sub
rcl
scas
fstp
daa
sbb
dec
int
mov
jne
xor
push
pop
push
inc
add
and
jbe
push
sub
sahf
aaa
cmp
cli
or
xchg
lock
pop
cli
dec
fcmovnbe
cvttps2pi
icebp
push
inc
pop
adc
(bad)
in
jmp
aad
pop
aam
xchg
repnz
imul
in
sub
int3
sbb
sar
loop
pop
cmc
test
jne
inc
mov
(bad)
mov
aaa
leave
push
jo
xor
lods
lods
test
pushf
mov
pop
inc
adc
loopne
lea
cld
pop
sar
xchg
add
ins
call
sub
fstp
add
mov
dec
xor
adc
add
imul
push
dec
dec
bound
lea
jmp
pop
cmp
icebp
cwde
std
mov
and
mov
add
xchg
pushf
fxch
xor
aaa
fild
inc
push
aaa
push
push
lods
int
repnz
aad
out
shl
fs
xchg
js
in
bound
sbb
sub
xor
ins
add
mov
retf
mov
aaa
std
dec
dec
fmul
cmp
imul
outs
test
sub
call
cwde
mov
dec
pop
cwde
jp
jg
pop
xchg
outs
add
sub
in
xchg
sbb
mov
pop
adc
inc
(bad)
adc
dec
stos
(bad)
sbb
add
cmps
pop
fdiv
enter
sbb
test
jle
test
cmp
mov
adc
cmp
jp
enter
pop
jns
xor
test
adc
pushf
iret
push
add
jecxz
sahf
pushf
or
pop
hlt
es
mov
pop
stc
dec
mov
hlt
mov
in
out
sbb
arpl
dec
addr16
mov
xchg
test
xor
sbb
cmp
addr16
enter
pop
cld
sub
xchg
jns
inc
stos
call
cli
mov
ret
jg
fsubr
sub
icebp
cmps
sub
out
mov
pop
cmp
fincstp
in
mov
sub
movs
aaa
push
fldpi
lock
bound
bound
cmp
push
int
mov
cmp
pop
xchg
mov
mov
shl
cli
mov
push
jnp
lds
arpl
pop
mov
push
jno
xchg
inc
inc
out
ins
retf
(bad)
pop
inc
mov
rcl
pop
sub
les
cld
inc
call
xchg
loope
retf
dec
fs
out
xor
or
(bad)
gs
cmp
inc
mov
or
or
clc
pushf
shl
loopne
mov
fidiv
push
or
push
aaa
cld
pop
mov
call
bound
out
mov
pop
icebp
pop
fimul
aas
jne
push
mov
mov
pop
add
fstp
mov
jecxz
sub
jne
jns
std
mov
or
mov
or
jg
mov
xlat
xchg
xchg
movs
out
mov
out
pusha
js
dec
and
jmp
mov
sbb
mov
cmp
fisttp
mov
shl
or
cmps
xchg
sar
push
pop
xchg
repz
push
lods
xor
xlat
fstp
cmp
rcl
fwait
in
imul
jmp
mov
cli
ss
cmp
pop
push
push
push
mov
into
rol
lods
cli
aad
scas
ror
add
dec
sysenter
jnp
cmps
mov
(bad)
das
xchg
loopne
xchg
xor
loop
pop
sub
mov
xchg
ret
leave
sti
sahf
ins
into
ret
mov
sub
xlat
xor
int3
cs
adc
dec
pop
(bad)
xor
sub
(bad)
pusha
fidiv
ins
daa
sbb
bnd
jns
stos
fs
or
dec
scas
(bad)
js
fst
inc
push
sbb
sbb
popa
jne
adc
xor
sbb
cmps
jne
jo
fs
cmp
int3
inc
dec
add
seto
mov
test
popf
scas
dec
mov
fs
push
std
mov
jns
ins
outs
scas
push
jl
retf
or
repz
and
xlat
cli
outs
xchg
push
cmp
mov
int3
xchg
inc
sub
dec
xor
push
cmps
or
pop
bound
repnz
ja
mov
repz
outs
mov
adc
fistp
cs
aad
jo
pusha
mov
gs
mov
aad
inc
push
test
inc
imul
(bad)
mov
xor
push
stc
and
or
mov
sbb
(bad)
aas
in
pop
arpl
fwait
add
inc
sbb
rol
xchg
jp
loop
fbstp
call
sbb
jle
dec
sub
mov
ret
fucomi
sti
jno
(bad)
dec
dec
add
pop
imul
push
mov
pop
xor
lds
jns
add
daa
dec
mov
scas
dec
test
mov
dec
mov
aaa
xor
pop
xchg
push
rol
cmp
jp
jne
cli
jle
es
adc
mov
mov
push
shl
pusha
pop
dec
outs
ss
pop
and
cmp
mov
jnp
(bad)
call
dec
rol
addr16
retf
or
cwde
shl
retf
out
mov
xchg
push
push
dec
cmc
jae
loope
ja
ins
jle
mov
cmp
out
sub
fcmovnbe
jl
clc
dec
push
cmp
bound
jge
outs
or
test
aaa
leave
setp
mov
mov
mov
mov
shl
push
sbb
fisubr
and
lock
jle
pop
lods
addr16
arpl
push
cmps
lahf
into
test
dec
cld
adc
js
enter
loope
jg
adc
ds
inc
movs
aas
(bad)
push
xchg
add
cwde
push
fild
dec
fs
or
retf
(bad)
jmp
pop
cmp
or
test
inc
mov
out
stos
sbb
test
mov
push
das
ins
lods
fstp
shl
retf
pop
and
sub
call
popf
push
(bad)
push
cmps
add
fldl2e
xchg
and
xchg
ficomp
jl
rol
xchg
nop
loope
pushf
mov
iret
mov
mov
les
popf
and
sbb
fdiv
dec
pop
pmaxsw
dec
dec
rcl
and
test
ret
and
xor
mov
adc
mov
in
jmp
repnz
call
addr16
test
movntps
ss
inc
fisttp
retf
ror
add
int
xor
xchg
mov
pop
mov
imul
pop
adc
mov
jae
or
cmp
jae
ins
(bad)
mov
ins
adc
ins
dec
pop
pop
ror
or
std
call
cld
cmp
out
dec
or
jg
cmp
ret
fcom
shl
mov
jno
pop
sbb
test
cmps
push
cmp
push
daa
fidivr
push
fs
popa
fistp
test
dec
fbstp
or
xor
sbb
dec
cmp
lds
jecxz
inc
add
jle
jbe
stos
cmp
inc
xor
loope
inc
pop
sub
scas
pcmpeqd
aad
in
mov
mov
test
add
push
cmp
mov
inc
lock
ins
dec
pop
sbb
repnz
call
cmp
mov
fs
and
dec
aam
(bad)
jge
xchg
inc
xchg
(bad)
push
push
mov
pop
addr16
test
inc
into
mov
mov
aam
adc
adc
ins
jns
pusha
push
add
loopne
add
loopne
mov
loopne
mov
mov
mov
clc
(bad)
leave
addr16
adc
enter
inc
aaa
aad
shl
rcl
outs
(bad)
inc
daa
xchg
shl
ror
(bad)
push
int3
xchg
and
fst
adc
sub
(bad)
data16
adc
dec
addr16
ds
sub
ficom
sub
out
(bad)
cmp
push
aam
sub
mov
stos
dec
rol
xchg
fisubr
mov
jle
sbb
push
dec
sub
and
cmp
fdiv
or
sar
xchg
push
push
outs
sahf
push
cdq
mov
push
les
add
cli
sahf
and
mov
adc
xor
cwde
inc
xchg
adc
xchg
jae
xchg
pop
mov
and
scas
adc
sub
lds
lods
leave
push
cmp
mov
(bad)
jmp
dec
pushf
push
pusha
jo
fnstenv
jge
cld
pop
mov
and
scas
add
aas
push
lds
psubd
inc
jg
jb
hlt
mov
stc
push
push
sub
out
mov
xchg
je
in
int
fsubr
outs
pusha
push
xor
jnp
sbb
retf
(bad)
xchg
es
mov
and
mov
cmp
outs
int3
sbb
xor
cmp
inc
repz
inc
test
je
shl
adc
in
repz
(bad)
jbe
ins
repnz
loopne
xlat
jmp
iret
xchg
adc
fmul
inc
sub
adc
jb
add
sbb
popf
cmp
pop
dec
out
in
cmc
(bad)
int3
test
fst
movs
call
mov
rcl
cmp
xchg
aad
adc
out
(bad)
fidiv
rcl
xchg
scas
inc
(bad)
loopne
cli
lds
push
mov
es
scas
mov
shl
xchg
mov
ror
push
rcl
imul
dec
bound
cmp
xor
xor
aas
lock
in
add
fbld
sub
in
mov
push
mov
aas
ret
push
sbb
int3
scas
cmp
xlat
imul
pushf
pop
push
out
inc
into
rcr
retf
adc
js
popf
(bad)
ds
push
rcr
mov
(bad)
add
aaa
xchg
dec
mov
fisubr
cld
(bad)
call
xlat
mov
out
bound
gs
mov
jmp
mov
adc
loop
loopne
sar
jmp
mov
daa
fild
fstp
imul
test
push
inc
inc
sub
mov
mov
jnp
imul
pop
lods
push
out
rcl
ret
pop
sub
add
shl
or
lods
adc
jbe
inc
mov
int
setl
leave
dec
add
dec
aam
add
push
push
push
jg
jp
dec
imul
int3
xchg
mov
add
add
outs
push
loopne
pop
out
push
inc
lds
sub
pop
pop
hlt
mov
add
pop
(bad)
push
mov
adc
movs
push
inc
sbb
sbb
shl
xchg
pop
push
popa
call
sub
aad
xor
or
adc
pop
jmp
rol
ins
retf
push
pop
push
jmp
pop
js
imul
or
in
adc
xor
ret
cmps
fadd
dec
rcl
or
shl
enter
jmp
mov
mov
test
shl
retf
xor
mov
lods
fwait
push
ret
call
aad
xchg
(bad)
sub
dec
mov
xchg
push
push
adc
ficomp
cli
cmp
jmp
fisubr
push
addr16
popa
push
pop
loope
ret
mov
xchg
sub
pop
aas
jnp
xor
adc
push
rol
or
xchg
vpminsw
cmp
mov
sub
mov
scas
das
addr16
pop
cmp
cmp
cmp
adc
in
in
adc
mov
pop
arpl
mov
push
push
retf
retf
lahf
gs
inc
stos
cmps
retf
scas
imul
test
mov
shl
adc
push
adc
movs
sub
push
pusha
and
add
ins
push
adc
sti
add
cs
enter
xchg
cmp
adc
inc
pop
mov
dec
arpl
jno
xor
adc
push
mov
push
and
sub
inc
aad
cld
adc
sbb
and
ins
jecxz
pop
test
jb
popa
adc
fld
aad
les
test
push
je
js
loopne
mov
xor
sbb
jno
xchg
cmp
sbb
(bad)
std
and
xchg
mul
mov
fadd
(bad)
pop
jae
in
loopne
fisub
add
iret
ret
scas
pop
dec
fisttp
loop
mov
cmps
sub
xor
fisub
cld
not
sbb
shl
jns
pop
or
mov
loopne
js
lods
cmp
jbe
lock
(bad)
push
ret
in
jg
dec
add
lahf
mov
inc
sahf
xchg
leave
pop
jb
and
ins
mov
cmp
jae
les
mov
icebp
dec
or
stos
push
mov
lea
and
fist
and
mov
mov
out
push
cmc
push
inc
cld
push
movs
xor
ja
ja
les
pand
outs
mov
shr
push
in
cmc
pop
sbb
mov
mov
xchg
mov
ror
(bad)
mov
xchg
and
jecxz
stos
add
leave
imul
cmc
mov
scas
push
ret
mov
imul
sahf
ror
nop
mov
or
inc
inc
fsub
xlat
mov
icebp
repnz
fwait
mov
xor
push
into
push
int3
mov
xlat
inc
arpl
jle
jg
pop
mov
fcmovnu
mov
mov
or
sahf
ins
mov
cmp
sub
cmps
div
pop
and
push
xor
pop
call
mov
in
dec
push
push
loop
xor
mov
mov
jb
push
and
adc
xchg
adc
jae
call
scas
les
cdq
adc
fimul
pop
out
cmc
xchg
loop
int
xchg
add
(bad)
adc
call
ins
into
arpl
or
cmc
jge
and
mov
out
and
clc
sbb
xor
xor
gs
shl
inc
inc
dec
repz
movs
inc
loope
stos
in
rcr
aam
movs
inc
jne
push
add
push
fcmovu
out
push
sub
mov
sahf
stos
sbb
js
sahf
dec
lock
or
arpl
mov
xor
jo
mov
push
inc
mov
adc
xor
inc
and
out
sahf
fstp
out
xchg
arpl
repnz
mov
push
pop
shr
stos
sbb
bound
cmp
add
push
movs
cmp
dec
pop
inc
jge
sub
sub
cmp
push
int3
(bad)
mov
mov
add
sbb
call
mov
fucom
dec
popa
mov
push
call
xchg
sbb
pop
stc
loopne
and
mov
pop
xchg
shl
cmp
xor
mov
fdivrp
cmp
out
call
inc
stos
cmp
cld
rcr
jb
fisubr
bnd
bound
push
xchg
test
sub
xlat
movs
push
push
out
(bad)
sub
xchg
out
pop
sub
(bad)
loopne
push
or
mov
ror
(bad)
call
test
pop
dec
rcr
out
pop
xlat
cmc
add
(bad)
jmp
add
mov
das
ret
mov
sbb
sub
sub
ret
cdq
pop
dec
ja
push
dec
pop
or
ret
pop
fidivr
les
sub
aad
ins
(bad)
mov
data16
sbb
sbb
arpl
mov
xor
imul
jp
jb
and
ja
mov
imul
jl
aaa
(bad)
out
xchg
nop
cmp
jmp
pushf
pop
xchg
aad
hlt
push
adc
add
int
pusha
out
push
mov
mov
jno
fdivr
dec
mov
add
jmp
aam
loope
test
jmp
push
mov
cmp
sbb
xchg
call
xor
int3
xor
pushf
mov
and
adc
cld
ja
int3
cmp
cmp
mov
aaa
jg
inc
push
outs
test
call
mov
jl
xchg
arpl
dec
test
adc
mov
dec
shr
adc
add
mov
cwde
cmp
je
int
xchg
paddusw
into
ins
sbb
xlat
call
lods
ss
xor
(bad)
into
or
cmps
dec
push
lahf
sub
frstpm(287
dec
out
pop
and
in
cld
das
dec
repnz
mov
(bad)
icebp
aad
cmps
push
jl
mov
jmp
cs
dec
cmp
shl
idiv
mov
stos
inc
sbb
pushfw
xor
retf
cmps
mov
movs
xor
bnd
cmp
aaa
or
les
push
xor
jecxz
sbb
ja
cmp
in
push
xchg
mov
fs
mov
es
sahf
sub
leave
mov
jecxz
outs
dec
mov
jnp
sub
mov
movs
inc
pushf
adc
and
lock
or
or
stos
dec
(bad)
add
iret
pop
pop
pusha
lea
and
cmps
inc
in
and
mov
push
mov
cmps
repz
hlt
nop
das
mov
arpl
leave
xor
rol
ja
add
inc
jae
loopne
aad
xor
stc
lahf
sub
inc
(bad)
lock
sahf
adc
jmp
fwait
mov
arpl
or
hlt
pop
retf
mov
mov
mov
gs
fsubr
test
leave
out
les
addr16
cmps
mov
or
sti
sbb
arpl
push
pop
es
test
mov
or
push
inc
aaa
push
add
repz
in
pop
cmp
pop
out
push
pop
out
push
cwde
dec
shl
push
mov
pop
out
repz
push
test
add
add
lahf
pop
cmc
ins
ss
push
cmp
adc
inc
xlat
xchg
(bad)
push
fistp
in
mov
shl
ins
sub
rol
loop
cmp
xor
inc
pop
retf
fadd
repz
icebp
les
push
cdq
pusha
dec
mov
repz
(bad)
jb
xchg
pop
inc
scas
inc
int
imul
imul
aad
cld
pop
aam
push
or
mov
push
jecxz
xchg
(bad)
adc
dec
cmp
into
mov
pop
cwde
lds
and
sti
and
push
(bad)
retf
jo
(bad)
in
sub
xor
(bad)
sbb
and
dec
shl
xor
ficom
mov
xchg
and
adc
pop
jno
dec
xchg
mov
inc
cmp
ins
jp
mov
in
jg
xchg
mov
cmp
rol
adc
dec
mov
enter
stos
(bad)
movs
inc
xor
nop
sub
add
scas
xchg
stos
(bad)
shl
mov
adc
mov
ret
rcr
fsub
imul
int3
jb
push
ja
iret
pop
setnp
mov
in
adc
mov
jae
inc
mov
mov
aaa
in
push
and
mov
ins
popf
dec
adc
sub
sub
movs
dec
loopne
xor
ss
sbb
jecxz
sub
mov
inc
add
add
pop
scas
fs
jle
jo
dec
mov
xlat
rcr
sub
inc
push
push
rcr
ret
mov
and
addr16
jge
cmp
mov
aam
sbb
outs
pop
das
(bad)
push
sbb
pop
adc
push
shl
nop
rcl
and
dec
jnp
pop
adc
scas
(bad)
popf
inc
xchg
adc
fcomp
cdq
inc
xor
jmp
xor
movs
test
test
scas
imul
adc
lock
jecxz
repnz
and
hlt
xchg
adc
inc
add
and
jo
out
inc
add
inc
ins
add
in
jecxz
fmul
std
xchg
in
addr16
xor
cs
and
aaa
push
jbe
js
mov
mov
sbb
call
dec
out
(bad)
aaa
xor
cmp
imul
sub
pop
jl
and
push
jl
add
adc
xor
mov
mov
cmp
out
std
or
test
pop
nop
jmp
dec
jns
in
mov
iret
lds
mov
and
in
das
mov
jp
cmps
mov
stc
bound
or
in
dec
sbb
cld
pop
les
lahf
mov
(bad)
loop
pop
push
push
push
jno
popf
xor
mov
adc
loopne
mov
fs
sbb
repz
xor
or
xor
enter
adc
xchg
mov
outs
bound
retf
mov
mov
xor
xor
cmps
pop
xchg
sub
inc
adc
xlat
mov
mov
inc
(bad)
stos
data16
ja
xor
sbb
xchg
push
mov
clc
xchg
push
cmp
rcr
cmps
dec
mov
xchg
or
pop
pop
inc
or
mov
push
pop
retf
das
and
xlat
adc
shl
(bad)
repz
mov
sti
test
cmp
pop
scas
push
lea
mov
jne
add
jp
pushf
(bad)
fwait
xchg
mov
cmps
inc
loopne
push
pop
inc
in
cs
xor
daa
push
(bad)
sti
pop
push
nop
pop
addr16
cdq
repz
push
shr
mov
push
hlt
leave
inc
add
in
mov
pop
lds
sub
fild
jmp
hlt
imul
stc
imul
inc
test
mov
lods
adc
jb
xchg
xlat
and
jmp
mov
scas
adc
les
(bad)
mov
inc
add
cdq
push
mov
sahf
test
or
scas
cdq
lahf
aad
mov
int
dec
fcom
pushf
(bad)
cmp
pop
lahf
dec
lods
int
sbb
mov
bound
xchg
jl
ficom
test
mov
pop
xchg
jb
(bad)
inc
dec
fst
call
inc
ror
mov
xor
inc
sub
push
and
cmp
jnp
mov
adc
or
sbb
repz
sbb
repz
enter
mov
push
adc
add
xchg
gs
cmp
push
cmp
inc
and
add
jb
neg
jnp
loope
movs
cs
mov
leave
mov
(bad)
xor
aas
retf
rcr
mov
mov
je
in
adc
dec
scas
sub
(bad)
lds
imul
or
nop
adc
inc
sti
push
div
dec
loop
in
div
std
retf
and
outs
dec
sbb
jle
cmps
cmp
sbb
addr16
ins
push
cmp
movs
or
jle
clc
std
mov
in
mov
mov
cmp
inc
mov
mov
mov
xor
out
(bad)
stos
rcr
mov
fisttp
shl
test
gs
dec
mov
je
xchg
mov
jl
int3
aad
mov
fidivr
mov
push
cdq
std
push
cld
push
mov
or
mov
mov
add
mov
and
data16
push
mov
rol
test
dec
mul
sub
aad
or
inc
mov
inc
mov
xchg
sub
int3
push
pushf
daa
lds
aad
jmp
test
add
xor
mov
pop
and
movs
ret
push
or
push
nop
daa
imul
add
popa
xor
ret
stos
ror
pushf
fistp
icebp
xor
jge
dec
rcl
loop
aaa
xor
inc
sbb
push
mov
repz
retf
repnz
pop
dec
repz
das
push
sbb
pop
mov
lods
mov
popf
retf
sbb
pop
sub
in
test
dec
cmp
sahf
xor
sahf
xchg
jge
enter
cli
fisttp
pusha
pop
gs
stc
test
mov
sub
add
(bad)
sub
and
xchg
push
sbb
(bad)
out
cmc
fwait
mov
mov
imul
mov
test
inc
ret
xor
inc
adc
daa
pop
faddp
push
scas
in
xchg
paddb
lods
adc
jnp
sbb
outs
sub
(bad)
adc
enter
jle
out
jns
outs
pop
xchg
mov
(bad)
in
retf
mov
es
cmp
movs
mov
in
xor
jecxz
outs
mov
jae
pop
dec
jns
(bad)
mov
cmc
hlt
sbb
dec
jle
push
outs
popf
xchg
mov
xor
pop
xchg
leave
adc
pop
das
sub
mov
in
ins
jmp
xlat
mov
pop
xor
cmc
lods
fwait
mov
mov
dec
mov
scas
pop
int3
test
jno
jge
aam
or
xchg
enter
inc
mov
and
pusha
int3
aas
pushf
sub
rol
jnp
out
js
jnp
or
add
ret
xchg
data16
aas
call
cmp
repnz
sbb
dec
cld
sbb
dec
mov
pop
xor
adc
jae
push
aad
stos
jnp
sbb
aaa
loope
xchg
xchg
repnz
retf
xchg
mov
jp
dec
js
ins
xor
xchg
mov
xor
imul
xlat
outs
and
xchg
movs
xchg
(bad)
jbe
fidivr
cwde
add
push
mov
movs
scas
mov
cmp
inc
push
dec
inc
push
icebp
cli
adc
xchg
aam
jne
adc
outs
dec
and
shl
push
cmps
not
adc
es
pop
fcom
repz
jae
pop
pop
inc
mov
imul
sbb
ds
in
mov
ret
jmp
in
mov
sbb
add
retf
xchg
and
clc
mov
loop
sub
jae
call
cld
pop
fistp
pusha
frstor
push
push
and
lods
cmp
jg
ss
cmp
push
jge
cdq
inc
cmc
rcr
out
push
fbld
jl
xchg
int
test
jecxz
ins
nop
mov
and
and
and
icebp
fsubr
sub
ret
das
cmp
xchg
retf
inc
cmp
mov
jae
rol
out
jae
ds
fs
imul
aad
lahf
sbb
iret
outs
jmp
cmc
aaa
enter
jge
jmp
pop
iret
add
sbb
mov
inc
jb
inc
push
push
fdivr
add
mov
jne
cmp
cmps
cmp
push
pop
outs
cmc
mov
mov
(bad)
ret
pop
xchg
rol
inc
bound
sbb
sar
shl
call
or
mov
jne
mov
je
or
jl
in
xchg
xor
inc
jno
iret
mov
lds
xlat
cmp
sti
inc
ret
pop
push
shl
ret
add
jnp
shl
xor
jecxz
popf
fs
inc
cmp
xchg
push
dec
stos
xchg
in
push
mov
mov
nop
rcl
jg
jge
push
and
mov
inc
jne
xchg
leave
cmp
add
test
ja
in
cs
add
cmp
mov
outs
nop
(bad)
pop
retf
or
aaa
outs
(bad)
mov
out
out
ja
dec
mov
mov
call
xor
jbe
jmp
shl
(bad)
mov
loopne
pop
int3
add
jb
and
add
pusha
movs
lds
ins
sbb
xor
loopne
pop
rcl
daa
mov
adc
dec
mov
sar
mov
repz
mov
xchg
mov
fiadd
push
lock
std
or
clc
jmp
imul
cmp
test
cmc
or
cmps
mov
mov
or
sbb
inc
sbb
or
and
outs
loopne
fld
fwait
jp
sti
mov
(bad)
or
dec
add
fisubr
ret
rcl
xor
cmp
mov
call
bndldx
test
stc
jge
ja
push
cwde
aaa
scas
push
stc
sub
dec
inc
stos
pop
push
rol
call
push
data16
sub
enter
xchg
call
cmps
jb
mov
out
shl
push
les
js
cmp
(bad)
test
scas
cmps
lods
fadd
xor
jmp
xchg
mov
movs
or
(bad)
stos
push
aaa
and
dec
mov
and
popa
push
add
outs
jge
aad
sahf
push
sbb
ins
stos
adc
xchg
mov
inc
jmp
push
in
jnp
je
cs
mov
lea
cmp
jge
mov
into
in
les
or
add
fimul
and
dec
mov
mov
sub
aas
rcl
push
pop
dec
out
push
xor
or
push
cmps
push
add
(bad)
mov
in
pop
mov
push
mov
push
mov
sbb
jb
scas
arpl
inc
or
adc
movs
mov
push
ds
mov
or
fwait
test
pop
cmp
sub
jl
test
in
xor
std
jge
mov
(bad)
in
jo
lea
or
xchg
sbb
sar
push
mov
mov
adc
nop
dec
xchg
and
xchg
push
aam
cmp
fwait
pop
popf
out
out
outs
ds
inc
jle
push
jmp
loopne
and
and
cwde
fsubr
inc
inc
(bad)
stos
ja
xor
out
jnp
mov
sub
arpl
arpl
fcmovbe
arpl
add
pop
or
stos
adc
jmp
dec
outs
aaa
jmp
cmps
sbb
pop
sub
rcr
hlt
aas
fild
mov
shl
inc
mov
pop
push
imul
mov
xchg
sub
clc
adc
movs
dec
and
pusha
cmp
loop
mov
fisub
adc
add
sbb
js
test
es
pop
and
xchg
jp
(bad)
fucomi
popf
pop
jb
mov
push
dec
mov
enter
(bad)
in
inc
popa
mov
adc
fsubr
lahf
adc
fwait
out
clc
pop
and
rol
les
sar
ficomp
(bad)
mov
dec
rcl
inc
pop
fidivr
lods
repnz
pop
push
cmp
shr
and
cdq
cdq
aas
sar
jl
xlat
xlat
and
xchg
xor
xchg
stos
jmp
rcl
nop
bound
mov
loope
test
push
fdiv
push
addr16
popa
pop
in
std
test
pop
movs
ins
cmc
mov
push
xor
push
add
mov
cmp
outs
movs
setbe
mov
lock
retf
(bad)
jle
ficom
push
je
neg
fwait
mov
inc
cmp
push
sub
xchg
mov
daa
dec
int3
push
xor
jne
aas
test
push
fistp
inc
jmp
sub
repz
xchg
push
fdiv
out
add
(bad)
in
int3
test
scas
cmp
and
or
jmp
jge
mov
stos
mov
out
js
xchg
sub
adc
mov
jne
mov
rol
imul
pop
inc
rol
in
push
sbb
jecxz
xlat
aad
(bad)
mov
fdivr
icebp
les
mov
add
jns
adc
adc
mov
data16
sub
hlt
ss
into
jmp
scas
mov
jns
or
int3
jmp
mov
pushf
mov
cmp
xor
jb
mov
ret
or
and
and
mov
test
mov
aaa
leave
fcmove
pop
in
retf
mov
out
test
ja
inc
js
mov
sti
imul
mov
leave
pop
mov
xor
aam
mov
fnstcw
inc
xchg
and
int
pop
cmp
fmul
hlt
dec
mov
dec
inc
add
xor
aam
hlt
cmp
dec
jae
xchg
scas
inc
cmove
fisub
adc
pop
dec
add
sub
stos
mov
dec
cmp
lods
test
sub
sahf
fild
mov
add
sbb
sbb
jnp
loope
and
rcr
sub
dec
xchg
fist
xor
and
add
mov
xchg
into
dec
gs
sbb
push
sbb
push
mov
ret
sub
pop
mov
xchg
push
(bad)
xchg
imul
in
inc
dec
lods
out
call
pushf
pop
ret
mov
fcmovu
mov
shr
movs
popa
test
mov
es
in
cmp
fsub
sub
jnp
ins
mov
jno
jmp
in
xchg
into
xchg
out
neg
xchg
xor
push
lods
jo
jo
xchg
pop
sub
xchg
or
jb
push
mov
push
mov
push
test
xor
gs
adc
inc
push
pop
nop
mov
xchg
push
sbb
fcmovnb
out
add
mov
sub
pop
pusha
pop
ds
push
xor
mov
test
(bad)
outs
sbb
xchg
call
shl
test
mov
retf
imul
fisub
ror
jnp
aad
cli
inc
jle
cmp
sub
or
jecxz
fwait
add
inc
push
mov
dec
adc
inc
nop
xchg
in
and
adc
sar
dec
dec
dec
sbb
jl
retf
fwait
or
test
test
add
stc
cmps
data16
gs
lock
and
mov
(bad)
jmp
cmps
pop
xor
in
es
adc
xchg
(bad)
dec
dec
iret
pop
jg
in
jno
and
xor
in
cmps
imul
xor
movs
fcom
mov
mov
int3
xchg
aaa
retf
cmc
cmp
or
ror
xor
mov
jge
push
xor
(bad)
stc
pop
ins
cmp
jne
mov
fs
xchg
mov
mov
xor
pop
cmp
popa
add
mov
mov
stos
rol
stc
(bad)
cmp
imul
pop
movs
leave
sbb
cmp
pop
or
xchg
jno
ja
cmps
test
jmp
add
push
push
xor
mov
add
jmp
and
pop
aad
sub
cmp
push
or
or
aam
jne
rcr
xor
pop
test
outs
adc
cmp
push
jnp
arpl
push
shl
jbe
gs
sub
test
fisubr
movs
jle
adc
push
mov
outs
xchg
mov
stos
sbb
popf
(bad)
icebp
cmp
cmp
jge
dec
ja
and
push
neg
and
fmul
mov
clc
cmp
or
add
(bad)
ins
cdq
pop
mov
or
jno
das
pop
les
iret
jl
mov
fsubr
ss
pop
xor
cwde
xchg
aad
fsubr
scas
jne
cdq
aam
das
dec
rcl
jnp
and
div
pop
jmp
in
dec
or
cmp
xor
outs
sub
xchg
imul
jmp
xchg
sub
jb
sub
and
mov
sbb
iret
stos
out
arpl
pop
or
jae
jecxz
jns
pop
std
sub
sahf
push
aad
pop
mov
xchg
ins
adc
out
das
ss
mov
(bad)
fcmovu
mov
rol
gs
dec
loope
inc
cmc
sbb
cmp
and
cli
mov
mov
dec
gs
xchg
int
pop
xor
out
aad
sub
inc
cdq
and
mov
ret
outs
mov
mov
xor
mov
sub
mov
sub
or
cmp
movs
loop
mov
cmp
pop
test
loopne
rcr
jnp
aaa
sbb
xor
pop
ror
out
xchg
aas
mov
mov
fisub
fwait
dec
je
xchg
sar
sbb
jbe
sbb
jb
xchg
cwde
fdivr
sti
add
lds
xchg
mov
sub
mov
and
es
stc
sub
stos
lock
loop
add
cwde
adc
popa
xchg
push
xchg
sub
mov
fistp
dec
inc
or
in
aas
add
add
dec
sbb
ret
push
in
pop
add
xchg
rol
or
jne
mov
lods
jae
std
mov
inc
xchg
outs
adc
test
aas
jae
or
mov
ins
(bad)
xor
pop
jge
shl
jmp
in
popf
js
movs
mov
mov
ins
imul
imul
ret
test
add
adc
xchg
shr
leave
push
sub
iret
dec
ins
mov
aas
adc
sbb
rcr
stc
push
retf
dec
add
retf
and
ret
mov
cli
mov
in
rol
push
sahf
cld
cs
and
jmp
dec
pop
int3
push
call
mov
clc
jne
retf
inc
push
adc
sub
and
jae
dec
cmps
sar
(bad)
fwait
pop
jp
and
hlt
sbb
in
push
iret
cmp
test
add
adc
(bad)
xchg
or
stos
sbb
push
hlt
push
dec
mov
test
into
out
or
iret
and
adc
mov
in
mov
xchg
cmps
pop
shr
push
lods
jg
cli
repz
jbe
rol
mov
mov
ds
test
les
mov
dec
cld
pushf
arpl
inc
mov
jo
rcr
mov
mov
loopne
fstp
xor
cmp
or
cmp
or
jae
ror
ror
pop
test
jbe
mov
mov
jmp
ss
and
outs
push
mov
pop
push
mov
inc
cdq
sub
or
sbb
adc
mov
ja
outs
xchg
bound
pop
jnp
xchg
mov
mov
push
sbb
push
scas
mov
sub
jno
push
repnz
call
pushf
pop
scas
cmp
sub
xor
sbb
inc
(bad)
jne
cmp
jecxz
dec
repz
dec
out
into
dec
cmp
mov
call
dec
retf
icebp
dec
test
fiadd
ficomp
pop
push
xchg
int
or
jo
push
xchg
fcomi
out
inc
cmps
cmp
inc
jne
jae
loope
fst
sti
outs
adc
mov
mov
lahf
cmps
xchg
jmp
pop
inc
add
neg
call
cmc
dec
mov
xchg
fmul
add
fwait
leave
mov
xor
mov
jb
nop
push
cmp
sub
xor
bound
xchg
not
ja
mov
push
ins
ja
pop
outs
ficom
jle
dec
xchg
push
lahf
adc
pop
sub
outs
leave
shr
popa
fwait
outs
sbb
sbb
loopne
add
fdivr
dec
outs
add
or
mov
add
out
jmp
push
popa
adc
cmps
in
jns
(bad)
call
mov
fs
jmp
mov
rcl
sbb
mov
in
ficom
or
jno
jle
sub
adc
cmp
push
(bad)
dec
pop
push
mov
pushw
aas
int
neg
push
xchg
jmp
in
hlt
sbb
outs
jecxz
and
fnstsw
pop
dec
jae
mov
adc
and
in
enter
call
mov
inc
inc
cli
jle
jp
sahf
cli
shl
push
fsubr
shl
jnp
or
pop
nop
push
arpl
cli
aas
mov
outs
adc
push
jle
aaa
aam
push
sbb
add
dec
jl
mov
repz
mov
mov
repnz
push
das
rol
das
mov
(bad)
test
movs
lea
(bad)
sub
call
test
adc
and
(bad)
(bad)
aam
fcmovne
inc
xchg
adc
add
xlat
or
ds
mov
lods
nop
push
dec
jecxz
add
mov
and
(bad)
and
push
sub
jecxz
jo
leave
and
sbb
rcr
push
sbb
and
pop
mov
test
ins
mov
sbb
jne
pop
dec
int
jle
fnstcw
fld
call
out
jb
and
inc
mov
and
adc
cdq
mov
jmp
push
pop
jmp
dec
inc
cmp
jp
and
cmps
and
fwait
xor
and
jno
or
int3
cli
inc
push
ins
ror
mov
and
fsub
ss
paddq
cdq
sub
xor
pop
mov
pop
retf
out
fstp
jle
into
(bad)
(bad)
out
or
xchg
push
mov
mov
dec
out
gs
lods
mov
dec
push
dec
push
pop
jb
cmc
test
scas
sbb
gs
out
fnstsw
(bad)
(bad)
mul
jno
and
cmp
and
xor
dec
mov
xor
std
push
leave
sub
mov
inc
jle
mov
mov
mov
add
pusha
xor
or
cmp
loop
stos
in
outs
int
cmc
pop
ret
cld
push
ds
xchg
mov
push
fisubr
push
dec
push
jb
lds
or
adc
lods
xchg
mov
fidiv
jmp
movs
fst
xor
xor
mov
retf
mov
mov
jecxz
dec
xor
jecxz
popf
cs
call
adc
mov
pop
sbb
(bad)
jle
sar
inc
jnp
lock
sub
ds
adc
dec
fstp
or
sti
mov
jb
xchg
jne
pop
jmp
push
mov
mov
inc
mov
push
xchg
(bad)
xchg
addr16
xchg
mov
adc
xor
out
sbb
mov
dec
cs
jne
sub
and
into
adc
in
sub
mov
stc
dec
(bad)
ins
xchg
pop
xlat
pop
int
sbb
clc
mov
lods
dec
mov
sbb
ins
push
jmp
fisubr
xchg
test
test
test
ds
jmp
sub
sbb
cmp
outs
movs
pop
cmp
ret
adc
arpl
int
pop
retf
pop
fst
pop
push
sbb
std
dec
ins
jge
or
pusha
sbb
lods
cmp
imul
ins
push
mov
out
lock
outs
sbb
jge
add
add
shr
xchg
cmp
shr
outs
push
loop
adc
retf
mov
in
mov
add
xchg
push
or
push
sbb
lahf
bound
imul
addr16
sub
push
std
bound
dec
mov
add
adc
fcom
in
das
lock
enter
movs
xor
xlat
add
mov
mov
pop
cmp
repz
cli
bound
xor
js
or
push
adc
push
dec
fs
mov
push
movs
mov
lock
add
stos
ins
jecxz
bound
cs
jo
mov
shr
call
test
dec
addr16
inc
mov
fimul
out
pushf
and
das
xchg
cwde
or
stc
fmul
ficom
into
xchg
sbb
sub
and
mov
mov
imul
call
imul
lahf
retf
cmp
popf
dec
mov
mov
pop
pop
iret
dec
fcomp
ja
(bad)
and
add
pop
stos
push
loopne
mov
cmps
push
add
push
jo
retf
sbb
mov
cld
xor
inc
stos
pop
mov
pop
ds
stos
rcl
adc
or
dec
adc
push
fsub
jns
push
test
pop
fsub
arpl
lods
mov
sbb
pop
xchg
pop
and
aas
(bad)
adc
push
xor
lock
xor
aaa
je
int
sbb
lods
(bad)
fstp
jge
inc
jmp
rcl
push
popa
jnp
les
fidiv
add
rcl
pop
call
pop
(bad)
mov
das
xchg
cmps
fs
cmps
rol
out
sub
sub
mov
xchg
jmp
(bad)
jne
sub
adc
xchg
out
xor
outs
dec
loop
pusha
popa
mov
aam
sub
adc
mov
and
(bad)
mov
enter
cmp
lock
jl
repnz
jo
into
and
push
cmp
add
fcomp
mov
test
ins
enter
retf
sub
mov
je
lods
push
imul
je
add
das
and
add
cli
sbb
jle
xor
dec
cmp
(bad)
cwde
test
pop
test
inc
popf
push
ins
sbb
xchg
push
daa
ret
fnstenv
fnstenv
retf
and
jp
mov
xor
sub
mov
jle
ret
pop
add
int3
and
sbb
fs
pop
or
mov
mov
aam
push
fwait
je
mov
rcr
loope
cmp
and
cmp
push
int3
mov
jbe
scas
leave
jae
test
sbb
and
adc
push
lock
fbstp
dec
cmps
or
mov
cmps
dec
mov
mov
inc
(bad)
adc
mov
xchg
cmp
cwde
mov
nop
call
add
fldcw
sbb
cdq
mov
xchg
popf
or
cli
inc
pop
int3
adc
and
dec
adc
pop
pop
jne
iret
xor
ja
fbstp
adc
xchg
pop
imul
dec
push
mov
jb
fild
jbe
mov
scas
push
xlat
dec
xchg
jl
movs
jmp
jns
xor
dec
mov
adc
leave
adc
adc
mov
pop
ins
mov
adc
inc
pop
loop
jmp
and
vpmaddwd
cdq
out
cmp
pop
cli
shl
push
adc
ss
adc
mov
popa
dec
lods
mov
mov
ins
ins
mov
div
popf
ss
aad
jnp
fadd
sahf
lock
sub
and
js
xchg
push
push
jecxz
xchg
in
daa
adc
jp
mov
push
je
push
aaa
(bad)
imul
dec
push
or
(bad)
pushf
test
mov
xchg
aaa
lods
mov
add
ds
dec
ins
shr
jne
xchg
ret
add
clc
shl
loop
movsx
fstp
add
fs
add
and
cmps
push
and
add
out
lock
add
call
dec
pop
and
xchg
sahf
scas
mov
cs
std
jno
or
or
popf
stos
test
push
in
jno
out
pop
push
retf
stc
cld
outs
fbstp
iret
sub
push
inc
loope
inc
inc
(bad)
out
sbb
pop
aad
imul
(bad)
jmp
mov
push
pop
adc
sbb
xchg
clc
dec
push
jno
int3
outs
call
mov
add
pop
icebp
mov
inc
out
sahf
sub
inc
ins
xor
cmp
or
add
mov
pushf
popf
fwait
or
dec
mov
sahf
xor
mov
add
test
outs
jnp
ds
jl
or
ins
pop
xchg
(bad)
xchg
ja
clc
fisubr
xor
nop
sahf
iret
ror
adc
rol
adc
fist
repnz
(bad)
pop
in
loope
repz
not
mov
je
sbb
push
sub
bound
push
jb
fistp
jb
shl
popa
out
jbe
je
xchg
test
dec
xchg
sbb
icebp
stos
adc
sub
cmp
mov
retf
loopne
dec
push
test
hlt
xor
pushf
pushf
ret
jp
dec
sbb
leave
(bad)
push
and
scas
int
cs
push
sub
call
sbb
test
out
aad
dec
pop
mov
xchg
xchg
sub
lods
stos
sbb
or
push
aas
xchg
pop
jb
fisttp
and
adc
(bad)
xor
add
arpl
jl
icebp
shl
icebp
popf
jne
sub
retf
inc
add
push
cs
pop
adc
mov
arpl
jns
popf
xor
jmp
fld
mov
popf
out
push
shl
js
xchg
loop
and
imul
shl
mov
shr
adc
iret
fst
dec
fwait
je
jo
enter
pop
mov
retf
and
mov
or
add
adc
pop
cmc
lock
fmul
push
or
shl
call
popa
loope
mov
jl
push
(bad)
ja
pushf
mov
xchg
mov
mov
add
je
mov
mov
dec
lds
fiadd
inc
push
aaa
daa
mov
mov
fld
arpl
sahf
shl
inc
iret
sbb
add
mov
cmps
cmps
xor
fldl2e
nop
jne
ret
mov
pop
lds
mov
mov
xor
jp
aaa
and
xor
sub
sbb
lahf
cmps
pop
std
xchg
jno
or
sti
cli
mov
add
add
mov
enter
(bad)
mov
xor
call
daa
fcom
mov
es
out
call
stos
ficomp
xor
cmp
adc
sub
ins
movs
mov
add
sti
ret
jmp
sub
inc
xchg
hlt
(bad)
sbb
sbb
jns
iret
loop
mov
out
ja
mov
mov
sar
xchg
lahf
shr
and
mov
out
call
lea
mov
shl
or
push
mov
popa
in
xchg
dec
cmps
dec
out
popa
fisub
sbb
jns
or
xor
cmp
lods
mov
adc
pop
pop
jns
(bad)
ja
outs
call
daa
rcr
lods
xchg
push
fld
xchg
std
mov
add
fisttp
inc
imul
dec
jmp
lds
int3
in
xor
adc
jge
sub
sub
imul
test
add
call
aaa
imul
fsubr
jecxz
sub
dec
mov
movs
stos
inc
sub
addr16
add
fisubr
inc
xor
in
cld
jno
pop
sub
in
sbb
mov
push
fistp
stos
mov
inc
pop
push
fwait
pop
jno
imul
jecxz
push
push
dec
call
out
cwde
out
nop
icebp
xchg
icebp
and
outs
call
inc
ret
xchg
mov
ret
mov
outs
adc
inc
push
mov
shl
and
adc
xor
mov
xchg
sub
pop
push
aad
mov
or
mov
scas
mov
inc
invd
popa
jl
or
enter
pop
test
xchg
dec
sub
outs
mov
pop
sub
mov
fdivr
pop
addr16
dec
shl
out
test
scas
lods
dec
jge
mov
daa
mov
vcvtps2pd
xor
push
dec
aam
in
add
pop
test
loop
enter
ins
pop
mov
icebp
jle
stos
mov
lods
(bad)
adc
dec
add
dec
adc
sub
xlat
adc
push
or
dec
sahf
mov
sub
test
or
add
adc
sbb
test
mov
cmc
lods
push
sub
xchg
clc
or
aaa
and
push
iret
inc
cmp
sub
inc
cwde
inc
mov
clc
xchg
test
add
mov
push
int
mov
inc
push
add
movs
pop
jbe
popa
aaa
(bad)
iret
icebp
cmc
cmp
scas
(bad)
fs
rcr
sbb
scas
inc
scas
xlat
sbb
xor
int
out
int3
jl
leave
movs
out
pop
loop
sub
and
clc
and
call
das
add
cmc
pop
jmp
cld
test
dec
pop
dec
sbb
mov
das
jmp
pop
mov
mov
mov
dec
ficom
loope
mov
pusha
js
fisub
or
imul
jmp
cld
sahf
or
ret
mov
lea
in
cdq
mov
inc
pop
ret
int3
fwait
popa
repnz
mul
lahf
inc
(bad)
xlat
(bad)
adc
out
sub
and
mov
call
push
sbb
and
jl
sbb
lock
sti
dec
data16
div
int
add
aas
pushf
xor
adc
int
fcmovnb
(bad)
(bad)
lock
stos
repz
jns
mov
pop
push
mov
ja
pop
sub
sub
fimul
cwde
pushf
out
repnz
fmul
or
call
std
xor
xchg
push
jno
repz
inc
fwait
dec
sbb
mov
je
add
mov
(bad)
sub
in
mov
and
ror
add
push
push
add
movs
xchg
pushf
dec
xor
and
add
(bad)
push
mov
jae
mov
mov
xchg
sti
mov
pop
les
or
retf
outs
mov
rol
sbb
in
push
mov
xlat
add
int3
xor
lods
ds
dec
test
pop
ins
mov
jecxz
imul
push
rol
pop
mov
mov
or
cmp
cli
xchg
scas
pop
jmp
sar
inc
ds
ffree
dec
adc
pop
clc
inc
cmp
dec
lds
fwait
cmp
test
sbb
push
adc
jle
mov
adc
iret
retf
mov
lahf
(bad)
imul
fiadd
cmp
jmp
popa
out
jne
out
std
jp
lods
repz
adc
xchg
pop
mov
push
pop
jne
pop
mov
jne
jno
nop
loop
vpsrad
mov
outs
out
bound
sbb
push
jmp
add
cmps
adc
pop
cmp
or
push
and
jg
cmp
xlat
out
scas
add
rol
xchg
or
test
sahf
cmp
in
clc
out
int3
std
nop
jecxz
mov
and
cmp
enter
mov
mov
xlat
in
add
mov
loopne
(bad)
dec
add
dec
movs
jle
rcl
rol
mov
popa
xor
icebp
jo
scas
mov
jne
retf
test
add
popf
icebp
cmp
loopne
mov
fcom
xor
loop
imul
mov
pushf
and
dec
cli
das
or
xor
hlt
fidiv
pushf
pop
in
div
outs
not
inc
sbb
adc
int
mov
repnz
mov
ss
mov
xchg
jp
add
icebp
ja
arpl
mov
imul
or
mov
jg
pushf
fs
inc
repz
scas
lahf
daa
adc
shl
(bad)
(bad)
popa
sub
dec
loope
xchg
(bad)
sbb
xor
jle
sub
add
stos
out
(bad)
mov
in
mov
add
cmp
ret
pop
jle
stos
hlt
or
int3
fadd
cdq
out
aam
(bad)
mov
imul
mov
ret
push
mov
jmp
mov
fnstsw
cmc
ins
xchg
ret
outs
aaa
pop
mov
adc
or
jnp
dec
(bad)
stc
mov
mov
adc
scas
(bad)
lock
mov
(bad)
cmp
les
jne
push
pop
push
shl
loop
sbb
stos
cmp
mov
push
je
jo
or
rol
stos
xchg
pop
pop
cmp
popf
or
icebp
mov
mov
pop
inc
sar
fiadd
xor
sti
mov
pop
ds
retf
std
sbb
scas
mov
mov
pop
mov
adc
out
cmp
pop
repz
leave
(bad)
push
sar
shl
mov
scas
addr16
mov
outs
pop
push
loopne
add
xor
stos
test
jno
or
aas
adc
loop
or
mov
adc
clc
xchg
pusha
sub
(bad)
jg
cmp
pop
test
or
je
or
pop
push
xor
repz
std
pop
js
int
outs
pop
cmp
(bad)
(bad)
or
mov
xor
sub
sbb
aad
fbld
fsubr
jbe
test
add
inc
xor
pop
push
sub
inc
or
sbb
xchg
push
xor
mov
test
xor
jge
jns
mov
pop
pop
out
jl
(bad)
inc
test
mov
cmp
mov
aam
rep
fs
mov
inc
pop
jmp
and
loope
push
cmp
sti
push
cli
or
dec
hlt
pop
lds
jb
scas
popa
rol
repz
jns
sbb
jecxz
push
inc
ss
outs
cld
add
loope
std
adc
xor
dec
inc
xchg
cmps
mov
push
mov
push
mov
cmps
adc
push
enter
(bad)
fld
mov
addr16
sbb
add
test
aam
cmps
sbb
loope
add
push
inc
mov
mov
ds
dec
inc
pusha
rcr
cmp
(bad)
dec
xor
inc
imul
cmc
jns
add
pop
aaa
loopne
xchg
pop
jle
jae
ret
sub
lods
popa
cmps
loope
int
loop
shl
(bad)
in
mov
pop
sahf
push
xchg
std
and
and
mov
lods
mov
xchg
dec
popf
xor
leave
stos
out
outs
pop
into
outs
cmp
push
(bad)
jg
xchg
jle
out
jbe
xchg
mov
int3
mov
push
sub
mov
or
cld
lods
xchg
jbe
or
imul
mov
out
pop
jne
pop
add
or
adc
(bad)
lods
mov
mov
sti
les
cmp
and
addr16
repnz
sahf
out
pop
pop
and
cmp
jmp
dec
ds
add
sub
jp
cmp
adc
and
movs
jge
cmp
xchg
icebp
adc
ds
pop
dec
neg
jl
cmp
and
loope
shl
out
es
clc
lods
push
std
add
cdq
aaa
mov
xchg
jns
movs
sub
fxch
int3
mov
out
xlat
imul
iret
ss
pop
outs
jb
cmc
imul
dec
sar
or
(bad)
xchg
xchg
je
aaa
mov
add
sbb
dec
stos
cmp
shl
sahf
jb
gs
hlt
push
mov
rcl
xor
xchg
loopne
jne
mov
or
sub
call
xlat
popf
xor
xchg
jge
push
push
adc
cmp
clc
loop
jne
xor
jns
movs
nop
jns
popf
adc
adc
imul
jae
inc
arpl
add
imul
pop
cmp
lea
repnz
inc
mov
mov
dec
cmp
cmp
scas
mul
and
stc
je
cmp
xchg
arpl
xor
xor
add
sbb
(bad)
aaa
sub
inc
ds
call
mov
je
sbb
fwait
(bad)
loopne
mov
jbe
sbb
sbb
daa
aam
mov
retf
pop
xchg
xchg
retf
(bad)
rol
cld
dec
cmps
ss
loope
jb
cmp
push
and
shl
scas
fninit
add
cdq
test
out
out
stc
outs
popa
xchg
rol
mov
(bad)
fwait
xchg
out
imul
inc
loop
aaa
push
movs
test
imul
out
js
mov
mov
outs
ins
rol
frstor
cmp
mov
lock
call
or
das
add
mov
adc
adc
dec
lods
inc
les
xchg
jne
out
bound
jge
std
(bad)
cwde
fmul
dec
pop
jno
adc
sub
adc
cmp
mov
vmwrite
xlat
mov
mov
inc
jae
add
dec
lds
and
fdiv
dec
push
cmp
push
ja
nop
sub
push
iret
mov
jo
inc
jmp
jnp
mov
loopne
lds
dec
shl
push
mov
stc
xchg
es
inc
fs
mov
xor
jnp
pop
cmp
cmp
add
and
adc
out
mov
inc
repz
jle
pop
je
jnp
inc
cld
cli
mov
ror
loope
fistp
dec
aad
ja
push
mov
push
pop
xchg
imul
cli
ja
adc
xchg
test
dec
mov
jae
cmp
mov
push
gs
mov
mov
push
movs
jge
mov
daa
xlat
pushf
push
mov
aam
jne
shl
add
mov
scas
or
mov
js
rol
jge
jne
icebp
daa
push
leave
stc
mov
xchg
js
dec
jl
ins
sub
sub
shl
or
xchg
inc
das
(bad)
push
mov
adc
dec
mov
push
xchg
clc
and
sbb
push
jo
and
ins
push
xor
pop
stc
sbb
ret
inc
xor
retf
movs
aaa
or
xchg
(bad)
xlat
pop
sahf
jge
leave
out
mov
mov
mov
lds
dec
adc
xchg
jg
push
mov
imul
mov
cmp
adc
pop
sahf
shl
add
adc
pop
mov
mov
out
pop
push
adc
loopne
sahf
mov
arpl
sahf
lahf
or
rcr
aad
push
adc
dec
fisub
clc
mov
inc
jns
xchg
les
or
jne
out
hlt
scas
(bad)
sub
fimul
cmps
xchg
dec
fdiv
pop
dec
push
cmp
mov
push
cmps
shl
stos
add
push
in
jmp
cld
stos
sbb
jne
loopne
in
in
or
mov
xchg
add
mov
inc
stos
rol
jno
nop
je
scas
jae
adc
jmp
ret
(bad)
imul
dec
add
jae
push
or
xchg
dec
bound
push
mov
xlat
sbb
call
xchg
hlt
movs
pop
shl
adc
ins
pop
adc
int
pop
idiv
add
pop
xchg
adc
scas
lahf
ja
dec
cmp
xchg
inc
cmc
push
push
es
pop
cdq
in
stos
adc
push
fmul
inc
rcl
test
dec
aaa
jg
dec
pop
lahf
pop
push
je
push
mov
mov
cwde
retf
gs
ficom
sub
push
and
in
mov
jno
or
inc
es
add
outs
ret
lock
pop
mov
into
inc
ja
outs
mov
push
fs
neg
out
jmp
test
mov
movs
cs
outs
and
out
into
sub
fsubp
cmp
add
sub
shr
cli
dec
inc
rcr
sub
int
dec
pop
or
sar
sbb
mov
xor
jmp
lock
fwait
push
inc
mov
inc
mov
add
inc
fistp
mov
mov
test
pushf
pop
or
scas
cmp
scas
iret
push
loop
lock
cld
call
loop
scas
dec
rcl
push
cmp
nop
ins
nop
or
dec
icebp
inc
jb
mov
mov
xchg
jge
adc
rcr
sar
clc
arpl
xchg
sub
push
movs
and
sub
sub
or
cwde
ret
jnp
mov
xor
add
ss
push
call
out
les
rcr
push
lods
inc
out
dec
and
cmp
enter
sahf
imul
jge
mov
lods
xor
dec
sub
sbb
dec
jbe
ss
aas
inc
cmp
mov
popf
sbb
into
dec
add
sbb
cwde
(bad)
sbb
mov
ret
adc
fidiv
push
push
and
xchg
mov
sub
jns
imul
and
cdq
adc
lds
mov
xchg
xchg
lea
aad
and
xchg
add
pop
dec
cmp
fdiv
ja
pop
iret
sbb
jnp
mov
xchg
rol
and
push
pop
(bad)
in
popa
cmc
(bad)
xchg
fwait
lods
and
or
xor
mov
push
ins
adc
jge
push
ins
push
inc
sub
xchg
push
inc
push
repz
arpl
fdivp
retf
xchg
test
loop
add
add
sbb
out
fmul
jle
aam
xchg
pop
lahf
sar
rcr
scas
xchg
lea
jne
dec
adc
xlat
loopne
xchg
(bad)
std
inc
out
xchg
pushf
adc
adc
mov
mov
xor
movs
add
sub
sahf
loop
pop
sub
(bad)
and
inc
(bad)
pop
mov
xor
mov
mov
cmp
xchg
push
xlat
xchg
dec
sub
xchg
sbb
out
addr16
aas
fldenv
inc
fdivr
mov
xchg
jl
pop
xchg
das
leave
jo
and
pop
sbb
in
mov
add
ins
jb
xor
mov
dec
mov
pusha
push
add
add
xchg
test
sete
sbb
mov
out
dec
jns
mov
sub
adc
push
xchg
scas
(bad)
ja
sti
out
sti
mov
retf
and
(bad)
scas
shl
and
xchg
(bad)
icebp
jmp
push
xchg
pop
adc
pusha
outs
dec
add
frstor
ds
adc
and
(bad)
aam
push
cld
not
sub
mov
test
adc
push
lahf
jecxz
shl
xor
lds
in
xchg
sahf
sti
or
ja
pushf
enter
dec
mov
fimul
mov
add
jne
not
call
mov
inc
add
or
jp
pop
xor
mov
push
add
push
xlat
cdq
mov
jle
jb
push
or
push
shr
mov
repz
jbe
jg
push
xchg
cmc
pop
aam
xchg
lods
enter
pop
in
js
fbstp
loopne
mov
retf
or
les
jg
pop
xchg
das
and
push
ins
jo
int
dec
push
inc
pop
in
mov
repz
iret
add
loop
aad
sbb
movs
fist
xlat
adc
stos
adc
fs
movs
fadd
into
pop
jno
ficomp
pop
dec
test
lods
test
(bad)
fnstsw
pop
cwde
stos
loop
dec
sar
mov
xor
sti
sbb
test
or
std
xchg
inc
mov
mov
fwait
lds
mov
shl
xor
stos
or
loope
retf
jmp
gs
stc
jbe
(bad)
jmp
clc
ret
lahf
(bad)
bswap
aas
retf
ins
scas
fldcw
push
mov
or
fstp
jmp
or
adc
push
bound
fwait
xor
adc
jb
int
fild
sbb
mov
(bad)
ret
pushf
mov
jno
cmps
inc
adc
mov
adc
retf
cmc
mov
ficom
jbe
jl
and
test
add
dec
push
pop
and
int3
jmp
mov
jns
popf
push
or
or
xlat
mov
dec
les
dec
sub
cmp
mov
cmps
std
(bad)
pop
add
sbb
or
outs
cmp
ficom
pop
sub
mov
mov
pop
lods
add
jmp
iret
xchg
das
mov
jae
pop
shl
ss
ja
es
(bad)
int
xor
fcomip
dec
jo
push
cli
pop
cmps
xlat
adc
cdq
test
outs
in
xchg
pop
je
fidivr
ja
out
inc
ds
fs
push
mov
adc
pop
test
xor
cmp
or
stc
add
fild
not
cwde
clc
std
imul
xor
mov
lods
mov
test
mov
repz
add
(bad)
fnstenv
stos
jmp
fdivr
mov
mov
push
mov
cmps
(bad)
scas
stos
and
int
lods
pop
outs
test
adc
inc
pop
stos
cmp
bound
or
ins
xchg
adc
xor
xchg
stos
jl
mov
cs
and
sub
or
cmps
ss
add
rdmsr
push
push
popf
inc
shr
popa
aaa
push
push
mov
dec
jmp
stc
shr
bound
es
std
clc
(bad)
icebp
ss
out
out
dec
sub
mov
into
fstp
xor
test
sti
inc
cmp
mov
pop
fisttp
mov
addr16
mov
lock
xchg
ret
hlt
mov
sbb
sub
call
push
or
xor
fbstp
xchg
daa
lods
imul
xor
scas
enter
enter
pop
in
and
clc
loopne
or
add
jo
(bad)
retf
(bad)
and
retf
fdivr
fcom
dec
jge
or
popa
fucomip
stos
fcom
xor
jl
stc
inc
sub
(bad)
xchg
popa
mov
mov
sub
or
in
pusha
push
jmp
and
xchg
jo
out
call
jp
xchg
enter
lahf
sbb
pop
push
(bad)
loopne
mov
cli
pop
push
push
mov
mov
add
mov
loopne
pop
adc
mov
add
cmp
cmp
daa
test
ror
cmp
iret
push
ja
sbb
fiadd
lods
and
addr16
cmp
mov
push
jo
sub
pop
mov
mov
xchg
sub
leave
fndisi(8087
hlt
cli
adc
test
sti
push
int3
jo
popf
cdq
xor
lods
dec
sub
pop
and
and
lea
lock
fimul
adc
xor
xchg
fwait
inc
arpl
lds
pop
pushf
add
fsub
call
fldenv
out
inc
pop
mov
scas
(bad)
ins
enter
xor
(bad)
scas
or
ror
loop
mov
(bad)
aaa
cmc
sahf
xor
imul
sbb
mov
cmp
stos
xor
push
mov
inc
xchg
dec
out
push
dec
aam
xor
loop
enter
sbb
dec
sub
pop
(bad)
(bad)
aam
int
mov
push
push
push
sbb
jmp
dec
cmp
adc
into
ret
call
adc
sbb
or
xor
popa
or
out
pusha
(bad)
mov
ret
rep
push
fwait
sar
loop
or
bound
cmp
mov
imul
iret
outs
push
cmp
pop
or
bound
bound
and
je
cmp
sub
repnz
and
xor
push
in
push
xor
div
iret
xor
xor
cmps
out
or
ror
sahf
test
jp
cli
test
and
or
and
add
fwait
pop
dec
xchg
pop
push
cmps
mov
push
push
pop
outs
mov
cmc
popa
mov
mov
mov
push
rcr
or
cmps
test
loope
out
test
loop
cs
cli
repnz
int3
mov
pushf
dec
out
loop
ficomp
loopne
cld
int3
(bad)
(bad)
loopne
int
cmp
sbb
xor
fnstcw
(bad)
sbb
or
xchg
sbb
cs
test
addr16
lods
mov
cmp
inc
mov
fwait
aaa
jno
xlat
das
mov
rcl
hlt
cmp
pop
and
or
push
mov
lods
jo
ret
fidivr
cmps
fistp
test
repz
sbb
or
fs
mov
jmp
stos
mov
cmc
mov
test
pop
aas
pushf
std
(bad)
push
add
scas
test
lahf
mov
test
test
cmp
inc
or
lds
adc
popa
es
add
and
xlat
mul
adc
cmc
retf
mov
xchg
je
cwde
and
(bad)
adc
push
and
mov
sub
jecxz
in
addr16
jecxz
dec
retf
dec
push
xchg
and
loope
jo
push
mov
jo
in
cmp
icebp
jg
cs
pop
push
div
mov
jl
repnz
bound
dec
cmp
aad
dec
jbe
jae
cmp
inc
add
aas
push
push
repz
mov
add
sar
sbb
movs
orps
pop
xor
jne
add
out
jb
push
and
sbb
xchg
jnp
out
mov
jge
gs
jl
pop
and
test
cmp
xchg
es
into
jp
mov
stos
xchg
xchg
inc
dec
mov
sbb
aad
cmps
icebp
pop
add
cld
(bad)
sub
stos
sbb
(bad)
jno
(bad)
mov
dec
mov
jae
and
adc
and
sbb
fidivr
test
aaa
in
repz
pop
adc
push
push
xlat
xor
(bad)
push
push
inc
and
out
jne
dec
cmp
out
xchg
add
dec
jo
mov
inc
loope
dec
jge
(bad)
jg
xchg
test
jge
addr16
push
xchg
cmp
out
sub
popa
fild
pop
mov
fdiv
retf
and
mov
cmps
mov
jno
pop
arpl
sahf
mov
xchg
lods
movs
test
out
add
sahf
js
mov
(bad)
cmp
and
mov
in
or
movs
dec
xchg
dec
add
mov
add
mov
or
in
sbb
scas
and
push
jae
jmp
rcr
mov
pushf
jb
mov
pop
loopne
sbb
lds
retf
pop
outs
mov
add
dec
jmp
mov
jb
add
or
and
inc
aad
scas
retf
pop
mov
out
xchg
sbb
mov
test
pusha
dec
rcr
jno
mov
xor
push
shl
sub
cmc
sub
cmp
in
div
mov
daa
inc
sub
inc
loope
push
mov
pop
outs
clc
fst
int
mov
test
mov
mov
pop
xor
cmp
jmp
and
xchg
fbld
cmp
clc
clc
jo
push
cmp
call
loop
gs
imul
cmp
inc
xchg
jbe
dec
pop
mov
pop
rol
xor
test
xor
enter
imul
xchg
or
popa
or
(bad)
dec
ror
and
call
in
push
stos
les
test
out
pop
sub
push
mov
loop
aad
xlat
cli
adc
jmp
adc
pushf
out
je
and
outs
jmp
in
outs
xor
in
(bad)
fisttp
sahf
int3
fistp
xlat
ja
dec
cmp
mov
test
stos
push
sar
pop
xchg
and
adc
jge
cmp
(bad)
mov
iret
loope
(bad)
loop
sub
jmp
ins
shl
nop
fbld
push
pop
popf
retf
mov
iret
call
sub
sti
(bad)
xchg
pop
aam
push
or
mov
fimul
mov
xor
jno
push
inc
sahf
xchg
imul
push
mov
pop
nop
arpl
xchg
ja
add
sbb
sbb
fwait
out
inc
inc
inc
ds
repnz
or
mov
and
fcom
ror
aas
arpl
push
int3
ins
push
mov
mov
gs
push
jp
pop
cmp
fld
inc
jnp
jge
mov
test
mov
add
pop
or
push
int3
mov
sbb
add
psraw
(bad)
sbb
sbb
retf
pop
aad
movs
shl
lea
movs
das
jmp
mov
ds
lock
fxch
ja
mov
push
iret
or
cmps
mul
push
aas
test
and
sub
(bad)
call
inc
(bad)
fisttp
pop
movs
pop
mov
mov
mov
(bad)
push
inc
push
popf
retf
jb
xor
in
cli
(bad)
and
in
test
cli
sti
xchg
jecxz
aam
aaa
dec
inc
imul
jb
dec
sub
aad
or
shr
xchg
out
ffreep
xchg
in
cli
mov
adc
pop
shr
adc
repnz
fidiv
push
push
sbb
sahf
movntps
test
cmp
clc
(bad)
js
jmp
cmp
ins
pushf
iret
jl
and
cmp
in
xor
mov
jg
jb
mov
xor
aaa
test
ficom
in
fcmove
ret
add
sub
inc
sub
cmc
inc
(bad)
mov
mov
loopne
stc
nop
mov
dec
loop
pop
mov
mov
(bad)
aad
mov
imul
(bad)
jle
adc
inc
mov
cwde
data16
js
arpl
pop
std
jp
xor
inc
out
sbb
and
ds
adc
xchg
and
mov
cmps
pop
mov
and
xchg
adc
cmps
push
push
in
add
and
push
test
and
in
das
hlt
imul
or
push
(bad)
xor
pop
ins
into
inc
mov
adc
dec
adc
ret
push
jecxz
sahf
cmp
div
ds
int
mov
pop
jmp
mov
adc
test
lock
(bad)
hlt
(bad)
(bad)
rcl
idiv
(bad)
jp
push
(bad)
aad
xor
add
loope
pushf
scas
popf
pusha
mov
sub
jmp
jo
or
enter
adc
aad
hlt
and
ins
lahf
sbb
mov
mov
icebp
push
js
and
xchg
pop
bound
pop
mov
mov
cmp
dec
cmp
and
outs
in
les
ins
data16
call
inc
shl
enter
daa
xor
pusha
in
jge
mov
ret
fnstenv
fcmovu
xor
sbb
push
mov
push
pop
ds
and
test
pop
xor
pop
add
sbb
or
in
outs
test
popf
pop
mov
mov
xchg
dec
ret
call
into
xchg
aaa
stos
and
test
sub
pop
mov
push
imul
stos
inc
loop
data16
xchg
mov
mov
xor
sbb
clc
jmp
scas
sub
leave
in
enter
cmc
sub
push
jle
push
mov
fwait
in
or
faddp
xchg
es
jg
into
ins
cmp
out
or
fist
or
int
cmps
lods
sub
mov
popf
mov
adc
not
cdq
push
je
mov
cmpxchg
mov
bt
and
jl
imul
jmp
adc
mov
mov
add
mov
sahf
(bad)
leave
add
bound
jl
pop
xor
test
scas
lock
test
add
test
jb
aaa
aaa
test
dec
std
gs
test
xor
shl
inc
gs
push
mov
repnz
sub
(bad)
cmps
jns
sbb
(bad)
shr
mov
test
popf
cmp
fistp
inc
mov
stos
sub
mov
push
neg
sub
fsubr
xchg
sbb
push
xchg
fcomp
adc
(bad)
sbb
xchg
push
je
dec
loopne
sbb
aas
scas
inc
and
icebp
cmp
retf
(bad)
adc
fistp
xor
(bad)
in
test
mov
movs
hlt
push
adc
ins
movs
cmps
aaa
sub
inc
xlat
xchg
inc
cmc
pop
out
pop
xchg
fidivr
jmp
xchg
stc
xor
jmp
and
inc
adc
mov
pusha
in
cmc
adc
test
or
outs
sub
bound
test
cmp
jl
add
jnp
mov
les
ror
popf
fneni(8087
aad
mov
cwde
lods
mov
mov
rcl
fneni(8087
pushf
inc
xor
push
jecxz
dec
xchg
jae
mov
cmovo
mov
jnp
das
lock
mov
cmp
push
outs
dec
pop
adc
shr
add
in
dec
xchg
mov
movs
dec
dec
aam
cmp
clc
pop
xchg
out
mov
inc
sbb
push
and
jae
fxch
sub
cmc
ficomp
inc
sub
push
in
mov
out
stos
out
jle
nop
clc
stos
bound
pop
add
(bad)
cmp
or
cmp
xor
mov
push
shl
sub
jbe
jp
pop
mov
fwait
imul
xlat
or
inc
push
xchg
and
ficomp
xor
mov
inc
fstp
sbb
test
mov
xlat
ins
and
sub
cwde
push
dec
inc
sahf
scas
fistp
std
(bad)
pusha
stc
gs
retf
aaa
popf
loop
xchg
lea
(bad)
call
jle
add
mov
add
mov
icebp
stos
pop
add
aaa
out
stos
inc
lds
out
int
xor
in
push
mov
and
mov
(bad)
scas
xchg
ss
pop
or
test
or
push
cmp
add
dec
dec
push
fs
dec
sbb
fld
xchg
xchg
or
mov
movs
sahf
sbb
pop
xchg
cmc
scas
std
cmp
xor
repnz
gs
mov
clc
xchg
ja
push
xlat
bound
xor
hlt
xchg
jae
imul
jae
(bad)
out
mov
inc
inc
push
xor
es
xlat
imul
test
pop
mov
aaa
push
int
fld
test
pop
fistp
cmp
fisttp
and
loope
sbb
dec
bound
(bad)
test
loop
jge
mov
fidivr
mov
inc
dec
(bad)
imul
sbb
add
lds
adc
mov
or
retf
in
and
mov
push
sub
xchg
and
push
push
ins
das
addr16
sub
mov
pop
popa
xchg
out
dec
mov
push
(bad)
push
loope
jl
mov
sub
cmps
in
or
and
dec
jecxz
into
adc
cs
dec
push
and
or
ja
cmp
ins
inc
mov
loope
jno
scas
repz
shr
test
mov
mov
jae
cmps
fdiv
adc
les
xor
jo
cmp
dec
adc
popa
cli
pop
call
ret
cdq
repnz
cld
adc
add
sbb
(bad)
push
xor
(bad)
jns
push
rol
xlat
int3
ficomp
out
push
stos
xlat
movs
add
sub
jg
mov
or
xlat
sbb
ins
sub
ja
xor
jmp
jmp
retf
cmc
imul
cs
push
pusha
or
dec
push
and
pop
popa
and
push
dec
inc
inc
dec
fincstp
jae
pop
es
push
or
lock
xor
inc
ds
xor
mov
cmp
jns
enter
mov
(bad)
push
dec
retf
(bad)
cs
dec
xchg
fxch
xchg
mov
inc
cmp
mov
mov
cld
add
test
shr
sti
xchg
stos
jp
pop
loop
sub
test
ret
lea
mov
enter
les
pop
fadd
sub
push
and
js
outs
bound
jecxz
xchg
mov
jecxz
xor
xor
and
xchg
clc
add
jo
mov
mov
(bad)
(bad)
mov
sahf
mov
xchg
in
sbb
bound
xchg
mov
test
add
inc
call
mov
mov
push
into
xchg
cmps
pop
jmp
mov
les
xor
jecxz
cmp
loope
gs
outs
ffree
and
mov
in
push
je
imul
cmp
cmps
dec
leave
(bad)
popa
repz
sahf
xor
jg
call
cs
popf
cmp
cmps
sbb
rcl
imul
out
or
lds
es
sub
aaa
mov
and
outs
lea
jmp
xor
fst
outs
adc
lock
(bad)
int
cmp
or
add
mov
repz
movs
dec
ss
mov
sub
and
aas
sar
xchg
mov
cmps
sub
xor
retf
stos
lds
lds
push
push
sbb
mov
rcl
in
cmp
xchg
mov
push
and
dec
xchg
ret
fwait
inc
ss
dec
sbb
adc
xor
dec
aaa
mov
or
enter
ror
inc
inc
xchg
nop
push
imul
outs
xor
outs
or
daa
imul
inc
push
movs
pop
xor
std
int
les
xor
test
test
push
xor
ror
jb
or
dec
lock
pop
sti
iret
test
imul
stos
xlat
push
cmp
lock
adc
or
fsubr
and
mov
in
in
jno
xor
pop
pusha
hlt
cmc
int3
mov
bound
add
add
inc
dec
cmc
std
pop
sbb
cmp
or
out
mov
push
out
retf
fstp
add
icebp
stc
mov
pop
sbb
shr
iret
and
shr
and
add
push
pushf
daa
push
popf
in
(bad)
mov
xor
int
or
xchg
push
jl
leave
adc
out
xor
xchg
sti
pop
test
dec
popa
(bad)
int3
or
or
and
cmp
inc
fnstcw
cmp
test
sub
scas
outs
imul
adc
and
inc
push
bound
fisttp
or
mov
inc
mov
or
push
lods
pop
cmp
test
mov
arpl
mov
mov
stc
jbe
mov
fwait
jnp
das
adc
push
rcl
or
lahf
mov
ror
dec
outs
push
xchg
mov
xchg
mov
mov
stos
test
popf
retf
stc
mov
inc
popf
sbb
pop
les
loop
ja
cmps
sub
inc
and
sub
mov
adc
xor
loopne
adc
jle
stos
push
and
div
ins
jmp
jge
call
dec
imul
iret
popa
mov
xor
(bad)
jne
xor
sub
cmc
(bad)
dec
add
pusha
push
sbb
xchg
pop
mov
mov
repnz
in
fsubr
clc
push
into
inc
rol
xor
adc
xor
hlt
sub
shl
sbb
mov
(bad)
mov
sbb
pusha
dec
outs
jb
int
nop
push
adc
(bad)
cmp
test
push
add
push
jnp
out
sub
xchg
push
leave
push
mov
fnstcw
jmp
xchg
and
cmps
adc
mov
ss
les
inc
mov
or
scas
xchg
pop
pop
dec
mov
and
mov
in
aas
aas
fisubr
cmp
pop
add
clc
pop
bound
daa
sub
ins
cmp
xchg
repz
lds
inc
add
sub
mov
mov
push
mov
mov
pop
outs
in
aas
adc
out
mov
adc
mov
cdq
icebp
call
sub
dec
js
pop
push
in
ins
mov
fcomp
mov
push
retf
je
jo
bound
out
fcmovne
pop
aas
push
adc
and
(bad)
fimul
sbb
sbb
sbb
out
mov
mov
xchg
(bad)
leave
lds
xchg
inc
ror
inc
cli
jbe
scas
xor
cdq
sub
pop
add
in
jns
shl
div
addr16
sub
cmp
dec
add
iret
data16
fdivp
je
mov
ret
push
mov
iret
das
xor
jecxz
aam
icebp
scas
aad
add
push
dec
arpl
scas
mov
mov
pop
jecxz
jg
outs
xchg
push
sbb
repnz
mov
je
dec
cli
inc
xchg
inc
paddsw
pop
repz
pop
mov
and
out
and
dec
adc
pop
mov
popf
(bad)
sub
add
clc
push
es
enter
mov
sbb
adc
aas
cmps
xchg
push
xchg
pop
push
add
xlat
sbb
push
jl
cmp
ss
mov
pop
imul
in
in
sbb
(bad)
dec
es
in
cwde
out
or
push
mov
(bad)
add
es
shl
xchg
neg
inc
mov
fadd
xchg
(bad)
ror
xchg
or
rcl
rcr
sub
adc
inc
fs
add
push
xor
xor
out
and
mov
sahf
rol
loop
dec
sbb
int3
retf
gs
mov
jmp
scas
or
mov
sti
mov
sbb
push
cs
es
jecxz
xchg
fnsave
call
out
xchg
jmp
pushf
jmp
mov
xchg
inc
push
pop
or
jb
mov
pop
cmp
aas
jl
loope
dec
dec
test
rcr
xor
inc
and
pop
leave
(bad)
arpl
fucomp
leave
cmp
repnz
mov
and
mov
pop
and
ins
cmp
jbe
jecxz
mov
mov
push
xchg
sahf
xor
ror
cmps
mov
rcr
mov
nop
jmp
lds
push
mov
or
mov
mov
cmc
aaa
xchg
scas
dec
in
shl
scas
movs
add
mov
mov
jl
ds
xchg
adc
dec
fwait
les
xchg
adc
scas
nop
repnz
mov
xor
pop
xor
ss
dec
xchg
inc
(bad)
std
push
pop
mov
mov
inc
inc
mov
xlat
sahf
call
dec
int
sar
imul
nop
arpl
iret
inc
pop
shl
or
call
and
cmp
pusha
jb
mov
test
add
mov
fcom
mov
sub
sub
xchg
sub
out
stos
test
and
sbb
cdq
cmps
mov
fs
scas
add
int
cmps
fist
cmp
adc
ja
cmp
(bad)
and
mov
in
bound
push
out
cld
mov
sbb
cmps
aas
js
inc
mov
pop
loope
hlt
push
call
repz
adc
inc
sub
adc
push
push
xchg
xor
leave
adc
fidiv
xor
adc
xor
cs
add
sbb
movs
mov
fisub
lods
push
mov
xor
das
cld
mov
inc
xor
sub
sbb
push
sbb
dec
mov
nop
loope
fmul
or
and
data16
bound
aas
add
mul
xchg
push
(bad)
mov
idiv
push
push
mov
mov
jmp
push
pusha
retf
jno
repnz
nop
ds
dec
push
jae
in
addr16
fs
add
jecxz
mov
cdq
les
sbb
sub
push
repz
js
shl
(bad)
(bad)
jmp
pop
rcl
mov
dec
sub
mov
mov
cmc
cmp
je
outs
dec
out
push
dec
or
popf
adc
in
or
adc
repz
dec
add
jge
adc
std
inc
dec
fcomp
pop
pop
ds
iret
cmc
xchg
aaa
inc
(bad)
xchg
(bad)
lock
(bad)
dec
std
fdiv
sahf
(bad)
mov
push
imul
jns
cs
dec
sub
mov
cmp
mov
dec
scas
fadd
mul
pop
retf
les
mov
jmp
add
inc
mov
push
sbb
sub
fnstenv
cmp
sar
out
inc
xor
lods
push
loopne
mov
cmp
in
shl
fwait
mov
(bad)
push
sbb
mov
and
pop
retf
scas
dec
sub
js
inc
stc
ret
mov
aas
sbb
sbb
arpl
stos
loope
xor
pop
shl
ins
loop
xlat
push
das
in
xchg
jns
cmps
sbb
inc
scas
out
popa
div
lods
stos
outs
mov
(bad)
jmp
fisub
sahf
push
push
mov
add
adc
aam
(bad)
js
push
movs
(bad)
add
cmp
and
xchg
pop
xchg
inc
push
mov
inc
scas
jne
mov
ins
add
dec
push
test
fdivr
out
aaa
inc
pop
mov
mov
mov
mov
add
adc
or
retf
add
fadd
rol
out
cmps
imul
mov
shl
jge
push
or
pop
lea
js
dec
leave
adc
(bad)
push
in
loop
fidiv
pop
push
stos
mov
xchg
pop
fs
adc
imul
or
je
xor
es
push
mov
and
sub
push
movs
(bad)
hlt
pop
fimul
mov
jmp
test
or
call
ins
stc
hlt
jne
das
add
sahf
lods
scas
inc
inc
jle
push
mov
xchg
in
repz
loopne
hlt
xor
mov
ret
(bad)
js
ja
jne
addr16
movs
icebp
lods
repnz
mov
jg
dec
xchg
jmp
mov
mov
mov
out
fwait
xor
mov
mov
and
ror
lahf
ss
fiadd
in
shr
test
xchg
shl
out
ins
stc
and
cmps
je
cmp
add
in
dec
adc
fdiv
dec
pop
jb
add
xchg
call
mov
jno
mov
sar
cmp
sub
pop
aad
mov
out
sub
or
mov
mov
(bad)
add
jb
pop
sbb
jl
cmp
test
pop
test
aas
retf
jp
mov
cmp
sub
aaa
pop
shl
mov
fild
addr16
sbb
leave
or
enter
rcr
adc
fdiv
ret
ins
mov
int
dec
movs
xor
push
and
ss
xor
mov
sbb
retf
cmp
sub
ret
jle
mov
pop
jns
mov
pop
or
jb
sub
es
std
adc
inc
pop
push
adc
cmps
popa
ins
xor
push
stos
mov
xchg
pop
jo
sub
mov
pop
cmc
inc
hlt
add
das
xchg
rcr
ins
and
sbb
or
jecxz
xchg
out
fst
ds
aad
adc
(bad)
cmp
xchg
cmp
clc
test
call
shr
add
inc
pusha
inc
stos
in
les
jl
inc
jmp
xchg
xor
and
xchg
inc
jle
pop
xchg
add
or
cmp
sub
jge
mov
loope
(bad)
lock
dec
in
jecxz
mov
ret
and
pop
xor
or
test
jns
mov
sti
mov
dec
push
or
push
fwait
hlt
pop
mov
dec
fistp
cmps
sbb
not
rol
data16
add
and
ja
mov
arpl
xchg
or
fist
(bad)
and
into
and
cmp
push
mov
pop
loopne
test
rcl
ins
sub
and
sub
clc
xchg
mov
movs
(bad)
std
add
movs
into
sahf
inc
dec
pop
cmp
stos
pop
dec
into
mov
(bad)
rcl
adc
test
movs
(bad)
dec
sub
mov
retf
sbb
mov
push
stos
div
dec
jae
adc
fidiv
test
and
jbe
pop
loopne
mov
in
(bad)
cdq
out
add
inc
dec
lock
xor
jp
xor
pop
out
or
fwait
xchg
vpunpckldq
imul
push
int3
sub
jecxz
jnp
mov
pop
les
mov
xchg
sbb
ja
sti
xchg
push
mov
or
sar
dec
xor
add
xchg
popa
and
jmp
gs
add
pop
dec
and
push
enter
push
popf
jbe
arpl
cmp
fld
inc
mov
mov
sbb
dec
les
dec
and
add
or
inc
lods
loopne
mov
rcl
nop
dec
sti
cmp
cmps
dec
xor
aam
jg
call
inc
sbb
fiadd
retf
lds
or
inc
ins
xchg
inc
inc
out
or
pop
and
loopne
pushf
and
mov
inc
jae
cli
pop
imul
xchg
mov
mov
clc
test
clc
cmp
cld
cli
pop
sbb
(bad)
mov
mov
adc
inc
and
mov
push
cmp
pop
jbe
sbb
(bad)
adc
add
jp
jp
or
out
fistp
lods
mov
or
add
pop
call
int
in
shr
es
or
mov
push
or
stos
out
push
add
test
or
cmp
stos
mov
sub
push
jns
dec
push
ficom
mov
bound
adc
loop
push
mov
pop
ret
mov
lods
sub
retf
add
test
in
or
adc
(bad)
jmp
jge
dec
nop
out
pop
int
xor
xchg
pop
mov
mov
aam
pop
lock
push
lahf
xor
jns
xor
mov
movs
cli
fist
lods
xchg
out
ss
push
cmp
add
pop
add
add
sub
nop
imul
xor
cld
stos
mov
or
mov
xchg
dec
mov
cmp
mov
sbb
sub
or
xlat
fstp
jmp
or
cmc
sub
push
daa
sub
fcom
push
mov
outs
aad
mov
aam
outs
fldenv
test
dec
aad
xchg
fdiv
adc
mov
inc
out
xor
mov
xchg
jecxz
neg
fsub
das
cmc
xchg
sub
rcr
jecxz
sahf
cmps
cmp
lahf
rcr
mov
in
cmc
data16
neg
loop
push
ss
ret
fldenv
jno
ds
push
dec
sbb
pop
jp
mov
(bad)
cli
dec
mov
jmp
cmp
pop
jnp
sub
imul
xor
leave
sub
mov
dec
dec
stos
push
sub
movs
push
cmp
loop
cmp
adc
mov
xchg
or
and
aad
add
push
iret
pop
cmp
stos
mov
cmp
add
sbb
ins
popf
cwde
xor
fnstsw
ret
push
aam
loop
or
out
and
mov
add
mov
cmc
sub
repz
inc
and
or
hlt
xor
mov
repz
mov
push
adc
lds
int
es
mov
pushf
lahf
mov
nop
mov
dec
xor
cmp
std
retf
call
inc
pop
jecxz
push
jge
cmps
push
dec
scas
cmp
pop
in
xchg
icebp
mov
xchg
test
scas
inc
mov
daa
nop
(bad)
popf
push
or
pop
ror
test
gs
xor
sbb
push
loope
cmp
add
and
aam
pop
pop
cs
fisub
fdivr
or
repnz
sbb
xchg
cmp
(bad)
xchg
outs
adc
fisubr
sub
bound
sub
adc
pop
(bad)
les
aas
ds
adc
clc
popa
addr16
cmp
cmp
jl
jg
in
xchg
push
loope
data16
call
rcr
nop
lods
cmp
stos
dec
in
test
sbb
les
pop
aas
xchg
push
lods
mov
sbb
ss
(bad)
mov
in
push
fs
add
jno
inc
mov
ins
(bad)
and
inc
push
add
imul
mov
adc
retf
fdiv
push
out
cdq
jg
mov
aaa
ret
rcl
inc
sub
mov
mov
xor
out
jae
or
rcr
int3
jno
test
rol
ins
push
call
mov
pop
mov
hlt
mov
add
mov
int
fcomp
out
jge
sbb
dec
repz
loope
pop
arpl
jns
sbb
clc
(bad)
out
in
(bad)
ret
pop
push
sub
cmp
fisub
ins
sub
add
in
dec
loop
jb
enter
aas
xchg
push
repnz
iret
xchg
and
in
mov
addr16
jbe
inc
add
jae
xor
push
mov
mov
jae
or
std
jno
xchg
jmp
jns
jp
outs
out
scas
pop
out
gs
test
(bad)
(bad)
push
cmp
mov
dec
sub
das
fld
arpl
add
dec
xor
and
loopne
add
aas
es
mov
and
and
call
and
jp
out
mov
sahf
(bad)
(bad)
or
push
(bad)
add
mov
jp
in
inc
call
cmp
fmul
jp
call
push
movs
inc
jo
mov
fs
mov
xchg
jmp
push
js
push
sbb
stc
jmp
pop
xchg
dec
xlat
enter
xchg
enter
cmc
fldz
sbb
sub
mov
std
mov
iret
mov
mov
jecxz
out
bound
adc
fidiv
(bad)
je
mov
aad
pop
mov
gs
jge
int
cli
push
push
(bad)
mov
repz
or
jge
sbb
cmc
and
neg
sub
icebp
jo
add
das
adc
xchg
sbb
push
cmp
scas
ds
sub
loope
cmc
jg
push
pop
inc
shl
popf
ja
test
imul
ds
xor
dec
mov
jmp
or
dec
fld
and
push
pop
js
mov
(bad)
mov
pusha
ror
(bad)
neg
orps
fsubp
or
add
ror
arpl
push
and
out
jae
not
mov
jle
cmps
inc
cmps
popf
fidivr
mov
pop
lea
pop
sub
cs
iret
lahf
mov
jmp
and
ret
xlat
mov
sbb
dec
shr
xlat
sti
outs
nop
lods
and
inc
pop
jl
mov
rcr
xor
add
leave
xor
mov
not
scas
je
pop
push
les
iret
sbb
inc
mov
mov
add
sbb
xor
and
sbb
ins
cmp
mov
xchg
or
leave
jae
sar
repnz
scas
ins
and
fadd
mov
gs
jno
lock
push
jecxz
pop
cmp
mov
rol
not
fadd
cmp
arpl
sbb
push
ins
jmp
mov
mov
jnp
xor
jmp
sbb
push
imul
popa
pop
aaa
inc
xor
mov
das
loopne
ja
out
rep
mul
push
jge
call
ds
fs
sub
mov
dec
ja
push
pusha
pop
mov
aaa
(bad)
stc
scas
scas
fscale
stos
mov
xchg
cli
inc
adc
loopne
ins
jg
leave
jns
cmp
out
fisubr
push
or
sub
cmps
inc
pushf
retf
mov
fstp
inc
sbb
out
repz
pusha
out
mov
push
mov
ds
mov
fisubr
xchg
cdq
sub
jecxz
sbb
test
ds
xor
stos
sub
icebp
mov
mov
push
adc
shl
imul
test
hlt
cmp
gs
dec
loopne
je
pop
sbb
add
push
lods
aaa
push
jg
arpl
adc
mov
(bad)
inc
adc
cmp
(bad)
jl
mov
push
retf
clc
dec
pop
mov
rol
sbb
pop
out
jns
pop
iret
bound
pop
cmp
call
pop
and
push
add
scas
push
cli
pop
daa
push
inc
fsubr
lock
mov
sub
dec
or
retf
loopne
jge
pop
int
mov
(bad)
(bad)
sub
inc
sbb
inc
repz
sar
(bad)
jmp
cmp
addr16
ds
out
xchg
xor
addr16
out
cmps
push
pop
in
outs
cmp
sbb
adc
pop
rcr
jae
push
jne
(bad)
(bad)
pop
mov
mov
in
sbb
jmp
fldenv
inc
cwde
jl
fcmovnu
xchg
xchg
addr16
xchg
push
(bad)
lds
scas
and
inc
cmps
sbb
aam
adc
mov
xor
push
cli
pop
ins
scas
(bad)
ss
xchg
fidiv
pop
fimul
mov
mov
ss
xor
add
in
adc
arpl
dec
mov
add
scas
stos
das
fld
lock
pop
pop
fisub
push
div
pop
aas
movs
sbb
xchg
daa
sbb
lock
outs
dec
retf
pushf
inc
mov
pusha
mov
mov
lods
inc
sub
packsswb
or
pop
ret
test
in
add
and
movs
in
scas
enter
cdq
pop
xchg
dec
loop
add
adc
(bad)
dec
shl
sti
std
aas
adc
test
pop
xor
sbb
xor
test
(bad)
cmp
loope
out
sbb
mov
out
test
add
jcxz
xor
ins
jge
(bad)
in
xchg
push
sub
cwde
in
xor
sbb
xor
add
cmc
outs
retf
pop
mov
cmp
jmp
mov
add
inc
call
stos
add
xchg
into
adc
fwait
out
and
repnz
aas
push
dec
retf
jmp
jge
popa
jmp
inc
pop
scas
and
into
in
stos
pop
aam
jp
into
jnp
mov
ds
xchg
lahf
and
mov
xchg
jo
scas
jle
pop
add
sub
and
leave
mov
mov
push
adc
jmp
or
outs
mov
pushf
push
stos
(bad)
retf
xchg
sub
hlt
rol
mov
inc
outs
shl
retf
cld
cli
and
mov
adc
(bad)
loope
inc
ror
and
mov
add
xchg
mov
pushf
add
shl
add
mov
and
inc
adc
push
push
sbb
es
rcl
(bad)
inc
bound
daa
inc
cmp
cmp
or
stc
shl
xchg
aaa
pop
xor
out
fist
xchg
push
xchg
sub
fisub
push
idiv
pop
loopne
mov
and
or
repz
test
ins
pop
push
nop
inc
sti
push
sar
dec
loop
enter
in
adc
int
rcr
in
xchg
cmp
xchg
out
xor
inc
jmp
jno
sub
push
jmp
not
sub
in
imul
shr
adc
lds
sbb
mov
inc
outs
into
lods
sahf
scas
xchg
mov
aad
lock
push
pop
jp
aas
cs
sbb
and
xchg
clc
sbb
scas
mov
add
jbe
sub
sahf
inc
pop
pushf
sbb
sbb
into
jb
sub
(bad)
cmps
sbb
mov
add
jge
cmp
test
xchg
iret
test
adc
xlat
(bad)
cmps
lods
test
mov
pushf
rcr
nop
mov
push
call
pop
inc
xchg
mov
sbb
jmp
sbb
lods
push
(bad)
jmp
repz
arpl
movs
or
cmp
xchg
sub
mov
xchg
mov
retf
push
ret
jg
mov
add
cmp
inc
pop
push
sub
inc
(bad)
sbb
movs
stc
lea
mov
cmps
psllq
popf
jmp
sbb
push
sbb
dec
mov
repnz
(bad)
dec
xchg
jo
lods
mov
jae
fsub
mov
dec
jnp
xor
jmp
ror
adc
xor
add
jp
xor
scas
fist
je
and
pushf
or
aam
sbb
jno
add
pop
jo
pop
sub
and
mov
jne
js
and
lock
in
cmp
ret
mov
jge
fst
cmp
jle
push
hlt
sbb
mov
xlat
pop
inc
dec
add
push
retf
sub
ins
loopne
imul
xchg
aaa
dec
inc
mov
add
icebp
push
stc
outs
aaa
(bad)
dec
ficom
and
dec
sub
ins
push
jb
gs
mov
xchg
int
inc
jecxz
cli
addr16
rcr
push
inc
and
out
mov
stc
cmc
and
das
shr
mov
mov
mov
inc
xor
popf
inc
mov
sbb
cmps
mov
dec
icebp
mov
cmps
pop
ret
ror
es
(bad)
jmp
adc
lea
mov
outs
addr16
jnp
pop
daa
pusha
xchg
inc
ret
div
xor
pop
(bad)
adc
(bad)
mov
jmp
(bad)
push
je
shl
cdq
movs
add
mov
inc
out
jns
cdq
call
xor
push
jecxz
add
mov
test
xchg
sub
arpl
cwde
fwait
retf
stos
cdq
cmp
xchg
adc
pop
bound
push
mov
scas
lds
push
or
dec
maxps
push
adc
dec
sbb
sbb
cwde
stos
cmovs
and
xor
jne
xchg
int3
movs
pop
adc
inc
pop
inc
loope
jbe
jle
lock
retf
loop
or
push
stos
int
jl
cmps
inc
out
push
mov
cmp
test
mov
dec
mov
mov
call
and
inc
mov
leave
jno
cs
adc
add
push
adc
or
mov
and
and
xor
adc
or
dec
xchg
shr
pop
rcr
inc
mov
dec
movs
xor
call
enter
rol
frstor
pop
daa
(bad)
sub
out
inc
push
mov
sbb
ds
cld
aaa
mov
sub
jne
aam
pop
ins
mov
cmp
inc
adc
jnp
test
(bad)
fld
sahf
add
add
sahf
inc
sbb
leave
xchg
mov
jno
ret
inc
test
call
jmp
(bad)
ins
sub
sbb
daa
or
pop
inc
ds
cmp
popf
loope
out
popa
xlat
mov
jl
mov
sub
mov
retf
pusha
retf
test
sub
add
mov
sub
scas
les
mul
pop
jl
push
out
out
jl
xchg
and
(bad)
daa
(bad)
adc
mov
dec
pop
ja
jmp
pop
adc
stos
scas
cmp
ins
xchg
cmp
stos
mov
cmp
rcl
clc
inc
popf
cmps
push
dec
test
ja
outs
in
test
cmp
cmp
sar
mov
sub
jg
dec
ins
adc
push
test
xchg
jl
arpl
repnz
jecxz
cmp
clc
xchg
(bad)
fnsave
(bad)
sbb
dec
pop
or
xor
inc
or
or
lods
pop
cli
xor
pop
and
jge
or
js
ficomp
(bad)
(bad)
lods
retf
add
test
mov
or
add
mov
or
dec
push
push
bound
inc
not
xchg
push
xchg
adc
push
test
sbb
or
cmp
fisubr
cmc
enter
adc
xlat
mov
cwde
hlt
out
call
or
fst
sub
mov
lds
mov
jg
(bad)
data16
enter
dec
sub
push
mov
mov
sbb
int3
fild
call
lods
cwde
leave
call
retf
adc
hlt
dec
in
mov
mov
jecxz
ret
jo
jl
outs
sub
adc
pop
cli
cld
jl
pop
cmps
nop
outs
mov
push
imul
push
fstp
mov
int3
add
out
je
pop
cmc
icebp
int
arpl
mov
ss
jl
mov
sahf
xor
daa
or
xchg
mov
imul
mov
push
mov
pop
shl
add
and
jb
sbb
pop
mov
xor
fistp
adc
pop
cmps
inc
jecxz
int3
adc
jle
mov
jno
pop
inc
jnp
lahf
cmp
mov
mov
cli
sub
popa
dec
pop
mov
xor
data16
cmp
pop
rcl
es
mov
(bad)
pop
inc
sar
mov
inc
sahf
das
mov
std
rol
fimul
imul
adc
ror
inc
or
or
popf
stos
xor
frstor
xchg
daa
xor
jl
adc
mov
loop
dec
jae
lds
retf
arpl
not
sub
(bad)
loopne
mov
push
adc
pop
lods
mov
scas
lock
movs
ins
jbe
sbb
cmps
inc
rol
or
inc
mov
push
(bad)
sbb
mov
outs
mov
test
pop
cmp
adc
pop
push
sahf
lock
rcl
mov
mov
xlat
adc
shl
cmp
std
fwait
imul
fld
jl
sti
jmp
xchg
pop
mov
int
xor
inc
push
inc
adc
cmp
xor
into
xlat
aas
push
mov
mov
loop
es
ins
pop
(bad)
and
gs
outs
push
inc
sahf
pop
xchg
in
sub
xchg
shl
icebp
ret
xchg
inc
lea
xchg
(bad)
out
inc
mov
mov
fild
adc
in
sub
xchg
stos
jbe
jo
ror
retf
sub
sub
cmp
xchg
pop
and
das
loope
bound
inc
sub
sbb
cdq
imul
daa
inc
cmp
jae
sbb
inc
adc
adc
dec
lods
shl
mov
mov
ja
mov
cmp
jle
call
lock
test
or
xor
dec
cmp
inc
xchg
dec
(bad)
pop
ret
add
add
fs
cwde
push
shl
aad
outs
fadd
adc
jo
mov
inc
xor
(bad)
int3
xchg
xchg
mov
outs
push
ds
push
pop
or
nop
mov
push
adc
adc
cdq
ins
pusha
sar
sub
sub
and
gs
mov
sub
repnz
mov
and
pusha
jnp
inc
mov
and
add
in
xchg
test
and
or
test
shl
test
fcom
xor
jae
xchg
sub
jns
push
mov
push
add
shl
jmp
xor
xchg
sar
test
ins
cmp
mov
xor
fisttp
fsub
add
inc
add
cmp
std
call
jle
xlat
add
or
(bad)
cdq
test
dec
fsub
xchg
into
xor
(bad)
push
pop
rol
dec
sbb
imul
add
dec
(bad)
fistp
in
pop
arpl
lods
mov
fsub
out
neg
jge
sbb
je
adc
in
and
push
cwde
imul
push
mov
movs
neg
aas
daa
test
jae
add
nop
mov
mov
mov
xchg
inc
outs
push
pop
mov
sbb
mov
dec
jp
sbb
cdq
sub
repz
or
mov
mov
and
xchg
pop
(bad)
mov
inc
sub
jno
stos
dec
(bad)
aad
loopne
lds
cmp
es
xchg
inc
or
xor
mov
outs
cmp
fldcw
mov
rep
cmp
js
rol
in
dec
in
fisubr
imul
ror
xor
aas
xchg
mov
add
retf
cmp
or
dec
lods
inc
js
repz
in
ja
mov
sbb
push
inc
cmp
or
mov
xchg
inc
cli
xor
cli
mov
jl
xor
xchg
hlt
xlat
fisub
mov
add
xchg
sub
aas
jg
out
adc
stc
and
push
mov
retf
hlt
ins
pop
sbb
fnstcw
push
sahf
cs
retf
cmp
outs
fs
lods
and
jg
out
jge
loop
mov
dec
xor
call
out
in
ss
loop
xchg
mov
sbb
add
fs
cmp
aam
adc
cmp
cmps
(bad)
sub
mov
rcl
inc
pop
xor
jecxz
imul
bound
xchg
mov
add
sti
stos
fs
ins
inc
leave
cmp
outs
cmp
out
dec
jae
hlt
xchg
mov
cli
or
(bad)
sub
inc
call
cmps
xchg
lods
mov
in
in
jge
add
out
cmp
jne
inc
pop
fldpi
lea
fsubr
fwait
ins
add
mov
mov
popf
dec
repz
adc
aad
cmp
enter
and
xor
cmps
test
fmul
xor
push
ret
mov
mov
sbb
dec
ror
jbe
enter
fwait
inc
stos
mov
in
mov
and
and
pop
js
rol
popa
push
pop
comiss
and
jne
mov
pushf
retf
xor
aaa
xchg
sub
je
cwde
cs
inc
das
pushf
sbb
imul
sbb
jle
sub
and
and
push
push
daa
inc
fsubr
jne
mov
jg
movs
imul
repz
cmps
lock
push
jbe
pop
fs
aas
imul
xchg
mov
pop
in
mov
or
scas
fs
inc
cld
pop
adc
loopne
mov
aas
jp
add
pop
int
call
outs
lea
out
lds
popf
shr
bound
(bad)
aad
dec
cmp
test
(bad)
sti
(bad)
into
and
(bad)
repz
(bad)
iret
or
lods
add
jmp
mov
adc
cld
xor
xchg
pop
int3
adc
adc
les
xchg
cmps
add
add
sbb
pop
adc
leave
sbb
mov
loopne
imul
addr16
dec
sub
jbe
imul
jne
test
mov
js
sbb
lock
test
push
and
mov
rol
shl
test
cmp
inc
and
or
sub
cdq
daa
leave
outs
push
and
add
je
fwait
inc
sub
xchg
adc
dec
call
dec
mov
jmp
ja
imul
sub
and
(bad)
in
mov
push
inc
ret
ret
pop
pop
jmp
aam
out
lahf
sahf
clc
and
pop
cs
jns
stos
out
inc
adc
adc
addr16
adc
ds
aad
test
ret
je
xchg
xchg
cmp
mov
dec
xchg
arpl
outs
adc
test
ror
xchg
mov
xchg
push
in
ficom
sbb
(bad)
outs
push
sub
xlat
pop
jmp
push
dec
sub
cmps
jle
jnp
rcl
xchg
enter
stc
cmp
and
or
inc
hlt
sahf
or
fist
idiv
push
mov
jns
gs
sahf
sub
mov
xchg
mov
sbb
fcom
xor
jbe
pop
aad
push
ror
fwait
pop
adc
lods
push
push
scas
cmp
jb
inc
push
cmp
das
dec
mov
jns
push
cmp
and
or
ins
fstp
mov
sbb
icebp
pop
cmp
adc
cmps
add
mov
mov
sbb
dec
and
and
mov
scas
pop
repnz
inc
mov
mov
popa
mov
cli
leave
xlat
ret
mov
inc
and
sbb
cdq
inc
jle
hlt
sbb
data16
repz
push
nop
aas
mov
adc
into
(bad)
mov
out
(bad)
lea
neg
mov
cmps
mov
scas
loop
push
lock
lds
dec
sub
cmovnp
jecxz
pop
xchg
push
or
mov
(bad)
in
dec
sub
imul
call
fwait
jmp
or
div
test
ss
mov
mov
or
xlat
out
(bad)
jb
in
and
outs
psraw
loopne
loope
cmp
call
inc
push
mov
push
and
sub
data16
dec
pop
inc
sub
pop
mov
cmp
or
stos
mov
mov
push
cs
sahf
rcr
push
mov
and
mov
aad
mov
add
fisubr
add
jns
jp
jl
fisttp
imul
adc
inc
fild
retf
outs
xchg
into
enter
movs
xor
mov
mov
aaa
mov
add
aam
inc
jecxz
mov
aam
stos
sub
leave
jnp
cli
in
fnsave
lock
ds
hlt
movs
cmps
sub
test
sbb
xor
jle
pop
lahf
in
sbb
addr16
dec
mov
xchg
int3
dec
mov
sub
scas
rep
shl
jbe
pop
jp
mov
into
push
push
shr
es
pop
sahf
push
aam
mov
popa
mov
add
jmp
mov
inc
and
aam
pop
mov
fist
hlt
add
sar
pop
mov
leave
cmp
not
jns
push
gs
jne
xchg
gs
push
xor
sbb
sbb
jp
inc
and
xchg
in
sub
mov
test
push
xlat
lock
fimul
in
xor
std
rol
cs
mov
(bad)
aaa
dec
in
push
clc
mov
push
in
cmp
cmp
arpl
imul
scas
leave
jb
pusha
lds
cdq
sbb
push
jge
sub
stos
cs
fdiv
dec
pop
popf
es
adc
pop
add
mov
sbb
shl
mov
leave
or
sbb
fs
shl
push
retf
inc
push
mov
dec
mov
sub
cmp
and
inc
rol
mov
imul
enter
mov
add
pushf
push
push
jb
aad
ss
test
test
push
cmp
mov
jnp
loop
xchg
mov
cli
fld
(bad)
call
sbb
in
dec
add
mov
jmp
mul
shl
add
dec
ret
in
adc
aaa
pop
or
dec
fwait
inc
pop
dec
xchg
xor
sbb
push
cli
sub
sar
mov
sbb
adc
and
jno
add
in
sbb
mov
mov
(bad)
xlat
daa
and
test
ja
mov
xchg
jl
sbb
sahf
or
ficomp
add
pop
fld
popf
test
loopne
movs
popf
mov
lds
add
arpl
xor
inc
jmp
das
and
mov
mov
jno
xchg
jmp
repnz
xchg
jno
or
add
arpl
pop
mov
mov
mov
jo
inc
mov
xchg
jge
out
mov
sbb
add
mov
cmp
mov
mov
retf
jo
popf
or
daa
pop
fisubr
xchg
mov
xor
das
xlat
(bad)
repnz
out
cmc
div
jb
arpl
test
cmps
aaa
lock
sub
call
or
ins
movs
add
cmp
jne
loope
inc
jmp
dec
mov
and
call
mov
and
ret
lds
pop
and
(bad)
iret
lock
int3
pop
mov
out
shl
ret
sub
daa
out
pushf
ret
fst
mov
ret
cmp
push
dec
inc
ds
cmp
adc
cli
adc
xor
sub
ss
sbb
pop
inc
mov
leave
sbb
mov
pop
sbb
cmp
fdivr
hlt
repnz
mov
xchg
gs
in
xchg
jmp
fld
sub
mul
lea
iret
ds
mov
adc
mov
push
cmp
and
push
out
cmp
push
shr
add
rcl
mov
sub
not
push
and
inc
ficom
outs
push
icebp
jbe
xor
mov
mov
lds
adc
inc
or
into
sbb
add
enter
or
inc
cdq
push
movs
retf
sub
out
fs
rcl
fisttp
or
jne
push
call
lahf
loopne
addr16
outs
push
mov
adc
(bad)
fcmovu
inc
xor
cmp
sub
inc
into
sbb
pop
rol
js
arpl
loope
js
xchg
mov
dec
pop
fstp
sub
aaa
dec
dec
mov
movs
mov
mov
mov
mov
leave
fwait
jb
cmp
pop
ins
inc
sub
sub
or
aaa
imul
sahf
outs
xchg
lds
(bad)
fdivr
stos
jmp
dec
xchg
push
sbb
pop
xchg
retf
mov
psrld
mov
mov
cwde
sub
ja
sahf
ja
inc
fsub
adc
pop
imul
lods
fs
mov
mov
test
nop
outs
stc
adc
push
cdq
pop
test
add
movs
outs
cdq
xor
retf
jns
or
jae
mov
div
jne
mov
jge
inc
pop
xchg
adc
(bad)
cmps
les
mov
push
jmp
cmp
push
loop
inc
enter
movs
stc
js
adc
sbb
out
cmp
inc
cwde
pop
push
into
imul
leave
call
ins
call
fisttp
mov
sar
cmp
or
and
je
outs
call
jae
dec
stos
cmps
dec
push
xchg
popf
push
or
xchg
xor
add
jnp
cmc
dec
in
xlat
ins
icebp
jle
push
or
pop
dec
sbb
jmp
and
sbb
add
ds
sbb
sub
inc
pop
or
(bad)
cmc
cli
stos
scas
test
lahf
imul
ficomp
sbb
lock
push
pusha
(bad)
add
stos
cmp
xor
test
fisttp
lea
call
or
call
xchg
push
jg
shl
inc
arpl
add
call
fwait
jnp
cmps
stc
jno
scas
pop
mov
add
shl
sub
gs
sbb
mov
mov
jp
fadd
out
and
je
dec
test
in
leave
int
add
and
aas
pop
mov
in
dec
dec
iret
mov
inc
pop
pop
dec
pusha
dec
jns
mov
sar
dec
dec
jnp
push
mov
xor
and
int3
cmp
sub
test
push
ror
jg
lods
pop
jg
jbe
bndldx
or
fadd
icebp
loopne
inc
add
cmp
xor
pusha
mov
mov
fdiv
cdq
ss
jmp
arpl
mov
es
push
cld
mov
adc
or
add
jmp
sub
jle
addr16
cmp
xchg
ret
jb
sub
adc
cmp
sub
add
call
dec
rol
lahf
test
clc
in
xchg
and
and
cdq
cmc
xor
aas
out
jmp
mov
mov
pop
push
mov
or
cmps
inc
das
sar
cdq
add
push
cmp
inc
jl
adc
inc
add
xchg
adc
xchg
sub
pop
in
loope
enter
mov
fwait
out
sar
jae
push
sbb
pop
xchg
add
pop
repz
add
std
das
inc
cmc
pop
imul
mov
mov
sbb
add
sahf
pop
mov
pop
shl
xchg
push
aad
out
mov
shl
cli
dec
movs
retf
(bad)
sbb
nop
fiadd
sub
mov
push
adc
int3
sub
add
into
loope
dec
gs
sti
lods
repz
adc
fwait
push
mov
icebp
mov
cmp
push
jns
dec
and
aas
(bad)
outs
inc
xor
fwait
pop
fisub
xor
test
inc
cs
shl
xchg
jbe
jmp
out
rcl
popf
test
popf
xor
pop
les
mov
mov
or
sar
xlat
cmc
cwde
jo
jle
inc
lea
out
xor
pop
dec
test
mov
pop
sti
sbb
nop
xor
xor
popf
iret
in
dec
sub
pop
into
repz
cwde
adc
jp
add
pop
dec
pop
pop
xor
sub
push
cmp
rdmsr
pop
mov
and
shr
lahf
mov
stos
and
mov
ret
outs
jg
fisttp
sub
arpl
fimul
(bad)
pop
mov
gs
jns
mov
xor
fstp
mul
out
jnp
cmps
xchg
adc
jmp
xor
jne
and
fimul
sub
xchg
popf
out
loope
cmp
imul
pop
xchg
or
ret
loopne
adc
sti
xor
mov
cmp
mov
loopne
cmp
clc
push
push
ror
xor
mov
in
dec
push
and
fdiv
mov
in
shl
loope
mov
outs
mov
push
mov
jae
xor
out
int3
arpl
sub
out
std
push
adc
ror
retf
add
fiadd
test
lahf
(bad)
ja
sbb
jbe
push
inc
mov
adc
mov
clc
mov
mov
int
int3
adc
(bad)
fcomp
je
ins
dec
push
in
neg
sbb
cli
(bad)
inc
push
jge
jg
xor
icebp
test
mov
xor
mov
call
call
js
pusha
xchg
mov
cli
in
(bad)
mov
xchg
bound
xor
push
mov
fwait
jo
es
arpl
pop
aam
les
push
inc
mov
in
xor
sbb
in
(bad)
pop
mov
icebp
push
pushf
sbb
into
jb
leave
bound
mov
js
mov
mov
ror
mov
sar
push
add
cmp
(bad)
sar
cmp
xchg
pop
cld
cli
cdq
loopne
(bad)
sub
mov
in
or
dec
ret
adc
xchg
jae
fisub
sub
sar
cmp
shl
sbb
dec
pusha
jb
push
adc
cmp
pop
add
sbb
jle
mov
shl
fbld
shr
mov
cdq
jbe
out
pop
into
in
fs
jge
data16
mov
aam
add
sub
fimul
imul
lods
pushf
push
nop
stos
cmp
mov
mov
push
(bad)
enter
pop
pop
les
inc
rcl
dec
mov
outs
mov
leave
bound
and
cs
lea
sbb
and
ficomp
push
loop
mov
xchg
cwde
xchg
mov
lahf
test
mov
adc
psubd
and
loopne
fisub
in
dec
jnp
daa
aas
popf
cmps
(bad)
cli
pusha
pop
jmp
push
mov
and
jle
sub
or
sub
mov
ficom
cmp
and
xchg
mov
or
push
pop
push
mov
pop
in
lods
add
pop
dec
jae
mov
inc
xchg
je
popa
mov
jmp
xchg
and
retf
jae
sub
test
inc
cmps
les
pushf
adc
xchg
out
jae
mov
mov
mov
cmovg
ins
mov
pop
mov
int3
imul
mov
adc
dec
loope
(bad)
cmps
mov
pop
push
mov
mov
in
inc
jnp
dec
cmp
rcl
inc
sub
mov
dec
cld
push
inc
test
movs
mov
jns
addr16
jmp
arpl
xchg
adc
add
fimul
retf
and
iret
or
mov
and
loop
ss
test
or
mov
xchg
movs
call
(bad)
push
fcmovbe
add
retf
add
xor
movs
sub
xor
push
dec
test
pop
in
inc
aaa
stos
inc
pop
xor
dec
and
shl
adc
pop
or
inc
cmp
jo
or
sar
imul
pop
lock
jbe
sub
push
(bad)
pushf
mov
sbb
sub
pop
sub
add
pop
and
or
xchg
aas
clc
and
rcl
xchg
jle
mov
repnz
or
mov
push
les
jg
and
xor
imul
sub
jae
pushf
push
push
mov
sbb
out
inc
cmp
or
sbb
scas
scas
jnp
mov
mov
and
xchg
outs
icebp
sub
add
mov
mov
aad
jmp
repnz
call
push
icebp
and
jmp
ds
xchg
inc
call
ss
in
push
ds
dec
(bad)
dec
repnz
pop
cdq
or
aaa
jbe
mov
fisub
sub
fwait
mov
mov
outs
fild
dec
sub
jmp
xor
jno
hlt
push
xchg
mov
sub
xor
gs
mov
xchg
dec
loop
inc
lea
cmps
test
push
(bad)
dec
(bad)
fsubr
jmp
push
sub
aas
ds
xor
daa
rol
ret
ins
mov
out
push
(bad)
repz
fistp
pushf
into
test
leave
xor
inc
adc
ds
fidiv
adc
scas
rcl
out
dec
sbb
pop
push
or
cdq
adc
ret
dec
in
mov
cmp
xchg
jmp
out
mov
jge
dec
push
arpl
scas
lods
mov
aad
sbb
fs
cmp
jp
adc
mov
dec
cdq
je
out
daa
scas
popf
sar
and
xchg
(bad)
cmp
lds
gs
daa
mov
bound
lea
call
or
mov
lahf
lahf
ret
xchg
scas
es
cmp
fisttp
cmps
popa
loope
es
sahf
sbb
mov
shl
bound
inc
push
jle
jg
jmp
jp
aas
inc
jp
cmp
scas
mov
xchg
icebp
inc
out
repz
out
fiadd
mov
xchg
out
adc
pop
adc
mov
xchg
sar
cmp
xor
(bad)
icebp
pushf
and
xchg
xchg
pop
jg
add
adc
call
stos
push
lods
push
mov
aad
repnz
loope
cdq
pop
xor
inc
imul
adc
pop
rcl
xchg
jge
adc
arpl
inc
pop
outs
outs
clc
das
pop
mov
fidiv
pop
xor
or
scas
and
sti
jbe
adc
mov
mov
adc
push
mov
imul
pop
jns
mov
mov
sbb
mov
push
jmp
mov
in
mov
inc
aam
inc
mov
js
pusha
outs
push
mov
jmp
mov
adc
xor
movs
movs
scas
scas
js
adc
neg
pushf
cli
xlat
dec
aam
cld
push
dec
xor
pop
xchg
dec
ficomp
mov
out
push
aas
ret
(bad)
pop
inc
cld
mov
in
mov
sub
test
sub
dec
ror
fnstenv
fcomp
rol
xor
cs
jb
inc
test
cmp
dec
rol
push
cmc
mov
mov
mov
push
push
jo
jl
shr
mov
retf
xor
adc
sub
mov
into
xlat
xor
and
ss
cmp
dec
add
out
adc
xchg
pop
lahf
in
in
sbb
push
hlt
mov
and
push
pop
and
out
mov
(bad)
neg
sbb
cmp
add
push
ss
enter
xor
arpl
int
test
jno
outs
out
in
cmp
lahf
(bad)
je
cmp
push
inc
sahf
sbb
popa
rcr
aad
test
inc
out
outs
addr16
dec
jo
imul
sub
test
in
adc
mov
mov
pop
xlat
aas
cmp
push
and
out
and
and
test
jmp
cmps
rcr
pusha
mov
jmp
xor
(bad)
jl
jb
mov
js
clc
mov
ffree
jp
test
xchg
std
stos
bound
xchg
mov
mov
inc
or
cli
repz
ins
jae
push
or
je
mov
sbb
mov
enter
mov
and
jnp
pop
add
mul
and
(bad)
push
(bad)
cmc
add
inc
mov
xchg
sub
push
jno
mov
jnp
push
jns
cmp
aas
or
cmp
int3
arpl
xchg
es
aam
mov
xlat
sbb
std
into
fcom
xchg
fprem
and
jle
sbb
add
out
in
rcr
cmp
dec
sbb
or
pusha
adc
jo
dec
push
(bad)
pop
and
dec
push
jne
aaa
inc
mov
mov
iret
pop
mov
adc
add
test
aam
(bad)
loopne
add
loopne
jl
mov
xchg
mov
imul
jmp
or
sub
cmp
xchg
stos
cmp
sti
jecxz
or
push
cmp
out
dec
jnp
ret
rcl
test
inc
jp
sahf
cmp
test
xchg
push
das
je
clc
jns
cdq
mov
xchg
push
jnp
(bad)
retf
es
cs
(bad)
repnz
fist
add
add
leave
je
cwde
mul
sub
cmp
aam
cmp
cmps
int
popa
shl
pushf
fld
or
aas
xor
mov
aaa
test
sbb
sub
adc
mov
test
or
xor
push
mov
retf
mov
xor
(bad)
call
sub
into
aam
dec
mov
fs
aas
or
cmp
push
jbe
enter
movs
js
repz
out
movntps
cmp
xchg
leave
mov
xor
out
and
call
jnp
cwde
mov
inc
cmp
xchg
(bad)
loop
mov
les
out
rcr
fs
pop
jne
adc
(bad)
cmc
test
push
es
daa
mov
xor
(bad)
or
or
mov
into
ret
xor
push
sub
or
xlat
clc
(bad)
lea
out
mov
loopne
mov
pop
pop
xchg
sub
pop
pop
jns
jno
push
inc
daa
in
inc
dec
aam
push
and
ds
aaa
imul
(bad)
mov
inc
je
mov
cmp
js
into
sbb
rcl
jmp
push
neg
in
mov
aas
and
fwait
sahf
imul
das
jo
into
sub
add
mov
mov
push
sub
sbb
das
gs
shr
adc
dec
iret
mov
scas
loop
ins
jecxz
test
dec
push
mov
mov
and
retf
xchg
mov
adc
inc
mov
mov
jecxz
add
xchg
das
mov
jp
ret
mov
dec
inc
(bad)
addr16
gs
imul
adc
mov
xchg
loop
lods
add
int
cwde
inc
mov
xchg
js
adc
xlat
stc
xchg
cmps
adc
sub
ret
inc
sbb
fidivr
pop
jge
or
jp
cmp
imul
pop
inc
rcr
dec
(bad)
dec
(bad)
stc
push
xchg
sub
retf
mov
jmp
cmp
mov
xchg
jo
pop
jbe
(bad)
or
ds
ja
es
xlat
rcl
xor
iret
cs
aam
sbb
pusha
jp
adc
icebp
cmps
clc
(bad)
(bad)
or
jp
clc
lock
ficom
sbb
out
(bad)
adc
push
sub
sbb
pushf
mov
inc
inc
and
mov
fbstp
xor
lds
xchg
jmp
xchg
jb
sub
push
or
icebp
inc
push
das
outs
fild
imul
lods
stos
mov
mov
cmp
cli
retf
shl
sub
frstor
lea
gs
pop
mul
dec
push
retf
mov
retf
pop
xchg
leave
pop
lods
jl
mov
test
inc
test
test
loopne
adc
(bad)
iret
mov
mov
call
adc
mov
dec
jnp
fs
rol
push
and
pop
sti
inc
xchg
jge
cmp
dec
shl
xchg
or
pop
jne
mov
jg
pop
into
and
pop
jg
(bad)
jg
clc
adc
lods
imul
dec
lods
add
adc
loope
pop
mov
nop
int3
shl
push
jmp
pop
lahf
test
jecxz
or
stos
cmp
sub
mov
rol
push
mov
mov
ins
stos
push
xchg
sbb
xor
dec
adc
rol
icebp
rcr
and
push
loop
or
pop
retf
mov
int
mov
dec
push
arpl
dec
sbb
or
pop
ror
jmp
ds
pop
push
mov
xchg
pop
lock
shr
or
mov
pop
inc
adc
lea
mov
adc
dec
test
fiadd
lds
(bad)
add
push
sub
add
xchg
xchg
jo
mov
rcr
test
sub
xchg
(bad)
loopne
mov
push
xor
xchg
mov
and
mov
retf
in
sub
adc
adc
aaa
pop
pushf
dec
inc
push
dec
mov
mov
(bad)
(bad)
jp
arpl
cmp
xchg
cmps
dec
mov
dec
pop
jno
add
adc
jle
mov
sub
in
jle
push
es
xor
lea
mov
clc
or
fmul
adc
es
out
nop
xchg
push
add
sub
cmp
into
push
or
jl
ret
sbb
scas
sbb
cmp
push
ja
cmc
or
lods
mov
inc
dec
and
shl
sub
les
xchg
sbb
idiv
sub
or
imul
add
loop
push
movs
mov
pop
adc
mov
aas
mov
sub
outs
clc
dec
pop
pop
out
call
pop
sbb
fs
add
and
add
aam
cmp
call
neg
fcomip
(bad)
movs
shl
mov
adc
dec
stc
bound
dec
ret
jl
mov
mov
ret
sahf
sar
pop
xor
out
repnz
jmp
int3
das
sub
push
xchg
or
cmp
test
lods
iret
jae
xor
test
jb
je
mov
jl
adc
inc
lahf
mov
stos
mov
out
add
imul
stc
mov
pop
mov
dec
or
fbstp
pop
jmp
add
or
push
ret
arpl
adc
imul
sbb
push
test
int3
mov
mov
pusha
pusha
add
clc
sbb
ins
push
pop
and
into
repnz
in
aaa
and
std
stc
fdivp
push
jae
push
add
pop
add
sti
mov
punpcklwd
sub
or
aam
mov
xor
sbb
dec
push
mov
xor
sub
or
(bad)
ret
mov
in
(bad)
into
xor
test
aam
adc
jne
mov
mov
out
fcom
cs
mov
sbb
push
sbb
out
push
(bad)
xchg
jb
dec
adc
mov
sbb
sub
retf
(bad)
pop
mov
xchg
arpl
dec
icebp
(bad)
clc
cmp
mov
inc
push
in
lods
(bad)
cmp
stos
retf
ins
repz
stos
in
lea
int
mov
rcr
mov
jecxz
adc
fnstcw
jbe
in
jbe
out
nop
loop
pop
pop
xlat
das
js
nop
mov
inc
mov
pop
add
nop
outs
fst
jae
pop
push
sub
leave
jmp
jl
jl
jg
adc
or
xchg
push
xchg
mov
repz
cmp
add
out
mov
mov
int
outs
in
xor
int
les
lock
jecxz
ret
cs
aas
gs
test
push
push
xchg
push
fmul
(bad)
jae
mov
sub
inc
dec
add
test
pop
mov
push
mov
sar
(bad)
jl
add
or
fisub
movs
xor
pop
jmp
sbb
xchg
movs
mov
sub
movs
dec
sar
adc
loop
ret
mov
(bad)
jl
inc
popf
and
int
dec
mov
int3
inc
mov
pop
rol
mov
pop
clc
or
push
lea
sbb
in
jg
or
jno
icebp
test
dec
xchg
jne
xchg
cli
or
fdivr
cld
mov
mov
test
out
adc
push
mov
mov
pop
aaa
xor
shr
jbe
push
add
cmp
cli
pop
fstp
inc
loop
dec
fist
in
ins
cld
bound
call
shrd
push
jnp
push
lahf
pop
dec
push
repnz
pop
inc
xchg
xchg
dec
rol
push
lahf
pop
rep
repnz
icebp
dec
jmp
fcom
ss
movs
bound
inc
push
inc
mov
ins
aad
jae
lods
adc
out
and
ret
xchg
jne
out
add
stos
js
aad
jecxz
les
add
out
sbb
cli
out
or
push
cmp
call
push
lods
push
imul
push
adc
dec
add
pop
cmc
xchg
pusha
(bad)
dec
xchg
das
pop
(bad)
fnsave
rcl
fst
leave
aam
popf
lock
push
push
dec
out
sub
ss
fbstp
outs
jl
icebp
mov
mov
dec
stos
inc
in
inc
sbb
mov
ror
rcr
(bad)
xchg
pop
sub
push
lahf
into
cmp
and
cdq
test
add
mov
push
retf
cwde
movs
icebp
sbb
ja
cmps
mov
dec
add
inc
cdq
iret
or
jp
ret
lock
jmp
add
mov
stos
clc
add
loopne
xor
cmp
push
mov
in
and
cmp
jecxz
in
js
cmp
pop
jecxz
cmps
icebp
push
fimul
icebp
cmp
test
(bad)
cmp
stos
push
or
gs
icebp
mov
inc
lds
ret
xchg
loope
(bad)
scas
sbb
push
cdq
or
push
or
cdq
sbb
mov
push
jb
xor
cmc
(bad)
jg
inc
enter
sbb
fucom
ficomp
or
call
add
jge
push
int3
adc
jns
add
loop
cdq
repnz
mul
mov
dec
jmp
enter
in
xchg
mov
mov
jl
mov
in
pop
test
jae
mov
adc
push
dec
mov
cmp
mov
pop
inc
mov
sahf
mov
inc
dec
adc
add
mov
jne
mov
adc
in
pop
ins
xor
dec
xchg
ret
imul
jne
ret
jns
ret
fdiv
inc
push
int
lahf
cmp
mov
push
fcmovne
test
out
loop
inc
fcmovnb
inc
scas
xor
call
push
jle
rol
cmc
ja
sub
mov
sub
adc
loope
mov
pinsrw
retf
dec
xor
adc
pop
jmp
ss
and
movs
adc
inc
pusha
test
pop
in
push
dec
fnstsw
inc
repz
jno
push
fstp
mov
pop
cmps
mov
or
test
ja
imul
jnp
int
xchg
xchg
xchg
(bad)
push
mov
daa
mov
fisttp
into
fadd
movs
jmp
cmc
mov
mov
inc
jbe
cdq
iret
adc
jge
lods
jne
pop
mov
fisttp
pop
mov
neg
mov
scas
aas
hlt
pop
inc
pusha
jmp
stos
mov
sub
aas
cmps
ss
jno
shl
sub
cs
out
repnz
xchg
inc
mov
retf
pop
mov
sar
jle
test
mov
aas
push
lods
xchg
enter
dec
mov
pop
shr
js
and
das
mov
inc
mov
gs
popf
aam
cmps
adc
add
mov
imul
pop
and
adc
pop
inc
adc
dec
fs
mov
pop
xchg
xor
fiadd
call
xchg
stos
inc
jmp
push
mov
xchg
jg
jmp
mov
in
in
repnz
and
xor
call
ret
sbb
in
call
push
mov
in
push
jbe
push
shl
sbb
fs
lock
and
dec
dec
popf
cmp
call
inc
cwde
and
or
push
xchg
xchg
in
fimul
jg
in
ja
dec
jo
jmp
mov
addr16
cmp
jge
cmp
push
sbb
daa
daa
jl
jno
(bad)
dec
pop
ins
mov
add
xlat
jmp
sahf
adc
or
sbb
ret
or
iret
fidivr
inc
xchg
jne
dec
in
loop
imul
int
pop
(bad)
leave
outs
inc
cli
mov
jge
int3
scas
fmulp
mov
fnsave
push
mov
fs
ficomp
fistp
mov
sub
rol
adc
nop
mov
shr
push
xor
das
(bad)
cmp
xchg
cmp
inc
xor
mov
push
into
xor
call
inc
scas
sub
pushf
in
loope
stos
pop
outs
push
mov
js
mov
cdq
or
sar
inc
xchg
imul
mov
data16
pop
sbb
or
dec
adc
xchg
es
outs
fnstcw
fs
clc
and
sub
mov
push
dec
daa
jmp
fld
add
jl
or
ins
fwait
popf
cmps
adc
in
or
add
pop
out
inc
mov
icebp
push
aaa
stc
push
sar
mov
dec
mov
push
cmps
jae
push
mov
jno
adc
(bad)
jmp
adc
cmps
or
iret
dec
xchg
movs
xor
add
mov
sub
sbb
ss
gs
sar
movs
push
mov
scas
jle
lahf
je
bound
mov
cwde
cmp
add
mov
lea
xchg
add
leave
aas
aad
sti
imul
dec
add
(bad)
mov
cmp
ins
add
jmp
rcr
retf
and
or
fisttp
jnp
mov
adc
jmp
push
or
xchg
xchg
inc
dec
pop
das
fwait
jp
pusha
add
retf
xor
std
or
imul
pop
test
leave
arpl
or
(bad)
loopne
out
or
retf
add
in
add
cmp
rcr
cmps
lahf
jp
int
push
enter
add
pop
jnp
sub
jnp
mov
xor
jmp
mov
popa
fucomip
dec
cwde
cli
out
in
nop
sbb
fidiv
stc
ficom
jno
ja
hlt
mov
push
add
cld
loopne
int
jmp
mov
(bad)
std
in
xchg
aad
and
les
push
icebp
xchg
adc
loop
clc
add
idiv
jmp
outs
pop
lahf
lahf
pop
dec
mov
das
xor
int3
sbb
pop
inc
hlt
out
retf
jbe
mov
(bad)
enter
inc
pop
sbb
pop
fidivr
xor
cmp
(bad)
sub
ins
xchg
inc
aam
movs
pop
lahf
push
pop
out
add
jmp
call
cmp
das
sbb
cmps
xor
mov
aam
push
stos
outs
inc
pop
leave
std
aam
push
push
aas
sahf
in
or
fdivr
out
adc
and
ficom
stos
inc
outs
shl
dec
xchg
pop
jge
ins
cmps
push
test
cs
inc
ss
inc
mov
mov
inc
dec
shl
fnstenv
jl
mov
push
pop
pop
fisubr
mov
mov
scas
push
mov
retf
pop
or
or
addr16
add
jmp
jne
fild
cs
scas
repz
(bad)
je
into
cmc
fmul
stc
aaa
sub
hlt
dec
adc
je
or
inc
push
inc
mov
in
xor
js
daa
scas
js
(bad)
sbb
push
gs
ror
push
xchg
adc
nop
jno
ins
outs
mov
(bad)
mov
add
xchg
aam
adc
xchg
test
ror
loope
hlt
jo
adc
loop
push
pusha
movs
pop
out
aad
jle
in
fstp
out
mov
cmp
(bad)
jae
sbb
loopne
jle
fwait
pop
mov
add
vaddsubpd
cdq
add
adc
add
dec
scas
inc
and
cld
sub
mov
aam
dec
arpl
jmp
in
out
pop
cmp
jl
sbb
xor
xchg
mov
xchg
in
and
aam
dec
das
fisttp
and
movs
xor
retf
xchg
bound
call
xchg
push
pop
cmps
push
nop
push
js
mov
cmp
leave
sub
mov
mov
pushf
or
std
adc
imul
mov
fidiv
ficomp
dec
test
sti
or
add
or
sti
arpl
dec
(bad)
aaa
lock
addr16
stc
adc
shl
aas
(bad)
fstp
mov
mov
xchg
das
inc
pop
stos
inc
(bad)
pop
test
adc
icebp
xchg
mov
mov
mov
rol
mov
fnsave
jge
jo
fsubrp
push
adc
pop
repz
mul
in
leave
pusha
loop
jmp
popf
sub
les
mov
ret
imul
mov
and
lahf
retf
fimul
imul
push
mov
mov
ins
and
fild
stos
popf
cmp
mov
dec
jno
imul
mov
add
mov
in
scas
mov
push
pop
inc
stos
xor
mov
aaa
inc
add
pusha
test
and
xchg
xchg
out
jne
clc
popa
adc
mov
add
leave
dec
mov
ret
stos
and
inc
pop
mov
dec
jnp
adc
jne
fstp
xchg
scas
adc
mov
add
arpl
add
mov
or
call
js
dec
pop
sbb
int
sbb
mov
mov
jmp
cmp
sub
in
cs
ss
mov
call
sbb
jl
lods
cmp
cmp
mov
je
mov
sbb
xor
push
jno
cmp
sbb
in
xor
pushf
stos
dec
mov
outs
and
and
je
dec
cmps
test
pop
and
pop
inc
outs
add
movs
cli
add
jg
scas
mov
retf
retf
lods
sub
pushf
popa
stc
adc
xchg
jae
dec
push
or
lahf
enter
mov
xor
jbe
icebp
in
cmps
mov
popa
outs
ret
retf
ins
in
scas
or
sbb
outs
mov
pop
pop
jbe
inc
sbb
mov
cli
mov
popf
push
lahf
fcmovnbe
push
repz
jle
js
jno
mov
xchg
test
test
daa
jp
and
mov
dec
retf
cmp
pop
std
adc
sti
mov
test
adc
in
inc
movs
cmp
adc
add
inc
pop
or
sub
ja
out
popa
and
mov
or
imul
add
sub
movs
jmp
aam
sbb
and
test
jnp
inc
ja
movs
test
jl
mov
xchg
(bad)
cmp
adc
(bad)
lods
push
ficom
jge
mov
stos
mov
push
mov
ror
sub
loopne
ss
xor
mul
imul
push
adc
repnz
in
jns
mov
mov
adc
fadd
(bad)
retf
mov
xor
rol
push
mov
pusha
jle
push
fidivr
and
(bad)
pop
mov
or
xor
scas
lods
cmps
(bad)
mov
and
mov
je
inc
fstp
adc
dec
mov
repz
into
pusha
lock
pop
mov
push
mov
lods
inc
inc
dec
repz
and
out
push
xchg
call
inc
in
int
mov
ret
sub
imul
and
pop
push
popf
xchg
and
test
or
cmps
sbb
or
sbb
mov
dec
retf
xor
xchg
cmp
xor
inc
push
adc
dec
sbb
jmp
add
lock
or
xchg
and
(bad)
das
inc
aas
mov
jmp
dec
mov
and
sub
push
retf
out
out
or
xchg
sahf
(bad)
stos
fstp
fsubr
jg
ret
imul
xor
sbb
add
les
xor
pop
shl
cmps
stos
dec
repz
ins
(bad)
ret
fcom
or
rcr
inc
imul
into
fisubr
clc
dec
fdiv
lea
mov
cmps
cld
mov
and
rcr
mov
add
xor
xchg
shl
addr16
mov
in
and
mov
and
mov
mov
into
mov
cmp
das
sub
call
ss
jmp
mov
jnp
jecxz
loopne
ret
arpl
clc
jecxz
outs
or
sub
jp
stc
xor
or
(bad)
or
mov
sbb
ins
mov
inc
xchg
xor
ja
test
xchg
or
mov
dec
or
das
adc
ror
cmp
mov
mov
mov
add
mov
jno
dec
(bad)
fdiv
pop
das
inc
sbb
xchg
(bad)
jge
and
mov
div
mov
es
jmp
out
xchg
adc
jo
or
(bad)
mov
pusha
push
repnz
imul
adc
cli
int3
xchg
int
cli
pusha
sahf
fmul
stc
mov
inc
pop
mov
mov
pop
pop
fs
xchg
sub
enter
push
mov
sub
push
xor
pop
jmp
xchg
stos
call
outs
cmp
movs
aam
lock
fsub
fild
push
or
pop
lds
stos
cmps
call
jns
cmp
add
jo
cmp
jl
xor
stos
mov
or
mov
movs
mov
test
mov
cmp
in
mov
fimul
scas
shl
(bad)
lds
or
sbb
into
jb
jno
pmulhw
fsubr
adc
test
loopne
adc
dec
pop
mov
xchg
jl
mov
mov
pop
jp
(bad)
out
gs
cld
or
mov
pop
rol
dec
std
or
imul
lds
adc
dec
fs
shl
jmp
push
into
adc
sti
arpl
sub
add
clc
push
sbb
dec
lods
das
aad
cmp
stos
and
sahf
fdiv
push
repz
mov
pop
or
shl
cmp
dec
pop
jl
lahf
mov
jnp
jecxz
pop
call
push
inc
into
ja
mov
outs
scas
repnz
ins
add
ins
stos
fdivr
fwait
ret
shr
dec
ficom
stos
fs
mov
push
push
test
fldenv
dec
or
pop
sbb
push
pop
adc
mov
(bad)
stos
rcl
push
xor
xor
stc
gs
xchg
data16
jmp
lock
ja
out
push
jnp
cmovl
push
rcr
(bad)
jne
sbb
ss
aad
cmp
test
ficomp
mov
out
and
ins
lds
push
scas
ja
adc
xchg
mov
sbb
rol
fsubr
pop
fisttp
mov
retf
mov
imul
div
pop
inc
int
sub
xchg
scas
xchg
les
pop
and
sub
or
sbb
or
add
fnstenv
inc
test
mov
xor
int3
pop
xchg
sub
mov
cli
clc
scas
fsubr
jecxz
scas
jne
mov
into
xchg
rcr
fadd
or
cmp
cld
mov
mov
aam
in
addr16
aad
dec
dec
cwde
fcom
and
test
or
jp
lods
lods
push
cmps
retf
fs
rcr
xchg
mov
loope
cli
mov
and
loop
adc
loop
and
fild
shufps
inc
inc
pop
sbb
and
cmp
cdq
outs
neg
retf
jae
dec
test
iret
in
stc
mov
pop
stos
scas
mov
xchg
out
nop
cmp
mov
mov
mov
add
neg
or
push
jecxz
cmps
scas
mov
pop
fldcw
inc
stos
and
test
push
adc
(bad)
call
enter
idiv
and
jle
jbe
and
sbb
shr
(bad)
in
repz
jmp
lea
out
les
adc
cmp
clc
fldenv
xchg
popf
test
fs
aad
stos
mov
inc
sbb
cmp
dec
daa
xchg
pop
push
(bad)
jae
mov
aas
loope
mov
or
cmps
cmps
std
movs
jno
push
push
ja
int
gs
popa
shl
lea
sbb
pop
xchg
inc
jl
out
pop
mov
push
adc
sbb
xor
int
fld
push
fs
(bad)
jb
push
cmp
imul
pop
(bad)
cmc
add
inc
and
arpl
test
in
ret
jns
outs
cmp
popf
inc
xchg
inc
pop
mul
inc
jo
call
xor
test
mov
aam
or
and
adc
mov
data16
and
cwde
adc
mov
jnp
dec
call
push
jnp
je
mov
pop
mov
mov
das
rcr
inc
jno
test
ins
mov
mov
jl
fmul
stc
sub
(bad)
mov
and
outs
xchg
ss
mov
shr
cmp
xor
and
xchg
(bad)
sti
neg
mov
push
adc
mov
dec
mov
xchg
lods
push
mov
pop
out
or
jns
out
fstp
out
push
dec
cs
and
xchg
inc
sub
stos
dec
jge
mov
scas
cmp
xor
retf
jae
or
test
sub
cmp
and
push
mov
icebp
pushf
sbb
(bad)
(bad)
inc
push
jnp
mov
in
cmp
add
mov
int
cmp
popa
(bad)
cmps
fs
mov
cmp
dec
push
cmp
jne
out
dec
pop
push
push
mov
pop
and
mov
xor
adc
dec
(bad)
in
cwde
ss
or
aas
jmp
test
out
jecxz
lahf
mov
test
jo
mov
pusha
aas
lods
retf
sbb
dec
mov
push
mov
push
inc
or
mov
mov
out
pop
jp
(bad)
jmp
je
fldcw
push
push
push
js
cmp
mov
(bad)
in
retf
adc
or
imul
or
sub
imul
pop
xchg
loop
jp
jmp
jne
xchg
icebp
xchg
aad
pop
jne
cmp
xor
mov
(bad)
or
sbb
cmps
les
cdq
jmp
or
pop
jmp
jo
sbb
dec
arpl
push
sahf
leave
imul
mov
mov
das
call
(bad)
adc
imul
jae
inc
push
push
add
movs
and
mov
sub
inc
leave
shr
cdq
lock
mul
mov
jnp
frstor
aad
mov
std
adc
inc
push
and
adc
fsub
out
stc
dec
xlat
push
ins
pop
clc
pusha
pushf
jle
mov
adc
aaa
aam
inc
cmp
imul
dec
test
jo
pop
push
int3
inc
mov
mov
shl
add
inc
or
ins
inc
pop
dec
outs
sub
cmp
sbb
jno
retf
cwde
out
jle
clc
sti
and
push
xor
xchg
inc
mov
cmp
leave
push
pop
rcl
scas
jg
cmps
jmp
mov
xchg
je
pop
aas
aaa
arpl
pop
fist
fdiv
push
jae
popf
push
jge
pop
into
iret
lds
push
inc
and
cwde
xchg
push
adc
mov
jbe
pop
or
test
js
dec
push
cmp
out
add
xor
adc
aam
mov
test
dec
aam
mov
(bad)
inc
stc
mov
xchg
dec
fmulp
nop
push
jmp
sbb
pop
icebp
dec
movs
adc
test
xor
sub
xchg
test
adc
inc
and
mov
xlat
out
rol
or
ds
dec
jne
test
adc
adc
push
mov
inc
ins
test
pushw
add
movs
inc
rol
mov
cmc
xchg
fs
mov
cmps
movs
and
jmp
ror
cmp
mov
sbb
pushf
push
push
mov
xor
push
sbb
inc
stos
mov
retf
xchg
(bad)
and
inc
test
int
push
mov
mov
sahf
mov
(bad)
pop
dec
inc
push
(bad)
and
push
cmps
mov
in
jns
cmc
pop
out
pop
mov
lods
adc
sub
cmp
xchg
mov
sbb
test
shl
jbe
int
div
inc
call
fwait
gs
mov
mov
and
js
xor
xchg
lock
shl
mov
xchg
mov
clc
dec
sbb
inc
dec
aad
(bad)
mov
sti
jbe
shr
loope
adc
and
test
ret
sub
mov
cmps
in
retfw
xchg
bound
add
popf
nop
gs
xchg
dec
pop
stos
or
adc
outs
ficomp
das
iret
ret
adc
xchg
xor
outs
imul
xor
into
mov
fsub
mov
cli
scas
repz
cli
and
in
dec
pop
jo
shl
popa
ins
cwde
stos
ret
cmps
mov
cmps
cwde
jecxz
sub
mov
inc
nop
add
and
out
mov
sbb
dec
xchg
rol
xchg
mov
xor
stos
ds
mov
stos
sbb
je
popf
xor
enter
cwde
push
(bad)
push
popf
jb
add
sbb
rcl
adc
ja
and
pop
js
adc
push
jo
shr
leave
mov
mov
test
(bad)
aas
es
push
mov
leave
xor
mov
ja
or
fidiv
xchg
scas
pushf
(bad)
xchg
dec
cwde
sbb
mov
lea
(bad)
cli
shl
push
sub
pop
mov
push
gs
mov
cdq
nop
arpl
xchg
xchg
sub
fld
jg
repz
mul
iret
fmul
outs
out
sub
push
fst
(bad)
aas
les
pop
test
shl
ins
shr
mov
jle
cld
loope
imul
inc
pop
add
in
pop
mov
cmp
iret
adc
and
in
inc
push
in
jb
dec
test
and
sub
push
or
pop
fsubr
in
jge
dec
fcmovu
pusha
or
dec
loopne
mov
inc
scas
pop
dec
or
call
pop
or
rcl
mov
cld
add
pavgb
adc
pop
into
sub
push
icebp
fs
dec
sbb
pop
or
pop
jae
jge
pop
outs
add
or
sub
sbb
jmp
sbb
xchg
sbb
mov
mov
push
rcl
mov
(bad)
adc
mov
adc
loopne
mov
scas
pushf
add
add
jl
retf
repnz
imul
mov
mov
sbb
lods
push
test
jne
movs
aas
retf
jno
xchg
pusha
mul
movs
(bad)
in
jp
mov
push
jecxz
iret
lods
and
xchg
add
aad
mov
dec
(bad)
jbe
and
ins
cmp
jl
fiadd
mov
jns
jmp
icebp
(bad)
mov
fdivr
pop
add
fist
cmps
jbe
push
inc
jnp
dec
loopne
cld
out
fimul
(bad)
test
in
gs
out
mov
or
sahf
rcr
add
(bad)
sahf
xor
sti
sahf
add
movs
sbb
lock
outs
mov
imul
mov
mov
dec
sub
mov
dec
imul
cs
popf
das
cmp
or
xchg
cmp
cmps
inc
lahf
and
outs
push
es
fist
pop
shr
out
call
sbb
push
mov
retf
xchg
xlat
out
call
daa
into
cmp
int3
fs
sub
jo
cmc
aas
adc
pusha
cmp
mov
stos
mov
arpl
sub
xchg
fimul
adc
int3
test
pop
ret
(bad)
fisub
sub
fisttp
arpl
in
mov
retf
pop
mov
popa
in
inc
shl
gs
add
lea
je
inc
sub
jnp
push
shl
out
call
stc
sahf
daa
inc
bound
test
(bad)
outs
add
(bad)
cdq
icebp
xchg
fisttp
mov
jg
dec
xlat
inc
pusha
mov
iret
das
movnti
je
out
(bad)
pop
xlat
and
jge
rol
pop
xor
lds
mov
fidivr
lods
mov
mov
and
mov
mov
retf
(bad)
movs
ror
(bad)
jg
pop
mov
and
daa
cmps
das
or
(bad)
mov
add
cmp
into
out
popa
mov
xor
cmp
cld
cmp
cli
dec
frstor
mov
int3
jb
sbb
lods
test
not
out
push
push
out
ret
sub
mov
push
fild
cmp
sti
retf
xor
mov
sub
lock
outs
div
lea
sti
into
inc
comiss
xchg
dec
fild
inc
push
sar
xlat
daa
loop
out
dec
call
jne
fstp
les
outs
add
call
test
out
pop
bound
pushf
inc
int3
mov
xor
in
imul
loop
test
das
scas
punpckhdq
repnz
sub
in
(bad)
popa
or
push
push
mov
test
xchg
rcl
mov
cmp
stos
sbb
shl
shr
dec
or
add
dec
adc
adc
push
mov
fist
and
cmp
shr
iret
lahf
test
and
hlt
or
int
mov
je
aaa
push
bound
pop
add
cmp
retf
jg
int
mov
push
lea
sbb
and
jmp
xor
pop
ret
and
(bad)
and
(bad)
fld
push
fnstenv
fsubr
test
mov
dec
in
pop
pop
mov
adc
lea
jge
adc
jge
dec
mov
pop
cli
ins
dec
leave
lock
pop
ins
push
mov
jl
(bad)
inc
jg
cmps
into
out
imul
nop
test
xor
or
sbb
(bad)
mov
or
cmp
fild
ret
outs
stc
lahf
mov
add
lock
sbb
jae
jmp
js
adc
shl
int
xchg
dec
outs
push
mov
fs
cld
jge
leave
addr16
adc
pop
ja
adc
jbe
add
retf
cmps
lods
or
sub
inc
mov
and
jl
je
cmp
cdq
movs
cli
aam
mov
cmps
dec
jl
xor
mov
scas
(bad)
ins
jge
shr
ds
jne
push
and
test
jns
mov
pop
or
push
jge
test
xchg
out
and
scas
retf
movs
sub
xor
or
xor
aas
enter
(bad)
out
jnp
pop
push
adc
jl
mov
cmp
cld
push
xor
mov
inc
push
mov
or
push
add
adc
xchg
cmps
sub
mov
jmp
xor
mov
sbb
scas
adc
xchg
test
or
in
ror
test
jecxz
pop
jle
cmps
(bad)
cmp
sbb
push
sbb
mov
(bad)
cwde
ss
stc
out
movs
std
cdq
mov
ja
jmp
xor
push
push
enter
retf
lods
jns
jp
jmp
repz
mov
js
add
cmps
add
add
fild
inc
pop
jmp
cmp
out
movs
(bad)
mov
bound
dec
call
imul
add
mov
inc
addr16
enter
jns
jo
xchg
ficomp
xchg
or
fcomip
pop
and
fsub
mov
xor
xor
ret
sub
mov
mov
cmp
loop
sbb
mov
ss
dec
loop
sbb
fistp
inc
ss
clc
ficom
mov
(bad)
push
dec
(bad)
iret
sbb
xor
adc
ret
popf
or
sub
fild
cmp
mov
dec
and
xchg
out
mov
xchg
into
mov
std
mov
mov
xchg
out
repz
push
iret
adc
sbb
sub
add
jg
add
in
imul
aam
lds
sub
dec
add
mov
jns
pop
cmp
xchg
(bad)
jge
sub
jecxz
jno
and
xor
jle
add
(bad)
jl
push
cmc
imul
xor
shr
test
fstp
and
scas
icebp
(bad)
das
arpl
stos
jae
jecxz
add
xchg
adc
das
xchg
sbb
mov
sub
dec
sbb
push
sbb
aas
mov
addr16
addr16
mov
jne
pop
or
outs
jg
call
and
ror
sahf
pushf
mov
shl
cwde
push
fild
push
jbe
cmp
sub
imul
out
call
cwde
adc
mov
cmp
fst
and
test
ins
ds
aam
int3
movs
ret
mov
add
daa
pop
sbb
out
push
(bad)
pop
push
xchg
sub
cmc
nop
int
push
aaa
and
les
in
jg
cmps
ins
or
adc
iret
or
mov
cmps
loop
(bad)
movs
mov
push
ds
jnp
icebp
int
aas
ins
add
xchg
inc
cwde
and
sahf
js
jns
mov
das
push
sub
movlps
and
mov
push
mov
pop
mov
out
iret
mov
jo
aas
cdq
mov
dec
sub
mov
inc
pop
jecxz
or
mov
int3
inc
repnz
push
clc
scas
cmp
sbb
xor
stos
pop
mov
add
dec
pop
and
sub
mov
inc
pop
mov
stos
pop
retf
add
xor
imul
ret
xor
jno
inc
xor
sub
mov
int3
xor
clc
bound
rcr
loopne
movs
jle
movs
outs
shl
dec
or
xlat
cwde
(bad)
jns
repnz
pop
ja
push
sar
cmc
iret
jmp
cmc
dec
fldcw
call
(bad)
mov
mov
js
pop
out
rcl
pop
lock
sbb
and
xor
hlt
push
or
ds
jmp
sbb
dec
sti
add
adc
push
xchg
pop
mov
sub
push
add
jle
stos
mov
cmp
(bad)
repz
out
sub
test
fnstsw
inc
shr
loope
jb
ret
jnp
ins
mov
push
out
loope
stos
or
sub
mov
gs
fsub
scas
jno
(bad)
xchg
test
fadd
pop
xchg
mov
icebp
lds
pushf
or
shr
mov
mov
aad
test
scas
ins
xor
cmp
pushf
clc
jecxz
sub
push
addr16
jmp
or
cmp
cld
cmps
mov
jb
das
mov
jnp
or
pushf
push
pop
test
icebp
jge
leave
pop
sub
call
mov
pop
jg
pop
sub
sub
sub
fimul
pop
push
adc
inc
cmp
xchg
repnz
sti
dec
mov
push
mov
pop
xlat
xchg
mov
jp
push
inc
ins
lock
xor
xchg
hlt
sub
into
aaa
outs
pop
loope
les
adc
mov
and
ss
mov
test
ins
jecxz
add
ins
sbb
movs
iret
mov
pusha
jecxz
outs
push
mov
daa
in
cmps
and
fbstp
mov
jbe
(bad)
and
mov
(bad)
scas
xor
mov
xchg
mov
psllw
fnsave
cmps
test
xor
pop
push
sti
addr16
inc
test
add
loopne
mov
push
data16
inc
mov
dec
or
push
sbb
push
xor
mov
loope
mov
jnp
cmps
pop
lds
js
arpl
dec
xor
dec
aaa
lods
test
mov
mov
bound
sub
mov
jns
cmps
in
and
dec
inc
stos
scas
lods
and
xchg
xor
rcr
jmp
push
(bad)
int
test
xlat
sbb
lock
std
pop
repnz
inc
adc
jb
dec
lods
pop
xor
mov
ja
imul
mov
ss
mov
sub
mov
xchg
fwait
scas
xchg
out
icebp
out
idiv
dec
enter
fadd
je
mov
repz
lods
(bad)
fadd
jge
(bad)
jmp
xchg
mov
xchg
ins
ins
push
mov
xchg
ret
xchg
cmp
aaa
jecxz
pusha
dec
inc
stos
sbb
mov
daa
sbb
mov
scas
pop
rcl
mul
nop
in
repnz
sbb
adc
mov
lea
fcmovbe
fcmovbe
mov
(bad)
repnz
lock
mov
(bad)
jbe
inc
xor
sub
inc
sbb
pushf
jns
out
cld
dec
je
ins
in
jge
ror
adc
int3
(bad)
or
ins
push
std
bound
add
cmp
movs
inc
push
int
jecxz
lods
lahf
dec
or
pop
dec
daa
mov
adc
daa
add
out
pop
pop
mov
pop
cwde
cmp
fidivr
push
aam
fs
mov
pop
cdq
and
mov
mov
popf
inc
or
mov
adc
call
push
adc
je
mov
mov
adc
fist
mov
test
dec
jecxz
jle
sbb
add
xchg
sar
movs
cli
js
pop
adc
scas
push
inc
cwde
jle
and
repz
aad
out
xchg
jb
mov
das
pusha
cdq
lea
push
cmp
stc
adc
jb
xchg
or
xor
mov
repz
cmp
inc
std
mov
in
leave
fsubr
inc
ins
test
xchg
cmp
je
shl
enter
push
lock
mov
fist
not
push
cmc
les
das
xor
dec
mov
ds
pop
inc
pop
or
mov
push
cmps
les
loopne
js
test
jnp
jnp
xchg
push
int3
inc
xlat
or
iret
inc
cwde
jae
std
repz
lods
pop
(bad)
repz
or
add
pop
loop
scas
jne
pop
(bad)
aad
jb
or
adc
xchg
imul
pop
enter
xchg
jbe
and
adc
test
loope
jecxz
out
mov
test
lahf
ficom
movs
inc
adc
cmp
int
sar
mov
jnp
add
popf
push
push
bnd
ins
repnz
inc
push
call
les
lods
imul
push
out
stc
inc
or
sub
lods
in
jo
pop
sub
mov
inc
jl
in
xlat
dec
scas
inc
ja
fsub
call
or
jg
and
(bad)
cwde
mov
inc
ja
(bad)
sub
shr
bound
imul
mov
fbld
dec
dec
cmp
adc
push
pop
daa
mov
mov
push
add
sub
int
jg
mov
sub
(bad)
add
out
jno
dec
test
mov
mov
jbe
das
cmps
or
mov
adc
(bad)
sbb
jecxz
dec
xor
sbb
es
or
ins
and
mov
popa
dec
sti
les
retf
fnstenv
cmc
out
push
popf
ret
mov
xor
sub
shr
push
add
fstp
stos
mov
ins
cmp
stos
xchg
sahf
fsub
cdq
jb
or
ja
cmp
inc
sbb
lods
mov
test
aas
cmc
movs
xor
outs
test
inc
inc
cmps
retf
mov
aam
jne
cmp
dec
pop
retf
cmps
aam
push
out
mov
push
in
ficomp
push
add
pop
js
and
out
pop
arpl
sub
arpl
idiv
stos
sub
dec
mov
mov
and
push
and
pop
cmps
mov
push
mov
bnd
test
shr
pop
inc
inc
lahf
jmp
xor
pop
xchg
fnstenv
pop
mov
pop
enter
push
addr16
loop
mov
imul
imul
into
call
jecxz
xor
retf
in
daa
fcomip
and
adc
sbb
fs
jp
adc
retf
or
pop
adc
cmp
mov
retf
out
add
fbld
xchg
mov
sbb
push
sbb
xchg
xchg
push
mov
call
push
or
inc
fistp
jmp
cmp
fisubr
jbe
cmp
push
jmp
fild
and
call
jle
xor
inc
jmp
cdq
mov
int3
dec
sbb
ds
push
push
sub
or
ins
lods
outs
inc
bound
mov
ins
cmp
xor
mov
leave
movs
sar
xchg
cmp
jae
das
xchg
jmp
imul
int
add
test
mov
hlt
jmp
cld
xchg
xor
adc
push
loope
pop
jns
ss
or
imul
jno
xor
pop
pop
lods
data16
inc
daa
mov
in
sbb
pop
dec
jb
imul
out
xchg
in
das
xchg
xchg
add
add
pop
ret
adc
sahf
fucom
gs
jae
lods
out
(bad)
xor
(bad)
int
hlt
shl
adc
shl
dec
aam
pop
xor
test
(bad)
cmp
sar
adc
push
xchg
ins
fiadd
int3
popa
out
cmp
in
bnd
cmp
mov
sbb
mov
xchg
(bad)
fidivr
xchg
repnz
popa
xor
popa
aam
xor
ds
cmp
fdiv
into
pushf
out
adc
imul
cmp
lods
pusha
push
stc
push
leave
stos
inc
and
lods
dec
ins
and
ja
jae
cwde
dec
or
sahf
ucomiss
pop
lds
inc
or
jnp
sbb
jl
jecxz
add
push
pop
sub
ror
or
mov
xor
fld
arpl
mov
pop
ret
xchg
fsubr
jae
or
(bad)
imul
dec
or
push
lea
int
inc
stc
sub
jns
mov
sar
dec
or
pop
pop
pop
or
push
lods
cmps
adc
fwait
cmp
lods
jle
rcl
dec
sub
movs
cdq
jno
cs
cmps
out
push
cmp
outs
out
jg
dec
shr
(bad)
stos
pop
sub
mov
sbb
dec
dec
(bad)
cmp
cmp
mov
ror
jp
sti
push
shr
je
xchg
mov
jg
mov
jl
inc
adc
inc
pop
jnp
sbb
push
enter
xchg
pop
pop
xchg
pop
push
in
and
push
jbe
jae
int3
push
(bad)
push
(bad)
cmps
cmc
in
movs
ja
inc
xchg
mov
sbb
fld1
ret
jmp
pop
fincstp
das
pushf
ins
lahf
xchg
mov
bound
std
data16
pop
pop
xchg
adc
dec
push
xchg
(bad)
dec
add
or
(bad)
push
sbb
mov
ret
mov
xor
fwait
movs
pop
pop
mov
(bad)
lea
fsub
push
dec
test
ins
out
movs
push
add
fdivp
pop
enter
icebp
add
loopne
aam
retf
inc
icebp
lock
mov
dec
adc
ins
sbb
mov
cli
inc
movd
add
pop
test
add
dec
hlt
lods
mov
les
das
ret
stos
adc
push
shl
fiadd
lods
sbb
xor
aaa
fdiv
jmp
fidiv
dec
loop
sub
push
pusha
bound
(bad)
std
push
mov
vcvtpd2dq
sbb
imul
xor
mov
xchg
idiv
xchg
cmp
cmp
cld
outs
mov
cwde
sub
out
xchg
sub
in
test
add
enter
pop
jle
pop
cmps
stc
push
fst
jp
out
jo
cld
repnz
popf
push
xor
pop
movs
out
fst
lock
sub
jae
loop
jl
xchg
cs
ret
test
mov
inc
mov
sbb
sbb
inc
xchg
inc
dec
sbb
inc
test
arpl
mov
gs
js
rol
pop
sbb
xchg
adc
out
push
cwde
pusha
in
pop
jl
(bad)
fdiv
pop
shl
fiadd
xchg
pop
sbb
push
jmp
std
stos
mov
cmp
es
or
aaa
xor
ja
mov
pop
stos
icebp
dec
test
test
push
adc
push
neg
sub
outs
sub
loope
and
mov
pop
xlat
dec
fisttp
and
rcl
push
jmp
xor
pop
scas
sbb
xor
leave
cmp
js
fs
das
jns
popa
rcr
je
adc
daa
in
outs
sbb
mov
ror
add
mov
sub
push
je
pop
push
push
scas
mov
cmp
lahf
movs
add
inc
adc
test
(bad)
(bad)
fsub
inc
les
jae
jae
mov
ins
jl
out
outs
ret
dec
nop
test
push
mul
ret
dec
mov
(bad)
ror
pop
mov
dec
sbb
xor
sub
add
out
fisttp
rol
sbb
cmp
fcmove
pop
jl
icebp
rcl
retf
pop
loope
adc
sbb
xchg
dec
mul
mov
icebp
(bad)
push
scas
adc
mov
fwait
push
pop
jae
mov
ret
call
cmp
push
push
pop
scas
or
repz
lock
fs
inc
lahf
ror
sub
jns
push
stc
xor
(bad)
hlt
push
retf
iret
jbe
aam
push
mov
pop
pushf
cmc
enter
dec
sbb
cmps
loope
imul
fcmovne
pop
ja
dec
push
mov
stos
push
xor
mov
jbe
mov
lods
pop
mov
(bad)
and
fsub
push
shr
dec
jmp
adc
cmp
adc
mov
outs
jecxz
pop
sub
leave
in
dec
aas
add
jne
push
dec
adc
push
(bad)
fs
push
loop
pop
jne
add
bound
sti
mov
adc
mov
(bad)
cs
sti
xchg
adc
stc
int
and
repz
sbb
xchg
cmp
pop
mov
fwait
ins
aas
repz
arpl
fiadd
cli
pop
and
add
xlat
xor
shr
out
ret
fucomi
ja
cdq
aaa
loop
ja
xchg
popa
movs
rol
(bad)
cwde
fsub
jle
pop
mov
out
lock
mov
cmp
retf
cmps
pop
or
cli
inc
sub
aad
mov
data16
into
clc
lea
mov
pop
leave
or
or
xor
xor
cwde
mov
frstor
fiadd
mov
xor
daa
push
lods
aas
stos
adc
adc
xchg
leave
dec
test
test
loop
ss
sub
jle
fist
and
adc
mov
cdq
xchg
lea
leave
out
adc
test
movnti
cwde
dec
into
mov
ins
add
mov
adc
pop
sub
adc
pop
jbe
es
xor
fabs
std
scas
rcr
mov
(bad)
inc
add
xor
inc
add
cmp
into
stc
js
xchg
mov
sbb
std
bound
xor
les
mov
mov
test
xchg
xchg
pop
adc
(bad)
popf
call
std
int3
mov
fs
sub
xlat
inc
cmp
fiadd
movs
inc
mov
loopne
cmp
pushf
clc
cwde
fadd
or
push
pop
pop
jge
add
ins
mov
pop
adc
dec
or
movs
mov
xor
sub
mov
dec
loopne
adc
mov
mov
adc
rcr
or
sbb
jl
jb
lea
lods
stc
mov
dec
fwait
leave
dec
xor
mov
out
adc
repz
adc
sbb
mov
adc
mov
popf
xor
stc
je
xor
pop
in
(bad)
xchg
xchg
inc
dec
ret
mov
icebp
xchg
fstp
jne
dec
xor
loopne
lods
xchg
jo
ins
hlt
mov
sbb
jmp
adc
mov
js
cmp
mov
adc
mov
inc
test
dec
test
cmp
call
call
out
inc
(bad)
out
in
popf
(bad)
(bad)
sub
dec
jbe
sub
jb
in
ret
and
loop
out
mov
mov
xor
jns
push
mov
test
sub
mov
lods
pusha
lds
xchg
inc
sbb
add
xlat
mov
fdiv
inc
fdivr
cmp
mov
shl
ret
pop
pop
(bad)
fistp
mov
pop
push
repnz
cmp
dec
cmps
inc
iret
icebp
sbb
dec
std
sbb
outs
adc
mov
ror
hlt
sub
jmp
clc
adc
retf
and
mov
call
mov
pusha
lea
mov
add
mov
sbb
lahf
mov
les
lds
dec
retf
call
cmps
xor
mov
into
xor
mov
jg
dec
mov
mov
imul
frstor
ss
dec
lods
fld
cmp
es
jbe
test
cmps
test
(bad)
in
cs
mov
sti
shl
popf
add
xchg
repz
outs
push
ds
popa
inc
enter
jno
scas
or
or
repz
mov
and
sbb
or
sbb
fwait
outs
mov
jle
fdiv
xor
sti
cmp
cdq
xchg
mov
stc
pusha
sbb
pushf
cdq
mov
pop
test
mov
pop
inc
imul
enter
add
lock
nop
push
adc
mov
dec
inc
push
adc
iret
mov
or
inc
std
fs
push
xchg
add
pop
push
mov
fist
icebp
add
mov
and
lds
pop
leave
aam
inc
and
dec
jl
and
inc
sub
mov
sbb
push
les
cmp
mov
adc
test
add
(bad)
in
xchg
lahf
mov
mov
loope
out
ins
add
mov
pop
es
cmp
out
add
mov
sub
icebp
and
dec
cmp
push
or
jne
add
gs
mov
aas
sbb
test
dec
sbb
in
adc
out
mov
(bad)
push
inc
cld
inc
pop
movs
jmp
mov
dec
push
rol
cmovbe
dec
jne
pop
sub
jb
test
and
xchg
dec
mov
xor
ins
or
add
cmp
pop
test
lods
mov
leave
jo
ficomp
xlat
pop
loop
retf
je
imul
ret
jmp
clc
rcr
xor
jl
icebp
stos
adc
mov
rcr
fisubr
sahf
mov
push
xor
push
mov
ficomp
sbb
iret
mov
xor
call
test
jg
sub
ds
inc
test
ins
(bad)
in
push
pushf
mov
cmp
push
or
gs
inc
sbb
mov
jecxz
or
in
cld
adc
add
push
sub
pushf
(bad)
and
aad
adc
or
lods
push
fs
sti
dec
xchg
fcmovnbe
or
pop
dec
or
in
jb
and
inc
sbb
xchg
in
push
movs
retf
repz
loop
mov
pop
inc
mov
(bad)
jno
ins
and
inc
sbb
xchg
aas
ficom
inc
mov
retf
jmp
shl
mov
sahf
dec
fwait
and
ret
mov
addr16
scas
stos
jge
dec
xor
aad
xchg
cmps
out
mov
or
fdivr
stc
push
fwait
(bad)
sub
aam
inc
sub
fld
cmc
ja
cmp
inc
mov
(bad)
push
jns
imul
sbb
int
out
pop
pop
sets
popf
mov
push
cmp
aaa
sahf
xor
cs
repnz
cmp
aaa
push
jle
dec
cmp
cmc
int
clc
mov
adc
jmp
adc
bound
pusha
sbb
cmp
pop
gs
aad
sar
xor
or
push
or
dec
ret
xor
shr
dec
jbe
in
shl
xchg
sbb
sbb
retf
or
cwde
inc
aas
jmp
inc
mov
xchg
push
(bad)
ins
sub
mov
test
dec
(bad)
xor
mov
add
sub
dec
mov
fadd
mov
bound
push
sbb
adc
repz
cmp
aas
stos
sbb
pop
sbb
ss
or
int
aam
std
inc
and
inc
dec
xchg
jecxz
pop
push
movs
ror
mov
and
or
pop
push
fistp
push
dec
xchg
(bad)
mov
ret
js
add
arpl
repnz
test
mov
cmc
jo
test
and
in
fwait
in
jmp
repz
pop
aam
or
inc
jmp
scas
push
out
scas
inc
ins
call
mov
retf
adc
stc
pop
call
add
cwde
mov
dec
mov
adc
addr16
(bad)
mov
stc
dec
fdivr
sub
xor
push
inc
jmp
jmp
sub
lahf
cmp
jne
push
lahf
in
cmp
or
jbe
xchg
jae
leave
push
loop
cmp
(bad)
cmp
pop
adc
jno
leave
retf
adc
xchg
xchg
adc
and
jg
mov
lock
mov
sahf
stos
sahf
xchg
jbe
push
dec
mov
outs
or
cmp
xchg
aaa
fs
jne
in
mov
imul
lea
outs
jno
dec
jmp
(bad)
data16
icebp
ins
and
loop
mov
pop
pop
(bad)
mov
mov
cmp
inc
fucomi
aam
and
mov
(bad)
jg
mov
jl
push
pop
sub
enter
rol
cmp
pushf
pop
mov
adc
pop
dec
test
inc
hlt
lods
addr16
inc
addr16
adc
jg
add
jmp
cmps
pop
repnz
fisttp
retf
mov
out
adc
out
aam
inc
and
inc
into
scas
jns
pop
pop
xchg
retf
fld
xchg
push
jge
cmp
in
inc
add
dec
inc
mov
lods
daa
sbb
cmp
sub
cmp
jnp
jns
dec
xchg
test
pop
cmp
dec
jl
jmp
jne
outs
les
bound
pop
test
pop
cmp
mov
in
xor
rcl
mov
dec
cwde
fisttp
sub
mov
push
lea
scas
adc
cmps
xor
imul
das
inc
push
cmc
push
in
jmp
add
mov
stos
fimul
sbb
pop
jo
xor
or
xchg
jl
ror
mov
cdq
xchg
xor
or
xlat
dec
(bad)
mov
dec
mov
(bad)
jns
pop
xor
loopne
(bad)
xchg
icebp
jp
or
add
iret
test
neg
out
mov
in
mov
rol
mov
cmp
stos
int3
sbb
lahf
mov
and
test
jo
xor
sub
out
push
aad
rep
rcl
xchg
xor
mov
jp
cli
xor
std
pop
iret
std
cmp
pop
int3
mov
dec
pop
cld
bound
cmp
jge
jge
jecxz
pop
add
sbb
stos
cli
imul
clc
mov
stos
jle
pop
pop
lods
shl
mov
mov
xor
lods
test
cmp
retf
loope
sub
pop
cmp
add
loope
dec
cs
lods
jmp
jbe
inc
fld
dec
(bad)
add
dec
or
out
mov
push
xor
not
pop
push
gs
sti
xor
push
(bad)
retf
sbb
sbb
push
mov
imul
pop
data16
cmps
cmps
dec
inc
push
(bad)
in
mov
pop
xor
pop
cmp
sahf
push
xor
cmp
sub
mov
call
cld
cwde
popa
gs
add
push
jecxz
mov
mov
xchg
pop
pop
pop
adc
inc
adc
call
push
and
ret
jo
pop
aas
jae
and
shr
mov
mov
cmps
add
inc
inc
ins
dec
repz
ins
je
adc
or
mov
int3
dec
jp
int
cmp
xor
mov
int
mov
and
sub
xchg
or
lds
add
iret
out
lea
outs
loope
add
cmp
sbb
in
mov
test
cli
xchg
dec
sbb
call
aas
xor
lods
dec
loopne
mov
loop
ins
mov
dec
mov
retf
jp
jp
push
adc
and
push
xor
scas
das
and
pop
adc
in
jmp
dec
dec
jmp
int3
fwait
pop
sti
sub
outs
xor
retf
mov
push
std
mov
xchg
fs
(bad)
jecxz
adc
int
aaa
push
cdq
iret
into
outs
arpl
popa
xor
or
shl
cmc
sub
cmp
adc
bnd
std
ss
inc
in
mov
push
pusha
mov
fxch
jnp
mov
div
pop
cs
call
lods
and
shl
aad
or
dec
push
push
xchg
mov
dec
ins
(bad)
jae
shr
push
je
ret
pushf
scas
dec
add
and
and
mov
out
ins
jle
cmovnp
add
dec
loope
xchg
enter
xchg
sub
inc
pop
ins
jp
mov
push
pop
dec
cmps
mov
or
fdivr
(bad)
aad
xchg
loop
int
stc
jnp
iret
and
push
(bad)
dec
sti
mov
mov
mov
jns
ins
aad
mov
cmp
fmul
call
sti
jecxz
mul
inc
mov
adc
test
dec
test
xchg
loope
jmp
icebp
xchg
push
pop
mov
dec
xchg
xchg
and
cmp
mov
mov
pop
mov
push
cmp
mov
push
in
mov
iret
xchg
jne
dec
xchg
mov
cld
dec
pop
cmp
add
sub
gs
xchg
jle
ficomp
inc
or
add
aaa
xor
jmp
pop
dec
mov
sbb
fldcw
and
stc
inc
jmp
sbb
fxch
call
loopne
les
in
xchg
mov
push
xchg
inc
mov
dec
xchg
retf
sbb
cs
aaa
mov
sbb
inc
cmps
xchg
lock
mov
pusha
cdq
pop
xchg
repnz
sub
push
sar
adc
jnp
popa
adc
fwait
sub
loop
sub
ret
ret
pop
enter
cmp
jp
cmps
mov
lea
mov
xor
xor
jge
sub
stc
jns
enter
js
fcomp
mov
stos
inc
mov
js
hlt
or
sar
pop
add
xor
cmp
lahf
pop
stc
lds
sub
fisttp
in
cwde
jb
rcr
mov
(bad)
fcmovu
inc
inc
test
add
inc
pop
adc
or
mov
or
adc
call
adc
rcl
mov
sub
pop
arpl
cld
repz
sbb
movs
cmps
fst
retf
lods
xchg
inc
inc
fcom
je
dec
add
(bad)
movs
scas
mov
and
test
xchg
push
xchg
jnp
adc
and
sub
iret
jnp
ins
dec
pop
ds
retf
into
xor
outs
jno
jne
mov
std
xchg
sbb
and
mov
xchg
in
popa
jo
jg
rol
adc
test
data16
daa
mov
adc
out
fwait
js
mov
shr
hlt
pop
push
adc
or
jecxz
dec
pop
cmp
push
push
fiadd
sbb
inc
pushf
and
(bad)
(bad)
jp
adc
jns
or
add
clc
jge
or
in
pusha
test
pop
outs
out
shl
fldenv
in
enter
adc
mov
pop
outs
stos
jg
push
sar
inc
mov
cmps
mov
push
(bad)
in
xchg
mov
jle
and
(bad)
fwait
mov
inc
pop
aas
or
or
jnp
test
push
cmp
retf
cmp
iret
or
sbb
inc
movs
jns
out
jmp
rcr
mov
sub
rcr
mov
cmp
push
fs
dec
imul
adc
cli
dec
sub
sbb
mov
xchg
mov
mov
dec
call
fs
sub
les
stc
(bad)
pop
sahf
mov
scas
add
mov
test
cs
fcmovb
jo
nop
cmps
int3
pop
bswap
int3
jg
pushf
retf
js
bound
jno
and
pop
shl
push
addr16
repz
add
xor
mov
out
pop
push
test
inc
movs
lahf
into
sub
rcr
out
mov
sbb
lods
cld
sbb
lds
ror
sbb
inc
push
or
lahf
aam
dec
das
xor
ret
jb
jnp
jmp
aas
pop
inc
push
pop
and
add
cmps
cmp
mov
jne
js
xor
push
bound
adc
and
mov
ins
push
call
repz
neg
sbb
aaa
(bad)
call
add
mov
mov
cwde
jo
lea
sub
mov
std
push
mov
inc
pop
dec
sub
(bad)
mov
loopne
mov
cmp
mov
dec
das
jno
js
jge
adc
(bad)
dec
repnz
pushf
push
dec
sbb
mov
in
cli
repz
mov
fld
lea
jmp
dec
xor
sub
cmp
mov
clc
pop
mov
imul
push
or
lds
sub
and
dec
inc
adc
push
je
pop
mov
inc
cmp
and
stos
or
push
(bad)
lods
lods
cmp
mov
icebp
pop
xor
mov
and
das
in
xchg
fld
inc
in
jle
cmps
xchg
lea
dec
push
cmp
mov
stc
mov
mov
nop
sbb
js
pop
inc
add
mov
sub
out
pop
and
addr16
iret
sbb
pop
and
mov
xor
jmp
adc
add
gs
jmp
adc
cld
sub
or
inc
push
nop
push
xor
push
test
mov
jmp
xor
or
cwde
adc
sub
pop
cmps
jbe
ja
mov
cmps
ins
aad
pop
sub
xor
les
outs
push
sub
loop
pop
fs
pop
out
rol
stc
xor
jnp
out
mov
jp
call
push
cs
dec
pushf
xchg
sub
push
cmp
or
sbb
cmp
jns
sub
rcr
(bad)
sbb
(bad)
push
jge
pop
aaa
in
push
(bad)
cmc
frstor
jmp
mov
inc
pop
jge
mov
mov
mov
or
xchg
jae
out
(bad)
out
outs
outs
xor
push
fld
out
push
std
add
lahf
ss
repnz
sbb
(bad)
sub
sub
pushf
push
jmp
cdq
popa
xchg
inc
jg
fs
inc
xor
sub
or
lahf
or
ins
xchg
cmp
lahf
push
loope
mov
or
(bad)
or
and
or
cmp
aaa
mov
xchg
cmp
mov
mov
mov
cmps
pushf
and
inc
cmc
mov
pop
scas
xor
cmps
and
ret
(bad)
or
popa
repnz
adc
popf
sbb
(bad)
fild
mov
jmp
popf
ja
mov
(bad)
fld
fs
adc
in
mov
loopne
(bad)
shl
xchg
cwde
lahf
push
mov
mov
scas
mov
int3
push
sbb
icebp
xor
and
inc
push
sbb
movs
test
inc
push
sub
ins
jmp
push
movs
rcl
(bad)
out
sub
add
sbb
push
cdq
jecxz
gs
push
sbb
and
std
jns
jns
stos
inc
push
xor
mov
sbb
repz
or
dec
cdq
mov
(bad)
into
mov
fsubr
shl
add
dec
sub
fild
je
(bad)
into
retf
jmp
inc
div
int
jl
xchg
sub
aas
push
sbb
add
mul
xor
sub
or
cmp
outs
push
cld
xor
arpl
jl
in
push
jb
(bad)
(bad)
std
repz
mov
es
add
add
or
xlat
sbb
fs
jmp
cld
xlat
pop
(bad)
mov
jne
ror
mov
push
mov
lods
lea
xor
retf
jae
das
pop
sbb
sbb
jb
in
jl
cmp
into
push
add
mov
lock
mov
or
and
test
popa
mov
call
pop
rcr
jle
push
cmp
fcomp
fisubr
cmps
cld
jne
inc
leave
mov
inc
mov
bound
cmp
lea
daa
and
pop
std
push
movs
cwde
sbb
cwde
cmp
outs
jb
mov
pop
push
push
jge
pop
fisttp
lods
lods
add
les
cmp
mov
or
(bad)
(bad)
mov
hlt
ret
jo
sub
inc
and
xor
sahf
cdq
jnp
mov
dec
add
(bad)
xor
inc
or
ret
pop
and
icebp
mov
sti
in
(bad)
sbb
sub
mov
inc
sub
push
or
xchg
(bad)
and
xchg
pop
mov
sti
std
outs
ja
ds
out
les
out
fsub
jns
mov
ret
psubusb
test
xor
imul
(bad)
mov
imul
mov
dec
mov
sub
call
or
sub
mov
sbb
popf
in
retf
jle
movs
xor
cmp
scas
cmps
ror
stos
movs
mov
push
ja
in
bound
stos
je
mov
adc
dec
stc
ror
(bad)
mov
xor
dec
mov
cmp
test
xchg
lods
jb
bound
sub
pop
xor
inc
jns
sqrtps
jecxz
mov
nop
mov
add
push
dec
pop
inc
fild
clc
bound
shl
mov
push
cld
jno
retf
les
mov
inc
mov
jle
test
loope
retf
add
xor
pop
inc
jae
jle
inc
mov
push
or
das
call
dec
fldenv
adc
fadd
mov
fist
dec
cmp
call
pop
ret
adc
xor
xchg
ja
rol
sub
xchg
imul
retf
sbb
gs
push
inc
ret
cmp
mov
test
xor
xor
cmp
jge
test
stc
das
int3
jbe
dec
fnstsw
mov
xor
out
mov
inc
xor
mov
jns
add
push
sub
(bad)
arpl
fmul
arpl
cmp
adc
jnp
stos
int
xor
cs
mov
or
adc
push
aam
pop
mov
xor
lods
jp
imul
shl
push
fwait
push
xchg
mov
es
lock
mov
les
mov
mov
push
into
jmp
adc
cmp
mov
jp
test
adc
popf
jo
cs
dec
cmp
add
dec
popa
adc
or
and
pop
stos
pop
jns
dec
add
dec
dec
ins
in
adc
mov
cmp
mov
inc
clc
fsubr
movs
add
inc
in
xchg
scas
dec
xlat
fdiv
sub
push
leave
test
xor
add
cmp
xchg
push
es
xchg
pop
ins
push
xchg
idiv
scas
fnstcw
jb
inc
popa
push
pop
mov
aam
mov
inc
outs
dec
cmp
sbb
lock
out
mov
out
cmps
clc
das
neg
or
outs
pop
mov
arpl
in
xchg
inc
xlat
cmc
sbb
call
je
ds
mov
or
xor
add
int3
sbb
xor
iret
addr16
test
sub
xchg
push
mov
jae
inc
loopne
push
in
mov
pop
(bad)
mov
pop
sub
test
inc
pop
and
mov
pop
inc
push
add
add
inc
imul
pmaxub
push
scas
iret
in
xchg
mov
clc
jnp
and
add
xor
dec
movs
add
test
xor
vpsrad
adc
push
mov
into
mov
xchg
cmp
push
xor
inc
test
ds
loope
jmp
lods
mov
xchg
(bad)
mov
mov
in
mov
rol
sti
xor
mov
test
xchg
mov
cmp
test
addr16
sbb
push
dec
popa
fild
mov
pop
sti
loopne
rol
loopne
addr16
je
or
cld
inc
jno
into
(bad)
inc
pop
sub
cdq
daa
shl
push
adc
add
outs
fldpi
dec
sti
enter
add
call
mov
inc
out
pop
hlt
ret
sbb
mov
push
add
adc
ins
sti
mov
mov
inc
mov
iret
rol
ins
leave
mov
cli
jnp
sti
cmp
jne
sbb
popa
push
adc
fmul
jmp
mov
pop
fisub
mov
mov
aad
add
mov
pop
lds
pop
xchg
jecxz
or
sub
add
pusha
sbb
add
jae
fisttp
fistp
mov
mov
jge
sub
rol
sahf
not
xor
push
and
sbb
mov
mov
push
into
mov
jo
repnz
icebp
add
fmul
fst
inc
nop
sti
xor
jp
inc
imul
jp
(bad)
fistp
hlt
sub
mov
jmp
inc
pop
lock
mov
pop
jmp
or
test
sub
mov
mov
(bad)
sahf
push
fs
ret
mov
in
dec
scas
push
dec
mov
out
scas
loop
mov
loope
fadd
test
cmp
ret
lahf
xchg
movs
dec
call
lds
sar
or
movs
inc
cmp
jp
adc
test
ins
or
xor
xchg
cmp
enter
inc
or
clc
and
popf
pop
mov
lea
jp
cmc
dec
xchg
fs
push
ja
rcl
jg
stc
cdq
pop
enter
push
mov
and
pop
pop
popa
push
aam
icebp
call
shl
call
repz
aaa
ins
add
je
rcl
dec
les
loop
sbb
loopne
paddw
inc
movs
lods
fwait
call
mov
push
in
je
test
xor
ins
jmp
lods
mov
pop
shr
dec
mov
dec
cmp
xlat
jb
in
pusha
sbb
adc
(bad)
mov
out
pop
add
mov
jbe
push
mov
mov
es
inc
adc
or
popa
adc
adc
sub
mov
adc
cld
lds
mul
retf
inc
fstp
mov
cld
in
gs
in
or
pavgw
shl
pop
daa
lahf
fdivr
inc
gs
shl
xchg
cmp
shr
mov
add
fcmovbe
xchg
and
ins
push
push
cmp
jl
fucom
sbb
or
ja
pop
or
scas
mov
jp
pop
arpl
pop
xor
mov
inc
pop
clc
movs
enter
ret
adc
pop
xlat
sti
xlat
scas
into
cmp
ins
mov
or
repnz
push
mov
test
outs
push
add
push
cmps
xor
jae
fdiv
jmp
fcomp
cdq
mov
xchg
ret
cwde
jbe
stc
movs
xchg
pusha
push
push
sbb
xchg
pop
jl
outs
inc
sbb
inc
sub
lods
push
mov
js
rcr
and
bound
jbe
xchg
inc
pop
inc
(bad)
lock
mov
retf
popa
mov
es
in
gs
inc
retf
sti
push
dec
or
jecxz
cmps
sahf
das
dec
sub
scas
into
xchg
and
dec
mov
add
cmp
jno
adc
jle
ret
movs
int3
xchg
jg
stos
push
xor
scas
out
fistp
lods
(bad)
fcomp
xchg
pop
dec
inc
pop
inc
aaa
pop
test
mov
push
mov
or
cmp
inc
push
add
lds
(bad)
sbb
pop
idiv
add
push
nop
lods
push
mov
adc
fist
push
cli
fdivr
in
leave
cmp
fwait
mov
mov
sbb
adc
stos
sti
xchg
pop
lods
leave
add
ja
push
sbb
jmp
js
int
adc
sub
sub
mov
mov
dec
pop
jae
fistp
aas
enter
and
jle
das
jecxz
(bad)
mov
xchg
cld
pop
sub
cmps
ror
cmp
sbb
and
or
or
add
in
mov
mov
retf
and
js
adc
sub
adc
push
sbb
call
les
mov
pop
cmps
imul
inc
imul
cmp
adc
cmp
shl
xor
jmp
push
int
stos
ficomp
jb
xchg
jg
fsubr
lea
pusha
dec
loopne
js
pop
mov
mov
dec
and
loop
sbb
jo
je
fidivr
mov
inc
shl
xlat
stc
lds
dec
mov
arpl
cld
inc
mov
shl
pop
cmp
or
inc
push
mov
pop
mov
push
ror
scas
sbb
and
rol
movs
and
mov
js
(bad)
lahf
stc
push
add
in
pop
cmp
fidivr
mov
sub
scas
and
adc
xchg
push
add
xor
(bad)
iret
test
jecxz
jle
das
sbb
lods
jp
rcl
imul
or
mov
adc
pop
and
jmp
dec
mov
cli
ret
and
xchg
add
mov
cmp
add
jnp
and
jmp
mov
in
adc
jo
shl
sbb
out
pop
call
addr16
cmps
mov
lea
rcl
mov
pushf
loope
(bad)
adc
sti
xor
test
in
inc
std
sahf
ss
sbb
iret
sbb
aam
aad
mov
ret
lds
inc
icebp
xlat
clc
fwait
out
xor
cmp
in
add
push
sbb
xlat
retf
jl
jnp
mov
xlat
inc
xchg
jmp
push
sbb
cmp
mov
adc
adc
in
xor
(bad)
popa
xor
cs
jmp
sub
pop
mov
ret
add
add
(bad)
mov
dec
pop
outs
jle
das
cmps
inc
imul
enter
and
lahf
adc
mov
je
inc
push
add
cmp
mov
and
imul
in
mov
shr
xchg
jg
add
je
mov
pop
mov
push
(bad)
call
pop
mov
or
jae
push
inc
fwait
or
popa
mov
clc
(bad)
mov
outs
das
pusha
xor
jbe
ret
sbb
mov
and
mov
adc
es
mov
jmp
fptan
xor
ffree
leave
call
jge
mov
sbb
push
or
shl
mov
clc
shl
inc
push
dec
and
std
xchg
lahf
and
nop
push
les
rcr
cmp
push
fcmovnbe
into
inc
inc
(bad)
sbb
ret
and
adc
jmp
cs
xchg
pusha
pop
test
or
jl
pop
adc
mov
pop
ja
fsub
mov
retf
leave
stos
cdq
add
mov
arpl
jae
shr
jbe
and
lds
xor
aas
adc
jge
iret
xchg
sar
cmp
fld
call
add
bound
jmp
adc
(bad)
cld
and
xor
loope
cdq
sbb
or
sub
outs
sub
push
ins
repz
push
sub
pop
daa
sub
pushf
das
xor
cmp
cmc
ja
(bad)
and
mov
pushf
xor
jb
loop
jbe
add
jae
and
fdiv
mov
inc
movs
push
hlt
mov
popa
mov
sub
lds
dec
jl
mov
das
or
stc
pop
fwait
pop
mov
enter
mov
js
add
or
or
nop
pop
clc
lahf
sub
bound
mov
stos
leave
dec
cmp
ins
(bad)
nop
push
mov
cli
jmp
jnp
xor
or
jb
jae
daa
mov
xor
inc
fnsave
bound
xchg
jae
and
xchg
or
or
mov
mov
pop
pop
xor
mov
mov
es
push
xor
mov
jo
pop
cmp
fcom
in
inc
inc
clc
ss
sar
xor
dec
xlat
enter
loop
mov
rol
inc
sbb
xchg
xchg
aaa
push
push
icebp
lahf
ins
pop
retf
loope
cmp
jge
outs
outs
jbe
and
and
pop
in
cli
inc
or
jmp
cmp
inc
ret
and
aad
call
lds
push
cmp
xor
imul
pop
lock
retf
mov
pop
mov
xchg
add
fnstcw
popf
test
scas
and
xor
cmp
ins
and
in
leave
cs
xor
mov
pop
jl
inc
adc
mov
int3
cwde
int3
mov
in
cmp
fmul
mov
outs
scas
fisub
loopne
pop
push
inc
mov
lods
js
leave
loopne
out
cdq
dec
sar
les
dec
scas
scas
add
hlt
lods
mov
jl
or
jnp
nop
in
push
adc
(bad)
or
and
xor
mov
iret
inc
xchg
adc
aad
lahf
pop
xchg
dec
adc
es
mov
sub
out
pop
cwde
sbb
shr
int
mov
or
or
test
jle
xchg
js
nop
fstp
sub
out
mov
pop
cmp
jmp
call
scas
and
and
push
test
sub
pop
push
sti
and
int
cli
js
aam
pop
sbb
fild
mov
pop
push
sub
add
pop
jns
int3
cmps
pop
scas
push
xchg
in
dec
inc
sbb
lods
ret
sbb
mov
or
mov
loopne
adc
nop
jo
add
adc
aad
cmp
mov
mov
xchg
mov
ins
add
push
imul
push
mov
pop
test
and
xchg
cld
retf
movs
scas
mov
call
inc
int3
inc
outs
sub
pop
adc
arpl
(bad)
push
pop
xor
ja
out
(bad)
gs
mov
loope
(bad)
sbb
scas
(bad)
paddq
jnp
add
ins
dec
push
fstp
xlat
add
(bad)
pop
and
leave
shr
mov
inc
fistp
mov
cmc
jl
daa
adc
hlt
jl
in
jb
push
clc
add
push
movq
aad
xor
mov
xor
stos
lahf
repz
mov
outs
pop
fisubr
xchg
cmps
sar
pop
pop
pop
pushf
inc
jecxz
xor
outs
pop
pushf
aad
inc
cwde
fld
in
mov
ins
sahf
stc
jmp
dec
cmps
test
xor
aas
add
(bad)
xor
mov
test
xlat
dec
ja
idiv
and
daa
xchg
js
sub
mov
cmps
outs
pop
inc
cmp
mov
sub
aaa
out
add
cmp
cmp
cmps
repz
fldcw
sub
(bad)
mov
inc
mov
mov
xchg
jb
icebp
xchg
jno
div
gs
add
jb
ja
test
inc
mov
xor
jmp
sti
xchg
test
in
pop
mov
(bad)
gs
cli
call
mov
cmps
call
test
jno
sti
jecxz
push
bound
dec
mov
in
imul
fidivr
pushf
dec
mov
pop
xchg
dec
js
and
pop
je
cmc
pushf
in
pop
add
xchg
leave
leave
pop
aam
loop
jns
sbb
lea
mov
jg
aad
xor
out
jmp
cmp
stos
cvtps2pi
data16
pop
pop
retf
jmp
adc
push
out
xchg
(bad)
mov
popa
cmp
xor
or
and
inc
out
dec
pop
sub
pop
scas
sbb
mov
iret
push
test
in
(bad)
adc
test
xchg
pop
(bad)
retf
sti
pop
xor
and
dec
xlat
adc
dec
into
lahf
mov
jae
dec
adc
pop
add
fucom
call
add
xchg
or
cmps
sub
and
fdivr
push
xchg
test
xor
push
pop
push
or
mov
push
cmp
adc
movs
push
movs
pop
xchg
inc
aaa
jecxz
lods
sbb
or
in
outs
adc
(bad)
and
xlat
test
xchg
inc
lods
retf
aas
cmp
mov
sub
add
fs
and
mov
int3
xchg
rol
xor
fcmovne
xchg
or
add
repz
and
inc
xchg
ret
xchg
adc
out
xchg
dec
lea
(bad)
mov
xor
dec
and
pop
cmps
mov
mov
dec
outs
test
fidiv
pusha
and
sbb
adc
mov
sub
stc
push
push
aad
aam
and
aad
out
jge
dec
push
dec
retf
aad
les
gs
adc
fdiv
sub
ja
adc
push
rcr
popa
xor
int
inc
fld
xchg
xchg
pusha
add
and
inc
mov
in
fiadd
pop
imul
popf
ficom
ins
add
fldenv
jb
dec
cs
(bad)
std
xchg
int
aad
pop
aam
jns
ss
arpl
pop
cmp
mov
jp
pop
or
arpl
xchg
jmp
mov
cmp
adc
xor
ja
mov
sbb
adc
icebp
mov
movs
push
xlat
mov
mov
stos
in
imul
jmp
xchg
jp
and
xor
push
sbb
pop
xchg
int3
test
scas
dec
fwait
inc
or
(bad)
mov
mov
mov
add
cld
fistp
sbb
imul
jp
dec
pop
(bad)
mov
mov
imul
cdq
sub
adc
int3
add
xor
xchg
push
push
xchg
mov
icebp
ins
loop
daa
and
mov
ins
mov
loop
ss
ins
(bad)
inc
jo
les
mov
ds
gs
out
inc
je
inc
push
(bad)
fst
scas
das
sbb
fmul
cmc
xor
(bad)
xor
mov
pop
adc
xchg
cmp
test
cmp
dec
stc
sbb
xchg
mov
inc
rcl
xor
add
loopne
rol
out
ds
lock
mov
cmp
xchg
ins
cmps
cmp
in
sbb
adc
mov
arpl
out
and
pop
in
das
iret
add
push
jmp
cdq
pop
stc
rcr
es
jb
jl
out
leave
add
imul
push
push
cdq
sbb
xor
xchg
jo
mov
retf
pushf
pop
loopne
or
inc
(bad)
xor
push
imul
in
cmps
or
jp
pop
ret
pop
sub
jmp
lock
aad
sub
jns
jmp
mov
test
jae
cld
mov
ror
add
mov
or
mov
jne
mov
mov
jmp
mov
inc
popf
pop
jns
test
in
or
fistp
mov
and
mov
outs
mov
or
int
xor
inc
sbb
mov
mov
aad
iret
pop
cld
mov
test
cmps
test
pop
add
inc
mov
pop
adc
and
sub
mov
mov
in
inc
aad
cmp
sbb
loopne
add
rol
cmps
daa
rcr
inc
inc
mov
mov
shr
xchg
ret
lock
aam
icebp
pop
stos
cmp
lea
jae
shl
adc
sub
adc
dec
stos
lods
js
xchg
mov
loope
mov
dec
xchg
sar
adc
idiv
sub
jae
aad
adc
inc
enter
cmp
fs
inc
mov
mov
xor
sub
imul
cmp
je
cmps
mov
inc
add
out
adc
stc
pop
in
imul
rcr
ret
mov
mov
adc
jmp
mov
mov
mov
or
pop
push
mov
mov
pop
call
retf
gs
jb
sub
es
jge
mov
push
xor
imul
sub
(bad)
lods
lahf
(bad)
cmps
cli
jo
inc
cmp
mov
retf
ficomp
mov
xor
sahf
mov
and
aam
loope
or
adc
ja
dec
mov
add
sub
add
push
or
ins
hlt
fisubr
push
mov
xor
cmps
inc
paddusw
pop
sbb
call
jg
imul
xor
std
add
inc
jecxz
fwait
das
js
das
mov
jb
push
jb
jmp
test
xchg
mov
cmovg
xchg
mov
shr
sub
sbb
mov
push
xor
xor
popa
xchg
or
lock
pop
scas
into
and
dec
fdiv
mov
mov
cmp
fdiv
mov
cmp
add
adc
idiv
inc
xor
dec
sub
movs
(bad)
addr16
xor
daa
xchg
pushf
and
pushf
inc
cwde
dec
mov
ja
repz
mov
ret
mov
fidiv
pusha
push
or
clc
fbld
arpl
dec
push
int
test
pop
fimul
push
pop
push
daa
cmc
add
scas
and
inc
stos
jbe
push
shl
sahf
sub
jp
scas
add
jno
data16
sub
or
clc
jae
lock
sub
jb
add
rep
jl
gs
in
sub
clc
push
add
pusha
aas
ss
push
mov
jnp
jecxz
in
adc
cmp
sub
and
inc
ins
out
clc
cs
cwde
xor
repz
add
xor
push
xchg
pop
shr
mov
push
xchg
xlat
aam
stos
mov
dec
or
xor
pop
daa
in
stc
dec
fdivr
in
mov
and
in
cmc
and
sahf
out
jae
inc
cwde
sub
dec
inc
test
cli
and
cmc
cli
lods
push
jmp
sbb
outs
or
adc
pusha
fistp
pushf
jb
aam
and
mov
jbe
mov
xchg
jmp
push
and
pop
fistp
mov
mov
stos
sbb
pop
mov
inc
fimul
sub
or
cmps
lea
jecxz
scas
jns
cwde
xchg
adc
stos
repz
in
fild
jmp
hlt
cmp
xor
cmc
ffreep
out
rcl
ja
fldl2t
imul
push
xor
lea
dec
daa
test
frndint
mov
push
mov
push
push
xchg
scas
es
cmp
sahf
pop
push
add
pop
mov
jb
cmp
jns
or
pop
sub
es
lods
dec
fnsave
dec
repz
fdiv
mov
dec
xor
fisub
mov
jnp
bsf
loop
imul
lock
xor
jmp
les
inc
or
ja
add
dec
dec
(bad)
cwde
ja
(bad)
cmc
cmc
stos
rcr
add
loopne
mov
(bad)
fiadd
or
rdtsc
xor
dec
test
cwde
inc
rcl
jecxz
pop
pop
cmp
pop
pop
lds
outs
ror
bound
out
mov
dec
ins
arpl
or
sub
out
in
ins
sbb
adc
add
sbb
sti
lds
mov
pop
xchg
and
stos
enter
dec
inc
mov
inc
or
nop
fisttp
fadd
call
movs
push
test
inc
xchg
(bad)
int
mov
jecxz
jmp
ss
mov
sub
pop
jnp
setns
inc
push
add
rcr
clc
xchg
movs
sub
ror
aaa
aas
aaa
mov
cwde
mov
mov
mov
mov
imul
fs
lea
mov
in
pop
clc
xor
or
sbb
je
mov
xchg
jbe
add
aad
mov
push
push
mov
and
imul
mov
movs
sbb
or
pop
aam
sbb
fs
daa
mov
push
dec
movs
xor
inc
aam
pop
in
cmp
sub
retf
mov
call
test
dec
ret
push
cld
xlat
or
jecxz
mov
hlt
ja
and
xchg
arpl
cmp
fst
mov
sub
jae
cmp
test
(bad)
int3
lods
btc
mov
xor
in
mov
cmp
out
xchg
in
xor
aas
push
repz
push
mov
add
iret
inc
aad
jle
js
cli
push
xor
stc
sbb
sbb
sub
movs
jp
and
pop
mov
bound
xor
sbb
loope
adc
bnd
xchg
push
mov
sub
popa
dec
fbld
sub
xor
push
mov
fs
fwait
mov
les
das
ret
ja
mov
cmp
jmp
push
mov
pusha
sbb
lods
add
dec
ins
adc
inc
mov
cwde
mov
out
and
fadd
pushf
lock
pop
data16
shl
jnp
jne
cmp
jmp
les
pop
das
mul
and
mov
jmp
pop
jnp
mov
inc
sub
jmp
jno
sub
test
ret
imul
xchg
call
jne
and
fwait
push
dec
pop
dec
cmp
loope
not
adc
sbb
mov
cdq
shl
push
dec
mov
mov
sub
aaa
(bad)
bound
inc
or
mov
sub
pop
and
sahf
mov
lods
adc
data16
ins
xor
adc
pop
add
pop
mov
xchg
test
dec
ss
xchg
ins
jbe
jmp
sub
(bad)
icebp
scas
xchg
push
push
fsubr
cwde
xchg
sub
bound
jg
cmp
mov
mov
sub
or
test
dec
sub
loop
inc
push
outs
stc
adc
mov
pop
fldcw
inc
hlt
xor
mov
adc
jno
dec
mov
push
or
das
jb
push
fld
jo
sar
dec
ds
rol
xchg
push
test
push
add
lds
aad
pop
pusha
popa
scas
lods
xchg
jbe
outs
cmp
jmp
out
cmp
push
std
js
pop
inc
jns
test
mov
out
int
stos
in
loopne
fmul
and
arpl
and
pop
in
sbb
sbb
sub
mov
dec
jbe
shr
mov
das
mov
je
pop
or
mov
and
cdq
imul
push
and
fs
add
cmps
push
sbb
push
inc
int3
mov
sub
push
scas
jnp
push
into
out
iret
push
mov
pop
push
inc
jl
stos
fist
es
jmp
xor
jp
cmps
cmp
cld
mov
stos
pop
gs
out
xor
cmp
cmc
mov
sub
ret
mov
popf
push
xor
aad
stos
(bad)
jmp
lock
mov
(bad)
out
mov
std
into
jmp
loope
clc
add
dec
fldenv
add
adc
pop
sub
xlat
cdq
push
jbe
clc
fisttp
mov
call
out
loop
movs
inc
pop
idiv
adc
clc
mov
mov
out
mov
cmc
ins
ins
cld
outs
jae
sar
mov
mov
and
cmp
out
mov
jnp
loop
imul
or
or
cdq
mov
test
sub
adc
push
fstp
pop
gs
sbb
dec
mov
mul
mov
cmp
mov
mov
repnz
sub
test
jne
fdivr
push
cdq
sbb
push
aad
(bad)
scas
lods
cmp
jl
lods
sbb
imul
pop
movs
stos
test
repnz
mov
stos
sbb
js
sub
test
and
sbb
fistp
test
hlt
mov
das
push
mov
push
sti
int
mov
(bad)
sub
pushf
icebp
jne
lock
div
mov
push
inc
sub
adc
sub
xchg
sti
dec
test
loop
jg
dec
ret
pop
test
xchg
and
jmp
ror
cmp
in
lock
lods
sub
rcl
fcmovb
adc
loop
pop
fisubr
sub
and
xlat
sbb
lock
enter
adc
fadd
ror
sbb
fwait
stos
cld
stos
rcl
rol
mov
jmp
mov
test
and
adc
and
imul
mov
add
cmp
lock
push
sub
jmp
gs
jg
jbe
lds
sub
jge
cmc
into
enter
cdq
xor
(bad)
sbb
sbb
cmp
stc
jmp
cld
mov
gs
mov
pop
mov
xchg
lea
cld
or
stos
sub
dec
cmp
push
scas
data16
cmp
lods
push
loopne
into
loopne
popa
add
cmp
or
enter
test
aaa
test
push
out
int3
sub
int
jp
cld
xchg
or
or
retf
mov
sub
xchg
cmps
jl
pop
add
cwde
gs
pushf
sbb
bound
mov
push
adc
adc
push
addr16
inc
xchg
scas
sti
pushf
js
sahf
fadd
mov
push
or
jge
popf
push
pop
jmp
out
ds
out
outs
push
jns
out
test
(bad)
mov
add
pusha
int3
loope
inc
jmp
inc
inc
push
mov
add
mov
push
add
mov
into
pop
dec
dec
pusha
stc
ret
test
inc
fdivp
sbb
ret
xchg
loope
mov
(bad)
fldcw
(bad)
out
mov
dec
aad
dec
mov
out
pop
jb
mov
sar
xsha1
cmps
or
cld
sub
mov
movs
dec
fdiv
mov
dec
pop
pop
outs
xor
and
in
jo
inc
cmp
mov
dec
sti
out
push
xchg
sub
test
xchg
(bad)
out
pop
adc
shl
repz
or
je
dec
jae
stos
pop
cmps
loope
mov
xlat
data16
sar
push
mov
pop
mov
ds
sbb
cli
cli
and
sub
fwait
cwde
mov
jb
and
jbe
pop
std
lock
dec
sbb
sub
aaa
out
dec
sbb
lods
pop
add
js
mov
mov
lods
(bad)
xchg
or
jle
mov
mov
shl
fnop
fld
pop
aam
rcr
jnp
test
call
sbb
ja
popa
xlat
mov
xor
idiv
sbb
call
xchg
loopne
lds
jge
push
push
push
sub
sbb
rcr
push
daa
mov
cmps
pushf
push
je
cmp
sbb
jns
add
dec
lahf
and
mov
pop
and
repz
inc
outs
inc
jp
gs
and
pop
jo
inc
adc
jmp
dec
inc
jmp
and
jle
js
push
inc
cmp
sbb
aad
pop
popf
mov
mov
out
mov
sbb
cmp
std
pop
push
out
cdq
mov
loope
scas
push
(bad)
xor
retf
adc
mov
ja
iret
das
stc
sbb
aad
mov
ror
pop
jmp
jge
jge
and
push
psrlw
add
arpl
pop
scas
mov
xchg
dec
cmps
je
inc
mov
xchg
in
jp
ss
ja
push
mov
call
sbb
clc
sbb
shl
ins
imul
scas
adc
ret
mov
(bad)
fst
nop
fnsave
popf
jnp
xchg
mov
dec
cmp
aas
mov
pop
sbb
aam
or
addr16
mov
lahf
stos
aaa
mov
call
cmp
sbb
test
sub
pop
fs
push
adc
not
fs
dec
push
and
enter
icebp
mov
inc
push
pop
scas
(bad)
loop
movs
xchg
mov
mov
pop
ss
outs
xor
sub
xchg
pop
xor
mov
bound
inc
jbe
popf
mov
cmps
dec
mov
dec
inc
test
sub
enter
out
mov
outs
xchg
and
movs
addr16
sub
pop
pushf
aaa
jg
clc
mov
cmp
cld
jno
scas
mov
data16
pop
test
stc
ret
jae
iret
test
jmp
imul
retf
stos
fisttp
and
scas
push
punpckhbw
(bad)
mov
xchg
in
repnz
mov
jmp
scas
pop
repz
imul
mov
push
and
mov
(bad)
lea
(bad)
shl
hlt
sbb
es
in
inc
cmp
and
fisubr
jae
jge
dec
pop
mov
cmp
sbb
cmp
push
fs
dec
jno
js
comiss
imul
js
add
push
repnz
mov
jmp
add
rol
push
push
aam
nop
outs
push
sti
out
pop
add
aas
add
shl
push
repnz
ins
dec
adc
sti
clc
push
idiv
fcmove
push
add
cdq
popf
add
sub
test
mov
movd
lea
push
arpl
or
outs
mov
es
sbb
and
mov
or
dec
adc
xor
cmp
sub
push
cli
retf
fld
mov
jns
imul
enter
sub
cmp
aad
jmp
pop
and
and
sub
xchg
fisubr
das
stos
mov
add
mov
call
jne
mov
xlat
mov
pop
bound
test
bound
ret
sub
mov
fwait
xor
push
jae
or
or
mov
loope
in
sub
inc
inc
adc
jp
xor
pop
cli
sbb
dec
jl
sub
loope
or
loope
or
sahf
push
inc
test
mov
in
sti
lods
xchg
adc
or
lahf
test
repnz
cwde
dec
pop
dec
push
das
xchg
jmp
jp
sbb
push
jle
sbb
retf
sbb
fld
inc
and
xchg
jmp
popf
call
iret
sbb
add
not
xchg
push
fisubr
jbe
mov
movs
pop
mov
clc
ja
mov
push
mov
(bad)
push
push
xchg
repnz
xor
sub
(bad)
dec
mov
jo
cmp
ja
cmp
mov
cmp
inc
jno
push
call
add
cwde
pop
jnp
cmps
dec
push
bound
shl
fmul
rol
fs
adc
das
jmp
pop
pop
inc
adc
xor
les
adc
pushf
jb
repnz
out
(bad)
in
mov
adc
stos
jo
or
pusha
out
mov
and
in
and
mov
adc
cmp
xor
sbb
inc
jmp
stc
sub
mov
cmp
shr
call
inc
bound
or
fild
xor
popf
or
(bad)
in
imul
movs
mov
cmp
in
sub
add
shl
test
sub
mov
adc
ret
mov
jne
outs
call
pop
jae
es
int3
cdq
ror
sbb
mov
dec
cmps
sub
fistp
jmp
cld
mov
cmp
xor
jb
imul
mov
cmp
mov
push
sbb
push
jmp
mov
push
dec
sub
retf
cmps
cmp
add
or
sub
mov
mov
add
sbb
sbb
or
fld
lods
xor
rcr
rcr
push
(bad)
(bad)
out
adc
sbb
dec
xor
xlat
inc
sbb
test
add
bound
loop
shr
or
in
pop
enter
and
mov
outs
and
(bad)
pop
dec
ja
lds
or
pop
repnz
lea
add
xor
inc
pop
iret
inc
and
call
adc
and
jecxz
dec
ins
mov
sbb
and
lock
xchg
xchg
ret
sub
adc
fucomip
movs
cmp
ja
mov
mov
mov
ret
pop
js
not
or
sub
cmp
sbb
call
scas
js
dec
mov
add
xchg
scas
xor
xor
repnz
hlt
cld
jmp
sub
rcr
int
mov
mov
push
call
call
jo
int
cmp
in
mov
mov
sbb
mov
adc
jle
scas
sbb
sbb
pop
int
jp
mov
imul
push
std
shl
cmp
jae
out
call
sub
xor
call
les
adc
out
sbb
adc
mov
fwait
outs
mov
cmp
mov
fsubr
mov
jg
clc
cmp
retf
rol
mov
(bad)
daa
mov
pop
push
xor
lahf
xor
loopne
stos
adc
mov
adc
inc
mov
dec
loopne
push
adc
pusha
movs
out
sar
gs
sub
dec
into
jns
mov
sbb
cdq
scas
ss
retf
jmp
les
ror
(bad)
add
inc
outs
xchg
and
test
movs
mov
std
ret
ret
cmps
mov
ficomp
das
gs
xlat
cmc
and
inc
or
gs
int3
dec
or
mov
rcl
sti
das
fcomp
sbb
shl
gs
(bad)
xor
retf
in
dec
cmp
arpl
fidivr
pop
sub
pop
fbstp
out
jg
repz
jbe
push
mov
cs
ss
mov
xor
and
(bad)
shl
aad
cmp
mov
adc
lds
inc
jns
mov
shr
pop
jle
mov
gs
cmp
and
gs
fild
pop
fwait
mov
loopne
cmp
and
push
cmps
std
xchg
cld
xchg
fisttp
pop
xchg
sahf
or
mov
mov
push
stc
test
mov
shr
fstp
push
mov
or
inc
fidiv
pop
dec
lea
aas
sbb
sbb
adc
leave
xor
and
pusha
int3
inc
push
pop
sahf
imul
xor
inc
dec
loopne
ins
mov
add
(bad)
arpl
xchg
xor
pop
xchg
xor
movs
cmp
sbb
mov
loop
ret
repz
std
iret
stc
add
pop
(bad)
inc
(bad)
fisub
inc
dec
jnp
xchg
stos
ror
mov
std
loop
add
scas
mov
mov
jae
mov
dec
sbb
inc
xchg
shr
pop
inc
ja
or
pop
sbb
cmp
cmp
std
xchg
fldenv
(bad)
mov
call
mov
cld
arpl
xchg
cdq
cmps
test
lock
sbb
jecxz
mov
mov
cmps
aam
scas
lahf
add
dec
xor
neg
(bad)
cmp
add
js
inc
xchg
push
aas
jno
add
push
push
bound
push
je
jge
add
retf
(bad)
cmp
es
test
mov
test
xchg
mov
movs
push
cs
mov
push
xchg
add
imul
push
das
vpminsb
adc
dec
repz
ret
bnd
fdiv
or
test
imul
repnz
(bad)
push
mov
jae
dec
enter
outs
lahf
and
and
ja
or
mov
mov
and
fwait
mov
xchg
movs
mov
sbb
xchg
push
aaa
(bad)
ret
pop
mov
in
int3
mov
clc
mov
bound
rol
jg
outs
stos
enter
mov
ror
ret
pop
dec
rcr
mul
(bad)
bound
aam
adc
mov
sbb
or
and
mov
inc
jge
into
inc
ins
pusha
call
clc
cwde
pop
and
pop
fst
push
repz
pop
mov
adc
(bad)
or
xchg
adc
xchg
pop
and
loop
in
push
sbb
(bad)
out
out
add
test
test
sub
ds
popa
fs
sbb
lock
sbb
inc
pushf
outs
stos
js
xchg
loopne
in
sub
push
jnp
sub
fisub
ins
and
mov
sbb
push
or
(bad)
retf
adc
jmp
sbb
xor
and
inc
aad
fimul
xchg
ss
(bad)
cmp
adc
or
cmps
jns
push
xlat
mov
xchg
popf
iret
lds
in
in
add
jno
or
pop
dec
inc
js
or
pop
in
cmp
push
xchg
ja
call
pop
push
push
repnz
clc
pop
call
sti
adc
jecxz
jg
(bad)
pop
pop
popa
mov
mov
test
outs
or
movs
(bad)
adc
mov
std
xor
shr
call
fs
test
je
stos
sbb
jnp
or
sar
push
mov
mov
test
jle
or
std
cdq
cmc
xor
icebp
push
push
and
pop
push
out
imul
test
mov
dec
jg
jo
mov
or
push
adc
adc
mov
call
lods
push
pop
and
adc
pminub
inc
and
adc
xchg
xchg
and
adc
sub
xchg
nop
push
cmp
jmp
fsub
xor
or
push
pop
out
or
adc
sti
push
into
cmp
jle
sub
fsubr
jle
pop
cmc
xchg
(bad)
addr16
cmps
ret
and
div
jge
xor
dec
cmp
and
fstp
dec
dec
inc
mov
push
fst
loopne
cdq
jmp
in
inc
lods
mov
dec
rcl
out
push
xlat
pop
fadd
ins
call
inc
pop
out
cmp
xor
mov
mov
mov
jne
or
clc
inc
je
and
popf
xchg
push
xchg
sbb
hlt
rcl
hlt
pop
loopne
or
dec
jbe
dec
cld
mov
push
(bad)
push
aaa
rol
retf
mov
arpl
dec
cdq
pop
inc
adc
adc
into
loopne
adc
movs
mov
and
into
into
fnstenv
into
ds
dec
aam
jecxz
jecxz
movs
scas
inc
stc
dec
adc
adc
mov
movs
adc
inc
adc
or
pop
sahf
stos
lds
cmp
ret
fstp
leave
mov
lods
aad
add
cmc
hlt
fs
hlt
sti
data16
call
mov
bound
pop
(bad)
or
fnstsw
fist
sub
out
mov
fs
mov
pop
mov
scas
xchg
out
lahf
pop
into
(bad)
fst
retf
test
mov
lea
jp
out
ins
dec
gs
out
test
adc
dec
push
jo
push
xor
in
enter
out
cmps
cmp
(bad)
les
mov
mov
loope
stc
and
inc
mov
jnp
je
call
scas
pop
nop
jns
fisubr
and
mov
xchg
add
pop
pop
sbb
mov
ret
push
or
mov
add
cmp
int3
cmp
iret
sbb
ins
adc
lods
inc
pop
cli
(bad)
sub
shr
cmps
push
inc
sar
(bad)
fild
sbb
daa
mov
loope
rcr
addr16
push
xor
test
fst
cdq
inc
test
pusha
test
sbb
mov
jbe
arpl
add
jo
fstp
jmp
and
inc
pop
scas
loopne
iret
fist
popf
pop
add
jmp
repnz
sbb
pop
jne
repz
push
ja
adc
fld
xchg
inc
jp
fstp
mov
stc
xchg
test
inc
ret
or
scas
pop
push
or
js
push
adc
fistp
push
sbb
dec
(bad)
fmul
cmps
add
pop
cmp
cdq
or
ret
or
in
xor
ja
jae
and
push
std
mov
cmp
xchg
jne
push
pop
daa
mov
adc
clc
ret
push
jno
movs
mov
and
dec
inc
or
je
mov
dec
adc
out
or
push
xor
fidivr
push
push
jbe
gs
popf
or
add
xor
sub
(bad)
retf
lods
jnp
mov
cwde
mov
arpl
xor
cmps
psubd
sub
dec
cmp
or
fnsave
sti
mov
push
pop
and
xor
ins
rol
sub
ja
out
fld
movs
stos
mov
imul
retf
push
or
clc
daa
das
(bad)
int3
push
lahf
xchg
mov
iret
inc
xchg
outs
xor
adc
dec
js
cmps
rcl
(bad)
jg
pop
nop
fwait
aad
inc
pop
and
sbb
lea
call
sbb
(bad)
ficom
lahf
leave
adc
imul
shl
xchg
adc
es
jne
retf
sbb
clc
fisttp
inc
sub
xchg
mov
push
icebp
cmps
arpl
sub
movs
in
addr16
inc
in
jno
lock
loopne
jnp
inc
jmp
lds
mov
aas
neg
xchg
adc
pushf
sbb
sub
push
mov
mov
sbb
ud2
fcomp
loopne
push
jmp
fcomi
outs
sub
pusha
and
sub
add
pop
xchg
pop
jecxz
(bad)
loope
mov
and
or
inc
inc
jo
loop
js
mov
jmp
shl
mov
sbb
xchg
je
sub
push
mov
leave
sti
pop
mov
fiadd
cli
mov
push
add
gs
lods
mov
lds
mov
mov
sbb
mov
popf
rcr
jp
fwait
mov
mov
lahf
xor
cmp
mov
push
pop
sahf
pop
aad
shr
sbb
cs
scas
in
cmp
adc
mov
mov
xchg
dec
inc
or
rol
pop
mov
xor
cdq
ror
test
dec
jl
aad
inc
inc
or
pusha
dec
push
aaa
push
push
cmp
cmc
mov
sbb
stos
mov
add
jle
push
out
jmp
inc
sbb
add
jno
aaa
sub
and
call
jmp
adc
js
bound
xlat
ins
js
addr16
mul
xor
sub
jp
xchg
xchg
add
mov
dec
xor
(bad)
in
jmp
add
cmc
mov
push
out
js
retf
fwait
mov
push
jb
adc
push
inc
pop
jmp
xchg
inc
and
les
push
dec
fdiv
punpckhbw
iret
push
add
cmc
or
scas
mov
repnz
adc
jbe
fwait
iret
js
adc
mov
repz
ror
xchg
sub
stc
repz
inc
fild
sub
xchg
inc
adc
pop
xor
lds
sbb
out
adc
pop
pop
jmp
jmp
aas
fwait
mov
ins
mov
mov
add
cmp
outs
mov
rcl
shl
ds
push
js
xchg
test
aad
lods
mov
cdq
not
shl
retf
sub
jmp
jecxz
mov
(bad)
add
or
arpl
push
push
pop
popf
push
mov
xchg
iret
pop
push
in
xor
retf
stos
xchg
xchg
jmp
pusha
ja
scas
pop
jge
cmp
jmp
ins
cld
or
xchg
stos
dec
mov
ror
cli
daa
pop
push
imul
dec
push
xchg
dec
dec
push
jecxz
add
add
movs
pop
out
and
ret
es
xor
push
retf
inc
cmp
sub
xchg
pop
dec
repz
out
mov
test
(bad)
cmp
mov
adc
jns
jmp
(bad)
xlat
lock
(bad)
retf
push
std
call
hlt
adc
jmp
into
lock
ja
out
test
cld
lock
and
out
popa
dec
pop
sub
outs
dec
leave
movs
xchg
mov
out
inc
xor
repz
and
push
pop
lods
fist
mov
ds
pop
lock
loopne
mov
and
adc
lahf
and
inc
test
push
xchg
arpl
sub
and
les
sub
retf
iret
dec
je
(bad)
test
push
or
pinsrw
rol
or
mov
rol
jne
in
aad
add
mov
mov
adc
iret
or
mov
sahf
mov
cmp
xor
xchg
sar
retf
daa
rcl
sahf
mov
daa
scas
fs
mov
lahf
ds
scas
or
push
int3
jg
adc
xor
fmul
out
or
dec
std
(bad)
cmp
pop
pop
xchg
std
fist
jo
ds
jo
sub
out
cmps
push
dec
pop
xor
out
push
popa
mov
jae
inc
jnp
mov
cmc
aaa
es
pop
xor
fsub
popa
in
(bad)
(bad)
pop
lahf
add
cmps
idiv
wbinvd
dec
repz
into
sahf
bound
cdq
test
ins
js
inc
or
push
aad
test
(bad)
sub
cmp
lods
jg
push
xor
sub
jns
sar
popf
mov
je
mov
push
inc
sahf
lahf
(bad)
aam
xor
neg
iret
fsubr
mov
imul
pop
mov
pusha
dec
subps
mov
xchg
sti
ds
addr16
jmp
fidivr
jo
mov
mov
stos
inc
popf
mov
add
jb
or
cmp
repnz
dec
lods
out
out
mov
mov
(bad)
vorps
adc
jl
std
call
and
cmp
movs
into
movs
mov
js
push
and
cld
and
xchg
mov
ud1
rol
std
jp
mov
push
mov
mov
dec
test
xchg
scas
inc
(bad)
fucomi
cwde
fwait
stc
push
lods
pop
mov
aas
in
jb
mov
sar
cmp
aaa
mov
sahf
add
mov
inc
add
inc
clc
fbld
popa
call
xor
jmp
scas
dec
cmp
shl
sub
dec
sti
jmp
not
pushf
mov
jnp
and
xchg
out
dec
enter
outs
jecxz
cs
adc
jp
shr
cmp
pop
xchg
loope
lods
cmps
enterw
jno
and
int3
inc
add
xor
dec
push
add
jl
fdiv
fwait
push
cmp
inc
(bad)
nop
arpl
xchg
jbe
push
int3
xchg
push
add
arpl
test
adc
cs
dec
hlt
es
pushf
rol
sti
repz
jg
jmp
out
retf
xchg
push
ficom
test
sar
sbb
mov
movs
pop
into
and
jb
xor
sbb
jns
outs
jb
xchg
out
mov
mov
mov
dec
and
jge
or
ss
iret
test
adc
mov
push
jmp
lea
mov
and
jno
lea
pusha
rcl
outs
jbe
arpl
in
jle
xlat
fadd
inc
and
xor
sub
inc
jbe
pop
mov
jmp
jo
pop
and
sbb
mov
push
js
imul
rcr
test
inc
mov
aas
sbb
sbb
inc
xchg
and
cvtdq2ps
(bad)
retf
inc
out
push
outs
xchg
add
push
xchg
push
mov
and
mov
mov
sub
loope
sldt
fwait
pop
cmp
stc
rcr
sbb
xor
popf
xor
cmp
cmp
and
inc
retf
jb
mov
mov
cmp
pop
lds
in
xor
cmc
loop
mov
xor
xchg
xor
mov
pop
jp
sti
(bad)
jbe
mov
mov
enter
xor
add
adc
lods
mov
cli
and
adc
ret
sbb
daa
je
fs
in
lahf
(bad)
sbb
leave
mov
retf
lods
xchg
retf
(bad)
fmul
(bad)
mov
jmp
retf
into
retf
popf
outs
push
rol
mov
leave
(bad)
push
imul
shl
lods
pop
add
push
mov
inc
call
mov
cmp
ins
push
inc
xchg
rcl
mov
jbe
mov
xchg
cdq
fs
out
pop
xchg
ds
push
sar
sub
xchg
add
or
adc
inc
sbb
pop
in
cmp
stos
xor
icebp
jl
cwde
rcr
cmps
(bad)
pop
add
or
jo
push
and
xchg
movs
mov
ins
cmp
mov
ins
ror
jle
js
pushf
push
ja
pop
pop
adc
mov
cmps
sub
scas
aas
xor
push
cdq
adc
(bad)
jmp
or
cmp
in
ret
in
inc
lock
xchg
sti
and
(bad)
fdiv
add
test
xor
rol
mov
(bad)
pop
ret
aaa
push
push
add
pusha
aad
jne
mov
jge
ins
in
nop
hlt
jp
or
(bad)
lds
mov
mov
jmp
push
sbb
(bad)
sub
fild
out
push
or
mov
pusha
xor
mov
xchg
mov
js
push
mov
mov
lfs
sub
stc
mov
mov
or
mov
fwait
cmp
sbb
lock
add
mov
add
inc
in
fs
cdq
mov
mov
sbb
dec
add
or
loop
fnsetpm(287
adc
mov
aas
add
jns
fisttp
repnz
adc
sub
adc
and
fdiv
das
jl
push
xchg
mov
and
dec
jbe
out
mov
(bad)
test
mov
test
push
loope
pop
aam
fild
fadd
bound
repnz
sub
cwde
mov
mov
and
aam
mov
push
dec
mov
call
adc
pop
push
(bad)
xlat
xor
add
ds
add
nop
sub
rcl
jmp
mov
mov
arpl
push
sub
xor
or
test
adc
aas
js
or
xchg
lahf
dec
aad
mov
data16
lds
iret
adc
cmc
and
sub
mov
out
std
adc
adc
dec
and
and
mov
push
adc
push
test
cmp
xor
out
adc
int
dec
sti
adc
xor
aad
or
cdq
dec
sub
mov
aam
mov
lods
mov
dec
cmp
jmp
xchg
mov
cmp
iret
and
mov
out
inc
fldln2
mov
leave
sub
iret
jp
xor
aam
int3
bound
int
pxor
cmp
mov
in
sbb
pop
jns
or
cs
jle
mov
xchg
inc
sub
mov
call
or
xchg
in
stc
loop
pop
sub
xor
cmps
mov
inc
nop
cmp
push
dec
pop
or
inc
pop
jnp
mov
fwait
dec
retf
xchg
cmp
sbb
xor
add
ror
shr
dec
adc
or
cmps
fistp
push
fisub
adc
stos
outs
cmp
cmps
mov
adc
call
rol
(bad)
repnz
cmp
dec
je
and
mov
xor
xchg
mov
mov
es
push
push
cs
mov
jae
xchg
outs
lods
pop
inc
outs
cwde
pop
mov
dec
pop
and
fadd
inc
sbb
lahf
mov
cmps
jp
imul
test
in
mov
adc
cmps
vmovsd
leave
shl
jbe
dec
xchg
cli
dec
cld
cmc
js
mov
mov
inc
sbb
retf
ins
xchg
es
dec
and
dec
lahf
scas
inc
scas
out
cmp
inc
loope
sbb
cmp
call
mov
inc
xchg
push
dec
inc
(bad)
sbb
push
and
js
retf
or
(bad)
bound
(bad)
sub
lods
xchg
mov
aad
mov
rol
movs
in
push
jmp
fsubr
in
pextrw
inc
and
mov
inc
sub
push
mov
sub
push
xor
inc
mov
in
cmp
out
enter
ds
cld
xchg
push
nop
jb
in
test
fisub
adc
sub
add
mov
sbb
cli
and
dec
pop
into
ffree
stos
leave
test
icebp
adc
popf
mov
push
call
frstor
shl
mov
movs
inc
lahf
clc
div
shl
hlt
mov
push
add
xor
cmp
mov
mov
popa
pop
ds
idiv
mov
mov
push
xchg
push
das
jnp
aas
mov
test
mov
adc
jmp
inc
push
(bad)
mov
cmp
push
xchg
push
xor
dec
(bad)
stc
and
push
mov
dec
xor
(bad)
call
int3
xor
fld
int
dec
adc
and
xor
hlt
data16
jp
mov
ja
enter
iretw
jae
mov
pushf
sub
adc
shl
dec
push
ret
imul
pushf
paddsb
popf
and
push
sub
xchg
pop
adc
sub
add
call
repz
lahf
dec
inc
xchg
sahf
add
xchg
aas
add
sub
scas
jb
stos
mov
enter
pushf
xor
adc
or
cdq
push
mov
mov
add
xchg
inc
mov
aad
in
mov
call
jo
add
adc
stc
stos
icebp
(bad)
pusha
push
xchg
bound
push
and
push
(bad)
or
shr
xchg
inc
dec
jno
jmp
and
sbb
xor
or
idiv
nop
sbb
clc
ins
xor
sbb
cs
pop
loopne
aaa
jecxz
mov
inc
js
rcl
test
or
xor
(bad)
test
jbe
repz
loope
and
or
push
pushf
jge
sahf
mov
movs
test
mov
outs
dec
daa
clc
sbb
or
mov
fadd
adc
jg
dec
adc
push
mov
dec
cs
xchg
aas
jge
retf
sahf
pop
pop
ret
jo
jmp
push
lock
mov
clc
test
mov
sbb
xchg
adc
fld
adc
mov
or
pop
not
fst
dec
ins
or
mov
sbb
cmp
dec
loopne
push
lock
jl
jnp
add
pop
xchg
xchg
ja
mov
adc
adc
sbb
popa
sar
sub
sbb
jo
mov
stos
test
mov
push
jbe
mov
or
pushf
stos
daa
dec
bound
loop
jmp
(bad)
ss
aam
arpl
mov
push
xor
(bad)
dec
sti
sbb
sub
repnz
sahf
pop
adc
add
push
add
nop
adc
dec
add
mov
bound
mov
and
sbb
les
xchg
test
sub
adc
sub
pop
lock
push
push
or
xchg
cwde
leave
and
lahf
inc
js
lahf
adc
in
xor
cwde
and
mov
mov
jg
jo
rcl
test
sbb
sub
mov
push
out
add
sub
sub
test
jmp
xchg
rcr
in
popf
mov
out
repnz
cld
loop
inc
jmp
test
sub
mul
cmp
add
test
push
test
cmp
inc
dec
mov
jns
rcr
ss
dec
xlat
fs
push
xchg
dec
pop
movs
dec
jno
popa
mov
and
dec
lods
mov
stos
adc
mov
cmps
push
aaa
jg
jle
repz
les
jl
(bad)
les
sub
(bad)
loop
outs
je
push
mov
jge
jle
jmp
lahf
or
add
lahf
push
xor
cwde
stc
mov
leave
xchg
add
cdq
adc
xor
dec
jnp
add
dec
pop
adc
mov
mov
jecxz
cmp
jne
push
push
jb
aam
mov
push
xchg
sub
int
mul
jp
xchg
sar
mov
add
sahf
das
lahf
scas
clc
cmp
dec
sub
adc
or
and
sub
fstp
outs
iret
or
loop
out
mov
pop
mov
push
sub
adc
lds
or
sbb
adc
mov
and
div
jmp
fisub
xchg
pop
xor
mov
stos
pop
sub
lods
movs
mov
int
inc
fwait
inc
aam
sbb
mov
xchg
sbb
adc
loopne
push
mov
out
ja
arpl
jne
mov
ret
pop
gs
inc
out
loope
sub
(bad)
ds
jecxz
out
sti
jbe
adc
das
push
shl
mov
xlat
sub
dec
fadd
push
jecxz
lds
lods
xchg
xor
and
aaa
push
pop
cmps
ret
inc
jecxz
dec
in
lfs
outs
add
(bad)
lock
lock
int
pop
dec
adc
pop
cmc
stos
pop
xor
jb
arpl
add
sbb
aad
popa
mov
std
and
xor
jb
fild
sbb
test
out
jmp
xor
sahf
aad
push
lods
ja
cld
hlt
sub
mov
dec
jmp
push
rcl
scas
aam
mov
sub
cwde
xchg
fxch
scas
jno
in
dec
mov
jb
adc
out
xchg
cmps
fisub
mov
add
sbb
adc
pop
mov
cmp
punpckhbw
cmp
cmp
sbb
fwait
jno
pop
or
inc
pop
fdiv
cli
or
out
cmp
inc
fstp
xchg
and
mov
push
je
loopne
ja
int
fidiv
popa
(bad)
mov
lods
sahf
mov
mov
jg
je
pop
adc
ror
xor
call
xor
stos
dec
pop
test
clc
sbb
repnz
int
xchg
sub
in
in
fistp
out
(bad)
jmp
cli
in
jp
mov
mov
sbb
ins
leave
pop
fwait
gs
jne
jns
mov
push
hlt
mov
lock
xor
add
in
bound
into
pop
mov
mov
inc
xchg
dec
outs
daa
mov
mov
push
add
mov
idiv
loop
or
inc
mov
std
pop
or
lahf
push
test
mov
mov
sub
xchg
adc
lods
jp
gs
(bad)
stc
ss
cmp
jo
jnp
mov
mov
es
add
adc
inc
repz
adc
adc
imul
fild
mov
sahf
js
mov
stos
and
sbb
fs
xchg
fucomip
fisub
dec
cs
cdq
pop
cli
jmp
fcomp
pop
mov
das
into
test
mov
cdq
sub
sbb
pop
mov
add
fisub
std
retf
jl
cdq
test
fidiv
ins
xor
lock
(bad)
cmp
push
push
fstp
xor
inc
sbb
dec
mov
std
sub
xor
pop
pop
dec
dec
hlt
adc
ficom
shl
ss
push
cs
and
pop
ret
jne
inc
and
(bad)
shl
enter
call
call
or
pop
jg
push
test
loopne
push
fmul
adc
fs
fcom
loope
sbb
jmp
pop
cli
jne
fwait
nop
fdivrp
cmp
scas
dec
mov
pop
add
mov
jne
dec
aam
fsubr
mov
mov
js
cmp
popf
jle
pcmpeqw
lea
push
fcmovnu
inc
add
xchg
outs
fnstsw
fadd
xor
lods
xchg
cdq
fild
repnz
inc
xchg
call
fbld
pop
mov
cs
and
mov
or
or
lahf
enter
sti
or
adc
lock
adc
fadd
test
das
push
mov
jecxz
push
or
fcmovbe
xchg
sub
ins
push
jmp
push
divps
push
mov
aas
out
and
in
mov
cmp
pop
fild
ror
push
movs
pop
push
loopne
inc
icebp
cmp
fsub
sub
add
mov
xchg
gs
fwait
add
aas
test
dec
jmp
sub
in
sar
clc
xchg
cs
sub
dec
mov
pop
out
push
mov
ja
push
cmc
iret
mov
shr
out
add
pop
cwde
inc
jp
movs
or
pop
mov
jae
sub
push
pop
mov
je
pop
mov
xchg
pop
xchg
outs
fild
fld
fwait
in
adc
jmp
mov
loopne
(bad)
nop
ins
mov
in
adc
pushw
stos
xchg
mov
aaa
fimul
stos
call
push
ins
jne
shl
or
aam
adc
mov
xlat
push
mov
ret
push
cmc
test
dec
mov
cmps
cdq
pop
lahf
or
inc
scas
dec
pop
mov
push
popa
lods
retf
sub
es
daa
add
mov
adc
icebp
mov
repz
or
or
mov
add
lods
mov
adc
add
pushf
add
popa
cwde
movs
std
adc
mov
push
cmp
jecxz
mov
stos
pop
sbb
stos
hlt
aam
pop
ins
aas
daa
into
adc
jne
xchg
and
xor
pushf
rcl
fmul
jmp
cmp
mov
push
adc
movs
sub
fstp
xor
mov
rcr
ret
mov
cs
xchg
enter
bound
pusha
xlat
in
push
push
stc
loope
loopne
mov
pop
mov
add
ins
xor
sub
xchg
retf
inc
stos
data16
repz
imul
cwde
mov
mov
cli
in
mov
stc
sar
jo
int
push
dec
xchg
mov
inc
pop
adc
daa
jns
dec
push
mov
cmp
iret
and
cmp
retf
rcl
dec
in
jmp
jnp
jns
cmp
xchg
xchg
popa
xchg
or
xor
xchg
iret
push
xchg
shl
movs
sbb
push
cmp
test
aas
cwde
nop
fcom
mov
pushf
imul
mov
inc
and
cmc
mov
repnz
rol
sub
nop
icebp
adc
and
jno
fisttp
pop
leave
ss
(bad)
sub
fyl2x
xchg
ins
mov
in
mov
dec
mov
mov
pop
inc
pushf
pop
mov
mov
push
pushf
dec
loop
add
pop
test
and
inc
mov
cli
out
and
loope
dec
xchg
sub
or
addr16
cdq
imul
mov
jecxz
jmp
mov
sbb
cld
lds
data16
scas
iret
jae
std
loope
cmp
lods
xor
sti
inc
add
xor
push
mov
out
stos
mov
adc
rcl
cmp
daa
mov
jp
cmc
add
sahf
sub
push
and
cmps
fild
aaa
inc
mov
jmp
cmpxchg
push
hlt
inc
popa
jmp
cmp
lahf
scas
mov
jecxz
adc
sbb
and
shr
sar
mov
test
sar
pop
sbb
jecxz
fimul
dec
pop
pop
test
jg
(bad)
mov
sub
sub
or
pusha
fcmovne
loopne
ret
and
jecxz
popf
add
xlat
sar
push
test
xor
loope
imul
sub
mov
div
sbb
jnp
retf
pop
cwde
xchg
dec
mov
nop
jecxz
ins
push
ss
inc
or
aas
in
ins
test
stos
inc
mov
mov
rcl
mov
jno
leave
push
scas
mov
xor
mov
or
adc
add
icebp
scas
xor
adc
pop
mov
jnp
(bad)
xchg
xor
cmc
push
cmps
mov
pop
inc
jge
fild
jp
jmp
mov
push
jmp
adc
or
sbb
jnp
dec
xor
sub
and
mov
mov
movs
jns
xchg
scas
cld
lea
lods
dec
mov
or
rcr
fucomp
(bad)
and
push
pop
mov
jge
leave
ja
test
xchg
xor
pop
retf
ss
mov
scas
mov
sahf
jl
or
xor
xlat
xor
jg
inc
sbb
cs
popf
int3
or
dec
xchg
bnd
pop
pop
mov
mov
lahf
jecxz
ds
sub
mov
or
ret
push
push
mov
fiadd
(bad)
jge
dec
arpl
(bad)
cmp
repnz
inc
dec
shl
shl
cmps
dec
sar
mov
je
sbb
jno
pusha
xchg
scas
fisub
mov
cli
cmps
movs
lock
in
or
xor
loopne
dec
aaa
shr
call
lock
cmp
cmp
mov
mov
xor
loop
nop
add
mov
not
lahf
push
lahf
in
jnp
pushf
cmp
sahf
fild
add
push
sub
inc
das
pop
mov
fwait
clc
repz
add
pushf
sub
mov
mov
fwait
nop
fldcw
mov
inc
sub
pop
sar
(bad)
or
adc
jo
push
cmp
pop
loopne
retf
pop
xchg
rsqrtps
pop
xchg
sub
or
mov
hlt
inc
cmp
hlt
ins
adc
push
xchg
cwde
sbb
icebp
retf
jmp
ret
inc
sbb
(bad)
sbb
jnp
loopne
adc
(bad)
cmp
test
cs
(bad)
lahf
jecxz
pop
sbb
and
xchg
cmp
test
xor
popa
sub
retf
jbe
rcr
sub
pop
push
dec
dec
pushf
fcmovbe
in
fmul
dec
xchg
imul
cmp
pop
adc
popf
jmp
mov
mov
add
and
mov
mov
and
mov
fisttp
aam
lahf
mul
mov
adc
jnp
mov
pop
js
and
fdiv
stc
or
jecxz
out
(bad)
ja
dec
mov
mov
xchg
daa
les
cmc
into
cli
xor
stos
rcl
pop
push
jge
pop
sub
je
out
cmp
mul
sbb
xor
push
jle
test
scas
and
sub
pop
and
scas
ret
pop
inc
xchg
sahf
nop
jp
cmps
test
data16
inc
push
mov
xchg
cmc
pushf
in
nop
push
jnp
xor
sti
sub
sub
enter
add
loope
aam
mul
nop
inc
pop
hlt
mov
in
movs
mov
imul
cdq
imul
push
mov
stos
pop
mov
(bad)
enter
stos
and
loope
xor
sub
(bad)
xor
fisttp
push
mov
adc
xchg
inc
mov
and
add
and
adc
loop
fwait
jecxz
xchg
movs
push
pushf
xor
retf
dec
sub
jg
enter
sub
popa
pusha
inc
dec
push
test
cs
jl
xor
sub
cmc
lock
cli
mov
cmp
mov
jo
xor
stos
or
sbb
jle
jl
or
(bad)
cwde
ret
xor
in
cmp
jmp
repnz
jmp
outs
les
addr16
ja
mov
ror
cmp
pop
outs
mov
xchg
pop
mov
sub
test
mov
hlt
xchg
out
repz
mov
mov
mov
cmp
loope
inc
(bad)
stc
fwait
adc
cmps
or
push
or
and
and
xor
clc
jne
(bad)
push
add
icebp
shl
sub
hlt
inc
or
(bad)
fdivr
mov
(bad)
jnp
pop
push
mov
inc
dec
pop
add
jmp
or
rcr
mov
in
rol
or
cmp
stc
sub
inc
or
retf
fldenv
ror
shl
std
cdq
jns
add
ret
repz
daa
cmp
mov
xchg
push
push
dec
sub
xor
mov
jge
dec
lds
cmp
and
outs
mov
bound
sahf
push
mov
xor
mov
aas
pop
jnp
pop
jns
popa
callw
shr
femms
repnz
sbb
or
int
push
mov
loop
and
mov
pop
mov
ret
into
inc
and
and
cmc
xchg
outs
fld
xchg
xor
(bad)
push
xor
mov
fdiv
fld
sbb
leave
ror
fs
outs
fmul
jl
pushf
(bad)
ror
ins
aam
sub
gs
inc
mov
add
sti
mov
das
stc
push
es
push
xor
push
xlat
ficom
inc
mov
cld
push
jae
sbb
and
arpl
adc
pop
pop
neg
in
push
push
out
adc
cmp
in
outs
ds
xor
test
push
out
lea
and
sub
push
sbb
xor
dec
adc
inc
popa
push
ins
das
test
pop
aaa
push
pop
jge
arpl
mov
mov
mov
xor
fwait
rcr
inc
pushf
pushf
pop
mov
fild
push
jecxz
sbb
mov
mov
inc
adc
lahf
js
sub
cmps
pop
mov
fstp
push
or
mov
aas
sub
leave
push
add
add
mov
jp
scas
mov
mov
xchg
adc
or
lea
sbb
aaa
mov
mov
es
fwait
pop
scas
icebp
popa
pop
jmp
or
(bad)
xchg
mov
jp
sub
pop
push
push
cmp
retf
sti
cld
fidiv
shl
inc
lds
in
mov
mov
(bad)
loop
sbb
rcl
and
cwde
cmps
pop
iret
xor
xchg
loop
pop
cmps
mov
mov
arpl
out
hlt
loope
out
cmp
test
data16
rcl
pop
enter
xchg
out
xchg
mov
stos
or
push
adc
popa
cmp
into
jl
xor
pop
mov
add
mov
fbstp
fcmovu
jmp
dec
std
div
pop
and
or
pop
retf
aad
ret
fnstcw
xchg
mov
mov
inc
ror
cmp
xlat
jg
inc
xchg
cdq
add
push
outs
dec
and
out
dec
movs
mov
xchg
pop
mov
pop
ins
mov
xchg
push
es
add
retf
push
dec
gs
dec
outs
push
mov
xor
popf
imul
hlt
mov
adc
aad
jbe
fdivr
(bad)
sub
or
test
mov
mov
aas
stos
xor
sti
dec
(bad)
mov
iret
nop
adc
sbb
xchg
fisubr
leave
mov
mov
inc
or
inc
stos
arpl
int3
out
mov
pop
inc
ja
and
gs
imul
sbb
clc
xor
test
adc
stos
clc
(bad)
cmp
rcl
mov
scas
dec
and
fwait
dec
jbe
xchg
mov
push
aad
push
ins
bound
adc
movs
dec
ins
test
sbb
adc
pop
in
sbb
test
call
or
test
loopne
das
sbb
into
sbb
sub
inc
mov
retf
fdiv
(bad)
jmp
shl
or
sahf
inc
push
es
fcmovnu
inc
push
(bad)
mov
test
or
xchg
cmp
inc
mov
arpl
cmp
cmp
div
mov
push
add
or
pop
imul
jno
sar
outs
fs
imul
movs
lods
cwde
cmps
sahf
pop
loop
add
pusha
inc
shr
js
cli
mov
xor
add
push
test
jle
es
mov
jl
cmps
cmp
ror
dec
push
mov
test
enter
xor
(bad)
lods
push
and
jno
cmp
imul
or
shl
ins
lods
jl
sahf
sbb
out
push
sti
jge
ret
ins
mov
jns
ss
int3
pop
cmp
les
cmp
sub
and
enter
xchg
imul
push
sub
push
fstp
cmp
lahf
stos
or
cmp
push
and
push
or
lods
ffreep
or
mov
(bad)
sar
stos
mov
add
inc
cmp
mov
push
xchg
dec
pop
fsub
xor
in
push
fsubr
(bad)
sub
sub
clc
add
cwde
outs
jle
arpl
mov
sbb
sbb
push
gs
push
sbb
push
(bad)
into
outs
fdivp
(bad)
cld
jo
push
xor
xor
mov
dec
pop
shl
loop
in
cwde
repz
test
mov
sahf
sbb
xchg
mov
add
call
push
xor
inc
dec
lahf
mov
and
cmp
or
mov
dec
inc
fmul
mov
iret
and
inc
ffreep
icebp
xchg
mov
scas
es
rcl
mov
(bad)
cmc
pop
fs
sub
in
out
jno
sbb
jno
bound
outs
jo
or
add
(bad)
push
sbb
and
cmp
jb
mov
sti
int
jno
mov
ds
(bad)
enter
call
ret
jecxz
clc
fidiv
adc
iret
movs
push
sbb
sti
setle
lahf
jnp
inc
call
in
stos
mov
das
push
sub
std
push
add
jnp
push
sub
rcl
xchg
and
cmp
dec
dec
add
dec
sbb
je
xchg
push
out
sbb
pop
lea
rol
jg
add
cdq
lds
popf
xor
adc
and
sti
rcl
or
repz
adc
ss
bound
repz
add
pusha
mov
mov
in
in
out
push
mov
pop
retf
or
dec
push
shl
xchg
xchg
into
mov
call
add
mov
xor
inc
in
out
ja
test
push
pop
pop
scas
cmp
mov
cli
pop
sar
ret
push
jmp
int
sub
div
sbb
dec
push
(bad)
out
ret
ror
add
fwait
cmp
fwait
inc
mov
mov
cmc
add
mov
loopne
loope
inc
pusha
rol
lahf
mov
scas
jle
jl
sub
pop
add
and
fisubr
pop
push
pushf
je
les
clc
cmps
push
cmp
dec
inc
(bad)
fwait
mov
jge
mov
fdiv
retf
cdq
or
in
jl
sti
mov
rol
or
cmps
push
ins
idiv
jbe
sub
fistp
outs
add
jmp
cmp
pop
loopne
hlt
inc
pop
mov
or
xor
call
sub
leave
stos
xchg
mov
push
push
in
jno
sbb
jmp
gs
or
mov
mov
daa
add
call
sahf
push
enter
or
lahf
sub
xchg
stos
enter
mov
not
jnp
jbe
lds
retw
mov
sbb
mov
mov
fdivr
pop
jb
sbb
jp
in
add
ds
outs
or
mov
jae
inc
push
jmp
dec
and
jmp
sar
test
arpl
fiadd
outs
in
push
and
lock
loope
fmul
outs
sahf
push
sub
addr16
push
movs
cli
leave
or
adc
sub
sub
inc
es
mov
add
pop
fcmovbe
dec
js
aaa
mov
xchg
lods
fist
dec
jb
lds
push
ret
sbb
test
mov
mul
pushf
shr
xchg
(bad)
cs
pop
inc
in
in
and
mov
fcomp
adc
into
mov
test
in
jne
xor
adc
add
push
fcomp
ror
cmps
je
imul
pop
shl
jl
cmps
pop
inc
jg
outs
outs
cli
xchg
(bad)
cli
out
sbb
ror
and
inc
xchg
es
int
xor
mov
call
repnz
bound
into
imul
jp
mov
cmps
retf
jge
push
movs
cmps
jp
out
fnsave
test
jg
and
scas
popf
popf
daa
in
retf
imul
popf
push
pushf
xchg
pop
sbb
(bad)
and
mov
icebp
cmp
loope
push
shr
(bad)
mov
adc
and
add
push
popa
into
ficom
loop
inc
xchg
repz
ss
iret
cmp
add
jne
xor
loopne
xor
lds
mov
mov
jo
cmp
addr16
pop
es
ret
je
and
sar
or
push
adc
xchg
addr16
mov
into
cmp
push
push
jp
sub
movs
jecxz
ficomp
pop
icebp
out
push
sbb
aam
cmp
add
cli
dec
scas
in
test
fld
xchg
inc
out
xchg
sbb
push
test
mov
or
sbb
sub
enter
ror
add
add
addr16
popf
pop
sbb
movs
ret
lock
repnz
xor
fiadd
jne
pushf
add
cmp
mov
xor
mov
imul
pop
mov
loopne
(bad)
sub
mov
adc
xor
jmp
ss
rcl
pop
ins
add
je
movs
jmp
repnz
jae
loop
movs
inc
cwde
xchg
cmp
iret
fdiv
fwait
mov
cmp
push
ficom
push
sbb
hlt
push
and
sub
bound
jmp
pop
dec
gs
sub
lea
sbb
add
lods
sbb
addr16
add
xchg
add
mov
loope
aas
xchg
adc
ror
fst
(bad)
repz
stc
arpl
pop
jnp
fsubr
mov
push
mov
sub
jae
pop
and
mov
inc
inc
aam
ja
ds
rcr
fnsave
ins
lahf
mov
cmp
jmp
gs
popa
loope
and
jmp
jmp
fcomip
sbb
pop
sbb
lahf
cmps
les
in
ror
adc
sub
xchg
inc
jno
imul
(bad)
pop
rcr
push
add
rol
int3
dec
sbb
pop
xlat
leave
dec
xor
repz
daa
adc
enter
(bad)
cmp
mov
pop
sbb
addr16
ins
mov
shl
sahf
stos
push
test
xor
cmc
scas
pop
jecxz
(bad)
push
sti
call
pop
in
or
test
test
add
sahf
cmps
push
out
stos
mov
cmp
and
add
jne
inc
adc
mov
arpl
not
cdq
add
scas
and
pop
mov
xor
xor
cmp
cmps
mov
or
(bad)
xchg
jge
lahf
pop
daa
jnp
fld
sahf
mov
xchg
jl
js
loope
mov
xor
adc
into
gs
ret
cwde
lea
adc
mov
lds
jge
shr
arpl
xchg
out
std
mov
inc
out
daa
sti
aam
mov
mov
sbb
mov
mov
leave
dec
dec
retf
ret
jmp
out
and
sbb
outs
pusha
and
les
fcom
pop
retf
sbb
push
dec
daa
mov
adc
cs
(bad)
cmp
stos
lea
push
aas
fnstcw
sbb
xor
ror
xchg
pop
retf
lods
pop
(bad)
jge
mov
inc
mov
xor
inc
jb
fwait
test
aaa
popa
mov
sti
dec
dec
xchg
xchg
dec
push
or
xchg
dec
aas
mov
and
and
pop
bound
and
cmps
cld
test
xchg
(bad)
shl
xor
dec
or
lds
xor
sbb
jle
test
inc
mov
sbb
inc
imul
sub
out
(bad)
fcomp
jecxz
popf
mov
and
loope
jmp
jl
mov
imul
imul
or
jl
in
and
jns
fstp
enter
rcr
test
mov
aas
add
out
nop
pop
std
xor
mov
sbb
mov
and
sar
test
sub
inc
stos
movs
test
and
jnp
inc
cmp
rcl
movs
hlt
in
xchg
or
pop
adc
cmp
dec
rol
jmp
popf
je
loopne
mov
pop
enter
ret
je
jo
adc
js
shr
adc
and
add
addr16
cmc
and
dec
pop
pop
neg
sub
dec
fs
sub
or
test
pop
test
addr16
pop
pop
mov
inc
xchg
xchg
std
mov
push
sub
lea
sub
pop
push
or
popa
add
push
mov
adc
xor
jle
(bad)
pop
arpl
add
adc
dec
cdq
retf
pop
push
ret
mov
stos
mov
push
aaa
pop
data16
hlt
cld
popa
add
imul
inc
into
push
mov
mov
dec
loopne
adc
out
std
iret
sbb
cmp
aad
movs
inc
add
cmp
icebp
adc
ins
sahf
pushf
adc
push
cdq
addr16
cmps
scas
mov
adc
jmp
and
es
or
pop
out
shl
mov
pop
ins
mov
sar
xor
movs
mov
xor
jp
mov
cmp
adc
mov
push
out
xlat
(bad)
push
mov
shr
pop
jmp
stos
mov
stos
(bad)
mov
loop
mov
(bad)
cmc
mov
dec
adc
mov
mov
popa
or
retf
or
popa
push
push
nop
pop
outs
es
mov
xor
out
pushf
pop
mov
loopne
js
mov
inc
xor
xor
dec
imul
cmps
adc
scas
jle
cld
mov
rcr
stos
cmp
mov
test
outs
mov
jnp
call
pop
(bad)
cmp
test
imul
sahf
fmul
jecxz
add
ds
in
(bad)
ins
push
xor
adc
or
cli
sbb
test
cdq
pop
pop
fwait
stc
aad
mov
aas
pop
mov
je
int
jmp
xlat
outs
fiadd
push
adc
or
inc
shl
pop
mov
cdq
push
xacquire
adc
test
cmp
mov
pop
das
pop
mov
mov
jecxz
fsubr
mov
inc
ins
ror
call
pop
popf
je
clc
mov
jo
inc
xchg
cmp
ins
add
fs
cmps
mov
mov
push
xor
loop
adc
add
mov
test
out
jl
call
sub
sar
pop
les
sub
and
jmp
loope
sbb
test
int3
mov
mov
test
ins
xor
ins
or
jae
popa
jl
jl
ret
fisub
(bad)
std
mov
sub
adc
pop
adc
pop
mov
or
hlt
mov
je
inc
and
aas
and
(bad)
fst
es
dec
iret
pop
and
jl
pop
je
jae
or
sbb
sbb
imul
ins
jmp
out
dec
adc
lods
fimul
sbb
rcl
adc
mov
shl
fist
pop
add
call
cwde
popa
les
out
push
cwde
xor
mov
xchg
mov
xor
movs
sub
jb
into
fcomp
jno
call
std
ficom
ror
xchg
sbb
jno
sbb
ror
(bad)
aad
xor
mov
cmp
mov
push
out
iret
les
push
rcr
aad
sub
enter
inc
push
push
jnp
adc
stos
scas
nop
rcr
iret
aaa
bound
mov
rcl
sub
pusha
pop
sbb
xchg
push
ins
mov
sbb
mov
xchg
daa
shl
mov
mov
mov
sti
imul
out
fbld
inc
cmp
out
retf
adc
dec
pop
pop
push
mov
loope
shl
test
jp
out
lds
xchg
mov
ins
fsubr
out
call
adc
jp
cli
xchg
aam
cmps
inc
icebp
cmps
xchg
cwde
pusha
outs
xchg
fs
popa
inc
(bad)
cdq
add
add
adc
cwde
inc
enter
(bad)
hlt
loop
pop
into
cmp
js
rcl
int
repz
out
inc
sbb
sub
leave
fstp
mov
fstp
xlat
mov
mov
jg
mov
inc
test
mov
pusha
das
jge
and
ds
out
jmp
mov
cmp
push
cmp
mul
int3
xor
push
ja
test
lahf
dec
jp
sub
fisub
push
sub
mov
jbe
push
jecxz
shl
mov
daa
or
sbb
or
ret
shr
push
movs
stc
and
(bad)
imul
lahf
dec
xchg
pop
iret
xchg
xchg
in
outs
add
jle
popf
out
xchg
lds
or
out
push
idiv
push
call
outs
cmp
xchg
test
dec
xchg
mov
push
add
fld
scas
aas
adc
sub
cmc
adc
scas
jmp
inc
push
inc
jecxz
or
int3
mov
int
nop
imul
xchg
dec
in
pop
sbb
xchg
jecxz
(bad)
ins
fld
test
dec
sbb
mov
fcmove
aas
pop
scas
cdq
fwait
mov
mov
jnp
nop
rcr
dec
(bad)
mov
push
int
jmp
sub
push
sub
mov
mov
mul
rcl
xor
cs
mov
mov
iret
sub
push
pop
inc
out
call
inc
fdiv
mov
xor
pop
mov
mov
mov
push
push
jnp
mov
into
add
lock
dec
xor
cmp
adc
je
test
mov
sub
(bad)
jae
xchg
mov
ds
js
inc
push
idiv
sbb
jno
in
pop
inc
lahf
cld
push
cmc
dec
out
rcl
hlt
jo
pop
lods
scas
mov
sub
pop
ins
inc
mov
retf
leave
fwait
cmp
inc
mov
scas
fs
sar
mov
scas
lock
loopne
jns
in
(bad)
imul
mov
call
push
xor
jge
xchg
mov
pop
mov
mov
fisubr
arpl
push
add
inc
mov
test
jne
ror
pop
xchg
mov
arpl
jne
adc
mov
cli
enter
retf
mov
push
inc
push
dec
loop
push
push
dec
imul
push
jmp
arpl
fnsave
out
(bad)
test
adc
or
xchg
in
nop
push
retf
dec
cli
imul
ret
xchg
and
les
repnz
cmp
pop
cmp
ds
xor
leave
xchg
call
mov
lods
aas
jg
mov
xchg
mov
movs
ja
jb
outs
fs
jmp
dec
and
imul
xchg
xchg
push
and
mov
xchg
dec
sbb
mov
and
dec
mov
add
push
push
mov
movs
push
imul
jmp
mov
push
iret
inc
neg
mov
adc
dec
nop
call
push
daa
jne
je
call
inc
ins
push
daa
in
mov
or
xor
and
fimul
shl
mov
sahf
shr
push
stos
je
mov
inc
jg
jb
sub
dec
push
pop
outs
jecxz
call
sbb
cmp
push
sbb
sub
adc
call
das
xchg
cwde
aaa
ins
sahf
or
fistp
sbb
call
xchg
ret
mov
inc
not
adc
jne
sub
jge
sub
dec
cli
addr16
lea
inc
cmp
xor
iret
xor
das
mov
retf
cld
addr16
adc
(bad)
jmp
cmps
jbe
push
jbe
loopne
xchg
mov
adc
(bad)
pop
xchg
mov
std
or
jmp
xchg
mov
aam
loop
enter
push
xchg
sub
mov
ss
jmp
dec
fidivr
xchg
mov
mov
out
call
out
daa
and
ins
or
mov
dec
jle
test
pop
xor
fwait
jnp
and
pop
fimul
js
pop
cdq
ds
pop
ins
nop
stos
inc
jnp
mov
call
dec
pop
pop
jnp
shr
hlt
rol
cmp
retf
js
fisub
and
xchg
sbb
jmp
and
cs
push
and
nop
imul
and
dec
clc
call
inc
mov
jbe
mov
push
xchg
call
stos
cmp
jns
imul
pop
mov
adc
xor
imul
cmps
pop
stos
nop
sub
ins
test
fcom
jnp
daa
fcomp
idiv
add
shl
jno
test
jns
sub
ds
arpl
xchg
loopne
imul
inc
icebp
stos
inc
in
push
or
mov
sar
popf
lea
add
pop
imul
daa
retf
adc
in
inc
sti
cmp
sbb
mov
sbb
jmp
cdq
or
mov
jp
rcr
push
aas
inc
xor
hlt
mov
movs
inc
dec
cmps
adc
cli
sbb
jp
inc
ds
sbb
sub
mov
jmp
push
outs
xor
jmp
mov
xchg
in
dec
xchg
das
les
mov
movs
pop
push
shl
hlt
rol
jb
xor
stc
out
mov
es
mov
add
pushf
aam
call
clc
jg
xlat
enter
inc
sub
xor
cmp
(bad)
idiv
mov
xlat
adc
mov
jne
test
fcmovu
(bad)
sti
mov
and
ss
pop
hlt
scas
ret
repnz
jnp
pop
mov
xchg
arpl
mov
test
cmp
imul
fmul
sbb
jbe
test
out
movs
mov
mov
iret
adc
xor
pop
popa
xchg
push
retf
jmp
adc
sbb
and
test
or
aas
pop
sbb
cmp
adc
dec
loopne
repnz
sbb
mov
jns
enter
ret
aas
dec
pop
mov
mov
mov
lahf
lds
outs
dec
adc
cdq
push
push
xor
lahf
add
mov
pop
mov
mov
mov
mov
das
scas
xchg
add
leave
fisttp
sar
lock
and
in
cmps
rcl
dec
scas
loope
jmp
adc
adc
or
cmc
repz
mov
(bad)
sahf
(bad)
sbb
popf
jo
mov
mov
push
out
enter
jmp
sbb
sub
fild
or
adc
lahf
adc
push
das
sahf
imul
mov
les
cmp
cdq
push
das
xchg
mov
inc
inc
(bad)
mul
dec
mov
in
sti
jmp
mov
mov
or
lods
cmp
stos
adc
jae
stos
and
sahf
in
stos
xor
les
xchg
cmp
in
movs
inc
mov
jb
test
add
outs
shl
call
movs
mov
pop
add
scas
shr
lods
int3
dec
cli
gs
jmp
push
fidivr
and
imul
pop
push
and
inc
push
bound
aad
mov
mov
dec
fld
xchg
sub
sbb
mov
(bad)
sbb
fstp
push
cmp
call
pop
sbb
je
test
shr
add
jne
pop
loopne
cmps
les
push
xlat
fdivr
je
jae
js
and
xchg
ja
push
rcr
fcomp
sub
pop
scas
daa
nop
dec
sbb
or
int3
mov
mov
ret
xchg
pop
push
int
mov
mov
xchg
mov
mov
lahf
ror
jns
and
aaa
in
outs
int3
mov
daa
dec
lock
test
mov
mov
cmp
cmp
fwait
call
jp
push
lea
adc
aaa
stos
cli
adc
rol
je
sub
clc
xor
cmp
(bad)
or
mov
enter
into
outs
fisttp
shl
retf
nop
ret
jbe
sub
lock
call
test
dec
jmp
jne
or
xchg
sbb
mov
fnstcw
fsubr
fnstenv
movq
mov
or
jg
inc
xor
mov
test
add
sbb
ret
shr
shr
xor
jmp
out
jo
outs
cmp
stos
int3
repnz
shl
cmp
push
hlt
mov
lea
in
pop
fwait
sub
popa
dec
test
outs
(bad)
push
fnstcw
sbb
xor
ds
not
imul
lods
js
inc
jne
cmovs
push
adc
jbe
addr16
pop
cmp
shl
mov
cmps
cmp
idiv
lods
icebp
or
xor
inc
adc
xchg
push
je
mov
inc
push
dec
mov
jns
push
mov
out
ins
dec
mov
ja
sbb
(bad)
test
adc
stc
push
mov
pop
push
or
test
or
adc
pop
pop
xadd
inc
test
push
xchg
jbe
xor
push
mov
pop
ficomp
dec
adc
xchg
cmp
xor
dec
xchg
and
cmp
sub
das
std
or
cmc
inc
xor
gs
fnsave
mov
cmp
inc
ins
inc
shl
jne
jge
xchg
sbb
movs
inc
lds
jo
aam
outs
(bad)
dec
pop
mov
push
push
into
jecxz
jae
dec
add
jbe
adc
mov
not
pusha
lods
xchg
lahf
in
mov
and
ins
mov
js
loope
int3
pop
xor
cmc
in
ins
(bad)
dec
inc
adc
xchg
movs
push
test
pop
call
out
pop
inc
and
addr16
out
fs
xchg
mov
inc
mov
jb
sar
imul
in
in
les
in
push
sub
xchg
sbb
enter
add
cmp
sbb
mov
adc
cmc
inc
dec
popf
push
shl
das
aaa
jo
lods
jge
add
jmp
jecxz
mov
jae
repz
push
mov
or
in
xchg
xchg
pop
out
and
popf
xchg
(bad)
movs
test
and
in
dec
lods
(bad)
data16
xchg
jecxz
pusha
cdq
xchg
stos
shr
shr
xchg
xchg
(bad)
adc
int3
lods
pushf
int
adc
shr
mov
stos
sub
dec
and
pop
fdiv
rcr
cdq
jo
or
sti
pop
sbb
cmp
arpl
or
enter
pop
push
out
cmps
ret
aas
cdq
mov
clc
pop
cmc
add
retf
(bad)
pop
addps
mov
(bad)
mov
xchg
les
and
push
leave
stos
mov
inc
push
or
or
add
pushf
pop
imul
dec
lds
int
ret
stos
push
lds
pop
or
push
push
arpl
dec
adc
mov
jmp
or
sub
popa
test
pusha
mov
push
xor
push
sbb
xchg
arpl
mov
movs
ja
mov
jg
cmps
(bad)
in
pop
iret
call
out
fild
sbb
rol
(bad)
popf
not
dec
shr
rcl
mov
xor
sub
in
xchg
mov
aad
xor
sar
mov
shl
jg
push
and
jecxz
out
inc
cmc
sti
dec
je
push
xor
sub
xor
jmp
fldcw
sub
sar
mov
dec
jge
sub
mov
sub
push
retf
pop
xor
pop
sub
adc
and
mov
imul
jge
fsubr
(bad)
sub
and
neg
aas
inc
les
in
lods
add
jnp
dec
ffree
xlat
movs
mov
adc
addr16
test
add
shl
xor
sub
movs
sub
lock
test
mov
(bad)
sahf
or
js
ins
jne
stos
jmp
jne
mov
pop
pop
jnp
aam
cmp
mov
xchg
fild
or
cmp
cmp
sub
mov
jno
cmc
and
push
jnp
mov
repz
jns
bound
push
daa
pusha
mov
cmp
lods
fstp
jge
test
rcl
or
in
mov
movs
ins
jmp
popf
push
adc
stos
test
nop
sbb
push
aas
inc
mov
sub
(bad)
dec
inc
movs
mov
bound
cmp
sbb
pop
cmp
inc
aaa
out
mov
into
inc
mov
out
jne
dec
cmp
cmps
test
fnsave
outs
mov
sbb
push
xchg
out
inc
pop
mov
movs
push
push
(bad)
xchg
xchg
push
mov
repnz
pusha
push
xor
pop
das
pop
pop
mov
inc
outs
adc
mov
test
adc
js
call
add
dec
mov
push
in
jge
dec
retf
sub
(bad)
jecxz
(bad)
mov
pop
cmps
ins
call
js
push
and
or
call
iret
adc
push
mov
test
inc
jge
lahf
cwde
lea
push
and
in
push
test
adc
data16
mov
jns
jmp
int
inc
xor
mov
loope
mov
call
xlat
add
sub
sub
cmp
and
push
das
xchg
sub
rcr
bound
push
retf
jb
mov
(bad)
push
icebp
inc
test
lods
adc
add
loopne
pop
pop
into
hlt
rcr
out
mov
cmc
and
imul
sbb
pop
add
outs
stos
test
cmc
and
adc
(bad)
imul
jge
ins
jecxz
push
mov
and
je
ret
mov
call
mov
test
aas
mov
je
loop
jnp
cld
xor
movs
and
jns
iret
jp
loope
jno
fwait
mov
inc
cli
add
cmc
sub
outs
shl
push
daa
cdq
pushf
jmp
stc
adc
sub
aam
jae
mov
mov
sti
rol
mov
add
cmps
and
fwait
lock
pop
sbb
mov
xchg
les
cmc
lahf
fisubr
jb
jp
mov
mov
lods
sub
cmp
fbstp
jl
or
addr16
fucom
push
mov
fsubr
or
adc
adc
mov
je
data16
jge
inc
mov
inc
icebp
adc
enter
mov
mov
mov
or
test
call
ins
sbb
inc
jge
test
in
aad
push
sbb
into
inc
(bad)
(bad)
jecxz
stos
xchg
adc
jp
mov
jecxz
cld
mov
add
outs
in
stos
or
pop
ins
xchg
mov
int3
jne
pop
mov
loope
iret
xor
mov
and
fisttp
jbe
inc
fst
inc
mov
scas
dec
dec
xchg
out
call
jo
in
fcomp
adc
xor
xlat
in
mov
out
dec
fstp
out
enter
adc
and
xchg
pop
push
in
inc
mov
stos
(bad)
fidiv
lods
mov
pop
and
mov
adc
pop
leave
mov
adc
les
ins
test
neg
inc
pop
cwde
jmp
jnp
xor
test
addr16
xchg
cmp
cmp
xor
arpl
adc
sbb
popf
icebp
mov
mov
daa
jne
call
sahf
sub
xor
mov
cli
jne
jg
pop
push
and
adc
jnp
push
pop
shr
daa
ds
jo
dec
push
ins
mov
xchg
aas
mov
fptan
popa
ret
out
aad
xchg
int3
test
push
std
imul
or
imul
mov
fnstsw
out
adc
push
aaa
hlt
adc
(bad)
or
dec
call
cmp
loop
inc
and
jnp
and
push
dec
push
rcl
lds
inc
in
leave
popa
cmc
jg
jp
sbb
sub
dec
sbb
ja
mov
pop
dec
pop
imul
or
adc
push
sbb
test
fwait
lahf
pop
lods
ja
push
xchg
retf
(bad)
aad
jmp
add
lahf
pop
mov
ss
and
sbb
sub
ret
pop
adc
or
je
inc
add
in
xlat
push
arpl
cmp
repz
fbld
hlt
and
fidivr
call
add
retf
cld
retf
gs
mov
idiv
ss
xor
jns
icebp
cmc
mov
jmp
ror
xchg
shr
int3
cmp
hlt
inc
jecxz
jbe
pop
xchg
loop
mov
push
cwde
outs
fmul
jg
inc
sbb
jge
nop
mov
mov
cmps
jecxz
jg
sbb
mov
xchg
adc
rcl
dec
add
push
fwait
push
mov
cmc
xor
aad
loopne
xchg
jmp
xor
cmp
fistp
xor
jno
int
push
jbe
xchg
xor
stc
dec
xor
test
or
push
cmp
mov
loop
xchg
sbb
rol
cld
jp
or
and
imul
jno
and
jb
and
sub
pusha
ret
mov
sub
outs
sub
dec
fidiv
maskmovq
mul
ficom
and
leave
(bad)
aam
test
aam
mov
cmp
fdivr
les
call
movs
push
jge
mov
int
out
nop
mov
imul
je
cmp
adc
lock
shl
movs
push
loop
test
xor
xchg
and
dec
retf
repnz
stc
cmps
cmps
dec
js
mov
inc
push
(bad)
jae
mov
in
lea
jnp
outs
movs
popf
fld
loopne
or
ficom
call
or
and
int
xor
jmp
xor
(bad)
stos
out
stos
and
or
cmps
addr16
cmps
xor
add
and
cmps
mov
mov
sbb
mov
push
ret
lea
fild
add
test
ficom
xor
or
dec
cld
push
arpl
xchg
test
and
xor
mov
repz
(bad)
or
sti
clc
push
or
sbb
out
jns
shl
(bad)
in
cdq
xchg
data16
add
sub
xor
jecxz
cmps
test
xor
repz
mov
jmp
xor
mov
xor
inc
stos
or
inc
outs
add
outs
inc
mov
out
xchg
xor
je
int
cs
lea
call
inc
push
mov
repz
or
out
stos
lahf
mov
xor
jno
push
out
outs
sbb
fbld
test
movs
push
xor
or
jnp
mov
fcom
jl
ss
mov
xchg
inc
jmp
nop
mov
jo
ret
out
retf
xchg
outs
cmps
xor
dec
ret
mov
outs
pop
dec
mov
aaa
mov
xor
inc
retf
adc
fnsave
pop
add
push
push
or
xchg
ja
adc
dec
jbe
add
xor
mov
xor
mov
xchg
xor
das
xor
and
out
mov
movs
pop
add
dec
push
fstp
mov
add
jecxz
fmul
leave
push
cld
repz
enter
fs
je
xor
lahf
or
jp
dec
add
push
inc
mov
jae
pop
and
mov
enter
push
xor
inc
push
les
add
fbld
mov
lahf
ds
repz
and
pop
(bad)
fld
cmp
fidivr
inc
sub
dec
fsub
mov
mov
dec
neg
lods
xor
jl
cmp
inc
inc
jmp
out
popf
and
repnz
nop
inc
daa
jno
pop
call
dec
or
fisubr
add
nop
fdiv
call
mov
rcl
shl
stos
inc
mov
shl
hlt
popa
fstp
push
xor
lahf
sub
ds
rcr
(bad)
mov
mov
arpl
(bad)
jbe
sub
dec
(bad)
data16
mov
dec
cld
jno
xlat
outs
addr16
leave
dec
outs
(bad)
mov
out
out
or
cmp
cmp
ss
adc
call
popa
xor
lea
jge
xchg
(bad)
fucomi
stos
mov
cs
lods
jg
cmp
adc
ror
xchg
imul
jo
inc
sahf
es
int3
hlt
mov
jl
pop
lahf
adc
and
pop
push
mov
gs
daa
xchg
cmp
fistp
cmp
mov
fdivr
inc
in
lock
add
adc
dec
and
loope
(bad)
adc
sbb
inc
or
sbb
lods
fmul
in
mov
into
mov
hlt
out
push
call
jg
int
imul
cmp
cmp
lds
sbb
push
dec
mov
fwait
pusha
push
imul
call
pop
int3
ins
adc
cs
xchg
leave
arpl
sub
test
mov
add
cmp
sahf
cmps
scas
loop
xchg
push
fidivr
and
std
mov
jl
scas
xchg
jnp
xor
data16
or
loopne
xchg
and
mov
pop
scas
clc
lea
xchg
dec
dec
mov
adc
push
stos
pop
out
add
frstor
mov
and
es
shl
(bad)
adc
in
xchg
and
jns
sbb
cdq
ja
adc
mov
jg
push
sub
mov
test
add
mov
or
xor
xchg
ins
pop
in
xlat
aaa
push
cmps
lods
mov
aam
daa
dec
scas
push
mov
ins
sahf
mov
xchg
ss
mov
jg
mov
jnp
iret
push
rcl
imul
je
push
loopne
shl
pop
out
fsubr
cmps
fucom
test
addr16
or
and
mov
das
jb
or
cmp
test
push
fimul
mov
adc
sub
sbb
sbb
addr16
push
pop
fdiv
ins
mov
out
fistp
mov
sub
add
neg
outs
nop
adc
push
mov
pusha
daa
movups
leave
test
or
popa
das
scas
icebp
push
push
cmp
inc
mov
mov
cwde
test
retf
clc
pop
cmp
lods
sub
in
cmp
jge
xor
and
stc
icebp
jmp
dec
dec
push
mov
or
mov
leave
icebp
stos
out
loopne
dec
xlat
sbb
scas
and
adc
ds
jecxz
out
scas
and
jno
int3
aaa
scas
movs
das
inc
and
mov
psllw
fcomp
inc
sti
xor
mov
mov
push
lock
add
xor
(bad)
adc
cmps
pop
mov
add
(bad)
sub
add
scas
xor
fstp
sbb
dec
aas
sub
nop
cli
cmp
inc
jno
iret
retf
inc
out
jmp
pop
mov
movntps
mov
std
jb
or
and
cmp
sbb
idiv
push
dec
xor
add
xor
les
nop
xlat
les
cld
data16
or
push
or
int
push
xchg
test
retf
in
fisub
add
dec
push
pushf
and
jge
aad
pop
and
add
daa
arpl
jno
sub
pop
cmp
xchg
fiadd
and
sbb
cli
mov
ret
mov
lods
and
in
jmp
mov
inc
pop
aad
cs
mov
in
dec
sub
pop
xor
mov
das
dec
or
(bad)
int
and
add
cmp
push
mov
scas
dec
ds
push
mov
scas
dec
xchg
stos
test
mov
cld
iret
loopne
das
loope
push
into
push
ret
sbb
test
mov
scas
retf
lods
jge
dec
dec
xor
push
sub
inc
int
cmp
mov
or
jnp
popf
lods
dec
fst
test
icebp
retf
xchg
cld
jl
or
out
outs
jbe
aad
and
cli
dec
bswap
jns
push
xchg
sbb
xchg
push
scas
mov
iret
adc
sbb
mov
test
cmp
fisub
mov
jae
std
jmp
jg
(bad)
movs
pushf
push
test
mov
loope
jno
xchg
sbb
fsubr
rcl
es
out
or
test
pushf
mov
cmp
jp
movs
mov
ret
call
es
jge
pop
jmp
fidivr
cmp
xor
push
jno
fdiv
dec
into
test
sbb
jmp
ins
lahf
cdq
dec
sub
(bad)
cmc
gs
shr
pop
pop
cwde
or
repz
int
add
adc
xchg
ret
xchg
sub
loop
aad
(bad)
jmp
jmp
stos
int
lds
inc
push
test
inc
std
inc
call
or
add
aas
jns
(bad)
das
mov
out
mov
or
pop
xor
into
inc
jmp
adc
sti
or
sbb
(bad)
imul
push
test
div
lods
xor
mov
(bad)
pop
retf
mov
fsubr
adc
nop
rcr
movs
movs
inc
inc
mov
mov
shl
js
adc
mov
shr
(bad)
jae
popa
inc
sbb
jo
inc
rol
(bad)
mov
leave
arpl
jns
push
push
cmps
fst
xchg
xor
adc
retf
and
add
sar
sahf
and
clc
mov
xchg
xor
mov
inc
xor
rcr
mov
push
stc
pop
jp
jns
idiv
sbb
sbb
pop
out
cmp
xchg
xor
dec
adc
push
mov
push
mov
dec
xchg
movs
outs
jae
add
call
cdq
and
sub
inc
jbe
mov
xchg
dec
mov
data16
ss
mov
enter
cmps
aaa
mov
ins
adc
inc
dec
sub
cmp
push
stos
ret
push
dec
ja
add
in
xor
pop
sub
(bad)
(bad)
sti
jle
pusha
data16
and
jmp
mov
cmps
ins
cwde
inc
test
lahf
ds
jb
test
ja
dec
xchg
(bad)
and
popf
xor
or
jge
out
daa
sbb
mov
mov
outs
mov
mov
daa
into
test
inc
or
loop
sub
ficom
(bad)
fimul
cmps
in
dec
into
pop
pop
in
inc
cwde
xor
mov
xor
xchg
xchg
sub
shl
in
jo
mov
add
sbb
mov
popf
cmps
std
xor
shl
push
xor
loope
ret
xor
push
push
ins
cwde
dec
inc
mov
movs
(bad)
mov
call
mov
jb
stos
cmc
in
inc
ret
jno
ss
push
cdq
in
sti
ss
call
scas
call
add
adc
mov
sti
inc
call
dec
pop
adc
mov
sub
into
adc
sbb
sub
repz
add
cmp
mov
xor
stos
adc
pop
sub
lods
jge
inc
arpl
enter
out
in
das
xchg
jecxz
cmp
(bad)
aad
mov
addr16
xor
je
lahf
fadd
push
or
test
cli
ret
in
leave
cwde
mov
sub
sbb
test
xchg
scas
jbe
fdivp
jae
retf
xor
pusha
hlt
(bad)
push
dec
div
push
and
addr16
xor
shr
rol
cmp
mov
dec
scas
cmps
int
dec
xchg
mov
mov
call
stos
mov
into
not
in
cwde
jns
inc
or
lods
dec
push
xchg
dec
push
js
xor
adc
in
cmps
addr16
pop
adc
out
mov
dec
add
gs
retf
(bad)
in
jp
sub
es
addr16
jmp
jne
push
sti
pop
cmc
cmps
xchg
pusha
and
outs
sbb
mov
aam
mov
push
pop
cs
in
dec
lock
sub
cmp
out
stos
mov
mov
mov
inc
xchg
xchg
inc
jmp
mov
movs
add
jle
adc
addr16
arpl
jnp
dec
repz
jmp
or
(bad)
inc
loopne
add
dec
add
fistp
scas
stos
iret
(bad)
mov
loop
fcmovnb
push
dec
repz
xor
xchg
sbb
jp
inc
jl
pop
int3
sbb
js
mov
addr16
xchg
mov
jg
clc
cmp
fbstp
adc
shl
aam
icebp
out
frstor
in
and
mov
ds
jno
aad
int
jbe
jl
mov
addr16
xor
mov
cmp
push
(bad)
shl
mov
pop
xchg
or
rcl
dec
mov
ds
cmp
mov
jmp
(bad)
mov
fdivrp
cmc
and
and
dec
imul
stos
dec
pop
icebp
ret
add
dec
or
or
dec
pop
pop
aaa
pop
xchg
pop
pop
test
cli
mov
mov
fst
(bad)
out
xlat
call
and
adc
cwde
fisub
call
mov
gs
dec
push
add
push
out
mov
stos
adc
nop
push
mov
test
enter
hlt
jae
push
fstp
sbb
int
mov
test
inc
pop
ins
into
xchg
inc
fldcw
rol
ds
rcr
clc
out
or
add
mov
lods
dec
inc
jmp
push
adc
aam
pop
sbb
mov
call
cmp
fcomp
mul
das
stc
je
lds
scas
cld
js
addr16
dec
push
adc
out
inc
fsubr
pop
(bad)
sbb
loopne
stc
les
jbe
adc
adc
pop
jns
repnz
imul
(bad)
ja
int3
aad
mov
ret
mov
adc
mov
sbb
cli
xchg
inc
test
fnstsw
aaa
imul
mov
jmp
jo
pop
clc
dec
adc
shr
mov
sbb
cli
sub
shl
add
lds
sub
add
cmp
not
push
or
sub
push
jp
ds
pushf
(bad)
(bad)
(bad)
sbb
ret
fsub
movs
mov
pop
mov
pop
push
fdiv
xchg
pop
push
test
mov
adc
pop
movs
sbb
ds
leave
adc
adc
clc
es
jae
cs
cmp
pop
mov
jbe
out
sub
push
imul
push
mov
aad
adc
in
push
pop
pmulhw
pop
(bad)
cmp
inc
push
mov
xchg
and
div
xchg
jge
pop
xchg
gs
mov
sub
js
push
inc
cmp
call
or
jge
xor
lods
mov
push
pop
push
mov
dec
(bad)
or
jmp
xor
push
xchg
pop
and
add
dec
jl
bound
addr16
test
sbb
jl
push
push
mov
mov
sub
xor
mov
cmps
and
mov
sahf
cld
(bad)
repnz
xchg
sti
jle
sub
sbb
(bad)
cld
and
mov
mov
dec
mov
mov
mov
lea
xor
aas
shl
popf
into
add
(bad)
fistp
mov
mov
xchg
out
or
cli
out
sar
mov
xchg
sbb
ins
xchg
hlt
pop
fs
adc
daa
aaa
ss
cdq
dec
xchg
(bad)
into
enter
outs
loopne
and
cdq
pop
cmp
xchg
jmp
repnz
fiadd
mov
pop
push
popf
mov
cmps
push
hlt
into
mov
pushf
loopne
mov
dec
fistp
shr
jb
leave
inc
and
(bad)
shl
cld
xor
(bad)
xchg
adc
xor
lock
cmc
sub
jns
(bad)
clc
sbb
in
int3
mov
push
pop
int
jmp
xchg
in
cmps
addr16
fdivr
cmp
dec
loop
mov
out
cmp
imul
mov
xor
test
jmp
sub
mov
cmp
cmp
retf
(bad)
jp
and
push
fmul
in
push
mov
adc
jmp
aad
repz
rol
fstp
sbb
jnp
xor
or
(bad)
data16
mov
aad
and
jo
imul
js
mov
jmp
and
std
mov
lahf
ret
pop
push
mov
jo
mov
mov
in
rol
pop
call
(bad)
shl
add
cmp
ins
adc
fldcw
mov
rol
imul
ins
jl
mov
adc
scas
shl
jmp
jno
shl
(bad)
jmp
(bad)
push
mov
fidiv
cmc
jb
inc
test
outs
pushf
jns
fwait
xchg
test
imul
cli
in
sub
fwait
push
call
cwde
pop
dec
(bad)
fcom
mov
ret
push
int
push
and
sbb
add
xor
enter
test
adc
js
adc
(bad)
push
and
jecxz
xchg
xchg
push
or
ds
push
cmp
add
test
adc
mov
out
lds
cmp
in
xchg
push
ins
or
sub
pop
test
popa
ds
xlat
not
test
push
stos
or
mov
mov
or
or
fisubr
cmp
mov
dec
add
mov
jae
je
adc
mov
call
dec
lods
push
or
add
adc
xchg
sahf
xor
push
jae
(bad)
xchg
xor
xchg
mov
or
loope
ret
aam
lea
inc
mov
pop
(bad)
cs
sti
pop
cmp
pop
ret
adc
xor
pop
imul
mov
es
jmp
stos
pusha
add
fidivr
sbb
retf
inc
jl
sub
int3
cwde
bound
push
cmp
pusha
jns
add
sbb
add
and
add
push
push
(bad)
loopne
sub
loope
clc
(bad)
mov
and
xor
xor
aad
and
xchg
xchg
add
mov
fxch
sub
push
jmp
jge
dec
mov
push
inc
jae
pop
push
and
mov
and
jmp
mov
aad
and
push
xor
mov
or
sbb
sar
aad
loop
mov
mov
fwait
sub
sub
in
inc
and
or
sub
xchg
cdq
(bad)
out
icebp
dec
(bad)
sbb
cdq
fcmovbe
mov
xchg
lods
xchg
dec
xchg
imul
sbb
(bad)
int
cdq
fld
jnp
imul
cmps
(bad)
std
xor
sub
inc
mov
jae
inc
pop
into
sar
retf
add
sti
mov
test
ins
mov
xlat
aaa
out
pop
mov
adc
and
and
fs
imul
cs
mov
cwde
aas
(bad)
mov
pushf
in
cmp
cmc
cmp
mov
sub
dec
ds
inc
mov
push
aas
std
aad
inc
push
pop
mov
push
sahf
icebp
mov
inc
hlt
add
mov
js
mov
fwait
xor
das
jp
sti
iret
sbb
or
aaa
ins
xor
jbe
(bad)
adc
xor
cmp
into
mov
inc
pop
mov
jae
fsubr
sti
mov
addr16
mov
mov
xchg
fsub
xchg
(bad)
push
sub
std
imul
fst
cld
dec
or
mov
mul
je
jbe
lds
jge
and
sub
mov
ja
push
mov
mov
mov
dec
jp
mov
leave
cs
mov
sub
test
push
push
xchg
sub
pop
xchg
jmp
jno
lods
mov
inc
ins
push
sub
fisttp
popa
mov
pusha
jle
pop
retf
adc
mov
test
dec
xor
dec
or
lods
or
outs
jecxz
xchg
sub
into
pop
cdq
retf
retf
push
push
mov
add
adc
sub
lds
mov
mov
add
push
mov
xchg
int3
xchg
xor
mul
jb
dec
gs
adc
mov
pop
movs
outs
fnstenv
int
(bad)
jp
xchg
pop
stos
mov
pop
xchg
les
in
pop
imul
mov
movs
movs
pushf
jg
fcmovb
(bad)
arpl
xor
lea
sub
into
xchg
dec
dec
adc
add
push
push
clc
xchg
inc
and
mov
aam
cwde
pop
pop
out
xchg
leave
jecxz
gs
mov
sar
cdq
stos
or
aaa
jb
bound
push
outs
xchg
sbb
cmp
cmp
pop
xor
xchg
lods
xchg
mov
dec
cdq
jb
in
sbb
or
(bad)
movs
(bad)
adc
jp
loop
dec
dec
cmp
imul
cmc
test
mov
pop
je
pusha
push
dec
inc
in
je
or
fild
xchg
sar
pusha
out
sub
call
adc
pop
push
repnz
aam
mov
xor
je
std
xor
into
in
add
sbb
div
jnp
push
hlt
in
xchg
xor
and
pop
stos
pop
mov
or
retf
test
inc
sti
fs
(bad)
inc
mov
movs
jb
pop
mov
dec
push
or
adc
mov
dec
or
mov
push
es
jl
or
mov
test
or
retf
sub
cmp
sbb
push
xchg
inc
retf
(bad)
shr
dec
rol
lahf
movs
xchg
mov
jp
adc
into
xchg
mov
adc
icebp
outs
movs
adc
out
sub
je
sub
cs
add
sbb
xor
add
idiv
pop
add
dec
sti
fwait
dec
lea
aas
out
add
out
xor
pop
xchg
(bad)
pop
cwde
or
lock
push
fld
mov
imul
gs
ret
adc
cmove
xchg
popa
imul
mov
or
push
sar
out
ins
call
nop
aad
shr
pop
pop
dec
add
add
pop
mov
cmp
pop
adc
mov
xor
mov
jmp
test
mov
sbb
mov
dec
popf
data16
sub
pop
clc
sbb
lods
rcl
cs
loope
push
mov
ja
outs
out
sahf
jno
arpl
cmp
jle
jmp
adc
jnp
dec
lock
fdivr
jne
inc
lds
jae
and
loopne
out
inc
fnstsw
pop
lahf
pop
pusha
add
mov
jl
call
and
xchg
loope
mov
hlt
jo
out
sbb
mov
xchg
retf
iret
push
pop
mov
popf
popa
mov
or
adc
cmps
loopne
aas
int3
lahf
test
cmps
dec
push
ss
pop
or
mov
cmp
addr16
add
adc
jecxz
cmp
cmp
jbe
mov
mov
mov
movs
jb
and
or
jne
mov
jae
das
in
imul
enter
add
mov
inc
mov
mov
inc
adc
imul
clc
add
call
jp
and
cmovs
mov
lods
outs
movs
or
sbb
xor
cs
cdq
fwait
ins
cs
push
int3
inc
(bad)
repz
and
cmp
sbb
mov
cli
pop
cmp
and
stc
mov
xor
cmps
push
or
cli
jp
mov
adc
lds
mov
inc
lods
pushf
jecxz
mov
mov
jb
and
and
fiadd
mul
loope
push
mov
les
test
ss
leave
jb
or
addr16
ss
mov
cld
push
adc
fldcw
test
mov
stos
push
xchg
or
mov
push
and
dec
shl
cwde
std
inc
popa
pop
arpl
stc
xchg
dec
gs
popf
sub
xchg
fcom
fnstenv
(bad)
js
cmp
fisub
cmp
jl
repz
dec
push
mov
lods
sar
adc
pop
ins
daa
dec
jecxz
(bad)
cmp
cmp
aam
xchg
pop
mov
jmp
loopne
(bad)
lahf
xor
push
(bad)
pop
push
pushf
fld
xor
dec
sub
mov
jmp
push
out
add
cld
ins
push
cmp
xor
mov
jb
and
out
xlat
cmc
and
ja
repnz
addr16
test
and
inc
iret
xor
imul
xchg
ror
jne
inc
ds
ins
and
cmp
mov
mov
or
or
int3
adc
push
pusha
sahf
add
mov
call
(bad)
sub
rcl
xchg
sbb
aad
test
xor
adc
pop
dec
and
push
push
add
fnstsw
retf
add
shl
clc
push
pop
cdq
and
pop
loope
pop
dec
std
pop
daa
fisttp
pushf
popa
scas
rcl
adc
(bad)
pop
add
fwait
push
(bad)
pop
pop
xlat
or
popf
sub
leave
pop
shr
stos
test
add
(bad)
std
add
mov
push
ret
fdivr
ret
int3
div
imul
out
mov
pop
test
mov
and
out
mov
dec
aas
and
pop
mov
mov
fucomp
sub
or
fnstsw
inc
pusha
in
mov
call
std
(bad)
mov
jl
jmp
xchg
inc
push
adc
dec
mov
add
mov
mov
(bad)
adc
sbb
cmp
sar
in
out
repz
xor
call
loope
sub
push
lahf
xchg
mov
xor
xor
ret
cwde
mov
retf
mov
mov
fcmovu
jecxz
xor
xlat
mov
fsubr
lds
cld
mov
mov
cld
jmp
push
mov
fst
jb
dec
push
dec
pop
adc
addr16
sbb
sub
sbb
mov
mov
sub
popf
(bad)
imul
jo
test
imul
ins
lahf
imul
pandn
ret
fistp
xor
adc
aaa
mov
mov
sub
int
jns
loopne
(bad)
jne
mov
push
aad
movs
add
addr16
push
pmulhw
inc
pop
xchg
imul
xor
inc
mov
ins
xchg
sub
test
or
test
fs
inc
jmp
ins
scas
lock
popa
xchg
outs
or
xchg
sub
add
std
xchg
inc
jge
dec
scas
jno
sub
mov
cmp
leave
aaa
mov
ins
dec
dec
adc
idiv
add
aas
dec
mov
loop
lods
sbb
xchg
test
mov
pushf
sub
sti
inc
push
sub
dec
fsubr
sbb
das
inc
fistp
jae
mov
cli
inc
adc
mov
adc
aaa
sub
test
jns
rcl
xchg
ins
and
imul
arpl
je
repnz
arpl
xor
jge
mov
aas
push
pop
repz
fsub
popa
inc
cli
shl
jp
jnp
arpl
sbb
outs
scas
mov
repz
sti
xor
sbb
jne
cmps
retf
pop
scas
pop
fst
xchg
and
push
in
mov
sbb
test
cmp
cmp
retf
loopne
xor
fld
sar
pop
jo
sar
retf
adc
jbe
outs
out
mov
ds
stc
popf
pop
sub
pusha
lods
fild
pushw
call
lods
add
dec
cmp
push
scas
push
bound
xchg
push
and
jne
aad
pop
inc
mov
jge
mov
mov
xor
mov
movs
fistp
hlt
xor
loopne
dec
js
mov
adc
das
pop
aaa
neg
dec
scas
mov
mul
rcl
sahf
mov
mov
sar
add
shl
rcr
mov
pop
std
and
mov
xchg
stos
scas
and
pop
push
pop
xchg
push
or
das
sbb
aas
cld
(bad)
test
bnd
es
pop
test
sub
imul
pop
push
mov
pop
fstp
aas
out
mov
sub
mov
mov
adc
scas
sub
out
cdq
push
fsub
pop
mov
cmps
movs
shr
sub
mov
(bad)
aam
push
(bad)
mov
in
push
fisubr
inc
in
jbe
xchg
inc
add
add
fiadd
add
into
xor
dec
stos
retf
int
sub
pop
add
fmul
adc
push
repz
pop
pop
jns
loope
gs
mov
pop
ja
push
mov
outs
jbe
test
sar
mov
mov
adc
imul
aam
ret
out
mov
sbb
adc
pop
mul
lea
or
lock
mov
cli
in
outs
cwde
js
leave
pop
pop
js
xchg
aas
and
sbb
xchg
enter
jge
sbb
ss
shl
test
push
mov
into
xor
xor
cmps
(bad)
fsub
pop
and
popf
cmps
int
aaa
pop
jp
dec
jbe
xchg
mov
xor
cli
in
mov
popa
pop
iret
pushf
push
test
pushf
pop
xor
cli
xor
cmp
add
jnp
xor
(bad)
mov
cmps
aad
les
add
ins
fstp
aas
sahf
pop
arpl
cmps
jb
jge
mov
into
jnp
int
pop
jb
pop
out
in
loope
cmps
ret
int
jb
jmp
jmp
mov
out
out
mov
push
pop
mov
ins
cli
(bad)
popa
fs
sbb
jecxz
das
(bad)
add
xchg
scas
arpl
data16
cmp
inc
xchg
pop
push
test
outs
adc
adc
arpl
rcr
xor
jl
add
adc
xor
mov
aaa
(bad)
std
add
lds
pop
add
pop
fiadd
dec
sar
(bad)
rcr
and
fild
dec
je
jecxz
lods
aas
(bad)
pop
mov
test
outs
stos
mov
cdq
add
loop
xchg
test
jl
pop
in
xor
(bad)
cmp
cs
add
bound
pop
fwait
gs
bound
inc
push
ret
cmp
retf
call
add
mov
jns
xor
(bad)
or
fwait
cmps
test
sbb
push
mov
sbb
sub
adc
sti
mov
sub
add
cwde
jns
mov
cmp
ror
cmp
adc
das
rol
cmc
nop
test
mov
sub
or
cwde
xor
sub
icebp
jle
ffreep
lods
push
pop
add
in
xchg
mov
sahf
fdiv
call
sbb
xor
mov
dec
xor
daa
pop
and
retf
mul
push
xchg
mov
or
cmp
shl
mov
xchg
jb
fsub
xchg
repz
mov
adc
call
movs
stos
cmps
test
into
lahf
aas
jnp
mov
mov
outs
retf
mov
cmp
adc
iret
xchg
sbb
sbb
inc
test
dec
jl
mov
bound
neg
icebp
fidivr
mov
add
push
hlt
cdq
fnstcw
aas
into
cmp
fsubr
(bad)
sub
(bad)
inc
ss
out
cmp
out
and
mov
adc
push
mov
mov
push
fisttp
sbb
or
push
or
stos
mov
mov
stos
pop
int
mov
arpl
(bad)
int
adc
xor
out
test
jmp
mov
cmps
arpl
xor
aam
add
pop
adc
sbb
inc
lods
sub
sbb
mov
jmp
and
call
jb
pop
ret
out
xor
and
loopne
pushf
mov
or
repz
sub
adc
and
fwait
mov
dec
or
inc
adc
enter
lods
sar
data16
addr16
push
test
jnp
test
clc
sbb
mov
imul
dec
add
adc
jae
loop
dec
lock
in
cmp
enter
icebp
test
in
stos
in
loope
daa
and
push
cs
les
inc
aam
push
push
cmc
loop
pop
iret
(bad)
fsub
scas
and
loope
out
xchg
test
retf
dec
nop
push
rol
inc
mov
cmp
inc
ret
fs
daa
inc
cs
jmp
pop
fidiv
xchg
xchg
iret
cli
(bad)
pop
dec
imul
xchg
call
nop
pusha
pop
cmp
jnp
jecxz
sbb
(bad)
and
sbb
adc
int
sub
xor
pusha
add
push
jecxz
clc
push
pushf
dec
fcom
xor
inc
ins
sub
jae
and
shl
cmp
(bad)
xchg
mov
xlat
jmp
pop
mov
in
je
xor
cmc
and
jmp
or
test
scas
or
movs
jnp
cmps
cmp
mov
ret
(bad)
sbb
(bad)
push
add
xchg
add
into
add
lds
or
lea
std
mov
ds
push
add
(bad)
(bad)
or
bnd
and
inc
push
pop
add
add
add
cmp
xor
cld
push
add
in
jo
mov
lods
add
mov
pop
xor
(bad)
adc
xor
sbb
aas
test
clc
mov
add
(bad)
into
cmp
mov
mov
pop
fs
mov
fisttp
dec
(bad)
inc
cmp
mov
(bad)
pushf
jle
mov
dec
mov
fild
xlat
and
rol
mov
popf
addr16
and
lods
push
dec
pop
mov
adc
mov
xchg
bound
into
jmp
sbb
xlat
push
lea
rcl
repnz
(bad)
call
ret
outs
ins
and
jmp
pop
test
loop
push
xchg
pop
rcl
mov
jnp
jge
out
pop
dec
(bad)
dec
mov
lods
stos
in
mov
mov
or
icebp
mov
mov
push
push
mov
mov
sbb
jns
and
clc
ss
mov
inc
(bad)
lea
xchg
in
out
jns
sbb
ins
mov
arpl
jne
mov
adc
and
movs
(bad)
jnp
arpl
imul
sar
pop
mov
test
cmps
outs
jg
mov
or
sub
es
or
or
daa
retf
cmp
outs
je
scas
and
dec
retf
or
lahf
ficomp
jge
cmps
dec
xchg
in
in
or
xchg
dec
jns
call
inc
jne
xchg
movs
mov
mov
je
sub
push
cld
and
retf
mov
cmps
ja
into
je
clc
adc
inc
in
sub
lahf
push
xor
jl
mov
dec
adc
xor
ins
mov
adc
cld
xor
sbb
retf
fistp
pop
retf
outs
inc
cmc
cmp
mov
addr16
mov
mul
add
pop
jne
int
push
mov
sub
jb
adc
inc
inc
jne
jmp
cli
js
push
jecxz
mov
cmp
xor
in
mov
je
xor
call
mov
xchg
mov
sti
jno
shl
mov
push
mov
mov
fild
inc
int3
outs
mov
test
mov
seto
xor
inc
cmp
(bad)
fsub
mov
ds
inc
ds
mov
cli
push
sbb
lahf
fnstenv
arpl
adc
xchg
ror
test
or
sar
hlt
mov
pop
push
retf
imul
ficomp
jge
jle
test
fs
mov
adc
call
aam
cmp
and
jne
outs
mov
or
int3
rol
inc
ins
or
hlt
fnstenv
mov
rol
addr16
pop
rol
gs
mov
mov
or
test
inc
les
inc
and
int
setg
retf
cwde
mov
imul
mov
repz
jmp
push
adc
xor
sbb
push
and
xlat
test
xchg
cmps
les
cmc
enter
mov
sub
push
mov
shl
dec
ins
jne
outs
mov
xchg
shr
or
je
loop
aad
dec
cmp
shl
xchg
adc
cs
dec
jns
aaa
icebp
mov
cwde
mov
push
stos
adc
or
ret
mov
sub
add
cld
pop
repz
(bad)
dec
inc
hlt
adc
gs
sub
in
jnp
das
or
sub
aaa
mov
scas
cmp
scas
pushfw
sbb
add
imul
ins
push
cmp
xor
rcl
or
cmp
sub
lods
mov
or
dec
sub
push
test
add
adc
pop
dec
test
mov
sbb
std
fistp
jg
ret
leave
xchg
xchg
sub
inc
cmp
and
xchg
jne
xor
div
pop
test
not
int
fsin
adc
adc
mov
pushf
out
ss
mov
xchg
mov
retf
jmp
push
push
jle
fld
cmp
xchg
ror
jmp
pop
fnstcw
fs
outs
adc
sar
test
clc
cwde
push
fdivr
les
xchg
pop
jecxz
test
ret
js
in
lods
in
xchg
cmp
xchg
lock
sub
dec
mov
sub
ficom
(bad)
into
pop
push
int3
inc
cmp
or
mov
test
outs
bts
out
pop
lds
mov
out
ret
xor
inc
sbb
xor
fcom
jb
into
repnz
xchg
xor
in
or
mov
mov
mov
aam
inc
out
dec
popf
sbb
or
loop
pop
nop
dec
and
cmp
jecxz
xor
add
cmp
aas
gs
pop
enter
gs
push
lds
imul
jle
dec
out
mov
push
iret
call
movs
loop
arpl
cs
mov
dec
mov
adc
aaa
push
and
(bad)
cs
enter
fisttp
cmp
pop
out
pop
inc
les
inc
ret
movs
push
jo
ins
jb
push
fdiv
out
pop
pop
loop
push
fs
xor
iret
(bad)
ins
or
jo
add
push
ja
jo
xchg
mov
xchg
push
fistp
sti
cmp
das
sub
dec
call
je
out
(bad)
adc
mov
fnstsw
inc
mov
inc
(bad)
cwde
cld
sub
(bad)
pop
test
or
xlat
fistp
sub
pop
jo
dec
gs
push
das
jbe
not
and
lock
add
xchg
add
ror
adc
nop
cwde
cdq
pop
retf
stc
xor
test
test
add
cli
dec
mov
pop
pop
or
pushf
imul
cwde
and
stos
out
xchg
inc
sbb
add
adc
pop
arpl
ja
stc
dec
and
jns
lahf
jmp
xor
mov
dec
inc
dec
cmp
inc
mov
dec
mov
hlt
adc
loope
pop
mov
mov
xchg
inc
sahf
push
ins
mov
jno
inc
fdivr
aas
stos
pushf
dec
imul
popa
cdq
mov
es
sub
jle
mov
mov
je
or
repz
inc
dec
dec
jb
rcr
(bad)
cmps
push
pop
ins
out
lods
addr16
pop
loop
ror
(bad)
push
mov
outs
adc
int3
sbb
test
in
mov
mov
out
xor
(bad)
pop
and
mov
xor
movs
mov
pop
push
add
pop
cmp
adc
retf
dec
and
mov
(bad)
lods
and
xor
clc
cmc
xchg
pop
lods
dec
xor
cmps
cmp
test
dec
icebp
sub
jno
out
fdivr
or
mov
in
mov
add
or
imul
or
mov
mov
out
xor
mov
mov
jmp
mov
jmp
xchg
xchg
adc
xchg
aaa
pop
clc
inc
xor
fiadd
add
mov
pusha
movs
scas
dec
sbb
(bad)
sub
not
inc
bound
in
xchg
test
nop
and
mov
pusha
sbb
icebp
sbb
ja
pop
dec
sub
stos
sbb
fst
jns
repnz
popf
shl
ja
and
jnp
clc
(bad)
jl
and
imul
mov
pop
sar
cmp
retf
xor
or
xchg
leave
push
popf
out
and
pop
imul
mov
jle
mov
jae
mov
cmp
ror
xor
popf
aas
xchg
mov
mov
call
inc
xchg
xchg
rcr
pop
mov
lods
mov
xor
and
mov
inc
cdq
popa
test
addr16
test
or
aaa
movs
xchg
jg
jecxz
imul
into
sub
add
adc
mov
add
std
mov
and
clc
mov
push
lods
xchg
(bad)
dec
nop
jg
cli
retf
lods
in
shr
repz
sbb
ds
nop
retf
retf
push
xor
cmp
std
pop
or
out
hlt
scas
lods
in
xor
mov
cwde
cli
cmps
adc
lods
cmp
mov
in
jne
mov
inc
retf
ss
mov
add
inc
add
xlat
(bad)
stc
clc
loop
dec
sub
hlt
les
xor
push
add
sbb
or
cld
xlat
int
stos
xchg
push
and
pop
pop
pop
loopne
add
adc
push
int3
pop
sub
daa
jmp
rol
mov
add
jp
loopne
mov
jmp
jl
pop
or
jge
mov
push
aam
cdq
or
outs
inc
push
sbb
xor
cmp
fisubr
into
mov
jbe
mov
mov
leave
icebp
inc
jmp
mov
pop
(bad)
cmps
cmps
jmp
mov
out
popf
jle
inc
das
cdq
xor
fdivr
mov
xor
icebp
or
int3
out
push
lds
dec
fnstcw
mov
cmp
(bad)
clc
test
adc
pushf
int3
inc
int3
in
and
mov
out
loop
test
test
in
sbb
sahf
pop
mov
data16
ret
and
xchg
in
mov
in
mov
pop
fidiv
pop
xchg
mov
and
cmp
outs
jg
sbb
add
mov
jmp
pop
or
xchg
ds
jae
or
dec
mov
adc
or
dec
les
adc
sub
mov
jp
add
push
repz
cmps
scas
out
pop
(bad)
aad
or
jle
(bad)
jb
jne
pop
dec
bound
add
cmp
sbb
xchg
xchg
pop
inc
fwait
sbb
loope
aad
pop
sub
jnp
call
jbe
into
push
push
mov
sbb
jmp
pop
push
fdiv
out
shl
dec
push
cld
movs
daa
clc
hlt
loop
dec
fimul
das
scas
test
sbb
cmp
(bad)
pop
shr
sbb
push
mov
movs
clc
jo
xor
add
push
arpl
cmp
or
popa
inc
xchg
dec
sbb
xor
mov
xor
aad
movs
mov
pop
sti
es
loopne
cld
daa
inc
add
stc
(bad)
cmp
ret
arpl
sbb
psubusw
std
mov
loope
ds
jns
push
dec
and
js
sub
push
adc
dec
sbb
push
adc
push
lds
push
jns
lock
add
cmp
sub
retf
hlt
ss
xor
jns
jl
mov
in
xor
call
stos
movs
fcomi
aas
pusha
imul
ss
aam
add
std
sub
fstp
xor
es
jl
add
in
leave
pop
xor
fcmovbe
add
ins
add
fwait
jge
test
add
mov
pop
jl
mov
stos
push
fcom
fst
imul
rol
xlat
xor
lods
or
cmp
es
jbe
mov
mov
sub
or
mov
test
leave
jp
mov
int3
mov
push
leave
and
jmp
fnstcw
fdiv
cmps
sahf
cmc
pop
or
dec
jl
cdq
adc
dec
xchg
mov
fnstenv
cmp
cmp
loopne
cs
cmp
les
lock
out
mov
xchg
jno
stos
sti
pop
test
pop
xor
fsubr
xchg
xor
scas
out
mov
mov
movs
(bad)
mov
sbb
push
push
ins
inc
pop
loop
cmp
outs
sbb
pop
cld
mov
mov
pop
and
repnz
mov
div
movs
pop
inc
int
jnp
push
push
sub
add
mov
adc
sti
xchg
daa
in
les
xor
push
xor
icebp
in
cs
and
aam
xchg
lea
push
push
inc
int
jge
push
loope
inc
(bad)
jmp
dec
adc
das
ins
ds
mov
div
mov
stc
cli
cs
out
lods
xchg
jle
sbb
ret
repnz
js
inc
jmp
(bad)
ja
cld
(bad)
in
ret
cmp
and
fst
or
xor
cli
cmp
xchg
popa
(bad)
std
fld
jmp
aam
lock
cmp
cdq
or
retf
je
test
mov
cmc
hlt
hlt
and
stos
jae
or
pop
or
inc
sbb
or
add
scas
in
wrmsr
ds
jg
retf
je
jle
hlt
pop
mov
mov
pop
(bad)
imul
xor
xor
imul
int3
xchg
nop
mov
fstp
(bad)
dec
fwait
mov
movs
xchg
std
hlt
pop
rcr
sub
and
pop
jo
or
scas
repnz
fwait
test
aas
cmc
je
stc
ret
popf
jbe
push
xor
clc
sbb
inc
inc
push
out
jne
icebp
pop
cmp
inc
ds
mov
adc
push
jmp
ins
lock
jmp
pop
nop
jmp
cdq
and
jb
popa
and
pop
mov
cmc
mov
cdq
call
mov
and
aas
retf
jnp
or
sub
xchg
cmc
icebp
mov
iret
mov
add
xor
or
out
push
inc
fisttp
arpl
(bad)
push
sub
(bad)
and
loope
cmps
frstor
hlt
dec
sti
or
mov
cwde
adc
xlat
cmovb
gs
(bad)
retf
push
inc
pop
sbb
stos
xor
ins
pop
mov
sbb
dec
(bad)
je
add
xor
jnp
mov
(bad)
dec
nop
cld
xor
stos
xlat
push
mov
fsubr
jp
mov
cld
outs
shl
stos
jbe
cwde
(bad)
xchg
sbb
push
jmp
mov
and
jns
push
aam
fidivr
ds
jg
and
sbb
dec
mov
stos
mov
ds
mov
loop
jo
es
jp
jmp
aam
cwde
fcmovne
mov
scas
pop
mov
lahf
loop
out
ins
sbb
test
and
hlt
jne
cmp
push
in
jge
ret
mov
cmps
enter
xor
push
sbb
movs
in
push
cmp
repnz
mov
(bad)
cmp
jge
mov
sbb
sbb
mov
and
je
cdq
xlat
mov
adc
inc
movs
shl
fld
xchg
(bad)
(bad)
ficomp
adc
cmp
test
mov
jmp
pop
retf
mov
fst
xchg
pop
dec
inc
cmp
and
test
push
(bad)
mov
sar
fdivrp
adc
push
das
lods
inc
pop
dec
aam
sar
lahf
mov
add
dec
sub
push
jmp
outs
outs
int
jns
(bad)
adc
adc
and
dec
call
les
mov
add
inc
sar
and
repz
(bad)
jmp
fcmovnb
fwait
add
jp
bound
mov
add
sbb
xor
xchg
imul
js
and
dec
xor
jae
(bad)
(bad)
jmp
xchg
xchg
int
adc
mov
jo
jg
out
cmps
mov
xor
sub
pop
add
push
jbe
fstp
mov
xchg
push
mov
mov
movs
ss
xchg
ret
mov
in
xor
pop
adc
or
mov
(bad)
dec
shl
cmp
adc
rep
xlat
mov
mov
and
pop
dec
mov
das
xchg
inc
or
add
das
les
and
rcr
std
ins
add
pop
adc
inc
adc
dec
mov
xchg
jle
rol
add
inc
push
mov
sub
out
mov
rcr
push
fild
sbb
test
or
jecxz
adc
ja
sbb
ret
loop
adc
and
sti
clc
mov
and
aam
cdq
in
jno
push
mov
test
int3
dec
sub
jae
jb
push
xchg
mov
inc
jl
jge
cmc
jl
add
sbb
pop
mov
adc
sti
pop
sbb
aas
adc
dec
and
add
pop
mov
mov
dec
jp
inc
or
aaa
sbb
add
stc
lsl
neg
pop
scas
es
adc
adc
inc
popf
ins
(bad)
adc
aas
scas
jmp
pop
es
mov
clc
and
fwait
inc
stc
std
ins
sbb
inc
jns
push
mov
test
push
and
or
add
add
hlt
jge
inc
xor
or
mov
ror
push
sub
enter
jmp
shl
enter
dec
(bad)
test
push
xor
push
push
sub
cwde
clc
aam
push
add
in
mov
stc
retf
or
hlt
add
and
push
fistp
es
inc
mov
inc
mov
sbb
add
and
(bad)
pop
jg
out
mov
nop
and
sub
idiv
push
jbe
out
mov
imul
jmp
mov
mov
scas
sbb
(bad)
and
jmp
jle
gs
leave
and
add
repz
jmp
push
jecxz
popa
out
shr
rol
cdq
push
jmp
jl
retf
dec
xchg
aad
adc
dec
aas
add
mov
jle
ds
sbb
leave
aaa
fldcw
push
cli
and
mov
test
add
les
dec
gs
xchg
or
sahf
xor
cmp
or
pop
sbb
ss
cmps
mov
pop
inc
retf
mov
mov
add
int3
ja
imul
sub
inc
in
add
ins
test
lock
inc
xor
mov
jle
mov
jo
outs
sbb
xor
push
repz
aaa
(bad)
cmp
jnp
ret
mov
and
or
dec
pop
fst
xchg
lahf
into
je
mov
lahf
xor
std
inc
int
ret
xor
fnstcw
cwde
mov
es
mov
rcr
add
fwait
mov
mov
sbb
rcr
xchg
sub
aas
mov
lds
cmp
loop
inc
cdq
adc
inc
into
data16
push
and
into
rol
ins
fidiv
jns
sbb
out
mov
call
(bad)
xor
enter
repnz
outs
xchg
in
mov
cmps
jl
retf
mov
cdq
dec
imul
clc
mov
xchg
xor
sub
cmp
xchg
sbb
clc
dec
cmps
pop
(bad)
sar
fs
mov
add
imul
xor
push
mov
lds
jg
pusha
xlat
ins
mov
jns
lods
test
sub
mov
sahf
adc
mov
cmp
xchg
inc
adc
(bad)
data16
mov
jo
pop
push
rcpps
dec
adc
xor
mov
ins
sub
test
pushf
pop
repnz
popa
jb
push
sti
pop
sub
jecxz
jns
xchg
fldenv
xchg
xor
jge
mov
stos
push
mov
outs
inc
push
nop
xchg
enter
xor
xor
sbb
xchg
ret
mov
jne
sub
stc
in
fcomp
ins
fdivrp
xchg
cwde
popf
test
inc
xchg
popf
and
rcr
stc
add
jnp
mov
stos
out
fwait
jmp
in
mov
fldcw
into
xor
inc
pop
lds
push
imul
cmp
jns
sub
das
(bad)
leave
add
jbe
pop
push
add
xor
or
aam
stos
pop
xchg
repz
push
jp
pop
xchg
shrd
push
(bad)
stos
inc
inc
and
ds
ror
test
sahf
pop
fild
sub
cli
retf
and
jne
add
popf
fisttp
cmps
sub
les
pop
pushf
xchg
imul
stos
movs
push
jno
and
xor
inc
cs
mov
fwait
cmc
aas
xchg
shr
mov
xchg
jle
jmp
xlat
sti
icebp
push
scas
cmp
arpl
mov
int
sbb
sub
jecxz
mov
sub
sbb
int3
xchg
sub
push
cdq
jl
(bad)
push
jp
mov
repnz
outs
fist
pop
sub
call
pop
mov
push
xchg
xchg
movs
daa
movs
cmps
ins
bound
pusha
sub
ficom
mov
lahf
xchg
lods
jae
add
js
aaa
rcr
or
adc
cmp
sbb
enter
outs
daa
mov
mov
js
adc
lock
cmp
mov
sbb
pop
dec
loope
dec
(bad)
leave
pop
mov
test
push
es
call
push
in
in
int3
and
mov
sbb
and
inc
inc
or
cmc
fdivr
push
inc
pop
mov
push
dec
and
mov
mov
lods
add
xchg
sar
push
sti
xchg
cmp
cmp
inc
inc
pop
ror
jg
xchg
in
leave
outs
jmp
out
ds
in
push
ins
xchg
pop
push
cmp
sub
nop
add
jae
repnz
inc
enter
dec
dec
pop
xor
into
mov
aaa
stc
push
popf
outs
mov
mov
test
xlat
dec
repz
mul
xor
loopne
xor
cmc
mov
cmps
std
mov
adc
in
pusha
adc
xlat
call
dec
sbb
shl
adc
shr
mov
push
mov
je
jg
mov
out
daa
mov
or
dec
cmp
sub
jbe
add
cld
sub
imul
test
or
jle
mov
jmp
aaa
xchg
ins
sbb
scas
cmp
xchg
jmp
pop
push
cmps
out
mov
nop
inc
jecxz
or
xor
ins
cmp
fstp
mov
sbb
aad
dec
aas
mov
(bad)
push
and
push
sbb
fistp
cmp
pop
pop
mov
sub
inc
jnp
mov
popa
adc
mov
lock
jne
and
pop
and
pop
inc
out
lock
and
xchg
gs
pop
test
inc
arpl
cmp
stc
std
cmp
inc
mov
sub
ror
ror
cmp
or
adc
and
cmp
push
shr
add
mov
test
mov
hlt
cmp
call
mov
fwait
dec
adc
sahf
sbb
add
add
mov
jp
jecxz
xchg
scas
shl
jmp
data16
sar
cs
inc
jae
test
and
and
lods
(bad)
cmc
pop
dec
push
xor
int3
dec
xor
stos
xchg
(bad)
shl
fdiv
sbb
cmps
xchg
pop
adc
jmp
jge
(bad)
rcl
in
xchg
(bad)
test
out
(bad)
in
jbe
in
shl
or
push
jecxz
jecxz
mov
in
push
ss
push
dec
ss
(bad)
push
cli
cmp
jl
mov
mov
pop
or
fs
repnz
(bad)
lds
adc
clc
mov
pop
xor
inc
arpl
xlat
(bad)
repz
mov
mov
bound
retf
mov
mov
jne
inc
mov
pop
cld
repnz
pop
(bad)
sbb
xor
adc
fadd
jmp
stc
mov
(bad)
sub
fs
xor
or
pop
dec
(bad)
dec
adc
adc
adc
dec
cs
(bad)
shl
addr16
outs
popa
retf
add
mov
xor
jae
leave
dec
dec
mov
cli
in
jmp
dec
mov
pop
inc
xchg
fstp
jno
outs
rdpmc
mov
push
jae
dec
aas
cmp
sbb
jg
repz
outs
ret
adc
sbb
xchg
mov
int
cmp
xchg
out
cmp
add
hlt
jg
mov
jno
mov
cmp
out
into
shl
sub
sub
add
in
jmp
daa
int3
xchg
je
in
and
ss
add
loopne
fcom
fdiv
imul
xor
aas
sub
les
ins
push
dec
and
jae
lods
cs
mov
sub
(bad)
xchg
cmps
inc
mov
push
inc
cmp
dec
out
inc
repnz
jne
aad
mov
sbb
push
lahf
dec
call
sub
mov
pop
int3
rcr
sub
xchg
and
inc
or
dec
add
sbb
stc
push
js
cmp
add
dec
pop
xor
push
sbb
add
xchg
sahf
jbe
pop
mov
push
out
repz
mov
ror
in
pop
mov
dec
push
jl
mov
outs
xchg
add
dec
mov
cmp
icebp
(bad)
into
int3
clc
push
mov
dec
rcr
arpl
adc
mov
aaa
or
pop
imul
or
mov
call
out
repz
pop
push
xchg
push
xor
les
jbe
mov
mov
push
sahf
mov
outs
shr
sbb
mov
arpl
and
daa
jae
fnsave
popa
lock
inc
jge
xchg
sar
stos
(bad)
cmp
mov
into
ror
adc
daa
mov
test
das
shl
pop
cmp
or
or
bound
pop
pop
sub
xor
gs
jno
add
push
push
inc
and
push
shr
cld
push
out
mov
xchg
add
pop
pop
repz
lock
sub
sti
in
and
je
push
xchg
stos
outs
scas
sub
sbb
lods
jmp
movs
inc
inc
outs
repz
hlt
push
lock
js
push
les
dec
ror
xchg
mov
jo
test
mov
call
sbb
adc
es
stc
mov
int3
jmp
pop
push
(bad)
xchg
mov
icebp
sbb
dec
sbb
hlt
pop
stos
nop
daa
inc
dec
in
adc
dec
inc
shr
fxch
jmp
mov
aas
sub
xchg
inc
addr16
jo
push
movs
cmp
jmp
imul
fnstcw
mov
sub
xchg
mov
sub
call
repnz
retf
pop
mov
cmp
push
push
mov
out
outs
sbb
imul
inc
jae
cmp
pop
mov
pop
movs
jg
pop
in
mov
jb
adc
enter
shl
mov
cdq
inc
push
cdq
js
pop
bound
popa
sti
push
jbe
mov
adc
mov
push
mov
push
test
sbb
pop
inc
in
inc
bound
push
fild
shl
in
scas
test
mov
gs
add
inc
loope
sbb
bound
sub
xor
sar
xchg
leave
daa
inc
adc
outs
push
sbb
jmp
jmp
leave
fwait
xchg
sti
rcl
fiadd
dec
stos
idiv
enter
repnz
xor
dec
out
mov
jl
jne
push
jbe
loopne
cmps
shr
(bad)
or
test
mov
mov
outs
cmp
push
xor
or
je
rol
or
push
sbb
cmp
leave
push
dec
push
dec
test
inc
stc
mov
repnz
xchg
xchg
xchg
xor
inc
(bad)
push
fwait
mov
(bad)
js
push
pop
push
aas
push
and
bound
push
mov
mov
cmps
ror
ins
ins
into
int
imul
jb
std
lods
int3
jl
xchg
fst
test
pop
test
push
jo
pop
mov
enter
out
adc
ins
push
bound
and
add
test
mov
dec
mov
pusha
pop
scas
pop
add
jnp
mov
fcmovnbe
outs
scas
xchg
xchg
xor
popa
jb
jo
outs
jg
and
add
(bad)
loop
mov
inc
inc
or
fistp
(bad)
(bad)
cld
and
imul
xchg
in
popf
icebp
fsubr
sub
ins
pop
jmp
test
dec
pop
xchg
pop
inc
cmps
lods
add
shl
jns
push
mov
push
mov
mov
mov
mov
les
and
(bad)
rcl
inc
pop
add
xchg
scas
ja
pop
icebp
ds
jge
hlt
int
adc
clc
pushf
pop
jmp
mov
or
rol
inc
(bad)
lods
out
pop
inc
popa
addr16
xchg
sub
inc
repz
cdq
sbb
add
push
pop
add
mov
cmp
mov
adc
retf
ja
imul
push
push
nop
xor
ficomp
bound
out
je
lahf
retf
outs
mov
fwait
je
jns
(bad)
push
push
loop
mov
adc
push
mov
(bad)
cmp
xchg
mov
sti
sbb
or
xor
dec
or
loope
mov
out
sbb
(bad)
fbstp
pop
jnp
jmp
aam
ror
xor
cmps
pop
xchg
xor
rcr
dec
aad
mov
and
inc
retf
std
cs
leave
xor
inc
pop
rcl
cmp
mov
mov
or
ror
leave
popf
cmp
jbe
arpl
shr
mov
jae
inc
jg
mov
fnsave
push
pop
into
push
daa
dec
enter
lods
dec
sbb
lea
scas
dec
ds
int3
lds
mov
xchg
dec
cld
add
cdq
xor
xchg
or
imul
jmp
adc
fadd
xor
iret
inc
inc
dec
inc
jns
popa
mov
out
das
mov
or
cmp
push
sbb
sbb
pop
stos
pop
lds
mov
pop
pop
dec
icebp
sbb
and
pop
clc
rep
sbb
(bad)
mov
cmp
xchg
call
add
inc
cdq
mov
jbe
repnz
aam
(bad)
or
mov
cmp
shl
mov
out
inc
daa
mov
and
cdq
jmp
outs
inc
xor
dec
xchg
(bad)
nop
fsincos
imul
lods
push
dec
stc
(bad)
aaa
mov
jge
loopne
gs
lahf
push
fwait
test
lock
loope
inc
jmp
dec
jnp
hlt
ret
cs
xchg
cmps
test
rol
push
xor
(bad)
repz
or
jmp
pop
jae
popf
les
jmp
cmp
inc
hlt
es
sbb
xchg
mov
mov
xchg
ins
je
leave
jns
mov
cmp
jg
rol
adc
ret
and
(bad)
jno
(bad)
stc
push
xor
imul
test
call
popa
ss
(bad)
jg
mov
dec
ficomp
loope
sbb
sbb
stos
pop
mov
ret
sbb
test
push
jno
mov
lods
cmps
test
(bad)
push
gs
lahf
cmp
inc
dec
lahf
add
jbe
sbb
sti
int3
shl
mov
adc
mov
pop
ins
cli
pop
xchg
fldcw
pop
mov
retf
aas
lock
(bad)
stc
jge
adc
pop
je
scas
popa
stos
xor
ins
jmp
dec
aas
sbb
mov
shr
je
test
fcom
pop
adc
cld
jmp
sti
cmps
or
push
pop
xor
sbb
cmps
pushf
imul
pusha
push
inc
and
sbb
cmp
ins
out
add
sar
stc
push
(bad)
in
cs
test
sub
movs
add
xchg
push
ja
lock
and
push
pop
loopne
jge
cmp
out
push
jp
aam
jbe
loop
icebp
test
mov
lds
inc
push
add
mov
mov
(bad)
adc
xchg
pusha
mov
sub
push
lahf
cli
jnp
cdq
test
lock
xor
lahf
xor
cmps
mov
mov
mov
jno
popa
cmps
imul
(bad)
sbb
arpl
stc
cmps
fwait
hlt
or
dec
iret
inc
jno
pop
sbb
jb
adc
int
inc
inc
and
jo
sti
sub
(bad)
sbb
pop
cmps
mov
paddd
jns
jmp
or
rol
repnz
xchg
xor
inc
mov
in
push
jne
jmp
dec
adc
or
in
add
out
add
lods
or
push
jae
push
movs
add
sahf
(bad)
cmc
fwait
push
and
lods
cmps
pop
xor
jbe
sbb
int
jg
or
mov
loop
test
sbb
retf
push
aad
mov
(bad)
cmp
cmc
jl
adc
dec
xchg
nop
js
popw
ds
enter
add
and
lds
movs
(bad)
rcr
(bad)
xchg
sub
js
push
lods
xchg
sti
jo
cdq
call
cdq
fnstsw
cmps
add
das
aad
push
mov
fnstsw
mov
retf
ret
add
mov
cld
push
pop
test
dec
sbb
daa
pop
xchg
je
xlat
test
add
aad
add
jecxz
jmp
daa
pop
mov
xor
ret
jmp
adc
cmps
dec
push
push
cwde
adc
push
push
rol
(bad)
mov
popf
sbb
je
out
popf
pop
mov
jae
out
shl
cmp
or
jecxz
mov
jg
clc
xchg
cmps
int3
stos
xchg
pop
hlt
inc
leave
je
jle
loop
mov
push
add
fs
mov
int3
xchg
mov
call
(bad)
repnz
adc
popf
stc
push
ds
pop
dec
pop
loope
int3
fcom
cmp
es
jne
cli
adc
xchg
inc
adc
xchg
mov
sbb
call
popf
inc
call
and
pop
movs
movs
push
cmp
test
and
xor
xchg
popf
aam
cmp
jge
sub
repz
push
xchg
lahf
xor
jne
adc
mov
hlt
jns
movs
sti
or
sti
ins
mov
and
cmc
cs
dec
out
dec
lock
cmp
mov
mov
mov
pop
xlat
adc
rcr
hlt
mov
mov
mov
mov
dec
mov
test
adc
and
(bad)
adc
fucom
dec
test
add
call
push
pop
adc
mov
rol
cmp
stos
hlt
mov
push
sti
sub
and
popa
mov
sub
lods
mov
lds
(bad)
aaa
pop
ror
fsub
std
mov
mov
inc
cli
aaa
popf
aas
cmp
cs
mov
rol
ret
pop
xchg
jbe
loopne
repz
push
cmp
sub
pop
pop
rcr
imul
cmp
retf
(bad)
adc
sub
dec
adc
stc
scas
cs
cdq
(bad)
cmp
dec
push
gs
sub
es
or
ins
mov
or
sbb
mov
mov
xor
mov
xchg
or
sbb
stos
lock
int
pop
mov
push
xchg
movs
sar
xor
retf
mov
adc
rcl
jge
movs
or
je
mov
add
and
repz
push
(bad)
(bad)
sar
lods
adc
in
cmps
aas
mov
clc
sbb
fnstenv
fistp
push
repnz
pushf
add
push
mov
shl
xchg
in
jb
mov
inc
dec
arpl
xchg
enter
xchg
aas
xchg
push
test
jbe
jae
pop
icebp
stc
add
popa
fimul
repnz
js
test
xchg
int3
shl
inc
mov
inc
mov
and
cmp
adc
sub
ss
dec
adc
fwait
scas
pop
adc
jb
mov
jl
pop
mov
inc
inc
pushf
imul
and
cmp
sar
les
xchg
inc
xabort
pop
xchg
pop
adc
xor
xor
ss
jl
pop
sbb
cmp
sbb
push
ret
push
mov
push
test
push
sub
mov
in
cs
push
mov
xor
add
add
icebp
aad
pop
pop
in
xlat
mov
(bad)
out
and
fstp
ss
adc
mov
ret
jno
aas
std
retf
mov
inc
sti
pusha
or
cmp
ret
mov
shl
sub
popf
(bad)
cmp
cld
js
sub
adc
jno
adc
hlt
jmp
xchg
xchg
test
push
retf
jae
test
iret
out
jne
push
mov
dec
xchg
aad
push
das
ds
mov
test
inc
dec
int3
inc
pop
(bad)
ds
fsub
adc
add
mov
xchg
rol
sbb
enter
ds
xor
addr16
mov
inc
cmp
sub
mov
pop
cmp
lds
mov
sbb
into
es
ret
xchg
or
dec
outs
jbe
iret
out
lds
or
mov
mov
aam
sub
jbe
in
pop
or
jle
mov
mov
mov
pushf
std
add
sbb
daa
cmp
imul
(bad)
call
sub
imul
repz
mov
ss
push
and
cmp
sub
add
pusha
and
bnd
jbe
add
push
imul
aas
jmp
sbb
adc
cld
mov
push
stos
int3
sub
xchg
adc
(bad)
arpl
xor
ja
es
in
jecxz
pop
and
sub
repz
jbe
xchg
pop
xchg
sbb
dec
inc
jmp
xor
push
add
mov
sahf
pop
inc
jnp
and
mov
push
xor
out
mov
cmp
mov
jle
jge
fwait
ins
in
and
push
pop
mov
rcl
sti
xchg
js
pop
add
xor
pop
mov
lods
cmc
dec
retf
int
sbb
(bad)
ss
mulps
mov
mov
out
out
mov
add
ret
push
call
lahf
push
(bad)
(bad)
adc
into
ins
dec
sbb
(bad)
lods
enter
jnp
fadd
mov
mov
ja
inc
adc
push
in
sub
aad
loop
xlat
xor
or
inc
enter
add
sub
mov
cmp
cmp
cwde
in
jp
mov
repz
mov
dec
adc
mov
dec
and
lea
push
(bad)
mov
cwde
pop
jge
lea
xchg
call
inc
aaa
mov
jge
inc
mov
retf
pusha
aas
mov
jne
sti
mov
sub
jl
(bad)
mov
test
sbb
push
js
push
mul
xor
jb
sti
hlt
jb
push
shr
cwde
cmp
int3
jo
in
dec
xchg
ja
and
add
jl
mov
and
sub
cmp
loop
sbb
cmp
icebp
in
ins
adc
xlat
sub
lods
test
lock
push
jne
retf
inc
mov
mov
iret
sbb
inc
jp
jg
and
mov
push
pop
iret
fld
mov
inc
sub
arpl
repnz
jmp
mov
jnp
xchg
dec
cmp
jns
out
div
cmp
xor
in
dec
test
iret
mov
adc
jno
dec
aaa
and
pushf
xchg
pop
pop
jo
or
iret
ja
sar
inc
neg
xchg
lock
adc
aaa
dec
pop
mov
ret
test
sbb
push
mov
sbb
pushf
bsr
dec
dec
(bad)
ins
sti
retf
sbb
jg
xchg
sbb
fwait
cmps
shl
jle
shl
hlt
retf
inc
push
xor
loopne
call
fcmovu
jmp
mov
ret
dec
jmp
or
push
mov
pop
pop
test
leave
or
xchg
lods
loop
rol
sti
xor
shl
in
das
xor
push
leave
fdiv
lock
aaa
cmc
push
stc
lods
in
mov
pop
cli
(bad)
imul
jle
aaa
pop
dec
or
dec
mov
int
or
inc
inc
cli
sti
and
outs
xchg
loope
mov
add
aaa
add
pop
push
sub
fsub
push
push
leave
rcr
sub
mov
jnp
xor
addr16
in
(bad)
lods
mov
sahf
aaa
enter
pop
cmps
mov
cmp
faddp
add
mov
mov
std
pusha
pop
iret
sub
jb
xchg
cwde
pop
push
push
sub
mov
mov
scas
repz
dec
add
adc
jbe
inc
into
loopne
psrld
sub
xchg
sbb
jg
ror
sbb
call
push
pop
and
push
inc
pop
jb
xchg
or
push
xor
xor
daa
sub
pop
mov
xchg
dec
call
adc
rol
pusha
inc
das
xor
fidivr
imul
inc
jge
es
sub
or
in
xor
xor
cs
jne
icebp
fnstenv
scas
inc
xor
adc
inc
fnstenv
outs
popa
inc
ja
stos
pop
cwde
aad
inc
pop
push
mov
daa
cmps
rcr
xchg
fisub
cmp
ss
xrelease
fiadd
fmul
aas
mov
jbe
mov
movs
mov
rcl
pop
iret
xchg
jg
pop
sub
fld
mov
adc
push
pop
jne
movs
je
(bad)
fisttp
imul
jle
jo
push
lea
int3
inc
jmp
push
pop
sar
ins
retf
repz
inc
loopne
mov
jp
jo
out
(bad)
mov
mov
push
out
and
push
lahf
(bad)
jno
mov
jno
add
add
(bad)
dec
pop
test
mov
pop
pop
sbb
sub
inc
add
and
push
shl
popa
ficom
in
das
(bad)
es
adc
aam
clc
mov
idiv
inc
imul
xor
jnp
mov
imul
mov
jae
sar
adc
shr
test
pop
iret
lods
mov
and
movs
repz
ss
movs
arpl
add
mov
jns
imul
or
jbe
lods
sbb
add
push
xor
hlt
mov
sbb
ds
data16
mov
icebp
aas
(bad)
cmc
pop
ror
idiv
(bad)
pop
mov
jecxz
xchg
pop
xchg
repnz
mov
hlt
pop
ror
sbb
mov
and
nop
jb
pushf
mov
test
push
(bad)
cmps
sbb
cmc
imul
and
js
cmc
jb
imul
xor
pop
in
in
xchg
mov
cmp
mov
xchg
add
sar
test
shl
inc
cmp
in
inc
cs
dec
sbb
xor
das
xchg
or
mov
rol
xor
add
mov
or
xchg
arpl
inc
adc
test
xor
ds
(bad)
and
bound
je
out
mov
push
adc
inc
xchg
popf
aas
int
push
xchg
scas
add
xor
out
xchg
(bad)
jg
xlat
or
dec
ficom
les
sar
or
push
mov
ins
(bad)
aaa
jg
and
aad
in
in
fcmove
add
adc
retf
and
fcomp
inc
aam
xor
inc
xor
cmp
xor
(bad)
dec
loope
inc
xchg
xchg
stos
loopne
sub
inc
add
int3
and
sub
push
pop
out
mov
cmp
xlat
stc
push
nop
or
pop
add
pop
sub
(bad)
bound
xchg
adc
call
es
cmp
jge
ds
es
push
out
ret
outs
pop
mov
add
add
cs
das
jae
adc
xor
dec
add
sub
push
pop
stos
movs
push
pop
out
retf
sbb
push
repz
inc
outs
jecxz
or
cmp
lods
mov
(bad)
mov
sub
(bad)
jnp
sub
clc
into
ficomp
or
add
push
ss
cmp
(bad)
add
cmp
pop
les
mov
out
sub
in
sahf
mov
std
add
movs
std
lds
mov
or
dec
ret
xor
pop
in
add
xor
jmp
adc
dec
(bad)
sbb
inc
call
jg
imul
ins
scas
loope
mov
dec
push
add
fwait
or
jmp
les
int3
and
mov
retf
add
(bad)
fild
in
cmc
icebp
pop
lds
int3
push
cdq
mov
shl
mov
pop
stc
imul
xchg
test
jne
mov
rcl
push
dec
xor
pop
les
sub
sbb
pop
mov
outs
push
dec
out
lock
movs
mov
jnp
fmul
(bad)
call
popa
or
push
mov
jecxz
inc
(bad)
addr16
fcomp
(bad)
repnz
add
les
push
std
cmps
mov
loope
pusha
in
and
call
aam
mov
cs
sahf
add
mov
cmp
xchg
sub
call
inc
dec
push
(bad)
mov
(bad)
xor
push
pop
jmp
xchg
jne
jb
pop
call
dec
jmp
xchg
mov
xchg
cmp
pop
(bad)
jmp
enter
xor
dec
jl
add
fdiv
cli
js
in
fdiv
mov
push
pop
pop
mov
sahf
pop
repz
mov
pop
js
add
mov
test
inc
ins
push
jg
(bad)
adc
cmc
pushf
movs
jne
ror
pop
cmp
xor
movs
inc
sbb
js
cmp
aad
retf
push
sbb
mov
iret
into
adc
jle
xchg
fnstsw
xor
dec
into
jb
arpl
mov
push
movs
cmps
and
movs
repnz
sti
mov
xor
xor
dec
popa
(bad)
dec
or
push
adc
scas
pop
add
mov
lods
nop
shr
(bad)
or
inc
pop
mov
(bad)
and
jmp
adc
lods
loope
fst
add
sbb
sub
arpl
(bad)
aas
bound
cmps
aas
out
adc
push
mov
and
loop
neg
addr16
das
or
jnp
hlt
sbb
inc
lahf
neg
xor
push
ret
iret
adc
cmps
dec
and
xchg
mov
add
je
pushf
repz
jp
out
inc
push
and
(bad)
lods
or
lods
shl
ficomp
mov
xchg
daa
sub
push
xchg
xchg
repnz
mov
pop
repz
jne
adc
outs
(bad)
jg
jmp
adc
fdiv
ret
(bad)
bound
adc
fbld
adc
aaa
mov
xchg
sub
mov
in
add
jno
add
retf
inc
(bad)
out
mov
sub
mov
dec
scas
shl
cli
mov
(bad)
ror
ss
cmp
mov
iret
ins
and
mov
cli
xchg
jnp
stos
xchg
jge
xchg
and
add
std
ret
lods
pop
out
ins
xor
stos
gs
lds
or
shl
rcr
mov
jle
jae
gs
push
ins
add
or
rol
add
mov
dec
pop
cli
jmp
mov
pusha
xchg
cld
mov
pop
aad
jne
test
mov
sar
js
jae
jle
inc
adc
lock
xchg
out
mov
retf
(bad)
mov
cs
xchg
sub
jno
ins
(bad)
cmps
jl
adc
aad
scas
call
ja
xchg
mov
cld
cmp
mov
in
ins
int3
and
pop
lods
data16
jmp
in
scas
test
into
push
mov
arpl
(bad)
fucomp
pushf
push
leave
popa
mov
cli
retfw
inc
inc
ja
sub
sbb
outs
inc
jp
stos
out
pop
je
xor
sub
mov
and
stos
jb
addr16
addr16
dec
pop
sbb
cmp
ja
mov
sbb
dec
push
ds
dec
or
and
sbb
dec
dec
fs
pop
jnp
das
jmp
stos
int
mov
and
mov
jmp
push
cdq
xor
add
xlat
rol
aam
int3
daa
es
sbb
xor
or
retf
cmc
out
icebp
mov
sbb
pop
dec
jmp
rol
(bad)
outs
in
mov
jge
pushf
xchg
test
clc
mov
jmp
pop
ffree
mov
int
iret
mov
pop
fldcw
out
push
nop
mov
mov
and
push
push
stos
outs
add
test
jnp
arpl
leave
aam
jno
test
outs
jno
cwde
push
or
pop
out
xchg
xor
ss
fcomp
adc
sub
aas
mov
loope
add
xchg
jp
fnstcw
out
cmp
jnp
inc
cld
fwait
jge
fcomp
mov
push
psubb
mov
jae
push
(bad)
mov
sbb
jmp
pop
dec
mov
enter
mov
(bad)
iret
sbb
rcr
icebp
mov
movs
mov
ins
arpl
loope
call
pop
mul
aaa
xchg
(bad)
jmp
fst
jmp
retf
cmp
popa
sub
fsubr
cmp
loope
inc
jb
sub
ret
cdq
jo
(bad)
out
mov
mov
inc
ins
out
mov
jmp
shl
(bad)
icebp
add
lahf
cmovs
out
ja
aam
cmps
jmp
std
or
sub
mov
add
fdiv
loopne
push
lahf
jns
ins
fcmovnu
sar
push
jae
enter
jb
mov
iret
(bad)
hlt
xchg
pop
mov
and
sub
neg
cmps
push
retf
lods
jmp
sbb
shl
cs
cld
in
out
hlt
loop
js
push
daa
adc
sbb
mov
xchg
rcr
std
imul
pop
dec
adc
(bad)
std
in
jg
sub
imul
lahf
xor
mov
inc
push
sahf
outs
repz
retf
and
ucomiss
cmc
dec
or
ss
shl
push
push
push
in
nop
jecxz
cld
sbb
in
pop
sub
retf
xchg
and
clc
cmp
mov
lock
(bad)
popf
push
retf
or
pop
lods
xor
test
hlt
mov
popa
int3
popf
push
in
aas
sbb
xchg
sub
mov
sub
mov
leave
dec
and
push
rol
sub
je
xor
dec
loop
lods
adc
mov
fld
enter
cwde
pop
into
fdivp
adc
scas
out
jne
add
(bad)
mov
enter
lods
nop
dec
lds
pop
(bad)
int
mov
mov
push
and
pop
test
sbb
movs
jmp
xchg
and
jb
int
int3
xor
cld
pop
pop
xchg
test
imul
inc
ins
imul
sbb
xlat
push
mov
popf
pop
xchg
inc
mov
pop
into
push
mov
jne
in
mov
aas
add
outs
outs
dec
jno
and
enter
test
pop
push
mov
inc
push
test
or
xchg
push
ins
inc
and
(bad)
hlt
cmp
sbb
in
dec
cmp
in
ins
xor
retf
or
adc
mov
pop
repnz
sbb
std
mov
cmp
cmps
ins
js
xchg
adc
gs
jecxz
xchg
retf
pop
lods
push
push
mov
(bad)
mov
shl
(bad)
rol
hlt
mov
jb
jo
(bad)
aas
int3
mov
mov
jnp
cmp
cwde
push
bound
int
pop
cmp
mov
dec
stc
mov
inc
xchg
xchg
ja
mov
mov
pop
push
sbb
lods
rcl
pop
xor
push
test
push
pusha
lods
add
pop
cmp
mov
icebp
or
hlt
es
je
sbb
jmp
xchg
fmul
mov
(bad)
mov
inc
adc
push
xchg
icebp
outs
test
xchg
xor
sub
ret
imul
add
dec
push
fwait
mov
rol
mov
mov
lods
push
mov
inc
es
loop
jb
xchg
inc
ds
mov
adc
lahf
add
adc
xchg
xor
add
xchg
stos
lahf
js
xchg
leave
dec
mov
xchg
aaa
inc
push
(bad)
clc
sub
adc
inc
outs
int3
int
pop
xchg
xor
data16
fstp
retf
es
push
xor
cmps
fnsave
fdiv
pop
call
stos
cwde
mov
and
(bad)
cmc
imul
sub
into
test
addr16
and
add
add
pop
loope
jns
data16
sub
lahf
inc
jb
add
iret
fistp
mov
int3
jecxz
imul
push
sub
dec
nop
mov
mov
iret
test
popa
adc
xor
je
je
cmp
loop
(bad)
scas
pushf
mov
cwde
ss
(bad)
(bad)
sbb
fnstsw
test
jmp
je
call
lods
fisub
push
fscale
pop
mov
sub
in
xchg
mov
nop
sbb
imul
mov
mov
pop
lea
stos
push
inc
push
lods
fcom
(bad)
imul
pop
mov
test
das
pop
mov
call
sub
push
xchg
ror
fs
adc
mov
and
jne
outs
jnp
cmps
outs
push
icebp
aad
sbb
jl
mov
loop
xchg
push
and
inc
scas
call
test
outs
pop
je
add
xor
push
mov
mov
xor
xchg
jmp
jmp
adc
push
xchg
mov
(bad)
icebp
cwde
mov
add
jb
dec
and
in
clc
ins
add
or
mov
popa
push
xor
cmps
cld
lods
sahf
jmp
or
jecxz
or
xchg
jns
mov
xchg
sbb
xchg
and
into
(bad)
aaa
jg
test
leave
jno
test
adc
push
ret
dec
xchg
aas
xor
xor
lock
shr
cwde
enter
jl
popa
hlt
sub
pop
(bad)
fdiv
mov
mov
retf
arpl
sbb
out
pop
shr
jmp
(bad)
lahf
or
ss
sbb
push
enter
xlat
popf
jno
in
push
nop
jecxz
jecxz
mov
pusha
bound
xor
outs
pop
cmps
loope
arpl
repnz
jns
xor
test
iret
jmp
push
mov
icebp
cwde
std
push
je
or
stos
mov
ins
hlt
dec
retf
jge
loop
pop
shr
aas
cmp
add
dec
mov
dec
xor
out
pop
push
leave
sub
push
loope
or
adc
out
adc
bnd
dec
jno
ds
retf
out
(bad)
adc
xchg
xor
fcomp
mov
jge
ja
mov
aas
test
inc
inc
xchg
retf
jmp
je
ror
mov
stos
sub
nop
pushf
inc
fwait
sbb
cmp
mov
fild
mov
lods
jno
ret
sub
push
sbb
push
sbb
outs
pop
jecxz
dec
fild
cdq
stos
xchg
stos
lds
inc
push
stos
retf
cdq
out
enter
push
mov
cli
pop
test
or
push
jl
ss
stos
neg
retf
cmp
movaps
fs
scas
jae
jg
std
add
push
mov
ret
pop
sub
ins
int
cld
inc
and
fs
dec
cmp
sti
cld
cmp
cmp
cmc
lods
mov
push
cmp
and
data16
jae
retf
sbb
pop
pop
or
adc
sub
mov
add
xor
fwait
sbb
mov
or
sub
sub
mov
fwait
xchg
pop
not
dec
sub
dec
and
les
pop
int
xlat
push
(bad)
in
(bad)
arpl
(bad)
nop
add
adc
lahf
xlat
lea
sti
push
ret
push
sbb
jne
into
imul
mov
stos
aad
jmp
test
out
push
sahf
xchg
sub
pop
jmp
and
popa
stc
inc
xchg
enter
mov
test
push
push
lea
dec
mov
or
pop
jg
int
pop
in
repnz
fld
or
inc
mov
mov
lds
or
push
test
stc
xor
(bad)
test
lds
xor
push
sub
jp
sbb
mov
fild
aaa
retf
les
fdivp
or
xor
ds
push
xor
mov
add
imul
scas
aad
hlt
xor
jl
mov
stos
mov
mov
ja
stos
addr16
cli
adc
pushf
cli
scas
inc
data16
mov
aaa
in
mov
jnp
std
lea
dec
add
sub
mov
js
cmp
xchg
sub
xor
imul
add
dec
jg
cli
dec
cmps
push
fisttp
inc
mov
jge
sbb
lods
adc
jp
sbb
es
mov
sahf
mov
mov
(bad)
out
lods
fimul
popa
loope
ds
and
inc
mov
adc
in
test
sti
loopne
scas
(bad)
loopne
pop
or
stos
xchg
and
sysexit
or
and
push
bound
sub
aaa
mov
nop
test
(bad)
iret
inc
push
jmp
repz
sbb
sbb
and
sbb
lahf
xchg
jl
hlt
popa
into
repnz
inc
or
adc
in
push
out
stc
jb
rol
push
mov
lods
mov
push
pop
add
mov
jl
out
jp
js
mov
push
out
add
add
gs
std
or
adc
test
das
mov
push
mov
std
xchg
xor
add
and
mov
loop
icebp
in
jmp
and
aaa
imul
mov
cmps
xor
mov
push
mov
into
sub
(bad)
push
fist
lds
int
jne
cmc
inc
pop
mov
or
jp
or
daa
stos
movs
mov
push
sbb
cmp
dec
fdivr
and
sbb
jle
sar
cmp
mov
hlt
dec
xchg
and
inc
mov
sub
push
sbb
jle
pushf
lods
mov
add
or
mov
pop
or
outs
mov
dec
out
cld
jg
jmp
sar
mov
iret
push
cmp
pop
cmp
cwde
xor
jne
je
scas
je
cmp
add
je
ins
sub
in
jge
or
jmp
mov
cmps
jge
jle
(bad)
inc
jae
xor
jb
fsub
or
cmp
or
xchg
gs
pop
arpl
out
inc
inc
push
mov
clc
and
popf
xchg
ficom
movs
inc
mov
popf
int3
outs
adc
pop
jp
fild
fisub
imul
lds
xlat
jp
mov
ret
cmps
fdivr
movs
pop
xchg
(bad)
xchg
inc
stos
push
loopne
jge
cmp
cmp
and
pop
sbb
test
dec
mov
ins
jl
push
add
mov
aam
(bad)
or
or
jnp
int3
pop
cs
sbb
push
xor
xchg
shl
out
das
add
fcomp
adc
mov
movs
jae
sahf
mov
lods
pop
jbe
cmp
retf
xor
sar
test
loope
and
mul
jae
cmp
jne
fild
ins
jae
inc
(bad)
push
jle
imul
ins
stos
out
fcom
push
jns
clc
retf
sbb
mov
popf
xor
pop
mov
mov
div
jne
sbb
mov
add
sbb
fs
mov
push
sbb
inc
mov
loope
mov
lahf
add
pop
cwde
cli
add
jnp
push
dec
cmp
xor
mov
pop
data16
pusha
xchg
jecxz
lahf
(bad)
lock
xor
das
fild
add
mov
or
pop
inc
(bad)
test
loopne
xor
push
leave
rcr
cwde
dec
das
xor
push
jo
ins
mov
pop
test
cli
lahf
dec
dec
inc
das
jno
mov
inc
and
repz
in
out
cmps
pop
mov
shl
test
stos
cmp
rcl
js
dec
or
xchg
mov
js
test
stc
sbb
mov
and
or
add
sub
movs
push
fcom
adc
into
rcr
jmp
sbb
das
mov
aam
repnz
lods
int3
mov
jae
inc
dec
mov
xor
push
retf
hlt
mov
mov
pop
daa
mov
mov
popf
xchg
(bad)
hlt
sub
add
stos
outs
pop
dec
jbe
sar
pop
mov
push
cmc
call
xor
xchg
aad
sti
retf
xchg
int3
adc
(bad)
cmp
xchg
pop
xchg
and
loopne
ret
mov
ja
inc
sub
popf
mov
inc
dec
xchg
mov
adc
push
mov
xor
pop
lock
sbb
pop
mov
jl
call
ja
in
adc
jge
neg
mov
gs
or
jnp
cli
add
mov
and
ds
fcmovb
mov
pop
es
in
std
jae
mov
es
aad
mov
in
dec
ror
inc
jle
outs
out
dec
and
sub
or
cmp
out
xchg
loopne
cmp
imul
mov
jbe
cmp
xor
bound
call
add
stos
sti
lods
neg
inc
dec
cmc
fisub
or
xchg
push
jge
mov
ins
jge
scas
add
push
(bad)
xor
add
call
jecxz
iret
cmc
mov
nop
cmp
push
jmp
cdq
pushf
sbb
mov
ds
push
icebp
mov
pop
(bad)
sbb
sub
fstp
and
dec
shl
add
jo
lea
jno
lahf
in
mov
imul
fidiv
iret
movs
imul
and
xchg
push
inc
std
sub
icebp
clc
jb
sahf
data16
pop
push
cmp
loop
dec
jb
sbb
mov
jne
(bad)
adc
push
pop
inc
fcmovnb
fistp
(bad)
push
cli
test
fdivp
cld
jge
pop
popf
ins
lods
fcomi
cmp
lods
sub
fstp
sub
pop
movs
xor
jmp
cmp
movs
ins
push
dec
sbb
push
sahf
addr16
and
int3
pop
stc
or
je
and
mul
mov
jl
sbb
lods
adc
fwait
xlat
xor
push
sub
test
adc
js
push
mov
stc
cmp
outs
add
dec
dec
mov
jmp
repz
sbb
xchg
fisub
call
loope
fwait
or
mov
add
retf
adc
test
and
test
(bad)
or
(bad)
pop
inc
mov
lods
dec
lea
or
ss
cmp
adc
mov
ds
cmp
mov
push
gs
push
jae
inc
push
push
movs
jmp
imul
mov
or
iret
je
sahf
into
sub
aaa
cld
fwait
sar
js
retf
pushf
out
outs
shl
enter
sbb
pop
xchg
or
fnstcw
cmp
daa
adc
les
pop
push
test
jge
dec
daa
or
adc
add
xchg
jge
aaa
(bad)
lock
fstp
add
shr
in
cld
or
inc
fwait
adc
repz
outs
ret
repnz
stos
in
mov
pushf
push
je
mov
dec
je
sar
xchg
sub
test
jo
mov
retf
push
or
adc
mov
outs
xchg
sbb
in
pop
inc
(bad)
out
mov
sub
pusha
loope
mov
dec
dec
sti
dec
rcl
dec
xchg
enter
push
push
pop
movs
jnp
jecxz
loop
adc
scas
repnz
pop
pop
int
xchg
aam
inc
sahf
mov
cmps
sbb
test
loope
adc
dec
sti
or
mov
fs
inc
jne
and
add
fisttp
lds
pop
or
xor
inc
mov
mov
aad
push
hlt
fist
xchg
adc
push
add
jp
scas
or
loope
pop
mov
mov
jno
arpl
inc
cld
mov
push
(bad)
je
cs
push
xchg
lahf
ret
stc
pop
bound
add
add
dec
and
inc
cmp
mov
and
mov
sub
cmps
fidivr
jle
push
sub
and
add
retf
loop
loope
movs
shr
lods
scas
dec
cmp
in
add
xchg
cld
dec
dec
js
sbb
dec
sahf
push
std
mov
cmp
jg
pusha
or
sub
and
and
pop
push
push
dec
repz
call
add
inc
and
pop
idiv
movs
mov
aas
lea
xor
cdq
addr16
cmp
(bad)
and
addr16
add
sub
jge
push
dec
adc
loope
jmp
xor
xchg
mov
test
into
jo
jg
xor
inc
push
mov
cli
cmp
cmp
leave
das
push
pop
jno
xchg
fwait
mov
pop
es
ror
xchg
dec
lea
inc
mov
cli
dec
fstp
sbb
xor
dec
dec
mov
xlat
and
add
push
inc
test
ins
lods
add
(bad)
pop
push
mov
dec
push
jne
popa
stos
pop
mov
add
push
scas
scas
out
ja
sbb
mov
xor
popf
add
rol
mov
cld
push
inc
test
rcr
sbb
repnz
loope
rcl
jns
push
mov
in
out
movs
stos
cmp
jl
neg
cmp
arpl
cmp
xor
es
in
jecxz
jg
ins
fimul
inc
stc
dec
(bad)
push
jnp
fdivr
scas
or
sbb
mov
xor
pop
int3
sahf
stc
mov
stc
cdq
or
mov
jo
xor
cmp
ja
xor
mov
lock
inc
imul
retf
scas
lds
xchg
mov
mov
mov
out
(bad)
jmp
fisttp
or
imul
push
les
mov
mov
sub
or
mov
dec
popa
or
out
enter
push
loopne
out
mov
call
(bad)
jmp
jp
fucomi
xchg
adc
or
push
jp
xchg
popa
jle
ror
ja
fwait
push
inc
call
and
or
mov
mov
cmp
or
and
mov
repz
(bad)
invd
aas
mov
retf
push
and
les
data16
dec
jns
jo
fs
adc
and
lds
dec
ins
pop
pop
hlt
pop
stos
jg
add
in
ins
and
pop
adc
pop
xchg
sub
sub
lods
xor
out
sbb
fld
mov
mov
adc
jg
aas
jae
add
mov
push
enter
fsubr
mov
add
pop
adc
(bad)
ficomp
pop
bound
mov
mov
loop
movs
mov
sahf
int3
retf
push
outs
nop
add
push
xchg
icebp
pop
pop
add
mov
sub
outs
mov
retf
add
ficom
xchg
push
test
add
aaa
add
jp
dec
pop
mov
das
and
lahf
mov
pop
sahf
outs
mov
fisubr
imul
mov
adc
inc
lea
mov
pop
fiadd
jno
(bad)
jmp
pusha
outs
clc
and
sbb
stos
jg
rcr
neg
rcl
xchg
mov
mov
mov
loop
sbb
push
movs
enter
int3
push
sbb
fcom
xchg
and
jecxz
aas
pop
mov
outs
loop
adc
jnp
hlt
mov
mov
xlat
push
fcmove
arpl
(bad)
jo
cmp
push
cmp
and
mov
jne
add
xchg
or
mov
adc
retf
leave
scas
data16
adc
daa
mov
jmp
jb
les
inc
shr
dec
idiv
iret
or
xor
cli
(bad)
hlt
clc
cmps
hlt
xor
mov
dec
or
adc
rcl
fcom
test
add
dec
pop
fcomip
stos
sub
jb
es
or
fimul
pushf
mov
fwait
mov
popa
inc
dec
sub
jns
mov
adc
or
jp
mov
pop
adc
jb
xor
fiadd
push
mov
add
cmp
jno
mov
pop
jae
mov
fistp
inc
xchg
jmp
ret
dec
or
mov
cmc
pusha
mov
mov
loop
push
cmp
mov
(bad)
xor
dec
pop
jmp
push
pop
int3
mov
cwde
pusha
cli
pop
(bad)
jp
fidivr
and
iret
je
dec
rcr
xchg
mov
and
inc
xchg
push
enter
adc
dec
xlat
adc
inc
and
in
add
and
jb
call
xchg
fcmovnu
enter
iret
fidivr
push
xchg
mov
mov
rcr
pop
cmps
xchg
lock
sub
and
push
mov
pop
adc
imul
xor
xchg
arpl
adc
xchg
clc
and
dec
outs
pop
neg
xor
sub
test
cld
adc
(bad)
add
push
daa
imul
ror
push
jo
sub
mov
std
fldcw
stos
pop
jl
pop
mov
lock
inc
pop
paddw
mov
adc
sbb
or
or
fwait
cwde
mov
pop
ins
jnp
in
retf
int3
pop
enter
leave
dec
adc
jge
cs
aam
xor
pop
inc
sbb
cmp
outs
and
ins
sub
xchg
in
pop
pop
add
aaa
rcl
lds
or
int3
xor
repnz
inc
mov
loopne
lods
fdiv
jae
adc
push
aad
push
or
inc
push
cli
retf
sar
hlt
iret
repz
in
clc
ret
iret
jo
adc
mov
mov
into
push
shr
cmp
ins
mov
inc
sub
jno
lods
dec
push
je
imul
xchg
not
imul
and
fisttp
je
pop
in
movs
in
add
cmp
fdiv
dec
ss
xchg
repnz
daa
push
or
pop
add
jo
mov
sbb
jp
cmp
nop
sub
mov
test
ins
adc
mov
popa
sbb
sbb
lahf
imul
(bad)
mov
add
inc
bound
out
mov
dec
pop
xchg
or
jmp
repz
xor
bound
xchg
cmp
nop
aas
scas
std
sbb
sti
pop
or
mov
ss
div
sti
movs
xchg
neg
into
mov
scas
pop
and
dec
sub
(bad)
inc
test
mov
jmp
retf
add
adc
cmp
mov
dec
imul
data16
lods
das
cli
dec
lock
sti
sbb
inc
je
sbb
mov
(bad)
dec
jmp
dec
out
jmp
fbld
sub
scas
call
mov
test
test
push
sbb
ins
or
jmp
je
cmps
and
sti
jmp
push
ret
lods
mov
and
mov
in
popa
pop
mov
or
ss
jl
iret
cmc
inc
scas
call
mov
mov
fstp
push
cmovns
add
nop
(bad)
push
imul
call
popa
inc
mov
out
pop
mov
xchg
mov
xchg
jmp
or
pusha
icebp
fld
test
add
sub
ret
and
lds
pusha
ja
test
out
sub
lea
pop
cs
pusha
ficom
mov
push
sbb
scas
xadd
jecxz
mov
scas
fcom
sub
inc
add
push
dec
sbb
(bad)
adc
inc
dec
loop
xchg
jge
dec
cmps
movs
neg
or
test
xchg
dec
add
outs
mov
mov
scas
inc
xor
sbb
out
mov
imul
or
fidivr
bnd
inc
test
dec
into
scas
outs
xchg
add
ins
aaa
in
fmul
ficomp
fisttp
or
mov
scas
int
bound
fwait
out
mov
mov
pushf
dec
push
fscale
pop
add
pop
retf
gs
push
loop
cmp
and
mov
(bad)
stos
dec
je
inc
push
xchg
push
inc
xchg
pop
daa
in
sahf
fild
push
jbe
out
test
nop
inc
pushf
out
xor
fldcw
fisubr
call
gs
xor
aad
shl
jl
inc
dec
push
clc
bound
cld
or
xchg
out
and
and
nop
bnd
lea
in
push
bound
cmp
mov
call
jne
sub
dec
call
mov
sub
bound
add
adc
dec
and
inc
fucompp
outs
loopne
and
ror
shl
inc
push
int
into
sub
gs
push
popa
mov
loop
xchg
push
arpl
leave
and
pop
loop
and
in
aam
adc
jge
fs
jbe
dec
dec
addr16
fisub
sbb
and
mov
out
repz
cmp
jb
and
cwde
bound
ficomp
or
loope
rcr
jno
mov
in
cmc
test
pop
and
sbb
nop
cmps
push
pop
adc
jmp
jae
jnp
jge
iret
mov
sub
dec
js
mov
les
or
add
shl
mov
fisttp
mov
and
sbb
inc
data16
sar
mov
sub
or
dec
in
xchg
and
push
dec
mov
int3
imul
ret
and
or
stc
loopne
sbb
and
std
stos
dec
xchg
dec
sub
popf
icebp
cmc
xor
push
outs
pop
stos
outs
mov
sub
cmps
adc
sbb
ficom
ss
shr
retf
pop
popa
xchg
aad
xchg
sbb
imul
pop
mov
cmps
xchg
pop
repz
neg
mov
cmp
mov
fstp
and
enter
add
push
clc
inc
add
adc
retf
leave
sub
jmp
mov
stos
cwde
sub
loopne
dec
and
ins
ds
mov
inc
mov
sti
mov
scas
(bad)
mov
pop
xor
jo
mov
jecxz
cmp
adc
sar
mov
scas
jae
stc
ins
out
jmp
push
mov
add
in
ds
fimul
cmps
mov
(bad)
mov
add
xchg
daa
jnp
bound
dec
pusha
pusha
xor
push
daa
inc
lea
lahf
fcmovb
sti
es
push
sub
mov
sbb
aad
xchg
outs
in
add
mov
sub
and
fincstp
xchg
push
push
ret
js
pop
push
or
cmc
dec
(bad)
outs
iret
cdq
fmul
stos
loop
aam
(bad)
call
gs
jecxz
in
mov
mov
xchg
mov
fbstp
dec
push
inc
xchg
icebp
lds
add
push
mov
and
xchg
pushf
mov
inc
inc
call
jmp
jle
jb
aas
dec
jge
das
imul
cmp
les
add
cmp
pop
in
push
hlt
je
adc
jp
mov
clc
mov
mov
test
cmp
fidiv
sub
pop
lods
ffree
jbe
mul
pop
jmp
mov
fdiv
push
xchg
adc
adc
fstp
shr
pop
int3
in
mov
sub
call
in
mov
dec
push
leave
pop
push
mov
mov
xor
in
mov
xor
and
mov
aaa
js
pop
rcl
pop
mov
bnd
out
xor
stos
pop
arpl
(bad)
xchg
mov
and
push
scas
jbe
mov
mov
lods
enter
add
ja
adc
retf
imul
outs
pusha
pop
es
sub
pop
or
dec
pop
pop
adc
mov
mov
push
cmp
leave
ror
and
sub
scas
sub
(bad)
mov
mov
lea
psllq
jmp
mov
lahf
fcmovu
cmp
lea
stos
in
test
and
push
sub
jb
pop
addr16
sub
mov
sub
add
shl
stc
pop
mov
xchg
int
lds
mov
scas
bnd
xchg
push
int3
xor
pop
inc
cmp
stos
movs
out
sar
and
fstp
xchg
das
inc
cmp
rcl
cli
in
add
rol
(bad)
xchg
sti
lods
push
cmp
jnp
clc
cmp
and
loope
push
fistp
pop
mov
push
int
aas
pop
and
ss
fst
jmp
out
ds
repz
and
mov
sub
mov
or
(bad)
ja
loopne
loope
mov
pop
inc
jmp
mov
add
mov
(bad)
and
push
call
and
cmps
std
inc
or
and
jno
cmps
js
mov
pop
xor
lock
loop
ss
mov
(bad)
shr
mov
jg
loop
sbb
movs
imul
cdq
rcl
mov
daa
mov
dec
dec
cmp
(bad)
shr
sbb
push
add
retf
jge
jne
cmp
jb
std
gs
enter
jmp
call
adc
rcl
and
fsubr
ficomp
cmp
dec
sub
loope
inc
jg
int3
sub
mov
into
stc
test
cmps
addr16
and
xchg
(bad)
arpl
jl
xchg
inc
sub
hlt
icebp
dec
pop
adc
aad
and
jmp
cmp
jl
pop
lods
and
sar
fs
arpl
mov
push
cmp
outs
or
pop
or
xor
or
pop
inc
push
cld
ficom
pop
jnp
ret
jnp
xlat
inc
mov
xor
movs
cli
sub
bound
call
pop
pop
inc
adc
cmp
and
pop
mov
xor
hlt
nop
jae
sub
fsubr
ficom
jne
add
sub
xchg
jmp
cwde
xor
push
or
or
push
and
push
into
xchg
add
or
push
fstp
push
jae
jno
out
mov
adc
sub
sub
pop
rcr
jae
jl
ror
arpl
and
xor
repnz
dec
and
adc
inc
push
ds
mov
and
std
push
dec
call
pop
retf
pop
ret
mov
xchg
(bad)
cmc
mov
and
cmps
int
test
sar
call
pop
cmp
out
xchg
pusha
scas
aaa
xchg
xor
xlat
sbb
jmp
push
repz
repz
bnd
imul
sub
es
enter
arpl
cdq
and
sbb
in
popf
inc
test
sub
int3
out
lock
outs
push
sub
push
sbb
or
xchg
sbb
fwait
daa
aam
aad
push
or
lea
push
repnz
xor
sub
add
jl
lds
cmp
mov
lea
aaa
pop
call
jg
icebp
cmp
jge
sub
pop
sete
sbb
test
and
int
pop
add
jb
pop
xchg
cmps
sbb
cmp
jae
stc
cmp
jmp
adc
aas
not
(bad)
xchg
jge
or
pop
dec
addr16
push
inc
js
adc
ins
fimul
xchg
int3
and
outs
pusha
jge
mov
push
push
push
test
aad
in
jl
mov
jbe
sub
cmps
pushf
push
gs
sbb
das
sbb
mov
push
mov
shl
mov
jmp
inc
pop
mov
xor
xchg
adc
lods
pop
ds
jp
loop
pop
arpl
jo
xor
daa
enter
inc
push
push
dec
sub
and
scas
or
test
fwait
and
in
ficom
fimul
into
sub
jns
and
cmps
aaa
add
mov
sti
xchg
je
sub
sti
adc
add
aam
xchg
add
jp
sub
push
shr
inc
sub
add
ficom
and
pop
dec
out
xchg
push
movs
in
rcr
jo
iret
sbb
sub
pop
xor
mov
mov
pxor
ds
(bad)
pop
add
fidiv
push
push
push
mov
loopne
pop
sbb
adc
es
ret
repnz
sbb
test
dec
add
out
in
jge
mov
and
push
adc
xor
cmp
pop
mov
push
dec
add
or
sub
popa
jmp
stos
dec
mov
pop
je
dec
fisub
mov
in
xchg
ficom
out
jae
ins
push
pop
aam
jnp
das
repnz
mov
js
or
imul
cwde
mov
mov
mov
sbb
sbb
jge
stos
daa
loope
(bad)
fist
push
push
inc
inc
xor
lahf
scas
adc
pop
inc
xor
rcr
sar
jb
push
loope
mov
adc
inc
in
retf
stos
mov
sub
inc
jle
jmp
jecxz
ja
cmps
loopne
leave
adc
cs
adc
push
cmps
push
test
xchg
push
mov
sti
dec
sbb
and
stos
push
loope
sbb
xor
sub
test
jecxz
adc
neg
mov
jmp
mov
shr
push
xchg
repz
ret
inc
sbb
mov
lahf
shr
push
loop
xchg
in
push
inc
not
ror
cmp
out
sub
cmp
imul
mov
dec
pop
adc
daa
cmc
movs
mov
mov
or
fsubr
aas
pop
les
inc
js
sbb
add
push
cmp
enter
bound
out
addr16
lea
(bad)
xor
ins
adc
xchg
js
push
shl
xchg
mov
es
mov
fsub
cmp
sbb
push
and
lds
mov
jl
cmp
sti
pop
mov
and
add
stos
int
lock
sbb
xor
push
cmp
faddp
ja
shl
cmp
into
cmp
dec
je
imul
stos
jmp
xchg
mov
mov
ret
mov
jmp
push
je
and
(bad)
(bad)
inc
mov
inc
pop
mov
sbb
js
lahf
or
add
aad
in
add
xchg
ss
jne
push
mov
and
add
cli
hlt
mov
outs
retf
into
push
push
add
sar
mov
out
jbe
or
mov
pop
fidivr
pop
in
outs
inc
iret
push
or
ficom
push
clc
sti
int
pop
jecxz
dec
imul
repz
jmp
xor
or
jge
fwait
push
dec
test
xor
lock
sbb
popf
push
mov
pop
daa
adc
mov
xchg
retf
inc
ins
sahf
cmps
inc
rol
jl
pop
jbe
popa
cmp
pop
fwait
jnp
sbb
(bad)
mov
jb
lods
aam
fucomip
jp
cld
stos
push
jmp
sub
jbe
enter
mov
retf
retf
inc
(bad)
pop
mul
fcomp
pop
cmp
icebp
cmps
aas
xchg
sahf
movs
xchg
xor
jbe
xchg
xor
rcl
adc
jmp
adc
jl
outs
mov
push
sbb
in
test
or
sbb
into
les
(bad)
mov
out
(bad)
loopne
add
xor
xor
imul
idiv
rcl
out
add
in
fcom
int
dec
std
add
pop
mov
test
push
pop
sub
fsubp
hlt
sbb
cs
outs
fcomip
fcom
sbb
push
leave
or
dec
push
mov
sbb
repz
pop
mov
pushf
imul
jo
or
je
and
push
out
dec
jg
push
mov
jno
xchg
clc
sub
shl
sbb
cmp
and
out
jns
add
leave
add
adc
mov
jnp
(bad)
ror
pop
pop
fild
jo
and
in
je
xor
aas
jbe
ficom
cmp
or
adc
xor
fstp
popf
push
sbb
jb
enter
repnz
push
inc
sub
jge
cmp
add
xchg
clc
ja
jmp
int
xchg
icebp
cld
lds
jl
cdq
adc
fisttp
xor
iret
inc
pushf
pop
jb
shl
pop
test
xor
xor
sub
xor
loope
(bad)
xchg
mov
call
pop
sub
and
scas
call
xchg
inc
leave
hlt
jmp
das
add
adc
xchg
iret
int3
mov
sub
frstor
add
cmp
ds
mov
ins
or
es
fdivr
mov
jmp
scas
int3
nop
clc
fild
add
jo
lods
mov
dec
adc
cmp
xchg
cmc
fs
push
push
std
jbe
mov
imul
add
add
inc
inc
dec
sbb
xor
xor
jmp
in
out
fadd
or
sub
jp
je
fidiv
or
and
sub
aad
inc
(bad)
cmp
xchg
dec
je
xor
xor
push
pop
and
rcpps
rol
push
mov
xor
xor
or
mov
shl
dec
push
push
loopne
lds
inc
std
xor
and
cmps
cmp
hlt
cmp
mov
sbb
je
xlat
sub
and
jnp
adc
lods
xchg
and
push
(bad)
fidiv
push
stos
aam
push
sub
ss
pop
add
lock
int3
rcl
or
scas
out
test
pop
sahf
ret
mov
mov
scas
mov
sbb
(bad)
repz
imul
sbb
aaa
out
out
add
mov
inc
inc
(bad)
pop
outs
iret
jmp
mov
mov
inc
inc
push
dec
mov
shl
mov
sub
jp
xchg
pop
xchg
cmp
sbb
ins
fisttp
add
push
mov
and
mov
push
sbb
and
loope
add
fidivr
push
mov
jbe
dec
stc
repz
jb
jecxz
xchg
and
push
mov
cmc
adc
(bad)
rcl
and
mov
pop
fld
xchg
neg
cmp
sub
popf
dec
scas
or
sub
in
and
(bad)
into
jbe
(bad)
mov
(bad)
ror
push
mov
loop
not
out
jmp
shr
or
(bad)
int3
stc
je
shl
cs
mov
bound
(bad)
outs
jmp
pop
rcr
jmp
je
adc
cmp
mov
push
in
push
lods
es
mov
lods
movs
pop
xor
xchg
xor
repz
or
popf
cmp
and
mov
jecxz
ja
and
pop
fnsave
push
sub
popf
shr
gs
icebp
jae
ds
enter
mov
jnp
xchg
mov
mov
mov
xor
test
push
add
neg
dec
mov
pop
xchg
sti
and
into
mov
xchg
(bad)
pop
jecxz
dec
jo
and
mov
mov
xor
call
nop
fwait
nop
jns
cmc
movs
push
pusha
or
pusha
loope
xchg
jmp
neg
out
pop
in
mov
or
mov
add
mov
adc
mov
or
jmp
push
pop
cmps
cmps
and
adc
cmps
xor
(bad)
jo
retf
std
adc
mov
test
cmc
xchg
mov
je
fisttp
push
sahf
sbb
push
aaa
sahf
js
xor
shl
or
sub
inc
jbe
mul
ret
add
xor
push
and
sbb
int3
into
pop
test
push
aad
aas
jmp
pshufw
hlt
lock
dec
(bad)
adc
adc
add
mov
fidivr
mov
xor
cmps
mov
(bad)
cld
or
call
int
ret
pop
movs
test
or
inc
jmp
adc
ret
adc
pop
fidiv
push
scas
sbb
pop
ficom
add
lods
imul
stos
std
push
test
xchg
popf
dec
pop
cmp
mov
mov
mov
cmps
cld
scas
outs
push
jmp
fs
mov
imul
ds
add
mov
and
ja
in
aad
adc
jno
cmp
mov
into
or
add
adc
mov
xchg
dec
jecxz
mov
pop
inc
(bad)
add
inc
or
cmp
aam
pushf
ror
mov
xchg
sti
inc
cmp
(bad)
test
repz
retf
imul
jmp
jg
mov
sub
lods
popf
add
shl
sar
cli
sub
cld
or
popa
and
jmp
push
jmp
imul
ds
out
or
leave
ja
sbb
mov
mov
xchg
mov
mov
test
retf
dec
mov
inc
fs
popa
out
out
int3
scas
call
(bad)
fild
push
fld
or
pop
or
lea
jl
and
dec
cmps
arpl
imul
ret
mov
test
mov
adc
cmp
jns
bound
mov
sti
sbb
iret
push
mov
cs
out
(bad)
cmp
or
or
(bad)
movs
sbb
pop
xlat
sbb
hlt
fs
adc
push
dec
sbb
in
jge
mov
mov
stc
enter
cmp
pop
xchg
test
stos
lods
inc
jmp
and
push
mov
out
cli
test
and
sbb
jb
xchg
cmp
inc
sti
cmp
inc
jmp
adc
repz
rcr
mov
in
push
sbb
pop
sub
xor
sbb
adc
outs
pop
shr
adc
push
mov
mov
fs
retf
rcl
test
retf
mov
stos
imul
push
out
stos
aam
mov
pop
pop
sbb
ds
push
xchg
push
inc
fnstcw
inc
push
lahf
and
lods
cmp
mov
dec
push
mov
jns
sbb
sub
jl
repnz
popf
loopne
push
fucom
fucomp
fstp
popf
shl
out
iret
mov
cmp
dec
jb
and
stos
rcl
ds
aam
je
pushf
cmc
lods
inc
push
and
sbb
mov
icebp
xlat
inc
(bad)
scas
leave
ficomp
add
xchg
add
mov
xor
xchg
mov
and
jge
mov
cmc
movs
mov
jge
bound
bnd
cld
fidiv
xor
cdq
ins
add
cmps
outs
add
jnp
sub
or
sbb
outs
mov
cmp
repz
into
inc
and
(bad)
(bad)
inc
gs
fstp
test
jb
dec
mov
push
retf
pop
es
imul
xchg
cmp
popf
add
dec
sbb
jbe
inc
or
sub
leave
(bad)
pop
cmps
adc
sub
into
add
and
js
(bad)
ror
test
popa
xor
gs
xlat
mov
jmp
sahf
jbe
retf
test
dec
mov
cld
cmp
mov
test
pop
sub
aaa
std
popa
fmulp
cwde
sbb
aaa
retf
adc
dec
dec
leave
sbb
aam
add
es
sub
les
inc
out
xor
mov
or
in
push
cmp
fstp
mov
push
push
rcr
and
xor
pushf
xchg
pop
jae
cld
adc
scas
mov
cmp
cmp
add
inc
mov
mov
hlt
sbb
int
dec
adc
or
jmp
xor
inc
in
stos
sub
jp
mov
or
das
scas
inc
lea
inc
push
loopne
push
sbb
mov
or
mov
nop
imul
push
(bad)
xlat
data16
jle
add
test
daa
cli
test
imul
dec
adc
or
xchg
mov
xor
(bad)
rcl
in
std
fist
sub
sti
fistp
xchg
bnd
mov
mov
and
pop
xchg
dec
popa
or
mov
ins
pop
call
push
push
std
lds
xchg
daa
(bad)
mov
lds
cld
push
fprem1
xchg
mov
add
sub
or
sbb
sub
shr
push
xchg
jmp
jl
(bad)
mov
xlat
mov
hlt
arpl
jne
cmp
fild
popa
push
jae
call
xor
pop
ret
(bad)
jecxz
mov
adc
mov
pop
rcr
and
sub
cmp
js
adc
cmp
push
bound
(bad)
add
and
ins
xor
cmp
cmp
and
fild
jmp
jns
clc
jmp
xchg
jg
pop
mov
and
arpl
sahf
das
sbb
das
shr
loopne
inc
loopne
inc
daa
add
xor
enter
test
popa
xchg
sbb
aaa
sbb
pusha
xchg
push
jbe
imul
inc
push
pop
test
pop
cmps
xor
pop
je
inc
mov
mov
adc
icebp
call
jge
jl
out
inc
mov
aas
inc
mov
jmp
cdq
lods
inc
fisttp
or
mov
jns
sbb
cmp
push
(bad)
jmp
add
cmp
add
in
xchg
cmc
rol
pop
pop
cmp
pop
mov
pop
aam
inc
dec
(bad)
push
xchg
stos
mov
mov
lods
xor
jo
loopne
push
cmp
std
ficom
mov
stos
vpmulhw
nop
push
test
loop
add
inc
retf
pop
idiv
mov
fmul
vmovss
mov
mov
ins
imul
xchg
cli
rcr
cmp
inc
daa
sub
inc
call
repz
mov
ins
shr
mov
add
inc
add
repnz
mov
mov
mov
jl
mov
scas
push
mov
aad
int
ja
xor
mov
lea
aad
sub
xchg
cmc
popf
bound
mov
or
pop
sar
push
es
nop
xor
lods
adc
fldcw
movs
addr16
loope
test
xchg
scas
loope
mov
neg
sub
dec
mov
jo
sub
push
sahf
jne
mov
(bad)
out
je
sbb
and
push
mov
imul
lock
mov
cmp
repz
dec
test
xor
jns
popa
or
call
mov
mov
dec
pop
cld
push
sbb
jp
imul
mov
adc
ficomp
fst
mov
in
into
lock
xchg
pop
mov
outs
inc
jle
cli
push
push
mov
lea
cdq
sbb
imul
jle
imul
dec
test
outs
inc
repz
lods
shl
push
sub
mov
mov
out
mov
ins
cld
loope
dec
pop
pop
mov
stos
pop
cmp
sbb
or
pushf
out
pop
mul
fdivr
mov
inc
inc
pop
out
inc
dec
xor
mov
cmp
scas
lods
cmps
sbb
(bad)
enter
xchg
in
jmp
jg
imul
lahf
or
or
shl
js
mov
mov
xchg
movq
iret
inc
pusha
rcl
push
fmul
ret
mov
(bad)
jnp
outs
push
repz
cli
ins
push
push
or
adc
add
inc
or
xchg
mov
cmp
js
sbb
mov
and
or
shl
and
sub
fild
fcmovnbe
retf
retf
in
int
mov
or
sub
jmp
xchg
or
sub
bound
nop
call
xchg
loop
push
push
cmc
ss
stos
inc
ss
push
xchg
jmp
mov
into
add
mov
and
cs
sbb
imul
mov
cmps
mov
scas
or
sub
leave
icebp
ror
jge
mov
adc
mov
xor
sbb
aad
cmp
sub
xchg
jmp
int3
push
mov
fldenv
add
adc
ficomp
clc
jne
out
fstp
sub
imul
push
mov
dec
ret
ins
jb
not
ja
jb
dec
add
xor
push
out
sbb
(bad)
inc
dec
sub
les
jns
xor
shl
pop
pop
mov
ret
mov
sub
(bad)
movs
les
adc
add
movs
(bad)
sub
push
in
fisub
cmp
or
dec
inc
sti
retf
xchg
stc
inc
push
daa
int
add
pushf
add
loop
jo
das
add
les
xchg
or
(bad)
push
adc
xchg
inc
cmp
mov
jo
jg
xchg
mov
or
push
jmp
or
outs
and
add
xchg
push
out
sti
inc
jle
call
mov
push
adc
mov
dec
cs
jmp
out
or
xlat
or
and
adc
ins
xor
cmps
and
outs
inc
repnz
or
xchg
mov
adc
(bad)
cwde
fcmovne
jecxz
mov
mov
out
das
in
push
sub
push
push
mov
outs
xor
add
aaa
inc
cmps
call
pop
shl
xchg
and
mov
call
mov
out
jle
jle
mov
sub
jecxz
fbld
dec
js
sub
repnz
bound
jmp
call
dec
cmp
icebp
lods
cmps
lea
and
mov
xchg
outs
mov
or
mov
les
xor
mov
mov
(bad)
cld
in
mov
push
out
and
out
mov
ins
xchg
cmp
pop
xlat
clc
inc
jb
adc
and
inc
stos
cli
xor
push
or
dec
jl
sub
outs
scas
scas
retf
dec
ja
cmp
mov
mov
cmp
mov
jmp
push
outs
or
xchg
inc
(bad)
adc
push
mov
shl
inc
int3
pop
arpl
(bad)
das
mov
xor
push
fstp
fld
push
add
int3
xchg
mov
push
push
int
shr
jb
fidivr
out
mov
movups
repz
loope
repnz
stos
jmp
cli
aaa
lods
mov
popf
aas
pop
mov
or
jbe
mul
inc
(bad)
(bad)
fcmovb
add
pop
shl
pop
jecxz
rcl
xchg
mov
aad
dec
lea
pop
dec
ds
mov
aad
imul
sahf
mov
jle
test
pop
fcmovnbe
xchg
add
sub
lods
ror
(bad)
cwde
add
loopne
in
out
(bad)
sbb
inc
cdq
xor
test
xor
inc
test
pusha
xor
mov
jmp
push
(bad)
mov
js
cdq
jne
cmp
popf
mov
or
cwde
xchg
push
mov
loope
xor
std
push
add
sub
gs
mov
xchg
jg
xchg
and
inc
cmp
and
pop
push
push
mov
iret
dec
and
outs
sub
out
jp
jb
push
jae
mov
in
std
stos
lock
scas
cld
int
inc
(bad)
add
or
iret
xlat
fwait
and
sub
jg
(bad)
enter
jge
lea
pop
mov
mov
sub
sti
in
inc
faddp
inc
ins
jb
pop
pop
pop
xchg
mov
xor
dec
or
add
(bad)
mov
scas
inc
sti
xchg
xlat
mov
movs
mov
lds
pcmpgtd
gs
lods
test
movd
dec
mov
xor
sub
jp
pop
xchg
loopne
es
icebp
iret
and
mov
scas
lock
pop
lea
retf
adc
test
add
dec
adc
test
mov
adc
push
cmp
inc
cmp
call
fstp
iret
xchg
ss
lds
jae
pusha
push
xlat
pop
pop
scas
sar
mov
mov
jb
mov
xchg
pop
mov
or
(bad)
fdiv
jnp
mov
stos
call
sub
dec
sbb
push
dec
outs
xchg
(bad)
mov
push
retf
sbb
mov
inc
movs
add
lea
and
scas
push
mov
xchg
xor
outs
inc
lahf
mov
xchg
mov
fwait
pop
mov
aaa
movs
aad
jecxz
or
adc
cmp
retf
(bad)
into
or
and
jnp
sahf
cmp
push
lahf
lds
hlt
jmp
push
and
mov
mov
stos
mov
add
sub
xchg
push
push
test
xlat
lea
shl
xchg
shl
xchg
ins
jmp
mov
movs
aam
scas
xor
repnz
les
push
and
sub
push
dec
jbe
jge
mov
inc
sahf
xchg
xchg
bound
pop
stos
pop
imul
pop
jno
inc
aas
dec
push
(bad)
fcmovnb
cmp
add
add
scas
sbb
cld
leave
nop
icebp
push
add
mov
repz
mov
xchg
pusha
jnp
cdq
cmc
push
inc
mov
mov
in
hlt
cs
loopne
mov
retf
pop
xchg
inc
popf
and
inc
std
gs
mov
test
in
gs
xlat
(bad)
adc
xchg
mov
mov
pop
aaa
in
pop
pushf
mov
push
push
lea
das
jmp
cmp
or
mov
pop
call
mov
push
fs
push
into
daa
ins
jle
call
inc
stc
mov
lods
inc
cwde
rcr
es
out
sbb
mov
adc
inc
pusha
rcl
xchg
scas
push
ds
mov
jp
add
push
xchg
ins
sub
jg
and
sub
fs
aad
enter
(bad)
xor
mov
xchg
(bad)
jmp
cmp
or
adc
jae
adc
pop
mov
or
outs
or
add
cmp
sbb
sbb
mov
data16
jno
mov
xor
lahf
inc
mov
lds
mov
cld
add
jbe
cli
(bad)
jg
mov
jmp
jo
mov
mov
sbb
movs
adc
or
stc
inc
and
cwde
and
shr
loopne
or
push
stc
in
out
mov
jno
mov
xor
iret
push
jmp
(bad)
mov
out
and
test
sbb
ret
sub
push
mov
mov
jmp
je
push
cdq
fs
stos
xor
je
jmp
in
lods
test
cld
or
imul
rcl
rcl
mov
fidivr
call
jge
clc
cs
int3
mov
adc
jp
clc
xor
call
daa
rcl
lods
adc
outs
xchg
retf
aam
mov
ss
popa
movd
shl
test
add
adc
cmp
pop
and
or
into
add
stos
jae
mov
loop
inc
sbb
xor
mov
add
mov
lods
xor
out
mov
or
and
ins
cli
rcr
scas
jns
cmp
xchg
mov
inc
pushf
and
jecxz
push
test
xchg
pushf
mov
mov
setno
loope
call
sbb
sub
and
enter
movs
shl
sub
and
mov
cmps
pop
sub
icebp
data16
std
inc
ins
inc
add
test
ins
mov
loope
jp
add
and
or
or
sar
xor
adc
xchg
add
add
sub
sbb
rcr
xor
mov
out
hlt
cmp
retf
or
mov
dec
adc
adc
mov
add
push
inc
movs
adc
out
outs
cdq
fistp
out
sub
dec
inc
cmp
mov
and
jge
jecxz
pop
push
mov
jmp
inc
es
jo
stos
adc
sbb
cmp
es
jge
push
mov
add
adc
push
pop
cmps
cmp
out
xchg
lea
or
stos
rcr
jne
pop
pop
ss
and
scas
aas
xchg
loop
popa
cmp
cmp
add
out
sahf
mov
adc
sbb
ds
push
dec
pushf
adc
cmp
aas
pusha
rcr
push
retf
push
dec
mov
mov
xlat
out
inc
and
jmp
in
call
pop
mov
test
xor
mov
inc
xchg
popa
sbb
out
icebp
push
mov
inc
jp
sbb
stos
xlat
loop
cdq
in
repnz
push
mov
sub
ja
pop
and
adc
es
popa
pop
jmp
mov
lock
cmps
test
pushf
int3
inc
imul
stos
cli
cli
jle
and
mov
mov
pop
pop
rcl
xor
sub
inc
repz
mov
cmp
push
mov
mov
mov
cwde
je
pop
fsubr
or
stos
movs
stos
and
cmc
sar
pop
fadd
mov
(bad)
jmp
jno
add
aam
cdq
cmps
inc
call
add
mov
or
loopne
data16
pop
addr16
adc
or
and
(bad)
push
push
xchg
dec
in
jge
sbb
push
ins
loope
loopne
movs
leave
test
cmp
and
hlt
jbe
inc
sbb
out
fwait
test
and
pop
inc
lods
test
mov
xor
stos
ins
sbb
lods
aas
xor
loopne
fnsave
sbb
daa
sbb
inc
sub
push
(bad)
das
enter
xchg
xor
inc
jp
ss
popa
(bad)
push
mov
lds
adc
jns
mov
jnp
and
std
mov
and
add
pop
shr
inc
retf
je
or
push
sub
cmp
mov
lds
push
pushf
add
idiv
icebp
stc
fwait
jg
rol
(bad)
xor
mov
dec
dec
ds
jno
push
movs
dec
dec
xchg
adc
test
and
inc
sub
xchg
mov
sbb
js
leave
adc
mov
sub
xchg
outs
adc
and
inc
enter
clc
das
sti
mov
xor
jnp
inc
and
push
xor
aaa
jbe
cmp
das
fsub
jnp
or
sbb
jmp
pop
adc
stc
(bad)
enter
mov
mul
xchg
add
mov
retf
fimul
mov
enter
xor
and
cdq
xlat
stos
or
aad
or
cdq
xchg
xchg
cmc
mul
cmp
jne
movs
xor
cmp
xlat
cmp
cld
fild
inc
cli
mov
jns
data16
xchg
jmp
hlt
add
add
xchg
ds
test
(bad)
xor
test
dec
inc
ds
or
mov
sub
xchg
ds
imul
push
dec
test
push
and
fwait
xor
push
cmp
add
xor
sbb
inc
dec
ret
ins
pop
int
dec
cmp
cld
loop
jae
xor
repnz
cmp
jb
mov
push
retf
jb
or
cs
pusha
je
call
xor
rcr
sti
mov
or
rcr
mov
cdq
leave
pop
repz
cmps
(bad)
ret
xor
jmp
or
xor
into
repz
sar
inc
sbb
in
mov
push
dec
dec
sbb
mov
jb
mov
inc
dec
out
dec
xchg
jmp
xor
sub
stos
mov
pop
fcomp
sub
sub
jmp
xor
dec
mov
sar
pop
jp
cli
retf
lods
clc
rcl
pop
push
ins
ds
aad
pusha
das
test
dec
mov
js
ins
mov
add
push
add
push
out
cmps
pop
out
int
cmp
or
mov
xor
push
(bad)
jg
and
in
cdq
repz
mov
push
nop
cmp
mov
fwait
push
dec
pop
fisttp
xchg
dec
std
into
inc
mov
xchg
inc
les
lods
pop
scas
and
xor
jnp
push
pop
sbb
inc
(bad)
movs
loope
mov
mov
cdq
test
sahf
sbb
loop
ret
sti
popf
cmp
inc
in
mov
jl
jne
imul
hlt
out
pop
or
push
cmps
out
sbb
push
mov
pop
xchg
scas
das
cmp
push
ds
icebp
jg
jne
dec
popf
sub
sub
(bad)
inc
jo
(bad)
pop
dec
fdivr
in
xchg
mov
add
jl
jne
pop
fdiv
pushw
push
mov
xor
int3
xchg
dec
add
test
lds
adc
mov
mov
je
rcr
mov
stos
jle
mov
sub
adc
ret
scas
popf
add
inc
mov
popf
mov
enter
imul
call
xchg
leave
sub
add
icebp
ficomp
loope
push
in
pop
adc
stos
and
dec
add
mov
lea
xor
cli
pushf
loop
test
push
pusha
dec
jnp
sbb
jle
into
jo
stc
mov
cli
and
mov
not
fdivr
pop
sub
xor
scas
xchg
clc
mov
xchg
cmp
or
mov
sahf
mov
jo
outs
pop
out
cmp
sbb
mov
scas
mov
stos
cmp
push
fwait
or
xor
fisubr
ret
nop
(bad)
retf
xor
movs
mov
cmovbe
jno
sub
hlt
bnd
enter
sub
cmp
pop
mov
pop
cs
adc
fidiv
icebp
add
jle
enter
aad
call
jns
call
cmp
lahf
jae
add
out
popa
jp
ret
(bad)
pop
addr16
out
pop
and
fisttp
lds
cmp
loop
pavgw
in
dec
mov
daa
or
mov
popf
push
fcom
or
push
or
push
jmp
stos
fwait
dec
sub
dec
sbb
repz
adc
push
test
pop
cmp
fwait
or
push
and
pop
(bad)
leave
mov
adc
and
dec
push
(bad)
fwait
push
dec
mov
and
popa
cmp
mov
or
jae
ja
mov
mov
in
push
gs
inc
dec
xchg
dec
out
movs
mov
test
cwde
jnp
or
movs
sbb
outs
jmp
fisttp
jmp
and
sbb
or
cmp
ja
adc
mov
pop
push
jle
jns
xor
pop
(bad)
lods
sahf
or
xor
jp
cmp
cmp
stc
jge
mov
pop
mov
cmp
sbb
mov
lea
adc
xchg
inc
or
jmp
dec
xor
adc
test
mov
ss
call
inc
popf
gs
mov
test
dec
int3
sahf
retf
movs
pop
xchg
mov
mov
stos
jb
and
jl
dec
jae
inc
mov
push
test
test
mov
xor
and
ja
fwait
mov
imul
xor
mov
push
inc
stc
sahf
mov
sbb
push
sub
data16
jo
sbb
in
inc
cwde
mov
mov
ja
pop
dec
ja
or
aam
(bad)
jmp
leave
or
lock
imul
xchg
xlat
repz
push
cwde
sub
or
sbb
jp
cmps
xchg
arpl
(bad)
sub
mov
pop
mov
xchg
rol
mov
pop
dec
sbb
imul
add
xor
mov
fbstp
outs
push
mov
js
dec
push
scas
repz
xchg
push
outs
into
or
test
jmp
or
or
ds
pop
lock
xchg
push
pop
in
loope
push
(bad)
stos
bound
stos
aad
mov
cs
fst
cmps
lods
es
and
in
sbb
adc
sar
daa
fimul
test
push
ficom
mov
mov
sbb
mov
and
lds
jl
xchg
push
cmp
jg
xchg
cmps
push
push
adc
dec
idiv
repz
test
push
xchg
cld
fistp
and
cmp
mov
inc
xchg
add
xor
dec
stos
mov
xor
push
popa
cmp
xchg
dec
xor
inc
call
add
enter
outs
loop
jne
pop
or
mov
dec
imul
lahf
or
pop
loop
int
(bad)
fstp
pop
inc
jg
mov
xchg
mov
xor
jmp
jae
div
dec
mov
and
or
xor
sahf
repz
mov
pop
xlat
(bad)
popa
dec
sbb
add
mov
stos
imul
mov
inc
hlt
movs
dec
shl
test
std
repz
inc
and
into
sub
dec
push
in
shl
(bad)
mov
mov
add
jge
and
pop
loop
cmp
adc
in
or
ret
dec
and
dec
sub
pop
mov
pusha
cwde
dec
bound
cwde
pop
hlt
mov
popf
ja
add
(bad)
test
and
in
adc
mov
js
call
sub
xor
mov
xchg
repz
jne
inc
inc
aam
or
push
retf
cmps
addr16
hlt
add
out
rcr
test
ror
loopne
adc
ds
ja
jne
pop
cmp
pop
dec
pop
sbb
mov
outs
and
mov
add
pushf
mov
and
call
push
mov
dec
cmc
fs
sub
inc
int3
popf
xor
mov
lea
rcl
push
inc
sub
aam
jmp
xlat
in
dec
rcl
sbb
xchg
cmp
adc
fld1
pushf
mov
retf
pusha
mov
push
fmul
mov
pop
mov
les
mov
dec
in
aaa
mov
xor
shl
dec
pop
pusha
push
sbb
jo
in
and
lock
add
aaa
aaa
out
call
clc
retf
test
or
adc
mov
ret
pop
sub
scas
cmps
push
push
inc
test
inc
stos
cmc
or
cmp
jle
and
sar
dec
je
pop
mov
and
out
mov
mov
cli
aaa
fsub
mov
scas
out
adc
jmp
outs
add
repnz
inc
add
and
sbb
dec
std
aaa
mov
retf
xor
sub
mov
push
adc
mov
outs
in
jge
aas
jecxz
ins
xor
pusha
jae
xchg
dec
popf
inc
push
daa
shl
idiv
sub
ret
retf
mov
stc
nop
jle
cmp
push
jne
lds
je
(bad)
jb
dec
sub
mov
xor
mov
iret
dec
nop
cdq
jne
popa
ins
sub
frstor
leave
pop
xor
aam
and
push
push
inc
cmc
loope
push
scas
sub
out
call
cdq
call
lods
dec
cmp
xchg
outs
mov
push
pop
daa
gs
cli
ror
xor
jb
fistp
stos
mov
mov
mov
call
push
(bad)
out
inc
mov
outs
(bad)
sub
pop
sbb
int3
bound
and
mov
scas
or
push
fnstenv
xor
cmp
jmp
fsubr
movs
and
xor
add
fwait
pop
add
out
scas
xor
jbe
jns
mov
retf
aam
not
clc
cmp
push
cmps
gs
push
pushf
(bad)
push
ss
imul
sub
mov
ficomp
call
loopne
xchg
cmp
es
sub
fnstenv
jnp
out
and
pop
jns
mov
mov
and
cmp
jmp
leave
pop
mov
imul
stos
mov
aam
cmps
out
imul
mov
push
or
loop
push
push
xor
dec
dec
stos
pop
mov
mov
mov
and
(bad)
dec
(bad)
mov
jge
inc
add
scas
aam
int
outs
in
inc
ss
or
es
and
sub
jmp
loope
clc
adc
cmp
xchg
(bad)
lock
imul
aaa
push
gs
push
test
push
test
xlat
(bad)
test
sar
retf
cmp
adc
mov
pop
mov
arpl
and
scas
mov
fcomp
ror
xchg
addr16
ins
and
sub
je
fisub
aam
inc
mov
ficom
push
loope
mov
ret
shl
xchg
jle
jge
jae
neg
pop
cmp
and
hlt
call
call
test
or
fist
lahf
jg
call
mov
neg
mov
cmp
mov
in
push
mov
outs
pop
cmp
sub
or
mov
jg
and
je
dec
out
sbb
jae
dec
xchg
and
cs
fstp
outs
mov
shl
or
sbb
fsubr
lods
sub
pop
or
cmp
clc
movsx
(bad)
lahf
sbb
int3
inc
cmp
or
stc
sbb
mov
in
loop
pop
xchg
ja
sahf
aas
adc
mov
push
or
mov
ja
movs
cmps
fwait
push
jo
shl
pop
cmp
xor
jb
pop
stos
clc
in
cmps
(bad)
jl
pop
fs
int3
popa
js
xchg
ret
push
in
repnz
aam
and
and
adc
sub
retf
and
or
inc
(bad)
neg
push
sbb
cmp
jl
ficomp
mov
inc
jns
xchg
sbb
fsubp
cmp
jp
sub
inc
inc
jle
sahf
add
mov
add
inc
mov
hlt
int3
inc
lock
and
hlt
cwde
nop
mov
popa
test
push
std
mov
sub
sub
xchg
cdq
in
test
jmp
sbb
and
rol
lea
fcom
dec
mov
gs
pop
jl
iret
add
add
bsr
sub
(bad)
aaa
inc
xor
pop
cmp
gs
sub
retf
leave
mov
jmp
jae
adc
xchg
mov
pop
mov
push
addr16
(bad)
movs
lods
and
inc
add
retf
inc
pop
cmc
lea
int
xor
sbb
pusha
not
pop
cmps
xchg
push
aaa
xlat
adc
data16
popa
aaa
xor
(bad)
aam
push
mov
push
add
(bad)
jnp
iret
int
mov
dec
sti
push
stc
mov
pop
lods
sub
repz
loopne
inc
xchg
(bad)
mov
fwait
mov
adc
pop
add
(bad)
mov
nop
mov
pop
ja
push
gs
pop
lods
sub
pop
mov
xor
sbb
pop
cld
leave
rcr
mov
inc
nop
movs
push
out
cs
loope
push
mov
jmp
or
int
fwait
inc
lock
das
cmp
lds
sbb
xchg
mov
aaa
push
dec
mov
jge
xor
retf
adc
and
aas
push
mov
lods
mul
pop
pop
inc
inc
dec
mov
and
mov
inc
(bad)
loopne
stos
and
shl
xchg
xchg
add
mov
jnp
mov
fwait
add
xchg
call
push
fidivr
xor
inc
sbb
lods
int3
das
stos
adc
in
xor
stc
(bad)
sbb
jno
mov
out
dec
in
nop
and
(bad)
pop
adc
shl
xchg
sti
mov
mov
inc
leave
xchg
das
repz
aas
mov
mov
js
inc
mul
cmp
rcr
or
adc
daa
mov
xchg
lock
xlat
mov
mov
(bad)
ins
sub
jmp
push
scas
pop
xchg
sub
dec
jecxz
jae
call
push
jo
fistp
lea
mov
imul
hlt
xor
mov
xchg
add
sub
aaa
add
xchg
or
(bad)
cmc
pop
outs
cmp
pop
inc
aad
aam
or
sbb
fisubr
mov
and
ins
gs
inc
jns
(bad)
jl
gs
sub
jecxz
inc
(bad)
loop
in
ja
xchg
push
xor
retf
push
std
cmp
cdq
inc
ds
maskmovq
neg
sbb
or
adc
mov
dec
jle
adc
fprem1
jecxz
into
mov
leave
inc
call
ins
xlat
(bad)
adc
stc
push
lds
jp
aam
cmps
sti
sub
mov
push
aam
das
sar
rcr
add
adc
sub
pop
push
ins
push
adc
xchg
mov
jp
nop
out
jmp
or
push
push
push
bound
pop
dec
add
jns
(bad)
ins
cmps
mul
dec
aaa
push
cmc
mov
or
inc
ficom
mov
mov
adc
dec
adc
movs
sbb
cmps
retf
mov
push
adc
enter
add
std
daa
mov
mov
adc
addr16
fisub
jo
sub
xchg
jl
pop
pusha
or
repnz
cmp
lods
fmul
or
stos
push
jnp
dec
(bad)
xchg
ins
pop
out
jne
xor
or
mov
js
lds
jb
xchg
dec
mov
push
call
bnd
mov
mov
mov
je
imul
shl
sahf
cmps
jae
sub
add
stc
orps
cmp
test
stos
ror
lea
ret
mov
es
sub
rcr
adc
fwait
push
in
jne
lea
(bad)
fiadd
cs
jecxz
(bad)
loopne
or
inc
push
pop
cld
push
es
pop
sbb
(bad)
dec
cmp
gs
cld
and
pop
inc
pop
lock
ds
aad
stos
cdq
rcl
(bad)
push
jmp
(bad)
stc
ins
xchg
loope
stc
in
idiv
popf
and
into
ret
jle
mov
pop
stos
and
push
xor
test
lods
and
mov
inc
pop
cmp
nop
movs
add
(bad)
mov
or
jmp
nop
iret
iret
adc
xlat
pusha
xchg
xchg
jle
and
mov
(bad)
dec
fstp
xchg
cmp
push
retf
jnp
sar
mov
inc
je
shr
int
in
popa
jae
jne
adc
sti
ins
pushw
jno
or
lock
xchg
mov
or
xlat
lds
ins
mov
les
pop
or
sub
pop
test
xor
pop
jbe
xor
sbb
ror
cmp
jl
pop
repz
cld
into
inc
sbb
test
xchg
movs
in
jmp
sbb
lahf
pop
into
cwde
enter
fwait
sbb
sbb
inc
sbb
pop
inc
pop
call
mov
mov
fmul
sub
dec
pop
shl
and
iret
mov
and
and
out
xchg
rcl
in
(bad)
les
outs
jnp
lea
lods
retf
sub
lods
adc
test
test
(bad)
dec
lock
push
ins
jecxz
popa
add
jmp
fcmovb
fadd
clc
dec
mov
xor
jb
sub
mov
data16
xor
push
js
add
pop
pop
int3
sbb
xlat
rep
imul
dec
pop
jne
xor
not
dec
js
ins
shl
cli
in
(bad)
mov
fwait
push
jl
push
gs
fidivr
addr16
dec
push
imul
repz
pusha
scas
cmp
movs
jno
or
loope
mov
mov
in
shl
mov
or
sub
mov
daa
jecxz
outs
pop
gs
cmp
mov
adc
xchg
mov
(bad)
verw
cmp
dec
loopne
dec
(bad)
dec
xchg
xor
fs
inc
lea
jns
lahf
rdtsc
inc
fwait
cmp
(bad)
adc
dec
sub
ins
sbb
jmp
jecxz
dec
jle
addr16
out
mov
aaa
xor
pop
dec
or
rol
xchg
jmp
push
or
sbb
ins
outs
xchg
rol
cmp
cli
xor
out
mov
adc
xor
test
jg
ret
push
xchg
cld
js
mov
dec
and
pop
or
pop
adc
gs
cld
dec
jb
shl
add
std
adc
sbb
fimul
mov
mov
pop
shl
mov
(bad)
retf
pop
xchg
ror
sub
enter
xchg
and
pop
pop
xor
mov
jae
fisub
or
adc
lods
mov
jbe
das
sub
pop
lods
sub
in
loope
inc
retf
inc
std
push
push
inc
in
cdq
cmps
fimul
mov
jmp
mov
cmp
sub
pop
mov
adc
sub
mov
mov
ja
sbb
scas
and
mov
in
cld
jmp
arpl
inc
push
or
and
add
jp
ret
(bad)
loopne
mov
inc
mov
shl
dec
cli
lea
das
mov
rol
add
popa
cmp
push
mov
xlat
retf
stos
cmc
repz
test
movs
(bad)
lea
or
jmp
das
sbb
lea
mov
mov
mov
test
adc
and
mov
adc
fadd
in
pop
popf
rol
test
mov
xchg
inc
pop
gs
lea
sub
mov
add
lds
xor
pop
mov
xchg
dec
pop
ret
or
jle
cmps
jns
cmps
mov
repnz
add
cmp
mov
jl
adc
xor
cli
sbb
cmc
lock
leave
ds
icebp
in
call
mov
aam
jbe
pop
inc
pop
and
enter
pop
or
cli
(bad)
and
jbe
clc
out
leave
jmp
loop
repz
mov
sbb
xchg
sub
aam
int3
mov
adc
and
push
sahf
dec
rol
cwde
jbe
xchg
dec
fdivr
push
ins
add
ss
mov
inc
pop
cmc
pop
inc
sub
pop
inc
push
call
(bad)
out
movs
xchg
xor
push
jb
mov
scas
fild
mov
pop
inc
lock
arpl
fst
mov
xor
in
or
push
and
fsub
out
fdiv
mov
mov
(bad)
jae
aas
mov
call
cmc
mov
daa
jns
and
or
or
xor
out
loope
inc
inc
sbb
mov
dec
int3
mov
fs
add
imul
mov
jecxz
sahf
xor
sub
pop
pop
dec
out
mov
mov
jbe
in
sub
(bad)
hlt
test
cmps
push
inc
outs
imul
addr16
jmp
cli
sbb
rcl
xchg
adc
inc
sub
mov
cmp
outs
or
sub
enter
jo
mov
popf
cmp
(bad)
in
rcl
(bad)
inc
jae
jg
adc
or
addr16
aas
xchg
into
push
sub
add
jo
pop
and
test
or
dec
push
adc
and
mov
bound
xchg
adc
adc
aam
pusha
(bad)
(bad)
push
fs
fist
test
push
icebp
loopne
aam
inc
xor
mov
sub
mov
cs
xchg
js
sbb
mov
mov
outs
out
adc
and
lock
cmp
fwait
jge
leave
mov
aaa
ins
sub
or
sub
pop
stos
enter
jo
outs
jecxz
cmc
adc
shl
scas
and
inc
sbb
push
xor
ror
enter
sbb
ins
popf
fwait
jp
test
aaa
ins
pop
mov
fst
(bad)
mov
pop
or
rcl
in
lahf
movs
push
mov
imul
imul
mov
xchg
fldenv
bound
jb
aaa
mov
or
imul
int
cdq
in
mov
movs
(bad)
xlat
sub
gs
cli
pop
in
push
out
xor
pop
inc
sbb
loop
loopne
mov
mov
hlt
push
cmp
jecxz
pop
jb
jbe
mov
pop
dec
sub
fidiv
add
dec
jecxz
imul
inc
stos
xchg
in
xor
retf
push
in
adc
out
ret
cmp
std
pop
neg
or
push
fidiv
mov
sbb
sub
or
pop
out
mov
xchg
or
pop
int
das
jns
lock
std
std
inc
xor
jle
mov
push
retf
and
inc
mov
pop
xchg
push
loopne
je
mov
push
call
xor
xchg
sub
outs
xor
adc
aaa
push
dec
pop
sbb
push
ja
and
and
push
cmp
pop
or
jo
fist
(bad)
in
mov
(bad)
gs
retf
add
xor
add
pop
iret
jge
or
out
cmp
(bad)
mov
cmps
rcl
stos
jecxz
pop
adc
inc
sbb
test
mov
sub
aam
out
xchg
popa
dec
or
push
pop
repnz
push
add
sub
add
xor
jle
call
jns
lock
xchg
xor
mov
xchg
mov
dec
pop
push
(bad)
loope
push
or
popf
lods
ja
inc
in
fnsave
into
cmps
and
in
push
adc
aad
jns
xor
jecxz
and
movs
mov
cmc
cs
jle
fcom
dec
in
xchg
add
stos
or
retf
loope
xchg
dec
popf
icebp
inc
adc
push
dec
jmp
pusha
adc
inc
push
fwait
mov
test
cs
fisubr
dec
push
std
or
push
xchg
push
push
fwait
rol
out
test
jle
das
aam
add
repz
loopne
lock
enter
jmp
outs
int3
pop
into
pop
ret
sub
xchg
shl
pop
ins
loope
dec
movs
aaa
adc
add
sbb
and
xor
pop
ins
mov
clc
inc
push
xchg
xchg
pop
jae
sti
arpl
jb
mov
fisub
cmp
add
outs
cmp
sub
mov
fsubrp
xchg
call
push
pusha
xchg
jmp
push
lock
or
out
stos
ror
leave
fwait
or
push
push
lods
mov
int
cmp
(bad)
push
popa
(bad)
(bad)
xchg
cmps
mov
fsubr
and
outs
(bad)
jle
in
js
mov
jl
mov
(bad)
xchg
movs
jbe
leave
(bad)
(bad)
mov
fcmovnb
mov
jmp
cmp
in
mov
jo
pop
pop
pop
mov
ret
loopne
es
mov
enter
rol
addr16
call
(bad)
movs
sub
sbb
mov
xor
aam
in
mov
sbb
xchg
in
ja
sahf
pop
push
xlat
jno
stos
ret
das
or
out
js
pop
out
idiv
pop
pop
and
fisub
aad
pop
in
push
add
add
mov
ficomp
sub
xchg
mov
pop
dec
pop
in
test
fbstp
out
mov
add
mov
(bad)
pop
add
lds
das
mov
inc
stc
scas
stc
aas
or
dec
cwde
mov
fistp
repz
ins
inc
or
div
adc
cmc
pop
fsubrp
mov
mov
gs
mov
inc
or
or
scas
xor
jg
ins
arpl
push
test
test
pop
sti
jbe
or
xlat
cmp
mov
xor
icebp
sbb
dec
cmp
and
cdq
xor
push
pop
retf
lods
pusha
or
lahf
in
cvtpi2ps
jmp
sti
mov
cld
(bad)
into
or
sahf
shr
call
mov
fcom
test
or
or
call
in
pop
cld
lods
rol
and
pop
dec
mov
std
imul
call
mov
imul
in
lods
jmp
pop
imul
je
sti
lds
mov
jmp
out
(bad)
sti
out
or
inc
dec
push
shl
fisttp
pop
add
lods
adc
dec
jne
dec
jbe
sub
movs
cdq
cwde
cmps
inc
ins
sbb
pop
loop
and
inc
shl
pop
cmp
lods
add
cdq
cmp
adc
xor
pop
adc
movs
aad
stos
mov
jmp
clc
xchg
out
(bad)
(bad)
cmp
sub
ds
shl
xchg
jne
mov
das
fsub
jmp
fdivr
xchg
inc
mov
out
fwait
push
(bad)
in
inc
dec
adc
xchg
dec
mov
adc
mov
stos
int
(bad)
out
xor
fadd
dec
add
sbb
inc
sbb
xor
jns
call
movs
lods
out
cmp
les
js
(bad)
adc
sub
mov
sub
pop
(bad)
js
aaa
push
cmp
addr16
daa
rcl
dec
(bad)
fcmove
adc
pop
cli
aas
out
in
in
ins
and
js
pop
mov
stc
out
sbb
mov
xor
add
idiv
xor
aad
in
cld
mov
jno
mov
and
mov
cld
mov
ss
inc
addr16
add
(bad)
inc
in
cmp
jnp
sub
(bad)
jns
mov
test
push
and
shl
inc
psubq
xchg
xor
leave
cmp
mov
sbb
xchg
(bad)
(bad)
sbb
ret
adc
gs
fsubr
add
(bad)
or
sub
jle
push
xor
jmp
iret
jae
imul
and
(bad)
adc
cmps
ret
les
sub
jle
sub
push
adc
mov
add
cdq
push
adc
pop
mov
xchg
test
mov
inc
mov
pop
popa
sub
xchg
call
xor
inc
cmp
jmp
jmp
lds
pushf
sub
test
dec
lods
xor
pop
dec
aad
sub
mov
or
dec
gs
cs
inc
jae
adc
je
lahf
push
out
es
xor
xchg
(bad)
into
jg
(bad)
mov
dec
(bad)
fdivr
sbb
or
hlt
jo
pop
sbb
cwde
(bad)
mov
sbb
mul
fdivr
(bad)
in
pop
mov
clc
scas
push
mov
pop
aam
(bad)
push
inc
pop
jno
and
pop
int
pushf
aam
fldenv
mov
or
rcl
imul
or
aaa
mov
(bad)
mov
(bad)
and
loop
aas
out
daa
add
fwait
pop
pop
inc
loope
bswap
out
jae
or
cmp
pop
out
pop
retf
popa
or
adc
clc
scas
and
(bad)
out
inc
ss
pop
push
cwde
rcr
leave
cmp
(bad)
dec
(bad)
shl
div
adc
mov
pop
arpl
pop
shl
push
outs
cdq
jp
test
sub
fdivrp
lea
test
jg
jns
push
inc
ins
sbb
fcomp
jnp
jecxz
lahf
jg
dec
xor
ins
call
mov
xchg
leave
and
mov
pop
mov
in
fimul
in
jae
xchg
sub
gs
mov
inc
je
xor
stc
dec
sub
pop
in
stos
and
and
fild
ret
out
jbe
push
xlat
jo
push
fidivr
outs
push
jl
stos
js
and
jl
pop
jae
xor
sub
mov
push
aad
push
imul
outs
lock
push
mov
jp
les
leave
mov
pop
dec
jo
loop
mov
cmp
mov
out
push
ret
cld
lea
add
jmp
pop
xchg
or
out
fwait
sub
and
jge
push
retf
aaa
mov
and
jmp
sub
sbb
adc
mov
rol
(bad)
cld
inc
pop
dec
cwde
mov
xor
inc
add
jnp
xchg
dec
jp
fcom
aam
not
div
leave
mov
popa
cdq
popa
inc
xchg
rcr
xor
leave
xchg
jns
out
sbb
aas
pop
in
pop
or
sbb
sahf
aas
clc
lahf
test
data16
mov
xor
push
and
mov
js
cmp
test
and
mul
add
sbb
or
pop
xor
mov
movs
pop
dec
sub
test
fsub
jecxz
or
lods
jo
dec
fmul
aaa
fild
enter
sbb
jecxz
stos
bound
and
cdq
or
jmp
mov
test
pop
in
cmp
dec
adc
cmp
enter
xor
mov
push
cmp
inc
ret
jle
retf
fstp
fs
mov
inc
jmp
sbb
jnp
push
cmps
loop
pusha
outs
fwait
es
movs
outs
xchg
(bad)
pop
js
sbb
sahf
stos
fsubr
push
inc
xor
jge
or
jle
or
add
call
rol
jns
and
sub
js
paddusw
push
jo
dec
hlt
cmp
adc
test
inc
mov
mov
sbb
mov
daa
lods
repz
mov
fadd
leave
enter
inc
or
add
or
pop
push
(bad)
jmp
push
lea
or
int3
push
outs
ds
sub
xchg
pop
imul
inc
dec
repnz
xchg
add
cwde
push
jge
sub
sub
test
cmp
lds
xchg
outs
pop
adc
ins
mov
mov
dec
cmps
frstor
popa
retf
mov
lahf
rcr
or
stos
sbb
push
add
mov
or
lods
loopne
push
in
fcomp
cwde
in
cmps
inc
mov
push
fidivr
fsub
jmp
mov
sbb
shr
ins
sbb
ret
fisttp
mov
sbb
stos
xchg
xchg
mov
sbb
test
pop
and
dec
inc
mov
cmp
dec
inc
pop
ins
dec
(bad)
bound
ins
xlat
dec
xchg
(bad)
into
cdq
ror
das
push
jnp
std
adc
or
push
add
sub
fsubr
adc
pop
mov
jnp
adc
mov
(bad)
scas
int
mov
enter
lahf
cmp
adc
int
rol
add
mov
sub
or
sbb
call
jmp
jl
or
lea
in
(bad)
fiadd
loopne
stos
shr
test
rcl
or
sar
stos
dec
xchg
push
cmp
repnz
and
mov
jns
and
movs
cmp
dec
xchg
lock
pushf
call
nop
xchg
jl
mov
mov
(bad)
fwait
aad
push
cdq
loope
pushf
loop
or
pop
jecxz
sbb
in
sbb
dec
xor
sbb
and
jnp
mov
fcom
imul
add
retf
rcr
in
ds
pop
fidivr
call
test
into
jno
ins
imul
xchg
jo
xchg
aad
ins
out
fwait
scas
and
stc
(bad)
shl
inc
sbb
mov
arpl
pop
mov
ret
xchg
mov
sahf
sub
mov
mov
imul
test
loop
lods
mov
pop
mov
test
push
xchg
pop
loope
rol
pop
pop
movs
dec
imul
xchg
adc
jnp
imul
push
fwait
add
mov
dec
push
or
cmp
push
ds
aad
rcr
jo
lock
in
inc
cmp
das
pop
or
mov
pusha
in
cmps
inc
(bad)
retf
repnz
retf
mov
adc
or
mov
xchg
and
xchg
outs
adc
clc
jg
add
and
in
add
int
cmc
mov
ror
pop
xlat
aaa
fwait
add
je
(bad)
dec
pop
jle
shl
cmp
cmp
mov
xchg
adc
cmp
jle
ror
push
jmp
loope
mov
xor
mov
lods
jle
pop
xlat
clc
in
add
cmps
lods
fsubr
jno
pop
cmps
sbb
scas
div
(bad)
xchg
mov
popf
cwde
aaa
mov
ret
mov
dec
ror
push
pop
sub
je
aas
jmp
cdq
lahf
aam
ds
iret
adc
push
jp
mov
mov
mov
push
lock
jle
pop
xchg
pop
call
(bad)
xchg
dec
mov
or
pop
inc
fdiv
imul
cli
mov
ror
dec
fisttp
inc
retf
cmp
mov
scas
lock
xchg
adc
scas
pop
jg
cmps
(bad)
(bad)
push
loop
or
push
repz
shl
in
xchg
out
dec
out
sbb
adc
pop
pushf
xor
push
jbe
pop
lods
shr
adc
adc
cmc
jge
je
jl
or
and
dec
push
mov
jmp
jbe
movs
pop
sbb
mov
fistp
xchg
xchg
mov
gs
add
jne
jg
xor
jnp
outs
(bad)
adc
jg
popa
mov
xor
push
inc
push
cmps
dec
mov
imul
jge
retf
xor
inc
clc
das
xor
and
jo
cmp
cmp
js
stos
ins
(bad)
data16
sub
lds
(bad)
mov
mov
adc
sub
movs
(bad)
pop
neg
jmp
sub
sbb
aas
or
repz
scas
lahf
or
sub
icebp
inc
dec
and
push
in
or
inc
out
mov
pop
push
loopne
jns
dec
adc
push
js
scas
iret
daa
nop
push
sub
dec
leave
jle
inc
ret
(bad)
lods
sbb
mov
lods
dec
mov
and
mov
or
xchg
jmp
in
jmp
in
jmp
(bad)
lds
dec
in
retf
xchg
mov
xchg
nop
mov
daa
(bad)
mov
or
sub
sti
js
div
icebp
mov
into
pop
push
mov
stc
dec
cmp
jo
not
cmp
mov
add
add
fwait
jne
mov
in
cmp
mov
xchg
lods
inc
mov
jge
aam
test
ror
aam
ins
push
mov
and
jo
xchg
popa
sti
push
fs
fwait
imul
mov
xchg
jg
jns
push
mov
dec
mov
inc
das
adc
cli
out
aam
pop
jecxz
dec
and
and
data16
retf
outs
add
mov
mov
pushf
out
pop
stc
mov
in
aad
cli
mov
sbb
mov
ins
cdq
push
jnp
and
jo
push
in
call
repz
jecxz
ins
sub
addr16
fldenv
addr16
fidivr
les
mov
dec
ret
pop
cmp
fisttp
iret
or
push
push
in
test
mov
cmp
ss
and
sbb
adc
call
jo
mov
xchg
mov
or
mov
out
cmp
mov
movs
mov
mov
sub
cmp
mov
lds
add
push
adc
xor
mov
ja
push
movs
add
fucom
mov
in
dec
jbe
or
mov
xor
adc
dec
add
sub
cmp
daa
push
and
lock
outs
adc
imul
sbb
out
inc
push
pop
sub
aad
cmps
and
push
aaa
push
sub
rcr
loopne
jne
bound
test
adc
push
rol
mov
cmp
cmp
push
js
add
jnp
ror
inc
push
(bad)
test
inc
and
cmp
jmp
ret
add
pop
test
cmp
sub
lds
ror
outs
int3
jmp
pop
test
movs
ficomp
mov
inc
stos
pusha
cmp
repnz
add
inc
mov
mov
sbb
jbe
jmp
loopne
or
push
sahf
(bad)
push
leave
push
mov
mov
push
ret
test
jne
sbb
mov
fist
jge
jle
push
int3
movs
(bad)
xchg
jmp
xchg
and
push
out
jmp
jmp
push
inc
sbb
jg
add
call
dec
inc
xchg
jg
jp
(bad)
xlat
pop
or
xchg
movs
hlt
les
(bad)
push
loopne
push
imul
pop
sbb
stc
inc
in
inc
aas
adc
push
in
mov
jbe
fcomp
nop
jbe
imul
cld
gs
push
mov
retf
lock
push
inc
cmp
pop
int
mov
mov
add
cmp
stc
and
add
rcr
mov
fxch
mov
aam
in
fcom
in
fidiv
add
lods
add
js
out
lahf
rcl
shr
call
jle
add
xchg
jb
sub
adc
adc
dec
fimul
mov
or
jbe
or
adc
mov
sahf
pop
pop
sbb
inc
xlat
jmp
mov
std
push
call
rol
adc
pop
pop
pop
retf
rcl
aam
inc
xchg
hlt
jg
stos
mov
retf
call
scas
sbb
or
shr
xor
(bad)
retf
dec
(bad)
out
pop
xchg
fsubr
cld
sbb
pop
jle
push
jno
leave
push
outs
xchg
test
pop
es
lock
sbb
inc
loop
dec
xor
push
jge
jg
aad
dec
cdq
dec
js
dec
(bad)
jbe
jle
cmps
push
int3
fsub
stos
mov
fild
xor
jp
mov
xor
jge
jo
div
cmps
jp
mov
fidiv
fs
jle
jmp
aad
jnp
fld
jge
es
jge
ds
dec
dec
loop
retf
stc
sub
mov
ficom
add
add
retf
push
push
mov
cmp
fimul
dec
pop
daa
je
dec
sub
or
push
repnz
inc
movs
sti
sbb
icebp
cs
mov
dec
jae
adc
mov
inc
arpl
aas
cmp
push
outs
push
cmp
movs
sbb
pop
mov
mov
sbb
add
mov
jne
fdiv
cmp
mov
lods
fdiv
test
jbe
pop
jne
leave
inc
lds
ds
mov
and
scas
or
out
mov
cmp
cli
test
lds
jno
pop
out
push
retf
imul
dec
add
mov
(bad)
xchg
xor
fild
jg
sbb
push
(bad)
js
gs
pop
xchg
mov
ret
je
push
lods
add
pop
das
sbb
js
shl
xchg
dec
mov
in
jp
fnstsw
mov
popf
push
adc
inc
movs
loopne
das
cdq
mov
add
cmps
jle
sar
cwde
int
mov
jle
inc
jg
pop
ss
stos
popf
lds
xor
lock
jecxz
sbb
adc
mov
ret
call
mov
xor
and
retf
mov
adc
and
lods
sbb
das
inc
jg
xchg
mov
(bad)
sbb
je
and
xchg
pop
mov
xor
cld
aam
mov
int3
inc
dec
xchg
out
mov
sub
enter
adc
fisttp
mov
xchg
inc
call
das
loop
mov
mul
call
popa
and
push
jnp
in
cwde
push
mov
xchg
or
retf
cmps
stc
int
and
mov
ret
int3
(bad)
(bad)
and
push
push
data16
inc
push
ds
mov
push
cmc
cwde
div
and
fdivr
push
clc
popf
lock
stos
mov
es
adc
ficom
jae
add
xor
or
cmp
popf
rcl
mov
imul
dec
jb
hlt
push
fstp
repz
cwde
imul
repnz
addr16
icebp
int3
into
mov
mov
mov
xor
pop
sub
xor
lock
mov
jmp
push
fimul
ror
loopne
das
arpl
mov
mov
inc
pop
fld
pushf
adc
mov
cld
push
frstor
loope
xchg
rol
mov
sbb
jge
xchg
adc
push
push
icebp
add
fst
xor
mov
bound
fild
ds
push
jl
in
lock
ret
pop
push
jns
repz
mov
add
call
mov
pushf
dec
enter
movs
sbb
mov
call
and
add
mov
aas
(bad)
mov
xor
pop
push
jbe
cmp
gs
cmc
or
out
push
mov
jg
in
xchg
sbb
mov
daa
lods
cmps
xchg
ds
cmp
fcmovnb
mov
add
ror
cli
cmps
mov
xor
inc
jae
and
pop
push
jns
fcom
cwde
xchg
call
pop
inc
loopne
pop
pop
ret
outs
pop
xchg
(bad)
enter
stos
pop
xor
pusha
(bad)
in
gs
pop
test
aad
dec
hlt
jmp
cmp
int3
(bad)
xor
mov
dec
and
(bad)
out
mov
sbb
addr16
cwde
sbb
and
sbb
in
jb
aam
push
cmp
ret
stc
fsub
jecxz
clc
fadd
mov
sbb
dec
outs
call
push
mov
stc
imul
adc
iret
xor
push
ret
adc
mov
mov
cld
push
fucomp
sub
mov
pop
sub
mov
les
add
inc
push
push
jl
inc
(bad)
pop
enter
sbb
mov
(bad)
arpl
cli
add
mov
cmc
pop
stos
hlt
mov
(bad)
xor
mov
idiv
cs
sar
xchg
out
movs
cli
mov
stc
std
call
inc
mov
dec
cwde
in
int
cmp
adc
add
mov
iret
mov
jbe
pop
mov
cmc
rcr
add
lods
xchg
(bad)
aam
mov
xchg
in
pushf
retf
scas
mov
push
enter
mov
test
jno
loopne
jmp
mov
mov
cmp
sub
and
fmul
add
push
xchg
xor
outs
popa
sub
xchg
sahf
ds
cmc
and
jbe
adc
push
enter
or
adc
into
adc
jne
(bad)
into
inc
fbld
pop
push
cmc
je
ror
xor
mov
push
mov
xchg
push
sub
inc
cs
test
and
out
stos
test
adc
loop
mov
fs
sub
mov
outs
mov
mov
inc
icebp
and
rcl
fadd
sub
pop
retf
mov
adc
adc
and
mov
or
push
into
add
outs
sub
push
es
or
jecxz
jne
jo
in
loop
sar
and
mov
mov
addr16
mov
icebp
push
lds
pushf
xor
mov
lods
mov
les
ss
out
rol
cdq
in
xchg
sbb
mov
and
sub
adc
btr
fisub
mov
dec
cmp
adc
push
sar
push
or
sbb
daa
fnstenv
cld
(bad)
cmp
sub
jns
xor
jg
js
outs
push
mov
pop
cmp
mov
push
outs
cmp
jle
not
nop
xchg
repz
nop
popf
cmp
mov
dec
stc
cmp
xor
test
jmp
scas
mov
push
or
lods
leave
inc
sahf
mov
cmc
sub
jl
inc
dec
jmp
cmc
bound
mov
adc
dec
cmp
mov
xchg
stc
push
dec
gs
dec
popf
das
xchg
mov
jnp
jp
pop
sub
stos
cmp
jae
fst
popa
xchg
call
pop
xlat
xor
lahf
les
sub
outs
dec
push
dec
add
out
adc
aaa
pop
push
les
and
adc
ror
mov
adc
jb
or
aaa
sub
out
in
xor
ret
enter
les
sbb
add
xor
push
add
ins
enter
leave
and
mov
cld
mov
inc
add
jo
repnz
lahf
adc
outs
lods
xor
xor
jg
movs
mov
mov
or
test
aaa
mov
repz
movs
dec
in
mov
cld
adc
ss
fwait
xor
inc
inc
pop
xor
repnz
mov
in
sbb
cmp
cmp
dec
jno
push
inc
mov
and
push
or
call
lock
jle
fs
cs
cmp
scas
push
xor
push
cmps
push
and
or
(bad)
xlat
mov
mov
xchg
in
xchg
es
add
sub
sbb
sub
enter
cmp
sub
pop
push
into
jmp
mov
push
js
or
pusha
cmps
xchg
lods
mov
nop
sbb
pushf
mov
js
mov
push
pop
xchg
ja
pushfw
in
xor
loope
or
inc
mov
aas
adc
xchg
fidivr
xchg
scas
sub
jl
in
xlat
test
add
outs
cmp
fdecstp
icebp
in
pop
dec
retf
xor
xchg
xor
mov
inc
sbb
into
cmp
(bad)
lds
cmp
out
icebp
jp
ror
fwait
cs
mov
inc
sahf
enter
push
pushf
jbe
cmp
ss
jmp
pop
cwde
nop
sub
lods
jb
cdq
xchg
ds
mov
retf
pop
aad
xchg
out
test
pop
je
inc
(bad)
int
in
fmul
jno
sti
repnz
and
mov
(bad)
call
out
sub
out
aam
sub
lods
push
sbb
or
mov
fnstenv
repz
push
pusha
movs
dec
shr
imul
test
pop
int
add
out
inc
mov
lods
xchg
inc
into
adc
pop
adc
mov
jno
in
inc
mov
popf
jno
addr16
movs
push
dec
gs
cmp
adc
pop
cs
cld
sbb
fcom
and
or
jp
bound
cmps
sub
pop
mov
fistp
imul
test
push
or
gs
pop
pop
mov
sub
loop
das
cld
inc
mov
lahf
dec
loop
pusha
test
sub
pop
mov
sub
lods
fcomip
int
lods
xlat
pop
pop
mov
movs
ins
xchg
mov
outs
ror
dec
in
push
sbb
jns
push
nop
ror
adc
js
mov
mov
std
mov
shr
test
popf
rcr
daa
cmps
call
out
loope
cmp
dec
jmp
push
cmp
dec
push
movs
dec
or
xchg
test
test
cmc
clc
lea
dec
arpl
mov
pop
loopne
in
cmps
xor
retf
rcl
(bad)
mov
mov
inc
rol
dec
enter
jecxz
push
jp
xchg
inc
lods
scas
out
aas
or
xlat
or
sbb
aad
pusha
nop
pop
xchg
adc
dec
mov
mov
xchg
ror
mov
adc
in
cmps
sti
cmp
cli
les
stos
inc
fs
adc
dec
mov
mov
js
add
jo
push
push
and
ja
mov
std
mov
xchg
outs
cmps
adc
jmp
shl
add
sub
sub
dec
mov
mov
cmp
(bad)
stc
push
dec
hlt
lahf
js
jno
pop
je
fistp
mov
mov
mov
ins
aas
aas
mov
lods
retf
ficom
dec
or
test
pushf
pop
aas
cmp
pushf
dec
fwait
push
retf
jnp
mov
ficom
push
aad
jb
test
rcr
lods
int
outs
(bad)
retf
add
add
jge
in
add
mov
shr
cmp
cmp
push
mov
loopne
xor
ja
arpl
fs
cmp
ins
mov
sbb
jbe
clc
fimul
jge
hlt
or
mov
jg
ds
jbe
pop
lods
in
pop
xor
fsub
push
pop
sbb
pop
int3
cmps
add
mov
xchg
push
xchg
add
cmp
pop
pop
push
pop
(bad)
std
add
sbb
nop
aas
jmp
aaa
jle
jle
mov
adc
pop
dec
xor
mov
retf
xlat
mov
jl
jge
mov
mov
mov
mov
das
pop
xor
lods
sub
out
and
cmp
out
mov
lods
jle
cmps
adc
loope
mov
cwde
push
gs
push
push
js
retf
and
in
sub
inc
push
retf
shl
movs
aas
ret
ffree
mov
push
pop
ror
lahf
leave
test
hlt
(bad)
push
push
imul
adc
jns
in
loop
sti
cmp
mov
retf
iret
rcr
add
jle
sub
jmp
jno
jmp
dec
(bad)
jecxz
inc
out
sub
(bad)
sub
cmp
(bad)
xchg
test
cld
aam
inc
movs
mov
loope
lahf
stc
jmp
pop
mov
into
push
jle
and
fnstsw
xchg
popa
rcr
js
clc
repz
sahf
push
mov
sbb
add
dec
cmp
fdiv
or
mov
in
jnp
xchg
(bad)
mov
mov
xchg
xor
xor
sbb
xchg
push
data16
xchg
popa
fisttp
or
dec
popf
push
movs
xor
xchg
mov
jecxz
mov
sbb
dec
xor
inc
and
pop
dec
mov
(bad)
out
inc
lock
dec
ja
xor
jmp
ret
inc
popa
pop
mov
idiv
dec
enter
retf
inc
es
cdq
pop
pop
fld
icebp
mov
aam
pop
shl
push
imul
repnz
sub
lahf
pop
push
or
xchg
mov
inc
ins
jg
push
test
daa
lock
je
cwde
or
fst
jae
and
loopne
cmp
adc
pop
test
rol
bound
mov
test
lahf
fs
rcr
xor
inc
mov
loopne
and
(bad)
pop
xchg
(bad)
push
fiadd
pushf
ins
aas
sub
(bad)
pop
mov
es
push
sti
cmp
sbb
or
pop
fsubr
push
push
lods
fnstenv
imul
mov
mov
pop
mov
rcl
shl
xor
call
add
xor
out
mov
mov
jb
loope
repz
sub
outs
lea
(bad)
mov
movs
fdivr
rcl
or
adc
fidivr
cmps
outs
clc
jmp
jecxz
(bad)
test
mov
pop
xor
shl
mul
or
rol
adc
call
popa
(bad)
cmps
test
sub
adc
mov
dec
add
inc
jmp
aam
add
fst
nop
dec
into
adc
(bad)
(bad)
or
es
sbb
or
cmp
lods
sahf
xor
and
ret
mov
dec
scas
jecxz
xlat
call
movs
adc
or
xor
mov
std
mov
cmps
outs
lods
jp
jno
xor
xchg
mov
mov
push
cmp
aaa
adc
repz
pushf
mov
dec
aaa
out
xor
mov
into
ds
push
icebp
(bad)
dec
fstp
(bad)
xchg
addr16
dec
aad
inc
xor
std
xor
movs
inc
sahf
xchg
mov
pushf
sub
sub
into
sbb
lea
cdq
std
lahf
xchg
ret
mov
jmp
jecxz
cmp
sub
(bad)
or
retf
rol
jecxz
adc
rcr
nop
mov
mov
xor
pushf
or
call
pop
dec
add
sub
cdq
in
es
stos
pop
mov
cmp
jno
das
xor
daa
or
outs
dec
cmps
jle
jmp
in
or
scas
and
in
loope
adc
add
iret
mov
idiv
test
and
adc
leave
mov
adc
mov
daa
call
sbb
cmp
sar
pushf
scas
xchg
cmp
cmp
adc
cdq
jl
xor
loope
rol
xchg
(bad)
xchg
and
inc
jle
in
or
scas
jae
movs
scas
shr
mov
dec
std
cmc
popa
idiv
jae
xor
cmp
jp
out
adc
into
addr16
fstp
rcr
out
dec
shl
mov
call
push
(bad)
push
pop
jmp
mov
xor
inc
sub
xor
xchg
mov
imul
mov
shl
out
or
test
repnz
stc
scas
sub
les
out
jnp
add
cmps
jg
pop
popa
or
inc
loopne
and
repz
fbstp
jnp
fucomi
mov
movs
dec
dec
(bad)
mov
scas
cld
cmps
out
inc
inc
ror
fld
xchg
or
in
pushf
cli
mov
js
mov
imul
pop
sub
xor
pop
ret
and
jl
mov
add
in
and
in
loope
and
daa
iret
cmps
in
les
jae
add
push
je
mov
jbe
jmp
adc
xor
daa
bound
cmp
or
mov
push
lea
ret
retf
push
aad
adc
sbb
stos
xlat
jbe
jb
xor
lods
or
mov
and
rcl
fcmovu
jbe
cmp
adc
cmp
adc
add
nop
push
sbb
enter
lahf
popf
add
dec
pop
stc
fxch
xchg
dec
pop
enter
sbb
pop
outs
cdq
fisub
cmp
fld
ret
into
or
sbb
xchg
or
sub
addr16
and
mov
loope
jmp
ja
std
loop
int
dec
lahf
jp
lock
pop
jecxz
pop
mov
jno
ror
push
add
ins
mov
cmp
aaa
add
cmp
mov
mov
leave
mov
leave
nop
aad
loope
into
mov
mov
lahf
(bad)
push
lds
cmp
ja
mov
movs
push
push
movs
or
hlt
rcl
cmc
test
sahf
fcom
sbb
pop
daa
pop
out
imul
add
cmp
mov
add
dec
fisttp
push
sbb
jae
mov
pushf
aam
neg
push
pop
cli
jb
imul
in
in
cmp
xchg
inc
pop
fs
jbe
cs
sti
mov
add
mov
pop
sub
enter
sbb
jge
js
add
cmp
mov
adc
into
cmps
sbb
xchg
sti
adc
test
and
fimul
push
mov
sbb
sahf
xchg
sbb
lods
jp
pop
mov
mov
(bad)
scas
stc
outs
mov
push
mov
jno
ss
adc
push
inc
pop
mov
add
pushf
shl
mov
adc
dec
fxam
scas
pop
or
mov
int
iret
dec
xor
cwde
mov
jg
jnp
scas
xor
pop
ja
or
fild
lock
jmp
mov
rcr
ret
jg
pop
sub
stos
jmp
std
pop
and
ins
aas
push
pop
or
sbb
push
out
fstp
mov
pop
xchg
xchg
fsub
or
sub
retf
psubsw
push
ret
inc
stos
xlat
js
push
sahf
mov
adc
dec
pop
jge
xor
jae
jmp
xchg
adc
or
push
scas
or
cmp
sub
xchg
xchg
or
inc
add
xchg
xlat
test
and
adc
test
dec
dec
call
inc
mov
inc
(bad)
ss
fwait
push
mov
mov
in
dec
data16
adc
xchg
and
pop
pushw
inc
and
pop
repz
adc
addr16
mov
cmp
stos
mov
(bad)
jnp
mov
mov
mov
adc
or
icebp
or
cwde
dec
mov
pop
fisub
mov
lds
gs
retf
fs
xchg
in
(bad)
xchg
jl
repz
frstor
xchg
std
cmps
inc
jnp
pop
sub
cmp
mov
cmp
cmp
cmps
xchg
cmp
xchg
lahf
ficomp
ins
xor
int
and
loopne
inc
xlat
xchg
sbb
pop
call
movs
test
test
shl
add
adc
xchg
jle
movs
les
or
mov
fsubr
and
retf
ins
in
shr
lds
cli
push
and
cmps
sbb
push
mov
mov
push
movs
push
mov
test
or
in
aam
(bad)
xor
jp
xor
retf
push
and
test
mov
jns
cmp
popa
div
std
test
sbb
sub
neg
adc
movs
stos
ror
dec
pop
jnp
push
(bad)
adc
retf
fisttp
push
xor
(bad)
adc
cmp
loope
jmp
jp
push
xchg
outs
rcr
adc
push
ins
sub
mov
(bad)
jo
aas
push
test
in
xor
adc
inc
cdq
stc
mov
add
fbstp
xchg
cmp
nop
cmp
add
getsec
enter
xchg
or
adc
int3
clc
push
or
xchg
jo
fnstsw
test
(bad)
repz
(bad)
xor
in
jle
mov
popf
lock
pop
ss
daa
xor
or
std
in
dec
fistp
or
mov
je
out
jne
mov
mov
aaa
shr
add
and
push
jmp
sub
add
test
sar
push
hlt
push
mov
or
fisttp
lds
mov
lock
mov
mov
mov
mov
ret
push
xchg
jecxz
or
movs
pop
and
jo
push
inc
ror
jo
sbb
mov
cmp
pusha
in
push
imul
pop
jecxz
inc
pushf
xor
jns
retf
adc
test
add
aas
add
and
or
ja
cmps
pusha
cmps
aas
sub
iret
arpl
leave
test
pop
xchg
pop
sbb
push
loope
mov
inc
sbb
push
mov
mov
inc
test
xor
pop
dec
jns
repnz
mov
sub
ins
cld
jne
(bad)
cmp
repz
ja
out
inc
rol
xchg
sub
dec
repnz
inc
test
ja
rol
pop
cld
fmul
aad
pop
pop
cmps
dec
jae
out
(bad)
xchg
jecxz
push
jge
gs
mov
ja
jp
fst
xchg
sub
push
sub
or
cwde
stc
sbb
retf
jnp
jecxz
cdq
jb
shl
push
repnz
jb
aam
pop
inc
jmp
mov
out
pusha
cmp
jbe
ds
lahf
ds
sbb
push
loopne
dec
cmp
and
test
xchg
jecxz
sub
add
(bad)
cmp
jno
xchg
outs
stc
push
mov
int3
ja
fstp
or
or
in
loopne
and
cmp
(bad)
std
rcl
call
lods
pop
jae
mov
mov
stos
push
jecxz
shl
adc
sbb
pop
xor
fdiv
sub
in
push
(bad)
(bad)
cmp
lahf
mov
adc
js
das
cmp
pop
adc
sbb
dec
jns
add
add
ds
mov
int3
stc
mov
xchg
cmc
xchg
call
ficomp
loope
or
outs
push
mov
xchg
jbe
add
mov
and
xchg
jp
xchg
out
jge
mov
adc
mov
dec
push
cmps
cmps
jmp
sub
in
add
push
xchg
fnsave
add
push
adc
push
rol
pusha
cdq
cmps
ret
add
push
adc
add
xchg
xchg
cmovnp
jnp
xchg
xchg
lock
movs
mov
cmp
jp
sub
dec
xchg
mov
cmp
jmp
out
popa
mov
cwde
pop
daa
in
sti
xor
(bad)
cmp
xlat
pop
and
inc
mov
ror
(bad)
mov
in
cmp
and
iret
mov
gs
movs
imul
lahf
xchg
cmp
xlat
jl
cld
adc
xchg
pop
nop
cmc
or
jb
mov
int
mov
dec
repz
inc
scas
add
rcr
aam
mov
mov
ds
neg
adc
mov
pop
int
dec
scas
jmp
popf
mov
cmps
std
cmc
push
pop
xchg
fsubrp
mov
inc
arpl
jmp
stc
add
jl
lods
loop
mov
ja
xchg
add
les
shr
leave
addr16
data16
inc
mov
jns
rol
push
iret
std
ret
out
test
push
test
jns
es
and
xlat
mov
mov
pusha
mov
shl
xchg
fdivrp
inc
push
pop
mov
imul
div
rol
push
sahf
mov
pushf
lea
(bad)
fwait
push
out
jg
into
enter
shr
je
xchg
in
cs
jo
fstp
add
add
int
sbb
cmc
stc
fstp
mov
ja
cld
jb
cwde
enter
dec
push
adc
jb
jne
fadd
mov
adc
xchg
pop
or
fisubr
addr16
push
loop
aam
(bad)
mov
mov
mov
sbb
cmps
and
xchg
jg
xor
jmp
push
popa
jo
jb
jne
xor
fnstsw
and
dec
adc
jns
sti
fwait
mov
cmc
das
fwait
jmp
(bad)
lods
pop
or
ret
jp
leave
mov
push
pusha
out
pop
outs
lock
sub
pushf
movs
push
int
(bad)
or
push
jg
mov
out
cmp
and
sbb
in
cwde
cs
dec
push
inc
sub
mov
ficom
fld
(bad)
pop
inc
mov
out
or
(bad)
jecxz
fdivr
pop
inc
push
cmp
add
lock
(bad)
mov
aaa
fstp
xchg
mov
and
ss
mov
jmp
fcomp
mov
dec
push
stos
or
xchg
mov
aad
sub
mov
mov
scas
dec
in
stos
push
push
adc
xor
(bad)
push
add
pop
jecxz
dec
aam
outs
scas
fstp
fwait
mov
or
mov
lods
ins
add
inc
xor
cmp
shl
mov
or
pop
and
mov
loope
lods
xchg
je
jmp
sbb
int3
cwde
mov
mov
and
jecxz
(bad)
sbb
out
jb
adc
int3
mov
mov
jp
adc
in
pop
mov
xor
fist
and
out
sar
or
or
mov
les
pop
sti
push
and
(bad)
cmp
clc
inc
xchg
sbb
dec
sub
mov
pop
into
outs
lods
test
jnp
dec
mov
pop
mov
mov
pop
mov
fisubr
add
shl
jne
cmc
inc
and
inc
cmps
jne
lahf
ss
jmp
jecxz
dec
arpl
mov
bound
mov
test
dec
or
pop
dec
jb
gs
pop
or
pop
rcl
jp
xor
rol
out
xchg
call
cmp
stos
adc
cli
inc
push
mov
push
aaa
pop
jp
movs
sub
pop
out
movs
xor
xchg
cmp
sti
jo
adc
out
cli
adc
sbb
ret
fdiv
bsf
and
test
push
rol
aas
cmp
stc
retf
ins
or
or
fmul
push
retf
jb
mov
ret
add
dec
cmp
mov
mov
sub
sbb
pop
loope
pop
(bad)
dec
clc
push
(bad)
mov
ret
push
iret
mov
push
inc
jp
sub
sub
mov
outs
dec
sbb
int3
movs
ja
and
pop
add
outs
push
mov
imul
dec
scas
jge
inc
adc
pop
stos
and
rcl
or
fwait
scas
fwait
pop
xlat
pop
xor
adc
hlt
bound
pop
(bad)
fptan
jb
sbb
mov
push
fst
or
(bad)
retf
lods
cmps
test
mov
mov
xchg
int
jecxz
mov
or
push
out
leave
cmps
pop
enter
iret
pop
push
leave
outs
or
jecxz
or
std
arpl
dec
push
pushf
mov
xchg
leave
test
in
ins
xor
jae
cmps
retf
rcl
pop
adc
or
cwde
xor
jo
repz
ins
push
out
dec
cmp
add
fidiv
add
push
pop
sub
mov
xor
jb
cmps
xor
mov
inc
dec
xchg
cmp
mov
hlt
neg
push
sbb
int
stc
sub
xchg
nop
iret
aaa
std
push
lods
sbb
je
(bad)
mov
outs
jae
jno
jmp
sbb
add
pop
cmc
movs
clc
bound
add
popa
std
stos
push
cwde
loopne
ins
cmp
out
xchg
out
jb
xchg
push
or
dec
fbstp
and
cmp
test
fwait
std
pop
pushf
mov
test
aaa
xor
mul
pop
scas
call
xor
jl
(bad)
into
test
mov
daa
dec
jmp
repnz
enter
adc
jecxz
test
movs
iret
inc
add
mov
mov
adc
pop
test
mov
aam
mov
mov
cmps
push
pop
outs
ds
push
es
pop
jle
in
add
xor
xchg
fidivr
movs
icebp
sub
xchg
cmp
(bad)
(bad)
xor
adc
ja
daa
xor
push
dec
popa
inc
test
fwait
cmps
or
movs
std
rcl
test
add
jno
inc
cwde
fs
pop
mov
stc
(bad)
retf
mov
mov
mov
imul
push
xor
fild
stos
das
sbb
out
jo
call
xchg
sbb
jmp
fsubr
cli
mov
pop
or
or
xlat
push
xchg
sub
xor
mov
adc
(bad)
push
mov
inc
(bad)
fs
imul
leave
cmp
repnz
fisttp
mov
push
mov
ins
(bad)
fiadd
mov
out
mov
mov
iret
enter
(bad)
fcom
repz
shl
xchg
div
cs
ret
imul
mov
(bad)
in
hlt
pop
sub
in
pop
and
ss
jne
lock
retf
jmp
or
push
loope
push
xor
and
mov
ret
rol
pop
clc
cwde
dec
aam
ss
retf
cs
addr16
ror
loopne
add
aam
(bad)
sbb
mov
mov
call
iret
push
cdq
inc
push
cmp
imul
fdivr
and
dec
xchg
jp
std
outs
push
cmp
cmps
cmp
add
ja
adc
pop
pop
cmp
shl
inc
test
aas
lods
inc
out
inc
in
xlat
imul
mov
adc
xchg
sub
sub
sahf
mov
fwait
jbe
sub
ret
imul
adc
mov
lea
dec
ins
popa
cmps
cmps
(bad)
dec
test
adc
hlt
cmps
fucomp
inc
pop
xchg
pop
or
xor
sub
aam
test
fist
jecxz
xor
jp
aaa
lock
bound
adc
std
mov
pop
inc
movs
out
shl
(bad)
jl
or
loopne
dec
inc
mov
scas
xchg
(bad)
dec
inc
dec
in
push
js
icebp
hlt
(bad)
mov
jne
popa
fs
(bad)
push
cli
aad
and
(bad)
jl
out
aaa
pop
mov
loop
jp
or
(bad)
xchg
add
pusha
mov
jnp
imul
rcl
loop
ja
out
mov
sbb
or
nop
shr
loopne
sbb
jnp
retf
pop
aaa
jp
repz
mov
arpl
xor
retf
sar
jo
fdivr
mov
sub
jnp
push
(bad)
sub
call
mul
ja
scas
lods
sbb
retf
jns
icebp
xchg
or
in
out
dec
test
mov
add
xchg
jl
push
adc
bound
retf
stos
adc
adc
push
pop
xor
add
mul
pop
cmps
pop
jg
push
call
pop
or
(bad)
fild
dec
jne
and
out
mov
outs
xor
shl
sbb
in
add
xor
adc
(bad)
pop
hlt
(bad)
cmp
cs
scas
mov
ds
mov
dec
jge
and
std
sbb
xchg
mov
mov
mov
int3
hlt
sti
ficomp
adc
xor
int3
pop
rol
dec
stos
test
inc
mov
jno
sub
std
add
daa
xor
cmp
mov
cld
dec
sub
dec
(bad)
add
dec
inc
sub
and
pop
clc
push
pop
mov
sub
inc
xor
ficomp
das
mov
mov
daa
and
pop
and
iret
mov
sub
scas
cdq
call
xor
push
sub
rol
ficomp
push
mov
retf
push
test
dec
movs
and
gs
pop
push
test
sbb
add
sbb
mov
repz
mov
add
sub
fist
movs
xchg
retf
mov
mov
and
jp
ss
shr
repz
pop
push
mov
xlat
cmp
loopne
mov
lea
out
mov
lds
jge
lods
(bad)
call
cmp
and
xor
push
shl
mov
loopne
cmp
cdq
stos
inc
cli
aaa
pop
sar
push
ja
inc
push
inc
fidivr
pop
mov
jg
shl
mov
popa
hlt
out
jp
jle
leave
xchg
dec
sub
mov
mov
xchg
sbb
fsub
inc
call
call
int3
iret
jmp
sbb
shr
(bad)
(bad)
cs
sahf
ret
into
jl
jnp
in
dec
mov
lods
dec
sti
adc
mov
movhps
(bad)
pop
xchg
dec
bnd
and
stos
xchg
shl
scas
cmp
test
cmp
mov
jnp
inc
mov
mov
inc
sub
rol
push
mov
imul
aad
pop
push
jns
mov
xchg
or
sbb
cdq
(bad)
cmps
fwait
outs
iret
pop
(bad)
push
shl
mov
call
outs
xor
je
adc
or
sti
cmp
adc
icebp
in
jne
out
jmp
(bad)
and
std
pop
retf
pushf
xchg
xchg
dec
repnz
push
xor
pop
sbb
inc
into
and
call
fild
mov
push
(bad)
pop
xor
xor
inc
aad
add
movs
ret
out
mov
add
fsub
outs
and
test
add
sub
sbb
xchg
cmp
test
int3
xlat
mov
test
or
mov
mov
jne
xor
addr16
in
xchg
imul
hlt
out
jecxz
mov
xchg
push
dec
in
xchg
sub
sbb
and
xchg
dec
icebp
jecxz
sbb
in
mov
inc
test
inc
mov
clc
and
sbb
hlt
pop
add
ins
sub
pushw
sti
lock
hlt
cld
pop
in
inc
sbb
adc
aad
adc
loop
pop
movntq
leave
push
pop
(bad)
in
mov
mov
sbb
jecxz
in
jo
xor
xchg
push
dec
loope
inc
sbb
jne
pop
(bad)
pop
push
fiadd
loop
pop
ds
add
retf
cmp
test
dec
sub
push
pop
push
pop
rcr
xor
dec
(bad)
fwait
imul
jecxz
mov
fiadd
movs
xor
lock
dec
mov
cmps
ficomp
stos
ror
ins
jbe
mov
and
jbe
sub
dec
or
out
retf
sahf
(bad)
adc
mov
dec
(bad)
loop
add
cmp
out
in
cmp
add
sub
sbb
inc
popa
add
adc
rcl
ja
inc
sbb
mov
(bad)
jl
mov
lea
lods
aaa
pop
(bad)
push
push
cdq
dec
mov
jg
enter
mov
mov
add
jnp
cs
xor
in
clc
add
push
rcl
aam
(bad)
ficomp
scas
iret
dec
inc
cmp
jl
pusha
xor
mov
dec
jecxz
jl
and
lds
jmp
test
jae
inc
je
push
js
inc
push
mov
and
in
add
cmps
(bad)
pop
push
retf
sbb
sahf
fld
les
inc
push
out
cmp
cmp
mov
int3
cwde
mov
out
std
repnz
mov
sub
cmp
and
mov
jle
and
mov
xor
xor
cmp
ffreep
(bad)
fstp
xchg
cld
int3
scas
sbb
movs
icebp
jno
(bad)
jnp
push
push
sbb
jge
push
mov
jp
jbe
jns
je
sub
cmp
mov
mov
add
pop
addr16
mov
jno
inc
data16
movs
mov
addr16
stc
sub
jl
outs
mov
out
test
mov
retf
adc
int
mov
leave
or
loop
and
fnstcw
pop
xor
into
retf
pop
add
cli
je
sahf
xchg
scas
bound
enter
mov
cli
movs
loopne
xor
sub
add
retf
jmp
mov
sbb
(bad)
xor
mov
cmp
rcl
out
lods
je
lods
add
std
push
xor
dec
sahf
nop
inc
pop
push
cmp
mov
mov
retf
mov
push
movs
add
jl
add
cli
icebp
adc
jmp
loope
cmp
hlt
or
sbb
mov
pusha
jge
mov
in
sub
sub
sar
sbb
xor
out
and
xor
pop
sbb
add
mov
add
dec
inc
or
outs
mov
in
(bad)
ss
pop
enter
daa
repnz
sbb
pop
xor
xlat
imul
les
data16
dec
mov
je
sub
inc
cmp
xchg
js
cli
(bad)
jmp
pop
movs
jl
call
adc
mov
add
sub
mov
push
adc
sbb
out
cmp
out
mov
bound
sub
aam
xchg
add
pop
pop
ja
dec
popa
mov
xchg
daa
into
aam
repnz
add
ss
cmp
pop
out
iret
mov
lea
mov
or
push
xchg
inc
je
fisttp
jmp
or
xor
mov
mov
das
xchg
js
test
push
es
pop
pop
jne
cmp
cmp
mov
pop
sub
push
mov
mov
mov
and
pop
pop
outs
push
xchg
jmp
dec
es
rdpmc
das
dec
outs
(bad)
imul
dec
jnp
shr
popa
mov
or
mov
sub
add
and
mov
inc
sbb
xchg
dec
loope
stos
test
pop
fdivr
aam
xchg
ret
call
push
jle
xlat
mov
(bad)
inc
je
inc
clc
jnp
int3
dec
jne
(bad)
aad
jno
pop
mov
fsubr
dec
shl
fdivr
(bad)
pop
mov
xrelease
out
or
sub
arpl
lea
fstp
mov
jae
cwde
js
sahf
fadd
xchg
adc
push
mov
pop
cdq
fidivr
dec
daa
popf
mov
jnp
and
sbb
cmp
xchg
lds
xchg
xor
push
bound
sbb
pusha
pop
(bad)
(bad)
fwait
xchg
ja
sar
mov
dec
pusha
mov
sti
cmps
jmp
outs
imul
xchg
inc
sub
mov
inc
emms
jmp
sub
popa
daa
pop
mov
mov
aas
jo
sub
inc
ins
jp
and
je
loopne
or
fisub
(bad)
std
out
jb
mov
stos
mov
jne
gs
dec
push
ror
popf
pop
xchg
shr
sub
xchg
ss
pop
js
pop
mov
mov
aad
das
xchg
push
sbb
pushf
dec
in
mov
stc
sbb
popa
aam
movs
jbe
outs
(bad)
jbe
lods
sbb
das
cmp
pop
lds
cmc
out
push
cmp
stos
mov
pop
jecxz
add
push
pop
push
cmp
popa
xchg
cmps
xor
popa
test
push
popa
cmp
inc
dec
js
mov
push
xchg
aad
aam
add
pop
cmps
shl
jge
repnz
pop
dec
hlt
push
js
sub
lods
int
jns
adc
push
xchg
fimul
nop
add
push
(bad)
scas
mov
add
xchg
and
popa
dec
mov
inc
in
ds
add
sbb
enter
and
lds
add
(bad)
jecxz
or
fidiv
aas
cdq
jno
ins
lahf
jp
icebp
jmp
sbb
sbb
push
in
mov
pop
(bad)
in
test
jle
mov
test
sub
push
scas
cs
js
repz
and
pop
lock
adc
or
push
push
jns
xchg
and
xchg
inc
pop
into
push
cs
in
out
push
adc
jmp
fdivr
pop
xlat
sub
movs
fisub
aaa
sub
gs
xor
xor
dec
int3
in
mov
adc
xchg
iret
adc
shr
(bad)
lahf
loopne
and
icebp
cmp
call
stc
hlt
ja
pop
dec
outs
mov
jb
add
pop
(bad)
aam
and
movs
xchg
cmp
shl
test
adc
out
pop
jns
cmp
dec
push
mov
xchg
cmp
jmp
out
sbb
and
ffree
mov
into
jbe
mov
ins
mov
out
xor
jne
adc
sub
adc
in
xchg
mov
and
sti
pusha
dec
sbb
cmp
dec
inc
mov
add
iret
jp
push
xor
out
pop
sub
jmp
daa
xor
pushf
push
sbb
fnstsw
in
std
or
mov
push
sbb
jns
mov
add
imul
pop
lea
pop
mov
sub
ret
jmp
push
inc
adc
setns
aad
push
mov
jbe
mov
and
mov
push
jno
sub
daa
push
mul
test
fucom
js
ja
enter
mov
fstp
adc
leave
mov
dec
repz
icebp
repz
or
push
call
adc
and
fld
fs
inc
push
jne
sbb
cmp
pop
add
data16
adc
cwde
mov
sub
sti
jle
mov
or
push
mov
mov
(bad)
xor
cmp
xor
stos
hlt
pop
loopne
or
sbb
fild
shr
mov
cmp
xor
jge
xor
and
rcr
aas
xor
pop
push
sbb
jbe
popa
(bad)
sbb
and
loop
mov
xor
call
dec
mov
sar
js
jl
in
loope
fucom
fs
mov
mov
shr
xchg
xchg
loop
add
int
retf
sbb
lods
arpl
mov
inc
push
cmp
push
and
mov
sub
push
sub
fsin
test
loope
lock
lods
lods
out
xchg
pop
(bad)
mov
xlat
xor
test
mov
rol
dec
pop
push
sub
(bad)
(bad)
adc
cwde
cmp
push
pusha
aas
and
or
(bad)
(bad)
in
or
push
and
std
lea
or
push
sub
lods
or
cmp
mov
je
pop
sub
adc
dec
rol
push
add
std
divps
imul
int3
loope
ret
imul
jmp
sbb
add
fdivr
sub
add
addr16
xchg
xchg
ficomp
aad
xchg
dec
imul
dec
int
retf
fs
cli
lds
gs
test
scas
push
(bad)
or
rcr
dec
push
mov
jmp
jmp
hlt
das
cli
jnp
sub
pop
mov
retf
les
push
std
or
icebp
int
retf
adc
in
mov
xlat
fnstenv
xor
ja
pop
sbb
xchg
mov
pop
mov
xchg
repnz
ror
popa
(bad)
dec
jns
ins
(bad)
ss
add
pusha
cli
jae
dec
cld
sub
sar
int
movs
cmp
fsubr
jecxz
and
push
addr16
ds
std
mov
xor
in
repnz
jecxz
hlt
inc
pop
les
cli
cwde
scas
loopne
fst
ss
lea
or
in
outs
pop
outs
std
scas
cmp
inc
movs
jecxz
out
fstp
sbb
mov
jecxz
pop
sbb
push
repnz
push
hlt
cmp
sar
cmps
stos
js
inc
mov
stc
sti
fdiv
add
aam
sub
call
mov
retf
pusha
enter
ja
aam
sbb
imul
xchg
xor
cmp
scas
ja
aam
xchg
retf
sub
rcl
pop
adc
loop
es
test
mov
pop
ins
or
js
dec
push
aad
mov
pop
and
jo
(bad)
iret
into
mov
out
loope
xchg
pop
cwde
jg
xchg
iret
pop
and
icebp
cmc
or
js
jno
or
mov
out
mov
(bad)
in
or
aam
mov
inc
mov
push
call
dec
add
int
push
push
cmp
shl
pop
add
dec
retf
xchg
movs
dec
or
movs
sub
mov
out
xchg
fiadd
pop
movs
jb
je
and
cli
test
inc
xor
imul
inc
cmc
icebp
fld
(bad)
add
in
call
cdq
sbb
test
push
push
dec
fs
adc
mov
pop
and
sbb
imul
sub
retf
lods
add
cdq
mov
push
fnstsw
test
lahf
daa
or
fwait
mov
xchg
jns
test
inc
addr16
xor
stos
iret
or
das
mov
das
cmp
icebp
in
mov
clc
fimul
movs
push
aaa
sbb
iret
repnz
sub
cli
stc
mov
adc
cld
mov
fsub
movs
sub
retf
xchg
ins
jno
cwde
pushf
cmp
push
inc
sti
stos
std
push
jns
xchg
outs
inc
or
sar
and
fistp
add
or
add
movs
mov
enter
fwait
enter
xor
jo
mov
inc
mov
cwde
dec
cmp
(bad)
popf
dec
mov
dec
or
jp
lea
mov
pop
push
xchg
push
pop
xchg
push
das
aaa
mov
sub
cmp
mov
lfs
xor
jbe
jnp
cmp
daa
and
sub
enter
jge
(bad)
test
addr16
add
adc
mov
mov
fimul
xlat
mov
dec
or
mov
rol
xor
pop
xchg
dec
push
jmp
xchg
dec
(bad)
jmp
retf
mov
mov
and
sbb
jo
hlt
cmps
xor
fdivr
jbe
lea
arpl
push
imul
cmp
cmp
xor
(bad)
stos
retf
mov
sub
xchg
rcr
xor
dec
cld
add
hlt
sahf
inc
test
and
push
mov
jle
jno
pop
scas
outs
mov
jl
nop
lods
xchg
aam
adc
pop
jmp
test
add
in
loopne
mov
mov
xor
shr
lock
rcr
cld
jno
sub
shr
or
mul
ret
add
push
into
inc
pusha
lods
jne
sbb
jmp
mov
mov
cdq
imul
push
sub
inc
out
pop
daa
xchg
ds
aam
pop
test
pop
mov
rol
xchg
add
aad
imul
inc
arpl
ins
or
stos
mov
arpl
push
out
sub
inc
or
pop
dec
and
dec
test
push
add
cwde
xchg
xlat
jp
sbb
sub
mov
aam
rol
xchg
aad
push
sub
gs
icebp
add
(bad)
fst
xchg
fild
or
ret
retf
push
ret
cmp
shl
and
mov
push
icebp
xor
into
data16
push
mov
je
mov
and
sbb
daa
sub
out
sbb
pop
dec
mov
sahf
sbb
or
pusha
mov
cdq
(bad)
cmp
sub
stos
push
adc
jb
and
xchg
cmp
addr16
jmp
or
jo
aas
ins
popf
imul
xchg
pop
cmp
fwait
xchg
push
push
push
outs
push
or
cmp
mov
xor
jb
lahf
mov
out
aam
hlt
or
imul
sbb
test
pop
mov
dec
in
les
nop
je
mov
cwde
jp
push
push
ret
mov
in
rcpps
mov
adc
sub
push
call
aaa
daa
inc
ja
sbb
(bad)
fimul
jnp
cmps
icebp
aad
mov
and
add
cli
cmp
or
nop
add
pushf
enter
mov
push
and
psrad
mov
in
inc
pop
jge
outs
xor
mov
mov
sbb
scas
jb
push
movs
es
inc
ror
cmc
shl
jne
jo
test
add
xor
into
stos
sub
mov
sub
push
sub
(bad)
es
add
cmpxchg
fst
pop
dec
mov
push
int3
movs
out
ja
daa
mov
pop
cmp
and
cmp
jge
(bad)
push
in
inc
test
inc
call
jns
xor
or
inc
jnp
imul
daa
mov
mov
(bad)
hlt
retf
mov
cmp
js
dec
or
nop
in
xchg
inc
js
es
js
mov
mov
lock
push
adc
jb
bound
call
lods
push
scas
push
(bad)
pop
mov
push
ins
arpl
out
mov
fild
clc
xor
fnsave
push
cld
pop
stos
call
movs
mov
and
mov
mov
mov
adc
call
loop
sub
mov
xor
int
xor
and
xor
add
adc
retf
nop
xchg
and
idiv
mov
fcom
and
rcl
popf
std
inc
add
nop
push
sbb
sbb
push
add
cmp
inc
mov
leave
shr
bound
cmp
add
pop
leave
out
(bad)
xchg
clc
sbb
sub
fist
hlt
ds
mov
cmps
add
scas
not
ret
arpl
ret
adc
xchg
mov
lods
pop
mov
retf
fld
adc
sbb
mov
and
arpl
(bad)
test
push
add
test
clc
iret
lock
mov
arpl
xor
(bad)
call
call
sbb
push
cdq
lock
push
push
mov
(bad)
jno
cli
cs
sub
div
shl
pop
sub
in
retf
pop
pop
and
and
enter
add
sar
mov
mov
dec
jmp
sub
lods
xor
dec
cwde
aam
add
mov
dec
iret
push
jg
icebp
movs
jae
xlat
inc
jl
inc
jae
in
adc
int3
xchg
pop
push
aam
addr16
fwait
jne
scas
add
and
inc
int3
xchg
push
jmp
sbb
xor
and
and
fldenv
push
pushf
or
std
ja
jnp
and
inc
out
push
pop
mov
int
outs
das
clc
mov
pop
dec
fsubrp
pushf
inc
(bad)
fbstp
and
push
inc
aaa
outs
stc
aad
shl
mov
loop
rcl
into
dec
inc
or
dec
lods
dec
adc
sub
fistp
cmp
daa
mov
inc
fst
stc
xor
xor
int3
frstpm(287
mov
ror
jge
int3
add
sbb
jmp
mov
(bad)
dec
xchg
inc
(bad)
aas
adc
test
fistp
cli
pusha
adc
xlat
aad
pop
cmp
jae
push
cli
in
mov
jge
inc
cmc
cli
or
pop
fwait
cmc
cmp
push
push
into
mov
shr
lods
mov
sahf
les
push
mov
xchg
inc
scas
xor
into
cli
cdq
push
mov
cli
pop
nop
push
test
aaa
xor
inc
mov
pushf
fs
es
dec
(bad)
out
adc
jae
pop
mov
cmp
(bad)
lods
out
and
cmp
iret
adc
mov
sbb
fdivr
mov
sahf
fldcw
icebp
mov
in
mov
dec
in
scas
add
bound
mov
xchg
dec
mov
cmps
add
cmp
mov
bound
xor
int3
pushf
scas
push
clc
adc
sbb
inc
(bad)
push
mov
pop
fs
push
mov
inc
mov
sub
mov
push
loopne
sbb
out
(bad)
inc
je
jne
sub
mov
arpl
out
scas
push
cld
addr16
lea
mov
dec
loope
test
stc
jne
cmp
pop
(bad)
cmp
sub
(bad)
mov
jp
xchg
mov
push
jns
push
mov
lods
aaa
dec
imul
push
shl
xorps
mov
jo
inc
imul
sbb
xor
out
std
xor
loopne
fs
jge
jmp
shr
mov
add
or
push
add
loope
popf
cmp
imul
mov
pop
dec
pminsw
leave
xor
or
fnstcw
retf
or
pop
loope
sbb
mov
mov
sbb
adc
adc
test
lods
mov
sbb
je
dec
(bad)
cmp
and
mov
or
inc
shl
sub
push
dec
cli
popa
push
sub
xchg
xchg
add
xor
jo
inc
lods
cmp
or
shl
arpl
retf
pop
scas
mov
xchg
inc
sbb
and
div
pop
leave
dec
mul
idiv
cmc
pop
pop
jl
je
sbb
ins
or
dec
icebp
mov
add
pop
mov
push
in
stos
sahf
cdq
xor
inc
push
inc
stos
fst
mov
mov
or
push
in
cwde
loope
or
mov
mov
pop
ficomp
jnp
not
sahf
or
ror
scas
retf
and
push
in
gs
js
icebp
pop
cmp
cmp
in
ret
ins
lahf
inc
into
imul
popf
nop
and
addr16
sbb
je
out
xor
dec
rcr
xor
mov
repnz
ds
pop
js
jne
lods
test
jg
push
or
jbe
shr
cmps
jno
adc
sbb
imul
or
pop
mov
ret
adc
jae
xchg
jmp
fdiv
mov
hlt
(bad)
setno
outs
fmul
add
push
shl
mov
aas
out
sbb
mov
mov
sbb
adc
inc
imul
retf
or
int
ins
or
add
sbb
pop
cdq
sbb
mov
or
xchg
aam
(bad)
push
and
stos
jl
fadd
neg
sar
in
lahf
xor
jg
pop
leave
stos
push
push
push
push
es
mov
jmp
scas
xor
pop
cmp
add
push
jno
inc
mov
inc
mov
adc
xchg
leave
lods
shr
jmp
cmp
fdivr
inc
sbb
lods
cmp
aad
mov
div
jge
xor
push
ret
imul
jb
sub
xchg
pushf
popf
inc
je
(bad)
shr
in
sbb
mov
out
cmp
cmp
cmp
ret
lods
enter
in
mov
loopne
sub
push
aad
bound
call
je
mov
aas
pop
dec
scas
mov
push
stc
mov
or
push
jmp
and
fs
icebp
mov
jmp
retf
ret
xor
and
cdq
xor
scas
dec
popf
pop
out
dec
sbb
loopne
mov
add
shl
sbb
pusha
mov
inc
mov
call
jae
test
jmp
(bad)
ror
retf
arpl
cmp
adc
jo
cmp
mov
xchg
or
adc
js
iret
lods
cld
inc
inc
or
cmps
adc
fbld
adc
aaa
push
mov
jb
add
lds
xor
or
aam
mov
jo
push
fimul
jecxz
push
test
push
std
hlt
pop
in
push
or
or
dec
test
dec
or
adc
mov
cmp
and
(bad)
jnp
dec
mov
jg
out
loop
mov
(bad)
test
or
xchg
sbb
cmp
add
enter
mov
mov
(bad)
fsub
cmp
lahf
cdq
outs
mov
les
jle
je
add
fcmovne
fld
fisttp
add
add
out
inc
stc
mov
mov
xor
adc
retf
add
jns
ins
das
jnp
jbe
mov
popw
ds
scas
(bad)
xchg
lea
mov
gs
or
xchg
fldcw
pushf
or
cli
clc
pop
sbb
inc
or
cmp
dec
push
mov
sbb
xchg
jae
and
mov
hlt
or
cmp
push
int
loope
push
add
pop
adc
adc
dec
xchg
add
test
sbb
cmps
add
push
cmp
or
fsub
and
loope
sub
int3
cwde
xor
mov
enter
mov
in
(bad)
stos
sub
div
lods
xor
xor
out
sbb
in
into
pop
iret
mov
dec
retf
xor
out
pop
mov
je
fs
mov
pop
jmp
cli
xchg
add
in
ins
jbe
or
or
ins
or
cmps
add
and
fsubr
mov
mov
add
jnp
sbb
sub
mov
jmp
mov
test
cmc
xor
adc
mov
cmp
popf
mov
stc
add
push
push
push
cli
gs
or
call
xchg
mov
sub
outs
adc
(bad)
ds
movs
xchg
or
(bad)
outs
in
dec
lods
outs
pop
adc
(bad)
loope
icebp
add
sti
xor
mov
call
jmp
repz
add
shl
int3
lods
mov
xrelease
fist
push
ret
xor
lahf
int3
shl
mov
cmp
pusha
outs
test
stos
cmp
retf
pop
or
rcr
ds
pop
sbb
jbe
jmp
and
push
add
out
(bad)
push
jp
rdmsr
inc
xor
sbb
cli
loopne
shl
fdivr
js
cmps
dec
out
cmp
push
jmp
xor
mov
push
pop
pop
fwait
pop
push
push
repz
aam
jge
out
(bad)
fld
data16
pop
mov
test
out
xchg
pop
retf
pop
push
ins
adc
or
enter
xchg
sti
sub
mov
xchg
jno
call
push
mov
cmps
aam
(bad)
fiadd
xchg
mov
(bad)
lods
cmp
fdiv
sub
add
test
movs
(bad)
adc
mov
or
aaa
push
dec
inc
jmp
cli
adc
movs
and
dec
jmp
push
les
pop
(bad)
bound
jno
sbb
jnp
xor
inc
or
call
cmps
and
jo
add
jae
mov
sar
out
das
dec
popa
ins
and
sub
imul
nop
lods
retf
jg
mov
sub
and
jmp
mov
dec
or
push
imul
mov
xchg
shl
adc
push
pushf
cmp
sbb
out
aad
mov
fwait
jmp
sbb
add
or
ja
in
pusha
fisttp
dec
push
adc
fs
push
jns
fist
push
or
push
mov
or
xor
sub
popa
mov
pop
loopne
stc
push
movs
fcmovne
jge
addr16
mov
pop
xchg
pushf
loopne
idiv
sub
pop
test
pop
movs
add
test
and
xchg
add
icebp
(bad)
jmp
nop
(bad)
test
sub
or
scas
je
in
xor
out
or
sbb
xchg
fs
sub
xchg
jg
das
jno
outs
sbb
leave
jg
xor
pusha
ror
cs
cmp
mov
jge
or
aas
out
ss
int3
jecxz
ss
cmp
and
and
mov
xor
push
sti
repz
cmp
sub
inc
sub
dec
iret
jp
in
fldcw
test
jge
js
(bad)
pop
mov
sub
cmp
jle
xchg
cld
pop
aaa
xchg
pop
jns
je
ja
btc
add
(bad)
nop
daa
in
aaa
retf
sbb
sub
stos
mov
or
xchg
xor
pop
aam
mov
mov
and
scas
int
inc
aam
imul
leave
in
cmp
pusha
sbb
xchg
push
gs
int
mov
jmp
ret
add
mov
call
enter
pop
jl
inc
and
sub
mov
mov
jge
js
mov
sub
mov
dec
cmp
xor
mov
daa
sbb
mov
(bad)
out
dec
shl
or
ds
pop
jecxz
mov
daa
mov
jnp
cdq
iret
push
test
nop
scas
stos
out
ds
add
mov
or
xor
cmc
div
push
out
in
sbb
pop
in
dec
dec
push
jb
push
xor
ss
in
dec
xor
xlat
dec
add
int3
pop
xor
or
or
imul
push
adc
xor
fwait
cmp
pop
movs
cdq
jo
push
adc
mov
push
sti
mov
jmp
mov
test
pushf
cdq
mov
loope
sub
and
neg
loopne
add
ss
or
jne
fldcw
lods
iret
mov
inc
and
jmp
outs
push
retf
cld
out
and
cli
fidivr
mov
mov
pop
test
into
mul
neg
dec
mov
sahf
fnsave
std
cmp
xchg
movs
and
in
fisub
nop
pop
imul
cmp
mov
cmp
cmp
cld
push
out
adc
lods
je
mov
aam
mov
mov
outs
bound
and
xchg
cmp
repz
cs
imul
xor
pop
js
add
jae
push
adc
mov
fcom
mov
iret
jns
out
enter
test
cs
mov
test
push
lods
push
bound
(bad)
jle
fist
out
cdq
in
sti
jg
shr
ret
jnp
loopne
push
hlt
and
fstp
jnp
push
mov
mov
mov
jnp
mov
fsub
and
pop
adc
fwait
sub
xor
pop
add
shl
in
outs
lods
scas
sbb
jecxz
popf
(bad)
mov
fsubr
xchg
out
sbb
xor
pop
loop
sbb
push
pop
xchg
data16
adc
cli
dec
hlt
and
mov
std
push
ja
mov
shl
ins
(bad)
mov
add
push
or
cmp
push
or
pop
push
add
xchg
pop
fiadd
sbb
call
nop
test
push
sbb
inc
call
dec
mov
push
sub
(bad)
fcomip
or
mov
mov
push
cwde
cli
mov
mov
out
mov
lock
cs
pop
mov
add
push
dec
mov
mov
mov
cld
push
lds
jl
ror
aam
iret
sub
in
cmp
pop
sbb
fsub
test
pop
add
sbb
inc
(bad)
jg
or
sti
shl
lods
sbb
pop
xchg
push
test
xor
jmp
mov
iret
gs
push
aad
sub
test
ret
lahf
mov
adc
pop
cli
inc
dec
push
adc
in
sub
mov
popf
push
dec
xchg
adc
in
push
stos
jb
xchg
adc
aam
sbb
lahf
sub
ror
jns
cmp
fidivr
adc
jne
mov
loope
out
and
jmp
push
out
xor
and
cwde
arpl
call
in
xor
icebp
jmp
(bad)
fsubr
div
pushf
or
push
sbb
arpl
push
adc
sub
mov
add
cwde
pop
jp
push
aad
xor
push
ret
outs
rol
jb
add
push
sbb
jl
sub
pop
rol
or
sub
sub
jmp
sub
xor
jle
dec
sub
stos
sti
and
pop
or
mov
and
mov
loop
std
in
retf
xchg
push
fiadd
fdiv
dec
jmp
dec
or
div
leave
rcr
mov
inc
jno
xchg
or
ss
lods
popa
ins
mov
cmps
mov
mov
pop
push
fiadd
push
test
pop
push
and
add
pop
fwait
push
xchg
cwde
imul
mov
int3
mov
mov
sbb
test
jmp
sub
pushf
pop
add
imul
fmul
jno
add
xrelease
dec
xchg
jl
xchg
cmps
sbb
jge
sbb
lods
or
test
or
ret
dec
push
xchg
or
out
clc
push
inc
clc
popa
jnp
adc
inc
ficom
in
mov
cmps
mov
out
sbb
(bad)
mov
stos
sbb
jno
push
mov
pop
mov
push
fiadd
(bad)
cmc
inc
pop
pushf
rcr
test
mov
and
push
push
push
stc
mov
xor
jle
xor
pusha
out
test
ja
adc
xor
cdq
scas
jns
sub
mov
movs
(bad)
popa
fist
scas
inc
xor
cld
sub
daa
popf
nop
mov
mov
or
mov
xchg
ss
inc
lods
pop
cld
lock
jl
aaa
es
int
loopne
(bad)
fsub
idiv
cwde
test
(bad)
dec
(bad)
or
pop
mov
imul
dec
out
add
cdq
adc
or
int3
jle
xchg
das
mov
arpl
stc
movs
cmp
push
sub
and
repnz
inc
sub
pop
fld
dec
aad
shr
or
sbb
and
ins
jle
stos
sbb
xor
ror
push
xchg
stos
dec
in
xor
dec
out
dec
jns
fs
pop
jge
stos
ins
or
test
or
and
inc
mov
ret
frstor
jge
aaa
push
inc
mov
aaa
cmps
cmp
lods
loope
cmp
dec
fidiv
push
add
jge
stos
les
sahf
repnz
jmp
lods
cmp
hlt
fistp
push
int
out
xor
cmp
test
mov
leave
push
inc
inc
rcr
repz
or
not
nop
and
ss
sub
cmps
jne
nop
fist
jne
mov
sbb
sahf
cli
dec
cmp
pop
sbb
inc
sbb
push
sbb
pushaw
stos
jo
mov
pop
push
mov
test
jo
in
gs
mov
sub
adc
cs
mov
mov
adc
sbb
movs
sbb
cmp
pop
lods
sbb
out
hlt
push
push
sub
mov
mov
and
movs
push
or
sbb
adc
xchg
lock
xor
fwait
and
jmp
sbb
jp
sub
(bad)
inc
add
aam
test
jns
pcmpgtw
push
in
sbb
aaa
bound
daa
addr16
daa
sub
xchg
loopne
inc
mov
lods
dec
outs
cs
mov
test
or
pop
sub
or
inc
fmul
ins
or
or
cmc
fadd
jmp
lahf
mov
mov
in
mov
outs
adc
xor
in
push
jecxz
es
hlt
aaa
xchg
neg
push
mov
test
xchg
jae
cmp
sub
je
jbe
popf
jno
inc
cli
xor
xchg
scas
pop
(bad)
cdq
mov
mov
mov
and
and
cmp
fnstcw
sbb
imul
fldcw
sbb
jno
mov
test
mov
inc
pop
cmc
pusha
sub
dec
push
add
dec
es
inc
cmc
xchg
sti
adc
xor
pop
stc
and
stos
adc
icebp
cmp
std
cwde
into
push
pop
data16
popf
jmp
sar
outs
adc
or
jne
retf
fild
or
in
or
(bad)
test
sbb
loopne
out
or
push
aad
push
(bad)
(bad)
in
movs
mov
je
pop
pop
dec
rol
pusha
stc
aad
dec
adc
jbe
adc
or
les
mov
mov
jl
or
fucom
mov
mov
jne
(bad)
stos
inc
xchg
dec
sbb
(bad)
outs
aad
xchg
imul
sub
lods
jbe
mov
mov
or
push
add
fidiv
cmovns
add
pop
repnz
pop
test
ins
mov
push
xchg
mov
xor
cmp
push
push
ror
in
jne
mov
mov
rcl
mov
cmp
cmp
mov
fdivr
(bad)
pop
iret
xchg
(bad)
xor
sub
(bad)
fcmovne
sbb
aad
inc
push
push
xor
ds
loop
mov
cmps
mov
jp
adc
ins
mov
(bad)
push
dec
ins
pop
rol
cmp
(bad)
retf
retf
test
ss
(bad)
or
js
inc
or
cld
jge
clc
div
scas
mov
cmps
jnp
ds
rol
adc
jle
enter
inc
or
cmp
vcomisd
shr
or
das
sub
jbe
mov
jbe
xchg
repnz
add
or
adc
adc
aad
jg
fdiv
fnstenv
xor
xchg
cld
sbb
xchg
fldenv
cs
push
jns
getsec
add
stos
dec
test
cdq
sbb
jle
dec
push
out
mov
xor
and
div
sbb
xchg
les
call
out
lods
sbb
xor
mov
pop
push
cmp
sub
and
jl
pop
mov
xlat
dec
dec
call
sbb
adc
and
hlt
jb
dec
sbb
ins
pop
mov
mov
dec
adc
std
push
dec
popa
and
xchg
sub
mov
dec
jle
jne
clc
clc
inc
push
sbb
in
int
xchg
stos
mov
inc
pop
arpl
shr
cmps
inc
cs
in
repnz
cmp
jmp
(bad)
fdiv
mov
(bad)
cld
icebp
push
add
pop
jmp
mov
jecxz
enter
cmps
mov
cmps
js
push
xchg
imul
sbb
mov
mov
cmp
cli
in
out
jbe
or
mov
mov
cwde
cmps
out
or
sbb
fisub
mov
dec
inc
sbb
adc
call
pop
xchg
mov
fsubr
sub
jl
(bad)
neg
mov
(bad)
xor
or
xchg
in
(bad)
paddusw
hlt
dec
shl
mov
mov
lods
inc
icebp
test
cmp
out
ins
test
or
xchg
mov
pop
xor
sub
adc
hlt
loopne
ins
lods
das
out
xor
fsubr
jmp
aam
and
imul
imul
retf
add
jp
(bad)
mov
arpl
pushf
popf
icebp
jmp
mov
je
mov
jno
adc
pop
stos
std
pop
or
cmp
push
push
or
shl
loopne
pusha
xchg
cdq
adc
jmp
push
sti
lea
or
mov
pop
outs
inc
in
inc
std
push
cmp
les
and
ins
push
or
outs
pushf
or
mov
out
sub
lock
mov
mov
cmp
mov
(bad)
cmp
jns
mov
sbb
jne
or
nop
jno
xchg
jne
imul
ds
xchg
mov
dec
outs
dec
or
cmp
mov
xor
loopne
in
jp
retf
pop
push
aad
xor
add
mov
call
pop
sbb
or
adc
mov
xchg
jmp
rol
jge
pusha
arpl
push
cmp
or
sbb
gs
rol
loope
xchg
and
mov
inc
xchg
shl
pop
adc
mov
inc
rcr
sahf
stc
xchg
or
cmp
js
psubq
and
fsubr
aam
or
mov
(bad)
jne
retf
mov
sbb
loope
sub
cmp
push
mov
push
mov
iret
inc
shl
xchg
pop
sub
xor
xlat
and
and
jo
call
inc
test
adc
xchg
sub
neg
cmp
rol
retf
ds
adc
stos
fs
push
loop
and
mov
pop
scas
sub
lea
push
sub
inc
sbb
inc
stos
popf
lea
push
fs
fadd
out
test
mov
pop
cmp
cmp
jl
fwait
sti
aam
clc
mov
loop
or
xchg
repz
cmps
lods
retf
cwde
add
jle
les
add
(bad)
imul
xor
int
lea
adc
mov
and
jge
imul
sub
pop
rol
fimul
mov
adc
push
and
mov
in
xchg
in
or
jo
xchg
push
(bad)
cmovge
push
xchg
mov
ss
(bad)
call
call
push
add
push
rcr
or
cmps
sbb
pop
ins
(bad)
std
dec
inc
xchg
or
xchg
pop
xor
sub
cmp
call
push
xchg
mov
inc
je
push
inc
sbb
popf
mov
pop
out
iret
pop
scas
fnstsw
inc
into
jbe
iret
mov
cmp
xor
mov
mov
mov
adc
stc
sar
and
mov
jno
jbe
lock
sbb
dec
xchg
mov
das
popa
ret
xor
jecxz
je
fmul
rcr
pop
stos
jae
test
pop
mov
fnstcw
or
adc
lds
push
pop
in
pop
repnz
int
xor
mov
jmp
xor
add
pusha
add
std
pop
outs
or
std
pop
jno
loope
push
aam
jno
jo
jno
lea
or
cmp
test
pusha
in
push
stos
pop
movs
pusha
in
call
xchg
sbb
idiv
imul
pop
adc
into
inc
aam
(bad)
xor
pop
lds
dec
mov
scas
xor
fucomip
sub
test
cmp
adc
into
test
inc
popf
scas
test
bound
mov
in
imul
hlt
jmp
xchg
imul
jns
in
mov
imul
jo
dec
aad
and
jmp
dec
pop
rcr
fnsave
mov
mov
jne
call
stc
dec
dec
jns
add
lahf
push
fcom
es
inc
movs
adc
jmp
(bad)
mov
or
dec
xchg
test
repz
and
into
fs
aaa
inc
jo
(bad)
cwde
jbe
(bad)
das
shl
in
add
nop
mov
inc
add
and
(bad)
inc
ss
pop
xchg
add
dec
sbb
aaa
mov
icebp
lods
jno
aaa
popa
xchg
or
inc
adc
cwde
mov
or
dec
or
xor
aas
mov
mov
test
test
cwde
scas
sbb
stos
popf
xchg
inc
jb
jg
lods
shl
retf
shl
mov
cmp
add
aad
cmp
ret
jmp
movs
ret
push
sbb
daa
in
aaa
cli
addr16
in
in
cmps
and
pop
enter
sbb
or
aas
push
inc
out
sub
jl
jbe
ins
imul
movs
or
jae
pop
jle
shl
test
mov
mov
dec
mov
sub
movs
nop
enter
jecxz
mov
xor
test
mov
dec
cmp
fs
dec
btc
loopne
test
mov
push
mov
imul
mov
jp
movs
std
pop
mov
xchg
mov
aam
fdiv
in
jae
in
jbe
mov
push
hlt
lods
or
pushf
fwait
js
dec
mov
adc
scas
es
jcxz
jg
bound
test
push
mov
fsub
and
stos
pop
mov
add
inc
pushf
jp
into
pop
rcl
cld
mov
not
movs
xchg
xor
out
mov
mov
nop
pop
mov
sub
aad
mov
and
cdq
cwde
jns
aam
add
or
adc
xchg
add
dec
add
cmp
clc
adc
mov
and
adc
jle
sub
daa
xor
lea
lock
fwait
cdq
das
retf
data16
scas
jno
jmp
jle
div
in
fdiv
stos
fld
dec
xchg
ficom
or
push
cmp
int3
fmul
fs
ins
in
mov
out
imul
dec
(bad)
xor
fs
repnz
mov
push
jp
dec
cmc
jge
in
retf
push
out
dec
push
sbb
mov
stc
pop
mov
inc
loopne
in
inc
shl
inc
and
jg
pop
imul
cmp
and
sbb
xor
cmp
in
push
xor
sub
pop
clc
out
imul
push
lods
scas
xor
add
pop
das
cmps
int3
inc
addr16
in
scas
call
push
lds
out
adc
cmp
pop
push
lds
adc
pop
scas
sub
ficom
ds
bound
add
or
xlat
scas
inc
xor
in
call
inc
mov
in
push
test
fstp
dec
cwde
sub
mov
mov
cdq
xchg
xchg
push
cs
mov
leave
dec
adc
rol
add
push
xor
ss
retf
cmp
addr16
push
dec
push
add
adc
add
mov
jle
addr16
mov
pop
(bad)
fcom
mov
test
int3
sti
inc
les
mov
dec
and
sbb
stos
sbb
xor
xchg
inc
shl
ja
inc
aas
xor
call
call
sub
jmp
push
mov
inc
or
sub
inc
repz
push
or
jp
mov
in
les
test
mov
inc
xor
fisubr
int3
cmps
inc
jo
push
ret
call
pusha
sbb
cmp
dec
add
cdq
inc
pop
inc
dec
or
inc
pop
enter
push
pushf
stc
mov
daa
outs
cmp
and
ror
and
cmc
jl
in
pop
push
stos
or
lods
adc
pop
loopne
xor
lock
mov
or
cdq
xchg
jns
not
push
dec
popf
icebp
xchg
inc
push
sub
cmps
dec
popa
imul
or
xor
mov
sahf
dec
(bad)
sbb
cmc
movs
lods
or
and
add
(bad)
pop
mov
push
jno
push
dec
outs
dec
mov
adc
mov
xor
sub
aaa
inc
mov
mov
jmp
add
ins
fsub
movs
push
sub
mov
xchg
inc
mov
jno
sub
sbb
and
pushf
das
mov
add
stc
pop
dec
(bad)
scas
xchg
jmp
arpl
pop
stos
sbb
inc
out
loopne
push
pop
jbe
test
jle
jbe
repnz
inc
out
dec
xchg
inc
push
fcom
sub
arpl
push
jae
add
test
or
aam
and
sbb
jmp
dec
xor
imul
adc
test
cmps
inc
and
mov
outs
scas
ss
push
adc
push
add
pop
addr16
sbb
repnz
mov
sub
js
(bad)
jno
inc
push
mov
mov
sub
dec
cmps
ror
ja
fst
mov
inc
(bad)
jae
scas
mov
sub
cmp
add
add
push
arpl
ds
je
pusha
int
adc
push
(bad)
sub
or
in
ins
loop
outs
mov
js
aas
push
pop
ret
das
jnp
daa
iret
pop
mov
cld
stos
jo
ds
xor
dec
push
xchg
sbb
mov
adc
mov
inc
ds
jp
data16
stos
out
xchg
aam
add
cmp
mov
leave
mov
and
or
mov
cmps
sbb
repz
test
and
in
cmps
adc
repnz
adc
in
ins
jge
and
add
mov
xor
mov
out
aad
clc
movsx
push
or
sub
adc
cmp
js
xor
pop
mov
arpl
xchg
dec
xor
das
mov
popa
mov
lds
cmp
sbb
xor
iret
inc
mov
(bad)
std
mov
adc
fcom
jne
jmp
out
test
ja
sbb
push
and
adc
mov
push
inc
add
pop
pusha
pop
cli
xchg
pushf
ret
jae
adc
popf
adc
pushf
mov
push
jno
stos
xchg
int3
arpl
lahf
loope
lahf
pushf
dec
(bad)
psubsw
retf
cdq
cld
and
sbb
mov
cmp
hlt
hlt
cdq
ds
inc
push
push
jge
scas
jmp
and
sub
int3
or
popa
ror
popf
sahf
popa
sbb
ja
push
movs
mov
add
push
mov
add
and
test
cmps
adc
mov
jne
aam
enter
loop
push
xor
xchg
push
xchg
fmul
popa
(bad)
repnz
pushf
loop
fist
pop
fstp
and
xor
cmp
pop
mov
out
ja
sub
pop
ds
push
mov
ins
xchg
test
add
mov
lahf
sub
xchg
test
imul
ins
mov
or
fisttp
test
inc
shl
int3
shl
pop
rol
test
rcr
imul
xchg
xor
cmp
dec
in
xor
inc
mov
pop
push
sti
mov
(bad)
sbb
fcomip
pop
aas
or
mov
aad
ins
cmps
inc
in
push
add
mov
xlat
cmp
mov
sbb
fidiv
and
xchg
ins
pop
sbb
adc
add
pop
and
ins
cmc
cmc
pop
jns
cwde
jb
fs
sbb
ficom
xor
test
push
dec
push
sub
lods
or
dec
jne
aaa
dec
and
leave
inc
scas
inc
sub
pop
pop
std
data16
jo
sub
adc
push
sbb
mov
pop
(bad)
stc
cmp
clc
cmp
loop
sbb
push
pop
adc
jmp
dec
leave
mov
dec
push
imul
ret
cmc
mov
inc
mov
xchg
inc
sbb
fld
xchg
fsubr
imul
inc
test
(bad)
adc
lsl
inc
jmp
mov
lea
sub
fwait
adc
clc
(bad)
pushf
(bad)
dec
ss
mov
adc
cmp
xchg
sar
cwde
inc
and
test
add
jmp
xor
adc
pop
stos
into
jmp
pop
int3
jae
ja
call
push
add
jne
push
in
inc
icebp
stc
and
inc
test
shl
sub
sar
in
call
xor
in
fist
popa
arpl
stc
mov
dec
cs
test
ins
xchg
fild
sar
out
mov
imul
jmp
es
push
mov
lds
mov
inc
mov
inc
dec
pusha
cmp
pop
out
movs
bound
mov
xor
inc
xlat
sbb
shl
and
inc
call
stos
inc
out
pop
in
inc
daa
aas
(bad)
xchg
cld
sbb
cmp
add
pop
xor
inc
xor
sub
pop
cmp
loop
aaa
data16
imul
dec
call
push
int3
xlat
inc
(bad)
mov
das
cmps
pushf
mov
cmp
inc
xchg
cmc
mov
push
mov
mov
ror
inc
int
pop
outs
loope
icebp
push
dec
xchg
sbb
js
add
scas
(bad)
popa
jnp
iret
jecxz
out
ins
imul
xor
call
fidiv
into
lock
mov
mov
std
inc
add
cmp
lahf
repz
or
mov
cli
and
movs
loope
sbb
rol
xchg
retf
cli
fst
stos
cmc
mov
xlat
add
jp
daa
xchg
iret
fnstenv
mov
or
xchg
js
std
jno
pusha
xlat
imul
lds
dec
and
jmp
ins
pop
push
and
in
xchg
inc
adc
leave
(bad)
push
add
mov
mov
mov
dec
les
movs
retf
jnp
imul
popaw
call
enter
mov
jecxz
adc
inc
cmp
xor
mov
and
gs
adc
jae
xchg
loop
sahf
jns
jmp
adc
retf
jbe
sbb
in
rcl
xchg
jecxz
(bad)
je
jbe
inc
loopne
sub
xchg
sbb
sti
push
ss
jb
xchg
mov
xchg
stos
or
sbb
jno
mov
mov
sbb
jb
dec
mov
(bad)
add
das
fwait
add
dec
mov
cmps
inc
pop
pand
mov
add
out
pop
push
mov
retf
leave
cdq
nop
fcomp
ds
xchg
xchg
aam
and
push
mov
sahf
adc
mov
clc
xor
rcl
adc
push
or
inc
adc
ja
mov
(bad)
lds
xchg
push
and
movs
pop
jns
lods
and
loop
out
sub
xchg
cmp
dec
xor
inc
ror
rol
jnp
sbb
xor
sahf
popa
push
adc
cwde
popf
inc
pop
(bad)
cld
loop
fild
xor
xlat
pop
int3
loopne
cmp
dec
push
push
cmps
je
imul
push
loopne
out
xchg
mov
mov
popa
pop
ss
jne
fidivr
ret
jecxz
aaa
push
dec
(bad)
retf
retf
push
mov
cli
leave
iret
jmp
mov
mov
push
sti
lods
push
mov
mov
fdiv
arpl
pop
cli
push
out
scas
ins
jne
cmc
dec
sar
mov
xchg
aad
and
call
inc
xor
loope
jl
dec
retf
add
les
dec
xor
cmp
retf
(bad)
fcomp
pop
jnp
(bad)
leave
popa
xchg
push
or
in
sub
push
add
jnp
test
fs
cli
popa
in
dec
and
mov
push
retf
stc
lds
push
inc
xor
test
jle
pushf
mov
pop
ss
adc
sbb
cmp
jp
test
or
sub
xor
inc
jne
int3
lds
mov
jmp
(bad)
xchg
div
(bad)
sub
mov
xchg
inc
sahf
xlat
lds
cmp
daa
xchg
sub
mov
outs
jl
not
in
jnp
push
or
loop
pop
retf
pusha
loopne
ins
loope
mov
mov
jmp
cld
or
and
mov
pop
test
lahf
ret
push
ret
das
jle
and
lahf
xchg
inc
fld
out
test
shl
cld
adc
pop
fisttp
lea
shl
jno
test
xor
aad
push
inc
xor
and
inc
(bad)
jmp
int
mov
jmp
test
jmp
out
in
mov
add
(bad)
cmp
idiv
out
(bad)
sub
pop
rcl
xchg
(bad)
scas
jge
jl
cdq
ret
push
mov
sub
loop
sub
sub
leave
dec
ret
xchg
fneni(8087
hlt
sub
add
adc
and
addr16
xor
lds
repnz
daa
in
div
adc
add
or
fwait
push
cmp
out
imul
mov
xlat
ds
popa
hlt
xchg
or
gs
cmp
adc
mov
mov
mov
pop
push
xor
push
outs
popf
jg
cmps
mov
xor
js
dec
icebp
test
dec
(bad)
and
imul
sub
jne
ss
test
repz
sbb
mov
jns
sbb
push
or
and
xchg
ja
or
add
dec
stos
frstor
mov
inc
ins
(bad)
leave
mov
mov
add
sbb
retf
xor
xchg
cmps
lock
sbb
mov
xchg
cld
loopne
adc
xchg
xchg
test
fld
aam
xor
pop
stc
dec
sub
movs
xchg
cmps
stos
push
retf
mov
or
pushf
pop
pop
add
inc
clc
ss
mov
shr
fcmovbe
jnp
push
mov
sub
scas
sbb
jnp
das
xchg
dec
jbe
nop
xchg
out
dec
aam
mov
pushf
xchg
xchg
gs
jp
inc
sbb
mov
in
pushf
jns
adc
xchg
dec
adc
inc
fdivrp
mov
data16
ret
sahf
pop
inc
xchg
mov
xchg
pop
pop
js
cmc
leave
sbb
cli
dec
pop
leave
jae
push
shl
in
cmps
cmps
or
fcmovnbe
adc
pop
inc
sti
std
mov
aas
sub
out
push
dec
sahf
cmps
jl
jg
mov
cmps
sbb
std
push
push
mov
mov
sub
cmc
mov
fmul
stos
sahf
sahf
mov
and
dec
loopne
mov
adc
push
(bad)
lods
js
mov
pop
and
sbb
sub
dec
mov
or
jle
cdq
jae
inc
push
sbb
pop
pop
cmp
xor
mov
test
in
pop
pop
mov
mov
adc
in
les
sbb
ret
cmp
jl
scas
mov
cmp
out
mov
bound
(bad)
fcmove
and
scas
mov
or
(bad)
(bad)
pop
sti
sub
mov
xor
cmps
mov
push
addr16
add
xor
shl
cwde
xchg
push
inc
arpl
jbe
pop
fisubr
mov
popf
add
cmp
fistp
mul
movs
cwde
dec
fist
out
jmp
mov
and
test
inc
ret
movs
(bad)
fldl2t
in
jno
dec
inc
mov
mov
xchg
adc
pusha
rcl
into
pop
fsub
sbb
stc
push
and
sbb
xchg
pop
cmps
aas
fist
pop
retf
rcr
xchg
lock
fldcw
lods
and
sub
cmp
aam
jo
scas
and
pop
out
rcr
push
xchg
inc
(bad)
jmp
stc
(bad)
xlat
out
mov
add
aam
and
mov
pop
rcl
inc
int3
xchg
sbb
or
retf
xchg
mov
ss
and
sbb
add
cld
fs
and
dec
jmp
aam
adc
sbb
add
bound
xor
movs
jb
(bad)
fisubr
mov
adc
sub
push
mov
sahf
sub
push
sub
scas
pushf
scas
push
xor
dec
xchg
jl
add
add
xor
cwde
jg
dec
push
pop
xor
clc
loop
mov
test
pop
mov
push
ja
adc
hlt
inc
test
ficomp
sub
cmps
or
mov
pusha
daa
add
mov
and
sar
push
test
out
push
jo
gs
adc
inc
pop
push
lods
dec
shr
xchg
icebp
push
cmp
ret
lahf
cmp
jmp
mov
adc
sti
sti
jmp
jne
lods
iret
xor
cmp
mov
ins
addr16
lea
mov
mov
pop
mov
dec
pushf
dec
push
jmp
ja
inc
jge
loope
mov
dec
cmps
cmp
jnp
sbb
aaa
iret
dec
jae
cmp
and
mov
ret
and
xor
test
imul
fisttp
mov
gs
test
fistp
out
test
mov
inc
fcmovnbe
retf
bound
cmp
in
jge
popf
clc
xchg
cld
jg
jmp
(bad)
hlt
inc
bound
std
mov
(bad)
sar
push
ret
call
js
gs
ins
inc
out
xlat
inc
jl
add
sbb
jg
sub
cmc
pop
cld
stos
xor
adc
aam
xchg
iret
lds
xor
(bad)
into
xor
and
rcr
push
push
xchg
fwait
adc
mov
pop
and
sub
push
xchg
sbb
out
std
ds
adc
iret
push
mov
mov
rol
ror
or
addr16
push
mov
sub
dec
mov
inc
fdiv
scas
stos
ds
mov
stc
push
int
dec
sub
ins
mov
mov
or
and
pop
adc
jp
outs
mov
js
push
mov
xor
les
mov
in
ret
mov
in
cs
repnz
in
cmp
ds
rol
addr16
cmp
(bad)
int
enter
or
pop
add
test
jp
or
jl
stos
push
push
je
mov
lds
(bad)
scas
inc
int3
inc
push
(bad)
(bad)
pop
inc
adc
shl
and
rcr
and
movs
push
pop
mov
adc
adc
xchg
push
cmc
dec
stos
jl
aad
lods
add
out
(bad)
push
pop
push
aam
test
or
gs
or
and
(bad)
retf
imul
sub
inc
call
ret
jge
test
(bad)
or
test
ret
sub
mov
push
inc
add
push
sbb
imul
fistp
add
or
and
sbb
mov
fsubr
ds
sub
bound
data16
ds
xchg
sbb
dec
mov
jmp
adc
in
out
call
iret
dec
je
sub
fidiv
push
outs
pop
jge
dec
xor
ret
addr16
fidiv
aad
cmp
mov
mov
mov
dec
or
adc
ror
jl
mov
or
push
gs
and
lahf
aas
sub
mov
mov
jno
adc
frstor
adc
js
pop
sbb
jae
jg
push
mov
rcr
pop
mov
mov
mov
mov
aad
jno
add
ja
sub
mov
xor
mov
xor
inc
ins
add
adc
or
mov
test
pop
sbb
outs
fnstcw
lods
out
iret
jl
jl
mov
mov
call
xchg
leave
lock
fild
shl
cwde
aaa
ret
cmp
rol
loop
addr16
mov
into
push
push
ret
movs
sub
test
inc
inc
call
push
inc
push
das
ins
fsubr
not
pusha
push
sub
imul
cdq
ja
ret
repnz
stos
int
movs
cmp
push
dec
shr
ret
add
mov
mov
sub
repnz
fidivr
sar
mov
call
into
dec
xor
push
imul
les
dec
inc
mov
sti
jge
lods
fwait
ret
jecxz
adc
dec
and
ret
daa
cld
outs
ret
push
out
xor
das
cmp
movs
mov
jnp
adc
mov
(bad)
or
lock
add
dec
enter
pop
sub
inc
int3
enter
shl
mov
pop
sahf
outs
(bad)
sub
inc
push
inc
mov
(bad)
aaa
xor
xlat
mov
in
push
push
test
or
and
test
jl
punpckhdq
cwde
imul
ds
xor
jge
(bad)
cmp
dec
pop
inc
stos
addr16
xchg
sub
hlt
ror
or
ja
adc
mov
jle
or
dec
in
mov
sbb
mov
push
aaa
mov
out
adc
scas
ror
je
lods
push
xlat
mov
cmp
loopne
int
sbb
xor
mov
and
das
or
sub
xor
and
sbb
pop
(bad)
pop
(bad)
mov
push
jg
sub
push
push
inc
pop
jmp
call
cmps
test
and
cwde
cmp
lea
std
stos
daa
and
in
cs
jbe
scas
sar
fdiv
and
mov
or
dec
daa
cmc
aad
jge
xlat
ins
cmc
push
push
not
pop
lods
push
pop
fstp
scas
pop
stos
rol
or
outs
popa
std
adc
sub
aam
jae
jmp
jmp
rcl
sbb
dec
or
mov
repz
cdq
and
mov
into
out
call
and
jmp
xlat
mov
or
scas
pop
sub
add
ss
mov
xchg
jns
mov
popa
add
stos
pop
xor
mov
repz
jmp
retf
and
iret
push
sbb
dec
popf
add
aad
fisttp
pop
mov
jg
fsubr
mov
cmp
mov
hlt
fsubr
mov
out
or
outs
lods
sub
or
pop
push
xor
or
aam
mov
icebp
push
mov
dec
xor
stos
xchg
inc
ret
dec
fnstsw
push
out
mov
add
cld
inc
aaa
dec
jns
sub
shl
jl
sbb
push
xchg
lea
in
mov
push
dec
jbe
mov
aas
mov
test
scas
inc
retf
lahf
sbb
test
call
aad
adc
popf
ins
out
sub
movs
shl
ins
and
ja
adc
add
outs
and
cs
in
ret
xchg
inc
movs
add
in
pusha
jge
(bad)
fst
jmp
sub
push
ret
pop
shr
repnz
mov
test
or
inc
mov
dec
xchg
xchg
and
out
ins
pop
inc
repz
imul
mov
data16
loop
rcl
call
adc
xchg
shr
clc
iret
push
jne
ins
es
fcom
xchg
sbb
and
sbb
ins
arpl
fwait
pop
fadd
aad
aaa
push
jno
sub
pop
out
cs
mov
adc
repnz
adc
sub
movs
popa
xor
(bad)
leave
inc
jl
hlt
retf
sbb
lea
outs
rcl
mov
jmp
push
sub
or
push
cmp
mov
inc
fs
sub
lea
xchg
jb
sub
pop
aam
sub
mov
pop
addr16
push
aas
popa
jne
pop
xor
adc
stos
mov
lods
clc
cmps
ret
movs
int3
ins
sbb
mov
mov
clc
iret
xor
outs
bound
les
fldcw
and
ror
xchg
cmps
stos
pop
sub
in
xor
sub
imul
jo
pop
ficomp
fisub
push
ss
jle
test
or
push
push
inc
pop
sbb
jp
mov
sbb
call
clc
mov
push
adc
ins
mov
mov
add
(bad)
jmp
inc
les
inc
fsubr
adc
imul
mov
mov
lea
sub
(bad)
in
mov
mov
mov
push
pop
ja
xlat
cmps
sbb
es
cmp
mov
mov
xchg
rcr
es
ret
cmps
cli
pop
mov
mov
inc
mov
push
(bad)
mulps
mov
(bad)
js
test
xor
popf
bound
jo
or
jp
addr16
mov
pop
out
mov
xor
data16
ss
inc
cdq
xchg
pop
shr
jo
dec
xor
lods
or
imul
mov
jae
push
xchg
or
js
test
push
or
jae
or
(bad)
in
xchg
dec
mov
fisub
movs
(bad)
repnz
sub
arpl
test
addr16
push
add
repnz
or
sub
xchg
lea
mov
arpl
xchg
dec
xlat
cmp
mov
repz
lock
push
inc
rol
movs
bound
out
pop
push
cwde
stc
and
popa
and
mov
mov
cli
and
mov
sbb
adc
in
dec
add
lea
jecxz
xlat
fsub
push
mov
dec
push
retf
shl
jp
push
mov
pushf
push
xchg
scas
jnp
clc
jb
data16
xor
pop
les
push
(bad)
aas
jle
add
bound
mov
dec
call
push
fsubr
addr16
dec
out
sbb
rcr
std
mov
push
jmp
repz
or
jns
add
int3
ins
mov
(bad)
and
outs
in
lods
test
lea
shl
sub
sbb
arpl
imul
mov
pop
mov
cmp
dec
pusha
xchg
lods
cmp
mov
mov
fsub
cmps
jg
inc
ja
dec
mov
or
push
or
fcom
jl
dec
mov
xchg
add
pop
call
mov
nop
movs
cmp
add
mov
adc
jp
cwde
cld
mov
into
sar
jmp
mov
je
ss
scas
xor
adc
push
mov
outs
js
jg
push
(bad)
jecxz
mov
inc
aam
fs
xchg
(bad)
sbb
cmc
cli
stc
pop
dec
fimul
cli
sub
lea
mov
add
shl
and
retf
pop
dec
pop
fld
loop
lods
jmp
add
sbb
retf
fcomip
jge
and
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
out
push
js
mov
fadd
int
mov
push
jae
ret
jle
sbb
mov
movs
out
dec
inc
int3
adc
ins
xor
mov
dec
push
sbb
inc
popf
aad
arpl
push
(bad)
mov
repnz
out
(bad)
fidivr
adc
iret
sub
dec
push
push
add
pop
add
sub
imul
cli
cmps
xor
mov
popa
push
xor
xchg
cmp
imul
mov
das
jbe
push
enter
pop
popa
pop
dec
and
jae
adc
int3
in
mov
ins
jae
std
or
xor
push
es
out
pop
daa
push
fstp
(bad)
adc
cmps
lahf
cmp
jle
jmp
fwait
outs
neg
fcomp
enter
js
ror
xchg
sar
movs
aas
in
mov
sbb
add
pop
xchg
mov
pop
sbb
xor
(bad)
ja
cmp
in
hlt
add
stos
cwde
not
pop
ret
sar
cmc
imul
fmul
test
mov
inc
dec
sub
mov
shr
mov
clc
nop
ret
mov
dec
fild
call
sub
pusha
add
call
sar
jmp
call
and
pop
test
mov
sbb
mov
push
repnz
lahf
mov
sbb
aaa
mov
outs
test
inc
out
add
retf
iret
cmp
mov
sbb
add
(bad)
push
jae
dec
xchg
cmps
pushf
pusha
dec
ins
mov
adc
dec
imul
and
dec
cld
sbb
(bad)
cdq
add
es
adc
stos
movs
retf
ret
addr16
sbb
daa
jb
fmul
dec
xor
xor
xor
xchg
mov
into
pop
inc
lds
test
fadd
mov
cmp
sti
popf
and
fist
xor
rcr
dec
sub
mov
push
mov
sbb
movs
adc
xchg
xor
test
out
gs
sub
adc
inc
xor
icebp
ds
xlat
loope
jmp
xor
mov
inc
ds
xor
mov
sbb
pop
xchg
jns
push
mov
mov
das
adc
pop
mov
das
call
mov
and
or
sbb
repz
push
or
shl
imul
mov
ins
ins
ins
xor
mov
mov
mov
enter
loop
mov
arpl
call
out
loope
stc
mov
or
push
adc
dec
mov
les
jbe
inc
inc
xor
pop
out
or
xchg
sub
daa
mov
pop
data16
mov
and
xchg
xchg
mov
mov
lock
movs
push
and
imul
shl
adc
not
mov
fmul
push
push
ins
sar
in
sar
push
push
daa
mov
sub
not
jmp
jmp
int
bound
and
es
call
pop
add
push
daa
retf
dec
dec
xchg
and
not
popf
lahf
loop
inc
push
xchg
mov
in
repz
(bad)
lock
daa
nop
fisub
adc
fild
ins
lds
ss
cmp
mov
jge
sahf
test
retf
add
ds
dec
daa
and
sbb
inc
(bad)
sbb
cmps
xchg
ret
and
push
in
je
xor
or
sbb
inc
mov
outs
mov
mov
xchg
jmp
mov
xchg
fbstp
bound
mov
and
lahf
lds
rol
mov
loopne
inc
mov
ret
mov
cmp
cmp
cs
xor
pushf
movs
cmps
jg
inc
jae
inc
add
xchg
in
add
pop
cs
in
mov
imul
mov
add
out
clc
loopne
lea
jae
push
cmp
inc
jge
xchg
mov
imul
cld
es
js
ja
jno
sub
out
mov
mov
mov
aad
imul
sub
add
xchg
jg
cli
push
aad
inc
shr
add
jecxz
daa
inc
test
inc
std
sbb
xlat
scas
cli
enter
pop
pop
push
leave
cwde
into
jbe
add
push
xor
xlat
out
push
xchg
mov
jne
mov
inc
mov
dec
and
xor
mov
aam
or
aas
push
hlt
adc
push
adc
mov
xor
jp
mov
fidiv
sti
sub
hlt
cmp
xchg
je
push
mov
and
sbb
sbb
cmp
icebp
jle
ds
div
fistp
mov
es
fidivr
push
pop
enter
jae
and
stc
es
cmp
push
sub
pushf
xor
adc
mov
mov
jmp
nop
sbb
cmp
sub
rol
jp
data16
jmp
or
pop
mov
popa
das
fs
mov
or
ins
sbb
bound
fdivr
pop
(bad)
arpl
fdiv
pop
dec
(bad)
mov
jp
popa
ja
data16
mov
punpckhwd
adc
div
in
mov
and
in
mov
cmps
pop
mov
fstp
push
(bad)
xchg
mov
jl
stos
jge
ins
call
test
xor
in
xchg
fdivp
fnstsw
dec
or
stos
add
pop
pop
gs
fstp
stc
mov
shl
hlt
or
rol
mov
imul
cmp
or
pop
xor
push
div
mov
ret
aas
pop
jmp
cmc
dec
pop
pop
dec
lods
jnp
int3
xchg
ss
popf
loop
stc
dec
cmp
push
pop
icebp
addr16
pop
jns
or
inc
push
mov
mov
push
out
mov
sub
cli
add
push
mov
aaa
call
adc
(bad)
cmp
lea
sbb
pop
aaa
mov
jmp
xchg
(bad)
(bad)
fdiv
push
stc
inc
xor
sahf
adc
sub
jmp
xchg
cmp
xlat
add
mov
pop
cmp
mov
cmc
or
mov
shl
imul
stc
jp
push
movs
scas
call
mov
adc
sbb
repz
(bad)
push
jg
jge
jno
inc
dec
mul
or
or
mov
pop
jmp
pop
pop
jne
or
ret
sbb
pop
shl
aam
add
mov
mov
adc
jmp
mov
nop
mov
pop
pop
sub
adc
mov
gs
push
mov
push
mov
daa
mov
jb
out
mov
call
shl
jae
arpl
jg
(bad)
aaa
hlt
out
or
icebp
pop
sub
adc
pop
add
mov
adc
and
nop
stos
mov
js
movs
ret
icebp
mov
aam
sub
mov
pop
pusha
push
movs
shr
sub
and
sbb
or
sar
push
and
aas
inc
jne
or
add
add
add
xor
pop
sub
bound
mov
pop
popf
xchg
and
mov
in
ins
sub
(bad)
(bad)
push
mov
push
in
jno
jne
or
xor
add
adc
jb
mov
iret
mov
pop
pop
fidivr
xchg
je
shl
lahf
mov
mov
mov
test
pop
mov
or
dec
loop
mov
js
sbb
cmp
icebp
icebp
les
jge
(bad)
ret
sub
jecxz
jo
fstp
pop
or
lds
mov
sahf
out
gs
xchg
pop
push
sbb
aad
pusha
pop
pop
call
pop
add
cwde
sbb
inc
aad
pop
fs
out
and
xor
enter
daa
in
les
scas
cdq
jmp
mov
cdq
xchg
mov
loop
pcmpeqb
jge
leave
mov
fdiv
mov
xchg
pop
lahf
pop
fisttp
pushf
and
jb
ja
add
adc
xchg
pop
repnz
add
mov
or
pop
test
mov
fs
xor
dec
jecxz
gs
xor
addr16
icebp
loopne
push
cmp
popf
xchg
add
mov
adc
sbb
adc
mul
sbb
cmp
lods
ins
retf
neg
(bad)
and
ins
(bad)
adc
cmp
cmp
fiadd
sub
fnstsw
push
(bad)
mov
jb
fisttp
mov
jae
jae
xchg
lahf
in
(bad)
push
aam
sbb
or
jb
inc
outs
jmp
stos
dec
in
outs
cmp
dec
or
push
scas
loopne
cmp
xchg
sbb
mov
push
pop
xchg
jmp
nop
and
mov
dec
outs
add
mov
es
(bad)
jg
test
enter
jl
dec
mov
push
mov
inc
retf
push
push
ret
jl
mov
pushf
sbb
lds
cli
(bad)
and
dec
iret
add
arpl
mov
js
enter
fisub
mov
fsub
xchg
aas
cmp
add
popf
scas
arpl
inc
and
dec
ins
push
ss
lds
add
ins
sbb
adc
add
iret
xor
sbb
clc
aas
test
sahf
fild
sub
pop
and
pop
retf
outs
(bad)
ret
adc
mov
int3
ret
push
mov
fcomp
pop
out
cmp
mov
imul
ins
retf
cdq
push
hlt
addr16
ins
arpl
test
mov
push
add
xchg
pop
pop
mov
popa
fcomp
mov
retf
dec
and
cmp
call
imul
cmps
mov
aas
xchg
out
mov
pop
test
fst
addr16
or
adc
fisttp
test
mov
test
out
xchg
aam
rcr
data16
and
adc
lock
inc
or
sub
dec
pop
sbb
out
jp
and
push
dec
jno
in
inc
movs
sbb
(bad)
inc
mov
or
mov
jle
mov
clc
loope
sbb
or
dec
ins
data16
in
jecxz
and
add
pop
xchg
sbb
mov
call
dec
mov
cmp
test
popa
data16
mov
mov
adc
fwait
fwait
xchg
jge
adc
popa
aad
iret
neg
(bad)
fs
popa
(bad)
mov
dec
cmp
jbe
int3
cmp
dec
pop
inc
push
inc
gs
sar
out
test
adc
lahf
fst
popf
add
cmp
fimul
sub
aaa
mov
repnz
jbe
adc
rcr
dec
xor
je
or
xchg
in
pusha
inc
mov
or
mov
mov
dec
mov
in
ret
test
outs
neg
inc
ja
xchg
mov
mov
or
adc
and
das
stos
(bad)
dec
adc
xor
mov
ja
jb
or
xchg
sbb
stos
mov
or
sti
jle
inc
pop
push
popw
retf
sahf
pop
or
pop
shl
or
retf
dec
xchg
adc
test
cmc
cli
add
push
jmp
mov
dec
stc
mov
jnp
dec
dec
push
sahf
xchg
(bad)
(bad)
clc
xchg
in
icebp
icebp
jle
pusha
xor
aas
das
enter
stc
xchg
cmp
xor
prefetcht0
adc
and
fiadd
jne
adc
int
cwde
shr
xchg
pop
push
mov
rcr
daa
in
xchg
outs
(bad)
adc
sub
out
ins
leave
sub
stos
sar
shl
inc
pushf
les
(bad)
pusha
loope
mov
inc
push
adc
test
call
cmp
lea
mov
xchg
hlt
arpl
leave
or
lds
adc
inc
xchg
aas
out
sbb
jns
rcl
sbb
jnp
jp
pop
retf
sti
cmp
sub
mov
pop
pop
mov
jb
into
inc
sbb
add
in
scas
int3
push
int3
outs
jae
or
push
sti
cli
jb
retf
xchg
ins
sbb
call
push
ret
or
pop
mov
sub
fisub
retf
div
jmp
loop
icebp
ret
sbb
mov
sub
add
push
call
sub
fcom
(bad)
mov
ja
inc
jbe
jne
adc
sub
mov
bound
mov
mov
ins
imul
xchg
fs
adc
pop
sar
dec
xchg
push
mov
ret
je
je
(bad)
data16
rol
enter
shl
les
cmps
pop
data16
sub
mov
dec
dec
xor
movs
mov
int
lock
and
push
sbb
push
test
icebp
sub
xchg
pop
jecxz
and
mov
sbb
pop
in
inc
jne
or
xchg
xchg
and
push
int
add
in
jg
cwde
push
dec
sbb
mov
sahf
stos
push
(bad)
push
aas
inc
xchg
pop
sbb
(bad)
mov
outs
fwait
adc
dec
mov
(bad)
xchg
xor
icebp
mov
jmp
and
push
push
fidivr
cmp
js
pop
or
pop
mov
retf
cmp
jbe
jb
pop
scas
xchg
pop
push
sub
xchg
xor
mov
cmp
fsubr
pop
mov
js
mov
cmp
cli
pop
pushf
es
movs
xor
out
pop
loopne
mov
ins
jg
les
fld
xor
mov
inc
adc
mov
fwait
lahf
es
sub
adc
cld
cmc
mov
sbb
mov
sub
inc
xchg
mov
mov
(bad)
popa
and
pop
cmp
and
jmp
lea
mov
add
sete
or
(bad)
cmp
lods
jg
jnp
icebp
call
call
inc
xlat
clc
pop
sti
and
push
cmps
mov
scas
fs
test
or
inc
(bad)
lock
pop
aas
test
adc
ja
xchg
jbe
lds
xor
push
sbb
adc
popa
mov
lods
adc
test
inc
ins
icebp
ror
test
dec
ins
dec
test
ins
pop
sub
int
data16
jbe
cdq
xchg
or
imul
xor
push
call
inc
retf
push
fs
inc
pop
push
mov
jb
clc
fwait
popf
loopne
mov
mov
adc
(bad)
dec
and
(bad)
xlat
cmp
inc
loope
aad
out
jmp
pop
mov
out
xor
fmul
xchg
sbb
mov
and
rcl
sbb
repz
aad
pop
es
rcr
cmp
pop
imul
jmp
xor
je
xchg
shld
stc
inc
data16
jno
fiadd
iret
in
xor
xor
mov
ja
sub
mov
ret
mov
add
sbb
pop
jno
mov
jnp
pop
dec
outs
les
rcr
jmp
jno
stos
jnp
fld
int3
shr
cmp
add
pop
mov
jecxz
xchg
sub
dec
jecxz
in
push
movs
(bad)
cmp
test
(bad)
loop
adc
pop
push
sbb
push
clc
pushf
test
cld
mov
and
fiadd
inc
call
cmps
adc
inc
test
mov
fistp
(bad)
pop
pop
sub
add
mov
add
mov
ror
push
and
mov
mov
out
mov
mov
adc
xchg
cmp
shl
popf
dec
nop
aam
mov
adc
sub
imul
(bad)
outs
push
clc
sbb
cli
push
gs
sub
jl
inc
jg
popf
add
or
icebp
add
dec
inc
sbb
les
fwait
(bad)
clc
lahf
rol
cmps
loop
(bad)
call
mov
les
fs
into
test
fptan
adc
popf
jmp
jns
icebp
scas
cmp
or
xor
outs
daa
addr16
push
mov
out
loop
mov
scas
xor
std
call
icebp
and
lahf
leave
jo
inc
xchg
fcomp
mov
ins
dec
jmp
inc
jno
je
pusha
cld
add
loopne
outs
pushf
pop
gs
or
fst
scas
dec
mov
call
lds
movs
push
add
movs
movs
xchg
iret
lea
add
xor
jnp
mov
push
or
popf
aam
cmp
pop
dec
dec
mov
and
sti
mov
xor
jmp
push
(bad)
outs
cmp
aam
and
in
hlt
ja
retf
outs
hlt
repnz
inc
and
pop
sbb
jb
add
dec
cmp
xchg
lods
popa
jecxz
adc
push
pop
fmul
sahf
pop
inc
sub
in
addr16
stc
and
jecxz
and
lock
cmp
and
ss
push
fsubrp
add
sub
dec
inc
push
xchg
inc
add
mov
rcr
jg
out
not
mov
mov
sbb
jp
add
push
jb
and
(bad)
pop
mov
add
int3
xor
dec
sbb
lods
and
shl
sbb
test
sti
sub
sub
jecxz
mov
inc
cmc
inc
dec
mov
sbb
jbe
ds
push
push
xchg
or
bound
popa
xor
sbb
mov
fsub
(bad)
sub
push
in
gs
sub
push
fwait
cmp
sub
adc
mov
adc
sub
xchg
out
jb
mov
xchg
sub
and
xchg
fwait
es
shl
lock
rcr
xlat
mov
outs
outs
cmps
test
test
ins
push
cld
aas
jg
mov
mov
retf
and
pop
scas
pop
lods
call
cdq
addr16
outs
mov
ss
and
inc
(bad)
dec
inc
and
push
pop
in
ins
pop
push
jmp
neg
inc
outs
dec
aad
dec
pushf
iret
inc
add
outs
(bad)
mov
adc
push
daa
lea
and
add
les
mov
and
out
sub
stc
xchg
jmp
mov
out
rol
cli
daa
std
cmp
cmps
xchg
jmp
cmp
fistp
jle
adc
cmc
or
push
pushf
dec
xchg
xchg
jae
imul
xchg
pop
mov
in
(bad)
xor
xchg
addr16
pushf
lds
loope
xor
pop
in
shl
aas
pop
mov
(bad)
ds
shl
lods
stos
fwait
aad
test
mov
imul
xor
lock
pop
aas
push
add
test
addr16
test
in
adc
scas
leave
(bad)
and
dec
or
out
mov
aaa
xlat
nop
into
and
pop
je
dec
push
and
push
or
hlt
stos
cmp
dec
imul
dec
fadd
xchg
neg
inc
(bad)
push
pop
repnz
xor
dec
jle
ret
and
dec
cmp
loop
inc
ins
rcr
movhps
sub
lods
aam
pushf
js
popf
data16
lea
movs
dec
mov
add
loopne
xchg
dec
sub
xor
or
call
xchg
mov
ss
cwde
sub
jae
repz
push
outs
retf
test
daa
xchg
(bad)
sub
push
mov
xchg
loopne
inc
pop
push
pop
add
push
loop
dec
cmp
push
lds
nop
push
imul
imul
(bad)
outs
std
mov
ja
fxch
and
les
cmc
ficom
mov
bsf
dec
dec
push
aaa
test
dec
clc
cdq
xchg
dec
push
in
fs
imul
cmp
sub
aas
dec
cmps
dec
jle
fwait
daa
ret
dec
test
mov
div
mov
gs
data16
test
dec
ret
xor
scas
inc
jae
or
dec
ins
add
shr
mov
iret
jae
into
imul
push
jle
xor
cwde
loope
bound
int
out
mov
push
cli
add
aad
outs
cmp
mov
sub
repnz
dec
loope
popa
sub
into
add
mov
xor
mov
outs
into
push
cmp
lock
pop
bnd
sbb
fiadd
pop
pop
pop
mov
pop
dec
push
cmc
sbb
xchg
gs
jb
push
xchg
push
icebp
pushf
cld
loop
xor
and
pusha
xchg
out
out
pop
lahf
in
mov
mov
sti
xchg
fwait
pop
clc
fwait
mov
mov
dec
mov
jae
sar
fld
sub
push
ss
jbe
sub
fcomp
dec
xchg
out
push
loop
bound
push
ins
or
outs
cdq
xchg
push
(bad)
into
pop
rsqrtps
or
dec
push
mov
pop
int3
cld
jmp
lods
sub
stos
inc
mov
pusha
mov
push
sbb
jns
movs
ss
sbb
and
das
imul
sub
fwait
sub
push
cmp
ins
mov
sar
loopne
std
rol
push
sub
aam
repz
dec
int
jl
stc
dec
mov
stos
ja
cdq
mov
mov
(bad)
jne
sbb
adc
push
lods
in
cs
in
jae
fidivr
sub
int
addr16
and
rcr
mov
mov
lea
sbb
sti
jmp
pop
dec
sbb
adc
and
xchg
push
xchg
push
cwde
cmp
jno
inc
mov
push
dec
cmp
add
mov
sbb
bound
clc
xchg
push
fcomp
inc
or
jp
sar
lsl
lock
jnp
mov
test
mov
add
mov
mov
in
call
rcr
cmp
fstp
or
sub
add
mov
bound
pop
add
jmp
jne
push
pop
retf
out
pop
test
jmp
cmp
push
mov
call
inc
dec
sbb
mov
adc
popa
inc
out
(bad)
in
sbb
mov
dec
push
lock
and
ja
sub
sbb
adc
or
xchg
outs
pushf
cli
xor
xor
xor
sub
cwde
cs
(bad)
neg
fidiv
jns
adc
out
js
lods
mov
in
icebp
mov
in
cdq
mov
pop
inc
popa
mov
sbb
dec
xor
or
sbb
and
xor
dec
nop
setg
scas
pusha
aas
ror
aas
ror
shr
std
into
shl
fdiv
retf
cdq
in
dec
jge
imul
and
imul
loope
cdq
jb
imul
pop
loopne
fild
dec
out
push
and
and
cmc
mov
dec
aas
mov
ret
mov
(bad)
push
mov
fs
push
jo
mov
pop
sbb
mov
cld
jle
or
xchg
hlt
sti
jae
jg
dec
or
pop
push
mov
adc
mov
xor
or
jmp
ins
movs
mov
sahf
xchg
cs
jg
add
loope
and
pop
call
gs
sbb
ds
mov
es
sub
xchg
loop
outs
(bad)
jb
(bad)
adc
mov
jbe
lods
xor
cmp
test
(bad)
xchg
cs
xchg
jo
inc
ss
les
push
clc
xor
fisub
out
ret
out
ret
pop
push
imul
ss
outs
cmp
push
push
test
xchg
jb
enter
repnz
or
or
call
mov
std
ss
shl
cld
mov
aam
dec
inc
mov
repz
std
cmp
mov
popf
inc
jb
pop
jmp
in
call
fcom
ins
inc
mov
mov
es
pop
jae
aas
xchg
lahf
movs
stos
inc
mov
xor
pop
and
mov
int3
jp
out
sar
sub
adc
retf
cmp
and
loop
add
repnz
fist
and
repnz
pop
sbb
add
retf
jmp
addr16
popf
retf
cld
(bad)
sbb
push
pop
(bad)
sti
cmps
mov
jbe
adc
push
adc
ficom
lock
fld
fnstcw
jne
das
mov
and
xor
hlt
mov
cmp
mov
nop
sub
pop
cmp
xchg
std
(bad)
int
dec
cmp
call
div
dec
aad
or
push
push
or
outs
jne
call
mov
(bad)
pusha
pop
pop
sbb
frstor
push
call
mov
mov
fcmovb
xchg
mov
xchg
sahf
dec
xor
retf
pop
inc
inc
push
jle
in
cmp
inc
jge
mov
sbb
mov
int3
or
adc
add
add
jmp
or
jne
push
inc
ret
mov
inc
arpl
pop
add
dec
out
scas
mov
in
and
div
fwait
test
adc
mov
cmp
(bad)
(bad)
cli
psubw
add
cmp
inc
pop
add
xchg
call
ss
ja
nop
jmp
jle
fbld
inc
push
inc
addr16
icebp
popa
(bad)
adc
adc
adc
cmp
outs
lods
cwde
cdq
pop
cmc
xchg
sahf
inc
int3
stos
pop
sar
dec
into
dec
cmp
test
mov
xchg
sub
add
dec
std
cmps
xchg
test
outs
mov
stc
pop
outs
fnstsw
loope
call
data16
xchg
mov
rol
ficomp
jl
mov
push
xor
and
lahf
xor
and
inc
repz
inc
call
into
xor
sahf
mov
or
retf
adc
js
pop
dec
fisub
jns
jno
xchg
test
out
dec
mov
popa
sti
test
call
ret
jne
jbe
sti
loope
jecxz
dec
stc
inc
(bad)
mov
jmp
inc
fidiv
push
adc
mov
int
xchg
pop
dec
loope
ss
icebp
adc
je
inc
cmp
push
lea
imul
push
imul
pop
mov
call
xor
cmp
ficomp
ins
out
push
mov
in
mov
mov
inc
lahf
call
xchg
xchg
dec
sbb
mov
inc
push
jmp
cwde
mov
pop
(bad)
retf
int
sub
jge
and
xor
loope
and
sub
inc
add
dec
xchg
cmps
shl
lock
test
fbstp
inc
stos
cmp
pop
or
leave
xor
call
push
push
lahf
in
pop
ja
jecxz
aaa
push
pop
(bad)
out
push
sub
or
outs
xor
test
outs
dec
jns
pop
retf
pop
pop
in
shr
add
jg
push
inc
loope
retf
fisttp
stos
outs
add
inc
aaa
fisttp
jo
(bad)
outs
sub
pop
dec
cli
data16
aas
push
jbe
sbb
sbb
add
fiadd
inc
dec
or
sbb
cmp
std
xchg
mov
test
push
cmp
and
arpl
jb
add
xor
fwait
dec
les
xchg
stos
or
ret
lds
js
call
xchg
and
mov
xor
call
pop
fcom
xor
lods
xor
leave
cmp
aaa
xlat
retf
call
cmp
pop
jp
dec
adc
std
aam
adc
jb
dec
pushf
std
mul
jp
inc
mov
and
retf
std
push
aam
out
push
fsub
or
cmps
sub
mov
(bad)
sub
xchg
push
test
xchg
mov
xor
out
hlt
ss
mov
js
rcr
mov
or
cmp
xchg
and
mov
shr
hlt
fadd
loop
pushf
cli
popa
or
pop
daa
popa
fcmovb
popa
cmp
inc
push
mov
(bad)
out
int3
adc
adc
sbb
jnp
add
pop
lea
add
idiv
daa
push
aaa
inc
dec
popa
ficom
cmc
outs
xor
mov
mov
lahf
xchg
icebp
push
test
cmp
imul
xchg
add
or
xchg
jns
retf
retf
cmps
pop
push
hlt
jmp
ret
add
xchg
mov
das
and
mov
and
popa
push
sbb
loop
inc
imul
out
mov
imul
sub
pop
jl
sub
sti
and
inc
test
inc
push
(bad)
mov
out
dec
add
ds
test
xor
pop
loope
iret
outs
and
and
push
add
cdq
stos
mov
popf
repz
xchg
jns
dec
das
cld
mov
jnp
retf
ret
ficomp
add
pop
cmp
or
retf
mov
mov
add
and
mov
inc
aas
lods
imul
pop
cmc
pop
xchg
sub
mov
inc
outs
add
mov
mov
cmc
aas
mov
loopne
xor
clc
arpl
enter
mov
xchg
push
cmp
add
xor
ror
jb
clc
or
sub
popf
xor
or
out
xchg
cmps
pop
mov
fcomp
fst
adc
jl
inc
hlt
mov
or
add
pop
inc
movs
movs
add
repz
shl
xor
jg
mov
rol
popf
pop
mov
aas
aas
(bad)
mov
ror
mov
mov
aaa
push
or
movs
aaa
or
inc
cmps
xor
push
jno
mov
pop
sbb
popf
fist
(bad)
int
push
in
fs
mov
popf
cdq
fst
stc
in
pop
out
leave
dec
pop
or
sub
cmps
lods
push
test
dec
ins
sbb
push
test
sub
adc
and
jmp
sbb
pop
adc
pop
cmp
lahf
cmc
rcl
sub
cmps
pop
lahf
pop
push
or
mov
aad
inc
add
push
dec
retf
mov
mov
cmp
xchg
(bad)
cmp
push
lahf
lds
shl
sub
sbb
in
jno
movs
fistp
popf
push
mov
pop
aad
adc
iret
xchg
stos
jo
stos
test
mov
loopne
pop
fild
aas
ins
mov
adc
in
div
cld
sbb
fcmovnbe
sbb
push
xor
fcmovbe
inc
adc
xor
xlat
jae
shr
cmp
jmp
dec
pushf
mov
push
or
xor
mov
push
jo
mov
mov
lods
outs
shr
push
out
sar
dec
std
aam
pop
pushf
and
enter
mov
xlat
movs
or
rol
out
push
out
jns
inc
(bad)
retf
pop
in
fcom
(bad)
bound
movs
repnz
jbe
mov
xor
scas
test
sub
pop
fisttp
mov
mov
jne
sub
fwait
mov
mov
stos
ds
add
and
jne
cmps
in
xor
imul
inc
jp
jl
shl
call
xchg
cld
hlt
ins
shl
dec
ror
ins
cwde
test
out
or
ins
stos
sub
jp
mov
pop
mov
or
aas
(bad)
sbb
inc
xor
xlat
pop
add
pusha
xchg
push
sub
ret
shl
mov
ret
dec
jne
popf
std
stc
mov
push
cmp
sub
movs
scas
arpl
hlt
xor
adc
jg
sub
stos
outs
push
mov
fstp
hlt
mov
inc
push
or
sahf
popf
shl
or
in
adc
mov
cmp
or
jmp
push
lods
lahf
adc
sti
nop
jae
test
pop
loopne
retf
loope
mov
ja
mov
adc
mov
cmp
fsubr
loope
and
fsub
inc
loopne
ret
xlat
jg
test
inc
sbb
rcl
push
dec
push
inc
pop
je
jb
pop
int3
int3
mov
movs
push
rol
stos
aad
push
jge
daa
ficom
or
inc
call
sbb
cmp
pop
repz
inc
dec
dec
mov
cmp
jbe
retf
add
loopne
sbb
jno
sbb
in
in
mov
pop
out
pop
in
inc
shl
mov
jg
lods
dec
stos
loopne
mov
mov
cli
cmp
cld
lahf
or
nop
addr16
lods
adc
addr16
out
in
jno
loope
inc
xchg
call
cs
ins
retf
dec
dec
jbe
xor
or
(bad)
movs
and
cwde
data16
std
enter
mov
jl
popf
sub
mov
adc
pop
imul
push
fidiv
mov
sub
mov
jecxz
lods
hlt
or
push
xchg
(bad)
mov
inc
jb
dec
adc
test
sub
or
xor
inc
dec
mov
hlt
enter
ror
rol
nop
xor
sub
fldenv
xor
xor
sub
std
push
int3
xor
xor
movs
aas
fidivr
jne
sbb
imul
hlt
in
or
dec
xchg
test
outs
hlt
mov
stc
xor
gs
jbe
out
arpl
out
dec
(bad)
pop
dec
cmps
xor
adc
fwait
cmp
mov
das
lods
jns
iret
lds
jmp
jne
sbb
xchg
in
iret
ins
sub
fist
cmp
mov
stos
bound
jmp
mov
mov
sub
push
cmp
adc
sub
inc
lahf
sbb
lods
pop
adc
mov
clc
adc
jecxz
or
repz
xchg
leave
mov
fsub
lock
gs
adc
rcr
xchg
xchg
dec
cld
cdq
push
push
push
jae
or
add
add
jmp
mov
and
out
mov
retf
gs
daa
daa
mov
add
pop
mov
enter
std
imul
loope
sub
jmp
pop
add
push
sahf
fimul
(bad)
cmp
sbb
call
div
test
mov
into
jb
pop
mov
jl
popa
pop
movs
es
xchg
sbb
aam
mov
mov
cmc
inc
mov
call
xor
(bad)
rcl
adc
sahf
cwde
mov
mov
jne
push
repz
dec
clc
xchg
mov
push
pop
push
pop
addr16
movs
or
sbb
(bad)
call
inc
and
sbb
lock
rcl
test
mov
repz
leave
jp
jmp
add
mov
and
mov
and
xor
cmps
enter
adc
fisubr
inc
mov
das
add
enter
mov
inc
mov
jae
cmovp
jae
sbb
fild
mov
pop
push
cdq
out
push
mov
and
or
scas
cmp
jae
fild
leave
movs
imul
sbb
ins
(bad)
sbb
sbb
sahf
adc
xchg
xchg
push
sbb
mov
sbb
and
add
lahf
push
ss
cwde
nop
inc
xchg
call
popa
cmp
pop
adc
xchg
sbb
outs
int3
sub
ret
jb
dec
jns
retf
cmp
je
bound
clc
dec
cmps
mov
test
jl
aad
mov
mov
outs
outs
xchg
and
call
stos
leave
scas
sub
sbb
jg
daa
mov
mov
scas
clc
or
idiv
push
sub
push
mov
into
mov
jg
(bad)
popa
out
je
mov
repz
sub
pop
ret
neg
mov
jl
imul
mov
sub
aad
dec
enter
mov
mov
and
fstp
mov
mov
inc
das
mov
std
inc
jnp
mov
jmp
rcr
xchg
sti
clc
jne
dec
push
push
xchg
stos
(bad)
stos
shl
pop
jmp
dec
call
fidivr
or
inc
std
and
sub
pop
jo
(bad)
pusha
inc
push
ins
bound
dec
fisttp
pop
fs
in
retf
inc
sar
ret
leave
mov
loope
adc
imul
sbb
push
sub
adc
out
xor
mov
sub
jmp
mov
xchg
(bad)
sub
iret
cmp
push
mov
inc
stc
iret
test
or
adc
rol
xchg
arpl
pop
cmps
sbb
mov
iret
or
ss
cmc
scas
stos
stos
js
gs
jecxz
cmp
int3
outs
in
push
add
push
add
xchg
mov
and
pop
push
out
jmp
pop
je
jg
test
lahf
cmp
stc
(bad)
addr16
push
add
or
stc
vmread
gs
test
push
mov
pop
lea
mov
xor
rol
mov
sub
jmp
outs
push
mov
imul
pop
xor
push
mov
sbb
mov
lods
push
xchg
mov
sub
sub
or
retf
mov
dec
jo
clc
inc
dec
or
in
or
or
adc
adc
test
xor
movs
adc
out
fdivr
lea
and
jo
and
adc
sbb
adc
int
aam
fstp
sub
dec
xchg
dec
or
and
jb
pop
test
xchg
fwait
inc
adc
add
imul
inc
and
cmp
aam
push
pop
add
test
pop
inc
add
out
fidiv
call
add
jmp
aam
or
add
arpl
or
cmp
fsubr
sahf
lds
add
fld
jmp
scas
into
mov
mov
xor
cs
nop
aam
gs
imul
(bad)
xor
jge
ror
xchg
ret
and
sbb
mov
mov
jmp
out
mov
mov
jp
sbb
xchg
mov
xchg
push
sahf
pop
xor
jne
pushf
cmp
sti
(bad)
fdiv
sbb
add
movs
cmp
adc
retf
jecxz
ds
push
mov
cmp
popa
test
sub
push
fmul
add
std
jmp
cli
mov
repnz
cmp
sub
sbb
leave
and
movs
sub
ja
cmp
cmp
lahf
pause
dec
ins
icebp
call
les
repnz
mov
mov
pop
sub
hlt
adc
retf
pop
mov
adc
test
sub
mov
test
push
ins
mov
daa
xlat
and
sbb
gs
pop
scas
add
and
(bad)
adc
(bad)
sub
dec
dec
(bad)
call
retf
stos
js
in
xchg
ret
sar
push
cmps
and
arpl
scas
add
xchg
shl
aas
imul
cdq
(bad)
and
mov
dec
sbb
mov
iret
nop
cmp
pushw
out
pop
lock
mul
aad
pop
jnp
clc
mov
pop
xor
sbb
fist
shr
mov
cmp
add
xor
inc
inc
push
fwait
pop
stos
fimul
dec
add
fwait
aaa
sbb
shl
jbe
inc
cmp
aad
jg
mov
sub
(bad)
outs
pop
adc
loope
pop
fidivr
xor
mov
clc
sti
pushf
mov
xchg
mov
jge
idiv
call
ja
test
loop
clc
test
pop
sti
out
mov
xor
(bad)
xchg
leave
dec
mov
jnp
mov
pop
dec
push
xchg
mov
shl
fstp
sbb
cli
adc
jno
rcr
xchg
sahf
mov
cmp
imul
movs
in
sbb
jle
cmp
outs
ror
or
jp
push
or
dec
jle
adc
js
push
pxor
retf
mov
cmps
daa
movs
push
add
repz
push
(bad)
jmp
dec
icebp
std
add
pusha
push
ins
aas
mov
inc
shl
retf
fnsave
cld
ror
add
leave
xadd
cmp
cmp
repnz
jle
adc
or
test
aaa
ds
dec
lods
cmp
and
(bad)
in
mov
pop
inc
pop
xchg
xchg
and
mov
jge
push
lods
test
xor
fbld
mov
adc
push
sub
xchg
pop
push
enter
or
mov
sbb
popa
push
push
mov
out
jns
cdq
dec
fcmovbe
js
repz
mov
and
arpl
inc
jp
mov
cld
push
repz
int3
inc
sub
jne
(bad)
je
mov
ja
push
mov
mov
sbb
and
test
(bad)
cmp
enter
xchg
call
jno
sbb
fdivr
and
mov
push
cdq
xchg
cmp
shl
and
int
mov
xor
dec
aad
sub
cli
xor
cwde
sub
(bad)
cld
cmp
xchg
inc
popa
xchg
sub
outs
cmps
int3
mov
dec
mov
mov
mov
das
sub
clc
pop
adc
scas
inc
ficom
in
js
xchg
lods
or
lock
or
add
stc
sbb
xchg
jg
stos
out
sbb
and
cwde
and
ja
ret
lods
push
ins
into
mov
iret
outs
aaa
mov
mov
dec
retf
or
pop
loopne
dec
aas
jge
loopne
pushf
jno
jl
push
mov
adc
pop
xor
fsubp
sahf
sti
xchg
pusha
test
jae
dec
mov
icebp
sub
ret
repz
mov
xor
xlat
call
ja
test
test
push
adc
out
cdq
fcom
aam
sbb
lds
mov
xor
out
int
fucomp
inc
push
ss
jb
retf
mov
retf
inc
mul
inc
stc
gs
push
cmp
retf
movs
out
sub
xor
sub
loop
enter
mov
jns
das
lahf
mov
dec
ror
jp
xchg
mov
pop
mov
and
push
ins
sbb
mov
popa
jmp
jbe
and
cdq
pop
pusha
add
jb
lahf
dec
out
clc
xchg
cli
xor
cmp
sub
inc
int3
(bad)
xchg
and
jae
pop
fdivr
jns
ret
(bad)
scas
repnz
cmps
(bad)
in
xor
dec
push
addr16
popf
aam
fmul
dec
stos
mov
repz
xchg
mov
cmp
enter
push
xchg
dec
je
popf
push
xor
push
outs
and
jmp
or
jmp
pop
cdq
pop
fistp
jecxz
cld
(bad)
sti
push
iret
jmp
xor
sbb
add
pop
jnp
mov
rcr
push
xlat
cmp
xchg
cmps
jmp
repnz
xor
test
or
ins
lods
inc
popa
push
pop
ror
lock
add
dec
sub
jl
fild
jge
xor
or
or
aas
cmp
and
or
in
fldcw
lds
test
popf
fs
(bad)
push
out
pop
inc
in
ss
xchg
enter
loope
xor
add
and
jns
push
lds
aad
pop
cmp
(bad)
fwait
xlat
and
and
movs
in
pop
hlt
pop
sti
jbe
jnp
pop
inc
xchg
std
dec
mov
in
iret
icebp
pop
jb
movs
jp
sbb
adc
adc
xor
fs
mov
and
mov
jnp
sbb
imul
(bad)
xchg
mov
cmc
inc
lods
sub
fistp
mov
sbb
cmp
sbb
lea
dec
fadd
mov
xchg
mov
jnp
mov
sub
pop
(bad)
mov
movs
mov
out
push
xchg
or
mov
cmp
arpl
mov
cmp
mov
lahf
lea
scas
mov
and
shl
mov
int3
ret
pop
out
sub
mov
imul
pop
mov
inc
mov
sub
pop
aaa
xchg
add
sbb
test
and
cmp
fnstenv
pop
loopne
xchg
(bad)
mov
cmp
bound
and
and
add
xor
add
addr16
jl
inc
dec
das
adc
or
aas
outs
enter
arpl
add
sub
(bad)
push
jns
test
sbb
bound
stos
inc
das
shl
fistp
xchg
addps
cdq
mov
adc
in
xchg
inc
xor
and
add
sbb
push
jbe
mov
mov
pop
xchg
fs
inc
test
dec
loopne
pop
or
mov
inc
mov
or
cwde
mov
cmps
jmp
and
popa
mul
les
stos
mov
sub
imul
cvtps2pi
xor
mov
stos
xchg
jg
into
cld
rcl
or
(bad)
pusha
inc
lahf
or
sar
daa
and
pop
scas
dec
enter
leave
mov
push
sti
shl
jbe
sub
imul
cmc
jbe
aam
push
inc
movs
lock
int
in
sar
or
loope
push
fld
leave
dec
jb
popa
mov
adc
test
pop
pop
and
iret
sbb
(bad)
enter
jbe
fdivr
push
mov
mov
xchg
or
ja
(bad)
mov
sub
pop
das
icebp
sbb
mov
or
out
and
jns
mov
repnz
cmp
nop
push
mov
lds
loopne
repnz
rcl
sub
xor
in
jmp
sbb
ja
or
or
movs
jnp
(bad)
popa
xchg
rol
idiv
push
sbb
push
cdq
fistp
inc
fidivr
jb
int
and
sub
push
lahf
and
mov
in
movs
addr16
add
jmp
dec
sbb
ja
mov
and
mov
out
(bad)
jnp
aad
jle
fld
inc
(bad)
dec
out
push
in
fisubr
adc
test
mov
or
lahf
add
inc
mov
cmps
fcom
(bad)
mov
inc
push
sbb
call
jg
jge
push
mov
mov
mov
fs
sbb
jb
push
lds
sbb
jl
je
push
mov
or
(bad)
retf
fidivr
sbb
mov
add
xor
xchg
out
loope
jns
dec
pop
out
lahf
fcom
or
je
xor
push
iret
mov
test
push
xor
dec
push
push
dec
clc
in
mov
jb
sbb
mov
test
xchg
xor
int
retf
cld
rcr
or
packuswb
data16
xor
in
ror
xchg
fld
fst
add
lea
pop
mov
jb
movs
icebp
fcomp
push
inc
xlat
dec
adc
fs
(bad)
retf
mov
and
jecxz
out
(bad)
outs
fimul
movs
(bad)
out
faddp
iret
lock
push
push
retf
adc
push
and
call
dec
ret
mov
xchg
adc
ins
jb
popf
rcr
cs
add
push
add
mov
xchg
jno
retf
lods
xchg
xchg
push
(bad)
das
pop
aaa
test
arpl
(bad)
xchg
cwde
pop
cmp
dec
xchg
dec
mov
or
pop
es
mov
mov
sbb
(bad)
lods
cmp
push
jbe
and
xchg
data16
add
mov
ret
dec
das
cli
mov
stc
pushf
adc
push
out
adc
rcl
out
adc
addr16
cmc
fucomp
imul
adc
int
dec
fs
shl
sub
test
popf
and
mov
xchg
(bad)
js
jne
mov
repz
dec
sbb
cmps
popf
jp
add
lock
fild
or
ins
pop
popf
xchg
not
loopne
les
ficomp
out
push
sbb
gs
nop
jne
lods
mov
xchg
xlat
(bad)
mov
adc
lods
xchg
repnz
(bad)
xlat
js
mov
xlat
cmc
popf
bound
retf
cli
inc
xchg
adc
or
imul
imul
mov
ins
sbb
pop
cli
jne
ins
mov
mov
outs
xchg
nop
sub
push
mov
mov
push
retf
out
cmps
daa
sub
adc
ret
pop
mov
mov
cmp
arpl
test
pushf
xchg
sub
adc
mov
xor
fadd
daa
cld
mov
jmp
ds
pop
inc
aaa
adc
inc
mov
xchg
retf
ins
adc
cmps
mov
pop
jle
xchg
xchg
in
mov
cmps
lods
sti
popf
addr16
push
pop
or
(bad)
fmul
xor
pop
pop
sbb
fwait
sbb
push
pushf
push
jo
repz
mov
pop
sbb
mov
jb
xchg
mov
rcr
mov
js
xor
repnz
push
push
jbe
add
mov
dec
dec
leave
or
add
push
pop
xchg
shl
dec
pop
xor
xor
outs
sti
xor
jl
ins
fwait
leave
jge
mov
js
nop
mov
aad
repnz
add
mov
(bad)
fist
push
adc
xor
fstp
mov
out
push
push
inc
xor
hlt
ret
push
pop
(bad)
push
dec
adc
push
mov
movs
aas
sbb
xor
cmp
xchg
add
pushf
lods
pop
jb
push
and
lods
pop
(bad)
(bad)
into
mov
adc
xchg
shl
or
add
mov
shr
xchg
mov
sub
sar
clc
dec
mov
das
mov
fdivr
pop
and
ds
cdq
ret
out
jecxz
test
mov
jmp
gs
sub
fld
adc
daa
xchg
jns
mov
js
pop
jle
inc
ror
cmp
pop
dec
imul
jns
sub
rcl
lock
xchg
mov
push
loop
out
inc
repz
div
add
mov
scas
stc
cmp
ss
xlat
sbb
push
dec
mov
cmp
hlt
ror
rcl
dec
mov
push
mov
ret
lock
pop
mov
mov
shl
mov
sub
arpl
sbb
mov
ds
push
ins
inc
push
clc
data16
add
jmp
out
aam
arpl
fidiv
test
jno
sub
daa
iret
rcr
fst
and
xchg
pop
jmp
movs
(bad)
fmul
push
lea
(bad)
xchg
or
lock
js
ror
jp
dec
push
inc
add
pop
out
loope
(bad)
sbb
out
inc
in
fbstp
outs
mov
or
push
fisub
mov
xchg
jecxz
call
mov
loope
gs
mov
test
xchg
xor
push
add
lods
xor
mov
repz
jp
push
sub
pusha
call
inc
jne
sbb
sub
shl
mov
js
cmp
cmps
addr16
(bad)
ja
dec
mov
add
or
dec
(bad)
in
in
retf
and
mov
adc
aaa
mov
aas
retf
and
mov
fs
add
push
or
push
dec
or
xchg
xchg
data16
or
div
fnstcw
aaa
xor
jmp
mov
jbe
popf
inc
jecxz
shl
out
loop
bnd
cli
sar
adc
mov
inc
adc
std
imul
jbe
(bad)
cwde
mov
addr16
and
or
pop
std
sbb
pop
das
sub
inc
adc
in
or
idiv
in
sub
loope
sbb
jle
retf
or
mov
pop
loope
xchg
add
xchg
ins
sub
repnz
aas
and
daa
imul
es
stos
inc
aas
add
jnp
(bad)
and
lahf
mov
cmp
mov
jb
(bad)
outs
pop
jg
xchg
xor
pusha
sbb
mov
daa
cwde
cmps
out
aam
in
jbe
rcr
inc
cmp
(bad)
or
pop
pop
pop
sub
leave
cmp
pop
xchg
fdiv
push
push
call
outs
arpl
sbb
add
aaa
inc
pop
cmp
jbe
fs
sub
cmc
arpl
aam
es
aaa
(bad)
mov
pop
dec
stc
cmc
or
aad
add
jmp
mov
xchg
xchg
dec
adc
jb
jmp
pop
or
lahf
cdq
add
das
dec
retf
pop
xor
mov
xor
jno
popa
dec
test
arpl
std
dec
mov
mov
jle
std
cmp
into
cli
mov
cmc
sub
ficom
inc
or
jnp
idiv
add
add
push
cmp
pop
daa
add
xor
add
aas
xchg
mov
xor
ja
arpl
sbb
and
rcl
mov
lods
aam
aam
add
xchg
add
pop
iret
rcl
loopne
inc
or
pop
cmps
call
and
es
or
sti
push
mov
ins
(bad)
dec
enter
jnp
mov
es
pop
jle
mov
je
mov
arpl
add
rcl
fbld
inc
and
mov
ds
sahf
fsubr
fwait
cmp
push
sub
retf
in
xchg
leave
std
jle
cld
(bad)
or
inc
or
das
xor
out
or
jl
data16
icebp
in
fisttp
xlat
call
mov
pop
xor
clc
ins
int3
mov
pusha
sub
mov
xchg
xchg
test
cmp
mov
das
adc
push
ss
mov
pop
dec
mov
mov
fs
aaa
or
jne
mov
inc
ret
cmp
ins
daa
add
and
dec
sub
mov
mov
pop
or
(bad)
mov
jecxz
clc
mov
pop
mov
push
sbb
je
loopne
inc
stos
fxch
fimul
xchg
nop
iret
pop
adc
sub
test
outs
push
shl
loope
and
(bad)
rcr
dec
test
vcmpsd
cmps
inc
je
xor
retf
repz
arpl
mov
inc
sbb
adc
retf
mov
pop
(bad)
cmp
pop
test
not
hlt
call
call
lods
sbb
dec
out
test
sahf
fadd
push
out
sbb
xlat
cmp
std
jmp
gs
dec
jb
popa
ss
outs
sti
in
pop
jno
push
dec
push
ret
dec
shl
pushf
push
scas
aad
or
pop
test
aad
push
leave
rep
jnp
push
idiv
enter
xchg
push
repz
cdq
mov
in
cmp
inc
mov
(bad)
fwait
xchg
push
or
or
mov
fsubr
cmps
push
cwde
adc
push
(bad)
push
inc
mov
and
mov
sahf
vmread
iret
imul
sahf
test
not
xor
loopne
pop
inc
or
dec
jge
sbb
dec
cmp
jp
lds
call
es
or
inc
xchg
push
mov
sub
xor
lea
imul
(bad)
sub
and
nop
ror
loopne
fisub
test
or
dec
inc
xchg
lahf
lea
loope
fsub
lahf
sbb
mov
sub
mov
and
cld
pop
mov
inc
lds
(bad)
pop
mov
and
sub
or
cld
out
mov
pop
jge
lock
sahf
or
xchg
or
mov
sub
cmp
sub
or
adc
(bad)
mov
in
lahf
adc
jae
rcr
jmp
mov
mov
inc
push
enter
jmp
mov
push
mov
xchg
dec
je
retf
sbb
jmp
into
lods
xchg
test
int3
cmp
int3
push
inc
cmp
or
cdq
pop
sbb
jnp
test
push
rcr
push
or
stc
scas
pop
push
xchg
adc
gs
jle
aam
(bad)
into
push
ja
or
mov
cwde
cmp
popf
adc
xchg
(bad)
or
jae
adc
(bad)
sbb
ins
test
jo
stc
mov
scas
fcomp
into
jp
and
lds
push
popa
stc
es
mov
xor
fnsave
pusha
and
cld
aaa
mov
dec
repnz
fwait
mov
repz
es
mov
mov
or
add
scas
lods
sbb
push
rcr
test
cld
pusha
pop
mov
xor
push
stc
mov
(bad)
movs
retf
cdq
inc
int3
es
adc
or
add
ins
sub
xor
xchg
cmp
cmps
ret
and
cld
push
fld
movs
or
sbb
int3
pop
pop
repnz
jmp
cmp
inc
js
mov
adc
fiadd
xor
(bad)
push
inc
inc
push
add
add
inc
das
adc
sti
push
dec
cld
enter
idiv
jmp
and
jns
inc
inc
fidiv
cmps
stos
rcl
pop
ins
push
adc
push
movs
movs
jp
pushf
mov
jns
(bad)
gs
sahf
pop
mov
sub
sldt
adc
jbe
sbb
fmul
stos
mov
fmul
add
mov
mov
call
sub
in
daa
mov
xchg
pop
push
mov
mov
sbb
int
and
mov
retf
ror
adc
push
sub
mov
cmps
mov
adc
repnz
test
mov
or
xlat
addr16
push
fs
repz
sbb
fistp
(bad)
jmp
cmp
retf
pop
dec
jge
mov
or
dec
jbe
es
dec
fstp
inc
dec
inc
lea
lods
shl
int
stc
shr
mov
jle
push
ud0
cld
mov
cdq
adc
push
and
cmps
dec
xor
or
xor
xor
in
dec
mov
push
ins
outs
push
push
xchg
xor
lock
mov
xlat
ds
push
dec
outs
mov
mov
fist
cmps
cmps
mov
retf
sar
stc
dec
popf
(bad)
xlat
loope
popa
xchg
scas
lods
(bad)
rcl
enter
push
mov
push
arpl
repnz
jle
arpl
xchg
jns
fdivr
bound
out
jne
lsl
fimul
inc
repnz
outs
sub
nop
call
push
jl
std
ds
pop
inc
fldcw
add
ror
and
mov
xchg
jg
xor
clc
push
into
cmp
dec
jle
jecxz
dec
movs
jnp
ret
repnz
mov
mov
lock
mov
dec
mul
xchg
stos
stc
push
jns
and
pop
cdq
aam
movs
and
(bad)
loopne
cmp
icebp
jl
into
out
retf
cwde
inc
cmp
jl
add
ins
jne
int3
push
or
stc
cld
jmp
mov
icebp
(bad)
push
mov
jae
test
adc
pop
push
aas
sub
(bad)
cmp
push
scas
sbb
repz
(bad)
or
mov
cmps
test
popa
div
lahf
in
mov
and
jecxz
jo
and
mov
xchg
xlat
cmp
loop
loope
adc
leave
test
cwde
inc
pop
jle
xchg
ja
std
dec
test
dec
les
sahf
xchg
idiv
in
call
es
adc
mov
mov
or
aad
xchg
sbb
add
and
jne
push
clc
ins
fsubr
jg
and
ss
sbb
xchg
jg
sbb
add
push
bound
sti
push
inc
and
jne
cmp
adc
mov
or
fdiv
push
cmps
xchg
push
call
or
mov
xchg
rol
loop
jnp
test
or
pop
fld
mov
dec
aas
mov
(bad)
fmulp
jne
call
cmp
jle
jae
arpl
dec
xor
(bad)
pop
or
jle
pop
loopne
out
jb
inc
repnz
mov
enter
xor
cmp
cmp
cmp
inc
fld
cld
ret
push
rcr
frstor
in
xchg
jo
arpl
and
out
stc
xor
and
das
push
pop
sbb
xchg
jmp
and
push
test
arpl
xchg
cmps
(bad)
test
xor
imul
lahf
ss
shr
push
dec
std
or
popa
scas
mov
dec
clc
jne
out
retf
mov
shr
sbb
fnstenv
pop
cmp
js
and
movs
xor
mov
cli
inc
mov
jg
outs
lock
arpl
test
retf
shr
mov
push
mov
xchg
dec
jmp
pop
mov
out
bound
mov
in
mov
mov
cmp
lea
popf
adc
pusha
shl
sbb
mov
push
mov
pop
ud0
sub
bound
mov
(bad)
pop
push
mov
pop
fiadd
mov
cmp
invd
imul
or
xchg
or
loop
jecxz
cli
out
sahf
sti
arpl
cmp
jb
pusha
xor
and
shl
pop
sub
adc
sahf
je
pop
adc
lods
sbb
xor
or
xor
inc
scas
in
jbe
dec
ret
fist
int
mov
xchg
push
sahf
push
and
ret
cmps
pushf
loopne
xchg
sti
xchg
xchg
scas
cdq
jecxz
mov
(bad)
test
xor
dec
dec
ins
mov
xor
icebp
xchg
sbb
outs
mov
inc
push
scas
add
dec
sub
call
mov
xlat
cwde
inc
mov
mov
nop
movs
adc
dec
sbb
mov
sub
sub
mov
out
jo
cmps
call
pop
or
xlat
pop
cwde
dec
sti
jge
lds
imul
out
adc
pop
adc
or
call
fld
or
mov
clc
ret
stc
jp
(bad)
fdivr
sbb
lock
shl
xor
add
enter
push
pop
cmp
push
inc
jbe
lods
mov
push
xor
pop
vphaddbd
mov
shr
mov
adc
jp
retf
cs
and
ins
fisub
loope
arpl
(bad)
(bad)
sbb
(bad)
clc
push
xor
outs
out
rcl
std
dec
int3
pop
(bad)
jge
lock
(bad)
ins
fimul
je
leave
mov
inc
push
retf
retf
lods
dec
dec
shr
scas
(bad)
int3
aam
rcl
mov
sbb
das
rol
aad
sahf
out
setne
sahf
call
cdq
into
jns
pop
(bad)
dec
pop
lock
fbstp
cli
data16
mov
mov
jb
sub
push
mov
jmp
movs
stos
sbb
jl
les
jle
stos
popa
dec
push
(bad)
xlat
cmp
sbb
fbld
aaa
mov
nop
cmovae
cmp
mov
mov
cmp
into
inc
mov
test
inc
cmp
push
pop
retf
sbb
inc
cli
push
sbb
pop
(bad)
adc
scas
aaa
push
ins
loopne
sub
rol
test
pop
stc
fist
mov
fidiv
dec
jno
xchg
cld
mov
xor
mov
test
call
add
outs
hlt
add
outs
cdq
inc
cmp
inc
inc
xor
sbb
out
ja
xor
cmps
xchg
fisttp
and
ds
std
cli
jmp
aas
sub
addr16
out
cmp
out
loop
dec
mov
adc
pop
inc
out
sub
les
dec
xor
daa
mov
clc
icebp
mov
call
mul
outs
adc
add
movs
repnz
lds
sahf
jge
fiadd
fcmovne
xor
btr
lea
or
cmp
xchg
or
std
int
mov
loopne
in
sub
mov
lods
mov
int
pop
retf
adc
mov
pop
mov
mov
out
push
ins
daa
add
dec
shl
aas
nop
mov
arpl
int
scas
cld
mov
sub
enter
sub
and
mov
jmp
(bad)
cmp
push
fwait
int
shl
add
sub
push
out
sahf
or
icebp
mov
rcr
add
xor
xchg
or
xor
fidivr
adc
(bad)
fsub
sub
dec
mov
ficomp
mov
pop
jge
adc
lods
loope
shr
jp
or
popf
(bad)
mov
and
xchg
data16
fwait
icebp
enter
and
and
mov
and
jecxz
daa
arpl
into
sub
and
or
push
push
xor
stos
dec
push
jge
pop
scas
arpl
xor
jb
pop
and
cli
(bad)
stc
xchg
sub
inc
std
fstp
sub
inc
retf
and
out
lods
pop
js
inc
pusha
push
and
inc
shr
jne
mov
xor
mov
xor
adc
sti
pop
lahf
arpl
fs
(bad)
(bad)
call
jb
xchg
stc
xor
cwde
add
sub
jns
ins
inc
cwde
and
jbe
adc
sahf
mov
add
mov
push
outs
lods
outs
mov
add
pop
and
mov
cli
cmps
jmp
push
stc
xchg
(bad)
fwait
add
pop
add
adc
mov
cli
inc
movs
xchg
xchg
in
adc
inc
push
imul
dec
xor
jp
gs
std
mov
pop
adc
mov
xchg
pop
and
mov
push
mov
mov
popa
push
cwde
pop
sbb
xchg
jmp
iret
je
in
cmp
mov
dec
ror
dec
cmp
leave
fadd
imul
pop
xor
retf
or
add
cmps
xlat
jbe
xchg
cmc
jns
jmp
(bad)
lods
xchg
mov
cmp
inc
mov
mov
jl
mov
and
adc
aaa
rcr
inc
jnp
jmp
popa
lahf
ror
neg
cmp
cmp
adc
adc
movhps
xlat
stos
push
xchg
dec
mov
test
xchg
mov
xor
sbb
push
test
out
dec
repz
stos
add
pop
icebp
clc
push
iret
pop
sub
jbe
sub
lods
cmps
sbb
loop
dec
rcr
ret
and
enter
jbe
fs
push
push
call
ror
div
test
nop
jp
rol
aaa
iret
cdq
fisttp
or
js
popa
out
mov
lock
bound
gs
movs
adc
std
inc
bound
imul
xchg
dec
jmp
mov
dec
ins
jl
clc
pushf
and
mov
stc
fld
pop
dec
push
add
cmps
mov
leave
mov
pop
ja
in
std
push
push
scas
ins
adc
lahf
mov
mov
stos
lods
sub
dec
ss
pop
jno
enter
xchg
call
jle
loope
int
aam
lahf
or
mov
(bad)
and
mov
cmp
aad
popf
pop
pop
mov
(bad)
mov
pop
and
mov
in
pop
push
mov
(bad)
lods
ss
nop
mov
xchg
xor
outs
mul
bnd
adc
push
add
lock
push
sub
and
adc
mov
shr
jmp
dec
adc
or
or
push
lods
ss
ins
xor
mov
mov
mov
mov
inc
sbb
call
test
push
das
xor
and
je
push
out
or
cmp
pop
or
pop
push
mov
dec
sub
sub
idiv
loop
clc
jns
mov
push
aas
mov
mov
push
mov
repz
std
sbb
stos
mov
xor
mov
sub
mov
jge
shl
sub
or
mov
adc
std
xchg
push
ins
pushf
mov
sub
mov
mov
push
stc
cmc
movs
or
and
ret
cmp
mov
daa
imul
enter
bound
xlat
xor
sar
push
movs
ret
push
stos
in
rol
cmp
shl
jno
mov
fs
test
cmps
jbe
jp
jo
cld
push
adc
mov
push
ja
pushf
cmp
rcr
mov
and
mov
stc
sbb
retf
dec
and
mov
mov
xchg
mov
inc
jne
in
add
fst
sbb
out
mov
mov
or
sti
(bad)
rol
push
test
push
xchg
pop
sub
into
fimul
lea
ficomp
in
or
popa
mov
fld
xchg
jno
jle
jmp
sti
cld
mov
stc
xchg
pop
cld
jno
lahf
add
or
rcr
mov
(bad)
lea
push
mov
out
or
cli
or
inc
add
push
cmp
jecxz
cdq
test
pop
(bad)
cdq
jno
div
mov
lahf
xchg
or
mulps
and
cmp
sti
jecxz
je
mov
pop
cmps
xlat
outs
adc
sub
mov
cld
add
movs
cli
pop
mov
jle
loop
jno
xchg
add
mov
ins
sbb
mov
sbb
adc
daa
outs
cmps
jb
inc
adc
mov
inc
(bad)
fld
jae
pop
into
pop
lods
mul
pusha
push
inc
and
imul
fwait
jnp
jl
jecxz
loop
jecxz
js
mov
lds
push
and
ss
lds
sbb
es
out
jne
gs
cld
push
adc
in
inc
pop
xchg
sbb
mov
push
or
nop
arpl
inc
(bad)
out
pusha
dec
(bad)
sub
push
jbe
int
mov
push
shl
jnp
test
xor
dec
and
mov
scas
popf
scas
cwde
dec
call
pop
loop
dec
shl
push
ror
mov
inc
cmps
out
int
add
sbb
aad
push
jo
mov
inc
push
sub
lock
or
xchg
loopne
or
push
adc
mov
jno
push
push
fcomi
popa
xchg
jns
lods
xchg
and
push
inc
xchg
cwde
int
and
mov
cwde
jmp
jp
gs
loopne
jo
icebp
jmp
inc
push
(bad)
into
xchg
sbb
psllq
pop
mov
out
mov
sbb
pop
push
cmp
mov
ins
xor
mov
ja
adc
push
aas
jecxz
mov
add
push
aam
dec
(bad)
loopne
mov
or
lea
mov
ror
xchg
ins
and
cli
mov
sbb
bound
jno
retf
mov
shl
add
pop
dec
ror
cmp
mov
sti
lahf
jnp
cmp
fstp
scas
and
in
test
lock
arpl
push
pop
(bad)
rcr
inc
or
lock
cmp
sbb
jb
xchg
jl
mov
add
test
cwde
sub
jge
cmps
imul
outs
stc
and
(bad)
push
adc
int
pop
cmp
mov
xchg
or
xchg
inc
sbb
mov
pop
pop
popa
add
out
mov
rcl
dec
and
sbb
sar
add
xor
mov
jecxz
jo
jl
xor
data16
sub
inc
push
mov
mov
inc
dec
or
test
dec
lods
mov
or
sub
sbb
mov
jg
stc
mov
jae
data16
add
repnz
mov
jecxz
cwde
mov
stos
push
mov
cmp
pop
ret
cmp
xchg
cmps
in
jg
out
hlt
scas
xor
fdiv
fsubr
xor
push
call
mov
mov
or
sub
mov
xor
mov
ss
cmp
push
jo
fs
add
push
mov
leave
repz
xor
sahf
test
push
arpl
scas
xor
pop
inc
mov
pop
fst
dec
or
add
in
iret
jle
in
les
mov
nop
aam
jle
xor
bound
push
jge
loope
test
and
dec
inc
mov
or
(bad)
retf
adc
push
and
pop
fist
fistp
pop
dec
adc
and
loope
ja
or
outs
jae
lods
gs
call
mov
xor
inc
push
sub
nop
jmp
mov
scas
mov
je
pop
push
dec
js
scas
repz
push
out
mov
jecxz
outs
fdivp
add
ins
add
cwde
jbe
xchg
sbb
sub
xchg
(bad)
retf
clc
out
pop
or
pop
in
popf
xor
loop
fidivr
in
popa
or
clc
and
nop
mov
mov
dec
or
jmp
popa
jg
jb
test
ss
jnp
dec
test
dec
aas
aam
pop
repnz
in
mov
xchg
adc
mov
mov
or
fcmovnu
lock
mov
fisub
cmps
push
and
test
sbb
out
xchg
aas
adc
retf
mov
nop
pop
or
mov
rcr
jne
mov
dec
xchg
clc
jae
mov
lods
inc
les
mov
mov
jo
xor
jns
push
and
ror
pop
sti
pop
adc
(bad)
out
inc
xchg
inc
fld
pop
sti
fdiv
add
(bad)
mov
aad
mov
int3
push
and
aaa
dec
imul
mov
sub
push
enter
xor
jne
sbb
das
adc
adc
xor
push
mov
cwde
xchg
sbb
movs
xchg
mov
idiv
push
mov
jmp
jo
iret
in
pusha
mov
inc
sub
sub
loop
add
and
adc
fadd
dec
cmp
sbb
icebp
xchg
das
popa
adc
aad
cld
ja
mov
les
jmp
hlt
xor
cmp
and
test
mov
mov
sbb
ins
and
jnp
mov
ror
lods
movs
jne
fs
mov
mov
(bad)
fucom
data16
lahf
cdq
jb
adc
xchg
std
call
xchg
pop
fcomp
retf
pop
out
jmp
pop
shr
mov
sub
mov
mov
xchg
imul
pusha
enter
push
sbb
add
ss
pop
push
scas
cmp
push
or
cmps
scas
ror
iret
or
xchg
sub
int
sti
xchg
test
push
call
jl
inc
out
(bad)
(bad)
cmp
stc
pushf
pop
jb
xor
lods
mov
cmp
scas
dec
dec
mov
cwde
(bad)
(bad)
stos
sub
lods
shl
xor
mov
sti
sub
fcom
popa
mov
inc
inc
rol
cmp
pushf
repz
lock
shl
and
jg
add
in
iret
lea
popf
pop
pushf
(bad)
div
loope
repnz
out
out
hlt
frstor
scas
push
xor
jno
movs
jns
or
inc
mov
mov
retf
mov
out
ins
daa
data16
call
in
in
mov
arpl
mov
pusha
pop
push
mov
or
enter
mov
and
out
xchg
mov
out
sti
sub
mov
dec
je
adc
push
xchg
(bad)
(bad)
mov
push
mov
adc
rcl
stc
pop
sahf
in
and
nop
xchg
mov
push
and
mov
out
popf
cwde
xor
in
(bad)
lahf
test
pop
addr16
arpl
and
ror
push
jmp
and
xchg
cmp
rol
add
enter
pop
arpl
cwde
call
ds
rol
scas
ins
fdivp
sub
lock
mov
push
xchg
(bad)
inc
adc
outs
push
mov
or
fnstenv
fidivr
jmp
arpl
sbb
or
lahf
movnti
call
jge
out
retf
mov
faddp
stc
inc
xor
imul
adc
ja
jl
leave
movs
inc
ins
mov
cmp
das
pop
mov
add
hlt
sub
cs
xor
scas
add
lock
cmps
dec
cli
lahf
pop
pop
pusha
jno
xlat
enter
xor
fstp
test
int
movs
pop
or
std
inc
dec
lods
xchg
cld
inc
rol
retf
mov
push
sbb
shl
jmp
mov
cmp
retf
rcl
add
mov
xor
clc
inc
lea
pop
inc
ret
push
ss
xor
add
xor
rcr
fistp
repnz
pop
inc
test
adc
cmc
add
cmp
neg
push
push
adc
ins
sub
mov
out
xor
mov
mov
pop
mov
sbb
and
retf
addr16
inc
jmp
xor
test
jmp
fs
adc
fucomi
imul
shl
enter
cmp
jno
or
(bad)
mov
cmp
fstp
cmp
mov
fsubr
retf
mov
jge
ja
repz
and
(bad)
out
jp
sub
pop
sub
cdq
adc
jo
icebp
inc
fisubr
out
mov
push
lds
outs
rcr
mov
lds
jl
jle
and
and
cmp
icebp
mov
test
(bad)
fmulp
xchg
sub
push
mov
mov
inc
sbb
outs
mul
outs
out
or
outs
adc
lahf
xchg
jmp
add
into
fstp
jns
(bad)
fwait
add
loope
push
mov
ja
mov
test
mov
js
mov
or
mov
(bad)
pop
or
setge
dec
inc
addr16
add
cmps
mov
pop
mov
dec
shr
fwait
pusha
push
sub
neg
sbb
sub
mov
stos
adc
ja
push
(bad)
dec
xchg
dec
push
test
dec
push
pusha
in
(bad)
ins
fld1
mov
rol
neg
cmc
ja
stc
push
add
sbb
les
std
clc
aaa
and
fnsave
cs
fst
push
jmp
aad
test
cmps
int
jae
jp
lods
(bad)
mov
movs
mov
fadd
repnz
inc
out
sub
inc
int3
sar
mov
push
fwait
sbb
leave
arpl
xor
jo
in
loopne
ret
push
imul
mov
cmps
mov
push
cmc
cli
data16
push
pop
xlat
sbb
call
cwde
jnp
xchg
dec
push
mov
or
stos
mov
int3
dec
ins
sbb
retf
push
leave
fisttp
xchg
adc
pop
rcr
add
pop
adc
into
and
aad
fidivr
out
fsub
push
sbb
imul
les
add
out
shl
dec
cmps
dec
ss
pop
loope
scas
in
push
mov
inc
outs
js
mov
pusha
imul
cmp
cli
out
pusha
icebp
ror
outs
xor
into
add
shl
mov
add
add
ret
mov
or
jmp
cmc
pop
adc
cmps
pop
es
ret
sub
(bad)
lahf
dec
clc
repz
out
push
dec
xchg
js
add
or
push
(bad)
dec
and
add
adc
push
mov
popa
push
ja
inc
sub
shl
aam
mov
loopne
pop
xlat
pop
stos
stos
in
lods
enter
inc
mov
mov
in
xchg
or
pop
fwait
xor
ret
cmps
push
xor
add
je
adc
xor
sbb
xchg
inc
inc
icebp
and
sbb
mov
or
aad
push
mov
or
jecxz
ins
jae
sbb
jle
inc
and
out
sub
in
mov
inc
mov
out
xchg
adc
call
in
mov
push
xor
mov
jno
inc
xchg
inc
adc
test
imul
inc
addr16
(bad)
fstp
xchg
xor
and
stos
xchg
jmp
xor
cli
dec
mov
cmp
sti
xor
inc
mov
fnsave
jns
leave
fsub
jp
push
pop
adc
xchg
retf
add
or
loope
in
xchg
mov
icebp
sbb
mov
add
cmps
push
jno
jecxz
cs
or
mov
je
or
jns
shl
scas
into
dec
pushf
es
shl
mov
enter
pop
mov
cdq
add
sub
mov
jecxz
jo
mov
pop
sub
mov
fwait
stos
imul
lds
aas
dec
shl
jnp
vpor
(bad)
or
jecxz
fsubr
daa
cmp
fwait
in
aad
jge
mov
dec
inc
dec
ret
cmps
lock
xchg
lods
sub
sti
pop
sbb
xlat
ret
pop
cmp
sub
mov
inc
call
(bad)
jp
sbb
mov
loop
sub
or
cld
push
ins
sbb
in
pop
fcmovb
sar
enter
sub
rol
nop
pop
imul
hlt
adc
and
xor
loopne
jne
dec
dec
or
sqrtps
jns
fisub
mov
leave
(bad)
leave
ret
sbb
jecxz
jne
jl
call
repz
add
aad
adc
je
mov
mul
js
out
popf
out
mov
mov
cmp
mov
jmp
jmp
loop
mov
clc
jmp
imul
xor
lea
add
mov
int
lods
lahf
stc
xchg
call
sahf
sbb
icebp
mov
sbb
mov
(bad)
aam
jp
sub
sbb
cmps
sar
stos
push
push
popa
ins
sahf
dec
dec
ds
mov
mov
jne
movs
fistp
push
adc
(bad)
(bad)
outs
xchg
pop
aaa
add
nop
push
push
retf
fnstenv
xlat
xor
adc
inc
jmp
adc
ds
out
lods
pop
cmp
mov
imul
inc
adc
sub
sbb
or
jmp
lea
xor
loope
cmp
sub
or
push
cmp
adc
or
leave
cs
add
jg
shl
inc
test
lea
loope
int
cmps
aaa
cmp
push
add
imul
sar
xor
mov
rol
out
adc
pop
sbb
inc
dec
pusha
mov
mov
add
mov
jecxz
mov
jnp
sbb
cmc
add
mov
mov
dec
mov
adc
xor
push
test
ss
push
stos
cwde
or
mov
push
sbb
cli
dec
or
inc
mov
div
and
xor
pop
push
cmps
test
and
jmp
mov
jle
jle
xchg
(bad)
lock
call
in
inc
push
lock
cmp
pop
jne
sbb
inc
ret
inc
mov
mov
idiv
add
jmp
dec
outs
jns
inc
rol
(bad)
xchg
test
ds
ret
outs
mov
out
enter
and
or
mov
repz
stos
and
je
inc
inc
mov
push
mov
int3
dec
pop
not
ss
jmp
in
sub
adc
ds
add
sbb
cmp
pop
adc
jo
and
push
mov
dec
int3
retf
xlat
or
loopne
retf
dec
push
add
lock
dec
je
xor
push
rcr
push
pop
sar
test
sbb
and
or
mov
dec
sbb
imul
pop
nop
add
popa
in
mov
xchg
xchg
in
adc
xchg
in
adc
push
enter
push
cmp
fistp
xchg
(bad)
push
mov
push
mov
and
in
leave
push
jae
arpl
jmp
mov
or
or
xor
repnz
shr
push
fcomp
mov
cmc
call
popa
leave
retf
das
sbb
cmps
ins
xchg
adc
and
xor
sahf
stos
rol
leave
mov
pop
xor
sar
sub
hlt
mov
cmps
lds
sub
lea
aad
jne
imul
in
sub
das
inc
in
cli
xchg
dec
wbinvd
cmp
and
push
cmp
es
sahf
test
sahf
jp
dec
(bad)
das
(bad)
mov
or
jp
cld
sub
out
cmp
jo
xchg
add
pop
je
jnp
lea
inc
repnz
ret
adc
jp
push
call
jb
mov
idiv
das
dec
loop
test
push
retf
mov
iret
mov
test
sbb
shl
(bad)
imul
xor
lods
push
in
int3
jle
mov
sub
(bad)
jnp
mov
xlat
shl
in
adc
add
aam
sbb
fcom
in
not
scas
and
nop
test
jp
jl
(bad)
fld
in
scas
dec
loope
xchg
icebp
mov
xor
mov
jno
shr
mov
inc
out
cld
fcomp
test
cmp
inc
push
cmps
ins
aaa
std
int
sbb
jb
mov
out
movs
scas
data16
and
pop
popa
(bad)
mov
adc
inc
sub
aaa
cmp
repnz
dec
inc
xchg
jle
mov
(bad)
mov
mov
mov
aas
dec
cmp
xchg
sahf
imul
pop
nop
fs
outs
jnp
xchg
adc
icebp
shr
sti
lods
pop
aaa
xchg
xlat
js
mov
inc
or
cli
out
pop
arpl
and
adc
mov
jmp
fucomip
sahf
dec
out
call
cs
shl
imul
movs
fsub
les
gs
sti
out
mov
arpl
test
mov
int3
mov
jg
fstp
jge
test
push
test
aam
sub
mov
sbb
mul
mov
sbb
or
into
icebp
cli
jb
retf
mul
push
shr
enter
mov
adc
xchg
xchg
sub
cs
mov
and
dec
jno
stos
xlat
mov
mov
push
mov
into
nop
je
fidiv
pop
mov
test
aad
ret
push
inc
mov
loopne
sub
out
ret
adc
or
movs
mov
das
iret
mov
push
fsubr
and
idiv
jne
jae
popa
pushf
dec
cmp
(bad)
out
inc
ds
xor
push
nop
adc
and
cdq
out
sbb
sub
xor
jno
mov
mov
cmp
je
jle
xchg
xchg
outs
cmp
mov
pop
inc
arpl
inc
lods
jmp
add
(bad)
jb
sub
ins
xchg
sar
jae
rol
mov
adc
mov
jecxz
aam
lahf
imul
clc
pop
imul
mov
pop
push
xor
fdivp
loope
dec
imul
xor
int3
mov
(bad)
xor
clc
(bad)
lea
out
nop
lahf
ins
mov
aaa
add
xor
inc
and
mov
ret
add
fist
int
rcr
(bad)
jo
xor
retf
call
dec
jbe
into
push
mov
push
cli
loop
cmp
mov
sbb
sbb
pop
imul
add
fbstp
push
inc
mov
fdivrp
mov
int
imul
clc
iret
sub
jbe
mov
inc
sub
sbb
add
into
xchg
jnp
xchg
sbb
ins
mov
pop
sub
add
pop
aad
push
scas
inc
ss
mov
retf
add
jmp
or
test
test
mov
sub
sub
pop
addr16
push
add
daa
fstp
mov
mov
push
jne
addr16
out
repz
test
jmp
add
popa
icebp
icebp
ss
shl
shr
loope
jp
mov
ins
rcl
loopne
shr
inc
and
mov
jp
sbb
(bad)
jb
test
push
add
mov
dec
adc
test
dec
rcr
cmps
test
aad
jbe
loopne
xor
pop
scas
lea
nop
cmp
sub
div
inc
mov
jg
iret
mov
xlat
jg
sti
pop
enter
fild
enter
imul
xchg
inc
ss
xlat
mov
into
icebp
test
out
jb
sub
sbb
(bad)
rcr
push
adc
rcl
(bad)
std
(bad)
jnp
inc
mov
lods
and
(bad)
int3
retf
pop
mov
mov
fsub
dec
jge
mov
push
sbb
ffree
push
dec
repz
mov
jbe
js
ficomp
mov
dec
mov
(bad)
jmp
xchg
inc
xchg
stc
mov
loope
out
sub
(bad)
retf
(bad)
mov
sub
out
jecxz
je
mov
in
leave
cmp
sub
cmp
aad
mov
dec
push
jno
jge
push
push
jl
jb
pop
xor
popf
loopne
mov
test
in
out
pop
pop
push
mov
adc
inc
sbb
test
outs
(bad)
ret
xchg
(bad)
and
push
scas
or
cmps
lahf
inc
dec
call
xor
dec
mov
jmp
push
xor
push
add
fcom
cmps
dec
fwait
rcr
cmps
adc
or
jnp
push
(bad)
jl
popf
clc
lods
cmp
mov
mov
mov
mov
aam
loop
push
bound
jae
fs
push
adc
in
in
enter
xor
idiv
repnz
adc
add
push
test
dec
dec
repnz
jmp
pop
iret
mov
xlat
push
or
lds
popa
inc
mov
fcom
inc
iret
and
enter
xor
pop
ds
xlat
or
(bad)
mov
sub
cwde
fisub
push
mov
mov
mov
xchg
les
push
imul
cli
retf
sub
jle
fdivr
xchg
scas
fcomp
loopne
mov
push
cmp
cmp
jb
jp
xor
aad
sub
jae
xchg
dec
out
add
inc
in
movs
add
inc
gs
push
shl
mov
dec
cmp
or
push
loop
pmullw
mov
int3
cmp
mov
(bad)
cmp
rol
push
test
pop
inc
jae
shl
push
ret
xchg
fdivr
in
movs
std
jp
rcl
jg
jmp
popf
outs
shr
mov
popa
stc
imul
stos
adc
mov
and
jmp
adc
adc
xchg
sub
add
mov
pop
stos
inc
ins
mov
call
retf
mov
shl
cmp
repnz
cld
sbb
dec
iret
sub
or
mov
in
imul
xor
dec
xchg
xchg
and
call
cmps
cs
ja
inc
pop
call
adc
push
mov
xor
jmp
inc
and
and
inc
fstp
jl
loopne
imul
hlt
sar
mov
push
inc
xchg
xor
jl
xor
int3
xlat
dec
movs
xchg
pusha
xor
mov
ins
mov
or
push
inc
mov
pop
sbb
shr
jo
push
mov
push
push
movs
pop
loopne
dec
jb
xchg
hlt
rcl
rcr
adc
cmp
mov
pusha
loope
push
mov
cmp
jae
mov
ret
xor
mov
sbb
rcl
std
cmp
xor
mov
std
out
leave
sub
xchg
hlt
lock
adc
or
lea
mov
mov
f2xm1
sub
sti
mov
mov
push
mul
push
rol
xor
fisubr
jb
nop
call
xchg
push
shl
test
dec
jp
and
addr16
mov
inc
and
shr
pop
pop
aam
cmp
ss
jmp
xor
test
mov
ret
add
jno
dec
clc
(bad)
jl
mov
repz
xchg
std
not
or
jmp
not
adc
sar
scas
dec
cld
(bad)
ins
das
cli
mov
pushf
imul
ret
mov
or
fxch
test
cs
enter
xor
mov
xchg
and
jecxz
in
xor
pop
shl
das
test
stos
fdiv
cwde
fidiv
and
fmul
and
sub
cmp
fiadd
mov
nop
jnp
(bad)
fwait
(bad)
sbb
xor
in
gs
fisubr
sti
mov
pop
add
jle
mov
adc
fild
jns
call
jnp
sbb
pop
dec
xchg
push
xchg
cmp
out
pop
fnstenv
sub
retf
add
fwait
cmps
and
jl
retf
cli
shl
repnz
shl
lock
ds
pop
mov
or
pop
push
mov
ins
pop
push
xchg
push
gs
gs
sti
xlat
jae
adc
(bad)
(bad)
out
dec
mov
cmp
int3
mov
test
loope
je
cmp
push
jle
dec
popf
xor
cmp
mov
pop
ins
leave
and
jg
sti
jno
or
jo
xchg
pop
mov
add
in
cmc
out
inc
fs
xor
mov
je
cld
inc
js
mov
push
in
mov
fisttp
mov
mov
mov
push
in
stos
retf
xor
xchg
std
sub
scas
fwait
inc
xor
dec
fisubr
inc
sub
rol
mov
mov
int
rcl
dec
mov
in
leave
retf
sub
(bad)
jl
sbb
mov
xchg
scas
lock
movs
aas
ror
mov
or
jle
push
xor
mov
stc
repz
push
(bad)
ret
jecxz
dec
sahf
lds
inc
fsubr
ja
xor
out
mov
outs
fstp
in
xchg
cmc
push
out
inc
repz
push
jecxz
pop
div
(bad)
jecxz
inc
fisub
mov
mov
jmp
ret
and
lods
sahf
es
xchg
mov
xor
cmp
or
out
mov
xchg
sti
mov
movs
mov
shl
in
mov
call
push
lods
mov
stos
cmp
mov
inc
outs
lahf
cmps
sbb
mov
jmp
pop
ss
xor
sub
pop
fcomp
mov
xchg
fnstsw
mov
popf
inc
call
dec
pop
das
mov
mov
pop
jmp
mov
std
xchg
dec
loope
test
push
add
pop
bound
mov
sub
scas
lea
pop
cmc
ss
jne
lods
ret
repz
ins
dec
fincstp
jl
fmul
pushf
add
cld
scas
adc
lods
bnd
dec
mov
das
xchg
enter
pop
dec
jo
jmp
pusha
mov
pop
ds
test
fadd
inc
outs
or
sbb
mov
cmps
cmp
out
ret
jmp
js
outs
mov
bound
and
push
xchg
mov
pusha
out
and
pop
cld
and
mov
(bad)
(bad)
mov
clc
pop
(bad)
jns
shr
xchg
pop
mov
mov
dec
out
aaa
and
jmp
fisttp
or
jecxz
popa
pop
add
xchg
xchg
jo
iret
xor
(bad)
jecxz
push
loop
sti
test
aad
fidivr
(bad)
fsub
mov
in
push
shr
pop
movs
mov
jo
dec
jge
push
pop
imul
mov
push
push
jmp
int
lds
or
aas
mov
(bad)
cmc
into
and
sub
jbe
mov
not
jne
jecxz
jbe
retf
int
repz
and
lahf
adc
test
jbe
xchg
push
and
push
(bad)
arpl
out
(bad)
inc
cmps
cpuid
mov
sbb
sub
nop
retf
and
xchg
out
ds
jecxz
(bad)
mov
std
xchg
dec
xor
bnd
jmp
outs
popa
push
sub
xchg
scas
mov
or
push
xor
addr16
xchg
cwde
fcmovbe
mov
push
fbld
mov
sbb
push
je
jmp
out
in
in
or
pop
leave
or
inc
and
nop
icebp
cwde
cmps
cwde
mov
xor
dec
xor
ins
mov
sbb
and
push
loopne
mov
fistp
pop
cmp
fsubr
pop
xchg
aad
pop
xlat
sub
int3
pop
jno
xor
iret
mov
jg
push
ja
cld
cli
daa
add
aas
pop
fisttp
jnp
push
lods
jecxz
sub
pop
pcmpgtd
push
xor
neg
fisttp
mov
rcr
(bad)
ds
js
scas
stc
dec
jge
cmp
call
imul
pop
cmps
rol
jmp
inc
sub
mov
and
sub
hlt
popf
rol
int3
xchg
mov
xor
outs
cmp
jle
xlat
repz
int
cmps
jmp
ja
inc
movs
jmp
dec
adc
jne
sti
jnp
adc
sub
je
xor
mov
pop
xor
sub
pop
xchg
jg
sahf
cmps
loopne
xchg
mov
popf
ret
into
(bad)
lahf
jge
in
sub
inc
adc
mov
into
leave
ins
or
adc
mov
cmc
sbb
sub
dec
add
inc
pop
push
iret
xor
addr16
or
xchg
add
inc
jle
stos
scas
or
adc
and
dec
push
sub
das
(bad)
mov
cmc
loop
push
sti
(bad)
inc
sbb
les
ja
push
imul
lods
mov
or
(bad)
fsubr
jnp
cld
in
mov
sub
mov
mov
das
inc
stos
icebp
ja
mov
iret
ins
xor
ss
out
pop
add
xchg
pop
loopne
test
push
repz
je
pop
and
mov
jae
pop
cmp
or
xchg
js
jecxz
aas
retf
fcom
sub
stos
inc
mov
pop
les
xlat
dec
pop
mov
imul
jl
in
jecxz
rol
push
jnp
sub
je
lahf
push
test
xchg
cmp
dec
pop
jo
pop
ror
cmp
and
leave
or
(bad)
mov
dec
jle
scas
jecxz
shl
pop
out
out
dec
adc
mov
shl
inc
xor
xchg
popa
ins
mov
aam
mov
dec
dec
sub
mov
pop
mov
fidivr
pop
mov
ins
stos
in
bnd
jge
aas
cmp
add
xor
mov
(bad)
push
int3
push
lds
mov
cwde
nop
add
mov
or
test
add
xchg
cld
scas
movs
iret
mov
jl
sbb
outs
mov
push
xor
call
cld
adc
std
cs
inc
push
mov
push
sbb
dec
dec
xchg
mov
ret
mov
inc
xchg
int3
sub
ss
mov
loopne
or
(bad)
jo
ret
pop
cmp
jge
popf
mov
pop
sbb
mov
cli
fdivr
mov
int
in
push
outs
sbb
(bad)
enter
pushf
inc
cmps
jne
cmp
leave
or
xchg
xchg
sub
adc
aad
xchg
inc
ja
mov
mov
fild
sub
pop
in
scas
(bad)
in
in
das
rol
and
dec
pop
scas
mov
pusha
pop
daa
lds
dec
dec
dec
xor
ds
fsub
adc
cld
push
or
rol
add
jb
push
sbb
imul
fstp
sub
(bad)
or
call
jo
retf
div
out
stos
inc
fsub
xchg
push
mov
or
test
popf
jne
jbe
ins
call
push
rcl
hlt
clc
addr16
ror
cdq
add
div
lods
xchg
inc
adc
(bad)
and
add
scas
push
xchg
test
jo
pop
or
(bad)
int
shl
dec
iret
mov
pushf
jg
(bad)
ficom
clc
movs
mov
dec
dec
jecxz
mov
fldcw
inc
xlat
nop
sbb
jle
nop
xchg
mov
stc
jne
pop
inc
push
rcl
stos
out
dec
movs
test
jg
inc
jns
in
push
pop
inc
sub
popa
xor
dec
xlat
mov
pop
and
pop
jp
jp
xchg
dec
ds
stc
imul
add
push
xor
sbb
enter
fild
(bad)
adc
(bad)
int3
lds
imul
mov
sub
mov
add
fs
mov
rcr
fstp
and
stos
fs
ins
push
aaa
adc
xlat
cwde
mov
jno
mov
retf
ins
pop
cmp
or
adc
nop
and
cli
or
sub
cmp
js
add
jno
and
gs
push
loope
ins
sbb
fld
pop
inc
xor
mov
(bad)
je
(bad)
stos
sar
popa
jmp
dec
fmul
fstp
fstp
cdq
ror
and
pmulhuw
cmp
inc
outs
push
mov
in
hlt
pop
pop
ds
xor
stos
xchg
aas
inc
pushf
jg
(bad)
lock
push
mov
cdq
pusha
imul
mov
push
inc
nop
xor
pop
fcom
xor
cmp
dec
repz
mov
xchg
std
push
ss
cs
in
aas
repz
les
xor
inc
mov
adc
cmp
inc
neg
es
test
xlat
cmp
rol
adc
and
inc
jmp
sbb
pushf
inc
je
sbb
cld
adc
jne
mov
shr
push
add
aam
sub
fmul
sbb
jl
mov
cmps
dec
sbb
pop
push
ficomp
inc
je
adc
xor
js
ins
mov
jecxz
ret
sahf
dec
add
pop
in
mov
jno
add
pop
jecxz
dec
mov
retf
push
aas
adc
in
dec
inc
es
adc
jp
fisubr
or
xor
lahf
mov
pop
ret
out
pop
sub
rcr
fisttp
sub
sub
sub
inc
iret
jp
inc
icebp
nop
push
and
test
pop
mov
stos
mov
test
inc
sahf
xchg
inc
cli
jg
lock
mov
dec
mov
cs
mov
jo
mov
cwde
sbb
xchg
sahf
addr16
mov
pop
stos
dec
in
jmp
pop
jmp
sbb
and
jns
mov
daa
into
jnp
jmp
push
sti
pusha
cmp
sub
fs
mov
or
fidiv
ss
cmp
shl
out
movs
inc
xor
shl
jbe
jno
sub
adc
ficom
fist
outs
cmovae
jmp
jg
mov
scas
xchg
cld
mov
test
push
push
jp
push
rcr
xchg
into
test
inc
jmp
fsub
or
in
outs
lods
push
mov
or
cdq
add
xchg
bound
inc
mov
xchg
leave
adc
cmp
mov
in
and
fisttp
sbb
retf
mov
cmps
aas
inc
xlat
cld
aaa
mov
lods
sbb
xchg
(bad)
xor
loop
retf
loop
inc
pop
pop
adc
dec
jmp
loopne
add
popa
clc
cmps
test
pop
ins
lods
rcr
into
daa
daa
(bad)
lock
(bad)
cmps
cmps
inc
dec
leave
mov
mov
cmps
jmp
int3
lea
add
stos
data16
xchg
dec
jns
jg
repz
call
test
sti
mov
or
push
sbb
pop
add
mov
aas
push
push
into
int
adc
repnz
stc
push
jbe
sbb
or
loopne
add
(bad)
pop
sbb
pop
inc
aam
mov
sub
sbb
xchg
mov
sub
sub
or
pop
jb
xchg
bound
push
ins
sti
mov
or
pushf
inc
and
fs
pop
dec
mov
mov
adc
ror
cmps
in
cmp
jo
push
loope
in
xor
jne
imul
movs
arpl
mov
ret
in
xor
movs
cli
mov
cld
iret
leave
ja
dec
push
lods
mov
mov
jecxz
iret
lea
cmc
and
mov
call
cwde
(bad)
fidiv
mov
fimul
call
inc
mov
or
repnz
sub
imul
pop
scas
shl
add
mov
sbb
adc
nop
cmp
inc
scas
add
pop
push
imul
leave
mov
add
inc
js
adc
push
sbb
repz
pop
mov
jnp
hlt
ror
inc
or
cmc
sub
pop
mov
ss
xchg
pop
push
pop
test
add
stos
pop
adc
js
jmp
dec
scas
push
cld
jbe
mov
push
pop
mov
sub
xchg
fs
mov
dec
mov
and
push
arpl
dec
pop
mov
inc
and
repz
lahf
jo
stos
mov
(bad)
jge
sbb
fs
xchg
cmp
add
repnz
fs
add
addr16
jg
cld
test
dec
inc
call
ins
out
xchg
dec
not
mov
aaa
push
mov
push
inc
retf
sub
shl
xchg
mov
and
mov
shr
ret
jp
sar
dec
das
pop
scas
(bad)
dec
test
inc
adc
call
dec
cmp
and
movs
mov
push
adc
hlt
imul
xchg
cmp
xchg
dec
idiv
(bad)
cmps
pop
fwait
mov
outs
cmc
adc
clc
or
push
add
dec
dec
mov
inc
push
stos
adc
sub
lods
sub
fist
enter
pop
mov
call
ret
sahf
loopne
cdq
es
dec
pop
pop
xchg
lahf
or
das
popa
mov
in
inc
arpl
icebp
jae
bound
enter
ins
sbb
pop
inc
addr16
and
xchg
mov
pop
call
jno
sbb
ins
xchg
dec
or
cli
jge
inc
sbb
push
or
and
sub
pop
out
mov
xlat
inc
sub
push
(bad)
cmp
ja
jae
and
push
nop
scas
in
lahf
cmc
xor
xor
outs
test
das
jecxz
push
push
mov
fnstcw
adc
jl
xchg
or
idiv
sub
fisub
mov
fsub
outs
dec
out
push
jecxz
addr16
out
push
inc
sar
ds
aam
pop
sub
xchg
ins
sub
bound
pop
aam
in
ds
scas
sub
cmp
mov
pop
jae
pop
mov
fistp
jne
cli
push
and
sbb
neg
and
fisttp
es
adc
neg
and
mov
sub
and
pop
add
aam
fiadd
mov
nop
out
cld
pop
sbb
xlat
movs
mov
mov
mov
ror
cdq
dec
cmc
stos
clc
sbb
ss
test
xchg
icebp
sbb
add
(bad)
in
xchg
lods
pop
jmp
pop
xchg
xor
dec
add
cmps
fist
push
dec
fidiv
adc
pop
mov
adc
fisub
pop
int
jns
push
fwait
pop
cwde
ins
cmc
lods
mov
fldcw
nop
es
idiv
data16
repz
mov
jmp
sub
dec
xor
in
fcomi
int
push
mov
sbb
pop
push
out
rcl
sbb
ja
cs
pop
jns
div
lds
cwde
mov
scas
mov
aas
dec
outs
ins
sub
shl
dec
xchg
js
pop
jns
jge
fldcw
pop
mov
inc
mov
test
push
mov
scas
pop
mov
inc
push
inc
in
mov
jne
push
push
sub
sbb
mov
mov
fs
enter
mov
adc
icebp
sbb
rcr
fwait
ins
(bad)
lock
adc
mov
lods
push
cs
dec
cwde
xor
add
std
into
repz
jmp
rcr
cmp
push
xlat
je
aad
daa
out
sbb
imul
loopne
test
out
je
dec
in
mov
out
es
in
in
inc
mov
ds
retf
loopne
jl
pop
bound
add
lea
hlt
std
dec
mov
pusha
sbb
dec
arpl
xchg
jo
push
dec
xchg
aas
cwde
pop
mul
jmp
jmp
mov
loop
scas
imul
lea
(bad)
xor
sbb
adc
mov
jo
jp
(bad)
cmps
jle
rol
lahf
and
add
sbb
or
scas
sub
inc
jmp
stos
push
xor
pop
mov
xchg
jmp
pop
push
xor
dec
push
test
mov
fwait
sbb
xchg
xor
inc
ror
rcl
mov
mov
sbb
fs
sub
fld
aam
lods
inc
push
xchg
pop
or
xchg
outs
sub
dec
pop
mov
es
repnz
rcr
inc
cld
mov
shr
pusha
jne
dec
dec
xchg
mov
push
test
mov
pop
pop
sub
sbb
and
call
rcl
sbb
rol
xchg
add
push
scas
retf
pop
das
jmp
mov
inc
or
stos
js
loop
into
sahf
mov
pusha
fsub
adc
mov
(bad)
xor
jns
sub
out
lahf
stc
xchg
ret
out
out
fistp
jle
aaa
inc
mov
jns
pop
dec
jb
xchg
mov
popa
xor
je
pop
jge
repz
lods
sub
scas
pusha
mov
jecxz
sbb
jbe
sub
ds
dec
add
das
scas
mov
enter
ins
adc
(bad)
mov
xchg
popf
jb
fidivr
in
pop
idiv
fmul
xchg
in
adc
scas
xchg
dec
les
cmps
repnz
mov
fcomi
jns
ret
inc
neg
(bad)
jbe
loop
imul
enter
out
jbe
xchg
jmp
mov
dec
ret
push
cs
mov
push
stos
adc
in
(bad)
mov
sahf
push
(bad)
out
nop
sbb
inc
adc
sbb
inc
push
inc
shl
repnz
xchg
out
mov
jo
jnp
mov
sbb
jmp
pop
js
not
dec
daa
repz
lods
ret
out
and
push
ja
dec
sbb
xchg
retf
lods
in
retf
mov
push
inc
ret
cli
cs
xor
cld
jo
push
adc
xor
out
rcr
out
lods
and
push
adc
(bad)
(bad)
jle
mov
pusha
loop
ffree
mov
mov
ds
mov
mov
std
push
cmp
add
adc
sbb
add
out
imul
xor
ret
sub
cmc
mov
dec
fwait
(bad)
dec
rcr
sar
cli
fmul
dec
(bad)
jno
mov
jb
enter
or
xor
pop
stos
jp
xchg
addr16
sbb
jnp
arpl
or
pop
mov
and
and
fistp
sub
xchg
out
std
movs
pop
jnp
fs
inc
push
jmp
or
mov
xchg
mov
call
jmp
dec
pushf
sbb
in
mov
cmp
icebp
out
jae
(bad)
outs
mov
dec
adc
nop
mov
jb
sub
clc
popa
cli
fimul
adc
fcmovnu
jmp
stos
nop
in
nop
ret
pop
aam
sub
out
cwde
cmps
dec
jb
jmp
lock
sub
dec
adc
in
and
adc
lock
inc
push
test
je
and
push
xchg
ret
test
mov
pop
inc
adc
dec
cld
mov
cld
inc
daa
ins
nop
je
pop
push
cmp
and
aad
in
ja
mov
sbb
mov
lods
jmp
imul
cld
into
fadd
pop
add
clc
lods
in
pusha
in
in
dec
fcomp
sub
hlt
push
mov
mov
and
(bad)
xor
fild
or
xbegin
mov
repnz
adc
imul
mov
pop
lods
fs
test
jnp
repz
leave
jle
scas
xor
adc
je
lds
pop
cmp
sbb
inc
sub
push
fwait
arpl
std
loop
pop
pop
add
std
test
call
lds
dec
test
add
retf
stos
ret
or
jbe
pop
jbe
pop
je
jb
add
out
cdq
pusha
mov
into
jmp
mov
dec
loop
popa
clc
mov
mov
fsubr
fwait
loop
or
xor
xor
jo
or
sbb
mov
xor
mov
mov
cli
jecxz
std
push
das
ja
jnp
fs
imul
outs
or
mov
sub
xor
aaa
mov
(bad)
fbld
dec
enter
inc
neg
pop
movs
leave
add
fadd
neg
mov
rcr
xchg
jl
(bad)
cmps
sbb
pop
jmp
and
cmps
les
les
cmc
inc
jl
or
cmc
push
test
cld
cmp
imul
sbb
cmp
xlat
mov
icebp
pop
adc
pop
cmp
xor
mov
jg
das
or
adc
jo
pop
iret
pop
mov
sub
inc
jnp
(bad)
xchg
mov
push
test
sub
retf
push
jns
(bad)
jne
jo
sbb
inc
adc
fwait
test
sbb
loop
fbld
or
inc
loopne
xchg
jmp
imul
jne
sbb
in
inc
xchg
fimul
je
lds
imul
cmp
xchg
dec
(bad)
jae
jmp
inc
push
mov
in
mov
mov
add
scas
ds
cwde
adc
adc
scas
stc
pop
aad
daa
inc
outs
int3
xor
dec
mov
pop
mov
mov
mov
or
add
cli
pop
rcr
lea
test
arpl
(bad)
mov
jne
shl
add
jle
ds
and
div
pop
into
xor
xor
fadd
lahf
cdq
jp
ret
push
outs
or
or
and
scas
xor
dec
imul
xchg
(bad)
mov
lea
sub
test
push
jae
(bad)
rcr
sub
add
in
pop
daa
imul
icebp
jp
push
sub
sbb
imul
push
loopne
jg
mov
mov
and
or
xor
stos
dec
add
pushf
pop
shr
(bad)
enter
test
dec
xchg
stos
add
push
arpl
jo
jp
push
jge
jb
xchg
ret
fdiv
dec
sbb
stc
xchg
xchg
sub
scas
test
repz
push
mov
daa
pushfw
pushf
mov
mov
push
fisttp
cmc
dec
dec
sti
jmp
stos
rcl
stc
cmovge
stos
into
movs
inc
rol
dec
push
jo
sub
xor
and
mov
ret
into
(bad)
in
cmp
jnp
mov
mov
sbb
push
aad
je
dec
sbb
in
int
jge
call
or
lea
xchg
outs
inc
cmp
mov
mov
hlt
xchg
xlat
sahf
addr16
aam
sbb
aad
jecxz
mov
mov
aam
cmp
dec
imul
mov
push
ror
push
xor
jp
mov
sbb
leave
dec
cmp
adc
imul
loop
ret
push
cmps
push
fsubr
js
mov
or
lock
or
retf
(bad)
sub
push
test
mov
(bad)
fist
jne
inc
movs
scas
je
scas
add
rcr
sti
enter
push
pop
ja
mov
pop
test
sub
jge
xchg
sahf
retf
or
mov
dec
adc
push
inc
std
inc
in
retf
out
mov
push
lahf
jmp
cmp
add
fsubr
cdq
movs
xchg
xor
outs
mov
jae
sub
jns
addr16
cmp
stc
cmp
cmp
push
mov
dec
push
iret
push
loop
cli
mov
or
lods
outs
mov
xchg
addr16
adc
jecxz
cmps
xor
adc
dec
cdq
not
or
mov
sbb
test
jae
rol
lea
ret
ror
push
mov
mov
sbb
in
dec
pop
clc
fsub
cmp
pop
vphaddubd
sub
mov
scas
sahf
push
mov
lods
aaa
jns
rcl
pushf
ret
(bad)
test
aad
sub
ret
inc
ss
cmp
enter
inc
jne
imul
mov
std
push
mov
mov
lahf
xchg
js
loop
cmp
stc
jmp
arpl
pop
dec
test
daa
adc
int3
imul
sbb
cli
inc
push
mov
pop
imul
in
cmps
cmc
jge
push
mov
shl
lea
es
in
out
or
add
ret
push
sbb
xchg
adc
sbb
jbe
rol
cmp
mov
stc
sbb
mov
ret
push
inc
push
cmc
jecxz
push
cmc
fsub
aas
jne
idiv
(bad)
frstor
lds
xchg
leave
cld
or
js
pop
retf
mov
xchg
xor
cmc
into
mov
adc
imul
adc
xlat
xchg
cmc
pop
icebp
jge
or
mov
pop
xor
pop
or
jl
lds
outs
loopne
imul
adc
mov
and
and
test
mov
test
(bad)
fiadd
movs
mov
xor
mov
pop
jae
sti
les
jb
(bad)
jne
pop
mov
mov
imul
test
fmulp
push
xlat
cdq
jmp
ss
lods
div
pop
mov
mov
cmp
popa
xchg
xor
and
repnz
fdiv
cmp
lods
fcom
push
mov
and
pop
lds
mov
mov
jge
neg
call
mov
das
or
aaa
cmp
or
lds
ret
adc
retf
adc
pop
lahf
xchg
add
out
lock
push
pop
hlt
ret
popfw
fwait
and
pop
mov
imul
mov
cmp
cmp
mov
jge
cmp
aad
xor
inc
and
push
push
cmps
cmps
pop
test
add
cwde
push
xchg
test
cmps
fwait
dec
push
push
mov
push
dec
sahf
outs
xchg
gs
mov
xchg
mov
xchg
call
repz
fdivr
sahf
out
cmps
out
adc
aaa
pushf
es
mov
add
ds
sti
push
gs
in
xchg
or
fdivr
scas
fst
sub
ret
or
dec
sub
ret
stc
push
xchg
xchg
add
rcr
mov
nop
repz
adc
jb
pop
dec
std
mov
loop
add
jnp
or
xchg
sbb
neg
in
xor
ficom
pop
or
mov
movs
mov
add
js
jmp
adc
cmp
loopne
jnp
inc
and
mov
adc
repnz
aam
mov
cmps
cli
es
scas
dec
jg
inc
sbb
jmp
jne
xchg
push
mov
push
xor
jle
fsub
xchg
cdq
rcl
fdiv
push
dec
mov
out
sbb
mov
jno
cwde
rcl
add
and
fild
cmps
sar
jbe
and
and
and
xchg
aas
add
pop
fisub
sub
imul
arpl
xchg
pop
add
scas
in
dec
int
lds
cmp
pop
arpl
aas
mov
and
arpl
inc
dec
ins
int
(bad)
or
xchg
sub
xchg
mov
loop
push
dec
mov
inc
dec
cld
int3
mov
popf
and
daa
jbe
arpl
push
jbe
or
ret
mov
leave
or
psrad
iret
jae
int3
stc
pop
jne
fnstcw
jge
(bad)
jno
in
out
mov
pop
mov
jnp
dec
fidiv
(bad)
or
cld
mov
dec
dec
imul
(bad)
ins
rcl
push
cmps
xor
xchg
mov
xchg
dec
push
jge
out
jge
sbb
xchg
lahf
stc
hlt
push
loopne
sub
jnp
(bad)
test
push
cli
sbb
sbb
sahf
or
mov
pop
mov
movs
cmp
jmp
shl
cmp
mov
xchg
and
in
sbb
cmp
in
mov
pop
adc
fstp
leave
add
jecxz
mov
push
xchg
adc
imul
cmc
inc
mov
add
inc
dec
push
push
push
pop
in
imul
inc
cmps
daa
sar
adc
adc
dec
push
and
cwde
mov
dec
jge
pop
addr16
aas
fisttp
shl
cmp
pop
(bad)
jmp
dec
and
push
and
mov
sbb
cs
dec
inc
or
mov
push
mov
test
movs
jp
sub
or
jbe
popf
mov
jae
sub
imul
sub
lock
xchg
scas
bound
into
shr
xor
cmp
mov
popf
cli
(bad)
xor
test
(bad)
clc
mov
jb
xchg
jae
cmp
popa
cmp
jb
cmp
sti
mov
shl
mov
xor
cmp
call
pop
and
cmp
mov
jmp
test
mov
pusha
cli
inc
call
test
test
xor
lahf
int3
fdivr
cmp
mul
lods
fild
mov
popa
in
scas
popf
js
pop
push
repnz
cdq
dec
push
dec
cmp
sahf
cmc
or
jmp
fbstp
mov
and
jbe
mov
out
loop
(bad)
fiadd
popf
loopne
cmp
push
cmp
ret
test
sbb
pop
push
jo
shl
mov
(bad)
call
outs
sbb
push
addr16
cmp
push
lea
call
sbb
fild
xor
sar
adc
shl
lea
pushf
into
stos
mov
xor
lods
daa
outs
ret
mov
in
cmp
and
lahf
dec
xchg
int3
out
icebp
test
pop
pushf
push
lea
aaa
sbb
adc
test
xor
mov
nop
and
cmp
pop
daa
push
and
pop
sti
mov
sbb
pusha
xchg
mov
inc
sub
xchg
ins
inc
inc
movs
or
std
jne
xchg
push
pop
ret
aam
jle
pop
(bad)
and
adc
mov
mov
jno
dec
xchg
pop
xchg
cmps
cmp
sbb
lds
xchg
push
in
jb
lods
pop
scas
stos
xchg
push
add
or
outs
jl
stos
loop
bound
add
jmp
pop
test
or
jbe
jmp
and
test
jmp
mov
stos
leave
popa
cld
mov
hlt
jecxz
stos
mov
vandnps
mov
add
sahf
loop
aam
fadd
cmp
popf
fisttp
sub
add
cwde
call
cmp
and
and
add
fs
out
add
call
sbb
dec
and
pop
mov
pop
jbe
pushf
push
outs
mov
mov
sub
adc
retf
ds
inc
dec
imul
mov
call
xchg
jl
scas
mov
popa
push
aas
inc
int3
icebp
fsubr
shl
test
push
lock
lock
mov
scas
sbb
mov
push
out
in
repnz
or
mov
fiadd
push
test
call
pop
or
xchg
in
jnp
cmp
mov
ss
(bad)
push
in
push
rcr
sub
sbb
push
aad
mov
xor
ins
repnz
(bad)
out
ret
movs
out
aam
ret
push
pop
pop
add
pop
add
icebp
sub
sub
sti
mov
sar
fimul
int3
pop
(bad)
sbb
cmp
cmp
popa
cld
loope
push
or
jmp
retf
retf
xchg
imul
sbb
les
pop
mov
bound
xchg
cmp
sub
jb
shl
xchg
sahf
aaa
in
sub
test
adc
scas
ret
out
into
mov
sbb
and
mov
ds
lock
mov
cmp
in
das
jg
cmp
jmp
call
int
(bad)
sbb
clc
outs
(bad)
and
jmp
data16
xchg
dec
je
inc
arpl
jns
lods
fsub
aad
loope
cmp
mov
data16
nop
cmp
sbb
stos
cld
stos
jecxz
ror
fmulp
mov
mov
into
lds
dec
pop
stc
mov
fild
jbe
arpl
xchg
cmp
dec
jbe
and
jno
add
push
fs
or
inc
xchg
cmc
je
out
cmp
adc
(bad)
outs
mov
in
(bad)
inc
data16
and
(bad)
idiv
sub
adc
sub
pop
pop
retf
cld
test
sub
jg
xchg
in
fadd
add
ret
loopne
cmp
fadd
aaa
pop
inc
jp
loopne
inc
lock
jmp
sub
sbb
iret
add
push
es
mov
mov
cmp
call
(bad)
sub
out
mov
icebp
cld
dec
jno
inc
inc
gs
leave
out
rcl
pop
pusha
push
lods
mov
adc
sbb
ds
je
mov
or
jecxz
adc
or
das
dec
jne
mov
jmp
mov
les
enter
pop
inc
frndint
push
push
mov
lds
inc
jae
or
(bad)
(bad)
fdiv
and
arpl
mov
into
clc
xchg
cs
out
xchg
mov
lds
sbb
mov
lahf
sbb
icebp
test
push
out
sub
lds
mov
mov
xchg
gs
pop
cmp
std
cmps
pop
dec
xchg
pop
and
movntq
dec
add
outs
and
js
sub
arpl
adc
rol
mul
sub
hlt
movs
sbb
fcmovnbe
jb
div
icebp
repz
popf
and
inc
xchg
and
retf
pop
and
xor
and
(bad)
pop
fistp
out
jbe
enter
inc
inc
lea
cmp
sbb
pop
pushf
fisub
pop
aad
imul
push
mov
cmp
icebp
sbb
lods
out
sbb
sbb
es
dec
push
fmulp
(bad)
mov
mov
ins
outs
mov
enter
sar
push
jae
sti
out
les
inc
fwait
lahf
xlat
aas
xchg
xchg
shl
or
neg
or
jg
(bad)
dec
and
in
sahf
lds
jns
mov
mov
or
imul
or
cmp
retf
repnz
mov
add
lods
xchg
loope
loop
in
push
and
adc
jmp
daa
lods
inc
loope
es
data16
ret
(bad)
sub
and
shl
push
shl
dec
(bad)
in
sub
test
push
mov
lock
pop
jb
sbb
stos
mov
pop
sub
jge
sbb
ret
in
cmps
out
fimul
xor
mov
lock
or
dec
jnp
fstp
adc
in
(bad)
fcmovb
bound
add
(bad)
shl
ja
test
dec
in
(bad)
or
aam
dec
mov
xchg
int3
aam
cdq
test
pop
and
or
or
outs
push
xor
loop
(bad)
lock
sub
test
scas
jp
ins
adc
popa
sbb
cwde
(bad)
sti
dec
sub
test
jmp
push
iret
test
pop
sbb
cmp
push
loope
or
and
ss
xor
jbe
imul
jmp
mov
stos
shr
mov
jns
xor
mov
gs
dec
and
push
scas
push
sub
out
pop
aam
(bad)
scas
dec
cmp
pop
cli
in
mov
mov
fmul
sub
out
lock
loop
mov
mov
xchg
inc
mov
dec
jne
pop
pop
mov
push
les
dec
xor
pop
push
imul
pusha
dec
xor
lods
or
call
inc
cmp
imul
mov
push
out
loop
sbb
push
imul
mov
jle
adc
aaa
hlt
adc
cwde
sar
and
fs
idiv
das
mov
mov
jo
pop
xchg
adc
(bad)
movs
test
hlt
(bad)
int
xchg
loope
test
add
nop
icebp
rcr
mov
push
add
inc
cld
sub
push
sub
mov
adc
dec
repz
shr
xchg
pusha
dec
push
(bad)
(bad)
data16
mov
push
sub
mov
loopne
imul
imul
in
shl
leave
scas
pop
xor
pop
push
(bad)
xchg
dec
cli
sub
mov
add
adc
xor
jne
pop
sar
dec
movs
popf
test
mov
xor
xchg
mov
mov
cmp
sub
cmp
dec
loopne
inc
fisttp
mov
mov
ins
xor
clc
inc
stos
sub
inc
clc
sti
mov
pop
mov
fcmove
fst
out
pop
fdivr
sbb
outs
push
dec
scas
adc
jmp
shl
cmp
std
fisubr
test
outs
pusha
pop
mov
test
mov
stos
arpl
in
mov
shr
add
adc
aad
ins
dec
daa
and
daa
xchg
pusha
scas
fcomip
and
xchg
jl
fcom
dec
ja
imul
loop
mov
and
push
ret
fldcw
daa
push
inc
nop
xchg
jbe
dec
sub
push
jg
sti
ret
int3
movs
lods
mov
popa
ret
ret
ss
or
stos
push
xchg
sbb
not
divps
mov
popa
dec
mov
inc
aas
out
int
cmp
test
and
add
fwait
mov
sar
cs
hlt
sbb
ds
and
and
jle
(bad)
dec
adc
shl
sbb
mov
cmp
inc
test
idiv
jg
push
jl
add
add
xor
rcr
xchg
aad
pop
std
xchg
push
(bad)
jne
repz
mov
xchg
cdq
push
clc
jl
sub
add
sahf
xchg
add
jo
xchg
jmp
outs
lods
xchg
stos
test
inc
movs
jbe
sub
mov
dec
imul
rcr
shl
(bad)
jmp
jecxz
add
(bad)
sbb
jo
xor
(bad)
in
cs
sub
pop
lea
jecxz
aam
sub
push
stos
(bad)
lock
les
ja
jno
sbb
or
mov
stos
lds
add
jbe
ds
mov
jo
fcomp
pop
xor
call
and
lock
jae
xchg
mov
cs
out
pop
push
or
call
or
cmp
out
pop
mov
lds
pop
sub
cdq
rcr
(bad)
aad
sbb
popf
push
jge
mov
pop
(bad)
fstp
mov
cmc
mov
fistp
mov
popf
or
retf
iret
and
cs
mov
jmp
outs
jmp
repz
adc
stc
sbb
cmp
lahf
mov
js
cmp
pushf
push
popa
jno
popf
or
jl
jae
dec
into
fcmovnbe
xchg
cmp
ror
push
inc
aam
sub
push
ret
mov
mov
push
sub
push
jmp
cmp
xchg
inc
ret
dec
pop
push
nop
add
cmp
retf
jmp
mov
sbb
add
mov
sbb
or
mul
sbb
adc
dec
fcomp
mov
and
inc
aas
clc
mov
mov
leave
and
fisubr
lea
jae
(bad)
int3
loopne
pop
cmp
out
mov
pop
cdq
call
js
xor
jmp
inc
xor
fst
arpl
test
cdq
arpl
push
aas
lea
fadd
imul
pop
add
fs
rol
mov
stos
aad
movs
xor
xor
aam
push
push
jb
jmp
mov
in
pop
pop
out
cmp
(bad)
aas
ins
mov
inc
jecxz
mov
jb
outs
adc
scas
mov
daa
ds
in
jo
adc
lock
add
sbb
jge
test
jns
sbb
push
push
lds
cmp
in
and
xchg
jge
push
xchg
or
stos
mov
cs
mov
fnsave
bound
or
dec
push
popf
xchg
sbb
xor
mov
out
fwait
and
retf
xlat
ror
xor
add
lock
(bad)
cli
xor
sub
xchg
dec
fnstsw
push
cmp
and
aas
dec
or
pop
and
jge
pop
lock
or
xor
push
mov
xor
loope
out
sub
mul
ds
or
cmp
aam
pop
jae
xchg
lods
sbb
repnz
cmp
not
add
dec
xchg
and
aas
push
jle
sub
xchg
and
dec
mov
(bad)
dec
ret
xchg
aam
add
mov
dec
or
mov
ror
ins
sti
xchg
jl
pop
mov
frstor
jnp
inc
test
loope
pop
les
gs
iret
jmp
in
hlt
dec
test
imul
test
push
icebp
mov
sub
loopne
mov
cmp
pop
test
not
fild
adc
mov
call
push
sub
imul
sub
fmul
fild
and
or
or
repnz
inc
inc
sbb
aam
cld
pop
(bad)
dec
loopne
mov
stos
ds
fbstp
std
mov
aas
fwait
daa
cmp
sti
push
fistp
test
das
fmul
add
and
pop
or
cmp
jnp
add
aad
cli
arpl
mov
in
inc
(bad)
lock
mov
sbb
and
xor
sbb
add
sub
aaa
retf
xlat
push
aam
retf
(bad)
imul
hlt
mov
pop
cmp
fidiv
stos
jmp
sub
pusha
mov
ins
int3
jne
stos
mov
retf
jne
xchg
pop
mov
sahf
cmovl
sbb
jnp
loopne
xor
sahf
sahf
(bad)
(bad)
cli
sub
push
inc
int3
test
add
das
and
test
je
inc
gs
mov
cmp
out
fidiv
mov
jle
xor
nop
mov
cmc
mov
adc
push
sahf
cdq
push
mov
pop
add
repnz
mov
and
cmp
cmp
xor
xchg
add
in
adc
pop
xchg
cli
push
in
jecxz
jmp
push
pop
(bad)
jbe
xor
aad
push
mov
mov
div
mov
shl
int3
cmp
jge
mov
stos
jg
pop
add
movs
sbb
and
out
ret
test
push
mov
mov
xor
mov
aam
popa
or
leave
add
jle
enter
ins
pop
jns
inc
and
setg
adc
test
cmps
mov
or
jl
jmp
repnz
add
mov
les
scas
or
in
bound
popf
jp
cmp
shr
pop
outs
test
nop
sub
sar
inc
mov
xchg
adc
mov
push
in
es
sub
and
rol
ja
push
scas
inc
shr
stos
cwde
inc
mov
cwde
popa
idiv
or
xchg
jno
push
and
(bad)
dec
xor
mov
and
cmp
push
loopne
ficomp
ret
jg
mov
movs
push
push
frstor
outs
and
call
or
jne
xchg
mov
(bad)
push
push
xor
mov
jge
mov
test
(bad)
and
mov
cmp
jo
xchg
xchg
pop
stc
push
inc
cs
mov
mov
push
(bad)
jl
imul
sbb
jp
leave
xchg
idiv
jmp
fcomp
mov
sahf
enter
movs
or
push
pop
cmp
out
call
sub
push
ins
jno
and
int3
dec
retf
outs
inc
push
in
call
test
fs
(bad)
jmp
outs
loope
sbb
pop
ret
jle
mov
mov
retf
out
push
push
push
cmp
push
mul
icebp
movs
lods
mov
xor
inc
xor
repz
push
call
lods
nop
into
ret
cmp
add
rcl
aad
lods
popf
imul
in
and
outs
xor
int3
add
not
mov
push
iret
mov
xor
mov
(bad)
sub
sub
and
jno
or
aaa
sub
aad
pop
arpl
mov
xchg
jmp
std
sbb
and
jo
dec
rol
mov
mov
out
xchg
add
jmp
cmp
rol
retf
int
or
mov
dec
xor
xchg
mov
pop
push
mov
adc
imul
fidiv
sar
pushf
icebp
mov
jns
imul
jle
jae
cmp
pop
ja
test
push
sbb
idiv
es
sbb
loopne
shl
xchg
and
imul
stos
cmc
and
mov
mov
jl
jle
cmp
int
pop
adc
cmp
adc
icebp
mov
mov
inc
mov
cmps
xchg
fadd
or
and
test
mov
dec
dec
mov
or
jb
push
mov
pusha
inc
cwde
cmps
arpl
mov
jmp
clc
adc
popf
fyl2x
das
cwde
inc
ja
inc
xchg
add
addr16
mov
dec
shl
test
and
xor
xlat
adc
in
stos
inc
dec
into
jns
(bad)
add
ret
mov
push
fcom
dec
or
popa
sub
outs
mov
adc
es
mov
test
fwait
add
enter
enter
outs
lock
adc
addr16
fiadd
lods
das
pop
sti
dec
xchg
push
mov
adc
push
or
in
push
or
sub
jo
xchg
mov
push
sub
jns
out
adc
in
inc
xchg
shr
jno
pop
repnz
inc
inc
pop
or
push
add
inc
add
mov
ror
mov
push
mov
push
out
inc
sti
ret
daa
mov
ficom
sti
pop
cmp
and
and
lods
call
and
in
push
inc
cwde
pusha
pop
in
jmp
stc
scas
cdq
xor
cs
adc
popf
std
xchg
enter
inc
inc
adc
mov
adc
jp
sub
mov
jbe
pop
(bad)
adc
ja
pop
imul
pop
in
or
fdivr
fs
mov
sbb
sub
(bad)
cs
nop
stos
rcl
and
adc
cmp
fsubrp
pop
out
imul
bound
mov
fst
mov
add
fimul
lock
xor
xlat
xor
inc
scas
(bad)
ins
push
mov
lods
stc
popf
sub
cmp
xchg
movs
clc
xlat
jbe
repnz
cmp
sbb
loop
add
or
or
xchg
jnp
(bad)
pop
gs
cs
xlat
loop
jl
mov
adc
outs
xchg
xchg
or
or
idiv
into
cmp
leave
loop
clc
jbe
mov
test
imul
pusha
sbb
int3
push
cwde
test
adc
pushf
scas
xchg
movs
aas
shl
xor
pop
scas
(bad)
mov
ret
mov
imul
repnz
test
data16
outs
loop
je
cmp
add
xchg
cmp
xor
out
nop
je
push
loopne
push
retf
fsub
ret
pop
sbb
rcr
fdiv
lahf
sbb
push
cmc
(bad)
rcr
jno
sub
jmp
ja
xor
scas
cmp
mov
xor
dec
fs
leave
fdiv
inc
leave
xchg
(bad)
push
aad
(bad)
fidivr
sub
loop
mov
pop
and
aam
fmul
loope
inc
or
sbb
and
imul
push
lods
xor
mov
(bad)
pushf
fidivr
cmp
xchg
sub
add
mov
mov
jbe
jg
test
test
fcomp
ds
outs
mov
adc
mov
div
mov
cs
rcl
cmp
fdiv
xchg
mov
or
sub
cs
adc
icebp
aaa
loopne
add
mov
jno
pop
rcl
js
pop
pop
test
ss
in
scas
or
test
pop
out
push
or
xchg
cmp
pop
adc
sbb
and
icebp
inc
jne
int
out
mov
loope
mov
pop
jge
jbe
pop
sub
fcomp
sbb
(bad)
xchg
mov
inc
sub
sub
jge
(bad)
call
sub
jb
shl
cmp
xor
adc
pop
cmp
pusha
jno
lods
mov
push
inc
ror
mov
imul
add
or
(bad)
mul
mov
cmp
ins
dec
pusha
popa
pop
pop
dec
cdq
(bad)
ins
in
(bad)
pop
push
mov
mov
nop
sar
xor
push
mov
das
push
fdiv
int3
xchg
pop
cmp
xchg
push
xchg
mov
mov
in
jmp
scas
inc
test
int3
or
mov
fistp
frstor
lods
cmp
int3
ror
imul
idiv
jnp
jge
(bad)
retf
or
push
mov
xor
icebp
mov
mov
fidivr
in
jge
iret
(bad)
mov
mov
jg
gs
mov
std
aam
mov
add
xor
outs
and
mov
aaa
out
fdivr
jns
jmp
mov
in
imul
dec
xor
test
shl
adc
test
shr
fs
mov
mov
or
push
mov
adc
and
int
test
dec
cmp
push
sti
sub
xchg
stc
mov
fstp
fld
or
loope
inc
pop
pop
add
push
or
dec
out
pop
pop
xor
add
or
fisub
gs
jge
ja
ins
or
cmp
into
rcl
test
or
xor
into
adc
jl
xchg
or
push
jae
or
push
and
jno
rol
add
cmps
or
adc
bound
test
push
in
scas
adc
daa
shl
popf
mov
ss
ja
je
ret
call
sub
nop
movs
push
cmp
stos
fwait
dec
stos
cmp
das
sbb
xor
aam
jno
inc
xchg
loopne
mov
push
rol
retf
or
in
into
xor
mov
popf
or
outs
mov
jecxz
shl
and
cmp
mov
adc
ds
popf
and
xchg
xlat
jbe
or
dec
enter
shld
inc
leave
movs
dec
and
jbe
js
dec
mov
shr
or
pusha
idiv
fld
jmp
mov
es
cmp
mov
jge
mov
mov
pop
pop
lock
sub
aaa
mov
shr
add
popa
rcr
pop
sub
enter
movs
mov
fdivr
stos
out
mov
mul
(bad)
xchg
pop
mov
mov
movs
lods
adc
jmp
shl
movs
mov
aad
shr
sar
lods
aas
std
data16
push
adc
inc
xor
(bad)
data16
sub
push
push
(bad)
jle
test
xor
jp
mov
xchg
mov
out
lahf
ja
cs
jle
scas
call
sar
es
add
sub
mov
adc
sub
dec
stos
jecxz
xchg
cmp
cmp
and
(bad)
cmp
sub
jge
sbb
jmp
scas
mov
outs
shl
pop
pop
mov
bts
out
mov
xchg
mov
pop
shl
fdivr
adc
mov
mov
mov
ja
iret
fidivr
gs
test
push
xor
shl
mov
rcr
jmp
scas
xor
xchg
repz
mov
jle
cmp
test
dec
aad
imul
and
repz
jle
add
push
push
outs
fmul
pop
pop
std
jmp
iret
test
cs
cmp
cmp
push
ss
imul
xchg
dec
je
sub
lods
mov
iret
mov
rcl
in
or
pop
sbb
fist
cmc
icebp
addr16
fmulp
lahf
xchg
aad
sub
outs
les
mov
loop
dec
and
lods
cmp
cmp
dec
xor
pusha
dec
mov
loop
cld
fs
add
jne
movs
sbb
pop
xchg
test
fbstp
sbb
pushf
stos
dec
sti
mov
cmc
add
or
or
mov
jl
sub
(bad)
hlt
pusha
push
cli
(bad)
xor
inc
data16
pop
rcl
mov
fwait
idiv
shl
xchg
sbb
fnsave
(bad)
jmp
ins
mov
add
mov
mov
push
std
and
retf
jl
mov
dec
mov
jno
lock
retf
jmp
mov
outs
sub
daa
xchg
je
clc
movs
mov
or
clc
xchg
(bad)
rol
aaa
mov
xchg
mov
xor
cmc
inc
loope
in
xor
mov
fisub
pop
movs
sbb
movs
add
sbb
mov
mov
cmps
dec
rcl
stos
iret
imul
mov
jne
fcom
das
jecxz
bnd
cmps
scas
dec
stos
sbb
mov
das
ss
aad
inc
pop
stos
sub
xor
push
cmc
lea
and
aad
rcl
clc
data16
pushf
or
rol
lea
gs
mov
add
xlat
and
pop
pminub
imul
push
sub
daa
shr
mov
xchg
mov
dec
xor
push
shl
ret
movs
xchg
imul
mov
lods
call
cmp
jb
mov
add
enter
out
cmp
mov
ret
movs
mov
xor
xor
lods
mov
hlt
loope
sub
push
or
cmp
or
outs
jnp
div
mov
xor
ret
sub
clc
ins
mov
dec
mov
xor
popf
inc
hlt
enter
xchg
retf
ror
push
in
pop
pop
retf
mov
sti
push
movs
cli
fdivr
outs
les
retf
pushf
mov
xor
dec
mov
or
mov
cmps
jne
in
les
repnz
jg
adc
add
pop
in
ror
fisub
cmps
xchg
xor
adc
pop
mov
icebp
rcl
in
mov
test
lahf
dec
pop
fdiv
fcomp
pushf
aam
xor
pop
or
cmp
lahf
sbb
and
pop
std
movs
ror
fld
mov
scas
cld
jg
mov
dec
enter
and
or
pop
push
adc
cmp
pop
ja
mov
push
add
into
mov
sub
test
jg
lods
ds
scas
repnz
cs
or
test
lahf
daa
push
pushf
push
fldcw
mov
test
mov
cmc
push
movs
mov
dec
fwait
(bad)
jae
push
add
or
inc
adc
adc
(bad)
shl
push
jmp
test
clc
jnp
cwde
mov
hlt
jp
inc
mov
push
jnp
push
cmps
adc
add
test
and
xchg
cdq
jg
lods
test
xchg
mov
lds
push
jl
push
and
pop
ins
jbe
cmp
or
sub
pop
cmp
mov
xor
mov
inc
xchg
and
adc
dec
je
cmp
shl
lods
fisttp
dec
in
(bad)
sti
std
les
sti
mov
in
int
mov
stos
mov
mov
mov
xchg
add
shl
pop
out
mov
outs
dec
add
enter
jne
mov
mov
jge
ins
cwde
dec
fbld
neg
bound
in
cmp
or
pop
cs
mov
out
mov
lods
inc
xchg
mov
dec
lds
dec
(bad)
mov
cmps
push
jne
mov
pop
or
or
xor
xchg
fnsave
in
jp
jp
sub
dec
mov
xchg
test
nop
lods
dec
xor
into
push
pop
neg
(bad)
mov
call
ins
std
push
mov
outs
push
mov
sbb
dec
js
ficom
jp
retf
inc
cdq
cmp
imul
cmps
jo
outs
sbb
cmp
test
and
sbb
inc
imul
test
ins
adc
mov
in
sbb
out
sar
pop
pop
fsub
xchg
test
lock
and
xor
leave
sbb
mov
jg
ret
jne
and
cmps
sub
enter
lock
push
pop
in
test
mov
ds
push
or
nop
pop
and
outs
cdq
pop
hlt
jmp
dec
les
(bad)
push
and
pop
into
sbb
mov
out
jnp
inc
cmp
adc
sub
pop
aam
and
sbb
add
gs
or
or
add
xlat
add
ins
xchg
xor
xchg
sub
mov
jbe
lahf
lods
pop
out
mov
fisttp
into
sub
adc
nop
and
adc
jns
(bad)
inc
cmp
xchg
popa
fnsave
and
or
inc
mov
add
mov
pop
in
in
jns
fwait
cmp
cli
pop
mov
xchg
add
out
or
gs
ins
jno
mov
mov
cld
dec
(bad)
ret
mov
in
lds
sbb
push
(bad)
mov
xor
pause
and
push
cmp
lods
loope
jg
ds
test
and
clc
or
lock
cmc
pop
iret
or
jae
(bad)
pop
or
mov
outs
movs
mov
xlat
daa
xor
in
into
xchg
push
aaa
push
pop
cs
mov
xchg
pop
xchg
mov
jo
mov
ins
aas
push
dec
adc
ds
outs
out
gs
pop
mov
cmp
fcmovu
pop
xchg
retf
cs
jbe
out
mov
adc
sti
ret
fcmovu
or
jle
push
mov
jb
and
cmp
mov
sbb
movs
popa
ja
lods
xchg
shl
mov
xchg
stos
jge
push
ret
outs
pop
pop
or
add
jo
or
pop
fs
cld
adc
icebp
icebp
dec
dec
mov
push
add
(bad)
retf
add
xor
jge
mov
push
push
shl
nop
add
dec
fwait
neg
gs
cmps
dec
and
daa
xchg
hlt
fwait
mov
xchg
xchg
xor
and
mov
(bad)
sub
mov
mov
sti
jmp
mov
push
rcl
add
mov
sbb
inc
movs
je
(bad)
mov
sub
mov
jp
mov
test
dec
retf
nop
inc
ds
cmp
inc
jle
in
iret
repnz
inc
scas
imul
(bad)
retf
sub
sar
adc
inc
lock
mov
lds
popf
test
xor
mov
sahf
cli
and
(bad)
aam
les
mov
dec
arpl
dec
ret
ins
sbb
adc
sti
push
cdq
cld
dec
dec
movs
xchg
jle
or
sbb
jle
sub
push
and
and
push
mov
push
xlat
pushf
sbb
retf
ins
mov
(bad)
mov
rcl
ss
mov
jne
addr16
pop
inc
mov
add
out
xchg
cmp
add
(bad)
fcom
cli
jns
xor
dec
sar
and
je
shl
ins
jbe
sahf
pop
mov
mov
xchg
cmp
mov
cmp
dec
dec
(bad)
push
cwde
and
pop
repnz
in
sbb
sbb
or
inc
rcl
int3
scas
xor
ins
es
or
dec
push
sbb
and
push
jmp
sub
ins
inc
pop
int
daa
dec
push
cli
popa
sbb
xlat
cli
test
adc
or
inc
push
or
mov
test
or
rcl
fidivr
jno
cmp
movs
das
inc
inc
(bad)
out
mov
fstp
and
ret
ins
out
pop
ret
cwde
pop
das
adc
jns
ret
out
mov
adc
lods
retf
mov
fisubr
cmp
ins
xchg
push
sub
jg
cmp
xor
in
arpl
cmp
or
rcr
cmc
inc
and
test
push
mov
xchg
push
xor
mov
out
push
daa
inc
dec
loopne
mov
sti
lock
daa
inc
fnsave
test
or
addr16
push
iret
lods
sbb
jmp
mov
repz
jmp
movs
xchg
lods
call
(bad)
pop
mov
cdq
pop
int
repz
add
mov
inc
int3
out
cmp
xchg
fwait
lods
jmp
adc
push
mov
pop
jbe
sahf
sbb
add
pop
mov
test
xor
xor
sub
xchg
stos
dec
(bad)
and
test
loop
sbb
jne
loopne
out
data16
cmp
pop
inc
hlt
cmps
mov
retf
into
in
fs
pop
cmp
dec
xlat
shl
xor
in
cmp
ins
shl
sbb
push
(bad)
aam
out
in
cld
movs
in
ret
mov
add
dec
iret
ja
test
or
cld
push
retf
in
imul
mov
call
mov
xchg
cld
push
arpl
xchg
inc
movs
add
dec
pop
shl
jns
cmp
enter
jnp
jge
lds
cmp
jg
aas
sbb
pop
test
cmps
inc
push
xor
push
cmps
sub
sar
jge
mov
mov
(bad)
sub
fwait
mov
cs
stos
aas
cmp
fidiv
ficom
in
gs
mov
xor
cmp
fdiv
or
xor
jno
pushf
inc
pusha
push
jmp
outs
mov
inc
dec
stc
fst
adc
cld
xor
inc
adc
(bad)
and
pcmpgtw
icebp
mov
in
std
and
inc
dec
and
in
icebp
js
mov
sbb
ficom
or
and
outs
js
fmulp
or
push
sub
mov
loopne
mov
popf
mov
push
aam
dec
aad
rol
sub
lock
push
inc
xchg
movs
lock
fiadd
nop
mov
jno
popa
repz
and
pop
call
fisttp
popf
and
add
js
in
mov
mov
pop
retf
xchg
pop
je
fcomip
dec
inc
push
shl
fistp
sub
cld
sub
sub
aam
nop
push
inc
loop
mov
jmp
test
mov
push
sar
lahf
mov
sub
shr
sub
aas
xor
cld
jns
aas
fstp
leave
push
out
adc
push
push
imul
sub
push
int
stos
mov
pop
cli
inc
cmps
jp
pop
mov
push
nop
pop
mov
mov
pop
inc
adc
daa
or
mov
mov
shl
lods
movs
scas
jo
out
adc
cmp
adc
adc
sub
aad
adc
push
in
sbb
mov
adc
ja
xor
out
fimul
imul
add
jle
(bad)
jl
arpl
fistp
jmp
mov
xchg
mov
cmp
pop
add
dec
fstp
outs
fcomp
sub
adc
push
adc
cld
cdq
or
dec
and
sbb
bound
(bad)
std
ja
lds
mov
xchg
outs
cmps
cmp
je
jg
jmp
in
stc
mov
jecxz
pop
dec
retf
cmp
pop
imul
repz
push
inc
cmp
imul
cmps
jnp
inc
retf
sbb
adc
fs
sbb
mov
mov
jg
cmovs
and
inc
imul
scas
sub
out
(bad)
movs
sbb
ins
sub
inc
ffreep
mov
ins
repz
xor
bound
xor
fisttp
xchg
or
nop
add
push
fbstp
and
dec
cwde
adc
int
fidiv
jnp
in
push
faddp
mov
pop
xor
xor
jbe
lods
add
pusha
push
ins
add
jmp
in
push
push
dec
pop
mov
xlat
jo
dec
ret
cmp
sbb
loope
add
mov
aas
bound
mov
xchg
sub
and
add
cmp
test
shr
data16
cmp
xchg
push
and
jle
push
add
xchg
stc
(bad)
popf
mov
jp
cld
xchg
mov
adc
adc
stos
pusha
mov
ja
and
sahf
jmp
sub
and
push
sar
outs
xor
das
pop
jle
add
sub
add
lea
mov
xor
js
xor
hlt
das
push
inc
xor
xor
je
loop
outs
push
popf
push
jge
int
(bad)
and
aad
retf
(bad)
jge
je
scas
pop
aaa
cdq
sub
mov
push
les
out
daa
xchg
mov
popf
pop
adc
push
xor
push
rcl
cwde
(bad)
cmc
neg
sbb
xor
xchg
sbb
sbb
inc
push
xchg
icebp
cmp
adc
leave
cmps
dec
fisub
stos
add
sbb
or
mov
or
sar
jo
test
(bad)
mov
sbb
dec
cmp
stc
loop
adc
in
mov
sbb
retf
dec
pop
pushf
cmp
mov
cwde
mov
arpl
pop
rol
lock
add
scas
mov
les
js
sbb
xchg
xlat
jb
les
push
dec
mov
jle
add
add
push
mov
iret
out
ins
cmps
xor
dec
gs
adc
push
pop
jo
stos
sub
psllq
xlat
adc
cli
jle
fldenv
aad
cmp
and
jbe
and
in
iret
icebp
pop
ret
jle
or
mov
xor
clc
neg
cs
push
mov
popf
test
jmp
leave
jmp
mov
fimul
add
jbe
cdq
das
test
sbb
pop
xor
xchg
mov
dec
xchg
jl
(bad)
test
cmp
sbb
adc
enter
fistp
cli
or
enter
cmp
add
mov
xchg
loop
inc
push
in
mov
adc
xchg
fwait
les
inc
add
add
cmp
and
dec
inc
mov
xchg
xchg
sbb
sub
adc
sbb
ret
push
test
jecxz
retf
retf
adc
sub
jae
sbb
pop
mov
push
mov
and
adc
mov
mov
add
iret
sbb
cmp
mov
and
fwait
leave
xchg
lahf
cld
lahf
call
and
mov
add
loop
scas
dec
mov
xchg
enter
jg
xlat
jmp
jl
repnz
movs
ror
cmp
push
sbb
pusha
call
xchg
or
shl
jg
bound
jg
not
outs
mov
inc
cmp
add
repnz
in
data16
pop
fbstp
pop
stos
mov
sbb
sbb
mov
out
retf
push
mov
cmp
stos
push
sbb
push
mov
jb
aas
jno
dec
ficom
jmp
and
adc
outs
inc
sti
stos
sbb
xchg
int3
mov
std
mov
(bad)
jg
in
arpl
jmp
sub
and
mov
fwait
inc
jecxz
in
into
push
lahf
xchg
mov
call
sbb
cmp
add
je
push
dec
add
ret
(bad)
add
cmc
add
movs
enter
stc
mov
ret
inc
push
push
shl
(bad)
(bad)
hlt
fisub
push
data16
jmp
aas
pop
cwde
xor
push
js
lods
out
mov
lea
sub
mov
cld
lahf
jle
repz
call
ins
les
jl
stos
fsubr
mov
pushw
cmps
pop
jnp
jl
mov
xchg
adc
pop
sar
(bad)
ret
cld
sbb
push
gs
pop
and
xor
sub
shr
ret
pushf
pop
pop
es
mov
test
div
and
lds
cwde
aaa
sbb
push
xchg
comiss
cmp
sub
xchg
vpsadbw
fld
mov
mov
out
xor
fimul
xor
pushf
pop
retf
out
push
fs
xchg
in
push
jmp
retf
mov
aam
ja
ror
inc
arpl
push
fadd
mov
arpl
aam
xor
sbb
out
cmp
aam
or
ret
push
jae
imul
mov
mov
mov
adc
fmul
jmp
mov
std
cmp
pop
cmp
repnz
push
inc
std
xchg
add
inc
retf
popf
or
jae
rcl
pop
fld
imul
cmps
pushf
or
idiv
ror
fld
test
xchg
or
xchg
add
retf
movs
call
push
(bad)
test
lods
sar
clc
and
in
and
inc
cwde
lds
dec
iret
fimul
and
push
add
mov
cmc
stos
xchg
adc
shl
push
ins
add
test
shl
mov
and
xchg
push
pop
loopne
push
fstp
pop
test
loop
sti
dec
inc
mov
xlat
push
adc
arpl
xor
push
jmp
jmp
push
jmp
rcl
out
clc
out
in
xor
cmc
mov
repz
shl
mov
iret
sbb
adc
add
fucomip
xchg
cmc
fsubr
mov
fstp
daa
repz
leave
call
ffree
push
icebp
retf
aam
push
jmp
jmp
xchg
sub
cmp
fadd
and
adc
mov
or
mov
out
cld
add
repz
jo
xor
pop
ins
add
bound
fdivr
pop
in
pop
cli
adc
jge
int
les
pop
or
sti
vfmsub132sd
inc
retf
push
ja
jmp
ja
mov
pop
cmp
sbb
jo
or
add
ss
leave
push
xchg
push
pop
mov
sub
and
fwait
pop
push
lods
outs
adc
scas
push
inc
or
cmp
cmp
pop
xor
(bad)
(bad)
fisubr
out
cmc
jns
fimul
mov
enter
into
jae
push
or
cmp
pop
inc
xchg
sahf
jno
retf
jne
dec
jae
jno
dec
pop
jns
pop
test
ss
push
repnz
jne
scas
test
es
aad
jne
je
(bad)
into
inc
mov
dec
jecxz
int
loop
push
jae
cmp
xchg
out
jge
inc
stos
sbb
push
retf
mov
dec
xchg
mov
ret
jae
xchg
aad
mov
mov
fmul
imul
sub
jb
das
mov
push
pop
xchg
das
shl
hlt
sbb
imul
push
jg
paddb
aas
xor
iret
pop
(bad)
test
push
add
arpl
js
bound
sbb
cli
push
rcr
popa
add
ret
cli
mov
test
shr
repnz
and
jge
sbb
dec
add
aaa
push
mov
xchg
movs
xor
imul
in
ret
sbb
aad
cli
add
pop
fistp
jnp
mov
lock
xchg
mov
sub
add
jge
js
push
icebp
adc
dec
fs
xor
mov
mov
mov
(bad)
call
mov
sub
adc
or
xlat
add
xor
mov
cmp
or
hlt
stos
inc
jo
hlt
or
cld
in
cld
xchg
xor
mov
in
jecxz
ins
and
or
sub
or
lea
sub
inc
or
aaa
jbe
ins
stos
(bad)
xchg
sub
popa
mov
mov
xor
push
out
test
push
mov
cld
add
adc
cmps
outs
adc
ficomp
xchg
xchg
test
xor
(bad)
cmp
xchg
arpl
lahf
movs
es
lods
sub
scas
leave
into
adc
addr16
lds
fild
xchg
imul
dec
pop
repz
dec
addr16
adc
imul
mov
adc
movs
dec
jmp
cs
jo
sbb
jne
and
pop
sbb
add
pop
add
cmps
aaa
pop
sub
fcmovu
pop
cmp
movs
pop
fimul
pop
adc
jb
sbb
push
add
retf
add
cmp
jbe
sbb
xchg
jle
pop
cmp
mov
mov
fcomp
sbb
movs
pop
stc
mov
pusha
fist
and
sub
pop
test
fmul
dec
and
xchg
push
xchg
js
xchg
xchg
or
loopne
in
jg
loopne
pushf
stos
rcr
jmp
cmc
and
or
retf
cmp
not
mov
mov
outs
pop
mov
imul
jno
pop
pusha
retf
adc
mov
ja
or
shr
inc
mov
cld
idiv
xor
rcl
cmp
test
xchg
xchg
mov
les
sub
mov
mov
add
cs
imul
in
daa
call
mov
pop
inc
dec
add
mov
sub
and
cli
push
fsubr
push
lock
loope
xchg
sub
cmc
mov
and
jmp
pop
hlt
subps
pusha
bound
jge
push
lods
adc
xchg
sti
outs
outs
stos
shr
mov
inc
jne
loope
test
push
xor
jnp
xor
mov
push
push
cmps
outs
popf
mov
bts
push
push
nop
scas
(bad)
pop
or
cmp
pop
xor
xor
inc
stc
mov
mov
test
ret
mov
inc
mov
or
cmp
mov
ficom
aam
aad
add
adc
gs
pop
mul
xor
xchg
inc
ja
xadd
mov
xor
sub
ins
std
mov
mov
call
clc
ret
dec
out
push
fmul
push
aas
adc
ss
outs
imul
mov
jmp
scas
fisttp
mov
ds
sbb
dec
mov
xor
add
scas
and
(bad)
sub
fbstp
(bad)
fisubr
mov
add
xor
lahf
mov
pop
and
add
dec
stc
dec
mov
loop
(bad)
push
retf
add
push
fsubr
sbb
or
push
out
cli
sub
cmp
std
jo
cmp
imul
inc
push
add
out
xchg
sub
out
popf
or
mov
cmp
shr
cld
test
test
xor
clc
outs
ret
outs
xor
pop
sbb
mov
in
cmc
int
xlat
jb
pop
mov
mov
mov
test
addr16
adc
adc
mov
test
mov
loopne
sub
mov
pop
jp
cwde
(bad)
aam
bound
or
repz
cmp
call
loopne
mov
stos
call
inc
sbb
call
cmp
xor
js
sub
ret
fdivr
(bad)
mov
jp
out
ins
inc
clc
pop
cmp
out
inc
ror
mov
les
mov
add
jb
push
and
cmps
nop
jno
cmp
out
mov
push
out
cmps
out
mov
lods
mov
mov
ins
mov
sbb
out
jne
add
stc
cmc
or
push
pop
mov
xchg
add
jo
dec
scas
jg
pop
mov
push
pop
and
fsubrp
sar
and
mov
stos
inc
ret
dec
add
rcr
les
enter
test
and
xchg
loopne
add
fist
fidivr
mov
lds
push
jne
pop
stos
out
dec
repz
in
lods
and
mov
retf
adc
cs
loop
xchg
pop
addr16
adc
sub
sub
fst
into
sub
cwde
clc
push
in
mov
mov
and
and
scas
and
js
bound
mov
push
scas
jl
or
xor
loop
test
js
mov
out
call
pop
dec
lahf
sbb
sub
sbb
scas
lea
xor
pop
or
xor
retf
outs
fcom
xor
adc
call
xchg
sahf
push
mov
inc
or
cmp
mov
jge
jg
or
shl
sub
xchg
js
ja
fdiv
loope
pop
push
jns
add
bound
sub
outs
movs
pop
enter
or
out
pop
jo
cmps
dec
mov
repnz
push
aam
fnstcw
daa
inc
imul
call
mov
sbb
jmp
cmp
(bad)
in
cld
test
jo
cmps
xchg
mul
xor
xchg
cmp
dec
and
ror
mov
jmp
dec
lea
inc
adc
xchg
cmp
push
in
push
clc
fidivr
push
or
ja
xchg
mov
(bad)
fnstenv
dec
jecxz
call
cmp
ret
push
adc
aam
out
pop
and
pop
sbb
mov
(bad)
sbb
outs
jecxz
mov
inc
aas
test
clc
push
sub
lds
cmp
cli
fnstsw
push
jmp
pop
popa
sub
shr
iret
xchg
in
xor
xor
rcl
fist
test
and
ins
xchg
ja
icebp
imul
or
push
push
inc
jne
retf
out
pop
sbb
pop
test
inc
mov
inc
test
int3
sub
mov
stc
and
lds
xchg
jge
cmp
or
sub
push
xchg
pushf
jnp
and
stos
icebp
sahf
and
int3
bound
fidiv
mov
push
lds
jmp
scas
stos
in
pop
xchg
in
sbb
add
call
push
es
out
push
stc
das
rol
cs
mov
mov
fcom
jo
and
adc
ins
add
out
loope
cli
sahf
pusha
cmps
rcl
scas
push
nop
xchg
push
push
outs
sbb
popa
and
xchg
daa
jmp
push
adc
mov
pop
mov
or
xchg
sbb
cmp
or
mov
mov
push
fmul
xor
rol
mov
adc
inc
mov
mov
popf
enter
push
das
push
stos
icebp
sub
adc
jmp
xor
sub
adc
mov
ss
inc
cmp
jecxz
jo
outs
sub
aas
pop
retf
mov
and
into
jmp
pop
jbe
and
add
push
outs
mov
in
cs
je
(bad)
call
fisttp
shl
iret
dec
mov
mov
pop
jg
pop
xor
jg
stos
adc
fmul
adc
cmp
not
xor
jmp
mov
adc
push
inc
xchg
mov
add
xlat
pop
push
or
adc
adc
adc
cli
aam
cmc
loop
fsub
mov
or
ret
mov
sbb
arpl
push
mov
dec
mul
sub
into
xchg
pop
retf
test
enter
sbb
push
inc
aas
repz
push
arpl
sbb
jns
and
in
or
adc
out
xchg
dec
add
pushf
mov
sbb
pop
jle
inc
inc
push
ss
adc
jecxz
pop
sub
mov
and
mov
jmp
add
mov
sub
jecxz
mov
sbb
bound
mov
gs
cmps
mov
ret
push
rol
and
xchg
or
imul
jl
(bad)
repnz
ins
inc
or
jp
adc
mov
aad
jo
cmp
inc
nop
pusha
xor
xor
sub
in
fcomp
push
mov
dec
fcmovne
std
mov
add
(bad)
mov
fwait
mov
dec
jo
ins
gs
or
mov
jmp
push
pop
out
movs
mov
out
fxch
in
mov
mov
(bad)
bsr
jle
nop
dec
retf
pusha
dec
xor
cwde
out
push
outs
hlt
(bad)
sti
ror
ja
loope
(bad)
outs
and
popf
jae
pop
rcr
mov
popa
sbb
inc
sub
jnp
sbb
sbb
push
(bad)
jnp
in
sbb
dec
xchg
sbb
sub
and
inc
dec
fwait
cdq
cmp
out
push
and
adc
fucomp
in
pop
mov
mov
jle
daa
inc
leave
dec
xchg
cmp
pop
lahf
inc
lods
xchg
push
aam
add
jne
sbb
ret
les
and
(bad)
adc
sbb
xchg
add
mov
daa
stc
cmc
(bad)
xor
sub
int3
pop
mov
jno
mov
das
call
retf
xchg
out
rcl
cmp
xor
jnp
inc
inc
repz
cli
iret
icebp
inc
loope
jb
jge
pusha
sub
lea
call
out
inc
lock
ja
aaa
cmp
daa
data16
mov
cwde
cmp
xchg
out
hlt
lods
or
xchg
jbe
push
sbb
fdiv
out
push
pop
mov
fdivr
pop
rol
xor
push
lea
pop
test
mov
stc
ficomp
ds
mov
dec
inc
retf
fld
loop
push
popf
mov
or
mov
fnstsw
ficom
cmps
ror
xchg
jle
xchg
out
(bad)
adc
not
sbb
dec
movs
ret
in
in
(bad)
jmp
add
fld
outs
push
adc
sbb
push
cmp
sub
mul
(bad)
push
sbb
inc
outs
adc
and
mov
mov
and
push
push
add
stc
aam
and
mov
fst
sub
pop
(bad)
and
movs
cmp
push
(bad)
mov
cmps
or
idiv
dec
xchg
dec
push
jmp
dec
pop
or
(bad)
aas
and
pop
fidiv
sub
jne
mov
pop
push
xor
xchg
add
arpl
sbb
jge
adc
std
and
pop
outs
add
or
fild
xor
mov
push
cdq
xchg
jge
xchg
ins
fmulp
push
iret
cmp
dec
shl
jmp
mov
fadd
mov
jmp
cmp
xor
inc
or
sub
and
mov
jmp
clc
adc
(bad)
jmp
xchg
bound
push
cli
scas
mov
movs
mov
mov
xor
or
jns
and
jle
xchg
cmp
and
mov
jbe
jb
ins
pop
jno
sbb
aam
add
jle
adc
icebp
out
dec
push
cmc
(bad)
out
push
jo
imul
cmp
adc
mov
push
outs
mov
xchg
push
aas
scas
xor
jne
rcr
gs
icebp
call
pop
fs
jl
mov
in
out
push
inc
fist
mov
mov
sub
mov
mov
fwait
xor
xor
cmp
call
out
dec
mov
pusha
rcl
dec
push
add
addr16
popa
fnstenv
lods
mov
rol
stc
jmp
xor
and
imul
sbb
clc
ror
lahf
mov
cdq
or
mov
outs
and
pop
jg
idiv
(bad)
dec
sbb
xor
dec
std
and
xchg
add
push
push
sbb
jmp
adc
cmc
xchg
out
add
icebp
xor
lds
add
(bad)
loope
ret
push
std
mov
scas
xor
xchg
mov
xchg
inc
sub
mov
and
push
sub
mov
test
imul
rcl
call
arpl
movs
rcl
pop
fldl2t
loop
stos
mov
(bad)
xor
mov
test
and
outs
fiadd
les
xor
pop
inc
and
rol
push
daa
shr
ror
push
push
cmp
inc
jecxz
pop
cmp
push
scas
or
sub
cli
mov
cmp
idiv
in
retf
xchg
xor
push
pushf
mov
cmp
sub
push
xor
cmp
lahf
pop
cmp
int3
cmp
inc
test
jbe
pop
imul
jp
lahf
sbb
mov
inc
icebp
xchg
int3
cmc
lods
or
stos
mov
and
sahf
or
cld
inc
sub
pop
fs
sub
jns
sbb
clc
stos
add
mov
pushf
clc
inc
lods
into
push
push
imul
pop
pop
jp
sbb
(bad)
xor
adc
test
pushf
out
adc
std
(bad)
push
icebp
in
mov
or
cwde
pop
pusha
sub
cmp
gs
scas
and
or
repnz
add
(bad)
stos
bnd
iret
cmp
gs
add
push
daa
std
ds
mov
or
loope
sbb
leave
xor
xlat
inc
dec
and
pop
ins
cmps
test
jo
bound
sub
adc
mov
sbb
aad
lahf
icebp
popf
mov
lods
or
mov
or
movs
mov
mov
retf
fs
and
xor
cmc
pop
test
xor
clc
jmp
sti
loope
pop
push
pop
jne
or
mov
sub
jl
inc
aad
or
xchg
xor
pop
dec
call
leave
push
les
fcmovne
call
mov
push
jecxz
bound
mov
imul
mov
retf
popf
fdiv
jbe
add
gs
data16
(bad)
inc
fist
xchg
adc
call
push
sub
mov
sub
mov
and
inc
sar
neg
pop
mov
aam
pushf
xchg
dec
xor
stc
and
inc
fst
aas
icebp
dec
aas
sub
jne
jae
ror
pop
loop
jle
mov
ds
pop
jbe
sub
or
jne
mov
cmp
dec
icebp
mov
mov
sub
lock
imul
ret
cli
mov
adc
xor
adc
and
sub
adc
mov
mov
adc
hlt
push
push
mov
ja
int3
jns
sbb
mov
outs
jge
pop
mov
jmp
sbb
scas
imul
inc
push
mov
minps
or
jge
sbb
in
out
and
or
pop
push
jmp
repz
fnstcw
inc
adc
adc
fs
sahf
cmc
fs
sub
popa
jmp
aam
out
adc
(bad)
mov
pop
outs
inc
test
ins
and
sbb
lods
stos
neg
jmp
dec
push
bswap
hlt
xchg
dec
add
sub
pop
scas
cmp
cmp
jmp
push
nop
stos
aam
fs
ret
stc
cmp
inc
and
ins
std
repnz
mov
or
and
dec
add
and
mov
xchg
cmp
mov
aam
das
fsub
xchg
or
outs
cmps
jp
inc
mov
sbb
inc
lods
mov
jae
mov
int3
mov
xchg
adc
(bad)
scas
mov
lea
jmp
(bad)
xchg
add
ja
in
loope
jmp
call
or
and
mov
sbb
pop
aaa
push
imul
jne
out
popf
pusha
sbb
shl
and
push
cmp
inc
rol
sub
paddusb
xchg
or
xor
or
or
repz
mov
mov
loop
stos
jp
ret
or
leave
mov
sti
sub
push
mov
in
cmp
add
xor
xchg
call
(bad)
out
pop
jle
add
les
clc
xor
lock
xchg
and
fld
xchg
cmp
lds
and
test
add
jmp
mov
push
call
dec
fcmovnu
cmc
test
pop
loope
jbe
inc
jle
int3
and
sub
test
cli
outs
mov
int
fwait
mov
rcr
mov
ret
sahf
ficom
dec
(bad)
mov
add
dec
mov
xchg
pusha
aad
inc
adc
into
cli
push
sti
loopne
call
repz
cwde
pop
sbb
xchg
(bad)
(bad)
sbb
xor
scas
push
cmp
pop
fsubr
xor
js
pop
jmp
mov
es
stos
mov
jp
daa
stos
adc
xchg
repz
push
jecxz
retf
leave
lock
sub
jge
int3
leave
or
mov
call
shl
(bad)
gs
and
jbe
or
push
fs
fst
jbe
dec
mov
adc
test
xlat
outs
iret
popa
(bad)
jg
push
fnstsw
jecxz
dec
mov
es
mov
movups
in
mov
icebp
pavgb
or
in
scas
(bad)
mov
sahf
pusha
out
stc
lds
add
in
ins
and
push
int
or
lahf
out
je
add
mov
pop
bound
jo
shr
push
loope
sbb
test
mov
(bad)
mov
repz
shl
call
cdq
xchg
dec
sbb
out
fsave
push
push
adc
test
and
pushf
into
or
adc
or
mov
sub
cmp
jmp
and
xchg
add
(bad)
aaa
test
jle
dec
retf
lods
syscall
scas
fucom
mov
push
ror
(bad)
rcr
dec
push
push
mov
pop
inc
jbe
call
aas
mov
mov
ja
dec
sbb
sbb
int3
push
or
addr16
jb
push
jno
js
inc
pop
mov
lds
lds
mov
or
call
mov
cmps
add
push
stos
jnp
and
lods
mov
fdivr
dec
and
pop
fisttp
popa
enter
and
inc
repz
fmul
sub
inc
push
xchg
sbb
jo
push
jno
ja
adc
fcmovnb
cmps
dec
sub
jmp
add
dec
xlat
fnstenv
xchg
jg
(bad)
pop
pop
sub
sar
ret
(bad)
adc
add
xchg
sbb
outs
fcom
clc
imul
push
shl
out
(bad)
push
mov
xor
movs
sar
fmul
(bad)
test
(bad)
lock
call
and
dec
test
jg
xlat
sahf
adc
push
xchg
popf
and
or
or
sti
mov
and
repnz
(bad)
repz
mov
mov
stos
shr
push
not
xor
add
mov
pop
jb
pop
mov
(bad)
mov
adc
push
and
pusha
xlat
(bad)
fldenv
add
test
pop
inc
dec
add
(bad)
fstp
ins
out
jb
test
xchg
pop
stos
dec
loop
lds
mov
or
fbld
or
add
stc
out
and
or
dec
enter
or
xchg
xchg
ds
pop
popf
push
(bad)
movs
imul
(bad)
movq
mov
adc
clc
aas
addr16
add
test
mov
imul
test
test
out
jmp
pop
push
and
mov
shl
stos
ret
sub
adc
inc
inc
mov
push
xlat
adc
sahf
out
sbb
call
xor
inc
mov
int3
jnp
sbb
pop
out
push
lods
(bad)
lods
popf
fadd
mov
push
int
(bad)
and
fisttp
xchg
sbb
data16
call
jp
push
loop
xchg
nop
mov
jno
jl
ss
mov
or
pop
ret
or
mov
cs
inc
jle
or
imul
xchg
push
loop
mov
div
test
leave
cld
arpl
lods
jne
shl
cmp
js
pop
ja
mov
jmp
stc
adc
enter
push
sar
es
lock
jg
jmp
scas
aaa
mov
fimul
and
sbb
dec
lea
lods
mov
mov
cmp
cmps
aad
inc
dec
(bad)
ret
shl
pop
loope
stos
das
jecxz
pushf
dec
inc
push
push
jmp
mov
in
dec
outs
repnz
loope
cdq
lahf
push
mov
loopne
add
out
mov
mov
cmp
jg
mov
dec
test
test
div
mul
mov
jnp
push
shr
pusha
lods
mov
mov
dec
push
arpl
and
push
(bad)
scas
adc
lock
iret
ins
mov
xor
jle
inc
and
or
mov
in
cwde
jns
push
in
inc
stc
jmp
(bad)
fsub
pop
mov
or
sbb
fs
lods
(bad)
test
rol
in
lahf
add
mov
inc
je
sbb
add
daa
mov
call
lods
ret
cmp
mov
call
push
cmp
add
and
aaa
fidivr
shl
xchg
clc
inc
not
aad
xchg
xor
retf
jno
pop
jns
outs
push
pop
mov
push
inc
in
xor
dec
push
add
or
xor
pop
ss
jo
repnz
pop
fs
rol
into
cld
rol
push
nop
stc
scas
stos
leave
pslld
(bad)
xor
daa
jnp
sub
fstp
push
xchg
mov
sub
hlt
jecxz
mov
cmp
aaa
adc
seto
cdq
sub
push
pop
sub
sub
leave
and
cmp
mov
retf
mov
shl
test
mov
adc
popa
shl
inc
leave
mov
int3
cld
mov
arpl
call
cmp
test
pop
(bad)
cmps
imul
loopne
lods
stc
push
pushf
call
mov
or
aaa
pop
fsubp
cld
cmps
mov
mov
pop
xchg
dec
mov
sahf
lods
pop
and
(bad)
or
dec
jbe
mov
mov
pop
outs
jnp
inc
test
xchg
or
ja
arpl
xor
jecxz
(bad)
pop
pop
jle
mov
(bad)
xor
popa
cli
add
mov
retf
loop
add
movs
imul
hlt
iret
cmp
mov
sub
lods
mov
in
sar
jl
repz
push
mov
add
hlt
xor
xchg
push
inc
sub
(bad)
xchg
test
jp
lods
mov
bound
push
cs
push
pop
xor
xchg
dec
les
test
push
lock
gs
sub
mov
cwde
or
int3
push
or
or
cli
and
je
add
imul
jle
inc
loopne
jno
mov
jge
lock
xchg
cwde
lea
imul
xchg
mov
mov
push
inc
icebp
lea
out
mov
enter
jecxz
push
out
or
dec
(bad)
mov
cmp
aas
jle
cmp
shr
ss
pop
je
sub
data16
dec
lods
into
xchg
sub
enter
fsub
stos
ficom
jecxz
xchg
cld
jno
jmp
dec
or
out
sub
mov
sub
mov
mov
cmp
jl
xor
inc
movs
lods
xor
sub
and
and
push
into
xor
jae
add
push
push
push
pop
dec
test
mov
push
cmp
jno
jmp
sbb
add
ficomp
pop
jno
test
lock
xor
les
rcl
outs
stos
sti
jb
cwde
jbe
xchg
je
xchg
movs
mov
test
add
ja
xor
fidiv
xchg
xor
jbe
lods
mov
fwait
shl
mov
cmps
pop
fdiv
int3
push
loop
fwait
pop
mov
push
(bad)
dec
or
add
inc
dec
cs
loop
mov
inc
pop
les
inc
sbb
xchg
(bad)
repnz
mov
sub
fiadd
out
xchg
inc
mov
fstp
fld
loop
mov
mov
mov
in
fs
ds
push
jp
out
mov
int3
ja
retf
adc
or
mov
push
jo
add
loop
xor
cmc
adc
push
shl
mov
push
ret
xchg
jns
mov
dec
in
mov
xor
add
or
cmp
mov
lods
mov
je
dec
pop
fucomp
mov
jl
xor
ins
fs
cwde
sub
jne
mov
mov
xor
xchg
mov
iret
mov
arpl
hlt
mov
cmps
sbb
clc
or
inc
sbb
mov
pop
mov
outs
cli
fnstcw
cli
or
ja
or
out
dec
pop
aas
inc
repz
sbb
mov
adc
jnp
xchg
mov
inc
dec
push
sub
push
rcl
fld
stc
int
in
ja
jb
(bad)
jg
dec
mov
lods
sti
mov
in
mov
push
hlt
dec
jge
and
loopne
sub
ror
ins
ss
outs
jle
mov
lahf
test
jns
mov
sub
hlt
sbb
mov
inc
add
xchg
(bad)
adc
inc
shl
test
xor
loopne
sbb
leave
sar
push
int3
dec
add
sbb
int3
add
inc
sbb
adc
mov
inc
out
mov
adc
rcl
xor
pop
inc
and
rcr
cwde
cld
loop
xchg
leave
dec
pop
jge
xor
xlat
sbb
outs
aas
repnz
adc
and
fsub
dec
cmp
sub
sbb
xchg
bound
pop
(bad)
dec
push
lds
aaa
xchg
cmps
aam
mov
icebp
aaa
(bad)
stc
lahf
call
xor
pop
(bad)
(bad)
mov
push
mov
into
add
jecxz
add
loopne
mov
add
je
loop
(bad)
fst
cli
shl
and
movs
sbb
xchg
sub
test
push
mov
ins
pop
imul
mov
push
(bad)
jmp
xor
test
aad
inc
imul
cmps
clc
pop
mov
push
lock
pushf
test
test
out
mov
daa
dec
mov
jb
pushf
mov
js
fwait
leave
lock
sahf
xchg
retf
loopne
fnsave
jp
mov
cmp
mov
pop
in
aam
lar
dec
test
pop
das
nop
adc
repnz
inc
fistp
mov
jno
dec
das
cmp
inc
mov
lods
fcompp
mov
adc
mov
pop
in
or
(bad)
mov
xor
xchg
jl
ret
pop
mov
(bad)
sbb
jo
xor
push
clc
mov
shl
out
or
inc
stc
shl
sbb
sub
jle
jp
xlat
push
mov
or
shr
mov
ss
ficom
xor
aas
jnp
mov
mov
aas
cdq
shl
sbb
stos
sub
pop
(bad)
xchg
xor
movs
xchg
stos
test
inc
mov
ficom
das
(bad)
and
jge
fisubr
jno
pop
cdq
outs
and
(bad)
jae
xor
jmp
jno
dec
adc
sbb
push
daa
sub
sbb
fstp
fisubr
lds
mov
mov
mov
push
mov
jo
out
lahf
outs
fsubr
retf
pusha
add
repz
jmp
dec
pop
repnz
loope
fs
push
adc
cmp
sbb
sbb
aas
call
(bad)
out
mov
dec
push
fcom
push
icebp
rcr
shl
fcomp
in
xchg
xlat
pop
mov
xchg
enter
sub
mov
mov
(bad)
stos
out
jge
mov
dec
add
mov
ror
xlat
xor
fmulp
stos
enter
fs
xchg
xor
jno
dec
mov
int
mov
je
or
xlat
mov
cmps
jnp
xchg
push
push
out
and
cmp
mov
adc
pushf
mov
xor
push
aas
push
test
sbb
pop
xchg
ret
jl
xchg
adc
cdq
jl
cmp
call
stos
sub
mov
sbb
les
loopne
je
and
test
and
das
pop
das
dec
out
add
sbb
test
psubd
or
cld
mov
sub
xchg
icebp
jns
xor
nop
cmps
jae
xlat
ret
cmps
pusha
(bad)
jae
dec
cmp
xor
lods
cmps
and
push
add
mov
mov
add
in
jbe
retf
jae
fsubrp
sar
retf
out
push
jl
push
inc
add
and
dec
fwait
scas
add
imul
and
cs
outs
dec
iret
add
fsub
inc
sub
and
out
test
add
ret
mov
aam
sbb
fadd
mov
mov
mov
adc
cmp
xchg
in
scas
mov
add
jne
adc
push
jmp
rol
ret
test
movs
outs
xor
xlat
jns
(bad)
fld
mov
jmp
inc
adc
jge
or
(bad)
loope
adc
into
dec
fs
test
push
retf
mov
out
jnp
outs
cmp
fwait
push
inc
jmp
cmp
(bad)
inc
mov
jp
jl
in
adc
push
test
push
cmc
push
jnp
cmp
arpl
add
(bad)
jno
in
call
dec
fucomp
stos
rcl
jnp
cmps
jns
dec
mov
push
aad
or
and
popa
push
mov
mov
pop
inc
mov
lahf
lods
jnp
bound
inc
mov
out
mov
addr16
movs
sub
fwait
stos
cmp
cmps
fstp
jecxz
leave
cmp
sub
adc
or
pop
aaa
inc
mov
enter
jecxz
retf
cli
(bad)
(bad)
stos
ss
push
xchg
mov
mov
mov
iret
out
sti
pop
mov
pop
push
xchg
mov
shl
pop
xor
lods
test
xchg
sub
loop
inc
sub
jmp
sub
in
push
pop
into
inc
mov
outs
ja
mov
fst
fxrstor
push
iret
fprem
(bad)
in
or
movs
cmc
and
jo
test
cdq
dec
lea
or
test
(bad)
or
es
adc
stos
test
bound
call
inc
fsubr
mov
scas
fistp
push
test
popf
rcr
jo
mov
push
push
jle
pop
pop
jmp
xbegin
mov
mov
jns
dec
mov
adc
div
cwde
fidivr
popa
push
sub
cmp
mov
sbb
xor
outs
pop
mov
mov
les
mov
icebp
push
mov
adc
aas
cmp
ins
sbb
stos
inc
test
cmp
cmp
sbb
clc
fsub
cwde
stos
sbb
fadd
xchg
mov
rol
inc
xchg
(bad)
cmc
movs
cmp
inc
in
les
push
jecxz
dec
in
gs
stc
stos
sub
lahf
jne
ins
push
pushf
ins
xchg
push
inc
lock
pop
mov
jo
add
test
mov
push
cld
xor
movs
push
push
imul
mov
loop
mov
ror
pop
or
cwde
mov
fcmove
cdq
jmp
jge
mov
cld
hlt
cmp
fistp
test
shl
mov
std
int
lock
repnz
imul
inc
mov
retf
mov
bound
fs
xchg
test
jmp
push
jl
out
xchg
or
gs
in
fisubr
cmp
push
ins
stos
mov
loop
xor
in
popf
call
ins
jmp
sti
cld
inc
fadd
repnz
cld
les
sbb
pop
mov
jl
jnp
xchg
adc
fld
mov
push
add
outs
pusha
pop
push
in
mov
pop
(bad)
in
cmp
cmp
test
sub
dec
gs
fld
iret
push
cmc
xorps
and
ja
push
stos
add
rcl
in
adc
daa
mov
cmp
fistp
pop
inc
fcomp
dec
bound
mov
dec
enter
sti
mov
popa
jb
shl
mov
js
lock
xor
add
loope
mov
dec
xchg
ins
fucomp
add
sbb
arpl
mov
mov
pop
xchg
cmp
loopne
xor
sub
test
jg
or
jp
outs
mov
movs
daa
jmp
ins
int3
cmp
pop
ror
repnz
xchg
inc
push
pushf
retf
popa
or
leave
mov
adc
pop
scas
jbe
pop
cld
js
inc
pop
sub
jp
cwde
shr
shr
addr16
stos
adc
test
mov
popa
jecxz
mov
nop
cld
xchg
pop
sub
or
sbb
sbb
cmp
repz
(bad)
sub
sub
outs
jmp
dec
sub
(bad)
xor
push
rcr
xor
pop
xchg
std
xor
jno
mov
inc
mov
mov
pop
jg
sbb
fdiv
sub
cmp
mov
dec
sub
bound
jns
stc
shl
cmp
addr16
and
and
pushf
lods
and
sbb
ret
movs
loope
dec
jp
fisttp
mov
fmul
pop
mov
fnsave
cld
jne
fst
cdq
loop
dec
mov
dec
shl
(bad)
in
sbb
retf
fs
(bad)
fdiv
and
inc
push
sti
scas
mov
pop
sub
js
outs
out
int3
jnp
mov
aaa
sub
mov
(bad)
clc
inc
xchg
lods
retf
js
imul
(bad)
xor
mov
lds
das
adc
mov
sti
out
bnd
adc
cmp
xor
fistp
test
jp
add
inc
fidiv
xchg
mov
pop
add
andps
(bad)
pusha
and
mov
fcomp
lods
call
pusha
sbb
mov
and
xchg
xor
retf
mov
out
or
jmp
lahf
arpl
and
fstp
shr
dec
pop
movs
and
and
and
repnz
cmp
pusha
(bad)
ins
rcl
ss
mov
out
pusha
into
movs
cmp
xchg
mov
mov
inc
std
cmc
in
inc
in
cmp
jns
rol
scas
add
pop
icebp
pop
cwde
cmc
hlt
ds
or
mov
repz
es
or
push
pop
mov
add
sub
ror
in
xchg
dec
gs
iret
xlat
les
int
hlt
(bad)
xor
mov
mov
sar
enter
mov
ja
jo
cmp
aam
imul
imul
into
(bad)
aam
in
jg
push
aaa
lods
mov
sub
mov
movs
mov
movs
stc
shl
arpl
sbb
dec
mov
xor
leave
sub
retf
sahf
jno
xor
add
cmp
cmps
xchg
lea
ins
(bad)
mul
adc
mov
mov
or
adc
mov
jp
js
lods
es
xchg
mov
das
pusha
outs
and
retf
and
imul
mov
sbb
sub
jle
cmps
ins
xchg
in
repnz
mov
xor
aas
lea
inc
sbb
nop
or
(bad)
enter
mov
dec
inc
rol
xor
push
sbb
and
xchg
cld
test
and
xchg
sbb
stos
or
jnp
cmp
fcom
push
arpl
fnop
(bad)
and
mov
cwde
mov
in
aam
daa
stos
lahf
xlat
push
mov
dec
jmp
mov
test
push
jb
js
enter
sbb
inc
inc
sbb
call
xchg
repnz
adc
ret
dec
(bad)
pop
std
inc
mov
xlat
jg
mov
pusha
(bad)
out
repz
aam
jmp
cmp
pop
pop
rcl
sbb
test
test
pop
mov
mov
shl
or
test
sti
pop
imul
ret
push
pop
stc
dec
push
mov
mov
xor
movs
and
in
test
les
stos
aam
out
ins
arpl
xchg
xchg
push
out
push
je
retf
xor
mov
scas
mov
jae
xlat
push
fisttp
out
pop
adc
(bad)
xor
adc
sbb
out
imul
sbb
test
shr
das
scas
or
shl
jmp
rcr
call
and
sub
fadd
jnp
and
or
pop
mov
dec
xchg
push
and
or
mov
nop
pop
sbb
lea
lahf
loope
push
aam
pop
jns
mov
xor
sar
in
lods
lods
(bad)
jae
enter
jmp
ss
push
pop
bound
out
sub
fs
pop
nop
pop
mov
mov
inc
in
loop
clc
inc
dec
pusha
(bad)
fwait
xor
jp
jae
xchg
mov
fnstenv
arpl
push
mov
pop
mul
test
pop
mov
sahf
inc
scas
dec
adc
lds
xchg
ds
pop
pop
call
rcl
lds
push
pop
mov
test
out
(bad)
jo
(bad)
jns
stc
xor
addr16
ja
fisubr
mov
cmps
xor
cmps
or
jle
dec
push
mov
repnz
or
or
es
jmp
pop
mov
dec
out
pop
daa
xlat
sar
mov
or
popa
(bad)
pop
fstp
push
add
or
cwde
sub
test
and
jp
retf
fcmovb
dec
je
(bad)
into
mov
setbe
push
dec
mov
in
loopne
enter
mov
cld
push
scas
ja
jp
xor
retf
push
xor
sbb
rol
or
hlt
test
les
push
or
mov
outs
pop
movs
cmp
test
xor
(bad)
imul
jmp
adc
mov
retf
stos
xlat
dec
pop
sbb
xor
jbe
pop
cmps
inc
add
inc
xor
push
pushf
jmp
push
lahf
pop
add
nop
or
mov
pause
jne
stos
in
mov
xor
std
rcr
scas
mov
enter
fist
xchg
cs
(bad)
cld
lock
push
lds
fst
mov
bound
mov
adc
push
movs
pop
aaa
das
je
shr
dec
pop
pop
cmp
and
or
or
add
js
jmp
jg
jge
outs
(bad)
pop
or
adc
or
adc
cld
inc
movs
lds
call
sbb
ret
cmp
mov
sbb
sbb
mov
push
or
jg
or
jmp
xchg
jmp
cmps
test
xor
inc
inc
jns
fcomp
std
mov
retf
dec
pusha
gs
sar
test
lahf
jns
imul
jno
gs
sub
test
mov
loopne
sbb
ds
inc
jb
mov
dec
xchg
das
pop
jecxz
inc
retf
push
sub
add
inc
arpl
outs
nop
push
mov
dec
fiadd
and
ins
(bad)
ss
pop
xor
out
not
fist
push
mov
xchg
dec
inc
dec
in
mov
aaa
jp
sti
inc
dec
mov
or
fnstenv
xchg
in
pop
cdq
in
cmp
fst
mov
mov
jmp
dec
mov
jg
or
mov
push
and
mov
shl
push
enter
outs
add
pop
test
dec
imul
mov
es
xor
push
es
xchg
sub
fcmove
pop
test
hlt
js
aad
stos
and
xchg
clc
jbe
out
sub
das
sbb
xchg
imul
inc
jge
js
push
push
aas
pushf
mov
xor
enter
pop
call
xchg
mov
mov
mov
adc
pop
inc
mov
sbb
movs
gs
bnd
push
shl
push
adc
(bad)
adc
popa
and
pop
mov
daa
sbb
stc
push
jnp
pop
pop
enter
pusha
and
jne
les
in
jo
ret
mov
ret
pop
cmp
mov
lock
pop
(bad)
jnp
int3
sub
imul
jmp
stos
imul
jne
inc
out
shl
fisttp
mov
mov
arpl
mov
(bad)
push
adc
loope
sub
ss
retf
scas
or
test
mov
mov
ret
rcr
cwde
cwde
mov
jbe
repz
sub
fbstp
add
cdq
fbld
cmp
mov
adc
jb
aad
lds
jecxz
outs
dec
pushf
mov
jo
xor
jmp
(bad)
jle
retf
aam
ja
js
add
nop
gs
pop
mov
shl
jecxz
pushf
mov
pop
js
test
mov
and
aad
cwde
loop
dec
push
stos
leave
into
adc
addr16
out
jl
shr
(bad)
dec
imul
jb
loope
dec
test
js
adc
out
push
dec
xchg
shr
xchg
test
call
(bad)
jecxz
xchg
enter
stc
mov
xor
xor
pop
or
std
out
or
xor
mov
fmul
inc
fcmovu
stos
and
or
pop
test
dec
xchg
mov
popa
fldcw
jge
scas
jmp
xor
cmp
in
xchg
inc
pop
xchg
xchg
xor
loope
imul
pop
pop
jne
pop
dec
fwait
lahf
arpl
ja
mul
sub
(bad)
scas
shl
mov
xchg
dec
jmp
cs
mov
xchg
and
test
sub
cs
mov
pusha
inc
fs
adc
out
mov
loop
mov
mov
jno
xchg
or
mov
jnp
lahf
ja
movs
test
ret
xor
xchg
sbb
xchg
jb
cli
cmc
stos
dec
(bad)
dec
sub
sbb
push
pop
cmp
scas
es
ja
pop
daa
pop
sbb
sub
pusha
xchg
cmp
inc
mov
pop
sbb
out
loopne
mov
cmp
pop
xchg
dec
add
xchg
xchg
mov
pop
mov
sti
fbstp
inc
push
dec
gs
cmp
sahf
mov
jbe
pop
movs
jge
stc
stos
ror
push
jle
mov
test
out
retf
fadd
push
and
cmp
rol
out
push
movs
rcr
enter
or
mov
add
push
and
sahf
xchg
repz
or
cmp
dec
sbb
bound
push
sub
(bad)
push
pop
xor
dec
mov
fs
dec
cwde
pushf
jg
and
or
pop
lods
js
jno
repz
sbb
push
pop
pop
mov
or
daa
je
add
into
sub
sbb
sar
xor
(bad)
pop
pop
scas
popa
xor
and
into
push
sbb
lds
popa
in
add
popa
les
jl
jbe
add
cmp
ss
mov
imul
dec
mov
in
and
xchg
sar
or
push
rcr
xor
scas
in
cmp
and
cmc
inc
mov
xchg
cmp
inc
les
sbb
dec
and
mov
icebp
in
xchg
cmc
cdq
(bad)
inc
repz
fisttp
mov
xchg
jne
pop
scas
lahf
jg
cmp
mov
enter
data16
ins
cmp
add
(bad)
adc
(bad)
out
stc
hlt
jbe
in
js
sbb
mov
mov
rcl
and
mov
aad
cmc
fstp
pop
sbb
push
mov
jmp
ja
sbb
cld
lods
jecxz
fild
jge
push
or
jnp
sti
sahf
dec
push
pop
xor
mov
stc
fisttp
mov
xor
mov
jmp
out
jecxz
dec
jmp
pop
jb
sub
cld
adc
xor
jg
cmp
or
fild
jns
sbb
(bad)
and
fs
inc
rcr
test
iret
mov
push
punpckldq
int3
mov
mov
xor
icebp
cdq
retf
rol
daa
test
dec
xor
push
in
inc
scas
les
xor
pop
loope
sub
sub
cmp
dec
ss
sub
gs
ja
leave
xor
push
dec
div
cmps
mov
fcmovnbe
xor
and
mov
aam
mov
jb
(bad)
aaa
xchg
in
inc
push
adc
push
xor
lea
push
fst
inc
cmps
mov
lahf
or
pushf
std
es
and
stos
dec
lock
stc
hlt
and
rol
lods
mov
repnz
cmc
mov
inc
mov
ret
aad
cmp
pop
test
in
pop
arpl
ins
into
sti
mov
xchg
jl
cmps
push
xchg
jne
es
frstor
cdq
movs
pop
pop
mov
jle
aas
cmp
sti
add
icebp
sbb
iret
sbb
mov
adc
inc
lds
mov
dec
sbb
add
mov
dec
mov
mov
mov
pop
shl
lods
call
fucomip
fiadd
add
aaa
push
test
repnz
and
pop
dec
cdq
adc
mov
mov
(bad)
xor
add
int
mov
fcmovb
xchg
xor
stos
mov
and
test
xor
sbb
mov
jp
and
test
push
sub
enter
in
mov
ret
push
xlat
nop
add
xor
imul
xchg
cs
mov
xor
(bad)
in
inc
mov
mov
mov
movs
cmps
add
pop
push
addr16
es
fsub
jg
cmp
mov
sar
scas
jmp
adc
jmp
test
adc
ret
(bad)
std
outs
xor
add
lods
pop
dec
jb
movs
test
stos
xor
ret
js
push
jb
hlt
sub
es
sub
push
test
xchg
shl
inc
mov
imul
or
dec
pop
bsf
lods
inc
fisubr
pop
scas
push
es
outs
iret
jge
xor
inc
(bad)
bound
fadd
inc
lods
mov
inc
cmp
cmp
hlt
inc
mov
ja
pop
in
mov
jae
shl
pop
arpl
mov
cmp
sbb
adc
lods
in
icebp
fs
mov
ja
dec
cmp
jne
adc
cmc
fist
and
lods
cld
cmps
push
movs
dec
mov
dec
jb
xlat
or
add
aad
data16
(bad)
inc
ret
cdq
adc
lds
mov
shr
mov
inc
into
adc
fxch
test
jb
enter
push
outs
sti
ror
xchg
push
jle
aaa
int
sbb
repnz
fstp
(bad)
jne
xor
sahf
xor
adc
xor
pop
xor
mov
xchg
cmp
es
les
lods
pop
(bad)
push
popa
scas
stc
(bad)
retf
or
inc
jae
sbb
inc
js
sbb
aaa
adc
call
jmp
les
out
ret
test
rcl
cmp
dec
aaa
fwait
xor
xchg
jmp
inc
xor
fadd
fist
add
pop
ret
inc
pop
repz
mov
dec
jmp
mov
call
jo
push
jecxz
dec
jb
sahf
loope
cmps
jo
sub
mov
pop
loop
mov
pop
fs
icebp
test
pop
xchg
lahf
sub
sbb
lock
cmp
aaa
in
ja
(bad)
sub
les
or
mov
sar
mov
push
xchg
mov
adc
xchg
ja
ss
int3
(bad)
test
or
stos
and
retf
or
sub
cs
std
mov
es
or
lods
ret
pop
in
dec
sbb
mov
aad
fnstcw
and
imul
daa
jmp
push
rcl
lea
fwait
push
mov
cld
mov
sbb
xchg
dec
mov
adc
nop
out
iret
outs
lds
loop
xor
mov
push
inc
not
fld
sub
je
mov
mov
mov
add
test
(bad)
popa
ss
mov
xor
sbb
les
int
push
hlt
sub
lods
imul
jno
cs
xchg
xchg
push
js
inc
dec
push
jle
div
out
and
sar
mov
push
add
mov
mov
cdq
in
mov
stos
pop
push
(bad)
lds
loopne
cmp
push
lock
mov
(bad)
rcr
jb
xor
(bad)
mov
ins
iret
mov
cmps
jmp
and
icebp
in
xchg
cs
push
retf
xchg
bound
cdq
test
xor
add
jb
mov
and
sub
fsub
icebp
fsub
sar
xchg
xchg
dec
or
clc
lahf
out
leave
pop
dec
cmp
ins
sbb
mov
adc
add
sbb
mov
jne
jns
cmps
mov
sbb
pop
sub
hlt
cwde
arpl
js
ja
push
mov
adc
pcmpeqd
lahf
addr16
dec
sub
push
cmc
inc
xchg
push
sbb
dec
cmps
aas
rcr
idiv
popf
in
repz
mov
(bad)
xlat
add
in
aaa
rcr
mov
inc
push
mov
xor
in
jo
sbb
cmp
jle
add
cli
cmps
adc
ret
xor
fnstcw
mov
adc
(bad)
cwde
sub
jle
mov
push
mov
hlt
je
sbb
mov
mov
test
mov
mov
fcom
ret
jmp
mov
mov
cmp
or
hlt
hlt
das
mov
in
mov
stos
inc
xchg
sub
in
or
add
mov
and
cwde
mov
fisttp
shl
out
shl
call
sbb
add
pusha
push
jae
loope
cmp
xchg
mov
xor
jae
inc
stos
jmp
push
push
inc
xor
fild
cmp
es
mov
adc
cwde
or
out
cdq
push
adc
cmp
mov
dec
leave
adc
jge
jmp
adc
mov
out
mov
mov
jge
ins
sub
xlat
add
sub
dec
add
sahf
mov
bound
mov
clc
lahf
push
(bad)
sbb
mov
cwde
add
rcl
pop
stos
mov
cmp
xor
mov
or
mov
cmp
dec
push
loope
pushf
and
jecxz
cmp
movs
mov
add
pop
cld
test
sbb
push
les
jae
sbb
jb
in
push
out
in
adc
adc
jb
bound
std
je
xchg
ja
pop
mov
xor
in
jge
scas
lods
adc
pop
or
add
ror
aad
fisttp
add
mov
(bad)
cmp
jle
loop
jl
fs
xchg
rcr
mov
adc
dec
sti
mov
shr
jp
pusha
mov
xlat
lock
mov
xchg
push
loope
aaa
idiv
int
shl
je
mov
lods
ficomp
lods
inc
xchg
leave
outs
pop
or
aas
cwde
cmp
xchg
fwait
jno
jl
fnstcw
shl
test
xchg
inc
mov
rcl
xor
sub
or
sub
call
les
push
push
mov
dec
iret
repnz
xor
stos
push
jmp
ficomp
adc
mov
sahf
inc
ss
sbb
dec
xchg
cmp
adc
out
scas
mov
pop
cld
cld
loop
inc
mov
cmp
xchg
fld
ss
rcr
pop
aad
push
cmps
cmp
ret
jecxz
jmp
push
fst
imul
in
addr16
mov
imul
out
cli
pusha
cmps
pop
(bad)
pop
retf
and
mov
fwait
lock
and
dec
jae
sbb
push
push
or
lock
test
xchg
lods
cwde
test
arpl
mov
sahf
mov
fisttp
inc
push
in
add
mov
xchg
xor
mov
aas
fld
fisubr
and
lahf
xchg
aam
mov
jmp
clc
(bad)
fisubr
inc
cwde
pop
dec
mov
inc
lds
sbb
xlat
xchg
and
in
and
and
cmp
test
mov
int3
test
mov
cmps
mov
movs
xor
sahf
aam
cmp
fs
test
int
jno
les
test
add
pop
fdiv
adc
test
mov
jecxz
test
sti
mov
mov
cmp
fsubr
enter
lahf
dec
js
lock
fucomip
jo
in
jmp
les
fimul
sub
and
mov
sub
inc
pop
mov
cmps
jl
test
cmp
push
cmp
pop
dec
popa
or
dec
xchg
jmp
cmps
iret
arpl
stos
mov
jae
fs
mov
jmp
dec
xor
inc
mov
in
dec
mov
push
push
lods
lds
sub
inc
pop
jno
in
out
mov
mov
in
(bad)
retf
out
push
add
sub
inc
loop
icebp
lea
sbb
pop
in
xchg
inc
lock
mov
lds
lods
pop
mov
int
fld1
and
aam
cmp
enter
jo
add
xor
mov
shl
jp
lds
xchg
or
in
or
and
es
(bad)
mov
out
add
sar
jne
cli
mov
mov
nop
outs
bt
pusha
mov
sbb
cmp
scas
add
and
add
inc
pop
fst
xchg
adc
mov
jl
cwde
ret
add
enter
add
push
xchg
daa
js
into
arpl
fs
mov
cdq
add
shl
xchg
loope
inc
movs
add
mov
sub
push
adc
push
mov
sbb
imul
retf
cmp
sbb
xor
icebp
sub
push
retf
(bad)
ficomp
jnp
movs
dec
ret
xchg
data16
stos
add
in
pop
arpl
sub
(bad)
jne
stos
out
jle
test
cwde
jl
push
sbb
movs
xchg
or
js
pusha
xchg
xchg
add
test
hlt
jge
out
add
push
sbb
js
mov
jl
data16
sub
out
add
(bad)
(bad)
inc
push
bound
mov
and
je
rcr
cli
push
push
(bad)
sub
xchg
cmps
inc
pop
add
mov
xchg
int
jmp
popf
and
inc
dec
sub
pop
or
mov
fcomp
add
mov
in
outs
loop
xchg
lock
add
sbb
test
mov
mov
xor
jp
sub
les
jns
xchg
jne
outs
cmps
mov
xor
test
xor
xchg
xchg
leave
stos
test
push
xchg
push
daa
outs
adc
jg
dec
(bad)
jecxz
stos
in
jne
cs
sbb
ror
add
mov
sub
psllw
lahf
cmps
lods
pop
sub
mov
lds
inc
int3
iret
cmps
bound
pop
push
push
or
adc
movs
sub
sbb
into
out
std
mov
xchg
inc
or
jbe
cwde
push
mov
(bad)
cld
and
or
inc
dec
out
mov
xchg
xchg
cs
add
adc
sbb
xor
jno
test
xor
and
xchg
mov
push
in
in
push
xor
ins
xor
inc
cmp
call
xchg
and
lods
out
mov
fbstp
shl
mov
push
add
out
or
add
and
push
(bad)
xchg
repnz
and
sbb
xor
shr
adc
aaa
cld
mov
inc
dec
fsub
push
cmp
or
mov
cmp
adc
fldlg2
sbb
fistp
cdq
mov
fiadd
sar
out
outs
mov
test
imul
outs
jnp
(bad)
test
and
in
lods
cmp
out
repz
sbb
cmps
or
mov
cmp
pop
pop
scas
test
frstor
xor
call
out
cmp
retf
jecxz
fisttp
pop
mov
das
jecxz
test
and
aad
idiv
add
jge
mov
cmp
sub
xchg
or
cmp
icebp
popa
cmp
add
ja
out
bound
mov
nop
scas
mov
xchg
ss
adc
std
(bad)
jno
push
js
fsub
shr
cdq
adc
cwde
and
add
xlat
sbb
jge
mov
push
or
mov
pop
adc
cwde
cmp
js
mov
and
or
std
jecxz
ins
int
jnp
in
mov
or
mov
add
jno
lods
cmp
dec
pop
pop
jbe
test
xlat
and
ja
gs
sub
(bad)
dec
jmp
arpl
sti
mov
jmp
scas
pop
push
ja
jnp
pop
js
push
leave
pop
stos
xchg
dec
loope
push
rcr
ret
push
stos
push
jno
jl
fisubr
sbb
mov
retf
nop
xlat
cld
or
popa
das
or
xor
mov
xor
mov
mov
cld
inc
sub
ins
pop
sub
je
imul
xor
adc
cld
(bad)
mov
fsub
arpl
rol
popa
push
inc
les
out
je
jle
inc
mov
mov
push
inc
jl
and
push
aam
jmp
xchg
stc
inc
aas
mov
lahf
rol
dec
mov
xchg
bound
xor
fild
les
cmp
lds
call
lods
std
and
or
call
imul
cmps
mov
or
loope
pop
add
xor
sub
push
not
jge
hlt
adc
jne
test
shl
jmp
nop
(bad)
jmp
inc
ja
into
push
mov
mov
inc
mov
and
fstp
adc
cmps
pop
mov
scas
shl
pusha
lock
pop
cmps
push
mov
inc
sti
mov
mov
adc
shr
sti
movs
xor
es
ds
data16
jo
mov
aad
call
dec
cdq
or
retf
dec
mov
enter
mov
imul
xchg
push
dec
lods
jne
xor
cdq
(bad)
stc
sbb
add
push
pop
and
pop
push
iret
push
dec
ss
movs
fsub
je
es
push
shl
out
sar
fucomp
adc
add
xor
jns
xchg
adc
jno
and
out
repnz
mov
mov
enter
cdq
lahf
xchg
adc
sub
(bad)
add
cmp
jle
std
rcr
xor
into
ficom
enter
dec
mov
lods
pop
and
pop
test
sbb
cld
mov
sbb
push
push
scas
fcomp
scas
jge
data16
retf
fcomp
repz
out
mov
jl
mov
mov
stos
imul
loopne
sub
dec
enter
and
sub
stos
rcr
cmp
fwait
push
add
fdivr
dec
cmp
push
out
mov
stos
cmp
mov
iret
lahf
mov
xor
jmp
mov
sub
fdiv
add
inc
ins
retf
or
pop
out
jo
or
sub
cmps
mov
adc
mov
ins
repnz
and
icebp
in
add
out
mov
test
cmc
ret
xor
aam
jo
add
mov
mov
push
push
aam
dec
jo
ret
inc
cdq
retf
xor
icebp
or
cmp
or
pop
mov
shr
test
fstp
and
adc
push
sub
dec
dec
jl
or
ins
scas
xor
adc
scas
scas
scas
push
adc
out
leave
jge
pop
int3
in
sub
das
and
arpl
dec
mov
popa
mov
inc
rcr
scas
mov
shl
xor
cmps
xor
pop
movs
mov
shl
ret
lods
xor
aad
xlat
sub
out
and
sbb
pop
sub
push
mov
cli
mov
adc
mov
xor
and
xor
test
aad
mov
jle
xchg
cli
xor
cwde
(bad)
fcmove
mov
loop
jp
add
pop
sbb
jmp
mov
pop
mov
adc
add
dec
sbb
mov
faddp
dec
inc
cmp
pushf
(bad)
dec
pop
mov
or
sub
in
sbb
pop
mov
add
mov
in
sub
dec
mov
fsub
mov
sbb
(bad)
mov
rcr
shr
sbb
imul
leave
push
xor
sub
(bad)
fs
out
arpl
movs
sbb
pop
add
cs
sbb
dec
outs
sub
add
fistp
and
ret
shl
or
add
push
sar
sbb
dec
inc
ret
push
fsubr
pop
out
jmp
and
js
data16
or
xor
stc
adc
mov
pop
test
dec
in
sti
gs
push
fwait
adc
or
fisttp
movs
jbe
rol
clc
fld
sar
jmp
aaa
jnp
push
call
cs
dec
test
std
daa
arpl
les
stos
dec
lods
mov
push
sub
outs
div
mov
lds
pop
out
pop
xchg
adc
iret
gs
and
cmc
and
clc
repnz
shr
out
out
test
cmp
cdq
(bad)
jmp
dec
movs
stc
add
mov
out
xchg
sbb
adc
mov
cld
sub
jge
int3
jne
sbb
push
push
cmp
adc
sti
mov
jo
cmps
das
out
mov
jg
in
bound
mov
pop
mov
cmp
and
sar
(bad)
pusha
fdivr
lock
dec
cli
sub
(bad)
ret
push
mov
stos
mov
sbb
and
repnz
push
imul
dec
mov
add
mov
sbb
and
data16
dec
fcomp
cmps
or
xor
hlt
or
cmp
std
nop
push
stos
es
aaa
fs
test
push
add
dec
adc
cli
retf
cmc
xchg
xor
sbb
outs
out
jp
or
inc
test
sub
sub
pushf
call
xchg
push
mov
cmp
fwait
mov
fimul
mov
scas
stos
inc
test
xchg
sbb
add
sbb
inc
sub
gs
xor
mov
or
adc
jge
fwait
push
push
cld
in
mov
inc
inc
repnz
stc
mov
mov
mov
fwait
stos
scas
out
inc
xor
mov
cmp
(bad)
jnp
enter
add
xor
mov
adc
add
xchg
pusha
retf
xchg
add
in
mov
jno
in
mov
cmp
push
jle
js
xlat
jne
jns
mov
sar
xchg
adc
mov
sub
mov
dec
mov
jecxz
ins
pop
jmp
sbb
cli
dec
sbb
int3
jnp
sbb
push
or
jmp
mov
out
out
jle
pop
int3
lea
(bad)
popf
int
or
mov
test
in
xor
movs
test
sub
mov
cmc
jle
jbe
push
call
jns
loopne
pusha
add
out
or
jecxz
sub
xchg
jmp
loope
mov
sub
hlt
outs
inc
mov
lea
lods
movs
leave
sub
ss
(bad)
scas
(bad)
sbb
cmp
call
ss
sahf
es
push
jae
and
addr16
sbb
and
popf
hlt
cmp
shr
pinsrw
xchg
cmp
pop
das
mov
aaa
rcr
lods
sub
(bad)
out
and
jo
sahf
and
push
test
xor
ror
dec
mov
xor
push
imul
inc
pop
dec
loope
or
sub
lods
pop
aaa
neg
xor
sub
push
scas
in
mov
pushf
ja
add
fmul
xor
jno
push
mov
fdiv
dec
mov
mov
xor
or
pop
sub
rcr
push
or
in
push
(bad)
jmp
lock
test
popa
sbb
ja
pop
mov
sbb
mov
bound
fldenv
add
jle
inc
in
lahf
dec
jae
test
add
mov
in
pop
sahf
cmps
dec
fucom
hlt
retf
pusha
lahf
fs
js
push
jae
push
jae
and
dec
shl
inc
dec
leave
je
popa
ins
clc
test
mov
jne
pop
test
int3
cmp
sub
or
sub
fdiv
sahf
inc
and
fsub
psrlw
inc
inc
(bad)
outs
out
push
in
adc
ret
push
les
dec
mov
cmp
mov
stc
xchg
push
push
sbb
scas
push
mov
aad
repz
mov
push
sbb
ds
mov
retf
loopne
sub
xor
xor
fs
mov
out
(bad)
retf
daa
cs
je
mov
ja
bound
ja
data16
ror
xchg
in
adc
xor
mov
add
mov
ins
xor
xor
dec
rol
jg
add
inc
mov
push
daa
clc
push
xlat
(bad)
dec
popa
iret
sub
dec
add
fisubr
xor
cmp
jbe
or
lods
imul
mov
and
pop
test
xor
inc
shl
shr
pusha
cli
pop
fild
xchg
in
lahf
or
push
repnz
imul
or
cmps
xor
jns
jl
pop
iret
pop
fnsave
dec
xchg
xchg
loope
add
fadd
shl
stc
dec
xchg
cmps
pop
pop
cmps
scas
mov
es
push
mov
(bad)
mov
push
rcl
out
sbb
mov
jg
gs
test
and
daa
in
jge
pop
(bad)
mov
xchg
sub
and
cmc
and
pop
jns
inc
shr
pusha
sbb
add
xchg
outs
cli
movs
xlat
xor
ins
cs
mov
out
cli
(bad)
data16
shl
(bad)
ds
inc
stos
mov
jbe
(bad)
mov
cld
fistp
xor
add
fsub
rcl
fldlg2
xchg
je
jmp
and
jmp
and
ret
jmp
jg
inc
dec
sbb
retf
mov
jmp
retf
xor
dec
jg
bound
fs
jns
xchg
adc
fcomp
pop
gs
or
pushf
enter
cmp
out
ret
cld
push
mov
push
clc
xchg
dec
jnp
cmps
dec
mov
in
movs
pop
pop
sbb
cli
sbb
push
push
das
cmp
jnp
jns
(bad)
sub
mov
imul
gs
mov
pusha
inc
stos
mov
fnstenv
clc
imul
adc
xchg
pop
(bad)
mov
aas
and
or
outs
jmp
xchg
inc
and
push
inc
mov
mov
push
lock
cmc
jecxz
pop
jnp
fisttp
dec
add
jecxz
inc
cs
dec
push
adc
wrmsr
add
dec
sub
and
test
daa
mov
in
push
mov
mov
mov
ror
and
shl
mov
mov
jnp
sbb
inc
mov
cld
mov
sub
xor
xchg
fs
aad
ret
outs
mov
push
fstp
inc
popf
adc
shl
push
jns
scas
lods
ins
es
(bad)
and
mov
sbb
out
ins
push
inc
das
fist
stos
scas
stc
imul
or
mov
or
mov
rol
mov
call
xlat
std
in
(bad)
xor
cmp
or
pop
jo
jecxz
jg
ret
sbb
data16
lea
out
outs
xchg
pop
xchg
push
cmps
and
stc
cmp
fadd
pop
fadd
(bad)
mov
push
movs
push
scas
enter
retf
or
(bad)
lahf
addr16
(bad)
cwde
sti
xchg
and
stos
test
inc
sbb
mov
enter
adc
mov
dec
add
dec
aad
ret
sti
inc
mov
jnp
jge
or
pop
xchg
or
jb
push
pop
ret
es
push
dec
and
jne
add
jle
out
mov
mov
inc
sahf
dec
addr16
test
retf
sub
mov
lods
xor
sar
mov
dec
add
push
movs
xor
mov
fwait
data16
outs
mov
mov
or
in
enter
pop
mov
rol
xchg
imul
int3
jns
aad
add
inc
inc
retf
cmps
or
in
std
call
or
div
loop
mov
(bad)
adc
push
nop
pop
test
mov
ins
and
and
xor
enter
in
adc
mov
test
ins
repz
cdq
lock
add
xor
lods
cdq
aas
es
call
xchg
sub
cli
ficom
pop
cli
sub
add
cmp
popf
enter
loop
add
fist
hlt
dec
aam
mov
xchg
or
sti
dec
lds
sahf
dec
and
in
cld
retf
int
cmp
sbb
addr16
mov
or
(bad)
leave
mov
mov
or
sub
adc
imul
jb
sbb
dec
sti
repz
xchg
cmp
std
stos
clc
lods
lock
(bad)
dec
outs
jo
hlt
dec
loop
pop
mov
dec
mov
out
ror
and
sar
clc
test
ins
sub
shr
test
adc
add
push
je
fbld
stos
pusha
sbb
xchg
sbb
out
mov
mov
in
push
fsub
out
loop
test
push
out
int3
scas
das
push
xchg
sub
push
int
mov
dec
lock
stos
pop
call
ja
loopne
push
(bad)
sub
mov
inc
sar
lds
test
cmps
jnp
xchg
movs
sub
ds
movs
stos
dec
call
push
int
fdivr
(bad)
addr16
lock
mov
repnz
and
sub
mov
enter
push
frstor
int3
out
mov
bound
xchg
in
mov
fild
loop
jmp
pushf
outs
addr16
xchg
sbb
xlat
imul
xchg
scas
inc
mov
sar
jo
cli
clc
cwde
adc
pop
das
push
lods
lods
fnstcw
jno
push
push
mov
xchg
je
pop
mov
ret
pop
push
rcl
inc
data16
inc
fidiv
adc
mov
neg
mov
jns
pop
les
mov
jp
xor
push
outs
mov
adc
ja
icebp
scas
mov
bound
xor
inc
jmp
aam
mov
div
cmc
movs
in
test
mov
xor
mov
fdivp
xor
or
jnp
aas
sub
out
xchg
(bad)
push
cmp
lahf
aas
iret
(bad)
mov
push
(bad)
(bad)
icebp
jns
push
scas
leave
pop
cmp
jl
sbb
sbb
test
mov
fs
movs
(bad)
xor
sbb
test
adc
mov
call
mov
mov
xor
mov
sbb
out
nop
popa
ins
mov
dec
fmul
popa
fnstenv
mov
jne
and
outs
jmp
jp
xchg
adc
call
leave
fistp
sub
sub
jno
movs
push
dec
add
aam
or
sbb
push
adc
xchg
cs
push
fsub
loopne
test
scas
fstp
pop
dec
arpl
inc
push
retf
mov
mov
inc
push
ins
in
mov
adc
ret
xor
pop
adc
vpcmpgtb
out
test
dec
and
sbb
es
into
inc
fdivr
mov
shl
jo
cmp
pop
iret
xchg
aad
adc
inc
adc
jns
test
ins
cmp
imul
es
xor
test
add
add
scas
cld
cwde
push
sub
mov
cmps
sbb
dec
ins
mov
jmp
push
int3
das
mov
shr
in
dec
add
loopne
adc
inc
cli
out
call
sbb
fld
loopne
mov
sbb
sub
leave
or
adc
mov
movs
jmp
ss
cmps
mov
cmp
fadd
inc
cmps
int
sub
jns
push
sbb
pushf
mov
mov
inc
and
sub
imul
ret
stos
ja
xor
push
adc
inc
push
test
push
xor
adc
retf
loopne
test
popa
ins
mov
sbb
xor
push
cmp
retw
jmp
add
scas
shl
pop
aaa
xchg
mov
test
pop
out
loope
mov
inc
xchg
addr16
and
inc
cmp
xchg
pop
dec
adc
and
push
arpl
hlt
test
inc
out
add
and
test
pop
xor
sbb
scas
xor
and
push
mov
bound
ins
jmp
dec
mov
dec
jp
movs
call
aaa
mov
jbe
movs
xchg
into
adc
pop
add
dec
sub
add
mov
ss
mov
push
adc
clc
fs
ins
lahf
int
sbb
mov
or
or
xor
or
out
rol
pop
mov
aam
and
fisttp
cmp
movs
in
inc
fnstcw
xchg
jge
pop
inc
or
dec
(bad)
addr16
add
mov
push
pop
inc
loopne
xchg
jl
std
in
iret
mov
pop
xor
sub
fwait
leave
retf
loop
push
retf
push
out
sbb
fistp
gs
jae
cmp
fwait
or
xor
sbb
jne
inc
pop
sub
rcr
stos
inc
inc
push
mov
inc
push
setl
mov
mov
test
xor
adc
dec
inc
mov
mov
cdq
clc
cmps
mov
jne
(bad)
(bad)
data16
repz
hlt
outs
repz
pop
ds
cmc
test
and
mov
int
sub
daa
mov
push
int
pop
mov
repnz
stc
out
test
jae
fimul
xlat
(bad)
sbb
inc
jmp
xor
stos
je
sbb
mov
mov
mov
fisub
mul
jmp
fsub
(bad)
jae
mov
outs
jmp
inc
loopne
enter
fcmovnb
aas
bound
mov
fiadd
mov
xchg
mov
lahf
xor
cmp
fs
push
pusha
and
sbb
or
pop
adc
test
movs
lea
sub
gs
call
or
xchg
fs
sbb
sbb
test
out
jmp
cmp
pusha
lock
pop
test
fldcw
sbb
ds
movs
stos
fsubr
aas
adc
or
sbb
stos
test
popf
cmp
dec
inc
jnp
mov
jbe
lock
fwait
nop
retf
xor
and
xor
and
xor
cmps
jbe
xor
pop
dec
fbstp
inc
xchg
int
stos
fadd
xor
cli
fs
and
lods
dec
fmul
sub
pop
pop
div
daa
test
test
gs
mov
int
xlat
xchg
aaa
into
in
(bad)
test
jo
sbb
fdiv
mov
add
push
jmp
call
ja
fiadd
retf
mov
or
stos
pop
push
addr16
fbstp
adc
mov
push
ja
cmp
jae
dec
in
jl
in
(bad)
mov
fcom
test
xchg
mov
pop
sbb
addr16
es
lods
xchg
test
inc
ins
pop
and
inc
je
stos
pop
test
iret
cmps
out
jns
jecxz
add
shl
rcr
movs
mov
shl
(bad)
fsub
or
repz
adc
inc
inc
lea
adc
dec
mov
repnz
scas
lds
dec
fsubr
ss
jns
or
stos
cwde
adc
(bad)
imul
push
sbb
scas
and
dec
add
rcl
inc
lea
mov
retf
aad
push
lock
pop
enter
fdiv
ss
lods
shr
call
and
aad
sub
nop
(bad)
mov
fsub
mov
test
pop
in
sub
test
pop
jmp
inc
xchg
push
pusha
inc
push
jmp
int3
icebp
ret
shl
imul
or
shr
pop
inc
dec
mov
and
cmp
stc
clc
inc
int3
mov
inc
cli
xor
fidivr
mov
xchg
cmp
in
sbb
repnz
mov
bound
mov
or
adc
sbb
jb
test
call
test
jne
arpl
xor
mov
fs
add
sub
icebp
jg
xor
and
mov
jg
shl
div
shl
sbb
ss
lods
popa
cmp
shl
ret
jp
lea
rcr
mov
scas
out
jmp
cmps
pushf
sbb
mov
xchg
pusha
rol
dec
(bad)
dec
bound
cmp
adc
cmps
ins
(bad)
pop
scas
retf
clc
inc
push
je
cmp
aas
dec
inc
(bad)
sub
mov
out
clc
inc
cmp
jbe
mov
mov
push
add
pop
rcl
inc
cld
mov
outs
ja
leave
pop
cdq
nop
loopne
out
mov
outs
rol
out
loope
(bad)
dec
xor
cmp
ds
lahf
push
mov
xchg
add
cmp
push
ret
cwde
dec
mov
mov
pusha
sub
sbb
push
fs
in
mov
add
loop
push
push
mov
loope
mov
fwait
and
into
outs
scas
and
mov
dec
into
scas
gs
ds
dec
mov
sahf
pop
jmp
and
mov
cmps
les
push
jmp
test
push
jb
jns
adc
inc
and
push
add
xchg
mov
mov
jbe
xchg
mov
outs
fs
and
push
push
ret
and
and
push
sbb
outs
and
jmp
fild
stc
in
loopne
neg
mov
les
jl
push
xchg
lahf
push
icebp
enter
ret
cmps
sub
sbb
inc
xchg
jge
fucom
jbe
xor
int
loope
ss
mov
test
les
or
pop
leave
dec
sub
retf
add
pop
pop
fs
and
iret
xchg
bsf
out
fwait
sub
ja
rcl
lock
cdq
std
ins
stos
repnz
les
icebp
fld
pop
pop
je
push
lds
fcmove
lock
in
mov
in
and
ja
call
std
nop
ja
xchg
in
pop
pushf
xchg
cmp
jmp
outs
add
dec
ret
lahf
ins
push
sar
lds
stos
out
push
push
test
ins
or
je
in
daa
test
movs
enter
add
and
imul
inc
fdiv
sub
outs
sti
cs
pop
add
cmp
(bad)
mov
mov
jl
pop
ret
sub
add
fcomp
xor
pushf
sub
add
rol
test
test
sbb
xor
in
mov
sub
mov
push
sahf
(bad)
fsubr
rol
adc
xlat
into
(bad)
fs
push
mov
push
pop
lods
push
mov
jmp
pop
in
daa
arpl
mov
adc
rcl
sub
mov
sti
xor
sbb
cmps
xor
xor
xor
stc
popa
cmp
mov
jbe
mov
xlat
or
lahf
or
add
xchg
push
add
shr
inc
xor
inc
out
stos
out
mov
inc
inc
daa
lods
arpl
movs
fmul
int
addr16
lds
fstp
(bad)
outs
cmp
shl
xor
aas
lods
xchg
mov
(bad)
movs
fbld
aad
or
sub
std
mov
or
in
test
xchg
xor
xchg
xchg
sahf
pop
mov
fwait
push
iret
(bad)
bound
mov
push
aas
scas
icebp
sahf
outs
mov
and
xor
xor
fsubr
mov
ror
movs
(bad)
xor
aad
shl
mov
mov
test
jo
push
inc
icebp
es
xchg
in
mov
jno
or
retf
xor
cmps
int3
test
mov
xchg
scas
adc
add
jge
bound
dec
or
dec
imul
push
aad
aam
out
out
test
xor
out
out
cmp
int
outs
loop
lock
fisubr
pop
in
std
add
add
push
jp
loop
push
shl
jnp
mov
outs
stos
enter
bound
pop
or
mov
sub
push
loope
jne
lods
imul
or
cmp
pusha
outs
test
inc
je
jno
std
dec
call
lea
add
out
das
or
mov
je
xor
sti
sbb
sub
enter
sub
jbe
fwait
aas
call
aas
add
cmc
hlt
push
out
(bad)
dec
jnp
das
push
jne
loope
sub
cmps
jle
pushf
jg
mov
pop
cmp
sub
stc
mov
call
mov
ss
and
sbb
adc
in
jecxz
pop
inc
arpl
sbb
xchg
push
stc
into
cmovbe
xchg
and
movs
pop
push
push
popf
(bad)
jne
push
movs
test
push
into
mov
sbb
push
stc
push
es
mov
lahf
fnstcw
sub
sbb
inc
jno
repz
ins
data16
nop
stc
xor
sub
ss
hlt
std
fs
test
jecxz
adc
inc
or
pop
and
pusha
or
imul
add
and
xor
mov
push
leave
push
sub
add
or
mov
mov
ja
repnz
cmp
sub
scas
test
ins
mov
xchg
xchg
fcmove
aad
mov
mov
xlat
sbb
loop
add
jno
cmp
in
pop
inc
pop
xchg
xor
fisubr
pop
jb
inc
dec
icebp
sbb
enter
neg
outs
popf
or
jge
leave
adc
jae
xlat
movs
shr
stos
dec
mov
ins
ja
repnz
and
mov
stos
mov
stc
dec
xchg
int
mov
leave
sbb
test
cmc
pop
jno
adc
shl
xor
pop
mov
into
push
shl
sbb
mov
clc
cdq
fidivr
jecxz
or
sbb
(bad)
outs
mov
xchg
push
bound
lahf
adc
repz
fdivr
das
call
icebp
sahf
mov
sbb
or
add
stos
sub
fcom
mul
jnp
ins
aaa
aas
int
cmp
inc
sub
push
mov
jg
xor
gs
xor
aam
jb
and
pop
aad
js
int3
sbb
mov
xchg
mov
sbb
div
retf
jmp
fdivr
rol
aaa
sbb
paddq
sbb
xor
dec
sbb
js
dec
xchg
push
pop
js
ins
mov
sar
mov
jecxz
jmp
aam
daa
xchg
stc
jne
cmps
push
mov
xor
shl
mov
adc
jnp
or
jo
xor
xchg
dec
cwde
(bad)
push
rol
arpl
sti
fild
mov
stos
sub
cmp
inc
hlt
fsubr
dec
in
mov
pop
sbb
mov
bound
repz
sub
clc
inc
test
sti
outs
push
icebp
shr
mov
and
dec
sub
xchg
jno
fmul
inc
ror
lods
jle
push
test
pop
inc
xchg
sub
out
sbb
pop
shl
cli
add
sub
out
nop
or
aam
sub
fld
jbe
pop
mov
dec
js
scas
sti
(bad)
test
mov
push
daa
mov
(bad)
jne
sbb
xchg
inc
xchg
push
jb
out
gs
xchg
xor
shl
imul
push
sub
scas
fcomi
xor
jmp
sti
pop
lods
ja
mov
adc
lods
cmp
xor
in
jns
scas
pop
fnstcw
fs
dec
xor
mov
lods
jbe
icebp
mov
mov
mul
lahf
pop
mov
xor
sti
add
div
and
test
pop
xchg
daa
ja
mov
sbb
dec
cli
pop
xchg
clc
je
jp
es
mov
(bad)
imul
ret
mov
push
jnp
inc
pop
xor
push
loop
pop
dec
fild
pop
or
dec
daa
jp
mov
pop
pop
test
ret
adc
lock
shl
fwait
or
pop
jae
adc
sbb
adc
sahf
xchg
ja
fstp
lods
mov
js
sub
mov
mov
push
jge
imul
out
cmps
jecxz
cwde
inc
jge
test
scas
ror
push
xlat
repz
(bad)
jp
call
inc
cmp
push
out
xchg
shr
pop
lock
adc
mov
mov
cmp
fld
clc
mov
pop
shr
fld
stc
into
or
mov
xchg
shl
mov
cmps
pop
(bad)
mov
idiv
jge
shr
aaa
fbstp
jno
movs
imul
out
jl
inc
hlt
aad
shl
push
pop
data16
cld
fst
outs
fbstp
and
bound
cwde
fwait
jbe
add
cmps
ins
arpl
sbb
ja
ins
add
ror
sahf
sti
fstp
push
sub
jl
imul
adc
pop
inc
mov
sub
jnp
fdiv
xor
outs
or
call
js
push
rcr
(bad)
out
pop
shl
push
xchg
add
outs
mov
loope
push
adc
mov
repnz
mov
popa
fst
(bad)
neg
sbb
pop
inc
sub
lds
pop
inc
dec
push
loopne
mov
adc
and
sbb
pop
jle
xchg
out
stos
outs
mov
sbb
push
add
cmps
jecxz
nop
pop
xchg
call
mov
push
test
dec
mov
mov
add
fstp
stos
jmp
jno
mov
movs
push
cwde
xchg
es
mov
cld
shl
cli
hlt
lock
xor
jle
div
(bad)
sbb
mov
pop
repz
popf
inc
fisttp
mov
fs
push
js
shr
(bad)
stc
or
mov
das
test
inc
mov
(bad)
mov
aaa
add
outs
jne
daa
outs
js
out
mov
test
scas
or
shl
and
repz
shl
jecxz
cmp
push
sti
add
data16
cmp
jecxz
jge
cmps
xor
and
fcmovu
lods
xlat
into
adc
push
sti
xor
or
test
loope
call
pusha
jmp
push
ja
ss
sub
jg
in
adc
push
inc
lds
fstp
out
(bad)
ficom
mov
mov
mov
sahf
dec
sub
fmul
and
data16
push
jmp
adc
fsub
adc
dec
push
pop
or
sbb
aas
xor
add
in
(bad)
jns
cs
mov
or
xchg
clc
push
fild
adc
aaa
das
stos
or
or
sub
(bad)
mov
retf
xchg
ja
stos
test
rcr
jne
sbb
mov
jno
outs
mov
inc
call
dec
mov
add
xchg
cmps
pop
jle
mov
push
daa
shl
pop
jp
add
nop
rol
xchg
cmp
and
ret
mov
in
ss
fnstcw
arpl
inc
into
sub
adc
dec
and
test
rcr
popa
das
shl
loopne
jae
imul
std
loope
add
xor
ficomp
jge
pop
jo
es
push
mov
cmps
mov
mov
mov
ficomp
sub
sub
mov
popaw
dec
leave
jge
or
mov
xchg
add
mov
xchg
cli
jae
mov
mov
popa
and
rol
pop
ja
inc
xchg
test
or
out
gs
mov
rol
mov
add
mov
(bad)
ret
sbb
inc
or
add
or
aaa
pop
push
clc
inc
dec
add
xor
ret
or
int3
or
lds
jmp
xchg
and
in
jg
out
cmp
dec
sub
or
jns
and
add
or
dec
je
pop
jne
mov
pop
cmp
mov
(bad)
arpl
adc
dec
add
fwait
(bad)
pusha
cmp
movs
sub
nop
cdq
ins
std
cmp
xchg
mov
cli
(bad)
loop
jmp
aam
pop
add
pop
ficomp
call
inc
out
push
fisubr
and
push
push
xlat
pusha
pop
clc
push
pop
iret
mov
dec
sbb
xchg
xor
mov
cwde
(bad)
clc
mov
test
push
aad
mov
dec
cmp
sub
mov
mov
push
jno
out
retf
dec
or
or
cld
cmp
mov
mov
sahf
sbb
add
push
cmp
mov
cld
adc
adc
adc
or
push
mov
or
movs
mov
sub
lock
cli
mov
inc
dec
adc
jmp
das
sub
(bad)
gs
or
mov
jbe
push
pop
mov
push
mov
loop
fld
xlat
pop
das
fsub
popf
jns
sub
push
repz
xchg
and
inc
jmp
or
push
scas
stos
adc
mov
pop
lods
retf
mov
xchg
outs
imul
mov
in
mov
or
inc
je
push
scas
pop
sbb
inc
jmp
out
in
rol
sahf
in
call
push
into
adc
iret
(bad)
jmp
and
ror
and
sahf
inc
add
xchg
(bad)
mov
aas
pop
xchg
jnp
inc
jnp
inc
or
sbb
out
jmp
sahf
and
add
std
pusha
mov
and
inc
xlat
pop
sub
imul
xlat
fsub
sbb
call
sbb
fisttp
inc
adc
test
test
jnp
sbb
cmps
popf
outs
je
jo
mov
inc
into
xor
jg
fstp
mov
popa
sub
add
outs
movs
pop
push
inc
in
inc
movs
cmp
jne
or
rol
add
xchg
dec
cmp
stc
fild
scas
push
nop
and
xlat
jg
not
sahf
add
or
aaa
mov
pop
popf
shl
gs
or
aad
retf
mov
mov
dec
aas
sub
je
arpl
mul
fisub
inc
sbb
clc
inc
loopne
inc
aam
enter
add
mov
rcr
(bad)
mov
jne
out
out
jg
push
test
adc
xor
ins
fs
or
and
fdivr
stos
les
sbb
mov
(bad)
in
mov
xchg
in
pop
in
movs
adc
mov
outs
and
mov
retf
fld
inc
xor
loop
jns
push
(bad)
and
cmp
xchg
into
jp
pop
jg
lock
ret
xchg
loop
push
fcomp
retf
retf
pop
mov
cmp
push
push
fbld
adc
lea
(bad)
sub
ins
or
cmp
das
mov
push
mov
mov
sub
sub
cdq
ds
les
stc
cdq
mov
and
jl
push
scas
xor
dec
mov
dec
les
call
dec
jmp
test
xchg
addr16
xchg
inc
cdq
rcl
mov
sbb
mov
mov
outs
and
dec
or
mov
add
cmp
retf
mov
mov
int3
inc
sub
retf
xlat
(bad)
inc
jmp
stos
inc
push
push
ss
iret
mov
pop
dec
jecxz
xchg
mov
mov
iret
push
and
jae
int
sub
push
and
call
inc
outs
icebp
and
push
mov
mov
jo
and
mov
(bad)
ja
lods
je
inc
add
(bad)
lods
ds
int3
loop
inc
sbb
int3
or
leave
outs
popf
popf
cmp
mov
lds
and
push
cmps
adc
out
mov
mov
push
add
je
in
rcr
and
aad
mov
shr
sub
inc
jl
dec
test
sub
test
mov
mov
sub
cmp
xchg
xor
pop
rcl
dec
and
jge
add
loope
scas
jge
dec
(bad)
enter
repnz
out
push
lds
test
mov
add
out
(bad)
push
outs
cmp
mov
mov
sub
add
cdq
mov
mov
adc
or
daa
hlt
call
sahf
imul
cmp
dec
xchg
xchg
in
ret
jo
or
retf
(bad)
and
test
jae
pop
lea
pop
fnstcw
ss
add
add
repz
push
pop
loop
adc
stc
and
out
mov
fdivr
xor
aaa
pop
xor
or
xchg
ins
mov
data16
xchg
lods
xchg
jg
dec
xor
or
stos
mov
call
shr
mov
cmps
jbe
adc
and
sbb
and
sbb
pop
rol
lds
lahf
mov
push
shr
in
test
jo
cdq
push
pop
retf
jmp
(bad)
mov
movs
fcom
adc
addr16
int
in
sub
sbb
addr16
and
mov
addps
fidivr
fsubr
out
mov
repnz
mov
mov
fcmovnbe
(bad)
fist
add
(bad)
sbb
jmp
sub
movs
sub
xchg
xchg
push
imul
jnp
call
mov
mov
outs
fnstsw
xchg
mov
loopne
xor
sub
and
into
ja
jp
cmps
mov
jmp
push
dec
shl
adc
sub
dec
icebp
dec
repz
addr16
or
hlt
sub
icebp
jae
xlat
clc
xchg
jns
jmp
je
sub
icebp
int
es
pop
xchg
add
into
cli
push
add
push
xor
cli
cs
or
in
xchg
ds
pop
rol
mov
das
div
addr16
pop
mov
ja
inc
retf
cmp
aad
mov
sub
sub
inc
add
stos
mov
lds
pop
call
pop
test
out
pop
outs
cmp
jns
mov
jbe
call
jg
adc
aas
imul
add
mov
xor
and
test
nop
sub
jg
inc
test
jno
add
sbb
push
mov
sbb
inc
fwait
mov
jmp
xor
push
and
aas
(bad)
loope
xor
mov
scas
and
jo
sbb
loop
xor
mov
push
dec
xchg
nop
jne
sti
mov
out
jb
pop
push
or
mov
test
icebp
pop
mov
push
dec
retf
inc
sbb
cld
mov
div
fstp
leave
jns
jle
xor
iret
xor
pusha
dec
sar
cmp
cdq
xchg
addr16
out
and
push
imul
pop
jne
inc
sahf
sar
pop
dec
sahf
push
int3
call
daa
inc
shr
add
mov
and
sub
cmpxchg
jb
js
sbb
mov
jle
add
push
sub
(bad)
into
stos
sbb
test
in
jge
push
and
(bad)
mov
adc
bound
lock
mov
pop
lds
loopne
mov
es
out
mov
mov
xchg
cld
inc
push
cli
xabort
mov
mov
sub
push
fild
pop
cmp
mov
mov
adc
test
test
movs
or
mov
ins
push
fimul
sub
xor
mov
data16
mov
shr
fisttp
dec
jb
cmp
cmp
jbe
(bad)
push
mov
jg
jmp
loopne
push
(bad)
mov
cmp
jnp
in
imul
lods
mov
pop
adc
pop
adc
push
arpl
cmp
push
mov
xchg
sub
into
dec
sbb
fidiv
pop
pop
inc
nop
adc
jl
in
add
adc
movs
mov
les
push
mov
pop
add
sti
aam
or
lods
add
cmps
ss
test
mov
xchg
or
scas
retf
mov
test
icebp
call
cmp
inc
(bad)
pop
lods
mov
cmps
lods
jecxz
mov
push
push
gs
inc
mov
shl
out
push
push
xor
dec
test
ja
push
pop
mov
nop
hlt
test
das
lea
movd
lahf
test
out
sahf
lods
stos
lods
and
adc
xor
scas
sbb
jg
leave
lods
dec
jge
push
xor
bound
inc
and
sbb
scas
popf
xlat
sbb
ja
xor
push
dec
into
jle
sub
xchg
or
mov
out
data16
xor
cmp
sbb
inc
pop
mov
retf
jb
mov
pop
mov
out
xchg
cmp
cld
lods
loop
clc
adc
stos
xchg
mov
push
fistp
or
(bad)
jmp
mov
cmp
mov
jecxz
sub
and
shl
push
ret
sahf
hlt
mov
jp
sbb
mov
cli
mov
sub
scas
int
cli
push
mov
mov
ret
lahf
mov
mov
test
addr16
sub
mov
je
pushf
pop
adc
cli
cmps
fs
xor
popf
enter
imul
sbb
cmp
addr16
and
cmp
pop
rcr
shl
pop
sub
jbe
into
inc
push
lahf
repz
ret
or
inc
into
fldcw
pcmpeqd
imul
or
xchg
push
xor
adc
jge
pop
retf
mov
pushf
xchg
fnsave
stos
and
push
xchg
(bad)
out
(bad)
pop
sbb
xor
test
ret
push
les
test
les
inc
jmp
push
jl
inc
sbb
cmp
and
nop
sti
pop
push
test
sub
inc
sbb
movs
fimul
push
mov
mov
xor
sub
cli
push
push
mov
out
xchg
test
iret
jns
cmp
mov
leave
sbb
or
push
or
les
out
xabort
inc
mov
dec
pop
sbb
pusha
mov
cmp
cld
jp
shr
(bad)
cmp
pushf
bnd
shr
sub
cmp
cmp
push
jecxz
int3
pcmpeqd
cmp
push
enter
jp
xchg
and
mov
xor
lods
fidiv
(bad)
jle
aam
sub
inc
inc
loop
dec
test
mov
imul
fdiv
(bad)
or
push
int3
fldenv
push
int
sbb
push
mov
fld
add
(bad)
mov
(bad)
shl
sub
inc
xchg
lds
sub
jae
mov
in
ficom
test
mov
push
add
and
mov
mov
xchg
int3
in
cmps
retf
or
pushf
cld
nop
icebp
mov
ins
xchg
stos
out
std
outs
scas
outs
inc
cld
jmp
aad
add
popf
sub
(bad)
in
xor
jmp
add
fnstsw
ja
mov
cmp
cmp
jno
mov
enter
adc
xchg
popa
cdq
add
in
sbb
inc
div
movs
inc
xor
xchg
sbb
or
fsub
mov
fisub
cwde
xlat
and
mov
push
add
int
ss
xchg
ins
test
cmp
jmp
aam
mov
sub
jne
xor
cdq
popf
inc
pusha
test
arpl
dec
cwde
pop
mov
and
jecxz
addr16
sub
mov
enter
xchg
int3
or
in
xor
or
pop
test
push
push
xchg
cmp
ds
rcl
mov
inc
rcl
int
cmp
mov
or
iret
mov
mov
stc
dec
repz
out
call
(bad)
loopne
and
mov
scas
out
lds
sub
sahf
mov
ficom
gs
push
mov
xchg
mov
fst
test
mov
cld
fcomp
fbld
shl
push
pop
dec
cli
je
jb
aas
xchg
movs
add
(bad)
adc
shr
sbb
sub
add
das
mov
cmps
mov
ins
jmp
ds
cmps
jno
in
mov
push
or
fwait
stos
repz
adc
movs
mov
outs
or
cmps
mov
(bad)
aaa
mov
bound
repz
(bad)
pop
outs
pop
movs
cmp
or
mov
sub
adc
jp
cmp
jne
jbe
popf
ret
and
cmps
retf
sub
inc
xchg
outs
inc
ficomp
jo
bound
inc
sar
mov
leave
inc
ss
(bad)
adc
lods
arpl
test
jge
add
mov
mov
inc
xchg
lods
mov
clc
(bad)
cmc
mov
retf
cmp
ds
es
aas
outs
jns
adc
mov
lock
mov
inc
sbb
pop
aaa
dec
push
push
je
popa
push
or
and
inc
xor
xlat
xlat
pop
xchg
add
jno
mov
and
test
das
fs
outs
cmc
popa
rol
icebp
dec
repnz
cmp
pop
jne
mov
mov
(bad)
and
stc
push
mov
aas
sahf
fst
mov
cmc
out
int
ins
sub
or
mov
sbb
loop
push
ins
dec
cmps
and
add
pop
cmps
xor
or
xor
mov
dec
ror
xor
aas
out
xor
test
aaa
inc
test
mov
and
jbe
popf
dec
popf
aad
add
shl
(bad)
cs
mov
adc
mov
aas
rol
or
xchg
lock
adc
mov
ja
or
icebp
outs
push
push
pop
pop
or
add
xlat
mov
ja
retf
aad
ins
or
xor
loope
movzx
repnz
in
dec
sahf
jle
lods
in
in
sub
into
jmp
mov
mov
xor
mov
aam
pop
dec
or
xchg
inc
call
jmp
sti
xchg
mov
mov
int3
mov
es
inc
imul
inc
out
retf
stc
push
sbb
xor
pop
int3
pop
push
xor
out
cmp
ret
pop
dec
outs
sbb
and
lds
sub
push
lds
push
mov
(bad)
jb
shl
xlat
clc
stos
push
retf
mov
push
in
scas
cmp
mov
xchg
jb
mov
sub
into
pop
test
jae
mov
cmp
inc
into
into
sahf
mov
pop
ins
jbe
mov
pop
jl
bound
jge
ret
push
fnstsw
jo
dec
cdq
and
inc
jg
mov
je
rcr
jl
cmps
sbb
push
or
mov
outs
pusha
fwait
inc
xchg
xor
adc
or
or
arpl
mov
in
retf
inc
mov
cmp
pop
mov
cmc
mov
imul
shr
inc
push
mov
rcr
pop
push
lea
xchg
ins
retf
cmp
aaa
push
in
clc
fs
mov
push
and
pop
jnp
or
sub
inc
sbb
add
icebp
imul
je
jg
fldenv
push
sub
inc
adc
call
jle
popa
or
push
addr16
sbb
iret
arpl
xor
push
cld
imul
jg
scas
outs
in
lahf
pop
adc
stc
rcr
push
pop
or
adc
loope
or
jbe
pushf
imul
movs
mov
xchg
add
push
test
xchg
inc
in
test
inc
jg
(bad)
or
and
or
jmp
lods
js
jns
(bad)
adc
into
jo
and
push
pop
and
(bad)
js
gs
loope
movs
int
fidivr
xor
call
scas
hlt
enter
sbb
sbb
mov
mov
loop
pushf
adc
ret
add
adc
jp
mov
idiv
pusha
pop
sbb
cmps
dec
cmp
push
cli
dec
and
es
fild
test
jmp
enter
dec
jb
fwait
push
mov
lods
mov
retf
ss
cmps
mov
jbe
push
call
test
aam
outs
inc
std
mov
test
retf
jb
or
mov
repz
in
les
mov
add
not
arpl
jno
xchg
adc
dec
jg
sub
inc
pop
loop
movs
daa
or
xor
(bad)
(bad)
push
lock
pop
mov
les
pop
iret
fsub
cmps
mov
int
inc
pop
test
mov
xor
retf
test
jae
imul
and
dec
aad
cmps
in
add
mov
dec
sub
dec
gs
sahf
inc
push
inc
inc
pop
popa
repz
dec
fisub
test
mov
pop
call
pop
sbb
and
fscale
xor
retf
add
in
jge
push
sti
mov
push
je
cmps
enter
pusha
pop
vshufps
(bad)
pushf
xor
xchg
add
or
adc
mov
pop
jbe
inc
stc
inc
xor
nop
jmp
test
mov
sub
call
push
sbb
es
lea
(bad)
call
test
xchg
push
(bad)
idiv
sbb
or
push
ret
xchg
mov
(bad)
push
and
cld
out
ja
and
out
sbb
pop
out
std
mov
sub
inc
mov
mov
add
jecxz
shr
sbb
push
sbb
sub
pop
cmp
pop
pop
lods
cmp
in
enter
add
or
cmp
adc
inc
push
scas
sub
jmp
mov
lea
ds
dec
sub
repnz
mov
xor
sar
stos
lods
aaa
dec
iret
push
mov
(bad)
mov
xor
in
retf
call
xor
int3
jmp
shl
data16
dec
out
sbb
dec
fnsave
pop
mov
inc
bound
dec
mov
cmovp
aaa
push
mov
mov
dec
sbb
mov
pop
cwde
int3
pop
xor
ficom
cmp
shl
sub
setbe
inc
mov
mov
push
aam
test
or
cmc
dec
movs
mov
ficom
add
rcr
and
add
mov
xlat
retf
clc
into
je
ret
inc
adc
push
jp
xchg
xchg
push
nop
fild
dec
push
cmp
loop
dec
or
nop
sbb
mov
cli
movs
dec
loopne
(bad)
xor
stc
add
jge
or
dec
repz
add
sub
adc
sub
enter
cmp
mov
mov
dec
xchg
sbb
xor
ins
cs
lds
test
outs
aad
fimul
inc
je
arpl
aas
push
xchg
enter
jg
aaa
ret
push
xchg
daa
add
or
scas
jge
call
sbb
pop
sub
mov
lahf
fidiv
lock
dec
les
mov
dec
mov
jns
leave
cwde
cmp
xchg
imul
adc
jp
call
jae
adc
dec
mov
pop
jmp
xor
inc
rol
or
mov
and
(bad)
xor
jbe
mov
ds
inc
mov
ja
add
cmps
and
lds
adc
mov
mov
mov
xchg
nop
scas
dec
xor
sub
mov
fadd
retf
fstp
clc
shr
stos
test
lds
aam
mov
inc
call
rcl
test
adc
(bad)
les
ss
pop
cmp
push
gs
and
mov
inc
jae
xchg
adc
xor
movs
pop
xor
sbb
sbb
fnstenv
dec
push
jnp
pop
fcmovbe
hlt
push
out
mov
push
mov
mov
enter
jmp
test
sbb
mov
rcr
scas
lds
mov
(bad)
jb
adc
push
and
(bad)
cmp
pop
stos
xor
mov
and
and
or
test
mov
jae
ss
not
(bad)
cmp
test
test
xor
jae
mov
bswap
shr
ins
or
inc
xor
inc
lock
jecxz
lds
inc
fs
add
out
retf
sbb
fwait
inc
repnz
or
xchg
jae
push
or
adc
cwde
and
mov
xchg
hlt
mov
push
out
push
sub
inc
adc
out
addr16
je
imul
lods
lds
gs
push
leave
mov
std
and
daa
add
inc
test
jb
call
jecxz
mov
mov
dec
in
mov
pop
add
jl
xchg
cmps
push
fisub
std
ror
test
leave
in
inc
fsubp
test
mov
sbb
and
and
push
dec
outs
rol
call
pop
adc
jp
adc
dec
add
lahf
enter
lods
out
or
call
outs
adc
aaa
dec
xchg
or
std
test
adc
out
pop
rol
leave
mov
cmp
sbb
(bad)
lods
test
inc
inc
push
adc
(bad)
mov
push
fcomp
pop
xchg
aas
clc
lea
sbb
and
pop
ins
and
jne
popa
mov
into
sub
stc
mov
pop
shl
sub
fwait
vpaddusw
mov
push
sbb
test
(bad)
push
xor
fisttp
call
and
mov
mov
xchg
cmp
jecxz
test
adc
and
lsl
sub
js
ins
dec
mov
es
scas
push
cmps
ins
ret
movs
not
adc
push
xor
and
xchg
dec
scas
test
ja
push
test
and
cmp
cmc
cmp
xchg
lods
(bad)
sbb
push
das
jns
fisubr
add
je
addr16
icebp
mov
jecxz
adc
add
cdq
ror
sbb
mov
in
push
test
pop
xchg
rol
sbb
pop
aad
stos
into
push
push
sub
loop
jg
addr16
mov
and
call
sar
(bad)
xlat
xor
cld
daa
cmp
mov
jecxz
add
xchg
xor
mov
pop
ins
sbb
xor
or
mov
pop
push
das
stos
out
xchg
shl
arpl
int3
popf
out
mov
pop
sbb
push
or
add
mov
cld
sti
ds
movzx
mov
add
test
push
pop
popa
pop
aas
iret
dec
push
pop
lea
std
add
in
daa
ja
mov
pop
(bad)
sbb
sbb
setge
cmps
xchg
inc
xor
push
and
and
sub
ret
and
or
movs
cmp
rol
ret
mov
xor
hlt
(bad)
jno
and
mov
or
jg
xchg
push
xor
rol
sbb
xchg
xchg
enter
or
mov
xor
call
rcr
mov
cdq
or
jae
iret
push
jp
int
cs
jbe
(bad)
sub
xchg
ins
shl
fst
leave
adc
sbb
adc
jno
add
stos
sub
or
mov
xor
and
mov
cmp
sbb
jl
outs
stos
and
pop
shr
inc
in
mov
stos
(bad)
mov
retf
data16
arpl
jae
fadd
mov
jns
adc
mov
iret
std
pushf
out
lea
int3
adc
dec
inc
xor
xchg
mov
or
dec
jbe
xchg
cmp
inc
adc
mov
lea
fwait
test
cmc
mov
jno
neg
jbe
sub
in
xlat
add
xchg
bound
sub
test
add
sub
cmp
cmps
cmps
sahf
or
and
loopne
in
jg
mov
cmp
xchg
scas
(bad)
shl
push
dec
mov
clc
imul
jge
jae
pop
rol
add
enter
out
adc
pop
scas
shr
(bad)
push
cmp
aas
and
sbb
mov
push
aaa
add
inc
int3
cmps
cli
push
cmp
adc
aaa
adc
sub
push
push
add
inc
aaa
push
cld
push
in
push
int3
ret
sub
or
adc
fcomp
pop
cmps
leave
icebp
pop
dec
cmps
mov
hlt
or
cmp
test
stos
in
mov
sub
daa
lods
std
jmp
dec
popa
aas
lahf
fiadd
xlat
inc
nop
xor
mov
jns
jmp
leave
sbb
dec
lds
jmp
pop
shr
xchg
fs
pop
xor
adc
dec
cmp
xor
cmc
lock
pop
mov
aam
lods
xchg
jb
mov
jno
jg
jns
stos
sub
mov
inc
mov
xlat
dec
out
push
stc
mov
iret
cmp
arpl
les
mov
pushf
out
add
mov
gs
popf
das
(bad)
pop
mov
sub
xor
loop
push
imul
cwde
fistp
jmp
int3
mov
imul
sti
les
imul
lock
and
sub
and
pusha
sar
loope
jnp
dec
or
daa
jns
cvttps2pi
pop
pop
jge
and
adc
cdq
(bad)
adc
sbb
sub
xlat
cmp
ret
sbb
out
nop
clc
int3
dec
push
mov
in
je
test
lock
ins
mov
sbb
outs
sub
test
ins
outs
mov
sar
and
scas
retf
scas
les
lods
aas
push
leave
daa
xchg
fbstp
mov
retf
sbb
add
(bad)
(bad)
out
sbb
dec
or
arpl
push
sahf
(bad)
ins
mov
mov
into
mov
cmp
jo
xchg
xchg
mov
add
iret
sub
inc
and
lods
sub
cmp
jge
xchg
cmps
aam
mov
or
xor
es
enter
ins
and
aas
push
aad
xor
or
aad
addr16
and
in
shl
sub
jge
fimul
xchg
mov
push
dec
stos
and
add
lea
les
call
call
jmp
test
sub
jno
(bad)
dec
add
sbb
loopne
stos
cmps
xor
sbb
add
in
fcom
mov
cmp
inc
push
push
pusha
dec
scas
inc
movs
scas
pop
cwde
xor
enter
lahf
or
dec
cmp
xchg
dec
and
cmp
xor
cmp
sub
mov
jne
fimul
fst
(bad)
repnz
jne
jnp
mov
mov
push
test
adc
fsub
imul
loop
loope
pop
xor
mov
jns
test
pop
add
aam
push
add
sbb
outs
inc
and
jg
jge
sub
movs
xchg
sub
adc
(bad)
push
aas
jmp
sub
mov
sti
aaa
sbb
xor
aaa
rcr
dec
add
retf
out
scas
shl
sub
jns
repz
adc
imul
jge
sub
mov
sar
fwait
outs
sub
add
inc
aaa
cdq
lock
cmp
in
sub
lods
jp
adc
lahf
push
aaa
cdq
cmp
fcmovnb
xor
jge
jg
inc
sbb
ja
lods
inc
jp
or
and
inc
std
shl
adc
frstor
sub
and
shr
push
std
mov
retf
mov
sbb
push
stos
sbb
fadd
test
pop
mov
pop
(bad)
pop
cs
xor
sub
call
jge
scas
and
sahf
sub
jg
cmp
fisubr
scas
sub
ror
pop
fmul
movs
btr
stc
rcl
cmp
scas
call
test
mov
mov
movs
lds
clc
sub
test
test
addr16
or
or
mov
dec
clc
xchg
test
inc
cli
push
mov
add
int3
imul
div
imul
and
pop
pop
out
int3
sbb
pop
cmps
shl
adc
push
pop
or
ja
(bad)
adc
(bad)
ds
sti
rcr
popa
sti
push
pop
add
xchg
xchg
jno
cmp
xchg
ss
and
outs
mov
pop
or
data16
jecxz
adc
(bad)
sbb
sar
(bad)
sub
ret
ret
test
sub
xchg
xchg
das
dec
stos
aam
arpl
iret
retf
call
sbb
or
cmc
sbb
cmp
xchg
xor
mov
ja
mov
mov
xor
sub
pop
push
xor
call
call
sbb
xchg
mov
les
mov
xor
in
or
ds
outs
cmp
jo
pop
xchg
frstor
(bad)
cmp
adc
add
mov
and
imul
das
lods
aam
push
into
bound
cmc
aaa
inc
xchg
pop
mov
dec
loopne
add
movs
lods
(bad)
idiv
sar
out
imul
shl
retf
rol
enter
and
push
xlat
in
push
pusha
lock
ds
jae
(bad)
xor
add
push
push
popf
push
(bad)
mov
or
call
dec
xor
jno
lgs
sti
xchg
rol
mov
gs
leave
pop
mov
cmp
xor
sbb
outs
jp
mov
add
popf
or
ret
cmp
addr16
lds
mov
xlat
cmp
cmp
imul
pop
inc
sbb
idiv
ds
jbe
ja
adc
dec
popa
xchg
ret
fimul
lods
(bad)
shr
mov
(bad)
lock
int
add
mov
scas
ffreep
js
cwde
loope
jmp
mov
test
icebp
inc
rcr
imul
outs
movs
imul
cmp
aam
sbb
xchg
aam
std
imul
test
push
sub
and
mov
fst
rcr
jecxz
sub
dec
and
and
mov
pushf
scas
push
sub
(bad)
xor
test
mov
xchg
loop
adc
xor
cs
mov
push
inc
push
sbb
ins
cmp
sti
and
add
jge
xchg
cs
movs
sub
hlt
sar
daa
sti
inc
xor
sti
sbb
(bad)
ret
and
gs
pop
xchg
fcmovbe
and
dec
pop
dec
lahf
add
sub
in
push
push
push
outs
jne
xchg
ror
pop
hlt
pop
pop
(bad)
bound
iret
pop
jmp
sbb
retf
jo
es
dec
xor
scas
xchg
adc
and
pop
xor
push
xor
and
add
mov
pop
mov
(bad)
cs
icebp
or
mov
sbb
mov
add
inc
je
test
mov
aam
cmp
or
pop
out
movs
div
xor
fisttp
ja
push
imul
ret
mov
inc
sub
lods
add
xor
fcomp
push
mov
mov
jl
jbe
jne
dec
cmps
mov
cmp
jbe
addr16
and
mov
mov
stos
or
outs
dec
sti
jne
pop
dec
aam
inc
(bad)
fistp
push
outs
in
nop
ss
xadd
mov
mov
adc
sub
jo
cli
cmp
gs
and
jmp
neg
outs
cmp
lds
mov
stc
sbb
sbb
jmp
inc
xchg
popf
mov
sub
xchg
or
mov
add
loope
sub
sbb
cmp
add
cmp
loop
retf
rcr
sbb
xor
clc
test
and
movs
call
cwde
mov
je
(bad)
and
call
sbb
mov
ret
fimul
out
jle
pop
sub
pushf
jno
adc
mov
fld
mov
div
aad
jge
cmp
cld
out
mov
mov
xchg
inc
jbe
aaa
data16
add
pop
pop
pop
retf
pop
jecxz
addr16
hlt
sahf
xchg
ror
stos
mov
add
out
or
arpl
retf
cmp
popf
mul
inc
xor
popf
scas
leave
or
ins
xchg
test
mov
adc
xchg
sub
loope
sub
daa
icebp
xchg
imul
int
test
add
adc
push
fadd
push
out
loopne
xor
jg
pop
mov
cmp
in
lock
(bad)
es
mov
fnsetpm(287
clc
add
loop
dec
shr
out
into
sti
loop
inc
xchg
add
dec
inc
loopne
adc
and
rol
push
mov
loop
test
mov
inc
mov
sbb
xor
add
jnp
inc
stc
arpl
jl
push
push
xchg
push
pop
inc
mov
lds
repnz
(bad)
adc
dec
push
shr
sub
mov
cwde
les
aas
and
stos
inc
mov
fldcw
mov
xchg
out
std
mov
pop
fsub
sbb
pop
movs
pop
(bad)
pop
les
mov
pop
(bad)
pop
cli
xlat
fidivr
cmc
adc
stc
add
movs
inc
xor
das
mov
cdq
into
pushf
fs
or
push
mov
cli
cdq
in
jl
scas
cmps
mov
sar
mov
cmp
hlt
xor
and
mov
pop
cmp
and
jne
pop
fmulp
clc
outs
or
xor
mov
sub
push
lahf
or
in
test
push
inc
stos
shr
xor
jmp
and
ds
adc
push
cmp
(bad)
xchg
sti
ja
sub
and
jp
cmp
dec
aam
adc
push
or
in
test
lock
xor
mov
out
mov
jae
xchg
add
rcr
rcr
push
test
ficomp
(bad)
hlt
test
add
cli
fistp
jbe
idiv
lea
or
stos
and
mov
sbb
test
inc
pushf
stc
mov
mov
(bad)
(bad)
mov
ffreep
or
or
cmp
sbb
push
jg
call
adc
or
mov
inc
mov
xor
fwait
jl
cmp
inc
je
loope
repz
and
cmp
push
add
or
pop
into
cmps
mov
loop
and
sti
jp
fsubr
or
hlt
je
cmps
retf
push
and
shr
or
push
rsm
cmps
jmp
and
aam
jg
and
jge
mov
mov
aam
or
sub
xchg
daa
aaa
inc
(bad)
push
xchg
jp
and
xlat
mov
xchg
or
jb
loopne
cmp
addr16
je
es
mov
rcr
pop
add
mov
fidivr
dec
push
cmps
push
mov
imul
mul
xlat
or
pusha
je
jp
ins
sbb
cld
icebp
xor
out
cmp
jb
aam
fcomp
xchg
mov
fnstenv
push
ja
nop
xor
adc
xor
or
aam
in
and
retf
arpl
inc
jb
pusha
inc
mov
sub
dec
pop
fld
arpl
sbb
push
fidivr
xor
pusha
or
sbb
push
adc
lahf
xor
and
mov
mov
dec
push
or
or
pop
out
mov
sub
mov
cdq
aas
sbb
or
cmps
dec
fcmovu
(bad)
sub
leave
lods
dec
add
jl
adc
mov
add
jb
push
test
fimul
je
sub
push
cmp
and
cmp
push
stos
cmp
xchg
dec
sub
shr
repnz
xor
cmp
nop
mov
mov
add
pusha
(bad)
out
popa
sahf
mov
movs
retf
mov
push
mov
push
movs
loopne
dec
nop
mov
int
and
mov
gs
in
loop
pop
sub
cmp
jno
jnp
dec
add
mov
adc
jg
lea
jae
addr16
mov
mov
outs
nop
or
sub
pop
mov
sbb
(bad)
dec
push
or
add
retf
lds
fidiv
jge
aam
mov
or
sub
jp
repnz
xchg
fmul
adc
mov
mov
jb
push
ins
mov
dec
fsubr
jae
add
mov
mov
fnclex
sar
lds
and
nop
mov
and
adc
(bad)
pop
adc
jmp
loop
add
repz
gs
in
sub
xlat
pop
jbe
dec
jg
add
adc
jle
popf
repz
jmp
sbb
call
repnz
fucomi
out
int3
cmp
pop
es
and
dec
xlat
inc
xchg
pusha
xor
call
cld
in
mov
mov
and
psrad
mov
mov
xchg
fs
jno
hlt
add
adc
lods
repz
clc
lds
pop
loop
pop
inc
data16
push
and
xor
jge
adc
imul
clc
xchg
not
xor
addr16
adc
inc
(bad)
aaa
ja
or
rcl
jnp
(bad)
adc
jne
lea
outs
push
pop
and
jg
aad
or
inc
mov
sbb
dec
dec
ja
cmp
pop
pop
enter
mov
adc
inc
cmp
retf
cwde
sar
rcl
adc
jo
inc
loop
je
xchg
std
mov
mov
push
ins
xor
or
jmp
add
cmp
jae
cmc
(bad)
popf
sub
hlt
xchg
mov
lock
aad
inc
cmps
dec
pop
cli
pop
sahf
add
ret
pop
bound
int3
ret
sbb
sbb
hlt
sub
mov
fst
cmp
test
(bad)
pop
ret
inc
sub
int
pushf
and
lods
xchg
pop
mov
sbb
clc
into
out
(bad)
xor
fistp
loop
push
iret
stos
mov
pop
sub
dec
bound
pop
je
inc
pop
fstp
pop
mov
sahf
push
xor
mov
loope
pop
rol
jg
aad
xchg
push
imul
dec
dec
dec
lods
retf
push
dec
cmp
and
in
fdivr
xchg
ror
cmp
cmp
popa
or
inc
test
neg
fs
xchg
adc
mov
mov
stos
lods
retf
cmps
mov
xchg
ret
cmp
ret
out
mov
jle
jae
inc
(bad)
jnp
adc
pop
mov
daa
mov
aad
add
inc
push
sbb
dec
xor
shl
pop
dec
xchg
test
aaa
movs
cmp
sbb
jle
shl
pusha
pusha
and
mov
outs
or
bound
xchg
fdivr
fld
xor
mov
push
pop
test
adc
cmp
jmp
sti
jae
xchg
xchg
xlat
jns
daa
sahf
mov
cli
call
outs
ror
adc
out
scas
stos
adc
mov
inc
add
sbb
fidiv
dec
jne
jge
add
xor
inc
sti
adc
pop
mov
jnp
pop
adc
pop
test
mov
xor
ror
jmp
pop
fisttp
outs
test
aad
inc
pop
jl
pop
mov
ds
sbb
(bad)
jg
test
jecxz
pop
popf
retf
mov
scas
es
mov
sub
inc
test
pop
retf
out
cdq
repnz
cmp
popf
xchg
pop
aas
mov
idiv
and
stos
mul
push
sti
cdq
xor
ret
xor
or
int
fmul
cwde
and
test
sahf
cli
jno
out
pop
cmp
ret
mov
add
dec
cmp
cmp
je
push
mov
push
xchg
mov
add
ret
and
out
cmp
retf
(bad)
cld
das
or
into
retf
cmp
in
dec
sbb
ret
mov
sub
push
xchg
lock
cwde
mov
lahf
(bad)
or
test
sar
das
push
inc
xor
daa
dec
lods
popa
mov
cmp
mov
rcl
pop
jb
ret
and
add
mov
sub
out
xor
loope
mov
leave
aaa
pop
out
sbb
adc
cmp
or
push
pop
fisttp
inc
and
inc
sbb
adc
add
inc
js
movs
sbb
xchg
mov
adc
adc
push
in
and
dec
xor
mov
inc
stc
inc
mov
or
ret
enter
lea
cmp
cmps
(bad)
adc
arpl
cdq
cs
fwait
mov
cmp
in
lods
mov
adc
mov
cmp
ds
outs
jo
pop
cwde
pop
cmp
cmp
cmp
cwde
add
call
adc
lods
addr16
and
enter
sti
xor
bound
cmc
scas
fldenv
xchg
jg
popa
ret
cmc
adc
fisubr
or
mov
stos
sahf
out
in
add
cmc
dec
xchg
loopne
in
addr16
sar
jnp
das
test
(bad)
cli
dec
loope
mov
sahf
je
xchg
fsubr
scas
pop
jo
add
jp
push
xchg
fisttp
(bad)
rcl
mov
jp
imul
push
int
mov
dec
stc
sbb
mov
shl
or
mov
jbe
pop
loop
push
fcmove
popa
sub
fsub
cmp
stos
aad
ins
inc
lahf
jbe
add
icebp
loopne
push
xchg
pop
cmp
jmp
(bad)
vpmaddwd
jne
or
or
std
out
iret
lods
mov
add
sub
adc
outs
lock
movs
arpl
mov
xchg
cmps
push
or
push
scas
mov
call
and
push
test
(bad)
push
(bad)
lock
pop
ds
into
cmp
push
or
push
repnz
xor
push
push
dec
and
ins
test
stos
mov
shl
xchg
test
popf
je
pusha
cli
aaa
mov
mov
inc
push
movs
and
das
mov
sbb
rcr
ret
mov
pop
jae
sbb
hlt
inc
dec
or
pop
sub
loopne
xor
jae
and
jmp
xor
cmp
je
daa
mov
xchg
(bad)
loope
stc
pop
stc
fdivp
jl
test
jl
fcom
std
mov
add
mov
cld
loopne
mov
mov
jno
jle
jle
xchg
xor
jb
push
hlt
hlt
imul
cmp
push
mov
mov
push
mov
test
iret
imul
push
and
sbb
test
add
jo
jg
loope
push
mov
fisttp
add
sahf
mov
sub
lds
sbb
ja
call
je
loope
(bad)
retf
in
cmp
arpl
(bad)
fnstenv
sbb
sti
push
sub
in
cmp
cmp
and
add
loope
sbb
xor
ja
cmovns
std
xor
movs
sbb
jp
sub
mov
xchg
or
xor
jg
push
retf
test
and
and
and
mov
xchg
in
mov
xchg
mov
jecxz
outs
push
sub
ret
repnz
mov
mov
daa
mov
mov
outs
int3
mov
ror
jg
jns
mov
shl
fwait
out
jae
imul
inc
cmps
push
mov
dec
dec
lods
lods
iret
push
ja
cmp
mov
mov
out
sbb
dec
inc
sbb
outs
retf
inc
imul
mov
ja
add
out
mov
outs
(bad)
es
cwde
cmp
popa
adc
les
jecxz
movs
loop
cwde
xchg
add
xchg
push
aad
pop
out
and
adc
jmp
jo
xchg
lahf
add
jmp
push
imul
add
mov
add
inc
rol
pop
cmp
xchg
and
dec
and
sti
lods
jb
xor
test
mov
popf
aas
mov
loop
adc
sahf
les
loop
repnz
std
jno
jmp
in
sar
xlat
xchg
cs
jns
lods
bnd
and
leave
out
mov
mov
dec
sbb
xor
pop
lods
mov
ds
fcmovbe
jge
cmp
pop
fcmovnu
mov
fnstsw
push
in
pop
or
es
fistp
pushf
inc
movs
sbb
pushf
outs
pusha
repz
neg
and
lods
aas
cmc
mov
pop
std
arpl
pushf
sar
ds
mov
mov
mov
push
ins
shl
addr16
inc
and
pop
or
inc
imul
dec
aas
cmp
or
pop
xor
lods
test
test
mov
pop
ins
mov
mov
jne
xor
cmp
mov
out
or
pop
push
aam
lea
sub
fimul
test
test
call
out
aad
adc
xchg
leave
fst
(bad)
cwde
adc
inc
jbe
dec
into
repnz
or
jbe
jbe
sbb
mov
push
fs
and
and
cmps
mov
xchg
dec
arpl
xchg
lahf
aam
push
fisub
xchg
test
enter
jbe
mov
retf
inc
and
(bad)
and
into
mov
cmp
in
sub
mov
and
adc
inc
pop
repz
mov
test
loop
xchg
mov
dec
jno
or
rcr
xlat
movs
les
cmp
push
ret
je
mov
pop
dec
xor
push
cwde
in
push
lods
ror
lock
shr
xchg
mov
aaa
jmp
mov
mov
xor
icebp
push
pop
pop
push
mov
adc
mov
adc
inc
cmp
jns
ficomp
jl
pop
xchg
test
and
jg
jmp
mov
jl
pop
mov
mov
mov
ficom
cmps
mov
mov
pop
mov
and
test
jne
inc
test
das
loope
pop
cli
lods
out
cmp
jnp
ds
ds
outs
push
mov
mov
add
push
std
aam
fwait
aad
test
adc
mov
adc
pop
fmul
jl
test
pop
sub
pushf
xor
pop
cld
mov
jb
cdq
mov
stos
mov
push
out
add
sbb
das
mov
inc
jno
les
xor
sbb
out
inc
dec
jmp
clc
loope
jg
sbb
bound
and
jnp
dec
sub
pop
inc
gs
push
in
fisubr
shr
(bad)
hlt
popa
stc
mov
(bad)
js
addr16
push
pop
clc
sub
mov
mov
inc
ss
cwde
jl
sub
test
data16
invd
pop
ret
or
add
xchg
fsubr
popa
and
mov
xchg
mov
xchg
sbb
(bad)
lods
sbb
fnsave
inc
ret
mov
popa
arpl
cwde
icebp
das
pop
fs
or
mov
mov
or
xor
jnp
enter
and
add
push
add
sbb
vxorps
test
mov
aas
ins
sub
adc
bound
jb
es
ds
call
sub
addr16
pop
nop
in
sbb
sar
in
into
test
push
or
dec
outs
(bad)
ror
mov
cmp
ins
push
icebp
fld
add
jle
dec
sub
lods
dec
mov
imul
pop
jne
add
adc
jmp
and
push
(bad)
jo
(bad)
push
sub
mov
dec
js
repz
inc
sbb
mov
lea
cld
xor
or
xor
add
xchg
mov
hlt
outs
fidivr
in
pop
inc
je
add
std
scas
call
xchg
push
imul
lock
cmp
and
cmp
clc
pop
push
(bad)
pusha
and
adc
pop
push
test
and
jp
(bad)
mov
ss
cmp
adc
push
mov
add
in
push
sbb
(bad)
push
std
rcr
adc
(bad)
enter
(bad)
push
sbb
add
push
cs
add
adc
mov
aam
and
push
pop
and
xor
mov
fdiv
retf
adc
pop
(bad)
test
cdq
xchg
mov
out
mov
sub
adc
stc
out
adc
pop
mov
xchg
bound
in
(bad)
mov
xor
in
in
mov
adc
repnz
sbb
fidiv
inc
nop
stos
jno
imul
cli
and
jae
inc
push
(bad)
movs
shl
icebp
jnp
sahf
cli
les
stos
loop
pop
data16
aad
fld
ins
popf
dec
enter
mov
add
mov
loopne
jno
or
and
sahf
pop
ds
xchg
push
dec
daa
and
ss
ret
mov
push
mov
sub
xchg
test
and
push
jbe
mov
(bad)
scas
or
mov
mov
ja
cmp
xor
push
xchg
jo
cmp
shl
lahf
lods
xchg
(bad)
and
mov
pop
add
and
dec
js
fsubr
mov
sbb
dec
or
pushf
out
xchg
or
stc
lods
out
adc
movs
sub
imul
fwait
mov
xchg
fnstenv
push
loope
jp
in
sbb
inc
movs
icebp
dec
into
rcr
loop
retf
shl
cmp
jne
adc
ficom
xor
push
xchg
adc
cmp
lahf
in
leave
cld
das
push
sub
js
push
pop
jge
(bad)
xor
cdq
shr
adc
bound
leave
push
(bad)
in
(bad)
out
adc
lods
jmp
movs
jnp
in
push
inc
mov
mov
aad
ret
adc
mov
mov
push
sub
sahf
les
xchg
call
push
pop
xor
popa
test
or
sbb
or
loop
imul
and
ja
mov
mov
mov
and
push
aaa
mov
xor
fimul
(bad)
sahf
nop
xchg
test
cmp
test
pop
inc
cmp
and
cmp
inc
mov
ins
in
int
icebp
xor
cmp
mov
(bad)
cmps
xchg
adc
adc
xlat
fwait
inc
cmps
adc
cwde
aad
test
cmp
shl
dec
and
cli
sub
mov
inc
imul
rcr
into
(bad)
push
rep
xor
adc
sahf
cwde
enter
mov
call
lea
cdq
loop
cs
push
mov
movs
xchg
stos
lds
scas
xchg
icebp
popa
lds
not
pusha
in
sahf
dec
shr
gs
call
inc
ret
xchg
rcl
stos
leave
neg
maxps
nop
movs
imul
jbe
mov
aad
jp
adc
repnz
jmp
jmp
pop
inc
enter
daa
shr
gs
jb
fstp
pusha
mov
jecxz
sbb
mov
setge
imul
xor
push
mov
imul
mov
mov
add
in
xchg
aaa
jb
cmps
(bad)
jmp
rcl
jge
(bad)
xchg
sub
jmp
pop
outs
loop
arpl
or
jne
fadd
cmp
sub
cld
aas
pop
cli
cmp
mov
(bad)
call
shl
cmps
jmp
int
push
(bad)
out
jge
(bad)
push
gs
in
pop
imul
xor
loopne
in
inc
jae
fdivrp
xchg
and
xor
and
add
icebp
(bad)
mov
scas
jb
stc
jbe
dec
and
mov
stc
movs
mov
shl
nop
(bad)
iret
cmp
add
test
sbb
(bad)
dec
dec
dec
imul
mov
pop
xchg
call
cwde
and
cmps
inc
push
call
out
out
pop
jno
sub
push
jae
cmps
test
repz
ins
push
std
popa
leave
mov
dec
or
sub
repz
adc
aaa
xchg
pop
push
pop
test
aaa
mov
addr16
nop
xor
sbb
gs
mov
cmc
cld
push
stos
xchg
push
lods
xchg
ds
dec
ret
in
rcr
jae
popf
outs
or
mov
popf
stos
lods
xor
and
inc
out
sub
mov
mov
test
add
rol
movs
lods
xor
push
lahf
outs
pusha
enter
jb
popf
jb
push
mov
adc
and
cmp
xor
cli
div
loop
adc
mov
sbb
aam
push
bound
pop
scas
pop
(bad)
lds
aas
scas
push
add
jmp
jns
inc
test
test
fwait
mov
mov
add
sahf
cmp
pop
test
dec
cmp
mov
jbe
sbb
jg
push
sub
xchg
jecxz
mov
ror
sti
mov
xor
sbb
mov
popaw
mov
pop
div
adc
bound
mov
cld
aam
inc
push
mov
sbb
jae
or
add
cmp
(bad)
pop
ds
xchg
stc
sbb
leave
loopne
int
dec
xchg
push
push
cs
mov
xor
out
test
mov
cs
mov
lahf
jnp
call
sbb
push
mov
sbb
adc
pop
inc
mov
stos
cmps
xchg
jns
mov
and
(bad)
fs
fldcw
test
sub
xor
jnp
cmp
pop
mov
adc
and
enter
daa
xor
xor
inc
popa
sub
sub
repnz
test
repnz
push
or
mov
daa
adc
cld
inc
push
shl
je
shl
mov
inc
sbb
inc
push
sbb
inc
mov
in
pop
mov
(bad)
loopne
jnp
jmp
std
call
add
add
ror
mov
inc
and
xchg
mov
cmp
xchg
push
mov
sbb
out
xchg
clc
and
jne
fsubr
stc
pop
cld
leave
loop
mov
mov
jle
repz
mov
dec
jb
dec
pop
in
(bad)
mov
mov
add
pop
ret
icebp
xor
stos
lods
fstp
cmp
test
iret
push
push
mov
jmp
push
sub
lock
add
lods
inc
(bad)
int3
int3
sub
ja
sub
mov
mov
jae
jae
retf
fdiv
xlat
sbb
in
ffree
lahf
lea
cmps
(bad)
adc
fs
rol
and
fs
cli
push
setno
pop
add
mov
mov
xor
aaa
fld
xchg
jg
and
sahf
pop
inc
shr
mov
(bad)
lea
mov
push
(bad)
std
ins
test
xor
pop
rcl
test
cmc
cs
repz
push
ror
clc
idiv
push
mov
ret
push
retf
adc
scas
jl
dec
push
jnp
jns
cmp
scas
pusha
push
push
arpl
icebp
cmp
sub
aad
test
push
pop
(bad)
(bad)
push
cmp
jp
xchg
arpl
sahf
cwde
push
adc
mov
xchg
test
shr
and
sbb
push
clc
add
xor
mov
mov
loope
ja
in
mov
add
add
ret
out
retf
cmc
gs
mov
adc
inc
shl
sbb
bound
int
pop
sub
imul
sbb
fxch
bound
mov
xor
adc
or
out
fxch
jmp
pushf
sbb
sub
sbb
jnp
cmp
popf
add
inc
adc
in
movaps
inc
gs
push
pop
mov
dec
dec
fisttp
sub
popa
adc
mov
mov
(bad)
mov
and
test
es
dec
sahf
push
test
and
pop
mov
aad
mov
add
mov
call
xchg
push
cli
sbb
lds
dec
retf
pop
repz
mov
lock
mov
xor
or
adc
jo
jno
and
stos
adc
inc
xor
repz
retf
inc
lods
ret
cmp
xor
jmp
jno
paddq
sar
div
cmps
jg
sub
inc
cmc
cmps
cld
mov
clc
popf
rcl
mov
xchg
cdq
dec
mov
call
fisub
das
lahf
fisub
call
and
fist
inc
xchg
into
xlat
(bad)
js
movs
mov
test
mov
shr
push
pop
xor
fwait
adc
xor
xlat
adc
je
enter
fild
xchg
daa
das
mov
outs
test
adc
fdiv
push
inc
push
jge
adc
xor
clc
mov
jmp
gs
inc
xor
imul
imul
js
nop
shl
jg
in
mov
dec
(bad)
cli
cmp
mov
(bad)
jb
(bad)
test
cmp
pop
and
call
push
or
pop
arpl
repnz
xor
add
(bad)
push
sar
fnstenv
cmp
pusha
inc
scas
xchg
mov
test
push
jmp
jecxz
icebp
push
sub
outs
dec
test
adc
aam
xor
mov
inc
idiv
add
ss
fdivr
mov
push
enter
cmps
jmp
inc
inc
xor
test
push
rol
icebp
ins
jmp
mov
and
cmp
psllw
xor
imul
xchg
dec
cmc
pop
or
in
inc
adc
clc
pop
aam
lock
jno
gs
mov
fs
stc
pop
dec
adc
popf
sub
sub
and
mov
mov
jbe
aaa
test
pop
and
movs
je
jge
test
inc
sahf
jl
lahf
push
pushf
add
mov
xor
adc
mov
dec
sti
xchg
cld
cmp
pushf
jecxz
cwde
lods
mov
ins
jl
std
icebp
fidivr
retf
sbb
aad
mov
inc
cmc
dec
xor
add
adc
dec
cli
adc
(bad)
nop
push
ins
xor
and
lea
icebp
js
popf
retf
sbb
and
add
xlat
retf
aam
xor
adc
mov
std
pop
mov
and
xor
cmp
dec
mov
imul
shl
or
call
rcl
or
push
ror
jne
ror
retf
popa
neg
push
les
cmps
fstp
cmp
and
out
mov
jge
dec
adc
ret
push
sti
sub
je
sbb
jg
out
mov
ds
adc
dec
xor
repnz
test
test
dec
cmc
retf
pop
lea
fldcw
cwde
sub
popf
add
adc
lea
iret
psrlw
xchg
or
mov
movs
pop
cmc
mov
outs
test
mov
sbb
test
mov
cwde
cdq
lock
cmc
mov
jecxz
inc
int
push
loop
stos
inc
mov
imul
push
arpl
mov
fisubr
xor
(bad)
in
cdq
xor
imul
xor
dec
xlat
mov
jo
inc
sub
push
jnp
and
adc
fdivr
push
addr16
out
in
mov
call
mov
loopne
or
ret
xchg
mov
test
arpl
(bad)
test
cwde
popf
aam
xchg
jno
inc
js
cmps
iret
cmp
into
pop
sub
aaa
ret
fwait
mov
js
adc
lods
push
repnz
fcmove
addr16
rcl
inc
pusha
xor
mul
pop
or
outs
loop
neg
pop
inc
pusha
sub
mov
fbstp
push
(bad)
(bad)
or
adc
(bad)
jmp
xchg
pop
out
ins
rcl
mov
out
enter
xchg
rcl
pushf
sub
repz
mov
and
push
jecxz
mov
ins
and
ins
dec
dec
push
inc
add
xor
mov
stos
nop
movs
mov
(bad)
push
sub
sub
repz
in
clc
add
mov
pop
scas
lods
std
test
imul
(bad)
loope
imul
jecxz
scas
mov
not
jge
cld
xchg
xor
aam
xor
xlat
inc
mov
jno
mul
imul
pop
xor
mov
push
xor
(bad)
call
cmp
fmul
mov
push
mov
push
add
adc
adc
cmp
dec
popa
mov
ret
dec
add
pushf
imul
mov
cmp
sbb
push
xor
aaa
fsub
mov
je
stc
xchg
aam
adc
rcl
rcl
es
jo
xchg
jmp
enter
jno
lock
mov
das
pop
sub
loop
imul
sub
jl
fnsave
dec
jge
in
or
aaa
lahf
retf
(bad)
mov
mov
mov
cmp
aad
fimul
lea
xchg
ss
xchg
sub
addr16
and
xchg
inc
in
xchg
xchg
imul
push
mov
outs
xchg
arpl
jle
mov
lock
sub
jmp
mov
and
cmp
mov
pop
mov
adc
cdq
pusha
push
mov
shr
adc
out
jae
shl
fwait
xor
pop
pop
mov
iret
pop
in
cmp
lea
push
(bad)
pop
jge
push
ins
jmp
or
add
mov
sbb
out
mov
ret
popf
jo
aad
push
push
xchg
sub
in
pop
xor
ret
loopne
and
adc
test
in
xor
pop
mov
ss
push
dec
and
clc
xor
jge
push
sbb
sub
push
push
stos
add
pushf
mul
inc
mov
xor
mov
dec
ret
mov
ins
jg
or
jmp
fadd
sub
int
lods
jmp
adc
cld
mov
fwait
cmp
imul
sbb
mov
push
les
lods
mov
pop
xlat
cmp
add
sub
pushf
adc
dec
aad
xor
shl
cmp
jecxz
ret
mov
mov
pop
cli
sbb
icebp
pop
adc
addr16
pop
xchg
ds
sbb
xlat
mov
mov
imul
and
stos
pop
inc
xor
popf
mov
push
retf
push
inc
js
and
retf
dec
scas
mov
les
xor
jb
inc
push
(bad)
movs
aad
or
aas
fldcw
sbb
and
or
leave
mov
cmps
and
ficom
mov
and
sbb
sbb
and
call
pop
jl
retf
call
or
inc
sar
mov
inc
sti
scas
mov
dec
in
lds
les
push
xor
mov
les
fiadd
shr
sub
cdq
jne
data16
mov
mov
out
jo
aas
imul
sbb
ret
test
repz
xchg
loope
sub
mov
push
(bad)
jp
cdq
clc
sub
daa
rcl
xor
std
adc
cmp
test
jno
and
bound
jns
fidivr
lock
rol
sub
push
mov
mov
pushf
cmps
aam
add
dec
lods
es
mov
rol
xchg
rol
scas
enter
lock
cmp
retf
outs
or
ja
sub
lods
push
jl
sub
mov
jns
out
jae
adc
idiv
mul
mov
and
out
mov
or
stos
dec
jb
aaa
sub
dec
call
mov
xor
jnp
xor
dec
lock
rol
shr
mov
call
imul
es
nop
add
ret
mov
dec
addr16
call
inc
sbb
in
pop
or
out
ret
adc
xor
leave
mov
dec
mov
shl
fdiv
adc
push
add
push
dec
outs
fldenv
loop
bound
jnp
push
pop
stos
pop
retfw
xchg
cwde
hlt
test
pop
or
mov
sar
stos
out
lods
movs
xchg
jge
push
pop
and
out
xchg
mov
pop
ret
cmp
mov
dec
popf
js
push
mov
jp
rol
add
lds
test
sbb
lds
push
les
loop
sbb
and
shl
outs
cmps
arpl
mov
loopne
xchg
add
mov
xchg
into
jecxz
lahf
or
cli
sbb
xchg
fs
add
sub
push
rol
imul
js
aad
cld
shl
scas
jbe
(bad)
pop
or
fidiv
jno
call
jmp
addr16
in
dec
xlat
xchg
clc
fwait
xchg
rcl
xor
jnp
(bad)
jno
mov
and
add
fsub
das
cmp
adc
movs
and
es
out
inc
pop
ins
repnz
daa
(bad)
cmp
nop
out
popa
inc
add
jp
sti
jne
dec
sahf
test
call
iret
add
ins
stos
mov
(bad)
ss
adc
cmp
test
jmp
std
mov
in
or
jb
xchg
jnp
sub
nop
lock
cld
fcomp
imul
sbb
add
or
scas
dec
ror
pushf
lods
imul
xor
mov
xchg
mov
mov
addr16
dec
inc
mov
out
sar
pop
lods
ret
jne
adc
inc
in
lods
icebp
pop
jno
dec
sbb
and
js
mov
emms
mov
jne
call
movs
lock
jle
cmp
int3
(bad)
and
add
data16
ja
push
outs
xor
ds
sub
shl
lds
(bad)
dec
mov
cmp
jbe
inc
xlat
inc
adc
cli
or
jbe
push
cdq
in
dec
and
and
mov
movs
loope
hlt
nop
and
dec
push
push
pop
dec
or
and
mov
lahf
imul
pop
mov
fisubr
mov
aad
jbe
push
push
jnp
sub
sub
fadd
rol
inc
adc
shr
xor
inc
pop
int3
lods
ins
push
jb
jg
jmp
cld
add
dec
test
ins
mov
pop
imul
adc
pop
cmp
fstp
xor
bound
daa
out
sti
gs
inc
repnz
fsubr
xchg
fimul
pusha
adc
in
in
pop
sub
xor
and
lock
mov
cdq
test
add
xchg
stos
cs
inc
mov
xchg
sub
rol
fcmovb
ins
xor
gs
addr16
rol
lahf
outs
pop
jle
je
mov
and
les
and
jp
xor
addr16
call
mov
adc
jge
cs
in
push
lock
loop
(bad)
jp
sub
(bad)
dec
out
jp
pusha
sbb
push
push
pop
(bad)
mov
dec
mov
cmps
or
push
or
cld
imul
mov
in
xchg
test
push
call
inc
fadd
mov
test
gs
xor
jmp
dec
adc
lahf
fisttp
mov
cmp
sub
push
iret
rcr
cdq
lahf
loope
jo
cmc
(bad)
sahf
mov
sbb
cmps
sub
dec
bound
cmp
imul
retf
sub
int3
or
add
(bad)
mov
cmps
fiadd
repnz
(bad)
inc
clc
js
por
xor
and
jns
mov
mov
push
cmps
ret
pop
mov
dec
mov
xchg
and
jne
xor
repz
push
cwde
mov
ret
out
dec
sub
dec
jg
push
arpl
ins
sub
loopne
(bad)
jnp
cmp
data16
jo
sub
push
jnp
pop
fisttp
mov
mov
mov
call
fcom
push
outs
ret
in
cmp
inc
fmul
add
gs
ficomp
clc
sti
mov
or
jecxz
pop
pusha
std
inc
dec
inc
mov
jmp
icebp
jmp
retf
cmp
and
pop
cdq
push
add
mov
test
lea
inc
cmp
jle
ins
std
shl
pop
cmp
mov
xchg
in
out
add
icebp
idiv
fstp
shr
pop
push
cmp
jecxz
imul
xchg
xchg
fisttp
mov
ja
push
retf
cs
les
mov
adc
scas
aam
mov
in
ins
pop
je
push
outs
mov
xor
pop
and
iret
cli
retf
shr
xor
mov
xchg
push
cwde
cmp
adc
ret
ins
imul
psubsb
mov
inc
in
inc
fst
mov
fwait
std
stos
es
ret
shl
mov
cld
les
ins
ss
leave
jne
xchg
movs
pop
shr
bound
xchg
(bad)
bound
cli
adc
or
xchg
push
(bad)
cmp
adc
jle
xlat
jae
in
lds
out
leave
xor
fs
test
repz
out
push
mov
xchg
adc
jbe
mov
inc
pushf
pusha
sub
dec
in
sub
mov
inc
stc
dec
mov
xchg
ret
sti
lock
xchg
shl
call
stos
test
xchg
lock
cmp
jae
pop
xor
clc
pop
mov
jae
mov
pop
test
push
or
stc
(bad)
(bad)
push
and
xchg
fs
jbe
ret
(bad)
cmp
jbe
push
call
out
cmp
icebp
pushf
dec
popa
mov
dec
and
fidivr
and
(bad)
jb
mov
push
(bad)
jg
iret
cli
movs
and
sbb
(bad)
scas
mov
repz
push
in
jo
scas
das
push
repz
or
daa
aas
pop
aas
cmp
test
fld
pop
push
(bad)
lea
add
fadd
push
xor
sbb
inc
cmp
sub
jmp
cwde
aas
cmp
jg
and
push
aam
jecxz
out
add
and
mov
adc
dec
rcl
pop
(bad)
mov
stos
mov
xor
out
pop
adc
fnstcw
cli
stc
mov
cmp
dec
jne
ja
push
push
lds
call
cwde
add
ss
(bad)
sti
push
je
into
xchg
push
ins
clc
push
(bad)
cmc
xor
add
mov
fisubr
add
fld
ds
adc
jmp
xlat
xchg
sub
stos
(bad)
rcl
aad
xor
sub
hlt
sub
(bad)
fadd
cdq
call
in
xchg
in
pop
call
dec
test
dec
lods
jge
or
es
push
in
retf
dec
inc
mov
ins
push
and
gs
mov
mov
or
lock
jl
shl
jmp
loopne
call
jns
pop
xchg
mov
je
inc
std
std
ret
std
add
and
push
xor
sub
arpl
cmp
add
dec
push
fsubr
ja
adc
mov
jmp
push
shr
out
sub
(bad)
cmp
sahf
lds
fwait
inc
loopne
outs
jmp
int3
ret
shr
int3
popa
mov
mov
push
sahf
push
sub
sar
xchg
scas
inc
pusha
xor
test
sbb
cdq
add
int
sbb
popf
inc
xor
jle
xchg
hlt
adc
in
pop
out
loopne
jmp
adc
pop
(bad)
aam
adc
inc
sbb
cmp
dec
or
mov
xor
fdivr
arpl
ss
adc
scas
fwait
mov
push
sub
inc
xlat
cmps
xchg
mov
mov
test
sub
pop
add
mov
mov
out
bound
ror
(bad)
lods
sbb
push
movs
movs
push
out
xor
aaa
mov
jnp
xor
in
cmp
pop
or
ret
cs
inc
pop
popa
jbe
imul
in
loopne
add
xchg
js
bound
jle
cwde
imul
jnp
mov
sar
xor
sbb
bound
jo
pop
sub
cmps
sub
aas
sub
rol
adc
jae
int3
daa
dec
push
inc
in
sbb
push
lock
fldcw
push
movs
dec
or
inc
in
fldcw
pop
jae
sub
jmp
outs
mov
pop
rcr
ins
aam
fidiv
into
fldenv
jmp
jo
(bad)
(bad)
pop
sub
xor
adc
shl
not
mov
xchg
repz
add
test
mov
and
cmc
pop
fnstsw
pusha
jl
stos
and
lock
adc
and
cmp
dec
dec
jbe
addr16
mov
inc
fst
je
adc
mov
mov
add
push
xor
fcmovnbe
sub
cmp
pop
rcl
gs
fild
ror
push
push
arpl
adc
aam
mov
adc
xchg
loopne
es
int
mov
mov
rol
cmc
jae
dec
shl
push
stos
xchg
mov
ss
enter
sub
inc
icebp
mov
popa
ds
shl
shl
in
or
retf
daa
jns
ret
movs
lds
(bad)
jne
mov
xchg
inc
dec
dec
sti
pop
daa
(bad)
jo
sub
jmp
cs
push
lods
aad
cmp
push
retf
or
or
enter
dec
pusha
jp
mov
rcr
or
movs
pushf
in
pop
jno
loopne
adc
jns
lahf
inc
add
inc
inc
jae
mov
dec
cmp
adc
repz
sahf
fst
out
mov
mov
jmp
jl
mov
mov
arpl
pop
sub
push
push
or
fdivr
std
cld
jne
mov
xor
hlt
lods
aad
es
or
arpl
xchg
mov
mov
ss
cmps
push
out
jmp
pop
push
pushf
push
xor
inc
adc
or
imul
lods
mov
fiadd
dec
mov
into
add
push
mov
or
xor
push
cdq
fadd
inc
jge
add
push
jno
mov
pop
out
test
jae
test
mov
mov
push
loopne
repnz
sbb
ret
and
ja
div
sbb
jge
sub
(bad)
xchg
sbb
xchg
std
sbb
add
sub
inc
jns
loop
and
mov
outs
dec
and
arpl
div
inc
imul
adc
cli
adc
pop
pushf
and
add
mov
jmp
adc
xchg
mov
movs
xlat
imul
mov
sub
jae
pop
ss
into
div
mov
mov
pop
leave
ficom
stos
lods
or
xchg
fld
ss
movs
das
and
fisttp
das
adc
pop
loope
xchg
lods
sub
and
mov
fisub
sbb
cld
(bad)
adc
jp
call
xor
push
sbb
push
cli
xor
pop
aaa
out
inc
and
and
aad
neg
les
cmps
push
loop
cwde
shl
dec
das
pop
cmp
sti
aaa
into
push
outs
sti
pop
pop
pop
xor
sti
(bad)
push
push
mul
xchg
addr16
pop
test
and
jns
cmp
mov
jns
call
xchg
ja
inc
int3
and
ds
loop
shl
nop
ins
inc
repnz
or
pop
and
sahf
jne
in
sbb
adc
push
rcr
jmp
clc
cmc
xchg
push
inc
jmp
aas
add
cld
nop
fnstenv
push
sub
ins
icebp
xor
and
xlat
cmc
stos
xchg
mov
(bad)
jo
(bad)
xchg
outs
out
daa
aam
fucomip
cld
adc
stos
imul
sbb
addr16
rcr
jnp
push
cmp
mov
pop
inc
push
and
sub
fadd
add
fadd
sbb
lahf
pop
neg
pushf
pop
cmp
das
hlt
rcr
pushf
ret
xchg
je
and
mov
test
xchg
jmp
jne
shr
xchg
fisttp
adc
imul
inc
mul
adc
sbb
sahf
aad
lods
(bad)
imul
cs
push
push
ja
mov
pushf
mov
mov
xchg
jg
in
add
fld
popa
mov
out
mov
push
cmp
imul
clc
pop
imul
js
out
xor
leave
aaa
cmp
rol
jecxz
xor
xchg
jle
push
loop
call
outs
adc
jmp
xor
mov
pusha
cli
imul
lea
mov
xchg
test
les
jnp
fstp
lock
(bad)
cmp
(bad)
retf
mov
push
xchg
dec
stos
fstp
mov
popa
pop
cli
dec
mov
mov
je
inc
fs
(bad)
stc
out
cmp
mul
(bad)
fiadd
sti
cmp
js
ds
xor
pop
and
xchg
rcr
xchg
shl
int
mov
test
jge
mov
or
(bad)
mov
xchg
mov
or
mov
jl
out
xchg
(bad)
outs
mov
test
adc
pop
and
arpl
mov
pop
fbld
cmp
cld
sbb
mov
lods
mov
fnclex
in
clc
and
gs
xchg
mov
repnz
sahf
call
jb
out
es
mov
ret
and
sub
lods
lods
nop
pop
fsub
dec
push
mov
ss
add
pop
mov
cmp
sub
clc
xchg
ins
lods
aaa
sub
jp
push
inc
sub
adc
push
ret
mov
adc
arpl
sbb
movs
sub
push
(bad)
out
fwait
addr16
in
mov
xor
aad
jmp
pushf
sbb
inc
lock
inc
movs
repnz
inc
mov
push
sbb
push
mov
and
lahf
fld
cmps
sti
outs
mov
push
(bad)
or
sub
push
jb
mov
fldenv
sub
pop
loop
rcl
aas
add
pop
jns
xor
fsub
test
loopne
sub
fidivr
push
xor
adc
in
mov
inc
ins
repnz
adc
jg
mov
call
inc
scas
das
mov
and
inc
push
or
fcom
sub
add
jo
loope
div
imul
xor
data16
data16
fadd
pop
das
in
xchg
jl
shr
jmp
clc
outs
add
in
or
xlat
mov
xchg
lods
jle
cmps
in
outs
imul
sahf
les
clc
jle
add
fnsave
push
scas
xchg
and
xchg
fist
xor
scas
into
es
push
adc
out
ja
cdq
ficomp
(bad)
enter
dec
sub
or
clc
scas
fnstsw
cmps
jmp
mov
cmps
sub
add
mov
or
call
lock
cmp
inc
mov
out
pop
cmp
jns
(bad)
retf
mov
or
fs
cs
mov
mov
sahf
xor
push
sar
jle
pop
sub
dec
ret
pop
inc
or
pop
jecxz
sub
jmp
in
inc
push
arpl
cld
xchg
or
adc
xor
in
ret
popa
lods
jae
ret
sub
jecxz
test
cmps
sbb
push
sbb
mov
frstor
add
pop
cld
cmps
sbb
push
movs
cli
cmp
stos
test
bound
popa
lds
ins
add
mov
arpl
push
push
(bad)
arpl
aam
dec
daa
cmp
dec
dec
mov
nop
lock
stos
call
jmp
ss
(bad)
(bad)
ss
xchg
add
mov
mov
xlat
or
and
mov
push
sbb
pop
mov
mov
rcl
mov
mov
std
push
adc
hlt
pop
nop
ficom
jp
push
rcl
(bad)
or
out
add
mov
iret
cmp
adc
inc
add
cmps
push
add
repz
shr
push
out
jnp
mov
sbb
push
addr16
pop
push
sbb
repz
sbb
test
inc
fnsave
test
jge
sar
cs
xchg
in
aas
jl
mov
jmp
fld
adc
movups
push
pop
mov
mov
xor
pop
jnp
ret
loop
sbb
fwait
inc
ins
outs
aas
fistp
cdq
imul
rcr
fcom
nop
fcom
lock
sbb
test
out
push
outs
in
mov
mov
aaa
pop
aas
ret
inc
ds
out
push
adc
mov
add
add
icebp
and
std
retf
out
sbb
stos
fsub
retf
mov
clc
unpckhps
lahf
jmp
fidiv
jnp
cmp
sub
mov
mov
xor
push
stc
inc
inc
or
mov
push
sub
sbb
jns
lahf
cmps
test
push
int3
lea
mov
out
cmp
adc
adc
push
inc
aad
adc
fnstcw
inc
imul
xor
ret
or
mov
mov
(bad)
(bad)
data16
jbe
stc
pop
pop
stos
aas
dec
pop
cwde
es
pop
dec
retf
sysret
mov
ret
sub
ror
dec
pop
sahf
pusha
jge
in
inc
ins
cmp
push
(bad)
sbb
sub
adc
jne
or
xchg
int3
cmc
or
fsubrp
cld
or
xor
ret
push
sbb
out
int3
ja
cdq
addr16
mov
enter
fs
add
xchg
jmp
clc
push
bound
add
mov
fistp
sbb
ss
out
xor
pop
sub
ds
(bad)
loopne
cwde
mov
fild
aad
cli
and
call
cld
dec
pop
sbb
jns
cmp
cmp
sbb
lods
in
in
ficom
lahf
xor
xchg
sub
fisub
cdq
push
sub
stc
inc
mov
mov
(bad)
gs
jae
xor
int
out
neg
or
push
cmp
fdivr
int
jnp
(bad)
jnp
and
lea
movs
jmp
push
jmp
hlt
fs
mov
mov
sti
data16
mov
rcl
stc
gs
mov
call
mov
scas
inc
mov
shrd
pop
sbb
push
mov
fldenv
mov
shr
ucomiss
xchg
test
mov
loop
or
lods
rcl
mov
movs
icebp
call
in
bound
fs
mov
xchg
lods
and
inc
pusha
dec
cmp
jmp
jns
cmps
dec
out
cmps
call
inc
mov
test
int3
sub
mov
mov
push
fld
dec
mov
add
es
lds
jg
pop
nop
jl
jmp
xchg
dec
in
mov
and
and
dec
adc
inc
jmp
and
cmp
jmp
sbb
and
cmp
mov
lds
test
jge
push
sti
sbb
das
shl
jp
hlt
and
add
jl
add
mov
pop
cmp
aas
cmp
in
jp
xchg
sbb
pop
or
clc
shl
dec
cmp
(bad)
pop
movs
fst
mov
shl
and
sbb
sbb
push
movs
push
dec
or
repnz
js
cmp
mov
xor
sti
or
sahf
lock
rcr
scas
cmps
jb
inc
or
imul
daa
je
imul
shl
and
xchg
pop
and
call
mov
sti
int
add
test
shl
pop
fidivr
loopne
lea
dec
repnz
add
mov
cmps
cdq
cmp
retf
mov
mov
scas
das
or
jmp
es
push
cld
addr16
xchg
cmp
pcmpeqb
sub
cmc
adc
inc
dec
call
cmps
pop
lock
int
pushf
push
cli
mov
cwde
jg
cmp
and
inc
addr16
pop
mov
jno
out
mov
(bad)
ins
repnz
push
ret
sbb
dec
call
mov
loopne
mov
outs
test
(bad)
jl
cmps
pop
xor
hlt
pop
jmp
imul
lea
stos
sbb
xor
xchg
and
inc
ss
ds
scas
pop
fist
jecxz
mov
xchg
in
inc
or
mov
cmp
popf
pop
pop
data16
cmps
daa
retf
jecxz
fsubr
fcomp
push
outs
out
hlt
sub
push
add
adc
or
pushf
sbb
pop
out
fidiv
retf
mov
mov
test
in
hlt
inc
repnz
ja
pop
or
xor
sar
mov
cmp
mov
dec
(bad)
jb
pop
mov
mov
pop
inc
and
cmp
fsub
std
push
into
repz
jecxz
das
mov
inc
mov
sub
cmp
mov
out
leave
adc
pop
daa
iret
cli
jecxz
push
mov
dec
mov
mov
xchg
push
mov
nop
pop
mov
mov
add
sub
pop
xor
mov
push
mov
movs
int
jmp
(bad)
pop
(bad)
pusha
add
sbb
shl
sbb
mov
into
loope
dec
inc
and
mov
add
cmps
push
scas
lahf
push
sub
mov
cmp
or
into
and
push
or
adc
jge
mov
add
inc
int3
xchg
int3
nop
mov
jmp
lods
dec
jge
pop
loope
mov
push
jae
pop
xor
push
xchg
mov
dec
int3
mov
sub
jmp
mov
mov
mov
popa
arpl
mov
cmp
test
das
fbstp
(bad)
sub
cld
adc
dec
cmps
push
fstp
mov
push
ror
xor
mov
jge
mov
or
or
(bad)
idiv
cs
push
fld
das
retf
(bad)
sti
add
imul
inc
arpl
inc
sub
mov
inc
es
jl
mov
push
test
xchg
mov
out
mov
dec
retf
sub
dec
enter
in
mov
mov
rcl
repz
sbb
push
inc
addr16
jle
cwde
push
loope
push
dec
push
ins
test
add
cmps
push
popf
daa
mov
test
mov
cmp
clc
xor
pop
jmp
movs
clc
mov
sahf
mov
test
push
jae
add
ja
out
jo
aad
mov
movs
xor
cmp
ror
xor
ds
or
enter
adc
gs
and
or
sub
pusha
setnp
ret
scas
shl
jge
imul
fst
push
imul
xor
cmp
pop
mov
and
scas
xor
popf
cmp
daa
test
imul
inc
idiv
xchg
pop
add
adc
add
(bad)
popa
in
fld
cmp
lds
add
ds
jl
les
ss
xchg
enter
daa
mov
mov
cwde
xchg
ja
retf
sti
scas
pushf
sub
rcr
xor
ja
pop
call
add
fiadd
lds
cli
xlat
jl
mov
mov
mov
aam
dec
mov
mov
sbb
cmp
sbb
add
stos
cmp
jg
dec
pop
loope
fsub
and
popa
pop
add
pop
aas
cmp
int
mov
cmc
cmc
sub
or
jge
cmps
aas
add
sub
jne
cld
cmps
repz
mov
adc
mov
push
jnp
pop
dec
(bad)
mov
ins
fiadd
aas
mov
lds
xchg
pop
sbb
dec
cmc
add
lea
sbb
ss
shl
inc
jbe
scas
iret
stos
sar
xor
jecxz
sub
les
or
xor
pop
minps
sub
js
pop
ret
adc
pop
jle
dec
jbe
pop
popf
sbb
rcr
(bad)
arpl
xor
int
(bad)
int3
ret
loope
jnp
xchg
mov
add
adc
mov
xor
enter
jmp
xor
push
pop
sbb
ret
js
dec
scas
loopne
test
arpl
dec
ins
cmps
into
imul
sub
sub
je
int
mov
int
sbb
pop
imul
and
pop
das
scas
imul
mov
(bad)
push
daa
lds
add
cld
add
test
sbb
cld
repz
or
or
dec
push
cmps
sbb
call
es
cmps
ror
shl
fadd
pop
in
(bad)
in
mov
pop
sbb
int
or
add
ss
leave
cmp
push
sbb
mov
xchg
call
push
push
nop
jno
out
add
enter
pop
test
push
sub
lods
or
sahf
out
ror
in
shl
dec
push
in
push
xlat
(bad)
retf
mov
pushf
shl
jl
out
mov
pop
pop
aaa
dec
jg
sbb
mov
jbe
test
jo
std
sub
mov
enter
fnstsw
xchg
xchg
cmp
mov
and
cwde
fwait
addr16
mov
xchg
nop
sbb
inc
dec
push
aaa
cmp
sub
jmp
cld
daa
mov
push
arpl
pushf
dec
adc
cmp
mov
xchg
jae
nop
jns
mov
repnz
stc
xor
pushf
lds
cli
rcl
adc
add
xor
rol
ror
jns
aam
test
mov
jnp
pop
jne
mov
aaa
imul
in
cmp
shl
test
(bad)
pop
and
test
or
dec
pop
punpckhwd
jno
mov
dec
sbb
lods
(bad)
or
sahf
loopne
dec
add
sahf
cmps
jns
jmp
xor
jmp
call
xor
mov
or
push
adc
and
cdq
hlt
adc
retf
jmp
pop
add
or
iret
or
lock
dec
lods
mov
pop
sub
adc
and
pop
inc
xor
sub
fwait
sbb
push
pop
and
call
xchg
mov
or
les
(bad)
fcom
mov
mov
pop
fld
movs
cwde
mov
loope
push
jmp
xchg
mov
fdivrp
jl
cwde
fidivr
xor
cmp
neg
cmp
call
xor
and
inc
dec
dec
push
cmp
inc
stos
(bad)
iret
std
retf
dec
js
outs
pop
xchg
mov
ret
ins
(bad)
push
dec
pop
shl
retf
test
mov
loopne
jne
ret
enter
sub
inc
inc
lods
imul
xchg
xor
stos
stos
retf
adc
scas
fild
ficom
clc
shl
icebp
cmp
popf
(bad)
fadd
adc
xor
gs
xchg
aaa
pop
iret
xor
ds
retf
test
xor
gs
ret
call
cmp
xor
push
mov
outs
push
clc
leave
dec
jmp
imul
addr16
ret
pop
ror
out
repnz
ss
push
xor
sbb
pop
in
cld
and
push
jbe
movs
cs
icebp
add
xlat
retf
(bad)
and
dec
xchg
or
pop
push
into
inc
mov
cs
xor
test
xor
lea
aam
jg
cmp
call
cmp
loop
and
adc
xor
xchg
shl
loop
fld
movs
ss
add
jmp
jp
inc
cwde
add
in
inc
inc
push
ins
mov
inc
stos
pop
or
mov
and
xchg
and
and
inc
dec
lods
sub
retf
daa
dec
into
std
inc
xor
inc
push
adc
in
jnp
inc
mov
daa
loope
stos
punpckhbw
test
push
or
inc
xor
push
stc
cmp
ins
add
test
xlat
test
or
mov
into
mov
sti
imul
stc
retf
into
pop
inc
fistp
dec
xchg
push
stc
xchg
push
pop
add
xor
jmp
inc
test
sbb
fwait
dec
adc
cmp
popf
or
jnp
mov
out
pop
stos
push
xor
cmp
test
fisttp
out
add
fwait
and
xchg
mov
outs
aas
cmp
clc
fst
dec
push
bound
sbb
mov
jbe
mov
dec
or
adc
and
in
mov
xchg
inc
int
dec
ror
pop
push
sbb
retf
addr16
std
adc
mov
test
inc
mov
cmp
and
or
daa
xchg
aad
sti
xchg
ret
pushf
mov
iret
and
push
mov
retf
pop
jns
push
pushf
and
(bad)
fldenv
sbb
pop
adc
xor
movs
js
sub
pop
inc
je
sub
mov
adc
inc
out
pop
sahf
push
es
mov
xchg
(bad)
popa
ret
push
stos
retf
dec
ins
jge
pop
aaa
mov
xchg
outs
fstp
out
shl
or
lea
mov
mov
out
sbb
stos
lahf
inc
mov
lods
pusha
and
stos
fsubr
std
push
mov
adc
arpl
xchg
mov
pop
jno
dec
sub
arpl
repz
out
sbb
sub
cwde
iret
ret
inc
das
data16
movs
fsubrp
mov
ja
push
add
ins
arpl
test
pop
adc
aaa
pop
and
bound
add
inc
nop
cmc
inc
nop
daa
dec
lahf
and
xchg
inc
aad
sub
push
xchg
dec
mov
mov
jb
bound
sbb
jne
(bad)
clc
retf
int
or
pop
inc
xchg
pushf
cli
scas
adc
lahf
push
(bad)
iret
pop
and
jae
retf
mov
add
and
adc
retf
jb
push
es
je
es
cs
xor
sub
and
sar
cdq
es
jmp
cmps
std
shr
push
stos
das
sbb
pusha
enter
xchg
enter
(bad)
xchg
ret
add
mov
xor
fistp
and
dec
sar
xor
lods
fneni(8087
xchg
loope
out
dec
enter
enter
jae
aam
inc
sahf
add
pop
add
pop
ins
int
in
xor
cmp
dec
adc
les
mov
scas
les
jbe
sbb
stos
fadd
idiv
pop
mov
mov
nop
mov
idiv
cmc
call
xchg
test
ret
adc
cmp
pushf
inc
add
retf
ss
retf
and
sbb
mov
inc
mov
cmps
js
pop
dec
sub
out
icebp
sub
cdq
aad
jmp
out
ins
push
mov
or
shr
test
dec
lods
fnstenv
pop
push
(bad)
shl
mov
test
lods
lds
xchg
mov
inc
js
outs
pop
mov
jmp
(bad)
in
cmp
shr
push
jle
sub
(bad)
in
(bad)
jo
shr
aad
popf
inc
jle
push
test
jge
call
xor
and
xchg
xor
dec
dec
mov
adc
or
comiss
jecxz
mov
retf
scas
cmp
leave
clc
(bad)
loop
repz
(bad)
jns
mov
sahf
and
nop
and
add
fdivr
scas
mov
xchg
mov
and
inc
ins
fsub
add
xchg
lods
jp
mov
lahf
inc
icebp
jbe
repnz
sub
pop
xchg
scas
cld
popa
mov
mov
pushf
sub
sbb
rcl
push
outs
cmps
jnp
repnz
jle
adc
push
pusha
mov
push
jmp
mov
xor
pop
loop
(bad)
jl
bnd
add
cmc
push
push
and
jno
bnd
inc
std
xor
outs
xchg
inc
push
add
inc
aaa
dec
sar
push
enter
outs
or
js
mov
sti
popf
xchg
adc
and
pop
inc
lods
mov
mov
jge
jp
ins
(bad)
adc
fisttp
pop
mov
call
cwde
pusha
test
and
dec
std
sbb
mov
lods
test
xchg
retf
jb
loope
xchg
fisub
mov
fsub
std
xchg
bound
pushf
ds
test
add
div
cld
jno
adc
mov
scas
sub
or
jb
adc
jno
mov
jg
popa
mov
lds
add
pop
mov
aad
fidiv
or
jns
shl
adc
call
jmp
in
nop
jns
fsqrt
cmp
(bad)
loopne
cmp
mov
and
sbb
mov
pop
xchg
aad
cs
xchg
movs
mov
(bad)
call
mov
pop
xchg
sahf
sbb
xchg
dec
rcr
fdiv
or
mov
adc
shl
out
je
mov
clc
cld
aad
rcr
or
push
div
pop
bound
jle
mov
arpl
fbstp
in
ret
pop
push
mov
pop
data16
loope
retf
ins
(bad)
pop
fs
pop
pop
cmps
hlt
pop
adc
jnp
popa
dec
xchg
pop
add
jmp
jecxz
push
and
mov
push
mov
pop
sbb
loopne
sub
and
mov
fcmovne
xor
sub
movs
fimul
arpl
xchg
ficomp
(bad)
cli
loope
das
sub
repnz
mov
add
ret
mov
add
mov
adc
push
mov
cmp
jbe
mov
test
add
push
out
arpl
dec
push
pop
ss
adc
dec
aad
mov
mov
std
mov
xor
call
cwde
jnp
jp
pop
and
rol
fiadd
and
imul
dec
mov
cmp
mov
adc
or
and
jmp
loopne
adc
cmp
sub
jp
out
sbb
(bad)
and
xor
mov
jg
push
pop
out
inc
and
ins
jg
je
imul
mov
push
enter
fcmove
add
pop
in
jmp
into
sub
imul
cmp
call
retf
test
shl
cmp
xchg
fdiv
lods
ja
xchg
je
test
push
mov
ret
cs
mov
ret
xor
add
std
mov
xor
sub
pop
push
xor
fidiv
cld
leave
jle
mov
jg
test
push
push
mov
shl
movs
cmp
sub
ficom
cld
ficom
mov
daa
sbb
or
and
rcr
shl
or
sar
test
mov
out
fwait
je
test
xchg
imul
in
push
sub
mov
call
cmp
aas
popa
sub
sub
sub
dec
push
ror
push
scas
push
xor
fisttp
cmp
sbb
mov
xor
adc
xlat
stos
fwait
sub
mov
push
rcl
test
xchg
fimul
les
sbb
jne
mov
sbb
div
arpl
jo
test
fld
(bad)
mov
aad
mov
or
cdq
xor
push
jb
mov
mov
clc
dec
int
pop
dec
or
hlt
sbb
sub
push
aam
cld
push
dec
cwde
push
inc
(bad)
fnstsw
dec
test
shr
das
mov
mov
loope
xor
xchg
out
out
push
stos
xchg
pop
mov
pop
pushf
jmp
jo
adc
push
loope
adc
fisttp
outs
rcl
xor
adc
xor
mov
push
cli
repz
mov
or
les
and
int3
neg
out
mov
cmp
mov
sub
dec
fcom
or
mov
or
mov
std
fdivr
sub
fld
xchg
adc
jl
es
fmul
xor
mul
mov
adc
or
push
xchg
ds
std
popa
lods
sti
mov
or
xor
aam
push
sub
adc
xchg
pop
and
in
lock
add
das
scas
jo
inc
(bad)
clc
ja
dec
adc
pop
mov
jecxz
hlt
retf
iret
cmp
add
ret
lods
cld
sub
std
dec
pop
jne
repnz
daa
cld
cmp
loop
mov
xor
pop
fstp
pop
dec
push
jnp
sahf
mov
dec
in
adc
mov
mov
out
mov
cmp
stos
movs
repnz
sub
test
ds
arpl
into
and
rcl
stos
push
dec
ret
and
and
mov
fst
mov
cdq
mov
xor
mov
jge
js
(bad)
outs
or
push
mov
mov
pop
and
popf
movs
adc
jge
sahf
adc
outs
push
int
lds
and
push
add
leave
es
fistp
ds
jae
add
inc
sar
jl
gs
js
shl
xchg
or
inc
imul
gs
push
out
lods
mov
in
add
sbb
clc
push
sar
dec
dec
enter
mov
(bad)
jmp
xor
jnp
imul
and
mov
push
and
fcom
xchg
xor
rol
fs
push
adc
adc
mov
dec
(bad)
hlt
test
aas
xchg
adc
clc
mov
xchg
mov
sbb
neg
xlat
jmp
sbb
sbb
fidiv
cmp
pop
maxps
mov
dec
adc
aaa
cmps
sub
mov
ins
das
outs
sar
push
push
retf
out
mov
dec
cmp
jne
mov
dec
cld
outs
xchg
push
dec
mov
dec
cmps
movs
jb
and
imul
jecxz
jno
push
(bad)
rcr
ins
ror
shr
mov
pop
cdq
dec
or
lods
mov
sub
test
cmp
adc
sub
lods
xchg
jge
mov
scas
xor
shl
mov
leave
adc
(bad)
lock
bound
xchg
movs
or
mov
rcr
enter
cmp
js
pushf
lods
scas
(bad)
lods
out
mov
jae
sub
adc
dec
out
dec
outs
mov
cmp
mov
imul
mov
hlt
(bad)
jmp
sbb
das
aad
xor
jecxz
in
mov
push
and
addr16
push
push
ss
repz
rcr
dec
inc
sahf
mov
(bad)
leave
retf
mov
ret
stos
mov
retf
xchg
enter
cmps
in
xor
adc
jg
or
and
inc
hlt
mov
dec
xor
xor
jmp
push
stos
sbb
mov
outs
retf
pushf
and
test
retf
(bad)
mov
sub
(bad)
movs
hlt
lock
je
adc
das
dec
adc
cdq
loope
mov
mov
out
add
sbb
in
jp
ja
scas
call
xchg
add
(bad)
mov
inc
test
cmp
pop
(bad)
lods
ret
cmp
xor
add
push
push
aas
lea
dec
or
and
sbb
mov
popa
movs
xor
sbb
inc
lahf
mov
adc
sahf
lock
out
xchg
dec
sub
jg
sbb
jmp
jg
push
jae
and
cld
jg
pop
ret
popa
hlt
mov
aaa
jno
jb
mov
rcl
jbe
push
jo
stos
xchg
outs
sbb
adc
cs
mov
stos
out
mov
add
shl
xor
sbb
sub
and
xor
leave
out
mov
xchg
and
sub
mov
or
cmp
pushf
cli
fs
gs
lds
xchg
mov
or
dec
(bad)
daa
sub
xchg
mov
sbb
inc
pop
test
lock
lock
jo
inc
sub
lods
fst
dec
add
gs
jne
xor
lods
xlat
shr
test
call
jge
not
mov
test
inc
and
sub
cli
out
jo
adc
enter
sub
or
dec
push
ficomp
arpl
(bad)
neg
or
sbb
mov
stos
push
sbb
ss
fadd
mov
pushf
xchg
js
dec
stc
cs
cmps
and
fnsetpm(287
shl
mov
aad
adc
in
push
out
jmp
cmp
aas
xor
shr
cmp
aas
div
mov
mov
pop
movs
in
clc
fwait
mov
pop
mov
ja
sbb
aas
sbb
fdiv
jnp
sbb
loope
cli
arpl
(bad)
pop
jp
add
outs
bound
(bad)
stc
mov
mov
in
push
sbb
int
mov
inc
mov
fidivr
mov
mov
sti
jb
test
out
int3
pop
loopne
cwde
out
xor
call
sbb
fidivr
std
fldcw
mov
cmp
icebp
push
xlat
sbb
fistp
and
or
mul
pop
or
fisub
pop
adc
jmp
push
leave
sub
sbb
fisub
sahf
pop
stos
popa
jnp
lods
test
loop
rep
fdivr
jb
call
inc
out
mov
cmp
push
stc
fcmovnb
ret
pop
arpl
rcl
std
je
frstor
cmps
ret
sti
push
adc
outs
pop
jp
mov
push
pop
mov
jecxz
cmp
adc
popf
jo
add
outs
mov
shr
aaa
dec
mov
mov
movs
add
adc
outs
(bad)
pop
and
aam
push
xor
arpl
(bad)
mov
(bad)
retf
cmp
jge
and
(bad)
(bad)
and
call
out
mov
pop
jmp
add
jle
out
or
push
dec
test
repnz
sub
neg
xchg
cdq
jl
add
or
pop
pop
add
pop
mov
shr
sub
clc
sbb
mov
test
and
push
add
sahf
inc
aad
pop
scas
(bad)
arpl
cmp
xlat
loop
div
aam
xchg
adc
or
in
lock
out
and
and
jl
push
mov
aaa
mov
je
les
ret
ret
addr16
cmp
sub
inc
arpl
sub
fcomp
dec
stc
push
fisttp
js
add
xchg
sub
ins
jno
out
or
mov
xchg
es
nop
mov
lea
cmp
xchg
retf
xchg
sub
jmp
jp
out
scas
mov
in
adc
and
cmps
icebp
and
cli
inc
scas
out
mov
jnp
dec
(bad)
adc
adc
sub
mov
(bad)
out
lods
repz
imul
sub
xchg
xlat
(bad)
outs
xor
cmps
scas
out
ja
push
out
(bad)
dec
sub
sbb
xchg
xchg
xlat
mov
sbb
jmp
jno
jmp
data16
mov
add
adc
cmp
jns
pop
ds
push
lock
cmp
(bad)
das
xor
push
cmp
fsubr
lahf
push
mov
mov
retf
in
push
xor
(bad)
mov
xlat
mov
cmp
mov
add
retf
fs
test
push
sub
jp
mov
cmp
loope
cmp
test
test
loopne
or
adc
dec
fucom
push
lock
fidivr
mov
mov
dec
js
dec
retf
into
dec
sbb
jae
(bad)
or
mov
sub
pop
int3
dec
and
jle
pusha
(bad)
out
(bad)
pop
and
and
mov
mov
test
cdq
ins
fstp
pop
repz
(bad)
loopne
mov
jge
test
pop
fsubrp
sahf
pop
lods
sub
or
xchg
cdq
inc
inc
mov
(bad)
sbb
xchg
data16
jbe
in
nop
inc
xchg
out
add
inc
or
fwait
add
xor
fwait
push
lahf
scas
daa
cwde
dec
and
(bad)
mov
add
mov
pop
mov
inc
mov
into
xchg
ds
pop
push
xor
mov
inc
out
sub
or
ret
pop
das
cmps
dec
pop
pop
jo
xchg
push
movs
pop
push
add
dec
out
jns
inc
adc
in
cmc
ins
aam
and
loop
xchg
(bad)
jl
jl
push
int3
sub
push
arpl
enter
gs
xchg
aas
add
push
mov
enter
mov
jle
shl
(bad)
loopne
sub
popa
pop
int
mov
sahf
jnp
and
mov
xchg
icebp
xor
xor
and
frstor
sub
and
out
jecxz
sub
(bad)
into
je
inc
outs
shl
sti
ror
push
rcl
inc
bnd
sub
xor
out
in
pop
sti
xor
das
jne
test
push
add
adc
fild
add
add
mov
jb
fiadd
add
test
pop
jecxz
into
mov
cmps
jg
cmp
movs
pop
sbb
sar
cmps
jle
sub
push
cmc
js
js
shr
xor
lds
cmp
cwde
cli
dec
bound
xchg
mov
xchg
enter
mov
ror
outs
mov
repz
in
adc
in
jecxz
pop
fwait
icebp
inc
int3
jl
call
aaa
loop
mov
out
sub
cmp
adc
imul
jns
pop
out
push
inc
mov
(bad)
hlt
xchg
pusha
inc
adc
push
les
and
mov
mov
add
pop
and
jp
das
xlat
arpl
gs
enter
fisub
out
push
sbb
lock
mov
retf
jg
sbb
and
stc
jno
xor
adc
pop
mov
cmps
or
mov
mov
mov
sub
pop
sbb
mov
das
clc
gs
mov
xchg
adc
or
aas
pop
gs
jecxz
or
ret
mov
mov
sub
arpl
adc
mov
sti
jne
repz
pop
push
fsubr
sub
xor
xor
scas
ret
add
in
inc
ror
in
cmp
mov
outs
or
outs
inc
cli
cdq
shl
push
pop
push
sub
lahf
aam
fild
out
xchg
clc
mov
fild
mov
dec
fmul
xor
mov
retf
dec
cmps
inc
xchg
fs
pop
(bad)
mov
(bad)
lahf
not
addr16
fwait
cwde
cld
pop
mov
aad
sti
in
(bad)
jmp
mov
cmp
dec
dec
sub
mov
icebp
mov
mov
mov
or
adc
lds
sub
jne
shr
repnz
adc
adc
mov
jmp
retf
lock
inc
out
cmp
push
(bad)
push
data16
mov
idiv
xor
jmp
icebp
test
inc
xchg
les
enter
ja
mov
push
xor
or
(bad)
fsin
sbb
mov
sti
sub
ret
loope
cmp
and
(bad)
(bad)
cmc
jle
clc
inc
or
test
test
cdq
xor
ins
jle
(bad)
dec
inc
add
aaa
pop
mov
fs
daa
fimul
mov
dec
mov
pop
loopne
les
dec
mov
adc
xor
bound
mov
(bad)
out
xchg
dec
(bad)
sub
arpl
jae
xor
cli
bound
retf
jno
cli
icebp
jb
xor
cmp
lods
clc
jmp
hlt
fwait
pop
dec
sahf
test
push
mov
and
les
mov
lds
mov
imul
stc
unpcklps
mov
mov
stos
or
lock
iret
stos
mov
push
xchg
cmp
mov
cmps
das
inc
(bad)
xchg
fcomp
jle
cli
jge
pop
daa
sbb
jecxz
cmps
mov
mov
push
shr
push
push
in
ds
outs
jmp
repnz
inc
mov
cwde
(bad)
test
xchg
hlt
aam
sub
inc
sti
pop
mul
push
xor
ret
pushf
push
fwait
push
das
ds
in
dec
fwait
push
std
sbb
mov
ret
sub
rol
data16
mov
retf
cmp
in
add
jg
cmp
int3
call
dec
pusha
add
jns
pop
test
jns
jns
adc
xchg
or
lea
mov
mov
outs
add
(bad)
(bad)
pop
fimul
pusha
add
icebp
mov
pusha
sub
inc
scas
mov
fcomp
mov
mov
pop
mov
push
ret
add
sub
sub
cmp
sbb
clc
repz
sub
push
jecxz
jbe
or
nop
call
xchg
add
xor
loopne
movs
push
xor
inc
xchg
push
addr16
lock
push
dec
in
xchg
call
pop
(bad)
jmp
or
into
ins
xor
(bad)
movs
mul
jmp
sub
fs
mov
inc
xchg
(bad)
sub
in
jne
push
xchg
add
or
test
ret
rcl
pop
clc
jae
cld
(bad)
cmps
div
sub
shr
add
xlat
cli
imul
call
ss
and
std
(bad)
push
jl
xchg
adc
mov
pushf
in
scas
dec
(bad)
and
cdq
jnp
jg
cli
adc
cli
mov
sar
inc
jnp
in
jecxz
xor
add
in
inc
adc
cdq
and
mov
and
mov
push
data16
adc
sub
add
inc
pusha
push
movs
fsubr
scas
ret
dec
mov
pop
xor
or
bound
cmp
push
xor
mov
sub
add
loop
jle
mov
dec
xor
jmp
(bad)
sti
lock
cdq
test
stos
outs
inc
pop
es
jge
(bad)
nop
cwde
jns
fnstenv
mov
cmp
pop
add
outs
int3
adc
adc
push
popa
push
cmc
xchg
dec
sbb
and
xchg
mov
mov
leave
mov
mov
dec
xchg
sbb
adc
adc
gs
inc
shr
cmp
(bad)
push
ror
sbb
cmp
push
adc
sub
movs
mov
inc
test
jb
in
push
outs
test
cmp
test
cwde
stc
(bad)
jmp
or
leave
mov
dec
out
ja
and
sub
fs
mov
aas
scas
rcl
out
mov
mov
adc
or
or
inc
sti
add
sub
jecxz
mov
stos
mov
sbb
cmc
mov
(bad)
cli
xchg
xor
mov
mov
enter
jp
xchg
int
pop
(bad)
hlt
or
mov
loope
sub
mov
rcl
out
test
mov
outs
sbb
aaa
call
xor
xchg
sub
xchg
cmp
mov
test
ds
xor
mov
fisubr
mov
cwde
pop
sar
jo
(bad)
loop
int
and
int3
push
movs
into
adc
out
and
or
stos
out
xor
xchg
xor
mov
sub
inc
clc
pop
push
xor
push
xchg
out
adc
adc
jne
dec
adc
int
scas
and
into
adc
repnz
and
out
or
(bad)
jbe
xchg
pop
mov
lds
mov
push
fistp
pusha
mov
ja
sub
mov
pusha
mov
loop
sbb
or
ds
push
add
and
push
daa
push
cld
sbb
cmps
out
jnp
jl
lea
sbb
sbb
cwde
mov
xchg
dec
jae
mov
push
daa
int3
adc
repz
add
jecxz
pinsrw
ss
cmc
dec
dec
mov
test
leave
xor
retf
mov
test
shl
popf
adc
sub
ret
lock
jge
loopne
lods
add
shl
int3
loop
dec
pop
cli
adc
fisubr
call
ja
inc
sbb
mov
in
popa
inc
mov
lds
dec
cmp
out
leave
shl
cmp
cwde
mov
enter
mov
fcom
push
or
mov
clc
or
shr
inc
push
(bad)
push
retf
rcl
add
es
adc
ja
push
cmp
mov
fdiv
cs
cs
repnz
xchg
pusha
in
add
lock
fdiv
mov
jns
int3
mov
jo
rcl
sti
dec
out
pop
adc
loopne
cmc
inc
fisttp
outs
mov
frndint
pop
mov
call
out
mov
cmps
sub
sbb
fs
push
es
push
test
aaa
lock
lahf
ret
mov
daa
mov
add
mov
push
push
mov
lahf
gs
xor
cmc
jmp
ret
and
popf
dec
scas
in
aad
mov
push
inc
xchg
mov
xor
jnp
into
sub
adc
jo
bound
mov
pop
test
arpl
push
rol
out
les
xor
push
test
inc
fs
cwde
sbb
xchg
cmp
mov
fwait
inc
fnstcw
mov
pop
in
sub
cmps
(bad)
ficomp
test
inc
pop
cmps
sbb
bound
ins
jge
fwait
cwde
js
pop
sub
xchg
pop
pop
(bad)
and
fldcw
daa
ins
jno
mov
in
leave
sbb
leave
push
fisubr
or
fld
cmp
imul
(bad)
mov
scas
das
movs
loop
push
in
aam
lds
add
xor
ins
addr16
push
test
das
pop
cmps
aad
les
sahf
sbb
sub
cmp
outs
pusha
neg
and
jno
fistp
sub
test
sbb
or
out
ins
sbb
pop
outs
inc
js
mov
pop
bound
jg
ja
mov
rol
dec
adc
es
add
pop
push
call
pop
adc
sbb
adc
adc
jmp
mov
sub
fistp
jp
or
xor
jmp
nop
imul
sbb
hlt
ds
ins
arpl
mov
mov
out
daa
(bad)
int3
in
ins
jmp
cmp
sbb
aad
fsubr
movs
adc
mov
addr16
iret
cmps
xlat
stos
push
mov
sub
and
sub
sbb
mov
aaa
imul
and
cli
sbb
dec
jl
dec
sub
or
jb
jno
push
mov
data16
sbb
sub
iret
repz
dec
out
ins
sti
xchg
cmp
outs
xor
mov
and
int3
push
add
pop
xchg
and
ror
cdq
lock
jp
(bad)
lds
leave
adc
jl
jno
mov
push
push
stos
or
or
jns
mov
ficomp
jns
test
lea
test
mov
cmp
adc
xchg
xchg
imul
push
add
out
dec
int
fimul
adc
test
push
je
jl
pop
test
int
cmps
mov
inc
les
aam
movs
jp
nop
out
test
inc
int
push
sbb
dec
adc
clc
mov
loopne
mov
scas
or
pop
mov
push
sub
int3
pop
xchg
retf
cmc
lods
inc
xor
in
sbb
push
fld
add
adc
inc
ss
jp
jmp
xchg
add
js
pop
rcl
add
jge
or
xchg
jne
ja
das
xor
or
push
mov
push
cmp
inc
jbe
rcr
(bad)
jmp
pop
push
cmp
lahf
xor
je
test
out
pop
cmp
jmp
fild
loop
pop
(bad)
mov
cmp
sub
push
(bad)
mov
jb
ins
dec
adc
and
sbb
sub
lods
lea
loope
imul
mov
(bad)
test
daa
jp
jnp
jb
shr
lods
out
or
scas
or
std
dec
fidiv
data16
xlat
push
clc
inc
xor
sar
das
add
inc
inc
jb
cmp
(bad)
mov
lods
repnz
sbb
in
iret
add
les
xor
sub
mov
xor
push
push
xchg
xor
popa
bnd
icebp
inc
and
mov
out
out
aas
lods
push
pusha
mov
pop
fstp
aaa
dec
jmp
inc
js
js
inc
mov
outs
push
mov
out
inc
lods
movs
cwde
ss
push
or
mov
daa
loope
out
shr
popa
pop
xchg
mov
cwde
fldcw
dec
ja
sti
inc
enter
jmp
inc
mov
out
push
out
aaa
sbb
sbb
sub
ja
repz
stos
jns
das
sbb
xchg
push
fiadd
leave
mov
outs
popf
mov
inc
jae
add
jbe
pop
pop
mov
sbb
in
pop
cdq
xchg
sub
push
xchg
bound
or
inc
out
inc
in
xchg
add
in
js
jp
test
push
outs
adc
rol
push
jg
inc
mov
xchg
or
sti
and
pop
or
test
leave
movsx
or
dec
outs
or
xor
cdq
push
lods
pop
cdq
mov
or
test
mov
jae
adc
into
pop
or
stc
sbb
jge
stos
jg
movs
push
loop
sub
(bad)
sbb
xchg
inc
mov
sub
mov
mov
loopne
add
jae
(bad)
cmp
hlt
in
out
or
ins
(bad)
stos
jmp
call
dec
pusha
rcl
mov
adc
icebp
push
lahf
xchg
rep
in
mov
popf
dec
push
or
pop
sub
mov
not
int3
pop
(bad)
js
jl
add
push
xor
int
aad
dec
sbb
retf
adc
and
outs
ja
jmp
shl
lahf
jg
mov
scas
addr16
out
pop
imul
nop
inc
add
mov
ins
loop
ins
or
cld
(bad)
sbb
(bad)
das
aam
pop
call
xchg
ficom
(bad)
pop
cmps
xchg
rol
jnp
push
repz
push
movs
mov
jbe
pop
cmp
(bad)
mov
mov
ret
les
test
inc
jno
pop
add
or
rol
es
or
sahf
and
and
lods
outs
shl
cs
hlt
jecxz
test
jb
jecxz
add
jmp
addr16
mov
adc
jmp
sahf
add
jne
cmc
or
xchg
leave
cli
ret
(bad)
push
sti
add
test
js
inc
out
dec
pop
cld
jmp
fxch
pushf
mov
or
repz
rol
(bad)
adc
cmp
cli
jb
gs
mov
in
pop
loopne
pop
mov
inc
fisttp
or
inc
fist
sbb
fild
cmps
adc
xchg
or
or
push
add
xor
inc
test
stos
mov
ret
xchg
xchg
lock
rol
daa
lods
cmp
dec
dec
mov
icebp
jmp
jecxz
jp
fsub
rcl
pop
aad
jmp
mov
add
xchg
div
lods
pop
adc
inc
mov
pushf
push
rcr
rcl
retf
cwde
xchg
adc
mov
arpl
fld
cmp
scas
imul
mov
push
push
push
cmp
test
jno
xor
movs
xlat
inc
shl
ins
(bad)
cwde
dec
fiadd
ror
or
push
or
cmp
ficomp
xchg
cdq
sbb
pushf
lahf
pusha
and
sub
mov
sbb
and
mov
scas
and
mov
mov
jbe
out
push
imul
outs
jnp
ror
sub
push
add
and
in
cmp
or
dec
push
in
outs
mov
test
dec
jle
(bad)
cmp
push
and
push
fcmove
mov
jge
nop
(bad)
call
aas
scas
push
sub
cmp
mov
fwait
dec
mov
mov
push
lea
push
or
cmp
in
push
stc
arpl
pop
popf
jnp
pop
or
or
loope
retf
in
dec
lods
sti
jnp
scas
pusha
push
jl
push
mov
xchg
cmps
test
adc
mov
ret
and
(bad)
and
pop
lock
xor
lds
ss
xchg
xchg
xbegin
dec
adc
cmp
sbb
call
pop
nop
xor
jecxz
jno
(bad)
cmp
je
push
popa
push
inc
call
(bad)
rcr
mov
loop
test
xlat
mov
jl
dec
cmp
adc
(bad)
and
adc
outs
sub
sub
mov
push
cs
stos
arpl
fcmovnu
les
adc
cdq
rcl
lds
iret
pushf
jo
mov
enter
pop
or
leave
jo
retf
sub
sbb
jg
push
sbb
cwde
loop
and
dec
out
xor
sbb
xchg
jl
jae
xchg
fld
mov
aaa
inc
mov
fst
xchg
ror
sar
repz
ret
push
fidiv
xor
(bad)
in
inc
pop
(bad)
nop
inc
sti
mov
or
test
shl
cmc
cmps
int3
add
xor
push
mov
rol
or
pop
xchg
inc
outs
sbb
shl
jp
xor
push
ins
gs
das
inc
or
xlat
std
lods
fstp
test
push
sbb
dec
addr16
mov
push
stos
adc
in
cmp
test
pusha
dec
clc
push
(bad)
out
pop
scas
mov
adc
test
pushf
cmp
push
and
(bad)
out
mov
mov
add
sbb
push
fldenv
stos
fnstenv
jnp
clc
shr
pop
jle
int
pop
cmp
add
add
bswap
sahf
hlt
and
or
cs
popf
std
mov
sar
hlt
outs
mov
leave
mov
sub
ins
ficom
ficomp
pop
cmps
mov
fdivp
add
jge
jmp
les
adc
cmp
scas
mov
pop
mov
xchg
mov
and
fstp
js
ret
jg
sbb
inc
imul
clc
or
(bad)
sbb
cmps
add
push
sahf
in
xor
out
jbe
xchg
ins
test
stos
outs
mov
jmp
add
out
rcr
dec
fldenv
add
arpl
pop
dec
inc
test
out
dec
push
inc
ds
xchg
pop
push
xchg
pusha
dec
cwde
inc
popa
ins
lahf
stc
xlat
ins
push
imul
shl
add
xchg
arpl
and
(bad)
out
pop
retf
pop
jl
movs
push
cmps
imul
dec
pusha
mov
dec
cmps
popf
sub
aad
lods
out
pop
xchg
mov
xor
sbb
jmp
mov
nop
push
mov
jmp
adc
(bad)
fdivr
xlat
cmp
fistp
cmps
mov
loope
loopne
aam
in
or
shr
or
scas
dec
mov
pop
ret
push
dec
call
pop
xor
mov
sub
leave
ja
icebp
dec
stos
(bad)
jns
pop
les
mov
ficom
jnp
enter
add
xor
and
mov
scas
out
fisub
pop
or
aam
sbb
loop
push
imul
pop
mov
in
ds
test
xor
add
lahf
lds
mov
cmc
xor
dec
shr
mov
iret
mov
sub
retf
pop
stos
push
bnd
and
push
stos
sub
inc
mov
adc
xchg
xor
int3
shr
fnsave
cmc
push
into
or
dec
repz
lods
push
or
jae
gs
jnp
(bad)
aad
(bad)
mov
js
aas
fisubr
arpl
push
add
rcr
test
int3
fisubr
out
lahf
or
push
movs
loopne
fstp
setno
outs
mov
lea
test
dec
sub
mov
jns
es
les
lods
or
(bad)
sbb
test
mov
xchg
cs
cwde
pop
dec
pop
or
push
pop
mov
ror
inc
and
sti
daa
push
test
shl
mov
ror
dec
sbb
lods
aas
pop
out
adc
jb
rol
xchg
mov
repnz
add
retf
push
add
rol
inc
outs
ds
cmp
or
cdq
sbb
pop
sub
cdq
xchg
xor
jno
sub
push
ret
lea
test
or
ja
cmp
ss
or
or
xor
pop
lods
push
xor
mov
(bad)
lock
xchg
mov
cmps
cmps
and
add
ds
call
and
pop
lods
(bad)
cmp
dec
push
and
jmp
cmps
in
js
shr
push
js
xchg
adc
rcr
push
mov
jge
inc
and
imul
and
cmp
mov
sbb
wrmsr
sahf
hlt
fldenv
lds
mov
idiv
movs
int
fild
test
loopne
xor
ds
shr
jne
jg
xor
push
sbb
cmps
mov
add
pop
xchg
inc
leave
and
rcr
mov
sti
push
xchg
mov
xlat
in
sbb
or
jno
mov
cmp
leave
cmc
and
mul
(bad)
int
push
mov
jge
outs
call
cli
inc
fsubr
jmp
scas
jmp
cmp
mov
nop
arpl
in
(bad)
xchg
inc
push
mov
jp
pusha
push
in
add
psrlw
push
sub
cmp
dec
mov
pxor
cdq
pop
test
sub
mov
mov
lock
push
sbb
out
arpl
inc
test
dec
iret
jmp
mov
stc
bound
loop
icebp
ret
in
and
js
gs
lea
or
inc
clc
xor
nop
push
popf
fcomi
imul
mov
and
or
mov
dec
call
or
xchg
mov
test
adc
cmps
gs
shl
xchg
call
mov
repz
and
mov
bound
push
mov
out
or
push
xchg
mov
mov
lods
lds
into
mov
xor
fwait
inc
xor
mov
xchg
xchg
dec
call
push
cmp
jns
mov
mov
lods
std
mov
mov
loope
push
sbb
call
cmp
cld
ret
mov
sub
inc
or
adc
sub
jae
pusha
mov
lea
dec
data16
mov
and
jl
xchg
mov
test
cmp
test
maskmovq
neg
jne
sbb
(bad)
ins
aam
mov
push
mov
mov
lods
fistp
inc
fdivr
fsubr
fpatan
cdq
inc
arpl
xor
aas
sahf
ja
cli
out
jo
add
jle
adc
mov
movs
pop
mov
daa
or
xchg
mov
sahf
and
je
adc
xchg
dec
imul
retf
sub
jo
pop
dec
push
push
xchg
sbb
push
push
mov
dec
jmp
adc
or
xchg
jl
pushf
or
xor
adc
mov
fild
sub
pop
pop
cmp
stos
idiv
fwait
enter
mov
push
xchg
pop
scas
test
push
sbb
aam
ror
mov
imul
xor
cs
imul
mov
out
push
inc
stos
adc
cld
bswap
xlat
xor
ja
jge
ret
mov
aas
in
xor
in
cli
dec
mov
sahf
or
lds
or
repz
and
push
dec
sbb
jmp
lods
sbb
cs
in
mov
cld
jge
or
outs
xor
pop
jecxz
pop
arpl
in
mov
iret
pcmpgtb
fstp
and
or
ins
addr16
dec
aas
sbb
cmp
(bad)
xlat
fs
call
int
sbb
or
mov
dec
sysret
jmp
leave
outs
ss
adc
inc
xchg
ds
out
aad
jnp
enter
ror
sbb
cmps
mov
cmps
(bad)
sahf
lock
sub
and
jnp
(bad)
jo
push
inc
pushf
mov
fdiv
mov
test
sahf
xor
push
mov
mov
movs
cmp
(bad)
xchg
or
xchg
in
out
fwait
pushf
out
in
adc
jmp
inc
nop
push
aas
or
sbb
add
sub
dec
mov
cmp
adc
push
ret
std
lds
jmp
xor
push
cs
aad
sbb
aam
push
outs
sahf
sti
data16
inc
stc
shl
pop
add
and
xchg
sar
mov
jle
fidivr
mov
add
mov
xor
bound
sbb
cli
loopne
test
pop
pushf
in
xor
in
push
cmp
imul
add
fcmovnbe
dec
inc
push
sub
and
adc
test
in
bound
inc
push
sub
mov
adc
cdq
dec
call
loope
and
dec
fs
(bad)
pop
adc
sbb
shl
cli
pop
mov
std
sbb
loop
mov
sti
adc
ds
ret
inc
(bad)
cmc
arpl
fstp
or
fst
inc
ds
or
jne
(bad)
sbb
xor
cmp
test
and
mov
movs
fwait
pop
cmps
ret
imul
ret
pop
cmp
dec
mov
push
pop
fimul
sub
inc
pop
sbb
cmp
mul
(bad)
and
scas
ja
iret
sar
xlat
add
dec
xlat
retf
cmp
mov
push
xchg
xor
xor
cdq
aam
loopne
add
leave
scas
inc
cwde
mov
ror
mov
stos
push
mov
in
pop
jge
jbe
mov
and
adc
cmp
adc
lods
in
out
mov
inc
mov
(bad)
push
mov
cwde
and
jecxz
movs
mov
cmp
add
in
sbb
mov
retf
adc
cmps
xchg
retf
out
pop
loope
lods
sub
test
std
stc
push
xchg
and
lock
xchg
std
jns
clc
shl
(bad)
fild
push
(bad)
push
add
sbb
aam
jo
jl
popf
(bad)
adc
or
mov
cmp
inc
adc
mov
cmps
xor
cs
jbe
mov
inc
int3
adc
mov
retf
xor
rcr
fs
cwde
es
outs
inc
fndisi(8087
je
sbb
cmp
arpl
xor
mov
cmp
and
sbb
adc
mov
pop
mov
jmp
dec
int
pop
daa
popf
jmp
dec
add
stc
mov
mov
and
mov
scas
xor
ins
gs
mov
stc
repz
cwde
dec
(bad)
cmc
push
add
or
jmp
int3
cmps
dec
cmc
and
ret
mov
aaa
gs
pop
les
adc
adc
lds
sbb
inc
mov
pop
std
rol
bnd
and
push
iret
jbe
sub
push
fcmovu
mov
mov
push
mov
cmp
adc
adc
test
xchg
stc
popa
cmp
add
loopne
mov
cmps
fstp
or
retf
fcomp
mov
sbb
mov
rcr
sub
or
lods
ja
mov
leave
inc
xor
in
movs
shl
ret
xor
idiv
dec
jmp
mov
in
push
cmp
int
cmp
jge
add
xchg
pop
inc
mov
inc
mov
cmp
sti
(bad)
or
push
rcl
icebp
mov
jp
jmp
in
mov
imul
jo
pop
pushf
stos
call
or
adc
dec
daa
add
xor
inc
push
mov
dec
nop
idiv
pop
(bad)
xlat
jb
xchg
stc
pop
popa
add
pop
inc
pop
sbb
sti
add
and
cmps
push
pop
into
pop
or
inc
inc
xor
xchg
iret
xchg
jae
sar
pop
sub
mov
or
add
dec
jl
cli
ffree
jne
mov
jecxz
sbb
loope
ror
dec
mov
aam
mov
loope
jae
cmp
pop
dec
cld
ret
cmp
jne
nop
stos
in
push
cmp
je
movs
sbb
pusha
gs
add
jmp
(bad)
push
aas
fdiv
cmps
mov
mov
popa
addr16
scas
xchg
mov
jbe
push
xchg
jle
pop
mov
and
mov
push
lds
cmp
lds
mov
lock
retf
sbb
xlat
stos
clc
arpl
push
adc
cdq
int
inc
out
sub
movs
fld
or
push
cmp
imul
jo
outs
out
pushf
sub
(bad)
out
out
(bad)
aas
inc
(bad)
das
out
(bad)
js
clc
or
add
jnp
scas
(bad)
into
jnp
lea
xor
xchg
jne
mov
daa
cmps
mov
sbb
and
sub
ss
or
xchg
jl
test
jle
dec
push
out
test
sbb
ror
xchg
jmp
jnp
nop
ins
imul
nop
retf
iret
shl
int3
push
dec
pop
sti
or
adc
(bad)
dec
test
(bad)
test
fistp
dec
push
sti
pop
pop
test
inc
push
or
scas
ins
lea
jl
fs
push
popa
jnp
xchg
or
pop
inc
jp
icebp
jmp
out
test
je
dec
sub
push
jl
mov
dec
pop
fst
addr16
dec
std
xlat
cs
mov
mov
cmp
in
push
cmps
(bad)
aas
mov
xchg
sbb
in
(bad)
idiv
inc
repnz
cmp
fmul
xchg
pushf
or
mov
shl
pop
scas
mov
add
xchg
push
rol
push
stc
je
ja
sbb
std
push
shl
mov
lods
cwde
mov
inc
mov
jp
popf
int3
inc
enter
nop
add
pusha
div
or
add
dec
sbb
scas
push
or
sub
dec
sbb
dec
sbb
int3
(bad)
in
xchg
dec
mov
movs
inc
sbb
xor
add
test
sub
jae
stc
adc
pop
lods
fwait
addr16
das
push
cmp
xchg
dec
mov
jge
pop
mov
dec
paddq
jmp
call
out
jmp
pop
jae
int
push
lock
jl
enter
mov
cmp
into
cmp
in
adc
daa
ins
out
mov
jle
pop
out
arpl
daa
stos
cwde
sub
(bad)
and
sub
jmp
push
push
sub
data16
sub
cmc
mov
xchg
dec
imul
add
stos
xchg
sbb
cmp
lahf
mov
jmp
test
mov
lahf
adc
inc
ins
out
xchg
jo
nop
iret
inc
jmp
lds
out
or
pop
push
pop
mov
sbb
(bad)
cmps
mov
ss
in
pushf
cmp
icebp
retf
cmp
cmp
jb
or
loope
mov
mov
and
push
mov
jae
xchg
(bad)
retf
loope
mov
cmp
mov
cmp
test
mov
xor
or
mov
xchg
call
jne
pop
jl
inc
aam
addr16
sbb
pop
scas
jge
sbb
adc
sbb
xor
xchg
lods
retf
cmp
movs
nop
out
pushf
cmp
add
push
(bad)
cmps
mov
stos
cmps
cmp
mov
push
or
xor
adc
in
push
int
inc
xor
fwait
or
xchg
pop
xchg
or
(bad)
add
out
(bad)
ss
or
dec
push
push
fadd
pop
hlt
mov
jp
aad
rcr
jbe
daa
mov
pusha
aaa
fs
lahf
jmp
fist
mov
or
call
test
aaa
mov
cmps
scas
sub
push
cmp
mov
int
pop
or
xor
xchg
test
jmp
mov
sbb
mov
outs
pop
dec
pushf
jl
loop
mov
stc
dec
inc
daa
test
push
cmp
stos
dec
mov
in
(bad)
pushf
int3
and
xchg
nop
inc
jmp
mov
or
data16
mov
in
jb
scas
lock
cli
jns
cmp
mov
jne
push
out
ins
mov
xchg
inc
jmp
mov
jg
mov
sbb
(bad)
stos
push
or
jmp
pop
dec
jno
dec
int
rol
in
jo
sti
xor
arpl
sahf
pop
push
or
fsubr
test
dec
shl
mov
push
dec
add
mov
cmps
jnp
movs
adc
or
(bad)
push
push
push
dec
fild
(bad)
mov
dec
xor
sbb
lahf
xchg
and
cli
in
out
dec
lahf
xchg
adc
call
imul
mov
xchg
ins
mov
sbb
sub
add
int3
movs
loopne
sbb
mov
pop
fsubr
cmc
ins
lock
movs
or
xchg
lods
cld
jmp
xor
xchg
adc
fdiv
sbb
dec
xor
xor
popa
ret
rcl
icebp
or
in
sub
lock
fwait
xor
dec
addr16
lock
xchg
call
into
add
sub
cdq
mov
outs
aas
into
mov
ins
xor
cmp
in
sbb
and
iret
pop
push
lahf
shr
leave
es
cmps
jmp
add
sbb
inc
ror
jl
movs
in
add
xchg
push
xchg
loope
fsubr
jge
pop
test
pop
and
inc
test
push
in
jmp
mov
sbb
or
sti
in
dec
add
arpl
pop
ficom
call
inc
xchg
imul
xchg
jne
mov
repnz
push
call
sahf
in
xchg
pop
cmp
ficomp
sbb
jae
fadd
jno
(bad)
mov
sti
sub
push
call
mov
push
and
je
pop
int3
retf
xlat
fstp
jo
mov
fdivr
(bad)
stc
sub
push
push
hlt
mov
sub
popa
jae
adc
inc
rcr
mov
leave
data16
adc
call
jo
ss
gs
inc
push
cmps
lods
mov
pop
mov
jne
dec
ror
leave
sbb
pop
out
lahf
jge
add
xchg
xor
xlat
lock
(bad)
jnp
loop
jp
outs
pop
mov
pop
push
pushf
in
pop
dec
test
add
mov
cdq
(bad)
out
xchg
dec
dec
jl
jp
xchg
aas
mov
xchg
xor
xor
pop
push
lea
or
jae
jnp
es
dec
jmp
das
jl
ja
sub
jg
sahf
or
out
fisub
sub
sub
xchg
pop
lock
and
push
mov
mov
gs
lods
fwait
(bad)
fidivr
call
cmp
pop
mov
pop
(bad)
aad
cmp
or
dec
call
pop
clc
(bad)
jns
dec
aas
pop
jne
add
sti
stos
push
dec
pop
pop
cmp
lods
sahf
mov
scas
mov
retf
es
add
rcl
out
aad
jo
mov
mov
and
stos
pop
enter
xor
pop
outs
mov
retf
push
sbb
dec
dec
cmp
popf
push
and
dec
sub
xchg
dec
daa
add
fs
mov
into
cdq
mov
in
ja
repz
xor
cdq
adc
push
icebp
and
or
ds
cmps
sbb
dec
fdiv
cli
push
pusha
xchg
adc
sub
sbb
enter
ss
adc
in
mov
mov
or
enter
jb
or
jmp
xlat
cmp
out
loope
mov
mov
push
(bad)
jmp
arpl
fs
sub
jns
pushf
cmp
mov
loopne
fwait
sahf
aam
test
or
(bad)
xor
push
sub
mov
fdivp
sub
movs
push
fdivr
retf
aad
retf
xor
cli
and
retf
push
sub
in
ins
stos
xor
sub
es
xor
push
xchg
cmp
loop
xor
pop
jnp
mov
sub
mov
in
ss
sub
xor
hlt
xor
xlat
shl
(bad)
pop
mov
repnz
inc
push
cs
push
cmp
sahf
jmp
(bad)
push
out
mov
push
pop
mov
call
movs
fsub
nop
or
xchg
xchg
lods
(bad)
xchg
lahf
jbe
aam
stc
retf
mov
enter
jno
or
std
pop
sub
jp
sub
jmp
xor
in
or
repnz
aas
xor
in
pop
dec
sub
lods
int3
retf
ss
cmps
pop
test
and
mul
jne
jne
fdivr
jae
and
loope
cs
and
aaa
xchg
xchg
push
xchg
shl
adc
retf
ds
mov
sbb
or
ret
jns
pushf
mov
jl
pop
cmc
add
fs
adc
xchg
in
(bad)
xchg
dec
xlat
jmp
pop
cwde
stos
inc
mov
lods
lods
js
push
xchg
das
ins
xchg
pop
jp
mov
fist
outs
push
ror
fwait
imul
mov
push
pop
sub
popf
inc
mov
mov
add
mov
mov
not
cmp
test
xchg
adc
pop
jnp
je
retf
in
scas
xchg
and
inc
inc
icebp
add
in
mov
sar
xor
jns
aam
call
mov
popa
les
(bad)
retf
push
mov
pop
cwde
cmc
aas
mov
push
in
mov
ret
adc
jl
fs
xchg
dec
jmp
je
scas
xor
outs
dec
mov
add
imul
aad
dec
jp
adc
call
push
fisub
push
ins
dec
jne
pop
mov
push
mov
mov
cmp
fs
mov
stos
out
cmps
pop
mov
cmp
or
inc
mov
xchg
inc
or
sbb
push
add
xchg
aaa
ins
iret
pop
xor
sbb
imul
add
dec
and
jb
adc
repz
dec
jecxz
mov
xor
dec
test
int
fdivr
gs
popa
xlat
ja
pop
fmul
push
popa
int3
sbb
fdivr
adc
(bad)
mov
cmp
fstp
ins
xchg
xor
or
dec
loop
rcr
add
out
and
jl
mov
jge
sub
dec
mov
or
add
loopne
jl
lods
mov
je
push
pop
ret
out
sub
push
sbb
rcr
push
out
xchg
mov
mov
iret
mov
add
leave
sub
das
adc
fcmovu
and
xor
mov
mov
pop
xchg
sti
jp
mov
pop
xchg
dec
fst
fwait
pop
xchg
jmp
shr
push
hlt
shl
not
and
lea
fiadd
mov
movs
pop
aaa
inc
popf
lods
test
jbe
sub
outs
pop
nop
sbb
(bad)
jb
loop
pop
jmp
and
ins
cwde
xchg
and
call
test
and
retf
call
lods
test
das
inc
add
jmp
popa
call
movs
loopne
jno
add
int
jle
push
ficom
adc
pop
xchg
sub
call
adc
ror
out
dec
push
push
je
les
push
add
nop
aam
mov
xchg
xor
inc
adc
xlat
add
jnp
sti
out
inc
push
aas
pop
sbb
inc
mov
mov
pusha
xor
out
mov
and
jo
(bad)
ins
xchg
xor
fldl2e
jb
mov
pusha
or
add
sub
pop
push
sub
nop
arpl
mov
xor
ret
test
xchg
mov
nop
pop
ja
xor
mov
fnstenv
or
cmp
repnz
adc
add
retf
mov
push
mov
sub
ja
mov
jmp
test
jmp
or
mov
pusha
xchg
(bad)
bound
sbb
and
xor
gs
call
xor
(bad)
mov
push
ffreep
sub
xchg
cmps
stc
leave
pusha
movs
out
lock
shl
jmp
sar
xchg
inc
inc
cmp
int
cli
cdq
xlat
sbb
ret
jl
mov
std
pop
cmps
mov
adc
pop
shr
cli
(bad)
int
sti
rol
data16
add
out
pusha
inc
rcr
dec
inc
fild
test
test
and
mov
repz
in
movs
(bad)
jl
mov
pop
es
dec
push
inc
mov
and
dec
inc
dec
test
fcom
xor
clc
rcr
mov
jnp
mov
inc
int
push
sbb
pusha
aaa
ja
xchg
adc
mov
cld
mov
sub
rcr
or
shl
nop
(bad)
pop
dec
ja
pop
add
ins
xor
sub
mov
jb
jno
mov
dec
xor
push
inc
pop
pop
mov
push
sub
sbb
fld
lea
push
sbb
lock
lods
adc
(bad)
movs
imul
(bad)
enter
mov
cwde
xor
adc
jb
xlat
cs
stos
jl
inc
sbb
pop
test
add
js
xor
jne
dec
out
push
aam
xchg
test
jmp
leave
xchg
push
dec
das
mov
mov
lea
daa
jbe
push
pop
stos
push
rcr
inc
xchg
daa
das
pop
outs
xlat
push
adc
adc
daa
loopne
aas
inc
sub
cmps
pop
and
xor
int
(bad)
dec
int3
in
iret
popf
in
push
cmps
cmp
js
cwde
mov
mul
pop
push
dec
and
sub
pop
dec
test
pushf
adc
xchg
ja
push
jge
fcmove
mov
pop
cmps
test
(bad)
movs
ds
mov
jp
in
cmc
xchg
or
mov
cmc
push
call
loopne
(bad)
mov
das
sti
movs
mov
repz
std
adc
jp
jo
call
bound
(bad)
adc
mov
movs
(bad)
movs
xlat
dec
jle
xchg
stc
rcl
loope
xor
outs
inc
xor
mov
and
inc
jns
ret
sub
cwde
retf
int3
sbb
mov
dec
jns
push
cs
xchg
mov
pop
nop
shl
jge
mov
jno
dec
leave
sub
movs
sbb
dec
sbb
mov
jne
mov
es
cmp
xor
jbe
mov
push
mov
jmp
(bad)
xor
(bad)
pop
out
and
ja
test
lods
xchg
sbb
lahf
xor
dec
mov
or
call
push
out
fst
xor
nop
pop
cwde
popa
in
push
ret
in
jo
xchg
mov
outs
adc
pop
cmp
enter
(bad)
dec
sub
adc
jnp
sar
out
mov
mov
jb
inc
test
daa
mov
cmp
not
mov
dec
push
and
icebp
push
js
mov
out
pop
xor
sub
loope
lods
fldcw
adc
adc
jbe
out
mov
out
out
xchg
cli
xlat
pop
inc
or
and
lods
ja
mov
mov
in
test
or
cmps
aas
mov
iret
pop
dec
test
mov
ret
sub
stc
int3
pushf
push
mov
(bad)
out
inc
push
test
add
xchg
stos
xor
adc
mov
(bad)
cmps
repz
inc
pop
and
into
jecxz
arpl
jcxz
push
mov
dec
mov
xor
adc
jp
push
push
cmps
inc
retf
dec
jbe
(bad)
mov
xchg
jo
xchg
(bad)
loop
mov
mov
imul
cmp
lds
pusha
in
jbe
int
das
loop
xchg
dec
push
pop
(bad)
mov
jl
ins
fptan
or
cmp
aas
sti
out
(bad)
push
cmp
mov
or
mov
xchg
mov
int3
retf
(bad)
int3
out
ror
mov
add
mov
cmps
and
hlt
in
fcomp
push
cmp
mov
and
lods
mov
popa
ins
cwde
inc
adc
inc
push
jge
xlat
sbb
lahf
and
test
xor
daa
in
push
fisttp
fwait
arpl
shr
sub
jne
push
jl
pop
(bad)
mov
dec
mov
fwait
ins
adc
xchg
aad
adc
mov
repz
retf
pop
aad
out
cmp
xchg
cmc
cs
jb
retf
pop
xor
fpatan
push
shl
or
cdq
les
cmp
icebp
arpl
sbb
arpl
ins
xchg
cmp
in
call
jl
jne
(bad)
cmc
push
out
push
lods
sbb
lds
enter
fwait
inc
ret
dec
sub
in
sbb
ins
pop
jae
cli
sbb
jle
xchg
pop
add
pop
out
je
cmc
adc
mov
pop
add
in
adc
pop
mov
shl
fld
add
push
push
bound
inc
push
mov
xlat
imul
sub
cdq
add
(bad)
(bad)
iret
out
data16
add
nop
and
mov
jmp
xchg
mov
dec
data16
xor
mov
cwde
call
mov
inc
jbe
cmps
fild
mov
add
lea
mov
retf
test
pop
pop
jge
mov
cmc
or
xchg
cmp
pop
inc
movs
mov
push
repz
and
mov
and
jbe
mov
push
or
jle
sbb
sbb
jmp
out
sbb
int3
stos
jns
movs
add
lea
imul
iret
cmps
mov
test
cdq
and
and
sbb
add
and
mov
push
ja
mov
or
mov
shl
cmp
fs
jbe
and
pop
ds
int
mov
push
adc
loop
arpl
add
mov
sub
ret
push
stos
cld
jp
inc
neg
add
cli
jmp
add
inc
or
xchg
(bad)
mov
or
movs
mov
jo
and
retf
jbe
pop
mov
or
rcl
push
sbb
mov
scas
push
cmp
cmp
enter
jmp
(bad)
fistp
fild
and
pop
jnp
cmp
mul
out
push
push
call
clc
imul
jns
outs
fisubr
bound
cmp
(bad)
in
es
or
sbb
add
and
sahf
in
pop
sbb
stos
cli
push
xor
loop
aas
or
pop
(bad)
mov
xor
mov
mov
cmps
fcom
jmp
repz
aam
nop
jg
adc
addr16
jae
outs
mov
out
and
inc
in
and
or
dec
push
leave
lea
mov
lods
inc
cmp
and
push
icebp
sbb
sbb
rcr
xor
rcl
sub
aaa
popf
pushf
rcl
shl
repnz
mov
mov
gs
cli
xchg
jbe
xchg
fcom
daa
fwait
adc
ja
sub
cmp
aaa
es
(bad)
rcl
push
pop
in
stc
sahf
fldcw
inc
mov
loop
in
out
cli
and
dec
xor
ror
pop
js
stc
es
addr16
xchg
mov
fsubr
js
inc
pop
bound
(bad)
or
mov
sub
xor
jmp
fs
add
pop
mov
out
loopne
push
jmp
add
fiadd
jae
xchg
dec
xchg
fwait
dec
pop
jp
jmp
xchg
mov
mov
xor
shl
lock
call
nop
fs
pushf
and
cmp
mov
mov
dec
pop
dec
iret
sub
pusha
fisub
push
push
in
ficomp
mov
ins
sbb
inc
dec
xor
loop
or
push
mov
mov
out
jmp
sub
dec
in
mov
sbb
popa
push
call
shl
fcom
jp
jecxz
aam
sbb
dec
push
sti
inc
add
mov
cmp
popa
test
clc
push
xchg
xor
cli
inc
loope
nop
data16
int3
xchg
in
imul
or
pusha
push
popa
popa
sahf
ja
shl
imul
inc
lock
std
clc
sar
into
mov
std
fst
aaa
jno
cmps
or
(bad)
mov
sbb
jnp
jbe
dec
clc
add
in
mov
addr16
test
fs
xor
pop
out
popa
ins
sbb
cmp
addr16
and
popf
(bad)
xchg
jno
call
jbe
sahf
mov
push
inc
xor
stos
jge
sti
mov
daa
mov
movs
lahf
nop
jmp
or
sti
mov
out
sub
push
test
mov
sbb
sbb
cmp
inc
sbb
ins
test
push
and
add
cmps
div
mov
mov
(bad)
clc
mov
(bad)
pop
jmp
adc
jmp
sub
mov
addr16
mov
movs
pop
jbe
loop
jmp
jmp
push
in
dec
pop
sub
dec
push
mov
push
js
pop
and
clc
aad
(bad)
icebp
sbb
push
add
cmp
in
dec
pop
add
sub
mov
paddq
pop
fist
dec
sbb
mov
xchg
dec
mov
inc
jg
popa
sbb
shl
jo
dec
nop
jg
dec
adc
rcr
add
std
test
in
pop
cld
jns
loopne
adc
inc
or
movs
push
sbb
fild
mov
dec
inc
inc
jne
or
mov
push
js
popa
fwait
mov
inc
dec
stos
mov
clc
or
dec
jg
dec
aam
rol
adc
inc
fcomp
dec
aas
jg
xchg
mov
cmc
mov
add
mov
mov
bnd
fistp
shr
in
mov
and
dec
out
retf
mov
and
clc
mov
int3
inc
sti
clc
loope
rcl
mov
jge
mov
les
ret
es
pushf
ins
outs
daa
(bad)
jnp
call
dec
or
test
sti
dec
ret
add
jnp
scas
shl
popf
adc
ficomp
mov
xlat
and
lock
jnp
pusha
stos
cmp
adc
test
push
or
lea
movs
pop
add
add
lea
lock
jnp
push
cmp
mov
sbb
idiv
mov
adc
sti
mov
push
and
mov
push
movs
mov
idiv
js
les
mov
mov
hlt
inc
pop
add
aaa
xchg
dec
pop
shl
or
inc
and
mov
out
in
(bad)
repz
inc
stos
fst
fistp
ror
pop
sahf
ret
mov
xor
push
push
and
push
xor
xchg
ins
arpl
cmova
sbb
sub
cli
mov
xor
pop
pop
and
dec
sahf
add
dec
inc
pop
retf
inc
add
jae
dec
pop
mov
outs
sbb
ds
out
repnz
mov
ss
dec
inc
xchg
mov
js
jmp
dec
inc
inc
or
js
jb
dec
aam
mov
ja
adc
fs
jnp
cmps
movs
fidivr
fdiv
(bad)
(bad)
movs
outs
mov
pushf
ret
ins
xor
ja
mov
mov
mov
enter
jle
movs
les
fcom
retf
jmp
jecxz
jge
xchg
cmps
ficom
mov
rol
adc
sbb
iret
hlt
sub
in
pop
outs
jl
in
dec
adc
stos
xor
mov
test
cmc
out
dec
lods
or
xchg
fistp
xchg
push
sahf
jl
add
cmp
and
aaa
enter
psadbw
sub
xchg
mov
or
dec
pop
inc
addr16
jmp
and
push
mov
ins
jl
jae
iret
jp
movs
repz
int3
mov
(bad)
mov
std
dec
mov
ss
mov
test
sti
mov
sbb
pop
dec
add
pop
dec
jge
and
cwde
jo
popf
or
(bad)
loope
cdq
sbb
jnp
add
loopne
clc
pop
movs
lods
xchg
sbb
in
in
fcmovu
or
and
inc
jns
xchg
push
vpinsrw
not
fistp
inc
xor
stos
jns
(bad)
stos
(bad)
les
das
mov
push
in
fdivr
aas
jp
repnz
jge
or
adc
and
jns
dec
mov
rcl
jno
push
popa
sub
(bad)
clc
call
mov
mov
pusha
mov
push
clc
cmc
(bad)
jns
pusha
lods
adc
mov
out
mov
xchg
aam
add
stos
hlt
xchg
in
dec
fs
shl
rcr
leave
push
nop
xchg
mov
jmp
mov
repnz
xor
nop
and
in
mov
aam
cmc
push
pop
pop
push
daa
outs
(bad)
(bad)
int
mov
pop
mov
ins
mov
jo
frstor
hlt
sbb
mov
imul
test
jl
int3
mov
mov
jne
mov
jg
mov
push
stc
(bad)
pop
xlat
call
ds
mov
push
adc
aam
fs
inc
call
cmp
lea
inc
xor
enter
inc
jmp
rol
sbb
mov
ror
cld
sub
out
and
dec
sub
(bad)
add
xor
not
cwde
dec
mov
and
cmps
pop
fisubr
sub
inc
sahf
pop
xchg
call
hlt
xchg
retf
xor
mov
mov
lods
fwait
shr
loopne
sbb
mov
mov
xchg
pop
das
dec
jns
jecxz
aad
js
aad
and
cmp
test
sbb
xchg
ins
mov
mov
sub
ret
pop
push
push
jb
pop
(bad)
pop
sub
(bad)
jge
mov
cmps
push
sub
lods
sbb
rcl
sbb
mov
xchg
ror
or
add
enter
int3
into
lds
xchg
add
cmps
push
xchg
xlat
aas
pop
cwde
jecxz
cmp
aad
mov
or
(bad)
out
fisttp
dec
pop
dec
arpl
cmp
stos
popf
pop
out
mov
mov
cli
push
ds
popf
mov
ret
das
idiv
cmp
stos
call
and
adc
and
mov
dec
ja
add
mov
pop
sbb
mov
sbb
aam
mov
out
out
inc
adc
or
nop
outs
fld
(bad)
add
xlat
and
mov
dec
mov
pop
repz
mov
out
mov
mov
repz
push
mov
aas
add
or
jbe
ds
ins
rcr
dec
pop
stos
pop
das
cmps
push
ret
cli
ds
inc
jnp
clc
lock
test
jmp
inc
(bad)
jo
stos
pop
outs
ins
outs
inc
jo
mov
mov
or
jl
push
jge
dec
adc
rcl
in
outs
lds
outs
(bad)
adc
and
fcom
aaa
es
imul
daa
lds
jp
sub
dec
popf
pop
outs
inc
inc
popf
jae
mov
je
retf
jne
mov
cmp
inc
dec
push
push
cmps
sbb
dec
aas
addr16
fsub
cmp
in
ss
movs
pop
cwde
jae
loop
in
fidivr
and
les
cld
retf
sub
stos
out
out
dec
cmp
xchg
add
lahf
(bad)
cmp
push
mov
adc
in
mov
pop
test
lock
cmp
add
jae
aad
sbb
xchg
in
sbb
outs
lods
je
js
inc
mov
xchg
jne
aaa
pop
or
jp
pop
dec
scas
or
inc
add
cwde
lea
lahf
adc
xchg
push
lods
sub
add
imul
stc
call
cmp
mov
fcom
aas
mov
pushf
adc
add
pop
mov
out
push
shr
pop
add
(bad)
aam
xor
std
and
stc
into
pop
mov
jmp
xchg
jecxz
loopne
inc
popf
jge
or
data16
mov
jge
mov
xor
or
mov
fisttp
jae
pop
(bad)
outs
sub
aam
out
fsub
(bad)
jecxz
out
in
push
fst
cmp
call
jb
and
popa
fwait
sbb
push
(bad)
mov
out
jmp
popf
xchg
aam
pop
icebp
mov
push
cdq
iret
cmp
data16
jecxz
xchg
mov
lahf
mov
movs
in
jmp
sbb
test
xor
pop
retf
int
xchg
push
mov
and
cdq
aam
into
and
lahf
dec
xchg
add
int
inc
xchg
mov
inc
jmp
inc
push
mov
sub
sti
inc
xor
enter
sbb
add
mov
pop
mov
mov
mov
sub
xor
aas
mov
mov
out
or
push
sub
xor
rol
dec
fwait
stos
pusha
or
add
iret
fld
fwait
int
hlt
movs
add
test
or
fcmovnbe
xor
aaa
cmp
fwait
mov
xchg
mov
mov
xchg
bound
or
pusha
add
or
pop
dec
nop
(bad)
movs
xor
sbb
je
(bad)
rcl
xor
jns
jg
push
rcl
sub
push
cmps
push
xor
in
or
mov
inc
leave
jecxz
aaa
sub
pop
add
xor
mov
repnz
sub
inc
cmp
adc
push
sub
sub
cmps
ret
test
fwait
(bad)
fst
adc
cmps
xor
mov
cmp
bound
adc
and
retf
add
ins
mov
gs
dec
xchg
mov
lea
mov
loop
shr
xor
xchg
inc
mov
sub
sub
ja
sbb
push
cmps
dec
idiv
jl
and
test
out
cld
sub
scas
enter
mov
rcr
ret
stos
or
daa
mov
hlt
add
shl
cwde
xor
(bad)
outs
push
idiv
shr
imul
pop
pop
aad
shl
scas
xchg
and
mov
pop
ds
mov
fsub
push
xchg
pop
inc
push
mov
jge
sti
out
imul
xchg
mov
sub
enter
out
xor
clc
push
xchg
cmp
fwait
stos
jno
mov
inc
xchg
cmp
push
inc
cdq
jge
sub
enter
daa
shr
pop
aad
test
repnz
adc
test
sti
in
mov
mov
jecxz
sbb
retf
sar
es
mov
fmulp
scas
sbb
xchg
mov
loopne
sub
mov
pop
dec
in
jns
jmp
mov
loopne
aaa
fwait
stc
or
ss
or
mov
dec
imul
outs
cwde
cmc
sar
xor
sbb
mov
std
retf
out
leave
stc
gs
inc
sahf
adc
adc
gs
and
mov
cld
jp
sub
(bad)
outs
xchg
xor
jg
xor
pop
aas
test
fcom
mov
jge
xor
fistp
int3
mov
mov
sub
test
push
sbb
jp
test
(bad)
sahf
jo
mul
movs
xchg
outs
jo
dec
leave
sbb
mov
xor
sub
xchg
adc
jl
ret
fcmovne
leave
lods
and
stos
push
push
retf
pop
sub
mov
sub
inc
sar
frstor
inc
or
sbb
jge
maxps
leave
mov
jmp
sbb
add
mov
add
icebp
add
and
inc
xor
out
lea
aam
xchg
ins
jne
aas
addr16
mov
cmps
inc
jmp
jge
cdq
dec
mov
push
adc
or
outs
cmp
mov
mov
adc
(bad)
sbb
shl
mov
sbb
loopne
aas
stos
or
(bad)
leave
inc
enter
cld
in
mov
rol
add
cld
fimul
hlt
push
xor
addr16
cwde
call
in
ins
or
mov
fiadd
mov
cld
add
inc
test
movs
call
cmp
and
imul
fcom
mov
sub
mov
sbb
mov
cmc
in
je
sub
mov
imul
adc
popf
in
mov
inc
ret
scas
popf
push
cwde
push
pusha
inc
out
test
pusha
fadd
sti
mov
jmp
mov
cwde
jb
mov
fisub
fwait
xor
fwait
inc
sub
lock
jl
imul
in
xchg
xor
daa
sub
mov
push
sar
pop
sub
int
xchg
scas
ss
xor
sub
inc
pusha
mov
mov
jmp
xor
adc
push
icebp
mov
xchg
adc
fldenv
stos
imul
gs
sub
pop
call
and
(bad)
je
push
xor
dec
pop
jl
cmp
sub
call
imul
push
mov
lea
rol
cmp
jnp
jp
mov
daa
je
retf
xchg
les
fidivr
adc
stc
js
daa
or
sub
or
int
jl
lahf
into
mov
cwde
movs
push
(bad)
or
inc
mov
jae
jl
sub
push
push
or
stc
rcl
cmp
jmp
sub
(bad)
shl
or
out
dec
fadd
cld
arpl
(bad)
dec
sbb
pop
in
add
outs
fwait
xchg
lds
push
jmp
leave
or
xchg
ins
out
retf
cmps
test
daa
(bad)
lahf
xchg
or
or
int
sub
cmps
sti
mov
nop
mov
bound
add
mov
das
jbe
xchg
xchg
pop
es
retf
inc
mov
rol
pop
cmp
or
mov
test
fstp
aad
mov
push
pop
enter
jl
cmp
fisttp
ret
shr
aad
mov
sbb
adc
ins
jmp
aas
test
dec
(bad)
mov
retf
dec
mov
add
cmps
jns
jne
sbb
(bad)
clc
jns
and
push
invlpg
lods
das
pop
mov
scas
or
and
adc
cld
xchg
ins
sbb
mov
jns
sub
aam
dec
xor
mov
pop
(bad)
push
imul
push
push
scas
jp
jecxz
fcomp
lea
xchg
dec
cmps
sti
mov
fwait
std
stos
push
pop
lock
push
dec
xlat
lods
es
ds
or
fwait
adc
dec
push
and
adc
test
repz
mov
pop
in
jg
div
repnz
dec
and
xchg
leave
aam
jns
xchg
pop
and
outs
out
mov
scas
dec
fild
mov
add
and
push
jo
fdivr
add
es
and
in
push
mov
adc
push
fs
ret
leave
inc
(bad)
or
adc
sbb
and
or
xor
mov
ret
adc
mov
lods
mov
in
outs
aam
icebp
inc
inc
cs
and
inc
(bad)
lods
pop
inc
and
and
sub
js
out
pop
xor
jmp
cdq
enter
retf
sbb
mov
push
repz
pop
sub
xchg
push
jne
mov
jge
imul
mov
pop
out
push
fsub
jle
into
cmps
jae
cdq
jge
xchg
mov
and
cli
sbb
xor
jmp
(bad)
ss
data16
pushf
retf
sahf
jae
pusha
and
setbe
gs
or
push
jmp
movs
out
sub
fidiv
mov
and
or
mov
test
int
and
je
in
inc
mov
sahf
mov
lea
push
push
jae
and
xchg
retf
sbb
adc
test
mov
mov
pop
ds
dec
pusha
out
mov
push
imul
xlat
call
into
mov
loop
dec
adc
xchg
je
inc
cmp
adc
pop
jae
shr
sub
ins
loope
pusha
mov
mov
or
sahf
test
(bad)
mov
mov
out
ins
aaa
mov
or
js
jp
adc
adc
adc
mov
pop
ficomp
mov
scas
in
loope
dec
inc
mov
adc
or
inc
fcomp
pop
stc
and
push
test
push
aam
into
rcr
mov
xchg
jmp
and
aas
push
in
shr
cmp
ret
and
mov
cmc
(bad)
icebp
stos
pop
pop
adc
(bad)
mov
cdq
ins
cdq
out
push
enter
aaa
cdq
sbb
mov
std
fistp
push
pop
jle
mov
retf
in
movs
in
in
push
ret
je
fnsave
jns
or
loope
test
fwait
bound
into
inc
and
dec
test
pop
mov
int
jmp
int3
mov
test
pop
cmp
call
int3
iret
call
mov
hlt
cs
fadd
or
pop
repnz
fisub
mov
adc
cmp
popf
jp
ss
shr
ds
test
jb
call
or
pop
fabs
int
mov
push
sbb
test
pmaxub
jnp
jae
mov
pop
inc
pop
pop
add
xor
add
jbe
hlt
jae
ficom
xor
xchg
mov
rcr
mov
into
pop
inc
cmp
shr
test
mov
xchg
sbb
lea
retf
in
in
mov
sti
push
mov
not
and
xlat
adc
xor
sar
into
fld
adc
neg
mov
and
add
stc
js
mov
lods
hlt
mov
fisub
cld
pop
repnz
dec
pop
push
in
mov
inc
and
or
jno
out
mov
cmps
add
xchg
loop
in
dec
pop
mov
scas
out
push
mov
push
jb
jb
repz
and
adc
sbb
pop
shl
int
(bad)
mov
dec
lahf
fdivr
test
inc
cmc
push
cwde
xchg
pop
mov
xor
fcomp
aaa
cmp
xlat
out
int3
in
sub
lea
stc
jnp
loope
dec
(bad)
imul
scas
sar
leave
inc
inc
and
adc
jp
(bad)
fwait
in
sbb
fld
jno
gs
mov
pop
hlt
xchg
in
shl
icebp
pop
sahf
ds
outs
mov
inc
ret
aas
mov
mov
das
daa
add
and
pop
lods
inc
cmp
jg
mov
icebp
lock
sub
jmp
cwde
call
jle
adc
dec
scas
jae
xchg
pushf
ror
stc
punpcklbw
adc
jno
cld
fist
xlat
jmp
mov
mov
jle
add
sub
ins
stos
jbe
and
adc
pop
in
(bad)
pop
xchg
sub
ds
jbe
stc
fld
mov
push
leave
xchg
lods
or
dec
dec
mov
ins
mov
jg
add
enter
sbb
inc
xchg
sub
out
jno
jne
pop
out
push
sar
nop
iret
xchg
jo
ins
cmp
repz
push
or
mov
cmp
mov
call
into
xor
ret
hlt
mov
out
xor
add
out
mov
xor
in
push
stc
cwde
add
xor
sub
dec
out
push
aas
add
daa
pop
mov
aam
loope
xor
sbb
and
(bad)
(bad)
jmp
in
imul
shl
sub
stc
int
mov
or
and
mov
dec
sbb
pop
and
or
jp
sar
pop
lahf
jp
in
pop
dec
jp
dec
xchg
out
push
pop
mov
mov
sbb
inc
sahf
xor
push
stc
sbb
mov
mov
movs
gs
dec
or
mov
cwde
pop
ret
push
dec
xchg
mov
(bad)
hlt
fnstsw
cmc
call
mov
sbb
cmps
(bad)
jmp
adc
xor
jne
jge
cmp
mov
push
sub
xchg
fucompp
pop
call
shr
out
cmp
call
outs
mov
js
stos
fiadd
pop
mov
cmp
push
mov
push
jmp
(bad)
cs
xor
(bad)
cmp
mov
adc
movs
test
stos
add
inc
sbb
es
rol
cmps
std
mov
push
js
addr16
sub
dec
push
fistp
cld
dec
test
jno
push
stos
cld
jl
into
fwait
adc
xor
test
out
and
xor
jno
adc
shl
xchg
push
lods
cdq
lds
mov
bound
dec
sbb
cwde
mov
cwde
mov
mov
popa
xor
dec
call
jae
xchg
mov
jp
enter
popf
movs
cmps
ja
inc
in
jl
hlt
stos
mov
retf
pop
scas
imul
fs
test
jo
xor
add
cmps
jmp
out
sar
mov
pusha
je
push
mov
mov
outs
cmp
aad
xor
sub
xor
xchg
pop
and
sahf
pop
push
clc
mov
(bad)
arpl
pop
inc
rcr
arpl
daa
mov
loope
sub
mov
lods
pop
retf
sbb
xchg
fiadd
xor
retf
mov
ja
(bad)
dec
push
outs
cmp
push
sub
inc
and
sub
fidiv
in
push
aad
lock
pop
sub
xchg
pop
pop
sub
jo
daa
inc
add
push
(bad)
in
fld
mov
(bad)
call
js
mov
mov
pop
mov
clc
mov
mov
dec
cmp
jl
mov
pop
lods
jne
push
cli
inc
pop
mov
nop
jge
jge
and
rol
xchg
sbb
adc
cdq
xor
mov
shl
mov
cdq
pop
test
mov
or
mov
cmc
loop
mov
or
dec
loope
adc
xchg
loop
es
jge
jbe
pop
aad
ret
out
mov
montmul
cmps
or
cmp
loopne
stos
ror
fwait
pop
dec
adc
pop
mov
lock
xlat
out
and
adc
clc
sbb
fwait
hlt
push
inc
mov
jl
ss
xchg
xlat
pop
pop
and
dec
mov
hlt
pusha
cmp
rcl
sbb
pushf
or
scas
or
shl
jmp
pusha
xchg
push
xchg
fld
in
cmp
pop
mov
pop
push
repz
bound
adc
mov
retf
mov
in
outs
pop
push
pop
add
mov
es
and
sahf
add
xchg
lea
dec
mov
call
gs
sbb
movs
xlat
jns
or
retf
push
in
sbb
stos
jb
or
add
add
(bad)
fwait
jmp
push
jecxz
xchg
enter
stc
xor
test
lods
icebp
popa
cli
jl
(bad)
jb
push
aad
retf
mov
pop
fdivr
and
xchg
jae
pop
sbb
inc
sti
sub
pop
loope
fxtract
mov
hlt
mov
test
jae
xchg
adc
movs
mov
mov
ja
and
test
jnp
mov
test
xor
and
mov
pop
add
out
dec
jnp
call
mov
sub
mov
xchg
fidivr
add
fadd
push
dec
pop
jle
pushf
adc
or
mov
mov
add
retf
sub
lods
daa
add
rcr
iret
stos
add
sub
add
mov
fsubr
loop
push
cmp
ja
and
mov
sbb
out
jbe
cmc
shl
lea
(bad)
cli
push
cmp
push
push
jno
clc
cmp
nop
mov
ret
int
fs
cli
in
mov
fisttp
test
push
jmp
jo
fwait
enter
dec
pop
mov
test
pop
push
and
sub
in
xor
push
or
leave
and
out
dec
dec
retf
or
adc
mov
test
jno
pop
mov
dec
adc
sub
cmpxchg
dec
repz
aad
sub
jo
sub
not
cmp
xchg
or
xchg
mov
add
(bad)
hlt
dec
inc
xchg
and
and
and
lock
mov
jle
lock
lahf
mov
mov
dec
popaw
adc
test
movs
outs
sti
mov
mov
aam
loope
test
jp
loop
jnp
pop
adc
or
pop
mul
cmp
xchg
and
arpl
adc
pop
mov
lahf
jge
aam
aas
xchg
mov
stos
and
push
shr
sar
mov
fwait
test
adc
aam
push
pop
push
ins
int3
(bad)
(bad)
adc
push
dec
movs
aad
mov
inc
dec
cmps
push
test
imul
ficom
stos
mov
test
push
jl
cdq
aad
push
imul
movs
pop
sbb
mov
cwde
cmps
or
(bad)
push
mov
test
jnp
sbb
mov
inc
xchg
out
mov
push
inc
aam
jns
xor
imul
inc
add
add
and
mov
pop
fcomp
retf
and
es
sub
adc
enter
mov
inc
ins
mov
pusha
icebp
test
dec
stc
pop
xor
ins
jge
sub
and
fcmovbe
cs
adc
mov
repnz
sbb
mov
jo
or
push
and
push
stc
scas
xchg
gs
enterw
push
je
xchg
pusha
(bad)
(bad)
adc
add
mov
adc
pop
pop
loopne
push
into
adc
mov
movs
inc
or
push
pop
sahf
mov
movs
push
or
das
bswap
pop
cmc
mov
sbb
fstp
lock
sbb
fdiv
cmp
add
sar
lock
in
push
nop
data16
shl
mov
popa
pop
xchg
jl
scas
jg
or
repz
call
mov
xchg
xchg
repz
aaa
add
popf
cdq
adc
mov
mov
adc
adc
and
imul
add
call
and
sub
cdq
push
or
stos
jg
sub
pop
int3
enter
adc
mov
mov
mov
push
pop
cmp
mov
ss
rcr
stos
dec
inc
and
and
sti
dec
push
aas
and
xchg
sar
mov
inc
xlat
mov
movs
test
nop
xchg
push
fcomp
mov
jno
loop
mov
adc
and
pushf
mov
nop
pop
adc
mov
or
retf
sub
mov
jle
pop
xor
sub
ds
nop
xchg
out
jne
dec
(bad)
mov
dec
and
jmp
and
rcl
cmp
test
dec
js
jo
and
fisttp
lods
or
ins
shl
mov
fsub
push
push
cdq
add
addr16
mov
mov
xchg
mov
or
stos
pop
dec
add
inc
imul
mov
out
xor
inc
mov
cld
lods
jge
test
cmps
push
mov
sbb
pop
call
sar
xchg
cmps
push
outs
jle
mov
jmp
mov
(bad)
inc
add
pop
retf
mov
ret
push
cmp
jl
cld
cli
pushf
bound
rcl
pop
cmps
mov
mov
jne
xchg
pop
in
ins
int3
out
xchg
cld
sbb
fdiv
xor
loop
and
ja
push
or
pop
hlt
(bad)
cli
sub
xchg
(bad)
aam
push
fnstenv
mov
xor
cwde
mov
inc
add
mov
xchg
cmp
cmp
(bad)
push
mov
or
into
cmps
jo
cmp
shr
mov
xor
in
inc
mov
push
shl
adc
jne
movs
inc
dec
inc
out
mov
int3
push
cdq
ds
xor
sbb
pop
lahf
adc
paddusw
cmp
sahf
push
and
mov
xor
fsubr
test
xchg
xchg
arpl
add
xchg
mov
adc
movs
cmc
or
or
aas
jg
jno
push
enter
sub
rol
fldcw
pop
cmps
dec
jp
popa
xchg
es
xchg
stos
inc
cmps
hlt
retf
push
lods
cdq
dec
stc
add
mov
dec
fbstp
inc
xchg
cli
xor
daa
push
jne
xlat
sbb
fwait
cmp
daa
inc
call
shl
sbb
push
add
mov
fidivr
xor
lods
ins
(bad)
mov
mov
call
dec
add
leave
inc
retf
adc
sub
mov
dec
adc
and
jmp
fsubr
data16
ja
jge
(bad)
ss
les
ds
call
int3
xor
inc
scas
or
stos
pop
xchg
cmps
xchg
sub
dec
xchg
jmp
mov
jbe
test
loop
jge
rcl
mov
fistp
add
pop
mov
xchg
inc
fcomp
or
or
push
pushf
add
mov
adc
stc
push
shr
cdq
addr16
inc
test
aaa
cli
sbb
cmp
xor
xchg
lock
outs
div
fsub
and
aas
xor
mov
add
add
fmulp
adc
sbb
adc
fnstenv
cmp
adc
(bad)
ja
jmp
inc
push
inc
cmp
inc
retf
pop
stos
jo
and
int3
pop
fnstcw
jmp
dec
inc
push
sub
xor
xchg
cwde
test
loopne
cmps
out
pop
pushf
jne
add
in
pop
repz
jnp
sub
inc
test
cmp
neg
popf
aas
jp
je
push
retf
xor
xchg
dec
cmp
fisttp
xlat
and
test
cmp
es
mov
jecxz
xchg
fs
pop
(bad)
fwait
hlt
(bad)
xor
in
rol
jecxz
ret
fmul
and
mov
xchg
adc
repnz
test
jnp
mov
and
inc
call
add
mov
popf
data16
fdiv
and
and
fwait
jns
or
mov
test
xor
inc
jge
stos
repz
lock
sub
js
sbb
sbb
xor
sbb
(bad)
repnz
shl
mov
adc
push
daa
or
xchg
pushf
push
mov
jl
call
push
sbb
and
leave
test
(bad)
imul
movs
cmps
xor
jp
sbb
jmp
mov
sub
mov
or
xchg
pusha
pop
fild
mov
ret
cli
std
cwde
into
js
sti
jmp
movs
inc
mov
cmp
or
inc
nop
in
arpl
xchg
add
rcr
test
push
cmp
jno
rcl
mov
jnp
imul
jae
push
sub
sbb
pusha
or
popf
das
sti
test
aad
test
adc
daa
call
je
xor
sbb
push
xchg
or
std
stos
add
cdq
sbb
out
sbb
rcr
add
mov
sbb
xchg
cdq
in
push
(bad)
cwde
xchg
outs
jl
and
mov
mov
and
hlt
cmp
jp
sub
rcr
or
das
pop
push
icebp
int
xor
lahf
add
(bad)
cmp
fcom
jmp
repz
aaa
stos
adc
xchg
fwait
ins
pop
pop
lods
cmp
and
retf
mul
pusha
test
stos
test
jne
xchg
fcmovb
ret
mov
aad
retf
out
icebp
pop
out
mov
movs
cwde
jmp
retf
fldcw
test
pop
or
push
mov
test
sub
sbb
sub
(bad)
imul
loop
dec
mov
jns
cmps
outs
pop
mov
push
pop
arpl
repnz
stos
movs
xor
sbb
mov
ret
je
mov
sub
cmc
test
jne
add
add
inc
sbb
scas
clc
outs
jnp
call
cmps
sbb
or
cdq
push
sub
or
mov
mov
fs
sub
dec
out
pop
call
jne
popf
push
push
adc
iret
cli
popa
push
in
cmp
mov
xchg
add
jge
imul
mov
push
test
lahf
push
add
or
pop
jbe
icebp
push
cmp
es
pop
jbe
mov
push
and
retf
aam
popa
je
cmp
addr16
and
add
ins
jle
cdq
in
in
push
out
loope
aad
and
add
xchg
xchg
into
mov
jmp
sbb
rcl
mov
test
popf
ss
cmc
imul
or
or
inc
cmp
dec
bound
lods
dec
scas
ja
arpl
mov
push
dec
repz
sbb
inc
or
movs
nop
xor
add
push
stos
mov
adc
pushf
cmp
and
(bad)
repz
jecxz
movs
sbb
imul
cmc
rol
(bad)
aam
dec
xor
sar
cld
mov
or
or
pusha
cs
fdiv
sub
add
jge
push
fbstp
dec
dec
jle
jg
clc
iret
in
fstp
xor
jo
sahf
inc
add
jb
jmp
push
xchg
mov
ret
adc
stc
and
arpl
mov
xlat
mov
or
cmc
(bad)
xor
aad
or
adc
jmp
push
inc
pop
loop
test
sti
inc
add
nop
and
jne
js
add
push
jg
jno
cmp
jbe
(bad)
(bad)
out
push
das
(bad)
cli
jmp
lods
retf
retf
lods
sbb
push
adc
pop
mov
(bad)
mov
pop
repz
mov
sbb
mov
or
jge
mov
arpl
xor
add
mov
add
out
rcl
lock
hlt
pushf
mov
jle
mov
les
mov
ret
push
mov
aam
dec
xchg
adc
mov
retf
push
fistp
mov
xchg
pusha
in
adc
or
lahf
add
xchg
fstenv
cdq
loopne
add
add
and
or
and
in
xor
sub
punpcklwd
lods
inc
cmp
pop
sbb
mov
add
pop
pusha
call
or
dec
add
movs
mov
out
jns
inc
mov
cld
jo
jne
cmps
outs
test
jno
adc
in
and
not
lds
mov
sub
lea
jg
fsubp
sar
jmp
cmp
pop
xchg
mov
lock
sbb
ins
xchg
int3
jp
sub
jne
ret
mov
and
dec
xchg
sbb
and
pop
mov
and
cmc
out
ja
clc
icebp
or
int3
hlt
jns
adc
shl
sub
hlt
inc
int
mov
call
fadd
push
adc
ins
cmps
cs
lahf
repnz
cld
pop
push
pusha
pop
sub
pop
adc
adc
imul
push
add
test
in
xor
xchg
mov
jbe
popf
int3
hlt
fwait
mov
sub
jp
xchg
push
push
add
xchg
inc
aas
cld
in
pop
retf
dec
inc
xchg
sti
fwait
icebp
pop
or
cmps
clc
inc
sub
lea
and
jae
mov
repz
cli
iret
jae
jns
nop
inc
mov
jmp
lods
pushf
or
xor
pop
mov
cwde
(bad)
cmps
clc
out
daa
and
mov
push
iret
pop
mov
push
call
xlat
mov
call
out
imul
call
mov
adc
ror
nop
lea
cmp
mov
test
mov
sbb
mov
repnz
mov
inc
cmp
int3
sbb
inc
mov
mov
jmp
and
cwde
int3
pop
ds
data16
in
ins
mov
jae
push
mov
fs
add
push
imul
test
imul
mov
stos
mov
jecxz
jmp
cli
icebp
scas
enter
mov
mov
fs
and
sti
out
jne
push
jle
xchg
dec
fidivr
xchg
pop
or
loope
cmp
fdivr
sub
xor
cmp
xchg
in
push
lods
in
push
int3
jle
ret
(bad)
fcom
push
jne
dec
mov
inc
cli
nop
imul
jmp
jno
test
mov
mov
xchg
call
add
gs
xchg
sbb
jg
sub
fadd
add
jmp
cdq
lods
test
xchg
shl
push
sbb
and
mov
add
dec
retf
or
cmps
repnz
adc
cmps
movs
jno
aas
and
loopne
and
fs
ja
xor
(bad)
aad
jecxz
(bad)
jl
and
xchg
lock
mov
test
ret
xlat
mov
loope
ret
lods
aaa
and
(bad)
leave
push
int
jl
rcr
inc
lock
imul
or
test
sub
sub
(bad)
hlt
push
add
call
pop
sub
xchg
call
in
in
int3
lods
cmp
daa
call
cmp
test
rcl
hlt
sbb
inc
stos
dec
push
mov
test
adc
or
fsub
bound
adc
pop
lods
sar
pop
les
mov
pop
jae
pusha
dec
inc
(bad)
push
mov
cmp
dec
mov
sub
stc
jg
cmps
adc
aaa
cs
mov
das
add
sub
dec
dec
mov
dec
int
call
jae
pop
jb
cmps
xchg
or
sbb
mov
cmp
xor
xor
add
retf
dec
adc
dec
mov
outs
pop
cmp
or
loope
clc
jns
jg
icebp
fidivr
adc
pushf
ja
pop
fwait
(bad)
dec
or
mov
and
xchg
dec
cmps
hlt
out
ss
lods
ret
outs
das
repz
jbe
out
outs
push
adc
or
cmp
aad
pop
jb
xchg
mov
add
xlat
mov
out
xor
adc
pop
jl
icebp
repz
outs
imul
mov
push
sub
div
dec
ss
xor
and
mov
xchg
and
enter
mov
mov
inc
push
cli
mov
das
push
xchg
sub
mov
inc
hlt
pop
imul
rcl
xchg
push
sub
add
in
sub
test
movs
sahf
jmp
shl
add
jnp
xlat
or
jecxz
mov
jle
lahf
dec
out
sbb
(bad)
add
sbb
or
pop
enter
push
dec
dec
xchg
push
inc
mov
sti
je
inc
jb
jnp
ffreep
loop
or
sbb
call
push
pop
sub
fcomp
test
jns
jmp
sbb
cmp
outs
sub
dec
sub
cs
pop
cmp
mov
retf
sub
fcom
cmp
push
mov
inc
shl
in
std
into
mov
adc
mov
pop
pop
dec
and
sbb
fsub
jle
adc
je
cld
pushf
inc
and
add
scas
mov
shl
(bad)
(bad)
imul
enter
xchg
in
push
leave
pop
jp
leave
inc
cmp
test
(bad)
pop
not
push
add
or
fdivr
mov
or
add
popa
or
add
dec
mov
not
fnstsw
fstp
fdiv
add
ins
jno
sub
pop
add
lock
in
inc
xor
sbb
sbb
call
push
pop
and
(bad)
pop
cs
cmp
cmp
pop
xor
jns
sar
adc
cmp
call
out
mov
rol
adc
fiadd
out
add
and
inc
into
ret
(bad)
mov
stc
out
js
mov
or
int3
test
add
out
std
sbb
or
mov
cmp
imul
push
cmp
into
loop
popa
xor
movs
fistp
push
sbb
pushf
jns
(bad)
fnstenv
pusha
and
sar
in
je
mov
loopne
cld
(bad)
hlt
lock
gs
(bad)
cdq
cdq
mov
arpl
mov
push
push
je
inc
add
inc
or
mov
fist
push
iret
pop
dec
mov
daa
and
jae
pop
mov
lods
cmp
ret
jmp
jne
or
sub
sbb
mov
adc
pop
enter
cmp
or
cmp
test
xor
xor
loope
jnp
popf
js
pop
add
push
or
add
scas
stos
into
pop
cmp
imul
cmp
mov
fnstsw
outs
sub
add
clc
retf
xchg
int
sbb
mov
xchg
push
test
pop
dec
push
nop
push
js
mov
mov
jne
xchg
js
(bad)
mov
sbb
shl
pop
jmp
cdq
(bad)
push
nop
pushf
push
inc
cdq
daa
push
sub
adc
or
and
aas
pusha
push
push
sub
inc
nop
or
sub
and
mov
in
and
in
jne
inc
in
stos
ds
adc
add
rcr
jo
push
cmps
test
pop
pusha
inc
popw
fadd
mov
and
clc
out
xchg
loop
js
mov
ins
leave
pop
fucomi
inc
pop
mov
imul
outs
(bad)
cdq
inc
div
and
push
add
lds
(bad)
jp
push
push
arpl
(bad)
std
jb
nop
or
xor
adc
aam
cmp
iret
push
xchg
and
imul
or
mov
pop
mov
pop
lock
cmp
mov
sub
adc
das
add
sub
ds
xchg
(bad)
mov
mov
shr
inc
mov
pushf
mov
mov
cmps
push
rcl
mov
adc
sbb
dec
push
and
popf
adc
ficom
mov
js
repnz
sbb
xchg
add
mov
in
dec
lock
jmp
call
jle
cmps
jecxz
sar
(bad)
std
xchg
push
ins
mov
fwait
je
jle
(bad)
imul
xchg
mov
mov
daa
js
or
add
inc
sbb
mov
lock
push
ins
aam
sub
push
cld
jbe
daa
or
enter
iret
(bad)
in
lahf
jg
and
mov
jb
leave
das
push
mov
pop
mov
or
cli
(bad)
jns
stos
cdq
cmp
shr
jmp
xchg
(bad)
xchg
mov
xor
dec
faddp
ss
lods
mov
jno
cmps
mov
ret
aad
push
cli
call
mov
das
jecxz
daa
sahf
out
add
dec
lods
icebp
lods
xor
add
push
inc
cmp
neg
loope
push
loope
pop
and
mov
mov
pop
push
in
dec
sahf
and
dec
push
lock
sub
xchg
mov
cdq
(bad)
rcl
sub
fdiv
sbb
cmp
lds
mov
or
sub
out
call
push
add
je
fisubr
or
jno
push
hlt
mov
imul
sbb
mov
sar
dec
popf
dec
push
and
pushf
cmp
cwde
test
int
call
xchg
mov
jle
test
push
retf
and
mov
xor
mov
stos
repnz
mov
(bad)
xchg
or
cmp
pusha
sbb
aad
sub
stos
pop
add
jmp
adc
and
mov
in
test
mov
mov
jnp
dec
xchg
stos
inc
ret
jge
movs
or
xor
(bad)
stc
adc
int3
das
(bad)
adc
in
inc
aaa
lahf
fstp
pop
je
or
test
xor
loopne
fbld
fs
out
inc
push
adc
in
xor
xchg
pop
(bad)
mov
xor
(bad)
sbb
idiv
hlt
mov
in
mov
push
and
dec
inc
es
lods
lahf
adc
retf
loop
jno
pop
inc
dec
clc
cmp
push
call
sub
fidivr
mov
inc
cmp
inc
fwait
mov
aam
mov
push
ret
sbb
loop
cmp
or
test
imul
push
jns
loop
xchg
jmp
dec
adc
xor
adc
in
loope
or
jno
jnp
mov
in
sub
pop
mov
mov
imul
lea
mov
adc
jmp
mov
lock
pop
mov
(bad)
gs
shr
in
dec
arpl
bnd
dec
in
test
dec
ficomp
pop
ret
sahf
or
outs
cmp
mov
cdq
arpl
pop
call
pushf
push
dec
dec
outs
inc
repnz
or
je
mov
arpl
ins
cs
jg
xor
mov
jg
out
mov
jae
rol
cli
sbb
retf
cmp
adc
outs
std
inc
mov
cmp
cmp
int
inc
jp
xchg
(bad)
pop
or
ss
pop
inc
cs
mov
pop
loope
mov
mov
(bad)
xor
xchg
cmp
cmp
pop
shl
inc
retf
pop
jecxz
int3
inc
lock
push
sbb
mov
sbb
push
xor
xchg
bound
in
jb
outs
jl
out
jae
ror
dec
cdq
add
mov
mov
jl
retf
cli
xlat
sub
repnz
and
adc
dec
xchg
arpl
jns
movs
xchg
jle
ins
xor
popa
push
mov
popf
cld
sub
pop
push
and
out
cmp
ret
cmps
push
or
xlat
and
dec
call
add
and
or
fnstsw
not
jg
int3
sbb
fisubr
xchg
jns
push
mov
inc
arpl
mov
sahf
push
cmp
in
sub
sbb
cmc
jecxz
cmp
pusha
setge
dec
cmp
cmps
aam
fcmovb
cmp
out
inc
call
lods
pop
pop
inc
out
out
dec
cld
ror
or
out
lds
test
test
xor
ds
retf
mov
jecxz
shr
xchg
lahf
ss
dec
add
dec
(bad)
popa
inc
sbb
or
out
shl
and
inc
sub
gs
jb
icebp
xor
or
adc
rol
mov
mov
add
inc
bt
fsubrp
mov
or
and
jge
daa
sub
add
mov
sbb
sti
loopne
(bad)
mov
mov
and
repnz
xchg
popa
xchg
push
mov
or
or
bts
hlt
(bad)
sbb
fcom
xor
(bad)
shr
mov
push
mov
or
cli
ins
mov
mov
das
mov
dec
dec
ret
ins
sbb
push
push
push
iret
adc
inc
daa
js
sub
mov
ss
sbb
pop
icebp
ret
jne
push
gs
sbb
dec
cmp
clc
push
mov
and
jge
cdq
aam
inc
mov
sub
aad
imul
add
(bad)
cmc
test
mov
push
(bad)
(bad)
fidivr
pop
gs
mov
add
gs
jo
in
cld
pop
je
xchg
and
cmps
jbe
mov
(bad)
imul
into
jo
or
xchg
sbb
shl
popa
lahf
pop
sub
dec
cli
gs
mov
sbb
outs
inc
int3
idiv
lods
fldcw
shr
mov
(bad)
aad
cmp
jle
xchg
sub
mov
pop
pop
es
cmp
add
(bad)
outs
inc
cmp
mov
daa
sahf
nop
mov
adc
out
int
outs
adc
aaa
inc
lods
sar
dec
inc
enter
fadd
cmps
ins
movs
cmc
xor
sahf
push
daa
jns
loope
(bad)
std
pop
inc
mov
ins
mov
je
aad
fist
mov
and
dec
jb
adc
(bad)
or
mov
(bad)
aas
loop
in
(bad)
cmp
cwde
(bad)
imul
push
sbb
ins
ss
push
xchg
adc
outs
pop
cmc
repnz
fisubr
adc
pop
cbw
stc
test
ins
mov
daa
pop
ret
in
test
cmp
push
je
fwait
stos
xor
mov
sub
in
std
and
popf
and
pop
fisubr
cmp
rol
jns
fcom
mov
mov
jnp
and
stc
dec
loop
inc
mov
fwait
pop
add
retf
xchg
sbb
push
(bad)
mov
stos
test
fcom
in
not
test
cmp
sbb
push
call
xchg
mov
push
push
xor
pop
xlat
mov
rol
shr
or
inc
push
add
adc
call
dec
dec
or
adc
and
xlat
retf
jl
out
sahf
or
je
adc
mov
ret
mov
stc
or
mov
xor
mov
popf
shl
ret
and
stc
xor
ins
jne
outs
xor
mov
cdq
in
fnsave
add
xchg
pop
inc
rcl
int
gs
xchg
xor
inc
scas
sahf
inc
pop
mov
stos
dec
lods
mov
mov
sahf
sahf
jp
icebp
es
sbb
xor
mov
nop
xor
jl
aam
dec
call
in
dec
push
test
fnstenv
mov
loopne
push
fcmovu
ins
scas
daa
jb
imul
sbb
or
mov
rcl
out
push
jne
test
push
fild
sub
mov
in
leave
push
into
xchg
dec
js
fld
push
sub
(bad)
sub
gs
mov
xchg
imul
cli
mov
xchg
pop
js
fld
bound
inc
or
sbb
push
cwde
retf
repz
add
sbb
cmova
scas
xor
popa
adc
(bad)
pop
in
push
sbb
ins
xchg
and
and
sahf
pop
aaa
in
push
hlt
adc
xor
out
lods
imul
call
les
mov
stc
xor
test
imul
jbe
xor
mov
cmp
and
pop
lahf
js
fisub
or
shl
xchg
xchg
dec
push
xor
sub
or
ret
dec
xchg
out
xchg
data16
daa
xor
sti
mov
mov
mov
dec
cli
adc
pop
sbb
jg
jo
test
out
in
push
inc
mov
and
fild
mov
jae
sbb
cmp
pop
xchg
push
cwde
repnz
cwde
inc
inc
sbb
out
fsubr
add
mov
out
in
out
(bad)
and
sbb
push
(bad)
rol
push
sbb
cmp
mov
jns
push
outs
or
test
lods
push
scas
cld
xor
outs
int
out
call
add
(bad)
jg
dec
inc
pop
jge
je
mov
jne
cmp
call
xchg
add
outs
test
cli
push
int
jbe
xor
adc
mov
mov
xlat
mov
sub
xor
lods
shr
sub
jmp
dec
and
sub
jnp
cwde
dec
js
or
push
mov
push
stc
mov
cs
ret
xchg
int3
shl
ss
in
push
mov
lods
das
mov
out
fadd
push
cwde
enter
dec
bound
mov
cli
dec
or
jne
jle
jbe
and
jp
xor
ds
sub
sbb
jns
inc
pop
mov
dec
jo
ins
loope
xor
inc
ret
dec
jns
pop
sub
cdq
and
out
cmp
mov
das
sbb
xor
push
xor
dec
pop
push
cmps
mov
jnp
scas
xchg
out
sub
mov
daa
push
cld
inc
rcl
inc
lock
pusha
dec
or
into
rcl
out
cmp
test
pop
jb
mov
das
gs
sbb
pop
mov
fidivr
lods
cmp
aam
rol
pop
jle
push
addr16
pop
add
cmps
push
scas
xlat
lds
call
aaa
out
jmp
aam
lock
lods
inc
sahf
es
je
ja
add
mov
data16
adc
jecxz
popa
sbb
mov
in
lea
loopne
adc
mov
imul
dec
pop
inc
xor
and
inc
stos
test
imul
and
mov
leave
test
into
push
fld
push
add
mov
inc
mov
aas
loopne
and
jl
bound
mov
mov
mov
sub
adc
sub
leave
xor
add
cwde
int
jecxz
rol
imul
(bad)
xchg
outs
mov
pop
pop
stos
adc
mov
adc
fs
cwde
sbb
pusha
movs
out
mov
xchg
loope
outs
jnp
loopne
ret
mov
or
jge
push
add
mov
fwait
sti
jmp
movs
sar
pop
dec
icebp
scas
fisub
pop
mov
jmp
aaa
cmp
or
jmp
(bad)
mov
xchg
dec
mov
cmp
or
xchg
addr16
and
(bad)
cmps
loop
jl
push
mov
dec
push
cmp
test
mov
sbb
or
jl
jbe
mov
fmul
push
leave
leave
add
shl
mov
scas
mov
into
and
mov
imul
adc
push
mov
dec
int
cld
mov
shl
sbb
es
adc
push
call
and
jns
loopne
sbb
xor
test
bswap
cmp
test
mov
cmp
int
mov
mov
xor
ret
mov
mov
mov
pusha
and
mov
int
arpl
pop
jp
push
pop
pop
jmp
and
cmp
jo
aas
mov
call
push
test
shr
and
jmp
xchg
xor
jnp
lods
mov
jb
iret
inc
pop
cmc
int3
push
xchg
imul
add
lods
dec
mov
lea
imul
movs
je
inc
popa
gs
int
aad
and
lods
push
xchg
ret
push
ret
sti
mov
retf
aaa
pusha
cwde
mov
repz
pop
imul
dec
mov
xor
pop
push
dec
xor
push
ins
ins
stc
or
cmp
arpl
mov
ds
test
adc
out
stos
dec
adc
stc
mov
push
cmc
fiadd
xchg
inc
(bad)
push
jl
or
mov
movq
add
rcl
jae
xchg
cmp
mov
jl
push
fist
cdq
and
push
sub
ins
cmp
xchg
call
jo
cmp
sub
mov
daa
dec
cdq
push
jg
xchg
cld
js
(bad)
data16
mov
jmp
cld
inc
dec
xor
(bad)
pop
sub
or
dec
dec
test
cli
std
lock
dec
aas
fld
mov
ret
pushf
pop
stc
out
and
stos
or
and
push
retf
fwait
pop
mov
mov
add
cdq
mov
shr
fldenv
jg
pop
mov
in
test
sub
add
imul
mov
adc
ficom
ds
adc
push
pop
xchg
unpckhps
hlt
in
mov
data16
jmp
cmp
outs
(bad)
lahf
add
out
call
inc
inc
sub
xchg
dec
pushf
clc
push
inc
sbb
inc
loop
sub
sub
das
lds
repz
aad
jecxz
jb
std
out
and
imul
out
dec
sbb
jns
or
push
repz
ins
mov
inc
dec
in
cdq
repnz
mov
sub
adc
fisttp
pop
cmp
or
retf
xor
add
dec
dec
rol
div
retf
or
push
sbb
imul
dec
push
shr
retf
adc
sbb
sub
jecxz
in
popa
in
data16
pop
(bad)
data16
rol
jnp
enter
or
loope
adc
in
outs
jecxz
call
test
jne
inc
adc
out
bnd
dec
sbb
test
push
or
outs
sbb
push
sub
scas
cmp
adc
and
gs
aas
mov
xor
jg
dec
or
inc
mov
das
repnz
inc
jbe
or
push
int3
and
lea
mov
adc
rcl
add
es
xchg
stc
xchg
mov
ins
jae
mov
mov
in
sub
popa
arpl
jle
sub
ja
retf
cvtpi2ps
cdq
sahf
push
inc
mov
fwait
pop
cmp
mov
stos
push
mov
in
inc
push
or
sub
int
mov
mov
cmp
pop
and
imul
mov
mov
pop
popa
cld
mov
ror
out
push
cmps
pop
shl
retf
stos
mov
or
addr16
cdq
sbb
aad
hlt
out
ss
or
fld
and
dec
push
mov
mov
cdq
cli
xchg
jnp
xchg
js
push
jmp
ret
cli
int3
stos
sub
(bad)
cld
mov
push
push
(bad)
aam
popf
in
int
push
mov
sbb
stos
(bad)
cdq
adc
fimul
add
mov
dec
jae
push
dec
ja
and
mov
std
inc
jmp
push
test
icebp
cs
add
push
lods
push
jmp
mov
sbb
sub
daa
clc
stc
jge
inc
inc
adc
jl
add
in
and
pop
mov
sbb
dec
cmp
movs
push
retf
arpl
adc
ret
pop
stos
push
pop
pop
mov
jmp
int
push
or
cwde
daa
loopne
call
stc
cmp
add
xor
mov
push
or
add
sbb
jecxz
clc
out
mov
xchg
aad
adc
int3
inc
dec
add
and
push
std
sub
fcmove
call
rcr
sbb
js
mov
adc
stos
out
or
loopne
jne
dec
inc
inc
sbb
ins
fimul
push
dec
mov
loope
dec
jge
hlt
push
imul
mov
sub
repz
or
call
mov
loope
and
xor
es
(bad)
cmp
(bad)
mov
xchg
shl
add
inc
icebp
add
std
sbb
test
xchg
(bad)
call
jbe
cmp
adc
in
cmp
add
inc
test
das
pop
xor
es
xchg
mov
pop
dec
pop
jle
pop
pushf
popa
test
push
ins
int3
dec
inc
daa
xchg
enter
test
inc
push
mov
add
sub
lea
sub
js
and
push
loope
mov
sub
nop
add
sahf
bound
test
aaa
inc
xor
jb
(bad)
xor
out
daa
jb
fsubrp
jns
mov
(bad)
pop
add
push
outs
repz
push
add
and
cwde
mov
adc
std
rol
movs
lds
or
dec
(bad)
push
aam
or
dec
iret
dec
xchg
mov
jg
and
das
test
push
cmc
outs
xor
iret
sub
cmp
inc
or
nop
xlat
call
xchg
xor
sbb
cmps
es
xchg
loopne
add
loop
sbb
xchg
outs
idiv
ds
inc
lods
xchg
xchg
cdq
xchg
xor
repnz
inc
cwde
jp
jge
aam
popa
lds
mov
pop
data16
mov
scas
push
push
es
mov
jp
lock
and
call
xchg
sub
jnp
mov
jmp
mov
lock
jmp
cmp
jmp
pop
shr
add
test
clc
jg
jle
jno
push
mov
call
mov
cmp
push
jl
lock
iretw
ds
jns
movs
outs
mov
or
scas
repnz
das
mov
hlt
push
sbb
mov
rol
int
jbe
xchg
sbb
mov
shr
loopne
sti
xchg
pop
lds
and
lods
movs
sub
sub
push
jecxz
cmp
fsubp
sbb
push
sbb
sub
jo
rcr
sbb
cwde
and
push
adc
loopne
mov
aas
inc
mov
mov
add
sub
mov
xchg
jl
mov
rol
ficom
(bad)
lea
jb
pop
scas
push
cmp
inc
aad
popf
js
mov
mov
cmc
xchg
fstp
daa
and
int
inc
push
push
cwde
and
pop
add
add
mov
or
outs
and
xor
in
add
mov
adc
retf
call
pop
test
inc
sbb
aaa
xor
imul
xor
xchg
inc
or
pop
sbb
enter
stc
outs
nop
imul
shr
xor
dec
out
xchg
loope
pop
push
and
cs
xchg
sbb
addr16
call
push
xchg
lock
mov
sub
popa
xor
mov
jb
fmul
addr16
movs
loop
repnz
(bad)
loop
mov
mov
pop
jns
cli
repnz
sub
push
sub
in
mov
dec
and
repz
sbb
retf
pop
push
or
jmp
and
xlat
cmp
add
mov
and
scas
jns
ret
mov
(bad)
rol
pop
mov
ins
xor
ret
dec
sahf
mov
xor
push
xchg
jno
or
fwait
cwde
je
xor
scas
sbb
rol
test
cli
sti
shl
popa
push
sub
cwde
imul
rsqrtps
pop
pop
sbb
add
mov
popf
sub
push
call
cmp
cmovns
mov
bound
int
rcr
stos
mov
aas
mov
nop
movs
cld
out
test
xchg
shl
and
pop
push
push
jns
jge
(bad)
sub
scas
mov
enter
mov
cmp
or
in
adc
scas
adc
popa
inc
dec
mov
fstp
or
mov
sub
inc
sub
mov
inc
repnz
jmp
pop
pop
or
inc
cdq
mov
mov
popa
xchg
mov
mov
or
aad
fadd
clc
enter
adc
sar
loop
inc
sub
sub
aam
or
xchg
sbb
or
inc
int3
stos
adc
pusha
push
xchg
jmp
in
jecxz
ret
dec
lahf
add
jae
(bad)
fmul
mov
outs
sub
dec
xchg
push
mov
xor
arpl
stc
and
hlt
movs
mov
push
sub
popf
inc
mov
sbb
mov
jmp
in
int3
sti
and
call
pop
jle
les
cmps
loop
(bad)
ds
jl
int3
loopne
ror
mov
mov
mov
xchg
ss
mov
aaa
dec
sub
iret
loope
xchg
inc
jl
fxch
fs
mov
or
mov
retf
xor
ins
fs
in
sub
adc
popa
out
xor
in
xor
mov
fwait
sbb
xchg
jbe
shl
es
out
and
pop
jmp
cmp
jo
sar
lods
add
add
mov
je
loop
cmps
pop
push
addr16
dec
pop
jmp
fiadd
or
push
xor
jmp
ins
mov
lea
inc
test
sbb
movs
sbb
pop
movs
dec
clc
loop
je
push
xchg
call
adc
aas
push
and
jbe
or
cmc
shl
pop
and
fwait
cli
push
push
inc
xor
dec
outs
push
mov
adc
lea
pop
jmp
mov
jg
pop
sbb
cmp
lods
shr
sbb
in
push
dec
bnd
(bad)
or
outs
push
mov
inc
cmps
jge
mov
push
mov
adc
sbb
mov
fdiv
std
inc
xchg
repnz
aad
jne
lods
lods
lock
daa
hlt
repnz
mov
push
or
aam
and
pop
cmps
mov
sbb
push
xchg
inc
inc
enter
ret
dec
mov
das
xlat
mov
mov
adc
dec
lods
stos
push
in
cld
in
adc
fisubr
(bad)
test
sub
mov
inc
push
iret
sub
cdq
loopne
dec
mov
stc
jmp
xchg
ss
test
sbb
imul
hlt
inc
jb
aad
bound
pop
sahf
movs
push
mov
adc
je
je
mov
in
pop
ret
inc
bound
pop
out
ja
test
loope
pop
mov
dec
(bad)
fdiv
mov
sti
pop
inc
xchg
and
fwait
or
adc
int3
add
push
pushf
sub
jg
cmp
sbb
and
inc
adc
nop
dec
repz
push
pop
scas
imul
movlps
jl
(bad)
js
push
icebp
mov
loope
xor
fnstenv
inc
lods
jne
and
jae
xchg
cmc
cld
popa
call
bound
sub
(bad)
jg
stos
cwde
push
push
dec
pop
sbb
fwait
cli
sbb
popf
adc
imul
retf
jle
add
(bad)
dec
gs
push
push
gs
lahf
inc
imul
mov
sub
adc
or
fwait
loop
push
mov
mov
(bad)
popf
test
jo
gs
jle
loopne
and
pop
cmp
ins
std
and
aas
mov
pusha
mov
lds
lds
xchg
sbb
(bad)
ret
sub
popf
imul
shl
and
sar
call
imul
(bad)
jecxz
retf
adc
arpl
scas
sbb
je
aad
adc
fldenv
call
inc
fiadd
or
adc
pop
mov
mov
dec
lds
inc
mov
pusha
clc
jae
sub
out
or
aam
retf
pop
xchg
inc
adc
pop
sbb
aaa
adc
add
stos
test
test
pushf
idiv
jbe
dec
sub
lods
mov
out
jbe
jmp
mov
fs
call
push
sub
(bad)
div
loopne
dec
(bad)
pop
sbb
dec
and
jb
mov
aad
mov
test
mov
or
adc
bound
push
mov
xchg
adc
cs
ss
xchg
pop
xor
xchg
mov
xchg
leave
pop
cmp
sub
hlt
jb
fidivr
nop
jmp
nop
push
pop
pushf
cld
pusha
neg
sahf
xchg
movs
adc
mov
and
and
shl
fldenv
inc
add
push
lods
clc
movs
push
(bad)
(bad)
test
sub
jnp
test
jmp
push
pop
pop
jb
mov
pop
pop
rcr
push
push
mov
add
push
xchg
aaa
mov
dec
or
ss
nop
adc
push
sbb
sbb
mov
loope
pushf
pop
xchg
test
inc
sbb
mov
in
ins
aas
jmp
mov
(bad)
addr16
sbb
dec
loope
pop
sbb
bound
das
inc
in
fucomi
stos
add
sbb
je
or
in
adc
xchg
gs
xor
dec
ret
xchg
ins
inc
dec
dec
ja
ret
jle
pop
test
sahf
retf
inc
add
outs
call
jmp
adc
cmps
mov
adc
sub
and
fistp
ficomp
xchg
fucomp
dec
jge
xchg
shl
cwde
sub
addr16
jecxz
popf
rol
or
addr16
push
cmp
jmp
mov
and
or
mov
adc
outs
lea
imul
jno
stos
int3
movs
mov
enter
cdq
mov
dec
push
and
jp
ds
retf
out
jno
xor
loope
and
fld
arpl
sub
lods
dec
lods
outs
fidiv
in
xor
daa
aas
dec
cli
pop
mov
mov
push
cdq
mov
pop
and
sbb
mov
and
cld
add
jne
mov
jbe
lds
mov
sbb
aad
fsubp
repnz
into
pop
bound
mov
sbb
gs
cmp
mov
std
adc
xlat
aas
adc
xchg
cmc
(bad)
mov
and
add
fwait
dec
xor
lods
and
cmp
push
dec
mov
aaa
data16
xor
dec
sub
jl
dec
test
adc
push
retf
movs
push
daa
push
mov
pop
add
push
aad
js
lahf
in
xchg
(bad)
test
adc
jns
mov
jecxz
nop
rcl
icebp
imul
arpl
sbb
(bad)
popf
test
out
jp
push
std
(bad)
in
ret
ds
cmps
stos
loope
cwde
clc
mov
inc
fadd
or
push
and
xchg
sub
ds
dec
cs
push
jmp
aaa
mov
jne
xchg
aam
cmp
jae
cmps
sar
(bad)
sbb
in
xor
jns
or
mov
pop
aam
lods
movs
and
inc
ret
cmp
and
jbe
or
or
jns
mov
fcmovb
enter
fucomip
dec
outs
mov
xchg
mul
cmp
xchg
xor
dec
das
adc
call
in
call
mov
in
xlat
test
push
(bad)
jb
dec
sti
mov
imul
xor
and
sub
call
mov
lahf
dec
shr
fmul
sbb
pop
and
and
cmp
inc
int
sahf
sti
jno
pusha
shr
rol
unpcklps
imul
xchg
pop
and
into
leave
das
mov
inc
test
pop
xchg
in
test
and
gs
ret
imul
out
stos
and
jp
not
mov
pop
lds
call
leave
inc
cmp
mov
jl
and
xor
stos
push
or
add
cmp
pop
cmp
mov
(bad)
pop
fdivr
inc
arpl
pop
jge
mov
pop
dec
jae
push
iret
pop
cli
push
cwde
add
out
leave
ret
jl
xchg
fcom
lea
pop
stos
inc
cmps
shl
repz
sar
inc
xchg
fsubr
push
or
mov
add
inc
adc
push
mov
dec
aas
fiadd
in
mov
push
sbb
pop
shl
(bad)
and
loopne
repz
cmp
sbb
fdivr
ror
rol
push
inc
test
or
add
sub
int
mov
sbb
das
mov
das
(bad)
inc
cmp
stc
inc
movs
push
ds
sub
arpl
pushf
ffreep
sub
or
and
fwait
sub
into
mov
sub
iret
ins
mov
mov
jns
adc
ja
or
push
push
or
pop
inc
jg
aam
lods
mov
or
lock
sub
pop
pusha
jb
xchg
xchg
sub
adc
popa
out
mov
(bad)
ins
pop
push
pop
mov
jle
sub
mov
cmps
pop
xchg
mov
lock
xor
push
mov
push
das
fisubr
test
mov
pop
sub
xchg
add
push
mov
mov
sbb
mov
arpl
mov
xor
and
loope
push
in
inc
push
aam
or
out
push
cmp
popf
int3
mov
jb
dec
cmc
in
mov
or
sub
and
xor
jo
pop
xor
mov
mov
xor
cmp
hlt
xor
adc
push
mov
cmp
or
aad
je
sub
daa
popf
arpl
mov
std
sbb
stc
sbb
add
xor
bound
idiv
cmp
adc
pop
mov
inc
(bad)
ss
push
sbb
mov
and
jb
lods
jle
fstp
je
fld
daa
xchg
imul
inc
or
out
sub
rol
xchg
inc
jmp
outs
mov
xchg
stos
dec
repz
mov
mov
mov
int
jecxz
push
(bad)
retf
jmp
add
adc
xchg
ret
enter
ins
push
test
ins
sub
push
stos
outs
jno
imul
cs
ficom
push
fcomp
cmp
or
inc
ret
or
adc
push
out
mov
xor
dec
dec
inc
xchg
sbb
sbb
cli
push
cdq
outs
inc
das
add
cli
mov
dec
lds
dec
out
sbb
shl
mov
inc
arpl
int
mov
cmps
pop
in
push
icebp
pusha
dec
mov
pop
sbb
imul
xchg
jge
jl
cmps
frstor
mov
js
pop
mov
ror
push
mov
loop
xlat
push
sbb
in
xor
add
mov
loop
and
sub
inc
cmp
inc
ror
lahf
int
fbld
mov
test
daa
ja
jge
pop
or
addr16
out
push
in
jae
mul
fstp
mov
pop
adc
outs
add
xor
xor
jmp
push
and
mov
add
ss
adc
fisttp
adc
mov
ss
dec
jae
xor
cwde
mov
addr16
jmp
push
rcr
sub
icebp
(bad)
and
pop
out
or
pushf
jo
jmp
sbb
clc
lods
rcl
dec
daa
imul
dec
inc
xchg
lock
loope
xor
sar
mov
jbe
push
sbb
(bad)
mov
clc
xchg
cmps
mov
xor
inc
pop
imul
push
sbb
push
xor
xchg
ins
mov
xchg
inc
push
mov
or
add
adc
lds
pop
mov
test
xchg
fdivr
cdq
repz
push
jmp
loop
lea
retf
arpl
pusha
push
sub
cdq
add
pop
or
mov
in
cwde
mov
test
push
fnstsw
test
sbb
mov
nop
and
push
(bad)
pop
call
jle
or
cmp
cmp
pop
jecxz
in
into
push
xchg
pop
jno
sbb
out
adc
inc
pop
data16
or
lahf
lock
mov
(bad)
xchg
loope
es
inc
mov
aaa
ror
fld
call
out
inc
cs
sub
adc
outs
jecxz
inc
inc
mov
cmp
mov
mov
inc
fidivr
in
ja
mov
adc
lods
xrelease
daa
push
sub
jge
repz
clc
xlat
popa
mov
fdiv
adc
jnp
sbb
adc
dec
or
(bad)
mov
sub
add
stc
push
and
fs
(bad)
inc
lock
push
xor
xlat
div
loope
xor
in
add
lods
jp
inc
mov
repnz
sbb
bound
and
test
push
jg
cmp
enter
cld
(bad)
pop
mov
xchg
jg
mov
push
xchg
inc
outs
jge
push
and
aad
aad
inc
in
xor
jae
in
sti
imul
xchg
jae
hlt
fistp
xchg
lock
sbb
out
jp
ret
and
hlt
aad
pop
es
mov
pop
add
and
scas
cmps
xchg
test
(bad)
xchg
push
cmp
adc
(bad)
xchg
cmc
push
ins
cmp
cmp
sar
jge
mov
std
pushf
loope
and
inc
adc
push
aad
cmps
shr
mov
mov
sub
sub
xor
ins
imul
xchg
sbb
aam
mov
xchg
pop
mov
push
int
retf
or
mov
xchg
push
out
in
cmp
and
in
mov
or
and
cmp
cmp
data16
jne
out
(bad)
add
or
icebp
fisubr
(bad)
pop
das
mov
adc
jecxz
and
adc
idiv
xlat
mov
sbb
push
imul
sub
hlt
xor
dec
shl
test
loope
inc
inc
or
gs
mov
gs
vpshaw
inc
cdq
test
jle
xor
out
push
jae
mov
fidivr
push
pusha
ret
mov
and
sahf
call
into
fadd
sub
fist
das
push
arpl
mov
dec
in
sbb
imul
xchg
loop
cli
and
push
shl
cld
aad
outs
add
mov
mov
push
push
aas
sbb
(bad)
cmc
fwait
scas
retf
ja
xlat
mov
stos
dec
cld
inc
test
jne
mov
not
and
jbe
cmps
push
fld
or
loope
lahf
xor
and
clc
pop
lock
(bad)
push
fcmovu
shr
(bad)
pop
sar
adc
pushf
in
or
pop
push
add
mov
daa
scas
aaa
mov
or
ret
adc
cmc
(bad)
mov
mov
in
jge
pop
mov
cmp
add
cmp
frstor
sub
out
sbb
ffree
fist
sub
out
test
repnz
push
adc
dec
arpl
sub
lea
jns
icebp
push
mov
jle
sbb
xchg
push
xor
mul
fchs
mov
lods
cmps
out
test
sbb
in
stos
jae
add
jmp
inc
add
pop
pop
retf
rol
mov
ret
jmp
or
jb
mov
sub
dec
jb
mov
enter
pop
pop
into
dec
out
pusha
pop
pop
jecxz
or
push
fidivr
xor
stos
adc
cmp
mov
and
int
into
in
out
ficom
mov
and
and
ins
jle
idiv
bound
movs
jge
cmp
inc
cmp
pop
adc
xlat
int
retf
dec
fs
in
push
ins
loop
and
mov
and
mov
xchg
scas
loop
add
xchg
movs
dec
movs
add
push
jno
test
cmps
gs
jmp
lods
inc
aad
dec
mov
push
cmp
fwait
test
mov
or
fsub
nop
popa
adc
mov
inc
hlt
adc
sbb
lods
jae
xor
nop
push
push
sar
(bad)
cli
ja
sub
mov
ds
repz
inc
sub
fcomp
pusha
inc
aaa
mov
jnp
(bad)
and
add
jbe
adc
pop
ret
sub
pushf
xor
cmps
scas
mov
leave
xlat
mov
mov
xchg
add
push
inc
inc
scas
jl
xor
cmps
cmps
add
pop
lods
jp
xchg
fst
shl
mov
iret
repz
sub
cld
mov
into
pop
les
in
fidiv
out
mov
jecxz
xor
sub
and
and
jmp
pop
cmps
fst
adc
fs
out
pop
pop
pop
sbb
stc
jns
js
loopne
imul
push
xchg
pop
jmp
pushf
fld
pop
sbb
or
xor
aas
pop
dec
mov
cmp
xchg
add
jno
mov
sti
xor
mov
add
pop
pop
mov
jns
repnz
(bad)
or
in
cld
jns
or
ins
fisub
bound
imul
cli
sahf
dec
and
ret
sub
test
jp
push
ja
mov
mov
stos
jae
dec
cmp
push
xchg
mov
lods
clc
into
xchg
leave
jns
mov
xchg
mov
push
adc
mov
arpl
ins
lea
or
clc
(bad)
enter
aad
inc
jp
mov
or
das
lods
inc
addr16
nop
(bad)
fcom
stc
add
movs
pop
aas
addps
inc
xchg
f2xm1
jle
fs
push
push
js
cld
cmp
jmp
or
mov
in
mov
push
mov
cld
cmp
std
mov
ss
test
or
dec
pop
inc
and
pushf
jg
mov
ficom
mov
outs
movs
cs
fmul
mov
cwde
push
pop
popa
jnp
cdq
inc
pop
out
in
xchg
jmp
jmp
aaa
pop
dec
out
xor
add
cmps
sub
and
int3
dec
imul
test
repnz
retf
test
add
test
jbe
sub
mov
jnp
fidiv
test
out
pop
sar
scas
add
dec
(bad)
jbe
push
fidivr
shr
pop
out
(bad)
mov
arpl
cmp
dec
adc
xchg
pop
rol
dec
dec
cmp
push
xchg
imul
dec
cmps
push
mov
jb
or
pop
mov
lea
pusha
pop
out
stos
or
sub
and
adc
enter
pushf
imul
push
mov
fwait
ins
mov
and
xor
pop
(bad)
pop
jl
pop
jno
div
jae
outs
push
loop
pop
das
push
xchg
dec
push
loope
cmp
push
ins
in
(bad)
sti
xor
fsub
dec
mov
push
fwait
cmps
into
mov
adc
inc
iret
add
mov
loopne
addr16
push
repnz
cmp
mov
popa
out
xchg
mov
sti
jle
mov
lods
ret
movs
cld
inc
in
cs
js
bswap
mov
push
inc
sbb
dec
sub
loopne
add
lock
test
nop
fmul
mov
daa
mov
scas
pop
xlat
xchg
or
mov
push
cdq
into
mov
fadd
xor
xchg
mov
out
push
ins
jp
pop
daa
jo
and
imul
push
test
div
mov
in
xor
pop
sub
nop
xchg
lss
sub
(bad)
xchg
ret
mov
add
mov
push
push
adc
fcom
mov
pop
xchg
xchg
aaa
jnp
mov
push
pop
in
cmp
fwait
adc
xchg
inc
dec
rcr
call
mov
in
jnp
call
mov
add
cdq
xchg
lods
call
or
xchg
inc
sbb
adc
fdiv
mov
pop
add
mov
idiv
je
adc
call
sbb
arpl
mov
or
push
xchg
iret
fstp
icebp
mov
repnz
and
int
fstp
mov
mov
or
or
data16
mov
jnp
bound
dec
cmp
inc
mov
inc
mov
retf
or
aam
or
(bad)
mov
fwait
(bad)
sub
cmp
jnp
(bad)
mov
push
mov
scas
daa
mov
in
cmp
sub
leave
iret
scas
jecxz
aad
js
mov
jo
inc
rol
imul
rcl
in
call
xchg
xor
mov
xlat
inc
mov
xor
lods
sbb
mov
ins
and
and
out
lock
rcl
cld
cmp
outs
in
mov
pop
sub
push
ret
push
pusha
iret
or
mov
and
retf
mov
dec
sbb
call
xchg
xchg
dec
repnz
mov
jmp
in
rcl
mov
cmp
fdivr
xor
add
out
add
lods
retf
dec
pop
leave
push
cmp
xchg
lock
mov
cmp
and
xor
out
dec
dec
enter
mov
mov
xchg
pop
and
push
mov
and
out
cmp
pop
mov
pop
addr16
fadd
sub
retf
scas
mov
xor
in
adc
jl
mov
xchg
pop
xor
pmuludq
jae
das
mov
mov
xor
or
jo
push
dec
jne
jae
inc
pop
xchg
stos
das
hlt
imul
sub
loop
scas
and
xchg
and
bound
sub
adc
les
mov
xchg
sbb
pop
pop
enter
div
or
ffreep
mov
fadd
std
js
and
inc
add
lock
(bad)
xlat
push
or
out
xor
pop
imul
sub
xor
shl
or
popf
sub
in
mov
mov
sti
lods
arpl
repnz
xchg
jge
fdiv
sbb
sbb
mov
cmp
loop
cmc
fistp
(bad)
inc
cs
or
imul
sub
out
adc
or
adc
mov
test
sbb
and
push
sbb
push
cmp
stos
cmp
mov
and
mov
mov
adc
pop
je
ins
xor
jmp
ss
ss
outs
jne
sub
call
xchg
mov
mov
pop
push
(bad)
push
out
cmp
retf
pop
ror
int
and
mov
fdiv
movs
fsub
xchg
adc
xor
jmp
sub
adc
nop
nop/reserved
popf
scas
sbb
test
dec
cmp
cld
xchg
or
retf
pop
mov
stos
xor
shr
outs
mov
out
iret
imul
les
mov
add
push
mov
mov
cmp
fidivr
or
stc
jmp
push
(bad)
stc
sub
push
add
out
dec
outs
out
xchg
add
jge
cmp
loope
loop
mov
or
stos
push
in
stos
mov
jns
xchg
out
add
pop
cmc
jno
lods
mov
add
movs
test
jo
xchg
inc
dec
xor
cli
dec
cmc
js
dec
fcmovbe
push
ins
mov
test
cmps
cli
dec
mov
icebp
mov
xor
dec
lods
add
test
mov
adc
je
sub
mov
je
and
adc
push
sahf
jns
push
inc
mov
push
sbb
add
sbb
inc
fimul
dec
hlt
mov
movs
push
ret
aad
adc
or
outs
out
aad
push
retf
fisttp
jmp
loope
push
sahf
retf
mov
jg
aam
repz
daa
adc
shl
fcmovu
in
stc
sbb
outs
aad
jl
and
or
mov
clc
es
dec
sar
inc
jb
das
jo
call
popa
cmp
mov
jns
lock
dec
outs
cs
scas
gs
mov
adc
mov
push
arpl
cmp
inc
xchg
sub
xchg
iret
jp
(bad)
sub
lods
(bad)
sub
pop
rcl
mov
inc
loopne
adc
icebp
xor
fwait
icebp
add
leave
call
nop
les
mov
test
pop
pop
sub
mov
jmp
inc
out
hlt
shr
fs
pop
out
shl
or
dec
out
mov
pop
push
addr16
(bad)
lods
push
loop
loop
cld
or
push
cmp
test
sub
js
test
rol
xor
or
nop
sub
repnz
repz
jmp
sbb
jnp
add
loop
call
push
and
icebp
push
xchg
pop
add
mov
out
jbe
mov
xor
and
push
add
mov
rcl
pop
popa
cmps
ret
loop
or
fnstcw
les
(bad)
nop
xor
popf
ins
sbb
jle
sub
cmc
out
xchg
cs
inc
addr16
aas
or
mov
gs
mov
or
dec
int3
scas
and
out
aad
dec
pop
mov
mov
bound
std
mov
adc
and
add
jne
lea
push
jg
dec
jl
jb
(bad)
dec
pushf
fwait
cmp
mov
inc
stos
add
shl
or
pop
rcr
mov
jb
shl
shl
or
push
pop
xor
je
add
lds
dec
pop
add
test
pop
push
mov
jg
xchg
xor
in
ds
mov
cmc
clc
mov
push
jo
retf
mov
cmp
ret
cmps
test
jge
ror
xor
(bad)
adc
xor
(bad)
push
jle
jno
push
xor
icebp
lods
push
imul
ror
or
pusha
stos
cmps
imul
xor
repnz
sbb
in
and
jnp
xchg
jecxz
movs
and
cdq
movs
wbinvd
test
jmp
adc
lods
inc
inc
jae
div
sub
ret
add
(bad)
loope
pop
and
jmp
mov
fcom
retf
jns
pop
iret
cli
or
mov
cwde
inc
in
je
sti
mov
popa
jne
sub
int3
mov
sub
jmp
cmp
mov
push
adc
inc
add
pop
pushf
xor
xor
pop
in
ds
mov
push
call
in
adc
leave
and
mov
(bad)
stos
mov
ret
imul
or
jmp
pop
mov
xchg
fwait
mov
sub
adc
out
imul
jae
or
mov
push
push
adc
retf
adc
dec
bound
shr
xchg
out
pop
add
or
cli
cmp
cmp
or
mov
imul
out
mov
(bad)
pop
ss
fcomip
in
xor
popf
mov
mov
outs
fld
jae
in
mov
inc
jbe
adc
out
inc
and
leave
push
dec
sbb
mov
xchg
pop
imul
mov
fsub
ds
ja
sub
sar
sbb
ds
lahf
pop
mov
dec
loop
in
hlt
push
adc
retf
and
push
(bad)
test
xchg
inc
ins
mov
test
out
rol
pop
cmp
cmp
dec
cld
sbb
push
shl
ins
sbb
dec
push
ins
outs
cmc
mov
mov
loope
cld
lock
sub
sti
jmp
mov
cmp
sbb
push
pop
nop
jmp
jmp
adc
inc
fs
sbb
sub
lock
inc
jb
mov
cmp
div
test
loope
and
mov
mov
inc
or
daa
adc
rcl
xchg
or
fnstcw
mov
jle
fwait
add
lods
outs
stos
mov
mov
cmp
test
pop
shr
mov
push
sbb
inc
jmp
cli
lds
jnp
jmp
and
jo
lods
pop
mov
mov
cmp
dec
fwait
das
push
das
out
out
mov
xchg
hlt
fdivr
fistp
xchg
mov
inc
stos
sahf
sbb
cwde
dec
mov
push
cmp
add
pop
jmp
out
sub
ror
test
add
or
jnp
jns
bound
pop
mov
mov
add
ffreep
push
jl
adc
scas
and
adc
pop
dec
mov
sbb
and
pop
mov
sbb
xchg
cli
mov
sub
arpl
and
inc
mov
sbb
es
push
call
(bad)
jle
cmps
jecxz
daa
mov
mov
inc
test
push
mov
or
pop
ins
div
adc
adc
mov
sbb
shr
adc
push
sub
mov
retf
cli
xor
aas
ror
dec
mov
jno
xchg
mov
int
xlat
push
shl
lock
push
repnz
imul
or
stc
in
hlt
imul
test
mov
movs
cmps
inc
xchg
pop
cli
pop
shl
pusha
sub
push
in
fist
hlt
aad
sbb
or
and
rcl
inc
pop
aaa
mov
jmp
jns
cwde
lea
(bad)
pop
mov
push
push
lods
adc
out
test
xchg
pop
ror
ja
mov
cwde
or
mov
mov
dec
sub
inc
xchg
push
mov
imul
inc
lods
jl
retf
test
lds
or
fstp
pop
mov
add
push
cmps
fisttp
cmp
lds
iret
stc
mov
fadd
mov
test
in
xchg
push
out
xor
ret
jl
mov
shl
sbb
add
sysret
das
dec
mov
mov
int
loop
std
add
std
xchg
and
or
test
push
mov
push
leave
ds
out
add
push
test
loopne
(bad)
mov
sub
pop
mov
lock
and
ret
in
mov
mov
movs
sub
mov
mov
xor
mov
xor
sub
lds
sub
push
push
addr16
cdq
sti
or
cmp
arpl
stos
pop
mov
retf
ss
dec
aaa
pop
mov
icebp
mov
sbb
scas
pop
push
xlat
xchg
(bad)
push
in
lods
in
cmp
icebp
fimul
mov
push
and
add
cs
push
inc
dec
out
out
sti
out
leave
sub
scas
sti
aaa
xor
lods
mov
jg
adc
push
push
mov
pop
add
neg
cmps
mov
fwait
and
mov
inc
es
in
adc
mov
nop
stc
push
or
mov
bswap
push
stos
cmp
dec
xchg
hlt
mov
push
and
scas
call
fsub
sbb
mov
push
fwait
xlat
push
sub
cmp
dec
push
adc
aaa
inc
ins
out
inc
dec
dec
cmp
xchg
add
mov
jns
mov
sbb
mov
sbb
test
add
jns
in
inc
out
push
shl
xor
in
aam
push
cmp
(bad)
pop
sar
add
daa
imul
(bad)
jp
enter
stos
xchg
imul
fmulp
retf
jmp
xchg
mov
cmps
clc
inc
call
jne
xor
addr16
sbb
aad
(bad)
out
mov
pop
xchg
xchg
cmps
dec
mov
mov
out
jns
jmp
stc
out
sub
dec
push
mov
mov
push
jne
movs
nop
mov
cmp
add
fs
dec
fnstenv
mov
retf
pop
cmc
dec
inc
pop
in
mov
sbb
push
pushf
dec
xor
cmp
(bad)
(bad)
lods
(bad)
out
sub
add
lods
aam
fnstenv
aad
lods
movs
mov
scas
jae
repnz
dec
dec
and
xlat
test
dec
sbb
xor
call
pop
pop
dec
xor
cs
or
inc
adc
pop
std
(bad)
and
xchg
ja
xlat
sbb
inc
sar
add
and
xor
jecxz
xchg
sbb
scas
xchg
cmp
ins
movs
and
fmul
ror
jne
loopne
ds
cdq
icebp
ret
or
mov
cs
jg
jg
ins
inc
repnz
ret
fiadd
jmp
xchg
out
ficom
out
jns
(bad)
xchg
cmp
sub
popa
jge
jo
fisubr
and
push
imul
sub
cld
clc
adc
arpl
fnstsw
xchg
scas
add
jne
inc
add
call
cmp
mov
xor
ja
mov
test
ins
xchg
pop
and
inc
mov
(bad)
jae
repz
jbe
call
add
out
or
enter
pushf
call
jns
push
in
and
stos
mov
leave
mov
(bad)
fisttp
sbb
push
out
adc
push
cli
ficomp
jae
xor
hlt
iret
mov
push
sub
fldcw
clc
or
sub
and
loopne
sbb
fwait
inc
adc
fild
xor
out
cdq
mov
push
addr16
dec
sbb
repz
call
xchg
stc
inc
push
pop
jne
adc
ror
and
pop
es
cdq
dec
scas
enter
icebp
aad
mov
(bad)
or
(bad)
sbb
xor
sub
pop
jne
cmp
loope
aad
cmp
add
jmp
add
loopne
xor
mov
(bad)
scas
imul
stos
push
(bad)
mov
inc
fistp
arpl
iret
xor
cwde
xor
pop
jne
mov
push
fnstcw
rep
aaa
lds
int
out
add
daa
mov
je
mov
int3
xlat
mov
mov
jns
mov
imul
rcl
mov
mov
dec
or
adc
dec
fdivr
sbb
test
dec
fcom
mov
pushf
pop
mov
fcomi
test
add
mov
and
cmc
outs
fwait
xor
jne
push
and
icebp
fwait
es
add
rcl
jnp
adc
sahf
sub
mov
fisub
or
test
shl
push
das
and
mov
iret
mov
mov
push
jmp
jb
ret
push
icebp
pop
in
pusha
dec
sbb
std
test
test
gs
mov
ins
inc
repnz
movs
xor
les
fnstenv
sbb
in
out
out
imul
ss
pop
dec
shl
jnp
ret
jbe
dec
in
rcl
fidiv
movs
sub
jmp
cmp
das
push
daa
push
sub
xor
inc
lahf
ret
stc
mov
rol
iret
outs
pop
sub
mov
inc
retf
mov
inc
ja
out
add
loop
lea
xor
pop
lods
mov
add
mov
pop
shl
jl
and
imul
gs
sub
mov
std
call
pop
mov
push
and
fistp
in
in
sub
and
out
cmp
inc
imul
jne
mov
loope
rcr
loope
dec
ins
adc
cld
cs
pop
jg
pop
fcmovnbe
stc
in
xlat
push
and
sbb
dec
enter
leave
mov
popf
xor
or
stos
repnz
pop
or
lea
lock
adc
sub
add
ss
inc
pop
pushf
or
xor
xor
test
in
cli
push
mov
movs
inc
imul
inc
fdivr
push
frstor
mov
inc
xchg
sub
adc
jmp
loopne
dec
mov
cmp
cmc
xor
or
and
aaa
sub
and
dec
cwde
rcl
jp
push
fs
cdq
fldenv
add
dec
loopne
add
retf
xchg
sbb
mov
aas
mov
adc
mov
pushf
mov
cmc
scas
push
mov
mov
xor
dec
aam
dec
mov
and
(bad)
and
xor
pop
adc
lea
ins
adc
push
cmp
mov
xchg
shl
xchg
and
je
or
stos
shl
test
test
jmp
inc
test
fdiv
jecxz
inc
or
mov
out
push
int3
mov
or
outs
lahf
jno
hlt
pop
sub
or
das
inc
in
and
mov
popa
test
loopne
iret
call
xchg
stos
ja
push
cwde
cdq
dec
(bad)
add
push
jnp
shl
mov
into
psrlw
mov
or
jmp
popf
jmp
sub
pop
into
add
xor
jecxz
es
jg
icebp
cmp
mov
cli
push
sbb
shr
dec
scas
pop
ja
je
fwait
stc
ins
add
mov
popa
inc
out
inc
cmc
out
mov
adc
jecxz
sbb
xchg
ja
sub
xor
mov
cmp
icebp
ja
pop
fiadd
imul
jecxz
inc
call
in
xor
in
int3
ret
push
jmp
ror
or
cmp
add
adc
ja
pop
ss
std
shl
cmp
je
mov
enter
into
cmp
repnz
out
push
sahf
sbb
out
inc
dec
test
ret
dec
je
pop
jo
mov
in
add
cmp
dec
adc
sbb
leave
mov
mov
in
dec
iret
xchg
xor
jns
adc
pop
pop
(bad)
jl
sbb
inc
push
and
pop
ja
out
sbb
xchg
dec
clc
push
mov
sbb
ret
mov
mov
sub
popf
adc
aas
movs
inc
mov
jmp
stc
or
scas
out
mov
in
inc
shr
ja
xchg
not
inc
sbb
dec
sbb
imul
ret
(bad)
mov
jmp
add
int
(bad)
mov
inc
push
mov
arpl
jno
ins
mov
out
xor
daa
in
inc
mov
adc
dec
xor
jl
mov
shl
xchg
stc
sbb
(bad)
mov
test
xor
loope
and
mov
imul
xor
push
cmp
pop
inc
xor
jl
test
addr16
jnp
scas
push
into
retf
sar
dec
mov
cli
dec
stos
xor
retf
push
(bad)
pop
sub
stos
stc
xchg
dec
adc
jnp
pop
push
mov
test
movs
es
(bad)
sbb
lods
push
mov
cmps
loopne
in
cmp
int
mov
int3
clc
iret
pop
xchg
xchg
lods
iret
icebp
je
mov
xor
jg
mov
jl
vandps
jbe
sbb
adc
sbb
mov
lods
inc
movs
mov
fs
ins
in
ins
aaa
sar
mov
hlt
loope
and
out
and
mov
sbb
pop
pop
adc
test
shl
jle
icebp
mov
xor
cld
jg
mov
xor
adc
mov
and
mov
fidivr
adc
adc
and
jmp
xor
pop
pop
test
arpl
cmp
out
bound
jnp
xor
mov
push
push
xchg
cmp
add
sar
inc
shl
pop
test
jnp
(bad)
cwde
cli
add
push
xchg
cdq
and
dec
jbe
out
xchg
mov
inc
dec
int3
mov
adc
and
call
mov
xor
inc
jns
imul
adc
sub
sub
pop
cmp
cmp
(bad)
sub
je
mov
mov
jmp
push
out
xchg
add
cmc
jno
or
mov
sbb
add
add
not
dec
pop
jge
bound
mov
test
xchg
xchg
(bad)
aam
lock
ja
cmc
or
stos
sbb
pusha
inc
cmp
(bad)
mov
xor
and
xchg
push
sti
rcl
and
cmp
push
xchg
push
dec
pop
jbe
out
pop
lock
fisubr
adc
adc
cmps
lahf
fs
jae
dec
add
push
push
ja
xlat
dec
jmp
sub
daa
xchg
mov
sub
pop
pop
loopne
push
sti
loope
stos
call
and
mov
je
fimul
std
jle
jb
xchg
test
mov
imul
icebp
retf
loop
xchg
arpl
push
mov
pop
scas
xchg
les
inc
or
adc
mov
and
mov
pop
cwde
out
and
add
add
jo
add
xor
(bad)
xor
jge
or
dec
sub
or
mov
daa
fist
outs
addr16
sbb
stos
dec
pop
addr16
cmps
pop
push
and
pop
jecxz
mov
cwde
jns
jae
fst
or
push
mov
dec
mov
ret
sub
inc
xchg
sub
jecxz
add
rol
xchg
and
mov
shr
rcl
xor
loopne
(bad)
(bad)
jmp
fs
adc
ins
xchg
xor
or
gs
mov
mov
lods
lahf
inc
ret
scas
sub
out
sub
aam
scas
loope
call
loopne
fisub
sar
inc
push
dec
jbe
(bad)
xchg
inc
jns
mov
lods
cs
and
pop
mov
mov
push
xchg
and
mov
inc
arpl
ds
inc
movs
call
sete
dec
jb
push
in
pop
add
mov
dec
pop
aaa
(bad)
stos
aas
out
pop
fsub
and
xchg
or
mov
push
arpl
pop
jle
loope
inc
jne
retf
push
sub
daa
loop
and
mov
outs
mov
test
sub
jae
rol
cmp
out
(bad)
rol
ret
and
inc
push
fdiv
out
mov
mov
mov
lods
cmp
pop
add
repz
push
add
ficom
mul
fldenv
lods
add
loop
inc
cld
outs
out
dec
dec
pusha
add
loopne
popf
(bad)
sti
inc
imul
push
jle
and
sbb
and
sti
inc
repz
or
pop
test
aad
popf
mov
ja
bnd
in
mov
mov
or
sub
(bad)
xchg
das
aas
and
fmul
das
or
push
xor
mov
fnstsw
cmp
loopne
loop
push
mov
inc
sub
and
xor
fcom
push
cdq
mov
cmc
pop
mov
les
dec
repz
xor
pop
fcomp
inc
movs
fs
outs
inc
outs
xchg
pop
cdq
mov
outs
retf
add
shl
cmp
jle
call
or
jae
mov
pop
sbb
add
cmc
inc
jnp
mov
xor
mov
jbe
jne
xor
shl
push
test
stos
pop
movs
and
outs
push
das
and
fisttp
imul
test
int
xchg
mov
mov
adc
lods
leave
jmp
jmp
push
jecxz
ins
neg
or
in
cmp
mov
jnp
js
push
jmp
mov
js
sbb
push
add
pop
fbstp
jmp
shr
das
xchg
sub
xlat
sub
cmc
imul
adc
nop
mov
adc
xor
mov
call
scas
and
fist
adc
sbb
adc
push
mov
add
ret
test
popa
outs
adc
ds
add
aad
add
lock
fcom
xor
stc
movs
bound
jae
xchg
arpl
inc
mov
cmc
aas
fcom
test
sbb
call
les
xor
inc
push
mov
mov
repnz
(bad)
jmp
sub
xchg
push
inc
sub
cmc
shl
and
mov
xor
je
clc
sbb
pop
shl
xchg
mov
inc
sub
test
gs
and
jecxz
add
test
leave
mov
test
popf
push
(bad)
xadd
xlat
pushf
push
add
sub
ficom
sub
jecxz
shl
cmc
xchg
mov
fimul
call
test
aam
fidivr
nop
jmp
cmp
push
rcl
fdivr
pushf
sub
iret
bound
out
mov
sbb
call
xchg
xchg
pop
jnp
hlt
sbb
cmp
mov
outs
frstor
shl
in
xchg
push
pop
cwde
ret
(bad)
int
loopne
imul
xchg
test
jnp
mov
jp
dec
sub
int3
cmps
ds
je
jne
shl
inc
and
push
cmp
icebp
xor
dec
push
shl
cld
cmp
ins
and
ret
mov
or
ror
(bad)
add
adc
call
jbe
repnz
nop
cmps
retf
jmp
sahf
cmp
xchg
or
data16
fs
dec
xor
movs
cs
jnp
pop
xchg
aaa
adc
xchg
mov
movs
dec
aas
push
shr
repnz
leave
mov
sbb
cli
mov
and
ds
or
add
sbb
jle
ror
push
dec
dec
adc
rcr
add
mov
mov
mov
(bad)
hlt
mov
rol
addr16
jmp
pusha
loop
adc
dec
push
mov
jecxz
xor
ud1
adc
sbb
fwait
inc
sbb
inc
inc
outs
cmc
fld
mov
jnp
stos
lods
addr16
or
int3
(bad)
pop
xchg
xor
popf
cmp
div
mov
dec
xlat
loopne
inc
cli
loop
jmp
and
and
xchg
sbb
mov
xchg
dec
mov
mov
call
sub
mov
es
lds
lods
pop
pushf
push
xchg
fild
dec
add
xchg
ror
dec
test
ins
aad
loopne
in
xor
fisubr
mov
add
div
jns
push
sbb
loope
popa
inc
mov
adc
mov
shl
add
inc
call
inc
push
cmp
and
mov
out
fucomi
call
cmp
fwait
mov
enter
sbb
ins
(bad)
mov
ja
loope
clc
lock
push
dec
in
or
jg
nop
inc
outs
out
into
(bad)
mov
xchg
mov
dec
add
xlat
clc
es
cmps
pop
mov
xchg
jae
aaa
dec
int
(bad)
mov
sub
dec
(bad)
pop
and
dec
xor
sbb
sbb
sub
cmp
cmps
dec
test
in
inc
cmp
inc
push
mov
call
out
call
jge
xor
daa
dec
(bad)
and
push
xchg
mov
mov
add
xchg
rol
xor
aam
jno
sar
or
std
mov
and
icebp
push
(bad)
cdq
cmp
xchg
daa
es
fisubr
adc
or
jl
iret
sahf
push
xlat
std
jb
loope
xor
loopne
pop
scas
rcl
fwait
cli
xor
push
popa
adc
inc
and
loop
adc
ins
mov
rcr
pusha
xchg
inc
je
test
fsub
cli
test
les
pop
xchg
or
loope
push
popa
and
sub
jecxz
mov
mov
push
scas
jae
aam
rcr
push
call
add
retf
mov
clc
or
(bad)
add
cmc
push
shl
sti
pop
lods
jge
adc
inc
paddsb
dec
mov
int
arpl
cmp
clc
scas
mov
push
enter
daa
jg
sbb
loopne
call
push
retf
sbb
(bad)
jg
scas
ja
cmps
dec
fisubr
push
test
cmc
jle
stc
xor
in
bound
xor
lods
push
call
into
cdq
xchg
mov
inc
lods
in
mov
retf
retf
inc
repnz
out
sub
cmp
mov
fs
add
cdq
jmp
xchg
pop
clc
leave
sub
pop
jne
fdivr
push
mov
inc
pop
icebp
push
arpl
jne
ds
jmp
inc
adc
bound
adc
vandpd
sbb
(bad)
inc
adc
loope
mov
popf
adc
adc
je
push
jno
and
retf
inc
call
sbb
xchg
lock
shl
push
into
(bad)
mov
nop
or
arpl
cwde
or
fcomip
jns
ins
rol
ja
test
xchg
dec
xchg
sub
fidivr
xor
scas
call
mov
nop
sbb
push
sub
xor
shr
mov
leave
lock
sti
adc
push
pop
jmp
adc
inc
cmp
cmp
xchg
dec
call
mov
retf
stos
or
mov
repnz
dec
pop
mov
mov
daa
or
imul
aaa
ja
aad
loop
in
adc
fcomp
imul
jnp
sub
mov
pop
cdq
ret
push
pusha
adc
mov
dec
fsub
in
rcr
xchg
test
cs
aam
mov
lea
leave
addr16
arpl
pop
xchg
repz
sti
mov
call
inc
sub
add
pop
push
cmps
sub
lods
int
pusha
rcl
call
scas
cmp
add
lahf
and
iret
inc
add
sub
xor
mov
popa
(bad)
mov
loopne
sti
adc
jbe
ret
push
pop
cwde
mov
jae
pop
int3
cmp
inc
mov
fld
shl
stos
in
das
adc
push
add
ror
dec
neg
push
inc
not
mov
jmp
dec
mov
fdiv
push
jae
sar
retf
sbb
xlat
cdq
jmp
push
idiv
inc
xlat
hlt
add
aam
out
add
leave
scas
mov
mov
adc
repz
pop
sub
ficom
rol
cmp
push
call
pop
ins
sbb
add
jno
xchg
sub
ss
cmps
sub
add
cmp
pop
fstp
xchg
repnz
nop
pop
dec
je
out
sbb
jmp
jmp
cmps
ja
pop
xor
jno
dec
push
ret
jo
icebp
pop
mov
outs
mov
dec
inc
inc
cmp
push
push
rcl
cld
and
leave
xchg
lahf
add
nop
mov
and
mov
inc
dec
les
pop
in
or
sbb
mov
push
repnz
sub
or
int3
es
xchg
fistp
pop
scas
cmp
fdivr
push
pop
adc
jl
mov
dec
dec
sbb
push
and
fstp
hlt
mov
add
mov
cmp
push
addr16
cmp
mov
imul
ins
xor
(bad)
mov
popf
clc
sahf
pushf
cmp
pop
out
aas
fist
js
xchg
inc
push
rcr
imul
push
adc
dec
mov
adc
xchg
push
xor
aad
mov
sbb
std
sti
add
in
adc
xor
add
dec
inc
lock
aaa
xlat
ds
inc
ins
xor
and
or
pop
scas
push
test
out
lock
mov
fninit
cdq
add
dec
or
outs
inc
dec
or
lds
(bad)
pop
dec
fwait
and
lds
loope
cld
add
xor
daa
dec
dec
sub
out
retf
mov
lods
xchg
add
retf
or
xchg
add
mov
repz
imul
pop
pop
hlt
mov
mov
push
xor
xchg
in
jmp
stc
mov
sub
retf
imul
dec
push
xor
mov
js
jle
daa
mov
movs
jnp
mov
lods
sub
dec
jbe
fst
nop
inc
jno
dec
pop
lods
inc
leavew
push
mov
jae
mov
popa
cmovg
sbb
add
stos
lock
dec
out
or
add
and
and
jmp
fwait
mov
cli
mov
push
adc
outs
jns
xchg
mov
test
add
push
mov
jmp
mov
mov
aas
test
cmps
jne
jns
ins
mov
pusha
in
adc
cwde
adc
add
push
(bad)
mov
sub
jmp
jbe
in
frstor
fwait
rol
push
xlat
pop
push
or
adc
cmp
call
xchg
int3
mov
xchg
sub
xor
or
pop
movs
push
lahf
xor
xor
mov
xor
repz
xchg
jl
cmp
pop
stc
fist
int3
fwait
pusha
lock
lds
fild
test
pop
imul
ja
imul
aas
cmp
call
outs
mov
je
jne
mov
test
es
repz
pop
sbb
or
xchg
pop
or
stos
rcr
retf
ins
jne
fdiv
mov
push
ja
mul
rcl
push
cmp
enter
jmp
and
hlt
adc
pop
aas
add
ds
lfs
popf
jg
xor
push
call
add
xchg
ins
fdivr
lahf
adc
loope
lock
cs
inc
add
adc
and
sti
adc
data16
and
sub
cdq
mov
cmp
cmp
push
sbb
in
push
jl
jb
int3
packssdw
dec
push
jecxz
loop
jle
loope
popf
sbb
mov
les
aaa
das
jbe
sub
std
out
rcl
jge
mov
enter
or
test
adc
adc
xchg
fmul
ins
(bad)
repz
sub
nop
idiv
iret
and
cmp
fs
dec
push
test
scas
adc
rcl
and
jle
fild
push
mov
pop
gs
ret
je
lahf
out
and
data16
bound
pop
and
fdivr
fcomi
into
inc
push
xchg
pop
xor
sbb
leave
(bad)
clc
pop
iret
sbb
imul
adc
pop
jae
in
adc
mov
ss
lods
push
jmp
pop
fsubr
scas
and
call
jne
(bad)
mov
stos
fnsave
push
xor
mov
inc
ss
(bad)
sub
xchg
stos
mov
adc
xchg
loope
sbb
jge
clc
add
mov
enter
xlat
das
and
mov
sbb
xchg
sub
das
mov
std
mov
int3
nop/reserved
push
and
outs
sub
and
mov
sub
sahf
cmp
sahf
sub
sbb
mov
dec
push
cmp
js
lods
xlat
daa
mov
cmps
es
cmp
mov
pusha
jo
lock
inc
cmp
icebp
dec
jg
das
xchg
jne
movs
inc
ret
bound
rol
test
rol
lods
cmp
cdq
scas
popa
(bad)
xchg
mov
xchg
in
rcl
cmp
loopne
pop
push
jo
fwait
add
mov
icebp
push
shl
push
xchg
xor
iret
ins
xor
test
scas
and
add
mov
dec
cmp
aaa
mov
adc
inc
cmp
sub
cmovne
jecxz
jp
xchg
xchg
fadd
pop
fwait
dec
adc
or
xchg
rcl
mov
pop
rcr
xchg
pop
in
cmps
(bad)
adc
sbb
push
pop
pop
outs
test
or
imul
mov
dec
lea
push
adc
or
push
jbe
lock
cs
sbb
inc
pop
scas
cmp
jg
lock
int
sbb
jg
shl
ret
dec
xchg
scas
xor
retf
sub
dec
pop
and
fdivr
mov
adc
dec
inc
sub
mov
adc
dec
neg
lds
shl
cmp
xchg
or
pop
and
sahf
idiv
cld
cld
jl
loopne
sbb
push
or
jmp
mov
les
xchg
pusha
ret
inc
mov
and
lea
mul
iret
(bad)
or
retf
mov
fwait
(bad)
xor
cmp
(bad)
push
xor
pop
cmps
add
and
arpl
out
sbb
mov
sbb
movs
pop
or
nop
in
inc
adc
xchg
jge
sub
jle
xlat
add
std
push
push
out
jno
xlat
ds
out
add
ror
std
mov
sti
or
inc
sbb
rcr
push
and
dec
arpl
pop
je
sub
aas
push
lock
iret
sub
inc
dec
xor
pop
xchg
dec
shr
lods
xor
adc
fs
call
mov
outs
pop
shl
into
scas
or
shr
xchg
sub
push
in
fimul
and
sbb
push
add
das
cs
sub
xchg
cmp
mov
xor
ret
push
dec
jmp
in
inc
mov
cmps
pop
push
pop
add
ins
std
inc
mov
jne
into
cmp
aam
dec
mov
xor
(bad)
jg
sub
std
fmulp
sub
cmp
movs
adc
mov
xchg
push
leave
add
cwde
pop
sub
es
jp
xchg
in
xchg
test
loop
lds
loop
add
or
pop
mov
xchg
fadd
xlat
and
sahf
ret
(bad)
ffree
or
mov
neg
cdq
sbb
mov
ret
pushf
fsubr
sbb
sti
ror
mov
pop
(bad)
pop
xor
addr16
retf
adc
push
in
mov
cmp
loope
or
pop
shl
vpunpckhdq
int3
ret
push
int
mov
xchg
stos
mov
push
inc
daa
pop
enter
xchg
cmp
lds
mov
fnstenv
sub
push
cmps
sub
push
dec
idiv
push
jb
pop
test
mov
fs
mov
push
or
mov
pop
mov
push
push
(bad)
ins
(bad)
dec
gs
call
cmp
pop
cwde
pop
int3
cmp
hlt
cmp
pop
repz
ins
retf
loope
call
addr16
push
dec
mov
xchg
ja
inc
adc
shl
dec
jo
xchg
mov
jo
nop
push
addr16
mov
mul
sub
aaa
add
movs
ins
daa
in
cmps
sti
sbb
fist
add
in
imul
pop
imul
push
xor
sar
cmps
pushf
fistp
or
mov
fidivr
jg
shl
aas
pop
dec
fadd
sub
inc
or
sbb
pop
adc
mov
sbb
enter
in
push
inc
xchg
mov
rcl
aam
dec
ret
jmp
icebp
inc
shl
scas
aad
in
and
aam
out
sub
fadd
clc
stc
and
cmp
scas
cmp
fs
inc
dec
cld
fs
inc
jno
pop
call
xor
aam
fwait
(bad)
xlat
add
xchg
lods
(bad)
pop
les
(bad)
nop
sub
iret
mov
cmp
jne
or
push
jmp
idiv
enter
push
test
sbb
mov
int
jmp
scas
jle
rcl
js
add
jns
pop
arpl
fwait
gs
and
mov
enter
add
imul
or
mov
daa
mov
dec
dec
mov
sub
not
xor
sbb
js
xchg
fbstp
(bad)
(bad)
and
inc
sar
or
and
inc
les
cld
jecxz
in
push
aam
into
fs
outs
inc
add
push
cld
or
jbe
sub
cli
add
jns
lock
push
cmp
loope
fldenv
jmp
push
aad
jne
pop
std
cmc
jo
sbb
add
sbb
rcr
add
mov
frstor
cdq
sbb
jae
cmp
dec
mov
inc
dec
int3
dec
mov
out
shl
mov
ror
sbb
jbe
xchg
push
loopne
scas
add
sub
stos
inc
(bad)
mov
hlt
xchg
pop
inc
dec
addr16
jge
add
out
call
mov
mov
in
jmp
leave
mov
idiv
and
mov
xchg
pop
xor
jge
mov
es
mov
call
jg
int
cmp
mov
jne
cmp
es
ret
cwde
xchg
es
(bad)
fstp
iret
or
ins
xor
jp
pop
xlat
xchg
push
xor
cld
movs
(bad)
test
daa
imul
call
outs
and
pop
fisttp
jno
fxch
or
sahf
es
lds
ins
or
mov
sbb
gs
mov
pop
scas
rcr
sub
popa
aad
or
cli
cmp
sub
inc
dec
xchg
pop
sbb
out
je
jno
les
dec
dec
ja
ins
add
stc
adc
jge
xor
ret
enter
es
xor
jmp
xor
aam
stos
das
fs
mov
inc
inc
mov
mov
les
mov
sub
cmps
ret
pop
fst
mov
dec
repnz
jnp
jl
cmp
mov
push
and
test
jne
sub
and
xor
xor
pop
test
xchg
pop
add
mov
jmp
js
pcmpeqb
push
jae
into
mov
xchg
push
out
(bad)
repnz
pop
call
(bad)
jmp
jno
bndldx
push
and
mov
dec
mov
repz
rol
movs
push
retf
add
out
inc
ss
sar
mov
pusha
mov
jl
fcmovbe
cdq
sbb
das
stos
jge
sub
xchg
rol
sub
popf
mov
loope
into
lea
fs
rcr
clc
mov
rcr
loopne
mov
rcl
mov
cli
pop
je
mov
fcomi
adc
repnz
aam
push
mov
mov
jge
and
mov
lods
(bad)
xchg
inc
mov
inc
mov
sbb
loopne
xor
jbe
test
adc
arpl
pop
ret
retf
pushf
xor
push
(bad)
div
xchg
jnp
test
sbb
mov
push
xor
fmul
cmp
sub
ja
mov
pusha
sbb
xchg
mov
call
sub
push
repz
test
fdivp
push
adc
xor
in
mov
jmp
and
cli
imul
and
or
je
shl
repnz
dec
cmp
add
dec
cs
adc
jmp
loopne
xchg
ja
lods
add
and
popa
or
jmp
mov
jnp
sub
mov
fiadd
jne
je
jnp
push
iret
fnsave
aaa
cld
adc
sub
inc
fbstp
push
out
jl
call
and
and
mov
pop
or
test
fisttp
loopne
call
gs
jo
out
and
pop
cmps
pushf
xor
out
jo
xchg
mov
jne
je
mov
push
(bad)
mov
(bad)
hlt
stos
hlt
xor
or
cmp
arpl
adc
mov
sub
xchg
xchg
das
les
cmps
mov
outs
adc
inc
data16
out
sub
test
in
jne
and
cmp
or
cmp
add
mov
out
mov
enter
push
and
scas
and
push
and
add
push
out
mov
and
pop
hlt
dec
pop
sub
adc
add
(bad)
mov
das
and
or
movs
pop
dec
and
or
mov
fnstsw
in
fsubp
cmp
dec
jae
popf
rol
add
les
sti
pop
sbb
mov
jmp
out
push
(bad)
dec
mov
adc
inc
test
movs
xlat
add
or
scas
push
mov
in
outs
rol
mov
aad
movs
lods
in
mov
xchg
adc
jecxz
fld
inc
dec
mov
push
das
sar
jmp
cs
xchg
or
and
mov
push
imul
push
xor
sub
jge
imul
scas
sub
stc
aaa
sbb
fistp
outs
enter
je
ja
jbe
cmp
stos
dec
push
mov
addr16
sbb
push
ret
cmp
sub
shl
stc
jo
das
push
std
lds
cdq
cmp
rol
mov
mov
push
test
ss
movs
xchg
inc
mov
mov
jne
test
sti
xchg
pop
into
and
por
cmp
iret
jp
jp
fisttp
and
mov
jo
and
ins
arpl
ret
inc
cs
xor
sbb
mov
jmp
mov
sub
mov
bound
rcr
ror
bound
or
loop
jmp
mov
mov
inc
push
addr16
xor
mov
or
sub
sub
int3
fdivr
cdq
jne
fs
jmp
mov
(bad)
xchg
bound
and
gs
and
and
or
cmp
mov
mov
xor
pop
jge
lods
fcom
push
jne
mov
ja
lods
outs
mov
mov
repnz
rol
jns
imul
inc
jb
ins
push
retf
(bad)
jo
aas
call
arpl
push
sbb
xchg
xlat
cmp
loope
dec
xor
xchg
add
out
mov
aas
loope
pop
jge
push
mov
fstp
cmp
(bad)
or
or
sub
jmp
lods
xor
cmp
sti
dec
sti
punpckhwd
or
repnz
cmp
arpl
dec
(bad)
imul
(bad)
sub
(bad)
sub
sbb
aad
das
movs
sbb
lea
dec
ja
adc
ins
add
xchg
lock
pop
jbe
and
add
inc
adc
(bad)
imul
mov
shl
addr16
mov
daa
cmc
cmp
pop
(bad)
ds
fisttp
xor
xor
in
call
push
xor
jbe
fst
ins
fdiv
push
(bad)
stos
(bad)
nop
fld
inc
push
enter
jmp
aad
pop
into
sbb
cmp
mov
inc
sbb
xor
jle
pop
inc
lahf
bnd
jmp
mov
jmp
movs
daa
inc
jle
mov
xchg
jg
test
or
pop
push
retf
cdq
push
sub
mov
mov
sub
and
xchg
shr
dec
fidiv
out
adc
test
cmp
call
xor
mov
call
jae
imul
or
lods
adc
and
push
test
ficomp
add
xchg
cmp
xor
push
shl
ins
je
sahf
push
outs
and
push
mov
adc
outs
mov
or
cdq
jbe
ins
jmp
jge
xor
dec
and
rcr
sbb
ror
push
ds
jnp
fnstenv
push
aam
adc
stos
jb
sub
enter
retf
ins
mov
add
outs
xor
fwait
in
movs
xchg
push
dec
pop
add
sub
sahf
sub
cmps
xchg
jae
int3
(bad)
sahf
sbb
cdq
(bad)
int
lea
test
mov
xor
pop
lahf
cmps
mov
daa
mov
call
ficom
rcr
push
inc
lds
dec
or
jae
jae
rol
jae
push
ret
pop
cmp
sbb
(bad)
fst
add
ja
xchg
dec
mov
cdq
sub
adc
mov
or
jbe
and
lock
(bad)
fisubr
aad
mov
mov
aas
pop
jl
shr
push
xor
push
pop
div
xchg
sub
add
mov
(bad)
cmp
ins
lahf
adc
xor
addr16
fisub
push
mov
lds
test
cmp
pop
inc
nop
loopne
loop
fwait
jbe
loopne
mov
in
push
or
pop
sub
adc
jnp
ins
cmp
add
dec
lahf
inc
and
test
mov
test
jl
ins
stos
mov
mov
in
je
pop
ss
cmp
stos
xchg
jmp
sar
pop
jns
cli
jae
and
xlat
ja
ffreep
pop
sbb
jle
stc
jmp
lahf
mov
add
scas
or
adc
dec
jns
std
push
stos
and
xchg
mov
sahf
inc
pop
jp
jle
jbe
ins
xor
shl
push
cwde
imul
in
mov
test
mov
ja
imul
mov
pop
mov
mov
xchg
inc
fcmovu
mov
dec
fldcw
sbb
cmps
xchg
jmp
lea
push
lods
xor
add
enter
call
push
je
mov
(bad)
mov
or
push
cmp
mov
or
in
fbld
stos
jmp
bound
sti
or
push
test
shr
jno
pop
lods
(bad)
ss
rcl
jnp
mov
pop
mov
sti
es
pushf
bound
sahf
add
sub
mov
aad
(bad)
jmp
sub
dec
es
push
sbb
add
pushf
mov
int
in
sbb
and
mov
inc
or
add
mov
jp
push
in
daa
mov
push
add
movs
fnsave
sbb
pop
inc
fcom
(bad)
iret
cmps
idiv
mov
mov
fucom
dec
mov
push
push
dec
dec
je
in
mov
sub
shl
or
popa
adc
mov
repnz
movs
jmp
xor
jb
bound
fs
mov
fnsave
adc
xchg
aaa
call
mov
sub
fld
loope
xchg
xchg
add
js
repz
aad
push
popa
jb
rol
jnp
pop
mov
ficomp
pop
pop
(bad)
aaa
test
cmp
and
sbb
or
movs
scas
jecxz
cs
mov
jne
shl
pop
outs
xor
scas
adc
je
jmp
mov
bound
xlat
aad
in
push
loope
dec
inc
fs
pop
mov
loop
call
out
inc
sbb
mov
call
mov
xor
div
sbb
pop
push
movs
cmc
or
sti
cmp
sub
xchg
xor
push
xchg
mov
ror
lods
mov
add
iret
gs
adc
std
or
mov
jb
xor
scas
push
cmp
aad
movs
aam
or
mov
push
lods
aad
mov
mov
pop
mov
push
scas
std
inc
sbb
pop
enter
push
call
xchg
ja
and
js
mov
ins
jge
xor
push
sub
test
int
(bad)
in
jg
push
and
dec
xor
pand
dec
bound
xor
jo
mov
int
pop
inc
les
xchg
jo
xchg
data16
push
xchg
in
data16
in
call
xchg
repz
stos
inc
rol
cmps
inc
add
scas
aas
add
test
call
shl
sbb
iret
and
mov
ss
test
dec
out
popa
dec
popa
movd
and
test
pop
arpl
cmp
push
pop
retf
sub
pop
test
daa
or
push
push
add
shr
mov
jmp
jb
inc
imul
stc
out
jmp
jnp
mov
push
je
(bad)
in
push
lods
jmp
ror
retf
mov
lds
dec
(bad)
enter
leave
sbb
popa
addr16
mov
sbb
push
dec
cld
sar
and
and
mov
xor
mov
div
jo
xor
das
adc
stc
(bad)
bound
fsubrp
cmc
not
lea
(bad)
xchg
push
movs
pop
out
push
or
test
cmp
stc
jge
sub
aaa
xor
ss
dec
(bad)
mov
cld
push
mov
mov
sti
pop
sbb
adc
mov
jne
fidiv
stos
inc
dec
adc
sahf
pusha
cmc
adc
jo
in
inc
inc
pop
mov
add
xchg
mov
pop
xor
sub
push
push
retf
dec
push
add
xor
shl
js
(bad)
xor
inc
pop
xor
sbb
retf
addr16
enter
and
iret
mov
sub
mov
add
fst
xchg
mov
mov
xchg
leave
pop
lods
into
mov
push
hlt
adc
out
cmp
loope
mov
mov
shr
push
in
enter
outs
cmp
sbb
or
retf
test
ins
nop
leave
mov
jg
out
cmp
data16
stos
xchg
in
retf
movs
jo
aam
(bad)
jmp
(bad)
mov
mov
push
pop
lods
mov
cmp
frstor
call
das
xchg
cli
push
pop
lock
jmp
sar
mov
push
mov
fsub
fcom
xchg
cmp
(bad)
push
clc
push
sub
loope
stos
mov
inc
dec
jne
sbb
sub
(bad)
ss
mov
push
dec
pushf
jmp
inc
mov
fidivr
mov
mov
call
je
(bad)
mov
daa
push
repnz
add
add
mov
iret
or
repz
dec
inc
js
clc
jb
dec
cwde
retf
sbb
pushf
and
pop
std
movs
cmp
sub
fisttp
aad
pop
ret
loopne
mov
pop
cmp
mov
vhsubps
mov
repnz
pop
cmps
inc
mov
xor
fld
xor
push
(bad)
int3
jae
dec
cmc
push
mov
sub
jns
mov
cmp
add
mov
rcr
jo
fcom
sub
dec
dec
ss
xchg
mov
cmp
inc
push
xchg
out
popf
out
jo
pop
aaa
mov
ret
repz
mov
mov
test
jb
fs
mov
cmps
shl
sbb
adc
mov
dec
xchg
xlat
cmp
imul
sbb
xor
push
xor
mov
retf
jmp
inc
mov
ins
push
cli
cmp
gs
cmp
daa
dec
imul
sahf
xchg
mov
ds
cdq
scas
pop
sbb
sbb
or
sbb
jne
push
or
rcr
movs
sub
or
int3
mov
add
mov
mov
lods
adc
mov
(bad)
movs
push
adc
push
lods
pop
and
dec
test
js
jmp
push
ror
adc
fidiv
loop
add
inc
add
adc
imul
inc
add
mov
mov
pop
pop
es
fbstp
push
dec
rol
cmp
in
sbb
imul
es
stos
mov
mov
movs
loope
sbb
outs
or
pop
sbb
fxtract
mov
adc
cs
outs
sub
mov
sbb
loopne
adc
mov
and
add
sub
add
push
inc
mov
ja
jno
div
xchg
cdq
lods
jl
add
cdq
(bad)
mov
add
adc
das
mov
xchg
mov
jae
inc
movs
push
mov
in
cmc
lods
mov
lock
pop
inc
xor
mov
cmc
lods
cmp
jns
mov
inc
or
call
jae
shl
cmc
inc
icebp
out
sbb
push
scas
pop
adc
push
cmps
adc
cmp
dec
dec
aam
push
test
aas
pop
and
lds
adc
adc
ins
push
cwde
and
imul
mov
xlat
pop
stos
fucomi
movs
xor
mov
push
fdiv
and
lea
in
(bad)
cld
and
(bad)
xchg
out
scas
mov
add
rcr
adc
div
dec
fsub
stos
mov
cli
out
fisttp
imul
sub
sub
pusha
pop
in
das
push
push
lods
bound
das
sub
push
clc
and
mov
outs
jno
shl
mov
repz
daa
xor
or
pop
ss
sub
mov
ins
cmp
dec
jmp
jno
dec
vaddsubpd
(bad)
test
popa
das
xlat
or
xchg
enter
pop
mov
repz
gs
daa
jno
push
(bad)
stc
adc
adc
test
dec
mov
inc
add
xchg
stc
sbb
mov
and
sar
out
retf
and
int3
in
pop
shl
cwde
pop
stc
or
mov
cli
outs
jae
out
mov
xlat
mov
cmp
xchg
mov
add
sbb
mov
push
push
fnstcw
pop
nop
dec
dec
in
pop
shl
loopne
repz
or
js
jne
stc
push
fsubr
cmp
mov
push
adc
(bad)
sbb
and
ret
xchg
scas
pushf
and
dec
out
daa
cmps
daa
mov
imul
(bad)
mov
jbe
test
loop
jae
cmp
mov
vpunpckldq
jmp
adc
es
arpl
xchg
scas
mov
je
imul
xchg
mov
std
scas
pop
push
add
push
dec
push
pop
fidiv
pop
or
pop
out
mov
cmc
mov
pop
dec
fdiv
pop
cdq
sti
in
fisttp
pushf
(bad)
cmp
stos
pop
cli
sbb
ja
push
(bad)
mov
pushf
mov
push
fiadd
jnp
mov
mov
cmp
test
stc
ret
cmp
sar
popf
jge
dec
int3
pop
pop
lods
cmp
cdq
xchg
jne
pop
cmp
push
test
lods
lock
icebp
pusha
cmps
sub
pop
push
scas
cmps
add
mov
popf
stc
add
adc
stc
rol
pushf
(bad)
pop
pop
js
(bad)
outs
push
fidiv
xor
add
sahf
mov
jmp
daa
cmp
adc
outs
mov
sub
jmp
movs
stc
inc
jl
es
sub
sub
data16
out
(bad)
fcom
pop
xor
je
int
and
rcr
and
xchg
cli
pop
fdiv
xchg
jne
mov
test
xchg
clc
movs
fist
adc
jecxz
in
mov
test
ja
sbb
push
push
jns
lods
sub
or
rol
mov
adc
scas
gs
popf
jp
jmp
loope
stc
int
sbb
(bad)
in
cmp
lock
mov
sbb
mov
push
dec
in
call
enter
xchg
cmp
cwde
aas
fisttp
jge
fxch
cmp
or
pop
ret
and
cmp
ror
repz
push
scas
cwde
mov
dec
xor
pop
cs
fld
popf
(bad)
jle
in
xchg
pop
sbb
pop
and
and
shr
iret
adc
sub
mov
(bad)
cli
sub
(bad)
imul
shl
adc
pusha
popa
pop
mov
mov
jg
cmps
pop
pop
retf
add
mov
push
cs
imul
shr
shr
sub
push
js
gs
lods
sti
jle
(bad)
and
test
sbb
add
dec
adc
jle
ins
out
cmps
pop
outs
jae
inc
ret
xor
icebp
popa
push
mov
mov
popf
lods
scas
dec
addr16
or
pop
adc
(bad)
mov
das
inc
fcmovbe
imul
or
dec
icebp
mov
test
leave
or
jne
jo
pop
jmp
adc
(bad)
mov
shr
cwde
in
es
(bad)
out
mov
lock
mov
daa
jg
inc
mov
mov
call
fistp
mov
inc
cmp
cmp
repz
dec
adc
mov
push
jg
test
test
xor
mov
pop
and
mov
fwait
or
mov
jae
jl
retf
loop
dec
add
inc
or
pop
stos
mov
mov
leave
xor
jp
jbe
movs
call
dec
cdq
mov
ja
pop
shl
fldcw
and
jb
cmp
and
fs
mov
push
jp
dec
enter
jno
leave
mov
add
jmp
mov
jmp
call
and
dec
push
push
dec
arpl
pusha
call
aaa
out
(bad)
cwde
ins
repz
imul
inc
pop
mov
or
in
mov
test
or
push
ins
popa
lods
mov
cmps
mov
dec
mov
and
movs
lea
inc
fcomp
cmp
adc
jno
jns
push
adc
enter
mov
pop
inc
jle
enter
adc
mov
adc
xlat
test
jle
mov
ds
sahf
inc
push
stc
push
mov
mov
sti
xor
mov
xor
outs
pop
xchg
mov
inc
dec
outs
push
(bad)
scas
lock
mov
std
movs
mov
pop
or
add
clc
dec
xchg
test
mov
jl
test
push
sub
cmps
or
push
ja
sub
sbb
push
popa
mov
pop
cwde
jnp
daa
and
xlat
in
lods
test
fldcw
fnsave
jnp
pusha
(bad)
xor
dec
push
mov
mov
sbb
mov
dec
cmc
sub
int
jns
call
sbb
inc
outs
mov
lds
and
add
adc
inc
jl
mov
mov
jmp
pop
loop
mov
jle
ins
push
jne
cwde
sub
xchg
mov
mov
rcl
test
or
fistp
mov
call
cwde
cmp
sbb
pop
fst
or
adc
inc
out
int
xor
mov
mov
sub
mov
fisttp
push
sub
pop
jp
adc
enter
(bad)
mov
xchg
rol
ins
mov
out
outs
mov
int3
jmp
cs
mov
mov
loopne
mov
addr16
push
xchg
lods
sti
jge
bound
add
add
pop
mov
imul
sub
dec
shl
aad
mov
ins
enter
adc
repz
call
inc
dec
repnz
cmp
fwait
and
fisttp
inc
or
mov
test
sub
and
mov
inc
mov
scas
jae
push
pop
arpl
mov
cli
mov
clc
movs
dec
mov
in
sar
test
in
daa
in
sbb
gs
fild
pop
sbb
(bad)
mov
sbb
cmp
adc
mov
ret
jg
fisubr
clc
cmp
repz
repz
inc
mov
pop
mov
scas
jb
rcl
xchg
call
or
and
imul
sub
cmp
xor
or
xchg
ror
jmp
out
psadbw
ins
loope
pushf
jmp
cli
push
cli
retf
add
mov
shl
and
jle
jo
and
adc
iret
ss
cmp
push
xor
add
push
not
push
push
addr16
scas
and
gs
mov
pop
inc
js
adc
std
and
inc
add
add
mov
ret
cmp
inc
adc
inc
xchg
inc
test
pusha
mov
sbb
xor
retf
jne
pusha
cmp
mov
ja
push
and
dec
mov
xchg
jnp
fcmovbe
push
test
jne
loopne
jb
mov
lock
xchg
(bad)
xchg
pusha
fs
mov
cmp
sbb
outs
xor
mov
push
lahf
daa
dec
into
cmps
(bad)
iret
std
xor
mov
sbb
retf
popa
sbb
mov
lahf
daa
push
xor
aad
jle
cmp
ret
xor
push
pushf
and
mov
jmp
dec
pop
adc
cmps
push
mov
outs
xchg
hlt
push
les
jne
sub
add
mov
cli
(bad)
nop
call
dec
nop
mov
ret
mov
ins
pop
xchg
stos
hlt
adc
stos
ins
pop
xchg
sub
push
int3
pushf
and
add
mov
push
cli
add
pop
mov
jp
dec
cmp
mov
adc
rol
repnz
mov
sbb
dec
cs
pop
inc
sbb
inc
pop
loope
mov
cmps
es
mov
out
sbb
add
in
or
movups
pop
outs
dec
repnz
mov
mov
add
punpckhwd
popf
movs
push
inc
sbb
adc
inc
add
xor
jno
dec
xor
inc
clc
bound
loop
retf
add
push
inc
fs
add
or
aas
and
mov
sub
inc
ret
add
lock
cmp
std
jecxz
cmc
sbb
sahf
popf
jb
(bad)
mov
and
int3
xchg
outs
push
mov
mov
adc
bound
int
les
push
pop
or
mov
icebp
adc
das
mov
sub
add
js
popf
imul
js
jo
xor
test
mov
and
sub
retf
inc
jne
repz
das
jl
xchg
loope
inc
aam
outs
mov
or
pop
sbb
(bad)
push
lock
(bad)
xlat
enter
repz
jno
pop
jb
fidiv
sbb
add
loopne
sbb
pop
mov
cs
jge
das
jmp
mov
jo
(bad)
dec
sub
ins
adc
cmp
in
hlt
in
ret
pop
sub
ds
xor
loope
les
sub
fbld
dec
daa
pop
xchg
push
sub
addr16
sti
popa
call
mov
je
jae
rcr
leave
retf
xor
mov
js
mov
xchg
icebp
ins
or
xor
and
cmp
ds
fcmovnu
jbe
jge
mov
fwait
or
dec
xor
cmp
test
mov
xor
call
xor
sub
sub
shl
xchg
cmp
mov
mov
call
in
nop
adc
mov
out
dec
mov
aas
fldcw
mov
jmp
lds
dec
shr
es
adc
mov
movs
fwait
sbb
adc
mov
and
mov
pop
les
push
aam
pop
jge
aad
fdivr
aaa
or
mov
push
mov
enter
pop
and
add
push
sti
jmp
inc
xchg
xor
sbb
push
in
fild
rcr
dec
push
mov
and
dec
mov
push
cmp
sar
mov
fsubr
test
and
dec
add
das
fisub
jo
std
push
jge
push
jae
sti
inc
jecxz
ds
mov
ins
retf
ds
out
imul
aaa
aas
push
out
jo
jno
push
dec
(bad)
popa
jecxz
lods
mov
cmp
retf
dec
xor
cli
dec
inc
and
arpl
mov
test
xor
mov
outs
push
lahf
ret
mov
dec
cmp
cdq
ret
fimul
dec
retf
fdivr
call
rcr
jbe
sub
push
shl
add
popf
pop
stos
lods
mov
mov
push
pop
xor
std
or
stos
xchg
in
pop
inc
add
dec
aaa
cmp
cld
mov
and
mov
jb
mov
(bad)
sbb
(bad)
in
nop
pop
push
sti
xchg
cdq
sub
js
mov
sub
cld
stos
push
mov
mov
(bad)
push
inc
add
test
ficom
jo
sti
add
scas
gs
int
jmp
jecxz
adc
je
inc
out
fs
mov
ja
hlt
call
jecxz
repnz
pop
add
pop
push
mov
pusha
cmp
fwait
loope
shl
sub
and
ins
das
sbb
sbb
pop
sbb
cmc
adc
mov
lock
jne
cmp
fnsave
or
out
dec
push
mov
dec
xchg
xchg
inc
xor
xchg
aad
pusha
xor
call
ret
ret
fimul
mov
xor
or
jmp
in
or
call
push
out
mov
pop
rcr
in
loopne
and
dec
pop
jbe
jne
scas
in
test
mov
sub
inc
scas
nop
ficom
daa
js
inc
(bad)
lds
(bad)
push
lds
push
mov
pop
or
out
sbb
(bad)
mov
push
dec
xchg
sub
sbb
cmp
aas
jns
fs
push
mov
pop
and
mov
or
out
xchg
rcr
popa
fwait
(bad)
sar
jb
xor
imul
pop
cmp
cmc
aam
xor
inc
jle
jb
shl
xchg
inc
and
inc
xlat
dec
mov
mov
jle
sub
mov
scas
push
dec
lahf
std
jecxz
ffreep
add
les
inc
je
cs
test
jg
fidivr
aaa
and
(bad)
xchg
xor
add
js
add
mov
xchg
add
xcrypt-ofb
cmps
out
ja
cs
xchg
repnz
mov
cmps
dec
ret
add
mov
ret
jmp
pop
std
loop
(bad)
scas
dec
idiv
fwait
mov
imul
hlt
dec
dec
push
retf
adc
mov
sub
xchg
pushf
sahf
movs
cwde
mov
jl
add
stc
xor
inc
cmp
mov
adc
jp
daa
jmp
js
add
rcr
sahf
ficomp
ds
jo
jbe
clc
xchg
call
inc
xor
cmp
push
mov
mov
test
inc
das
cdq
push
xchg
push
mov
je
xor
ss
and
cld
xchg
jle
fwait
test
jmp
(bad)
call
mov
(bad)
push
repnz
imul
jbe
push
aaa
scas
adc
push
jne
stos
mov
dec
retf
jge
mov
inc
ds
push
mov
pop
jno
out
popa
pushf
std
pop
fcomp
outs
nop
retf
stos
add
in
dec
sbb
mov
mov
sub
xchg
push
leave
cmp
jmp
inc
add
ja
loope
pushf
pop
xchg
adc
pop
fisubr
mov
out
ja
inc
fmul
cmp
loop
mov
fsubr
push
push
xor
dec
mov
mov
inc
dec
into
jo
int3
adc
test
and
test
rcr
mov
fcom
mov
cld
xchg
jns
lock
stc
cmc
popa
mov
out
popa
mov
aam
sbb
mov
and
mov
jle
xchg
add
or
enter
xlat
xchg
inc
cmc
add
ror
or
aas
jp
aaa
retf
jp
mov
mov
fcmovu
mov
xchg
dec
retf
push
xor
dec
pop
dec
cmp
cli
pushf
fwait
mov
lods
push
clc
hlt
mov
and
add
sbb
arpl
(bad)
sti
test
imul
iret
test
je
and
rcl
jl
movs
and
mov
xchg
or
sbb
fcmovnb
adc
pop
fst
add
and
pop
es
cmp
sbb
jge
outs
das
fld
popf
dec
or
pop
pop
inc
inc
xor
call
stos
push
in
ror
out
daa
ds
mov
icebp
inc
and
push
cld
sbb
pop
and
and
loop
mov
(bad)
or
xchg
out
ret
cs
cwde
inc
ror
xchg
rcr
int
push
jmp
pushf
gs
push
movs
sub
cmp
pop
in
and
mov
jo
pushf
inc
or
ss
mov
cli
ins
push
ins
jecxz
sbb
sbb
or
pop
mov
lods
sbb
fcmovu
sbb
sbb
inc
or
and
pushf
call
popa
or
cld
stc
dec
movs
xor
js
popf
pop
out
dec
mov
pusha
fisubr
fs
into
shl
pop
push
mov
ins
daa
add
fcmove
jmp
dec
and
cmps
int
daa
(bad)
cmps
or
movs
mov
repz
out
jle
test
les
mov
xchg
rcr
xor
mov
stc
(bad)
sub
cmc
cmp
pop
xor
shl
in
ret
rol
cmp
mov
xchg
pusha
sub
hlt
push
jo
arpl
cmp
push
sbb
cdq
push
push
test
cli
inc
push
in
or
adc
call
je
imul
pushf
ret
dec
push
outs
push
cmp
je
jne
xor
imul
dec
daa
sbb
push
das
imul
add
cmps
aad
jmp
retf
ror
push
inc
pop
pop
lds
push
sub
xchg
arpl
mov
aas
xchg
and
and
push
icebp
retf
pop
push
imul
int3
xlat
xchg
cld
ret
or
aad
mov
jns
mov
xor
add
push
pop
jae
adc
pop
test
xchg
xchg
push
lock
jns
adc
mov
dec
pushf
ins
lds
repnz
push
mov
mov
dec
mov
aad
shl
cmps
(bad)
cmps
ror
popf
and
or
(bad)
cmps
mov
cmps
jo
cmps
bswap
outs
enter
mov
xlat
fild
adc
sub
daa
jno
and
ret
sbb
jmp
adc
sbb
outs
(bad)
cwde
loopne
out
pop
retf
xor
fiadd
jb
xor
cdq
push
test
push
iret
dec
into
test
jno
std
mov
aam
jae
cmp
jae
retf
or
mov
mov
sub
mov
mov
jmp
loopne
push
dec
arpl
cld
sbb
out
jg
lods
(bad)
int3
pushf
inc
ins
add
cmp
xchg
mov
mov
xor
in
inc
push
inc
sub
mov
cmp
(bad)
dec
mov
or
lods
fwait
daa
(bad)
fsubr
sbb
push
xchg
sub
ins
mov
cli
xchg
add
cld
loopne
mov
add
push
aad
mov
add
hlt
mul
dec
sub
ins
pushf
mov
mov
js
inc
inc
gs
xor
mov
sub
ss
mov
outs
aaa
cmp
sbb
sbb
jbe
pop
lods
sub
mov
jge
pop
das
push
pop
sbb
test
rcr
mov
mov
enter
loopne
movs
dec
mov
addr16
add
cli
mov
jg
sub
inc
cwde
fstp
repz
inc
sbb
int3
sbb
fidiv
cwde
mov
and
dec
xor
imul
inc
lahf
js
mov
dec
sub
xor
sbb
dec
xchg
pop
ror
mov
fdivr
mov
fsubr
int
pop
sub
in
xor
sbb
add
or
sbb
je
movs
div
mov
add
test
adc
fimul
test
adc
pop
xor
gs
xor
jno
sbb
dec
pop
mov
in
dec
pop
jle
dec
add
inc
adc
loop
jno
push
xor
sti
push
sub
popf
inc
xor
stos
push
inc
int3
fisubr
xchg
lock
aad
into
mov
iret
sbb
fucom
and
pop
icebp
adc
jb
sbb
inc
mov
call
mov
sbb
fistp
mov
loop
call
movs
pop
(bad)
(bad)
mov
sbb
xchg
cmps
cmp
(bad)
cli
je
mov
or
mov
xor
jns
pop
inc
out
pop
mov
push
je
retf
or
adc
mov
neg
(bad)
iret
xor
pop
fmul
push
push
pop
dec
mov
fisttp
fisttp
xor
lock
adc
outs
inc
cwde
scas
pop
push
and
data16
lgs
mov
in
sbb
dec
sbb
ror
jmp
mov
jmp
sbb
imul
sti
popf
sub
inc
out
pusha
cmp
repnz
mov
pop
lea
mul
test
in
mov
adc
pusha
sti
push
gs
in
ret
jg
mov
fstp
cmp
cmc
scas
or
jg
into
data16
(bad)
adc
push
or
push
ins
pushf
aas
pop
push
fwait
inc
add
cmps
mov
push
mov
std
push
test
clc
popf
cmp
movs
mov
inc
or
xchg
ins
repnz
adc
icebp
adc
sbb
sbb
retf
imul
cli
sub
pop
enter
nop
ret
and
jecxz
fmul
sahf
aad
(bad)
mov
jp
in
clc
lahf
sbb
(bad)
les
xchg
and
mov
cmps
call
cmp
mov
adc
sar
(bad)
xchg
sub
xor
js
jle
sub
adc
nop
mov
lods
jnp
sbb
fwait
nop
(bad)
jmp
sbb
popf
sub
push
push
jne
cmp
loopne
jnp
add
ds
mov
jecxz
call
jb
jo
std
not
call
sahf
into
add
inc
sbb
jecxz
xor
in
dec
clc
test
ins
fild
push
adc
(bad)
stc
xchg
jl
add
xchg
jmp
stos
inc
(bad)
stos
xchg
dec
push
adc
xor
xchg
adc
xchg
ror
sbb
in
js
or
cmp
scas
lahf
arpl
fadd
xor
sub
jecxz
(bad)
xlat
daa
mov
xchg
jno
or
xchg
xchg
jecxz
xor
in
or
lods
out
sbb
daa
mov
stos
dec
scas
and
call
xor
fld
movs
push
jge
jmp
sub
cmps
xor
iret
add
pusha
adc
dec
rcl
cmps
das
push
push
mov
(bad)
adc
xor
(bad)
xor
mov
mov
push
push
cmp
shl
cli
jmp
and
add
or
pop
sbb
leave
aaa
in
sub
popa
mov
mov
shr
test
enter
in
mov
(bad)
out
pop
stos
iret
sbb
sbb
nop
icebp
adc
div
aad
sti
xor
clc
das
sub
push
add
cmp
xchg
and
addr16
aad
mov
inc
cmps
dec
ret
dec
je
int3
iret
cld
adc
shr
addr16
or
sbb
xchg
sub
repnz
repz
or
aad
ds
mov
hlt
fild
pop
icebp
inc
iret
add
pushf
cmp
dec
sbb
out
or
cmp
test
out
jmp
sub
ds
sti
adc
mov
mov
mov
xchg
pop
jl
push
xor
(bad)
sbb
dec
sub
hlt
mov
sub
rcl
push
dec
and
imul
mov
pushf
cmp
xor
add
push
and
add
cmp
fsub
inc
pushf
jbe
in
stos
out
sbb
loop
cmp
out
pop
outs
adc
popa
out
pop
push
inc
pop
inc
or
lods
or
push
push
movs
movhps
jmp
sub
daa
jb
call
dec
in
add
fidiv
and
jecxz
in
mov
fadd
xor
push
push
pop
stos
sub
dec
frstor
pop
xchg
ret
jecxz
xor
mov
into
bound
stos
dec
or
dec
rcr
test
push
xchg
push
sbb
push
xchg
pop
mov
ja
adc
jne
imul
push
stc
es
mov
in
xor
(bad)
sbb
jmp
lock
or
xchg
mov
pop
sub
or
pusha
jb
cmc
enter
xchg
ins
call
nop
lds
arpl
sub
or
out
pop
fsub
mov
aaa
in
into
cmp
test
outs
mov
jmp
mov
mov
fwait
mov
xlat
cmp
clc
inc
jp
movs
int3
lahf
add
sub
add
outs
push
push
mov
enter
pop
sub
mov
push
push
cli
pushf
cmp
gs
es
dec
cmp
sub
jmp
fs
(bad)
cli
push
jmp
mov
push
and
mov
dec
ror
lods
push
cmp
sub
jbe
popf
(bad)
xor
jae
cmp
(bad)
aad
dec
mov
mov
scas
sub
or
xor
jo
jmp
dec
enter
adc
xchg
mov
lods
sahf
jns
outs
enter
call
mov
sbb
xor
sbb
(bad)
(bad)
fadd
repz
loop
push
(bad)
add
dec
pop
neg
scas
pop
inc
addr16
push
outs
call
movs
cs
ret
fnstsw
and
jmp
sahf
cmps
mov
inc
bnd
and
pop
push
push
add
jge
mov
int3
mov
pop
scas
movs
icebp
shl
xchg
retf
aas
add
jmp
mov
adc
and
mov
dec
les
push
xchg
mov
mov
cs
sub
cli
neg
xchg
dec
xor
les
into
(bad)
jbe
mov
xor
movs
bound
jge
or
(bad)
iret
pop
pop
cld
mov
xchg
ficomp
imul
pop
shl
adc
mov
push
add
xchg
jns
sbb
arpl
lea
jg
(bad)
mov
mov
scas
push
data16
aad
jmp
shl
jne
cmp
daa
outs
mov
mov
pop
mov
pop
jb
in
mov
cs
out
js
fcmovnbe
mov
bound
jnp
cwde
or
cmps
and
jns
icebp
cmps
push
rcl
clc
push
mov
sbb
pop
xor
stos
pop
test
jae
out
jae
rcl
mov
imul
js
retf
mov
adc
inc
mov
pusha
push
ss
retfw
pop
sub
pop
rol
xor
mov
push
in
push
or
je
adc
js
cld
jle
mov
test
inc
xor
jo
jmp
es
dec
cmp
adc
adc
xchg
ret
xor
outs
adc
sbb
and
(bad)
popa
daa
sbb
jmp
sub
int
inc
lock
inc
or
(bad)
stos
mov
es
mov
inc
repz
lods
or
cs
xchg
repz
sbb
scas
push
and
pop
ins
inc
fisubr
add
stos
sbb
test
popa
clc
pop
inc
add
(bad)
arpl
sub
mov
mov
jecxz
rcl
mov
push
cmp
in
inc
movs
outs
and
jp
je
je
sbb
push
(bad)
xor
push
adc
push
ss
cmp
inc
mov
jle
mov
(bad)
in
mov
push
jne
push
mov
je
pop
je
std
mov
fidivr
repnz
cwde
out
and
or
outs
hlt
jo
out
cli
or
push
jge
lahf
fwait
(bad)
cld
jle
add
shr
mov
ror
mov
cmp
jae
test
test
jae
inc
rol
pushf
(bad)
xchg
xor
test
sbb
sahf
push
std
inc
stc
cmp
fld
lock
sbb
outs
popa
jp
js
mov
xor
fistp
jge
mov
sar
outs
xor
mov
cdq
xor
fsubr
sub
dec
jl
rcl
or
sub
xchg
push
add
and
mov
fs
sti
add
adc
outs
mov
push
lods
add
cmps
fbld
cld
xor
jmp
mov
fdivr
stos
repz
popa
inc
cmp
psubusw
add
(bad)
fs
add
adc
push
and
pop
je
or
adc
or
or
dec
mov
cwde
push
dec
and
ins
outs
adc
out
add
clc
jno
mov
dec
out
mov
test
push
jg
jmp
mov
inc
outs
xor
push
xor
pop
clc
mov
ret
xchg
cmp
loope
data16
lahf
inc
popf
push
adc
mov
inc
aaa
cmp
xchg
fstp
sub
adc
dec
adc
pop
pop
dec
aam
cmp
push
jl
sub
mov
pop
pusha
cmp
or
jp
add
mov
mov
add
push
mov
push
popa
mov
inc
add
mov
push
jmp
adc
fstp
add
cmp
mov
dec
mov
mov
pop
stos
pushf
loop
movs
mov
jge
mov
loop
movs
div
outs
pop
jb
es
sti
and
or
push
mov
and
loopne
push
loope
push
adc
or
mov
pop
sbb
ficomp
nop
mov
jae
cmps
mov
ror
retf
mov
mov
mov
add
mov
push
mov
outs
test
(bad)
(bad)
jg
xor
scas
and
sti
rcr
std
add
jl
or
lods
pop
cmp
jb
cmp
lahf
jge
leave
scas
out
xchg
imul
sub
nop
sbb
rcr
mov
jecxz
hlt
test
push
mov
pop
add
in
(bad)
push
not
mov
dec
inc
cmp
gs
retf
xchg
loop
retf
int3
scas
xor
mov
mov
mov
aas
cld
jle
div
push
or
lea
das
adc
dec
adc
xchg
ret
cdq
fchs
sub
xor
xlat
sub
jbe
cdq
push
mov
lods
fcomip
jb
sub
xlat
or
cmp
sub
fst
xchg
add
inc
imul
jge
sub
pop
dec
or
mov
push
lock
fdiv
sub
adc
sbb
mov
and
fmul
std
fld
into
rol
cmc
mov
dec
push
jg
add
add
test
cld
or
xor
mov
mov
dec
inc
inc
add
leave
push
(bad)
mov
dec
jb
pusha
ror
xchg
mov
mov
(bad)
lds
stc
mov
add
ja
into
(bad)
stos
lds
jl
add
lock
mov
and
push
mov
std
mov
dec
retf
fabs
dec
cmc
pop
sub
sbb
rcl
mov
or
inc
inc
inc
out
daa
or
jp
cmp
sub
or
scas
fsub
icebp
popa
adc
push
mov
or
or
lea
mov
mov
js
dec
inc
hlt
ret
aad
lods
push
mov
push
adc
or
sbb
or
rcr
mov
jae
mov
push
mov
jb
ins
stos
hlt
mov
pop
scas
xor
push
mov
inc
sbb
sysexit
jmp
nop
cli
imul
cmp
mov
rcr
jo
pop
sbb
ja
and
jmp
xchg
or
lods
sbb
inc
cmp
pop
or
out
shr
mov
sub
mov
pop
retf
lods
inc
fst
stc
repz
cmps
mov
jns
pop
addr16
jge
adc
ja
aam
aam
add
adc
std
add
out
mov
pop
mov
push
push
and
imul
cmp
xchg
jmp
push
sbb
pop
jae
add
xchg
mov
adc
imul
sub
pop
sub
(bad)
lahf
and
xor
cmps
inc
xor
(bad)
repnz
fst
jp
test
mov
pop
out
dec
jne
sub
les
xor
mov
fsubr
aas
inc
sti
sti
push
mov
cmp
xor
push
iret
sbb
ds
test
stos
inc
imul
out
iret
bound
sub
lds
sar
inc
test
jb
add
daa
pushf
mov
ror
popf
push
scas
les
dec
shr
out
fisubr
in
push
add
jmp
iret
fldcw
or
sub
repnz
xchg
adc
fild
ret
fisub
xor
lock
out
fistp
pop
ret
cmc
xchg
adc
test
ins
pusha
shr
adc
push
pushf
mov
sub
mov
or
and
adc
fadd
mov
jae
fsubr
pop
leave
xchg
push
ret
jae
ja
fcmovnbe
mov
push
sub
popf
aaa
ficom
js
inc
cmp
and
add
mov
mov
xchg
or
mov
call
mov
leave
sub
ja
jmp
jnp
or
adc
jno
icebp
mov
popa
iret
call
rcr
aaa
push
cmps
xor
inc
nop
pop
call
pushf
dec
loopne
fs
lods
adc
mov
sub
scas
xor
psubsw
aas
cmp
iret
ffreep
jg
das
fldcw
pop
cmp
retf
add
fcmovnu
leave
jo
push
clc
leave
test
and
icebp
ror
adc
lock
loopne
mov
call
push
pop
(bad)
pop
fdivr
mul
je
cwde
add
mov
cmc
(bad)
push
jge
rcl
xor
push
lds
xlat
test
call
xor
rol
jns
mov
repnz
sbb
and
cli
adc
imul
dec
out
mov
je
in
add
dec
mov
sar
mov
retf
(bad)
and
mov
jo
inc
in
cwde
mov
loope
fwait
mov
jns
outs
loop
sbb
pop
adc
lods
mov
push
pop
inc
shr
cmp
ret
(bad)
mov
cmp
xchg
fisttp
movs
fisub
pop
popa
test
mov
jb
imul
mov
inc
cmps
cmps
fild
and
cmp
cmp
lods
and
xor
in
xor
xor
mov
mov
stc
cmps
shl
pop
(bad)
popa
pushf
xor
and
inc
mov
out
mov
pop
mov
ins
loopne
add
inc
sbb
std
jnp
cmp
nop
hlt
pushf
mov
pop
cmps
out
outs
jae
int3
pop
(bad)
cmp
enter
je
jae
or
rcr
mov
dec
adc
inc
add
ds
push
(bad)
mov
push
cmp
cmps
inc
(bad)
xchg
xor
pop
pop
cs
repz
dec
jne
psllw
bound
ds
xchg
cwde
popf
pop
pop
mov
mov
jbe
mov
cld
pop
sbb
lock
or
sbb
inc
in
bound
adc
inc
icebp
inc
sub
or
jmp
xchg
imul
adc
cmps
fs
out
je
test
arpl
push
pop
es
in
or
loope
adc
mov
int3
xchg
mov
pop
jbe
es
test
call
pop
adc
stos
hlt
loop
dec
add
inc
sub
push
(bad)
stc
sub
inc
jne
stos
fcmovne
les
test
stos
sbb
lods
or
jnp
pop
mov
cmp
scas
into
movs
cwde
call
aaa
scas
dec
cmps
mov
adc
push
dec
(bad)
cwde
mov
cmp
adc
arpl
(bad)
cli
xor
fidivr
push
dec
mov
mov
adc
fld
jo
cmp
jo
in
loope
dec
and
cmp
jmp
fsubp
call
and
xor
push
stc
dec
fsubp
lea
mov
ss
fidiv
ds
rcl
cwde
cmps
and
push
loopne
les
xchg
mov
pop
and
ins
pop
xchg
aaa
or
mov
shl
lods
(bad)
leave
sub
out
mov
loope
das
adc
popa
cmps
sub
push
dec
cmp
push
add
cld
jp
call
or
xchg
pop
sub
jbe
xor
outs
inc
retf
dec
dec
js
adc
jo
(bad)
cmp
push
pop
scas
shr
js
int3
and
mov
lds
mov
ja
sbb
xor
test
aad
mov
mov
mov
sti
int3
rep
dec
rcl
cmp
dec
push
add
int3
push
dec
push
push
and
mov
dec
enter
sbb
xchg
nop
jle
cs
xchg
lea
repz
popf
nop
cmp
inc
cmp
push
out
xchg
addr16
add
inc
cmp
adc
push
ror
or
xchg
ds
dec
sub
in
jno
ret
jns
icebp
pop
pop
mov
(bad)
inc
ds
fstp
inc
mov
and
or
movs
stos
mov
bound
ja
fcmovnb
(bad)
cld
lea
(bad)
lock
mov
adc
adc
ins
retf
ss
pop
aaa
jno
jmp
adc
adc
sti
imul
xcrypt-cfb
cmps
in
add
xor
aad
loopne
mov
movs
int3
in
cmc
xchg
retf
xor
push
sbb
adc
inc
cdq
mov
jp
fistp
or
imul
adc
push
into
inc
sbb
imul
inc
add
cdq
xchg
imul
xor
pop
dec
test
push
mov
test
jne
mov
and
push
lods
pop
dec
xchg
pusha
jmp
and
and
mov
dec
xchg
call
mov
dec
adc
or
hlt
ja
pushf
psubd
je
jno
jecxz
es
add
retf
les
or
cmp
into
sub
xchg
pop
add
imul
xchg
pop
jge
push
fdiv
mov
in
mov
jmp
adc
sti
pop
(bad)
xchg
dec
mov
xchg
mov
jns
loope
leave
jmp
sbb
jg
(bad)
div
imul
ss
push
push
cwde
aad
jmp
(bad)
retf
aad
mov
mov
aad
std
popa
inc
(bad)
stc
and
sub
repz
mov
fcomp
add
test
sahf
in
cmc
sbb
mov
xor
mov
push
fs
rol
rcl
xchg
dec
loope
mov
scas
rcl
sub
leave
push
xchg
dec
sub
lea
mov
add
out
mov
pop
ret
fucomip
cld
fidiv
outs
dec
and
xchg
add
cmp
push
ffree
stos
mov
js
sub
sbb
mul
sbb
fdivrp
rcl
and
xchg
popf
aas
fdiv
mov
sub
and
mov
or
mov
movq
xchg
push
sbb
jge
call
add
enter
test
mov
(bad)
jp
fistp
xchg
add
into
loop
or
cwde
in
mov
cmp
mov
sbb
mov
cmp
push
dec
add
and
mov
mov
jae
mov
sbb
out
inc
push
imul
jg
es
mov
inc
mov
mov
push
push
mov
pusha
or
call
pop
repnz
or
xchg
mov
jl
sub
mov
test
inc
sar
sbb
lea
sbb
push
mov
push
jae
inc
mov
out
inc
das
inc
pop
mov
jmp
rcr
ds
push
repz
call
lahf
push
xlat
jmp
in
or
jecxz
in
bound
fld
inc
nop
mov
ret
mov
stc
lods
mov
test
push
dec
cmp
popf
cld
fld
sub
inc
imul
mov
jp
aam
mov
test
imul
pop
sub
mov
out
pop
(bad)
in
call
jmp
stos
pop
push
add
dec
das
aaa
fcomp
adc
and
sar
push
xchg
mov
mov
mov
imul
jg
or
hlt
xor
adc
xchg
icebp
mov
nop
xchg
mov
push
test
idiv
cmps
mov
pop
sti
loop
imul
push
or
retf
xchg
hlt
std
cmp
frstpm(287
inc
std
sbb
and
cmps
mov
fwait
jne
test
jmp
push
sub
dec
out
dec
nop
mov
xor
lea
out
test
pushf
cdq
lods
mov
xchg
rcl
test
or
fidiv
adc
stos
pop
sub
adc
push
xor
sbb
pop
push
iret
pop
stc
out
std
call
jne
push
cwde
cld
int3
xor
or
jae
rcr
ror
ror
aad
xchg
rcr
inc
and
fwait
in
or
outs
ja
jg
mov
movs
cli
aad
ret
ret
and
jle
repz
jo
sbb
push
push
inc
inc
ret
push
gs
sbb
pop
xchg
lahf
into
or
pop
mov
rcl
mov
jmp
fs
dec
mov
jle
aam
mov
movs
or
popa
cmp
cmps
jmp
mov
jo
xor
test
aaa
pusha
rol
mov
add
out
call
xor
sub
icebp
sti
(bad)
jb
pop
jmp
aaa
jp
retf
add
xlat
mov
jnp
cmp
ror
data16
add
test
inc
es
shl
ss
mov
or
cmp
jb
stos
push
cs
mov
jmp
inc
inc
sbb
pop
jg
fld
add
lea
arpl
pop
xchg
inc
sub
inc
xor
xor
sub
push
jmp
sub
ret
ret
sbb
and
add
fmul
add
sub
jnp
pop
inc
or
shl
pop
popf
outs
jne
int3
bound
and
aaa
inc
(bad)
in
inc
rcl
pop
mul
shl
pop
icebp
in
aaa
cli
mov
jl
or
sbb
cmc
sub
rcr
je
leave
mov
retf
test
enter
inc
sub
in
sbb
mov
ins
std
adc
mov
and
push
pop
cmc
and
icebp
ins
and
add
mov
nop
inc
mov
retf
inc
jb
test
dec
popa
mov
mov
sub
cmp
(bad)
test
xchg
mov
push
or
mul
push
ss
adc
jl
gs
and
int
mov
rcr
add
jmp
sar
xor
dec
xchg
and
popa
cmp
jb
test
test
mov
inc
pop
sbb
daa
jl
xor
dec
test
push
push
ins
or
adc
test
test
sbb
add
mov
pusha
push
cmp
mov
je
lods
addr16
mov
or
(bad)
(bad)
sub
xchg
cwde
popf
add
ret
outs
nop
mov
jl
mov
lods
dec
lods
add
or
sti
mov
outs
fist
retf
ss
add
call
call
loope
xchg
daa
jmp
cmp
and
rol
dec
adc
mov
mov
sub
or
fwait
mov
mov
cmc
jnp
repnz
xlat
cmc
cmp
imul
push
adc
xor
fimul
push
mov
ins
jno
icebp
mov
mov
sub
cmp
in
retf
shl
or
je
bound
mov
bound
rcl
leave
cs
cmc
adc
ins
pop
jecxz
jp
xor
xchg
icebp
xchg
div
ins
mov
pcmpeqb
cmp
imul
cmp
mov
je
dec
cmp
fisttp
int3
inc
loope
xor
mov
into
stc
addr16
xor
int3
in
aad
or
pop
ja
retf
fwait
pop
jns
lds
lods
fst
(bad)
fidiv
and
mov
out
loope
jbe
imul
popa
add
fsubr
stos
add
(bad)
mov
ja
int3
add
mov
cmp
daa
das
push
mov
cmp
aaa
cwde
pushf
leave
mov
cdq
adc
sub
jmp
pop
add
push
sbb
dec
pop
rcr
xchg
mov
push
xor
shl
sbb
lock
fdivr
loopne
icebp
dec
cmp
push
and
sub
jp
xor
stos
jmp
in
sbb
adc
or
les
scas
sbb
xchg
out
adc
add
mov
jns
and
xchg
ins
es
jle
pop
scas
stos
movs
gs
sub
mov
inc
push
in
mov
adc
pusha
stc
inc
in
scas
push
xchg
aam
jge
mov
adc
scas
pop
jnp
inc
add
push
sub
xor
pop
cmp
fcomp
sub
pop
push
repz
ds
fistp
push
sbb
jno
or
xchg
stc
bound
dec
push
sub
and
mov
adc
pop
addr16
cmps
int
fstp
cwde
jmp
sbb
data16
mov
cli
mov
jo
shl
es
and
inc
push
xlat
pop
and
dec
dec
fwait
mov
pop
mov
jmp
in
and
jmp
and
mov
pop
rcr
(bad)
push
inc
and
and
ins
call
es
gs
popa
cmp
push
cmp
inc
push
sub
xchg
out
imul
outs
lods
pop
mov
add
outs
mov
push
div
pop
xchg
call
mov
mov
sbb
xchg
in
fisttp
hlt
adc
jmp
jns
es
mov
pop
xor
inc
sti
dec
add
pop
cmp
cmps
enter
push
dec
ins
fdivr
add
xchg
sbb
adc
out
dec
mov
cmp
test
(bad)
xlat
ss
mov
add
scas
jmp
into
ror
mov
stos
xor
mov
or
cmp
mov
in
dec
stos
cmp
mov
jg
loope
mov
mov
iret
jmp
imul
pop
jp
mov
add
aam
xchg
sub
out
mov
ss
addr16
scas
cmp
sub
fnsave
xchg
loope
mov
inc
rol
pop
icebp
fdiv
sub
mov
jecxz
nop
cmps
jo
retf
ror
pushf
pop
jns
fld
arpl
jl
retf
dec
adc
dec
xchg
inc
(bad)
sti
popa
xchg
adc
call
aas
les
push
(bad)
retf
xor
imul
ret
cmp
imul
stos
sti
mov
lock
push
outs
dec
sub
push
popa
std
(bad)
stos
inc
ins
mov
daa
rol
add
mov
lods
add
fild
aad
or
and
xor
aam
adc
(bad)
sbb
push
jnp
(bad)
retf
(bad)
or
cli
fwait
or
pop
mov
xor
pop
dec
cwde
and
push
jo
mov
jne
dec
sbb
loop
ret
and
(bad)
(bad)
adc
mov
push
xor
sbb
sub
jmp
cs
outs
inc
rol
mov
addr16
sub
dec
dec
and
adc
outs
lods
addr16
(bad)
popa
dec
cmp
sbb
rcr
inc
das
nop
adc
std
stc
data16
std
ss
mov
fwait
and
movs
repz
clc
jb
xchg
mov
jecxz
dec
ins
pop
adc
shl
inc
push
xor
test
outs
in
pop
hlt
jo
xchg
pop
add
pusha
in
jecxz
out
(bad)
hlt
sub
push
test
mov
sbb
inc
mov
in
shl
retf
mov
pop
or
cmp
jle
lds
scas
mov
ins
adc
mov
jg
lea
int3
mov
mov
xor
sbb
mov
(bad)
and
repz
push
cmp
push
inc
push
pop
std
ins
jge
cmps
shr
xlat
adc
popf
and
outs
mov
sbb
mov
retf
cmp
adc
cmp
mov
add
imul
stc
dec
push
push
sub
or
jecxz
loope
dec
scas
pushf
(bad)
std
mov
inc
mov
icebp
outs
cmp
lea
cmp
lods
js
sahf
rcl
int
(bad)
popf
stos
inc
pop
pop
sub
fsub
bound
xchg
pushf
mov
add
cmp
mov
leave
sbb
ret
pop
fwait
push
pop
sub
repz
inc
fst
fistp
jp
fnstsw
test
and
ja
sub
in
sub
jb
dec
sar
inc
push
sbb
push
jo
(bad)
fdivr
pop
call
pop
pop
data16
dec
sbb
jne
ins
push
fcomp
mov
adc
outs
mov
test
fist
stos
aam
sbb
in
push
(bad)
movs
scas
int3
push
cmp
lods
js
push
(bad)
jp
dec
repnz
cdq
or
aad
pop
aad
rcl
ja
ret
cli
cmp
mov
and
fnstenv
cmp
out
dec
mov
sub
(bad)
mov
arpl
or
jg
sub
je
vunpckhpd
pop
out
xor
(bad)
and
push
sbb
stos
ja
addr16
bound
mov
rcl
jae
jb
les
loopne
adc
scas
pop
adc
and
inc
pop
add
fwait
aam
cmps
aam
xor
fimul
in
test
popa
cwde
jb
jmp
sbb
inc
rol
push
fisttp
pop
push
cs
mov
test
push
jge
dec
sub
in
lahf
out
dec
fldln2
mov
inc
fcomp
xor
add
cmp
stc
(bad)
emms
nop
push
inc
sar
lea
and
or
fmul
mov
adc
xchg
mov
adc
pop
loop
xchg
stc
and
cmp
je
popa
cmps
ret
inc
push
and
inc
fwait
xchg
inc
mov
jg
sbb
dec
push
ret
mov
and
xchg
adc
(bad)
sbb
imul
and
cmp
(bad)
mul
pop
call
scas
les
sub
(bad)
in
cmps
sbb
mov
scas
xchg
lods
stos
pop
ins
(bad)
push
mov
out
mov
inc
sbb
not
jb
outs
sbb
lea
aam
push
stos
mov
retf
add
dec
or
mov
jnp
pop
or
jno
loopne
mov
pop
addr16
in
jb
add
and
out
test
sbb
or
ror
sbb
xchg
sbb
xlat
daa
cmp
adc
cmc
adc
inc
lods
inc
retf
add
xor
jno
jmp
jae
and
stc
out
popf
mov
mov
mov
loop
cmp
leave
shr
dec
jecxz
fnsave
or
call
jmp
stos
(bad)
fild
loope
and
ja
outs
xlat
jecxz
aaa
jnp
mov
lods
cmp
adc
inc
pop
mov
adc
rcr
movs
jb
movs
xchg
add
popf
addr16
pop
cmp
adc
test
xchg
clc
mov
dec
clc
inc
daa
outs
ror
push
and
loop
(bad)
jno
into
mov
mov
dec
inc
add
fdivr
in
push
pushf
push
and
sbb
push
pop
in
push
sub
int3
adc
mov
mov
mov
scas
cmp
inc
dec
popa
or
mov
cmp
stc
mov
outs
xchg
mov
rcl
adc
dec
fisubr
nop
xchg
push
pop
xor
or
cmp
dec
stc
dec
xor
ja
add
mov
pop
xor
pop
mov
sbb
dec
add
or
ins
mov
or
fwait
adc
test
mov
scas
test
jmp
sub
jno
fadd
movs
cli
(bad)
mov
(bad)
mov
repz
jbe
lds
sti
jae
fiadd
loop
mov
add
sub
inc
popf
mov
or
xor
sbb
xchg
jp
stos
cld
aaa
sbb
mov
sub
and
pop
in
mov
mov
stos
cmp
nop
sub
f2xm1
inc
fdiv
in
jle
add
sub
cmp
cmp
mov
push
loop
mov
mov
pop
repnz
repnz
js
or
jecxz
mov
adc
leave
mov
stos
rcr
push
mov
(bad)
jmp
mov
push
jnp
or
cld
adc
(bad)
movs
push
xchg
mov
dec
sub
imul
dec
(bad)
mul
push
mov
fs
(bad)
pusha
dec
sbb
push
ins
adc
fwait
movs
sbb
test
cmc
or
cmps
or
adc
loopne
in
adc
jge
int
xchg
sub
sub
dec
lods
or
mov
mov
cmp
loope
cmp
and
cmps
pop
stc
loopne
in
adc
adc
popf
xlat
add
pusha
aam
daa
scas
cmps
adc
int
lods
xchg
fnstenv
xchg
cmps
es
mov
pop
cli
test
test
out
fucomi
cmc
xchg
retf
push
cmps
dec
mov
mov
ja
adc
stos
or
fwait
adc
call
cmc
sub
das
lahf
inc
retf
out
cs
adc
in
jns
or
cdq
nop
lock
in
stos
cdq
cmp
sbb
jb
jno
shl
xchg
cmp
in
cmp
xchg
shl
adc
sar
int3
adc
fs
je
mov
dec
jb
repz
(bad)
and
xchg
jo
iret
clc
lahf
xchg
inc
out
add
mov
imul
pushf
add
bound
cmp
jge
push
jb
jl
inc
cmp
push
jb
cmps
outs
inc
fucom
push
sub
push
or
data16
push
(bad)
aam
push
scas
test
repz
leave
cld
jno
imul
or
mov
jge
iret
pop
or
xchg
ss
pop
fwait
lods
cmp
scas
dec
dec
inc
lock
or
js
sbb
call
cld
xchg
sahf
ret
and
(bad)
fwait
xchg
cmp
adc
adc
inc
outs
or
into
push
in
inc
pop
sub
(bad)
es
or
ret
lds
dec
push
xchg
sbb
sub
fidiv
pusha
push
test
dec
dec
mov
dec
inc
out
dec
cmp
mov
sub
jp
xchg
mov
mov
nop
lock
mov
cwde
js
dec
lahf
(bad)
fadd
cli
dec
mov
leave
jecxz
adc
shl
(bad)
popf
or
movs
je
or
mov
sbb
fidiv
ret
push
lods
add
fst
lods
or
pop
cmp
cmps
lahf
dec
sub
add
(bad)
pop
mov
daa
stos
cmp
push
ret
aas
mov
jl
ror
push
sbb
dec
addr16
lea
mov
sub
popf
scas
mov
je
xchg
test
xchg
inc
push
dec
mov
inc
mov
lock
stos
push
test
pop
pop
outs
push
cmp
outs
xor
mov
(bad)
pop
add
call
stos
(bad)
out
shl
daa
cmp
(bad)
cmc
lds
xchg
into
sub
arpl
leave
xor
cdq
adc
scas
std
aam
nop
ret
inc
addr16
mov
add
ror
jecxz
mov
sub
fldenv
in
sbb
xor
mov
je
in
mov
mov
(bad)
mov
jl
(bad)
in
fst
rol
(bad)
fnstenv
jg
dec
jbe
cdq
hlt
mov
(bad)
lods
dec
push
daa
mov
(bad)
pop
jle
or
push
adc
(bad)
sub
scas
movs
xor
cmps
dec
inc
pop
xchg
cmps
inc
cld
jns
pusha
gs
jnp
rcr
or
add
mov
push
cmps
mov
movs
dec
and
lahf
iret
jmp
xchg
cmps
mov
js
jo
jns
(bad)
push
retf
jmp
or
add
iret
loop
pop
jmp
cmp
mov
in
test
mov
(bad)
addr16
gs
adc
push
xor
jbe
clc
and
mov
cmps
dec
or
mov
xchg
sub
popf
es
addr16
mov
jo
psubusw
out
test
repnz
test
ret
and
xor
push
mov
sub
adc
in
dec
inc
lea
mov
push
arpl
adc
ret
rcl
xchg
movs
loope
sub
rol
arpl
pop
pop
inc
mov
les
push
and
ds
repz
mov
popf
aas
cmps
pop
sti
enter
pop
out
inc
outs
mov
loope
xchg
retf
pop
(bad)
or
jno
adc
ins
scas
fwait
mov
call
mov
jne
cmps
and
outs
cmp
out
cmc
retf
clc
ret
jmp
pop
ins
out
jecxz
aaa
fild
outs
popf
(bad)
stos
mov
retf
dec
dec
mov
loop
add
cmps
out
inc
sbb
bound
iret
mov
cmps
xchg
inc
mov
and
inc
jae
gs
sub
shl
mov
adc
fld
cmc
fwait
push
adc
pop
into
jo
or
dec
lds
fs
sahf
test
ds
mov
sub
loop
xchg
add
push
push
test
push
add
shl
imul
test
loop
mov
inc
arpl
or
ret
mov
imul
pushf
pop
inc
and
js
scas
rcr
xchg
outs
mov
push
addr16
ss
sar
adc
and
mov
lods
or
cwde
clc
inc
jmp
dec
int3
jbe
or
in
gs
jbe
mov
or
xor
loopne
and
das
xor
ins
nop
jae
test
add
adc
or
(bad)
jle
ss
(bad)
sub
mov
aam
sub
icebp
retf
(bad)
push
repz
call
dec
jp
imul
mov
cmovg
xchg
(bad)
xchg
inc
(bad)
jle
sub
or
jg
and
rcr
dec
add
in
mov
mov
xchg
jp
(bad)
clc
add
xor
scas
jmp
sti
(bad)
mov
ret
test
out
aam
inc
loopne
jb
inc
sub
pop
push
and
cmp
loope
or
int3
test
xchg
in
pop
xor
dec
pop
ret
cmp
fwait
js
mov
pushf
xor
jmp
call
(bad)
movs
sar
or
xlat
mov
test
push
mov
addr16
or
xor
pop
ficomp
jge
sahf
mov
dec
outs
loop
mul
imul
and
lods
dec
and
push
jnp
inc
das
mov
bound
mov
mov
mov
repnz
ins
adc
dec
xor
clc
mov
mov
sar
out
pop
pop
ins
cdq
fisttp
mov
mov
movs
test
enter
imul
cmp
cmp
dec
pop
jecxz
movs
div
paddq
adc
mov
cs
mov
imul
loopne
mov
dec
cdq
mov
mov
retf
dec
sbb
lods
leave
mov
push
test
test
and
add
sar
mov
jmp
shl
adc
mov
push
push
pushf
scas
fs
adc
push
mov
out
lods
push
popa
sub
mov
adc
pop
in
add
gs
and
iret
cmp
shr
and
ret
gs
ret
pop
mov
mov
imul
movs
iret
pop
push
cs
stc
imul
mov
jae
or
nop
pop
push
dec
push
test
cmp
loop
jmp
add
and
in
xor
nop
repnz
aad
fdiv
dec
push
test
or
not
sub
std
daa
stos
inc
out
xchg
out
push
fisttp
cmps
popf
adc
adc
dec
ds
dec
scas
adc
call
fucomp
retf
in
mov
int
xor
movs
adc
movs
mov
dec
sub
aam
test
es
jbe
bnd
js
ror
(bad)
and
enter
inc
call
dec
imul
mov
sti
ss
dec
jnp
(bad)
cmp
rol
add
push
popf
adc
pop
fsubr
icebp
add
inc
les
cmps
mov
mov
xchg
cmp
mov
clc
fs
sti
aaa
(bad)
add
jg
or
scas
retf
or
sbb
mov
mov
loope
jge
sbb
cmp
cmp
ret
xchg
mov
jge
sub
iret
aaa
std
(bad)
push
pop
mov
fst
xor
movs
add
(bad)
push
icebp
jge
sbb
mov
out
cs
adc
(bad)
aaa
test
dec
cmp
(bad)
or
movs
cld
add
cmp
xor
xchg
dec
jb
cmp
and
or
xchg
dec
std
pop
mov
push
add
fadd
cld
push
push
push
ret
push
retf
add
aam
push
mov
add
add
cs
in
call
mov
jle
or
(bad)
cmps
mov
in
jo
mov
jg
retf
es
mov
jmp
stc
scas
js
inc
dec
loope
test
pop
adc
mov
push
stos
cwde
(bad)
and
ins
les
mov
xor
daa
xchg
adc
dec
gs
adc
inc
pop
add
cmps
fisubr
push
inc
pop
and
sti
mov
sub
ffreep
cmp
jl
lahf
mov
and
inc
xor
mov
cmp
mov
dec
dec
test
pop
stc
sub
adc
gs
jns
ret
jmp
jne
push
xor
lods
fwait
ja
jp
fs
xchg
aaa
jmp
std
mov
jl
and
shr
xlat
push
xchg
jmp
daa
mov
and
cs
in
mov
scas
add
and
icebp
push
fdivr
sub
jbe
(bad)
out
icebp
in
mov
sbb
adc
lock
dec
add
ja
into
push
fsubr
xor
stc
ret
sbb
loope
dec
jns
lods
es
push
add
ds
int
ds
pop
mov
mov
mov
xchg
(bad)
push
imul
in
inc
stc
fmul
xor
sub
push
ins
inc
xlat
xor
hlt
(bad)
xor
add
gs
aad
push
push
dec
pusha
and
sbb
lods
or
cmp
mov
push
adc
dec
loope
stos
xchg
(bad)
jbe
xor
and
cmp
jbe
fnstenv
arpl
dec
xlat
push
mov
fs
xchg
xchg
ins
retf
jae
repnz
ins
jg
add
xchg
mov
or
jns
inc
cdq
imul
xlat
cmp
inc
cmps
cmp
dec
scas
ficom
mov
pop
sahf
loop
jnp
outs
xchg
cwde
dec
adc
popa
cs
or
sti
cmps
xchg
push
scas
mov
jmp
out
adc
adc
push
fs
mov
pop
sbb
out
cmp
repnz
jns
jge
mov
shl
call
add
outs
mov
imul
gs
mov
mov
push
outs
daa
std
cmp
mov
int3
pop
mov
sub
popa
fs
out
pop
sub
cmp
out
div
dec
(bad)
cmc
fadd
adc
mov
mov
inc
addr16
mov
add
imul
mov
es
ds
rep
fild
mov
sbb
mov
iret
clc
in
xor
test
loope
outs
mov
loopne
inc
gs
mov
jo
ds
mov
dec
inc
sub
nop
inc
int3
sbb
dec
sbb
pop
jge
inc
out
out
cmp
lea
inc
mov
aam
into
xor
jb
cs
mov
loopne
leave
into
sbb
aad
or
aas
jle
int3
sbb
repnz
outs
leave
inc
add
or
pop
xor
jg
xor
rcr
push
or
jnp
mov
hlt
jp
add
xchg
mov
adc
pop
shl
retf
aad
pop
rcl
cmp
fcom
and
(bad)
xor
push
pushf
inc
std
fld
dec
ins
(bad)
or
sbb
cmp
cmps
arpl
mov
pop
rcl
mov
adc
and
outs
fimul
xor
fld
sub
add
in
ins
mov
retf
jb
js
sbb
je
mov
sbb
inc
push
pop
popa
std
cmp
sbb
fld
lods
dec
sub
(bad)
int
(bad)
inc
push
stos
out
xor
retf
lods
shr
mov
mov
int3
mov
(bad)
jo
dec
mov
cli
push
inc
test
jp
dec
adc
mov
lds
mov
pop
adc
sub
stos
loop
repz
inc
inc
sbb
fwait
rol
jbe
inc
push
pop
mov
daa
cwde
mov
fstp
enter
cmp
xchg
mov
jae
sar
mov
mov
inc
sub
fisubr
dec
cmp
add
jo
mov
push
push
mov
and
xchg
hlt
jmp
and
retf
jge
pusha
inc
pop
pop
ins
bound
mov
scas
adc
adc
ret
mov
out
int
out
cmps
fdiv
loope
scas
jmp
loop
fcom
xchg
out
ins
aas
test
jmp
rcl
stos
vpsrlw
leave
xlat
mov
mov
jno
inc
pop
mov
push
je
add
inc
push
dec
nop
and
loope
inc
cwde
adc
sub
loope
cmp
pop
pop
cmps
and
(bad)
arpl
jg
into
test
dec
ds
adc
push
mov
inc
xchg
rcr
push
data16
nop
add
xlat
jnp
sbb
div
fs
cli
xor
add
mov
repnz
inc
aad
jmp
js
mov
div
shl
outs
pusha
repz
xor
cs
mov
dec
cdq
packsswb
xor
sahf
mov
nop
adc
mov
mov
fidiv
movs
inc
push
dec
cld
dec
xchg
xchg
(bad)
or
repnz
jle
outs
(bad)
out
es
push
fild
dec
adc
mov
push
in
sub
ins
push
pop
dec
dec
movs
scas
cmps
xor
and
movs
in
rol
pop
dec
iret
jmp
fisttp
cmp
(bad)
and
and
sub
adc
icebp
inc
mov
mov
xchg
xlat
and
aaa
fnstsw
sbb
xchg
icebp
xor
pop
and
jbe
inc
ret
pop
xchg
mov
repnz
add
hlt
(bad)
sub
lahf
pop
mov
and
add
or
out
das
cdq
inc
mul
sub
bound
ror
push
sbb
push
adc
mov
xchg
lahf
push
mov
out
fnstenv
and
sub
add
pop
dec
xchg
scas
pop
mov
inc
ret
ds
neg
ficom
jb
cmp
rol
das
push
pop
mov
jmp
hlt
xor
loop
std
fwait
loope
leave
xor
jle
jp
mov
and
iret
mov
sub
rcl
stos
inc
or
pop
in
sar
iret
mov
xchg
sub
mov
sbb
push
pop
push
inc
ins
stos
sbb
and
rcr
and
jo
cmp
xchg
mov
inc
jnp
mov
jmp
adc
adc
jp
inc
xchg
outs
pop
sub
jnp
mov
aaa
jae
mov
adc
popf
inc
hlt
push
lahf
es
mov
pushf
aad
fcmovnb
std
sahf
or
sbb
sub
pop
jno
add
imul
jmp
jl
sub
or
or
mov
dec
in
cmp
mov
mov
xor
mov
arpl
push
int3
cli
cmp
das
jl
jae
nop
int
je
pop
dec
mov
xchg
add
daa
add
pop
test
outs
jne
out
jg
lock
mov
add
cmp
call
cdq
pop
or
pop
mov
ret
movs
addr16
in
fnstenv
or
test
xchg
mov
in
jle
ss
cmp
add
pmuludq
popf
dec
adc
xor
or
inc
jge
inc
mov
and
aaa
(bad)
sub
xor
cmp
js
pop
(bad)
sbb
and
mov
adc
sub
sti
xchg
ja
(bad)
xchg
add
and
cmc
lods
aaa
or
mov
sti
in
jp
fist
test
fcomip
sbb
into
inc
mov
out
std
fidiv
movs
dec
fs
imul
nop
jmp
test
sub
pop
xor
dec
(bad)
sbb
pop
xchg
outs
add
cli
and
pop
jo
xor
mov
or
inc
xor
cmp
fidivr
in
cli
mov
arpl
push
pop
hlt
jne
scas
inc
cmp
pop
scas
mov
mov
imul
push
pop
aam
scas
xchg
arpl
dec
push
ins
mov
cmp
pop
push
(bad)
sbb
push
in
cmc
ss
push
mov
fist
ficomp
stos
fadd
inc
inc
retf
je
sub
test
in
addr16
mov
icebp
sub
jle
sub
cmp
cmps
daa
adc
pop
cmps
jno
jle
leave
cmps
(bad)
stos
fsubr
or
mov
out
jb
fst
mov
mov
(bad)
push
nop
cmp
cmps
jae
enter
vpsrlw
aad
fisub
xor
pop
or
sbb
rcr
fwait
in
enter
je
and
pop
fstp
dec
fnstsw
and
xchg
mov
or
bound
pop
xor
jb
add
xor
stos
cmp
cmp
scas
push
addr16
nop
nop
xchg
mov
or
cmps
cmp
adc
stc
sbb
ffreep
fild
sbb
jle
jmp
cmp
mov
add
pop
iret
add
and
loop
pop
cmp
fmul
add
inc
leave
addr16
nop
push
fbstp
or
xor
add
sbb
aas
sub
inc
jecxz
sub
jmp
jecxz
sar
shl
add
mov
mov
mov
xchg
xchg
inc
pop
jb
and
cwde
lsl
int3
fwait
je
xchg
sbb
int
push
daa
jmp
inc
inc
xchg
add
mov
push
and
(bad)
xlat
pop
or
or
mov
fstp
lods
das
cld
jae
out
retf
jb
mov
scas
push
add
out
sub
shl
dec
sub
sbb
cmp
xlat
sti
(bad)
cmp
std
mov
mov
xor
jl
ficom
lahf
ret
inc
push
mov
clc
ds
push
ins
and
jp
aas
inc
and
rol
(bad)
xor
jge
sbb
mov
and
test
jle
test
std
mov
rol
sub
movs
mov
adc
sub
mov
sub
in
xlat
cmps
xor
mov
xor
xor
sbb
popa
or
les
mov
retf
fs
jb
xchg
pop
cmp
add
sub
inc
ss
sub
icebp
dec
and
add
lds
or
mov
inc
retf
or
xchg
inc
xor
sbb
data16
and
das
mov
inc
ja
add
dec
hlt
inc
jp
sahf
mov
push
enter
mov
cmp
dec
js
mov
adc
adc
pop
cmp
inc
push
sahf
jle
mov
mov
and
(bad)
cmp
cmc
repz
xor
xchg
mov
(bad)
jl
push
std
fdivr
pop
dec
loope
xchg
adc
jae
push
adc
inc
(bad)
iret
cmp
in
lods
mov
xchg
cmova
jae
xor
inc
and
out
inc
clc
mov
jmp
call
cmp
cwde
test
sahf
push
inc
(bad)
jne
sbb
pop
pop
jp
mov
aad
xchg
aad
cmp
and
lock
mov
shl
shl
pushf
pusha
dec
adc
loope
xor
loope
cmps
shl
arpl
jmp
adc
shr
stos
dec
(bad)
lahf
push
and
cmc
cwde
rcr
inc
mov
push
fmul
stos
and
mov
sub
inc
pusha
daa
sbb
mov
stos
cmp
bound
lea
rcl
push
adc
add
or
xchg
ret
cmp
sub
add
inc
pop
mov
mov
aaa
jo
jge
cmp
in
ins
mov
test
mov
jbe
clc
mov
cmp
int
lock
push
mov
sub
repnz
mov
and
xor
loope
mov
mov
test
out
inc
mov
rcr
mov
pop
mov
xchg
inc
fsub
sub
adc
mov
jle
jne
jmp
adc
jns
mov
gs
dec
xor
or
adc
inc
int3
ss
loopne
int3
mov
iret
jmp
xor
xchg
(bad)
cdq
hlt
repnz
shl
mov
lds
jmp
push
mov
sub
fwait
popa
xor
pop
push
fisubr
push
jge
mov
ror
mov
push
and
lea
ja
outs
jne
out
int
cmps
repnz
cmc
ds
sbb
xchg
mov
in
aaa
mov
(bad)
cmc
iret
cmc
mov
int
js
and
pop
pop
(bad)
dec
test
iret
aaa
(bad)
fcom
add
dec
and
enter
jo
inc
cs
pop
lock
and
xchg
pusha
rcl
push
inc
dec
lahf
mov
adc
dec
jne
mov
cld
mov
popf
ins
mov
cmp
add
xchg
sti
sub
(bad)
pop
mov
and
mov
cmps
rcr
div
jne
mov
movs
cmps
adc
aaa
and
into
push
jnp
getsec
mov
add
pop
outs
sbb
mov
scas
push
jge
fistp
sub
pop
movs
dec
aaa
out
or
dec
cld
and
inc
cmp
ror
jle
sbb
into
mov
retf
mov
xchg
je
les
int
xchg
pop
shl
jb
pop
iret
(bad)
mov
mov
push
outs
cmp
(bad)
adc
in
xchg
iret
mov
xchg
cwde
ret
out
iret
fwait
mov
call
cwde
adc
jle
pop
inc
popa
mov
sahf
push
or
dec
cs
inc
xor
test
scas
cmp
cmps
add
inc
jle
mov
inc
(bad)
fst
scas
sbb
mov
hlt
xor
mov
test
jge
sub
or
and
xchg
mov
dec
cli
cmp
das
sahf
jg
ja
fs
out
out
imul
sub
cmps
cld
stos
mov
(bad)
fs
adc
gs
xchg
lea
(bad)
mov
rcr
and
xor
std
repz
jg
adc
inc
push
ja
push
cmp
push
dec
lods
hlt
popf
pop
scas
xlat
pop
pop
pushf
xchg
jb
xchg
sub
and
test
mov
int
and
mov
test
and
imul
jmp
jbe
and
pop
test
nop
sbb
push
adc
mov
dec
dec
int3
aam
imul
or
(bad)
aam
mov
scas
or
std
cmp
shl
cli
or
mov
aam
(bad)
ror
and
test
ss
inc
div
leave
data16
nop
sub
dec
mov
mov
movs
jo
add
lahf
sbb
out
ins
dec
xchg
mov
pop
in
inc
and
pop
jp
call
popf
retf
mov
jmp
div
dec
xlat
rol
sub
sahf
pusha
mov
aas
push
jle
cmc
leave
dec
fldenv
cmp
mov
outs
ins
fwait
jnp
out
pop
dec
imul
jmp
loopne
scas
pop
movsx
or
and
push
or
repz
xor
push
push
cdq
push
mov
inc
mov
cmps
movs
shl
aas
adc
mov
cmp
loop
add
push
cmp
jne
or
sub
xchg
jmp
xlat
sub
(bad)
imul
fsub
pop
aad
mov
fwait
adc
jp
sub
aaa
xchg
add
and
lods
dec
popa
sub
push
repz
fidiv
push
mov
loop
push
mov
mov
pop
call
aaa
sbb
adc
(bad)
std
aas
dec
jno
sub
shl
dec
call
out
shr
pushf
jo
sub
pop
js
sahf
dec
in
mov
icebp
fst
pop
inc
xchg
lahf
jmp
jge
dec
xchg
es
nop
sub
mov
pop
hlt
out
or
in
(bad)
xchg
jmp
cmp
call
ins
jmp
cmp
test
xor
ficomp
jne
sbb
push
inc
xchg
sbb
dec
aam
cld
sbb
aas
add
jge
retf
out
pop
aas
icebp
jae
add
pusha
ret
xchg
mov
ss
push
xchg
sub
sub
cmp
xchg
ins
mov
push
jp
jmp
(bad)
outs
(bad)
call
fwait
push
push
aaa
fsub
adc
lods
js
neg
adc
outs
or
cmps
ja
rcr
and
cmp
pop
pusha
clc
add
test
cmp
cmp
mov
movs
(bad)
retf
fsub
fcomp
push
add
test
clc
jge
jl
aas
cmp
hlt
ds
inc
lods
mov
call
sub
outs
sbb
das
mov
(bad)
adc
jge
(bad)
aam
out
(bad)
mov
rcl
dec
jae
xchg
shl
dec
aad
imul
fs
push
ins
or
dec
add
inc
cs
push
cld
xchg
test
retf
ins
jmp
aad
pushf
nop
xor
mov
pop
add
cmps
and
xor
je
mov
cwde
inc
xor
or
loope
adc
push
push
and
daa
ins
pushf
xor
repnz
repz
iret
xchg
loopne
in
outs
mov
mov
mov
js
cwde
test
arpl
inc
xchg
(bad)
jnp
aad
push
imul
xchg
mov
and
jmp
addr16
(bad)
pop
repnz
bndstx
add
movs
cmc
push
cmp
aad
mov
mov
out
and
adc
std
aas
push
test
xchg
sbb
and
mov
les
stos
pop
push
jmp
fistp
sub
ds
or
dec
mov
cmp
adc
push
inc
push
(bad)
jg
test
xlat
mov
dec
xor
rol
pop
loop
cmps
fidiv
xor
or
push
(bad)
ficom
rcr
cmps
cmps
imul
jae
ins
and
frstor
ds
in
and
mov
push
push
sti
aaa
mov
and
outs
dec
add
data16
mov
sti
pop
mov
adc
(bad)
pushf
ror
push
adc
dec
in
sbb
fwait
lock
push
hlt
(bad)
sub
pop
popf
into
pop
jmp
(bad)
inc
sub
sub
lahf
mov
mov
iret
and
mov
lds
out
and
push
sub
xchg
sub
dec
mov
in
sbb
inc
cs
out
cwde
xor
mov
test
in
inc
xor
daa
fisub
sub
push
sub
xor
lea
aaa
jecxz
out
add
jge
scas
xchg
adc
daa
loopne
and
lahf
xchg
jbe
cld
xlat
stos
dec
fsub
adc
jns
jl
push
xlat
or
hlt
test
jmp
jns
fwait
xor
jmp
xor
jnp
push
mov
in
jae
jge
sbb
retf
dec
test
loopne
xchg
or
daa
push
es
fcmovb
test
das
mov
ins
mov
(bad)
addr16
call
das
aas
jbe
pop
push
loopne
outs
add
icebp
push
or
test
add
jl
daa
mov
sbb
cmps
sub
loope
fld
rol
mov
gs
or
outs
data16
lea
fs
repnz
out
loopne
dec
std
cli
daa
mov
ror
test
cs
aaa
adc
es
sub
ds
dec
jae
mov
xchg
stc
cmc
stc
mov
(bad)
cmps
cs
pop
cmps
test
or
fidiv
add
mov
and
mov
ret
and
dec
sbb
xchg
gs
in
jg
jl
inc
nop
dec
push
xor
sbb
fld
dec
xchg
sti
add
cmc
cmp
sub
push
jmp
fcom
sbb
pop
push
dec
lods
rcr
sbb
and
clc
mov
jb
outs
sbb
mov
(bad)
cmp
icebp
pop
inc
loope
aaa
and
ss
sub
or
idiv
call
jmp
(bad)
sbb
add
les
pop
imul
in
add
pop
and
push
jne
ja
in
cmps
sbb
mov
lea
fnstcw
mov
and
push
and
rol
pop
out
call
adc
xchg
push
or
test
sbb
jl
cmp
rcr
nop
or
repz
mov
popf
mov
rcl
push
js
jb
stos
outs
(bad)
out
lods
pusha
mov
xchg
and
movs
fs
sub
cmp
jge
and
jbe
test
and
fmulp
add
scas
adc
fistp
inc
dec
sahf
or
sub
imul
aaa
jle
(bad)
test
ins
std
or
ins
add
shr
sub
adc
ficom
mov
xor
cld
and
sbb
rcl
cmp
repnz
sti
fsub
dec
test
mov
(bad)
ds
(bad)
jmp
ret
aad
xor
add
out
aaa
push
hlt
xor
mov
cli
adc
or
cdq
mov
sbb
inc
add
jae
sbb
lds
jns
mov
pop
andnps
mov
in
shl
test
sub
movs
xchg
int3
or
push
pop
mov
or
xchg
pop
jmp
jmp
lds
nop
pushf
ror
adc
sub
das
mov
mov
cmp
cs
jg
xor
lock
jle
lea
sub
push
xor
inc
jl
lods
nop
scas
les
mov
dec
ret
ret
mov
cmps
mov
cmp
call
gs
xor
sar
iret
and
aam
fadd
outs
pop
sbb
sbb
pop
dec
out
inc
js
lods
sbb
add
sub
cli
ja
xor
adc
cmp
mov
fcomip
add
sub
dec
jmp
arpl
push
jl
ds
xchg
and
and
retf
ja
cwde
ss
enter
test
mov
dec
test
outs
dec
mov
sbb
stc
outs
sbb
xor
fst
mov
lea
sti
enter
fwait
clc
pop
mov
push
ja
sbb
push
push
and
mov
sub
in
mov
test
cmps
into
inc
js
loope
add
sub
fisub
add
dec
lds
adc
or
iret
inc
scas
sub
out
dec
jl
jo
fwait
xor
inc
(bad)
fcom
jne
sub
mov
adc
pop
aas
rcl
jp
xchg
test
test
adc
fdivr
fucomp
mov
xchg
dec
stos
and
dec
pop
daa
hlt
push
inc
mov
xor
adc
add
xor
and
jp
jge
ret
xor
popf
jp
stos
pusha
xchg
retf
jmp
xor
addr16
clc
add
dec
retf
aam
inc
jae
adc
cmp
cmp
sub
mov
jnp
mov
clc
adc
or
pop
fdivr
jb
in
(bad)
clc
imul
xor
inc
cmp
repnz
jmp
dec
daa
mov
push
jge
ins
xchg
xchg
mov
repnz
mov
mul
xchg
cmp
xor
and
loop
fs
test
xchg
mov
test
outs
and
out
ja
movs
into
xor
xchg
push
icebp
out
not
cld
repz
jae
sar
jmp
dec
jnp
jo
xlat
lahf
sbb
cdq
or
fcom
les
jg
cmps
push
jecxz
pushf
lock
mov
imul
and
inc
add
mov
inc
data16
test
in
sub
imul
jnp
je
push
repz
or
pusha
cmps
mov
mov
xchg
out
mov
lahf
dec
and
cli
push
stos
loopne
icebp
cmps
lahf
aas
jnp
sub
imul
dec
inc
inc
sti
sar
scas
adc
mov
xor
mov
jnp
in
xchg
cld
xchg
mov
jo
mov
mov
or
out
add
movs
sub
push
and
test
dec
pushf
sub
cmp
mov
sub
gs
add
adc
sbb
xor
call
jle
mov
(bad)
sub
pop
int
(bad)
cmp
cwde
jns
mov
jecxz
imul
popf
scas
movs
test
aas
or
sub
xchg
mov
dec
scas
sub
je
xchg
pminub
cs
inc
mov
jb
outs
(bad)
sar
es
stos
(bad)
sbb
test
push
and
(bad)
sub
jecxz
inc
repz
cwde
scas
jnp
(bad)
dec
or
jbe
loopne
(bad)
imul
cmp
inc
es
mov
aad
mov
int
pop
cli
adc
xor
imul
sub
cdq
(bad)
xchg
fstp
xchg
jnp
jle
xor
pop
aaa
shr
push
xchg
cmp
mov
sub
(bad)
mov
imul
clc
pop
repz
cmps
mov
(bad)
push
pushf
sbb
movups
movd
and
mov
xchg
push
pop
fcom
xchg
push
inc
iret
leave
mov
mov
pusha
jl
inc
sti
in
sub
inc
push
mov
call
shl
cmp
inc
and
arpl
sub
or
rcr
loop
jno
fs
jecxz
call
cdq
inc
sub
sub
movs
and
dec
jle
pushf
fcom
mov
sub
and
out
xchg
mov
das
jnp
jecxz
std
jg
fldcw
out
or
dec
(bad)
or
sub
mov
out
add
cmp
loope
movs
push
shr
cmp
jmp
int
xchg
mov
ror
mov
popf
inc
clc
push
fs
xchg
xor
les
test
push
xor
mov
mov
ins
jo
repnz
call
sub
sub
pop
shl
(bad)
call
test
out
das
loope
sub
sub
int
ins
mov
arpl
mov
icebp
sub
or
inc
fwait
cmp
dec
cmp
mov
out
out
add
jno
push
sbb
xor
retf
adc
jns
add
or
(bad)
jle
lahf
cmp
cmp
cmp
pop
ret
cmps
add
lock
push
aad
bound
lock
jmp
cli
cdq
push
fdivr
push
push
mov
cmp
xchg
jae
hlt
ret
ficom
sbb
sahf
neg
push
mov
rol
xchg
mov
mov
mov
inc
iret
and
popf
popa
jns
addr16
cmp
add
int3
cli
outs
jmp
jecxz
pop
pop
fcmovnb
jo
mul
xor
xlat
dec
cmp
or
cli
jg
sub
rol
xchg
sti
mov
icebp
cmp
popa
pushf
push
and
jmp
in
inc
sbb
jne
adc
mov
mov
sbb
ss
cmp
mov
xchg
mov
and
mov
xor
pushf
push
std
sbb
xchg
lds
inc
sahf
sub
dec
sahf
mov
sub
pop
sbb
into
xchg
cmps
push
mov
(bad)
retf
repnz
test
pushf
data16
lods
push
movs
stos
push
jle
mov
int3
test
adc
or
pop
js
outs
enter
pop
add
ror
xor
xor
sbb
or
jge
aaa
not
mov
dec
enter
and
imul
into
arpl
inc
(bad)
pop
mov
adc
pop
shl
mov
or
xchg
pop
lock
fild
ins
pop
lock
pop
jle
cmps
add
or
out
mov
mov
cmp
mov
mov
dec
jb
xchg
hlt
or
and
loope
xchg
adc
sub
bound
sub
mov
stc
shl
and
out
scas
aas
sahf
jg
fnstsw
sub
outs
or
in
addr16
dec
mov
inc
into
bound
dec
mov
sub
xchg
adc
xchg
(bad)
in
xor
enter
or
(bad)
(bad)
mov
ins
pop
ret
pop
fs
mov
mov
cs
cmp
jge
outs
ror
dec
das
nop
dec
test
mov
test
pop
loopne
jmp
aad
pusha
sub
and
mov
add
popf
ja
rol
or
(bad)
inc
sub
cmps
lds
inc
mov
pusha
fcmovbe
and
and
or
push
mov
out
xchg
sbb
inc
jno
adc
sub
mov
mov
icebp
mov
clc
aas
jbe
push
jno
cmc
sub
rcr
mov
fcom
sbb
jae
inc
leave
lea
sbb
in
jmp
dec
push
std
push
sub
imul
and
rol
rcr
pop
push
or
lock
mov
dec
repz
lock
lds
dec
pop
pop
mov
or
push
xchg
loopne
inc
xor
aas
or
fwait
sbb
andps
xchg
test
pop
movs
ds
push
outs
jge
in
mov
aad
(bad)
dec
movs
xor
loope
std
jecxz
mov
aad
mov
mov
sub
mov
dec
add
mov
mov
cwde
mov
out
mov
mov
push
addr16
xor
ret
retf
xchg
pusha
xchg
pop
jns
shl
xor
or
repz
inc
loope
xchg
mov
dec
loope
mov
adc
test
jmp
scas
ins
cmp
enter
sub
test
xor
and
dec
or
mov
imul
out
pusha
push
pop
arpl
jbe
dec
dec
data16
or
loope
loopne
sbb
js
aad
mov
dec
sahf
fidivr
inc
jbe
test
jmp
and
lock
push
sar
mov
dec
pop
pushf
loopne
std
test
inc
jmp
push
sahf
inc
adc
cdq
adc
cli
jo
(bad)
add
out
rcl
(bad)
dec
cmps
add
and
jo
gs
(bad)
and
in
or
aad
movs
jmp
jl
pop
inc
sti
sti
cs
in
adc
int3
out
mov
mov
or
in
ins
inc
bound
jp
xchg
adc
mul
(bad)
fsub
ror
(bad)
iret
inc
pop
ror
fcmovnu
lea
xchg
and
sub
mov
push
test
xor
aas
nop
int
fdiv
mov
stos
mov
addr16
adc
cmp
push
sbb
aas
push
rcl
inc
in
jle
daa
mov
jne
mov
gs
fistp
mov
push
dec
pop
push
mov
xlat
mov
push
out
xchg
scas
psubd
shl
jg
fucom
mov
cli
int3
cs
and
and
leave
cmp
pop
out
ins
clc
out
jecxz
data16
inc
xchg
pop
outs
adc
push
fiadd
mov
or
ror
xchg
push
mov
(bad)
enter
lods
scas
or
ins
cld
cdq
jle
dec
das
icebp
aad
inc
and
cli
or
and
add
mov
js
jecxz
or
cmp
mov
fnstcw
push
push
xor
mov
push
ss
jecxz
test
pusha
(bad)
lahf
je
xchg
xchg
dec
popfw
adc
xor
dec
pop
add
popa
shl
sub
cmc
sahf
mov
fld
lods
xor
in
mov
out
sbb
arpl
adc
and
jb
or
int
mov
fbstp
sbb
jle
add
mov
call
jle
lods
cmp
shl
inc
mov
std
fwait
mov
mov
sti
in
jne
push
jo
addr16
mov
nop
add
cmp
ret
add
mov
js
and
add
test
(bad)
mov
cmp
int
lods
cmp
loopne
add
cmp
or
jae
mov
fistp
fstp
sahf
and
stos
call
in
add
xlat
stc
aas
hlt
xor
pop
fwait
sbb
aam
xchg
(bad)
mov
xor
int
fadd
jns
rol
jo
pop
pop
adc
jecxz
sbb
int
xlat
or
jnp
cwde
inc
(bad)
enter
adc
stc
imul
out
xor
out
call
std
add
movs
scas
fnsave
cmp
int
or
rcr
jae
ins
bound
lds
iret
fist
sbb
mov
mov
lods
aam
jg
ds
jnp
mov
sub
out
mov
inc
mov
xor
stc
pop
cli
shl
fs
add
jecxz
pop
cmc
inc
fcmovu
into
std
cld
cwde
inc
jmp
scas
mov
inc
gs
and
aas
add
inc
not
inc
out
cli
cmp
movs
repz
shl
int3
xchg
into
mov
mov
call
in
xchg
or
xor
cmp
(bad)
jp
cmp
mov
rcl
shr
inc
xchg
cdq
sub
add
fmul
sbb
xchg
xchg
pop
add
daa
repnz
shl
rol
push
es
gs
xchg
xor
mov
add
and
out
and
clc
mov
xor
(bad)
push
or
not
mov
(bad)
fwait
cwde
popa
outs
test
push
or
xor
or
mov
ret
sub
and
pop
test
pop
jle
lock
dec
xchg
xchg
add
mov
pushf
rcr
adc
sbb
aas
jne
sbb
test
mov
cmp
arpl
mov
ds
sub
lar
cwde
(bad)
in
clc
rol
nop
push
fsub
push
and
lods
or
lods
jle
cld
(bad)
(bad)
imul
pop
cmps
mov
mov
ins
mov
xor
mov
jmp
push
lods
retf
adc
cmps
xor
ret
test
mov
sahf
call
sar
(bad)
mov
add
push
jns
and
jg
std
div
aas
cmps
(bad)
mov
ja
pop
cwde
int
dec
sbb
pop
sti
sub
mov
mov
xchg
mov
in
mov
cdq
sbb
cmps
(bad)
(bad)
xor
adc
mov
sbb
mov
stos
ss
jns
jecxz
cmps
stc
sahf
imul
loop
or
dec
push
das
jns
xor
lods
dec
es
mov
rcr
ins
(bad)
fptan
dec
cli
lods
mov
dec
js
add
xlat
aas
jecxz
pop
cmp
lds
int
je
sbb
jmp
ja
push
mov
pushf
add
jl
ds
shl
mov
ffree
adc
adc
add
ins
push
or
jo
adc
add
or
bound
ss
cdq
cmp
mov
loopne
push
add
stos
outs
mov
sti
xor
lds
or
sub
(bad)
les
cmps
add
xchg
ja
sbb
push
lds
push
das
int3
pop
test
clc
xor
push
mov
and
je
enter
ins
xchg
cmp
or
js
sbb
in
jmp
adc
adc
bound
push
hlt
pop
rcr
mov
out
sbb
jl
cwde
mov
add
xlat
and
jle
cld
out
push
fwait
loopne
cmps
ror
pop
xchg
dec
push
push
adc
xchg
aaa
ja
movs
push
sub
inc
gs
jae
mov
pop
out
stc
lea
sbb
pop
cmps
inc
mov
mov
imul
mov
in
icebp
mov
fs
leave
mov
or
push
mov
jb
cs
ins
add
fist
mov
cwde
cdq
add
mov
xchg
out
sbb
push
ds
cmps
mov
or
inc
mov
scas
in
add
and
mov
mov
repnz
pop
mov
sahf
pop
fst
push
sub
stos
imul
xor
loope
add
nop
add
mov
outs
sbb
jge
aam
ins
and
mov
xchg
test
ret
les
jmp
pop
and
xchg
pcmpgtb
or
sub
dec
jecxz
into
mov
mov
aad
xor
mov
movs
stos
jmp
jecxz
xor
ins
je
sbb
test
movs
mov
jbe
rol
xchg
inc
sub
pusha
(bad)
ret
inc
aad
sub
jp
push
adc
add
aad
lods
xchg
mov
sub
mov
sti
mov
scas
mov
aad
out
cs
push
rol
or
mov
inc
cld
mov
sbb
sub
in
dec
lods
std
inc
sub
push
daa
cwde
arpl
pushf
cmps
push
or
dec
inc
inc
adc
adc
(bad)
push
adc
jle
dec
add
movs
fisub
xor
out
sub
jle
push
mov
xchg
loop
jno
test
push
cmp
push
cmp
push
or
jb
pop
adc
cmp
pop
mov
icebp
ins
les
lds
or
jnp
sub
cld
xchg
icebp
push
or
push
inc
inc
push
jns
push
mov
sbb
daa
fcom
xchg
fisubr
and
stos
and
inc
mov
call
mov
push
rcr
jp
and
dec
cmp
mov
xor
repz
pop
div
push
in
xchg
aas
das
jns
fist
cmp
mov
bound
repz
inc
lea
cmp
ret
push
fdiv
mov
addr16
ja
mov
fild
imul
mov
jmp
xor
push
stc
icebp
je
es
mov
xor
mov
adc
dec
push
mov
not
and
mov
cmp
into
sub
call
mov
fs
add
mov
cmp
mov
or
es
xchg
cdq
jge
into
xchg
mov
pushf
mov
sub
mov
fnstenv
hlt
loop
repnz
dec
fwait
adc
stos
cdq
adc
es
fcmovu
je
push
les
inc
call
(bad)
fld
pop
out
jmp
shl
retf
test
nop
lods
popa
push
inc
pushf
cmp
inc
cmp
xchg
sub
fnstenv
jb
pop
pop
ja
int3
and
xor
sub
and
in
ss
xchg
pop
fstp
inc
mov
sub
and
ret
xchg
retf
ret
inc
dec
cmps
xchg
sbb
or
push
pop
(bad)
call
sub
inc
fist
add
xor
dec
inc
and
push
jmp
inc
scas
mov
ins
xchg
mov
gs
cmp
adc
dec
in
mov
inc
mov
bound
cwde
retf
in
jl
pop
xor
push
hlt
test
mov
xchg
and
aam
mov
lds
push
out
push
jp
push
xchg
and
cmps
pop
test
mov
xor
dec
(bad)
sub
pop
mov
adc
test
test
jnp
or
mov
pusha
xor
out
dec
jb
call
mov
xor
push
lock
push
cli
sub
test
shr
pop
lahf
adc
add
int3
cld
into
dec
into
fstp
dec
hlt
aam
cmp
cmc
adc
test
retf
loope
xor
xor
add
jnp
ins
ja
sub
icebp
and
xlat
outs
fisub
out
sub
mov
lods
mov
cmp
inc
cmp
test
cmp
lea
lock
xor
sbb
inc
and
push
in
mov
cmps
bound
adc
loopne
push
retf
mov
jno
mov
div
and
xor
outs
sub
(bad)
adc
mov
jp
test
cmp
cs
adc
jbe
mov
dec
push
adc
mov
cmc
es
adc
pop
mov
dec
sbb
sbb
inc
in
sti
jmp
pop
and
cmps
lods
sub
ror
lahf
add
rdpmc
int
sub
push
sbb
mov
or
cmps
adc
dec
xchg
pop
mov
aaa
sahf
cmc
popa
pop
or
sti
(bad)
xchg
cmp
sub
pushf
je
icebp
sub
retf
push
pop
mov
dec
jge
sahf
test
(bad)
mov
mov
pop
cs
ss
test
not
in
dec
mov
pop
popf
or
call
jae
shr
sub
add
ja
aas
pop
jb
test
push
or
cmp
call
xlat
cld
shl
pop
dec
rcl
mov
mov
movs
dec
jns
adc
xlat
mov
fadd
dec
mov
jmp
jg
push
mov
repz
mov
mov
mov
imul
imul
dec
dec
cmp
or
ja
aas
xchg
(bad)
sub
pushf
(bad)
mov
sub
add
mov
aad
movq
stc
and
and
xchg
dec
movs
xchg
mov
sbb
inc
outs
or
cdq
mov
or
not
ins
xchg
pop
mov
icebp
popa
mov
push
inc
cmp
scas
sbb
xchg
jmp
mov
into
test
repnz
hlt
pop
fisub
fimul
fnstenv
pop
inc
icebp
cmp
cld
fiadd
xor
daa
mov
js
mov
aaa
loope
jb
pop
cli
sub
stos
xchg
cwde
ss
and
(bad)
dec
xchg
into
push
ror
repnz
gs
jne
pop
dec
jp
in
mov
int3
sub
and
sbb
xor
add
jno
mov
sub
lea
xor
dec
xchg
rol
mov
jg
adc
clc
icebp
sbb
sub
or
(bad)
mov
scas
xor
and
pop
sub
mov
jb
sbb
sub
pop
shl
dec
gs
push
jne
pop
int
mov
enter
xor
mov
adc
popf
cmp
(bad)
push
into
push
pop
aaa
or
inc
sbb
(bad)
stc
aad
mov
mov
adc
or
add
push
iret
xchg
jmp
inc
enter
retf
cli
stos
or
xchg
adc
xchg
and
ror
xor
test
jne
adc
(bad)
out
mov
mov
rol
mov
xchg
loop
and
out
mov
push
into
shr
test
call
sbb
inc
mov
mov
js
cwde
sub
xchg
aaa
push
ins
jbe
dec
imul
xchg
or
test
das
mov
aam
call
call
jnp
ja
ficomp
xchg
aad
or
lea
loope
repnz
dec
sub
mov
xchg
movs
jne
popa
xchg
aam
mov
xchg
clc
ficomp
push
ds
sbb
add
pop
scas
call
(bad)
loope
cwde
inc
push
stc
leave
loopne
jl
gs
stos
adc
mov
fsubr
cs
xchg
pop
push
in
ins
ja
jno
cmp
sbb
das
jae
sbb
sub
lea
add
add
xchg
xchg
adc
jecxz
ror
inc
popf
fdivr
test
inc
push
pop
mov
push
aam
pop
cwde
push
jl
(bad)
cmps
add
nop
ins
and
adc
repnz
pop
(bad)
cmp
dec
lock
fistp
ins
jmp
pop
dec
jo
shl
call
pop
mov
and
mov
or
enter
mov
add
fcomp
je
pop
stc
icebp
test
sub
pop
jnp
push
cld
mov
lahf
and
rol
in
or
and
cli
lods
mov
(bad)
jne
dec
push
and
add
addr16
inc
xlat
xchg
pop
cmp
test
popa
sub
dec
or
push
gs
call
adc
stc
lsl
pop
push
popf
loope
in
inc
fdivrp
dec
add
pop
push
xchg
rcl
or
(bad)
das
dec
pop
in
xor
pop
std
push
nop
cli
push
sub
xchg
sub
push
out
add
inc
aam
jmp
dec
push
mov
cdq
nop
pop
pop
iret
ret
xlat
mov
add
mov
cmp
aas
cmp
xor
imul
popa
fild
aas
push
fsubrp
inc
xchg
sbb
out
xchg
cmc
pop
lods
jmp
cmp
fistp
xchg
imul
cld
jle
js
inc
add
lock
inc
add
mov
aam
sub
ret
stc
mov
pushf
mov
adc
ror
pop
fisubr
inc
mov
ret
push
imul
dec
and
dec
pushf
jbe
inc
dec
dec
inc
in
and
in
mov
retf
pop
pop
fs
cmps
pushf
int3
sbb
fs
pusha
xchg
mov
js
adc
icebp
dec
mov
inc
jo
movs
mov
add
and
xchg
sbb
or
ss
aad
and
dec
xor
(bad)
lock
xchg
push
mov
loopne
retf
ret
adc
add
sub
xor
sbb
push
lods
and
mov
pop
mov
scas
daa
stos
idiv
das
xchg
dec
mov
in
in
xor
dec
mov
push
aaa
movs
ins
pop
call
push
pop
jae
stos
lods
jge
mov
xchg
sti
cmp
mov
adc
push
dec
mov
pop
es
jp
lds
sub
lods
or
cmp
dec
xchg
mov
pop
mov
adc
out
pushf
daa
scas
push
push
adc
rcl
mov
jbe
sub
bound
aas
mov
fucomp
push
addr16
pop
jnp
push
cdq
jne
inc
xor
ins
add
(bad)
inc
fisubr
cmp
mov
neg
xor
pop
scas
adc
sub
mov
push
sub
imul
fwait
rcl
jbe
(bad)
adc
(bad)
in
je
je
stos
push
or
pandn
cmp
dec
les
nop
cmp
das
adc
call
ret
test
cmp
push
in
mov
out
enter
push
fcomp
jno
iret
fmul
cdq
cmps
stos
jbe
add
les
cmp
pop
mov
arpl
call
mov
mov
int
xlat
ins
and
add
mov
mov
mov
cmp
push
mov
xlat
pop
cmp
jnp
jb
and
cmc
pop
les
adc
or
in
cmp
sar
jo
aam
loope
movs
adc
cmp
push
or
push
lds
ins
push
jnp
mov
outs
lods
xchg
or
add
jae
jecxz
mov
mov
clc
cmps
test
inc
fidiv
add
(bad)
and
lods
cs
dec
(bad)
push
bound
aaa
xchg
ins
sbb
out
pop
jl
out
call
xchg
loop
xchg
mov
cmp
js
dec
shr
mov
xchg
xor
(bad)
stos
call
add
(bad)
jb
ss
fwait
pop
sti
aam
in
inc
shr
push
push
mul
fcom
fsubr
popa
mov
lahf
jno
jo
dec
jnp
test
fmul
or
pop
out
adc
mov
and
jecxz
mov
aad
sahf
dec
psrld
push
jl
hlt
and
mov
cmps
arpl
pop
iret
(bad)
test
adc
das
xchg
rol
test
dec
xchg
dec
jle
std
and
in
(bad)
mov
bnd
sub
fild
dec
xchg
dec
jns
push
add
sbb
jnp
(bad)
xchg
int3
xlat
test
mov
(bad)
sub
xor
lods
push
js
pop
adc
clc
enter
mov
enter
(bad)
loope
lods
push
imul
nop
mov
mov
add
daa
nop
cmp
ret
out
sub
mov
jb
imul
outs
(bad)
pop
sub
xchg
lea
xor
std
jno
and
test
leave
ins
push
xor
inc
cmp
add
je
jecxz
or
xchg
outs
xor
stos
cmc
sbb
sub
fisub
jo
psrlw
aaa
lods
dec
inc
mov
adc
cmp
movs
inc
add
cmc
iret
jge
loope
dec
pop
jmp
and
ror
jg
jno
push
or
sub
push
mov
sub
stos
das
add
dec
out
sub
mov
outs
cmp
fcmovb
fidiv
push
jmp
lea
mov
jmp
cwde
pop
and
test
jo
stc
nop
and
orps
push
jns
icebp
dec
jo
xchg
stos
and
mov
paddq
cmp
jae
(bad)
adc
out
ds
aad
popa
mov
ret
movs
aas
mov
pop
inc
pop
neg
loope
das
stc
jg
loope
pop
xchg
loop
lock
adc
mov
(bad)
popf
jnp
div
sub
in
sbb
push
icebp
sbb
outs
xor
out
(bad)
out
add
je
sub
cmp
push
call
loop
sti
xor
hlt
mov
or
mov
ins
popa
(bad)
push
jns
je
mov
mov
in
mov
xlat
sahf
mov
leave
mov
pop
xchg
inc
mov
(bad)
cdq
rol
mov
daa
mov
mov
sub
in
mov
mov
sub
ds
or
arpl
stos
dec
sub
xchg
jo
inc
sti
jge
aad
mov
or
and
jecxz
adc
mov
aas
add
fabs
push
aam
sub
mov
jg
(bad)
sahf
sbb
ja
jg
ins
cmc
sar
inc
int3
arpl
or
iret
push
jne
jg
push
inc
movs
lods
cs
in
in
xchg
imul
xchg
out
movs
icebp
or
(bad)
fsub
repnz
ds
loope
cmps
ins
push
test
jmp
lods
cwde
cmps
fdivr
push
fsubr
gs
mov
jle
out
sahf
mov
loope
int3
adc
dec
or
inc
sub
imul
or
push
push
sbb
xor
int
adc
inc
mov
push
into
or
jne
shl
ds
jl
ds
sar
dec
add
add
out
pop
dec
and
pop
sbb
fsub
es
jge
int
pop
add
or
std
cmps
xchg
repz
lahf
fs
xchg
dec
xchg
sbb
outs
mov
mov
sbb
je
inc
xchg
lods
cmp
ins
dec
or
imul
popa
adc
pop
inc
mov
or
dec
add
jb
test
lock
pop
jg
jo
inc
dec
pop
mov
bound
pop
lods
cmp
mov
xlat
mov
data16
or
mov
aad
test
adc
ror
jno
dec
cmp
add
nop
xor
jg
dec
cdq
inc
mov
cmp
mov
or
idiv
aad
mov
aaa
add
cdq
(bad)
xchg
adc
jmp
into
push
fmul
aas
shr
inc
in
and
xor
pop
inc
test
jp
cmp
xor
cmps
pop
(bad)
inc
or
pushf
mov
fbld
ja
popa
dec
sub
les
call
xor
popf
mov
cmp
pop
call
fucomp
inc
push
inc
and
dec
adc
fimul
cli
ds
fnstsw
mov
mov
mov
inc
push
test
loop
sbb
jno
daa
jge
adc
inc
push
mov
in
mov
call
cs
mov
mov
mov
mov
pop
data16
xchg
fs
dec
mov
sbb
inc
mov
mov
cs
test
fistp
xor
cmp
aaa
sub
pop
cli
fnstenv
mov
jge
stc
dec
mov
push
pop
lahf
ror
ror
and
popa
cmp
jmp
cmp
out
popa
lds
mov
and
mov
inc
arpl
cmps
out
sbb
fisubr
fdivr
dec
ret
movs
jno
dec
xor
in
mov
mov
xor
jmp
cmp
cmp
or
mov
stos
(bad)
dec
pop
aad
call
arpl
mul
test
mov
(bad)
and
outs
imul
rcl
inc
ret
sub
cmps
fs
and
sub
push
aam
or
xor
fnstsw
adc
jae
imul
pop
retf
push
push
or
imul
out
in
cmp
adc
jge
push
fsub
neg
(bad)
pop
loop
xor
mov
aad
xor
repz
es
rcr
inc
cs
ins
cmps
test
push
aad
push
xchg
or
dec
jmp
jmp
jae
into
cmps
retf
out
ret
les
mov
push
int3
jno
dec
pop
inc
test
push
mov
and
fst
loop
cmp
and
dec
mov
fbstp
xchg
int3
push
adc
jno
imul
pop
or
mov
dec
xor
int3
sub
in
sub
stos
cmp
fsubr
add
addr16
(bad)
ins
push
xor
mov
cmc
enter
xor
push
pop
jne
dec
jge
jg
xchg
outs
add
push
outs
icebp
clc
scas
push
shl
sub
in
test
mov
mov
repz
add
mov
clc
(bad)
pop
test
xchg
repnz
xlat
aam
mov
inc
push
shr
lock
push
fcomp
fmul
pop
sub
mov
sub
xor
dec
fdivr
sbb
xor
cmp
add
sbb
push
ins
and
jo
push
push
lods
add
pusha
fwait
out
bound
outs
pop
sbb
test
stc
xchg
sbb
jnp
push
hlt
xor
enter
mov
sub
push
xchg
xchg
sbb
int3
adc
outs
pop
cmp
sbb
inc
xor
inc
mov
cmp
dec
cs
xchg
rcr
cmp
int3
mov
xchg
xchg
ss
fisub
cmp
das
xchg
inc
mov
inc
ror
adc
mov
xchg
or
push
hlt
pop
test
shr
enter
shl
mov
xor
xor
xlat
jmp
mov
scas
ja
mov
mov
enter
dec
pop
clc
cmp
adc
cld
inc
add
jns
adc
push
pop
or
(bad)
xlat
in
dec
dec
jmp
mov
movs
sbb
out
rcr
fadd
dec
sahf
pusha
enter
push
mov
sbb
pop
xchg
imul
cmp
fild
jnp
sbb
out
movs
pop
xor
dec
jp
adc
sub
mov
sbb
sub
pusha
mov
xor
xor
jo
pop
sbb
pop
int
int
cmp
jae
hlt
xor
fstp
jmp
inc
mov
enter
sub
pop
scas
jmp
or
inc
jae
scas
int3
ret
xchg
aas
jno
and
mov
mov
loope
int3
or
jecxz
stos
cld
out
and
es
(bad)
(bad)
adc
movs
jmp
mov
dec
inc
hlt
adc
add
aam
cmp
adc
imul
imul
int3
ja
xor
out
jle
fistp
fs
test
xor
push
mov
xchg
mov
loop
inc
add
jne
add
xchg
adc
xchg
jg
cmp
xchg
addr16
aad
call
jb
mov
fwait
cmp
call
fcmove
mov
add
ror
(bad)
adc
addr16
fnstsw
hlt
push
out
je
scas
fnstenv
das
aas
xor
data16
mov
daa
cmc
mov
sbb
pop
mov
jecxz
pop
sti
or
daa
mov
or
(bad)
mov
mov
ror
aam
(bad)
and
test
add
xchg
xlat
jno
(bad)
fcom
es
xchg
cld
ja
dec
jns
int
jl
adc
jge
mov
add
nop
inc
out
gs
iret
add
xor
mov
aas
jae
push
push
jmp
shr
(bad)
stc
shl
sbb
pop
jnp
stos
clc
gs
xchg
(bad)
mov
and
clc
ins
ds
mov
hlt
ficom
lahf
mov
sbb
push
movs
mov
mov
retf
ds
mov
or
push
lds
push
sti
sbb
or
mov
mov
mov
pop
push
stos
and
jmp
jg
gs
enter
pop
stos
add
iret
inc
fild
in
ins
xor
or
mov
xchg
sbb
jp
loope
imul
add
mov
ret
or
and
push
call
mov
jmp
cmp
sar
mov
(bad)
das
pop
out
popa
xor
pop
loop
pop
ja
push
push
test
mov
int3
fimul
das
(bad)
mov
aaa
push
sbb
(bad)
addr16
aas
jmp
mov
mov
xchg
aam
jne
xchg
mov
dec
cld
shl
stos
xor
sub
out
sbb
imul
sbb
dec
es
cmp
or
enter
or
add
jle
fnsave
lods
mov
cli
sub
mov
das
push
mov
loope
aam
and
pushf
rcl
mov
dec
aam
jns
pop
retf
retf
jg
in
adc
mov
mov
mov
test
iret
lds
dec
fs
jns
std
icebp
add
mul
daa
movs
out
sub
adc
mov
imul
clc
push
(bad)
ds
es
fild
iret
mov
lea
aam
sub
lahf
les
or
sub
outs
xor
cmc
and
or
cmps
mov
shl
add
adc
xchg
in
pop
cmps
add
je
scas
xor
retf
push
loop
int3
scas
mov
(bad)
enter
repz
out
and
pop
jne
cli
sbb
push
xor
jmp
shr
and
in
(bad)
lods
pop
push
adc
test
xchg
fs
in
loop
mov
and
cli
ins
mov
ins
sub
rol
adc
ins
loopne
int
aad
xchg
jl
mov
mov
ds
fs
mov
jge
xchg
mov
pop
mov
mov
xchg
jp
cmp
sbb
out
pop
icebp
push
movs
(bad)
adc
test
xchg
adc
enter
fs
rcr
jmp
arpl
ret
sub
or
movs
cmp
push
jle
ficom
test
jb
fwait
pop
hlt
pushf
pop
xchg
inc
jmp
call
repz
xchg
pop
into
(bad)
xor
cmp
xor
movs
mov
push
jb
repnz
add
sub
daa
stos
xchg
ret
adc
sub
ret
jl
xor
cdq
push
jnp
(bad)
xchg
xor
lahf
xor
daa
rcl
clc
jmp
mov
addr16
and
ret
inc
push
and
pushf
pop
std
(bad)
mov
pop
push
mov
sub
pop
add
mov
or
stc
stos
cmp
jb
neg
daa
mov
dec
add
fstp
push
test
mov
pop
or
cmp
push
(bad)
jo
leave
ret
ret
clc
or
inc
adc
data16
cmp
push
std
pop
cmp
mov
pop
mov
in
aad
js
add
xchg
sub
xchg
test
cdq
mov
or
fcomp
mov
jmp
lahf
mov
cld
sbb
(bad)
push
mov
leave
jnp
pushf
jmp
leave
sbb
repnz
jo
jne
stos
push
dec
mov
in
out
jge
fwait
scas
pusha
mov
push
addr16
mov
cmp
xchg
pop
rcr
jo
jg
push
stc
ror
cs
mov
pusha
push
cmp
push
push
or
inc
ss
scas
pop
jne
stc
sub
ja
retf
lds
sti
dec
dec
dec
dec
test
sub
out
imul
fisttp
arpl
adc
jmp
xlat
ret
xchg
push
mov
xor
out
xor
test
das
cmp
dec
(bad)
hlt
aas
adc
mov
call
imul
inc
add
sar
nop
xor
mov
mov
lock
jmp
jl
sub
(bad)
and
xor
pop
mov
rcr
inc
jo
jmp
mov
or
test
sub
cli
aam
jb
in
call
rol
in
and
adc
inc
loopne
mov
push
je
xchg
dec
mov
stos
rol
fstp
and
jmp
pop
lock
mov
daa
pop
jns
jmp
in
jecxz
pop
adc
sbb
int
out
and
sbb
jmp
and
and
mov
arpl
adc
(bad)
push
pusha
retf
sbb
xchg
lea
lahf
aam
mov
int
cmp
jb
cmp
pop
sub
or
out
ins
ret
cdq
inc
pop
and
lods
in
or
cmp
pushf
sub
sbb
cdq
sub
aas
pop
push
dec
lahf
jg
xlat
mov
movups
or
cmp
jmp
dec
pushf
lahf
les
test
or
in
fiadd
or
cld
inc
xchg
sub
add
jne
pusha
mov
loopne
in
test
out
push
mov
fs
addr16
ds
mov
rcl
lods
lock
imul
pop
sub
or
mov
ins
retf
sbb
mov
sti
dec
mov
test
cs
xchg
fsubp
mov
fdivrp
mov
dec
rol
mov
adc
sbb
aaa
enter
retf
scas
in
test
mov
inc
gs
nop
inc
fwait
dec
out
rol
xor
pop
fadd
cmps
inc
dec
(bad)
arpl
push
sbb
jle
mov
mov
xchg
repnz
jl
mov
jne
arpl
mov
cld
dec
(bad)
fiadd
loope
es
jmp
pop
mov
pop
add
sbb
adc
stos
add
enter
ror
dec
test
lods
mov
shr
or
mov
sbb
pop
mov
mov
push
cmps
imul
cmp
and
pusha
(bad)
push
inc
mul
ss
mov
dec
push
push
jg
dec
mov
shr
adc
and
add
jo
mov
in
jg
imul
mov
(bad)
or
mov
push
cwde
cmp
inc
jns
push
and
mov
inc
or
call
mov
shr
mov
fcmove
cmp
pop
mov
xor
push
push
or
xlat
xor
or
into
mov
popa
clc
sbb
sbb
test
mov
lods
fcmovnb
outs
pop
sbb
lds
xor
bound
fcom
mov
pop
jmp
jle
aam
arpl
(bad)
ins
clc
cmp
inc
mov
jp
fcmovnu
pop
mov
xor
mov
or
adc
out
dec
test
jne
pop
mov
inc
add
cmp
push
pop
daa
sti
(bad)
push
int
mov
std
dec
push
jp
mov
xchg
xchg
div
cmp
or
dec
lods
mov
pop
jp
push
pop
repnz
inc
ror
call
mov
xchg
out
fxch
into
mov
cmp
mov
xor
cmp
in
pop
adc
sbb
push
sub
in
xor
into
push
jg
fnsave
jns
mov
scas
or
fld
jae
mov
and
mov
int
mov
push
push
and
mov
and
popa
rcl
jge
fidivr
ja
jnp
and
mov
mov
lods
test
lds
sbb
add
xor
inc
cmp
jo
daa
arpl
cmc
and
movs
xor
cmp
adc
pusha
jl
xor
adc
in
stc
das
bound
or
cmps
add
add
dec
sub
(bad)
fs
in
fs
cmp
in
addr16
jne
mov
data16
jo
pop
lods
and
(bad)
and
aas
mov
pop
jns
fsub
or
adc
adc
push
int3
pop
pusha
mov
mov
inc
enter
retw
sbb
imul
dec
jg
out
mov
imul
mov
rol
sub
cdq
out
sbb
jg
jp
jmp
and
sub
or
ja
mov
and
call
pop
jp
popf
(bad)
imul
or
push
fadd
push
repnz
pop
pop
cmc
mov
lea
mov
mov
and
inc
push
aas
cli
jb
jb
push
inc
aam
xor
sub
outs
in
ins
dec
(bad)
mov
(bad)
mov
or
cmp
test
xchg
adc
dec
aad
clc
test
add
hlt
cmps
iret
mov
xchg
push
or
jno
mov
js
shl
ror
neg
mov
xchg
and
sub
fbld
js
adc
cld
xchg
sub
retf
adc
ds
mov
push
mov
xchg
ret
dec
mul
xchg
pop
call
call
xor
push
adc
sti
mul
(bad)
jp
dec
cmovae
cmp
adc
inc
inc
ficom
dec
push
push
arpl
mov
ins
aad
ins
dec
out
inc
jae
hlt
ficom
shl
push
jae
loop
and
ret
pop
and
aam
inc
shr
jnp
jae
add
ins
out
add
in
ret
aas
icebp
es
mov
add
sbb
xchg
cmp
mov
jle
dec
aaa
sub
lods
mov
sbb
mov
enter
xor
(bad)
adc
sbb
jns
mov
shr
push
arpl
lock
cmps
push
sbb
in
fsubr
sbb
out
xchg
dec
push
(bad)
jnp
and
xchg
sub
repz
(bad)
push
mov
mov
addr16
sbb
mov
mov
and
mov
mul
pop
int3
mov
xlat
arpl
mov
lock
cmp
add
test
data16
popf
bound
or
sbb
mov
push
pop
inc
adc
fnsave
jle
push
push
dec
in
movs
pushf
inc
jecxz
ins
call
cli
shr
daa
sbb
retf
std
fsubr
xor
mov
loopne
mov
test
add
movs
sbb
mov
nop
std
dec
aaa
adc
arpl
cmp
jnp
stc
(bad)
sub
cmp
nop
rcl
stos
ror
inc
jmp
pusha
daa
test
les
in
cmp
(bad)
repz
jg
pusha
push
lahf
or
nop
int3
adc
pop
enter
sub
and
int3
dec
lock
xor
sbb
ds
xchg
mov
push
out
repnz
mov
and
fild
rcr
stc
outs
stos
jae
int3
sbb
push
js
out
int
sub
stos
jmp
neg
dec
mov
pop
popf
cmp
jbe
in
mov
and
aas
popf
in
loop
out
sbb
retf
add
unpckhps
push
repnz
add
mov
in
mov
scas
jb
outs
cld
xchg
push
jns
push
into
jmp
or
and
and
sbb
adc
push
in
shl
shl
cwde
fdivr
cwde
(bad)
mov
fsub
adc
mov
jp
fcmovnbe
jle
popa
imul
test
mov
sbb
ficom
jmp
rcr
cmp
bound
pop
and
lods
push
xchg
out
mov
pop
xchg
adc
in
jecxz
and
xor
or
gs
add
jecxz
arpl
adc
lock
cld
cld
dec
imul
xor
mov
push
pop
dec
jmp
push
xchg
inc
(bad)
fsub
stos
cmp
into
cs
jle
sbb
cmp
call
ret
sar
jne
jae
neg
daa
call
aaa
pop
mov
adc
stos
sahf
and
cmp
js
les
pop
movs
es
iret
xlat
push
leave
xor
test
ret
stos
(bad)
adc
movs
(bad)
jne
push
movs
sar
jecxz
retf
(bad)
jp
movs
(bad)
movs
mov
imul
sub
stc
add
pop
gs
neg
jne
xor
pushf
pop
aas
mov
lds
and
imul
shl
int
scas
xchg
adc
rol
out
inc
(bad)
xlat
call
inc
fcom
outs
lods
repz
cwde
adc
mov
add
mov
daa
mov
xchg
jmp
jae
dec
pop
test
popa
popf
cld
int
push
out
xor
sbb
movs
jns
pusha
retf
push
cmps
ja
inc
jnp
cmps
test
mov
movs
test
test
mov
popf
mov
ins
and
cdq
dec
icebp
mov
xor
xor
les
(bad)
dec
xor
retf
pusha
shl
int3
cmove
scas
lods
in
fmul
in
rol
retf
jecxz
movs
sbb
sub
jns
stos
mov
test
inc
mov
mov
mov
das
stos
and
pop
push
adc
shl
mov
adc
mov
popf
inc
pop
xchg
and
mov
retf
daa
mov
cmc
sub
sub
add
adc
shl
sbb
iret
or
mov
ror
and
dec
mov
fsubr
push
sbb
cli
arpl
ds
adc
mov
dec
mov
test
sub
mov
(bad)
xor
cld
jmp
sbb
cmp
or
mov
xor
xchg
aad
push
dec
xor
or
ins
les
jge
call
aas
dec
lds
mov
(bad)
out
test
jbe
sbb
add
and
sbb
push
inc
loopne
mov
or
fcmovu
cwde
mov
and
xor
cld
ret
fst
ins
sbb
loope
(bad)
call
(bad)
mov
das
cmp
mov
pop
in
jecxz
mov
pop
popf
popa
push
in
jle
into
outs
xchg
jp
fdiv
dec
cmc
push
jns
xchg
mov
and
pop
mov
xchg
cmp
push
inc
pop
add
jle
data16
sti
xchg
addr16
push
mov
xchg
sbb
les
ficom
sbb
or
cmps
movs
sub
mov
dec
sub
mov
pop
inc
retf
cmp
adc
xchg
test
leave
repnz
stos
loopne
in
aam
stc
pop
mov
jns
mov
mov
(bad)
retf
arpl
(bad)
(bad)
add
add
shl
xor
pop
daa
jmp
mov
inc
inc
jl
mov
xchg
mov
inc
jecxz
mov
les
ror
cmp
fdiv
ins
mov
or
and
jmp
mov
xchg
out
sar
and
jo
cmp
cmp
movs
sub
cmp
mov
loop
push
test
cmp
lods
ss
stos
inc
cld
cmp
test
jmp
xor
stos
mov
dec
popa
stos
xlat
call
dec
and
in
test
adc
mov
es
outs
in
in
cmps
xchg
lods
jo
pushf
outs
pop
(bad)
push
or
adc
rcl
adc
xor
jecxz
(bad)
inc
xchg
and
call
jns
cdq
rol
add
push
dec
and
and
out
jns
sub
push
sbb
adc
addr16
jecxz
fs
ret
cdq
jbe
iret
mov
dec
fnsave
or
mov
adc
cmp
mov
inc
pop
sub
cmp
pop
jle
rol
pop
fldenv
add
shl
addr16
leave
jl
xchg
repz
setno
(bad)
test
jmp
iret
add
mov
add
jp
js
lds
pop
adc
mov
xor
sub
push
push
cmp
mul
cmp
icebp
jmp
movs
js
inc
ins
xor
movs
pop
in
ja
imul
ror
push
sbb
xchg
pop
outs
xor
or
gs
push
int3
jecxz
xchg
out
leave
test
add
out
ja
shr
fwait
das
(bad)
fxch
jp
cmc
out
mov
xlat
in
mov
or
jecxz
fdiv
mov
jmp
aam
dec
cmp
clc
pop
xchg
sub
cdq
xor
mov
push
shl
mov
mov
std
adc
retf
(bad)
fldl2e
xchg
push
cmp
mov
das
int
ins
push
pushf
cmps
mov
push
sub
mov
adc
sub
bndldx
xchg
div
cmp
into
inc
sub
xor
or
xor
xchg
sar
and
sbb
xor
lds
xchg
xor
xchg
and
call
mov
mov
xor
inc
mov
aaa
loopne
loopne
pushf
movs
adc
mov
lds
test
cs
push
mov
imul
inc
pop
jle
dec
mov
push
std
jbe
or
test
sbb
push
call
sub
sbb
xchg
sub
fisubr
cmp
sbb
jge
xor
in
mov
sbb
out
dec
mov
mov
aas
cmp
(bad)
clc
xchg
retf
cmc
mov
sbb
repnz
js
sbb
iret
js
xchg
rcl
loopne
retf
xchg
add
aas
imul
xor
mov
rcr
sbb
call
push
pop
cmp
ret
sub
dec
push
xchg
movs
lods
call
mov
jl
js
stos
mov
data16
sbb
fcmove
aam
loop
in
cmp
or
cmps
mov
dec
mov
inc
mov
ret
call
ret
xchg
inc
loope
and
xor
fcomi
xchg
scas
adc
std
pop
pop
sbb
add
scas
or
cdq
add
mov
cmc
adc
ja
xor
and
or
pop
arpl
cmc
movs
mov
iret
sbb
xor
cld
mov
nop
fcom
bound
sti
(bad)
cmp
cmps
dec
leave
in
dec
in
aam
das
and
or
sbb
das
pop
sbb
inc
mov
loop
scas
adc
loope
mov
out
loope
pop
and
bound
pop
cmc
xchg
(bad)
sti
push
pop
ffreep
mov
sub
xchg
push
sar
xchg
jmp
icebp
sub
mov
mov
std
sbb
daa
dec
mov
or
aaa
mov
add
fiadd
mov
push
dec
sub
cmp
pop
inc
pop
rcr
sub
fimul
inc
inc
out
fistp
in
fcomp
shl
sti
xchg
dec
mov
cmp
and
dec
mov
jge
push
lahf
sbb
int3
lods
ret
(bad)
cmp
xor
dec
call
(bad)
lods
sti
outs
dec
cmp
in
loopne
xor
push
call
imul
pop
push
dec
in
jnp
int3
adc
cmp
mov
or
add
daa
cmc
fld
cmp
jo
enter
adc
ds
adc
cmp
in
sub
xor
jae
in
jmp
xor
mov
into
dec
mov
xchg
xchg
hlt
add
loope
push
fimul
sub
test
cmp
jp
imul
jge
inc
lock
lahf
xchg
xchg
shl
dec
and
leave
mov
pushf
(bad)
sbb
mov
xor
mov
cmp
fwait
add
arpl
sub
sbb
das
pop
sub
adc
and
scas
inc
into
mov
mov
cmp
clc
xor
mov
jno
xchg
mov
and
dec
fs
add
ficomp
dec
(bad)
jg
mov
adc
or
inc
jle
add
imul
and
push
and
inc
push
adc
xor
mov
xor
pop
mov
or
jno
jnp
es
dec
mov
mov
or
mov
inc
lahf
jg
mov
jmp
xchg
mov
int3
mov
sub
jmp
sub
mov
test
(bad)
in
in
stc
ja
repz
mov
popa
leave
mov
out
lea
popf
lds
or
ins
iret
cmc
mov
jae
ja
xor
cmc
mov
sbb
sahf
sbb
push
nop
scas
sti
ds
adc
stos
je
mov
inc
retf
fild
rcl
gs
xor
mov
add
mov
push
mov
pop
add
inc
test
mov
sbb
inc
in
xor
and
loopne
ret
je
jns
mov
jp
mov
mov
ret
xor
xchg
mov
push
and
sbb
lahf
mov
and
bound
mov
test
or
cs
adc
dec
jecxz
test
xor
xchg
push
out
loope
loope
ins
das
add
nop
rcl
popf
stos
add
mov
xchg
pop
sbb
cmp
movs
mov
xchg
aas
mov
pop
rol
or
jne
mov
jne
inc
outs
repz
mov
call
fmul
mov
push
adc
call
xchg
sbb
mov
rcl
add
popa
call
repz
pop
rol
dec
push
xchg
and
dec
data16
pushf
out
xchg
cmp
jmp
(bad)
fcom
sbb
daa
mov
inc
(bad)
jmp
stos
and
(bad)
leave
rol
andps
adc
mov
xchg
rcr
pop
push
aam
dec
pop
dec
sub
add
dec
sub
xchg
pushf
pop
dec
mov
jbe
xchg
push
mov
lods
cmp
or
test
cmp
add
repnz
std
jle
movs
sar
jno
cwde
xchg
xchg
scas
dec
ins
jae
jle
idiv
jmp
push
pop
mov
dec
jecxz
xchg
xor
push
aam
sbb
jmp
mov
push
mov
or
fimul
fadd
mov
adc
les
add
push
jb
retf
mov
and
out
or
int3
adc
cmp
imul
add
enter
inc
test
dec
out
popa
mov
out
mov
jle
pop
loop
sub
xchg
call
ja
mov
dec
in
cmps
lahf
pop
push
mov
sbb
lods
ds
sbb
mov
sub
push
repnz
dec
jg
adc
fcomp
int3
pop
out
icebp
cmp
or
and
arpl
imul
xchg
fcmovnb
add
inc
pop
(bad)
push
mov
int3
in
fcomp
cld
pop
adc
out
jnp
inc
lds
xchg
xchg
push
sbb
daa
neg
bound
or
jecxz
clc
push
inc
mov
and
or
sub
mov
scas
cmp
push
mov
mov
push
dec
into
push
fwait
das
pusha
xchg
stc
mov
(bad)
outs
ret
in
xchg
inc
mov
js
ret
jbe
test
retf
mov
idiv
jbe
in
ror
cmp
push
push
repnz
pusha
ja
in
xor
and
sbb
lock
sbb
enter
es
data16
outs
and
push
fcom
stc
adc
cmps
and
cmp
jp
repnz
adc
(bad)
cmp
leave
push
shl
jae
add
xor
call
loopne
or
or
or
pop
jp
repz
inc
or
fs
cli
sbb
dec
repz
movs
fnstenv
scas
movs
sbb
xchg
(bad)
or
cmp
add
aad
xor
sub
add
in
push
pop
jmp
cmp
das
adc
movs
xchg
jp
aam
xchg
into
cdq
sbb
punpcklwd
addr16
adc
ins
ds
or
lods
rol
scas
dec
test
outs
movs
aad
fidiv
rcl
jle
xor
movs
jecxz
std
and
mov
fsubr
xchg
fbstp
mov
xor
cmp
sub
lock
(bad)
iret
push
dec
shl
loopne
sub
jb
imul
mov
adc
dec
shl
xchg
push
das
jmp
push
scas
loopne
jl
xchg
xor
push
(bad)
fsub
pop
or
adc
or
xlat
adc
hlt
jnp
pop
loope
ret
mov
fwait
les
in
sub
adc
lods
pop
sub
dec
sbb
inc
adc
sub
lea
aaa
cmp
jb
jae
dec
stc
lds
mov
aam
sbb
push
dec
cld
frstor
pop
jae
popf
push
pop
mov
adc
or
mov
adc
cmc
and
ds
sub
and
int
jb
movs
vmovq
adc
repz
scas
out
jae
jmp
push
shl
mov
scas
and
pop
sbb
mov
rol
pop
and
mov
int3
push
or
inc
inc
xchg
arpl
mov
inc
xlat
xor
jmp
jb
sti
jo
mov
nop
es
(bad)
aaa
ret
je
cwde
jo
scas
popa
adc
cli
adc
mov
jbe
fisub
xlat
push
aaa
xlat
jecxz
jg
in
cmp
push
movs
mov
cli
popa
rcl
daa
xchg
xchg
xchg
aad
fldenv
sub
pop
adc
mov
ja
push
mov
push
lock
sub
test
mov
ret
dec
mov
fs
outs
xor
xor
and
push
fisubr
ins
push
addr16
call
mov
frstor
push
(bad)
(bad)
fwait
mov
hlt
out
gs
mov
(bad)
sub
js
jmp
mov
repnz
cs
rcr
iret
cmc
cmp
es
out
inc
push
pop
std
cmp
aaa
adc
call
fwait
cmps
mov
dec
movs
mov
ror
mov
fcmove
fcmove
mov
add
push
push
sahf
lods
adc
fdivrp
push
mov
add
jmp
xor
clc
scas
std
jbe
stos
out
push
pop
pop
mov
adc
jl
ret
pop
call
repz
or
pop
cmp
fimul
arpl
sub
lods
push
mov
icebp
mov
(bad)
jne
gs
pop
aad
sub
push
adc
jo
add
adc
cs
fist
imul
xor
(bad)
mov
ficomp
jmp
inc
mov
data16
jae
sub
jmp
add
mov
out
mov
add
addps
cdq
mov
add
push
dec
pop
cmp
mul
jns
add
(bad)
xor
and
loope
fs
adc
pop
xor
scas
das
mov
ds
(bad)
inc
std
stos
and
sub
ss
pop
out
int
push
xor
sub
mov
inc
ret
sbb
jne
rcr
or
stc
jbe
cmps
sbb
or
in
sbb
fmul
sbb
scas
and
push
push
inc
loopne
cmp
out
ins
cmps
mov
mov
push
or
cli
jae
inc
jb
test
cmps
stc
mov
rcl
out
mov
mov
out
loop
push
mov
out
pusha
mov
lods
mov
retf
lea
stos
cmp
popf
mov
push
jecxz
loop
or
mov
push
pop
fcmovu
les
cs
lock
mov
jecxz
nop
fadd
loope
hlt
fcmove
fcom
add
pop
stos
lock
cmp
fisubr
dec
das
sub
sbb
outs
xchg
inc
in
mov
add
xor
(bad)
mov
pop
vphaddbd
shl
rcr
cli
add
aas
jno
mov
(bad)
xchg
sbb
fmul
call
xchg
xchg
mov
cs
inc
xlat
jns
mov
imul
arpl
sub
das
jmp
les
xor
mov
jae
loopne
hlt
mov
clc
enter
cwde
jns
pop
inc
rcr
push
data16
pop
cmp
mov
retf
fld
sbb
ficomp
adc
(bad)
cmp
lods
out
pop
dec
mov
mov
mov
bound
dec
pusha
xchg
and
hlt
sbb
out
xor
je
add
sub
xchg
ret
lods
and
dec
in
inc
push
fist
xchg
jne
in
fstp
mov
cmp
jecxz
cmp
dec
out
aas
mov
call
jp
adc
adc
push
xchg
test
pop
fisubr
dec
stos
xor
add
retf
cmp
xchg
mov
push
sbb
and
pop
cld
fidiv
sbb
es
and
sub
mov
outs
ffreep
(bad)
sbb
test
and
rcl
sbb
add
pop
mov
loope
in
sbb
mov
ja
rcr
test
das
xchg
aas
xor
cmp
inc
leave
push
dec
das
pushf
int
adc
sub
add
sar
aad
xchg
mov
lods
adc
pop
sbb
mov
lahf
cwde
lahf
stos
cmp
sbb
mov
setns
adc
imul
mov
sbb
and
outs
mov
and
jae
cmps
mov
loop
mov
lds
aaa
add
inc
xchg
add
pop
lock
out
xor
add
push
call
int3
aad
or
mov
push
dec
dec
jl
dec
cmp
aas
sti
pusha
mov
aad
mov
ins
or
cmps
mov
sub
cmp
and
lods
retf
outs
call
rcr
push
jle
jmp
gs
fisub
out
xor
arpl
and
mov
mov
aaa
ret
xchg
xchg
xor
pushf
jae
push
xchg
cmp
inc
lods
adc
xchg
retf
movs
jbe
xor
mov
lds
sub
ins
jle
push
pop
xor
xor
repnz
mov
addr16
push
outs
mov
ja
fwait
in
adc
and
idiv
xlat
retf
sub
push
int3
xchg
and
jne
(bad)
jns
pop
jge
adc
jmp
and
cmps
hlt
and
cmp
icebp
ins
mov
cdq
mov
fidiv
adc
add
and
ins
lods
call
stc
jmp
sub
neg
clc
pop
jae
test
out
and
push
mov
mov
sar
and
mov
int3
or
dec
cmp
call
(bad)
(bad)
sbb
call
fcomp
cmps
adc
or
jae
cmp
test
sbb
cdq
in
xchg
in
or
mov
hlt
cli
lea
ror
dec
movs
outs
mov
inc
pusha
adc
xchg
cs
xor
mov
fnstcw
adc
ja
shl
out
enter
add
mov
cmps
xchg
movs
add
jg
out
add
movs
cwde
cmp
retf
jp
dec
dec
ins
lds
adc
fwait
and
push
pop
mov
mov
add
jmp
cdq
js
rol
shl
test
fld
cmp
in
add
popf
sub
sub
pop
jmp
test
in
ins
retf
out
fld
ss
and
jge
add
test
pop
mov
imul
push
ror
mov
cs
mov
xor
adc
ror
and
js
imul
js
inc
pop
arpl
mov
retf
pop
test
sbb
sahf
cmp
xchg
es
adc
xlat
es
mov
lds
int
jae
mov
sub
cmp
fild
pop
and
push
pop
clc
xchg
retf
repz
add
lds
sbb
dec
pop
or
popf
sbb
cmps
out
in
mov
fnstcw
xor
daa
jp
or
mov
add
jne
repz
enter
ss
out
out
mov
sbb
out
cwde
xor
mov
in
scas
add
push
mul
fstp
fild
clc
push
add
xor
cmc
jns
jl
retf
call
mov
cmp
push
ficomp
fcom
addr16
sub
lea
sub
adc
jae
cld
pop
clc
bound
adc
retf
inc
push
pop
jge
call
sub
cmp
dec
push
adc
fild
cmovg
retf
pop
or
aad
ret
inc
daa
lock
cmp
and
add
add
mov
call
test
mov
mov
popa
push
pop
pop
addr16
xor
call
js
mov
out
inc
mov
sbb
sbb
inc
and
daa
dec
sbb
ror
inc
iret
xlat
pop
jae
mov
inc
jnp
fisubr
add
mov
adc
push
(bad)
sbb
xor
pop
adc
aaa
push
and
mov
ja
std
xor
test
inc
mov
mov
je
push
mov
add
add
es
mov
push
mov
inc
inc
ror
jp
rcr
cmp
lock
push
imul
clc
fwait
(bad)
mul
ss
loope
push
mov
mov
pushf
dec
mov
bound
xor
inc
and
icebp
mov
cmp
stos
jg
lods
aad
xor
fsubr
mov
inc
pop
mov
aas
push
jmp
rcl
lds
mov
outs
sahf
call
ficom
cmc
test
and
dec
stos
inc
std
(bad)
icebp
rol
repz
loopne
nop
jmp
xor
jg
into
jae
or
fld
pop
es
mov
fmulp
daa
std
sti
xchg
adc
jno
add
lock
inc
outs
in
cli
inc
pushf
ins
lock
shl
enter
push
std
pop
movsx
dec
adc
sbb
mov
sbb
sti
es
popf
test
mov
push
adc
es
dec
inc
xor
hlt
aam
sub
dec
sti
jecxz
jmp
xchg
pushf
inc
dec
repz
mov
ins
mov
loope
mov
xchg
arpl
retf
jge
sbb
mov
push
cmp
adc
in
iret
adc
pop
xor
sbb
dec
vcvttpd2dq
scas
and
test
push
in
rcl
pop
sar
add
lahf
and
aas
dec
es
add
push
dec
add
dec
or
imul
push
(bad)
rcr
retf
mov
cmp
and
pop
sti
enter
sub
mov
cwde
add
dec
sub
xor
or
in
mov
jle
dec
mov
clc
jmp
cmps
jle
xchg
call
stc
jl
loop
call
push
into
sar
mov
mov
gs
retf
xchg
jle
fwait
adc
mov
inc
cli
ret
xchg
(bad)
cmp
xrelease
call
cmp
loopne
pop
pop
outs
jnp
scas
fld
sbb
adc
or
mov
mov
jmp
gs
test
jno
mov
cmp
pop
adc
ss
cld
push
fwait
lock
jno
mov
xor
xchg
lds
test
add
lods
and
mov
mov
movs
mov
xor
je
and
setae
jmp
jge
out
push
fwait
inc
jecxz
sbb
std
retf
scas
mov
(bad)
mov
mov
sub
test
popa
lahf
adc
ins
les
sbb
inc
not
add
add
push
ror
outs
adc
clc
movs
jno
inc
pop
cld
stc
js
aad
hlt
in
fs
push
div
sbb
push
imul
nop
iret
ss
xchg
int
in
lea
jbe
mov
mov
popa
fistp
add
push
cmp
div
inc
rcr
fild
inc
jno
int
push
push
loopne
xchg
adc
pushf
enter
(bad)
and
call
out
mov
icebp
inc
xor
mov
cwde
jb
xor
(bad)
movs
mov
push
xchg
aad
cmp
fwait
sub
mov
sub
mov
outs
xchg
push
and
loop
pop
icebp
and
push
sbb
sub
mov
loope
lahf
xchg
sub
cmp
repnz
iret
pop
scas
je
mov
popf
in
pop
jae
(bad)
mov
lahf
adc
push
ret
cmp
or
test
jmp
inc
jbe
adc
xchg
div
repz
cmp
clc
pop
stos
push
mov
std
out
adc
push
in
mov
mov
cmc
sahf
pop
push
mov
pop
pop
adc
std
aad
push
xor
cmp
adc
enter
or
movs
xchg
cwde
jae
jecxz
data16
sub
push
mov
mov
fisubr
mov
retw
div
and
push
rol
ret
mov
adc
mov
sbb
mov
iret
cmp
push
aas
cmp
aaa
cmps
push
dec
bound
ror
add
out
push
jge
cli
retf
inc
das
mov
int3
arpl
sar
or
or
scas
cmc
pusha
add
ror
bound
or
loopne
jo
dec
(bad)
rol
mov
nop
dec
je
push
sub
cmps
or
lods
pop
in
cld
dec
xchg
cmp
jbe
sahf
xchg
inc
or
daa
mov
neg
or
add
pop
int
std
(bad)
repz
adc
(bad)
les
mov
lock
jo
mov
xor
js
add
test
imul
sahf
in
mov
mov
js
lods
dec
inc
add
test
(bad)
(bad)
fdivr
out
add
movd
into
jno
mov
mov
outs
mov
add
mul
fcomi
les
mov
inc
xlat
add
sub
jae
int3
movs
jmp
gs
jle
out
imul
stos
fldl2t
xor
out
sbb
aas
mov
or
add
movs
mov
dec
xor
addr16
xchg
inc
push
(bad)
inc
retf
jp
ins
jmp
mov
xchg
cmp
idiv
xor
add
test
inc
int
mov
loopne
clc
div
(bad)
push
cdq
dec
cs
cmp
push
pop
int
dec
pop
mov
lds
ins
arpl
push
sbb
adc
xor
shl
sbb
or
call
jmp
stos
add
xchg
sahf
pop
or
xchg
mov
jns
ins
sbb
xor
dec
sbb
sub
lods
cli
add
cmp
test
test
xchg
dec
inc
es
das
mov
and
jb
xor
dec
ja
mov
mov
in
ficom
outs
lea
xchg
or
jnp
cs
js
ffreep
ret
(bad)
pop
dec
lods
in
js
arpl
pop
out
pusha
fist
xchg
jle
(bad)
jo
clc
es
mov
ds
and
inc
cli
pop
out
jo
stos
add
outs
sbb
pop
or
out
(bad)
shl
rcr
and
and
ja
or
dec
stc
dec
aad
rcr
test
xlat
call
movs
xor
inc
pop
adc
dec
movs
cmp
into
outs
cmp
add
test
sub
mov
push
movs
mov
test
inc
nop
and
push
push
jnp
out
into
sahf
iret
add
out
pop
fs
scas
test
mov
sbb
cmovae
nop
call
or
add
(bad)
std
push
dec
jge
mov
push
push
aaa
fstp
stc
mov
mov
mov
les
fadd
gs
dec
aad
xor
jg
dec
es
js
or
out
lea
xchg
sub
cmp
rcl
pop
out
and
mov
sti
lds
pop
leave
dec
push
push
ja
loop
dec
in
ds
outs
xor
and
stc
repnz
out
sub
hlt
out
in
sbb
fwait
stc
cmp
xchg
mov
enter
cdq
in
cmps
pop
push
repnz
sub
(bad)
cmps
scas
xchg
sub
jp
aam
add
pop
add
cs
push
fwait
add
jle
cdq
ret
push
in
scas
push
xchg
add
ret
lea
xchg
test
test
cmps
push
inc
cmp
sub
add
jno
or
dec
add
adc
mov
or
test
add
scas
push
fs
(bad)
mov
hlt
outs
inc
push
mov
pusha
(bad)
sub
or
mov
shr
cmps
push
data16
inc
leave
fld
sbb
xchg
mov
add
mov
xor
add
rol
push
test
xchg
mov
or
and
mov
hlt
test
prefetcht0
stos
push
xor
scas
mov
loopne
fcmove
enter
lods
jle
into
cmps
xchg
adc
je
retf
lahf
clc
cmp
lock
nop
sbb
sub
sbb
mov
pop
in
jns
mov
and
push
push
mov
mov
dec
cs
adc
repz
inc
ds
or
mov
loop
lods
push
inc
and
pop
mov
iret
xchg
jecxz
mov
sub
les
inc
scas
in
cmp
imul
pop
neg
fld
mov
iret
sub
call
cmps
mov
jle
jb
or
adc
pop
xchg
ins
fadd
sti
or
xchg
cld
lds
jmp
mov
sahf
inc
shl
addr16
movups
xor
scas
retf
stos
(bad)
push
or
es
movs
leave
jp
add
stc
es
inc
sbb
inc
dec
and
jne
mov
gs
int3
div
inc
out
icebp
xchg
sub
mov
jle
pusha
jp
push
or
gs
inc
test
ja
pop
jae
xlat
test
mov
div
mov
stc
mov
adc
jnp
fucomip
mov
cwde
cs
cmps
sbb
(bad)
test
idiv
sahf
and
shl
mov
push
jae
mov
sbb
sbb
xor
xor
xchg
lods
cld
repnz
xor
lahf
aaa
rcr
hlt
xchg
outs
cmp
xchg
lahf
and
dec
mov
sub
lods
mov
popf
ins
inc
cs
xchg
shr
adc
mov
pop
mov
mov
pop
imul
sbb
and
inc
jnp
xchg
pop
rcr
sbb
xlat
add
data16
push
push
and
push
jnp
shr
and
jns
int
iret
or
sub
loope
cmps
xchg
jne
loopne
sub
repnz
push
sub
cmps
pop
sub
dec
sub
add
cs
hlt
pop
sahf
jmp
rcl
movs
mov
add
xchg
arpl
loop
mov
icebp
inc
sbb
mov
shr
push
hlt
fadd
bound
hlt
inc
scas
mov
fidivr
adc
or
mov
xlat
fisttp
(bad)
dec
and
fstp
cmp
repnz
jns
in
push
xor
push
xor
mov
jle
and
aas
stc
push
inc
jge
retf
jmp
arpl
mov
int3
xchg
xlat
jno
and
mov
call
retf
sbb
jl
xor
cmp
cmc
mov
jmp
pop
test
dec
repz
nop
mov
les
in
mov
je
shr
cdq
test
(bad)
mov
cli
mov
add
dec
adc
movs
imul
iret
enter
ss
sbb
push
ins
lahf
repnz
nop
sub
cld
inc
xor
sub
shr
mov
cmp
shr
dec
jns
std
mov
dec
inc
pop
jnp
cmp
aaa
pushf
daa
pop
push
mov
xchg
ror
adc
adc
mov
ds
lock
or
mov
hlt
add
jo
ret
push
jo
out
rcl
cs
loope
xor
jge
and
push
mov
pop
jmp
ficom
jge
push
mov
and
cmps
stc
cld
je
xchg
les
xchg
ins
repz
xchg
dec
fsubr
jno
fbld
cmp
mov
shl
div
xchg
fisub
sub
inc
ret
dec
push
xor
push
retf
aaa
jno
pop
outs
in
in
fdivr
or
cs
sub
cmp
inc
sbb
cs
int
sbb
cmps
daa
jnp
push
sub
or
sbb
pop
test
push
mov
mov
xchg
xor
mov
jbe
cmps
cmc
loopne
faddp
ss
or
add
(bad)
int3
lock
mov
xor
jae
fucomp
movs
loop
xchg
add
js
push
hlt
out
adc
int3
gs
cmp
call
and
repnz
daa
cmp
mov
ins
cmc
js
mov
mov
cmc
test
dec
cmp
or
(bad)
test
mov
xor
push
and
fldcw
rcr
xor
mov
or
pop
jbe
out
sub
adc
xlat
xchg
or
loop
or
inc
pop
xor
nop
mov
sbb
out
je
inc
sub
icebp
jne
test
cmp
jp
sar
xchg
rol
jns
movs
in
call
mov
add
pushf
adc
jo
js
push
hlt
xlat
push
add
scas
xor
cmp
jne
ret
lahf
xor
inc
push
enter
shr
cs
(bad)
idiv
(bad)
in
sub
xor
adc
mov
rol
cmps
sbb
out
push
mov
sbb
push
das
into
dec
push
mov
adc
enter
shl
das
lock
push
or
mov
loop
neg
retf
push
das
push
sub
inc
dec
jno
les
clc
(bad)
pop
mov
retf
aad
movs
inc
ins
jge
icebp
mov
rcl
cmp
mov
jne
cmp
mov
pop
jmp
in
adc
xor
and
and
dec
std
int
cmp
(bad)
cmp
adc
pop
addr16
cmp
enter
mov
pop
cmp
fs
out
out
lods
pop
adc
adc
jbe
sub
pop
pop
jmp
xor
in
icebp
inc
pop
dec
dec
icebp
push
xor
aaa
(bad)
pop
cmp
es
cdq
std
and
sub
jp
jo
push
lds
int3
clc
push
leave
sbb
mov
stos
sub
fistp
aaa
mov
sbb
js
cdq
aad
in
xchg
cmp
aam
mov
retf
jecxz
pusha
aas
sub
cmp
mov
je
shr
cmp
cmp
mov
sub
add
pop
mov
dec
mov
sub
or
fld
pop
inc
jl
pop
dec
pop
int
cmps
ret
jae
mov
push
scas
add
stos
out
cdq
out
jle
das
push
pop
repnz
xchg
addr16
jmp
mov
aad
iret
push
mov
fcom
sub
ror
lea
cmp
daa
add
mov
push
inc
xchg
clc
inc
jnp
xchg
(bad)
jmp
fist
aam
fwait
push
cld
xor
inc
jo
xlat
(bad)
(bad)
iret
arpl
xchg
cmc
int3
cmp
xchg
cmp
xchg
cmp
sahf
sbb
or
cmp
cwde
xchg
pop
dec
cld
xchg
and
mov
test
xchg
add
xchg
addr16
mov
popf
jbe
cmc
and
ins
hlt
xchg
int
rcr
dec
and
sub
sbb
shl
adc
(bad)
mov
mov
mov
das
rcr
in
ds
dec
mov
outs
popa
ja
shr
loop
xor
sti
stc
icebp
fdivr
and
imul
cmp
or
sub
push
and
mov
ss
ret
ins
sub
jo
pop
sbb
mov
mov
leave
sub
lea
or
sub
add
cmp
push
cmp
in
mov
ss
lds
test
nop
jb
push
fstp
push
dec
xchg
inc
xchg
(bad)
cs
scas
push
and
or
cdq
lods
pop
mov
mov
mov
fbstp
bound
jb
mov
ret
ret
mov
mov
(bad)
out
cmp
jecxz
jmp
leave
rcr
inc
(bad)
stc
outs
shl
push
mov
lahf
test
(bad)
adc
jecxz
ins
pop
dec
movs
sbb
enter
ret
push
loopne
in
out
sbb
rcr
xchg
mov
cmp
mov
iret
sub
and
add
jns
mov
mov
jecxz
jnp
js
fsub
aad
push
or
xor
pop
sbb
jge
call
sbb
stos
xor
cmps
xor
add
daa
aam
mov
adc
das
pop
repz
jge
aam
lahf
cmp
mov
lods
(bad)
icebp
pop
xchg
inc
loope
mov
aam
(bad)
and
jmp
(bad)
arpl
neg
out
adc
pop
mov
fcom
hlt
loop
out
(bad)
ins
es
imul
or
int3
xchg
mov
and
fdiv
pop
jne
and
lods
pop
icebp
mov
nop
movs
add
cmp
xor
mov
ret
mov
lea
jecxz
xchg
nop
test
ins
imul
jne
adc
cwde
dec
fcmovnu
adc
int
outs
fist
mov
es
cwde
add
pop
mov
or
ds
into
push
shl
ret
mov
shl
dec
mov
jno
add
(bad)
sti
and
pushf
sbb
data16
adc
popa
ins
jne
push
data16
mov
lods
mov
ret
mov
bound
pop
pop
(bad)
mov
sti
sahf
jbe
out
sahf
out
shl
and
aad
add
jp
fadd
jo
cdq
push
sbb
push
in
jne
mov
push
push
sbb
jmp
in
ds
add
shl
inc
ret
pop
inc
rcl
addr16
dec
(bad)
loopne
fidiv
jmp
iret
push
sbb
push
add
lods
dec
sub
xlat
dec
fild
ins
aaa
leave
push
arpl
cmps
ror
cmp
fld
lods
iret
pop
popa
push
cli
push
pop
inc
dec
ja
push
repnz
jmp
xchg
cmps
lds
xchg
fs
into
mov
dec
bound
les
push
int3
mov
js
xchg
mov
in
sub
fdivr
adc
rcr
icebp
inc
jmp
xor
cli
sub
xchg
adc
dec
repnz
adc
lods
inc
cmc
xor
mov
popf
and
mov
sbb
add
push
es
mov
xchg
loopne
inc
mov
icebp
and
jbe
adc
mov
push
lahf
ror
shl
in
ret
jmp
iret
hlt
mov
fdivr
adc
mov
jp
dec
cmp
sbb
xchg
adc
loop
adc
inc
sub
stc
nop
lock
mov
dec
pop
xchg
xchg
mov
xchg
movs
xlat
fmul
push
jmp
or
xor
jbe
mov
lods
(bad)
neg
and
movs
or
lds
or
mov
enter
mov
inc
adc
(bad)
push
jg
mov
cmps
and
icebp
dec
and
out
or
jo
xor
cmp
mov
(bad)
das
push
sbb
ret
pusha
retf
stos
adc
dec
ja
jbe
push
and
xchg
mov
xchg
cwde
idiv
mov
into
jecxz
ins
inc
fidivr
inc
add
gs
frstor
sti
cmp
mov
pop
ds
lods
jo
sub
std
retf
add
popa
ret
or
sbb
cmps
push
loop
ja
fsubr
jbe
cmp
dec
pop
xchg
jae
shl
stos
xor
add
aam
fcomp
(bad)
frstor
push
cmp
sbb
addr16
pop
sub
sbb
fmul
cli
inc
cmp
inc
add
mov
sbb
xchg
add
les
call
jne
push
xchg
inc
sahf
adc
xor
aas
ja
(bad)
call
ss
in
(bad)
fidiv
sti
dec
inc
jbe
mov
mov
cmps
xchg
imul
fnsave
xchg
or
out
or
ja
pop
mov
adc
cmps
pop
or
and
enter
clc
jno
sbb
test
sbb
int
inc
jmp
adc
dec
xchg
mov
lahf
dec
and
pusha
cmp
fnstcw
adc
imul
clc
jae
mov
movs
leave
or
cwde
sub
outs
xchg
call
xor
(bad)
fsubr
lock
arpl
sar
cmp
push
add
scas
and
xchg
out
pop
or
sahf
xor
js
xor
into
dec
cwde
loopne
mov
ret
inc
jae
call
aaa
pusha
fdivr
outs
xchg
push
(bad)
cmp
jg
xchg
jae
add
push
lock
push
mov
mov
icebp
fimul
push
call
movs
inc
rcr
push
pop
push
data16
jne
(bad)
mov
mov
pop
nop
ror
add
in
sub
jmp
dec
mov
or
int3
jnp
int
mov
sub
stc
dec
stc
int3
cmp
int
ret
movs
dec
loopne
(bad)
(bad)
dec
(bad)
test
add
enter
mov
fcomp
xchg
sub
dec
popf
jl
pop
add
mov
sbb
call
push
js
fisttp
push
push
mov
in
movd
mov
scas
cmp
ja
loopne
call
pusha
les
mov
aad
xor
arpl
dec
cld
cmp
out
(bad)
xor
dec
pop
push
or
in
bts
add
mov
rcl
nop
pusha
sti
scas
std
dec
sub
aas
das
dec
sbb
cmp
(bad)
push
xchg
pop
xchg
mov
push
sar
mov
xchg
ins
in
(bad)
cmc
sahf
xchg
out
test
shl
sub
arpl
xor
(bad)
imul
pop
int
out
mov
push
dec
mov
cmps
mov
jnp
shr
cs
and
push
sbb
mov
xchg
xor
add
xchg
dec
movs
inc
adc
mov
fstp
sub
add
and
test
mov
adc
inc
cmps
lahf
adc
push
xchg
repnz
inc
and
in
push
scas
icebp
retf
push
xchg
loopne
pop
sub
fs
dec
cmp
add
stc
pop
movs
lock
or
inc
dec
and
loop
mov
sub
sub
ror
jnp
leave
gs
or
cwde
jb
ficom
inc
cmp
fs
xlat
(bad)
call
xor
xor
scas
js
call
arpl
scas
pop
in
sub
inc
or
and
cwde
inc
into
psrlw
adc
or
std
inc
inc
dec
sbb
pop
xchg
jo
adc
cmp
dec
mov
pop
mov
les
aas
outs
inc
rcr
pop
fnstsw
push
push
addr16
test
mov
cmp
test
out
imul
sub
retf
push
pop
sub
pop
jecxz
jne
jns
pop
(bad)
bound
dec
push
aam
mov
adc
sub
shr
popa
lods
sub
shl
es
push
fiadd
lds
xchg
jge
(bad)
and
leave
outs
outs
dec
in
loopne
inc
sub
sahf
shr
(bad)
leave
fs
icebp
fist
retf
rcl
push
push
loope
(bad)
ror
adc
aaa
psadbw
call
inc
dec
xor
(bad)
daa
jns
jl
dec
sub
xor
cmp
sbb
jle
stos
bound
mov
fld
sub
push
fld
ins
loop
hlt
xor
push
pop
and
cwde
xlat
(bad)
adc
dec
aad
lock
sub
icebp
(bad)
das
outs
mov
jge
adc
inc
cli
inc
mov
fwait
mov
jae
or
ins
cli
ret
dec
pushf
fs
mov
mov
popf
pop
cmp
(bad)
fld
jbe
or
cld
cmp
(bad)
inc
sar
jge
mov
push
leave
or
into
rcl
jp
rcl
pmullw
(bad)
cmp
adc
xchg
dec
test
jbe
cdq
mov
aam
inc
push
xlat
push
out
dec
mov
lock
jecxz
lock
stos
fptan
imul
ja
inc
jae
push
xchg
mov
sti
push
mov
shr
mov
or
ret
sbb
mov
inc
inc
dec
and
sbb
xchg
js
push
rol
in
mov
jmp
rcr
call
call
(bad)
test
jecxz
push
push
pop
xchg
inc
cld
cdq
jmp
cmp
xchg
ins
test
xor
jp
pusha
aad
stc
pushf
mov
sbb
inc
push
fwait
in
stos
mov
dec
in
sbb
iret
add
mov
in
(bad)
out
dec
pop
aam
add
dec
jp
mov
xchg
rcl
in
cwde
mov
adc
dec
push
add
ja
outs
outs
cdq
mov
adc
movs
dec
repz
jo
mov
adc
fwait
mov
push
jge
xchg
mov
retf
or
test
cmp
test
sbb
fcomp
sbb
sub
inc
push
es
xchg
cld
and
aas
lods
mov
popa
je
dec
push
rcr
mov
sbb
ss
sub
daa
sub
pop
dec
loopne
cli
jp
lods
mov
(bad)
adc
stos
jnp
mov
(bad)
fistp
retf
mov
es
pop
mov
xchg
mov
xlat
(bad)
adc
fs
mov
pop
(bad)
pop
aaa
sub
mov
sbb
jl
outs
in
pop
inc
push
call
inc
add
enter
icebp
(bad)
jmp
jmp
(bad)
xor
add
aas
add
sub
or
push
jecxz
pop
pushf
xchg
mov
fcomp
dec
xor
push
xor
push
sahf
bound
out
cmp
gs
call
scas
sub
fsub
leave
sar
sbb
mov
jp
stos
mov
mov
xchg
add
pop
sbb
jno
stos
mov
test
imul
push
xor
in
cmp
dec
daa
int3
ret
mov
stos
inc
dec
loope
out
int
stc
mov
imul
mov
(bad)
aas
jb
sub
sub
stc
outs
adc
sbb
mov
stc
jl
mov
(bad)
je
inc
int3
leave
js
(bad)
mov
ror
or
push
(bad)
xchg
xor
add
mov
outs
dec
sub
int
movs
xor
test
ja
xor
adc
ins
(bad)
fnstenv
das
cld
push
shl
add
das
push
movaps
arpl
sbb
push
fwait
rol
stos
dec
xor
out
jne
and
arpl
loop
mov
aaa
jmp
xor
and
lods
add
fbstp
lahf
or
dec
mov
xor
xor
imul
rcr
adc
inc
add
(bad)
imul
mov
rcl
jmp
pop
es
sahf
popf
lds
call
push
loop
or
push
jg
repnz
cmp
lods
push
mov
rcr
jge
adc
hlt
xchg
add
inc
jbe
and
pop
shl
out
test
add
cmps
(bad)
jmp
fmulp
adc
mov
arpl
int3
pop
xlat
scas
das
ja
add
or
or
scas
cmp
cmp
xor
loopne
in
call
cwde
clc
dec
and
ret
push
pusha
fisubr
mov
xchg
sbb
xchg
or
push
jmp
push
cli
jmp
cmp
cmc
sbb
mov
fdivr
jae
pop
jge
and
ret
shl
rcl
pop
dec
adc
je
cmps
xor
add
mov
inc
jle
sahf
mov
in
mov
not
fadd
imul
push
push
pop
call
add
jmp
lock
sbb
sub
call
outs
pop
(bad)
mov
and
push
mov
(bad)
ret
dec
pop
mov
shr
dec
sub
aad
out
mov
addr16
dec
dec
jns
xor
sbb
mov
stos
sbb
cs
fwait
cmps
out
cmp
inc
mov
mov
daa
sub
into
jbe
push
inc
fisub
test
ffreep
lds
or
mov
imul
pop
mov
ds
adc
pop
popf
mov
push
scas
pop
or
sub
ror
ret
push
add
imul
pop
fs
mov
iret
and
sub
int3
mov
scas
adc
aam
jbe
push
retf
ror
bnd
cdq
fs
in
dec
js
jmp
dec
aaa
push
int3
push
xor
inc
mov
(bad)
sbb
in
push
inc
push
add
bound
lods
push
fdiv
or
pop
add
jb
mov
xchg
sahf
out
add
dec
inc
mov
push
shl
mov
outs
ins
(bad)
fisubr
cs
(bad)
push
ja
in
jmp
cmc
adc
fld
lahf
xlat
sub
sbb
fxsave
mov
cmps
dec
sar
jmp
lahf
nop
push
mov
test
pop
cmp
das
bound
add
cmovbe
mov
imul
ss
mov
mov
iret
xor
shl
adc
aam
or
das
xchg
shr
xlat
(bad)
pop
mov
mov
xor
push
out
loopne
push
out
xchg
shr
clc
pop
pop
push
jecxz
leave
push
cmp
adc
into
xor
sub
push
shr
aaa
repz
adc
in
xchg
xchg
and
push
pusha
cmps
jno
neg
jno
test
iret
cmp
fcomp
add
iret
mov
cmps
cmc
std
in
mov
rol
add
or
in
fidiv
into
push
xor
jge
push
sar
push
mov
ret
sub
xchg
lods
imul
add
jmp
inc
pop
add
fdivp
or
shl
sbb
pop
push
jbe
add
mov
out
sub
adc
stos
cmp
pop
test
into
lds
js
loopne
repz
push
sub
sub
loope
mov
dec
push
(bad)
cmps
mov
scas
scas
shr
clc
cwde
icebp
jmp
mov
ins
mov
imul
aaa
je
out
adc
enter
dec
push
jb
xlat
mov
fs
enter
push
sbb
push
div
sti
pop
jae
mov
jo
fsubp
push
and
xchg
lods
jge
pop
and
pushf
in
lods
pop
pusha
aaa
sbb
xchg
idiv
clc
xor
test
or
jns
je
mov
call
repnz
push
xor
rcr
fs
mov
data16
aas
stc
jecxz
cmp
dec
pop
xor
movs
cmp
jmp
cli
push
adc
jmp
push
call
mov
leave
jmp
sub
mov
dec
jbe
lods
dec
mov
inc
sbb
ds
call
pushf
jmp
sbb
(bad)
mov
sbb
mov
rol
sbb
xchg
inc
jb
xor
cdq
sbb
leave
pop
clc
jle
inc
xchg
mov
popf
scas
pop
cli
retf
fsincos
push
repz
or
test
cmp
inc
mov
pop
mov
(bad)
jmp
imul
ds
call
or
mov
cmps
shr
mov
sub
or
stc
mov
pop
lods
ins
loope
inc
jle
dec
xchg
(bad)
out
ret
mov
dec
pop
sbb
imul
clc
or
lods
in
add
sub
mov
inc
cmps
enter
fsubr
jns
int3
pop
mov
(bad)
mov
adc
xor
push
pop
addr16
stc
mov
sub
rol
lahf
imul
mov
(bad)
mov
gs
lods
(bad)
jmp
js
aaa
nop
xchg
xor
push
push
or
push
nop
cmp
repnz
mov
popf
xchg
sqrtps
out
mov
cmp
ret
jns
int3
out
rcr
xchg
jmp
lahf
adc
pop
in
push
sbb
mov
sbb
or
fnstenv
or
int
adc
fnstsw
inc
jl
add
jle
mov
loop
test
add
xchg
(bad)
dec
retf
sbb
mov
push
rcr
mov
shr
shl
jne
into
push
cli
ins
lods
jmp
inc
adc
jno
cdq
adc
cdq
in
repz
es
mov
sub
in
fs
stos
or
cmc
lock
scas
inc
jne
lods
jns
fsubrp
and
mov
(bad)
adc
xor
dec
(bad)
jp
idiv
push
pop
pop
repz
retf
hlt
adc
xchg
js
test
mov
pop
retf
or
call
test
ja
mov
into
jae
sbb
jae
pop
pop
xor
jmp
lds
jl
push
mov
jo
fisub
cwde
aad
std
in
inc
add
das
test
out
hlt
ins
xor
hlt
jno
fmul
cmc
xchg
les
cmp
dec
or
mov
scas
mov
cld
lock
ret
test
dec
retf
repz
ss
sub
adc
iret
call
push
mov
imul
arpl
dec
popa
jns
xor
add
dec
push
inc
xor
outs
mov
shl
nop
cmps
arpl
jecxz
adc
inc
mov
sbb
adc
mov
push
add
movs
fcmovnb
stc
mov
(bad)
and
je
cdq
outs
mov
mov
inc
nop
sbb
jle
out
add
(bad)
jne
lea
das
cs
lods
mov
retf
pushf
and
popf
mov
rol
js
or
and
stos
mov
jns
iret
adc
add
test
gs
sub
inc
mov
mov
not
xor
xchg
outs
cmp
cmps
and
or
imul
pop
iret
pop
or
dec
aam
cmp
jne
ds
and
adc
mov
and
into
inc
std
xor
sub
les
xchg
push
retf
test
jne
loop
(bad)
mov
fnsave
test
mov
mov
jo
jmp
jle
xchg
repz
xchg
lea
cmp
gs
pop
(bad)
fdiv
sub
add
push
fimul
not
or
jbe
je
sub
pop
mov
in
retf
popf
retf
adc
mov
or
cld
pop
mov
add
dec
loope
push
rcr
aad
ds
jp
arpl
loop
fstp
inc
jge
das
push
xchg
into
mov
adc
and
add
gs
jp
and
gs
cmps
jmp
add
mov
pop
mov
sbb
jl
adc
mov
inc
call
push
test
repnz
lds
inc
sub
repz
jbe
xchg
loop
imul
daa
hlt
or
imul
jae
in
pusha
push
mov
dec
inc
pop
xor
popa
rcr
aaa
nop
rol
mov
jmp
and
sub
mov
or
xor
out
mov
and
cmp
pop
leave
jo
(bad)
ror
aam
and
aas
adc
inc
lods
cwde
pushf
fnstcw
or
pop
lods
ins
adc
repz
aam
add
inc
mov
mov
imul
enter
xchg
jmp
ficom
cmp
jp
fmul
popa
inc
mov
scas
test
lods
dec
jg
jo
push
lods
inc
xor
xor
aam
cmc
hlt
fcomp
jmp
fld
dec
xchg
jge
push
iret
scas
popa
sti
jns
je
inc
dec
jb
push
jg
(bad)
xchg
mov
scas
cs
mov
aam
jecxz
in
cmp
jge
call
sub
mov
popa
sub
pop
iret
and
cmps
dec
adc
mov
bt
rep
mov
loopne
xor
movs
out
jg
mov
daa
add
fwait
mov
push
movs
loope
je
ins
hlt
pop
enter
xor
inc
xchg
dec
(bad)
fcomp
mov
movs
aam
aad
sahf
sti
mov
dec
pop
or
ins
jns
fs
repz
imul
ror
bnd
gs
mov
push
jecxz
aad
pop
cmps
fimul
inc
pop
inc
ja
test
ret
ins
or
and
push
xchg
outs
mov
push
aas
and
and
into
pop
popf
imul
push
aaa
xchg
test
dec
lods
lds
and
or
jecxz
sti
cmp
cwde
lock
jns
jmp
lods
inc
sti
(bad)
pop
shl
sar
je
pop
mov
jl
and
mov
es
push
sar
jb
(bad)
sbb
leave
or
xchg
dec
out
hlt
mov
arpl
into
je
add
test
jne
sbb
into
(bad)
rcl
fnstsw
xchg
ret
adc
jmp
adc
xchg
sub
dec
and
ficom
sar
ret
ret
ins
ds
sub
stc
xchg
arpl
imul
jmp
inc
mov
jle
adc
jb
push
rol
pop
jb
fs
cmp
je
pop
test
mov
out
dec
push
imul
(bad)
mov
js
outs
pusha
sub
(bad)
iret
jmp
daa
mov
fs
cld
jo
lock
ror
push
mov
or
stc
push
xchg
adc
adc
in
out
and
daa
fbstp
shr
scas
and
jne
add
lock
(bad)
sbb
ror
retf
aas
mov
int3
push
or
adc
addr16
shr
scas
addr16
ror
add
fdiv
pop
pop
int3
jae
xchg
in
jns
sub
mov
mov
addr16
frstor
adc
sbb
xor
lock
(bad)
and
retf
fcomi
sbb
jns
mov
mov
hlt
scas
cmp
jmp
imul
push
(bad)
rcr
xor
test
dec
stc
inc
mov
cdq
inc
popa
shr
pminub
and
cdq
pop
xchg
xchg
cmp
push
cmp
test
sub
sti
mov
jle
mov
jge
fsub
sar
add
jge
(bad)
clc
test
sbb
push
daa
fisubr
ret
aam
pop
xchg
ins
(bad)
adc
cmps
jle
retf
out
xlat
xchg
lock
add
imul
sub
push
adc
pop
retf
cmps
xchg
movs
jno
ins
fst
ret
sbb
jnp
push
mov
pusha
dec
enter
dec
inc
xor
sub
add
out
adc
sahf
nop
pushf
or
and
sbb
xchg
(bad)
call
fcomp
scas
dec
mov
sub
add
cmp
dec
jne
sbb
popa
mov
pop
mov
or
and
dec
mov
adc
jmp
sbb
add
jne
or
ret
jp
sahf
xchg
(bad)
adc
aas
xor
mov
and
mov
add
and
mov
mov
xor
jecxz
and
jmp
and
dec
sbb
ret
mov
push
test
mov
push
mov
hlt
aam
in
rcl
mov
mov
ja
iret
lods
aam
push
mov
sub
pop
pop
sbb
cld
in
repnz
mov
inc
fs
mov
sbb
in
fild
dec
adc
test
mov
mov
jl
ret
push
les
fcmovnb
test
imul
shl
and
sbb
push
jb
sbb
adc
fmul
leave
rcr
sub
lea
or
in
push
arpl
jae
push
push
mov
cwde
pop
xor
call
jo
arpl
xchg
pushf
je
jno
mov
jb
jns
mov
cmp
cmp
mov
ja
(bad)
popf
push
dec
loopne
inc
and
mov
arpl
cwde
jle
int3
mov
js
sub
nop
repz
stos
lods
sub
xchg
mov
ja
push
cmp
or
jb
call
into
mov
or
mov
push
adc
sti
mov
aaa
dec
aas
cmp
test
scas
xchg
jb
inc
jb
out
call
stos
dec
pop
jg
mov
pop
stc
or
in
and
bswap
sbb
pusha
cmp
fnstsw
cmps
push
pop
ret
push
add
popa
std
adc
or
dec
push
cmp
jnp
in
pop
neg
repnz
mov
call
push
cmc
pop
shr
int
xchg
or
dec
inc
sub
push
push
lea
and
aad
pop
outs
inc
push
and
(bad)
out
mov
clc
daa
div
mov
cmp
(bad)
adc
loopne
scas
dec
psrld
jmp
hlt
out
jge
jmp
test
cmp
xor
fimul
cmp
mov
mov
arpl
bound
in
enter
adc
push
xchg
scas
inc
add
mov
ss
dec
pop
pop
inc
in
mov
jg
pop
sbb
(bad)
imul
pop
out
push
ss
outs
call
sbb
xchg
ja
xchg
cmp
jp
inc
test
push
sbb
repnz
sbb
sub
jg
je
mov
xchg
ins
js
xchg
inc
movs
sub
leave
sbb
movs
jbe
div
jge
push
adc
and
jnp
jnp
sti
loope
ja
es
pop
pop
fstp
dec
jno
push
mov
nop
mov
pop
lds
into
cli
loop
lods
or
add
mov
into
xchg
int3
push
mov
xor
lock
fcomp
(bad)
jp
pusha
in
mov
sahf
jge
and
shl
xchg
mov
dec
jae
call
push
int3
(bad)
icebp
repnz
inc
in
push
daa
or
and
cmp
scas
mov
cmc
loop
ss
push
test
int
mov
test
jmp
(bad)
xchg
fs
rcr
xor
push
cs
(bad)
xor
out
das
ficom
pop
loop
sub
ret
ret
inc
into
and
sahf
push
cld
pop
cmp
not
movs
imul
in
std
data16
popa
push
fsub
adc
test
xchg
pop
dec
aaa
cmps
pop
inc
stos
sub
push
push
(bad)
inc
pushf
add
rol
sub
push
and
and
mov
push
loop
push
xor
sbb
call
stos
out
pushf
out
xor
sbb
mov
retf
stos
sub
sbb
sub
or
daa
push
push
sahf
dec
mov
hlt
xlat
enter
or
xor
fnstsw
adc
in
les
inc
or
mov
dec
or
test
iret
push
cmc
xor
sti
stos
pop
sti
sub
out
in
not
cli
push
pop
in
or
(bad)
xchg
icebp
mov
out
jge
test
jmp
push
or
leave
adc
sbb
or
repz
popa
mov
push
scas
xchg
pop
push
dec
pop
mov
xor
movs
xchg
mov
data16
add
idiv
outs
push
xchg
mov
pusha
shl
push
adc
mov
gs
loopne
xchg
and
loopne
inc
xor
pop
push
pop
sub
push
cli
sti
mov
xchg
nop
retf
dec
and
jns
xchg
mov
ds
mov
into
xor
div
movs
and
fs
xor
aas
fsubr
xor
push
pusha
jg
inc
sub
(bad)
hlt
or
repnz
int3
xor
jmp
jnp
and
shl
push
imul
push
stos
in
stc
into
pop
dec
ret
lods
pop
ret
pop
jle
bnd
ror
ins
(bad)
(bad)
push
cmp
repnz
not
adc
xor
ja
repnz
stos
mov
or
fimul
aaa
pop
jecxz
loop
test
pop
push
das
imul
and
sub
shl
add
cld
mov
add
inc
fdiv
cld
loopne
xchg
mov
ja
(bad)
xor
dec
lods
push
mov
cmp
call
fisub
jb
sub
pop
adc
call
cmp
jbe
out
adc
(bad)
in
dec
jno
hlt
adc
in
sub
mov
and
mov
jae
jno
leave
adc
lods
hlt
sti
cdq
xor
xlat
push
xlat
lea
dec
div
mov
pop
popf
dec
jecxz
test
dec
call
xlat
lock
cmps
mov
enter
shl
inc
(bad)
dec
ret
sti
lock
cli
jl
jo
adc
leave
cmp
jno
test
mov
ss
inc
push
arpl
or
xchg
das
or
inc
pcmpgtb
hlt
in
xlat
mov
pop
cmp
bound
and
test
adc
pusha
std
adc
inc
xor
imul
test
inc
stos
sbb
imul
jg
and
inc
mov
pop
push
in
fisubr
cmps
and
add
xor
adc
lock
fwait
push
rcr
call
adc
cmp
(bad)
jmp
mov
call
jne
dec
cmp
cmp
loopne
popf
mov
iret
aaa
loopne
faddp
dec
aaa
stos
jecxz
push
ins
push
dec
aaa
fld
cdq
inc
movs
xchg
out
(bad)
fistp
mov
bound
in
or
and
and
push
dec
sbb
fild
push
adc
adc
into
pop
cmp
sahf
(bad)
aad
and
pop
jmp
mov
jb
leave
adc
stos
mov
jnp
int3
stc
jp
imul
or
xchg
jb
pop
push
popf
inc
add
ret
sub
enter
cmp
mov
push
pop
scas
dec
cmp
cmp
adc
(bad)
lods
ins
popa
inc
call
nop
mov
stos
mov
xchg
(bad)
out
mov
sbb
push
mov
stc
in
ret
hlt
push
stc
in
dec
fild
cmps
jp
ins
mov
inc
push
pop
in
push
outs
mov
repz
and
imul
ror
fsub
dec
cmp
mov
pushf
mov
data16
fld
mov
jmp
scas
out
dec
or
iret
mov
imul
nop
fist
add
and
xor
jnp
aad
or
xchg
push
popa
xchg
jmp
fadd
pop
lock
jae
leave
or
fiadd
jb
pop
ror
xor
mov
xlat
jnp
scas
or
xchg
xchg
or
bound
and
stos
mov
mov
xor
adc
fwait
aas
xchg
cdq
repz
and
mov
push
and
loopne
and
adc
mov
retf
pop
mov
push
jmp
push
loopne
loope
lock
int
sub
outs
add
scas
pop
inc
and
cmp
sub
push
inc
lods
retf
mov
mov
mov
sub
add
iret
int
push
aad
(bad)
push
mov
and
mov
push
adc
in
xor
sbb
mov
fistp
seta
test
xor
xor
fwait
popf
and
xor
loop
cld
add
in
ja
aad
aas
and
cmps
dec
push
movs
cdq
movs
fist
adc
or
xor
into
nop
xchg
sbb
and
pop
pop
aam
(bad)
jmp
mov
js
out
mov
jp
xor
mov
xor
jge
dec
cs
shl
jg
pop
ja
mov
sahf
inc
jmp
movs
add
pop
xchg
mov
jb
dec
in
inc
pop
mov
push
inc
ins
or
imul
iret
cwde
mov
pop
js
mov
mov
repz
movs
mov
arpl
int3
add
sbb
das
mov
push
leave
xor
mov
pop
mov
mov
sbb
popa
ficomp
pop
xchg
into
lock
aad
loopne
ror
sub
outs
pop
sbb
xor
mov
les
mov
call
sub
pop
fisttp
push
daa
rol
xor
stc
sbb
push
sbb
mov
push
jl
pop
mov
in
retf
mov
mov
sub
jae
enter
test
xor
inc
rcl
mov
add
les
call
lds
icebp
lahf
xchg
or
cli
aaa
add
out
sub
push
mov
imul
int3
fucomi
popa
jmp
mov
jnp
rcr
idiv
js
sbb
int3
ror
out
retf
add
pop
cmp
pop
lods
sbb
out
out
jp
jle
loop
jmp
nop
jecxz
or
pop
pusha
mov
lahf
jo
ds
(bad)
test
jg
dec
aaa
or
jmp
and
mov
ds
inc
test
lods
sub
dec
stos
xor
es
hlt
push
and
xchg
mov
out
in
rol
xor
mov
loop
shr
pop
dec
sub
test
mov
fld
jecxz
bnd
adc
dec
mov
movs
cmovbe
mov
inc
sbb
sbb
push
stos
clc
aam
enter
scas
xor
or
mov
push
pop
xor
jl
sbb
and
loopne
(bad)
jbe
out
data16
retf
jle
stc
sbb
or
fwait
xor
mov
push
cli
(bad)
pop
dec
mov
dec
psraw
stos
pop
jno
jae
mov
mov
cwde
repnz
mov
mov
loopne
dec
fcom
mov
jo
je
in
out
dec
cdq
and
ret
jno
jecxz
ret
sub
ret
pop
and
xchg
jae
dec
adc
out
(bad)
repz
imul
mul
pop
aas
add
mov
mov
fsubp
push
movs
pop
sahf
mov
inc
pop
outs
sbb
dec
jmp
mov
mov
pop
ins
lds
jae
adc
ds
lods
push
mov
push
xor
push
cmc
loope
ss
fscale
das
iret
ror
inc
sub
cmp
adc
adc
test
sub
cli
movs
js
add
add
das
cld
fcomp
aas
neg
or
daa
cdq
scas
mov
cmp
lods
and
frstor
dec
jmp
fisttp
xor
fisttp
dec
stos
add
les
les
sbb
movs
push
out
ins
pop
fldcw
xchg
vorps
pop
int
ja
push
das
mov
mov
sbb
psubsb
push
inc
push
mov
dec
inc
ja
es
outs
dec
inc
loopne
and
les
mov
dec
or
xchg
inc
and
ja
(bad)
cmp
and
nop
jmp
pop
push
inc
or
stc
mov
jle
jg
mov
and
inc
adc
pop
test
jno
(bad)
clc
sub
outs
int3
cmp
loopne
lds
push
jle
sahf
or
in
imul
jp
pop
into
xchg
stc
(bad)
arpl
mov
addr16
mov
adc
out
in
mov
inc
imul
cmc
mov
in
dec
fcomip
loope
mov
xchg
shl
mov
shr
sbb
xchg
jmp
js
cmp
inc
adc
cmp
mov
(bad)
(bad)
mov
bound
mov
lahf
sub
cmp
pop
stc
jb
cdq
xchg
and
dec
push
sub
ss
dec
inc
push
or
scas
jg
jecxz
xchg
cmc
jecxz
lahf
lahf
and
sbb
or
dec
out
sbb
mov
ss
push
and
stc
mov
lahf
rcl
mov
mov
inc
gs
shl
jae
stos
movs
mov
arpl
cmps
ret
(bad)
and
xchg
mov
leave
push
rcr
cmp
xor
mov
xor
cmps
jno
mov
bound
int3
pusha
data16
sbb
into
fistp
jle
mov
test
outs
cld
adc
fcmovbe
stc
sbb
sbb
jbe
sbb
div
xor
pop
push
jle
jb
in
cmp
push
jle
ret
int
cld
fs
cmp
pop
xchg
adc
cmp
push
fist
dec
add
fcomp
loopne
cmps
sti
out
pop
push
adc
dec
xor
leave
popf
es
or
pop
bound
into
scas
stos
jo
mov
xchg
cmp
out
or
enter
inc
xor
mov
inc
pop
mov
rcr
add
fidivr
scas
inc
push
fs
call
cli
or
imul
lds
into
jmp
fidiv
shr
add
push
nop
test
mov
cld
mov
add
test
repnz
jg
xchg
imul
adc
push
es
xchg
adc
mov
xor
mov
or
sti
sbb
jnp
iret
test
test
in
out
loope
adc
mov
call
mov
push
test
mov
mov
add
movs
loope
test
mov
inc
xchg
out
dec
sub
add
fild
mov
cmp
inc
push
je
xor
adc
mov
jo
add
das
popa
push
sbb
jl
adc
xor
mov
int3
xchg
aaa
xor
sahf
imul
shl
push
fiadd
mov
mov
hlt
mov
cld
jp
out
and
stos
je
pop
pop
shl
scas
sbb
leave
sar
mov
jecxz
push
mov
inc
pop
imul
inc
cmc
push
sub
and
xor
loope
sbb
ret
sahf
push
pushf
call
and
xchg
inc
mov
loopne
dec
add
lea
cmp
pop
xor
mov
pushf
test
mov
pop
js
into
les
in
push
lea
loopne
es
pushf
loop
cmp
pop
cmp
push
sbb
fistp
push
movs
push
stc
stc
in
(bad)
jp
push
mov
ror
adc
loope
lock
xor
hlt
clc
jmp
outs
mov
pop
stc
retf
xor
cmp
dec
call
inc
repnz
inc
jg
sub
cmp
movs
pop
add
shr
xchg
in
test
nop
inc
fwait
cld
scas
adc
(bad)
in
rcr
loopne
in
dec
ds
outs
leave
loop
cmp
cmp
mov
jp
pop
add
mov
ss
xor
lods
sbb
pop
aad
call
hlt
dec
icebp
cli
sbb
push
cmc
sbb
aas
aas
test
add
or
int
adc
pop
cmc
ins
cmp
lock
mov
ficom
cmps
movs
cmps
xchg
(bad)
dec
mov
push
(bad)
out
adc
jbe
(bad)
pop
adc
inc
lods
jmp
daa
ret
js
mov
and
les
jp
outs
loopne
lods
or
mov
mov
dec
iret
arpl
popa
shr
nop
dec
fdiv
pop
test
adc
mov
iret
std
jb
cmp
(bad)
xchg
push
int
sbb
ins
sub
sbb
hlt
mov
or
daa
adc
dec
std
mov
cmps
nop
mov
push
xor
ins
sar
inc
add
add
retf
jge
stos
pop
iret
sub
into
mov
out
and
sub
dec
pop
adc
xor
int3
sbb
clc
add
daa
mov
jno
sti
dec
dec
xchg
push
mov
aas
pop
mov
xor
(bad)
js
mov
ja
rol
sbb
repnz
and
add
jmp
scas
jno
fcomp
dec
jle
push
jle
stc
sbb
mov
dec
das
lods
repz
in
(bad)
test
jb
push
sub
push
sbb
cli
push
aam
cmp
stos
mov
pop
mov
mov
sbb
bound
test
test
mov
rol
(bad)
in
xchg
lahf
pop
popa
stc
push
cmps
xchg
cmp
lea
push
out
enter
ret
mov
js
retf
jns
inc
loop
sub
sbb
sbb
scas
pusha
popa
xchg
inc
imul
jl
sbb
mov
cmp
fild
sahf
cmovl
sub
daa
movs
dec
or
add
call
in
scas
cmps
jbe
xchg
jge
mov
push
cmc
jae
mov
rcl
fld
sub
outs
mov
sub
xlat
je
add
mov
loope
je
rcr
call
add
ins
(bad)
pop
pop
push
xchg
shr
imul
out
and
push
cmps
ret
mov
mov
sahf
adc
in
lock
nop
test
cmp
fld
pop
paddusw
mov
test
loop
cmps
sbb
and
popa
or
lock
dec
sub
xchg
mov
mov
clc
int
les
ja
mov
popf
jb
inc
out
jg
out
jns
sti
in
pop
out
loopne
push
pusha
sbb
fsubr
push
and
and
aam
lds
push
ds
add
or
jnp
repnz
les
push
mov
pop
test
jno
xchg
add
iret
cmp
jns
ja
and
bound
popa
add
mov
sbb
push
sub
fistp
jmp
jg
dec
pop
xor
push
fstp
xor
sub
adc
loop
sub
and
cmp
pop
clc
sub
push
pop
add
in
(bad)
popf
pop
inc
lock
mov
add
pusha
aam
lods
daa
cmps
pop
fdiv
dec
dec
(bad)
aam
pop
mov
or
mov
sbb
mov
mov
mov
push
(bad)
fistp
fldcw
xor
(bad)
imul
pop
(bad)
fiadd
lds
xor
sbb
add
cmps
sub
aam
mov
div
xchg
aaa
mov
xchg
enter
inc
adc
scas
mov
je
dec
repz
or
lahf
ret
(bad)
out
pushf
mov
sub
cmp
inc
mov
jmp
mov
nop
sbb
adc
std
push
(bad)
xor
aad
adc
cs
sbb
adc
fldenv
fstp
rol
jg
sub
scas
push
push
das
fadd
mov
inc
push
lea
xchg
mov
mov
enter
xchg
add
cmp
cmc
pop
sub
mov
push
sbb
test
cmp
xchg
mov
das
sub
(bad)
pop
pop
fcom
jo
sbb
rcr
aas
push
add
imul
je
shl
dec
enter
mov
mov
mov
inc
adc
cmps
fwait
mov
stc
cmps
dec
iret
test
and
jl
dec
inc
cdq
dec
fcom
cmps
rcl
(bad)
icebp
leave
loopne
in
imul
or
jae
mov
aaa
push
mov
shr
scas
xor
sbb
scas
cmc
mov
arpl
iret
inc
clc
daa
push
sahf
add
adc
test
pop
pop
mov
int
clc
in
add
dec
imul
xor
fs
scas
or
in
xlat
test
jg
or
and
movs
mov
jo
aam
shl
xchg
je
out
sbb
ss
mov
mov
xor
test
cmp
jo
push
retf
cmps
push
jo
xchg
inc
loope
aam
or
sub
test
push
test
mov
test
imul
xor
mov
xor
adc
test
dec
outs
enter
std
xor
imul
je
sub
sbb
sbb
adc
and
mov
and
cmp
pop
sub
mov
sub
inc
cmps
int
enter
ret
xchg
inc
pop
vprotd
call
call
inc
push
psubsw
mov
jl
stc
lahf
and
xchg
gs
adc
(bad)
jg
inc
jb
cwde
mov
mov
inc
daa
add
stc
cmp
and
or
jae
pop
jno
daa
out
loope
(bad)
ins
push
int
add
pop
or
pop
dec
les
inc
int3
xchg
mov
and
call
jne
push
rol
es
jl
js
sahf
gs
enter
mov
ins
push
imul
mov
sbb
jbe
in
dec
xchg
in
imul
adc
ja
nop
cmp
loopne
mov
adc
(bad)
in
jnp
push
cmps
xchg
push
sti
scas
and
and
sub
jge
xchg
retf
aas
sahf
xchg
int
push
mov
xor
repz
jne
call
adc
mov
cld
(bad)
mov
retf
outs
mov
xor
outs
in
ss
lock
ja
or
scas
adc
out
xchg
pop
repnz
ror
dec
pop
xchg
out
mov
ror
or
mov
sbb
or
retf
mov
jbe
test
or
(bad)
sti
outs
pop
les
cmp
pop
jecxz
jns
push
add
in
or
call
pop
mov
mov
in
fsubp
data16
(bad)
fidivr
cwde
mov
test
jge
arpl
fimul
ins
popf
jnp
xor
cmp
cmps
out
and
sub
xchg
add
es
(bad)
lods
(bad)
fimul
test
sub
stos
dec
movzx
iret
adc
test
setle
ret
sub
push
les
sub
cmp
jl
neg
in
ficomp
mov
xchg
pop
xchg
or
ins
ud0
aad
repz
fidiv
sbb
hlt
mov
shr
call
outs
rcr
sbb
es
xchg
cmc
pop
call
shr
lock
and
xor
inc
add
enter
cmc
xor
xchg
out
fnclex
inc
lock
inc
mov
push
pushf
add
and
std
mov
mov
adc
stos
xor
xor
mov
mov
stc
rcl
mov
(bad)
stos
jb
jne
sub
scas
dec
dec
mov
xor
mov
mov
mov
add
rol
sbb
xor
hlt
les
inc
inc
cdq
adc
xor
add
xor
lea
out
aad
mov
cmp
mov
mov
dec
int
js
xor
shl
mov
nop
sahf
mov
xchg
mov
jbe
jmp
dec
xchg
sti
mov
xchg
mov
sar
adc
push
xchg
sub
int
sub
loopne
fwait
push
mov
inc
cmp
out
repnz
mov
adc
xor
(bad)
mov
sbb
xchg
mov
mov
sahf
hlt
mov
pop
inc
ficom
adc
adc
popa
jecxz
pop
in
jo
pushf
mov
mov
fimul
pop
xchg
nop
cmps
and
imul
mov
into
cmp
je
shr
sub
test
jp
enter
pop
mov
test
out
imul
jbe
xchg
retf
into
popf
and
sbb
cmp
int3
jmp
(bad)
js
aam
and
mov
xor
inc
mov
stos
sbb
sub
inc
adc
aam
into
mov
(bad)
and
inc
mov
fstp
call
mov
in
aad
jno
cmp
push
dec
add
push
stos
mov
mov
jb
xchg
movs
and
add
fsin
(bad)
es
adc
loopne
ja
mov
out
push
cmp
pop
mov
sub
mov
dec
sub
mov
jae
pop
movs
jmp
or
cld
mov
sbb
ds
pop
sti
js
addr16
sub
mov
cmp
xor
in
dec
adc
imul
xlat
inc
mov
jge
loope
push
pop
inc
xchg
pop
clc
mov
inc
loop
adc
mov
jl
dec
bound
in
int3
pop
fxam
sub
loope
int3
xor
shl
scas
shl
dec
(bad)
push
call
xor
mov
jle
mov
sub
sbb
iret
xchg
cdq
dec
pusha
adc
cmc
jge
dec
adc
je
xchg
ds
enter
xchg
mov
jg
cmp
mov
cmp
nop
rol
dec
sahf
add
out
(bad)
and
rcr
xchg
xchg
or
mov
in
or
add
dec
dec
xor
test
sub
stos
inc
mov
or
daa
mov
outs
xor
jne
jb
lods
or
sub
test
(bad)
mov
in
push
sbb
mov
test
jmp
push
mov
mov
mov
jnp
test
mov
push
cmp
xchg
dec
lods
(bad)
mov
out
xor
or
(bad)
out
shl
mov
outs
cmp
adc
movs
gs
cmp
lea
mov
shl
je
shl
retf
or
into
jmp
sub
into
bound
scas
inc
aad
ror
push
nop
or
(bad)
jg
inc
stc
cmp
dec
into
xlat
movs
jno
loopne
in
sub
int3
xchg
cmp
cmc
daa
out
stos
in
pop
mul
or
sub
mov
xchg
mov
stc
push
adc
adc
jg
repnz
inc
fcmovne
inc
push
inc
rcl
sahf
cli
mov
sub
bound
stos
loopne
movs
ror
in
sbb
dec
test
ins
jg
int
hlt
push
sti
fadd
cld
int3
xor
mov
adc
outs
out
jne
pop
mov
inc
jl
mov
cdq
mov
jne
lea
outs
es
jmp
cdq
xchg
mov
and
lea
cmp
sub
pop
xchg
xor
mov
sub
divps
and
call
jb
out
jae
pop
gs
enter
loope
and
(bad)
and
arpl
(bad)
popf
fsubr
mov
mov
xor
lods
cmp
pop
sub
mov
mov
pop
mov
xchg
icebp
daa
xor
add
outs
call
lds
pop
adc
mov
jp
mov
sbb
(bad)
ds
push
clc
test
shr
rcl
and
jmp
pop
pushf
and
jnp
sbb
pusha
pushf
fisttp
dec
test
imul
dec
or
jnp
xchg
or
ss
pop
xor
mov
dec
and
push
in
xchg
scas
jb
outs
add
retf
repz
push
inc
mov
call
xor
and
cli
pop
daa
adc
std
cwde
stos
dec
jo
icebp
scas
test
add
int3
(bad)
cmp
lea
cwde
retf
or
test
in
stos
das
ret
jnp
or
fild
(bad)
nop
mov
xchg
and
inc
popf
xchg
inc
sbb
(bad)
icebp
iret
jb
jmp
or
repz
add
cs
dec
jmp
repz
ins
jne
mov
test
mov
fisttp
inc
sbb
pop
mov
mov
jl
es
ret
es
push
push
jmp
inc
and
push
int
js
and
mov
aas
mov
dec
sti
xchg
add
sbb
cmp
inc
repnz
push
jmp
call
jae
push
lea
loopne
je
out
mov
hlt
mov
sbb
(bad)
mov
xchg
std
retf
sahf
dec
inc
inc
test
js
mov
int3
push
and
loope
adc
lods
or
loope
popf
mov
leave
call
test
push
mov
stos
pop
push
(bad)
mov
addr16
(bad)
fnstenv
fadd
add
popf
cld
add
out
sub
mov
mov
pop
jne
jno
xor
push
clc
pop
inc
imul
add
in
or
dec
jle
popf
cmp
ret
cs
jmp
icebp
cmp
dec
pop
lea
xchg
hlt
test
sbb
or
hlt
loopne
scas
or
scas
sub
leave
scas
or
mov
sbb
imul
dec
fwait
xchg
std
mov
adc
ds
adc
mov
test
(bad)
addr16
enter
(bad)
popf
aaa
mov
cmp
inc
mov
scas
ins
pusha
pusha
add
xchg
xchg
adc
ret
mov
or
loop
xchg
jmp
nop
xchg
and
push
push
cmps
stos
jne
aas
or
jno
and
loop
outs
scas
cmp
icebp
cli
lods
ins
dec
jno
dec
cdq
jbe
push
mov
adc
inc
in
ja
dec
push
mov
mov
movs
dec
jne
mov
jo
add
les
das
das
mov
sub
push
fldenv
ja
add
dec
rep
rcl
cwde
mov
mov
xchg
adc
sbb
mov
test
cmps
push
pop
in
fwait
push
stc
out
fist
xor
shr
and
jae
mov
or
pop
mov
imul
and
xor
mov
push
sub
pop
mov
addr16
into
xchg
adc
jo
ss
retf
into
sub
dec
popf
ds
jo
jns
mov
ja
loope
xor
inc
popf
jle
ds
sub
pop
jg
outs
inc
cmp
or
jmp
retf
int3
sti
inc
jo
aad
fdivr
and
call
add
loop
aaa
jnp
pop
into
daa
dec
jns
cmp
int
dec
(bad)
jmp
push
sti
shr
jle
aam
or
cmp
mov
sbb
mov
retf
jg
das
dec
aam
sbb
mov
shl
jp
sub
xor
pop
and
mov
dec
movs
xchg
push
mov
jmp
repnz
mov
cli
stos
dec
daa
fabs
dec
stos
adc
xchg
fistp
add
xchg
jne
push
pushf
test
repz
pop
or
add
ja
jmp
dec
add
test
aas
mov
mov
and
pop
inc
jno
xchg
retf
cmp
adc
outs
stos
gs
xor
sbb
nop
push
add
aas
push
add
dec
lods
mov
mov
sub
jecxz
shr
dec
mov
mov
cmps
mov
mov
cmp
jl
mov
popf
adc
push
icebp
cmp
inc
bound
aam
xchg
mov
sub
in
mov
cwde
sbb
sbb
mov
imul
mov
jecxz
add
aaa
add
out
rcl
pop
jp
ret
or
mov
mov
push
ss
xor
pop
in
cli
fidiv
push
clc
inc
xchg
xor
inc
xchg
push
in
cli
dec
out
mov
xchg
sbb
(bad)
ret
mov
loope
adc
retf
mov
dec
lods
cmc
shr
add
cmp
xchg
push
daa
jmp
mov
pop
inc
adc
sub
test
xor
lea
icebp
movups
neg
rcl
jbe
cmps
out
ror
mov
add
in
mov
mov
inc
outs
inc
call
std
inc
scas
ja
sbb
aas
jae
add
test
cmp
ss
xchg
dec
stc
imul
rcl
push
jb
ret
push
dec
jnp
ret
outs
mov
pushf
lods
cmp
mov
mov
dec
jns
push
jecxz
cmp
cdq
call
repnz
jecxz
stc
lahf
(bad)
ss
aam
sbb
pop
popf
pop
fwait
add
push
jno
rcl
mov
(bad)
mov
rcr
cmp
fld
sub
in
jbe
iret
dec
and
cmp
mov
loop
dec
fadd
(bad)
loop
into
and
pop
jge
movs
frstor
cmps
and
int3
dec
rol
cmp
pop
and
jb
mov
push
fdiv
xor
not
mov
mov
loope
das
dec
xor
push
xor
push
xchg
push
xor
cwde
popf
iret
push
ret
xchg
icebp
cmp
out
or
add
mov
mov
lods
push
ds
inc
mov
mov
js
scas
jmp
invd
les
arpl
mov
jle
mov
and
je
jbe
shr
push
xor
cdq
stos
sub
pop
sti
clc
jbe
fstp
inc
jge
mov
mov
mov
sbb
repz
cmp
inc
xchg
imul
inc
cmp
jmp
std
and
scas
jge
add
loop
mov
push
fist
mov
adc
jne
push
inc
cmp
enter
fadd
retf
mov
add
mov
(bad)
jno
std
cs
imul
(bad)
imul
xchg
into
or
jmp
je
adc
mov
arpl
imul
mov
xor
stos
jne
inc
gs
or
jle
cmp
cld
add
mov
icebp
push
(bad)
sti
push
imul
push
enter
mov
sar
dec
dec
ror
dec
push
xlat
and
arpl
push
jmp
sbb
cmp
adc
mov
scas
xchg
fimul
xor
xchg
loop
mov
mov
or
jg
cmc
pop
mov
sub
xchg
xlat
or
push
stos
mov
mov
cmp
add
fwait
dec
jne
or
xor
mov
jp
lds
inc
or
loope
jp
dec
adc
dec
adc
xchg
sti
mov
adc
add
(bad)
add
rcl
mov
mov
(bad)
imul
ror
dec
sub
test
jns
inc
jno
in
in
push
les
jno
and
adc
sub
push
mov
dec
dec
out
dec
fadd
(bad)
dec
xor
rcl
or
out
jne
sahf
jmp
adc
pop
xor
mov
jge
repnz
test
sar
lods
(bad)
push
mov
jo
mov
retf
into
pop
mov
test
cmp
xchg
cmp
loop
loop
sub
pop
push
fldenv
cmp
dec
in
cmc
lds
lds
and
das
xor
inc
sar
xor
imul
ror
cs
push
xor
pop
and
push
sahf
adc
cmp
dec
xchg
std
retf
mov
stos
sbb
jge
jb
mov
ds
sub
mov
scas
cdq
jne
add
sbb
sbb
fsub
add
or
inc
fsub
sbb
mov
jmp
mov
imul
or
call
sbb
(bad)
mov
in
repz
in
or
loopne
ins
jl
or
xor
rcl
jp
aam
out
div
int3
dec
xor
mul
inc
addr16
cmps
js
mov
add
jg
mov
lods
pop
ins
mov
and
mov
push
mov
adc
test
cli
pop
dec
aam
loope
xlat
push
(bad)
in
jecxz
fbstp
mov
ret
xchg
push
inc
xchg
mov
or
jle
cdq
dec
mov
jmp
adc
cmc
add
and
adc
pop
mov
push
fdivp
(bad)
cmc
pop
xchg
pop
pop
add
stc
test
jecxz
(bad)
sahf
add
cli
push
add
popf
leave
(bad)
pop
add
add
and
push
or
mov
inc
test
lods
cmp
mov
xor
in
sub
movs
cmp
jmp
adc
fucomip
shr
fidivr
xor
fs
aam
mov
sbb
dec
dec
mov
sysret
dec
in
jl
mov
les
mov
push
inc
imul
xchg
movs
adc
sub
mov
xor
mov
imul
cmps
rcr
(bad)
inc
fs
rol
sar
clc
inc
dec
inc
test
popa
and
icebp
int3
mov
inc
call
arpl
pop
rcl
adc
add
lahf
je
dec
jmp
or
jne
shl
call
rol
movs
sub
pop
inc
imul
retf
loope
dec
xchg
pushf
sbb
stc
cmp
fwait
jo
mov
pushf
scas
sti
cdq
ret
sbb
dec
scas
mov
sbb
out
arpl
data16
cs
add
inc
jmp
mov
ja
in
sbb
jl
aas
imul
call
sub
jl
or
and
inc
dec
outs
fldcw
mov
mov
dec
sbb
pop
scas
rcr
ret
xor
loope
xchg
aam
stos
in
mov
popf
dec
push
push
rol
outs
addr16
sar
stc
mov
or
fcom
dec
mov
dec
xchg
jg
xor
rcr
fistp
mov
add
dec
and
psubb
daa
jno
ror
js
add
dec
popa
lods
ins
xor
stc
inc
(bad)
pop
sub
and
xchg
(bad)
xor
and
sbb
je
mov
sar
dec
jae
into
test
inc
int
add
jp
push
adc
ins
jle
cwde
rcr
fst
sub
mov
(bad)
repnz
and
and
iret
dec
iret
mov
mov
sub
sbb
jno
mov
fmul
xor
leave
push
stc
push
(bad)
fldpi
movs
lock
(bad)
retf
xchg
mov
mov
xor
xchg
stos
push
sub
popf
xchg
or
cdq
cmps
dec
adc
es
cmp
mov
js
cli
in
test
and
test
pop
stc
sbb
pop
mov
fisubr
sar
mov
das
mov
adc
push
push
sbb
xchg
adc
adc
jns
rcl
in
jmp
aas
sahf
mov
add
mov
in
sub
inc
push
jl
cmps
gs
xor
das
adc
xor
std
test
jmp
ins
xor
push
ror
xchg
mov
and
es
rcl
mov
in
call
pop
inc
pusha
loop
push
mov
cdq
call
sub
cwde
ror
dec
or
xchg
push
push
fnstcw
sbb
adc
mov
cwde
fdiv
or
clc
loope
enter
lahf
les
add
mov
sub
add
jns
fldenv
cmps
call
gs
and
or
and
scas
mov
addr16
std
les
aas
shr
aam
pop
ret
fiadd
test
outs
sbb
ret
outs
mov
xchg
leave
adc
idiv
xlat
dec
movs
rcl
mov
mov
pop
cmc
test
retf
outs
outs
or
adc
sub
and
stos
(bad)
or
adc
mov
or
inc
sub
fstp
xchg
push
fwait
(bad)
cmp
lods
loope
inc
cs
movs
and
push
mov
pop
test
and
mov
push
ficomp
mov
mov
stos
add
jg
fbstp
add
stos
mov
call
out
add
loopne
or
cmc
push
addr16
inc
dec
mov
xchg
nop
aaa
mov
pop
ldmxcsr
and
add
out
neg
xor
test
cmc
jle
jecxz
ss
inc
scas
js
xlat
push
cmc
inc
sbb
mov
mov
sbb
lahf
les
adc
mov
repnz
rep
push
mov
mov
dec
add
and
dec
je
xchg
jge
fistp
push
mov
or
adc
push
xchg
xchg
in
sub
cmp
cmp
(bad)
stc
cwde
mov
jle
jo
inc
mov
cmp
cmps
push
mov
loop
mov
test
test
sbb
loope
mov
cld
sbb
outs
sub
mov
imul
inc
dec
mov
adc
mul
mov
and
pop
cmp
cmp
and
loop
pushf
dec
movsx
mov
retf
sub
shr
or
inc
sahf
stc
inc
add
inc
in
or
iret
inc
fxam
mov
mov
leave
rcr
sbb
adc
cwde
xchg
ja
cmp
cmp
push
into
bound
jbe
inc
jmp
mov
xor
mov
test
xor
mov
cmp
aaa
jne
mov
cmps
es
inc
inc
fcomp
scas
jb
dec
ja
cld
lock
mov
and
fstp
adc
push
mov
hlt
inc
pop
data16
(bad)
cmp
xchg
adc
clc
mov
pop
outs
scas
lock
mov
inc
(bad)
and
scas
pand
mov
mov
loop
inc
mov
repz
jb
in
pop
cmps
mov
inc
jle
scas
jae
jae
fldenv
repz
cmp
rcr
mov
mov
dec
adc
sbb
dec
ds
iret
les
inc
inc
in
xor
sbb
mov
dec
arpl
fs
movs
std
adc
cmp
xchg
sub
and
movs
dec
mov
test
adc
sbb
je
mov
enter
xchg
jnp
sahf
in
lahf
inc
or
pop
test
mov
retf
sub
ins
or
xchg
ja
rsm
ror
add
pop
popa
icebp
gs
movs
lea
loope
add
(bad)
scas
jne
xchg
ret
inc
ror
xchg
adc
adc
pop
sbb
cli
(bad)
pop
cmp
jmp
outs
jle
mov
and
cmp
mov
mov
adc
movs
and
jecxz
ds
bnd
pop
xchg
jne
ror
enter
rcr
adc
pop
adc
mov
xchg
sbb
dec
adc
shr
mov
(bad)
xchg
mov
mov
enter
cmp
xor
sub
(bad)
mov
mov
loope
in
push
aam
mov
imul
add
pop
push
shr
pop
rcl
stos
cmc
xor
ins
sahf
leave
inc
lsl
in
push
xor
dec
inc
xchg
jns
fwait
aas
jne
add
sub
push
div
xor
mov
mov
cmc
jmp
retf
add
mov
push
call
and
js
cwde
jne
inc
mov
(bad)
(bad)
cld
sub
mov
dec
inc
add
mov
(bad)
xchg
cmp
mov
pop
adc
mov
inc
add
rol
inc
jg
mov
xor
xor
jecxz
jg
(bad)
das
mov
pop
sub
sbb
sub
mov
sbb
mov
push
imul
sub
rcr
cld
cmp
sub
jno
adc
dec
inc
test
icebp
mov
mov
(bad)
jmp
dec
in
push
je
add
inc
push
mov
xchg
jmp
std
enter
lods
loop
cdq
cmp
dec
adc
adc
cmps
add
xchg
cmp
xor
mov
xchg
push
sbb
test
ror
xor
test
mov
xchg
pop
std
cs
jbe
sub
sbb
pop
test
mov
jmp
jb
addr16
mov
loope
xchg
cwde
add
mov
xor
fimul
div
xlat
and
cdq
xchg
add
test
push
sbb
push
aas
into
mov
xchg
repz
(bad)
push
jl
push
adc
pop
cmp
ja
movs
test
scas
push
xor
add
or
lods
pop
pop
xor
pop
sbb
sahf
mov
pop
retf
stc
xor
clc
and
mov
sbb
or
(bad)
je
sub
pop
mov
jbe
pusha
ss
sub
stos
stos
mov
test
and
(bad)
inc
pop
paddd
lock
(bad)
bound
dec
dec
cmp
and
push
inc
push
addr16
jb
dec
scas
clc
cdq
jo
fiadd
cs
(bad)
jnp
cmps
aam
ins
mov
xor
nop
pop
in
dec
jmp
inc
fcmovne
or
adc
mov
or
and
pop
bound
aam
test
es
xchg
sbb
jl
sub
push
pop
sub
or
cmc
shl
add
mov
and
jb
adc
(bad)
jb
add
mov
iret
cmps
push
lods
loope
mov
or
imul
or
imul
(bad)
aam
pop
dec
xor
out
adc
in
cdq
lock
les
sbb
scas
enter
and
mov
fsubr
out
mov
jg
ss
inc
daa
add
pop
in
push
jecxz
sub
sub
and
jb
xor
imul
bound
add
mov
icebp
adc
push
fucom
ficom
xchg
sar
movs
mov
in
data16
shl
(bad)
pop
mov
add
mov
add
adc
pushf
mov
test
xchg
outs
xchg
xor
std
mov
addr16
adc
sub
das
xor
rcl
lock
ficom
add
iret
retf
imul
call
stos
lods
jns
sub
push
lock
sub
sahf
sub
dec
les
loop
bound
lahf
add
out
xchg
or
fs
movs
cld
test
(bad)
div
sub
add
bound
rcl
mov
mov
ja
add
dec
dec
mov
leave
cli
cmp
mov
sti
cmps
cmp
out
lods
mov
dec
into
add
push
hlt
lock
jecxz
ret
in
jbe
stos
ins
(bad)
xlat
shl
into
mov
jg
pusha
cmp
sub
mov
call
aam
jbe
in
(bad)
jmp
jle
or
mov
push
out
jle
xchg
(bad)
ret
pop
mov
dec
pop
retf
cs
pop
add
rol
push
push
push
leave
mov
pop
mov
ret
adc
sbb
stos
xor
xchg
xor
sbb
push
imul
mov
dec
fdiv
fsubr
fist
or
xchg
sub
nop
add
and
(bad)
sar
dec
neg
push
add
or
or
add
(bad)
std
das
call
ds
aas
jl
mov
sahf
icebp
sub
stos
cmp
add
inc
aam
les
mov
xor
fisttp
dec
sahf
ins
push
xchg
out
int
js
dec
cmp
test
xchg
add
rcr
push
leave
cmp
pop
sbb
cmp
mov
dec
shl
sub
mov
bound
imul
lds
lea
sbb
mov
test
repz
jp
pushf
push
mov
mov
pop
pushf
cmp
and
stos
jbe
adc
repnz
mov
mov
out
push
jb
cmp
xchg
mov
sub
in
xor
pop
dec
xchg
out
jmp
fld
xchg
sbb
cdq
xchg
add
out
xor
mov
adc
push
mov
push
je
repnz
iret
fstp
lock
fcomi
cmc
je
jge
jl
mov
add
loop
mov
nop
jmp
lock
xor
ret
aaa
push
ja
aas
out
neg
add
in
cmp
push
mov
sbb
mov
jmp
dec
mov
dec
and
and
adc
mov
nop
aam
xchg
sbb
pop
repnz
jns
mov
and
inc
add
int
pop
(bad)
std
popa
xor
aaa
aam
sub
pop
inc
stos
or
rcr
sbb
push
jg
scas
adc
mov
mov
jae
rol
pusha
arpl
test
movs
test
cmc
jecxz
mov
lahf
ds
test
aas
xor
mov
lahf
nop
or
retf
push
adc
mov
push
(bad)
lock
inc
xor
dec
cmp
aaa
push
jbe
xchg
jl
jmp
pop
and
inc
fdivr
fisttp
xor
add
cwde
arpl
jmp
loop
fwait
js
cmc
test
lods
ins
inc
xchg
sub
mov
popa
cmp
inc
jmp
push
add
jno
pop
xor
out
sar
adc
jae
popa
test
xchg
das
mov
sbb
inc
out
pop
mov
and
std
mov
jp
out
ins
dec
mov
stos
lods
retf
xchg
or
mov
inc
scas
mov
popa
gs
arpl
pop
fidiv
pop
imul
int
call
loopne
xor
movs
cmps
push
add
jecxz
adc
inc
jecxz
jmp
aam
xchg
(bad)
fs
test
imul
push
mov
aaa
inc
xchg
repz
arpl
ret
test
popa
test
inc
(bad)
fild
call
ficom
mov
arpl
out
jnp
jl
icebp
xor
out
data16
mov
fisttp
mov
mov
sub
imul
scas
pushf
mov
out
jne
pop
sbb
dec
aas
jbe
outs
mov
adc
push
add
push
pop
dec
int3
(bad)
sbb
cmp
mov
push
jl
clc
and
or
sbb
ins
jp
xchg
add
pop
icebp
in
cmp
inc
xor
xchg
cmp
js
ret
in
pop
cdq
rcr
inc
rcr
push
paddusb
les
jecxz
cld
stc
add
and
mov
inc
shl
and
push
jmp
je
jecxz
(bad)
and
(bad)
dec
in
inc
es
push
adc
cld
inc
shl
inc
mov
(bad)
data16
pop
fld
test
xor
je
xor
repnz
outs
scas
jmp
fld1
inc
repz
xchg
xchg
jg
pop
adc
xchg
inc
xor
mov
cmp
ja
out
push
stos
mov
xchg
xchg
adc
out
jns
mov
out
inc
loopne
add
add
in
xor
and
sbb
stos
xchg
jl
cli
pop
xor
dec
pop
outs
dec
leave
pop
retf
push
jae
rcl
cld
jmp
ror
jbe
int3
and
imul
adc
mov
ret
jp
add
pop
int3
inc
fcom
inc
or
inc
fadd
(bad)
in
cli
or
scas
push
mov
pop
loop
lea
mov
imul
adc
cmp
daa
leave
dec
add
sbb
stos
mov
dec
sbb
int3
rol
adc
sbb
cdq
cmp
stos
fiadd
cmps
gs
sbb
inc
call
mov
fiadd
or
sbb
ins
or
xchg
or
xchg
cmc
xchg
leave
scas
push
nop
in
jge
mov
push
nop
into
push
inc
cmp
jmp
or
pop
jns
mov
cmps
xchg
fnstsw
test
pusha
arpl
les
push
dec
cmp
fst
mov
push
jbe
fisubr
hlt
pusha
sbb
sub
stc
add
jp
imul
out
icebp
dec
mov
lahf
call
popf
dec
sub
push
shl
pop
jl
lods
mov
bound
psubq
inc
int
into
das
cmp
jae
fnstcw
(bad)
mov
sub
outs
sti
sub
mov
scas
mov
jns
stos
inc
dec
or
cmps
stos
sub
mov
mov
xchg
jmp
and
jb
mov
inc
push
fadd
cmc
push
pop
mov
push
pop
pop
sbb
and
in
push
mov
retf
push
sub
and
aas
xchg
int
test
inc
sbb
icebp
mov
jbe
test
pop
jle
jmp
(bad)
mov
sub
add
xor
aas
add
jno
pop
xor
mov
out
mov
push
repz
sbb
dec
pushf
daa
shl
bound
das
jecxz
mov
int3
(bad)
push
push
or
sti
xrelease
xchg
add
sub
and
cmp
pop
mov
in
mov
mov
jno
dec
xor
sub
xchg
repnz
pop
pop
shl
xchg
stos
and
lahf
pop
dec
ds
mov
mov
mov
movs
outs
push
jecxz
xchg
imul
es
mov
jle
ins
push
scas
dec
out
in
hlt
and
call
int
hlt
cmp
jae
call
push
cmps
inc
lahf
ss
xchg
ins
inc
xor
retf
and
and
das
shl
jns
shl
cli
xor
ret
push
loope
xor
pop
jmp
inc
fwait
adc
popa
int
inc
dec
(bad)
mov
rcl
mov
mov
hlt
int
scas
pop
ja
add
push
js
(bad)
dec
or
cwde
sahf
xchg
(bad)
hlt
repz
loopne
nop
outs
pop
pop
stos
cwde
js
data16
scas
xchg
in
and
mov
add
pop
adc
setp
retf
xchg
and
jmp
xor
loope
xchg
dec
js
mov
jge
icebp
mov
clc
sbb
arpl
mov
push
gs
in
sbb
retf
or
push
(bad)
aam
push
call
lea
and
xlat
xchg
ds
idiv
mov
dec
enter
or
jecxz
mov
retf
pop
sbb
add
cli
retf
sub
scas
add
lods
rol
stos
cmps
cwde
je
mov
aaa
hlt
inc
rcr
mov
and
loopne
xchg
je
mov
xchg
push
mov
fisubr
in
jmp
lods
stos
push
cli
jae
or
inc
test
mov
mov
lds
gs
xchg
push
sub
fs
xchg
mov
mov
cld
sbb
sbb
sbb
jae
(bad)
clc
sar
fdiv
bound
into
jge
mov
xchg
(bad)
xor
sub
inc
pop
stos
nop
push
cmps
and
out
mov
das
ret
out
mov
dec
xor
fild
fcomp
bnd
inc
sti
int
add
sar
fadd
enter
out
pop
in
mov
xor
pop
and
loope
sub
pop
ss
lea
xchg
push
icebp
add
ret
cli
daa
aad
jno
mov
mov
call
stos
iret
push
jp
cmp
xor
aad
adc
pop
loop
xor
xor
dec
or
jo
inc
xchg
int
jae
mov
mov
test
add
pop
xchg
rol
or
aaa
mov
repz
dec
mov
loope
or
mov
(bad)
fnstsw
xor
mov
xor
sbb
mov
popf
(bad)
and
aad
xor
pop
out
add
es
ror
pop
push
jb
push
mov
and
jnp
jnp
xor
fimul
mov
adc
cmp
xchg
xor
stos
adc
push
leave
dec
adc
pop
std
lds
ja
dec
sbb
or
mov
or
cmp
inc
ret
inc
pop
dec
dec
add
cmp
push
mov
and
(bad)
daa
mov
adc
dec
repz
aam
jecxz
repz
stc
xlat
sbb
mov
cmp
or
cs
jnp
inc
(bad)
outs
pop
sti
push
xor
les
jmp
xlat
cmp
movs
pop
ficom
adc
dec
sbb
sub
cmps
nop
add
jb
cmp
mov
bound
fwait
mov
cmp
xor
dec
and
xor
repnz
mov
outs
shr
sbb
jbe
sbb
and
push
test
data16
aas
out
xlat
adc
cmps
inc
inc
lea
hlt
scas
or
outs
xor
jno
popa
jge
loopne
add
rol
push
mov
jb
(bad)
sar
ins
push
adc
into
cmp
int
addr16
jno
push
clc
imul
mov
mov
jge
mov
in
retf
rol
sub
xlat
sbb
mov
imul
hlt
int
or
xchg
adc
fs
stc
ret
mov
mov
mov
jae
xchg
jecxz
xchg
fst
or
in
cmovae
xor
pop
retf
jo
sbb
ror
mov
or
push
inc
loope
xor
mov
movhps
and
sqrtps
cmps
pushw
xchg
add
mov
aaa
pop
mov
and
sar
and
inc
pop
mov
cmp
dec
dec
es
cli
into
rol
or
inc
aam
bound
pop
push
push
out
lock
jp
dec
jmp
retf
dec
cmp
dec
adc
pop
jecxz
shr
inc
aam
repnz
sub
push
and
xchg
or
push
add
and
mov
mov
push
adc
xchg
jo
mov
ror
sbb
xor
shr
out
xchg
dec
lods
popa
pusha
jbe
add
add
test
xchg
pop
mov
adc
cmp
or
cmc
add
aad
sub
mov
adc
cs
xchg
cmps
and
mov
sti
jae
and
xchg
mov
clc
fs
fimul
push
adc
aam
fwait
test
clc
and
cmp
xor
es
mov
jmp
fild
mov
(bad)
out
lods
fadd
popf
inc
cmps
sti
popa
jns
jae
jnp
outs
cmp
push
cmp
sahf
inc
scas
ret
ret
pushf
loope
mov
add
fmul
mov
std
pop
cmp
mov
push
mov
mov
push
mov
cmp
push
cmps
jne
mov
dec
lock
dec
mov
pop
ss
loop
cmp
fwait
mov
cmp
jmp
adc
out
inc
rcl
sbb
sbb
inc
xor
out
mov
ret
xchg
fldcw
(bad)
clc
xor
xor
and
or
adc
mov
add
and
mov
js
pushf
test
inc
cmps
sbb
jmp
inc
jb
repnz
xchg
xchg
dec
test
cmps
add
dec
pop
or
cmp
sbb
(bad)
mov
cli
sub
test
push
add
mov
and
mov
dec
xchg
ror
in
ret
rcr
out
cli
into
xchg
fucomp
cmp
mov
rol
jg
inc
mov
movs
xchg
pop
add
jnp
dec
sub
mov
mov
push
aam
cmp
imul
aad
inc
cmp
jl
push
pop
push
mov
leave
daa
mov
cmp
xchg
les
retf
out
repnz
int3
sti
imul
sti
push
mov
test
ds
sbb
push
dec
out
add
fist
or
mov
sbb
aaa
and
xchg
cmps
cli
out
jnp
push
jae
pop
pop
(bad)
sbb
ja
mov
jnp
ins
push
and
xchg
jo
push
pop
fiadd
repnz
js
cld
packuswb
retf
fwait
sahf
or
pop
pop
(bad)
adc
xor
ret
aad
mov
or
mov
xor
xchg
mul
jmp
jne
or
ins
adc
imul
xor
dec
lock
mov
retf
push
in
les
push
cdq
aas
dec
push
rol
push
sub
sbb
xchg
ja
inc
or
mov
pushf
xor
out
sbb
sub
add
mov
or
pop
add
popa
arpl
ja
imul
popf
adc
sub
and
mov
cmp
pop
ret
xchg
inc
xchg
fnstsw
lods
mov
pusha
repz
mov
(bad)
add
stos
retf
movs
(bad)
fisub
jle
xchg
ret
lods
push
inc
jecxz
inc
lahf
sbb
dec
call
(bad)
ja
aam
or
popa
nop
sbb
mov
fsub
int3
sahf
(bad)
jp
stc
rcr
retf
inc
jle
sub
and
test
or
call
or
adc
popf
mov
xor
jle
sahf
inc
push
or
fdiv
jb
(bad)
cdq
pop
les
js
mov
aam
test
dec
pop
nop
dec
ja
push
mov
push
aad
cmc
nop
inc
je
mov
jmp
call
fcom
inc
sub
or
adc
mov
outs
and
sub
xchg
dec
out
jb
or
sbb
mov
sbb
pusha
enter
add
jp
push
hlt
xchg
cmp
popf
pop
test
sbb
(bad)
outs
iret
or
adc
jne
movs
nop
(bad)
ss
add
loope
mov
push
mov
jnp
mov
sbb
(bad)
cld
call
dec
xchg
clc
cdq
std
pop
aaa
dec
sub
cmc
dec
out
or
call
das
fadd
call
jo
dec
pusha
jg
inc
mov
ds
imul
(bad)
shr
jecxz
dec
dec
cmp
mov
fld
inc
add
test
ins
ds
mov
xchg
or
adc
xchg
stos
jmp
inc
int
outs
(bad)
clc
inc
sar
mov
xchg
adc
cmp
jle
pop
enter
fcomp
bound
pop
adc
nop
mov
ror
je
rol
jo
mov
ret
cmp
bound
mov
int
into
inc
xchg
mov
cmp
mov
pop
out
dec
nop
jmp
xchg
mov
pop
push
add
sar
es
std
dec
jmp
xchg
jecxz
div
mov
jmp
aas
inc
xor
pop
pop
ins
out
bswap
mov
xchg
mov
xchg
push
(bad)
cmp
movs
and
cmc
dec
sbb
dec
push
add
fldcw
ret
sbb
daa
mov
push
sub
gs
pop
xchg
mov
loopne
mov
push
mov
xor
and
inc
jge
js
dec
icebp
mov
inc
hlt
outs
ins
or
outs
aas
lds
or
cs
fsubr
or
xor
mov
cmp
and
or
sub
jge
not
cmc
(bad)
icebp
retf
add
mov
and
lods
les
mov
out
test
inc
gs
xor
leave
outs
repz
sub
xor
sahf
sbb
or
in
mov
aam
push
sbb
inc
(bad)
and
pushw
loope
sub
loopne
popa
xchg
iret
push
bound
jbe
lods
cmc
push
xchg
or
dec
jg
sub
pop
adc
int
ret
mov
push
sub
in
add
jo
lods
out
mov
xchg
(bad)
cmps
pusha
inc
xchg
xchg
in
cmps
adc
mov
ror
push
adc
xor
in
inc
sub
cli
dec
dec
mov
push
mov
pop
mov
sub
out
sahf
jp
out
outs
adc
add
int3
loope
outs
add
loop
cmp
mov
(bad)
icebp
sbb
call
sub
rcr
pop
ss
mov
mov
mov
repz
mov
out
and
test
mov
cmovb
adc
ret
sbb
lds
or
outs
test
and
mov
dec
jne
(bad)
jle
mov
das
cld
(bad)
sahf
repnz
retf
jg
stos
daa
dec
lods
sbb
add
jecxz
ins
nop
mov
in
ficomp
mov
cwde
mov
xor
adc
and
sbb
mov
pushf
dec
cmp
sbb
sbb
retf
cmp
xor
lods
pushf
jmp
push
data16
leave
inc
sbb
push
shl
pop
pop
mov
mov
mov
retf
cmps
arpl
bound
mov
test
test
mov
pop
cmp
or
daa
mov
ret
in
cmp
dec
cwd
mov
sahf
adc
mov
adc
mov
stos
mov
fnsave
lock
pop
sbb
stos
mov
aaa
adc
pop
push
xchg
int3
or
scas
pop
das
shl
mov
jg
adc
(bad)
std
popf
sub
pop
jle
pop
push
sbb
adc
xchg
dec
push
push
xor
sub
lock
push
mov
push
lahf
add
adc
lods
mov
sbb
or
js
out
fnstsw
fwait
xchg
lods
mov
dec
inc
sub
(bad)
std
sbb
call
jl
or
cmp
sahf
jecxz
xor
cmp
mov
push
iret
push
mov
xlat
xchg
fiadd
pop
cs
(bad)
cli
out
repz
lods
test
hlt
shl
pop
popa
scas
jb
nop
cmp
retf
jno
xchg
ss
xor
mov
fmul
xchg
or
adc
pop
scas
out
add
(bad)
out
adc
jmp
push
dec
(bad)
call
mov
xchg
cld
mov
dec
test
cdq
jl
fmul
jno
or
setge
and
into
popa
mov
lds
sbb
fs
ret
push
xchg
sbb
pop
sbb
retf
inc
inc
call
sbb
add
mov
std
mov
outs
and
inc
inc
ins
inc
sub
pop
xor
loope
push
adc
pop
hlt
std
sahf
shl
dec
stos
ficom
xor
inc
xchg
ficom
adc
mov
adc
dec
sti
pop
pusha
aaa
push
jno
and
enter
inc
mov
pusha
leave
fadd
pusha
stc
push
das
cli
xchg
ret
jg
fnsave
sbb
test
rcr
pushf
or
xor
rcl
fcom
push
aam
mov
les
sub
lahf
mov
sar
pop
xchg
dec
popf
lods
icebp
scas
je
pop
add
retf
or
sub
xor
or
push
ret
push
(bad)
sub
sub
mov
cwde
or
mov
ds
mov
call
lods
dec
adc
popa
loope
jbe
xor
dec
ins
sub
and
clc
mov
dec
ret
cmps
or
(bad)
mov
dec
xlat
in
pop
imul
(bad)
ficomp
jp
std
out
mov
sti
aad
adc
or
into
scas
inc
imul
add
jl
push
int3
pushf
arpl
fbld
(bad)
mov
enter
dec
in
sbb
ret
int3
xor
push
or
push
pushf
add
fdivp
sbb
sbb
sbb
jbe
add
pop
aad
call
add
or
or
iret
mov
push
or
mov
inc
add
sub
ret
push
jge
or
jns
push
xor
or
ins
push
std
adc
jle
mov
pop
cmps
pop
mov
pop
stos
push
cmp
adc
jo
cmps
pop
push
dec
ret
or
hlt
dec
jle
cld
dec
cmps
pop
cmp
cmp
enter
nop
and
shr
mov
inc
push
push
or
fs
js
pusha
adc
cdq
sar
dec
push
call
mov
jmp
mov
test
lahf
(bad)
shr
popf
pop
push
adc
xor
cmp
mov
lahf
daa
movs
aam
jp
lds
outs
sbb
dec
mov
stos
pop
push
jl
xchg
inc
call
pusha
dec
xor
inc
sahf
call
loopne
repnz
mov
inc
jns
iret
test
fdiv
mov
xchg
in
jg
pop
sbb
jmp
cmp
inc
dec
scas
push
push
sbb
xor
jge
sbb
sub
push
inc
sub
xchg
mov
cld
imul
jmp
mov
sub
mov
xlat
mov
call
mov
adc
dec
sahf
xchg
inc
inc
rol
fstp
ja
call
and
les
sbb
(bad)
dec
shr
rcr
sub
cmp
loope
mov
adc
cld
mov
retf
aaa
cli
xchg
shl
and
pop
rol
enter
xor
xchg
sub
inc
out
fimul
xchg
push
ds
mov
call
inc
cmp
jmp
cmp
cmp
mov
sub
fld
sub
cwde
sbb
pushf
xor
xchg
mov
mov
pop
mov
push
mov
hlt
aad
rcl
push
pushf
inc
test
add
pop
xchg
(bad)
jnp
inc
test
sbb
mov
pop
add
push
scas
(bad)
in
ins
adc
loop
iret
sub
cwde
mov
xor
inc
add
mov
mov
and
push
push
push
and
jmp
dec
int
pushf
(bad)
mov
pop
mov
retf
mov
cmc
jnp
mov
ror
in
rcr
enter
xchg
stos
mov
daa
(bad)
sar
aaa
(bad)
sbb
mov
mov
dec
retf
enter
jg
mov
addr16
mov
sbb
and
(bad)
jg
cmps
pushf
dec
addr16
and
pop
je
mov
outs
mov
lds
(bad)
clc
fs
aad
pop
(bad)
xchg
movs
mov
test
call
add
cmps
enter
add
jns
arpl
mov
xor
mov
pop
jno
outs
add
mov
cmp
mov
pushf
mov
sbb
jne
push
iret
mov
push
je
test
xor
sahf
mov
test
sar
mov
mov
das
dec
lea
test
inc
ins
push
in
ds
loop
lock
xchg
clc
scas
or
repz
inc
jo
lods
bound
dec
das
dec
icebp
mov
and
js
pop
sub
sbb
xchg
cld
sbb
or
(bad)
(bad)
jmp
gs
cs
retf
add
pop
mov
mov
setae
mov
mov
aad
jle
les
xlat
adc
mov
add
mov
mov
adc
ret
jmp
in
pop
loopne
dec
jno
fldenv
je
into
daa
rcr
(bad)
pop
int3
rcr
mov
add
aad
out
test
mov
es
outs
jnp
cmp
push
sub
pop
sti
lds
lock
add
bound
sbb
pop
scas
ficom
jno
dec
adc
and
xchg
aas
data16
scas
and
adc
pop
inc
fnstcw
ins
cmp
pop
ins
mov
dec
jp
cdq
scas
push
hlt
movs
inc
xlat
dec
dec
jno
jg
mov
aas
mov
pop
push
mov
pusha
sub
xor
aaa
(bad)
cmp
pop
cmp
std
mov
and
xor
mov
std
es
mov
les
cli
cwde
mov
mov
bound
jo
or
mov
cld
les
sar
call
ss
xchg
mov
call
sub
mov
jmp
xchg
sbb
fld
inc
push
xor
or
push
(bad)
jl
jle
jnp
out
add
dec
mov
(bad)
and
mov
adc
mov
push
gs
and
push
call
rol
je
call
(bad)
js
xor
mov
cmps
(bad)
lahf
rol
jno
(bad)
pop
pushf
xchg
aaa
into
imul
popa
nop
inc
gs
mov
push
jmp
test
ret
pop
jge
pop
pop
(bad)
sar
ja
scas
push
mov
sbb
sub
sbb
add
add
and
xchg
xor
adc
mov
in
push
xchg
jle
pop
test
div
(bad)
mov
push
jmp
popa
ficom
xchg
push
outs
lds
loop
sbb
cld
bound
jg
inc
jecxz
and
sar
scas
jg
sbb
adc
mov
scas
es
bound
sbb
pop
sub
sahf
popf
dec
stc
popf
out
jg
pop
cmp
fidivr
mov
jl
sub
mov
pop
mov
shl
inc
xor
jle
shl
cmp
je
bound
mov
mov
outs
jg
iret
pop
icebp
cmp
repnz
mov
mov
xchg
je
test
lods
data16
push
cdq
imul
mov
(bad)
adc
jp
dec
or
sub
mov
pop
mov
sbb
inc
hlt
dec
in
clc
mov
push
adc
in
add
out
jmp
and
dec
cmp
jnp
pushf
xchg
xor
aaa
mov
add
sub
ficomp
retf
inc
pop
xchg
mov
add
not
xchg
push
xchg
sbb
dec
paddw
retf
and
int3
das
and
mov
push
xor
sbb
fst
rol
or
xor
xor
mov
enter
pop
sub
jbe
aas
pushf
sar
xor
gs
inc
hlt
push
xchg
pop
adc
js
xchg
ins
push
loop
push
addr16
xchg
sub
pop
mov
jno
xchg
mov
cmp
sbb
sar
cmp
adc
lods
inc
and
mov
mov
popf
loopne
aam
mov
push
push
je
mov
out
shr
test
pop
pop
mov
xor
xchg
cmps
jmp
cmp
or
or
xor
or
xchg
in
ffreep
add
add
daa
leave
lea
or
jns
aas
jbe
push
loop
retf
test
mov
out
push
push
sub
xchg
aad
xchg
shl
mov
inc
add
sub
mov
nop
mov
xchg
sbb
outs
lods
fs
jmp
ret
adc
call
jns
(bad)
adc
push
sub
add
test
and
pop
adc
sub
cmp
dec
adc
das
xchg
mov
cmp
pop
ror
shr
push
mov
xor
cmp
jne
sbb
pop
mov
stos
xor
fcomp
mov
cdq
iret
fld
pop
iret
xchg
pop
cmp
dec
nop
xchg
and
cld
jp
nop
jle
mov
ins
mov
sub
fidiv
xlat
jne
loope
out
mov
sub
push
xchg
lahf
(bad)
fmul
cmp
(bad)
mov
inc
push
cld
dec
inc
(bad)
pop
or
push
jns
adc
sbb
and
add
retf
push
mov
aam
mov
loope
jmp
mov
hlt
xlat
sub
inc
xor
mov
jne
mov
mov
or
push
push
icebp
test
cli
into
cmps
mov
xchg
mov
adc
(bad)
cld
in
scas
shl
repz
xchg
sub
leave
mov
jl
mov
mov
fwait
ins
loopne
lods
cwde
xchg
aas
int3
out
std
aam
lea
emms
dec
jnp
adc
mov
mov
cli
daa
pop
stos
mov
push
scas
fwait
out
cmps
call
jne
jno
daa
sub
xchg
mov
iret
jae
push
sub
div
enter
add
pushf
lea
mov
add
mov
xlat
mov
pusha
jmp
inc
sti
gs
sub
push
imul
mov
jg
shr
imul
sbb
dec
cmp
xchg
and
sar
sbb
xlat
das
test
lods
js
inc
cmps
aaa
or
push
jae
cvtdq2ps
stos
nop
leave
xlat
jle
loopne
into
jmp
pop
fild
pop
fisubr
out
mov
cmp
dec
xor
or
ds
in
(bad)
adc
es
xchg
push
imul
cmp
push
sbb
inc
nop
add
cmc
enter
adc
stos
(bad)
out
sub
sbb
jmp
jmp
pop
call
movs
sbb
sbb
inc
lahf
inc
sub
xor
cmp
imul
push
(bad)
out
xchg
sbb
and
fs
lds
mov
fild
dec
pop
retf
lock
dec
movs
mov
push
ret
movs
aam
pop
lea
mov
call
in
call
in
pop
fimul
mov
inc
cmp
fnsetpm(287
in
mov
mov
fucomp
xchg
xor
neg
mov
call
cmps
mov
imul
push
aas
and
xchg
(bad)
cmp
jge
inc
(bad)
addr16
fcmove
retf
pop
cmps
(bad)
lds
scas
int
popa
mov
push
das
xchg
mov
add
jae
in
pushf
add
mov
aaa
(bad)
mov
or
mov
xlat
shl
jno
mov
sub
loop
pop
ss
rol
or
jns
cld
sbb
out
or
mov
pop
xor
cmp
and
add
dec
adc
addr16
nop
add
lds
shr
lahf
pcmpgtb
addr16
pop
push
mov
push
pop
out
(bad)
xchg
xor
outs
ret
out
push
retf
arpl
ins
fdiv
in
ret
mov
mov
faddp
popa
bound
dec
xor
popf
pop
mov
lods
fst
fbstp
or
scas
fnstenv
mov
or
outs
enter
loopne
out
mov
lahf
cmp
ins
sahf
dec
cmc
in
sbb
mov
push
xor
cdq
inc
mov
push
xor
jne
adc
rcr
fnstcw
push
aaa
scas
adc
xchg
enter
sbb
ja
popf
xor
or
mov
sub
retf
adc
mov
dec
mov
scas
cmp
xor
out
loop
popa
mov
lods
mov
arpl
cli
out
aam
out
inc
or
cs
sti
fs
and
scas
and
mov
push
int3
in
inc
mov
clc
mov
outs
and
pusha
popf
cmp
test
enter
mov
popa
rcr
push
not
int
inc
cmp
add
mov
xor
inc
jb
sub
lock
(bad)
aad
or
jle
(bad)
jg
inc
mov
lds
adc
stos
gs
xchg
or
movs
out
mov
ins
sub
jnp
(bad)
cmp
test
fdiv
popf
and
add
jp
inc
in
cmp
and
pop
stos
pop
sub
sbb
sub
sub
jg
or
jle
ins
pop
test
xchg
mov
add
inc
icebp
push
mov
call
xor
es
and
idiv
pop
cmp
ins
int3
sbb
cmc
dec
xor
sbb
sub
dec
jmp
ud1
lea
or
ins
dec
fcom
jg
cmc
add
stos
imul
push
jmp
jae
sub
cmovp
(bad)
xlat
sbb
add
shl
mov
xchg
fild
jecxz
mov
retf
push
xlat
mov
std
xchg
in
das
repnz
sbb
sub
sbb
dec
or
loop
jecxz
movs
fstp
mov
loope
fst
mov
mov
dec
sub
inc
pop
jmp
push
imul
icebp
je
popf
push
sbb
mov
test
pop
dec
push
(bad)
gs
xchg
inc
jl
sub
inc
aam
mov
mov
mov
sahf
fst
inc
std
xchg
fcmovb
xchg
dec
cld
jl
cmovbe
fldcw
out
push
or
cmp
sub
pop
lock
sbb
mov
mov
mov
fisubr
and
nop
pop
(bad)
scas
mov
sbb
jle
push
sbb
movs
adc
ja
sub
sub
cmp
aad
cmp
mov
xor
pop
mov
mov
inc
sub
inc
(bad)
mov
sahf
or
add
pop
xor
dec
in
cmp
ror
add
and
les
neg
hlt
lds
into
icebp
dec
push
scas
mov
movs
dec
mov
rol
rcr
jae
mov
enter
pop
xchg
jecxz
call
movs
(bad)
fcomp
push
out
pushf
and
push
std
nop
push
cmp
sbb
sbb
aas
rcr
mov
and
push
fdivr
dec
inc
push
xchg
daa
mov
addr16
jecxz
and
jbe
(bad)
push
and
rol
jae
sub
(bad)
and
sbb
loop
mov
cmps
jno
lea
dec
xchg
call
add
add
cli
ds
adc
adc
es
and
inc
push
dec
jbe
rol
ja
add
out
ins
add
dec
imul
ins
sbb
jp
adc
jl
jmp
add
pop
adc
retf
scas
sub
fs
sub
inc
add
(bad)
fidivr
cli
or
pop
sbb
jns
push
dec
popf
popf
xchg
sbb
out
dec
sub
mov
xchg
pop
pop
leave
xchg
jmp
test
add
adc
mov
mov
dec
and
xor
or
cs
(bad)
mov
pop
bnd
push
mov
stc
mov
push
shr
and
xor
and
xlat
lods
jo
daa
sbb
int3
push
sub
lahf
(bad)
arpl
fwait
hlt
sub
aam
jp
sbb
imul
leave
add
ss
xchg
cmc
push
jmp
inc
scas
fsub
sub
jo
inc
loop
xchg
bound
das
mov
je
push
cmps
jne
xchg
adc
cwde
fsub
dec
cld
leave
out
ins
out
aaa
pop
les
xor
scas
cli
xor
pop
or
gs
push
bound
mov
mov
rol
xor
or
setns
pop
nop
jge
mov
jmp
xchg
cmp
xchg
mov
mov
add
or
cdq
bound
and
dec
dec
sahf
or
mov
pop
es
mov
retf
std
outs
jp
or
aam
in
in
add
jmp
lea
daa
nop
and
das
mov
or
xor
dec
xor
daa
pop
outs
fidiv
xor
or
xor
push
test
sbb
push
imul
lea
into
cmp
jbe
pop
sahf
adc
dec
mov
mov
or
in
xchg
dec
lea
xchg
arpl
lahf
or
or
sub
pop
adc
loopne
pop
lea
inc
dec
mov
les
adc
mov
jbe
cwde
(bad)
(bad)
dec
loope
mov
ret
mov
imul
jno
adc
mov
add
sub
in
lods
sbb
popf
dec
fnstsw
pop
mov
lahf
mov
aam
push
popf
fimul
test
ret
aas
dec
mov
pop
jecxz
inc
jl
jb
push
lock
cmps
shl
jne
push
pop
ds
push
call
fdivr
sbb
imul
stos
adc
nop
cmp
(bad)
and
jb
push
push
in
dec
sbb
scas
mov
dec
mov
fdivp
and
repz
out
and
mov
outs
leave
pop
or
dec
cmp
add
call
sub
sbb
leave
shl
pop
cmp
lahf
nop
xor
repnz
pop
test
cmps
stos
pop
dec
test
outs
mov
pop
cli
jbe
mov
sub
(bad)
jg
cmps
fmul
frstor
mov
aas
cmps
ror
adc
xchg
sub
mov
dec
arpl
jo
and
das
and
sbb
cmps
sub
fistp
dec
cmp
gs
or
xor
adc
imul
cdq
mov
fstp
pop
and
xor
imul
pop
or
mov
xor
add
mov
pop
mov
add
cmp
leave
stos
xchg
mov
into
popf
jns
xlat
cld
xchg
jge
adc
out
icebp
scas
jnp
leave
rol
bound
mov
add
aad
pop
aam
dec
lahf
test
push
lea
pushf
dec
das
jmp
scas
mov
cli
adc
sbb
jne
sub
sbb
ins
fisttp
jge
sahf
sub
(bad)
arpl
sub
out
in
sahf
sub
(bad)
enter
ret
mov
sbb
je
movs
sub
repnz
rcl
popf
js
aam
push
adc
mov
push
pop
or
jmp
pop
test
call
xor
jmp
add
push
loop
xchg
sub
inc
retf
or
mov
xor
pushf
je
sbb
les
scas
xchg
add
adc
pop
lds
pusha
push
inc
jl
stos
add
les
inc
int3
sahf
(bad)
rol
xchg
dec
call
cmc
lahf
pop
pop
push
sbb
retf
adc
mov
test
mov
and
xor
test
mov
and
aas
xchg
sbb
and
push
xor
ins
xor
ret
sbb
add
lds
jo
and
mov
hlt
cmp
mov
fldcw
movs
enter
repz
shr
loope
or
(bad)
cmp
dec
pusha
ins
mov
or
outs
push
adc
movs
mov
adc
rol
arpl
call
cmp
cmp
and
jae
xor
cmovnp
or
xor
stc
fwait
in
mov
arpl
pxor
cmp
stos
js
imul
push
sub
add
xor
jmp
cli
xchg
push
or
and
mov
mov
addr16
push
das
hlt
jecxz
vminps
jno
jne
push
lods
adc
(bad)
cmps
or
pop
mov
mul
push
push
jo
xlat
dec
icebp
pop
sub
adc
jl
adc
cmps
lods
pushf
dec
jno
out
cs
xchg
in
test
sbb
dec
xor
jp
ret
push
inc
fidiv
push
jae
jle
inc
aas
sbb
ror
cmp
and
retf
hlt
add
test
mov
retf
push
mov
mov
mov
mov
mov
and
jmp
sbb
dec
shr
dec
enter
adc
iret
xor
lds
or
fs
push
into
nop
jnp
push
mov
ret
into
add
xor
pop
les
test
inc
leave
fist
fisttp
and
mov
jnp
xor
out
jmp
jnp
scas
jl
ret
and
cmp
dec
mov
xor
and
(bad)
and
and
sub
popf
(bad)
or
jno
test
sbb
cmc
out
loop
test
popa
test
jns
fucomp
dec
mov
mov
leave
test
pushf
push
pushf
cld
adc
sub
(bad)
sbb
lock
mov
jg
shr
xor
jne
retf
xchg
mov
xchg
nop
shl
xor
jo
jbe
jg
pop
(bad)
pop
sti
(bad)
dec
jno
inc
mov
ja
mov
popf
addr16
lods
sbb
test
adc
jno
dec
sbb
xchg
gs
and
push
sbb
mov
fs
pop
sbb
mov
mov
lds
dec
jmp
jb
popa
test
in
not
in
in
(bad)
fisttp
add
cmps
jle
call
fcom
pusha
inc
mov
stos
int
dec
inc
rol
sti
lods
and
fs
fs
or
ja
sub
mov
imul
mov
hlt
inc
outs
mov
scas
test
cmc
loope
jns
sub
pop
dec
sub
pusha
lods
in
push
push
aas
jg
push
pop
add
pop
mov
mov
pushf
mov
bound
fdivr
adc
ret
loopne
rcr
ds
or
push
xchg
xchg
sbb
jns
cmp
mov
push
mov
inc
iret
dec
or
mov
lods
push
mov
daa
xchg
lock
fimul
push
test
mov
rol
mov
ficomp
ja
pop
and
dec
out
jne
mov
add
test
jmp
mov
movs
or
sbb
cmp
nop
(bad)
ja
inc
push
pop
loopne
mov
mov
or
cmp
(bad)
xor
sbb
cmp
or
dec
inc
movs
jne
mov
lea
xor
sbb
xor
retf
xor
(bad)
(bad)
xchg
adc
jmp
rol
iret
rcl
xchg
xchg
or
sbb
mov
loop
sub
test
lea
jmp
cmps
and
xchg
xor
sbb
jecxz
inc
(bad)
shr
xor
daa
jo
push
mov
stos
jno
cli
inc
movs
mov
add
and
aas
mov
mov
fstp
add
push
mov
cmp
call
test
stos
push
scas
cld
dec
jmp
and
sbb
rcr
leave
aam
push
sahf
das
iret
or
mov
jp
inc
jae
sbb
sub
push
push
loop
dec
xchg
xchg
cmp
in
inc
or
rol
sub
jns
jnp
jle
xchg
(bad)
shl
inc
xor
ficomp
lea
jg
aad
xor
fmul
add
cmp
mov
pushf
aam
es
and
cli
jns
repnz
add
lahf
movs
shl
cmps
ss
(bad)
xor
push
inc
push
xor
jb
popa
or
std
pop
jne
add
popf
sbb
push
mov
arpl
ins
pop
in
xadd
push
pop
adc
lahf
cld
out
and
(bad)
sti
hlt
addr16
int
push
cmps
idiv
aam
ficom
pusha
lods
fwait
enter
push
les
int
stos
icebp
dec
inc
movs
pop
outs
aad
fisttp
outs
int3
shl
in
cmps
ret
push
inc
and
cmc
jmp
pop
repnz
data16
movs
pop
fld
mov
test
xchg
xchg
lock
repz
mov
rol
mov
adc
pop
xchg
dec
adc
sbb
fwait
retf
jl
and
push
cwde
outs
ins
sar
push
sbb
mov
mov
jge
outs
pop
sahf
test
jo
ret
aam
daa
fmul
cmp
cmc
cmp
sbb
shl
inc
retf
push
pop
inc
sbb
adc
pop
push
push
les
aas
jmp
mov
mov
call
sub
jle
xor
sbb
mov
jae
adc
xchg
cli
(bad)
popa
mov
lds
and
push
fwait
jl
jns
inc
sbb
test
jb
sbb
mov
ins
jmp
pop
loop
imul
rcr
push
mov
xor
jbe
scas
fwait
sbb
add
test
xor
pop
jmp
cmps
int
cli
movs
xchg
ja
data16
bound
js
jmp
push
xchg
sub
test
mov
imul
das
mov
mov
mov
mov
pop
xchg
icebp
aad
dec
loop
inc
cld
push
push
or
test
sbb
mov
js
fnsave
ins
arpl
sbb
ins
mov
aam
pop
cmp
stc
add
lock
enter
jnp
lahf
mov
or
pop
mov
sar
retf
cmps
fs
lods
arpl
jge
mov
xchg
cwde
sub
scas
or
dec
(bad)
or
adc
jb
xor
add
popa
es
push
hlt
adc
loopne
aas
mov
jmp
dec
pop
cmp
into
cmps
ins
push
mov
enter
into
outs
jbe
add
inc
in
pop
shr
fnstenv
rcr
pop
jp
(bad)
cmp
cwde
dec
out
push
shl
pop
sbb
fst
popf
fcomp
aaa
arpl
lds
call
imul
rcl
fcmovnbe
jge
lods
sbb
cmp
jle
fcom
div
ret
mov
or
xchg
stc
pop
inc
push
add
retf
xchg
jno
loope
adc
pop
lea
jo
dec
sahf
jp
stos
and
cli
scas
mov
xchg
jp
mov
xchg
xlat
pop
dec
dec
mov
in
adc
retf
mov
cwde
xor
sub
jnp
call
sbb
jb
and
mov
fimul
sub
imul
std
fmul
sbb
adc
dec
pop
xor
cs
pop
push
es
call
xchg
das
ficom
mov
fnstcw
add
mov
xchg
loopne
sub
inc
iret
pushf
shl
shr
test
push
mov
ret
repnz
mov
pop
xor
fwait
or
and
test
and
stc
sub
or
clc
inc
enter
outs
add
or
mul
dec
mov
jno
push
in
mov
push
aad
fiadd
jl
out
push
arpl
fnstcw
ret
push
sbb
cmp
enter
fisub
mov
sub
xlat
sub
jge
dec
fmul
scas
iret
dec
retf
idiv
imul
popf
cmps
popa
imul
add
adc
ficom
retf
mov
fsubr
dec
sub
imul
pop
addr16
int3
inc
sub
nop
ins
test
std
or
adc
clc
rcl
retf
cmc
xor
outs
add
cdq
jne
dec
pushf
stos
inc
mov
out
(bad)
sbb
dec
and
inc
pop
fs
aas
cmp
pop
rcr
cdq
xor
and
mov
stos
daa
call
add
push
call
mov
fcmovbe
das
lods
inc
push
and
push
stos
call
iret
inc
fldln2
bound
inc
adc
les
fbstp
stc
mov
(bad)
jno
fstp
mov
xchg
das
or
dec
mov
lods
mov
push
pop
test
push
int
rcl
adc
int
jns
mov
push
add
inc
adc
xchg
ret
test
pop
fadd
lods
mov
adc
es
cdq
adc
jb
retf
ret
out
xlat
rcl
(bad)
test
repnz
pushf
stos
repnz
shl
pop
adc
scas
mov
sbb
scas
xchg
xor
inc
lods
adc
push
mov
lahf
pusha
imul
mov
sub
fbstp
jl
out
(bad)
lea
xchg
add
test
mov
stos
loop
outs
aaa
popf
int
leave
or
xchg
ins
jge
inc
xor
js
pop
retf
mov
cvtdq2ps
push
or
(bad)
not
jl
inc
mov
jp
(bad)
mov
int
in
push
jnp
test
and
xchg
sahf
dec
jae
lods
(bad)
out
sbb
sub
jl
xor
mov
mov
jnp
dec
jle
test
pop
jno
gs
sub
mov
mov
daa
jmp
fstp
stc
ins
in
outs
mov
or
sbb
mov
push
or
push
ins
retf
lock
jae
pop
leave
mov
cmp
lock
out
xor
movs
sub
sti
jp
push
in
ss
scas
xchg
cmp
or
pop
mov
bound
pop
into
outs
xchg
test
jns
xrelease
cmp
and
das
(bad)
pop
ss
inc
dec
pop
xlat
(bad)
push
mov
cmps
mov
aaa
(bad)
xor
push
mov
jge
arpl
stos
adc
lahf
pop
lds
stc
xchg
outs
ins
(bad)
mov
std
daa
in
xlat
sub
lock
cmps
or
xchg
fcom
mov
into
cld
sub
adc
hlt
loopne
mov
push
pop
cmps
jg
mov
dec
adc
jle
aas
aas
mov
or
div
fidivr
sbb
mov
and
loop
sti
es
adc
mov
ss
ja
xor
in
dec
mov
mov
jo
int
mov
inc
push
shl
aam
lods
cmovns
push
cwde
sbb
mov
xchg
repnz
mov
daa
push
aad
xlat
mov
or
fild
xor
ja
push
(bad)
xchg
fsubr
rcl
and
repz
ret
xor
cmps
and
pop
in
sub
div
popa
call
inc
addr16
repz
pop
lock
push
lahf
mov
fbld
push
xchg
sub
lods
inc
mov
neg
lods
test
mov
cld
mov
add
popf
xchg
xchg
push
ja
cmps
mov
shl
sub
push
mov
or
jg
add
js
aam
lea
je
es
out
or
and
sub
add
adc
imul
add
popa
out
(bad)
mov
leave
adc
jle
lea
lahf
fwait
pop
mov
ud1
js
fnstsw
jge
cmp
adc
push
test
pop
cmp
test
iret
lods
call
mov
fwait
shl
pop
pushf
or
sti
int3
and
lods
adc
push
movs
mov
imul
pop
push
jp
mov
rol
jno
in
fst
cdq
mov
xchg
adc
cmp
mov
es
out
iret
fs
cmp
out
movs
dec
in
clc
ss
int
push
int3
add
push
and
inc
push
ins
enter
xor
mov
stos
inc
dec
xchg
mov
xlat
jp
aas
loopne
adc
cmps
pop
jno
imul
je
push
jnp
fwait
cmp
sbb
in
repnz
push
retf
mov
mov
push
outs
cwde
in
push
mov
sbb
ret
xor
or
cmp
pop
push
xchg
imul
jg
fdivr
out
pop
mov
bound
inc
and
push
inc
add
inc
mov
retf
mov
in
mov
push
dec
mov
sbb
or
or
repnz
dec
and
dec
sbb
inc
call
jae
ja
or
test
sahf
rol
mov
dec
vpsllq
sub
pop
ret
push
add
dec
int
div
mov
mov
push
stos
ja
push
cwde
int
mov
xor
mov
add
cmp
jl
fsub
mov
rcr
cs
adc
xlat
inc
and
adc
(bad)
lock
int3
jnp
xchg
sahf
xor
xor
mov
sahf
fisttp
mov
jg
mov
lea
stc
dec
mov
test
and
pmullw
icebp
inc
(bad)
cld
push
mov
push
dec
push
loop
aam
les
fwait
add
jg
aam
pop
or
gs
mov
pop
pusha
mov
xchg
push
daa
add
pop
ret
leave
jno
out
jge
mov
jns
fwait
pop
sub
sar
out
dec
add
adc
push
rol
lds
inc
imul
repnz
jmp
xchg
sub
(bad)
hlt
and
repnz
mov
inc
xchg
adc
xor
sub
cmps
xchg
aaa
je
mov
fisubr
jne
inc
ins
add
int
test
leave
push
cmp
jb
sbb
mov
mov
inc
and
sti
idiv
lock
int3
sub
mov
pusha
jp
inc
(bad)
fld
or
push
mov
push
jle
push
adc
sub
in
and
or
inc
(bad)
pushf
mov
sbb
dec
jnp
sbb
retf
dec
dec
sbb
loopne
mov
dec
mov
dec
pop
sub
xor
(bad)
jnp
call
mov
sub
and
cmps
mov
(bad)
cmp
mov
and
frstor
shl
add
dec
ret
mov
push
int
lea
pop
pop
out
cmps
mov
and
popa
icebp
xchg
and
retf
jns
icebp
mov
je
jmp
es
std
pop
js
hlt
xchg
adc
stos
scas
xchg
in
aad
stc
stc
rol
pop
or
dec
nop
out
cmps
js
scas
mov
jno
mov
out
lahf
jp
jmp
mov
jb
and
rol
mov
sbb
inc
loop
ret
mov
ss
rol
ja
mov
shl
cmps
jge
leave
(bad)
(bad)
mov
sub
cmp
(bad)
push
add
inc
jbe
pop
push
aam
dec
test
ret
mov
or
(bad)
scas
dec
jb
ins
icebp
inc
and
in
dec
shl
pop
or
in
jmp
pop
add
push
jg
sbb
rcr
jecxz
out
mov
ret
dec
dec
xor
mov
daa
in
pop
jg
xor
adc
sbb
push
mov
pusha
mov
pushf
pop
in
sub
cmps
out
mov
dec
sbb
or
inc
iret
(bad)
in
iret
jp
in
jge
fiadd
ficomp
mov
jbe
fs
pop
cld
rcr
fld
cmp
fdiv
inc
mov
jno
(bad)
fld
add
pop
pop
xor
sub
pop
mov
test
cmp
mov
repz
push
jmp
stos
pop
and
fidiv
ret
cmp
or
fistp
mov
stc
sbb
enter
push
or
or
inc
test
xlat
sub
pop
push
loop
fs
jno
pop
fisub
cmc
daa
mov
pop
mov
shr
push
pusha
mov
pop
mov
inc
mov
mov
jmp
test
dec
cmp
in
test
jne
fwait
in
jg
push
dec
fucom
fst
cmps
call
jo
mov
dec
adc
loope
stos
stc
shl
shl
xor
in
outs
cdq
mov
(bad)
mov
mov
aad
and
push
imul
imul
bound
fcmovbe
adc
cdq
push
shr
push
push
pop
mov
ror
lea
lea
push
iret
in
mov
xchg
std
pop
in
dec
out
or
cmp
jl
cmc
cdq
jns
in
mov
push
mov
or
xchg
repnz
push
popa
sti
mov
jle
fisub
push
xchg
add
retf
cmp
pop
mov
mov
popf
addr16
xchg
xchg
xor
mov
es
push
ja
dec
mov
inc
inc
dec
aas
imul
je
hlt
popa
cdq
aaa
movs
mov
jbe
sbb
pushf
adc
mov
aam
xor
bound
mov
stos
dec
cli
mov
not
dec
and
imul
add
pop
sub
mov
(bad)
sub
fnsetpm(287
scas
rcr
mov
scas
and
call
mov
sbb
sub
and
mov
stos
push
mov
clc
xor
fstp
add
rol
mov
jmp
push
jg
addps
lea
push
inc
repz
shl
retf
iret
push
lods
call
call
imul
cmp
jo
adc
add
out
into
dec
adc
scas
mov
dec
push
or
jae
jo
jmp
sti
jae
adc
fs
dec
jae
jecxz
div
lods
pop
add
ret
xchg
test
jmp
xchg
lahf
call
or
cmp
lea
into
hlt
cdq
adc
sbb
js
scas
sbb
mov
imul
mov
add
push
in
loop
movs
mov
std
nop
dec
adc
xor
push
shl
jae
mov
mov
cmp
add
cli
or
sub
add
fld
or
push
fdivrp
movs
sub
mov
rol
into
int3
out
jne
(bad)
repz
ficom
ror
jge
nop
push
push
jl
push
pop
pop
or
mov
add
xchg
out
sbb
movs
(bad)
mov
adc
into
sub
ret
mov
pop
mov
xchg
int
shl
pop
xor
inc
mov
mul
jge
xchg
ficom
out
xlat
pop
outs
pop
mov
ins
int
cmp
loopne
inc
addr16
jmp
mov
mov
push
ret
mov
retf
sbb
cmp
sbb
outs
push
sub
inc
mov
pop
call
pop
push
movs
pop
mov
mov
sub
add
mov
popf
dec
dec
dec
xchg
imul
arpl
pop
jmp
enter
int
mov
pop
(bad)
out
or
icebp
test
cli
data16
jle
cmp
mov
pop
fdiv
push
in
pusha
xchg
js
mov
bound
jg
setno
shr
enter
mov
dec
fcomp
xchg
pop
mov
das
adc
inc
in
and
pop
out
xor
jo
retf
out
sahf
mov
outs
setnp
frstor
mov
xchg
sub
or
out
(bad)
int
jbe
int3
sub
div
shl
inc
push
mov
movs
and
retf
enter
push
xor
xchg
rcr
dec
jge
adc
push
mov
cmps
dec
dec
mov
test
sub
imul
shl
in
push
jge
pop
popa
inc
aas
movs
mov
stc
lahf
inc
rcl
xchg
aam
daa
mov
je
test
mov
mov
test
xchg
lds
jb
(bad)
scas
icebp
lahf
dec
jg
sub
mov
add
and
mov
and
push
or
push
push
les
push
jnp
sysret
pop
jbe
test
out
lea
js
inc
ja
bound
sahf
sbb
shl
dec
(bad)
call
jno
add
ficom
fld
adc
sub
inc
xchg
and
xchg
pop
jg
(bad)
aad
xchg
inc
test
push
cmp
push
jns
or
pop
enter
push
frstor
cvtdq2ps
fisub
and
lock
jmp
jp
mov
pop
jl
movs
jae
es
popa
mov
cs
movs
lock
xchg
imul
movs
jo
retf
arpl
push
imul
in
vmovntps
(bad)
push
outs
jmp
icebp
push
lds
imul
or
mov
mov
aad
out
and
sbb
or
fist
mov
inc
test
xor
rol
xlat
outs
add
test
fsub
and
cmps
out
(bad)
ret
mov
ja
mov
dec
arpl
outs
push
sub
aad
xchg
add
stc
mov
outs
mov
or
fild
sub
cmp
sub
cmps
and
mov
cmp
int
test
jns
sub
pop
pop
sub
jno
and
outs
pop
push
adc
adc
lock
(bad)
shr
mov
cmp
mov
test
popa
inc
int3
jmp
xor
sub
das
cmps
ds
das
push
jae
hlt
pop
ja
or
pop
fild
xor
fcmovbe
push
loope
xlat
add
inc
xchg
lock
les
adc
mov
mov
sub
xor
sbb
out
ret
xor
cmp
push
and
add
int
pop
jg
les
mov
and
loope
retf
shl
call
call
dec
cmp
jns
jle
or
cmps
fdiv
adc
es
lahf
xchg
aad
xor
aad
lahf
movs
icebp
add
bswap
sbb
test
nop
push
(bad)
jae
pop
and
inc
add
imul
cmps
aaa
repnz
test
push
mov
pop
mov
xadd
xor
sahf
imul
inc
loopne
push
mov
add
retf
mov
sub
ror
push
movs
pop
mov
in
test
fbstp
pop
stc
ret
dec
push
cmp
retf
sbb
jbe
sbb
push
arpl
pop
xor
(bad)
test
shl
in
outs
faddp
enter
in
cdq
fidiv
or
movs
cdq
int3
xchg
out
nop
mov
jmp
fild
jp
adc
or
fiadd
dec
popf
imul
test
ficom
fcmovne
dec
and
jno
mov
out
adc
and
ror
dec
nop
sar
jmp
loop
and
(bad)
mov
ins
or
add
(bad)
xchg
sub
jl
sub
jmp
xchg
xor
int3
mov
sub
loopne
mov
out
xchg
jp
push
test
jmp
mov
adc
mov
xlat
cmc
add
es
xlat
or
mov
or
sub
cmp
jno
adc
pop
scas
and
es
aam
inc
dec
jle
mov
add
mov
jg
ja
repz
mov
retf
ret
mov
jle
scas
jne
out
loopne
aas
mov
sbb
call
xchg
cmps
leave
mov
cmp
popa
push
inc
das
mov
dec
ins
fcom
dec
js
xor
es
(bad)
push
stos
jb
ficom
jne
mov
lods
ds
stc
and
rcr
pop
ret
pop
jnp
add
dec
call
jge
xchg
addr16
adc
ins
fucomi
push
inc
adc
mov
daa
xor
jmp
xchg
jmp
add
ficomp
mov
hlt
push
movs
sub
cmp
iret
sub
outs
jns
or
cmovbe
stos
sbb
fadd
rol
sbb
cmp
mov
cmp
mov
test
push
dec
ret
sub
rcr
sbb
out
imul
test
std
mov
cmp
inc
mov
xchg
lods
sahf
repz
sub
popa
int3
ins
xchg
ds
(bad)
jecxz
sahf
jae
movs
cmp
retf
sub
lea
and
xchg
or
ss
dec
inc
jmp
out
adc
jecxz
jg
add
ss
test
mov
jo
xchg
or
fst
push
test
popa
push
ror
mov
aam
shl
stc
add
mov
sbb
inc
and
fistp
imul
sbb
ins
adc
mov
inc
popf
lods
or
xchg
jns
mov
retf
xchg
int
mov
sti
in
into
jle
and
jns
jbe
fxch
sbb
in
retf
shr
(bad)
or
cld
jle
cmp
(bad)
xor
inc
xor
xchg
pop
mov
mov
loopne
sub
pop
jmp
dec
mov
addr16
int
fisubr
sbb
mov
mov
into
push
sub
sub
in
mov
je
popf
xlat
push
adc
xchg
ins
jg
jg
int3
inc
mov
add
sbb
jno
leave
daa
ss
movs
es
xchg
xor
add
sbb
and
in
jle
inc
bound
adc
xor
mov
inc
and
call
in
dec
dec
dec
pop
imul
loopne
jge
dec
rcl
mov
sub
js
enter
ds
lea
out
int3
xchg
inc
test
cmps
xchg
adc
cmp
lods
xchg
ret
stos
test
(bad)
(bad)
mov
cmp
mov
add
jo
jne
push
cmp
mov
out
retf
xchg
cli
test
add
cdq
add
xchg
popf
push
fmul
mov
loop
cli
repz
push
rol
dec
int3
pop
out
pop
div
jne
sub
pop
std
dec
mov
pop
jmp
mov
out
pushf
(bad)
out
ret
push
and
arpl
movs
sbb
jl
adc
push
or
jbe
(bad)
and
mov
mov
aad
mov
das
fsub
inc
push
inc
cmp
inc
shl
add
std
test
push
sbb
clc
sub
in
adc
shl
aad
sti
shr
popf
sbb
dec
pushf
in
loopne
pop
xchg
enter
adc
pushf
sub
inc
and
cwde
mov
mov
dec
cmps
mov
out
mov
sbb
mov
inc
or
div
jno
(bad)
lock
iret
pop
stc
push
ins
jmp
push
sub
pop
xchg
xchg
jmp
and
inc
lock
iret
dec
mov
cs
pop
push
jp
add
je
jnp
in
out
mov
movs
ja
lds
shr
jmp
sbb
hlt
jno
push
xchg
or
fcomp
pushf
adc
cmps
arpl
and
movs
mov
sahf
xor
push
sub
leave
mov
inc
push
add
lods
inc
fsub
pop
stos
(bad)
pop
(bad)
push
pusha
imul
xchg
int3
ss
xor
pushf
out
lahf
dec
xor
in
push
cmp
xor
or
fdivr
and
or
mov
sub
add
cmp
je
mov
clc
pop
arpl
pop
fs
mov
lds
aad
out
pushf
fadd
out
in
fwait
mov
imul
mov
inc
mov
shr
cmp
mov
sbb
inc
retf
jl
mov
fild
neg
push
cmps
out
lds
mov
(bad)
cmp
pop
adc
cmp
out
cmp
xchg
movs
cmp
mov
jg
adc
mov
jmp
stos
stos
add
mov
aad
ret
fst
das
mov
push
ds
or
out
pop
test
add
int3
mov
sub
cmp
addr16
or
jge
pushw
jo
cmps
jle
dec
cli
in
bound
mov
adc
fisub
xlat
mov
imul
xor
loop
jne
dec
jge
jp
pop
xchg
mov
and
sub
add
xlat
cmp
push
add
mov
mov
xor
sbb
mov
jnp
pop
xor
adc
adc
ficomp
jge
push
jbe
cmps
in
cwde
xor
push
pushf
arpl
cmp
aaa
push
neg
aaa
jbe
rcr
arpl
xchg
cmp
pop
jecxz
cmp
xchg
push
xchg
imul
outs
fst
rcl
out
ror
add
dec
bound
jno
stos
pusha
mov
aaa
cmp
mov
push
movs
enter
push
dec
stos
ficomp
sbb
xor
sbb
jg
test
inc
xor
dec
jb
mov
lahf
jle
mov
push
nop
mov
adc
cmp
into
mov
fcmovnbe
ret
dec
lds
rol
je
or
inc
mov
cmps
push
mov
xor
xchg
inc
mul
repnz
cmp
mov
je
xchg
in
pop
fwait
add
(bad)
ja
(bad)
out
movs
scas
pushf
push
pop
pop
cmps
fwait
rol
pop
pop
dec
push
push
push
dec
mov
or
bound
and
(bad)
and
jmp
cs
cmp
scas
cwde
pop
call
js
cdq
pop
mov
repz
hlt
xchg
aam
cmp
and
jp
hlt
popa
pop
pop
repnz
ins
(bad)
out
int3
es
dec
icebp
movs
mov
pop
shr
jb
push
shl
and
jb
je
mov
scas
or
cdq
push
test
das
scas
mov
mov
fimul
lds
leave
mov
push
lods
std
pusha
xor
hlt
(bad)
out
sbb
inc
out
or
jp
and
mov
int
jmp
cwde
xor
sbb
dec
push
imul
add
mov
xchg
dec
jmp
ja
add
inc
in
fwait
enter
mov
jecxz
aad
test
adc
shr
sub
out
pop
sbb
repz
push
mov
cs
push
out
add
test
lock
test
jo
in
sbb
sbb
into
inc
fmul
xor
(bad)
out
adc
leave
ins
outs
fmul
ins
out
loop
xchg
gs
sub
xchg
xchg
dec
popa
mov
outs
pop
inc
punpckhbw
outs
int
adc
dec
cwde
adc
mov
sahf
add
mov
cmp
dec
xor
push
dec
sbb
dec
mov
xor
pop
lock
xchg
xchg
xchg
scas
cmc
adc
add
ror
xor
(bad)
aas
std
jecxz
outs
test
pop
pop
inc
fidivr
in
pop
dec
mov
js
pop
out
sub
xchg
mov
lds
sbb
xor
dec
and
mov
std
std
jle
xchg
mov
and
nop
mov
push
pop
or
mov
sub
(bad)
aaa
fdivr
sub
jg
cmps
sahf
sahf
push
jo
rcr
and
push
out
fidiv
xchg
in
imul
mov
adc
push
add
out
aas
retf
adc
pop
adc
(bad)
mov
cmps
xchg
jne
jmp
or
jae
leave
js
ret
mov
ja
pusha
movs
mov
imul
mov
ins
mov
mov
xchg
push
mov
mov
and
or
jo
xchg
movs
lock
lods
ret
inc
loopne
mov
clc
int
cmp
lods
imul
div
push
cmp
fnstcw
ret
push
stos
pop
leave
jae
and
dec
dec
aad
xchg
pop
pusha
pop
dec
and
mov
or
cmc
add
adc
dec
scas
cmps
add
popa
pop
inc
shr
inc
jle
shl
dec
adc
sete
push
push
dec
add
mov
mov
mov
jle
inc
fwait
mov
ret
(bad)
mov
sbb
aam
repnz
jp
cmc
fild
mov
fadd
pop
push
ins
ret
dec
push
mov
xchg
popa
std
test
out
push
call
mov
hlt
imul
dec
pop
dec
or
pop
mov
push
das
hlt
fnstsw
mov
add
dec
sbb
jmp
or
inc
loop
retf
xchg
jecxz
xchg
ins
dec
adc
add
stos
jbe
jge
cdq
cmp
cdq
out
fs
push
in
ret
rol
dec
or
jns
inc
stc
(bad)
dec
rcl
jp
dec
xchg
jns
pop
loop
inc
idiv
mov
pop
in
test
xor
je
pusha
test
jle
(bad)
and
mov
outs
aaa
mov
jle
xchg
add
adc
aad
sbb
outs
in
ja
(bad)
fnstenv
repnz
mov
pop
hlt
cmp
mov
jge
mov
retf
aad
call
jmp
inc
in
rcr
fwait
cmp
movs
mov
xor
push
mov
loop
outs
cmp
jno
(bad)
clc
xchg
leave
sbb
push
bound
xor
push
mov
or
pop
jo
xchg
mov
xchg
and
cmp
popf
dec
jg
inc
das
sub
test
sub
jmp
mov
cmps
push
push
jno
push
fst
or
jmp
sbb
lods
retf
pop
(bad)
sbb
stc
fdivr
adc
out
mov
pop
enter
int
sub
or
ret
iret
mov
aad
sbb
jb
test
call
loopne
dec
movs
pop
jnp
xor
pop
ror
mov
jmp
in
jl
push
mov
ins
sbb
clc
or
mov
adc
push
dec
loop
cmps
jbe
xchg
xchg
add
enter
mov
push
pop
iret
jbe
test
jmp
pusha
push
mov
out
xor
hlt
push
jb
and
loope
inc
ins
test
test
shr
and
and
ss
pop
mov
cs
mov
loop
cmps
aam
adc
(bad)
jnp
sub
add
(bad)
and
pop
in
clc
loopne
seto
std
add
out
out
shr
dec
fmul
ds
ds
mov
mov
jge
in
dec
js
pop
mov
movs
daa
cwde
mov
retf
(bad)
pop
lahf
idiv
int
sti
add
dec
sub
ror
dec
outs
and
js
sahf
inc
fnstsw
lds
xchg
outs
dec
stos
mov
push
enter
xor
das
scas
fiadd
gs
aaa
sbb
mov
pop
jge
inc
(bad)
pop
out
inc
mov
sbb
push
push
pop
xchg
push
cld
and
jns
clc
cli
pop
jecxz
push
stos
ret
mov
add
mov
jno
leave
nop
out
sub
pushf
stc
pop
ins
add
clc
pop
push
cmps
push
xchg
inc
mov
dec
push
cli
cs
cmp
jno
inc
leave
sbb
push
movs
fimul
das
jle
outs
mov
mov
pop
gs
and
dec
popa
sahf
sbb
xchg
lea
out
jp
sub
mov
and
inc
pushf
jne
dec
in
or
mov
jbe
(bad)
mov
ins
adc
xchg
(bad)
and
dec
stc
jnp
push
pop
mov
sti
mov
mov
push
dec
imul
lods
pop
xlat
jp
xor
ins
xchg
test
or
outs
retf
and
dec
sub
jmp
std
and
adc
mov
test
popf
xor
sbb
push
div
inc
jno
out
in
(bad)
mov
xor
test
clc
cmps
and
sub
rol
fisttp
imul
cmps
loop
sbb
adc
out
xchg
aaa
adc
out
daa
fneni(8087
mov
iret
add
fild
mov
shl
movs
cld
lods
mov
aam
jmp
in
mov
in
stc
cs
push
mov
cmp
ret
cwde
or
iret
aas
retf
test
ins
pop
cwde
push
mov
or
bound
push
and
cdq
imul
or
push
push
dec
ja
fwait
mov
jp
mov
(bad)
pop
int3
push
fs
xchg
loope
mov
pushf
pop
mov
ja
aad
(bad)
sahf
scas
stc
nop
push
pop
adc
pop
push
push
nop
xchg
cmps
mov
ret
mov
jns
cmc
mov
cmp
or
and
cmp
mov
xchg
fistp
adc
jecxz
inc
mov
pop
std
clc
adc
in
test
xor
pop
mov
sub
sbb
call
sbb
stos
xchg
fcomi
mov
jmp
dec
jbe
mov
mov
(bad)
not
sbb
and
cmps
(bad)
(bad)
shl
mov
jns
(bad)
push
call
call
dec
inc
fwait
cmc
push
sbb
inc
pop
mov
adc
or
jle
dec
sub
and
dec
stc
or
repz
jbe
daa
mov
dec
mov
ins
xchg
inc
pop
and
mov
push
test
stc
inc
dec
bound
cmp
movs
jge
mov
movs
(bad)
(bad)
sti
xchg
pusha
daa
int
repnz
mov
jle
retf
pop
sti
repnz
repnz
js
jns
les
mov
jns
jecxz
fld
ins
mov
mov
push
adc
fld
mov
mov
or
sbb
mov
jl
out
jp
jle
pushf
inc
leave
test
cmp
dec
add
cmps
mov
add
aaa
test
mov
mov
or
xchg
cmp
and
mov
mov
mov
aad
pop
jle
mov
or
mov
xchg
xor
dec
xor
xchg
test
cli
mov
rcl
mov
or
call
into
lods
cmp
mov
ds
xchg
data16
mov
ja
xchg
test
xor
stos
pop
jo
push
adc
aam
sti
mov
or
pop
ins
imul
adc
inc
pop
ss
and
mov
pop
out
mov
dec
cmc
int3
sbb
gs
pushf
sbb
mov
(bad)
int3
dec
sbb
fldcw
push
inc
pop
jecxz
scas
or
adc
cmc
sbb
mov
push
dec
je
sbb
popf
sbb
int
pusha
sbb
jmp
inc
xchg
aas
xor
push
imul
das
adc
push
or
gs
mov
mov
jge
push
or
aam
inc
popa
bound
fadd
in
or
es
mov
sub
sbb
ja
in
fwait
cmp
outs
repnz
add
imul
mov
cmps
and
ins
push
adc
aaa
aas
adc
sbb
inc
test
(bad)
sub
sub
sub
inc
push
jl
out
inc
in
sbb
xor
nop
xor
retf
push
xchg
ret
popa
cwde
(bad)
rol
pop
fcomp
xor
adc
add
mov
movs
clc
mov
fs
clc
loop
(bad)
shl
cmp
mov
and
pushf
cmp
mov
daa
pop
stc
mov
rol
imul
shl
sbb
(bad)
adc
dec
cmc
pop
std
cld
xchg
mov
or
inc
jg
out
cs
in
push
pushf
les
mov
xor
dec
mov
arpl
mov
jl
scas
push
adc
loop
inc
out
xchg
or
cld
repz
rcr
cli
ret
mov
push
jmp
sbb
jmp
movs
scas
or
ror
(bad)
xor
in
clc
push
cdq
mov
adc
ins
(bad)
dec
adc
imul
repz
or
in
or
add
or
mov
rol
pop
mov
and
sti
or
rol
div
xchg
imul
push
xchg
inc
out
ja
repnz
sub
cdq
idiv
call
cmps
mov
out
pop
std
jg
leave
adc
add
dec
mov
cmp
pop
lahf
mov
pop
and
pop
not
ins
repnz
and
and
clc
sahf
cmp
dec
xor
mov
or
pusha
pusha
mov
mov
add
movs
retf
mov
sub
xchg
cmp
fstp
mov
ds
scas
lock
cli
gs
fs
mov
xor
lods
aam
adc
xor
push
int3
into
test
xchg
cdq
rcl
aad
mov
push
lock
dec
jp
lea
shl
cmps
int
fdivr
mov
bound
jnp
push
mov
fisubr
mov
int
lahf
xlat
cmps
into
jecxz
pop
bound
ret
(bad)
xchg
(bad)
pop
add
lods
fisubr
clc
repnz
pusha
inc
add
rcr
(bad)
out
or
mul
mov
push
adc
cdq
sbb
repnz
or
out
sahf
(bad)
cli
outs
imul
jnp
ins
sub
dec
adc
dec
loop
rol
xlat
jno
fstp
and
ins
pop
push
cmp
mov
xor
fsubr
mov
jbe
cmp
sahf
stos
imul
add
and
sbb
push
xor
icebp
xchg
jns
inc
xlat
addr16
data16
lods
(bad)
stos
sbb
out
call
mov
sbb
push
lds
push
or
mov
push
pop
mov
jo
push
and
ds
ins
int
imul
das
mov
lock
jo
jmp
pop
jbe
outs
sar
(bad)
data16
push
scas
and
mov
mov
cmp
push
addr16
rcr
mov
adc
out
test
fsubr
fmul
mov
jo
mov
pop
jg
pop
out
repz
jge
jp
push
mov
je
or
div
jns
xor
movs
pop
jnp
fs
test
fsub
push
popf
cmp
xor
in
mov
lods
test
adc
xchg
in
pop
sahf
out
std
inc
inc
xchg
adc
xchg
in
in
mov
mov
xor
mov
mov
adc
or
fwait
cmp
and
pop
ja
fimul
cmp
lea
int
mov
xchg
jmp
stos
loopne
jl
mov
je
jmp
out
or
pop
stc
cmp
inc
add
ja
jmp
fs
cmp
xchg
xchg
mov
cmps
sti
inc
cmc
in
and
cmp
repz
sti
or
cmc
test
mov
movsx
aad
mov
movs
jbe
repz
inc
inc
cwde
in
dec
in
(bad)
jno
ss
daa
adc
fst
add
adc
jge
es
jo
mov
jge
and
xchg
stos
loop
repnz
sub
sub
iret
stos
loopne
mov
jo
push
mov
mov
in
mov
mov
or
sti
and
lods
jne
aad
in
out
jns
jge
dec
adc
mov
pop
jle
sub
xlat
xchg
cmp
aam
repnz
sahf
ret
dec
push
sbb
nop
cli
cli
push
call
xlat
shl
or
xor
cmp
ret
ret
aaa
les
sub
dec
cmp
in
lahf
inc
pop
data16
clc
ret
fist
inc
(bad)
jno
sub
sti
sbb
(bad)
imul
dec
or
jle
push
jmp
jp
popa
or
mov
out
xchg
scas
cmp
int3
jl
sbb
pop
(bad)
aam
setne
xlat
cli
and
and
sbb
add
mov
out
add
mov
(bad)
or
dec
popf
xchg
int
adc
outs
sub
frstor
test
mov
and
(bad)
aaa
fnstcw
leave
stc
sti
rcr
or
repnz
ret
sbb
sub
scas
add
mov
stos
jnp
sub
scas
(bad)
xchg
mov
sub
mov
dec
into
test
adc
mov
std
jmp
fsubr
sbb
fmul
jnp
test
dec
or
jp
and
mov
xchg
(bad)
sub
ret
mov
push
push
cmp
adc
jnp
pop
jge
enter
cmp
iret
in
jae
xor
fidiv
outs
loop
ror
xchg
cld
fwait
das
mov
mov
inc
mov
or
mov
jl
sti
xlat
fcmove
push
test
test
retf
cmp
and
fwait
dec
enter
ret
shl
arpl
repnz
cmp
cmps
sub
int
lods
inc
push
dec
mov
push
lock
jp
sbb
inc
mov
xchg
xor
jns
ins
jg
lock
sub
bound
xchg
imul
or
in
(bad)
test
inc
dec
xchg
scas
addr16
out
lahf
and
xchg
xchg
mov
xor
jb
aaa
sub
cli
sub
jno
or
popa
and
call
adc
lds
cmps
xchg
rcr
cli
inc
dec
dec
inc
mov
xchg
retf
arpl
retf
xor
pop
sub
mov
nop
and
sbb
repz
mov
sti
jno
loopne
fadd
mov
int
repz
push
fidiv
(bad)
sub
inc
cmp
xor
imul
rcr
outs
adc
icebp
test
pop
mov
push
call
push
cwde
jecxz
out
lods
aaa
lods
inc
dec
and
mov
je
movd
push
scas
scas
popf
lds
addr16
clc
leave
rol
sahf
leave
sub
xchg
mov
addps
pop
xchg
movs
rcr
push
jb
das
push
ret
test
rol
sbb
xlat
pop
push
xor
es
outs
call
push
stos
dec
xchg
jne
inc
xchg
scas
push
cld
loope
add
loop
pop
ret
or
inc
sub
inc
out
pop
push
es
and
fwait
jne
enter
adc
cmp
sub
loop
aam
iret
xchg
sub
shl
xor
dec
push
int3
imul
dec
xchg
retf
xchg
push
mov
push
jno
add
xchg
mov
mov
in
outs
(bad)
xor
js
aaa
mov
pop
mov
and
sbb
in
jl
pop
test
call
retf
retf
icebp
mov
dec
ret
push
add
mov
cmp
and
xchg
mov
mov
jns
mov
lock
call
jl
push
adc
adc
sar
lock
xchg
jo
ror
fist
imul
cmp
adc
leave
aam
sub
xor
and
bound
dec
add
push
inc
add
or
loop
xlat
mov
adc
inc
adc
dec
in
xchg
inc
mov
xchg
fsubr
xor
jge
(bad)
sbb
les
in
mov
in
outs
push
push
lock
aam
push
lods
cmp
es
pop
(bad)
mov
add
retf
in
pop
mov
ja
push
mov
mov
mov
push
cmp
dec
fs
adc
push
sbb
inc
outs
xor
stos
hlt
add
retf
jmp
out
es
mov
in
sub
xchg
sub
rcl
sub
sbb
addr16
(bad)
push
or
push
pushf
ds
adc
shr
add
cmp
cwde
outs
call
add
dec
xor
add
push
xor
sbb
xlat
sub
shr
mov
xor
pop
iret
(bad)
out
xor
jl
leave
(bad)
clc
inc
xchg
cmp
jge
xlat
and
popf
das
mov
test
mov
push
in
pop
stc
jle
dec
sahf
dec
xlat
and
stos
fist
mov
dec
dec
add
cwde
inc
mov
mov
pop
jl
xor
sbb
movs
cmp
jge
ret
push
stos
add
and
mov
dec
xor
call
adc
cmc
out
add
sahf
sti
test
cmp
xor
mov
mov
retf
mov
pop
lock
xchg
mov
cmps
mov
test
sub
or
repz
jge
(bad)
jmp
aam
or
pop
out
int
das
xchg
xchg
stos
fisttp
push
or
cmc
jmp
out
and
or
stc
out
fild
jle
or
mov
ror
xor
sti
jae
inc
ins
(bad)
test
ja
addr16
icebp
pop
dec
imul
jge
je
xor
dec
cs
push
mov
(bad)
fisubr
mov
mov
sar
add
and
aam
xchg
cmp
mov
jmp
jb
stc
in
add
nop
lods
sbb
jbe
push
gs
sub
push
iret
(bad)
out
cmps
mov
imul
sub
add
in
push
or
(bad)
fisttp
pop
sub
mov
jno
mov
mov
(bad)
fcomp
aad
cmp
jp
mov
sti
data16
and
sbb
push
inc
mov
dec
dec
in
jp
sar
repz
xor
push
cmp
movs
cwde
sbb
mov
mov
ret
cmc
jmp
add
xchg
repz
(bad)
test
inc
cli
(bad)
jo
lock
lea
mov
adc
sub
cmp
je
jns
add
cli
dec
sbb
adc
ret
aam
add
data16
test
out
mov
(bad)
cmp
loopne
jecxz
loope
addr16
inc
adc
xchg
in
jae
lock
rcl
cmp
and
cmp
rcr
mov
push
jnp
sub
sbb
dec
jmp
sbb
add
stos
outs
mov
and
iret
sahf
add
ins
push
push
adc
and
cmp
call
mov
pusha
pop
or
dec
out
test
inc
mov
mov
dec
and
imul
sub
stc
sbb
pop
sbb
sar
sub
daa
lods
call
push
(bad)
mov
pop
xor
jle
push
dec
cmc
push
xchg
jg
and
add
idiv
ins
pop
cmp
jae
pop
mov
add
jl
lods
cmps
cld
pop
popa
pop
cmp
rcl
cmp
mov
lea
mov
pop
jns
dec
mov
add
adc
jne
sub
sahf
jno
cwde
mov
jne
xor
and
add
sbb
call
in
cmps
jbe
mov
jmp
inc
ss
mov
ja
(bad)
hlt
or
push
pop
loope
leave
jmp
stos
adc
popf
mov
push
or
pop
mov
xlat
adc
or
pop
arpl
rcr
fstp
xchg
rcr
inc
js
push
sub
in
xchg
mov
mov
retf
lods
sub
aam
shl
fucomip
and
faddp
jbe
jne
sub
push
retf
mov
lahf
lock
fs
test
fsubr
xchg
out
push
jl
call
out
xor
cmp
(bad)
cld
add
out
int
cmc
dec
mov
not
jmp
mov
cmp
data16
xchg
addr16
mov
jns
(bad)
dec
or
mov
ins
icebp
pop
fadd
repz
xor
push
jo
test
xchg
adc
xor
rol
daa
xchg
adc
dec
pop
stos
stos
pop
je
sbb
mov
popf
fmul
add
movs
push
push
mov
add
(bad)
jbe
enter
mov
sub
hlt
ins
shr
pop
xcrypt-cbc
cmps
push
cld
push
in
add
or
sti
adc
mov
shl
fs
dec
sbb
test
mov
mov
add
pop
ror
test
cmp
icebp
jp
pop
mov
push
adc
sub
and
outs
adc
inc
sub
sbb
aam
test
xor
cld
out
ja
pop
fs
popf
imul
movq
and
xchg
arpl
scas
fldcw
adc
fs
fldcw
or
xchg
ds
mov
out
loop
mov
dec
mov
pusha
add
addr16
(bad)
mov
(bad)
pop
pop
(bad)
push
lods
add
dec
xor
adc
sub
xchg
fcom
mov
or
xchg
mov
adc
leave
or
push
and
inc
ss
push
mov
fsub
jecxz
loopne
clc
jno
jno
xchg
sub
movs
pop
(bad)
mov
jp
std
sbb
and
out
inc
clc
push
dec
ja
sahf
cmp
mov
push
arpl
rol
cli
cmc
dec
ins
pop
sar
jns
push
pop
adc
pusha
mov
sub
xchg
fstp
pop
ins
mov
dec
jo
(bad)
mov
xor
cmc
or
jge
das
mov
pushw
out
dec
jmp
ds
pop
and
jnp
popa
outs
fs
out
mov
mov
icebp
pop
dec
in
loope
popa
retf
test
cmp
loopne
xchg
sbb
cld
hlt
inc
rcl
rcr
stos
sub
inc
js
out
inc
sbb
int3
and
mov
lods
jecxz
aaa
jb
rcl
(bad)
xor
adc
adc
enter
pop
add
lea
imul
mov
jno
rol
push
dec
aam
shr
sbb
xlat
(bad)
dec
sbb
xchg
enter
jl
push
repz
adc
jle
push
sbb
or
xchg
cmc
push
sahf
aaa
pop
neg
mov
add
lods
mov
scas
xor
pop
dec
dec
push
and
inc
mov
push
gs
not
jmp
adc
or
lds
adc
dec
in
xchg
(bad)
ds
inc
mov
movs
dec
jbe
lods
dec
jmp
bound
mov
es
mov
test
into
cpuid
pop
pusha
loopne
ja
xchg
sbb
or
stos
fmul
mov
xchg
mov
xor
jg
test
add
push
mov
scas
and
add
cmp
pop
push
sbb
test
call
adc
push
fnstenv
jecxz
fs
daa
cmc
lods
dec
pop
and
push
inc
hlt
cmp
mov
mov
cmp
inc
data16
cmp
bound
jb
lahf
test
mov
jno
add
hlt
out
ss
fisub
inc
sub
pop
inc
push
pop
or
fmul
sbb
clc
jb
xor
cmp
(bad)
and
push
mov
(bad)
push
mov
mov
xchg
push
(bad)
jp
jae
in
mov
mov
loope
sub
(bad)
ror
push
sub
xor
mov
idiv
adc
or
mov
outs
repnz
jmp
dec
imul
inc
and
stos
cdq
inc
push
xlat
ds
mov
cmp
nop
mov
call
rcl
pop
cmc
or
ins
sub
sub
push
ds
push
xor
leave
jmp
mov
(bad)
sbb
jmp
mov
enter
ret
push
outs
pushf
and
mov
jae
fmulp
iret
loopne
xor
aaa
hlt
fsubr
loopne
rcr
mov
stos
dec
es
mov
in
jecxz
cwde
adc
pusha
xor
iret
cwde
cwde
cmp
pop
outs
jmp
push
test
dec
push
rol
in
sbb
stc
push
dec
xlat
and
mov
and
jb
fdivr
lods
sbb
cwde
out
and
enter
mov
xlat
iret
and
in
or
mov
in
fwait
jg
push
cli
js
cmp
cmp
sub
add
xor
sar
out
outs
scas
xchg
arpl
cs
mov
sub
aas
pop
shr
mov
jns
in
call
sub
inc
mov
pop
leave
stos
test
jbe
push
cld
jnp
pop
lea
cdq
(bad)
out
push
dec
lds
adc
(bad)
jl
mov
xor
or
movnti
stc
pop
aad
mov
pop
jle
jo
sahf
rol
call
xlat
cmp
adc
ss
(bad)
jmp
adc
mov
jecxz
int3
adc
repz
fdivr
ret
add
cmp
jns
arpl
mov
or
aas
pop
push
xchg
push
pop
fild
mov
pop
xor
mov
adc
gs
push
les
scas
jno
int
pop
call
mov
xchg
pop
push
mov
data16
cmp
jecxz
cmp
dec
daa
mov
push
mov
and
ds
pop
popa
mov
iret
addr16
jns
in
mov
call
mov
inc
push
enter
stos
xchg
mov
push
es
or
jg
jecxz
push
inc
sar
sub
aad
fnstenv
outs
movs
hlt
fidivr
in
xchg
sub
rol
adc
adc
addr16
and
jle
loopne
retf
cld
xor
cmc
scas
dec
jb
sbb
push
mov
jl
mov
mov
std
dec
sahf
sbb
ins
xchg
fisub
mov
clc
repz
cmps
push
hlt
lea
or
int3
mov
loopne
cmps
aas
in
pop
mov
cmc
add
jmp
pop
inc
daa
popf
test
mov
push
sub
sub
mov
shr
pop
pop
mov
in
and
sbb
fld
jl
loop
aaa
push
retf
adc
jns
sub
imul
xor
lods
pop
dec
scas
cs
call
pop
xor
lea
mov
inc
repz
shr
push
test
outs
mov
xchg
inc
jb
iret
mov
mov
mov
movs
push
stos
pop
dec
(bad)
std
std
mov
push
sti
add
mov
jo
push
adc
or
shl
xchg
int
add
inc
adc
call
ds
aam
pop
enter
in
cmp
or
ret
rcl
sub
pop
stc
rol
pop
push
aad
cmp
lods
xchg
pop
and
movs
inc
add
lock
(bad)
stc
pop
xor
scas
push
test
outs
xchg
shl
or
inc
fisttp
mov
(bad)
je
das
jo
pop
dec
lds
or
hlt
push
bound
xor
xor
dec
mov
test
leave
or
pop
mov
cmps
loope
jg
js
ja
mov
mov
add
dec
outs
fs
mov
gs
xor
pop
pusha
ficom
call
enter
xchg
stos
mov
and
mov
and
jbe
sub
cmps
xor
(bad)
pop
clc
push
pop
xchg
out
movs
pop
movs
jns
pcmpeqw
fimul
pusha
inc
je
inc
push
sti
jbe
fdiv
sbb
push
popa
cmc
call
cld
xchg
and
adc
call
repz
cmps
test
jmp
pushf
ins
icebp
clc
out
bound
mov
xor
xchg
mov
iret
mov
fwait
mov
movs
sub
xor
packssdw
mov
into
adc
lods
ror
hlt
lea
xor
push
out
adc
out
xor
inc
mov
in
clc
outs
test
inc
dec
adc
push
mov
dec
daa
push
sub
cdq
(bad)
fstp
js
or
pop
xor
out
xchg
retf
movs
inc
cmp
cmp
mov
jecxz
jne
jp
xchg
data16
push
das
fld
jp
lahf
add
cmp
dec
loop
mov
stc
ins
pop
pop
(bad)
lods
adc
pop
(bad)
pop
add
add
ss
sub
loop
jmp
xchg
pusha
jo
ret
mov
in
jmp
push
mov
sbb
mov
jno
test
imul
inc
ror
mov
pop
int3
ins
xchg
jno
cmp
ds
add
or
xchg
xor
xor
mov
add
into
loop
sub
dec
cld
xchg
mov
out
cdq
mov
rcr
jae
sbb
push
dec
dec
dec
or
xchg
dec
mov
sbb
jmp
(bad)
inc
and
jno
call
fild
lds
sub
popf
inc
arpl
popf
mov
mul
bound
jbe
data16
std
jecxz
add
mov
inc
xchg
mov
jne
fmul
xor
lea
push
jmp
pop
xchg
cmps
data16
ror
inc
iret
(bad)
ss
popf
jns
adc
sbb
cmps
(bad)
mov
dec
pop
lahf
fdiv
add
sbb
dec
nop
dec
rcl
dec
int3
loope
sub
les
les
popw
scas
and
pop
sbb
pop
dec
dec
dec
jmp
pop
mov
sub
cmp
cmps
je
cmp
fsub
push
mov
(bad)
movs
call
cmps
inc
mov
sti
jbe
imul
imul
rcl
pop
cwde
xor
push
xchg
fmul
mov
pop
icebp
xchg
add
les
inc
pop
push
ins
adc
adc
je
jb
aas
sbb
shr
inc
pop
dec
xor
aaa
add
(bad)
retf
and
cdq
or
dec
bound
pop
aas
push
lods
or
mov
ror
mov
dec
xchg
aam
pop
and
out
and
ja
mov
xchg
dec
cs
inc
in
sbb
popa
add
fdiv
pop
jb
ret
jmp
sbb
cs
xchg
inc
xchg
stos
out
mov
mov
ja
sub
push
or
jo
cwde
cli
pop
jg
movs
iret
mov
cs
jo
jecxz
add
mov
mov
les
into
(bad)
cmp
sbb
push
jbe
shl
xor
je
movs
jl
int3
and
pop
or
clc
push
movs
adc
std
dec
leave
xchg
push
ins
sbb
icebp
shl
ins
or
rcr
std
fisubr
xchg
mov
or
jmp
fwait
rcl
fs
cmp
aad
repz
cmps
retf
lea
clc
mov
and
jns
adc
(bad)
add
rcr
into
iret
and
pop
shl
push
push
inc
aas
mov
aas
pop
inc
xor
fucomip
xchg
pop
sbb
stos
dec
fucom
mov
pusha
loopne
adc
mov
movs
gs
or
aas
mov
sub
add
imul
adc
retf
sub
lahf
mov
or
leave
add
xchg
or
and
repz
dec
xchg
je
nop
inc
push
outs
jae
adc
es
push
push
ja
popf
jbe
dec
dec
(bad)
xor
mov
int3
pop
inc
inc
xor
sbb
call
sub
std
jg
xor
in
push
mov
xlat
xchg
mov
add
dec
or
xor
cmps
and
ret
mov
sbb
jae
enter
xchg
in
xor
pop
aaa
xor
or
jns
and
fidiv
test
dec
add
mov
ds
cmps
iret
mov
mov
xor
pop
or
and
inc
outs
mov
push
add
test
mov
push
xlat
adc
inc
xor
nop
inc
or
es
dec
cmp
sub
outs
xchg
add
xor
fcom
jnp
push
xchg
leave
xchg
addr16
in
push
pop
or
mov
sti
sar
mov
sbb
mov
pop
add
jmp
dec
push
bsr
fnsetpm(287
outs
or
inc
test
idiv
test
loop
test
push
aas
cmp
int
pop
rcr
push
pop
jmp
test
gs
mov
enter
pop
cmovle
aas
dec
push
lock
ins
xchg
repnz
add
dec
loop
out
adc
(bad)
fwait
in
cwde
sub
add
pop
sar
inc
inc
and
js
mov
popf
xchg
fcomi
out
mov
sub
test
pusha
jae
xor
mov
lods
xchg
push
aad
inc
aad
push
imul
(bad)
call
arpl
mov
in
cmc
ins
pop
int
cli
pop
mov
push
sahf
jmp
loopne
or
rcl
imul
out
fidivr
sbb
sub
jae
jo
cmp
cmp
or
aad
cmp
not
add
push
dec
xor
cmps
pop
push
sub
add
bswap
jmp
shl
push
dec
sub
fisttp
in
mov
lahf
xchg
push
loop
jmp
dec
out
inc
div
in
jns
jb
icebp
sbb
les
jae
test
les
mov
mov
push
push
stos
(bad)
in
inc
jmp
shl
inc
cld
adc
stos
fistp
fmul
push
es
lods
mov
and
stc
and
lahf
xor
push
out
pop
lds
ror
xor
pop
call
js
mov
jecxz
fs
pop
leave
add
bound
inc
shl
ins
inc
pop
xchg
mov
dec
jecxz
lock
scas
js
jno
xor
mov
xchg
and
and
hlt
cmp
sub
jnp
cmp
sbb
or
ret
push
stos
xor
je
and
rcr
adc
mov
loope
enter
std
pop
jae
mov
ds
cmp
ja
pusha
mov
add
adc
pop
stc
and
add
stos
push
movs
mov
ins
mov
ja
push
icebp
push
pop
mov
test
pop
pushf
xchg
jp
imul
cmps
cmp
lds
stos
in
sar
adc
sti
in
cli
pushf
scas
add
or
dec
pop
ja
jl
lods
sbb
(bad)
sar
jle
xor
jg
and
add
rcl
sbb
arpl
pop
sbb
mov
xchg
sbb
mov
push
and
xor
std
push
(bad)
dec
sub
out
faddp
sbb
rcl
inc
retf
inc
sbb
pop
lods
cmp
loope
lea
fisubr
pop
lods
(bad)
jb
pop
sti
lods
mov
icebp
ins
fstp
inc
jns
imul
out
dec
pop
mov
xor
test
inc
pop
fild
mov
imul
xchg
jp
jns
mov
sbb
mov
push
pop
rol
jmp
(bad)
xchg
mov
arpl
mov
jb
push
shl
rol
and
leave
stc
jae
loopne
in
push
push
(bad)
gs
inc
push
cs
mul
mov
pop
lea
rcl
mov
test
ja
add
add
sub
into
test
adc
jae
jns
cmp
jge
and
mov
fs
mov
icebp
test
dec
dec
mov
popf
adc
std
cmp
mov
push
xchg
cmps
push
sar
xor
inc
arpl
pop
out
enter
and
jecxz
add
add
jecxz
aad
lods
or
rcr
scas
xor
xlat
dec
div
and
test
push
cdq
loopne
sbb
pushf
pushf
jmp
jno
pop
xor
popa
mov
and
jo
mov
(bad)
out
and
mov
or
push
push
jmp
nop
xor
js
push
sbb
cmp
(bad)
or
outs
lock
out
mov
jns
xor
gs
in
mov
or
xchg
jns
rcr
mov
mov
outs
imul
jl
xchg
iret
stos
ret
sub
jne
(bad)
mov
push
cmc
jae
paddsb
push
ret
aaa
aas
mov
aaa
jbe
mov
not
dec
dec
neg
neg
retf
popf
add
xchg
test
push
push
xchg
inc
int3
nop
push
cld
(bad)
push
mov
sti
xchg
movs
ds
push
nop
push
pop
mov
mov
(bad)
gs
pop
cmp
retf
cmp
std
ret
sbb
dec
jmp
fild
pop
jbe
popf
iret
xchg
and
fldenv
lods
mov
sbb
dec
or
mov
and
inc
mov
pop
(bad)
cmp
stos
sub
push
inc
adc
lods
stc
js
xor
add
daa
mov
test
(bad)
sub
xor
sbb
dec
inc
xchg
fidivr
mov
inc
inc
inc
inc
daa
mov
sbb
daa
push
adc
inc
xlat
mov
test
scas
pop
jbe
xchg
mov
xchg
push
xchg
xchg
test
rcr
jo
xchg
mov
je
adc
jmp
dec
dec
aaa
xor
cld
mov
call
imul
xchg
fldcw
inc
dec
mov
bound
test
int3
pop
mov
pop
imul
icebp
mov
imul
jne
(bad)
jge
bound
sub
inc
ds
or
add
test
sbb
ret
sbb
adc
cmp
in
sub
add
and
fistp
sbb
test
jb
out
out
jecxz
push
cmps
dec
repz
jecxz
dec
into
loope
push
nop
jae
popf
arpl
lahf
add
cmp
mov
outs
loop
cmp
cmp
pop
fadd
xor
sub
test
jmp
push
adc
jge
ret
cmp
out
dec
mov
add
ror
inc
mov
and
inc
xor
lods
or
fstp
or
ret
cli
xor
aaa
aam
imul
mov
into
add
jmp
loop
jge
sahf
fwait
retf
pop
fstp
jle
xchg
nop
(bad)
(bad)
cli
fistp
mov
fwait
pop
ret
out
aas
xor
jbe
xchg
div
jo
scas
sbb
sub
stos
cs
into
test
cmp
mov
icebp
fsubr
mov
push
xchg
data16
jp
hlt
inc
mov
clc
sbb
xlat
cwde
sbb
xchg
lods
and
inc
inc
and
movs
push
cmp
sbb
or
retf
in
inc
dec
cmp
jl
jle
fs
and
in
repz
outs
push
sti
enter
mov
test
xor
aam
(bad)
stc
pop
sub
icebp
xchg
lods
lods
dec
jmp
lds
mov
leave
test
jmp
mov
cwde
aam
jnp
jb
push
adc
neg
inc
cvtps2pd
lahf
lahf
nop
(bad)
cmps
enter
add
jnp
pop
xor
mov
ret
mov
cmc
in
xor
xchg
cwde
mov
jo
pop
cmp
emms
ja
in
xchg
jmp
test
or
mov
cmps
push
cmp
ins
adc
sub
xchg
hlt
cmp
mov
xor
mov
jne
push
add
aam
sbb
mov
adc
or
nop
push
cmp
inc
cmp
sahf
mov
xchg
mov
xor
inc
adc
stos
push
popf
dec
mov
add
out
mov
aas
ins
xor
mov
clc
iret
out
lock
push
push
mov
jmp
test
sbb
lds
loopne
rcl
cld
lods
fbld
jnp
or
or
jl
lods
(bad)
ins
xor
sbb
inc
in
out
outs
add
mov
jae
jecxz
enter
cli
xor
add
sbb
int
js
cmp
mov
out
ret
sbb
test
in
mov
jmp
and
add
cld
and
int3
jg
aam
iret
jmp
push
sub
scas
shr
xchg
int3
sub
test
shl
iret
jmp
not
sbb
or
sbb
dec
std
dec
xchg
pushf
in
dec
pop
xchg
fild
cmp
mov
mov
mov
imul
add
adc
inc
stos
sbb
mov
add
scas
call
test
mov
in
fwait
pusha
arpl
xor
das
sbb
sbb
cli
push
ja
shl
jno
adc
daa
outs
inc
loop
pop
adc
cmc
(bad)
sahf
sub
and
(bad)
shl
mov
loop
in
sub
add
rol
(bad)
xchg
mov
mov
scas
stos
add
xor
push
push
inc
test
pop
cdq
sbb
cs
shl
mov
outs
pop
add
popa
addr16
lds
dec
sub
(bad)
mov
popf
sub
add
aaa
add
loopne
pop
cdq
hlt
mov
mov
xchg
(bad)
cmps
or
(bad)
lods
imul
inc
or
mov
add
sbb
xchg
adc
popa
push
adc
jl
xor
dec
lds
jae
or
in
xor
rcr
or
xchg
push
sti
loope
xor
or
cmps
inc
xchg
adc
enter
and
je
das
or
fdiv
retf
dec
aaa
sti
std
neg
pmaddwd
cmp
je
sub
mov
into
fdiv
push
dec
dec
pop
add
das
mov
out
add
lods
inc
inc
stos
sub
in
imul
mov
xchg
movs
ror
mov
lods
add
(bad)
(bad)
jns
cli
int
inc
int3
aam
xchg
lods
xor
aaa
pop
ss
mov
mov
mov
pop
movs
icebp
sub
push
out
sti
mov
push
sti
in
xor
xor
jo
nop
mov
push
cmp
outs
out
mov
std
add
xor
adc
jmp
retf
popa
jbe
test
shl
adc
add
daa
stos
aam
mov
mov
xor
test
cmp
push
push
cmp
(bad)
xchg
mov
out
or
sub
adc
or
xor
mov
mov
jmp
pop
dec
adc
inc
and
dec
mov
repz
or
and
pop
cmp
sub
stos
dec
loop
xor
loop
jp
or
nop
add
sub
mov
jmp
push
mov
cmps
bound
add
push
rcr
scas
adc
out
cdq
mov
lods
cld
sbb
js
pop
pop
push
(bad)
mov
popf
sub
sub
aaa
pop
daa
mov
aad
ss
lmsw
jg
into
shl
scas
outs
aad
mov
inc
retf
gs
mov
jne
mov
in
fdivp
(bad)
mov
adc
xor
pop
ret
retf
aaa
cmp
loope
xor
shl
or
jo
sub
inc
out
sar
aaa
adc
nop
bound
nop
mov
push
pop
aam
inc
scas
mov
sbb
mov
call
loop
outs
and
shl
adc
jmp
sbb
mov
xchg
sub
pop
imul
loopne
ds
arpl
in
cmp
mov
jnp
aam
sub
or
rcl
mov
and
adc
jo
rcr
adc
jmp
(bad)
xlat
mov
push
cmp
out
add
mov
adc
inc
or
or
ret
xor
push
rcl
movs
jle
and
fiadd
scas
dec
jge
xor
sbb
or
out
mov
mov
punpckhdq
fcom
jne
retf
xchg
pop
pop
or
xor
push
(bad)
push
xchg
fild
(bad)
cdq
sub
inc
cmp
pop
fadd
adc
xor
jmp
jne
push
(bad)
dec
adc
add
mov
pushfw
mov
dec
fcomp
(bad)
lods
mov
mov
dec
mov
xor
add
sub
jecxz
outs
lea
in
ss
push
jg
cmp
stos
imul
test
lea
add
xor
pop
aad
inc
test
aad
out
movs
sbb
retf
je
mov
adc
and
sti
mov
aas
sub
leave
arpl
push
cmc
dec
(bad)
sub
cs
shl
push
pop
out
jge
pminsw
adc
push
aas
adc
call
retf
pop
arpl
movs
inc
cmp
or
sahf
xor
mov
or
mov
xchg
jecxz
adc
in
dec
outs
(bad)
push
inc
bound
push
movs
pop
out
xor
in
lea
icebp
hlt
jns
pushf
lds
repz
mov
shl
iret
test
xor
cmp
jge
test
ds
nop
lea
ds
retf
gs
sbb
js
fwait
cmovne
aam
fild
mov
and
mov
popa
ins
add
adc
movntq
dec
xor
mov
mov
adc
add
xchg
cmp
in
mov
icebp
mov
into
adc
xchg
fiadd
stc
mov
psubq
shl
in
jl
mov
shl
jl
pop
xchg
gs
iret
call
xchg
pop
fsub
(bad)
mov
lea
xchg
int3
stos
sub
ret
retf
adc
cmp
ds
ins
jno
sbb
xchg
mov
dec
outs
inc
dec
iret
vpmacsswd
inc
or
stos
movs
out
sti
ret
lods
xor
and
jg
and
adc
sbb
cmp
mov
gs
retf
and
std
in
or
test
mov
call
(bad)
xchg
js
int3
lock
mov
push
mov
adc
inc
(bad)
push
dec
pop
sub
fstp
adc
test
inc
(bad)
mov
dec
adc
(bad)
cmp
fidiv
xor
push
fnsetpm(287
cs
push
push
mov
mov
dec
mov
and
mov
rcl
aas
ficomp
and
enter
adc
mov
popa
xchg
sub
fstp
xchg
cwde
push
fwait
ins
mov
enter
adc
cmp
std
sub
dec
jns
idiv
ficom
ds
pop
aaa
sub
nop
shr
cwde
adc
jg
cmp
neg
and
adc
push
lahf
outs
jl
jmp
and
mov
sub
or
adc
adc
or
lock
outs
movsx
pop
sub
and
popa
in
mov
xchg
mov
adc
out
ret
push
jp
cmps
loopne
js
jbe
dec
fadd
pop
pop
dec
mov
cs
inc
enter
xchg
in
cmp
pop
sbb
sub
inc
xor
mov
movs
mov
shl
or
movs
mov
das
push
in
stc
iret
xchg
fldcw
mov
jg
pop
inc
and
sub
xor
pop
loope
xchg
movs
sahf
adc
add
sbb
xchg
jl
push
aam
and
xchg
or
pop
sti
and
in
bound
push
inc
repz
add
ret
in
adc
add
and
aas
(bad)
or
(bad)
mov
jle
add
stos
inc
pop
inc
xchg
pop
xchg
push
fdiv
dec
jb
jno
jns
(bad)
test
dec
pop
jmp
addr16
sahf
xor
scas
loopne
dec
pop
mov
mov
dec
outs
pop
je
rcl
lahf
push
push
neg
adc
mov
pop
xor
inc
pop
std
ror
sti
adc
stos
cwde
into
cmc
pop
stc
popf
dec
test
inc
push
out
cs
call
xor
pop
cmp
push
outs
xchg
cmp
mov
repz
mov
(bad)
and
dec
loope
movs
loop
pop
popf
mov
adc
sbb
pop
cmp
xchg
sub
push
mov
stos
inc
mov
push
xlat
cld
fcomp
xchg
push
jle
test
aaa
or
frstor
shl
shl
jecxz
sub
sbb
adc
fst
retf
jmp
jmp
or
repnz
mov
push
lea
push
adc
push
cmp
jle
mov
dec
ret
loope
adc
xor
pop
pop
mov
adc
jae
retf
xor
mov
pop
int3
cmp
sar
fidivr
pop
and
in
cmp
or
jmp
push
mov
rcr
xor
xor
inc
imul
dec
xchg
push
js
shr
scas
loopne
mov
xchg
and
xchg
test
cmp
or
push
movs
add
xchg
jne
jae
pop
das
xchg
xchg
mov
stos
mov
push
mov
and
(bad)
jne
fisttp
pop
or
outs
sub
pop
adc
lahf
xchg
mov
sub
outs
xchg
sbb
push
pushf
aas
sti
test
repz
out
leave
cmp
xlat
sbb
inc
cmc
pop
stc
ret
test
mov
jbe
jnp
adc
pop
xchg
mov
(bad)
dec
or
jle
mul
jbe
out
out
outs
shl
pop
arpl
cmp
cmp
test
pushf
shl
mov
nop
ss
cmp
dec
pusha
xor
push
aaa
dec
pushf
div
or
repnz
xlat
pop
movs
adc
repnz
dec
outs
gs
cmps
iret
sbb
push
sbb
inc
aam
repnz
imul
cmps
jmp
inc
push
ja
inc
adc
sub
pop
cmps
xchg
push
fdiv
xchg
dec
sub
(bad)
push
push
test
(bad)
ins
test
add
test
xchg
inc
cmps
mov
dec
sahf
xor
lods
loope
loop
stos
not
loope
icebp
test
xor
and
sbb
pop
loopne
sub
push
cs
sar
xchg
xchg
frstor
dec
dec
mov
in
cdq
dec
in
(bad)
rep
jno
jnp
dec
mov
in
and
movs
mov
imul
sahf
mov
dec
test
int
inc
mov
push
mov
and
sbb
inc
aas
adc
pop
jmp
mov
jb
mov
adc
dec
ss
pop
adc
clc
pop
push
out
xor
fild
sbb
jae
ins
push
(bad)
mov
add
jecxz
adc
sub
pusha
mov
sbb
push
in
adc
jmp
push
test
arpl
push
dec
stc
div
das
jmp
xchg
test
iret
dec
into
std
adc
inc
mov
pushf
and
xchg
jne
sbb
xchg
cli
je
bound
out
xlat
xlat
xchg
dec
jb
jmp
jg
cmp
gs
out
test
sbb
mov
cmps
mov
sbb
cmp
jbe
repnz
lods
inc
mov
pop
fisttp
mov
mov
and
retf
push
mov
push
(bad)
cmp
rcl
mov
mov
xchg
test
mov
jo
mov
or
jl
add
pop
lods
(bad)
dec
mov
in
jmp
mov
sbb
enter
in
push
pop
in
xchg
scas
add
and
pop
sbb
inc
pop
add
xchg
test
xchg
inc
dec
sti
sbb
sub
pop
mov
icebp
mov
outs
pop
fcmovne
mov
push
push
pop
clc
(bad)
jno
or
jns
call
scas
mov
popa
mov
inc
xchg
mov
daa
in
mov
xchg
(bad)
sub
out
std
and
rcl
pusha
sbb
imul
xor
push
repz
pop
jno
fwait
cmp
jb
jns
add
enter
jl
rcr
push
adc
dec
(bad)
jnp
fxch
cmc
lods
mov
test
mov
dec
pop
xchg
adc
mov
and
dec
dec
(bad)
les
lea
into
sahf
pminsw
sub
es
out
inc
push
int
inc
inc
rol
and
mov
int3
mov
hlt
pop
test
xchg
scas
or
iret
jae
pushf
jle
adc
cmps
jns
sub
dec
adc
jmp
cmps
in
stc
pop
bound
jbe
jns
mov
jae
popf
repnz
cmp
dec
div
xchg
cdq
ror
repz
iret
cld
ja
or
sub
(bad)
or
inc
scas
hlt
fdiv
bnd
sub
xchg
jecxz
mov
out
repnz
ds
fwait
push
push
adc
push
xor
(bad)
neg
arpl
cdq
lock
or
ins
(bad)
jp
pop
or
push
inc
adc
dec
add
add
and
xchg
and
or
nop
out
scas
and
in
cmp
push
mov
outs
or
mov
cmp
xchg
cmp
sbb
(bad)
out
aas
mov
add
lods
lea
pop
ret
xchg
push
pop
leave
test
push
mov
xchg
mov
xor
stos
stc
xchg
arpl
or
push
(bad)
sti
out
sub
pushf
std
push
pop
loope
mov
iret
add
bound
and
jae
(bad)
retf
aad
pop
cmp
aaa
sub
ds
push
and
mov
push
and
pop
(bad)
shr
sbb
jmp
cmp
stc
(bad)
aaa
inc
ret
sar
es
and
lods
mov
xor
ja
ret
pop
out
xor
out
pop
jb
mov
aam
jecxz
inc
jge
mov
sub
loop
mov
aad
arpl
mov
lea
arpl
ror
pushf
sti
mov
cmps
mov
xor
and
pop
sub
test
push
cld
unpckhps
rcl
dec
loopne
mov
cmp
mov
in
and
test
or
xor
mov
and
mov
push
and
std
nop
push
xchg
in
in
in
(bad)
mov
dec
fcmovnb
hlt
inc
adc
fdiv
fisubr
mov
cwde
mov
push
xor
jb
mov
adc
mov
xor
es
lock
ins
je
test
les
ja
imul
neg
into
shl
mov
adc
ret
scas
ffreep
jae
sbb
shl
stc
neg
addr16
inc
aam
jecxz
push
js
mov
or
cmp
mov
les
pop
shl
xchg
es
mov
aad
pop
ret
jecxz
dec
fcom
loope
bound
ins
rcr
sbb
scas
mov
dec
cwde
push
xor
arpl
call
enter
imul
xchg
mov
or
jmp
movs
call
hlt
jecxz
das
pop
push
sub
stos
cld
in
aaa
shl
mov
adc
sbb
fxch
aad
out
xor
sar
mov
jne
test
push
sbb
dec
mov
into
imul
push
mov
mov
pop
dec
and
xchg
jl
fs
popa
mov
mov
(bad)
dec
retf
jp
fdivr
sub
mov
pushf
iret
pop
xor
(bad)
pop
fbstp
xchg
xchg
and
dec
repnz
mov
xor
push
retf
test
sar
sbb
sub
cmp
aam
jg
int3
push
dec
nop
movs
pop
xchg
popa
bound
push
dec
sbb
rep
add
out
or
mov
(bad)
daa
adc
inc
loope
and
inc
scas
inc
xchg
xor
inc
push
mov
mov
xor
out
xor
sub
das
or
fwait
(bad)
lods
xchg
test
mov
pusha
push
call
aaa
push
xor
loopne
scas
mov
cmps
mov
sub
mov
addr16
test
(bad)
xchg
arpl
fldenv
hlt
and
inc
pop
repnz
push
sub
pop
push
icebp
leave
loopne
jbe
(bad)
ins
cdq
push
jb
cdq
inc
xor
fwait
lods
add
js
mov
out
(bad)
push
es
retf
push
push
div
push
sbb
cmp
imul
xor
inc
in
fwait
and
jmp
iret
or
mov
add
inc
cmp
push
frstor
and
sub
sbb
pop
je
sbb
jb
dec
xchg
repz
jmp
iret
hlt
push
sahf
mov
xor
jecxz
xchg
test
popf
mov
fsub
clc
mov
dec
inc
fidiv
stos
pop
addr16
sbb
mov
mov
bound
sub
ss
mov
mov
loop
enter
cli
add
rcr
inc
(bad)
push
stos
sbb
xchg
pop
adc
inc
push
lea
aam
inc
(bad)
jb
xlat
loop
lahf
sbb
inc
(bad)
xchg
movs
rcl
stos
daa
mov
(bad)
scas
inc
pop
out
xchg
test
(bad)
mov
test
call
in
movs
push
inc
fwait
jmp
lods
(bad)
mov
sbb
mov
ins
add
push
inc
or
push
paddd
mov
sbb
sahf
arpl
jmp
push
daa
mov
fisubr
mov
xlat
push
jae
mov
(bad)
aam
pusha
sbb
into
push
fisubr
and
jmp
cmps
stos
cmc
lea
loope
stos
inc
call
in
imul
push
sbb
or
mov
pop
imul
and
stc
jae
aam
stc
out
(bad)
push
js
(bad)
fs
sbb
std
shl
add
inc
push
or
mov
retf
or
pop
jns
shl
dec
pop
pop
push
popa
jl
jbe
push
cmp
inc
mul
xchg
pushf
ins
xlat
jle
(bad)
mov
mov
sub
or
imul
mov
xor
dec
cli
in
dec
fs
inc
fs
jne
in
sbb
call
push
sub
xchg
pop
and
add
cmp
or
xor
inc
pop
sub
push
movs
mov
jae
jle
pop
retf
fld
and
cmp
adc
adc
inc
imul
(bad)
icebp
arpl
add
loop
rcr
pop
mov
sub
into
cmps
mov
xchg
or
add
das
dec
sub
xchg
mov
repnz
shr
sbb
xlat
fisubr
popf
cmp
cmp
pop
test
loope
out
or
loopne
lock
pop
adc
shr
repz
xchg
fdivr
pop
scas
dec
dec
in
sub
push
jl
out
push
inc
arpl
mov
push
jmp
addr16
jns
xchg
inc
pop
wbinvd
adc
call
bound
loope
(bad)
movs
fld
pop
xchg
(bad)
xchg
cmp
jbe
loop
imul
cmp
data16
into
xchg
push
aam
in
loope
mov
push
mov
lods
adc
push
mov
outs
or
jle
pop
add
inc
adc
cmp
push
out
scas
sbb
pusha
and
fmul
fwait
and
jmp
out
std
jecxz
mov
and
and
dec
lock
es
sti
xlat
sahf
mov
movs
jmp
inc
mov
clc
pop
cli
cdq
push
nop
fsubr
xlat
jle
push
sbb
nop
push
lahf
inc
scas
ret
es
mov
xchg
jg
or
das
sar
push
xor
push
mov
xchg
jmp
rcr
aam
cmp
or
enter
std
jg
xchg
ins
daa
jge
mov
or
shl
pop
pop
mov
or
mov
cmp
and
inc
stos
dec
inc
xchg
(bad)
mov
shl
ret
push
outs
dec
ror
cld
(bad)
fst
xchg
push
mov
outs
out
cmp
mov
pop
jnp
loope
rol
inc
push
and
cmp
xchg
mov
jns
test
add
dec
mov
popf
es
repnz
loop
or
clc
cmp
push
cmp
pop
das
and
mov
xor
icebp
sbb
dec
push
or
addr16
jnp
xchg
shl
sub
inc
cmp
neg
jns
dec
loop
mov
and
pop
test
inc
sub
fstp
push
aas
adc
jns
stos
test
jnp
pop
xor
ins
xchg
es
int
add
lods
test
push
cdq
shl
jp
mov
repz
fidivr
in
movsx
add
xchg
imul
int3
mov
loop
mov
dec
jle
jmp
jg
jo
out
mov
out
mov
ins
es
and
ret
out
iret
adc
out
fdivr
sbb
and
push
in
pop
int
and
movs
push
add
dec
das
sbb
ficomp
fcomp
jo
jns
push
mov
(bad)
jle
mov
xchg
mov
ss
popf
mov
mov
outs
pop
xchg
sub
sub
aas
jne
(bad)
iret
test
push
cld
lds
or
dec
inc
xor
mov
popa
hlt
jne
repnz
loopne
in
mov
ja
aas
jmp
xor
jo
mov
dec
outs
in
cs
test
fst
pop
adc
jg
idiv
and
jo
mov
mov
jns
xchg
lea
ja
test
pop
inc
test
pop
push
out
inc
jbe
repnz
add
(bad)
mov
out
add
cmp
sub
mov
rcl
pop
pop
retf
test
nop
xchg
test
mov
push
mov
xchg
or
cld
push
mul
mov
cmp
data16
inc
push
icebp
cs
mov
pop
aaa
cli
hlt
(bad)
push
mov
fidivr
adc
fsetpm(287
inc
mov
les
push
pop
dec
test
inc
mov
mov
mov
ss
ror
mov
push
jb
dec
or
fdivr
add
pop
inc
pop
repz
in
ds
xor
mov
hlt
lea
and
pop
cmp
sbb
loop
shl
push
les
and
outs
add
sbb
and
and
cmp
fsubr
rol
mov
movs
adc
(bad)
int3
cmc
jle
lahf
xchg
in
mov
xchg
push
dec
adc
jmp
leave
adc
shl
movs
ja
sbb
jne
pop
jecxz
clc
adc
xor
cwde
js
mov
inc
mov
mov
mov
sti
push
pop
(bad)
out
cmp
push
int
xchg
jae
cmp
mov
jp
pop
xor
push
(bad)
jmp
inc
popa
(bad)
cmc
or
jg
and
xchg
jae
enter
pop
cs
sub
dec
pusha
aaa
nop
xchg
and
retf
xchg
les
mov
mov
ja
not
mov
jmp
movs
sub
into
fwait
sub
cdq
sub
sbb
pop
daa
mov
inc
(bad)
cld
ins
pusha
gs
mov
mov
and
out
lods
lock
xor
rcl
movs
in
jo
test
push
nop
jle
call
or
in
lea
cmp
jae
sub
xor
xor
and
push
lahf
xor
in
lock
pop
add
clc
and
test
cmps
js
adc
and
adc
hlt
mov
addr16
call
dec
loopne
push
gs
xchg
imul
or
out
stc
and
mov
jb
cmps
pop
xchg
mov
in
cmp
ret
jle
ficomp
ret
and
out
sbb
xchg
add
xchg
(bad)
inc
xchg
or
retf
sbb
and
aam
loopne
cmp
popa
fs
mov
xchg
shl
clc
je
mov
scas
adc
push
movs
xor
dec
fistp
pushf
jbe
adc
cmp
sbb
fbld
mov
sbb
push
test
jge
mov
(bad)
mov
push
cli
out
sbb
addr16
sub
lahf
dec
dec
push
jg
xor
dec
inc
adc
sahf
push
loop
bound
stos
daa
sbb
mov
xchg
push
js
addr16
enter
xchg
jno
bound
mov
frstor
mov
shr
push
sbb
test
or
js
and
ret
pop
test
sti
ja
push
dec
or
mov
cs
jnp
sub
mov
adc
into
push
fcmovnu
cmps
mov
jb
and
sahf
cmp
add
inc
inc
xor
jns
out
inc
xchg
push
add
mov
pop
(bad)
inc
sbb
scas
jecxz
inc
ss
pop
stos
cmp
jbe
pop
pushf
sar
add
hlt
rcl
mov
arpl
mov
and
cli
mov
push
pop
push
adc
int
iret
inc
in
es
jge
inc
cld
aad
xchg
call
std
cmps
mov
movs
cwde
sbb
(bad)
sbb
mov
push
jns
sub
mov
cmp
ins
mov
add
push
xor
cmps
ins
shr
push
cmp
inc
leave
mov
test
lahf
jno
popf
jb
test
dec
cmp
xor
iret
xor
jmp
xor
inc
xor
push
add
mov
mov
mov
inc
dec
and
data16
sub
mov
inc
bound
lds
cmps
and
sub
dec
jle
xor
push
pop
fcomp
pushf
int
int3
enter
add
ins
lods
push
call
mul
lods
test
int3
dec
dec
mov
xchg
sbb
mov
aad
mov
daa
rol
mov
fwait
(bad)
xor
inc
addr16
xor
adc
call
outs
jecxz
clc
rcr
fisub
jbe
retf
adc
or
fwait
mov
jl
rcl
adc
iret
add
in
add
and
jmp
pop
and
js
movs
cdq
adc
dec
ins
imul
adc
aad
mov
jnp
loopne
out
push
mov
into
sbb
in
xor
fiadd
and
adc
and
mov
mov
cmp
jne
pop
cmp
and
out
cmc
mov
jg
(bad)
aam
das
jns
mov
mov
aad
add
xchg
in
pop
jmp
mov
jo
push
in
stos
mov
pop
jmp
pop
mov
push
stc
mov
sbb
adc
mov
xchg
xchg
aas
lods
movs
aaa
sub
xchg
cli
or
outs
imul
jmp
cwde
(bad)
div
emms
sub
lods
loope
sub
out
div
add
xchg
xchg
stos
jne
sub
xchg
pop
pxor
and
xor
dec
pop
out
into
(bad)
and
push
test
aam
std
rol
xchg
test
rol
cs
inc
clc
cli
sbb
jecxz
aad
fild
inc
push
repnz
repnz
mov
sub
retf
xchg
adc
scas
add
inc
shl
lds
aas
jns
mov
aas
cmp
adc
lods
add
inc
jmp
fidivr
inc
enter
nop
sbb
mov
bound
push
mov
in
popa
sbb
sub
sti
pop
jo
xor
jae
fnstenv
aas
push
sub
rcr
pop
cmp
iret
and
xor
mov
cli
sub
and
xor
add
push
imul
jno
out
push
scas
pop
icebp
adc
push
and
in
pop
cli
jnp
loopne
or
fwait
push
fmulp
popf
(bad)
(bad)
sbb
fs
or
pop
test
jnp
cs
sub
retf
pushf
mov
out
add
popf
clc
cwde
cld
mov
(bad)
cdq
mov
sbb
dec
pushf
sbb
scas
dec
push
push
sbb
inc
mov
(bad)
xchg
ja
mov
pushf
faddp
shl
dec
cmp
inc
xor
out
xchg
push
fwait
and
push
cmps
test
or
and
fcomi
outs
mov
outs
fbstp
mov
loope
xor
cmps
inc
mov
retf
jae
push
std
in
jmp
jb
xor
ret
test
mov
in
mov
inc
sbb
ret
jecxz
xor
mov
mov
mov
pusha
out
lds
inc
xchg
shl
adc
outs
sbb
sbb
xchg
fisttp
push
cmps
pop
jbe
dec
cmp
pop
pop
mov
das
test
jb
or
in
add
data16
add
cdq
sbb
pop
je
sbb
inc
jb
aam
xchg
xchg
imul
xchg
inc
mov
pop
mov
and
stos
mov
in
mov
jp
add
pop
sbb
fmul
mov
(bad)
push
out
add
pop
into
neg
jge
and
ins
in
and
out
in
add
pop
or
dec
add
adc
or
xchg
out
dec
jne
sahf
ja
fs
pop
loopne
aaa
mov
stos
mov
mov
data16
out
call
push
ja
jb
in
pop
xor
iret
aas
xchg
test
rcr
repnz
xchg
test
xchg
inc
xchg
or
outs
enter
sbb
jae
and
(bad)
and
fcom
icebp
fdivp
sbb
mov
cmp
in
fwait
pop
xor
mov
jne
xchg
and
push
imul
and
mov
outs
or
push
(bad)
xchg
aad
pusha
in
mov
inc
cmps
cmp
sub
push
pop
xchg
sub
int
mov
xor
adc
or
push
or
arpl
sbb
int3
idiv
pop
test
push
pop
fsubr
ret
cli
adc
jmp
dec
stc
dec
add
call
dec
inc
xchg
or
sbb
mov
dec
repz
sub
sub
(bad)
loope
jnp
daa
xchg
pop
popa
test
mov
sub
sbb
jbe
sbb
shl
sbb
or
ret
bound
xchg
sbb
cli
sub
adc
xor
mov
dec
pcmpgtw
shl
dec
add
lahf
xor
into
jl
test
outs
mov
dec
hlt
call
jnp
pusha
mov
fidiv
cmps
mov
addr16
jmp
popf
(bad)
jp
ins
xchg
out
cld
dec
xor
pusha
pop
les
fisttp
nop
lods
mov
pop
(bad)
push
lahf
pop
xor
add
mov
ror
int3
inc
mov
xchg
cld
retf
mov
mov
nop
aad
retf
adc
mov
mov
or
movs
pop
aam
push
sub
inc
mov
mov
fdiv
stc
mov
aaa
dec
scas
xor
jbe
mov
out
sti
out
add
outs
fmul
jge
inc
add
pop
sub
rol
sub
jmp
sub
mov
adc
add
ret
test
xchg
ret
retf
cmc
(bad)
inc
dec
xlat
xor
jmp
je
into
loopne
shr
mov
dec
pop
fcmovne
push
ins
inc
inc
mov
fs
fnstsw
dec
jge
mov
mov
inc
(bad)
dec
jmp
xchg
adc
div
aam
in
mov
aaa
jo
mov
xor
iret
movs
scas
leave
loop
fwait
adc
xchg
and
sbb
rcl
mov
jle
jae
loopne
std
push
shr
ret
adc
shl
test
dec
xchg
mov
out
lods
sbb
inc
(bad)
pusha
jge
loop
aam
mov
or
shr
pop
mov
test
push
sahf
mov
jae
xchg
mov
inc
sub
js
test
aaa
or
mov
and
push
pusha
jl
adc
sub
mov
or
enter
and
or
inc
out
fidiv
mov
gs
sbb
cmp
stos
push
in
jnp
stc
mov
das
mov
cmp
and
push
in
bound
pushf
fidivr
or
xchg
shl
mov
pop
fsub
fwait
rcr
push
adc
mov
movs
repnz
and
add
shr
xor
jecxz
dec
stos
test
(bad)
cli
call
mov
aaa
mov
lods
cmp
jne
mov
mov
(bad)
std
sub
retf
xchg
cmp
mov
adc
xchg
dec
cld
popf
rcr
pop
dec
aam
cmp
mov
int
and
in
push
pop
cmp
cmp
pop
les
push
push
xchg
mov
sub
pop
mov
icebp
sbb
jo
push
dec
fstp
adc
repz
sbb
xchg
jae
fnstsw
cmp
loop
inc
and
push
sbb
push
jns
cld
into
sbb
lds
sbb
and
cmp
fxch
leave
adc
mov
inc
xor
call
jmp
jp
cmp
adc
(bad)
xchg
popf
pop
std
add
stos
std
pop
pop
jns
cdq
cmp
out
outs
jnp
mov
jl
cmp
outs
inc
sbb
movs
xlat
outs
and
cld
mov
jg
adc
xchg
movs
cmp
pop
fiadd
das
not
pusha
cli
or
sbb
jb
stos
int
and
mov
ins
repz
jmp
int3
aaa
(bad)
push
inc
xlat
adc
dec
jecxz
jg
lds
into
add
call
mov
jmp
jns
fcomip
cmp
test
xchg
cli
outs
mov
add
aad
fldcw
out
out
clc
xlat
xor
scas
dec
loop
mov
xchg
pop
jmp
enter
cld
rcl
mov
dec
cmp
mov
jg
mov
in
adc
movs
enter
ja
lahf
sbb
or
(bad)
in
(bad)
cwde
daa
aam
clc
xor
aam
or
jge
jg
sub
mov
add
inc
mov
dec
lock
xchg
jb
fadd
xchg
neg
add
dec
popa
std
jge
fimul
jbe
push
dec
and
adc
sub
(bad)
cmp
dec
xor
pop
push
dec
shl
jle
mov
add
fcom
mov
mov
ror
jae
jnp
mov
sbb
cwde
aam
mov
pop
adc
or
clc
cmp
daa
cmp
dec
cwde
arpl
lods
fs
pushf
adc
fwait
int
dec
ja
inc
sbb
push
jg
ds
inc
pop
cmc
push
aad
mov
call
inc
push
mov
gs
or
fisttp
repnz
test
jno
lahf
push
or
push
rcr
daa
js
sub
test
jb
inc
popa
sbb
nop
mov
shr
ror
imul
cmp
inc
gs
mov
jae
aam
or
pop
mul
xor
jnp
sub
xor
jge
sub
mov
mov
sub
loop
imul
xor
out
mov
sub
push
ds
xchg
(bad)
out
nop
cmps
push
jle
sbb
shl
sub
mov
retf
pop
je
sti
push
out
xchg
(bad)
push
mov
rol
(bad)
push
inc
inc
stos
retf
scas
ins
and
stos
fs
fild
sub
pop
loope
sub
inc
rol
sub
add
lods
rol
lahf
movs
jecxz
stc
fild
push
shl
int3
call
adc
mov
lods
cld
xchg
xchg
js
cmp
adc
pop
mov
stos
mov
fidivr
out
ja
mov
mov
jle
xor
out
test
adc
sub
and
xchg
jns
ret
push
movs
int3
mov
daa
scas
in
xchg
lods
cmps
arpl
nop
sub
pop
mov
adc
push
(bad)
retfw
cmp
idiv
sub
icebp
mov
jbe
aaa
into
and
stc
pop
add
xor
mov
add
fs
data16
cs
mov
jmp
jne
fs
push
sti
inc
aam
xor
inc
inc
add
jbe
cmp
pusha
jecxz
cs
addps
add
fild
fstp
popa
pop
jmp
arpl
les
or
jae
pop
add
inc
jle
loop
(bad)
xor
test
repz
in
mov
in
jne
popa
xchg
sub
mov
inc
xor
cmp
jle
cmp
fdivr
push
(bad)
adc
std
xor
mov
dec
pop
neg
mov
mov
xchg
xor
adc
cdq
stos
imul
fistp
pop
pop
push
lods
fnstenv
mov
xchg
outs
xchg
sahf
add
push
cmp
xchg
xchg
div
fstp
test
mov
fs
mov
and
pop
sar
xchg
adc
repz
cmp
sar
fcomp
sub
ins
in
inc
in
mov
xchg
fidivr
mov
hlt
test
sub
jp
shl
lock
in
add
xchg
or
ins
jne
add
bound
sub
sbb
sub
fistp
sub
dec
jbe
add
sar
and
ret
je
fldenv
pop
lock
xor
jp
sbb
inc
cmp
shr
loope
add
es
inc
xor
mov
sub
mul
popa
dec
jbe
lods
add
mov
cli
cmp
call
pop
test
cmps
or
dec
test
or
cmp
mov
aaa
pop
lods
xor
dec
xchg
fwait
(bad)
leave
pushf
movs
sub
and
(bad)
lds
in
cli
sbb
sbb
gs
pop
push
mov
inc
add
(bad)
cmc
jg
jg
(bad)
imul
scas
leave
and
sbb
ds
je
push
in
cmp
in
ds
push
sub
out
dec
xor
bound
and
iret
mov
(bad)
jge
xchg
xchg
aam
shl
clc
pop
mov
arpl
arpl
mov
test
pop
sbb
dec
int3
cli
xchg
scas
pop
lock
loopne
in
aaa
xchg
shl
push
or
sub
stc
das
mov
lock
jns
push
adc
jmp
xchg
dec
cmp
ss
pop
xor
dec
lea
xchg
xor
jge
lea
jge
mov
jne
jo
pop
push
add
sub
data16
mov
bound
jle
fwait
jle
mov
jb
into
xchg
jne
cmps
jle
pop
fld
xchg
adc
sub
out
mov
xchg
mov
fidivr
add
dec
xchg
inc
sbb
jp
xor
dec
lea
adc
retf
inc
ins
sub
push
add
movs
pusha
test
sub
mov
jmp
pop
xor
dec
inc
cdq
jle
jb
xchg
je
pusha
xor
jmp
dec
mov
imul
push
nop
mov
add
out
retf
fmulp
pop
cld
jbe
(bad)
mov
dec
dec
adc
push
mov
jne
mov
aad
movs
cmp
aad
scas
xlat
inc
fisttp
lods
cmp
ins
sbb
popa
inc
cli
in
xchg
cdq
jne
pop
inc
call
inc
or
xchg
xor
xchg
pop
lods
loopne
jl
outs
jle
xor
lods
or
pop
clc
les
stos
xchg
cmp
xchg
mov
pop
or
xchg
mov
popa
fld
aas
mov
sub
retf
in
jbe
lds
test
scas
inc
or
cmps
jne
pop
sub
add
or
inc
(bad)
cmps
sub
pusha
xchg
hlt
jnp
dec
pusha
bound
push
pop
fwait
mov
xor
jae
imul
and
pusha
aad
jns
inc
jmp
aas
push
retf
add
outs
or
lds
(bad)
in
and
in
pop
mov
sub
mov
pop
test
clc
scas
in
inc
outs
fbld
retf
xchg
ja
push
fimul
jl
imul
fcomip
adc
push
sub
and
test
xor
das
aad
shl
imul
adc
or
pop
daa
sub
adc
inc
in
imul
inc
sbb
mov
pop
pop
fsub
test
and
sbb
pop
jb
es
mov
push
iret
push
inc
int
inc
xchg
add
int
outs
int
mov
mov
ret
inc
fild
jp
icebp
inc
adc
inc
loope
mov
ror
add
fidivr
(bad)
sub
leave
sub
jmp
les
add
push
mov
clc
popf
or
xchg
shr
lods
loopne
jmp
push
test
ret
cmp
leave
cmc
adc
fdiv
mov
add
data16
scas
push
jmp
retf
or
sub
clc
aas
push
inc
and
icebp
inc
es
rol
dec
or
lods
xchg
pop
xor
adc
push
dec
adc
ins
iret
int3
repz
jne
fdivr
daa
push
shl
jle
ins
and
mov
sbb
lock
fs
or
sbb
(bad)
add
repnz
cwde
adc
jecxz
cmp
ss
jl
stos
mov
in
mov
addr16
vmovshdup
repnz
mov
cmp
dec
sar
popf
dec
or
sbb
aam
into
dec
rcl
jo
mov
inc
inc
pop
leave
cmp
in
and
mov
jns
xor
nop
jb
out
(bad)
shl
add
fild
inc
jmp
sub
push
out
push
call
cmp
jno
data16
and
clc
push
mov
push
mov
jp
movs
and
(bad)
test
add
ret
dec
aad
fidivr
loop
add
outs
les
cmc
aas
out
cdq
jmp
pop
out
cmps
in
push
fist
jb
jmp
aas
fisttp
mov
ss
lods
sbb
ins
jl
neg
loop
das
pop
imul
mov
push
in
fucomi
jne
xor
aad
jb
inc
mov
adc
push
sahf
ins
nop
or
and
and
loop
mov
(bad)
fwait
push
sbb
outs
bound
lahf
movs
addr16
std
popf
test
stos
ins
data16
leave
mov
ficom
push
or
inc
sbb
movs
psadbw
pop
adc
dec
dec
pop
lahf
lea
adc
fiadd
jmp
sub
push
inc
add
and
retf
adc
xchg
mov
dec
inc
and
icebp
scas
sub
sti
das
sbb
lds
sbb
cmp
ds
inc
jecxz
fsub
cmp
cmps
xchg
ja
push
scas
mov
push
xor
and
scas
dec
pop
xor
mov
ja
push
js
stos
ds
es
adc
sub
adc
dec
(bad)
mov
adc
retf
lea
ins
inc
jp
sbb
xchg
jb
mov
nop
(bad)
fucom
push
inc
cmps
fptan
shr
inc
add
push
dec
pushf
sbb
jl
jg
adc
bound
loope
popf
push
add
loopne
test
lea
jb
test
mov
xchg
pop
cwde
adc
in
push
pop
mov
cmp
(bad)
mov
scas
in
ret
pop
and
test
cdq
(bad)
cmc
jecxz
sbb
sub
outs
popf
inc
dec
js
in
dec
outs
sbb
mov
xor
mov
sar
fs
out
pop
icebp
cwde
rol
ja
add
push
movs
jae
hlt
xchg
popa
mov
ja
mov
fwait
add
xor
inc
clc
movs
pop
icebp
mov
pop
jno
cmp
aad
in
mov
loopne
call
cmp
mov
or
fcomp
push
cmps
retf
jb
(bad)
sub
cs
(bad)
icebp
sbb
retf
jo
mov
xchg
pop
imul
jae
sbb
call
cmp
(bad)
jne
loop
cs
bound
inc
sahf
adc
sbb
pop
xchg
bnd
jno
sub
(bad)
jl
loop
bound
loopne
and
ins
and
stos
hlt
mov
pushf
dec
jmp
and
psrlw
loope
inc
shr
xchg
xor
fs
jne
jle
sub
popf
out
movs
xor
sahf
xor
imul
in
jl
call
inc
cli
lahf
jno
push
sbb
sub
idiv
pop
cmp
push
mov
jmp
push
test
stos
sbb
pop
xor
cmp
ret
push
data16
inc
test
and
add
and
ins
lods
inc
sub
sbb
scas
xchg
add
jb
imul
jnp
mov
mov
mov
ficomp
xor
jnp
adc
out
push
mov
es
pop
les
jmp
outs
scas
ret
sub
call
mov
loopne
ja
outs
xor
imul
call
cmp
or
stos
cmp
mov
shl
popa
mov
ins
js
mov
jae
outs
dec
sahf
xor
ss
pusha
stos
outs
push
aas
or
ds
jmp
mov
add
sbb
add
lods
je
pop
cmc
pop
addr16
cmps
ins
int
jg
sbb
inc
cmp
cmp
add
and
jg
ins
nop
pop
jne
jb
ins
ss
adc
aam
and
push
cmp
cmp
(bad)
sub
inc
rol
jae
(bad)
mov
push
inc
aaa
aas
iret
xchg
xchg
std
out
inc
in
daa
sub
sub
push
cmp
mov
mov
popa
jmp
daa
xchg
mov
mov
aam
add
adc
cmp
inc
and
add
ret
fsub
ins
jmp
and
inc
jge
int
adc
mov
int
mov
dec
pop
xor
ficomp
adc
clc
sti
sub
sub
js
(bad)
mov
repz
mov
pop
dec
fwait
sub
je
and
enter
and
(bad)
jl
leave
pusha
xchg
mov
jg
or
xchg
sub
jge
push
loope
mov
pop
mov
ss
pop
mov
repz
xor
hlt
add
dec
push
and
bound
jg
sbb
pop
dec
repnz
and
out
xchg
add
pop
mov
jg
sbb
ins
xor
cmp
fbld
aas
in
icebp
pop
pushf
bound
shl
sub
mov
sbb
ret
push
(bad)
out
mov
movs
mov
pop
push
sbb
inc
adc
mov
shl
mov
mov
or
or
popf
mov
stc
adc
fwait
sti
mov
push
aaa
in
mov
adc
cmp
mov
adc
push
sub
push
and
int
dec
scas
jg
add
adc
inc
les
cli
movs
mov
fcompp
out
lods
cmp
inc
adc
fimul
cmc
scas
mov
mov
mov
dec
sbb
cmps
scas
sahf
adc
dec
xor
loop
ret
test
fnstsw
aad
retf
das
pop
push
mov
xchg
dec
and
fnstsw
cli
lods
xchg
pop
push
mov
aad
or
push
jge
cmp
clc
stos
enter
(bad)
dec
popa
loope
pop
pusha
lods
or
arpl
add
inc
ja
sub
rol
ins
or
pop
(bad)
out
fiadd
cmp
cmp
js
inc
xchg
lods
adc
inc
stos
xchg
scas
or
dec
push
repnz
inc
inc
inc
pop
ins
add
adc
ins
add
cmp
xchg
popa
lods
mov
jle
push
adc
cld
mov
out
cmovl
ins
lods
fisttp
jp
(bad)
xor
jno
ins
inc
and
in
in
clc
sbb
mov
sahf
push
jmp
inc
retf
fs
nop
adc
sbb
pop
int
mov
xchg
rcl
inc
arpl
add
mov
inc
inc
inc
mov
mov
(bad)
jmp
mov
jg
cmp
ror
xchg
adc
add
rcr
sar
and
lock
sub
jnp
aaa
and
cmp
stos
imul
out
shr
or
sbb
popa
fwait
push
add
adc
pop
cwde
inc
push
retf
xchg
gs
xor
in
mov
cwde
mov
aas
xor
pop
mov
std
jb
sbb
and
push
dec
jb
popf
inc
sbb
pop
mov
aaa
and
push
add
loopne
or
mov
push
xor
push
and
test
or
ret
push
inc
mov
ins
ds
mov
dec
ds
stos
lods
xchg
or
dec
inc
jns
and
and
dec
xchg
add
or
fucom
out
loopne
adc
iret
das
xchg
jbe
out
adc
sqrtps
fs
mov
out
mov
rcr
cmps
cs
cs
inc
sbb
add
sahf
pusha
adc
data16
(bad)
fs
mov
jae
push
push
xor
ins
rcl
add
test
mov
mov
xchg
cmp
arpl
xchg
sub
jb
scas
scas
fld
and
sbb
je
mov
je
mov
fld
push
loop
movs
stos
fcmovbe
jo
xchg
pushf
add
and
cmp
ins
stos
inc
sub
mov
lahf
int
shr
int3
pop
cdq
movs
pop
sub
sub
jge
out
inc
mov
(bad)
fs
jle
mov
push
rcl
aaa
jmp
lahf
pusha
loopne
push
les
or
add
stos
shl
(bad)
lds
xchg
jp
mov
jle
dec
repz
aad
mov
push
aas
jne
add
hlt
ja
push
mov
add
sub
adc
in
and
pushf
sub
or
or
cmps
loope
lea
fcom
int3
adc
pop
cmp
or
and
lahf
mov
mov
mov
call
cmp
in
ja
inc
js
jno
stos
sar
ins
sub
fcom
pusha
or
ins
adc
outs
sar
or
add
mov
pop
mov
(bad)
cmps
mov
in
push
xor
in
xchg
jne
mov
clc
mov
loopne
retf
cmp
jg
mov
icebp
cmp
push
sbb
mov
cli
and
add
cmp
and
xchg
movs
sbb
sbb
sti
mov
or
inc
and
push
out
ins
jae
and
fs
mov
(bad)
movs
mov
outs
ins
xchg
mov
fisubr
xor
fimul
retfw
pop
sbb
dec
arpl
mov
cmc
push
or
push
fidivr
sbb
sub
push
add
inc
mov
ins
mov
loopne
test
mov
push
outs
out
fld
stos
push
push
(bad)
jge
fistp
push
add
jbe
jns
pop
mov
inc
push
ss
sub
push
xchg
stos
cmp
jmp
xor
jmp
and
scas
dec
mov
add
(bad)
in
jns
or
adc
outs
or
out
inc
push
mov
inc
idiv
std
fdiv
js
push
push
mov
pop
jl
add
cwde
inc
mov
mov
call
pop
jge
scas
mov
mov
popa
sub
outs
ror
cli
pop
(bad)
lods
in
aas
repz
pop
xchg
(bad)
ja
push
lea
mov
adc
rcr
add
push
mov
sbb
pop
push
inc
call
pop
pop
mov
in
shl
(bad)
es
test
pop
cmps
sub
xchg
aas
pop
push
popf
movs
mov
imul
jns
add
jo
cld
jl
test
adc
cli
lods
nop
sti
arpl
pop
inc
sbb
sbb
and
scas
jns
es
ret
dec
fnstsw
es
ret
dec
std
jbe
scas
fdivp
push
clc
jns
imul
inc
xor
pusha
cs
jecxz
pop
or
cmp
push
fbld
xchg
movups
and
push
dec
ret
adc
dec
dec
pop
cmc
jp
aaa
dec
imul
mov
push
mov
pop
xchg
sbb
out
(bad)
das
lock
adc
data16
adc
push
imul
inc
dec
sbb
cmps
push
bound
xor
cmp
jno
cmc
mov
cld
mov
sub
jp
or
and
sub
call
sub
cmps
pop
adc
(bad)
mov
sub
mov
or
mov
push
mov
push
jne
adc
mov
scas
xor
das
loope
dec
mov
mov
or
in
sbb
ja
pop
rol
pop
inc
mov
loope
fistp
and
(bad)
jmp
je
je
aas
xor
xchg
ss
jl
pusha
test
sub
dec
sub
or
loop
sbb
adc
inc
or
mov
in
lds
adc
or
mov
mov
dec
aad
leave
fldcw
push
push
pop
push
repz
mov
fsubr
int3
stc
hlt
xchg
jne
mov
loope
dec
iret
ret
das
xor
mov
mov
fcomp
out
jp
cmc
lds
jg
popa
bound
push
sub
mov
push
stc
mov
aaa
fld
pusha
mov
test
(bad)
jb
sti
int
fbld
pop
mov
fsub
aas
fisttp
cdq
aam
mov
jle
shl
inc
fimul
arpl
fcomp
sub
jl
in
cs
pop
movs
add
lahf
fist
pop
int
jae
call
fmul
nop
sub
aas
mov
add
std
and
out
fnstenv
lods
xchg
inc
pop
jecxz
pop
out
js
dec
mov
ss
outs
sbb
mov
add
gs
stos
fcom
les
pinsrw
cmps
push
shl
imul
les
jae
test
das
hlt
out
sbb
sahf
adc
or
ss
data16
jp
sbb
imul
mov
das
cmp
mov
sub
xchg
out
pop
fiadd
xchg
sbb
mov
movs
aaa
push
int
jb
adc
adc
pop
ror
push
fcomp
mov
inc
pop
ja
lods
mov
dec
mov
mov
mov
mov
lods
inc
adc
xchg
mov
hlt
mov
fs
mov
stc
popa
jecxz
jp
jle
push
xchg
iret
fidiv
addr16
cli
or
xlat
pop
xchg
push
sti
jns
mov
hlt
sub
pop
imul
ret
jns
aad
sbb
mov
jae
std
out
mov
ret
scas
dec
mov
dec
sub
mov
mov
cmp
pusha
loopne
mov
mov
call
fdivr
sbb
daa
sub
shr
and
push
addr16
scas
mov
cmp
xchg
mov
cs
jecxz
jae
les
xchg
mov
and
xchg
shl
pop
(bad)
add
inc
fild
mov
enter
adc
loopne
aam
pop
jle
sbb
jp
jp
pop
push
inc
inc
mov
jnp
lahf
out
cld
add
pushf
mov
cld
icebp
out
inc
mov
stos
fimul
bound
fistp
stc
mov
mov
xchg
dec
outs
gs
sub
inc
ret
fldenv
xor
lods
cdq
aaa
sub
dec
loop
ret
enter
push
clc
add
lods
cmp
mov
mov
push
and
int
fld
je
test
rol
test
sub
test
int3
ror
loopne
outs
pusha
pusha
aaa
push
test
mov
inc
repz
js
push
out
mov
adc
add
jns
pop
inc
fsubr
push
mov
xor
mov
jp
cmc
cmp
mov
jg
ins
test
pop
pop
popf
cmp
ins
cli
push
lea
add
jmp
or
cld
push
fcomp
int
mov
cmp
std
inc
adc
and
ins
lock
jb
ss
and
cmp
mov
xor
push
xor
push
mov
xchg
mov
fimul
pop
ds
retf
scas
fs
sar
rol
cmp
and
jbe
mov
mov
sbb
and
into
mov
(bad)
sbb
push
push
call
push
call
js
jne
scas
fs
imul
ret
sbb
push
push
dec
adc
outs
add
mov
and
cmp
adc
and
inc
cmp
dec
gs
and
iret
or
adc
dec
push
mov
arpl
out
mov
aaa
inc
aam
mov
sbb
sbb
ins
and
loopne
test
push
out
mov
mov
inc
jle
cmps
mov
es
mov
mov
popa
inc
mov
push
mov
rol
nop
into
daa
pop
inc
fldenv
lds
mul
jmp
inc
or
jmp
mov
cld
xor
lds
out
(bad)
lock
mov
pop
add
xor
cmps
js
xchg
push
sar
pop
mov
lods
jne
inc
fisubr
jnp
mov
rol
movs
dec
adc
sub
ret
and
mov
lock
and
push
add
and
fsubr
and
mov
icebp
pop
xchg
popf
mov
jo
repnz
sub
sub
mov
(bad)
dec
ret
mov
fcomp
pop
test
push
sub
or
leave
out
xor
frstor
(bad)
jg
cmp
adc
jmp
(bad)
or
cmp
push
ffree
out
ret
mov
dec
es
add
pushf
adc
fld
jmp
mov
dec
aad
cmc
and
push
xor
cmp
iret
outs
cdq
(bad)
jl
data16
dec
dec
fcom
add
xchg
repnz
dec
add
ja
imul
jb
adc
mov
cmp
popf
sub
movaps
shr
xor
mov
fwait
outs
out
leave
inc
and
inc
inc
mov
jb
call
push
test
outs
js
test
rcl
in
add
sub
call
mov
sub
dec
jno
adc
lds
retf
xchg
dec
loop
arpl
mov
stos
nop
jmp
inc
push
inc
inc
arpl
push
or
mov
mov
and
add
bound
jbe
inc
xchg
dec
adc
push
adc
push
mov
inc
mov
pusha
pop
mov
sbb
ret
clc
cdq
xchg
mov
and
lock
sub
repnz
or
repz
and
xchg
mov
(bad)
rcr
retf
jecxz
rcr
dec
pop
mov
jno
stc
enter
lods
mov
adc
test
call
mov
out
fild
test
lds
and
in
loopne
mov
inc
jl
xchg
mov
sub
mov
ret
bnd
jnp
pop
or
pop
mov
imul
test
repz
popf
pusha
mov
pop
xchg
sub
mov
les
out
movs
(bad)
sub
xor
out
xchg
or
xchg
inc
cmp
xchg
xlat
scas
jbe
fs
movs
mov
push
bound
dec
aaa
push
xchg
cmp
shl
adc
test
mov
out
cmps
ins
fisub
push
sahf
cmp
(bad)
push
cld
add
xor
adc
cdq
xchg
adc
arpl
(bad)
data16
sub
add
retf
push
stos
pop
aam
mov
or
pop
sbb
xchg
inc
dec
sbb
push
mov
xor
data16
imul
pop
loop
test
aam
cmc
mov
pop
sar
into
std
arpl
sub
mov
into
aas
xchg
retf
xor
sub
fwait
test
fist
cmp
fcom
push
es
and
lods
stos
inc
je
mov
loop
and
pop
mov
out
(bad)
xchg
dec
ret
mov
pop
cmp
or
dec
cmps
sbb
in
in
stos
adc
push
stos
aas
sub
rol
test
adc
mov
jnp
xor
repnz
mov
and
in
fadd
xor
mov
push
sbb
sbb
in
test
sub
jae
xchg
mov
addr16
mov
jne
cli
mov
ror
loop
or
inc
outs
sbb
stos
shr
dec
xor
leave
jns
push
out
jg
jmp
inc
fxch
pop
xor
inc
or
pop
cwde
sub
and
int
push
repz
mov
out
xchg
add
and
hlt
pop
mov
push
add
int3
sar
imul
inc
popa
dec
cmp
adc
jg
pop
mov
rcr
in
or
daa
pop
ret
jmp
dec
jo
retf
xchg
leave
aaa
jge
repz
sub
add
xchg
rcr
add
frstor
or
mov
inc
xchg
sub
pop
ins
cmp
ins
cmps
lock
pop
pop
mov
out
icebp
sbb
cmp
xchg
xor
sbb
push
jb
push
ss
mov
inc
xchg
adc
in
mov
scas
call
nop
jbe
mov
adc
jb
mov
(bad)
add
imul
lock
sahf
cmp
ffree
jb
add
xchg
mov
jno
data16
je
adc
in
outs
mov
add
and
cmc
dec
mov
jmp
mov
stos
sub
inc
pushf
(bad)
mov
or
aam
je
mov
movs
fcmovnb
in
mov
cs
ins
adc
and
enter
xchg
mov
mov
enter
or
inc
dec
outs
pop
dec
pop
add
repnz
xchg
pushf
push
jno
les
and
iret
fild
repnz
adc
inc
pop
or
push
mov
repnz
stos
movs
repnz
imul
dec
cld
adc
das
add
popa
xchg
inc
mov
xor
fwait
sbb
mov
stc
xor
fsubr
dec
pusha
cmp
rol
sbb
scas
pop
pop
mov
or
fldcw
inc
jmp
nop
push
xchg
addr16
jno
inc
sbb
fsubr
fs
pop
test
sub
retf
mov
inc
mov
lahf
ins
inc
les
in
jo
lea
jnp
jne
js
dec
sbb
xchg
stos
aam
lea
inc
stos
push
cmps
and
lods
push
loop
mov
lea
jecxz
inc
cmps
or
add
push
hlt
inc
sbb
mov
pop
ror
inc
fldcw
fdecstp
jns
jae
or
enter
pushf
lahf
aam
jno
arpl
mov
inc
les
add
iret
sahf
ss
dec
xchg
not
cdq
je
dec
xor
int
stos
clc
shr
fcomip
sub
jo
(bad)
lods
inc
inc
and
jae
loop
pop
outs
out
test
or
jp
xor
cwde
cmp
sbb
and
jmp
je
pop
popa
mov
call
mov
retf
es
fs
xor
mov
fdivr
push
mov
bound
pushf
movs
das
ins
sub
mov
ror
mov
sub
stos
jg
ss
(bad)
lods
js
inc
aas
jecxz
jo
sub
inc
cmp
inc
push
mov
hlt
test
add
mov
mov
aas
jno
pop
std
mov
ret
aaa
int
psubsw
sub
rol
ret
add
push
fisttp
add
mov
xor
push
ds
xchg
rol
sbb
add
xor
leave
test
call
and
xchg
test
push
bound
mov
push
js
push
lock
(bad)
fld
fwait
push
xchg
xchg
fld
xor
push
push
sbb
cmps
(bad)
push
mov
inc
cmp
xchg
movs
leave
mov
cld
enter
sbb
repz
jae
jl
jne
push
jp
stc
pushf
sub
dec
xlat
shr
pusha
jge
sbb
jne
push
cmp
loope
push
xor
xor
cmp
mov
adc
lahf
jle
jg
mov
dec
mov
inc
adc
push
arpl
sbb
mov
xlat
(bad)
pop
jmp
jbe
dec
cmps
xchg
aad
push
not
jns
addr16
sbb
push
rcl
jnp
xor
ret
or
jmp
in
loop
jecxz
push
outs
js
push
jl
outs
lahf
mov
mov
jg
cmps
in
data16
sbb
sub
mov
push
fstp
adc
xor
cmps
sub
push
aam
mov
adc
pop
add
js
(bad)
sbb
(bad)
mov
inc
cmp
out
popa
or
dec
mov
pop
jecxz
adc
dec
pop
nop
mov
(bad)
fadd
ds
push
lods
cwde
xor
gs
xor
inc
outs
push
inc
fwait
xor
pop
cmc
sbb
js
out
lods
pop
(bad)
leave
fs
icebp
les
xchg
push
mov
ds
push
test
int
mov
clc
sbb
push
ss
(bad)
fsubr
int
push
es
mov
pusha
test
pop
jmp
aaa
inc
dec
jae
cmp
enter
sub
outs
or
xor
jb
jb
neg
and
mov
jmp
xor
inc
sahf
jmp
mov
shl
add
(bad)
inc
sahf
les
jmp
aaa
mov
inc
add
movs
cmp
imul
(bad)
mov
cmp
fst
sahf
aam
gs
sbb
pop
std
popa
mov
adc
fisttp
aad
retf
mov
ins
sbb
dec
mov
xchg
popf
sbb
xor
sti
(bad)
jmp
rcl
es
or
mov
mov
mov
imul
and
pop
push
and
mov
jne
das
mov
sti
and
in
jmp
das
xor
in
pusha
cli
inc
jo
repz
retf
test
mov
jle
xor
rcr
jecxz
dec
mov
movs
sub
ins
sbb
fdiv
push
cmp
jne
sbb
cmp
push
es
icebp
stos
and
xor
call
mov
jns
mov
aam
cld
or
push
fwait
mov
ret
repz
ins
nop
bound
jns
fadd
cli
es
lock
lea
or
gs
aas
mov
clc
call
movs
or
xchg
cld
into
test
add
jg
pop
movs
fnstsw
mov
jg
sub
mov
jo
mov
mov
cdq
imul
cs
push
dec
fwait
mov
pop
bound
fistp
lahf
jecxz
xchg
cld
sub
in
and
addr16
ds
sub
imul
clc
push
loope
push
jle
mov
push
mov
push
popa
cmp
repz
dec
add
sub
inc
cmp
xor
jecxz
mov
stc
adc
mov
mov
pop
mov
push
std
jecxz
int
mov
xlat
jmp
jns
data16
mov
push
add
jb
xchg
and
or
shl
xchg
test
dec
sub
call
ss
jecxz
adc
push
push
mov
loopne
sub
imul
out
sub
xchg
std
dec
rol
ins
push
inc
dec
or
movs
adc
pop
ja
ss
fwait
and
cld
xchg
push
mov
and
sahf
loopne
call
cmp
std
loop
loop
or
movs
stos
add
popa
dec
adc
clc
in
jmp
push
div
xchg
pusha
into
out
(bad)
lea
add
or
push
push
and
sbb
and
xor
gs
xchg
(bad)
cmp
in
mov
mov
jmp
jge
fnstenv
daa
stos
push
sub
or
add
adc
pop
lock
aas
add
stc
arpl
mov
dec
fcomip
and
ja
jg
push
push
or
jmp
out
dec
out
test
sub
out
jnp
std
adc
cmps
pop
sbb
aam
jne
push
fisub
sbb
jno
out
adc
fist
push
sbb
fidivr
lods
or
cmps
jo
imul
pop
jae
push
add
test
jl
and
or
pop
dec
adc
add
and
jmp
and
in
xor
outs
cmp
ret
retf
sub
enter
sbb
dec
mov
sar
dec
int
leave
mov
sahf
or
push
mov
xor
(bad)
cmps
test
outs
xchg
sbb
xchg
shl
int
push
mov
bound
cs
mov
fimul
push
inc
mov
pop
xor
enter
mov
xchg
mov
fwait
add
in
dec
mov
or
pop
repz
stos
fiadd
push
mov
ds
pop
mov
mov
cli
loopne
int3
cmc
jmp
jecxz
xchg
cmps
daa
push
ret
das
cmps
add
repz
mov
movs
xor
stc
cmp
ja
lds
sub
(bad)
and
mov
rcl
mov
outs
retf
movs
(bad)
mov
clc
push
sahf
push
sahf
rcl
add
(bad)
jle
jne
or
aad
and
add
dec
int3
sub
jge
xor
arpl
lahf
push
dec
les
pusha
jnp
or
inc
imul
adc
mov
and
cmp
mov
not
popa
mov
or
or
fidiv
push
adc
sbb
dec
retf
jl
inc
pop
mov
sub
pop
dec
jno
dec
cli
fcmovu
push
or
inc
dec
cmp
retf
adc
xlat
pop
push
(bad)
(bad)
mov
xlat
mov
inc
cmp
pushf
lock
lods
adc
jg
(bad)
ins
loop
lea
xor
data16
out
bnd
or
retf
xchg
sbb
gs
push
pusha
xor
inc
pop
mov
lock
fisub
mov
stos
call
ror
push
xchg
mov
xor
pop
cdq
lea
push
mov
int3
ins
stos
sub
ror
and
inc
or
(bad)
outs
aas
sub
retf
jge
sbb
test
sbb
jmp
mov
int
lods
jo
bound
in
and
sub
int
and
sbb
inc
adc
outs
push
add
push
dec
cmp
(bad)
fadd
daa
push
mov
push
fidiv
repnz
and
xchg
retf
push
test
enter
pop
mov
rol
int3
test
fidiv
inc
mov
dec
mov
push
or
jg
mov
cwde
inc
mov
jg
scas
inc
sbb
pusha
popf
mul
div
imul
adc
loopne
in
adc
push
sbb
mov
enter
out
in
add
xchg
retf
sub
(bad)
aaa
fisttp
iret
out
push
into
and
adc
rol
jp
mov
in
and
adc
pushf
outs
ror
icebp
mov
(bad)
push
out
and
and
aad
mov
(bad)
fmul
push
push
dec
clc
jns
(bad)
cli
add
js
sbb
loop
lods
sbb
or
ins
push
push
js
leave
dec
leave
or
or
push
adc
xchg
sbb
add
sbb
or
jae
sbb
pop
push
jae
adc
and
xor
popa
out
push
push
sbb
outs
xchg
mov
jp
out
mov
fstp
and
jae
or
aaa
ret
shr
xor
rcl
int
cmp
fxch
out
(bad)
out
and
lea
xor
inc
arpl
je
inc
inc
push
pop
inc
cmp
mov
inc
jecxz
dec
out
retf
and
jmp
jg
mov
(bad)
ficom
ret
popf
mov
outs
push
ins
mov
retf
inc
out
addr16
mov
jno
inc
fs
les
aad
cmp
xchg
into
xlat
mov
gs
jg
scas
jo
xor
xor
imul
push
adc
add
fmul
sub
ss
icebp
dec
scas
ja
push
fwait
ss
inc
add
add
sahf
rol
in
outs
in
or
pusha
adc
push
pop
push
aad
je
jnp
sub
into
mov
repnz
cld
inc
adc
sbb
loop
imul
cmp
pop
je
rcr
not
pop
or
and
xchg
mov
(bad)
xor
movs
ds
sbb
nop
and
mov
lods
lea
and
lds
aad
test
neg
mov
push
jnp
mov
add
lods
shl
or
xchg
push
xchg
add
(bad)
scas
imul
imul
(bad)
fmul
cmp
mov
popa
ss
mov
xchg
sub
jg
daa
push
or
mov
test
and
std
xchg
mov
movs
nop
inc
cmp
aam
(bad)
jmp
jecxz
push
repz
add
lods
adc
test
xchg
inc
lods
jle
int
pop
and
(bad)
mov
jbe
sbb
rol
cld
sub
xor
sbb
loopne
add
dec
gs
(bad)
cmp
jo
inc
and
sub
mov
xor
scas
sbb
add
pushf
mov
mov
xor
add
pop
inc
pop
cmp
(bad)
fistp
arpl
retf
inc
or
test
push
dec
lods
mov
and
mov
and
(bad)
pop
xchg
sbb
pop
xor
pop
push
dec
bswap
pop
or
sti
push
pusha
out
xchg
xor
movs
(bad)
aas
cli
leave
loope
add
pop
pop
sub
pop
cdq
pop
mov
pop
gs
leave
mov
jle
xchg
inc
or
mov
test
push
pop
gs
add
pop
test
pop
arpl
jo
and
pop
scas
xchg
inc
or
shr
add
loope
or
xchg
je
xor
fisub
inc
pop
push
sub
jne
push
mov
std
retf
shl
sub
repnz
shl
cmp
je
cmps
jg
sub
sbb
xor
jne
popf
leave
sub
ss
inc
mov
mov
adc
and
enter
cmc
scas
les
jnp
mov
cli
shl
dec
out
or
daa
jbe
jo
and
cmp
test
mov
cld
push
arpl
pusha
or
lea
clc
and
scas
pop
arpl
retf
add
aam
xchg
clc
adc
ss
in
pusha
cwde
call
and
movs
outs
test
xor
sub
bound
xchg
mov
or
(bad)
mov
rcpps
mov
xor
popa
inc
mov
push
pop
shl
pusha
push
xchg
push
sti
shl
scas
mov
pop
inc
sub
rcr
adc
data16
jmp
mov
pop
icebp
dec
push
dec
pop
hlt
stos
jge
push
fisub
add
(bad)
arpl
adc
rcr
xchg
test
xchg
les
xor
aas
push
sub
pushf
jno
add
js
js
jle
stos
aaa
lds
jo
adc
add
ret
sbb
dec
sbb
movs
js
push
pop
aaa
pop
in
(bad)
cs
adc
shr
adc
hlt
(bad)
les
dec
adc
ja
xchg
into
fwait
cmp
xor
test
pop
mov
add
push
push
ficom
mov
mov
jmp
jo
sti
push
add
adc
fist
mov
rol
mov
(bad)
mov
and
dec
daa
mov
icebp
and
mov
xor
mov
or
test
xor
call
push
push
arpl
rcr
push
mov
xchg
stos
loopne
(bad)
not
xchg
not
or
adc
xor
fwait
push
mov
push
repz
sbb
xchg
int3
(bad)
call
dec
mov
ins
das
or
pop
ret
mov
jbe
call
lods
sub
push
clc
xlat
sbb
cmp
mov
inc
add
xchg
(bad)
lahf
std
and
test
aam
out
pop
fmul
mov
stos
dec
sbb
in
imul
scas
pop
outs
ror
std
mov
enter
bound
loopne
icebp
and
xchg
mov
loopne
in
cmc
outs
loopne
pop
rol
cld
arpl
add
sub
loopne
cmp
popf
xor
bound
getsec
jo
pop
ins
call
xchg
ins
or
popf
push
stos
sti
call
push
sbb
test
das
ss
xchg
retf
sub
stos
jmp
jmp
(bad)
in
push
cmc
(bad)
adc
jns
sub
mov
int
div
test
cmps
movs
aam
sub
test
lea
shl
dec
cmps
sbb
and
hlt
pusha
jecxz
or
xchg
(bad)
lahf
dec
jno
ret
(bad)
xor
adc
sti
jge
jmp
mov
fdivrp
jle
call
and
and
dec
add
inc
pop
push
mov
stc
cmp
test
stc
outs
pop
mov
mov
push
loope
sbb
arpl
cli
xor
mov
pop
mov
movs
out
and
and
inc
aaa
adc
push
or
cmp
dec
dec
jp
sub
mov
xor
(bad)
jg
loopne
inc
aam
cmp
cmp
(bad)
hlt
fnstenv
les
jae
jns
add
sbb
jae
mov
cmps
jecxz
fwait
adc
push
enter
or
ret
pop
inc
xor
jmp
push
jmp
in
sar
rcl
lds
(bad)
push
cdq
repz
cmc
inc
xlat
ins
arpl
xor
jp
dec
repnz
push
lods
dec
mov
xchg
add
mov
jmp
test
inc
jno
cmp
dec
std
call
movs
xchg
xchg
cmp
xchg
mov
retf
mov
xchg
int3
cmps
sbb
mov
cmp
mov
shl
pop
xor
ror
inc
xor
pop
adc
pop
sub
ficomp
icebp
out
adc
out
aad
stos
mov
pushf
int3
loope
add
jno
out
inc
xor
xor
inc
and
xor
pop
cmp
repnz
dec
je
mov
movs
out
inc
clc
push
in
cmps
push
cmc
je
add
retf
or
inc
mov
out
or
addr16
mov
inc
pop
nop
jns
sbb
cmp
test
pop
xchg
ins
cmp
out
daa
mov
aas
fstp
(bad)
(bad)
mov
lock
ror
push
and
scas
and
imul
cmp
push
mov
push
into
shr
or
les
(bad)
xor
hlt
int
push
mov
in
repnz
clc
pop
mov
xchg
ins
(bad)
adc
sbb
lock
imul
sti
mov
shl
lods
push
aam
and
call
les
push
inc
or
das
dec
lock
mov
je
scas
cdq
mov
sub
lods
popf
jns
mov
push
je
add
fldcw
xor
mov
push
sub
aad
dec
out
mov
enter
clc
fistp
push
pop
sti
stos
and
aas
iret
or
mov
sbb
cwde
lds
inc
test
repnz
mov
jno
cdq
xor
pop
(bad)
sub
mov
dec
mov
mov
ret
cmp
sti
cli
mov
sub
jmp
sti
cmp
push
push
imul
inc
rol
test
sub
ret
mov
test
and
outs
bound
dec
js
mov
push
jge
push
out
dec
scas
push
into
inc
sub
enter
jno
lods
push
(bad)
out
pop
wbinvd
sbb
mov
repnz
jmp
fcomp
fidivr
stos
ss
cmp
jb
idiv
fcmovnbe
push
popa
repz
adc
push
push
in
jae
push
cmp
xchg
mov
xlat
cmp
ret
add
xchg
sub
in
lds
adc
mov
mov
rcl
popf
xchg
and
pop
mov
sbb
dec
jmp
call
jl
test
lea
or
hlt
xchg
sbb
in
xchg
push
test
cmp
push
pop
pop
mov
xchg
gs
cmp
add
xor
std
xchg
(bad)
jmp
cli
test
cmc
xor
jnp
dec
push
repnz
pop
jnp
enter
ror
aaa
mov
inc
mov
cmp
mov
clc
cmps
test
pop
retf
xor
retf
scas
loopne
jns
adc
sbb
ins
sbb
stos
dec
adc
sar
test
sbb
stc
sub
jle
push
cs
scas
xor
icebp
and
iret
inc
out
data16
out
mov
fld
adc
pmuludq
inc
jno
jae
xchg
stos
rcr
cmp
cld
xchg
fwait
cmc
cdq
test
sub
cmps
sub
imul
and
jae
push
mov
jbe
add
xor
xor
and
cli
pop
std
mov
cdq
not
xchg
mov
pop
add
dec
mov
pop
mov
scas
jno
mov
into
outs
inc
call
sub
sbb
jmp
push
dec
out
retf
test
mov
mov
cmp
jle
outs
mov
sahf
sahf
dec
icebp
cmps
sub
mov
(bad)
dec
ss
mov
loope
pop
jbe
jp
in
mov
mov
or
std
push
shr
sub
xor
jae
and
or
add
inc
xchg
mov
dec
mov
sub
mov
stos
outs
mov
ins
shl
es
cli
adc
dec
mov
add
sbb
shl
pop
pusha
pop
stc
cmp
dec
lods
xchg
ss
sbb
daa
dec
inc
mov
iret
and
xlat
xchg
cmp
and
repnz
retf
mov
xor
jne
dec
xlat
mov
xor
mov
jno
jp
mov
dec
imul
out
not
out
pop
jle
cmc
xor
popa
cwde
out
jb
fucomp
aad
ja
push
xor
sti
cld
cmp
sahf
xchg
sti
sahf
hlt
push
sub
mov
xor
sbb
cs
data16
inc
mov
dec
pop
add
adc
in
pop
div
cwde
inc
jo
and
fisttp
out
adc
icebp
pop
mov
xchg
test
pushf
push
mov
sbb
push
inc
mov
mov
es
mov
inc
adc
lahf
push
jge
mov
(bad)
or
jp
mov
add
push
jmp
stos
adc
inc
(bad)
das
jne
adc
jo
js
lods
div
sahf
aad
dec
es
add
sub
movs
lock
dec
and
or
mov
jo
inc
fild
ins
stos
push
adc
adc
mov
push
psubw
sub
(bad)
adc
jno
(bad)
mov
or
jmp
ss
xchg
scas
jecxz
mov
mov
gs
popf
aaa
mov
or
imul
push
jne
scas
mov
fwait
xchg
cmp
inc
mov
dec
xor
aam
sbb
add
sub
jecxz
sub
cmp
sar
nop
sub
inc
pop
loop
lods
adc
sub
mov
mov
jmp
daa
aad
mov
dec
ror
cld
cmp
ins
je
aaa
sub
jns
mov
or
jns
fistp
adc
(bad)
lods
fwait
ss
mov
inc
xor
mov
loopne
and
das
pop
sti
nop
out
jmp
pop
test
jnp
dec
stos
cmp
ins
imul
pop
xchg
and
and
or
or
or
cmc
jne
xchg
(bad)
fcomp
pop
(bad)
or
cmp
xor
int
sub
test
xor
jb
(bad)
mov
(bad)
jmp
(bad)
inc
xor
and
xor
ins
pop
xor
xchg
movs
imul
retf
mov
fld
cdq
add
add
mov
xor
stos
adc
jmp
pop
aas
xchg
cdq
jno
mov
fwait
rol
push
pop
rcl
out
push
(bad)
ficomp
(bad)
add
sar
inc
enter
std
sbb
(bad)
hlt
mov
jmp
mov
cmp
aad
aaa
cli
xor
dec
std
pop
mov
mov
xchg
std
adc
in
rol
movs
mov
or
adc
jge
test
les
or
mov
jae
repnz
pop
lds
mov
nop
inc
stos
fisub
sub
adc
or
dec
adc
mov
dec
not
jle
rcl
ret
xor
or
pop
mov
push
xchg
inc
jns
fadd
xchg
mov
mov
jp
mov
dec
cs
mov
clc
je
adc
inc
into
fucomp
push
aas
movs
movs
adc
sar
sub
int
setb
dec
in
pop
mov
pop
add
aas
sbb
dec
imul
shl
mov
in
dec
fnstcw
inc
xchg
push
repz
cmp
mov
cdq
les
xchg
cmps
dec
mov
pop
in
hlt
push
add
mov
mov
nop
pop
shl
push
les
push
jno
adc
jmp
or
pop
xchg
or
out
mov
xor
outs
sub
call
gs
mov
shr
in
cmp
adc
push
dec
daa
mov
cmp
mov
arpl
pop
in
xchg
iret
jo
cmp
jp
xlat
push
and
stos
nop
cmp
test
dec
cmp
jge
mov
xor
ins
scas
ins
mov
xor
sub
and
shl
fcmovnu
int3
ins
bound
cs
inc
outs
mov
ja
(bad)
mov
outs
and
shl
mov
adc
leave
aas
pusha
mov
push
push
arpl
test
fnsave
inc
xchg
push
enter
mov
cld
js
stos
fldcw
imul
shl
scas
je
sahf
mov
mov
fist
cmp
test
mov
mov
xchg
bound
push
xor
push
pop
sbb
js
aas
push
test
loopne
sub
je
push
aaa
jb
pop
arpl
mov
(bad)
jmp
inc
mov
(bad)
lahf
jne
cwde
jecxz
mov
aad
sbb
shl
push
movs
ret
aam
adc
or
mov
pop
inc
and
inc
retf
push
test
cwde
ds
movs
adc
add
xchg
fabs
inc
aad
fdiv
jnp
cmp
push
(bad)
cld
adc
lods
jo
xor
dec
je
xlat
add
repz
loop
pop
psllw
mov
xor
retf
ins
fmul
das
arpl
pop
inc
inc
cmp
sbb
repz
xor
xchg
or
adc
sbb
sub
in
bsf
test
loop
or
xchg
mov
je
not
or
cli
adc
inc
xchg
jecxz
push
mov
popf
xchg
loope
cmp
mov
sahf
inc
or
outs
call
sub
push
push
mov
jne
mov
and
clc
dec
ins
xor
js
and
pop
jbe
call
ds
mov
test
mov
jp
xlat
iret
pop
ja
lahf
shr
sti
pushf
or
lds
or
jl
aam
pop
adc
mov
cs
xchg
lahf
or
or
sbb
retf
and
xchg
and
aad
inc
(bad)
fisttp
in
cmps
and
add
pusha
xchg
xchg
aam
pop
sahf
inc
dec
repnz
test
rol
jp
dec
in
int
or
jae
test
mov
jge
mul
xchg
lock
mov
inc
add
fdiv
repz
adc
mov
dec
pop
ins
jle
hlt
sbb
push
mov
nop
lea
and
mov
mov
mov
cmps
mov
xchg
das
mov
inc
repnz
push
mov
pop
xchg
cmc
outs
pusha
sub
dec
adc
outs
shl
(bad)
ret
mov
(bad)
jg
aad
loope
repnz
test
push
repz
xor
push
sbb
scas
and
outs
pop
mov
dec
adc
aam
fld
je
and
int
mov
sar
inc
mov
imul
push
pop
aas
movs
sbb
jae
jge
jmp
mov
and
cmp
iret
add
cmps
inc
mov
push
repnz
and
les
push
mov
dec
rol
mov
adc
inc
xor
js
dec
mov
or
retf
pop
add
push
aad
inc
jl
sub
pop
pop
xor
rol
fwait
(bad)
daa
mov
icebp
lahf
push
gs
or
adc
mov
loop
jb
inc
popa
call
fcomip
std
mov
cmp
ja
bound
pop
cmps
push
lds
pushf
daa
test
arpl
adc
jp
and
cmps
jae
pop
pop
daa
ins
loop
stos
sti
(bad)
and
icebp
cs
fwait
jp
add
pop
mov
xchg
jge
cs
sbb
data16
mov
jo
jo
cmp
sub
xchg
mov
(bad)
xor
test
aaa
and
sub
push
pop
push
lds
jne
mov
mov
mov
mov
add
xchg
mov
fs
mov
(bad)
or
in
xchg
leave
ss
stos
dec
imul
pusha
xchg
cmp
mov
add
xchg
aaa
inc
jecxz
icebp
lea
jo
xor
rol
cmp
mov
mov
push
mov
cmp
stos
adc
sub
sub
inc
or
mov
lods
ficomp
gs
sbb
shl
jns
je
fs
or
mov
fs
aam
mov
(bad)
(bad)
popa
movs
fdiv
inc
sbb
add
je
xor
outs
xor
ins
dec
loopne
jo
pop
data16
jg
add
dec
nop
aad
test
daa
adc
test
data16
sub
dec
ret
jle
arpl
cli
pop
aam
fstp
popf
sahf
adc
fadd
fst
lahf
repz
and
mov
push
xchg
xlat
(bad)
int
sub
fidivr
ret
imul
retf
rcr
mov
mov
paddusb
in
push
jnp
and
jp
in
push
mov
push
jg
inc
jp
mov
push
mov
scas
pushf
sub
push
lds
sbb
or
cld
cmp
jecxz
jmp
aaa
sub
outs
jne
push
mov
popa
outs
xchg
das
inc
mov
pop
stos
arpl
mov
sbb
addr16
mov
fwait
push
pop
mov
movs
mov
add
mov
jnp
hlt
cmp
mov
fidivr
dec
lea
sbb
sbb
xchg
jmp
lds
or
rcl
add
mov
cdq
and
pop
inc
sbb
xor
lahf
aad
cmp
push
mov
pop
gs
mov
xor
repnz
sub
nop
dec
add
dec
(bad)
inc
rol
xchg
and
fst
mov
fidivr
pop
dec
js
sub
es
popa
mov
push
or
sbb
or
rcl
pop
clc
sbb
outs
inc
aam
or
push
push
gs
or
push
jb
fucomip
bound
pop
or
jne
sbb
sahf
inc
fwait
or
loope
xor
sbb
pop
add
and
mov
sub
dec
sub
add
movs
rcl
push
out
inc
or
sub
lock
stos
and
pop
sub
movs
cld
call
daa
test
mov
retf
out
mov
movs
mov
loop
ror
adc
xor
dec
(bad)
ss
call
stos
jge
lods
cmp
jnp
cmp
mov
in
aam
outs
scas
push
out
lahf
int3
jne
enter
mov
push
jno
mov
mov
imul
ins
test
xor
fdiv
outs
xchg
push
jmp
mov
cmp
jge
aas
adc
xor
push
xchg
fild
and
not
pop
fcompp
test
or
cwde
mov
pop
(bad)
fucomip
enter
out
dec
aas
sub
addr16
(bad)
shl
add
cli
xchg
jg
dec
adc
shl
fist
mov
xchg
push
gs
(bad)
pop
fdivr
pop
cmp
pop
cmp
dec
mov
and
fisttp
inc
icebp
or
xor
pop
jmp
push
fwait
aad
sub
les
mov
rcl
add
cld
xor
sahf
mov
xchg
sub
dec
or
ds
test
imul
outs
(bad)
fistp
iret
sub
mov
movs
sub
push
cmp
call
push
lods
ds
das
repz
xlat
call
aaa
mov
aaa
lods
and
sar
cmps
outs
dec
add
cmp
ficomp
adc
mov
mov
xor
mov
fcmovb
stos
adc
pop
cli
xor
inc
ins
test
rcl
stc
lahf
in
push
and
gs
sbb
fisttp
inc
dec
nop
mov
inc
es
mov
je
pop
jb
test
sbb
out
push
and
lods
aas
sbb
lock
in
fs
adc
xor
icebp
mov
sub
sub
sbb
ins
pop
sub
mov
mov
adc
and
sbb
sub
jg
fldln2
jmp
dec
sahf
out
imul
repz
retf
fnstenv
(bad)
push
arpl
adc
hlt
ss
test
mov
pop
lods
jns
test
mov
or
cmps
(bad)
mov
and
cmps
or
cmps
sti
jns
add
jg
movs
xchg
into
(bad)
dec
sti
cs
xor
jo
mov
std
cwde
mov
xchg
sbb
sbb
xchg
mov
or
push
and
xor
ja
stos
xor
nop
js
jp
cdq
add
(bad)
ins
jmp
retf
sub
retf
lock
ss
sahf
vcvtss2si
mov
cwde
pop
jp
adc
retf
ret
sub
push
or
inc
xchg
mov
test
out
xchg
pushf
add
in
jp
pop
sub
ds
jp
jae
push
push
xor
push
sti
out
idiv
ds
pop
iret
mov
adc
pop
inc
adc
pop
jmp
in
gs
sub
fisttp
fldpi
pop
cmp
aaa
adc
mov
jmp
mov
ret
adc
(bad)
sub
sub
mov
enter
xor
sub
sub
mov
addr16
adc
rcr
repz
enter
sub
dec
rcr
nop
xor
das
mov
ins
jne
call
jl
jb
mov
lds
ins
mov
test
or
pop
movs
aaa
mov
adc
jl
add
loope
dec
outs
pop
xchg
aad
push
data16
jp
push
push
(bad)
daa
push
shr
mov
dec
push
sbb
mov
loop
mul
inc
imul
cmps
inc
stos
enter
and
call
mov
lea
dec
sti
imul
lea
aas
pop
push
aad
jb
mov
or
leave
mov
sub
mov
inc
xchg
xor
mov
adc
and
ja
movs
ss
daa
shl
fsub
mov
inc
jb
retf
imul
mov
cmps
push
jmp
out
and
cdq
mov
fwait
mov
scas
inc
(bad)
mov
pop
inc
ss
mov
push
adc
test
aas
xor
sub
test
jmp
xor
ins
sub
test
fs
jb
jnp
sbb
xlat
xchg
adc
inc
add
mov
xor
scas
adc
push
shl
les
or
rcl
in
push
ds
adc
pusha
aas
dec
cmp
mov
mov
and
jae
xchg
add
sub
xchg
repz
adc
movs
fld
xor
add
push
cmps
pop
add
out
add
add
xlat
sbb
mov
pop
inc
add
adc
adc
or
jmp
int
xchg
std
loopne
xor
sub
push
aaa
into
adc
sub
and
movs
lods
xchg
dec
adc
xchg
sbb
sbb
cmp
add
pop
(bad)
test
mov
jmp
popf
outs
cwde
add
sub
les
lahf
aaa
fwait
ins
enter
xor
(bad)
mov
mov
pop
mov
xor
cmp
icebp
jbe
pop
(bad)
rcr
out
lods
sbb
add
and
stc
fwait
lock
adc
push
or
or
sub
je
stos
push
mov
add
add
or
rcl
sbb
cmp
xor
rsqrtps
push
icebp
call
xor
mov
test
jecxz
rol
cwde
xchg
clc
adc
push
retf
int
ins
call
cld
arpl
dec
lahf
xlat
sti
add
imul
xor
xchg
nop
bound
inc
push
or
mov
sbb
jne
ficom
sysexit
jae
fcom
ss
sub
cmp
inc
sbb
mov
int3
or
cmps
movs
pop
push
jge
cmps
xor
imul
pop
add
jns
int
dec
lock
pop
sahf
or
bound
repz
dec
pop
sbb
adc
xchg
sbb
pop
loope
mov
dec
popf
mov
adc
(bad)
nop
add
(bad)
sbb
(bad)
sub
(bad)
loope
std
imul
jnp
sbb
repz
pop
mov
sbb
mov
push
push
stos
loop
pop
dec
cmp
popa
imul
inc
data16
stos
cmp
fs
aad
jnp
movs
imul
fmul
scas
imul
lock
adc
test
sub
push
xor
mov
(bad)
gs
in
push
test
icebp
fdivr
or
rcr
ins
rcl
inc
icebp
xchg
adc
cmc
enter
jns
sbb
pop
int3
push
cdq
sub
mov
push
or
cmp
leave
gs
dec
or
mov
aad
push
pop
imul
in
or
test
gs
mov
mov
push
inc
jecxz
mov
or
dec
mov
dec
adc
out
add
mov
push
ret
mov
xor
or
rcr
and
retf
fbstp
fild
dec
fidivr
dec
push
shl
ins
lds
call
fdivr
mov
push
xchg
pop
fmul
cdq
add
inc
sbb
cmpxchg
dec
mov
fist
(bad)
ins
xchg
and
in
ja
loope
lods
outs
cld
mov
movs
pop
out
jo
dec
jnp
pop
push
mov
jbe
fld
sbb
aad
adc
inc
jp
fiadd
xchg
cmp
bound
push
cli
ins
loope
sti
xor
inc
mov
dec
and
xor
sar
arpl
add
push
push
icebp
pop
cmp
add
xchg
or
in
lock
mov
aam
test
lock
les
pop
xor
inc
fcmovb
fisttp
out
ror
fs
jge
lahf
sbb
inc
dec
jnp
inc
dec
inc
and
dec
lahf
loop
mov
arpl
ja
adc
xor
mov
adc
mov
call
cli
fstp
or
(bad)
pop
push
add
(bad)
and
or
mov
cwde
lods
jb
inc
lds
rol
adc
movs
pop
jae
push
sbb
rol
into
lock
jbe
add
sbb
rdtsc
sbb
dec
dec
in
jmp
cmp
ss
sbb
jp
sar
inc
ins
call
and
(bad)
imul
imul
dec
cmp
popa
xor
lea
push
inc
inc
mov
mov
je
(bad)
fdivr
and
pop
test
sbb
and
sar
push
and
pop
jge
inc
sahf
pop
mov
pop
sbb
pop
ror
xchg
push
adc
cwde
fidivr
int3
retf
adc
retf
mov
jne
ret
push
jno
pop
test
je
mov
xor
pop
xchg
sti
add
xchg
push
repz
xchg
sub
out
gs
mov
leave
adc
cmp
sub
test
ins
fs
xchg
mov
arpl
adc
pushf
ins
mov
cmp
loope
push
jne
cmps
nop
paddw
pop
mov
aaa
lea
adc
popf
rol
mov
es
mov
sbb
aam
data16
xchg
in
shl
lock
xor
das
stos
xchg
mov
push
mov
xor
loopne
js
push
scas
in
xor
cwde
movs
lahf
popf
jo
(bad)
shl
repnz
add
jns
hlt
pushf
scas
aam
sub
xor
mov
imul
inc
xor
jbe
xor
dec
push
or
jge
cmp
ja
into
inc
mov
arpl
and
(bad)
movs
mov
push
xchg
hlt
cs
ins
mov
sahf
pop
mov
dec
pop
jmp
xor
ret
jne
push
retf
gs
fidivr
stos
adc
data16
outs
xchg
fst
call
push
fs
fs
push
arpl
sbb
push
loop
das
mov
xor
jb
test
cmp
sub
pmullw
push
out
sbb
out
pop
cdq
repnz
call
inc
adc
mov
(bad)
jno
pand
or
jecxz
sahf
mov
adc
enter
in
sbb
add
adc
sbb
mov
dec
test
pop
xchg
sub
enter
cmps
(bad)
and
jecxz
xor
mov
leave
pop
xchg
mov
fcmovu
mov
push
call
push
mov
xlat
mov
shr
sub
push
jae
lahf
mov
fucomi
mov
mov
fs
mov
pop
mov
rcl
rol
jg
adc
outs
repz
or
adc
or
xchg
inc
add
(bad)
ins
add
mov
icebp
pushf
or
cmps
jbe
jg
(bad)
bound
sahf
mov
mov
mov
lods
enter
in
shr
pop
jle
mov
jmp
retf
mov
test
std
or
mov
sti
scas
sbb
cmps
sbb
das
sbb
xor
fucomi
cmp
fistp
neg
cwde
push
dec
fnstcw
loope
sbb
out
outs
sahf
in
xlat
loope
xor
xor
inc
retf
repnz
je
xchg
ret
test
fmul
jns
push
jae
outs
dec
ja
or
retf
sbb
cwde
mov
sbb
dec
sub
sbb
imul
xchg
jge
dec
adc
cwde
jae
hlt
es
gs
int
sub
lods
xchg
das
xor
popf
jns
pop
in
push
outs
mov
imul
mov
mov
jge
ret
out
mov
dec
cmp
mov
cmp
cli
ret
pop
mov
and
mov
push
xor
test
adc
fbld
icebp
imul
or
mov
mov
add
dec
retf
das
stos
pop
and
dec
jecxz
out
mov
push
sar
pop
neg
ret
clc
(bad)
cmps
and
movs
push
xchg
or
enter
out
jl
inc
loop
popa
add
adc
add
xor
inc
sbb
jnp
inc
pop
push
adc
pop
push
sub
mov
in
inc
stos
out
pop
sar
jbe
or
je
mov
test
or
jo
or
inc
enter
add
in
mov
push
mov
data16
jae
adc
ret
movs
push
mov
ret
jmp
jnp
or
(bad)
mov
and
xor
add
rcr
outs
adc
push
ja
cmps
jle
jl
jmp
pop
mov
cmp
xchg
mov
sub
jb
popa
jbe
dec
mov
int
aaa
mov
add
xor
mov
xlat
push
shl
ret
fbld
mov
lock
sahf
inc
fmul
jmp
sahf
cmp
pop
sti
dec
pop
mov
pop
mov
sub
cs
add
push
jae
out
cmp
sub
mov
mov
sahf
das
ins
icebp
(bad)
push
sub
inc
stos
jns
fbstp
or
sti
ss
push
mov
mov
pop
dec
(bad)
pop
push
jbe
add
jns
(bad)
js
mov
add
adc
adc
mov
clc
cmp
(bad)
cmp
clc
push
dec
mov
inc
mov
scas
mov
dec
mov
sub
loope
into
stos
ds
lahf
mov
cmp
mov
(bad)
ds
and
mov
outs
or
retf
imul
outs
ja
xchg
or
mov
push
mov
pop
mov
out
and
xor
sahf
pop
dec
mov
stc
fst
push
sub
(bad)
sub
add
and
push
jne
sub
push
inc
test
sub
pop
sbb
mov
xor
jno
scas
scas
adc
xor
push
loop
push
pop
pop
pusha
add
dec
in
adc
pop
enter
popf
push
test
push
ret
iret
(bad)
cmp
arpl
jge
xchg
movs
adc
jp
int3
dec
fcomp
ins
out
mov
icebp
xchg
div
lahf
sub
dec
outs
int
sub
jmp
push
pusha
mov
or
mov
cmp
adc
sbb
rol
sahf
test
mov
inc
inc
or
jnp
inc
add
cmp
ds
cli
jnp
aam
push
xor
xchg
addr16
mov
sbb
mov
mov
sbb
dec
jmp
jo
or
jnp
jmp
cdq
outs
fild
adc
out
shr
ror
push
ja
pop
in
cmp
mov
in
ret
cdq
sub
push
call
cmp
jne
jecxz
add
push
and
sbb
int3
sbb
xor
pop
mov
fstp
mov
and
jp
scas
xchg
lea
ss
loopne
arpl
jmp
dec
popf
test
adc
(bad)
and
sbb
mov
clc
into
aaa
cmp
adc
lock
retf
xor
mov
mov
jecxz
mov
jmp
clc
push
xor
adc
dec
sahf
bound
fsub
jmp
xor
ds
fdivr
int3
out
retf
mov
or
dec
mov
mov
fbstp
in
lods
mov
int3
stos
push
dec
inc
cmc
and
adc
lahf
sub
pavgw
lea
dec
mov
mov
cli
(bad)
xchg
retf
mov
(bad)
push
xchg
inc
inc
sbb
xchg
jecxz
out
rcr
add
hlt
(bad)
in
xchg
xchg
iret
jle
rol
test
and
xchg
dec
into
adc
in
jnp
adc
test
dec
add
adc
ret
and
add
adc
dec
scas
adc
loopne
hlt
push
cmp
fwait
movs
push
pushf
mov
jmp
dec
scas
xor
push
pop
sbb
xchg
dec
lock
data16
pusha
cmp
mov
sahf
inc
add
inc
gs
push
stc
arpl
sbb
stc
aaa
mov
push
mov
xor
sub
jo
(bad)
push
and
test
push
xor
push
ss
clc
loop
lock
xor
mov
out
cmp
imul
fisub
(bad)
out
lods
add
or
pop
add
test
xchg
(bad)
repnz
cmp
jne
out
jnp
fwait
mov
daa
lods
fdiv
ins
add
cli
adc
cdq
mov
or
aas
sbb
cmp
sbb
pop
or
inc
(bad)
xchg
mov
adc
nop
push
dec
jnp
xchg
jae
cwde
dec
lods
cmp
jo
(bad)
pop
xor
loope
fcom
outs
or
push
mov
fbld
imul
lock
pop
pop
xchg
retf
pop
inc
sbb
scas
clc
xchg
push
ss
je
jg
imul
xor
loopne
inc
or
push
push
fisttp
retf
mov
not
cli
fs
addr16
mov
leave
ins
fimul
jnp
clc
(bad)
xor
sbb
cmp
(bad)
sub
(bad)
loope
inc
pop
mov
inc
jb
sbb
test
dec
hlt
fidivr
jns
retf
cmp
in
sbb
xchg
bound
mov
retf
xor
jmp
int
jne
std
in
into
inc
jbe
fnstenv
test
jle
jo
xor
pop
ret
sub
xlat
loopne
jl
or
inc
fldpi
arpl
loopne
js
mov
arpl
jle
aad
jmp
and
cmp
mov
add
or
in
lods
sbb
pop
outs
jno
fisttp
pop
imul
jmp
sbb
ror
dec
mov
jp
mov
outs
cmc
in
pop
(bad)
cmp
push
cmp
jg
(bad)
(bad)
dec
pop
(bad)
adc
pushf
mov
push
retf
movs
jp
pop
dec
test
lds
pop
clc
rcl
xchg
repnz
push
or
lock
jmp
push
xor
lahf
dec
test
fisttp
inc
movs
pop
mov
add
add
fistp
push
adc
xchg
add
sbb
xor
nop
shl
sbb
adc
mov
mov
repz
leave
mov
pop
loope
add
jge
fmul
das
xor
add
ror
inc
imul
mov
in
fs
ds
adc
int
cs
stc
jo
psraw
pop
adc
mov
test
cdq
sbb
sub
mov
and
adc
xchg
in
rcr
or
gs
daa
test
movs
inc
ins
mov
int3
xchg
inc
mov
sbb
retf
pop
lock
jmp
int
jp
out
inc
or
retf
sti
les
clc
mov
not
cwde
adc
(bad)
into
test
jb
aas
mov
pushf
adc
push
or
std
inc
sti
inc
bound
imul
lahf
jno
out
xchg
lds
fwait
adc
cmp
adc
pop
xor
in
bound
xor
mov
leave
mov
add
cmps
cmps
pop
cmp
jecxz
es
aam
pop
data16
mul
push
inc
gs
loop
mov
add
or
rol
xchg
popa
jns
fsubrp
inc
sbb
(bad)
test
cs
fwait
xchg
push
mov
adc
int3
into
push
push
push
mov
inc
xchg
push
fsubr
int
test
mov
sbb
dec
dec
pop
sub
xchg
push
jecxz
std
sbb
cmp
repnz
cld
pop
pop
dec
in
inc
cmp
fs
data16
lock
mov
xor
hlt
(bad)
int
or
retf
sub
push
xchg
push
mov
adc
loopne
pop
pop
adc
pop
aas
pusha
fdiv
jne
mov
movs
mov
rol
call
sbb
and
fisttp
addr16
push
sahf
jb
int
xchg
jge
jae
mov
pop
cmc
dec
inc
mov
retf
xlat
mov
out
aaa
dec
retf
std
lea
pop
dec
mov
sub
test
xchg
inc
dec
loope
and
(bad)
or
inc
and
adc
mov
mov
cli
aam
repnz
add
xor
fucomi
or
or
out
push
xor
retf
repz
xchg
cwde
cmp
mov
sub
mov
mov
dec
push
je
inc
cmp
inc
xchg
pop
ret
xchg
push
jno
ds
shl
cmp
or
add
lahf
pop
cmp
icebp
or
shr
mov
fmul
add
aam
mov
dec
add
xchg
jbe
or
sub
inc
xlat
and
dec
loope
call
push
mov
pop
pop
xor
dec
fldl2t
hlt
xlat
mov
pusha
pop
and
aad
in
loopne
jnp
push
or
jmp
les
mov
ss
push
sahf
xor
ror
aam
xchg
push
push
xchg
dec
mov
(bad)
enter
and
iret
sar
stos
cs
mov
cmc
icebp
enter
or
dec
cmc
jl
add
stos
data16
stc
jmp
pop
shr
ins
mov
(bad)
add
retf
xor
sub
xchg
addr16
and
sahf
add
inc
stos
sub
jae
adc
out
(bad)
pop
xchg
xchg
neg
add
add
cmps
inc
mov
dec
push
stos
sbb
in
ins
or
pop
pop
sahf
pop
jnp
movs
inc
push
loope
outs
into
std
mov
mov
sahf
in
add
add
je
inc
pop
add
pmaxub
ret
cld
fild
das
dec
and
and
mov
mov
xchg
dec
aad
xor
pushf
in
sub
ds
lock
sub
sub
xor
fist
fwait
nop
stc
mov
(bad)
mov
sub
lods
fist
cwde
sbb
and
mov
mov
inc
dec
add
add
sbb
push
mov
inc
add
rcr
or
(bad)
(bad)
mov
(bad)
out
xor
fwait
mul
pop
clc
jb
jo
les
int
std
nop
mov
hlt
into
(bad)
pop
mov
loopne
sbb
das
cmp
xchg
mov
leave
fnstsw
or
pushf
ret
jns
(bad)
push
popf
cwde
mov
aam
test
xlat
adc
outs
xor
stos
or
sbb
mov
adc
add
fst
inc
xchg
pop
jne
shr
dec
scas
cs
ins
jle
mov
test
lahf
pop
mov
scas
cdq
jnp
adc
daa
mov
sub
and
push
mov
adc
mov
dec
inc
sbb
sbb
(bad)
movs
les
pop
pushf
pop
pop
mov
(bad)
bound
cdq
js
and
pop
push
and
sahf
in
xor
push
idiv
add
out
shl
mov
push
mov
stos
jmp
popf
in
cs
out
stos
pop
mov
jmp
out
jo
jbe
jbe
ret
imul
xchg
cli
in
and
setne
ficomp
fisttp
mov
test
xor
in
mov
adc
xchg
jbe
je
sub
xchg
aad
and
jmp
dec
add
or
adc
dec
and
mov
out
sbb
jg
cmp
mov
mov
imul
push
cmps
fsub
adc
fiadd
add
aaa
je
cmps
arpl
pushf
sbb
mul
or
sub
call
(bad)
ret
xor
mov
in
or
pop
mov
clc
xor
add
iret
stos
and
das
fs
movs
loop
idiv
xchg
rol
inc
leave
mov
test
jle
(bad)
(bad)
sbb
inc
mov
adc
jae
sub
jne
cmp
int3
sbb
in
pop
aam
(bad)
clc
mov
pop
enter
mov
push
aad
ror
cmps
xchg
jge
mov
dec
or
jb
sbb
ja
fmul
or
ror
jmp
push
imul
rcr
push
add
(bad)
std
ins
adc
mov
or
sti
icebp
pop
je
jp
loope
jmp
mov
add
stc
pop
push
aam
mov
ret
movs
fisttp
mov
jle
and
pop
mov
test
fadd
pop
popf
pop
jecxz
int3
out
pop
gs
dec
mov
cmps
xchg
mov
mov
xchg
push
pusha
mov
add
push
clc
stos
sbb
mov
push
ins
mov
repz
stos
imul
jge
xchg
(bad)
cmp
inc
pop
xchg
xor
enter
or
sub
mov
sbb
adc
push
das
std
out
or
lds
push
push
pop
push
mov
daa
xor
ja
imul
fistp
popf
and
enter
jle
add
sbb
adc
stos
inc
push
ror
pop
pushf
xor
call
in
imul
inc
retf
jecxz
push
movs
out
popa
(bad)
cli
ss
mov
pop
out
hlt
push
pop
inc
mov
push
stos
push
pop
mov
cwde
out
push
sub
retf
sbb
sar
cmp
nop
cmps
jge
je
cwde
cmp
or
outs
mov
inc
ins
hlt
dec
or
jbe
popf
rcr
test
pop
mov
lods
imul
xor
lahf
adc
dec
lods
jae
inc
xor
sbb
push
xchg
adc
popa
or
xor
jmp
push
pop
leave
and
out
or
sahf
xor
cmp
push
repnz
pop
sub
mov
(bad)
push
sbb
cmp
dec
mov
mov
and
das
inc
pop
aas
ins
inc
mov
rol
add
inc
out
xor
stos
dec
sbb
push
js
scas
add
(bad)
push
jno
ins
lahf
dec
rol
jne
xlat
aas
jne
jp
push
jg
fild
jmp
jmp
jmp
or
loop
outs
push
(bad)
lock
inc
cmps
dec
inc
xlat
jmp
out
ret
sub
mov
mov
dec
adc
mov
or
outs
mov
addr16
int
xchg
inc
icebp
sahf
(bad)
out
jl
sub
sbb
out
fsubrp
and
hlt
jno
dec
cmp
lds
inc
and
repnz
and
adc
jnp
lods
pushf
int
das
mov
jg
sar
addr16
or
push
jge
jbe
mov
dec
je
and
push
in
jle
punpcklbw
and
xor
addr16
iret
jae
push
call
cld
xchg
push
ja
fimul
loope
adc
pop
dec
(bad)
mov
cmps
(bad)
call
jne
dec
jbe
shl
mov
loope
fsub
inc
ror
jbe
shl
test
xchg
fs
int3
les
loopne
inc
mov
inc
xchg
ja
add
add
mov
cmp
outs
mov
fs
cld
cmp
data16
xor
xchg
cli
addr16
mov
std
sub
xchg
sub
cwde
and
add
mov
call
mov
stc
sbb
sbb
or
movs
in
or
daa
mov
sbb
(bad)
(bad)
and
imul
cmp
bound
mov
jmp
push
fisttp
out
aaa
mov
stc
int3
pop
fsub
or
add
in
loope
jno
sar
ret
xchg
jecxz
or
xchg
cmp
pop
loop
pusha
(bad)
sar
rcl
ret
xor
sub
retf
and
sti
adc
fmul
lds
jmp
xchg
fsqrt
inc
mov
int
retf
lods
pop
cmp
xlat
mov
repnz
and
rcl
cmps
jno
mov
xor
enter
outs
out
aam
call
xchg
cmps
scas
push
call
mov
cdq
or
cmp
jl
in
in
fwait
repz
cld
jp
shr
pushf
sub
push
mov
test
popf
adc
or
scas
cmc
inc
ja
mov
cmps
(bad)
pop
pop
(bad)
or
jecxz
cmp
cwde
nop
jg
cmps
mov
(bad)
(bad)
repnz
popf
jge
les
clc
jns
xchg
mov
jle
test
mov
jmp
sti
nop
addr16
addr16
or
xchg
fistp
stos
sbb
and
out
xor
mov
ret
inc
mov
and
rcl
add
sbb
or
cmp
test
push
ins
fnstsw
push
(bad)
mov
cmp
add
arpl
sar
jbe
stos
(bad)
push
jl
out
jbe
mov
jne
xor
sub
in
xchg
aas
leave
mov
or
adc
inc
imul
mov
mov
cli
jnp
pop
das
sub
adc
fdivr
jno
ret
mov
and
mov
sub
ja
xor
adc
ins
pop
mov
(bad)
fild
sbb
dec
push
stos
add
and
out
inc
or
gs
jp
daa
cmp
loopne
cmp
and
push
dec
mov
iret
fs
into
mov
pop
enter
xor
xchg
add
adc
add
in
ins
outs
test
push
xchg
push
sbb
pop
push
jbe
jbe
cmc
jbe
out
out
inc
mov
inc
dec
les
jo
push
push
inc
ins
xchg
xor
call
inc
scas
cmp
or
dec
fisttp
das
ss
sti
pop
arpl
hlt
(bad)
jnp
sbb
or
and
fistp
fstp
xchg
sub
dec
xor
ja
jge
pop
test
inc
mov
xor
and
loop
xchg
mov
mov
mov
imul
test
ret
in
pushf
inc
sbb
mov
retf
xchg
out
push
nop
xor
sub
or
(bad)
int
out
cs
mov
mov
ja
jp
aad
aaa
xchg
lahf
mov
sbb
xor
daa
mov
jecxz
push
pop
pop
xor
mov
shl
sti
jno
in
sub
int
and
or
and
mov
enter
mov
movs
jnp
sbb
dec
sbb
and
cmp
shr
(bad)
push
dec
or
inc
sub
fistp
mov
shl
ss
fmul
sub
in
dec
(bad)
push
mov
lock
mov
cmps
rcl
add
mov
in
adc
test
icebp
inc
push
movs
mov
enter
das
xlat
cwde
test
cmp
into
lods
dec
outs
popa
(bad)
sub
stos
call
jecxz
xchg
je
and
in
mov
mov
popf
imul
aaa
xchg
cld
mov
mov
(bad)
mov
loop
js
sbb
push
jo
or
jmp
stos
retf
add
shl
(bad)
jo
(bad)
pop
in
push
add
pop
mov
jae
inc
pop
cmp
sahf
inc
not
mov
push
ss
stos
ret
and
inc
xchg
mov
(bad)
int
xchg
push
sub
nop
fstp
fwait
repnz
scas
jge
inc
mov
jmp
xchg
lods
movs
test
xor
test
mov
daa
or
pop
cmp
arpl
push
fsubr
mov
pop
xor
loop
out
pop
js
int
mov
fistp
lods
jae
es
sub
cmp
and
dec
pop
jne
fwait
scas
xor
addr16
dec
or
sbb
(bad)
jo
rol
aad
xchg
out
fisub
mov
or
pop
cmp
sbb
push
cs
les
cmp
cmps
lea
xchg
gs
pushf
jno
popa
test
mov
data16
call
jns
mov
cmp
shr
or
rol
repnz
in
imul
jno
push
adc
dec
pop
push
add
sbb
mov
out
or
adc
cli
popf
gs
xor
fld
out
inc
shl
fistp
mov
je
into
repz
xchg
xchg
std
inc
add
stc
sub
sbb
inc
mov
adc
sub
pop
jb
outs
mov
mov
xor
cmp
inc
add
xchg
lahf
sub
xchg
daa
daa
cmp
jbe
sbb
idiv
fs
rol
icebp
push
jne
pop
aas
lahf
shl
iret
(bad)
pushf
pop
std
into
mov
sar
dec
cli
(bad)
push
test
jae
mov
xchg
in
cs
push
outs
pop
ds
mov
in
(bad)
mov
mov
cmp
mov
sahf
dec
sbb
data16
sub
test
jle
xor
mov
pop
xchg
int
inc
jle
ror
aam
fidiv
mov
pop
test
add
adc
and
leave
sub
or
and
sti
ror
or
dec
mov
test
retf
cmp
jmp
and
mov
ds
lea
out
movs
mov
jae
push
mov
dec
out
cmp
add
inc
or
imul
fistp
popf
pop
push
lods
in
push
push
and
fsub
xchg
cmp
icebp
int
fistp
nop
xchg
adc
jo
jmp
and
fwait
jg
jne
fst
push
jnp
adc
cmp
jns
adc
mov
cmps
ficomp
stos
cmp
fwait
push
movs
nop
fs
sti
mov
pop
sub
ret
push
pop
xchg
add
push
push
sti
or
popf
(bad)
dec
inc
cmps
jge
mov
push
xor
sbb
pop
out
sbb
(bad)
repz
mov
jns
data16
push
push
mov
or
(bad)
das
cmp
test
adc
(bad)
cmp
not
pop
xchg
xor
call
jno
fmul
enter
rol
jl
outs
push
shl
mov
xor
(bad)
in
push
mov
std
clc
iret
inc
add
in
dec
sbb
lock
sbb
jne
xor
jmp
jmp
push
and
xchg
inc
popf
mov
push
stos
stos
pop
or
ror
xor
sub
int
push
mov
push
rcl
pushf
(bad)
jo
pop
(bad)
in
ja
dec
mov
sub
icebp
jge
imul
arpl
pop
pop
push
mov
pop
xor
jg
je
and
int
pop
stos
ja
mul
jmp
loopne
mov
fcomp
das
or
push
sbb
pop
push
add
and
push
daa
and
xchg
or
in
jg
call
aas
push
pop
push
or
outs
out
inc
ret
lea
inc
pop
sub
mov
fcmovnu
shl
sbb
ds
sbb
cmps
or
test
loopne
test
add
sti
jb
jnp
cmp
mov
mov
xchg
aad
mov
cmp
jmp
xor
xchg
icebp
or
cmp
push
scas
sbb
(bad)
dec
cld
fdivr
dec
loope
mov
push
lods
pop
mov
icebp
test
ins
(bad)
and
jnp
std
mov
leave
and
push
jecxz
sub
adc
jl
push
fcom
or
mov
or
nop
pop
aad
add
lods
xchg
in
into
shl
loop
and
sbb
cmp
inc
dec
push
shl
cmp
iret
pop
dec
mov
inc
jns
inc
and
add
dec
xchg
mov
(bad)
push
adc
rcl
mov
jb
int3
push
stos
mov
nop
and
add
mov
mov
inc
push
aad
xchg
std
in
sbb
adc
xchg
push
mov
ror
jge
lock
ins
mov
push
cwde
not
add
out
iret
loope
and
ja
jno
mov
sbb
mov
test
sbb
retf
fisubr
shr
ret
pop
retf
mov
sbb
in
sbb
cld
add
jmp
test
and
iret
push
add
jecxz
addr16
dec
or
push
(bad)
push
bound
mov
bound
outs
jnp
pop
dec
popa
dec
into
and
mov
aam
das
arpl
or
pop
fbstp
mov
adc
inc
mov
(bad)
adc
xlat
or
inc
(bad)
push
daa
push
scas
mov
pop
test
out
ds
in
fsubr
push
ror
and
inc
xchg
frstor
lock
in
mov
fmul
aad
out
call
fstp
push
ror
arpl
mov
mov
shr
inc
cmp
in
hlt
pop
mov
xchg
fsubr
out
frstor
mov
jae
vpmaddwd
jmp
fmulp
std
push
pop
push
mov
xor
jmp
pusha
ret
cmp
dec
xchg
jle
sub
daa
jae
xlat
jl
mov
push
mov
arpl
cmp
or
cs
push
add
movs
mov
call
mov
test
repnz
mov
mov
inc
xlat
fist
sub
mov
xchg
inc
ret
ins
pop
xchg
push
push
xor
in
hlt
pushf
iret
pop
(bad)
adc
xchg
mov
scas
scas
loop
inc
or
repz
in
repnz
or
mov
faddp
push
jns
lea
mov
push
dec
sub
push
mov
sti
ds
leave
jns
and
adc
xchg
push
lahf
mov
std
xchg
rcr
bound
test
stos
(bad)
outs
ret
mov
pop
inc
minps
test
shl
mov
shl
pop
int3
mov
mov
into
jns
and
jle
test
(bad)
cmp
fsub
ret
pop
fisttp
int
cmps
ficom
loopne
movs
loop
dec
mov
xchg
cmp
loope
retf
stos
div
ins
xlat
fldcw
mov
retf
pop
pushf
pop
jp
xor
jge
jb
cmps
mov
mov
neg
gs
mov
push
xor
fwait
dec
fld
xchg
cwde
popa
repnz
or
or
pop
mov
aas
leave
mov
fidivr
xlat
out
(bad)
imul
fadd
loope
push
sbb
nop
mov
gs
pop
mov
dec
adc
(bad)
pusha
xor
call
popf
aaa
push
(bad)
or
and
inc
sbb
ds
clc
adc
out
cwde
mov
adc
dec
add
sbb
pop
bound
outs
in
or
sbb
inc
mov
lahf
aas
sbb
cmp
jp
mov
cdq
movs
mov
cli
pop
lds
xchg
lods
jecxz
and
mov
pop
popa
sbb
pop
push
add
or
cwde
xor
std
mov
add
cmp
stos
sahf
dec
jns
fld
push
jmp
xchg
push
cmc
ins
das
sub
xchg
iret
jb
mov
nop
adc
sbb
xor
cmps
push
add
movs
lock
bound
ins
xchg
push
fisubr
push
mov
std
and
je
fsubr
xor
xchg
in
mov
(bad)
loopne
mov
sbb
mov
mov
ins
jo
enter
mov
cld
inc
mov
iret
cmps
arpl
gs
clc
inc
jmp
sub
sbb
int
ror
cmp
ins
or
adc
iret
mov
xchg
jg
dec
pop
jmp
sub
ja
and
nop
adc
mov
add
test
push
sahf
push
push
mov
hlt
ret
in
jl
and
stos
pop
xlat
mov
xor
push
adc
ja
mov
and
das
out
push
push
int
jmp
mov
xor
xchg
in
push
setle
mov
mov
adc
mov
sbb
mov
xlat
out
js
push
xor
fldl2t
inc
xrelease
jns
hlt
xchg
mov
mov
mov
cli
add
sub
or
xor
push
xchg
pushf
adc
sti
lock
dec
push
jne
sub
scas
out
and
daa
xor
cdq
xlat
popf
xlat
pusha
dec
mov
dec
sahf
xchg
scas
mov
lods
mov
sub
xchg
or
xor
fistp
jmp
add
lea
push
jle
mov
fisub
dec
rol
pop
mov
xor
rol
push
sub
sbb
ss
adc
jp
and
xor
arpl
inc
xor
cli
fs
pop
xchg
popf
xchg
add
pop
fist
sti
cwde
mov
sub
inc
push
not
dec
sub
mov
mov
int3
pop
fld
scas
push
in
sahf
jno
sub
lock
sahf
shl
inc
pop
cmp
xlat
imul
fcmovne
dec
(bad)
sti
div
or
xor
ins
test
call
stc
es
add
cmp
shl
xor
js
cmp
push
(bad)
fsub
cmp
sahf
jp
test
sbb
pop
add
and
and
shl
inc
lods
dec
in
jl
loopne
sbb
stc
xchg
or
pushf
lods
xchg
jo
dec
shl
aas
int
xor
sub
xchg
cmp
inc
mov
fwait
jmp
xchg
ins
push
je
cmp
jnp
mov
cmp
out
pop
test
stos
adc
mov
mov
sar
fisttp
mov
fld
add
mov
sbb
js
sub
sbb
popa
pop
hlt
(bad)
jmp
outs
mov
ror
mov
ins
lea
mov
std
push
cmp
pcmpeqw
(bad)
test
mov
aaa
mov
mov
cmps
mov
pop
bound
into
inc
test
iret
jle
cmp
sbb
sbb
into
pop
repnz
cmp
fiadd
pop
push
inc
je
adc
pop
(bad)
mov
inc
jg
and
or
imul
(bad)
in
mov
not
imul
add
pop
cmp
aam
push
pop
and
arpl
pop
xchg
sub
push
mov
pop
dec
repnz
movs
je
sub
les
xchg
mov
push
fcmove
xor
imul
pop
dec
inc
push
je
mov
push
call
mov
fsubrp
mov
loope
ret
into
(bad)
scas
iret
mov
pop
sub
mov
retf
mov
(bad)
leave
jmp
test
inc
aaa
sbb
sub
sti
movs
ja
inc
sbb
repz
rol
repnz
retf
in
hlt
xchg
or
in
sub
pop
jecxz
push
les
jnp
int
mov
mov
mov
jnp
dec
test
mov
out
pop
push
sti
in
gs
cmp
mov
hlt
sub
sbb
mov
mov
adc
fst
retf
pushf
pop
pop
or
cmps
pop
jmp
std
cmp
hlt
xlat
lods
shr
movs
xor
sub
in
jmp
ss
jbe
rol
pop
ret
js
call
jmp
mov
fsub
bound
ja
or
addr16
movs
dec
inc
ror
shr
jl
dec
xor
stc
pop
ror
idiv
cdq
(bad)
retf
aaa
or
sbb
xchg
pop
cmps
int
push
jmp
js
add
inc
sbb
sbb
js
mov
addr16
call
push
imul
jno
jno
mov
mov
xchg
xor
pop
cmp
inc
aas
addr16
sti
aas
out
lods
sar
movs
aam
push
mov
ja
in
mov
jmp
mov
dec
scas
aad
outs
or
aaa
mov
int3
xor
outs
fwait
(bad)
retf
lods
pop
jl
mov
pop
fldenv
xor
push
cmps
push
pop
and
push
xchg
ins
test
sub
pop
mov
xlat
xchg
into
int3
daa
in
gs
fimul
xor
dec
test
out
sbb
push
cmps
adc
sbb
cmp
pop
in
scas
adc
or
inc
out
sahf
repz
ret
adc
cmp
adc
imul
mov
fnclex
mov
xor
xlat
pop
jbe
lahf
push
mov
add
mov
rol
inc
dec
pushf
test
xchg
sysret
stos
movs
mov
daa
jns
int
and
repnz
js
sbb
call
daa
les
mov
cmps
hlt
(bad)
into
popf
test
and
rcl
ja
xchg
dec
sbb
xor
rcl
jg
out
loopne
stos
or
jl
out
mov
dec
mov
loopne
fs
sbb
adc
in
mov
scas
enter
xchg
dec
jbe
push
push
popa
adc
outs
sbb
shr
dec
clc
pop
inc
xor
push
jecxz
mov
mov
test
sub
mov
or
test
cmps
test
dec
sub
jne
movs
sahf
sbb
xchg
mov
cmps
test
clc
jp
xchg
es
dec
xchg
mov
mov
push
scas
and
ret
and
loopne
pop
pushf
push
inc
into
jmp
add
sub
(bad)
adc
lods
stc
outs
jns
jmp
ret
cdq
test
ds
sbb
test
cmp
xor
jo
lahf
jecxz
mov
cmp
push
mov
cmp
xchg
sbb
inc
lock
shl
shr
adc
push
aaa
pop
das
xchg
sbb
dec
dec
cwde
aam
adc
pop
cmps
xor
xor
repz
outs
jmp
fstp
xchg
sbb
pop
data16
ja
inc
add
xchg
dec
shr
inc
push
and
pop
push
gs
ss
ja
in
xchg
push
pop
in
jmp
push
pop
jge
fadd
xchg
stos
push
adc
adc
push
ror
pusha
jae
out
or
pop
push
mov
cmp
or
retf
retf
addr16
test
lods
sub
adc
out
sbb
std
inc
adc
(bad)
cmps
ins
pop
mov
in
dec
fbstp
scas
push
or
je
ret
sti
jle
mov
in
dec
in
test
icebp
xchg
lods
rol
push
jp
out
adc
sbb
imul
test
jae
inc
push
jae
lea
call
sbb
mov
xchg
push
out
sbb
gs
pop
lahf
adc
lds
test
outs
sbb
sbb
mov
jnp
cmp
les
and
pusha
das
cmps
lods
dec
dec
adc
fnstcw
lea
addr16
ins
ins
mov
jno
mov
add
cs
mov
xchg
call
imul
mov
cmc
aad
div
cmp
or
mov
pop
sar
add
add
fsub
cmp
lahf
mov
and
push
mov
push
loope
loop
or
sub
nop
push
loopne
mov
pop
loopne
dec
and
pop
shl
xor
sbb
push
xchg
scas
loope
data16
dec
sub
or
push
in
adc
cmps
push
aad
hlt
scas
mov
xor
add
cmp
popa
adc
aad
sbb
inc
cmp
cmps
shl
mov
mov
popa
std
xchg
sub
ret
rcr
jb
sub
push
xchg
cmp
call
fwait
dec
push
(bad)
retf
or
xchg
movs
pusha
sahf
loopne
mov
shl
pop
sub
mov
push
pop
rcl
inc
test
adc
cmp
jle
push
div
pusha
sub
repz
rcr
or
out
cmp
jecxz
dec
lods
sub
and
mov
dec
cmps
movs
jae
inc
mov
cmc
xor
neg
outs
mov
jl
mov
pop
mov
push
push
shr
fdiv
xchg
test
xor
popf
sbb
adc
mov
cdq
push
push
ins
xchg
stos
ins
jne
adc
mov
lahf
jae
pop
call
repnz
out
xchg
mov
mov
mov
pop
ds
popa
cld
cmp
ins
movs
xchg
cmps
xchg
inc
jbe
jns
adc
int
ss
or
push
ds
sahf
xor
js
call
mov
push
pop
arpl
mov
inc
arpl
xor
(bad)
int3
xor
out
xchg
dec
adc
push
movs
jl
ficom
sbb
jns
loop
add
inc
shr
pop
hlt
cwde
fcmovnbe
retf
fwait
xor
add
jg
movs
add
leave
add
push
iret
lods
inc
test
fdiv
push
and
cmp
jecxz
out
and
adc
into
fbstp
mov
jge
add
mov
ss
pop
or
xor
sub
sahf
daa
mov
add
xchg
inc
jne
outs
jno
jno
and
sahf
(bad)
out
mov
and
mov
mov
or
jb
sbb
adc
and
sub
dec
es
loopne
pop
inc
jl
push
mov
dec
mov
bound
