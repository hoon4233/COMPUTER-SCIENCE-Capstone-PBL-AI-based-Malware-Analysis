(bad)
(bad)
call
in
sub
push
push
push
push
call
jne
push
mov
(bad)
inc
push
push
lea
push
call
and
add
cmp
jbe
lea
push
fldcw
push
les
jg
jnp
xor
or
cmp
imul
fdiv
sbb
fcomp
or
daa
fcmovnu
std
int
int3
push
call
sar
in
adc
std
inc
mov
jmp
cmp
je
and
push
push
xor
jae
aaa
pusha
mov
and
(bad)
ins
sti
add
pusha
sbb
pop
mov
pop
mov
cmp
ret
push
mov
inc
inc
std
outs
in
inc
test
jne
pop
ret
mov
cmp
je
inc
cmp
mov
dec
jne
ret
push
mov
icebp
inc
cmp
dec
push
xor
mov
add
ret
mul
seto
neg
or
push
mov
(bad)
mov
mov
test
pop
jle
add
mov
pop
or
outs
jg
mov
in
jl
ss
mov
mov
and
add
ret
jo
push
test
mov
add
lea
push
ror
xchg
xor
cld
cmp
ja
jb
or
inc
pop
or
sub
sub
add
test
sti
je
mov
or
push
or
adc
ret
mov
bound
cmp
cmp
das
ins
jg
or
jle
aas
je
mov
lea
push
add
adc
movs
test
dec
neg
mov
mov
and
dec
pop
push
fwait
in
popf
popa
pop
pusha
rcl
jne
adc
jge
ja
(bad)
or
inc
and
imul
or
push
mov
jg
imul
xor
pop
pop
nop
cmp
jmp
push
pop
mov
ins
inc
push
cmp
mov
mov
or
push
push
mov
lock
push
(bad)
mov
push
push
push
sbb
mov
je
push
fwait
shl
mov
pop
ins
(bad)
mov
lea
mov
test
jl
mov
mov
add
sbb
in
xchg
lods
pop
xor
and
pop
mov
cli
leave
clc
inc
into
xchg
cs
fwait
cmp
cmp
jle
fidiv
(bad)
je
aas
inc
inc
(bad)
mov
ins
cmp
mov
(bad)
jg
sub
dec
cmp
jle
cmp
jle
mov
cdq
sub
sar
jmp
mov
invd
setle
dec
and
add
lea
cmp
jge
sub
add
pop
push
jg
in
pop
(bad)
scas
adc
lea
push
js
mov
cmp
pop
push
push
ins
mov
ret
xchg
add
aaa
call
inc
dec
adc
pop
not
xchg
in
test
or
add
out
xchg
push
sub
or
cmc
ds
std
neg
sbb
inc
ret
xor
jne
add
fcmove
jne
mov
adc
cmp
test
call
jmp
push
(bad)
pop
lods
xor
sbb
add
sub
mov
sbb
aam
cmp
aas
lea
mov
jae
jmp
fldenv
mov
xchg
mov
sub
mov
data16
ds
mov
iret
mov
or
(bad)
cmp
xchg
inc
cld
push
push
push
push
push
mov
cmc
mov
movs
sub
jl
and
inc
arpl
stos
add
test
jmp
mov
fsub
xor
je
add
je
add
jle
jge
mov
lods
adc
dec
push
jmp
push
add
push
jmp
fbld
daa
icebp
jmp
cmp
or
xchg
data16
imul
xchg
sub
fild
or
imul
je
sbb
push
jmp
and
push
movs
or
mov
push
mov
cli
push
mov
js
dec
fiadd
leave
sub
push
push
stc
js
fiadd
jg
jmp
aad
inc
lods
das
das
and
or
or
push
inc
cmp
jge
add
mov
sbb
cwde
sub
fcmovnbe
fsub
push
lock
hlt
call
test
add
pop
or
ins
jae
xlat
test
or
pop
or
cs
stos
jne
push
jnp
pop
in
and
neg
in
mov
retf
push
inc
sub
retf
fld
outs
xchg
loope
out
or
(bad)
mov
je
mov
cmp
mov
ja
add
aam
add
cli
fucomp
sub
and
xchg
mov
sub
cmp
loopne
out
mov
imul
dec
jge
sbb
xchg
rcr
cmp
dec
jbe
or
ins
xor
pusha
fwait
inc
aam
sbb
inc
mov
in
outs
mov
data16
or
add
shl
adc
add
cmp
sbb
mov
and
ds
cmp
inc
push
inc
add
les
mov
fcomp
push
jl
sbb
or
mov
adc
into
js
ds
movs
or
js
mov
pop
fst
sbb
sbb
(bad)
outs
ins
dec
mov
leave
sbb
push
lea
daa
(bad)
pop
fist
add
jne
shr
pop
ins
imul
fs
das
in
push
cmp
jbe
ror
add
jge
ins
add
push
and
mov
dec
sbb
sub
ja
pop
or
inc
fwait
jo
(bad)
je
rcr
ss
call
push
stos
jmp
mov
cdq
push
jne
cld
cmp
test
xchg
push
jns
and
test
mov
cli
cmc
pop
mov
push
cld
xchg
jnp
popa
ja
mov
jge
and
mov
cmp
ds
xor
mov
pop
and
dec
fs
push
ja
or
out
js
fs
xor
mov
les
or
push
ret
das
sbb
jmp
jo
jmp
fcomi
add
loopne
inc
sbb
sar
add
test
add
or
mov
and
jl
(bad)
cmp
je
xor
ret
ret
in
mov
xchg
pop
ins
mov
(bad)
cmp
in
inc
or
cmp
js
imul
aas
rol
stc
or
imul
lahf
sbb
add
push
mov
inc
and
clts
jmp
rol
loop
js
adc
adc
inc
jnp
pop
add
cmps
ret
add
cs
inc
cld
and
outs
dec
jl
icebp
jle
std
stc
xor
mov
out
aas
add
test
lds
data16
daa
(bad)
add
sbb
push
sti
cmp
jne
(bad)
fldcw
inc
inc
sub
and
aas
xchg
aad
sub
rcr
lahf
cmp
aas
jae
mov
add
sub
jmp
ss
adc
mov
adc
mov
or
pop
sbb
jmp
push
push
inc
xor
push
add
popf
(bad)
xor
sbb
xor
lds
cmp
xor
in
mov
ins
push
adc
sub
int3
pushf
cdq
dec
or
shl
xchg
dec
add
test
jne
pop
ret
loop
push
(bad)
iret
je
adc
xor
add
push
addr16
jp
xchg
inc
pop
cmps
inc
shl
sti
fiadd
cmps
sub
mov
out
cs
xchg
xor
cmp
push
je
and
test
push
imul
mov
and
or
je
iret
inc
test
jne
popa
sub
std
nop
test
test
fwait
sbb
push
cmp
jecxz
in
push
pusha
test
mov
sub
ins
test
sbb
aad
mov
test
jecxz
xchg
push
cli
push
cld
xor
push
dec
int
call
jo
jae
jge
push
sub
adc
add
push
pop
xor
mov
in
jle
jl
cmp
dec
pop
sbb
adc
jle
add
aam
cdq
int
sbb
fdivr
mov
fcomp
pop
cld
push
pop
mov
clc
fcom
sbb
fidiv
mov
mov
sbb
add
mov
cmps
and
push
push
in
int
test
(bad)
push
retf
jmp
pop
push
push
pop
clc
cs
xor
scas
(bad)
or
lock
push
mov
arpl
mov
(bad)
jl
ins
xor
jmp
xorps
push
pop
sbb
add
cmp
jge
inc
ficomp
into
ret
or
in
add
or
push
and
sub
data16
push
add
clc
cmp
dec
out
dec
push
xor
sbb
mov
fldcw
out
adc
or
fsub
pop
adc
and
cmp
sub
xor
lods
test
cli
push
iret
jnp
xor
ret
cmp
inc
mov
pop
cmp
or
adc
and
sar
ret
lea
sbb
fadd
into
mov
aas
adc
or
mov
push
cmp
cwde
push
aad
(bad)
mov
xor
fs
int3
sub
pusha
addr16
add
rcl
ins
jle
fcmovne
(bad)
data16
sub
push
add
sysenter
hlt
std
push
mov
push
je
(bad)
out
add
fldenv
cmp
jo
or
sbb
adc
xor
ret
or
test
xor
dec
cmp
mov
idiv
aam
inc
(bad)
mov
loopne
adc
sbb
shl
cmp
or
mov
sbb
pop
adc
xlat
retf
inc
outs
cmp
xchg
addr16
push
sbb
xor
cmc
rcl
imul
push
hlt
ins
add
call
dec
(bad)
pop
into
sbb
xor
ja
xor
mov
fs
and
lock
jle
loop
adc
mov
adc
inc
lods
or
adc
repnz
dec
add
or
jl
lea
push
add
jo
cmp
add
push
imul
mov
mov
lea
fld
cli
outs
test
mov
lea
xchg
xchg
jle
sbb
xchg
cld
pop
mov
out
cmp
cmc
into
adc
pop
push
ins
sar
pop
outs
xchg
and
push
add
ja
(bad)
dec
add
cmp
out
sub
sub
cmp
sub
push
cmp
fsub
and
cld
xor
lods
ror
xor
xor
and
sti
inc
mov
dec
push
mov
add
cmp
xchg
iret
shl
push
inc
sbb
or
mov
add
js
stos
jmp
adc
fst
je
pop
pop
dec
xchg
fwait
mov
jo
popa
je
pop
pop
call
ret
cmp
daa
(bad)
jmp
cmp
cmp
jge
jle
sbb
push
das
test
adc
sbb
jne
adc
or
mov
pop
pop
inc
scas
cs
mov
pop
cwde
mov
adc
sbb
sbb
push
mov
mov
dec
sbb
inc
xor
and
xor
sbb
add
mov
sub
lods
fdivr
ror
or
push
push
push
les
fs
inc
fs
xor
jecxz
or
out
test
jne
dec
cld
inc
jg
mov
mov
mov
scas
daa
cmp
jne
(bad)
mov
pop
xor
push
inc
mov
cmp
out
imul
ret
sti
call
out
jg
jl
jmp
mov
jmp
aad
fist
lds
adc
jmp
xor
adc
pop
fsubr
mov
add
xor
test
or
dec
xor
loope
test
mov
sub
out
shl
inc
sub
cmp
sub
mov
les
xchg
outs
popa
inc
inc
ret
add
in
mov
arpl
add
inc
and
mov
in
inc
aam
cmp
ja
and
and
rol
jae
push
fcomp
mov
or
mov
or
leave
mov
adc
mov
ret
dec
mov
inc
out
js
or
popa
and
inc
cwde
test
push
inc
and
(bad)
sbb
das
in
or
adc
inc
sub
sbb
sbb
xchg
js
jle
jg
mov
mov
adc
fnstsw
(bad)
jmp
add
dec
cmp
cmc
or
call
mul
adc
push
cmp
push
mov
rol
mov
xor
xor
ss
xchg
adc
std
sbb
in
mov
dec
add
xor
jno
adc
sbb
xchg
adc
call
mov
invd
cdq
or
jo
popa
pusha
adc
imul
cli
test
je
inc
inc
or
aam
out
add
ja
pop
push
adc
adc
jle
aas
cmp
jecxz
test
adc
sub
int
aam
jne
imul
add
inc
mov
push
pushf
iret
add
push
fisubr
cmp
xor
push
cmps
mov
cmp
jb
aad
sbb
adc
push
or
clc
mov
or
data16
lea
push
rcr
sbb
sbb
push
xor
sti
adc
or
and
jle
push
clc
mov
xchg
fldcw
dec
sbb
aam
pop
add
pusha
outs
in
ins
push
mov
or
push
inc
add
ror
lar
push
fcom
sbb
sahf
adc
pop
ins
pop
dec
hlt
call
jg
cdq
setge
jnp
shl
push
leave
xor
xlat
or
into
fwait
xor
les
inc
xor
in
xchg
repnz
leave
mov
push
movs
loopne
std
jp
dec
mov
pop
pop
jmp
fisub
adc
xlat
data16
xor
ss
push
dec
jge
jnp
sbb
pop
fimul
push
or
call
mov
in
xor
call
push
mov
lea
dec
ins
hlt
out
or
retf
cmp
add
fadd
lock
pop
jmp
(bad)
push
je
sub
clc
ja
(bad)
call
cs
imul
mov
clc
inc
cmp
mov
je
or
jp
popa
daa
inc
jmp
xchg
push
mov
or
fcomp
popf
jne
pop
add
fucomip
or
xchg
sub
dec
in
push
lea
xor
mov
adc
pop
ja
or
jbe
dec
in
mov
jecxz
arpl
adc
xor
ret
jbe
jp
shr
mov
xchg
sub
and
stos
hlt
clc
movzx
cmp
pop
outs
mov
push
and
leave
inc
mov
cs
jmp
dec
shr
push
mov
pop
adc
rol
fdiv
xor
sub
cmp
adc
ins
and
sub
cmps
pop
movs
xor
sub
movs
xor
sub
call
fwait
lea
sub
xor
movs
xchg
rol
jmp
in
jmp
jl
lods
fmul
lods
inc
in
imul
dec
mov
jge
clc
je
sub
scas
cs
shl
mov
outs
mov
and
pop
xor
jl
sbb
stos
xchg
stos
sbb
mov
inc
iret
shr
push
dec
ror
fcom
push
adc
inc
xchg
test
das
mov
pop
call
neg
pop
add
or
mov
iret
hlt
or
outs
push
movs
std
and
dec
ret
cmps
dec
cmp
xchg
cmp
iret
inc
or
popa
inc
test
je
push
and
pop
mov
or
mov
and
adc
jne
add
adc
enter
mov
push
adc
out
jno
cmp
pop
xchg
xor
imul
aam
or
sbb
push
sti
das
or
pop
loop
ja
(bad)
or
add
add
inc
sbb
pusha
movs
in
push
scas
ins
scas
sbb
add
fwait
sbb
pop
stos
pop
test
sbb
push
or
outs
mov
outs
test
push
ja
add
pop
data16
adc
(bad)
lock
ds
por
pop
dec
sbb
mov
stc
sub
je
add
ja
push
pop
xchg
jnp
sub
jne
lea
cmp
addr16
and
sbb
jne
loope
pop
imul
aam
push
xchg
pop
sti
rol
je
das
cs
adc
idiv
(bad)
jle
jns
or
add
xor
test
or
loop
adc
add
rcr
inc
pop
push
jo
aam
stos
or
xor
sbb
xchg
test
mov
pcmpeqw
push
push
jnp
sub
icebp
paddq
push
push
daa
push
push
or
in
push
cwde
add
popf
jge
mov
dec
cmc
fild
loopne
pop
xor
out
add
dec
push
enter
cmp
lods
outs
mov
cvttps2pi
shl
aad
aam
das
inc
xor
test
out
jmp
inc
dec
push
jmp
cmp
jnp
dec
push
cdq
pusha
jmp
not
sbb
push
sbb
sub
mov
add
fmul
pop
hlt
fwait
std
sbb
xchg
pop
pop
fmul
push
inc
pop
xchg
mov
jo
pop
scas
push
test
cdq
add
fcmovbe
outs
push
test
into
or
inc
mov
cmps
mov
ds
cli
inc
add
cdq
movs
sub
or
sub
mov
mov
enter
inc
ins
das
data16
mov
cmp
or
push
jle
retf
daa
add
push
in
inc
xor
cmp
xlat
int
mov
fild
fsub
leave
clc
push
and
add
mov
mov
inc
inc
cmp
jl
pop
add
iret
shr
hlt
enter
mov
and
fs
stos
sbb
jg
xchg
mov
push
pop
mov
fmul
pop
pop
lea
jge
das
jmp
mov
xor
pop
xchg
ss
jne
mov
jns
js
push
and
jno
mov
jl
call
xor
mov
mov
shld
inc
aas
adc
sbb
push
mov
cmp
ret
fild
or
mov
or
rol
out
inc
cmp
aam
enter
rcr
and
aam
jge
mov
cld
lea
ja
cs
push
push
add
mov
outs
cmp
int
in
jne
and
push
sub
outs
inc
mov
in
sbb
adc
jl
(bad)
xchg
sub
and
fwait
pop
in
lods
push
pop
jne
movs
pop
icebp
push
aaa
mov
push
inc
lock
cmp
pop
cmp
les
xor
je
je
in
stos
mov
sbb
or
adc
loopne
dec
push
test
adc
outs
call
add
outs
ror
adc
adc
mov
and
jl
add
jne
inc
data16
ins
cs
adc
dec
sub
lods
adc
loopne
sbb
mov
loopne
ins
xchg
inc
push
mov
sbb
pop
js
cli
sbb
fbstp
push
arpl
push
xor
jo
lds
arpl
add
push
ins
call
inc
das
sti
scas
adc
mov
je
push
in
or
push
mov
dec
or
fwait
test
movs
pushf
adc
adc
fiadd
jbe
jmp
or
arpl
fldenv
sub
mov
jmp
sub
xor
fst
inc
push
cmp
icebp
pop
mov
rcl
inc
pop
or
(bad)
jg
adc
fsubr
push
pop
inc
pop
(bad)
popf
pop
add
call
sbb
jmp
aam
imul
repz
xchg
cld
xchg
js
push
inc
jg
ins
ins
mov
add
mov
add
fild
jge
or
dec
cmp
pusha
pop
adc
aam
adc
pop
or
ins
ss
fs
adc
cmp
jge
popa
add
(bad)
mov
jo
mov
ja
cdq
leave
and
(bad)
int
or
adc
(bad)
jle
pop
inc
pop
or
jne
push
mov
mov
jl
sbb
inc
out
(bad)
aad
mov
or
jb
(bad)
jp
mov
jns
cmp
mov
xchg
std
mov
adc
jmp
ins
jl
ins
and
data16
shr
xor
add
or
cmps
shl
jnp
retf
pop
or
cli
cmps
movs
in
fs
add
je
add
(bad)
in
int
jae
mov
sbb
sub
ja
jl
loopne
add
test
or
or
sub
ins
xlat
push
or
enter
jb
cmp
scas
mov
je
ror
cmp
mov
inc
add
inc
rcr
and
enter
int3
pop
mov
enter
lock
ret
clc
xchg
pushf
sbb
cmp
sbb
pop
add
push
sbb
mov
out
nop
int3
pushf
jmp
push
push
leave
and
mov
and
nop
ins
mov
mov
cmp
cmc
add
movs
hlt
push
jne
test
inc
mov
sub
cli
ins
pop
xchg
or
or
add
daa
sbb
xor
push
out
pop
ss
and
sbb
int
xchg
out
test
and
sbb
xchg
in
cld
push
aas
jle
ror
add
test
movs
mov
sub
mov
loopne
pop
push
cmp
je
sub
gs
gs
int3
sub
gs
(bad)
shl
jmp
rol
mov
adc
mov
lock
adc
pop
adc
test
or
inc
adc
mov
cmp
inc
and
inc
cmp
dec
dec
inc
push
push
aas
pop
or
xlat
pop
or
pusha
push
xor
fistp
dec
mov
or
idiv
clc
loop
mov
and
es
inc
in
fist
outs
jl
in
push
cmp
xchg
or
inc
add
sar
or
jl
leave
mov
pop
in
sub
sbb
push
call
add
jl
daa
aad
jb
dec
jmp
out
add
pop
mov
sub
adc
inc
sbb
mov
or
add
jb
enter
cmp
ss
sbb
and
push
in
loopne
mov
or
push
xchg
push
mov
jb
cmp
lahf
pop
fdiv
retf
fmul
lock
and
add
or
test
ja
sub
push
enter
pushf
pop
dec
cmp
pop
jmp
mov
loope
ja
sub
push
pusha
jbe
sbb
xor
mov
mov
sub
mov
add
rcl
rcl
ret
cmp
adc
adc
in
mov
or
jnp
jae
jp
add
add
fistp
adc
cmp
je
add
mov
push
jno
daa
xchg
or
mov
add
popa
jp
dec
xchg
jbe
inc
sub
fild
add
imul
sub
dec
xlat
adc
mov
les
sub
jno
pop
icebp
stos
lods
jns
adc
push
jbe
sub
add
cmp
push
push
xor
clc
sub
mov
in
je
adc
add
mov
xor
div
xchg
jnp
ins
add
dec
jae
scas
je
daa
add
(bad)
mov
add
push
(bad)
or
sbb
push
fsub
add
add
loopne
push
or
jne
shr
sub
add
and
mov
shr
jg
rol
jg
mov
inc
lea
mov
arpl
ja
not
sub
mov
ds
mov
or
xlat
or
pop
inc
loop
ds
push
cmps
cli
sahf
pop
inc
pop
add
add
xor
arpl
jle
adc
inc
scas
hlt
int3
push
loop
lods
or
mul
into
pop
jmp
iret
cli
sbb
(bad)
jge
les
sub
push
in
sub
jmp
adc
jne
dec
aam
dec
mov
push
sub
frstor
aam
push
cmp
pop
cmps
mov
ror
mov
cdq
adc
iret
loopne
mov
inc
cmp
jne
push
mov
inc
mov
pop
add
call
mov
ins
sbb
cmp
icebp
xor
cmp
idiv
push
xchg
inc
fisub
add
push
mov
adc
gs
mov
pop
add
das
dec
xlat
add
not
fsubrp
sub
mov
push
mov
stos
xlat
mov
and
pop
add
pushf
push
test
scas
or
add
or
xchg
mov
or
xor
push
xor
sbb
or
xor
fcmovbe
leave
pop
or
repnz
outs
imul
nop
push
aas
add
and
test
mov
rol
repnz
push
add
sar
inc
cmp
jl
fsub
mov
dec
adc
fisubr
nop
outs
and
addr16
das
lds
cmp
cmp
mov
in
ds
push
test
loope
mov
sar
shl
retf
shl
xor
and
test
je
or
std
jb
jne
sete
jmp
or
jne
lea
cmp
mov
and
stc
xor
jne
xchg
inc
sbb
push
pop
mov
dec
add
add
or
or
pop
(bad)
test
pop
out
int
bound
pop
or
add
sbb
xchg
inc
adc
cmp
sub
pop
sub
mov
sbb
inc
or
test
mov
inc
arpl
cmp
in
and
xor
adc
jp
pop
sbb
sbb
and
mov
or
mov
or
test
add
mov
sub
pand
xor
or
pop
rcr
retf
push
in
ror
jno
xor
and
sub
jb
shl
and
xchg
ins
enter
or
or
mov
or
movs
mov
mov
int3
fld
cmp
data16
out
repz
dec
jno
inc
dec
cmp
mov
ror
mov
call
jne
pop
into
retf
test
or
adc
out
adc
(bad)
push
mov
test
adc
jbe
lock
pop
lock
push
pop
adc
icebp
mov
or
test
add
lock
push
std
dec
push
or
enter
mov
inc
cmp
jl
xchg
push
fisttp
hlt
inc
xchg
and
xor
call
and
sbb
pop
out
adc
add
rcl
call
or
pop
push
nop
push
mov
xchg
mov
add
nop
daa
jns
pop
push
mov
mov
cld
(bad)
mov
xor
mov
add
dec
mov
xchg
es
push
(bad)
aas
bound
shl
push
shl
call
movs
pusha
ror
enter
mov
cmp
push
push
das
jp
sub
sub
inc
cmp
mov
mov
bound
movs
sub
xor
inc
or
pop
sbb
and
xchg
add
push
rol
pop
pop
inc
(bad)
bt
into
cmp
pop
add
and
xlat
mov
inc
push
pcmpeqb
push
das
daa
aam
mov
xor
fist
jmp
sub
jbe
es
mov
aam
adc
push
jle
pop
pop
pop
retf
mov
loop
cmp
je
mov
ret
add
pop
packsswb
push
mov
jl
adc
sub
sub
xchg
inc
ins
xchg
out
mov
ds
je
sub
cdq
pusha
rcr
(bad)
pop
enter
push
xchg
mov
mov
sbb
popa
adc
xor
add
cs
mov
pop
push
sub
mov
push
push
scas
push
or
shl
test
ret
push
rol
lods
cmp
xchg
adc
xor
dec
mov
lods
in
mov
sbb
in
hlt
mov
ins
cmps
pop
or
pop
cmps
and
shl
xor
cmp
leave
add
push
jae
inc
dec
sahf
sub
sub
add
outs
pop
sbb
and
inc
jne
popf
arpl
pop
xchg
(bad)
push
ja
mov
sbb
and
add
xor
inc
das
add
mov
test
pop
add
or
push
mov
push
inc
pop
or
fidiv
cmp
mov
call
or
push
pop
and
hlt
(bad)
cmp
inc
lock
push
inc
lds
pop
and
sahf
call
lods
and
adc
push
test
in
(bad)
push
aam
cmp
sbb
call
je
popa
add
ins
je
cmp
lahf
outs
mov
push
sub
jg
add
dec
das
cmp
outs
popa
dec
cdq
in
pop
sbb
or
js
sbb
mov
dec
pop
mov
push
jbe
mov
push
or
add
or
jo
adc
pusha
dec
sub
push
push
retf
or
cmps
and
or
push
adc
add
mov
aad
mov
or
and
pop
ret
retf
ds
aaa
fild
push
cld
add
jbe
mov
pushf
push
pop
rol
inc
jo
std
xchg
push
push
cmp
mov
mov
cmps
jg
xchg
xchg
(bad)
je
loopne
bswap
dec
mov
jmp
push
and
(bad)
xor
add
lds
pop
pop
clc
jmp
call
add
jne
push
mov
adc
aaa
adc
call
fisttp
test
cmp
add
test
jnp
das
mov
and
test
addr16
cmp
pop
pop
add
push
movs
fimul
movs
bound
mov
sbb
retf
cmp
xchg
or
pusha
inc
imul
lds
punpckhbw
es
rol
fadd
aam
dec
add
pop
fsubp
mov
jno
int3
mov
pop
clc
push
inc
cmp
mov
cld
cs
cli
outs
sub
int3
adc
je
add
cmp
imul
xor
int
push
cmp
xor
cld
mov
push
xchg
jne
mov
adc
in
mov
mov
or
jmp
stos
cmc
xchg
xor
sub
in
xchg
jp
or
mov
sbb
cmp
nop
xchg
sbb
xor
dec
ror
jg
outs
jae
leave
mov
cmp
je
mov
sub
je
or
mov
stc
sub
repz
cmp
ret
nop
jmp
fsubr
fwait
dec
cmp
sbb
ins
add
dec
push
adc
pop
xor
pop
mov
add
aam
sar
lea
jmp
cmp
or
lea
lods
sbb
and
push
jl
xor
fisttp
add
aaa
mov
adc
sbb
push
lock
lea
int
pop
sub
lock
aad
jno
mov
inc
adc
cmp
xor
cs
dec
xor
and
xchg
iret
iret
and
xchg
xor
nop
push
adc
aad
arpl
mov
mov
call
rcl
push
mov
repnz
push
push
sub
mov
addr16
pop
iret
sbb
ror
sahf
push
mov
int3
pop
scas
push
or
jae
dec
sub
xor
and
loope
rcl
fbld
cdq
xlat
and
aam
and
adc
push
push
sub
xor
leave
or
enter
test
adc
dec
nop
xor
pop
mov
fcom
add
jns
mov
test
int3
add
mov
add
(bad)
mov
push
xor
ins
popf
sub
push
test
mov
mov
stc
data16
fs
and
inc
je
mov
mov
sub
xor
mov
xor
sub
cs
jle
jae
lea
xor
mov
mov
ret
add
inc
sub
sub
sar
add
dec
inc
(bad)
inc
inc
inc
cmp
ja
mov
mov
shl
jne
xor
push
jl
shl
fdivr
xchg
mov
sbb
inc
mov
(bad)
adc
data16
push
mov
mov
jae
int3
imul
mov
and
sbb
push
mov
daa
sbb
loope
bound
test
mov
shr
sub
inc
fisub
pop
js
mov
cmp
mov
je
pop
les
je
push
xchg
bound
push
jmp
enter
cmp
mov
push
sub
pusha
imul
mov
or
call
xor
adc
mov
xor
or
inc
jne
call
add
lods
retf
jp
fisubr
cmp
jge
pop
es
add
dec
loope
cmp
xchg
and
inc
mov
mov
pop
jo
jl
lea
adc
pusha
push
push
mov
cmp
inc
pop
mov
lock
push
gs
dec
xlat
(bad)
(bad)
pop
mov
mov
sbb
ja
popa
jne
ja
mov
in
mov
sbb
cld
inc
stos
fcomp
or
and
or
pop
push
stos
dec
cmp
jecxz
in
lea
push
ret
pusha
adc
jno
fcom
mov
mov
sbb
push
fidivr
push
cmp
mov
(bad)
jp
adc
in
or
out
mov
cs
add
loopne
inc
add
mov
dec
xor
je
ins
push
adc
inc
inc
mov
sar
adc
into
sub
mov
add
dec
add
jno
cmp
or
mov
add
call
sbb
test
push
adc
adc
inc
and
icebp
mov
nop
sub
dec
pop
sbb
aam
adc
mov
or
cmp
adc
rcl
iret
sbb
inc
add
push
ins
dec
push
out
fs
mov
sbb
cmp
pusha
and
add
or
(bad)
dec
out
adc
(bad)
xchg
pop
(bad)
sub
add
mov
lea
push
(bad)
cmovbe
stc
and
into
je
mov
into
and
xor
stos
dec
in
mov
mov
inc
dec
or
rol
scas
or
sti
shr
shr
stos
push
ja
cmp
stc
loopne
adc
or
fs
jmp
mov
mov
pop
push
cmp
fdivr
xchg
or
cwde
ror
adc
push
push
cmp
or
xchg
dec
push
cwde
ror
fistp
dec
fucomp
push
lods
fwait
stos
push
ror
fsubr
add
dec
pop
(bad)
pop
inc
cmp
jb
xchg
pop
dec
cmp
ja
pop
enter
int3
out
pop
pop
das
fwait
jbe
int
das
xlat
jae
shl
jne
shl
outs
adc
jnp
jbe
add
cmc
leave
call
outs
sahf
dec
push
sbb
ja
mov
xchg
add
or
xlat
xchg
push
mov
loope
or
loope
pop
adc
push
push
test
pop
stos
fnsave
(bad)
(bad)
and
fadd
xor
push
mov
jnp
ret
sub
out
or
ja
addr16
in
add
jnp
sub
fisttp
js
and
popa
aas
inc
je
push
test
hlt
add
push
jns
add
dec
ja
(bad)
or
std
push
into
call
and
pmulhuw
in
sub
add
cmp
ins
xor
out
cmp
jns
fwait
ins
pop
push
cld
cmpps
data16
mov
aas
or
push
fs
mov
lock
xor
ret
inc
icebp
inc
ds
push
and
push
and
fcomp
ret
sbb
popa
xor
jb
push
mov
jae
rcl
lock
lds
out
leave
das
mov
sub
mov
sbb
cmp
pushf
xchg
aam
cmp
push
inc
data16
out
je
dec
pop
push
ret
ffreep
sub
push
mov
pop
mov
jmp
inc
(bad)
sbb
ror
scas
mov
xor
je
jp
ror
add
cs
sub
div
pop
(bad)
mov
and
xchg
sub
inc
pop
cmp
stos
pop
mov
add
mov
sbb
jmp
jae
adc
push
mov
inc
mov
je
lahf
in
cli
xchg
retf
inc
in
inc
add
mov
add
add
add
inc
mov
add
ret
imul
fnstenv
fdiv
mov
stos
push
push
fcomp
fadd
push
or
int
mov
sbb
fist
inc
inc
cmp
pop
jb
mov
pop
inc
xchg
ins
and
pop
add
cmps
cs
aas
aad
gs
ins
sub
jne
ficom
push
leave
dec
mov
ss
loopne
or
mov
mov
and
lds
pusha
push
sbb
and
popf
fwait
in
sbb
je
mov
ss
pop
dec
jns
mov
ret
add
and
add
ja
xor
ret
inc
or
pop
in
xor
mov
fldcw
jb
xchg
adc
out
sub
sbb
xor
push
sbb
mul
cmp
sti
fsubr
pop
push
ret
arpl
mov
mov
push
dec
(bad)
and
pop
mov
das
ss
aam
mov
pushf
dec
mov
sub
push
cmp
pop
jae
mov
mov
cmp
jmp
out
adc
xchg
ds
or
or
stos
adc
push
mov
xor
sahf
or
cmp
add
loop
xchg
fadd
mov
mov
fist
rol
pop
test
sub
or
pushf
addr16
int3
(bad)
aam
hlt
dec
movs
pop
adc
add
lods
ins
push
adc
inc
movs
mov
ret
sub
cmp
cmovns
sbb
add
pusha
enter
jg
inc
xlat
add
push
mov
or
repz
pop
xchg
(bad)
jb
out
push
in
dec
je
push
mov
rol
mov
add
nop
inc
fucompp
shl
shr
or
xchg
or
out
add
les
or
mov
xchg
mov
dec
imul
ret
xchg
sub
sbb
ins
lock
loope
fbstp
pop
adc
add
mov
xor
add
push
mov
push
sub
and
sar
pop
adc
jle
pop
jne
nop
sub
mov
push
xor
mov
cmp
sbb
jno
mov
push
sub
cmp
or
push
je
clc
xor
pop
mov
push
sti
jmp
addr16
pop
mov
push
(bad)
pop
inc
lock
fmul
and
jns
or
sub
adc
jmp
outs
enter
mov
enter
adc
push
mov
add
call
or
je
sbb
pusha
sbb
stc
js
adc
mov
cmp
les
or
(bad)
retf
fld
loopne
adc
jbe
xchg
je
inc
cmp
jp
enter
jne
mov
sbb
enter
inc
xor
rcr
sbb
div
add
mov
je
int
mov
ja
xchg
xor
or
adc
jp
lods
cmp
data16
lods
and
xor
shl
push
xchg
lods
dec
pop
sbb
ror
mov
jbe
and
fs
scas
mov
and
test
mov
pop
jo
push
jecxz
int3
lds
jp
mov
jg
xor
fs
enter
mov
dec
test
or
add
push
dec
add
xor
xchg
inc
ss
les
inc
mov
shr
sbb
js
inc
clc
jne
add
sub
sub
arpl
sub
je
mov
add
dec
and
das
inc
xor
inc
lock
mov
dec
lods
xor
cmp
shl
mov
xchg
jg
jne
loope
int3
push
les
xchg
adc
scas
adc
mov
mov
inc
push
pop
push
add
fidivr
adc
xchg
add
lock
inc
adc
(bad)
push
pop
lods
or
aas
cmps
jmp
or
mov
pop
mov
or
or
add
cmp
gs
inc
xor
jmp
jge
mov
or
es
and
and
cmp
cmp
test
cmp
mov
loop
aad
push
add
leave
mov
leave
cs
sub
pop
setne
push
xor
shl
sub
mov
pop
call
cmp
sub
ja
or
sub
add
or
pop
xor
push
icebp
or
pushf
mov
sbb
xchg
int3
daa
add
fsubp
xchg
sub
or
inc
sbb
dec
ins
dec
sbb
sub
fdiv
cdq
movs
mov
xlat
in
ins
pushf
add
mov
lds
mov
push
mov
popa
push
push
jg
sub
test
ror
adc
push
sbb
scas
inc
cld
add
push
or
xchg
xor
add
loope
push
xchg
retf
std
push
sub
pop
mov
push
sub
fsub
call
fild
push
xchg
cmp
push
pop
add
or
pop
pusha
push
jo
test
or
sti
add
xor
pop
mov
cld
hlt
pusha
test
and
rcr
push
jmp
add
or
sub
jne
push
(bad)
cdq
jl
lods
and
jmp
pop
push
pop
icebp
sbb
push
retf
and
cs
pushw
push
jne
repnz
ficomp
xor
out
or
mov
push
adc
test
sbb
pop
shl
fstp
in
push
and
adc
push
lock
pop
stc
shr
or
cmp
mov
js
sub
hlt
es
push
push
xor
xor
loopne
not
scas
pop
and
je
out
sbb
enter
cmps
shl
adc
into
or
js
pop
push
push
and
dec
scas
xor
or
jne
pop
cld
and
jp
push
or
xor
dec
add
adc
fs
jmp
add
cmp
jbe
rcl
sbb
mov
shl
push
push
push
pop
aam
push
aaa
add
sbb
test
xor
jns
setne
sub
add
push
ja
stos
xchg
sbb
cmp
jns
icebp
dec
dec
sbb
or
sti
neg
sbb
and
inc
in
mov
sbb
(bad)
or
jo
mov
arpl
mov
xor
or
xchg
pop
adc
push
push
inc
mov
les
cmp
sub
xchg
push
add
mov
imul
xor
jle
push
add
sbb
mov
fisttp
push
jnp
or
sub
imul
add
lahf
sar
out
mov
xor
pop
or
pop
dec
push
inc
mov
mov
pop
inc
xchg
jo
ins
jmp
xchg
inc
xlat
mov
add
sbb
xchg
cmp
push
cmp
call
lock
popa
mov
mov
arpl
push
out
push
mov
or
jae
mov
pop
push
imul
push
(bad)
in
stos
ins
and
xchg
mov
cmp
add
retf
dec
std
call
push
shl
sbb
inc
adc
imul
sbb
sbb
adc
or
mov
retf
call
loopne
(bad)
jbe
dec
sbb
fadd
sub
sar
xor
xor
mov
add
test
mov
or
test
mov
ss
ins
mov
dec
fsubr
ret
cmp
lahf
jle
(bad)
stc
mov
pop
push
add
loopne
addr16
addr16
pop
sbb
jb
rol
or
call
xchg
loop
mov
xor
pop
sbb
push
sub
or
push
stos
xchg
jnp
or
push
loopne
popa
pop
xor
bound
dec
loopne
push
test
push
and
inc
push
or
mov
cmp
outs
push
jg
jnp
inc
sub
or
mov
jmp
in
push
shl
push
add
je
xchg
push
lea
push
dec
or
lahf
lea
fs
rol
add
sbb
(bad)
cmp
in
mov
test
and
mov
shr
push
fprem1
pop
push
and
push
sbb
lods
jge
clc
pop
jmp
sar
shr
adc
inc
add
mov
fstp
mov
je
lea
pop
add
pop
lods
add
sub
push
fsubr
cmp
daa
mov
push
fiadd
xchg
push
push
push
call
cs
add
or
les
mov
sub
mov
movs
pop
aad
push
adc
rcr
das
pop
add
push
sbb
pop
pusha
retf
test
adc
and
fcomp
test
bound
cmp
or
(bad)
or
fild
pop
mov
inc
pop
fdiv
sub
dec
sbb
xor
std
lods
lahf
lock
neg
sbb
test
fs
(bad)
mov
or
mov
adc
xor
ror
xchg
mov
cmp
add
test
mov
mov
xor
mov
ins
mov
adc
stos
adc
xor
cs
psubd
or
push
out
dec
(bad)
xor
sahf
imul
push
(bad)
xor
retf
inc
inc
sub
dec
xchg
sbb
dec
imul
cmp
mov
outs
movs
loop
dec
push
les
enter
push
push
add
imul
jno
jmp
add
gs
cs
xor
pusha
sbb
fnsave
sbb
sar
pop
loopne
adc
xor
adc
jne
cs
push
pop
push
stos
jne
inc
jo
and
lock
lock
add
add
mov
push
cdq
pop
sahf
push
leave
shl
adc
adc
fld
cmp
xchg
out
sub
dec
test
xor
xor
test
aas
in
inc
pusha
jmp
loop
fwait
pop
not
call
inc
push
dec
js
add
data16
xor
sbb
lahf
mov
xor
aad
cmp
adc
dec
adc
div
xor
add
aam
in
push
outs
sbb
lods
fs
bound
sbb
neg
mov
add
call
stos
inc
mov
push
cmps
out
sub
mov
dec
add
cmp
cmps
test
xor
retf
fisubr
cmp
xor
xchg
add
adc
dec
test
and
jecxz
add
mov
rcr
fmul
in
test
dec
sbb
movs
ror
in
icebp
gs
bound
jmp
xor
sub
sub
ins
mov
and
cmp
xchg
out
int
int3
or
(bad)
or
inc
inc
mov
push
xchg
inc
and
adc
push
xchg
pop
add
sbb
add
mov
mov
out
jbe
rcl
or
or
jge
add
fs
sbb
jle
sbb
pop
push
sbb
or
ret
test
popf
adc
aas
into
cmc
ds
mov
ret
cld
popa
ret
mov
mov
cmp
sub
test
movups
rol
mov
pop
sub
cmp
add
ja
sub
xchg
test
xchg
push
and
int
sub
and
or
fcomi
popa
ror
push
dec
mov
les
into
(bad)
adc
push
push
pusha
ror
pop
xchg
xor
ret
inc
test
pop
fst
xchg
xor
loopne
fadd
xor
add
cmp
cwde
hlt
add
out
aaa
sub
xchg
pop
rcl
mov
test
dec
jl
shl
mov
push
adc
mov
xor
movs
sbb
xor
sub
add
sbb
or
aad
dec
add
mov
(bad)
dec
pop
pop
mov
jno
push
add
and
jb
jmp
add
dec
mov
push
mov
in
push
jo
cld
xor
loop
dec
and
sbb
call
cmp
add
sub
push
pusha
sub
movs
inc
sub
push
or
and
test
cmc
sbb
mov
sbb
and
xor
hlt
popa
enter
adc
js
pushf
es
or
int
test
mov
cmp
fs
or
adc
add
dec
(bad)
sbb
aam
jmp
push
push
repnz
inc
sbb
shl
or
jbe
pushf
gs
popf
dec
mov
pop
fild
sub
and
fild
push
inc
je
mov
cmp
nop
sbb
lock
push
mov
ror
loopne
jnp
cmps
hlt
pop
enter
mov
aad
call
out
test
fisub
mov
cld
fs
popf
test
add
fstp
loope
jne
add
pop
pop
jmp
or
adc
ret
pop
pop
ret
sub
jbe
push
dec
cmps
shl
je
add
mov
das
xor
cmp
push
sub
test
jne
(bad)
jg
push
shl
adc
xor
pusha
(bad)
fcomp
push
sbb
xlat
call
paddusb
test
ret
(bad)
fild
or
or
pop
mov
inc
dec
sahf
pusha
adc
or
adc
add
sbb
or
mul
hlt
push
xchg
movs
lock
imul
sub
mov
cmp
mul
add
out
in
mov
adc
or
or
mov
stos
imul
jmp
jecxz
es
push
(bad)
jo
loop
mov
cmc
inc
hlt
mov
(bad)
push
add
mov
sbb
data16
or
sub
or
adc
mov
inc
push
jb
jne
cmp
inc
rol
jmp
fwait
enter
pop
invd
pop
or
xchg
mov
sub
and
idiv
shl
jmp
push
je
pop
mov
add
jmp
or
pop
pop
jecxz
iret
add
and
shl
push
adc
mov
ja
sar
js
jmp
adc
mov
and
popa
xchg
in
inc
push
pop
jg
sub
popa
pop
and
inc
jle
pop
mov
sub
and
push
bound
pusha
rol
cmp
push
and
mov
inc
(bad)
outs
test
std
xchg
fmul
movs
mov
rol
int
cmc
dec
sbb
inc
push
shl
sbb
adc
stos
ds
inc
jge
icebp
add
in
aas
push
push
movs
or
cmp
in
pop
sub
shr
call
xchg
mov
push
popf
mov
push
xor
xor
add
mov
jne
fnsave
arpl
loopne
sub
or
int3
or
mov
movs
dec
inc
es
push
or
push
mov
xor
sbb
xchg
jae
(bad)
sub
push
add
js
mov
jmp
cmp
aam
shl
in
add
xor
ja
and
xchg
icebp
cdq
mov
push
push
cmp
jbe
push
adc
cmp
test
jne
xchg
jbe
add
je
inc
fisubr
pop
mov
xor
sbb
sbb
dec
or
sbb
and
pusha
(bad)
sub
sub
inc
loopne
inc
and
and
(bad)
lock
out
jle
or
imul
ins
and
dec
lods
loope
push
pop
adc
into
pop
and
push
cmp
or
xchg
jle
add
mov
jmp
jl
jg
or
clc
add
int
mov
hlt
mov
add
push
push
in
add
push
mov
nop
add
jmp
out
jp
push
jl
push
push
xor
shr
mov
push
xor
and
and
add
loopne
adc
mov
data16
adc
cmp
add
int
dec
add
je
dec
retf
scas
je
sti
mov
inc
mov
add
sub
je
dec
je
add
dec
mov
push
mov
mov
int
(bad)
imul
mov
fld
adc
pop
push
jmp
dec
push
push
ret
push
mov
cmp
sub
ins
sbb
push
adc
xchg
mov
outs
cmp
sti
inc
mov
or
arpl
bound
xlat
out
xlat
and
pop
push
imul
sbb
and
ins
into
xor
in
sbb
call
std
cmps
add
pop
jp
ret
and
sbb
clc
or
add
inc
jns
or
je
xor
xchg
mov
xchg
add
jmp
push
stc
jnp
imul
push
out
push
fldenv
pop
and
jne
cmp
xchg
nop
lods
ss
xor
jmp
push
shl
push
imul
add
xor
xchg
pop
movs
pop
mov
dec
shr
adc
sbb
call
mov
inc
xchg
push
push
pop
jge
inc
pop
shl
cmp
icebp
sbb
push
inc
inc
push
mov
push
inc
or
or
enter
xlat
adc
mov
add
mov
gs
sti
push
sub
adc
push
test
(bad)
sub
mov
inc
mov
mov
out
mov
gs
cmp
cmp
xor
jl
or
and
sub
fld
and
stos
iret
jle
dec
enter
(bad)
ins
int3
cdq
(bad)
cmp
jge
lds
add
and
dec
or
test
pop
inc
ds
mov
pop
dec
stos
xchg
or
mov
xchg
sub
jge
adc
enter
xchg
mov
jne
adc
inc
or
xor
loop
sar
rcr
adc
fisttp
inc
inc
push
aaa
dec
push
fbld
adc
cmp
fidivr
xor
inc
aas
or
ret
ror
jae
or
mov
jmp
sub
cmp
hlt
retf
push
push
xor
lock
lock
popa
jecxz
stos
adc
in
pop
mov
ins
pop
add
fs
or
bts
push
mov
push
xor
pop
mov
push
adc
in
jge
or
or
dec
jmp
adc
sbb
in
add
sub
dec
mov
pop
les
inc
add
push
or
pusha
add
push
jne
xor
mov
adc
bound
fst
xor
arpl
jne
jo
xchg
out
ins
lods
add
jns
xchg
jp
sub
repnz
mov
push
es
pop
enter
ja
and
sub
push
cli
lods
ds
dec
pop
cmp
mov
or
pop
pusha
clc
bound
ins
jae
(bad)
dec
xchg
mov
pop
mov
mov
dec
pop
fldenv
push
cmp
ins
mov
xchg
adc
in
repz
clc
hlt
sti
inc
rol
mov
jge
in
ins
cs
sbb
hlt
add
mov
mov
call
inc
push
lock
sahf
push
neg
push
mov
sbb
or
mov
pop
jo
adc
jne
ja
adc
mov
ins
pop
lods
out
cmp
arpl
sbb
shl
addr16
and
add
call
pop
push
add
sub
ds
add
retf
rcr
test
and
jmp
into
xor
mov
pop
nop
mov
dec
jno
inc
add
test
cli
sub
mov
inc
sbb
push
mov
adc
dec
scas
loop
ins
mov
or
or
dec
mov
jle
aaa
inc
jp
jne
repz
shr
and
or
mov
push
push
or
mov
rol
pop
sbb
jae
nop
xor
add
int3
addr16
mov
inc
shl
int3
add
es
test
or
push
push
push
shl
mov
int3
push
and
mov
pop
xchg
add
icebp
mov
(bad)
push
xor
or
or
or
mov
push
ins
sbb
(bad)
dec
jae
jp
call
in
mov
outs
fisttp
and
or
add
(bad)
(bad)
jbe
fimul
mov
push
cmp
loop
hlt
fisttp
add
in
or
rol
stos
add
cmp
lea
dec
fild
fld
fmul
pusha
dec
add
test
arpl
and
cmp
xor
mov
aaa
dec
add
or
ror
add
dec
rcl
cmp
fs
sub
cmc
sbb
add
gs
sub
mov
xor
or
mov
test
mov
not
std
adc
shr
test
imul
out
jmp
shl
sub
xor
jmp
adc
cmc
imul
shr
and
adc
ror
sti
ret
shr
or
dec
push
dec
cmps
or
out
add
cmps
sbb
xor
fmul
mov
mov
or
inc
rcl
mov
aad
xor
and
ret
test
mov
lock
or
gs
adc
or
cmp
push
push
fcmovb
cmp
sub
or
addr16
jecxz
and
or
popa
sahf
int3
bound
clc
imul
mov
push
push
lahf
or
mov
jns
aam
stos
fmul
sbb
pop
pop
jge
(bad)
dec
push
sbb
mov
or
sbb
arpl
and
mov
ret
clc
cmp
jb
call
js
test
mov
and
rol
loope
retf
cmp
not
prefetch
pop
push
daa
push
aam
in
pop
rol
shr
imul
pop
jle
cmp
jae
mov
ret
add
xor
push
fstp
inc
cmp
rol
out
data16
fs
sub
ins
clc
mov
mov
and
mov
mov
sbb
das
inc
sbb
or
xor
imul
pop
out
rcl
mov
jl
xchg
adc
test
push
mov
fcomp
dec
push
sbb
jmp
inc
pop
popf
inc
pop
add
cmp
das
bound
mov
int3
or
push
fdiv
adc
movs
ret
xchg
int3
arpl
inc
mov
push
je
xor
adc
cwde
in
push
into
aam
pop
or
mov
inc
or
std
aam
fsub
or
cli
and
jo
pop
jmp
pop
push
nop
pop
adc
cdq
pop
add
push
jge
dec
or
fstp
xor
push
or
push
mov
out
pop
push
mov
cmp
jle
sub
pop
push
sub
jl
mov
add
sbb
dec
rep
(bad)
out
inc
add
movs
cmp
add
mov
dec
sub
rol
lea
push
pop
mov
jmp
shr
popf
imul
and
loopne
push
adc
push
xor
call
mov
or
outs
jnp
jb
add
cli
and
cmp
mov
mov
mov
or
scas
and
outs
xlat
xor
lock
hlt
and
out
fimul
jb
adc
mov
mov
xor
dec
cwde
frstor
or
sub
dec
jnp
jo
mov
sbb
clc
adc
lock
retf
mov
or
mov
mov
or
shl
test
cmp
mov
push
and
ret
sub
mov
stos
inc
sbb
in
add
fisub
mov
mov
ja
pusha
push
sbb
adc
shr
pop
add
add
icebp
adc
ins
jl
or
test
mov
xor
sbb
sbb
jns
stos
(bad)
pop
mov
gs
push
mov
mov
inc
jmp
mov
pop
xchg
push
psadbw
movs
sub
and
pop
shl
or
xor
mov
pop
ret
(bad)
mov
mov
inc
inc
mov
out
repnz
sub
jns
ret
dec
sub
(bad)
cwde
int
fisttp
stc
in
dec
push
mov
and
popf
mov
adc
pop
ret
push
sbb
push
jo
xchg
int
mov
pop
lahf
call
add
sbb
inc
pop
mov
or
ds
les
dec
xchg
mov
(bad)
push
mov
leave
adc
pop
xor
push
add
sbb
cs
or
pop
(bad)
int
and
out
mov
mov
xor
in
scas
sbb
jle
sbb
enter
sbb
push
and
xchg
mov
xor
shr
dec
test
push
push
pop
and
push
xor
mov
imul
adc
mov
xchg
mov
cs
mov
jne
in
mov
movs
stos
jp
js
jle
inc
or
or
pop
ret
jae
jb
and
fcomp
cmp
add
scas
(bad)
sub
icebp
sbb
ja
jb
jnp
cs
jae
sub
sbb
mov
mov
or
pop
fs
push
int3
sar
cmp
in
jmp
mov
mov
push
add
and
adc
in
mov
push
adc
jo
add
pop
pop
mov
push
dec
mov
mov
hlt
adc
mov
sbb
mov
neg
dec
or
fimul
push
sbb
test
pushf
ja
jno
inc
inc
cmp
mov
(bad)
add
adc
push
dec
push
pusha
pop
sbb
aam
call
sbb
repnz
inc
or
mov
mov
jle
arpl
jo
mov
cmp
cwde
jge
arpl
inc
movs
sbb
and
push
inc
sub
fs
xor
xor
cmp
mov
mov
push
inc
mov
aad
jmp
adc
and
xor
mov
push
jecxz
add
loopne
sub
dec
ja
or
push
sub
sub
add
mov
push
sbb
cmp
scas
jb
dec
ja
jmp
jp
adc
mov
sbb
pop
mov
pop
adc
dec
xor
mov
lea
js
push
sar
fiadd
jo
add
jae
cmp
aaa
cli
dec
ja
shl
shl
repnz
jle
(bad)
mov
jae
cmp
in
dec
ret
mov
ins
push
std
ins
inc
adc
ret
xor
jne
mov
pop
xor
adc
or
sub
retf
mov
push
jg
cmps
jg
sub
loop
cli
imul
dec
das
popa
loop
test
jl
cmp
mov
add
fistp
mov
aas
hlt
out
inc
idiv
shr
cmp
jae
push
push
mov
cli
shr
repnz
fisttp
add
jmp
sub
sub
mov
sub
inc
lea
mov
scas
cmp
xchg
fstp
and
mov
xlat
inc
adc
jp
cdq
or
femms
fcom
test
jmp
pusha
pop
fild
add
test
xlat
fmul
shl
xlat
lea
add
js
jge
adc
jns
jae
mov
mov
dec
call
cmc
jae
mov
mov
ss
sub
aaa
scas
das
shl
jmp
out
mov
lds
cmc
mov
sub
mov
xor
mul
fcmove
jb
sti
pop
pushf
mov
xor
or
add
bound
pop
mov
call
mov
pop
mov
sub
popf
inc
jns
mov
inc
xchg
lea
push
jae
pop
adc
retf
jo
ret
aaa
adc
jae
adc
cmp
cmp
dec
(bad)
fs
mov
ss
jne
xor
rol
aas
cwde
clc
nop
inc
ds
icebp
enter
or
cmp
stc
mov
jecxz
shr
lea
fcom
inc
cli
(bad)
sbb
rol
push
jae
js
rcr
push
(bad)
repnz
and
cwde
xchg
cmp
xchg
push
or
(bad)
pop
or
fisub
cmp
mov
lahf
mov
mov
stos
sbb
and
repz
or
sub
sbb
dec
push
mov
popa
push
test
je
cli
outs
and
or
fwait
lods
test
mov
sbb
xchg
stos
in
push
pop
enter
fistp
pop
sbb
push
and
dec
cmp
ret
mov
stos
and
mov
or
out
cmp
mov
test
xor
mov
and
shl
mov
xor
fld
inc
pop
cld
mov
mov
in
push
add
pop
inc
xchg
jns
lea
xchg
mov
sub
jmp
push
mov
lea
jmp
enter
or
fcom
ins
xlat
movs
sahf
nop
test
sub
adc
push
mov
push
jmp
jnp
scas
jnp
test
aas
xor
or
mov
aam
or
cmp
pop
nop
add
jg
out
mov
add
or
ret
push
adc
jl
adc
mov
xchg
fld
pop
adc
adc
or
cmps
sub
adc
pop
inc
in
push
push
xor
sub
dec
adc
jmp
jmp
mov
cmp
or
push
jnp
jecxz
mov
es
add
pop
push
dec
es
inc
xchg
outs
mov
scas
add
push
inc
rol
test
xchg
arpl
jmp
mov
js
add
xor
int3
fwait
add
dec
xchg
sahf
das
jae
daa
pop
(bad)
sub
sub
mov
add
div
ins
push
push
outs
fucomp
rol
repnz
jne
xchg
cmp
or
in
shl
cmp
mov
sahf
sbb
adc
and
sub
pop
loope
mov
aaa
addr16
xchg
or
ins
out
dec
cmps
sbb
mov
dec
sub
ret
popa
add
fs
pop
pop
push
add
inc
cs
int
ins
loopne
or
ror
sbb
hlt
test
or
and
icebp
mov
jne
lea
push
cmp
add
jmp
adc
outs
mov
nop
sub
das
mov
fs
adc
sti
cmp
jae
fldcw
xor
outs
cmp
pop
and
adc
or
sti
or
pop
bound
and
iret
add
add
mov
adc
push
lea
mov
mov
and
shl
out
or
in
pop
fs
push
jne
into
out
pop
mov
push
push
fs
test
popa
push
sbb
lods
adc
dec
aad
xor
mov
adc
stc
or
xchg
movs
(bad)
pop
aaa
jecxz
dec
jp
jo
mov
sbb
push
sbb
data16
sub
mov
(bad)
xor
sub
and
inc
fstp
mov
sbb
loop
(bad)
push
inc
mov
jbe
fistp
lds
push
push
pop
mov
pusha
mov
and
aam
xchg
loope
cmp
mov
shl
or
rcr
hlt
adc
add
jg
(bad)
jle
or
push
sub
ja
or
sub
fnstcw
inc
je
nop
ja
lds
shl
jo
stos
adc
call
cmp
add
mul
fwait
pop
or
sbb
lock
mov
jne
sbb
adc
pop
mov
call
push
push
mov
test
jb
push
or
lods
cmp
jae
cmp
jae
mov
mov
or
push
mov
jns
jno
add
add
stc
inc
inc
lahf
sbb
outs
fcom
ja
add
mov
add
jp
add
add
jbe
fcom
add
cmp
jno
and
ss
pop
sub
adc
iret
push
adc
je
test
mov
loop
sbb
xor
lock
sbb
stos
xor
cmp
push
ss
adc
inc
add
add
and
enter
or
in
mov
call
add
imul
cmp
jp
pop
mov
mov
push
lea
ins
ret
mov
and
inc
push
fldcw
inc
or
dec
inc
test
or
repnz
sahf
jne
popa
aas
sub
or
push
hlt
(bad)
push
sbb
outs
cs
(bad)
cmp
retf
jae
pop
mov
inc
mov
jne
pop
cli
(bad)
and
adc
mov
and
call
ins
cmp
dec
cmp
cmps
jnp
sbb
sub
into
push
xor
sbb
and
ret
push
sar
fsubr
xchg
(bad)
cmp
jmp
in
pop
sbb
outs
test
ins
test
sbb
and
test
and
sbb
fcom
xchg
pop
pop
xor
popf
pop
into
push
add
xor
idiv
enter
push
repnz
(bad)
enter
mov
jae
int3
jns
leave
add
rol
es
iret
test
inc
add
mov
bnd
xchg
dec
dec
(bad)
enter
adc
in
xor
cmp
out
in
retf
int3
push
cld
or
or
in
push
in
pop
or
fwait
inc
mov
inc
jge
adc
sub
mov
fbld
cmp
in
dec
sbb
inc
outs
add
fild
out
jne
fldenv
inc
push
xor
cmp
xchg
inc
jmp
bnd
lock
add
clts
fadd
gs
int
ja
adc
arpl
sbb
add
imul
cdq
xor
fstp
aaa
mov
pop
(bad)
xchg
sbb
sub
outs
sub
mov
pop
mov
(bad)
(bad)
cmp
lods
fisttp
jmp
and
enter
call
lea
sti
loope
dec
pop
call
cmp
mov
cli
jge
pop
push
mov
dec
pop
arpl
cli
sub
lds
sahf
test
adc
leave
mov
push
(bad)
pop
push
int3
enter
cli
clc
(bad)
(bad)
sub
rcl
pop
adc
or
add
lods
xchg
jmp
pusha
sbb
mov
addr16
bound
push
cmp
imul
and
shr
dec
and
std
pop
or
clc
das
adc
cmp
jbe
out
ret
push
push
push
and
mov
neg
push
push
js
push
xor
(bad)
and
add
mov
ins
xchg
jmp
jns
pop
sub
or
pop
push
(bad)
in
jbe
pop
fmul
add
mov
mov
mov
sub
add
sub
inc
or
inc
and
and
jb
pop
bound
or
sub
xchg
es
add
push
pop
test
adc
push
je
shl
add
push
mov
std
add
cld
iret
add
stos
adc
data16
ins
pop
xchg
ins
inc
add
cmp
jle
fild
retf
inc
jo
sti
adc
adc
sbb
fmul
add
jmp
and
mov
add
ret
adc
dec
ret
mov
add
pop
or
xchg
pop
xor
add
(bad)
test
inc
loopne
mov
sub
add
aaa
je
loopne
add
loop
enter
mov
adc
push
fbstp
data16
inc
cs
add
cmps
sbb
in
neg
jb
sbb
jo
lea
push
mov
test
jecxz
add
jmp
pop
mov
jl
jg
sbb
mov
sub
lea
xchg
mov
call
sub
inc
test
inc
ss
repz
xor
sbb
adc
add
jp
xchg
cmp
add
stos
cli
fnsave
push
push
push
lea
push
push
mov
xor
sbb
xor
add
outs
pop
push
inc
add
out
(bad)
popw
sti
or
push
mov
jo
xchg
dec
add
add
push
xor
sub
call
inc
push
xchg
outs
inc
or
add
jae
and
cdq
push
mov
out
or
(bad)
mov
cdq
or
mov
or
mov
ror
jns
add
jp
add
sub
fild
or
push
(bad)
and
xor
inc
mov
push
shl
mov
jmp
mov
push
push
(bad)
loope
call
inc
cmp
push
out
popa
xchg
(bad)
ins
jo
repz
(bad)
fwait
dec
ins
cmp
aad
add
ds
push
ja
xlat
(bad)
adc
test
and
mov
aaa
pop
fwait
pop
mov
xchg
(bad)
ins
retf
test
push
add
or
add
pop
and
push
sub
pop
les
mov
mov
inc
mov
sbb
sbb
neg
out
push
dec
xor
push
xor
or
pop
hlt
fdiv
push
adc
lods
jbe
or
dec
gs
push
mov
adc
pop
(bad)
or
or
or
cld
and
jne
dec
push
mov
mov
mov
test
lods
adc
mov
mov
or
mov
mov
push
inc
mov
inc
pop
ror
xor
or
or
jmp
push
push
sbb
inc
fwait
jo
sbb
cs
add
pop
scas
ds
dec
mov
mov
push
(bad)
cld
push
xchg
mov
add
xchg
or
dec
inc
aaa
add
cs
mov
cmp
mov
sbb
cmp
sbb
mov
mov
sub
dec
or
sahf
fidivr
fld
movs
inc
sbb
sbb
push
sbb
scas
mov
test
dec
and
adc
and
repz
add
cmp
sbb
mov
retf
sub
push
mov
retf
clc
cmp
dec
das
add
enter
sbb
sub
jo
ins
cmp
jne
xchg
mov
shl
jmp
shl
or
shr
dec
cld
test
mov
sub
neg
test
xchg
dec
pushf
sbb
ja
jb
arpl
lods
mov
dec
enter
or
push
and
loope
fistp
sbb
push
add
add
rcl
iret
push
(bad)
call
dec
pusha
pop
das
inc
mov
add
xchg
repnz
push
mov
mov
call
mov
imul
push
add
push
add
mov
push
scas
inc
in
pop
cmp
adc
scas
push
add
(bad)
mov
outs
jae
je
cmp
adc
push
in
mov
cmp
dec
push
push
scas
adc
jnp
retf
inc
xchg
fimul
push
xor
scas
mov
sub
mov
adc
jne
xor
shr
sahf
dec
cmp
data16
sbb
xchg
ror
mov
clc
cli
sbb
xor
push
lea
ins
dec
js
mov
sbb
arpl
adc
cwde
and
or
push
lahf
or
add
repnz
scas
pop
add
loope
arpl
jmp
push
push
mov
push
pushf
sbb
retf
ret
or
popf
sbb
push
ret
push
cmovns
mov
in
jns
or
adc
sbb
jbe
push
fimul
sbb
(bad)
call
adc
mov
jmp
outs
mov
sub
retf
mov
sbb
and
jb
cs
dec
or
les
sbb
enter
in
inc
je
mov
xchg
adc
add
and
add
add
(bad)
push
popf
xor
aad
inc
cwde
pop
test
mov
push
jmp
jmp
push
jbe
inc
or
cld
popa
pop
mov
test
pop
add
adc
sub
xor
push
outs
stos
jle
push
mov
sbb
call
push
ficomp
enter
clc
pop
sub
(bad)
xchg
or
clc
dec
add
in
add
loopne
fucomp
es
int3
fwait
dec
sti
mov
xor
shl
or
outs
mov
call
into
lock
add
or
jbe
popf
shl
or
sub
or
pop
neg
jo
jmp
add
jne
jl
in
add
and
into
jmp
out
jbe
adc
in
mov
and
stos
loop
sahf
add
cmp
mov
lods
add
enter
inc
mov
fiadd
add
add
cmp
and
fisttp
push
pop
imul
push
je
push
popf
imul
adc
mov
mov
add
xchg
in
and
mov
cmp
aaa
xchg
cmp
xbegin
jmp
fmul
fsub
adc
jne
xchg
addr16
add
jl
shl
inc
popf
adc
xor
jge
mov
push
pop
jle
jle
or
push
in
push
mov
or
push
adc
stos
lahf
pop
inc
jne
retf
add
and
pusha
mov
sbb
or
test
push
adc
sbb
es
and
mov
xor
inc
sub
jge
data16
or
jae
lds
pop
out
jae
data16
mov
adc
and
sbb
inc
mov
inc
xor
sbb
jmp
mov
cmp
or
inc
or
cmp
xor
inc
and
and
adc
repnz
or
fsubr
and
or
not
jmp
ja
retfw
scas
mov
stos
loopne
pop
enter
pushf
jp
lock
ja
mov
ins
dec
mov
outs
or
add
sub
adc
sbb
adc
cmps
xor
cmp
mov
mov
aas
inc
jb
(bad)
push
ror
mov
or
scas
retf
dec
push
pop
push
sbb
jmp
xor
(bad)
jbe
mov
out
jne
ret
sbb
mov
or
push
fdiv
dec
adc
sub
neg
test
mov
in
xor
jmp
jmp
call
fild
add
push
add
fst
cmps
fsub
add
icebp
or
pop
add
lock
cdq
clc
fucomi
or
or
or
daa
lock
cmc
push
int3
mov
pop
mov
push
clc
sti
cmps
sbb
dec
cmp
into
cmps
mov
jle
nop
popa
out
mov
mov
xchg
fmul
pop
add
and
ror
aam
mov
jbe
mov
cmp
inc
in
icebp
adc
mov
jecxz
jbe
mov
and
es
pushf
pop
popa
jecxz
gs
adc
pop
sbb
cmp
call
inc
call
jmp
cmp
adc
enter
sub
push
cmp
push
pop
push
bound
sbb
mov
fbld
fisttp
or
inc
and
pop
je
push
repnz
inc
and
mov
mov
add
xor
and
and
cmp
push
mov
(bad)
dec
cs
adc
fwait
push
inc
pusha
push
mov
repz
inc
pusha
dec
add
push
scas
push
add
lock
push
or
jmp
xor
push
adc
jbe
inc
mov
sbb
add
outs
cld
adc
and
mov
and
add
fwait
mov
mov
pop
ret
jle
and
dec
pop
mov
cdq
mov
jae
xlat
pop
les
adc
lods
ins
loopne
scas
leave
adc
shl
clc
test
jge
fdiv
mov
jb
add
add
inc
or
fldenv
and
mov
or
cmp
and
xor
and
(bad)
push
sbb
cmp
call
add
sbb
jne
enter
mov
mov
inc
sbb
cli
mov
dec
inc
sub
in
inc
dec
cmps
xor
jb
ja
cmp
mov
mov
and
das
mov
add
adc
aam
inc
scas
pop
in
inc
dec
add
and
mov
pop
sub
mov
inc
mov
push
push
or
adc
adc
and
and
mov
pop
jmp
test
adc
push
in
jbe
pop
mov
inc
aaa
add
jnp
mov
or
dec
es
adc
nop
pusha
inc
fs
and
push
adc
adc
sub
inc
sbb
jne
lea
data16
lds
sbb
cld
add
jmp
push
jg
jmp
push
mov
cmps
push
sbb
test
test
cmp
daa
sub
adc
fmul
(bad)
fisttp
adc
or
and
push
add
loop
push
lock
sbb
add
jge
mov
js
rcl
sub
in
push
fild
loopne
jae
cmp
xor
xor
xchg
xor
sbb
pop
add
or
mov
or
dec
inc
retf
add
stos
or
xchg
inc
jbe
stos
add
jb
push
sti
bound
dec
aas
push
test
mov
inc
sbb
repnz
jl
mov
lods
push
iret
sub
mov
adc
push
inc
cmp
add
aam
test
push
xchg
sbb
or
mov
and
sbb
pop
hlt
sbb
mov
rcl
dec
add
add
add
scas
and
mov
and
or
jae
add
or
or
pop
jge
mov
sub
sbb
add
mov
dec
out
add
sti
hlt
adc
pop
inc
popa
pop
(bad)
xchg
inc
cmp
loopne
lock
xchg
lods
add
sub
adc
call
ins
jnp
sub
inc
jb
mov
pop
pushf
jns
push
pushf
shl
mov
jmp
je
shl
fsubr
mov
std
pop
inc
cmp
sub
js
push
pop
fwait
rol
int3
lods
sbb
sub
out
xor
sbb
jb
daa
inc
sub
setne
pop
dec
adc
stos
mov
in
cmp
int3
jbe
cwde
or
scas
push
jle
xchg
cmps
push
addr16
cmps
in
sbb
shl
or
or
xchg
add
xchg
lods
gs
and
xor
xchg
cld
and
test
or
sbb
shld
call
push
xchg
push
sub
dec
loopne
test
inc
add
sbb
mov
out
sub
push
sub
xor
sbb
loopne
test
jno
loopne
sbb
mov
and
enter
dec
push
sbb
add
(bad)
sub
sbb
gs
pop
and
jae
call
xor
jo
lods
shr
shl
push
pop
ror
adc
cmp
mov
cmp
add
mov
jae
dec
out
mov
dec
sar
test
and
cmps
inc
cmp
jb
(bad)
sar
adc
xor
and
or
adc
mov
adc
inc
xor
in
or
adc
sbb
cmp
inc
pop
mov
mov
sub
push
push
jp
fisttp
mov
pop
xchg
mov
jg
adc
sar
int3
mov
sbb
pop
fnstsw
add
movs
add
ss
jae
mov
or
fs
dec
es
or
and
cdq
adc
or
mov
or
mov
mov
adc
mov
mov
mov
icebp
aam
or
mov
(bad)
inc
es
xchg
mov
les
mov
scas
xchg
fisubr
jae
fwait
pop
mov
sub
outs
je
xor
sti
sbb
xchg
loopne
pop
pop
aas
mov
pop
or
sbb
push
lea
clc
inc
or
loope
das
mov
push
push
sbb
lea
adc
add
push
push
sub
adc
aam
cld
pop
xor
inc
pop
pop
push
pop
jbe
push
mov
lods
push
jb
xchg
or
test
ror
mov
sbb
push
rol
inc
add
mov
inc
mov
fstp
je
push
sub
fidiv
cmp
jb
call
je
(bad)
int
jbe
dec
adc
sub
adc
sbb
xchg
pop
mov
jge
test
jbe
les
mov
lods
push
sub
je
ss
push
add
or
push
pop
cmp
test
jle
push
adc
mov
lods
dec
loopne
push
clc
and
push
inc
xchg
mov
jne
ss
imul
jmp
dec
inc
mov
pop
ss
cmc
inc
(bad)
mov
pop
and
dec
fucomi
shl
mov
ss
and
pop
out
jecxz
xchg
test
data16
sub
cs
cs
mov
add
(bad)
sbb
xor
sar
test
arpl
jecxz
rol
and
and
movs
jecxz
xchg
mov
cs
and
adc
add
or
mov
sub
pusha
jnp
mov
clc
je
push
add
push
rol
adc
sbb
mov
add
sbb
inc
mov
sub
or
mov
pop
and
xor
mov
jne
cmp
scas
add
pop
cmp
shl
mov
mov
bound
xchg
xor
dec
add
es
scas
cmp
sub
in
sbb
lods
movs
sub
sub
push
imul
push
dec
das
sub
jae
push
mov
adc
das
ret
push
stc
lea
lds
ins
mov
lahf
push
cmp
mov
cmp
js
push
rol
pop
inc
adc
mov
push
sbb
and
es
adc
add
mov
dec
mov
or
in
add
adc
lock
jl
adc
add
mov
adc
push
add
push
inc
mov
pop
sbb
add
dec
mov
pop
imul
xor
add
fadd
push
lea
push
push
mov
mov
dec
(bad)
js
add
dec
sub
sub
pop
mov
and
sbb
inc
xor
add
nop
call
or
add
jns
jl
aaa
nop
cmp
push
adc
sub
dec
mov
pop
add
cmp
or
dec
icebp
pop
mov
or
xchg
pop
push
sbb
es
mov
mov
xor
mov
xchg
js
jo
xchg
mov
stos
add
cmps
mov
pop
sbb
mov
adc
and
pop
sbb
ror
pushf
mov
dec
jbe
adc
mov
ret
lds
inc
test
test
je
pop
or
sbb
cmp
sub
mov
mov
jnp
sbb
pop
out
inc
xor
mov
popa
mov
mov
adc
cwde
sbb
cmp
test
push
and
cmc
sbb
sub
pop
aaa
jl
adc
inc
cmps
cld
cmp
inc
adc
xor
retf
cs
or
xchg
call
add
inc
shl
add
mov
sub
cmp
mov
cmps
dec
jmp
ja
mov
pop
xchg
jo
(bad)
call
pop
lock
into
aas
mov
je
mov
sbb
mov
mov
xchg
lods
or
sar
adc
pop
test
cmps
test
push
in
push
mov
xchg
cmp
jae
psubq
inc
arpl
test
lods
rol
fldcw
fs
test
adc
and
sbb
dec
clc
inc
sub
lods
push
xor
outs
sbb
mov
mov
add
mov
in
outs
stc
add
iret
cmp
test
outs
inc
adc
movs
cmps
and
sbb
push
cmp
loope
push
dec
mov
sbb
jl
mov
jmp
push
or
je
push
sub
xchg
cmp
lods
jge
sbb
adc
test
loopne
outs
dec
in
ret
mov
add
pop
call
push
std
test
or
push
imul
movs
addr16
xor
push
pop
pop
jmp
pop
add
inc
push
sub
jmp
inc
fisubr
pop
xchg
mov
or
(bad)
adc
push
xor
push
sahf
mov
or
adc
out
jno
mov
dec
cmp
jbe
dec
sub
clc
aad
mov
(bad)
dec
(bad)
rol
sub
inc
mov
push
jb
sub
or
out
add
lea
mov
add
outs
push
mov
push
arpl
xor
das
sbb
jl
out
xchg
push
push
jle
jp
lahf
mov
rol
sub
push
lds
push
cmp
mov
and
int3
pop
or
mov
inc
inc
mov
dec
sbb
sbb
movq
dec
and
xchg
sub
jne
inc
jne
inc
sub
sti
pop
sbb
fimul
jnp
call
xchg
pop
mov
sub
mov
cmp
or
jo
imul
xor
(bad)
in
xor
mov
shr
mov
cmc
out
push
mov
shr
dec
ss
enter
and
mov
sbb
dec
cmp
pop
xor
fs
pop
push
jmp
dec
mov
xor
test
enter
push
jle
xchg
ret
adc
jge
inc
pop
dec
out
hlt
ret
fnstcw
and
fs
cwde
leave
or
xor
or
and
dec
inc
pushf
xchg
lock
in
add
xchg
pop
mov
loopne
inc
push
mov
add
repz
cdq
movs
sub
or
xchg
inc
cmp
iret
push
add
add
jp
mov
sbb
push
sbb
scas
inc
inc
jp
pop
add
push
or
shl
popf
dec
mov
mov
in
pop
ins
js
stc
mov
inc
imul
popa
cmp
icebp
aam
ror
adc
mov
cwde
xor
sub
lock
test
jle
pop
test
ja
jle
adc
lea
sbb
stos
mov
repnz
mov
les
out
mov
lahf
fidiv
sbb
bound
and
mov
cs
mov
mov
xlat
inc
aaa
cwde
cmovg
push
iret
into
(bad)
hlt
sub
push
jne
cmp
cdq
push
sub
jne
add
lahf
mov
mov
imul
out
and
mov
retf
xchg
jl
inc
mov
pop
shl
sub
inc
or
push
adc
js
adc
and
das
add
pop
cmp
add
jo
outs
aam
cmp
dec
inc
add
mov
inc
dec
push
cmp
jecxz
inc
jle
lods
dec
or
push
add
clc
mov
mov
cmp
xor
je
pusha
add
ins
xchg
push
sbb
adc
rol
ins
push
xchg
daa
jmp
push
std
scas
inc
jl
or
ss
mov
add
ds
leave
jb
pop
push
xchg
jle
(bad)
data16
or
sub
add
xchg
scas
push
add
out
jecxz
or
call
int3
adc
sub
or
retf
outs
ret
(bad)
cmp
cmp
add
movs
mov
dec
mov
nop
daa
lock
push
mov
or
ret
sub
fneni(8087
add
sar
aaa
xchg
push
ins
cmp
adc
xor
pop
je
int
mov
push
dec
and
push
and
push
and
in
out
xchg
and
dec
push
jnp
ret
in
pop
stos
lods
mov
jnp
lds
push
xchg
icebp
mov
and
and
add
mov
jne
(bad)
sti
mov
int3
push
stc
pop
(bad)
cmp
pop
daa
fs
nop
push
mov
lock
fs
push
pop
dec
cmp
mov
fist
push
push
adc
cs
jo
cmp
pop
add
sbb
sub
adc
push
or
pop
fisubr
add
pop
sub
inc
push
and
or
(bad)
call
sahf
stc
adc
rcl
pop
aam
das
jne
fs
cmp
cmp
out
movs
(bad)
sbb
jecxz
lea
jmp
adc
or
inc
loopne
cli
not
ins
cs
cmp
pop
cld
or
xlat
int3
in
sbb
fcomp
sar
push
push
pop
in
add
push
sub
xchg
add
je
cmp
je
push
and
xchg
iret
mov
(bad)
mov
jo
imul
les
xchg
imul
loopne
push
stos
cs
fcom
push
jnp
lea
jmp
add
pop
sahf
ret
cdq
gs
add
inc
cmps
push
into
pop
js
lock
inc
sbb
mov
ins
adc
ins
test
loopne
push
or
add
pop
ficomp
adc
dec
jne
or
ins
fisttp
sbb
jne
dec
fs
or
pop
fs
fdiv
pop
mov
or
jmp
and
ss
cmp
(bad)
in
jp
push
sub
pop
repnz
retf
sbb
dec
inc
xor
lods
xor
cld
ret
cwde
mov
mov
fcmovnb
pop
mov
push
add
inc
aas
cmp
mov
inc
sbb
push
jns
add
jo
or
loop
push
mov
ins
adc
std
lods
ret
imul
stc
dec
xchg
sub
adc
sbb
shl
inc
lods
add
push
cs
jbe
ja
push
mov
je
and
mov
fnstenv
sbb
sbb
retf
ror
pop
add
or
movs
iret
sbb
sbb
or
repz
pusha
pop
cdq
sbb
scas
pushf
dec
cmp
ds
fucomp
enter
cmp
pop
sub
in
ret
push
lahf
dec
test
cmps
add
push
loope
daa
xchg
pop
jbe
cdq
sbb
jle
or
or
inc
dec
ret
in
dec
jmp
sbb
js
xor
and
ss
rcl
or
cdq
dec
jb
inc
add
cld
mov
jo
daa
jne
and
ins
adc
jo
fdiv
dec
dec
dec
xchg
jns
push
or
jo
inc
push
std
bound
jmp
jne
dec
call
mov
hlt
clc
call
mov
pushf
pop
dec
xor
adc
push
mov
stos
mov
ds
jmp
inc
cmp
icebp
xlat
je
hlt
pop
test
or
adc
pop
mov
and
bt
dec
adc
inc
inc
enter
leave
test
sar
push
push
dec
inc
cwde
mov
add
sbb
push
push
leave
adc
mov
pop
cdq
call
sti
mov
cs
add
add
adc
dec
or
jge
or
inc
js
lea
pmullw
mov
ja
in
js
adc
add
adc
xchg
or
inc
les
lahf
jge
sub
mov
dec
xor
push
xchg
leave
xchg
push
mov
mov
inc
inc
push
xor
mov
stos
rcr
stos
cmps
jl
push
add
shl
icebp
out
jo
test
push
icebp
call
xchg
push
shl
cmp
mov
sbb
inc
xor
xchg
imul
ror
mov
jno
adc
dec
jne
pop
adc
mov
out
pop
push
mov
fisubr
and
cmp
inc
in
sahf
push
fdiv
cmp
retf
push
or
mov
add
push
jnp
dec
retf
jge
in
pusha
ins
popa
mov
adc
daa
shr
add
cmp
dec
test
mov
jl
cmp
cmp
cld
ret
adc
jge
add
push
xor
push
dec
inc
push
(bad)
jne
jl
mov
movs
inc
dec
daa
jge
fisub
add
pop
push
push
mov
or
cmp
test
or
push
mov
push
push
sub
mov
adc
(bad)
pushf
stos
mov
fld
pop
sub
mov
push
loop
xchg
add
cs
inc
xor
mov
in
inc
daa
or
jbe
stc
adc
cmp
dec
dec
mov
ficom
and
cmovge
test
mov
mov
inc
loop
sbb
pushf
sub
cmp
ja
push
in
sbb
dec
or
call
jmp
mov
ins
pop
fdivr
cmp
and
das
push
adc
inc
xor
imul
xor
arpl
mov
mov
cmp
pop
cmp
push
outs
or
jo
xchg
je
scas
push
inc
pop
aad
mov
add
mov
add
sub
xor
inc
xor
movs
test
xchg
xchg
lds
push
xor
xchg
add
cs
xor
add
dec
hlt
xor
mov
lods
push
push
test
mov
push
pop
shl
jmp
pusha
push
aam
cmps
push
mov
lea
retf
fcom
(bad)
movs
inc
loopne
push
stos
dec
adc
adc
mov
cld
sub
and
mov
cmps
js
mov
jno
ret
cmp
bound
imul
das
inc
fidiv
pop
mov
lds
xchg
rcl
sbb
lea
pop
xchg
ret
(bad)
ss
mov
xchg
ins
or
stos
jne
jg
push
ja
push
or
and
pop
pusha
inc
mov
fsubr
ret
cmp
ss
push
and
mov
adc
adc
mov
pop
adc
and
mov
outs
mov
jg
ins
cmp
xchg
fist
aam
ins
pop
inc
or
inc
sub
test
sub
mov
je
and
out
and
bound
enter
jmp
dec
arpl
mov
sbb
rcl
inc
gs
mov
adc
ret
or
and
or
loope
inc
out
test
aas
aad
mov
xchg
cmp
cmp
push
mov
sub
test
cld
sbb
inc
cs
lock
jmp
xlat
jge
mov
push
sub
cmp
in
sbb
mul
cmp
adc
add
mov
sub
adc
fistp
push
mov
and
dec
adc
loop
adc
sbb
and
push
inc
or
xchg
add
inc
ss
sbb
sub
add
test
cmp
or
xchg
sub
pop
cmc
sbb
push
pop
xor
cmp
repnz
xor
mov
push
sbb
and
call
ins
sbb
xlat
add
clc
push
hlt
sub
hlt
jmp
call
repnz
push
add
add
dec
sbb
or
fs
mov
mov
mov
inc
add
pop
ss
fsubr
inc
adc
push
push
popa
outs
add
shr
cmp
jne
mov
jnp
fist
adc
clc
or
add
mov
(bad)
cmp
push
add
je
fist
je
daa
(bad)
not
cmp
rcl
lea
push
pop
mov
add
dec
sub
enter
shr
mov
add
and
cld
or
mov
push
or
loopne
inc
sub
or
ror
add
test
sub
mov
cmp
ja
jb
fbstp
pop
mov
push
xor
dec
adc
adc
add
in
fsubr
movs
dec
and
dec
sub
sbb
pop
shl
pop
or
xor
xchg
inc
or
sbb
retf
mov
dec
dec
or
inc
add
mov
jno
data16
or
pop
clc
adc
cmp
lods
pusha
push
inc
add
push
adc
sbb
pop
and
repnz
mov
push
inc
or
ss
cmp
in
outs
je
popf
into
sbb
add
inc
xor
jbe
jl
call
ror
test
rcr
cmp
mov
or
adc
push
or
mov
push
mov
or
into
mov
sub
sub
cmp
cld
or
lods
inc
cmp
pop
or
add
sbb
or
inc
test
pusha
and
pop
xor
xor
cdq
add
rcl
xor
lea
xlat
fcom
bound
pop
mov
int3
pop
pop
or
(bad)
enter
lods
xchg
xchg
int
retf
or
(bad)
enter
mov
ss
jecxz
or
add
jmp
cmp
add
add
shl
arpl
icebp
sub
ret
xor
es
cmps
ja
jmp
not
movs
xor
sbb
add
ins
retf
push
mov
clc
inc
sbb
jge
test
rcr
xor
xor
or
xor
inc
movs
or
jp
fld
xchg
jl
jae
cmp
fs
sbb
fld
inc
in
xor
cmp
push
pop
pusha
sbb
xor
xchg
pop
stos
adc
xchg
lods
push
rol
jmp
jp
dec
hlt
push
fild
push
inc
test
jp
test
or
call
push
nop
and
jo
add
ret
dec
xor
inc
add
add
dec
or
add
add
dec
dec
js
pop
adc
mov
xor
jns
sbb
sub
repz
ss
sub
cmp
enter
jb
pop
pop
fs
add
repnz
or
xlat
xchg
ja
movs
nop
inc
xlat
repnz
or
push
push
inc
jge
out
mov
sub
mov
or
sbb
xor
push
dec
(bad)
lock
push
inc
mov
mov
test
jecxz
add
ins
pop
xchg
lods
cmp
inc
inc
dec
dec
push
fwait
mov
cmp
and
adc
sub
pusha
inc
and
ins
sbb
gs
jo
fs
fdiv
imul
aam
xchg
adc
push
mov
sbb
enter
cmp
popf
or
push
imul
mov
fadd
test
mov
loop
sbb
int
adc
into
fsubr
dec
pop
xor
sub
xor
stos
cli
dec
ja
out
add
fistp
je
je
add
adc
inc
mov
add
fidivr
pop
sub
sar
fldenv
test
jecxz
adc
aad
inc
xor
jmp
push
push
not
xchg
inc
push
imul
xor
push
movzx
sbb
mov
mov
adc
loopne
test
mov
adc
movs
lds
retf
(bad)
mov
or
pop
ret
dec
sub
je
dec
and
mov
push
push
push
and
jbe
outs
add
retf
out
or
lahf
dec
jecxz
fscale
mov
mov
xlat
push
pop
fstp
aas
retf
dec
int3
mov
ror
loop
xor
leave
pusha
cmp
shl
mov
pusha
movs
call
mov
push
retf
dec
pushf
in
adc
xchg
jbe
or
inc
rcl
xchg
adc
push
scas
jle
(bad)
daa
pop
add
icebp
xchg
mov
sub
jmp
ins
inc
mov
pop
adc
mov
(bad)
shr
push
adc
cmp
push
ds
in
mov
sbb
test
xchg
retf
or
(bad)
je
jae
adc
sbb
stos
fidivr
mov
js
push
mov
pop
sbb
sbb
xor
pop
das
test
xchg
jl
es
adc
call
adc
cmps
mov
inc
or
add
xchg
or
je
adc
hlt
jge
stos
aad
mov
push
sbb
dec
adc
adc
push
cmp
mov
mov
inc
mov
mov
fisubr
sbb
icebp
jge
xor
mov
js
pop
fwait
mov
inc
cmp
jb
in
mov
(bad)
adc
imul
ret
fadd
adc
dec
adc
iret
cmp
sub
daa
fstp
push
pop
mov
xor
mov
test
add
and
mov
mov
test
aaa
xor
fist
mov
pop
push
cld
cdq
int
inc
jnp
mov
daa
or
shr
or
jmp
mov
inc
inc
out
mov
xor
leave
dec
and
out
mov
shl
cmp
and
jmp
mov
mov
pop
cmp
int3
ret
add
sub
mov
mov
xor
xor
ret
adc
sbb
cmp
push
sbb
clc
sbb
sbb
cs
and
ret
pop
or
add
inc
cmp
jne
inc
xlat
push
jl
rol
js
or
cs
sub
inc
push
or
enter
xchg
cmp
cmp
xor
bound
std
popf
inc
test
fidivr
test
xchg
sub
daa
add
mov
xchg
in
lock
repz
jb
jl
test
dec
adc
lock
inc
iret
sbb
ror
or
mov
out
dec
jne
sahf
sub
les
push
fs
jmp
mov
or
test
inc
mov
leave
or
jle
test
fcmovu
(bad)
adc
or
mov
mov
mov
fadd
in
es
jg
pop
(bad)
xchg
dec
jne
nop
gs
das
xchg
scas
and
into
xchg
popf
xor
loop
jmp
cmp
or
or
scas
repz
dec
inc
xchg
in
test
imul
ret
pop
push
push
je
xor
mov
scas
loop
nop
sahf
pop
in
jle
add
and
fcom
jo
or
and
mov
pop
ror
imul
shr
clc
add
jmp
sbb
scas
in
mov
test
sub
adc
call
add
push
or
loop
(bad)
je
mov
(bad)
mov
mov
aaa
clc
movs
add
sahf
retf
pop
pop
or
and
(bad)
clc
inc
add
aam
cs
dec
push
or
push
lock
cmps
loope
mov
sub
lods
add
add
dec
sbb
stc
or
inc
xor
rol
add
push
adc
dec
pusha
mov
loope
xor
cmp
pop
popa
fadd
dec
push
jno
dec
ins
mov
test
mov
jnp
mov
inc
or
fldcw
xor
xor
bound
aad
in
lea
mov
sub
imul
adc
movs
out
jo
sub
add
jge
rep
jns
pop
mov
pop
ss
loope
xchg
push
jle
aaa
cmp
es
mov
cmp
push
fst
mov
in
pop
call
adc
in
sbb
in
sbb
jl
outs
push
jle
inc
push
pop
sub
mov
and
push
ins
fs
inc
shl
inc
test
and
adc
inc
out
or
pop
push
push
ss
pop
(bad)
cmp
fxch
mov
ret
jg
cli
inc
shl
test
cmp
or
mov
inc
mov
mov
jnp
out
(bad)
cmp
and
shl
test
sbb
out
sbb
push
or
xlat
in
pusha
aaa
(bad)
xlat
sub
lods
dec
jecxz
aaa
sub
sar
rol
imul
add
movs
push
cmp
xor
mov
inc
call
sub
mov
loop
js
(bad)
mov
out
cld
inc
push
scas
neg
jle
mov
cmc
inc
lds
xchg
dec
inc
inc
out
jl
push
mulps
adc
add
sbb
add
test
and
cmp
mov
pop
retf
mov
loope
pusha
push
inc
or
out
call
in
sub
mov
(bad)
add
je
les
cmp
sbb
js
push
rcl
mov
retf
sub
sbb
test
sub
in
xor
or
xchg
lods
adc
pop
xchg
loop
push
in
or
rol
mov
pop
lock
jo
arpl
cmp
jbe
shl
popf
ret
pushf
sub
xor
sti
push
xor
jae
inc
adc
aaa
bound
push
mov
enter
mov
out
xor
jb
add
adc
sub
mov
outs
push
retf
arpl
into
lock
jmp
add
cmp
aaa
fxch
pop
mov
pop
in
out
or
outs
inc
adc
push
mov
add
cmp
fild
xor
jecxz
call
(bad)
test
jmp
push
mov
dec
pop
inc
inc
add
call
mov
push
lods
sub
aad
and
sbb
xor
cli
mov
pop
xor
inc
not
aas
js
aaa
loop
pop
lods
or
pop
mov
jmp
or
and
push
out
xor
imul
pop
int3
and
push
mov
xchg
inc
jge
pop
rcl
loop
pop
xchg
sbb
or
dec
dec
cmp
sahf
inc
neg
add
pop
loope
and
mov
pop
call
inc
mov
ins
push
jge
add
(bad)
loope
push
xchg
or
push
sbb
fdiv
pop
mov
mov
mov
dec
jne
adc
adc
daa
push
jmp
ins
jne
jnp
scas
test
into
push
cmp
adc
mov
or
jne
cmp
ss
mov
sub
(bad)
out
imul
mov
or
adc
enter
test
inc
mov
xor
pushf
fistp
jle
sbb
add
cwde
add
cwde
inc
jl
sahf
js
mov
jnp
cwde
dec
sbb
mov
or
pop
ins
mov
rol
xchg
pop
loop
lea
mov
or
cmp
sete
push
sub
add
cmp
jmp
mov
inc
cmp
jle
jge
and
mov
dec
inc
jmp
push
imul
clc
and
ins
je
pop
cmp
mov
outs
dec
mov
imul
xchg
int3
test
jecxz
or
add
pop
xchg
push
sub
not
push
shr
cmp
sbb
sbb
add
(bad)
dec
adc
dec
push
and
fnstsw
jnp
mov
inc
sbb
dec
jne
sbb
rcl
pop
stos
add
push
pop
(bad)
stc
add
popa
add
pop
pop
or
test
add
mov
xchg
inc
sbb
push
outs
imul
pop
dec
sti
or
mov
add
lock
lods
ret
and
hlt
das
(bad)
enter
push
pop
push
add
or
dec
into
fdiv
cmp
push
repz
dec
pop
jne
int3
movs
std
or
pop
(bad)
shl
xchg
pop
push
cmp
loopne
xor
pop
pop
and
bnd
outs
sbb
outs
sub
or
test
dec
in
inc
inc
dec
jmp
arpl
sahf
jne
inc
push
xor
sbb
sbb
ja
inc
or
aad
rol
in
add
add
aaa
dec
pushf
add
pusha
sub
imul
push
fimul
sbb
pop
adc
das
add
int
cwde
inc
xlat
or
xchg
sub
mov
ret
jne
pop
je
mov
ins
sti
jae
pop
sbb
dec
repz
fld
add
ja
test
fst
add
sub
and
int
loop
shl
cmp
sub
or
cmp
popa
or
xor
pop
pop
rol
dec
push
pop
mov
inc
lods
dec
les
enter
xchg
gs
fs
je
xor
daa
ror
inc
lods
push
sub
jle
jg
push
pop
mov
sub
jne
sub
in
sbb
jg
je
aas
out
cmp
ins
and
and
cmp
inc
int3
pop
cdq
sub
adc
mov
popa
pop
scas
mov
(bad)
fdivr
enter
lahf
call
xor
repnz
xchg
xor
fwait
test
in
out
adc
jne
popa
sbb
mov
pushf
sar
cmp
loop
sub
leave
add
and
pop
leave
add
(bad)
outs
push
xor
ja
sbb
test
or
out
scas
mov
or
ds
and
mov
add
iret
or
ins
cmps
(bad)
and
ret
inc
mov
xor
dec
xchg
adc
stos
lods
add
xchg
stos
es
mov
sbb
out
jl
xor
iret
add
push
out
sti
outs
sub
push
push
fwait
mov
and
pop
inc
sahf
add
pop
lock
pushf
addr16
int
out
sti
rol
or
je
fidivr
add
mov
mov
mov
push
ds
xchg
inc
or
js
retf
push
xor
lock
imul
mov
or
add
pop
iret
stos
add
in
fcom
add
lock
xchg
test
jae
cs
jnp
fs
cs
dec
mov
sub
sbb
push
pop
call
fmul
push
daa
fsub
ins
sti
cmps
dec
in
fisttp
or
test
push
sar
dec
push
mov
cld
jbe
jb
xor
stos
inc
cwde
sbb
adc
rol
repnz
mov
pop
cdq
mov
test
add
ins
inc
or
xchg
and
xchg
fcomip
mov
ss
hlt
and
push
cld
int3
loopne
shr
xchg
(bad)
mov
pop
rcr
push
pop
jle
add
dec
add
iret
push
fimul
dec
sbb
sar
mov
cmp
fcomp
neg
fadd
inc
loopne
adc
cmp
jmp
push
movntps
cmp
xchg
je
sbb
arpl
dec
pushf
in
add
sub
sbb
push
fsubrp
(bad)
mov
pop
adc
inc
stc
(bad)
movs
icebp
xor
inc
push
jo
cmp
sub
dec
in
jp
in
jmp
inc
retf
jmp
xor
(bad)
pop
test
fchs
push
adc
repnz
push
dec
js
cmps
addr16
dec
sbb
jo
dec
inc
repz
sub
sar
adc
adc
mov
and
inc
cmp
sbb
test
inc
push
add
jno
sbb
mov
dec
add
repz
mov
mov
ins
pop
jb
dec
add
scas
pop
cmp
mov
cmc
push
push
into
push
dec
and
push
ficomp
mov
adc
sbb
push
aaa
lahf
mov
and
fldenv
in
int
cld
pop
inc
sub
ds
cmp
inc
je
jge
and
dec
mov
not
cs
(bad)
cmps
scas
sbb
cld
and
int3
popa
inc
adc
jle
mov
neg
ficom
test
in
sub
push
arpl
inc
scas
sbb
dec
add
xchg
jmp
dec
sar
jecxz
xor
sahf
inc
jge
xlat
jne
fcomi
popf
jo
and
into
outs
fadd
fdiv
pop
add
in
dec
pop
inc
fld
lock
scas
aam
call
mov
mov
movs
mov
test
rcr
inc
mov
loop
movs
and
lods
mov
or
fs
gs
add
dec
pop
push
fdivr
shl
inc
jae
sbb
mov
push
je
dec
jle
mov
fstp
add
adc
sbb
jb
and
push
hlt
sbb
in
and
adc
sbb
mov
mov
and
sub
add
mov
jecxz
pop
and
fadd
fdiv
stc
pop
xor
cmps
imul
push
scas
mov
mov
add
mov
inc
add
ret
adc
mov
cmp
cmp
psubw
enter
add
sub
xchg
ins
mov
mov
push
mov
pop
add
add
xchg
loopne
mov
retf
mov
lock
clc
cld
in
adc
and
loope
mov
adc
xor
or
mov
add
pop
stc
adc
jg
mov
or
jle
push
je
pop
pushf
js
jmp
shl
sbb
daa
ins
pop
daa
js
xchg
dec
out
mov
pushf
xchg
dec
js
outs
popa
or
or
mov
cli
shl
cmp
pop
cmp
add
jae
or
jp
dec
pusha
jne
mov
(bad)
retf
jle
or
adc
xchg
inc
xchg
mov
sub
or
sub
(bad)
sbb
sbb
js
pop
push
test
dec
inc
pop
ret
push
mov
and
hlt
fs
cmp
jle
push
mov
and
inc
add
adc
push
adc
adc
add
adc
ficomp
inc
cmp
or
shr
jl
pusha
loopne
outs
inc
(bad)
mov
push
and
fs
inc
add
in
add
ss
dec
inc
cmpxchg
pop
add
mov
pop
mov
ja
mov
jmp
xchg
test
inc
pop
inc
test
sub
push
sub
mov
push
shl
lea
enter
test
add
push
jl
mov
enter
jae
outs
inc
xor
retf
jle
fild
lea
push
push
push
add
pop
inc
call
sub
xor
pop
jnp
(bad)
fcos
sbb
or
mov
ins
js
jp
cmp
pop
aam
fsub
push
lods
xor
popf
daa
and
add
adc
fnstcw
sub
adc
cs
stc
movs
push
or
add
ror
sahf
in
cmps
imul
dec
lea
jmp
mov
add
inc
xchg
dec
mov
dec
and
test
mov
jo
push
add
add
mov
and
xlat
push
aas
jl
mov
mov
inc
jl
popa
pop
sub
xor
sbb
sbb
pop
pop
rcr
lock
mov
jecxz
jbe
or
pop
jl
bound
sbb
pshufw
aam
rcr
add
cmc
jmp
add
or
loopne
xor
je
push
push
adc
dec
adc
fadd
cmp
push
popa
adc
sub
fisub
sbb
and
or
rol
(bad)
push
addr16
loopne
mov
mov
push
add
ficom
push
or
inc
push
inc
mov
ins
jb
or
mov
jne
stos
repnz
into
push
stos
fbld
punpckhdq
out
mov
shl
ins
ret
in
sub
inc
fidiv
ins
pop
lods
ins
jo
sbb
out
adc
xchg
sub
shl
sbb
push
push
mov
mov
retf
jmp
test
pushw
xchg
jp
imul
jbe
dec
jl
cmp
in
adc
inc
movs
mov
cmp
dec
mov
and
out
xchg
mov
popf
int3
fstp
jb
inc
mov
inc
neg
mov
ins
pop
pop
sub
jne
aam
add
jne
add
push
mov
xchg
mov
sbb
mov
fwait
push
clc
jmp
clc
mov
adc
push
pop
adc
pop
inc
jg
js
out
fs
pop
enter
jnp
jnp
aad
cmp
inc
jmp
xchg
pop
jne
std
(bad)
stc
dec
adc
mov
add
fs
jb
ja
or
stos
or
pop
jb
jmp
hlt
lods
cmp
xor
or
jbe
or
sub
cmp
pop
xor
or
ret
adc
rol
push
call
push
sub
push
xchg
xchg
or
inc
inc
jecxz
or
cmp
inc
stos
mul
pop
jns
mov
stc
mov
push
fisubr
(bad)
or
mov
mov
xor
push
inc
jmp
aas
enter
ret
retf
inc
xor
push
jg
ss
dec
sbb
push
sub
push
gs
cli
sub
fst
or
mov
nop
es
dec
aam
shl
sbb
cmp
or
pop
cmp
jbe
fldcw
fisttp
add
inc
xor
daa
mov
or
cmp
stc
int
mov
lea
cmp
pop
add
int3
lea
xor
push
cmp
iret
and
cmps
mov
pop
jne
dec
cmp
push
and
sbb
pop
gs
add
das
or
pop
adc
or
mov
fnstenv
fldlg2
ins
das
fmul
push
sub
mov
jl
inc
fisttp
and
adc
mov
xchg
push
dec
push
xchg
movs
in
and
test
jmp
retf
popa
repnz
push
mul
or
aaa
xchg
adc
cmp
icebp
ret
bound
or
mov
sub
dec
dec
add
jmp
jl
outs
adc
dec
lahf
rol
das
push
cld
jnp
inc
loopne
sbb
ins
aad
hlt
pop
clc
xor
push
xor
inc
rol
ja
jecxz
leave
fmul
cmp
or
rcr
fstp
stos
adc
daa
push
push
mov
and
and
push
lea
ins
mov
enter
aam
pop
fld
sbb
pop
mov
jle
xor
ins
fdiv
sbb
xchg
or
adc
dec
shl
or
mov
popa
test
stc
xor
imul
and
push
les
aaa
mov
call
adc
pop
mov
push
sub
pop
push
aam
pop
dec
rcl
dec
mov
retf
int
or
xchg
or
pop
mov
and
mov
mov
pop
mov
push
pop
sub
push
pop
mov
sub
inc
inc
inc
mov
mov
sbb
movs
push
mov
jbe
xchg
add
aaa
ds
shl
and
mov
lock
sub
xor
xchg
inc
leave
and
pop
push
mov
jmp
lea
fwait
into
adc
adc
xchg
and
adc
stos
clc
repz
add
fldcw
retf
mov
icebp
add
mov
push
mov
fisub
and
or
adc
adc
add
mov
mov
dec
sub
pop
xchg
pop
mov
jae
in
sub
xor
jbe
ins
xchg
or
popa
les
jb
aas
adc
mov
inc
(bad)
je
aas
pop
dec
pop
sub
mov
fiadd
inc
jle
or
push
pop
pop
shl
pop
and
nop
inc
pop
sar
pop
iret
mov
sar
test
sar
inc
cmp
jl
and
cwde
aad
into
sub
nop
add
fisttp
or
std
adc
jge
jbe
js
push
sub
retf
pop
aas
add
ficom
lea
push
lea
rcl
mov
jae
pop
or
in
ds
ins
push
lds
in
push
dec
lods
dec
jnp
out
and
jmp
mov
jb
and
and
pusha
icebp
or
xchg
cmp
(bad)
ins
stc
and
pop
pop
pusha
jle
fs
(bad)
int
mov
jl
inc
mov
cmp
arpl
js
and
push
jb
jns
rol
mov
sbb
lea
lea
and
pop
cmps
arpl
call
pop
mov
add
lods
add
shl
pop
push
aad
mov
sbb
aas
xor
jl
fld
push
push
mov
inc
cmp
jnp
xor
push
aaa
mov
jae
sti
add
popf
dec
sar
push
ins
shl
cmp
icebp
ret
fisttp
in
pop
mov
mov
fbstp
add
adc
mov
and
xor
jmp
clc
mov
dec
or
call
out
clc
pop
mov
aad
inc
or
call
sbb
mov
inc
loope
xchg
jne
stos
xor
popa
sbb
jnp
or
inc
pop
out
pop
adc
sub
mov
(bad)
ins
fstp
(bad)
mov
mov
dec
pop
and
or
out
leave
ss
mov
call
dec
xchg
cmp
ret
in
enter
push
xor
lea
cwde
push
inc
mov
xchg
push
jl
outs
add
rcl
mov
pop
js
jp
js
out
je
xor
push
xchg
repnz
adc
dec
outs
pusha
pop
adc
xor
cmp
adc
or
push
or
fucomip
test
xchg
or
add
mov
fidivr
ins
not
(bad)
lods
ss
jnp
mov
mov
mov
jns
daa
sbb
sahf
pop
xor
(bad)
mov
repnz
std
push
lods
add
pop
xor
imul
dec
aaa
daa
inc
add
push
and
sub
add
and
shr
adc
test
test
add
idiv
cmp
xlat
dec
cmp
mov
xor
mov
mov
cmp
pop
fadd
push
and
inc
mov
fiadd
popa
and
sahf
icebp
add
xor
adc
mov
sub
push
push
add
gs
mov
sub
push
push
pop
loop
out
sub
inc
push
push
push
add
push
sbb
push
adc
and
xor
sbb
and
(bad)
xchg
dec
add
or
movs
xor
movs
ret
and
gs
loopne
aam
add
mov
and
cmp
or
ret
dec
add
adc
push
or
jne
pusha
call
jg
cld
loopne
jmp
adc
popa
or
xor
jl
xchg
popa
push
test
xor
test
and
push
call
add
or
mov
adc
ja
xchg
sub
gs
lock
(bad)
neg
icebp
dec
adc
shl
adc
pop
mov
xor
cmps
fistp
nop
je
js
pop
js
rol
mov
not
jle
in
adc
sub
push
scas
push
mov
mov
mov
add
jecxz
and
and
xor
jl
cmp
or
or
pop
shr
cdq
je
pop
adc
mov
fsub
xor
mov
cmp
ins
and
data16
inc
sub
rcr
rcl
icebp
je
push
adc
sbb
call
outs
jl
mov
movs
push
push
xor
sbb
fisubr
dec
mov
push
sub
adc
std
push
push
iret
adc
inc
dec
mov
mov
dec
mov
pop
fist
jae
aam
pshufw
push
mov
inc
(bad)
jmp
xor
sub
cmp
fwait
icebp
adc
sub
cmp
jg
push
dec
iret
jbe
mov
push
or
push
jns
addr16
rol
and
rcl
pop
adc
xchg
das
fild
shr
xor
mov
loope
jmp
inc
sbb
fxch
add
pop
nop
add
mov
add
mov
scas
mov
or
jae
sar
add
jne
enter
ficom
cmp
out
inc
outs
jmp
mov
sbb
dec
mov
sub
and
push
add
push
ret
or
cpuid
mov
mov
jns
dec
sbb
add
mov
or
add
and
in
push
push
(bad)
xor
pushf
outs
push
cwde
(bad)
out
shl
or
pushf
pop
xor
push
popf
and
leave
(bad)
mov
and
dec
push
mov
in
adc
push
push
push
and
xor
push
sbb
sbb
adc
test
mov
adc
add
mov
pop
and
xor
sub
not
mov
jns
or
jnp
sbb
pop
push
cmp
sbb
rol
enter
imul
xchg
loopne
push
gs
ret
sub
or
and
add
adc
pop
test
fld
(bad)
xchg
out
jno
out
setno
or
xor
add
in
inc
xor
je
lods
stos
fiadd
ins
push
jb
jne
retf
test
sub
dec
push
add
les
fistp
daa
fistp
ins
push
out
or
fnstenv
daa
int3
jmp
add
enter
mov
push
(bad)
cmp
out
popf
jb
sub
add
inc
jmp
sub
mov
test
add
ror
(bad)
push
jle
cmp
in
adc
add
sub
pop
add
cdq
call
mov
push
push
pop
call
jge
cmp
neg
sbb
pusha
sbb
test
sbb
sbb
retf
js
mov
mov
iret
fstp
pop
shr
inc
or
out
(bad)
call
rcr
shr
rcr
or
jne
pop
lock
aas
cmp
add
jb
cmp
ja
push
fdiv
pop
cmp
jbe
dec
in
(bad)
dec
cld
ins
mov
sbb
pop
pop
pop
popa
inc
loope
nop
clc
or
out
call
imul
mul
push
add
in
mov
add
loope
rcr
test
push
repnz
xor
jle
stc
inc
jae
add
jae
shld
shl
ret
add
and
cld
shl
shl
mov
ret
pop
lods
rcl
jmp
shr
sub
dec
(bad)
pusha
and
ds
push
rcl
mov
push
push
add
pushf
mov
or
stos
clc
out
or
mov
cmp
fwait
out
push
sbb
aad
mov
dec
jo
inc
jo
cmp
adc
inc
xchg
mov
push
fwait
ins
mov
nop
mov
inc
xor
js
mov
outs
(bad)
out
pop
and
mov
inc
or
add
mov
in
or
jbe
adc
dec
movs
jl
outs
outs
or
jmp
sub
jbe
lea
(bad)
push
jb
and
sahf
cmp
mov
imul
jo
cmc
std
or
test
aas
cmp
mov
cs
mov
enter
inc
mov
les
pop
add
bound
adc
xlat
ret
pop
xor
inc
int3
fnstcw
cli
stos
in
sbb
in
ja
test
ret
je
movzx
inc
add
repz
mov
and
stos
retf
add
inc
add
or
add
test
aad
push
push
sub
or
(bad)
fbstp
fnstenv
mov
add
or
ss
stos
shl
push
sbb
mov
push
aad
xor
sbb
adc
sbb
mov
pop
sti
jge
add
cli
scas
mov
jmp
imul
add
inc
pusha
fisttp
enter
fwait
test
hlt
and
jmp
(bad)
xor
in
mov
ret
rol
cmc
add
test
inc
cmp
xor
mov
dec
pop
jb
add
add
mov
popa
or
dec
js
js
sbb
inc
push
arpl
mov
pop
pop
push
dec
es
xchg
mov
mov
or
xchg
dec
es
out
push
mov
or
mov
fbstp
push
test
fs
mov
je
nop
clc
(bad)
xchg
and
adc
enter
adc
ret
or
sbb
sbb
enter
fnstenv
mov
fs
push
hlt
add
enter
inc
retf
imul
mov
lsl
add
add
das
add
fs
xchg
pop
add
and
dec
syscall
and
and
and
xor
inc
xor
xor
popf
pusha
inc
or
and
retf
in
(bad)
(bad)
jno
inc
add
mov
ss
mov
je
popa
add
arpl
repnz
je
push
push
data16
scas
sti
jmp
dec
popa
outs
addr16
addr16
and
pop
neg
xchg
mov
or
imul
gs
xor
inc
pop
fdiv
inc
outs
arpl
jae
dec
jmp
mov
inc
push
daa
push
inc
push
dec
inc
pop
aaa
add
mov
ja
xchg
jb
outs
add
fs
mov
outs
ja
xor
gs
je
inc
jae
imul
je
outs
outs
pop
inc
imul
call
sbb
or
push
jns
je
ins
dec
outs
data16
jnp
outs
add
add
add
push
xlat
jne
jno
inc
imul
jb
arpl
xor
jnp
jb
imul
and
ins
inc
or
popf
imul
fist
jecxz
gs
xlat
jne
inc
shl
cmp
lea
scas
outs
adc
mov
aaa
rcl
imul
or
push
and
mov
pop
daa
or
sub
dec
pop
pop
dec
pop
(bad)
jmp
pop
add
in
out
icebp
repnz
out
imul
out
and
call
(bad)
push
in
jmp
push
call
icebp
or
loop
loopne
mov
out
out
repnz
loopne
sbb
pop
lock
cmp
out
repnz
mov
fucomi
cld
cmp
and
lock
cs
sti
and
out
repnz
clc
cmp
cld
aas
test
data16
loope
pop
imul
cwde
or
and
imul
jnp
jb
ss
js
jb
mov
aaa
jle
jns
je
pop
and
ins
outs
unpcklps
jne
pop
push
inc
outs
and
jne
ja
ds
arpl
in
ss
sub
lahf
in
mov
jbe
shr
int3
repnz
jmp
jbe
in
mov
(bad)
call
mov
mov
pop
mov
push
test
and
add
out
ss
mov
push
xor
in
cmp
fucomip
in
cmp
sub
or
jp
int
mul
push
inc
pop
and
xchg
jae
call
cmp
in
outs
(bad)
and
jmp
not
or
js
xor
mov
or
in
icebp
push
les
ret
mov
sub
jo
ins
jb
mov
or
or
jo
data16
gs
inc
fs
adc
fld
pop
sub
dec
lahf
repnz
loope
mov
ret
dec
pop
test
sbb
out
(bad)
mov
adc
clc
dec
xor
xor
pop
inc
ds
mov
ret
loop
(bad)
in
stos
in
outs
test
mov
fild
xchg
ins
push
outs
fs
out
ins
or
scas
imul
push
fsubr
in
pop
out
out
(bad)
sub
loopne
jmp
and
and
inc
cdq
ins
mov
aad
xor
leave
outs
inc
ja
je
fsubr
inc
icebp
pusha
rol
in
aas
arpl
aad
sbb
loopne
in
cmp
xchg
sub
add
test
or
sub
imul
iret
loopne
adc
ret
ins
dec
adc
or
sti
push
ret
out
inc
(bad)
je
add
ja
mov
sub
call
push
lods
xchg
je
pop
or
mov
mov
(bad)
cmp
mov
out
fwait
imul
in
repz
push
enter
dec
pop
add
bound
pop
xchg
mov
repz
and
pop
leave
or
add
not
daa
and
retf
adc
sub
loop
xor
xor
sbb
ret
lock
ins
inc
inc
cs
or
ins
or
pop
das
push
je
jno
sbb
(bad)
dec
sub
es
and
jnp
mov
and
in
cmc
inc
jo
add
jmp
shr
jmp
xor
jmp
sbb
repz
in
shr
sub
pop
test
sub
or
xlat
cmp
push
mov
fldcw
push
out
loopne
icebp
jmp
xor
xor
fs
add
ret
data16
xchg
mov
bnd
out
pop
cmp
fs
inc
jmp
sub
sti
jnp
cs
jecxz
imul
jne
push
add
sub
arpl
push
shr
adc
int3
in
shl
mov
xchg
push
or
imul
add
dec
leave
push
or
mov
in
nop
cs
xchg
jmp
(bad)
call
pop
mov
aaa
movs
push
popa
int3
cmp
dec
retf
xor
pop
fxch
dec
fadd
aas
lea
or
int
xchg
xchg
nop
mov
fsub
jecxz
xchg
jle
fld
outs
data16
adc
es
xchg
cmc
inc
in
pop
mov
xchg
jmp
sbb
repz
push
sti
loope
push
push
sti
test
(bad)
xor
repnz
rep
ret
gs
dec
loop
pop
ins
gs
adc
retfw
inc
mov
xchg
jb
xor
mov
jmp
cwde
sbb
sbb
mov
push
or
(bad)
pop
dec
xor
or
imul
jmp
std
nop
prefetcht1
inc
div
aas
call
jecxz
repz
pop
or
(bad)
mov
xor
inc
adc
ins
mov
pop
dec
add
mov
cmp
ret
xchg
inc
movs
mov
sbb
sbb
mov
jno
sub
and
test
sub
pop
jecxz
fnstenv
loope
or
dec
pushf
addr16
test
dec
mov
bound
repnz
bound
stos
or
ss
stc
dec
les
(bad)
xor
js
jmp
xor
xor
and
cmp
pop
dec
loope
lock
xor
jae
ficomp
sub
cmp
mov
push
(bad)
int3
rcr
and
push
mov
cmp
sbb
sub
in
out
jmp
lock
daa
and
iret
xchg
cmp
jp
js
lahf
leave
call
push
or
cmp
inc
call
xchg
jae
lock
cmp
bound
jne
mov
lods
lds
ins
pop
int3
lds
addr16
fwait
cmp
ins
bound
cmp
cld
jae
cmp
aam
mov
je
mov
add
jns
inc
or
cdq
arpl
xchg
movs
stos
sbb
or
mov
adc
enter
ins
sub
pop
cmc
cmp
fdivr
add
add
mov
lds
jno
ds
xchg
int
sbb
cld
cmp
cmp
and
pop
(bad)
jno
inc
xchg
push
xchg
jp
mov
arpl
iret
sbb
sub
add
mov
mov
sbb
fadd
add
out
stos
add
sti
mov
adc
jmp
jb
stos
sbb
(bad)
lea
pop
dec
xor
(bad)
(bad)
pop
sub
ins
stc
or
out
add
ins
add
(bad)
sti
(bad)
pop
popa
dec
jae
push
mov
pop
sbb
inc
push
idiv
daa
sbb
inc
adc
xor
and
cmp
stos
pop
pop
add
and
mov
sub
fdiv
jo
arpl
jbe
mov
ins
inc
mov
xor
ret
test
rol
jae
pop
idiv
mov
(bad)
mov
(bad)
and
sbb
sub
mov
sbb
fwait
scas
jecxz
xchg
aad
call
pop
clc
mov
push
in
or
repnz
inc
pop
jno
fdiv
or
inc
adc
pop
push
xor
jge
pop
xchg
xor
outs
adc
mov
or
dec
cmps
pop
test
test
sub
mov
lds
push
pop
sbb
fstp
ret
dec
or
stos
sbb
push
and
(bad)
push
sti
sub
mov
imul
and
ins
scas
sbb
and
retf
pushf
imul
outs
addr16
ins
mov
push
ins
popa
jno
fst
dec
imul
sub
ja
cmp
cmp
ins
or
popa
test
fwait
je
inc
je
aaa
adc
xor
pop
ja
fadd
movs
xchg
imul
or
add
(bad)
loope
push
icebp
dec
mov
ret
or
or
ficom
jmp
sti
add
xor
dec
popf
pop
imul
cmp
sbb
xor
push
outs
gs
int
pop
mov
jb
in
frstor
sbb
addr16
add
mov
and
into
fiadd
xor
dec
or
inc
mov
adc
lahf
push
mov
mov
pushf
and
in
push
repnz
adc
shr
jg
jns
push
jb
mov
sbb
mov
jae
add
jo
jp
sub
jg
sub
inc
sub
mov
xor
pop
jne
cmp
(bad)
xor
jae
ret
ins
add
(bad)
(bad)
fild
xchg
sti
sbb
sub
sahf
lahf
mov
scas
inc
or
dec
pop
add
fimul
add
add
xor
mov
data16
mov
xor
mov
dec
inc
nop
xchg
inc
xchg
mov
imul
popf
add
(bad)
adc
adc
jo
addr16
jns
rcl
fxch
sub
pusha
xchg
sub
or
pop
inc
aas
inc
mov
cmp
jne
lods
xchg
adc
loopne
pop
and
mov
shr
mov
loopne
xor
shl
mov
(bad)
aaa
add
inc
add
mov
fnstenvw
dec
mov
call
jae
dec
xlat
xor
jl
push
add
xor
fld
sar
xor
xchg
pop
sbb
aas
mov
mov
cmps
pop
(bad)
pcmpeqd
loope
xchg
or
mov
and
enter
mov
mov
repz
les
xchg
fisttp
in
(bad)
cwde
shr
call
add
sbb
pusha
mov
inc
push
adc
shr
in
mov
(bad)
fidiv
in
sbb
loope
pop
in
fdiv
fwait
sub
loope
mov
pusha
jecxz
sbb
mov
jmp
fmul
out
pop
jb
out
push
ins
xlat
ins
mov
pop
mov
gs
dec
xlat
xor
dec
add
popf
mov
mov
pop
fistp
stos
fs
sbb
stc
adc
daa
rol
inc
push
sti
jg
jo
mov
cs
pop
mov
sti
or
or
pop
add
inc
repz
push
outs
adc
adc
mov
and
vmovaps
add
stc
jae
push
jbe
sbb
sti
push
out
cmp
add
adc
nop
jge
cmp
out
inc
inc
out
sbb
dec
pop
inc
add
sti
fdiv
and
or
pushf
inc
leave
out
jnp
inc
add
aam
or
repz
mov
inc
iret
ror
aam
add
dec
call
(bad)
in
ds
and
push
pop
jbe
arpl
xchg
add
rol
sbb
mov
push
rol
mov
fdivr
rol
aaa
xchg
add
je
cmp
fldenv
inc
dec
pop
aaa
cdq
xchg
cmp
sbb
repz
fucomip
cmp
jae
pusha
add
les
pop
sar
lsl
pop
gs
pusha
aaa
mov
sub
xor
cld
dec
or
repnz
push
hlt
in
inc
dec
sbb
dec
pop
push
dec
fs
in
mov
shr
mov
sahf
add
dec
daa
iret
push
fstp
push
xchg
pusha
or
add
sbb
and
pop
pop
push
and
gs
arpl
sub
add
add
sub
shl
add
xchg
dec
in
add
sbb
inc
shl
adc
dec
fild
xchg
(bad)
in
mov
and
inc
sub
hlt
aas
int3
aas
or
xor
add
les
dec
xor
mov
add
nop
xor
ror
xor
cmp
adc
mov
or
or
imul
paddsb
or
cmp
shl
push
or
int
add
lahf
push
loopne
mov
lss
imul
cmp
outs
adc
into
jbe
in
cmp
or
cmp
adc
pop
ja
mov
xor
out
pushf
mov
add
sar
das
and
inc
call
js
push
imul
movs
add
fdivr
movs
cmp
mov
imul
mov
cmps
sbb
sbb
js
pop
cmp
popa
test
cmp
fisttp
mov
lods
cmp
popa
ja
(bad)
or
mov
or
fbstp
addr16
aaa
movaps
aaa
movs
imul
cwde
arpl
adc
scas
rcr
jecxz
ror
inc
cmove
mov
cvttps2pi
inc
dec
call
inc
sub
jge
adc
fs
imul
add
push
inc
shl
push
fimul
sbb
inc
add
call
je
or
scas
pop
mov
adc
xor
mov
pop
je
mov
int3
call
lahf
xor
call
out
mov
dec
adc
scas
daa
sbb
adc
mov
fwait
enter
or
hlt
popf
leavew
push
and
outs
sbb
and
(bad)
gs
pop
mov
add
cmc
mov
dec
xchg
add
add
sbb
nop
sub
push
and
dec
imul
inc
sbb
mov
mov
ins
inc
pop
pop
and
test
add
jg
add
test
inc
push
imul
fld
mov
rcr
dec
dec
mov
push
sahf
shl
jo
lods
loop
shl
pop
mov
inc
add
add
hlt
dec
inc
pop
cmp
or
sub
(bad)
ror
and
add
jno
cs
inc
jge
fld
mov
inc
inc
and
pusha
dec
dec
jne
and
xchg
inc
add
add
es
add
and
add
xchg
xchg
int3
cmp
jae
fst
mov
inc
or
mov
adc
push
xor
jecxz
inc
pop
sti
mov
jg
dec
aaa
jp
adc
das
inc
outs
jne
mov
ins
inc
jne
or
inc
dec
inc
add
jb
add
dec
(bad)
mov
jo
pop
cmp
inc
aaa
add
and
sbb
add
and
add
test
add
add
and
mov
dec
inc
push
adc
mov
mov
outs
xchg
mov
push
adc
fisttp
jbe
push
popa
adc
jb
jne
pshufw
bound
jae
inc
and
inc
adc
pop
fcmovnu
daa
ror
add
lods
push
les
push
fs
jnp
test
cmp
mov
sti
push
imul
fisttp
scas
jle
push
adc
add
popa
pop
jae
fidivr
and
jo
dec
outs
div
sub
dec
jae
popa
gs
sbb
and
mov
xchg
jge
jne
or
out
lods
jl
adc
int3
dec
add
jno
imul
sbb
loopne
push
mov
adc
inc
js
inc
das
or
scas
sbb
cwde
mov
mov
jne
jb
jmp
sub
push
jns
and
adc
outs
jae
fisubr
adc
cmp
inc
push
popa
xor
bound
ins
jo
adc
fdiv
push
pop
jne
clc
adc
jo
mov
adc
int
mov
outs
mov
mov
mov
xchg
sbb
pusha
xchg
enter
pusha
in
inc
cmp
leave
fstp
jo
mov
je
push
out
cmp
sbb
fs
xchg
outs
frstor
inc
jns
inc
push
daa
je
add
mov
bound
cmc
cmp
loope
mov
mov
or
loope
xchg
xor
or
imul
and
(bad)
ins
pop
dec
out
jbe
mov
jo
ins
push
retf
popaw
push
retf
xor
gs
test
(bad)
ret
adc
test
jbe
daa
repz
js
jne
gs
js
mov
arpl
outs
data16
jmp
ins
aaa
push
mul
sbb
jb
jns
cwde
mov
cmps
movs
dec
mov
push
gs
mov
mov
imul
dec
pop
loope
cmps
jae
xor
mov
ins
cmp
shl
std
jae
push
jae
and
int3
or
jbe
jo
push
inc
test
in
lods
push
or
push
jbe
xor
and
inc
pop
jb
retf
shl
mov
or
push
cmps
add
retf
sti
or
inc
adc
add
adc
and
xchg
movs
fdiv
fs
adc
mov
dec
mov
or
push
inc
inc
int3
cmp
mov
and
ins
inc
jnp
jbe
and
inc
ins
ret
ret
xchg
cmc
or
fild
sub
aas
xor
jle
and
inc
pop
cs
jo
jb
mov
fwait
pop
pop
addr16
add
pop
and
lahf
mov
sbb
cmps
pop
push
sbb
adc
pop
call
jo
or
ins
test
mov
ror
sub
fdiv
push
je
retf
inc
and
shl
jg
adc
out
mov
pop
or
xchg
outs
inc
jmp
or
pop
xchg
aam
jne
mov
xor
std
and
inc
pop
fstp
fistp
ins
or
js
push
outs
ja
ja
xor
mov
or
and
jo
addr16
sub
ja
inc
ds
data16
ss
dec
aas
push
dec
inc
push
cmp
jae
dec
outs
push
mov
out
fst
mov
pop
mov
dec
pop
fs
or
inc
pop
aaa
add
mov
loopne
mov
sbb
push
mov
movs
sbb
pop
mov
pop
mov
mov
inc
or
add
or
bound
sbb
dec
xlat
and
mov
inc
nop
mov
or
inc
int
and
scas
pop
test
fwait
or
in
mov
push
js
inc
cmp
cdq
lods
dec
ss
rcr
inc
jbe
push
push
add
cmp
add
nop
push
outs
push
fadd
push
mov
push
and
add
lar
test
cmp
icebp
jb
aaa
(bad)
ja
jns
push
les
lahf
movs
add
add
push
sbb
push
test
shl
data16
xchg
fild
ins
push
pop
push
outs
sbb
sub
push
mov
or
test
adc
mov
xchg
dec
mov
or
sub
ins
aam
pusha
fadd
add
ror
add
or
add
rcl
cmp
cmps
mov
inc
mov
push
sub
pop
jae
sub
jbe
dec
inc
sbb
or
ret
add
ret
imul
pop
push
inc
dec
arpl
loopne
int3
loope
imul
lods
push
ret
psrlq
and
cmps
add
aaa
sub
dec
cs
dec
sbb
fs
cld
cmp
or
mov
or
inc
mov
xor
dec
add
add
mov
mov
pop
mov
or
sbb
adc
and
adc
daa
ret
inc
or
(bad)
jnp
ins
dec
std
cmp
pop
push
add
push
fs
(bad)
adc
push
ja
retf
mov
mov
mov
mov
add
adc
or
or
ins
add
je
xlat
adc
in
fstp
in
and
cs
push
out
xor
aad
aad
sbb
push
fild
cs
sub
mov
imul
jae
or
mov
mov
adc
fild
add
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
add
and
add
rol
add
add
add
add
dec
add
add
add
jo
add
cwde
add
add
add
sbb
add
add
add
add
test
add
sbb
add
add
test
add
sbb
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
dec
add
xor
add
in
add
add
add
add
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
add
add
jo
add
ins
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
dec
dec
dec
loope
ss
sbb
mov
add
pushf
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
pop
add
add
add
jns
add
jp
add
jns
add
outs
add
add
add
aas
add
add
add
add
add
add
add
add
add
or
dec
dec
dec
mov
jp
(bad)
(bad)
fcos
iret
iret
iret
push
lea
sti
push
push
push
out
cmp
and
mov
add
add
add
add
add
add
cmp
add
sub
add
sbb
add
add
add
add
and
cdq
pop
inc
inc
int
dec
dec
in
push
push
jmp
push
push
in
jl
push
in
je
dec
out
ss
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
adc
push
push
dec
push
push
push
xlat
xchg
xchg
xchg
dec
into
into
jmp
in
(bad)
(bad)
std
cli
(bad)
(bad)
std
cli
(bad)
(bad)
std
cli
(bad)
(bad)
std
cli
(bad)
(bad)
aad
mov
xchg
xchg
(bad)
jnp
jp
pop
pop
pop
repz
inc
inc
fbstp
xor
int3
adc
adc
add
add
add
add
cmp
lods
mov
repz
ins
ins
(bad)
mov
mov
mov
jmp
ret
ret
inc
cmps
cmps
push
data16
das
das
rol
add
mov
add
add
add
pop
add
add
add
push
cmp
cmp
gs
mov
call
rcl
call
rcl
jmp
in
(bad)
(bad)
cli
idiv
(bad)
cli
idiv
(bad)
cli
idiv
(bad)
cli
idiv
(bad)
cli
idiv
(bad)
cli
idiv
(bad)
cli
idiv
(bad)
cli
idiv
in
call
sar
popf
(bad)
inc
fs
dec
dec
dec
jmp
jge
push
jmp
call
mov
(bad)
call
sar
(bad)
fcomp
(bad)
(bad)
fstp
(bad)
jmp
jecxz
(bad)
call
in
fnstcw
js
adc
sbb
rol
add
add
add
add
add
add
add
push
sub
jge
mov
sar
retf
retf
retf
dec
retf
call
clc
icebp
(bad)
(bad)
clc
icebp
(bad)
(bad)
clc
icebp
(bad)
(bad)
clc
icebp
(bad)
(bad)
clc
icebp
(bad)
(bad)
clc
icebp
(bad)
(bad)
clc
icebp
(bad)
(bad)
clc
icebp
(bad)
(bad)
clc
icebp
(bad)
jmp
sar
dec
cdq
(bad)
dec
cdq
(bad)
dec
lahf
inc
mov
data16
mov
stos
stos
(bad)
push
mov
(bad)
inc
(bad)
(bad)
dec
retf
(bad)
call
sar
(bad)
fcomp
(bad)
(bad)
fstp
(bad)
jmp
jecxz
(bad)
call
out
(bad)
(bad)
sti
sti
dec
mov
call
cs
add
cwde
add
add
add
sbb
add
add
add
add
pusha
dec
mov
(bad)
(bad)
(bad)
mov
popf
popf
inc
rol
call
imul
(bad)
push
in
(bad)
push
in
(bad)
push
in
(bad)
push
in
(bad)
push
in
(bad)
push
in
(bad)
push
in
(bad)
push
out
dec
sahf
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
in
mov
call
mov
(bad)
jmp
mov
push
mov
(bad)
inc
(bad)
(bad)
dec
retf
(bad)
call
sar
(bad)
fcomp
(bad)
(bad)
fstp
(bad)
jmp
jecxz
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
loop
call
cs
add
xchg
add
add
add
push
add
add
popa
popa
popa
dec
mov
mov
jmp
mov
rcl
sar
jmp
repz
(bad)
push
call
inc
(bad)
(bad)
push
call
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
stc
ret
cmps
jb
dec
add
call
movs
(bad)
jmp
mov
push
mov
(bad)
inc
(bad)
(bad)
dec
retf
(bad)
call
sar
(bad)
fcomp
(bad)
(bad)
fstp
(bad)
(bad)
out
out
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
loop
call
cs
add
mov
add
inc
add
add
add
add
bound
movs
movs
dec
int
dec
int3
int3
push
mov
(bad)
push
jecxz
push
jecxz
push
jecxz
add
pop
inc
pop
inc
xor
pusha
scas
inc
dec
mov
jl
mov
jbe
jmp
fwait
(bad)
call
sahf
(bad)
jmp
(bad)
push
mov
(bad)
mov
sar
mov
(bad)
call
sar
(bad)
fcomp
(bad)
(bad)
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
call
sbb
rol
add
add
daa
add
add
add
add
arpl
movs
movs
inc
ret
cdq
cdq
cdq
push
rcl
(bad)
jmp
(bad)
(bad)
out
(bad)
(bad)
out
(bad)
push
push
dec
test
dec
test
dec
test
dec
cdq
add
add
or
push
movs
movs
(bad)
jmp
mov
(bad)
call
sahf
(bad)
jmp
(bad)
push
mov
(bad)
mov
sar
mov
(bad)
(bad)
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
mov
inc
add
mov
add
add
fs
cmps
cmps
cmps
inc
mov
(bad)
(bad)
fcos
fcomp
fdivr
out
fdivr
(bad)
in
(bad)
(bad)
in
(bad)
(bad)
in
(bad)
pop
mov
call
mov
call
mov
call
mov
call
stos
sbb
add
add
pusha
jns
(bad)
mov
mov
(bad)
jmp
cmps
(bad)
jmp
fwait
(bad)
call
sahf
(bad)
jmp
(bad)
push
mov
(bad)
mov
sar
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
das
das
rol
add
add
add
add
add
add
add
add
gs
cmps
cmps
cmps
(bad)
(bad)
fdivr
(bad)
fdivr
fcmovnu
(bad)
(bad)
fcos
loop
xlat
(bad)
(bad)
jmp
(bad)
jmp
and
xor
and
sbb
add
add
(bad)
in
lods
lods
(bad)
(bad)
mov
mov
jmp
cmps
(bad)
jmp
fwait
(bad)
call
sahf
(bad)
jmp
(bad)
push
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fld
(bad)
dec
add
popf
add
add
add
or
add
add
add
add
gs
test
(bad)
(bad)
(bad)
fdivr
(bad)
fdivr
fcmovnu
(bad)
jecxz
xlat
(bad)
(bad)
call
sar
(bad)
call
cmp
jmp
sar
adc
push
inc
cdq
add
mov
jmp
(bad)
(bad)
mov
mov
(bad)
jmp
cmps
(bad)
jmp
fwait
(bad)
call
leave
(bad)
call
hlt
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
call
sti
(bad)
(bad)
fucomip
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
and
ret
add
add
sbb
add
add
add
add
dec
stos
stos
stos
jmp
loopne
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
fdivr
in
xlat
(bad)
jmp
int3
(bad)
jmp
int3
(bad)
jmp
int3
push
retf
xor
dec
push
retf
xor
dec
call
mov
inc
cdq
add
dec
xor
mov
retf
retf
(bad)
inc
(bad)
mov
mov
(bad)
jmp
cmps
(bad)
jmp
sar
jmp
(bad)
(bad)
(bad)
fcos
(bad)
inc
in
(bad)
inc
jmp
jecxz
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
test
inc
in
add
test
add
and
add
add
add
add
addr16
stos
stos
stos
jmp
loope
jmp
loopne
(bad)
(bad)
fdivrp
(bad)
fdivr
in
xlat
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
cmp
pop
(bad)
cmp
pop
(bad)
cmp
pop
(bad)
cmp
pop
call
mov
inc
cdq
add
arpl
dec
fwait
fwait
(bad)
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
mov
(bad)
jmp
mov
(bad)
jmp
stc
(bad)
jmp
(bad)
call
mov
(bad)
(bad)
in
(bad)
(bad)
(bad)
out
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
cli
cli
(bad)
cli
div
(bad)
stc
cmc
cmc
(bad)
stc
cmc
cmc
(bad)
stc
cmc
cmc
jmp
rcl
dec
add
xchg
add
add
imul
jmp
loop
jmp
loope
jmp
loopne
(bad)
(bad)
fdivrp
in
(bad)
(bad)
jmp
ret
(bad)
jmp
ret
(bad)
jmp
ret
inc
inc
inc
inc
jmp
mov
add
jae
dec
jmp
mov
sar
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
mov
(bad)
jmp
loope
push
(bad)
(bad)
(bad)
mov
jp
lahf
jbe
jmp
data16
fld
(bad)
(bad)
push
(bad)
(bad)
(bad)
cli
(bad)
(bad)
stc
div
push
out
in
push
in
jmp
hlt
in
jmp
hlt
in
jmp
hlt
in
jmp
hlt
in
jmp
hlt
in
jmp
cdq
data16
add
popf
add
add
push
push
scas
scas
scas
jmp
in
jmp
loop
jmp
loope
jmp
loopne
jmp
(bad)
(bad)
(bad)
fistp
(bad)
(bad)
fistp
dec
dec
dec
jmp
mov
add
jae
dec
jmp
mov
sar
call
sar
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
mov
(bad)
push
(bad)
(bad)
jmp
outs
jo
test
fistp
call
in
lock
(bad)
cli
(bad)
push
icebp
out
(bad)
out
in
(bad)
out
in
(bad)
out
in
(bad)
out
in
(bad)
out
in
(bad)
out
in
(bad)
out
in
jmp
and
mov
imul
scas
scas
scas
jmp
in
jmp
in
jmp
loop
jmp
loope
(bad)
call
fdivr
(bad)
(bad)
fdivr
call
cmp
lock
lock
lds
and
xchg
out
mov
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
push
repnz
push
(bad)
jmp
lods
lods
call
jmp
(bad)
fdivr
(bad)
out
xlat
(bad)
(bad)
(bad)
cli
(bad)
push
in
in
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
add
add
dec
mov
mov
out
out
in
in
in
in
loop
loop
jmp
fidiv
(bad)
(bad)
fidiv
call
(bad)
call
(bad)
call
mov
push
nop
stc
push
xchg
rcr
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
(bad)
out
out
(bad)
push
(bad)
(bad)
stc
iret
sar
lahf
jo
jmp
fidiv
call
mov
(bad)
(bad)
cli
(bad)
(bad)
call
aad
push
mov
(bad)
stc
mov
stc
retf
retf
iret
int
repz
jmp
and
mov
ins
ins
ins
dec
mov
mov
out
out
out
out
in
in
in
in
jmp
(bad)
(bad)
fdiv
call
call
int3
dec
in
dec
(bad)
dec
(bad)
push
nop
stc
jmp
cmps
inc
xchg
xchg
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
iret
(bad)
(bad)
in
in
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
fld
(bad)
call
cmp
ins
imul
add
(bad)
cli
(bad)
(bad)
inc
(bad)
(bad)
jmp
mov
push
mov
(bad)
inc
(bad)
(bad)
dec
retf
push
and
mov
add
aas
ins
ins
ins
dec
mov
mov
jmp
out
jmp
out
jmp
in
(bad)
jmp
(bad)
(bad)
call
lods
(bad)
call
lods
(bad)
call
lods
(bad)
cmp
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
dec
(bad)
push
xchg
stc
dec
mov
lods
jns
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
int3
(bad)
(bad)
(bad)
(bad)
(bad)
in
in
(bad)
(bad)
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
out
(bad)
push
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
push
stc
(bad)
jmp
(bad)
jmp
mov
push
mov
(bad)
inc
(bad)
jmp
es
add
add
outs
outs
outs
dec
mov
mov
jmp
jmp
out
jmp
out
(bad)
jmp
aad
call
cmps
(bad)
call
cmps
(bad)
call
cmps
(bad)
cmp
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
push
xchg
stc
push
ins
sar
cdq
data16
stc
mov
call
sar
(bad)
jmp
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fcos
(bad)
dec
cmc
(bad)
inc
out
call
out
(bad)
jmp
(bad)
(bad)
(bad)
out
(bad)
(bad)
(bad)
mov
cdq
(bad)
call
movs
(bad)
jmp
mov
push
mov
call
add
jg
add
and
add
add
add
add
outs
dec
mov
mov
jmp
jmp
in
loopne
(bad)
stc
lods
cmp
in
shr
(bad)
call
mov
(bad)
call
mov
call
out
(bad)
cmp
(bad)
inc
(bad)
inc
(bad)
(bad)
cmp
stc
jmp
imul
call
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
fcos
(bad)
(bad)
fdiv
(bad)
(bad)
mov
mov
(bad)
call
sahf
(bad)
jmp
(bad)
push
mov
fcomp
pop
out
add
add
add
push
jo
jo
mov
mov
repz
push
xchg
add
jmp
scas
(bad)
in
loope
(bad)
dec
sahf
(bad)
dec
sahf
(bad)
dec
sahf
(bad)
dec
sahf
(bad)
dec
sahf
(bad)
dec
sahf
dec
les
call
jle
inc
cmps
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
aad
inc
int3
(bad)
inc
iret
(bad)
(bad)
mov
mov
jmp
cmps
(bad)
jmp
fwait
(bad)
call
sahf
(bad)
jmp
(bad)
push
cmp
inc
inc
rol
add
inc
add
add
jb
jb
mov
les
not
add
jmp
loop
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
dec
cdq
(bad)
inc
cdq
(bad)
jmp
ins
(bad)
fld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
idiv
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
mov
(bad)
jmp
cmps
(bad)
jmp
fwait
(bad)
call
sahf
(bad)
jmp
call
and
pop
add
and
add
add
add
add
add
add
jae
mov
mov
add
in
add
call
loop
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
(bad)
mov
xchg
lahf
jo
(bad)
stc
cmc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
call
sar
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
mov
(bad)
jmp
cmps
(bad)
jmp
fwait
(bad)
call
sahf
dec
test
in
add
inc
add
add
add
add
dec
mov
mov
add
(bad)
jmp
into
mov
lock
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
(bad)
mov
jae
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
call
sar
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
mov
(bad)
jmp
cmps
(bad)
jmp
fwait
push
xchg
xchg
call
es
add
add
add
add
add
jne
mov
mov
add
shr
jmp
int3
mov
repnz
(bad)
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
stc
mov
jmp
lahf
lahf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
cmc
(bad)
jmp
loope
(bad)
fcmovnu
(bad)
call
(bad)
(bad)
call
sar
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
mov
(bad)
jmp
cmps
(bad)
stc
popf
popf
jmp
dec
ret
add
add
add
jbe
jbe
mov
mov
call
jl
jmp
mov
out
push
jecxz
(bad)
(bad)
mov
jo
(bad)
mov
jo
(bad)
mov
jo
(bad)
mov
jo
(bad)
mov
jo
(bad)
mov
jo
(bad)
mov
ins
call
lahf
lahf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
out
(bad)
jmp
in
jmp
loope
(bad)
fcmovnu
(bad)
call
(bad)
(bad)
call
sar
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
mov
(bad)
stc
test
jb
test
fld
add
xor
add
or
add
add
jbe
mov
fcmovnb
(bad)
jmp
fdivrp
(bad)
call
aad
push
loop
(bad)
(bad)
mov
gs
(bad)
mov
gs
(bad)
mov
gs
(bad)
mov
gs
(bad)
mov
gs
(bad)
mov
gs
(bad)
mov
gs
stos
jmp
cmp
in
in
(bad)
(bad)
cld
cld
(bad)
(bad)
out
out
(bad)
(bad)
jmp
in
jmp
loope
(bad)
fcmovnu
(bad)
call
(bad)
(bad)
call
sar
dec
int3
(bad)
dec
retf
(bad)
inc
(bad)
mov
scas
jmp
pop
loop
sbb
add
add
add
ja
ja
mov
rcl
call
mov
jmp
out
push
loop
(bad)
push
push
(bad)
call
adc
jmp
cs
jmp
(bad)
push
pop
(bad)
push
pop
(bad)
push
pop
(bad)
push
pop
push
data16
mov
push
loope
(bad)
(bad)
out
out
(bad)
(bad)
jmp
in
jmp
loope
(bad)
fcmovnu
(bad)
call
(bad)
(bad)
call
sar
dec
int3
(bad)
stc
(bad)
int3
xchg
xchg
call
push
push
scas
add
add
add
push
js
js
rol
(bad)
fcmovu
(bad)
(bad)
fcos
mov
(bad)
push
loop
(bad)
push
and
stc
rcr
push
(bad)
push
ret
ja
cli
scas
cmp
std
mov
or
jmp
sub
jmp
cmp
push
dec
(bad)
push
push
jmp
data16
mov
mov
jmp
enter
(bad)
(bad)
push
rcl
jmp
mov
lods
(bad)
mov
ins
ins
dec
dec
dec
pop
add
add
jns
jns
rol
call
aad
call
mov
jmp
in
push
jecxz
(bad)
jmp
push
div
push
cmc
cmc
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
out
into
sahf
push
mov
inc
(bad)
stc
cmps
sub
call
(bad)
jmp
sub
out
mov
push
push
je
call
data16
push
push
jecxz
dec
dec
cmps
dec
cmp
push
add
add
add
add
add
add
add
add
jnp
ret
(bad)
(bad)
fdivr
loope
loope
clc
clc
clc
push
div
(bad)
clc
jecxz
(bad)
(bad)
mov
cli
(bad)
clc
clc
clc
push
div
push
cmc
cmc
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
out
jmp
in
jmp
loop
jmp
loopne
jmp
shl
(bad)
in
mov
push
push
test
or
call
push
(bad)
jmp
outs
out
add
add
add
add
add
dec
add
add
add
add
jl
jl
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
jmp
retf
(bad)
(bad)
clc
out
(bad)
cld
cld
cld
(bad)
cli
cli
cli
(bad)
clc
clc
clc
push
div
push
cmc
cmc
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
out
jmp
in
jmp
loop
jmp
loopne
(bad)
(bad)
fdivrp
fstp
(bad)
fcmovnu
(bad)
(bad)
fcos
xlat
xlat
xlat
(bad)
fcmovne
mov
(bad)
jmp
lahf
lahf
sti
add
fld
inc
enter
movs
add
add
add
push
add
add
jnp
jnp
(bad)
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
jmp
jmp
aad
aad
mov
popf
call
xchg
xchg
(bad)
mov
mov
(bad)
(bad)
iret
jmp
(bad)
(bad)
push
cmc
cmc
push
repz
icebp
icebp
(bad)
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
out
jmp
in
jmp
loop
jmp
loopne
(bad)
(bad)
fdivrp
fstp
(bad)
fcmovnu
(bad)
(bad)
fcos
xlat
xlat
xlat
call
aad
call
aam
call
rcl
call
rcl
dec
into
into
push
js
int3
sub
add
pop
add
add
ja
ja
mov
push
lock
fcmovnu
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
jmp
outs
outs
jmp
jb
jmp
ja
jmp
jnp
mov
pushf
pushf
call
mov
sar
rcl
(bad)
call
jmp
out
out
in
in
loop
loop
loopne
loopne
(bad)
fdivrp
fstp
(bad)
fcmovnu
(bad)
(bad)
fcos
xlat
xlat
xlat
call
aad
call
aam
call
rcl
jmp
addr16
add
add
add
add
add
add
jae
(bad)
(bad)
(bad)
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
int
sar
outs
outs
jmp
jb
jmp
ja
jmp
jnp
mov
jge
mov
jg
mov
cmp
mov
xchg
(bad)
mov
movs
movs
call
mov
call
mov
(bad)
loop
loop
loopne
loopne
(bad)
fdivrp
fstp
(bad)
fcmovnu
(bad)
(bad)
fcos
xlat
xlat
xlat
call
rcl
call
dec
dec
je
add
adc
add
add
add
add
loop
loop
loop
loop
loop
loop
loop
loop
loop
mov
rcl
jo
mov
cmp
scas
jnp
push
jg
push
cmp
test
(bad)
mov
mov
ret
nop
nop
inc
xchg
xchg
inc
xchg
xchg
(bad)
fcmovne
into
(bad)
jmp
icebp
icebp
push
div
push
div
push
lock
in
in
in
jmp
jecxz
dec
(bad)
setg
add
cmp
add
pop
dec
dec
dec
and
jmp
jmp
(bad)
jmp
(bad)
(bad)
mov
jne
inc
test
dec
xchg
(bad)
dec
cdq
push
ret
in
mov
xchg
(bad)
fisub
xchg
dec
cwde
nop
inc
lea
inc
mov
inc
xchg
xchg
inc
xchg
xchg
dec
xchg
xchg
jmp
aad
push
icebp
icebp
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
clc
(bad)
push
lock
(bad)
jmp
lods
test
dec
push
push
lods
add
add
add
adc
add
add
js
in
in
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
fidiv
(bad)
inc
jne
inc
test
dec
xchg
(bad)
dec
cdq
(bad)
dec
pushf
(bad)
dec
sahf
(bad)
dec
mov
(bad)
dec
cmps
(bad)
dec
test
(bad)
dec
scas
(bad)
dec
mov
hlt
shr
mov
jmp
mov
(bad)
fld
fdivr
cli
out
(bad)
jmp
jecxz
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
jmp
jecxz
(bad)
call
out
call
iret
iret
dec
(bad)
add
add
add
add
add
add
test
test
div
idiv
div
idiv
div
idiv
div
idiv
cld
retf
(bad)
(bad)
inc
jne
inc
test
dec
xchg
(bad)
dec
cdq
(bad)
dec
pushf
(bad)
dec
sahf
(bad)
dec
mov
(bad)
dec
cmps
(bad)
dec
test
(bad)
dec
scas
(bad)
dec
mov
dec
mov
dec
mov
dec
mov
(bad)
dec
mov
jmp
mov
sar
call
xlat
(bad)
(bad)
(bad)
(bad)
jmp
in
(bad)
call
out
(bad)
push
cmc
(bad)
(bad)
stc
stc
dec
add
sahf
add
add
add
or
bound
xor
aad
(bad)
cld
cld
cld
(bad)
cld
div
(bad)
cld
loope
(bad)
std
rcr
(bad)
inc
test
dec
xchg
(bad)
dec
cdq
(bad)
dec
pushf
(bad)
dec
sahf
(bad)
dec
mov
(bad)
dec
cmps
(bad)
dec
test
(bad)
dec
scas
(bad)
dec
mov
dec
mov
dec
mov
dec
mov
(bad)
dec
mov
(bad)
dec
(bad)
jmp
mov
(bad)
jmp
in
(bad)
call
out
(bad)
push
cmc
(bad)
(bad)
stc
stc
(bad)
(bad)
(bad)
(bad)
dec
leave
leave
push
xor
les
add
jb
add
pop
add
add
(bad)
(bad)
(bad)
xchg
fcomp
fdivr
mov
mov
push
imul
inc
test
dec
xchg
(bad)
dec
cdq
(bad)
dec
pushf
(bad)
dec
sahf
(bad)
dec
mov
(bad)
dec
cmps
(bad)
dec
test
(bad)
dec
scas
(bad)
dec
mov
dec
mov
dec
mov
dec
mov
(bad)
dec
mov
(bad)
dec
(bad)
(bad)
dec
(bad)
push
jae
stos
mov
in
(bad)
jmp
lock
push
cmc
(bad)
(bad)
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
repnz
jno
add
add
add
add
xchg
xchg
xchg
add
xchg
(bad)
repnz
(bad)
inc
jne
inc
test
dec
xchg
(bad)
dec
cdq
(bad)
dec
pushf
(bad)
dec
sahf
(bad)
dec
mov
(bad)
dec
cmps
(bad)
dec
test
(bad)
dec
scas
(bad)
dec
mov
dec
mov
dec
mov
dec
mov
(bad)
dec
mov
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
mov
(bad)
push
push
(bad)
sar
push
lock
push
idiv
(bad)
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
and
add
add
add
xchg
xchg
xchg
bound
xchg
xchg
mov
xchg
xchg
(bad)
stos
lahf
xchg
(bad)
mov
cdq
(bad)
mov
mov
dec
mov
(bad)
fdivr
movs
jmp
mov
scas
(bad)
dec
mov
dec
mov
dec
mov
dec
mov
(bad)
dec
mov
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
enter
mov
and
and
movs
mov
idiv
(bad)
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
in
call
rcl
(bad)
mov
mov
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
inc
mov
mov
nop
nop
xchg
xchg
xchg
cmps
fwait
xchg
xchg
(bad)
mov
popf
(bad)
mov
mov
dec
mov
dec
mov
jmp
mov
mov
push
add
xchg
xchg
xchg
bound
rol
test
mov
outs
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
xchg
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
inc
add
add
add
inc
add
add
add
aas
add
rol
add
pop
add
rol
add
sldt
rol
add
pop
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rol
add
pop
add
rol
add
pop
add
rol
add
aas
add
rol
add
jg
add
add
add
aas
add
rol
add
aas
add
rol
add
aas
add
rol
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
or
inc
add
add
add
add
add
add
add
and
add
add
adc
add
add
add
add
jae
add
outs
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
cmp
pop
pop
pop
in
xor
pop
mov
add
add
add
add
add
add
add
add
add
add
adc
jnp
and
mov
cs
push
mov
adc
movs
add
add
add
dec
add
add
add
add
add
add
add
add
dec
dec
dec
mov
mov
jmp
hlt
hlt
repnz
fstp
fdivr
ret
ret
xchg
nop
(bad)
mul
in
inc
inc
inc
(bad)
sub
(bad)
push
push
push
lods
add
add
and
fwait
ja
push
fstp
xchg
xchg
std
shl
mov
idiv
push
in
cmp
add
popf
add
add
add
add
add
add
add
inc
inc
inc
push
outs
outs
outs
lds
aam
(bad)
jmp
in
(bad)
(bad)
stc
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
sti
(bad)
(bad)
std
clc
(bad)
(bad)
sti
idiv
in
call
mov
(bad)
jp
gs
dec
dec
call
out
lods
lods
(bad)
inc
(bad)
(bad)
dec
iret
(bad)
(bad)
fcmovu
(bad)
jmp
loope
(bad)
jmp
(bad)
enter
jbe
push
jmp
adc
mov
add
jg
add
cmp
add
or
arpl
pop
mov
rol
mov
mov
jmp
loope
(bad)
clc
out
(bad)
(bad)
imul
(bad)
std
imul
(bad)
(bad)
stc
idiv
(bad)
cld
cld
(bad)
push
loope
call
lahf
(bad)
call
pushf
inc
xchg
jnp
rol
(bad)
push
mov
(bad)
dec
int3
(bad)
call
aad
(bad)
fstp
(bad)
jmp
out
(bad)
(bad)
(bad)
(bad)
jmp
loop
xchg
ins
ins
neg
add
jle
add
xor
add
or
add
add
add
add
imul
mov
inc
ret
jmp
(bad)
push
out
dec
loop
(bad)
cmp
xor
push
into
xchg
(bad)
out
(bad)
(bad)
call
sahf
cmp
jl
(bad)
call
(bad)
jmp
mov
(bad)
mov
(bad)
(bad)
dec
int3
(bad)
call
aam
jmp
jecxz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
adc
or
add
add
add
add
add
add
push
push
mov
mov
(bad)
mov
in
(bad)
push
call
inc
popf
add
add
or
setl
jmp
call
cld
cmps
test
call
cdq
(bad)
jmp
stos
(bad)
push
mov
(bad)
dec
retf
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
fcomp
jmp
dec
call
add
add
add
or
imul
mov
fcomp
(bad)
(bad)
(bad)
jmp
out
(bad)
retf
fidiv
call
mov
call
lods
push
inc
pushf
add
inc
jl
jmp
call
jmp
sahf
(bad)
call
mov
(bad)
push
mov
(bad)
(bad)
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
and
ret
add
add
add
sbb
add
add
imul
retf
loope
(bad)
fcmovu
fdivr
call
jmp
sbb
cmp
inc
cwde
add
jnp
push
(bad)
(bad)
mov
mov
(bad)
jmp
popf
(bad)
call
sar
dec
hlt
(bad)
dec
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jmp
add
add
add
add
ins
ins
ins
(bad)
retf
retf
retf
jmp
jecxz
(bad)
fcmovnu
fdivr
jmp
out
call
fild
push
rcl
and
or
cmps
mov
dec
into
(bad)
inc
ret
(bad)
(bad)
mov
mov
jmp
fcos
jmp
sti
(bad)
clc
mov
push
mov
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cld
std
(bad)
std
cld
cld
(bad)
cld
sti
sti
jmp
or
add
outs
outs
outs
(bad)
int
int
in
in
(bad)
(bad)
jmp
call
loopne
push
fcomp
inc
fild
sub
inc
call
add
les
(bad)
dec
retf
(bad)
inc
ret
(bad)
push
mov
(bad)
in
cmps
mov
mov
ja
mov
jne
shl
(bad)
(bad)
sti
clc
clc
push
lock
push
out
in
push
out
in
(bad)
sti
div
dec
lods
stos
jmp
push
push
mov
add
dec
add
add
outs
outs
outs
(bad)
iret
iret
iret
jmp
out
(bad)
fnstsw
loop
jmp
sar
(bad)
fnstsw
inc
jmp
xor
dec
jmp
test
retf
pushf
lahf
(bad)
call
aam
dec
int
dec
retf
(bad)
inc
ret
(bad)
call
sar
push
cld
inc
xchg
push
loopne
jmp
out
repnz
repz
jmp
(bad)
jmp
(bad)
lock
mov
inc
sub
ret
add
add
add
jno
rcl
sar
jmp
jecxz
(bad)
in
(bad)
(bad)
(bad)
fnstenv
push
sti
mov
pop
repnz
dec
(bad)
cmp
fdivr
mov
int
(bad)
dec
int3
(bad)
dec
int3
(bad)
dec
leave
(bad)
call
(bad)
(bad)
push
(bad)
call
stos
lods
jmp
shl
(bad)
cld
aam
(bad)
std
loop
(bad)
cli
mov
ret
push
retf
clc
(bad)
aam
aam
scas
inc
sub
add
add
add
add
jb
rcl
sar
jmp
(bad)
out
(bad)
(bad)
call
stos
call
aam
inc
loopne
dec
mov
dec
push
xchg
call
retf
enter
retf
retf
retf
(bad)
call
(bad)
(bad)
(bad)
jmp
sti
in
sti
dec
mov
jno
fst
(bad)
inc
(bad)
(bad)
jmp
mov
(bad)
mov
retf
cmps
cmps
inc
mov
add
add
je
je
aam
fdivr
in
out
icebp
jmp
jecxz
(bad)
out
fmulp
(bad)
call
mov
jmp
cwde
(bad)
push
mov
(bad)
jmp
mov
push
mov
cld
leave
ret
(bad)
jmp
jecxz
push
cmc
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
jmp
(bad)
(bad)
call
cli
(bad)
cli
ret
jmp
std
(bad)
(bad)
fsubp
(bad)
call
lahf
(bad)
jmp
mov
inc
sar
xchg
xchg
jmp
sbb
lahf
add
add
jne
ja
xlat
ror
(bad)
cli
mov
gs
out
(bad)
(bad)
dec
pushf
push
int3
cmps
push
mov
(bad)
jnp
jecxz
push
call
into
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
idiv
dec
call
(bad)
dec
fdivr
jmp
pushf
(bad)
call
mov
(bad)
std
mov
jmp
adc
jne
add
sbb
add
add
and
sahf
(bad)
sti
mov
(bad)
jmp
loope
(bad)
dec
xchg
(bad)
dec
cdq
(bad)
dec
xchg
(bad)
dec
xchg
(bad)
dec
call
mov
cmp
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
ret
push
mov
jmp
sahf
(bad)
call
mov
push
dec
xlat
add
add
add
or
add
add
and
add
push
loope
(bad)
inc
mov
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
mov
dec
mov
dec
nop
call
lea
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
iret
(bad)
dec
retf
ret
ret
(bad)
(bad)
mov
mov
jmp
sahf
(bad)
call
std
cmp
sub
add
add
add
add
jnp
and
fwait
(bad)
fnsave
jmp
lods
js
cmc
loope
(bad)
inc
jbe
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jg
mov
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
idiv
(bad)
(bad)
(bad)
call
xlat
(bad)
call
sar
dec
retf
(bad)
inc
ret
(bad)
(bad)
mov
mov
jmp
jmp
dec
mov
add
add
jl
and
mov
fcos
cmc
fnstsw
(bad)
(bad)
mov
addr16
(bad)
mov
push
(bad)
mov
ins
(bad)
(bad)
mov
imul
lds
(bad)
(bad)
push
idiv
(bad)
call
loope
(bad)
fcomp
(bad)
call
sar
dec
int3
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
inc
or
sub
add
pop
add
add
add
(bad)
mov
int3
sar
neg
mov
(bad)
(bad)
stos
das
(bad)
std
scas
inc
(bad)
(bad)
scas
inc
(bad)
(bad)
lods
cmp
jmp
aas
(bad)
push
push
(bad)
(bad)
mov
pop
push
ret
retf
push
loopne
(bad)
(bad)
out
(bad)
jmp
jecxz
(bad)
fcmovu
(bad)
sti
int3
int3
(bad)
jmp
mov
mov
cmp
sbb
adc
add
add
add
mov
push
xlat
lods
(bad)
(bad)
lods
cmp
imul
(bad)
push
icebp
out
push
jecxz
push
(bad)
stos
push
retf
hlt
mov
pusha
(bad)
cli
scas
inc
(bad)
(bad)
test
(bad)
jmp
xor
enter
mov
xchg
test
mov
(bad)
push
ins
ins
in
ins
dec
dec
mov
add
add
add
add
add
jmp
loop
push
clc
sti
(bad)
std
loope
(bad)
(bad)
in
(bad)
(bad)
(bad)
(bad)
clc
cli
cld
push
idiv
(bad)
out
hlt
sti
(bad)
in
repnz
(bad)
jmp
call
fcos
jecxz
into
jmp
shl
push
mov
dec
(bad)
jmp
xor
in
popf
sub
mov
repnz
push
mov
add
add
add
add
or
add
add
call
(bad)
(bad)
jmp
dec
mov
(bad)
fcmovb
(bad)
jmp
(bad)
(bad)
out
jmp
repnz
out
icebp
icebp
(bad)
in
out
out
(bad)
jmp
jmp
in
(bad)
fsubp
in
fcmovnu
in
xlat
fucom
call
fcomp
(bad)
fmul
mov
(bad)
mov
mov
xchg
xchg
xchg
jmp
add
add
add
add
jnp
jnp
fstp
(bad)
loope
loope
aam
fdivr
mov
jmp
jmp
jg
(bad)
mov
mov
mov
fld
(bad)
jmp
aam
jmp
fcmovnu
jmp
fstp
jmp
loope
(bad)
(bad)
(bad)
fcmovu
(bad)
xlat
fcomp
call
(bad)
(bad)
(bad)
(bad)
ret
jmp
outs
movs
cs
add
add
add
add
add
add
xchg
jmp
jecxz
(bad)
(bad)
mov
push
jp
jmp
jp
push
jge
push
add
dec
lahf
lahf
(bad)
(bad)
fcos
jmp
(bad)
jmp
out
jmp
xor
lods
add
add
add
add
sub
sub
out
out
out
(bad)
jmp
retf
(bad)
mov
cmp
test
(bad)
in
mov
xchg
(bad)
fld
xchg
dec
fwait
xchg
dec
cdq
xchg
dec
xchg
xchg
dec
xchg
xchg
(bad)
call
div
(bad)
push
idiv
(bad)
out
out
(bad)
(bad)
out
out
push
add
movs
add
add
add
adc
add
add
jmp
std
cmc
stc
(bad)
push
out
call
(bad)
inc
jle
dec
xchg
(bad)
dec
pushf
(bad)
dec
lahf
(bad)
dec
movs
(bad)
dec
test
(bad)
call
mov
dec
mov
std
retf
clc
lds
push
ror
(bad)
(bad)
fcmovnu
(bad)
(bad)
(bad)
(bad)
jmp
in
push
lock
out
call
dec
rol
add
jl
add
add
add
mov
mov
repz
jmp
(bad)
fidiv
(bad)
inc
jle
dec
xchg
(bad)
dec
pushf
(bad)
dec
lahf
(bad)
dec
movs
(bad)
dec
cmps
(bad)
dec
stos
(bad)
dec
scas
(bad)
dec
mov
dec
mov
dec
mov
(bad)
sti
retf
mov
mov
(bad)
(bad)
call
out
(bad)
(bad)
stc
stc
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
sahf
lahf
mov
(bad)
(bad)
mov
(bad)
inc
jle
dec
xchg
(bad)
dec
pushf
(bad)
dec
lahf
(bad)
dec
movs
(bad)
dec
test
dec
lods
(bad)
dec
mov
dec
mov
dec
mov
(bad)
dec
sar
int
push
(bad)
sar
pop
pop
ret
ret
cmc
cmc
(bad)
(bad)
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
inc
inc
inc
mov
add
das
add
add
nop
nop
nop
cmp
xchg
xchg
(bad)
(bad)
lods
lahf
xchg
stos
mov
test
fwait
ror
mov
loope
mov
stos
clc
jmp
push
lds
(bad)
dec
leave
(bad)
fidivr
push
dec
xchg
xchg
xchg
fwait
out
jmp
(bad)
jmp
aam
jmp
lods
lods
lods
mov
add
add
add
add
add
add
add
add
add
sbb
xchg
inc
cmps
cdq
xchg
pop
scas
sahf
call
fwait
fwait
fwait
call
adc
jae
cmps
cmps
cmps
pop
popf
popf
popf
inc
outs
outs
outs
daa
dec
dec
dec
or
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
sldt
add
add
add
add
add
add
add
add
add
add
pop
lock
jg
xlat
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
add
adc
add
aas
add
add
add
jnp
add
jo
add
pop
add
add
add
dec
add
add
add
push
add
ins
add
add
add
cmp
add
push
add
add
inc
inc
pop
mov
cmps
out
jg
jle
pop
pop
pop
xlat
xor
pop
push
mov
ds
enter
ficom
push
push
fldcw
sbb
mov
add
add
add
push
pop
pop
pop
sbb
xlat
aad
(bad)
(bad)
std
bnd
repnz
(bad)
stc
repz
out
rcr
imul
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
in
in
call
ret
ret
std
inc
sub
add
arpl
and
iret
iret
push
jmp
jmp
lods
and
call
movs
(bad)
jmp
lods
(bad)
(bad)
mov
jmp
ret
ret
std
sbb
mov
gs
loop
push
in
push
ret
inc
inc
mov
je
push
mov
(bad)
cld
mov
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jp
pusha
jecxz
add
xchg
push
imul
in
push
loope
call
imul
mov
dec
lods
popf
(bad)
dec
int3
(bad)
dec
retf
(bad)
sar
(bad)
mov
push
loopne
(bad)
clc
cmc
hlt
(bad)
clc
hlt
repnz
cmps
movs
sti
add
add
(bad)
imul
jmp
pop
loopne
push
cmps
retf
movs
mov
(bad)
(bad)
fstp
jmp
aad
(bad)
mov
retf
int3
(bad)
sti
retf
retf
(bad)
cli
retf
retf
movs
movs
cld
add
add
retf
lds
push
shr
(bad)
cmp
ret
(bad)
push
repnz
(bad)
sti
sti
(bad)
push
(bad)
push
mov
retf
(bad)
call
mov
ror
pop
jno
jge
iret
mov
push
(bad)
call
cmps
push
leave
fwait
(bad)
ffree
mov
(bad)
in
jmp
(bad)
(bad)
push
lock
dec
sar
push
mov
(bad)
jnp
push
mov
jne
jge
lds
mov
inc
jbe
(bad)
mov
push
call
movs
xchg
jmp
jmp
fcmovnu
(bad)
dec
into
(bad)
cld
mov
jmp
and
inc
add
add
ja
and
rol
(bad)
inc
jno
sti
retf
cmp
les
cld
mov
push
call
cdq
pop
jmp
mov
jmp
mov
xchg
xacquire
leave
xor
add
or
add
add
and
rcl
imul
in
jmp
rol
(bad)
jmp
jmp
loope
out
fcos
out
mov
loope
cmp
mov
push
pusha
frstor
push
push
ja
add
sbb
add
add
outs
outs
outs
xor
fadd
mov
push
lea
dec
cmps
stos
(bad)
fxch
sar
jmp
jmp
fst
push
push
ins
add
add
add
add
add
add
mov
repnz
(bad)
cld
int
(bad)
std
lds
push
mov
mov
(bad)
in
(bad)
sar
jmp
push
push
push
mov
add
add
add
add
add
add
test
mov
clc
sti
(bad)
mov
dec
mov
(bad)
dec
mov
call
mov
dec
lods
stos
jmp
(bad)
inc
rol
sbb
sbb
add
add
add
add
add
add
mov
mov
stos
popf
pop
call
mov
cdq
jns
test
cmps
scas
mov
lahf
push
cwde
cwde
cwde
push
inc
inc
inc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
add
add
add
or
dec
add
sbb
add
dec
add
and
add
fmul
das
dec
add
loopne
add
cmp
add
dec
add
inc
dec
add
lock
add
push
dec
add
clc
dec
add
pop
dec
add
push
add
jp
add
mov
add
dec
add
add
add
adc
add
mov
add
add
add
mov
add
add
dec
add
add
add
mov
add
add
dec
add
add
add
loopne
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
ins
add
dec
xor
cs
ins
add
push
inc
push
push
cs
ins
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
inc
dec
dec
xor
cs
ins
add
inc
push
xor
cs
ins
add
dec
outs
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
inc
gs
gs
inc
inc
add
data16
add
inc
outs
dec
outs
imul
add
push
dec
inc
gs
popa
ins
ins
outs
arpl
add
inc
gs
inc
add
and
outs
jae
popa
ins
ins
inc
and
inc
sub
push
jb
addr16
jae
cmp
or
push
jb
addr16
ins
cmp
gs
jo
gs
and
inc
dec
push
cmp
push
pop
and
or
dec
outs
jae
popa
ins
ins
inc
outs
fs
and
scas
daa
sbb
add
and
add
add
pop
add
add
add
or
xchg
mov
pop
imul
add
xchg
add
inc
out
jl
repz
mov
call
pop
inc
push
stc
adc
pop
(bad)
push
or
sbb
jle
out
mov
ins
push
jmp
rcl
(bad)
mov
pop
push
je
daa
fnstenv
stos
loope
out
int
fld
jmp
add
jne
and
in
mov
(bad)
daa
cmps
outs
pop
rcl
mov
and
push
inc
jns
call
loop
ret
fcomp
jbe
js
ror
in
dec
mov
out
sti
fdiv
pop
xchg
dec
sub
sbb
cmp
cdq
and
mov
xlat
inc
or
inc
push
pop
mov
pop
cmp
push
sub
pop
jnp
mov
xor
iret
xchg
cmp
sahf
or
dec
jp
mul
add
pop
xchg
mov
mov
stos
div
jmp
lds
xor
push
mov
ds
fcomp
dec
xchg
cmp
push
movs
and
lods
arpl
add
dec
adc
scas
movs
adc
scas
dec
(bad)
pop
xlat
jg
(bad)
and
retf
retf
in
mov
adc
js
fiadd
xor
shl
cli
stos
sub
retf
(bad)
sti
jne
iret
loop
scas
add
sbb
inc
lods
jmp
imul
ss
(bad)
lahf
cwde
jmp
imul
and
retf
cmps
mov
(bad)
ret
mov
(bad)
test
cmp
in
push
pusha
scas
cmp
js
cmp
push
lods
ins
into
popa
or
mov
mov
(bad)
jg
pop
pop
sub
pushf
dec
xchg
(bad)
jbe
add
sub
lahf
xchg
and
jmp
ret
leave
mov
jbe
out
(bad)
in
ret
mov
aas
fdiv
adc
int3
test
jns
mov
push
aas
jns
jns
and
fdivrp
fdivr
fwait
loope
cmp
sub
push
lods
push
jne
daa
sahf
xchg
int3
inc
in
pop
enter
call
loop
xor
mov
or
mov
pop
add
mov
je
cmp
addr16
push
mov
ins
shl
inc
loope
in
pop
mov
cli
cmp
dec
jns
outs
inc
call
popf
add
mov
dec
mov
sub
add
out
pop
mov
std
out
in
out
sub
outs
cld
dec
imul
jmp
loop
stos
movs
dec
scas
pop
jne
dec
es
jne
mov
push
sub
out
scas
xor
inc
sbb
ss
sub
cld
mov
in
jno
aas
dec
iret
or
ret
stc
retf
inc
dec
in
(bad)
(bad)
mov
in
jle
rcr
mov
arpl
xchg
outs
push
(bad)
cmovne
mov
push
shl
inc
sub
xchg
sahf
shl
gs
das
pop
ins
aaa
cwde
adc
(bad)
frstor
loopne
pusha
adc
rcr
xchg
mov
mov
pop
jb
jbe
rcr
pop
dec
sub
dec
mov
push
aad
pusha
shl
or
scas
rcr
xchg
lock
lahf
outs
int3
imul
push
fdiv
push
push
bound
daa
das
cmp
aad
test
mov
shl
ds
push
(bad)
cmp
bound
out
(bad)
addr16
pop
(bad)
fdivr
mov
dec
jae
inc
add
xchg
cmp
cs
popa
outs
adc
adc
mov
add
test
adc
mov
sub
pop
xchg
or
push
mov
sbb
push
push
xor
adc
ja
mov
dec
lods
icebp
arpl
arpl
xor
je
jp
push
ins
sbb
int
stos
mov
xor
out
dec
pop
xchg
jnp
or
pop
rcl
nop
or
mov
aad
cmp
in
in
mov
mov
mov
and
xor
jmp
stos
adc
vpcomb
fcmovnbe
push
cmp
sbb
iret
inc
loopne
movs
(bad)
jmp
jb
iret
neg
outs
ret
frstor
mov
pop
add
cmps
repz
or
lahf
dec
and
mov
gs
pushf
into
in
ds
aad
pop
push
lods
ins
aad
sbb
aaa
popf
fcmovne
jecxz
je
jae
(bad)
les
push
sbb
or
inc
enter
retf
repz
sti
cs
jg
sbb
jae
lods
dec
rcr
repz
pop
jnp
or
inc
popa
loop
daa
or
lods
out
jnp
cdq
inc
sti
out
outs
lahf
ins
pop
sbb
sahf
adc
inc
xor
jmp
jnp
in
mov
imul
dec
add
stos
out
lods
add
popf
call
xchg
int3
mov
cmp
pop
repz
inc
loop
arpl
mov
inc
jg
pop
jle
fdiv
and
xchg
sbb
les
add
jmp
adc
fsubr
push
(bad)
cmps
cmps
push
pop
(bad)
fimul
jge
adc
test
ins
icebp
mov
push
push
jne
jns
mov
mov
pushfw
test
xchg
xchg
mov
push
cmp
(bad)
or
gs
mov
inc
addr16
adc
push
ins
dec
mov
repz
xor
add
lock
sub
mov
ror
call
test
push
pop
sub
into
or
mov
add
adc
cli
loop
movs
mov
dec
neg
cli
fisub
hlt
dec
loope
jns
xchg
mov
movs
scas
inc
pop
xchg
mov
pop
pop
retf
sbb
cdq
jae
loop
out
in
pop
adc
add
fistp
push
xchg
out
fsubr
fcom
and
rol
xchg
pop
repz
sar
idiv
adc
js
fadd
inc
cmps
nop
ins
std
push
cmp
loop
bound
add
(bad)
mov
adc
mov
mov
(bad)
es
sar
push
jmp
push
sub
add
jno
outs
add
pop
test
out
inc
cmp
sti
(bad)
mov
enter
or
sub
add
mov
sub
pop
jo
xchg
loop
pop
mov
stos
dec
mov
jecxz
imul
cmp
sbb
ffreep
jle
(bad)
retf
in
sub
scas
adc
mov
inc
mov
sahf
xchg
or
cmc
ss
add
mov
int
gs
mov
xlat
or
xor
jge
test
jb
dec
xor
xlat
loope
loope
(bad)
dec
aaa
bound
ja
fild
fidiv
inc
mov
retf
xor
das
cmps
push
xor
inc
inc
xor
sbb
sbb
ror
lods
push
cli
sub
ffree
pusha
mov
or
ins
mov
aam
push
mov
push
mov
cmp
jmp
jo
pop
dec
mov
xor
dec
outs
xchg
xchg
xchg
jmp
mov
in
aam
adc
or
sub
xor
sti
pop
push
enter
jb
(bad)
fdivp
mov
xlat
test
inc
pop
iret
pop
cmp
div
xchg
stc
pusha
ror
out
shr
loopne
adc
add
out
cmp
xchg
ins
lahf
fiadd
loope
scas
das
sbb
repnz
sbb
icebp
push
cld
jecxz
jae
pop
stos
repnz
push
lea
pop
stos
inc
pusha
daa
retf
or
xor
sub
push
sub
add
ins
add
(bad)
mov
imul
popa
aam
mov
push
mov
add
stos
jno
arpl
in
cmps
sub
aam
or
cli
in
cmp
es
ins
xchg
cmc
js
or
aad
mov
jle
inc
cmp
mov
rol
or
push
mov
dec
or
lock
test
push
cmp
rol
leave
mov
repnz
pop
addr16
imul
dec
sbb
inc
mov
jnp
and
mov
sub
mul
adc
push
movs
xor
jns
sub
ja
xor
es
das
mov
imul
stos
push
das
ror
scas
aas
imul
ds
int
cmp
cli
or
pop
lea
scas
push
push
lds
test
or
fisttp
inc
pusha
out
fdiv
pop
sub
in
in
adc
aas
and
inc
test
pop
mov
or
add
jge
mov
inc
push
outs
mov
push
push
test
sub
(bad)
jecxz
jb
jnp
dec
pop
addr16
inc
lea
lods
jge
repnz
shl
add
cmp
lds
aad
aam
xchg
mov
jnp
push
call
(bad)
and
cdq
adc
dec
lods
sub
and
fisttp
pop
(bad)
fdivr
rcr
jb
in
cmp
aaa
outs
mov
push
xor
xlat
ins
fcomi
test
sub
out
pop
cdq
pop
pop
popf
xlat
cmp
pop
xor
push
sub
daa
lahf
iret
inc
jmp
and
xor
popf
cmp
push
or
cmc
xor
icebp
add
imul
sbb
sar
out
aam
mov
test
mov
cdq
and
movs
into
jno
scas
xsaveopt
jmp
repz
dec
retf
push
iret
(bad)
lahf
push
add
and
ret
sbb
sub
stos
or
cli
loopne
add
xor
nop
mov
fnsave
(bad)
mov
adc
data16
imul
dec
mov
inc
repnz
or
loop
pop
pop
and
and
cmp
or
(bad)
cmp
xor
sub
mov
pop
shr
or
and
pop
icebp
push
pop
(bad)
mov
xor
cmc
in
fadd
mov
in
xchg
push
cmp
mov
sbb
not
hlt
and
sub
cmc
dec
test
jbe
inc
fstp
push
sar
mov
punpckhwd
popf
int
(bad)
fidivr
pop
add
pop
or
jl
stos
fcmovnu
pop
aaa
rcl
test
or
and
cli
mov
retf
fidivr
shl
push
add
call
dec
dec
xchg
cmp
dec
ror
jmp
repz
jo
mov
sbb
mov
ret
and
aaa
aaa
pop
stc
dec
xchg
sbb
icebp
mov
ret
and
mov
cmc
clc
push
dec
sub
mov
outs
rcr
sahf
cmps
cmp
and
das
adc
(bad)
(bad)
mov
jl
cmp
in
popa
std
add
xchg
enter
xor
imul
mov
cld
mov
mov
leave
and
sbb
pop
loopne
sar
shr
push
test
pop
fidiv
jno
int
mov
push
div
rcl
aaa
std
add
popa
stos
ja
cmp
das
pusha
ret
mov
mov
xor
pop
cmp
and
fldenv
mov
xchg
lods
gs
(bad)
iret
sub
xchg
mov
jmp
repnz
xor
add
fscale
dec
cmp
pop
adc
ins
pop
pop
dec
outs
sar
gs
inc
mov
stc
mov
loope
mov
xor
sub
push
sub
dec
je
mov
adc
mov
adc
jge
jae
je
mov
jge
mov
(bad)
sti
sub
in
ficom
xchg
jecxz
pushf
cmp
adc
rol
push
aad
xchg
jae
and
xchg
jb
popa
mov
into
stos
loop
addr16
retf
xor
pop
mov
mov
(bad)
ss
mov
fs
dec
mov
out
mov
cmp
fsubr
or
adc
adc
scas
jo
sub
mov
fcomp
sbb
xor
dec
cmp
imul
xchg
hlt
pop
jno
xchg
xchg
rcl
popa
jge
cmp
jl
dec
js
ret
cmps
inc
sahf
push
fldenv
xchg
jne
in
add
addr16
jmp
pop
and
and
sub
std
push
xor
mov
cmps
mov
mov
add
or
fcom
sbb
js
je
cmp
and
imul
dec
dec
out
xchg
dec
mov
mov
mov
push
ins
or
in
jns
in
lea
fidiv
or
loop
mov
push
fisubr
dec
jae
pop
and
ins
(bad)
fst
cmp
div
inc
push
pop
mov
xlat
(bad)
mov
mov
pop
ret
xchg
adc
(bad)
les
xchg
cmp
or
popf
push
adc
mov
and
sub
leave
or
xor
into
cld
add
pop
div
add
adc
cmp
ins
mov
inc
or
fdiv
cmp
mov
and
retf
out
out
sbb
or
pop
rcr
shl
aad
mov
or
sbb
xor
hlt
xchg
jb
add
lods
shl
mov
fwait
mov
cdq
push
mov
xchg
or
daa
mov
loop
ins
lods
movs
inc
mov
dec
cmp
push
xor
shl
jle
and
mov
ins
jmp
out
aad
xor
push
fstp
mov
leave
bound
mov
and
inc
xor
addr16
ret
or
add
mov
js
(bad)
xor
outs
xchg
dec
loope
mov
sbb
shr
jo
addr16
test
fstp
nop
in
xchg
test
mov
repz
int
sbb
out
lock
ds
xlat
pop
xor
mov
push
mov
in
ret
in
push
and
push
xchg
bound
out
push
dec
in
les
bound
sub
and
aaa
adc
xchg
pusha
imul
daa
jb
or
inc
dec
fsub
push
inc
adc
jmp
out
sub
repz
add
out
(bad)
(bad)
cmp
retf
push
cmp
mov
jae
ss
and
fsubr
sbb
into
das
xor
cmp
mov
pop
add
cmps
aam
sub
jne
shr
adc
sub
fst
stc
dec
push
stos
test
cmp
adc
and
icebp
mov
cli
jns
jno
lahf
sahf
or
jmp
sbb
movs
rol
mov
push
hlt
mov
les
sbb
mov
mov
mov
inc
push
mov
out
seta
inc
lea
dec
int
movs
fistp
jno
popf
dec
lea
imul
in
push
cwde
sub
cmp
mov
in
jle
mov
(bad)
add
test
mov
cmp
xchg
pop
pop
pop
fcmove
lock
mov
loopne
mov
ret
out
mov
das
cmp
aas
jecxz
fcom
js
pop
jge
jnp
rcl
mov
int3
mov
and
clc
pop
xor
pop
jns
xor
fistp
shr
stos
int3
xor
mov
cld
sub
push
inc
push
retf
les
jmp
cmp
ja
fadd
out
inc
movs
je
movs
(bad)
out
mov
pop
jecxz
data16
nop
adc
loope
lock
mov
jne
inc
test
xchg
jl
imul
cs
xor
cld
push
test
lock
pushf
cmp
pop
enter
adc
cmc
outs
je
and
push
and
lods
pop
xchg
stc
fdiv
sub
adc
or
sbb
mov
and
push
cdq
in
jp
cld
outs
inc
enter
ss
adc
pop
dec
das
inc
mov
lods
ins
sbb
xor
popf
out
ficomp
nop
add
pop
jl
push
inc
mov
(bad)
push
stos
stos
jae
xchg
nop
out
pop
aam
and
(bad)
sahf
bound
out
jbe
lods
ror
(bad)
mov
fst
xor
mov
or
movs
xlat
xor
xor
ret
enter
mov
sti
and
loop
sbb
mov
pop
in
scas
fcomp
mov
repz
pop
xor
out
push
mov
fisttp
movs
scas
and
xchg
or
movs
mul
xlat
adc
adc
mov
pusha
jb
nop
mov
push
les
pop
jnp
test
push
mov
mov
pop
push
push
in
fmul
movs
sub
cmp
sti
dec
push
jae
inc
ins
or
jne
test
sbb
push
sbb
jl
cmp
int3
outs
stos
leave
daa
add
iret
inc
dec
or
cmp
je
stos
repnz
repnz
dec
dec
hlt
and
push
xchg
lahf
xor
jmp
xlat
or
xlat
mov
mov
sar
jp
test
adc
sbb
iret
imul
mov
dec
ret
sub
inc
mov
shr
push
cmps
inc
or
push
out
mov
shr
sbb
xchg
enter
mov
fwait
rcl
mov
inc
es
scas
or
mov
dec
call
and
pop
add
enter
pushf
cmp
scas
sbb
and
int3
inc
iret
repnz
fcomp
aad
xor
jnp
jmp
aaa
mov
xlat
daa
jo
sub
clc
imul
jmp
add
std
les
sbb
and
jl
aaa
pop
xor
jb
fdiv
cmp
mov
pop
(bad)
pop
fwait
mov
sub
(bad)
in
pop
or
push
adc
add
outs
pop
jmp
mov
fs
push
(bad)
jmp
and
cld
xor
out
inc
repz
jle
push
jne
enter
push
outs
(bad)
jne
jl
xchg
push
ds
pusha
or
test
jne
sub
repnz
push
mov
adc
jmp
mov
fsubr
daa
and
movs
xlat
ins
push
mov
iret
fdivr
xor
xchg
push
sbb
fs
in
repnz
and
loope
dec
fisub
mov
inc
adc
pop
xor
jmp
test
pop
cs
xchg
pop
imul
dec
push
cs
mov
and
xor
pop
dec
add
mov
cmp
lea
inc
and
mov
out
xor
ins
scas
xor
in
fidivr
push
pop
scas
scas
cs
jg
sub
jns
cmp
push
sbb
mov
push
or
es
xchg
in
xor
out
rcl
enter
xchg
xor
and
xor
rcr
xlat
dec
or
xlat
inc
xor
jg
(bad)
jmp
outs
pushf
or
adc
mov
cmp
add
push
push
xor
inc
and
add
sbb
jne
cs
jno
jle
jnp
mov
add
pop
(bad)
inc
movs
sar
jl
mov
cmp
jne
clc
push
lods
cmp
mov
dec
sub
mov
jl
lods
cli
sbb
movs
test
xor
outs
loopne
ins
pop
popa
in
mov
outs
fidiv
mov
adc
loop
xor
push
aad
int
adc
inc
lods
inc
cs
sbb
jmp
fcomp
cld
mov
dec
or
dec
push
xchg
lods
xchg
xchg
cmc
and
xchg
(bad)
imul
in
pop
mov
jo
imul
popf
sbb
es
(bad)
cmp
pop
inc
and
xor
jmp
jo
pop
and
packssdw
(bad)
mov
and
push
ja
ret
and
js
call
sar
inc
mov
mov
retf
sbb
ret
pop
pop
loop
ret
cld
dec
scas
xchg
cmp
dec
shl
pop
daa
(bad)
mov
xchg
xchg
mov
sbb
es
sub
out
aaa
fisubr
xchg
imul
js
jg
jbe
movs
aaa
inc
sbb
cli
ja
inc
add
outs
lods
and
cdq
in
retf
or
jmp
jp
dec
cs
sti
and
push
jns
mov
and
mov
int
aas
mov
inc
sub
jp
pop
adc
add
sbb
xchg
push
jne
pop
push
(bad)
ja
xchg
repz
and
jne
fiadd
(bad)
inc
fisttp
jae
push
mov
rol
xor
shr
lock
dec
mov
mov
aam
mov
mov
jnp
stos
or
ja
sar
xchg
imul
sub
lods
shl
mov
mov
dec
movs
push
jp
mov
pusha
push
push
dec
gs
and
xor
icebp
pop
xlat
ds
(bad)
test
mov
imul
dec
aad
jle
lahf
dec
imul
lea
mov
jmp
stc
shr
mov
add
lods
adc
es
push
nop
lahf
or
jne
inc
xor
mov
jle
in
dec
test
loop
movs
in
xlat
outs
cmp
(bad)
fnstcw
pop
retf
xor
ins
inc
inc
jle
pop
leave
mov
ja
adc
lea
(bad)
in
and
push
outs
lea
cmp
clc
dec
rcr
arpl
or
cdq
cmc
mov
adc
mov
dec
adc
inc
repnz
add
hlt
imul
dec
add
lock
xchg
cmp
jne
sti
dec
test
push
inc
dec
popa
mov
test
test
mov
inc
jmp
mov
jg
push
ins
or
inc
cmc
rol
lock
mov
in
inc
pusha
fsubr
fwait
xor
mov
shl
xor
jbe
sbb
xchg
xchg
or
test
mov
rcl
add
jle
and
repz
dec
mov
xchg
add
loope
aaa
mov
adc
je
jle
cmp
mov
push
movs
inc
jb
ins
dec
std
les
jp
fdivr
cwde
push
add
lahf
rcl
mov
adc
jge
inc
push
sti
in
pusha
clc
mov
popf
fadd
inc
clc
retf
mov
mov
mov
sub
sbb
(bad)
mov
push
cmp
jmp
add
mov
lds
mov
int3
inc
and
jge
aas
shl
push
test
xchg
outs
cwde
out
out
in
add
jns
pusha
mov
mov
push
bound
inc
jno
pop
cdq
mov
and
daa
xor
xor
mov
cmps
jmp
dec
xor
aad
xchg
dec
outs
ror
cmps
sar
test
cmps
xchg
mov
pusha
adc
push
leave
inc
jbe
sub
jae
aaa
push
call
into
add
inc
pop
into
xor
push
sahf
test
mov
xor
jmp
jne
out
xchg
in
ss
pop
cmps
repz
bnd
(bad)
jmp
dec
dec
sbb
ins
mov
pop
shr
ss
stc
xor
jmp
inc
jmp
mov
mov
ins
jp
lods
jmp
jmp
mov
in
xchg
and
rol
out
sub
and
mov
mov
sbb
data16
stc
mov
jl
imul
adc
jb
cmp
add
mov
push
add
in
pop
cld
dec
cmp
ret
loopne
scas
mov
push
mov
outs
and
add
sub
test
push
jp
in
pop
jp
add
jle
mov
pop
sbb
and
sub
mov
ja
leave
sar
dec
stos
stos
and
ins
shr
sbb
rcl
mov
pop
xor
xchg
mov
mov
mov
cmp
jecxz
mov
aas
push
out
xchg
(bad)
sti
data16
cdq
mov
es
cmps
add
test
push
cmps
xchg
enter
adc
jo
mov
sbb
add
test
push
and
(bad)
push
add
xchg
mov
inc
jmp
pop
stc
sub
xchg
and
and
sub
xor
cs
aam
cmp
mov
dec
jbe
cmp
or
out
sbb
std
jno
jns
dec
mov
jae
pop
iret
in
and
lds
je
add
(bad)
cli
add
mov
add
add
loopne
shr
jns
mov
dec
cs
jno
pop
neg
add
data16
int
adc
inc
mov
mov
mov
imul
inc
pop
jae
xchg
lds
add
jmp
add
pop
fistp
dec
das
cmp
mov
call
ja
mov
adc
nop
lea
xchg
jne
iret
add
jl
js
inc
mov
fld
dec
jno
cdq
mov
retf
rep
iret
repz
push
movs
lods
retf
and
cdq
js
icebp
dec
mov
push
xchg
xchg
pop
test
sbb
outs
fst
sub
outs
inc
jl
popa
dec
repnz
sub
cmp
cmp
add
push
sub
shl
(bad)
sbb
(bad)
xor
bound
out
pop
retf
ds
sub
sti
push
cmp
ja
push
xchg
adc
and
xchg
pushf
mov
jbe
enter
imul
jp
jmp
adc
sub
pusha
iret
and
sub
cmp
dec
call
fstp
jmp
mov
(bad)
mov
call
inc
cmps
lahf
cli
mov
and
in
shr
cmps
jmp
icebp
in
rcl
pushf
cmc
lods
mov
in
dec
add
rcr
sahf
jp
mov
fstp
imul
sub
add
pop
pop
ror
mov
std
fsub
lods
out
fs
sub
push
cmp
test
mov
pop
out
xor
in
ins
test
mov
stos
lea
xlat
ins
shl
sar
gs
sub
mov
xor
jecxz
mov
cmp
xor
scas
and
jbe
and
mov
adc
xlat
dec
xor
push
lock
and
fs
pop
mov
leave
aas
dec
adc
sbb
pop
dec
sub
pop
aam
(bad)
rcr
mov
dec
jmp
xchg
mov
imul
jo
add
inc
mov
jle
and
(bad)
cmc
mov
stos
call
mov
pop
bound
add
or
test
and
push
mov
sub
mov
mov
cli
cs
mov
int
test
sbb
cmp
ins
mov
lea
inc
cmp
xor
dec
sbb
mov
pop
stos
add
and
cmp
add
iret
cmp
mov
pop
test
into
sbb
retf
fnstenv
add
repnz
in
xor
jp
adc
mov
adc
std
adc
xchg
inc
jl
push
sbb
cmp
dec
xchg
xchg
mov
scas
push
or
cmc
lea
gs
neg
mov
mov
cli
sbb
xchg
loop
xchg
aaa
ins
fnsave
pop
ret
lods
mov
in
adc
(bad)
dec
scas
test
fmul
adc
fld
pop
jp
ret
and
add
adc
xor
mov
xchg
mov
cli
mov
js
dec
aas
mov
not
nop
mov
mov
add
pop
aad
cli
push
lea
idiv
sti
and
cdq
jecxz
retf
cs
shl
lock
aas
push
enter
sub
cmp
iret
(bad)
fisub
das
stos
mov
push
jge
jge
pushf
(bad)
int
(bad)
rcl
xlat
mov
add
(bad)
sar
mov
aad
jecxz
fs
dec
mov
inc
mov
inc
pusha
sar
cdq
ret
jle
popa
dec
inc
imul
js
test
std
xor
retf
jge
add
mov
push
cmp
mov
mov
in
pop
imul
mov
push
jge
movs
inc
add
push
js
mov
dec
adc
dec
mov
les
or
data16
popf
fadd
not
push
mov
sub
dec
jecxz
outs
push
add
jb
rol
gs
or
xor
pusha
push
dec
push
dec
cmp
jmp
(bad)
push
mul
add
pop
and
loope
mov
dec
repz
mov
retf
mov
sub
ins
and
jo
lea
cli
mov
cli
mov
hlt
jno
nop
fwait
mov
add
push
stos
lds
inc
jno
rol
(bad)
ja
cmps
sti
adc
jl
xchg
sti
popf
hlt
lahf
movs
es
cmp
or
jp
cmp
inc
mov
fdiv
and
push
fsubr
(bad)
(bad)
push
push
retf
bnd
adc
nop
push
mov
push
inc
cli
nop
sbb
pop
(bad)
push
mov
test
je
push
xchg
push
out
or
add
rcr
inc
xor
or
mov
cs
fist
aaa
imul
rcl
scas
int
ds
jmp
repz
lock
pop
stc
div
enter
adc
cmp
xor
movs
stos
hlt
ins
xchg
jg
mov
dec
inc
lods
sub
and
add
dec
pop
jl
dec
mov
jl
fnstsw
mov
scas
sub
out
sub
call
out
adc
dec
fstp
adc
add
pop
fstp
aaa
mov
pusha
and
nop
jmp
idiv
std
jecxz
cmp
jne
mov
add
push
push
movs
fld
sbb
pop
ret
jmp
adc
mov
sar
pop
add
ins
and
pop
sar
dec
mov
ins
mov
dec
fwait
jecxz
out
push
stc
repnz
shr
mov
mov
movs
push
call
aas
cmp
xchg
jo
push
popf
(bad)
fadd
push
icebp
push
mov
in
aaa
scas
cmp
shl
adc
inc
and
dec
bound
dec
xor
jno
sar
mov
sbb
das
and
in
ret
fnstcw
dec
xchg
cdq
and
pop
cmp
adc
jmp
dec
adc
push
cmp
pushf
pop
fisttp
fcomp
(bad)
daa
sahf
mov
(bad)
lods
mov
adc
push
arpl
or
xchg
xchg
inc
fsub
lods
mov
cmp
shr
into
adc
push
fnstcw
and
add
cmps
test
push
mov
repnz
mov
mov
ins
push
xor
mov
inc
popf
xlat
sahf
mov
mov
scas
and
shl
xor
adc
or
sbb
and
stos
fsub
std
jo
repnz
daa
pushf
popa
xor
dec
cmp
enter
std
fidivr
inc
enter
jmp
or
lods
add
cmp
in
das
jecxz
mov
inc
jmp
cmp
aas
mov
clc
pop
pop
scas
loope
and
lods
jo
sub
mov
stos
mov
shr
mov
adc
loop
add
jge
out
out
loopne
pop
cmp
out
push
push
ret
out
sbb
cmc
rcl
dec
pop
enter
sub
jmp
fldcw
and
imul
xlat
mov
pop
push
push
outs
sub
and
(bad)
jge
mov
outs
in
ss
clc
mov
jo
pop
push
mov
dec
adc
std
mov
pop
es
aam
add
cs
sar
sbb
inc
mov
mov
in
into
mov
int
mov
leave
out
push
pop
inc
test
loop
and
inc
rcr
fild
cmps
ret
cmp
call
(bad)
fcom
adc
sbb
in
ficom
mov
fldenv
stc
pushf
ins
add
movs
mov
xchg
xchg
test
test
rcr
cli
jge
dec
cli
in
dec
sbb
jle
pop
(bad)
mov
add
jno
jb
or
aaa
xor
mov
js
sub
cmc
jo
mov
adc
mov
shl
fwait
push
data16
rcr
jmp
mov
fst
cli
dec
push
stos
aad
fsubr
in
pop
es
push
fs
pop
push
das
loopne
lods
pop
mov
sub
adc
mov
mov
loop
mul
ds
mov
(bad)
lds
dec
push
movs
push
mov
gs
jae
pop
fwait
mov
pop
push
stc
add
jns
adc
lock
adc
aaa
jae
sti
or
mov
xor
and
and
(bad)
outs
scas
sbb
jno
rol
push
imul
dec
jnp
add
xor
shl
pop
mov
imul
mov
fild
pop
das
jbe
rcl
mov
ss
cmc
mov
mov
jmp
pop
push
jmp
(bad)
in
mov
test
mov
outs
inc
jge
outs
mov
mov
cwde
xchg
jmp
in
popf
shl
dec
mov
not
gs
push
ret
or
bound
sti
movs
mov
jno
push
push
nop
pop
shl
push
xchg
jae
pop
xor
add
ror
jb
sub
push
and
dec
cmp
sti
shl
pushf
sbb
cld
jg
jno
sbb
mov
out
jg
or
inc
neg
retf
pusha
mov
jge
cmp
test
dec
sbb
(bad)
sub
daa
xor
(bad)
leave
movs
inc
in
mov
enter
js
or
in
fnstsw
test
scas
call
pushf
mov
out
icebp
sub
add
jmp
push
test
popf
xchg
and
mov
frstor
mov
inc
lahf
and
xchg
aaa
fwait
pop
push
fwait
outs
jp
fsub
xchg
ds
inc
push
jo
shl
mov
push
sub
ss
jbe
(bad)
cld
sub
repz
jge
push
add
jle
stc
jnp
in
loope
test
iret
pop
sub
dec
inc
inc
js
in
mov
(bad)
movs
mov
movs
add
lock
jo
push
std
pop
out
jns
jmp
mov
rol
xchg
sub
mov
xor
call
out
aaa
out
ret
int3
stos
xor
imul
add
or
lock
test
mov
lods
xor
or
loopne
out
jo
jmp
sbb
sahf
jmp
outs
jle
or
sahf
xchg
pop
and
jge
shl
lock
adc
retf
sub
push
cmp
enter
mov
out
std
mov
clc
ret
out
sub
mov
xor
scas
or
loopne
dec
sub
call
es
jmp
std
icebp
int3
loope
and
fimul
cmp
add
jno
push
jp
jbe
push
pop
repz
xchg
jnp
out
clc
sub
dec
loopne
jg
dec
xor
mov
sub
aad
in
jne
jbe
xlat
call
call
sub
lea
pop
(bad)
pop
addr16
mov
loope
mov
lock
sbb
int3
inc
inc
dec
mov
mov
sub
nop
out
xchg
push
icebp
ins
jp
aad
inc
adc
retf
repnz
push
or
mov
adc
mov
mov
xchg
ror
mov
xchg
icebp
dec
mov
data16
xor
retf
cmp
adc
arpl
jne
cmp
and
sbb
psadbw
sub
jge
sub
push
jno
or
and
mov
inc
push
in
jo
inc
jmp
dec
xor
mov
cli
adc
mov
adc
push
mov
cmp
outs
jmp
mov
mov
sub
mov
(bad)
call
fild
sahf
or
xor
lods
outs
pop
xor
addr16
aas
in
dec
xchg
cmp
sbb
lds
and
jecxz
sub
ror
xor
inc
pop
test
lahf
or
sahf
sub
xor
in
aas
stos
les
movs
jle
ret
mov
xor
cmp
adc
or
dec
fs
mov
test
sar
cli
(bad)
arpl
jb
call
sub
in
rep
xor
dec
sub
mov
ss
inc
dec
mov
xor
cwde
add
arpl
mov
xor
inc
ror
cdq
iret
mov
xchg
js
bound
shr
cwde
push
movmskps
inc
dec
sbb
fimul
psrlq
xor
xlat
addr16
aaa
inc
enter
call
jnp
sbb
je
fs
push
sub
fmul
retf
xchg
add
mov
out
cmps
xchg
sub
add
jo
cmc
jno
add
icebp
icebp
inc
mov
dec
or
push
scas
or
mov
lods
pop
rcr
xchg
imul
xchg
iret
gs
jns
sbb
mov
sar
adc
pop
loop
pop
(bad)
test
and
mov
cs
jnp
cld
pop
scas
sub
jns
add
mov
mov
xchg
bound
lea
cmp
dec
inc
xchg
push
adc
loope
and
dec
ins
fwait
mov
cmp
jo
bound
or
inc
mov
xchg
push
jge
stos
mov
repnz
push
pusha
fsub
retf
enter
pop
sti
cmp
ds
pop
(bad)
jmp
out
aam
aas
ror
mov
addr16
pusha
mov
mov
in
retf
rcl
inc
into
mov
adc
inc
std
sbb
ror
push
es
je
add
mov
cs
into
xor
dec
mov
loop
add
jp
mov
inc
pop
xor
or
pop
sub
cmp
xchg
xchg
in
mov
in
das
adc
fst
sbb
mov
test
cmp
xchg
cli
jl
pop
cmp
jnp
pop
lods
out
(bad)
loope
xor
push
jnp
sbb
dec
inc
xor
adc
pop
cmp
adc
xchg
out
outs
adc
dec
int3
js
xchg
add
sbb
ins
adc
fadd
jg
loop
rcr
pop
rcr
cmps
retf
stos
lds
xchg
xchg
int3
in
adc
dec
and
pop
icebp
lock
sar
adc
lahf
sub
adc
adc
xlat
inc
mov
and
neg
mov
xor
adc
bound
sub
shl
jmp
pop
scas
sbb
xchg
dec
xor
cmps
xchg
or
imul
xlat
(bad)
sbb
cmp
xor
sbb
mov
imul
sbb
xor
dec
and
ror
mov
shr
rol
into
jmp
lods
int3
enter
mov
rol
push
pop
push
cmp
cmp
inc
xchg
mov
cmp
and
push
pop
add
dec
mov
fs
mov
cmp
es
pop
cmp
addr16
scas
add
inc
jmp
retf
sahf
mov
call
jg
xchg
and
dec
mov
jo
popa
inc
sub
ror
outs
mov
mov
jmp
dec
push
mov
in
add
test
in
leave
inc
retf
jmp
inc
and
in
adc
and
jne
cmp
pop
cmps
lahf
in
pop
mov
push
xor
mov
or
test
stc
sbb
xor
test
push
mov
inc
push
pushf
outs
in
cli
mov
mov
jae
fdivr
sar
scas
adc
adc
xchg
xor
fprem
pop
push
mov
shl
jnp
jg
repz
popf
mov
pushf
shr
xchg
dec
push
push
loop
clc
shr
(bad)
mov
(bad)
mov
mov
lds
mov
cmp
vmovshdup
jl
ret
hlt
das
add
and
xchg
js
cs
test
call
cmp
cmc
inc
ret
and
(bad)
int3
jb
mov
fs
mov
and
push
enter
mov
mov
sub
jl
jmp
int
aam
into
in
rcl
dec
xlat
mov
pop
mov
add
add
xchg
xchg
pushf
mov
out
nop
bound
push
add
cmp
mov
sti
jno
dec
jp
scas
sbb
mov
cwde
jl
gs
sub
jle
movs
cmps
cmps
mov
stos
pop
mov
imul
test
imul
and
jne
icebp
xchg
or
add
shl
shl
(bad)
cmp
ja
adc
jge
fisubr
dec
in
mov
bound
mov
pop
push
pop
xchg
test
xchg
int3
sub
imul
arpl
scas
lds
push
push
jne
jge
dec
fnstenv
in
iret
in
adc
retf
out
push
cmp
aad
xchg
jns
fist
repnz
jmp
in
jae
test
loope
pop
xlat
push
jo
pop
xchg
inc
mov
mov
mov
je
shl
and
or
into
fprem1
imul
adc
fmul
stc
add
push
out
sahf
ins
ins
mov
xchg
test
mov
scas
sbb
ss
sub
push
inc
inc
xor
(bad)
mov
pop
aas
mov
dec
push
dec
(bad)
rcr
div
dec
in
add
fistp
popf
inc
add
dec
sbb
test
and
lock
mov
cmp
push
cmp
inc
inc
cs
out
push
dec
inc
or
popa
arpl
retf
xchg
push
bound
sbb
jo
fmulp
gs
daa
scas
xor
les
jl
ret
inc
or
ret
jmp
dec
pop
push
dec
and
loope
cmp
and
cli
or
fwait
dec
lds
jae
loop
pushf
mov
into
in
mov
or
adc
mov
jns
movs
mov
daa
xchg
(bad)
scas
dec
(bad)
xchg
shl
mov
push
push
and
les
fistp
out
cli
jo
cs
iret
pop
shl
in
sub
int3
mov
dec
gs
clc
cmps
mov
cmps
loopne
jae
out
mul
adc
pop
test
xor
pusha
mov
mov
xchg
mov
fld
inc
xlat
ret
dec
xchg
bound
mov
mov
stos
mov
out
or
or
in
and
add
add
fdiv
sar
mov
test
and
mov
inc
xchg
jmp
scas
add
add
(bad)
mov
fwait
(bad)
pop
test
jmp
loopne
push
jmp
add
push
inc
je
sub
push
cdq
shld
adc
xchg
int
pop
jo
js
fs
fsubrp
fisub
mov
(bad)
out
rol
jecxz
mov
push
hlt
adc
mov
pop
inc
dec
ss
mov
jle
(bad)
outs
mov
sub
imul
push
dec
sbb
std
icebp
add
jmp
fs
xor
lods
or
in
jmp
fsub
les
outs
sar
fs
shl
inc
adc
loope
dec
xchg
lods
lahf
xor
sahf
(bad)
mov
in
data16
shr
cs
scas
mov
retf
mov
push
psubq
xchg
xchg
imul
sahf
sub
sbb
in
and
pop
push
adc
cdq
jle
and
push
or
and
jp
sbb
push
xor
in
fs
mov
sub
retf
js
mov
out
push
aad
stc
jns
shl
jmp
retf
test
xchg
test
sub
sub
adc
xchg
jb
fldenv
out
jns
scas
fisub
mov
gs
xor
sub
bswap
sub
or
aam
dec
int
push
ret
fcomp
push
add
sbb
dec
pop
push
repnz
push
cmps
mov
jbe
cmp
dec
ja
xchg
fs
ds
mov
ror
loope
ss
std
stos
movs
int
dec
cmp
(bad)
push
aas
mov
test
pop
jnp
out
cmp
adc
xchg
je
jb
retf
add
add
xor
mov
push
jno
pop
and
test
fldpi
nop
push
bound
adc
xchg
or
and
lock
hlt
sahf
test
and
xchg
mov
fwait
punpckhwd
jo
mov
adc
shl
xchg
ins
ret
xchg
xchg
aam
call
pusha
int3
aaa
cmc
sti
pop
mov
mov
adc
add
mov
adc
sbb
mov
pop
out
mov
call
outs
loope
pop
in
out
jbe
sub
leave
sub
adc
mov
mov
jg
adc
fdivr
adc
or
xor
jnp
mov
cmp
(bad)
aas
cmps
sbb
aaa
jmp
jns
xor
push
inc
(bad)
je
push
sbb
push
and
and
je
stos
pushf
call
ss
sti
add
add
push
xlat
icebp
out
adc
or
or
sub
data16
ror
adc
xor
lds
fst
inc
das
lods
push
rcr
and
or
mov
popf
rcr
push
in
cli
xlat
or
jmp
test
popa
mov
ins
mov
sahf
icebp
mov
xor
push
retf
push
adc
das
fisubr
xchg
inc
and
call
call
out
dec
out
jmp
std
faddp
and
mov
xor
and
imul
aam
mov
clc
iret
imul
pop
ins
fisttp
push
sbb
nop
push
cmp
inc
stos
fimul
mov
adc
fadd
pop
sub
retf
jge
daa
movs
(bad)
in
lods
pusha
repnz
(bad)
test
ret
jb
cs
pusha
clc
out
movs
scas
sub
jne
ret
popf
dec
call
or
cmps
and
nop
xlat
push
add
pop
sbb
or
push
dec
cdq
mov
xchg
lahf
repnz
sbb
(bad)
stos
sub
jae
dec
xor
jnp
sub
xchg
stc
sbb
std
dec
repz
cmp
lods
xor
mov
mov
mov
xchg
push
aad
jns
je
test
sub
push
add
pusha
push
cwde
std
enter
outs
in
and
aas
retf
outs
mov
fs
mov
(bad)
mov
cmp
sahf
jge
jge
in
jmp
sbb
push
mov
std
jnp
lods
xor
repz
sbb
adc
pop
pushf
leave
shr
(bad)
call
xor
in
(bad)
jmp
dec
pop
push
outs
lods
les
jle
lahf
cmp
js
push
shl
stc
cmp
repnz
xor
mov
ins
fidivr
scas
jmp
push
sub
push
mov
xlat
xor
mul
pushf
jmp
test
adc
add
sub
xchg
mov
stos
adc
loop
and
out
imul
inc
or
inc
mov
jmp
jecxz
jo
jb
in
call
in
in
push
mov
clc
add
xchg
add
lds
aad
lahf
leave
sar
mov
imul
xor
fucompp
dec
outs
sub
xor
(bad)
movs
cmp
fild
out
cmps
out
pop
das
xchg
imul
das
dec
jecxz
or
mov
jae
dec
es
ds
ins
ja
imul
xor
fiadd
sub
xchg
inc
pushf
mov
xchg
out
inc
mov
jno
adc
cdq
adc
pop
fcomp
dec
out
popa
add
mov
jle
movs
scas
dec
jp
(bad)
jge
push
add
dec
popa
add
xchg
mov
gs
js
icebp
cli
fs
or
sbb
pop
not
jno
adc
jg
push
or
jo
jl
push
pop
loopne
mov
repnz
push
aaa
mov
cmp
push
call
cmc
addr16
outs
(bad)
jo
push
sbb
inc
daa
aaa
pop
repnz
imul
int3
push
fwait
dec
mov
imul
je
mov
idiv
out
pop
add
rcl
sbb
repnz
and
mov
mov
jl
fsub
sub
pushf
mov
ret
sar
xchg
call
inc
shr
retf
xchg
fiadd
jmp
sti
mov
pop
sub
sub
push
das
loope
push
add
in
pusha
imul
adc
pop
mov
lea
js
and
mov
mov
push
stos
out
fsubr
sahf
xor
xor
mov
aaa
xor
and
pop
stc
add
dec
push
pop
inc
imul
and
out
jno
les
(bad)
push
shr
sub
sbb
cmp
mov
mov
mov
xor
cmp
xlat
sahf
sub
or
mov
dec
mov
sbb
cwde
jae
and
aad
enter
adc
xchg
into
lea
ret
ja
cmc
fdiv
es
ds
xchg
data16
xor
or
outs
cs
clc
mov
cdq
jae
sub
ins
frstor
lods
xor
or
jle
mov
jno
ret
movs
or
aas
push
xor
and
(bad)
ins
out
push
pop
jmp
mov
adc
lods
mov
adc
mov
mov
jne
retf
icebp
mov
loop
adc
xor
mov
outs
cmp
adc
xor
cmp
aam
(bad)
jmp
push
std
jecxz
jne
inc
cmp
stos
mov
cmp
push
cwde
lahf
lds
addr16
and
mov
adc
xlat
retf
(bad)
mov
sub
inc
loopne
cmps
bound
sti
mov
sub
pop
push
dec
jg
jge
stc
add
mov
sub
mov
push
out
int3
xchg
push
mov
sbb
sbb
movs
or
test
push
aaa
mov
add
test
mov
push
dec
adc
mov
dec
in
iret
pop
es
cld
sahf
cmps
icebp
in
test
loopne
push
pop
sub
rcl
or
(bad)
sar
sbb
push
jg
jbe
dec
inc
clc
xor
xchg
cmps
mov
test
mov
or
retf
push
jle
and
xchg
mov
mov
pop
jae
fnstenv
pop
push
movs
mov
push
mov
in
sar
xchg
(bad)
mov
push
clc
or
dec
pop
dec
sub
ins
xchg
inc
and
xchg
dec
xor
loope
scas
jns
ret
cmps
std
lock
pop
ret
cwde
stos
mov
lods
int3
jo
sti
xchg
aad
aaa
call
push
mov
aas
(bad)
stos
push
rcl
or
jmp
fnstcw
lahf
int3
test
jae
jno
in
dec
lea
fdiv
mov
push
rol
push
inc
int
arpl
sub
mov
jle
jecxz
adc
sub
push
mov
push
setae
or
into
shl
int3
or
in
(bad)
enter
movs
mov
inc
es
cdq
pop
imul
imul
sub
wrmsr
les
cmp
add
loop
jae
jp
inc
sub
xchg
pop
xchg
retf
repnz
retf
test
mov
retf
bound
iret
sbb
push
mov
fisttp
scas
retf
push
jns
outs
lahf
(bad)
cmps
inc
push
data16
and
cmps
jecxz
div
(bad)
jb
inc
dec
(bad)
push
scas
mov
(bad)
fnstcw
lds
or
xchg
loopne
into
(bad)
xchg
imul
push
inc
add
adc
push
stos
pushf
(bad)
lods
adc
jo
cli
pusha
stos
cmp
and
das
sar
popa
movs
iret
xchg
lock
cmps
ficom
ret
fstp
in
mov
pop
add
add
jmp
imul
imul
mov
rcl
bound
cwde
dec
jb
push
push
je
pop
or
mov
dec
adc
and
dec
in
push
push
adc
iret
fnstsw
mul
or
xchg
daa
dec
arpl
fcmovu
mov
sbb
sub
movs
and
mov
push
ret
ins
rep
scas
push
stos
sbb
and
popa
jbe
es
push
idiv
hlt
push
push
in
add
or
ss
inc
lods
popa
push
inc
mul
lahf
xor
xor
das
xor
pop
pop
clc
das
repnz
lea
mov
mov
fistp
jb
mov
es
mov
(bad)
iret
jmp
sub
popa
cmps
retf
dec
mov
inc
sub
dec
xor
cdq
es
pop
dec
pop
jb
lea
inc
ror
rcr
dec
fistp
dec
cmp
leave
sbb
pop
xor
inc
jmp
pushf
push
aaa
out
jg
sbb
int3
pop
stos
xchg
jns
or
addr16
icebp
mov
adc
imul
push
nop
cmp
jmp
xor
pop
or
jne
push
popf
xor
fist
retf
adc
not
dec
ror
stos
loopne
push
push
out
js
daa
pop
mov
cmps
adc
sub
leave
xor
dec
out
sub
sar
mov
test
jae
scas
pusha
mov
dec
int3
pop
fiadd
(bad)
sub
adc
popf
adc
mov
xchg
inc
pop
out
(bad)
adc
push
pop
idiv
mov
(bad)
jl
sar
or
adc
push
jb
pop
sub
stc
xor
fs
es
hlt
shl
sbb
mov
ret
xor
lea
mov
retf
sub
shl
mov
outs
mov
movs
rol
adc
jecxz
adc
cld
pop
loop
add
mov
es
sub
mov
cmp
ret
add
es
dec
pop
pop
add
cmp
cmp
inc
shr
mov
es
daa
clc
dec
mov
and
ret
(bad)
jge
rcr
sub
xor
and
or
pop
sar
outs
(bad)
push
add
sbb
pop
xchg
lea
sbb
sbb
pop
sar
push
jno
mov
sbb
inc
jecxz
sub
jo
shld
sbb
(bad)
(bad)
mov
mov
push
out
icebp
pusha
jns
xor
(bad)
xchg
adc
aaa
sub
ins
sub
icebp
retf
jnp
push
push
mov
shl
idiv
repnz
xchg
inc
mov
inc
lock
(bad)
fist
rcr
mov
(bad)
imul
mov
push
(bad)
ja
xor
repz
fs
(bad)
and
dec
mov
cmps
out
loop
or
ja
mov
mov
ins
fst
aaa
dec
das
push
(bad)
pmaddwd
and
(bad)
es
inc
pop
or
jnp
mov
fwait
es
add
xor
jne
(bad)
mov
cmp
xor
push
xor
push
int3
push
mov
je
test
dec
add
xor
jmp
imul
lock
pushf
push
inc
sbb
fldcw
push
imul
pushf
jmp
imul
jo
pop
retf
fs
push
ret
std
xor
pop
inc
xchg
test
int
(bad)
aas
adc
mov
dec
jmp
sbb
movs
loopne
bound
push
mov
aad
pushw
mov
stos
dec
ds
daa
aas
nop
(bad)
fdiv
mov
fdivrp
icebp
or
shr
lods
icebp
js
ret
push
into
mov
dec
mov
dec
ror
xor
std
pusha
xchg
inc
sahf
mov
pop
test
popf
mov
ins
inc
inc
lds
mov
dec
xchg
push
aas
adc
dec
ins
push
iret
(bad)
loop
outs
out
test
cmps
mov
push
outs
xchg
je
xlat
jne
pushf
sub
ret
mov
ret
and
dec
or
aad
dec
out
pop
adc
inc
int
stos
adc
jg
sub
je
fwait
jo
inc
pop
in
and
lods
fisttp
enter
push
retf
mov
ins
xchg
into
bound
dec
fwait
out
pop
sti
aas
lds
cmp
inc
and
div
ins
cmps
sub
inc
xchg
bound
call
lods
rep
iret
mov
mov
jp
je
pop
stos
(bad)
ins
popa
repnz
push
mov
jae
mov
jae
add
aam
(bad)
test
xor
jbe
dec
or
je
stos
out
dec
sbb
fmulp
cmp
jno
fchs
sbb
mov
mov
dec
shr
stc
test
dec
aam
pop
outs
mov
cmp
jmp
sub
hlt
xor
(bad)
mov
inc
jae
lahf
push
shl
mov
pop
mov
sub
inc
pop
into
les
sti
push
enter
jo
daa
xlat
xor
hlt
aam
push
sbb
js
jge
out
cmc
inc
(bad)
sbb
test
mov
clc
repnz
mov
test
popa
dec
mov
neg
dec
adc
sbb
bound
outs
dec
mov
ins
push
xchg
or
mov
push
sub
lds
or
sub
mov
and
jno
call
cld
pop
lea
push
xor
idiv
rcr
dec
cmp
mov
pop
add
sub
push
mov
outs
jo
cmc
sar
mov
mov
cld
cdq
lods
push
ror
fs
xchg
out
gs
dec
adc
jmp
mov
cmp
rcr
jg
pop
fcom
ja
leave
nop
dec
icebp
mov
repnz
stc
test
cs
push
xchg
jo
and
sub
retf
call
mov
jg
gs
dec
stc
pop
nop
inc
aas
out
or
jp
aaa
or
movs
push
fdivrp
cmps
dec
sbb
cmp
adc
cmp
sbb
jmp
push
push
pop
mov
fdiv
lahf
enter
addr16
retf
ret
stos
add
inc
cs
add
bound
push
arpl
outs
shr
mov
inc
dec
xor
daa
pop
inc
jl
in
addr16
xchg
sub
stos
mov
jg
xchg
pop
xlat
pop
daa
cmps
jl
test
(bad)
daa
and
ss
jb
stos
(bad)
pusha
mov
sbb
mov
stc
jno
aas
out
pop
fst
push
and
aaa
pop
add
fwait
in
inc
or
inc
xchg
jle
imul
sbb
in
cdq
shl
sub
jbe
cmp
js
test
pop
fwait
aad
std
fwait
sub
int3
ds
shl
int3
inc
push
and
mov
aas
(bad)
push
add
scas
lods
rol
in
clc
imul
mov
lock
imul
sub
mov
or
and
cmp
sub
sbb
les
jae
mov
stc
pop
mov
xor
lahf
rcr
out
in
je
stos
clc
ss
mov
sbb
cmp
frstor
mov
mov
add
ficom
mov
sahf
imul
hlt
xchg
out
popa
jmp
pop
or
outs
call
das
imul
or
(bad)
gs
push
sbb
call
mov
jp
scas
mov
xlat
add
cmp
xor
idiv
sub
xor
jg
ja
dec
mov
and
pusha
call
xor
mov
pop
arpl
adc
jbe
inc
and
retf
dec
cmp
jae
push
mov
sbb
add
js
loope
stos
retf
xor
jecxz
fcmovb
shl
push
inc
xchg
repz
ficomp
xor
adc
aaa
xchg
mov
xchg
ins
add
or
xor
imul
rcl
and
je
pop
test
mov
nop
sti
stc
sub
in
dec
xchg
cmps
fidivr
sbb
jg
fimul
mov
push
xor
sub
jecxz
cmps
cmp
fnstsw
movs
mov
adc
inc
and
pop
inc
push
xor
and
push
inc
jmp
(bad)
pop
sti
cmp
aad
jbe
into
outs
inc
scas
pop
mov
mov
lods
cmps
inc
pop
cld
jmp
pop
arpl
gs
mov
mov
(bad)
jmp
push
jp
push
dec
ret
call
cli
(bad)
dec
xor
inc
sar
push
cdq
dec
pop
xchg
inc
dec
shl
inc
add
jmp
jp
mov
mov
add
aad
push
mov
xchg
shl
cwde
sub
test
stos
mov
sahf
mov
lahf
sub
fldenv
mov
mov
inc
jle
xchg
adc
in
xchg
or
(bad)
push
and
retf
cld
fucomi
pushf
hlt
mov
dec
mov
fwait
enter
into
jle
push
cmp
mov
lahf
inc
int
(bad)
fdiv
xchg
inc
sbb
(bad)
arpl
call
mov
les
outs
jnp
cmps
xchg
nop
cmp
shr
pop
and
xchg
retf
mov
(bad)
outs
inc
popf
push
jbe
mov
add
retf
xchg
or
add
rol
fsub
pop
retf
push
xor
jne
ins
jmp
mov
or
pop
cmp
cmp
cmp
arpl
movs
cmp
mov
sub
cmps
mov
mov
daa
mov
sbb
out
dec
enter
dec
nop
(bad)
mov
frstor
sbb
pop
dec
mov
cmps
lahf
addr16
dec
stos
xchg
cs
xor
loopne
in
jns
ret
(bad)
xchg
lods
jns
lds
je
outs
mov
pop
and
push
arpl
enter
jae
fisubr
push
xchg
inc
dec
out
mov
je
add
sahf
loope
test
inc
(bad)
out
dec
cmp
and
push
test
stos
mov
push
jns
pushf
adc
and
mov
sahf
icebp
jns
xchg
call
mov
popa
loop
mov
imul
ret
xchg
xlat
adc
sahf
adc
jg
lods
fstp
loope
mov
xchg
cmps
pop
call
jecxz
mov
pusha
sub
xchg
mov
call
mov
inc
mov
aad
mov
add
das
in
in
fidivr
push
popa
repnz
sbb
aad
mov
and
jmp
pop
dec
sbb
enter
cwde
bound
in
xchg
clc
mov
into
xchg
loopne
stc
push
or
add
loope
imul
mov
cmc
in
pop
js
xchg
dec
popf
aam
cmp
cmps
popf
mov
mov
xchg
push
mov
test
ins
cmc
pop
mov
pop
addr16
int
cmp
sbb
add
and
xor
stos
jp
mov
clc
out
out
jge
pop
emms
dec
mov
lods
loopne
jecxz
loop
and
mov
jne
retf
add
shr
mov
jp
lods
scas
xchg
repz
cmc
mov
jmp
outs
ins
xchg
cmps
call
imul
add
ret
outs
ret
sbb
lock
not
and
test
mov
repnz
jne
(bad)
rcr
test
push
sbb
and
inc
jl
(bad)
and
sbb
inc
stos
xchg
fcomp
rcl
repz
dec
pop
and
pop
jae
out
push
or
sub
mov
lds
imul
test
sub
call
pop
(bad)
xor
mov
call
xchg
lods
arpl
retf
rol
nop
out
cs
xlat
jmp
das
inc
mov
mov
jmp
mov
icebp
adc
cmp
cmp
push
loop
sub
adc
jl
iret
push
lods
jns
test
popa
jl
or
fmul
in
jmp
lea
movs
das
mov
xor
out
push
repnz
fmulp
(bad)
inc
pop
or
iret
inc
(bad)
test
sub
add
div
(bad)
mov
(bad)
aas
jmp
jg
xor
out
adc
and
out
test
jge
mov
rcl
repnz
mov
stc
inc
push
in
icebp
mov
add
mov
sub
mov
shr
xchg
xadd
icebp
or
in
(bad)
fisttp
jle
repnz
hlt
xlat
push
or
out
(bad)
xchg
or
ret
pop
shl
pushf
xor
push
aaa
outs
sub
(bad)
adc
cmp
xchg
arpl
jnp
xor
ror
call
pop
daa
loopne
(bad)
fst
call
lods
dec
cmp
jbe
mov
out
ins
ja
inc
dec
cmp
(bad)
adc
ins
push
mov
jo
push
fcom
cmp
aaa
jge
mov
dec
push
xor
add
add
jnp
dec
dec
sahf
fwait
jns
call
lods
jb
or
outs
js
jae
mov
inc
jo
mov
nop
cmp
cmp
inc
sub
nop
mov
xor
ss
clc
push
leave
lahf
movs
dec
inc
hlt
fstp
cmp
data16
xchg
inc
retf
cs
test
or
gs
xchg
rol
pusha
mov
mov
xchg
mov
or
scas
or
jge
lods
dec
jmp
and
pop
mov
test
dec
cmps
push
lock
and
arpl
push
popf
cmc
mov
pop
ror
dec
popf
push
and
and
mov
mov
enter
aam
repnz
mov
out
add
test
jg
adc
dec
push
movs
add
pop
je
xchg
dec
ss
push
mov
dec
sbb
rcl
push
mov
push
das
ins
call
adc
(bad)
xchg
pop
xor
sbb
lahf
fnstenv
ret
pop
adc
or
mov
mov
mov
mov
scas
inc
les
cwde
jl
sub
xor
inc
xor
and
je
jl
fist
push
pop
cmc
loope
test
sub
cmp
fisttp
mov
adc
mov
out
sub
aad
jbe
rol
jmp
loope
std
cmp
mov
ror
mov
mov
ss
out
inc
fisubr
add
mov
rol
in
int
pop
mov
aas
inc
fdivp
dec
mov
in
mov
xchg
dec
stc
test
les
adc
call
and
mov
enter
cmp
mov
nop
aaa
fstp
fwait
dec
rcl
sti
fwait
movs
test
mov
xchg
adc
rcr
adc
cmp
leave
sbb
jg
stos
test
add
dec
sub
fist
call
jb
mov
mov
aam
mov
pop
mov
mov
int
dec
out
pop
int3
imul
(bad)
loope
add
adc
mov
mov
xlat
push
int3
jne
jg
clc
clc
lods
xor
inc
retf
xchg
movs
cmp
jecxz
xor
jmp
stos
mov
inc
loope
inc
or
push
or
stos
in
push
fwait
inc
sub
dec
jp
ins
jmp
pop
inc
inc
(bad)
mov
repz
daa
cld
fprem
movs
cmc
xchg
push
jle
inc
or
mov
push
loopne
enter
add
adc
push
mov
push
mov
loope
out
push
(bad)
jge
inc
mov
in
add
cdq
ret
pop
aad
es
movs
std
rcr
stos
lods
repz
out
ja
cwde
xchg
fisub
daa
shl
bound
jno
and
mov
ins
add
cli
fcomp
adc
mov
ror
mov
in
lods
sbb
scas
jmp
adc
dec
icebp
js
loope
xchg
or
push
shr
and
jmp
cmp
jle
setae
and
test
mov
mov
mov
fwait
pusha
shl
jge
mov
push
jecxz
mov
mov
sbb
jno
xchg
scas
or
cmp
imul
cmp
mov
pusha
xchg
xchg
ins
in
ficomp
hlt
mov
fdiv
cmp
xchg
clc
aam
test
das
or
sbb
or
mov
or
fidivr
mov
or
in
dec
mov
pop
cmps
adc
push
mov
(bad)
pop
int3
sbb
sub
inc
xchg
xchg
out
xor
mov
mov
inc
cmp
sbb
jb
pop
cmc
pop
sbb
pusha
leave
push
lea
jmp
repnz
mov
addr16
adc
pusha
cmps
and
push
xor
lods
mov
inc
popf
sub
ret
adc
data16
and
shl
sub
cmp
mov
bound
loopne
addr16
xchg
pop
inc
outs
mov
push
sahf
fs
dec
outs
int3
ins
jecxz
stc
aam
inc
sbb
cmp
icebp
retf
ret
out
cmp
(bad)
sahf
mov
leave
adc
cli
xchg
mov
and
lock
push
jnp
lods
enter
je
pop
jl
or
out
lods
repnz
aaa
cmps
rol
pop
cmp
pop
stos
push
neg
pop
mov
mov
cdq
sti
mov
and
sbb
or
addr16
sub
jns
cmps
into
or
outs
sbb
jnp
push
lods
push
add
popa
push
(bad)
aaa
and
pop
mov
ss
imul
inc
int
adc
dec
cmc
dec
pop
aam
test
test
movs
pop
repz
clc
je
jle
clc
(bad)
dec
dec
xchg
out
ror
(bad)
call
loope
mov
mov
std
test
cdq
jb
adc
sub
pop
add
.byte
