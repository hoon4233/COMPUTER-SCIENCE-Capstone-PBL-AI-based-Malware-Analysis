sbb
add
outs
std
(bad)
jmp
dec
adc
jbe
jb
(bad)
pop
ja
sub
js
icebp
jle
sub
es
and
mov
call
add
rcr
out
mov
or
dec
inc
add
inc
push
repz
std
lods
iret
or
xor
add
dec
dec
mov
sbb
cli
call
not
dec
aam
cmp
cdq
push
pushf
je
pop
clc
sldt
imul
mov
(bad)
push
or
inc
jle
jmp
adc
sbb
dec
aam
xlat
add
inc
inc
fld
imul
sub
scas
ja
push
aas
leave
lds
sahf
out
jae
jnp
popa
or
fldenv
fs
adc
dec
jnp
push
adc
cmps
fst
jne
ins
sbb
outs
loope
cmp
dec
sbb
sbb
in
shl
add
xchg
xchg
push
imul
fwait
mov
push
neg
jne
repnz
cmp
xchg
cdq
pop
or
or
in
cdq
add
jo
outs
mov
push
xchg
cmpps
jl
fldenv
jmp
mov
out
pop
sbb
out
cmps
jmp
paddd
and
rol
daa
mov
(bad)
mov
jg
and
push
sub
push
repnz
clc
dec
jno
cmp
xor
xchg
sbb
mov
aaa
mov
daa
scas
cmp
inc
fistp
add
xor
mov
inc
mov
neg
mov
xchg
data16
fimul
mov
dec
inc
cmps
mov
pop
por
jo
cmp
loopne
xor
in
adc
jecxz
(bad)
xchg
ss
fimul
and
xor
jb
dec
fbld
movs
aas
pop
sbb
mov
in
(bad)
push
mov
push
dec
push
aaa
inc
out
and
dec
xchg
es
loope
les
in
or
push
dec
sar
cmp
jmp
into
push
retf
ja
loopne
sbb
out
cld
dec
lods
sbb
scas
xor
cmps
or
nop
and
mov
clc
xchg
push
shl
add
mov
cwde
mov
(bad)
push
repz
int
cmp
sbb
pop
repnz
outs
enter
push
ins
ret
mov
sub
sahf
or
(bad)
outs
jns
popf
xchg
jmp
dec
pop
shl
adc
or
in
jecxz
sub
sbb
test
adc
push
sbb
and
call
jmp
pop
cmp
pop
addr16
jg
mov
add
inc
xlat
repz
jp
mov
enter
sar
imul
aad
sub
dec
pop
or
inc
mov
mov
dec
movs
test
xor
dec
fidivr
pop
adc
fldcw
sub
cmp
xchg
pop
inc
lods
and
mov
mov
repz
stos
mov
mov
mov
push
xchg
cmps
push
add
jmp
inc
retf
shl
xor
push
int
and
push
inc
mov
pop
add
cmp
ret
icebp
jb
add
jp
std
and
adc
daa
xchg
neg
mov
rcr
or
pop
jb
xchg
fidivr
add
or
pop
idiv
shr
movs
sar
or
inc
sahf
mov
mov
(bad)
push
sub
cmp
dec
retf
popa
xor
adc
mov
push
clc
imul
lods
mov
sub
cli
xor
nop
sahf
push
icebp
jmp
pop
jne
enter
or
icebp
(bad)
dec
mov
jg
and
dec
cdq
pushf
jbe
jne
cmp
ss
adc
mov
pop
mov
inc
inc
stos
cmp
or
add
into
add
sub
test
mov
dec
pop
sahf
push
pop
mov
jecxz
dec
sti
call
mov
sub
and
jae
and
lea
xor
rol
and
test
and
std
pop
aad
test
test
jnp
jb
sub
fnstsw
inc
cmp
inc
pop
and
iret
test
jno
cmps
add
(bad)
aad
or
aas
sbb
in
outs
mov
cmp
mov
aas
pop
pop
movs
movs
pop
fbstp
xor
sbb
lock
mov
sti
push
fisttp
and
mov
cmp
in
mov
ds
ins
ret
sbb
into
sub
sbb
add
mov
sbb
inc
add
pop
sbb
and
cwde
push
inc
mov
into
sub
cmps
out
mov
lods
pusha
out
jmp
(bad)
stos
mov
and
mov
pop
fst
sub
inc
mov
stc
loop
inc
jg
push
add
loope
sbb
push
nop
(bad)
sub
and
sub
shl
pop
add
push
fcom
rcl
arpl
das
loop
or
sbb
cwde
adc
iret
cmp
pop
xor
xor
mov
jge
das
test
push
aas
adc
cmp
out
sbb
push
xor
ja
loope
sbb
out
repnz
loop
dec
jne
cmp
xchg
push
shl
xlat
add
push
cmp
cmp
lds
imul
mov
jmp
scas
jmp
popa
push
je
call
inc
rcr
cmp
in
es
xchg
ret
out
hlt
add
or
pushf
loop
push
sub
fisubr
fdivr
popf
inc
mov
lods
cdq
lods
mov
scas
or
jge
adc
lahf
pop
fmul
out
jo
mov
jl
inc
cwde
clc
pop
jmp
and
mov
inc
scas
inc
mov
shl
adc
push
push
or
jae
and
in
inc
or
loope
adc
icebp
pop
sub
or
iret
shl
or
loop
enter
imul
mov
popf
pop
jae
stos
mov
xchg
xchg
gs
and
call
es
fsubr
pcmpgtd
cmp
pop
adc
add
mov
sbb
inc
sbb
imul
cmp
inc
and
cdq
adc
cmp
out
fucomp
enter
stos
pushf
lds
int
fcmovnb
lds
lea
enter
xor
rcr
xor
sub
push
call
je
xor
jmp
test
inc
(bad)
xchg
push
pop
pop
iret
shr
sub
sub
push
lods
lods
test
sbb
clc
xor
adc
dec
fs
xchg
dec
mov
or
rcpps
and
fbstp
and
cmp
out
fild
ss
jle
gs
add
movs
or
(bad)
mov
inc
mov
dec
and
push
sbb
cmp
sub
or
pop
pop
fwait
or
sahf
pop
daa
cmp
or
cmp
mov
jmp
imul
ss
mov
pop
dec
stos
inc
jb
cmp
xor
jo
dec
rcr
and
and
ja
in
push
adc
or
out
or
mov
fadd
arpl
cli
mov
outs
or
dec
arpl
test
pop
push
pop
pop
(bad)
sbb
out
mov
fcmovnb
sub
mov
fwait
hlt
sub
and
push
cmp
push
cs
cmp
mov
out
jmp
cmps
pop
pop
bound
pushf
lea
addr16
mov
xchg
xchg
pop
sbb
dec
inc
fucomi
jmp
cmp
mov
scas
push
mov
push
cmp
shl
jecxz
(bad)
xchg
idiv
stos
ins
sbb
add
jmp
dec
mov
mov
sub
fcom
pop
fs
sar
xor
in
adc
mov
jl
inc
and
ror
jae
lods
in
repz
cmps
push
xor
push
sar
jecxz
mov
shl
jle
push
adc
xchg
outs
aam
(bad)
mov
sar
pushf
lods
fst
add
imul
inc
rol
dec
rcr
and
fbstp
add
ret
aam
test
sahf
jmp
pop
mov
(bad)
lods
rol
jo
mov
pop
push
out
adc
(bad)
(bad)
fcomip
fimul
sti
repnz
mov
xor
call
call
cdq
rcr
dec
mov
push
sub
jno
mov
cwde
pop
repnz
out
jg
out
jmp
inc
fidiv
nop
(bad)
aad
mov
clc
xchg
cld
sti
push
pop
or
aam
mov
and
test
js
mov
das
dec
and
push
xchg
aam
std
rol
out
scas
push
xchg
jle
and
jno
cmps
dec
sbb
inc
enter
xor
ss
sub
sub
dec
mov
leave
sub
push
test
mov
fdiv
sub
fwait
cwde
(bad)
outs
and
inc
pushf
addr16
push
int3
neg
out
lock
ja
out
dec
pop
out
mov
xor
ja
xor
pop
jno
cmc
retf
cld
dec
mov
imul
sbb
mov
and
cmc
pop
add
push
stos
jl
sbb
test
jno
mov
js
dec
fistp
in
fsub
scas
je
mov
ins
(bad)
std
pop
fild
fcom
fadd
sub
dec
or
sbb
sahf
cld
mov
and
nop
cmp
pop
outs
pop
lahf
popa
adc
in
xlat
fidivr
into
push
or
loopne
ror
inc
out
xor
xchg
sbb
fist
loop
dec
dec
mov
pop
cmp
sub
jl
call
test
cmc
and
sbb
movs
and
test
cmp
adc
and
mov
mov
mov
xor
xchg
lods
out
cmp
mov
and
xchg
inc
pop
mov
push
mov
popa
ret
je
stos
icebp
xchg
mov
pop
inc
fist
ins
and
xor
loop
pop
cmps
loop
test
(bad)
lahf
in
mov
dec
imul
and
xchg
test
push
add
mov
jecxz
je
adc
dec
pop
pop
popa
push
ret
pop
and
pop
jbe
pop
add
cmps
ds
popf
sbb
sbb
adc
in
sbb
je
div
and
imul
sbb
add
jp
xchg
shl
and
(bad)
and
arpl
in
sbb
mov
pop
sbb
jl
and
xchg
call
daa
movs
out
out
int
fistp
add
call
push
sbb
push
inc
pop
mov
fcom
add
sbb
movs
test
pushf
cmp
xchg
pop
loopne
sub
stos
retf
bound
popf
not
sti
pop
or
aaa
push
(bad)
iret
arpl
and
arpl
pop
rcr
add
mov
mov
nop
mov
jg
or
int3
aam
mov
(bad)
jge
cmp
pop
mov
add
inc
dec
(bad)
cmp
repz
sbb
xchg
mov
push
adc
fisttp
leave
jmp
xor
test
std
and
mov
sub
and
sub
push
and
or
aaa
adc
(bad)
(bad)
ficomp
loopne
xor
mov
sbb
or
jbe
add
fnsave
sub
mov
mov
pushf
push
sbb
js
dec
daa
fcmovne
xor
sbb
cmp
ret
mov
(bad)
fist
mov
pop
repz
lahf
fwait
xchg
mov
xchg
sub
pop
dec
fwait
je
sbb
call
pushf
sub
cs
add
jmp
cmps
jmp
std
leave
rol
aad
fs
lahf
cmp
loopne
in
int3
sub
loope
cmp
or
or
jbe
jnp
pop
mov
fimul
into
test
neg
dec
shl
add
or
pop
jno
fild
enter
outs
mov
retf
ficom
xchg
addr16
scas
push
cdq
pop
inc
(bad)
xchg
hlt
cmp
xchg
pop
inc
dec
ins
loope
jns
lock
mov
aaa
and
mov
aam
xchg
mov
jns
push
clc
test
dec
dec
ss
jmp
dec
adc
arpl
adc
dec
xor
imul
sbb
dec
icebp
cli
or
lods
jns
fild
clc
shl
ss
pop
dec
outs
movs
jne
xor
xchg
fadd
sub
adc
xor
repz
icebp
xchg
or
into
mov
or
pop
and
imul
push
xchg
gs
(bad)
jmp
aad
jecxz
jp
or
test
ins
xchg
aas
pusha
out
dec
mov
les
sub
cld
sub
mov
call
mov
mov
and
adc
fucomip
dec
jecxz
rcr
mov
daa
mov
je
mov
movs
aam
dec
lea
call
(bad)
inc
add
xchg
jmp
ror
bnd
and
out
mov
mov
loope
outs
cwde
xor
repz
push
lods
shr
in
cmp
call
dec
mov
mov
cld
add
fnstenv
jno
fbstp
dec
fwait
pop
adc
punpcklbw
je
dec
pop
push
xor
cmp
jns
enter
shl
retf
div
lahf
popa
inc
lahf
cmp
add
or
push
scas
rcr
xchg
cmp
add
fwait
jbe
nop
sahf
sub
adc
push
sar
adc
retf
jecxz
fild
push
push
loopne
rcr
pop
fstp
xchg
int
ins
cmp
int3
and
cli
retf
mov
test
(bad)
and
outs
pop
in
pop
dec
adc
or
xor
pop
mov
push
adc
ret
ret
jmp
out
mov
or
and
pop
mov
adc
in
push
(bad)
dec
arpl
xchg
push
popf
int
or
out
add
push
inc
mov
in
dec
rol
xor
add
fild
enter
cmp
(bad)
mov
out
xchg
fisttp
lds
adc
(bad)
dec
push
push
stc
sbb
and
mov
(bad)
xchg
and
xchg
stos
test
xor
mov
cmps
pop
inc
sub
jle
mov
sub
aam
stos
loope
mov
jmp
or
cmps
daa
outs
xchg
gs
pop
test
lds
push
(bad)
ins
cs
ins
into
arpl
pop
dec
dec
stos
jecxz
sub
shr
sbb
(bad)
call
gs
in
gs
loope
fcom
stos
xlat
mov
(bad)
test
jg
nop
shr
js
adc
call
loop
hlt
jno
or
push
or
sub
imul
inc
inc
call
out
pop
loope
xchg
aad
jge
jge
sbb
fs
xchg
lahf
inc
aam
leave
inc
dec
push
cmp
push
xor
add
hlt
pop
cs
movs
lods
fiadd
scas
in
(bad)
addr16
pop
inc
cmc
mov
arpl
sub
jno
ins
or
js
mov
add
out
dec
add
test
inc
aam
test
mov
sbb
pop
ds
(bad)
nop
popw
shl
fwait
jp
ficom
(bad)
pop
adc
in
stos
mov
xchg
pop
and
jmp
xor
mov
dec
cld
in
and
fdivr
mov
test
xlat
out
test
rcl
xchg
xor
jb
mov
mov
ffree
mov
mov
mov
mov
test
ins
push
push
cmp
iret
scas
push
jbe
xchg
ficom
fldcw
mov
sti
sbb
push
(bad)
jmp
inc
loopne
dec
and
mov
fisttp
test
call
shl
mov
movs
outs
sub
and
jl
pop
mov
or
or
sbb
sub
xchg
mov
std
cs
sbb
and
xchg
movs
lea
sbb
inc
sub
mov
pop
mov
aad
cmp
sar
fwait
in
pop
jge
test
movs
xchg
ret
out
sub
inc
mov
mov
xchg
mov
push
inc
mov
sbb
jae
stc
hlt
lea
lahf
mov
cmp
retf
je
jmp
inc
fist
adc
aaa
xchg
push
gs
cmp
mov
repz
bound
call
push
dec
and
loopne
pop
and
mov
(bad)
cli
jns
outs
sbb
xchg
cs
int
cmp
cmc
mov
scas
and
or
mov
jns
and
test
fild
jge
(bad)
or
(bad)
fwait
sar
jl
clc
out
stos
fwait
clc
mov
push
or
int3
stos
(bad)
rol
loop
add
aam
pushf
xchg
xchg
xchg
aaa
jno
popf
arpl
sbb
and
ds
(bad)
int
mov
or
cmps
sub
and
stc
mov
out
(bad)
and
div
sbb
jno
inc
jp
das
add
inc
push
imul
inc
mov
dec
sbb
jmp
push
jp
mov
hlt
inc
mov
mov
xor
shr
pusha
cmc
mov
jnp
jg
pop
cmp
shl
jnp
popa
jns
sbb
je
pop
or
test
pop
and
sbb
fwait
add
push
cmps
jae
imul
loop
cmps
fwait
jb
(bad)
retf
out
push
pop
movs
push
mov
daa
aad
mov
and
pop
hlt
repnz
popa
mov
fnsave
mov
pop
xchg
fcom
and
ja
inc
mov
adc
mov
mov
test
mov
int
loopne
sbb
push
retf
cmp
push
out
and
push
sbb
push
xchg
not
dec
or
pushf
or
(bad)
sub
arpl
push
adc
aad
retf
jmp
or
jns
test
inc
mov
or
scas
push
jp
sbb
and
push
test
out
fsub
gs
push
push
stos
pusha
fcomp
sub
les
lahf
adc
cmp
inc
mov
xchg
movs
(bad)
jp
jg
xlat
cli
and
cdq
in
push
addr16
lods
sub
cmc
test
outs
jne
daa
cwde
pop
and
rol
push
xor
xchg
dec
retf
push
jmp
jecxz
in
push
or
out
mov
(bad)
cld
xor
loope
jge
jp
or
pop
pop
in
sub
and
test
shl
push
adc
mov
aam
jecxz
scas
lock
mov
push
dec
xchg
arpl
jmp
scas
leave
xchg
add
push
repnz
scas
movs
nop
icebp
stos
pop
add
lods
mov
js
sub
loope
loope
fst
and
xchg
sahf
enter
arpl
stc
pop
shr
xchg
pop
out
push
push
mov
push
mov
jno
dec
add
sub
cmp
sbb
lahf
retf
sub
mov
push
xor
xchg
test
(bad)
not
rcl
push
dec
dec
cdq
xchg
imul
fild
jl
aad
cmp
scas
ins
push
js
repz
enter
sub
inc
mov
shl
rol
repz
inc
mov
pop
xchg
fld
shl
xor
xor
in
pop
jae
aam
xchg
push
clc
loopne
in
sub
or
mov
inc
push
mov
mov
retf
sub
ins
out
or
mov
outs
and
call
mov
cwde
jge
pop
int
inc
and
pop
fisubr
dec
xor
push
sub
ret
je
add
add
sbb
sar
(bad)
movs
test
jb
div
xor
xor
pop
retf
push
retf
lock
xchg
fwait
xor
xchg
mov
jge
les
sbb
push
loopne
and
push
cmp
ret
add
fnstsw
sbb
sub
xlat
aam
push
adc
fldenv
mov
push
mov
nop
mov
ss
and
pop
aam
mov
nop
sub
fnsave
jge
adc
sub
mov
xor
pop
push
bound
push
jmp
and
lods
jecxz
sbb
add
das
dec
retf
ror
adc
and
inc
cmp
test
jne
mov
gs
into
movs
add
repz
sahf
cmp
repz
push
cmp
lods
or
ret
jp
jle
pop
push
and
(bad)
fld
push
repz
and
jne
lods
rcr
pop
cli
test
movs
cs
mov
in
and
push
sub
iret
leave
and
or
push
xor
push
sti
push
inc
or
in
pop
mov
and
jmp
jge
push
jo
clc
into
cs
cmp
enter
fbstp
pop
pop
shl
loop
test
push
sbb
mov
das
shl
inc
fwait
imul
jg
inc
and
sbb
bound
in
sbb
fs
(bad)
pop
cld
outs
cs
js
mul
pop
aam
ja
adc
cmp
ds
mov
add
rol
or
scas
mov
cmp
cmp
cmc
shl
adc
les
inc
scas
mov
xchg
jb
push
and
js
mov
inc
xlat
loopne
mov
push
sbb
sbb
lods
pop
std
fbstp
mov
retf
(bad)
ds
fld
ins
in
ret
les
(bad)
fsubr
sahf
test
popf
fidivr
push
ins
sbb
jno
leave
lods
and
in
dec
fmulp
xor
mov
pop
inc
jnp
outs
outs
xor
arpl
sbb
mov
imul
aad
ss
cmp
aam
movntps
xlat
xchg
ins
outs
cmp
mov
push
and
lds
fld
sti
push
jecxz
daa
loope
pop
cmp
cmp
mov
push
lods
and
lods
push
and
mov
lock
sub
adc
push
outs
cdq
mov
aaa
sbb
mov
repz
ret
cmp
add
leave
push
xor
ror
push
repnz
add
xchg
jp
sbb
or
cmp
sbb
(bad)
out
movs
fimul
push
lods
push
and
or
mov
loopne
mov
dec
call
sub
pop
mov
mov
mov
cdq
jle
add
fldenv
ret
pop
jge
push
out
mov
(bad)
jl
mov
loop
mov
mov
mov
xchg
stos
adc
mov
imul
aaa
dec
dec
jg
mov
arpl
xchg
imul
jmp
adc
ror
mov
loopne
ins
push
aam
icebp
add
mov
pop
in
rcl
mov
cmp
push
into
repnz
sub
inc
ins
icebp
mov
in
pop
add
jp
cmp
in
push
inc
and
pop
pushf
cmp
cmp
clc
fild
mov
xor
push
xor
nop
xor
mov
cmps
cmps
adc
jno
adc
jmp
cmp
sbb
(bad)
inc
gs
retf
push
inc
mov
push
add
int3
sub
or
in
lock
add
mov
call
xor
cmp
jne
ins
push
inc
cmps
push
cdq
inc
xchg
push
ds
or
lea
lahf
push
push
and
stc
push
(bad)
aas
shl
xchg
or
cmc
mov
popa
ficomp
pop
cdq
and
mov
sub
mov
movs
loop
pop
cli
outs
mov
in
ficomp
popa
mov
(bad)
jg
repz
repnz
mov
add
arpl
mov
cwde
jl
lock
xor
je
pop
xchg
mov
ficomp
cmp
movs
js
jbe
pop
mov
out
sub
loop
sub
add
sbb
push
out
add
mov
imul
and
sar
add
mov
jle
mov
and
sub
dec
mov
stc
out
push
das
(bad)
push
pop
cld
lods
push
sub
sbb
xchg
fldcw
xchg
sbb
pop
xchg
dec
push
jle
xchg
jo
add
dec
fcmovb
inc
loope
add
xchg
pop
lahf
push
loop
mov
lods
pusha
mov
dec
mov
sti
sti
gs
cmps
jg
xor
adc
inc
cdq
jl
xor
mov
jbe
lds
fisttp
inc
inc
sbb
(bad)
sbb
outs
(bad)
in
mov
ror
jbe
(bad)
xchg
aas
sub
sbb
(bad)
call
lock
pop
xor
sbb
fild
xor
add
jle
xor
jp
int
cmps
stc
pop
adc
inc
xor
xchg
(bad)
jne
and
nop
push
mov
lea
mov
imul
lods
xchg
inc
cmp
add
(bad)
rcl
shl
push
cmps
pop
adc
fldenv
ins
repz
sbb
das
mov
mov
sbb
jnp
sbb
cmc
xchg
(bad)
neg
or
loop
inc
sub
mov
fimul
jge
xchg
lahf
cmp
das
das
xor
out
popf
jbe
cmp
cmp
gs
jle
hlt
test
or
rcr
addr16
add
out
push
mov
outs
fcmovnb
add
popf
xor
pop
jmp
es
repz
xor
mov
test
mov
std
mov
daa
cdq
pop
xor
and
std
xchg
adc
(bad)
push
sahf
ins
mov
mov
repz
inc
sahf
imul
or
retf
iret
rcr
adc
jmp
xor
adc
inc
(bad)
jae
shr
sahf
mov
gs
lods
(bad)
loopne
cmp
repz
std
int
mov
push
cmp
pop
pop
xor
loope
add
cmp
sub
lds
retf
(bad)
ss
(bad)
arpl
iret
sbb
mov
and
mov
pop
ds
add
hlt
jmp
ret
arpl
shr
jne
sub
js
pusha
je
in
sbb
pop
fidiv
sahf
and
lds
(bad)
adc
xchg
cmps
fwait
or
cmc
jp
mov
inc
adc
inc
mov
mov
xlat
hlt
or
(bad)
aad
sub
and
add
retf
lock
rcr
mov
cdq
ins
(bad)
dec
mov
or
xchg
or
add
cmp
pop
xlat
xor
call
adc
lock
in
dec
mov
sbb
test
retf
mov
test
pop
ror
mov
or
add
imul
mov
into
clc
cdq
inc
cdq
and
jb
(bad)
inc
ror
test
aad
pop
pop
ss
push
xor
xchg
adc
cwde
aam
stos
push
loope
pop
ds
pop
mov
mov
arpl
mov
shl
push
js
jg
test
mov
adc
xchg
imul
mov
pop
(bad)
sub
data16
and
gs
clc
jmp
fdivp
push
(bad)
mov
mov
sub
repz
fcom
inc
jbe
jge
pop
jmp
je
or
mov
test
(bad)
xchg
sbb
cmp
fwait
xchg
or
pop
lds
add
sub
clc
push
mov
pop
sub
and
inc
popf
jnp
and
das
in
ss
xchg
daa
adc
popa
lahf
sbb
add
lods
movs
(bad)
xchg
and
es
fnstsw
and
mov
jbe
pop
or
mov
pop
pop
dec
aam
adc
mov
loopne
imul
movs
pop
add
sbb
xor
mov
push
cmp
xor
or
add
dec
not
lods
std
js
sub
daa
popf
dec
cmp
add
push
mov
mov
inc
sub
jbe
jecxz
stos
pusha
mov
add
(bad)
pusha
xchg
adc
adc
push
dec
push
push
xchg
ss
pop
js
cdq
cmp
enter
xchg
and
cmp
dec
sahf
ins
sahf
mov
test
loope
test
cmp
cmovg
cmp
jnp
fdiv
(bad)
call
test
mov
fwait
jmp
fist
xchg
fidiv
xchg
xchg
lds
stos
pop
mov
bound
jns
cmps
sbb
ins
pop
stos
push
jae
int3
xor
or
scas
cmp
repz
sbb
pop
inc
add
pop
mov
inc
jb
pop
imul
sub
loopne
cli
inc
xor
rcr
int
and
out
xchg
xor
js
fimul
mov
xor
fnstsw
xchg
mov
retf
lea
lock
xchg
push
inc
ins
xchg
sub
mov
ficom
pop
in
mov
sbb
sub
inc
or
xchg
push
mov
and
mov
sbb
dec
push
imul
xor
ss
out
adc
jns
push
sbb
popf
lea
pop
test
pop
pop
mul
dec
push
mov
pop
mov
jo
mov
add
xor
(bad)
fstp
out
jmp
cs
add
rcl
pop
jnp
push
mov
lahf
dec
aad
(bad)
daa
(bad)
(bad)
add
push
ror
call
arpl
popa
xor
pop
and
adc
sahf
paddsw
add
out
mov
nop
adc
repnz
sub
scas
retf
add
out
leave
fmul
xchg
mov
(bad)
xchg
pop
mov
adc
mov
push
(bad)
or
cli
inc
mov
ret
and
imul
mov
test
or
sub
add
xor
fs
xchg
jle
or
in
je
pushf
or
dec
mov
add
js
xchg
mov
adc
dec
or
mov
maskmovq
div
adc
xlat
jns
jge
add
in
sbb
mov
mov
test
mov
push
xor
push
int
adc
xor
retf
iret
and
sbb
xor
in
jl
and
jb
fistp
or
(bad)
push
sub
rol
(bad)
xor
push
cmp
xchg
add
xchg
aas
dec
neg
lahf
xor
xchg
mov
test
mov
mov
aam
fnstenv
push
(bad)
aaa
ss
scas
add
mov
imul
push
push
dec
xchg
fsub
retf
ret
mov
jmp
fwait
mov
stos
add
adc
icebp
scas
lahf
bound
cmps
jp
sub
ret
in
sbb
addr16
cmp
add
lea
dec
mov
and
repnz
xchg
jnp
pop
scas
iret
je
daa
pop
retf
jae
cmp
inc
mov
mov
in
mov
js
lds
xor
jo
movs
mov
int3
sub
dec
aaa
sahf
cmps
xor
addr16
popa
lods
das
js
pusha
xlat
mov
xchg
shr
push
pop
cmc
adc
(bad)
cmc
add
cli
xlat
cli
dec
xchg
loop
arpl
sahf
sub
cld
iret
jecxz
mov
xchg
sar
jmp
mov
(bad)
cmps
les
sub
dec
sbb
and
rcr
cmc
dec
and
and
pop
(bad)
dec
stos
nop
fisttp
push
adc
dec
dec
mov
add
xor
mov
sahf
repz
adc
retf
cmp
call
jl
cmp
mov
stc
jmp
ja
cmp
adc
sahf
cdq
test
mov
push
dec
xor
test
sbb
rcl
loop
movs
ret
lock
nop
cs
dec
fwait
inc
arpl
and
mov
lods
lea
fwait
cdq
or
sbb
fisttp
push
clc
test
sub
push
dec
sbb
push
div
push
push
shl
xor
mov
leave
sub
sbb
jbe
push
in
(bad)
mov
nop
lahf
scas
gs
cli
(bad)
fcomi
retf
fnstcw
fist
mov
out
xor
sub
xor
or
sub
inc
mov
ins
mov
cmc
data16
xchg
ins
fnstenv
imul
xor
sub
out
pushf
push
push
jle
mov
clc
(bad)
cmp
cmp
mov
sti
imul
outs
push
push
cmp
out
adc
imul
add
not
sbb
cli
mov
loope
sub
(bad)
mov
loop
adc
xchg
mov
test
cmps
gs
push
sahf
push
xchg
cmp
loopne
inc
ins
lds
xchg
add
mov
or
jno
xchg
pop
into
cdq
mov
in
sti
dec
dec
(bad)
fidiv
lods
xor
cmp
test
es
sub
fldz
cmp
cs
cmp
jne
adc
xchg
sahf
sub
(bad)
loope
push
inc
inc
pop
mov
push
jns
xchg
or
rol
dec
popf
aas
xchg
rol
xchg
mov
in
cdq
cmc
rcr
lea
(bad)
push
aad
push
xor
mov
test
sub
pop
mov
jle
jo
shr
stos
jne
adc
mov
dec
and
and
iret
test
pop
cmps
pxor
int
int3
mov
lods
jmp
test
xor
add
cmp
cmps
jmp
sbb
sbb
sahf
cmp
pop
arpl
stos
mov
loopne
cmp
add
jmp
pop
push
cmp
addr16
(bad)
sbb
adc
xchg
icebp
xchg
sbb
or
fidiv
inc
mov
ds
call
call
xchg
in
jmp
ins
jg
mov
nop
call
or
pop
push
sbb
cmp
xchg
sub
push
out
or
jmp
xor
fucomi
fs
xor
retf
mov
cmc
add
dec
sbb
xchg
add
pop
addr16
add
nop
outs
dec
outs
lds
ins
cmp
dec
xchg
aam
cmp
(bad)
jge
sbb
dec
pop
rcr
and
imul
pusha
inc
cdq
cli
movs
lahf
jge
push
mov
cmp
mov
aad
jno
repz
dec
fbstp
mov
aaa
pop
retf
jbe
or
std
ds
ret
fcomp
or
nop
clc
mov
or
adc
jg
and
add
(bad)
out
mov
push
out
sahf
mov
pop
sbb
cwde
inc
sub
nop
mov
test
xchg
movs
mov
push
and
sbb
test
inc
mov
aad
dec
push
cmp
or
cdq
add
xor
retf
fsubr
addr16
daa
xchg
adc
fs
push
mov
pop
add
xchg
add
jge
icebp
loopne
pop
(bad)
or
stc
es
in
(bad)
push
ficomp
cdq
sbb
repz
and
add
fisub
xor
jmp
in
xchg
xor
add
add
jmp
mov
fsub
movs
or
mov
pop
sub
movs
mov
movs
lea
pop
sub
mov
stc
pop
call
xor
jo
mov
imul
dec
sbb
ret
mov
mov
and
dec
dec
dec
push
xor
je
cwde
cmp
pop
mov
(bad)
push
jno
adc
add
aad
cmc
or
imul
cmp
mov
xor
mov
add
leave
mov
loop
xchg
movs
js
mov
mov
push
not
add
jecxz
or
add
mov
xchg
dec
daa
aad
(bad)
out
xlat
rcl
idiv
and
test
ss
ss
add
sub
jmp
test
adc
sbb
je
pop
push
adc
dec
lahf
or
pushf
sub
fild
and
nop
ror
repnz
xchg
aad
adc
jmp
adc
sub
cmc
mov
mov
push
idiv
loop
lock
pop
test
jne
xchg
jne
jnp
and
cmp
and
mov
cmc
mov
mov
jae
hlt
xor
stc
jecxz
jo
icebp
cdq
push
add
sahf
add
add
or
dec
jne
loop
loope
cwde
fucomp
(bad)
aam
inc
addr16
or
in
xchg
jno
sbb
xchg
rol
xchg
mov
call
mov
mov
and
mov
xchg
jae
int3
fstp
push
arpl
mov
repnz
lock
and
xor
xchg
popf
adc
fsubr
push
int
ficom
inc
lahf
ret
adc
test
lods
push
xor
outs
call
inc
xor
(bad)
(bad)
(bad)
mov
xchg
push
sbb
into
jge
sbb
push
push
pop
jl
bound
retf
xor
xchg
xlat
mov
int3
gs
xor
sub
sahf
shl
sar
inc
test
popa
lods
xor
scas
sub
xchg
push
push
jne
fwait
ins
test
cmp
inc
add
pop
xor
iret
push
vorps
mov
inc
pop
push
int
and
and
loop
mov
int
neg
out
jne
inc
or
push
and
xchg
aad
cmp
cmp
jnp
mov
into
dec
xchg
iret
daa
cmp
not
ds
or
stos
mov
retf
mov
movs
ret
xor
or
dec
pop
pushf
call
repnz
or
pop
repnz
mov
sbb
and
ret
fld
les
rcl
or
mov
inc
(bad)
sub
out
inc
sar
jp
icebp
mov
mov
cmps
sbb
ror
jns
addr16
xchg
mov
mov
imul
mov
clc
jnp
mov
lock
xor
outs
jg
into
mov
adc
mov
jbe
fdiv
mov
mov
(bad)
std
push
cmp
rcl
adc
sbb
(bad)
sbb
jno
xchg
mov
dec
popf
and
jmp
scas
mov
imul
call
retf
loopne
adc
and
sti
sbb
inc
sub
mov
lock
pusha
inc
daa
xlat
jmp
repz
sbb
xlat
push
jnp
sbb
inc
and
les
push
push
or
pop
pop
stc
cmc
mov
mov
fdiv
mov
mov
sub
bound
repnz
xor
mov
add
iret
movq
out
mov
dec
daa
fistp
pop
fcom
or
test
ficomp
mov
mov
xchg
stc
mov
pop
cmp
pop
push
cli
call
imul
cmp
push
stos
repz
xlat
pop
das
popa
mov
cdq
sbb
cwde
mov
sub
pop
fwait
mov
or
fimul
(bad)
in
test
in
adc
push
push
arpl
adc
les
pusha
mov
jecxz
inc
mov
and
sbb
ret
and
mov
cmp
jns
pop
pop
pcmpeqd
ficom
fsubr
xor
xor
and
mov
inc
cmp
dec
ins
jo
push
sub
mov
mov
ror
or
lds
and
adc
push
int
hlt
sbb
inc
xchg
ins
pop
cli
xor
ficomp
dec
sbb
xor
push
cmp
enter
stos
jnp
pusha
pop
jo
mov
pop
stos
int
out
cmp
in
stc
inc
ret
jge
xor
mov
adc
adc
cmp
(bad)
or
dec
inc
fsubr
adc
or
xchg
int3
sub
mov
pop
in
bound
aam
inc
not
stos
xchg
call
ret
lods
mov
ret
movs
scas
and
add
mov
div
pop
cmp
push
fst
fisttp
int3
inc
(bad)
les
mov
mov
fnstsw
pop
fld
and
mov
or
inc
scas
or
lahf
lahf
nop
adc
inc
push
push
xchg
jns
loopne
or
pop
push
out
(bad)
jo
inc
icebp
cmps
ins
leave
cmp
outs
jmp
jmp
ds
jp
and
(bad)
pop
jge
cmp
dec
loop
sub
add
jbe
cmp
es
add
mov
sub
xchg
popf
xor
adc
aad
and
call
mov
cmp
jl
cmps
(bad)
mov
mov
cmp
add
clc
or
nop
mov
rol
xchg
cmp
retf
mov
dec
mov
cdq
mov
or
push
cmp
ret
mov
loope
stos
test
test
push
adc
or
cs
and
lahf
outs
fbstp
in
mov
mov
sbb
jae
xor
mov
pop
retf
add
inc
aad
sbb
ja
fcom
fwait
loopne
inc
pop
push
adc
shl
add
(bad)
out
jne
std
sub
imul
(bad)
xchg
cmp
daa
not
pop
leave
std
into
xchg
gs
add
repz
xlat
xchg
sub
sahf
jnp
pop
sub
stc
adc
mov
scas
xor
bound
jle
rol
fwait
or
jl
lods
inc
aas
arpl
jmp
sub
scas
cmp
inc
ins
pop
mov
cmp
push
mov
jbe
xchg
aam
sbb
fimul
mov
add
inc
ret
jno
and
fld1
xchg
pop
jmp
mov
in
mov
movs
add
xchg
mov
pop
call
icebp
shr
loop
(bad)
dec
xchg
or
jge
jg
dec
cmp
jb
fdiv
add
aad
xlat
xchg
scas
mov
pushf
xlat
push
ret
gs
aam
mov
dec
mov
mov
cmp
js
je
rcr
(bad)
out
(bad)
sti
sub
dec
call
xor
(bad)
xchg
imul
xchg
cmp
dec
jae
mul
inc
out
push
xchg
pop
cmp
xor
cdq
in
or
shl
or
es
movs
xor
dec
(bad)
xor
retf
enter
xchg
(bad)
sub
ficom
adc
mov
(bad)
hlt
push
(bad)
dec
ins
arpl
pop
fcomp
ins
inc
cmps
adc
and
xor
xchg
outs
xchg
push
addr16
repz
ret
ret
pop
cmp
cdq
call
bts
add
adc
mov
(bad)
jmp
add
or
push
lods
outs
jl
test
je
lea
je
gs
dec
jmp
(bad)
jg
rcl
pop
popa
xchg
call
push
rcr
adc
out
iret
aas
test
lahf
xchg
add
push
xor
(bad)
in
lock
hlt
daa
icebp
pop
dec
xor
xor
outs
push
ja
dec
iret
add
jbe
call
(bad)
cmp
inc
or
jne
jae
jecxz
and
cmp
mov
or
sub
sahf
push
pop
mov
cmps
and
ret
sar
mov
xchg
enter
outs
and
sti
pop
mov
lahf
fwait
or
repz
clc
xor
imul
xlat
adc
mov
faddp
stos
sbb
lock
and
jp
ds
lock
mov
mov
pop
inc
mov
or
nop
leave
repz
mov
(bad)
mov
aad
in
test
outs
fs
push
(bad)
cmps
xor
(bad)
out
out
retf
out
out
xor
nop
jo
clc
push
rol
cmp
cli
and
and
add
jp
push
dec
add
daa
inc
mov
mov
mov
shl
xchg
sbb
test
retf
test
mov
inc
sub
movs
cdq
out
sub
cld
cwde
ret
inc
cmps
mov
out
outs
out
jl
cmp
mov
popa
jae
mov
pop
rcr
mov
adc
adc
or
in
or
push
add
movs
into
sbb
(bad)
dec
outs
call
stos
add
mov
cdq
mov
xor
test
cmps
fadd
xor
movs
lods
popa
mov
loopne
loopne
pop
mov
cmp
int
jmp
xchg
push
mov
mov
loopne
dec
cmc
in
out
jmp
mov
ret
cdq
shl
and
mov
lahf
outs
fmul
sti
cdq
(bad)
mov
mov
mov
add
pop
sahf
dec
(bad)
fiadd
adc
mov
enter
out
lods
out
ficomp
lods
test
mov
add
pop
pop
loope
repnz
push
ja
mov
sub
fwait
sub
lea
mov
add
pop
fsubr
mov
adc
jge
or
adc
jge
ss
pop
loope
mov
leave
push
out
or
or
js
xchg
test
adc
jmp
dec
in
bound
lds
call
int
xor
ds
call
adc
(bad)
call
mov
arpl
xchg
das
xor
call
xchg
pop
fnsave
test
jns
mov
or
faddp
je
add
and
jge
outs
in
add
outs
shr
and
adc
push
inc
outs
sbb
dec
das
sub
mov
sbb
fnstcw
dec
push
pop
fld1
imul
cmp
cmps
daa
jmp
or
jecxz
fninit
jb
xchg
add
cli
ret
sub
dec
stos
xlat
loope
inc
enter
jl
push
dec
movs
push
lss
(bad)
hlt
xchg
cmp
inc
push
xor
sbb
fidiv
xor
ret
ret
inc
pop
dec
aaa
xlat
sahf
popa
cmp
retf
shl
xor
add
mov
mov
push
shl
idiv
icebp
push
dec
out
cmp
add
imul
gs
cdq
js
cmps
stos
pop
push
add
sbb
xor
adc
and
cmp
outs
adc
shl
push
fsubr
daa
(bad)
fsub
sbb
xor
pop
lods
ds
inc
pushf
into
mov
pop
mov
hlt
xor
in
sub
xchg
lods
inc
jg
inc
push
ins
inc
sbb
movs
mov
cmp
hlt
movs
and
sahf
(bad)
jge
(bad)
mov
inc
xor
mov
in
cmp
mov
jnp
ins
imul
xor
xor
add
es
js
cdq
sub
imul
jmp
inc
mov
dec
test
cs
add
call
cmp
aam
mov
das
xchg
loopne
jp
sbb
gs
sbb
cld
jo
sbb
pop
jg
ret
in
lods
mov
lods
stos
pop
xchg
sbb
xchg
les
push
pop
jns
or
shl
fdiv
in
dec
mov
push
test
sbb
repz
popa
cmp
es
add
(bad)
imul
arpl
sub
loope
icebp
push
jae
add
xlat
(bad)
ins
sahf
in
push
jno
or
loope
add
mov
sbb
xchg
popa
sub
or
mov
arpl
xchg
jns
clc
(bad)
sub
shl
cmp
xchg
push
sub
sbb
pop
loope
mov
sub
cwde
push
push
and
je
sub
fucomi
add
call
ins
push
and
add
dec
sbb
mov
js
jne
hlt
inc
ss
sbb
mov
ins
in
xchg
cmp
sbb
push
or
adc
sbb
mov
outs
inc
mov
sahf
or
xor
pop
push
push
ja
leave
lea
jge
jp
inc
inc
stos
cmp
lods
in
shl
cmp
xor
icebp
push
dec
nop
mov
inc
pop
fwait
repz
xor
fwait
mov
ret
xchg
mov
cmp
popa
lds
xor
pushf
sub
mov
call
pop
ins
bnd
enter
shr
mov
mov
or
sti
loopne
js
and
dec
cs
mov
mov
rcl
and
lds
(bad)
sub
dec
ficom
movs
pop
arpl
out
dec
cli
dec
adc
out
ins
es
sbb
sbb
arpl
add
xchg
pop
add
sub
sahf
in
sar
stos
or
inc
shl
dec
push
scas
(bad)
sbb
pop
mov
adc
pushf
push
mov
or
dec
mov
add
xor
js
fild
dec
aam
out
pushf
retf
add
cdq
dec
jp
lock
arpl
pop
sub
or
test
xchg
aad
mov
mov
das
fnsave
clc
(bad)
repz
fisubr
adc
sub
and
mov
pusha
mov
sar
mov
(bad)
or
xor
push
push
sub
loop
outs
xchg
pop
mov
xor
retf
push
xor
cmp
mov
idiv
jns
es
cmc
aas
imul
and
xchg
dec
jecxz
mov
(bad)
retf
das
mov
(bad)
jge
call
adc
sub
(bad)
out
nop
push
(bad)
or
lds
les
sbb
in
mov
mov
div
sub
stc
pop
inc
loope
fucomi
mov
aaa
out
test
and
movs
inc
pop
icebp
mov
arpl
cmp
nop
jae
push
mov
jno
aad
mov
aam
add
and
xchg
movs
test
in
add
inc
mov
int3
ror
clc
loopne
xor
je
loop
iret
shl
xor
arpl
xchg
loopne
test
pop
push
add
cmp
pop
xchg
mov
push
sbb
leave
mov
cmps
cmp
jb
mov
setl
dec
fisub
add
sub
sahf
xor
stc
retf
mov
mov
std
call
inc
xchg
jecxz
push
aad
in
outs
data16
or
push
fild
fwait
stos
sbb
movlps
hlt
pusha
cli
inc
fist
push
sbb
(bad)
xchg
xor
xor
mov
or
push
in
add
test
inc
xchg
add
lds
jbe
xchg
and
(bad)
(bad)
js
pop
push
mov
ret
jne
jmp
rcl
sbb
clc
sti
aaa
enter
aam
loope
cmps
test
mov
clc
push
fadd
repnz
inc
(bad)
dec
cmps
or
or
fstp
(bad)
push
push
rcl
icebp
push
clc
cld
push
movs
fidiv
and
jge
pop
fiadd
jno
imul
sub
outs
adc
sub
es
xor
ins
cdq
xlat
les
scas
sub
mov
pop
sbb
into
cmp
sti
xchg
pushf
mov
dec
cwde
sub
mov
in
cmc
xchg
aas
loope
pop
ins
pop
mov
dec
xchg
test
je
push
inc
cmp
imul
retf
je
or
aam
mov
or
scas
cmp
mov
cmp
dec
jb
add
push
outs
in
xchg
jge
sbb
add
call
pop
mov
adc
xchg
xchg
out
xor
movs
jmp
seto
repnz
push
out
and
push
push
out
jl
inc
cdq
mov
xchg
daa
jns
out
mov
jge
hlt
sbb
ja
xchg
mov
and
mov
inc
jle
movs
jmp
addr16
movs
inc
les
or
sbb
inc
xchg
add
or
cld
out
sar
rcl
jmp
ret
fwait
jp
dec
outs
fnstsw
jae
stos
bound
ror
jecxz
retf
add
mov
jnp
mov
inc
cmp
xor
shl
loope
jmp
pop
xlat
or
pop
xor
mov
jae
sub
mov
adc
jo
fcmove
xchg
xchg
inc
mov
mov
in
rcl
sub
jle
jecxz
push
in
stc
inc
ins
mov
and
je
mulps
push
ins
pop
jg
mov
jp
rol
adc
mov
add
pop
inc
adc
jmp
dec
sbb
sub
adc
mov
loope
icebp
cs
rcr
stos
rcr
mov
pop
pop
scas
adc
retf
cld
ss
js
mul
jle
adc
adc
inc
pop
mov
add
daa
push
icebp
shl
mov
push
jmp
cmps
rol
into
push
pop
push
pop
(bad)
mov
test
jecxz
xchg
push
inc
loop
dec
mov
inc
mov
ficom
dec
add
mov
test
mov
dec
jecxz
(bad)
dec
xor
add
mov
jo
sbb
fwait
jl
daa
arpl
sbb
xor
stos
mov
outs
sbb
leave
out
xor
or
into
(bad)
cdq
dec
hlt
std
sub
aaa
xor
and
xor
shl
cmp
(bad)
fld
push
cmp
aaa
es
mov
xor
(bad)
push
rcr
sbb
jo
sbb
mov
or
sub
sub
call
ja
push
cs
inc
push
outs
cld
adc
sbb
add
aas
xlat
add
xor
es
pop
mov
(bad)
push
xchg
imul
pop
(bad)
mov
cld
loopne
sub
loop
std
add
push
sbb
dec
cwde
dec
push
test
scas
mov
xor
pop
adc
lahf
retf
ret
mov
repz
les
neg
(bad)
lock
dec
xor
inc
into
retf
pop
fs
pop
iret
xor
icebp
(bad)
pop
mov
pop
mov
add
adc
retf
int
fild
and
out
mov
sub
or
add
jo
jmp
mov
movs
std
mov
xchg
pop
in
iret
sbb
mov
jmp
jg
jmp
out
cmps
adc
imul
cmc
xchg
push
mov
inc
jmp
cwde
hlt
pop
cmc
lds
dec
adc
jne
xor
scas
mov
aad
iret
jmp
dec
xchg
jmp
push
and
lds
sar
add
xor
loopne
or
jnp
mov
jo
inc
jae
out
sti
loope
dec
xchg
mov
sbb
push
ret
loopne
dec
mov
dec
or
mov
ret
jno
outs
pop
push
ret
pop
out
jmp
jne
pop
shl
cmp
cmps
std
push
mov
test
xchg
xlat
sti
cmp
adc
jnp
xchg
test
fs
add
enter
int
ja
mul
jge
xor
ja
dec
lds
shl
movs
call
or
or
mov
aas
jns
or
dec
push
stos
add
mov
pop
cmp
cwde
cmps
sbb
call
jg
push
jg
sub
loope
(bad)
aad
shr
test
cmp
imul
out
in
mov
popa
mov
xlat
pushf
imul
jo
pop
pop
dec
in
aad
mov
jmp
fdiv
adc
aam
ins
in
pusha
jno
push
lods
dec
test
fiadd
into
cmp
add
stc
fild
push
pop
test
adc
loopne
jb
into
inc
pop
add
add
loopne
retf
inc
popa
cmp
icebp
ficomp
xchg
sti
dec
xchg
mov
sub
pop
mov
xchg
inc
push
pop
ins
imul
xchg
stos
mov
mov
xchg
mov
rol
add
mov
mov
pushf
sbb
daa
fild
cmp
adc
ss
fs
pop
loopne
ins
(bad)
push
mov
fcom
or
test
out
cmp
out
pop
test
push
mov
test
sbb
dec
arpl
mov
(bad)
imul
daa
dec
jae
or
rol
out
mov
aas
mov
bound
xor
ins
add
and
sub
cmp
out
and
mov
fcomp
pop
(bad)
xchg
imul
sub
icebp
ins
rcr
mov
(bad)
dec
mov
stc
ret
push
mov
gs
cmps
xor
push
xchg
jp
push
ins
xor
xor
mov
retf
pop
or
ficom
push
sub
mov
xor
repz
push
pop
mul
xor
mov
rcr
(bad)
inc
mov
xlat
repz
outs
dec
sub
adc
inc
cmp
ret
fiadd
fs
int3
jecxz
cwde
rol
mov
idiv
test
mov
shr
mov
test
(bad)
xchg
mov
out
sub
dec
std
mov
sbb
in
adc
dec
xlat
jecxz
dec
es
mov
mov
pop
je
xchg
jb
cli
pop
bound
in
adc
imul
mov
ins
pop
ins
mov
(bad)
push
data16
lahf
mov
mov
fild
inc
mov
sahf
test
jg
scas
add
out
sahf
mov
pop
push
mov
xchg
out
inc
mov
pop
or
fyl2xp1
push
cdq
clc
adc
inc
xor
fldz
xor
std
mov
sub
sbb
ins
test
nop
mov
mov
or
mov
les
add
inc
jae
push
push
shl
jge
(bad)
fdivr
push
inc
icebp
jle
aam
mov
jae
fld
mov
loope
leave
sub
adc
(bad)
mov
cmps
xchg
cmps
xchg
aaa
jmp
dec
or
(bad)
loopne
shr
loopne
cmc
push
inc
test
fdiv
movs
mov
mov
sbb
test
ror
jnp
push
outs
scas
sub
retf
repz
or
pop
test
push
fild
out
xchg
xchg
inc
sbb
fisubr
loope
dec
inc
dec
pop
cli
leave
push
(bad)
jge
mul
mov
jmp
scas
ins
pop
inc
lds
test
xor
retf
push
out
push
or
inc
out
jns
xor
sub
or
add
sar
(bad)
jmp
nop
into
pop
pop
and
cmp
imul
lea
sbb
sub
xchg
dec
std
loopne
sbb
sbb
xchg
add
pop
mov
sub
nop
pop
cli
jmp
je
jns
fucomip
adc
mov
out
popa
bound
or
push
fisttp
xchg
add
mov
adc
push
cwde
push
inc
call
lds
sub
int
push
inc
mov
add
sahf
add
jmp
popa
cdq
xchg
sub
in
add
outs
adc
jmp
(bad)
ret
pusha
jno
neg
aas
sar
cli
adc
mov
inc
and
shr
jno
das
adc
or
mov
push
add
pop
ret
repz
jno
cli
xchg
sub
sub
out
fcmovnb
aad
dec
pop
clc
mov
inc
cwde
es
icebp
dec
(bad)
stc
or
push
cdq
adc
mov
stos
pushf
cmps
cmp
xchg
dec
shl
stos
sub
daa
sub
addr16
sbb
or
adc
inc
cld
dec
in
xchg
mov
out
in
fwait
sbb
jle
sub
mov
mov
sub
and
xor
jg
lods
sti
int3
cmc
test
imul
push
sub
fucomip
stc
lea
push
push
pop
cmc
cmps
js
sbb
jno
leave
in
xor
pop
int
adc
mov
pop
dec
pop
sbb
enter
adc
nop
mov
mov
inc
std
pop
jns
xchg
sub
xor
cli
in
aam
inc
pop
mov
push
nop
inc
mov
cmp
push
cs
repnz
mov
int3
inc
aam
cmc
mov
(bad)
cmc
and
sub
test
or
jo
mov
or
pop
xlat
leave
mov
aaa
fs
xchg
pop
or
pop
xor
div
and
(bad)
adc
cmp
jg
adc
sahf
(bad)
call
pop
cdq
pop
mov
cmp
mov
xchg
mov
pop
lea
popa
or
dec
push
call
xchg
adc
dec
sbb
push
test
xlat
or
ret
dec
lahf
into
inc
ror
pmaddwd
mov
jmp
movs
inc
sub
add
mov
mov
add
cmc
push
xchg
sub
lahf
jno
add
call
test
test
fwait
xor
mov
inc
fwait
shl
xlat
into
imul
mov
xchg
rcl
and
xor
cld
call
outs
push
cmps
lea
xor
loope
or
dec
cld
call
mov
pop
jnp
sar
or
pop
xchg
in
in
mov
lahf
adc
xchg
cli
lods
(bad)
sbb
xchg
out
xchg
sub
imul
mov
push
jns
mov
jnp
or
inc
pop
cmp
cld
cmp
pusha
mov
movs
imul
cwde
add
cmp
inc
int
js
inc
fwait
into
jo
fldenv
outs
sahf
ins
jg
pusha
popa
pop
adc
psraw
sub
mov
repnz
mov
jne
lods
sbb
sahf
xchg
sbb
loopne
out
cmp
pop
inc
adc
es
rcl
rcr
ins
cmp
shr
jmp
mov
cmps
movs
test
inc
sahf
ror
shr
adc
(bad)
sbb
(bad)
fldenv
ja
dec
stos
cmp
and
mov
cwde
int
std
shl
add
outs
adc
jae
cmp
rep
inc
mov
pop
pop
pop
dec
out
add
arpl
lds
adc
aad
(bad)
lds
in
push
xor
jecxz
and
add
das
dec
xor
gs
xchg
sar
jno
xchg
mov
sbb
jp
leave
xchg
nop
(bad)
das
stos
(bad)
pop
sub
(bad)
mov
pop
sbb
mov
pop
dec
pushf
inc
pop
jmp
jne
mov
pop
cmps
gs
add
sub
and
rcr
mov
call
dec
jg
cmps
out
dec
(bad)
and
into
push
arpl
cmps
jge
mov
mov
ret
dec
nop
addr16
fdivr
jp
mov
mov
xor
cmc
lock
ds
push
das
cwde
div
push
mov
retf
inc
jbe
xor
jecxz
out
sbb
jo
ret
fnstsw
sbb
mov
pop
stos
clc
shr
pop
push
pop
and
and
mov
push
cmp
sub
cmps
mov
out
xchg
xor
aas
push
call
es
pop
push
(bad)
aas
push
rol
loopne
mov
mov
loop
fdivr
and
(bad)
jmp
outs
stos
jmp
ins
or
sbb
aam
mov
inc
pop
push
sbb
in
lods
pop
xchg
mov
pop
cdq
and
xor
push
dec
xchg
lds
aad
rol
dec
cmps
sub
cmc
and
dec
cmc
inc
push
fs
sbb
jae
and
out
sar
adc
sahf
mov
les
icebp
jno
add
les
call
add
fwait
mul
loopne
call
movs
dec
and
test
lods
sti
fwait
(bad)
and
mov
retf
jno
and
mov
mov
mov
and
cmp
es
je
lods
aad
retf
pop
push
sbb
adc
fdiv
sub
inc
cs
cli
sti
and
xchg
jno
rcr
push
cmp
inc
ins
das
sub
enter
sub
inc
dec
repz
dec
inc
sbb
mov
neg
ins
leave
and
int3
mov
pop
ins
fcom
jl
repnz
pusha
fstp
jmp
add
mov
leave
push
mov
or
retf
dec
jg
sub
xor
lds
das
repz
jmp
sub
jp
lea
aaa
mov
and
call
or
jge
mov
cmp
dec
into
fwait
mov
mov
inc
(bad)
sub
dec
push
dec
ret
jne
repz
mov
pop
sub
jge
xor
aaa
shl
jne
jecxz
fimul
call
arpl
mov
pop
ret
xor
fxch
popa
outs
cmp
leave
stc
cmp
in
sbb
dec
popf
sbb
leave
xchg
cmp
ret
popa
jnp
shl
or
mov
jg
jns
jmp
ds
add
fwait
call
pop
les
dec
xchg
xchg
jbe
or
hlt
cli
sbb
push
push
(bad)
aas
xlat
xor
sbb
and
add
sbb
push
movs
call
xchg
cmp
push
inc
xchg
add
pop
test
mov
mul
cwde
pop
xchg
mov
out
mov
mov
(bad)
mov
mov
add
dec
or
call
xchg
push
in
pop
mov
mov
inc
xchg
daa
call
sbb
sar
jecxz
outs
(bad)
repz
mov
aam
cdq
jbe
shl
or
call
cmp
push
pop
fwait
adc
sub
mov
scas
adc
or
test
xor
frstor
mov
outs
(bad)
out
div
mov
outs
(bad)
aaa
or
in
data16
scas
or
push
out
xchg
js
std
and
and
sbb
mov
xchg
sub
xchg
sbb
fdiv
inc
sub
mov
pop
jae
cdq
es
cmp
les
jp
jle
mov
outs
ins
and
mov
popa
dec
call
mov
jnp
cmp
fidivr
push
ret
mov
lock
sub
ror
or
xor
dec
pop
nop
mov
(bad)
lock
xor
js
test
rol
xor
dec
cdq
push
jnp
fmul
ror
lods
push
ret
dec
pop
and
push
sbb
ret
push
xchg
jmp
test
jb
pop
inc
pushf
cmps
jg
test
movs
fyl2x
les
jns
hlt
bswap
fbld
daa
test
or
push
fs
adc
out
jne
and
push
jmp
pop
jns
dec
loopne
in
ins
lock
popf
sti
mov
add
mov
mov
rcl
addr16
cmp
mov
inc
icebp
jne
push
jl
adc
mov
mov
xor
dec
dec
imul
mov
std
and
inc
fdivr
mov
cdq
adc
jae
popa
je
ficom
and
jne
fisub
movs
mov
inc
mov
xor
push
test
adc
clc
dec
ror
ja
loopne
mov
popa
cmp
aaa
dec
rol
ret
sub
push
in
pop
push
out
xor
mov
scas
sub
jmp
mov
rol
icebp
les
cmps
(bad)
stos
and
neg
jle
pop
test
sbb
jle
push
mov
mov
or
xor
ja
cdq
int
adc
outs
and
aam
sub
mov
pusha
add
jge
jecxz
xor
cmp
sub
fadd
fst
fiadd
cmp
sbb
xor
mov
(bad)
enter
fwait
jo
in
jnp
mov
and
aad
rcr
imul
out
xchg
push
mov
cmp
push
xchg
cdq
out
call
inc
mov
xor
mov
fild
(bad)
mov
cmc
mov
push
xchg
clc
cmp
jmp
pop
outs
arpl
pop
push
adc
jbe
push
sub
and
pop
repnz
out
mov
inc
xor
loop
mov
fwait
mov
data16
out
dec
outs
(bad)
mov
int
bound
sar
sbb
cmp
hlt
xor
dec
lea
jmp
push
or
ret
icebp
add
mov
ins
nop
xchg
inc
jmp
push
or
jle
mov
fnstcw
(bad)
jmp
mov
xchg
adc
push
inc
ins
jg
movs
mov
jecxz
int
ja
mov
pop
aad
sti
pop
jno
jno
ret
inc
sti
inc
add
add
lock
jb
mov
out
adc
xchg
push
or
gs
adc
aad
mov
dec
dec
xchg
loope
shl
cld
add
cmp
sub
adc
cld
test
dec
les
sbb
mov
inc
sub
iret
mov
xchg
int
add
repnz
aaa
fisub
push
shl
scas
and
js
push
fwait
add
addr16
sbb
(bad)
imul
cmps
dec
pop
les
xchg
mov
loop
das
imul
pop
push
or
dec
sub
cmp
jbe
repz
jo
jmp
jecxz
xchg
inc
pop
mov
sbb
xor
(bad)
aam
fs
dec
and
clc
push
inc
call
jmp
sub
jb
sub
jb
jbe
mov
dec
mov
rcl
or
pop
sti
call
or
mov
mov
jb
cmp
push
mov
lock
inc
add
outs
aam
inc
mov
test
xlat
(bad)
sub
(bad)
mov
jnp
(bad)
mov
test
mov
int3
mov
inc
dec
sub
and
inc
push
push
les
bound
and
imul
dec
and
imul
xchg
mov
sbb
adc
mov
adc
dec
push
jmp
cs
mov
and
leave
rol
ror
(bad)
sbb
mov
retf
mov
repz
(bad)
and
test
arpl
jge
ins
(bad)
call
shr
adc
push
xor
sbb
daa
les
mov
adc
cmp
sbb
mov
scas
and
push
fmul
fld
not
mov
and
jmp
es
cmp
imul
inc
in
sub
and
data16
std
loope
pop
popa
sub
sub
add
sub
sub
jne
adc
shl
inc
aas
test
pop
cmp
pop
icebp
and
add
scas
pop
jb
in
and
or
pop
pop
movs
call
loopne
shl
inc
les
mov
(bad)
or
repz
scas
arpl
arpl
jmp
jae
mov
or
call
loope
sub
pop
test
loope
adc
inc
fcomp
std
sbb
shr
stc
pop
popa
repnz
test
ja
xor
mov
inc
jae
outs
pusha
stos
call
mov
pop
hlt
fisttp
aas
loopne
sbb
mov
cmp
push
xchg
cmp
retf
aam
inc
jae
or
(bad)
rcl
xor
sub
cs
jl
mov
jne
(bad)
lods
ds
jp
dec
mov
mov
cmc
inc
xchg
inc
dec
jo
retf
fcom
xor
jl
fist
xchg
xchg
push
test
aaa
push
push
cmp
fcmove
xlat
sti
cmp
push
lds
mov
int3
mov
mov
enter
xor
push
out
neg
sbb
sar
mov
xchg
push
inc
sti
mov
adc
js
(bad)
out
xor
xlat
(bad)
dec
ror
xor
mov
in
(bad)
xchg
sbb
xchg
pop
or
ficomp
pop
rcl
mov
out
nop
sbb
sbb
enter
inc
aaa
int
mov
enter
fist
ficomp
leave
cld
cmp
out
mov
(bad)
test
mov
pop
loopne
jb
add
pop
outs
cmp
daa
add
mov
mov
cmp
stos
in
mov
lods
int
fmulp
scas
dec
jae
(bad)
pop
lock
ret
mov
and
or
pop
push
repnz
xchg
lock
(bad)
outs
pop
cmp
jae
imul
mov
jmp
add
push
imul
int
cmp
jle
inc
leave
cli
ret
ja
cmp
sub
pop
outs
or
(bad)
jg
sub
push
mov
leave
pop
cmps
lods
inc
in
and
and
mov
jg
add
cmp
add
mov
shl
or
xchg
push
add
test
or
sub
or
call
push
fistp
dec
inc
or
sub
scas
sub
or
jmp
std
mov
lock
stos
movs
sub
rol
int
inc
mov
jmp
out
cld
xor
or
imul
jp
sub
mov
sub
sbb
xor
add
pop
loope
sub
add
add
cmp
adc
and
lods
sub
sub
fwait
in
ss
loop
stc
rcr
imul
retf
fmul
cdq
fild
sbb
jecxz
adc
(bad)
mov
pop
imul
push
dec
xchg
adc
rcr
push
cli
or
pop
enter
je
es
fnstcw
dec
hlt
lods
inc
out
adc
ds
jg
bound
sbb
movs
aaa
data16
mov
arpl
gs
out
in
data16
sub
loopne
push
adc
mov
sub
or
dec
not
mov
in
pop
pusha
lds
mov
mov
js
cmp
xchg
sub
jmp
xchg
pop
loop
lea
and
adc
adc
and
sbb
ror
out
jnp
clc
cld
repz
jg
inc
mov
push
stos
mov
jno
push
pop
ja
icebp
xor
dec
lahf
cmps
ins
pop
inc
imul
rcr
repz
add
mov
(bad)
ds
out
pop
cmp
sbb
movs
cmp
or
mov
adc
jge
mov
dec
mov
popa
push
adc
mov
into
ficomp
push
daa
arpl
dec
test
shl
jl
xor
jb
jo
xor
ret
mov
push
or
push
push
(bad)
mov
inc
mov
fcmovne
or
mov
sub
popa
xor
sbb
dec
outs
jo
in
pop
call
rcl
retf
cmp
rcr
jbe
stc
into
inc
xor
cmp
adc
imul
adc
fcomp
mov
ror
ror
add
or
out
add
cmp
xor
cmp
mov
ret
pop
loop
mov
inc
sub
cmps
or
(bad)
sbb
into
jmp
xor
in
cmps
shl
pop
mov
push
adc
mov
jne
pop
imul
ficomp
mov
jg
push
pop
cmp
out
sbb
adc
cmp
and
pop
out
imul
mov
jo
or
mov
in
cmp
shl
sub
add
(bad)
or
mov
sbb
cmps
jns
ret
add
scas
cmps
cmp
jecxz
mov
enter
ins
sahf
out
icebp
(bad)
jmp
clc
and
bts
ret
and
pmulhuw
pop
cmp
popa
fst
xchg
jbe
jnp
mov
popa
shl
vmovupd
neg
mov
fucomi
mov
imul
ficomp
xor
push
pop
jbe
ins
xchg
add
lds
inc
test
mov
repz
sbb
sbb
es
ins
retf
push
outs
adc
sub
ja
xchg
or
add
out
sub
div
dec
xor
inc
pushf
cmp
nop
mov
imul
push
jl
outs
jge
stos
dec
sbb
sub
pop
fist
mov
cmps
jle
push
nop
addr16
xor
jae
(bad)
jle
das
dec
and
(bad)
idiv
mov
(bad)
outs
loopne
xchg
out
in
fnstsw
daa
xlat
mov
aas
aaa
mov
callw
cs
cmovnp
daa
fld
jl
jle
mov
loop
mov
fwait
ins
shl
inc
movs
in
add
dec
jo
xor
lods
jl
add
cmps
add
sub
ret
pop
in
je
add
cmps
xchg
push
mov
stos
test
xchg
mov
popf
out
imul
cli
nop
mov
jmp
fsubr
gs
jmp
icebp
call
mov
iret
sbb
inc
cli
jo
test
mov
call
add
in
fcomip
mov
pop
clc
jmp
call
xlat
mov
mov
jg
fisubr
add
dec
jns
add
sub
ds
add
(bad)
and
arpl
push
fist
(bad)
fadd
(bad)
cmp
ret
cmp
dec
test
lahf
cmps
push
cld
shl
shl
(bad)
push
adc
add
jl
xor
in
dec
pop
into
mov
sti
xchg
repz
pop
out
ret
into
test
div
lock
pop
shl
add
or
and
es
and
(bad)
imul
sub
pop
adc
cwde
data16
and
xor
cmp
mov
dec
arpl
pop
js
dec
pop
xchg
stos
mov
xchg
cld
fstp
add
mov
push
pop
imul
cmp
loop
call
jns
lahf
mov
adc
xor
js
cld
jns
icebp
push
ja
adc
xor
inc
jns
lahf
leave
leave
cmc
stos
in
sub
or
jl
pop
(bad)
test
or
mov
int3
mov
jnp
fidiv
mov
call
data16
addr16
xchg
jl
mov
int
ror
sub
sub
dec
dec
xchg
ins
mov
pop
pop
cmp
in
loope
shr
sub
loopne
mov
or
and
xor
add
arpl
xchg
pop
shl
mov
pop
add
pop
sbb
fxch
add
mov
mov
add
mov
jmp
xor
stos
mov
into
and
sub
or
cmp
xchg
jns
movs
push
iret
pop
push
and
loopne
dec
sahf
pop
add
xor
je
xor
faddp
(bad)
ins
mov
inc
adc
jge
call
inc
sub
add
(bad)
gs
hlt
nop
and
(bad)
xor
loop
popa
jle
jmp
sub
dec
loope
adc
repnz
in
xchg
(bad)
or
(bad)
and
push
and
cmc
sub
popa
push
jg
xchg
ds
inc
lds
in
sbb
mov
sbb
jp
into
shl
pop
xchg
test
xchg
add
je
cdq
inc
sbb
adc
aas
scas
ins
in
aas
inc
xchg
and
push
pop
popa
bound
adc
in
in
jne
ja
xor
push
sub
xchg
xor
retf
aas
sub
dec
inc
hlt
arpl
jbe
popf
iret
xchg
mov
mov
cmp
pop
fadd
add
shr
and
sbb
and
ret
xchg
(bad)
mov
push
xchg
add
in
pop
jnp
adc
movs
jae
xor
adc
aaa
ret
or
popf
dec
outs
inc
inc
adc
lea
sti
xchg
ss
mov
inc
jae
or
sbb
retf
dec
mov
xchg
sub
mov
(bad)
or
sar
retf
iret
mov
push
push
mov
arpl
shr
out
arpl
or
test
(bad)
lods
push
pushf
fimul
sti
push
and
popf
push
push
mov
mov
xchg
xchg
lods
cmp
xchg
ja
or
lahf
adc
mov
sbb
sub
stos
xchg
jecxz
xchg
xchg
jo
lahf
das
cld
je
mov
adc
movs
xchg
jno
movs
adc
xchg
stos
jns
ds
imul
data16
enter
push
arpl
mov
dec
ja
leave
jns
(bad)
lahf
jmp
mov
adc
std
adc
pop
shr
inc
or
nop
ins
pop
adc
dec
popa
inc
mov
add
jae
push
add
or
dec
std
jle
xor
mov
mov
into
cmp
jecxz
ss
daa
mov
mov
or
outs
fimul
(bad)
int3
xchg
push
lods
ret
imul
jo
jno
xchg
mov
push
and
iret
js
mov
fwait
je
stos
sbb
lea
std
cmp
mov
inc
cmp
imul
add
mov
adc
addr16
retf
cmp
or
pop
adc
inc
inc
pusha
adc
idiv
add
mov
neg
aad
jnp
loope
xor
ins
ffree
test
jmp
mov
pop
inc
jl
neg
pop
lahf
mov
push
xchg
in
or
out
aaa
loop
pop
adc
push
xor
jnp
in
shr
rcr
test
and
push
inc
inc
jae
jbe
sbb
sub
pop
pop
pop
jp
push
dec
mov
mov
pop
xor
fld
jp
adc
stc
imul
gs
jo
jmp
repnz
(bad)
cmps
popf
mov
lds
in
inc
femms
cmps
inc
push
aad
clc
push
ficomp
popa
out
inc
push
add
ins
call
movs
and
out
outs
sbb
(bad)
rcr
loope
adc
xor
stos
xchg
(bad)
jmp
push
cmc
sbb
icebp
mov
or
cdq
in
jbe
mov
cmp
mov
int3
adc
mov
inc
(bad)
in
dec
push
jmp
cmps
fld
int3
stos
lea
ret
add
ficomp
ja
clc
mov
lods
push
out
xor
xor
mov
outs
dec
push
push
sub
arpl
xchg
pop
jne
lea
mov
mov
sbb
not
cmp
ss
jp
push
dec
sub
leave
pop
sub
sbb
rol
cld
es
ds
xor
xor
jno
adc
mov
push
mov
or
aam
mov
push
clc
pop
in
jbe
mov
test
mov
neg
stc
aad
add
int
jl
shl
in
mov
fdiv
xchg
mov
mov
shl
cli
cmp
daa
fcomp
int
mov
test
pop
in
pop
daa
mov
jbe
int3
shl
jge
xchg
xor
lahf
sub
inc
jl
sbb
add
in
outs
call
mov
inc
(bad)
in
nop
in
jno
pop
mov
arpl
inc
in
mov
push
jo
icebp
(bad)
in
(bad)
mov
xchg
or
xchg
xor
mov
cmp
mov
xor
sbb
fild
shr
fwait
add
xor
je
pop
bound
inc
test
(bad)
test
and
xchg
sbb
arpl
fsin
inc
xchg
imul
inc
or
(bad)
jb
and
imul
dec
mov
scas
dec
mov
cli
mov
cmp
ror
fistp
stos
sub
in
mov
mov
repz
cmp
push
xchg
imul
inc
cmps
fiadd
xor
cmp
js
outs
push
push
adc
or
or
adc
mov
sbb
mov
shl
mov
jmp
pusha
aad
xchg
mov
xchg
repnz
xchg
inc
jmp
ds
inc
into
popa
add
gs
std
out
push
adc
out
mov
lea
sbb
dec
sbb
xchg
loope
jae
push
dec
ins
imul
out
lahf
pop
add
inc
pop
call
fcomp
sbb
cmp
dec
pop
jge
in
dec
sbb
ins
push
pop
fidiv
repz
or
retf
test
xor
repnz
jl
jb
xor
mov
pop
cmp
push
cmps
mov
dec
xor
(bad)
hlt
repnz
rcl
addr16
icebp
push
lock
push
add
lock
sub
xor
bound
or
cmps
inc
outs
xor
bound
cmp
test
push
jae
sbb
addr16
sbb
aas
aaa
xchg
daa
xor
lahf
cmp
mov
push
jo
push
jno
outs
push
retf
push
enter
sbb
jle
(bad)
pop
cmc
jl
push
cli
iret
out
lods
psubusb
inc
mov
add
(bad)
xlat
test
and
sub
mov
mov
fist
cmp
and
mov
ret
repz
pop
pop
popf
addr16
ins
sbb
pavgb
mov
push
das
xchg
pop
jp
jne
xor
xor
jp
or
pop
xchg
push
std
lea
cmp
scas
repz
leave
push
jmp
imul
push
adc
jo
pusha
inc
shr
pop
xlat
(bad)
ds
loop
and
fwait
(bad)
jne
pcmpgtd
dec
mov
add
pop
outs
icebp
push
adc
inc
mov
call
das
pushf
jg
mov
and
xor
add
push
ror
cld
mov
out
xor
int3
pop
test
xchg
movs
mov
mov
dec
dec
jle
pop
jb
sbb
hlt
mov
out
int3
sub
std
mov
(bad)
(bad)
or
cmp
adc
dec
fisub
sub
add
xchg
test
cmp
adc
ss
dec
test
scas
test
cmp
loop
add
or
inc
jnp
cli
adc
cmps
movs
arpl
xchg
aaa
sub
es
ret
pop
test
out
xchg
cs
dec
int
loop
sub
or
shl
out
shl
imul
fstp
mov
int
movs
addr16
mov
sub
xor
enter
ss
stos
out
xor
and
icebp
xchg
mov
mov
cmp
icebp
jne
loopne
ss
dec
push
mov
into
scas
push
sbb
add
clc
push
mov
int3
jge
or
daa
in
adc
mov
sbb
addr16
arpl
xchg
fisubr
ins
ds
arpl
pop
outs
mov
adc
push
xor
xchg
mov
(bad)
mov
into
sub
mov
mov
je
icebp
sbb
jnp
stos
mov
nop
fdiv
ret
jae
jecxz
je
jo
lds
jp
out
pop
mov
pop
adc
jne
cli
jmp
sub
(bad)
mov
dec
xor
pushf
sbb
jnp
xchg
mov
ficom
adc
fiadd
adc
and
xchg
mov
mov
jmp
out
jo
aaa
popa
jmp
movs
adc
mov
pop
mov
stc
mov
jg
arpl
movs
fdivr
mov
jnp
adc
lods
mov
and
mov
mov
movs
mov
in
loopne
cmp
push
call
adc
data16
hlt
cld
xchg
je
outs
inc
jns
sub
mov
cmp
xor
(bad)
push
push
xor
sbb
repnz
mov
mov
fdivp
jae
fdiv
pusha
das
mul
and
mov
stos
idiv
jno
out
cmp
add
inc
pop
stos
add
mov
stc
push
or
(bad)
ja
add
xlat
mov
out
outs
mov
aaa
xor
pop
icebp
jns
mov
sub
js
xchg
jne
out
test
sub
inc
into
mov
pop
ror
test
call
jb
adc
adc
in
icebp
cmp
mov
sti
dec
xor
xchg
leave
pop
dec
or
shr
inc
(bad)
lahf
pop
jns
and
inc
int3
rcl
stos
inc
pop
or
retf
xchg
popa
daa
sbb
inc
adc
mov
fistp
push
pushf
pop
aas
imul
mov
xor
hlt
push
adc
sbb
imul
lock
retf
xor
retfw
fwait
lahf
in
inc
bound
in
ret
cli
shl
cwde
cld
scas
cmp
dec
inc
sub
lods
ins
xchg
stc
repnz
test
pop
cs
lock
add
enter
rcr
inc
gs
dec
punpckldq
cmps
pop
cdq
mov
mov
int
jns
popf
add
rol
pop
push
pushf
jno
pusha
dec
cmp
sub
test
sub
sahf
cld
xchg
cli
scas
int3
mov
scas
xlat
and
dec
push
lea
je
ss
mov
pop
jbe
cld
test
and
clc
hlt
jge
and
inc
repz
and
(bad)
rcl
mov
mov
loop
hlt
sbb
aam
mov
js
std
inc
ja
cmp
and
arpl
dec
adc
iret
xor
mov
and
fist
inc
add
inc
xor
(bad)
daa
cmp
outs
cwde
adc
push
xchg
shl
outs
and
mov
sbb
pop
pop
and
icebp
cmps
fs
in
data16
(bad)
xor
aas
mov
jno
push
pop
je
dec
xchg
popa
xchg
sbb
dec
xor
jge
push
(bad)
das
pop
adc
fistp
in
push
mov
repz
add
mov
mov
sub
mov
inc
cmp
add
fdiv
xor
(bad)
mov
imul
adc
fld
push
imul
fstp
lds
mov
lea
sub
add
outs
adc
test
sub
outs
and
and
iret
jnp
enter
xchg
jnp
mov
std
and
std
or
in
xchg
dec
arpl
xor
jnp
inc
xor
rcl
xor
cmp
retf
pop
and
call
jge
mov
je
push
ret
mov
jle
mov
xchg
stc
test
es
ret
adc
loope
pop
sub
sbb
popa
mov
mov
mov
dec
test
mov
or
(bad)
cmps
xor
xor
mov
cmp
gs
pop
cmps
cmp
mov
inc
add
inc
push
jg
lods
jp
xor
les
pop
test
ins
cmp
(bad)
cwde
push
push
lods
lds
sub
neg
push
scas
and
xor
jge
dec
iret
cmp
dec
daa
fbld
popa
(bad)
pop
leave
inc
mov
hlt
inc
xor
dec
sti
cmp
xor
and
add
shr
xchg
xchg
daa
jmp
xchg
out
ret
cmp
xchg
addr16
lds
ja
dec
mov
inc
cmc
xor
adc
jp
fld
inc
mov
mov
repz
mov
dec
scas
rcl
jo
sbb
xchg
and
push
sub
mov
call
(bad)
jg
and
and
rol
xchg
sbb
ret
bnd
sar
mov
outs
(bad)
std
dec
lds
xchg
adc
cmp
sub
fiadd
loopne
mov
lods
sbb
stc
mov
adc
mov
cmp
inc
inc
sti
adc
outs
fistp
ret
mov
jae
inc
aas
or
cmps
dec
ins
pop
inc
sbb
xlat
xor
out
aam
cs
pop
idiv
mov
xor
cmp
cld
sti
xor
sub
or
inc
inc
jecxz
fnstenv
mov
cmps
push
mov
and
mov
jge
dec
cmp
adc
add
sbb
int
in
add
into
cmp
mov
and
cli
mov
push
push
cmp
jmp
jle
jne
in
shl
xchg
pop
fucomip
imul
or
aam
push
or
aad
mov
inc
gs
xchg
out
push
stc
lods
inc
data16
mov
mov
sub
aas
or
icebp
mov
jnp
idiv
repnz
out
xchg
test
and
mov
sti
in
nop
jmp
mov
pop
ins
cli
mov
mov
(bad)
push
or
arpl
scas
mov
loop
mov
je
cmp
jae
(bad)
sub
mov
cmp
test
push
or
sbb
jnp
stos
mov
ins
mov
mov
pop
loop
mov
mov
data16
int
js
jl
add
outs
clc
pop
out
fstp
lock
aad
(bad)
jnp
mov
(bad)
pop
aam
jbe
cmp
je
jb
out
fnstenv
xchg
imul
xor
in
jbe
xchg
es
imul
cmp
shl
cs
lods
jl
das
mov
rol
cmp
imul
sbb
fist
or
cmp
pop
scas
fild
cmp
mov
fs
int
xor
add
fiadd
out
int
pop
mov
test
push
loope
xor
and
loope
and
(bad)
xor
mov
sbb
gs
xlat
lock
ret
(bad)
out
(bad)
(bad)
xor
dec
sub
test
dec
xor
xor
(bad)
and
add
mov
dec
mov
out
xor
xchg
inc
retf
sbb
pop
aas
scas
sub
xor
mov
cmp
xor
scas
pop
scas
sbb
and
mov
div
dec
and
sub
loop
popa
ins
out
xchg
cli
test
mov
test
cmp
scas
out
mov
cwde
repnz
jbe
jmp
mov
push
(bad)
cmp
mov
cmp
or
push
sti
(bad)
adc
in
add
mov
xchg
push
aam
fidiv
rcr
js
lea
loop
xor
pop
movs
std
sub
into
stos
pop
inc
ficomp
xchg
cdq
xchg
hlt
cld
in
call
sub
data16
loop
and
icebp
ret
loop
adc
mov
sub
mov
sbb
sub
inc
ins
pop
sahf
xchg
aas
fbstp
out
push
in
repnz
sub
out
popf
loopne
shl
(bad)
jno
fcom
inc
jae
sahf
in
push
addr16
dec
sti
in
jmp
xor
mov
push
test
inc
js
inc
cmc
sub
lahf
aam
ja
popf
and
movs
or
cli
ds
and
or
ins
aam
dec
mov
movs
ret
dec
leave
push
push
out
mov
jno
adc
pushf
int3
xchg
inc
sbb
jne
loope
psubsb
inc
push
fwait
sbb
and
or
movs
std
dec
repz
or
test
lods
les
dec
inc
sub
ror
enter
dec
xchg
dec
or
add
mov
sbb
sbb
mov
cmp
cmp
shr
inc
jge
das
xor
or
mov
inc
add
pop
popa
mov
jge
fsubr
and
imul
lahf
into
push
mov
ficom
dec
cli
test
cwde
or
aad
dec
push
sub
in
sub
neg
dec
icebp
dec
mov
lahf
and
mov
ds
adc
xor
pop
pop
call
fwait
les
sub
inc
or
test
test
sub
sub
mov
lods
sbb
jle
sub
mov
and
jnp
or
sub
jno
sub
pop
fldcw
pop
xor
mov
addr16
push
xor
out
popf
imul
xchg
aad
cli
scas
mov
out
fwait
inc
daa
dec
cwde
jno
xchg
and
mov
aaa
into
inc
mov
mov
adc
call
cmc
outs
push
inc
(bad)
dec
cmc
nop
inc
push
jbe
mov
outs
cdq
leave
push
inc
ud1
add
xor
sub
xlat
aad
mov
mov
pop
das
neg
adc
in
sub
jmp
jbe
imul
aad
sub
cmc
cmp
dec
ja
addr16
jp
iret
int
loope
ret
in
(bad)
jl
inc
(bad)
sub
std
cmps
pop
pusha
inc
xor
mov
mov
and
pop
push
mov
sub
fcom
mov
xor
cmps
pop
das
les
fist
fs
cmp
lods
xchg
mov
scas
jp
addr16
mov
in
sub
and
sub
dec
mov
ret
test
int3
lea
out
mov
inc
fldlg2
mov
dec
cli
(bad)
wrmsr
ror
dec
jle
enter
cld
dec
clc
xchg
jns
cmc
shl
shl
fistp
cdq
and
and
cli
dec
adc
outs
cmp
fsubr
int3
dec
ins
cmp
ss
cld
ins
or
jp
aam
xchg
(bad)
clc
aaa
and
retf
fistp
push
daa
xchg
sahf
xchg
or
mov
test
into
iret
(bad)
les
cs
or
rcr
add
out
jbe
out
shl
or
popf
mov
mov
cmp
repz
aam
and
mov
mov
inc
jg
mov
loope
mov
leave
xor
and
adc
dec
jle
adc
lods
cmp
mov
jg
and
or
imul
xchg
imul
into
push
xor
test
and
adc
pop
dec
ins
push
mov
xchg
in
or
retf
mov
test
stos
adc
out
out
test
hlt
xchg
jge
mov
into
inc
repnz
or
scas
push
stc
pop
dec
jg
(bad)
sti
sub
stos
jno
push
pop
shl
adc
(bad)
(bad)
sub
cmp
mov
jno
pop
pop
xchg
int
xchg
push
sahf
jle
fs
jg
pop
mov
mov
fidiv
adc
fld
mov
jge
or
xchg
and
lea
(bad)
fs
push
adc
inc
cmp
push
jbe
inc
ss
lock
les
push
jo
test
xchg
jnp
xor
out
fiadd
in
fs
(bad)
popf
inc
test
into
outs
jge
xor
ds
or
mov
ret
push
fdivr
stc
pop
div
into
fcmovnb
mov
mov
jle
cdq
mov
jo
jg
mov
or
jnp
aad
imul
fidiv
hlt
mov
mov
hlt
add
scas
mov
test
(bad)
in
les
push
add
out
mov
or
add
out
(bad)
and
pusha
cmps
dec
pop
add
sub
imul
fadd
fadd
xor
sub
adc
or
dec
ret
pushf
xor
jmp
mov
adc
xchg
push
cmp
inc
in
jge
cmp
push
test
pop
and
arpl
(bad)
fs
ds
test
inc
lds
int3
and
and
bound
cmc
sbb
sbb
out
scas
outs
ror
sub
rcl
call
stc
mov
ficomp
dec
and
add
inc
das
lds
jbe
aad
dec
adc
adc
and
xchg
mov
push
xor
mov
cmps
jl
stos
aam
nop
shl
pop
or
ins
adc
fsub
and
add
pop
sti
mov
out
mov
xor
jp
or
adc
mov
and
imul
es
jecxz
push
gs
in
pop
enter
dec
setbe
sub
aad
lods
mov
test
test
lock
scas
pop
(bad)
jle
ins
jo
out
inc
sti
xor
xchg
rol
push
loop
jge
push
xchg
push
pop
cmp
fstp
jne
scas
mov
mov
cmp
(bad)
jno
loop
mov
mov
test
push
test
sbb
xchg
cmp
mov
daa
cli
in
stc
jmp
inc
int3
pusha
jmp
out
loopne
(bad)
dec
sahf
adc
mov
sbb
or
lds
dec
outs
pop
mov
fcom
add
out
in
mov
cmp
pusha
or
ja
or
movs
mov
or
add
xor
int3
gs
jns
xor
dec
stos
loop
ja
fabs
sbb
out
movs
mov
daa
dec
lea
outs
xchg
movs
das
inc
scas
fs
imul
inc
add
jbe
jmp
cdq
cdq
push
bound
shl
xor
mov
xchg
adc
je
scas
add
retf
mov
idiv
push
lahf
daa
cmp
fwait
out
jp
cmp
inc
cmps
or
sub
test
sar
pusha
cld
cdq
jb
lds
jle
lea
and
mov
in
pop
inc
rcl
jnp
dec
sbb
mov
jns
add
imul
pop
dec
inc
sbb
(bad)
mov
es
data16
imul
jnp
inc
scas
retf
(bad)
jl
leave
rcr
mov
scas
fimul
push
inc
pop
inc
ja
sub
mov
aad
adc
jg
ja
mov
pop
stc
sbb
mov
and
adc
(bad)
jne
daa
pop
stos
and
mov
adc
pop
and
ret
ja
rcr
pop
xlat
imul
cmp
outs
fimul
inc
xchg
add
sbb
(bad)
dec
sub
rol
ja
xchg
cmp
leave
cmp
cmp
xor
test
mov
in
push
mov
es
jg
push
xchg
shl
repz
jl
ret
mov
scas
movs
sbb
sbb
mov
lds
(bad)
outs
fnstsw
dec
mov
pop
sub
aas
stos
std
sti
mov
aas
pop
imul
xor
cmps
fadd
mov
and
mov
mov
and
cmp
sbb
sub
stc
mov
add
xor
pop
dec
ins
jle
push
cmp
aas
xchg
div
sub
and
mov
mov
test
dec
jecxz
pop
fmul
(bad)
mov
jecxz
mov
lods
xor
pusha
popa
xor
dec
fadd
cmp
rcl
iret
dec
mov
cmp
or
imul
and
leave
ret
retf
add
jp
stos
sub
fnstsw
leave
cmc
mov
js
push
test
push
loopne
imul
fisttp
int3
cmc
shl
stc
sbb
nop
adc
jmp
out
adc
pop
retf
sbb
mov
mov
out
scas
dec
pop
xor
pop
out
dec
(bad)
adc
mov
mov
add
adc
int3
mov
or
mov
ds
push
cli
sbb
add
in
fld
push
(bad)
mov
out
pop
arpl
nop
pop
add
out
xchg
mov
pop
cmps
outs
pop
add
xor
test
sub
rol
xchg
sub
add
xchg
mov
sub
ret
cs
dec
sbb
or
or
movs
cmp
inc
pop
push
retf
ret
push
pop
imul
jge
and
cli
in
push
aas
mov
mov
or
fisubr
idiv
popf
outs
jle
pop
jb
adc
push
pop
adc
ret
xchg
scas
sti
jbe
push
pop
mov
movs
pop
fisttp
rol
clc
mov
and
cmps
inc
pop
dec
and
mov
and
sbb
add
mov
aam
sub
nop
gs
test
jl
inc
inc
hlt
adc
xlat
xchg
loop
inc
mov
pop
mov
xchg
inc
xchg
call
and
outs
mov
cmp
dec
sbb
jmp
jno
icebp
xor
dec
or
adc
push
pop
popa
mov
out
movs
rol
adc
(bad)
xor
cmp
sbb
fsub
adc
push
or
in
sub
sbb
mov
sbb
xor
and
loopne
stos
pop
pop
test
aas
dec
cli
sbb
push
sub
pop
dec
ss
imul
mov
mov
fidiv
lds
dec
sub
leave
loope
sub
cmps
push
stos
sub
mov
xchg
jo
movs
cdq
shl
cwde
ret
pop
icebp
sbb
and
dec
mov
int
addr16
push
add
mov
clc
cmp
xchg
retf
test
jnp
push
nop
jge
pushf
sub
ret
jb
jno
sbb
mov
adc
test
mov
push
jmp
loop
xor
jb
mov
xor
jb
retf
mov
cs
and
xchg
jecxz
fld
sbb
(bad)
sub
nop
mov
outs
mov
imul
stc
mov
add
add
mov
dec
xchg
fist
xchg
cmp
jns
jmp
pop
pop
repz
nop
sub
js
aaa
movs
xchg
jmp
sbb
cs
stc
js
sbb
sbb
sti
nop
adc
xchg
fisttp
rol
popa
fwait
adc
mov
mov
lods
dec
push
inc
adc
jb
adc
mov
mov
mov
test
inc
jbe
cmovl
mov
mov
sub
add
push
and
sbb
das
inc
sbb
inc
xchg
std
dec
mov
out
xor
xchg
out
pop
mov
cmps
mov
push
lahf
stos
or
rcl
push
cmps
les
rcr
adc
cmp
fsubr
daa
push
dec
inc
sar
test
jecxz
lods
fbstp
cmp
int
mov
loope
cmp
pop
mov
and
sbb
push
jnp
sbb
or
adc
movs
movs
xor
push
lahf
loopne
sar
sub
inc
aaa
and
mov
jo
jae
add
adc
inc
push
fbld
pop
jmp
or
jae
sub
sbb
sub
cmps
cmp
add
sub
mov
(bad)
(bad)
mov
je
(bad)
mov
in
aas
outs
imul
jno
inc
fisub
xor
out
loopne
dec
lds
js
pop
sbb
ret
das
pop
push
(bad)
movs
push
in
icebp
mov
mov
jmp
jae
div
repz
pop
mov
cmp
pop
stc
cmp
pop
mov
stc
adc
mov
or
in
push
rcl
push
mov
aam
xor
dec
fimul
popf
jg
in
sbb
mov
bsf
je
shr
(bad)
cmp
sub
icebp
push
inc
out
mov
mov
jbe
into
mov
or
cmp
rcl
jmp
or
rol
mov
xor
jge
inc
mov
pop
jle
stos
call
xor
(bad)
mov
les
inc
sbb
clc
shl
imul
je
aam
mov
iret
and
aad
mov
dec
out
pop
inc
rcl
mov
in
and
sbb
xor
scas
inc
or
adc
sub
mov
cmp
fsub
out
adc
mov
inc
inc
imul
push
jmp
stc
(bad)
(bad)
scas
js
ja
sub
inc
xlat
hlt
sbb
xchg
repz
xchg
pop
cmps
jnp
test
bound
ret
aas
pop
fcomp
mov
xchg
mov
jle
fwait
retf
ja
hlt
jnp
nop
stc
mov
loopne
rol
or
xor
mov
mov
cmps
test
cwde
lds
mov
test
call
loop
into
dec
cdq
ins
push
loop
in
sub
jnp
jge
lock
dec
and
jns
add
sbb
stos
cld
jo
jmp
not
dec
test
nop
inc
lock
adc
(bad)
jecxz
adc
stos
sub
aas
inc
and
push
mov
ds
mov
(bad)
ss
pop
jmp
xor
sbb
sub
call
arpl
call
inc
adc
mov
ret
leave
push
int
cs
dec
pop
pop
mov
daa
push
mov
(bad)
push
pop
add
inc
dec
gs
adc
jle
mov
pop
ins
cmc
xor
xlat
mov
cwde
dec
inc
xchg
cmp
dec
cmps
xlat
out
outs
arpl
cdq
mov
push
fldcw
test
mov
scas
adc
or
mov
pop
sbb
adc
imul
inc
jns
gs
jnp
or
in
add
jns
or
pop
jnp
pushf
sti
scas
lods
mov
div
ds
test
xchg
dec
xor
sbb
adc
inc
fwait
mov
push
jne
rcl
shr
dec
and
inc
pushf
add
mov
stos
mov
mov
xor
and
mov
sub
sub
xlat
syscall
les
cmps
out
and
xchg
pop
shl
push
push
lock
cmp
cld
cmps
jmp
lods
jg
jnp
xor
jp
mov
loopne
pop
in
sbb
stos
hlt
and
bound
push
pop
fisttp
fmulp
and
and
das
in
in
fwait
lods
sbb
iret
aaa
mov
xchg
retf
jbe
push
sbb
stos
jbe
xor
ins
xchg
adc
stc
aad
call
dec
retf
(bad)
out
test
mov
pop
repz
(bad)
xor
add
fst
(bad)
(bad)
jg
fmul
aad
call
pop
mov
jle
cwde
sbb
clc
jmp
push
popf
jge
xchg
and
xchg
xlat
adc
arpl
sub
repz
into
int
xlat
mov
rcl
mov
das
xlat
je
push
mov
or
jne
sti
mov
xchg
stc
outs
mov
mov
mov
out
sub
sub
and
in
cmps
movs
fstp
cmp
sub
push
jne
retf
dec
pop
ror
sahf
loope
adc
jmp
fsubr
mov
outs
mov
or
xchg
lods
(bad)
retf
or
call
popf
imul
ss
rcl
mov
jne
mov
fimul
xchg
pushf
jmp
pop
int3
or
adc
fwait
in
call
adc
fwait
ret
jmp
mov
out
add
dec
es
cmps
ret
std
xchg
or
or
nop
dec
(bad)
xchg
fs
mov
jno
popf
in
sub
cli
mov
sub
pop
aas
outs
dec
sti
imul
and
or
outs
aam
in
in
int3
inc
jp
not
lock
iret
sub
or
jge
pop
xchg
push
pushf
mov
xor
int3
test
daa
fmul
retf
clc
push
loop
imul
xchg
and
jns
fwait
and
ret
lock
jl
ja
or
test
repnz
xchg
ja
call
pusha
loop
add
or
jno
and
cmp
jae
int
inc
jmp
dec
dec
lods
mov
jp
push
mov
adc
or
adc
shl
cmps
mov
add
daa
adc
nop
ins
sub
push
xchg
sbb
(bad)
adc
sbb
inc
inc
retf
adc
ror
(bad)
cld
lahf
call
rcl
jne
movs
mov
add
inc
mov
ret
adc
xor
inc
push
(bad)
jb
repnz
and
mov
repz
dec
mov
sub
scas
jle
mov
(bad)
adc
fucomp
cmps
das
ins
pop
push
ds
jmp
iret
mov
and
loop
jnp
jb
in
js
xchg
ret
mov
sbb
fdivr
xchg
outs
pop
inc
hlt
add
lds
popa
repnz
mov
fstp
mov
lahf
xchg
mov
add
mov
mov
mov
pop
push
sti
psrld
pop
xchg
adc
shl
fcomp
sub
mov
jns
push
or
dec
push
outs
es
popa
mov
adc
mov
out
sbb
es
jae
(bad)
adc
ins
and
ja
push
sbb
or
loope
fimul
add
daa
(bad)
test
inc
mov
xor
xlat
or
mov
das
mov
scas
(bad)
in
mov
cld
ror
stos
xor
loope
or
mul
int3
cdq
mov
xchg
add
jp
xor
in
and
pusha
lea
cmp
lahf
adc
pushf
cs
out
inc
pushf
dec
mov
out
and
ja
pusha
test
std
inc
fsub
and
daa
ret
xchg
sbb
push
or
cwde
arpl
fs
mov
test
xchg
retf
jb
xor
inc
in
xor
mov
rol
jnp
sahf
fldcw
push
add
stc
sti
arpl
dec
mov
mul
leave
xchg
dec
xchg
inc
shl
or
add
int3
test
cmps
jmp
xchg
pop
push
xor
(bad)
loopne
imul
pop
inc
add
mov
shl
aad
push
call
test
test
sbb
ror
fidivr
in
jne
aaa
add
test
(bad)
mov
push
scas
adc
and
fdiv
cmp
cmc
dec
and
mov
pusha
sbb
jae
mov
movs
mov
xor
push
clc
imul
outs
mov
lods
pushf
imul
pop
xchg
out
lock
xchg
aad
fwait
add
ror
push
aad
dec
jno
adc
mov
jle
jle
sub
sbb
and
adc
xor
cs
adc
bound
iret
bound
and
fst
aaa
jmp
fsub
dec
loope
xchg
or
cmp
retf
(bad)
jp
sub
cmp
xchg
cld
dec
sub
stos
dec
mov
bound
mov
(bad)
sbb
xchg
in
retf
inc
cld
xchg
ja
ja
(bad)
jecxz
and
addr16
mov
or
pop
mov
inc
fmulp
mov
pop
test
rol
lods
mov
mov
ins
jno
test
cmps
cmp
mov
outs
je
pop
pushf
(bad)
adc
xor
sti
and
jl
neg
cmc
imul
dec
scas
pop
mov
add
frstpm(287
loopne
xchg
cmp
rdmsr
in
sbb
cmps
adc
sub
dec
mov
fbstp
pop
fcom
pushf
inc
ret
cli
pop
xor
test
mov
mov
mov
pop
(bad)
push
(bad)
aad
ret
cs
ss
clc
xchg
sub
jbe
in
push
lock
jge
add
int3
jecxz
push
js
mov
mov
enter
jg
out
lea
js
test
xchg
stos
test
and
je
imul
jnp
xor
les
fnstcw
add
jl
or
icebp
pop
or
(bad)
cmps
(bad)
cmp
push
sbb
data16
push
pop
ins
cli
mov
adc
pushf
jmp
push
(bad)
push
mov
sbb
je
mov
mov
and
dec
sub
(bad)
mov
add
adc
dec
mov
sbb
jae
mov
fsubr
jmp
(bad)
mov
and
(bad)
mov
sbb
(bad)
mov
pop
faddp
sub
xchg
adc
mov
fld
aam
lahf
(bad)
sbb
pop
inc
push
js
lods
mov
std
mov
mov
call
test
iret
retf
push
push
test
sahf
and
mov
dec
push
or
mov
enter
pop
movs
sbb
mov
cmp
or
mov
repz
fiadd
push
not
xchg
call
push
in
jne
xchg
lahf
push
sahf
add
inc
(bad)
jle
out
mov
jbe
js
fdiv
stos
push
push
jbe
mov
pop
out
mov
ja
mul
add
push
shl
int3
out
daa
xor
mov
aad
std
lods
in
mov
in
dec
inc
js
shl
imul
out
daa
xor
cwde
mov
pop
jo
pop
retf
retf
or
fidivr
cmp
xchg
mov
outs
adc
sub
iret
nop
mov
mov
les
push
out
jmp
sti
or
mov
and
loop
loope
mov
jae
dec
into
mov
mov
mov
dec
jnp
inc
icebp
push
push
ror
test
mov
push
addr16
cmps
add
iret
fcmovnu
xor
or
jne
ret
(bad)
push
aas
mov
daa
or
loopne
inc
mov
mov
popf
popa
push
movs
pushf
xchg
mov
clc
shl
push
inc
aaa
cwde
adc
xor
lds
pop
nop
ret
inc
mov
ret
jbe
and
(bad)
sub
mov
dec
cmp
cmps
jbe
adc
push
xor
push
inc
xchg
and
cmp
or
jle
mov
mov
bound
div
outs
mov
or
int
test
repz
dec
mov
push
test
shr
mov
cmp
push
data16
sub
je
mov
xor
pop
cmp
nop
mov
gs
call
dec
xor
fs
xchg
(bad)
hlt
aaa
rol
and
add
xor
cmps
or
or
(bad)
in
dec
mov
or
or
and
or
mov
inc
mov
jmp
icebp
or
mov
jecxz
icebp
push
cmps
popa
retf
stos
lock
scas
push
mov
add
sbb
jb
(bad)
fist
mov
jae
push
dec
mov
mov
adc
xor
imul
pop
dec
test
popf
and
push
xchg
imul
js
sbb
shl
add
add
cs
aad
mov
cmp
fdiv
jo
mov
sbb
shl
xchg
ins
mov
sahf
push
mov
int3
shl
aas
gs
lds
out
xor
adc
push
mov
fcomp
pop
in
add
outs
jo
pop
add
repnz
pop
and
fld
dec
ficomp
xlat
jg
fs
movs
dec
in
test
out
push
(bad)
xchg
and
popf
mov
pushf
stos
or
jbe
test
xchg
sbb
sahf
and
pop
sbb
int
in
popf
dec
mov
ss
sti
pop
sbb
inc
lods
icebp
out
or
mov
adc
mov
cmp
aam
jne
pushf
adc
push
jl
inc
cmp
cmp
mov
sub
mov
sti
fadd
cwde
shl
fld
add
push
xor
daa
pop
icebp
clc
stos
sub
mov
push
sbb
jmp
jne
mov
(bad)
int
cmp
push
scas
dec
retf
pusha
(bad)
pop
dec
xchg
pop
sar
mov
ins
sbb
sub
out
adc
dec
mov
outs
mov
add
inc
add
lock
sahf
mov
dec
mov
leave
(bad)
pop
cmp
inc
sub
xor
mov
aam
inc
sbb
clc
fistp
inc
call
jl
sub
cdq
ja
dec
or
mov
ins
and
mov
aas
adc
mov
xor
fldcw
jno
loope
arpl
fsub
call
push
dec
mov
dec
ret
mov
push
mov
mov
sub
dec
outs
cmp
pop
ret
xor
and
mov
and
out
jne
and
mov
adc
in
sahf
cli
dec
mov
or
fidiv
cli
sbb
sti
push
repz
mov
dec
popa
repnz
inc
dec
in
xchg
xchg
aad
das
mov
imul
fdivr
clc
into
jge
pop
cld
addr16
cs
enter
aam
or
or
push
out
and
cmp
sub
movs
aad
pop
data16
sub
fimul
imul
not
jns
addr16
mov
sbb
or
out
jbe
mov
(bad)
in
test
push
mov
addr16
fwait
out
repz
das
adc
sbb
sbb
mov
dec
std
push
cmp
ror
iret
sti
cwde
and
cmp
aad
inc
mov
inc
mov
lahf
pop
mov
cwde
push
add
xchg
inc
adc
fwait
and
mov
fistp
in
mov
cmp
pushf
loope
inc
and
cmp
cmp
add
mov
jge
adc
mov
jo
xchg
xor
mov
and
loop
xor
fiadd
sbb
leave
pop
aam
push
int3
jle
and
mov
daa
addr16
push
add
ficom
push
jb
repnz
cdq
jns
add
sub
mov
cvtps2pi
mov
push
push
add
retf
movs
mov
add
(bad)
cwde
push
test
mov
popf
push
jp
ins
mov
(bad)
lea
sar
mov
cli
xor
scas
xor
jge
es
in
pop
jno
or
mov
cmp
pop
shl
rcl
ins
mov
inc
aad
push
xor
and
cmp
mov
and
fst
icebp
mov
cmp
ret
(bad)
(bad)
jno
mov
or
cmps
sti
loopne
mul
push
call
and
int3
pop
push
add
out
sbb
in
jg
imul
popa
dec
mov
xchg
(bad)
xor
in
dec
dec
stc
out
xchg
imul
push
lods
ret
xchg
pusha
dec
adc
sti
repz
stc
je
inc
and
xchg
jle
and
add
add
cmps
sbb
add
(bad)
mov
inc
nop
sub
jmp
add
nop
outs
stos
movs
pop
(bad)
push
mov
sbb
xor
jge
in
xor
cmp
inc
mov
and
cmps
daa
ja
test
ret
ins
inc
xor
cmps
or
sti
pop
test
sub
xor
sar
dec
jbe
out
jae
loope
sar
shr
clc
push
jge
jno
shr
push
fiadd
add
fwait
lea
lea
jmp
out
(bad)
imul
loopne
inc
xchg
push
(bad)
bound
ret
ror
ss
loop
fild
and
in
or
mov
fsubp
jbe
adc
stos
mov
inc
sahf
jle
mov
(bad)
aad
xchg
sbb
push
and
(bad)
shl
jb
mov
das
inc
sbb
daa
cwde
movs
rcl
dec
ds
push
in
outs
mov
dec
popa
les
push
ret
and
push
fs
xor
ret
jo
test
test
inc
mov
ins
(bad)
in
sbb
ss
imul
lds
pop
lds
rcl
cmc
sbb
mov
push
jmp
adc
aad
dec
push
sbb
ins
xchg
gs
or
dec
shr
mov
push
int3
or
mov
and
fimul
nop
cmps
adc
ror
inc
pushf
or
jno
sbb
jbe
jl
sub
cli
add
loop
add
std
mov
mov
clc
sbb
pop
(bad)
repz
out
mov
xor
add
pop
mov
lds
jg
jmp
leave
xchg
(bad)
pop
xchg
sub
mov
dec
out
(bad)
sahf
shl
(bad)
mov
clc
cmps
push
les
cmp
and
mov
jae
fucomi
xchg
pop
adc
sub
stc
ss
shl
xor
aam
repnz
add
ja
cmp
jo
or
(bad)
jl
stc
push
lock
mov
jp
jbe
and
pop
sbb
in
xchg
ret
mov
cdq
dec
inc
jl
out
je
loop
inc
jg
sub
out
add
add
ins
push
sub
shl
xor
popa
adc
jmp
test
mov
xor
cmp
pop
ins
lock
das
dec
mov
pop
outs
dec
lahf
mov
inc
cmp
xchg
icebp
pop
mov
xlat
and
or
(bad)
aam
pop
jns
jge
and
outs
push
sbb
xchg
add
jle
sti
ret
mov
jo
cwde
je
mov
xor
mov
jge
mov
pop
push
leave
call
pop
dec
cwde
dec
hlt
sub
js
pusha
pop
dec
mov
sub
lea
and
(bad)
stc
pop
call
(bad)
out
enter
test
xor
mov
jge
cld
push
inc
cmps
mov
out
jge
ficom
push
movs
idiv
pop
pop
loope
not
dec
dec
adc
dec
jle
adc
lods
out
idiv
sub
push
jge
push
ins
and
loope
or
push
stos
and
dec
xchg
movs
xchg
in
inc
call
les
pop
sti
push
mov
(bad)
arpl
call
(bad)
out
mov
jle
push
add
mov
(bad)
push
mov
jmp
addr16
nop
pop
sub
sbb
sub
loope
(bad)
mov
mov
or
or
test
pop
aaa
jne
hlt
xlat
dec
sti
fild
les
and
or
lock
vpsraw
pop
mov
daa
mov
sub
cmps
pop
icebp
pop
mov
addr16
or
retf
aad
push
adc
push
popf
sti
sbb
cmp
popa
add
call
int3
mov
jge
(bad)
js
fcmovu
ret
mov
sub
jmp
(bad)
sbb
cmps
ins
add
push
loop
aam
add
jp
add
inc
sbb
inc
inc
sbb
lods
fst
dec
imul
dec
or
inc
mov
cmp
test
outs
imul
(bad)
push
sar
xor
xor
mov
ins
jmp
into
sub
mov
add
imul
xchg
out
ss
aad
(bad)
mov
fwait
mov
or
test
out
and
arpl
inc
rcr
out
add
jge
in
pop
jbe
cmps
loop
aaa
sub
push
jecxz
add
das
stc
std
inc
push
add
fild
and
fcmovb
loopne
mov
popf
sbb
test
popf
or
inc
sahf
out
mov
iret
jno
(bad)
jg
mov
or
mov
in
dec
dec
(bad)
or
inc
test
adc
mov
xor
pop
outs
push
imul
push
jg
or
sbb
sub
daa
dec
repz
ficom
cmp
dec
and
dec
mov
pop
stos
leave
daa
outs
and
int3
xchg
idiv
cld
mov
in
xchg
mov
ss
mov
repz
les
xor
imul
adc
dec
fs
stos
in
sub
repz
(bad)
cmp
mov
xchg
aam
jle
call
pushf
add
xchg
mov
leave
pushf
and
inc
sbb
dec
loopne
jle
xchg
cmp
outs
pop
cli
push
stos
scas
pop
dec
jp
and
mov
pop
xchg
(bad)
pop
repz
dec
jle
pop
push
mov
cli
mov
int3
jno
lea
aad
inc
mov
jmp
sbb
sbb
lea
and
mul
jae
sti
aaa
xor
clc
jnp
enter
daa
inc
jae
fwait
mov
gs
cld
out
pusha
mov
hlt
stos
mov
iret
push
pushf
aad
xor
or
mov
out
dec
or
js
popa
dec
sub
xchg
adc
int
aad
nop
fld
mul
mov
mov
inc
repz
add
dec
jnp
inc
jbe
out
lahf
imul
adc
test
test
mov
sub
mov
popa
fidiv
and
push
ret
sbb
int3
dec
fs
mov
jp
imul
fcom
xor
jbe
xchg
dec
cli
iret
jp
push
aas
ins
mov
xor
cmp
loop
adc
add
std
pop
dec
xor
push
mov
stos
test
mov
test
cmp
aad
lods
arpl
fwait
lods
mov
retw
jae
gs
jmp
jp
ret
mov
(bad)
xor
pop
in
pop
daa
xchg
mov
test
imul
enter
mov
jp
(bad)
adc
mov
dec
mov
inc
mov
xor
adc
push
shl
or
cmp
jbe
jl
push
pop
push
mov
push
dec
pop
mov
out
fimul
js
shr
and
add
mov
sbb
pop
mov
pushf
(bad)
stc
js
in
pusha
test
movs
pop
add
bound
and
call
jecxz
leave
jns
lods
dec
out
xchg
pop
aaa
cmp
dec
(bad)
idiv
jp
aas
sar
ret
xchg
adc
sti
cmp
aas
jl
(bad)
sbb
sub
inc
jbe
arpl
cmps
ins
dec
jl
adc
push
and
(bad)
adc
js
es
(bad)
je
dec
shl
iret
push
mov
push
icebp
inc
jg
addr16
push
inc
mov
dec
jmp
aam
test
push
jecxz
clc
and
mov
test
push
or
imul
in
imul
or
fisttp
xchg
xor
xor
jae
sbb
(bad)
call
cmp
aam
adc
fsubp
mov
lds
pusha
shr
push
push
sbb
sbb
test
into
dec
shl
es
and
jge
mov
dec
dec
or
movhps
mov
jb
and
(bad)
in
je
mov
sbb
in
shl
dec
mov
xor
xchg
out
push
and
sub
xchg
ja
outs
jmp
aam
ins
jbe
daa
rcl
and
push
cmp
ret
pop
sub
in
ror
mov
loop
int
sti
enter
ud1
or
adc
or
(bad)
push
dec
sbb
cs
mov
mov
xchg
sti
xor
loopne
mov
repz
jmp
mov
dec
mov
sub
or
std
inc
cmp
xor
jo
dec
sub
push
inc
jl
in
test
mov
mov
cmp
mov
or
adc
dec
data16
adc
fnstcw
jmp
add
add
aas
jns
jl
mov
inc
out
out
and
cld
mov
loopne
ja
pop
bound
pop
sar
cmc
das
movs
rcr
dec
xchg
and
jecxz
sbb
jge
int
lock
mov
push
or
movs
inc
ds
ret
js
add
sti
jbe
psllw
mov
dec
and
and
inc
in
dec
mov
xchg
std
and
pop
mov
mov
lods
sbb
cdq
or
add
mov
jle
and
ins
fsub
(bad)
in
test
into
cs
clc
pushf
hlt
rol
push
push
lods
xchg
repz
movs
jmp
mov
test
inc
push
rcr
inc
xor
popa
mov
std
sbb
xchg
sbb
inc
call
adc
inc
adc
adc
ret
inc
in
cmc
sub
popf
sub
std
pop
add
jp
sbb
fdiv
dec
ror
xchg
add
add
jmp
push
cdq
cs
xchg
push
fwait
int
aam
imul
mov
(bad)
pop
and
xor
inc
sub
aas
call
imul
ds
mov
je
jle
popf
out
adc
cld
xchg
fucomip
js
pop
jmp
fbld
fisubr
pop
test
shl
(bad)
fidiv
enter
into
mov
and
movs
rcr
or
je
test
retf
inc
mov
aad
out
pusha
xchg
xchg
inc
or
xchg
hlt
test
aaa
shr
jb
or
(bad)
jae
repz
imul
movs
ins
aad
out
mov
int3
mov
jmp
adc
push
cmp
cmps
jns
cmp
addr16
mov
test
jp
setge
cdq
lea
iret
adc
sub
stc
inc
pop
imul
rcr
add
cmp
mov
push
mov
mov
ret
scas
out
cmp
jo
xor
mov
and
sbb
pop
cmp
rcr
addr16
fstp
addr16
es
mov
xor
sbb
loop
push
mov
movs
cmp
sar
mov
outs
xor
adc
dec
addr16
sahf
(bad)
fwait
push
xchg
cld
inc
jg
adc
mov
ret
jnp
frstor
mov
inc
mov
(bad)
push
cmp
popf
inc
lock
xchg
mov
push
xchg
clc
mov
jno
inc
aaa
stc
in
stos
add
jae
push
inc
jb
scas
call
mov
call
jge
push
stos
push
jnp
addr16
sbb
fld
dec
sti
inc
sub
adc
or
dec
push
inc
sar
adc
rol
push
sub
cmp
inc
aaa
dec
scas
call
out
sti
jno
sub
push
mov
mov
cmp
inc
out
clc
popa
add
jmp
retf
mov
sub
fld
fidiv
les
cld
fild
adc
scas
mov
(bad)
xor
lods
lahf
sbb
inc
or
fist
jbe
cs
aam
xor
push
inc
mov
clc
pop
scas
mov
ins
iret
cmp
mov
das
push
fldcw
cmp
dec
popf
or
ror
sub
fisttp
ins
jne
cmp
ins
ins
mov
imul
sub
xor
add
push
push
js
int3
repnz
push
hlt
push
mov
aam
add
ret
dec
mov
jns
aas
shl
(bad)
fmulp
sbb
mov
pop
ret
pop
and
ret
mov
aaa
enter
cmps
ficom
dec
bound
cmc
xor
xchg
fnstcw
adc
jbe
push
mov
inc
pop
xor
jo
movs
test
add
test
and
ja
mov
into
cdq
repz
fsubr
pop
ins
jecxz
sub
leave
jns
mov
fimul
dec
mov
mov
mov
ficomp
mov
mov
loop
push
ins
mov
loopne
add
pop
pushf
ds
shl
fsubr
ds
inc
xor
out
xchg
stc
jge
inc
adc
adc
jle
jnp
and
addr16
pop
fs
arpl
cmp
mov
es
jl
call
jle
xor
xor
ss
adc
cld
lods
ins
pop
enter
push
dec
pop
hlt
leave
jmp
add
test
adc
or
mov
call
lds
mul
jge
mov
or
jnp
dec
push
int
adc
outs
inc
and
mov
stos
mov
pop
aas
add
inc
cmp
es
push
fistp
int3
fst
sahf
imul
std
jo
ins
pop
sti
les
and
pop
xor
hlt
fcomp
and
inc
fstp
out
cmp
out
xchg
pushf
call
mov
push
jns
mov
or
(bad)
int
retf
jp
pop
imul
and
hlt
mov
cdq
(bad)
mov
mov
(bad)
cmp
push
push
aam
daa
hlt
aas
aas
mov
je
(bad)
std
cmps
icebp
cmps
mov
ins
push
scas
mov
fs
cmps
(bad)
je
cmps
fist
fstp
scas
aas
add
fsub
mov
sbb
or
mov
nop
pop
std
mov
mov
cli
movs
fld
icebp
dec
mov
add
cmp
mov
dec
iret
(bad)
nop
cmp
hlt
adc
dec
xchg
cmp
and
out
xor
jae
fldenv
shl
cmp
stc
cmp
pop
add
mov
pusha
sbb
dec
lods
mov
inc
dec
jecxz
cmp
es
call
xor
test
dec
mov
pop
inc
pusha
cmps
add
leave
imul
sbb
push
push
xchg
pop
sub
ss
xor
dec
xor
lock
dec
pop
adc
fsubr
fadd
ret
lock
ins
(bad)
sahf
jo
sahf
pop
call
mov
xchg
ja
pop
dec
pushf
daa
outs
add
dec
jge
or
aaa
fmul
test
loopne
mov
enter
fmul
icebp
xchg
loop
push
push
sbb
cmp
push
mov
add
or
lahf
test
aam
jae
mov
shl
sub
(bad)
push
aad
push
mov
ror
push
bound
or
bnd
cmp
dec
les
push
mov
jb
inc
pushf
jo
aaa
rcr
cmp
sub
mov
add
or
or
movs
call
sbb
dec
pop
pop
and
cmp
pop
loopne
mov
mov
add
js
idiv
inc
inc
fld
retf
mov
sub
cdq
pusha
cld
test
mov
sbb
popa
out
aas
push
inc
test
and
stos
dec
add
jmp
sub
cmps
aas
lds
dec
xor
sub
push
stos
movs
inc
dec
(bad)
popf
cmp
clc
loopne
xor
sub
mov
inc
dec
cdq
xor
ret
mov
xchg
xor
popa
pop
or
lock
push
out
or
dec
and
fidiv
shl
mov
jo
pop
mov
push
mov
adc
mov
sub
mov
or
adc
int
or
and
jns
(bad)
xlat
mov
pusha
xor
popa
mov
cwde
cmps
lods
shl
push
icebp
xchg
jecxz
add
push
dec
push
xor
mov
and
pop
mov
xchg
sub
and
dec
push
loope
fstp
xor
pop
jecxz
dec
push
jae
ins
iret
add
call
mov
(bad)
test
add
push
dec
test
mov
dec
pop
jecxz
add
jmp
pop
dec
in
and
out
rcr
(bad)
stos
enter
xchg
test
jbe
test
fdivr
daa
mov
jmp
iret
sub
sub
loopne
les
imul
push
mov
pop
or
in
add
outs
jae
out
mov
nop
punpckhdq
pop
shl
test
or
add
dec
mov
sub
push
lea
dec
pop
add
cmp
dec
push
jg
xchg
sub
cmp
fdiv
jmp
test
daa
mov
dec
mov
adc
cmp
or
adc
sub
push
das
mov
popa
dec
cmp
mov
and
mov
ss
push
pop
cmp
mov
pop
(bad)
les
stc
push
outs
es
cmp
add
xor
stos
scas
mov
mul
xchg
shl
push
mov
fs
ins
mov
pop
nop
outs
(bad)
lahf
jmp
dec
cwde
out
ja
cs
mov
stc
repz
cmp
adc
out
push
das
int
mov
xchg
or
adc
sub
test
sub
mov
dec
cmp
adc
pop
sbb
xor
jmp
or
jg
or
lods
sub
imul
aas
dec
cmp
add
test
test
mov
dec
mov
mov
test
lods
pop
add
jb
lea
loop
sub
enter
jno
jle
mov
(bad)
dec
mov
xor
push
inc
fimul
in
out
push
mov
push
ss
and
mov
das
sbb
cli
jo
xchg
sub
rcr
mov
xlat
or
xchg
xor
dec
dec
add
jb
stos
cwde
stos
int
or
mov
mov
shl
lods
jp
pop
iret
rol
in
jecxz
adc
pop
and
retf
jp
out
sub
test
cmp
adc
pop
xchg
inc
and
sbb
div
stc
jb
loopne
ret
popf
in
xor
rcl
lods
xor
add
xor
cmps
loop
ret
pop
test
in
cli
xlat
push
nop
cmp
(bad)
xor
mov
jae
mov
mov
mov
out
cmp
or
lods
or
or
xor
data16
fst
test
iret
jle
sbb
xchg
or
fist
pushf
es
or
xchg
mov
and
aad
std
dec
iret
xchg
lods
push
jge
adc
mov
jmp
mov
adc
sbb
fwait
scas
and
fsub
fst
and
mov
stos
pop
push
ss
lss
push
cmps
movs
movs
and
add
aaa
xor
mov
scas
shl
in
xchg
mov
mov
into
sub
les
hlt
mov
xor
ror
ins
jns
das
sub
push
pop
cmp
iret
cmp
add
rcr
fucom
adc
imul
push
iret
outs
ds
mov
cmp
add
lahf
les
mov
call
xchg
jns
inc
xor
or
cdq
xlat
loop
dec
sti
sbb
add
adc
repnz
pusha
sub
in
mov
xchg
in
jns
dec
scas
mov
rcr
pop
dec
push
dec
jae
jmp
sub
lahf
jmp
ret
in
and
adc
cmp
dec
jno
cmp
inc
(bad)
mov
sub
fs
ins
lahf
clc
scas
lock
cmps
sbb
lahf
push
loopne
shl
sbb
pop
sub
mov
jecxz
pop
mov
(bad)
push
jle
sahf
and
or
addr16
shr
pop
nop
sub
inc
jb
(bad)
dec
lock
imul
pop
adc
sbb
cmp
push
popf
sub
(bad)
ins
cwde
mov
pusha
test
xor
xchg
jne
(bad)
outs
dec
rcl
ins
aam
popa
xchg
fwait
test
dec
xchg
adc
mov
jp
inc
xor
nop
mov
scas
mov
outs
pushf
push
jge
xor
add
test
test
jmp
bound
loope
(bad)
push
jp
popf
mov
int3
dec
mov
lods
xor
push
stos
sbb
(bad)
out
movs
ret
or
mov
es
mov
or
fstp
rol
or
and
mov
(bad)
xchg
(bad)
scas
inc
push
(bad)
fdiv
aad
sbb
stos
imul
imul
cwde
pop
in
jb
es
lock
lea
shl
jbe
sti
inc
movs
sub
sub
jmp
dec
sub
outs
or
leave
sbb
xchg
test
xchg
push
jns
movs
cli
jge
aas
lea
imul
cs
popa
sub
cwde
jmp
fimul
mov
in
nop
mov
cmp
inc
adc
popa
pop
loope
movs
mov
loopne
push
scas
mov
dec
xchg
mov
mov
test
push
mov
cmc
xor
inc
xchg
sub
jle
pop
xchg
adc
cmps
mov
aaa
push
or
dec
(bad)
int3
mov
call
pop
mov
jp
int
sbb
jnp
ror
ret
mov
pusha
fsub
icebp
pop
and
repz
lea
inc
dec
jo
cs
inc
lods
mov
fld
dec
mov
xor
adc
in
add
push
adc
add
int3
or
push
cli
cwde
or
(bad)
in
call
enter
ret
int3
cmp
sahf
imul
mov
data16
xor
cli
unpcklps
inc
cdq
add
mov
dec
adc
mov
mov
sahf
push
xor
rol
sti
jo
aaa
ins
cli
xor
push
popa
clc
adc
push
enter
sub
jp
fidivr
jno
lds
scas
addr16
xor
push
loop
movs
sub
pop
mov
push
hlt
inc
push
fisttp
shl
sbb
out
adc
jge
xor
jns
xor
loope
test
dec
dec
jmp
mov
mov
fucomp
aad
mov
mov
inc
enter
pop
cmp
scas
inc
lahf
jae
jns
in
mov
pusha
cwde
xchg
push
mov
inc
pop
int3
jo
xchg
jmp
mov
inc
out
sbb
sbb
sar
jmp
push
movs
or
xor
aam
fimul
bndldx
retf
in
mov
mov
dec
leave
pop
or
mov
xor
mov
mov
inc
and
sub
mov
frstor
pop
or
jp
scas
sub
xor
mov
mov
inc
mov
mov
loop
mov
loope
mov
sub
mov
test
cld
or
rcr
mov
add
cmps
xor
pop
sbb
adc
inc
xor
cld
push
mov
jns
pop
pop
xchg
(bad)
fcomp
jge
dec
pop
xor
jl
dec
mov
dec
pop
call
sub
std
shufps
mov
test
aam
pushf
(bad)
loope
and
fistp
xchg
and
iret
adc
sbb
xchg
mov
sbb
in
add
adc
mov
jmp
gs
lods
pop
xchg
pop
pop
fld
addr16
mov
rdpmc
loopne
pop
je
fcom
lods
mov
add
jmp
inc
cmp
ror
movs
hlt
mov
loop
adc
or
or
xor
or
xchg
ins
fiadd
scas
cdq
(bad)
fstp
adc
stc
(bad)
mov
ins
gs
xchg
rcl
aas
jmp
(bad)
icebp
or
cmp
cmp
(bad)
adc
int3
les
mov
pop
xor
inc
pop
cmc
jno
out
and
mov
pushf
fdiv
out
retf
cmps
gs
sub
cld
call
data16
stc
call
jmp
lods
xor
add
cmps
add
push
cmp
mov
sbb
test
xchg
bound
cmp
jl
pop
xchg
fldenv
and
push
jecxz
jecxz
test
dec
movs
pop
enter
xchg
inc
or
jmp
add
push
push
push
xchg
fistp
imul
xor
add
jbe
ret
into
pop
shl
pop
jno
jnp
lahf
pop
xchg
mov
mov
xor
imul
je
repz
mov
adc
mov
mov
sub
xor
cmp
mov
pop
lods
mov
pushf
cmc
ret
inc
dec
fstp
inc
stc
push
cmp
xchg
movs
mov
call
loopne
inc
jbe
in
jle
mov
xchg
imul
mov
aad
adc
imul
inc
sbb
daa
pop
fcom
and
fwait
(bad)
frndint
(bad)
nop
mov
fadd
dec
mov
jecxz
mov
iret
add
pop
loope
sbb
aad
(bad)
aam
push
faddp
in
mov
add
push
(bad)
cmps
push
push
fidiv
push
mov
push
test
inc
mov
test
div
jp
aam
sbb
iret
xchg
mov
sub
jp
xor
pop
add
push
fstp
lods
mul
or
sub
mov
xchg
pop
mov
xor
fs
test
cmps
in
lahf
add
lea
inc
movs
push
pop
(bad)
dec
and
mov
sbb
mov
sub
jbe
and
sbb
mov
cwde
add
es
mov
cli
mov
dec
sbb
scas
test
cmp
xchg
aaa
or
out
popa
aaa
jns
clc
jmp
xchg
movhps
sub
std
xor
imul
in
test
out
out
psubsw
vorps
dec
addr16
es
mul
arpl
pop
mov
mov
test
sbb
push
push
movs
retf
lock
sbb
fisub
sahf
push
imul
jae
cmp
scas
adc
pop
jecxz
cmp
push
xchg
popf
dec
jbe
into
push
sbb
xchg
retf
(bad)
cmp
pop
jl
dec
or
ins
mov
xchg
fistp
sbb
(bad)
ss
xchg
pop
jbe
gs
push
scas
pop
in
xchg
cmp
jge
cmps
out
fwait
cmps
dec
and
add
dec
scas
jno
ja
xlat
adc
pop
sub
in
mov
and
outs
pop
(bad)
iret
xchg
xchg
jp
and
jno
mov
nop
mov
es
sub
mov
imul
sbb
sbb
and
xlat
test
mov
add
pavgw
dec
movs
inc
pop
and
les
add
push
fstp
out
dec
cwde
movs
adc
mov
or
shr
jmp
sahf
sbb
leave
add
push
sbb
jecxz
inc
stos
lea
popf
sub
dec
pop
mov
xchg
lods
push
pop
pop
pushf
push
sub
dec
push
jne
call
xchg
xchg
add
sub
mov
cmps
hlt
push
mov
pop
retf
pop
add
push
mov
mov
lock
out
je
mov
es
nop
and
sahf
adc
addr16
sbb
mov
adc
(bad)
jecxz
mov
push
inc
pop
std
xchg
jbe
mov
adc
sub
bound
mov
push
test
outs
cwde
shr
jo
ficomp
push
hlt
dec
enter
and
sti
jecxz
(bad)
aas
xor
in
inc
sti
in
in
outs
jl
and
call
adc
mov
push
repz
pop
dec
int
add
and
xchg
sbb
icebp
aaa
add
jmp
jns
mov
fwait
sbb
jl
fwait
int3
mov
xor
dec
push
mov
push
cmp
je
xlat
ror
xor
shl
cmp
jle
mov
jge
hlt
sbb
adc
les
and
into
fstp
sti
test
add
jmp
sbb
(bad)
cli
jl
inc
cmp
call
inc
mov
sub
xor
adc
das
movs
rcr
aad
or
push
push
inc
add
or
fwait
push
jecxz
lds
out
jmp
call
test
in
repnz
dec
add
cmps
dec
test
pop
(bad)
call
stos
shr
or
shl
push
pop
int
sub
out
mov
(bad)
out
popf
xchg
or
ror
xchg
(bad)
shl
lods
sub
or
xchg
daa
xchg
icebp
lods
push
push
out
into
mov
js
mov
jecxz
(bad)
loopne
cmc
mov
shl
sbb
je
(bad)
or
and
xchg
iret
mov
xchg
jb
sub
xchg
mov
or
mov
pop
pop
mov
pop
sar
in
ficom
mov
inc
aam
pop
es
arpl
in
jnp
loopne
dec
push
daa
push
cmp
xchg
inc
std
(bad)
jmp
les
xchg
call
push
mov
cs
jns
push
mov
movs
test
push
lahf
cli
add
cwde
and
jae
call
sbb
sub
int3
js
das
in
sbb
cwde
add
cli
dec
push
push
dec
arpl
test
adc
test
xchg
test
dec
int
mov
mov
outs
sar
scas
fild
mov
mov
add
or
stc
mov
sub
imul
ret
push
clc
das
ja
push
js
cmp
push
clc
inc
cmc
pop
adc
push
fwait
outs
mov
xor
mov
test
neg
adc
bound
outs
add
outs
std
or
scas
mov
test
inc
scas
(bad)
frstor
pop
(bad)
bound
icebp
xor
mov
add
xor
dec
pop
icebp
pop
jne
xchg
pop
test
push
call
in
adc
push
popf
mov
xchg
popf
fs
push
pop
mov
test
mov
out
clc
pop
xchg
(bad)
jmp
scas
sub
mov
jae
in
xor
iret
std
xchg
jg
and
and
scas
test
push
ret
mov
test
pushf
mov
les
retf
xor
in
push
mov
dec
jns
ds
push
imul
pop
pop
mov
push
sbb
(bad)
fdivrp
push
dec
jb
test
ins
aad
mov
and
xor
jbe
sub
adc
(bad)
jp
call
push
mov
pop
add
aam
data16
inc
loopne
call
mov
rol
mov
jge
push
pushf
pop
sub
pop
(bad)
mov
adc
fistp
ins
lock
(bad)
sub
mov
mov
push
sub
inc
lock
push
aaa
test
jnp
cmp
les
sub
mov
cmp
pop
out
je
xor
cmp
jmp
inc
adc
into
hlt
(bad)
jge
(bad)
mov
enter
mov
movs
mov
stc
arpl
bts
push
mov
dec
in
pop
jmp
inc
pop
ds
mov
fist
or
jg
add
pop
push
test
push
out
sbb
sub
cli
mov
mov
push
das
arpl
int
jp
data16
add
in
jge
lods
or
enter
lds
xor
xchg
sub
inc
pop
bnd
inc
pop
fistp
mov
pop
mov
or
movs
add
jno
pusha
push
retf
popf
pop
fwait
(bad)
in
addr16
ja
and
dec
sbb
stos
je
in
or
push
xor
jae
fsubr
sub
pop
push
cmp
adc
test
mov
div
add
ins
clc
shl
leave
pusha
jo
ret
pop
or
cmp
pusha
stos
push
lea
mov
ds
dec
sbb
adc
and
sar
icebp
ret
aad
cld
cmc
ins
jl
stos
int
or
add
ror
jmp
dec
adc
mov
xchg
sub
jmp
inc
psubsb
test
std
arpl
xchg
dec
popf
(bad)
pop
mov
pop
xchg
gs
out
scas
mov
pop
out
adc
mov
mov
xlat
int
push
jbe
cmp
imul
test
mov
lods
int3
fwait
pop
add
inc
dec
mov
adc
stc
sub
jle
adc
sub
sbb
inc
mov
retf
(bad)
int
mov
stos
push
stos
outs
mov
inc
imul
test
test
and
or
shl
lods
mov
(bad)
into
and
cwde
jmp
outs
je
push
mov
out
mov
fmul
aaa
cmps
mov
pop
fwait
mov
loopne
dec
and
int
push
sub
cwde
mov
jg
or
ret
push
stc
stos
mov
(bad)
lock
test
mov
cmp
lock
xor
inc
jg
ss
sbb
loopne
cmc
jae
push
and
sub
cmpxchg8b
data16
dec
idiv
sub
fnstsw
xchg
mov
mov
adc
pusha
daa
fimul
dec
mov
dec
inc
xor
mov
test
fs
fsub
loop
enter
xchg
add
rcr
or
sbb
pusha
or
mov
ins
(bad)
cmc
jns
inc
out
imul
neg
sahf
xchg
mov
fwait
xlat
mov
jge
jmp
std
add
in
sub
repz
ins
push
ret
leave
xor
mov
loop
aas
mov
add
loop
add
bound
and
into
repnz
out
popa
test
and
call
inc
lock
or
arpl
push
fwait
les
xchg
push
sub
push
mov
mov
sar
into
jb
out
lods
scas
outs
into
aas
retf
xchg
shl
stc
repnz
xchg
aas
fdivr
fld
pop
mov
inc
push
shl
sub
imul
ss
cmps
cmp
dec
adc
jge
scas
push
(bad)
scas
ret
aad
push
inc
mov
outs
mov
(bad)
test
mov
ds
enter
and
sub
idiv
xchg
mov
mov
jo
add
rcl
push
mov
movs
cmp
add
pop
mov
xchg
loopne
loope
adc
lods
sbb
es
or
or
imul
cmp
(bad)
das
dec
sub
inc
fldcw
fwait
xor
pop
xchg
lds
xchg
adc
inc
mov
push
add
push
and
shl
retf
sub
popa
push
add
cmp
pop
xchg
das
int3
int
sub
push
adc
dec
pop
(bad)
cwde
repz
fist
push
sbb
mov
sar
jnp
ins
push
dec
xchg
lods
xor
jl
std
hlt
mov
add
(bad)
stos
sub
inc
or
dec
inc
xchg
ret
stos
or
faddp
nop
imul
cmp
sbb
fnstcw
sar
push
push
retf
cwde
gs
or
ror
adc
idiv
xchg
jp
add
sar
out
out
push
and
popa
mov
jns
ret
lea
sbb
pop
adc
push
adc
cwde
sub
and
popf
add
scas
push
neg
xor
xchg
hlt
push
fcomp
pop
repnz
mov
test
aaa
sbb
dec
aaa
xchg
cmps
push
ficomp
push
mov
dec
mov
popf
in
add
jl
jle
xchg
repnz
icebp
xchg
fcmove
ins
out
cmc
mov
or
leave
sbb
inc
sbb
retf
popf
or
dec
pop
out
xchg
mov
xchg
jns
cmp
mov
lds
mov
xlat
and
fsubp
scas
je
ficomp
pop
sub
push
popa
and
inc
mov
sbb
out
data16
int3
in
into
jg
and
jge
aam
mov
arpl
xchg
xchg
jg
jg
popa
inc
jle
mov
scas
dec
and
xchg
cmp
outs
test
fs
(bad)
int3
xor
cmps
jnp
xchg
mov
pop
enter
cwde
cmps
sbb
or
mov
cmp
fld
ins
push
xchg
xchg
jecxz
test
stc
aas
movs
adc
push
imul
aas
mov
jno
push
xchg
and
jne
pop
mov
cmps
xchg
adc
imul
call
sub
and
fmul
rcr
jmp
(bad)
dec
ret
rol
xor
mov
pop
xchg
mov
push
rol
mov
loope
sub
mov
ss
adc
lahf
cmp
fbld
(bad)
pop
or
sahf
fisub
loope
mov
call
fwait
xchg
mov
rcl
jmp
mov
imul
cmp
push
and
(bad)
mov
stos
xchg
push
adc
movs
movs
ficom
mov
(bad)
jbe
xchg
cmps
pop
retf
dec
pop
jg
sbb
pcmpgtw
ret
jae
bound
mov
cwde
and
dec
jmp
xchg
pop
inc
sub
mov
repz
sahf
stos
ja
loope
push
(bad)
out
mov
sbb
dec
mov
cmp
jae
mov
and
jmp
dec
push
or
popf
ficomp
ret
bnd
mov
push
cmp
icebp
fsub
push
fld
mov
push
outs
mov
outs
(bad)
pop
es
sub
add
and
ret
ins
and
int
cmp
and
aas
dec
movs
aas
cmc
adc
or
xor
not
movs
clc
cwde
aad
inc
sbb
out
jb
xchg
adc
jmp
inc
xor
jo
ja
dec
and
xchg
(bad)
pop
iret
fwait
and
inc
lock
call
mov
retf
in
ret
shl
or
out
push
imul
aas
inc
push
fnsave
inc
pop
and
dec
addr16
dec
and
addr16
and
not
mov
pop
mul
fisub
daa
pop
push
or
mov
mov
inc
and
adc
(bad)
sub
hlt
test
fdivr
jg
inc
mov
and
and
fcompp
and
cmp
hlt
and
mov
lods
cli
mov
push
push
pop
outs
or
push
inc
repnz
mov
and
add
mov
rcr
test
rcl
add
lahf
sahf
adc
mov
xchg
pushf
outs
nop
pop
call
retf
sbb
sbb
mov
mov
repnz
xor
loop
ins
shr
mov
cmp
pusha
popf
push
jne
cmp
dec
pop
sub
xor
lds
int
or
movs
inc
push
mov
cmp
xchg
rcr
jb
jg
inc
icebp
mov
stc
gs
ja
cmp
sahf
ins
mov
movs
loope
push
cmc
test
test
dec
pop
lahf
pop
dec
aam
xchg
mov
aad
stos
add
sbb
(bad)
call
cmp
jno
mov
pushf
in
xor
push
lods
add
(bad)
cvtpi2ps
pop
leave
xor
xchg
jbe
loopne
push
push
cmc
ins
pop
int3
dec
pop
sub
imul
das
mov
movs
arpl
sub
rcr
movs
div
sub
ret
enter
pusha
loop
pop
(bad)
rcr
retf
adc
ins
pop
push
inc
mov
retf
push
cli
sbb
ja
ins
sbb
or
gs
movs
sub
push
push
xlat
jl
adc
scas
cmp
xchg
call
fcomip
pop
loop
mov
int
and
gs
fisttp
not
jbe
add
imul
fcom
add
movs
jb
inc
sbb
mov
je
in
adc
inc
or
or
add
(bad)
out
mov
xor
mov
fs
ins
pop
in
and
adc
jmp
jnp
xchg
(bad)
mov
sub
sar
fnstcw
and
test
and
out
push
or
enter
aaa
jmp
sub
mov
mov
cmps
mov
and
mov
sub
imul
push
dec
jmp
or
mov
sar
fnstsw
pop
mov
dec
jmp
hlt
lahf
push
ds
adc
push
jg
jbe
test
add
fs
dec
push
push
(bad)
sub
mov
dec
mov
es
jmp
cmp
pop
fs
lods
fwait
mov
aam
fldcw
push
movs
pop
je
fs
mov
into
adc
add
xor
xchg
sub
jno
ficomp
pop
aaa
jb
in
js
cmp
not
xchg
out
dec
or
popa
sbb
mov
gs
(bad)
cmc
push
mov
(bad)
fdivrp
gs
sbb
lahf
cmp
adc
lock
mov
ja
jo
or
popa
test
inc
jge
pop
movs
icebp
or
inc
add
pop
adc
cmps
or
mov
ss
daa
or
xchg
jl
add
mov
jnp
ror
and
ins
xchg
ins
or
jno
mov
in
test
(bad)
sbb
cmp
and
push
sbb
xchg
repnz
(bad)
stos
mov
dec
lahf
aaa
(bad)
daa
fldcw
out
ss
fisttp
sub
fnsetpm(287
cli
pop
sub
and
arpl
mov
or
jnp
mov
call
pminsw
xchg
mov
xchg
or
and
dec
inc
neg
(bad)
mov
dec
push
in
aam
push
sti
xchg
or
sbb
mov
loope
pop
icebp
sub
jae
push
inc
mov
in
movs
outs
mov
mov
mov
(bad)
imul
sub
fwait
not
addr16
and
repz
sbb
pop
scas
pushf
mov
(bad)
in
ficom
fsub
xchg
dec
sub
jns
daa
aad
dec
sbb
das
rol
aad
xor
imul
aaa
(bad)
xchg
mov
sbb
pop
lods
cli
mov
mov
add
and
jne
push
cdq
add
pop
repnz
xor
mov
mov
aas
loope
pop
push
scas
in
xchg
lock
sbb
adc
cmps
fdivr
in
pop
shl
mov
adc
int
mov
mov
shr
jmp
dec
push
or
ds
enter
pop
cdq
push
sbb
xor
jmp
xlat
jo
nop
xchg
adc
hlt
das
pop
dec
sub
mov
ret
imul
aaa
or
in
inc
jl
pop
dec
inc
jg
(bad)
fadd
jnp
mov
push
shl
cmc
cs
fnstsw
xor
dec
lahf
dec
aaa
shl
test
adc
jmp
das
dec
mov
dec
mov
(bad)
fidiv
mov
out
push
mul
bound
jecxz
xchg
ror
pop
inc
pop
inc
dec
mov
mov
icebp
lods
mov
sub
cmp
test
(bad)
push
mov
cmp
add
mov
dec
gs
push
clc
mov
push
dec
cmp
jle
aaa
movs
lea
outs
jmp
push
cmp
or
fldenv
pusha
push
je
or
pop
scas
ror
loope
lahf
in
sub
sub
push
(bad)
sbb
cmp
leave
pop
in
xor
xchg
mov
repnz
adc
pop
add
xchg
xchg
adc
add
cmps
jge
adc
clc
stc
push
fidiv
sahf
jne
mov
shr
call
jecxz
pop
out
loope
sub
xchg
fs
mov
dec
cmps
sbb
enter
loopne
in
adc
arpl
add
pop
dec
xor
mov
sub
jg
cmps
adc
pop
retf
pop
ret
clc
push
xor
out
(bad)
xchg
dec
loopne
imul
inc
aam
adc
aaa
sbb
pop
sub
cmc
scas
shr
call
push
test
adc
mov
(bad)
mov
xchg
and
aas
add
jle
sbb
and
mov
stc
(bad)
dec
inc
les
mov
pop
popf
cs
inc
mov
int
loop
loope
in
push
test
xchg
push
and
out
(bad)
cmp
xor
sbb
into
pop
sar
and
jle
fnsave
sti
loop
jae
or
lock
int
outs
aaa
es
dec
fbstp
fsub
xchg
sbb
pusha
mov
arpl
into
or
sbb
push
ins
add
enter
xchg
movs
pop
pop
xchg
push
out
leave
jecxz
cmps
xor
test
call
jns
clc
mov
fcmovne
mov
cwde
push
fist
xchg
sub
dec
dec
dec
xchg
popa
push
cli
in
xchg
lea
add
les
or
call
cmp
adc
repz
pop
paddsb
cli
cli
jnp
std
popa
xchg
or
sub
imul
mov
or
clc
lods
pop
cmp
pop
jnp
sbb
cmp
imul
xchg
rcl
cmp
pop
sbb
leave
push
sub
retf
aam
push
push
arpl
inc
jg
lea
mov
in
cdq
xor
out
adc
iret
add
push
mov
jb
call
inc
ror
cs
stc
(bad)
int3
mov
ret
movs
in
push
in
mov
mov
sub
mov
cwde
mov
fcom
mov
cmp
mov
cmc
sub
push
inc
sahf
pop
fistp
in
lods
cmp
inc
adc
into
mov
push
xchg
mov
sub
frstpm(287
mov
jle
out
and
gs
hlt
popa
cmps
add
addr16
push
adc
adc
jb
sub
outs
popa
xchg
scas
sub
daa
mov
(bad)
mov
jl
ret
mov
cmp
pop
stos
nop
and
pop
xchg
bound
sub
xor
in
ins
jbe
movs
sbb
pusha
ret
mov
xchg
push
push
push
mov
mov
cmc
inc
mov
popa
lahf
in
dec
fst
in
fidivr
scas
lods
dec
nop
mov
bound
clc
cmps
pop
sti
mov
sub
cmp
enter
scas
pop
hlt
lods
fist
int3
(bad)
pop
aaa
jl
xlat
jp
pop
xor
adc
add
int
jns
xor
xor
fs
jnp
retf
xchg
enter
data16
or
jle
mov
shl
adc
stos
aas
(bad)
dec
std
es
cmp
sbb
outs
cwde
and
cmp
cmp
xchg
xchg
mov
sub
mov
xor
push
mov
xchg
je
xchg
mov
repnz
pop
aas
push
mov
jno
pop
mov
inc
lds
imul
push
jp
lds
or
cdq
mov
int
push
in
clc
mov
adc
cs
xor
mov
xor
jg
mov
mov
and
popf
rcl
(bad)
in
jle
add
sub
mov
nop
cmc
lods
sbb
pop
mov
ret
mov
cwde
shl
mov
mov
fdiv
pop
cmp
xchg
cmp
lods
mov
je
add
jb
jo
pop
lods
enter
jg
fst
mov
(bad)
sahf
scas
in
jae
pop
add
inc
add
das
sub
inc
adc
gs
test
xchg
jbe
ins
inc
and
jge
xchg
(bad)
jb
pop
cmp
inc
out
pop
popf
test
adc
jbe
push
mov
jge
push
push
(bad)
add
pop
jnp
imul
dec
int3
jae
jnp
ins
pop
dec
adc
dec
mov
dec
cmp
mov
mov
push
or
lods
xchg
pop
xchg
add
out
scas
arpl
lods
push
jg
cmp
sbb
(bad)
xchg
lea
call
dec
repz
out
jle
clc
dec
inc
jp
adc
mov
mov
lds
mov
mov
mov
sti
lock
push
pop
mov
stc
push
iret
out
fadd
add
(bad)
stos
pop
xor
sahf
cs
sahf
aaa
icebp
cmp
(bad)
adc
mov
mov
lock
cmp
xchg
mov
mov
cmc
dec
push
and
dec
movs
call
push
inc
and
lock
aad
adc
fcmovb
std
mov
pop
ror
dec
aad
push
(bad)
mov
loop
ins
mov
xor
pop
add
jne
rcr
popa
mov
sub
popa
xor
(bad)
lahf
aaa
cli
leave
ret
push
adc
inc
sub
fmul
add
adc
inc
mov
jecxz
sub
add
cwde
jno
sub
mov
clc
repz
xor
add
and
lahf
dec
je
fstp
xlat
shl
xchg
clc
dec
mov
sbb
pop
lahf
ror
mov
xchg
(bad)
fdiv
sahf
cdq
adc
xor
lahf
data16
cli
in
add
mov
mov
lods
loop
mov
(bad)
cmp
rcl
push
(bad)
fs
jbe
adc
xor
lock
mov
fsin
jge
scas
bound
mov
pushf
fistp
(bad)
push
inc
adc
or
mov
arpl
ret
lock
into
test
mov
pusha
mov
sahf
add
mov
in
out
nop
push
lea
mov
xor
test
xor
(bad)
loopne
hlt
(bad)
adc
or
dec
mov
fsub
aad
push
aas
repz
sbb
fcom
scas
scas
adc
iret
popa
loop
lea
popa
hlt
inc
fwait
neg
mov
mov
pop
retf
ds
inc
pop
jmp
mov
push
pop
sub
jo
int3
cmp
inc
xor
(bad)
mov
pop
fbld
jne
in
xor
out
pop
sub
bnd
scas
lea
cdq
fwait
mov
and
dec
mov
pop
adc
cmps
retf
mov
out
adc
adc
popf
pop
jl
aaa
fwait
pop
sbb
scas
mov
out
stos
inc
jb
push
mov
pop
adc
aam
mov
dec
cmp
pop
dec
dec
pop
jmp
cmp
sbb
pushw
int
out
push
jl
fwait
(bad)
sbb
stos
sbb
(bad)
xchg
neg
mov
stos
popa
mov
ins
scas
sbb
lea
das
fadd
outs
mov
sub
or
push
jae
or
cmp
js
xchg
sbb
xchg
inc
mov
and
push
pop
cli
pop
mov
xor
or
aam
adc
fiadd
pop
aas
aad
movs
loope
stc
loop
mov
aas
(bad)
mov
jl
mov
sbb
hlt
std
mov
push
fmul
add
add
xor
dec
(bad)
out
fwait
and
(bad)
scas
pop
and
xor
mov
mov
dec
jp
in
sbb
frstor
stos
sub
jne
das
xlat
out
and
jmp
cs
jle
sbb
add
inc
gs
jle
mov
ja
and
push
popa
cmp
push
sbb
lahf
ret
sbb
std
and
adc
pusha
and
enter
mov
ins
xchg
bound
js
pop
imul
mov
sub
out
lds
loopne
shr
(bad)
call
popa
test
rol
mov
fidivr
pushf
addr16
cmp
add
push
(bad)
rcl
lea
add
or
imul
mov
xchg
(bad)
jmp
inc
ret
sub
pop
aas
pop
in
xor
sub
retf
les
pop
nop
ins
xchg
stos
or
imul
mov
cmp
cmps
daa
rcr
push
jmp
pop
sub
sub
dec
popa
adc
xchg
adc
xchg
push
std
sahf
js
mov
cmp
ret
and
sub
push
adc
scas
cmp
setle
cmp
cld
push
mov
mov
sbb
aam
scas
fs
jnp
addr16
ja
stc
movs
fcomp
push
add
das
add
xor
adc
test
test
idiv
pop
cmp
add
stos
aaa
xchg
mov
jecxz
or
jmp
push
data16
movs
jae
dec
movs
in
push
mov
pop
dec
or
ret
dec
clc
stos
repz
enter
fsub
mov
jmp
push
ins
bound
xor
sbb
aad
loope
push
xlat
test
xor
inc
out
add
sqrtps
xchg
out
lea
pop
loope
shr
dec
repz
in
cs
aaa
sbb
inc
or
mov
xor
push
sbb
in
jnp
mov
in
je
cmp
and
ss
lahf
mov
cmc
xor
(bad)
in
movs
mov
cmps
rcl
push
jmp
sahf
push
push
inc
gs
or
cmp
cli
mov
xchg
lods
imul
sub
mov
or
inc
sahf
call
popa
jae
(bad)
into
push
scas
sub
jns
ja
jns
mov
cs
inc
loop
lea
cmp
aad
sbb
ja
pop
or
jp
shl
xchg
and
xor
das
mov
and
mov
mov
sar
mov
mov
retf
sub
imul
ret
mov
sub
int3
adc
mov
outs
push
sbb
test
dec
push
xor
mov
mov
ins
fiadd
lods
(bad)
mov
mov
sub
inc
mov
nop
mov
jo
fcmovu
imul
jmp
push
sbb
rcl
pop
in
inc
js
cmps
cmp
add
mov
outs
xlat
mov
or
cmp
lahf
popa
bound
in
in
arpl
ins
dec
fsub
pop
pop
imul
movs
int
mov
ss
sbb
int
add
ret
jae
cmc
out
cmp
sub
cwde
adc
add
pushf
je
out
adc
les
cmp
jne
xchg
sbb
call
loope
(bad)
xchg
fdivr
js
frstor
push
jmp
stc
xchg
xor
imul
(bad)
retf
fidivr
stos
dec
rcl
pop
or
fnstenv
push
je
mov
adc
call
sar
push
int
pop
sbb
push
sub
xchg
sbb
and
loop
inc
sub
cmp
mov
push
fcomp
add
pop
xchg
or
inc
mov
out
mov
add
lods
ss
aas
(bad)
jae
adc
mul
inc
loope
out
jo
jne
hlt
aaa
icebp
jnp
jmp
fidivr
mov
mov
fsubrp
or
scas
scas
xor
(bad)
cli
btr
jle
and
addr16
mov
cmp
or
fild
popf
sar
sub
movs
int
mov
outs
mov
push
xor
jnp
enter
pop
jl
cmp
in
aad
ror
std
push
sub
adc
mov
es
ja
adc
mov
int3
xor
jnp
pop
mov
add
inc
(bad)
cdq
or
mov
jbe
movs
mov
inc
syscall
inc
push
ror
and
push
popf
test
out
sbb
push
stos
clc
dec
and
fisubr
add
daa
inc
and
stos
pushf
cmp
add
push
jbe
popf
ret
ins
repnz
or
pushf
popa
inc
xor
xchg
pop
push
xor
or
nop
loopne
xrelease
mov
out
xor
cmp
movs
or
pop
cmps
jns
add
mov
data16
frstor
enter
daa
fs
dec
outs
sub
dec
lods
fistp
popf
push
ret
(bad)
js
xchg
cmps
loope
fcmovb
lods
xor
lock
rcr
lds
or
xor
aad
sub
test
out
addr16
adc
pop
mov
(bad)
popf
loopne
in
ret
dec
add
ins
mov
movs
test
add
push
and
enter
fdiv
fld
std
pop
aaa
arpl
mov
cmps
retf
adc
ret
inc
test
pop
mov
inc
sub
push
ret
adc
dec
mov
mov
inc
arpl
mov
jle
jg
lock
push
push
jl
addr16
or
pushf
movs
and
cmc
dec
idiv
js
ins
repnz
and
push
sub
inc
pop
ins
rol
push
adc
push
jo
sub
add
(bad)
fmul
mul
cmp
mov
add
inc
and
pop
int
(bad)
xor
mov
fwait
(bad)
aam
inc
sub
xor
xchg
stos
jne
inc
ds
shr
cmp
adc
sub
test
std
xlat
lock
pop
(bad)
pop
push
popa
dec
cmp
jle
loop
mov
cmp
arpl
push
sbb
in
xchg
pushf
clc
jecxz
daa
fdivr
sbb
adc
scas
adc
xchg
mov
pop
xor
mov
cli
mov
imul
adc
xchg
cmc
leave
or
adc
pop
xchg
or
cmc
sub
or
mov
pop
pushf
icebp
loope
(bad)
test
daa
lahf
sub
jb
jecxz
mov
cmp
cmp
push
add
in
inc
ds
dec
pop
ins
iret
dec
cmps
inc
adc
mov
idiv
inc
dec
sahf
sahf
pop
lods
or
fimul
rcl
or
mov
outs
test
retf
js
retf
cwde
cld
outs
dec
cwde
jl
xchg
cmps
idiv
out
pop
test
inc
mov
jl
mov
adc
dec
jle
pop
add
dec
je
pop
and
xor
xchg
jmp
ret
imul
sub
sbb
icebp
mov
and
cmp
int
stos
div
pusha
or
test
dec
or
or
leave
cmps
sti
mov
xchg
or
mov
cwde
cwde
std
sub
(bad)
cs
ins
ret
mov
in
movs
std
add
jp
sar
xor
push
lods
inc
repz
fcmovnb
sbb
outs
pop
pop
data16
or
mov
jae
mov
ja
sbb
ret
stos
mov
mov
mov
stos
dec
out
ins
test
pop
addr16
xchg
mov
cmp
push
movs
outs
adc
dec
pushf
fadd
and
push
aam
repnz
pop
imul
adc
ja
xchg
mov
cmp
fstp
les
cs
jmp
xchg
cld
xchg
mov
rol
mov
pop
adc
repnz
xchg
dec
call
outs
dec
pusha
adc
inc
add
jns
mov
adc
inc
cmps
mov
dec
loopne
mov
sub
pop
pushf
dec
pop
out
call
mov
aad
retf
adc
rcl
movs
fidivr
cld
outs
jo
cld
scas
sbb
mov
xchg
mov
lea
inc
aaa
hlt
fidiv
sbb
cmp
hlt
mov
scas
jle
icebp
sub
int3
add
lods
mov
cld
push
cwde
add
push
fmul
mov
xchg
enter
and
into
cmps
das
(bad)
mov
mov
data16
push
neg
cmc
sahf
cmp
or
pop
cli
jge
ret
sub
and
nop
add
gs
sub
push
dec
xchg
lods
loop
dec
loope
jne
shl
stos
jmp
data16
(bad)
mov
inc
push
lods
imul
sbb
dec
jecxz
dec
loopne
(bad)
call
adc
mov
ficom
daa
push
adc
add
out
jae
sbb
adc
(bad)
mov
xchg
push
clc
call
fs
dec
call
mov
into
xchg
push
jae
pop
ins
fstp
or
dec
lock
xlat
mov
dec
cs
mov
xor
daa
pop
sub
sbb
popa
push
mov
inc
cmp
cmp
mov
or
inc
into
mov
popa
dec
jle
sbb
mov
adc
push
mov
adc
pushf
call
shr
cmp
in
mov
repz
xor
je
ret
add
addr16
dec
xchg
hlt
xchg
sub
cmp
push
mov
xchg
cmp
aad
(bad)
xchg
mov
call
jg
adc
or
jmp
jbe
inc
nop
scas
adc
inc
inc
pop
call
leave
icebp
dec
dec
fmul
dec
inc
and
dec
push
out
fcomp
lock
adc
xchg
jbe
(bad)
ja
push
jge
and
dec
xor
sbb
cmp
adc
lods
data16
lods
sub
gs
cmps
(bad)
frstor
pushf
jmp
icebp
pop
fwait
aas
ret
add
sub
sub
out
out
mov
jne
hlt
xor
cmp
mov
clc
sbb
cmp
xor
jb
stos
movs
in
mov
mov
in
loop
xor
mov
in
daa
ds
mov
push
movs
mov
arpl
dec
sub
and
in
sti
cmp
cli
es
adc
push
jne
add
test
out
(bad)
movs
test
ror
jne
enter
imul
sub
out
pop
add
mov
jmp
sub
adc
cld
repnz
pop
add
xchg
jmp
aam
fucomi
mov
and
retf
cmp
pop
cmp
test
retf
or
mov
sbb
dec
cs
loop
dec
lock
data16
xchg
lock
push
inc
and
stos
nop
movs
stos
mov
push
int3
lock
ins
xchg
test
mov
(bad)
jo
cmp
xor
(bad)
sbb
adc
or
repnz
ffreep
inc
cmp
adc
dec
or
icebp
into
fcom
cwde
test
sbb
cmp
es
dec
push
inc
jnp
dec
jae
shl
mov
fmul
sbb
push
pop
pop
fdivr
lahf
test
ret
sub
and
popa
cs
ins
inc
dec
fist
add
and
push
popa
push
xor
imul
push
retf
adc
addr16
sti
pop
test
js
and
movs
cld
mov
or
int3
mov
outs
jp
push
push
loope
mov
inc
sbb
sbb
sar
jne
sbb
cwde
mov
adc
cmp
mov
repz
pop
add
cmp
or
mov
cmps
push
fadd
(bad)
fnstcw
(bad)
and
add
mov
dec
sub
mov
out
repnz
and
and
in
shl
dec
cmps
out
cmp
mov
out
dec
mov
ret
adc
out
xchg
or
stos
sbb
fcomip
(bad)
mov
ins
adc
mov
and
jb
jne
sti
sahf
(bad)
(bad)
stos
xchg
jmp
in
shl
add
add
iret
sar
or
pop
arpl
pop
mov
aam
pop
fwait
inc
adc
or
sub
cmc
xchg
and
movs
sub
es
ret
xlat
adc
sub
in
sar
mov
xor
bound
cmp
pop
fstp
or
adc
sub
stos
ja
add
dec
icebp
cmc
push
jle
jle
mov
fstp
jb
stos
sbb
mov
gs
mov
mov
scas
sbb
out
mov
xor
fstp
cdq
fmul
add
fsubr
sub
cmp
add
cmp
js
lods
mov
cmps
sahf
dec
sbb
scas
mov
mov
cmp
or
loop
ret
ds
test
hlt
aam
dec
rol
dec
xor
jne
sar
xchg
jns
mov
jb
out
imul
sahf
pop
or
and
pop
push
(bad)
sub
mov
xor
repnz
aad
scas
addr16
xor
mov
pop
cmp
lahf
sahf
clc
add
inc
mov
ret
jle
pop
sbb
pop
jnp
push
mov
pop
les
aas
imul
inc
push
and
adc
pop
mov
pushf
jno
or
sub
cmp
repnz
out
mov
mov
add
adc
out
nop
mov
sbb
push
jmp
adc
mov
mov
aam
enter
out
mov
or
bound
call
or
pop
push
inc
xchg
bnd
div
ret
jge
push
add
imul
add
popf
xchg
adc
jecxz
out
mov
clc
jecxz
lods
aam
movs
mov
sbb
sbb
mov
call
adc
adc
cdq
gs
movs
loop
leave
inc
punpcklbw
cmp
mov
call
or
sub
sbb
jle
retf
daa
pop
dec
imul
push
jnp
or
or
jbe
je
inc
leave
xor
fwait
xor
pop
test
in
in
mov
inc
lock
jbe
icebp
out
push
dec
adc
add
adc
sub
cmc
outs
ret
pushf
cmp
ds
xor
neg
and
jp
shl
xor
out
sbb
xchg
neg
push
cli
popa
fst
xor
push
fdivr
daa
stos
adc
fdivr
push
aas
cmps
cld
je
cmp
mov
cmp
push
test
aad
cmp
pop
in
cmps
hlt
not
xor
jne
push
ins
fsqrt
hlt
push
mov
sbb
cmp
cdq
hlt
dec
xchg
pop
pop
jge
lods
fsub
sbb
daa
shr
xchg
out
lea
inc
out
jno
dec
lock
dec
inc
mov
shl
imul
(bad)
movs
mov
(bad)
shr
lods
lock
cwde
stos
mov
mov
and
add
in
push
(bad)
gs
sti
mov
cdq
lods
dec
inc
pop
fnsave
pop
xchg
jg
add
(bad)
fdiv
jae
stos
jle
ret
stos
and
inc
mov
les
fldenv
out
sub
push
pop
outs
mov
int3
(bad)
cwde
es
bound
push
jno
pushf
imul
pop
lock
cld
sub
js
loop
inc
adc
jb
sahf
cld
call
scas
jae
test
fnstsw
push
cmp
pop
lods
mov
dec
inc
dec
rcr
jecxz
or
call
and
adc
psubsw
and
test
out
jo
iret
inc
pop
or
push
in
sub
mov
push
movs
or
and
sub
push
mov
ds
fisubr
sbb
repz
mov
cmps
out
pusha
pop
adc
pop
rol
retf
jne
push
inc
test
push
add
adc
push
nop
mov
inc
in
enter
stc
in
sbb
jg
pop
call
or
adc
add
push
(bad)
and
add
push
add
call
dec
mov
scas
es
xchg
xchg
pusha
jns
xchg
xchg
and
pop
or
push
sub
ret
cmp
je
xor
jo
js
and
repz
out
out
lods
je
imul
xchg
stc
add
(bad)
retf
mov
mov
cmp
or
mov
outs
push
cmc
int
das
ds
and
mov
rol
pop
xor
adc
xchg
xchg
mov
xlat
shl
mov
sar
mov
es
iret
div
test
lahf
lea
pop
dec
dec
fadd
rcl
jns
jmp
aas
push
or
jmp
pop
jle
push
ret
mov
mov
mov
jnp
jno
inc
push
and
pushf
push
mov
mov
inc
dec
retf
mov
push
clc
stos
rcl
push
inc
add
push
in
jae
cld
mov
cmp
jmp
mov
mov
fwait
cmc
sub
stos
add
jmp
aad
enter
cmp
scas
and
ret
inc
mov
jle
cmp
sbb
aaa
fcom
mov
gs
pop
xor
bound
(bad)
fld
xchg
iret
dec
imul
(bad)
leave
imul
pop
ficomp
stc
dec
call
ja
sbb
jp
rcl
les
push
fwait
mov
ror
mov
lds
push
mov
xchg
pop
icebp
xor
aad
bound
push
pop
jbe
xor
dec
icebp
and
inc
retf
jnp
xchg
das
in
push
cld
cmp
test
or
sbb
retf
jbe
mov
pop
dec
icebp
pushf
ja
rcr
jmp
sbb
aad
in
dec
cwde
xchg
push
mov
call
and
ret
mov
adc
push
xor
xor
mov
mov
(bad)
cmp
shl
(bad)
pop
sahf
(bad)
dec
in
ins
xchg
adc
pushf
repnz
pop
mov
ja
sbb
call
and
inc
inc
mov
xor
jmp
cmps
and
js
xchg
out
pop
nop
inc
jg
fwait
dec
dec
xchg
repnz
pop
pop
ror
dec
fsub
fiadd
pop
dec
lods
cmp
cmp
sub
sub
cmp
push
sahf
ret
sar
xchg
sahf
and
ins
mov
sub
cld
push
mov
pop
adc
sbb
cwde
or
jge
stos
shr
and
sub
cli
inc
(bad)
sub
lods
popa
adc
loopne
idiv
jae
jno
sub
adc
mov
loope
ss
mov
lds
ret
dec
xchg
fadd
je
nop
hlt
lahf
pop
mov
int3
push
inc
add
out
repnz
aad
jno
add
cmps
dec
or
into
sub
or
ret
xor
pushf
or
jl
call
cld
mov
adc
or
inc
inc
(bad)
jge
pop
or
in
adc
xchg
pop
movs
stc
and
shl
scas
cld
pop
es
mov
rcl
mov
enter
lods
popa
mov
mov
iret
mov
test
xor
or
retf
add
fidivr
mov
loopne
xor
retf
xchg
and
nop
xlat
cdq
test
ja
dec
push
xchg
mov
mov
push
lods
inc
and
icebp
loope
or
std
leave
sbb
ss
jno
pop
xor
jb
dec
jg
stc
and
test
mov
xlat
xchg
xchg
sbb
gs
ror
pop
out
mov
jl
adc
inc
mov
mov
rcl
(bad)
and
ds
gs
jb
hlt
jmp
jge
jl
xor
inc
sbb
xor
test
pop
rol
push
out
xor
mov
mov
push
pop
(bad)
xor
jecxz
xor
popf
call
jno
push
int
jmp
int3
outs
pusha
cmp
xchg
xchg
mov
jnp
scas
pop
xchg
dec
js
xchg
scas
xor
cmc
xor
pop
pop
in
and
fst
xor
in
cdq
rcl
push
(bad)
jl
(bad)
xor
int3
sbb
add
push
fwait
movs
jge
fisttp
push
jbe
sbb
mov
jmp
mov
push
fs
jbe
xor
(bad)
mov
mov
mov
sub
lods
mov
adc
pushf
push
dec
pop
adc
ja
retf
mov
imul
ror
ins
or
xchg
dec
push
fst
popf
enter
fild
enter
cmp
cdq
inc
jns
lods
popa
jne
mov
push
(bad)
mov
push
mov
add
icebp
fwait
movs
sub
data16
mov
push
mov
and
mov
inc
add
add
jmp
mov
pop
sub
fwait
mov
test
in
mov
dec
cs
sub
shl
sub
adc
inc
jne
fwait
lods
rcl
mov
jnp
fimul
adc
xchg
movs
cdq
jo
lods
mov
ds
rcr
add
jb
shl
cs
add
jg
lods
jle
popf
retf
mov
mov
call
push
lock
mov
repnz
inc
or
jns
mov
pop
cdq
nop
sub
es
(bad)
add
and
sbb
xchg
push
ins
fs
repz
xchg
mov
loope
xor
xor
into
pop
inc
dec
mov
pop
dec
cmps
add
add
aas
jno
sub
sub
out
and
aaa
mov
fs
jo
arpl
int3
sbb
jmp
stc
or
adc
xor
cmc
bound
adc
adc
popf
sub
cmp
fsub
push
jo
push
cmp
out
mov
xchg
jmp
aaa
sbb
mov
test
jno
mov
dec
push
push
out
cmps
xor
ins
jno
scas
imul
xor
push
rcl
xchg
sub
jae
imul
cmp
add
inc
(bad)
fistp
xchg
jmp
repz
in
ins
xchg
xor
(bad)
fcomp
jbe
mov
pop
lea
or
hlt
add
or
gs
mov
call
mov
pop
(bad)
in
mov
into
mov
fisub
jl
xor
cmp
xlat
push
lock
ins
shr
xor
loop
add
add
ins
leave
sub
out
mov
les
or
lock
test
and
pop
mov
test
repnz
scas
lea
mov
inc
push
daa
xor
pop
inc
pop
pop
pop
xor
popa
push
cmp
jp
sub
(bad)
shl
repnz
fwait
push
(bad)
xor
cmps
pop
jmp
sbb
mov
nop
pop
mov
or
iret
adc
cmp
es
test
mov
lea
mov
imul
or
lds
pop
add
and
xchg
outs
addr16
or
mov
pop
sbb
sub
out
pushf
data16
out
(bad)
retf
lock
mov
jae
or
in
xchg
mov
outs
xor
cmp
call
fidivr
stos
sub
pop
sub
ins
mov
xchg
sub
lods
push
dec
imul
popf
cmp
aad
mov
push
xchg
repz
pop
les
cld
inc
xor
into
pop
mov
(bad)
push
adc
neg
mov
adc
div
imul
inc
cmps
jp
push
sbb
xchg
inc
stos
or
lock
mov
cwde
mov
pusha
scas
fsub
add
sbb
test
sub
mov
retf
(bad)
mov
or
jo
idiv
jmp
sub
lahf
and
fistp
dec
dec
int3
out
out
push
mov
dec
out
jb
push
xor
out
fild
adc
xor
push
sbb
imul
add
mov
pop
adc
(bad)
js
popa
xor
es
cld
mov
adc
mov
test
jle
ret
(bad)
mov
(bad)
fmul
add
sbb
out
inc
in
daa
ins
sar
jge
add
repz
xor
sbb
xchg
ins
and
and
ficomp
jb
and
movs
xchg
fistp
add
push
dec
cmp
iret
jecxz
adc
enter
mov
les
mov
sbb
test
and
jecxz
jae
cmps
sti
repnz
cmp
call
fidivr
arpl
rol
inc
cmp
and
xchg
mov
push
mov
cli
jae
aam
or
xor
test
fisub
(bad)
mov
push
or
dec
repnz
scas
sub
cmp
out
cmc
btc
bound
xor
std
push
out
cli
push
int
scas
mov
jle
mov
ret
das
pop
or
or
icebp
xchg
mov
outs
mov
in
sbb
test
pop
(bad)
mov
or
ret
sub
jne
gs
call
jge
outs
pop
out
movs
out
in
data16
adc
or
sub
pop
ins
in
cdq
mov
leave
test
and
jmp
pop
push
cmp
inc
cmp
fild
cmp
icebp
pop
stos
sbb
cmp
jp
popa
sahf
sbb
iret
xor
test
pop
xor
ins
xchg
dec
xchg
in
jne
mov
and
add
ds
xchg
movs
retf
mov
loope
sbb
arpl
sub
cmp
xchg
fstp
sbb
push
push
cmp
push
jl
lahf
ja
dec
repz
and
xor
loop
jmp
mov
arpl
sbb
jae
nop
jmp
and
outs
pop
aaa
mov
iret
mov
sub
loope
sbb
das
push
or
and
pop
sti
stos
(bad)
and
ss
mov
jae
push
and
mov
xor
js
into
aam
xor
xchg
and
xlat
mov
mov
sub
sbb
pop
jp
jge
nop
jecxz
mov
in
xchg
cmc
test
xor
fistp
xlat
and
pop
retf
add
out
push
sbb
dec
pop
and
push
mov
fdiv
cmp
ss
in
pushf
aad
fwait
xchg
outs
gs
xlat
pushf
push
mov
ja
nop
mov
outs
daa
outs
fisubr
leave
push
in
nop
xlat
push
sub
cmp
mov
fisttp
inc
test
push
sbb
fiadd
jns
lahf
and
pop
inc
(bad)
xor
les
mov
repnz
es
mov
sbb
cmp
les
aas
data16
jne
div
repz
mov
jae
inc
scas
mov
mov
cmp
js
jnp
mov
lds
out
and
(bad)
je
jno
shl
mov
pop
data16
call
test
push
add
fst
push
retf
aad
xor
sbb
pop
xchg
add
mov
loop
push
and
add
mov
out
inc
outs
mov
hlt
fcmovnbe
push
xor
js
sbb
push
and
mov
inc
xlat
and
mov
dec
xchg
mov
xor
mov
sub
lea
sub
in
cwde
lods
or
test
mov
xchg
push
shl
js
repz
movs
xor
es
sub
mul
push
or
sbb
(bad)
mov
pop
or
lds
cmp
add
cmp
fdivr
hlt
shl
cmp
dec
sbb
xor
push
or
xchg
dec
sub
bnd
shl
or
test
sbb
in
out
call
jmp
test
mov
(bad)
fadd
sub
aas
mov
push
inc
movs
sbb
pop
gs
ret
jmp
push
cli
fcmovu
push
ja
add
out
push
cmp
test
lds
cmps
scas
(bad)
out
jno
dec
jle
inc
jo
scas
retf
sahf
dec
add
sbb
xchg
jno
mov
imul
lods
sbb
xchg
pop
xchg
mov
jmp
or
xor
dec
pop
xor
cdq
push
fcmovnu
cmp
pushf
(bad)
pop
mov
sahf
mov
xchg
ret
lods
sub
loopne
dec
jle
lock
aaa
lods
aaa
mov
pop
pop
mov
jmp
pop
out
imul
sti
mov
mov
fcomp
push
repz
ins
mov
dec
sub
aam
cmp
cs
stc
adc
and
jo
cmc
(bad)
pop
and
aaa
js
lock
cmps
js
xor
and
imul
ds
jmp
jp
dec
push
and
jne
fist
fst
ret
push
movs
or
mov
js
int3
push
sub
lock
stc
movs
dec
lahf
outs
rcr
mov
clc
enter
clc
dec
add
clc
cmp
test
icebp
fwait
pop
aam
dec
sbb
repz
xchg
in
xchg
mov
retf
push
cli
out
or
mov
test
aas
lahf
jb
aad
mov
dec
(bad)
push
jbe
sbb
pop
pop
or
cmp
sbb
sar
cmp
fmul
stc
lods
push
mov
call
push
jae
rcr
pop
scas
inc
adc
mov
jo
cmp
ficomp
shl
sub
inc
retf
jmp
pop
sbb
sbb
fisubr
push
push
inc
cmp
cmps
sbb
in
mov
ins
add
lods
cmp
or
lods
pop
outs
and
mov
cs
loopne
outs
pop
mov
call
mov
je
hlt
xchg
cmps
or
push
movs
mov
xchg
test
scas
sbb
xchg
ins
or
cli
xchg
sahf
in
in
je
fdiv
xchg
cmp
call
mov
leave
and
iret
jb
mov
mov
pop
adc
add
inc
lods
shr
adc
pop
inc
cmp
dec
ficom
jmp
adc
ds
fs
fist
mov
and
addr16
mov
and
dec
jle
lds
push
jmp
mov
mov
xor
fs
mov
adc
lock
rcr
pop
mov
sub
mov
adc
and
movs
gs
fdiv
andnps
pop
fwait
xlat
xchg
loopne
cs
in
scas
or
mov
pusha
sar
xor
enter
jmp
mov
mov
ja
lods
ds
and
pop
shr
in
jge
mov
adc
mov
loopne
stos
sub
mov
clc
add
mov
adc
movs
lea
in
bound
sbb
sbb
shl
and
arpl
clc
jo
and
lea
and
pushf
cwde
test
xor
mov
pop
mov
out
xchg
or
mov
cmps
and
or
dec
int
mov
test
and
lea
cli
int3
test
jmp
sar
jb
loopne
cmp
stos
mov
sbb
mov
pop
js
lods
repnz
cdq
pop
xchg
shr
loope
sub
test
mov
aad
xor
adc
push
push
movs
cs
cld
cs
arpl
ror
sahf
push
cmps
xlat
pop
or
scas
out
mov
shl
inc
and
push
xchg
jge
dec
pushf
shr
jne
out
xchg
repz
sub
mov
dec
es
packssdw
cmp
sub
mov
int3
pop
cwde
fbld
lds
cwde
stos
mov
sub
jge
push
add
sbb
(bad)
cmc
cmp
cmp
inc
fstp
enter
call
daa
mov
lods
sbb
je
nop
fdiv
sbb
push
aad
fadd
fdiv
js
adc
cwde
add
repnz
stos
scas
cwde
add
pop
into
data16
pushw
ss
out
gs
in
push
popa
pop
xchg
rcl
cmp
jmp
cld
add
in
test
add
push
movs
pop
dec
cmp
lods
adc
scas
mov
mov
addr16
fisttp
xchg
les
aam
aas
mov
aaa
ja
inc
loop
cmp
fdivp
inc
bound
retf
sbb
sub
shr
xchg
addr16
mov
sti
xchg
enter
sbb
add
ret
push
ret
call
push
das
or
stos
imul
sbb
nop
cs
xor
scas
rol
xlat
jno
int3
dec
fbld
dec
mov
sbb
push
push
adc
pop
sub
cmps
inc
dec
xchg
inc
xor
xchg
aad
outs
pop
fbld
mov
mov
or
loopne
test
cmp
lock
das
cmc
jae
push
jno
pop
sar
xlat
pop
int3
ja
imul
stos
jmp
sti
fwait
pop
cmp
in
stos
dec
sub
inc
cmp
push
mov
lahf
aad
sbb
sub
and
enter
movs
lds
push
std
test
jbe
sub
daa
cmp
fs
pushf
xchg
popa
popf
xchg
les
fsincos
add
dec
cli
mov
add
jmp
outs
mov
sbb
les
fbld
sub
inc
mov
sub
test
jmp
or
in
outs
aas
retf
lods
mov
das
movs
into
adc
retf
or
or
push
in
rcl
sub
sahf
sbb
sub
das
addr16
cmp
outs
(bad)
int3
adc
and
xor
cmp
mov
mov
leave
xor
movs
pop
int3
hlt
inc
aam
jp
mov
stos
cmp
cdq
fldcw
jnp
(bad)
jmp
sbb
xchg
cdq
test
cs
std
std
jg
in
scas
test
add
icebp
jmp
and
ins
bound
push
cmp
fadd
gs
mov
xor
cdq
mov
or
jle
push
(bad)
mov
dec
xchg
sub
xor
adc
inc
sub
lock
scas
jle
daa
add
sub
mov
mov
fld
push
mov
mov
xchg
dec
mov
outs
scas
jbe
ins
dec
sahf
test
sub
out
sbb
jae
sbb
sub
adc
les
xchg
sub
add
sub
push
xchg
call
fnstenv
or
dec
pusha
push
cmp
test
sbb
cmp
push
inc
out
mov
push
push
xchg
mov
leave
mov
test
ficomp
or
pop
jne
in
shl
adc
dec
cmp
daa
shl
push
dec
ja
in
ret
push
sub
dec
inc
ret
jo
pop
push
and
inc
add
sub
mov
cmps
shl
int3
jno
mov
hlt
push
movs
sub
pop
adc
int3
(bad)
xchg
adc
pop
sar
outs
and
pop
mov
inc
adc
inc
inc
inc
arpl
sbb
push
add
xchg
xchg
xor
les
dec
ins
fnstcw
cmp
int3
(bad)
fucomp
ds
push
fdivr
pusha
fldln2
hlt
sub
inc
out
int
data16
adc
jnp
test
hlt
outs
pop
push
pop
xchg
hlt
shr
mov
icebp
stos
out
mov
sbb
mov
mov
or
(bad)
xor
out
xor
mov
cwde
ret
scas
add
add
call
mov
adc
ja
mov
popf
je
(bad)
mov
mov
lea
cmp
loop
xlat
call
xchg
outs
nop
mov
adc
xchg
jb
push
shr
mov
pshufw
call
jns
pop
aas
out
nop
int
xchg
nop
adc
xchg
jle
mov
sti
mov
in
fwait
push
mov
cmp
cmp
into
sub
dec
rol
pushf
xor
or
inc
xchg
cmps
and
nop
push
icebp
out
pop
imul
movs
addr16
xchg
push
out
xor
adc
jl
sbb
inc
xchg
mov
and
cmp
lds
outs
mov
jnp
int
cli
jo
dec
xor
std
lods
pusha
dec
mov
out
adc
hlt
jno
int3
jmp
dec
mov
test
dec
sub
dec
xchg
stos
js
aas
sub
iret
popf
out
inc
mov
pop
sbb
pop
push
mov
aam
fs
mov
sbb
aad
inc
scas
lods
aas
call
loop
mov
out
in
daa
sahf
push
dec
xchg
cmps
sbb
jns
mov
loop
jmp
jp
mov
aad
push
fnstenv
mov
push
mov
test
loope
pop
jge
dec
mov
test
jl
popa
and
push
dec
in
not
xor
cwde
icebp
sub
or
ins
add
aas
add
lahf
adc
jp
shl
or
jae
xor
jns
js
mov
jmp
jge
mov
div
dec
movs
jle
mov
fisttp
mov
stc
rol
je
sub
add
cli
ins
xchg
sar
and
stos
sti
and
icebp
sub
xchg
arpl
sbb
mov
test
shl
pop
pop
xchg
dec
or
shr
mov
gs
cmps
sbb
ficomp
mov
push
scas
ins
inc
and
push
aad
xchg
push
sahf
mov
jle
push
and
xchg
push
shl
adc
mov
aaa
int
sbb
das
adc
aas
ret
loopne
sub
les
ret
or
mov
int3
lock
cmp
pusha
lahf
lods
iret
adc
jp
lds
je
mov
daa
in
jae
jl
test
dec
jmp
sbb
push
aaa
pop
dec
pushf
movs
mov
xor
or
pop
xor
cmp
mov
add
cs
les
push
mov
dec
enter
cmc
icebp
in
push
cmp
mov
mov
push
mov
outs
test
fldlg2
imul
xchg
cmp
mov
dec
stos
inc
jl
movs
adc
inc
mov
inc
add
mov
sub
push
cmp
push
mov
test
push
inc
xchg
mov
jg
(bad)
mov
mov
cmp
jmp
sub
arpl
push
es
enter
repnz
adc
into
sub
mov
test
pop
pushf
ins
inc
sub
pop
adc
imul
shr
pop
mov
sahf
out
cli
stc
mov
mov
xchg
pop
push
inc
(bad)
es
addr16
imul
dec
sub
jo
xchg
test
shr
mov
in
adc
sub
sbb
push
lock
xor
shr
das
cs
dec
sar
push
stos
jne
sub
jle
inc
out
xlat
and
hlt
call
loope
inc
fsubr
mov
out
loopne
test
add
adc
adc
mov
adc
push
jmp
fadd
into
xor
mov
sar
adc
push
and
cmp
cmps
and
mov
fs
lock
je
jno
in
and
jle
lods
xchg
or
call
inc
or
pop
aas
dec
les
fisttp
push
jb
mov
jmp
es
mov
lds
out
cmps
enter
mov
mov
cmp
sub
pusha
movs
je
add
mov
(bad)
repz
(bad)
fwait
pop
sub
or
fdivp
sbb
ror
fcmove
jl
pop
inc
pusha
aam
popf
mov
inc
jg
sub
xchg
ret
inc
call
test
mov
mov
push
xchg
sub
ds
mov
push
(bad)
push
mov
out
test
ins
sbb
adc
sbb
mov
(bad)
and
fld
xchg
mov
(bad)
xor
lahf
out
scas
rcr
jnp
dec
das
push
or
adc
rol
cmps
pop
mov
aam
enter
and
xchg
dec
sub
fiadd
sar
push
fs
xor
fdiv
adc
cmp
xchg
push
je
scas
movs
mov
icebp
pusha
cmps
pop
mov
std
ret
cmp
push
fucomp
sbb
xor
lods
mov
hlt
or
test
das
dec
fwait
test
faddp
inc
rcl
(bad)
fisttp
xor
adc
(bad)
icebp
sbb
cmp
dec
xor
pop
push
fwait
push
dec
sub
or
and
js
push
fisttp
ficomp
jge
aaa
pop
in
lds
add
dec
adc
add
mov
sbb
repnz
or
adc
xchg
mov
in
pop
xor
das
lods
dec
out
and
jle
movs
movs
xor
jno
inc
xchg
gs
mov
iret
adc
out
aas
aad
jg
repz
mov
pop
lds
aaa
add
es
arpl
pop
mov
mov
pop
adc
push
sbb
outs
jb
mov
shl
aad
and
sbb
outs
jbe
test
movs
loopne
dec
pop
push
pop
push
enter
out
sti
pop
mov
shl
xchg
cmc
call
es
in
pushf
std
test
in
clc
(bad)
retf
or
out
inc
daa
adc
inc
cwde
pop
pop
fstp
fxch
xchg
jl
enter
stos
pop
pop
hlt
sbb
xor
dec
cdq
and
cmp
add
ficom
xchg
push
jbe
sbb
jp
cmc
jg
mov
out
mov
movntq
out
mov
sub
xchg
sub
test
push
popf
pop
int3
repz
push
inc
jecxz
dec
mov
or
sub
pop
sub
xor
rcr
pop
jae
and
movs
or
jne
fidivr
retf
inc
mov
or
xchg
inc
pop
push
cld
stos
add
mov
(bad)
lock
aad
cmp
(bad)
rcl
ret
jo
neg
mov
imul
and
xor
dec
push
mov
mov
push
mov
outs
fwait
gs
push
test
gs
xlat
rcr
add
adc
sbb
push
add
mov
mov
jno
jo
lods
loope
pop
mov
nop
(bad)
cld
lods
add
(bad)
ds
push
xor
mov
pusha
imul
(bad)
mov
push
sbb
add
arpl
jo
mov
scas
and
xchg
adc
test
dec
pop
push
fidiv
out
xor
cwde
mov
pop
jo
inc
fild
pop
and
mov
outs
pop
or
dec
or
mul
movs
jl
(bad)
xor
jmp
xor
lea
call
dec
jbe
out
ror
adc
adc
popa
nop
mov
inc
and
fisttp
inc
inc
cli
in
(bad)
cmp
cmp
cdq
jecxz
mov
aam
mov
nop
xchg
aaa
test
jbe
shr
dec
cmp
mov
mov
mov
call
out
push
ins
ins
adc
jbe
lock
and
shl
jmp
enter
popa
add
push
jl
dec
gs
mov
sub
pop
add
dec
nop
clc
popa
int3
mov
call
adc
out
add
arpl
adc
jno
mov
dec
sub
scas
movs
adc
stc
add
leave
xchg
pop
xchg
aam
cmps
(bad)
pop
or
mov
repnz
mov
in
and
lods
in
(bad)
jae
mov
aam
lods
cmp
aad
loope
jecxz
push
inc
sbb
sbb
add
sub
mov
repz
or
sub
add
and
mov
aad
movs
xchg
aad
jecxz
repnz
(bad)
fdivrp
adc
aas
sub
dec
adc
adc
adc
pmulhuw
fld
mov
call
xor
mov
pop
sub
hlt
mov
imul
push
xor
popa
inc
int3
add
sbb
jecxz
(bad)
(bad)
xor
push
ins
mov
xor
mov
in
mov
test
out
pop
aad
dec
je
rol
ret
(bad)
jnp
call
stc
jge
mov
aaa
xchg
(bad)
test
out
ss
mov
dec
dec
cmp
aam
sbb
or
push
call
jno
inc
pop
movs
fcomi
pop
sbb
in
(bad)
loopne
mov
outs
pop
add
mov
add
cmp
mov
dec
aaa
test
cmc
mov
pop
xor
inc
or
xchg
fstp
mov
inc
frstor
push
hlt
push
aas
and
inc
mov
clc
and
sbb
mov
mov
mov
lahf
shr
push
jl
push
imul
lods
outs
sub
outs
pop
sahf
dec
mov
test
sbb
movs
(bad)
bound
or
jl
inc
test
mov
add
pop
mov
jp
mov
xor
imul
adc
movs
dec
mov
sbb
mov
push
and
push
(bad)
stc
push
daa
mov
sar
test
and
call
sbb
jo
or
fwait
adc
adc
jns
mov
add
mov
cmp
jmp
and
shr
sbb
das
cmp
clc
mov
xor
mov
pop
dec
out
lock
push
pop
movs
in
lods
or
adc
xchg
outs
ins
jecxz
std
cli
rol
into
dec
xchg
cmp
cmps
(bad)
inc
or
sbb
xor
lock
daa
lds
lods
movs
aad
mov
test
pop
clc
add
cmps
and
adc
xlat
inc
mov
lods
scas
lea
pop
jecxz
push
push
mov
xchg
mov
add
fs
jge
fucom
dec
repz
mov
lds
adc
pop
xor
scas
lahf
pop
sub
jb
dec
mov
dec
scas
jae
into
xchg
aas
sub
addr16
push
rcl
in
jle
aaa
cmc
imul
std
pop
mov
popf
gs
mov
and
xor
sti
adc
sbb
in
xchg
mov
stos
sub
and
push
mov
mov
push
push
jl
aas
jne
dec
imul
mov
aaa
cmp
mov
not
movs
inc
inc
lahf
add
cmp
(bad)
mov
and
mov
(bad)
fucompp
xor
sub
inc
xchg
int3
add
cld
cmp
sub
pop
cmp
xor
sub
cli
les
dec
std
imul
into
and
int
cmps
jno
sub
int
fcomp
pushf
sub
mov
xor
fisttp
stos
pop
mov
mov
push
sbb
adc
sub
sbb
jl
fiadd
sub
sbb
(bad)
xor
icebp
xor
inc
(bad)
dec
pop
(bad)
ins
adc
div
dec
adc
(bad)
sub
or
call
je
out
jmp
retf
aaa
adc
push
scas
inc
pop
adc
lods
xor
les
mov
cmp
fwait
lods
imul
pop
mov
jo
retf
mov
scas
push
mov
pop
call
loopne
xchg
inc
pop
xchg
loopne
rcr
retf
outs
mov
int
and
adc
cmp
mov
xchg
ficom
push
pop
std
data16
mov
jecxz
add
out
leave
push
jo
inc
ficom
cmp
js
lock
jb
js
sti
cwde
adc
popf
inc
iret
push
dec
ret
ficom
inc
cmp
in
ror
mov
cld
pop
pop
(bad)
iret
mov
or
push
push
mov
push
inc
pusha
adc
stos
add
(bad)
(bad)
mov
pop
sahf
cmps
dec
mov
(bad)
into
push
sbb
aam
bound
div
xchg
cmp
xor
jne
iret
stos
mov
xor
(bad)
sub
jmp
push
sub
jge
adc
dec
add
and
dec
shr
xchg
mov
mov
xor
cdq
dec
int
sbb
inc
outs
mov
push
jle
fs
cmps
xor
jecxz
mov
lods
pop
inc
ds
or
mov
push
test
jle
pop
and
(bad)
sub
icebp
cmp
and
pop
scas
dec
stos
jbe
loopne
cmps
pop
inc
dec
ror
xor
xor
dec
inc
push
xor
bound
jbe
mov
jle
jo
into
xchg
or
(bad)
into
ins
pushf
and
nop
out
shl
and
inc
inc
add
mov
inc
sub
sbb
neg
icebp
pop
rcr
or
push
sar
das
jno
popa
push
fidivr
(bad)
fnstsw
in
mov
call
push
inc
cs
xor
xchg
(bad)
jecxz
rcr
retf
adc
shl
dec
sahf
push
xchg
(bad)
ret
inc
sbb
xchg
je
push
into
ds
adc
scas
mov
jmp
and
cdq
mov
pop
jecxz
dec
mov
cmps
xor
mov
in
xchg
mov
(bad)
xchg
mov
inc
cmp
rcr
test
outs
retf
pop
popf
mov
push
ins
in
and
mov
pop
jecxz
cmp
into
in
jmp
push
xchg
or
sub
xlat
(bad)
imul
xchg
mul
inc
inc
xchg
popa
lods
mov
add
or
sbb
mov
shl
add
rcl
adc
shl
leave
clc
leave
inc
xor
cmp
mov
cld
cmp
mov
ja
lea
cmp
(bad)
xor
pushf
xlat
inc
lahf
(bad)
(bad)
call
dec
jne
dec
pop
jle
jns
sbb
xchg
add
ja
mov
cmps
dec
mov
add
cwde
add
pop
push
sbb
push
pop
mov
adc
shr
adc
adc
js
dec
push
lods
retf
(bad)
into
cmovg
sub
es
dec
pusha
sub
repz
fwait
aad
dec
cmp
or
sbb
pop
xchg
mov
mov
fst
mov
sbb
mov
(bad)
push
xchg
test
adc
jmp
les
lds
sbb
fs
bnd
pop
cmp
mov
in
mov
mov
and
jbe
out
mov
mov
cmp
shr
jns
(bad)
cmp
adc
int
add
dec
sbb
or
(bad)
int
pop
mov
push
out
inc
sub
fiadd
mov
jmp
dec
mul
lds
sub
cmp
inc
jbe
jne
dec
in
jg
test
in
push
or
gs
or
jno
xor
clc
ret
int3
xchg
xchg
jp
fisubr
mov
popf
outs
popw
test
ret
cdq
inc
(bad)
sub
and
repnz
sbb
sub
fist
xor
mov
lea
add
add
popa
sbb
movs
mov
adc
mov
popf
pop
inc
fcomi
xor
jl
inc
jg
fwait
in
fucomp
add
loop
das
add
jl
scas
fldcw
js
sti
jge
push
adc
ins
xlat
loop
cs
shr
into
pusha
stos
xor
hlt
adc
push
xchg
ins
aam
shr
nop
cmc
and
pop
movs
std
dec
pop
mov
mov
ret
dec
xchg
sub
pause
adc
push
jle
cmc
loop
push
xchg
das
(bad)
ins
aam
xchg
jl
and
xchg
cmps
imul
dec
add
not
lahf
dec
cmp
lods
dec
outs
shl
push
add
(bad)
fidiv
shr
inc
xchg
sbb
test
nop
nop
xchg
pop
stos
(bad)
dec
mov
pusha
ret
pop
cmc
nop
movs
inc
(bad)
aas
je
rcr
jge
mov
lds
xor
ret
dec
std
cmp
push
sbb
icebp
rcr
imul
loop
push
adc
sbb
cli
sub
fadd
ins
mov
sti
dec
not
pop
push
push
push
fdivr
shr
enter
stc
lods
fistp
xchg
mov
sbb
pushf
ficomp
clc
xor
and
pop
mov
adc
inc
leave
aad
push
jg
cwde
std
mov
popa
xchg
dec
cmp
sbb
cmp
push
dec
mov
in
push
add
xchg
sbb
fiadd
xor
or
xchg
pop
leave
cmp
push
ds
push
jno
(bad)
sbb
cs
push
add
loopne
sub
jge
push
test
jnp
mov
ficom
sub
sbb
jno
mov
push
enter
mov
sbb
stos
xor
out
loope
fnstcw
loopne
sub
shl
cmp
xor
jae
push
dec
fs
mov
test
dec
enter
movs
popa
(bad)
fs
rcr
pop
jge
adc
mov
inc
pop
xchg
push
push
push
les
cmp
xor
pop
movs
adc
fadd
xor
sar
lahf
jae
inc
pop
dec
adc
scas
clc
mov
sub
retf
sahf
add
lods
repnz
cmc
lea
repz
xor
mov
inc
dec
repnz
push
ret
cmp
jo
fistp
push
push
xor
pop
shl
fild
adc
lods
int
mov
xchg
jb
ror
add
jmp
call
sub
adc
pop
lahf
sbb
cmps
ss
addr16
int3
pushf
outs
ret
cmp
rcl
and
pop
pop
push
nop
daa
lods
add
movs
fs
loopne
adc
adc
inc
mov
jl
mov
fiadd
jbe
dec
sar
cdq
mov
retf
fistp
stos
push
in
xchg
ins
push
xchg
push
mov
(bad)
fst
adc
mov
adc
jo
adc
fwait
test
or
xchg
sbb
xchg
popa
xchg
arpl
bound
je
xor
(bad)
mov
aaa
inc
jg
sub
jmp
sub
addr16
int3
enter
mov
scas
xchg
push
sahf
into
cdq
inc
dec
inc
das
pop
(bad)
adc
scas
push
sti
pusha
mov
push
(bad)
jl
mov
cwde
test
aam
cmp
xchg
sbb
xor
gs
pusha
movs
fisttp
mov
add
into
lea
rcl
inc
dec
cmp
xchg
jno
xchg
adc
push
inc
ja
imul
aaa
mov
lods
jecxz
stos
mov
cmp
jb
sti
push
jmp
(bad)
push
pop
sub
pushf
sbb
or
pushf
test
fisttp
xchg
call
cmp
xor
xor
dec
push
push
xchg
in
sub
rcl
xchg
dec
lods
add
push
push
push
stos
sub
lea
hlt
cdq
fcmovb
das
outs
nop
fsubr
inc
cmp
sbb
jne
push
dec
stc
rcr
xor
ins
icebp
fcmovu
das
dec
sti
adc
mov
add
(bad)
rcl
lea
jl
(bad)
in
mov
mov
dec
frstor
push
jecxz
xchg
xor
mov
mov
mov
and
in
std
inc
daa
neg
pop
sub
sbb
rcl
ret
bound
mov
cld
lds
movs
xlat
push
push
sbb
loopne
or
inc
jae
imul
dec
iret
stos
push
js
fist
dec
paddd
test
sub
xchg
adc
inc
dec
lods
mov
mov
movs
pop
dec
jb
sub
xchg
icebp
push
jmp
paddd
mov
pushf
xchg
call
inc
data16
jl
arpl
loop
ror
mul
cmp
inc
mov
into
jp
mov
dec
int
mov
xchg
add
add
pusha
mov
jns
or
(bad)
loope
in
iret
dec
xor
sar
(bad)
out
daa
jp
leave
sub
mov
ds
pop
lods
ins
cmc
arpl
lock
int
pop
adc
pop
and
pop
inc
movs
mov
hlt
xchg
dec
les
inc
or
mov
cmc
and
and
dec
or
(bad)
jb
cs
fst
loopne
xchg
stos
add
retf
jo
rcr
aas
pop
jge
test
scas
xchg
(bad)
std
lock
aam
imul
jnp
pop
idiv
pop
and
jl
test
jp
mov
fsubr
ret
in
out
scas
test
mov
pop
add
inc
xchg
cs
ins
dec
xor
xlat
(bad)
push
out
int3
(bad)
sub
fdiv
ffreep
push
das
xchg
jo
adc
scas
call
sbb
jbe
cmp
or
xor
xor
or
xchg
sbb
mov
(bad)
call
jnp
dec
jecxz
mov
sub
pop
imul
pop
stos
cmp
cmp
inc
out
outs
push
inc
shr
inc
jno
std
lods
outs
(bad)
out
mov
retf
movs
imul
imul
inc
push
dec
pusha
adc
fdiv
(bad)
jge
nop
add
ins
sub
dec
aad
cmp
icebp
(bad)
aad
mov
sbb
mov
mov
fmul
pushf
jl
adc
in
dec
jg
int3
jns
lock
mov
scas
scas
mov
add
mov
stos
or
dec
popf
push
ds
inc
and
int3
or
xor
xchg
cmps
mov
mov
aam
push
out
dec
mov
outs
dec
arpl
mov
je
jb
mov
adc
sub
pop
icebp
sub
cdq
cmp
ret
movs
scas
and
shl
dec
add
mov
pop
es
jmp
rol
movs
add
or
cmps
jno
pop
xor
push
jo
xor
and
jecxz
ja
enter
push
pushf
and
(bad)
(bad)
movs
mov
inc
add
rcr
add
(bad)
and
jb
and
mov
mov
xor
hlt
adc
in
mov
xchg
pop
les
outs
sbb
fild
push
mov
xchg
sbb
sub
dec
dec
in
sbb
xchg
shl
xor
ss
xchg
(bad)
push
test
cmp
mov
xor
mov
daa
xchg
mov
push
jge
sti
pop
retf
push
or
mov
mov
in
lahf
stos
mov
push
daa
xor
lock
xor
xor
jne
int
xor
jp
push
ror
xchg
cmp
ins
das
dec
inc
mov
pop
ret
sbb
push
inc
lahf
and
adc
sub
xor
pop
out
or
mov
mov
sbb
mov
inc
in
cdq
xchg
sbb
cvtpi2ps
lahf
bound
int
pop
pop
es
(bad)
pop
adc
add
cmc
lahf
nop
mov
jmp
mov
xchg
push
add
fisttp
adc
lods
pop
add
mov
aaa
mov
imul
inc
dec
pop
(bad)
(bad)
mov
or
fst
dec
sub
dec
sbb
jl
inc
pop
jmp
jnp
call
jp
(bad)
sbb
jo
lods
das
xchg
sbb
es
push
jno
call
push
mov
sub
sbb
and
jae
pop
cmp
and
inc
(bad)
repnz
std
fcom
scas
push
and
sti
mov
iret
push
popf
(bad)
out
fisubr
dec
adc
xor
mov
clc
pop
scas
inc
sahf
(bad)
(bad)
jno
mov
neg
rol
sbb
xchg
sbb
mov
pusha
add
in
pop
xor
sbb
(bad)
dec
dec
out
add
test
inc
pop
imul
dec
lock
mov
adc
push
sub
addr16
cmps
rcl
mov
jle
jecxz
cmp
popa
jmp
ss
iret
mov
or
cmp
in
les
sub
ss
rcr
pop
fild
cmp
inc
mov
dec
dec
sub
adc
fwait
xchg
fmul
mov
jnp
arpl
outs
aam
push
mov
sbb
push
(bad)
lahf
test
dec
out
dec
dec
das
dec
into
inc
idiv
in
cdq
repnz
(bad)
pop
cmp
shl
sidtd
mov
inc
stc
scas
push
call
dec
loope
mov
cmp
adc
out
popa
pop
in
inc
ja
icebp
pop
inc
xor
call
dec
pusha
mov
jmp
jmp
cld
dec
out
mov
sbb
jae
jne
mov
push
imul
lods
xor
pop
lahf
push
jecxz
push
dec
cmc
jns
dec
mov
add
cmp
mov
sub
cmp
fsubr
nop
fbld
or
mov
call
adc
and
inc
adc
jae
sbb
(bad)
cmc
xor
add
(bad)
enter
push
dec
popf
xchg
push
lahf
ins
mov
jmp
cmp
fiadd
pop
fldcw
xchg
pop
or
cmp
add
sahf
cmp
fidiv
cmps
jnp
mov
rol
sbb
loope
mov
xor
ret
push
cmp
outs
ins
dec
jb
pusha
push
leave
imul
stos
adc
sub
clc
mov
add
popf
jmp
mov
or
out
xchg
mov
inc
icebp
sub
movs
push
push
out
or
fiadd
mov
push
cmp
inc
ss
nop
repnz
cmp
and
js
gs
dec
adc
mov
cmps
mov
dec
adc
mov
nop
xchg
fsubr
adc
jno
jmp
mov
sbb
dec
ins
adc
fdiv
push
cmp
lahf
sahf
pop
sahf
push
gs
push
fcomp
aaa
(bad)
out
fld
retf
add
inc
cmp
mov
stc
xchg
jge
dec
cmp
or
js
popf
retf
les
enter
jbe
(bad)
add
sub
sahf
shr
out
mov
xor
mov
or
test
(bad)
loop
out
push
es
arpl
out
jle
out
xchg
xlat
sbb
dec
or
popf
icebp
scas
lods
retf
dec
adc
or
popf
sbb
mov
push
pop
sbb
sahf
jmp
ss
(bad)
(bad)
xlat
sub
jp
ficom
test
mov
aam
sub
stc
ret
jae
std
add
xchg
das
ror
retf
sar
lds
lods
jbe
das
cld
(bad)
test
lods
inc
iret
cmp
or
cld
sub
dec
mov
jmp
cmp
aaa
inc
jae
dec
mov
inc
mov
outs
dec
arpl
mov
sahf
in
in
inc
or
or
pop
dec
fdivr
xchg
arpl
aam
stos
ja
and
dec
or
jp
cmc
dec
repnz
inc
out
outs
push
mov
pushf
mov
pop
adc
cli
scas
mov
dec
pop
adc
enter
or
out
sub
stos
arpl
(bad)
adc
xor
scas
mov
push
sti
push
fs
mov
pop
mov
cdq
movs
cmp
and
cli
push
daa
aad
sbb
or
ficomp
cs
jo
or
inc
scas
retf
jno
cmc
jp
leave
push
aam
mov
jp
xchg
cmp
test
and
iret
adc
rcl
mov
jo
mov
loopne
and
push
mul
das
add
call
hlt
push
xor
xchg
jmp
inc
inc
int3
sbb
mov
sub
pop
stc
adc
mov
adc
or
movs
in
sub
mov
aaa
popf
xchg
and
lds
xor
push
sub
mov
jl
or
int
pop
imul
repz
ret
xchg
jo
scas
cli
sbb
test
into
fisubr
mov
jne
das
ror
outs
imul
(bad)
int
lahf
into
in
loope
int3
jg
pop
mov
and
test
out
in
jnp
outs
inc
inc
xor
xor
xlat
les
push
cmp
push
jg
jno
shr
mov
call
jmp
mov
bound
aaa
mov
fadd
xchg
xchg
sahf
stc
xor
mov
xchg
adc
pop
and
xchg
pop
clc
int
dec
ja
push
nop
jmp
shl
pmullw
mov
outs
jmp
sub
in
lea
das
mov
xchg
pop
xchg
and
mov
mov
(bad)
mov
mov
fsubrp
sti
sub
out
add
mov
and
stos
jle
lahf
jmp
push
xchg
(bad)
test
lds
call
xchg
xchg
lock
leave
nop
call
call
inc
inc
sub
lods
ret
call
popa
mov
je
cld
ins
push
pop
jbe
jge
inc
push
call
aas
test
lods
int3
cmp
call
sar
js
out
mov
fwait
xchg
test
mov
hlt
stos
mov
xchg
sub
test
mov
xor
fwait
jae
cmp
repnz
cli
(bad)
push
cmp
test
icebp
cmp
sub
add
jmp
dec
ror
mov
int3
out
add
mov
mul
pop
arpl
js
xchg
pop
xchg
in
mov
push
mov
mov
stos
in
test
test
push
dec
sub
pusha
outs
in
and
(bad)
je
sbb
dec
cwde
and
cld
xor
cmp
(bad)
outs
call
sub
sbb
mov
dec
enter
sar
addr16
cli
into
test
leave
mov
arpl
leave
and
xor
mov
out
push
xchg
xchg
sub
add
or
push
scas
in
aaa
movs
jb
mov
mov
in
sub
pop
mov
mov
jecxz
xchg
jg
lea
dec
(bad)
pop
hlt
cmp
and
dec
mov
scas
lea
iret
ret
push
fiadd
fldenv
ret
sbb
jle
mov
xchg
inc
pop
addr16
push
sub
popf
pop
fst
pop
jne
cmp
xchg
mov
push
sub
repnz
cmp
lea
pop
imul
pop
mov
push
jmp
scas
jg
and
push
push
inc
and
or
jb
push
cmp
mov
add
mov
mov
(bad)
(bad)
xchg
out
pop
mov
es
(bad)
jmp
movs
das
aad
(bad)
mov
arpl
outs
test
iret
jp
repnz
out
sub
push
jbe
aaa
fidivr
or
(bad)
dec
cmp
ret
sub
pop
imul
icebp
jmp
retf
aas
or
rol
inc
jb
lea
dec
mov
int3
out
add
mov
(bad)
pop
mov
and
xchg
pop
xchg
in
cli
jmp
loope
(bad)
push
shl
test
mov
push
jo
mov
call
mov
bound
js
dec
(bad)
push
popa
dec
(bad)
(bad)
fidivr
pop
xor
js
fild
cli
jmp
xchg
scas
push
xor
mov
pop
dec
and
xor
sahf
(bad)
sub
enter
shl
cmps
and
pusha
cs
sbb
imul
push
nop
rcr
adc
cmp
(bad)
movs
xchg
psubsb
(bad)
int
mov
push
jns
movs
int3
ret
or
js
loop
call
and
pushf
pushfw
fld
fwait
jnp
or
nop
cmp
mov
lods
and
fimul
enter
das
cli
daa
js
aam
imul
(bad)
int
xor
loopne
les
sub
inc
push
jge
ds
lods
cmp
push
daa
cmp
dec
xchg
mov
std
pop
test
cmc
sar
xor
inc
loop
mov
dec
cwde
xchg
(bad)
mov
fld
jp
ja
cmp
push
ret
push
sub
push
jp
popa
mov
repnz
adc
sub
push
aad
in
or
inc
addr16
in
out
adc
mov
bound
outs
mov
mov
push
les
mov
and
or
cli
inc
std
dec
xlat
dec
jg
(bad)
movs
cmc
or
(bad)
ja
and
sbb
push
std
add
and
sub
(bad)
aam
mov
fst
mov
push
xchg
fsubr
clc
inc
or
ficom
sub
nop
cmp
dec
add
lea
int3
dec
retf
add
pop
ror
cmp
push
push
mov
cmp
aaa
xor
(bad)
or
cmp
ds
mov
or
push
rcr
xchg
push
aad
sbb
std
adc
(bad)
out
fsubr
stc
push
jo
bound
aas
mov
jmp
add
loopne
push
push
jmp
ret
pop
mov
mov
aaa
scas
(bad)
daa
jp
nop
jnp
add
cmp
and
jmp
mov
jl
(bad)
xchg
int
(bad)
jne
cmp
loope
(bad)
aas
adc
out
movs
lea
and
fucomip
push
shl
pop
push
or
push
xor
iret
call
pop
cmp
pushf
(bad)
push
ins
add
push
jl
jnp
jns
mov
icebp
test
mov
cmp
movs
sbb
pop
xor
pop
jmp
cmps
fist
rcr
push
add
out
and
add
cmps
jg
mov
dec
push
jne
fisttp
leave
inc
sbb
jl
(bad)
adc
icebp
pushf
into
mov
arpl
inc
fisttp
mov
pop
jns
nop
and
ret
jae
pop
pop
add
push
scas
fdivr
sahf
push
les
je
pop
repz
nop
cmp
xchg
arpl
push
push
or
pushf
int
inc
or
mov
sbb
ins
adc
jp
inc
call
xchg
mov
pop
jl
fidiv
adc
mov
push
xor
out
or
popa
push
ret
sub
lahf
jmp
fdivr
daa
lds
jmp
jnp
push
lods
jp
push
jl
mov
mov
add
push
jb
mov
cmp
enter
jle
stos
pop
push
mov
mov
add
(bad)
test
test
je
push
lea
movs
push
out
imul
pop
pop
inc
lods
aas
sbb
fimul
cmp
ja
pop
push
or
mov
add
push
push
fiadd
daa
ins
in
stos
pop
ins
dec
push
popa
je
sbb
push
xchg
rol
sub
and
fmul
mov
mov
sub
imul
jg
into
push
mov
adc
pop
mov
ins
jle
jb
jecxz
adc
mov
aad
jnp
leave
adc
leave
xchg
pop
daa
cs
or
xchg
mov
cli
cmp
imul
mov
cmc
and
lahf
outs
ds
or
mov
xchg
push
push
fwait
xchg
stc
jb
pop
push
sub
ds
xchg
test
jns
sti
sub
push
frstor
call
pop
lea
lods
cmp
or
jbe
add
loopne
push
lds
repz
pop
lds
mov
or
xchg
and
jns
js
mov
xchg
adc
retf
cmps
bound
jnp
daa
out
iret
cld
test
cmp
sbb
pop
out
out
lods
jecxz
pop
cmp
adc
loopne
inc
dec
aad
mov
or
xor
and
test
ins
es
jecxz
imul
push
jne
mov
xchg
je
in
test
mov
pop
mov
jno
push
mov
mov
cwde
call
dec
sub
and
push
mov
push
jns
push
hlt
cwde
inc
sub
pop
call
sub
(bad)
xor
xchg
out
nop
das
or
icebp
ins
repz
mov
shl
mul
pushf
adc
mov
ror
out
xchg
xorps
jo
movs
call
push
cmp
jl
cwde
pop
cmp
fwait
sbb
popa
inc
stos
in
jg
adc
cmp
cmps
push
clc
fmul
mov
movs
sub
mov
jle
jmp
and
test
out
ret
add
ja
out
pop
outs
sbb
or
rcr
pop
aam
mov
cld
ins
jecxz
and
cmps
jge
in
push
sar
mov
les
int3
cmp
test
mov
movs
repnz
cli
neg
mov
dec
pop
cmc
lods
lods
mov
xchg
sbb
and
aam
lock
add
mov
loopne
cmp
cmps
repz
in
xchg
shl
fiadd
mov
jl
push
push
xor
mov
rcl
div
ror
xchg
and
out
pop
loopne
lock
test
mov
mov
xchg
xlat
xlat
jg
inc
lds
je
and
jae
mov
je
sub
push
repz
mov
push
iret
sub
sub
ret
dec
test
out
dec
mov
int3
mov
fcom
sub
mov
jg
in
sbb
icebp
int3
scas
adc
xchg
sbb
or
add
test
pop
pop
sub
push
pop
and
cld
out
scas
xor
lock
cmp
sub
and
lahf
in
inc
push
call
sub
movs
adc
ja
dec
rol
xor
outs
out
xor
jge
jecxz
inc
bound
pop
ins
scas
mov
aas
push
xor
int3
xchg
outs
xor
pushf
cmp
movs
sub
push
scas
mov
call
out
jmp
xor
mov
mov
sub
dec
add
clc
out
out
or
repz
pushf
xor
arpl
test
mov
xor
aaa
xchg
pop
mov
mov
dec
jmp
shr
js
(bad)
push
idiv
stc
cmps
add
add
inc
push
xchg
in
outs
sub
pop
loop
pop
xchg
stc
ror
dec
stos
(bad)
inc
and
xor
dec
lods
xchg
mov
imul
aas
jl
movs
sub
pushf
aad
mov
arpl
mov
jae
xchg
movs
jge
pushf
lahf
pop
xlat
stc
iret
adc
pop
jl
adc
in
add
mov
jp
pop
pop
jmp
loopne
je
ret
push
sti
and
mov
mov
adc
dec
xor
mov
adc
lea
mov
dec
adc
jmp
and
lods
sahf
call
adc
stos
not
pop
mov
scas
push
sbb
mov
and
jmp
(bad)
sbb
out
sub
aas
mov
dec
mov
mov
enter
jmp
push
movs
shr
or
add
ins
or
mov
or
push
loop
inc
push
sbb
clc
and
cmp
(bad)
in
test
imul
jmp
fist
mov
mov
cwde
push
pop
aam
sbb
and
mov
imul
and
cmp
xchg
sub
(bad)
push
or
and
adc
add
das
fld
jge
push
add
xor
movs
icebp
retf
(bad)
sar
mov
adc
inc
mov
loop
mov
mov
fwait
test
pop
xchg
and
sub
inc
mov
pop
pop
sub
mov
clc
repnz
jecxz
cwde
movs
cmp
mov
bound
ror
pop
hlt
icebp
stos
fmulp
pop
xor
or
inc
stos
inc
cmps
fucomip
retf
cmp
(bad)
sub
xor
stc
sbb
(bad)
push
mov
mov
hlt
int
xchg
push
aaa
push
int3
cmp
pop
popf
es
ss
sbb
fidivr
(bad)
retf
fiadd
add
push
inc
mov
in
(bad)
stc
inc
fbstp
loopne
or
inc
cdq
pop
repz
test
mov
mov
aaa
bts
das
push
int3
sar
clc
retf
loop
les
das
rcr
jb
jl
dec
pop
imul
xor
mov
(bad)
aaa
stc
int
mov
pop
stc
sub
sbb
mov
dec
loope
jp
mov
je
in
jmp
xchg
pop
scas
mov
and
pop
cdq
cmps
xor
and
xchg
repz
test
bound
mov
inc
cmc
inc
outs
out
loope
cmp
mov
(bad)
psrad
pop
inc
jmp
in
or
(bad)
mov
sbb
bound
push
push
ds
inc
jecxz
pop
push
cmps
push
xor
xchg
sub
xlat
rcl
jo
lods
es
jo
xchg
sbb
rcr
pop
cmp
fstp
data16
test
cmps
inc
sbb
idiv
repnz
mov
hlt
lock
cld
cmc
sub
xor
std
scas
jae
xchg
ficom
pop
sub
outs
out
dec
jnp
stos
iret
xor
mov
out
stos
jmp
cmps
sbb
xor
js
pop
les
jb
nop
push
cmp
sub
and
cmps
ds
mov
pop
aaa
aas
and
jne
xchg
sub
add
out
or
popa
dec
(bad)
xchg
imul
enter
mov
loope
in
jno
sti
lds
daa
mov
stos
stc
movs
imul
scas
das
mov
push
ret
jecxz
outs
js
ins
lock
(bad)
inc
in
adc
sub
push
jns
sahf
push
pushf
fdivr
frstor
or
xor
add
iret
int
mov
mov
xchg
and
or
push
and
retf
popf
pop
xchg
and
xor
push
(bad)
ins
mov
movs
ins
sahf
ss
pop
sbb
push
xchg
mov
inc
fisub
iret
dec
out
rcr
xor
fild
hlt
pop
push
sub
out
jmp
scas
jno
sbb
inc
push
addr16
mov
lods
and
dec
mov
adc
es
sbb
int3
sbb
sub
dec
cmp
mov
xor
shr
adc
das
iret
xor
fdivr
mov
xor
cs
jns
ins
and
sub
add
fisubr
jo
hlt
inc
test
xor
xor
mov
or
inc
mov
call
cmp
aam
jecxz
ss
push
pop
into
lea
es
hlt
push
call
xor
cmp
or
pop
lahf
movs
mov
lock
outs
ja
(bad)
mov
not
es
push
out
inc
leave
cli
xchg
and
lahf
retf
je
iret
xchg
in
adc
jp
lds
lock
dec
ror
popa
shl
sti
xor
test
cmp
cmp
xor
inc
mov
inc
rcl
popf
mov
dec
aas
cmp
jle
xor
cmps
jge
mov
stos
cld
daa
add
(bad)
adc
pop
and
xor
mov
cmp
dec
cmp
pop
xor
cmp
fidivr
xchg
mov
mov
mov
(bad)
stos
and
(bad)
scas
jae
daa
add
mov
das
test
push
add
dec
call
xchg
mov
cdq
(bad)
mov
sbb
stos
js
aam
adc
loopne
test
xor
push
sar
dec
add
imul
pop
and
lds
mov
adc
add
inc
xor
jnp
and
popa
pushf
cmp
mov
xlat
push
je
rcr
mov
cmp
nop
mov
nop
cld
cmps
add
jae
popa
push
xchg
(bad)
repnz
repz
test
push
test
sbb
xlat
xchg
pop
mov
add
ja
add
add
movs
xchg
js
fistp
popa
clc
loop
popa
imul
and
add
(bad)
popf
mov
mov
(bad)
and
pop
inc
enter
imul
jmp
sub
jno
shl
call
enter
xchg
mov
ret
cmps
jmp
xor
push
cmps
adc
cmps
dec
mov
jb
es
ret
aas
mov
shl
or
push
push
jge
xor
xchg
or
out
jle
loop
movs
sbb
cmp
movs
and
inc
xchg
push
sub
cmp
test
sub
int3
dec
jae
jno
dec
adc
clc
out
sbb
sbb
rcl
xor
loope
leave
das
mov
jns
imul
out
call
pop
cdq
and
in
ror
sbb
push
inc
fwait
xor
sbb
or
sub
in
fs
inc
xlat
jo
repnz
jle
inc
or
(bad)
shr
and
iret
jns
pop
repnz
stos
repnz
pop
mov
std
push
fwait
sbb
ins
std
sub
fistp
xchg
mov
pop
jecxz
cmp
aad
or
in
jmp
adc
int3
mov
cmc
push
cdq
bound
xchg
call
push
or
dec
out
shl
call
xor
out
rol
lahf
addr16
mov
fs
movs
push
fist
adc
xchg
jmp
bound
mov
mov
shl
aas
jge
scas
pop
and
xchg
cmp
dec
sbb
mov
stc
imul
jge
or
mov
and
mov
div
inc
dec
outs
lds
add
cmp
fwait
mov
mov
dec
rcr
inc
mov
loope
sub
pusha
inc
imul
dec
xor
push
ins
in
jmp
dec
cmp
adc
mov
mov
out
pop
add
ss
xchg
xchg
pop
sbb
inc
ds
pop
mov
xchg
push
cdq
in
xor
aam
fst
cdq
cwde
sbb
lea
pop
xor
xor
and
pop
cmps
jge
mov
mov
pop
lea
iret
fdivr
stos
popa
sbb
dec
icebp
xchg
fistp
outs
add
in
adc
sbb
jb
cmps
sub
mov
xchg
test
jle
jle
into
repnz
push
add
shl
arpl
jg
adc
out
and
out
or
outs
push
pusha
repz
sar
int
imul
inc
lea
mov
inc
jo
mov
je
lock
or
loope
out
pushf
inc
mov
xchg
mov
data16
shl
daa
inc
dec
pop
mov
shl
mov
pop
(bad)
jb
adc
in
mov
stos
js
es
mov
leave
push
and
cmp
sub
cli
cmp
mov
repnz
adc
xchg
and
inc
fadd
pop
outs
inc
out
sub
cmp
add
pop
cli
xchg
shr
xor
scas
cmps
loope
mov
add
add
add
cmps
adc
not
mov
outs
ret
jne
add
fcmove
sub
adc
adc
and
dec
push
cld
cld
loop
outs
arpl
and
cli
adc
fwait
fwait
push
push
aad
dec
pusha
or
xor
or
sub
ds
dec
fwait
stos
xchg
mov
imul
jmp
(bad)
psrlq
pop
sar
jbe
or
sahf
push
icebp
mov
sbb
fisttp
in
jbe
cmp
cmp
pop
je
xchg
and
int
lahf
mov
xchg
pop
sbb
add
mov
in
jns
ss
aas
sahf
ret
outs
cs
ins
pop
fnstenv
aad
push
mov
scas
pop
adc
xchg
stos
pop
out
js
out
jb
cs
test
ja
jle
stos
inc
in
push
push
and
dec
cmp
cli
aam
xlat
lods
or
daa
cmp
ds
sub
jnp
fs
dec
mov
aas
inc
xchg
mov
cvtpi2ps
inc
test
into
push
enter
jl
(bad)
stos
or
(bad)
loopne
cmp
sbb
dec
jge
pop
sub
call
(bad)
jnp
inc
sub
into
xor
daa
retf
or
enter
pop
xchg
es
cmp
push
cmp
pop
mov
call
mov
out
sbb
pop
neg
shl
jmp
add
popf
mov
leave
iret
xchg
retf
inc
div
fwait
shr
dec
jecxz
jle
xchg
daa
pop
rcr
adc
sar
shl
aas
sbb
and
dec
ja
mov
iret
jnp
add
sbb
es
sbb
lods
or
int
out
mov
out
fiadd
out
and
or
icebp
pusha
dec
cwde
jnp
cmc
call
in
pop
push
push
sub
mov
cdq
sbb
xor
(bad)
call
xor
xchg
cmps
dec
shl
jg
stos
jle
xchg
call
adc
fsubr
xor
adc
jp
leave
fdivr
fwait
add
cmps
nop
sbb
jmp
fs
mov
adc
lods
mov
pop
push
inc
test
sub
scas
test
(bad)
in
adc
sub
test
in
stc
cmp
rcr
pop
dec
jmp
in
cmps
arpl
and
ret
mov
sbb
or
mov
mov
mov
xchg
and
push
mov
mov
lods
fild
inc
(bad)
push
adc
push
es
fisubr
aad
mov
xor
dec
je
dec
pop
or
in
out
and
fcom
pushf
shl
xor
fistp
ror
mov
cmps
cmps
out
mov
adc
mov
enter
lahf
js
popa
rol
shl
inc
mov
int
jmp
or
push
adc
shl
add
inc
rcr
mov
dec
test
sbb
mov
(bad)
jle
daa
cmp
xlat
shl
(bad)
xor
cwde
cmps
scas
gs
push
aas
pop
loop
shl
xchg
mov
push
jmp
retf
inc
add
add
retf
mov
cs
push
ds
xchg
out
imul
jge
or
cmp
push
jl
popf
jmp
inc
sub
add
lods
xlat
mov
adc
push
in
enterw
pop
fdivr
sub
mov
add
ret
outs
xor
and
ss
out
bnd
adc
inc
mov
imul
push
ror
or
or
jae
pop
outs
xchg
push
cmp
call
pop
sahf
pop
sbb
(bad)
push
out
mov
inc
jno
or
add
or
aam
inc
ret
sbb
mov
inc
push
pop
aad
aam
cmpps
cmp
fmul
inc
jge
adc
bound
and
ror
fisubr
sbb
retf
mov
add
and
in
jg
and
test
inc
sbb
mov
xlat
jmp
in
xchg
sti
or
or
test
stos
xchg
aam
xor
std
test
scas
mov
adc
jno
cmc
push
jbe
mov
or
cmp
out
sbb
jle
xor
xchg
push
sub
push
cmps
sbb
mov
push
jmp
test
mov
sub
xor
in
mov
dec
pop
sub
outs
lods
jl
and
inc
pop
jmp
push
test
sti
enter
xor
push
test
jno
outs
outs
mov
mov
dec
enter
sub
test
or
int
sub
les
mov
xchg
mov
arpl
ins
add
xchg
test
pop
jecxz
mov
daa
ret
add
test
out
in
jno
add
push
mov
pop
adc
pop
jle
xor
inc
mov
div
sbb
xor
pop
lock
in
inc
dec
pop
ficomp
les
in
push
mov
clc
imul
ja
and
in
push
push
sbb
loopne
shr
fdiv
sbb
cmps
clc
ror
out
cmp
test
mov
fcmovnu
leave
movs
pop
pop
and
or
push
or
popa
mov
xor
or
dec
aas
scas
icebp
in
inc
push
push
or
mov
mov
push
adc
(bad)
sub
xor
imul
xor
nop
cmp
retf
mov
mov
mov
enter
int3
mov
call
push
mov
jae
mov
and
cmp
aaa
lods
pusha
push
cmp
xor
jo
nop
mov
retf
out
mov
out
or
pop
dec
jle
adc
mov
cmp
call
jl
ret
ins
push
sub
push
push
retf
retf
sbb
clc
adc
jmp
and
scas
pop
data16
bound
stos
inc
nop
xor
cmp
xor
dec
test
push
adc
inc
add
stos
mov
xchg
inc
ret
sbb
fnstcw
jbe
hlt
adc
cdq
cmp
or
pusha
(bad)
aam
je
aaa
dec
or
inc
ficom
or
ror
push
imul
je
repz
pop
push
lahf
push
adc
sub
(bad)
scas
push
test
pushf
scas
mov
stos
lock
pop
dec
ja
mov
mov
inc
test
sub
xor
das
push
std
xor
pop
add
inc
dec
sahf
jg
lea
mov
and
or
lea
mov
fbld
nop
std
sahf
xchg
jae
dec
stos
sbb
and
into
jl
jmp
and
js
dec
or
sbb
fidiv
imul
inc
outs
xchg
inc
xchg
ds
mov
and
out
sahf
mov
mov
mov
jbe
test
ins
iret
cmp
pop
mov
mov
jg
es
aaa
lea
add
in
mov
cmp
icebp
mov
add
pushf
into
jns
xchg
add
cli
mov
sbb
imul
sub
push
movs
or
das
cmp
mov
sub
push
adc
outs
mov
mov
ret
sub
and
and
mov
jne
fst
ins
sbb
mov
sbb
xor
mov
ja
sahf
mov
jmp
(bad)
rol
es
loopne
push
push
xchg
ja
test
daa
sub
jb
inc
dec
or
adc
jno
stos
jecxz
hlt
cmp
ret
xchg
adc
call
call
daa
sti
mov
repnz
cs
push
jmp
push
push
lock
mov
popf
mov
adc
icebp
mov
jne
sbb
fstp
into
jmp
loopne
and
mov
out
out
fild
call
dec
or
adc
sbb
mov
loopne
inc
es
mov
(bad)
push
adc
idiv
jl
add
stc
adc
dec
jl
mov
sub
xor
outs
shl
mov
pop
inc
fistp
and
fistp
xchg
xchg
cmc
sbb
imul
mov
cs
test
cs
and
xchg
ficom
js
sub
jp
jp
enter
out
xchg
fwait
add
popf
pop
jno
jns
adc
test
dec
pop
inc
scas
call
jg
adc
fidiv
xchg
or
(bad)
push
jns
loop
rol
jp
(bad)
push
add
cwde
sub
dec
xchg
(bad)
imul
cwde
pop
sbb
repz
push
push
(bad)
add
js
inc
mov
sbb
adc
cld
push
mov
jnp
call
lods
daa
lea
jp
mov
push
lea
fdiv
cmp
iret
aad
shl
and
sahf
bound
push
inc
sub
ins
jp
cmps
fs
adc
mov
xchg
add
mov
adc
xchg
xchg
pop
mov
gs
cmps
lods
out
mov
out
pop
inc
mov
out
loopne
add
inc
xbegin
aas
mov
push
sub
xor
pop
ins
int3
movs
cmc
test
xor
jge
xlat
adc
pop
pop
push
repz
ss
mov
jl
das
mov
stc
jmp
or
fcmovnbe
pop
mov
fwait
push
ins
sub
add
xor
xlat
ud1
fs
mov
dec
fimul
mov
inc
scas
cmp
pop
sub
loope
pop
je
fwait
ins
rcr
aam
icebp
fadd
or
pop
and
or
and
dec
movs
fs
jle
jle
sahf
add
scas
lods
push
xor
fadd
xor
rcr
fwait
(bad)
cmc
sbb
mov
repz
sub
pop
je
xor
push
mov
imul
cdq
xchg
jge
inc
adc
fistp
pop
and
and
push
and
ret
bound
sub
xchg
mov
loope
mov
rol
jmp
pop
popf
dec
jno
adc
xor
adc
sahf
in
shl
out
push
loopne
adc
dec
jo
(bad)
cmp
aaa
dec
jmp
scas
mov
push
and
lods
or
les
and
mov
jecxz
imul
push
and
mov
sar
into
mov
sahf
retf
push
mov
(bad)
ds
retf
stos
loop
fidiv
int3
in
cmp
xor
sar
and
inc
jle
(bad)
out
inc
lods
movs
pop
adc
cdq
pop
cmps
jns
das
in
loopne
mov
retf
pop
test
dec
out
mov
push
push
sbb
push
loopne
pop
mov
mov
xchg
fidiv
mov
mov
push
xchg
(bad)
push
repz
enter
daa
aaa
sbb
sbb
xor
cwde
inc
shr
or
icebp
sbb
mov
js
mov
sbb
jnp
icebp
pop
xor
repnz
inc
iret
test
pop
iret
lods
pushf
cli
mov
into
pop
repz
mov
mov
or
cmp
ins
mov
mov
push
(bad)
xor
ins
scas
and
xchg
cmp
sub
mov
jecxz
push
int3
inc
adc
push
fcomp
out
cld
in
xor
mov
inc
cmp
es
pushf
(bad)
cmc
push
iret
adc
shl
test
push
fild
inc
dec
cmps
xchg
icebp
scas
imul
push
sbb
aad
jae
and
mov
pop
or
mov
in
mov
into
pop
mov
je
outs
in
push
lods
cwde
cmps
in
mov
adc
and
mov
mov
cmps
std
xchg
ins
addr16
(bad)
adc
jmp
xor
mov
cmp
mov
gs
add
mov
or
outs
dec
sbb
dec
and
aam
add
push
sbb
int
(bad)
test
mov
lea
or
in
jmp
fstp
mov
std
cmp
rol
stc
repnz
mov
stos
fwait
sbb
jge
sub
sbb
(bad)
jbe
ret
dec
pop
enter
loop
or
inc
jl
clc
shl
dec
lods
(bad)
push
test
in
ds
test
test
cmp
test
repz
into
sbb
xchg
(bad)
fisttp
sbb
rcl
imul
dec
in
retf
add
pop
inc
mov
and
aad
rcr
cmp
lods
div
jg
ror
push
xor
or
sbb
sbb
and
stos
push
imul
scas
mov
xchg
dec
pop
loope
out
xchg
sar
pop
jecxz
xor
mov
enter
outs
jne
or
inc
adc
loopne
xchg
outs
int3
mov
into
nop
test
inc
pop
inc
retf
bndstx
popa
(bad)
pop
xor
jb
adc
lock
test
je
iret
fnstcw
or
fsubr
ret
fstp
push
sub
imul
mov
(bad)
gs
pop
push
push
leave
jmp
adc
shl
daa
pop
push
aaa
inc
and
xor
les
add
pop
popf
xor
es
dec
arpl
rol
iret
inc
jmp
hlt
movs
or
cdq
mov
sbb
lods
popf
xchg
xlat
xchg
not
(bad)
ret
nop
test
mov
cmp
xor
dec
mov
cmp
mov
pop
jnp
or
cmp
inc
cmc
cmp
and
inc
sbb
mov
pop
fimul
mov
aas
outs
rcr
mov
push
mov
mov
adc
std
mov
jp
jmp
mov
ja
push
lock
nop
mov
repnz
loope
jle
retf
sbb
xor
mov
pushf
xor
push
xchg
movs
inc
rol
jg
and
dec
mov
es
or
inc
sti
sub
and
shl
xchg
aaa
cmp
loopne
push
outs
leave
iretw
ret
xlat
imul
movs
cld
movs
ret
sub
mov
or
mov
cli
adc
inc
xchg
aaa
mov
jecxz
inc
pop
sar
sub
movs
mov
mov
loopne
outs
neg
sbb
jle
pop
out
jo
ss
mov
or
mov
add
cli
xchg
xor
cmc
shr
imul
mov
pop
imul
inc
sbb
mov
add
jbe
test
repz
sub
adc
sbb
sqrtps
sub
cmp
imul
mov
(bad)
cmp
push
xchg
cwde
sub
test
leave
inc
lea
or
or
sub
jl
mov
mov
fwait
lods
mov
xchg
loopne
pop
jb
and
xor
daa
add
add
mov
sbb
fyl2xp1
enter
and
or
or
pop
sti
cwde
stc
push
cwde
ins
leave
call
(bad)
jmp
jo
inc
int3
xor
data16
mov
or
add
dec
rcr
xor
push
je
sub
rcl
cmp
or
fisub
jmp
cmc
stos
fild
fwait
mov
pop
shr
leave
movs
mov
xor
repnz
loop
test
mov
enter
in
les
dec
dec
cs
or
mov
pop
push
jl
aad
pop
adc
push
jbe
cmp
jmp
dec
add
push
adc
sbb
ins
xchg
in
jmp
and
fmul
les
icebp
pop
pop
cmp
mov
jnp
into
icebp
xchg
fsub
popf
or
aas
jge
jb
loope
dec
fwait
push
mov
add
stos
fdivr
pop
push
jmp
sbb
mov
mov
call
add
or
neg
in
pop
mov
add
in
pop
cmp
icebp
add
or
add
das
adc
adc
add
pop
mov
push
push
daa
mov
xor
repnz
pop
adc
cmp
pop
inc
pop
inc
ret
sti
into
sahf
and
test
rcr
cld
dec
mov
fsub
push
popa
mov
inc
dec
int3
sar
mov
mov
xor
(bad)
pop
lock
mov
or
xor
adc
lods
pop
pushf
xchg
adc
lods
inc
jno
add
loop
inc
xlat
test
mov
dec
es
sbb
mov
sbb
pop
test
pushf
jmp
add
sbb
sub
out
in
mov
add
cmps
movs
push
adc
cmp
mov
push
sbb
(bad)
dec
das
in
add
jge
or
push
ins
push
arpl
jecxz
lods
aaa
mov
in
pusha
movs
xchg
test
and
mov
xlat
cdq
add
(bad)
shl
mov
and
hlt
retf
add
sbb
sub
pushf
fdiv
ret
mov
adc
adc
inc
addr16
mov
das
xchg
fld
test
push
enter
cwde
inc
arpl
sub
shl
cld
cmp
out
lahf
add
mov
pushf
lods
adc
sbb
jo
push
xor
push
pop
jmp
mov
je
lds
jo
(bad)
mov
xor
nop
icebp
rcr
adc
xchg
(bad)
frstor
pop
jno
aad
add
retf
jmp
ss
cmp
cmp
cld
push
aam
jge
rol
dec
aam
push
xchg
aas
inc
inc
push
imul
jle
or
jg
jge
fidiv
retf
or
arpl
xchg
sub
addr16
fcomp
adc
jl
adc
sar
mul
jnp
mov
cdq
in
dec
xchg
shl
int3
jmp
dec
fsubp
js
dec
lods
pop
sbb
xor
adc
mov
cwde
stc
fistp
movs
adc
mov
push
lods
xor
mov
mov
or
ins
je
xchg
inc
jl
imul
shl
adc
ds
mov
(bad)
nop
(bad)
or
mov
fmul
js
xchg
das
imul
and
pop
sub
stos
std
(bad)
movs
cmp
sbb
xchg
ja
repz
call
dec
retf
sub
adc
mov
test
sbb
mov
les
sub
fst
xchg
mov
mov
mov
push
inc
sbb
sbb
pop
sti
es
add
xchg
jp
cmp
lods
mov
aam
enter
out
mov
jecxz
sbb
push
retf
mov
sti
sub
ret
outs
shr
(bad)
and
test
mov
enter
sub
pop
dec
dec
and
iret
out
pop
repz
jno
push
movs
inc
aaa
push
jmp
adc
add
xor
aas
sub
out
lods
jp
push
mov
std
(bad)
ss
mov
mov
test
pop
jns
cmc
(bad)
ins
enter
call
retf
pusha
lds
sbb
mov
outs
cmp
cdq
test
in
mov
push
popf
sub
(bad)
sahf
rol
hlt
add
in
ret
(bad)
jb
aam
dec
pop
retf
fist
xchg
add
cld
dec
pop
adc
lea
add
sub
out
scas
cmp
adc
test
loope
mov
pop
mov
sub
pop
fucomp
xor
add
mov
into
xor
mov
fimul
mov
ds
push
stos
fist
pushf
mov
mov
cwde
inc
mov
pop
dec
outs
cmps
js
push
pop
mov
xor
in
and
pop
and
ins
add
cmc
lods
es
lock
push
lods
pop
jp
je
data16
sub
retf
jae
mov
bound
or
into
push
aam
push
jb
int
or
je
mov
add
jo
cwde
(bad)
jmp
cmp
aaa
inc
jl
xchg
xchg
mov
test
cmp
cmp
or
(bad)
pop
(bad)
(bad)
gs
dec
adc
mov
jbe
or
xchg
das
xchg
sti
movs
fisub
jmp
lods
es
dec
sahf
call
mov
mov
mov
ja
adc
fwait
push
sbb
cmp
xchg
cld
or
pop
popf
xchg
dec
add
imul
push
mul
test
cdq
sub
test
sub
arpl
and
cli
dec
dec
mov
stos
xor
xchg
jbe
dec
pop
int
pop
cmp
dec
ja
push
xor
clc
pop
adc
imul
cld
std
and
popf
into
jmp
repz
mov
inc
cmp
popf
rcl
js
mov
shl
jg
pop
jns
sbb
jle
add
mov
mov
sbb
(bad)
loop
mov
sub
dec
jne
imul
and
mov
sub
jge
scas
inc
mov
out
mov
pusha
push
lods
xchg
(bad)
out
mov
and
arpl
cld
out
nop
xchg
shl
dec
call
inc
sub
clc
scas
ror
xchg
dec
call
cmp
cmc
xchg
jnp
out
ins
in
xchg
(bad)
stc
aam
int
sub
ss
sub
arpl
cmp
ret
push
xchg
rol
xchg
rol
hlt
test
popa
push
xor
out
outs
int
loop
repnz
jge
and
test
sbb
jne
pusha
lea
rol
jno
in
loope
pop
fcom
mov
pop
in
and
and
push
loop
or
xor
inc
sub
inc
lock
ins
repz
(bad)
xchg
jge
loope
dec
retf
sub
sub
shr
add
dec
and
loop
nop
std
jb
sar
retf
sbb
sub
call
repnz
out
and
sahf
fst
int3
dec
ds
pop
dec
adc
jmp
repz
xchg
mov
push
rol
dec
add
pop
shl
jge
inc
cmp
sub
sahf
and
movs
outs
xor
mov
pop
dec
cmp
add
out
adc
scas
outs
mov
lods
pop
(bad)
sbb
aaa
add
jo
lahf
ficom
ror
adc
mov
add
daa
ret
mov
outs
stos
jmp
sbb
cwde
ss
fdiv
stc
es
adc
int3
mov
jmp
cld
pop
mov
pop
popa
dec
dec
addr16
jecxz
call
arpl
das
or
mov
fsub
mov
xchg
out
cmp
daa
pop
test
and
int
data16
add
sbb
outs
and
es
and
fiadd
pop
mov
mov
dec
(bad)
mov
hlt
je
cmp
(bad)
nop
ror
fidiv
sub
test
data16
cdq
out
xlat
fsub
out
mov
pop
cld
xchg
mov
nop
ins
inc
aam
push
aaa
cmp
out
retf
adc
or
test
test
mov
inc
mov
xor
adc
sub
mov
xchg
sbb
pop
mov
jno
or
cmp
mov
dec
fnstcw
ret
in
es
mov
mov
ror
repnz
shl
rol
in
xchg
mov
icebp
ins
inc
pop
in
nop
ins
aas
pushf
out
xor
adc
das
adc
mov
inc
xchg
daa
dec
cld
or
xchg
sub
and
mov
xchg
retf
mov
jecxz
in
inc
pop
inc
inc
aam
mov
shr
(bad)
stc
popa
ds
out
test
lods
mov
adc
imul
(bad)
cmps
xlat
pmulhuw
ret
test
not
mov
xchg
xchg
dec
xchg
cmc
jl
leave
or
pop
cmp
jae
adc
in
std
sub
retf
mov
push
lods
pop
lea
sub
hlt
xor
pop
js
movs
pop
loop
inc
cmovge
or
out
xlat
mov
cmps
dec
out
fwait
(bad)
aam
mov
cmp
in
xchg
aam
fwait
ins
(bad)
dec
inc
mov
xchg
mov
daa
adc
ror
add
sub
pop
enter
adc
add
fidivr
popf
adc
jmp
movs
scas
or
adc
repnz
into
mov
into
arpl
lock
fnsave
xor
sti
mov
cmc
fimul
dec
mov
adc
movs
add
pop
mov
dec
cmp
sub
mov
popf
mov
cmpxchg
add
xchg
aaa
dec
je
dec
scas
cmp
xchg
mov
test
mov
test
sbb
in
(bad)
clc
push
sbb
ja
and
in
pop
pop
add
in
dec
pop
mov
cld
ror
fistp
adc
fist
fldenv
aaa
pop
mov
daa
rcl
and
pop
mov
pop
movs
mov
call
outs
jl
loop
mov
add
pop
mov
enter
mov
jecxz
sahf
inc
lds
xchg
dec
dec
push
jle
mov
mov
lock
das
arpl
jae
jl
aad
div
out
shl
loope
cli
jle
cmps
out
loop
jb
sub
test
ds
xchg
sbb
test
pop
pop
lods
out
fld
neg
mov
dec
mov
inc
dec
je
aad
xlat
mov
or
dec
pushf
fcom
mov
popa
ficomp
sar
jno
push
in
shl
fsub
into
out
loopne
outs
bound
adc
jno
std
cld
xchg
xchg
and
jp
stos
adc
repz
push
inc
or
push
cmp
retf
(bad)
nop
ss
xchg
or
movs
sub
sbb
aas
dec
push
rcl
sbb
lods
dec
es
cmp
fwait
mov
je
push
push
xchg
cmps
loop
jne
out
movs
mov
iret
pop
inc
mov
and
lds
sbb
cmp
call
fwait
xchg
or
adc
hlt
mov
ret
dec
fistp
fcomp
jae
sub
int
pushf
sti
stos
jl
pusha
push
test
pop
sub
jb
jecxz
xchg
inc
popf
mov
and
add
in
push
hlt
je
jmp
fwait
or
(bad)
mov
inc
pushf
and
jns
int
es
inc
cwde
ret
jmp
ds
pop
mov
xchg
sub
adc
in
ins
(bad)
call
in
cmp
push
hlt
mov
push
dec
cmc
sbb
int
rcr
pop
jae
xlat
push
cmp
shl
in
sub
adc
push
js
dec
stos
ror
jmp
pop
xchg
pop
and
sub
mov
aam
repz
cmp
ret
cs
fnstcw
repnz
fimul
and
retf
sbb
cmp
push
push
or
outs
pop
aam
into
lds
mov
cwde
mov
adc
cmc
jbe
mov
xchg
adc
mov
cmp
push
lods
jb
inc
pop
test
dec
inc
fistp
xchg
clc
mov
retf
adc
(bad)
aam
lds
icebp
popa
cmp
cmp
loop
jg
ja
dec
and
sbb
or
call
bound
mov
pcmpgtw
pop
outs
jns
call
pop
mov
inc
xor
cmps
mov
cld
dec
add
and
add
sbb
jb
push
inc
fimul
gs
jmp
leave
inc
movs
pop
sub
pop
scas
clc
ins
test
jae
add
arpl
ds
leave
out
btc
pop
int3
push
ret
cmc
add
in
mov
dec
fcmovb
nop
jmp
xchg
in
inc
xchg
call
mov
mov
ficom
loop
xor
inc
push
repz
xor
dec
cmp
sbb
cmp
push
jmp
movs
mov
out
or
xor
ror
sahf
mov
push
pop
xchg
xchg
sbb
mov
pop
fsincos
adc
imul
into
jae
inc
sub
jge
dec
daa
sub
add
fs
dec
nop
mov
aad
iret
adc
inc
sub
iret
stos
mov
pop
ror
ret
mov
jmp
loopne
in
popa
xchg
sub
push
jae
pop
adc
or
sbb
and
pop
push
dec
(bad)
sub
inc
push
shr
call
add
add
jmp
inc
xchg
push
adc
rcr
sbb
push
mov
daa
sub
je
imul
dec
sbb
test
ret
loope
icebp
pop
sahf
push
pop
retf
adc
or
fisubr
sti
mov
jle
mov
aaa
jp
xor
inc
push
test
daa
lock
mov
out
inc
push
jl
ja
stos
pusha
inc
(bad)
sbb
pushf
jmp
outs
inc
inc
dec
into
cmps
inc
sub
cmp
sti
adc
add
dec
jne
xor
pushf
aad
and
inc
push
inc
xchg
jmp
inc
xchg
inc
loopne
sub
int3
dec
lds
js
sub
add
sub
inc
ins
jecxz
push
loope
push
in
iret
add
retf
mov
push
sti
addr16
(bad)
xor
mov
outs
push
and
and
jo
xor
test
dec
rcr
xchg
or
ja
mov
daa
jb
sbb
daa
mov
pop
(bad)
out
adc
int
mov
push
imul
out
mov
dec
and
int
ja
ds
sahf
push
mov
push
lods
sub
sub
bound
popa
adc
pop
call
data16
out
test
mov
inc
mov
addr16
pop
shr
mov
sub
sar
jns
fs
sbb
pop
cmps
adc
cld
(bad)
inc
pushf
xlat
fcmovne
push
xlat
xchg
sti
push
cs
ror
cmc
pop
icebp
(bad)
mov
adc
inc
mov
or
push
mov
rcl
cld
in
rcl
ins
add
mov
call
in
arpl
outs
fwait
jns
push
adc
test
jge
aad
nop
adc
jecxz
sub
or
add
pop
jmp
xchg
inc
adc
dec
pusha
dec
fs
add
xor
dec
vpunpckhqdq
cs
cmp
xchg
mov
scas
push
adc
iret
xor
inc
pop
clc
mov
fwait
mov
dec
sbb
enter
inc
fs
popf
mov
jg
mov
sub
sub
out
ret
mov
mov
clc
movs
(bad)
sub
shl
(bad)
sbb
movs
nop
aas
sub
outs
adc
hlt
inc
adc
mov
aad
stos
sbb
aas
not
mov
push
inc
jne
and
fwait
add
mov
mov
xchg
jne
adc
xor
not
ins
cmp
imul
lock
push
in
and
mov
or
ins
pop
call
jl
xchg
gs
adc
and
pop
and
fiadd
ja
out
ins
stos
pop
je
sbb
mov
pushf
jnp
or
mov
mov
push
fisttp
push
jmp
gs
div
es
inc
loop
dec
push
mul
mov
int3
bound
cmp
sbb
adc
push
dec
mov
sbb
dec
mov
mov
stos
cs
mov
sti
test
ror
cdq
jb
in
mov
addr16
pop
or
sbb
cmp
iret
cwde
mov
sahf
je
xchg
inc
or
push
in
push
stc
icebp
inc
and
mov
ror
mov
lock
and
int
call
sub
mov
popf
push
lahf
xlat
fstp
nop
fwait
jno
sahf
and
xlat
mov
stos
mov
pusha
pushf
je
dec
shl
movs
jns
or
adc
sub
mov
push
adc
dec
inc
mov
adc
clc
or
je
repz
pop
and
jae
add
jns
add
fsub
push
ins
movs
(bad)
loopne
mov
mov
popf
sbb
pop
ret
test
loop
push
test
repnz
dec
xchg
fs
rol
mov
sti
inc
loope
pop
adc
mov
(bad)
ins
cmp
aaa
mov
xor
in
cmps
movs
retf
test
out
ins
bound
call
imul
or
not
call
jns
adc
jp
(bad)
cmp
ins
push
cli
out
inc
call
pop
mov
aas
in
movs
popa
dec
dec
mov
imul
mov
xchg
mov
test
and
sbb
add
xchg
movs
inc
loop
iret
mov
div
adc
lds
mov
dec
mov
mov
mov
adc
and
pop
repnz
cmc
ja
adc
cmp
imul
jmp
push
mov
icebp
sub
stc
arpl
ins
mov
pusha
in
adc
into
add
in
sar
sub
cmps
jbe
push
xchg
out
scas
imul
jb
lock
inc
outs
and
sbb
fucomp
dec
xchg
std
or
adc
mov
xor
jle
fnstenv
lea
mov
in
scas
arpl
inc
xor
and
mov
mov
adc
jb
mov
leave
loope
mov
xor
mov
jb
fild
aaa
ffreep
mov
fcmovb
mov
ja
in
and
mov
dec
imul
jb
sti
or
push
push
(bad)
dec
sbb
mov
imul
jmp
mov
test
sub
test
(bad)
std
pusha
in
shl
aaa
in
mov
push
add
(bad)
fisttp
push
or
enter
cli
dec
sbb
les
xor
mov
and
rcr
stos
popf
cmp
mov
(bad)
mov
and
dec
mov
push
es
cmp
or
mov
xchg
jecxz
pop
cmp
mov
jns
ss
mov
aas
pusha
or
add
push
or
inc
outs
adc
aad
dec
lea
sub
cmp
mov
fwait
lods
mov
fwait
inc
lea
sub
push
cmc
dec
inc
jp
in
shr
lods
push
jp
stc
sub
clc
jnp
sub
outs
add
lea
ja
jecxz
or
into
aaa
int
jge
sbb
fld
scas
ret
std
pop
ss
cmp
cmps
lea
adc
inc
(bad)
lods
or
dec
fisub
jne
inc
and
mov
sub
(bad)
xlat
xor
aas
push
xchg
cld
(bad)
cli
pusha
jnp
mov
mov
push
stc
mov
xor
inc
xchg
xchg
iret
dec
arpl
(bad)
jl
xchg
dec
fstp
stos
popa
sbb
les
stos
hlt
into
fisttp
pop
jecxz
outs
mov
xlat
push
mov
fistp
cmp
jl
ret
jb
fsubr
sub
cld
mov
xor
lods
push
imul
aam
mov
jb
mov
dec
mov
shl
int
scas
call
add
xor
ret
repz
enter
xchg
or
cwde
(bad)
inc
xor
mov
cld
stos
ret
les
mov
sahf
pop
xor
add
push
dec
lods
sbb
xchg
xchg
pmuludq
jmp
loop
sub
mov
ss
push
sbb
dec
(bad)
outs
cwde
dec
cvtdq2ps
dec
or
stos
cmps
dec
(bad)
rcl
scas
out
mov
mov
pop
(bad)
mov
sub
mov
inc
inc
test
ret
loop
pushf
rol
cmps
das
repnz
cmp
rol
sbb
mov
(bad)
in
sar
inc
push
adc
or
ss
imul
inc
pop
add
or
shl
pushf
jl
in
cdq
movs
inc
test
arpl
stos
sub
test
call
xlat
sahf
xor
xor
add
mov
stos
es
jmp
mov
inc
push
lea
cmp
dec
inc
push
dec
aad
shl
rcl
inc
das
mov
(bad)
dec
cmps
loop
cmps
aaa
mov
jmp
leave
aaa
imul
sbb
inc
out
fnstcw
jge
lock
int
clc
shr
movs
xlat
or
sti
and
sub
iret
or
push
sub
gs
imul
xchg
xor
popa
stos
rcl
scas
or
out
clc
lods
ret
mov
enter
mov
adc
leave
cdq
lods
cld
sbb
sbb
jge
mov
jl
pusha
dec
imul
imul
rcr
pop
add
mov
xchg
(bad)
int
test
inc
adc
aas
test
std
xchg
push
test
pop
loope
ins
out
lds
pop
cmps
xchg
ss
lock
lods
ffreep
jbe
lods
jmp
dec
cmp
imul
js
add
cmp
pop
gs
scas
cmc
push
sar
out
imul
out
inc
icebp
or
leave
loopne
jl
pop
scas
ja
mov
loopne
sbb
jo
ror
outs
in
std
sbb
or
scas
(bad)
out
cmp
push
xor
or
push
dec
inc
mov
int
pop
adc
in
daa
in
ss
mov
or
lods
inc
jb
icebp
add
sbb
mov
xchg
ret
(bad)
enter
push
cmp
pop
mov
scas
repz
shr
imul
mov
or
out
and
add
clc
sub
test
jl
push
xchg
xlat
xchg
sbb
iret
xchg
dec
xor
dec
xchg
std
push
sbb
add
xchg
add
enter
fistp
pop
imul
enter
in
jp
xchg
mov
adc
pop
xchg
int
loop
fcomp
cmp
pop
imul
ds
lock
out
sbb
xor
mov
sub
adc
mov
adc
(bad)
movs
cmp
dec
sbb
test
addr16
or
jle
or
ror
adc
cmp
sbb
xor
ret
mov
pop
sub
lahf
pop
inc
jo
mov
mov
add
not
push
pop
sahf
dec
mov
dec
ja
inc
aaa
faddp
sar
cmp
xor
xchg
das
cli
out
mov
das
and
inc
pop
add
push
xchg
jb
add
inc
ror
(bad)
cld
adc
dec
mov
addr16
and
mov
in
add
pusha
test
ja
pop
sbb
sub
jae
scas
jb
cmp
hlt
movs
fnstenv
mov
inc
add
je
sub
in
xor
pop
jg
in
pop
push
mov
bound
adc
scas
mov
sub
mov
test
dec
pop
xor
movs
add
imul
pop
aam
add
xchg
jne
mov
sbb
jl
mov
mov
and
jmp
push
xchg
mov
pop
arpl
ja
or
addr16
jmp
lock
(bad)
xlat
sbb
adc
xchg
add
retf
adc
lds
push
mov
rcl
sbb
call
pusha
inc
pcmpeqd
cmp
mov
jnp
cmp
call
js
jbe
lock
mov
xchg
sub
arpl
dec
mov
sbb
ror
int3
mov
cmp
mov
mov
mov
adc
iret
jge
cwde
inc
and
call
adc
(bad)
jl
xor
rol
xor
stc
mov
mov
adc
add
mov
mov
pop
xchg
xchg
pop
imul
fwait
in
mov
cmp
dec
aas
sti
or
dec
and
dec
lahf
bound
data16
jne
lock
inc
xchg
push
(bad)
ror
repz
test
(bad)
sbb
imul
sbb
cmps
or
add
bound
lods
(bad)
rcl
rcl
les
jno
retf
cmp
test
mov
fs
in
and
inc
in
xor
(bad)
and
retf
sub
inc
cs
fstp
pop
xchg
fiadd
mov
sti
cmp
cmp
rcr
sub
(bad)
dec
fs
movs
xchg
addr16
aas
jecxz
inc
mov
pop
sbb
ss
gs
and
das
jns
ficomp
ins
jb
push
cmc
cld
out
shl
imul
cs
fadd
inc
fucomip
mov
cmp
mov
rcl
popa
or
and
(bad)
aas
jo
cld
pop
pop
mov
pop
sbb
xor
adc
shl
ror
out
mov
hlt
in
pop
inc
ret
mov
jmp
into
call
fcomp
xchg
mov
mov
jae
pop
call
jecxz
mov
gs
test
mov
dec
mov
in
jno
jmp
test
mov
and
xchg
xor
lods
push
int
neg
retf
repnz
mov
adc
mov
mov
(bad)
shl
fsubr
dec
jmp
in
repnz
inc
jbe
stos
cld
mov
add
div
mov
or
sub
push
pop
add
dec
sbb
push
jp
mov
xchg
int
test
mov
and
xchg
cs
cmp
cmp
dec
inc
mov
push
adc
cmp
pop
pop
or
and
leave
pop
pop
scas
adc
sub
mov
pop
(bad)
pop
push
rcl
mov
mov
mov
fdivr
aaa
mov
mov
ss
(bad)
fidivr
jo
sti
shl
gs
xor
sub
aam
and
lods
xor
jb
das
js
push
fbld
int3
rcr
jecxz
cld
cmc
clc
xor
daa
mov
and
push
xchg
cs
inc
xchg
fisub
dec
js
repz
scas
fidiv
and
(bad)
stos
mov
and
test
add
ss
rcr
loopne
out
cmp
dec
mov
fld
int
out
add
mov
repz
jl
dec
mov
add
xchg
jmp
lahf
loopne
(bad)
fwait
push
adc
pusha
push
mov
scas
stc
pop
imul
mov
cmp
jecxz
(bad)
push
jo
jg
shr
loop
xchg
sbb
das
movs
inc
fld1
push
call
push
sbb
shr
pusha
pop
or
dec
mov
stos
out
mov
xor
jae
ret
(bad)
(bad)
sti
or
mov
stos
outs
fwait
jge
adc
mov
sahf
les
inc
dec
sbb
lock
mov
cld
mov
xchg
rcl
pop
mov
ins
cmp
mov
mov
(bad)
icebp
bound
mov
ins
aaa
out
sbb
adc
std
adc
mov
xchg
popf
mov
push
loopne
pusha
sti
repz
out
xlat
xor
cdq
retf
cmp
sbb
clc
push
mov
jne
imul
ffreep
sbb
je
ret
mov
cmp
or
imul
scas
adc
test
ret
and
adc
gs
popa
mov
cdq
js
sbb
adc
es
sbb
mov
mov
xor
mov
daa
add
mov
xor
popa
xor
iret
leave
or
rol
inc
lea
add
popf
or
repz
add
cld
mov
mov
xlat
mov
sub
cmp
leave
stc
arpl
mov
xchg
and
push
or
movs
jl
xchg
jnp
and
sbb
fdiv
mov
sub
jne
aas
int
adc
inc
cmp
ds
pop
outs
mov
xchg
pop
push
or
xor
push
aas
imul
stos
dec
adc
jecxz
cli
mov
push
(bad)
jl
icebp
mov
sbb
pop
adc
or
pushf
mov
or
shl
in
int3
pop
fstp
push
or
lds
fbstp
sbb
pop
enter
pop
outs
jne
jno
sbb
xor
fstp
xchg
pop
add
cmps
xor
call
stos
and
mov
data16
jmp
xchg
(bad)
jns
fld
xchg
(bad)
cwde
add
outs
add
push
jno
clc
and
retf
add
ja
jle
idiv
xchg
or
(bad)
in
adc
imul
adc
or
loop
dec
loopne
jb
call
fsubr
(bad)
pop
ret
adc
xor
dec
loop
push
mov
xchg
add
cmp
shl
cmp
leave
push
outs
jns
loope
xchg
xchg
sbb
adc
fnstenv
and
pop
jl
xchg
xchg
out
mov
xor
push
loopne
fsubr
or
into
gs
cmp
ins
push
(bad)
sahf
sar
sub
and
aas
jb
(bad)
mov
das
adc
jno
loopne
fs
dec
repz
cmp
out
les
or
mov
mov
aam
(bad)
jb
sub
and
add
rol
fwait
cmp
bound
aad
into
bound
push
outs
or
std
mov
mov
sbb
add
les
jge
loop
mov
pop
sbb
pop
push
lods
add
pop
rcl
popa
scas
cdq
xchg
jp
(bad)
push
addr16
test
in
pop
xor
mov
jae
imul
js
add
mov
movs
outs
pushf
cli
or
dec
ins
mov
out
test
shr
dec
adc
pushf
loope
imul
push
xor
jge
lahf
in
(bad)
icebp
rcr
mov
xor
rcl
addr16
inc
xchg
loope
mov
das
add
push
sahf
mov
xchg
mov
pop
pop
je
xor
pusha
out
outs
cli
and
mov
xlat
sbb
mov
mov
sub
dec
call
inc
sbb
mov
pop
inc
in
jns
push
jmp
pop
mov
fstp
adc
sbb
pushf
mov
xchg
imul
lahf
shr
clc
js
pop
or
and
jecxz
jl
adc
sbb
xor
mov
xor
mov
xchg
ret
rcl
push
dec
ret
xor
movs
jl
in
vcvttps2dq
outs
leave
dec
shl
mov
cmp
loop
mov
sub
mov
pusha
add
add
lea
jb
pop
or
sbb
push
in
mov
sbb
jmp
fwait
lahf
push
popa
mov
mov
in
adc
call
aas
aad
xchg
mov
pmaxsw
jl
cmp
ss
or
xchg
inc
or
int3
mov
add
inc
jge
jb
and
dec
xchg
dec
sti
mov
jae
retf
loop
mov
(bad)
stc
lods
pop
dec
bound
mov
add
popa
js
fidiv
mov
xchg
push
mov
xchg
(bad)
test
dec
test
dec
push
xlat
daa
pop
stos
mov
push
jae
mov
test
sbb
cli
mov
ins
mov
mov
xchg
adc
in
fs
ftst
int
sbb
(bad)
shl
je
jge
imul
repnz
adc
adc
fcompp
cld
mul
lock
sub
adc
push
les
xchg
add
and
loop
mov
dec
or
xor
test
add
sub
lods
add
movs
cli
mov
out
mov
stos
and
sbb
enter
push
les
jb
pop
test
cs
dec
sub
mov
mov
or
leave
aam
jp
fsub
inc
xchg
pusha
mov
xor
cmps
scas
bound
mov
push
cmps
test
cmp
repz
jns
adc
test
mov
out
rol
jb
push
loop
sbb
or
jl
ret
cmc
out
mov
push
mov
aas
push
xchg
(bad)
adc
or
arpl
lods
jmp
and
mov
xchg
cdq
sub
std
add
cdq
mov
mov
push
jg
daa
jno
push
push
pusha
movs
xchg
retf
pop
cmp
ret
hlt
sub
pop
(bad)
cmps
lahf
es
cwde
in
das
xlat
pushf
test
int3
sub
ficomp
in
lahf
test
outs
cmps
dec
cs
adc
xor
xchg
or
popf
jle
sbb
lods
mov
sub
adc
pop
cmp
adc
and
mul
outs
dec
cld
sub
sub
imul
loope
(bad)
adc
xor
xor
js
movs
and
lds
xor
inc
sub
push
sub
inc
pop
out
out
std
sbb
fstp
jo
cld
xchg
movs
mov
or
lods
mov
jl
adc
sti
sahf
int3
pop
mov
pop
out
pop
jb
cmc
push
mov
mov
bound
mov
xor
inc
sub
inc
bound
mov
pop
stos
and
arpl
push
lods
cli
jge
aam
xchg
xor
push
mov
push
mov
es
mov
inc
mov
ja
dec
xchg
xchg
jne
inc
add
or
xor
xor
inc
(bad)
leave
std
xor
in
test
call
lock
(bad)
loop
shl
stos
push
and
ss
ja
adc
call
rcl
mov
fsubp
aas
test
mov
es
mov
rcl
dec
xchg
in
pop
sar
retf
test
mov
cmc
or
adc
push
adc
jae
xchg
out
and
test
jmp
aam
push
push
inc
xor
rcl
and
inc
stos
mov
xchg
jae
out
shr
outs
adc
ret
scas
(bad)
(bad)
in
inc
sbb
dec
enter
aad
sub
sub
mov
movs
dec
int
pop
xlat
(bad)
xchg
ret
cmp
js
xchg
aam
jle
pop
inc
jae
int
dec
rcl
xchg
fstp
arpl
and
or
call
or
mov
cdq
fcomp
jp
add
in
popa
das
dec
push
sub
sahf
lahf
dec
out
mov
sahf
test
retf
and
test
fsub
fidiv
pusha
jne
(bad)
cmp
add
and
dec
push
add
xchg
sub
adc
ret
adc
cmp
ins
cld
pop
sbb
sar
into
(bad)
jns
mov
in
out
fwait
inc
push
add
and
fcomp
jno
push
mov
adc
adc
mov
push
dec
pusha
nop
out
stos
and
shl
cwde
mov
pop
xlat
xlat
fwait
ret
addr16
sbb
mov
lahf
mov
mov
xlat
and
pop
in
xor
add
addr16
inc
sbb
stc
test
push
adc
pop
lock
jns
add
xlat
aam
gs
dec
push
jp
stos
inc
xchg
adc
jmp
mov
xchg
ds
add
inc
out
push
call
in
lahf
or
pop
xor
sbb
scas
rcr
jmp
xor
pop
movs
jb
in
sbb
cmps
sub
(bad)
ffree
(bad)
cmp
sti
call
div
addr16
dec
jns
or
inc
mov
and
cmp
dec
mov
push
and
sbb
lods
hlt
pop
and
push
dec
adc
mov
xor
push
lea
inc
stc
or
(bad)
outs
lahf
scas
or
stos
lods
cli
fisttp
xor
or
dec
pop
test
sbb
mov
push
or
push
jmp
dec
loop
popa
popa
lds
xchg
adc
and
xchg
cmp
add
jmp
cmp
mov
mov
push
out
mov
std
and
cli
or
lahf
mov
and
clc
inc
cs
pop
mov
rcr
and
lea
dec
jne
in
jmp
out
push
cmp
xlat
xor
xchg
and
fbstp
ja
jp
fsubr
mov
push
dec
mov
hlt
shr
in
xor
mov
in
addr16
cmp
push
mov
adc
add
hlt
jae
lods
movs
lea
mov
(bad)
mov
popa
ret
dec
xor
in
sub
loope
mov
js
or
das
loope
iret
push
cdq
popf
iret
arpl
mov
retf
mov
sbb
rcl
dec
sub
loop
gs
dec
mov
call
test
or
(bad)
adc
retf
adc
repz
add
test
aaa
adc
or
pop
fwait
push
xor
int
pop
scas
dec
sbb
xor
cmp
mov
xor
mov
nop
ret
mov
push
into
cmps
jl
inc
xor
in
adc
fstp
cmps
out
mov
fnstsw
pop
imul
lds
or
adc
test
js
xchg
ja
and
es
push
lods
jne
dec
mov
loope
inc
mov
leave
fistp
xor
or
daa
xor
jg
push
jecxz
push
(bad)
loop
xchg
push
out
int3
sbb
and
dec
push
in
mov
inc
stos
mov
fstp
pop
int3
movs
mov
jecxz
push
inc
hlt
sub
xor
cli
cmp
scas
mov
hlt
stc
pop
in
or
mov
sub
cld
shl
adc
jmp
mov
in
xchg
lock
bound
imul
call
adc
and
iret
es
sbb
or
mov
push
push
jle
mov
push
mov
int
int3
rcl
xor
add
dec
push
sbb
xchg
xor
clc
dec
aam
adc
sbb
xor
rcr
shl
mov
push
fstp
loopne
mov
fld
arpl
or
cmp
xor
push
inc
and
(bad)
dec
or
inc
movs
cs
xor
sbb
and
stc
jle
push
cs
test
push
inc
out
aad
sbb
pop
sub
add
dec
int
out
push
aas
sub
xchg
stos
push
iret
mov
xor
je
jo
jg
movs
cmp
clc
push
cmovb
or
imul
fwait
add
mov
fisub
outs
aas
lea
or
lock
xor
sbb
sub
xor
mov
sbb
out
mov
test
or
scas
rol
xor
stos
loope
fbld
shr
mov
jge
stos
stc
push
mov
shl
sbb
jb
iret
or
data16
push
jp
int
sahf
sub
es
mov
int3
fimul
mov
fbld
test
dec
jbe
mov
loope
aaa
pop
in
cmc
fdiv
out
push
sti
out
mov
adc
sub
enter
or
sbb
loop
dec
inc
jge
push
(bad)
push
or
xchg
push
scas
stos
clc
jl
mov
(bad)
out
imul
leave
fimul
push
das
cmc
adc
shr
and
cmc
pop
out
add
xor
popf
mov
mov
in
inc
adc
shld
xchg
call
add
cli
lock
sar
imul
cmp
je
push
lods
and
pop
stos
inc
les
mov
mov
nop
jno
sub
ss
inc
(bad)
mov
xor
adc
mov
sahf
add
dec
sahf
xchg
jl
xchg
test
sub
push
cmp
sbb
les
call
pop
push
pop
xor
xlat
cdq
out
lods
xor
mov
ss
in
push
jl
dec
(bad)
xor
inc
push
jmp
inc
sbb
data16
inc
xchg
movs
ss
pop
mov
jmp
cmp
popf
cmp
hlt
xchg
clc
cmp
jge
adc
in
dec
test
pop
into
arpl
jb
jns
fstp
inc
jecxz
cmc
jmp
xor
and
mov
inc
std
out
push
cmp
mov
dec
inc
outs
mov
into
and
pop
es
mov
not
pop
jb
inc
daa
inc
or
test
mov
lds
ret
(bad)
xlat
mov
retf
gs
lea
mov
xchg
sub
icebp
aas
sbb
popa
clc
cld
and
mov
pop
gs
adc
enter
aas
xor
dec
xchg
retf
cmc
je
xor
call
cmp
or
mov
mov
test
ss
pop
mov
cwde
aaa
sub
pop
in
push
shr
lock
sub
xor
push
mov
xchg
or
fst
pop
stc
pop
aam
xchg
shr
aad
push
fist
js
sub
jmp
dec
pop
push
loop
inc
or
cmp
lds
fcmovb
push
icebp
pop
push
lahf
in
(bad)
sub
cdq
jb
add
iret
pop
jp
fmul
(bad)
or
cmp
(bad)
shr
pop
fild
scas
mov
mov
out
cs
xor
sub
(bad)
cmp
in
adc
mov
push
sbb
test
ins
and
out
sti
test
dec
lea
bswap
into
jl
aam
and
mov
lahf
addr16
adc
xlat
xchg
js
call
mov
or
sub
jmp
sub
cmp
mov
pop
ror
pop
adc
iret
cmp
sahf
mov
call
pop
cdq
in
pop
fs
xchg
adc
jge
push
iret
jo
xchg
inc
add
(bad)
mov
sbb
dec
movs
pop
push
xchg
sub
jmp
and
leave
and
dec
xchg
(bad)
jae
sub
jl
xchg
or
add
pop
sbb
mov
jp
ins
in
retf
or
shl
add
inc
and
inc
(bad)
bound
jl
je
and
daa
push
xor
popf
test
and
je
fdivr
es
lods
cmp
sub
ret
or
jmp
outs
add
cli
retf
aaa
leave
pop
push
cdq
dec
pop
fisubr
call
push
mov
lea
add
mov
test
sbb
lahf
cmp
cmps
test
cmps
or
jbe
fs
js
aaa
data16
jae
out
fnstcw
sub
sahf
pop
in
test
push
dec
mov
pop
pop
xor
cmc
div
xor
pop
jnp
mov
cdq
mov
ror
mov
test
adc
fwait
mov
lods
cdq
push
mov
ins
pop
stc
push
fimul
scas
psubusw
sahf
mov
repz
inc
sub
fbld
into
and
mov
inc
hlt
lahf
(bad)
dec
mov
mov
sub
jne
or
(bad)
rcr
mov
xor
iret
jecxz
mov
mov
pop
es
cmp
mov
dec
add
movs
mov
inc
mov
int3
aaa
or
ret
popw
ins
push
pop
add
clc
or
cld
sub
xchg
fsub
push
xlat
inc
fidiv
jbe
jnp
ins
call
push
sar
lds
test
arpl
mov
sbb
pop
sbb
inc
ss
add
xchg
mov
mov
ret
ret
fs
(bad)
and
jmp
sub
or
mov
xchg
fmul
enterw
cmp
inc
lock
sub
jg
xchg
xchg
out
cmps
call
xlat
dec
daa
arpl
xor
pop
adc
call
fistp
fs
mov
mov
adc
sub
dec
xchg
fisttp
shl
std
outs
int
clc
mov
push
xchg
dec
mov
and
mov
addr16
lds
les
test
dec
into
pop
lods
mov
cmc
scas
cwde
mov
add
sbb
setno
xor
push
inc
mov
cmp
es
sar
adc
fist
sub
js
add
and
idiv
(bad)
out
or
in
and
and
push
mov
jecxz
cmps
not
out
xor
push
pop
or
add
test
js
lahf
pop
mov
dec
sub
imul
fwait
cs
arpl
push
popa
and
pop
xchg
mov
lods
sub
gs
scas
cld
mov
repz
mov
pop
(bad)
ins
push
hlt
xchg
mov
push
(bad)
or
pushf
test
jne
adc
pushf
fild
(bad)
jg
jle
cdq
arpl
into
mov
(bad)
rol
repz
data16
push
dec
mov
jmp
loop
out
das
and
mov
hlt
cmp
das
dec
pop
jb
sbb
sbb
int3
stos
mov
inc
xchg
das
push
mov
hlt
or
mov
dec
sbb
jg
loope
pop
jns
(bad)
ja
sub
cs
sbb
repz
cmp
mov
idiv
sbb
and
push
mov
or
mov
adc
outs
adc
daa
call
aas
cmps
es
push
xor
arpl
and
mov
setp
mov
fwait
cld
rol
xchg
ins
adc
xchg
pop
loop
scas
sbb
inc
mov
mov
jecxz
inc
inc
cmp
lods
xchg
fdivr
adc
xchg
test
jl
pusha
mov
ja
or
jmp
pop
pop
call
daa
lock
shl
(bad)
iret
jbe
(bad)
out
rcl
imul
add
jg
add
sub
int3
xor
gs
push
dec
push
pop
xlat
sbb
(bad)
xchg
outs
icebp
pop
inc
xor
mov
inc
cmp
loope
sbb
int
fild
sub
les
inc
mov
ret
imul
arpl
enter
test
sub
xlat
jg
mov
lods
sbb
add
fdivr
hlt
inc
jmp
mov
test
adc
or
dec
call
test
and
popf
cli
leave
adc
push
sub
scas
cli
pop
fist
xchg
shl
ins
in
(bad)
inc
mov
rcl
mov
ret
mov
aas
dec
xor
dec
int
daa
mov
lods
ret
mov
push
pop
add
xchg
xchg
sbb
pop
stos
mov
mov
or
xchg
shl
or
movs
or
mov
add
cmp
movs
rcr
inc
sbb
and
add
mov
inc
mov
lock
sub
cmp
mov
inc
mov
push
repnz
dec
push
pop
inc
xchg
mov
xor
loop
fcmovb
pop
add
movs
or
enter
out
popf
xor
scas
dec
or
lods
loopne
mov
(bad)
add
sub
aaa
and
int
jecxz
push
mov
push
mov
inc
(bad)
ja
je
xor
adc
dec
cmps
dec
xor
data16
mov
outs
mov
mov
pop
inc
push
call
mov
pop
add
cmp
sub
test
pop
sub
js
in
loope
adc
out
pushf
call
lea
ret
and
call
(bad)
jle
pop
cmp
hlt
pop
mov
add
dec
push
jl
sbb
das
pop
outs
pusha
cwde
push
mov
jno
pmaxsw
ins
ja
jnp
hlt
call
and
data16
icebp
outs
xchg
pop
gs
das
pop
loopne
xlat
and
push
mov
sub
adc
pop
repnz
xor
loope
inc
loope
pop
(bad)
adc
inc
sub
add
xchg
cmps
push
(bad)
test
retf
icebp
scas
cmps
loopne
pop
hlt
fdiv
dec
pop
mov
inc
shl
shrd
je
or
push
stos
pushf
cmps
push
mov
int3
mul
into
movs
lock
iret
shl
mov
scas
scas
out
jnp
xchg
(bad)
fld
xor
dec
push
fidiv
inc
cmc
std
or
nop
add
jg
push
(bad)
push
je
xchg
jp
sbb
lods
fwait
or
cmps
sahf
adc
shl
sub
icebp
fwait
xchg
adc
mov
and
and
or
sar
inc
es
ftst
mov
xchg
pop
jmp
out
in
mov
push
mov
das
dec
mov
shr
push
retf
sbb
inc
xchg
or
js
push
mov
push
call
fwait
int
push
jmp
xchg
movs
jp
mov
jns
fwait
mov
ret
fcom
xlat
sbb
mov
jbe
jns
sub
test
push
(bad)
sub
add
mov
xchg
(bad)
jae
pop
mov
ja
pop
ja
pushf
pop
repz
jl
jbe
push
rcr
(bad)
mov
and
push
fld
repnz
clc
(bad)
jmp
ins
jl
popf
loop
mov
leave
setbe
(bad)
retf
inc
arpl
scas
or
pop
rcl
cmp
xchg
es
jge
or
je
inc
push
inc
je
cmps
jne
ret
xor
in
retf
and
pop
hlt
mov
mov
test
jg
push
movs
or
imul
xor
ja
clc
jmp
inc
pusha
cmp
aam
sbb
mov
idiv
lods
cmp
lahf
jae
loop
fs
scas
loope
push
in
mov
test
(bad)
lds
mov
inc
or
dec
outs
loopne
sub
test
test
push
sub
xchg
adc
pop
xchg
in
je
pop
stos
les
mov
jns
ins
pusha
ins
mov
aad
outs
data16
xchg
popa
inc
dec
inc
mov
je
test
adc
sub
sar
adc
jge
lods
cld
xlat
inc
loope
push
ins
aas
xor
lea
sti
inc
cmp
mov
cmp
add
fisub
btr
stos
das
sbb
ins
xor
mov
pop
cmp
mov
pop
es
(bad)
and
dec
mov
push
jno
(bad)
jns
push
(bad)
dec
sbb
in
cmp
es
je
push
retf
sbb
dec
movs
(bad)
xlat
loope
inc
xchg
cwde
imul
mov
sub
cwde
ja
jl
loope
dec
mov
mov
pop
ja
dec
into
adc
and
scas
xchg
inc
lock
or
sti
cs
sbb
push
push
and
jno
mov
cmc
mov
push
sbb
dec
cmp
dec
xor
outs
fnstsw
retf
add
call
inc
cli
add
mov
sbb
lar
inc
jmp
dec
jmp
in
lds
sbb
popf
lods
sub
sub
sub
and
dec
aas
and
and
clc
(bad)
mov
mov
mov
jnp
jle
jne
jle
xor
test
imul
xlat
pop
sub
adc
adc
mov
add
mov
es
imul
dec
leave
and
xchg
mov
cmp
dec
bound
adc
stos
jmp
add
(bad)
xor
mov
add
in
movs
xor
jmp
ret
inc
cmp
xchg
sbb
xchg
inc
out
lods
popf
lods
(bad)
leave
retf
push
or
mov
ret
adc
pop
sbb
sar
xchg
adc
cdq
jns
jno
jle
shl
cmp
dec
ja
cdq
pop
xor
pop
push
adc
sub
xor
pop
in
fst
mov
xchg
pop
adc
cli
inc
or
or
bound
imul
loope
and
rol
push
les
int
cmps
cmps
and
sub
mov
arpl
lds
inc
cdq
add
mov
inc
mov
mov
push
pop
sub
out
inc
sub
fistp
dec
push
not
pop
dec
mov
xchg
mov
pop
imul
sbb
jmp
mov
aas
sub
cmp
std
mov
dec
mov
mov
movs
jmp
fbstp
push
push
pop
stos
sbb
(bad)
xchg
sbb
cmc
cld
push
enter
clc
mov
aas
movs
les
rcl
push
int
and
sbb
icebp
fdivr
ins
adc
stos
aas
out
stc
fcomp
push
pop
retf
push
stos
std
dec
pop
fcmove
mov
push
push
or
fst
push
mov
dec
cmp
mov
icebp
out
jge
sbb
inc
cli
test
push
xchg
dec
mov
lds
aam
mov
fidivr
dec
lds
mov
pop
pop
iret
or
test
scas
or
and
pop
xor
push
popa
dec
mov
xor
out
lods
test
sti
pop
push
jg
movs
xchg
sbb
test
mov
cdq
xor
inc
or
sar
adc
push
dec
ins
movs
test
sbb
push
cmps
cmp
push
mov
push
inc
mov
sub
inc
pop
dec
add
mov
ins
cmp
bt
pop
fsubrp
jecxz
rol
stc
mov
mov
mov
cwde
vmovss
arpl
push
mov
mov
outs
inc
dec
movs
jecxz
jle
adc
cli
and
es
or
(bad)
sub
add
jb
(bad)
repz
in
scas
cmp
icebp
je
push
ins
xor
mov
mov
aam
xchg
cdq
popf
jbe
xchg
ss
and
and
ins
into
add
stos
lock
scas
mov
push
and
and
iret
mov
out
lods
pop
iret
jnp
movs
xor
dec
pop
jecxz
lock
movs
jge
or
or
aad
inc
or
repz
push
sub
jle
pop
and
retf
cmp
xchg
adc
sub
or
fst
cs
mov
mov
push
pop
loop
data16
fs
(bad)
sub
mov
push
pop
aaa
ror
popa
or
mov
(bad)
jae
mov
in
mov
loope
push
fnstsw
xor
iret
cmp
xor
push
enter
call
je
cmp
sbb
mov
xchg
(bad)
xchg
inc
cwde
push
pop
inc
call
mov
(bad)
push
jne
adc
cmps
push
or
mov
or
mov
mov
push
mov
rcl
imul
movs
sbb
inc
sub
test
push
mov
xlat
pop
test
sbb
dec
loopne
inc
mov
test
inc
xchg
(bad)
lock
sbb
pop
outs
leave
(bad)
mov
xchg
jno
test
popf
lods
adc
adc
fadd
pop
jo
dec
scas
pop
fcom
xchg
setae
lock
sbb
dec
ja
sub
lods
data16
push
mov
adc
ins
or
fsub
mov
mov
out
aad
clc
div
in
test
ret
cwde
sbb
dec
add
nop
aas
and
jp
jns
or
adc
mov
clc
stos
inc
aaa
int
icebp
out
push
out
or
inc
test
or
cld
cmp
or
je
dec
pop
sbb
in
jmp
sub
(bad)
mov
jle
stc
push
adc
add
push
adc
(bad)
lahf
shl
outs
sub
add
adc
clc
addr16
xor
mov
rcl
cmp
fucomp
movs
adc
and
loope
jnp
popa
push
cdq
or
(bad)
repz
ret
fcom
fadd
xchg
adc
or
movs
test
add
dec
ins
repz
add
xchg
push
dec
and
daa
adc
mov
(bad)
call
jle
arpl
dec
aas
in
(bad)
sar
xor
pop
popa
call
shr
inc
imul
out
pop
imul
stos
and
add
mov
js
(bad)
nop
xchg
out
cwde
data16
pop
dec
push
out
xchg
idiv
sti
aad
imul
aam
push
cmc
lods
push
lods
jmp
add
ins
scas
mov
adc
mov
iret
pushf
dec
pop
clc
lods
sbb
adc
push
xor
cdq
xlat
int
(bad)
pop
lds
adc
xchg
in
(bad)
or
jbe
mov
jp
data16
(bad)
sub
add
or
mov
or
dec
pusha
inc
movs
pop
retf
fisttp
popa
mov
sbb
mov
push
xchg
cmp
jmp
stos
add
xchg
dec
les
ins
sbb
push
adc
mov
pop
jmp
cmps
push
shl
movs
test
ficomp
add
pop
xchg
pop
push
leave
fwait
sbb
das
(bad)
and
adc
sbb
mov
push
aam
imul
fcmovnbe
jl
repnz
add
cwde
nop
ss
sub
mov
shl
ret
cmps
daa
dec
or
sbb
sbb
(bad)
fwait
cmp
push
ds
jbe
mov
cmp
sbb
test
lock
pop
fs
lock
mov
lods
enter
aas
sbb
dec
inc
pop
pop
mov
shr
in
popf
mov
jne
inc
imul
inc
push
pop
outs
and
ins
retf
mov
stos
test
push
add
mov
cdq
xor
ins
sub
outs
xchg
scas
lods
(bad)
push
out
gs
mov
jo
icebp
pushf
cmps
cmp
mov
inc
or
jbe
sbb
mov
adc
nop
mov
jge
pop
data16
call
cwde
sub
jp
xor
xor
add
cwde
or
in
lods
mov
push
jg
sbb
adc
lahf
stc
sub
mov
arpl
mov
push
mov
xor
dec
(bad)
or
add
into
arpl
dec
cli
fistp
dec
sub
test
and
sbb
xor
loopne
mov
jb
test
sub
ret
mov
outs
aas
ja
jmp
xlat
cmps
int3
in
ds
inc
ret
mov
out
sub
sti
jno
dec
shl
dec
call
das
jbe
retf
inc
les
inc
cmp
cwde
cmc
(bad)
push
clc
(bad)
mov
ins
fst
jno
cmps
cmp
pop
lds
cmovg
sub
push
ror
pop
jne
mov
retf
fldenv
xchg
fwait
mov
sub
sti
lea
test
adc
in
jmp
pop
(bad)
mov
jnp
(bad)
les
hlt
test
icebp
mov
mov
pop
inc
and
and
mov
xor
int3
fisttp
mov
push
fidivr
in
fwait
jg
sub
add
xor
lds
mov
xchg
ret
enter
je
jno
cdq
sbb
lock
xchg
loope
aaa
out
ret
fdiv
das
pop
mov
mov
sub
pop
jp
mov
pushf
dec
in
cmp
mov
sub
cmp
in
sub
mov
mov
xchg
xchg
test
icebp
dec
pop
hlt
hlt
mov
xchg
es
shl
or
mov
dec
push
iret
clc
inc
xor
fisub
ficomp
mov
cmps
retf
dec
pop
int3
jmp
push
sbb
call
mov
test
fdiv
inc
pop
push
pop
loop
test
ds
dec
dec
in
ins
mov
lea
cld
mov
mov
outs
(bad)
xchg
push
dec
cdq
inc
stos
add
mov
(bad)
mov
and
push
mov
out
pop
fnstcw
jnp
mov
ds
dec
stos
jg
cmps
(bad)
xchg
into
xor
rol
add
iret
lahf
sbb
and
test
sahf
xor
and
pop
adc
adc
(bad)
imul
icebp
jnp
add
mov
ret
pop
mov
loope
outs
inc
movs
std
rcr
test
mov
push
cs
fisubr
and
or
push
nop
or
popa
adc
leave
imul
push
or
(bad)
ds
xchg
dec
mov
and
inc
mov
push
jno
fld
call
or
mov
js
cmp
imul
sbb
add
dec
xchg
lods
push
out
and
popf
shl
shr
rol
pop
xchg
in
inc
enter
cmps
scas
xor
push
dec
mov
and
shr
mov
sub
test
adc
cmc
stc
cmp
popa
or
imul
gs
push
and
je
in
cmp
mov
in
inc
dec
pop
lock
cdq
lock
push
add
dec
xchg
popa
test
in
xchg
lock
push
jno
sub
sar
daa
xchg
test
cmp
jl
in
mov
xor
cmp
xchg
dec
(bad)
add
jb
ror
and
adc
sub
xor
xchg
jmp
loope
jmp
jns
popa
push
sub
ja
(bad)
call
ret
movs
jnp
scas
ret
inc
mov
push
and
push
or
dec
mov
sub
(bad)
mov
mov
jae
lods
cmp
cmp
mov
outs
out
int3
xchg
retf
or
in
outs
stc
jle
push
or
sti
cmp
ins
test
jg
je
cmc
sub
or
cmp
push
movs
jmp
add
ret
jne
jl
or
dec
lods
int3
sbb
cs
out
jno
es
mov
jge
xchg
adc
xchg
xchg
pop
int3
js
xchg
int
mov
push
int3
in
pop
imul
push
sbb
jmp
loope
sub
mov
pusha
loope
mov
je
mov
add
ss
jge
aaa
ficomp
mov
push
inc
push
(bad)
test
and
inc
scas
jmp
jecxz
fmul
(bad)
lods
aaa
pop
pop
lods
add
pop
out
jmp
test
mov
mov
jb
daa
mov
stc
mov
cs
ds
inc
ins
(bad)
lods
outs
jns
inc
mov
cli
sub
sbb
xchg
and
jmp
adc
adc
in
push
xchg
out
ds
pop
out
aas
cmp
push
inc
lods
call
and
jle
xor
jbe
xchg
pop
sub
xor
popa
mov
or
stos
or
test
xchg
sbb
aas
outs
xor
mul
push
or
int3
xchg
mov
aam
das
adc
sub
push
mul
sti
or
fdivr
and
popf
xchg
ins
mov
cli
jmp
lock
fst
dec
push
je
ret
xor
(bad)
in
jns
cmp
push
pop
sub
lock
xchg
movs
test
sub
sub
cmps
fstp
in
sbb
mov
out
xchg
dec
mov
adc
and
fbld
cdq
scas
shl
ins
and
mov
sub
cmp
call
cmps
sbb
jno
fistp
stos
fild
or
iret
xlat
xchg
sar
pop
int
pushf
and
jmp
cmps
dec
mov
xor
pop
adc
xlat
inc
retf
and
cmp
fnstcw
mov
aaa
jg
xchg
out
out
or
push
or
movs
shl
inc
sub
mov
mov
mov
add
xchg
or
mov
mov
loop
mov
xchg
std
leave
sbb
and
dec
add
(bad)
xlat
mov
(bad)
dec
in
mov
fimul
add
and
mov
leave
(bad)
ss
push
mov
lock
push
in
adc
pop
cmovg
pop
push
sub
hlt
mov
xchg
sub
lea
jmp
xor
aam
out
pushf
std
(bad)
pop
fwait
imul
arpl
xchg
sar
in
ficom
mov
rcl
lahf
loopne
or
out
dec
adc
sub
jp
cld
xlat
sysret
stos
lahf
inc
pop
(bad)
sar
jb
test
jecxz
je
push
not
scas
stos
cld
leave
mov
sub
sub
pop
push
into
adc
xchg
adc
rcl
sbb
jl
push
int
lods
ret
sbb
fistp
dec
imul
aam
scas
cmp
neg
cmp
push
pop
shl
add
js
dec
cmp
mov
lahf
cmp
ja
out
xchg
push
push
xchg
sub
mov
sub
dec
push
mov
inc
mov
int3
and
pop
xchg
xchg
mov
add
(bad)
iret
cwde
and
shr
in
mov
push
nop
retf
inc
ja
and
pushf
out
ins
leave
xor
loope
mov
mov
push
push
je
jl
imul
or
or
mov
pop
mov
dec
(bad)
jmp
imul
or
mov
mov
jae
in
arpl
inc
add
jb
in
mov
mov
jecxz
movs
ins
dec
imul
lock
xchg
shr
sbb
out
adc
call
push
push
into
add
aad
aas
ja
out
inc
imul
mov
inc
ins
cld
push
out
sub
sti
push
imul
aas
(bad)
cmps
fsin
adc
or
cs
pop
sub
mov
fwait
(bad)
cmp
pop
and
test
inc
jge
xchg
pusha
xor
xor
ss
push
pop
loop
andnps
lahf
fbstp
xchg
hlt
jnp
cmp
cwde
pop
push
loop
xchg
popf
add
pop
jle
in
add
xor
jo
cmp
enter
test
sbb
push
fmul
arpl
mov
test
xor
xchg
sub
stos
(bad)
gs
mov
adc
add
mov
sub
and
mov
pop
out
lea
lea
sbb
xchg
cli
mov
xor
movs
out
lahf
push
mov
movs
stc
adc
or
xor
inc
and
push
xor
mov
mov
sbb
popa
nop
mov
xor
idiv
dec
dec
xor
scas
jae
jne
je
ins
xchg
fmul
daa
outs
sbb
neg
adc
inc
sbb
lea
push
(bad)
retf
pop
shl
jno
jg
out
and
mov
jbe
or
cmovno
mov
in
test
clc
pop
sub
fs
pop
sar
sbb
xor
xor
pop
dec
push
xchg
xchg
sub
ror
jne
adc
mov
movs
or
fs
push
imul
cmp
fidivr
inc
mov
adc
loope
and
jmp
fnsave
jo
mov
test
pop
cmp
xchg
mov
sub
pop
dec
dec
sbb
jmp
push
and
test
ins
loope
(bad)
loop
lock
inc
xor
ds
xor
inc
sub
inc
jmp
retf
add
push
repz
xchg
push
add
ret
jae
sub
cmp
pop
cmc
out
mov
cmp
leave
outs
inc
std
jnp
imul
adc
jbe
imul
adc
nop
pop
fs
push
push
ror
adc
xor
inc
or
add
sar
sbb
(bad)
xchg
mov
jmp
push
cmp
ja
cmp
jbe
call
into
test
dec
mov
shl
or
pusha
ret
repz
ror
ret
pop
test
(bad)
xchg
adc
xchg
jns
int
pop
inc
sbb
add
les
inc
mov
out
ins
pop
dec
js
sub
mov
int
ds
pop
push
pushf
inc
push
and
mov
std
add
push
das
cmp
fdiv
(bad)
jmp
aad
rcl
cmp
int3
xchg
repz
sbb
fistp
fldenv
frstor
in
mov
psubq
sub
scas
fbld
scas
jne
cwde
push
nop
xchg
scas
ins
daa
jbe
inc
movs
loopne
in
jbe
int3
xchg
sub
jge
enter
int3
add
adc
xor
dec
iret
sub
rcr
jns
imul
pop
mov
mov
dec
imul
adc
clc
jno
sub
test
in
mov
test
lock
fwait
jmp
xchg
repz
mov
ret
nop
mov
(bad)
dec
js
add
mov
mov
dec
jbe
cmp
dec
sar
adc
mov
mov
xchg
dec
add
mov
stos
bound
cmp
xchg
jp
neg
arpl
inc
(bad)
dec
sub
hlt
add
addr16
cli
and
jno
into
jge
(bad)
push
or
mov
ss
jecxz
lea
jecxz
sub
mov
mov
ds
lahf
scas
or
das
mov
pop
adc
inc
pop
inc
mov
and
xchg
ins
mov
pop
sbb
gs
scas
adc
out
icebp
mov
or
push
in
mov
(bad)
or
cmp
loope
xchg
int3
mov
mov
retf
mov
pusha
fadd
or
sbb
mov
mov
out
jnp
adc
stos
aaa
js
out
std
(bad)
lock
xor
test
(bad)
and
add
fcmovu
push
mov
shr
test
call
push
mov
out
adc
(bad)
mov
pusha
jge
retf
test
lock
inc
xchg
xchg
ror
jmp
ret
fisttp
jne
aaa
and
pushf
jmp
cli
cmp
cli
(bad)
sub
pop
push
pop
and
pop
outs
sub
lock
pusha
stc
push
(bad)
loope
sbb
inc
enter
xchg
add
and
call
test
jl
xor
test
cld
gs
adc
and
pop
cdq
push
loope
cmp
sbb
idiv
pop
push
adc
fisub
mov
jnp
add
fstp
imul
jno
test
aaa
cmp
xchg
jle
pop
in
movs
enter
push
jmp
fild
hlt
shl
cli
sahf
cmp
fidiv
mov
xor
imul
inc
scas
fdivr
pop
int
push
(bad)
and
(bad)
cmp
dec
test
cwde
mov
or
inc
pop
jg
sub
and
and
dec
fld
mov
outs
mov
sbb
sbb
and
mov
outs
test
push
mov
cs
push
repnz
out
jge
cmp
inc
or
lock
test
dec
xchg
inc
jbe
xchg
jbe
jno
aas
push
iret
xchg
cld
aam
outs
push
jle
mov
hlt
cs
mov
aas
aad
lahf
fisub
sbb
imul
outs
mov
jno
cli
and
pop
jecxz
shl
cmc
or
fldcw
(bad)
xor
jp
arpl
dec
or
adc
cmc
div
jp
test
mov
mov
cmps
lods
inc
leave
test
cdq
lock
hlt
sahf
xchg
xor
push
inc
pop
sahf
ds
sub
jbe
fdiv
mov
dec
ja
and
fadd
test
bswap
(bad)
xor
inc
lea
inc
aas
dec
addr16
sbb
inc
push
aas
pop
cmp
loop
jnp
sub
xchg
push
pop
fcomp
cmp
outs
std
les
cld
ss
sub
pop
jns
add
or
adc
push
les
movs
test
pusha
cmp
sbb
push
cwde
rol
pop
retf
xor
pop
xchg
fwait
inc
sahf
popf
je
pop
cmp
int
push
xor
lock
test
pusha
cmc
inc
or
stc
imul
jecxz
mov
ins
mov
xor
icebp
sub
dec
lock
pop
das
pop
jmp
xor
xor
sbb
sbb
jne
fsubr
(bad)
mov
sbb
mov
imul
adc
dec
mov
xor
or
push
push
dec
ins
cs
mov
or
in
ret
std
push
mov
sub
pop
push
jae
sbb
fst
ds
shr
xor
sub
lods
aam
test
inc
pop
add
out
pop
in
ficomp
inc
and
add
int
push
retf
aas
add
ins
repnz
cwde
xor
push
xlat
fs
push
and
mov
inc
push
cdq
sbb
add
retf
push
les
inc
pop
repz
jecxz
loop
ficomp
cld
mov
xchg
jo
sub
mov
push
mov
or
sar
sub
scas
pop
std
lea
dec
in
jecxz
ficomp
je
push
mov
ret
or
pop
stos
call
add
cmp
or
sbb
fldenv
mov
and
scas
cmc
jmp
sbb
retf
push
jge
push
(bad)
stc
adc
push
dec
mov
loope
repz
add
mov
and
push
adc
inc
inc
int3
stos
(bad)
loope
or
icebp
push
(bad)
xchg
(bad)
mov
das
jmp
das
adc
retf
cmps
sbb
pop
mov
pop
adc
test
sub
repz
mov
sub
popf
faddp
idiv
or
mov
stos
inc
xor
aas
rcr
movs
div
out
fild
das
ret
jl
icebp
rol
mov
scas
and
jne
push
and
push
sub
std
mov
pop
outs
(bad)
jge
bound
mov
inc
mov
(bad)
(bad)
and
cld
adc
lds
fmul
jns
stos
mov
push
mov
loop
mov
pop
cwde
xchg
sti
sar
pop
fldenv
enter
push
scas
pop
mov
int3
jnp
imul
sub
(bad)
xor
xchg
sbb
rol
les
push
sar
mov
pusha
dec
inc
out
lds
adc
and
dec
stc
mov
ja
sbb
mov
push
adc
or
add
data16
out
dec
cs
inc
jge
cmp
add
out
xchg
test
adc
push
jle
mov
les
enter
push
jo
enter
jo
push
int
mov
cmp
dec
xor
mov
and
out
fstp
cmps
sbb
mov
push
aad
mov
push
mov
dec
pop
adc
mov
sub
cmp
mov
push
in
sub
(bad)
gs
sbb
shl
dec
sbb
repz
ds
pop
rcl
pop
dec
shl
pop
xor
frstor
mov
xor
push
inc
sbb
cmp
mov
xchg
cwde
jg
movs
movs
dec
jne
outs
rol
jb
mov
inc
mov
dec
fwait
movs
sbb
dec
jne
mov
and
sbb
ret
push
fsubrp
inc
rol
imul
add
cld
pop
sbb
cwde
(bad)
xchg
mov
loope
pop
aad
int3
jmp
and
mul
aas
out
div
js
mov
int
sub
push
nop
cmp
retf
mov
ja
inc
aad
test
dec
inc
das
jge
and
ins
loopne
icebp
jmp
jmp
jno
pop
shl
cld
mov
mov
sbb
xor
in
sar
push
xchg
(bad)
fsubr
scas
xlat
inc
xchg
adc
sbb
pop
sub
sbb
dec
cmps
ss
stos
add
inc
pushf
and
push
in
fld
cmp
clc
xchg
cld
push
jno
daa
or
jge
dec
int3
xlat
call
sahf
fs
dec
call
sbb
shl
push
sub
(bad)
push
jae
dec
popa
lods
mov
in
int
inc
arpl
(bad)
(bad)
push
sub
mov
jo
cmp
imul
jb
or
fisub
and
std
aas
xor
test
out
mov
sub
(bad)
out
fstp
sub
in
cmp
sbb
icebp
(bad)
jb
mov
outs
loop
loop
scas
or
jg
mov
or
cmp
movs
cmp
(bad)
pop
mov
adc
scas
out
stc
pop
pop
xchg
sub
mov
xlat
outs
adc
sar
sbb
jno
stc
test
xchg
mov
mov
ins
enter
enter
add
lods
xor
sbb
xchg
(bad)
(bad)
outs
inc
sahf
cmc
imul
icebp
daa
fcmovnb
sub
addr16
imul
outs
sub
daa
and
ror
lods
sbb
adc
xchg
jg
pop
call
sub
enter
sbb
mov
clc
jne
xor
out
adc
stos
mov
cmp
int
test
ds
stc
mov
or
unpcklps
pop
sbb
mov
jae
dec
sub
movs
nop
lock
test
aaa
imul
cmps
adc
lock
and
retf
mov
or
sub
mov
push
or
jo
push
pop
in
stos
fdivr
test
mov
into
mov
mov
fnstcw
aam
ss
jne
aad
jmp
xchg
sub
inc
mov
popf
push
dec
call
xchg
ret
inc
add
imul
ficomp
lods
rol
shr
sbb
sbb
push
enter
jns
into
sub
mov
pop
adc
jecxz
cmp
ja
icebp
push
xor
out
fwait
rcl
mov
sbb
xchg
mov
call
aam
lods
setg
call
jg
mov
sar
push
ins
movs
test
cwde
imul
pop
stc
jle
adc
xor
pushf
mov
cdq
shr
dec
dec
(bad)
xchg
xor
out
mov
sub
in
pop
mov
or
icebp
leave
sub
sar
out
pushw
jbe
lods
adc
out
mov
test
push
or
dec
loope
xchg
inc
addr16
and
std
cld
mov
push
retf
mov
sub
mov
gs
pop
clc
mov
sbb
mov
cmp
push
sub
dec
dec
les
imul
cmp
and
retf
jecxz
adc
mov
(bad)
retf
lds
inc
out
mov
fs
test
mov
adc
mov
mov
stos
mov
jnp
lock
push
jae
push
pop
dec
push
fidivr
in
lods
cs
fimul
add
(bad)
jnp
fiadd
sub
pop
adc
and
mov
jae
rcl
mov
call
movs
pop
sar
cmp
push
retf
cli
push
push
add
lods
inc
outs
jle
shl
ret
loope
test
cld
test
aad
add
rcr
test
fcomp
fwait
into
iret
sub
das
add
lods
inc
sub
fdivr
mov
call
mov
fwait
stos
mov
jl
push
or
jb
retf
scas
lods
sbb
push
pop
iret
xchg
dec
retf
and
cmp
pushf
sar
out
or
adc
sbb
mov
mov
(bad)
cpuid
imul
mov
std
xchg
pop
or
stos
bound
jno
or
call
xor
push
xchg
push
cmp
fst
mov
shl
cwde
push
retf
(bad)
push
mov
sbb
xlat
sahf
bound
add
and
je
fsubrp
ret
jg
lock
scas
in
or
test
push
xchg
cmp
cmp
cwde
repz
dec
in
in
sbb
sbb
repnz
test
jecxz
xchg
aad
pop
xlat
push
les
mov
push
(bad)
fstp
(bad)
jo
(bad)
and
int3
and
aas
xor
xor
popf
dec
dec
daa
push
xor
out
cmp
mov
arpl
xchg
ror
jl
ret
(bad)
cmc
dec
or
mov
pop
push
jmp
or
loop
in
arpl
lahf
ds
inc
add
in
inc
mov
pop
rcr
nop
mov
test
fimul
dec
xchg
adc
cli
cmp
push
gs
scas
or
ror
jb
jmp
mov
mov
popa
ins
lea
sub
sub
pop
arpl
xor
retf
scas
out
cmps
loope
or
dec
jns
jl
dec
adc
sub
sub
out
and
sti
xor
int
fild
into
shr
aad
xchg
shr
or
pop
xor
out
or
add
pop
leave
mov
inc
sub
inc
(bad)
add
out
xchg
add
nop
out
xor
mov
xor
pop
rol
adc
fsubr
mov
xor
fsubr
(bad)
mov
das
jno
lock
loope
push
inc
jns
in
mov
stos
inc
mov
pop
lds
outs
push
cdq
in
push
es
fistp
jmp
(bad)
jmp
jg
adc
push
jecxz
mov
push
(bad)
cwde
repz
push
adc
fst
push
lea
bound
cmps
loopne
mov
ror
adc
bound
sub
das
call
lock
cmp
arpl
xlat
mov
sub
jne
mov
inc
inc
les
(bad)
out
jmp
sbb
cmp
cmp
adc
lock
ins
mov
push
lock
adc
add
mov
mov
jecxz
aaa
cmp
cmp
shl
aam
repz
xchg
test
inc
outs
adc
rol
lock
push
sahf
test
inc
inc
or
jne
dec
sbb
xchg
in
push
pop
lea
fst
call
cmps
mov
push
push
ds
mov
push
test
fidiv
(bad)
jno
jbe
or
mov
leave
std
call
cwde
jg
and
movs
xchg
mov
pop
cmp
lea
lds
ins
push
in
pop
int3
nop
cmp
mov
ret
xchg
jo
inc
inc
in
cmp
pop
icebp
mov
mov
adc
xor
mov
xchg
cmp
or
jge
test
lods
in
repnz
popa
mov
jmp
and
pop
dec
push
push
(bad)
pop
inc
cmps
pop
mov
adc
push
ret
adc
out
mov
lods
adc
adc
or
arpl
hlt
jo
movs
sub
stos
push
adc
aam
jnp
inc
lods
stc
lock
mov
int
loope
or
in
sbb
mov
popf
jge
mov
repnz
neg
mov
mov
lods
mov
xor
sahf
push
repz
loop
daa
or
pop
push
pop
pop
test
mov
adc
cmc
xor
fbld
test
push
cmovg
sti
mov
out
mov
lds
inc
(bad)
popa
add
lock
movs
shl
pop
cmp
inc
jge
inc
mov
xchg
loope
xchg
mov
jmp
xor
(bad)
out
push
push
cmp
inc
pop
or
loope
mov
cdq
(bad)
adc
inc
sbb
push
shl
scas
jne
dec
mov
test
icebp
loope
inc
sti
jmp
mov
adc
dec
dec
and
int3
mov
xchg
xor
call
das
and
cmp
jae
cmp
mov
pop
dec
pop
repz
cmp
add
mov
mov
loopne
cs
jno
lea
rcl
push
jp
dec
pop
idiv
das
pushf
xchg
pop
adc
pop
add
sbb
out
push
in
add
test
and
adc
shl
xor
shl
inc
gs
fcomp
or
pop
push
xchg
lods
ins
sub
mov
mov
pop
fisubr
xlat
inc
or
stos
push
xor
int3
(bad)
pop
out
ss
jne
loopne
out
sbb
add
push
int3
mov
pop
jns
iret
dec
popf
aaa
jp
dec
outs
or
sub
mov
stos
pop
cmp
mov
shl
mov
pop
jle
push
jg
shr
lods
mov
xor
popf
sbb
xchg
xchg
push
pop
jp
inc
sar
pop
and
int
inc
mov
push
add
shr
loop
pop
xchg
xor
ins
push
add
cli
outs
or
enter
gs
(bad)
push
add
es
mov
inc
packsswb
cmp
cmp
mov
xor
enter
fistp
mov
cwde
and
aam
jg
dec
fistp
sti
and
retf
cmp
movs
push
sahf
add
sbb
ret
adc
stc
cmp
rcl
add
and
add
aas
data16
mov
jmp
mov
and
fisttp
sub
sar
pop
loopne
dec
les
out
adc
xlat
je
in
pop
xchg
mov
rcr
les
imul
mov
pop
jnp
add
sub
inc
add
cdq
xchg
icebp
xlat
scas
rol
jmp
sub
scas
es
sbb
scas
add
jb
jge
sub
sub
mov
inc
add
push
add
cmps
add
mov
test
pop
cmp
mov
and
scas
mov
mov
sbb
jge
mov
int
cmp
dec
call
xchg
bswap
or
xor
and
inc
push
nop
dec
or
js
in
inc
fisubr
xor
push
sub
mov
dec
mov
cli
fwait
pop
scas
es
lock
inc
inc
mov
pop
pop
ss
movs
jns
jb
shr
test
cwde
mov
sbb
push
jno
mov
outs
sbb
mov
dec
adc
(bad)
gs
sub
dec
pop
pop
cmp
ss
cwde
gs
int3
sbb
or
inc
shl
mov
ins
cmp
adc
mov
pushf
xchg
(bad)
or
(bad)
(bad)
in
mov
xchg
(bad)
bound
pusha
cmps
pop
loope
and
mov
stos
pop
fnsave
push
xchg
jnp
cmp
dec
jbe
add
xor
jmp
ret
inc
and
shl
sub
aad
in
pop
mov
or
data16
mov
dec
and
dec
aad
mov
lds
movs
mov
dec
popf
nop
clc
and
hlt
mov
ss
push
sub
sbb
xor
loope
fsubr
mov
fwait
inc
movs
ds
outs
shl
adc
pop
sti
stos
out
cmps
pop
test
movs
les
aaa
call
hlt
and
xlat
adc
pop
loopne
push
sub
out
pop
lds
xchg
jno
adc
xchg
and
fdiv
aad
shr
shr
xor
mov
pop
retf
jae
repnz
jb
in
hlt
inc
ds
jns
jl
sbb
adc
inc
test
pop
das
arpl
stc
mov
psubsw
add
add
add
push
pop
stos
and
adc
loopne
(bad)
and
inc
jl
rol
xor
repz
ret
out
in
movsx
sahf
jne
aaa
inc
xchg
cwde
push
sbb
fisttp
add
push
jae
dec
mov
jo
sbb
ret
mov
xor
adc
jnp
push
js
out
add
sub
into
imul
aad
icebp
das
in
call
xchg
lds
fs
mul
or
imul
lahf
xor
(bad)
scas
mov
data16
cmp
push
mov
dec
mov
cs
mov
iret
jp
(bad)
push
js
inc
fcomip
test
jmp
sbb
sbb
call
sbb
xor
clc
dec
std
pop
sub
enter
push
retf
sub
ret
mov
leave
leave
pop
cmp
popa
jae
repnz
sub
cs
mov
icebp
(bad)
sti
int3
gs
push
clc
mov
add
jmp
inc
jg
int
push
sub
jp
push
clc
adc
pop
dec
fcomi
sbb
pusha
pop
ss
jmp
xor
pop
fbld
jmp
sbb
rcl
(bad)
aad
cmp
mov
hlt
ins
inc
lock
pop
mov
adc
mov
cmp
jns
xor
jmp
lock
out
inc
lods
loopne
jnp
ins
cmp
add
int
mov
xchg
xchg
ret
pop
jns
stos
daa
sti
shl
and
mov
inc
outs
in
pop
and
xchg
cmp
fs
xchg
jo
fwait
push
movq
ins
jns
push
ret
xor
pop
xor
inc
repnz
repz
sub
outs
fs
mov
icebp
mov
or
pop
rcr
ins
fs
(bad)
mov
or
je
cld
inc
pop
bt
push
jecxz
loop
retf
jne
adc
sub
mov
dec
cli
xchg
shl
jle
sbb
add
inc
pop
inc
jb
sbb
repz
jbe
sar
cmc
dec
sub
mov
mov
xor
sahf
sub
add
and
push
je
and
in
xor
ds
cwde
ja
mov
adc
icebp
inc
lds
cmp
cmps
sub
pop
retf
jp
dec
and
movs
push
fisttp
fcomp
pop
sbb
jl
sub
adc
in
mov
cmp
sub
call
mov
sti
adc
cmp
repz
(bad)
cmp
pop
shl
pop
mov
fld
out
sar
inc
cs
and
mov
mov
outs
xchg
mov
add
pushf
test
adc
jge
cli
rol
jbe
push
dec
pop
mov
xchg
or
pusha
dec
jo
gs
inc
popa
out
dec
sbb
addr16
jg
outs
jnp
test
pop
sbb
cdq
jo
mov
jg
mov
data16
pusha
or
pop
cmp
mov
rcr
fs
add
sahf
imul
daa
inc
shl
cmp
xchg
or
gs
sbb
xchg
mov
ss
sbb
(bad)
xlat
rol
not
mov
jecxz
xor
ror
xchg
hlt
test
aam
xor
bound
je
out
retf
xchg
xchg
mov
in
in
sub
cli
sbb
mov
mov
lods
sub
push
out
popa
dec
xor
xchg
jnp
scas
mov
pop
(bad)
data16
fild
jmp
jbe
xchg
int
hlt
test
pop
lea
push
dec
sbb
loope
push
out
cld
and
pop
(bad)
pop
rcl
mov
in
mov
push
outs
mov
sbb
push
and
push
aaa
xchg
nop
adc
test
mov
xchg
les
imul
out
(bad)
adc
dec
dec
es
ror
pop
in
jae
jnp
xor
retf
test
dec
adc
in
movs
jmp
shr
daa
in
mov
add
mov
wrmsr
mov
test
jmp
add
inc
lods
jne
push
or
and
imul
aaa
dec
mov
mov
cmp
jmp
loopne
jns
jne
es
(bad)
adc
test
sub
sub
adc
pop
xchg
lods
mov
mov
outs
lods
add
mov
les
inc
je
fld
ror
pop
test
enter
xchg
call
test
mov
les
jns
out
fcmove
mov
add
sbb
enter
out
sub
or
inc
idiv
xor
push
mov
sbb
mov
xor
jo
mov
xchg
pop
in
cmp
pop
std
and
push
imul
jno
les
sbb
mov
out
jmp
cmp
fdiv
sub
bound
mov
leave
dec
sbb
mov
cmp
repnz
pop
int
jecxz
push
(bad)
pop
push
mov
in
xchg
scas
jb
pop
inc
jmp
cld
ret
lods
icebp
loop
test
call
jmp
sbb
dec
mov
xchg
inc
lods
and
cs
jmp
test
int
daa
push
mov
mov
in
or
jle
out
jl
mov
sbb
bnd
je
iret
shl
in
jl
add
mov
or
mov
and
dec
cmp
jp
int3
mov
sbb
daa
fadd
outs
sbb
jnp
sbb
pop
fcom
dec
pop
stos
inc
stos
pusha
fsubr
adc
add
std
fist
dec
push
mov
xchg
or
jae
or
ret
gs
jp
sub
push
in
dec
ret
stos
inc
neg
mov
popa
cmp
int3
xor
dec
mov
stos
mov
adc
jno
cmp
outs
retf
jmp
pop
pop
sbb
data16
add
mov
xchg
cmps
outs
inc
aaa
push
mov
push
mov
js
dec
and
(bad)
aam
dec
sub
or
jg
(bad)
xor
movs
jnp
push
pop
pop
pop
dec
cmp
xor
and
pushf
add
jbe
int
cmp
mov
test
jecxz
shl
xchg
nop
popf
mov
sub
and
fld
push
out
icebp
inc
push
cdq
jl
loopne
inc
adc
lods
mov
retf
or
aas
jbe
pop
(bad)
jecxz
jle
push
cmp
imul
je
je
adc
lea
xchg
mov
mov
call
mov
jg
int
mov
inc
mov
fs
inc
int3
jbe
jmp
cmc
inc
rol
popf
mov
(bad)
test
in
stc
sbb
test
fwait
xor
jae
int3
sbb
push
jb
ficom
imul
add
push
out
sub
cwde
or
addr16
pop
das
inc
mov
stos
xor
scas
add
add
cmp
adc
test
pop
in
aad
cli
pop
mov
dec
fchs
loop
out
pop
call
add
push
push
mov
ret
sub
fs
or
jno
xchg
das
loope
dec
lds
and
xchg
mov
in
xchg
push
pop
pop
push
dec
pop
or
std
cli
rcl
push
push
ret
js
or
js
push
adc
sub
(bad)
sahf
add
mov
mov
in
mov
stos
cmp
cmp
shr
das
adc
and
enter
push
loopne
pop
(bad)
jl
and
sbb
adc
inc
xchg
mov
pop
shrd
sahf
mov
cmp
push
es
dec
stos
xor
sub
jo
mov
jecxz
movs
(bad)
das
jge
mov
mov
adc
pop
cmc
dec
push
pop
mov
sub
and
jns
xchg
std
shl
aaa
dec
push
(bad)
out
mov
mov
push
and
popf
pop
fistp
jb
xchg
cmp
push
cmp
push
or
and
call
loope
sub
pop
push
sbb
cs
hlt
loop
mov
push
xchg
pop
mov
cmp
jge
pop
pop
hlt
mov
fwait
sbb
popa
mov
les
mov
lahf
jle
div
dec
popa
outs
xchg
inc
adc
add
mov
loop
xor
sar
mov
push
lds
outs
push
inc
hlt
lods
int
leave
ss
rcl
xlat
jge
(bad)
icebp
pop
adc
mov
mov
or
sahf
leave
sahf
and
jmp
dec
in
cmps
in
dec
push
and
addr16
cli
int3
push
xor
xor
xchg
aam
mov
les
mov
add
push
xor
push
imul
inc
jl
stos
in
repnz
cmc
and
ret
cmp
and
mov
adc
and
(bad)
mul
mov
jge
cmc
jnp
bound
je
pop
add
test
test
inc
jb
sub
or
aad
aad
ja
out
loopne
add
jne
mov
lahf
xchg
adc
mov
je
push
outs
inc
shl
push
aam
xchg
aam
mov
cmps
xor
cmps
pop
outs
popa
shr
push
xor
shl
movs
pop
mov
addr16
pop
mov
fisttp
cmovae
icebp
mov
cli
shl
pop
or
adc
jb
outs
xchg
dec
enter
jle
adc
mov
cmp
icebp
xchg
jl
sbb
mov
pusha
and
sbb
fwait
pop
loop
sbb
xor
inc
pop
clc
pop
sbb
pop
or
xor
in
dec
pop
xchg
mov
test
and
inc
fsubr
ds
stos
imul
test
in
ss
dec
out
pop
and
mov
inc
sti
push
dec
and
and
mov
sbb
hlt
clc
xchg
sbb
std
cli
sar
inc
mov
pop
repnz
call
push
mov
mov
stos
loope
inc
dec
mov
cmps
push
fidiv
and
ror
fcomp
out
outs
mov
in
ret
xor
xchg
inc
imul
in
retf
push
jno
sub
mov
xor
mov
dec
leave
mov
cmp
mov
out
pop
cmp
cld
(bad)
pop
mov
mov
adc
mov
repz
fisttp
mov
das
cmp
stos
xor
sti
pop
xor
adc
ret
mov
xchg
dec
mov
sbb
rol
test
or
pop
(bad)
movs
xlat
cmps
sbb
cmp
leave
or
pop
inc
es
mov
sbb
cdq
shl
dec
inc
out
jo
mov
dec
mov
pop
movs
bnd
dec
mov
daa
push
and
or
lods
cld
lds
jbe
cmp
hlt
cwde
aas
mov
jmp
jb
adc
push
loop
rol
nop
or
jne
stos
into
dec
xchg
add
xchg
nop
inc
xor
dec
cld
ins
cmp
dec
adc
mov
pusha
jb
fcmovu
jne
sti
dec
adc
mov
xchg
xlat
xchg
bound
mov
sbb
out
push
out
add
(bad)
xor
mov
test
dec
and
mov
pop
data16
and
in
mov
loop
push
std
loope
call
mov
push
in
mov
fnstsw
sub
mov
sbb
mov
mov
nop
mov
mov
jnp
xchg
mov
mov
mov
mov
arpl
xor
add
sub
cwde
or
lea
push
les
mov
mov
dec
aas
je
jo
inc
cmps
push
dec
sub
loopne
pop
mov
aas
(bad)
and
fidivr
xchg
adc
test
fisub
pop
push
lods
fisub
daa
imul
std
pop
and
fld
ret
inc
xor
cmp
sbb
ss
xchg
clc
cmp
add
out
sahf
sub
icebp
clc
mov
mov
sub
xor
pop
fistp
mov
clc
xchg
shl
jmp
int
sbb
mov
push
mov
repz
push
pop
adc
mov
cmc
push
jecxz
add
push
test
out
sub
iret
bound
add
inc
imul
mov
loope
inc
or
inc
(bad)
aad
adc
bound
dec
pop
test
cmp
cmp
xor
call
in
mov
(bad)
xlat
pop
pop
mov
(bad)
clc
fwait
push
inc
and
popf
mov
loop
mov
(bad)
les
jg
das
dec
enter
pushf
imul
jg
stos
jecxz
mov
push
dec
cld
jo
and
inc
lea
or
mov
loope
movq
mov
cs
cmc
in
and
dec
enter
ss
jb
sbb
cmp
(bad)
jecxz
xchg
aas
fisub
ret
pushf
adc
xlat
je
cmc
int3
(bad)
std
out
cmps
sti
adc
pop
mov
call
(bad)
xor
rol
inc
cmp
les
stos
pop
ins
and
add
scas
mov
mov
ins
outs
in
jbe
cli
jmp
mov
push
movs
inc
push
xchg
add
pop
fimul
and
or
mov
lahf
mov
push
out
and
or
dec
cmp
repz
add
pop
push
aas
mov
jne
or
inc
sbb
xor
mov
out
jb
add
mov
leave
and
and
sub
push
jg
cld
sub
xchg
dec
daa
xchg
leave
inc
fcom
sbb
adc
pop
sub
push
dec
and
pop
js
fsubp
retf
cmp
or
inc
jbe
sbb
dec
fs
xor
push
lods
jecxz
jp
and
push
mov
fwait
pushf
jl
adc
sub
or
(bad)
adc
out
loope
jns
xchg
xor
xchg
fadd
ret
mov
push
gs
xchg
icebp
hlt
loopne
in
fstp
xchg
pop
push
loop
mov
mov
push
lahf
pop
cmp
(bad)
jne
dec
push
dec
add
mov
mov
mov
jmp
test
out
sub
mov
xchg
pop
mov
and
pop
fisttp
jle
cli
pop
add
gs
xor
rcl
push
outs
in
mov
mov
dec
pop
loop
jg
scas
push
mov
jbe
xchg
iret
icebp
lods
shl
cmp
xor
xor
mov
inc
mov
cmp
test
das
jb
and
int3
and
mov
or
push
rol
cmp
mov
push
dec
stos
les
scas
popf
pop
mov
lods
jg
jno
stos
sub
gs
xchg
jg
cmp
and
call
inc
sub
mov
mov
inc
(bad)
sub
adc
inc
(bad)
sahf
leave
xor
sbb
and
add
adc
outs
std
add
pop
push
hlt
pop
push
stos
mov
inc
aam
mov
adc
out
sub
push
jmp
(bad)
mov
mov
sbb
loop
rol
loope
mov
pushf
ret
and
jne
movs
icebp
add
das
(bad)
jne
and
inc
xchg
out
movs
hlt
outs
int
add
cmp
and
ja
fs
stc
jecxz
(bad)
or
and
lock
std
nop
loopne
sar
pushf
adc
es
dec
out
push
push
or
out
mov
or
mov
and
das
jo
out
inc
cld
fs
inc
pop
jp
mov
loopne
cmc
sbb
out
xor
into
aas
(bad)
fsubr
mov
add
xchg
cmp
and
outs
int
add
sbb
test
sbb
xlat
cmps
push
(bad)
sar
test
xlat
mov
push
movs
push
adc
retf
mov
and
xor
sub
cmp
(bad)
jne
push
and
pop
lds
es
jle
mov
shl
clc
adc
lahf
(bad)
mov
dec
iret
xchg
(bad)
ins
adc
or
push
pop
popa
mov
or
sbb
cmp
shl
(bad)
cli
daa
pop
xchg
js
scas
push
or
aad
sbb
add
jmp
and
(bad)
rol
cli
xchg
jge
jae
mov
sahf
sti
call
inc
push
mov
inc
jns
icebp
addr16
xchg
push
mov
pop
mov
jmp
cdq
aaa
je
int3
retf
push
jbe
add
pop
ja
mov
and
add
mov
lea
adc
jp
mov
push
cmp
cmc
loop
leave
sub
or
add
add
push
xchg
jp
push
dec
or
push
sub
jge
dec
pusha
lods
mov
inc
in
jae
push
jno
adc
sbb
test
mov
push
rol
mov
test
push
dec
cmp
sub
out
and
jne
repnz
mov
in
jo
shr
or
cdq
jb
xchg
inc
(bad)
dec
aas
mov
or
mov
xor
jne
xchg
(bad)
stos
push
iret
movs
mov
mov
icebp
loop
xchg
push
invd
sbb
sbb
leave
retf
in
adc
fcmove
jecxz
mov
mov
mov
mov
jb
or
ins
rcr
inc
sub
fs
and
arpl
int
pop
jmp
push
shr
dec
sti
or
ja
push
mov
xor
inc
scas
sbb
pop
jmp
add
sbb
inc
sub
pop
and
mov
jl
xacquire
ins
xor
nop
jnp
pusha
test
clc
(bad)
ret
pop
inc
lock
pushf
sbb
mov
jle
mov
add
sbb
fsub
jae
ficom
or
daa
ins
jge
mov
xor
pusha
dec
call
imul
hlt
jns
std
or
dec
push
(bad)
repnz
adc
loopne
iret
pop
push
push
imul
bound
stc
add
imul
or
btr
aad
cld
(bad)
sti
mov
xor
push
sbb
movs
fdivr
sar
ret
in
xor
std
sbb
xchg
fadd
retf
jp
or
xchg
arpl
pop
stos
cmp
and
fcom
mov
enter
in
sub
inc
and
ins
cmp
test
sub
and
iret
idiv
pop
lods
xlat
inc
jno
pusha
push
cmp
out
xor
into
fnstsw
sbb
and
add
or
aam
pop
fadd
mov
dec
push
data16
je
pop
mov
idiv
(bad)
push
lock
sbb
inc
mov
outs
mov
and
dec
jns
dec
(bad)
(bad)
mov
pop
les
cmp
data16
or
fcom
adc
(bad)
(bad)
stos
push
icebp
adc
jp
mov
xor
hlt
(bad)
in
and
sub
dec
push
xor
sub
adc
arpl
icebp
icebp
repnz
and
xchg
cmc
dec
call
mov
sub
add
mov
jmp
popf
sbb
sbb
in
cmp
aad
sahf
dec
ja
fmul
aad
(bad)
aam
fstp
fs
adc
shl
xor
push
mov
push
(bad)
mov
dec
push
enter
jne
les
mov
clc
lods
or
sub
pop
mov
mov
cld
cwde
mov
adc
sub
mov
mov
jecxz
cmp
in
ret
loop
inc
sti
pop
jmp
movs
mov
mov
or
(bad)
push
out
pop
jp
fcomp
push
pop
inc
xor
mov
push
mov
sub
jb
je
mov
ror
sub
push
or
nop
xor
add
dec
scas
mov
mov
jne
pop
ficomp
push
mov
std
fwait
push
cmp
cdq
inc
bound
gs
or
or
mov
and
jl
and
dec
in
inc
jle
stos
rcl
aaa
frstor
inc
repz
sbb
pop
clc
pop
mov
inc
scas
stos
mov
sbb
(bad)
iret
add
push
jl
fwait
(bad)
(bad)
jmp
icebp
aas
jecxz
enter
xor
xchg
stc
imul
fst
add
or
cwde
sbb
shl
dec
sbb
sub
mov
fcmovu
add
js
mov
not
add
dec
in
test
ins
mov
adc
dec
pop
jmp
inc
inc
add
or
js
pop
stos
ins
cld
scas
aas
loopne
ret
jl
xor
and
cmp
push
ficomp
loope
pop
cmp
push
pop
aas
mov
scas
sbb
outs
sub
pop
shr
pop
cld
cli
ficom
add
stos
fsub
popa
aas
loope
mov
xchg
bndstx
loop
inc
jl
mov
pop
xlat
mov
add
shl
ror
bnd
test
cmp
mov
push
lock
or
int3
xchg
sbb
add
mov
push
dec
mov
cmp
jp
xchg
arpl
inc
in
mov
cmp
cmp
ret
mov
mov
sbb
fist
cmps
push
jns
push
cli
inc
add
arpl
adc
inc
ret
lahf
int
addr16
fwait
in
jle
mov
add
jns
fist
jl
or
xchg
test
bound
and
xor
xlat
xor
jmp
loop
sbb
rcr
adc
pop
sub
push
add
inc
or
daa
inc
mov
call
mov
xchg
xchg
jle
jns
lds
mov
mov
aas
aad
lahf
jns
mov
loope
xchg
adc
aaa
stc
jl
ds
jne
adc
loop
daa
mov
cmp
mov
xchg
xor
sbb
xchg
xor
pop
shl
dec
jno
push
ret
xor
dec
xor
repnz
(bad)
mov
pop
ds
mov
lods
jg
sahf
enter
push
cmp
xor
not
inc
pop
popa
mov
jno
mov
call
push
mov
fadd
sti
lock
sbb
mov
pushf
cs
lods
or
dec
add
xchg
xchg
(bad)
sub
(bad)
mov
mov
cmps
jecxz
inc
push
fisttp
sar
out
bound
std
pusha
jmp
fndisi(8087
inc
gs
daa
push
dec
(bad)
jmp
hlt
pop
repz
mov
and
push
inc
addr16
(bad)
mov
int
mov
jmp
mov
js
or
pushf
int3
cmp
leave
jns
mov
arpl
aaa
sub
push
xchg
cmp
inc
cmps
popa
or
imul
jbe
jmp
das
jno
xor
sbb
ss
fsub
lea
inc
in
icebp
addr16
dec
cmc
mov
test
mul
imul
fadd
jb
mov
sbb
and
shr
mov
in
xchg
jl
out
sub
sbb
sar
retf
out
cs
cmp
lds
mov
sub
add
pop
push
test
jb
or
lea
mov
inc
pop
or
test
or
lea
shr
iret
mul
push
ins
mov
add
dec
ss
fs
ins
fisubr
mov
ds
pushf
cli
mov
out
aad
sti
fcomp
push
cs
lds
push
outs
test
adc
jg
pop
mov
loope
push
jo
js
push
retf
jnp
out
sub
mov
xchg
ret
out
les
mov
mov
pop
jle
idiv
jl
jo
sub
iret
adc
popf
es
xchg
add
enter
or
adc
repnz
lahf
stos
push
movs
xor
popa
outs
loope
test
or
jmp
add
mov
or
mov
adc
mov
retf
sbb
stos
or
jmp
outs
shl
stos
xor
loopne
fimul
ror
stos
dec
rcr
jmp
or
push
pop
dec
xor
out
jle
leave
das
sub
xchg
cmp
or
xchg
bnd
sbb
fdivr
mov
les
inc
cdq
push
(bad)
(bad)
(bad)
(bad)
stc
cwde
sub
inc
mov
retf
dec
fdivr
repz
add
sub
aas
std
movs
movs
icebp
sub
jmp
xchg
mov
out
scas
bound
shl
sahf
add
xchg
in
in
adc
(bad)
push
aas
test
fld
fadd
or
daa
rol
retf
sub
ins
hlt
mov
mov
inc
rcr
out
ficomp
rol
(bad)
pop
stos
pavgw
mov
bound
std
jge
adc
paddd
sub
xor
sub
ins
dec
cmp
sahf
hlt
fiadd
add
dec
fist
mul
inc
and
inc
ja
mov
stos
xchg
out
cmp
data16
xor
xchg
xor
mov
jg
stos
cmp
js
fidiv
fbld
xor
jne
or
mov
stos
xchg
sbb
test
pop
scas
xchg
imul
xlat
shr
or
push
mov
cmp
jb
pop
dec
test
xchg
cmp
sbb
(bad)
sub
(bad)
out
mov
sbb
out
cld
mov
and
stc
lods
xlat
mov
or
cmps
pcmpgtw
mov
mov
dec
leave
and
icebp
dec
fcomp
(bad)
mov
imul
hlt
mov
imul
xchg
ficom
xor
mov
push
pop
mov
jmp
pop
push
pop
and
les
in
or
mov
dec
lods
les
and
jo
aam
push
lods
call
loop
aam
pop
pop
and
inc
add
add
xchg
loopne
sar
cmp
test
out
pusha
push
(bad)
cmp
pop
jecxz
sub
or
cmp
and
jne
jp
push
jmp
push
inc
jbe
cwde
cmp
push
fmul
push
(bad)
sbb
mov
cld
ins
sub
imul
sar
mov
mov
mov
mul
sub
cmp
fimul
cmps
(bad)
cmp
push
scas
movs
mov
cmps
xor
inc
mov
inc
and
cmps
and
icebp
and
add
mov
loope
push
shl
outs
inc
pop
ret
jo
xchg
xchg
add
cli
jns
in
lea
idiv
jnp
fldcw
ins
and
pop
not
loope
push
mov
ror
fidiv
pop
cmp
jae
in
or
sbb
nop
push
and
add
fsub
ins
jb
xchg
lea
mov
(bad)
mov
fs
cmps
das
xor
imul
popf
pushf
repz
push
dec
popa
loopne
cli
sbb
push
jmp
jnp
push
jmp
mov
popa
cs
or
mov
sub
jl
jp
xchg
aam
jmp
cmps
outs
or
daa
push
mov
mov
cmp
inc
(bad)
aaa
xchg
jl
shl
xchg
ficomp
jne
aas
fistp
pop
push
jecxz
int
inc
out
xchg
cmps
cmps
adc
movs
jmp
mov
cmp
adc
mov
dec
clc
push
iret
in
inc
stc
out
cmp
mov
dec
jmp
push
js
or
mov
pop
test
rcl
xor
mov
scas
sbb
leave
sbb
mov
xchg
inc
sbb
arpl
adc
xlat
sbb
xor
inc
out
pop
mov
mov
mov
mov
imul
dec
xor
add
jo
mov
pop
jle
lods
movs
dec
cmp
sub
xlat
mov
xchg
js
scas
popf
aaa
loop
clc
jge
pop
movs
cli
in
sar
and
push
dec
stos
adc
jmp
retf
mov
adc
dec
mov
push
outs
es
pop
adc
fadd
(bad)
lds
cmp
pop
jae
push
mov
or
leave
sbb
mov
xchg
out
push
and
and
mov
ins
(bad)
adc
lahf
jl
xchg
ss
mov
push
sub
in
mov
sbb
stos
and
add
ins
icebp
pop
leave
fild
cli
and
add
fstp
sahf
or
mov
xor
aas
mov
adc
(bad)
adc
inc
cmp
sub
aam
inc
inc
jae
or
shr
pop
push
jp
test
jge
xchg
mov
push
les
mov
repnz
adc
dec
aaa
xor
jge
aas
pop
mov
stos
popa
add
lds
mov
adc
dec
cmp
push
dec
aaa
dec
push
retf
mov
adc
push
lock
cmp
sub
call
jge
lods
push
mov
xchg
mov
add
mov
cmc
dec
into
(bad)
or
adc
inc
dec
popf
ins
mov
mov
ins
cmps
jnp
sbb
lods
cmp
push
and
out
push
scas
jl
sbb
bsf
sar
repnz
add
cmps
cmps
fwait
stos
mov
mov
int
in
sub
adc
enter
mov
ins
adc
sbb
(bad)
or
shl
pop
ror
les
or
imul
out
aas
sbb
xchg
pop
cmp
and
scas
and
leave
xchg
xchg
or
in
sbb
lock
ja
nop
pop
aam
and
imul
jmp
das
mov
out
pop
mov
xor
loope
mov
in
inc
loopne
xchg
and
push
sbb
ror
mov
push
pop
outs
cmp
mov
bound
dec
pop
nop
das
sub
enter
loopne
stos
sub
lds
dec
sbb
and
popa
xchg
xor
stos
xor
xchg
and
mov
ds
ins
gs
mov
or
jg
test
test
adc
lahf
dec
test
jb
les
mov
jb
test
stos
and
shl
inc
push
rcr
stos
mov
mov
cmp
mov
xchg
mov
inc
test
mov
and
inc
das
daa
les
int3
mov
push
cmp
clc
or
aam
xchg
mov
rcr
jle
add
or
push
daa
sbb
xor
xor
sti
(bad)
add
(bad)
lea
rcl
sbb
adc
fnstcw
jnp
pop
dec
or
xchg
in
sub
adc
push
shl
inc
sbb
push
and
fwait
aas
(bad)
cwde
xchg
loopne
popa
adc
out
shl
bound
out
mov
callw
dec
sub
add
or
jmp
mov
rdtsc
or
mov
(bad)
aam
pop
sbb
adc
in
sub
sbb
cli
iret
mov
xor
push
(bad)
push
xor
and
pushf
clc
cmps
mov
sub
ins
mov
dec
mov
std
sahf
(bad)
cmp
icebp
stos
lods
xchg
jno
(bad)
lahf
pusha
int3
cmps
and
mov
(bad)
sti
ret
adc
or
xchg
pusha
scas
sar
mov
sbb
pusha
dec
aam
icebp
rcl
xchg
mov
adc
adc
movs
or
mov
enter
mov
pop
cdq
hlt
lea
mov
(bad)
lods
(bad)
jl
imul
lds
outs
mov
or
retf
ret
jmp
test
mov
das
scas
js
fst
jbe
repnz
cmp
cdq
lock
stc
sub
xor
and
dec
das
neg
retf
stos
(bad)
loopne
in
dec
adc
and
jb
cmp
(bad)
inc
mov
ret
std
data16
bound
outs
add
(bad)
push
lods
mov
jmp
stos
enter
sbb
xor
mov
xchg
loopne
lock
fidiv
test
aam
jae
xlat
imul
sbb
std
pop
stc
movs
pop
mov
pop
dec
stos
mov
jnp
dec
jg
sbb
daa
mov
mov
push
mov
ror
(bad)
xchg
cmp
mov
fprem1
pop
ficom
lock
loop
nop
mov
sub
jno
fcmovnbe
push
fbld
aam
sbb
int
cmp
sub
xor
mov
or
mov
sub
mov
adc
popa
das
(bad)
fwait
adc
in
inc
fnstsw
aas
pop
ja
lods
bound
mov
ss
xchg
inc
test
rcl
repnz
in
pop
pop
xchg
mov
sub
pop
lods
int3
in
stos
std
(bad)
fsubp
arpl
mov
int
std
dec
sbb
mov
dec
adc
sahf
mov
imul
call
jp
in
pop
mov
xchg
inc
jo
xchg
imul
push
daa
sub
and
mov
pop
out
(bad)
jne
ret
mov
mov
sbb
imul
fsubr
xchg
shr
rcr
(bad)
(bad)
jne
dec
push
std
xor
shl
cmp
add
sub
add
inc
pop
adc
mov
iret
cld
movs
or
jne
xor
mov
xor
dec
loop
mov
rcl
sub
xchg
mov
ss
fsubr
mov
test
mov
arpl
cmps
xchg
pop
out
mov
enter
aas
aad
push
mov
push
js
jno
mov
out
or
aaa
push
jp
bound
cmp
(bad)
int3
adc
mov
fsub
cmp
lock
cli
ret
pop
dec
imul
pop
pop
push
sbb
jg
rcr
pusha
cli
jnp
mov
stos
and
and
push
pop
ficomp
(bad)
aam
xor
cmps
int
mov
sbb
sub
xchg
test
stos
xchg
ins
or
(bad)
xor
mov
push
imul
sub
pop
fnstenv
ret
jb
mov
popa
arpl
out
cmps
int3
cmp
jmp
pop
xor
xor
movs
in
and
mov
dec
sbb
and
es
pop
call
jmp
test
xor
sub
ja
or
repnz
aas
movs
icebp
mov
sahf
add
mul
stos
pop
push
retf
xor
mov
push
int3
ss
mov
dec
in
sub
pop
mul
(bad)
sbb
cmp
shl
pop
mov
mov
stc
xchg
repz
xor
mov
adc
ficomp
(bad)
and
aam
data16
fld
aaa
test
sub
mov
je
dec
inc
dec
push
aam
jbe
movhps
rsqrtps
into
pop
rol
inc
cmp
and
loope
fsubr
repnz
das
aas
mov
mov
mov
je
out
jmp
ret
jnp
call
xchg
call
pop
stc
ins
cmp
and
mov
xchg
or
xor
sbb
mov
imul
inc
sbb
jg
inc
xchg
sub
xchg
es
arpl
sbb
push
ss
pop
xor
add
sbb
sub
js
adc
repnz
in
xor
lock
push
mov
and
bound
fsubr
sub
xchg
xchg
dec
jp
fwait
outs
test
cdq
lahf
pushf
mul
leave
sub
fld
je
hlt
ret
ficomp
adc
addr16
jno
push
popa
call
mov
sbb
dec
leave
mov
repnz
inc
xchg
jno
jmp
add
scas
mov
jno
mov
in
xor
js
stc
jecxz
mov
int
call
mov
mov
and
call
int
push
pop
jo
xchg
adc
mov
(bad)
jno
and
add
adc
cmps
jp
inc
shr
push
sub
pop
fistp
pushf
lds
mov
cmp
cwde
push
push
fs
inc
sub
rol
sub
test
jno
adc
xchg
add
mov
les
jb
dec
aam
pop
cdq
les
pop
and
dec
ficom
sbb
sbb
dec
shr
sbb
add
or
push
das
and
jbe
add
push
std
dec
scas
out
adc
aas
fcmove
push
lods
dec
out
push
clc
popa
jge
xor
cmps
jae
lea
or
in
leave
(bad)
out
jns
xlat
lods
sbb
cdq
loope
adc
push
jo
pop
xor
es
push
jns
sub
lods
shl
mov
and
add
mov
loope
cmp
inc
add
mov
arpl
pop
pop
and
scas
sub
arpl
sbb
mov
inc
xor
clc
ret
jle
cli
or
mov
mov
sub
or
sbb
mov
aad
cmp
adc
sub
sub
push
test
dec
xchg
inc
scas
adc
repnz
out
mov
(bad)
fwait
shl
or
add
frstor
ins
cmp
addr16
loopne
mov
fs
cmc
sbb
(bad)
loopne
fld
sti
jnp
dec
out
in
mov
and
sahf
push
jns
mov
fnstcw
pop
aaa
cmp
adc
push
cmp
and
mov
add
mul
mov
push
mov
push
jbe
sub
popf
test
int3
imul
xchg
pop
adc
es
clc
inc
retf
dec
inc
ret
push
je
loop
push
jecxz
pop
cmp
outs
mov
fstp
pop
mov
xchg
pop
jb
push
mov
cmp
mov
push
enter
stos
push
fistp
sbb
and
addr16
scas
movs
shl
and
push
imul
sbb
ds
adc
mov
js
out
shl
cmp
jb
gs
aam
dec
test
add
mov
aam
fstp
ret
fimul
fs
mov
out
aam
jge
pop
or
push
mov
mov
sti
aaa
or
dec
(bad)
mov
addr16
out
iret
mov
jl
out
sbb
sahf
ret
aad
fnstcw
imul
add
xchg
call
outs
mov
push
int3
dec
cmp
jbe
data16
jg
xchg
stos
jnp
adc
fcmovne
ins
push
(bad)
rol
int3
or
jnp
mov
outs
adc
mov
mov
in
out
inc
and
(bad)
sub
jnp
retf
dec
add
ss
jecxz
lods
pushf
(bad)
xchg
jl
test
iret
out
in
int
adc
addr16
and
xchg
call
push
(bad)
pop
ja
cmps
push
jmp
fsub
inc
pop
mov
push
mov
into
jns
xchg
retf
punpckhbw
in
(bad)
cld
enter
inc
inc
data16
cmps
hlt
lock
pop
push
in
in
mov
or
(bad)
fwait
pop
or
mov
xchg
sbb
pop
ret
popa
inc
or
outs
jmp
sub
xchg
(bad)
jmp
push
and
inc
xor
xchg
push
test
mov
movs
mov
sbb
cmp
fnstsw
sar
sub
jmp
adc
lahf
jl
jb
outs
mov
movs
pop
push
or
and
pop
test
push
push
dec
fiadd
cs
mov
adc
mov
fidivr
push
sti
mov
mov
ret
es
ret
call
pop
jns
cmps
jb
inc
mov
xor
ss
sub
sub
imul
outs
pop
cs
sbb
scas
cmp
in
mov
xchg
dec
or
or
mov
in
add
stos
xor
mov
dec
add
out
sbb
scas
xlat
jno
pop
fdiv
jle
jmp
cmp
retf
push
dec
clc
popa
mov
mov
jmp
gs
stc
mov
test
push
xor
dec
or
out
cmp
xchg
jno
mov
xchg
imul
add
call
jmp
pop
(bad)
imul
push
fstp
push
dec
imul
push
dec
loopne
push
sbb
xor
xor
call
cwde
cld
push
mov
sub
fs
push
xlat
adc
inc
rol
and
or
dec
and
in
jbe
cli
pop
adc
dec
dec
or
and
scas
(bad)
das
test
mov
mov
fist
retf
hlt
fwait
dec
jo
(bad)
in
pusha
adc
ret
and
xor
jnp
xchg
lods
loope
shl
inc
sub
cmp
test
sub
and
(bad)
cdq
add
pop
scas
xchg
movs
outs
scas
arpl
aad
aas
mov
out
xlat
retf
shl
adc
push
icebp
ss
mov
jmp
repnz
push
sar
rol
dec
pop
xchg
jb
mov
ds
jnp
pop
mov
push
in
ret
ss
cmp
pop
retf
aas
adc
ror
pop
mov
dec
(bad)
xor
adc
pop
sbb
das
jo
dec
fnstcw
xor
nop
push
xchg
adc
not
lea
ins
jmp
add
ss
mov
push
or
jmp
sub
fwait
idiv
and
popf
movs
std
sti
add
jp
adc
lds
cmp
pop
xchg
dec
(bad)
pop
push
lods
les
clc
(bad)
fwait
mov
cmp
lods
or
ds
mov
jg
inc
iret
or
dec
dec
clc
sub
cmp
repz
call
pop
pop
retf
aaa
xor
pop
xchg
test
test
xor
popf
and
push
pop
push
jmp
fwait
push
or
jns
xchg
loop
inc
dec
les
test
sar
pop
lods
inc
lods
fbstp
and
sbb
sub
mov
popa
repz
mov
out
sar
(bad)
nop
fbstp
(bad)
loop
(bad)
pop
xchg
lahf
mov
push
inc
xor
stos
jns
inc
jbe
xor
push
sbb
pop
sbb
ficom
xchg
lods
out
pop
sahf
ss
push
mov
shl
sub
or
lods
mov
mov
enter
std
jp
adc
mov
or
and
pop
cmp
int3
jae
mov
aas
dec
in
fs
mov
pop
std
ins
pushf
aas
jp
pop
pop
pop
dec
xor
mov
jns
leave
ja
jne
mov
sbb
call
repz
sar
mov
mov
pop
repnz
out
es
fsubr
push
jno
lock
xchg
in
call
sub
pop
jae
das
xchg
fisubr
sahf
in
inc
pop
push
test
in
xchg
popf
sub
nop
js
jne
adc
aas
jmp
dec
push
push
retf
stos
adc
add
iret
loope
cmc
xlat
int3
scas
push
xor
mov
lods
jmp
mov
mov
xchg
movs
pop
pop
lock
jbe
retf
dec
dec
push
mov
iret
cmp
mov
test
jnp
inc
enter
push
fdivr
popf
mov
pusha
mov
xor
xor
test
xchg
(bad)
mov
test
and
loop
jne
mov
into
test
dec
dec
int3
jo
mov
stos
int3
test
pop
js
or
or
(bad)
xchg
xor
cmps
fs
test
mov
enter
mov
lahf
pop
cmps
in
cmp
add
in
fs
mov
neg
inc
cmp
lods
cwde
mov
pop
mov
fisubr
mov
icebp
push
xor
jmp
shl
mov
inc
dec
mov
cmc
or
jnp
sub
(bad)
sbb
(bad)
imul
inc
mov
retf
pop
call
sub
mov
adc
push
int3
scas
iret
sahf
fild
mov
mul
cmp
add
fisub
fimul
rcr
inc
(bad)
repnz
mov
test
pop
push
nop
cmp
sbb
sbb
outs
frstor
mov
fs
clc
cli
pop
ret
add
ret
sar
and
and
inc
and
push
repz
jg
or
sbb
(bad)
sub
(bad)
adc
sub
fcomp
or
dec
loop
dec
mov
pop
ins
sbb
dec
cmps
rol
add
ins
xchg
xor
bound
mov
dec
(bad)
mov
ret
jae
nop
stc
test
imul
add
push
test
neg
dec
loopne
jo
hlt
arpl
cmp
loop
sub
movs
pop
lods
jmp
cmp
mov
addr16
clc
mov
in
shl
mov
cld
addr16
outs
shl
xor
scas
rcr
test
pop
fist
daa
dec
into
lds
mov
mov
pop
repz
or
ret
inc
cld
movs
pop
je
jnp
repz
int3
test
jp
push
mov
lds
scas
xor
call
rol
lds
mov
add
dec
push
sub
pop
xchg
ins
jno
test
add
mov
jmp
jns
into
add
enter
sbb
js
mov
hlt
test
fwait
icebp
adc
gs
ins
sbb
push
dec
inc
mov
dec
xchg
jae
fidivr
sti
sub
repz
dec
push
(bad)
scas
cld
cld
pop
xchg
enter
sbb
daa
aam
adc
icebp
cdq
pop
mov
inc
imul
jmp
lods
mov
ja
das
sub
int
test
mov
xchg
mov
popa
pop
or
stc
mov
mov
and
xor
sbb
dec
das
(bad)
out
and
mov
sub
sti
add
mov
jmp
ret
add
pop
xchg
xor
ret
mov
and
add
fs
inc
xor
ja
enter
and
sar
dec
dec
test
aam
pop
jmp
loopne
mov
push
pop
fcmovne
(bad)
int
aaa
sbb
fmul
or
cmps
pusha
out
rcl
jb
jl
pop
inc
(bad)
clc
xlat
sahf
push
sub
push
jl
fild
scas
push
xchg
out
call
push
lds
enter
mov
mov
jnp
nop
add
pop
imul
stc
xchg
ins
pop
repnz
movs
xor
outs
add
mov
inc
inc
pop
imul
mov
pop
add
lock
ja
push
das
sbb
(bad)
sti
adc
push
les
pop
sahf
add
or
addr16
pop
fidivr
adc
sar
and
pop
add
je
push
ret
(bad)
xchg
fbstp
lds
leave
push
hlt
sub
out
dec
inc
in
mov
hlt
push
stc
jle
sub
cmp
mov
or
je
jp
test
xor
fidivr
pop
mov
stos
scas
fsubrp
xchg
jecxz
mov
mov
movs
dec
(bad)
add
cld
mov
cmp
imul
sub
pop
mov
jl
cli
(bad)
inc
adc
push
sub
pushf
clc
ror
enter
out
test
mov
(bad)
xlat
cmps
mov
loopne
or
sub
sub
fyl2x
adc
mov
lock
(bad)
rcr
mov
in
aad
test
ss
mov
clc
xchg
mov
jle
dec
add
mov
push
inc
inc
xchg
add
aas
dec
cs
pop
adc
mov
imul
mov
ficom
(bad)
push
dec
fwait
dec
jns
or
ds
leave
fs
push
jnp
pop
shr
mov
mov
pop
xchg
xchg
sti
jle
cmp
jnp
adc
cmp
out
cwde
call
or
sahf
sti
dec
in
xchg
and
mov
out
leave
bound
lahf
adc
jmp
(bad)
xor
jnp
shl
pop
daa
push
mov
adc
fidiv
dec
call
or
in
in
push
sbb
mov
sub
jmp
push
pushf
xchg
jne
sti
mov
inc
jg
adc
mov
cmp
and
mov
fdivr
dec
sub
dec
inc
add
xlat
nop
mov
sbb
out
dec
fstp
cmps
fmul
push
mov
cmp
or
clc
movs
push
jmp
xlat
inc
shl
mov
xlat
fld
and
add
dec
or
cmp
push
add
and
sbb
cld
popf
jge
imul
jle
or
inc
jg
cld
sub
xchg
mov
mov
or
ins
into
es
jmp
sbb
retf
mov
sbb
lods
pop
stc
xor
dec
jmp
push
dec
jne
lock
xchg
mov
add
mov
push
fbld
(bad)
and
nop
inc
repnz
scas
xlat
cmc
mov
push
test
add
mov
scas
sbb
mov
popa
xchg
push
jge
icebp
push
hlt
cmp
add
adc
(bad)
jbe
push
and
sbb
sbb
xor
mov
mov
xchg
movlps
lds
adc
push
and
fld
addr16
xor
fcomp
sahf
loope
test
mov
(bad)
out
jmp
jns
or
jg
cmp
ins
dec
mov
ret
cmp
sub
mov
ds
adc
mov
mov
jno
repnz
mov
mov
popa
call
xchg
mov
pop
mov
ficomp
sbb
sub
and
and
movs
xchg
test
jmp
je
adc
mov
call
jmp
mov
fs
call
add
les
sbb
mov
imul
es
adc
icebp
mov
sbb
(bad)
push
repnz
std
and
xchg
jg
cs
dec
xchg
fistp
outs
sub
jnp
jae
or
into
mov
shr
stos
lods
cmp
fs
callw
sbb
mov
fdiv
xchg
test
and
pop
lea
cmps
mov
mov
outs
jno
sub
push
jb
pop
ins
leave
imul
push
push
jg
in
cmp
out
lahf
push
(bad)
enter
(bad)
arpl
xor
nop
inc
pop
cmp
lock
retf
aad
xor
xchg
xor
and
loop
cwde
mov
jne
xor
repnz
push
(bad)
cmc
dec
inc
pop
rcr
cmps
nop
pop
adc
movs
pop
call
fs
inc
test
add
sbb
jl
inc
outs
cmp
and
add
jns
or
jo
fstp
retf
arpl
cld
sbb
add
retf
cmp
(bad)
mov
mov
mov
sub
xchg
sbb
push
repz
fucom
stc
popf
nop
dec
popa
mov
and
addr16
push
(bad)
xchg
pop
inc
outs
pop
dec
cmps
in
and
sub
rcr
mov
pop
xchg
shl
push
xorps
lods
out
inc
mov
repz
dec
stos
push
sub
int3
sbb
add
and
cmp
bound
movs
jmp
ret
dec
mov
repz
sub
mov
in
pop
fiadd
out
jo
push
mov
pop
push
adc
dec
push
dec
repnz
sti
loopne
mov
xlat
test
lods
jecxz
leave
adc
push
ins
xchg
inc
xor
or
mov
sbb
jo
push
mov
fdiv
pop
and
cmp
jecxz
cmps
pusha
lahf
aas
xchg
sar
dec
adc
mov
inc
ins
rcl
cmc
out
dec
sub
fldlg2
adc
ret
push
and
dec
mov
retf
cmc
ja
inc
xlat
in
(bad)
out
cs
(bad)
cdq
inc
cli
mov
add
mov
pushf
arpl
out
jmp
aaa
or
adc
adc
adc
xchg
dec
imul
movs
cmp
sub
xrelease
cld
popf
fucomip
pop
cli
jo
in
iret
dec
push
adc
icebp
popa
jl
mov
inc
push
push
lock
popa
jmp
lahf
mov
and
xchg
mov
push
inc
and
and
shl
int3
movs
add
loope
not
cli
push
sub
add
inc
sahf
push
movs
inc
pop
mov
(bad)
push
test
ficomp
xchg
adc
mov
(bad)
movs
dec
outs
retf
push
nop
push
ja
movs
push
pusha
ret
mov
pop
div
push
mov
or
add
push
fisubr
xor
cmp
mov
out
xor
gs
cmp
mov
lahf
scas
je
loopne
sbb
push
inc
ins
jle
add
jecxz
mov
mov
inc
(bad)
pop
imul
mov
into
mov
sbb
neg
jle
shl
jns
(bad)
scas
push
mov
inc
ja
cmp
mov
jnp
lds
cmp
or
pop
cs
pop
jmp
xor
test
in
xchg
and
not
fcomp
stc
adc
nop
data16
inc
xor
mov
add
mov
icebp
inc
or
(bad)
loopne
retf
movs
pop
test
xor
sbb
cmps
xchg
and
pop
and
xor
out
add
inc
bnd
adc
sar
mov
clc
jle
xor
test
stos
daa
mov
inc
inc
std
arpl
adc
icebp
(bad)
mov
cmp
inc
fbstp
sbb
js
xchg
xchg
js
bound
movs
call
mov
cld
loop
les
add
dec
cmps
pop
out
adc
xchg
xlat
jmp
jno
or
push
fimul
pop
and
sahf
(bad)
in
adc
sahf
jmp
inc
mov
pop
sub
jmp
das
xchg
xchg
or
or
or
mov
and
mov
leave
(bad)
sub
loopne
iret
outs
xor
xchg
mov
mov
mov
push
idiv
pop
push
mov
iret
pop
pop
push
popa
loopne
mov
shr
out
adc
shl
fsub
push
fninit
mov
dec
xchg
scas
clc
adc
fiadd
iret
inc
lock
sbb
push
xor
(bad)
jno
mov
mov
jmp
idiv
(bad)
or
fsubr
scas
pop
ds
es
xor
mov
sti
push
sub
xor
out
jne
inc
pop
outs
outs
mov
cdq
and
dec
leave
es
push
ins
test
or
(bad)
sub
and
popa
mov
dec
into
js
gs
dec
sbb
jno
lea
xor
scas
xchg
dec
ja
xchg
jne
fs
cmp
mov
into
inc
nop
xchg
int
sti
mov
std
cmp
mov
sub
dec
jp
jo
nop
les
imul
fisttp
fadd
add
mov
jge
mov
cmp
jns
pop
icebp
jns
bound
(bad)
jl
in
gs
add
dec
push
dec
dec
jne
push
push
div
das
imul
ss
pop
mov
or
popa
cs
stos
clc
sub
mov
test
pop
mov
adc
jne
setno
inc
in
or
not
out
lds
call
stos
jns
jo
loop
or
pop
test
sahf
jno
ins
xchg
adc
xlat
mov
dec
add
or
pushf
sbb
loope
push
sub
pop
in
push
mov
mov
or
pop
xor
rcr
push
push
xor
push
push
cmp
cli
pushf
cld
pop
inc
dec
hlt
scas
cmp
sbb
jmp
push
outs
in
xchg
pop
push
aam
loopne
mov
cli
jno
push
sti
jns
pop
jns
fist
loop
inc
and
lea
pop
fdiv
and
fprem1
repnz
dec
js
push
clc
mov
jmp
call
fstp
repz
push
ins
dec
pop
les
std
enter
dec
fisttp
rol
int3
add
adc
add
stos
add
outs
adc
jae
mov
or
mov
cmp
jbe
cwde
inc
xchg
test
xor
sub
xchg
inc
adc
jae
test
cs
pop
mov
outs
add
sub
mov
xchg
add
xchg
test
add
movs
mov
pop
imul
mov
inc
xor
into
cld
jae
xchg
cdq
mov
in
jne
pop
inc
jbe
fnstsw
xchg
inc
dec
paddw
and
mov
push
sub
xlat
xchg
jg
pop
mov
add
and
mov
xor
jmp
jne
mov
mov
loopne
out
add
dec
mov
(bad)
popa
mov
mov
fadd
imul
icebp
call
sti
dec
ror
push
and
aas
xchg
imul
lock
call
repnz
test
shr
stos
sbb
outs
xchg
sub
pop
push
out
inc
dec
test
mov
call
(bad)
ins
push
loopne
loope
stos
ins
push
push
in
dec
repz
sbb
(bad)
ins
dec
(bad)
ins
mov
cli
not
push
mov
push
pmaxub
and
jmp
dec
out
popf
xchg
push
in
mov
movs
dec
nop
xor
leave
call
push
adc
sbb
or
sub
mov
pop
sbb
mov
lods
mov
cmp
mov
xchg
scas
push
mov
and
aam
mov
adc
fcom
cmp
sbb
popa
pushf
xchg
(bad)
pushf
sub
jbe
mov
inc
pop
lds
push
pop
cmp
inc
or
inc
ja
or
das
xchg
pop
rcl
ins
int
pop
xchg
add
push
adc
or
cmp
add
imul
and
jg
int
fist
clc
int
pop
mov
jne
or
(bad)
movs
adc
adc
mov
inc
fucomp
pop
clc
daa
sti
in
fsub
mov
sar
xchg
jl
push
fwait
icebp
shl
in
jo
jb
int
or
lahf
xor
jbe
fisub
mov
dec
and
dec
xlat
mov
das
pop
ins
inc
push
mov
call
repz
mov
dec
shl
xchg
cmps
cmp
mov
iret
or
pushf
fistp
mov
les
or
jg
mov
iret
fyl2x
mov
stos
fst
(bad)
push
ficomp
jmp
mov
mov
pinsrw
pusha
sbb
pop
inc
fmul
mov
cmp
push
jecxz
pop
jmp
xchg
jg
add
inc
adc
lar
mov
add
inc
mov
lea
and
lock
mov
scas
out
test
mov
mov
jno
loop
ins
ins
sub
stos
cmp
xor
cld
data16
stc
fild
ja
das
cmps
shr
jno
cmp
jo
mov
jae
sub
push
mov
fs
dec
mov
fldenv
mov
push
sbb
push
sub
adc
fdivr
add
inc
and
mov
loope
or
enter
fcom
sbb
shl
in
sbb
test
mov
lahf
add
mov
(bad)
call
addr16
push
xchg
adc
cwde
ret
stos
mov
jl
jmp
pusha
repnz
les
loope
data16
rcr
stos
pusha
cli
sahf
pop
(bad)
sbb
fs
mov
sbb
or
or
sti
jo
add
add
stos
xor
pushf
mov
mov
ins
xor
or
pop
pushf
inc
cmp
xor
cmp
mov
cmp
xor
sbb
js
fild
jns
imul
out
mov
pop
push
popa
sbb
arpl
addr16
mov
xchg
rol
jmp
lods
mov
xor
mov
jmp
outs
int3
in
test
das
mov
jns
mov
in
hlt
add
fdiv
call
sub
mov
in
out
or
cmp
push
fbstp
outs
mov
rep
mov
sub
cdq
(bad)
jno
retf
cmp
xor
test
cmp
mov
scas
mov
xchg
fnsave
sbb
xchg
fwait
inc
out
xchg
mov
jp
sbb
inc
je
cmp
xchg
ins
ss
in
pmaddwd
repnz
cdq
sbb
xlat
xor
mov
jecxz
stc
jns
xchg
fcom
jmp
out
loope
daa
test
jmp
sub
sbb
fisub
pop
sti
stc
cdq
popa
cmp
lock
aas
stos
or
inc
mov
jg
inc
in
or
sub
stos
aam
ds
or
pop
gs
push
repnz
imul
mov
or
fadd
lahf
xchg
out
adc
loope
fldenv
xor
and
inc
mul
push
mov
icebp
add
and
adc
ret
and
cmp
or
dec
loop
cs
clc
loopne
adc
pushf
pop
inc
or
jmp
enter
lahf
test
lahf
fst
gs
xchg
and
lea
jl
push
mov
mov
jecxz
mov
jmp
retw
icebp
das
cmps
idiv
icebp
fwait
sub
add
sbb
loop
outs
dec
mov
or
cli
das
call
pop
xlat
xor
dec
xor
and
stos
sub
or
repz
ret
mov
fidiv
push
adc
pop
hlt
xchg
xlat
rol
or
les
pop
inc
or
gs
inc
push
xchg
xor
fisub
ror
inc
push
ja
or
inc
xchg
dec
sbb
call
push
inc
add
std
cmp
dec
hlt
push
mov
and
mov
in
(bad)
push
inc
lods
mov
or
and
cmc
cmp
fcom
stos
mov
(bad)
fistp
mov
icebp
test
xchg
or
leave
aas
cdq
popf
es
sbb
(bad)
lods
fstp
mov
daa
xlat
hlt
jmp
lahf
(bad)
cmp
pop
mov
je
loop
push
shl
test
popf
xor
clc
nop
pop
ins
or
sar
stos
mov
cwde
xor
popa
std
mov
mov
sub
imul
push
or
adc
aas
pop
rcr
nop
dec
outs
aam
ret
mov
out
je
jg
jge
and
or
xor
fsubr
out
add
or
mov
jle
lods
out
dec
xlat
sbb
dec
in
jnp
loope
mov
les
push
xchg
jae
scas
iret
xor
addr16
into
cmps
mov
pop
dec
in
retf
dec
adc
pop
out
jl
popa
mov
push
ret
jmp
jl
or
dec
pop
mov
gs
mov
xchg
ret
xchg
mov
jle
cld
fmul
scas
(bad)
mov
int3
mov
add
inc
ret
inc
sbb
loope
xchg
sub
js
sub
arpl
xchg
popf
jae
aaa
or
js
sbb
outs
lds
aas
dec
or
jmp
call
fcom
pop
add
hlt
xor
pop
lea
dec
test
jl
xchg
and
out
rcl
rcr
add
xchg
scas
pop
ret
sar
mov
inc
jmp
cli
(bad)
cwde
nop
call
dec
jnp
arpl
pop
mov
lahf
dec
push
inc
cmc
fadd
inc
fadd
mov
(bad)
jecxz
mov
xchg
adc
stc
popa
leave
adc
inc
adc
ds
xchg
or
sbb
jmp
lods
xchg
lods
jmp
and
inc
sub
ja
dec
mov
cmp
xchg
jnp
add
shl
pop
aaa
cmp
das
dec
aas
into
inc
mov
cmp
fnsave
sar
loopne
mov
sub
pop
ror
xchg
les
imul
jecxz
sbb
sub
dec
loopne
not
outs
add
inc
outs
cwde
pop
push
sbb
mov
movs
test
or
mov
and
rcl
pusha
jmp
cs
int
mov
shl
daa
fimul
(bad)
out
mov
pop
and
(bad)
dec
jge
mov
fucom
and
scas
ins
lods
pop
jecxz
pop
lds
shl
xor
enter
xchg
mov
int3
and
mov
clc
lods
mov
das
jg
push
mov
mov
dec
push
mov
ins
add
movaps
mov
outs
mov
mov
jle
in
mov
cmp
mov
push
adc
jne
mov
add
inc
cmps
xor
rcr
push
(bad)
xchg
mov
jbe
xor
je
ja
pusha
dec
popf
repnz
jl
jg
sub
cmp
fdivr
stos
rcr
pop
fistp
push
sbb
in
mov
xchg
mov
inc
rep
ret
int3
pop
(bad)
fisub
arpl
retf
mov
test
push
adc
mov
cmp
scas
cmp
fcomip
sbb
das
xor
in
div
repnz
lock
ret
sbb
add
icebp
pop
lds
inc
rol
adc
mov
neg
int3
rcr
popa
mov
push
jg
sbb
push
sahf
jle
and
inc
sbb
je
ds
push
jns
xchg
push
sbb
fidiv
bswap
int
xchg
call
mov
ud2
call
jp
cmp
mov
arpl
inc
adc
sbb
popf
sar
lods
sub
stos
adc
fsubr
test
jmp
sub
cli
pop
ror
aaa
ss
adc
dec
sbb
shl
or
jp
mov
mov
ds
xchg
lock
adc
cmp
push
xor
(bad)
movs
xchg
sub
and
inc
repnz
pushf
pushf
inc
sub
out
cdq
push
mov
iret
frstor
and
stc
out
dec
in
xor
adc
daa
aas
mov
mov
mov
(bad)
shr
(bad)
xchg
jmp
xor
sub
pop
jns
inc
sbb
lods
jne
add
aad
popf
sub
inc
jo
sub
cmps
ret
cwde
mov
int
iret
sub
hlt
dec
sub
scas
mov
cmp
inc
add
cs
gs
push
sbb
mov
add
ss
sbb
push
mov
ds
adc
cmp
dec
out
popf
xor
mov
pop
retf
mov
fsubr
cld
les
sbb
push
arpl
int
mov
stos
cmps
lds
sub
pop
push
pop
jno
int
sub
call
xor
dec
(bad)
and
or
aam
out
add
sub
xchg
mov
dec
jb
mov
cmp
lods
jg
sub
xor
test
mov
dec
lock
repnz
pushf
jns
ja
int3
push
test
inc
cmp
mov
mov
ins
jo
icebp
xor
cmp
mov
xchg
inc
xchg
xchg
cmp
cmps
pop
stc
inc
test
xor
or
dec
jle
hlt
pop
jge
dec
fsubr
jmp
dec
add
mov
xchg
sub
stc
lahf
pop
mov
jle
mov
adc
and
jge
dec
(bad)
rol
movs
adc
or
into
xor
or
mov
(bad)
xchg
(bad)
mov
cmps
mov
aad
(bad)
test
inc
jl
out
push
cmp
jo
outs
data16
jb
(bad)
push
cmps
in
sbb
out
xchg
out
fsubr
xor
outs
out
mov
mov
retf
aam
and
cmp
or
push
mov
aas
push
stc
mov
and
ss
jp
sub
or
jg
and
pop
cld
cmp
sub
xor
imul
gs
pop
leave
sub
rcr
xchg
jg
mov
imul
cmc
fistp
and
xor
dec
fdecstp
jle
mov
xchg
mov
or
push
mov
push
sar
and
jae
adc
imul
mov
call
pop
arpl
stos
or
xchg
stos
xor
push
jnp
mov
adc
fist
and
aas
(bad)
push
mov
add
imul
mov
or
cwde
dec
mov
mov
shl
jmp
(bad)
add
js
mov
or
enter
cld
pop
mov
dec
mov
les
loopne
mov
lea
(bad)
dec
bound
dec
push
cmp
adc
(bad)
inc
inc
cmps
cli
dec
jne
cmc
ror
sahf
movs
mov
fnsave
adc
inc
js
sub
jnp
mov
jnp
leave
push
jae
cmp
add
mov
jge
adc
les
add
xor
sub
inc
retf
xchg
jle
dec
dec
push
lods
pop
outs
push
cmp
pusha
jae
mov
push
movs
adc
js
mov
shl
std
cwde
mov
mov
fwait
lea
or
jmp
mov
and
pop
mov
lock
sbb
adc
dec
lahf
lahf
jg
out
add
add
pusha
push
jb
fld
aaa
push
out
lds
das
dec
xor
arpl
sub
push
stos
add
call
aas
clc
sub
inc
push
stos
lahf
pusha
dec
adc
popa
mov
inc
mov
lods
cmc
aas
xlat
imul
xchg
pop
lock
lahf
aas
in
mov
setb
daa
repz
jg
js
sbb
fmulp
std
mov
xlat
mov
mov
xor
out
mov
enter
imul
adc
jnp
loope
lahf
xor
ins
test
popf
mov
dec
outs
or
pop
pop
jg
or
enter
jle
ins
inc
fcomip
fidiv
sbb
ja
pushf
inc
into
adc
repz
outs
push
jae
arpl
pop
test
push
ins
movs
imul
test
mov
lea
mov
div
(bad)
dec
cmp
inc
xchg
mov
retf
xlat
repnz
(bad)
call
jg
sti
repnz
out
pop
sub
mov
inc
iret
mov
dec
idiv
and
push
adc
jb
in
and
int3
inc
scas
pop
ret
movs
mov
addr16
add
jmp
push
sub
arpl
call
in
jmp
in
sbb
or
retf
push
cmp
xor
fst
ja
xchg
pusha
pop
inc
in
fwait
sbb
mov
jle
jmp
cmp
scas
push
loopne
sub
adc
lods
ds
enter
addr16
jmp
jg
mov
mov
rcr
aaa
mov
in
sar
mov
mov
repnz
movs
test
sub
nop
int3
sbb
xchg
scas
or
test
bound
cmp
dec
xchg
jle
imul
mov
int
cmps
xchg
out
cmp
out
out
or
loope
cwde
fnstcw
add
test
push
sbb
pop
call
pop
xor
xchg
xor
repz
jecxz
ror
sti
fcomp
or
ret
jle
lods
inc
xchg
jne
inc
stos
pop
pushf
cmp
(bad)
jnp
dec
mov
mov
push
xchg
lods
pop
test
es
or
enter
lods
test
lods
popa
pop
xchg
stos
pop
jecxz
scas
fldcw
out
sub
out
jno
imul
jp
or
fwait
mul
jb
mov
mov
xor
cmps
int
sbb
mov
xchg
cmp
dec
cmc
mov
aad
addr16
out
cmps
mov
xlat
push
std
std
(bad)
mov
jmp
xor
sbb
std
call
in
call
mov
or
sub
mov
cwde
(bad)
ss
push
xor
movs
ret
sti
cdq
test
lods
adc
dec
inc
icebp
popa
add
push
xchg
ins
movs
sub
lods
pop
add
add
dec
out
mov
push
hlt
sahf
mov
fadd
cmp
in
cmp
clc
add
sbb
lds
lods
fld
std
jl
jmp
or
fwait
outs
repnz
(bad)
cld
and
(bad)
out
sub
mov
sub
lea
pop
mov
jne
outs
inc
mov
mov
fs
xchg
dec
test
lahf
pop
push
inc
jns
ja
popa
mov
(bad)
fucomi
inc
inc
dec
pop
or
ror
and
int3
stc
mov
adc
stos
sbb
scas
and
and
test
movs
hlt
loopne
cmp
jmp
lods
bound
std
or
pushf
push
jle
icebp
pop
inc
or
jae
imul
stos
or
push
sbb
mov
mov
mov
pop
inc
mov
loope
(bad)
mov
xchg
imul
iret
pop
jmp
xor
lock
retf
and
lock
inc
in
jbe
cld
xchg
aam
or
fcomp
mov
mov
inc
xchg
imul
pusha
data16
jae
inc
mov
xchg
shl
xchg
test
scas
int
jl
sub
pop
scas
sub
dec
mov
scas
adc
mov
aas
sbb
retf
push
pop
(bad)
lods
or
cli
fmul
ins
(bad)
jns
shl
ret
gs
sub
icebp
jno
sahf
aaa
sub
push
ins
adc
fistp
sbb
arpl
clc
loop
push
sbb
mov
data16
dec
mov
jecxz
cmp
mov
push
pop
ficom
push
pop
sub
dec
adc
arpl
or
cmp
add
lods
xor
nop
jle
mov
out
pop
les
mov
xor
xor
push
inc
test
cmp
mov
(bad)
cmc
jecxz
cwde
jbe
icebp
sub
outs
mov
ins
fstp
sub
repnz
jmp
and
mov
jp
div
adc
mov
fisub
(bad)
sbb
ret
lahf
and
fucomip
push
push
aaa
push
push
pop
fnstsw
cmp
fnstenv
xchg
cmp
xor
add
sti
mov
jp
fdivr
test
dec
pop
xchg
mov
adc
repz
or
test
push
mov
cmp
aam
fdiv
fsubr
rol
inc
add
stos
mov
xor
sahf
push
arpl
fild
mov
std
xor
test
push
add
dec
(bad)
in
pop
jmp
out
jl
xchg
jb
xor
stc
jo
dec
fisttp
pop
or
jmp
add
out
add
dec
(bad)
mov
dec
mov
jnp
add
lock
sbb
add
add
loopne
push
int3
outs
bound
sub
retf
add
(bad)
call
nop
daa
jno
out
and
xchg
adc
sahf
and
retf
sti
inc
int3
cmp
xchg
call
pop
mov
(bad)
neg
imul
inc
inc
fld
jnp
aaa
cmps
ud2
dec
jne
mov
push
xlat
xor
adc
mov
jge
dec
lahf
imul
or
aas
xchg
out
cmp
push
push
fstp
mov
icebp
in
outs
mov
or
xor
xchg
adc
jg
lock
cmp
aaa
jae
or
sbb
test
mov
imul
stos
push
cli
mov
xchg
sub
jno
inc
imul
arpl
mov
and
xchg
rcr
inc
adc
mov
cld
ret
repz
jecxz
dec
xchg
popa
jmp
jle
xchg
sub
cmp
push
mov
mov
out
fs
loopne
xchg
cmp
pushf
sub
add
xor
std
stos
cmp
inc
or
out
jmp
and
jmp
ret
sub
xor
jl
push
adc
lods
sbb
popa
jbe
daa
jecxz
fnstsw
xchg
dec
cld
aas
pop
ret
ja
pushf
test
lahf
and
inc
jg
adc
inc
enter
xlat
xchg
aaa
mov
retf
scas
xor
dec
inc
(bad)
xchg
inc
sar
repnz
(bad)
pushf
xor
mov
jmp
cmp
sbb
ret
mov
pop
test
dec
push
sub
stos
jge
test
cmp
dec
sub
xor
js
outs
jo
cmps
sbb
out
(bad)
pop
jmp
(bad)
jl
lods
pop
sub
test
(bad)
cmp
mov
ja
push
enter
addr16
addr16
repz
lods
rcl
out
mov
popa
sub
sahf
(bad)
cmp
xchg
in
es
xchg
xor
int3
mov
(bad)
fwait
adc
call
push
mov
xchg
sti
cmp
xlat
bound
xor
jg
scas
sub
bound
(bad)
xchg
xchg
or
loop
push
dec
adc
js
push
or
rol
cli
and
adc
mov
sub
or
sub
xor
outs
mov
sar
inc
retf
mov
ds
jle
dec
aad
lahf
push
in
pusha
xchg
pop
adc
jne
lds
outs
push
mov
arpl
pushf
sbb
hlt
xor
ret
ret
retf
ins
push
div
sbb
jl
cmp
cmp
and
outs
xlat
div
mov
hlt
push
cmp
rcr
(bad)
fcomp
push
sub
cs
dec
stos
mov
mov
add
sub
test
or
stc
(bad)
call
xlat
pop
imul
sbb
loopne
outs
fwait
jne
sahf
or
ja
rcl
dec
call
push
jp
pop
shl
nop
mov
imul
mov
aas
xchg
mov
ins
jmp
lods
in
gs
pop
sub
std
xchg
outs
cmp
stos
fadd
pop
fild
icebp
bound
push
ret
mov
mov
pop
or
xchg
mov
aas
dec
in
test
out
loop
sbb
repnz
sti
sub
xor
pop
and
mov
call
xchg
out
(bad)
js
jl
push
sub
push
nop
popa
mov
mov
sub
mov
adc
ins
jnp
cwde
mov
repz
out
pop
ret
cs
push
(bad)
icebp
sbb
pop
push
xlat
xor
gs
dec
mov
sbb
nop
ins
pop
mov
ret
push
int
hlt
call
inc
pusha
mov
cwde
mov
call
and
fsubr
xor
fistp
repz
imul
adc
fsubr
ror
mov
mov
jecxz
inc
movs
repz
xchg
xchg
adc
dec
sub
mov
inc
rcl
outs
mov
or
into
adc
movs
jecxz
jmp
popa
icebp
pop
push
adc
test
dec
fsub
adc
adc
lds
adc
and
div
xchg
daa
ror
inc
fnstcw
hlt
mov
stos
ds
xchg
es
pop
lods
mov
pop
movs
out
cmp
push
cdq
pushf
pop
rcl
jle
dec
jne
jnp
leave
das
ds
xor
xor
mov
mov
cmc
leave
aam
mov
sub
addr16
test
dec
dec
addr16
push
ja
cdq
(bad)
imul
jmp
mov
dec
pusha
add
cmps
test
jbe
sub
sub
shr
cmp
ss
fbstp
pop
loope
xor
pop
sbb
ficomp
pop
vandpd
lock
hlt
out
jg
mov
mov
fs
jae
(bad)
jb
cdq
int3
ins
mov
adc
sbb
retf
sub
mov
es
fsub
mov
sub
les
inc
or
sbb
dec
(bad)
adc
mov
stos
dec
mov
es
aad
nop
fcom
je
xchg
push
lods
xchg
sar
xchg
pop
and
cs
leave
jmp
sbb
jecxz
ja
add
mov
outs
xchg
dec
pop
dec
int3
(bad)
lds
pusha
xor
fldcw
imul
mov
icebp
adc
cmp
xchg
dec
repz
dec
pop
and
icebp
pop
xor
fcomp
xchg
pop
push
shl
add
leave
jbe
pop
xchg
mov
jo
call
lahf
cdq
icebp
bnd
inc
add
std
imul
enter
xor
and
popa
adc
leave
imul
stc
(bad)
jmp
daa
fdivr
mov
jmp
adc
mov
scas
daa
into
sub
sbb
pop
jae
and
out
aas
mov
aas
in
jg
pop
es
mov
lea
cwde
xor
retf
push
pop
sbb
sbb
xor
push
stc
pusha
xor
retf
inc
cmp
cs
inc
and
lods
xchg
mov
jg
cli
ins
push
mov
out
sbb
xor
mov
(bad)
or
aam
fistp
imul
imul
push
out
hlt
fsubr
dec
rol
xor
enter
mov
pop
jmp
mov
xchg
xor
dec
jno
or
ja
xor
push
cmp
sbb
xchg
mov
jmp
jne
mov
inc
add
shl
aas
mov
and
and
inc
and
xchg
pop
mov
cmp
hlt
xchg
jmp
sub
xchg
(bad)
pop
in
mov
mov
das
push
adc
mov
push
xor
xabort
jne
sub
and
and
cmp
jo
push
(bad)
ds
or
in
popa
mov
dec
cli
aas
mov
les
jmp
aaa
out
and
or
and
push
sbb
fnstcw
cmp
xchg
push
lds
adc
sar
jo
lahf
retf
jo
xor
pop
pop
xor
cmp
call
sar
clc
shr
dec
push
sbb
(bad)
adc
cmp
xchg
call
dec
add
das
add
add
in
jae
mov
sbb
jge
aad
adc
pop
adc
pop
lea
mov
(bad)
cmp
sub
mov
into
lds
aam
(bad)
cmp
ds
leave
push
jecxz
mov
pusha
(bad)
xor
adc
int
bound
test
int
pop
ins
xchg
adc
mov
cmp
mov
int
cdq
retf
loopne
push
push
jo
adc
mov
pusha
pop
xchg
test
cmp
movs
sti
jne
adc
aad
xchg
sbb
pop
xor
cmp
out
dec
cld
inc
mov
dec
push
(bad)
mov
mov
mov
in
inc
xchg
test
push
sub
pop
cmc
push
aaa
mov
rcr
ins
hlt
push
push
and
(bad)
jbe
loope
jmp
arpl
hlt
addr16
aas
aam
inc
lahf
in
aam
aaa
retf
clc
fst
jg
scas
daa
bound
cmp
and
dec
dec
out
test
outs
xchg
jle
in
stos
mov
sbb
dec
pop
retf
stos
adc
push
mov
inc
pop
add
adc
les
sbb
sub
shr
pop
pop
xchg
into
mov
test
xchg
fild
mov
mov
pop
dec
cmp
sub
push
(bad)
adc
shr
pusha
lods
jecxz
data16
sub
retf
adc
push
mov
inc
in
stos
(bad)
enter
loop
imul
out
jmp
outs
stos
leave
and
sub
repnz
jle
pop
xor
mov
jmp
add
ret
sar
mov
in
adc
in
lahf
int
(bad)
test
jmp
add
dec
aas
dec
pop
mov
push
mov
lds
cmp
dec
xlat
adc
inc
call
sub
mov
jns
loope
jge
mov
neg
iret
inc
retf
dec
inc
fsubr
push
inc
scas
sahf
bound
jp
or
mov
in
inc
push
movs
les
inc
jmp
popf
adc
sbb
mov
retf
(bad)
or
xlat
adc
push
popa
fidiv
jmp
xchg
or
pop
mov
push
aad
dec
shl
test
mov
pop
jnp
jbe
mov
dec
mov
jne
popf
jo
xchg
xor
pop
icebp
out
push
popf
xor
xchg
hlt
pop
dec
fs
cdq
jecxz
or
cmp
xor
dec
and
push
sti
retf
ret
test
sub
les
in
dec
mov
icebp
push
repnz
push
pushf
jb
dec
sub
mov
mov
mov
test
cmps
inc
mov
inc
adc
pop
mov
pop
and
xor
fwait
bound
cmp
xchg
lahf
jne
push
popa
jo
mov
(bad)
loopne
lock
sbb
es
or
mov
inc
pop
xchg
sbb
mov
cwde
test
fs
jl
and
lods
mov
rcl
aad
in
sub
xor
fcomp
stos
or
mov
mov
pop
cdq
jae
scas
ror
dec
lahf
movs
adc
sub
fmul
inc
mov
mov
repnz
retf
mov
xor
pop
and
dec
cli
xlat
pop
(bad)
or
pushf
(bad)
ins
push
out
add
lods
xchg
sub
dec
inc
hlt
inc
sbb
inc
mov
xor
movs
test
movs
int3
sbb
ins
movs
jmp
push
out
pop
fmul
lds
push
mov
call
jecxz
sub
mov
retf
mov
shl
dec
mov
add
pop
cs
sbb
jno
cwde
mov
retf
jb
mov
xchg
xchg
cmp
dec
xchg
out
nop
dec
popa
(bad)
mov
test
dec
mov
xchg
inc
imul
sti
aam
pop
rcr
outs
lods
inc
das
scas
add
pushf
stc
fs
sub
ja
mov
push
mov
add
xchg
jne
jae
mov
mov
mov
xor
aaa
xchg
pop
fisttp
jne
and
mov
xor
jmp
jno
and
pop
into
popa
xchg
in
jle
aaa
sahf
rcl
in
shl
adc
(bad)
jns
pop
enter
pop
in
mov
(bad)
mov
fdivr
jp
retf
inc
scas
inc
(bad)
outs
xchg
cmp
dec
inc
jne
fistp
mov
test
stos
lock
loopne
jl
les
dec
mov
mov
sbb
push
and
retf
dec
pop
pop
adc
in
cvtdq2ps
or
shl
jbe
scas
loop
xchg
lea
jge
call
push
loope
cwde
push
adc
shr
sub
mov
sbb
je
rol
cmp
test
gs
xor
adc
cdq
shr
fist
mov
mov
retf
jne
mov
mov
jmp
pop
inc
add
dec
stos
xor
(bad)
repnz
rol
loope
push
lea
mov
push
mov
into
add
mov
jbe
sti
inc
sub
mov
push
test
push
test
cmp
mov
fs
add
and
jne
iret
mov
mov
popa
mov
or
push
mov
fmul
sub
sub
fcomp
gs
and
adc
test
cwde
aas
add
in
xchg
daa
push
dec
cmp
sahf
popa
stc
daa
arpl
loop
add
and
cmps
test
xor
loop
clc
fstp
stos
shr
jno
sub
sub
push
sahf
(bad)
(bad)
push
data16
push
jne
lock
loopne
dec
push
sbb
and
mov
xchg
clc
push
sbb
xchg
adc
pusha
int3
fist
mov
jmp
sub
sti
mov
sub
xor
rcr
out
call
fwait
sub
add
sbb
mov
outs
mov
outs
sar
pop
inc
adc
aad
cmps
cmc
adc
mov
add
and
cmp
add
pop
les
cli
or
int3
push
fld
mov
push
mov
out
add
(bad)
dec
push
cwde
scas
pop
pusha
retf
or
je
dec
cmova
test
push
jl
jmp
retf
mov
test
push
shl
or
adc
sbb
mov
xchg
pop
xchg
shr
push
xchg
jae
aad
inc
inc
xchg
adc
adc
mov
in
aas
and
lods
stos
hlt
xor
push
jmp
movs
xchg
repnz
jb
int3
xchg
add
cli
icebp
push
adc
mov
inc
ins
ja
icebp
cmc
test
dec
mov
mul
shr
loop
aad
int3
loop
mov
mov
ficomp
push
pop
jg
dec
call
hlt
mov
jne
sbb
(bad)
dec
jp
or
arpl
sbb
rcl
mov
test
mov
mov
mov
out
push
or
test
dec
scas
xor
sub
mov
cmp
cmp
fisubr
sbb
and
dec
shl
fild
test
mov
xor
jno
pusha
scas
fnstenv
dec
jmp
cmp
arpl
add
dec
mov
dec
in
push
(bad)
xchg
out
push
xchg
adc
popa
call
xchg
repnz
(bad)
jns
sbb
shl
xor
pop
js
es
(bad)
fstp
loop
xor
adc
std
(bad)
test
cmps
xor
pop
sub
mov
daa
test
push
retf
fiadd
add
pop
sub
mov
and
fs
xchg
add
movs
xlat
dec
sbb
icebp
movs
call
scas
sar
leave
inc
sbb
mov
xor
jg
outs
add
aaa
in
dec
test
cmp
stos
jns
xor
repz
mov
cmp
mov
pop
mov
mov
mov
mov
test
inc
fdivr
push
test
popf
cli
sub
push
inc
lods
push
adc
push
(bad)
js
lods
push
lods
mov
movs
dec
pop
out
in
mov
movs
stc
leave
jle
xchg
cs
sbb
mov
push
jno
repnz
ficomp
enter
cwde
mov
bound
arpl
repnz
fs
jae
(bad)
in
mov
ins
mov
xlat
sub
mov
(bad)
sbb
adc
ins
sbb
adc
xchg
ins
xor
push
fild
xchg
xchg
push
imul
xor
(bad)
fstp
popa
or
dec
jmp
mov
mov
and
xor
add
mov
lods
inc
push
pop
(bad)
jne
loope
cmp
fcomp
in
xchg
mov
push
pop
mov
jns
pop
xor
xchg
shr
cli
xor
ror
(bad)
icebp
mov
dec
test
rol
js
jo
enter
adc
loop
inc
and
ins
xchg
jl
push
(bad)
push
div
inc
cld
(bad)
fdiv
add
mov
ins
xchg
and
jmp
aas
in
sub
sbb
or
jmp
(bad)
bound
or
mov
push
mov
(bad)
sbb
movs
cld
pop
mov
fidiv
jae
loope
stc
mov
dec
ret
pop
sub
push
iret
inc
(bad)
jns
inc
add
pusha
test
outs
lods
loopne
inc
stos
ja
sti
xchg
fidivr
fcmovnu
push
sbb
out
es
add
adc
push
rcl
scas
fist
mov
cmp
inc
gs
clc
adc
out
push
or
or
cld
movs
ss
nop
call
jns
mov
sub
mov
loop
sbb
out
js
xor
and
ins
cli
scas
sti
and
jp
ja
adc
adc
or
add
std
imul
and
and
mov
mov
in
fwait
ret
ins
fisubr
test
ds
cmps
mov
lds
arpl
and
mov
jg
ja
movs
ficom
fs
leave
aaa
repnz
jmp
fcom
dec
sti
jmp
add
or
(bad)
movd
xchg
cmp
mov
inc
xor
aas
xor
(bad)
test
sahf
dec
xor
(bad)
xlat
in
push
lods
push
repnz
dec
and
push
push
icebp
dec
loop
sbb
out
icebp
xor
test
stc
xor
movs
cdq
mov
add
or
lahf
adc
sub
pop
in
fstp
cmps
dec
add
push
push
inc
adc
pop
push
mov
dec
pop
ins
mov
ins
out
push
xchg
or
out
push
or
fwait
push
dec
xlat
popf
mov
aaa
or
push
push
ins
aas
data16
shl
inc
sar
jle
shr
rol
mov
push
inc
cmp
sub
add
jbe
dec
repz
daa
adc
leave
pop
sbb
ret
pop
cmc
inc
test
sub
dec
pop
dec
(bad)
daa
xor
leave
xor
mov
popf
pop
mov
jae
lods
adc
xor
shl
xchg
dec
inc
inc
clc
or
(bad)
in
je
ror
test
dec
jmp
dec
adc
test
rcl
ds
ret
push
out
stos
mov
mov
mov
mov
xchg
inc
mov
push
mov
cmp
sti
adc
loope
push
xchg
xor
jne
xchg
sub
sub
out
int3
jmp
cmps
jbe
clc
dec
pusha
add
add
dec
scas
in
dec
test
push
sub
jge
mov
dec
inc
mov
(bad)
fs
sbb
jg
outs
dec
fld
sbb
jge
loope
ins
pop
stos
dec
in
(bad)
push
dec
cmp
mov
std
loop
xchg
add
cmp
adc
cli
mov
or
aas
cmp
lods
sub
xor
call
in
jno
int
in
call
in
cmp
pop
sub
or
cmp
jmp
mov
(bad)
push
loop
pushf
inc
pusha
jno
fdivr
pop
out
mov
loope
outs
movs
out
jge
inc
adc
inc
xor
inc
mov
clc
lds
int
neg
mov
adc
xor
sbb
gs
in
jns
add
sub
adc
in
pop
cwde
xlat
mov
pop
push
call
jmp
ins
iret
les
gs
inc
gs
stos
jmp
push
mov
mov
pop
xor
cmp
test
ret
xchg
fstp
test
in
or
sub
lods
cmps
xchg
(bad)
pop
outs
dec
fst
movs
sbb
mov
inc
aad
jle
inc
mov
cmp
ins
xchg
lods
cmps
inc
fsubr
mov
push
retf
sar
add
or
xchg
enter
sub
cli
and
fnclex
and
jge
sub
sub
es
in
mov
add
dec
inc
mov
push
jbe
sub
or
std
into
out
je
pop
push
push
dec
or
mov
retf
stos
mov
jg
repnz
call
cld
jmp
cmps
dec
addr16
fisttp
shl
xchg
cmps
push
ins
movs
imul
xchg
test
cmc
call
arpl
aas
sahf
push
nop
sub
mov
or
adc
test
repz
rcl
outs
stos
fisttp
mov
push
in
add
pop
sub
sahf
sbb
test
dec
xor
sub
cmp
out
fst
jne
aas
in
xchg
jmp
clc
call
inc
popf
pushf
aas
adc
push
add
imul
lea
push
inc
sbb
jle
mov
fld
and
push
adc
dec
into
and
mov
pop
adc
gs
ja
push
std
dec
push
or
jmp
test
mov
rcr
pop
jno
std
and
test
icebp
out
ins
loope
xor
inc
retf
cmp
rcr
mov
out
add
cld
adc
mov
cli
sub
not
or
pop
shl
loop
add
inc
fidivr
sbb
xor
cmps
js
popf
lods
(bad)
xchg
pop
in
mov
(bad)
pop
loope
jae
lahf
je
cmps
mov
mov
jo
xor
xchg
popa
std
inc
(bad)
ficomp
push
mov
icebp
aaa
lds
sbb
jmp
push
cmps
mov
push
jle
aam
xchg
in
call
ret
lahf
jmp
popa
mov
ins
push
mov
mov
clc
jns
daa
xchg
pop
cmc
xor
mov
jmp
xchg
in
push
or
mov
call
retf
call
jns
push
jl
jnp
stc
mov
adc
leave
and
lock
in
sti
push
mov
xchg
shr
mov
lea
sbb
addr16
(bad)
fnstcw
test
adc
lahf
cmp
push
call
push
cld
jl
sub
and
and
ficomp
jmp
call
push
ss
cmp
jmp
jmp
movs
cmps
cmps
and
dec
scas
cmc
rol
sahf
mov
mov
idiv
cmp
xor
mov
mov
out
push
fwait
xchg
jl
jo
add
add
into
mov
pop
mov
mov
cmps
jno
test
sub
jecxz
pop
loope
push
adc
mov
pop
rol
rcl
stos
mov
pop
xor
adc
mov
fcomp
(bad)
mov
jecxz
outs
lds
jnp
arpl
fist
jns
mov
jmp
jmp
scas
jno
aad
mov
aas
rol
ins
sub
xor
cmp
test
mov
jae
jnp
jne
(bad)
xchg
mov
mov
pushf
mov
add
test
xor
lods
aas
mov
mov
cmp
or
adc
pop
lods
push
aad
cs
outs
sub
imul
sar
mov
sar
test
lods
enter
sar
xchg
lahf
fst
test
pop
cli
mov
xor
pop
mov
mov
cmp
sahf
mov
enter
sbb
(bad)
loopne
fcomip
inc
pop
xchg
imul
pop
jbe
mov
push
xor
pop
mov
jp
xchg
ja
dec
lds
pop
push
and
adc
dec
dec
test
call
stos
aas
and
imul
pop
popf
test
push
lahf
add
cmp
cmp
loopne
dec
mov
int
push
in
sahf
push
cmp
jns
jne
fcomp
push
not
sub
test
arpl
aam
sbb
push
loop
mov
outs
jge
dec
enter
fisub
pop
cwde
mov
ret
fdiv
add
pop
mov
out
(bad)
jae
jbe
dec
aaa
daa
sti
or
(bad)
mov
pop
data16
sti
xchg
mov
repnz
sbb
(bad)
call
lds
push
ins
shr
xor
mov
fsub
adc
xor
fstp
test
pushf
xabort
psubq
mov
push
jae
arpl
aas
outs
jne
jg
(bad)
cmp
push
mov
add
mov
mov
and
nop
jns
pop
pop
push
cmp
sbb
push
loop
add
not
cmp
push
int
xchg
stos
jb
aaa
int3
mov
adc
add
inc
bound
and
mov
int3
inc
sbb
and
cmp
into
mov
mov
sar
sub
add
mov
inc
pushf
(bad)
ror
fsub
dec
jbe
nop
inc
leave
fisttp
sbb
in
arpl
rol
sub
pop
pop
(bad)
pop
out
dec
mov
popf
sub
stos
retf
mov
popf
repz
jo
and
test
loope
mov
push
pop
enter
jae
or
sar
xchg
sbb
fstp
leave
xlat
lods
in
mov
mov
adc
mov
push
xor
pop
jmp
dec
(bad)
sti
cmps
mov
sub
inc
loope
les
mov
popa
mov
sub
sub
mov
lds
test
int
lds
shl
xchg
repnz
fiadd
sub
add
dec
(bad)
ja
add
pop
mov
int
jo
push
dec
jmp
outs
sub
aaa
test
setns
mov
pop
fisubr
or
aaa
fnsave
js
mov
lods
xor
in
mov
jns
jl
(bad)
fs
(bad)
enter
dec
lock
or
outs
fbstp
out
add
cmp
mov
push
jns
call
out
pop
jge
mov
inc
xor
(bad)
outs
shl
lahf
cmovne
mov
into
retf
fsub
add
mov
pop
add
enter
fidiv
mov
pop
mov
stos
adc
pop
(bad)
(bad)
mov
(bad)
fpatan
jmp
cmp
inc
or
and
xor
add
shr
sub
pop
xchg
push
mov
shl
inc
add
test
outs
and
fwait
(bad)
fwait
push
xor
std
mov
popa
pop
adc
fwait
push
or
dec
jo
xor
shl
iret
add
xchg
inc
cmp
sbb
pop
inc
fisttp
test
mov
sbb
adc
push
pop
lds
xchg
or
inc
jle
test
push
adc
mov
jmp
shr
or
sub
repnz
xor
stc
mov
in
mov
jp
mov
sbb
add
or
mov
inc
jno
jb
sub
jmp
repnz
push
inc
mov
push
(bad)
stc
jo
jbe
sub
cmp
ja
add
lods
shl
mov
jo
aaa
aaa
xchg
add
xchg
cdq
push
dec
push
jae
adc
div
xor
ret
cs
jnp
mov
or
cmp
pop
cmp
mov
push
cmps
cli
int3
shr
(bad)
fnstsw
test
ds
enter
dec
xchg
imul
(bad)
stos
push
mov
xchg
cmps
jmp
dec
add
inc
mov
in
push
mov
hlt
stos
mov
ror
dec
cld
int3
cdq
add
sbb
inc
enter
js
adc
inc
add
dec
std
mov
pusha
mov
pop
aam
mov
ja
icebp
cmp
xor
jmp
mov
(bad)
sub
mov
xlat
jg
push
add
sub
mov
inc
lahf
movs
xor
sub
or
mov
push
ja
jp
xchg
jl
cs
or
fsub
and
push
cmps
jg
test
or
(bad)
pushf
popa
aaa
mov
mov
ja
enter
add
outs
mov
popa
mov
js
lock
data16
js
pop
pop
pop
retf
sub
push
mov
dec
cmps
aas
add
mov
adc
or
dec
fcomp
adc
les
mov
pop
push
mov
pop
mov
xor
lock
lahf
loopne
lea
inc
ret
mov
sbb
(bad)
test
xchg
mov
ret
call
sbb
(bad)
fsincos
retf
inc
jo
jg
dec
cli
jmp
or
arpl
hlt
fdivr
in
movs
mov
push
shl
adc
sub
pop
jo
jmp
call
(bad)
loopne
repz
fmul
int3
xlat
movs
dec
ins
test
cmps
dec
push
jae
stos
jae
add
jno
ins
js
ret
(bad)
xor
mov
sti
data16
xchg
ret
test
mov
lds
dec
repnz
jnp
ret
xlat
ins
and
mov
ja
mov
adc
inc
addr16
jg
fwait
(bad)
out
ret
sub
push
fnstsw
mov
ret
ret
ss
jge
jp
jmp
daa
dec
fwait
xor
std
ss
and
adc
adc
cmp
addr16
mov
pop
inc
int
lds
xor
mov
retf
add
mov
mov
xchg
jne
es
(bad)
loopne
movs
std
cmp
enter
jl
or
jl
inc
lods
ret
sbb
xchg
cwde
lock
pushf
bound
or
add
fwait
and
mov
sbb
aam
test
in
mov
or
inc
inc
test
cmps
push
shr
sbb
aas
fimul
repz
sub
inc
push
dec
push
call
xchg
in
shl
cmp
mov
mov
nop
(bad)
mov
cmp
outs
fisttp
cwde
jbe
ja
adc
and
arpl
bnd
sbb
arpl
das
dec
or
xchg
jne
repz
cmps
retf
inc
pop
iret
adc
xchg
call
fs
clc
cmovbe
jb
cdq
inc
adc
test
jno
mov
jge
xor
rcr
dec
inc
or
and
(bad)
out
out
(bad)
xlat
in
addr16
test
call
dec
and
ret
das
xchg
stc
cmps
nop
jns
sub
adc
inc
ror
and
mov
lods
pop
cmps
imul
xor
lock
sbb
jae
out
pop
or
outs
outs
bndldx
jb
(bad)
(bad)
push
adc
js
mov
or
inc
push
shl
int
lds
jge
mov
es
dec
cmps
neg
out
mov
retf
push
push
popf
xchg
mov
cmp
push
mov
jmp
xchg
mov
(bad)
push
mov
inc
lock
retf
fst
jae
xchg
cmp
movs
push
xchg
cmp
and
dec
adc
outs
xor
mov
cmp
movs
fcmovnbe
xor
jne
mov
gs
xchg
xor
les
cli
mov
cmp
movs
push
mov
xchg
mov
(bad)
fsub
or
push
mov
daa
outs
push
pop
jmp
loope
xchg
sub
cmp
adc
pusha
mov
popf
adc
dec
cld
dec
xor
cld
ds
xchg
retf
push
mov
push
outs
cli
ins
mov
add
mov
jnp
jne
adc
push
push
pushf
push
fs
pop
dec
sbb
hlt
jmp
mul
shl
adc
dec
xor
or
test
dec
iret
push
xchg
ins
cwde
stos
fidivr
or
push
loope
and
mov
add
icebp
lds
mov
jno
in
add
idiv
inc
enter
or
jae
lahf
push
add
(bad)
add
sbb
inc
push
loop
shl
scas
shl
push
rcr
jmp
xor
cli
sbb
fs
xor
stc
lds
add
xchg
stc
inc
nop
in
aaa
mov
scas
lock
mov
rcl
jne
jg
cmp
pushf
out
in
pushf
fs
lods
pop
cdq
dec
mov
jae
push
cmp
lods
test
push
fidiv
push
fwait
add
(bad)
push
jo
cmp
or
dec
xor
jmp
loope
popf
pop
push
push
mov
push
sbb
mov
sub
push
cmp
dec
mov
arpl
in
add
test
sbb
mov
outs
push
mov
or
xchg
dec
ja
jae
push
add
or
fdiv
sub
pop
xor
imul
dec
inc
pop
cmc
add
or
jne
add
jb
xor
loopne
cmc
cdq
jbe
retf
mov
mov
jle
cmp
adc
jle
jo
pop
pop
popfw
xchg
jl
inc
and
fcom
mov
loop
adc
add
popf
mov
frstor
jmp
(bad)
cli
arpl
add
mov
and
cmps
xchg
adc
call
push
dec
out
aaa
pop
ret
mov
adc
shl
mov
inc
les
and
idiv
retf
shr
ret
(bad)
das
movs
std
and
and
mov
ret
test
mov
lods
cli
movs
cwde
sub
shl
and
aam
fcom
jg
xchg
mov
rol
lods
(bad)
lods
aam
mov
inc
dec
sahf
nop
jecxz
or
sti
cmc
cwde
iret
pusha
je
mov
sbb
iret
or
outs
aaa
mov
cmps
jae
push
in
sbb
and
rcl
xchg
fist
iret
pop
movs
and
jle
je
ins
(bad)
fcmovu
aaa
rcr
mov
mov
xchg
pop
sub
add
mov
mov
out
mov
pop
jae
fs
push
ret
jae
cmps
rol
cmc
inc
sub
dec
pop
ins
aaa
and
mov
xchg
ins
mov
mov
add
xchg
adc
stos
inc
cmc
leave
pop
(bad)
fsub
mov
jge
cmp
push
lods
lahf
out
es
repz
mov
jbe
sub
xor
outs
xchg
lahf
jnp
cmp
mov
jae
retf
lods
sub
std
scas
mov
ins
xor
shl
pop
jnp
aam
rol
sbb
push
ins
inc
int3
into
pusha
ins
sti
(bad)
sub
cmc
cmp
xchg
xchg
xor
inc
add
adc
or
cmps
pop
enter
retf
jmp
push
(bad)
xor
outs
sub
cmp
mov
or
(bad)
mov
(bad)
push
inc
fiadd
rcl
inc
pop
adc
call
xor
pop
out
test
or
mov
rol
stos
movs
xor
jbe
mov
mov
fidiv
jmp
dec
in
fwait
cmp
push
out
sbb
outs
out
pop
fcomip
jae
mov
mov
fwait
xlat
lods
retf
adc
inc
aad
push
(bad)
jg
rcl
mov
cmp
hlt
pushf
sub
add
into
(bad)
dec
dec
imul
je
(bad)
out
xchg
dec
je
repnz
les
mov
xor
repz
mov
jbe
mov
fiadd
inc
push
movs
jmp
inc
gs
mov
(bad)
jmp
xchg
pop
test
fldenv
sti
push
int3
sahf
cmp
in
(bad)
retf
fwait
cmp
int3
cld
fnstenv
stos
adc
ret
cmp
inc
imul
sbb
outs
or
lahf
cmps
sub
jl
cdq
ret
pushf
jmp
pop
push
sbb
cmps
adc
(bad)
push
jbe
fnsave
imul
cmp
dec
mov
ja
inc
push
enter
sub
cld
xor
cmps
(bad)
pop
push
retf
and
bound
out
dec
scas
pusha
cmp
addr16
rcl
lods
xor
mov
push
pop
dec
sub
or
inc
sbb
je
xchg
adc
retf
fcmovnbe
out
dec
add
push
push
lods
test
stos
push
and
mov
sahf
xor
xlat
inc
adc
leave
loope
pop
cs
xor
mov
pop
jle
pop
push
mov
xchg
in
pop
iret
mov
retf
enter
stos
add
mov
lods
xchg
xor
mov
sub
push
cmp
aas
adc
ja
ins
icebp
int3
mov
pop
call
js
daa
repz
mov
addr16
(bad)
stos
xor
xor
in
push
jns
adc
cmp
mov
jno
or
fnstenv
mov
mov
inc
test
daa
test
dec
mov
stc
scas
mov
jno
sbb
test
or
xchg
imul
enter
jmp
xor
inc
out
mov
lods
push
retf
imul
sub
xor
pop
pop
test
add
push
or
jg
gs
add
dec
fdivr
cmps
mov
repz
(bad)
int3
push
push
or
add
add
int
push
in
xchg
add
xchg
gs
aas
adc
daa
aas
push
push
jmp
out
mov
sub
sbb
mov
gs
popa
pop
popa
aad
in
push
repz
call
cmp
push
mov
mov
out
(bad)
mov
adc
push
sub
sbb
cmp
cmp
sbb
dec
gs
popf
sub
mov
fmul
in
call
(bad)
mov
lock
xor
push
rcr
sbb
test
mov
sar
push
repz
mov
leave
retf
adc
fst
jnp
cmp
hlt
into
mov
pop
adc
cmp
mov
xor
call
mov
fs
push
pushf
jmp
mul
imul
test
mov
int
ds
outs
repz
je
aas
imul
(bad)
jmp
add
daa
xchg
jbe
cmp
dec
aas
mov
mov
mov
addr16
sub
mov
imul
fstp
dec
push
loop
add
push
test
retf
xchg
lods
xor
sub
mov
lods
or
mov
pop
movs
xchg
enter
outs
cld
jmp
int3
lahf
push
or
int3
or
das
loopne
jmp
lds
sahf
or
(bad)
out
sub
leave
int3
xchg
cmp
mov
pop
mov
sub
in
repnz
pop
cld
inc
push
and
sbb
xlat
mov
and
mov
in
pusha
dec
jecxz
imul
data16
push
data16
mov
or
jne
push
mov
arpl
inc
scas
repz
fild
xor
mov
sti
fld
mov
fimul
jle
inc
arpl
repz
push
leave
popf
jne
stos
jo
daa
sub
stos
push
xor
rol
mov
cmp
jmp
adc
sub
add
(bad)
loope
out
mov
jg
cli
fst
pushf
lods
stc
stos
mov
xor
dec
pop
jno
inc
mov
psubusw
stos
inc
dec
lock
clc
add
jns
sbb
push
mov
int
jge
jns
xchg
(bad)
mov
sti
ja
aad
ins
cld
dec
call
xor
fidiv
xchg
arpl
pop
mov
retf
cmps
push
push
mov
aaa
loope
inc
xor
jne
add
sbb
xchg
ficomp
push
loope
loopne
addr16
mov
movs
and
inc
clc
mov
bound
pop
addr16
sahf
push
cmc
push
repnz
adc
movs
dec
xchg
sar
pusha
fmul
retf
xchg
ins
ret
and
mov
mov
or
lock
sub
cmp
les
fcmovu
mov
pop
ror
mov
xor
sbb
ds
les
mov
xchg
aaa
xor
fnstcw
jle
and
movs
stos
mov
mov
dec
cli
aam
cwde
pop
mov
pop
ficom
sbb
adc
jmp
mov
mul
(bad)
xchg
push
dec
and
mov
cmp
jns
ror
pop
xor
mov
or
idiv
shl
pop
mov
jle
popf
ins
fcmovne
rcr
jle
add
out
sti
(bad)
cli
dec
push
inc
xchg
out
mov
inc
mov
mov
cmp
push
fnstenv
xor
xor
jb
xchg
sbb
push
sub
sub
sub
iret
mov
xchg
sbb
stos
dec
push
xchg
sbb
pop
sbb
adc
mov
adc
ret
mov
add
mov
push
mov
cmc
out
adc
popa
or
out
jnp
aas
ins
(bad)
and
adc
(bad)
jg
inc
mov
dec
repz
movs
out
push
cmp
mov
(bad)
xchg
sub
mov
in
lahf
push
mov
pop
and
cmp
mov
dec
push
loop
mov
test
sbb
push
xchg
push
outs
ror
sub
fldenv
fstp
dec
xchg
dec
data16
lods
fst
mov
pop
mov
sar
add
mov
mov
loope
stos
or
adc
addr16
mov
(bad)
inc
pusha
mov
lods
sub
mov
imul
push
in
popf
sub
xchg
sbb
inc
mov
out
outs
mov
push
jl
push
mov
mov
lea
ja
mov
(bad)
pop
popf
mov
jp
and
addr16
ficom
ja
stos
jmp
xchg
shr
or
xor
sbb
pop
xchg
inc
dec
push
jo
ds
add
mov
shl
sub
push
lds
idiv
pop
mov
push
push
pop
add
shl
jb
ins
xchg
imul
or
cmps
or
(bad)
in
cmp
stc
(bad)
lods
push
js
into
or
pop
mov
or
inc
cmps
sbb
aam
cwde
cld
in
mov
add
sub
sbb
cmps
adc
stc
push
movs
jl
cwde
sbb
rcl
pop
push
xlat
mov
imul
stos
cwde
sbb
inc
ins
retf
mov
into
adc
dec
sub
gs
call
imul
xor
in
scas
popf
xchg
nop
out
(bad)
mov
push
xchg
aam
mov
jle
and
mov
into
aam
push
addr16
cmps
mov
rol
fbld
mov
or
popa
push
mov
outs
cmp
cli
adc
mov
xor
push
inc
sbb
inc
shr
xor
mov
nop
adc
mov
jnp
dec
test
inc
test
rcr
in
ins
ins
jecxz
repnz
ffreep
or
enter
(bad)
and
mov
lods
push
inc
pop
std
push
in
scas
les
sub
(bad)
cmp
cwde
mov
ins
repnz
mov
xor
pop
(bad)
or
stc
cmp
imul
mov
cmp
cmp
push
outs
push
call
call
pop
push
data16
push
imul
das
shl
leave
fcomp
fst
mov
inc
push
retf
adc
pop
fbstp
aam
fisttp
or
loop
xchg
js
cwde
sti
jl
and
cmp
ret
dec
call
jo
inc
ja
push
fcom
xchg
test
mov
loop
stos
push
js
outs
xor
pop
leave
cmc
xchg
mov
push
xor
and
lds
loop
jecxz
mov
rcl
inc
dec
or
fdiv
jg
add
lods
nop
hlt
push
pmulhuw
std
cmps
xchg
fist
fwait
lea
adc
inc
pop
ror
(bad)
out
aam
push
inc
push
cwde
and
scas
aad
call
add
jle
mov
adc
stos
pop
add
pop
cmp
mov
sub
adc
cs
jo
test
mov
pop
push
sub
adc
push
inc
test
mov
loope
jbe
pop
bound
lahf
lock
push
lahf
add
jecxz
es
out
jmp
je
in
xor
rcl
fcom
pop
aam
inc
iret
push
mov
cmp
jno
scas
pop
nop
push
xor
data16
mov
mov
sahf
stc
imul
leave
xor
cs
test
mov
dec
mov
pop
in
ret
fsubp
dec
sar
cdq
inc
rol
rol
jecxz
sub
add
mov
mov
mov
lds
jae
aas
movs
sbb
jg
sti
mov
fdiv
call
fidivr
add
out
sahf
sahf
fsub
aaa
mov
mov
rol
std
scas
adc
lock
cmp
xchg
jg
pop
dec
gs
jb
dec
mov
je
dec
add
bound
sub
jg
loope
push
inc
movs
ss
xchg
pop
ja
std
jecxz
xchg
mov
test
cmp
ins
xchg
adc
fs
add
lea
leave
mov
popf
push
cmp
daa
repz
pop
inc
dec
retf
mov
inc
outs
add
pop
ds
fidivr
(bad)
jecxz
psubb
cld
sub
or
cmp
scas
stos
shr
das
pop
xor
xlat
mov
push
mov
cmp
push
es
or
add
jbe
(bad)
pop
mov
cmp
xor
mov
dec
and
push
mov
xor
or
pop
jnp
cwde
aad
cmps
push
repnz
aas
mov
call
push
(bad)
mov
xor
test
imul
push
shl
push
xchg
sti
push
ss
lds
xor
loopne
shr
cld
scas
ja
sar
xlat
and
int3
pop
cmc
into
inc
add
cmp
scas
iret
fisubr
sbb
inc
mov
hlt
loopne
in
retf
std
aas
ret
jecxz
mul
loope
add
pop
loope
out
ret
outs
dec
inc
push
sbb
dec
std
ds
(bad)
(bad)
(bad)
or
mov
inc
xor
pop
ficom
gs
mul
pop
xor
retf
lods
jns
in
adc
ror
xchg
sti
out
dec
cmps
pop
sbb
push
push
add
or
and
adc
and
movs
cli
jmp
in
mov
push
jbe
ja
jp
scas
mul
(bad)
(bad)
push
mov
pop
in
(bad)
ds
dec
adc
ins
int
int3
fnsave
(bad)
and
sub
(bad)
cli
xor
dec
(bad)
mov
add
fst
outs
cdq
sar
sbb
sbb
mov
sbb
xlat
add
sbb
fcomip
sub
hlt
add
mov
push
mov
xchg
or
jp
cwde
jno
sar
mov
pop
fadd
mov
mov
and
stos
mov
inc
xchg
xor
mov
pop
(bad)
dec
fisub
hlt
xchg
ss
(bad)
xor
inc
cwde
mov
pop
inc
fwait
push
or
inc
repz
es
aam
aaa
outs
fmul
ds
xchg
pop
jl
xchg
pop
outs
retf
mov
clc
movs
repnz
shr
jae
mov
push
mov
mov
push
lods
push
adc
inc
cdq
xor
das
sbb
popf
leave
jmp
stos
pop
inc
out
mov
add
stos
dec
or
mov
jmp
add
cmp
(bad)
in
test
rcr
je
out
push
fs
xchg
mov
push
sub
outs
dec
daa
je
jecxz
pop
stos
add
push
inc
add
cmp
cmps
call
mov
hlt
mov
sbb
fdiv
xchg
repz
ja
jno
aad
movs
adc
mov
mov
pop
test
rol
jecxz
push
test
int3
add
das
adc
out
push
fwait
outs
dec
mov
ja
loope
sbb
sbb
(bad)
fwait
xchg
sbb
scas
std
inc
xchg
pop
add
cmp
dec
cmps
xchg
aas
ja
fs
pusha
(bad)
push
jmp
loope
inc
mov
fucom
(bad)
fnsave
xchg
adc
stos
cmps
jne
pusha
pusha
test
les
pop
mov
sbb
sub
mov
sbb
in
ins
es
mov
jge
inc
ja
pop
into
add
sti
(bad)
in
mov
pop
xchg
imul
jmp
mov
add
inc
sahf
enter
stc
int3
fbld
daa
adc
push
sub
call
outs
inc
sbb
loop
mov
pop
call
mov
push
loopne
lds
loope
pop
cmp
imul
mov
(bad)
jle
(bad)
in
and
test
push
sbb
xor
or
imul
cmps
rol
sbb
jnp
mov
jne
inc
loopne
add
das
into
pop
cwde
push
pop
jge
stc
xchg
icebp
add
sbb
sbb
test
add
(bad)
out
inc
or
push
out
mov
inc
jnp
sbb
fsub
aaa
inc
sub
and
out
mov
mov
add
loopne
mov
out
scas
and
out
mov
addr16
mov
fdivr
das
out
xchg
idiv
call
dec
stos
(bad)
pop
fwait
dec
fdiv
outs
mov
cmp
das
movs
xor
mov
pop
jno
add
outs
sahf
add
sbb
push
inc
xchg
cmc
inc
fwait
and
imul
enter
imul
or
cmp
dec
jmp
addr16
mov
sbb
pop
adc
call
adc
stos
cli
fs
cs
push
adc
inc
aam
in
sahf
sub
adc
cwde
out
cmp
jl
mov
add
cmp
push
mov
push
stos
jmp
jbe
or
cmps
ja
mov
cmc
or
ss
fcomip
fs
xchg
nop
nop
sub
sbb
dec
or
pop
test
adc
int
nop
cli
outs
mov
inc
scas
mov
mov
dec
test
out
shl
lahf
sub
call
dec
mov
jp
lahf
xchg
mov
ins
rcl
push
cmp
aam
ins
test
rol
or
cmp
retf
lea
fs
outs
sahf
scas
fst
call
(bad)
pop
lods
lock
cli
adc
ins
mov
rcl
sub
addr16
cmovge
mov
sbb
cs
jp
sub
setne
xor
loop
leave
cmp
retf
icebp
test
push
inc
mov
dec
adc
pop
je
xchg
cmp
push
cmp
or
cmc
retf
or
in
or
pop
ret
lods
inc
and
adc
sub
addr16
mov
ins
(bad)
cmp
adc
adc
sbb
cwde
xor
mov
sub
fwait
sbb
mov
cli
arpl
mov
mov
jle
jle
clc
sbb
movs
sub
xor
xor
add
icebp
jns
fldcw
cmps
and
fwait
and
sahf
stos
sub
lods
sbb
lds
cs
adc
jbe
jl
je
mov
adc
call
es
lahf
loope
xchg
pop
mov
jb
add
in
push
push
lods
jb
lock
cmps
cmp
mov
adc
xchg
jge
cmp
or
loopne
mov
scas
loopne
daa
sbb
popa
adc
(bad)
inc
xchg
mov
les
mov
aam
popa
mov
pop
push
ins
shr
mov
mov
shr
push
xchg
call
cmp
mov
inc
repz
and
cmc
push
and
mov
clc
mov
or
sub
mov
sub
ds
(bad)
mov
nop
inc
xor
(bad)
loope
pop
pop
xor
xor
adc
scas
or
fadd
int
pop
outs
sub
fbstp
xchg
mov
pop
fimul
cs
jp
push
mov
ror
jp
sub
pop
push
call
or
add
mov
inc
(bad)
movs
jl
adc
mov
or
mov
and
cmp
iret
and
das
mov
xchg
shl
sbb
or
mov
mov
pop
jns
sbb
sti
sbb
cmp
inc
sub
and
mov
push
mov
pop
outs
enter
or
dec
push
mov
imul
ret
jle
stc
sbb
lea
sti
pop
outs
outs
jno
fistp
icebp
shr
pushf
scas
pop
push
push
jo
(bad)
hlt
jno
fwait
dec
lea
bnd
push
scas
and
retf
ins
imul
xchg
dec
sub
add
adc
add
(bad)
in
inc
rol
arpl
data16
pop
pop
jb
xor
cmp
push
cli
xor
pop
pop
pop
imul
xor
mov
nop
loope
outs
mov
jg
fcmovbe
fwait
clc
sar
enter
mul
and
adc
cmp
and
add
add
inc
xchg
cld
xchg
lea
out
aam
mov
xor
or
into
or
adc
cmp
mov
xchg
leave
xor
push
sub
mov
(bad)
adc
sbb
pop
sub
pusha
dec
mul
(bad)
sub
dec
jne
and
push
dec
cdq
in
popf
adc
push
mov
not
icebp
cdq
sbb
das
ret
inc
cwde
cmp
dec
pop
scas
bound
push
out
cmp
cmp
inc
test
or
push
cli
mov
xchg
sbb
shl
xor
and
shl
mov
jmp
mov
dec
frstor
pop
ins
push
sbb
push
mov
and
and
mov
and
test
dec
push
mov
cmps
(bad)
cmp
inc
inc
push
or
or
xor
repz
push
inc
xor
adc
dec
pop
xor
sti
mov
(bad)
fisttp
sub
mov
lock
(bad)
mov
push
icebp
jl
sub
cmps
in
pushf
rol
aaa
mov
es
pop
mov
sub
(bad)
sar
fcomp
push
ret
add
push
lods
in
xchg
fild
push
pop
aad
and
adc
mov
bnd
mov
cmp
sbb
xchg
dec
adc
test
mov
sbb
add
jns
cli
push
das
iretw
int3
imul
aaa
lea
mov
cwde
add
repnz
mov
xchg
ret
lea
pusha
sbb
cmp
imul
xor
sbb
vpsubusw
mov
mov
pop
faddp
or
ror
ins
lds
dec
or
jg
jns
cmp
std
pop
je
push
shl
out
mov
pop
xchg
xchg
mov
xchg
fs
or
in
popa
jnp
xchg
and
mov
lea
pop
aad
mov
aad
retf
stos
arpl
pop
stc
cld
jo
imul
jae
mov
push
das
mov
vunpckhpd
data16
push
and
jmp
(bad)
ds
fld
outs
not
pop
xor
xchg
fstp
in
xchg
dec
mov
or
and
fist
fwait
test
into
pop
dec
jl
push
in
ss
xchg
push
dec
icebp
mov
xor
(bad)
mov
dec
jne
sbb
sahf
and
dec
test
mov
ins
mov
fs
xlat
ret
xchg
pop
xchg
adc
loope
adc
fstp
ret
rol
adc
stos
stos
test
sub
into
xchg
pop
adc
and
xchg
cmp
ficomp
popa
jg
fdiv
leave
mov
(bad)
dec
bound
mov
jmp
push
push
addr16
not
pop
dec
jbe
mov
jns
inc
scas
call
xchg
mov
call
cld
sti
out
fs
in
xchg
add
dec
xchg
push
mov
div
movs
cmp
aaa
or
mov
sbb
lds
shr
push
jmp
xchg
or
test
ja
call
jmp
or
add
push
repnz
and
lods
mov
(bad)
xor
out
jmp
mov
popa
xor
nop
pop
fiadd
into
outs
shr
or
mov
lods
loope
out
mov
bound
retf
cmps
in
(bad)
loop
push
out
pop
cmps
pop
mov
retf
push
mov
test
fisub
jg
push
add
cmps
call
xchg
or
xor
cmp
clc
jecxz
or
jle
cmc
inc
push
pushf
pop
and
loope
jmp
out
xor
sub
xor
sbb
cmp
or
adc
mov
add
dec
pop
retf
inc
nop
fldenv
cmp
mov
pop
out
push
and
and
mov
jg
mov
xor
jae
jb
test
xchg
sub
jg
pop
xor
mov
pop
loopne
add
xchg
push
ja
mov
clc
ret
or
imul
mov
jns
jno
pop
mov
push
push
xchg
mov
shl
add
mov
les
pop
out
adc
xor
xchg
sbb
pop
loope
dec
dec
int3
imul
data16
adc
retf
aam
sub
aad
fisub
jle
jp
or
add
aam
pop
jnp
inc
ror
enter
cmp
adc
nop
pushf
mov
test
xor
jle
xor
adc
nop
xchg
lods
inc
cli
add
aad
xchg
xor
push
data16
aad
call
cmp
inc
push
sbb
shl
das
retf
jns
shr
int
nop
add
pop
mov
ffree
cmp
or
lock
(bad)
gs
inc
push
mov
imul
out
cwde
mov
ret
push
stos
das
adc
dec
mov
xor
fisub
push
cmp
scas
dec
(bad)
pushf
out
leave
pop
xor
jge
pushf
inc
fmul
into
pop
jns
ins
push
pshufw
sbb
into
loop
mov
lds
inc
adc
or
in
mov
aam
arpl
in
or
cbw
jp
jbe
test
xor
stos
shl
xchg
cmps
pop
arpl
adc
mul
test
mov
ins
gs
mov
ins
jl
pop
mov
dec
xchg
pop
add
inc
push
xchg
lods
ins
lea
stos
pop
ret
outs
push
shl
inc
inc
push
cmp
and
pop
or
clc
enter
sbb
dec
in
jl
imul
(bad)
jnp
cmp
pop
cmp
push
cmp
jg
xchg
adc
fwait
cmps
sbb
push
lock
mov
inc
int3
fidivr
and
cmovb
or
mov
lahf
cwde
add
xor
xchg
mov
or
sub
mov
arpl
fisttp
inc
add
mov
inc
arpl
sub
sbb
push
retf
inc
xor
pop
cdq
cdq
mov
add
push
xchg
push
mov
mov
retf
leave
fiadd
adc
scas
or
pusha
mov
(bad)
(bad)
in
gs
push
dec
imul
xor
and
add
rcr
inc
xchg
xor
sub
or
sub
pop
sbb
xor
stos
or
jl
das
adc
stos
sub
mov
push
cmps
mov
arpl
gs
out
aaa
mov
or
jb
adc
in
rcr
test
and
jbe
mul
movs
adc
dec
lods
lds
xor
lods
xlat
xchg
stc
loopne
lods
xor
cld
xor
clc
or
xchg
pop
pop
add
call
mov
cmc
test
and
mov
hlt
adc
aas
cmp
adc
pop
sub
xchg
clc
add
addr16
jae
pop
xchg
cmp
lahf
or
mov
adc
jmp
shr
shl
into
jns
stos
loopne
es
mov
int
add
jo
push
mov
(bad)
mov
jge
es
pusha
mov
and
in
mov
ins
xchg
add
div
sbb
xor
or
jo
jl
jmp
loopne
lock
stos
lahf
ficomp
cmp
mov
ret
mov
(bad)
sbb
push
adc
and
mov
repnz
lahf
inc
data16
mov
add
add
mov
les
mov
shr
call
mov
std
push
mov
dec
test
sub
das
or
xlat
push
sub
adc
fs
mov
out
jb
icebp
adc
loop
xchg
jne
scas
or
add
xor
sti
test
and
call
dec
dec
sub
js
push
enter
inc
aaa
xchg
cs
pop
mov
jns
push
jge
sub
nop
mov
inc
js
push
xchg
shl
popf
vshufpd
or
push
dec
(bad)
push
push
cmps
or
push
clc
inc
add
sub
xor
fcomp
enter
iret
fstp
repnz
cmp
mov
pop
fisub
or
xor
mov
(bad)
lea
or
push
ja
popf
push
sbb
es
(bad)
cwde
push
adc
add
pop
jnp
dec
ja
int
ins
xor
push
mov
arpl
adc
retf
(bad)
dec
cmp
add
mov
addr16
das
jp
in
sub
push
arpl
xor
or
mov
and
mov
adc
int
xor
cmp
jmp
addr16
in
jae
jns
xchg
in
adc
sub
es
mov
mov
adc
sub
inc
mov
pop
bound
(bad)
sti
mov
es
inc
lds
les
stc
xor
cmps
js
sbb
imul
mov
in
cwde
pop
mov
(bad)
lock
fadd
cmp
pop
cwde
and
xor
sar
push
sbb
sbb
and
fwait
iret
jl
mov
mov
loopne
push
sbb
push
test
dec
push
cld
les
leave
jg
fwait
xchg
cli
out
add
mov
inc
jecxz
outs
les
int
inc
jns
xchg
sub
mov
sbb
popf
movs
sbb
xor
(bad)
js
jb
xchg
shl
sub
ins
mov
jle
into
imul
add
mov
push
xchg
aaa
rol
jns
push
mov
cmp
loop
mov
cmp
call
cmps
mov
aas
scas
adc
bound
inc
lea
xchg
add
or
mov
mov
sbb
mov
bound
enter
pop
jg
and
lods
cmc
mov
pop
sbb
mov
inc
ins
fisub
jno
inc
pop
fcmovnu
enter
and
fidiv
jle
mov
repnz
les
and
mov
jecxz
sub
clc
into
(bad)
push
and
cmp
add
sub
test
call
aam
push
std
mov
movs
das
retf
xor
mov
bound
mov
adc
sub
sub
mov
fdivr
shr
adc
jno
popa
fidivr
rcl
pop
cmp
inc
jae
repz
pop
cdq
rcr
adc
out
xor
pop
clc
add
mov
xchg
retf
pop
sub
adc
sbb
nop
xchg
pop
stos
push
imul
mov
push
sub
jp
xchg
pop
shl
sbb
mov
cmc
push
sbb
mov
shr
scas
cmps
in
out
mov
pop
sub
pusha
test
xchg
adc
xchg
mov
div
add
push
add
mov
adc
stos
sub
pop
aam
dec
add
jo
(bad)
push
add
(bad)
test
pop
add
popa
mov
fcmovb
pop
mov
outs
sub
sahf
push
gs
cs
mov
cmp
xlat
mov
push
enter
sbb
retf
imul
loopne
cmps
xchg
mov
sahf
mov
push
(bad)
cmp
mov
out
push
aas
sbb
xor
jge
adc
icebp
cmp
dec
add
adc
mov
and
aam
dec
inc
push
xor
jge
mov
or
push
push
cmp
pop
xlat
(bad)
nop
hlt
out
adc
jecxz
inc
les
lock
sti
stos
loope
cmps
ror
out
add
imul
(bad)
outs
daa
data16
addr16
xchg
gs
pop
mov
add
push
in
xor
xor
mov
dec
jbe
call
mov
test
aad
dec
iret
sbb
mov
xor
inc
adc
clc
cmp
inc
addr16
dec
mov
(bad)
movs
mov
icebp
jbe
movs
faddp
shl
or
int3
mov
outs
add
add
popf
pop
lahf
sbb
mov
xchg
and
addr16
pushf
je
cwde
fst
adc
cs
inc
arpl
fwait
jmp
loope
rol
mov
clc
jge
jecxz
mov
in
fwait
cld
dec
mov
mov
and
std
pusha
jns
inc
inc
pop
jle
call
ja
jmp
popa
fs
std
inc
mov
movs
repz
push
pop
ret
lods
sbb
das
int3
push
loop
in
adc
push
cdq
fstp
sub
fs
stos
idiv
out
mov
jl
cli
adc
inc
xlat
jmp
iret
scas
imul
xor
sbb
push
push
adc
aam
pop
lods
cwde
test
test
in
jmp
pop
mov
push
xchg
jae
xchg
js
daa
fcomp
idiv
push
mov
icebp
xchg
mov
and
nop
sbb
(bad)
dec
pop
ret
imul
jne
scas
out
(bad)
es
fwait
jae
jp
hlt
test
scas
cmp
cmp
sub
sahf
inc
xor
inc
pusha
push
jecxz
(bad)
dec
or
cld
adc
push
mov
mov
nop
jne
repnz
(bad)
sub
pop
mov
sub
mov
out
mov
xor
je
jmp
mov
mov
repz
das
push
sbb
(bad)
jns
lods
pop
stos
pop
popf
jge
push
add
mov
mov
inc
and
jo
xor
dec
nop
add
repnz
and
in
sub
push
std
fld
or
mov
mov
dec
sub
jmp
xor
xchg
add
(bad)
in
fild
out
sbb
js
je
psubusw
mov
pushf
pusha
cmp
push
nop
call
out
adc
mov
dec
mov
jne
ret
test
mov
dec
xchg
fdiv
jne
pop
inc
ret
(bad)
pop
mov
cmps
cld
shl
cmp
inc
loop
js
popa
loopne
add
icebp
lods
shl
mov
push
xor
loope
movs
cwde
pushf
pop
lahf
xor
je
pop
jl
out
bound
(bad)
jl
and
fucomp
inc
scas
adc
int3
push
in
add
test
imul
xchg
mov
mov
fucomip
push
icebp
cmp
jne
ret
ret
ret
push
xor
add
jnp
and
cmps
cmps
sub
aad
inc
popf
dec
pushf
xchg
xor
outs
lods
shl
mov
fwait
ror
jg
pop
push
int
xchg
div
cmps
and
sub
add
xor
cli
pop
mov
jecxz
jbe
add
xchg
and
jns
iret
and
pop
cmp
push
or
movs
stos
xchg
call
iret
jg
(bad)
data16
xlat
pusha
cmp
push
mov
dec
sub
(bad)
ss
pop
mov
xchg
cmps
or
sbb
cmp
(bad)
xchg
int
push
scas
data16
div
cmp
loop
daa
xor
repz
inc
hlt
cmp
call
and
das
fld
push
sub
out
mov
push
pop
add
jp
mov
add
pusha
pop
pop
cld
add
imul
inc
fcmovnbe
mov
mov
mov
mov
aam
sbb
jo
xor
dec
jns
int3
sub
or
jg
out
or
rol
int
push
popf
hlt
(bad)
push
out
je
xchg
bndstx
pop
pop
xor
ds
outs
icebp
and
pop
fld
out
add
dec
sbb
out
mov
xor
(bad)
jg
(bad)
out
and
enter
icebp
mov
gs
scas
jmp
mov
enter
pushf
xlat
in
in
sub
or
ret
popf
xchg
jne
in
sub
(bad)
cli
adc
ins
jns
or
pop
aam
push
push
out
cmp
xchg
(bad)
xchg
movs
retf
sbb
pop
inc
xor
out
data16
pop
add
jl
cld
adc
in
ins
aas
add
sub
push
fistp
shr
and
jnp
push
sbb
push
add
push
mov
repz
mov
(bad)
popf
stos
push
lds
or
mov
stos
push
pop
push
dec
gs
mov
inc
(bad)
fwait
leave
cmp
mov
fcmovnb
ret
ja
jae
ss
es
lea
cmovl
jb
ret
repz
add
cld
xchg
dec
cmp
cmp
sub
push
cmp
jnp
adc
push
retf
js
(bad)
stc
dec
(bad)
movs
sbb
lods
(bad)
mov
push
stc
std
shl
loope
iret
ret
lods
add
dec
div
cli
pop
adc
pop
inc
test
arpl
sahf
or
xor
ins
jns
(bad)
push
dec
retf
leave
sub
xor
cmp
push
imul
jmp
sbb
and
xor
inc
cli
in
shl
jp
in
mov
pop
leave
adc
repnz
cli
test
inc
and
ja
iret
dec
icebp
pusha
push
(bad)
cmp
and
sbb
ficom
sbb
into
and
nop
dec
and
xor
iret
jns
jl
int
sbb
push
cmp
xchg
mov
div
ret
in
fstp
xor
inc
aam
cdq
int3
pop
stc
imul
js
and
pop
adc
lock
repz
in
dec
sbb
pop
push
adc
fst
xchg
sbb
pop
daa
aad
imul
test
pop
(bad)
out
cmp
push
xchg
fs
js
mov
mov
pop
and
push
adc
(bad)
jmp
das
addr16
sub
dec
loopne
in
xor
test
ja
test
ins
jb
pushf
mov
fisttp
pop
push
dec
popa
adc
pop
mov
stc
inc
lods
lea
mov
mov
fcmovnu
imul
jl
lea
ret
inc
sbb
iret
pop
push
sbb
fst
shr
lods
retf
iret
fnstsw
into
mov
mov
lods
sbb
mov
mov
aam
mov
(bad)
push
fcom
push
(bad)
ret
pop
jmp
iret
mov
adc
adc
out
imul
and
push
sbb
popa
pop
iret
xor
xchg
ror
in
out
(bad)
push
xchg
and
xchg
lock
mov
in
dec
or
inc
pushf
mov
rcl
int3
out
xchg
or
stc
xchg
loope
les
test
add
ret
fs
nop
xchg
add
xor
mov
or
sbb
in
push
mov
test
xor
cmp
or
inc
and
aad
or
and
sub
add
mov
or
cmp
xchg
scas
test
repnz
cdq
mov
aam
das
pop
mov
clc
and
fisubr
enter
add
nop
jb
cmp
retf
or
scas
add
int3
adc
int
push
jmp
and
popa
jmp
cmp
inc
imul
cld
stos
push
ror
inc
mov
js
inc
cmp
dec
les
lock
mul
xor
leave
fild
outs
push
lahf
mov
jl
outs
adc
or
ficomp
jecxz
xor
jo
aaa
add
lea
lods
loopne
iret
jae
push
add
iret
push
mov
sub
shr
cwde
pop
xor
jl
pop
(bad)
dec
mov
leave
mov
sbb
xchg
add
push
sbb
(bad)
xor
hlt
les
sbb
add
mov
aad
sar
jbe
push
inc
xchg
out
xlat
cmp
jl
imul
cmc
sahf
cmp
loop
xchg
pop
test
inc
not
and
inc
push
fstp
push
retf
cmp
xchg
(bad)
sub
lods
pop
and
dec
(bad)
enter
sub
and
sbb
mov
sub
xor
mov
icebp
adc
in
ins
jmp
push
push
adc
pop
xchg
adc
dec
dec
inc
addr16
xchg
rcr
sbb
jmp
add
clc
cmp
mov
das
mov
add
rcl
sahf
push
rcr
push
rcl
jg
test
cld
mov
mov
mov
mov
inc
scas
fisubr
test
and
repz
add
jno
inc
inc
xor
inc
adc
scas
addr16
push
mov
mov
mov
fisttp
sub
push
jb
add
mov
adc
inc
sub
jo
repz
jb
push
cmps
pop
fdiv
xor
rol
cld
jl
sahf
push
lods
(bad)
das
mov
push
or
outs
jecxz
and
lds
pop
inc
add
out
add
mov
addr16
jo
scas
ins
loopne
bound
push
sbb
xlat
xchg
repz
sub
pop
fs
rol
call
test
mov
popa
jle
push
xchg
and
ficom
scas
pusha
ror
test
mov
mov
mov
inc
aam
pop
in
xchg
mov
adc
inc
xor
dec
stc
xchg
cmp
or
dec
in
fwait
out
sbb
push
(bad)
neg
or
sbb
and
call
xor
mov
push
fisubr
and
repz
push
jns
add
pop
xor
int3
pop
into
or
test
fcomp
pop
out
cmp
movs
sbb
cs
push
popf
pusha
nop
les
push
and
pop
mov
and
mov
test
cmps
std
div
jg
out
fdiv
lods
sub
dec
xchg
sub
sbb
fs
addr16
jecxz
mov
jl
inc
gs
mov
sti
repnz
(bad)
clc
mov
add
xor
xchg
xchg
cdq
inc
fnstcw
and
fs
push
in
imul
sub
in
jnp
xchg
xchg
out
cdq
data16
fwait
sbb
out
hlt
or
popa
fld
cld
sbb
ins
push
mov
inc
shr
aam
rcr
push
cmps
dec
cld
push
sti
inc
xor
cmc
loop
lds
mov
mov
mov
clc
imul
fbstp
mov
(bad)
outs
cdq
mov
std
movs
add
lods
mov
addr16
and
adc
jne
fild
add
sub
cld
mov
jmp
xor
jne
sub
cli
mov
xchg
leave
push
pop
xor
ret
xor
retf
push
int3
or
jo
cmp
add
dec
cmp
xchg
hlt
pushf
(bad)
out
or
out
leave
xchg
daa
sub
push
ins
enter
cwde
pop
ret
and
ror
adc
ret
dec
mov
pop
push
in
mov
leave
fwait
cdq
jne
or
inc
dec
daa
push
cmp
clc
pop
cmps
jnp
xchg
push
test
pop
ror
cmc
and
(bad)
pop
mov
lds
imul
aas
mov
jo
leave
shl
data16
cmp
mov
test
popa
push
cmp
jne
adc
and
aas
ja
aaa
push
jg
nop
adc
or
xlat
fucomp
outs
inc
mov
dec
scas
xor
jb
push
cmp
mov
mov
sub
jecxz
fs
or
shl
mov
lds
call
mov
push
pop
outs
pop
cmp
rcl
xchg
aaa
or
push
loopne
into
lods
cdq
aam
sbb
repnz
sbb
ins
not
cs
int3
cwde
xchg
inc
repz
stc
add
aam
inc
sar
inc
aaa
mov
adc
jne
mov
pop
(bad)
mov
xchg
mov
mov
adc
sub
jmp
push
les
movs
xor
call
lods
sbb
cs
and
outs
cmp
or
inc
push
popf
scas
sub
push
mov
gs
push
xchg
scas
mov
dec
jmp
sbb
cli
cli
push
sbb
arpl
bound
add
sub
inc
adc
ds
call
(bad)
add
out
lahf
jnp
add
add
mov
aad
inc
push
mov
stos
fnstsw
inc
out
mov
data16
test
and
push
mov
mov
(bad)
pop
call
test
and
test
nop
or
scas
mov
push
mov
(bad)
push
or
les
push
mov
(bad)
aam
pop
or
adc
jo
mov
fyl2x
mov
and
(bad)
sub
and
jl
cmp
scas
(bad)
dec
push
add
jecxz
dec
mov
push
dec
fbstp
push
jne
push
das
jg
sti
sub
mov
sub
fild
mov
in
ret
out
ins
rcr
in
(bad)
inc
sbb
retf
addr16
pop
xor
clc
add
sbb
jmp
rcl
hlt
stos
xor
mov
cmp
mov
pop
ret
pop
call
xchg
and
add
or
mov
mov
and
popf
sbb
and
movs
enter
es
sbb
ss
push
or
mov
retf
mov
ja
fimul
test
xchg
or
push
mov
adc
mov
xchg
jns
ret
adc
idiv
sub
mov
cwde
xchg
or
fnstsw
inc
jmp
pusha
mov
imul
xchg
hlt
cdq
push
ins
mov
jbe
out
rol
or
dec
mov
je
pop
es
jmp
pushf
rcl
retf
test
cmp
mov
in
ins
jb
fcmovnbe
or
mov
push
lea
sub
jmp
jbe
lock
push
sbb
sti
jns
mov
loope
push
into
push
pop
daa
pop
xor
jns
mov
xchg
jae
sbb
sub
leave
iret
call
mov
cs
mov
fs
jne
add
addr16
test
pop
scas
adc
lock
shr
clc
jle
mov
sbb
dec
sbb
jge
xor
dec
ins
xchg
inc
inc
jmp
out
pop
sti
aad
mov
pop
xor
inc
test
es
iret
fisttp
pop
mov
sbb
pop
aam
les
cmc
cmp
xchg
and
sbb
(bad)
jmp
pop
hlt
jne
inc
xchg
mov
jg
nop
jns
xchg
or
aaa
rol
cmp
repnz
js
xor
inc
scas
cmp
cmp
push
addr16
mov
mov
push
push
xchg
dec
out
(bad)
push
jbe
(bad)
cmp
xlat
ror
xor
sar
mov
shl
dec
mov
and
xchg
mov
mov
pusha
sub
push
das
inc
cmp
and
ret
stos
repz
ror
pushf
outs
adc
mov
add
or
inc
mov
fldenv
mov
dec
jo
dec
or
enter
pop
icebp
test
adc
repz
jmp
int3
sub
cmp
(bad)
xchg
pop
sub
sub
inc
aaa
pop
inc
inc
xor
and
adc
shl
mov
push
sub
popa
push
sti
leave
xchg
xchg
cs
fs
fwait
hlt
test
mov
and
xchg
adc
shl
(bad)
push
aaa
xchg
icebp
fiadd
or
add
std
sbb
jno
movs
stc
mov
xchg
ret
xor
jmp
jo
stc
or
fcomp
lods
(bad)
sar
mov
mov
push
inc
add
sub
(bad)
in
jmp
data16
test
or
iret
cld
lods
sbb
adc
fild
iret
add
inc
and
fldcw
push
test
xor
jge
jo
pop
pop
cmps
xor
mov
pop
inc
idiv
xchg
into
and
jmp
fldenv
sub
jb
sub
(bad)
imul
sub
mov
xchg
or
push
outs
fsub
sub
jmp
jae
cmp
loopne
cmps
sbb
sub
mov
add
jno
fild
pop
inc
adc
jl
push
and
xlat
adc
int3
push
hlt
stc
sbb
jle
shl
idiv
xchg
daa
xchg
loope
xchg
pop
sub
pop
xor
cs
mov
fild
push
or
add
and
sti
jbe
out
shl
pop
jne
jne
les
push
push
jge
outs
jb
in
xor
push
jge
retf
(bad)
jne
nop
adc
dec
adc
sbb
retf
int
mov
add
lea
dec
xchg
pop
push
xor
fmul
sahf
scas
push
xchg
ja
xchg
jno
nop
sbb
(bad)
mov
scas
ror
jg
pusha
fcmovne
mov
sbb
mov
xchg
sub
ret
in
jecxz
dec
inc
push
mov
mov
mov
cmp
int
ins
movs
jmp
in
jp
int
ret
stc
call
jge
dec
xchg
add
into
xor
test
add
adc
jmp
dec
mov
jecxz
mov
jns
das
ja
lea
push
fisttp
inc
adc
movs
xor
or
mov
int
(bad)
iret
mov
push
and
movs
dec
xchg
mov
jns
js
lods
push
mov
jl
push
dec
add
and
test
jecxz
out
ja
sar
or
dec
aaa
in
cmp
add
imul
(bad)
sub
sub
fist
popf
ins
dec
xor
mov
jecxz
mov
push
push
icebp
stc
data16
cld
(bad)
movs
adc
sbb
xor
ret
imul
loope
cdq
mov
mov
push
mov
lods
mov
jb
xchg
cli
jne
jp
pop
sbb
mov
mov
sbb
sbb
retf
push
mov
add
aad
iret
jb
mov
gs
stos
cmp
cmp
dec
sub
int
out
shl
popa
and
scas
jmp
xchg
arpl
push
gs
push
dec
mov
aas
lock
pop
cdq
sub
in
xbegin
push
or
adc
sub
out
addr16
pop
or
ficom
dec
inc
mov
sbb
and
(bad)
arpl
mov
int3
not
fisttp
pop
xor
mov
movs
je
and
and
pop
out
inc
ins
xchg
xchg
mov
xchg
call
sbb
mov
lds
out
jg
sbb
div
xor
sbb
dec
push
inc
mov
aaa
or
xchg
sbb
dec
xchg
cmp
scas
jb
pushf
shl
push
out
push
cmp
push
or
push
test
dec
or
aaa
fiadd
imul
je
sbb
and
push
popa
mov
jo
and
sub
ins
inc
xchg
cmovnp
(bad)
mov
jle
in
test
pop
cmps
out
repnz
or
sbb
xchg
mov
mov
xor
sbb
cmp
ja
loop
or
fild
jae
std
and
ds
add
push
push
add
sbb
adc
adc
in
pop
icebp
sbb
scas
cwde
mov
sub
mov
out
fmul
out
xchg
or
push
sbb
arpl
int
sub
(bad)
aam
aaa
out
fbld
loop
push
mov
push
shl
pop
bound
(bad)
fisttp
addr16
in
jmp
push
je
inc
and
fadd
hlt
and
add
sub
hlt
cmp
sub
fxrstor
push
retf
mov
and
push
lahf
cli
imul
pop
adc
scas
jb
inc
pop
mov
sti
xor
movs
mov
ret
aaa
adc
cli
mov
dec
pushf
inc
push
retf
fisubr
cmp
rol
and
and
cmc
sahf
xchg
jno
mov
arpl
mov
dec
mov
xor
retf
push
shr
push
inc
mov
jo
push
jmp
ss
sbb
adc
clc
adc
jge
xor
std
mov
or
outs
lea
cmps
inc
mov
int
ins
sub
inc
xor
sbb
mov
test
es
sub
das
pop
cmp
popf
les
mov
repz
std
mov
mov
jnp
imul
int3
jns
(bad)
(bad)
lock
push
ret
jnp
repnz
sar
and
dec
pop
adc
scas
pop
pop
jle
ss
push
push
sub
mov
mov
stos
pop
movs
sub
xchg
pop
repz
cli
xor
ss
jo
cmp
lods
or
or
xchg
mov
push
call
jl
test
scas
std
(bad)
repnz
pop
xchg
retf
xor
lock
iret
and
out
ror
xchg
mov
xor
loopne
(bad)
retf
ins
sub
stc
xor
hlt
cmp
mov
je
lods
cdq
jg
cmp
sbb
test
ret
mov
add
loope
mov
(bad)
mov
add
sbb
in
or
ins
in
enter
push
(bad)
movs
sbb
arpl
push
push
ss
in
js
jp
data16
cmps
inc
mov
rol
ds
loopne
inc
cmp
call
(bad)
lds
xor
mov
ss
pop
and
mov
ret
scas
frstor
jle
push
sbb
and
cld
sub
inc
sub
pop
xor
pop
in
xchg
into
into
jge
pop
sub
loope
jmp
bound
loop
mov
fstp
inc
or
scas
cmp
fxam
push
out
sub
adc
gs
mul
sti
dec
and
mov
sbb
outs
out
push
pop
lea
ins
ret
fwait
jmp
or
jge
out
xchg
jl
aad
sahf
jmp
or
call
push
popf
fdiv
ror
aam
push
cmps
mov
mov
loop
sbb
enter
inc
test
add
cmp
fistp
dec
cdq
daa
and
pop
gs
mov
or
sub
imul
push
xlat
psubw
int
add
(bad)
in
sub
adc
sbb
outs
xchg
mov
hlt
mov
out
pop
mov
pop
ss
push
adc
sub
xor
dec
mov
bnd
xchg
xchg
mov
inc
jge
push
ja
push
sbb
push
lods
rol
mov
mov
pop
push
inc
pop
sbb
retf
sbb
aaa
or
mov
fst
lds
(bad)
fdivp
jae
clc
ins
cwde
fsub
xchg
out
inc
jbe
cmp
xor
fdiv
jmp
mov
sub
xchg
xchg
mov
xchg
push
cmps
(bad)
mov
mov
inc
mov
mov
lods
xor
mov
movs
and
or
sub
dec
fld
mov
inc
fdivr
ja
cld
fild
mov
je
mov
(bad)
pop
adc
mov
gs
repnz
fsubr
mov
jnp
mov
js
clc
mov
js
(bad)
mov
cld
cmp
imul
lods
addr16
fsub
and
sub
mov
xor
pop
test
fwait
(bad)
pop
mov
fs
push
pop
adc
pop
cmp
(bad)
xor
imul
out
stc
lock
mov
jns
mov
cs
xchg
xchg
and
jmp
gs
aaa
push
arpl
daa
jl
inc
sti
fxch
scas
cmps
mov
daa
inc
iret
sub
pop
adc
dec
xor
pop
lods
pop
call
loope
mov
push
(bad)
pusha
sti
ds
xor
xchg
adc
jae
inc
jno
data16
push
imul
test
scas
cdq
cmc
sbb
xchg
ret
movs
ror
jne
cmp
push
ds
das
sbb
sub
movs
xor
iret
push
mov
fs
xchg
or
mov
ins
pop
ja
imul
data16
dec
mov
enter
dec
add
inc
mov
and
std
mov
rcl
mov
lock
mov
popa
or
push
popa
rcl
adc
ror
mov
sub
es
(bad)
stc
jns
gs
int
jns
and
mov
pop
or
in
xor
add
retf
fmulp
inc
mov
retf
mov
loop
add
push
pop
pop
xchg
mov
cmc
lahf
sbb
out
push
jo
mov
call
jb
bound
cld
imul
push
pop
retf
std
mov
nop
and
mov
jnp
sbb
inc
fnstenv
js
ins
(bad)
(bad)
mov
mov
jmp
jbe
jmp
cdq
jae
pop
(bad)
outs
nop
fld
leave
das
rol
shl
pop
pop
xchg
ins
aad
mov
rcr
xor
mov
mov
pop
pop
push
icebp
rcl
out
out
xor
sbb
add
pop
push
lea
nop
retf
test
mov
lahf
dec
pop
cdq
js
push
mov
pop
adc
out
cmovp
or
xchg
pusha
ins
xor
ret
mov
or
loopne
jle
gs
(bad)
mov
xor
das
cwde
jmp
lea
(bad)
mov
mov
mov
cmp
cld
loop
push
(bad)
push
(bad)
ss
jmp
fiadd
das
fist
jns
mov
lock
or
call
mov
out
cmps
stos
jns
lds
fist
push
jle
rcr
mov
and
push
pop
mov
push
mov
mov
scas
jl
xor
shr
fild
adc
fst
push
jge
lahf
fist
leave
lock
add
cdq
retf
adc
pop
data16
push
fwait
pop
fsubr
jp
pop
pop
mov
(bad)
aad
dec
adc
jmp
cmp
mov
mov
xchg
inc
mov
xchg
jmp
or
pop
in
js
jo
out
add
fistp
sub
inc
sbb
std
inc
ins
xor
(bad)
(bad)
in
out
(bad)
mov
retf
sbb
repnz
lahf
xor
jle
mov
outs
mov
cmp
in
out
add
out
mov
aam
xchg
in
ins
loopne
jb
icebp
test
test
js
aam
jl
push
or
xor
xchg
add
stos
mov
and
jg
jp
adc
scas
ret
cmp
cld
xchg
xchg
inc
sub
pop
push
push
dec
add
(bad)
call
dec
mov
cmp
push
sub
out
into
jge
inc
sbb
or
inc
je
std
dec
or
arpl
sub
xchg
push
xor
cmp
das
xor
mov
xor
fild
imul
mov
sub
int3
pusha
add
sub
movs
(bad)
or
jne
lds
test
and
or
mov
in
lea
ins
mov
rcl
aaa
js
fcmovne
call
daa
into
dec
xor
repz
ret
(bad)
or
in
inc
test
mov
mov
pop
jo
mov
ins
cdq
inc
adc
fisubr
mov
std
ficomp
icebp
outs
xacquire
loop
mov
movzx
push
inc
cwde
ja
sub
hlt
adc
adc
aam
xchg
push
cmp
(bad)
popa
push
fst
mov
xchg
jmp
adc
fwait
sub
and
ins
adc
pop
stc
je
outs
stos
add
add
add
pushf
push
mov
daa
test
cmp
daa
xor
ss
dec
sti
daa
mov
ret
jmp
(bad)
fld
sbb
mov
dec
mov
xchg
jg
or
mov
xchg
pop
xchg
imul
repnz
scas
mov
fs
icebp
add
mov
xor
and
lock
xor
cmp
xchg
xchg
ds
or
adc
arpl
push
call
or
mov
dec
aam
push
pusha
or
ror
push
call
or
xor
stc
lods
mov
ret
fnstcw
xor
data16
xchg
mov
or
pop
outs
aaa
xchg
sub
mov
dec
cmp
pusha
in
pusha
push
jp
cmp
(bad)
mov
cmp
mov
out
or
add
nop
leave
cmp
xor
xchg
cmp
inc
and
in
aam
xchg
sbb
call
mov
icebp
push
push
mov
jg
out
adc
and
in
push
or
fwait
cmp
mov
pushf
fld
(bad)
mov
ror
or
dec
and
cmc
dec
dec
shl
ja
retf
cmp
div
gs
pop
pop
pop
jl
mov
jp
xchg
adc
outs
adc
outs
lahf
aad
or
enter
sahf
rcr
out
leave
push
mov
iret
dec
(bad)
rcr
sub
jno
xor
cmp
mov
lods
jl
jo
mov
and
and
xor
(bad)
in
xor
js
xchg
push
push
fwait
dec
outs
dec
inc
inc
sub
xchg
xor
icebp
sub
dec
add
movs
xchg
mov
or
fimul
jno
test
int3
lods
sub
shl
sbb
es
sahf
adc
std
lea
arpl
and
jnp
lds
jb
mov
and
inc
push
stos
ds
pop
mov
outs
dec
inc
mov
rcr
mov
test
imul
cmp
inc
adc
jne
retf
mov
pop
adc
push
test
rol
icebp
ret
es
daa
mov
push
cld
sub
dec
sbb
shl
ss
adc
mov
xlat
adc
adc
pop
(bad)
jns
data16
jo
sbb
aam
(bad)
call
mov
test
in
jmp
cmps
jg
fstp
dec
fisubr
ins
or
and
cmc
es
lock
std
add
jecxz
inc
popf
pop
xchg
(bad)
es
sti
add
mov
lds
fcmovbe
imul
popa
or
cmc
mov
push
ss
mov
test
or
lds
lods
ss
fsub
adc
ror
scas
push
ret
sti
push
dec
jmp
mov
jbe
mov
pop
xchg
mov
jge
daa
in
pop
mov
mov
and
push
sub
xor
pop
push
or
loop
leave
xchg
push
ficomp
imul
fwait
jae
call
sbb
push
fcomp
outs
mov
sub
adc
aad
jb
in
aad
jle
test
push
or
push
add
or
les
fwait
adc
dec
jecxz
sahf
dec
or
faddp
xchg
outs
js
leave
hlt
fcomi
lods
out
pop
(bad)
mov
cmps
dec
ins
arpl
daa
mov
xchg
add
icebp
cld
lahf
mov
sbb
adc
out
mov
inc
xor
and
rol
or
pop
clc
imul
cmps
jae
add
mov
or
push
outs
lea
ds
xchg
mov
add
fs
sbb
push
scas
add
or
fcmovne
xchg
pop
adc
test
mov
repz
mov
cmp
out
cs
ja
adc
imul
mov
mov
sbb
mov
ret
daa
xor
or
xor
pushf
test
cmc
dec
push
and
out
lock
inc
mov
not
inc
inc
rcr
xor
sbb
xchg
(bad)
sbb
pop
rcl
xchg
mov
enter
ror
cmp
and
lock
and
(bad)
inc
add
mov
lods
push
or
pop
inc
inc
add
sbb
loopne
mov
shl
and
xchg
add
cmp
push
mov
pop
add
push
das
or
ficom
test
jb
sub
aas
pop
adc
test
sbb
cmp
adc
adc
mov
or
xor
rcl
sar
sub
stos
fild
sar
add
push
adc
mov
sub
dec
outs
into
jmp
out
sub
mov
push
xchg
mov
ffreep
and
or
jb
jmp
dec
jp
mov
into
out
ror
scas
sbb
jecxz
mov
mov
(bad)
sti
xchg
in
pop
dec
mov
mov
dec
sahf
add
fwait
lahf
hlt
xchg
push
adc
sbb
xor
mov
and
rcl
sahf
call
mov
xchg
push
adc
jae
imul
loopne
adc
mov
mov
mov
push
mov
push
jge
push
fs
mov
jb
fs
sbb
aaa
lods
dec
adc
fpatan
adc
into
or
cmps
jmp
(bad)
cmp
mov
push
xchg
into
adc
int
sub
aam
jmp
push
push
in
mov
add
sti
ins
or
cmp
fst
mov
jmp
add
test
fsubr
in
gs
pusha
pop
xlat
cmp
ins
mov
inc
mov
movs
mov
cmp
aad
jmp
push
icebp
add
or
fdivr
sahf
in
shl
push
lods
mov
dec
cmp
sub
dec
sbb
popa
push
or
sbb
cmc
jne
pop
cmps
stos
mov
dec
sbb
fs
out
outs
in
aaa
ror
int3
jg
jle
push
add
dec
adc
or
push
or
test
ins
or
stos
jo
retf
push
push
add
mov
pop
fwait
add
pop
shl
xor
mov
sub
jb
movs
xor
xor
sub
sbb
xor
sub
and
dec
lods
fsub
mov
mov
mov
add
jno
xchg
inc
outs
and
js
shl
sub
cdq
mul
fisub
cmp
or
and
stc
outs
sbb
add
test
adc
repnz
pop
in
push
sub
xor
jp
rol
inc
inc
cmp
je
shl
test
xor
xchg
shl
retf
dec
ss
mov
add
(bad)
sbb
fist
pop
mov
mov
pushf
enter
pop
fild
cmp
cmp
clc
nop
or
pop
das
mov
pop
sub
pop
out
cmp
aaa
or
ss
pop
xchg
pop
in
icebp
adc
pusha
aam
mov
cdq
pop
bound
scas
sbb
dec
mov
push
cwde
jmp
cmp
sbb
cmp
and
int3
mov
ret
pop
adc
stos
or
fbld
sub
out
outs
lods
jge
or
add
cmp
mov
mov
int3
leave
popf
mov
stc
(bad)
call
xchg
and
xchg
fist
cmp
mov
pop
int
into
(bad)
mul
xchg
mov
jo
xchg
sbb
jo
jae
cmps
push
push
dec
mov
in
jno
daa
xchg
stos
mov
push
sbb
xchg
dec
cmp
xor
push
cld
ins
aas
mov
inc
xchg
dec
xchg
shr
push
sub
fcomp
add
xchg
inc
mov
add
hlt
ins
cmp
int3
inc
loop
mov
xlat
loope
pop
jp
sbb
(bad)
xchg
mov
jge
pop
cmp
push
ret
retf
cmp
sahf
dec
push
fwait
push
xor
fild
sub
pcmpeqd
add
lods
mov
iret
pop
xlat
idiv
div
outs
inc
sar
mov
fsubr
xchg
aaa
and
test
movs
retf
and
sub
mov
inc
or
mov
dec
loopne
retf
ss
jp
inc
in
mov
adc
xor
push
and
inc
in
sbb
inc
xor
sbb
push
jmp
les
jmp
adc
test
jmp
(bad)
xor
shl
mov
adc
repnz
or
test
mov
rcr
mov
in
cmp
jb
and
aaa
lds
fdivr
adc
add
push
xlat
jae
dec
punpckhdq
and
mov
jo
sbb
jno
ds
mov
pop
scas
mov
in
imul
push
dec
jmp
add
xchg
(bad)
adc
jl
(bad)
xor
dec
pop
outs
(bad)
jnp
adc
inc
loopne
aaa
jecxz
cmc
pusha
sahf
out
xor
mov
cmp
int3
popa
in
(bad)
rcl
and
push
add
stos
mov
dec
fbstp
xor
mov
fbstp
cdq
test
js
in
gs
popa
add
in
outs
stos
je
adc
lods
xor
push
daa
(bad)
in
pop
aas
lds
inc
adc
jo
xchg
sub
stos
xor
jae
ret
loopne
jae
or
addr16
cmp
inc
(bad)
out
xchg
xor
mov
ja
and
loopne
xsaveopt
call
pop
and
add
fidiv
xchg
mov
sti
inc
jno
mov
out
add
retf
push
jmp
hlt
dec
mov
cmps
clc
dec
mov
aam
cld
inc
pop
pop
dec
cmp
dec
icebp
sbb
lds
mov
sbb
mov
cli
je
loope
outs
adc
(bad)
in
xor
adc
ins
add
sbb
push
ja
mov
shl
ficom
cmp
aas
mov
pop
cdq
lahf
dec
cwde
loope
neg
jbe
rcl
xchg
les
mov
fistp
mov
mov
cs
jns
adc
lods
push
add
xor
lock
vminpd
test
or
mov
add
lds
fs
int
(bad)
test
mov
cmp
mov
push
mov
or
xor
adc
ja
xor
mov
fst
add
mov
cli
adc
jg
jmp
pushf
and
mov
movs
cmps
nop
loope
das
xor
dec
and
sub
rol
xlat
fadd
arpl
ja
xchg
push
add
and
sbb
xchg
into
cmps
je
jmp
bound
lahf
(bad)
fwait
leave
aas
cmp
clc
cmp
inc
or
fs
ret
sti
jecxz
inc
cmp
call
jno
dec
stos
movs
movs
dec
test
adc
je
ss
cli
mov
add
xchg
leave
es
mov
xchg
int
cmp
jbe
push
fwait
out
mov
or
xchg
push
adc
mov
out
test
out
sub
add
jecxz
add
stos
ss
xchg
push
mov
daa
jns
sar
push
jle
lods
pop
psadbw
sub
mov
inc
mov
pushf
cmp
dec
imul
push
jmp
out
add
outs
div
and
into
or
dec
out
mov
ja
push
xlat
(bad)
into
mov
or
jns
movs
push
repnz
push
cmc
mov
mov
push
mov
or
cmp
in
pop
cmps
movs
repz
jbe
dec
pushf
lea
xor
js
sub
cmp
lock
scas
stos
jno
lods
(bad)
std
movs
retf
sub
fcomp
mov
dec
in
xor
aad
clc
test
enter
cmp
inc
inc
dec
inc
add
dec
jo
js
cs
add
cmp
mov
fwait
into
sub
push
inc
jb
ror
test
xchg
scas
ja
sub
shr
shl
pop
and
ja
cmps
(bad)
mov
lds
sub
add
retf
mov
movs
sub
daa
xchg
mov
fs
cmps
mov
out
or
pop
or
xchg
mov
add
dec
int
xor
lock
repnz
or
je
and
adc
jecxz
fwait
mov
lds
mov
imul
out
arpl
in
imul
iret
xor
mov
add
lods
in
sub
fisttp
adc
mov
mov
mov
imul
jo
cmps
cdq
xor
lods
nop
lock
dec
sub
mov
ins
popf
xchg
xchg
mov
test
shr
xor
arpl
in
movs
ret
je
mov
add
rol
pop
(bad)
mov
dec
aad
pop
mov
pop
fadd
mov
mov
xchg
cli
xor
in
ret
fwait
dec
push
mov
inc
gs
push
pop
or
sbb
sar
adc
sbb
ja
jne
pop
xchg
int
lds
push
mov
stos
test
push
mov
xor
rol
mov
call
cmp
pop
daa
leave
sbb
(bad)
sti
retf
(bad)
sub
adc
add
sbb
push
mov
cdq
into
sub
hlt
xor
dec
dec
(bad)
jmp
mov
push
out
enter
add
out
xchg
loop
dec
xchg
mov
mov
push
pop
mov
lods
pushf
mov
xor
loope
fwait
pusha
test
cli
cmp
lahf
icebp
(bad)
enter
add
pop
mov
mov
sub
mov
rcl
push
mov
cld
lahf
out
mov
test
pop
frstor
cmps
cs
data16
jmp
mov
mov
ins
and
push
not
push
scas
jnp
ins
bound
(bad)
int
sbb
ds
and
out
adc
cdq
jecxz
xchg
and
daa
mul
test
cdq
push
pop
lea
push
ret
and
movs
js
in
ficom
push
icebp
fadd
inc
jbe
movs
xor
and
cmc
stos
or
ficomp
fs
lds
fisub
add
xor
fldcw
adc
loopne
lods
int3
cmps
mov
mov
xor
lahf
or
add
btc
pushf
push
(bad)
mov
push
iret
push
daa
cmp
and
push
mov
or
fadd
xchg
nop
loopne
lahf
out
dec
loop
in
jle
xchg
cmp
loopne
call
bound
and
mov
inc
ds
or
(bad)
das
inc
mov
mov
fdivr
mov
sbb
(bad)
dec
and
daa
adc
cmp
ja
popf
push
inc
fst
cmc
xor
pop
cdq
dec
push
push
jmp
icebp
icebp
call
mov
popf
pop
xor
aad
imul
test
and
es
stos
sub
and
imul
adc
inc
xor
aas
cmp
mov
mov
push
repnz
retf
sbb
div
push
dec
dec
xor
std
xor
ss
(bad)
lods
jae
hlt
imul
inc
and
daa
retf
mov
dec
push
xor
cmps
mov
or
and
test
sub
mov
or
mov
jecxz
mov
add
dec
dec
addr16
or
add
mov
mov
je
nop
push
fadd
fild
inc
add
dec
sub
cs
adc
mov
lahf
fisubr
les
sahf
cmp
out
adc
inc
lods
mov
shr
mov
sbb
daa
(bad)
inc
and
add
pop
fcmove
pop
mov
test
fcom
mov
sub
mov
in
jbe
punpckhbw
into
test
dec
or
and
mov
mov
cdq
repnz
lahf
cmp
pop
fs
push
inc
adc
or
leave
movs
cmps
fsub
scas
xchg
xor
push
nop
inc
cmp
jge
sub
daa
add
xor
mov
addr16
movs
fdiv
rol
or
pop
test
cmp
leave
xchg
adc
adc
xchg
mov
fistp
and
sub
xchg
add
sbb
pop
adc
jae
aas
cs
mov
and
dec
sbb
and
stos
sub
ror
jp
lea
cmp
jmp
cld
add
arpl
(bad)
popa
int
js
mov
setno
mov
leave
aas
pop
mov
daa
pop
push
dec
pop
lds
es
in
lahf
pop
cs
movs
dec
mov
dec
or
fisttp
int
pop
movs
loopne
push
xchg
ins
xor
pushaw
jo
cmp
std
push
adc
repnz
sbb
mov
into
xchg
mov
gs
jb
cmp
mov
lahf
sahf
mov
sub
dec
cmp
les
pop
sahf
frstor
xor
sbb
loop
dec
cdq
push
mov
dec
pop
xchg
lock
in
aaa
shl
or
pop
inc
es
out
cwde
pop
retf
jns
dec
push
xchg
push
out
jge
shl
jle
mov
push
mov
pop
ror
stc
pop
sahf
jmp
adc
jge
out
or
fist
inc
mov
cmp
call
pop
addr16
call
ss
inc
xor
inc
and
pushf
add
mov
retf
xlat
pop
sub
cwde
dec
in
mov
hlt
xlat
sahf
test
sbb
mov
mov
retf
aam
sbb
add
pop
stos
in
cdq
fidiv
jmp
mov
xchg
mov
mov
add
lock
fistp
jmp
enter
add
or
das
and
cmp
push
xor
fisttp
in
mov
les
cmc
xchg
cld
push
in
dec
mov
mov
les
in
ds
adc
cli
aaa
repz
mov
push
out
repz
pusha
xchg
mov
add
test
iret
ds
mov
movs
dec
adc
test
push
(bad)
and
jmp
out
sbb
cmp
and
xchg
cdq
sahf
cwde
xor
jmp
test
and
imul
xchg
cli
and
sbb
int
add
fimul
push
fwait
jae
and
(bad)
pop
xchg
je
stos
movs
and
fdiv
sbb
push
stos
cdq
dec
mov
test
into
mov
xchg
mov
push
addr16
ds
pop
test
jbe
test
sub
fcmove
mov
or
es
xchg
cmp
icebp
test
dec
pop
jne
(bad)
(bad)
icebp
mov
mov
dec
inc
jmp
adc
inc
xchg
mov
xchg
xor
adc
push
addr16
push
push
(bad)
and
cmp
mov
cmps
arpl
xor
mov
(bad)
aas
iret
inc
bound
xor
lahf
jns
mov
inc
jns
mov
sbb
loop
or
in
jae
daa
pop
pushf
add
cli
mov
mov
(bad)
arpl
inc
aam
outs
fwait
in
mov
nop
leave
(bad)
mov
ins
mov
mov
cli
mov
xbegin
xor
cmp
ins
cdq
or
ss
xor
pop
fucomip
push
lea
std
xor
pop
shl
ins
sbb
out
cld
jmp
and
jmp
xchg
loope
mov
loope
mov
pop
xlat
fwait
dec
js
xchg
fucomip
add
xor
stos
mov
retf
pop
cmp
or
inc
adc
rcr
stos
mov
jae
int3
iret
inc
cmp
inc
or
sub
loope
inc
xchg
inc
call
fs
test
mov
outs
lods
les
jmp
sub
push
mov
rcl
cwde
add
stos
mov
mov
xor
test
lock
mov
mov
loop
xor
and
out
out
inc
push
jg
add
push
cmp
(bad)
cmp
and
jb
sti
or
inc
add
and
mov
int
sub
mov
mov
mov
jmp
fs
add
outs
mov
fnstsw
call
inc
scas
fsubr
lods
adc
or
stos
mov
stc
sub
push
or
inc
fsubr
and
or
sar
les
movhlps
and
sbb
scas
(bad)
push
in
aas
aam
sub
cmp
in
sub
xor
enter
cpuid
clc
repnz
cmp
test
repz
aaa
mov
int3
xor
pop
fld
ret
xchg
mov
cmp
xchg
xchg
xchg
cmc
std
shr
sub
enter
push
jnp
in
jmp
enter
hlt
jle
xchg
sub
cmp
je
or
hlt
dec
push
xchg
iret
sbb
dec
ds
mov
jns
(bad)
xor
arpl
mov
jbe
jg
jmp
mov
inc
mov
mov
pop
push
inc
pop
mov
retf
(bad)
stos
stos
and
jecxz
das
pop
sahf
aaa
ds
(bad)
js
sbb
into
js
adc
jmp
mov
mov
cmp
jg
das
out
(bad)
jmp
dec
mov
or
and
mov
mov
int
xchg
fisubr
inc
pop
aam
popa
icebp
pop
rol
sub
fldenv
jb
loop
pop
cmp
(bad)
movs
cmp
fidivr
push
fninit
adc
pop
fadd
add
add
addr16
loop
push
stc
int3
and
and
jae
(bad)
pop
mov
adc
rcl
lods
jle
xchg
sub
xchg
sub
mov
js
pop
dec
mov
push
enter
icebp
nop
pop
xor
lahf
dec
movs
xchg
jp
aaa
or
add
push
out
in
scas
mov
xchg
pop
pop
pop
dec
jne
dec
sub
xlat
mov
lods
and
push
scas
jmp
push
arpl
jb
aas
sub
sbb
jl
jo
mov
in
(bad)
add
mov
push
fsubp
mov
test
pop
fdivr
mov
aad
xor
neg
inc
mov
fldcw
and
test
pop
xchg
movq
das
mov
jnp
jb
movs
xchg
and
sbb
in
and
cmp
jae
popa
xor
int
shrd
and
jl
pop
dec
dec
mov
dec
add
mov
mov
enter
push
sbb
cli
jns
push
jmp
idiv
cmp
(bad)
rcl
xchg
mov
inc
pop
int3
in
and
push
enter
or
repz
xchg
sbb
mov
xor
scas
imul
pop
loope
sub
jecxz
sbb
ds
jmp
nop
(bad)
mov
out
pop
adc
mov
add
jecxz
sub
xor
adc
mov
loope
pop
fwait
movlps
test
cmp
scas
mov
std
cmp
inc
jecxz
pop
mov
loop
cmp
sahf
iret
sub
call
cmc
mov
arpl
push
inc
push
out
stos
or
inc
shl
cmp
xor
sub
dec
adc
xchg
cld
jg
mov
add
adc
adc
out
repnz
cld
mov
lods
sbb
or
lahf
ftst
sbb
ss
mov
cmp
sub
or
xor
mov
jnp
fisttp
mov
scas
cli
daa
sub
pop
mov
ins
sbb
sahf
push
push
add
adc
inc
sbb
sbb
shr
enter
pop
test
push
and
jmp
mov
stc
and
push
fs
shl
fwait
cs
inc
push
add
arpl
jecxz
jb
mov
test
push
xchg
cmps
fnsave
sub
cmp
lods
jge
and
(bad)
movs
clc
sbb
and
movs
(bad)
mov
mov
iret
or
out
fcomp
sbb
mov
adc
jge
cmp
push
jmp
test
popf
adc
mov
xor
jge
aam
and
inc
(bad)
aaa
inc
mov
stos
jp
jp
imul
ins
lods
add
in
jne
int3
push
pop
or
lea
mov
push
xchg
cli
fstp
dec
loopne
mov
int3
mov
leave
call
push
fidivr
mov
imul
jp
lock
loope
mov
sbb
lahf
mov
fdivr
xor
shl
jb
sbb
push
mov
pop
dec
mov
jmp
inc
mov
sbb
stos
or
sub
xor
or
jns
push
jle
iret
sub
jmp
mov
(bad)
cli
cmp
xor
cmps
clc
cmps
add
pop
cmp
xor
ret
pushf
jecxz
shr
cdq
aad
(bad)
rcl
pop
in
xchg
lds
inc
pop
inc
dec
mov
lods
adc
jno
mov
push
ss
in
mov
test
and
js
mov
jge
pop
jg
pop
fsubr
(bad)
sti
cmp
sub
and
mov
fwait
mov
jmp
sti
cmp
cli
sbb
dec
push
add
icebp
(bad)
fsubr
fcom
sbb
xchg
inc
jo
dec
jnp
inc
sub
lods
mov
push
lock
jle
aas
inc
scas
cdq
adc
shl
jp
mov
xor
je
retf
jae
pop
and
fsub
sbb
(bad)
cmp
lods
ficomp
jmp
std
in
adc
adc
mov
jae
xchg
mov
lds
mov
mov
fbstp
fs
mov
xchg
bound
mov
xchg
iret
out
sub
jge
add
sbb
repnz
je
or
inc
mov
sbb
cmp
dec
adc
in
in
mov
inc
lock
xchg
hlt
sbb
jbe
ja
inc
add
lock
sti
mov
stc
dec
in
lahf
rol
xor
movs
(bad)
sub
fs
fild
sti
call
adc
out
adc
in
pusha
sbb
inc
inc
sbb
push
stos
inc
in
icebp
mov
xor
or
sub
adc
scas
adc
retf
mov
add
and
add
jecxz
dec
in
sbb
mov
out
movs
jp
aad
loope
out
icebp
neg
stos
mov
mov
add
fimul
int3
fld
lods
inc
std
enter
ja
xchg
pusha
fwait
sub
ins
and
pop
aam
enter
pop
xor
imul
ret
jmpw
dec
scas
cli
adc
mov
pop
or
push
movs
fwait
jle
fimul
cmc
cs
cmc
mov
push
sbb
(bad)
imul
mov
pop
mov
jmp
sub
xchg
mov
jmp
stos
popa
mov
scas
cmp
sbb
stos
(bad)
sub
sub
pushf
lods
ret
cdq
fs
xor
in
pop
mov
les
dec
or
mov
push
mov
std
retf
(bad)
clc
xchg
xor
ficomp
dec
int3
retf
push
aam
ins
xchg
mov
test
sahf
mov
dec
mov
in
out
mov
leave
xchg
xor
inc
push
add
rol
pop
ins
push
mov
(bad)
aaa
cs
jg
xchg
add
bound
cli
cwde
hlt
push
sub
lahf
xor
arpl
loop
sbb
ds
lock
or
add
out
arpl
cdq
jle
lea
movs
mov
(bad)
xchg
cmp
lods
cwde
adc
retf
push
out
xcrypt-ecb
cmps
rdmsr
jl
cld
addr16
repz
fwait
push
or
ins
aam
test
shl
add
in
jmp
cmp
imul
or
jae
inc
fcomp
icebp
loope
xchg
mov
clc
mov
mov
cmp
adc
adc
retf
cld
push
rol
cmc
cmps
jmp
hlt
or
les
add
sub
psllq
sbb
sbb
retf
inc
fstp
jne
xlat
xor
arpl
inc
mov
aam
sbb
sahf
push
in
and
lods
sbb
jl
push
add
dec
jo
sbb
push
movs
cmp
std
jbe
sbb
popa
mov
test
jle
dec
ret
and
cdq
imul
xchg
jns
aas
or
rcr
jp
cmp
mov
loop
sar
push
cmp
sub
push
in
fldcw
add
push
adc
push
in
jns
mov
inc
mov
push
nop
push
push
bound
(bad)
or
bound
shr
lock
inc
xor
or
aad
dec
cld
cmp
and
mov
mov
adc
shl
mov
pusha
js
cmp
sub
cmp
sub
mov
dec
sbb
lea
push
es
mov
push
cmp
dec
int
icebp
loop
retf
into
das
fist
inc
call
xor
out
pop
xor
in
aad
fcomp
ins
pop
xor
test
out
or
dec
popf
push
pop
or
imul
(bad)
jb
or
jecxz
pop
mov
rcl
mov
xchg
sub
add
jne
push
push
xchg
dec
inc
add
dec
addr16
push
scas
hlt
adc
xor
pop
lods
and
xchg
xchg
dec
ins
leave
pop
fxch
int3
dec
aas
daa
(bad)
not
add
push
jecxz
movs
xor
dec
arpl
pop
sbb
or
push
scas
pop
xlat
or
xchg
inc
scas
mov
mov
aas
cmc
test
sub
cmp
jo
jmp
or
jecxz
inc
mov
clc
iret
xor
out
aad
pop
push
xchg
aaa
inc
out
mov
sar
jmp
fwait
xchg
rcr
xor
sub
or
outs
out
xor
in
inc
jo
rcr
pushf
mov
(bad)
js
mov
cmp
push
jae
mov
inc
inc
(bad)
rol
sti
rcr
and
les
xchg
mov
(bad)
sbb
std
ss
js
pop
(bad)
(bad)
nop
je
push
int3
or
mov
call
jmp
mov
ret
jno
dec
scas
imul
pop
mov
scas
xor
pop
ins
push
popf
cli
repnz
adc
(bad)
shl
cld
in
xor
in
ret
bound
or
xor
fadd
lahf
lods
dec
push
movs
popa
push
inc
cld
enter
aam
int
xchg
sub
fisub
movs
sbb
and
jo
jbe
cmp
add
popa
ja
cmp
fnstsw
sub
inc
and
cdq
push
shl
pop
sub
add
mov
push
pusha
mov
lods
fstp
mov
icebp
retf
in
xlat
cmp
pop
dec
sbb
rol
or
sbb
jmp
lods
dec
fs
xchg
jge
hlt
jnp
not
fcomp
leave
loopne
in
scas
xchg
dec
mov
scas
or
imul
add
jno
cli
cwde
mov
xchg
xor
jbe
sub
push
repnz
hlt
aas
mov
ficom
push
push
inc
jle
mov
nop
and
add
(bad)
mov
sti
mov
jmp
iret
cli
mov
int3
and
mov
push
mov
bound
jb
out
retf
out
in
clc
bound
sub
mov
xchg
mov
gs
outs
daa
jg
sub
pop
lea
mov
out
push
out
add
cs
out
pop
int
inc
add
stc
rcr
cmp
dec
lock
push
push
idiv
pop
pop
es
dec
fbstp
inc
shl
icebp
mov
push
cmp
sub
mov
jmp
int
lods
lea
cmp
stos
sub
sti
fcom
cmp
mov
fs
and
scas
(bad)
aas
mov
fmul
push
push
(bad)
and
mov
pushf
inc
and
jne
int3
addr16
sub
cli
enter
xor
inc
cmp
or
xlat
add
movs
fstp
mov
mov
xchg
cmp
clc
mov
sbb
retf
adc
mov
cmps
push
jno
std
push
adc
dec
adc
dec
fnstsw
mov
push
adc
push
mov
test
popa
mov
loopne
jecxz
push
add
int3
pushf
push
and
cld
mov
sub
pop
inc
sbb
icebp
int3
push
adc
jae
call
cwde
ja
or
das
jle
xchg
sar
in
cmps
pop
mov
outs
ins
dec
add
cld
call
ret
loopne
sahf
sub
rcr
cmp
sub
xor
adc
sbb
stc
push
movs
inc
adc
mov
xchg
cmps
add
daa
in
fistp
(bad)
push
ins
add
dec
sbb
and
cmp
sar
mov
add
dec
pop
xchg
js
dec
sahf
rcr
add
aaa
inc
xor
int3
xor
test
inc
cmp
xchg
hlt
popf
pushf
rcl
adc
dec
ret
mov
xchg
mov
jmp
push
lods
adc
adc
mov
stos
out
fs
dec
pop
push
sub
pushf
movs
idiv
mov
pushf
int
(bad)
push
test
inc
aaa
test
in
aam
ds
lea
loopne
imul
mov
mov
push
outs
mov
cmps
mov
(bad)
iret
outs
out
js
xchg
inc
lea
(bad)
cs
push
ret
clc
icebp
and
xor
mov
mov
je
and
arpl
xor
aaa
cmp
ret
out
mov
dec
xor
cmp
pop
sbb
jg
repz
out
xchg
push
nop
and
pop
in
adc
xchg
xlat
mov
nop
pushf
xchg
or
add
fistp
stc
mov
lea
ficom
loopne
inc
imul
loopne
jno
xchg
aaa
aad
add
movs
cmp
mov
mov
sbb
call
jl
stc
add
movs
pushf
dec
add
adc
push
cmc
add
pushf
sbb
lods
push
mov
cmp
(bad)
mov
xchg
add
rol
aam
lock
(bad)
or
shl
xchg
mov
lahf
rol
cmps
lods
xchg
mov
(bad)
dec
fisubr
push
dec
scas
fisttp
scas
cld
lea
xchg
inc
js
inc
hlt
xchg
lods
mov
xor
add
inc
popf
cdq
retf
pop
jg
jnp
test
cmps
xchg
inc
mov
jg
fistp
call
ins
xor
xchg
into
add
xchg
(bad)
jae
aam
loop
push
add
jl
pop
arpl
adc
and
retf
mov
iret
stos
pushf
sub
into
aad
ins
int
sbb
and
cld
pop
vmread
retf
cli
cmp
mov
mov
and
rol
add
xchg
or
xchg
xchg
lea
and
dec
lea
pop
in
push
jns
xor
adc
sub
imul
iret
enter
jmp
jmp
pop
popf
xor
mov
test
in
stc
pop
enter
dec
icebp
fucom
dec
add
mov
ins
mov
and
add
popf
movs
dec
test
xchg
loope
movs
out
jmp
sub
mov
call
xchg
mov
sbb
lods
and
(bad)
mov
ds
inc
lds
lea
xor
xor
dec
fwait
lods
jnp
packsswb
jo
sub
mov
mov
mov
in
dec
adc
mov
dec
xor
pop
jp
add
dec
pop
es
jle
push
or
stos
aam
add
and
cmp
iret
inc
adc
aam
push
call
inc
(bad)
pop
stos
jno
lods
xchg
or
mov
inc
add
xchg
mov
push
jo
and
dec
mov
or
cmp
xchg
fisubr
jbe
clc
sbb
int
xor
(bad)
mov
in
adc
push
push
ja
movs
loopne
jae
daa
div
mov
xchg
test
xchg
mov
xor
sub
mov
xor
sahf
icebp
retf
dec
adc
jg
xlat
out
mov
sar
jle
push
fst
loope
or
loop
leave
xchg
cmps
adc
jmp
std
outs
lahf
or
mov
mov
sbb
pop
div
outs
push
cdq
add
adc
cli
cmps
retf
pop
mov
es
nop
mov
jns
jl
add
frstor
jmp
inc
mov
mov
(bad)
pop
dec
out
loop
(bad)
shl
and
fst
imul
and
pushf
in
daa
ins
lods
xor
jmp
mov
jge
jne
pusha
enter
xchg
in
or
pusha
adc
xor
loopne
pop
rol
outs
test
and
sub
std
clc
mov
pop
cdq
pop
cmp
icebp
lds
movs
out
push
daa
add
xchg
test
xchg
xchg
lds
cmc
inc
push
jne
adc
mov
into
inc
or
loope
jbe
cmp
adc
xchg
dec
lahf
push
sub
mov
ret
stos
gs
loope
call
push
sub
(bad)
shl
and
lods
xor
sahf
out
xor
push
clc
fwait
je
mov
cmc
test
mov
mov
sbb
iret
add
pusha
cmp
adc
in
fisttp
xchg
pushf
fwait
cmp
adc
enter
jne
mov
xchg
fild
int
cmp
shr
out
outs
push
push
and
pop
mov
std
fimul
fcomp
(bad)
add
rol
and
adc
into
inc
sbb
xchg
test
jmp
jl
(bad)
bound
xchg
(bad)
and
int
cmp
mov
(bad)
add
sub
(bad)
loopne
fcmovu
(bad)
push
sub
fld
sub
retf
popf
in
fwait
or
and
sahf
push
test
mov
mov
test
pop
mov
xor
xor
add
or
test
xchg
ror
mov
cmc
pop
and
js
mov
xlat
in
and
cld
mov
inc
push
mov
cli
gs
test
out
add
mov
sub
and
xchg
fwait
sti
sbb
mov
loop
adc
xchg
jmp
ja
hlt
mov
popf
add
mov
mov
shl
bound
lods
jmp
mov
cmps
int3
jae
mov
sbb
mov
mov
es
mov
fiadd
retf
push
(bad)
sti
pushf
clc
push
aaa
mov
sub
les
xor
push
push
movs
or
cmp
aad
cmps
sbb
(bad)
call
ret
imul
xor
mov
icebp
iret
cmp
movs
pop
or
test
rcl
mov
pop
data16
mov
(bad)
jno
fistp
jecxz
push
call
test
(bad)
jmp
sub
sub
movs
retf
cli
jg
loop
dec
retf
cdq
dec
je
mov
dec
mov
in
xor
jnp
dec
pop
sub
int3
or
mov
mov
push
jmp
loop
inc
jne
faddp
pop
int
test
push
jge
pusha
mov
iret
scas
aaa
fwait
push
add
sbb
pop
cmp
icebp
test
add
shl
and
ret
into
jecxz
retf
leave
pop
fscale
xor
xlat
adc
repz
fcomp
sbb
or
jecxz
icebp
ds
xor
mov
push
xchg
jge
aad
ret
test
mov
imul
icebp
aad
popa
stos
sbb
sbb
test
cwde
in
fisub
xor
mov
(bad)
(bad)
pop
jg
push
(bad)
or
in
popf
and
shl
mov
xor
xlat
push
pop
sub
out
ror
out
adc
pop
mov
xchg
lahf
stc
js
dec
cdq
adc
call
fs
xchg
daa
imul
aaa
idiv
dec
jp
cmps
jl
mov
ja
sbb
mov
pop
push
bound
and
rcr
out
stos
mov
push
stc
call
hlt
jmp
cmp
cmp
in
cmp
sar
les
sub
add
data16
mov
ins
dec
arpl
jmp
push
push
inc
add
sbb
sahf
je
stos
push
pop
cmp
les
mov
add
pusha
mov
ror
inc
push
adc
sub
cmp
ins
mov
loopne
xchg
xor
fbld
mov
mov
add
sub
add
xchg
ins
(bad)
in
leave
cdq
or
aam
cmp
adc
stos
and
mov
div
popf
call
or
mov
jp
xor
setnp
mov
cmp
cmp
pop
cwde
sar
adc
popf
aas
dec
sbb
xchg
and
das
mov
lods
add
out
mov
and
push
jmp
mov
jle
ja
dec
pop
mov
xor
(bad)
fbld
repz
retf
push
arpl
add
ret
jmp
xor
or
ds
xor
fistp
add
icebp
xchg
dec
mov
dec
pop
retf
ins
mov
mov
(bad)
(bad)
nop
xchg
ja
dec
cmp
bswap
(bad)
pop
cwde
mov
xor
or
outs
mov
pop
push
shl
call
mov
jns
jbe
std
les
mov
movs
mov
std
lock
mov
sbb
inc
cmc
inc
add
test
in
(bad)
jo
mov
retf
adc
in
imul
fldcw
cmp
push
test
(bad)
sub
call
xor
mov
neg
aaa
and
mov
(bad)
sub
(bad)
test
xor
xchg
mov
push
rcr
and
stos
sbb
test
push
and
add
test
add
fnstcw
cli
jns
or
xor
call
lods
mov
sbb
push
sbb
inc
cmp
ins
fdiv
into
jbe
clc
jg
mov
add
jge
mov
cwde
lods
or
dec
std
sbb
sub
and
or
das
xor
mov
mov
out
sub
mov
nop
aas
mov
ja
aas
test
xchg
cmps
test
jnp
mov
das
call
jmp
mov
jmp
pop
sar
ds
mov
jle
ja
scas
inc
add
rcl
and
mov
pop
or
pop
call
dec
into
cmps
loope
sbb
pop
movs
xchg
dec
addr16
loope
arpl
xor
cmp
sub
pop
pushf
outs
adc
or
scas
or
mov
push
fwait
cmp
add
jp
jae
std
aaa
pop
mov
or
lea
mov
aam
nop
jl
or
jl
xor
adc
aas
outs
jmp
mov
cmp
pop
int
mov
cdq
jbe
sbb
in
sub
mov
xchg
loope
int
cbw
fwait
xchg
cmps
mov
daa
jbe
jnp
leave
into
pusha
xchg
xor
push
sub
mov
into
cmp
or
pushf
movs
inc
jecxz
cli
jmp
push
out
stc
pop
loope
fmulp
cwde
inc
cmp
mov
retf
bound
mov
pop
mov
lods
fldcw
mov
adc
jnp
xchg
cwde
push
sbb
adc
daa
xor
jge
pusha
lar
rcr
iret
cmp
xor
mov
ss
dec
in
pop
push
mov
inc
xchg
ins
mov
dec
(bad)
ss
neg
xchg
jge
sbb
mov
addr16
icebp
mov
fisubr
jl
out
popa
outs
stos
mov
lea
iret
mov
jmp
cmp
sar
pop
mov
push
dec
lods
(bad)
scas
test
inc
enter
add
bound
(bad)
out
pop
das
cmp
sbb
pop
xchg
and
into
xchg
clc
int3
xor
sub
retf
pop
cmp
push
xchg
mov
fcmove
sub
js
and
pop
cmp
shr
push
leave
dec
shr
mov
dec
sub
cwde
xchg
adc
stos
fdiv
leave
jle
outs
arpl
mov
pop
test
jl
dec
cmps
popa
cmp
fmul
fldenv
or
xor
mov
js
push
das
mov
jb
inc
(bad)
out
ja
nop
std
cwde
mov
jbe
scas
in
xchg
loop
enter
mov
jp
jmp
(bad)
test
mov
add
out
or
sbb
sbb
pop
add
movs
jno
repnz
pop
cmps
out
shl
jge
pop
pop
shr
leave
sub
shl
retf
add
cmp
jg
dec
pop
stos
sbb
ret
xor
mov
pop
test
push
retf
xor
mov
jb
dec
dec
retf
fsubr
jmp
mul
or
jmp
fwait
test
mov
mov
repnz
inc
rcl
cwde
xchg
mov
cmp
jb
mov
pop
sbb
mov
out
in
jbe
xchg
xchg
into
sub
je
repnz
inc
arpl
xor
and
popa
cmp
sti
imul
inc
les
jge
inc
sub
mov
dec
(bad)
xchg
xor
xchg
addr16
imul
adc
out
out
inc
into
push
sub
sbb
mov
add
and
(bad)
pushf
inc
mov
sub
cmp
xadd
xchg
mov
jle
ss
or
mov
maxps
ror
add
or
int3
sahf
fisubr
adc
push
sbb
push
lock
and
sub
xor
dec
cld
mov
xchg
pop
add
in
fisubr
pop
xor
imul
lea
dec
loopne
xor
shl
and
pusha
cmp
cmp
call
data16
imul
aam
imul
ret
inc
xchg
push
mov
in
jge
push
aam
into
not
fsubrp
mov
les
int3
lock
jae
push
adc
mov
imul
mov
dec
mov
mov
adc
mov
dec
(bad)
pop
lds
and
push
test
cld
call
cmps
sahf
sti
aad
jae
fwait
xchg
cwde
data16
in
add
mov
ins
(bad)
xchg
xchg
test
mov
outs
call
pushf
ret
stos
ss
pusha
aad
pop
test
cmps
or
push
mov
or
cwde
sub
pop
inc
mov
add
test
jmp
loopne
call
sbb
cli
enter
js
mov
ss
sub
adc
mov
fidiv
fldcw
test
movs
jmp
imul
sub
fbld
mov
dec
repz
or
jns
push
dec
pop
test
xchg
js
push
or
jmp
xor
loopne
mov
clc
outs
and
pop
sbb
or
sbb
pop
dec
int
scas
js
sti
retf
push
and
adc
int3
(bad)
movs
xchg
scas
movs
push
inc
fs
clc
push
scas
popa
(bad)
or
sahf
mov
jae
fcomp
sub
icebp
mov
push
(bad)
retf
dec
mov
sbb
add
lods
mov
jbe
call
sbb
repz
loop
fs
jns
lods
pushf
sub
mov
mov
sbb
adc
add
fs
iret
xchg
(bad)
retf
cwde
imul
jbe
jmp
cmp
and
icebp
jbe
shl
sti
aam
rol
lods
les
bound
and
dec
lahf
dec
sub
mov
in
sbb
xor
imul
cwde
test
mov
ins
push
loope
sbb
and
xlat
gs
inc
push
sbb
(bad)
in
nop
aas
cmp
sub
mov
out
pop
sti
and
sub
sbb
gs
mov
push
hlt
jno
fmul
jne
repnz
inc
xchg
cli
xor
lock
outs
arpl
dec
in
cmp
ins
stos
add
mov
jno
mov
push
test
sbb
mov
int
pusha
inc
sub
xchg
push
lahf
mov
xchg
jmp
jno
call
mov
daa
mov
dec
and
xor
adc
sti
or
cdq
pusha
hlt
pop
aam
lods
sahf
pop
sbb
push
adc
push
jge
shr
loop
stos
or
push
mov
cmp
dec
add
add
adc
add
xchg
leave
mov
dec
(bad)
mov
daa
mov
out
xchg
sbb
cmps
out
xor
mov
shr
scas
inc
add
dec
pop
movs
fiadd
jmp
fdivr
jmp
xor
fmul
(bad)
mov
(bad)
cs
mov
mov
mov
xchg
mov
adc
adc
push
or
dec
jnp
xchg
(bad)
out
imul
ror
inc
aas
and
mov
mov
or
cmps
dec
int
imul
je
xchg
xor
ja
scas
lahf
sbb
mov
inc
fsub
mov
pop
cmp
xchg
bnd
call
jb
cmp
pop
jmp
icebp
sub
mov
fisubr
outs
cmps
or
gs
lods
cmc
sbb
ror
iret
lods
mov
jns
pop
and
push
push
pop
mov
jp
cmc
test
cmp
mov
jb
xchg
mov
sub
mov
loop
lahf
not
shl
pop
ret
inc
out
rcr
int
jecxz
outs
adc
ret
mov
shr
inc
int
mov
popa
inc
popf
addr16
jecxz
mov
add
xchg
sub
inc
push
int3
fcom
repz
fcmovnb
jecxz
lahf
add
in
fist
or
cmp
add
test
and
cmp
push
dec
ret
push
jb
pop
call
or
mov
and
and
dec
scas
dec
iret
sbb
bound
push
mov
jne
(bad)
retf
sbb
stos
push
in
outs
rcl
nop
inc
call
frstor
les
mov
gs
xchg
mov
mov
or
push
int
xor
retf
push
xor
mov
xchg
pop
pop
and
push
cld
mov
sahf
ins
pop
data16
test
sar
push
scas
jno
mov
sub
dec
popf
sahf
push
je
mov
inc
add
inc
inc
dec
sbb
cdq
mov
in
sbb
or
xor
icebp
movs
lods
or
fs
out
cmp
frstor
retf
mov
xchg
cmp
ins
jg
dec
lods
rcl
pop
cmp
mov
push
add
les
stos
bound
out
add
repnz
sub
into
xchg
ds
xor
xchg
in
mov
pop
outs
loopne
stc
sar
cs
dec
sbb
dec
add
in
xchg
inc
mov
push
test
bound
jae
cmp
cmps
add
out
cmps
inc
lds
xor
inc
fdivr
jae
sub
dec
push
leave
neg
int
and
cmp
cmp
popa
xor
adc
sbb
inc
push
xchg
popf
stc
mov
push
hlt
add
ja
mov
loop
pop
std
jmp
arpl
out
jne
clc
mov
sbb
mov
dec
dec
test
call
gs
ds
or
mov
mov
inc
sub
js
jmp
fldenv
outs
les
mov
mov
xor
push
out
jnp
sub
sbb
ins
mov
push
mov
jo
clc
mov
and
nop
mov
dec
pushf
cmp
xor
adc
daa
or
and
outs
outs
aaa
outs
sbb
push
xchg
test
or
adc
pop
ins
fld
xchg
pop
sbb
repz
xchg
popf
or
push
xchg
push
cmp
or
scas
add
jmp
or
xchg
inc
out
jmp
sbb
sbb
aad
sbb
shl
(bad)
ds
adc
test
sub
xchg
stos
adc
lea
dec
add
pusha
and
es
cmp
cli
sbb
loopne
or
mov
jne
cmp
or
mov
mov
fadd
aaa
ins
xor
das
adc
inc
aad
inc
fisubr
mov
fwait
lods
jbe
stos
jecxz
sahf
sbb
inc
outs
(bad)
cwde
jno
inc
and
data16
fimul
movs
out
rcl
(bad)
ja
mov
pop
inc
pop
mov
adc
rol
xor
mov
xor
popf
stos
and
mov
push
push
mov
sbb
call
adc
test
ins
cmp
inc
mov
leave
popa
mov
adc
pop
and
icebp
xor
pop
cmc
test
imul
test
cmps
cmp
loope
xlat
retf
add
mov
sti
mov
add
loope
loopne
xchg
call
ret
call
sahf
pop
sbb
xor
or
push
cmp
inc
add
xor
pusha
xlat
xchg
enter
push
aam
and
scas
add
adc
sub
pop
inc
outs
sub
iret
aad
mov
mul
es
fistp
popa
and
cmp
mov
sar
lahf
add
movs
popa
aaa
fcomp
int
sbb
lock
jge
test
rol
xor
jle
daa
popf
mov
pushf
ins
cmp
scas
stos
fnstsw
test
push
jbe
mov
pop
aaa
jge
mov
and
popa
outs
test
into
fcmovnb
das
dec
or
inc
shr
lods
inc
(bad)
fadd
push
pop
das
mov
shl
cmc
xlat
dec
clc
mov
and
cmp
jns
es
adc
mov
sub
sbb
xor
sub
(bad)
inc
jle
inc
fcom
dec
sbb
mov
sub
sbb
popa
enter
ret
popf
outs
retf
jbe
pop
test
inc
out
mov
pushf
xchg
rcr
push
xchg
sahf
loope
scas
(bad)
loopne
stos
sub
xchg
test
imul
adc
xchg
xchg
mov
sub
cmp
aas
jmp
movs
push
push
enter
sahf
js
adc
lahf
xlat
xor
ss
movs
mov
das
pop
push
daa
mov
push
pushf
lea
xor
mov
pop
mov
sahf
test
mov
movs
into
popa
cmc
(bad)
fnstcw
jbe
popf
or
outs
lea
mov
test
xchg
xor
pop
adc
xor
or
fs
sti
test
sub
icebp
ss
ins
mov
nop
mov
pop
lods
neg
mov
les
jl
jecxz
leave
adc
shl
stos
jo
test
inc
xchg
adc
enter
sbb
mov
push
lods
jecxz
fidivr
jl
or
retf
(bad)
jl
cmc
mov
xchg
cmp
dec
ret
leave
in
xor
adc
int3
mov
shr
inc
repnz
je
mov
int
aas
lds
xchg
outs
retf
fdiv
mov
inc
shl
in
inc
cli
cmp
inc
ss
dec
sub
(bad)
in
nop
pop
scas
cs
sahf
push
(bad)
retf
gs
mov
xor
popf
outs
mov
out
scas
or
int
mov
add
pop
jg
pop
push
sub
loope
pusha
dec
jae
xchg
add
int
lds
push
mov
and
inc
(bad)
call
pop
push
push
les
cld
out
xchg
mov
jmp
test
inc
push
push
loop
fadd
pop
dec
jle
sbb
movapd
ret
andnps
imul
shl
cmc
shl
fimul
add
or
outs
and
adc
mov
jg
xor
les
out
dec
std
ror
jp
outs
lea
icebp
test
jns
js
or
inc
jo
jo
dec
pop
lahf
cmp
pop
mov
pop
call
sub
pop
or
adc
cmp
mov
mov
mov
je
fsubr
fiadd
add
adc
lahf
mov
ja
clc
packssdw
jo
push
cld
mov
jmp
(bad)
sbb
xchg
push
dec
lds
sub
fs
pop
adc
jg
jge
mov
rcr
adc
add
xor
mov
adc
cmp
scas
mov
rcr
je
in
mov
mov
ins
iret
in
jle
sbb
mov
sbb
nop
int
adc
add
inc
xchg
daa
mov
repz
call
ja
cmp
jbe
or
inc
sub
shl
in
and
es
je
cmps
dec
mov
fld
lock
cwde
and
or
dec
in
sub
add
and
fstp
inc
and
push
popf
jmp
jmp
and
mov
pop
jp
xchg
(bad)
pop
loope
push
(bad)
inc
test
scas
and
xor
ret
aas
out
inc
or
push
dec
add
ins
add
sti
cmps
(bad)
call
sub
jle
mov
mov
ds
sub
jecxz
popa
sub
push
cmps
jns
cmp
cli
and
in
sbb
call
dec
cmp
sti
jbe
jge
mov
dec
movs
js
push
pushf
fnstsw
mov
inc
mov
pop
jbe
jmp
data16
push
int
mov
arpl
adc
dec
in
gs
adc
psrad
pop
xchg
imul
data16
aaa
xchg
test
inc
pop
mov
cwde
in
xor
cmp
dec
or
cmps
mov
jnp
sbb
jo
ds
dec
sub
mov
imul
(bad)
mov
test
jg
jecxz
jae
in
and
ja
vpunpcklwd
mov
cmp
nop
xchg
arpl
xchg
shl
ret
inc
adc
(bad)
shr
stc
adc
jb
mov
mov
sbb
fcomi
(bad)
sub
(bad)
mov
leave
adc
adc
adc
fs
xchg
mov
pop
inc
mov
cmp
inc
(bad)
mov
dec
mov
test
movs
arpl
cld
sub
std
mov
xor
xchg
xor
je
adc
call
rcr
xchg
fwait
push
xor
cli
mov
hlt
dec
mov
jge
pop
in
jecxz
in
jns
mov
mov
sbb
push
push
movs
xadd
fcomp
aam
xchg
leave
cmp
out
sahf
dec
(bad)
shr
pop
jne
push
mov
cli
inc
cmps
jl
push
cmp
cmp
test
or
sub
test
data16
xchg
or
xchg
add
dec
and
int
cld
test
hlt
out
test
idiv
jle
fld
push
push
or
cmp
push
std
movs
cmps
and
cmp
out
mov
xchg
or
mov
mov
mov
inc
arpl
hlt
pop
popa
data16
scas
mov
ja
test
in
adc
dec
mov
jns
dec
dec
cmp
fist
push
xchg
adc
mov
ror
dec
inc
ret
int
popf
ret
mov
das
or
dec
jle
loop
jno
movs
and
outs
ins
movs
sahf
xchg
and
in
jne
pop
js
in
cmps
outs
pusha
add
mov
js
ret
retf
adc
xchg
(bad)
ret
push
inc
cmp
imul
outs
jb
mov
pushf
adc
push
mov
push
loope
adc
imul
mov
mov
cmp
push
cld
adc
xchg
adc
push
ins
adc
mov
jne
leave
push
data16
(bad)
mov
cmp
mov
enter
addr16
or
pop
dec
fadd
cli
call
mov
das
add
gs
ss
push
mov
sub
jle
jl
adc
dec
in
loopne
movs
xchg
sbb
ds
pop
cmp
xor
lods
sbb
push
dec
mov
and
pushf
push
lds
adc
call
das
mov
aas
mov
ins
es
jbe
retf
rcl
xor
adc
pop
pop
cmp
ja
push
jecxz
push
adc
add
inc
sbb
push
or
ss
mov
sub
loop
inc
pop
lds
stc
jae
test
(bad)
loop
push
repnz
mov
arpl
lods
add
xchg
lea
fisttp
retf
jge
in
aas
add
sti
fsubr
mov
or
imul
mov
int3
adc
cmp
push
icebp
call
sbb
xlat
or
mov
mov
fisttp
mov
push
and
mov
adc
adc
(bad)
fnstcw
mov
adc
mov
ficom
(bad)
les
idiv
xchg
lea
sbb
and
mov
mov
and
jnp
pop
aad
cmp
mov
push
add
nop
in
and
pop
dec
out
popf
lock
out
xor
xor
or
ficom
or
clc
bound
out
and
hlt
into
mov
xchg
or
sti
dec
jns
int
cmp
shr
xchg
jge
push
pusha
sbb
ins
sahf
enter
jecxz
pop
mov
jae
(bad)
into
and
int3
iret
xchg
mov
sub
jecxz
xchg
inc
stos
out
xor
inc
sub
xor
lds
popa
push
ficom
loop
pusha
cs
xor
sahf
cmp
imul
sbb
dec
(bad)
or
dec
xchg
sahf
retf
leave
mov
retf
jae
pop
lods
pop
inc
sar
mov
sahf
cmp
movs
je
icebp
(bad)
pop
and
add
(bad)
je
lahf
add
sbb
ror
adc
mov
push
push
sbb
mov
adc
push
jmp
stos
stos
add
movups
mov
mov
cli
jmp
push
jbe
jns
sbb
sbb
xor
mov
jle
fs
cli
js
xor
cmp
mov
ins
fwait
repnz
sub
add
outs
mov
pusha
fcmovnbe
loop
call
cwde
scas
pop
fiadd
mov
pop
in
adc
and
mov
or
mov
add
lods
call
repnz
in
sar
mov
push
fcmovu
jp
sub
jg
xchg
int3
retf
inc
sbb
jne
push
cmp
and
cmp
iret
adc
lods
inc
sbb
sub
outs
dec
arpl
cmps
xchg
fs
add
(bad)
bound
imul
mov
dec
pop
arpl
and
sbb
enter
sti
mov
and
jo
cmp
hlt
test
mov
test
inc
or
iret
popa
jbe
jne
test
adc
jmp
cwde
sub
sahf
jns
push
fnsave
int
cmp
les
mov
sbb
ret
cmp
out
and
jle
and
(bad)
jne
inc
jns
add
adc
dec
sbb
fwait
adc
movs
leave
test
add
push
xchg
pop
jnp
test
push
mov
fwait
les
movs
icebp
dec
sbb
outs
xor
push
push
ja
xchg
test
dec
cmc
push
add
sar
ja
xlat
push
jmp
push
xor
jp
inc
push
ficom
das
dec
mov
mov
lods
(bad)
cmovg
mov
ret
popa
movs
(bad)
sub
jmp
inc
lahf
jne
fiadd
data16
call
ds
add
int
gs
and
jae
(bad)
mov
or
cdq
loop
and
es
add
das
xchg
call
mov
cmp
jmp
ja
stos
sbb
mov
ja
scas
lods
xchg
ret
mov
outs
shr
outs
pop
cld
test
sub
mov
in
xchg
dec
pop
cmp
jno
js
mov
cmp
sub
or
pop
dec
stos
stos
fwait
shr
dec
push
int3
and
sbb
inc
outs
scas
cmp
adc
ffree
stc
dec
gs
inc
push
cmp
pop
arpl
jb
push
mov
rol
jne
mov
std
(bad)
xchg
mov
pop
iret
ss
mov
in
movs
sbb
cmp
mov
mov
mov
div
aas
sbb
std
outs
stos
mov
adc
fnsave
dec
retf
add
shl
inc
xor
or
lds
stos
btr
js
aad
sahf
cmps
xor
popa
loop
mov
in
dec
and
arpl
sbb
jo
sub
std
and
popa
and
xchg
pop
add
sub
mov
and
jne
cmp
pop
xor
mov
retf
mov
stos
loopne
xor
mov
mov
pop
ja
sbb
push
pop
sbb
adc
sqrtps
inc
int3
jecxz
dec
mul
or
(bad)
test
loope
cmp
scas
mov
inc
loope
push
lahf
(bad)
fisub
xchg
mov
fstp
mov
push
xor
push
iret
(bad)
sub
lds
inc
xchg
arpl
lods
(bad)
ss
dec
mov
mov
xor
imul
mov
cmp
dec
mov
cmps
mov
or
fwait
outs
(bad)
data16
imul
add
or
inc
fadd
mov
mov
fucomp
xchg
jmp
xor
sub
inc
ffree
fiadd
push
sbb
jmp
or
out
cwde
lds
cmp
into
mov
jne
jmp
mov
sahf
xor
or
lods
lahf
cmp
pop
out
pop
cmp
pop
scas
sbb
dec
xchg
and
jmp
mov
mov
jo
fcom
pop
jne
inc
in
pushf
sub
pop
fldenv
out
std
push
mov
push
mov
pop
ins
scas
xor
pop
ror
xor
ret
dec
mov
mov
daa
enter
add
add
sub
jp
(bad)
repz
pop
mov
dec
fwait
add
pop
mov
pop
dec
xchg
nop
xor
int
xchg
ins
xchg
rol
(bad)
xor
and
int
(bad)
in
xchg
pushf
push
jb
ins
(bad)
fadd
cli
fwait
imul
retf
jle
add
mov
inc
rol
js
fstp
sub
bt
mov
push
popf
pop
call
lock
inc
xchg
dec
push
pop
aad
and
movs
and
in
cmp
ret
in
sbb
pop
jge
push
jecxz
int
rol
mov
dec
pushf
mov
mov
aas
add
fist
repnz
sti
pop
or
pop
pop
mov
fisub
push
clc
jae
jo
js
add
int3
ja
test
dec
les
test
in
popa
mov
js
dec
ret
dec
adc
add
loopne
xor
pop
pop
jge
mov
mov
enter
mov
cmp
pop
or
aas
cmps
ror
retf
fucom
sahf
dec
cmp
dec
sub
das
push
dec
frstor
test
mov
popa
out
push
cmp
jle
or
mov
out
add
mov
(bad)
push
imul
imul
pop
aad
nop
sar
xchg
sbb
dec
pop
sub
mov
ds
stc
xchg
dec
rol
or
xchg
rcl
fsubr
sahf
xlat
xor
jmp
mov
pushf
pop
outs
jne
inc
sahf
dec
ret
dec
push
in
cmp
fdiv
mov
lock
stc
pop
pop
in
sbb
in
dec
mov
jmp
dec
cmp
adc
dec
test
dec
cmp
and
push
repz
data16
adc
and
mov
ret
ins
outs
push
adc
pop
xchg
popf
mov
inc
push
stc
jnp
stos
mov
xchg
std
enter
jp
sti
stos
jle
gs
mov
mov
iret
test
push
mov
nop
jg
das
dec
call
mov
xlat
call
inc
(bad)
jae
jnp
and
jmp
sbb
add
mov
fsubr
jae
cld
jmp
jge
cld
cmp
sbb
adc
dec
js
ins
ss
add
push
mov
in
cmp
pop
in
push
push
sub
nop
addr16
fistp
xchg
inc
mul
and
imul
popa
pushf
test
or
cmp
lahf
mov
inc
mov
cdq
mov
adc
sbb
es
push
pop
scas
nop
adc
int
mov
or
cmp
out
add
in
neg
ins
adc
sbb
xchg
xchg
dec
scas
in
pop
xchg
xor
mov
jp
push
sub
retf
xchg
sbb
dec
push
(bad)
or
jp
sub
clc
out
test
outs
adc
add
or
jge
mov
pusha
out
ins
mov
into
pop
test
adc
lar
in
arpl
or
sti
sete
mov
sbb
pop
int
push
movs
pop
xor
dec
out
mov
mov
pusha
and
pop
mov
dec
fdiv
sbb
mov
int3
cmp
mov
xor
jl
cwde
cdq
mov
test
int
rcl
sbb
and
sbb
xchg
and
or
out
pop
movs
mov
xor
dec
or
gs
test
dec
bound
cmp
movs
shl
or
lea
push
push
ja
iret
mov
jge
sbb
ret
inc
mov
mov
jbe
cdq
adc
mov
pushf
lods
mov
in
inc
pop
pop
or
sbb
adc
xchg
ret
inc
aam
in
jle
stos
push
sub
adc
icebp
mov
rol
stos
outs
imul
mov
sub
fucomp
lds
mov
jne
fsubrp
pop
lods
repnz
or
retf
addr16
cs
mov
ror
cld
adc
daa
pusha
test
clc
fs
cmp
mov
inc
test
sbb
inc
push
mov
pop
pop
inc
(bad)
inc
xor
jmp
iret
dec
int3
sub
daa
mov
rcl
xchg
jno
push
adc
test
inc
add
xchg
aad
fidiv
xchg
fimul
rcr
mov
call
cmp
das
lods
xchg
je
inc
xchg
sbb
dec
xor
inc
and
sbb
jno
jns
push
xchg
xchg
push
mov
ret
aaa
icebp
xor
cmp
xor
inc
fld
pop
retw
in
add
push
test
ret
je
mov
sbb
and
(bad)
lods
aam
xchg
xchg
ror
outs
sub
pushf
xchg
test
sub
dec
retf
push
div
push
adc
xchg
mov
aaa
cmp
mov
adc
adc
sar
hlt
loop
pop
and
xor
fdiv
add
imul
pop
jmp
jge
dec
clc
jmp
call
mov
loop
repz
ss
adc
in
fsub
push
mov
stos
gs
sbb
test
call
add
pop
pop
xor
enter
das
arpl
loop
test
jns
jge
mov
movs
das
add
add
xchg
adc
pop
ret
cmp
xchg
(bad)
sub
xlat
sti
popa
xchg
shl
ins
rol
push
retf
cmp
dec
pushf
xchg
cmp
xor
pop
(bad)
adc
es
test
int3
repnz
lock
xor
and
sbb
pop
pop
aaa
test
sbb
in
or
cmp
test
xor
shl
fs
jge
dec
int
push
std
shl
loop
scas
adc
jecxz
and
adc
pop
jge
dec
loopne
cmp
or
loopne
cmps
(bad)
hlt
test
mov
gs
loopne
add
in
loopne
jle
and
test
push
xor
repnz
call
mov
and
mov
nop
jl
addr16
mov
jp
jns
push
xchg
addr16
jb
loope
cmc
leave
dec
mov
adc
rcl
movs
jge
mov
pushf
jecxz
xor
dec
dec
jnp
mov
xlat
lods
retf
sbb
mov
mov
or
(bad)
ror
stos
cdq
cmps
jl
xor
ds
cmps
mov
cmp
ins
or
add
jle
mov
xlat
inc
std
ins
fwait
stos
ror
popa
xor
repnz
cmp
fsubrp
sbb
imul
mov
movs
call
sti
xchg
test
sbb
cdq
call
fnstenv
jo
sub
adc
test
jg
push
jmp
jbe
std
test
ret
mov
lock
(bad)
cld
mov
and
cs
rcr
cmps
mov
push
in
xor
sar
jecxz
sub
and
cmc
pop
xor
mov
push
or
xor
xchg
and
xchg
xor
jle
cli
rol
cmp
push
into
xchg
inc
jle
mov
aam
cmp
(bad)
xor
int3
pop
add
int
lods
jge
pop
mov
mov
lea
std
mul
inc
sub
bound
ins
cs
xor
lahf
mov
push
inc
mov
scas
inc
cmp
out
dec
ss
outs
call
push
add
rcl
push
add
lods
and
shl
sbb
lods
pusha
pop
jmp
popa
inc
dec
(bad)
pop
mov
retf
out
aad
mov
adc
sti
gs
sbb
pop
es
xchg
and
ins
jns
dec
mov
lds
fldenv
sbb
movs
nop
sar
out
cwde
rcr
jns
loope
addr16
out
fsubr
adc
call
fst
cs
aaa
pop
xchg
and
(bad)
cmp
cmps
in
ins
and
push
jl
inc
fisub
mov
push
retf
sbb
mov
stc
addr16
pop
mov
mov
push
scas
xor
sahf
xor
fmul
mov
fcmovnb
add
retf
cli
test
ret
push
cdq
aas
xchg
inc
out
mov
jp
test
jmp
rol
out
outs
xchg
sub
xchg
mov
test
inc
xchg
bound
mov
int
(bad)
sar
jb
(bad)
cmc
(bad)
jl
adc
dec
pop
sub
bnd
xchg
imul
mov
cmp
push
enter
mov
add
mov
mov
mov
jo
stc
in
leave
cwde
out
xor
stos
pop
sbb
jp
xor
sbb
pop
pop
push
xor
stc
adc
inc
test
dec
lahf
jbe
push
or
mov
xchg
ret
aam
sub
(bad)
xlat
(bad)
lods
dec
out
rcr
scas
sti
movs
and
js
test
sub
mov
dec
fs
sbb
adc
add
jns
dec
loop
outs
test
xchg
(bad)
sub
xor
adc
push
sti
fwait
inc
(bad)
mov
das
leave
scas
add
mov
lea
inc
gs
nop
fld
adc
(bad)
jbe
mov
dec
pop
ins
pop
out
add
cmp
sub
push
shl
mov
es
xor
or
mov
adc
stos
mov
cdq
lock
test
sahf
fisttp
push
mov
jl
hlt
icebp
pop
inc
je
pushf
test
jae
add
pop
call
in
pop
ss
cdq
ret
xor
cli
xor
out
rcr
jle
in
sbb
jo
int
push
xchg
rcl
mov
sbb
gs
lods
and
aaa
pop
or
loopne
retf
cs
(bad)
sbb
or
xor
xchg
leave
lea
jno
dec
addr16
lods
inc
mov
pop
add
push
lods
(bad)
or
sbb
sub
jge
or
movs
push
xor
ss
push
std
mov
dec
leave
sbb
fidiv
pop
in
pop
out
jns
sbb
sbb
and
xlat
loopne
cmps
stos
sahf
xlat
adc
rcl
or
std
sbb
add
or
pusha
test
stos
adc
cmc
add
movs
dec
cli
jle
mov
xchg
adc
push
add
xchg
out
imul
(bad)
les
scas
jnp
scas
jmp
js
mov
loop
test
xchg
sbb
test
push
mov
and
and
sbb
jecxz
xor
rcl
xor
jmp
sbb
imul
dec
xor
sub
shl
aad
cld
or
xchg
mov
mov
pop
inc
or
push
lahf
call
lods
pop
cmp
xchg
add
cmp
xchg
stos
mov
iret
mov
sbb
pop
cmp
loop
(bad)
adc
stc
pop
test
push
test
add
movs
pushf
nop
aad
ja
mov
cs
mov
repz
hlt
out
ins
or
test
fmul
and
fbstp
ret
sahf
sub
cli
imul
ss
jb
mov
in
push
retf
(bad)
out
test
das
push
adc
dec
lds
stos
jl
or
iret
test
push
sbb
xor
in
xor
bound
inc
dec
mov
dec
mov
pop
xor
cmp
cmp
xor
bound
or
(bad)
out
out
nop
outs
sub
mov
les
fild
inc
test
enter
xor
jg
in
xor
mov
cmp
xor
inc
mov
jle
ficomp
xchg
mov
ret
div
aam
scas
(bad)
repz
stc
std
lahf
inc
adc
xor
pushf
jle
fwait
cli
movs
jne
ret
sbb
inc
aaa
or
mov
push
mov
clc
pop
leave
and
mov
retf
outs
pop
and
scas
push
scas
ret
iret
aas
cwde
arpl
test
inc
repz
sti
mov
jmp
in
jl
out
stos
dec
mov
cmp
cdq
push
loope
test
test
imul
inc
aam
mov
cmps
xor
and
enter
add
leave
retf
cmp
add
pop
mov
mov
inc
movs
dec
mov
mov
pop
and
sub
js
jg
lods
and
sbb
ja
nop
or
rol
xor
inc
inc
or
loope
adc
inc
mov
test
xor
imul
jecxz
mov
scas
les
jecxz
dec
idiv
inc
cmp
int
mov
mov
shr
jmp
push
fbstp
(bad)
mov
jmp
int
dec
mov
sub
fs
js
pop
stos
cmp
push
arpl
pop
fstp
inc
aam
add
push
ret
adc
test
(bad)
repz
int
das
fcmove
ja
or
sub
test
and
and
and
nop
pop
xor
or
rol
fdiv
mov
mov
in
xchg
dec
inc
test
sbb
inc
ret
cmc
push
inc
aam
jecxz
aad
jl
enter
xchg
jmp
inc
retf
xor
aaa
(bad)
sbb
ss
mov
out
jo
fist
paddsb
jns
inc
cwde
retf
vpsubusb
push
gs
push
sbb
shl
ror
popa
sbb
mov
movs
and
cld
test
xchg
inc
sub
in
and
jne
stos
popa
jp
outs
dec
mov
jno
xchg
sub
mov
ror
ds
hlt
outs
addr16
sub
aaa
in
dec
mov
mov
cmp
mov
dec
add
stos
fisub
dec
ss
pop
mov
addr16
fs
int3
cli
jb
sub
into
sahf
inc
push
jg
mov
cmp
xor
mov
cmp
cwde
stos
(bad)
test
jo
pop
inc
and
rol
jg
cmp
lds
xlat
adc
sub
sub
ds
movs
nop
les
ja
push
jge
xchg
inc
(bad)
xchg
in
in
push
inc
sub
cmc
dec
dec
push
mov
(bad)
btc
xor
test
(bad)
mov
sub
mov
sbb
cs
push
inc
or
jl
shl
jmp
js
push
lods
and
sbb
or
jg
cwde
cmc
daa
ret
(bad)
lahf
push
pop
dec
dec
imul
sub
mov
loopne
popa
xchg
dec
rcl
int
stos
cmp
(bad)
push
dec
sbb
lock
mov
jo
and
sar
push
jne
push
sbb
daa
or
adc
ds
adc
dec
push
cmp
test
mov
(bad)
and
inc
dec
jg
aas
ins
hlt
pop
mov
jecxz
adc
shl
pop
aaa
push
scas
movs
rcr
fdiv
dec
dec
sbb
add
rcl
arpl
ffreep
mov
enter
ret
sub
jae
mov
dec
cmp
daa
pusha
sbb
leave
or
xchg
aam
test
aad
sbb
cmps
ret
shr
arpl
mov
or
mov
dec
lods
retf
dec
fisub
jae
cmps
xor
jg
xchg
rcr
jg
das
(bad)
in
or
pop
jne
dec
(bad)
jge
fstp
addr16
push
sub
mov
xor
dec
fadd
les
inc
pop
ins
adc
pushf
sbb
cmp
pop
xchg
ret
add
mov
ja
add
loopne
sub
imul
ret
push
jg
sub
mov
pushf
lahf
mov
mov
adc
inc
push
inc
cmps
cs
dec
mov
ja
inc
jbe
inc
pop
outs
jge
les
cmps
inc
push
lea
not
inc
(bad)
out
ins
push
sub
xchg
adc
sbb
xlat
pop
xchg
fmul
jmp
add
push
(bad)
mov
cmp
mov
ret
mov
jo
test
mov
add
outs
dec
movs
xchg
push
pushw
inc
loopne
mov
jge
cli
cmp
fisub
iret
push
aad
movs
dec
setl
sahf
lods
dec
or
inc
jp
enter
sub
sub
jle
mov
clc
dec
cmp
in
fisttp
jae
dec
stos
or
cdq
ror
or
or
bound
mov
sbb
jno
pop
pop
scas
pop
mov
int
add
inc
pop
div
clc
jge
repz
stos
sub
loopne
mov
inc
rcl
adc
into
mov
inc
ds
xchg
fisub
clc
icebp
movs
shl
cmp
adc
xchg
repnz
loop
pop
adc
ret
outs
mov
lods
jbe
aaa
mov
jns
pop
aad
imul
mov
fwait
cmps
cmp
mov
(bad)
adc
(bad)
jae
inc
add
aad
rep
ins
retf
retf
pop
inc
jmp
aas
adc
add
jne
cmp
mov
mov
mov
cwde
(bad)
xlat
test
pop
xchg
stos
jo
(bad)
fisttp
add
jmp
inc
retf
cdq
pop
lds
adc
fwait
dec
mov
or
lods
nop
jb
gs
xor
mov
sar
outs
ins
and
mov
and
imul
and
arpl
mov
mov
jg
mov
xchg
cli
call
ret
adc
push
mov
pop
aad
sbb
addr16
loope
call
jmp
inc
test
sbb
mov
jnp
cmps
and
cs
jmp
daa
ins
cmps
div
icebp
xlat
aaa
push
sbb
xchg
push
movs
pop
pop
loop
cmp
stos
and
mov
add
cmp
stos
jp
popaw
(bad)
fadd
outs
pusha
std
mov
sub
aam
mov
int3
dec
sbb
and
pop
test
sti
push
aaa
push
popf
adc
stos
mov
sub
xchg
pop
xchg
pop
pop
inc
sub
(bad)
fisub
mov
sbb
push
test
cmp
inc
das
adc
xchg
clc
sbb
ds
mov
cs
mov
pop
pop
aam
cwde
inc
jb
int
sti
add
cmp
out
jle
std
loope
jae
push
test
imul
inc
push
dec
cmc
and
bound
daa
jle
mov
pushf
ret
in
sub
cli
out
fwait
sar
add
inc
movs
dec
pop
inc
sbb
cmp
out
jns
push
in
adc
shr
xchg
movs
mov
sbb
add
push
jno
sahf
mov
mov
sahf
outs
fdivr
mov
push
data16
adc
call
enter
out
popa
push
test
test
jg
mov
mov
(bad)
aaa
scas
fiadd
neg
xor
cli
fmul
add
popf
add
push
stos
push
mov
mov
mov
xchg
and
cdq
call
xor
test
data16
xchg
inc
jle
pusha
hlt
sbb
pop
clc
ja
aad
jmp
xchg
outs
test
sub
pop
sti
mov
jge
movs
xlat
cmc
pop
test
out
(bad)
das
push
lods
mov
and
(bad)
and
mov
sbb
iret
mov
mov
es
dec
sub
and
cmps
pop
jae
inc
and
add
add
mov
in
push
pop
jmp
fild
or
cmp
or
and
ret
xchg
aam
mov
jne
int3
sbb
repnz
cld
pop
mov
mov
or
(bad)
test
dec
mov
enter
sbb
shl
mov
dec
push
mov
inc
repz
sti
aaa
sahf
cdq
and
rcr
iret
mov
cwde
mov
pusha
mov
pop
pop
dec
add
data16
into
xchg
sub
jl
sbb
add
pushf
(bad)
push
jae
imul
out
mov
lds
mov
adc
add
pop
pop
int3
inc
mov
das
jecxz
pop
pextrw
sub
in
das
pop
xor
cld
jns
pop
xchg
adc
and
(bad)
xor
in
inc
inc
not
out
dec
and
js
inc
pop
push
jns
lods
scas
lods
pop
adc
test
or
jg
jb
stos
fadd
xchg
dec
and
ror
add
inc
push
xor
ret
out
push
pop
add
jmp
arpl
jne
in
xor
xor
mov
xchg
pop
adc
adc
icebp
lea
xor
sbb
mov
shr
ss
push
cmp
sub
and
pop
movs
adc
xlat
or
dec
mov
test
sub
mov
ds
retf
fisttp
ds
jns
shl
cld
inc
fstp
dec
aam
test
ret
stos
xor
imul
lahf
cmp
mov
and
jns
xor
cdq
inc
mov
into
mov
push
hlt
ja
xchg
mov
outs
cmp
mov
jne
jg
jnp
les
and
dec
sub
adc
add
ds
movs
out
sbb
push
ret
pusha
sahf
mov
sar
inc
neg
neg
sub
push
arpl
lea
(bad)
test
push
call
sub
(bad)
shl
jo
inc
xchg
arpl
(bad)
lods
push
mov
fimul
xlat
pop
int
mov
loop
fbld
dec
dec
push
jnp
rcl
test
addr16
pop
bnd
js
aas
pusha
loope
jle
mov
(bad)
xchg
cld
call
add
pop
pop
inc
dec
test
push
or
or
popf
mov
fs
pop
in
xor
je
jecxz
aad
or
sar
push
jge
leave
and
test
cmp
inc
loop
mov
dec
mov
mov
fwait
cld
movs
xchg
icebp
mov
pop
leave
fcomp
je
pop
jecxz
cmc
(bad)
jb
pop
xchg
(bad)
cmp
mov
sar
xor
mov
(bad)
cwde
(bad)
aaa
add
sbb
enter
push
adc
mov
(bad)
adc
out
fistp
jmp
add
pushf
xchg
inc
fdivr
out
out
xchg
jmp
fdiv
or
call
inc
cmp
aas
mov
xchg
mov
outs
outs
lea
add
mov
push
jle
dec
add
aas
mov
jnp
or
jb
call
push
jo
mov
in
push
push
jne
inc
fs
push
or
xor
mov
das
push
leave
lods
push
pushw
mov
cmp
rcr
fstp
retf
(bad)
sbb
sbb
loopne
imul
inc
mov
retf
hlt
mov
or
jl
sbb
pop
sub
pop
xor
add
add
mov
dec
mov
psrad
mov
xlat
mov
mov
sub
pop
andnps
xchg
les
nop
cmc
adc
in
and
adc
ins
enter
or
cld
fcomp
test
mov
sahf
das
adc
push
and
dec
cmp
icebp
mov
push
(bad)
or
jne
dec
ror
push
add
sub
adc
dec
push
daa
dec
push
das
int
in
cmc
dec
popf
shl
push
mov
pop
test
iret
jg
js
ja
inc
inc
repnz
fcomp
dec
jo
jl
sub
jbe
inc
inc
(bad)
add
std
and
mov
or
adc
and
mov
add
xor
jns
add
dec
js
mov
pop
mov
shl
ins
jnp
pop
lea
add
cmp
sbb
push
jmp
xor
test
inc
dec
fisubr
cmp
cmp
pop
mov
push
ds
imul
jnp
xor
jle
sahf
xchg
pop
pop
gs
push
mov
jp
jae
retf
push
xor
fs
push
pop
push
test
or
mov
dec
fisttp
mov
ret
mov
aad
and
mov
outs
push
xor
mov
mov
pop
xchg
std
adc
imul
call
fld
push
or
jne
test
fdiv
jp
push
xor
jg
cwde
mov
fisubr
jo
loope
retf
jns
das
mov
in
aam
lods
push
dec
adc
xchg
xor
push
loopne
repnz
rol
pop
jg
out
into
out
cs
jp
sbb
push
jge
dec
repnz
out
inc
pop
shl
outs
pop
retf
xor
lea
sbb
jl
ret
sub
and
jnp
xchg
or
mov
test
add
or
(bad)
mov
push
jg
adc
inc
jne
xlat
psllw
mov
cmp
outs
out
sub
push
cmp
mov
shr
sbb
mov
jae
cmp
jb
push
(bad)
hlt
loopne
jnp
(bad)
sbb
adc
adc
jbe
pop
mul
aam
sahf
push
mov
mov
rol
dec
pop
xchg
xchg
or
nop
(bad)
cmc
pop
and
ins
pop
mov
ret
push
and
mov
push
stos
dec
and
sub
iret
xchg
ror
push
outs
xchg
ffree
icebp
xor
cmp
std
jmp
loope
into
push
pop
call
in
adc
jg
pop
push
and
sbb
fild
mov
jmp
push
or
inc
add
sti
icebp
dec
pop
rcl
push
sbb
adc
pop
shl
or
inc
fcomp
sub
cli
xchg
sub
rol
dec
js
fistp
aaa
cmps
mov
add
pop
push
jo
xchg
or
mov
in
out
mov
push
xchg
or
mov
fldcw
adc
rcl
cli
xor
push
aaa
cmp
fcomp
mov
out
repnz
cmp
adc
adc
mov
xchg
xlat
jg
jo
mov
and
xor
xor
(bad)
(bad)
je
stc
push
inc
retf
loopne
inc
(bad)
mov
pop
into
in
movs
adc
je
xchg
lods
in
ret
pop
xchg
and
stos
pop
jecxz
sub
(bad)
lds
lods
stos
sbb
or
or
fs
sub
cmp
popf
xor
les
inc
sbb
jne
push
imul
test
mov
xor
aas
dec
jae
ds
in
cmp
retf
mov
nop
in
inc
inc
and
inc
adc
(bad)
dec
adc
xlat
jne
push
sbb
(bad)
popf
(bad)
pushf
test
(bad)
mov
xchg
ja
inc
push
iret
and
mov
pop
(bad)
jle
pop
and
or
int
jmp
push
pop
aas
test
push
inc
pusha
in
mov
jbe
stos
cmp
inc
pusha
dec
pop
xlat
dec
adc
(bad)
mov
movs
jns
jnp
jne
mov
mov
ret
inc
or
mov
call
movs
sub
jle
add
xchg
dec
ret
enter
adc
adc
ins
pop
push
sahf
or
or
push
icebp
dec
icebp
das
shl
sar
cli
test
and
rol
lahf
lea
movs
clc
inc
jge
mov
nop
test
inc
inc
dec
rol
xchg
sbb
cmp
push
fisub
mov
xor
cdq
sbb
fisub
arpl
sub
addr16
mov
push
adc
out
sti
xor
cwde
jecxz
js
hlt
add
and
sbb
inc
sub
out
xchg
pop
inc
rol
loope
loopne
xor
fstp
dec
ja
push
retf
stos
mov
jnp
xchg
loop
mov
push
ror
(bad)
push
popa
dec
push
test
mov
mov
retf
icebp
jl
int
movs
bswap
in
jmp
jnp
test
rcr
ret
inc
inc
adc
pop
and
les
stos
or
cmp
mov
mov
lods
mov
and
jge
sbb
(bad)
xor
adc
adc
cld
frstor
dec
sti
in
rcl
pop
or
xlat
and
imul
sbb
push
in
(bad)
int
out
or
mov
lahf
test
jbe
es
inc
cmp
loop
inc
(bad)
pop
mov
mov
and
jns
das
sbb
add
mov
lock
out
(bad)
dec
mov
call
imul
mov
and
sbb
into
adc
jno
pop
pop
add
mov
ret
mov
int3
xlat
add
cmp
in
mov
jae
inc
xlat
mov
repz
shl
in
push
sbb
cmp
xor
(bad)
call
xor
sbb
mov
sub
inc
cmp
mov
sub
add
and
sub
cld
mov
and
(bad)
mov
aas
push
add
cmp
inc
stc
mov
ds
mov
loop
pop
dec
mov
repnz
add
cwde
scas
mov
inc
stos
out
jo
fnstenv
in
xor
shr
dec
sbb
imul
repz
pop
sub
stos
je
movs
mov
xchg
jl
in
mov
mov
jmp
sbb
pop
mov
sbb
mov
cmp
mov
test
inc
mov
aaa
lahf
scas
mov
and
fwait
sbb
jecxz
mov
pop
add
push
movs
and
adc
pop
jg
test
in
call
dec
inc
iret
mov
das
fst
cmps
dec
inc
adc
dec
adc
in
xchg
lock
and
inc
pop
popa
xchg
jle
shl
fist
js
rcr
inc
pusha
jg
retf
(bad)
loopne
lea
push
add
in
fmul
jbe
int
jge
push
dec
sbb
pop
inc
pop
dec
test
cmp
js
les
fdiv
xchg
xchg
scas
pop
inc
sbb
mov
enter
mov
imul
jne
pop
push
jae
push
xchg
sti
js
(bad)
fst
jbe
cmp
push
xchg
les
xor
out
sub
retf
je
jae
push
gs
arpl
(bad)
loop
add
in
test
pop
int
mov
sbb
or
pop
and
repz
sahf
jmp
retf
mov
jae
cmp
call
sbb
adc
addr16
sub
pop
outs
jo
sub
jne
ins
arpl
call
push
xchg
push
jge
and
and
jge
xchg
loop
gs
shl
or
inc
sub
dec
xchg
cmps
inc
mov
jp
jbe
enter
mov
xor
mov
cdq
mov
or
inc
(bad)
or
push
repz
in
push
dec
adc
enter
add
mov
inc
ss
dec
outs
stos
jns
dec
stos
mov
les
imul
cmp
pop
pop
cmc
mov
scas
loop
inc
pushf
loope
push
pop
pop
push
inc
std
cmp
addr16
xor
push
cmp
sbb
(bad)
clc
jmp
mov
jl
mov
inc
sub
repz
rcl
test
add
sbb
mov
and
xchg
out
dec
push
inc
popa
outs
mov
popf
dec
or
popf
out
and
out
inc
sub
mov
popf
cmp
(bad)
fst
push
xchg
test
xchg
jne
sub
sub
add
pop
cmp
inc
in
jb
xor
inc
push
jae
sub
fld
xor
repz
test
call
les
into
jae
lock
pop
mov
xor
lods
mov
pop
jne
adc
mov
pop
lods
and
rcl
mov
sar
clc
lods
sub
mov
add
adc
cmp
je
or
imul
imul
enter
cs
stos
xor
xor
mov
int3
mov
popf
inc
hlt
call
push
fsubr
adc
inc
test
pop
fisttp
test
aas
pop
mov
sub
sbb
sbb
das
fstcw
jbe
clc
cmp
inc
ror
shl
pop
dec
push
mov
sbb
fadd
imul
cmc
or
mov
mov
xchg
and
repnz
pop
int3
ins
jg
and
js
je
leave
mov
pop
sbb
cmps
inc
repz
dec
retf
sti
lea
sbb
sar
popa
fiadd
or
call
cmp
leave
add
add
or
pop
adc
(bad)
sbb
push
xlat
sbb
push
std
mov
test
sub
inc
sahf
popf
cmp
rol
adc
xor
push
push
dec
and
(bad)
inc
out
cmp
outs
fimul
jne
cmp
out
ins
or
jno
retf
mov
shr
pusha
sub
cwde
pop
mov
mov
loop
out
pop
in
push
into
pop
sub
scas
jle
jnp
sub
xchg
repnz
xchg
adc
(bad)
repnz
ret
fcmovnb
mov
sub
fcom
repnz
mov
cmp
mov
popa
pop
dec
lahf
ss
lahf
mov
xor
jno
fld
fldcw
cmc
push
cwde
dec
fwait
cs
adc
adc
mov
inc
sub
leave
ret
adc
in
cs
dec
mov
mov
push
adc
mov
push
jmp
mov
mov
stos
je
push
mov
in
and
jmp
outs
jae
js
mov
imul
test
sbb
push
inc
jne
jp
int
pop
retf
jo
mov
inc
mov
js
mov
pop
jnp
pusha
lahf
jg
cmp
sbb
mov
push
adc
cwde
xchg
add
xchg
jp
adc
jle
push
in
and
or
add
movs
xchg
fcmove
add
push
xor
sub
jmp
mov
ss
js
xor
xor
xchg
nop
ss
rcl
xlat
jge
std
push
xor
cmp
fadd
pop
ins
mov
movs
popa
or
pop
rol
adc
push
jg
es
xchg
xlat
sub
jnp
ins
leave
jecxz
cmp
sbb
mov
and
imul
mov
test
mov
jmp
jo
jmp
or
xor
cdq
outs
dec
cld
nop
int3
movs
int3
sbb
les
cs
imul
fs
(bad)
adc
push
add
enter
nop
push
jb
jbe
sbb
jecxz
in
sbb
fsubr
aam
xchg
and
je
loope
push
mov
or
mov
and
fimul
dec
sahf
popf
leave
add
lahf
mov
sbb
pop
add
hlt
xor
add
inc
cli
mov
(bad)
add
jne
mov
pop
mov
jp
je
fldenv
cmp
or
cmp
sahf
pushf
retf
xor
ret
les
clc
es
xor
xor
inc
xchg
mov
scas
mov
div
ss
adc
mov
cmp
aad
je
iret
ja
out
adc
inc
cmp
mov
fsub
inc
mov
mov
mov
sub
xor
pop
cmc
jne
xchg
jns
pop
jbe
xchg
pop
enter
jp
fild
xlat
add
ins
dec
mov
dec
fldenv
popa
pop
xchg
into
xchg
mov
adc
pop
adc
out
or
sar
inc
addr16
mov
mov
jbe
pop
jbe
ja
cld
sub
rol
mov
cmp
in
ret
mov
(bad)
scas
mov
popa
(bad)
sti
in
dec
and
ins
add
punpcklbw
fist
bound
xchg
pop
loop
and
mov
dec
aas
sbb
push
or
or
test
je
ins
inc
ja
mov
or
add
ins
or
jmp
mov
call
adc
and
test
mul
xor
sbb
xchg
jg
ret
jle
das
cmp
add
mov
cmp
in
sub
xchg
scas
mov
shl
pop
mov
cdq
out
mov
lds
mov
fs
mov
jne
hlt
clc
inc
push
inc
pop
dec
jno
mov
outs
push
pop
inc
dec
pop
cmp
les
xor
inc
add
mov
not
rcr
ds
pusha
imul
push
(bad)
adc
mov
adc
push
inc
cmps
stos
in
cdq
lock
mov
out
mov
mov
ss
sbb
add
rcr
es
xchg
imul
out
mov
jmp
sahf
call
xchg
stos
pop
ja
sbb
lds
sub
gs
or
mov
jmp
ins
retf
fiadd
cwde
imul
mov
ds
add
mov
push
pop
xchg
push
adc
xchg
jmp
ficom
fnsave
(bad)
scas
or
jne
mov
pusha
push
ret
xor
xchg
pcmpeqw
push
mov
das
adc
push
je
jbe
out
adc
test
in
push
(bad)
hlt
test
mov
push
cwd
or
adc
mov
mov
popf
in
(bad)
sbb
ror
icebp
int
add
inc
ss
and
mov
pop
sbb
sbb
bound
popf
xchg
fdivr
mov
cmps
(bad)
lods
xor
test
ror
jp
rol
cmp
pop
bnd
gs
or
cs
mov
inc
push
sub
ins
pop
mov
adc
fldl2e
pushf
scas
pop
jg
push
(bad)
mov
scas
push
ret
sbb
inc
or
fnstsw
popa
sbb
sbb
pusha
cli
aam
out
fs
mov
shl
mov
icebp
sahf
adc
sbb
mov
pop
fst
and
cmp
jae
ds
jmp
retf
fs
jg
addr16
xchg
dec
es
xor
add
lahf
scas
iret
leave
or
pop
loope
call
inc
add
pop
ret
cli
ins
lock
loope
add
ret
mov
cmps
mov
test
sbb
scas
jne
int3
sub
das
(bad)
out
adc
push
js
jne
int3
xchg
mov
sbb
(bad)
mov
or
test
sub
add
xor
xchg
repz
pop
cdq
enter
push
hlt
repnz
std
add
sbb
icebp
mov
jg
cmps
and
scas
inc
mov
xchg
movs
mov
xchg
dec
stos
cld
inc
aam
nop
mov
movs
cld
mov
clc
fwait
js
(bad)
xchg
jge
ficomp
fadd
jp
sar
pop
sbb
icebp
mov
adc
outs
(bad)
int3
leave
xchg
ss
jae
in
dec
jne
sbb
push
cwde
cmp
pop
call
mov
nop
pop
fldcw
fst
cld
ret
ja
mov
cmp
xchg
ss
and
cs
push
sbb
and
jl
push
aaa
ins
mov
push
loopne
mov
out
cmc
pop
jnp
push
in
inc
imul
mov
dec
sub
fimul
and
dec
dec
jp
xchg
mov
mov
push
jle
fnstsw
and
xor
mov
or
push
int3
stc
lds
add
jg
mov
inc
push
outs
mov
mov
loope
and
adc
xlat
push
mov
mov
or
leave
pop
leave
sbb
popf
pop
(bad)
jge
xor
push
sub
dec
xchg
pop
add
ds
aam
cwde
shl
push
int
stos
and
add
sub
dec
js
shrd
ja
mov
adc
mov
call
jmp
scas
shr
push
stos
mov
cdq
icebp
push
leave
stc
div
pusha
dec
pop
and
cdq
cmp
sub
pop
sbb
jmp
xchg
mov
test
pop
adc
into
ficomp
sbb
fistp
enter
mov
push
leave
push
scas
ja
es
pop
add
ins
in
dec
dec
test
loop
sahf
ins
int
cmp
jne
and
jne
and
xor
fcmovne
std
icebp
(bad)
adc
test
(bad)
xchg
dec
clc
and
xchg
push
je
neg
sbb
dec
int3
in
cmp
xchg
sbb
jnp
adc
stos
push
mov
push
dec
adc
add
rcl
in
mov
xlat
retf
rcr
adc
repnz
xchg
mov
sbb
push
mov
jbe
mov
cmps
cmps
popa
sub
push
js
cmp
sub
jb
pusha
cmp
fidivr
jle
xchg
and
rol
add
les
adc
(bad)
je
jb
sub
jbe
inc
pop
ds
mov
movs
sub
fistp
add
dec
cmp
enter
test
mov
add
adc
and
enter
test
adc
and
push
push
sub
pop
(bad)
ds
jge
mov
jl
out
cmp
mov
or
or
mov
jo
(bad)
in
int3
cmc
scas
fisub
out
bound
sbb
xchg
push
mov
jecxz
bswap
hlt
cmp
push
and
dec
movs
mov
stos
stos
rcr
repz
sbb
pushf
mov
test
popa
sbb
mov
push
adc
int
dec
mov
imul
xor
iret
fstp
mov
out
push
inc
push
rcl
into
jl
push
std
(bad)
and
jns
and
adc
pop
push
push
pusha
dec
mov
mov
(bad)
push
mov
sti
push
mov
push
add
xor
jnp
iret
push
mov
push
sbb
inc
add
aaa
dec
mov
lea
sbb
sub
into
push
shr
lods
jb
xchg
jl
sub
adc
mov
mov
dec
jno
xor
sub
jo
cmp
stos
xor
es
inc
arpl
pop
or
and
in
call
xchg
jecxz
nop
stos
movs
shl
jecxz
and
jmp
add
in
adc
cmps
aam
and
sbb
mov
scas
and
pop
add
pop
inc
je
cmp
or
stos
xchg
dec
jo
cmp
mov
mov
push
mov
movs
push
xor
divps
shufps
(bad)
out
xchg
cli
sub
ins
push
lds
out
arpl
stos
mov
push
adc
mov
loop
mov
push
fild
inc
repnz
push
push
lahf
test
clc
test
jmp
hlt
push
mov
inc
and
jmp
stos
loope
sahf
movs
dec
mov
pop
das
rcl
dec
push
aaa
sbb
out
mov
dec
aam
cmp
pusha
sbb
fwait
xchg
mov
fldcw
adc
repz
mov
das
jne
dec
fiadd
inc
sti
fdivr
test
ret
sub
or
retf
add
icebp
outs
inc
xor
mov
hlt
ds
or
pop
out
sub
pop
in
outs
es
loopne
cmovb
fs
and
jmp
push
cmps
sub
int3
or
(bad)
push
mov
mov
pop
mov
dec
inc
ss
mov
cmp
out
mov
(bad)
jle
nop
inc
out
mov
sar
pop
test
mov
push
fnstcw
hlt
xchg
fdiv
sbb
add
movs
fdiv
mov
add
jmp
push
add
jnp
pop
xor
and
dec
jmp
push
imul
pop
inc
scas
xlat
loope
call
inc
cwde
not
jno
ins
lahf
jb
adc
in
pushfw
inc
dec
popf
daa
inc
inc
rcl
in
sub
js
and
movs
lods
jbe
inc
pop
xchg
xor
pop
mov
xor
cmp
std
hlt
call
push
sub
cmp
push
pop
aaa
xchg
mov
gs
and
out
mov
call
mov
loope
scas
movs
xchg
jns
arpl
adc
cmp
mov
or
jo
cwde
aaa
adc
inc
mov
icebp
sbb
sbb
sub
stos
lods
daa
pop
xor
test
int
push
mov
mov
cmp
mov
push
ficom
psubb
mov
push
xor
in
inc
dec
jl
fidivr
aas
sti
jp
sbb
push
sub
cmp
cmp
ret
sbb
ins
add
std
and
xor
xchg
sahf
sahf
and
sub
cld
aad
fcmovnb
stc
fild
jp
dec
repz
dec
xchg
cmp
pop
out
(bad)
jmp
cmp
sbb
out
or
or
sub
jecxz
mov
cmps
add
push
and
shl
push
mov
daa
arpl
std
mov
scas
(bad)
and
retf
pop
mov
add
sbb
jb
fxch
cmp
call
pop
jns
xchg
or
std
imul
mov
sti
dec
movs
sahf
xor
(bad)
mov
in
jmp
pop
adc
stos
xor
mov
mov
popf
cmp
adc
xor
sar
sbb
rcl
call
and
add
(bad)
leave
pop
leave
(bad)
jmp
adc
ret
je
fcmovbe
push
sub
neg
fild
push
mov
pop
inc
bound
xchg
add
dec
je
xchg
and
cmp
inc
into
lahf
inc
pushf
sbb
jl
pushf
imul
dec
adc
push
ins
outs
inc
fwait
leave
pop
retf
and
es
fstp
cwde
imul
push
iret
out
or
jbe
bound
fs
jmp
data16
jg
mov
dec
scas
sbb
inc
add
cmp
mov
daa
cmps
push
(bad)
jnp
pusha
fwait
shr
jmp
pusha
jb
jge
or
out
shr
dec
pop
fs
cmp
push
mov
mov
movs
push
mov
aam
ret
xor
jmp
mov
out
or
(bad)
int
cmp
(bad)
push
outs
stc
xor
and
push
cmp
in
mov
jmp
add
test
(bad)
sti
mov
xchg
repz
sub
jmp
and
mov
in
sub
ja
adc
jnp
inc
iret
movs
mov
ss
lds
pusha
shl
inc
mov
pop
dec
push
ret
adc
mov
add
loop
test
push
iret
fisttp
cmp
repz
xor
popa
pop
adc
mov
or
lahf
ficomp
dec
loope
icebp
mov
inc
cmp
pop
inc
(bad)
or
(bad)
or
and
into
push
mov
and
adc
jmp
and
mov
pop
and
(bad)
mov
icebp
sub
div
dec
push
inc
div
test
out
mov
pop
adc
sbb
mov
mov
sbb
fist
in
js
jo
in
bsf
(bad)
sahf
ss
lds
inc
push
rol
dec
xchg
test
pop
mov
push
pusha
dec
mov
cmp
mov
sahf
xchg
out
fs
rcl
hlt
enter
dec
mov
xchg
in
stos
or
out
mov
push
add
rcr
mov
addr16
sti
outs
push
cld
adc
dec
outs
cmc
push
popa
sub
cmp
pop
imul
je
or
sbb
pop
xor
fdiv
push
mov
ja
xor
cmc
sub
push
inc
xor
enter
pop
sub
dec
into
and
pop
out
jnp
sbb
mov
dec
test
adc
sub
adc
fs
ins
stc
xchg
cmp
in
sahf
inc
mov
mov
cmps
mov
and
icebp
xor
mov
add
xchg
xchg
pop
jle
stc
xor
popa
inc
jnp
dec
fcom
das
ins
(bad)
in
jmp
sub
sub
cmp
jae
call
xor
or
out
xor
lock
and
xor
in
dec
mov
push
sub
adc
push
jg
xchg
daa
dec
shr
ja
leave
cmp
sub
inc
movs
and
or
scas
popa
xor
nop
jmp
sub
xor
pop
repnz
loopne
xlat
lods
mov
jnp
mov
or
jne
mov
ja
pop
inc
xchg
sti
or
sub
jp
xor
sti
nop
xchg
jnp
aas
iret
js
or
ret
mov
dec
push
push
sahf
cmp
enter
retf
daa
sbb
ja
ss
pop
int3
push
nop
xchg
(bad)
scas
leave
or
push
je
std
pop
jecxz
lods
mov
push
cs
push
mov
gs
dec
loope
mov
push
das
push
cmp
cwde
fs
inc
mov
mov
add
and
xor
stc
inc
lds
mov
addr16
dec
xchg
pop
cli
out
mov
iret
stos
push
mov
out
push
pop
push
enter
mov
dec
cmp
lds
cmp
mov
push
jae
push
sub
jecxz
dec
rcr
test
das
out
pop
add
(bad)
pop
xchg
lahf
mov
out
mov
jns
lds
jle
inc
add
adc
or
loopne
gs
loopne
add
add
dec
mov
imul
xor
retf
add
adc
fst
xchg
and
and
(bad)
call
aaa
les
inc
pop
sbb
retf
jbe
sub
js
dec
mov
cdq
mov
inc
sub
xlat
lahf
pop
push
push
stc
and
dec
fstp
pop
cmps
ds
js
enter
nop
call
or
pushf
int3
sbb
inc
int3
mov
sbb
jmp
jo
pusha
loop
frstor
aad
add
xor
dec
sub
mov
cmp
scas
push
add
lods
xor
nop
imul
mov
pop
ret
pop
cs
xchg
add
add
out
dec
aam
jmp
int3
pop
das
jnp
rol
pop
out
push
or
mov
(bad)
dec
dec
ss
ret
(bad)
cdq
inc
rcl
xor
sub
xchg
dec
cmc
cmps
xchg
jno
into
jo
push
inc
or
xchg
xchg
xor
mov
cmc
in
bound
mov
push
xchg
inc
push
jo
jae
ds
jge
inc
ja
cmp
xor
movhlps
mov
rcl
das
in
jb
shr
dec
mov
xor
loop
ins
(bad)
sub
je
retf
retf
ins
xchg
loope
loope
inc
imul
push
daa
add
in
inc
cmp
stc
and
adc
inc
ja
test
imul
add
sbb
cmp
jl
icebp
pushf
cli
jmp
or
jmp
cld
jae
xchg
fsubr
dec
lahf
and
sub
mov
sbb
sbb
mov
mov
push
fst
ss
xor
mov
xchg
lock
jne
pop
ret
mov
pop
pop
push
retf
mov
xchg
push
inc
or
mov
fst
mov
(bad)
and
dec
cld
retf
jl
mov
aas
xchg
push
in
gs
or
test
push
cdq
fsubr
or
hlt
movs
cmp
fwait
sbb
xor
in
push
outs
dec
inc
std
xor
ins
aaa
(bad)
neg
popa
fwait
cmp
aad
mov
push
ds
cmp
in
or
cmp
jno
mov
sub
push
mov
sbb
aas
mov
mov
lock
xor
test
sahf
mov
jmp
push
dec
add
call
fiadd
(bad)
int
xor
add
dec
xor
aad
xor
pop
pop
test
repz
dec
in
sahf
ror
ret
mov
gs
jmp
xchg
sub
in
inc
test
call
jg
and
sub
test
adc
or
fcom
mov
xchg
adc
cs
shr
data16
sbb
iret
rcr
out
(bad)
ficomp
ficomp
ds
push
jb
(bad)
pop
dec
movs
pop
cwde
xchg
adc
jle
mov
jle
inc
xchg
cmp
xchg
mov
push
popa
mov
and
sub
xchg
int3
sub
push
mov
cmp
(bad)
fst
gs
pushf
xor
pushf
outs
mov
pop
jle
stos
js
ins
fsqrt
push
and
movs
call
sti
in
add
sbb
test
xchg
and
sar
(bad)
div
push
adc
xchg
dec
mov
push
dec
mov
retf
jne
ficom
out
and
push
lahf
out
xchg
test
ror
pop
in
xchg
cld
sahf
ins
jmp
xchg
repnz
xchg
cmp
jecxz
frstor
cmp
gs
cmp
or
stos
pop
mov
adc
and
cmp
adc
and
mov
push
clc
icebp
push
xlat
scas
gs
xchg
in
add
clc
and
xchg
adc
rcl
cwde
dec
ins
and
(bad)
in
xchg
xor
nop
out
pop
xchg
push
mov
sub
dec
or
mov
lock
add
fmul
lahf
jno
sbb
sbb
pusha
not
xchg
cmp
stos
add
mov
scas
sbb
je
mov
jmp
mov
loopne
cmp
nop
adc
cwde
fs
xchg
cmps
pop
imul
(bad)
fild
rcr
mov
mov
mov
addr16
push
dec
ins
jg
test
ins
jo
inc
xor
inc
xor
mov
jp
xchg
or
sub
dec
mov
int
sub
mov
jae
xor
scas
ss
call
inc
mov
(bad)
addr16
jge
out
test
and
scas
jbe
fbld
xlat
out
cwde
mov
ror
fisub
fistp
sub
push
pop
out
sahf
fld
iret
ja
inc
stos
cmc
push
jmp
jg
stos
fdivp
jbe
cmps
test
dec
stos
out
dec
in
lock
jnp
mov
cmp
cld
loopne
xchg
shl
jle
inc
inc
cmp
dec
and
shl
sbb
lods
div
sub
test
dec
inc
xchg
jmp
cmp
call
cmps
jb
scas
or
sar
cmps
test
test
or
sub
sbb
xor
mov
adc
mov
repz
mov
cmp
push
test
ins
add
sbb
mov
sbb
xchg
fst
sbb
pop
std
in
hlt
fidiv
cmp
mov
mov
adc
mov
inc
lods
out
sbb
dec
mov
pop
pop
into
lods
ss
jl
sub
sub
mov
(bad)
lods
(bad)
clc
xchg
add
(bad)
adc
in
div
and
jge
out
adc
add
push
lds
call
xchg
cmp
clc
push
jbe
idiv
das
hlt
test
clc
push
xchg
xor
mov
aaa
adc
or
cwde
ret
pop
xor
xchg
cmps
or
mov
adc
pop
sbb
int
inc
shl
xor
dec
int
xor
cmp
pusha
pop
icebp
ja
sbb
inc
bound
(bad)
cmp
add
rcr
aaa
push
push
pop
jp
jbe
call
adc
jmp
cmps
dec
or
cmc
cli
xchg
mov
ss
(bad)
jo
cmps
add
dec
scas
daa
inc
inc
imul
adc
and
cld
push
cld
dec
lea
dec
rcl
lods
(bad)
jne
call
scas
sub
push
(bad)
icebp
fcmovb
data16
mov
pop
ror
mov
pop
rol
sbb
sub
lahf
stos
and
and
jns
pop
mov
xchg
call
pop
ret
xchg
add
fimul
fldl2t
pop
movs
jmp
fbld
xor
test
imul
popa
inc
test
sub
outs
inc
cmps
outs
mov
and
push
mov
adc
(bad)
popa
loope
sar
dec
jne
ins
and
mov
fcmovbe
dec
lea
dec
push
leave
pop
push
and
mov
or
dec
mov
fsubr
or
sub
inc
xor
arpl
pusha
dec
inc
cmp
(bad)
fldcw
adc
dec
jnp
mov
cmp
(bad)
pop
add
ret
or
(bad)
fld
in
sub
ret
add
push
shr
fistp
jno
xchg
in
push
dec
inc
mov
adc
loopne
sub
adc
sbb
mov
push
js
lods
fs
rol
fdivr
mov
mov
push
sub
push
mov
fsub
mov
push
jns
jno
sub
mov
inc
cmp
mov
in
xor
adc
(bad)
pop
xor
dec
and
pop
mov
loopne
cmp
test
add
mov
cmp
and
or
sbb
pop
pop
sub
xchg
xor
pushf
call
sbb
pusha
(bad)
aas
loope
movs
cmp
jbe
jecxz
add
in
add
daa
and
push
or
daa
cld
rcr
push
cld
push
ror
mov
mov
adc
jns
jo
push
jp
test
sahf
or
push
aaa
es
dec
jmp
(bad)
mov
call
jmp
lods
or
dec
or
and
cmp
movs
sub
inc
push
pusha
inc
fnsave
mov
add
std
add
sub
int
enter
(bad)
ss
jb
addr16
jg
jb
add
adc
mov
push
sti
lods
(bad)
lds
push
jge
stos
scas
scas
leave
mul
scas
outs
mov
sbb
push
push
cmps
adc
sbb
add
pop
xor
pop
xchg
and
and
(bad)
stos
inc
repnz
lea
ja
lods
lds
in
enter
loope
adc
mov
cs
fild
xchg
cmp
mov
stc
lahf
leave
mov
mov
les
les
ret
cmp
(bad)
push
pop
dec
cmp
xchg
call
mov
mov
lods
adc
or
call
stos
shl
xor
in
mov
or
mov
in
imul
cli
xchg
ja
dec
xchg
enter
loop
out
stc
mov
sub
mov
loopne
inc
jnp
pop
ins
and
mov
dec
xchg
je
ja
ds
js
leave
xchg
mov
fwait
inc
pop
lods
xchg
aam
iret
add
xchg
push
(bad)
sti
loop
sbb
jl
dec
stos
into
int
dec
adc
ins
inc
and
neg
xor
mov
aad
xor
pop
mov
hlt
outs
mov
js
cld
sub
and
sbb
mov
or
jb
sub
fld
dec
push
out
and
pop
(bad)
ret
sbb
jmp
gs
sahf
and
fild
idiv
push
mov
sbb
jnp
add
call
jmp
cmp
push
jl
cmp
lock
mov
push
pusha
jne
push
and
push
xor
out
call
sub
pop
jnp
and
mov
cmp
and
cmp
daa
and
mov
dec
sbb
shl
and
sub
aas
repz
xchg
jl
outs
sbb
pushf
test
xor
fistp
mov
mov
cs
and
mov
les
cmp
lods
sub
push
ins
and
pushf
mov
movups
movs
mov
loop
adc
js
lock
int3
je
adc
cmc
dec
and
push
xchg
jne
(bad)
std
jle
loop
add
cmpps
xchg
push
cdq
call
in
mov
xchg
(bad)
mov
enter
sahf
pop
cs
mov
add
imul
adc
test
into
sbb
cmps
add
and
sub
jmp
lock
popf
mov
push
mov
sti
push
mov
jp
nop
jmp
icebp
lds
(bad)
pushf
int
xor
mov
and
rcl
jmp
sbb
mov
call
pop
aad
cdq
arpl
sub
push
push
test
jb
xchg
push
jbe
mov
dec
sub
cmp
push
arpl
xchg
ret
jl
mov
inc
add
sbb
sbb
or
pop
adc
jge
mov
cmp
je
js
(bad)
pop
push
pushf
call
push
idiv
mov
lods
sbb
dec
shr
mov
cmp
fisubr
(bad)
cwde
dec
add
stos
jp
fimul
stc
sub
mov
or
ret
adc
dec
mov
mov
(bad)
adc
shr
gs
aas
jo
mov
out
jmp
outs
dec
arpl
das
and
sub
clc
push
lock
scas
imul
outs
cli
rcr
xchg
loopne
(bad)
mov
es
adc
xlat
shl
(bad)
xor
repz
ja
xor
retf
pop
push
(bad)
sbb
mov
xor
lods
jg
cmps
sbb
test
dec
jns
jmp
push
add
sub
xchg
mov
pop
(bad)
cmp
shl
addr16
outs
fcmovnbe
retf
cs
sub
jp
add
arpl
sub
test
aas
jp
bound
in
push
out
mov
jl
or
mov
xchg
fcomi
test
test
aam
sub
repnz
shl
cmps
push
mov
jge
mov
cli
lods
cmp
je
imul
add
xor
stos
mov
push
sahf
jne
dec
daa
push
aad
mov
cmps
sahf
in
mov
sub
out
xchg
dec
call
aas
cmp
jmp
repnz
xor
js
sbb
sub
aas
rcr
pop
div
or
lods
dec
adc
sbb
pop
jmp
jle
jge
mov
sti
arpl
popf
je
mov
in
(bad)
scas
aaa
sbb
out
mov
retf
xor
sbb
sub
inc
js
js
cmp
sbb
scas
dec
scas
fsubrp
fcomip
fsubr
addr16
test
or
idiv
ret
mov
loope
adc
stc
sbb
call
retf
mov
mov
push
mov
mov
push
cmc
jnp
mov
or
out
lods
sub
push
sbb
ins
call
dec
cwde
(bad)
and
mul
xchg
in
cmp
pop
mov
pop
in
mov
bnd
xor
mov
out
cmc
cmp
movs
adc
jmp
jecxz
lahf
ret
loopne
dec
or
xchg
mov
dec
xor
push
jp
retf
mov
imul
ins
test
jae
int3
ret
adc
dec
xchg
ss
imul
hlt
push
inc
mov
sub
pop
jns
xchg
inc
mov
sahf
push
arpl
adc
dec
push
repnz
mov
pop
push
je
jecxz
shr
cmp
inc
ds
popa
daa
out
add
jl
in
cmp
repnz
mov
pop
fimul
or
ret
iret
retf
(bad)
inc
sub
idiv
push
add
mov
sbb
cmp
mov
sbb
bound
fisub
stos
mov
inc
int3
mov
ins
inc
dec
fisubr
xchg
cmp
mov
mov
(bad)
pop
arpl
xchg
xchg
aas
fidivr
mov
cli
sahf
out
out
pop
into
jo
out
jmp
add
inc
and
in
and
jmp
outs
inc
xor
retf
and
stc
repnz
lock
fldenv
stos
(bad)
push
sbb
stos
(bad)
fidiv
pop
loopne
jg
adc
jle
cmc
(bad)
jmp
add
inc
pop
adc
xor
pop
ror
jne
shr
pop
dec
ja
imul
stos
out
test
imul
xchg
imul
jo
or
sti
mov
ins
dec
sti
jg
inc
jmp
into
rcr
jnp
cmp
adc
pop
sub
jg
mov
popf
mov
adc
test
push
and
sub
ror
cmp
sti
pop
cwde
jb
pushf
mov
push
das
inc
mov
fsub
jae
sbb
(bad)
aam
dec
push
ret
push
mov
pop
mov
rol
adc
mov
dec
mov
fisubr
push
xor
in
fiadd
mov
mov
dec
jbe
push
and
arpl
lods
pop
xlat
pop
ss
push
mov
mov
jge
jmp
xlat
loope
je
je
sbb
dec
shl
xchg
mov
push
pop
pop
mov
mov
(bad)
mov
or
imul
add
mov
push
inc
inc
ror
jbe
(bad)
push
cdq
lods
addr16
mov
not
sar
or
or
pop
cdq
cld
pop
pushf
push
lods
dec
int
loope
push
repnz
mov
out
in
and
bound
pop
cmp
out
sahf
into
pop
xor
push
std
and
push
jnp
sub
int3
dec
(bad)
jno
adc
int3
call
(bad)
movs
mov
je
mov
pop
ins
sbb
push
jns
neg
loop
xor
mov
adc
sbb
movs
stc
call
push
ret
lods
sbb
pop
int
and
sbb
pop
(bad)
test
sbb
js
and
cld
test
adc
and
inc
jge
mov
jmp
(bad)
iret
adc
pop
push
pop
scas
in
add
push
xor
ret
jns
jae
lods
leave
mov
fimul
jo
into
enter
ins
cmp
dec
and
(bad)
jbe
sbb
inc
xor
pop
pusha
xchg
sti
fldcw
retf
jg
out
mov
xor
pop
call
aam
fwait
mov
or
mov
xchg
dec
jmp
and
(bad)
in
mov
pop
test
and
imul
cdq
pushf
sbb
mov
ror
aam
pusha
mov
push
icebp
or
add
dec
sbb
loope
jle
sub
loop
loope
fstp
adc
adc
cmp
addr16
in
je
pop
loope
call
cmp
call
out
sahf
jmp
pop
dec
or
or
fld
(bad)
sbb
sti
fisubr
loopne
enter
retf
mov
popa
mov
ins
xchg
fild
mov
jns
dec
cmp
ins
enter
or
push
cmps
cmc
nop
mov
scas
adc
sub
cmc
jo
fsub
mov
stc
inc
add
xor
jb
fstp
ins
push
adc
add
dec
fiadd
int3
inc
pusha
add
inc
inc
mov
push
dec
dec
in
jne
and
pusha
stos
xchg
xor
ss
int
mov
and
bound
mov
in
out
adc
xchg
cmp
cdq
dec
aam
xchg
adc
push
jge
xor
xchg
inc
jb
pop
cmps
bound
(bad)
jecxz
ins
popf
stc
push
and
imul
dec
sbb
retf
cmp
sub
mov
lahf
sub
sbb
icebp
shl
xor
and
pop
jno
push
imul
shl
outs
fisttp
cld
data16
xor
movs
adc
pop
fs
or
popf
mov
(bad)
push
(bad)
mov
or
call
lds
sub
or
inc
or
mov
cmps
mov
adc
xor
data16
out
push
sub
ins
(bad)
push
jmp
fdivr
cmp
adc
ins
shl
mov
mov
and
push
cdq
push
jns
cmps
imul
add
or
test
mov
movs
jne
cmp
in
fbstp
ds
out
mov
aas
pusha
les
xchg
sbb
or
sub
les
mov
repz
xor
movs
cmps
fwait
movs
and
inc
les
xchg
or
mov
jmp
mov
call
mov
xchg
mov
cs
xchg
test
test
push
xchg
mov
sub
mov
xchg
xor
dec
mov
retf
mov
out
adc
dec
repnz
mov
dec
pop
ret
cld
sub
into
xor
aaa
outs
ret
xchg
out
push
mov
outs
fiadd
iret
jne
mov
adc
loope
xor
retf
imul
jmp
aas
jmp
push
sub
mov
ins
jecxz
div
(bad)
cmp
xchg
addr16
aaa
sub
mov
out
cdq
xor
out
fdiv
push
and
jl
add
mov
iret
pop
cmp
or
push
je
adc
repnz
adc
cmps
imul
out
mov
or
int
push
clc
lods
jne
mov
lock
or
ds
mov
into
dec
inc
ja
push
or
mov
xchg
addr16
popf
sub
and
ins
aas
clc
mov
dec
push
aam
mov
in
out
dec
dec
cli
test
aad
mov
jmp
cmp
jg
or
loop
(bad)
cmp
scas
fwait
add
std
jecxz
aam
xchg
daa
push
cs
jae
mov
and
test
cmp
xor
add
mov
push
lods
jno
cwde
pop
or
jnp
xor
cdq
xchg
sti
jp
lahf
dec
jmp
mov
jbe
add
jge
jg
in
ret
xor
push
sub
inc
pop
retf
repnz
jge
push
cwde
mov
push
popa
retf
cmc
push
ins
stc
pusha
pop
std
and
sahf
jg
mov
js
rol
fisub
dec
retf
adc
pop
or
mov
aas
pop
dec
and
mov
in
retf
call
adc
adc
mov
(bad)
push
pusha
movs
ja
mov
xchg
cli
push
(bad)
xchg
jbe
pushf
mov
jbe
xchg
fs
cmp
xor
cld
xchg
push
into
(bad)
and
mov
scas
mov
lods
ret
and
jge
pop
aas
push
mov
retf
xor
dec
jbe
jmp
add
mov
(bad)
loop
loop
sti
inc
pusha
pop
test
or
mov
mov
push
cmp
aad
ins
scas
jmp
jns
in
adc
int3
inc
cld
xor
scas
pop
pusha
sub
test
pushf
shl
gs
push
and
cli
dec
lea
xlat
gs
es
mov
enter
mov
in
xor
repnz
xor
cmp
mov
adc
(bad)
cmps
std
mov
mov
sub
pushf
(bad)
clc
push
sub
mov
clc
stos
test
mov
ins
and
movs
sbb
add
fwait
pmulhw
imul
adc
jecxz
xchg
inc
cli
jle
or
mov
sar
mov
mov
out
sbb
mov
stos
aas
adc
fs
hlt
cld
xchg
push
iret
mov
imul
xor
adc
xor
pusha
sbb
pusha
sar
mov
out
fwait
xchg
nop
sub
repnz
imul
fistp
repz
xor
dec
loopne
sahf
syscall
and
inc
adc
sete
mov
out
xor
sub
je
ret
cmp
addr16
sbb
stos
loop
or
test
cli
cmp
je
cmp
adc
and
mov
rol
stos
mov
(bad)
mov
sub
sub
aas
enter
jge
sahf
das
and
jno
and
aaa
add
mov
xchg
jb
(bad)
in
xchg
cwde
stos
mov
adc
imul
lods
into
int3
outs
ins
xchg
cmp
push
sub
push
sqrtps
retf
imul
mov
inc
push
cld
icebp
loope
mov
je
mov
lahf
outs
test
lds
ins
(bad)
stc
xchg
lea
in
jo
xlat
xchg
pop
xor
ja
fucomi
cmc
stos
(bad)
jb
sub
in
and
push
xchg
call
loopne
inc
arpl
sub
mov
aam
mov
adc
pop
xchg
jae
add
fst
or
in
fwait
or
out
int
retf
lods
fistp
sub
das
hlt
stc
push
push
mov
lds
loope
lea
mov
call
lods
adc
lahf
popa
hlt
mul
jbe
enter
dec
shr
xor
popa
loop
jns
test
mov
sahf
popa
lods
dec
fisttp
in
cli
mov
ins
rol
xchg
or
inc
adc
fnsave
mov
sbb
pop
das
mov
push
pop
mov
add
nop
arpl
sub
add
(bad)
inc
fisttp
jmp
dec
mov
mov
mov
mov
pop
jg
xchg
pop
sahf
adc
in
cld
into
push
pop
cmp
cwde
dec
test
lods
dec
jns
outs
jne
not
cwde
pop
xchg
enter
daa
rcl
mov
loope
pop
cmp
cmp
popf
cmps
out
mov
jne
mov
popa
pop
nop
test
mov
mov
add
pop
retf
add
jae
test
out
ds
(bad)
xchg
out
call
mov
(bad)
test
pop
scas
gs
xor
pop
nop
stos
cld
fnsave
push
mov
(bad)
pop
bound
mov
dec
sub
loop
lods
xchg
push
outs
daa
pop
out
lods
mov
ffree
sar
sbb
pop
das
xchg
add
pop
mov
xor
aad
or
add
mov
adc
mul
cli
jg
repz
jne
hlt
or
mov
stos
xchg
cmc
cmp
fs
add
repz
dec
and
nop/reserved
push
jl
mov
test
cmp
inc
stos
xchg
sub
pop
sub
aam
(bad)
mov
cli
mov
add
xor
cmp
lods
mov
arpl
push
and
xor
fs
inc
xchg
out
mov
and
xchg
fcmovnu
ins
(bad)
popa
dec
ficom
cld
ret
clc
mov
inc
repnz
dec
jmp
std
out
add
(bad)
stc
or
or
adc
(bad)
and
sbb
jo
push
imul
xor
mov
lds
mov
in
es
std
push
fwait
xchg
stos
push
aas
sub
(bad)
mov
and
clc
lock
retf
sub
jno
in
shl
cmp
sub
test
movs
sub
or
mov
push
or
(bad)
push
mov
sub
test
pusha
ffreep
cmp
in
push
inc
add
cmps
fistp
sub
push
dec
inc
sbb
pop
retf
psubusw
xor
xchg
pusha
inc
xchg
test
fstp
fst
popa
push
popa
lock
mov
sbb
add
nop
and
lock
inc
xor
pop
std
std
mov
(bad)
call
xor
mov
out
loope
ffreep
jmp
inc
adc
dec
add
jge
scas
xor
outs
mov
mov
ffree
(bad)
mov
leave
cmp
push
mov
or
mov
push
push
add
pop
cmp
aam
aad
rcr
(bad)
mov
or
rol
jg
test
dec
sbb
push
jmp
loop
mov
inc
daa
lods
sbb
ret
mov
pop
cmp
mov
mov
mov
adc
fisttp
mov
mov
jb
push
ins
cmp
mov
in
cmp
mov
mov
jo
sub
adc
imul
adc
or
push
movs
sbb
mov
push
lds
repz
repnz
popf
shl
je
mov
sbb
jo
retf
push
ret
add
mov
cmp
and
popa
dec
xor
mov
jo
mov
loope
pop
xor
xor
enter
pop
imul
pop
sbb
jb
mov
dec
mov
and
and
mov
loop
inc
sub
sti
xor
or
sub
fidiv
mov
enter
out
xchg
call
bnd
(bad)
xor
push
push
and
pusha
lods
fcomp
xchg
shl
and
jns
cmc
jmp
xchg
lahf
mov
shl
xchg
(bad)
cld
mov
xlat
push
fidivr
loop
fdiv
push
xor
push
cmp
popa
mov
(bad)
dec
(bad)
daa
sbb
inc
mov
xor
das
cmp
popf
enter
movs
mov
int
pop
pop
jae
pop
fwait
pop
jne
(bad)
pop
xchg
cli
adc
xor
retf
out
retf
movs
pop
dec
jnp
dec
push
push
(bad)
mov
sbb
scas
push
mov
pusha
pop
aas
rol
xchg
jo
cmp
mov
icebp
lods
repnz
in
push
shl
or
into
push
mov
aas
mov
mov
push
dec
sub
push
loopne
or
xor
cmps
push
jg
mov
xchg
xchg
sbb
out
sub
(bad)
nop
xchg
mov
pop
mov
mov
mov
push
aaa
iret
imul
clts
push
sub
fcom
push
nop
test
lock
addr16
xor
cmp
cmp
jnp
mov
add
leave
lods
and
dec
je
(bad)
and
test
les
out
pop
adc
iret
xor
add
loopne
enter
jne
imul
adc
mov
outs
xor
dec
lock
adc
add
test
pop
lahf
sbb
adc
dec
js
pop
mov
or
jmp
ins
cmc
adc
xchg
jo
jl
fst
das
sub
inc
inc
ins
(bad)
gs
fldenv
lods
(bad)
dec
ror
sbb
mov
or
cmps
(bad)
ja
add
cmps
(bad)
rcr
add
push
adc
not
and
sahf
lea
loope
mov
pop
mov
xor
sbb
ins
xchg
add
mov
mov
popa
push
xor
jge
sub
and
cmc
add
retf
mov
xor
cs
xchg
aaa
jne
(bad)
push
fs
lods
push
ins
sub
push
repz
sbb
xchg
test
add
in
mov
test
mov
adc
mov
mov
rcr
inc
cmps
sbb
add
iret
push
push
imul
cmp
sbb
dec
int
pop
fbstp
leave
cmp
push
leave
dec
lds
cld
(bad)
sbb
test
mov
xor
ds
aaa
cmc
mov
(bad)
cmp
(bad)
fnsave
push
icebp
lds
xor
movs
and
mov
fwait
pop
cs
or
adc
cmp
jg
arpl
add
mov
mov
jg
clc
rol
adc
imul
aad
xor
inc
pop
push
fldcw
clc
fld
mov
(bad)
xor
sub
call
in
push
mov
shl
xchg
jo
in
jb
jns
scas
call
push
mov
xchg
push
dec
mov
pop
cdq
or
or
and
mov
pop
bnd
and
data16
push
add
push
icebp
call
loope
hlt
or
sub
ins
add
fdivr
mov
ds
shl
js
push
out
cmp
xor
sbb
retf
lods
push
dec
pop
repnz
dec
fisttp
or
sar
mov
sar
or
mov
push
mov
in
cwde
cmp
sub
pop
out
xchg
ret
int3
imul
repz
aam
int
mov
push
cs
out
ins
iret
ss
ins
jo
imul
dec
mov
mov
mov
xlat
mov
xor
push
cwde
test
or
pop
cs
push
xchg
loope
test
xchg
xchg
push
mov
xchg
fstp
inc
jns
aaa
sar
xor
and
push
lds
jne
cmp
mov
out
nop
inc
xor
xchg
sub
xchg
sbb
xchg
mov
call
(bad)
rcr
jle
mov
cli
dec
push
aas
fldenv
in
cmp
add
repz
add
cli
pop
cbw
aas
cmp
out
outs
dec
push
dec
daa
inc
jne
fnstsw
jmp
fistp
mov
outs
xor
into
fs
jmp
pop
jge
mov
popf
les
mov
mov
xor
lock
cmp
and
lods
call
gs
(bad)
test
mov
(bad)
aaa
(bad)
cmp
adc
fldenv
dec
pop
push
and
popa
enter
fmul
cmp
shl
or
out
fmulp
xor
adc
cmp
jns
jnp
mov
lods
ja
std
xor
inc
je
xor
in
jno
aas
pop
sub
(bad)
lock
mov
(bad)
ja
jo
mov
fidivr
mov
jmp
or
xchg
hlt
imul
inc
pop
loope
daa
pushf
cmps
inc
add
add
ss
mov
mov
push
xchg
sbb
repnz
fbstp
and
aad
enter
cwde
dec
dec
push
mov
cdq
xor
xchg
push
ror
and
loop
or
jne
ss
mov
or
cld
cmp
popf
xor
push
jmp
sar
push
mov
leave
jbe
jp
push
test
add
xchg
jl
push
dec
jge
pop
bound
call
jns
shl
cmp
idiv
push
sub
cmps
outs
push
std
push
or
adc
ret
jo
test
push
repnz
xchg
cmp
dec
jl
iret
adc
or
sbb
xchg
jle
jae
fcmovb
sahf
lahf
(bad)
in
ins
xor
std
add
sbb
fwait
push
jecxz
sub
lods
push
out
fsubr
lods
inc
cmp
(bad)
fsub
out
cdq
sahf
mov
mov
push
clc
lahf
jns
std
lods
rcr
out
mov
adc
cwde
dec
(bad)
in
sahf
fdiv
push
in
ins
inc
dec
mov
xor
mov
push
inc
mov
popf
xor
jge
test
jge
adc
call
dec
inc
out
mov
gs
cmc
add
jne
sbb
mov
out
in
in
jmp
imul
shl
(bad)
and
mov
rcr
sbb
adc
jo
call
mov
(bad)
movs
xor
adc
mov
sbb
lds
pop
ds
mov
clc
push
test
ds
ds
mov
fist
rcr
mov
pushf
inc
xchg
push
mov
mov
aas
or
test
cmp
pop
not
repnz
xor
mov
mov
sub
xchg
mov
and
mov
iret
bound
test
lds
cmp
sti
loop
mov
jle
ins
das
shl
leave
out
imul
add
adc
mov
inc
in
movs
pop
or
ret
inc
mov
imul
dec
cmp
(bad)
push
adc
nop
jbe
lods
dec
inc
mov
sub
dec
inc
xor
fidiv
dec
mov
lahf
mov
jp
ins
dec
rcr
sti
hlt
fst
add
xchg
test
lds
(bad)
sbb
xor
aaa
ja
dec
ffreep
jmp
jae
stos
xor
test
outs
sbb
rcr
xchg
dec
push
clc
pop
lods
xadd
cld
test
jmp
adc
mov
sbb
data16
(bad)
lods
xchg
add
test
in
xor
sahf
jecxz
lock
out
bound
enter
and
cmp
sub
push
scas
pop
pop
jg
aaa
mov
cli
sbb
xchg
aad
call
rol
ss
pop
cmp
jae
sbb
or
mov
or
xor
scas
sbb
leave
fsubr
sbb
jbe
pushf
inc
das
dec
dec
jns
cmp
in
stc
(bad)
cmp
inc
sub
mov
jp
retf
in
test
scas
inc
pop
cmp
cmp
push
pop
(bad)
mov
test
lahf
cmp
jae
cmp
loopne
push
sti
fild
sub
mul
jmp
fst
push
addr16
dec
cmps
popf
mov
sete
cmp
pop
loope
out
into
cwde
inc
mov
jns
cmp
or
int
movs
mov
jnp
inc
mov
or
or
call
push
or
scas
jne
sub
dec
lds
fistp
mov
or
stos
adc
fldenv
cli
out
(bad)
jne
adc
inc
in
lock
ins
jmp
data16
mov
lods
scas
inc
mov
in
mov
jle
test
test
out
cli
outs
adc
and
into
push
cmp
push
xor
test
push
std
adc
sbb
ret
cld
lea
clc
sub
popf
mov
xchg
and
out
out
jl
outs
cdq
out
ret
cmp
pop
aad
add
or
into
fs
pusha
mov
and
inc
ins
rcr
sub
add
outs
jmp
xchg
mov
arpl
sbb
jle
sub
pop
das
movs
(bad)
jmp
fstp
movs
jg
or
adc
repz
mov
cmp
push
arpl
shl
retf
std
mov
sbb
stos
or
xchg
jl
xor
out
fwait
inc
dec
inc
outs
hlt
cmp
push
(bad)
add
push
xor
mov
sbb
mov
mov
sub
sub
and
mov
dec
aaa
adc
imul
call
and
push
into
mov
(bad)
cmps
inc
mov
stos
repnz
fwait
stos
dec
ja
jge
sub
neg
push
adc
out
push
cmps
mov
xor
test
sti
lahf
push
ins
inc
ja
nop
repz
jmp
sub
xchg
jnp
loop
pop
test
xor
lods
shl
fistp
xchg
inc
push
xor
mov
shl
xchg
xchg
int
icebp
add
and
cmp
repnz
adc
fmul
sti
or
dec
cdq
pop
and
add
sbb
adc
and
sti
and
repz
mov
aaa
pop
dec
pop
std
ins
inc
arpl
idiv
push
rol
lods
imul
fwait
in
sbb
test
mov
mov
xor
push
push
add
rcl
lds
or
jmp
aam
mov
jmp
pop
or
pop
xchg
std
loopne
xchg
cmps
mov
ins
or
jmp
jl
dec
je
push
sub
into
push
jmp
in
mov
inc
mov
cdq
pop
repz
aad
nop
dec
jg
es
and
push
pop
fst
ret
or
and
outs
lock
clc
test
mov
xchg
xadd
or
push
fistp
aas
mov
mov
sub
sub
cmp
outs
dec
leave
addr16
outs
ins
push
mov
popa
imul
xor
out
imul
rol
jl
or
ds
adc
rcl
xchg
leave
mov
sub
fistp
enter
push
jge
ror
add
std
push
popa
stc
icebp
mov
repnz
inc
dec
or
sbb
pop
aam
fstp
arpl
imul
frstor
push
rcl
enter
mov
or
je
add
mov
and
xchg
push
leave
or
push
fistp
dec
add
and
xor
sub
inc
sbb
fdivr
adc
push
rcl
neg
sbb
push
(bad)
ficomp
cmps
add
inc
mov
call
xchg
sbb
inc
jp
mov
add
jbe
add
in
or
ja
or
xchg
and
dec
mov
lods
xchg
pop
imul
add
stos
jb
retf
xor
nop
bnd
test
push
dec
sbb
mov
jns
push
jnp
dec
dec
loope
shl
scas
iret
dec
jnp
cmp
add
xor
in
mov
shl
std
xchg
pop
popf
mov
cmp
and
add
scas
stos
push
dec
pop
in
lods
mov
dec
stc
mov
mov
push
scas
xor
in
mov
mov
push
xchg
mov
dec
mov
adc
ins
addr16
es
je
xchg
test
arpl
into
mov
popf
lods
mov
mov
jbe
inc
shl
std
call
push
lods
pop
pop
push
into
ds
fstp
ja
ret
nop
in
sbb
enter
hlt
jge
aam
cmp
retf
scas
gs
push
pop
xor
out
sbb
mov
fcmovnu
arpl
adc
les
jmp
mov
jecxz
xchg
xor
add
and
test
pop
xchg
(bad)
ret
xchg
shl
cmp
rcl
stc
pop
bound
mov
mov
aas
cwde
sub
xor
dec
sub
dec
ror
enter
dec
outs
xchg
cmp
es
hlt
xchg
data16
fisub
jmp
xor
add
push
call
cmps
mov
inc
inc
js
std
aam
stc
loop
pop
shr
add
jnp
inc
not
cdq
xchg
pop
pushf
mov
repnz
or
rcr
sub
les
or
dec
ret
push
add
mov
mov
push
cmp
jo
pop
dec
in
inc
ds
das
jne
jmp
mov
or
mov
js
xchg
cmp
pop
xchg
and
imul
push
inc
imul
fcom
and
in
adc
cmc
mov
jo
call
or
fwait
std
icebp
sahf
jle
dec
inc
sub
mov
test
or
jb
mov
cmp
inc
add
loopne
push
jb
jecxz
dec
mov
sbb
jge
out
sbb
inc
fist
jecxz
arpl
xor
nop
inc
sub
mov
sbb
lock
push
cmp
(bad)
aas
ins
mov
pop
push
retf
push
adc
in
js
pusha
inc
ins
cmp
sbb
cmp
xor
lock
cmps
mov
and
cld
dec
js
cmps
push
mov
lods
(bad)
(bad)
loop
add
les
cmp
outs
sub
push
dec
and
jbe
aam
sbb
loope
daa
mov
mov
in
or
popf
jle
rsqrtps
add
arpl
out
cmp
or
xchg
xchg
test
xchg
pusha
inc
lock
mov
pusha
xchg
das
ins
dec
mov
adc
cmp
pop
adc
(bad)
mov
shl
scas
xchg
mov
das
rcl
mov
dec
sub
stos
cmp
hlt
push
cmps
xchg
out
mov
aam
js
sbb
stos
mov
frstor
mov
movs
xchg
test
rcr
and
push
xchg
(bad)
addr16
imul
pop
mov
mov
mov
mov
fisubr
mov
dec
inc
ret
fstp
lahf
sahf
call
call
inc
cmp
push
in
or
adc
push
test
xchg
out
shr
sub
or
pop
mov
out
xor
imul
sbb
ds
push
ret
lds
jle
or
popf
in
push
imul
icebp
jne
mov
mov
mov
mov
xchg
dec
fist
cmp
bnd
in
xor
cmc
lods
push
mov
or
in
in
adc
call
repz
mov
jbe
cmps
pop
and
(bad)
pop
test
not
lea
push
das
xlat
xchg
leave
ror
test
int3
mov
mov
and
in
and
mov
int3
mov
fst
xor
mov
out
sbb
push
add
leave
mov
idiv
sub
pop
sub
mov
stos
sub
pop
call
cwde
mov
mov
lea
mov
mov
xchg
inc
popa
add
les
sbb
div
clc
iret
mov
dec
loope
mov
scas
movs
pushf
call
adc
jg
push
mov
pop
outs
sbb
into
sar
push
fld
(bad)
jmp
cmp
and
mov
inc
add
jnp
mov
jne
test
scas
ins
adc
xchg
sbb
stos
dec
repnz
xor
xchg
xchg
or
push
mov
dec
xchg
data16
add
fnsave
jmp
std
inc
cmps
mov
sub
inc
loopne
(bad)
repz
(bad)
cmp
js
and
(bad)
adc
or
sar
mov
rcr
int3
push
pop
scas
pushf
pusha
or
adc
mov
mov
adc
xchg
stos
movs
push
out
mov
rol
rcr
iret
sub
mul
add
or
pop
adc
data16
pop
retf
(bad)
loope
test
mov
pop
stos
cmp
xchg
mov
lds
xchg
retf
or
sbb
dec
xor
jp
jns
movs
jb
jecxz
fld
jp
jge
mov
mov
pop
pop
or
inc
dec
inc
inc
int
retf
hlt
shl
mov
push
push
fisttp
int3
(bad)
iret
les
or
imul
xchg
and
sub
push
imul
adc
adc
adc
test
aaa
sti
bound
push
mov
shr
xchg
push
xchg
jmp
pop
out
cwde
jbe
(bad)
xchg
out
and
xor
hlt
pop
jo
add
ja
sub
sub
stc
icebp
jb
repz
cmp
ins
pop
jl
mov
cmc
sar
pop
imul
stos
xchg
xor
jl
sbb
mov
pop
arpl
ds
xchg
or
cwde
jmp
cmps
mov
jmp
out
pop
jns
out
hlt
inc
cld
xor
mov
dec
xchg
and
xor
test
cmps
ret
pop
jecxz
push
mov
les
xchg
push
cmp
pop
dec
outs
fld
iret
ins
and
aaa
std
retf
(bad)
and
or
loopne
and
cmp
(bad)
fsub
add
mov
xchg
sbb
inc
push
fisubr
xor
pop
push
popf
pop
inc
sub
int3
xchg
dec
cmp
push
jo
dec
add
jecxz
idiv
mov
add
xchg
adc
pop
fsubr
cmps
lods
lds
ret
jp
movs
test
dec
pop
jmp
lods
call
into
adc
in
mov
stc
loopne
icebp
xor
inc
and
(bad)
mov
enter
mov
jmp
xor
mov
call
push
mov
add
lea
add
pusha
sbb
push
test
fbld
xor
push
cli
push
pop
or
mov
mov
retf
ficomp
xchg
sbb
pop
xor
xchg
imul
jge
bsf
xchg
xchg
mov
sbb
xchg
sub
adc
pop
je
or
push
lds
or
gs
cmp
xlat
sub
lahf
mov
pop
out
jmp
xor
(bad)
lock
jmp
adc
xchg
push
dec
les
int3
push
pop
outs
(bad)
(bad)
pop
jp
mov
popa
push
dec
clc
loopne
adc
dec
cwde
mov
add
aaa
shr
in
mov
cmp
js
arpl
icebp
adc
jle
js
add
fsub
mov
test
dec
dec
loope
and
push
mov
mov
xchg
std
call
ds
inc
loopne
and
icebp
add
imul
mov
sbb
into
add
mov
xchg
xchg
jb
std
xor
pop
arpl
loop
adc
or
mov
mov
lods
arpl
pushf
dec
les
mov
xor
fdivr
and
or
sub
pop
jne
and
call
cmp
push
add
inc
xor
cmp
jnp
in
test
shl
adc
call
or
sbb
test
or
cs
mov
lods
push
dec
inc
sbb
ss
sbb
jle
push
rcl
adc
mov
adc
fwait
and
gs
adc
dec
push
xchg
dec
inc
xchg
and
jmp
xchg
dec
mov
movs
sub
sbb
int
xor
addr16
dec
mov
add
lods
(bad)
lods
inc
and
stos
(bad)
dec
mov
fdivr
stos
test
fild
dec
add
jb
enter
pushf
jmp
pop
push
imul
inc
push
aad
sahf
adc
jns
jle
add
jbe
xchg
jl
addr16
out
aam
test
mov
jo
xchg
stc
aaa
jle
inc
mov
ss
(bad)
jae
stos
rcr
and
sbb
shr
repnz
jb
fisub
repz
fucomip
test
out
sub
jp
and
mov
out
ret
pop
es
cld
lds
or
xor
pop
jl
shr
mov
outs
in
lahf
mov
lock
lods
jb
add
pusha
neg
push
xchg
or
adc
lods
mov
shl
push
push
call
mov
mov
(bad)
enter
inc
movs
shr
add
mov
mov
ja
fnstsw
xchg
inc
inc
test
jmp
jo
adc
rcl
fwait
adc
das
mov
hlt
sbb
loop
mov
mov
lock
or
add
lods
sub
or
cmps
in
inc
or
and
add
cmps
call
in
shl
dec
test
rol
shr
cmps
mov
sub
sbb
pop
mul
enter
dec
add
mov
stos
xchg
cmps
mov
out
test
sbb
xor
cmp
mov
leave
adc
push
pop
push
adc
mov
ret
inc
adc
maskmovq
idiv
sbb
mov
dec
sub
jae
out
mov
call
rcr
inc
push
sub
mov
mov
or
out
xchg
add
push
movs
push
data16
fst
sbb
dec
inc
fisttp
mov
in
dec
xor
mov
sahf
out
sbb
dec
scas
ins
leave
mov
popa
test
adc
int3
and
jae
ja
and
das
dec
mov
xor
pop
xchg
je
dec
mov
pop
retf
idiv
lods
sbb
lods
sahf
sub
mov
jmp
sub
adc
mov
xchg
jp
jl
div
fcmovnu
ja
icebp
jg
mov
cwde
je
and
int
movs
dec
dec
enter
mov
xor
leave
loopne
xor
ror
enter
sub
loope
or
xor
out
adc
mov
dec
inc
mov
or
rcr
shl
pop
aaa
sub
sub
xor
jl
popf
mov
(bad)
xlat
pop
in
jmp
adc
add
pop
xor
dec
loopne
cli
pop
xchg
rcr
retf
pop
sub
pushf
mov
adc
push
inc
icebp
gs
stc
aas
cmp
sub
pop
and
dec
inc
push
cs
ss
lahf
int3
cld
ja
jl
xchg
and
repnz
sbb
or
stos
int3
int
and
mov
rcl
sbb
in
push
add
cmp
or
adc
ja
rcl
ds
icebp
lods
mov
int
je
or
pop
or
stos
sbb
adc
xor
push
rol
pop
into
cmp
ret
inc
jge
xchg
dec
fldcw
adc
sub
cld
adc
fwait
test
sub
jl
pushf
xor
loope
fst
rcr
inc
clc
adc
push
ds
jne
in
cdq
bound
aas
gs
pusha
aad
push
std
loope
xor
das
fs
push
(bad)
jns
cmp
and
in
mov
mov
sub
stos
in
mov
push
rcr
add
add
mov
and
scas
je
push
pop
adc
adc
pop
je
cmovb
inc
cmps
in
jle
movs
jne
into
loopne
movs
and
fs
sbb
dec
xor
retf
outs
ss
adc
cwde
leave
and
outs
in
jne
aaa
mov
rol
jecxz
test
push
mov
pop
mov
cmp
pop
inc
inc
jge
addr16
test
cmps
inc
pop
add
scas
js
fild
xor
cmps
popa
int
push
aam
mov
push
(bad)
mov
popa
clc
pop
lock
enter
std
xchg
aam
(bad)
out
xlat
dec
test
div
test
test
js
push
sub
mov
ret
outs
pop
add
mov
sbb
jmp
push
jns
mov
mov
call
ds
pop
add
xchg
adc
test
or
aaa
das
in
out
arpl
out
sbb
sbb
mov
adc
popf
fadd
shr
shr
jmp
div
xchg
int
mov
adc
hlt
data16
sub
and
pop
dec
or
sub
jnp
pop
retf
in
jmp
inc
ja
aaa
mov
cli
lahf
test
ror
jmp
dec
(bad)
clc
adc
(bad)
in
mov
mov
cli
jo
sbb
mov
lods
jae
inc
add
fcomp
int3
jmp
push
pop
pop
(bad)
inc
add
retf
lock
add
adc
shr
pushf
loop
jo
cld
push
fdivr
jecxz
sub
sub
addr16
aaa
int
jecxz
sub
ss
add
outs
xchg
mov
mov
(bad)
mov
(bad)
dec
outs
dec
movs
cld
imul
hlt
loop
add
daa
mov
sbb
jl
lock
pop
leave
or
sbb
xchg
adc
loopne
ins
call
nop
pop
out
lds
stos
mov
test
addr16
stc
mov
cmp
xor
add
ja
aas
and
fst
mov
adc
adc
mov
push
mov
dec
mov
push
push
or
(bad)
out
mov
adc
cmp
aam
and
pop
mov
sbb
mov
repz
dec
imul
jmp
pop
inc
and
xchg
sbb
xchg
ret
cmp
pusha
mov
dec
arpl
pop
std
xchg
push
hlt
into
test
scas
retf
dec
cmp
pop
lods
xchg
pop
je
add
ja
fidivr
sub
aad
sar
mov
xchg
xor
push
push
jnp
xchg
jnp
mov
add
inc
xchg
add
stos
mov
xor
jl
push
ret
les
xor
pop
popa
adc
ins
dec
je
retf
cmp
aad
sub
mov
mov
sti
sub
jle
in
int3
stos
add
cmp
out
xchg
pop
(bad)
pop
cmp
pushf
inc
push
sahf
bound
push
and
loopne
in
adc
aam
mov
sbb
nop
leave
xor
aas
cmc
shl
stc
push
sub
sbb
add
lods
sub
lods
repnz
jmp
fsub
jb
mov
xchg
ficomp
scas
mov
fwait
sbb
pop
sahf
shl
enter
outs
rcr
mov
xor
cmp
ficomp
aas
xchg
xor
iret
push
xchg
retf
adc
sahf
or
aam
mov
ds
jmp
jne
mov
(bad)
cli
dec
adc
xor
mov
test
and
sub
ficomp
test
pop
or
jmp
mov
mov
cmp
xor
push
retf
xchg
fbstp
push
loopne
pop
rol
lods
out
inc
cmp
jp
mov
jbe
xchg
sub
adc
or
sbb
sub
pop
aas
mov
mov
aas
push
dec
xchg
lods
es
mov
adc
or
(bad)
jg
lods
sub
shl
jg
stos
cmp
shr
dec
aas
push
in
retf
dec
shr
fwait
std
xor
sbb
and
and
jno
jecxz
outs
dec
push
sbb
and
adc
ds
mov
cdq
push
or
pop
mov
pop
add
mov
push
and
xchg
loope
das
rol
mov
mov
mov
les
repz
add
jl
sar
mov
push
stos
enter
cli
mov
test
loop
inc
stos
das
mov
dec
cmc
adc
mov
inc
push
and
out
das
inc
aam
push
sbb
xor
repnz
lods
mov
xchg
loopne
xchg
sar
shl
mov
outs
mov
ror
popf
jp
push
ficomp
xchg
fwait
xor
je
ror
inc
adc
xchg
xchg
push
loop
(bad)
nop
call
out
mov
cli
add
cwde
test
xchg
inc
fdiv
mov
leave
das
jmp
inc
mov
push
dec
mov
xchg
push
ins
stos
sbb
outs
xchg
jg
mov
movs
xor
xchg
out
aaa
out
cmp
add
ret
rol
icebp
retf
dec
cmp
jecxz
mov
pop
rcr
and
dec
xchg
cmp
fs
xor
jl
jnp
pusha
jmp
iret
bound
lds
cmp
adc
in
hlt
not
jns
pop
and
sub
jno
xchg
xor
jno
out
inc
push
sub
or
push
movs
mul
shl
jp
inc
ins
ja
mov
sbb
jl
fbld
jmp
int
lahf
and
mov
pop
cmps
dec
jmp
ja
test
mov
sbb
and
adc
adc
xchg
lds
pusha
dec
test
test
push
(bad)
mov
mov
push
sub
dec
sub
mov
ins
(bad)
mov
xor
xchg
push
sbb
arpl
add
dec
inc
xor
lock
sbb
ret
or
mov
jo
out
imul
mov
fcomp
xor
adc
imul
adc
mov
daa
bound
cmovl
push
daa
pop
out
es
(bad)
imul
cmp
dec
in
enter
mov
mov
ret
popf
mov
xchg
icebp
call
pop
test
cmps
push
cld
mov
clc
add
pop
mov
push
(bad)
call
jle
sbb
xchg
sub
fsub
and
jecxz
ja
and
sahf
cmps
dec
adc
push
cld
cmp
pop
cmc
lods
rcl
jns
ds
xor
xchg
lahf
sahf
jl
push
sti
jmp
outs
add
jmp
stc
xor
add
stc
pop
data16
call
mov
movs
addr16
je
loopne
pop
mov
adc
push
fs
adc
xchg
jo
mov
cmp
gs
mov
adc
call
hlt
arpl
loope
js
add
ins
(bad)
adc
pop
jae
mov
cwde
push
mov
arpl
dec
pop
dec
(bad)
loop
xchg
out
mov
inc
lods
rcl
xor
mov
fmulp
pop
mov
imul
dec
cmp
in
push
adc
mov
mov
les
add
dec
mov
xchg
and
mov
jl
add
daa
movs
sub
shl
mov
test
lahf
lds
std
stc
mov
or
or
out
mov
push
sbb
dec
fmul
mov
jle
scas
mov
js
sar
fnstenv
xor
ds
and
fcmovnu
jns
push
mov
mov
and
shr
rcl
movs
sub
out
cmp
fistp
sti
xchg
dec
dec
inc
bound
cmp
mov
(bad)
cmc
mov
lock
sbb
aas
adc
gs
movs
mov
pop
dec
pop
arpl
mov
not
imul
mov
inc
jmp
push
add
fwait
add
std
mov
or
jl
out
push
nop
rcr
das
scas
mov
xchg
imul
jge
pop
push
dec
inc
or
sbb
aas
test
mov
out
scas
pop
(bad)
fistp
test
cwde
mov
hlt
test
or
add
sbb
out
push
mov
int3
xchg
in
or
outs
fmul
add
ffree
mov
inc
xchg
pop
in
mov
fdivr
mov
cwde
lds
pop
mov
and
nop
cmp
push
jno
jmp
retf
div
std
xchg
or
xor
cmp
leave
lea
imul
scas
sbb
out
xchg
popa
hlt
test
and
xchg
fmul
pop
lods
mov
sub
outs
sub
pop
or
cmp
push
sbb
push
cmp
push
xor
dec
pusha
aad
ficom
call
ins
scas
sahf
pop
mov
hlt
sub
ss
adc
out
and
sti
in
xchg
lea
xor
pop
mov
scas
fwait
push
push
mov
and
mov
pop
cmp
jb
enter
mov
repz
iret
mov
cmp
xchg
(bad)
inc
rcr
data16
xor
xor
ret
fist
xor
cmp
add
xchg
mov
daa
mov
fadd
outs
(bad)
loop
pop
test
xor
dec
pop
mov
sub
fnstcw
test
pop
mov
lea
js
pop
fwait
lock
sbb
stos
shl
out
jmp
jmp
sub
xchg
jae
inc
push
jge
or
test
push
sub
mov
mov
inc
push
fs
imul
adc
call
sub
adc
or
rcr
cmps
or
out
pop
cmp
icebp
push
xchg
jns
adc
jg
lods
scas
jmp
cmp
xor
das
or
and
mov
xchg
ins
leave
ret
mov
mov
jecxz
mov
cwde
cmp
pop
leave
fisubr
add
pop
fistp
inc
dec
test
cmp
adc
xor
nop
adc
jg
fsub
adc
loopne
push
mov
test
lds
retf
push
mov
mov
fsubrp
out
xchg
push
retf
in
jl
stos
ds
arpl
or
cmp
lds
pop
xchg
push
push
fldenv
xchg
daa
and
jle
fldcw
mov
mov
inc
imul
cli
pop
pop
adc
mov
out
or
xor
ins
pop
add
jmp
movs
xor
push
xchg
mov
hlt
loop
inc
out
pop
ss
pop
ja
cmp
adc
popa
xor
cli
adc
inc
or
push
xchg
out
das
(bad)
xchg
cmp
jnp
mov
mov
push
out
scas
fwait
mov
mov
fiadd
cmp
or
mov
and
xchg
and
add
adc
pop
out
jle
add
fist
sub
push
retf
jge
ror
hlt
js
repz
inc
daa
cld
scas
lods
and
outs
pop
pop
push
mov
pop
cwde
dec
retf
inc
add
ss
clc
scas
xlat
push
(bad)
cmps
push
outs
ins
cdq
psubsw
iret
xchg
dec
iret
xchg
pop
cmp
fld
inc
mov
mov
bound
mov
push
popa
rcr
add
dec
mov
sub
cmp
xchg
test
(bad)
adc
movs
mov
mov
imul
cdq
mov
xchg
sbb
or
adc
pop
cmp
pop
outs
cmp
pop
mov
mov
cs
xchg
lahf
repnz
push
std
stos
(bad)
ins
dec
movs
loope
stos
popa
inc
sbb
fist
mov
fwait
(bad)
cmp
je
and
ss
repz
movs
cmp
inc
xor
ds
push
and
push
retf
push
adc
xchg
mov
push
sub
(bad)
mov
popf
mov
pop
fisttp
ror
dec
icebp
mov
sbb
loope
fstp
movs
(bad)
addr16
xor
push
dec
arpl
xchg
ss
outs
xchg
or
or
push
push
jo
xor
retf
jmp
inc
mov
jmp
cmp
inc
mov
ds
out
aam
or
inc
and
vpcomd
int
jb
jbe
cmp
dec
and
xor
xor
mov
aas
rcr
adc
in
cmp
fidivr
(bad)
lods
lock
jmp
mov
clc
add
sbb
xor
sbb
jae
dec
call
xchg
jmp
test
jb
mov
sub
mov
sub
cs
fwait
inc
mov
jle
xchg
fisubr
add
jnp
(bad)
mov
jnp
jge
xlat
les
and
sbb
push
lahf
cmp
xor
mov
pop
pop
(bad)
les
pop
push
inc
or
xchg
jmp
mov
mov
adc
mov
loop
and
sahf
inc
cs
dec
fisubr
fldenv
mov
push
sbb
sbb
jle
xchg
dec
inc
gs
push
pop
call
pop
loope
cwde
mov
cmp
mov
in
in
cmp
jnp
pop
add
out
aam
pop
jecxz
cmp
or
push
repz
sub
sub
pop
arpl
(bad)
adc
ss
out
ficomp
jne
add
push
jg
les
je
xchg
jp
fld
out
imul
jecxz
lods
repz
leave
int
xlat
scas
(bad)
mov
add
sti
das
mov
push
fisubr
push
push
mul
lock
xor
sub
pop
push
stos
sbb
loop
arpl
cmp
lock
stos
ins
add
dec
jle
and
ss
scas
bnd
dec
add
or
in
(bad)
loope
(bad)
jle
pushf
cmc
aas
movs
sti
add
ins
out
daa
fisub
dec
cmp
jge
cmps
and
mov
fcom
xchg
pop
sbb
(bad)
jmp
jmp
mov
aas
repnz
nop
mov
enter
fs
stc
and
outs
bound
jo
adc
xor
jne
xor
dec
jo
outs
mov
push
ret
and
into
dec
sti
leave
adc
mov
sti
outs
sbb
jp
sbb
(bad)
mov
dec
popa
dec
pop
push
adc
xchg
sub
inc
fwait
dec
mov
cmps
pop
mov
(bad)
sub
push
pushf
movs
mov
mov
and
dec
cmps
pop
arpl
jo
and
mov
int3
inc
fistp
dec
mov
mov
pop
test
sbb
xor
in
cmc
das
xchg
jle
mov
(bad)
rcl
jg
dec
xor
xchg
ja
mov
pop
mov
and
bound
dec
es
xchg
sub
mov
(bad)
inc
jp
jl
add
test
icebp
idiv
(bad)
lods
test
xor
loope
sbb
xchg
push
push
adc
test
(bad)
in
adc
pop
jne
push
sub
les
test
push
stc
mov
and
jns
enter
fidiv
and
lahf
push
xor
sub
sub
xor
test
adc
mov
xchg
test
jge
call
cmps
jle
outs
pop
jmp
(bad)
xorps
mov
jno
repz
mov
jmp
pop
(bad)
mov
xchg
repz
or
daa
push
push
adc
mov
jmp
and
int
pop
movs
stos
push
adc
mov
jl
mov
or
cmp
mov
inc
adc
jl
xchg
int
push
sahf
ret
cmp
push
sysexit
movs
shl
xchg
lahf
xchg
mov
push
stos
xor
inc
aaa
mov
mov
pcmpgtw
cmp
scas
cld
pop
push
js
fbld
jg
into
cld
pop
mov
jmp
or
add
xchg
call
and
sub
and
mov
adc
arpl
je
loopne
and
sbb
fidivr
call
fs
or
push
pop
inc
dec
mov
jno
fs
add
in
inc
add
push
jno
loopne
adc
fiadd
ds
cli
and
or
jge
add
xchg
lock
icebp
enter
xor
push
cmc
add
enter
add
fild
call
mov
jp
adc
popa
sub
cmps
add
push
loopne
loope
bound
loopne
test
and
call
xor
pop
add
push
cmp
xchg
mov
push
mov
xchg
jbe
std
test
out
lea
xlat
pop
mov
sbb
xor
stc
sub
push
adc
retf
out
bound
movs
fdiv
popf
lods
arpl
jmp
inc
rol
push
lock
pop
jmp
jmp
call
pusha
sub
or
fist
cmp
inc
xchg
sub
mov
or
xchg
inc
mov
movs
xchg
frstor
pop
sti
pop
imul
daa
mov
stos
pop
clc
(bad)
mov
inc
adc
clc
mov
push
xor
xor
cmp
inc
rcl
ins
mov
repnz
mov
div
adc
jne
ds
fwait
movs
xor
popf
fsub
sub
mov
jmp
icebp
nop
scas
cli
adc
arpl
scas
cmps
sbb
xchg
cli
and
and
dec
push
sbb
cli
lds
or
mov
cli
test
cmps
adc
xor
push
pop
xor
fs
test
mov
inc
dec
inc
test
sbb
je
xchg
xor
nop
stos
mov
ins
sti
bnd
push
lock
mov
fidivr
ret
bound
sti
cmp
adc
repz
idiv
pop
adc
dec
cmp
call
rcr
or
scas
(bad)
or
push
dec
and
mov
mov
(bad)
cmp
test
sub
push
sbb
aad
repnz
cmc
(bad)
jnp
rcl
sbb
push
add
xchg
(bad)
mov
adc
and
icebp
stos
gs
inc
adc
mov
clc
int
or
mov
ret
pop
xor
and
or
mov
add
sar
repnz
lds
daa
test
sar
mov
loopne
cmp
stos
je
mov
es
cmp
iret
adc
xchg
popa
ja
push
je
ror
pushf
lea
(bad)
pop
jg
test
(bad)
mov
xchg
aam
sar
(bad)
pushf
cli
aam
std
inc
or
jae
test
push
jl
mov
pop
vpsubd
ret
ret
inc
cmps
or
sub
mov
adc
add
std
mov
sti
ja
inc
arpl
out
jp
lods
retf
shl
movs
shl
cmp
xor
call
fs
or
cdq
fisub
fmul
or
and
sub
pop
hlt
fidiv
in
mov
repnz
shl
aaa
iret
mov
in
jge
mov
(bad)
test
jb
and
and
out
daa
sbb
mov
dec
sub
jmp
gs
and
(bad)
movs
dec
sbb
rcr
dec
or
test
pop
or
cwde
xor
(bad)
cmp
sbb
and
(bad)
aam
jge
push
mov
and
adc
add
data16
and
cmp
imul
stos
push
mov
es
fstp
stos
xor
pop
out
inc
imul
rcl
mov
or
pop
(bad)
sbb
xchg
out
push
cmp
in
jmp
mov
jp
iret
movhps
xor
data16
scas
jl
hlt
inc
mov
fwait
rol
or
add
pop
jmp
push
sbb
lahf
xor
sub
jne
xlat
mov
aas
xor
scas
mov
movs
fimul
rcr
paddusb
dec
mov
fcom
push
xor
mov
jg
or
ja
dec
cmp
jl
iret
cmp
mov
sbb
aaa
lods
mov
jmp
fsub
push
outs
sub
pop
push
mov
ret
adc
dec
jnp
xor
push
outs
lds
mov
into
jge
xor
mov
adc
repnz
adc
lahf
int
adc
addr16
or
xchg
sub
pop
arpl
aam
xchg
inc
jle
iret
mov
data16
sbb
cmp
jbe
or
xor
push
loopne
iret
pop
(bad)
pusha
xor
mov
cmp
ret
jbe
jae
fidivr
xchg
sbb
xchg
dec
loopne
adc
or
xor
fs
mov
dec
pusha
or
fsub
scas
push
std
shl
jmp
test
(bad)
ins
jge
pop
or
and
sub
(bad)
(bad)
xchg
repz
bound
jb
xor
movs
std
inc
pushf
xchg
jecxz
adc
retf
mov
imul
inc
pop
pop
mov
cli
push
in
jge
fisub
aas
ja
outs
lds
mov
imul
xor
mov
pop
(bad)
add
xor
cmp
xor
sar
outs
hlt
mov
imul
mov
mov
retf
push
dec
loopne
dec
add
mov
mov
pop
mov
ret
fcomip
or
in
add
sahf
(bad)
(bad)
adc
xor
jmp
mov
and
repnz
dec
jle
mov
hlt
mov
shr
add
fstp
dec
sar
aas
sub
fwait
push
lahf
xchg
fs
neg
cli
inc
and
and
jmp
dec
rcr
xchg
pop
arpl
mov
std
lods
call
or
or
pop
jbe
mov
ficom
jbe
cmp
jns
jmpw
lods
add
arpl
jl
ss
dec
dec
dec
and
dec
cmp
jecxz
outs
pusha
cdq
jno
(bad)
sbb
or
jbe
scas
dec
inc
imul
jbe
sbb
jae
xor
in
scas
mov
cld
mov
inc
push
rcl
push
sbb
imul
shl
jge
ficomp
addr16
ds
sub
mov
pop
pop
data16
push
inc
enter
mov
and
add
pushf
dec
sbb
pop
jno
pop
xchg
in
movs
lahf
push
cmp
sar
inc
ins
cmp
sbb
jno
dec
ficomp
jb
push
cmps
gs
aam
add
adc
aam
push
mov
iret
add
in
jno
xchg
loop
int
movs
inc
scas
jb
inc
xchg
mov
sahf
mov
mov
xlat
inc
aaa
dec
(bad)
imul
fs
pop
out
mov
jle
xchg
jp
inc
pop
inc
cmp
xchg
push
or
(bad)
bnd
or
xor
xor
loope
scas
scas
dec
inc
jge
scas
adc
mov
xor
push
xchg
mov
mov
jne
ret
movs
fcomp
mov
mov
paddw
lods
sub
xchg
push
mov
aam
test
add
add
mov
jmp
add
add
es
fist
add
mov
mov
mov
leave
pop
dec
mov
dec
push
(bad)
(bad)
mov
retf
shr
pop
xor
rcl
(bad)
cld
gs
pop
addr16
test
in
inc
cdq
xor
mov
adc
aaa
popf
xlat
or
add
and
ror
jge
bnd
jecxz
push
daa
push
test
sar
jl
add
adc
cmp
call
and
xor
sti
repz
mov
push
jle
imul
test
ss
mov
jmp
sahf
and
cwde
add
aad
pop
mov
xor
jb
mov
adc
push
cmp
inc
sub
push
or
inc
lahf
ror
dec
jbe
gs
sbb
xchg
imul
xor
test
das
sub
out
adc
dec
add
and
lahf
push
or
or
daa
sahf
or
pop
repnz
ret
sub
das
jae
or
add
les
pop
pop
str
sbb
inc
cmp
mov
push
pop
inc
outs
push
call
pop
inc
sbb
mov
int3
stc
dec
ror
and
mov
jbe
(bad)
and
mov
add
lds
in
xor
int
shr
popf
mov
sub
cmp
dec
ss
push
xlat
or
or
mov
mov
rol
add
push
outs
pop
movs
hlt
inc
inc
les
icebp
mov
push
movs
call
jl
aam
loop
sub
xor
add
pop
lods
retf
pushf
pop
and
std
fs
jp
icebp
icebp
pop
jae
jb
fiadd
out
lock
(bad)
mov
call
adc
or
(bad)
push
xor
ss
sub
cmp
(bad)
sar
outs
clc
or
scas
inc
cmp
adc
inc
pop
mov
nop
sbb
push
sbb
(bad)
and
cs
out
fcom
mov
rcl
lods
(bad)
xchg
js
or
sub
or
or
mul
shl
cmp
lahf
std
test
out
cmps
lods
sub
stc
sub
lds
sub
xor
sub
cli
nop
clc
adc
and
mov
xchg
aaa
clc
aas
rcl
ins
scas
jnp
ret
or
jmp
cwde
mov
or
fdiv
push
bound
xchg
lahf
enter
push
sbb
lahf
mov
bound
sar
(bad)
cmp
mov
ret
or
test
xor
out
jl
cmps
mov
jg
sub
out
je
mov
cs
aas
pop
nop
adc
ins
inc
sub
adc
pop
pop
jae
lods
xchg
mov
and
cmp
sbb
jae
in
clc
and
xor
dec
add
or
aad
cmps
fdivr
adc
inc
es
nop
mov
fsub
repz
ins
or
inc
aad
jecxz
dec
push
jae
xchg
loope
in
in
jns
cmp
mov
sar
or
cmp
or
pushf
inc
addr16
sub
jle
sti
inc
adc
inc
scas
mov
stos
xor
xor
(bad)
and
push
cwde
xor
(bad)
xor
shl
jae
mov
cmps
in
pop
dec
sub
test
cmp
out
sub
xor
jmp
(bad)
adc
dec
add
imul
(bad)
xor
adc
pusha
jmp
xor
push
fistp
in
outs
int3
jp
cmps
ficomp
lods
cmp
fadd
mov
out
icebp
jae
imul
movs
sbb
or
shl
adc
inc
stc
dec
inc
sbb
add
and
jbe
adc
cmc
retf
in
sub
ds
(bad)
xchg
jae
dec
inc
aam
call
stc
mov
aad
adc
pop
rol
inc
mov
pop
(bad)
xchg
aas
xchg
adc
imul
inc
in
sub
test
test
(bad)
retf
jp
scas
dec
ror
outs
test
pop
out
fisubr
pusha
std
push
inc
cmp
in
aad
sub
leave
adc
es
push
nop
sbb
adc
xchg
inc
ss
dec
in
adc
rol
and
add
pop
es
into
mov
mov
dec
push
push
sbb
arpl
sbb
outs
jp
xchg
jg
sub
aas
and
sahf
(bad)
mov
adc
les
call
fs
sub
adc
or
and
push
ja
sub
mov
fadd
jmp
stos
mov
push
pop
call
add
sub
cli
inc
test
mov
call
adc
call
sbb
push
rol
je
ror
mov
movs
pop
pop
stos
push
jnp
mov
pop
push
in
(bad)
data16
test
push
dec
je
mov
cmp
dec
ds
fld
ins
fs
pop
loope
ss
mov
cli
push
or
imul
cmp
mov
pop
mov
cmp
pop
in
xchg
das
repnz
inc
mov
mov
or
mov
push
pop
mov
xor
mov
mov
test
cdq
xlat
pop
imul
(bad)
cmps
int
add
xchg
scas
dec
mov
jle
pusha
mov
and
in
cli
xchg
add
lods
mov
xchg
lock
xchg
js
and
aas
fst
rol
xchg
mov
lahf
aaa
inc
ret
nop
xchg
adc
jg
clc
sti
xor
add
ret
aaa
inc
cmps
adc
mov
jbe
push
and
jbe
movs
cmp
dec
mov
mov
movs
xor
or
or
fist
out
adc
iret
call
retf
push
adc
pop
fld
fwait
mov
add
(bad)
aaa
ficomp
in
jecxz
mov
out
cmc
sub
addr16
(bad)
aad
adc
sub
rol
add
stc
aad
dec
stos
test
pop
jne
push
adc
mov
stos
jno
mov
out
je
popf
pop
sahf
pusha
sbb
int3
jmp
es
aas
inc
leave
iret
das
and
(bad)
xchg
cwde
and
cmp
dec
(bad)
mov
jl
or
dec
mov
mov
cmp
out
repz
xchg
(bad)
(bad)
and
mov
jnp
jmp
inc
jae
push
jb
or
sub
jge
loopne
xor
int
xchg
dec
jg
push
ret
int3
fs
xchg
ins
outs
mov
jo
mov
adc
cmps
cmc
scas
aaa
pusha
pop
call
or
inc
sub
(bad)
loopne
(bad)
push
imul
jge
sbb
jno
test
push
mov
cmps
aas
jmp
mov
rol
add
and
idiv
iret
test
jnp
push
pop
push
adc
push
sbb
cmps
cmps
addr16
jae
jne
ss
inc
cmp
dec
shl
lods
mov
call
sahf
outs
icebp
jne
out
sar
pusha
mov
sbb
jmp
mov
cmps
test
jmp
add
mov
mov
ficom
ins
and
mov
cld
sti
add
cld
or
and
(bad)
cli
and
jb
ss
mov
movs
cdq
(bad)
shl
xchg
shl
(bad)
scas
sub
les
push
push
mov
outs
jns
cmp
imul
xchg
(bad)
dec
imul
lods
mov
adc
or
fs
xchg
sbb
sbb
nop
cmc
adc
test
fsub
retf
dec
sub
xor
and
movs
jae
rol
jne
stos
jp
push
sti
dec
loope
add
push
mov
sbb
mov
fbld
sub
push
mov
xor
pop
or
fistp
adc
dec
loope
fnstsw
out
jp
push
call
movs
int
pop
inc
and
sub
sbb
jl
adc
mov
pop
jmp
test
loopne
dec
mov
leave
popf
xchg
fcomp
adc
push
repz
cwde
jmp
jle
add
and
fdivr
pop
aam
xchg
loopne
mov
fimul
je
pop
and
fdivr
mov
xor
aas
shl
pop
or
xchg
rcr
inc
outs
pop
stc
pop
add
fmul
xchg
jge
inc
cmc
retf
inc
mov
inc
jl
das
aas
fwait
xchg
nop
push
movs
les
mov
packuswb
inc
(bad)
push
int
cmp
sbb
test
hlt
retf
sub
int
jecxz
mov
daa
xchg
test
jmp
pop
fdivr
push
addr16
rcr
xchg
dec
pop
clc
in
pop
mov
or
fs
out
sbb
pop
mov
jb
bound
jnp
and
shl
js
mov
dec
dec
adc
push
lods
jge
int
push
aad
xor
fcomp
icebp
push
and
fnstcw
dec
dec
and
pop
pop
xchg
cmp
outs
inc
push
pop
push
cvtpi2ps
shr
sahf
sub
cwde
nop
inc
icebp
mov
pop
mov
xor
jo
retf
or
push
mov
or
popf
fisttp
leavew
icebp
mov
xchg
adc
or
cli
fst
lods
out
jge
imul
xchg
mov
(bad)
push
popf
push
push
and
mov
mov
(bad)
sti
je
jne
sbb
(bad)
push
inc
mov
gs
mov
dec
jns
retf
mov
adc
push
jnp
cvtps2pd
and
rol
push
sub
inc
test
xchg
fcmovnb
jb
xor
pop
add
out
nop
je
inc
mov
xchg
(bad)
pop
xchg
pop
cmp
dec
into
fist
or
sbb
cmp
mov
les
push
fcmovb
inc
mov
pop
or
cli
out
(bad)
cwde
pop
jbe
cmp
cmp
adc
push
(bad)
(bad)
into
dec
xchg
jecxz
and
aas
mov
stos
jge
lock
mov
push
add
pop
lahf
ret
addr16
fwait
jge
or
lods
cmp
or
movs
add
and
rol
add
mov
icebp
push
mov
inc
not
and
pop
adc
dec
dec
push
fs
int3
adc
pop
jp
sub
retf
xor
lods
add
adc
neg
jo
ins
mov
inc
hlt
call
jl
(bad)
jge
push
jns
push
in
cwde
int3
repnz
mov
add
test
ret
mov
pusha
mov
jecxz
xor
clc
test
jae
dec
inc
cld
sub
xchg
out
cmps
sub
out
sar
lods
cmp
sub
lock
hlt
std
add
pop
ins
loope
push
mov
add
imul
shr
pusha
shr
cs
jae
jge
mov
xchg
sub
sbb
pop
out
xor
jp
cmp
push
ds
cmp
sub
jns
sub
cmc
(bad)
hlt
mov
jge
pusha
ja
fucom
mov
pusha
(bad)
pop
leave
pusha
addr16
xchg
icebp
lods
stos
ins
lock
pop
jle
mov
cmp
inc
in
sar
outs
mov
mov
mov
dec
sbb
mov
xchg
imul
lods
arpl
mov
inc
stos
dec
push
icebp
xor
sar
call
fiadd
dec
repnz
xor
cli
xchg
xchg
or
mov
lea
(bad)
aam
hlt
jg
enter
xlat
mov
inc
jl
xlat
fstp
cmc
or
lahf
xchg
cmp
dec
popf
mov
ret
push
fadd
cmp
fcom
push
sub
mov
push
out
pop
stos
inc
ins
cmp
je
dec
add
dec
adc
sbb
scas
jg
sbb
test
popf
jne
es
bswap
stos
and
or
mov
dec
xchg
push
std
(bad)
push
int3
outs
sub
repnz
lahf
jmp
jne
pop
inc
in
dec
cmp
cdq
stc
jl
xchg
pop
mov
pop
ret
cs
daa
jbe
(bad)
jmp
xor
pop
cdq
and
push
add
shl
jle
repnz
xchg
imul
mov
sahf
add
jne
in
ret
aam
jno
test
sbb
outs
adc
ret
dec
sub
pop
lods
aam
xchg
push
push
nop
pop
lahf
pop
cdq
enter
jmp
sub
retf
add
mov
mov
mov
push
(bad)
pop
dec
sub
retf
shl
retf
adc
popf
js
ja
and
dec
cs
sub
sub
js
push
jns
(bad)
rol
sbb
jo
popa
pop
popf
in
stc
repnz
outs
push
add
sub
inc
scas
loop
dec
inc
bnd
mov
imul
and
sahf
ins
lar
imul
mov
mov
sub
sbb
push
xor
xor
fmul
cmp
mov
loop
ja
sub
sub
jecxz
add
js
cmp
std
cwde
cwde
lds
adc
jae
aaa
dec
ja
lods
push
mov
push
mov
imul
pop
push
movs
jno
mov
mov
add
(bad)
loope
jmp
fsub
dec
das
js
jne
ds
and
jge
and
lods
shr
(bad)
cmps
pop
mov
mov
mov
(bad)
popf
cmps
sbb
xor
sar
jle
stos
enter
mov
sbb
xor
es
xor
idiv
fwait
call
sbb
jmp
aam
push
and
jmp
or
repz
(bad)
sub
inc
mov
jmp
movs
push
jmp
addr16
or
stos
sub
inc
repnz
ss
outs
test
jg
fild
call
fdiv
fbld
nop
cmp
and
xor
mov
and
test
rep
cwde
jmp
outs
ret
or
mov
outs
inc
mov
mov
cmp
mov
sub
jns
nop
stos
aam
iret
mov
jnp
popa
pop
mov
jo
push
fcmovb
retf
ret
sub
and
shl
push
sub
sbb
test
bound
pop
xor
dec
xor
cwde
nop
pusha
dec
or
imul
lds
jns
pop
shr
xchg
inc
cmc
xor
in
add
mov
pop
xlat
das
ins
lahf
and
jns
xchg
pop
dec
ins
in
movs
scas
call
jge
popf
sahf
push
data16
movs
xchg
pop
jb
int
pushf
cld
shr
xor
out
aad
clc
ins
sbb
pop
cwde
hlt
leave
mov
sbb
mov
xor
add
fs
or
push
jbe
ror
push
les
scas
xor
mov
xor
xlat
and
xchg
movs
mov
dec
dec
lods
and
inc
pop
fnstsw
and
and
add
dec
dec
cmp
gs
adc
push
pop
mov
cs
adc
cmps
sbb
mov
iret
int3
outs
and
xor
dec
lahf
xchg
xor
mov
rol
popa
adc
mov
in
(bad)
scas
pushf
sbb
movs
fild
hlt
test
inc
cli
in
pop
push
pushf
mov
unpckhps
or
mov
pushf
mov
xchg
jb
imul
hlt
stc
fldcw
mov
repnz
stc
xor
mov
test
xchg
jnp
inc
int
push
mov
sahf
sub
lds
or
pop
jbe
jb
jle
pop
pushf
loopne
sub
(bad)
xor
dec
aas
aam
out
or
shl
stc
dec
jg
xor
jle
mov
add
pop
pop
in
nop
push
leave
mov
int3
in
mov
jmp
fwait
push
mov
cs
add
push
lfs
push
fimul
(bad)
outs
ins
push
fmul
loopne
and
(bad)
das
lahf
or
add
jo
inc
jae
fcom
pop
inc
sbb
mov
push
imul
xor
mov
cmps
call
test
mov
push
add
lea
popf
mov
dec
push
mov
and
cmc
or
xor
xchg
hlt
mov
test
pusha
xor
fdiv
xchg
loope
sbb
icebp
lds
sbb
push
jmp
addr16
ja
dec
jmp
bound
das
mov
gs
jnp
sahf
xor
es
pop
icebp
sub
jl
cli
mov
add
mov
ret
mov
nop
data16
mov
jle
and
je
mov
movs
fcos
nop
pop
shr
jns
xlat
addr16
aam
mov
mov
add
xor
cli
add
push
jns
mov
aas
add
lock
dec
imul
movs
adc
imul
cmps
sub
aam
imul
xchg
cli
lea
sbb
xchg
jge
ds
adc
mov
mov
inc
push
mov
xchg
stos
mov
xor
gs
fs
or
sub
mov
mov
push
inc
das
std
sbb
imul
mov
push
or
add
mov
cli
sbb
jae
sub
mov
sbb
jmp
jmp
das
(bad)
js
ins
dec
sub
test
cmps
adc
lds
sbb
cld
and
cli
push
jbe
jmp
mov
jge
push
jmp
pop
out
sub
xchg
lea
cmp
shl
push
mov
cwde
hlt
or
push
fadd
mov
add
inc
mov
cli
ror
sbb
inc
sbb
sbb
(bad)
mov
push
and
ins
lock
and
cmps
sbb
sub
cmp
and
add
popa
push
sub
and
in
js
xchg
jmp
loop
add
push
int
rcl
loope
jge
sub
mov
lock
and
retf
loop
xor
xchg
xchg
push
jno
cdq
or
fdivr
sahf
push
call
pop
push
or
in
in
mov
mov
(bad)
adc
popa
not
ss
ins
xor
inc
mov
sar
and
pop
and
les
aad
fld
pop
fadd
rol
fsub
mov
push
loopne
out
xor
xchg
sbb
std
jmp
mov
push
cmps
xchg
into
inc
dec
cmp
xor
das
jo
inc
xchg
xchg
fnstsw
push
jnp
xchg
cmp
sub
cmp
sub
mov
push
bound
inc
fs
sbb
call
xlat
sbb
aas
pusha
js
ficomp
adc
pop
add
ror
stos
ins
loope
ins
aas
push
std
dec
(bad)
push
push
in
mov
push
push
add
stos
jns
inc
loope
addr16
dec
jg
xlat
push
jbe
mov
lea
scas
bound
clc
aas
mov
cmc
nop
mov
sbb
(bad)
imul
icebp
outs
mov
retf
mov
loope
ja
popa
adc
call
adc
jne
push
outs
inc
shr
inc
iret
push
pop
fisttp
(bad)
and
pop
jo
xor
sbb
jae
dec
aaa
sbb
fimul
sub
pop
adc
sbb
pop
aas
enter
mov
aam
dec
rcl
es
mov
pop
cmp
scas
clc
iret
arpl
push
pop
test
mov
sub
setg
mov
sti
jl
lods
js
push
pop
out
rcr
cmp
cld
je
pop
cld
mov
enter
xchg
je
cwde
das
dec
adc
iret
enterw
mov
xor
mov
cmps
xor
(bad)
push
ret
push
push
fwait
add
or
mov
inc
scas
mov
adc
mov
icebp
cmp
mov
ins
inc
or
movs
push
push
cli
add
or
sub
jg
stos
adc
xor
jno
adc
(bad)
daa
fcomp
hlt
pop
xlat
sbb
mov
shr
push
push
sbb
dec
mov
lods
addr16
mov
mov
hlt
imul
mov
test
lahf
sbb
js
mov
or
cmps
pop
clc
fwait
cmp
shr
inc
repz
sar
xor
mov
adc
test
lods
clc
fiadd
dec
sbb
mov
call
pop
cwde
push
pop
xor
loopne
xor
mov
dec
loope
push
cmp
arpl
mov
lock
xchg
call
retf
dec
sbb
jnp
addr16
call
sub
test
daa
or
cmp
cmps
or
dec
inc
cmp
adc
cmp
fdivr
ror
ds
mov
stos
scas
adc
neg
inc
aad
scas
test
push
xchg
cmp
jae
fild
sub
add
std
add
mov
mov
add
cli
dec
mov
and
pop
dec
pop
fild
sub
inc
cmp
leave
inc
mov
xchg
sbb
inc
retf
shl
jbe
(bad)
ja
movs
fucomip
xor
xchg
int3
movs
xor
cwde
sbb
xor
mov
push
jmp
sub
fldcw
in
push
push
pop
xchg
imul
push
fisttp
inc
mov
mov
arpl
fcomi
gs
cdq
mov
dec
popf
std
sub
daa
jmp
in
or
dec
pop
and
(bad)
je
pop
cmp
push
dec
cmp
xchg
daa
cmp
sbb
arpl
outs
mov
iret
psadbw
dec
int
dec
leave
clc
adc
add
cmp
imul
aas
and
and
shl
stos
movs
ja
test
ret
sub
add
mov
cmp
(bad)
adc
ins
cmps
out
ror
shl
xchg
inc
loopne
jge
pushf
and
ret
(bad)
in
dec
loope
ror
es
jo
push
and
xor
jbe
fist
jbe
cmp
push
addr16
xchg
push
clc
mov
sub
je
push
mov
call
hlt
aad
dec
test
out
leave
xchg
mov
ins
fcom
mov
rcl
dec
mov
dec
in
cmp
loope
daa
push
int3
xchg
int
pop
pusha
sar
and
add
jle
test
pop
jns
hlt
cs
arpl
dec
sahf
imul
lods
dec
pop
lea
or
stc
and
cwde
pop
out
rcl
imul
cdq
or
jle
cmp
arpl
mov
pop
(bad)
and
lock
rcl
pop
push
mov
iret
outs
cmp
fidiv
stos
pushf
sub
adc
into
test
jp
xor
push
in
mov
(bad)
push
lock
int3
jge
jo
shl
fstp
cwde
dec
jne
clc
aaa
fstp
xor
js
aaa
(bad)
(bad)
dec
loop
push
push
ins
xor
in
mov
(bad)
lock
mov
pushf
push
pop
sbb
inc
hlt
test
cs
nop
daa
add
inc
mov
cmp
add
cs
stc
cmp
popf
xchg
retf
mov
mov
inc
lahf
jp
mov
cmps
mov
dec
enter
test
arpl
adc
int
outs
sub
add
(bad)
(bad)
imul
bound
mov
ja
gs
add
lock
ins
xchg
push
ins
xchg
cmp
or
gs
cmp
jns
xor
mov
stos
popf
xchg
enter
les
adc
call
lea
add
xor
mov
jmp
sbb
lock
pop
mov
outs
aam
lock
pop
dec
outs
mov
scas
jl
retf
dec
fst
dec
popa
and
into
sub
xlat
inc
add
gs
push
mov
xchg
popf
xchg
paddusw
(bad)
inc
dec
(bad)
out
lods
cdq
std
int3
xchg
jmp
ret
cmp
test
sbb
call
hlt
cmp
push
xchg
adc
lds
jg
or
cli
xchg
lods
dec
mov
and
dec
movs
and
inc
int
inc
add
jbe
pop
daa
jbe
pop
int3
push
call
outs
and
stc
aaa
sbb
test
push
cld
rcr
xchg
jmp
and
xchg
dec
xchg
and
xchg
pop
xor
test
jl
dec
repz
push
out
pop
sub
add
sbb
inc
add
cli
stc
mov
inc
push
push
ret
stos
inc
and
popf
dec
mov
inc
cs
xchg
aas
adc
push
js
daa
or
mov
mov
jmp
test
outs
dec
xor
push
popf
outs
out
aas
gs
and
pop
push
call
imul
xchg
and
les
ss
fisubr
cs
mov
and
jb
jae
inc
outs
fadd
jns
xor
movs
cmps
push
adc
stos
pop
inc
sti
retf
and
cmp
cmps
rcl
sbb
cli
xchg
ins
add
(bad)
or
mov
adc
daa
and
scas
inc
lahf
repnz
pushf
outs
int3
sub
pop
inc
cmp
xor
jl
inc
xchg
lahf
(bad)
add
repz
jbe
mov
sbb
loope
imul
add
xchg
rol
movs
or
xor
push
daa
xlat
sub
dec
ret
or
and
fnstsw
sahf
pop
and
dec
cdq
or
lods
outs
mov
or
rol
cmp
dec
push
fdivr
mov
and
mov
sub
cmp
pop
stc
jo
xchg
and
ins
in
push
sub
(bad)
dec
cmp
jns
bnd
test
cs
adc
(bad)
cmp
sub
and
lds
sub
dec
fdivr
les
and
jle
xchg
xchg
sbb
hlt
adc
jnp
rcl
mov
push
(bad)
cmp
cdq
lahf
pusha
imul
sub
add
hlt
adc
cmp
stos
xor
enter
lea
pop
xchg
sbb
cs
and
(bad)
movs
sbb
cmc
cmp
scas
fld
arpl
push
std
iret
or
sub
mov
mov
add
ins
mov
icebp
sbb
in
sbb
adc
inc
add
cmp
shl
mov
cwde
in
outs
retf
jne
sub
pop
bnd
nop
cmp
jae
pop
movs
push
push
or
pop
repnz
ret
jge
fimul
out
mov
add
xchg
(bad)
std
mov
and
and
js
inc
sbb
data16
or
mov
lds
lds
aas
pop
sub
mov
add
mov
cmp
(bad)
sbb
pop
les
mov
add
jmp
sub
sbb
cmp
leave
or
fmul
cmp
sbb
inc
xchg
pop
dec
jp
int
mov
jle
sbb
lds
inc
call
xchg
adc
data16
ins
adc
int
jmp
push
movs
inc
in
xor
fs
sub
mov
pop
pop
stos
xchg
fs
and
dec
and
sbb
mov
sbb
xchg
push
out
push
call
xchg
or
arpl
loop
imul
sbb
inc
fidiv
mov
jg
xor
bound
pop
repnz
or
mov
stc
ins
sub
les
je
repz
gs
cmp
cmc
jno
fwait
icebp
loop
test
call
and
int
cmp
mov
push
call
cwde
jge
or
fistp
jge
cmc
scas
sub
sahf
inc
sbb
xchg
sub
mov
ins
rcl
scas
clc
jne
ret
mov
xor
fist
cmps
clc
shl
push
out
add
pushf
sub
test
enter
pop
mov
sbb
rol
out
int3
(bad)
jno
out
jnp
xchg
pop
mov
adc
inc
jns
and
jmp
enter
sbb
xchg
addr16
scas
sbb
fild
inc
push
inc
movs
loopne
jbe
fwait
and
xchg
push
or
or
cld
in
and
pop
cwde
xchg
icebp
je
adc
and
aaa
stos
aam
mov
mov
sub
push
cvtps2pd
xor
mov
out
movs
mov
test
(bad)
sar
dec
mov
ins
icebp
lahf
mov
add
or
out
enter
call
or
rcr
pop
inc
outs
hlt
inc
adc
mov
inc
aad
fs
daa
ret
or
shl
repnz
sti
pop
pop
mov
adc
jno
pop
mov
push
jns
cmps
fs
mov
aas
mov
stos
lahf
sub
call
dec
mov
test
jb
fimul
test
sub
adc
imul
dec
sbb
out
data16
stc
popa
or
lock
loopne
pop
mov
repnz
jg
dec
xchg
shl
(bad)
mov
lahf
xor
(bad)
xchg
(bad)
idiv
inc
test
dec
div
mov
dec
xchg
xchg
lock
(bad)
jnp
out
out
into
sbb
imul
fist
mov
sbb
neg
clc
(bad)
or
ficomp
bound
mov
test
addr16
addr16
retf
jo
mov
mov
add
cli
rol
icebp
dec
mov
sbb
lock
movs
dec
adc
xor
push
xchg
add
xor
mov
xor
add
scas
nop
inc
outs
rcr
lods
pop
lea
jae
push
xor
cmp
mov
leave
je
mov
aas
fnsave
add
repz
aas
js
adc
xchg
mov
arpl
dec
or
cmp
mov
adc
cmp
jnp
repnz
outs
pop
test
inc
retf
ret
loop
neg
push
(bad)
add
ret
lds
adc
sbb
mov
add
xor
jp
retf
pop
adc
sbb
(bad)
fild
mov
test
shl
leave
idiv
pop
bound
sbb
mov
mov
fild
aad
sbb
scas
cmp
jl
inc
(bad)
mov
pop
push
cmp
xchg
xchg
add
mov
inc
vmwrite
mov
xchg
and
lahf
lods
scas
cli
ret
or
int3
lock
xor
push
fdiv
int
xchg
cld
push
mov
outs
aam
cmc
ret
js
ss
loop
cwde
mov
or
xchg
mov
mov
xchg
mov
xchg
call
mov
sbb
mov
ins
pop
cmp
jmp
fist
pop
cmp
mul
lahf
mov
cmp
cli
rol
in
shl
add
add
lock
push
mov
adc
xor
movs
push
mov
cmps
movs
cmps
xor
fdivr
pop
dec
adc
push
jmp
fist
std
(bad)
ss
mov
sbb
jno
cmps
and
outs
inc
imul
(bad)
jl
lods
fdivr
and
nop
retf
clc
test
fimul
sar
xlat
retf
outs
fild
xor
xchg
xchg
int3
jb
retf
ror
push
hlt
stc
jp
push
pop
jg
mov
gs
popa
jecxz
sub
mov
in
sbb
aas
(bad)
jns
imul
ins
stos
enter
pop
mov
sub
out
jne
push
hlt
call
mov
jmp
and
cmp
mov
out
pop
inc
dec
pusha
(bad)
cmp
lea
mov
aad
jne
or
cs
push
mov
enter
mov
sti
cmp
rcl
adc
imul
dec
or
addr16
mov
inc
test
sti
iret
cmc
lods
mov
push
fiadd
in
test
retf
popf
xchg
sub
mov
scas
out
mov
adc
stos
jb
xor
pop
mov
pop
mov
add
stos
dec
loopne
fcom
cmp
into
arpl
pop
pop
add
inc
fdiv
call
cmps
xchg
jb
or
(bad)
std
pop
fwait
sub
ret
test
xchg
call
jmp
loope
test
xor
pop
jns
sbb
and
int3
popf
jo
inc
jae
loopne
mov
jno
jg
pop
ror
mov
push
fadd
out
lods
cwde
and
test
mov
mov
push
enter
ss
in
fcmovnbe
lods
loopne
imul
vminss
clc
fiadd
pop
jge
and
add
cmp
push
inc
lahf
or
dec
mov
dec
add
xchg
or
add
stos
ss
ja
pop
cdq
out
sub
out
push
inc
add
jnp
ds
pop
push
mov
cmp
pop
jle
fisub
sahf
loope
dec
add
cli
ror
push
(bad)
mov
fst
adc
dec
addr16
pop
xchg
fbstp
vpsignd
cmps
iret
sub
mov
repz
mov
js
adc
mov
(bad)
mov
movs
jecxz
jl
lods
imul
movs
cmp
je
adc
jle
inc
mov
hlt
popf
and
stos
aaa
icebp
dec
pop
in
mov
(bad)
test
or
cmp
mov
loopne
(bad)
lahf
xchg
pop
ret
(bad)
push
jg
mov
lea
mov
aas
fsubr
stos
sahf
sahf
shl
fbld
popf
pop
push
push
inc
rcl
rcl
hlt
push
test
mov
cmp
lds
arpl
mov
test
adc
sbb
shl
mov
fbld
jbe
mov
sub
cmp
mov
inc
jnp
xor
pop
cmp
out
dec
pop
fisubr
clc
mov
(bad)
and
push
mov
cmp
dec
pop
cmp
fwait
loop
popaw
and
xchg
cld
push
jne
inc
cwde
stos
jbe
mov
jne
scas
cmp
cs
pop
pop
and
inc
stos
gs
mov
ficomp
mov
(bad)
mov
mov
hlt
add
shr
dec
loope
jno
int
pop
in
in
xchg
int3
fsubr
popf
cmp
mov
ins
and
jg
pop
mov
push
sbb
pop
xchg
sbb
fwait
and
add
pusha
aaa
(bad)
fisub
fdivr
xchg
cli
mov
fild
sub
imul
adc
push
sub
aam
or
pushf
mov
pop
xchg
mov
lea
pusha
xor
xchg
int
and
lods
out
jp
adc
push
sahf
into
mov
int3
fucom
aam
sbb
jp
and
hlt
fcos
out
addr16
or
outs
pop
les
repz
outs
sub
int3
scas
ss
dec
dec
sub
mov
cdq
ficomp
dec
out
or
cmp
je
cmp
jb
leave
cmp
inc
rcl
pushw
cmp
dec
rcr
and
test
gs
cli
add
popa
call
int3
xchg
scas
xchg
inc
cmp
retf
adc
(bad)
ss
je
or
(bad)
shl
push
aaa
imul
xchg
cs
(bad)
fs
xor
pop
daa
sub
and
xchg
shl
retf
int
xchg
push
xchg
fidivr
mov
push
fdivr
fstp
dec
pop
push
stos
sub
imul
out
jnp
out
xor
sub
jmp
aas
or
lea
or
cli
jp
dec
fnstsw
into
fistp
add
rcl
add
mov
or
jbe
jp
inc
movs
dec
and
cmp
call
mov
clc
test
xchg
movs
cmps
jbe
in
call
in
je
in
pop
(bad)
mov
sbb
pop
mov
xchg
dec
pop
mov
imul
cmp
ins
ficomp
mov
rol
xor
(bad)
mov
or
ja
push
mov
imul
nop
push
mov
pushf
(bad)
xor
popa
cmps
pop
jbe
pop
xor
mov
rcr
jnp
arpl
pop
pushf
inc
lods
cmp
leave
mov
inc
frstor
adc
sub
shl
(bad)
icebp
cmps
push
xor
fiadd
mov
or
dec
add
scas
sbb
repnz
inc
jecxz
sbb
sbb
fbld
mov
(bad)
pusha
and
cmp
push
dec
adc
div
mov
xchg
popa
popa
xchg
test
int
sub
gs
(bad)
and
loop
mov
in
dec
imul
daa
shl
outs
aam
adc
lahf
jmp
sti
test
xchg
mov
ret
dec
out
xor
mov
push
xchg
mov
scas
mov
cmp
les
int
dec
push
or
cmp
xchg
mov
shl
inc
test
mov
inc
dec
mul
jp
mov
outs
rcl
retf
cli
adc
mov
ret
xchg
sbb
inc
cwde
out
pop
(bad)
(bad)
cli
pop
adc
std
repz
shl
or
add
int3
ret
mov
push
mov
sub
and
sbb
imul
out
loop
repnz
in
jecxz
pop
gs
sub
not
sbb
dec
pop
movs
outs
int3
ja
popa
adc
dec
mov
pop
test
xor
dec
out
mov
test
sbb
adc
jno
and
adc
adc
or
pop
mov
aaa
push
call
(bad)
fmul
mov
movs
div
js
push
jae
popf
(bad)
lods
sti
addr16
xchg
(bad)
or
test
jns
shr
leave
gs
fwait
fs
int
or
add
adc
pusha
fsubr
mov
cmp
adc
cmp
int
cmps
imul
imul
test
push
dec
fstp
mov
clc
jno
xor
call
js
test
test
stos
cmp
xor
mov
(bad)
add
int
dec
inc
dec
fiadd
retf
out
cmp
movs
add
fnstenv
out
rcl
es
pop
dec
arpl
add
sub
leave
mov
push
mov
push
or
cdq
cmp
xlat
fnsave
mov
out
mov
sub
loop
xchg
sub
jmp
xchg
dec
or
cs
mov
movups
pushf
ins
inc
popa
push
sahf
mov
test
xchg
xchg
sbb
call
adc
and
xchg
cmp
mov
rcr
push
nop
(bad)
outs
push
jb
(bad)
enter
ret
into
das
jp
test
cmp
mov
and
mov
inc
mov
lods
xor
mov
and
call
inc
movs
aam
lock
adc
sbb
sahf
push
mov
pop
xor
or
into
rcr
adc
xor
jl
mov
pop
pop
add
shl
fdiv
test
js
push
add
and
mov
imul
and
retf
push
ss
fisttp
outs
fcomp
inc
mov
loopne
xor
cwde
out
xor
jl
pop
lods
xchg
adc
movs
fwait
sbb
out
pop
pushf
dec
mov
ins
mov
fsubrp
push
(bad)
lahf
rcl
inc
stos
jp
cdq
nop
test
das
inc
(bad)
adc
mov
nop
pop
xor
xor
movs
ins
icebp
xchg
mov
cmc
(bad)
xor
sub
mov
out
pop
loop
push
sti
arpl
mov
dec
stos
jbe
int3
ins
bound
rol
out
data16
icebp
mov
dec
cld
dec
outs
in
jne
mov
stos
lds
enter
cmps
js
push
bound
scas
pop
scas
out
pusha
jb
dec
jnp
leave
xchg
sub
or
adc
fwait
call
dec
ins
mov
fidivr
(bad)
stos
(bad)
push
aad
jae
pop
pop
ror
xchg
and
adc
repz
or
fcomip
int
in
adc
and
(bad)
xlat
and
push
pop
push
shl
cmps
push
mov
adc
test
xchg
jnp
stc
outs
bound
pop
fs
xchg
push
(bad)
jnp
pop
mov
cli
adc
rcr
cdq
ret
or
fwait
out
into
mov
adc
mov
fwait
daa
das
push
mov
push
add
sahf
mov
and
fs
mov
push
into
xlat
rcl
ds
in
pop
int3
retf
test
pop
xor
call
jecxz
ret
cld
pusha
popf
stc
sub
or
rcl
stos
mul
retf
lock
push
fcom
sbb
adc
add
mov
fidivr
pop
jge
jle
adc
dec
fisubr
movs
dec
scas
and
adc
fist
sti
pop
sub
das
push
mov
or
adc
inc
mov
das
fwait
idiv
les
gs
shr
imul
pop
ja
add
out
mov
outs
int3
ins
(bad)
stos
adc
jmp
cmps
xchg
jge
inc
sar
leave
je
mov
popa
push
mov
inc
dec
loop
and
ret
gs
jle
push
cmp
loopne
mov
cdq
(bad)
fcomp
enter
xchg
jmp
loopne
and
mov
bound
in
gs
xchg
out
jns
push
sbb
mov
imul
fldcw
jne
sbb
xchg
pop
sub
or
jo
js
rol
xlat
jb
aam
ss
mov
enter
push
push
mov
add
sub
cmp
jmp
xchg
lods
pop
out
mov
jecxz
sbb
scas
push
js
cmp
mov
cmps
jmp
inc
std
push
in
fimul
in
jp
aad
fstp
ficomp
pop
mov
pop
sbb
mov
ret
cmp
ins
add
outs
adc
mov
or
sub
add
add
mov
fnsave
cmp
sbb
adc
(bad)
or
imul
sahf
xchg
loopne
inc
hlt
(bad)
cld
xor
mov
and
xor
jnp
into
je
and
pop
or
dec
pop
lods
mov
pushf
mov
mov
sbb
pop
mov
xlat
addr16
rcr
push
fs
inc
imul
mov
js
test
cmp
adc
hlt
jmp
out
dec
ret
ret
mov
mov
mov
xchg
es
lods
enter
fwait
sbb
in
(bad)
aam
ja
aam
repz
push
cmc
mov
cs
add
loopne
pusha
aad
lds
or
or
and
add
in
xor
js
jns
xor
jne
dec
(bad)
call
cmp
mov
pop
mov
cmps
bound
leave
(bad)
fcomip
hlt
sbb
pop
inc
sahf
(bad)
pop
repz
jmp
dec
icebp
sti
push
pop
(bad)
fnstcw
and
pop
cmp
cli
or
pushf
movs
fistp
pop
and
shl
cpuid
or
cld
inc
sbb
fs
xchg
inc
cmp
inc
jmp
cli
pop
mov
mov
imul
dec
dec
in
retf
cmps
inc
je
std
or
cwde
adc
inc
cld
cdq
push
sub
and
icebp
(bad)
pop
hlt
stc
neg
xor
std
pop
push
pop
and
into
adc
add
(bad)
fild
sub
dec
adc
dec
inc
sbb
lahf
dec
cmp
repz
inc
scas
fcmovbe
cmps
jns
or
mov
pop
stc
xchg
mov
jecxz
adc
add
cmp
mov
mov
mov
rcl
mov
pop
stc
mov
das
fld
mov
fnsave
stos
push
xor
dec
ds
std
sub
sar
int3
xor
int3
add
cmp
add
xor
dec
mov
jne
xchg
dec
mov
in
loop
jno
ds
add
leave
sub
sub
sub
add
not
(bad)
stc
sbb
mov
shr
adc
stc
lds
cli
inc
pop
out
xchg
cmp
sbb
cmps
daa
loope
in
push
aaa
mov
cwde
push
xlat
arpl
or
aad
xchg
push
mov
in
ds
fcom
dec
jecxz
mov
addr16
xchg
mov
dec
std
mov
jg
adc
icebp
or
iret
and
cmp
dec
les
lahf
in
(bad)
adc
mov
ficomp
dec
test
outs
sbb
adc
jmp
cmps
xchg
xchg
or
aam
pop
loop
ins
in
aad
pop
mov
fdivr
mov
out
pop
sbb
out
bound
lods
fmul
into
jge
ins
rcl
xor
dec
pop
imul
rcr
push
ja
pusha
aam
in
in
xor
or
in
movs
sbb
mov
shl
jo
out
je
lds
mov
mov
pop
dec
ins
push
cld
daa
aam
enter
out
fwait
sbb
and
add
push
sbb
mov
leave
mov
xor
add
mov
sub
pop
fiadd
push
in
add
jnp
lds
xor
add
lock
pop
les
or
ins
inc
cmps
or
dec
out
scas
out
loop
mov
mov
jne
and
add
cdq
jb
push
outs
xchg
nop
and
xchg
and
mov
mov
je
cmp
push
popa
(bad)
cmps
pushf
mov
enter
push
les
sbb
scas
js
mov
aam
adc
mov
mov
leave
jno
add
ja
or
xor
aad
lahf
in
push
jns
jbe
int3
arpl
inc
push
popa
(bad)
fild
rol
mov
or
scas
xor
hlt
push
fwait
test
xlat
xor
loopne
cld
jo
adc
ror
adc
mov
fiadd
pusha
pop
jo
xor
jl
sub
dec
mov
or
call
push
jb
ja
test
or
push
mov
jp
xchg
nop
or
fisttp
xchg
stos
or
stos
(bad)
rcr
or
(bad)
in
ja
lods
movs
loopne
xlat
in
push
test
(bad)
in
pop
pop
sbb
dec
push
int3
call
in
and
outs
mov
(bad)
sbb
ins
or
pusha
iret
and
push
cmps
nop
cli
inc
lock
sbb
out
scas
or
push
xor
mov
std
jns
mov
mov
movs
out
dec
gs
out
xor
or
outs
aaa
jbe
test
int3
repz
in
sbb
hlt
into
mov
scas
sub
mul
and
or
sub
call
and
fisub
sub
and
xchg
cld
iret
pop
daa
pop
jns
add
out
push
aam
sbb
and
jle
pushf
ror
inc
cmp
loop
inc
into
outs
mov
lods
addr16
scas
xlat
xchg
sbb
imul
imul
or
or
inc
jl
cmp
(bad)
sbb
add
retf
xor
not
dec
adc
addr16
int3
mov
cmc
enter
mov
xchg
xchg
xchg
sub
sub
push
push
test
or
fst
push
in
shl
pop
ins
das
daa
fimul
iret
mov
xchg
mov
loope
xchg
fsubr
inc
icebp
repnz
push
in
adc
cmp
imul
pusha
clc
inc
push
xchg
add
lds
mov
cmp
fcmovne
inc
call
jne
rcl
inc
sub
movs
dec
stc
sbb
dec
push
(bad)
nop
mov
inc
sub
mov
(bad)
xlat
xchg
sbb
jnp
(bad)
push
cmps
sbb
cmp
or
cmp
mov
aam
mov
mov
fild
loop
retf
ins
sbb
and
shl
xor
jmp
and
pop
rcl
pop
fsubr
sub
jbe
push
or
test
ror
adc
adc
das
dec
xor
imul
pop
imul
mov
cmp
and
test
push
mov
pop
xchg
mov
xchg
xor
mov
mov
aaa
(bad)
movs
mov
mov
sar
sub
sar
es
mov
cdq
sub
cmps
pop
sar
sar
loopne
inc
outs
or
pop
xor
add
clc
imul
lea
mov
inc
shr
outs
xchg
in
aas
test
lock
cmc
lock
dec
jmp
inc
hlt
lahf
aam
mov
sti
dec
pop
mov
cmp
outs
rcr
add
push
int
leave
ds
enter
add
add
adc
or
retf
popf
and
ja
sahf
jns
je
loope
mov
bnd
xor
int3
test
mov
inc
push
mov
and
push
cmp
xor
mov
rcr
dec
in
mov
adc
imul
in
pop
shl
pop
sbb
(bad)
cld
movs
cmp
xor
push
adc
adc
icebp
scas
mov
push
xchg
push
jecxz
push
jl
mov
dec
dec
fwait
jmp
and
(bad)
fdivr
push
push
inc
scas
fs
aam
sub
mov
push
lds
adc
das
sahf
mov
cmp
and
(bad)
xor
stc
movs
push
movd
jp
rcl
xchg
mov
jno
mov
bound
cmps
rol
aaa
ret
shr
mov
xor
or
mov
inc
cmp
xchg
icebp
and
jecxz
push
rcl
dec
adc
sub
int3
inc
mov
cmp
pushf
mov
or
lods
mov
fdecstp
ret
dec
lods
pop
add
push
cmp
push
mov
mov
arpl
popa
fsub
shl
mov
xor
call
mov
adc
div
cmp
sbb
xchg
loope
sub
int
push
in
jecxz
repz
push
cli
push
pop
repnz
in
mov
das
mov
cmp
mov
push
push
loop
push
cmp
popf
or
push
imul
push
mov
cmp
mov
jo
ss
sbb
sub
cdq
push
cli
sbb
mov
pushf
mov
or
add
adc
not
rcl
mov
lods
ds
out
cdq
and
pop
dec
xor
adc
or
and
in
xchg
aam
mov
mov
inc
sub
mov
jl
cmp
xor
mov
mov
push
cmp
ror
xchg
iret
mov
adc
pop
cmc
jno
and
xchg
cmp
test
cmp
adc
add
mov
jo
cwde
xlat
pop
jbe
cmp
je
movzx
mov
add
add
aaa
xchg
outs
(bad)
movs
test
inc
std
xchg
xlat
daa
ret
add
xlat
repnz
pop
sub
jne
or
xor
sbb
adc
lods
inc
or
add
loope
hlt
adc
stc
and
add
mov
xor
mov
xor
ins
xchg
dec
outs
rcr
adc
sar
fisttp
pusha
inc
fs
mov
rol
push
lods
rcl
cmp
or
sbb
xor
sti
repz
cmc
fs
les
add
(bad)
stc
out
adc
mov
dec
xchg
sub
popf
push
jmp
mov
add
pusha
sbb
stc
addr16
call
sub
add
shr
ss
push
xchg
inc
ret
repnz
lock
xchg
inc
sbb
mov
dec
adc
adc
xchg
dec
and
pushf
sub
fwait
out
xor
dec
outs
adc
xchg
dec
test
cli
mov
mov
and
xor
cmp
(bad)
pop
and
fsub
gs
xchg
fbld
jnp
xlat
push
sub
std
ja
lahf
jle
imul
scas
enter
arpl
mov
sub
sbb
je
or
loope
shl
adc
sahf
cld
mov
(bad)
jecxz
jb
pop
inc
pop
adc
dec
call
ficomp
ss
repz
sbb
mov
addr16
mov
rcl
pop
jbe
in
jnp
dec
xchg
repnz
call
lahf
cmp
in
xor
imul
cwde
aad
jno
jae
jge
cmc
lds
cmp
fs
pop
sbb
popa
(bad)
in
(bad)
or
arpl
aad
lock
dec
mov
or
stc
mov
dec
xor
or
mov
mov
cs
pop
mov
xchg
sub
and
cwde
js
xchg
je
daa
fs
pop
jg
and
jmp
xlat
in
call
push
fnstcw
inc
fidiv
cmp
popf
fld
outs
mov
inc
add
adc
add
pop
or
mov
cdq
dec
scas
shl
and
dec
mov
jmp
ret
lahf
xor
(bad)
mov
cmp
sbb
and
inc
add
push
imul
pushw
mov
jge
or
inc
test
(bad)
dec
adc
popf
std
mov
mov
cmp
aaa
ret
icebp
loop
pop
mov
adc
push
push
out
sub
mov
pop
sub
test
setg
inc
das
ja
scas
jmp
jbe
xchg
ja
dec
mov
inc
sub
pop
(bad)
pop
dec
call
adc
dec
add
loope
sahf
sub
inc
inc
shl
cmps
add
arpl
adc
push
loopne
push
cwde
jmp
cld
out
cdq
mov
fild
clc
push
xor
shr
(bad)
cmc
bound
lock
sbb
ds
scas
cmps
lea
popf
xchg
push
sub
sub
inc
rol
call
jb
cmp
addr16
cmps
xor
addr16
into
ins
xor
out
fimul
stos
fwait
ret
pop
call
loope
retf
hlt
sub
outs
sbb
movs
mov
add
(bad)
mov
push
push
mov
sub
js
popa
pushw
xchg
out
adc
xchg
sbb
in
(bad)
mov
adc
aas
mov
inc
mov
ins
push
xor
scas
mov
fcmovu
mov
add
test
sbb
stc
and
ret
les
add
icebp
rol
les
jnp
sti
addr16
mov
sub
aam
fsub
xor
dec
js
jge
jae
fucomp
jp
in
dec
push
cmps
cmc
ficomp
pop
gs
push
sbb
js
lea
fcom
cmc
mov
xchg
mov
jecxz
out
cmp
push
in
test
inc
(bad)
and
jmp
out
jp
es
adc
repz
xchg
leave
test
leave
stc
jae
aam
(bad)
pop
add
jo
add
stc
repnz
clc
arpl
add
sub
lods
(bad)
fwait
dec
scas
leave
dec
in
stos
push
xor
sub
test
xor
outs
and
and
fild
int
loop
mov
lods
or
fld
or
shl
int
ror
push
scas
xchg
arpl
pop
cwde
xor
nop
xchg
adc
test
call
(bad)
clc
int
pop
stc
arpl
pop
cdq
xor
push
add
enter
out
mov
sbb
or
arpl
pop
shr
mov
stos
cli
cmp
cmp
xor
sub
push
loop
push
adc
add
dec
pop
dec
jbe
cdq
or
das
sbb
or
ret
aaa
cdq
arpl
int3
adc
adc
jns
fwait
dec
or
sub
sbb
inc
xchg
adc
ret
int3
outs
enter
arpl
sub
xchg
jns
std
and
daa
sbb
popa
and
test
out
test
mov
(bad)
(bad)
enter
dec
or
fimul
das
inc
mov
cmps
dec
dec
jne
inc
push
mov
jno
and
inc
push
and
sub
pop
fldcw
or
lea
xor
(bad)
push
adc
loop
mov
sub
cli
div
inc
in
adc
inc
out
jle
xlat
xor
stos
mov
sub
pop
adc
in
mov
xchg
lock
ja
std
or
fld
push
cmp
dec
repz
xor
out
add
or
mov
jmp
xchg
sbb
dec
adc
push
push
sub
xor
shl
movs
xchg
jae
push
arpl
inc
dec
outs
mov
jbe
cmp
ja
bound
jle
sub
fldcw
mov
sub
ds
cmc
in
lock
inc
loopne
push
imul
jmp
xor
(bad)
sbb
xor
jg
sbb
dec
repz
push
mov
mov
sub
push
or
(bad)
sub
into
mov
stos
sti
add
popf
dec
xchg
jl
popa
push
inc
sbb
je
ins
(bad)
out
inc
sbb
lods
js
cwde
push
test
hlt
dec
stos
scas
sti
pushf
movs
movs
inc
pop
outs
inc
loopne
pop
leave
sub
push
xchg
adc
dec
imul
push
dec
mov
in
mov
imul
movs
dec
pop
lahf
pop
scas
rol
mov
(bad)
int3
inc
mov
sub
push
addr16
sub
cmp
cmps
imul
fisub
loope
mov
fmul
xchg
int3
bound
pop
mov
push
loopne
inc
fidivr
jmp
je
sar
lods
into
or
cdq
push
xchg
je
push
mov
sbb
in
mov
pop
xor
icebp
leave
jae
aaa
out
movs
dec
gs
xor
idiv
jne
inc
jmp
add
lds
sub
inc
sar
cmp
cli
aad
push
test
fisttp
mov
sbb
outs
add
xchg
dec
mul
movs
(bad)
jns
(bad)
jmp
adc
pop
out
in
icebp
(bad)
inc
xor
shr
mov
adc
aaa
mov
fisttp
xchg
dec
dec
aaa
cmp
and
cmp
stc
loopne
inc
and
jl
pop
mov
into
cwde
mov
(bad)
mov
pop
mov
hlt
ret
ss
mov
leave
sbb
cdq
push
push
shr
loope
jne
adc
scas
rcr
dec
arpl
es
and
sub
dec
lods
(bad)
lea
nop
ret
adc
arpl
xor
jae
and
xor
mov
xchg
lds
pop
pop
cli
cmc
push
xchg
jmp
jbe
pushf
mov
fld
call
aas
mul
aad
sbb
out
es
sub
and
rol
shr
stos
cli
add
sub
inc
adc
jo
cmp
push
call
sahf
movs
and
stos
or
sub
out
imul
jns
mov
fldcw
popa
push
mov
cli
adc
(bad)
xor
sahf
retf
mov
(bad)
fcmovu
push
aaa
jbe
into
mov
mov
jmp
inc
push
iret
addr16
dec
(bad)
mov
pop
pop
pop
cmp
jle
cmp
jns
fcmovnb
lods
imul
stc
or
adc
jns
or
(bad)
mov
leave
cmps
mov
mov
sbb
scas
icebp
sbb
pop
or
test
scas
mov
bound
repnz
lods
mov
xor
int
jle
pusha
mov
hlt
sub
sub
cmp
clc
push
fild
bnd
ins
mov
lds
scas
and
in
bnd
mov
mov
push
ds
xorps
pushf
mov
sar
ins
mov
add
stos
sahf
cmp
mov
fisub
sar
call
ja
mov
inc
jo
add
inc
fdivr
jge
shr
sub
pop
sbb
stos
repz
adc
ins
rol
and
lock
jmp
shr
loope
repz
leave
or
mov
xchg
rcl
add
lods
xor
mov
push
or
mov
add
dec
cmp
sbb
fisttp
mov
and
lods
mov
sub
jbe
push
mov
xlat
add
jge
jae
sahf
push
jecxz
pusha
push
ret
inc
xor
push
in
sbb
ins
test
in
iret
leave
test
bswap
dec
xchg
cmp
or
cmps
jbe
jmp
push
push
push
cmp
sbb
xor
jmp
aas
inc
cmps
inc
mov
mov
pop
jbe
xor
(bad)
fldenv
out
mov
dec
jno
xor
dec
(bad)
pop
adc
jno
repnz
xor
fidivr
pop
pushf
pop
scas
sub
inc
mov
outs
xchg
in
aas
pop
sbb
(bad)
pop
dec
cmp
test
push
pop
scas
sti
test
jae
or
ss
inc
sbb
repnz
nop
bound
adc
nop
mov
adc
sbb
loope
pop
out
(bad)
scas
fsub
pushf
push
ja
adc
mov
cmp
sub
mov
xchg
call
add
mov
out
xor
sub
test
pop
jmp
out
fisub
push
cmp
mov
cmp
aam
fdivr
test
xchg
mov
adc
push
adc
nop
sti
or
xchg
fstp
scas
push
aad
inc
ss
(bad)
adc
inc
xchg
ins
pushf
cmp
test
js
adc
shl
lea
aaa
aam
out
iret
fisub
je
popf
movs
retf
sbb
mov
addr16
std
js
jnp
xchg
add
(bad)
sub
es
(bad)
outs
mov
xchg
or
fild
or
and
fwait
jg
mov
popa
lock
or
sub
mov
mov
xchg
pop
rcr
sti
(bad)
in
and
sub
in
xor
hlt
mov
dec
sub
xor
test
dec
add
mov
ja
pop
lock
ret
mov
jp
pop
sahf
dec
jp
mov
xchg
out
repz
sar
or
test
cmp
dec
or
call
fstp
arpl
mov
sbb
push
push
pushf
pop
xchg
(bad)
shl
mov
outs
mov
push
dec
fstp
aaa
add
cli
pop
ja
out
scas
int3
cmp
retf
inc
pop
fsubrp
cmp
arpl
and
mov
sbb
mov
adc
push
pop
push
jae
jo
xor
shl
es
jge
cmp
sub
loopne
xlat
neg
stos
fwait
sti
xor
cmp
mov
push
push
jns
xchg
int3
shl
retf
in
cs
xchg
adc
sbb
mov
and
test
sbb
push
aad
push
loop
mov
loop
jl
jo
pop
out
jnp
sbb
jnp
outs
sbb
mov
and
mov
std
sar
xchg
test
rcr
scas
not
xlat
into
mov
lods
(bad)
and
jns
mov
test
cld
xchg
cld
les
lds
jmp
popa
mov
or
cli
jge
cmp
mov
xchg
and
add
rcl
test
vmread
push
sbb
push
push
dec
or
lea
push
mov
aam
or
ret
daa
cdq
mov
mov
pop
pop
mov
lds
push
cmc
mov
push
or
fisttp
mov
mov
xor
cmp
sbb
pop
push
cmp
jb
int3
pop
mov
in
pop
mov
sub
push
jecxz
xchg
ja
fs
out
sbb
ds
push
loop
add
mov
xlat
pop
cmps
fwait
into
jne
fld
shl
dec
and
sub
cmps
or
and
jge
mov
imul
inc
push
fadd
je
push
jecxz
clc
movs
fcomp
add
sub
xchg
imul
xchg
ss
xchg
cmp
mov
icebp
push
lea
std
jns
out
retf
inc
int3
(bad)
repnz
arpl
pushf
sahf
cld
nop
pop
sub
ins
lods
push
or
cmp
mov
sbb
fadd
adc
jecxz
sbb
mov
adc
in
call
mov
leave
imul
push
xor
adc
push
stc
fisubr
mov
or
ins
outs
arpl
push
add
mov
cmp
jbe
dec
xchg
cmp
mov
fisttp
into
xchg
sub
xchg
lds
clc
int
mov
call
add
stos
loopne
pop
mov
fs
xchg
xchg
shr
dec
push
mov
ficom
xor
fstp
js
mov
jnp
mov
jno
inc
and
in
push
sub
add
mov
fmul
xor
push
adc
sbb
sbb
sar
mov
arpl
lahf
das
pusha
xchg
das
mov
inc
cs
pop
stos
lahf
ds
(bad)
sbb
cmc
sub
clc
mov
add
inc
fidiv
inc
jbe
mov
xor
push
xchg
mov
push
(bad)
push
loopne
jnp
test
shl
adc
xor
fist
push
out
fisubr
mov
push
frstpm(287
loope
ins
pop
cwde
sbb
mov
cmp
mov
cmp
push
and
pop
(bad)
mul
pop
mov
and
je
mov
adc
xchg
push
(bad)
mov
or
ds
das
popa
das
and
in
jecxz
jns
ret
and
icebp
adc
ss
cmp
pop
cli
(bad)
pop
call
sar
sti
jbe
scas
popa
ins
jae
into
shl
adc
mov
mov
fwait
das
mov
or
sar
pushf
push
sahf
in
jae
push
iret
push
xchg
lock
sti
pop
in
movs
bound
ret
leave
lds
clc
out
dec
lahf
push
mov
cmp
push
lock
push
add
clc
xadd
push
(bad)
int3
inc
mov
jb
stc
mov
ins
vpaddw
or
bound
cmp
js
mov
jbe
mov
clc
cld
hlt
lock
pop
movs
cmps
mov
stos
dec
repz
cmp
retf
cmps
adc
push
(bad)
mov
div
int
pop
or
imul
loope
and
push
lods
mov
xor
adc
and
adc
jge
pop
xor
push
ret
xchg
push
push
fmul
ins
add
aas
lods
mov
push
hlt
lea
js
mov
out
inc
push
jge
mov
fwait
xchg
mov
and
sbb
sbb
addr16
fsubr
out
mov
add
addr16
dec
and
in
ss
cmc
push
inc
arpl
push
mov
mov
jecxz
mov
jg
sub
stos
jp
sbb
mov
and
adc
mov
cdq
jbe
cmp
loopne
lea
push
daa
lea
jno
sub
mov
add
fwait
outs
nop
les
mov
push
pusha
int3
movs
jo
jne
mov
cmp
pusha
out
pop
jo
retf
adc
or
and
test
add
(bad)
jbe
in
setg
cmp
scas
fcmovu
les
stos
and
loopne
and
push
pop
std
mov
cmp
ins
addr16
xchg
sbb
pop
call
int
jmp
loop
imul
push
call
and
mov
sbb
adc
data16
adc
mov
cmp
fcmovnu
jl
les
xchg
or
repz
sbb
add
push
and
sub
xchg
adc
jg
push
jl
cdq
and
cmc
add
add
movs
fisub
je
inc
arpl
adc
aam
and
test
push
fnstsw
je
jge
into
ss
(bad)
das
push
ret
push
outs
rep
retf
xor
pop
or
rcl
dec
arpl
adc
gs
adc
nop
fcmovne
(bad)
sbb
ds
add
loopne
dec
pop
xor
lods
out
xchg
add
xor
pop
enter
mov
pop
mov
inc
mov
mov
mov
rcr
and
lea
(bad)
jmp
mov
mov
test
in
aam
loope
or
or
in
mov
push
out
mov
cli
push
adc
(bad)
or
inc
pop
sub
pop
or
and
int
lea
mov
repnz
and
pop
sahf
push
mov
adc
das
sbb
dec
repnz
sahf
in
sub
xchg
inc
jno
cmp
call
add
pop
cmp
jle
ds
leave
mov
pop
xor
fwait
inc
enter
cmp
and
cmc
jb
(bad)
outs
shl
xor
fadd
jae
imul
js
pop
aad
xor
cmps
aas
pop
push
inc
mov
sub
cmc
mov
pop
dec
popa
and
cmp
imul
cdq
mov
pop
inc
icebp
and
pusha
in
mov
cli
adc
icebp
mov
pop
or
ja
dec
or
lock
daa
fwait
xchg
mov
push
mov
cmps
mov
cmp
(bad)
jl
add
out
cmc
pop
iret
cs
loopne
ret
(bad)
jne
cmp
cmp
adc
sub
in
in
mov
neg
mov
data16
scas
and
jg
loopne
popf
call
sub
mov
call
movs
sbb
xchg
loopne
in
mov
fstp
pop
or
iret
add
sar
inc
ss
(bad)
cmp
test
scas
add
fadd
inc
sbb
sub
and
push
jmp
ret
ret
jne
push
test
int
sbb
xchg
nop
dec
pusha
sbb
int
inc
inc
inc
adc
sbb
aam
xor
sbb
aaa
shl
cmps
inc
mov
mov
sub
sub
xor
stos
push
outs
mov
int
gs
lea
mul
inc
jns
dec
inc
rcl
das
cmc
fsub
sbb
inc
add
mov
fnstcw
xor
push
pop
imul
fcomp
out
arpl
rcr
and
(bad)
push
jno
test
and
cmp
pop
mov
xor
loop
sub
fstp
out
fild
sahf
and
add
dec
push
mov
sti
pop
scas
je
mov
cld
popa
lds
pop
rol
aaa
mov
fidivr
loop
ret
pop
fstp
test
fwait
and
dec
out
idiv
in
jg
sbb
mov
daa
pop
js
cmp
and
cmps
lea
gs
cmp
ror
bound
ja
and
cmp
mov
adc
mov
ds
mov
ins
or
push
jmp
dec
cld
das
jmp
unpckhps
retf
push
add
out
cmp
jge
mov
adc
xor
adc
mov
daa
shr
or
clc
lea
pop
xchg
loope
outs
xchg
jno
repnz
(bad)
pop
shr
dec
(bad)
repnz
repz
add
pop
jno
loopne
mov
inc
adc
mov
int3
sbb
cmp
dec
jge
(bad)
out
jecxz
retf
(bad)
(bad)
cli
inc
push
dec
cmp
(bad)
dec
xor
xor
inc
movs
nop
jge
mov
retf
push
fbstp
shr
ja
data16
jns
(bad)
repz
mov
add
xor
push
call
pushf
fwait
dec
xchg
cli
retf
cmps
or
push
ja
mov
enter
into
mov
rcl
jmp
add
ss
mov
xlat
xor
(bad)
fdivr
pushf
repnz
mov
retf
sbb
scas
jg
ss
in
int3
fisub
cmp
fwait
xchg
cmc
cmovne
test
jb
or
das
cdq
repz
aaa
dec
inc
nop
out
sahf
mov
fcmovnbe
call
jmp
cld
stc
cwde
ja
sbb
into
enter
add
fist
jmp
add
jmp
icebp
out
adc
dec
jne
mov
sub
repnz
test
ds
jnp
mov
mov
outs
in
cs
dec
imul
sub
cli
cs
arpl
xor
loop
jl
mov
sahf
aas
cmp
xchg
out
into
jae
pop
mov
jle
push
data16
clc
dec
xlat
sub
cdq
xor
(bad)
mov
dec
mov
std
loope
popf
loopne
mov
lea
out
cli
cmp
ss
cli
scas
mov
push
dec
jnp
or
sbb
sub
call
dec
inc
inc
out
sar
aaa
jp
fwait
pop
mov
xor
push
hlt
icebp
sbb
add
cmp
sub
pop
inc
scas
xchg
loopne
cmp
fcomp
enter
test
dec
and
cmps
pop
fs
sahf
ins
ins
jae
(bad)
(bad)
inc
push
pop
scas
inc
mov
mov
sti
jle
rcl
lock
ins
rcr
ja
outs
cmp
ins
push
lahf
and
shl
push
out
int3
jno
das
daa
dec
jmp
data16
sub
fild
daa
outs
xchg
cmp
adc
retf
not
sbb
add
stc
cmp
sbb
cmp
test
pop
sub
fcom
hlt
fstp
mov
cld
ficomp
jbe
pop
push
adc
fldenv
outs
repz
pop
cmp
and
fbstp
ret
retf
les
cwde
lock
lods
int
jle
rep
in
xchg
mov
and
and
xchg
call
repz
call
xlat
sub
int
ds
push
idiv
xchg
xor
lds
xchg
imul
(bad)
xor
sub
bswap
inc
push
or
jne
sbb
sub
lods
cdq
mov
call
fld
jne
rep
or
fstp
cld
push
daa
pop
fsub
xor
iret
xor
fwait
xor
jmp
shl
loopne
(bad)
rdmsr
lods
mov
inc
lods
sbb
arpl
adc
(bad)
sar
in
nop
push
hlt
and
rol
out
fiadd
and
je
sub
dec
(bad)
mov
pop
call
test
hlt
int
cli
cmp
cmp
pop
arpl
inc
sbb
in
ror
push
(bad)
lods
jg
jmp
cmps
popa
arpl
sub
rol
mov
xchg
jno
jbe
fs
es
imul
pop
mov
mov
iret
je
test
fnstenv
and
and
pusha
or
cmps
and
bound
inc
push
adc
push
dec
icebp
jno
cmp
lods
sub
sti
movs
into
cmp
ret
adc
and
ds
ins
cmp
mov
ret
sbb
mov
mov
loope
and
sbb
clc
(bad)
cld
enter
or
imul
sbb
(bad)
jmp
out
stc
movs
add
add
cmps
(bad)
mov
and
data16
xor
stos
daa
cli
cmps
ins
test
lods
adc
sbb
rcl
jp
jns
scas
push
inc
js
jl
or
push
cld
sub
std
or
jo
sbb
test
cmp
loopne
and
movs
lahf
jmp
push
pop
xchg
int3
dec
out
push
xor
pop
inc
jl
ret
cld
les
and
and
div
int3
push
fcmovnb
nop
and
fwait
mov
adc
movs
xor
imul
aaa
or
inc
sub
(bad)
dec
xor
sub
stos
hlt
pop
and
popa
push
in
inc
mov
lahf
retf
xor
and
xor
iret
repnz
jle
cmc
je
mov
dec
adc
xor
mov
dec
fadd
mov
sub
push
leave
popa
push
js
repnz
sub
(bad)
cs
jbe
mov
adc
push
in
push
cmp
mov
and
adc
pop
aaa
mov
cmp
and
pop
pop
lds
shl
add
pop
nop
ins
inc
test
jp
push
sahf
cmps
push
and
mov
retf
(bad)
fsub
adc
xor
jl
and
js
inc
in
push
lea
out
(bad)
fidivr
jmp
sbb
jle
sub
clc
mov
xor
cwde
test
sbb
stos
icebp
xor
test
clc
inc
push
das
inc
jmp
iret
jbe
xor
lods
xor
aad
cs
push
fldenv
inc
out
cmps
xchg
push
in
(bad)
push
push
add
xchg
inc
mov
or
add
push
adc
sub
add
mov
(bad)
cmp
mov
pop
jg
sar
add
fcom
clc
mov
push
hlt
pusha
mov
jle
push
movs
dec
mov
ins
sbb
sbb
cmp
lock
dec
sbb
icebp
aam
cmps
cmp
sub
add
xchg
add
adc
cmp
xor
ja
leave
in
ins
add
mov
leave
les
arpl
pushf
jg
lods
in
in
pop
sbb
mov
push
sub
fisubr
xchg
jmp
cmps
jb
push
jge
sub
or
jno
pop
jmp
cwde
scas
test
(bad)
mov
data16
inc
daa
mov
inc
retf
adc
mov
fstp
xor
sub
hlt
shl
mov
sbb
inc
(bad)
dec
jns
fs
cld
rcr
in
adc
cmp
xchg
cmc
jmp
leave
xchg
ficom
jl
mov
sub
test
mov
or
iret
jg
jae
pop
push
sub
jmp
inc
lahf
out
fist
add
scas
in
sbb
adc
pop
mov
or
(bad)
popf
lahf
movs
cmp
not
retf
jp
sbb
push
sub
lahf
mov
sbb
dec
adc
jns
jns
icebp
sbb
adc
or
dec
or
cld
ret
pusha
outs
sbb
add
adc
(bad)
cmp
add
push
aad
repnz
adc
and
repnz
stc
stos
es
jo
xlat
pop
aaa
xchg
and
or
inc
or
lods
in
and
(bad)
js
or
cmps
in
lods
test
dec
mov
scas
pop
(bad)
xchg
jb
cmp
jne
leave
shl
aas
or
jo
and
jno
popf
pop
xchg
mov
ret
add
adc
mov
cmp
call
std
add
jne
test
fldenv
sbb
int
fdiv
mov
rcr
adc
bound
mov
cmps
and
push
loop
add
xor
pop
imul
xchg
test
dec
xchg
jg
dec
pop
jns
push
sub
push
cwde
leave
aad
and
imul
mov
fldcw
mov
orps
push
jmp
jmp
enter
lods
adc
(bad)
sbb
push
or
mov
mov
stc
push
mov
loop
add
add
dec
test
clc
stos
cmp
and
movs
or
(bad)
into
jecxz
stos
pop
ret
push
aam
imul
xor
push
cmc
mov
leave
jno
mov
std
push
sahf
inc
add
mov
push
outs
loope
adc
pop
(bad)
fisttp
sub
inc
jp
pop
cmp
mov
shl
inc
pop
je
push
repnz
dec
inc
adc
ins
mov
inc
push
aad
jae
sti
nop
das
add
jecxz
clc
xchg
sub
out
push
mov
sub
stos
lods
cmp
fist
add
mov
push
(bad)
adc
into
fisubr
cs
(bad)
and
(bad)
in
cmp
icebp
mov
sub
and
jle
xlat
ss
xchg
arpl
xchg
fsubr
sbb
pushf
ds
in
xchg
adc
loop
pop
aam
or
pop
aam
test
out
mov
fs
add
scas
inc
fsubr
pop
stos
cmc
fwait
sbb
sub
mov
sahf
inc
addr16
jle
retf
push
rol
stos
call
arpl
aam
mov
jmp
popf
std
add
mov
add
ret
cmp
mov
in
rcr
pop
lods
rcr
mov
mov
(bad)
out
das
xchg
xor
cmp
les
ror
mov
xlat
dec
repnz
hlt
in
dec
xor
pop
in
mov
not
(bad)
cmps
out
icebp
fld
mov
sbb
pop
or
lahf
xchg
cli
aad
xlat
popa
xrelease
inc
out
xor
xchg
xchg
outs
btr
xchg
loope
xor
fbld
test
dec
push
cmp
sahf
dec
pusha
push
sub
loopne
lahf
add
icebp
popf
push
inc
sbb
lock
out
imul
sub
mov
dec
or
mov
add
sahf
sub
and
jb
mov
test
data16
adc
fwait
jno
test
jb
pop
and
add
outs
scas
scas
ret
cmps
nop
ror
ja
pop
xor
cmc
push
iret
test
shl
pop
in
xchg
out
mov
daa
aas
cmp
dec
add
jo
aad
and
fcom
enter
imul
and
push
jnp
xlat
ffree
dec
fsub
mov
stos
dec
add
(bad)
jle
(bad)
retf
jae
xor
repnz
or
mov
pop
mov
lods
call
inc
int
cwde
sti
dec
out
push
scas
test
clc
into
mov
and
jmp
jo
push
jl
inc
mov
cmp
jmp
inc
pop
pop
dec
xchg
xor
mov
push
mov
stos
jg
fldcw
ins
dec
fst
call
out
fwait
aam
xchg
cmps
or
not
and
dec
push
and
repz
icebp
cmp
movs
inc
gs
adc
dec
jecxz
mov
mov
jecxz
fisubr
out
xor
xchg
xchg
scas
jnp
aaa
or
dec
out
arpl
fst
sub
call
fst
dec
pop
ins
test
fisub
push
movs
je
mov
dec
les
mov
push
cmps
push
int
popf
mov
cmps
int
daa
pop
cdq
mov
mov
pop
jbe
jo
ror
adc
push
and
dec
mov
mov
or
retf
jmp
cmp
and
push
mov
aam
sbb
lahf
stos
sahf
jo
push
lods
aaa
pop
jae
push
xor
shl
jecxz
pop
xchg
into
xchg
sub
scas
cmp
mov
jmp
gs
and
sub
(bad)
lea
inc
(bad)
jo
xchg
test
mov
jle
iret
jl
add
jl
scas
hlt
das
rol
ja
jb
inc
fdivr
lock
shl
sbb
push
cmp
dec
and
rcl
(bad)
mov
shr
jl
mov
ins
sub
out
sbb
cmp
rcl
mov
add
mov
sub
in
push
cld
outs
cmp
mov
leave
or
dec
out
mov
xor
sub
jbe
fild
mov
pop
scas
sbb
nop
cmp
pop
cmps
movs
mov
cmp
out
mov
pop
pop
and
jo
pop
or
(bad)
imul
leave
xor
ins
mov
jns
xchg
xchg
jecxz
adc
test
pop
(bad)
retf
or
loope
xchg
stc
sbb
xor
scas
sbb
fs
fwait
push
aad
das
(bad)
das
jnp
lods
call
mul
stc
mov
mov
mov
enter
mov
xor
in
xor
jmp
jno
movs
xor
xchg
out
xor
push
adc
jl
dec
xlat
sub
or
xchg
out
push
cmp
scas
cld
test
shr
mov
loop
das
dec
rol
cld
or
xor
add
push
adc
sub
pop
mov
push
fadd
xchg
xlat
aad
fst
ret
pop
mov
xchg
push
cld
bound
mov
fsub
mov
pushf
mov
mov
jp
pop
pop
js
mov
aad
popf
outs
dec
div
add
into
push
retf
cmp
lds
fistp
div
cmp
imul
push
jecxz
(bad)
fisub
jno
fucomip
(bad)
cmps
aas
push
dec
mov
inc
or
fs
jp
fldcw
dec
ds
adc
in
mov
xchg
adc
xor
jae
jmp
rcr
pushf
jb
arpl
iret
mov
(bad)
adc
sbb
jl
sti
cmp
test
sbb
data16
or
and
pop
mov
sub
loope
sahf
dec
shl
xor
mov
data16
lahf
pop
push
ret
jns
out
sbb
jmp
adc
fnstenv
into
jp
pop
xor
aam
pop
rcr
sar
and
scas
pop
pop
inc
and
or
push
mov
dec
and
movs
or
jne
xchg
sar
lea
mov
jne
xor
inc
mov
in
jmp
outs
dec
pop
jns
sbb
(bad)
mov
mov
ret
jnp
aam
mov
adc
fsub
or
pop
mov
nop
jecxz
sahf
xchg
clc
mov
sub
popf
mov
xor
xchg
jb
push
ins
aaa
dec
fistp
add
outs
dec
push
movs
sub
adc
loop
add
mov
aad
mov
hlt
mov
sub
or
(bad)
into
pop
push
jmp
out
mov
mov
arpl
(bad)
cs
call
xor
ret
xchg
outs
dec
cwde
add
inc
inc
and
arpl
xlat
jae
arpl
or
sbb
inc
inc
and
out
rol
ror
xchg
xchg
add
push
pop
push
mov
or
in
pop
mov
jecxz
pop
mov
mov
call
nop
test
and
in
xor
fadd
shl
loop
test
outs
lock
clc
std
popa
pushf
out
cwde
mov
jnp
int3
push
mov
push
cmp
sub
movs
mov
xchg
jne
push
pop
ficom
dec
iret
dec
inc
aam
jge
mov
gs
jnp
mov
or
push
mov
fisub
(bad)
mov
outs
jmp
sub
adc
and
jmp
shr
adc
push
jne
test
aam
and
ins
lahf
xchg
pop
cmp
jo
repz
test
imul
push
mov
pop
pop
adc
aas
aad
sub
pop
imul
push
scas
lods
or
mov
inc
cmp
xchg
test
ds
xchg
mov
sub
movs
sbb
idiv
rol
not
das
or
or
movs
ds
fild
sbb
in
mov
cmp
cmp
dec
mov
add
loope
data16
sub
mov
icebp
mov
dec
xor
loopne
inc
xor
and
mov
jb
cmp
jae
adc
in
ins
push
mov
jp
cmp
dec
shl
adc
xchg
das
arpl
inc
cmps
int
jns
pop
cld
movs
scas
cdq
test
jo
xor
test
movs
shl
add
jmp
or
ins
cmps
push
mov
dec
movs
jle
das
pushf
pop
and
loope
adc
mov
outs
aad
or
jb
iret
ins
jl
mov
jae
push
arpl
fbld
xchg
jmp
mov
push
sbb
push
out
call
adc
inc
addr16
into
popa
adc
mov
arpl
mov
int3
call
pop
popa
cmc
push
repnz
ficomp
sbb
ret
xor
mov
mov
jecxz
mov
mov
ret
xor
(bad)
fiadd
ins
mov
mov
cmp
cmp
sbb
pusha
jmp
pop
inc
xchg
hlt
push
jmp
jo
lds
xchg
sti
mov
or
imul
into
or
in
aaa
lods
cmp
xor
fidiv
fcomi
jbe
imul
sbb
push
push
dec
(bad)
ror
jmp
sbb
test
movs
enter
pusha
ins
sti
test
popf
sar
pop
inc
mov
add
pop
out
repnz
jno
popa
sub
adc
js
xchg
je
cs
imul
ret
mov
ret
aaa
sub
mov
mov
mov
add
and
jnp
lea
loop
mov
mov
popa
mov
es
xor
(bad)
(bad)
clc
mov
fidiv
and
(bad)
into
cmps
push
jnp
out
mov
or
dec
xor
test
imul
in
mov
and
xchg
das
jge
and
inc
fidiv
(bad)
fldenv
das
add
xor
scas
aaa
mov
fldenv
pop
inc
ins
in
mov
mov
retf
xchg
add
(bad)
rol
mov
add
pop
ret
dec
outs
cmp
and
jmp
bound
xor
pop
mov
adc
mov
retf
in
fs
cmp
stos
cwde
ds
movs
pop
cmp
lahf
push
inc
daa
xor
cli
loope
out
sub
call
lods
out
dec
or
push
in
sub
pusha
rcr
xchg
jno
imul
mov
add
lods
jmp
cmc
fild
outs
(bad)
mov
cmp
sar
xor
out
dec
loop
cmp
test
sub
dec
push
cli
sbb
retf
int
div
repz
loop
out
push
xchg
and
or
addr16
push
(bad)
(bad)
aaa
pusha
das
mov
call
or
xor
lahf
adc
das
sub
scas
int
and
fst
add
cld
ss
std
jg
mov
ret
daa
imul
adc
push
imul
and
mov
fmul
je
into
cli
rep
cmps
lock
cwde
in
out
movs
test
icebp
jne
int3
lds
cmp
pop
in
loopne
dec
out
sbb
(bad)
rcr
or
mov
ins
out
and
mov
clc
add
and
test
lock
out
mov
leave
icebp
xchg
jg
adc
repnz
cs
popf
stos
add
out
xlat
fild
test
inc
dec
xor
leave
mov
inc
xchg
mov
ret
ds
call
sar
inc
fdivr
popa
hlt
inc
jmp
xchg
sub
pop
jb
adc
inc
std
test
jmp
mov
cmp
in
lods
pop
(bad)
icebp
sbb
mov
mov
sbb
jmp
outs
sub
xor
es
mov
test
into
inc
mov
sbb
mov
inc
dec
fisttp
xchg
push
push
ret
mov
jo
rol
retf
(bad)
(bad)
add
std
jb
pop
clc
inc
dec
xchg
pop
ffreep
(bad)
clc
inc
lods
xor
push
jmp
outs
mov
jb
ret
cmp
idiv
sbb
call
call
pop
fnsave
push
push
push
test
push
jp
jns
jmp
sbb
(bad)
or
inc
mov
pop
(bad)
add
imul
inc
cmp
int3
cmp
shl
jmp
shl
movs
mov
out
push
sahf
in
jge
ja
mov
fstp
mov
pop
jmp
test
aam
pop
inc
jbe
retf
cld
out
push
xlat
inc
aas
and
ret
pop
pop
pavgb
mov
mov
pop
mov
jns
std
push
lock
rcr
(bad)
in
aam
scas
mov
retf
movs
call
in
push
mov
hlt
xor
xchg
(bad)
leave
mov
ins
xchg
add
mov
(bad)
rol
jb
jge
and
dec
and
pop
(bad)
cmp
jp
ins
or
sbb
repz
xor
xor
call
mov
mov
arpl
imul
outs
mul
imul
mov
lds
add
pop
daa
loope
js
cmp
jbe
xchg
stos
pusha
mov
push
add
je
adc
xlat
loop
not
pushf
xchg
movs
(bad)
xor
fnstcw
dec
in
mov
jnp
lahf
xchg
and
(bad)
xor
sub
or
jmp
cmp
jmp
xchg
push
or
pop
mov
inc
push
xchg
iret
add
call
in
push
jl
inc
mov
push
inc
cli
iret
mov
pop
mov
fist
(bad)
hlt
cwde
add
push
add
in
inc
bound
stos
imul
sub
sub
out
nop
inc
sub
mov
dec
lahf
or
mov
cmps
push
mov
mov
push
mov
(bad)
mov
dec
(bad)
popf
adc
ja
call
es
ret
sbb
ja
arpl
retf
xor
pusha
dec
in
daa
xchg
sub
lds
xchg
or
fdivr
push
pop
cwde
mov
movs
clc
icebp
cmp
xor
imul
mov
jbe
scas
fs
loop
shl
(bad)
das
lea
ja
js
mov
(bad)
cs
mov
ret
jmp
and
cmp
fwait
neg
adc
xchg
add
push
loope
fnstsw
das
shr
or
fsubr
mov
clc
push
test
sub
mov
fstp
arpl
mov
mov
out
jg
rcr
arpl
fdiv
gs
add
les
stc
mov
mov
cmp
inc
jnp
sbb
mov
mov
fmul
xchg
mov
es
out
dec
cli
lock
pushf
pop
pushf
sbb
and
mov
ins
stos
in
push
jne
ins
shl
test
into
cmps
dec
xor
mov
loop
icebp
pushf
mov
push
jl
out
or
mov
jo
shl
jno
in
test
sbb
gs
(bad)
mov
scas
in
test
in
xchg
cli
fiadd
test
add
add
fnsave
je
jge
add
cdq
jne
and
inc
inc
and
cwde
cmp
fbstp
mul
or
mov
retf
icebp
ret
out
(bad)
dec
jmp
push
call
mov
sub
imul
mov
sti
lods
mov
mov
out
jae
cmp
add
jp
dec
mov
xchg
fwait
pop
call
ins
jg
push
pop
retf
popf
and
sbb
adc
pop
stc
cmp
dec
mov
push
mov
cwde
xchg
movs
xor
(bad)
dec
stc
fisubr
dec
inc
xchg
adc
in
adc
sahf
jae
cmp
mov
pusha
pop
mov
inc
xchg
inc
mov
sub
cmp
mov
popa
or
push
or
push
(bad)
dec
movs
sub
mov
push
xor
jno
pop
sub
mov
mov
push
xchg
ret
adc
push
hlt
mov
inc
(bad)
cmps
mov
jne
xchg
sbb
mov
xor
jnp
cmps
mov
xchg
stos
std
adc
mov
mul
add
retf
and
out
out
push
pushf
mov
aas
imul
enter
mov
shr
add
xchg
ss
pop
inc
or
cmps
cmc
jecxz
push
dec
sbb
sbb
rol
(bad)
in
mov
clc
test
mov
fild
je
cmp
mov
inc
cmp
jnp
mov
frstor
jl
pop
xor
loopne
stos
jo
jns
iret
fldcw
das
fisubr
pop
(bad)
inc
fwait
mov
xlat
jmp
push
outs
inc
xchg
lods
das
jge
mov
jns
fcom
and
pop
sahf
mov
jae
xchg
mov
xor
add
inc
and
mov
mov
sahf
sub
test
rep
lahf
sbb
retf
add
imul
adc
pop
les
pop
mov
xor
icebp
ins
push
add
(bad)
out
aas
ss
mov
jmp
jo
push
mov
push
push
sbb
xchg
popf
mov
or
push
scas
mov
mov
and
mov
pop
dec
leave
mov
bnd
lods
add
pop
sahf
sub
das
movs
and
xchg
fidiv
xchg
sub
push
xor
sbb
pop
ins
sub
add
cmc
cmps
jo
mov
cli
mov
jge
(bad)
je
sar
adc
jns
adc
stos
test
adc
jmp
inc
jo
and
pushf
(bad)
fwait
xor
(bad)
std
in
jmp
dec
and
xor
pop
mov
push
cdq
in
es
xchg
ja
adc
hlt
out
in
mov
push
lods
sub
pop
fidivr
mov
jno
pop
xor
ss
lea
cmp
sbb
xchg
movs
inc
jle
mov
rcl
rol
or
mov
pop
aam
lods
sbb
rcl
mov
mov
mov
and
cmp
je
push
stc
ret
mov
pop
shl
retf
aas
xor
call
inc
cmp
xor
mov
sub
cs
sub
call
inc
fldcw
push
clc
inc
arpl
(bad)
jmp
mov
into
sbb
and
scas
push
sub
jmp
in
das
adc
mov
call
sub
cmp
sbb
fsub
jge
ret
lods
jns
ss
gs
dec
popa
add
mov
sub
mov
out
lods
adc
lods
pop
sub
xor
pop
push
jnp
pop
mov
sbb
shl
jmp
xor
mov
mov
mov
cmp
ds
test
lock
stos
arpl
test
icebp
and
dec
sbb
adc
mov
or
js
add
imul
inc
push
aas
loope
lods
pusha
mov
ss
xrelease
jns
cmp
xor
fisttp
test
inc
inc
lock
rol
mov
dec
pop
sbb
es
call
dec
ins
cmps
add
push
ror
ss
js
out
xchg
out
cmp
jns
cmp
fmul
js
ins
adc
popa
movs
mov
cmp
popf
xor
xlat
sub
dec
jbe
test
adc
push
mov
lock
or
rol
retf
xor
frstor
jmp
push
or
aam
and
outs
adc
shl
jne
out
sbb
mov
movs
(bad)
fnstsw
mov
adc
(bad)
fstp
retf
lods
add
mov
(bad)
inc
push
jle
xchg
imul
pop
shr
out
es
add
outs
add
call
das
push
jbe
das
fs
xor
fldenv
sbb
cmp
and
mov
stc
and
test
imul
stos
or
out
es
or
add
idiv
or
jo
xchg
jne
cmp
push
int3
push
fwait
mov
pop
xchg
xchg
in
xor
test
mov
pop
outs
pop
push
aad
xchg
or
aam
inc
ror
nop
mov
dec
dec
vmovaps
cmp
fs
mov
jge
call
lahf
or
adc
out
ret
cmc
adc
pop
mov
sbb
imul
pushf
mov
pop
mov
in
fistp
stos
daa
retf
mov
mov
sub
pop
dec
jmp
inc
sahf
sbb
dec
or
jecxz
xchg
mov
and
iret
test
or
add
jno
or
gs
out
mov
mov
jg
icebp
pop
ret
mov
xlat
mov
xchg
popa
aad
daa
(bad)
xchg
xlat
inc
xchg
mov
mov
retf
xchg
xor
ins
in
xor
movs
jge
pop
push
sub
pop
mov
mov
repz
into
iret
sbb
cmp
lods
cmovp
jae
mov
loop
cld
adc
cmp
movs
sbb
aas
addr16
test
sub
loope
fimul
dec
sub
sub
dec
sbb
ret
add
xor
fidivr
cli
out
mov
dec
shl
nop
mov
into
lds
inc
xchg
aam
inc
in
movs
mov
cmp
ret
adc
sub
sti
loope
test
fdiv
(bad)
cdq
repz
shl
inc
mov
and
mov
out
popf
adc
dec
push
js
adc
cmc
push
push
push
pop
xchg
cli
test
xchg
add
dec
pusha
xchg
xchg
jle
jno
(bad)
pop
sbb
pusha
out
int
xchg
cmp
aas
test
push
mov
push
ficom
fstp
mov
fisubr
test
push
push
or
xchg
ror
or
fucomip
mov
jmp
cmp
mov
pop
sti
xchg
sub
or
inc
cmp
jecxz
movs
imul
dec
scas
mov
test
mov
inc
mov
imul
xor
leave
or
add
(bad)
out
jbe
sub
lods
in
or
test
cmp
pop
add
js
sub
aas
adc
loopne
xchg
mov
and
and
xor
add
dec
push
xor
xchg
cli
mov
and
dec
push
mov
test
mov
mov
shr
mov
pop
cmc
cdq
outs
lds
jg
movs
addr16
je
sbb
rcl
fild
push
sub
jle
pop
inc
outs
retf
push
sbb
mov
cwde
inc
popa
fcom
adc
sbb
lods
clc
out
lea
stc
fmul
sbb
sbb
shl
push
sbb
and
or
dec
xchg
in
cmps
mov
sti
aas
push
sbb
js
jno
sub
add
clc
(bad)
jmp
cmp
fiadd
jmp
lods
rcl
pop
sbb
and
push
inc
mov
movs
mov
out
loope
dec
or
or
outs
pop
daa
mov
fsubr
(bad)
jo
outs
push
cmp
cli
ror
or
ins
std
and
xor
sar
pusha
adc
call
dec
ret
call
popa
push
into
inc
mov
cli
in
into
mov
adc
outs
leave
shr
sub
pop
es
pop
xchg
sub
jmp
push
mov
cmps
inc
dec
xor
loopne
aas
pusha
fbstp
inc
int3
popf
push
adc
lods
cdq
ds
pop
jo
and
inc
mov
mov
test
jl
mov
and
push
jecxz
dec
push
jecxz
jp
push
(bad)
inc
pop
pop
xchg
push
mov
gs
aam
pop
sub
push
add
inc
test
stos
out
jge
cs
popa
add
mov
adc
mov
icebp
addr16
jnp
pop
pop
sbb
stc
clc
loop
pop
rcr
and
mov
in
test
cmps
xor
adc
sbb
in
loope
es
mov
(bad)
cmc
in
sbb
mov
xchg
(bad)
cmp
outs
cmc
in
shl
sub
cmp
inc
sbb
adc
test
inc
pop
mov
outs
mov
dec
(bad)
inc
jmp
retf
cmp
dec
out
outs
add
sbb
popf
leave
adc
push
xor
stos
mov
movs
sub
mov
jl
xchg
ret
sbb
push
lock
mov
cmc
cld
inc
loop
shl
call
xor
push
ret
inc
xchg
mov
push
push
outs
jmp
xor
mov
test
adc
xor
addr16
retf
xchg
shl
loop
add
xchg
jae
cld
mov
push
sub
movs
dec
mov
mov
mov
scas
(bad)
sahf
add
fisubr
popa
mov
lsl
add
arpl
and
and
sbb
pop
not
sub
rcl
mov
jg
dec
push
nop
fwait
repz
dec
adc
je
popa
lock
aas
pop
aaa
xor
sbb
cmp
sti
(bad)
into
shl
and
outs
xchg
pushf
xor
mov
pop
cwde
sub
faddp
pop
or
loop
aas
hlt
lods
js
in
mov
inc
dec
or
ins
shl
fdiv
jle
xchg
add
mov
pop
test
imul
jbe
push
jmp
shl
retf
call
add
stos
xchg
or
mov
retf
nop
cmps
and
test
js
sub
movs
adc
pop
test
ss
test
jp
clc
inc
ds
int
push
das
inc
jbe
sti
add
xchg
dec
movs
imul
and
jl
add
stos
mov
retf
mov
(bad)
retf
int
aas
add
jb
lods
jne
pop
pop
(bad)
pop
mov
call
hlt
ds
push
cmp
push
(bad)
pop
pop
cwde
xchg
mov
jb
pop
adc
jo
sbb
leave
aas
mov
sbb
xchg
pop
mov
pop
je
pusha
cmp
xor
jl
pop
aad
je
inc
inc
xor
repz
inc
test
inc
in
test
push
mov
pop
rcr
xchg
xchg
push
lahf
fisub
xor
cld
add
jne
cmp
shl
cli
mov
jmp
pop
fnsave
lock
mov
push
mov
dec
fild
push
mov
adc
mov
icebp
jle
sub
mov
dec
ret
cmp
xchg
cmp
rol
cdq
aas
push
cmp
test
mov
ret
or
ins
test
ins
adc
mov
loopne
sbb
(bad)
movs
outs
repz
inc
in
bnd
xchg
pop
cmc
inc
jno
dec
jns
fcom
mov
loop
and
xchg
lods
xchg
call
mov
popf
stos
movs
inc
ins
push
mov
jmp
sub
ret
mov
xchg
loop
pop
dec
and
adc
xchg
pop
sbb
cmp
ins
sbb
shr
aas
sti
mov
jb
cwde
jne
dec
(bad)
out
mov
xor
cmc
adc
push
(bad)
clc
push
sub
adc
add
push
mov
outs
out
aas
mov
loopne
cli
lahf
aaa
icebp
clc
jmp
pop
mov
scas
and
inc
fcomp
imul
inc
jne
(bad)
push
retf
popf
mov
shl
cmp
stc
jmp
sub
pop
jl
jno
jle
int3
pop
adc
mov
repz
in
(bad)
mov
aas
push
ret
jo
mov
outs
lds
(bad)
xor
xlat
mov
jmp
popf
pop
sbb
xchg
push
mov
xor
leave
iret
mov
sub
dec
push
push
or
add
sub
pusha
mov
push
xor
jbe
add
push
jmp
cli
rcr
pop
loop
sub
mov
jmp
icebp
(bad)
imul
aas
lock
inc
or
mov
jmp
pusha
cs
lds
leave
push
imul
fldenv
(bad)
jns
adc
repz
adc
add
(bad)
or
outs
or
aas
test
push
adc
(bad)
out
addr16
xor
sbb
mov
sbb
or
fwait
adc
pop
(bad)
jecxz
add
push
sbb
xchg
loope
dec
stc
cmp
retf
outs
mul
jmp
dec
shr
in
icebp
shl
add
sub
jb
ret
and
dec
rcr
adc
pop
push
(bad)
(bad)
sub
pop
mov
mov
nop
pop
aam
xchg
fwait
jl
push
dec
jg
ins
mov
pop
inc
shr
xchg
sbb
push
mov
xor
hlt
cdq
aaa
(bad)
xor
les
xor
inc
add
pop
sbb
outs
mov
call
xchg
or
xchg
addr16
xor
test
jmp
ret
icebp
and
mov
cwde
dec
dec
aaa
mov
out
sbb
or
enter
mov
(bad)
ret
inc
mov
addr16
and
xchg
retf
mov
fsubp
and
lahf
scas
adc
stc
pop
push
out
shl
lods
cmp
iret
jle
mov
xchg
xchg
lds
fcomip
into
fwait
aaa
sbb
lea
or
cmp
imul
jp
add
shr
mov
mov
jecxz
push
popf
inc
jl
jecxz
pop
mov
xchg
inc
cmp
xor
call
bound
push
imul
ret
mov
dec
sbb
in
inc
add
shl
dec
pop
push
ins
pop
cmp
clc
outs
fcom
push
jecxz
sub
sub
(bad)
movs
add
dec
out
movs
aad
int3
jmp
push
jle
pop
cwde
sbb
mov
cli
mov
mov
inc
stos
jmp
popf
pop
stos
pop
xchg
inc
dec
pop
movs
outs
(bad)
cmps
inc
idiv
pop
enter
repnz
xlat
push
push
xchg
repnz
mov
hlt
inc
fisub
sbb
xchg
inc
rol
pop
sbb
popf
setg
or
cmp
jl
shl
xchg
sub
cmps
fstp
cmp
jmp
ficomp
add
aam
ret
dec
and
jae
int
movs
loopne
or
mov
mov
retf
inc
leave
push
movs
ins
stos
jecxz
or
in
push
fwait
dec
push
or
or
movs
or
pop
push
pop
js
xchg
add
fsub
fidivr
and
mov
jo
xor
lahf
jl
popa
adc
add
out
inc
add
adc
adc
mov
int3
outs
sti
cmp
xchg
into
je
mov
sbb
movs
(bad)
jne
adc
test
add
je
xor
sar
gs
out
mov
in
inc
sbb
repz
stos
xchg
add
mov
jecxz
xchg
ss
lea
add
dec
jmp
loop
xchg
push
dec
mov
in
mov
aad
movs
ss
sub
or
jle
sub
push
cs
inc
mov
std
sub
scas
mov
sub
mov
adc
jp
in
jo
aaa
fild
jle
inc
(bad)
jne
div
bound
sub
sbb
dec
xchg
xor
push
push
out
add
xor
fwait
push
rcr
stos
sub
je
sub
mov
lock
jns
rcl
cmps
mov
push
mov
and
mov
push
lods
cmp
movs
leave
in
rol
(bad)
inc
mov
or
mov
dec
addr16
and
imul
inc
imul
int3
mov
shl
cmp
(bad)
ins
sub
(bad)
pop
idiv
push
dec
cdq
repnz
test
into
mov
mov
dec
test
outs
jecxz
push
ja
adc
in
or
(bad)
jge
in
cmps
sub
cwde
int
xor
stos
xchg
cs
call
xchg
add
pushf
dec
pop
mov
push
retf
lahf
add
imul
adc
shl
ins
pop
ds
jl
dec
cmc
aad
xchg
outs
(bad)
stc
data16
cs
(bad)
and
mov
inc
ins
scas
repnz
xor
jp
add
(bad)
stc
out
adc
test
mov
int
pop
mov
mov
add
xor
popa
js
inc
jmp
cmps
cld
pop
cld
clc
imul
sub
les
mov
adc
repnz
adc
mov
mov
shr
push
fisubr
stos
or
sub
push
push
cmp
jmp
ror
jno
cmp
aas
in
add
scas
inc
xor
inc
push
adc
js
test
or
je
push
jg
sbb
inc
xor
jae
jbe
xchg
push
sub
or
sub
xor
out
into
mov
mov
sbb
loopne
lods
popa
cdq
imul
xor
xchg
xchg
retf
mov
bound
push
cmp
cmp
fsub
mov
and
out
mov
pop
and
movs
sbb
cmovnp
push
push
mov
in
cmp
pop
jg
mov
mov
xchg
js
lea
cmc
iret
inc
into
or
mov
jl
add
ja
and
xchg
mov
jmp
imul
test
scas
js
retf
rcl
out
into
cld
shr
hlt
dec
sub
mov
ja
mov
or
lods
mov
pop
stos
loope
test
cwde
test
pop
inc
popa
cmp
hlt
xlat
xor
cmp
(bad)
sar
rol
retf
jns
add
cmps
pusha
cmp
inc
add
cmps
mov
cmp
xor
mov
sar
(bad)
mov
lea
jmp
dec
cmp
add
lea
xchg
test
mov
sbb
xor
js
xchg
js
lock
or
fist
inc
cs
int3
pop
dec
xchg
or
(bad)
fld
pop
push
mov
push
mov
outs
retf
mov
jmp
loop
pop
out
pop
jno
(bad)
add
leave
and
dec
mov
test
test
sub
dec
ss
aas
xchg
imul
push
test
int
mov
mov
daa
jbe
jmp
call
jo
jp
int3
cmc
popa
push
fadd
cmps
push
sti
test
mov
dec
mov
sub
out
xor
test
xchg
xchg
jle
mov
pop
inc
popf
mov
pusha
add
neg
adc
cmp
xchg
in
fidiv
cmp
in
sbb
mov
(bad)
add
or
sub
mov
cmp
pusha
or
lock
dec
sub
mov
xor
cdq
jl
pop
repnz
xchg
cld
pop
inc
test
add
xor
bts
out
or
and
adc
out
popa
inc
in
lods
(bad)
out
jnp
dec
bound
int
mov
cmp
dec
add
(bad)
cld
dec
fcmovnu
mov
jp
mov
fcmovbe
rcr
mov
pop
mov
dec
clc
js
movs
mov
lock
push
xchg
jo
inc
retf
ins
mov
sbb
inc
mov
or
jae
mov
xor
xor
cmps
mov
mov
dec
and
retf
inc
push
sbb
(bad)
cli
xlat
pop
xchg
mov
cld
outs
push
test
adc
ret
cmc
push
int
cmp
ficomp
loope
add
lds
add
add
xor
sub
jo
pushf
repz
jne
or
retf
js
mov
push
cmp
into
mov
mov
jnp
add
mov
iret
std
rcr
push
xor
dec
sub
push
dec
std
xor
ffree
inc
sbb
add
jp
inc
das
xchg
addr16
push
mov
adc
imul
and
aaa
clc
test
sub
adc
sbb
sbb
daa
js
sub
cmp
adc
or
fld
push
out
add
jb
pushf
and
into
and
mov
aam
xchg
push
mov
or
jge
gs
outs
hlt
and
dec
mov
fwait
jo
les
sub
sub
sbb
push
fsubr
xor
push
lahf
mov
inc
cmp
cmp
and
js
loop
cli
xor
adc
jb
jg
add
jae
xchg
dec
jl
mov
dec
or
aam
jl
push
mov
xor
sbb
(bad)
dec
in
pop
mov
inc
fstp
mov
cmp
sar
fiadd
jne
xchg
inc
xlat
(bad)
mov
fwait
fs
cmc
mov
popa
and
dec
dec
loope
push
scas
mov
mov
movs
pop
mov
fwait
in
les
xchg
xchg
and
cld
xor
out
lods
cmp
mov
mov
fdiv
push
rcr
int3
shr
push
xchg
mov
push
out
jb
aad
test
push
push
and
mov
pop
push
aad
push
or
pushf
imul
std
jb
jl
addr16
pushf
mov
sahf
sub
fwait
jmp
or
mov
push
xor
idiv
aas
sbb
stos
xlat
inc
in
inc
and
cmp
xor
sub
call
xchg
(bad)
mov
stc
add
mov
pop
aad
mov
shr
cmp
movs
(bad)
in
dec
or
or
ret
inc
pop
aam
or
mov
rol
or
ins
cmp
(bad)
dec
push
fsub
pop
cdq
mov
mov
out
pop
data16
xchg
push
ret
dec
sub
push
call
(bad)
stc
xchg
dec
js
aam
cli
push
retf
pop
mov
adc
sub
aas
or
in
stos
out
into
popa
mov
add
imul
mov
xor
loopne
pop
cmp
data16
lods
add
les
cli
sar
cdq
xlat
scas
out
(bad)
test
and
mov
js
xor
aam
movs
int3
arpl
add
popa
mov
and
fsub
int3
inc
in
popa
jbe
lods
pop
(bad)
jo
xor
add
jbe
push
enter
and
adc
(bad)
adc
repnz
adc
mov
xchg
push
lea
(bad)
into
adc
push
cdq
ins
out
ret
inc
mov
push
mov
movs
and
in
int
push
out
and
shl
cmp
mov
xor
sub
rcl
stos
daa
leave
loopne
sbb
mov
in
bnd
sbb
jae
sar
aam
jecxz
sub
inc
xlat
jbe
je
test
mov
mov
inc
and
pop
movs
or
inc
adc
jp
nop
mov
pop
imul
mov
pop
jne
fisttp
mov
aas
inc
jo
(bad)
xchg
cmps
ss
ficomp
xchg
adc
test
xchg
sbb
or
adc
add
mov
mov
push
adc
ja
dec
aam
mov
sub
pop
sub
push
outs
mov
js
aaa
cmp
add
dec
stos
lea
dec
fdiv
push
dec
push
mov
jge
adc
pop
out
cmp
fidivr
xchg
pop
rcr
sub
mov
out
mov
jle
(bad)
adc
inc
shr
fadd
clc
nop
adc
mov
jg
and
sub
ror
cmp
aad
mov
xor
adc
xor
sub
add
mov
and
aaa
(bad)
fst
(bad)
jb
mov
in
in
cmp
or
push
or
nop
jbe
es
push
test
push
(bad)
les
rcr
jmp
sti
fisttp
push
shl
jmp
ret
int
sub
push
push
jns
retf
fimul
shl
(bad)
outs
and
push
sbb
push
cmps
inc
ret
data16
push
xchg
pop
ja
fdiv
addr16
mul
lods
xchg
pop
xlat
mov
sbb
(bad)
in
inc
push
or
enter
aas
mov
hlt
pop
dec
sub
mov
dec
fdivr
ret
jnp
push
stc
jae
test
xchg
leave
jns
fsubr
pop
loope
lods
dec
adc
or
(bad)
xor
call
outs
mov
std
and
and
sar
bound
jmp
je
call
scas
inc
push
xchg
lds
jae
fucomp
ds
outs
aad
pusha
sbb
cmps
mul
dec
mov
or
or
out
sbb
push
retw
jmp
pop
cs
sbb
mov
sub
push
pusha
adc
sbb
call
pop
mov
nop
xor
mov
xor
lods
out
bound
shl
cmc
cmp
fld
xchg
clc
cmp
int
push
std
mov
mov
movs
xor
mul
mov
jmp
dec
ja
call
int
dec
rcr
cmp
hlt
jns
sbb
jns
lds
xchg
das
arpl
data16
push
sub
mov
cmp
jae
pop
xlat
mov
push
daa
jmp
sub
and
imul
frstor
loope
pop
int
cmp
aam
outs
cdq
ds
add
stos
clc
(bad)
imul
ss
popf
xchg
add
pop
lahf
pop
fsubr
fmul
pop
xchg
pop
popa
outs
or
pop
mov
lock
mov
pop
div
jp
div
xor
out
push
or
dec
test
push
inc
shl
das
fs
call
std
cld
test
xor
sub
daa
ss
sub
adc
aas
sub
xlat
loop
pop
pusha
mov
sbb
pop
dec
pop
repnz
repz
or
out
and
mov
cmps
add
popa
movs
mov
not
stc
inc
fdiv
push
jb
jo
sbb
test
push
daa
fwait
jmp
pop
iret
add
retf
int
loope
inc
stos
xchg
xchg
jmp
xor
jo
dec
mov
pop
or
ret
lods
mov
mov
jmp
mov
and
jbe
jmp
fwait
jl
add
rcr
jle
jb
xor
je
mov
dec
push
cmc
nop
mov
mov
je
sahf
xor
repz
jne
movs
mov
icebp
adc
inc
nop
add
sbb
jbe
movs
aam
xor
pop
or
cli
loop
ins
push
out
mov
pop
call
das
out
stos
dec
cmp
leave
lods
dec
movs
retf
les
jp
scas
les
jmp
pop
sbb
cmps
cld
lods
sahf
pop
mov
out
push
sub
mov
shl
push
mov
mov
xor
fstsw
das
mov
xchg
lahf
mov
retf
jns
imul
mov
fidivr
xchg
mov
dec
xor
dec
mov
in
adc
test
out
add
xlat
inc
inc
dec
push
outs
fdivr
mov
mov
pop
push
and
das
cmps
xor
lock
mov
xchg
and
sub
ret
fld
mov
je
jbe
adc
xor
add
fimul
or
xor
test
cmp
sub
cmp
sbb
bound
sbb
es
lods
clc
jp
sub
ret
mov
iret
faddp
fistp
mov
call
ret
pop
imul
movs
push
ds
dec
xlat
mov
icebp
pop
stc
in
cmp
cld
cmp
pop
mov
lahf
das
fwait
add
sub
mov
xchg
sahf
ret
ffree
fs
test
lahf
xchg
jmp
js
retf
jle
aam
mov
std
dec
mov
mov
loopne
inc
test
ins
push
mov
shr
inc
ins
(bad)
(bad)
inc
pop
or
pop
mov
in
push
sbb
xor
ret
div
stos
inc
mov
stos
out
scas
mov
(bad)
jge
imul
(bad)
jmp
cs
adc
cmp
icebp
popa
iret
cmovns
pop
fs
ins
into
movs
inc
out
ins
fs
imul
call
syscall
ins
out
popa
les
sbb
mov
(bad)
jmp
and
in
mov
adc
test
add
cmp
pop
xchg
mov
test
add
out
arpl
fs
xchg
mov
push
push
loopne
js
daa
sub
mov
jle
sub
add
add
ret
push
test
jl
(bad)
push
mov
jae
mov
and
jl
daa
ret
mov
scas
add
sbb
dec
dec
mov
xchg
loope
mov
and
push
mov
ret
mov
cmp
iret
scas
xchg
call
pop
jecxz
sbb
out
(bad)
jne
pop
ror
sbb
inc
mov
mov
cld
or
(bad)
push
xor
mov
int
xchg
push
scas
fwait
jne
daa
enter
or
cmp
jg
adc
int
test
dec
or
mov
out
lods
cmp
adc
clc
push
nop
dec
adc
mov
ret
aaa
lods
xchg
cli
repz
in
pop
outs
js
inc
test
int3
movs
ficomp
clc
jb
xor
bound
cmp
cmp
in
fs
mov
lds
or
sub
push
mov
out
mov
or
fild
xchg
fst
sbb
scas
mov
rcl
scas
mov
leave
jnp
pop
xor
xchg
pop
adc
fldcw
imul
pop
aas
outs
shl
xchg
adc
pop
and
xchg
push
fisttp
sbb
stos
pusha
sbb
shl
or
mov
jl
mov
pop
or
jmp
nop
mov
xchg
pop
loope
dec
cmp
scas
sbb
add
or
mov
jb
or
xchg
push
not
xchg
jne
into
scas
cmps
add
push
fadd
mov
push
jmp
enter
clc
pop
cld
(bad)
mov
xor
xor
sbb
push
rol
scas
and
mov
mov
outs
or
xchg
pmovmskb
or
stc
sbb
fist
in
adc
xchg
xor
mov
je
cli
(bad)
xchg
js
aam
xchg
dec
or
f2xm1
cmp
xor
mov
sbb
fistp
popf
dec
and
ss
inc
xor
sbb
out
out
pop
mov
test
sub
aam
sub
retf
adc
pop
mov
and
sbb
adc
xchg
push
sahf
adc
cwde
jmp
cmc
jp
loope
clc
(bad)
push
add
nop
(bad)
xor
add
sub
xchg
push
dec
mov
lahf
push
pop
ja
fcom
arpl
dec
es
mov
mov
dec
pop
add
test
ror
retf
addr16
mov
adc
fst
cmp
dec
cmps
xor
dec
jnp
fsubrp
in
mov
arpl
call
mov
rcl
push
xor
(bad)
pop
cs
aaa
jmp
hlt
inc
and
or
or
mov
or
inc
lods
sbb
cmc
neg
jecxz
lock
cmp
lock
aas
lahf
rdmsr
jo
mul
and
push
loopne
inc
adc
jns
inc
xchg
push
mov
cmp
push
arpl
add
cmp
inc
mov
push
cmc
dec
sbb
mov
iret
mov
add
fdivr
xchg
test
js
add
(bad)
repz
test
retf
rol
sub
push
scas
addr16
mov
adc
sbb
data16
inc
cmps
sar
push
add
and
dec
sbb
mov
dec
pushf
or
ss
mov
test
dec
fiadd
popa
jb
and
int
shl
ja
push
shl
jg
mov
add
out
sub
aam
pop
cmps
xchg
mov
cmps
inc
cmp
in
sub
push
addr16
icebp
aas
push
push
call
adc
neg
xor
or
mov
loopne
mov
jecxz
mov
cli
mov
in
and
test
inc
pop
jg
dec
mov
mov
pop
addr16
shr
rcr
and
movs
dec
out
aas
fs
jo
aas
je
ins
rcr
or
dec
mov
sbb
mov
outs
inc
mov
sub
pop
sete
xor
bound
test
mov
jbe
xchg
call
out
fwait
in
xor
jle
rcl
push
jmp
clc
xor
stos
cli
lods
mov
out
mov
out
mov
cld
push
cmp
es
mov
arpl
scas
js
shl
sbb
mov
xor
aas
jle
pop
js
jle
mov
test
(bad)
adc
xor
ins
mov
sub
pop
xor
std
adc
inc
push
mov
jne
jb
mov
add
fisubr
neg
add
fnsave
stos
adc
fisttp
dec
ins
test
arpl
pusha
xlat
enter
icebp
xchg
aas
jae
dec
inc
xchg
add
sbb
mov
leave
lods
dec
mov
in
xlat
inc
shl
call
pop
cdq
mov
shr
sub
icebp
add
outs
ds
js
je
ds
or
rcr
push
jge
jmp
xchg
pop
ror
ds
sbb
cld
cmp
mov
ret
jmp
jg
inc
pop
(bad)
mov
imul
jne
stos
pop
sbb
add
retf
icebp
add
fmul
retf
loopne
mov
xor
cmp
sub
outs
jg
cdq
cwde
fcom
scas
out
or
stc
inc
aad
mov
xor
and
inc
sar
inc
xor
in
jbe
cmp
jge
stc
mov
xor
(bad)
js
pop
jmp
mov
ins
xor
mov
fist
fsubr
jmp
retf
in
daa
mov
mov
mov
movs
xchg
jmp
inc
repz
scas
mov
pop
sbb
jg
xchg
mov
fwait
xor
jmp
movs
inc
cdq
xor
jne
and
inc
add
jae
mov
dec
lds
(bad)
cmp
push
lods
les
cmp
mov
pop
lea
(bad)
mov
push
ss
dec
pop
mov
out
daa
ds
mov
mov
stc
fwait
mov
aaa
repnz
fdivr
sub
inc
in
xor
mov
add
jl
jne
xor
push
or
pop
fst
push
dec
inc
dec
sub
cmp
fbld
add
ror
inc
mov
push
pop
and
je
or
inc
jge
repnz
hlt
aas
jne
mov
and
push
jg
jne
daa
enter
xchg
and
adc
add
xchg
aad
and
jmp
jmp
mov
xchg
repz
das
aas
repz
movs
scas
inc
out
retf
push
mov
loope
add
aad
lahf
xchg
xor
stos
xchg
jae
xor
dec
mov
mov
ss
iret
lea
jae
mov
mov
sbb
loop
sti
fiadd
and
and
in
mov
retf
and
lds
pop
cs
rcr
sub
leave
dec
ror
loop
aaa
cld
push
xchg
nop
mov
in
mov
fidiv
in
sub
mov
(bad)
cs
sbb
xchg
fadd
xlat
xor
lds
add
test
mov
jb
mov
cmps
mov
xor
cmps
js
leave
repnz
cmp
mov
sbb
and
add
into
mov
sbb
fsub
addr16
(bad)
sub
test
stos
out
push
fmul
add
(bad)
shr
jp
pop
push
xchg
popa
lahf
add
mov
fwait
jle
or
shl
retf
jl
pushf
xchg
lahf
stos
jae
jmp
(bad)
clc
cmp
(bad)
dec
lahf
cmp
xchg
out
push
inc
and
mov
and
mov
out
out
xchg
sub
aas
shr
inc
outs
push
cdq
pop
test
xor
retf
retfw
or
popa
das
xchg
shr
cmp
arpl
sbb
mov
adc
mov
jno
xor
cmp
or
ds
or
dec
xor
xor
xchg
(bad)
sub
fwait
sbb
jne
jle
cmc
sub
jp
shr
retf
sbb
and
fist
rcr
jbe
scas
test
push
sub
in
pop
scas
out
arpl
mov
pop
lea
push
retf
cmps
scas
outs
sub
mov
enter
sbb
hlt
xor
into
inc
fldenv
int3
ins
fdivr
jae
xchg
or
cmp
or
stos
daa
xchg
dec
fcomp
push
mov
repnz
pop
add
(bad)
fild
inc
dec
not
fwait
cmps
popa
inc
ss
or
imul
ffree
hlt
and
jecxz
push
dec
jbe
das
arpl
or
fisttp
mov
sbb
pop
and
sahf
loopne
sub
dec
xchg
or
ds
mov
push
mov
sbb
pop
jno
mov
shr
cmps
sar
mov
cmp
gs
xchg
xchg
inc
jno
inc
call
lock
adc
and
dec
fsubr
push
out
mov
push
sub
fild
stos
mov
xchg
mov
pop
mov
mov
and
sub
mov
sbb
fwait
push
adc
and
out
cmp
leave
mov
mov
jmp
(bad)
xor
ds
in
push
fisub
dec
and
mov
test
test
add
repnz
sbb
repnz
div
loope
mov
jb
dec
mov
lock
sub
idiv
(bad)
mov
shl
call
neg
ret
pop
test
neg
push
clc
sbb
pop
out
cmp
sbb
and
aaa
(bad)
mov
out
mov
mov
es
mov
(bad)
jmp
xor
mov
mov
(bad)
ss
call
jg
scas
in
les
cmps
fwait
iret
data16
cmp
repnz
jmp
push
je
push
cmp
out
les
inc
add
jecxz
repz
call
stc
imul
dec
xchg
fistp
add
imul
push
jl
ja
fs
les
popf
sub
(bad)
and
outs
data16
out
fidivr
xchg
ret
pusha
fimul
push
inc
sbb
bound
jbe
sub
push
mov
scas
mov
jg
adc
pop
sbb
push
mov
imul
xchg
test
ss
cmp
loopne
sub
mov
mov
add
fimul
in
das
sti
in
jbe
mov
xor
popa
icebp
jmp
out
jmp
dec
push
inc
mov
xchg
or
and
ins
mov
mov
shr
ret
into
adc
(bad)
loope
sbb
inc
repz
daa
and
xchg
(bad)
movntps
push
mov
idiv
call
sub
test
(bad)
daa
inc
push
repz
ret
and
cs
cli
cmp
mov
sbb
cmp
and
or
and
push
and
add
lahf
xor
(bad)
lahf
mov
pop
xor
gs
hlt
pusha
div
sti
call
cmps
add
ja
out
test
mov
cmp
loop
jo
fdiv
xor
xor
(bad)
inc
in
mov
sub
aad
cmp
ror
mov
stc
mov
cli
int
push
pop
pushf
or
mov
(bad)
cmc
xor
lock
mov
leave
shr
idiv
adc
xor
mov
aaa
push
xor
sbb
(bad)
sub
xor
repz
pop
test
fsub
push
jbe
mov
pop
std
cwde
dec
test
retf
and
pop
ins
movs
or
mov
add
outs
pop
pop
adc
mov
retf
xor
mov
push
push
push
xor
in
sbb
das
push
push
ja
cmc
pop
jge
inc
add
xor
jl
adc
(bad)
mov
popa
sub
not
push
pushfw
out
rcr
sub
mov
mov
les
(bad)
jg
pop
rcl
aas
hlt
shl
imul
mov
fdivr
idiv
cmc
jbe
sbb
xchg
out
push
call
inc
mov
fdiv
into
xor
jecxz
(bad)
xchg
add
(bad)
aam
es
inc
mov
sub
loop
cld
mov
mov
test
cli
push
or
shl
jmp
aaa
dec
cmp
sub
pop
cmp
lods
je
or
xchg
pop
inc
neg
jne
icebp
lock
jmp
xchg
sbb
sbb
jb
frstor
inc
adc
sub
nop
fs
les
xor
mov
mov
mov
ss
fnstcw
jg
jge
(bad)
div
mov
fs
shl
add
sub
aad
in
pop
in
jmp
fcmovnbe
inc
out
fstp
mov
mov
les
imul
loope
mov
in
pop
(bad)
mov
dec
cdq
pop
pop
jl
cmps
dec
pop
std
lea
pop
or
cmps
cmp
cwde
fadd
das
imul
out
(bad)
out
stos
and
and
xchg
pushf
into
retf
mov
pop
sti
je
cmp
jecxz
inc
dec
test
out
bound
mov
daa
push
xor
addr16
out
inc
imul
rol
(bad)
shl
dec
and
test
push
pop
adc
jl
xor
paddw
cmc
pop
jge
xchg
adc
and
mov
call
out
lods
in
nop
fdiv
inc
call
int3
cs
outs
mov
and
popa
jnp
mov
(bad)
gs
jl
call
fst
xchg
sub
dec
jmp
push
adc
dec
nop
out
fs
jl
or
shl
and
dec
stos
cdq
pop
push
sub
shr
jns
sub
cs
cmp
mov
push
ret
aaa
xchg
loop
les
mov
adc
imul
fisttp
xor
fld
sbb
and
xchg
jmp
jae
cmp
outs
sti
inc
in
push
mov
inc
or
dec
adc
push
stc
mov
pop
adc
scas
loopne
xor
add
inc
outs
add
sbb
cmp
cmc
fsubr
dec
mov
iret
jge
mov
sub
popf
cmp
adc
pop
imul
jnp
pop
push
and
jnp
xchg
jecxz
out
aas
sti
dec
jo
pushf
sbb
jo
in
mov
movs
test
bound
test
mov
mov
ins
dec
enter
ss
enter
aas
mov
out
add
stos
clc
inc
test
cli
jle
iret
retf
push
jp
push
leave
fst
aas
rcl
xor
jbe
test
push
call
stos
dec
dec
add
test
inc
add
mov
dec
shl
cmp
jge
in
das
scas
and
sbb
dec
out
test
sub
test
cmc
add
jecxz
loopne
and
sub
gs
call
mov
xor
jle
push
mov
mov
mov
cld
repz
data16
and
imul
mov
(bad)
inc
inc
mov
xor
(bad)
push
stos
addr16
addr16
syscall
(bad)
call
pop
or
add
div
fcom
and
loopne
loopne
inc
push
push
in
cmp
dec
push
pop
lds
sbb
cmp
mov
cmp
shr
adc
dec
lods
fldenv
add
neg
daa
xchg
mov
xor
mov
push
jmp
ins
push
loope
push
or
sbb
dec
jmp
pop
or
sbb
mov
jmp
out
or
in
repnz
push
int
in
or
aad
int
and
and
add
mov
movs
add
inc
push
clc
clc
fsub
aas
sub
jge
prefetcht1
pop
sub
data16
push
pop
inc
rcl
icebp
(bad)
xchg
add
and
sbb
into
ror
out
xlat
pop
mov
and
int3
je
sbb
jno
mov
data16
test
add
imul
not
mov
out
(bad)
dec
xor
data16
jb
int3
sub
leave
pusha
mov
out
sti
pop
mov
pop
mov
cmp
inc
jmp
dec
fs
add
mov
lods
(bad)
scas
push
adc
mov
mov
cmp
or
pop
and
loop
push
nop
mov
pop
mov
mov
shl
fsubr
or
out
or
out
repnz
mov
dec
mov
pop
and
and
cld
push
ja
outs
cmp
ja
jmp
sbb
dec
fimul
and
repnz
repz
mov
sahf
or
mov
hlt
cmp
jge
add
mov
es
jne
jns
sub
xor
ja
retf
pop
outs
mov
nop
adc
dec
shr
mov
stos
pop
mov
ja
mov
in
xor
(bad)
xor
cmc
mov
cmp
movs
scas
test
(bad)
mov
sbb
ins
jne
out
lea
leave
test
add
jmp
jae
or
sar
sub
(bad)
xchg
loop
pop
test
imul
pop
neg
mov
adc
push
adc
xlat
add
xor
cmc
and
pop
inc
loopne
mov
adc
xchg
popa
js
sbb
gs
pop
add
mov
and
jge
sub
(bad)
ins
push
ins
xor
mov
push
jle
repnz
daa
gs
xor
mov
cmp
mov
dec
push
enter
inc
icebp
mov
cmp
sub
cli
mov
cwde
add
add
shl
cmp
pop
pop
std
cmp
scas
leave
fstp
scas
fcom
imul
ja
ja
icebp
sub
and
jns
rol
xchg
inc
push
stos
mov
mov
push
cli
fcomp
xor
sub
enter
hlt
mov
cmc
fsub
add
dec
jo
mov
jne
test
xchg
rol
(bad)
(bad)
in
add
inc
sti
mov
fcom
and
jp
mov
pop
xchg
stc
ins
sahf
mov
and
cmps
xchg
sti
jle
stc
pop
dec
xor
mov
ret
mov
int3
ret
mov
paddsw
cwde
pop
test
(bad)
cmp
ss
add
dec
mov
push
jbe
cwd
(bad)
int
cmp
xor
sub
popf
sbb
iret
cmp
ins
icebp
nop
std
inc
in
pushf
icebp
adc
and
push
arpl
push
pop
into
jne
mov
sar
(bad)
push
ror
add
cmp
cmp
cdq
mov
xchg
sbb
xchg
and
in
cmp
jo
sub
outs
in
pop
loopne
sar
jno
mov
and
jl
retf
arpl
push
aaa
and
mov
mov
sub
sub
ins
sbb
sub
(bad)
xor
mov
mov
jmp
loopne
test
and
(bad)
(bad)
pop
mov
push
or
jne
lods
mov
dec
outs
addr16
xchg
xchg
mov
mov
fisttp
push
icebp
movs
push
cmp
mov
dec
(bad)
sub
push
js
mov
adc
movs
test
adc
dec
push
mov
and
fs
cmp
jl
retf
lock
jne
loop
lock
in
pushf
rcr
and
cdq
lods
xor
mov
mov
add
in
and
lahf
push
ins
lds
pop
retf
sbb
add
mov
push
sahf
scas
enter
aad
and
pop
lahf
add
or
(bad)
jmp
and
jb
xchg
sbb
shr
add
pop
std
stos
or
mov
mov
mov
xchg
inc
lock
ret
les
pushf
imul
int
nop
outs
xchg
cmp
mov
mov
ja
pusha
fmul
and
mov
cmp
shr
mov
sub
inc
sbb
jmp
jg
push
or
xor
xlat
xor
imul
movs
mov
pop
pop
fldenv
xchg
movs
xchg
cld
sub
ror
rcr
and
and
nop
shr
xchg
and
mov
mov
lods
in
adc
aam
scas
dec
nop
dec
sub
push
jl
mov
sbb
dec
inc
(bad)
ins
jb
push
mov
dec
shl
dec
sbb
hlt
aas
ret
xor
fmul
dec
xor
push
and
dec
ret
or
int3
stos
mov
aaa
lods
call
pop
ficomp
push
aad
jmp
add
push
add
fucomi
inc
out
and
jmp
movs
call
rol
ds
adc
push
mov
xor
in
std
rcr
stc
jmp
jp
xchg
cli
paddb
adc
mov
pusha
aad
xchg
pop
or
cmp
mov
(bad)
(bad)
shr
jg
xchg
or
mov
(bad)
les
add
lea
push
jbe
mov
jle
sbb
ja
jae
and
lea
or
sahf
adc
ror
aas
mov
inc
test
add
fdivr
test
adc
jnp
jmp
imul
mov
xchg
jle
sub
and
xchg
sbb
cmp
sub
pop
dec
xchg
sahf
adc
jbe
mov
jge
jg
jl
mov
mov
pop
repnz
data16
mov
sbb
mov
call
cmp
cmp
push
cmp
pop
mov
call
std
or
jno
sar
popa
imul
outs
push
pusha
cmp
mov
leave
xchg
or
cld
cs
cmp
(bad)
inc
comiss
hlt
cmp
push
jo
movs
or
in
pop
iret
aaa
sbb
inc
repnz
inc
or
adc
dec
std
outs
xlat
nop
call
mov
push
aas
mov
xchg
in
hlt
push
addr16
ja
or
sbb
sbb
mov
pop
daa
or
jmp
jne
push
das
inc
xor
int
movs
push
mov
pop
and
cmp
das
stos
loope
gs
test
pop
pop
ins
cmp
in
sbb
call
sub
imul
mov
xor
aaa
das
or
mov
(bad)
sbb
jl
pop
movs
sbb
shl
(bad)
jo
push
mov
mov
mov
mov
mov
pop
repz
rcl
pop
loopne
mov
lock
enter
retf
fldenv
xor
data16
inc
cli
ficom
ja
adc
push
shr
test
mov
and
jp
(bad)
fdivr
es
cmp
call
out
fiadd
jo
out
pop
and
sbb
aaa
sbb
push
pop
loopne
bound
retf
(bad)
in
cli
sar
pop
into
das
jbe
cs
inc
popa
out
popf
stc
sbb
mov
push
and
jns
popf
jle
dec
sbb
xchg
leave
fimul
sub
pusha
mov
retf
xor
es
or
adc
adc
xchg
aam
mov
pop
fmulp
xor
add
sub
and
test
mov
imul
ss
aas
or
xchg
loope
scas
int3
mov
test
iret
lahf
fist
mov
add
mov
sub
ins
leave
mov
(bad)
clc
std
sar
and
push
loope
mov
lock
ins
push
das
inc
jbe
std
ins
pop
jb
adc
mov
mov
adc
push
(bad)
push
mov
xor
pop
cmp
ja
or
xor
xchg
jo
xor
cmp
add
sar
test
stos
xor
pusha
push
cmp
jecxz
add
pop
sti
sbb
(bad)
adc
arpl
hlt
into
loopne
xor
retf
daa
and
push
or
imul
fist
fcom
push
jge
retf
iret
adc
and
jo
jns
fdivp
pop
bound
jno
test
enter
inc
dec
sub
clc
xor
jg
sub
cdq
ficomp
test
cmp
outs
popa
push
ins
xchg
scas
sbb
aas
or
push
xchg
mov
into
or
pop
jl
xchg
xchg
push
test
xlat
mov
mov
scas
lds
fist
test
adc
cmc
push
retf
mov
test
jae
mov
inc
push
jne
jno
cmp
ret
dec
fucomi
cmc
xchg
adc
mov
aas
dec
pop
mov
mov
push
sub
les
inc
leave
inc
std
fs
jns
jbe
push
lods
jmp
mov
add
adc
cmp
mov
fs
test
cld
pusha
jg
add
je
and
inc
mov
cmp
fmul
cmps
in
(bad)
pop
ss
loopne
adc
push
mov
add
scas
pop
mov
push
daa
inc
jmp
not
push
repz
jle
lods
mov
mov
out
mov
in
pop
adc
adc
mov
add
inc
scas
jb
loope
les
arpl
repnz
and
dec
cld
pop
xchg
fadd
jecxz
out
add
out
and
inc
add
fidiv
cli
ret
in
inc
and
outs
and
xchg
cwde
dec
mov
jne
xor
mov
out
icebp
leave
inc
xor
enter
popf
dec
adc
pop
xlat
cs
cmps
or
mov
adc
mov
call
mov
(bad)
mov
scas
ds
stc
inc
dec
pop
and
cmps
adc
aas
test
ja
fdiv
call
(bad)
fldenv
ins
xlat
mov
fwait
ja
test
stc
mov
mov
loopne
lock
ins
and
inc
pop
and
jne
loop
ret
xor
push
push
cmp
xchg
xor
xchg
add
lea
mov
loope
mov
dec
fadd
in
xlat
cmp
rol
xchg
mov
mov
or
pop
cmp
nop
push
and
xchg
repnz
or
inc
adc
retf
retf
push
ins
mov
add
pushf
jle
jns
sub
jmp
add
jp
jno
xor
mov
out
add
push
mov
stos
xlat
sub
xchg
add
mov
mov
or
inc
fstp
push
push
mov
lahf
sub
(bad)
cmp
mov
jmp
sub
out
sbb
into
adc
xor
das
lea
cdq
shl
xchg
mov
enter
cmp
retf
xchg
in
dec
int
fdiv
jo
cmp
test
add
pop
(bad)
fstp
loopne
ins
pushf
fisub
mov
jge
pop
dec
outs
leave
(bad)
sub
push
sub
mov
xor
mov
or
out
call
cli
pusha
ja
mov
jnp
movs
movs
pop
jmp
cmp
jb
int3
in
sbb
test
cmps
iret
pop
mov
sub
or
xchg
xchg
test
push
xchg
fdivr
jmp
dec
bound
mov
call
test
or
popf
outs
stc
rcl
outs
xchg
sbb
sbb
xchg
das
fstp
inc
or
sub
adc
pop
jecxz
rol
test
aam
cld
adc
or
fnop
cmp
xchg
cmp
fst
clc
mov
xor
sub
ins
mov
push
and
pop
ins
mov
stos
pop
mov
fild
xchg
xchg
fscale
pop
adc
js
cdq
ja
mov
call
(bad)
dec
add
mov
mov
rcr
dec
adc
and
(bad)
mov
push
mov
sti
sbb
jl
retf
loopne
stos
out
inc
iret
std
xchg
jmp
gs
push
mov
clc
movs
adc
and
ins
js
adc
inc
dec
push
push
xchg
push
dec
in
mov
inc
sub
gs
out
jmp
cld
ss
lock
push
mov
enter
xlat
jbe
into
jp
cli
hlt
jne
pop
dec
mov
jecxz
sar
jge
add
mov
xchg
adc
lock
es
loopne
push
mov
and
xor
inc
sbb
out
loop
mov
ror
dec
fst
leave
add
mov
into
daa
mov
sbb
pop
xor
ret
mov
xchg
dec
arpl
pop
fbld
adc
pop
pop
jmp
dec
mov
test
xor
outs
or
sbb
jmp
sar
fdivr
push
aas
xor
jmp
pop
ja
adc
loope
jns
stos
enter
pop
lahf
mov
mov
pop
fild
dec
jnp
ror
mov
pop
mov
movs
pop
push
scas
and
mov
push
dec
data16
xor
lock
mov
cmp
sub
in
add
mov
ret
jbe
ins
cmp
xchg
pusha
jnp
xlat
or
test
adc
and
test
mov
xor
test
jnp
aaa
iret
inc
ror
xlat
push
jl
xlat
mov
sahf
push
pop
test
lods
(bad)
fcmove
push
xlat
push
jg
movs
fidivr
push
(bad)
enter
sbb
dec
mov
push
push
nop
mov
push
pop
mov
iret
dec
(bad)
push
push
or
jmp
mov
dec
add
ret
nop
call
fmul
sub
cmc
cmp
dec
mov
mov
mov
movs
inc
test
pop
or
inc
(bad)
dec
leave
mov
mov
aaa
pop
call
dec
jbe
aaa
pop
stos
jmp
pop
mov
repnz
sub
pop
jge
mov
clc
sti
mov
mov
xchg
inc
adc
push
ja
push
sahf
xchg
adc
push
xor
scas
push
dec
fimul
mov
xchg
jmp
lea
pop
ror
icebp
dec
enter
jb
push
lock
scas
add
mov
pop
mov
pusha
dec
js
daa
cmp
fnsave
aaa
adc
jo
xchg
cdq
and
jecxz
or
fwait
or
pop
xor
pop
push
popa
adc
aas
pusha
mov
jnp
mov
outs
push
daa
loop
into
aad
sbb
shr
adc
cmp
dec
int
(bad)
mov
mov
repz
jmp
and
loope
inc
in
jecxz
repz
pop
mov
sbb
push
pop
xchg
dec
les
arpl
adc
jbe
lock
jno
pop
fcom
pop
fstp
aad
push
and
push
xchg
cmp
repz
dec
and
cmps
data16
mov
pop
stc
shl
dec
gs
add
aas
mov
arpl
repz
push
aam
pop
and
shr
or
ret
adc
adc
add
inc
enter
add
popa
fs
mov
push
mov
in
and
and
(bad)
push
push
and
in
push
imul
jmp
pop
dec
sbb
stos
xchg
inc
aad
jmp
pop
ror
aad
mov
leave
push
xchg
shl
mov
push
dec
pop
sub
mov
(bad)
sbb
mov
shl
gs
xor
push
and
xor
bound
shl
ja
stc
sbb
data16
mov
jmp
dec
dec
dec
(bad)
and
jle
movs
mov
(bad)
push
mov
gs
push
xlat
xor
shl
or
lock
int3
mov
mov
jmp
arpl
jecxz
adc
mov
movs
dec
sbb
call
jae
sub
push
mov
fsubr
jns
adc
mov
icebp
pop
dec
or
retf
mov
cmp
or
ret
sahf
rcl
mov
shl
popf
fidivr
repz
in
cs
mov
icebp
out
dec
shl
call
mov
and
test
mov
js
jmp
dec
loop
pop
inc
sub
jp
inc
jb
(bad)
mul
in
mov
xchg
inc
xor
and
mov
sbb
or
je
mov
sub
xor
lahf
jns
xchg
jp
push
or
push
aam
mov
test
dec
outs
in
push
fisub
sub
xchg
(bad)
aaa
enter
bnd
shr
mov
xor
sti
cmp
outs
ds
xor
retf
test
and
fmul
aaa
call
or
inc
fdiv
mov
mov
and
fs
cmp
leave
pop
and
dec
inc
or
mov
dec
cs
sub
(bad)
jb
or
mov
push
stc
jle
scas
fs
movq
in
ins
jecxz
imul
jae
push
sbb
fstp
xchg
into
xor
sub
out
pop
sub
push
cmc
mov
jmp
(bad)
inc
into
lods
add
sbb
mov
(bad)
mov
fbld
pop
mov
mov
test
mov
push
jae
into
xlat
mov
jbe
(bad)
xchg
sub
pusha
jae
imul
data16
addr16
nop
pop
mov
ins
adc
sbb
and
mov
adc
in
cmp
mov
jmp
neg
pop
leave
mov
jns
test
shr
out
les
xchg
int
sub
lds
fstp
dec
neg
inc
and
movs
outs
in
(bad)
jl
xlat
cmp
(bad)
sub
sbb
pop
arpl
or
pop
in
pop
pop
xchg
mov
inc
int3
adc
mov
and
fld1
xchg
xor
jo
sub
(bad)
int
outs
push
call
push
cld
mov
fidiv
outs
lock
fwait
lea
aaa
mov
pop
lahf
and
punpcklwd
mov
dec
test
movs
fnsave
push
mov
jmp
jbe
jmp
nop
and
xor
jno
pop
pop
xchg
add
jmp
jmp
inc
xchg
lea
mov
loopne
push
cmp
mov
call
mov
inc
lds
in
lods
and
cmp
cli
add
aaa
cmps
pop
pop
push
and
push
inc
add
fcom
add
(bad)
out
stos
sub
(bad)
jge
aas
mov
ret
adc
jle
stos
mov
mov
addr16
fdivr
jp
data16
cwde
pop
fidivr
adc
push
addr16
cmp
cmc
cmc
jb
cmp
lods
sub
mov
adc
or
pop
cwde
sbb
push
sub
out
dec
xchg
out
jecxz
iret
pop
cdq
lock
in
sbb
dec
sub
stos
lods
(bad)
inc
push
(bad)
(bad)
pop
dec
out
stc
dec
lock
sub
and
xchg
ficom
xchg
and
test
call
mov
aam
adc
idiv
mov
jae
and
outs
sub
ins
stos
mov
arpl
mov
or
mov
es
das
add
push
push
jmp
sbb
push
xchg
outs
sbb
lock
or
shl
cli
push
lods
icebp
and
pop
(bad)
test
push
retf
cmp
ds
outs
or
(bad)
pusha
dec
mov
sub
mov
rcl
test
mov
pusha
scas
scas
sar
and
fistp
cli
in
sahf
outs
mov
jae
pop
call
repnz
mov
add
jnp
(bad)
fsub
cmp
cld
das
jo
mov
dec
xchg
retf
inc
fadd
or
inc
int
gs
push
jo
dec
dec
movs
aas
mov
sti
xor
clc
mov
jle
jb
cdq
out
mov
fcmovu
repnz
mov
shr
and
mov
mov
enter
sub
loop
sahf
cs
test
ja
xchg
lds
popf
rol
cmp
out
je
sub
loope
mov
stos
cmps
mov
pop
popf
pop
(bad)
outs
mov
jmp
sub
gs
add
shl
cdq
fcomp
js
xchg
in
cmp
daa
bound
cmp
xlat
cmp
adc
cwde
xchg
jnp
pop
rcr
add
sbb
int3
adc
repz
inc
repnz
jmp
not
push
cld
out
xor
sysexit
jmp
pop
mov
adc
cwde
hlt
pop
ins
xchg
movs
sbb
out
cmp
cld
inc
pop
cmp
div
dec
xchg
call
or
inc
lds
lods
xchg
imul
stc
push
icebp
ret
push
hlt
pop
dec
mov
cmp
shl
adc
adc
lea
jp
imul
add
bound
jno
jne
jp
inc
dec
adc
retf
stos
cmp
ror
aam
stos
push
jbe
or
je
and
jo
dec
or
and
sub
mov
lahf
xlat
(bad)
add
xor
inc
fild
dec
push
cmp
or
cwde
aam
sahf
jl
enter
add
push
test
add
test
retf
cmp
test
mov
dec
mov
arpl
cmp
je
jbe
push
clc
sar
or
add
pop
fisub
xchg
xor
pop
das
in
and
inc
dec
and
sti
(bad)
ret
retf
xchg
xor
xor
enter
push
adc
pop
push
push
dec
sub
test
or
mov
adc
fistp
retf
pop
ror
dec
push
mov
fild
inc
push
(bad)
sub
dec
jae
push
adc
cmp
xchg
mov
lahf
lods
sub
in
nop
mov
movsx
mov
aad
mov
push
sahf
in
lds
push
sub
xor
fld
leave
ins
lahf
pop
or
out
out
mov
call
fnstcw
clc
or
sahf
or
das
fidiv
rcr
sbb
add
bound
fs
fiadd
fdiv
out
xchg
jno
jo
les
xchg
and
(bad)
dec
dec
addr16
movs
out
push
fisttp
jmp
jae
pop
add
push
mov
inc
mov
sbb
fidiv
call
adc
push
bound
jo
inc
inc
mov
inc
xor
icebp
mov
dec
mov
pop
mov
push
popa
dec
xchg
xchg
mov
leave
std
out
sbb
popa
cmc
lds
les
and
sub
out
loope
fmul
in
sub
cwde
pop
jecxz
adc
xor
or
pop
cs
inc
adc
das
out
cmc
and
xchg
and
and
add
rcr
mov
and
jmp
stc
fld
cmp
fld
sahf
push
cli
inc
pop
jge
inc
pop
dec
xchg
cmps
push
sar
adc
mov
les
push
and
les
sbb
pop
adc
adc
mov
xor
pop
je
xor
neg
loope
sub
cmp
xor
out
mov
movs
pop
fs
jb
lods
push
mov
mov
jle
shl
mov
mov
fdiv
adc
leave
and
in
jne
xchg
test
dec
cmp
ins
(bad)
nop
push
and
(bad)
fucomip
jno
ret
mov
stos
jne
sbb
sbb
adc
retf
leave
not
mov
jg
les
jle
imul
test
xchg
lds
dec
fwait
call
lahf
sbb
mov
out
sbb
adc
sub
inc
adc
dec
mov
retf
fdiv
adc
mov
je
jo
add
add
in
rcl
pop
lds
adc
out
sub
cmp
bound
test
and
loope
hlt
cwde
sub
mov
inc
test
mov
jmp
ds
call
shl
test
xchg
adc
or
and
xor
std
pop
pop
cmp
jo
jl
or
inc
(bad)
popa
lods
sbb
aad
popa
pop
pop
mov
mov
push
jb
push
repz
adc
xor
out
stos
je
cmps
stos
xchg
sbb
test
int
jmp
sar
push
xchg
xor
cmp
(bad)
push
fwait
aas
test
test
add
add
stos
push
mov
test
ja
pop
repnz
add
cmovl
dec
sbb
fdivr
fild
cmp
gs
nop
cmc
loope
jmp
mov
inc
xchg
dec
jne
mov
sub
jo
in
(bad)
fwait
movs
push
(bad)
jge
push
mov
nop
xor
sti
push
inc
jge
(bad)
cmps
mov
fwait
ret
mov
mov
and
in
outs
fsubr
dec
add
sub
in
lahf
adc
or
cmp
movs
mov
icebp
mov
ja
imul
enter
jecxz
(bad)
data16
dec
xchg
push
iret
ins
aad
mov
adc
and
lods
sbb
mov
hlt
cmps
pop
je
cmp
sub
sbb
dec
and
adc
mov
loope
cmp
jo
push
ja
scas
test
xlat
int
ret
cs
pop
ins
fwait
(bad)
int3
clc
aas
push
mov
pop
dec
popa
inc
mov
xchg
ret
call
mov
test
nop
mov
fbstp
aaa
cmp
dec
push
into
mov
and
xchg
cmp
shr
inc
jbe
sub
cmp
cmp
adc
hlt
nop
outs
add
out
enter
test
sbb
mov
sti
inc
inc
ja
arpl
mov
cmp
stos
fxch
loope
dec
sub
jecxz
inc
stos
das
mov
jmp
mov
js
sub
xchg
inc
sti
aas
in
dec
cld
dec
inc
jl
mov
neg
sbb
mov
es
in
outs
sub
mov
bnd
xchg
hlt
cld
or
retf
jge
cli
cmp
dec
or
popf
call
dec
cwde
or
push
jecxz
(bad)
mov
mov
int3
aaa
popa
outs
retf
dec
jbe
dec
jno
and
rcr
fimul
jl
add
hlt
adc
enter
aam
sub
retf
sti
push
loopne
cmp
ss
ds
mov
in
jo
pop
rol
push
push
stc
rcr
xchg
js
stos
imul
add
adc
stos
mov
mov
pop
sub
into
sbb
enter
lahf
std
call
cmp
dec
adc
lea
pop
xor
cmps
leave
sbb
call
jmp
and
ja
xor
fidivr
sub
pop
(bad)
cwde
fadd
add
and
bnd
rcl
test
scas
cmp
rcl
jmp
inc
mov
retf
pop
pop
cs
xor
mul
sub
mov
dec
mov
stc
cmp
mov
dec
out
call
nop
add
push
jmp
inc
mov
sub
pop
shl
iret
inc
scas
dec
in
inc
loope
jl
jnp
rcl
adc
daa
nop
mov
sbb
and
jle
xchg
call
fdivp
xchg
nop
cmc
fscale
jne
fst
xchg
jl
movs
lahf
add
add
inc
push
cmp
push
xor
push
xlat
mov
add
fcom
call
lahf
push
scas
daa
inc
sub
adc
in
and
into
pop
or
push
sar
jmp
jb
movs
movs
jb
xor
mov
xlat
push
xchg
sbb
mov
sbb
jp
jmp
mov
aad
in
stos
mov
sbb
outs
popf
lock
es
cdq
jae
gs
in
xchg
es
lahf
in
popa
mov
mov
xchg
xchg
addr16
xor
jo
jae
int
and
(bad)
ds
push
mov
dec
(bad)
inc
jno
dec
xor
(bad)
and
into
rcr
and
enter
mov
out
shr
movs
popa
jae
and
in
jo
(bad)
out
adc
xor
mov
push
movs
stc
test
outs
adc
cmp
cdq
retf
gs
inc
rcr
mov
cld
loope
cld
xor
xlat
pop
mov
pushf
push
fwait
addr16
xor
inc
mov
mov
sbb
push
dec
cmp
test
(bad)
arpl
cli
dec
lods
test
sbb
fidivr
mov
mov
(bad)
xchg
and
sbb
inc
cmp
test
les
ret
xchg
pop
stc
gs
sahf
dec
aaa
in
xchg
cmp
pop
xchg
cmp
pop
inc
das
lods
test
cmp
add
in
mov
sar
mov
or
adc
pop
repnz
mov
pop
loopne
xchg
outs
jg
inc
call
jns
mov
pop
add
and
mov
arpl
into
js
xor
(bad)
pop
or
dec
push
arpl
adc
push
fs
bnd
gs
dec
pop
sbb
or
cmps
stc
imul
scas
pop
pop
mov
adc
test
add
cmp
(bad)
ins
xchg
add
jg
mov
push
jge
xchg
adc
popa
mov
in
jl
loop
scas
cmps
int3
imul
jl
cmp
xchg
fbstp
lahf
dec
push
cmps
cli
xor
mov
or
in
sbb
shr
or
mov
inc
cdq
add
fwait
les
mov
in
adc
pop
sti
loop
pop
test
sub
cmp
rol
icebp
jg
bound
mov
add
push
pop
xchg
shl
aas
push
imul
lea
loopne
movs
test
inc
(bad)
xor
sbb
jns
cli
into
cmp
and
xchg
fimul
jbe
pop
cmp
into
add
repnz
sbb
mov
(bad)
jg
dec
sub
test
jle
pop
nop
push
xchg
cld
(bad)
mov
push
dec
popa
xchg
gs
adc
cwde
aad
mov
sub
adc
bound
push
inc
ja
xor
cmp
out
aas
(bad)
hlt
aas
idiv
inc
mov
jg
dec
adc
scas
cmp
popa
xor
test
adc
pop
push
jmp
xchg
inc
mov
jmp
scas
call
inc
cdq
std
mov
pushf
push
ins
jmp
jb
jnp
aaa
push
sbb
sbb
and
jge
jo
mov
call
cmp
(bad)
fmul
aas
rcr
dec
and
outs
push
inc
call
inc
mov
xor
loope
sbb
xchg
cs
and
call
ficomp
mov
inc
jne
add
cwde
adc
inc
in
xlat
jecxz
test
imul
jp
xor
and
push
ja
inc
repnz
pop
jae
push
daa
mov
std
loopne
ss
jmp
fild
pop
ret
pop
(bad)
movs
and
fadd
mov
out
out
dec
push
loope
or
jno
add
sub
sbb
or
aas
gs
add
jns
pop
mov
xor
imul
and
popa
out
inc
les
je
out
push
mov
mov
pop
div
pop
xor
mov
fld
out
jecxz
pop
les
mov
jno
pop
outs
pop
xchg
mov
jnp
shr
mov
(bad)
push
sahf
mov
lods
call
mov
fst
int
xchg
mov
xor
rcr
mov
jl
shr
aam
mov
loope
add
dec
mov
outs
push
jno
icebp
sbb
and
mov
sbb
mov
xchg
jno
retf
jle
out
push
in
add
and
jmp
jg
daa
dec
mov
stc
repz
cmps
(bad)
in
adc
fnstcw
push
test
jmp
jbe
inc
loope
cld
das
scas
adc
dec
gs
xor
loop
ret
fistp
mul
(bad)
jns
popa
ror
adc
add
pop
dec
in
push
clc
or
dec
mov
mov
push
xchg
xor
inc
push
xchg
lods
cld
ret
shr
pop
movs
in
adc
pop
ds
shl
mov
into
daa
jbe
repz
push
or
and
ret
std
add
sub
pop
sub
test
movs
mov
mov
or
dec
cli
ret
(bad)
or
addr16
or
ins
xor
sbb
inc
mov
jmp
pop
stos
pop
inc
icebp
pop
mov
sub
add
lods
xor
mov
fisubr
adc
cmp
iret
sbb
ficom
or
xor
les
mov
xlat
mov
fidivr
sub
movs
in
push
cmp
lods
fwait
lock
mov
adc
(bad)
sbb
and
push
je
mov
lds
pop
fsubrp
cmp
out
or
mov
jae
lods
je
sub
pop
(bad)
popa
cli
sahf
pop
int3
mov
add
cmps
int
not
xor
enter
sbb
sub
push
dec
fsub
lds
stc
out
icebp
jmp
in
mov
nop
add
push
test
imul
mov
popa
cs
mov
dec
mov
movs
or
call
push
lock
and
sbb
or
jae
sub
adc
sbb
ficom
cmp
inc
mov
mov
rol
retf
mov
push
cwde
cmp
(bad)
jg
push
add
(bad)
cmp
add
and
stos
adc
adc
and
js
dec
stos
int
fld
in
dec
neg
mov
loopne
dec
mov
js
in
cli
lods
sbb
fs
xchg
faddp
ins
jge
dec
outs
imul
leave
push
call
ins
cmp
imul
out
inc
push
movs
daa
ds
xlat
dec
sbb
sbb
or
push
(bad)
ret
add
and
jmp
cmps
sbb
in
pop
call
stos
mov
(bad)
mov
cdq
movs
hlt
cdq
push
add
test
pusha
push
dec
stc
sub
push
lds
or
mov
lahf
inc
(bad)
into
push
adc
(bad)
cmp
mov
push
fild
xor
fdiv
push
frstor
mul
xor
stc
xor
xor
push
push
or
pop
xchg
das
ret
lods
jnp
es
inc
jl
ins
into
sub
sbb
mov
push
stc
push
xchg
push
cmp
sub
cmp
ins
push
cdq
mov
inc
push
icebp
sbb
in
cmps
out
xchg
xor
cmp
jmp
cmp
push
leave
cmps
jge
dec
pop
xchg
test
xor
inc
or
xchg
leave
and
aam
inc
bound
cmp
jo
jg
ins
sti
imul
dec
das
dec
call
fisttp
push
pop
mov
fucomi
xchg
add
mov
cli
and
jo
xor
mov
sbb
cmps
jnp
sub
(bad)
jecxz
mov
fst
mov
xor
dec
adc
adc
mov
jbe
lds
pusha
pop
sbb
xor
mov
psrad
out
lds
js
xchg
sub
jle
arpl
sar
or
popf
mov
mov
sbb
mov
cmp
(bad)
imul
mov
ret
pop
dec
jae
movs
mov
mov
sti
mov
push
mov
jae
leave
pop
inc
mov
mov
pusha
ss
xor
(bad)
div
sar
or
sbb
out
out
or
lock
or
adc
sti
xor
pop
mov
push
ja
fdivr
mov
inc
xor
mov
int3
fcmovbe
push
js
sti
popa
adc
in
cmp
outs
cs
pop
loopne
or
aad
sub
cmp
stc
dec
adc
jno
jmp
push
fst
inc
mov
add
mov
ja
xor
mov
dec
mov
imul
shr
fld
ficomp
ins
jae
into
stos
adc
(bad)
outs
push
(bad)
pop
pop
push
fnstcw
jp
lahf
mov
stos
daa
fldenv
in
sub
mov
jno
lods
lea
sbb
loope
pop
int3
rcr
imul
jne
xchg
jb
stos
int
or
sbb
outs
or
clc
scas
jmp
mov
sub
xchg
add
gs
add
scas
lods
lea
jns
std
in
adc
adc
and
mov
jl
idiv
mov
jb
mov
sub
in
cmc
fdivrp
ret
(bad)
popa
cdq
pop
leave
adc
sub
ret
inc
scas
push
call
pop
jl
xchg
call
retf
sbb
xlat
dec
lock
enter
xchg
jbe
sahf
or
jo
jmp
test
imul
sub
lahf
mov
jbe
cmps
pop
push
mov
in
addr16
xchg
dec
push
push
cs
test
scas
lods
jl
jg
dec
test
dec
dec
xor
into
mov
adc
les
lahf
mov
(bad)
pop
mov
inc
mov
cmp
shl
sbb
scas
mov
imul
sbb
and
mov
xchg
mov
movs
and
daa
jmp
dec
popa
test
dec
frstor
call
push
or
dec
popa
xor
sbb
nop
mov
pop
js
cmps
jno
xchg
(bad)
or
mov
out
sub
retf
imul
sbb
adc
xor
cmp
xor
add
aam
dec
dec
fs
shr
pop
cmp
fisttp
pop
jmp
nop
ror
repz
cli
out
xor
add
icebp
xchg
jmp
sub
and
cmp
popf
push
xchg
aaa
jbe
inc
add
pop
inc
stos
movs
in
inc
cmp
sbb
ds
aad
dec
sbb
cs
test
cmc
mov
or
test
jg
cmp
cld
nop
pusha
pop
in
ja
stc
es
dec
inc
and
mov
xor
cmp
lock
retf
ret
push
popf
fwait
retf
fnsave
imul
push
in
push
cs
or
or
cdq
jle
hlt
out
int
outs
xchg
jmp
cmp
enter
rcl
inc
lock
jl
cmc
imul
je
mov
pop
call
sti
in
fs
(bad)
mov
stos
mov
adc
out
fimul
call
xchg
arpl
mov
mov
and
cmp
dec
(bad)
in
push
out
fidiv
arpl
inc
push
xor
pusha
mov
sub
ja
(bad)
loop
rcr
ret
pop
add
addr16
or
and
jmp
scas
adc
imul
(bad)
inc
add
pop
pushf
rol
sbb
int3
xchg
pop
mov
rcr
retf
mov
jmp
inc
not
ret
mov
dec
jle
push
ror
imul
mov
leave
in
jae
mov
pop
xor
push
fwait
mov
mov
imul
xchg
dec
pusha
fistp
add
jge
jle
out
adc
push
mov
cmp
xor
xor
xor
jo
inc
enter
jmp
dec
not
and
cli
sub
cmp
das
ret
mov
test
push
dec
pop
inc
in
mov
in
popa
sub
xchg
(bad)
mov
out
mov
lods
ss
lock
adc
jmp
cli
bswap
xor
shl
sti
je
mov
mov
cmp
mov
pop
scas
fstp
sub
add
cdq
fist
(bad)
push
test
xchg
ror
sbb
test
dec
lods
pushf
or
ret
fprem1
jle
pop
daa
les
cs
cmp
cmp
cs
les
cmp
xchg
lods
xor
ds
call
jo
mov
retf
xchg
(bad)
jns
dec
adc
cmc
push
in
xor
and
xor
jle
or
push
clc
dec
cdq
jp
lock
(bad)
jmp
ret
int
dec
jle
add
adc
xor
retf
add
xor
xchg
cmp
adc
cmp
test
ret
enter
js
push
popf
lods
xchg
retf
out
xchg
adc
cmp
icebp
outs
cmp
scas
cs
das
push
sbb
push
cmp
lds
test
inc
dec
jmp
movs
retf
fwait
sub
add
addr16
sar
fistp
retf
aaa
pusha
xchg
adc
nop
inc
mov
rcr
inc
std
dec
dec
icebp
pop
dec
cmp
mov
inc
pusha
mov
icebp
jp
les
pop
mov
stos
in
leave
push
jbe
push
mov
mov
jl
push
sahf
movs
add
mov
loopne
dec
fwait
jmp
xchg
cld
cmp
pop
jmp
sar
dec
cmp
inc
mov
push
dec
push
pop
js
clc
cmp
int
imul
std
cld
cmp
mov
ror
push
fcomp
clc
mov
sahf
shr
loopne
adc
stc
es
mov
pop
pop
rcl
sahf
add
inc
add
sub
(bad)
enter
and
mov
xchg
pusha
cmc
fisttp
cmp
push
and
pop
cs
mov
xlat
jae
mov
ins
test
sub
lods
(bad)
enter
in
popw
ret
mov
jg
sbb
icebp
add
ret
test
mov
fnclex
sub
mov
cdq
(bad)
cs
out
mov
cs
pushf
push
sbb
movs
unpcklps
mov
clc
or
les
mov
inc
adc
jecxz
fisttp
xchg
add
daa
jp
lahf
lea
mov
push
inc
scas
and
imul
rol
xchg
ret
xlat
ss
cmp
adc
push
ret
pusha
lea
jae
call
inc
inc
inc
mov
cmp
cmp
rcr
and
gs
ins
inc
xchg
mov
sub
cmps
cmps
pop
std
sbb
data16
or
gs
push
ret
imul
adc
aad
ret
stc
nop
pop
xchg
fcmovnb
or
js
mov
push
lahf
and
cmc
mov
push
cmp
mov
nop
jmp
add
in
mov
lods
pop
mov
mov
xchg
pop
mov
loope
jge
xor
push
pop
add
or
js
shr
popf
sbb
fucomp
xor
add
les
dec
test
and
sbb
mov
adc
dec
dec
ret
xchg
mov
clc
pop
cmc
imul
retf
dec
inc
ds
es
stos
(bad)
xchg
xchg
or
cwde
push
outs
(bad)
fbstp
pop
jno
xchg
stc
or
adc
add
in
addr16
rcl
into
mov
jne
cmps
mov
dec
and
fist
and
movs
adc
sub
in
pusha
pop
ins
and
enter
fild
mov
add
cmp
pop
gs
fdivp
arpl
ror
dec
out
je
cmps
dec
adc
xchg
daa
std
fcomp
jle
mov
pop
jo
sbb
xor
scas
addr16
leave
leave
popf
cmps
scas
dec
fstp
push
jnp
push
dec
dec
int3
inc
dec
int3
mov
out
mov
fadd
sub
popa
xchg
adc
cmp
cmp
aam
fcmovne
dec
jo
dec
sub
aaa
fsubr
push
xchg
jecxz
movs
cmp
push
aaa
adc
sbb
cmps
jae
je
test
mov
mov
pop
fxch
fisubr
push
cmc
jmp
popf
cmc
cmp
lods
push
sti
int
dec
fnstsw
aam
int3
push
xor
jge
inc
xor
shl
xchg
jne
popa
out
mov
adc
ret
sub
retf
js
xchg
mov
xor
xchg
push
arpl
or
xor
(bad)
mov
jecxz
xchg
add
test
dec
jl
add
mov
and
mov
in
add
push
pop
inc
inc
dec
inc
jp
mov
dec
ds
gs
and
and
dec
retf
in
mov
out
or
sub
rcl
fs
fwait
mov
sub
lods
outs
sbb
mov
push
xchg
jmp
test
sbb
sub
dec
push
xchg
jnp
(bad)
cmp
mov
xchg
mov
pusha
pop
imul
xor
in
clc
stos
mov
lds
sub
add
out
sti
stos
das
sub
test
cmp
setbe
sbb
aaa
call
mov
push
cs
test
(bad)
push
add
mov
xchg
rcl
rol
adc
cli
popa
jle
push
xor
dec
dec
aas
sbb
sbb
mov
sbb
push
xchg
test
mov
inc
inc
daa
mov
(bad)
cdq
mov
retf
sti
mov
imul
pop
adc
xchg
xlat
and
into
adc
sub
mul
cli
sub
popa
test
nop
daa
mov
or
sbb
cmp
sub
dec
inc
sbb
pop
sti
ja
jne
retf
pop
ds
cli
inc
aad
fmul
inc
cmps
je
dec
imul
cwde
scas
cmp
(bad)
and
sub
or
bound
repz
ja
gs
test
fwait
xor
in
lods
(bad)
push
in
inc
add
adc
mov
ja
or
adc
test
hlt
shr
popa
vpmacsdql
aas
inc
cmp
mov
sub
mov
push
sbb
jns
add
mov
shr
jl
jg
dec
cs
std
rcr
sbb
mov
sbb
in
dec
push
cdq
sahf
aam
test
fiadd
mov
xchg
add
sub
cmp
es
jl
jmp
mov
and
ds
cmp
or
sbb
mov
fmul
jp
je
mov
mov
mov
out
es
fadd
lods
ret
les
sbb
xchg
cmc
adc
sub
daa
mov
jmp
xchg
pop
cdq
fidivr
adc
inc
jb
ror
cli
jl
int
xor
pop
mov
mov
cli
loop
cmp
jns
or
test
cwde
out
mov
mov
adc
in
pop
cld
adc
test
(bad)
sbb
adc
jge
cmp
inc
push
aas
jns
loope
in
retf
in
sub
scas
inc
sbb
jp
test
ja
repz
or
not
imul
popa
fs
push
mov
xor
push
jg
lds
xchg
add
xchg
push
sbb
gs
loop
fmul
retf
rol
icebp
in
(bad)
ins
sti
add
mov
xchg
and
shl
mov
cwde
xchg
jnp
sbb
sbb
out
xchg
mov
and
adc
fcmovne
or
ds
mov
mov
ins
out
or
push
cmp
push
and
repnz
shl
(bad)
mov
in
adc
ins
jle
cmps
add
push
lea
pop
test
jbe
(bad)
rol
xchg
cs
mov
dec
or
push
scas
sbb
sbb
mov
cli
div
shl
in
lea
mov
arpl
xlat
jge
inc
push
int3
stos
xor
lds
out
sub
mov
mov
sbb
outs
jbe
fisub
daa
dec
or
test
shr
int
xor
cmp
je
dec
jg
pop
sub
cmp
lahf
sub
or
add
push
cmp
je
stos
push
test
cdq
xchg
push
lds
cmp
aas
sbb
mov
sub
test
pushf
fisubr
gs
push
fldenv
test
push
lea
test
pusha
shl
je
push
or
lods
fdiv
je
(bad)
mov
scas
add
xchg
xchg
sub
xor
loope
inc
sbb
pop
pop
sub
les
repnz
or
call
sar
mov
adc
iret
jo
dec
dec
cmp
sbb
loope
pop
rcr
les
sub
in
movs
mov
inc
jnp
int
mov
call
sbb
hlt
je
fidivr
jnp
clc
jg
jecxz
push
sti
jmp
movs
bound
pushf
adc
cli
xchg
cmps
adc
adc
sub
je
imul
sbb
adc
adc
dec
in
cmp
and
lea
popf
mov
sub
leave
out
and
(bad)
dec
cmp
add
out
push
xchg
jmp
push
lea
in
mov
xchg
cmp
movs
add
jg
(bad)
jp
sbb
cld
and
and
rol
inc
cdq
int3
in
mov
out
or
xchg
add
fisttp
and
sub
cmp
add
shl
push
pop
xor
push
cmps
adc
and
js
enter
pop
jnp
push
icebp
shr
add
push
jo
mov
push
or
test
call
jnp
cmp
xchg
fcmovb
ja
cmp
stc
jge
jne
fistp
mov
cli
mov
test
fisub
std
jbe
retf
xor
pop
jp
fadd
mov
xchg
xor
mov
pushf
(bad)
jae
mov
retf
in
adc
jne
xlat
fdiv
aam
mov
retf
mov
imul
cmc
add
fild
mov
jmp
fcomi
and
in
in
sti
pop
mov
fldcw
jns
add
pop
sub
jmp
ret
or
push
mov
jno
pop
les
and
jbe
iret
ins
push
mov
movs
(bad)
jo
adc
sub
std
icebp
inc
clc
adc
inc
cwde
jno
div
cli
push
(bad)
int
push
pop
add
clc
repnz
nop
(bad)
fistp
xchg
icebp
(bad)
pop
and
or
stos
(bad)
sbb
(bad)
(bad)
jbe
int
pusha
add
aad
or
stos
cmp
adc
mov
bound
mov
lods
je
xchg
or
imul
sub
adc
cli
mov
stos
ror
dec
adc
fs
dec
mov
xor
ss
mov
cld
xchg
dec
jg
mov
(bad)
mov
cmp
lods
xor
add
mov
or
add
loope
push
test
add
and
stos
pop
xor
xor
je
dec
adc
stos
addr16
jo
lock
adc
imul
jne
mov
hlt
in
push
ja
out
(bad)
sub
leave
das
xchg
adc
test
leave
pop
imul
cmp
add
push
add
ja
mov
js
and
push
dec
shl
adc
test
jl
inc
in
aas
int
push
ror
adc
mov
xor
mov
xlat
sbb
sahf
push
pop
add
xchg
cli
sbb
jecxz
jl
repnz
fwait
clc
cmp
(bad)
outs
gs
push
lods
in
test
scas
int
dec
cmps
mov
push
and
fmul
outs
loopne
icebp
fstp
pop
xchg
test
mov
jmp
sets
lahf
jb
and
adc
mov
fadd
int3
out
dec
push
fidiv
push
fcmovnb
ret
xor
adc
sbb
sub
in
pusha
sbb
lahf
sbb
cmps
or
xchg
dec
add
sub
or
in
jge
sub
fbstp
cmp
repnz
into
call
jnp
rcr
stos
mov
movs
or
xchg
dec
push
xchg
ret
out
pop
dec
cmps
std
test
and
lods
sbb
sti
sbb
xchg
sub
mov
cmc
mov
je
pop
add
sub
inc
fsubr
fistp
dec
sub
ror
xor
inc
add
cmp
cmps
popf
(bad)
mov
push
scas
stos
mov
xor
xchg
cmp
pop
sti
retf
sub
add
dec
fdiv
retf
into
and
addr16
ins
into
outs
xlat
sbb
dec
mov
jecxz
mov
or
call
mov
icebp
or
push
rcl
out
retf
nop
push
(bad)
cmp
les
imul
clc
pop
adc
out
test
xor
cmp
jb
aas
aas
mov
xor
add
daa
or
or
pop
cmc
lahf
mov
xchg
pushf
in
pop
fld
cmc
sbb
rol
cmp
adc
push
ret
cmps
loope
std
push
push
into
or
jb
mov
push
lds
pop
mov
ret
add
push
add
(bad)
jecxz
jnp
sbb
shr
cmps
movs
mov
pop
add
push
adc
adc
in
jecxz
retf
test
dec
adc
int
dec
shl
sbb
imul
out
pop
or
jno
loop
push
xchg
enter
imul
fadd
cmc
out
sbb
rcl
inc
inc
mov
scas
pop
xor
js
in
jmp
push
ss
jl
je
sub
inc
jne
pop
loope
jno
sub
jae
int3
fscale
mov
dec
js
stc
jo
loop
iret
mov
pop
sbb
mov
jp
lods
test
ss
pop
mov
ror
cmp
std
xchg
adc
mov
push
ins
inc
pusha
js
jbe
push
mov
and
mov
lahf
dec
loope
std
movs
and
xor
mov
fistp
out
pop
fisubr
stos
pop
inc
cvtdq2ps
adc
ins
test
pop
in
mov
and
movs
(bad)
mov
lods
add
mov
sbb
ss
jmp
rol
dec
push
mov
pop
shl
aaa
or
in
or
sbb
ins
outs
adc
aam
jge
pop
pop
push
and
test
loopne
xor
pop
mov
or
cmp
pop
lock
fs
hlt
jo
xchg
adc
dec
sub
cmc
(bad)
pop
mov
out
ss
bound
imul
jg
jp
popf
cmp
mov
xor
daa
mov
push
mov
ret
adc
xchg
jp
repz
inc
push
push
sub
repz
sub
jb
jo
xor
mov
test
and
cld
dec
dec
xchg
dec
dec
enter
mov
mov
push
rol
nop
xor
adc
lea
fist
mov
aas
xor
jl
mov
test
xor
ins
(bad)
stos
and
mov
(bad)
mov
pop
test
sahf
scas
aam
pop
mov
fsub
lahf
retf
out
adc
dec
imul
aam
mov
fsub
(bad)
dec
mov
nop
in
clc
ret
inc
mov
jecxz
mov
pusha
xlat
dec
and
int3
xlat
inc
inc
out
pusha
lock
sub
xchg
xor
cmp
shr
int
shl
jecxz
or
pop
stc
inc
push
push
test
les
and
add
out
enter
xor
jmp
add
xchg
inc
jae
imul
jg
fmul
ja
lahf
cmp
sub
inc
outs
test
lock
inc
cwde
retf
inc
pop
cmp
push
jl
and
sbb
lahf
bound
pop
push
pop
mov
add
addr16
inc
mov
clc
pop
or
cmp
(bad)
fst
mov
stc
xor
sub
jmp
pop
inc
mov
hlt
lods
ins
lahf
adc
imul
sbb
dec
xchg
mov
dec
in
retf
(bad)
in
fsub
push
mov
mov
leave
sub
jl
cdq
(bad)
mov
(bad)
aad
in
mov
inc
lods
sbb
fwait
sub
sbb
xchg
and
sub
jmp
popa
inc
xchg
adc
fadd
and
int3
or
iret
test
aad
xchg
jecxz
inc
push
ja
and
je
fwait
mov
push
lahf
rol
cdq
pop
xor
aas
cmp
push
jl
dec
dec
pop
sub
out
inc
retf
movs
mov
sbb
pop
push
imul
push
(bad)
and
neg
and
imul
popa
pop
pushf
leave
mov
addr16
and
push
mov
jg
test
rol
inc
aad
adc
push
xor
daa
sub
pop
dec
mov
adc
and
stos
aaa
(bad)
cmp
sahf
inc
jle
and
push
lock
loopne
mov
xor
stos
push
rol
and
jns
add
icebp
sub
pop
lods
pop
nop
sysexit
add
fild
mov
icebp
push
adc
cmp
xchg
or
pushf
xchg
dec
jmp
cmps
dec
fist
hlt
aam
inc
pusha
shl
sbb
fcom
outs
push
jno
push
fistp
jecxz
cmp
lods
addr16
mov
mov
pop
jge
das
popf
hlt
clc
push
cdq
cld
dec
pop
pusha
or
push
jbe
push
xor
in
and
lea
rcl
bound
or
aad
dec
ret
xchg
popf
mov
add
jmp
sub
jmp
std
adc
lds
imul
pop
and
mov
sub
add
or
xchg
(bad)
cdq
fwait
popf
sbb
xchg
nop
push
in
aaa
push
imul
sub
xor
jmp
in
lods
stos
outs
aas
jne
adc
inc
sahf
rcl
sub
scas
jle
xlat
and
dec
jge
jge
sbb
add
retf
imul
pop
iret
imul
rcr
mov
push
ret
cld
mov
repz
push
(bad)
aas
les
inc
stc
jnp
mov
scas
push
popf
movs
push
or
push
out
rol
movs
mov
dec
sbb
mov
jne
xchg
mov
sbb
push
nop
lods
loope
cli
outs
nop
mov
sbb
lock
or
jae
and
inc
mov
ror
xchg
mov
(bad)
pop
xchg
fwait
ror
add
dec
mov
and
aas
lods
mov
xor
xor
xor
mov
xor
nop
lahf
dec
or
mov
aaa
sub
pop
pushf
je
imul
sahf
ja
mov
xchg
xor
jnp
mov
xchg
pusha
mov
cmp
mov
lahf
test
out
xchg
(bad)
dec
sahf
cs
mov
lahf
stos
cmp
mov
test
mov
adc
retf
rcl
sbb
push
mov
mov
ret
bound
push
pop
outs
cmp
ss
clc
imul
mov
lods
dec
sbb
das
lods
adc
pop
shl
aas
sub
or
mov
fs
into
sti
push
add
dec
dec
rol
jl
mov
pop
add
jp
mov
sar
retf
jle
ja
lods
push
adc
outs
ret
mov
data16
retf
inc
mov
mov
scas
gs
imul
jmp
sub
cmc
sbb
fsubp
ins
(bad)
rol
xor
enter
mov
fcmovnu
and
or
adc
mov
push
pop
retf
cs
nop
xor
jecxz
sub
cmp
in
xchg
popf
push
es
cmp
fwait
dec
(bad)
aam
mov
mov
pop
jge
inc
stos
add
jns
ins
or
div
retf
shl
mov
gs
sbb
hlt
lods
pop
rol
test
ins
fwait
pop
and
xchg
(bad)
push
cmp
int3
jmp
mov
inc
jno
xchg
movs
cs
in
repnz
inc
cli
aas
je
and
xchg
ins
int3
cmp
je
je
shl
pop
cmp
dec
jge
push
push
retf
dec
test
adc
push
push
cmp
push
add
aaa
int3
repz
icebp
rcr
fbstp
pop
mov
cdq
mov
xchg
adc
addr16
fucom
enter
pop
movs
fadd
xor
pop
hlt
gs
loop
jge
mov
setg
std
stc
retf
push
lock
adc
hlt
(bad)
sahf
mov
call
fbstp
pop
cmp
add
(bad)
fld
cs
or
ss
iret
dec
stc
cmps
jb
popa
std
cmps
std
test
inc
push
jge
ins
lods
add
sbb
inc
mov
or
iret
jae
(bad)
add
call
inc
jle
repnz
cmps
pop
cwde
lods
mul
dec
xchg
push
xor
xchg
icebp
stos
popa
ja
sti
jl
test
shr
mov
inc
sahf
adc
inc
aaa
pop
ja
fs
mov
neg
ret
jmp
xchg
push
pop
test
movs
imul
(bad)
(bad)
mov
inc
fstp
or
dec
out
cmps
add
jg
pop
sbb
test
sub
(bad)
mov
jg
mov
std
inc
cmc
adc
push
pop
inc
jb
jecxz
xlat
pop
inc
sbb
add
mov
jp
dec
push
and
test
jg
fs
std
jmp
inc
cmc
dec
mov
jl
dec
inc
cmc
and
in
and
sbb
jge
jno
ror
jnp
in
mov
push
stc
pop
out
call
pop
movs
pop
pop
popa
jns
movs
retf
adc
add
pop
dec
retf
mov
ret
jmp
sub
stos
mov
or
dec
mov
pop
in
pop
lea
frstor
scas
jl
pop
jno
jmp
jno
out
int
dec
sbb
out
mov
cmc
fnstenv
dec
fcom
and
test
sbb
push
aad
pop
sbb
add
xor
iret
mov
cmp
ins
add
bound
dec
or
inc
push
cmp
fild
xor
xor
imul
in
(bad)
in
es
mov
lea
sub
fstp
fwait
cdq
xor
jae
lock
test
scas
jl
stos
pop
pop
push
test
push
pop
add
nop
adc
nop
(bad)
fdiv
jecxz
sbb
xchg
jnp
add
xchg
cmps
jo
(bad)
sbb
adc
and
xchg
sbb
mov
pop
popf
dec
fnstcw
test
int
xor
cmc
push
retf
outs
addr16
pop
jns
int3
test
jmp
dec
and
pop
xchg
shl
dec
shr
pop
mov
rcr
pop
mov
ror
(bad)
addr16
dec
jnp
jb
repnz
pop
push
mov
(bad)
pop
fnsave
dec
fiadd
and
retf
imul
sahf
je
jl
outs
xor
pop
je
jnp
imul
aas
add
inc
test
or
popa
pop
inc
cmps
cli
je
inc
mov
bnd
mov
jmp
jbe
loop
idiv
(bad)
pop
push
mov
mov
push
or
int3
jge
into
xor
es
pop
arpl
sahf
call
div
xor
movs
and
dec
es
outs
xor
sbb
imul
mov
fld
mov
adc
daa
jb
mov
inc
clc
mov
call
mov
fwait
out
pusha
inc
push
aad
rcl
mov
ja
mov
jb
cli
cli
sbb
ficomp
cmp
push
cmp
ds
lods
mov
push
ins
adc
sahf
test
(bad)
sbb
fild
pop
lahf
or
cld
clc
cmp
cmps
and
ja
and
addr16
xor
push
xor
xor
sbb
ror
sti
cwde
inc
call
sub
mov
lock
les
jmp
stos
rcl
push
lea
inc
pop
sbb
add
mov
xor
mov
sub
lods
pop
retf
sub
push
cmp
pop
add
imul
xchg
stc
rcr
scas
out
inc
sar
jb
dec
add
or
in
mov
loope
xchg
cmp
out
sbb
cmp
xor
lock
clts
lods
mov
pop
jecxz
int
idiv
cs
out
sbb
jecxz
fsubr
test
fwait
imul
out
push
movs
xor
das
out
rol
xchg
loopne
jmp
out
mov
jle
in
jmp
scas
pop
dec
cmp
and
sub
dec
(bad)
or
xor
mov
sbb
scas
test
mov
cld
pusha
dec
mov
ins
pop
cwde
mov
mov
aad
push
lods
mov
and
ja
fdivr
xor
popa
pop
cwde
iret
iret
fcomip
ins
ja
and
cdq
daa
jo
sub
push
ins
cmp
lahf
aad
das
outs
xchg
jmp
add
mov
(bad)
(bad)
jmp
ret
cli
nop
lods
jo
dec
test
mov
xchg
sbb
outs
daa
mov
xor
fcomp
aaa
les
or
and
in
pop
shl
pop
cmps
cmp
out
inc
cmps
hlt
mov
(bad)
aas
ret
leave
adc
cmp
mov
sbb
cwde
cmp
push
inc
mov
pushf
cmp
mov
(bad)
enter
cdq
ins
pushf
jb
sar
int3
es
inc
jb
fsub
inc
inc
out
outs
add
sub
dec
pop
fimul
rol
and
xlat
sbb
fistp
sub
leave
into
out
(bad)
stos
stos
and
or
adc
adc
jb
fimul
aaa
gs
pop
in
addr16
jnp
rcr
add
add
addr16
not
int
aaa
cmp
push
imul
cmp
sbb
fnstsw
(bad)
or
pop
test
pop
pop
idiv
icebp
or
add
push
and
push
jecxz
retf
cmp
xchg
into
lds
push
out
dec
pop
out
dec
stos
out
adc
ret
fmul
ffreep
retf
sub
jnp
ss
pop
or
xchg
ins
aad
sahf
pushf
jae
ficomp
jns
imul
bnd
add
adc
and
or
jecxz
inc
mov
xor
push
xor
lahf
mov
in
and
movs
jns
and
push
test
iret
out
pushf
(bad)
mov
add
or
jl
mov
push
(bad)
jbe
sub
leave
push
xchg
dec
js
imul
pushf
jmp
push
mov
dec
jo
pop
jne
in
mov
or
sbb
(bad)
inc
xor
pop
push
inc
std
icebp
in
jle
pop
pushf
push
push
out
sbb
leave
xlat
add
cdq
ds
(bad)
leave
iret
mov
pop
cdq
add
dec
mov
or
dec
and
push
(bad)
jp
test
or
stos
mov
cli
inc
adc
adc
and
sbb
mov
sbb
outs
push
ds
jbe
mov
imul
sub
ret
xchg
test
icebp
jne
xchg
push
jno
icebp
shr
jmp
push
mov
mov
sbb
adc
adc
mov
dec
lahf
sub
mov
lea
and
fmul
inc
push
test
ret
lea
jle
jge
xchg
aad
cmps
fbstp
jnp
cmps
dec
pop
bound
or
jl
fdivr
mov
aad
popf
aaa
mov
pusha
bound
push
jo
cmp
(bad)
ss
fld
xor
test
add
rol
push
xchg
inc
push
movs
lds
ror
test
aas
xor
mov
ret
sub
push
fsubr
xor
add
rcr
inc
sub
test
ins
push
test
inc
xchg
xor
sbb
inc
pop
cli
sub
fistp
shl
lods
loop
cmp
call
stc
cmp
les
cmp
pop
sbb
cwde
jnp
jecxz
push
mov
sub
outs
push
push
leave
sbb
pop
inc
leave
jns
jmp
cmp
xor
xchg
and
bound
push
jl
sub
mov
and
ins
addr16
inc
test
sbb
xor
call
sbb
std
pop
not
iret
mov
mov
push
dec
popa
mov
and
lds
dec
fldenv
and
adc
sub
xlat
mov
scas
pop
fxch
sub
call
cli
in
cli
dec
mov
and
jle
cmp
(bad)
inc
cdq
sahf
pop
push
or
or
daa
outs
add
std
xchg
adc
dec
aaa
rcl
adc
ja
add
aam
in
mov
lahf
adc
xchg
fimul
add
jmp
leave
pop
add
add
or
stos
sub
sahf
and
js
outs
mov
dec
stos
hlt
(bad)
sti
jne
lock
ja
ins
out
out
out
xor
ins
mov
in
jbe
and
add
fimul
std
aam
outs
es
dec
sahf
pop
cld
xchg
sbb
scas
mov
in
dec
sbb
push
out
fidiv
mov
rcr
lahf
mov
add
loop
arpl
jge
aaa
inc
pop
pop
mov
lock
sub
ds
retf
outs
inc
add
cdq
jbe
out
mov
adc
stos
push
test
lods
jb
cmp
jmp
(bad)
div
(bad)
movs
or
leave
mov
mov
or
push
(bad)
stc
mov
sbb
mov
icebp
mov
movs
hlt
je
test
add
outs
and
je
mov
and
(bad)
mov
daa
adc
(bad)
mov
cmp
test
ficom
inc
shr
idiv
les
sar
lock
push
enter
sbb
imul
add
(bad)
out
cli
adc
in
lds
dec
add
rcr
jg
shl
fs
mov
and
ficomp
or
in
(bad)
inc
js
xor
pop
lahf
ror
mov
mov
(bad)
test
je
gs
lahf
aas
daa
getsec
scas
nop
in
sti
add
inc
fisubr
stos
clc
dec
(bad)
mov
js
push
retf
mov
inc
mov
xchg
mov
xor
ins
ret
mov
cmp
outs
icebp
xchg
adc
lea
xchg
cmp
mov
loopne
inc
fdivr
xchg
movs
aad
inc
dec
sahf
(bad)
fs
pop
add
mov
add
and
xor
fimul
sar
iret
lods
fcmove
or
or
push
jle
inc
jbe
ja
das
jle
stos
xlat
imul
inc
mov
adc
popa
test
fwait
push
lods
pushf
lahf
push
xor
aad
xchg
or
and
cmp
xchg
dec
arpl
mov
cmp
ficomp
mov
shl
cmps
mov
xchg
out
imul
scas
push
aaa
gs
inc
jge
xchg
cmc
in
inc
std
mov
mov
and
nop
outs
enter
inc
pushf
mov
or
pusha
add
inc
loopne
fwait
pop
cmps
stos
(bad)
push
sub
jmp
sbb
push
pop
inc
jge
mov
xchg
add
std
psubb
inc
rol
ss
pop
ror
xor
mov
mov
jge
jb
aas
xor
or
xor
cmp
mov
cmp
cmp
scas
mov
mov
test
pop
lods
jl
(bad)
cdq
leave
jns
dec
push
and
sbb
push
mov
dec
mov
lahf
jbe
lock
push
mov
sbb
imul
mov
inc
pop
cmp
add
mov
or
mov
jp
sbb
jns
pop
cli
stos
nop
xchg
inc
stos
mov
stos
or
xchg
aad
cmp
mov
jno
add
mov
add
not
cmp
push
lds
mov
mov
sbb
sbb
jnp
sub
dec
and
popa
fidiv
cmp
shr
jmp
sub
xchg
xchg
pop
cli
xchg
rol
aam
add
xchg
repnz
xor
ror
and
xchg
jl
jge
pusha
cmp
push
jmp
std
lods
ins
sub
sub
cmp
(bad)
pop
int3
retf
inc
sbb
je
iret
jb
je
outs
push
mov
add
add
mov
and
cmps
jl
jne
ins
adc
mov
fwait
inc
mov
stos
jnp
arpl
mov
fwait
clc
test
fidiv
and
repz
jo
mov
pushf
lods
call
in
pop
retf
or
jmp
push
jmp
sbb
out
ror
div
ins
add
jg
or
out
ds
loop
cmp
rcl
xchg
sbb
or
ds
sub
push
aad
stos
mov
ffreep
mov
pop
mov
and
sti
inc
loope
push
adc
lods
or
xchg
cli
retf
(bad)
mov
sbb
mov
dec
push
mov
dec
or
into
lea
fsubr
cmp
jb
mov
sub
push
sbb
mov
and
ret
ror
leave
ret
sub
xlat
ret
std
and
stos
mov
cmp
push
and
cmps
jnp
lods
or
pop
xchg
inc
jbe
xor
ret
fcomip
and
mov
(bad)
movs
out
aaa
test
mov
stc
cmp
xlat
retf
cwde
test
(bad)
cwde
jmp
call
ins
movs
test
iret
pop
lods
sub
mov
and
adc
push
fdivr
sbb
pop
test
shr
mov
std
cli
jbe
sbb
adc
inc
mov
push
iret
mov
data16
in
cmp
cli
jb
stc
inc
xor
fmul
dec
(bad)
mov
cmp
or
retf
xor
mov
test
es
sub
jo
into
sub
popa
and
xchg
in
or
(bad)
mov
lea
ret
mov
test
out
add
jnp
add
rcr
retf
inc
addr16
in
or
jo
xchg
xchg
int
call
add
and
(bad)
arpl
es
mov
fcomp
dec
push
xor
aad
pop
pop
sbb
mov
std
fwait
cmp
jae
mov
stos
in
add
mov
jo
pmaxub
mov
mov
push
sub
push
mov
out
cmp
rcl
(bad)
mov
lahf
jo
mov
mul
aaa
xor
xor
nop
ds
neg
sbb
cmp
lahf
mov
jns
mov
xlat
mov
scas
jnp
out
inc
lods
xor
inc
mov
ret
mov
dec
mov
repnz
xchg
dec
xchg
mov
mov
scas
stos
push
sbb
imul
pop
retf
movs
out
xlat
bound
movs
adc
and
in
popa
cmps
cmp
xchg
aas
stc
iret
push
cdq
and
xor
cmp
call
clc
pusha
data16
add
aam
or
push
lock
inc
mov
inc
push
rol
ss
inc
in
shr
or
js
test
test
xchg
xor
in
pop
imul
and
mov
js
(bad)
jge
js
and
jne
push
(bad)
xor
push
loope
adc
push
pop
rcl
mov
loop
data16
adc
cwde
fwait
out
jmp
jnp
add
pop
and
lds
lods
in
into
and
and
jb
xchg
adc
leave
imul
(bad)
adc
cmp
inc
cmps
lea
sbb
sahf
lahf
mov
outs
clc
out
mov
jmp
daa
push
les
lds
jno
adc
adc
pop
inc
sar
(bad)
cmp
dec
mov
mov
mov
or
mov
je
pop
lods
xor
pop
push
inc
jp
ins
loopne
cmp
adc
jns
inc
inc
std
jg
push
pop
cmps
sub
jae
(bad)
mov
xchg
outs
pop
shl
adc
sub
jo
sahf
and
mov
movs
jge
or
sub
inc
mov
fisub
leave
int
jbe
push
push
mov
inc
mov
pop
in
cdq
add
loope
imul
mov
pusha
jae
(bad)
pop
or
xor
mul
mov
clc
and
jno
xor
inc
movs
dec
xchg
stc
ror
pusha
mov
pop
pop
mov
lods
dec
sahf
mov
ja
push
and
jo
pop
inc
sub
out
jp
rcl
adc
stc
mov
test
or
loopne
mov
pop
mov
adc
stc
in
pop
mov
ja
mov
mov
mov
push
sahf
sbb
push
jae
pop
push
popa
cmp
dec
sbb
pop
mov
mov
xchg
push
cmps
sbb
fisub
aaa
xor
push
scas
rcr
push
std
jl
jecxz
jecxz
cmp
jg
jne
sar
jbe
dec
iret
mov
sti
mov
(bad)
ds
neg
adc
dec
imul
test
cmp
or
stos
jle
mov
bswap
scas
cli
cmp
or
push
add
or
aam
sub
adc
ficom
mov
cmp
xchg
jecxz
outs
jle
mov
arpl
fild
icebp
(bad)
sub
mov
or
inc
or
lds
or
fdivr
mov
mov
retf
out
out
loope
shl
mov
xlat
(bad)
jmp
retf
test
pop
add
push
loope
mov
cmc
cmp
dec
sbb
imul
jmp
retf
loop
mov
xchg
push
xchg
test
loopne
(bad)
push
or
or
retf
mov
test
or
mov
mov
(bad)
fsubr
les
nop
cs
xchg
(bad)
xlat
adc
dec
xchg
and
fiadd
cmc
pop
add
or
fisubr
inc
out
(bad)
repnz
mov
(bad)
jbe
inc
mov
inc
cdq
jb
jecxz
dec
popf
call
mov
xchg
retf
es
add
pusha
and
inc
push
pop
lahf
fs
test
mov
cmp
dec
or
shl
jg
jmp
cmovno
or
or
mov
jl
stc
fs
lahf
(bad)
out
push
xchg
xchg
mov
leave
mov
ins
aaa
sti
push
push
inc
push
ret
nop
test
ds
fsub
enter
lahf
out
inc
sub
or
mov
inc
in
add
std
(bad)
stc
sbb
clc
aam
scas
xchg
xchg
test
pop
gs
xchg
sbb
jmp
jge
(bad)
mov
xor
inc
movzx
inc
les
fadd
(bad)
xor
mov
inc
gs
test
xor
or
imul
and
and
adc
adc
dec
push
or
mov
adc
cmps
movs
leave
stos
or
jmp
mov
(bad)
jno
pop
mov
ins
retf
jmp
jnp
and
sub
pop
clc
repnz
fild
sahf
sub
cdq
movs
pusha
sbb
jmp
out
mul
popa
int3
xchg
ins
push
cdq
sbb
cmps
retf
jae
cmp
xlat
aaa
ss
(bad)
imul
mov
sbb
push
sbb
xchg
je
ds
add
dec
imul
sub
fisttp
cmc
add
pop
xchg
dec
dec
or
nop
mov
sbb
rcr
aas
inc
popa
and
dec
add
and
xchg
enter
popf
dec
jb
mov
xchg
int
adc
outs
lods
pop
or
and
test
sub
fld
or
shr
adc
pop
xchg
(bad)
lock
jno
(bad)
sub
fsub
inc
ror
jne
int3
mov
jne
or
daa
sbb
add
xchg
pop
in
icebp
test
dec
mov
dec
jno
add
fs
repnz
js
lds
jg
ja
mov
xor
ja
adc
jae
xor
dec
pop
adc
mov
enter
das
je
adc
aaa
or
in
fild
or
pop
in
call
pop
dec
test
das
in
jp
mov
dec
fisttp
call
adc
movs
xor
and
in
push
imul
sub
int
loopne
div
mov
mov
hlt
adc
dec
fild
sub
ja
dec
out
sub
sar
xchg
add
cmp
and
inc
add
add
in
adc
leave
out
(bad)
adc
scas
xchg
mov
test
test
xchg
sbb
push
inc
call
jns
int3
(bad)
fild
xor
mov
xchg
out
push
mov
pusha
stc
clc
call
rcl
into
push
inc
daa
jae
xor
repnz
cmp
add
or
dec
sbb
push
push
inc
cmp
mov
dec
adc
inc
xchg
test
pop
mov
sbb
mov
jecxz
in
add
stos
mov
ins
stc
xchg
shl
lds
ds
inc
xchg
iret
dec
add
sub
jecxz
in
fidivr
aaa
pop
cmp
pop
pop
scas
or
cmp
and
xchg
hlt
jne
or
hlt
les
stos
jle
stos
es
mov
repnz
into
fidiv
push
leave
cmp
pusha
push
jmp
mov
das
dec
xor
lods
sub
lea
stos
outs
lahf
inc
lods
fdivr
pop
push
and
popa
push
iret
(bad)
xor
or
inc
mov
data16
xor
je
sub
sub
ret
(bad)
mov
xchg
loop
retf
cmps
sub
inc
push
ss
sar
frstor
pop
mov
add
or
ret
mul
popa
(bad)
fs
cld
dec
pop
xchg
mov
mov
mov
aaa
adc
cmp
xchg
aam
mov
or
aad
or
icebp
out
ror
jmp
or
cmp
push
add
jno
into
mov
dec
xchg
es
stos
pop
enter
je
push
ror
inc
adc
dec
and
out
cdq
fsubr
mov
cs
push
imul
mov
pop
sti
xor
push
sbb
in
sbb
pop
pop
pop
push
arpl
rcl
(bad)
mov
(bad)
loopne
xor
push
adc
in
nop
sub
or
mov
imul
cmp
(bad)
retf
and
pop
inc
sub
mov
jae
dec
or
ficomp
sub
adc
dec
mov
cli
(bad)
jno
lock
pusha
mov
and
(bad)
push
fld
retf
cmp
shl
pop
mov
jg
xchg
mov
jl
aas
push
add
loop
rcr
js
inc
mov
neg
push
cmc
xchg
xchg
ror
xchg
and
lock
int
pop
jmp
sbb
(bad)
adc
int
pop
xchg
mov
mov
push
cmp
mov
popa
sub
and
rol
or
aad
sbb
rol
daa
sar
mov
pop
out
stos
pop
cwde
add
call
xor
xchg
push
xchg
fsubr
scas
test
imul
add
inc
jl
dec
in
jns
push
cli
punpckldq
inc
repnz
jno
call
jle
div
pop
loope
pop
jns
movs
sbb
mov
loopne
and
xor
pushf
pop
sahf
jne
adc
out
stc
in
inc
push
sub
(bad)
mov
mov
retf
icebp
mov
add
fs
xchg
and
pusha
retf
(bad)
jne
pop
pop
ja
je
outs
iret
push
xor
lahf
xor
loope
add
pushf
adc
jmp
dec
jno
adc
jb
or
sbb
in
loopne
mov
pop
mov
add
dec
test
push
mov
call
into
(bad)
int
mov
fxch
in
xchg
popa
sub
sub
cdq
cs
xchg
push
aam
lods
gs
inc
mov
mov
inc
inc
jge
in
jae
xchg
jge
xchg
pop
aam
cmp
sub
mov
push
and
sub
mov
push
sub
mov
mov
fstp
fisubr
cmps
adc
and
mov
test
fidiv
scas
imul
sbb
scas
push
cmovp
mov
jge
outs
outs
pop
fsub
stc
jae
test
mov
pop
pop
xchg
jmp
popf
dec
lahf
jns
lahf
or
xor
sub
imul
dec
lods
mov
pop
mov
ins
dec
int3
shr
and
mov
pop
dec
test
sbb
shl
or
mov
scas
ja
cdq
sbb
inc
cmp
iret
and
int3
inc
test
jl
stos
inc
xchg
movs
sti
std
nop
mov
mov
mov
lahf
jecxz
and
dec
sub
jl
cld
test
jmp
push
inc
ret
mov
bound
repnz
rcr
cmp
mov
pop
out
add
shr
push
and
cmp
xor
and
xchg
pop
mov
std
pop
imul
(bad)
xor
mov
call
aas
cmp
mov
and
sbb
adc
sub
jbe
fstp
loope
sti
push
or
fidiv
add
dec
jg
adc
push
nop
sub
scas
(bad)
cmp
bswap
in
sub
jae
dec
mov
cmp
inc
in
mov
fwait
and
cdq
add
sub
popa
mov
call
mov
ja
ret
jp
adc
xchg
aam
nop
movs
loopne
xchg
ins
scas
pop
push
jmp
data16
xor
sti
xor
mov
add
dec
or
ficom
je
push
(bad)
xchg
cmp
movs
sbb
xor
ja
repnz
pusha
xor
out
mov
ror
or
fdivr
and
out
inc
mov
cwde
pushf
and
adc
ins
xor
cmp
dec
jae
nop
dec
adc
jmp
push
shl
fiadd
mov
ror
push
(bad)
sbb
sbb
pop
push
cmps
aaa
or
pmaxub
mov
shl
pop
pop
mov
xor
push
pop
test
out
push
out
or
jmp
sbb
dec
mov
sbb
pop
mov
mov
cwde
mov
or
in
or
xchg
retf
(bad)
lods
mov
inc
pop
dec
lods
mov
sub
test
cwde
sbb
sub
outs
push
cmc
pop
dec
add
pop
xchg
outs
sub
dec
sub
jns
stos
and
adc
jcxz
sub
arpl
xor
jg
sub
data16
sbb
mov
xchg
retf
push
data16
retf
xchg
fwait
xchg
pop
push
adc
jecxz
(bad)
sbb
outs
(bad)
lods
push
cmp
gs
pop
cmp
movs
pop
sub
cmc
leave
adc
mov
cmp
into
in
sbb
ror
cmp
or
push
mov
js
dec
fldcw
pop
cmc
sbb
stc
test
mov
stos
jl
es
cmps
lea
xchg
and
aaa
and
dec
(bad)
out
adc
and
std
mov
ins
ss
sbb
adc
inc
pop
or
pop
adc
mov
mov
add
jmp
hlt
(bad)
loopne
aaa
pushf
out
or
jge
outs
test
test
cld
mov
icebp
movs
movs
and
loop
xor
shr
mov
xor
adc
lahf
in
xchg
dec
add
push
mov
in
mov
hlt
cli
mov
jb
cwde
mov
sub
ror
and
lods
gs
shl
scas
mov
jge
push
sbb
es
add
repz
lea
pusha
add
push
fisttp
sub
test
pop
jno
sar
fisttp
jne
out
mov
or
push
jl
mov
jns
call
jl
mov
adc
arpl
es
icebp
sub
jl
dec
or
sahf
sbb
fucomi
in
xchg
arpl
scas
sahf
push
dec
fdiv
jl
or
clc
sti
daa
into
mov
xor
add
inc
mov
mov
in
data16
cmps
ins
aad
inc
dec
rcl
scas
sahf
mov
or
or
lods
mov
sar
cmp
mov
imul
xchg
data16
imul
neg
ds
ins
jle
mov
pop
sbb
adc
inc
fidivr
cli
xchg
sub
sbb
xlat
in
mov
mov
xor
jp
repz
addr16
mov
int3
lahf
add
mov
push
clc
mov
ins
pop
push
or
xchg
sahf
add
mov
add
hlt
and
cmp
arpl
add
(bad)
fdiv
repz
mov
jge
iret
aaa
jge
cmc
mov
loop
inc
cmp
and
std
js
dec
ror
sub
sbb
or
mov
mov
popf
dec
dec
outs
inc
and
out
xchg
aas
jmp
in
adc
retf
cmp
rcr
dec
xchg
stc
inc
loope
jl
dec
sti
mov
jge
sub
push
push
mov
aas
and
adc
fldcw
loopne
push
sti
xchg
jl
push
mov
mov
push
xchg
lock
sub
jb
add
test
and
mul
adc
iret
call
pop
cmp
inc
retf
stos
xor
mov
sbb
add
mov
dec
outs
sbb
shl
fidivr
mov
scas
stos
pop
ins
cmc
fisttp
fdiv
jae
inc
into
into
mov
mov
push
or
(bad)
xlat
ret
inc
fdiv
xor
adc
adc
fnstenv
bound
lock
cmps
push
loopne
add
add
dec
xor
push
cli
xor
leave
stos
xchg
jne
jmp
test
jge
add
out
popa
in
sti
jne
ds
mov
sub
sti
cli
mov
add
cmps
shl
icebp
outs
mov
imul
inc
hlt
pop
sti
(bad)
lods
xlat
add
std
push
cmp
dec
push
sti
retf
bound
inc
(bad)
ficom
test
popf
pop
xchg
jo
add
push
into
xchg
jbe
and
(bad)
dec
(bad)
aad
and
pop
(bad)
fdivr
arpl
inc
pop
fsubr
fnstenv
(bad)
xchg
fild
push
xlat
cmp
push
mov
or
cdq
cmp
fwait
cmp
cmc
enter
jns
bound
icebp
imul
stos
jno
stos
test
sbb
sub
shl
lods
loopne
loop
retf
(bad)
retf
rol
(bad)
and
push
stos
shl
mov
sub
mov
das
xchg
cmp
xor
lahf
popf
push
mov
arpl
inc
fisub
hlt
add
inc
dec
fidivr
adc
ds
jne
add
xchg
sbb
dec
push
pop
jbe
mov
stos
jo
test
xchg
pop
movs
bound
dec
ret
(bad)
xor
or
cmps
ins
and
mov
repnz
adc
xor
sbb
add
popf
inc
jp
int
shr
jne
out
inc
loopne
or
cmp
test
or
adc
mov
mov
(bad)
in
mov
push
push
pop
xor
jno
fcmovnb
cmp
nop
ror
mov
fwait
mov
and
call
in
xchg
outs
into
or
mov
push
mov
sar
aaa
add
leave
add
dec
xor
cld
mov
fst
dec
jle
jp
je
jmp
and
push
cmps
adc
repnz
fwait
div
xchg
inc
pop
xchg
ins
das
pop
cwde
popa
(bad)
sbb
aam
daa
inc
push
sub
inc
sbb
aam
sbb
loop
inc
daa
inc
jg
jbe
fsub
sbb
xchg
jno
cmp
xchg
and
(bad)
repz
push
aaa
int3
sahf
jle
(bad)
rol
ret
aam
outs
mov
and
(bad)
movs
lods
jmp
sub
es
fsub
jbe
ror
mov
dec
ret
cmp
daa
addr16
jnp
jo
xor
popa
jp
movs
push
dec
retf
test
shl
cmp
jo
data16
loop
xchg
pop
in
push
mov
repnz
(bad)
cmp
out
pop
cmp
lock
inc
int3
mov
repz
add
mov
(bad)
in
shl
cld
inc
push
gs
pop
adc
inc
(bad)
fbstp
and
push
fiadd
jp
test
and
mov
stos
jns
(bad)
push
push
adc
add
jnp
inc
add
(bad)
rcr
or
cmp
repz
push
mov
jae
add
loop
shr
inc
or
scas
or
jb
adc
fnsave
pop
xor
sbb
imul
pop
out
mov
mov
hlt
push
lods
push
mov
sar
sbb
stc
js
mov
pop
cmp
dec
sub
cld
adc
cmps
fcmovb
add
std
sbb
leave
cmp
mov
mov
pop
sub
pop
adc
pop
push
add
dec
mov
cdq
retf
or
or
mov
popf
(bad)
in
xor
lahf
inc
xchg
and
daa
jns
in
jg
add
cmps
dec
cmp
lahf
mov
in
out
stos
into
or
imul
ds
cmc
popf
push
sub
jae
lock
mov
into
cli
nop
mov
xchg
fcmovb
bound
or
sahf
out
ret
mov
inc
pop
mov
fnstenv
popa
add
and
mov
or
mov
add
test
jg
clc
jno
add
inc
and
xchg
push
sbb
jle
addr16
inc
icebp
xor
pusha
cmp
es
fidiv
outs
icebp
xor
mov
pop
cs
mov
cmp
dec
mov
push
pop
stc
and
xchg
adc
loope
leave
test
gs
xor
mov
test
mov
rol
lea
mov
and
jnp
retf
fnstenv
mov
xchg
add
imul
inc
mov
xor
(bad)
mov
push
sub
jp
ja
sub
aam
adc
pop
(bad)
(bad)
fimul
outs
arpl
xor
add
xchg
hlt
push
cmp
cmp
push
dec
mov
inc
jns
(bad)
aaa
sub
and
shl
xor
sbb
test
mov
fld
dec
ins
xor
adc
lods
dec
or
inc
xchg
aad
retf
inc
(bad)
shr
xchg
sub
adc
es
or
cmp
ret
xor
cli
mov
mov
cli
lds
shl
inc
sbb
mov
mov
pop
sub
sbb
shl
sbb
or
cmp
icebp
dec
int3
pop
cmp
and
dec
mov
sar
xchg
jno
lea
retf
lods
adc
aad
mov
adc
adc
movs
mov
push
add
fldcw
cld
jno
sbb
arpl
(bad)
jne
mov
xor
(bad)
push
in
or
push
sbb
aaa
xchg
enter
cmp
mov
cmp
test
fisttp
jmp
mov
xor
jno
aad
into
nop
push
push
xchg
lods
xor
rcr
or
mov
(bad)
in
add
fnclex
xchg
mov
mov
ret
sub
pop
(bad)
xabort
retf
popa
pop
push
adc
xor
sbb
mov
in
frstor
pop
mov
cmp
into
mov
out
push
ror
lds
mov
add
xchg
mov
pusha
sar
adc
loope
ss
loopne
inc
xor
test
int
pop
push
mov
jge
xor
dec
movs
rcl
jbe
int3
dec
xchg
into
cmp
xchg
push
add
mov
jo
cmp
(bad)
mov
test
jno
call
push
mov
push
mov
fcmovne
push
dec
or
repz
push
dec
push
call
mul
call
add
adc
mov
std
push
retf
pop
out
in
push
test
std
jmp
stos
inc
mov
jmp
loope
les
mov
(bad)
mov
xchg
mov
and
inc
sub
or
adc
and
jg
inc
hlt
mov
sub
xchg
xor
lods
mov
scas
(bad)
mov
test
idiv
loopne
cmps
inc
xor
fbstp
jno
das
and
cmc
or
sar
std
inc
xor
mov
xchg
cwde
(bad)
(bad)
mov
or
xchg
push
mov
xor
fcom
xor
jae
jg
xchg
sub
mov
les
out
jp
pushf
inc
sti
sbb
xchg
lea
pop
out
test
mov
addr16
call
push
in
bound
mov
pushf
jmp
or
je
xor
push
push
enter
mov
arpl
sahf
ret
add
xor
mov
mov
mov
xor
lods
or
or
xchg
lds
in
xchg
add
or
ficom
sar
imul
inc
bound
mov
pop
in
das
add
jle
iret
popf
mov
xor
xchg
or
inc
loop
arpl
test
jnp
mov
or
addr16
fnstsw
cli
jmp
inc
movs
mov
sbb
js
pop
in
xchg
and
add
mov
sbb
repnz
fs
pushf
push
ins
jecxz
add
fwait
pop
sub
mov
(bad)
nop
shl
cmp
mov
or
xchg
pop
iret
push
sub
jno
mov
xchg
xor
jmp
imul
repz
or
mov
mov
(bad)
add
ds
es
rcr
mov
movs
rol
push
cmp
xchg
xor
inc
xor
sahf
pop
popf
sti
or
or
sti
push
(bad)
rol
jo
fucomp
push
int3
stos
popa
sar
push
pop
add
mov
sub
clc
bound
adc
jg
cmp
stc
mov
mov
dec
mov
mov
mov
add
and
sbb
lahf
das
pop
mov
push
sub
cld
and
or
dec
xor
push
(bad)
add
daa
add
imul
sar
mov
(bad)
push
pop
aaa
mov
sub
sub
sar
iret
out
sub
sahf
in
jo
cmp
shl
inc
mov
or
fst
out
sahf
and
out
aam
fmul
mov
movs
xchg
popf
lods
cmps
mov
shl
inc
pop
dec
pop
cmps
out
push
dec
dec
pop
cwde
mov
inc
shr
mov
adc
and
mov
jmp
js
enter
push
movs
div
push
cmps
and
jne
ins
rol
fstenv
sub
add
leave
clc
sbb
and
xchg
iret
xchg
out
enter
cmps
dec
pusha
int3
fldcw
sbb
jle
mov
dec
pop
in
enter
jg
and
pop
jb
fwait
push
ds
xlat
repnz
ficom
jne
inc
mov
and
sub
jnp
dec
movs
mov
aam
and
jl
scas
sbb
aad
idiv
xchg
(bad)
mov
mov
and
add
call
(bad)
sti
rcl
push
lahf
sub
push
gs
push
ins
cmp
mov
cld
and
sub
add
(bad)
cmp
pop
mov
inc
bound
xlat
in
sub
addr16
push
and
mov
cmp
push
in
popa
loopne
ret
(bad)
mov
dec
stc
repz
or
or
cmc
push
ror
push
push
ror
cmc
adc
cmc
push
mov
jne
add
repz
sub
and
div
(bad)
movs
sbb
outs
pop
sub
mov
push
ror
xchg
mov
(bad)
lock
mov
ja
outs
clc
xor
int
stos
push
pop
fisub
gs
or
mov
ror
out
imul
in
loop
call
inc
jb
mov
cmp
pop
inc
fcomp
cmp
pop
mov
clc
adc
icebp
sbb
gs
sub
jae
out
push
mul
or
mov
jl
sub
inc
and
mov
call
jmp
push
in
cwde
fadd
inc
mov
lahf
adc
xchg
into
jbe
pop
dec
test
and
scas
mov
nop
das
into
xor
mov
sub
jbe
hlt
sub
pop
scas
out
es
mov
cmps
bound
sti
out
ret
maxps
xor
sub
dec
addr16
sub
out
push
shl
pop
std
inc
or
xchg
pop
adc
fwait
sbb
add
out
and
inc
jmp
add
fwait
aaa
xlat
fcomp
push
adc
icebp
cmp
mov
in
ret
jp
outs
ficom
stos
ret
pushf
mov
nop
jno
mov
lahf
call
js
pop
aas
xchg
and
mov
test
(bad)
push
lock
call
cld
or
aad
mov
ss
leave
aam
test
out
daa
lea
ss
cmc
mov
mov
(bad)
sar
xchg
dec
jae
add
call
(bad)
scas
scas
stos
pop
aam
adc
add
add
add
lods
sbb
cmc
sub
push
lods
or
std
popf
cmp
dec
mov
ret
cld
xchg
pushf
xchg
in
hlt
cwde
xor
cmp
fnstcw
mov
ins
lods
dec
mov
xchg
xor
in
mov
push
ins
adc
add
jmp
ror
xchg
mov
jmp
push
retf
mov
mov
xchg
mov
jmp
jmp
add
cld
and
inc
or
movs
pop
inc
push
cmps
mov
jmp
ret
out
xor
inc
loop
jae
cld
mov
jmp
mov
mov
test
lds
mov
pop
push
shl
test
adc
cs
mov
(bad)
mov
jns
or
push
dec
sbb
sub
mov
and
imul
add
mov
pop
dec
sub
fisub
or
mov
dec
jb
test
pop
cwde
adc
xchg
stc
popf
cmps
add
mov
mov
(bad)
sbb
lds
sub
outs
pop
dec
cmps
xlat
cwde
imul
sub
or
jo
js
xor
cld
add
push
mov
mov
into
stc
mov
jge
es
mov
xor
jmp
jb
push
cld
scas
stos
push
mov
inc
jmp
lea
clc
inc
mov
dec
push
sub
sub
cwde
xor
cmp
call
inc
pop
mov
out
jnp
inc
ins
repz
or
leave
pop
or
ret
js
fcomp
xor
out
jmp
jb
cdq
imul
dec
cmps
push
jle
push
pop
sub
sub
jge
and
je
ja
push
repz
fild
pop
dec
lds
cld
out
xchg
and
mov
into
sbb
out
add
xor
iret
int
dec
cld
gs
arpl
fsub
cmps
pushf
mov
scas
imul
cmps
ss
lds
jg
ja
loopne
xor
ds
pop
pop
call
inc
jae
pop
ds
cmp
jecxz
pop
jb
sar
cmp
jne
push
mov
inc
mov
pop
daa
shr
ss
ds
mov
mov
cmps
rcr
or
adc
call
lods
sar
push
sbb
out
fstp
inc
movs
sbb
cmp
xchg
in
repnz
inc
inc
outs
ficom
xchg
or
in
push
or
rcr
xchg
fscale
mov
mov
inc
lea
inc
lods
jns
ds
outs
bound
neg
pop
mov
lahf
imul
pop
push
in
ds
mov
sub
xchg
xchg
add
div
adc
cli
and
inc
fist
xor
jg
pusha
inc
out
out
cmc
sub
fwait
sub
lea
dec
mov
mov
push
add
out
daa
test
sbb
add
mov
adc
mov
lahf
fisttp
push
stos
lods
pusha
lods
in
es
inc
sub
push
sub
inc
jb
pushf
cmp
mov
xchg
int
jns
xchg
jmp
lock
cmp
adc
sbb
popa
int
sub
inc
out
outs
pop
lea
rol
into
sub
enter
mov
fld
(bad)
adc
push
and
mov
push
cmp
sbb
in
sub
les
push
dec
xchg
repz
out
push
gs
in
sub
pop
and
push
cwde
adc
xchg
sub
sbb
jecxz
psubd
fbld
loop
sub
cmp
(bad)
mov
sbb
scas
add
pusha
xlat
dec
stc
rcr
push
movs
pusha
data16
xor
mov
hlt
push
dec
ss
(bad)
cmp
push
pop
xor
push
aad
daa
(bad)
and
and
xor
xchg
and
xchg
sbb
cmp
stos
xchg
rcl
cmp
cld
cmp
dec
test
lods
adc
imul
add
lods
mov
mov
xchg
not
(bad)
imul
pop
call
inc
xor
sbb
push
adc
hlt
and
aad
shl
mov
fild
or
mov
scas
xchg
jp
ds
je
adc
ret
fisub
cli
lds
das
js
pushf
or
sub
mov
push
mov
lods
ret
xchg
xchg
mov
sub
fadd
mov
adc
xchg
add
mov
cmps
pop
jmp
fs
lea
stos
xchg
inc
mov
(bad)
cmps
jbe
mov
mov
pusha
loope
cs
or
scas
adc
cdq
or
sub
xor
fadd
jp
(bad)
sbb
in
add
test
jp
mov
push
iret
stos
lock
ds
mov
lea
xchg
popa
mov
or
inc
call
aas
retf
and
arpl
cmp
pop
pop
sub
push
or
push
sbb
sar
mov
sub
sub
adc
adc
mov
jecxz
jns
xor
gs
cdq
mov
push
jmp
ins
xchg
push
in
push
push
mov
ins
sbb
fiadd
or
sub
aaa
push
out
sbb
push
cmp
jne
es
sar
xchg
(bad)
(bad)
test
jecxz
mov
neg
sbb
jmp
setne
xor
adc
test
push
mov
xchg
xor
add
sbb
jg
div
fwait
daa
and
jmp
arpl
mov
rcl
xor
arpl
imul
xor
dec
mov
inc
add
push
fcmovne
inc
push
mov
adc
ins
movs
imul
pop
in
xchg
dec
fidivr
mov
xor
loop
out
xchg
lods
cmps
jnp
add
arpl
add
shr
scas
nop
adc
jb
add
jns
push
xor
bound
shl
xchg
fsub
pushf
mov
sub
cdq
push
stos
pop
push
(bad)
jp
and
xchg
xlat
or
stos
cmc
xor
dec
sbb
xor
sub
sbb
in
fisub
cmps
adc
sub
push
xchg
outs
mov
dec
dec
clc
dec
mov
xchg
add
jecxz
loop
and
mov
jbe
pop
inc
xchg
or
loope
ror
jns
in
in
sahf
pop
ss
bound
mov
push
lock
jb
sbb
in
jb
sub
aad
pop
scas
mov
int3
add
stc
test
push
aam
sub
test
mov
in
push
push
stos
push
jbe
xlat
sub
jno
jge
call
cmp
fnstenv
lahf
jae
sub
jl
js
mov
test
sub
imul
fst
dec
xchg
std
cmp
sub
push
adc
cmp
mov
mov
mov
not
cmp
stc
add
stos
mov
fcmovnbe
cli
mov
pop
adc
add
in
inc
jns
jg
mov
cmp
je
pushf
mov
scas
movs
movs
shl
xor
push
jnp
cwde
or
pop
push
mov
and
adc
arpl
out
push
fdivr
(bad)
(bad)
pop
inc
mov
ja
aas
stos
test
cmp
ins
push
gs
and
inc
sahf
xor
and
movs
or
(bad)
and
mov
sti
jo
cli
push
addr16
ja
(bad)
rol
mov
xor
pop
push
inc
(bad)
in
push
ret
shl
sbb
sub
jne
hlt
pusha
ret
ficom
add
jns
scas
push
mov
adc
sub
fbstp
or
mov
cwde
jmp
int3
sbb
pop
adc
mov
mov
and
mov
in
or
rol
inc
adc
mov
and
out
inc
call
ffree
sub
adc
je
jge
dec
shl
xchg
out
popf
js
(bad)
push
inc
retf
cmp
out
xor
inc
xor
jg
jmp
cdq
test
clc
pop
fiadd
je
loopne
ss
xor
push
sub
adc
mov
inc
push
fimul
out
fpatan
sub
repnz
fwait
push
out
cwde
mov
lods
inc
rcr
fild
sahf
and
jnp
sbb
jno
inc
push
aaa
mov
pop
add
fwait
lea
lock
push
fsubp
adc
ret
inc
popf
dec
mul
mov
adc
xor
jg
ss
repz
jle
loopne
sbb
or
fs
mov
icebp
(bad)
sbb
adc
sahf
ss
mov
add
jns
jnp
and
mov
lea
mov
xchg
mov
in
xor
adc
rol
mov
inc
repnz
push
mov
in
stos
sub
sub
add
loop
or
sbb
fdiv
icebp
out
adc
inc
jnp
cmps
out
sbb
retf
jmp
pusha
dec
ja
jle
ja
les
enter
dec
mov
gs
lock
and
cmp
fwait
cmp
push
sbb
add
repnz
stos
inc
xchg
loop
ror
es
and
loope
mov
pop
push
jge
inc
xchg
ret
mov
test
adc
test
mov
mov
(bad)
cmp
fistp
aas
leave
xchg
rol
cdq
arpl
or
std
stos
ins
pusha
ds
int
xlat
and
xor
repz
fstp
mov
push
push
jbe
inc
ja
push
outs
int
mov
stos
out
rcr
mov
or
sub
xchg
dec
jmp
inc
leave
fst
sub
push
inc
stos
cmp
mov
and
jae
test
sbb
dec
mov
jg
jb
out
jnp
imul
push
mov
pop
push
test
lock
jmp
dec
add
jmp
add
cld
xchg
ins
pop
and
jnp
popa
mov
xor
pop
mov
sbb
rcl
dec
add
pop
cmp
pop
and
fs
shl
mov
adc
nop
jmp
jmp
jp
adc
into
jecxz
cmps
out
push
jne
stos
sbb
loopne
jg
movs
push
mov
or
cmp
pushf
xchg
sbb
in
movs
inc
mov
imul
mov
pushf
jg
xchg
xchg
sub
dec
jg
data16
or
dec
ss
ins
outs
into
aaa
inc
dec
cmp
in
call
cld
inc
push
lods
shl
sub
fcmove
pop
int3
pushf
mov
cmp
fs
icebp
adc
ret
mov
popa
mov
cmp
dec
sub
mov
cmp
mov
rcr
jnp
mov
add
pop
push
(bad)
loop
iret
jae
(bad)
jge
pop
imul
mov
repnz
data16
jne
pop
das
sar
stos
iret
or
daa
std
into
cdq
xor
sub
aas
inc
pop
xchg
xor
mov
mov
xchg
cld
ret
jl
push
inc
sub
clc
call
fs
out
jnp
and
inc
cmc
sar
dec
sbb
movs
ficom
sub
mov
pop
inc
mov
xchg
jmp
inc
jg
std
sahf
icebp
adc
enter
inc
push
shl
cmp
je
or
jmp
leave
mov
nop
push
test
cmp
ja
sbb
shr
fmul
dec
(bad)
pop
mov
je
idiv
pop
and
sub
xor
cmps
sub
mov
mov
mov
dec
jmp
imul
dec
aad
inc
sub
xchg
cmp
pop
inc
pop
(bad)
aas
repnz
outs
sbb
add
jne
fld
cmps
(bad)
sbb
pop
and
jl
ffree
inc
adc
push
lock
test
inc
xchg
lock
ret
xor
mov
sbb
jns
lock
pop
jl
fnstcw
(bad)
cmp
adc
dec
outs
loopne
mov
push
fwait
mov
cdq
dec
ror
mov
mov
xchg
hlt
cmp
cmp
ds
outs
aaa
repnz
mov
leave
and
scas
mov
loop
rcr
loope
xlat
nop
arpl
cmp
bound
jae
imul
pop
pushf
fisub
adc
jg
jmp
outs
aaa
push
mov
sbb
iret
call
jle
mov
mov
jmp
push
les
xor
adc
inc
lods
wrmsr
mov
push
push
adc
cli
inc
imul
sti
xchg
fdiv
push
sbb
ja
lods
cmp
stc
aad
cmps
mov
ins
int
xchg
pop
ins
ja
loop
enter
daa
into
jg
jmp
mov
sbb
fisub
iret
push
fld
jae
cmp
pop
push
mov
aaa
inc
fild
rcr
mov
xor
xor
out
ffreep
enter
adc
lock
out
test
and
cmp
xchg
cmp
fmul
add
repnz
cmp
or
lods
cld
inc
mov
xchg
pop
adc
mov
xchg
test
(bad)
cmp
and
scas
aad
imul
inc
adc
pusha
and
out
mov
jns
mov
push
pop
and
xor
cmp
mov
jnp
leave
mov
pop
xlat
ins
bound
push
popf
bound
imul
mov
nop
sub
jecxz
ins
cmp
mov
and
sti
out
jnp
iret
dec
aam
test
sub
lea
cmps
cli
daa
mov
inc
mov
popf
and
push
and
(bad)
mov
fdivr
push
mov
cli
jl
add
popa
ins
mov
xor
imul
sbb
inc
mov
(bad)
das
dec
jo
push
push
scas
stos
sti
push
mov
aas
mov
or
jne
(bad)
mov
fbstp
pop
out
mov
fcomp
fdivr
cs
mov
mov
pop
and
add
mov
push
loop
inc
out
sub
mov
xor
xor
mov
in
lahf
fisttp
push
xor
mov
lods
movs
sar
pop
test
jmp
xor
pushf
sbb
(bad)
in
dec
es
mov
mov
add
dec
adc
sub
data16
jp
adc
mov
mov
xor
or
movs
or
icebp
rcl
es
loope
sar
outs
aam
cmp
push
xor
retf
pop
pop
sub
pop
jne
mov
call
out
out
(bad)
sub
(bad)
adc
loopne
pusha
add
mov
ret
lock
adc
pop
mov
pop
inc
dec
test
mov
in
test
jno
adc
iret
sbb
in
rcl
std
cmp
aaa
add
push
sahf
add
xchg
scas
call
jmp
dec
dec
and
jl
imul
add
push
test
repz
adc
mov
in
jb
stos
ds
in
push
mov
ins
cmp
add
fwait
xor
dec
mov
mov
push
xlat
lahf
aaa
pusha
arpl
iret
xchg
jmp
out
in
xor
jecxz
scas
cld
pop
into
or
out
dec
scas
push
add
not
jecxz
pop
test
ins
and
push
rcl
add
icebp
lds
repnz
std
xlat
sbb
push
pop
cmps
les
outs
and
jmp
mov
ds
xor
cmp
int3
mov
adc
or
sbb
(bad)
mov
pop
xor
fadd
mov
mov
push
pop
dec
mov
mov
jbe
mov
xor
or
cli
jp
into
inc
and
rol
(bad)
jp
iret
sbb
out
fcom
pop
cmp
xchg
lods
mul
in
pop
data16
pop
push
mov
mov
(bad)
xor
fstp
mov
std
mov
mov
outs
inc
sub
sub
call
test
ret
ss
push
sub
cmp
jle
mov
cli
gs
and
outs
add
jo
mov
pop
cmc
popa
sub
sub
and
jecxz
js
hlt
(bad)
gs
sbb
std
sub
in
mov
adc
in
nop
sbb
and
int
lods
std
sub
pop
dec
push
xlat
ss
iret
mov
and
or
imul
cmps
imul
loop
mov
cmps
das
sub
push
fild
push
mov
stos
loop
push
out
cmp
cmp
pop
idiv
push
xchg
dec
and
je
inc
mov
xor
xchg
adc
arpl
or
xor
xchg
scas
add
leave
stos
(bad)
scas
fldenv
call
push
fdivr
xchg
rcl
pop
pop
jmp
mov
dec
pop
dec
dec
push
ja
adc
aam
out
das
cmps
and
pop
sbb
psubusw
sbb
inc
inc
imul
imul
loope
cli
adc
fwait
mov
pop
xchg
popa
sbb
pop
inc
mov
push
lods
xchg
out
inc
sub
imul
fadd
(bad)
movs
addr16
cmp
inc
retf
in
stc
dec
sbb
enter
jo
arpl
ficomp
cmp
mov
push
lods
retf
mov
hlt
mov
fcmovb
stos
lock
mov
leave
jns
xchg
js
scas
or
das
ins
clc
ins
xor
inc
out
cmp
mov
shr
pop
pop
add
loopne
test
cdq
sti
and
or
xchg
or
mov
aaa
movs
dec
sub
dec
stc
fnsave
scas
cmp
and
cld
aad
xor
push
jmp
jecxz
mov
rcl
mov
sub
retf
xor
repnz
(bad)
cli
test
pop
add
mov
jo
bound
repnz
ins
shl
repz
fsubr
(bad)
in
or
mov
hlt
pop
stc
push
mov
cmp
aas
fcomi
jmp
clc
push
ja
sbb
pop
pop
sbb
push
sub
imul
scas
inc
outs
int3
adc
or
pop
dec
jg
and
sbb
dec
jl
xor
inc
out
(bad)
int3
pop
cmps
xchg
cbw
and
and
cmp
mov
jle
push
shr
sbb
aaa
inc
inc
sub
pop
aas
fst
fisttp
ret
pop
je
shl
adc
fidivr
push
fstp
sbb
mov
ret
retf
in
adc
xchg
imul
int
dec
or
add
(bad)
push
lahf
or
xchg
in
js
add
cld
movs
retf
fsub
push
pusha
lea
cmp
mov
dec
jg
xchg
and
jns
cmp
bound
or
mov
push
popf
xchg
and
scas
sbb
sub
fcomi
in
jmp
rcr
ret
in
idiv
inc
in
sub
dec
inc
daa
cmp
repnz
pop
fs
jns
test
inc
sbb
in
(bad)
mov
jnp
ins
(bad)
or
es
(bad)
cmc
push
(bad)
xor
xchg
pop
(bad)
xor
(bad)
in
sub
aas
fdiv
push
mov
jns
mov
nop
mov
mov
or
or
add
je
(bad)
push
lods
cmp
jbe
cmp
mov
sti
into
sub
nop
sbb
lahf
jbe
(bad)
arpl
add
pop
and
xchg
pop
mov
fisttp
leave
mov
inc
int3
neg
frstor
sbb
push
pop
cwde
adc
xchg
pop
sbb
std
xchg
sbb
call
mov
xchg
push
dec
xor
jno
dec
enter
fwait
test
xchg
xor
or
dec
out
jns
es
hlt
stos
ins
cmp
cmp
les
or
test
mov
loopne
std
xor
out
pop
or
loop
fcmovne
retf
mul
cmp
mov
jle
stc
and
fist
out
jle
into
mov
out
mov
je
add
mov
outs
fwait
dec
push
scas
arpl
xchg
hlt
pop
pop
and
arpl
and
in
in
push
pop
test
clc
push
fsub
repnz
add
aas
popa
lea
xor
bound
fnstenv
psubq
pop
clc
pop
repz
jg
and
xchg
lods
cld
mov
ja
cli
jmp
push
sar
mov
mov
sbb
stos
(bad)
cmps
inc
jno
sahf
jnp
mov
idiv
popf
shr
inc
fs
ds
and
mov
pusha
jmp
mov
pusha
inc
cmp
dec
jns
adc
out
mov
adc
pop
push
aam
aad
not
sub
jg
mov
pushf
mov
(bad)
jp
xor
mov
gs
gs
or
imul
or
add
lock
jnp
jecxz
jbe
xor
loope
jle
add
fsubr
fcmove
push
sbb
mov
mov
test
dec
pop
mov
sub
repz
sbb
pop
cmp
sbb
and
sbb
ins
fwait
add
add
cmp
das
inc
xchg
mov
inc
or
xchg
ror
outs
pop
retf
cs
inc
inc
(bad)
lahf
das
aaa
sub
ficom
xor
addr16
xchg
xor
inc
and
imul
sub
or
arpl
push
sbb
cdq
out
jns
inc
loop
fnstcw
fdivp
inc
jb
into
inc
mov
xchg
pop
xchg
push
(bad)
bnd
or
push
add
push
call
mov
cld
mov
xchg
xor
ins
xor
fisubr
inc
jmp
xchg
add
(bad)
mov
xor
repz
xlat
retf
push
jmp
xchg
mov
mov
enter
gs
mov
jp
add
pop
and
xor
xor
int
lea
sub
xor
xor
mov
inc
rcl
scas
rcl
imul
mov
jb
leave
iret
xchg
aaa
jle
fld
mov
dec
(bad)
out
dec
lods
cmp
push
stc
mov
imul
popa
fs
sbb
dec
jp
gs
loope
or
jae
lods
mov
mov
xor
mov
and
or
xchg
or
in
pop
loope
test
fisub
fbstp
adc
jmp
and
lock
por
sti
cli
pop
out
lods
and
cmp
xor
sbb
sub
stos
jmp
sar
fldenv
sbb
fld
cmp
xchg
xchg
pop
test
aad
ror
in
cwde
sub
leave
add
nop
mov
hlt
in
les
mov
add
mov
lds
retf
dec
outs
(bad)
jns
push
and
jl
fst
mov
repz
pop
dec
jo
test
or
fsub
jno
and
or
add
jmp
mov
repnz
mov
pop
sahf
les
cmc
repnz
cld
push
in
retf
sub
rol
sar
fs
or
lea
outs
push
sar
mov
xchg
enter
fs
mov
enter
jmp
inc
pop
inc
out
cwde
lods
aas
repnz
out
dec
xchg
add
push
loop
push
pusha
lods
add
adc
push
push
xor
cmp
mov
addr16
lods
pop
mov
inc
and
xor
add
cmp
push
pop
add
clc
or
mov
xlat
pushf
push
xchg
and
sbb
lahf
and
sahf
popf
icebp
mov
and
pop
ret
mov
adc
lock
mov
ror
mov
fstp
adc
or
fwait
clc
lods
mov
xchg
dec
sbb
push
mov
mov
and
mov
int3
pop
popf
repz
push
ja
inc
gs
into
mov
pop
pusha
xchg
cmpxchg
adc
mov
mov
dec
xor
cmc
pop
das
cwde
and
neg
mov
ret
jmp
jns
jb
(bad)
test
out
add
cld
xchg
pop
inc
jno
fnsave
pop
xor
sub
stos
sbb
jnp
inc
cmp
jge
dec
lea
push
fs
repnz
xor
mov
pop
or
jecxz
adc
mov
mov
jnp
data16
sub
push
int
push
jmp
mov
mov
jmp
fst
fistp
inc
ret
cmp
jecxz
adc
fld
mov
add
imul
xor
inc
ror
mov
inc
or
xor
push
outs
fistp
xor
sbb
icebp
xor
xchg
loope
fimul
and
sbb
pop
neg
jae
in
fcomi
sub
outs
push
and
dec
stc
sbb
sbb
pop
mov
lea
jge
cmp
push
push
dec
and
xor
add
nop
sbb
enter
cmp
repnz
sub
add
and
repz
add
test
xchg
aas
pop
in
pop
mov
pop
mov
mov
pop
out
sti
push
in
dec
aaa
sti
and
fwait
popa
mov
jno
je
fld
hlt
scas
cmps
xor
adc
jle
(bad)
test
adc
fldenv
(bad)
inc
(bad)
dec
sub
call
fld
push
sahf
dec
pop
fs
push
ja
push
lods
cmp
mov
imul
sbb
dec
mov
div
and
pop
je
jnp
xchg
loope
ins
xchg
sbb
sub
aas
lahf
push
jg
pop
mov
xor
mov
leave
or
(bad)
pop
mov
call
out
retf
out
and
dec
(bad)
pushf
(bad)
in
call
fmul
inc
adc
push
push
and
shr
mov
jb
sahf
dec
xlat
retf
stc
rcl
leave
push
cmp
adc
pop
add
mov
iret
stc
ja
movs
xchg
push
call
popf
loop
or
xchg
inc
out
cmps
jbe
shl
rcl
cmp
daa
(bad)
addr16
dec
popf
scas
mov
fld
sub
mov
clc
into
or
push
cmc
loope
dec
rol
sub
test
es
mov
in
(bad)
push
inc
xchg
mov
lods
cmp
dec
jge
push
cmps
lock
ret
push
call
and
add
and
sar
psubq
push
imul
mov
scas
not
mov
or
ins
dec
test
xor
fistp
stos
(bad)
xlat
adc
sub
xchg
add
(bad)
and
inc
js
sub
or
lods
xor
inc
jmp
jmp
imul
loop
xchg
lahf
pop
leave
stos
and
inc
push
push
sbb
inc
cmps
mov
xor
pop
push
popf
or
push
scas
shl
push
ins
xor
mov
mov
retf
adc
dec
scas
dec
test
push
call
xor
test
dec
fmul
cmps
ds
dec
fadd
adc
fsin
ret
gs
pop
mov
pop
cld
add
xchg
push
jb
lods
sub
mov
ins
cs
mov
mov
mov
enter
sub
dec
dec
jle
cmp
movs
(bad)
cld
jo
addr16
fwait
outs
mov
xor
jb
sub
cmp
jecxz
dec
mov
add
mov
jnp
lahf
data16
sub
cmp
jecxz
push
pop
mov
mov
push
mov
jg
jge
cld
in
push
test
pop
xchg
cwde
pop
fsub
sbb
jnp
jnp
xadd
push
pop
dec
mov
xchg
lea
hlt
movs
sub
push
repnz
mov
pop
hlt
clc
jle
push
mov
add
mov
bound
rol
fcomi
sub
sar
je
xchg
out
hlt
push
jne
pop
test
lods
cmp
xchg
je
cmp
std
jp
fsub
add
je
pop
out
pop
pop
imul
xor
lea
push
ss
mov
scas
cmp
xchg
and
mov
dec
inc
outs
inc
test
int3
int3
mov
push
fidivr
es
mov
add
dec
je
cmps
sar
dec
fstp
sub
je
or
cmp
adc
sbb
adc
call
lahf
inc
lock
movs
ins
xchg
leave
les
dec
mov
sbb
xor
test
ins
sub
and
stc
add
stc
sub
or
push
mov
cmp
mov
mov
xor
int3
inc
(bad)
fcom
ins
rcr
sti
shl
lds
daa
and
jns
cwde
inc
push
jmp
mov
inc
adc
and
inc
mov
cmp
cmp
xor
push
daa
and
and
retf
mov
dec
imul
sub
(bad)
xchg
or
mov
sbb
cmc
mov
jl
int3
xor
dec
xchg
push
pop
adc
pusha
lods
not
dec
mov
cmp
out
int
push
mov
inc
inc
sub
inc
clc
cld
rcl
ror
jp
adc
cmp
js
ja
mov
cwde
cld
cld
pop
cmps
sbb
sahf
dec
cmp
pop
dec
xchg
inc
daa
mov
aaa
push
and
imul
push
adc
sbb
ins
rol
or
js
push
adc
movs
cmc
dec
scas
mov
and
fcmovnbe
adc
xchg
cmc
fist
cmp
pop
jmp
ds
retf
jmp
lods
pop
jg
inc
loop
inc
cli
retf
mov
and
fdiv
mov
popf
mov
xchg
mov
cld
scas
sbb
movs
fcomp
jmp
cmp
loopne
sub
dec
test
sub
ror
frstor
call
push
mov
es
loopne
pop
mov
sub
sub
xor
push
cmp
nop
mov
adc
pop
dec
ss
xor
(bad)
jecxz
jnp
push
add
jle
cdq
mov
jae
out
xor
aad
or
ins
jbe
fdiv
stos
push
add
push
mov
add
xchg
sti
leave
iret
inc
pop
ds
jne
ja
pop
pop
les
retf
ret
stc
mov
fsubr
cmp
xchg
call
or
jle
cdq
mov
sbb
cli
push
les
dec
adc
es
ds
or
cmp
pop
xor
stc
cmp
call
pop
int3
push
xor
jge
push
cmp
xor
mov
out
call
shr
sbb
add
push
cmp
imul
sub
stos
jp
push
dec
inc
(bad)
jmp
cld
push
cmps
cmp
or
neg
aam
push
push
mov
dec
xchg
test
xchg
push
(bad)
in
dec
cmp
mov
es
neg
ds
jle
fdivr
inc
mov
lods
mov
jecxz
gs
fs
dec
inc
mov
repnz
mov
nop
sar
popa
fcomp
cmp
push
and
cmp
or
mov
inc
and
call
mov
or
lods
adc
pop
add
scas
mov
inc
fidivr
xchg
fcom
ds
cs
cwde
into
icebp
(bad)
not
pop
jne
xchg
stos
jg
sub
es
xchg
loop
iret
add
mov
jmp
pushf
fld
or
in
add
cmp
add
popa
add
jb
lock
test
inc
and
pop
outs
xchg
pop
call
xchg
call
push
dec
push
out
sub
mov
dec
add
jle
fld
bnd
ret
adc
jae
pop
stos
xor
dec
cmc
mov
pop
and
push
add
xchg
xchg
sbb
jb
lods
mov
xor
jg
or
lods
das
movs
gs
mov
push
stos
lea
(bad)
jnp
add
cmp
pushf
lock
int
and
xor
pop
xor
pushf
xchg
call
inc
jo
jle
lock
or
dec
and
out
cmps
cmp
or
mov
cmp
jecxz
jns
paddusw
sub
adc
scas
call
in
add
sub
or
jecxz
jae
pop
mov
mov
in
add
(bad)
inc
and
aam
xchg
cmp
sub
xlat
lods
fs
test
and
aaa
ja
lods
xchg
sbb
fcom
mov
dec
call
inc
outs
xor
lea
mov
sub
and
gs
ins
jg
push
in
leave
neg
cld
adc
dec
in
jecxz
mov
sub
sub
sub
(bad)
fcomp
and
(bad)
mov
inc
xor
es
inc
mov
mov
and
stos
sbb
pusha
cmps
inc
and
popf
pop
daa
cld
leave
pop
push
or
ror
in
ins
jle
mov
jecxz
or
pop
sbb
sub
jp
in
adc
adc
mov
cmp
aam
inc
in
and
mov
cmp
mov
dec
mov
sub
cmp
jno
mov
int
xor
dec
xor
adc
int3
pop
or
xchg
ins
popf
hlt
in
cmp
popf
jae
add
fstp
xchg
dec
in
rcl
inc
push
les
add
add
rcl
mov
fisub
dec
mov
mov
fwait
sub
xchg
mov
mov
clc
inc
jecxz
push
into
lock
mov
xchg
dec
ins
pop
cs
cmp
int3
loop
lds
stos
jb
pop
inc
xchg
pop
(bad)
mov
xor
mov
bound
push
pop
mov
xor
dec
retf
mov
ja
lods
cmp
neg
dec
fs
inc
cmp
pop
sbb
add
bound
mov
push
sbb
fcomp
mov
cmp
(bad)
movs
fwait
pop
jle
cwde
push
adc
sbb
mov
and
and
inc
cli
repnz
aam
pop
xor
ins
sbb
mov
cmps
bnd
stos
mov
outs
test
ds
dec
in
or
sbb
repnz
pusha
inc
jne
ret
mov
mov
push
cmp
jmp
jmp
psubsb
push
sbb
mov
or
lds
mov
adc
cld
mov
(bad)
sbb
inc
add
lods
sub
mov
adc
aam
jnp
(bad)
cs
mov
mov
data16
jge
jne
sar
(bad)
mov
cmp
fisttp
xchg
aad
lods
jge
outs
add
mov
push
daa
and
mov
(bad)
xchg
sbb
arpl
xchg
fst
pop
pop
outs
xor
loopne
mov
mov
xchg
data16
mul
and
xor
cmps
jge
(bad)
add
cli
movs
pop
out
imul
dec
outs
mov
mov
lock
sti
adc
(bad)
enter
or
das
and
(bad)
push
sub
mov
into
dec
scas
mov
out
mov
jns
stc
call
pop
push
ins
xor
sbb
outs
out
dec
inc
out
mov
jae
js
hlt
dec
sub
and
cmps
lock
mov
pushf
out
lds
out
shr
or
(bad)
jp
loop
mov
push
jb
jecxz
add
shl
cs
inc
retf
inc
fbstp
cli
outs
out
shr
sbb
lock
or
adc
mov
add
or
test
sbb
inc
call
sbb
mov
stos
sub
xchg
pop
add
hlt
bound
stos
push
pop
add
cld
fnstsw
test
sbb
out
fiadd
pop
pop
jo
sbb
fldcw
ror
or
add
ret
imul
ret
loop
add
maskmovq
test
out
shl
stos
outs
pop
pop
mov
inc
push
push
pop
mov
add
scas
movs
ret
push
cmc
cdq
loope
pop
shl
push
push
or
inc
mov
mov
sbb
mov
or
push
push
jnp
fisub
out
ins
les
inc
xor
push
jle
inc
pop
retf
push
push
xchg
ror
inc
retf
push
dec
out
dec
mov
mov
push
mov
call
enter
mov
inc
mov
stos
pop
pusha
xor
mov
push
xor
mov
cmp
test
sub
push
fistp
jl
and
jne
call
fisub
mov
arpl
or
les
pop
in
and
cmps
push
jp
add
push
push
dec
pop
fild
(bad)
jp
xchg
cdq
add
stc
xchg
fmul
sti
and
loope
(bad)
or
jno
inc
ins
(bad)
mov
dec
mov
cdq
xor
leave
sbb
sub
sbb
jecxz
jae
mov
dec
add
mov
xchg
push
imul
ret
or
sub
pushf
push
out
xlat
mov
int3
or
les
pop
stos
xor
in
cmps
loopne
dec
ds
xor
xor
aas
pop
pop
aam
fdiv
push
dec
fs
pop
setne
inc
mov
jne
pop
cld
mov
push
jmp
pop
fwait
jne
fcomp
xchg
fsubr
push
push
scas
pushf
call
or
push
pushf
sbb
mov
inc
mov
mov
je
dec
addr16
icebp
mov
and
dec
jmp
mov
mov
out
push
bound
jmp
cmps
leave
mov
mov
add
rcr
xor
sub
repnz
les
xchg
div
jle
sbb
das
mov
dec
femms
mov
adc
cmp
mov
pop
push
fs
sar
pop
push
les
jmp
adc
push
sub
inc
dec
adc
stc
and
cmp
jmp
push
push
jge
jp
stc
test
add
addr16
mov
imul
aas
repz
or
or
js
(bad)
pushf
sti
mov
and
and
jle
mov
cs
repnz
jbe
jnp
fcmovne
dec
dec
(bad)
cs
popa
and
ret
mov
inc
xchg
outs
jle
push
fisttp
inc
push
push
mov
mov
xor
push
xchg
add
iret
outs
mov
adc
push
xor
ret
xor
sub
dec
cld
xor
(bad)
cmp
jbe
and
xchg
aad
xchg
xor
cmc
and
retf
stos
cmp
retf
dec
fld
mov
call
lods
repnz
lahf
stos
in
daa
cmp
data16
mov
std
push
cdq
in
mov
pusha
add
pop
sub
jl
jno
pushf
cwde
jnp
out
push
push
cld
ror
(bad)
(bad)
retf
std
rcr
les
jb
sar
mov
and
and
in
sahf
mov
call
sbb
imul
xor
xchg
mov
mov
daa
fstp
test
out
in
push
lds
lea
stos
xor
std
les
push
dec
cmp
mov
xchg
out
push
outs
imul
sub
aad
cmps
sbb
stc
sbb
cs
fldcw
ror
pop
test
push
or
mov
ret
push
xchg
pushf
ret
repnz
pop
mov
fs
aam
test
adc
lea
lods
wbinvd
mov
gs
push
retf
repz
retf
jp
xchg
cmp
movs
adc
jmp
sub
jge
pop
call
push
iret
ins
gs
mov
ret
(bad)
adc
das
sti
xchg
icebp
fs
fs
outs
dec
inc
mov
xchg
int
sub
jecxz
inc
xor
movs
pop
jmp
pop
sub
push
mov
mov
lock
cwde
(bad)
push
xor
push
mov
enter
xchg
sub
into
int3
and
xor
mov
xchg
sub
adc
push
add
pop
push
mov
(bad)
out
inc
push
mov
cmps
adc
in
in
out
in
xchg
cmp
lock
iret
movs
cdq
lea
sub
fsub
xchg
xchg
fnsave
les
xchg
and
in
rcr
xor
lds
mov
outs
sbb
fistp
pop
lock
ret
lods
xor
jo
adc
lods
stos
test
sbb
fnstcw
lock
adc
mov
cmp
mov
jecxz
inc
cs
inc
sbb
jge
sbb
aaa
cmp
mov
(bad)
out
cdq
add
cmps
fbld
push
(bad)
fs
(bad)
cmp
ja
push
sbb
sbb
repnz
fld
leave
loopne
mov
in
and
popa
jne
adc
retf
inc
mov
push
fstp
fsubr
inc
ins
ja
int
movsx
hlt
sbb
cmp
xor
xlat
and
push
les
out
shr
mov
in
inc
sbb
inc
xor
mov
out
add
pop
ins
dec
cmps
inc
aad
(bad)
jge
xchg
cmps
or
xchg
cdq
add
popa
movs
adc
pop
sbb
mov
stos
shl
push
mov
push
lods
ds
inc
pop
ins
clc
cs
outs
cmc
stos
sbb
out
xor
dec
ret
cld
xor
xchg
call
adc
sub
jnp
adc
imul
test
jae
xor
xchg
or
cdq
dec
call
xchg
xchg
cmp
imul
xor
cmp
aad
inc
add
mov
jnp
mov
cmp
fnstcw
push
ret
mov
inc
cmp
fnstenv
not
ret
sub
inc
icebp
push
inc
je
pop
sar
int3
jmp
pop
repz
or
mov
repnz
pop
in
xchg
ins
(bad)
mov
imul
mov
jns
(bad)
fst
mov
adc
sbb
and
mov
lock
mov
jno
out
std
dec
mov
in
push
cmps
loope
pop
stos
loopne
mov
jb
mov
iret
call
in
iret
pop
push
in
gs
adc
lea
xchg
cmp
hlt
aam
jl
and
aaa
es
cld
mov
jg
out
test
mov
mov
cdq
fidiv
es
push
mov
in
cdq
push
inc
out
sbb
jge
ret
inc
sbb
xchg
xchg
cdq
call
out
dec
or
(bad)
mov
loope
mov
sub
mov
test
sbb
out
jmp
push
dec
(bad)
ror
sub
xchg
ficomp
mov
pop
push
aam
mov
pop
int
stos
xor
aad
mov
es
int
call
inc
pop
repz
mov
dec
fld
fcomp
sti
mov
retf
gs
fstp
adc
jmp
fistp
mov
add
inc
push
push
aas
dec
rcr
sbb
cmp
lock
jecxz
std
dec
push
cmc
clc
xchg
mov
inc
js
aad
movs
inc
mov
push
jb
add
neg
ins
jg
add
das
inc
dec
sbb
jne
jmp
aas
mov
arpl
or
jae
(bad)
xchg
push
imul
paddsw
inc
movs
jne
movs
sub
and
pusha
sub
add
fcmovnu
cmps
hlt
mov
adc
cmps
nop
push
mov
xor
jecxz
outs
shl
repnz
aad
popf
pop
jmp
sub
push
xor
or
add
shr
aas
sbb
out
fisubr
aaa
(bad)
outs
mov
add
into
mov
enter
pop
cwde
aas
loop
dec
retf
in
cwde
sub
dec
xor
test
add
mov
and
fimul
sbb
add
push
push
repz
in
data16
mov
ficom
aam
push
lahf
fistp
out
(bad)
cmp
ret
sahf
push
daa
jge
call
jp
add
out
or
div
es
out
adc
inc
jo
and
jmp
outs
mov
ror
jmp
jl
popf
int
mov
mov
jbe
pushf
mov
rcr
pop
cmps
pop
aad
out
and
sahf
imul
jnp
je
js
test
sbb
iret
mov
nop
push
stc
test
clc
in
sub
jle
sahf
cli
pop
aad
mov
sub
pop
stos
mov
mov
sbb
and
cmps
adc
push
dec
(bad)
sbb
scas
call
scas
scas
sbb
cwde
dec
rcr
xor
repnz
xor
or
jl
adc
fldcw
pop
xchg
jns
push
cmp
pop
pop
mov
sub
arpl
(bad)
call
pushf
sbb
pusha
sqrtps
adc
pop
cmp
push
clc
scas
push
dec
and
and
xor
nop
daa
xchg
adc
sbb
test
(bad)
mov
add
fwait
sar
cmps
mov
cli
dec
mov
outs
mov
adc
xchg
test
lods
and
mov
push
add
push
sbb
(bad)
movd
add
fstp
retf
inc
xchg
mov
cmp
rcl
sti
daa
lahf
xor
pusha
addr16
(bad)
sbb
(bad)
mov
push
rol
bound
push
jecxz
adc
jnp
inc
xor
adc
ds
fistp
loopne
int3
pop
test
xchg
inc
outs
cdq
mov
pop
or
stc
dec
cdq
stos
fisubr
pusha
stc
outs
(bad)
call
cwde
enter
(bad)
cmp
test
add
sub
jecxz
push
repz
pop
pusha
jbe
scas
psubsw
pop
rcl
cmp
lods
dec
pop
jp
loope
add
sub
jl
(bad)
mov
ins
xor
mov
inc
sub
ds
jns
or
std
lahf
jmp
xlat
xchg
dec
movs
sub
mov
add
stos
xchg
push
add
jmp
jmp
fidiv
mov
xchg
ds
cmps
sub
or
stc
lods
test
ins
leave
fnstenvw
inc
int3
enter
sahf
fadd
dec
pop
int3
sbb
mov
iret
and
jge
jns
popf
add
clc
mov
mov
mov
adc
adc
dec
movs
or
popf
push
and
pop
add
(bad)
in
cmp
retf
and
gs
lds
mov
xchg
es
retf
cmp
mov
movs
popf
push
enter
movs
add
fs
ja
xchg
mov
xchg
rcr
cmp
arpl
xor
bound
mov
adc
add
out
jo
bound
mov
xchg
gs
cmpxchg
pop
inc
imul
in
fst
pushf
movs
clc
stos
ins
ins
mov
jne
enter
push
sbb
mov
jns
fs
and
mov
push
pop
int
pop
inc
je
cdq
and
ror
cmp
cmp
sti
sbb
data16
xor
xchg
pop
stos
outs
mov
sub
jbe
loop
ficom
add
imul
outs
stos
hlt
pop
cmc
cmp
cld
inc
xor
inc
rol
xchg
mov
out
inc
ja
scas
lods
ja
add
fisttp
bound
ins
stos
jecxz
add
sub
lock
add
popa
adc
cdq
sti
sub
ja
addr16
cmps
sar
std
inc
int3
mov
push
push
pop
fnsave
xor
imul
fisttp
or
jmp
sub
and
pop
pop
jnp
std
sbb
jb
mov
lds
outs
push
mov
dec
sti
pop
xchg
sahf
arpl
std
ret
ins
xchg
call
push
ja
popa
rol
lds
daa
cmc
movs
dec
push
pop
loopne
mov
(bad)
cli
pop
mov
push
dec
mov
adc
mov
dec
stos
dec
out
out
out
lock
inc
imul
xor
sub
push
xor
sub
fdivr
sub
ror
add
mov
sar
xlat
dec
push
sbb
mov
fisttp
jbe
jl
cs
fdiv
xor
push
mov
cdq
xor
jmp
push
jbe
push
jnp
adc
js
jmp
int
xchg
mov
pop
fstp
jmp
retf
ret
sar
ret
jmp
cmp
out
js
in
inc
sub
aaa
sub
push
loop
mov
mov
xlat
inc
imul
ror
dec
adc
iret
hlt
cmp
inc
shl
adc
mov
(bad)
xchg
or
fndisi(8087
xchg
idiv
jecxz
jge
push
jg
mov
jns
shl
or
dec
xchg
cli
out
xlat
or
dec
xchg
jmp
leave
cld
add
popa
dec
sbb
std
(bad)
sbb
fcom
lds
push
stos
(bad)
nop
mov
and
jno
sub
mov
jg
movs
lahf
mov
ins
mov
clc
mov
xchg
int
push
mov
and
pop
test
fldpi
dec
sbb
ret
cwde
fisttp
or
and
inc
pop
fld
cld
lock
(bad)
adc
in
dec
mov
xor
out
inc
mov
cwde
mov
sti
and
movs
add
adc
movs
cmc
call
mov
or
sbb
mov
rol
add
mov
(bad)
xor
inc
fs
int3
(bad)
stos
xchg
and
mov
dec
mov
jmp
inc
inc
sti
sbb
cmp
or
fs
xchg
adc
pandn
jnp
inc
pop
dec
in
jno
out
dec
lds
ins
jnp
jmp
in
fsub
adc
and
pop
gs
xor
repnz
das
and
inc
push
inc
js
jnp
pop
jl
(bad)
arpl
cmp
xor
cdq
aaa
inc
jo
fs
jne
cdq
jle
iret
rol
inc
dec
mov
push
loop
mov
jmp
cli
sbb
jns
or
ror
lods
sbb
aad
mov
sub
movs
out
cmp
sbb
pop
leave
lahf
(bad)
scas
inc
jmp
stos
mov
mov
jne
jmp
sbb
rcr
xchg
leave
ins
lods
jmp
pop
and
movs
test
outs
mov
dec
ret
retf
xor
leave
push
jecxz
std
pop
pop
jl
ror
cmp
call
xchg
dec
sub
push
repnz
dec
push
push
inc
and
push
cdq
xor
mul
xchg
push
jo
idiv
clc
in
psllw
sbb
sub
aaa
adc
or
out
cmp
dec
mov
in
sbb
(bad)
loope
or
mov
mov
mov
mov
out
(bad)
xor
add
mov
int3
cmps
xchg
cs
xchg
hlt
imul
in
xchg
cmp
ret
fild
rcl
mov
push
add
out
inc
std
mov
pop
push
and
xchg
xchg
cs
ja
test
lods
pushf
fbstp
je
push
into
mul
pusha
mov
mov
int3
jge
push
aaa
inc
les
push
and
call
movs
mov
and
adc
es
and
sub
xchg
in
mov
adc
xor
mov
js
imul
jge
ja
test
mov
leave
mov
push
xchg
mov
lahf
and
test
jb
rcr
pcmpgtw
dec
xlat
lods
sub
(bad)
shl
stc
and
fmul
dec
test
fnstcw
std
cld
jnp
fimul
mov
fs
shl
pavgw
dec
arpl
imul
mov
xlat
nop
inc
mov
clc
retf
dec
mov
dec
cs
jge
cs
add
push
mul
sub
mov
pop
stos
sbb
cmc
ret
sahf
mov
push
test
popf
pop
adc
gs
inc
fs
sub
mov
daa
mov
pop
inc
iret
mov
cmps
shr
outs
xchg
test
ins
inc
mov
arpl
ja
retf
sbb
retf
mov
xchg
in
in
aaa
fs
jecxz
pop
std
(bad)
je
imul
mov
push
dec
xchg
add
inc
mov
imul
je
rcl
retf
pusha
xor
cmp
clc
xor
je
cld
mov
inc
lds
sub
(bad)
lea
fild
repnz
movs
adc
mov
and
pushf
sbb
dec
sahf
bound
sub
in
mov
cmp
and
push
mov
jns
int3
jo
test
(bad)
dec
pop
or
pop
(bad)
popf
cmp
jno
jg
rcl
pop
das
repnz
mov
(bad)
outs
retf
jae
mov
call
cdq
sbb
inc
sbb
loope
ins
jae
(bad)
sar
xor
int3
add
inc
dec
retf
sbb
and
lahf
xchg
xchg
in
jp
jne
das
(bad)
lock
mov
inc
mov
jno
inc
jnp
xchg
push
gs
and
int
push
fisub
jb
aaa
xchg
lods
out
enter
aad
ror
add
cmps
ret
addr16
scas
xlat
ins
cwde
add
add
mov
xchg
cmp
stos
xchg
sub
push
loopne
lods
sub
iret
ins
pushf
(bad)
lods
jae
lods
cmp
frstor
fs
xlat
fsubr
xlat
sbb
daa
enter
call
or
and
pop
mov
push
ret
push
cmp
sub
(bad)
or
call
jne
mov
xchg
lods
xchg
mov
pop
mov
test
sbb
fimul
movs
shr
xor
xor
call
(bad)
sti
int3
xor
lods
push
xchg
stos
inc
xchg
adc
sti
sub
aad
or
scas
add
inc
int
sub
cmps
dec
mov
movs
outs
mov
push
xor
cmc
(bad)
cld
pop
ja
or
int
sub
sub
lahf
jmp
sub
mov
or
jbe
mov
sub
addr16
aas
xchg
cmp
lea
ret
jne
or
cli
and
add
sub
xchg
test
jg
xchg
fcmovnu
(bad)
mov
loope
jecxz
and
sub
add
lock
jecxz
pushf
and
rol
push
pop
std
xchg
(bad)
jne
mov
sub
xchg
pop
fmul
sbb
ret
pop
ror
xor
xor
sbb
fstp
mov
aad
arpl
rol
dec
cld
mov
xchg
sbb
add
xor
add
aaa
ret
mov
jb
test
cmc
test
and
(bad)
lods
pop
cmps
pop
sti
xchg
(bad)
jo
adc
mov
out
leave
stos
ins
inc
mov
mov
sbb
ret
inc
adc
dec
gs
in
pop
sub
sar
push
popf
mov
push
es
loope
pop
or
and
jnp
push
shl
mov
add
or
jecxz
bndstx
popa
jbe
test
stc
loopne
and
jne
xor
fs
pushf
repz
cmp
jmp
jnp
mov
adc
or
call
lods
mov
or
iret
jecxz
in
(bad)
push
out
inc
mov
fild
stc
je
and
adc
jg
ss
jle
shl
(bad)
shl
push
stos
imul
push
jns
call
xor
outs
inc
xchg
movs
dec
test
sub
inc
fdiv
hlt
pop
hlt
adc
adc
clc
xchg
retf
inc
jg
or
dec
enter
cmp
das
and
lds
sub
xchg
push
call
in
mov
add
out
adc
aas
jle
(bad)
pop
dec
cmps
std
xor
jne
repnz
data16
mov
mov
or
xlat
sbb
sub
frstor
stos
sub
(bad)
mov
(bad)
stos
jb
sub
(bad)
ss
fiadd
cmp
retf
mov
inc
popf
jbe
cld
and
push
dec
or
mov
xor
dec
push
pushfw
dec
adc
xor
sbb
inc
add
test
inc
inc
adc
test
or
cmps
sbb
add
ins
das
lea
xor
xchg
mov
mov
stos
adc
mov
js
sbb
dec
loop
mov
mov
jg
or
xlat
dec
mov
xor
lods
(bad)
jl
call
sbb
lods
out
lock
push
sub
call
inc
jb
pop
adc
push
(bad)
sbb
xchg
xlat
jp
sar
(bad)
and
push
adc
dec
inc
dec
cmp
daa
add
mov
retf
mov
push
out
jp
or
popa
in
sub
and
adc
sbb
mov
inc
sub
pop
xor
xor
add
les
add
sbb
dec
sti
cmp
aad
mov
or
addr16
mul
sbb
test
xor
jmp
and
or
out
push
cmc
dec
mov
nop
mov
mov
sahf
lods
test
js
push
or
pop
mov
xchg
sub
add
jo
cmp
sahf
cs
push
xor
(bad)
mov
fcom
dec
inc
cdq
pop
fcomip
xor
pusha
hlt
bound
aad
scas
cmp
(bad)
out
sahf
and
(bad)
mov
repnz
jne
mov
fdivr
retf
sbb
jbe
push
adc
lds
ret
inc
sar
jae
jp
mov
cli
mov
lods
push
int
out
lahf
retf
(bad)
repnz
fsubr
scas
xor
(bad)
scas
outs
dec
xor
pop
jb
pop
mov
add
inc
sbb
ret
call
cld
push
daa
pop
jb
leave
pop
add
or
ins
mov
into
fnstenv
jo
in
sub
cli
push
pop
and
movs
lods
sub
jge
mov
shr
jmp
jl
pop
outs
or
xor
ret
inc
test
push
pop
jno
ss
and
jg
cmp
mov
pop
xchg
sub
call
cmp
lea
das
ret
and
fcomip
inc
mov
movs
mov
jbe
sub
fnstsw
xor
repz
outs
or
cli
lods
lds
ret
pop
shl
pusha
xor
mov
push
jle
mov
cdq
add
mov
pop
scas
movs
push
div
pop
fiadd
fnstcw
retf
nop
mov
xor
adc
aam
mov
jno
jmp
pop
push
xor
push
div
mov
pop
repnz
push
arpl
pusha
xchg
push
addr16
fs
or
sbb
xor
jecxz
dec
sub
clc
mov
fstp
imul
cmp
repnz
test
div
fcom
push
adc
cmp
ror
(bad)
jns
test
out
xchg
sti
sar
xchg
test
pop
cmc
mov
mov
aaa
popa
mov
jae
les
ja
push
sub
(bad)
adc
cdq
mov
mov
dec
jbe
(bad)
test
sbb
jo
xor
push
outs
sbb
add
inc
test
and
addr16
stc
cwde
out
or
stos
icebp
sti
neg
cli
push
fidivr
pushf
mov
arpl
inc
adc
xor
jecxz
add
add
cmp
mov
(bad)
inc
jno
je
or
fwait
add
push
into
mov
es
push
pusha
outs
mov
or
and
aas
mov
and
movs
cmp
inc
retf
iret
not
mov
ins
sahf
lods
test
xchg
sub
mov
inc
cmps
in
xchg
push
mov
pop
aaa
int
mov
daa
sub
out
add
fbld
push
xor
add
and
and
ficomp
jge
add
lds
sub
sahf
mov
jnp
retf
loope
adc
cwde
mov
cwde
cmp
ss
call
add
out
pop
mov
inc
xlat
aaa
inc
mov
das
lock
jb
retf
sub
push
movs
xchg
ins
cmp
sbb
adc
push
mov
shr
icebp
in
cld
fs
mov
mov
pop
arpl
ret
stos
adc
repz
jmp
ins
dec
adc
jae
add
mov
out
fs
movs
mov
enter
dec
sar
inc
arpl
ins
xchg
push
popf
push
lahf
xchg
fnstenv
enter
inc
outs
call
daa
mov
jae
xor
push
fistp
cld
adc
and
xor
sbb
lods
xchg
jp
aam
mov
neg
adc
jl
inc
or
push
movs
or
daa
or
leave
(bad)
sub
push
xor
jg
daa
inc
call
imul
(bad)
jne
xor
mov
loope
pop
cmps
mov
mov
and
mov
xchg
jno
ds
js
or
aam
ds
xlat
bound
xchg
das
xchg
xchg
scas
cmps
dec
inc
popf
shl
fidiv
inc
mov
call
fsub
xor
jp
push
into
sahf
or
mov
int
popa
fwait
or
pop
mov
pop
aad
ds
mov
in
dec
in
and
iret
je
fsub
repz
movs
jo
sbb
jne
mov
cmp
mov
cmp
pop
arpl
pop
popf
push
fs
mov
rol
les
jle
(bad)
ror
daa
call
add
or
or
std
je
dec
dec
cmp
or
dec
pusha
jmp
in
mov
mov
jle
mov
xchg
(bad)
jmp
pop
lea
es
stos
test
loope
add
dec
les
shr
xchg
and
mov
mov
les
pop
push
xor
pop
or
test
cmp
(bad)
pop
jnp
add
add
neg
sbb
dec
sbb
xor
mov
cdq
jae
sub
test
xlat
fcomi
scas
jns
xchg
gs
xchg
mov
fnsave
test
shl
(bad)
mov
std
cmp
adc
or
outs
hlt
aaa
cmps
int
adc
ss
inc
mov
or
dec
retf
add
cmc
sti
sub
and
xchg
cbw
retf
pop
sbb
imul
int3
dec
je
cwde
mov
push
mov
imul
dec
push
mov
sub
ret
push
lock
push
clc
xchg
push
retf
in
mov
lea
out
fistp
add
cmp
pusha
popf
andps
(bad)
fsubr
dec
xor
imul
sub
outs
lods
out
mov
inc
test
jg
ror
jecxz
xchg
das
(bad)
in
pop
jnp
xchg
cmps
xor
bound
jnp
inc
loop
and
mov
fcmovnbe
test
mov
ror
dec
inc
cmps
icebp
scas
mov
outs
mov
ds
pusha
dec
loop
cmps
push
in
and
in
ss
pop
adc
in
in
jnp
add
pop
adc
repz
jne
xor
pop
scas
ret
repz
and
push
nop
mov
fild
pop
ss
test
pop
mov
(bad)
push
pop
xor
ret
cmp
mov
pushf
ret
adc
dec
fucomi
sar
nop
sbb
ret
movs
int
pop
(bad)
adc
imul
pop
or
loop
mov
test
xlat
and
jbe
jl
sar
fsubr
rcl
in
or
mov
imul
out
jle
pop
push
and
retf
cmp
in
(bad)
mov
clc
imul
xchg
pop
(bad)
jle
in
mov
add
rol
adc
(bad)
adc
mov
dec
aam
sub
push
push
or
sahf
mov
sbb
aaa
es
les
loope
cdq
es
rcl
pop
and
retf
call
out
in
dec
jg
xchg
mov
pop
jp
xchg
mov
mov
jbe
inc
daa
int3
xor
xor
push
lock
repz
ror
push
jae
(bad)
fidivr
dec
push
ins
pop
in
sub
arpl
push
es
sbb
sub
and
cmp
nop
ss
lahf
or
dec
xlat
ds
jg
jnp
int3
ins
ret
jbe
jmp
push
xor
mov
out
xchg
stc
dec
(bad)
cdq
cwde
stc
ret
mov
daa
add
inc
mov
lahf
pop
jg
sbb
ins
push
scas
xor
sub
push
or
jbe
sti
and
ds
jmp
pop
mov
outs
pop
aas
or
in
xor
inc
sahf
or
out
test
clc
int3
aad
jne
jno
mov
in
jo
cmc
(bad)
sahf
scas
mov
cmps
bound
jecxz
repnz
iret
mov
dec
adc
pop
addr16
push
dec
cmp
in
int
xlat
jge
mov
in
or
loope
inc
add
add
fxch
mov
pop
and
add
xchg
arpl
mov
pop
inc
ds
mov
retf
and
ins
xor
int3
cmp
fwait
push
retf
loope
jnp
inc
pop
xchg
mov
icebp
push
cmp
outs
arpl
scas
cmp
mov
sbb
adc
adc
adc
hlt
dec
std
jecxz
sub
jb
in
(bad)
jmp
or
aas
inc
mov
aas
inc
push
repnz
cld
jp
fcmovb
arpl
add
outs
test
cmp
inc
push
(bad)
jmp
mov
xchg
lahf
xchg
nop
mov
(bad)
out
jnp
in
adc
gs
jo
into
or
lock
jmp
jns
mov
xchg
sub
in
adc
or
cld
xchg
in
in
pop
adc
in
inc
push
mov
mov
jmp
imul
jp
fild
fdivrp
movs
lea
les
add
call
sub
repz
adc
sbb
mov
stos
dec
and
int
daa
imul
xor
pop
test
dec
jns
xor
test
mov
dec
xchg
mov
or
into
xchg
data16
inc
xchg
dec
lahf
dec
ret
jmp
add
movs
fbstp
sahf
inc
or
push
xchg
movs
xchg
not
ss
je
popf
pop
jge
mov
leave
mov
mov
and
stc
in
fs
mov
imul
rcl
repnz
jne
jmp
sub
xchg
nop
xor
or
imul
loop
dec
mov
retf
xor
loopne
and
add
cdq
and
in
(bad)
push
or
inc
mov
push
mov
aas
lock
inc
mov
dec
(bad)
in
loope
sti
pop
sub
add
pop
dec
bswap
fstp
cmps
repz
xchg
add
jl
sub
sub
pushf
add
jo
arpl
lods
div
or
mov
or
int3
repnz
mov
push
out
pop
fdivr
je
fidiv
and
mov
adc
out
xor
or
nop
xchg
sub
push
xlat
out
fcom
jae
cmp
dec
pop
mov
fld
stos
jnp
jne
sub
aaa
ins
pop
mov
repz
fucomip
dec
fild
cmp
aam
call
in
ins
scas
jno
and
imul
pop
repz
or
pop
jnp
xchg
je
sub
pop
imul
adc
xor
pop
jg
mov
sbb
adc
mov
mov
test
or
inc
cmp
mov
or
add
cmp
jmp
xchg
ret
out
jbe
in
push
cmc
pop
jbe
jno
dec
jmp
mov
in
or
jae
cmp
cmps
xor
movs
inc
test
cmp
ficom
ds
mov
clc
int
fs
cmps
mov
xor
std
mov
stc
ja
icebp
jnp
xchg
mov
mov
xor
xor
data16
xchg
iret
pusha
xor
push
dec
dec
mov
loopne
adc
clc
sub
dec
scas
jmp
sahf
js
mov
and
cwde
pop
push
pop
popf
jecxz
aas
stos
add
fist
xchg
shl
cmp
ss
popf
inc
sar
pop
fnstenv
loopne
xor
and
adc
push
mov
retf
mov
in
cmc
mov
lea
call
into
call
inc
cmp
jge
pop
sti
rcl
xchg
inc
mov
sahf
push
shl
mov
add
jb
aam
ja
jno
loopne
shl
mov
ins
jecxz
pop
pop
out
fs
pop
leave
xor
push
xchg
(bad)
jae
xchg
in
popa
xor
cs
or
pop
lods
test
lods
retf
movs
mov
cwde
das
xchg
hlt
idiv
jmp
ja
push
js
into
and
add
sbb
push
hlt
push
lock
cwde
cs
mov
sub
test
push
and
jl
lods
cmp
mov
call
or
jo
mov
test
nop
rcr
dec
icebp
retf
or
mov
and
inc
xchg
inc
xchg
js
push
sub
dec
es
ret
mov
xor
lahf
ret
mov
jg
ds
int3
push
mov
adc
mov
add
cmps
dec
and
sbb
xchg
(bad)
jnp
aam
pop
das
xor
jbe
xchg
mov
jb
jmp
mov
lods
clc
hlt
or
js
sub
shl
gs
rcl
call
jne
es
and
pop
jmp
jl
ins
jmp
cmps
adc
fcomp
imul
jmp
adc
mov
mov
push
or
imul
out
mov
mov
cld
xchg
lods
xor
ins
add
and
xor
int
retf
add
fcomp
mov
pusha
movs
add
adc
ja
ja
pushf
call
bound
xor
sahf
jne
mov
mov
push
jb
retf
in
mov
movs
loope
outs
push
inc
enter
xchg
mov
clc
inc
(bad)
mov
stos
inc
sbb
(bad)
iret
mov
shr
mov
dec
xor
add
dec
mov
gs
loopne
mov
ret
ja
mov
dec
lds
outs
sbb
ins
pusha
add
(bad)
pop
nop
xchg
ror
mov
jae
dec
jmp
dec
inc
nop
cdq
mov
or
sahf
jne
or
xor
cli
mov
into
stos
in
xor
into
(bad)
sti
sub
std
and
pop
cdq
pushf
pop
int3
adc
rcr
jns
and
or
dec
xor
adc
sub
sbb
mov
cmp
stc
and
je
gs
mov
lea
stc
sbb
push
ret
mov
mov
mov
and
sbb
cmp
dec
repnz
mov
popf
cld
mov
cmp
sub
jecxz
cmp
ss
jnp
out
push
stos
pop
or
cmps
or
xor
cmp
fucom
test
fcom
push
inc
add
and
xchg
sbb
sub
lock
mov
enter
cwde
lock
mov
or
mov
jle
iret
jnp
cmp
and
cmps
jnp
xor
cmp
push
adc
inc
adc
lahf
cmp
or
xchg
int3
stos
and
dec
sbb
scas
cmp
xchg
outs
xchg
ds
push
(bad)
out
dec
or
(bad)
jmp
leave
movs
addr16
inc
pop
jae
push
(bad)
xor
jns
aas
pushf
ja
shl
inc
das
sbb
stc
addr16
repz
(bad)
lahf
outs
pop
dec
ins
push
out
movs
cs
mov
(bad)
loop
pop
fcomp
dec
nop
cmp
lock
mov
adc
or
dec
xor
mov
(bad)
movs
or
mov
dec
xor
cmp
xchg
das
popa
aam
adc
jnp
loope
xor
rcr
cli
pop
xor
lock
repz
xchg
(bad)
dec
cli
adc
add
imul
cdq
jb
push
frstor
fldcw
cs
sub
cld
inc
out
pop
imul
push
xchg
and
push
jp
cmp
mov
mov
jge
cld
add
pop
out
jg
jp
xor
xor
fadd
loopne
jge
bound
leave
loop
adc
imul
cmp
push
out
dec
jb
xchg
xor
jecxz
sahf
imul
ret
xor
and
out
inc
inc
pop
out
shl
mov
add
and
cmp
mov
push
push
mov
adc
loope
xor
les
xchg
inc
int3
mov
inc
pop
sbb
mov
sahf
cmps
adc
out
pop
sbb
and
stos
loop
mov
out
in
repnz
inc
jo
push
ror
or
push
shl
cmp
push
imul
retf
(bad)
stos
jb
into
mov
add
into
out
repnz
push
cmp
add
outs
repz
mov
scas
movs
sub
add
mov
in
rdmsr
add
sbb
cmc
arpl
(bad)
sbb
mov
mov
adc
inc
xor
dec
push
(bad)
out
sbb
jg
ficom
(bad)
mov
or
jbe
lds
dec
and
xor
sbb
cmp
sub
mov
cmp
add
or
xor
adc
jns
mov
ficomp
out
fsub
int3
sar
jo
mov
sti
dec
xchg
cdq
pop
add
cmp
xor
outs
jle
fs
xchg
fst
pavgb
push
xchg
mov
sbb
adc
pop
sub
xchg
xor
cmp
inc
(bad)
xor
fdiv
cmp
and
jmp
in
(bad)
imul
mov
ins
and
push
out
mov
mov
dec
sbb
inc
xlat
das
iret
sbb
pop
mov
in
int3
dec
retf
push
dec
test
add
sbb
data16
leave
fxch
(bad)
pop
mov
js
mov
imul
test
in
mov
xor
loopne
daa
outs
inc
shl
loopne
out
jns
sub
stc
mov
sbb
(bad)
cmp
push
adc
out
cs
repz
sbb
pop
jp
(bad)
xchg
adc
scas
push
adc
in
gs
inc
jae
or
mov
daa
rcl
jnp
stc
inc
outs
inc
jecxz
jno
gs
jnp
cmp
popf
dec
push
inc
imul
inc
xor
jne
inc
sub
(bad)
mov
dec
xor
adc
pop
fdiv
cmp
mov
sbb
(bad)
bound
xor
add
mov
inc
stos
mov
(bad)
xchg
fsubr
push
or
and
popf
push
dec
pop
es
mov
xchg
mov
out
fwait
test
or
jo
retf
(bad)
add
mov
pop
push
aad
test
cdq
data16
xor
xchg
dec
mov
arpl
cdq
jle
pop
nop
addr16
and
xor
and
inc
cmps
and
mov
dec
ret
das
shl
dec
or
sub
aad
loopne
out
aaa
cdq
inc
pop
sbb
jb
adc
sahf
add
xor
push
jmp
test
sbb
inc
ror
and
(bad)
fistp
test
lahf
add
ret
jns
cmp
test
mov
push
bound
clc
xchg
mov
sti
fld
outs
(bad)
loop
mov
inc
jnp
inc
cmp
cmp
push
jg
ret
in
jl
mov
int
pop
and
sahf
or
inc
icebp
inc
sar
imul
or
inc
xor
push
pop
scas
test
xor
sub
and
or
xor
adc
out
mov
push
fadd
movs
pusha
inc
call
jecxz
aam
push
mov
dec
mov
xlat
and
jne
cmp
lea
pop
jecxz
cmp
add
jle
pop
enter
mov
cs
rol
jge
adc
push
jnp
dec
adc
fsubr
push
or
in
cmps
jns
(bad)
jge
je
ret
jl
aam
rcl
dec
or
aas
cmp
std
bound
xchg
mov
xchg
mov
popf
dec
jl
or
test
mov
mov
inc
jae
push
and
ds
psadbw
scas
xor
inc
pop
aad
xor
push
rcr
jl
sub
sbb
cmp
pop
das
fidiv
sbb
dec
mov
xor
mov
mov
xchg
mov
iret
shl
cmp
pusha
mov
call
dec
jl
xchg
adc
ins
dec
pop
xchg
pop
lahf
shr
les
fmul
inc
dec
mov
fbld
inc
sbb
inc
xchg
sbb
mov
adc
xchg
nop
and
and
fisubr
ins
jo
push
push
pop
or
or
mov
sub
fwait
pusha
fs
ja
les
push
and
xchg
sbb
lock
(bad)
icebp
jbe
and
cmp
retf
and
loopne
outs
and
jecxz
add
mov
xchg
add
lods
lock
dec
in
sbb
std
add
add
(bad)
mov
adc
add
mov
xchg
pop
mov
push
mov
add
ja
int3
sahf
into
jns
aad
sub
mov
enter
popa
fcomp
mov
(bad)
dec
stos
in
dec
cmp
(bad)
jbe
xor
push
dec
shr
out
mov
jb
rcr
push
fild
pcmpgtb
mov
lahf
cmp
ds
push
xor
lahf
imul
cmp
shl
mov
clc
repnz
and
push
mov
and
out
test
lahf
scas
mov
sbb
sar
shr
add
je
jecxz
mov
mov
add
mov
push
mov
rol
dec
xchg
xor
jae
jo
rcr
test
jne
int3
and
add
pop
leave
loope
ins
dec
fs
mov
or
rol
mov
and
pop
mov
mov
repnz
push
jmp
daa
popf
pop
sub
add
in
js
mov
popf
push
hlt
ja
xchg
cdq
test
out
mov
scas
mov
dec
jbe
pop
frstor
pop
dec
(bad)
pusha
or
pop
pop
sbb
out
dec
popf
mov
pop
xor
pop
nop
ror
mov
stos
in
sbb
pop
pop
mov
(bad)
jl
sub
test
cmp
push
cmp
mov
dec
xor
mov
push
jb
hlt
pop
pop
test
jmp
mov
and
aas
add
add
sbb
xor
mov
dec
push
stos
xchg
lods
imul
xor
bound
jg
stos
or
retf
ds
data16
arpl
es
movs
sbb
out
das
push
ficomp
in
xlat
jl
pop
sub
aad
cmc
pop
sub
aad
aad
ss
sub
add
inc
mov
ins
out
and
(bad)
push
sti
adc
cmp
push
cmp
xchg
mov
mov
stos
dec
es
leave
jge
pop
adc
add
lea
xor
pop
xchg
mov
sti
(bad)
inc
pop
jmp
repnz
scas
scas
adc
les
inc
jmp
jecxz
imul
mov
ds
add
pusha
stos
idiv
xor
in
mov
mov
cmp
repnz
pop
out
push
dec
(bad)
sahf
fisubr
out
mov
rcl
xchg
pop
mov
pop
cli
or
mov
mov
(bad)
repz
arpl
in
(bad)
and
test
mov
jp
icebp
and
cmp
jmp
cmp
nop
cmc
cmp
pop
sbb
pop
ror
in
or
push
dec
jmp
pop
jmp
js
push
retf
in
(bad)
adc
xchg
enter
lock
mov
jmp
lds
pop
xor
xor
ja
int
mov
inc
cwde
and
retf
and
sti
cmp
lds
hlt
cmc
data16
(bad)
lock
imul
cmp
repnz
sub
pushw
jns
pop
sbb
in
stos
sbb
cdq
dec
mov
xchg
adc
loope
add
adc
lock
rcr
or
lahf
push
sar
and
sbb
out
add
jp
push
and
xlat
xchg
shl
pop
jo
lods
xor
int
jb
sbb
fld
push
jl
jbe
aas
jge
rcr
cmps
inc
jecxz
xchg
iret
add
xor
outs
and
mul
cmp
test
sub
jle
std
sbb
cwde
jns
adc
(bad)
iret
test
mov
adc
ins
cmp
jb
and
adc
inc
xor
pop
fisubr
ss
cmp
and
pop
pop
inc
(bad)
mov
popf
popa
or
mov
xchg
mov
mov
xchg
div
loop
add
les
xor
and
ror
retf
mov
mov
jns
retf
mov
stos
ret
or
pop
jecxz
mov
es
mov
cld
pop
cmp
push
test
sub
out
stc
popf
and
jp
cld
inc
es
mov
mov
push
sar
adc
jl
mov
bound
adc
cdq
push
test
pop
cmp
inc
arpl
add
jbe
pop
or
mov
or
or
mov
sub
ds
daa
mul
dec
inc
iret
loope
aad
cli
bound
nop
rcr
aas
test
xchg
sbb
dec
cmp
ins
test
ret
xor
cld
and
psubd
jns
stos
inc
mov
call
inc
push
cmp
cmp
ror
add
data16
repz
pop
cmp
test
xchg
inc
mov
adc
mov
push
xor
in
(bad)
out
push
push
dec
repnz
cld
sbb
cwde
pop
in
movs
ins
or
rcl
xor
pushf
jb
dec
in
jl
cmp
fldenv
es
out
ss
and
repnz
sub
mov
mov
and
dec
mov
push
add
rcr
sbb
gs
dec
out
cmps
sub
mov
sbb
cmp
adc
mov
mov
retf
cmp
scas
sbb
fwait
arpl
jns
adc
test
push
cmp
repz
rcr
jne
xchg
scas
mov
ror
mov
dec
call
adc
mov
add
push
gs
mov
sbb
xchg
push
addr16
out
inc
out
ss
scas
retf
add
inc
xchg
out
or
pop
out
xchg
lock
jnp
push
xchg
sahf
in
fcmove
adc
mov
clc
mov
jb
push
ins
stc
call
or
retf
xlat
cmp
xchg
dec
add
push
jmp
push
push
mov
fs
cmp
jecxz
(bad)
mov
mov
pop
daa
mov
stos
test
pusha
xchg
push
lods
dec
test
and
sub
ds
xchg
inc
inc
div
lods
sbb
xchg
jb
push
push
mov
daa
and
adc
loopne
push
(bad)
jmp
pusha
pop
iret
fcom
adc
sti
xchg
std
or
test
xchg
push
and
jp
push
loopne
sbb
pop
and
xor
xchg
into
rcr
dec
sub
je
inc
arpl
mov
mov
aaa
fst
mov
in
mov
pusha
ins
jp
mov
dec
outs
enter
sbb
repnz
aaa
fs
in
jge
imul
or
or
outs
enter
fadd
call
jbe
hlt
test
std
bound
cmc
and
mov
dec
loop
ins
xchg
repz
int
pop
and
dec
jmp
cmp
fs
cmp
cwde
int3
and
das
ret
lods
add
push
ficomp
push
clc
jg
test
cmps
outs
sub
mov
loop
rol
cdq
shr
pop
and
retf
fiadd
mov
push
lods
mov
sbb
mov
into
adc
in
sbb
call
mov
sub
mov
retf
and
inc
test
jo
sub
mov
movs
(bad)
scas
inc
rol
fwait
mov
push
cmp
or
lods
les
imul
mov
in
jmp
jmp
jno
adc
xchg
pop
push
adc
and
mov
ja
jbe
or
aas
aad
cs
xchg
mov
pop
and
and
dec
and
call
add
xor
icebp
cmp
sbb
bound
(bad)
mov
(bad)
fsin
xor
jbe
cmp
xchg
rcr
pop
inc
call
movs
push
(bad)
or
ret
adc
mov
and
sti
mov
movs
mov
fcomp
push
fstp
rcr
inc
shl
test
call
mov
sbb
jl
jmp
adc
mov
leave
movs
push
pop
popf
test
loop
push
mov
bound
retf
ja
int3
mov
sub
iret
add
mov
push
mov
cli
mov
lods
leave
push
aaa
mov
test
stos
mov
enter
push
mov
sub
mov
add
retf
push
pop
sub
dec
cmp
data16
sub
xchg
or
loop
jb
test
aad
xchg
add
inc
cs
imul
imul
or
test
cmp
rcr
iret
shl
mov
and
shl
cmp
sub
dec
fdivr
sub
cld
(bad)
clc
and
ja
and
(bad)
mov
aas
mov
aas
rcr
adc
mov
cs
xchg
ja
adc
mov
loop
and
outs
xor
mov
and
int3
in
push
scas
xchg
mov
xor
sub
ja
lds
cmp
jge
xor
cld
and
cmc
(bad)
push
cdq
push
mov
ds
pop
ror
bound
xlat
add
push
ja
test
test
dec
push
or
push
scas
retf
cmp
scas
movs
mov
and
rol
scas
or
outs
xchg
cmps
sti
xchg
mov
xchg
jg
aam
call
imul
or
push
outs
cmp
dec
(bad)
fcom
cmc
add
sbb
jecxz
push
out
jbe
gs
mov
loope
cmp
mov
fcomp
or
push
add
adc
sub
(bad)
and
jmp
inc
bound
push
dec
(bad)
jmp
pop
out
loopne
loopne
mov
ins
pop
rcl
xor
mov
nop
repnz
fcomi
les
inc
mov
jge
daa
std
inc
into
aas
inc
dec
xchg
xchg
inc
imul
test
fs
mov
(bad)
mov
adc
mov
mov
fwait
je
xor
mov
popa
jb
push
sbb
scas
dec
les
mul
xlat
pop
push
fs
daa
add
mov
dec
loop
push
pop
mov
cmp
inc
cmp
sub
push
stos
add
popa
popf
aam
sub
cld
retf
call
in
(bad)
cld
push
int3
push
add
mov
xor
or
pop
mov
jns
call
xchg
ret
lock
test
lds
push
fild
hlt
in
mov
mov
push
mov
xor
push
dec
and
rcl
adc
push
dec
out
adc
dec
or
pop
(bad)
inc
aaa
inc
push
push
mov
out
inc
mov
mov
lods
idiv
ret
shl
(bad)
daa
inc
pcmpgtw
imul
call
(bad)
mov
(bad)
(bad)
push
test
shl
push
jae
pushf
xchg
sub
pop
jge
hlt
aam
push
movs
adc
arpl
in
xchg
dec
test
mov
push
dec
not
ins
(bad)
xchg
out
scas
adc
iret
sbb
mov
adc
and
iret
rcl
fidivr
inc
sar
xchg
cld
xor
push
push
cmps
test
das
(bad)
cli
cmp
sbb
dec
iret
hlt
nop
mov
xchg
xchg
mov
stos
enter
jecxz
(bad)
jmp
push
repnz
sar
fwait
adc
inc
push
push
pop
stc
jmp
retf
jge
mov
xchg
(bad)
enter
add
pop
jg
xchg
adc
dec
dec
push
push
loope
mov
mov
pop
pop
daa
xchg
sub
adc
jl
out
js
fwait
jge
xor
retf
cmp
cmc
es
adc
sub
int
stc
dec
sub
push
ja
lds
push
aam
xlat
mov
shl
ficom
xchg
test
jmp
xchg
jbe
fadd
or
ja
dec
jnp
cwde
loop
push
sub
jl
push
nop
mov
icebp
sbb
add
xor
gs
sub
pop
mov
call
push
mov
addr16
xor
lea
inc
inc
ret
(bad)
(bad)
out
sahf
add
call
cmp
leave
and
pop
dec
jne
stos
ins
inc
test
stos
and
xor
int
int3
rcl
and
stos
std
mov
test
and
movlps
and
mov
cld
mov
mov
inc
cmp
mov
pop
pop
push
jno
adc
fidivr
push
int
adc
jbe
xchg
cli
loop
ja
cmps
push
xor
push
pop
(bad)
(bad)
call
test
cs
and
mov
fld
xor
cmp
cld
mov
mov
arpl
nop
fdiv
scas
pop
or
sub
xor
mov
push
xor
in
mov
pop
test
mov
push
das
pop
cwde
sub
in
pusha
jmp
sbb
mov
or
dec
and
loope
je
add
not
ds
test
mov
loopne
out
fimul
sti
pop
jnp
dec
mov
jmp
scas
push
fbld
rol
repnz
rol
daa
(bad)
jb
jb
inc
arpl
shl
mov
push
push
push
cld
xor
loop
je
xor
xor
rcl
fnstsw
dec
inc
jno
das
jmp
push
adc
mov
adc
mov
lods
adc
mov
(bad)
inc
inc
mov
pushf
xor
inc
add
lea
lds
retf
or
sbb
jg
fcom
stos
in
movs
jne
fcom
mov
cmps
sahf
icebp
cmp
pop
leave
add
ins
movs
(bad)
mov
mov
inc
jge
jae
inc
je
loopne
call
inc
scas
out
add
neg
(bad)
fimul
adc
xchg
imul
and
push
mov
repz
sub
jns
stc
sub
pop
add
inc
movs
xchg
mov
or
lods
cmp
push
sahf
scas
loope
mov
sbb
add
popa
test
or
pusha
mov
fiadd
cmps
shl
mov
mov
mov
cmps
movs
neg
dec
add
add
pop
cmp
and
jg
dec
loopne
jmp
jno
adc
test
dec
dec
add
jb
push
fisttp
call
push
adc
push
ss
add
(bad)
push
std
ret
(bad)
ds
das
sbb
lods
in
xor
sub
pusha
(bad)
sub
push
pop
bound
mov
inc
mov
jp
inc
sub
fsub
fistp
xlat
push
std
pop
fucomi
push
imul
push
stos
inc
pop
jmp
cld
aaa
sbb
mov
je
les
pop
push
ss
mov
cmps
in
add
inc
jns
push
popa
add
daa
mov
cld
mov
cmp
mov
sbb
cmp
cld
ss
or
jb
popa
cwde
jmp
and
xchg
cmp
mov
mov
inc
mov
sbb
aas
inc
sub
mov
dec
cwde
jp
out
fisub
je
fidivr
jmp
cmps
cmc
mov
fs
fsubr
mov
aas
cmc
mov
hlt
cmp
push
cli
xor
push
fst
sbb
push
jge
scas
mov
int3
call
fild
mov
push
pop
sub
dec
(bad)
arpl
out
std
aas
movs
push
sbb
cmc
xor
xlat
out
push
dec
push
jecxz
mov
mov
and
mov
push
les
or
xchg
xlat
ins
das
nop
mov
lahf
add
mov
cld
push
jge
popf
ja
xor
mov
mov
or
(bad)
jns
fcmovbe
mov
retf
adc
movs
jns
dec
fistp
xor
test
and
or
cmps
mov
push
(bad)
dec
adc
adc
jmp
sub
push
push
sub
pop
repnz
dec
jmp
jle
fucomi
push
and
repnz
ret
imul
adc
sbb
out
mov
out
xchg
aam
jo
sbb
or
xchg
xor
push
scas
jge
shl
mov
jbe
xchg
add
aam
shld
addr16
fdiv
xor
out
loope
dec
scas
js
add
sub
scas
lock
dec
pushf
dec
pop
idiv
movs
push
leave
sti
imul
pop
lock
xor
mov
or
mov
mov
jmp
ds
lods
fwait
and
jl
and
dec
jns
test
add
nop
mov
xor
jl
in
in
dec
fdivr
stos
pushf
xor
pop
cmp
jmp
mov
fild
mov
stos
lahf
mov
add
xor
mov
sbb
(bad)
cmc
(bad)
jecxz
adc
pusha
cmp
mov
sub
inc
mov
sub
sbb
cmp
pop
jmp
jle
add
push
jb
cmp
stos
push
mov
ds
lock
popa
or
xor
aad
clc
xor
and
int
inc
pop
xchg
nop
cwde
arpl
fwait
shl
mov
mov
int3
xchg
loop
cmp
mov
adc
scas
pop
gs
out
sub
jbe
jg
jbe
cmp
cmp
aas
or
add
pop
push
retf
js
pop
xor
retf
outs
fstp
adc
dec
test
call
clc
cmp
mov
adc
cmc
mul
cwde
(bad)
das
dec
stc
dec
(bad)
mov
scas
clc
pop
cmp
mov
out
(bad)
jnp
in
sub
cmc
push
nop
jne
hlt
test
and
sbb
jecxz
push
sbb
sbb
dec
cmp
xchg
xchg
mov
pop
mov
cmc
cs
stos
(bad)
mov
pusha
arpl
mov
push
nop
ret
nop
push
xchg
and
repnz
mov
pop
aad
(bad)
fwait
lahf
push
addr16
jo
outs
mov
out
aas
pop
retf
mov
frstor
xchg
mov
jns
scas
dec
out
adc
loope
arpl
pop
imul
out
jg
mov
sahf
(bad)
in
pop
(bad)
push
shl
jge
mov
jb
mov
xor
pop
fld
gs
test
ins
cmp
out
in
sbb
or
out
sbb
push
or
movs
adc
pop
pop
popa
jmp
ds
push
push
scas
mov
push
je
adc
ins
daa
add
inc
pop
jns
mov
and
dec
adc
mov
or
fisttp
jae
inc
test
ret
adc
cdq
jecxz
imul
adc
and
xchg
(bad)
sahf
xchg
and
jae
shl
imul
xchg
adc
sbb
ud1
push
xchg
push
xchg
jb
jp
into
xchg
lea
out
mov
cdq
aas
or
cmps
mov
movs
inc
xor
in
mov
cmp
jbe
pop
cmc
dec
mov
pop
scas
movs
and
and
xchg
jae
shr
out
sub
scas
cmp
int
repz
push
sahf
ja
out
pop
add
cmp
push
sbb
and
(bad)
ja
cld
sbb
loope
arpl
js
idiv
sbb
adc
sbb
in
repnz
stos
repz
cwde
js
ja
leave
(bad)
xor
mov
pop
mov
add
iret
mov
cdq
sub
sti
inc
and
push
dec
sub
leave
mov
lock
es
lods
mov
pop
inc
adc
and
out
(bad)
xchg
cmp
ret
push
inc
push
jl
sub
dec
sbb
stos
mov
rol
mov
(bad)
imul
pop
pop
sub
xor
adc
in
mov
daa
arpl
js
daa
scas
dec
xor
jmp
xor
aaa
dec
xchg
or
stos
test
push
mov
sub
or
packsswb
frstor
sub
pop
fwait
cmp
dec
mov
sub
mov
push
push
arpl
loop
jp
mov
call
mov
and
dec
sbb
mov
mov
and
xor
jg
push
cmp
rol
push
imul
xchg
(bad)
xor
int3
adc
xchg
imul
pusha
retf
pop
xor
or
outs
adc
js
lahf
push
aas
mov
xchg
in
inc
outs
cmp
xchg
cdq
mov
iret
fsubrp
push
(bad)
jne
dec
mov
mov
jo
addr16
adc
and
xor
ret
fcomp
mov
push
(bad)
retf
or
add
jbe
push
jbe
adc
sub
data16
mov
mov
std
imul
and
mov
test
or
jge
xchg
call
ss
add
lahf
test
std
imul
push
sub
popf
mov
lock
loop
mov
jl
inc
nop
shl
out
push
gs
push
in
push
cmps
lods
mov
ins
pop
pusha
popf
mov
mov
hlt
repz
mov
push
dec
pop
icebp
jns
inc
fcom
cmps
pop
movs
mov
out
hlt
sar
xchg
xor
mov
sub
jne
es
in
daa
mov
enter
add
aas
inc
lahf
cmp
fild
push
and
mov
xlat
xchg
scas
xchg
mov
cs
(bad)
mov
mov
push
sbb
xchg
push
les
cmpps
pop
repnz
das
jae
xchg
lods
cmp
call
mov
and
pop
enter
inc
jecxz
adc
outs
pop
leave
(bad)
adc
(bad)
mov
rcr
aad
sahf
cld
retf
les
popf
cmps
add
mov
or
add
xor
xor
cmp
push
xor
sub
neg
cmp
or
sbb
rcl
test
sub
pop
outs
cdq
retf
dec
jp
or
fs
repnz
test
or
sahf
aas
icebp
jl
ja
sub
inc
sbb
ss
in
or
sbb
jle
mov
lods
jg
pmullw
push
mov
add
stos
add
mov
fistp
mov
sti
mov
clc
fwait
sub
addr16
dec
in
xchg
add
inc
imul
lods
jmp
xor
leave
unpckhps
arpl
and
xchg
push
xchg
pop
sub
cld
shl
and
cmp
inc
pop
fucomp
cld
inc
pop
or
in
sbb
fwait
lds
sbb
dec
aad
test
js
push
inc
xchg
outs
dec
aas
scas
ja
outs
pop
test
fmul
cmp
mov
bound
cld
mov
adc
aad
pusha
cmp
dec
inc
sahf
(bad)
push
cld
out
and
movs
shl
adc
mov
scas
(bad)
pushf
push
pushf
ret
add
imul
cmp
xchg
daa
call
ret
pusha
outs
(bad)
popf
(bad)
fstp
retf
push
add
gs
xor
inc
and
cld
jge
jl
retf
lods
out
mov
cwde
cmp
mov
jg
jae
and
scas
push
xchg
sbb
ret
call
mov
jge
or
and
mov
inc
sbb
pop
xchg
push
ret
jno
int3
gs
dec
mov
mov
ret
idiv
(bad)
or
cmp
pop
neg
and
repnz
loop
mov
inc
mov
jmp
cmps
xor
lds
xchg
jl
cld
push
sub
inc
jle
cmp
std
call
push
stos
sub
xchg
(bad)
adc
loopne
and
iret
lahf
and
outs
dec
push
jmp
fstp
fdiv
int3
sbb
popf
mov
ss
scas
inc
mov
or
or
sub
mov
(bad)
mov
daa
jg
and
pop
iret
es
pop
mov
sbb
and
fnsave
or
rcr
lahf
adc
xchg
mov
in
and
data16
xchg
push
sub
dec
xor
sbb
cwde
xor
pop
pushf
ins
das
fild
stos
mov
int
mul
scas
adc
nop
or
xor
inc
lods
loope
dec
and
mov
xchg
popf
or
inc
out
hlt
movs
adc
sub
leave
aas
test
mov
sub
rcl
hlt
aas
dec
jae
pop
sbb
fdivr
dec
je
mov
loope
add
xor
sub
aaa
sub
scas
repz
dec
in
mov
inc
test
xor
add
rcr
xlat
out
sbb
xchg
ins
dec
nop
xor
mov
adc
sar
out
jno
sahf
aas
pop
pop
cs
sub
ss
push
out
fisttp
fsubr
sbb
xchg
pushf
imul
mov
stos
jae
cmc
sahf
gs
popf
sbb
jmp
adc
retf
fbld
jp
push
neg
cmp
pop
jno
imul
les
pop
cmp
lahf
xor
mov
mov
in
jmp
xor
call
jg
mov
jmp
mov
cli
add
sub
adc
or
inc
cdq
or
(bad)
lods
push
push
scas
inc
fs
and
xor
call
pop
test
shl
sub
and
pop
bswap
push
pop
adc
out
cli
int3
or
into
aas
cwde
mov
mov
and
xchg
mov
jne
lods
mov
ret
inc
pusha
mov
std
add
push
cmp
imul
mov
pop
data16
cmp
test
retf
add
iret
aas
adc
inc
popa
shl
movs
aad
fs
out
jno
jl
mov
fsubr
ja
sub
lds
jle
aam
sbb
cli
aas
dec
into
repnz
mov
adc
mov
shr
mov
jl
fisub
ret
fistp
cmp
jmp
sub
sub
movs
pop
jg
add
pop
mov
outs
test
and
shl
enter
cmp
daa
sbb
push
pop
xlat
xlat
clc
or
and
pop
es
out
ror
or
pop
(bad)
ins
jbe
sahf
dec
int
inc
sub
xchg
jo
popa
mov
gs
inc
dec
mov
jecxz
jmp
jle
pop
push
sub
test
xchg
xor
and
sar
fist
int
and
push
jmp
and
cmp
mov
add
inc
xchg
pusha
cmp
rcl
xor
int
inc
scas
int
xor
pushf
dec
das
das
sbb
sub
mov
jmp
dec
mov
jnp
call
lock
mov
jl
shl
jecxz
mov
push
imul
jp
gs
ret
das
jle
stos
lahf
mov
and
fdivr
daa
stos
sbb
ins
mov
aad
shl
push
int
inc
dec
jp
in
int
dec
repz
sbb
cld
adc
ja
jmp
xlat
iret
push
cmp
fistp
in
cmps
cmp
or
(bad)
sub
mov
clc
repz
mov
cmps
aaa
xchg
(bad)
ret
pop
es
lea
das
add
pop
(bad)
(bad)
mov
rcr
push
test
push
push
lea
scas
xchg
push
out
aaa
add
cs
jmp
mov
fs
enter
ds
retf
cmp
add
sbb
enter
shr
xchg
ins
test
mov
test
mov
repz
jo
or
xchg
push
xchg
(bad)
(bad)
repnz
retf
stos
lahf
dec
inc
mov
arpl
aam
or
jge
fistp
xchg
add
mov
pushf
mov
aas
ins
or
cmp
fwait
not
adc
cld
adc
and
pushf
lahf
or
shl
ror
pop
jmp
mov
nop
mov
je
retf
pusha
or
loop
stc
and
ins
sti
adc
push
movs
xchg
push
mov
xchg
or
xchg
(bad)
ja
ds
push
and
sbb
push
xchg
adc
aad
cmps
clc
jmp
jl
ja
les
aad
xor
mov
add
(bad)
xchg
je
cmps
stc
pop
push
jns
inc
add
pop
cld
(bad)
clc
(bad)
or
cmp
(bad)
aam
test
nop
and
fmul
add
cs
std
mov
push
cwde
mov
sbb
jle
adc
mov
jae
push
shl
test
call
mov
bound
sub
add
mov
adc
bound
repz
lods
je
lds
pop
cmp
jne
fild
aaa
xor
dec
fcom
ins
add
into
mov
scas
clc
(bad)
aad
pop
and
shl
or
jb
xchg
shl
push
cld
sbb
aaa
jnp
cld
stos
outs
sbb
hlt
mov
mov
mov
cmc
ficomp
mov
in
sahf
jecxz
sbb
inc
mov
dec
hlt
bound
dec
xor
fistp
or
and
sbb
xchg
inc
mov
push
addr16
fmul
test
adc
mov
cld
or
jge
rol
mov
sub
in
mov
and
loopne
icebp
daa
cmp
jne
movs
push
cmp
jl
mov
push
jns
xor
add
js
test
mov
xor
mov
out
push
scas
inc
aad
sub
cmp
addr16
pop
sahf
shl
fisttp
jb
fsub
cmp
fstp
cmp
ins
mov
retf
mov
jl
add
stos
test
dec
out
pop
imul
xlat
shl
test
in
cmps
pop
or
out
dec
mov
pop
test
adc
mov
call
mov
adc
(bad)
test
pusha
rcl
(bad)
pop
jge
pop
inc
scas
sub
xor
or
lods
push
popfw
push
sub
xchg
or
mov
inc
out
or
push
hlt
sbb
or
push
mov
cmps
pop
hlt
scas
adc
inc
push
test
cli
xor
mov
pop
nop
out
ror
cmps
mov
inc
mov
xchg
inc
adc
mov
test
xor
adc
out
push
int
rol
aaa
sub
mov
frstor
retf
call
mov
lods
adc
xor
test
sub
sbb
jl
add
lds
push
and
push
scas
gs
jp
pop
pop
ins
out
mov
push
jle
aas
scas
repz
dec
mov
mov
pop
lea
jns
icebp
not
xor
loopne
sar
push
and
cmp
and
les
outs
dec
fistp
ret
sbb
lods
xchg
mov
xor
daa
or
ret
sub
add
mov
fdiv
or
out
cmc
cwde
mov
or
nop
hlt
es
out
pop
mov
and
js
jl
jne
scas
mov
adc
fild
inc
dec
les
addr16
fild
or
mov
adc
ret
xchg
mov
xchg
popa
xchg
(bad)
jmp
mov
cld
push
ret
fld
pop
sub
mov
or
jnp
push
fld
shr
arpl
call
das
sahf
pushf
inc
sahf
imul
lock
dec
imul
or
lds
pop
shl
fisttp
cwde
ret
repnz
mov
sbb
jg
jns
je
mov
sbb
test
mov
cmps
jge
retf
inc
jmp
loop
aaa
mov
mov
xchg
pop
int3
(bad)
(bad)
add
sub
in
popf
xlat
cmp
inc
and
std
inc
or
icebp
mov
popf
jb
lods
pop
fidiv
test
loopne
sub
out
dec
xor
xchg
mov
fbld
xchg
push
fnstsw
mov
sar
loope
je
push
cmp
shl
add
sub
inc
cmp
frstor
mov
in
sbb
out
push
xor
adc
(bad)
out
test
fidivr
movs
cdq
xor
test
jmp
push
sbb
std
popa
and
imul
xchg
lds
ds
push
mov
push
dec
daa
jecxz
lods
test
mov
lods
mov
inc
(bad)
sti
sti
push
jbe
xchg
or
stos
stos
adc
hlt
mov
in
jg
add
adc
push
push
aaa
mov
scas
test
adc
push
or
mul
mov
(bad)
movs
add
push
mov
ins
jb
and
add
xor
jns
pop
jg
dec
mov
push
div
int3
mov
pop
sti
cmp
inc
aas
enter
sub
push
mov
cmp
loopne
nop
adc
mov
ins
ss
or
lods
inc
fld
movs
rcl
push
mov
std
std
cld
or
shr
inc
(bad)
cmps
pop
sbb
repnz
rcl
jmp
fist
push
xchg
in
test
(bad)
push
aad
call
cmp
adc
pop
adc
fmul
leave
enter
push
jecxz
fiadd
sub
pop
dec
sbb
into
lahf
into
mov
scas
pusha
push
pop
ret
scas
(bad)
jo
pop
ror
cmps
xor
cmps
mov
xchg
inc
int3
sahf
inc
jp
jbe
mov
enter
dec
call
js
mov
int3
xchg
jb
int3
jae
sub
inc
adc
cld
or
jmp
loope
add
cld
mov
clc
and
mov
pop
add
lods
(bad)
jl
mov
cmp
loope
leave
adc
dec
rep
mov
icebp
inc
sbb
fs
add
xor
sbb
mov
jmp
rcl
retf
pop
push
sub
jae
inc
les
iret
call
dec
xchg
mov
lds
fmul
or
adc
and
add
add
mov
daa
popa
adc
ins
in
sbb
mov
add
pop
jne
mov
test
jmp
and
in
pop
test
jns
push
push
cmps
shl
ss
out
jb
sub
sub
xor
fiadd
sbb
aam
lods
cwde
test
add
push
or
rol
mov
pop
xchg
jmp
imul
inc
push
push
js
push
or
dec
(bad)
and
adc
jmp
pop
cmp
and
jmp
repnz
dec
jmp
leave
jecxz
lea
scas
scas
(bad)
adc
dec
lods
jno
lahf
push
cmc
js
jl
dec
push
sbb
xor
dec
dec
add
jbe
jmp
cmp
outs
xchg
or
int
fmul
push
mov
jge
pop
jl
mov
rcl
add
ret
mov
dec
stc
mov
jns
cmp
or
push
mov
int
fist
lods
dec
mov
cmps
sbb
mov
stos
jmp
outs
sub
test
ja
stos
sbb
push
call
xor
mov
fldenv
dec
cmps
daa
cmps
je
ins
jle
mov
imul
and
inc
cs
es
and
mov
and
mov
pop
scas
cmp
stos
cmp
loopne
stc
pop
jae
mov
push
inc
fs
not
push
cdq
mov
add
out
jbe
sub
fcom
pop
xchg
pop
sub
fisub
fdiv
lahf
mov
jnp
adc
cmp
xor
loope
xchg
fldenv
push
ins
and
aam
into
mov
adc
sub
les
cmps
hlt
repnz
cwde
nop
add
hlt
dec
je
mov
sbb
push
outs
mov
lea
lock
loopne
lods
pop
(bad)
pop
iret
adc
or
and
(bad)
(bad)
jno
(bad)
push
in
es
mov
fcmovbe
int3
icebp
rcr
pop
cmp
ret
(bad)
xor
call
and
jmp
or
add
js
dec
(bad)
test
mov
inc
xchg
mov
add
sub
jbe
sbb
imul
(bad)
xchg
push
add
shl
cs
sbb
test
xor
xlat
inc
adc
pop
dec
or
push
sub
cmc
addr16
sbb
jmp
data16
arpl
pop
adc
xor
(bad)
pop
dec
out
into
mov
retf
inc
add
lods
in
les
pop
jo
pop
and
ret
jae
mov
loopne
(bad)
sar
into
sbb
ficom
or
pop
inc
aad
sbb
stos
sti
icebp
fdivr
push
xlat
push
(bad)
imul
pop
icebp
sti
lahf
pusha
leave
bound
retf
xchg
test
pop
push
test
clc
sub
dec
pop
ins
xchg
je
cld
test
sbb
push
mov
add
pop
xchg
(bad)
cmp
mov
fadd
mov
pop
dec
pop
imul
sbb
retf
inc
mov
mov
hlt
jmp
push
in
push
call
pop
push
pop
mov
lds
hlt
repnz
push
mov
je
xchg
xor
ret
jno
pop
scas
pop
and
(bad)
lahf
retf
repz
mov
daa
jbe
mov
fs
inc
push
into
test
stos
jmp
imul
mov
(bad)
jmp
sub
push
popf
and
push
and
add
mov
outs
pop
lahf
mul
or
mov
dec
xor
push
pop
add
and
lea
push
or
loopne
adc
sub
aam
repnz
and
fcomip
cdq
jne
nop
xchg
ret
or
mov
popa
inc
pushf
arpl
and
shl
jle
cli
leavew
in
mov
mov
pop
mov
in
adc
mov
jp
fadd
fstp
(bad)
sub
push
jecxz
mov
sbb
scas
mov
or
mov
ss
scas
sbb
popf
mov
ret
mov
fxch
cmc
mov
in
xor
jmp
mov
aam
mov
pop
out
pop
mov
ffreep
mov
mov
or
mov
scas
xor
adc
in
ret
xchg
nop
out
mov
adc
jno
mov
out
loopne
ret
xchg
pop
or
or
dec
in
call
fimul
stos
adc
call
adc
ds
or
imul
je
(bad)
stos
sub
(bad)
mov
jmp
mov
stos
cmp
addr16
test
cmps
retf
push
xchg
fnsetpm(287
add
and
add
sbb
adc
push
xchg
jb
xor
and
inc
and
xor
mov
into
mov
cdq
xor
adc
and
push
cmp
fiadd
xchg
add
xor
test
popa
jae
aas
sub
mov
stos
xchg
and
cmps
adc
arpl
or
dec
mov
lds
mov
jg
inc
jae
mov
xor
xchg
jmp
shl
aas
idiv
iret
dec
retf
add
mov
fstp
inc
adc
fild
inc
mov
js
sahf
jl
dec
call
mov
popa
cmp
pop
inc
es
adc
daa
es
pop
xor
fldcw
jae
rsqrtps
sbb
xchg
add
stos
xchg
mov
mov
xchg
jne
add
mov
xchg
cmc
sar
outs
add
les
dec
(bad)
dec
mov
mov
lods
rcl
mov
(bad)
shl
xchg
std
add
pop
xor
jmp
mov
lods
xchg
lock
mov
ret
adc
je
cmp
sbb
mov
dec
sahf
mov
scas
in
clc
xor
movs
rcl
dec
inc
arpl
mov
(bad)
fxch
lods
ret
dec
loopne
add
sbb
fild
call
rol
jmp
in
cmp
sti
mov
jno
sbb
je
adc
jl
stos
rcr
jmp
jl
mov
ds
aaa
popa
iret
jnp
xor
sbb
lods
clc
movs
xchg
push
or
or
loop
inc
ins
xlat
xor
sbb
je
in
test
xlat
add
adc
cmp
cli
cmp
push
and
sub
sub
add
lea
dec
shl
inc
(bad)
sti
idiv
mov
cld
sbb
lock
xlat
mov
push
outs
sbb
sub
pop
and
mov
sbb
loop
adc
out
adc
inc
sbb
or
pop
out
stos
adc
mov
add
jne
fild
out
jne
lahf
or
cli
sti
dec
sub
pop
mov
arpl
jp
f2xm1
push
cli
ret
bound
jge
sar
stos
shl
sub
aas
loopne
shl
jns
(bad)
add
in
jne
lds
add
mov
pop
cmp
pop
test
xor
push
sbb
inc
and
push
xor
sbb
xor
add
popa
cmp
xor
xchg
adc
xchg
xchg
inc
pop
imul
fsub
and
fstp
dec
cmc
lds
(bad)
fld
in
mov
scas
inc
(bad)
inc
push
test
sbb
sub
cmps
mov
xor
(bad)
cmc
inc
or
cmp
or
mov
mov
mov
push
jnp
push
retf
mov
jb
pop
dec
out
js
jo
imul
aam
div
cwde
cwde
enter
bound
fimul
les
sub
cs
fmul
sub
(bad)
daa
pop
enter
jmp
dec
jecxz
or
cwde
jns
outs
xchg
addr16
jnp
sub
and
rcr
nop
mov
cmps
mov
loop
jge
inc
xor
dec
adc
(bad)
mov
adc
sub
dec
and
rcr
jae
retf
xchg
ins
push
(bad)
sti
or
xchg
int3
inc
adc
mov
mov
sub
adc
xchg
add
xor
sbb
mov
pop
and
sbb
sub
xchg
sub
sub
jne
nop
mov
pop
outs
mov
loop
out
cmp
leave
test
pop
stos
and
and
ds
mov
jmp
aas
stos
inc
lds
xchg
sbb
dec
loopne
pop
adc
sbb
or
add
or
les
cwde
data16
hlt
cli
or
pop
imul
call
adc
ss
sbb
mov
femms
sbb
fsubr
and
push
aaa
shl
cmc
in
aaa
and
aad
mov
outs
pop
rcr
sub
int
mov
stos
retf
sub
push
push
repnz
aas
cmp
jmp
movs
pusha
lahf
ins
xor
push
ds
aad
lods
mov
adc
or
mov
inc
sub
jno
fiadd
xor
dec
mov
clc
scas
push
test
lock
xchg
fimul
push
cmps
cmp
into
adc
repz
jmp
js
push
sub
in
mov
adc
xchg
data16
stc
pop
imul
call
add
jle
jbe
pop
cmps
ins
lods
sbb
adc
jle
popa
pop
loope
popf
rcr
mov
pop
ins
fwait
and
pop
imul
dec
add
and
cmp
xchg
cmp
jl
mov
aad
popf
xchg
push
out
mov
dec
mov
(bad)
cmp
adc
je
pop
or
inc
fnstcw
pop
sub
pop
shr
sub
in
clc
pop
xor
call
adc
mov
jge
rcr
lods
pop
xchg
xchg
push
popa
pop
(bad)
popf
jg
adc
popf
mov
pushf
inc
pop
pop
cdq
mov
push
sub
sbb
sti
pop
daa
shl
inc
mov
mov
gs
jmp
jle
mov
cs
mov
fidiv
sar
outs
fmul
stc
movs
fsub
adc
cmp
sbb
repz
push
jne
imul
outs
adc
aam
jbe
sub
rcr
push
cmp
popa
cmp
and
cdq
ss
xchg
or
mov
ret
das
loope
cwde
dec
push
xor
ins
rol
push
lds
dec
std
std
mov
xchg
lods
ret
inc
mov
pushf
jp
xor
loop
xor
loop
dec
xor
add
cmp
sub
movs
iret
cli
mov
jge
out
sbb
fmul
in
pop
cmp
xchg
jmp
mov
out
mov
sti
jo
cmp
stos
pusha
inc
push
adc
data16
test
icebp
sub
mov
enter
mov
test
mov
mov
push
shl
(bad)
scas
lock
xor
sub
jae
push
outs
add
ficom
push
loope
push
loopne
sub
push
pop
add
into
cmp
xor
and
pop
cdq
ins
jae
inc
inc
add
adc
retf
ror
sbb
in
push
shr
shl
pop
ins
jmp
sub
clc
je
aas
mov
dec
xchg
ins
int
inc
aad
adc
loope
xchg
mov
pop
or
push
lds
sub
sub
fstp
xor
adc
ins
fsubr
mov
xor
push
or
mov
test
xor
hlt
fwait
mov
stc
pop
mov
pop
jmp
lods
pop
mov
jno
pop
call
adc
cmp
(bad)
push
jecxz
(bad)
out
imul
mov
cmp
arpl
call
mov
cmp
mov
stc
push
js
test
xchg
dec
dec
dec
sbb
outs
scas
inc
adc
jge
mov
arpl
xchg
push
xor
nop
push
dec
push
bound
lods
add
xor
add
cmc
lahf
or
out
push
push
jnp
cmps
pop
repz
mov
stos
ret
mov
and
ficomp
cmp
dec
and
xchg
push
aas
jb
cmp
inc
out
leave
xor
mov
mov
loopne
sbb
cdq
mov
xchg
dec
mov
bound
(bad)
(bad)
scas
cwde
adc
stos
xor
or
shr
dec
mov
in
mov
and
ss
xchg
or
loope
sti
mov
or
test
idiv
fld
movs
test
cmp
lods
rcl
cmp
jns
retf
mov
arpl
fmul
adc
mov
fwait
stos
lods
fsubp
mul
sbb
bound
leave
sbb
xor
in
mov
pushf
cmc
push
pop
or
xchg
imul
dec
push
leave
pop
lods
jb
or
add
inc
cmps
mov
aad
sub
idiv
cmp
pop
pushf
ds
fstp
push
and
(bad)
hlt
push
inc
dec
lea
scas
sbb
cmp
dec
mov
jmp
add
push
nop
imul
rol
cmp
mov
cmp
pusha
dec
sbb
fst
cwde
sbb
fld
ds
dec
adc
pusha
fsubr
sbb
cmp
adc
push
imul
xchg
inc
sbb
daa
das
popf
cwde
jp
in
pusha
ss
xor
cmp
adc
add
test
dec
jl
fistp
(bad)
popa
push
js
pop
in
push
jp
mov
jmp
in
stc
jg
mov
sahf
push
repnz
and
(bad)
cmp
push
jecxz
fmul
sub
or
or
daa
inc
xor
mov
or
inc
loopne
jp
fstp
jge
neg
jbe
movs
outs
sub
mov
test
jge
mov
fcomp
out
and
inc
jp
xchg
aam
jne
sub
inc
wbinvd
add
jmp
add
rcl
cmp
jg
xchg
jns
mov
in
push
movs
icebp
movs
mov
mov
xlat
push
outs
das
shl
repz
std
mov
and
data16
cmp
adc
sub
or
ins
xor
mov
mov
jb
ror
ror
or
fmul
mov
cmp
xchg
and
aam
stos
jmp
popf
and
xchg
push
jae
mov
les
js
daa
test
mov
loop
mov
mov
add
dec
or
xor
daa
test
ja
jbe
cli
xor
add
fcmovu
out
rcl
int3
repz
jns
pushf
fld
imul
scas
cs
xor
and
and
aad
cld
jmp
cmc
repz
rcr
loopne
pop
addr16
xchg
mov
and
lock
leave
mov
xchg
jnp
repz
cmp
pop
test
push
add
mov
xchg
sbb
xchg
inc
jl
shl
push
inc
movs
sub
ror
sub
jb
mov
push
ins
inc
or
cwde
mov
fiadd
cs
das
in
mov
ja
shl
mov
mov
es
daa
(bad)
jno
dec
hlt
sub
dec
lds
je
add
push
xchg
jecxz
lea
out
jle
rcl
aaa
dec
xchg
add
xchg
cmc
xchg
sub
retf
mov
cld
mov
jb
(bad)
(bad)
sbb
sub
or
les
mov
xor
pop
adc
lods
dec
inc
mov
stos
scas
and
sti
xacquire
in
out
and
push
xchg
fcmovbe
rcl
test
add
movs
leave
fsubr
stos
je
cmp
add
jg
and
jb
dec
out
jne
sbb
jnp
fs
ins
dec
sbb
inc
push
sahf
arpl
sub
cmps
aaa
int3
jp
cmp
in
bound
and
aad
mov
bound
stos
pop
movs
add
sub
sbb
dec
call
cld
adc
sti
(bad)
cmp
mov
dec
sbb
cmp
xchg
inc
fs
ds
scas
cmps
mov
jmp
sub
mov
fwait
cmps
or
mov
xor
lea
aam
cmp
or
jmp
or
mov
cld
cs
pop
stos
inc
outs
test
xor
out
mov
ret
scas
imul
mov
(bad)
out
or
in
adc
mul
retf
xor
inc
sar
int
sub
cwde
mov
retf
sub
pop
mov
popa
loope
arpl
sub
ins
or
call
jecxz
loope
jno
add
stos
mov
call
ins
mov
jle
push
sar
outs
daa
mov
(bad)
xchg
xor
adc
gs
mov
jae
mov
add
pop
iret
in
xlat
cwde
mov
mov
cmp
mov
fiadd
shl
popf
mov
outs
fs
retf
lods
push
and
add
lahf
xor
hlt
cwde
inc
sub
popa
pop
ss
mov
xchg
loope
or
(bad)
adc
or
xchg
xchg
pop
xchg
retf
inc
sub
dec
jecxz
jb
fcmovnu
retf
sahf
jb
enter
inc
pop
sbb
xor
push
adc
or
imul
dec
xor
fist
stos
jbe
enter
loope
push
shl
mov
imul
xchg
or
or
add
push
je
sub
daa
ficom
and
pop
pop
xlat
push
aas
mov
adc
in
in
xlat
leave
hlt
sbb
aad
mov
loopne
sbb
mov
sbb
and
idiv
mov
dec
add
adc
or
pop
cmps
sahf
adc
cmp
pop
sub
rcl
mov
lods
in
ds
add
aam
inc
cmps
mov
shl
jb
fild
xchg
jg
aaa
out
(bad)
jle
xor
add
mov
call
dec
retf
fild
sar
mov
xlat
dec
icebp
sbb
mov
xor
aad
imul
out
push
mov
mov
sbb
or
xchg
add
push
int3
enter
or
ror
shr
(bad)
jb
push
loope
xor
xchg
mov
mov
push
aam
addr16
and
and
push
cwde
data16
add
cmp
sub
jnp
cs
cmp
dec
out
fstp
shl
push
fisttp
sar
push
mov
scas
aas
xchg
inc
ds
imul
movs
adc
gs
and
push
ins
cmp
and
inc
ja
pop
movs
pop
les
(bad)
xchg
sub
pushf
cmp
mov
xor
fisttp
mov
ret
lods
lds
imul
and
push
call
mov
jle
adc
aaa
inc
lods
cmp
mov
push
xor
adc
push
push
xchg
call
or
test
pop
es
test
pop
jle
fwait
sbb
sub
lea
lods
js
pop
fs
jbe
shr
pop
mov
push
fstp
repz
in
fcomp
pop
inc
pop
popf
mov
dec
(bad)
retf
fdivr
scas
dec
or
adc
dec
sbb
rcl
sub
rcl
pop
mov
int
adc
inc
loopne
fwait
jbe
fild
jne
outs
jle
neg
mov
add
(bad)
setb
inc
inc
jmp
das
cmp
iret
add
in
cmps
stos
or
adc
mov
sbb
sub
mov
not
jno
repz
mov
dec
(bad)
hlt
and
pop
add
pop
adc
mov
test
sbb
(bad)
jp
iret
shr
test
sbb
fld
push
lea
or
loop
rcr
sahf
or
push
outs
pop
jae
addr16
je
in
mov
ret
mov
xchg
dec
adc
sub
cmp
(bad)
adc
fld
icebp
imul
call
xor
mov
ss
div
xchg
js
scas
push
loopne
mov
dec
cli
adc
data16
push
dec
jmp
cwde
and
push
and
and
into
enter
sub
sbb
hlt
add
adc
sub
out
mov
fisttp
mov
in
rcl
push
test
repz
mov
popa
mov
mov
push
mov
jno
mov
rcl
jmp
hlt
push
cmps
cmp
xor
ror
cld
in
iret
mov
add
jge
or
outs
dec
aas
sub
ja
es
or
dec
and
push
push
outs
push
test
not
mov
test
(bad)
scas
xchg
and
sti
jl
stc
add
mov
or
push
mov
fsub
imul
fs
mov
dec
push
sar
daa
in
push
and
jnp
cmp
push
call
push
inc
mov
enter
mul
mov
cdq
dec
ja
test
xor
pop
out
sub
movs
jecxz
fstp
aaa
sub
dec
mov
(bad)
sahf
mov
or
outs
inc
or
int3
loopne
jge
popf
lods
pop
xchg
or
cmp
jae
mov
sar
lea
pop
add
loop
rcl
inc
adc
lds
jl
shl
add
jle
xchg
inc
ja
(bad)
fstp
test
sbb
mov
into
je
ds
stos
retf
fiadd
cmp
pop
cmc
jmp
push
fwait
(bad)
(bad)
push
(bad)
aaa
add
repz
dec
sbb
in
test
add
and
sub
movs
xchg
jl
aad
add
inc
mov
add
fld
cwde
imul
pop
jne
loope
cmp
push
add
adc
(bad)
xchg
push
jl
or
jmp
(bad)
or
sets
jb
rol
xor
inc
jecxz
xor
stos
cmp
sub
and
mov
les
pop
inc
fwait
repnz
or
out
mov
ror
xor
lds
push
loopne
movs
shr
shr
aas
push
lods
xchg
ja
adc
dec
(bad)
mov
js
out
jbe
call
add
sub
and
repz
das
xor
mov
into
das
movs
es
sbb
or
(bad)
push
and
sbb
sbb
sub
push
or
inc
int
pop
mov
fadd
outs
xchg
xchg
xchg
cmp
lea
add
cdq
dec
aaa
push
fwait
or
outs
retf
push
mov
lahf
add
adc
or
vpunpckhbw
dec
popf
jne
(bad)
sbb
test
dec
repnz
enter
sbb
mov
push
loop
lahf
iret
jmp
(bad)
push
inc
mov
adc
lock
lods
or
and
(bad)
mov
icebp
rcr
xor
scas
add
dec
mov
jmp
(bad)
in
jno
loop
pop
mov
add
jns
popa
push
or
cld
pop
and
retf
push
cmp
jbe
stos
xor
adc
xor
xor
bound
xor
cmp
bound
retf
gs
dec
out
ins
das
mov
ror
pusha
pop
int
stos
daa
ret
xor
pop
or
je
inc
jno
and
push
mov
(bad)
bnd
mov
pop
dec
mov
imul
fsubr
xor
xchg
cmp
xor
fwait
aam
inc
fmul
imul
jge
paddw
jnp
mov
pop
test
pop
stos
int3
jle
lods
ins
lock
faddp
mov
mov
jbe
pop
jecxz
fwait
sbb
lea
sub
jbe
les
sbb
xor
mov
mov
inc
and
idiv
adc
enter
xor
inc
imul
mov
fcomp
lea
or
daa
repnz
cs
cmp
push
stos
xor
ds
pop
mov
movs
call
mov
cmp
out
xor
imul
cmp
sbb
lock
popf
sbb
test
test
(bad)
repz
xchg
dec
adc
dec
dec
outs
pop
add
clc
fwait
or
inc
pop
jae
xchg
clc
int
adc
sbb
out
push
lds
mov
xchg
xor
nop
nop
call
rol
dec
pop
cmp
imul
jnp
test
inc
add
ins
retf
pop
mov
das
sbb
(bad)
mov
ficomp
and
jmp
ins
push
icebp
jno
outs
std
dec
adc
jae
mov
les
(bad)
and
repnz
mov
inc
push
je
push
aam
les
jecxz
mov
cld
cmp
mov
aad
pop
xchg
ror
(bad)
shl
cmp
xchg
int
leave
mov
sti
add
pop
cmp
ins
test
xchg
sub
dec
or
(bad)
shl
sub
xor
hlt
cmps
mov
pop
push
retf
stos
sub
ss
aaa
sbb
pop
mov
loop
dec
and
ret
push
call
or
dec
pop
ja
push
dec
mov
inc
icebp
cmp
in
xchg
xchg
sbb
and
sahf
and
xchg
mov
dec
cli
dec
scas
dec
mov
pop
jmp
ja
bound
test
add
jo
out
and
add
inc
push
xchg
test
int3
adc
(bad)
in
mov
or
sbb
dec
test
sqrtps
cli
dec
mov
push
push
(bad)
test
aas
cmp
sti
fidiv
out
loope
out
loope
push
loopne
mov
push
lods
addr16
test
pushf
pop
gs
mov
cli
cmps
mov
das
stos
jp
inc
pop
lods
aad
cmp
xor
test
push
sbb
sti
imul
dec
jl
leave
xor
xchg
outs
mov
clc
xchg
jno
push
add
lds
cmp
sbb
out
push
aam
push
imul
sub
data16
cs
neg
lods
arpl
in
cmps
(bad)
inc
cwde
scas
fs
mov
sbb
lahf
and
std
and
lock
inc
sub
imul
add
adc
cmp
pop
adc
gs
popf
lea
cmp
ja
ret
aaa
jo
pop
fsub
cld
sahf
and
js
or
cs
xchg
push
or
lods
ss
bound
cmp
dec
(bad)
retf
js
jmp
loope
out
out
jae
data16
ficom
movs
ret
xor
fisubr
mov
pop
mov
push
jne
xchg
dec
xor
outs
cmp
xchg
fs
std
lahf
fst
rcr
and
cdq
sub
inc
inc
lods
ja
mov
or
or
and
xchg
retf
cmp
scas
push
fidivr
pop
cmps
(bad)
cld
fcmovu
mov
jp
rcr
sti
loopne
aad
out
xchg
mov
sub
push
jae
retf
lds
rcl
les
dec
scas
and
mov
push
pop
lods
and
inc
ret
inc
fild
pcmpgtd
push
jp
cmp
push
push
cli
and
sahf
enter
out
mov
mov
xor
mov
outs
pop
dec
cmp
adc
or
adc
outs
loopne
lea
pop
jae
inc
icebp
or
add
or
les
je
dec
cld
dec
xchg
push
ins
out
or
pop
in
gs
out
ficomp
ror
cmp
or
jp
stc
pop
loop
retf
and
gs
ins
xor
add
jmp
push
bound
cmp
leave
jle
mov
sub
stos
add
addr16
sti
or
add
jmp
xor
mov
js
test
mov
aas
push
stos
mov
pop
call
cmp
dec
sub
fdivr
sub
or
popa
jp
adc
or
jo
ret
jmp
mov
std
dec
ins
jmp
je
sub
pop
add
mov
repnz
cmp
bound
(bad)
in
inc
xor
das
and
(bad)
int
icebp
fbld
or
mov
out
pop
cmc
jne
call
adc
pop
outs
ret
jb
adc
or
pop
xchg
out
or
mov
and
(bad)
cli
push
imul
(bad)
sti
and
cmp
daa
inc
sbb
std
(bad)
arpl
test
mov
ror
aad
mov
test
scas
enter
push
outs
sahf
ret
xchg
dec
inc
mov
cs
sbb
bound
aad
push
push
in
movs
jnp
and
inc
jg
xor
in
dec
mov
in
ja
in
add
stos
inc
push
sbb
add
ret
scas
jl
add
addr16
push
mov
cvttps2pi
add
daa
cmp
adc
dec
inc
mov
fcomp
ins
fs
pop
or
stos
cmps
daa
jnp
push
fiadd
call
add
push
in
jne
adc
test
xchg
dec
mov
mov
or
push
xchg
xchg
pop
push
mov
mov
dec
call
xor
pop
and
adc
dec
lock
lods
out
dec
aas
xchg
mov
pop
and
push
inc
repz
es
ins
xlat
push
adc
out
sub
mov
aas
fldenv
xchg
jmp
and
call
jg
test
push
and
cdq
addr16
imul
xchg
popa
or
mov
adc
js
clc
ds
inc
mov
jne
repz
xor
or
inc
loopne
dec
fdiv
or
out
(bad)
out
push
arpl
leave
inc
es
mov
sbb
add
addr16
add
sub
movs
or
xchg
mov
scas
jnp
dec
repz
jnp
pop
ins
out
pop
cdq
jl
psrld
bound
or
lds
xor
xchg
icebp
idiv
es
lahf
jmp
push
or
sbb
xchg
clc
outs
int
and
dec
dec
outs
mov
adc
ret
sub
pop
sar
test
cs
rcr
adc
mov
mov
imul
mov
mov
sub
inc
cwde
sub
sbb
js
ja
pusha
cmps
(bad)
out
sar
or
mov
jo
(bad)
aaa
movs
mov
push
xchg
jle
aas
sbb
fs
and
pushf
repz
pop
push
mov
in
sub
jb
push
adc
xchg
enter
mov
mov
in
cmp
lods
out
cdq
add
arpl
jg
mov
imul
sti
ins
cmc
stos
les
mov
and
lahf
(bad)
jno
mov
fild
cdq
bound
xor
pop
jb
xor
inc
add
xor
test
int3
fiadd
aad
les
add
mov
or
fist
cmp
sbb
and
into
adc
jo
retf
jo
dec
add
retf
dec
(bad)
cli
cmp
or
adc
push
xchg
cmp
lds
dec
mov
repz
gs
out
dec
inc
test
xlat
push
push
xor
xor
xchg
in
jbe
inc
xchg
and
arpl
lahf
cmp
or
dec
(bad)
sti
fdivr
cli
cmp
and
ja
mov
push
xor
mov
dec
xor
xlat
jle
mov
mov
addr16
into
push
xor
fisub
mov
or
cld
push
fsubr
or
(bad)
imul
inc
fs
lods
or
or
loop
shl
scas
cmp
jmp
movs
mov
lds
lahf
mov
lds
test
(bad)
jns
xor
aas
mov
inc
xchg
mov
je
jp
fistp
and
jp
push
fwait
add
dec
gs
into
int3
mov
push
js
jg
iret
and
pushf
adc
(bad)
cmp
xchg
loope
lock
in
mov
jae
inc
mov
hlt
mov
out
in
ficom
cmc
gs
mov
imul
popa
pop
push
repz
fs
mov
in
cmps
neg
push
and
xlat
pop
aaa
sub
or
outs
and
dec
loopne
and
xchg
adc
and
inc
movs
mov
(bad)
repnz
mov
icebp
jne
pop
dec
sahf
popf
data16
not
aam
fdiv
pusha
adc
shl
pop
shufps
in
xor
scas
imul
cmp
aad
scas
loop
aas
jge
mov
and
inc
cmp
mov
sbb
ss
stc
sub
dec
adc
pop
repnz
mov
pusha
fdivp
inc
dec
out
faddp
pop
add
push
mov
jmp
xor
and
mov
imul
cld
pusha
mov
push
xchg
mov
inc
jg
add
mov
mov
mov
mov
je
ins
(bad)
jmp
inc
das
loop
adc
push
dec
mov
and
cs
in
mov
jl
mov
int3
repnz
call
enter
addr16
cli
adc
(bad)
xor
pop
aad
jnp
(bad)
loop
and
(bad)
(bad)
(bad)
adc
mov
ret
not
or
imul
push
ins
push
mov
imul
pop
sbb
xchg
and
jnp
setg
fs
and
sbb
cmp
cmp
dec
adc
ss
xor
cmp
push
lock
shr
push
ins
sar
push
inc
out
out
xor
int
js
mov
jl
xor
mov
xor
sub
ret
jae
pop
js
xchg
int3
mov
xor
scas
std
std
cmp
iret
or
ins
mov
push
daa
jno
fstp
cmp
out
jnp
push
xor
sub
mov
inc
dec
adc
mov
dec
es
les
cmp
inc
sub
sub
(bad)
cli
xor
(bad)
mov
inc
out
nop
int3
mov
out
xchg
dec
cld
retf
cmps
sub
sub
shl
jns
jmp
(bad)
add
ds
sbb
push
mov
and
mov
aas
nop
ins
test
mov
mov
sti
retf
cmp
fidiv
push
mov
and
ja
test
gs
aam
cmp
mov
sub
call
sahf
(bad)
rcl
out
loop
adc
jecxz
leave
outs
push
cmp
pop
jmp
rcr
adc
push
adc
icebp
mov
in
mov
ret
sbb
dec
or
imul
and
push
mov
jnp
cmp
push
or
adc
out
sar
add
ret
and
cmps
sub
push
std
retf
fcomp
sub
bound
cmps
add
cmp
stos
idiv
enter
adc
lds
fucomi
ja
adc
retf
xor
loopne
cdq
stos
xchg
xchg
inc
xlat
ja
adc
jmp
stc
and
ins
repnz
push
int
xlat
(bad)
add
mov
lea
mov
and
lds
arpl
xchg
mov
test
add
xor
das
cwde
scas
jmp
and
push
ds
dec
lock
pop
stos
test
xor
dec
movs
pop
das
addr16
test
fxch
cmps
mov
cmc
push
enter
or
cmps
or
imul
pop
add
or
ss
and
add
mov
inc
add
je
call
add
cmps
add
pushf
lds
gs
jmp
shl
push
sub
nop
cld
mov
jg
fstp
stc
pushf
add
push
mov
mov
xchg
call
movs
xchg
ret
(bad)
iret
pop
js
mov
repz
mov
or
mov
ins
xor
dec
jecxz
sbb
enter
cli
loop
fcmovne
cmp
stc
cmp
popf
daa
sub
inc
and
(bad)
mov
push
dec
mov
std
mov
cdq
jp
outs
inc
fstp
jmp
mov
push
mov
rol
jo
jle
mov
or
das
cmps
jge
ins
daa
mov
jecxz
icebp
repnz
adc
sti
and
icebp
mov
xor
sti
jb
push
jg
addr16
mov
xchg
mov
adc
dec
inc
ss
rcr
mov
push
sub
div
ins
add
clc
jmp
fimul
pop
data16
aam
jl
(bad)
pop
test
movs
mov
ds
mul
dec
mov
ins
loopne
mov
pushf
or
or
adc
aam
mov
pushf
lods
inc
push
out
lods
xchg
aad
xor
pop
mov
sub
je
cmps
jnp
jl
test
pop
jl
(bad)
hlt
pop
fisub
leave
mov
and
pop
sub
mov
ins
push
push
dec
imul
mov
in
arpl
or
fsub
repnz
daa
(bad)
cwde
jmp
fldcw
bound
xchg
int
and
cs
dec
in
call
out
movs
gs
mov
jle
and
addr16
jmp
pop
call
sbb
or
sbb
dec
or
push
pop
call
movs
or
icebp
xlat
js
sub
shl
popa
pop
mov
rcl
imul
in
pop
mov
lahf
jo
add
cli
(bad)
movs
dec
retf
pusha
sbb
jp
movs
jmp
xor
ret
xchg
je
mov
xor
or
xchg
mov
sub
in
mov
addr16
dec
dec
les
ds
jo
loope
pop
mov
or
(bad)
in
imul
daa
inc
jnp
sbb
pop
push
add
int3
fucomip
sbb
push
fisttp
and
js
shr
ret
mov
xchg
xor
mov
push
int
stos
out
xchg
jl
stc
lea
clc
in
lahf
fucomip
cmp
or
aaa
push
push
repz
rcl
cmp
jge
mov
(bad)
iret
jne
and
in
jae
not
mov
adc
xor
sub
sbb
popf
cmp
adc
mov
xor
cmp
cmp
sahf
pop
fld
or
xchg
push
les
into
inc
jg
das
cmc
imul
je
loope
les
push
adc
out
jmp
dec
mov
outs
es
je
xchg
or
mov
cmc
fdiv
dec
les
sub
clc
add
mov
add
add
pushf
or
sti
inc
lock
adc
or
jne
cwde
popa
imul
xor
(bad)
rcl
or
call
xchg
mov
mov
js
jno
int3
or
and
and
popf
dec
push
pop
mov
int3
loopne
cmps
sahf
jae
ret
arpl
and
or
imul
mov
xrelease
sub
mul
outs
xchg
mov
sbb
jno
xchg
inc
jmp
mov
cmp
ds
mov
mov
jnp
mov
dec
test
push
mov
jo
push
cwde
dec
sub
int3
mov
xchg
rcr
jmp
mov
add
imul
call
pop
das
push
rcr
(bad)
adc
(bad)
xor
out
xchg
and
cmp
add
xor
cmp
ret
scas
aad
dec
cmp
mov
sub
iret
scas
in
push
or
push
add
sbb
sub
popa
pop
or
lods
and
jmp
mov
xchg
add
fisub
jmp
cwde
pop
int3
adc
inc
or
pop
retf
imul
outs
lods
xchg
cmps
sbb
loope
jne
hlt
xor
jne
call
loopne
test
dec
mov
ror
mov
data16
or
in
out
shr
cwde
test
jmp
xor
shl
in
dec
inc
push
jmp
dec
in
push
nop
mov
ja
xor
imul
xor
les
and
cmc
or
test
hlt
enter
ins
xchg
xchg
sub
xor
loopne
das
xchg
int
push
ds
lods
adc
shr
addr16
ins
dec
or
ins
sti
fdivr
in
lahf
inc
imul
push
jle
jno
mov
lods
push
arpl
add
fs
push
fdivr
loop
div
(bad)
stos
and
repnz
out
push
cmp
cwde
(bad)
mov
hlt
sar
fcom
ja
sbb
je
mov
mov
and
enter
pop
dec
leave
mov
retf
mov
xor
mov
ds
test
jbe
mov
push
bswap
out
jns
outs
scas
(bad)
cmovno
shl
cmp
shl
mov
sahf
rol
je
lods
ja
movs
out
inc
jl
test
pop
je
and
in
dec
movs
push
cdq
xchg
mov
pusha
pop
jae
les
mov
and
adc
loop
sbb
stos
je
or
or
outs
fdivr
or
jmp
pop
rcr
jns
pushf
outs
add
(bad)
xchg
addr16
push
add
lahf
jbe
dec
or
lock
mov
test
jge
push
pop
cdq
fisttp
xchg
add
pop
lahf
in
xor
pop
pop
aas
cmp
(bad)
pusha
jae
repnz
aad
push
xor
(bad)
rol
xor
nop
arpl
iret
dec
cmp
hlt
pop
jae
fwait
and
mov
cmp
mov
pop
mov
xchg
loop
inc
int3
inc
cmp
pop
fmul
sbb
test
dec
lds
sti
fcom
pusha
and
fidivr
cmps
adc
clc
(bad)
dec
push
push
call
mov
mov
mov
mov
mov
fsubr
sbb
cmp
adc
int3
xor
sahf
add
inc
push
xchg
pop
popa
mov
jns
fiadd
mov
inc
mov
jb
mov
xchg
pop
cli
cmc
pusha
bound
add
inc
xor
cmc
sti
dec
arpl
std
xor
sahf
ret
or
xchg
clc
les
inc
ss
out
sub
or
inc
adc
pop
pop
pop
jg
lock
shl
add
(bad)
sbb
inc
xor
push
ror
push
push
les
jmp
lods
push
mov
jmp
add
fs
sbb
pavgb
sbb
shr
clc
and
outs
hlt
test
mov
jns
in
je
not
dec
ret
loopne
(bad)
scas
add
add
mov
fs
mov
mov
push
(bad)
ficomp
das
inc
or
add
in
lds
sub
push
sub
pop
dec
cwde
cmp
xchg
push
adc
mov
fcmovne
call
xchg
test
cmps
fisttp
mov
jg
out
sub
dec
xor
push
jge
cs
cmp
outs
test
(bad)
ret
adc
push
aaa
retf
mov
sbb
push
rcl
enter
inc
ds
enter
mov
xchg
jns
iret
fnstcw
frstor
jle
mov
and
or
push
push
cdq
test
fnstcw
pushf
sti
mov
popa
repz
jmp
sub
pop
scas
mov
and
dec
sbb
mov
ret
sbb
jbe
adc
cdq
dec
dec
loop
mov
lock
ins
and
fstp
(bad)
push
xor
pop
pop
push
cs
test
fimul
sub
popf
rcr
shr
mov
aad
adc
(bad)
lods
push
lods
pop
or
fs
jbe
and
cdq
push
repz
shr
js
adc
repz
add
jo
mov
sub
movs
sub
mov
enter
dec
stc
repz
shl
add
bound
push
adc
fld
bound
out
or
xchg
adc
xor
mov
mov
sub
mov
call
jnp
jg
pop
cdq
int
add
nop
add
pop
aad
inc
mov
adc
dec
add
xor
in
scas
jbe
lfs
xchg
jle
cdq
xchg
imul
aaa
stos
shl
sbb
lea
mov
or
sub
push
es
(bad)
repnz
inc
jns
mov
sbb
leave
std
mov
mov
mov
cmc
cwde
or
fidiv
cmp
cmp
stos
mov
push
mov
into
push
bound
pop
xor
(bad)
cmp
cmp
mov
xchg
mov
call
mov
fadd
mov
mov
mov
or
cmps
stos
push
sub
(bad)
int3
mov
test
mov
lds
pop
cmps
sub
lea
xlat
or
imul
xchg
fidivr
imul
xchg
js
(bad)
ins
cmp
pop
aam
test
movs
mov
adc
stos
(bad)
bound
stc
ret
daa
arpl
movs
add
adc
push
fdivr
mov
pop
(bad)
movs
xchg
and
gs
(bad)
xchg
ret
retf
sar
inc
ins
pop
cld
js
clc
into
jmp
in
jo
mov
scas
and
leave
or
sbb
mov
pop
imul
popf
sbb
mov
ss
jnp
or
pop
les
andps
or
pop
mov
mov
sbb
add
jmp
dec
adc
pushf
div
(bad)
popa
cmp
xchg
and
adc
ja
ror
push
cdq
push
xlat
push
xor
int
shr
shr
cmp
xchg
rol
shr
out
inc
adc
std
shl
std
and
xor
(bad)
test
sub
lods
pop
pop
ficom
pop
ins
es
sbb
jb
packsswb
les
nop
jp
adc
loop
push
cmp
sbb
or
adc
pop
(bad)
xor
cld
add
jne
mov
jecxz
jmp
dec
popa
xrelease
iret
(bad)
sbb
leave
outs
out
xor
je
jle
jg
sbb
sbb
(bad)
mov
pop
ss
xchg
adc
in
ficomp
jns
pop
push
std
dec
fdivr
pop
es
out
shl
lock
mov
fild
mov
or
retf
jle
in
cwde
push
inc
adc
mov
add
jno
out
cmp
movs
shl
pushf
ror
mov
stc
dec
mov
xor
js
dec
out
jecxz
sub
push
aam
je
aas
fisubr
cmps
mov
adc
or
mov
lock
(bad)
cdq
inc
jb
in
lock
stos
ret
or
add
aas
mov
dec
call
outs
dec
and
fsubr
int3
out
mov
fwait
dec
(bad)
push
cmp
cmp
adc
sbb
adc
or
sbb
sub
hlt
fisttp
cmp
cmp
cmps
cwde
rcl
out
mov
xchg
ins
js
clc
push
inc
cmps
and
test
das
xlat
ret
jp
push
repnz
mov
sbb
stc
or
je
cld
inc
dec
outs
jo
or
fwait
ins
sub
ins
mov
or
add
loop
aas
inc
pop
in
jmp
xor
push
add
mov
pop
pushf
(bad)
scas
outs
jle
sub
pop
pop
inc
xchg
cwde
or
gs
aad
sbb
rcl
cmp
leave
and
add
f2xm1
xchg
je
mov
mov
pop
outs
je
rcl
mov
inc
scas
xor
pusha
or
aaa
(bad)
aas
in
cmp
mov
mov
push
inc
ins
sbb
or
and
mov
test
pop
shl
and
imul
push
push
mov
pop
aam
mov
stc
mov
lahf
out
xlat
xchg
retf
(bad)
mov
add
push
and
dec
mov
test
sbb
add
stos
cmc
add
mov
and
dec
ss
aas
jg
add
test
sbb
mov
rol
ror
mov
xor
mov
lds
mov
sbb
dec
sub
fisttp
xor
pop
out
daa
inc
rol
mov
sbb
sbb
sub
mov
pop
dec
pop
pushf
push
mov
cmp
cmp
test
sahf
sar
imul
lock
push
mov
mov
xchg
inc
inc
fidiv
xchg
and
push
mov
cmc
mov
xchg
mov
data16
mov
mov
pop
call
mov
xchg
mov
out
jns
hlt
jo
ds
arpl
xor
pop
cmovno
lea
jns
imul
mov
jno
cmp
retf
jge
jge
xchg
bound
jle
jle
jmp
hlt
call
sub
and
push
jmp
push
mov
pop
imul
pop
pop
push
fisub
xor
les
mov
es
scas
cmp
shl
mov
xor
mov
fidivr
xchg
cmp
pop
cli
pop
xor
jb
pushf
sbb
sar
clc
in
aad
stos
repnz
adc
fmul
test
dec
dec
sbb
or
sbb
rol
adc
mov
stos
dec
out
iret
mov
mov
add
ss
(bad)
push
rol
rol
add
fwait
and
imul
popa
mov
lahf
nop
in
fstp
jno
mov
push
or
sahf
pop
adc
push
sub
dec
int
inc
push
pop
and
out
jbe
jbe
in
ror
mov
push
out
or
and
fist
pop
inc
test
mov
push
popf
push
les
jl
clc
sbb
cwde
push
ds
push
mov
in
stos
adc
or
repz
mov
sbb
dec
or
in
add
adc
jnp
cmp
pop
push
sbb
out
and
(bad)
sbb
or
adc
or
xchg
jns
inc
test
sar
js
mov
jp
inc
repz
pop
jae
mov
push
push
mov
or
xor
inc
sbb
pop
cmp
mov
jl
mov
(bad)
cmc
mov
hlt
mov
sbb
lea
jl
sub
add
stos
ret
adc
mov
fbstp
pop
pop
sub
cmp
pop
cmp
mov
test
daa
je
mov
loop
pop
(bad)
inc
mov
or
push
xchg
cmc
scas
push
xor
stos
les
xchg
xchg
jge
or
call
push
dec
or
inc
xor
adc
jl
aam
pop
test
adc
pop
mov
test
push
push
scas
cwde
or
loop
push
aas
lods
mov
adc
or
sbb
and
add
sub
retf
into
stc
inc
icebp
xchg
pop
test
xor
(bad)
ja
popa
iret
jnp
push
pop
neg
stos
iret
out
push
add
adc
ds
and
into
js
sbb
sbb
pop
jle
movs
(bad)
pop
scas
repz
and
mov
dec
movs
scas
dec
shl
pop
add
test
movs
push
fisttp
fist
aas
dec
stos
push
std
mov
mov
(bad)
xor
mov
(bad)
sbb
daa
retf
push
mov
test
in
push
add
push
and
gs
xlat
in
and
cdq
mov
push
cmp
push
call
push
add
dec
xchg
mov
push
shl
sbb
and
loope
xor
out
add
out
mov
xchg
icebp
sbb
push
inc
(bad)
sub
xchg
nop
test
repz
ror
mov
fs
fist
xor
ret
xor
sub
mov
push
(bad)
sub
cwde
clc
xchg
retf
jmp
jmp
shr
fwait
in
(bad)
cld
mov
icebp
mov
mov
icebp
push
inc
jmp
(bad)
jnp
inc
and
frndint
jmp
jp
xchg
and
xchg
call
or
out
std
inc
sbb
fimul
cld
cmp
cwde
scas
or
push
inc
int3
jp
dec
add
rol
pushf
fldcw
mov
leave
fist
xor
dec
ret
(bad)
je
sub
fwait
and
pop
(bad)
nop
push
sbb
jb
(bad)
popa
inc
xor
xchg
sub
cmp
xchg
js
cmp
lock
cwde
outs
sub
fisttp
outs
mov
stos
ss
(bad)
ss
gs
pushf
repz
inc
loop
mov
dec
fnstcw
inc
add
ja
push
mov
pushf
sbb
cs
(bad)
pop
(bad)
pushf
add
push
aam
push
loop
hlt
nop
stos
jns
sbb
and
dec
sub
ins
leave
aaa
fdivr
(bad)
cmp
fadd
mov
sub
and
pop
dec
mov
das
imul
xchg
fdivr
call
push
cmc
adc
jne
out
sar
pop
and
scas
xchg
mov
adc
outs
inc
dec
or
adc
xchg
xchg
lds
(bad)
adc
test
in
jecxz
jle
jo
ret
ins
mov
jmp
enter
push
push
sbb
and
out
sbb
repz
xchg
sbb
leave
mov
xchg
movs
dec
mov
jmp
push
into
mov
sahf
imul
(bad)
push
mov
sti
dec
xchg
add
dec
push
sti
(bad)
or
mov
push
lock
call
jo
inc
jg
movs
call
in
push
add
jle
aad
mov
cmps
cmp
or
out
(bad)
enter
dec
sbb
pop
addr16
jnp
pop
xchg
add
jbe
pop
es
clc
xchg
lods
adc
sbb
in
or
aam
out
popa
lock
aam
lods
sbb
into
mov
jns
push
pop
es
mov
out
push
ret
sar
sub
test
(bad)
fstp
aad
pusha
inc
in
xor
(bad)
lock
and
mov
imul
sbb
clc
(bad)
xchg
test
call
and
push
enter
lods
imul
(bad)
stc
push
rdpmc
jmp
sbb
(bad)
retf
pop
pop
adc
dec
cmp
rcr
mov
push
call
pop
movs
pop
mov
rcl
inc
sub
pop
xlat
mov
fisubr
sbb
dec
xchg
(bad)
mov
sbb
pop
jne
push
outs
out
push
lock
aaa
xchg
sar
jae
cld
add
imul
mov
je
(bad)
push
jb
cmp
cmp
mov
xor
cdq
mov
mov
out
and
ret
subps
cmp
add
adc
fimul
in
in
xor
leave
fmulp
in
jle
adc
retf
lds
not
out
mov
into
dec
and
xor
cli
add
dec
mov
repz
dec
jae
pop
into
int3
pop
fisub
jae
test
hlt
sub
pop
jmp
or
sub
push
inc
not
sub
stos
inc
jmp
dec
or
mov
push
push
xor
cmp
or
aad
ins
mov
xlat
adc
adc
push
(bad)
outs
inc
(bad)
sbb
mov
jle
in
sti
xor
lods
inc
sbb
cmc
xchg
popf
jns
retf
push
adc
mov
loop
cmp
mov
adc
jo
xlat
fadd
adc
add
xchg
loop
mov
push
sar
mov
push
sahf
mov
rdmsr
in
call
jl
sahf
loopne
fs
cmc
xor
addr16
inc
inc
xchg
test
dec
retf
jg
push
movs
frstor
mov
mov
pop
fisttp
arpl
push
xor
cwde
scas
xlat
sbb
mov
mov
push
fimul
ja
sbb
cmp
mov
jle
sub
add
jp
fwait
mov
adc
ror
push
mov
and
div
jg
add
mov
mov
mov
add
adc
add
and
inc
sbb
ret
les
sub
and
aas
push
inc
imul
call
mov
mov
push
add
dec
and
sub
std
outs
and
loope
daa
div
push
add
pop
outs
xchg
inc
sub
jns
dec
jg
xchg
loop
repz
inc
test
repz
retw
hlt
enter
nop
xchg
sub
dec
ss
mov
cmp
cmc
xchg
push
jo
retf
xor
ret
aam
mov
pop
(bad)
loopne
call
icebp
xor
pop
push
sub
xchg
movs
arpl
mov
div
or
dec
jp
(bad)
pop
ins
or
cmps
xor
mov
jne
adc
movs
ficomp
lods
mov
mov
test
push
cld
sbb
xor
dec
push
call
dec
in
push
jmp
mov
in
push
retf
outs
mov
sbb
fisubr
xor
repnz
test
pop
and
aaa
(bad)
imul
cli
lock
jns
imul
jmp
mov
dec
outs
pause
repz
xor
and
xor
xlat
push
and
sbb
scas
and
int
(bad)
bound
push
xchg
fxch
sub
push
leave
push
jmp
add
iret
(bad)
push
movs
push
imul
into
pop
mov
mov
adc
jecxz
cs
mov
sbb
or
sahf
sti
mov
or
or
xchg
movs
shr
movs
cmp
fmul
les
rcr
adc
ins
out
push
sub
call
fldenv
dec
push
in
mov
push
jbe
dec
mov
outs
mov
and
xchg
outs
(bad)
(bad)
jno
emms
mov
scas
push
mov
shl
jno
pushf
fcom
sub
pop
fsub
stos
pop
inc
mov
push
(bad)
adc
and
add
cmps
or
aam
mov
xchg
mov
sub
mov
ja
sbb
call
stos
cmps
jnp
jge
and
pop
(bad)
ss
xchg
push
sahf
pop
stos
mov
jle
jmp
or
leave
xchg
pop
leave
sub
test
xlat
mov
sub
xchg
imul
or
dec
xor
pop
push
loop
and
add
mov
xchg
xchg
xlat
xchg
pop
push
push
test
js
std
jle
xor
dec
loope
retf
jbe
psrad
pop
mov
and
fcmovb
xchg
pop
shl
mov
test
mov
out
sub
cmc
jecxz
sub
int3
dec
sbb
add
shl
imul
mov
xchg
aam
lods
mov
cdq
pop
and
xor
mov
pushf
test
mov
xor
inc
push
clc
cmc
inc
stos
inc
add
sbb
or
xchg
xchg
cli
mov
(bad)
or
or
test
cld
out
jmp
out
outs
mov
shr
mov
add
dec
mov
xor
outs
mov
mov
call
(bad)
xlat
xlat
mov
inc
and
sub
push
movs
cmp
jbe
mov
or
std
js
xor
dec
cmp
(bad)
sub
jbe
push
dec
inc
mov
js
neg
inc
mov
setae
push
dec
xchg
push
sbb
cmp
mov
add
jmp
xor
out
ret
push
push
leave
sahf
adc
xchg
and
sub
push
stos
or
hlt
retf
dec
lds
int
mov
or
push
inc
mov
ret
push
popa
mov
or
mov
push
adc
mov
test
push
xor
inc
jb
cmp
mov
add
cmp
shl
xlat
wrmsr
lea
loopne
jbe
sbb
out
pop
ins
and
int3
mov
(bad)
mov
xchg
jbe
arpl
and
inc
push
mov
mov
and
call
arpl
push
jecxz
outs
mov
or
sbb
push
out
idiv
mov
outs
retf
add
inc
jo
push
std
inc
mov
dec
lods
sub
imul
adc
aad
addr16
fld
and
mov
push
idiv
outs
pusha
pop
loop
pop
inc
push
xchg
int
lea
mov
pop
adc
mov
loop
or
sbb
xor
cmp
jbe
pusha
je
(bad)
lahf
sbb
jge
sti
ja
and
lods
jbe
rcl
dec
xchg
pop
fisubr
xchg
sub
mov
mov
gs
xor
inc
lods
jns
or
jb
jp
nop
imul
std
addr16
popf
add
xor
je
cmp
test
jle
dec
mov
ja
pop
out
mov
test
out
or
dec
xchg
xor
(bad)
out
adc
addr16
ss
sbb
aaa
mov
push
sahf
add
in
jno
retf
pop
cmp
push
mov
xchg
addr16
outs
ror
push
jne
movs
mov
xchg
pop
test
cdq
fild
and
mov
and
ror
cmp
jno
jg
addr16
ror
fisttp
adc
repz
out
rol
pop
lods
loope
movs
jae
adc
lods
xor
out
push
cli
ror
shr
and
jle
mov
and
sbb
push
stos
pop
mov
mov
fcom
retf
mov
les
int3
and
jbe
jmp
addr16
xchg
cmc
out
push
mov
rol
mov
mov
push
inc
ret
das
xor
out
jno
and
mov
inc
data16
push
sub
dec
pop
fstp
mov
pop
mov
leave
mov
pop
inc
fiadd
and
jnp
movs
in
adc
sbb
popa
sbb
mov
add
mov
jg
pop
mov
mov
retf
in
add
ret
test
pop
lea
repnz
sbb
ins
inc
inc
cmp
fmulp
repnz
aam
cld
jmp
and
inc
hlt
dec
mov
mov
(bad)
fwait
pop
cmp
push
mov
cmp
add
mov
sti
addr16
bound
fild
jnp
xchg
jb
mov
adc
int
and
jmp
add
mov
dec
out
stos
inc
push
neg
push
stos
les
add
test
ffreep
(bad)
mov
aad
cdq
out
test
or
sub
mov
pop
nop
xchg
dec
pusha
dec
cmc
cmp
std
mov
mov
imul
push
cmp
dec
(bad)
movs
cdq
mov
mov
cmp
mov
jmp
pop
aad
xchg
repnz
mov
sti
imul
xchg
sub
into
(bad)
inc
jg
ds
and
cmc
sbb
hlt
retf
adc
fwait
push
in
or
xor
cmps
jne
in
push
fiadd
pop
cmp
icebp
cwde
outs
outs
jno
shr
(bad)
fsub
cli
and
cmp
lods
call
call
or
call
inc
out
cmps
adc
dec
cld
out
add
ret
sahf
(bad)
ret
jnp
iret
hlt
push
adc
leave
(bad)
cmp
ror
jb
cs
mov
out
jp
push
and
int3
data16
shr
pop
mov
add
sahf
inc
adc
loopne
loop
retf
sub
icebp
xchg
popf
xchg
in
imul
sbb
ret
(bad)
fldcw
inc
push
mul
cs
int3
and
sar
(bad)
sbb
jmp
cmps
adc
xchg
inc
xchg
pop
lahf
jmp
lods
cdq
mov
es
loopne
es
repnz
repnz
leave
adc
scas
test
or
sbb
cmp
xor
push
cmp
push
dec
push
inc
sub
lods
cmp
(bad)
sub
pop
lds
sbb
cmp
push
fcomp
fidivr
leave
mov
jnp
pop
xor
mov
aas
xchg
and
cmps
sbb
adc
iret
mov
adc
xchg
mov
daa
cmp
push
cmp
(bad)
adc
or
jg
mov
loope
fcmove
cmps
lock
out
int
aam
jg
mov
stos
lahf
popf
ret
push
ins
pusha
icebp
mov
inc
sbb
ins
pop
and
jp
jns
lods
push
jl
mov
xchg
mov
mov
mov
in
cwde
mov
push
push
hlt
push
mov
push
jmp
in
nop
push
shl
es
sbb
popf
xor
mov
mov
out
cli
movs
adc
stos
mov
and
push
iret
pop
or
inc
adc
cmps
and
stos
ror
dec
cmps
fs
pop
lahf
xor
popa
or
movs
mov
es
adc
cdq
lds
mov
mov
(bad)
jo
ins
sbb
jecxz
and
inc
xlat
test
lea
std
int3
dec
or
mov
and
imul
sbb
pop
lods
add
in
xchg
data16
repz
je
pusha
mov
dec
xor
movs
add
jnp
jge
jno
push
and
lods
call
arpl
mov
lea
or
jae
mov
jge
sub
repz
inc
pusha
or
xchg
test
int3
xor
cmp
add
push
(bad)
movs
sbb
das
push
jmp
sti
pop
aaa
shr
mov
lds
sar
stc
pop
xor
shl
fwait
mov
jns
mov
loopne
popa
rol
sbb
push
xchg
stc
jae
int
xchg
dec
arpl
xchg
sub
xchg
cdq
stc
push
mov
mov
js
ins
ins
push
sub
in
std
xor
push
sbb
jbe
inc
in
adc
xchg
sbb
popa
adc
cmp
xor
mov
jge
jns
aad
mov
xor
xchg
pop
add
popf
or
or
(bad)
cmova
push
test
sbb
mov
movs
test
and
call
daa
xchg
test
scas
jle
shr
and
cs
das
push
or
mov
mov
and
popa
inc
(bad)
out
scas
mov
pop
cmps
mov
add
push
pushf
retf
fistp
cld
aaa
test
in
xchg
jno
mov
mov
pushf
retf
xchg
push
push
fstp
mov
leave
loopne
aad
pop
cmp
adc
loopne
data16
(bad)
enter
(bad)
(bad)
jmp
popa
and
pop
(bad)
jmp
pcmpgtb
add
clc
jmp
push
mov
and
sub
inc
aam
inc
shr
or
loopne
adc
xchg
repz
fnstsw
lods
or
fnsave
add
add
add
push
mov
test
mov
test
mov
sub
int3
add
test
fs
pushf
(bad)
add
inc
xor
rol
ins
inc
(bad)
lahf
sub
push
stos
inc
xor
pop
push
ss
mov
retf
push
enter
(bad)
retf
mov
xor
loop
mov
pop
jle
out
test
in
(bad)
jmp
jns
or
or
sbb
add
push
mov
and
(bad)
shr
mov
or
cmps
xchg
pop
mov
cmp
(bad)
fcmovnb
out
popa
retf
inc
push
stos
fucomp
test
dec
fdiv
cmp
cmps
into
sahf
jno
mov
(bad)
mov
push
ins
mov
stos
jae
call
jl
sub
push
sub
inc
adc
or
ror
cmp
lds
pop
jl
adc
mov
inc
sub
dec
dec
adc
and
clc
jp
jnp
mov
les
out
pop
xchg
jne
mov
mov
mov
adc
in
data16
(bad)
ins
sbb
aaa
jl
aas
add
xchg
neg
cmc
fwait
adc
jbe
sub
(bad)
xchg
mov
mov
push
sub
das
mov
xor
adc
mov
mov
pop
dec
imul
pop
inc
dec
lahf
mov
sub
outs
bound
movs
sbb
pusha
ins
stos
mov
mov
sub
pop
repnz
lods
mov
rcr
enter
mov
test
ss
lods
push
lds
push
xchg
fisttp
and
fstp
xor
aas
jg
cmps
inc
out
mov
scas
sahf
stc
jmp
rol
jecxz
push
stos
xchg
push
mov
repnz
nop
aas
pop
jl
repz
in
jno
cmps
mov
push
xor
daa
test
ins
lock
sub
fwait
pusha
cmps
inc
adc
loope
adc
dec
mov
mov
mov
mov
shl
fcmovnbe
push
and
pushf
repz
mov
fisubr
lock
js
or
cmp
push
push
inc
popf
mov
int3
jle
nop
hlt
lods
fsub
cdq
push
es
inc
xchg
aas
add
mov
dec
cmc
ret
je
pop
in
int3
lea
push
cs
sub
test
out
add
push
std
jge
jg
mov
adc
int3
mov
js
movs
mov
stos
out
push
mov
add
xchg
cmps
shl
lds
je
fwait
mov
or
mov
pop
repz
xor
repnz
or
cmps
sahf
add
(bad)
call
jg
lahf
sbb
xor
push
push
push
sbb
jo
dec
hlt
fdiv
loop
sar
call
jg
pop
sbb
xchg
je
cli
inc
sub
pop
scas
outs
mov
or
jbe
int
and
clc
cmp
(bad)
in
xor
into
dec
fild
out
repnz
stos
jge
pop
ins
shr
ror
out
push
add
hlt
mov
cmc
xchg
jmp
sbb
stc
xlat
pop
cmps
stos
add
xlat
inc
pop
add
int3
adc
call
and
movs
jno
je
in
push
and
imul
and
mov
in
push
inc
shl
mov
cmps
jae
shr
cmps
dec
xor
xor
jecxz
test
xor
std
(bad)
mov
pop
cli
adc
add
sbb
sti
pop
loope
push
and
fwait
mov
test
out
ins
xor
imul
and
mov
loop
xchg
inc
je
inc
stos
inc
sbb
bnd
les
fdiv
and
test
fdiv
jge
add
pop
call
xchg
dec
jl
imul
ret
fdivr
xchg
or
xchg
ds
outs
test
push
ret
pop
xchg
shr
sub
ins
or
nop
lods
into
outs
call
mov
loope
mov
jg
xor
and
in
mov
and
fcmovu
ins
sub
sbb
and
adc
pop
or
out
fsubr
lds
and
pushf
cdq
xchg
test
mov
lods
pop
mov
fdiv
cmp
fist
add
int
jl
push
xor
jge
lock
cli
sub
xor
mov
dec
(bad)
push
popa
out
(bad)
sbb
leave
loope
iret
jno
ins
pop
ja
sbb
mov
pop
and
mov
lods
scas
mov
cmp
dec
pop
push
pop
sbb
fs
dec
sar
fcom
test
mov
pop
dec
push
iret
pop
sub
in
pop
mov
inc
nop
pusha
mov
enter
dec
cdq
lods
add
das
das
pop
shl
jl
cmp
adc
scas
xor
ret
jb
jp
adc
shl
pop
ins
jmp
in
test
xlat
mov
cmps
js
dec
ins
lods
add
mov
imul
add
xchg
sub
das
(bad)
fnstenv
or
mov
ins
mov
mov
dec
fbld
dec
mov
popf
mov
push
xor
jle
jecxz
in
dec
push
aad
aaa
int
inc
mov
xchg
sti
dec
ror
or
repnz
xchg
jp
pop
and
(bad)
mov
retf
mov
repz
jmp
mov
retf
ss
imul
ret
dec
xlat
mov
shl
(bad)
mov
add
jmp
and
xchg
loop
aas
xor
aaa
jg
rol
imul
std
mov
jmp
cmc
lods
inc
pop
cmp
xchg
xchg
outs
ror
dec
punpckhbw
xchg
push
pop
sub
ret
mov
das
enter
int
push
mov
cmps
imul
cs
xor
and
or
sub
or
lds
retf
ins
call
sub
pop
call
in
pushf
push
mov
jo
cmp
add
xchg
add
mov
loopne
sub
xor
and
(bad)
fisub
and
je
ja
gs
jnp
push
pop
xchg
rol
call
add
movs
xor
rcl
(bad)
in
mov
sbb
jmp
les
dec
push
fild
es
in
out
push
out
imul
cs
sub
dec
fwait
inc
adc
fwait
sub
out
mov
rcl
jp
call
add
sbb
int3
xchg
adc
cmp
ficom
mov
ss
cmp
pop
lock
or
cmps
mov
mov
mov
int3
fcmovb
push
mov
cmp
rcr
push
mov
loope
jb
pop
add
(bad)
std
and
sbb
ficom
lahf
rol
lds
jl
leave
outs
or
lods
or
dec
repz
mov
test
and
mov
fbstp
rep
setp
shl
out
imul
call
clc
jb
fiadd
inc
add
push
xchg
cmp
jg
into
outs
icebp
(bad)
(bad)
pop
pushf
add
cmp
daa
jns
lds
dec
icebp
pop
ror
pop
push
lea
push
xchg
cmp
lods
sub
ss
sti
jae
aad
mov
cli
cmp
sti
hlt
int3
dec
inc
jge
mov
lods
push
push
sar
and
(bad)
(bad)
sbb
mov
test
lea
ss
xchg
into
sahf
push
pop
test
jnp
imul
rol
outs
ss
pop
enter
push
push
repz
in
fsub
das
repnz
sbb
mov
sub
and
pop
repz
test
(bad)
lahf
jecxz
stos
push
lods
adc
out
cld
loop
and
ins
sub
add
leave
(bad)
stc
jns
mov
addr16
retf
jg
sub
cmp
out
js
iret
mov
stos
sub
test
pushf
sbb
xchg
lock
cmp
sub
pushf
push
(bad)
std
imul
bound
in
jl
mov
mov
test
add
jl
movs
mov
ins
inc
imul
aad
lahf
cmps
jbe
arpl
stos
test
(bad)
loopne
ds
cmps
hlt
retf
dec
push
ins
in
stc
adc
cmps
sub
mov
adc
inc
push
push
int
pop
push
aaa
add
inc
mov
les
push
add
pop
es
(bad)
xor
std
inc
adc
add
movs
inc
lea
cmp
hlt
dec
or
xchg
jecxz
sub
push
call
movs
jno
test
(bad)
cmp
ds
aaa
les
imul
pop
jb
fbld
daa
ja
in
cmp
xor
enter
dec
das
aaa
or
mov
xchg
scas
or
popf
dec
pop
icebp
mov
or
adc
je
mov
popa
xchg
lea
lods
mov
or
dec
fimul
and
movs
ss
bound
fidiv
mov
dec
xor
(bad)
sti
and
test
gs
inc
repnz
inc
cmp
push
call
lods
cli
cmp
cmp
jne
pop
retf
and
aas
adc
pop
pop
push
js
jl
adc
enter
pop
out
and
and
cdq
ja
pop
push
jmp
xchg
mov
sti
aaa
push
in
xor
push
mov
jns
lahf
call
je
daa
adc
fcmovnu
in
dec
call
inc
jo
mov
cmp
adc
fsubr
jmp
popf
cdq
cwde
test
pop
sbb
hlt
movs
jp
adc
add
pop
jne
ss
pop
and
push
jp
xchg
jne
mov
jmp
jno
call
inc
or
js
xchg
add
cmp
aas
mov
loop
mov
test
or
add
pop
pop
shr
mov
and
xchg
imul
shr
sahf
inc
or
jmp
xor
je
adc
sbb
imul
inc
repz
jno
jmp
wrmsr
js
loope
mov
scas
retf
mov
jns
lock
in
jbe
inc
sub
jmp
inc
jo
in
adc
movs
loop
dec
std
inc
jp
or
shl
cmp
sbb
mov
adc
and
test
mov
add
cli
sub
sbb
and
dec
rcl
fbstp
pop
xchg
jl
inc
rcl
pop
scas
dec
pop
mov
push
movs
jnp
pop
mov
cwde
adc
es
popf
and
dec
push
xchg
loope
loope
rcr
sub
out
fild
jnp
and
cmc
push
outs
fstp
ins
cdq
repz
daa
push
je
fs
pusha
sbb
scas
iret
cmps
lods
retf
gs
or
xchg
in
out
es
sbb
mov
pop
add
add
jmp
cdq
sbb
push
cs
xchg
jo
mov
dec
cmps
(bad)
jmp
push
das
push
shr
inc
mov
mov
out
popf
jno
and
fstp
call
dec
out
sahf
stos
sti
dec
loop
shl
mov
jnp
pop
pop
sti
repz
movs
inc
pop
jb
mov
shl
icebp
(bad)
sbb
sub
stc
je
xchg
and
sti
push
sub
ins
add
jnp
out
dec
outs
arpl
mov
idiv
dec
call
lods
push
cmp
fcom
loopne
xchg
call
mov
mov
inc
pop
sbb
and
(bad)
jmp
sub
inc
push
div
movs
jne
fs
out
frstor
hlt
in
ds
scas
jle
cmp
adc
aas
pmaxsw
dec
sub
lock
adc
mov
popf
cdq
jge
imul
jmp
sub
rol
pop
pop
fdiv
mov
xchg
push
mov
lods
jmp
adc
mov
imul
nop
dec
jge
nop
pop
fdivp
dec
outs
lock
mov
mov
dec
in
or
sahf
xchg
jmp
and
xlat
int
ja
repz
repnz
add
cmp
mov
outs
stos
mov
jmp
mov
mov
xor
push
popf
mov
repz
or
clc
mov
mov
sub
xor
sub
mov
ds
push
sbb
pop
add
xchg
cmps
sti
imul
inc
dec
(bad)
arpl
inc
xor
mov
call
inc
xor
xor
aad
lods
fadd
sub
jmp
push
dec
sub
or
push
xor
xor
int
cdq
ins
test
mov
xchg
and
imul
xor
pusha
inc
cmp
pop
cdq
lahf
addr16
mov
addr16
add
inc
jmp
gs
xchg
stc
inc
inc
sbb
in
jae
push
mov
inc
jns
add
cmc
aam
test
fsub
fwait
stos
or
mov
leave
test
cmp
movs
lock
add
jb
outs
and
sub
imul
faddp
cld
pop
pop
nop
and
(bad)
cld
pop
aaa
jl
jb
aas
push
sbb
js
pop
outs
(bad)
aam
(bad)
pusha
ds
pop
repz
push
stos
fnstenv
push
mov
xor
xchg
inc
mov
sub
mov
jb
jne
add
cmp
call
rcr
mov
gs
cs
jno
je
adc
and
or
movs
sahf
leave
jmp
pushf
and
retf
es
in
pop
cwde
pop
scas
mov
xchg
ret
outs
xchg
sub
xor
and
add
xchg
(bad)
loopne
scas
adc
sbb
inc
push
aam
xchg
repz
xor
fisub
fisubr
mov
push
xor
xor
cmp
jns
repz
scas
sti
push
mov
cmp
xchg
add
js
sbb
xchg
not
jmp
aas
call
rcr
push
nop
sub
jmp
outs
leave
adc
mov
jp
retf
ret
and
ins
jge
xor
pop
pusha
cmp
push
push
test
scas
call
lods
cs
ds
test
call
retf
xlat
jle
push
test
and
xchg
scas
adc
xchg
jecxz
lods
dec
test
imul
sub
mov
adc
add
nop
xabort
xor
dec
(bad)
(bad)
and
xchg
rcr
in
dec
mov
stc
aam
ins
jle
std
pushf
inc
mov
mov
loope
mov
aaa
push
shl
dec
js
das
xchg
or
xor
ins
mov
jmp
ficom
lahf
adc
retf
aam
int3
inc
pop
pop
fcmovnbe
fild
test
setns
add
push
cwde
data16
cmp
inc
cmp
in
pop
bound
inc
ins
(bad)
sti
sub
shl
das
data16
enter
dec
fbld
pushf
push
mov
cld
cmp
shr
(bad)
sbb
adc
pop
inc
and
sbb
jno
sbb
adc
and
dec
fcmovu
hlt
cmp
xbegin
xor
mov
mov
push
adc
repnz
mov
mov
dec
xor
ds
(bad)
lock
cmps
icebp
pop
repz
sub
inc
jae
outs
jnp
(bad)
xor
int
xchg
mov
push
inc
mov
pushf
dec
sub
test
mov
and
int
pop
mov
pop
stc
inc
fwait
(bad)
sti
and
push
jno
js
fwait
mov
daa
mov
jae
or
loopne
jae
stos
and
stos
cld
mov
pop
dec
std
cmps
dec
mov
out
push
sahf
mov
mov
or
or
in
call
idiv
out
jbe
ret
cmp
(bad)
sbb
sbb
mov
outs
push
inc
adc
xchg
call
jno
retf
cmps
rcl
div
ds
ja
mov
cld
xor
pop
mov
cld
(bad)
stc
sub
jg
push
fisubr
xchg
mov
shr
lds
jno
sahf
jns
xor
in
stos
jecxz
inc
mov
jmp
pop
cmc
xchg
pop
jno
mov
mov
sti
fld
xor
fcmovnu
xchg
mov
out
js
js
xor
or
sbb
pcmpgtw
mov
rcl
xchg
push
lods
aad
mul
xor
inc
and
cdq
test
retf
xor
retf
pop
pop
pop
push
shr
adc
jecxz
or
xchg
ret
fdivr
xchg
sub
mov
or
dec
mov
sbb
mov
push
mov
cmp
pop
daa
mov
mov
out
fninit
pop
iret
xor
mov
mov
xchg
mov
sub
dec
cmp
sahf
(bad)
repz
mov
mov
(bad)
call
mov
pop
adc
test
push
xor
adc
mov
repnz
add
std
xchg
push
xchg
mov
imul
sub
popf
pop
mov
outs
pop
nop
cmp
std
outs
dec
test
imul
lock
pop
or
xor
imul
(bad)
pusha
rcr
in
xchg
rcr
sbb
pop
das
xor
outs
adc
ds
test
mov
movs
cwd
jmp
sbb
sub
imul
call
shl
sbb
push
sbb
ret
pop
aaa
push
hlt
mov
repz
jae
mov
mov
sbb
rol
scas
or
div
mov
sbb
out
aad
out
xchg
out
sub
movs
jo
or
neg
mov
xchg
sub
int
mov
xchg
xor
and
push
ja
cmp
movs
out
scas
clc
sbb
and
jl
adc
sbb
out
lea
lahf
mov
pop
jge
push
inc
add
das
mov
cmp
mov
jo
pop
xchg
neg
or
iret
mov
loopne
or
mov
jb
add
dec
pop
push
cmps
cmp
call
out
ret
mov
push
mov
ja
leave
lahf
das
sti
lahf
lea
dec
pop
in
push
jmp
stos
mov
ss
out
sub
mov
pop
retf
js
fsubr
xchg
dec
lock
mov
aad
das
and
pushf
mov
fadd
sbb
clc
mov
push
adc
push
xor
pusha
jbe
rcr
ss
and
ds
mov
test
xor
sub
and
sbb
mov
test
dec
pop
push
mov
and
popf
mov
add
push
mov
loope
adc
outs
cmp
out
fcmovbe
inc
fistp
jle
call
adc
cmps
ins
repnz
fld
or
mov
sbb
out
jle
mov
outs
mov
scas
sub
dec
pop
or
out
jle
mov
in
dec
mov
bound
mov
xchg
adc
imul
xor
sahf
dec
ror
in
mov
cmp
pop
daa
add
ffreep
lahf
xchg
dec
fs
sahf
pop
jae
test
add
das
and
(bad)
push
int
inc
cmp
pop
mov
pop
int3
jp
fsub
scas
cdq
mov
pop
adc
mov
mov
scas
mov
sbb
pushf
xor
sub
push
dec
sbb
dec
dec
out
push
push
loop
ja
aad
sub
pop
(bad)
sbb
and
iret
sahf
jge
stc
fnstsw
and
mov
lea
or
cmp
or
lods
pusha
xor
test
cmps
scas
test
inc
push
inc
push
push
leave
add
frstor
mov
fldenv
stos
(bad)
loop
loop
jl
punpckhwd
nop
mov
outs
inc
call
test
and
push
xor
pop
rcl
add
int3
les
call
pop
push
sub
xchg
dec
pop
sahf
cs
nop
fbld
xchg
std
addr16
mov
fisub
in
xchg
inc
jge
daa
gs
mov
or
arpl
daa
sbb
push
pop
cmp
mov
js
sub
and
mov
aad
and
out
sub
jns
or
push
(bad)
mov
add
bound
stc
push
scas
xchg
fnstcw
mov
pop
add
xchg
call
jo
sub
sbb
pop
push
cdq
mov
dec
cmc
fidiv
xor
mov
in
das
pop
lahf
outs
daa
mov
loopne
push
leave
push
push
sub
fiadd
daa
adc
sub
ret
or
jbe
sbb
mov
mov
mov
jbe
push
cwde
(bad)
(bad)
push
nop
sbb
dec
(bad)
sbb
jg
iret
mov
fld
ret
jns
sahf
sub
or
aaa
xchg
or
adc
ror
push
dec
jmp
fs
mov
into
dec
iret
mov
shl
inc
inc
(bad)
jb
shl
push
rcl
mov
dec
mov
jns
sbb
cmps
ins
push
adc
and
fsub
and
es
add
mov
ja
cmp
pop
std
xor
jne
nop
sbb
mov
mov
cmp
out
lods
push
mov
in
mov
iret
cmp
lds
pop
rol
ret
test
retf
or
sete
daa
out
loop
mov
pop
repz
imul
pop
(bad)
icebp
jbe
stc
push
les
js
xchg
mov
(bad)
mov
jae
mov
mov
sbb
imul
xchg
in
and
add
jp
dec
out
daa
pop
popf
(bad)
push
js
adc
js
retf
push
dec
inc
lods
xor
movs
pop
push
push
sub
adc
sar
xchg
rol
push
mov
mov
movs
je
adc
int3
cmp
movs
inc
pop
jle
scas
(bad)
mov
imul
and
cmp
adc
ror
and
sub
pop
or
xchg
pop
mov
xchg
jecxz
sub
fstp
mov
xlat
adc
fcmovnu
xor
jns
push
into
or
outs
test
je
jecxz
mov
push
inc
inc
pop
into
or
call
(bad)
xchg
scas
(bad)
push
into
or
ss
aaa
xor
push
sub
ins
jo
int
cmp
add
cmp
mov
mov
fdivr
push
aas
mov
jmp
aam
sub
mov
add
inc
fistp
retf
sbb
fnsave
scas
out
outs
ret
push
div
xchg
cmps
or
or
jle
jle
sub
mov
jl
mov
movs
out
inc
popa
std
(bad)
mov
rcr
add
pop
mov
and
xlat
out
mov
(bad)
stos
xchg
(bad)
pop
mov
imul
es
xchg
shr
mov
stos
mov
rcl
add
pop
jp
inc
into
pop
sahf
sub
sbb
dec
int
or
or
inc
add
jns
lahf
inc
icebp
retf
mov
xlat
add
inc
clc
lods
not
movs
inc
mov
(bad)
stc
outs
xchg
push
sbb
dec
cmps
xchg
mov
fbstp
or
jmp
in
pusha
xor
or
daa
mov
add
movs
sub
xor
xor
mov
movs
sbb
pop
pop
imul
and
jle
fs
sub
mov
inc
xchg
das
cli
mov
ja
xlat
xor
and
mov
shr
out
jno
lds
imul
push
and
cwde
jbe
aad
sti
cli
pop
call
pop
sbb
add
call
out
lahf
imul
movs
mov
pushf
leave
ja
mov
in
mov
sbb
mov
fcmovb
cld
loopne
pop
sbb
addr16
and
push
and
push
cs
add
int
movs
push
jecxz
sub
mov
sar
test
cmps
ss
sar
fisub
adc
xchg
retf
jb
mov
xor
ret
pusha
pop
iret
cmps
mov
push
add
sub
inc
or
aas
in
clc
cmp
shr
add
test
loope
or
adc
inc
call
jmp
sub
mov
int3
ins
cmp
adc
(bad)
test
push
(bad)
push
mov
scas
cmp
out
add
(bad)
mov
mov
repz
xchg
in
in
xor
cmp
ss
hlt
icebp
ja
sti
mov
lock
sbb
inc
call
fisubr
xor
inc
adc
xor
cmc
cs
mov
movs
jbe
(bad)
xchg
and
std
stc
or
rcr
inc
adc
adc
push
sbb
cs
aaa
lea
aad
jg
in
mov
add
cwde
cld
fwait
test
repnz
pop
pop
movs
or
push
(bad)
daa
in
mov
sub
jno
dec
pop
data16
and
pop
test
inc
cmp
stos
jns
pop
addr16
and
push
inc
mov
sahf
out
pusha
fcmove
popf
fwait
popf
jae
add
mov
nop
dec
repz
and
fist
xor
mov
sub
scas
sbb
adc
scas
js
push
imul
fild
xchg
lahf
stc
ret
add
jle
fsubp
push
fidiv
je
mov
inc
shl
jle
inc
leave
mov
xor
mov
pop
xor
mov
out
inc
xchg
jb
pop
inc
(bad)
fild
sbb
push
push
jmp
mov
(bad)
shr
outs
pop
std
push
mov
cmp
popf
(bad)
cmp
push
sti
or
shr
aam
in
sbb
mov
jg
jl
mov
mov
cmp
fdivr
pop
test
sbb
out
lods
aaa
sub
aad
dec
sahf
inc
inc
shr
int
jmp
add
or
fs
mov
xchg
pop
jbe
jnp
repnz
test
sub
sahf
adc
psraw
mov
mov
pop
into
mov
xchg
in
retf
imul
pusha
xor
jns
cwde
mov
xchg
xchg
dec
sub
mov
dec
ret
loope
jmp
pop
stos
add
nop
rol
daa
add
fiadd
xchg
cmc
in
inc
mov
mov
xchg
and
mov
mov
jmp
or
movs
repnz
adc
jae
jns
jle
or
jge
pop
mov
ret
ret
jmp
cmc
dec
dec
mov
push
outs
les
ror
arpl
rol
(bad)
push
cmp
pop
cmp
test
push
lahf
movs
sbb
cld
fld
jno
and
repnz
dec
inc
xchg
jp
ss
mov
repnz
daa
cmp
add
repz
mov
in
add
push
test
jmp
cwde
add
add
push
call
in
mov
scas
xor
fmul
arpl
inc
xchg
daa
aas
aaa
ret
push
jmp
test
jmp
(bad)
adc
shl
sub
xor
les
add
shl
mov
cmp
jmp
jnp
cdq
and
jo
fwait
fwait
scas
retf
scas
add
aad
push
retf
stc
lods
pop
(bad)
std
dec
cld
dec
mov
xor
cmp
sar
add
scas
pop
push
pop
push
cli
loop
mov
out
scas
out
mov
enter
lds
sub
out
fcmovnbe
mov
cld
gs
push
cmp
jnp
repnz
ret
mov
(bad)
mov
add
retf
or
lock
inc
mov
std
dec
scas
mov
add
sbb
mov
cmp
sbb
push
aaa
fcomp
mov
int3
scas
ins
add
hlt
nop
dec
shl
xor
enter
mov
sub
mov
and
or
repz
jno
mov
push
or
push
stos
mov
in
enter
mul
or
add
out
cmp
fdiv
add
movs
sahf
mov
mov
mov
ss
ret
cmp
jne
inc
push
nop
adc
mov
xchg
movs
cmp
xchg
ins
shr
(bad)
stc
add
dec
sbb
push
gs
xchg
xor
stos
xor
push
push
adc
(bad)
(bad)
repnz
add
daa
jg
fwait
loopne
cmps
nop
pushf
xor
adc
mov
sub
and
mov
mov
ret
push
inc
and
and
shl
sbb
cmc
(bad)
jmp
dec
call
neg
ins
call
push
cdq
pop
dec
or
ret
mov
and
fs
ret
test
xchg
fadd
sub
cwde
arpl
pop
mov
add
xchg
mov
mov
clc
xchg
addr16
dec
inc
sar
lahf
or
add
xlat
or
or
push
sar
mov
xor
test
inc
jge
cli
popa
sar
inc
or
scas
xchg
sbb
jmp
clc
inc
adc
ret
popf
addr16
scas
fwait
pop
inc
stos
push
mov
jo
dec
push
and
cmp
outs
xchg
mov
jnp
aad
cs
add
mov
jne
jmp
fnstcw
and
adc
shl
and
lods
ins
xor
jl
xor
add
jae
loopne
in
ds
xchg
xor
leave
lahf
and
sar
xchg
mov
mov
(bad)
fdiv
sbb
adc
mov
push
mov
popa
jno
dec
shl
hlt
sbb
ins
inc
cmp
push
fmul
mov
lahf
xchg
imul
call
mov
inc
(bad)
test
push
(bad)
ins
mov
popa
xor
push
sub
mov
outs
pop
es
movs
popa
xor
inc
mov
mov
sub
out
xor
pop
das
sub
adc
shl
loopne
enter
je
js
(bad)
rcr
call
stos
xor
cdq
int
sub
push
outs
fmul
inc
pop
sahf
lds
pop
je
out
and
adc
cli
push
pop
pop
out
push
xor
nop
cs
mov
adc
sbb
and
push
out
or
jecxz
adc
rcl
daa
lds
fimul
jnp
shr
js
mov
scas
mov
add
xchg
sub
int
lods
add
mov
test
retf
push
inc
push
xchg
mov
and
xchg
call
data16
xor
retf
test
dec
xchg
dec
cwde
in
xor
ins
fcom
jl
std
push
shl
adc
stos
sar
adc
mov
jmp
std
stc
popa
fs
test
lds
int3
dec
test
and
push
xchg
inc
or
xchg
imul
cmc
pop
stc
fdiv
in
ds
sahf
enter
adc
pop
jae
stos
stos
std
cmps
fisttp
inc
ds
dec
push
add
fnstsw
cmp
adc
add
fsubr
(bad)
loop
or
fsubr
mov
jbe
fwait
fwait
cmp
test
arpl
xchg
or
xor
pushf
retf
or
cdq
fidivr
cmps
add
loop
dec
mov
mov
jns
(bad)
lock
fcom
or
or
sub
push
jl
xlat
cdq
cmc
and
ficomp
cmp
adc
lea
adc
cmp
loope
xchg
inc
push
cmp
dec
pop
ins
dec
mov
inc
jecxz
rcr
push
mov
sahf
rol
movs
jae
mov
pop
push
push
fisubr
sbb
and
fdiv
mov
ja
jmp
xchg
inc
sub
mov
fucomi
dec
push
push
std
sbb
into
std
xchg
inc
mov
scas
data16
add
jg
std
mov
mov
push
test
xor
sub
stc
cmp
int
cmp
push
mov
nop
dec
and
jmp
adc
sbb
ins
aas
add
dec
push
pop
xchg
xchg
pop
push
and
jl
xchg
pop
add
dec
pop
xchg
mov
in
adc
lods
mov
aas
or
inc
fidivr
xchg
adc
mov
push
iret
push
ins
cmp
push
stc
sbb
in
jne
scas
retf
or
iret
movs
push
adc
stc
aad
jns
jp
aas
xchg
lahf
mov
pop
xor
dec
stc
mov
mov
fmul
inc
pop
mov
pop
add
add
adc
xor
dec
inc
sbb
sub
inc
pop
fistp
pusha
or
inc
cdq
xchg
add
popf
push
sbb
shr
jnp
fdiv
or
in
int
and
jae
xor
mov
loop
push
popa
aas
dec
scas
and
ret
cwde
loopne
icebp
repnz
ret
and
cdq
ss
scas
jns
cmc
movs
stos
ins
sbb
add
out
jl
sbb
jl
mov
add
ss
lods
in
dec
shr
fst
(bad)
pop
or
add
mov
arpl
stos
adc
dec
mov
mov
lods
fist
jge
xchg
sub
add
jecxz
sbb
mov
cmp
ror
add
(bad)
jae
add
gs
sub
icebp
dec
mov
jmp
fst
(bad)
sub
std
or
lahf
cmp
jno
inc
cmp
mov
inc
popf
xor
adc
not
fistp
call
cmp
mov
bound
jmp
mov
ret
aaa
(bad)
push
mov
mov
dec
cmp
shr
aaa
add
push
pop
pop
nop
mov
mov
fldcw
and
mov
iret
xor
sbb
shl
out
pop
mov
xchg
stos
mov
aad
xchg
hlt
adc
jp
adc
outs
fsub
mov
pusha
ucomiss
inc
xchg
dec
adc
das
jno
stc
jge
mov
mov
pop
dec
repnz
pop
pop
rcr
ds
push
xchg
shl
lods
xchg
push
stc
std
loopne
mov
(bad)
loop
ficom
shr
pop
fadd
sti
mov
jmp
inc
jp
xchg
stc
repnz
aam
rcl
mov
mov
jle
ja
imul
push
xor
pop
sbb
xor
sub
(bad)
daa
loop
fld
lods
mov
and
mov
inc
or
pop
jecxz
std
clc
pop
or
xor
pop
es
jbe
in
sbb
mov
test
mov
enter
push
dec
pushf
inc
test
arpl
adc
aas
sbb
adc
mov
mov
lea
imul
inc
cmc
stos
call
daa
mov
cdq
xor
jecxz
adc
push
xor
inc
test
jns
dec
sub
rcl
(bad)
pop
fwait
inc
dec
pop
data16
lea
das
ja
std
push
rcr
push
icebp
(bad)
fst
fld
fisttp
hlt
test
cwde
pop
jb
push
lods
xchg
(bad)
jmp
sti
mov
sub
lods
outs
inc
push
loop
sub
nop
aaa
dec
dec
push
movs
or
xor
mov
scas
pushf
cld
push
movs
mov
sub
mov
cmp
add
into
inc
ins
inc
add
push
xchg
pop
outs
jnp
mov
cdq
xchg
fwait
mov
inc
and
add
jl
cmp
shl
pop
scas
aam
inc
popf
xchg
rcr
jg
xchg
out
ss
lods
and
fwait
cmp
push
in
dec
jae
xchg
stos
ss
sub
jge
cli
sbb
aas
popf
lods
fbstp
xor
jl
lds
ror
push
pushf
adc
and
jmp
(bad)
mov
ret
mov
mov
test
jmp
xor
mov
arpl
ret
movs
add
(bad)
ja
jne
xor
sub
lahf
pop
mov
scas
test
inc
inc
movs
(bad)
xor
push
push
jne
mov
add
mov
and
cmp
inc
ffreep
or
jl
and
gs
cmps
sub
or
xchg
adc
aas
sub
add
leave
inc
mov
cmp
sbb
loopne
fbld
jecxz
(bad)
fprem
and
and
xchg
shl
xor
xor
dec
fmul
xchg
push
add
sub
daa
pop
push
jecxz
adc
xchg
inc
or
xor
mov
and
xlat
loopne
jne
sti
pop
ins
les
shl
add
mov
push
jns
adc
pop
and
pop
xchg
dec
sub
call
dec
popf
jns
push
test
arpl
jns
int
cwde
cmps
add
or
fstp
out
sbb
sti
or
sub
cmps
add
mov
repnz
pop
std
clc
sti
nop
inc
pop
icebp
in
enter
mov
mov
in
dec
fstp
adc
vpackssdw
cmc
hlt
sahf
and
iret
mov
mov
pushf
test
in
rol
outs
test
push
cs
inc
adc
sub
(bad)
jmp
loope
xchg
inc
add
loop
scas
or
jecxz
or
inc
sub
mov
xchg
push
retf
or
dec
adc
cmp
imul
push
jo
add
mov
mov
out
aam
les
into
cdq
dec
(bad)
in
(bad)
xchg
shl
cdq
inc
jns
rcl
push
push
fdivr
shl
push
(bad)
sbb
add
or
xchg
cmp
ret
retf
jo
(bad)
out
or
enter
rcr
mov
imul
cld
push
ret
push
jle
shl
inc
jmp
mov
fcmove
mov
inc
(bad)
pop
jne
(bad)
push
fcomp
inc
adc
mov
adc
dec
pop
iret
fadd
xor
ins
or
cmp
ror
aad
add
mul
imul
icebp
mov
cmp
cmp
pop
mov
mov
out
jne
stos
cmp
adc
fwait
call
lods
cmp
cmps
cld
mov
inc
sub
mov
or
inc
cmp
lods
hlt
cmp
cmps
cmp
enter
inc
cmp
jp
call
cmc
ds
out
sahf
lahf
mov
xchg
(bad)
sub
inc
push
add
das
test
mov
pop
and
ret
cmp
jno
scas
or
popf
lahf
mov
sub
xor
sbb
jb
dec
std
cmc
sub
jp
fiadd
call
cmp
pop
push
or
mov
fidivr
cli
fild
sub
push
jb
int3
xor
mov
pop
fsubr
xchg
mov
and
outs
mov
std
neg
push
jg
aad
retf
cmc
call
in
sbb
jecxz
xchg
mov
sbb
jb
leave
xor
shr
bound
hlt
retf
fstp
aas
cmp
mov
adc
fcom
dec
and
sub
mov
das
push
jmp
mov
(bad)
xchg
jmp
fstp
clc
out
xchg
mov
or
les
pop
rcl
jbe
fstp
push
pop
xchg
pusha
test
cmps
mov
mov
ins
enter
fs
mov
adc
test
cdq
add
outs
dec
xchg
sbb
in
repnz
cdq
into
aaa
cmp
sub
jns
fcom
cmp
lock
stc
xchg
fisub
inc
inc
sub
movs
push
jp
stos
jb
dec
xchg
outs
scas
jp
mov
jmp
fdivr
sbb
shr
sbb
push
test
push
std
inc
mov
data16
xchg
sbb
sbb
(bad)
fwait
push
rcr
dec
sbb
jne
loopne
ret
or
xchg
push
pop
fnsave
pop
or
pop
sub
aam
inc
es
add
repz
imul
xchg
sbb
sbb
and
cwde
add
cmp
les
sub
js
or
repnz
sbb
sub
repz
add
push
add
cmps
xchg
cld
scas
push
sbb
mov
out
scas
daa
loop
mov
xchg
ret
test
xor
or
mov
push
sub
leave
lds
sub
inc
out
and
retf
ss
sbb
and
lock
data16
in
pop
aam
ror
dec
imul
fdiv
or
rcl
push
fxch
hlt
jge
ficomp
loop
lods
sbb
jp
(bad)
fisttp
mov
jns
xchg
jmp
jbe
push
ret
iret
clc
dec
xchg
sbb
push
adc
lds
add
and
jg
lods
icebp
xchg
mov
lds
pop
mov
bound
jecxz
xor
sbb
inc
imul
in
fisubr
movs
mov
push
enter
inc
pop
mov
lea
xchg
push
cld
dec
push
jp
inc
sti
fistp
movs
dec
(bad)
sti
rcl
ret
sbb
cs
adc
xor
fwait
inc
mov
or
and
sahf
popf
pop
(bad)
fist
scas
lea
shr
cmp
ficomp
and
xchg
pop
sbb
push
push
jp
pop
jge
jecxz
scas
xchg
clc
mov
cmps
mov
mov
mov
jmp
sbb
and
dec
dec
inc
xchg
jb
cmp
adc
xchg
push
sbb
push
aaa
sbb
xchg
pop
retf
cdq
sub
loopne
inc
js
fdiv
push
pushf
or
mov
hlt
jp
cmp
mov
sahf
lods
and
sub
xchg
lea
inc
out
jg
add
or
xor
bound
mov
or
sbb
and
jmp
std
add
jmp
imul
mov
call
(bad)
enter
mov
mov
mov
or
sbb
pop
fucomp
mov
out
loopne
frndint
cmp
mov
cmp
push
pop
scas
int3
dec
and
das
pop
jg
jmp
push
int3
ficom
xchg
scas
mov
push
ins
push
int
inc
inc
dec
int3
outs
lods
xor
test
retf
loop
lods
fld
dec
cmp
jecxz
(bad)
jae
aas
or
lahf
add
shl
je
rcl
mov
mov
and
dec
inc
mov
cmp
cdq
lods
outs
push
jb
inc
out
es
pop
mov
into
push
test
and
ret
sub
add
pusha
sbb
jmp
mov
xchg
sar
mov
retf
cmps
xor
cmc
fnstcw
jg
dec
test
dec
inc
xor
pop
ficomp
js
mov
sbb
push
or
adc
in
ds
and
mov
ins
cmp
push
das
popa
jb
out
sbb
inc
scas
movs
or
je
rcl
les
push
pop
das
leave
cmc
inc
bound
jl
repnz
push
lahf
xor
mov
loopne
or
mov
push
inc
into
pop
pop
retf
add
in
jae
mov
pop
call
dec
mov
rol
dec
repz
cmp
mov
cmps
aaa
sbb
rcl
fisttp
mov
lea
jg
dec
iret
addps
sub
push
pop
xchg
fild
scas
movs
clc
mov
(bad)
idiv
test
(bad)
fist
mov
cmp
inc
sub
fwait
jl
cmps
mov
repnz
fdiv
fsubp
inc
mov
xor
leave
xor
jecxz
fs
cmp
jo
or
mov
ins
jno
leave
jns
cdq
mov
cmp
dec
div
aas
sbb
push
add
dec
fist
cwde
jno
or
call
jae
shr
inc
lea
(bad)
jmp
mov
outs
jge
inc
cmps
daa
sub
aam
cdq
xor
(bad)
bound
push
dec
(bad)
xor
and
aaa
cmp
xor
jb
icebp
ds
cmps
enter
js
xchg
jg
popf
mov
and
fnsave
adc
adc
cld
fsubr
rcl
or
push
std
cmp
push
sbb
dec
or
mov
mov
dec
hlt
adc
in
dec
call
test
or
mov
in
sub
repz
bnd
std
pop
mov
jb
call
inc
and
cmp
and
xor
pop
rcr
add
jg
mov
add
jo
sub
(bad)
out
ins
test
sub
push
add
(bad)
push
rol
push
jbe
and
and
and
push
xlat
popf
popf
push
xchg
or
arpl
jae
and
dec
stos
or
mov
dec
pop
lods
enter
mov
mov
(bad)
mov
mov
cmp
mov
fdivrp
mov
pop
jle
xlat
mov
inc
ins
mov
push
loop
sub
or
movs
push
pop
pushf
and
jle
in
pop
outs
jp
outs
mov
adc
add
movs
xlat
mov
iret
ror
or
sub
dec
mov
scas
sub
push
dec
in
(bad)
(bad)
inc
fwait
mov
inc
add
aam
popf
mov
cmp
jecxz
sbb
xor
and
or
mov
or
(bad)
cld
ret
leave
cmp
jno
push
fsubr
movs
test
dec
test
and
les
mov
(bad)
cli
sahf
ja
fst
jae
popa
jl
mov
mov
xor
js
ds
pusha
jae
cmc
inc
es
dec
fs
pop
and
inc
iret
mov
cli
lods
lods
(bad)
xor
scas
push
add
or
test
pop
and
stc
ja
add
into
test
je
test
ins
retf
in
test
adc
bound
xlat
sahf
push
jge
add
in
cwde
sbb
mov
lea
or
ret
and
repnz
jno
fldenv
ins
cli
imul
sub
fstp
mov
mov
dec
jbe
daa
or
outs
ins
pop
adc
sar
add
pop
int
out
repz
addr16
mov
xchg
xor
sub
xchg
sbb
sar
push
and
inc
inc
sub
xor
jmp
mov
jbe
js
dec
jge
pop
mov
or
pop
(bad)
mov
pop
or
inc
and
inc
jmp
(bad)
xchg
pop
pop
ret
retf
mov
fdivrp
not
mov
push
test
inc
pop
mov
iret
sub
sub
or
sahf
sub
les
(bad)
sbb
jno
das
into
xchg
fstp
xor
inc
and
scas
dec
scas
pop
add
inc
(bad)
and
sub
std
retf
jbe
dec
xchg
bound
jl
mov
shl
cmp
pop
leave
js
push
inc
sbb
push
pop
aas
lahf
pop
and
sub
dec
cmp
and
test
adc
iret
inc
jecxz
loop
inc
inc
les
rcr
dec
loope
retf
nop
xor
add
ins
dec
mov
cmp
xchg
jbe
dec
arpl
cmp
jae
fs
es
cmp
xor
adc
ret
sbb
movs
movs
aas
adc
jne
fs
test
stos
rcr
mov
ficomp
cmp
fidiv
jnp
cmps
loope
es
add
and
scas
sbb
std
jne
xchg
mov
jb
ins
mov
mov
imul
fldenv
and
ds
out
or
sub
daa
(bad)
int
sub
xchg
and
xor
mov
cdq
sub
in
cmps
les
(bad)
das
into
jne
imul
imul
in
add
pusha
mov
xchg
pmaxsw
div
sub
fwait
mov
aas
mov
imul
aas
jge
pop
pop
sbb
push
and
test
pushf
and
adc
outs
pop
test
scas
and
cmp
xchg
fistp
dec
dec
fnstsw
xor
mov
xor
out
or
shr
lods
jns
push
dec
adc
push
xlat
add
inc
cmps
bound
mov
sub
and
jmp
dec
dec
pusha
popa
cli
sbb
jae
adc
(bad)
or
lods
sub
jg
outs
je
add
dec
(bad)
stos
loope
icebp
push
sbb
sub
jae
lahf
xor
sub
mov
pop
les
rcr
sbb
lea
sbb
popf
mov
xchg
lods
loope
dec
jmp
dec
sbb
ja
in
vmread
scas
repnz
ins
pop
xchg
or
push
push
inc
lods
fwait
push
sbb
hlt
pop
mov
je
mov
nop
adc
xchg
bound
mov
call
pusha
add
sbb
mov
pop
xchg
mov
loopne
push
stos
push
mov
dec
in
lds
mov
lock
or
push
mov
cwde
jne
retf
jb
push
fild
out
bound
sbb
fwait
ror
xor
pop
loopne
fldcw
loop
fidiv
idiv
pop
out
mov
mov
xchg
in
lds
ds
nop
dec
std
fs
into
ins
or
push
mov
cmp
xchg
push
(bad)
movs
jg
xchg
jecxz
test
adc
lock
inc
add
lock
sbb
cmps
into
lea
pushf
inc
cwde
cwde
or
test
push
sbb
std
loop
cmps
add
push
ins
ins
in
xor
fnstcw
dec
popf
mov
and
inc
lahf
sub
imul
retf
pop
inc
fucomp
pop
add
out
pop
jl
(bad)
pop
adc
call
out
call
mov
scas
cmp
lods
or
sbb
ret
mov
xor
xor
pop
pop
add
jp
arpl
lods
pop
pusha
dec
jbe
mov
loope
and
xchg
stos
imul
pop
imul
push
aam
sub
xor
aaa
loop
xchg
jg
mov
clc
retf
fidiv
imul
pop
mov
xchg
or
jmp
ret
jns
lds
xchg
out
jne
jns
mov
fs
mov
and
popa
imul
jle
mov
sbb
mov
imul
and
cmp
sti
sub
adc
pop
push
mov
cmp
add
lds
xchg
clc
test
ins
jmp
push
jl
push
pop
es
add
adc
add
add
loope
ins
xlat
mov
js
pop
fwait
mov
hlt
jno
fucom
rep
pop
clc
(bad)
(bad)
cmp
mov
pop
out
jb
(bad)
pop
xchg
movs
ja
loop
adc
mov
push
loope
imul
jge
push
xor
mov
cmps
(bad)
in
lock
pop
loop
call
daa
jo
mov
adc
cmp
jbe
xlat
xchg
movs
test
mov
jmp
fwait
jle
les
push
and
sub
jo
lods
inc
stos
jae
(bad)
adc
nop
mov
mov
sub
ret
clc
out
add
mov
shl
sbb
hlt
push
in
push
out
xchg
hlt
imul
in
sbb
sub
dec
jp
push
fsub
push
mov
das
dec
push
es
push
sub
jg
scas
fist
push
arpl
xchg
out
js
dec
dec
mov
sti
rol
push
fld
adc
inc
loopne
dec
jge
push
dec
push
xlat
mov
fnsave
movs
ins
shl
or
and
sar
ja
mov
punpckldq
xchg
cmps
sbb
jae
movs
pop
and
adc
lahf
(bad)
es
mov
jne
jmp
jns
xor
call
fwait
(bad)
jp
lods
repnz
scas
or
stos
mov
jge
in
(bad)
ins
xchg
pop
loopne
loop
pop
xchg
or
pop
repnz
clc
iret
mov
mov
pop
rcr
add
pop
cmc
xor
imul
pop
xor
sbb
sub
jbe
call
retf
or
pop
movs
xchg
push
push
sbb
pop
xchg
inc
pop
cwde
cli
xor
sbb
xor
test
(bad)
inc
outs
(bad)
loopne
pushf
in
(bad)
imul
stc
sub
and
int3
jns
cdq
mov
cdq
or
sub
mov
test
into
sub
ins
or
or
int3
inc
push
dec
push
clc
fsub
adc
adc
xchg
adc
into
mov
mov
cdq
adc
shr
aas
cld
xor
call
mov
xlat
in
cmc
xor
test
xchg
jle
enter
cli
sbb
(bad)
or
add
repz
pusha
cs
das
(bad)
adc
jle
ins
inc
dec
inc
cli
push
mov
dec
add
pop
lods
add
adc
daa
repnz
int
inc
jns
push
jl
outs
stos
mov
popa
jmp
data16
pop
call
xor
int3
adc
test
dec
push
icebp
push
push
ret
adc
outs
xor
xor
call
into
(bad)
fadd
mov
cmp
cmp
out
or
outs
sub
or
xor
fild
and
push
add
xor
(bad)
xor
sbb
sbb
add
xchg
ja
push
push
dec
outs
add
xchg
dec
jmp
cmp
call
xchg
and
repz
xor
test
aas
push
inc
fstp
sbb
or
pop
xchg
sub
test
int3
fwait
dec
cwde
adc
cmc
mov
ins
or
test
add
cmp
mov
jbe
push
retf
dec
repz
pop
sbb
in
xchg
mov
mov
cmp
add
add
mov
cs
sub
je
ja
mov
inc
dec
sbb
repnz
adc
push
(bad)
and
lods
mov
adc
cmps
or
jg
sbb
js
sbb
cs
jge
xchg
std
jae
xchg
jmp
and
(bad)
mov
adc
inc
pop
ret
mov
outs
rcl
sti
inc
cmp
pop
pusha
sbb
mov
push
imul
cmps
adc
add
retf
into
jl
xchg
outs
inc
ret
ror
cwde
mov
outs
sahf
sub
xchg
inc
xor
aad
xor
dec
call
in
cld
fwait
jno
enter
sbb
pslld
cmps
inc
push
loope
cwde
cs
mov
jno
jne
and
xor
mov
push
scas
or
mov
xor
mov
leave
addr16
xor
ds
adc
fdiv
inc
jbe
mov
bound
movs
iret
imul
test
sub
mov
shr
pop
pushf
fidiv
fadd
cld
call
mov
sbb
stos
push
jb
dec
mov
cmp
and
imul
pop
icebp
mov
aad
ret
xchg
and
dec
pop
mov
adc
add
and
cmps
jp
ret
retf
clc
dec
xor
cmp
mov
fwait
mov
sbb
retf
int
dec
push
dec
pushf
push
arpl
pop
jl
scas
sbb
jnp
es
mov
shl
inc
sahf
or
add
mov
(bad)
inc
adc
sbb
hlt
cmp
push
jg
mov
add
fbld
xchg
into
mov
jns
(bad)
gs
cmps
sub
popf
adc
lods
mov
call
xor
bound
mov
mov
lock
mov
call
je
adc
adc
scas
sbb
mov
loope
xor
ins
jp
lds
(bad)
sbb
sbb
inc
test
push
xchg
push
into
rcl
mov
xor
push
mov
xchg
stos
ret
scas
adc
push
inc
pop
cmps
dec
sub
mov
dec
push
outs
mov
pop
mov
sub
nop
or
add
hlt
dec
test
aam
in
(bad)
lahf
add
repz
and
int3
push
jns
loop
push
ret
outs
mov
jp
rcl
mov
mov
js
shr
mov
and
sbb
mov
or
stc
jmp
push
jmp
test
cmp
push
push
ins
mov
and
sub
ss
fnsave
inc
popa
inc
sbb
push
scas
outs
or
mov
jge
in
xchg
xchg
retf
inc
arpl
xchg
dec
outs
dec
dec
mov
mov
push
xor
stos
dec
dec
or
popf
and
fst
push
xor
xor
mov
mov
xchg
pop
fist
cmps
jmp
and
jnp
mov
jb
scas
rcl
add
enter
aam
repz
dec
dec
mov
sbb
gs
adc
in
pop
ins
clc
into
jmp
cmp
mov
popa
mov
and
je
adc
popw
sub
dec
push
push
sbb
adc
ret
popf
gs
jns
inc
test
retf
xchg
jns
mov
js
cmp
aas
cdq
mov
and
test
mov
dec
movs
inc
cs
add
fisttp
sti
pusha
cmp
xor
cld
aaa
arpl
jl
fnstenv
and
in
sub
pop
jmp
movs
in
mov
pop
push
(bad)
movs
out
je
int
les
(bad)
aad
shr
jle
and
cli
push
dec
push
popf
scas
addr16
sub
mov
call
sub
sub
rol
in
dec
mov
inc
mov
es
loopne
mov
add
pop
mov
xor
fild
jne
(bad)
addr16
push
rdpmc
outs
xor
cmc
xchg
lods
call
shr
jno
stos
mov
les
dec
(bad)
jbe
enter
pop
pcmpgtb
mov
pop
jne
pop
and
mov
in
cwde
mov
out
mov
lahf
add
loopne
rcl
iret
lock
pop
jp
jmp
rol
clc
or
push
cmp
xor
mov
paddusb
pushf
jge
repz
and
test
jns
(bad)
mov
pop
inc
fisub
cmp
mov
or
push
popf
sbb
and
cmc
mov
and
js
xor
ja
inc
sti
xchg
and
fwait
adc
xchg
mov
jecxz
mov
ja
iret
sbb
push
mov
rcr
pop
push
xor
xor
outs
aam
inc
xchg
push
fsubr
repnz
fadd
jo
xor
mov
sub
sbb
jns
cld
dec
cmps
adc
xchg
add
out
or
mov
jle
sub
add
push
push
ror
push
dec
jb
repnz
bnd
pop
into
xchg
cmps
jmp
mov
adc
imul
and
in
sbb
mov
test
data16
ins
sahf
add
inc
fwait
out
rcl
sub
imul
fisttp
add
push
movs
dec
jb
sub
jmp
cmp
sahf
mov
gs
jge
mov
ss
neg
aaa
jno
cmp
mov
loope
jge
push
or
xor
mov
mov
and
adc
sub
mov
(bad)
mov
mov
int
je
jmp
xchg
jecxz
mov
in
or
mov
movs
ret
xchg
xor
mov
fmul
por
pop
jp
repnz
sbb
mov
pop
imul
mov
cmc
loopne
frstor
dec
sbb
push
(bad)
imul
and
push
adc
cs
jmp
push
dec
jo
fdivr
cmp
in
aad
(bad)
ss
pop
adc
jl
xchg
sub
xlat
pusha
or
jge
int3
mov
clc
and
xchg
fnsave
and
or
jae
jmp
mov
xchg
pop
aas
in
or
or
xchg
sbb
das
adc
cmp
and
sbb
cwde
pop
cmps
xor
in
ds
test
mov
sbb
pop
rol
test
arpl
aad
out
xchg
or
test
sbb
push
call
jmp
ret
rcl
sti
add
inc
jne
xchg
mov
cmp
jecxz
test
sub
dec
je
popf
scas
shl
xor
dec
mov
adc
adc
lahf
test
std
inc
mov
dec
pusha
dec
enter
mov
sahf
push
sbb
pop
mov
inc
lea
out
loop
imul
ds
ficomp
repnz
ins
adc
leave
outs
int3
mov
pop
push
jne
sbb
ss
dec
inc
call
retf
dec
pop
add
pop
push
cmp
data16
addr16
daa
inc
add
mov
scas
dec
ret
arpl
mov
fdivr
xchg
repz
xchg
test
aas
ins
movs
rcr
scas
inc
(bad)
sub
adc
mov
(bad)
sbb
mov
push
jp
mov
mov
or
scas
dec
jne
rol
stos
fsub
(bad)
cs
sub
stos
cmps
nop
ins
fld
call
ret
imul
lods
shl
fimul
and
add
ds
pop
adc
cmp
or
leave
sti
mov
or
fwait
mov
or
mov
sub
stos
push
cdq
es
test
push
call
pop
ficomp
popf
(bad)
xchg
out
push
rcl
xchg
int
imul
in
in
and
xchg
push
repnz
mov
lock
xor
popa
pop
(bad)
sub
repnz
mov
arpl
lock
cmps
sub
adc
std
dec
fst
cmps
je
imul
test
mov
add
xchg
mov
aas
add
pop
mov
mov
adc
das
js
in
outs
dec
add
bound
xchg
fimul
xor
add
jmp
scas
and
mov
(bad)
mov
cli
arpl
std
repz
(bad)
imul
xchg
loopne
es
xchg
out
cmps
aam
in
aam
loop
icebp
loop
add
out
sbb
(bad)
push
add
mov
ins
ja
dec
dec
pop
nop
ins
call
test
dec
cmp
mov
mov
push
pop
pop
(bad)
nop
cmp
sub
dec
in
shl
ds
aas
(bad)
jmp
push
test
adc
stos
imul
push
mov
loopne
hlt
inc
mov
mov
pop
push
jecxz
std
call
scas
dec
xor
das
xchg
mov
call
ret
loopne
daa
ins
aas
popa
mov
test
jle
es
popf
in
(bad)
es
lahf
(bad)
movs
mov
push
pop
cmc
dec
mov
imul
outs
test
dec
mov
fdivr
mov
inc
pop
scas
mov
push
add
jns
std
lods
loope
dec
push
into
sub
xor
hlt
or
or
mov
enter
add
add
popa
pop
mov
stc
mov
enter
js
aas
idiv
dec
mov
cmp
popf
pusha
push
movs
or
pop
dec
out
loopne
fdiv
and
push
mov
adc
lock
adc
call
nop
add
cmp
sub
lods
jmp
lods
loopne
shl
out
outs
mov
mov
cs
pop
ss
fistp
ins
out
mov
(bad)
repnz
(bad)
cmp
gs
dec
cs
shl
push
into
or
xor
cmp
adc
std
mov
shl
out
sahf
jnp
cs
stc
add
scas
jae
ror
int
pop
in
jns
iret
add
and
and
sub
into
inc
push
pop
popf
cmc
sti
mov
jnp
ss
dec
dec
pop
outs
stos
(bad)
enter
lds
dec
dec
push
arpl
std
test
mov
cs
shl
lods
das
stc
(bad)
and
stc
add
mov
bnd
mov
lods
pop
int
neg
jne
jecxz
xchg
pop
(bad)
fs
lods
ror
jb
movs
iret
stos
xor
aad
xchg
or
movs
retf
call
sub
stos
cmp
mov
scas
or
or
mov
stos
cld
test
test
cwde
mov
jle
rcl
(bad)
xor
nop
add
test
pushf
nop
xor
icebp
sbb
xchg
repnz
sbb
xor
jmp
pop
stos
jmp
mov
in
out
fisub
jp
cmp
push
retf
adc
int
dec
or
jmp
push
int
sub
rcr
xor
xchg
inc
aad
and
jae
cs
ss
sub
add
mov
rcl
dec
into
div
push
jnp
mov
es
mov
frstor
shl
dec
xor
out
or
mov
out
xor
jp
mov
mov
push
cmp
std
(bad)
leave
jmp
rcl
into
mov
addr16
clc
enter
(bad)
adc
xor
or
add
cmp
addr16
int3
or
sti
or
sbb
sub
xor
xchg
in
aaa
jmp
repnz
mov
cdq
pop
lds
aaa
adc
sub
adc
data16
pop
sti
scas
xor
push
sub
sub
ret
in
sbb
fisttp
dec
int
dec
std
jno
xor
cmps
cld
hlt
mov
pushf
cmp
outs
mov
add
not
mov
jmp
push
call
xor
lock
xor
fld
sbb
jae
jbe
ficom
stos
add
addr16
fistp
call
lods
or
jne
pop
dec
out
jp
ins
xor
(bad)
xchg
es
iret
popa
mov
cmc
jb
xchg
gs
loopne
jb
xchg
fdiv
jmp
in
mov
or
jbe
mov
sub
lods
mov
add
pop
repnz
mov
pop
std
fs
cmp
out
in
mov
cmp
xor
inc
sar
push
jge
mov
jmp
xchg
mov
or
xchg
lods
xchg
or
jmp
into
mov
ja
adc
jmp
stos
clc
mul
hlt
fmul
cli
add
sub
call
gs
idiv
into
xor
mov
inc
stos
mov
ret
inc
ja
and
pop
dec
shl
cli
xor
inc
sbb
add
dec
xchg
pop
mov
and
push
or
lods
imul
sbb
cmps
imul
and
les
fisub
jmp
xchg
nop
jmp
pop
dec
sbb
mov
lods
push
scas
sbb
fnstsw
je
adc
cmp
mov
cld
mov
pop
les
and
in
and
mov
lods
jmp
jl
aaa
aad
ins
jl
push
or
mov
out
jo
xchg
jne
test
fcmove
inc
sti
loopne
push
jmp
jecxz
cld
aaa
ss
xchg
gs
cmps
gs
or
pop
into
addr16
test
adc
mov
cmp
neg
lahf
hlt
in
mov
sbb
push
pop
pushf
(bad)
cmps
push
and
outs
daa
inc
loope
cmp
push
or
sub
ret
mov
test
xlat
add
int3
clc
sar
das
jbe
cs
jmp
(bad)
rcr
push
jmp
jne
xor
pop
pop
or
sub
cmp
pop
ret
clc
scas
pop
fnstsw
movs
or
sbb
int3
clc
data16
jmp
jae
inc
adc
xchg
cmps
shl
pop
mov
add
hlt
xchg
or
fwait
mov
in
or
pushf
cli
test
jbe
rcl
je
or
mov
loope
stos
cmp
cmc
jnp
jmp
mov
mov
and
adc
sbb
test
push
aas
dec
jmp
add
mov
dec
push
ret
add
mov
lods
jne
mov
ins
xor
mov
das
movs
jmp
shl
mov
sbb
int
sub
pop
outs
jo
xchg
inc
rcl
mov
fadd
pop
sbb
sbb
dec
and
mov
pop
stos
popa
xchg
mov
inc
mov
or
pop
hlt
ficom
into
lahf
sbb
push
fnstcw
pop
xchg
aad
shl
add
mov
push
jge
sub
(bad)
mov
fld
add
dec
jg
(bad)
sbb
push
nop
scas
fistp
clc
call
add
cmp
cli
in
xchg
mov
aad
xchg
inc
std
aad
cmc
inc
mov
mov
aad
cli
xor
jmp
pop
loopne
out
jne
fidiv
push
add
int
add
movs
nop
push
jne
mov
jecxz
icebp
adc
or
ins
scas
cmps
cld
iret
jb
cmp
xor
lock
jbe
mov
loop
mov
cld
clc
pop
add
xor
mov
mov
inc
lahf
mov
fstp
retf
dec
popa
shr
das
lahf
or
mov
fisubr
jno
and
test
fmul
mov
aad
int
cmp
mov
mov
inc
inc
ret
mov
cmps
(bad)
xor
push
loopne
daa
aaa
adc
dec
out
les
clc
push
pop
(bad)
fdivr
dec
sahf
add
mov
xor
dec
nop
std
cmp
sar
sbb
and
add
pop
jne
sub
lock
lahf
fldenv
cmc
xchg
or
inc
mov
sbb
aaa
imul
cmp
pop
lods
fsubr
push
jnp
fmul
pop
xor
and
lds
jmp
xchg
jl
call
mov
loope
jecxz
dec
popf
lds
mov
jl
cld
or
ins
add
jno
sbb
sub
in
jge
fs
ret
fdiv
stos
pop
cmp
cwde
les
out
enter
xchg
mov
int
pop
imul
ja
xor
add
adc
popa
pop
rcl
hlt
jo
sub
arpl
int
add
dec
iret
push
and
rcr
sbb
mov
gs
jmp
sar
enter
and
jnp
mov
cmp
call
push
cmp
test
push
lea
sbb
dec
enter
sbb
pop
cmp
and
and
das
inc
outs
stos
in
test
lods
outs
shl
retf
dec
inc
stos
imul
leave
es
pop
shl
mov
or
dec
xor
(bad)
mov
push
(bad)
jmp
mov
(bad)
ficom
cs
inc
jecxz
push
add
aas
das
mov
push
movs
xor
int3
rol
jle
repz
outs
mov
xor
out
push
jmp
sahf
xor
imul
jae
jno
into
and
xchg
cmp
or
jae
xchg
dec
sbb
mov
pop
retf
jb
jb
lahf
jns
adc
sub
call
repz
mov
sbb
and
fdiv
xor
hlt
xchg
mov
adc
pop
js
dec
out
or
cmc
cdq
jl
cmp
sar
jbe
or
loop
lock
xchg
xor
jo
or
aaa
test
dec
push
pop
rcr
pop
sbb
shl
and
mov
add
call
and
mov
mov
add
xchg
cmp
lods
iret
out
fsubr
pop
mov
pop
mov
xor
enter
shr
scas
push
fwait
dec
add
adc
dec
pop
sahf
push
repnz
jmp
cmp
xchg
pop
nop
pusha
fldcw
test
or
jmp
xor
sub
ds
inc
lods
mov
pusha
adc
jne
stc
out
aam
push
or
clc
ret
jecxz
xchg
cmp
cli
or
lock
std
scas
mov
xchg
jbe
or
mov
sbb
movs
and
mov
or
push
pop
clc
dec
jnp
add
jmp
pop
adc
jae
adc
jno
cmp
mov
out
jl
out
push
jne
adc
lahf
cmp
xor
mov
sbb
push
int
pop
cmps
lods
xchg
or
mov
xor
push
les
push
mov
push
sbb
mov
lods
sbb
ss
retf
add
or
(bad)
and
sahf
xchg
mov
pop
adc
sahf
aas
xchg
xor
inc
pop
ret
outs
push
lahf
into
jmp
push
xchg
loopne
cmp
cmps
iret
int3
xlat
adc
movs
stos
add
or
(bad)
js
push
jge
cmp
xchg
mov
cmp
enter
retf
jo
lahf
xchg
and
popa
int
xadd
pop
jne
mov
xchg
jg
adc
les
mov
mov
and
push
(bad)
push
mov
(bad)
nop
stos
and
daa
mov
test
xchg
ds
cmps
jmp
sub
mov
push
mov
shr
js
sbb
mov
push
inc
cmp
adc
(bad)
loop
sub
xlat
fcomp
mov
cld
mov
and
or
xchg
popa
aam
lods
test
jns
add
nop
rcr
(bad)
popf
inc
mov
bound
popa
pop
fimul
xor
ins
les
xchg
push
mov
mov
test
mov
cdq
out
out
ss
xor
adc
xchg
bound
movs
out
enter
pop
and
sahf
rcl
fcom
pop
inc
adc
scas
sbb
jle
mov
(bad)
lock
cmp
jo
les
loop
sub
cld
jp
repz
sahf
(bad)
push
mov
test
hlt
mov
out
cmp
mov
push
jbe
mov
push
out
out
cmp
mov
pushf
out
mov
jmp
imul
enter
(bad)
int
cmp
movs
cmp
or
(bad)
icebp
mov
ret
xchg
in
and
xchg
das
loope
mov
pop
movs
scas
add
daa
cwde
das
or
loopne
push
xlat
(bad)
fs
or
rcl
xchg
retf
mov
or
dec
call
pop
stos
repnz
mov
push
cld
popa
xchg
adc
sub
arpl
cmps
pop
retf
jl
dec
xchg
inc
mov
mov
test
push
pop
stos
pop
adc
std
adc
mov
stc
enter
idiv
pop
inc
fmul
mov
adc
mov
xor
ds
adc
mov
pusha
test
idiv
ss
test
iret
ret
out
jne
push
arpl
xor
in
mov
dec
add
pusha
jmp
pop
pusha
leave
mov
mov
adc
daa
jmp
das
mov
mov
jbe
ins
shr
out
sub
test
xchg
sbb
adc
aad
das
sbb
movs
or
xchg
mov
sbb
ins
loop
cmp
in
push
scas
push
xor
dec
xor
mov
lock
pusha
lods
xor
xor
pop
pushf
mov
push
sub
les
aam
loop
fidivr
cmps
cmp
mov
imul
sbb
pop
xchg
jp
fs
enter
push
mov
push
mov
mov
pop
pop
(bad)
fsubr
push
mov
sub
cmp
inc
les
or
mov
cdq
into
stos
cmp
in
inc
inc
dec
lods
xor
cmp
fiadd
push
adc
fwait
jnp
cmp
mov
sub
jle
jbe
sahf
ins
dec
fcom
mov
in
or
mov
pop
or
sar
xor
mov
or
and
test
and
call
pop
push
loope
pop
lods
adc
cmp
push
cdq
jo
fdiv
rol
(bad)
or
rol
and
retf
je
xchg
pop
or
mov
clc
cdq
lds
fisttp
jg
je
sub
ins
sbb
mov
push
not
leave
sbb
adc
(bad)
and
pop
leave
pop
outs
and
add
dec
pop
lds
xor
jle
push
das
fwait
push
test
mov
ret
and
popa
add
mov
add
ret
addr16
mov
dec
in
push
xor
sbb
xchg
retf
add
in
jle
push
adc
xor
mov
mov
and
cmps
jecxz
or
outs
gs
xchg
cwde
out
in
dec
xor
aaa
xchg
and
pop
cli
inc
xchg
mov
fadd
dec
mov
adc
jnp
xor
fnstcw
imul
daa
retf
test
jno
ss
loope
sub
loop
dec
cwde
int
push
push
and
fisubr
test
inc
test
push
repz
repz
push
rcl
ret
aas
stos
out
push
cld
hlt
(bad)
or
not
shl
test
outs
sub
repz
jmp
aam
inc
add
dec
jno
cmp
test
in
fist
adc
vcvtss2si
push
repnz
jo
sub
xor
and
call
mov
enter
jnp
ja
outs
lahf
ret
mov
mov
push
retf
adc
sbb
pushf
xchg
and
mov
lahf
fcomp
ficom
loope
mov
push
sub
jns
cmp
sub
mov
(bad)
in
push
scas
loopne
push
mov
sub
retf
pop
sub
pop
sbb
call
sar
jmp
mov
push
je
std
cmp
inc
jne
xor
push
ds
sbb
sub
das
cmp
pop
pop
mov
or
dec
movs
push
jg
mov
shr
div
stos
bound
test
pmulhw
in
cmp
ror
or
xor
ins
sbb
pop
mov
out
repz
pop
pusha
push
lds
data16
(bad)
adc
pop
push
enter
out
xchg
lahf
lods
fisubr
shl
xor
lea
jno
call
sub
jmp
leave
mov
btc
nop
xchg
cmps
gs
pop
scas
xor
sti
shl
jmp
jg
ror
mov
call
sbb
and
mov
mov
fwait
cdq
out
sbb
lods
xor
call
jbe
call
pop
call
inc
mov
adc
xor
cdq
jmp
into
jle
lods
mov
mov
push
ja
ins
cdq
ret
sti
or
fstp
call
aaa
inc
xor
xchg
shr
lahf
pushf
call
xchg
mov
xor
jo
push
cwde
xlat
pop
bt
das
mov
xchg
daa
movs
mov
out
jne
dec
xchg
ins
push
sub
stos
push
test
xor
inc
jnp
jge
ins
cli
call
xchg
cmps
stc
in
push
push
repz
mov
dec
ret
sub
out
cs
jmp
popa
out
cwde
ss
jns
or
int
js
cmp
(bad)
aad
popa
xor
dec
push
sub
jecxz
pushf
bound
dec
cmp
cwde
sahf
pop
jmp
mov
and
jnp
jp
loopne
call
pushf
inc
cdq
pop
pop
nop
imul
xchg
cmp
imul
out
sub
arpl
sbb
xor
pop
cmp
pop
jno
jb
or
(bad)
lods
test
xchg
cmp
mov
xor
jcxz
sub
pop
mov
sbb
xor
cli
xchg
xchg
and
pop
fistp
pop
mov
jb
mul
mov
mov
aas
jl
sub
sti
jne
add
sbb
pop
enter
aam
mov
jo
(bad)
xchg
imul
mov
sar
add
push
jge
stos
cmp
adc
imul
pop
repnz
mov
inc
push
sbb
sub
cmp
dec
adc
ret
push
cmps
jbe
xlat
adc
sub
fdiv
out
xor
adc
cmp
and
enter
sub
push
loop
into
(bad)
and
pusha
pop
xchg
in
pop
pop
lock
or
jbe
(bad)
cli
pop
pop
rcr
mov
mov
out
adc
mov
pop
js
add
inc
pop
lock
movs
sbb
stos
inc
ja
xchg
ss
cs
std
dec
dec
dec
movs
popf
sub
pop
sahf
test
add
dec
int
sti
sti
js
dec
clc
sbb
icebp
dec
xchg
cs
out
(bad)
scas
cmp
inc
lods
lock
std
jecxz
cmc
jbe
(bad)
pop
addr16
mov
or
push
shl
icebp
into
shr
push
adc
sbb
dec
mov
cmps
jns
jmp
xchg
(bad)
loopne
push
stc
aad
mov
adc
pusha
mov
jmp
mov
cmps
and
xor
push
out
xchg
aam
add
jge
push
cmps
lea
(bad)
int3
aas
sbb
dec
jo
das
mov
or
jl
pop
cmc
jns
sbb
xor
retf
or
push
fwait
iret
call
mov
ins
jnp
popa
sbb
(bad)
jmp
inc
movs
movlps
loopne
ins
cmps
movs
ror
mov
movs
sbb
shl
adc
inc
or
cmp
es
adc
int3
inc
ds
jp
and
mov
push
je
xor
mov
sahf
stos
adc
aas
cmp
leave
rol
jl
sub
mov
mov
jbe
xchg
xlat
in
dec
xchg
mov
push
and
xor
cwde
movs
lea
pop
daa
fisubr
or
sar
imul
jb
(bad)
xchg
push
pop
sub
ja
pop
scas
sbb
fisubr
test
dec
into
jecxz
mov
dec
mov
aas
ror
add
and
and
dec
xor
dec
fidiv
mov
(bad)
and
mov
iret
test
rdpmc
imul
pop
(bad)
mov
add
push
pop
sub
xor
push
in
push
pop
sbb
pop
sbb
cmps
ss
movs
arpl
xchg
arpl
cmp
mov
cmp
or
mov
pop
(bad)
cmp
(bad)
pusha
test
test
gs
lahf
dec
fdivr
shr
push
into
pop
iret
jge
(bad)
sub
(bad)
in
and
xor
or
test
sar
and
fcmovnu
sub
arpl
aaa
push
ret
gs
clc
fidiv
push
pop
xor
xor
cli
add
sbb
sub
add
push
push
in
loopne
xlat
xor
mov
mov
adc
lea
and
test
popf
retf
nop
push
mov
inc
(bad)
mov
cli
ret
cmp
nop
test
enter
cld
outs
mov
shl
push
xlat
xor
retf
mov
fs
ins
xor
pop
jmp
mov
rcr
push
cmp
jae
mov
pop
retf
jns
icebp
sahf
xchg
addr16
mov
mov
jae
add
xchg
mov
stos
sub
cmp
mov
cmp
frstor
jl
xlat
imul
jae
ins
loopne
mov
scas
imul
int
xchg
ja
stos
repnz
jmp
sub
lea
(bad)
xchg
pop
imul
sub
gs
inc
mov
lds
jo
fdiv
cmp
push
bound
out
add
mov
inc
or
cmp
stos
repnz
dec
xchg
pushf
pop
cmp
mov
mov
and
xor
cmp
add
sti
imul
in
dec
mov
movs
iret
cmps
fnstcw
fidiv
xor
add
inc
es
out
push
inc
leave
add
iret
nop
imul
in
sysexit
lahf
dec
sbb
out
and
jbe
pop
and
adc
add
mov
adc
dec
test
out
movlps
mov
jl
ja
mov
neg
aad
dec
fisubr
xchg
nop
or
inc
mov
fidiv
cmp
arpl
ficomp
fisub
lods
or
repz
jb
pushf
mov
sub
adc
idiv
or
push
loopne
sbb
mov
xor
fs
mov
cld
int3
jnp
xchg
int
push
lds
mov
cmp
add
das
in
dec
aad
jnp
scas
add
xchg
cmc
inc
into
cmp
pop
lea
fsubrp
lahf
leave
push
add
nop
or
popf
push
es
pop
push
movs
mov
(bad)
mov
adc
xchg
stc
jmp
mov
push
test
push
sbb
in
sar
xchg
add
push
jo
fiadd
mov
mov
neg
les
lock
or
retf
add
xchg
add
dec
jno
jmp
enter
adc
arpl
int3
and
mov
jnp
aaa
(bad)
scas
mov
push
push
pop
mov
adc
xor
dec
xor
and
jae
inc
stos
mov
cmps
sbb
cs
ins
mov
test
sbb
jle
sbb
mov
xchg
and
popa
lahf
fdiv
jns
inc
out
sbb
push
sbb
stos
or
retf
leave
or
std
pushf
fwait
jle
call
adc
mov
shl
ret
dec
ja
xlat
test
call
out
sbb
lea
jmp
xor
fdivr
xor
int3
jb
mov
adc
addr16
cs
cli
enter
rol
pop
mov
pop
mov
retf
out
or
jmp
imul
cmp
cli
or
out
sti
mov
or
rcr
int3
inc
xor
out
push
cmp
fwait
jg
(bad)
outs
fld
and
adc
mov
(bad)
dec
outs
inc
xor
in
mov
push
dec
push
jno
mov
mov
int3
or
in
jle
outs
inc
mov
popf
data16
adc
dec
cdq
cmp
ja
loop
xchg
out
dec
aas
into
jbe
push
inc
sti
fisttp
aaa
xchg
adc
stc
fldenv
or
and
test
in
icebp
test
push
xor
outs
rcl
out
pop
int
or
push
leave
adc
jmp
add
sub
enter
call
add
out
gs
cmp
pop
fwait
sahf
inc
out
jecxz
pop
shl
pop
cmp
sub
adc
mov
mov
es
or
nop
idiv
jb
dec
sbb
fisttp
or
in
dec
(bad)
and
je
xchg
jge
aad
cmp
fild
jb
push
or
call
jp
jmp
cmp
or
push
xchg
sub
xor
pop
adc
jno
sub
push
xor
hlt
minps
sub
outs
pop
mov
sbb
inc
imul
es
xchg
jno
push
xor
fsubr
fstp
test
sti
mov
test
call
sub
stos
push
lock
mov
inc
test
cmp
and
dec
lock
jnp
repnz
bound
pop
(bad)
cmp
sbb
or
dec
mov
or
fwait
inc
jg
sar
mov
pop
gs
jnp
nop
fst
call
xor
leave
loop
movs
sbb
sbb
xor
loope
xchg
or
xor
and
aas
popf
or
mov
lahf
inc
aaa
mov
cli
jl
cmp
loope
sahf
bound
dec
pop
ins
pop
rcl
jmp
les
aaa
xor
jge
jl
xor
mov
test
xor
fs
cmp
pop
iret
in
dec
bnd
int
pop
mov
mov
lahf
lea
push
dec
mov
(bad)
mov
mov
fstp
or
sub
inc
push
push
aas
inc
xor
rcr
mov
push
jp
mov
add
fdiv
jno
(bad)
adc
push
rol
shl
stos
mov
fldenv
ficom
xchg
sub
push
out
ins
test
and
jmp
and
jg
outs
mov
stc
leave
int
dec
(bad)
popf
(bad)
pusha
mov
inc
test
sahf
push
enter
push
adc
inc
mov
or
or
dec
mov
pop
or
xchg
mov
retf
std
dec
sub
jo
inc
bound
jecxz
mov
push
sbb
add
adc
(bad)
lea
sahf
mov
pop
int
rcl
(bad)
xor
mov
push
add
mov
int
imul
in
iret
lods
jmp
jo
aas
popa
(bad)
mov
(bad)
inc
cdq
sti
leave
scas
std
mov
jmp
xchg
mov
shl
fidiv
(bad)
(bad)
mov
xor
xchg
(bad)
cmp
fiadd
jmp
jp
push
retf
cmc
xchg
sub
retf
or
out
jg
adc
int
adc
in
stos
fdivr
pop
or
call
cdq
in
xor
and
adc
adc
sti
cld
and
cmp
int
fdiv
pushf
push
call
movs
mov
push
fbld
xchg
pushf
pop
or
aas
inc
jle
xor
inc
or
idiv
inc
dec
inc
fimul
(bad)
dec
pop
loop
popa
xchg
inc
jge
add
inc
pop
loopne
fs
or
arpl
and
dec
push
push
fcomi
ror
inc
repnz
rcl
fiadd
ret
mov
mov
(bad)
cmc
add
pop
sbb
test
jns
jmp
pop
cmp
jae
cmp
js
mov
stos
xor
retf
cmc
fistp
xlat
fild
lods
or
mov
nop
scas
push
jo
and
movzx
add
(bad)
mov
mov
mov
mov
adc
dec
add
mov
adc
stos
sbb
dec
xor
pop
add
fwait
sbb
scas
outs
dec
call
mov
add
cmp
in
out
int
test
cmp
jb
sbb
pop
loop
retf
repz
movs
test
lea
inc
mov
leave
fimul
rol
pop
mov
jno
mov
fnstsw
and
sub
sbb
aam
mov
pop
fdivp
push
jp
in
xchg
jnp
pop
jge
(bad)
mov
(bad)
sub
push
inc
dec
test
sub
lods
jl
push
push
popa
add
mov
cmp
jb
and
push
ror
adc
aas
ins
sub
mov
popa
push
xchg
add
cli
(bad)
mov
retf
sub
das
and
imul
pop
aam
sub
add
cmps
rol
test
pop
das
pop
adc
fimul
daa
push
lods
mov
ins
test
sbb
push
dec
inc
add
xor
add
lds
xor
mov
lock
ss
out
jbe
ins
mov
ja
push
jnp
sti
inc
mov
sahf
xchg
sahf
and
dec
mov
rcr
adc
int3
and
mov
inc
or
and
xchg
stc
imul
jl
shr
call
or
mov
dec
xchg
jmp
fisttp
lea
ins
js
mov
lock
inc
adc
dec
pop
ret
rcr
push
and
stos
add
ror
dec
mov
dec
test
nop
stos
add
in
ret
ret
xor
les
or
mov
mov
std
movs
mov
sbb
outs
neg
ror
dec
fild
dec
pushf
dec
aas
add
dec
xor
cmps
xor
sbb
mov
aad
adc
and
mov
inc
and
popa
and
xor
fdiv
inc
nop
movs
mov
in
mov
movs
outs
(bad)
in
std
scas
jo
fisubr
div
sbb
outs
cli
mov
pop
out
push
aad
int3
fisttp
ins
(bad)
(bad)
jnp
ja
pusha
mov
add
or
jle
push
sbb
add
mov
rcl
outs
cli
push
(bad)
stc
adc
and
shl
cmp
mov
sub
jle
xor
fwait
jo
aaa
cmc
sub
add
dec
test
mov
out
add
scas
pop
push
ins
sub
sub
mov
scas
ficomp
ror
and
add
adc
mov
test
mov
adc
inc
mov
dec
add
sbb
xchg
repz
jnp
leave
scas
pop
iret
cmp
dec
push
dec
outs
push
ins
fdivr
daa
cmp
dec
adc
scas
repnz
jle
xlat
test
sbb
adc
or
mov
mov
mov
icebp
aas
(bad)
and
stos
xchg
lods
push
inc
cdq
pop
pop
sbb
(bad)
mov
rcl
inc
jge
and
fild
cmp
aas
cmc
and
mov
sbb
sbb
inc
out
aaa
int3
adc
mov
imul
aas
in
cmp
addr16
jo
jbe
xchg
jne
xchg
mov
shl
ins
stos
jge
and
ins
retf
and
fst
test
leave
aaa
lds
or
cmps
lods
aas
jno
dec
lods
add
cmps
mov
jbe
jmp
mov
push
mov
xchg
mov
dec
test
and
lea
leave
push
jg
pop
out
dec
sti
mov
push
add
inc
jmp
(bad)
mov
movs
pop
push
jns
adc
jns
or
push
pop
pushf
push
mov
mov
jo
ins
cmc
mov
sbb
or
dec
or
ins
mov
(bad)
lock
test
bound
or
dec
cvtps2pd
mov
(bad)
sbb
xchg
lahf
mov
cdq
leave
cs
cmp
mov
sti
mov
jecxz
les
ror
retf
cmp
push
mov
ins
fs
xchg
push
outs
cmp
mov
lods
pop
sbb
(bad)
(bad)
sbb
mov
mov
std
xchg
xchg
stos
fwait
inc
sbb
jge
jo
ss
and
ja
push
sub
jmp
add
and
pop
(bad)
sub
mov
movs
test
mov
or
and
mov
sbb
fiadd
cld
retf
or
shl
push
in
mov
out
sub
pop
xchg
aam
xor
sub
cmp
fcom
or
mov
ret
jne
jge
out
scas
popa
cmc
mov
jmp
dec
pop
jmp
cld
jmp
mov
scas
and
add
mov
fcmovb
or
sbb
clc
int3
adc
push
mov
jg
xchg
loopne
cmp
imul
mov
dec
repnz
mov
push
movs
cmps
dec
mov
ret
pop
sar
fistp
sbb
dec
psrad
ins
adc
rol
mov
pusha
fsubr
xchg
push
mov
mov
pop
xor
out
imul
xchg
mov
mov
aad
fisub
rcl
arpl
movs
out
and
xchg
pop
icebp
or
clc
ins
arpl
jae
loopne
mov
fist
mov
jge
sub
in
(bad)
or
add
sub
sbb
jbe
ficom
jp
mov
mov
xchg
prefetch
and
pop
cdq
xor
and
retf
repz
retf
fldenv
sbb
popf
(bad)
in
inc
mov
test
mov
(bad)
icebp
add
(bad)
clc
scas
push
ds
xlat
call
pop
pop
add
cdq
sbb
retf
dec
and
push
jge
in
les
aaa
(bad)
fstp
pop
imul
sub
mov
xchg
jo
stos
add
adc
aad
ss
leave
cmp
je
sub
aam
jo
outs
mov
push
push
dec
rol
mov
fldl2t
(bad)
sbb
xor
add
lods
sub
jp
pusha
and
push
popf
shl
xchg
repz
std
dec
dec
hlt
mov
add
jo
stos
leave
(bad)
push
out
push
mov
popf
cmps
cmp
pushf
mov
inc
shl
mov
dec
retf
cmp
out
jg
xor
push
bound
jb
mov
mov
push
shl
jae
fsubr
pop
inc
rcr
stos
js
push
sub
(bad)
aaa
and
jnp
fldcw
push
pop
and
movs
fisttp
or
cmp
bound
cs
fld
repz
mov
cs
cmps
movs
ss
into
nop
es
call
iret
cdq
loopne
(bad)
jb
std
test
push
xchg
dec
xchg
fsub
and
sbb
(bad)
aad
pop
mov
lds
and
sahf
sub
or
sbb
test
mov
jo
or
push
cmp
mov
sbb
add
fld
lds
fdivr
push
ss
or
gs
mov
lods
neg
xchg
fsubrp
mov
cmp
ss
lock
mov
push
movs
and
shr
jae
dec
repnz
mov
test
cmp
jg
scas
and
jle
ror
xchg
inc
nop
mov
fimul
movs
fadd
mov
cmp
pop
pop
pop
iret
cmp
(bad)
test
push
mov
xchg
mov
ja
(bad)
aam
jmp
retf
cs
nop
pop
mov
jno
push
mov
jmp
jno
jo
(bad)
shr
jns
stos
or
inc
cld
xchg
movs
sti
sbb
xor
mov
sbb
sbb
and
nop
mov
into
cmp
shr
jns
pop
mov
xor
test
pop
cli
jg
dec
sbb
cmc
jnp
in
repnz
xchg
and
inc
mov
push
ins
test
push
add
aad
dec
inc
fdiv
rol
bound
call
sbb
jecxz
or
inc
cmp
(bad)
add
xor
(bad)
out
fld
inc
imul
cld
test
sbb
xor
push
push
push
test
xor
clc
mov
rcr
(bad)
iret
fwait
test
or
or
ror
cld
inc
(bad)
fild
aad
or
arpl
mov
ror
mov
or
ret
(bad)
dec
dec
push
push
add
or
cmps
sub
std
sbb
ja
pop
push
jmp
xchg
adc
xchg
add
es
or
retf
out
dec
jnp
cmps
test
test
sub
dec
jne
ud0
pop
test
cmp
sahf
adc
(bad)
cli
fadd
mov
push
xrelease
xor
retf
sbb
fst
mov
das
push
push
jae
add
psubusw
mov
rol
loopne
cmp
sbb
ret
push
les
dec
repz
inc
lods
xor
test
mov
cmps
loop
pusha
pushf
push
cmps
icebp
sbb
xor
adc
rcr
xchg
(bad)
xor
int3
mov
xchg
mov
fcmovbe
cld
pushf
push
pop
arpl
push
add
retf
std
(bad)
repz
mov
mov
movs
sbb
xchg
inc
dec
sar
adc
fdivp
adc
call
add
out
inc
dec
sbb
fcmovb
xor
xchg
stc
jge
into
test
inc
ja
rcl
pop
jbe
test
pop
movs
push
iret
mov
mov
push
jg
adc
push
jmp
mov
push
aas
sub
inc
dec
sahf
cmp
je
js
pop
scas
nop
mov
or
cwde
cmp
fdiv
xchg
test
fsubr
ficomp
inc
ins
jbe
(bad)
jmp
add
test
cdq
cs
aas
aaa
jmp
dec
push
inc
cmp
mov
mov
das
cs
or
(bad)
imul
cmps
(bad)
xchg
sbb
lock
pushf
mov
add
and
ret
loopne
sub
inc
sbb
xchg
push
xchg
dec
adc
repz
xor
push
dec
mov
and
jmp
hlt
jle
add
ins
sahf
xchg
ret
and
fwait
aaa
sbb
jno
(bad)
or
int
mov
pop
jl
xchg
jmp
dec
stos
call
lds
out
dec
sbb
and
mov
sub
in
ss
cwde
inc
ins
aam
icebp
cmp
test
sbb
xchg
pop
loopne
pop
daa
jp
or
mov
mov
xchg
mov
int3
push
cmp
lahf
mov
add
jbe
stos
push
stos
jmp
in
cmc
sahf
fcomip
push
dec
pop
xlat
sub
cmps
dec
fiadd
and
(bad)
pop
sti
in
xchg
jl
xor
xor
in
popf
dec
mov
mov
retf
imul
js
mov
mov
iret
or
add
mov
shl
sub
push
in
icebp
xchg
dec
add
movs
out
xor
mov
adc
arpl
push
cmps
fs
out
cli
mov
shl
jge
stos
mov
mov
imul
inc
push
aaa
jle
mov
mov
fwait
adc
cld
jb
or
mov
std
icebp
pop
ror
cmp
mov
test
or
xchg
mov
mov
scas
fdivrp
in
popa
out
stos
sbb
hlt
add
js
bound
dec
sub
jne
int3
pop
sbb
push
dec
bnd
(bad)
cs
jnp
out
adc
pop
jne
sbb
mov
pop
push
mov
aaa
pushf
jmp
mov
hlt
sti
ss
sbb
cli
or
fcomp
jnp
sbb
jp
pop
pop
outs
push
ins
cmp
dec
(bad)
out
mov
mov
lahf
mov
std
cmp
retf
movs
jne
pusha
fist
rcl
jecxz
mov
pushf
clc
xchg
bound
out
push
and
dec
sahf
inc
lock
mov
rol
dec
or
scas
cpuid
adc
mov
add
ins
cld
mov
pop
inc
mov
arpl
and
ss
mov
inc
shl
jl
and
test
and
movs
fisubr
movs
add
adc
xor
je
cdq
add
jne
or
(bad)
icebp
mov
pop
jl
xchg
xchg
cmp
add
pop
hlt
into
jnp
mov
movs
and
sbb
mov
pop
inc
add
bound
add
scas
cmps
std
mov
mov
adc
ficomp
enter
fcomp
popf
sub
idiv
out
ret
jne
jecxz
pusha
push
or
mov
dec
sbb
stos
leave
cmps
xchg
and
push
(bad)
inc
popf
sub
sbb
test
cmp
int
fnstsw
sub
clc
cdq
retf
cmp
loop
aaa
test
pop
fcomp
jbe
and
mov
cmp
xchg
xor
cmp
mov
lods
hlt
retf
rcl
xor
inc
push
push
jns
and
mov
mov
(bad)
and
xchg
cwde
jecxz
sub
push
xor
add
dec
dec
pop
lds
pusha
pop
mov
pop
adc
jo
ja
fidivr
ret
sbb
out
sbb
jae
sub
fimul
mov
fcomp
push
mov
and
inc
nop
or
sahf
push
idiv
dec
push
mov
lahf
mov
scas
aas
mov
xchg
sahf
xor
(bad)
stos
enter
dec
cs
inc
mov
dec
mov
cli
test
pop
mov
push
jmp
icebp
push
in
cmps
mov
call
retf
cmp
ds
int
adc
in
push
ss
icebp
fucomip
add
pusha
mov
ss
or
jp
adc
push
xor
(bad)
or
mov
xchg
out
ret
(bad)
pop
int
mov
fstp
cmp
cmp
loope
jecxz
mov
sbb
dec
aaa
(bad)
cmp
(bad)
dec
xlat
repnz
jno
dec
mov
or
in
sbb
sub
sbb
not
(bad)
(bad)
call
test
sub
pop
push
loop
inc
pop
jmp
dec
push
cld
cmpps
nop
xor
jmp
in
mov
mov
and
jmp
bound
and
jle
and
push
test
call
and
scas
fadd
jmp
push
repnz
pop
or
sub
or
(bad)
idiv
pop
test
push
scas
arpl
pusha
cwde
scas
push
aad
mov
inc
test
adc
stos
ins
arpl
mov
sbb
cmp
jmp
test
xchg
movs
nop
stos
mov
mov
outs
dec
dec
xchg
call
not
jbe
add
fs
lods
adc
cdq
hlt
(bad)
out
or
test
(bad)
repz
retf
mov
push
call
stos
(bad)
mov
and
dec
add
test
mov
inc
lahf
cmp
sub
sbb
test
les
xchg
inc
lods
gs
fmul
out
xor
inc
xchg
add
inc
repnz
sete
aam
add
js
jle
test
jecxz
dec
sub
mov
fcomi
xchg
pop
int3
add
mov
adc
dec
inc
stos
hlt
leave
add
adc
mov
pop
mov
push
jae
xchg
imul
out
adc
mov
leave
inc
mov
rol
mov
test
inc
es
mov
pop
(bad)
mov
add
(bad)
mov
lock
cmp
cs
dec
xor
in
push
or
cmps
cmp
movq
jns
mov
push
jb
leave
push
mov
jns
or
es
push
jmp
int
xchg
fucomip
inc
(bad)
fisttp
mov
or
cdq
cmp
fld
inc
fwait
jno
test
push
xchg
nop
shl
bound
cmc
test
add
rcr
adc
xchg
dec
and
aad
push
out
push
push
int3
cdq
cmc
loopne
aaa
mov
adc
inc
test
and
cmp
sub
inc
push
cmp
ins
fdivr
jl
push
loopne
int
jnp
jmp
sahf
add
std
add
aam
aaa
xchg
xlat
mov
(bad)
pop
mov
inc
rol
(bad)
xchg
cmp
and
xor
nop
scas
stos
add
ret
int3
jne
dec
mov
fcom
mov
in
and
scas
push
out
out
jecxz
sub
arpl
cmp
push
mov
les
jmp
icebp
cmps
push
call
shl
scas
icebp
push
into
inc
mov
shr
pop
xor
dec
pop
addr16
outs
jp
ret
sbb
push
lods
dec
jg
cmp
lds
retf
enter
mov
add
sbb
in
mov
mov
push
das
push
dec
mov
mov
xchg
mov
stc
mov
or
sbb
outs
sbb
xor
(bad)
xor
xor
(bad)
std
sub
push
js
xchg
mov
int3
xchg
test
adc
out
data16
out
mov
jmp
stc
arpl
sub
xor
xchg
push
les
mov
fidiv
dec
fs
cmp
cmps
cmp
gs
stc
pop
mov
push
sub
ins
outs
add
aad
(bad)
xor
lahf
pop
mov
test
xchg
in
cld
dec
and
stc
cmp
inc
stos
xor
retf
mov
push
mov
loope
test
xor
mov
data16
dec
ret
sub
mov
xchg
push
lods
ret
dec
jl
xchg
lds
ja
(bad)
push
mov
mov
xchg
push
icebp
and
xchg
push
loopne
mov
mov
and
push
call
(bad)
and
mov
hlt
fld
xchg
xchg
mov
fiadd
dec
test
xchg
push
cmps
daa
fiadd
dec
aam
fst
pushf
xchg
sub
cmp
out
sub
add
jg
test
stos
lock
xchg
mov
xor
ret
xor
fbld
mov
lock
pop
scas
(bad)
or
inc
push
ds
retf
jo
pop
push
retf
aas
sahf
cmp
aam
xchg
shl
push
or
dec
arpl
aad
scas
inc
add
fmul
push
fwait
sub
call
cmp
stos
jno
fsubr
xchg
or
int
test
dec
adc
adc
fwait
and
and
in
sub
test
je
inc
sar
jp
test
es
push
xor
dec
and
jmp
ins
lea
sub
xchg
clc
and
mov
scas
es
div
inc
cmp
repz
mov
pop
mov
inc
aaa
sbb
push
imul
xor
icebp
sub
inc
outs
dec
call
shl
popf
ins
pop
outs
ds
lahf
and
xchg
sub
inc
and
mov
js
test
or
sub
jnp
dec
fimul
inc
in
dec
lea
pop
cwde
pushf
pop
ror
movs
pop
mov
mov
ins
jcxz
mov
adc
or
or
mov
fist
call
mov
inc
lods
enter
cmp
repz
xor
adc
mov
ss
out
jecxz
lods
and
pop
dec
shr
sub
and
retf
popa
sub
ror
test
repz
mov
loopne
pop
ret
dec
jp
lahf
jle
xor
adc
xchg
cmp
aad
dec
shl
shl
inc
inc
pop
shl
bound
mov
mov
shl
push
xchg
(bad)
jecxz
lahf
pusha
jl
xchg
mov
xor
or
cmps
(bad)
sti
inc
aaa
scas
jmp
call
data16
jno
mov
xchg
adc
sbb
mov
and
jb
mov
add
pop
dec
cmp
cli
dec
add
push
ja
sub
sub
int
shr
pop
mov
mov
ins
int
xor
pop
fsub
fld
cmp
les
xchg
dec
add
sub
cld
push
xchg
pushf
inc
sub
dec
movs
mov
out
shl
cs
mov
xor
cmp
lods
mov
mov
icebp
je
lock
cwde
fsubr
fldenv
xor
add
stos
daa
dec
or
xchg
sti
sbb
inc
ins
xlat
mov
or
adc
cmp
cli
icebp
test
inc
test
mov
mov
jb
fcmovu
cld
outs
call
fcomp
and
das
fisubr
mov
inc
outs
js
add
cmp
repnz
test
pop
and
dec
cmp
jge
out
pop
imul
(bad)
(bad)
popa
(bad)
xchg
mov
mov
dec
and
mov
push
mov
ins
imul
mov
cmp
jnp
into
sbb
add
leave
and
jmp
pop
push
(bad)
xor
push
stos
mov
mov
pushf
lea
mov
pop
ja
dec
sahf
cmp
(bad)
sbb
rol
daa
fnstsw
dec
cmp
mov
inc
les
hlt
lods
dec
adc
sub
jp
xor
fstp
in
push
inc
inc
mov
loop
test
sbb
nop
xor
fld
mov
ffreep
js
push
aad
xchg
shl
call
mov
aaa
dec
push
mov
stc
(bad)
(bad)
jns
ins
stc
dec
xchg
adc
mov
ret
aaa
pop
std
sti
jo
sbb
or
mov
adc
jnp
inc
xlat
cs
(bad)
ficomp
ds
es
jns
pusha
bound
adc
xchg
data16
daa
push
dec
inc
inc
dec
gs
enter
xchg
add
pop
jns
mov
ins
jge
push
shl
jg
hlt
lods
add
mov
and
push
dec
movsx
xor
pop
add
push
ja
and
sbb
repnz
sbb
(bad)
xlat
or
je
ss
not
movs
loop
(bad)
cli
scas
cmp
ss
sub
mov
xchg
sub
and
sti
fdiv
movs
pop
and
not
inc
sub
test
cmp
inc
(bad)
jb
inc
push
cmps
mov
sub
add
test
data16
push
sbb
hlt
xchg
mov
into
or
and
push
add
into
sub
push
jecxz
(bad)
pop
int
clc
cmp
lds
pop
bound
pop
mov
inc
repz
(bad)
jo
jne
dec
pop
push
cdq
push
adc
ds
repz
add
fistp
add
jnp
adc
xchg
jae
sub
push
xchg
retf
jo
xor
sub
or
test
call
add
in
dec
jno
pop
call
mov
sbb
daa
push
pop
lahf
ret
inc
ret
(bad)
test
test
(bad)
xchg
out
dec
fcmovb
or
pop
xor
dec
cmp
push
sub
lock
mov
lea
call
sar
mov
and
cmps
int3
clc
mov
xor
sbb
lods
leave
or
in
pop
or
pusha
scas
cwde
movs
xchg
cdq
fs
rcr
scas
mov
imul
mov
pop
add
mov
retf
jno
(bad)
in
adc
test
(bad)
jecxz
outs
call
mov
xchg
addr16
ins
mov
xchg
sub
ins
push
lods
jl
pop
shr
cmps
jmp
and
int3
jmp
sub
cmp
or
jns
std
iret
js
mov
inc
mov
cli
mov
mov
inc
mov
xchg
out
fcmovne
cmps
scas
jmp
imul
lods
mov
hlt
stc
dec
add
movs
xor
enter
pop
and
push
rcr
(bad)
fdivr
push
xchg
xchg
cdq
dec
js
dec
push
push
into
loopne
gs
(bad)
jbe
xchg
push
jnp
and
loope
sub
mov
sbb
add
sti
sub
or
xchg
scas
data16
pop
mov
neg
stc
xchg
movs
xchg
(bad)
in
dec
mov
aam
std
fcomip
mov
mov
(bad)
out
mov
xchg
out
mov
pushf
in
mov
sub
std
sbb
retf
test
push
and
xor
cmp
dec
dec
sub
fwait
and
and
fwait
jae
fs
push
retf
xlat
icebp
xchg
pop
pop
jns
cmp
dec
and
ja
fsubr
or
test
push
sbb
addr16
cmps
inc
sub
pop
jbe
mov
int3
fld
or
sub
movs
les
ss
lods
xlat
mov
push
push
into
scas
retf
call
das
adc
mov
cmps
aaa
ins
nop
cmp
pushf
xor
add
jo
leave
jl
push
pop
aaa
or
fldcw
fsubr
(bad)
mov
jecxz
sbb
in
lds
fcom
popf
add
into
cmps
hlt
mov
ja
jb
jp
jle
sub
shl
test
xor
ret
fldcw
jns
adc
daa
fldcw
enter
test
popf
mov
fcomp
out
ins
cmps
dec
mov
mov
pop
mov
gs
test
ret
push
adc
inc
retf
push
scas
and
test
fst
lea
(bad)
test
leave
ins
jle
lea
jo
lea
mov
ja
xchg
mov
push
fcomi
fstp
outs
sub
test
cmp
pop
rcl
lock
sbb
je
mov
inc
push
mov
scas
sbb
test
push
and
jp
add
jl
int
and
cmc
pop
in
pop
ficom
inc
jg
aaa
in
pop
dec
push
xchg
jo
out
gs
push
adc
push
jmp
and
jecxz
fwait
ret
adc
pop
jle
pusha
xlat
lods
xor
dec
cmp
sbb
or
cmp
gs
mov
or
jl
fs
adc
add
add
xor
cld
lods
jns
mov
push
jns
(bad)
stc
mov
and
mov
dec
(bad)
sbb
in
adc
push
ret
jnp
adc
lahf
scas
inc
retf
imul
or
sti
aas
xor
stos
sti
mov
gs
mov
jp
std
add
jle
sub
test
fisubr
(bad)
jns
mov
and
push
int
dec
add
sub
xor
and
test
test
outs
sub
adc
iret
inc
mov
adc
je
sub
imul
mov
mov
dec
rol
sar
enter
mov
mov
adc
stc
dec
or
fisttp
dec
ret
cmps
sti
add
js
icebp
in
out
mul
retf
ror
pop
sbb
mov
inc
ins
sahf
cli
xchg
loope
fld
jge
les
push
jb
es
sti
(bad)
aaa
mov
scas
idiv
pop
xchg
sbb
mov
push
xor
mov
xor
mov
sub
xlat
lock
imul
jle
cmp
pop
mov
imul
xor
icebp
xor
loop
pop
outs
mov
nop
pop
fwait
add
fcom
pushf
mov
std
and
jne
xchg
arpl
mov
shl
ficomp
mov
stos
inc
fimul
xor
pop
cmp
js
dec
add
pop
xchg
lock
add
mov
test
call
push
xor
or
or
or
cmc
shl
push
push
adc
jns
aas
sub
sbb
xchg
mov
mov
xor
pop
imul
sub
test
mov
dec
iret
mov
inc
pop
mov
cmp
loope
push
and
push
adc
pusha
xchg
mov
add
mov
dec
jbe
or
cmp
retf
sub
and
leave
pop
hlt
test
stos
shr
push
leave
sub
xchg
or
xchg
pop
and
int3
leave
inc
or
mov
xor
call
mov
xor
bound
sub
inc
sub
stc
(bad)
pop
add
ds
ret
pop
push
adc
mov
push
jl
cmc
jge
retfw
xor
out
arpl
sar
push
shl
add
ja
adc
adc
ror
scas
inc
jae
push
(bad)
mov
jae
loop
sub
add
out
jo
mov
or
push
bswap
and
sbb
shr
(bad)
dec
jmp
dec
outs
stos
mov
js
mov
retf
add
xchg
ficom
push
inc
pushf
into
and
sub
mov
cwde
(bad)
fsubr
push
das
push
inc
scas
mov
lahf
inc
xchg
add
and
jecxz
and
icebp
and
out
sbb
aas
push
add
addr16
and
push
ret
addr16
mov
lods
call
push
rol
(bad)
in
das
mov
mov
jo
or
jne
mov
pop
mov
stos
movs
inc
fs
mov
mov
dec
fimul
stc
push
fistp
jmp
pop
fs
add
test
cs
repnz
in
or
(bad)
out
enter
lods
inc
mov
mov
push
fidiv
rol
inc
sub
retf
dec
cld
sbb
xchg
fs
mov
cmp
xchg
and
arpl
ins
push
aas
xor
jmp
or
pop
sub
sbb
cld
inc
int3
inc
add
leave
pop
push
cs
mov
and
outs
cmp
sub
ja
fs
cmp
xor
mov
adc
xchg
fistp
and
push
add
push
ds
je
lea
in
mov
sub
xor
cmp
mov
test
and
fst
mov
push
stc
mov
std
push
xor
jnp
jae
dec
gs
push
out
dec
movs
inc
lahf
imul
and
into
xchg
(bad)
fbld
and
or
js
repz
inc
jge
loop
and
mov
dec
mov
cdq
lock
push
cmp
sbb
mov
ss
xchg
(bad)
pop
cmp
mov
mov
or
nop
jnp
ret
jbe
fwait
jae
and
stc
jmp
jno
std
xor
push
(bad)
mov
add
xor
or
movs
or
dec
(bad)
mov
pop
adc
mov
ss
out
ror
(bad)
call
int
arpl
push
mov
jo
lods
bound
pushf
pop
stos
mov
in
sbb
push
out
ficomp
or
retf
xchg
in
xchg
into
in
int3
lds
jle
fld
daa
cmp
iret
pusha
in
push
pop
pop
in
js
test
push
pop
inc
dec
push
mov
leave
xor
sbb
mov
(bad)
popf
sar
repnz
pusha
xlat
mov
pop
repnz
cld
sbb
or
mov
fdivr
rol
cdq
ror
add
(bad)
movs
xchg
xchg
inc
test
adc
out
xor
outs
or
xchg
adc
sahf
lods
(bad)
test
ror
pop
dec
xchg
mov
sbb
inc
cmc
sub
adc
ins
sub
scas
pop
inc
scas
xchg
addr16
mov
xor
(bad)
int
sub
mov
repnz
js
test
aaa
sub
push
aad
mov
in
cdq
cmp
inc
fxam
push
(bad)
cmps
fadd
sahf
jecxz
lea
enter
fiadd
or
stos
push
dec
mov
sbb
imul
push
aam
das
lahf
jb
or
retf
push
pusha
mov
pop
mov
xchg
fld
iret
das
pushw
into
dec
enter
pop
je
push
inc
dec
adc
bound
jge
stc
mov
je
scas
ins
data16
push
icebp
cld
push
in
int3
jbe
repnz
push
cmp
sub
ins
mov
neg
rcl
push
cmp
shl
pop
loope
repz
xchg
sub
add
pop
cmc
stos
push
out
or
loop
push
dec
jno
pop
xor
shl
inc
fdiv
jl
ins
(bad)
xor
mov
cmp
jo
rcr
pop
fs
js
mov
pop
(bad)
and
mov
into
xchg
or
add
les
cmp
cli
shl
push
xchg
cwde
add
adc
add
mov
and
daa
repz
sub
push
inc
xchg
test
fs
lock
add
mov
test
cmp
cdq
sub
shl
sti
fadd
out
inc
inc
jl
into
dec
neg
cli
mov
mov
sub
inc
test
rcr
mov
push
ins
inc
add
cs
sar
(bad)
push
push
fstp
inc
(bad)
jmp
dec
fiadd
sbb
push
mov
xor
mov
aaa
rcr
push
sar
pop
daa
xor
aad
pop
ret
ins
pushf
not
push
xor
ds
cmps
cmps
fxch
xchg
outs
xchg
stos
lea
sub
cs
sbb
test
pop
(bad)
sbb
dec
xor
in
imul
add
out
mov
retf
out
mov
out
out
stos
lds
xchg
sbb
mov
jns
ja
adc
jmp
pop
shl
sub
push
pop
sbb
clc
lahf
mov
jle
push
les
pop
adc
jmp
cdq
push
sbb
xchg
jmp
push
cmp
mov
pop
movs
pushf
push
ret
or
mov
aas
mov
xlat
add
cmps
mov
pop
les
outs
imul
jl
cwde
dec
jns
mov
scas
test
imul
fist
fld
aas
mov
sbb
in
dec
and
pop
inc
jg
and
cmp
sub
cmps
mov
pushf
lock
xor
sub
xor
mov
mov
arpl
enter
xor
mov
inc
xor
or
xchg
and
mov
pop
xor
push
mov
cmp
retf
mov
jnp
lods
popa
pop
(bad)
fisttp
mov
xor
push
and
inc
xor
sbb
(bad)
scas
mov
test
xchg
push
adc
stos
pop
adc
test
test
pop
repnz
jg
bound
icebp
xor
mov
mov
pushw
out
fmulp
out
and
mov
inc
mov
or
pop
xlat
inc
loop
adc
push
hlt
adc
aad
das
push
sbb
push
int
xor
ds
jbe
inc
sub
dec
pop
cmps
loop
inc
adc
push
aaa
jecxz
and
aas
and
mov
enter
out
mov
sub
add
jns
mov
gs
xor
enter
cmp
dec
in
ror
pop
jns
in
and
jle
pop
aaa
push
push
mov
pop
mov
add
xor
xor
sar
in
cmp
mov
lods
mov
test
add
ret
(bad)
push
mov
mov
stos
js
inc
loopne
xor
imul
rol
or
or
out
push
pop
pop
test
push
clc
adc
sbb
sahf
xchg
push
not
call
xor
mov
mov
cdq
xor
add
stos
in
aaa
imul
mov
pushf
mov
inc
fcomp
and
cmps
cmp
and
pop
or
gs
xlat
fsub
mov
imul
jb
sub
dec
pop
call
imul
jg
in
(bad)
or
xchg
sub
(bad)
and
int3
fld
stos
jecxz
scas
lods
push
or
mov
in
add
push
into
ror
stos
ss
jmp
retf
dec
ja
sub
popa
jae
or
push
inc
dec
cld
fs
dec
cmp
popa
dec
in
ins
mov
popa
jg
dec
mov
bound
std
stos
fstp
ret
and
pop
xor
mov
sbb
adc
xchg
pop
out
push
jp
lock
bound
xchg
adc
fcomi
jno
arpl
adc
fidivr
dec
fldcw
sti
add
xlat
sub
std
and
jnp
test
or
clc
addr16
leave
mov
(bad)
cmp
mov
dec
(bad)
dec
ret
pop
in
in
cmp
test
push
cmp
aam
cmp
aaa
ss
div
bound
jmp
std
div
cmps
xchg
xor
pop
iret
mov
fmul
dec
mov
add
fcomp
mov
jg
xchg
scas
int3
xor
dec
stos
and
push
gs
mov
jl
sbb
xor
rcl
dec
out
in
xchg
icebp
dec
mov
adc
sar
lea
inc
stos
xchg
in
enter
pusha
lock
out
sbb
enter
mov
adc
jecxz
inc
xchg
fsubr
xlat
lea
push
test
pusha
out
push
das
jmp
ja
nop
shr
(bad)
call
xchg
cmp
jnp
xchg
pop
rol
ds
(bad)
fwait
popa
jg
mov
sbb
pop
ret
nop
cmc
mov
mov
ror
call
pop
and
pop
inc
push
call
outs
mov
pop
sbb
in
jae
test
pop
mov
test
pop
xchg
pop
outs
popf
ds
enter
jmp
scas
test
fcomp
out
data16
in
(bad)
fdivr
mov
mov
mov
shr
mov
shl
hlt
push
mov
pusha
cs
jecxz
ficom
fwait
sti
xor
repz
inc
xchg
cli
icebp
es
in
scas
push
push
mov
push
jb
cmp
inc
cmp
pop
fisttp
call
xchg
and
push
sbb
in
or
outs
push
mov
cmp
or
inc
push
adc
xchg
add
cmc
(bad)
sbb
shr
out
mov
mov
jecxz
lahf
and
cmc
lds
sar
and
aaa
jbe
aam
or
push
repnz
xor
test
retf
cwde
fwait
add
adc
push
fs
hlt
xchg
sub
int
push
mov
mov
mov
pop
and
xor
(bad)
adc
out
adc
mov
sti
out
mov
mov
and
(bad)
jl
sub
mov
jne
sub
mov
imul
xchg
lods
cli
loop
sub
inc
sub
sub
mov
out
jne
push
push
fs
push
push
pop
call
fwait
ss
jmp
add
mov
or
stc
xchg
inc
psubsb
rcr
sbb
icebp
xchg
cmovae
rol
(bad)
push
cmc
aas
pop
jns
cmp
lds
cmp
jle
add
push
pop
fwait
mov
(bad)
and
adc
and
out
sub
jbe
push
dec
icebp
nop
jo
mov
cmp
mov
sahf
neg
lahf
dec
pop
mov
sbb
ja
jbe
sar
std
mov
push
push
dec
inc
inc
in
mov
popf
cmp
mov
jbe
sbb
mov
mov
mov
scas
dec
sti
out
cmps
ss
mov
xchg
cs
(bad)
(bad)
mov
fst
addr16
mov
jb
inc
shr
fist
stc
std
std
lahf
mov
mov
dec
call
jle
xchg
test
mov
mov
(bad)
jne
stos
jge
dec
mov
xchg
(bad)
sti
xchg
inc
add
sbb
mov
mov
arpl
inc
pop
xchg
test
jg
repz
push
sub
jb
loopne
jb
add
inc
neg
mov
mov
and
pop
adc
mov
jbe
pop
fld
fsubp
push
inc
xor
sbb
lock
ds
cmps
pop
sahf
xor
mov
in
or
sub
cmp
add
or
pop
sahf
loope
pop
or
or
adc
dec
push
push
jnp
pop
pop
enter
xchg
stc
push
inc
out
imul
mov
shufps
push
inc
mov
mov
jecxz
jle
stos
mov
sbb
sub
push
push
add
ror
sbb
enter
iret
ss
xchg
test
push
push
sbb
push
loopne
pop
daa
push
ss
pop
dec
mov
mov
sbb
stos
daa
ss
fs
pop
pop
std
xchg
mov
adc
and
and
test
outs
sbb
xchg
js
sbb
mov
adc
jge
push
in
call
push
outs
add
stos
sub
aam
icebp
hlt
loopne
retf
sti
ins
call
lds
push
cmp
pushf
xchg
fild
imul
retf
xchg
idiv
jo
push
arpl
loope
cdq
(bad)
dec
mov
rcr
sub
stos
and
inc
je
jb
xchg
pminsw
cli
sub
icebp
push
push
fs
mov
out
and
add
mov
dec
mov
into
stc
mov
push
push
push
adc
or
cmp
sbb
jle
gs
(bad)
(bad)
cmp
lods
loop
in
fadd
repz
inc
retf
jo
mov
retf
push
inc
adc
cld
mov
fs
sub
mov
mov
outs
inc
(bad)
cwde
or
pushf
or
aad
inc
out
mov
iret
popa
lods
push
xor
push
mov
add
jle
ret
les
lods
pop
add
std
repz
outs
in
in
xchg
jae
shl
dec
push
pop
xor
pop
into
xchg
and
cmp
jle
push
sbb
jg
cmc
xor
cmp
push
push
dec
cmp
push
push
sar
lock
push
clc
iret
out
test
dec
sub
test
outs
pop
sub
pop
out
scas
pop
das
and
jnp
pop
ret
xchg
sbb
adc
add
push
fidiv
inc
xor
adc
mov
fwait
cwde
xor
and
adc
jmp
out
push
pop
or
cmc
test
cmps
mov
aad
xchg
jb
xchg
xchg
fadd
push
arpl
xchg
inc
repz
mov
sbb
out
dec
push
dec
adc
(bad)
mov
xor
fmul
pusha
adc
mov
lods
pop
xchg
sbb
stos
jbe
jl
loop
ins
mov
add
xor
shr
xor
ret
pop
inc
mov
mov
jmp
call
mov
dec
fdivrp
ret
inc
movs
enter
jbe
das
jg
je
xor
ja
(bad)
sahf
call
loopne
xchg
dec
or
jns
mov
push
in
mov
sbb
sub
xchg
in
sub
mov
iret
rcr
inc
sbb
shl
in
ds
push
cmp
xor
imul
mov
ds
mov
stc
mov
inc
ins
sbb
inc
iret
in
pop
mov
movs
(bad)
mov
add
push
dec
ins
mov
rol
dec
lods
and
test
outs
mov
int
out
pusha
or
bound
pusha
pop
pop
push
imul
pop
enter
loop
sub
mov
pop
daa
icebp
or
sub
xor
in
cdq
ss
add
or
jne
enter
lods
test
mov
push
xchg
hlt
xor
jno
outs
and
xor
jno
add
inc
pop
sub
js
retf
mov
shl
or
pop
push
ficom
cmp
clc
fs
stos
ret
xor
inc
mov
fcomp
dec
not
in
inc
inc
dec
mov
mov
leave
test
dec
fdivr
xor
and
mov
pop
sub
shl
imul
inc
daa
push
neg
les
mov
call
scas
movs
retf
(bad)
shl
aad
xor
mov
mov
sub
hlt
mov
jle
pop
mov
loopne
ds
pop
cdq
cmp
inc
call
test
aaa
add
imul
jp
cmc
cwde
stos
adc
push
mov
xchg
clc
enter
cdq
loopne
shl
inc
and
mov
add
push
iret
call
fidivr
cmp
lahf
das
add
pop
scas
xor
int3
jo
mov
pop
sub
rol
lock
push
dec
jg
xor
inc
mov
int
loope
jge
cs
dec
imul
aad
retf
jb
inc
pop
sbb
sbb
pop
ins
or
call
out
mov
test
cmp
pop
mov
cdq
adc
je
(bad)
fsubp
add
sub
(bad)
ins
mov
daa
xchg
dec
nop
sub
in
pop
dec
imul
push
div
xor
cs
xchg
cmp
enter
lds
or
adc
pop
movs
loop
inc
imul
shl
xor
jb
xchg
stos
cdq
push
sbb
ficom
mov
js
add
inc
(bad)
outs
jle
aaa
das
adc
mov
fidivr
dec
movs
mov
fdiv
xor
xchg
(bad)
jo
call
ret
es
not
jb
mov
xchg
dec
mov
out
or
cmp
inc
dec
or
imul
push
mov
mov
leave
add
hlt
push
nop
pop
outs
sub
or
(bad)
lods
and
imul
mov
not
sahf
sub
loop
ins
clc
inc
xor
cmp
sbb
addr16
cmp
pop
sbb
mov
sbb
fs
pop
mov
jmp
out
ja
scas
inc
call
xor
pop
mov
sub
adc
pop
fsubp
loop
xlat
cmp
push
retf
mov
pop
xchg
dec
mov
dec
aas
pop
mov
(bad)
cld
not
push
adc
ins
mov
repz
fs
push
iret
sbb
addr16
(bad)
xor
sub
mov
in
mov
hlt
xlat
adc
loop
dec
inc
lock
pop
stos
jle
ficom
cmp
jg
cwde
adc
cmp
into
adc
fiadd
adc
pop
push
jbe
adc
jo
scas
push
dec
jno
(bad)
call
scas
xlat
shr
ret
or
and
mov
cdq
out
add
or
xor
sbb
leave
push
imul
mov
sub
fisubr
add
test
leave
movs
mov
into
mov
sub
xchg
hlt
adc
push
lahf
scas
xor
nop
stos
fcom
pop
std
sub
scas
not
or
inc
jle
and
or
pop
mov
sbb
cmp
sbb
test
xlat
and
ja
imul
pusha
xchg
add
sbb
add
add
es
ins
test
pop
push
stos
cdq
stc
xchg
cmps
cmovae
push
adc
imul
scas
push
push
push
mov
xlat
out
out
in
push
retf
or
ins
add
test
mov
dec
dec
pop
and
cmp
sub
movs
and
movs
add
daa
xchg
ins
adc
mov
lods
dec
arpl
sub
adc
inc
jmp
xor
std
or
(bad)
data16
div
(bad)
loopne
add
jbe
(bad)
inc
shl
and
jecxz
addr16
mov
(bad)
and
jge
pop
out
mov
dec
in
xchg
adc
dec
xor
dec
out
pop
xor
add
test
lods
(bad)
out
addr16
cmps
cdq
pop
cli
jbe
or
mov
mov
loope
push
cmp
int
adc
sar
mov
push
mov
(bad)
dec
sbb
push
mov
sub
fisub
punpckhbw
(bad)
sub
mul
in
scas
jmp
dec
imul
mov
pop
cmp
jge
add
lds
inc
push
ret
outs
cmp
outs
int3
cmp
fwait
pop
lahf
(bad)
ret
mov
push
dec
repz
in
jae
mov
and
ret
push
add
cmp
and
dec
pop
jecxz
repz
rcr
retf
sub
outs
sbb
sbb
(bad)
mov
add
ret
(bad)
cdq
dec
test
lea
pop
cmp
mov
mov
gs
jg
cmp
pop
sub
mov
jle
jmp
adc
or
das
jle
ins
test
aad
xor
cli
scas
aas
xchg
mov
mov
fidiv
jo
nop
rep
mov
(bad)
cmp
push
jle
lock
(bad)
(bad)
fadd
aam
imul
and
pop
add
mov
inc
dec
jmp
out
xchg
icebp
xchg
je
icebp
add
test
jno
and
sub
test
cmps
stc
inc
sahf
mov
call
xor
jecxz
cmp
(bad)
xlat
and
popf
xlat
xor
js
int3
loopne
aaa
push
dec
shl
test
mov
(bad)
imul
xor
das
inc
mov
rol
test
hlt
inc
mov
movs
sahf
cmc
out
popa
adc
popa
scas
mov
dec
mov
and
mov
jae
jg
xchg
mov
mov
popf
out
test
sbb
cmp
retf
mov
inc
mov
pusha
aad
sbb
scas
jno
scas
mov
dec
fcom
pop
jns
fist
jle
pop
jmp
mov
aad
pop
cwde
stc
iret
loop
and
push
inc
int
xor
lds
shl
movs
lock
or
enter
sbb
ret
hlt
mov
retf
sub
call
inc
push
adc
mov
cmps
adc
ins
mov
xchg
mov
out
(bad)
jne
cmps
popf
add
call
mov
ins
and
or
aaa
retf
cmp
mov
(bad)
mov
pop
add
loopne
dec
or
retf
pop
xlat
jp
call
xchg
jns
pop
push
xor
jmp
cmps
and
repz
sar
or
push
or
xor
sbb
mov
adc
out
cwde
pop
lods
(bad)
hlt
cmp
xlat
pop
inc
stos
ins
cmc
ret
shl
pusha
jno
in
push
sar
adc
pop
adc
daa
je
pop
cli
ds
(bad)
jmp
mov
movhps
daa
jmp
pop
ins
mov
dec
les
clc
ret
out
mov
mov
mov
(bad)
pop
xor
(bad)
add
test
out
fisub
fcomp
cmp
cmp
sahf
nop
jge
scas
push
in
push
xchg
sub
test
lahf
xchg
data16
pop
or
inc
(bad)
add
mov
dec
(bad)
in
js
sti
cmp
jbe
cmps
sub
js
out
push
dec
scas
adc
sub
in
ret
jp
ss
mov
in
pop
shr
xchg
loope
(bad)
outs
xlat
mov
inc
push
mov
popf
xlat
and
jo
sbb
pushf
daa
pop
add
sub
shr
les
test
jle
add
jp
cpuid
jmp
inc
fstp
push
push
sbb
aaa
or
xor
in
inc
or
xchg
mov
stos
xor
test
jmp
das
and
mov
ds
xor
and
adc
xchg
(bad)
test
dec
jmp
add
cld
ins
jb
test
(bad)
sahf
loope
mov
push
popa
cmovne
dec
add
xor
cmp
dec
sub
popf
xchg
mov
arpl
movs
jecxz
push
inc
dec
enter
fcom
hlt
lahf
inc
(bad)
fadd
in
test
sub
mov
fsubr
push
adc
out
pop
inc
ja
cli
or
imul
push
mov
xor
mov
inc
and
retf
movs
sbb
popa
add
ror
call
sub
mov
ret
test
push
or
xchg
test
jecxz
js
xlat
movs
xlat
gs
and
inc
call
fcmove
mov
and
mov
sbb
jne
sar
mov
inc
xor
leave
cmps
aaa
cmp
out
fmul
push
icebp
add
add
lea
lods
in
movs
jne
xor
mul
mov
movs
xchg
xchg
or
(bad)
sbb
punpckhwd
or
mov
add
xor
es
cmc
jb
jecxz
mov
sub
test
mov
inc
mov
cdq
xchg
in
jg
mov
push
cmc
test
dec
lods
enter
or
sahf
xor
shr
push
sub
and
fistp
jecxz
mov
call
test
sbb
add
imul
mov
cdq
sub
xchg
(bad)
imul
cmp
dec
ror
sbb
or
add
mov
out
data16
fcomip
cmp
and
aam
pop
movs
inc
push
mov
fisub
pop
or
mov
pusha
inc
mov
push
dec
inc
call
and
mov
mov
cmp
daa
cmp
adc
bound
aas
popf
push
loope
xchg
or
sbb
jecxz
jl
out
xlat
jne
mov
or
adc
data16
sub
xor
sbb
mov
mov
test
sbb
movs
sbb
mov
pop
push
aad
imul
inc
addr16
mov
mov
shr
loope
mov
mov
xor
mov
fisubr
push
(bad)
cmp
and
push
sti
hlt
mov
ret
adc
sub
sbb
jno
xor
pushf
adc
ficomp
xor
out
jno
test
hlt
lock
js
pop
div
mov
jle
(bad)
stos
xor
pop
adc
sub
lock
mov
and
sbb
movs
jmp
inc
ins
sub
daa
(bad)
xchg
aad
inc
mov
nop
ror
aas
sbb
stos
pop
imul
mov
gs
dec
iret
mov
pop
mov
ins
mov
in
std
dec
jo
sbb
inc
and
(bad)
mov
sbb
jae
mov
(bad)
retf
stos
sub
mov
dec
jp
jecxz
pop
xchg
push
lock
test
loop
loopne
addr16
and
pop
jmp
pop
ja
lods
pop
dec
aam
mov
loop
pusha
push
cdq
lods
ss
push
ds
jl
ret
pop
sti
add
cmp
jecxz
loope
or
hlt
jle
xchg
mov
xchg
push
xchg
mov
leave
mov
jb
jl
pop
dec
fnstenv
ins
and
aaa
popf
mov
push
jmp
fdivr
loop
push
cmp
push
adc
or
sub
mov
sub
ret
jns
(bad)
jecxz
je
pop
cmp
push
or
repz
mov
mov
sub
(bad)
xlat
dec
sbb
ret
and
popf
xor
cmps
cs
repz
dec
inc
lods
icebp
test
cdq
in
mov
xor
test
pushf
out
jecxz
xchg
clc
sub
xchg
mov
sbb
sar
mov
cmps
int3
out
scas
cwde
sub
push
add
fdivp
jmp
and
ret
cmc
call
xchg
es
push
xchg
rol
xor
pop
retf
add
iret
inc
ja
mov
sub
xchg
dec
mov
popf
xor
xchg
imul
cmps
xchg
rol
arpl
or
cld
jb
or
imul
bound
fs
cmp
cmp
lods
int3
sub
and
lock
xchg
mov
jle
fstp
iret
adc
pop
das
fisub
lods
mov
mov
adc
cmps
or
shl
inc
or
into
mov
push
mov
push
pop
dec
sbb
sub
mov
popf
xchg
ins
push
aaa
and
mov
fst
outs
movs
cmp
xlat
ret
xchg
sub
add
push
push
fnstenv
mov
mov
fstp
mov
xchg
mov
lods
jp
mov
gs
popa
add
xor
inc
and
jg
imul
xor
fldcw
dec
lds
jae
jge
movs
pop
ss
aam
enter
ins
sbb
mov
int
fisubr
xchg
lahf
nop
les
sahf
cmp
shl
mov
push
iret
dec
push
outs
imul
cmp
icebp
(bad)
retf
cmp
mov
lock
mov
loop
xchg
lods
sub
frstor
retf
xor
fst
scas
and
dec
dec
clc
and
shl
xchg
xchg
and
push
daa
ja
pushf
(bad)
sbb
add
mov
inc
jmp
pop
pop
jle
idiv
jl
or
test
inc
sub
jb
inc
cmp
pushf
aad
into
mov
jge
or
int3
loopne
aas
jle
cs
fisttp
jns
inc
push
xor
pop
mov
adc
cmp
mov
cmps
jae
lock
fisub
int
xor
cli
mov
add
and
loope
sub
cs
outs
push
fdivrp
cmps
xchg
jae
outs
xchg
sti
call
mov
xor
test
jmp
mov
pop
lock
or
ins
ins
push
and
adc
adc
sub
mov
mov
movs
cmp
sub
sbb
arpl
sub
test
push
jg
pop
jmp
xchg
dec
es
test
fistp
jbe
mov
js
mov
adc
aas
lock
inc
xchg
std
loopne
pusha
xchg
xor
adc
xor
test
jl
mov
daa
repnz
pop
fsubrp
aaa
mov
inc
in
mov
into
(bad)
push
lock
mov
jmp
cmp
dec
mov
add
stos
out
mov
sub
xor
pushf
cmp
xchg
adc
out
out
cdq
cmp
(bad)
(bad)
js
ins
cmp
cmp
cmp
or
mov
cdq
sbb
outs
aaa
jbe
out
push
mov
cld
adc
(bad)
rol
xor
dec
out
es
bound
xor
jge
pop
out
or
scas
lea
int3
inc
mov
shr
sbb
out
mov
or
sahf
fld
sub
sbb
sahf
call
adc
xor
push
mov
add
jp
mov
out
bound
(bad)
pushf
push
into
cmp
jl
sub
dec
jge
jnp
iret
fisub
scas
cs
or
sbb
les
and
jecxz
(bad)
jmp
push
adc
add
pop
lahf
add
enter
push
bound
aam
out
mov
aas
mov
cmp
inc
adc
or
in
aas
adc
fimul
or
mov
je
mov
xor
outs
push
jge
movs
jmp
inc
daa
fbld
fsubr
(bad)
inc
cs
xchg
and
mov
imul
lods
add
cmp
idiv
(bad)
dec
fmulp
dec
sbb
pushf
or
fwait
ret
rol
test
pop
test
outs
mov
adc
iret
mov
aaa
xchg
dec
mov
or
xor
les
or
aaa
pop
mov
rep
push
ror
xchg
cmp
cld
test
icebp
imul
xchg
pushw
push
xchg
and
dec
sbb
shr
xor
push
(bad)
push
call
cmp
push
js
int
sub
(bad)
call
or
push
scas
jmp
dec
sbb
push
or
les
jbe
lock
pop
sbb
test
fwait
pop
and
xchg
rcl
xchg
ins
dec
shl
ret
jmp
inc
and
pusha
xor
cdq
lahf
inc
mov
jecxz
repz
fsubr
xor
pusha
(bad)
add
mov
stos
xchg
dec
pusha
lds
mov
iret
rol
mov
lds
push
pop
and
and
in
pop
xor
je
mov
mov
or
inc
and
loop
stos
sti
and
pop
int3
in
das
out
cmp
sub
inc
xor
dec
pop
sbb
(bad)
jp
iret
jns
add
mov
or
mov
dec
ins
add
ja
jmp
inc
sbb
and
mov
into
cmp
stos
imul
loope
and
mov
loop
popf
cmp
mov
push
xor
retf
iret
cmps
xchg
mov
xor
(bad)
xlat
xchg
movs
add
fst
mov
mov
inc
jge
mov
jl
fist
mov
stos
ins
ins
sub
psrld
nop
rcl
xchg
mov
mov
xchg
mov
xchg
lahf
adc
(bad)
(bad)
in
adc
xchg
push
sub
mov
mov
xchg
inc
dec
hlt
fldcw
xchg
iret
or
dec
jecxz
out
jg
ins
cmp
movs
pop
int3
jnp
xchg
mov
test
aaa
push
or
(bad)
shl
out
lea
adc
icebp
xchg
xchg
in
adc
push
or
movs
xchg
test
or
imul
les
ss
das
xor
bound
out
adc
or
gs
cmp
loop
outs
stos
icebp
fldcw
xchg
enter
fistp
pop
mov
pop
nop
cld
hlt
add
cmp
sbb
xchg
scas
dec
mov
mov
mov
(bad)
mov
xchg
(bad)
rol
and
fisttp
xor
cmps
dec
pop
mov
jmp
enter
ss
ret
push
jmp
dec
pop
cmp
adc
(bad)
in
push
add
mov
mov
movs
and
in
adc
push
pusha
lods
mov
fnstsw
push
fwait
push
mov
adc
mov
fst
daa
push
mov
popa
in
sub
mov
in
scas
cmp
rcr
inc
push
bound
jecxz
sub
(bad)
sub
mov
add
mov
aam
jmp
jp
adc
xchg
(bad)
jmp
lahf
int
xor
jmp
cmp
dec
add
imul
jl
dec
adc
inc
and
pop
into
fldenv
lods
and
mov
js
gs
es
(bad)
mov
movs
inc
mov
ret
stos
leave
xchg
sub
scas
repnz
bound
mov
or
cs
fdivr
and
lods
(bad)
ss
push
mov
sti
outs
sbb
xchg
pop
int
stos
jae
outs
shr
aas
retf
mov
ret
push
xchg
cmp
int3
clc
bound
mov
sbb
pop
rcr
(bad)
pop
lods
into
sar
xchg
cli
call
mov
cmp
cmp
cmp
and
mul
test
sti
sahf
std
inc
ja
cmp
scas
dec
push
xchg
imul
dec
or
shl
or
call
rol
inc
push
icebp
lea
mov
mov
jo
sbb
xor
outs
ins
sti
rcl
add
push
jb
(bad)
imul
push
add
mov
push
adc
cs
mov
jae
out
lds
mov
mov
and
sbb
les
sub
dec
hlt
push
(bad)
gs
jnp
js
and
dec
ror
mov
and
mov
jne
sbb
pop
mov
fdecstp
repz
arpl
(bad)
rcr
pop
pop
aam
aad
in
(bad)
cmps
div
rcr
fwait
mov
inc
pop
ror
xchg
movs
imul
mov
arpl
sub
enter
call
and
in
inc
out
cli
xor
push
adc
xchg
(bad)
xlat
shl
sti
mov
pop
add
pop
xor
xor
add
push
add
pop
or
or
es
sub
mov
mov
(bad)
and
invd
adc
push
lods
(bad)
enter
rol
add
test
or
arpl
jmp
pop
mov
jae
retf
out
fadd
sahf
inc
bound
push
or
nop
inc
(bad)
lock
push
repnz
test
push
cmc
cld
sub
mov
stos
data16
scas
mov
xchg
stos
add
out
lods
adc
scas
std
cwde
scas
xchg
inc
xchg
aas
xchg
ret
add
mov
mov
cmp
mov
xlat
adc
push
ret
mov
mov
add
jmp
shr
(bad)
outs
(bad)
aad
jmp
ror
pop
ror
push
and
popf
adc
shl
sbb
jecxz
das
inc
imul
push
xor
add
pop
cmp
xor
inc
int
repz
add
mov
or
adc
xor
imul
sbb
ror
and
fs
out
fsub
cmovs
mov
mov
xchg
and
or
dec
push
int3
and
repnz
or
out
adc
loop
and
outs
cmp
loop
ret
loope
dec
outs
jo
xchg
lods
ds
mov
fsub
dec
sbb
sub
or
fimul
pop
das
xchg
aad
mov
pop
hlt
bnd
retf
cwde
mov
sbb
push
mov
stos
scas
and
cmc
cli
push
pop
inc
push
cli
lods
pop
in
push
pop
scas
jl
mov
mov
mov
xor
sbb
cmp
fadd
movs
mov
or
test
xor
gs
iret
loope
sub
push
lods
cld
jbe
mov
data16
(bad)
fnstsw
rcl
pop
or
mov
aad
xor
mov
inc
mov
inc
jle
(bad)
cmps
push
dec
mov
mov
jmp
xchg
(bad)
neg
or
mov
inc
pop
push
fadd
mov
shl
cmp
mov
pop
xchg
mov
xor
stos
pop
fcom
xchg
addr16
int3
or
jne
data16
fisubr
std
fwait
retf
or
xchg
push
sub
jl
imul
inc
mov
popa
aam
mov
cld
pop
leavew
push
mov
inc
inc
adc
cmc
(bad)
in
mov
cdq
pop
ins
or
cs
xor
in
fsubr
sbb
call
in
in
sbb
mov
mov
in
test
jns
push
out
cmps
cli
loopne
or
xor
(bad)
(bad)
jbe
rcl
stos
sbb
and
(bad)
cmp
pop
push
mov
jg
sti
aaa
sti
push
jnp
leave
(bad)
into
sbb
loopne
lods
and
mov
jbe
and
jge
lods
cmps
sbb
pushf
push
out
test
stos
or
hlt
xchg
cmps
jno
mov
push
dec
push
pop
xchg
cld
inc
sub
lods
mov
jl
add
cli
mov
mov
jg
add
jecxz
hlt
sar
setle
cli
mov
ficomp
add
jl
cmp
ja
jmp
jmp
add
arpl
lock
fistp
adc
in
mov
xchg
daa
mov
jmp
and
mov
jo
mov
pop
sbb
dec
sbb
fsubp
sub
jbe
dec
rol
push
sbb
mov
mov
sub
fsubr
fdivr
mov
cmp
scas
popa
lods
cli
cmp
mov
xor
jae
repz
mov
mov
and
cs
iret
cmps
aad
xlat
or
imul
pop
mov
aaa
push
jno
jns
push
or
cdq
push
scas
add
test
adc
pop
pop
add
repz
cmp
adc
pop
cmps
js
add
add
outs
fld
movs
cmps
ins
lea
cmp
mov
cmps
int3
jmp
push
or
xchg
and
and
xchg
rol
mov
cmp
cld
pop
cli
lods
pop
sub
in
fisttp
inc
mov
lods
xor
pushf
aas
fcmovnu
add
add
fldenv
ja
mov
not
ss
push
test
push
add
mov
(bad)
push
or
enter
sub
ret
enter
pusha
pop
clc
lods
dec
bound
add
in
dec
scas
sbb
test
xchg
xor
and
jge
inc
mov
pop
mov
cmc
jns
daa
and
scas
sbb
mov
mov
ja
push
js
jecxz
fnstsw
mov
jg
pop
into
shl
mov
repz
pop
pop
aam
in
lods
out
stc
pop
xor
je
ja
or
stos
jb
dec
push
retf
inc
inc
pop
jmp
mov
out
test
pop
push
loope
jmp
int
enter
enter
push
add
and
push
fstp
(bad)
fcomp
cmp
sbb
fcmovu
mov
je
(bad)
outs
mov
mov
push
jne
ret
mov
cdq
adc
sub
cmc
xchg
sub
sbb
popa
add
mov
mov
pusha
adc
pop
and
mov
xor
outs
mov
mov
jo
inc
inc
lds
data16
arpl
stc
js
xor
mov
ret
cdq
ds
push
inc
xor
addr16
lods
xchg
in
loop
inc
loope
push
add
push
inc
sub
iret
mov
add
(bad)
jle
push
stc
in
arpl
in
cs
(bad)
cmc
dec
cld
inc
test
(bad)
cwde
inc
and
pop
sub
sub
lea
lds
sbb
sbb
not
sub
pop
inc
push
xor
(bad)
cmovs
adc
adc
jg
mov
sub
pop
pusha
sub
jl
cs
jg
push
jb
fcom
add
inc
mov
add
mov
sbb
dec
jg
sbb
imul
jns
retf
push
mov
push
repnz
je
inc
js
sbb
movs
nop
adc
rol
add
xchg
xchg
ja
retf
mov
call
xchg
sub
push
mov
jl
hlt
inc
call
mov
push
imul
arpl
mov
push
clc
inc
sbb
fistp
and
ret
jg
mov
inc
and
pop
mov
scas
popf
repnz
fucomip
cld
std
stos
xchg
dec
push
out
mov
int
pusha
adc
inc
outs
adc
add
jno
xlat
cli
dec
shr
dec
pop
cmps
mov
jmp
aad
dec
pushf
add
pop
pop
je
scas
jecxz
ror
rcr
mov
pop
pop
or
icebp
int
ins
xchg
in
not
(bad)
jb
cmp
sbb
into
xchg
jb
or
ins
pop
mov
test
aas
xchg
(bad)
bound
je
ret
push
adc
ins
int3
popf
ja
ds
sub
arpl
je
xlat
in
daa
aaa
in
sahf
(bad)
data16
sbb
push
cmc
cdq
adc
outs
xchg
jge
rcl
push
push
test
cmp
adc
push
das
mov
adc
out
dec
es
test
pop
popf
cmp
mov
mov
nop
hlt
xchg
stos
lods
push
daa
jl
ss
or
std
push
pop
inc
jmp
xor
cmp
sub
arpl
and
ins
(bad)
fsub
in
sbb
aaa
(bad)
dec
mov
mov
fisttp
(bad)
mov
mov
ret
adc
nop
repz
jae
and
adc
pop
xor
sbb
mov
push
out
std
clc
gs
mov
outs
(bad)
rcl
jmp
dec
adc
aaa
in
cmps
sahf
inc
(bad)
mov
aad
xor
inc
sub
xchg
mov
pusha
sbb
xchg
lock
push
in
mov
cwde
mov
fimul
and
sti
pop
out
pop
push
imul
pop
mov
xchg
test
mov
mov
inc
add
xor
fs
mov
push
xchg
xchg
in
ja
or
sbb
sub
mov
xchg
aam
clc
push
out
jmp
mov
mov
mov
test
push
sbb
adc
inc
movs
xchg
or
(bad)
ins
xchg
in
push
fnstcw
cli
add
or
loopne
sub
(bad)
int
(bad)
dec
add
or
ror
inc
(bad)
mov
push
xor
and
and
dec
sbb
mov
js
sahf
idiv
cmp
(bad)
and
movs
inc
jle
cmc
into
hlt
idiv
adc
cmp
dec
mov
or
push
int3
ja
pop
jnp
fistp
or
fist
xor
stc
jo
scas
imul
stos
xchg
and
xor
pop
out
rcl
addr16
inc
rol
shl
bound
mov
mov
xchg
mov
inc
or
sti
or
test
xchg
loopne
mov
xor
add
cwde
sub
jo
push
ja
repnz
fidiv
repnz
or
mov
gs
dec
nop
xor
mov
jge
sbb
fisubr
fidiv
inc
lods
push
pop
(bad)
into
jmp
mov
nop
ss
fdivr
mov
sbb
adc
mov
mov
sar
mov
retf
sub
(bad)
cmp
xchg
lahf
scas
lahf
loopne
imul
fwait
cmp
fnstenv
bound
adc
popf
jae
call
mov
mov
push
(bad)
stos
inc
pop
cmps
icebp
adc
sbb
pop
sub
adc
cmp
jp
xchg
dec
stc
loopne
cmp
repnz
pop
ds
retf
test
jne
retf
out
xor
push
mov
sub
cs
je
in
arpl
movs
sbb
aaa
in
xor
call
cmp
cdq
cmc
(bad)
fidivr
sub
repz
ins
sub
pop
psubd
sub
jecxz
daa
sbb
and
push
add
enter
fild
in
scas
and
pop
mov
mov
fnsave
test
push
lea
push
mov
and
test
mov
vmulps
jl
loop
push
pop
rol
dec
ds
enter
shr
call
adc
fimul
pop
loope
cli
adc
fcmove
cli
or
daa
mov
sub
mov
loop
mov
dec
mov
inc
dec
ret
inc
inc
push
mov
aas
cdq
lds
data16
xchg
xchg
xchg
lods
add
stc
int3
push
cs
lods
loopne
enter
out
jle
dec
push
jns
push
pop
pop
pop
inc
cmps
xchg
lahf
div
outs
sbb
je
push
and
push
imul
mov
xchg
jns
movs
add
test
hlt
fcmovbe
adc
cld
jmp
cmp
adc
stc
push
test
int3
mov
arpl
pop
xchg
cmp
es
xchg
adc
lock
aam
dec
pop
mov
pop
fs
inc
add
cdq
(bad)
pushf
cli
stos
cmps
repz
out
xchg
sub
cmp
std
fst
mov
ins
jmp
add
lock
mov
sbb
xchg
loope
mov
and
idiv
inc
ror
mul
adc
mov
out
es
xor
pop
adc
out
aad
and
jmp
jecxz
mov
(bad)
cmc
mov
push
or
jno
ins
movs
xchg
pushf
add
push
and
and
sti
mov
inc
lods
cmp
sbb
add
cmp
retf
pop
push
rcl
pop
cdq
sbb
je
xchg
fwait
sbb
jge
div
sub
int
mov
dec
xlat
sar
ins
addr16
stc
push
in
inc
data16
adc
pop
movs
adc
jo
loopne
jnp
pop
jmp
retf
adc
mov
je
(bad)
xchg
or
add
mov
iret
push
das
jno
sbb
cs
lds
arpl
mov
dec
neg
mov
sub
and
xor
hlt
pop
jbe
jb
pop
dec
xor
pop
xor
pop
nop
xchg
loope
push
xor
lods
pop
inc
pusha
xchg
repnz
(bad)
cmp
mov
ret
sub
push
xchg
in
and
jne
add
out
das
push
xchg
jbe
dec
sahf
fisttp
imul
adc
nop
repz
mov
cmp
mov
stos
push
jno
add
and
or
adc
adc
jne
sbb
cmp
mov
inc
cmp
push
mov
call
inc
cs
cmp
mov
lods
push
push
nop
xor
call
push
inc
scas
jbe
loopne
in
test
cld
fsub
into
repnz
adc
ins
add
in
sub
sti
mov
fbld
adc
out
dec
stc
mov
add
mov
inc
xlat
out
fldcw
xchg
xor
dec
mov
(bad)
mov
jle
jns
loop
cmp
pop
loop
pusha
mov
cwde
scas
cld
adc
add
out
cli
push
or
push
movs
push
jno
push
pop
xchg
idiv
movs
pop
cmp
or
test
xchg
push
fistp
movs
fsub
jnp
not
int
shl
cmp
inc
outs
lea
inc
adc
retf
jb
cmps
push
in
mov
iret
cwde
inc
push
jb
fmul
dec
mov
iret
movs
mov
(bad)
mov
add
pop
in
(bad)
in
fnsave
inc
push
ins
jle
mov
shl
popf
out
iret
mov
add
test
jmp
cmp
and
jb
lock
js
push
in
mov
test
mov
aaa
cmc
fadd
bound
jae
ins
pop
sahf
or
in
ret
add
inc
cmp
adc
inc
pop
mov
loop
fstp
outs
addr16
adc
xchg
ret
mov
pop
movs
outs
stc
lods
cmp
inc
and
movs
mov
mov
outs
mov
sbb
test
iret
scas
jmp
xor
sub
ins
inc
add
push
repz
ret
adc
inc
loope
dec
int3
sub
sub
pop
and
retf
cmps
leave
sbb
push
outs
mov
clc
push
jae
sbb
mov
xor
add
inc
inc
out
add
xchg
call
stos
sbb
(bad)
jae
(bad)
push
mov
xor
mov
xlat
out
mov
xchg
in
inc
popa
inc
dec
(bad)
cmps
bound
(bad)
jecxz
in
xchg
xor
dec
jmp
xchg
mov
out
jae
xlat
enter
xchg
popf
retf
ins
sub
popa
dec
adc
adc
sbb
push
daa
faddp
rol
repz
lds
sbb
lea
and
sbb
mov
inc
push
cmp
inc
shr
stos
in
mov
inc
cwde
add
fbld
adc
mov
jb
jle
stos
ins
dec
adc
mov
bound
fwait
shr
mov
imul
xchg
pusha
jecxz
sub
lock
loopne
mov
jl
cmps
hlt
xchg
mov
fwait
ja
repnz
daa
pop
int3
outs
scas
fimul
mov
pop
retf
sbb
inc
rcr
jmp
mov
mov
pop
mov
xchg
dec
scas
jo
gs
mov
xchg
pop
mov
inc
dec
rcr
je
hlt
or
xchg
mov
jae
es
mov
pushf
(bad)
and
outs
mov
and
push
add
test
xchg
adc
and
fst
jbe
fld
dec
loop
repz
or
lds
les
adc
cli
out
cmps
cmc
or
mov
add
cdq
push
inc
push
fldcw
les
pop
mov
popf
imul
and
cmps
or
sub
or
xor
pop
call
pop
cwde
mul
call
fcom
inc
std
jle
jno
jp
mov
sub
xchg
retf
jecxz
jge
loop
sbb
xor
lahf
sbb
sub
loope
push
dec
imul
cld
xchg
sbb
push
ror
push
push
inc
xchg
int3
cmp
jle
imul
mov
test
xor
xor
add
(bad)
xchg
jl
aam
adc
cdq
push
outs
fnstenv
jbe
cmc
pop
jnp
dec
add
mov
xchg
mov
loop
(bad)
ins
cdq
mov
pop
sbb
push
fadd
in
out
std
gs
pop
mov
lock
in
xchg
mov
mov
(bad)
jne
into
pop
test
cmp
in
sbb
fist
cmp
jno
mov
add
pop
neg
hlt
xchg
inc
cli
adc
jmp
mov
lock
outs
shl
pop
jmp
mov
movs
cld
xor
daa
cmp
popf
jae
cdq
cmp
das
loope
jmp
ror
mov
jne
(bad)
dec
call
xchg
pusha
fwait
clc
jp
in
and
js
repz
push
mov
movs
xchg
adc
scas
clc
in
loopne
mov
pop
mov
mul
sbb
aas
jecxz
adc
in
sub
xor
sub
(bad)
dec
fdivr
fdivr
(bad)
jbe
add
cmp
push
sub
add
push
(bad)
mov
mov
jmp
pop
or
loope
das
in
jbe
ret
fcmovne
push
xor
idiv
loopne
xchg
xchg
in
call
dec
xor
out
ret
aam
cdq
dec
dec
aas
popa
cs
cmp
shl
mov
mov
mov
sbb
lds
lds
fisttp
sbb
mov
dec
jp
xchg
sbb
scas
xor
lahf
cmp
lock
inc
pop
popa
sbb
int
add
ss
push
jge
mov
int3
movs
gs
(bad)
dec
mov
cmp
push
rcr
xchg
xchg
jmp
retf
xchg
dec
arpl
xor
pop
pop
jbe
inc
mov
jbe
dec
cdq
mov
dec
jl
idiv
add
in
mov
pop
imul
nop
xor
ret
xor
imul
fst
jmp
cmp
scas
mov
xchg
movs
popf
jbe
scas
mov
or
shl
xchg
pop
cli
test
in
(bad)
pop
je
mov
sbb
loop
and
dec
in
leave
in
repnz
test
call
jns
sub
mov
mov
xor
es
test
lods
dec
inc
xchg
clc
jns
andps
mov
inc
cmp
push
hlt
fwait
pop
push
test
lahf
ror
inc
sbb
test
mov
aaa
test
xor
cli
icebp
xchg
ret
sar
mov
xchg
pusha
rcr
(bad)
sbb
icebp
lea
mov
fistp
call
xor
mov
sub
or
out
dec
int
push
fldenv
(bad)
out
jnp
ds
add
cmp
jae
xor
dec
xchg
sbb
mov
mov
sbb
aam
bound
jno
iret
mov
pop
xchg
mov
jl
pop
ret
push
ds
fild
jle
add
iret
cmc
mov
in
icebp
icebp
jae
ja
stos
in
sti
mov
xchg
xchg
(bad)
daa
cmp
cmp
repz
enter
or
jne
test
lods
mov
add
mov
pushf
and
add
ja
fist
add
adc
in
test
push
sub
je
sbb
xor
sahf
cmps
test
push
push
scas
add
sbb
push
mov
cmp
sbb
add
test
shl
fld
ins
xor
xchg
es
cmp
or
sub
push
jo
out
and
push
fs
inc
cmp
mov
inc
in
adc
idiv
std
push
xchg
aaa
fdivr
pop
mov
pop
and
repz
mov
or
inc
retf
jge
jo
xor
lods
jb
inc
jo
cmps
push
retf
fbld
scas
ror
out
pop
lock
adc
xor
adc
and
ss
rol
jne
sbb
out
or
test
out
jle
imul
bound
mov
stos
lea
push
ins
push
mov
aas
repz
jns
cmp
mov
ins
xchg
ds
(bad)
hlt
pop
mul
xor
shl
add
jmp
adc
sub
das
cld
mov
pop
scas
ja
loopne
sub
(bad)
call
shl
ret
inc
jg
mov
sahf
pop
cmc
iret
xor
cmp
movs
xor
xor
adc
movs
ja
dec
sub
and
data16
mov
fs
shl
idiv
pop
(bad)
stos
fild
inc
test
neg
sub
retf
jns
cmps
sbb
mov
(bad)
repnz
ds
fstp
push
cmp
lods
add
enter
fld
in
loope
dec
or
dec
imul
inc
fcom
cmp
add
repnz
repz
into
cmp
xchg
mov
cdq
call
cdq
xchg
or
(bad)
push
es
ds
pop
inc
pop
(bad)
imul
xchg
xor
inc
jnp
fild
sbb
cmp
into
mov
lock
inc
pop
add
cwde
push
pushf
ss
mov
push
test
push
push
movs
in
or
xor
outs
mov
mov
sbb
scas
pop
aad
jmp
ss
cmps
adc
les
aas
and
cmp
gs
jl
fidivr
in
mov
fs
push
lahf
push
test
or
cmps
inc
lds
sub
xor
(bad)
mov
mov
out
test
or
adc
cmp
pop
cmp
ret
out
pop
frstor
test
dec
xor
push
loop
mov
jmp
repnz
out
dec
cwde
dec
jne
cmps
iret
cli
fdivr
dec
xor
shr
jno
nop
add
lock
inc
aad
push
push
and
or
mov
add
lahf
sti
ror
daa
mov
xor
rcl
cdq
push
push
xor
push
push
or
jecxz
xchg
adc
pop
xchg
adc
test
mov
pop
sub
std
adc
enter
mov
pminub
xchg
repnz
adc
shr
inc
adc
or
xor
pop
dec
std
or
dec
mov
fadd
cdq
ins
pop
inc
es
adc
xlat
fmul
ins
jmp
xor
mov
mov
jecxz
push
jo
retf
retf
lea
sub
pop
jnp
adc
xor
xchg
aad
mov
sbb
sub
cmp
data16
aam
(bad)
sbb
cmp
pop
and
int
pop
rol
gs
pop
or
fcmovne
je
cdq
test
retf
or
inc
dec
mov
dec
es
sbb
mov
rcl
addr16
adc
scas
mov
dec
cmps
in
mov
jg
mov
mov
cs
jl
xor
xor
sbb
arpl
and
lods
or
adc
outs
lods
pop
leave
popf
(bad)
and
out
mov
xchg
fstp
in
nop
sar
(bad)
inc
stos
cli
mov
pushf
add
cmp
rcl
(bad)
add
dec
fimul
adc
int3
sbb
lea
xor
outs
(bad)
(bad)
cmp
mov
fdecstp
psrld
outs
(bad)
aam
xor
sti
repz
inc
out
or
inc
(bad)
adc
sbb
dec
inc
out
rcr
add
adc
ins
pop
pop
cli
inc
dec
sbb
mov
mov
mov
test
push
outs
mov
xchg
pop
sbb
lahf
adc
retf
or
popa
ror
or
sahf
inc
(bad)
loopne
cmp
mov
sub
adc
aad
xor
cmps
or
repnz
dec
jne
popa
fimul
jmp
(bad)
cdq
inc
mov
mov
pop
jne
sub
mov
xchg
test
rcr
sbb
jno
push
jns
emms
push
jmp
cmps
mov
mov
sti
in
sub
and
aam
(bad)
aas
int3
iret
push
xchg
xor
lock
sar
test
pusha
and
jns
pop
retf
or
push
fcomp
sar
lahf
xchg
adc
(bad)
mov
dec
stc
mov
scas
pop
push
or
popf
clc
in
lahf
arpl
sub
sahf
add
retf
cmp
jbe
pop
fnstsw
push
jns
outs
mov
inc
aas
repz
fwait
cwde
sub
inc
sub
jg
push
sbb
arpl
js
xchg
out
rol
out
cmps
fs
lea
lea
mov
or
test
push
adc
jmp
or
jle
jmp
fadd
mov
cmps
jmp
aam
xor
das
stos
stos
div
dec
jnp
shl
and
int
rdmsr
es
mov
push
jbe
outs
pop
fimul
jmp
and
mov
pop
ja
push
mov
pop
push
shl
das
data16
sub
push
push
test
sub
dec
js
mov
jmp
xor
pop
in
xor
xchg
out
loop
cmps
push
pop
add
jg
fwait
or
lahf
bound
mov
pop
popa
cli
push
aad
imul
jecxz
les
inc
dec
push
cdq
dec
call
cld
loope
mov
jl
fsubrp
xchg
outs
adc
test
pushf
mov
ss
dec
clc
ds
ds
and
faddp
push
xchg
scas
sbb
jnp
xor
mov
jmp
outs
ret
inc
loopne
in
sub
and
dec
fsubr
sub
clc
pop
je
or
rcl
ss
in
stos
jl
push
stc
xchg
iret
sbb
dec
(bad)
cwde
inc
not
inc
in
fst
xlat
(bad)
jmp
xchg
ret
out
lock
repz
nop
fst
fnstenv
loopne
mov
sub
rcl
push
pop
cmp
subps
sti
rcr
inc
xchg
icebp
mov
js
push
out
cmps
cld
outs
push
(bad)
popa
in
or
rcr
push
scas
and
hlt
js
push
xchg
inc
xor
outs
shl
mov
mov
xchg
mov
stos
sbb
and
outs
push
mov
outs
mov
call
and
bound
out
mov
cs
mov
cmp
push
sbb
outs
push
mov
fcom
sti
inc
cmp
ins
call
popa
retf
ret
or
push
fs
out
aam
mov
pop
inc
aam
mov
inc
pushf
or
lock
push
aas
sbb
lahf
loope
movaps
ins
popa
or
add
add
test
inc
mov
lds
and
mov
cmc
add
xchg
add
enter
push
mov
xlat
jp
mov
dec
adc
rol
addr16
daa
int
and
mov
in
cmp
dec
repz
mov
cmp
push
cwde
sti
sub
fcmovnbe
enter
cmp
loopne
mov
test
cmp
jp
push
mov
lahf
mov
js
mov
jbe
add
jnp
aam
jne
dec
test
stos
mov
loop
ins
mov
and
les
push
and
jp
sahf
adc
mov
inc
setl
cs
movs
xor
adc
jnp
pop
xor
mov
xor
and
ds
sub
mov
imul
cmps
inc
xor
add
lea
arpl
xchg
inc
mov
not
sbb
ds
xchg
dec
dec
enter
ret
fisubr
addr16
sti
out
cmp
mov
mov
push
out
push
(bad)
neg
xchg
retf
lea
dec
jno
dec
stos
cmp
xor
int
sub
xor
xchg
(bad)
push
iret
test
out
fs
or
ds
xor
and
scas
retf
xchg
pushf
and
sbb
sbb
push
inc
jnp
or
stos
je
push
inc
push
loope
imul
pop
cdq
mov
push
sar
cmp
dec
adc
lahf
dec
adc
leave
lea
sub
push
cli
std
sbb
ss
(bad)
ficomp
pop
jecxz
retf
jg
add
xchg
mov
fisub
push
mov
lock
xor
rcl
ss
dec
sahf
addr16
imul
mov
dec
cld
sbb
das
mov
lods
adc
leave
imul
lock
xor
push
scas
dec
out
jecxz
test
cmps
ja
imul
xor
es
xor
daa
stc
sub
ja
in
movs
(bad)
or
cli
movs
sbb
xchg
and
pusha
mov
cli
call
inc
mov
xor
mov
clc
adc
xchg
(bad)
test
aam
call
std
addr16
cmc
jp
in
mov
fcom
stos
call
adc
loop
inc
jl
ds
call
arpl
aas
dec
(bad)
adc
out
lods
cmp
sub
repz
mov
aaa
out
push
push
inc
and
sbb
aas
sbb
sar
and
pop
push
fadd
add
popf
mov
pop
jns
mov
int3
push
mov
xlat
(bad)
aaa
mov
cmp
and
jmp
cli
in
jl
mov
je
mov
jle
ror
rcl
pop
add
ja
xchg
inc
sbb
ss
jb
jbe
add
jecxz
inc
repz
not
mov
sbb
stos
jmp
adc
jp
out
lods
cld
and
dec
jnp
sub
jmp
cld
xchg
and
mov
jns
adc
outs
xor
add
adc
fcos
pushf
repz
mov
ins
aaa
mov
jl
pop
push
mov
mov
iret
bound
stos
xchg
fcom
or
xchg
push
leave
push
sar
iret
cmovns
cmp
inc
adc
dec
fcom
retf
ins
mov
or
push
mov
push
mov
retf
call
mov
imul
mov
pop
imul
xor
or
test
cmp
xchg
nop
mov
mov
arpl
jne
rol
ret
jp
jb
test
es
ins
xlat
xchg
mov
int
pushf
dec
pop
arpl
adc
pop
into
xchg
push
ret
(bad)
xchg
cmp
push
cmp
addr16
ins
mov
les
inc
pop
adc
int
nop
push
mov
neg
xchg
movs
lock
scas
jnp
mov
add
adc
mov
push
popf
xchg
test
in
call
jmp
pop
(bad)
sbb
mov
aam
lock
neg
adc
sar
aam
mov
mov
lds
out
rcl
mov
push
imul
test
sub
ror
repnz
sub
xor
xor
push
add
(bad)
push
jno
mov
push
call
inc
(bad)
imul
cmc
icebp
mov
mov
jecxz
outs
jmp
mov
push
in
out
sbb
sub
push
mov
or
push
dec
(bad)
xchg
cmp
jp
dec
xor
sub
mov
jns
pop
inc
inc
aam
cmp
mov
jne
fsqrt
mov
into
jb
inc
ja
pop
call
test
stc
push
jae
lea
jb
adc
popa
imul
cmps
cmp
movs
dec
aad
mov
mov
test
mov
std
mov
push
out
in
mov
inc
(bad)
mov
mov
(bad)
repz
(bad)
xlat
and
pop
sbb
stc
xor
movs
cmp
lock
hlt
out
arpl
enter
fcom
stos
leave
jmp
mov
stos
xor
mov
lock
fmul
es
mov
ret
push
iret
mov
repz
imul
cs
test
shl
cmp
and
mov
enter
rol
out
push
fadd
ja
jnp
mov
stos
stos
stc
lock
cdq
stc
push
jmp
sub
cmc
hlt
cmp
aad
mov
fldenv
aas
pop
mov
(bad)
jg
xchg
xor
sbb
inc
movs
es
and
push
lods
or
push
adc
push
out
fcom
fdiv
add
mul
vmwrite
sub
mov
push
ror
jb
cmps
stc
push
(bad)
neg
scas
mov
mov
and
(bad)
pop
adc
(bad)
pop
adc
mov
mov
sub
test
cwde
fcmovne
shl
hlt
xor
jmp
movs
maxps
push
mov
loop
xchg
push
outs
or
int
jb
adc
fst
mov
js
jg
add
retf
icebp
in
pop
retf
das
inc
add
xlat
cli
sub
xchg
loopne
outs
test
aas
pop
aaa
call
dec
pop
cdq
ret
sub
add
mov
stos
sbb
xchg
push
stos
add
jle
in
fcomp
dec
bound
or
sbb
fcomp
repnz
xchg
es
pop
fs
outs
aam
btr
adc
hlt
dec
push
mov
bound
div
mov
mov
mov
or
movs
outs
add
sti
mov
imul
xlat
pop
jb
test
iret
cmps
dec
sbb
scas
cli
dec
stc
enter
sub
xchg
mov
stos
shl
cmc
int
sub
cmp
mov
fs
mov
push
dec
gs
push
gs
and
jmp
pusha
mov
inc
clc
data16
mov
repnz
dec
adc
das
pop
sahf
adc
cwde
push
adc
xchg
clc
les
adc
(bad)
das
icebp
pop
sar
paddw
add
push
or
out
mov
pop
push
jp
pop
add
in
adc
and
xchg
sub
jno
lahf
jo
mov
cmp
jmp
call
test
fs
push
ins
fstp
stos
icebp
pop
ins
adc
mov
mov
je
aad
push
shl
imul
jl
out
xchg
out
push
add
bound
clc
mov
sbb
jg
mov
dec
aaa
mov
aas
mov
fnsave
mov
dec
pop
(bad)
pop
xor
pop
dec
nop
add
xor
retf
xor
jae
and
push
or
add
xchg
mov
sub
mov
cmps
pop
lock
adc
cmp
mov
shl
or
push
sbb
js
add
cmp
test
sbb
push
inc
push
mov
cs
es
stos
lods
aaa
adc
and
call
jnp
mov
mov
test
movs
jns
add
adc
jl
sbb
test
sub
dec
in
ins
mov
xchg
test
gs
js
repnz
xchg
and
aas
xchg
pushf
jle
dec
dec
sbb
shr
xchg
xchg
(bad)
sub
fstp
cld
(bad)
out
or
fisubr
(bad)
xchg
pop
ret
push
pop
push
sar
addr16
aas
jg
es
rol
jg
ja
xchg
fisttp
add
mov
test
lea
fst
jae
aas
out
inc
add
xchg
(bad)
sub
sbb
das
jnp
push
jbe
xor
xchg
sub
or
adc
test
stos
pushf
push
mov
outs
shl
inc
mov
dec
aas
in
addr16
dec
push
dec
ja
ds
aas
and
mov
out
sbb
test
enter
sub
imul
push
(bad)
adc
xchg
lock
test
fld
add
dec
inc
cmp
inc
add
xchg
inc
test
mov
mov
add
pop
scas
sar
pusha
arpl
fild
sub
and
test
dec
enter
(bad)
dec
mov
dec
pop
xchg
retf
dec
cdq
out
lods
xchg
pop
scas
sub
add
mov
jmp
mov
icebp
xchg
xor
add
xchg
jae
or
and
cmp
lods
test
pop
leave
cs
lods
loope
jbe
nop
sub
inc
aaa
pop
dec
paddusb
cmp
sub
test
adc
leave
test
popf
dec
prefetcht1
lods
ror
or
cmp
sub
dec
mov
or
sti
xchg
popf
ret
add
cld
pop
imul
push
je
mov
fistp
adc
loope
pop
mov
in
add
jmp
dec
(bad)
ss
test
cmp
adc
push
xchg
push
xor
jp
sub
and
adc
push
pop
push
ret
and
stc
pop
stc
and
or
cmc
clc
rcl
jmp
jmp
cmp
stc
jo
scas
push
add
enter
jb
ja
les
cwde
push
pusha
cmps
adc
adc
stc
icebp
cmp
fist
mov
mov
inc
and
sub
movs
out
xor
das
jb
push
push
cli
xchg
leave
push
stc
cmp
or
jecxz
push
stos
cmp
cmp
ds
jp
ret
fwait
(bad)
cmps
add
push
ds
jnp
cmp
sub
cmp
addr16
int
xchg
loope
icebp
inc
sbb
(bad)
sti
js
shl
add
mov
ret
jp
xchg
inc
rcl
jmp
pop
xlat
nop
enter
enter
xchg
ret
or
add
mul
pop
pop
add
sbb
ror
cmps
aaa
push
jb
or
fist
or
push
pop
fldl2t
adc
and
mov
push
std
movs
push
fs
adc
ss
aam
aas
mov
sub
cli
pushf
out
cld
sbb
xchg
xchg
pop
push
pusha
sahf
xor
mov
nop
rol
into
sahf
call
push
xlat
shr
setnp
jp
bound
fwait
mov
xchg
cmps
add
inc
mov
int
mov
cdq
xlat
adc
pop
push
retf
int
xchg
stos
jmp
jae
lock
out
cld
test
add
push
lock
cwde
dec
sub
push
and
jp
xor
(bad)
dec
bound
mov
mov
test
add
rol
dec
adc
xor
ins
jl
push
outs
imul
gs
call
arpl
cmp
stc
dec
imul
(bad)
ins
int
and
fist
sar
dec
ss
jle
xor
(bad)
xchg
push
pop
jle
nop
adc
adc
sub
hlt
outs
shl
and
das
mov
cmps
cmp
push
mov
mov
in
in
shr
aad
xchg
enter
mov
adc
mov
fcom
cmc
dec
loop
adc
mov
sbb
pop
fidiv
adc
std
rcl
cmp
ret
lock
outs
je
inc
adc
repz
loope
into
inc
out
pop
sbb
frstor
cmp
jne
dec
rol
inc
dec
aam
cmp
cmps
fiadd
or
pop
cli
call
sub
loope
mov
push
aam
xchg
in
outs
in
and
mov
iret
inc
arpl
fmul
or
lds
rol
jns
pop
ret
fs
pop
in
leave
xchg
jo
cdq
jno
fs
stos
adc
out
call
xor
fistp
cs
jp
std
inc
mov
add
xchg
pushf
and
test
sbb
fidivr
stos
scas
rol
pushf
jp
jg
shl
aas
jno
jmp
cmp
ins
pop
sar
pop
mov
addr16
add
scas
rcr
xchg
xchg
sahf
inc
add
cmp
push
add
shr
ficomp
pop
push
std
ret
call
or
cld
shr
iret
xlat
mov
cmp
xor
cmp
sub
popf
dec
or
mov
sbb
pop
fisubr
bound
jb
cld
sbb
push
cs
arpl
sti
lods
mov
inc
lods
lahf
mov
sbb
dec
popf
jmp
cmp
fnsave
fcmovnb
xchg
pop
aam
push
pusha
add
test
mov
push
jno
inc
xchg
bound
or
or
jb
data16
loope
and
xor
cmp
out
adc
std
jne
imul
jo
push
xchg
repz
inc
fimul
int3
mov
or
jb
not
fwait
loop
mov
mov
jl
pop
pop
push
jmp
int
int
aaa
dec
aad
jne
push
jle
or
into
cmp
sub
mov
(bad)
cmp
dec
fsqrt
ret
xchg
fisub
retf
pop
sbb
clc
popa
imul
dec
es
enter
sbb
test
jno
movs
xchg
retf
dec
pop
jp
jmp
int3
mov
fldcw
jmp
pop
test
(bad)
pop
cwde
out
cli
rcl
push
mov
sub
into
movs
call
in
mov
add
mov
pop
dec
dec
lods
repz
xchg
in
mov
dec
jmp
or
(bad)
pop
add
push
out
sbb
jecxz
aad
adc
xchg
and
test
call
test
pusha
out
cmps
and
ret
jmp
cmps
inc
and
push
xor
icebp
jno
je
fist
cmp
test
pusha
cwde
scas
cmps
jmp
pop
inc
(bad)
mov
or
outs
sbb
pop
mov
or
lods
adc
adc
ss
mov
shl
jge
or
std
cmp
call
push
jp
rcr
ficom
push
ds
or
xchg
fcom
and
cmp
cmps
jl
shr
ret
or
xor
(bad)
mov
push
loope
add
pop
mov
mov
rcl
(bad)
sbb
loope
ss
repz
fsub
push
mov
movs
cmps
xor
lea
not
mov
jne
sbb
js
lock
mov
stos
jae
je
cmc
in
cmp
mov
cli
cmps
std
dec
repz
add
mov
stc
lods
adc
stc
cmp
inc
mov
into
loop
xchg
cmp
sahf
dec
ret
popa
pop
test
xor
add
aaa
lods
mov
push
sub
shl
sbb
outs
sbb
pop
jno
ret
mov
fstp
or
shl
and
xchg
mov
jns
sar
mov
jnp
faddp
retf
push
lds
mov
fcom
jmp
call
sub
jmp
cmp
into
ds
xchg
test
cmp
xor
call
and
sub
repnz
dec
jecxz
sub
mov
lock
cmp
sub
clc
ins
int
idiv
dec
add
inc
push
cmp
push
je
cmp
outs
ret
mov
lock
push
test
mov
cmp
shl
fdiv
mov
or
inc
add
adc
ins
out
pop
rcl
in
fdiv
outs
(bad)
adc
out
imul
pop
push
fs
scas
cmp
call
push
sbb
cli
cmc
sub
aam
mov
lds
mov
nop
jl
pop
in
mov
push
cmp
(bad)
xchg
rol
inc
pop
mov
retf
leave
fwait
lahf
shr
xlat
sub
lahf
arpl
sub
in
loopne
mov
cdq
or
mov
fnstsw
jecxz
ja
pop
cmp
in
mov
pxor
test
mov
mov
cmp
shl
repnz
imul
leave
call
push
fst
adc
lock
imul
push
add
clc
fwait
aad
gs
xchg
stos
retf
mov
rol
sub
xchg
outs
lahf
outs
rcl
outs
dec
les
repnz
sbb
inc
push
leave
(bad)
aaa
inc
mov
xchg
xchg
sar
stos
dec
and
mov
cdq
loop
mov
dec
ficomp
push
mov
rol
and
scas
out
mov
sbb
pop
in
dec
stc
or
jg
imul
xor
and
jge
(bad)
(bad)
loop
xchg
clc
fwait
retf
add
lea
push
adc
lea
fdivr
pop
fs
cdq
adc
fwait
rcr
shr
in
stos
stos
xor
xor
jmp
cwde
jnp
push
mov
sub
loope
xchg
xchg
rcl
sub
and
sub
fs
bound
sahf
icebp
or
sbb
mov
push
adc
test
es
fcmove
xor
ret
aaa
push
movs
bnd
and
mov
test
or
iret
mov
jg
cmps
fwait
pop
ins
inc
(bad)
mov
(bad)
mov
push
fisubr
sbb
add
inc
dec
mov
mov
fs
pop
sub
adc
jae
in
sbb
jnp
xchg
in
jb
dec
shl
sbb
cmp
inc
out
lods
js
add
dec
lock
call
pop
sahf
cmp
pop
jns
push
or
or
test
jecxz
mov
push
(bad)
xor
cmp
pop
mov
es
cmc
call
mov
daa
sub
or
and
xor
xchg
and
xchg
cmps
or
stos
jmp
push
fs
loopne
in
mov
int3
outs
ss
cmps
rol
sub
jbe
test
je
push
cs
test
jae
mov
arpl
xchg
lods
dec
and
sbb
ss
arpl
xchg
das
add
(bad)
lahf
xlat
pop
xchg
fsubr
push
hlt
xchg
push
mov
in
iret
int3
test
adc
inc
(bad)
daa
jns
and
cmp
(bad)
test
pushf
loopne
aad
rol
and
jo
pusha
aaa
and
(bad)
out
dec
in
add
add
icebp
add
mov
mov
xchg
lods
ins
dec
dec
sub
push
test
push
aam
inc
fidiv
jecxz
retf
mov
jns
sub
outs
push
sahf
mov
inc
dec
das
fidiv
loop
clc
cli
xor
mov
jae
outs
jo
push
add
xor
push
shl
cdq
mov
sbb
pop
inc
jg
dec
sar
jbe
push
or
dec
lds
ds
xor
mov
ret
pop
dec
fbstp
enter
mov
sub
cmp
ret
mov
(bad)
pop
pop
xor
movs
lods
js
call
in
push
xchg
ffreep
popa
push
cmp
shr
jmp
xor
sub
out
sub
add
cmp
(bad)
jecxz
inc
imul
clc
cmp
iret
stos
lds
ret
in
scas
in
sub
shr
lock
mov
mov
jg
enter
ja
movs
loop
jno
push
mov
jmp
and
imul
mov
jge
clc
cmps
jg
jns
outs
jmp
ins
das
mov
shl
pop
jo
ss
inc
push
leave
retf
mov
pop
xchg
and
fld
sti
pop
mov
imul
xor
pusha
xchg
ja
pop
lods
pop
cmp
adc
mov
mov
xor
mov
leave
push
mov
push
popf
sbb
or
mov
and
mov
hlt
retf
pusha
rcl
cs
or
push
ret
jns
retf
push
dec
jne
mov
sub
ds
mov
mov
push
jl
(bad)
cmc
dec
in
lds
stos
adc
stos
inc
test
adc
push
mov
shr
iret
fadd
add
pop
xchg
gs
fs
lahf
dec
mov
loop
in
xchg
loopne
test
xor
cmps
pop
mov
sub
jl
shl
fild
xlat
sbb
fiadd
dec
call
out
inc
add
or
dec
pusha
inc
jo
mov
scas
jle
push
xor
hlt
dec
loope
and
icebp
mov
add
data16
in
cdq
and
scas
icebp
fs
(bad)
test
loopne
cs
inc
push
(bad)
pop
xchg
lahf
pop
sbb
push
test
xchg
dec
jmp
aaa
inc
dec
inc
mov
pop
into
pop
mov
js
cmp
adc
xlat
mov
ror
sub
int3
data16
loop
pop
xchg
mov
std
pop
ror
sbb
aam
mov
add
mov
fisubr
xor
cmp
and
lods
mov
jnp
inc
or
xchg
shl
sbb
push
xor
adc
pushw
icebp
cmps
in
ss
mov
cmp
inc
imul
arpl
movs
(bad)
je
pop
(bad)
out
outs
ss
mov
cs
in
sub
(bad)
xchg
bound
inc
xor
aas
test
xor
sub
jecxz
(bad)
ins
xchg
rcr
pop
fbld
cli
gs
in
mov
dec
stc
cmps
movs
clc
xchg
xchg
dec
cld
repz
stos
xchg
inc
mov
mov
outs
cdq
stc
add
and
mov
inc
nop
mov
fistp
cmps
or
fsub
lahf
cmovg
pop
mov
sub
test
xchg
cwde
or
inc
sub
adc
adc
data16
cmps
pop
add
nop
pop
movs
inc
rol
or
neg
sub
jae
mov
push
int3
pop
xor
or
shl
sbb
jmp
ss
fbstp
sbb
(bad)
pop
inc
repnz
jnp
in
fstp
shl
ins
(bad)
popa
ja
scas
fwait
ins
xchg
loope
xchg
sub
xor
enter
cmp
lahf
jb
pop
addr16
clc
inc
mov
or
(bad)
and
fld
mov
push
mov
push
xchg
cmp
sbb
mov
adc
jns
cmp
out
repz
mov
ds
mov
js
fild
xor
add
jmp
test
cwde
out
xor
push
stos
xlat
pop
xor
retf
cwde
pop
adc
adc
and
fcom
dec
xchg
cmc
neg
leave
mov
ret
mov
sbb
mov
adc
pop
bound
mov
ins
retf
sahf
int3
dec
jns
push
cwde
cmps
push
rcr
jl
cmp
mov
mov
mov
sti
cmp
scas
not
xor
rcr
mov
sahf
pop
(bad)
inc
sub
mov
pop
bound
out
push
cs
stos
cmp
outs
mov
inc
xchg
mov
ss
shl
mov
call
push
test
ret
out
in
sub
mov
cmp
enter
sub
dec
or
sahf
inc
scas
ds
jmp
push
fldcw
add
enter
xor
add
or
sti
retf
imul
mov
fnstsw
repz
cmp
mov
js
xor
ja
inc
sbb
pop
push
mov
push
loop
loopne
repz
adc
into
push
push
in
shr
mov
fdiv
ror
mov
push
lods
fisubr
(bad)
fcmovnb
xor
test
pop
loopne
dec
ret
dec
mov
adc
loope
inc
fstp
xchg
loop
cmp
push
inc
setae
adc
lods
xchg
popf
hlt
mov
xchg
dec
and
xor
std
cmp
mov
ja
das
pushf
sahf
out
jnp
jmp
into
dec
mov
cdq
push
pop
inc
mov
sbb
aas
adc
xchg
fdivr
fwait
arpl
sbb
xor
lea
in
mov
add
sbb
or
enter
leave
dec
ins
dec
test
jmp
movs
in
in
and
(bad)
loopne
mov
pop
pop
adc
pushf
aad
(bad)
in
or
mov
inc
sar
push
out
push
push
xor
mov
and
jae
dec
sbb
xchg
ja
stos
aas
loop
mov
mov
mov
mov
imul
mov
inc
popf
call
xor
jge
jae
or
(bad)
xchg
inc
mov
jns
push
ja
mov
repnz
jmp
cdq
cwde
push
push
jecxz
test
clc
ins
lock
lahf
imul
nop
and
stos
stos
mov
fcomp
push
xor
or
jl
dec
mov
or
bound
bound
push
call
jle
ret
call
daa
xchg
cdq
call
out
sub
dec
cdq
jl
adc
fstp
repz
and
and
ret
outs
xor
lds
mov
cmp
mov
ins
and
or
adc
mov
xor
arpl
pop
cmc
adc
push
test
pop
push
jnp
ins
inc
test
pop
mov
cmps
mov
mov
sub
shr
jecxz
nop
pop
mov
int
or
xor
scas
clc
add
and
jo
mov
dec
sbb
mov
cmps
push
push
cmc
xor
push
stos
out
sbb
gs
mov
sbb
inc
das
adc
jae
mov
sar
mov
push
push
jne
dec
add
sar
mov
fistp
jnp
push
addr16
xchg
das
inc
jmp
lahf
fs
add
xchg
out
clc
mov
mov
pushf
sti
aas
cmc
cmp
dec
xor
jne
es
sub
outs
out
lds
popa
pop
xchg
int3
xchg
popf
sbb
pusha
jecxz
push
mov
call
sbb
or
jg
push
sbb
pusha
pop
neg
jmp
ss
(bad)
ret
(bad)
mov
cmp
xor
lods
and
push
jmp
(bad)
(bad)
fdivr
push
xor
sbb
cmp
data16
mov
inc
adc
out
fwait
mov
adc
mov
pop
adc
(bad)
mul
sub
mov
movnti
mov
mov
jmp
pop
mov
cmps
hlt
mov
and
enter
adc
test
test
out
xchg
mov
test
jb
pop
out
fldenv
imul
mov
jb
loope
cdq
neg
mov
ror
pushf
sbb
ss
sub
ja
xor
aaa
not
(bad)
movs
or
outs
out
adc
aad
movs
jnp
mov
jg
lock
rol
(bad)
imul
test
stc
shl
test
mov
xchg
cmps
out
inc
or
jb
shr
idiv
call
leave
inc
imul
pop
xchg
inc
imul
sub
loop
cli
out
mov
retf
mov
ins
pop
inc
out
stos
ret
jge
aad
(bad)
setb
xor
cdq
mov
pop
push
out
lahf
sbb
test
and
pop
ret
add
(bad)
lea
stos
dec
call
mov
or
xor
lea
add
std
sub
jae
or
in
jle
cli
pop
cmc
ret
and
aaa
or
out
inc
out
test
icebp
stos
int3
inc
nop
xlat
pop
jecxz
jbe
rol
adc
pushf
cld
fist
mov
or
add
and
lods
dec
jb
jb
fsub
test
pop
popf
mov
inc
nop
inc
lds
pop
xor
cwde
mov
add
stc
stos
mov
sbb
push
xchg
nop
adc
pop
ss
or
mov
rcr
daa
(bad)
jae
into
inc
pop
hlt
std
pop
mov
push
push
scas
pop
push
mov
pop
push
jecxz
mov
sub
dec
and
mov
mov
pushf
cmp
push
sar
adc
jns
std
cmp
daa
mov
inc
xor
adc
fistp
sbb
movs
xchg
or
das
popa
mov
retf
or
(bad)
stc
pop
push
and
dec
jns
dec
pop
div
icebp
imul
pop
dec
mov
dec
mov
pop
inc
lds
mov
push
push
mov
and
les
jmp
rcr
add
dec
les
jo
ins
lods
push
std
enter
nop
stc
sbb
xor
out
and
add
imul
dec
cmps
paddw
xchg
jmp
xor
jmp
jmp
cli
pop
and
push
dec
(bad)
ins
push
mov
imul
sub
movs
sbb
(bad)
jmp
loopne
sbb
ror
cmp
mov
adc
push
clc
pop
adc
in
scas
cmp
and
mov
ds
leave
xor
cli
aas
pop
xor
test
jne
ss
inc
icebp
or
imul
pusha
call
fidivr
pop
xor
das
xchg
loop
push
rol
mov
retf
cmc
mov
test
jle
and
ficom
retf
retf
mov
iret
sub
ins
inc
sahf
jmp
outs
xchg
jns
jge
leave
in
aaa
in
ret
and
pop
jmp
pop
shl
aad
or
mov
dec
or
fbstp
packsswb
mov
xchg
aas
inc
and
inc
or
mov
mov
push
push
cmc
sbb
add
pop
lahf
lahf
sub
in
jle
cmc
lds
(bad)
lock
mov
fbld
dec
(bad)
sar
add
xlat
pop
push
adc
fist
mov
and
and
cmp
enter
pop
shr
inc
push
push
(bad)
out
xor
mov
or
repnz
pop
clc
cs
xchg
scas
fisttp
jg
xor
shl
pop
and
inc
adc
mov
paddq
push
add
inc
sti
lods
sbb
pushf
xor
jb
pop
xor
adc
xchg
ds
cmp
ret
mov
jle
fist
mov
add
stos
rcl
jae
add
mov
inc
arpl
jne
xchg
or
sahf
test
fprem1
mov
(bad)
pop
xlat
xlat
xor
mov
in
jne
data16
cmp
push
inc
push
mov
mov
(bad)
mov
mov
xchg
rol
jbe
push
push
mov
lock
xor
test
mov
jp
mov
adc
cmps
pop
(bad)
je
jnp
pop
or
(bad)
test
fst
cmp
loop
jb
mov
add
ror
and
inc
and
adc
loope
mov
aad
dec
mov
xor
cmc
js
pushf
dec
jns
sub
pop
push
xchg
sub
cmp
(bad)
push
fs
loop
popf
ja
(bad)
mov
pop
jne
adc
push
mov
fst
retf
dec
dec
retf
out
addr16
aam
call
lahf
ss
pop
jg
push
sbb
pop
add
shl
cdq
popf
jl
inc
out
inc
dec
fbld
fnsave
test
push
push
xchg
es
mov
cmp
cmp
xchg
mov
mov
sbb
xchg
mov
call
mov
cmps
mov
cmp
xchg
xchg
jnp
inc
mov
gs
add
paddq
mov
dec
iret
fs
mov
rcr
repnz
test
sbb
cmps
jns
stos
jne
mov
loop
lea
loop
or
mov
pop
js
cmp
sbb
xor
xchg
and
pop
out
push
push
aam
jge
sbb
adc
sar
dec
addr16
mov
cmps
add
push
jg
sub
les
push
inc
mov
(bad)
icebp
adc
cmp
mov
mov
loop
(bad)
or
stos
add
icebp
mov
stc
sub
not
loop
xchg
outs
stc
not
addr16
sub
pop
cld
or
dec
out
push
jne
sbb
scas
int3
sub
mov
ins
ret
ja
jp
lea
push
fmulp
add
xor
push
mov
gs
sbb
pop
mov
(bad)
out
inc
loopne
addr16
sub
push
test
sbb
sub
xor
mov
jl
mov
xchg
cmc
enter
imul
pop
cli
xlat
ins
sub
add
es
popf
mov
sti
dec
add
loop
sub
add
gs
xor
imul
jno
xchg
jp
adc
xor
dec
inc
dec
dec
xchg
mov
pop
bound
mov
sbb
jbe
cmp
dec
jge
sbb
fstp
ins
test
adc
push
cwde
or
sub
mov
retf
cmps
push
dec
mov
shr
movs
nop
lds
and
iret
mov
pop
pop
icebp
mov
add
popa
jbe
push
cld
inc
shl
mov
sub
(bad)
movs
inc
fisubr
out
mov
(bad)
mov
adc
mov
fs
paddusw
fst
jp
int3
sub
movs
push
cmp
add
jge
movs
push
in
pop
pop
(bad)
scas
sub
dec
inc
je
adc
dec
std
xor
mov
mov
sub
test
xchg
mov
inc
and
mov
mov
cmp
fwait
jmp
mov
mov
stos
pop
inc
retf
movs
push
imul
inc
enter
hlt
mov
push
xchg
loop
cmp
mov
imul
sbb
(bad)
push
add
cmp
lods
xchg
add
jp
mov
in
mov
add
shl
sbb
and
sahf
jmp
mov
icebp
jecxz
(bad)
leave
or
mov
cli
div
mov
adc
xchg
addr16
cmp
dec
clc
lea
adc
and
setns
jo
push
jns
jae
test
and
add
adc
popa
mov
mov
cmp
dec
jnp
mov
out
and
pusha
or
pop
bts
je
cvtps2pd
loop
outs
sub
push
dec
or
push
mov
pop
sbb
aad
mov
dec
push
jo
inc
pop
inc
xor
push
xlat
push
or
pop
mov
in
movs
pop
(bad)
jbe
dec
sbb
sbb
pop
popf
sbb
bound
inc
and
call
cmp
jb
mov
movs
push
cmp
popf
cli
mov
(bad)
fcom
xchg
pop
adc
mov
retf
push
push
test
addr16
aad
ds
xchg
neg
in
sbb
cmps
dec
xchg
adc
jp
cmps
and
(bad)
pop
(bad)
rcr
ror
xchg
xchg
sub
pop
jb
sub
push
in
mov
inc
or
adc
ficom
mov
enter
push
aam
inc
adc
fwait
cld
lods
push
push
pusha
sbb
test
xchg
pop
pop
push
mov
bound
arpl
dec
xor
dec
bswap
inc
cwde
sbb
dec
or
mov
cmp
jge
syscall
loope
fdiv
sbb
sub
adc
mov
pop
mov
lods
or
cmc
or
cs
bound
popf
push
fidivr
cmps
sbb
xchg
fcomp
in
(bad)
jo
test
fidiv
retf
mov
add
std
xchg
mov
sar
sbb
dec
and
pop
mov
mov
and
std
inc
xor
and
imul
sub
push
test
ds
push
test
test
cld
push
ds
fisttp
mov
pop
sub
into
mov
cli
sub
push
cmp
ret
rcr
repz
fdiv
or
test
std
cmps
test
xor
inc
popf
mov
push
pusha
mov
cmp
fadd
cld
icebp
int3
xchg
pop
stos
fsubr
xchg
mov
out
dec
dec
sub
int3
pop
scas
inc
xchg
inc
sti
dec
xlat
xor
loop
dec
mov
iret
adc
or
push
idiv
lods
push
fmul
(bad)
in
idiv
ins
out
mov
ret
retf
retf
pushf
xchg
cmp
push
shl
dec
mov
js
xlat
mov
inc
pop
std
test
out
xchg
pop
movs
outs
jne
sbb
retf
mov
mov
mov
stos
xlat
push
retf
aas
cmp
(bad)
mov
out
test
in
dec
xchg
jno
int
mov
inc
ja
pop
(bad)
and
popa
xchg
fs
aad
lds
dec
movs
push
loopne
aas
imul
inc
out
in
push
inc
push
xchg
adc
das
adc
xchg
shl
adc
mov
or
pop
and
es
dec
adc
(bad)
and
cmps
push
jg
push
sub
jne
iret
mov
xchg
pop
fcom
sbb
dec
or
not
dec
and
pop
repnz
outs
mov
dec
loopne
push
xor
and
jp
and
mov
fadd
mov
retf
pop
gs
jmp
jge
data16
test
inc
add
pop
test
repz
jb
and
into
lock
push
push
mov
in
and
aad
jno
push
mov
cmp
out
cmps
sub
jl
pushf
shr
fnstcw
aad
cmp
aam
dec
pushf
lds
lods
inc
sbb
rcr
fdiv
push
lea
pop
data16
push
(bad)
jb
or
pop
iret
pop
sub
iret
scas
xor
mov
mov
pop
ja
jne
lea
sahf
loop
xlat
stos
adc
sub
mov
pop
leave
pop
loopne
xchg
xor
in
xchg
mov
jns
sub
sub
loopne
xchg
sbb
dec
leave
pop
je
mov
mov
mov
sub
cmp
out
mov
(bad)
aad
jnp
xchg
fdivr
loopne
iret
stos
stos
dec
addr16
loopne
inc
inc
xchg
mov
popa
jmp
jns
std
pop
xor
call
push
jne
xlat
(bad)
dec
push
dec
mov
(bad)
outs
test
imul
push
mov
xchg
jns
jp
out
outs
sub
push
mov
add
cmp
mov
sbb
movs
ins
sub
test
jl
fistp
mul
repnz
jne
dec
add
pop
sbb
jp
add
mov
mov
lods
sbb
ins
int
je
les
pushf
mov
jle
addr16
mov
lods
inc
fisub
fisubr
add
jbe
jne
cmc
stos
test
sbb
xor
mov
into
jge
loopne
mov
ret
iret
or
jle
xchg
(bad)
(bad)
xchg
(bad)
mov
mov
push
cld
loopne
and
mov
mov
out
mov
xor
xchg
pop
add
mov
mov
mov
inc
add
mov
test
jmp
scas
sub
mov
dec
xchg
jnp
push
das
adc
xchg
imul
rol
pop
pop
leave
sbb
xchg
lods
aad
mov
aaa
in
cmc
pandn
neg
mov
xlat
adc
dec
adc
pop
inc
mov
mov
inc
cmps
or
scas
mov
ficom
les
adc
cmp
(bad)
dec
fcmovnu
xor
xor
jecxz
lds
pushf
or
pushf
jmp
inc
fadd
test
pop
and
mov
icebp
add
into
xlat
(bad)
dec
pop
cmps
stos
pop
and
hlt
xor
xor
test
push
sub
call
(bad)
push
push
mov
je
jle
push
imul
inc
aad
mov
inc
sbb
outs
jo
pop
pop
inc
mov
pop
imul
test
pop
jle
push
lods
fdiv
dec
adc
mov
sbb
ja
jle
mov
inc
xchg
retf
cmps
pop
nop
imul
mov
xor
sub
mov
pusha
mov
add
lods
inc
cmp
pcmpgtw
adc
cli
jbe
jns
les
mov
scas
sbb
mov
in
push
(bad)
pop
cs
xor
ss
push
cmp
pop
jnp
out
mov
dec
dec
fsub
or
pop
mov
ret
jbe
xlat
loopne
add
daa
test
and
push
jae
gs
(bad)
dec
ja
xchg
retf
adc
ins
mov
js
push
repnz
pusha
inc
mov
push
mov
pop
push
sub
sub
sbb
dec
pop
push
mov
xchg
ja
cwde
test
mov
pop
mov
call
les
adc
outs
inc
and
out
inc
xchg
sub
je
mov
out
pop
repz
cld
fisubr
cmp
daa
fiadd
or
sbb
xchg
xchg
sub
sub
ds
sub
or
jle
xor
cwde
or
or
pop
enter
sbb
dec
sub
lods
out
int3
xchg
cli
pop
test
scas
mov
pop
shr
inc
jne
test
xchg
leave
dec
inc
jp
(bad)
shl
and
push
sbb
sbb
dec
inc
add
inc
cmps
ret
pusha
sub
mov
outs
movs
push
test
push
inc
and
in
stos
or
push
cmp
shl
fld
(bad)
lock
xchg
mov
out
imul
outs
pop
dec
scas
xor
jnp
dec
adc
push
aaa
(bad)
and
cmp
mov
popf
repz
fdiv
fstp
inc
push
ins
dec
jne
sar
push
add
(bad)
jmp
cli
(bad)
jg
in
dec
cmc
dec
(bad)
icebp
(bad)
jmp
fs
retf
xchg
mov
je
xchg
sbb
out
jne
cmp
or
ss
jge
(bad)
or
jmp
dec
add
outs
gs
bswap
or
jmp
adc
mov
pop
sub
dec
or
leave
xchg
push
cmp
sbb
push
sub
rdmsr
pop
lea
fmul
cmp
repz
aas
pop
xor
test
push
xchg
pop
push
ins
jno
mov
repnz
(bad)
(bad)
mov
mov
cmp
inc
and
pop
pop
xor
xor
(bad)
xchg
in
hlt
arpl
or
xor
add
push
xlat
ja
mov
outs
data16
xor
push
iret
pop
enter
outs
jmp
cs
int3
add
cmps
jge
sub
icebp
sub
ja
(bad)
adc
push
lock
retf
jmp
cdq
inc
sbb
pusha
push
push
fcomp
ins
loop
test
es
pop
loop
adc
jmp
sub
(bad)
or
sub
mov
mov
das
xor
add
hlt
push
cmp
dec
les
and
cmp
loope
sub
mov
retf
inc
(bad)
xor
xchg
repz
push
icebp
push
stos
xor
mov
mov
xchg
ss
adc
add
cmp
cmp
push
movs
repz
jne
add
xor
adc
sbb
call
outs
pop
xor
popf
lods
fwait
push
int3
mov
les
jmp
add
dec
in
mov
fiadd
inc
add
daa
fist
jecxz
fstp
jmp
div
add
fimul
add
jmp
jmp
push
mov
mov
into
aaa
add
sbb
pop
cmp
xor
pop
mov
out
xor
ret
jo
mul
mov
jg
call
cli
push
push
jp
call
cs
dec
and
mov
bound
nop
loope
or
sbb
loope
jl
in
jo
sub
ret
lods
repz
sbb
cs
jge
imul
dec
xchg
addr16
cmp
xor
jbe
mov
xor
jns
push
scas
xchg
aam
jne
mov
mov
jbe
xor
leave
adc
push
dec
mov
lods
mov
fdiv
push
retf
arpl
iret
push
mov
jno
and
cs
(bad)
jae
mov
das
je
pop
pop
ror
jne
loope
add
lds
fwait
sbb
(bad)
out
ins
fbstp
jns
enter
sahf
mov
das
test
les
mov
pop
das
mov
sbb
or
fs
(bad)
in
repnz
jbe
sbb
xor
bound
add
pop
dec
movs
pop
push
ror
pop
xchg
mov
pop
push
aaa
scas
push
or
pop
dec
pop
xchg
push
add
loop
imul
fild
fidivr
addr16
cli
(bad)
xchg
add
pop
ins
inc
and
les
or
push
xchg
and
js
mov
repnz
cmp
push
fistp
std
jmp
or
mov
addr16
xor
stos
movs
xchg
(bad)
lods
jb
retf
mov
mov
xchg
add
cmps
fwait
jmp
mov
ror
jo
add
cmp
call
lea
and
out
outs
aaa
cmp
inc
or
in
sbb
pop
sar
and
push
pop
ja
sbb
and
xor
enter
mov
xchg
repz
dec
nop
or
sar
add
sbb
adc
pop
pop
fimul
stc
jl
xchg
add
es
in
adc
movs
push
mov
pop
shl
mov
ret
js
idiv
xor
js
or
mov
dec
into
or
cld
dec
sbb
sub
sbb
lock
pusha
jae
cs
rcr
pop
mov
outs
push
call
or
add
repnz
iret
pop
lahf
js
dec
popf
popf
pusha
cmp
pop
(bad)
sbb
xchg
stc
sbb
imul
stos
pop
pusha
mov
test
adc
ud1
rcl
jns
cli
int3
mov
or
ins
push
(bad)
mov
pop
mov
jno
and
add
mul
jo
jge
and
jb
xchg
out
daa
std
popa
xor
jnp
scas
or
jge
xchg
rcr
ja
das
fdivr
cmps
mov
mov
lods
inc
xor
clc
enter
or
add
jb
in
mov
cdq
jle
inc
cdq
push
push
leave
jle
imul
jmp
popa
xor
ja
mov
xor
pop
and
in
(bad)
xor
add
loope
sub
sub
aas
mov
cmp
inc
pop
test
xchg
(bad)
(bad)
in
and
repnz
pushf
lods
mov
inc
mov
add
push
fstp
sti
repnz
adc
push
adc
lock
inc
(bad)
or
aaa
rcl
dec
fadd
jno
es
jl
stc
and
mov
dec
adc
jae
inc
pop
fst
mov
clc
push
add
adc
inc
adc
ss
mov
arpl
ins
pop
push
movs
cwde
sub
adc
popf
aad
fs
jne
cli
aam
aas
ret
popa
sbb
dec
pushf
mov
mov
fisubr
cs
pusha
or
mov
mov
sub
jo
xchg
xchg
sbb
pop
int
hlt
xor
dec
clc
sub
sbb
hlt
repnz
cmp
cld
xchg
xor
aad
aaa
pop
sbb
jne
imul
rcl
dec
sbb
(bad)
movs
xlat
psubq
xchg
popf
(bad)
hlt
aas
push
bound
xchg
xor
ss
cmp
gs
mov
sub
int
and
sti
xchg
mov
cmp
js
cmp
in
lods
ret
dec
out
pop
lds
mov
repz
pop
stos
gs
imul
movs
sar
fisub
mov
push
fldcw
fdivr
cmp
mov
aad
add
push
jecxz
mov
mov
js
add
xlat
inc
(bad)
pop
frstpm(287
or
mov
jecxz
sar
outs
dec
cmps
push
jg
xor
ret
pop
dec
lea
dec
fs
sub
jge
addr16
xchg
mov
xchg
fucomp
je
mov
xchg
mov
jns
sub
pop
sub
cmps
ret
cmp
movs
in
dec
dec
imul
into
xor
jno
xor
hlt
sbb
out
cld
jo
push
icebp
mov
cmp
adc
out
das
in
adc
mov
cmp
mov
jl
inc
rcr
xchg
js
push
es
(bad)
and
rcr
mov
cmp
out
out
pop
and
push
mov
mov
add
sbb
or
inc
mov
aam
jmp
test
sub
xor
mov
call
mov
fstp
neg
sub
mov
arpl
xor
popa
mov
pop
inc
mov
sub
dec
test
mov
les
push
cld
outs
cmp
mov
shl
das
dec
retf
fs
xor
icebp
or
ficom
jmp
sbb
stc
xor
paddb
mov
stos
xchg
stos
pop
and
cwde
add
push
inc
(bad)
adc
popf
nop
inc
dec
fs
pop
and
xchg
add
out
push
js
pop
clc
out
mov
test
imul
add
adc
mov
jle
cmp
mov
push
into
int
xor
pop
fistp
push
je
loop
pushf
jns
test
es
cmp
push
cmps
in
xchg
aad
add
and
sbb
jmp
inc
sub
mul
imul
jmp
enter
test
mov
dec
dec
adc
dec
pusha
movs
push
pop
dec
call
js
test
mov
and
cmp
cmp
mov
scas
inc
pop
pop
(bad)
pushf
lods
jb
or
push
addr16
lahf
movs
shl
sub
xlat
cmp
mov
pop
scas
test
xchg
(bad)
add
push
(bad)
mov
(bad)
cmp
ret
ins
shl
cmp
inc
in
dec
mov
jno
mov
jmp
ret
mov
das
sub
push
jmp
in
push
fwait
loope
jle
out
sub
cmp
add
xor
mov
xor
retf
xchg
fnstsw
arpl
sub
daa
or
jmp
out
scas
(bad)
cmp
outs
cmp
mov
mov
mov
and
outs
add
mov
dec
or
clc
int3
inc
or
shl
mov
cmp
or
loopne
iret
sbb
jge
sbb
pop
and
fdivr
jp
loopne
arpl
xchg
(bad)
cmps
xor
rol
(bad)
stos
add
and
and
or
pop
bnd
inc
jge
fistp
pop
daa
pushf
dec
xchg
mov
test
cmp
sub
jbe
outs
bound
dec
push
xor
adc
(bad)
mov
inc
sub
repnz
out
out
ret
cmp
fwait
(bad)
dec
pop
gs
mov
add
adc
xchg
jno
add
xlat
adc
pushf
push
icebp
ret
push
mov
mov
lods
mov
dec
inc
push
repz
sbb
imul
sbb
shl
rol
sub
iret
test
fistp
inc
imul
(bad)
ja
and
inc
int
xchg
push
js
cmp
aam
jno
daa
call
push
mov
stos
jmp
test
pop
push
inc
push
out
push
xor
pop
cli
xchg
xor
scas
mov
psubsb
and
test
dec
dec
rcr
pop
fld
das
sub
mov
out
jl
ret
icebp
and
out
adc
inc
sahf
xor
sub
mov
sub
loopne
pop
mov
hlt
fyl2x
jo
or
push
sbb
(bad)
mov
xchg
push
xor
dec
push
enter
std
push
das
xchg
mov
push
sbb
test
push
aas
pop
dec
xor
(bad)
lahf
xchg
mov
aas
or
or
dec
fisttp
cdq
retf
pop
xchg
out
cmp
icebp
lahf
push
or
jmp
and
ins
popf
jbe
add
mov
cdq
or
sti
repnz
mov
jmp
out
(bad)
shl
enter
xor
lahf
aad
ror
cdq
pop
adc
test
aad
ret
lock
inc
sub
repnz
(bad)
add
(bad)
mov
cmp
inc
or
mov
add
and
popa
sub
pop
dec
adc
xor
add
mov
arpl
into
test
mov
call
in
sub
sub
dec
enter
pop
(bad)
popa
gs
jns
cs
or
cdq
mov
sub
scas
popa
pop
pushf
cwde
pop
iret
and
add
jno
jbe
imul
cmp
arpl
scas
sti
das
popf
imul
test
xor
fs
les
mov
mov
aam
aad
ret
dec
and
stc
cmps
jns
scas
ud1
dec
call
pop
ds
(bad)
aas
add
dec
scas
sbb
cmp
aaa
lea
mov
cmp
add
out
test
mov
in
dec
jno
jmp
xor
add
ret
das
out
inc
in
pop
movnti
mov
or
add
sti
popf
cdq
sbb
enter
test
cmp
adc
adc
inc
dec
fs
lods
or
adc
sbb
outs
push
stos
jge
es
mov
fild
(bad)
xchg
in
cmp
loopne
rol
and
in
mov
in
cwde
jecxz
cmp
div
push
add
inc
addr16
xchg
out
sbb
adc
fwait
sub
pop
xchg
adc
dec
cli
lds
mov
add
push
add
xor
pop
mov
int
and
mov
xchg
bound
push
push
mov
outs
jecxz
ror
call
xchg
inc
clc
pop
mov
cwde
ss
cmps
push
fwait
lea
xor
or
mov
outs
sub
xchg
je
hlt
mov
icebp
jmp
xchg
out
adc
es
jo
jle
clc
clc
lods
jbe
movs
pop
push
arpl
fild
push
cld
and
mov
dec
aaa
inc
xchg
(bad)
mov
add
aas
pop
sub
sbb
cmp
mov
pusha
bound
dec
or
leave
(bad)
jno
or
pop
movs
test
shl
rcr
add
xor
fcomp
jns
mov
aaa
loope
cmp
addr16
sub
test
xchg
mov
jne
sbb
clc
xor
les
clc
fcom
enter
sahf
ins
mov
call
mov
daa
and
repz
xchg
popa
mov
sbb
leave
addr16
pop
sti
xor
or
dec
cmp
sbb
jp
xchg
xor
fisubr
dec
pop
(bad)
cmps
jmp
mov
xor
icebp
mov
mov
fild
adc
jl
(bad)
pop
adc
inc
loopne
shl
mov
cli
mov
mov
pop
mov
mov
mov
hlt
sbb
pusha
xchg
add
lds
and
sub
mov
cmp
clc
mov
add
ficom
xchg
add
in
push
jb
data16
xchg
cmp
pop
ins
jno
sub
cmc
fldcw
mov
dec
popa
cmp
dec
std
dec
lds
arpl
test
xchg
or
scas
call
mov
inc
inc
fs
sbb
mov
das
das
dec
add
rcl
push
retf
push
sti
dec
inc
push
aad
jae
add
mov
mov
rcr
fnstcw
cs
cwde
jl
xchg
push
add
mov
jns
add
push
icebp
retf
xlat
outs
ja
int3
pop
fist
std
sub
(bad)
gs
mov
push
loop
cli
retf
lea
mov
fs
mov
iret
pop
sub
dec
sub
inc
jns
dec
clc
lods
call
lods
outs
and
das
adc
add
mov
adc
jg
cdq
repz
xor
rcl
sbb
daa
int3
sub
mov
xchg
mov
mov
push
inc
lods
xchg
in
adc
repz
loope
pop
jge
scas
nop
repnz
cmp
mov
and
xchg
retf
shl
(bad)
lods
aad
fbld
mov
dec
add
sbb
repnz
xor
jl
int
mov
pop
cs
(bad)
xchg
sub
ret
inc
dec
xor
adc
fdiv
fwait
or
jmp
inc
push
mov
mov
or
(bad)
adc
adc
(bad)
push
add
das
push
test
sbb
adc
into
mov
nop
retf
sahf
push
call
push
or
or
lods
adc
mov
sbb
adc
inc
push
dec
in
mul
inc
pop
cmp
sbb
dec
dec
dec
in
mov
pop
pop
pop
xchg
fild
lods
out
clc
jo
imul
loopne
stc
ins
xor
retf
mov
mov
sahf
xor
in
pop
inc
push
push
ins
jge
sub
jle
cld
mov
push
mov
es
xor
push
dec
sbb
or
fst
push
into
fimul
mov
les
sti
push
or
dec
loope
enter
and
das
ins
jbe
jno
cmps
add
and
jns
imul
test
cmp
lea
(bad)
test
sbb
xor
sbb
mov
dec
pop
xchg
sub
lea
call
jmp
inc
dec
sbb
fsub
xchg
mov
cmps
pushf
ss
inc
test
mov
call
mov
shl
xlat
repnz
cdq
inc
mov
ins
test
and
cmp
enter
std
imul
mov
(bad)
sbb
cmp
push
pop
ret
inc
mov
into
xor
ins
xor
or
or
adc
hlt
inc
xlat
jg
cmp
clc
test
adc
push
daa
cmc
mov
les
pop
push
popf
mov
jmp
test
push
jle
jns
add
ret
add
pop
push
pop
popa
mov
xlat
std
mov
xor
jmp
push
popa
xlat
xor
pop
sub
mov
dec
pusha
and
dec
add
pop
mov
pop
jecxz
outs
js
(bad)
pop
cmp
stos
dec
jne
push
xchg
sahf
jp
ror
xor
dec
rol
dec
retf
dec
pop
popa
jl
rol
fs
add
ds
pusha
or
repnz
bound
cs
jb
and
sub
pusha
pop
jae
push
in
xchg
mov
xchg
rol
in
adc
imul
enter
lods
cli
je
sub
pusha
outs
je
rcl
push
mov
cmp
xchg
xchg
test
add
les
cmps
mov
fsubr
xchg
mov
shl
xchg
xchg
jo
mov
ins
mov
int3
jnp
jne
cmp
inc
int
lea
and
clc
aaa
dec
or
(bad)
(bad)
xor
dec
(bad)
aaa
frstor
or
xor
jg
lock
inc
mov
cmc
xchg
sub
fist
mov
cwde
sub
mov
div
and
(bad)
push
cmc
clc
hlt
adc
jnp
push
ins
push
outs
mov
sahf
retf
inc
fwait
rcr
ins
inc
ja
push
mov
pop
pop
ret
adc
retf
inc
mov
dec
sub
je
sub
dec
test
mov
cmp
pop
jbe
rcr
fcom
cld
xlat
inc
lahf
adc
adc
pushf
aad
xor
push
outs
data16
fcom
jg
jmp
jg
cmp
scas
dec
xchg
push
fsubrp
push
push
jg
fcmovnu
adc
ins
sub
jns
push
mov
mov
scas
xchg
mov
rol
mov
out
mov
push
add
pop
xor
push
outs
pop
scas
or
mov
or
and
adc
call
lahf
mov
cmp
mov
out
retf
adc
dec
ret
xchg
dec
xor
out
in
xchg
xchg
(bad)
ss
imul
ss
lods
jle
inc
sahf
and
movs
fdiv
jmp
pusha
fs
sbb
xor
adc
pop
aaa
pop
jbe
sub
sar
xchg
jmp
cwde
ja
or
and
sbb
sub
cmps
inc
sbb
inc
call
test
test
pop
in
sar
fnstcw
seto
mov
adc
in
rcl
xchg
jge
aad
push
jmp
leave
mov
and
jecxz
jb
adc
mov
cwde
inc
add
sti
cmp
in
fmulp
dec
ss
aas
hlt
jbe
push
rol
ror
bound
cmp
push
ret
push
mov
in
mov
inc
push
ret
repz
movs
pushf
iret
cmp
sub
movs
shr
cmp
fisttp
adc
(bad)
cmp
pop
jp
stos
jno
imul
fs
mov
cmp
ficomp
add
mov
call
or
jbe
xor
out
aas
or
add
pop
sub
(bad)
lods
jp
dec
or
aad
dec
adc
xchg
cli
stos
push
not
(bad)
mov
jecxz
outs
push
lods
in
mov
xchg
pop
in
aas
or
int
bound
mov
(bad)
and
ficom
clc
int
ror
pop
out
mov
imul
in
adc
xor
icebp
and
gs
cmps
jmp
ja
cmp
jge
ds
mov
inc
mov
mov
jns
jo
js
mov
stc
pushf
push
xchg
out
jmp
push
push
lods
add
push
ds
mov
sbb
dec
enter
pop
test
test
sub
movs
push
lahf
test
adc
repnz
(bad)
fidivr
sub
sub
jns
jo
pop
pop
mov
(bad)
fadd
sub
lea
xchg
bound
out
repz
jmp
xor
pop
imul
hlt
pop
jno
es
jecxz
in
jmp
out
test
mov
fbstp
inc
nop
adc
xor
jge
stos
mov
scas
in
and
test
sbb
inc
pop
jge
popa
stos
sub
ret
xlat
cmp
jo
cmc
pushf
mov
outs
rcr
pop
xor
call
aaa
mov
ins
mov
in
cld
adc
les
gs
and
sbb
icebp
sub
ret
push
mov
mov
push
pop
dec
pushf
xor
xor
cld
inc
ror
mov
in
mov
fs
hlt
jge
or
jne
je
sub
mov
das
mov
mul
dec
mov
cmp
jo
dec
cdq
inc
jmp
pop
nop
sub
lds
cmc
adc
stos
dec
iret
jne
push
sub
(bad)
jbe
and
fistp
ins
mov
jle
call
adc
dec
push
jnp
and
fcomp
fld
cmps
push
inc
popa
addr16
mov
loop
movs
(bad)
aas
adc
fidivr
mov
adc
ja
lahf
and
pusha
cmp
(bad)
(bad)
(bad)
addr16
rol
mov
xchg
adc
je
pshufw
inc
sub
and
addr16
jb
dec
jmp
sub
adc
movs
out
add
call
popa
jb
add
mov
xchg
adc
mov
push
test
sub
inc
add
xor
push
ja
imul
gs
loop
shr
push
and
sar
dec
jge
mov
fst
push
aam
dec
mov
pushf
mov
or
mov
test
lahf
(bad)
imul
xchg
int
cmp
ret
pushf
leave
imul
push
or
stc
fdivrp
or
add
sub
adc
xor
push
and
xchg
adc
cli
cdq
pop
inc
mov
shl
or
(bad)
or
aad
into
sbb
fld
(bad)
sti
sbb
push
jp
neg
test
es
xor
mov
jo
hlt
cmp
dec
mov
jns
fwait
add
xlat
lods
jbe
retf
aad
cmp
sar
cmp
jmp
pop
sahf
aaa
xor
retf
xor
stos
sar
loope
jbe
loop
pop
daa
dec
repz
sub
fisttp
xchg
stos
std
add
mov
mov
test
pop
jae
mov
leave
push
add
jmp
shr
ja
or
adc
aaa
lds
fwait
cmps
iret
jo
add
outs
mov
push
mov
es
xchg
add
aad
cmp
lods
(bad)
leave
mov
or
nop
xor
jno
xor
push
pop
mov
xchg
mov
popa
xor
(bad)
clc
loopne
lea
xor
sahf
(bad)
popf
stos
in
jecxz
inc
inc
sbb
xor
js
xor
adc
pop
in
pop
push
pop
xchg
inc
xor
movs
and
cmp
pusha
push
xchg
cs
cmp
arpl
push
add
push
cmps
mov
leave
jns
push
mov
add
push
arpl
pop
aas
xor
xchg
jmp
mov
fild
xor
xchg
leave
xchg
fild
or
push
fwait
test
inc
jmp
pop
adc
stos
ss
jmp
(bad)
inc
aad
std
xlat
push
or
cdq
data16
sahf
jmp
ins
push
inc
sbb
sbb
inc
xlat
inc
cmps
push
data16
push
xor
test
jae
xchg
lods
pop
xlat
fs
pop
push
and
mov
cmp
push
leave
jae
pop
mov
jle
int3
daa
ret
repz
call
fisttp
retf
mov
inc
loop
add
movs
mov
xor
cmps
xor
jle
les
test
xor
mov
and
jbe
icebp
ret
cdq
mov
add
arpl
or
test
cs
data16
mov
add
or
pop
test
stos
xor
cwde
xor
int
jle
push
sub
into
fwait
mov
cmps
(bad)
das
sub
inc
sub
sbb
xchg
cmps
mov
cmps
in
push
push
out
rol
fbstp
pop
imul
jmp
outs
(bad)
push
imul
jae
imul
aaa
mov
push
add
push
in
sahf
pop
std
add
pop
out
push
jbe
inc
xor
nop
shr
xchg
lods
(bad)
push
xchg
test
add
sbb
iret
mov
fs
aaa
hlt
ret
xor
(bad)
jp
ja
push
mov
add
int
(bad)
outs
test
xchg
inc
call
or
mov
pop
xor
out
ins
push
fadd
into
mov
shl
jo
push
dec
inc
sub
or
fcomp
cmp
in
nop
cli
push
xchg
cmp
std
sti
push
adc
pop
sbb
out
or
adc
ss
mov
icebp
sar
fisubr
and
pop
push
scas
scas
sar
repz
nop
pop
xor
adc
cmc
xchg
leave
jae
nop
stos
rcl
data16
xor
xor
add
scas
loop
xchg
jbe
sbb
and
(bad)
sub
test
rcr
mov
ins
mov
jbe
sbb
or
adc
lock
cmp
sub
mov
fwait
mov
addr16
and
js
or
or
sub
leave
rcl
movs
(bad)
repz
cmp
jle
or
out
push
ret
repz
mov
int
jge
xor
in
clc
mov
sbb
fist
aad
cli
pushf
inc
or
jecxz
jb
repz
cmp
pushf
lods
xchg
or
pop
inc
xchg
std
out
imul
adc
test
mov
(bad)
lods
push
rcl
sub
pushf
stc
adc
jecxz
push
and
jg
push
xor
sub
push
mov
cmc
lahf
add
jbe
mov
bnd
jo
mov
(bad)
pop
and
pop
into
push
jno
or
ds
xor
adc
push
je
jnp
retf
jmp
rcl
leave
pop
sbb
jbe
rcl
lahf
pop
push
xor
test
push
cmps
or
mov
jae
(bad)
aas
das
sbb
jo
nop
jmp
mov
push
sahf
gs
add
popf
jecxz
outs
inc
iret
ret
mov
adc
xor
xchg
mov
jno
jmp
jb
js
iret
jmp
ss
sbb
adc
jp
mov
std
cmp
or
jnp
mov
sub
xchg
rcl
sar
popa
inc
sbb
and
das
cmp
fsubr
out
inc
leave
dec
std
inc
pop
repz
pushf
adc
mov
aas
int3
bound
pop
cmp
int3
mov
aam
jge
xchg
adc
repz
sub
xchg
jo
cs
xor
cmp
mov
daa
xchg
jmp
gs
mov
mov
push
inc
xor
dec
xlat
dec
loop
addr16
and
pop
pop
pop
inc
add
ret
je
fdivr
pop
cmps
add
or
inc
xchg
(bad)
mov
inc
js
push
push
and
outs
pop
rol
daa
cmp
das
mov
aaa
fdiv
out
fsubr
retf
out
test
mov
mov
pusha
pop
mov
aam
sbb
xchg
push
aad
les
sub
es
mov
mov
add
arpl
ret
pop
push
and
mov
bound
push
push
shl
arpl
out
push
sub
retf
xchg
mov
jne
aam
loopne
cmp
push
mov
xchg
xchg
movs
call
sbb
aad
cdq
jp
inc
ins
dec
(bad)
push
xchg
in
cmp
jmp
aad
data16
lods
ss
push
int
(bad)
pop
fchs
mov
in
(bad)
xor
add
push
outs
mov
mov
cmp
mov
xchg
pop
xor
dec
adc
sbb
push
add
dec
ins
adc
xlat
add
shr
rep
out
inc
dec
fldenv
inc
ja
push
je
cmp
xchg
mov
or
sbb
or
xchg
xchg
xor
mov
repz
jmp
outs
rcl
mov
xchg
cwde
movs
lods
jp
ins
std
out
std
fdivrp
sbb
out
and
add
mov
leave
aad
cmp
aaa
fcomp
fst
mov
sbb
mov
sar
jecxz
test
lock
pop
add
add
jne
mov
mov
jns
imul
jno
lds
pop
push
mov
xor
adc
lock
jmp
mov
jmp
inc
dec
and
add
int3
fdecstp
xchg
pop
add
ds
ins
xchg
push
in
or
repnz
cmp
mov
adc
(bad)
loop
jmp
pop
test
jle
mov
inc
inc
cmc
xchg
imul
ret
cmp
cdq
mov
cmp
in
test
sbb
jbe
sbb
jmp
jecxz
adc
mov
leave
shl
loopne
test
sub
sbb
test
push
stc
sbb
movs
push
sbb
inc
jmp
add
mov
popf
scas
scas
daa
or
xor
jmp
xor
jbe
lds
(bad)
aaa
xor
cdq
(bad)
sub
les
adc
mov
inc
dec
outs
adc
sub
cdq
adc
fwait
pop
ret
pop
mov
sbb
cmp
daa
repnz
pushf
pop
out
daa
xor
pop
cli
add
xor
add
and
xor
movs
je
and
ja
inc
mov
add
test
mov
mov
sbb
jo
push
sti
pop
test
data16
cli
xchg
add
stos
cmps
enter
inc
xlat
ret
loope
pop
dec
push
out
mov
jne
retf
test
push
sub
mov
pop
mov
inc
mov
jge
sbb
(bad)
xchg
jle
cmp
mov
xor
popf
mov
inc
push
bound
rcr
or
mov
and
nop
addr16
inc
pusha
push
je
fstp
xor
ficomp
out
cdq
inc
je
lock
iret
aaa
mov
and
int
and
ins
ficomp
push
cli
clc
cmc
lahf
sahf
inc
jp
ins
test
dec
or
sub
popa
adc
enter
shl
shr
fcomp
dec
jl
lds
enter
sub
retf
mov
movs
cmp
out
pop
fnstcw
loop
mov
pop
and
adc
rol
shl
test
(bad)
loope
mov
inc
xlat
retf
pop
cdq
sbb
pop
xor
mov
push
icebp
jae
mov
or
cmc
out
and
std
sti
(bad)
lock
push
xor
mov
xor
jl
in
fadd
call
pop
lahf
loopne
sahf
mov
and
sbb
pusha
mov
iret
stc
in
inc
inc
rcl
cwde
push
dec
pop
and
mov
call
jb
adc
fstp
push
or
nop
xchg
push
mov
into
sub
pop
xchg
and
xchg
scas
jno
int3
adc
lss
sbb
mov
jbe
nop
mov
cs
inc
(bad)
mov
push
arpl
sub
or
mov
lds
mov
xchg
movs
outs
ret
std
pusha
ret
inc
jg
or
jo
jl
and
jae
adc
sbb
mov
test
in
mov
or
push
ds
or
and
dec
das
aas
pop
jne
loope
sbb
js
xlat
mov
xchg
or
retf
push
arpl
lods
(bad)
adc
and
push
xchg
lahf
cmp
sahf
fcom
pop
lods
pop
nop
lock
fcomp
jmp
imul
stc
int
das
add
lods
dec
in
push
cmp
or
imul
jnp
ror
sub
cmp
rcl
xchg
dec
xchg
sbb
loopne
sar
add
cld
fs
bts
adc
push
and
adc
das
mov
popa
neg
jno
xchg
rcl
rcl
(bad)
adc
int
cmc
aaa
pop
sahf
aaa
(bad)
loopne
out
lods
push
repz
ds
stos
daa
stos
aaa
sub
or
cwde
aas
sbb
fwait
(bad)
lock
ficom
repnz
jb
fbstp
dec
add
adc
mov
pop
inc
out
stos
neg
push
add
inc
add
fs
outs
je
lahf
push
nop
in
cmps
xchg
imul
and
in
jmp
or
in
and
cmp
xchg
jae
mov
popa
adc
mov
mov
inc
fs
push
xchg
das
aaa
xchg
lahf
add
das
xchg
pop
mov
lock
arpl
loopne
pushf
sbb
je
(bad)
in
je
movs
imul
push
lods
dec
mov
mov
repz
arpl
std
jne
mov
cmp
pop
dec
in
into
stos
and
leave
mov
push
addr16
aas
mov
push
inc
nop
mov
cmp
jae
stc
xchg
imul
push
sar
and
mov
dec
pop
cmp
shr
sub
add
pop
push
xchg
cmp
ins
gs
mov
rcr
loope
xor
mov
std
test
movs
retf
inc
addr16
pop
mov
fucomi
mov
add
push
test
and
test
cdq
int
xchg
and
push
pop
mov
clc
sti
pop
dec
dec
loop
scas
dec
hlt
adc
inc
ficom
out
and
pop
iret
call
fs
std
fsubr
lds
test
shl
retf
mov
jge
jo
jg
and
mov
call
xchg
dec
lea
retf
imul
push
pop
jae
dec
add
sbb
adc
and
test
pop
dec
xchg
or
dec
mov
sub
jns
inc
sahf
arpl
popf
rcr
mov
cmps
cli
jle
imul
test
add
inc
scas
test
or
xor
cmp
xlat
add
ss
jbe
mov
pop
enter
div
dec
push
lods
sbb
sbb
pushf
gs
xor
fldenv
mov
js
push
ja
inc
dec
sbb
outs
fsubr
and
sbb
sub
jb
add
push
pop
(bad)
rol
leave
loopne
pop
inc
jbe
stos
adc
inc
and
sbb
not
push
jne
dec
push
pop
xor
das
test
inc
mov
(bad)
fdiv
sbb
adc
inc
adc
push
push
push
out
xor
cwde
adc
inc
or
xchg
and
inc
cwde
cmps
movs
mov
idiv
in
push
adc
repz
mov
ror
fs
xor
xor
imul
xor
repnz
jmp
add
or
dec
dec
or
frstor
in
test
fdiv
(bad)
dec
push
pxor
(bad)
sbb
push
sbb
out
in
stos
inc
ja
ret
fld
in
adc
out
js
jp
push
adc
adc
daa
or
xor
add
std
adc
clc
fistp
cmp
(bad)
xor
fcom
pop
mov
repnz
mov
sbb
adc
fwait
ins
mov
and
adc
pcmpeqb
cmp
gs
int
or
je
or
int
nop
mov
lock
into
leave
xor
mov
pop
mov
lahf
adc
cbw
test
cmp
xchg
mov
lods
lods
mov
mov
popf
dec
fmul
xchg
mov
mov
lea
cmp
cmp
cmps
(bad)
loopne
inc
push
jp
pop
pop
test
sbb
sub
add
pop
or
pop
inc
or
popf
cmp
cmp
fpatan
xchg
ins
mov
sub
mov
push
jl
dec
xchg
(bad)
push
daa
and
xor
test
movs
ja
mov
pop
movs
ja
xor
mov
mov
sti
and
xchg
jmp
call
ja
data16
repz
les
dec
and
test
in
or
sub
stos
sub
neg
gs
repnz
scas
jo
je
iret
inc
imul
inc
or
mov
das
cmp
push
dec
sub
adc
mov
xchg
push
and
cld
jne
mov
dec
inc
sar
xor
and
mov
add
ja
adc
stos
mov
ins
add
mov
sbb
or
gs
in
jmp
inc
xlat
out
mov
xor
mov
mov
jnp
stos
and
stos
loopne
xchg
ror
push
loope
pop
fistp
mov
mov
and
push
das
push
jns
neg
jecxz
push
gs
lahf
pusha
in
sbb
jbe
and
sbb
xchg
daa
repz
push
(bad)
inc
lock
sub
jne
mov
push
and
test
xchg
xor
rcl
fst
outs
fst
mov
cmp
ret
cmp
outs
xchg
or
mov
jne
daa
fiadd
cmps
cmp
mov
and
fdivr
mov
je
fcompp
jo
dec
xchg
mov
in
mov
pusha
add
cwde
ja
or
xchg
pop
add
mov
test
or
(bad)
xor
retf
call
pop
add
dec
mov
and
sbb
ins
sub
repnz
cmp
popa
mov
mov
jno
mov
push
add
out
dec
loop
push
movs
ret
cmp
xor
xor
pushf
jns
mov
pop
test
sbb
sbb
fcom
xchg
shl
popa
xor
adc
jbe
sub
test
aaa
scas
jne
adc
pop
js
fidivr
rcl
leave
mov
std
and
test
scas
retf
mov
inc
cmp
xor
mov
adc
(bad)
mov
pushf
jmp
test
and
(bad)
je
sbb
mov
into
sbb
adc
data16
les
cmp
xchg
loop
or
push
addr16
leave
cmp
fwait
jmp
mov
fs
or
stos
push
sub
mov
cmps
js
addr16
movs
aas
cdq
cmp
sbb
pop
mov
xchg
leave
mov
in
aaa
xor
sbb
push
cmp
and
in
in
aaa
clc
or
jmp
mov
arpl
call
pop
lock
cwde
mov
dec
das
imul
div
or
push
xchg
push
shl
pop
data16
add
sahf
sahf
xchg
or
(bad)
sti
fnstcw
xchg
and
cmp
stc
neg
push
loop
in
cs
jns
rcr
fsub
loopne
leave
xor
mov
push
call
jno
cld
mov
fadd
repz
pop
es
std
mov
mov
push
jecxz
mov
fwait
push
into
dec
and
pusha
enter
mov
xchg
test
add
sbb
movs
xrelease
jl
jge
in
xchg
push
fstp
sub
xchg
cld
dec
or
test
adc
jnp
fadd
popf
push
add
mov
push
nop
sbb
jbe
popa
cdq
jbe
pop
faddp
cmps
dec
push
mov
test
pop
or
das
inc
push
inc
mov
push
jmp
or
mov
nop
(bad)
popf
imul
(bad)
and
leave
ret
fimul
mov
movs
fwait
bound
adc
das
and
stos
shl
xor
push
xor
sub
and
fucomp
jb
aas
outs
push
retf
sub
push
dec
inc
push
jg
mov
cmps
add
cmp
aam
inc
dec
retf
mov
mov
push
fisub
rcr
mov
(bad)
pop
adc
mov
loope
adc
dec
jnp
fdivr
mov
mov
out
and
push
(bad)
rol
pop
cli
jb
mov
push
in
ror
shr
fisttp
jmp
push
mov
mov
mov
js
cmp
lds
and
nop
test
dec
jmp
dec
retf
add
clc
clc
nop
push
lods
dec
int
jecxz
inc
adc
jmp
pop
push
lods
lds
cmc
push
push
arpl
(bad)
cmp
pop
jp
in
mov
call
mov
cs
sbb
add
xchg
sbb
inc
das
out
shl
add
mov
add
sub
inc
dec
mov
cdq
fdivr
imul
inc
pop
mov
outs
ret
call
jmp
repz
and
mov
jle
leave
fstp
cmp
shl
call
hlt
dec
pushf
retf
pop
jae
mov
mov
ins
dec
pop
aaa
jg
jmp
fimul
ret
es
xchg
ret
mov
push
or
fimul
pushf
jle
cmp
fdivr
loopne
call
jne
add
sub
out
adc
sbb
mov
push
int
(bad)
das
and
jecxz
int
sub
cdq
mov
not
mov
xchg
push
mov
add
clc
imul
and
lock
dec
mov
mov
into
pusha
sub
mov
cwde
retf
or
outs
mov
(bad)
int3
aam
aaa
push
mov
cdq
cs
movs
and
or
inc
sahf
ins
pushf
out
sbb
adc
mov
clc
imul
dec
pop
imul
repnz
xchg
add
mov
into
adc
nop
mov
rcl
add
movs
(bad)
cmps
test
cmp
xchg
rcl
nop
dec
add
(bad)
mov
repz
mov
jecxz
aam
lea
cdq
or
repz
ret
add
sub
mov
jnp
call
popf
adc
jmp
xchg
pop
cs
mov
push
clc
movs
xchg
scas
xchg
mov
call
xchg
out
jmp
clc
jmp
cs
rcr
sub
xor
jmp
popa
xor
sahf
mov
in
add
(bad)
cs
(bad)
sub
or
xor
lahf
pop
mov
(bad)
hlt
push
jg
jnp
ins
arpl
add
lods
mov
xor
cmp
cmps
scas
mul
(bad)
and
dec
jecxz
adc
push
jge
mov
inc
pusha
ds
mov
ins
jle
fld
(bad)
pop
aad
jle
in
mov
repnz
push
push
pop
mov
pop
and
fmul
test
and
push
mov
lock
lahf
mov
mov
inc
movs
sub
sub
xor
icebp
push
mov
cmp
and
xor
xor
movs
and
cmp
iret
cmp
jb
jp
fld
shr
ret
push
push
jmp
add
out
push
push
xlat
pushf
sar
cs
ds
xchg
popf
inc
jmp
cli
dec
or
rcr
push
fistp
pop
push
fst
cmps
sti
out
jl
sahf
pop
xchg
mov
out
mov
pop
xchg
ins
adc
add
inc
and
adc
loope
ss
or
lods
(bad)
and
out
pop
mov
call
int3
fsubp
mov
lds
dec
ffree
mov
cmp
mov
stc
jmp
fcomp
or
scas
fld
sbb
aaa
adc
xor
(bad)
(bad)
push
cdq
adc
sub
mov
pop
movs
xor
mov
movntq
out
ss
ss
xchg
inc
jb
gs
or
xchg
stos
ja
mov
sub
mov
mov
push
jmp
stos
inc
or
cmp
mov
cld
idiv
xlat
js
arpl
sbb
enter
mov
cs
or
fs
jb
and
xchg
jmp
in
sbb
adc
bound
jno
xchg
sub
int
jge
fcmovne
push
xchg
push
enter
xchg
inc
fsubr
or
pushf
jnp
das
push
loopne
dec
cmp
mov
daa
fidivr
dec
arpl
jmp
mov
mov
pop
jg
ss
jmp
bound
scas
clc
es
adc
cmp
(bad)
into
jmp
jmp
pop
call
ror
rcr
add
mov
mov
xchg
test
mov
mov
outs
es
and
test
div
aad
js
mov
stc
mov
xor
out
inc
rcr
shl
mov
fild
pop
pop
aad
mov
lahf
retf
sub
mov
sbb
clc
aaa
lock
fnstcw
scas
add
(bad)
aas
push
(bad)
stc
sub
ds
in
int3
xchg
leave
int
pop
xchg
adc
daa
stc
scas
lds
xchg
mov
rol
in
retf
mov
jp
inc
out
(bad)
mov
sub
(bad)
shl
mov
mov
sbb
add
or
loopne
or
jmp
adc
fist
sbb
mov
sbb
mov
pop
das
sub
xchg
mov
ja
mov
repz
push
clc
jl
add
adc
cld
jb
jmp
in
dec
push
punpckhwd
xchg
mov
popa
scas
xchg
pop
ror
and
es
pop
xchg
cmps
sti
ds
inc
adc
out
push
iret
ja
sbb
arpl
or
mov
fcomp
mov
add
les
in
inc
aas
jecxz
pop
jnp
into
pop
(bad)
shl
aas
jno
mov
cdq
sti
dec
dec
(bad)
loopne
jae
jmp
dec
mov
mov
add
js
aam
movs
fmul
mov
sub
ins
bound
mov
pop
lods
mov
cmp
pop
lahf
fistp
std
sbb
cmp
jg
pop
rcl
add
push
adc
in
xchg
movs
mov
mov
dec
inc
push
(bad)
call
xchg
and
sub
cwde
clc
ins
(bad)
mov
mov
pop
fcomp
pushf
xchg
leave
or
sar
int3
jge
les
jle
test
(bad)
stc
mov
shl
ret
mov
pop
mov
(bad)
or
lock
xchg
jno
out
cwde
mov
sub
(bad)
in
push
icebp
and
int3
jne
je
fwait
add
int
jnp
xchg
inc
jnp
sbb
xchg
out
loope
or
and
(bad)
mov
scas
cmp
mov
sti
ins
mov
add
dec
fnstsw
shr
push
or
xchg
add
pop
xchg
cdq
sub
cli
shl
adc
xor
dec
inc
push
push
mov
call
iret
fwait
dec
aaa
fsubr
sub
cmp
dec
fucomp
pop
sub
add
push
jg
mov
add
mov
push
ds
sub
stos
sub
adc
aad
in
imul
inc
jp
sub
xchg
in
scas
xor
adc
nop
adc
jae
sbb
les
xor
mov
lds
sub
sar
ins
pop
pop
inc
outs
jge
test
idiv
mov
mov
mov
pop
pop
stos
stc
jb
scas
mov
rcl
inc
scas
fs
test
repz
xor
jb
push
daa
adc
rol
repnz
add
shl
inc
inc
adc
jmp
ret
dec
shl
js
xor
jl
dec
cld
bound
push
mov
in
pop
js
out
xor
add
out
cmp
adc
jmp
dec
xchg
pop
aam
inc
inc
pop
call
mov
jle
cwde
push
xchg
dec
jmp
std
pop
test
sbb
test
adc
cld
pop
mov
pusha
xor
mov
pusha
cmc
stos
jnp
ror
fadd
imul
fdivr
pop
je
sub
jae
mov
test
pop
aam
mov
or
(bad)
loopne
pusha
mov
xlat
js
in
or
jp
cwde
retf
(bad)
stos
ret
sbb
loope
and
call
sahf
fcmovnb
stc
fsubp
arpl
cli
test
int3
adc
test
jno
ror
add
adc
dec
std
jle
mov
push
(bad)
push
leave
mov
(bad)
mov
das
nop
sub
outs
stos
adc
repnz
mov
movs
pop
neg
aas
addr16
and
inc
mov
push
movs
loopne
loopne
inc
cmps
rcr
mov
jle
jnp
stos
pop
(bad)
call
stos
data16
xchg
or
in
fdivr
cmp
and
cli
sub
dec
and
cmp
sbb
sahf
fisttp
pusha
ret
jo
int
xchg
add
xchg
loopne
adc
mov
mov
add
stos
cwde
mov
push
test
cmps
mov
sar
adc
repnz
not
cs
stos
push
dec
bound
jl
adc
jmp
aas
rcl
adc
xchg
jge
nop
adc
push
inc
arpl
xor
clc
pop
cwde
call
out
jns
sahf
scas
fwait
rcl
out
ror
inc
xchg
jl
in
test
push
jnp
outs
daa
push
jbe
adc
in
mov
js
clc
mov
fdiv
fs
popa
ret
or
mov
arpl
mov
mov
adc
xor
push
dec
mov
sub
jg
aam
bound
mov
mov
daa
fdivr
idiv
pop
in
ltr
dec
and
dec
(bad)
mov
das
pop
ins
push
mov
dec
imul
imul
add
mov
js
popf
cmp
pop
(bad)
rcl
jmp
add
lds
inc
out
(bad)
aas
sbb
sbb
dec
dec
jae
sub
adc
dec
sbb
mov
shr
cmps
dec
out
adc
cwde
sbb
inc
xchg
movs
je
jge
xchg
daa
leave
movs
cmp
pop
mov
call
(bad)
inc
fld
mov
lods
xchg
ins
inc
xchg
out
or
scas
in
cmp
and
or
lds
xlat
inc
outs
xor
out
data16
cmps
cmp
dec
in
arpl
sbb
lock
pop
lods
cmp
clc
scas
xor
and
or
adc
or
pop
jmp
nop
aam
or
add
cmps
jno
push
mov
inc
lods
pop
lds
xor
push
xor
lds
mov
jg
fdiv
mov
xor
push
mov
ss
ftst
sub
sbb
cwde
pop
loope
repnz
push
call
pop
fisubr
shl
jmp
and
cs
sbb
mov
clc
(bad)
dec
je
(bad)
mov
jge
test
fistp
out
pop
shl
outs
icebp
ds
mov
icebp
sub
fist
(bad)
in
es
out
test
add
ret
repnz
sub
shl
cs
mov
mov
push
jae
lods
xor
lods
leave
push
out
cwde
std
mov
rol
enter
cmc
lds
or
mov
push
popa
adc
stc
das
xchg
mov
stc
inc
gs
out
mov
ja
hlt
jb
aam
jmp
ret
or
lods
adc
das
add
popa
sbb
out
push
nop
das
movs
inc
ror
aaa
and
mov
adc
mov
and
(bad)
pop
in
xchg
stc
out
hlt
and
cli
das
fucom
xchg
hlt
lods
adc
ret
jg
pop
xor
xchg
fldenv
lock
sar
popa
mov
and
push
out
push
aad
(bad)
aam
std
sbb
retf
stc
test
sahf
cmc
es
mov
pop
in
sbb
sbb
and
mov
cmp
mov
pop
inc
or
adc
imul
(bad)
fdivr
adc
xchg
popa
cli
stos
in
push
mov
adc
lods
mov
mov
int3
imul
inc
and
retf
rcl
ret
cmp
das
out
cmps
jb
cmps
xor
push
adc
and
mov
cs
dec
xor
cli
loope
mov
movs
xor
fwait
arpl
loope
out
(bad)
sub
pop
fldcw
pushf
dec
cld
xchg
jae
lods
jmp
mov
mov
pop
sbb
dec
jl
lahf
xchg
mov
dec
retf
xchg
xchg
daa
xchg
(bad)
cli
imul
(bad)
(bad)
(bad)
in
cmp
push
int3
xchg
lods
jne
fisttp
pop
and
mov
jle
cmp
rol
pop
out
call
movs
fld
xor
sti
add
shl
leave
sahf
pop
les
dec
push
xchg
mov
lods
cmc
loope
add
push
aas
aam
push
fimul
iret
mov
cmp
mov
inc
jns
outs
sti
dec
jno
call
pop
dec
jne
mov
cmp
xchg
mov
in
pop
jne
int
add
or
js
pop
push
jns
fisub
dec
jecxz
retf
xchg
stos
sbb
shl
test
xlat
(bad)
(bad)
aas
or
xor
cmp
xchg
push
ins
jb
push
mov
cmp
xchg
ret
mov
(bad)
dec
mov
fwait
lds
jmp
mov
scas
adc
sti
call
cdq
mov
mov
mov
push
enter
test
mov
fld
jmp
adc
js
mov
and
call
dec
icebp
mov
and
es
or
es
retf
cs
fist
jl
aam
and
retf
or
pop
int3
jmp
(bad)
(bad)
sbb
mov
mov
pop
cdq
mov
pop
jne
ret
sub
mov
dec
sub
cs
mov
jge
jnp
mov
xchg
mov
mov
xchg
test
clc
mov
lea
loop
cmc
fimul
movs
jnp
mov
and
dec
fisubr
loope
adc
test
fist
das
cmp
aad
call
in
aad
daa
adc
jae
fucomi
push
fld
mov
lock
ja
dec
jb
mov
adc
cmps
call
mov
daa
das
int3
les
aam
inc
in
pop
adc
mov
gs
fdiv
pop
bnd
bnd
inc
out
js
(bad)
(bad)
fisub
popa
jne
xchg
pop
sub
adc
fild
mov
mov
mov
jb
mov
enter
(bad)
(bad)
movs
int
ja
cwde
sub
push
bound
xchg
movs
mov
jmp
or
aas
imul
jnp
cmp
sub
adc
repz
xchg
int3
inc
and
mov
movs
sbb
int
inc
repz
(bad)
jmp
sub
xor
imul
movhps
mov
pop
or
sub
fwait
test
stos
jo
jecxz
xchg
gs
jmp
mov
or
fadd
mov
push
sub
jns
jnp
pop
xor
sub
jns
scas
mov
dec
or
dec
daa
clc
mov
(bad)
dec
pop
dec
jne
mov
mov
xor
xchg
pop
inc
or
scas
inc
inc
outs
mov
adc
inc
call
lds
cli
cli
aam
aas
adc
pop
jg
pop
mov
mov
fisubr
mov
jnp
out
dec
or
sar
fisubr
xchg
pushf
popa
out
out
bswap
mov
jbe
push
nop
add
aam
jae
int
or
xchg
pop
sbb
xor
or
add
gs
inc
sub
mov
or
xchg
jg
mov
dec
outs
jb
in
(bad)
fnstsw
mov
aas
jg
mov
dec
shr
test
inc
xor
mov
dec
shl
or
dec
mov
adc
std
or
cwde
cmp
xchg
push
inc
xor
xchg
cld
mov
dec
jp
mov
jns
mov
mov
push
popa
mov
xor
push
scas
lods
fld
ror
aaa
pushf
retf
mov
sbb
xor
inc
cmp
cli
aas
jne
rcr
sub
stos
xchg
jo
mov
fcomp
jbe
test
jmp
lea
shl
mov
xor
pop
mov
pop
xchg
mov
lahf
in
jp
pop
loope
stc
sar
ss
cmp
cmp
inc
push
add
jo
mov
ja
repnz
push
pop
retf
(bad)
pop
call
mov
iret
sbb
mov
add
push
and
add
or
aas
mov
mov
outs
pop
ss
fidivr
xor
mov
mov
pop
fucomi
jno
mov
jno
xor
out
iret
pop
dec
(bad)
push
pushf
sbb
or
aad
(bad)
(bad)
iret
add
es
add
jns
in
mov
test
xor
cld
jno
push
sbb
mov
inc
fbld
or
add
(bad)
arpl
outs
in
xor
ss
(bad)
rol
xchg
dec
mov
shl
sub
fcmovb
cs
ins
adc
(bad)
sahf
jnp
or
ret
inc
cwde
test
aas
cmps
hlt
iret
dec
sbb
sahf
pop
jmp
jnp
data16
adc
ror
cmps
cs
push
repz
push
and
int
stc
ret
outs
sbb
ss
fwait
mov
ins
int3
imul
jb
div
jmp
mov
cmp
popa
jno
jmp
clc
jnp
add
inc
and
xchg
loopne
div
movs
xor
lahf
mov
cmc
cmp
or
xchg
dec
jo
sbb
das
xor
aas
stc
les
repnz
stos
fisubr
es
loopne
inc
xchg
pop
sti
sub
sub
in
jbe
icebp
sbb
sub
out
stos
mov
xchg
ds
jns
dec
pop
mov
dec
pop
or
cwde
ror
hlt
scas
(bad)
in
fs
push
nop
sub
call
pop
mov
cmps
inc
dec
push
pop
dec
xor
movs
mov
fwait
aaa
pop
or
ins
pushf
push
pop
adc
mov
aas
mov
daa
pop
push
pusha
ror
or
lds
movs
popf
xlat
lea
fldenv
pusha
retf
leave
adc
in
fs
cwde
sar
rol
add
fisub
mov
mov
aaa
cmp
(bad)
mov
test
mov
rcr
pop
sbb
xchg
pop
or
pusha
add
sbb
xchg
aam
dec
xchg
xchg
aam
and
add
or
inc
mov
lods
mov
enter
ret
add
out
xchg
sbb
dec
sbb
push
retf
div
fiadd
sbb
xor
call
pop
xlat
out
leave
inc
shr
sbb
sbb
mov
cmps
push
mov
das
jo
inc
lds
mov
daa
and
(bad)
pop
mov
(bad)
mul
cdq
dec
and
xchg
jmp
aam
pop
ja
dec
xchg
cdq
mov
mov
xor
lods
sbb
test
(bad)
ror
mov
and
nop
jmp
nop
icebp
jecxz
adc
std
loop
mov
sub
cdq
push
push
pushf
push
popa
(bad)
pop
or
mov
in
in
or
sub
aaa
dec
fisttp
arpl
pop
clc
mov
add
out
mul
aad
cmp
fmul
cdq
mov
sub
pop
pushf
inc
icebp
jl
mov
out
ret
inc
pop
les
jecxz
mov
xchg
(bad)
xchg
stc
jp
adc
mov
push
dec
adc
(bad)
jecxz
xor
mov
test
jp
rcr
dec
mov
xchg
loope
mov
or
and
(bad)
and
push
add
xchg
cmp
and
cmp
je
push
mov
push
or
sub
(bad)
fiadd
mov
xor
inc
add
jmp
sbb
push
or
mov
rol
ds
jno
int
sub
ficom
outs
fs
loope
stos
lods
and
(bad)
icebp
jo
mov
push
or
lods
xchg
dec
and
movs
mov
xor
push
and
jmp
lods
clc
xchg
jmp
mov
lea
mov
cmp
add
int3
and
sbb
add
out
pop
jmp
mov
xor
push
outs
fcmove
xor
popa
push
xor
xchg
push
aaa
scas
cld
pop
xchg
inc
pop
adc
sar
call
sbb
xor
mov
inc
inc
mov
mov
push
lods
ret
in
xchg
sub
mov
push
mov
imul
and
sahf
aad
fcom
out
lods
push
dec
(bad)
and
mov
pushf
lock
mov
iret
test
adc
mov
sbb
inc
iret
fimul
stos
mov
loop
stos
cld
nop
ins
in
mov
inc
lods
ds
add
cmp
add
dec
mov
movs
jo
add
sbb
loop
adc
mov
mov
in
loopne
cmp
add
lods
or
mov
mov
adc
push
in
xchg
push
dec
fwait
je
imul
push
int3
ins
xor
aad
sbb
popa
call
jecxz
jne
cmc
rcr
add
dec
xor
(bad)
sbb
sub
push
pop
sar
shl
es
add
sbb
cmp
push
test
scas
adc
inc
lahf
ret
jbe
cld
jb
and
aaa
stc
loopne
ja
arpl
cmp
mov
dec
jbe
fst
cmp
cmp
fnsave
pop
ror
and
jns
or
std
pop
pop
cld
popa
pop
mov
scas
call
ret
xor
fsubr
shl
sahf
int
and
dec
or
cdq
and
sbb
int
sar
icebp
push
iret
(bad)
pop
fwait
out
movs
loope
lock
pop
mov
sbb
dec
stos
shl
xchg
xchg
or
(bad)
(bad)
jno
aas
retf
cli
cld
test
mov
popf
inc
sub
jo
sbb
imul
int
ds
xor
call
stc
ror
add
xor
(bad)
jmp
mov
fs
mov
mov
loop
jnp
mov
fidiv
jle
jo
sub
inc
adc
loope
and
sub
and
lock
cmc
xchg
inc
push
lds
loope
jns
mov
iret
inc
int
imul
(bad)
and
iretw
inc
add
pop
cwde
stos
inc
xor
leave
hlt
jmp
arpl
jge
add
mov
fadd
ja
cmps
dec
ins
push
or
in
push
popf
sbb
ins
mov
repnz
mov
les
mov
lea
mov
rcl
inc
and
or
fstp
rcr
stos
inc
mov
scas
ss
daa
push
imul
out
arpl
das
push
fnstcw
mov
fsubr
xchg
loope
sbb
push
jmp
xor
lea
ficomp
fstp
enter
xchg
popf
adc
ins
sbb
mov
dec
add
(bad)
cmp
or
cmp
pop
call
fwait
add
add
stc
pop
push
sti
dec
add
cmc
pusha
xor
adc
mov
lods
jnp
sti
adc
cld
daa
add
fimul
mov
xchg
sub
xchg
int
aas
cmps
data16
in
xchg
xchg
sbb
mov
adc
pop
sub
lods
xchg
sbb
push
or
push
or
call
out
xlat
clc
test
daa
les
lods
xchg
icebp
cwde
mov
cmp
pop
fwait
adc
push
pop
pop
lea
lock
mov
lods
mov
pop
pop
jne
mov
jmp
(bad)
push
sub
enter
push
fld
mov
add
sub
mov
push
ins
jnp
push
inc
jp
mov
ds
pusha
into
std
call
xchg
adc
aaa
cmps
mov
je
pop
loop
push
popa
es
sub
rol
jne
ret
xchg
or
pop
add
aad
push
or
dec
add
pop
gs
mov
out
out
sub
dec
cwde
pop
popf
dec
(bad)
adc
mov
mov
sbb
dec
(bad)
xchg
pop
in
add
rcl
lds
or
xchg
mov
and
aas
repnz
int
fisttp
daa
cmp
jmp
push
arpl
mov
xor
push
jae
mov
inc
loope
jg
(bad)
(bad)
pop
sbb
repz
xchg
imul
iret
adc
inc
std
(bad)
sar
and
mov
push
hlt
dec
xrelease
mov
push
push
ins
push
in
sti
out
idiv
push
xchg
jmp
mov
or
cmp
dec
fwait
add
mov
xchg
pop
imul
call
xor
push
mov
mov
sbb
loope
and
sbb
mov
push
adc
test
fadd
int3
push
scas
and
daa
push
cmp
sahf
mov
out
mov
(bad)
aas
pop
fnstsw
or
shl
loope
std
(bad)
xor
mov
pop
imul
adc
jp
jl
repnz
in
repnz
mov
stos
fstp
xor
out
in
jecxz
add
stos
cld
outs
movs
mov
mov
ror
es
mov
into
or
loope
and
xor
scas
push
jge
out
mov
ja
aas
xchg
push
jg
mov
or
sub
mov
adc
test
out
jl
lsl
xchg
movs
sti
mov
mov
xlat
ret
fild
xchg
push
aas
jmp
dec
push
mov
mov
inc
jns
jg
stos
and
iret
mov
lods
popa
add
mov
xor
(bad)
push
aas
xor
add
out
les
sub
dec
mov
retf
std
cmp
aad
sbb
shl
xchg
mov
idiv
sub
jb
cwde
bound
pusha
fbstp
cwde
fistp
mov
(bad)
sbb
hlt
ficomp
pop
outs
js
mov
mov
(bad)
mov
pop
inc
adc
lea
(bad)
cmp
or
or
jge
sbb
mov
std
sub
loope
push
pop
or
mov
fldenv
add
push
and
inc
sbb
and
(bad)
xor
gs
ffreep
sbb
out
adc
inc
fwait
and
js
inc
adc
add
jecxz
div
xor
dec
adc
pop
cmps
xchg
inc
pop
or
fcom
loop
pushf
stos
sub
repnz
lock
cmp
mov
dec
mov
push
popf
jbe
imul
retf
xor
cmp
hlt
pop
mov
and
sbb
rol
fs
adc
ja
in
fadd
aaa
and
inc
rol
xchg
pop
popf
dec
ins
xchg
outs
gs
enter
sub
loopne
icebp
sub
push
inc
xor
cmps
dec
arpl
cmps
fldenv
mov
add
inc
enter
push
sti
push
adc
jg
(bad)
or
clc
ret
lock
and
cs
adc
lods
fwait
fwait
jge
out
mov
push
push
mov
out
sahf
mov
pushf
ins
cmps
adc
mov
pop
jo
mov
(bad)
mov
mov
and
fstp
outs
aas
out
mov
jns
je
repnz
mov
pop
movs
and
jmp
sub
inc
mov
xchg
pusha
mov
inc
adc
xor
sub
add
inc
push
adc
or
jmp
push
popa
cmps
jno
jl
into
xchg
imul
call
fnstsw
and
out
xor
test
(bad)
pusha
retf
xchg
mov
enter
test
idiv
jg
mov
cli
movs
xchg
fs
jge
sub
fstp
push
inc
sti
pop
fimul
mov
test
ficomp
lods
cmps
lock
ds
mov
push
not
jle
cmp
jp
mov
fild
push
pop
fidivr
les
xchg
push
mov
mov
mov
(bad)
retf
out
jno
sub
jl
inc
neg
push
icebp
mov
dec
mov
dec
pop
std
mov
sbb
nop
loopne
out
pop
hlt
mov
jo
clc
jmp
adc
in
leave
xor
jmp
ret
ret
fs
jmp
retf
xor
es
cdq
test
xchg
mov
push
sbb
(bad)
pushf
imul
fild
pop
xlat
mov
pop
xchg
xchg
fidivr
and
lock
out
pop
push
movs
iret
icebp
xor
nop
pop
lea
fadd
xor
inc
in
outs
out
out
push
jb
js
inc
ja
ds
inc
add
in
aas
pop
and
in
push
mov
enter
sub
or
or
mov
mov
inc
adc
(bad)
sbb
push
cmc
js
nop
in
ret
test
fist
mov
xchg
out
popf
in
lahf
dec
lea
pop
int3
inc
cmp
ret
sub
sar
xlat
xchg
daa
aas
adc
popf
cmp
adc
rol
sbb
loop
adc
lods
or
xchg
sub
lea
gs
jl
fcomp
pop
not
jo
mov
xor
xor
mov
jp
xlat
sbb
jl
sbb
jp
mov
cwde
out
or
iret
scas
nop
push
pop
mov
mov
mov
dec
and
adc
scas
cmp
and
fadd
int
je
xchg
push
mov
(bad)
fld
jno
daa
jl
cmps
into
and
pop
lahf
arpl
xchg
sar
lds
sar
push
cmp
mov
out
ret
loopne
std
push
cmp
icebp
ss
push
retf
push
xchg
(bad)
gs
sahf
rcl
popa
jns
xchg
pop
pushf
dec
add
cli
movsx
mov
or
loop
rcl
adc
cmp
shl
(bad)
cli
loope
pop
scas
xchg
mov
adc
nop
scas
jp
sbb
push
in
and
je
int
xchg
jp
inc
mov
es
scas
jno
cdq
mov
aad
sar
into
mov
mov
inc
or
fwait
test
loop
dec
or
mov
push
cmp
mov
xor
cmp
cmp
add
lock
mov
stos
in
fnstsw
sub
mov
and
sahf
cmp
add
ja
in
push
lods
cmps
in
push
popf
jae
pop
test
cmp
ret
sub
push
cmps
jo
inc
jmp
test
imul
or
jbe
sti
fisttp
adc
cmp
ror
repnz
out
pop
loopne
data16
xor
fcom
(bad)
sub
outs
aad
cmp
or
inc
inc
pop
(bad)
jo
lea
sar
iret
push
jle
lock
shl
popf
pop
cwde
jo
xlat
push
hlt
xlat
push
pusha
call
(bad)
pushf
sbb
xchg
stos
jno
xchg
sub
les
and
cdq
push
ins
out
push
arpl
pop
push
test
scas
cmc
lods
aaa
dec
jge
cmc
cld
mov
test
add
leave
loopne
push
aad
repz
into
ror
mov
cmps
sbb
outs
or
add
cmps
imul
or
jmp
xor
je
adc
fist
movs
mov
mov
fs
icebp
pop
inc
nop
in
fwait
mov
mov
jnp
sub
jle
stos
jle
neg
(bad)
js
inc
daa
mov
pusha
in
xchg
lods
fidiv
in
dec
icebp
retf
cmp
sbb
jecxz
ss
mov
pop
iret
sub
sub
mov
dec
jge
cmps
adc
movs
sbb
lds
lock
dec
sahf
in
adc
icebp
xor
push
inc
jle
inc
add
data16
dec
out
pop
mov
sub
(bad)
in
int3
cmps
dec
(bad)
dec
das
sub
adc
inc
cmps
push
sbb
mov
adc
mov
out
jge
fnstenv
scas
jno
jmp
jl
mov
jge
xlat
dec
aaa
inc
shl
mov
scas
std
mov
mov
sub
test
ret
out
pop
mov
mov
clc
mov
stos
push
ds
daa
or
cmp
data16
mov
fcmovnu
test
xchg
push
js
xchg
shr
push
xor
jg
hlt
dec
pop
or
(bad)
loop
mov
adc
xor
dec
test
fdivr
push
enter
xor
iret
out
je
dec
daa
bound
icebp
retf
daa
pop
data16
arpl
sub
xchg
xchg
push
lock
inc
mov
pusha
push
ret
jp
mov
pop
xlat
jno
stos
cmps
mov
cdq
push
fbld
push
stos
inc
js
mov
aas
jl
out
mov
jmp
lods
inc
rcr
iret
push
or
jnp
and
mov
(bad)
push
xor
sbb
pop
arpl
ins
pop
iret
inc
cli
(bad)
xor
cmp
test
test
out
imul
ficomp
and
es
inc
(bad)
movs
jmp
loope
push
dec
(bad)
mov
mov
xlat
cmc
pop
jecxz
inc
adc
aad
ret
xor
stos
rcl
retf
xchg
test
lock
mov
scas
mov
imul
imul
(bad)
out
adc
adc
adc
movs
push
loope
jg
rcl
inc
mov
jle
jns
out
xor
jmp
popf
cs
push
mov
movs
sbb
pop
ret
es
out
(bad)
sub
xlat
cmp
ret
(bad)
shl
or
repz
fisubr
loopne
call
mov
out
out
jne
inc
pop
icebp
or
fist
push
xchg
mov
xchg
and
test
movs
psraw
ror
jge
outs
clc
jge
dec
lock
pusha
mov
cmp
cmp
jmp
pop
mov
(bad)
mov
enter
sub
jg
push
dec
retf
cwde
dec
addr16
and
data16
lea
add
fs
jo
cmps
xchg
daa
out
ins
cdq
cmp
xchg
test
ret
sbb
jmp
jnp
movs
jmp
(bad)
mov
jmp
js
xor
in
fnstsw
retf
lods
inc
push
inc
xlat
dec
pop
cmp
cmp
jae
dec
sbb
dec
inc
inc
push
loope
and
add
adc
pop
cmp
outs
adc
mov
pop
loope
jge
fdiv
(bad)
adc
in
add
push
mov
test
aam
call
(bad)
jmp
shr
jne
dec
ja
sbb
mov
test
ficomp
lods
sbb
adc
cmp
fcom
or
das
adc
rcl
jns
add
sbb
std
lahf
sbb
data16
pop
inc
pop
cmp
dec
pusha
jg
push
mov
cld
jno
loop
sbb
fsubrp
mov
out
mov
sub
add
pop
adc
cmp
xor
pusha
les
shl
adc
jbe
fild
out
cmp
sbb
fldenv
xchg
shl
adc
mov
test
call
xor
and
push
jecxz
(bad)
mov
dec
inc
sbb
inc
nop
push
and
aad
scas
js
lock
das
mov
xchg
mov
movs
into
pop
sbb
xor
test
sahf
mov
shr
sub
mov
fnstenv
ret
jb
int
add
loope
or
push
ins
and
popf
mov
xor
pop
shr
imul
(bad)
mov
pusha
nop
adc
inc
adc
jne
pop
sub
jbe
into
data16
jno
add
dec
push
mov
sbb
std
cwde
pop
sahf
lods
mov
and
sar
or
mov
pop
mov
add
das
push
popf
mov
je
arpl
push
sub
mov
retf
into
mov
test
xchg
inc
(bad)
imul
dec
pusha
movs
sahf
or
repnz
stc
call
jle
add
scas
or
in
push
popa
inc
mov
cmp
enter
pop
inc
mov
(bad)
add
xor
pushf
pusha
dec
mov
jmp
inc
mov
stc
mov
mov
call
fisubr
js
jo
pop
push
dec
push
dec
movs
dec
into
loope
xchg
rcr
jne
cdq
cmp
xor
mov
and
pushf
lea
sbb
jp
fst
aaa
jne
fimul
es
fwait
inc
in
jmp
cmp
xor
or
jbe
pop
call
out
mov
adc
or
leave
(bad)
ja
mov
loope
(bad)
loop
mov
push
jge
call
dec
pusha
xchg
(bad)
or
jno
mov
cld
fnstcw
outs
pop
imul
(bad)
fcom
adc
test
popf
in
sahf
dec
aas
les
push
in
ficomp
fidiv
addr16
mov
dec
cmps
hlt
sub
xchg
les
cmp
retf
fbstp
or
pop
aas
inc
adc
and
test
aas
in
leave
or
dec
push
pop
cmp
cmps
popa
pop
stos
movs
jmp
xchg
push
sbb
retf
or
mov
and
es
adc
cmps
sbb
test
push
je
push
add
popf
sub
dec
int3
sti
add
xchg
sbb
dec
fcom
sbb
pop
push
mov
pop
out
fnsave
add
jg
xchg
sub
xchg
cmp
xchg
inc
popa
mov
mov
mov
jmp
call
xchg
ds
rcl
xchg
fs
cld
ror
mov
out
xchg
mov
stc
adc
or
(bad)
xlat
repz
inc
cmp
xor
inc
sub
adc
pmaxsw
or
pusha
and
mov
mov
adc
bound
popf
popf
fsub
mov
arpl
lea
push
jnp
iret
inc
call
ds
dec
shr
dec
arpl
xchg
push
push
mov
mov
aam
rcr
dec
in
mov
fcom
mov
dec
fdivr
int
lock
test
in
addr16
mov
aam
mov
cmp
inc
add
jle
in
into
fmul
jnp
lock
jmp
int
pop
in
ficom
enter
pop
icebp
hlt
xchg
xor
mov
dec
dec
pop
ja
lock
inc
add
ror
repz
add
sbb
sbb
shl
outs
loop
cmp
jbe
lea
aaa
cmp
fs
or
pushf
into
es
push
gs
jmp
mov
mov
outs
data16
outs
xchg
outs
scas
xchg
std
push
and
js
aam
scas
inc
pop
mov
or
loope
rol
(bad)
jb
vmovdqa
pop
mov
in
dec
daa
fstsw
nop
in
add
retf
fbstp
jne
std
cmp
das
xor
pop
clc
push
out
ds
or
or
cmp
test
jge
cdq
out
and
shr
mov
and
stos
xor
xchg
add
pop
imul
add
cmp
ja
ss
daa
stos
dec
cld
jg
lods
xor
gs
cmp
(bad)
and
or
sbb
xor
aad
ss
or
add
jle
dec
gs
repz
stc
sub
xchg
mov
nop
jmp
lods
jg
ficom
fidivr
in
movs
add
ret
ret
fist
iret
and
ss
sqrtpd
push
cmp
jge
movs
jmp
xchg
sbb
retf
cmps
stos
scas
mov
jnp
cmp
clc
(bad)
mov
mov
cmp
ds
xor
jp
lea
sbb
(bad)
adc
rol
leave
enter
(bad)
xor
ja
sbb
cmp
(bad)
cmc
push
inc
retf
fwait
sahf
pop
xchg
add
fcom
scas
ja
daa
(bad)
and
pop
adc
xchg
jecxz
xor
fmul
jecxz
pusha
mov
sub
cmps
out
add
clc
push
adc
and
pop
pop
loop
cwde
push
cmc
neg
rcr
mov
push
dec
dec
mov
pop
adc
xor
pop
fwait
cmp
xchg
dec
xor
loope
or
cmp
adc
or
(bad)
or
call
mov
adc
xor
xor
clc
loope
out
fimul
test
popa
je
or
lods
sub
adc
sub
rol
xor
inc
mov
cmp
scas
test
sar
lods
and
test
adc
jbe
cmp
repnz
sub
les
jns
push
sbb
push
xchg
aad
je
fwait
xchg
popf
shl
xor
push
fisubr
cmc
inc
pop
das
stc
pop
cmc
sub
add
das
loop
ins
mov
add
ficomp
mov
or
jg
call
cwde
mov
loope
iret
lock
mov
or
add
push
test
add
push
or
stos
dec
popf
push
jp
jns
mov
mov
cmp
jbe
jl
scas
fadd
add
mov
addr16
sti
mov
sbb
dec
in
vmovq
xor
pushf
jnp
div
inc
fwait
ins
adc
pop
test
aaa
push
dec
lea
ret
sbb
test
and
cmp
dec
scas
cli
rol
dec
nop
cmp
dec
mov
cmc
(bad)
data16
mov
jns
sbb
dec
mov
and
or
add
mov
mov
cdq
and
mov
outs
les
cmp
jmp
inc
outs
jns
aas
rcl
inc
xchg
aas
aam
xlat
sbb
mov
push
aas
jo
fmul
sbb
mov
push
out
out
add
xchg
enter
mov
xor
push
sbb
clc
cmps
mov
cmp
stos
sbb
mov
das
out
aam
(bad)
lahf
mov
add
fsubp
ds
icebp
gs
out
gs
fist
push
vpunpckldq
int
fcmovbe
xor
and
lods
arpl
mov
js
adc
mov
mov
inc
jo
mov
(bad)
fldcw
cmp
iret
jbe
das
test
movs
sbb
ss
int
sub
inc
das
das
or
mov
xlat
inc
rol
cmp
fld
aam
mov
pop
jnp
or
xchg
aaa
add
scas
mov
add
les
cmp
jne
sub
cmps
scas
jne
jns
push
bound
xchg
xor
out
ret
sub
cmc
or
sub
mul
fcom
mov
ret
out
pop
pushf
dec
cmp
push
push
popf
sub
xchg
sub
aas
(bad)
inc
inc
les
lock
jle
sub
pop
and
outs
jmp
adc
mov
push
and
jge
add
mov
repz
(bad)
(bad)
inc
jecxz
cmp
dec
es
add
vcvtpd2dq
repnz
js
adc
enter
add
addr16
mov
and
fdivr
and
fidivr
sar
jne
aam
sub
dec
xlat
dec
jmp
jne
int3
add
xchg
das
nop
dec
add
adc
sub
idiv
adc
enter
xchg
xchg
stos
sar
cld
inc
xlat
into
rcl
cmps
push
push
xchg
fidiv
jecxz
fs
cmps
cld
enter
xchg
xchg
pushf
inc
push
call
cmp
sub
cs
xchg
stos
fmul
icebp
push
lds
xor
jl
jns
pop
mov
(bad)
adc
inc
in
pop
jnp
pop
dec
mov
inc
jecxz
or
sub
push
and
pop
cdq
test
inc
xor
repnz
not
les
popa
sub
and
pop
scas
adc
pop
popa
test
inc
push
mov
stos
icebp
addr16
xchg
cmp
add
in
or
mov
pop
bnd
push
leave
aaa
pop
clc
stos
and
push
sub
mov
cmp
adc
ds
rcr
jae
cmps
std
sbb
xchg
lahf
pop
(bad)
enter
cmp
or
and
sti
pushf
add
sub
mov
or
mov
push
gs
clc
dec
leave
inc
add
adc
out
mov
stos
cmps
pusha
stc
pop
adc
bound
shr
jl
(bad)
push
cmps
data16
mov
hlt
into
dec
daa
adc
add
sbb
pop
jno
xchg
or
push
xor
mov
rep
fsubr
mov
ja
mov
inc
mov
inc
inc
xchg
and
lahf
movs
lahf
adc
adc
pop
pop
ss
sbb
pop
mov
mov
pop
lock
push
jmp
daa
shl
mov
inc
push
pop
inc
jno
cdq
fisubr
xor
lock
cmp
fsub
inc
js
ins
sub
lods
fisubr
pop
repnz
clc
pusha
xchg
leave
mov
and
(bad)
out
cmc
shl
mov
adc
cdq
add
stos
xor
ficomp
xchg
mov
adc
ds
sub
push
mov
int3
adc
test
and
pop
push
pop
inc
jmp
push
retf
ret
lock
add
sub
xor
jnp
clc
mov
sub
(bad)
(bad)
not
ss
repz
sti
sti
inc
jecxz
pusha
ins
repz
fdiv
out
push
fdiv
jg
jge
mov
jb
fwait
and
pop
pop
mov
mov
mul
rcl
cmp
push
and
or
dec
xor
mov
int3
stos
ss
dec
repz
retf
jne
sbb
dec
repnz
pop
add
mov
pushf
mov
xor
ss
scas
ins
xor
arpl
lock
and
xchg
out
nop
cdq
retf
xor
push
loopne
sub
cs
xor
inc
adc
dec
aam
adc
lods
(bad)
imul
mov
cmps
xchg
cmp
pop
(bad)
jge
pop
sub
push
mov
cli
popf
xchg
and
fld
out
ins
popf
in
pop
sahf
push
nop
scas
pop
je
ss
mov
pop
add
mov
xchg
push
(bad)
sbb
js
mov
movs
cli
leave
dec
test
sar
pop
jbe
sbb
es
gs
add
es
xchg
fcom
dec
outs
jle
push
pop
(bad)
jne
mov
and
mov
rol
aam
or
into
ret
(bad)
and
stos
mov
xchg
lock
fldenv
scas
dec
rol
(bad)
pop
cmc
and
push
enter
outs
cmps
je
repz
xor
div
xor
push
retf
sbb
stos
idiv
sbb
ss
ins
jg
jmp
mov
sbb
neg
fsubr
mov
and
pop
or
aas
jno
inc
xchg
not
lock
aas
cmp
movs
jnp
in
pop
test
mov
in
dec
pop
sub
and
xchg
xchg
pop
dec
retf
js
and
clc
dec
aam
and
inc
sti
jae
mov
mov
mov
popf
int3
or
mul
add
push
xchg
add
into
dec
pop
adc
inc
jnp
and
xor
and
jne
xlat
jne
nop
mul
jbe
lock
or
jmp
hlt
pop
sub
fsubp
jle
and
push
(bad)
nop
add
enter
cmp
aas
idiv
jbe
imul
lea
rcr
mov
int
mov
cmp
je
dec
inc
rol
fnstenv
cmp
mov
and
mov
jmp
loope
sub
jmp
loopne
mov
lea
cmps
sar
enter
sub
fidiv
push
rcl
jns
aad
lds
inc
leave
inc
inc
mov
sti
add
xor
sahf
mov
sahf
mov
movs
pushf
ror
jmp
mov
inc
jne
add
fbstp
call
icebp
lea
cmp
mov
(bad)
push
in
xor
out
test
xchg
cmps
or
bound
cmps
into
fmul
les
loope
mov
iret
pop
xchg
jae
xchg
xchg
xlat
fcomp
mov
jl
xchg
scas
jg
(bad)
aaa
mov
icebp
xchg
xchg
mov
jp
xchg
pop
leave
pop
and
pop
cs
stos
shl
hlt
cli
xchg
in
jmp
arpl
sahf
jl
xor
fdiv
inc
cld
rcr
xchg
lods
jmp
adc
imul
sub
lods
cmp
adc
stos
inc
mov
ror
les
mov
push
dec
(bad)
stos
retf
mov
xor
mov
int
call
pop
ret
or
cmc
stos
and
arpl
inc
lods
mov
inc
mov
imul
dec
push
retf
inc
and
jne
in
adc
pop
push
gs
mov
sbb
sbb
push
pop
dec
sbb
stos
(bad)
xor
lods
dec
jo
mov
cmp
shl
push
dec
xor
(bad)
mov
xchg
mov
push
or
mov
xor
adc
cmps
mov
sbb
in
(bad)
jae
test
adc
adc
pop
ficomp
dec
cmps
popa
sahf
pop
ds
stos
dec
mov
mov
out
inc
cmp
fs
mov
mov
or
ret
jp
lds
pop
mov
pop
repz
movs
mov
pop
mov
mov
std
test
aam
loop
push
xor
sub
inc
fs
pop
arpl
js
jg
push
jp
pushf
cdq
stos
inc
jge
(bad)
int3
adc
int
jmp
sub
imul
sbb
xchg
ja
mov
(bad)
jbe
cmp
and
mov
push
pop
sbb
adc
push
and
ds
pop
inc
in
jg
je
push
aaa
out
lods
ins
test
mov
push
ins
outs
loope
popa
aad
dec
(bad)
push
jnp
ss
fsubr
(bad)
cdq
push
jno
sbb
ds
inc
mov
iret
sub
retf
outs
(bad)
les
stos
push
mov
jne
(bad)
imul
jo
jb
jecxz
push
jnp
push
loop
push
xchg
fisubr
mov
lahf
lds
push
iret
sub
inc
rol
mov
icebp
data16
pop
movs
in
movs
sti
loop
enter
lds
dec
pop
jge
cmp
adc
call
fs
add
dec
pop
sbb
rol
sub
cmp
and
adc
(bad)
stc
push
stos
sbb
enter
mov
mov
enter
pop
add
ficom
sbb
jno
iret
into
push
sbb
cli
jmp
mov
and
and
in
sub
(bad)
xor
in
push
jne
repnz
add
pushf
aam
dec
cmc
push
cmp
icebp
dec
adc
pop
mov
push
pop
jge
(bad)
pop
dec
stc
out
and
outs
(bad)
loopne
or
lahf
or
(bad)
xor
xchg
sbb
adc
push
sub
push
shl
mov
mov
data16
jp
jle
xchg
mov
cmp
stos
scas
adc
div
or
xchg
xchg
jge
cmc
sub
std
dec
sub
hlt
jl
or
or
inc
stc
adc
add
mov
loope
popa
xor
adc
mov
pop
ror
mov
or
mov
out
or
popa
and
pop
lds
xchg
pop
adc
sbb
dec
dec
mov
jecxz
mov
fstp
and
test
rcl
test
into
sti
mov
lods
imul
cmp
icebp
xchg
cmps
(bad)
(bad)
xchg
imul
sub
lahf
cmps
fst
sub
retf
nop
icebp
or
(bad)
in
mov
ins
push
cmp
leave
lea
out
or
aam
movs
(bad)
test
jne
cwde
sub
retf
inc
cmp
loope
into
pop
imul
mov
fcom
mov
repnz
sar
inc
shr
and
imul
pop
ins
mov
rcr
or
rcr
int3
jmp
xor
cmc
cmp
lods
rcr
and
inc
ins
cmp
mov
shl
add
cmp
(bad)
xchg
push
mov
cmp
cmp
leave
call
or
xor
jp
xchg
or
rol
out
test
daa
in
push
cwde
pop
lods
fisttp
xchg
cmp
scas
dec
jecxz
mov
repnz
std
jmp
jmp
ror
inc
or
call
xor
mov
sbb
mov
or
repz
call
pop
loopne
enter
scas
ja
fld
add
jge
mov
mov
pop
pop
ret
addr16
jo
inc
mov
outs
sbb
sub
(bad)
xchg
xchg
jp
aaa
and
fwait
cli
mov
das
or
pop
movs
pop
sub
and
jg
loopne
and
pop
mov
int3
dec
loopne
pop
mov
outs
dec
cmp
fnstsw
cmp
push
test
or
ins
or
xchg
or
xor
(bad)
mov
fcmovnbe
das
mov
(bad)
popa
jns
rcl
adc
cmc
pop
pusha
add
mov
popf
call
and
push
loop
inc
lods
pop
hlt
pop
inc
repz
adc
mov
ret
xchg
adc
retf
push
adc
add
push
cmp
repnz
test
jae
repz
push
retf
sbb
or
outs
ficomp
adc
sub
cwde
push
loopne
out
inc
jae
nop
lds
push
aaa
pop
ins
jmp
pusha
pop
enter
push
add
adc
in
ficomp
xchg
sbb
dec
(bad)
sub
in
xlat
xchg
pop
xchg
aam
cwde
in
xchg
pop
ficomp
dec
int
mov
mov
jnp
sub
call
imul
ret
xchg
xor
push
ins
popa
inc
aas
idiv
aaa
cmp
push
cmps
mov
add
jae
add
jge
mov
jp
fs
sti
out
sub
leave
shl
cmp
fsubr
into
ins
aaa
daa
sbb
jae
sbb
jno
loope
stos
ficomp
fwait
adc
add
in
imul
pop
jns
sahf
iret
sbb
ins
and
sbb
pop
divps
cmps
mov
adc
pusha
xor
and
sbb
cmp
fwait
sub
ins
mov
pop
fisubr
loope
jge
js
dec
dec
push
jle
cmp
mov
jle
jnp
push
dec
sub
out
inc
and
shl
test
add
inc
pop
mov
jp
xor
dec
(bad)
in
sub
push
daa
add
add
inc
pop
dec
cld
cmc
jb
mov
and
int
dec
mov
int
in
lea
stc
or
in
pop
sbb
xchg
(bad)
lods
int3
pop
ror
sbb
cmps
mov
dec
xchg
popf
adc
loope
movs
dec
dec
outs
sti
cli
mov
mov
jmp
pop
push
sbb
fistp
(bad)
cli
cmps
jecxz
shl
cmps
cmp
push
repz
inc
adc
clc
cmp
jne
cmp
or
enter
in
push
jo
mov
push
or
mov
xlat
or
mov
mov
and
adc
icebp
pop
(bad)
(bad)
or
jno
push
shr
out
stos
push
jle
and
movs
test
xchg
mov
sbb
das
cmp
icebp
jge
dec
enter
adc
pop
or
movs
or
pop
loope
xor
push
jno
cmp
gs
pop
pop
jg
sbb
movs
movs
sti
pop
push
mov
ins
cld
pop
loopne
cmp
into
test
cmps
(bad)
xchg
invd
sub
cmp
push
nop
mov
xlat
haddpd
push
std
jmp
das
push
dec
xor
sahf
out
stos
retf
sub
inc
test
jmp
(bad)
mov
into
push
pop
jmp
sub
nop
lock
pusha
push
push
xor
retf
jmp
jb
cmp
sbb
sub
pushf
push
es
add
sbb
xor
xchg
dec
push
jo
popf
scas
inc
push
mov
stos
mov
fs
mov
push
leave
jae
sbb
repz
pop
(bad)
data16
int3
or
jmp
push
or
add
mov
sub
repz
adc
jecxz
push
je
and
cmc
adc
xchg
imul
jl
icebp
push
es
xchg
maxps
jns
push
and
fidivr
sub
lods
adc
loop
inc
fdivrp
pop
idiv
lock
lds
mov
mov
inc
jmp
int3
sbb
xchg
clc
js
adc
cmc
fldenv
inc
mov
mov
jmp
sub
cmp
gs
rcr
mov
ja
pop
in
pushf
mov
jbe
pop
retf
xchg
(bad)
and
cmp
cmp
loopne
stos
inc
push
inc
jmp
in
dec
lods
push
sub
inc
or
pmuludq
in
call
retf
ret
dec
ins
pop
xlat
lea
fwait
xchg
fldcw
pop
pop
fistp
or
pop
push
jns
mov
cmps
(bad)
mov
xchg
push
test
leave
mov
mov
fbld
enter
test
pop
add
fcom
sbb
sbb
or
push
scas
dec
or
aad
fistp
inc
js
add
ret
scas
mov
mov
and
nop
xchg
out
pushw
sub
in
dec
in
and
pushf
sar
or
ret
mov
fcomp
mov
jo
pop
pop
int3
cs
enter
sub
(bad)
(bad)
mov
jp
(bad)
test
mov
data16
push
(bad)
push
jecxz
dec
lahf
ret
dec
sbb
adc
hlt
jecxz
(bad)
out
fsubr
into
sbb
ins
adc
jns
lock
lock
test
les
or
mov
cld
(bad)
out
push
jle
push
movs
stos
mov
or
hlt
inc
mov
(bad)
adc
inc
(bad)
stos
sbb
inc
sahf
popa
and
mov
pop
xor
jmp
or
repnz
adc
mov
jmp
lahf
pop
aam
add
mov
dec
idiv
mov
repnz
xor
fnstcw
shl
bound
ret
inc
mov
into
cli
jl
ins
add
outs
loope
cmp
push
adc
ror
push
lods
or
icebp
sbb
push
in
out
lock
inc
and
cmps
jnp
test
inc
sub
in
inc
mov
fstp
mov
mov
fcomp
popf
stos
or
outs
cmp
test
add
inc
out
lock
daa
int3
pop
pop
out
or
cs
xor
ret
push
push
sahf
imul
sahf
jmp
stos
adc
xchg
ins
jg
xchg
and
arpl
sub
adc
cmp
jecxz
(bad)
xchg
dec
cmp
sbb
test
lock
cs
(bad)
shl
pop
fwait
adc
aaa
add
mov
cmps
nop
addr16
inc
outs
out
pop
cmp
(bad)
loope
xor
(bad)
xlat
dec
mov
iret
pop
(bad)
addr16
mov
(bad)
popf
jne
adc
(bad)
xchg
out
jbe
and
mov
lock
dec
jbe
dec
dec
mov
inc
cmps
xor
pop
dec
xchg
aam
cmps
jmp
add
or
(bad)
dec
mov
lahf
xchg
cs
jo
adc
push
popf
ret
cld
add
(bad)
shl
inc
cmp
dec
cmp
loope
arpl
jns
ins
or
loope
out
mov
pop
enter
clc
jge
movs
add
lods
dec
and
js
and
mov
and
jmp
cmps
(bad)
ins
scas
pop
pop
into
(bad)
push
enter
add
sub
test
mov
in
dec
cwde
cli
out
push
add
pushf
pusha
push
inc
mov
fs
aam
repz
cmp
xor
push
add
xlat
icebp
dec
push
ja
movs
add
mov
pop
fbld
sbb
and
retf
xor
xor
push
sub
enter
cmp
stos
sbb
and
test
shl
inc
je
nop
data16
pop
popa
add
push
and
outs
sub
and
dec
hlt
cmp
aad
fbstp
mov
inc
dec
push
xor
je
pop
enter
or
mov
bound
ret
or
mov
cmp
fimul
cmp
jbe
adc
scas
(bad)
loop
mov
dec
add
push
mov
js
dec
inc
and
rol
cli
test
aaa
fwait
rcr
enter
adc
mov
mov
bound
cmp
sub
cmp
cmp
mov
test
(bad)
jmp
cmps
or
jae
sbb
test
mov
cmp
dec
push
lahf
lods
leave
xchg
mov
sbb
jnp
mov
repz
not
jmp
jnp
mov
xchg
sub
pop
jne
rcr
add
jno
les
fnstenv
jno
je
inc
mov
jge
xchg
or
sbb
sub
fcompp
lahf
cmp
ror
cmp
shl
mov
inc
test
ins
ins
sub
mov
pop
test
fdiv
mov
jmp
pusha
pop
xchg
or
cwde
mov
pop
xchg
adc
xchg
shl
mov
mov
gs
fstp
in
or
mov
iret
dec
inc
or
add
jmp
cmp
inc
addr16
add
cmps
scas
aaa
jnp
mov
mov
ds
sbb
inc
std
mov
outs
pop
stos
jle
inc
adc
inc
sub
(bad)
fiadd
sub
inc
out
lods
test
(bad)
in
add
cmc
and
jbe
test
and
pusha
les
xor
test
adc
xchg
scas
mov
ficom
add
outs
adc
ret
adc
sub
(bad)
cs
mov
jb
stc
xor
adc
jmp
mov
and
add
cdq
icebp
movs
mov
pushf
pop
or
jle
movs
lods
push
mov
fwait
xchg
mov
jp
push
data16
(bad)
ins
mov
inc
aad
mov
sbb
scas
sbb
mov
ds
push
lock
fld
leave
jo
xchg
out
xor
aam
adc
push
jbe
aas
dec
jb
lahf
jg
and
mov
pop
(bad)
cdq
les
fstp
cs
stc
cmc
sbb
pusha
sub
dec
mov
rep
fnstenv
mov
addr16
xor
add
dec
cld
dec
arpl
mov
dec
jecxz
inc
imul
push
sbb
in
nop
mov
jmp
mov
lods
jl
inc
into
into
xchg
xacquire
int3
into
sbb
xor
ret
mov
jae
fstp
jle
lock
jno
jbe
popf
or
jg
cmp
fwait
sub
and
jmp
dec
xchg
mov
sub
aaa
in
in
xchg
outs
jp
and
dec
outs
fldcw
call
lock
inc
test
fisttp
pop
jg
cmc
aaa
and
int
stc
mov
clc
rol
push
in
add
adc
jnp
mov
into
xchg
test
and
jmp
(bad)
mov
fist
sub
stos
fisttp
mov
fwait
lods
bound
(bad)
call
cmp
dec
adc
pop
pop
call
inc
jnp
pop
lock
inc
mov
test
daa
pop
ss
cld
lock
sbb
xchg
xlat
ficomp
fadd
test
lods
ds
mov
and
mov
cmp
sbb
out
sbb
shl
data16
adc
nop
test
sbb
jns
aaa
add
xchg
stc
sub
repnz
fldcw
jb
or
ror
call
mov
lds
pop
div
or
sahf
cwde
sahf
shl
shl
and
int
and
call
dec
mov
xchg
adc
cmp
and
imul
jb
cmps
push
adc
enter
or
test
or
scas
(bad)
sub
out
and
push
cmp
rcr
add
or
xor
push
cmps
(bad)
das
shr
or
(bad)
inc
jp
mov
mov
(bad)
or
ret
dec
inc
mov
mov
(bad)
mov
fsub
jmp
or
idiv
push
repnz
ins
jnp
push
push
stos
(bad)
je
inc
popa
cdq
(bad)
imul
or
fist
fmul
push
(bad)
addr16
xchg
lea
enter
int
jne
inc
sub
mov
and
in
mov
cld
xchg
mov
aad
xchg
hlt
mov
adc
leave
or
jl
push
cmp
cmp
xchg
jns
adc
stos
cmc
fistp
loop
xchg
cmp
push
dec
ret
cmp
ror
push
pop
mov
ins
loope
jbe
rol
popa
shl
lods
pushf
rol
jge
out
and
in
or
das
rsm
xlat
adc
cmp
pop
sbb
(bad)
aad
jmp
sbb
(bad)
popf
xchg
pushf
sub
pop
bound
jae
dec
(bad)
(bad)
dec
fisubr
cmp
ins
loope
lods
out
and
adc
mov
push
sti
jmp
and
fidivr
in
sti
in
jae
cmp
das
push
movs
arpl
pop
dec
or
jmp
lea
mov
test
aad
xchg
push
push
jne
cmc
mov
shl
or
mov
imul
ficomp
pop
or
mov
in
jge
push
lods
mov
rol
in
jge
aam
bound
in
cdq
and
adc
lds
test
nop
mov
mov
jg
push
mov
cmp
pop
or
enter
mov
aad
xchg
ror
lahf
icebp
(bad)
adc
xchg
hlt
inc
(bad)
cli
pop
mov
pop
push
inc
inc
pushf
and
enter
pop
aas
lock
ret
out
cmc
and
jbe
xor
out
pop
mov
loope
int3
arpl
sbb
xor
dec
or
int
frstor
or
dec
mov
jge
(bad)
mov
or
fsubr
int
dec
push
loope
test
add
mov
hlt
and
jnp
mov
mov
xchg
jno
sbb
lahf
xchg
inc
pop
or
out
sti
out
inc
ret
stc
lock
inc
jmp
xor
popa
adc
dec
sbb
mov
push
inc
xor
retf
push
mov
xor
shr
mov
xor
in
cmc
ins
xlat
adc
mov
scas
or
xchg
jecxz
inc
jl
(bad)
in
pop
cmp
push
es
(bad)
xlat
inc
mov
outs
mov
es
and
inc
es
mov
and
mov
or
sub
jge
dec
lds
ror
dec
mov
and
ins
ror
ins
int3
sbb
aad
loopne
icebp
ret
mov
(bad)
xchg
popf
cmp
pop
jge
rol
(bad)
out
adc
shr
in
fwait
or
push
mov
and
sti
mov
sbb
mov
daa
xchg
inc
lods
retf
adc
add
out
pop
jg
mov
pop
cs
cmp
fs
push
inc
add
ins
xor
inc
jmp
mov
enter
mov
dec
cmps
push
inc
ror
xchg
loopne
pusha
mov
adc
cs
lock
inc
mov
add
adc
cmps
mov
cmp
stc
les
clc
sbb
cli
(bad)
jb
mov
mov
mov
movs
jge
shl
enter
ss
and
push
scas
sbb
fnstcw
lahf
pop
mov
cdq
repnz
mov
bound
jl
sbb
loopne
outs
ds
aaa
jb
pop
jg
fnstsw
rol
in
js
std
sti
and
dec
inc
push
lds
nop
jg
movs
dec
pop
mov
fisubr
add
sbb
dec
sbb
jb
leave
adc
push
jae
jo
adc
stos
jno
sub
push
jle
add
adc
(bad)
ficom
adc
std
sbb
rcr
in
dec
int
add
scas
cmp
xchg
push
mov
mov
rcr
cli
fild
jecxz
mov
and
pop
icebp
out
inc
dec
or
xchg
fs
dec
sub
sbb
test
dec
push
stos
inc
jp
pop
mov
pop
outs
adc
ror
add
pop
lods
pop
push
(bad)
mov
xor
and
cli
std
(bad)
jmp
fist
xchg
xchg
call
sar
outs
ins
mov
mov
cmp
jns
xor
lods
xchg
xor
daa
add
std
lock
pop
leave
mov
xor
shl
adc
push
aaa
icebp
pop
and
movs
ret
std
jmp
(bad)
xchg
fld
add
ins
jo
cmp
test
xchg
jbe
fidivr
call
aaa
retf
jle
mov
ss
test
push
xor
aam
movs
add
not
lahf
inc
or
call
out
div
push
mov
aaa
leave
cmp
cmp
adc
adc
pop
pop
int
jne
imul
inc
adc
xchg
xchg
(bad)
adc
test
scas
mov
cld
push
mov
and
mov
adc
or
jle
enter
cmp
jmp
stos
jo
and
sub
lahf
test
rcl
sbb
mov
inc
dec
xchg
pop
imul
test
idiv
mov
js
xchg
(bad)
repz
fs
dec
(bad)
ins
xchg
ins
jo
push
adc
fcom
aam
retf
ja
push
lods
bndldx
jae
loop
stc
jg
sub
in
cmp
sar
mov
xchg
scas
and
jns
push
cdq
stos
aam
adc
leave
call
and
ins
pusha
mov
sub
mov
jg
popf
xor
rol
iret
inc
in
mov
out
lock
bound
mov
xchg
jmp
fwait
adc
test
inc
loop
pop
shl
add
dec
add
jo
popa
jmp
rcr
xor
xchg
push
adc
cwde
jb
push
mov
dec
cmp
mov
cmp
mov
mov
dec
mov
push
movs
and
xchg
and
or
(bad)
push
in
xchg
fs
icebp
arpl
iret
inc
setle
jecxz
xchg
cmps
add
jl
ins
and
into
mov
lahf
aam
adc
mov
imul
xchg
mov
xor
mov
or
sub
loopne
push
dec
call
xor
clc
inc
mov
dec
leave
mov
out
sub
cmps
sub
jne
mov
add
jno
imul
out
mov
std
fcmovne
pusha
xchg
xchg
jns
enter
pop
rol
in
adc
mov
sub
rol
(bad)
adc
sahf
mov
jne
gs
pop
ror
push
pop
or
ins
(bad)
out
push
(bad)
sub
mov
and
mov
movs
push
popa
adc
mov
jmp
xor
test
ror
mov
pop
cwde
ret
dec
inc
pop
adc
in
sub
lods
test
jg
cmp
or
and
ins
cmps
jmp
sbb
push
call
mov
idiv
in
ja
push
fs
repz
in
and
pop
xor
sbb
stos
clc
mov
jae
dec
loop
inc
mov
xchg
inc
das
add
or
jo
into
fild
loope
jno
add
repz
push
outs
pop
mov
ror
mov
repnz
inc
in
fndisi(8087
xchg
cmp
aaa
repz
cmp
es
out
sbb
jge
icebp
movs
push
test
pop
push
imul
xchg
ins
push
out
fabs
hlt
cmps
enter
dec
jp
retf
sbb
xchg
push
lea
int
frstor
lods
imul
push
mov
fist
cmp
call
and
and
out
cmc
ds
lods
fidivr
xor
sub
or
stos
inc
out
cmp
clc
dec
or
inc
out
or
sub
dec
xor
mov
inc
add
xchg
jp
and
sub
outs
std
jmp
into
sub
mov
mov
ror
addr16
push
pop
inc
arpl
in
pop
retf
gs
sbb
cmps
add
lods
mov
adc
mov
sub
sti
test
pusha
add
aad
cld
push
sbb
dec
xchg
fwait
mov
mov
or
mov
(bad)
mov
popa
iret
jae
rol
sbb
push
cmp
sbb
outs
jp
inc
sub
cs
and
sbb
cdq
(bad)
jne
or
cld
inc
les
ret
repz
imul
inc
mov
iret
cmc
add
sub
mov
aas
ds
call
sub
(bad)
jo
loopne
int3
or
(bad)
mov
and
ds
std
mov
add
adc
push
push
sub
inc
sahf
fnstenv
push
stos
movs
cmps
cli
test
into
dec
push
or
mov
inc
mov
cmp
add
lea
loopne
test
hlt
stos
mov
stos
push
sbb
bound
enter
xchg
sti
das
sbb
lock
cwde
movs
(bad)
bound
push
pop
sbb
aaa
adc
pop
jp
shl
mov
int
nop
pop
or
xor
loope
xchg
pop
push
lahf
push
mov
loope
xor
pop
xor
dec
test
cmps
clc
fnstsw
dec
test
adc
shl
cmps
(bad)
adc
dec
stos
xchg
add
aam
xchg
cmp
je
stos
and
adc
cmp
mov
pop
scas
or
fisub
rol
cmp
idiv
scas
push
icebp
mov
push
or
fld
dec
(bad)
sbb
stos
bound
mov
mov
inc
sub
ins
shl
pop
push
jmp
gs
lock
nop
pop
in
sbb
daa
cld
xor
pop
dec
xor
shr
or
cmps
rcr
xchg
add
cmp
cmps
mov
pop
xchg
clc
inc
push
sti
xor
dec
mov
jb
pop
xchg
lahf
aas
call
xchg
loope
scas
mul
sbb
shl
daa
or
pop
sbb
xor
arpl
lods
mov
or
fld
mov
push
icebp
mov
mov
jmp
test
aaa
out
mov
pop
jp
mov
inc
neg
mov
add
mov
retf
ja
repnz
test
mov
or
(bad)
in
inc
sahf
aad
cmp
das
sub
test
je
cld
pop
push
pop
push
ror
or
mov
ret
pop
lds
mov
push
add
xchg
sbb
lods
adc
dec
sub
and
sti
sbb
push
jns
pushf
sar
loope
repnz
xor
shl
xchg
pop
ja
and
adc
loop
nop
inc
mov
dec
add
in
mov
cmps
ds
inc
stos
inc
iret
adc
dec
or
test
addr16
cdq
dec
repnz
sar
mov
repnz
and
in
pop
fnstcw
stos
lods
fmul
les
shl
xchg
addr16
xchg
mov
add
repnz
out
iret
jle
xchg
hlt
retf
sti
ror
jg
outs
rcl
push
xchg
mov
and
dec
ins
das
or
inc
cmp
add
std
cmp
xlat
adc
sub
mov
aaa
mov
cmp
mov
cmp
repz
add
loope
xchg
dec
cdq
outs
enter
and
sbb
int3
mov
pop
shr
mov
aas
mov
mov
mov
int3
sub
inc
sbb
fimul
fsubr
outs
inc
jl
add
cmp
dec
jmp
imul
xchg
imul
cli
and
inc
pusha
pop
stc
jmp
out
add
or
movs
(bad)
xlat
mov
mov
rcr
jo
in
shr
and
mov
mov
mov
lock
push
push
hlt
jg
loope
das
jmp
or
stos
test
aaa
xor
lds
idiv
popa
ins
imul
and
adc
dec
pop
call
ss
jecxz
fnstcw
stc
pop
stc
test
inc
cmp
sti
push
leave
arpl
fadd
(bad)
xchg
sti
dec
mov
pop
xchg
frstor
jbe
inc
xlat
popa
mov
dec
xor
sbb
ja
cmp
xor
and
xchg
sub
or
cmps
and
sub
ficom
xchg
xor
rcl
dec
pop
imul
aam
lods
push
imul
shr
test
(bad)
adc
cld
int
dec
lea
xchg
jp
sbb
inc
mov
test
lea
mov
mov
push
in
daa
mov
ja
(bad)
shl
sub
dec
shl
(bad)
sbb
xor
aas
mov
and
inc
and
xor
repnz
loopne
retf
mov
mov
mov
shl
inc
cmp
mov
jbe
adc
mov
ja
out
shl
sbb
(bad)
ins
fs
shl
dec
push
imul
aad
stc
shufps
out
cdq
rcl
mov
lods
and
xor
adc
and
jne
pop
call
mov
call
xchg
push
dec
pop
mov
pop
dec
or
popa
push
inc
cmp
mov
sub
or
pop
bound
sbb
inc
mov
push
xor
mov
mov
(bad)
cli
nop
sub
adc
push
dec
jnp
lock
jne
cmp
inc
and
add
sub
jbe
popf
ds
cmps
add
pop
movs
mov
mov
adc
inc
xchg
jbe
xor
jbe
xor
aaa
xchg
outs
fist
mov
add
jecxz
or
call
or
dec
sbb
or
push
adc
xlat
sbb
mov
enter
leave
sub
jns
adc
inc
push
xor
adc
or
daa
push
pop
pushf
jae
ss
cmp
xlat
add
popa
lods
pop
div
xchg
clc
mov
test
push
fdivrp
icebp
ret
push
adc
in
push
xor
test
rcl
not
pop
fiadd
fsub
popa
and
jmp
sahf
in
or
jne
test
mov
inc
mov
xchg
pop
ja
and
mov
sub
mov
jecxz
rol
aam
nop
xchg
daa
pop
stos
jns
cld
popa
adc
xchg
mov
inc
iret
pop
dec
jb
xchg
xor
mov
call
inc
mov
inc
dec
xchg
arpl
out
aad
loopne
rcr
cmc
jnp
xchg
sbb
loopne
xchg
cmp
cmp
cdq
xor
or
mov
shr
shr
sub
cdq
dec
cli
add
cmp
in
aas
std
dec
enter
int
movs
cmp
xor
fld
push
ja
leave
mov
les
fidivr
mov
xlat
rcr
out
push
xchg
and
ja
mov
push
lea
sub
(bad)
mov
xor
mov
jle
jmp
fcmove
outs
dec
(bad)
jecxz
stos
sub
clc
mov
and
shr
mov
scas
lods
xchg
sti
int
push
ins
mov
retf
mov
outs
sbb
daa
xchg
ins
mov
jnp
or
push
jo
jmp
mov
das
sub
lahf
and
ds
or
movs
jl
daa
repnz
sbb
adc
scas
xor
aas
xchg
sbb
fstp
xchg
xchg
inc
ret
test
stos
sub
add
xchg
xchg
mov
sub
pop
mov
(bad)
retf
aaa
sti
std
push
xchg
sub
ror
xchg
dec
or
cmp
(bad)
mov
aaa
mov
and
(bad)
cmp
out
jge
mov
push
mov
add
sbb
push
pop
adc
or
mov
pop
les
inc
pop
repnz
adc
sbb
(bad)
int
(bad)
repz
sbb
or
cli
push
cmp
cmp
cs
repnz
push
ins
rcl
outs
fst
mov
fiadd
pop
xlat
mov
xchg
shr
or
outs
hlt
mov
mov
fnstsw
dec
jg
mov
(bad)
repz
sub
mov
xchg
test
fnstcw
add
adc
fnstsw
scas
leave
test
scas
popf
or
icebp
sbb
xchg
mov
repnz
push
add
iret
push
addr16
not
scas
fs
push
gs
arpl
aad
sbb
sbb
and
lods
sub
mov
mov
adc
sub
daa
jo
mov
inc
xchg
sbb
dec
mov
push
cmp
xor
xchg
jmp
frndint
out
ret
in
mov
fidiv
pushf
retf
outs
xchg
movs
in
mov
ret
(bad)
movs
enter
rcl
sbb
fimul
jmp
jns
hlt
xchg
pusha
add
jo
inc
mov
xlat
sub
wbinvd
repnz
inc
fistp
sti
(bad)
shl
pop
popa
cmc
fs
add
xchg
bound
or
or
cs
cmp
cli
push
cmps
add
shl
adc
rcl
fcmovnu
add
mov
mov
inc
into
add
mov
pop
add
jg
or
mov
inc
retf
out
shl
mov
enter
fsubr
pop
stc
imul
sbb
fs
movs
scas
cmp
sbb
popa
add
jmp
les
inc
mov
inc
jmp
pushf
std
ror
dec
mov
mov
fwait
xchg
dec
jle
cld
ror
dec
or
pushf
push
mov
out
iret
and
lds
repz
test
jp
and
fwait
jbe
sbb
mov
(bad)
jecxz
jne
xchg
mov
dec
cs
ins
popf
outs
cmp
jecxz
stos
sar
pop
nop
mov
icebp
push
dec
shr
les
jmp
ficom
outs
mov
cmp
stos
out
sbb
xchg
ds
mov
pop
or
call
loopne
cmp
retf
in
add
bnd
pushf
ss
add
rcl
adc
enter
iret
sbb
ror
dec
inc
(bad)
ins
fmul
push
leave
add
addr16
into
sbb
or
inc
sbb
rol
add
mov
imul
xor
mul
shl
outs
scas
scas
mov
pop
shl
or
enter
fdiv
fs
pushf
mov
lds
dec
outs
pop
in
out
(bad)
fdivr
ja
scas
and
je
fidivr
jecxz
mov
mov
jae
or
ja
fidivr
bound
popw
pop
(bad)
jbe
pop
mov
(bad)
int3
pop
pop
fs
retf
push
adc
repz
fstp
retf
push
mov
stos
daa
aad
xor
and
lahf
ret
add
jno
mov
or
inc
fst
(bad)
loope
mov
pop
dec
or
mov
jl
repz
in
fcomi
push
mov
or
call
imul
xor
mov
jnp
and
mov
push
sbb
mov
stos
xchg
rcl
pop
ins
and
call
inc
sbb
xor
mov
push
pop
jmp
test
stos
adc
stc
pusha
inc
push
mov
xor
int3
xor
jnp
mov
xor
inc
mov
icebp
adc
pop
out
and
loop
push
pop
std
(bad)
popf
movs
mov
mov
dec
sub
shl
xchg
and
pop
add
jecxz
and
sbb
imul
or
push
ficom
cwde
push
mov
in
pop
xchg
mov
pop
sbb
inc
xor
cs
push
cmc
data16
pop
mov
aam
scas
inc
mov
xor
xor
jmp
test
call
mov
pop
jecxz
int3
daa
in
xor
or
mov
push
jns
call
aaa
xchg
cli
(bad)
test
xor
push
xor
ja
jne
gs
or
imul
arpl
xchg
pop
sbb
add
xchg
inc
test
xstore-rng
cmps
inc
pop
adc
push
stc
and
inc
pop
inc
cmc
(bad)
(bad)
retf
imul
sbb
xchg
popf
pushf
inc
fs
loope
out
add
fldenv
(bad)
push
jecxz
or
repz
or
test
ja
mov
push
mov
lds
pop
fcmovnbe
push
rol
icebp
call
ja
rcr
sbb
adc
sub
jle
xchg
and
mul
or
and
out
and
(bad)
arpl
push
repz
adc
stc
daa
cmc
cmp
sbb
adc
inc
aas
int
dec
pop
inc
imul
mov
jle
jns
add
inc
(bad)
lods
(bad)
sbb
push
nop
jne
stos
xor
mov
shr
push
cmc
push
imul
sub
pop
outs
mov
xchg
arpl
xor
push
sub
imul
sar
add
adc
sub
mov
and
test
shl
mov
outs
jno
sahf
aad
xchg
mov
or
push
jno
push
sahf
push
xor
loopne
pop
push
notrack
call
push
mov
out
inc
dec
loop
and
psrld
fbld
inc
lds
mov
dec
cli
mov
rep
add
(bad)
pop
into
pop
or
cmps
xor
mov
iret
call
(bad)
jno
jl
loop
inc
cmc
cmp
or
enter
or
into
in
popa
loopne
retf
adc
dec
(bad)
fmul
cmp
push
sti
fs
idiv
dec
out
jmp
sti
xlat
in
pop
fbld
pop
shr
add
push
ficom
sti
outs
sahf
enter
pop
jmp
rcr
shl
test
cmp
ss
aaa
(bad)
ret
cs
pop
mov
(bad)
cmp
stos
pop
out
pop
inc
inc
xchg
jo
and
inc
lock
xor
sbb
inc
mov
push
aam
adc
cmp
mov
push
mov
ss
jmp
aad
leave
or
ds
jns
aad
out
in
sbb
(bad)
cmp
js
jmp
adc
push
iret
fiadd
sbb
push
repz
pop
test
xchg
call
arpl
repz
pop
sar
in
and
jecxz
mov
mov
pop
std
mov
(bad)
cld
leave
push
lock
(bad)
retf
fnstenv
aad
out
sahf
and
sbb
mov
movs
(bad)
aad
mov
out
xor
popf
xor
fisttp
sar
test
inc
or
mov
adc
popa
pop
test
data16
loop
inc
sbb
ret
adc
mov
lea
push
xchg
lds
mov
mov
mov
repnz
xor
sti
loop
pop
out
sbb
test
push
add
dec
adc
jp
and
xchg
out
mov
and
push
mov
outs
fstp
jo
push
clc
test
in
sub
xchg
dec
arpl
pop
lds
pop
leave
dec
jno
cmp
or
out
and
rol
movs
mov
mov
mov
inc
shl
adc
sub
cmp
sbb
xchg
inc
pop
sub
or
adc
dec
pop
stos
xchg
sub
dec
or
xchg
lods
inc
push
or
xchg
jge
inc
sti
fst
xchg
sbb
popa
sub
mov
shr
push
mov
imul
lods
loope
or
movs
mov
xchg
push
dec
(bad)
and
cmp
or
shr
pop
movs
mov
inc
movs
rol
add
div
jp
imul
int
mov
sti
inc
mov
pop
and
and
les
and
or
mov
xchg
mov
sbb
inc
ins
ins
and
scas
fst
aaa
xchg
push
int3
and
inc
retf
test
ins
fsubr
sahf
cmp
aad
xchg
call
xchg
mov
xchg
adc
adc
int3
fdivr
into
outs
js
adc
psrlw
dec
pusha
inc
lods
cli
jae
add
push
sub
repnz
xchg
mov
jno
into
adc
(bad)
mov
and
ret
mov
arpl
mov
lea
add
pop
sbb
fwait
xchg
mov
int3
push
lahf
sbb
test
hlt
mov
mov
nop
das
mov
mov
mov
xchg
mov
popa
dec
push
ds
popf
mov
loope
rcr
pop
out
mov
adc
pop
and
cmp
in
mov
mov
and
cwde
add
(bad)
call
(bad)
inc
push
sbb
fwait
or
lods
sbb
and
or
std
fdiv
jge
mov
cmc
dec
movs
mov
test
jle
mov
mov
arpl
mov
pushf
add
std
or
popf
mov
mov
cli
sub
in
shl
call
sub
xor
dec
jmp
aaa
and
js
mov
or
sti
out
mov
add
in
shl
sub
in
stos
mul
sti
hlt
xchg
outs
xor
mov
imul
jmp
jne
lock
dec
fistp
stc
aam
or
add
inc
jge
arpl
lahf
into
mov
cmps
push
dec
jle
jo
sar
cmp
inc
lds
mov
addr16
add
loopne
lods
outs
cmp
ds
and
sub
das
adc
pop
fidivr
stos
adc
mov
fs
push
ins
inc
popa
or
cmps
ret
jg
dec
pop
loope
fimul
cdq
call
pop
jo
jg
sar
sbb
mov
mov
push
jge
sub
rcl
in
add
in
xor
xchg
mov
jmp
xor
sbb
adc
jb
ins
jae
fldenv
push
enter
inc
cmp
xor
ret
adc
cdq
scas
int
push
add
inc
mov
in
shl
test
sub
xor
loope
xor
ja
xchg
leave
cdq
les
out
jno
inc
cli
pop
push
push
outs
fbld
movs
mov
pop
test
stos
xchg
in
cli
pop
mov
jecxz
mov
not
shr
or
out
adc
(bad)
repnz
add
mov
sub
xor
add
push
xor
xchg
ret
lahf
in
jno
pop
mov
lods
mov
dec
jmp
ins
mov
mov
xchg
mov
and
xor
fisub
sar
sbb
cmp
(bad)
lods
mov
sbb
mov
xchg
ret
das
adc
or
sbb
test
xor
pop
mov
data16
js
adc
push
enter
rcl
sar
lods
in
jnp
outs
mov
imul
enter
imul
popfw
jnp
adc
sahf
icebp
inc
or
ds
pusha
adc
movs
pop
pop
je
clc
fs
ja
adc
stc
sar
adc
cli
and
ret
nop
icebp
sbb
add
fldenv
cmps
int
dec
mov
out
out
dec
inc
or
xchg
mov
ror
loop
mov
mov
mov
jmp
in
xchg
mov
xlat
fisubr
xchg
in
mov
popf
(bad)
cmp
mov
addr16
inc
retf
push
das
(bad)
test
sbb
adc
push
js
jnp
push
jge
jnp
loopne
push
adc
mov
lods
(bad)
pop
push
push
push
int
stos
sbb
xchg
fwait
lds
imul
pop
(bad)
mov
mov
in
in
xchg
das
jo
dec
sahf
jne
push
int
cmps
cmp
retf
inc
call
xlat
mov
mov
pop
cmc
pop
push
inc
call
push
mov
dec
dec
adc
sub
popa
stos
mov
sub
sub
pop
data16
es
or
test
jp
gs
cs
mov
movs
cmp
fnsave
jle
mov
fcmovnb
std
mov
push
or
jns
std
push
popf
icebp
mov
repnz
push
push
mov
push
(bad)
call
pop
clc
xor
iret
pop
dec
in
push
cmc
xchg
xchg
jecxz
mov
pop
jp
mov
inc
(bad)
mov
rcr
repz
pop
mov
jp
push
mov
jmp
sbb
mov
dec
cmp
popa
mov
xchg
je
pop
cld
xor
loop
imul
dec
sbb
adc
call
inc
int
inc
ins
adc
mov
add
int3
push
std
js
enter
sub
xchg
lds
scas
(bad)
div
nop
mov
add
call
adc
xchg
(bad)
ror
push
sbb
cmps
fistp
sar
sub
daa
jae
ret
mov
fstp
rcl
sub
push
sbb
fsubr
les
push
lods
pop
stos
mov
cli
stc
inc
ja
(bad)
cmp
xchg
cli
pop
cmps
ficom
lea
xor
fs
inc
pushf
jg
in
push
cmp
arpl
shl
mov
dec
mov
fdiv
daa
das
jecxz
xor
mov
out
mov
mov
(bad)
cdq
inc
mov
repz
xchg
mov
ror
mov
jecxz
push
push
pop
loop
(bad)
div
sahf
aas
leave
mov
not
aaa
sub
dec
(bad)
inc
pop
xor
cli
mov
cwde
adc
xor
pop
popf
stc
shr
xor
pop
mov
add
repnz
daa
inc
mov
sbb
add
fisubr
mov
cmp
jbe
stos
loopne
adc
cmps
or
mov
pop
mov
movs
push
fstp
mov
push
jo
jbe
stc
jecxz
jmp
xchg
mov
sbb
jno
out
loopne
stos
lods
mov
into
addr16
xchg
adc
sar
stos
xor
inc
(bad)
jmp
mov
push
bound
add
mov
inc
jmp
jle
xor
fs
test
inc
dec
inc
add
std
xchg
(bad)
cmp
jmp
aad
and
jb
inc
mov
dec
add
dec
icebp
mov
div
ja
adc
mov
xchg
fisubr
push
mov
test
enter
dec
retf
out
ja
sbb
xor
inc
pusha
jb
jecxz
mov
dec
jg
scas
mov
int
mov
add
in
movs
xchg
sbb
gs
in
int3
out
call
mov
inc
sbb
not
inc
cmps
bound
ins
jge
out
repz
imul
pop
fild
lds
ins
je
hlt
mov
and
push
mov
push
retf
mov
loope
ss
int
addr16
mov
test
add
xor
(bad)
jge
mov
icebp
cmp
pop
or
repz
jo
mov
imul
gs
mov
inc
xchg
popa
mov
mov
movs
setae
cmp
mov
jb
lods
lahf
imul
add
push
jle
xchg
(bad)
rcl
push
jb
fs
dec
pop
fwait
imul
cdq
and
cdq
cs
mul
inc
repnz
aam
sbb
mov
into
jo
xchg
mov
shl
fldenv
adc
xlat
xor
cwde
hlt
test
retf
adc
(bad)
or
push
enter
mov
cmps
mov
les
sahf
xor
xlat
shl
punpckhdq
(bad)
out
xor
inc
(bad)
mov
std
cld
sub
jmp
jbe
pop
add
fwait
or
mov
push
and
add
mov
inc
push
sub
mul
in
ror
pop
lods
es
add
jbe
(bad)
mov
in
addr16
inc
rcl
pushf
jae
test
mov
jmp
adc
push
mov
std
shr
mov
adc
(bad)
retf
retf
jl
sbb
sbb
push
adc
aad
or
call
or
inc
mov
mov
or
data16
in
test
mov
movs
adc
cmp
or
sbb
js
cs
es
mov
mov
stc
ja
mov
pusha
cmc
jecxz
ror
cmp
add
leave
(bad)
jmp
cs
sahf
in
fadd
mov
ds
movs
dec
pop
mov
cwde
xchg
mov
xchg
fsub
pop
xor
js
inc
iret
test
inc
xchg
mov
push
fwait
push
cmps
mov
cmp
xor
and
jp
mov
inc
mov
adc
stos
dec
(bad)
and
sahf
sub
mov
xor
inc
out
push
mov
xchg
sahf
sub
sbb
xchg
inc
sub
push
dec
pop
(bad)
mov
push
and
test
mov
jg
and
gs
and
stos
pop
sbb
cli
and
add
(bad)
repnz
jmp
cld
and
js
hlt
ja
mov
sub
push
rol
fistp
mov
pusha
cmp
and
out
neg
dec
ror
(bad)
sub
ja
in
aad
ins
rcl
ins
inc
dec
adc
or
mov
xchg
inc
push
ror
imul
mov
push
out
out
es
fisub
mov
xor
out
xchg
cmps
xchg
adc
adc
jl
pop
loope
lods
xor
movs
adc
push
cs
xchg
mov
push
sar
jbe
push
ret
mov
sbb
call
adc
fcom
hlt
mov
fnstenv
daa
push
push
lock
pop
jnp
mov
enter
ja
jns
cs
and
mov
icebp
out
scas
(bad)
das
xchg
or
xor
popf
dec
xchg
mov
sbb
jne
adc
adc
adc
sub
mov
mov
loopne
cli
cdq
mov
sub
data16
mov
push
popf
fstp
add
rcl
push
xchg
dec
sub
mov
and
adc
pop
cli
xor
jo
loope
nop
jbe
aaa
cmp
les
sbb
pop
cmp
rol
loopne
out
xchg
inc
mov
xchg
cmp
das
inc
xor
imul
loopne
push
and
xchg
in
pusha
fdivr
cmps
dec
loope
jecxz
retf
xchg
stc
sub
fidivr
pop
jge
iret
inc
and
(bad)
push
(bad)
(bad)
cli
mov
sub
mov
xchg
pop
sbb
pop
enter
pop
sub
loope
(bad)
sbb
push
xor
and
cli
enter
mov
retf
jno
or
shl
imul
mov
push
(bad)
and
stos
fbld
in
pop
lahf
repnz
nop
shr
add
stos
xchg
sub
jl
inc
and
(bad)
call
or
jp
xchg
sub
movs
push
test
mov
movs
jb
fdivrp
outs
mov
lahf
or
or
mov
pusha
mov
jl
outs
sbb
fist
arpl
dec
mov
jne
in
fwait
dec
xlat
out
dec
out
push
ror
cmp
mov
retf
rcr
cmp
in
and
mov
(bad)
push
call
or
sub
test
mov
push
xor
cmp
aam
cmp
sbb
shr
push
test
xchg
mov
jns
jae
dec
mov
leave
(bad)
jb
sbb
mov
fdivr
in
gs
data16
repz
cwde
dec
or
sti
leave
sbb
sbb
mov
jb
ja
mov
jae
arpl
push
and
loop
fisubr
ret
dec
sub
pop
mov
inc
fs
pop
lea
jns
das
test
fldcw
jg
lods
xchg
sbb
retf
add
pop
xor
adc
pop
(bad)
nop
sbb
xchg
(bad)
fld
call
out
cld
cli
mov
cmps
imul
fs
cs
ficomp
sti
push
int
or
jl
mov
mov
and
into
add
bnd
xlat
aam
movs
sub
add
or
fsub
inc
inc
dec
jne
and
mov
addr16
jb
jbe
hlt
je
xchg
add
mov
cmp
xchg
pop
std
pop
stos
scas
xchg
out
hlt
xor
std
add
cli
push
jno
fistp
push
xchg
fcomi
mov
sub
push
cmp
cmp
ficom
ins
pop
push
xor
rol
out
jo
sub
jmp
mov
das
mov
push
enter
mov
dec
and
cmc
aam
push
sbb
lods
xchg
daa
mov
adc
fiadd
sbb
stc
ret
dec
pop
cli
popa
scas
loop
aam
addr16
lea
pop
xor
push
adc
cmp
ret
outs
mov
jae
push
pop
push
add
leave
fiadd
cmp
cwde
xlat
bound
jae
test
xor
xor
pop
inc
or
ret
jecxz
aam
(bad)
jo
leave
test
loop
stos
lock
lock
jge
stc
mov
gs
popf
in
aas
jmp
mov
push
jb
mov
cs
xor
out
out
jbe
clc
repz
clc
dec
cmp
mov
push
lods
cmc
adc
fld
mov
outs
fisubr
jno
add
inc
stos
int
call
sub
mov
arpl
int3
movs
adc
ret
sbb
iret
dec
dec
cmps
inc
(bad)
(bad)
adc
adc
jge
xchg
add
outs
mov
pop
and
mov
fcmovnu
add
fild
call
pop
jp
push
dec
dec
xchg
inc
pop
jne
push
dec
sub
or
push
cs
repnz
test
fist
sub
sub
push
adc
cmp
xlat
adc
lock
xchg
adc
in
cmp
aas
mov
ds
and
hlt
jo
add
(bad)
cwde
adc
repnz
add
mov
outs
jp
adc
popa
(bad)
cmp
jo
dec
pop
fs
clc
ja
inc
pusha
cmps
out
idiv
xchg
cmp
das
je
or
xchg
pop
push
mov
es
and
sbb
xchg
jge
adc
lods
pusha
outs
jge
jne
shl
jmp
jnp
(bad)
in
dec
(bad)
push
inc
data16
mov
adc
dec
mov
in
mov
cdq
dec
sbb
inc
mov
mov
add
mov
rep
aam
pop
dec
xor
xor
xor
pop
xor
push
ja
pop
push
jle
lea
mov
(bad)
loopne
jae
arpl
push
ins
dec
test
add
push
jecxz
mov
jo
sbb
cmp
clc
jmp
rol
aaa
dec
and
cmps
movs
xchg
dec
push
inc
adc
jae
stos
xchg
xchg
sti
cmps
jns
mov
xchg
xor
sub
out
jbe
cs
adc
sbb
mov
call
cmp
nop
out
scas
fist
pop
or
rcl
inc
xchg
fldenv
int3
pop
sub
retf
sub
jl
shl
jno
cmps
cmp
cmp
imul
pop
enter
sahf
inc
xor
inc
or
jmp
sub
jl
pop
popa
clc
rcl
sub
mov
jp
ret
(bad)
sub
(bad)
in
jmp
add
sahf
lods
xchg
iret
movs
stos
call
xor
mov
loope
adc
lahf
inc
xor
cmp
shl
push
es
or
shl
mov
dec
or
arpl
and
pop
xor
mov
retf
adc
jne
neg
outs
nop
idiv
jae
test
(bad)
inc
enter
and
pop
add
loop
sbb
push
jp
pop
daa
sysret
xor
mov
jg
fisttp
xor
ja
imul
jecxz
and
xlat
xor
xchg
in
(bad)
dec
sbb
mov
xchg
mov
mov
or
aaa
nop
push
movs
inc
retf
inc
(bad)
xchg
adc
sub
fnstsw
mov
and
stc
(bad)
(bad)
mov
ror
mov
sbb
stc
les
mov
enter
xchg
jp
call
sar
sub
mov
imul
mov
inc
mov
lea
aam
call
mov
in
(bad)
push
jbe
sbb
retf
lods
adc
mov
sub
push
(bad)
je
(bad)
mov
and
imul
push
test
or
inc
add
jne
in
jae
repz
push
ins
bound
pop
fcmovb
mov
stc
inc
hlt
test
ret
rcr
adc
add
lahf
push
mov
inc
imul
out
inc
pop
ss
jge
std
out
push
and
mov
mov
sbb
pop
shl
lods
or
clc
aad
cdq
cmps
xchg
bound
retf
or
mov
sbb
sbb
leave
addr16
aas
in
repnz
movs
dec
dec
sub
js
(bad)
adc
push
scas
rol
adc
je
jne
jno
in
mov
loop
stos
rcr
sbb
dec
xor
test
xor
in
add
xchg
(bad)
cmps
test
xchg
sbb
mov
sub
(bad)
in
mov
movs
into
jp
push
out
push
dec
inc
int3
sahf
stos
int3
and
into
data16
rcl
(bad)
dec
scas
ss
int3
lods
cld
(bad)
dec
xor
lahf
sbb
(bad)
pushf
cmp
je
test
mov
arpl
ja
xor
outs
add
pusha
iret
cmp
sbb
jae
and
mov
repz
sbb
cs
xchg
pop
ss
sub
sbb
retf
dec
in
inc
and
mov
shl
fcomip
mov
int3
push
mov
pushf
int3
out
pushf
popf
push
repnz
cwde
outs
push
and
xchg
fcomip
loope
dec
ficom
push
fsub
push
push
repz
cmps
mov
or
lds
add
inc
jo
or
push
repz
ret
mov
popf
sub
sar
(bad)
mov
inc
sbb
outs
mov
out
push
cmp
imul
cdq
lea
loop
cli
adc
mov
or
pop
and
das
scas
xor
or
xor
jno
xchg
dec
cmps
bndstx
fist
daa
dec
add
test
push
(bad)
dec
je
ins
shr
jecxz
jbe
adc
inc
or
jecxz
gs
lods
jnp
retf
ret
jb
outs
rcr
sbb
popa
(bad)
xlat
out
retf
xchg
add
inc
loopne
sbb
adc
out
(bad)
jl
sar
cmps
outs
inc
mov
cmps
ss
xlat
enter
pusha
enter
and
movs
mov
xchg
test
out
sub
lods
sub
mov
mov
or
add
lds
xor
movs
jo
jge
add
jmp
sub
movs
adc
push
or
push
scas
cdq
cmc
or
dec
clc
jg
int
cmp
inc
dec
mov
jg
push
push
xchg
bound
or
mov
movs
into
add
sar
enter
sub
(bad)
inc
ret
pop
add
mov
pop
les
push
or
lock
imul
xchg
sub
xor
add
mov
dec
inc
(bad)
pop
cmps
leave
cmp
fwait
mov
inc
jl
(bad)
jns
push
test
mov
lods
scas
cmp
jp
mov
jno
or
fisubr
mov
pop
push
mov
pop
(bad)
int
scas
iret
stc
fucomp
enter
pop
dec
mov
clc
call
dec
jge
mov
stos
and
mov
push
loopne
mov
adc
mov
xor
and
add
rcl
mov
mov
mov
mov
cmp
push
xor
pop
loop
pop
aad
dec
clc
xor
cli
mov
inc
mov
push
xchg
fcom
dec
rcl
cmc
inc
es
sub
mov
or
sbb
cmc
inc
inc
sbb
loope
push
cmp
movs
pop
jnp
mov
retf
and
pusha
mov
sbb
ret
sbb
addr16
icebp
lahf
add
daa
jmp
icebp
xchg
dec
mov
mov
in
push
sub
pop
es
(bad)
jl
shl
adc
add
cmps
lds
push
scas
xor
in
pop
pop
and
lods
dec
popf
paddusb
stos
dec
cmp
mov
add
xor
jge
jne
lock
imul
out
test
imul
or
ret
push
movs
mov
js
ins
les
sbb
mov
aas
or
dec
dec
lds
xor
imul
out
imul
adc
sub
and
cmp
cmp
loop
inc
je
popf
hlt
in
sbb
inc
aam
inc
pop
mov
mov
int
or
loop
repz
int
mov
xchg
xchg
ret
js
in
icebp
pusha
jo
leave
fcom
or
xchg
jno
xchg
popf
ins
punpcklwd
rcr
push
scas
and
bound
inc
cs
dec
cmp
xor
mov
add
and
(bad)
fisub
(bad)
std
sub
cli
fisub
(bad)
loop
jmp
add
push
mov
xlat
sub
adc
shl
cmp
pop
sbb
out
adc
(bad)
push
jbe
xchg
mov
mov
mov
mov
ficomp
jns
sahf
xchg
jge
push
call
sbb
mov
mov
arpl
rcr
enter
rcr
mov
es
push
mov
jnp
(bad)
sbb
cwde
out
les
iret
or
movs
pop
sub
es
stos
sub
and
mov
mov
xchg
and
add
sub
xchg
lock
jl
shr
sbb
sahf
xchg
sbb
push
cmp
jg
inc
adc
ret
(bad)
push
push
sahf
pop
movs
or
out
addr16
test
sti
ror
fisttp
test
mov
adc
das
sub
sub
mov
loopne
cmc
xor
or
(bad)
fnstcw
sbb
popa
adc
sti
xor
and
stos
arpl
(bad)
test
in
push
pop
movs
sbb
push
sub
daa
test
scas
inc
out
arpl
or
clc
adc
jmp
les
mov
fwait
aad
sub
(bad)
in
pop
pusha
push
cmps
mov
or
push
adc
jp
pop
fdiv
lock
nop
mov
fld
xchg
xchg
lea
xchg
jno
fisub
imul
in
mov
push
adc
pop
push
pop
neg
cmc
lahf
daa
lea
jge
mov
or
sti
push
xor
retf
and
push
mov
xor
sbb
es
add
xchg
jle
push
out
out
pop
jle
pop
hlt
jl
jne
jae
aaa
xchg
rcl
dec
and
sub
jge
pop
popf
and
int3
out
test
jp
add
xor
(bad)
mov
addr16
jl
(bad)
int3
inc
add
jecxz
dec
push
dec
pop
jbe
cmp
adc
xchg
mov
pop
ja
test
push
pop
(bad)
icebp
sbb
sti
pop
aam
aas
add
or
fisub
(bad)
lds
dec
daa
add
push
push
cdq
es
mov
add
fs
adc
add
pop
in
shl
icebp
cdq
dec
mov
or
int3
fadd
lods
sbb
push
mov
cmp
and
hlt
ds
outs
jo
dec
and
pop
fsub
outs
and
push
pushf
cmp
ins
not
repnz
aad
popf
mov
and
popf
xchg
cmp
enter
fcomp
(bad)
std
mov
pop
int3
stos
cmp
dec
xor
sbb
movs
xor
or
pushf
pop
xchg
xchg
ret
mov
pusha
cmps
and
mov
sub
iret
test
and
aas
leave
mov
adc
popf
mov
inc
adc
mov
xchg
test
jnp
push
jecxz
dec
div
inc
xchg
cmps
call
cmps
pop
cmc
jne
adc
pop
mov
mov
jge
pop
out
mov
sbb
jmp
ret
add
xchg
out
dec
dec
rcr
int3
clc
adc
sti
cld
pushf
bswap
aas
sub
mov
adc
xchg
dec
lods
lods
lods
jnp
in
mov
mov
ret
pop
push
dec
test
fimul
rcr
retf
icebp
cmp
pushf
adc
push
jge
ss
mov
fstp
sub
push
fcom
mov
es
or
fmul
sbb
js
mov
rol
int
xor
in
repnz
mov
sub
retf
lds
pushf
inc
push
jno
out
mov
xchg
dec
xchg
sub
pop
push
and
popf
mov
dec
pop
mov
bound
jns
xchg
adc
push
out
dec
sar
(bad)
ins
cld
stos
hlt
and
stos
mov
push
xor
push
add
pop
cs
mov
pop
add
ror
fcomp
scas
or
and
sbb
es
cmp
adc
ins
imul
inc
rcr
cli
imul
mov
mov
repnz
std
fs
sub
mov
jnp
adc
adc
sbb
(bad)
ficomp
cmps
je
adc
mov
or
adc
jl
fcom
push
cld
jb
call
mov
jmp
adc
ja
cmp
sbb
jg
outs
dec
push
dec
sahf
rol
ror
and
pop
loop
or
lds
push
cmps
ds
pop
jno
stos
je
div
cmps
cwde
xchg
jg
mov
or
adc
push
(bad)
fld
xor
mov
sbb
mov
mov
sub
jmp
mov
test
clc
push
xor
ja
shl
out
cmp
dec
mov
push
mov
jl
jnp
sbb
dec
inc
fchs
out
fstp
ret
in
in
sbb
test
out
mov
push
mov
addr16
mov
movs
icebp
and
mov
and
fdivr
les
gs
fwait
ins
and
ins
(bad)
dec
icebp
sub
push
test
shr
add
mov
sub
jp
xchg
jle
xchg
add
call
(bad)
pop
push
mov
mov
loopne
les
and
dec
or
mov
outs
pop
inc
mov
dec
mov
push
mov
(bad)
lahf
imul
mov
xchg
mov
cld
mov
dec
jb
test
jne
jbe
inc
push
dec
lods
repz
inc
lahf
aas
aaa
aam
xchg
in
xchg
jno
adc
pop
sti
fbld
add
imul
mov
and
(bad)
stc
aaa
jno
pop
mov
(bad)
sub
nop
xor
add
add
jle
jno
ds
xor
inc
hlt
loopne
add
idiv
pop
pop
rcl
and
cmp
or
pop
and
test
aam
dec
and
push
xor
fstp
push
in
es
inc
dec
push
stos
into
jnp
inc
and
clc
mov
es
add
lahf
repz
(bad)
xchg
xor
pop
aaa
imul
add
leave
(bad)
(bad)
test
dec
pop
sbb
inc
pusha
popa
retf
push
pusha
and
mov
push
call
mov
lock
std
mov
jae
mov
or
ja
outs
(bad)
mov
in
pushf
adc
cmp
aaa
nop
aas
retf
scas
rol
fsub
pop
mov
inc
pavgw
jl
mov
mov
push
maskmovq
div
inc
mov
or
jle
jo
xchg
mov
inc
cmp
mov
and
push
ficomp
cmc
fsub
scas
sbb
jecxz
mov
pop
ret
lods
nop
cwde
adc
cmp
jae
inc
push
aaa
cmc
and
and
and
push
inc
retf
cmp
inc
mov
adc
add
fbld
mov
rol
cmp
sub
std
mov
push
sahf
in
jno
popf
rcl
jbe
idiv
test
mov
(bad)
mov
fnstsw
out
cdq
aad
mov
retf
leave
cmps
out
enter
rcl
mov
pop
add
(bad)
lods
das
je
stos
inc
sbb
jmp
movs
std
mov
shl
mov
enter
movs
(bad)
test
retf
mov
aad
cmp
retf
adc
pop
lods
mov
cmp
cmp
sub
neg
mov
data16
mov
rol
ret
sub
sar
cld
in
mov
pop
bound
pop
aad
xchg
sahf
ss
loope
popa
xchg
aas
sbb
test
jmp
aad
xor
ss
xchg
sahf
outs
jecxz
sub
retf
(bad)
xchg
rcr
ja
ret
repz
or
adc
lods
nop
sub
adc
lea
stos
aad
mov
push
or
dec
xchg
popa
(bad)
retf
jae
push
(bad)
push
ins
push
bts
pop
mov
adc
or
mov
dec
test
pusha
mov
sub
shl
movs
ja
loop
std
fcomp
dec
dec
outs
adc
mov
and
scas
pop
mov
jb
add
cmp
or
mov
imul
les
pop
call
nop
fdivp
dec
cmps
out
sbb
mov
pop
fucomip
sbb
ins
inc
cwde
mov
xchg
mov
push
inc
shl
mul
in
jmp
pop
stos
imul
test
loop
jno
sub
sub
repnz
dec
les
enter
sbb
(bad)
pushf
hlt
movs
adc
shl
int
into
out
fs
xchg
cmp
cs
mov
clc
or
jnp
jnp
pop
inc
lods
adc
aam
xchg
ret
test
mov
stos
or
xor
mov
in
or
into
jecxz
retf
lods
mov
(bad)
js
aad
aas
(bad)
cmp
loopne
sub
icebp
inc
or
mul
js
dec
mov
xor
fiadd
jg
out
test
push
popa
pop
add
bnd
cld
sbb
cmps
and
push
test
pop
pop
xor
imul
test
ret
or
in
xchg
or
or
jp
clc
cmc
jecxz
hlt
movs
or
iret
dec
pop
aad
aad
dec
xchg
sub
inc
icebp
scas
aam
ins
sub
mov
or
mov
imul
idiv
jp
mov
(bad)
and
(bad)
jb
mov
loopne
dec
shl
fnstsw
mov
(bad)
or
and
adc
and
sti
cmp
pop
or
aam
jo
cmp
or
in
in
mov
or
and
popf
out
mov
push
dec
jle
mov
pop
inc
sub
or
push
fidivr
sbb
xchg
adc
popf
test
sbb
mov
stos
repz
jg
and
xchg
or
fmul
push
and
xor
es
ret
aam
xchg
arpl
mov
rcl
cmp
aas
cmp
les
mov
jo
icebp
pusha
iret
add
test
sub
cmps
lock
in
lods
ins
jnp
cmc
mov
inc
adc
xor
clc
jl
inc
add
imul
jno
push
retf
ror
mov
clc
inc
mov
pop
imul
je
xlat
dec
mov
mov
ins
and
(bad)
sub
jmp
(bad)
pop
xor
push
cmp
mov
push
cmc
stc
(bad)
repnz
iret
cli
mov
fimul
jns
popa
xchg
out
outs
lahf
data16
xor
xor
pop
jge
and
push
leave
mov
rcl
inc
push
sar
and
mov
or
add
aam
int
mov
sti
inc
pop
outs
sub
add
inc
adc
scas
retf
out
sub
mov
ja
ror
dec
sar
jl
aas
add
lods
fs
dec
arpl
(bad)
ins
xor
or
inc
push
or
ds
call
inc
icebp
cmp
bound
push
cmc
daa
addr16
sbb
(bad)
jae
push
and
add
mov
mov
jge
(bad)
xor
dec
lahf
scas
test
mov
push
pop
mov
cwde
xchg
push
(bad)
cmp
dec
and
hlt
stos
and
jle
in
dec
movs
or
pop
mov
je
test
push
add
stos
hlt
xchg
sbb
js
add
jmp
mov
int3
loopne
iret
sbb
and
enter
rcr
jl
popf
jl
push
les
inc
mov
mov
sbb
fidiv
jp
xchg
mov
ret
mov
jbe
mov
push
cmps
fldcw
das
int3
xchg
fxam
sbb
push
jo
jge
pop
jg
push
cmp
aas
rcr
adc
xchg
mov
xchg
aam
aam
lods
adc
test
hlt
xchg
rcr
dec
mov
jae
imul
or
push
pop
leave
or
jle
mov
or
fadd
and
out
iret
imul
(bad)
push
loopne
adc
fsub
or
enter
pop
sub
xor
test
sbb
gs
xor
mov
mov
push
jl
dec
fs
loopne
cmc
inc
or
std
dec
das
xchg
scas
jae
mov
fist
call
cmp
dec
test
popa
adc
and
ss
dec
cmp
cwde
or
push
out
ret
cdq
push
outs
or
xor
mov
cmps
inc
imul
lds
mov
mov
stos
jb
outs
inc
mov
jb
mov
mov
mov
lahf
jbe
mov
jmp
push
ficom
jne
inc
fxch
sub
push
mov
cmp
dec
xchg
leave
push
cld
jecxz
cdq
jno
adc
ror
das
jecxz
je
call
bound
push
(bad)
sbb
(bad)
cmp
retf
xor
stos
mov
jecxz
pop
jmp
jge
fcomp
retf
sbb
adc
jecxz
in
push
jmp
std
push
inc
iret
arpl
sbb
loop
xchg
sub
es
lds
out
int3
pop
test
dec
cwde
push
xchg
rol
gs
cwde
out
push
mov
movs
mov
clc
test
and
inc
xchg
je
es
push
mov
hlt
xor
xchg
lock
imul
xlat
xlat
js
scas
cmc
mov
push
or
mul
enter
repz
lock
sbb
inc
int
dec
mov
jbe
xchg
add
mov
cmc
cdq
(bad)
push
scas
jb
mov
xor
cmp
cs
and
sub
fild
sbb
sub
int3
(bad)
rol
xchg
or
dec
inc
loop
mov
(bad)
sub
out
inc
gs
lods
push
imul
in
or
pop
push
(bad)
ret
jmp
add
inc
cs
ret
cld
mov
adc
fs
div
pop
nop
call
add
sbb
aaa
sub
mov
jnp
pop
inc
fisubr
sub
pop
adc
add
or
mov
gs
not
sbb
adc
ret
ja
(bad)
xchg
pop
sub
fmulp
adc
push
xor
(bad)
in
inc
pop
jo
adc
add
or
adc
(bad)
cli
sbb
iret
cld
dec
out
enter
dec
mov
push
adc
out
sub
pop
sbb
ins
icebp
mov
stos
nop
lods
repz
jp
repz
(bad)
and
cs
nop
push
scas
sbb
pushf
pop
mul
imul
dec
repnz
or
(bad)
fwait
in
xor
mov
(bad)
mov
and
(bad)
arpl
std
inc
xchg
add
and
aaa
xchg
dec
or
sahf
jno
in
jle
or
das
int
hlt
retf
popf
pop
xchg
nop
adc
mov
sub
mov
xchg
inc
inc
call
add
add
adc
leave
inc
mov
cmp
mov
cwde
sbb
mov
out
shl
shl
jae
sub
call
ret
imul
ret
add
test
add
sub
fs
cmp
pop
iret
and
cmp
test
cmp
js
push
adc
mov
or
cld
cmps
cmp
repz
pop
mov
aas
test
das
(bad)
iret
xchg
xchg
pop
ins
cwde
retf
push
xchg
retf
xchg
ins
sub
jb
and
xchg
cmp
push
leave
pop
push
movs
nop
repz
(bad)
test
mov
mov
sub
jo
fnstsw
mov
dec
dec
push
es
stos
push
outs
rcl
data16
popa
sub
sub
out
scas
in
jp
inc
mov
jnp
icebp
fucomp
mov
jb
mov
rol
(bad)
adc
test
inc
dec
lds
ja
inc
cmc
scas
jecxz
js
xor
cld
sbb
sti
xchg
mov
cs
jae
jns
fisub
lea
cmp
sub
jmp
js
mov
xor
or
mov
pusha
jmp
push
mov
pop
sub
add
mov
retf
sub
mov
jno
sub
jnp
std
ficomp
cwde
idiv
jmp
push
fcomp
cmps
dec
es
fld
int
es
and
mov
add
fucomip
in
adc
fisub
out
dec
add
push
sti
sar
pop
rcr
jmp
dec
movs
int3
(bad)
xor
push
into
jg
add
sbb
les
test
aaa
push
xchg
dec
xor
pop
and
std
fdiv
fldl2e
jnp
mov
iret
mov
adc
in
add
mov
mov
mov
enter
fstp
mov
int
xchg
mov
test
xlat
dec
lahf
in
xchg
lea
xchg
outs
push
rcr
and
pushf
jo
inc
mov
and
dec
mov
pop
mov
outs
or
rcr
hlt
stos
or
outs
maxps
push
inc
cmp
mov
in
mov
jae
mov
mov
ins
push
xchg
loop
xchg
cmp
(bad)
sti
jo
sub
xor
or
mov
inc
mov
cmp
mov
and
add
outs
gs
sbb
push
loope
push
adc
pop
push
fdiv
gs
adc
ja
arpl
(bad)
adc
add
(bad)
shr
sub
fnstsw
(bad)
cmova
retf
out
sbb
repz
jnp
std
push
xor
pushf
cmp
repz
xor
dec
shl
sub
push
xor
data16
mov
lahf
pusha
mov
sub
scas
aaa
(bad)
mov
mov
popf
sbb
leave
popf
dec
mov
(bad)
enter
ret
stos
movs
gs
push
add
pop
dec
ss
repz
lahf
jo
test
jo
mov
pop
jmp
cmp
stc
dec
cmc
xlat
dec
js
cli
xchg
push
mov
nop
pop
in
mov
pop
and
test
xor
fcmove
outs
aas
jno
mov
hlt
es
ror
dec
mov
fldcw
and
retf
dec
cmp
pop
cmp
push
adc
fwait
ds
jecxz
jmp
pushf
jo
(bad)
and
adc
sub
out
ret
(bad)
sbb
neg
(bad)
(bad)
inc
arpl
xchg
dec
mov
jle
adc
sbb
(bad)
push
jne
aam
out
jb
dec
xchg
sbb
adc
retf
popf
xchg
dec
mov
add
rcl
sub
adc
xor
push
jae
pusha
mov
add
lods
xchg
aam
das
call
sbb
lods
sub
mov
pop
shr
cwde
je
xlat
lds
xor
rol
call
xor
ins
sbb
lock
xchg
and
stos
(bad)
pop
test
push
pusha
xor
mov
and
or
dec
fidiv
push
inc
test
aam
pop
lods
loope
mov
retf
out
bound
out
imul
aad
lea
cwde
dec
mov
mov
fwait
enter
mov
xchg
shr
mov
mov
cmp
push
(bad)
outs
xchg
push
mov
loop
jmp
fldcw
jns
loopne
mov
mov
xor
jmp
test
xor
jno
adc
push
lahf
pop
std
dec
stc
push
fisubr
in
add
rcr
add
idiv
push
sbb
or
mov
movs
int
dec
mov
cwde
sbb
clc
sub
xchg
pop
adc
test
mov
cmp
int
mov
mov
jbe
push
cmp
or
mov
por
fldenv
ja
sbb
jmp
sar
jo
sbb
mov
inc
push
sub
in
mov
enter
jbe
mov
xor
adc
scas
sub
or
xchg
fsub
add
mov
inc
xchg
cld
(bad)
xchg
dec
inc
daa
sahf
sub
jmp
jno
cmc
int3
xor
jge
ins
(bad)
shl
sub
int
pop
nop
fcomp
shr
repz
jnp
cmp
lahf
pop
add
push
or
add
int
call
repnz
out
add
inc
in
adc
(bad)
shr
adc
leave
mov
stos
xchg
mov
cmp
fadd
cmp
dec
int3
test
jns
add
pop
mov
icebp
fcmovnb
push
xor
iret
xchg
or
jp
mov
and
xor
js
pop
data16
stos
cdq
dec
xor
es
(bad)
sub
in
inc
fdiv
fistp
mov
rcr
fidiv
or
jg
inc
retf
add
cmp
cld
add
movs
pop
test
or
bound
pandn
dec
sub
xchg
(bad)
pop
dec
inc
scas
cdq
int3
mov
inc
into
pop
pop
or
xor
fidiv
arpl
jmp
scas
das
xchg
mov
and
or
movs
mov
mov
cmp
inc
shl
cmp
inc
je
jl
dec
fld
add
cmp
dec
xchg
stc
(bad)
cmps
imul
push
mov
inc
xchg
ffreep
lahf
inc
jno
inc
mov
cld
into
ror
inc
nop
mov
pop
inc
add
mov
test
pop
xchg
pop
cld
push
mov
imul
inc
push
in
test
pusha
xor
test
aad
iret
cmp
loopne
sub
(bad)
inc
sub
dec
dec
jne
xor
xchg
fisttp
lods
cwde
stos
into
jmp
or
xor
pop
pop
mov
or
in
out
mov
adc
fs
push
mov
sub
jb
leave
call
je
add
sbb
push
rol
push
cmp
adc
sbb
out
lods
pop
mov
clc
pushf
inc
sub
jmp
pop
cmp
add
in
test
adc
jmp
ds
cli
push
outs
pusha
cmps
nop
sub
sbb
retf
test
sub
clc
ret
xor
add
(bad)
shl
pop
cli
jle
aad
enter
or
inc
pop
sbb
int
inc
xor
xchg
out
pop
fwait
lds
mov
aam
les
jno
out
or
adc
xor
loopne
pop
ins
dec
test
cmp
loop
push
(bad)
jnp
jge
mov
je
jno
xchg
fidivr
in
sub
(bad)
push
cmps
or
mov
jns
cld
(bad)
leave
test
xchg
dec
hlt
xchg
ror
sub
lock
inc
add
fsub
fs
sbb
pop
adc
cmp
sti
aas
xlat
das
sub
repz
mov
mov
and
sbb
push
mov
lods
lahf
adc
or
mov
pop
pop
js
mov
addr16
in
dec
xlat
lods
mov
mov
es
jp
mov
inc
mov
cwde
mov
je
ret
jle
fwait
xchg
jb
mov
les
daa
pop
dec
retf
push
jno
pusha
inc
(bad)
adc
int3
pop
mov
xor
imul
xor
pop
and
pop
push
fdiv
cmp
aad
xor
jmp
inc
jb
xor
mov
xchg
pop
jmp
xor
mov
pop
lods
mov
dec
jnp
stos
sub
push
dec
mov
pop
and
(bad)
in
sub
fdiv
inc
pop
enter
xchg
les
xchg
jnp
ret
gs
(bad)
mov
xor
adc
jp
(bad)
cdq
iret
cmp
rcl
popw
imul
imul
shl
jl
icebp
sbb
jnp
dec
push
outs
retf
ja
pop
shl
adc
mov
mov
retf
ins
bound
sub
addr16
and
jb
mov
push
stos
bound
imul
sub
jbe
jg
cmp
sahf
sbb
jno
sbb
sub
mov
fld
cmc
ror
xor
das
sub
in
in
mov
xchg
xlat
call
mov
pop
mov
jl
adc
(bad)
pop
loopne
shl
stos
or
lahf
push
ret
jns
into
fnstsw
(bad)
or
push
mov
scas
ret
or
int3
div
gs
ds
wbinvd
scas
inc
std
(bad)
mov
sbb
pop
inc
rcl
(bad)
pop
xchg
or
mov
push
fimul
dec
das
lds
dec
fdivr
adc
mov
xchg
sbb
adc
and
fwait
pop
repnz
jae
and
push
in
mov
jae
cli
dec
mov
pop
cld
mov
adc
ins
push
and
fsubr
cwde
repnz
adc
push
inc
daa
icebp
out
and
xor
inc
cmc
shl
jle
cmp
mov
fisttp
icebp
adc
pop
ja
movs
adc
(bad)
in
xor
in
dec
in
in
add
pop
jmp
mov
adc
fst
jg
add
cmc
or
out
dec
enter
mov
nop
sub
retf
pop
sahf
push
test
fcomp
enter
sbb
or
stos
cmps
stos
jo
push
mov
push
jno
xchg
loopne
hlt
icebp
lea
jns
xor
stos
sub
cmp
arpl
stos
mov
fwait
push
pop
pop
push
pusha
(bad)
call
gs
test
(bad)
sti
inc
xor
dec
add
mov
iret
inc
cs
mov
xchg
inc
push
and
inc
pop
inc
shr
les
mov
fs
pop
jecxz
adc
ins
in
adc
xor
push
jbe
imul
jg
ins
and
and
xor
fmul
jecxz
mov
hlt
cwde
xchg
ss
xchg
lds
jl
pop
inc
(bad)
fdivr
jns
or
push
icebp
mul
mov
(bad)
int3
retf
push
or
mov
ret
call
enter
aas
xor
add
dec
inc
sub
xchg
push
fistp
add
data16
or
aad
fwait
push
xor
push
(bad)
adc
enter
ds
fidivr
fucomp
test
cmps
mov
xchg
sub
add
dec
xor
scas
sub
cdq
xor
mov
movs
jno
add
sub
jne
imul
outs
pop
or
imul
popa
stos
xchg
jmp
jno
push
out
sbb
mov
push
adc
popa
sti
jo
xor
add
call
das
test
int
fsub
xchg
cmc
(bad)
sub
push
sbb
retf
pushw
fs
into
movs
fwait
xor
push
mov
rcr
sub
cmp
arpl
mov
and
xor
sub
dec
stc
cmp
xor
xor
mov
add
into
(bad)
movs
jl
call
cmp
nop
loope
in
sbb
mov
cmps
adc
mov
ins
cwde
sub
and
xchg
lea
dec
and
shr
out
lds
dec
ret
mov
ins
jns
xor
mov
mov
nop
dec
inc
imul
push
sbb
in
lods
lods
loop
and
cs
leave
inc
fiadd
adc
rcl
add
inc
sbb
(bad)
ds
and
lods
dec
leave
pushf
mov
cmc
push
inc
jl
mov
sbb
nop
sbb
sub
xchg
adc
sub
cmp
into
mov
xchg
aam
mov
dec
in
cmps
retf
int3
dec
retf
and
lds
fdiv
mov
and
push
jle
cmps
sub
(bad)
iret
push
loope
mov
lods
lods
jmp
das
or
imul
imul
cmp
pop
repz
(bad)
or
mov
nop
dec
jmp
je
mov
lods
xlat
mov
out
add
retf
clc
dec
ret
sub
inc
push
or
push
dec
mov
mov
dec
aad
shl
push
mov
loop
outs
mov
imul
mov
fs
mov
jae
scas
retf
adc
mov
push
pushf
fimul
not
inc
addr16
sub
inc
add
push
cld
cmc
mov
push
fist
inc
sbb
jno
xor
cmp
pop
push
jnp
es
sbb
je
imul
(bad)
call
sahf
popa
dec
pop
sbb
int
inc
xor
add
movs
ret
push
cmps
dec
xchg
repnz
add
xchg
fcomp
or
ret
jne
dec
xchg
hlt
in
mov
xchg
sub
xor
fisub
mov
add
sbb
mov
test
in
aam
cmps
xchg
mov
lds
imul
popa
or
inc
ds
mov
pop
push
popa
out
test
lahf
adc
add
test
pop
sub
das
test
push
mov
sbb
jp
jbe
imul
clc
inc
push
in
sub
add
mov
sub
(bad)
inc
call
mov
xchg
dec
cmp
and
lds
xor
mov
mov
out
fdivr
xchg
and
push
fimul
jle
leave
push
xchg
and
pop
or
add
cmp
jmp
ins
sbb
dec
outs
and
cmp
bound
mov
sbb
inc
push
cmp
das
cmp
hlt
cdq
lock
cdq
arpl
push
sti
and
mov
inc
cmp
dec
rcr
jle
mul
outs
mov
adc
or
xchg
stos
movs
xor
adc
xor
jbe
imul
dec
cmp
popf
arpl
fnstenv
mov
cmp
shr
mov
push
mov
pusha
push
fdiv
movs
lock
xchg
outs
daa
outs
mov
sbb
in
xchg
fld
adc
dec
xchg
sbb
out
fst
sub
cdq
test
jge
std
xor
lods
cmp
or
das
cmps
jae
in
aas
fst
push
xchg
outs
mov
ds
sub
leave
(bad)
sbb
stos
test
inc
lahf
test
in
mov
dec
aam
push
add
mov
shl
aas
cmp
imul
jbe
nop
fisub
into
ds
js
(bad)
adc
add
fs
mov
inc
jle
leave
movs
sbb
call
mov
popa
jmp
cmp
popa
gs
retf
jmp
jmp
(bad)
cmp
inc
mov
std
ins
aaa
or
jmp
test
cdq
or
das
jbe
sbb
dec
int3
jae
cmp
(bad)
popf
sti
sar
cmp
jnp
mov
imul
mov
popa
fs
sub
pop
xor
mov
dec
outs
xor
jmp
dec
shl
(bad)
adc
addr16
mov
jmp
(bad)
rcl
sbb
adc
xchg
cli
pushw
or
bound
jne
out
push
push
inc
jle
es
cmc
push
jl
(bad)
pop
xchg
int3
mov
xchg
inc
lahf
push
dec
sub
aas
test
xor
sahf
or
push
iret
into
(bad)
mov
rcl
or
mov
ds
cli
dec
cmps
inc
ins
or
inc
adc
sti
(bad)
sbb
rol
pop
fidiv
jp
jmp
dec
cli
outs
dec
scas
jecxz
pop
outs
pop
sub
dec
sbb
imul
cs
jp
ss
or
test
lods
pop
idiv
loop
cld
sahf
bound
xor
rcr
push
sbb
jo
jg
cmps
out
inc
mov
mov
xchg
mov
scas
mov
or
and
push
mov
or
xor
cmp
push
mov
sbb
inc
or
mov
fmul
xchg
pop
fidivr
push
(bad)
clc
test
icebp
sbb
loopne
xor
push
pop
test
dec
(bad)
jecxz
icebp
mov
jl
adc
mov
adc
out
sbb
hlt
push
sbb
inc
push
fs
adc
out
clc
fmulp
mov
in
data16
jbe
or
mov
cmp
jmp
and
test
arpl
arpl
jmp
push
adc
pop
clc
xor
sbb
nop
mov
adc
jo
mov
test
ret
dec
mov
fistp
push
xchg
pop
inc
lds
scas
and
cli
cdq
iret
aad
lds
pop
dec
das
outs
div
push
adc
lock
addr16
scas
xchg
adc
push
out
pop
jb
(bad)
xchg
adc
test
add
out
adc
pop
ret
cli
push
jae
jp
jmp
lock
sbb
xchg
mov
and
movs
mov
xchg
cld
add
mov
es
in
mov
sub
dec
ret
cmp
jb
loop
cmp
xor
and
repz
ror
jae
cli
push
ins
fwait
cli
sub
test
push
xchg
aad
out
push
mov
xchg
dec
pop
push
pop
push
lock
dec
cmp
test
jecxz
rol
push
ins
push
sbb
jae
xor
pop
pop
pop
arpl
div
mov
push
jmp
(bad)
cmc
mov
cmps
push
cmp
inc
fcomi
pop
cmp
sub
push
cmp
inc
(bad)
sbb
movsx
mov
and
inc
xchg
inc
aad
xor
mov
push
inc
(bad)
sbb
nop
jmp
scas
mov
mov
sub
jmp
cs
adc
ror
lea
je
dec
stos
inc
or
xchg
repz
lods
fidivr
mov
arpl
iret
in
aas
mov
lods
imul
mov
(bad)
lds
push
xchg
adc
inc
fwait
ret
cmc
and
xchg
test
test
xlat
xchg
aas
sbb
mov
retf
or
scas
xor
out
mov
pop
stos
xor
movs
(bad)
jbe
xor
lds
push
(bad)
cmp
loopne
int
xchg
retf
mov
addr16
in
adc
xor
xchg
popa
pop
(bad)
stos
mov
jb
or
mov
jo
or
(bad)
std
xchg
enter
dec
arpl
mov
les
fwait
stc
prefetch
cs
cmps
pop
cmps
test
sahf
fisubr
sbb
adc
mov
xlat
pop
lea
sbb
jmp
(bad)
xor
arpl
ins
push
xchg
adc
jbe
xor
mov
adc
xor
outs
jmp
and
add
retf
mov
sub
loope
leave
test
outs
or
xor
mov
(bad)
fmul
mov
out
xor
pop
xchg
arpl
aaa
scas
mov
mov
test
cmc
cmp
cmp
add
mov
mov
(bad)
stos
jmp
lahf
sub
jmp
xchg
jg
into
inc
xchg
loopne
push
add
sbb
jle
push
jmp
div
fcomp
cld
mov
xchg
mov
(bad)
xor
or
or
sbb
out
inc
sbb
cmp
sbb
xlat
outs
adc
pop
outs
jp
shl
ficomp
and
sub
lock
add
sub
sub
fwait
and
add
mov
retf
psubusw
push
(bad)
hlt
das
xchg
sbb
sar
(bad)
xchg
jp
shl
outs
sub
jle
mov
call
add
test
jle
ss
xor
cmp
mov
sbb
out
or
arpl
mov
ficom
mov
fdiv
mov
scas
and
or
add
jae
mov
out
nop
iret
rcl
mov
pushf
std
cmp
mov
inc
push
mov
out
jne
sti
adc
cmps
mov
dec
test
lahf
test
mov
dec
mov
or
les
not
cdq
pop
mov
jg
cmp
xlat
retf
cld
movs
loope
lods
in
adc
and
cmps
mov
push
sbb
into
dec
xchg
jnp
shl
cmps
mov
push
movs
push
inc
out
xchg
sti
sbb
xchg
sbb
test
es
sub
cmp
movs
aaa
mov
leave
cdq
dec
pushf
out
repnz
and
xchg
aaa
int3
fnstenv
lods
scas
outs
push
sub
je
fistp
inc
pop
jb
cmps
vcvtps2pd
mov
out
(bad)
pop
pop
mov
inc
add
ja
imul
aam
or
push
dec
and
iret
jp
fdivr
jb
adc
(bad)
mov
shl
shl
enter
adc
mov
xchg
movs
loopne
rcr
aam
movs
call
leave
add
sahf
jno
pop
out
fmul
add
out
inc
(bad)
outs
inc
ja
inc
jne
jb
aaa
mov
popf
test
push
mov
mov
sbb
adc
ficom
clc
sub
sub
shr
scas
rcr
mov
sti
fmul
push
push
jae
push
pop
inc
jo
add
xabort
icebp
pop
sahf
stos
mov
sbb
nop
and
dec
cmp
fstp
fisub
mov
outs
je
shr
add
outs
cdq
and
movs
out
adc
test
jns
mov
fimul
inc
xor
mov
in
std
in
push
sbb
out
addr16
shl
(bad)
dec
xlat
sbb
out
add
scas
mov
retf
adc
jl
popa
xchg
in
scas
jo
lock
dec
cmps
jl
ret
pop
sbb
lds
push
(bad)
lock
xor
mov
popf
stos
sahf
movs
into
cmp
jb
mov
pop
cli
gs
mov
adc
sahf
push
xlat
xchg
pop
cmc
test
push
stos
xor
rol
and
in
xchg
test
sub
retf
lds
add
xor
scas
inc
stos
adc
xlat
or
pop
jnp
cmp
sub
movs
add
aas
pop
add
xor
fidivr
retf
jmp
mov
imul
shl
cs
xsave
and
cmc
shl
ds
pop
mov
das
or
imul
mov
out
lock
adc
add
mov
loopne
out
fnsave
dec
sbb
xor
xchg
push
jo
push
lea
mov
or
mov
sub
nop
outs
adc
jg
sbb
inc
or
sub
mov
pop
jmp
mov
sub
not
cs
pop
jb
into
xor
scas
adc
mov
(bad)
sub
test
xchg
mov
sub
jne
bound
out
(bad)
cdq
mov
pop
mov
dec
(bad)
icebp
mov
cs
lods
les
dec
or
(bad)
aad
push
rcl
fwait
xor
xor
jmp
push
adc
or
fwait
dec
icebp
sbb
ds
mov
mov
aad
push
pop
mov
imul
or
imul
mov
aam
add
out
in
push
pusha
inc
fsubr
clc
dec
and
pop
sbb
mov
fstp
repz
in
retf
pop
sti
add
or
call
js
movs
and
sub
mov
adc
xor
pop
and
jno
jge
pop
int
retf
xor
inc
jb
out
push
xor
or
dec
jo
js
pusha
pop
push
xchg
mov
(bad)
push
cs
xchg
cmps
scas
mov
ret
clc
cld
(bad)
stos
mov
fucom
mul
mov
dec
imul
(bad)
mov
add
push
push
sbb
add
xor
xor
aad
xchg
pop
dec
das
rol
dec
or
(bad)
test
jne
pop
mov
cmp
retf
imul
popf
jecxz
fs
in
pop
push
es
lds
dec
enter
bound
inc
jno
sub
cli
test
pop
and
add
aaa
fwait
retf
test
inc
addr16
xor
out
int
pop
mov
cmp
xchg
cld
mov
lods
mov
mov
jl
inc
test
xor
(bad)
or
scas
sbb
sub
xchg
add
ins
mov
popa
add
cli
scas
mov
mov
cmp
pop
jnp
adc
imul
ror
cs
pusha
out
mov
adc
ins
jo
push
pop
push
es
sub
lea
popf
fs
div
std
xchg
loopne
hlt
leave
pop
adc
sbb
int3
aam
mov
lods
mov
and
hlt
fsubr
jmp
bound
lock
jmp
(bad)
adc
rcr
ins
hlt
adc
call
popa
call
daa
shr
das
sub
sub
in
iret
sbb
sub
loop
mov
add
xor
sar
mov
add
daa
arpl
sub
dec
lea
clc
jae
mov
retw
push
pop
out
outs
xor
inc
outs
(bad)
jmp
push
sub
aad
stc
sub
dec
gs
addr16
pop
mov
sbb
int3
inc
in
jbe
int3
push
xor
xor
push
inc
adc
inc
inc
aad
mov
adc
pop
in
inc
cmc
fs
xchg
mov
add
fnstsw
sbb
and
sahf
nop
inc
sub
mov
mov
movs
and
movs
(bad)
jp
out
xlat
lock
(bad)
or
mov
jmp
aad
(bad)
int3
dec
ja
jmp
cmps
loopne
das
retf
in
push
jecxz
in
sti
(bad)
nop
rcl
or
mov
adc
push
jmp
mov
rol
je
add
gs
test
icebp
shr
lahf
pop
jecxz
aaa
cs
sti
cwde
imul
xchg
mov
(bad)
mov
cmc
jp
inc
(bad)
sub
mov
mov
jno
add
in
out
xlat
cli
sbb
sbb
mov
push
xor
dec
cmc
mov
mov
sub
pusha
jle
xor
ret
jbe
(bad)
xchg
je
dec
bound
jge
push
ds
iret
sub
gs
sub
push
jnp
ds
dec
cmps
mov
shl
jmp
push
mov
bound
rcl
repz
addr16
fsubr
jns
sahf
out
inc
push
push
daa
enter
dec
jle
pusha
lahf
cmp
and
(bad)
stc
in
call
inc
xlat
mov
or
jne
(bad)
and
pop
mov
jge
mov
dec
fld
sar
rcr
call
pusha
aaa
stos
inc
loope
fadd
ds
loopne
pop
push
in
lea
mov
mov
fwait
outs
lods
sub
xchg
fidivr
icebp
xchg
xchg
mov
out
and
std
mov
mov
cmps
leave
jns
push
inc
ret
int
js
xchg
and
mov
inc
jne
sbb
(bad)
(bad)
fistp
sub
les
std
idiv
or
shr
push
push
imul
mov
pop
sub
dec
pop
mov
jle
xor
sub
std
sbb
in
or
push
xor
dec
ss
fcom
pop
cld
inc
adc
(bad)
pop
add
das
lods
jmp
mov
add
daa
jo
std
mov
xchg
inc
xor
add
inc
inc
fdiv
sbb
pop
jns
mov
xor
push
mov
ret
movs
cmc
fdiv
xchg
retf
pop
dec
add
pop
std
fild
std
outs
fucomip
out
std
sbb
mov
sbb
push
dec
retf
data16
and
in
dec
je
js
and
aam
xchg
fwait
stos
leave
ret
pop
xor
add
or
data16
mov
push
lock
add
test
mov
jmp
gs
and
jmp
mov
cld
fwait
mov
sbb
enter
loop
inc
in
cmp
shl
enter
mov
repz
or
jecxz
jo
dec
push
scas
data16
mov
jmp
imul
jbe
or
push
and
mov
imul
xor
mov
clc
adc
push
mov
in
mov
stc
out
les
push
stos
add
adc
sahf
cmp
cs
mov
clc
or
cs
retf
shl
jnp
mov
add
cmp
inc
jae
sub
retf
push
xchg
test
repz
int
(bad)
jo
iret
mov
fidiv
mov
aaa
aas
imul
xchg
ror
std
or
jmp
cwde
jle
sbb
jl
add
cdq
(bad)
pushf
lahf
(bad)
or
test
xchg
pop
div
rcr
mov
xchg
arpl
scas
mov
stc
pusha
lea
inc
fs
add
outs
add
cmp
out
jae
cmps
pop
xchg
das
jns
jle
dec
(bad)
idiv
pushf
xor
mov
fwait
dec
dec
and
mov
push
ja
outs
sbb
add
mov
rol
jg
cmp
xor
aam
(bad)
jmp
push
sbb
jmp
xor
scas
mov
or
push
and
inc
pop
add
sub
imul
inc
popa
xchg
cmp
dec
dec
sbb
fsub
inc
add
dec
jecxz
adc
dec
push
sar
sbb
or
sub
(bad)
push
fld
idiv
push
mov
das
inc
lock
inc
pop
lahf
adc
inc
lea
mov
dec
xor
ret
int
mov
push
ds
icebp
pop
shr
cdq
add
sub
push
sbb
add
sbb
(bad)
pop
xor
xchg
aad
fcom
ins
inc
mov
loop
in
sub
gs
clc
dec
ss
enter
shl
jecxz
sub
iret
ds
lods
ins
fcomp
daa
cmp
ja
and
(bad)
nop
(bad)
jmp
retf
or
inc
sub
mov
sub
adc
xor
pop
fld
iret
mov
out
fild
pop
test
sub
adc
iret
aam
xor
xor
cmp
add
shr
mov
shr
bound
data16
push
dec
and
leave
pusha
mov
pop
test
adc
pop
push
pop
pusha
mov
pop
bnd
push
sbb
adc
ret
jbe
mov
dec
test
cmp
outs
pop
cs
push
and
sbb
inc
repnz
jbe
cvtps2pi
xor
sbb
cwde
ss
sub
addr16
loope
mov
loope
shr
rcl
sbb
push
out
ins
pop
outs
cmc
xor
push
push
cmc
xchg
nop
jmp
in
mov
xor
clc
(bad)
rcl
cmps
push
aas
inc
cmc
pusha
test
lea
rcr
rcr
cmps
cli
pop
pop
pop
pop
sub
push
sbb
push
inc
mov
push
fidivr
mov
dec
dec
cmc
leave
push
xlat
push
pop
jecxz
dec
addr16
aaa
xor
dec
iret
ret
cmp
jge
fisttp
adc
or
jo
fwait
in
mov
or
test
ja
inc
push
inc
cmp
sub
lods
adc
or
int3
loope
push
push
jae
pop
push
aaa
inc
pop
cmp
sahf
out
pop
jae
inc
popf
dec
test
les
jle
sbb
push
hlt
push
pop
mov
and
add
jmp
xor
pop
dec
pop
jne
imul
mov
dec
pop
test
cmp
push
loopne
pop
xor
dec
push
pop
dec
and
pop
in
inc
shl
push
das
loope
add
sti
jmp
jmp
das
arpl
or
cmp
cmps
mov
add
scas
add
push
ror
mov
into
sbb
sahf
addr16
test
pop
mov
mov
aad
(bad)
jg
and
lods
(bad)
cmp
pushf
in
std
pop
cmps
sub
sub
cmps
jecxz
mov
jge
mov
daa
int3
popa
xor
xchg
js
adc
push
dec
mov
inc
in
jmp
xchg
mov
div
or
fwait
add
jne
jo
jg
push
cld
add
jnp
retf
pop
sub
and
or
mov
daa
push
push
or
mov
in
bound
fcomp
inc
sahf
les
(bad)
sbb
jge
xchg
fld
add
shl
cmc
add
aas
xchg
hlt
fiadd
pusha
mov
push
cmp
mov
push
cmps
adc
movs
ror
and
popa
and
fst
(bad)
ss
movs
(bad)
cmc
jne
(bad)
push
pushf
add
pop
rcr
add
jge
xlat
popf
scas
add
mov
test
jl
and
pop
enter
mov
lds
fs
xor
sub
cmp
jo
sub
(bad)
jmp
leave
scas
push
cmp
inc
mov
int3
fwait
lods
push
push
pop
cli
xchg
iret
nop
je
loope
mov
cmps
push
mov
dec
fdivr
xlat
mov
fst
xchg
in
adc
enter
sub
push
retf
stos
outs
push
xchg
shr
scas
jl
daa
add
xor
mov
stos
mov
adc
sub
and
pop
ins
jmp
add
xchg
add
sahf
add
sbb
das
mov
mov
mov
jo
mov
fwait
jge
test
inc
enter
sbb
pop
mov
cmp
xlat
jbe
aas
test
cmp
ins
jmp
test
push
jg
in
mov
mov
cmp
retf
sub
sub
add
aam
mov
sub
jns
inc
and
xor
cli
dec
int
fcmovnbe
call
jle
repnz
sbb
jp
fldenv
popa
push
cmp
inc
or
cmp
movzx
xor
xchg
pop
lock
pop
xor
lods
frstor
inc
mov
scas
push
mov
sbb
into
dec
jecxz
mov
outs
out
cmp
pop
jb
(bad)
cs
in
jmp
dec
cmp
lds
fwait
rcr
in
mov
push
js
jge
(bad)
iret
test
or
xor
loop
fcom
jns
jno
xchg
jno
push
push
add
cwde
dec
adc
sub
cmp
jg
mov
add
(bad)
mov
cmp
push
ja
inc
dec
rol
inc
push
clc
fld
mov
or
pushf
push
into
pop
call
aam
ret
out
aad
dec
adc
mov
out
jo
jne
retf
jbe
dec
fnstsw
jnp
mov
cmps
xchg
mov
inc
adc
(bad)
sbb
in
(bad)
pop
cli
or
sti
arpl
fadd
mov
mov
adc
mov
cmp
data16
pop
inc
mov
ret
xor
mov
stos
(bad)
adc
les
xor
mov
(bad)
sti
add
xor
(bad)
sbb
adc
in
sbb
or
cdq
popf
push
jno
mov
cmp
dec
push
xor
std
lods
and
or
mov
sub
and
sub
mov
(bad)
enter
dec
sbb
sub
jg
data16
dec
ret
mov
call
pushf
cs
mov
popf
push
push
adc
sbb
and
enter
mul
out
mov
mov
add
adc
mov
push
sub
mov
lds
cld
xor
inc
loop
in
and
push
mov
mov
icebp
sbb
outs
adc
lods
into
repnz
cld
nop
cmp
sbb
cmp
aaa
(bad)
fidivr
dec
mov
jmp
mov
(bad)
icebp
mov
xchg
shl
sahf
mov
mov
(bad)
jbe
aaa
xchg
jge
inc
mov
jp
das
jl
dec
retf
mov
jmp
cmp
adc
mov
sahf
lods
fisub
add
mov
sub
and
fld
ret
jbe
inc
mov
stos
jmp
add
mov
dec
addr16
jmp
(bad)
and
pop
jnp
lods
arpl
lock
fmul
scas
push
sub
std
daa
addr16
repnz
xchg
mov
aaa
loopne
aaa
cmp
movs
ret
dec
dec
push
iret
cmps
loop
mov
pop
sub
push
retf
inc
inc
dec
das
ss
cmp
nop
mov
fwait
cmps
enter
push
sub
shl
xchg
cld
dec
mov
dec
mov
adc
sub
pop
mov
adc
jne
clc
pop
push
arpl
sti
outs
loope
sbb
dec
mov
inc
(bad)
pop
pop
lods
mov
shl
out
fwait
jno
add
bound
call
mov
mov
xchg
and
fbld
and
lock
and
xor
inc
dec
sbb
hlt
or
data16
fsubr
inc
mov
mov
dec
cdq
hlt
mov
add
out
(bad)
stos
cdq
aad
add
adc
inc
in
sbb
jge
add
dec
jl
loopne
cld
rol
sub
dec
cmp
pusha
fstp
das
mov
movs
push
(bad)
sbb
mov
ret
out
sbb
cmp
sbb
mov
repnz
inc
mov
(bad)
push
ins
(bad)
jge
push
repnz
(bad)
fwait
loopne
je
lods
pop
jmp
fisub
or
data16
mov
xor
ins
mov
test
in
xchg
mov
adc
mov
neg
xchg
pop
push
cmps
iret
inc
mov
dec
push
push
loop
push
mov
(bad)
out
fsubr
mov
push
push
and
popf
iret
mov
push
and
push
push
aam
mov
imul
mov
or
dec
fs
jnp
stos
push
add
fldenv
das
lea
push
cli
xor
fiadd
mov
dec
arpl
mov
mov
and
mov
mov
enter
jmp
es
push
push
clc
cmp
pop
shr
ds
push
inc
lea
adc
rcl
mov
test
and
inc
(bad)
daa
jno
dec
movs
push
es
aam
inc
outs
repz
pop
daa
push
add
sbb
sbb
fcom
outs
loopne
rcr
dec
arpl
and
les
mov
pop
jno
mov
fsubr
and
shl
and
and
xor
ret
pop
jmp
jb
sbb
fldenv
sbb
out
test
mov
cmp
fbstp
cld
neg
aam
cmp
ss
icebp
xchg
push
mov
in
fdivp
stc
xlat
cmp
pop
fidiv
into
add
cmp
adc
dec
sti
outs
or
push
imul
xchg
jo
bound
arpl
stc
push
ja
nop
xchg
clc
aam
leave
xor
cmp
movs
mov
and
daa
push
inc
(bad)
es
and
dec
fdivr
call
std
mov
jmp
xor
and
addr16
lods
add
shr
or
data16
out
cmp
and
push
ret
test
jo
or
aaa
pop
inc
sar
dec
test
sbb
imul
mov
and
and
xlat
jp
mov
dec
push
je
icebp
test
cmps
retf
and
mov
sbb
cwde
sbb
push
clc
pusha
jnp
mov
and
add
add
push
push
into
loop
lds
push
lods
call
scas
movs
ror
push
mul
lods
outs
rcl
add
push
push
mov
pusha
dec
fisub
ss
sub
xchg
cmc
xchg
and
jno
out
sar
in
pop
mov
ds
mov
cmps
jp
outs
jne
test
(bad)
mov
imul
retf
sar
jne
xchg
adc
cmp
mov
sbb
ret
jns
pop
shr
ret
cmp
mov
jae
adc
sbb
ucomiss
or
or
retf
ret
xchg
mov
std
xor
cmp
outs
sub
fdivr
jmp
test
push
jbe
cmc
add
push
inc
mov
dec
cmps
push
(bad)
pusha
ins
pop
push
mov
mov
enter
xchg
adc
pop
into
(bad)
outs
cmp
rcl
pop
rol
mov
adc
(bad)
xchg
inc
jb
dec
xchg
aaa
lock
leave
not
fwait
mov
jnp
stc
ja
mov
dec
(bad)
fcom
push
nop
push
out
inc
mov
daa
or
out
shl
hlt
mov
jae
cmc
add
aam
in
ror
out
outs
dec
sbb
repnz
sbb
inc
(bad)
mov
sbb
cmp
fimul
jns
add
inc
xor
inc
rcr
adc
or
pusha
loope
mov
pop
cwde
test
adc
ss
cmps
out
ret
ret
cmp
lods
popf
fsub
fild
dec
jp
mov
sbb
cmp
and
fsubr
mov
add
test
mov
int
and
std
imul
inc
int
sar
cli
push
xor
xor
add
shl
jnp
add
lods
std
dec
push
ret
and
push
add
sbb
pop
jp
inc
add
daa
fsubr
mov
mov
xor
call
ins
das
push
lahf
fld
push
jne
cli
xchg
mov
cli
jbe
adc
cdq
sbb
adc
or
sbb
pop
push
cwde
cld
aas
mov
mov
inc
mov
cwde
pop
xchg
pop
loope
dec
mov
fnstsw
js
push
xchg
jmp
ds
sub
(bad)
and
and
dec
jb
mov
adc
add
aam
das
sub
dec
jle
adc
enter
leave
adc
movs
dec
cmc
add
int3
je
mov
jmp
mov
rcr
cmps
add
pop
inc
ss
mov
mov
sbb
test
(bad)
pop
popa
add
dec
xor
pop
ror
mov
pop
cli
popf
or
out
daa
out
cwde
sbb
mov
mov
or
ins
push
push
cmp
xchg
fisttp
or
or
xor
or
xor
mov
retf
push
xor
jge
and
fs
das
std
pop
mov
xchg
mov
pop
cmp
push
inc
fsubr
sub
jmp
sub
jge
in
sub
icebp
rcl
ds
imul
dec
push
arpl
stos
cmp
fdiv
mov
inc
push
inc
mov
scas
dec
dec
push
enter
outs
popa
add
add
adc
inc
mov
push
retf
es
mov
cmps
fs
fiadd
outs
std
jb
dec
mov
mov
and
fwait
cwde
movlps
dec
xchg
ja
dec
shl
adc
add
stos
add
push
xchg
fld
jecxz
fsub
xchg
icebp
pop
add
inc
stc
dec
ror
adc
or
shr
lock
push
rcl
scas
push
addr16
int
cmp
popf
aas
jmp
xchg
mov
sbb
sub
xchg
cmp
cdq
lods
pop
(bad)
ds
jnp
in
das
in
cmp
lds
sbb
mov
jge
dec
push
sbb
nop
pop
outs
adc
xchg
in
or
adc
pop
and
jp
das
cmp
xchg
add
dec
ror
inc
push
stc
ss
bound
mov
call
movs
sub
push
data16
sbb
inc
cmp
cdq
retf
inc
nop
jb
mov
add
xor
test
fwait
arpl
jae
mov
jae
adc
loop
repz
adc
or
dec
cwde
jo
push
not
out
adc
sbb
jle
fcom
or
pop
cwde
sub
mov
ins
fwait
je
(bad)
je
or
xchg
ret
fxch
(bad)
xchg
pop
inc
fisttp
push
push
mov
movs
and
and
in
test
stos
ss
and
or
rcr
jmp
out
imul
ds
retf
adc
cmc
pop
mov
add
or
dec
retf
mov
(bad)
xlat
sbb
push
adc
mov
push
mov
ret
sbb
je
(bad)
test
loop
je
pop
movs
xor
stc
loope
mov
xor
mov
fisttp
push
test
mov
jl
xchg
sbb
inc
scas
cwde
mov
fsub
stc
pop
jmp
mov
shl
pop
rcr
pop
inc
(bad)
jp
xor
dec
aam
retf
add
stos
rcl
daa
movs
and
mov
mov
xor
mov
or
(bad)
cdq
or
jp
nop
xor
out
dec
sbb
ins
rcr
sbb
int
xor
call
cwde
frstor
(bad)
jne
mov
push
movs
std
or
pop
cmp
ds
jg
cmps
in
(bad)
jmp
dec
and
xor
(bad)
loop
cwde
cwde
mov
scas
(bad)
cmc
lahf
int
int3
lock
ins
hlt
and
sar
mov
xchg
jge
xor
sar
mov
shl
sbb
stos
adc
mov
xchg
lods
loope
jo
mov
in
push
call
cs
lahf
jge
not
jae
pop
jne
add
sub
jmp
mov
test
mov
or
shr
inc
mov
into
cdq
mov
adc
pop
xchg
pusha
jae
call
inc
les
xchg
push
les
jbe
syscall
(bad)
iret
fdiv
jmp
xlat
mov
test
mov
and
(bad)
mov
jbe
xchg
(bad)
xchg
cmp
pop
movs
xchg
push
cs
inc
xchg
test
gs
test
scas
fisubr
ja
jecxz
mov
mov
call
xchg
retf
call
jl
not
adc
and
pop
loopne
aad
cmc
or
(bad)
jecxz
aas
scas
pushf
jl
es
ds
sub
pop
jg
fistp
cmp
mov
mov
mov
cmp
(bad)
test
xchg
fst
(bad)
stos
arpl
bound
movs
pop
and
add
or
aas
jmp
out
pushf
lahf
les
push
mov
hlt
or
dec
mov
push
loopne
xlat
xchg
jnp
inc
enter
add
xchg
aaa
pop
pop
cwde
fsubr
sub
fild
jle
mov
mov
repz
int3
cmp
fdiv
pop
fdivr
mov
adc
sti
pop
pop
jnp
xor
xor
es
pop
aad
mov
xor
mov
rcl
movs
mov
aam
pop
(bad)
jmp
mov
inc
(bad)
pop
outs
mov
xchg
mov
jno
add
stos
mov
ins
sub
ds
sub
ror
push
retf
push
std
or
pusha
cmp
inc
out
pop
in
daa
(bad)
jp
sahf
and
push
cld
or
or
cmp
xchg
std
mov
iret
cmps
lods
sub
lahf
ins
and
cmc
hlt
aas
js
in
xchg
xchg
jecxz
dec
xchg
or
jl
jl
add
repz
dec
pop
jb
dec
add
jle
adc
imul
adc
xor
or
daa
test
daa
pop
mov
pop
fsubr
(bad)
loope
xchg
push
sub
push
rcr
push
pusha
mov
xchg
sub
jb
and
scas
inc
(bad)
stc
fs
jns
jnp
shr
pop
and
add
fstp
hlt
mov
mov
(bad)
mov
adc
jbe
and
mov
mov
bound
repz
pop
cmp
dec
adc
add
push
ss
cmps
add
inc
nop
mov
add
add
pop
fs
jecxz
ds
fld
call
mov
cli
xchg
aad
outs
add
js
out
xchg
icebp
ffreep
and
adc
pusha
dec
outs
mov
scas
mov
mov
pop
and
xchg
out
das
mov
pop
and
jno
xchg
or
xchg
adc
xor
and
xchg
and
nop
lods
dec
stc
dec
into
jl
adc
cli
call
mov
out
cmp
scas
inc
mov
xor
inc
hlt
lock
or
adc
sahf
mov
in
sbb
mov
cmc
cmc
int3
add
lahf
add
and
rcr
int
mov
adc
add
mov
je
ja
xor
sub
fnsave
mov
dec
xor
int3
mov
cwde
and
pushf
sbb
aad
sahf
mov
push
shr
movs
mov
fs
or
pop
jle
aad
cli
push
inc
xor
xor
movs
cwde
mov
bound
or
adc
mov
push
in
pop
das
aas
ds
fidiv
test
aaa
std
outs
xchg
mov
push
mov
mov
xor
pop
inc
fadd
add
aad
retf
retf
call
imul
mov
pushf
enter
push
in
inc
sbb
int
stos
jmp
add
popf
inc
outs
inc
aas
pop
jg
push
pop
mov
fst
push
sbb
xchg
les
clc
ret
div
inc
rcl
jae
cmp
adc
loop
daa
fucom
outs
mov
ins
mov
push
leave
push
js
add
int3
ret
push
inc
scas
sub
mov
lea
loope
mov
pop
dec
mov
and
mov
lock
jl
mov
and
mov
jmp
push
mov
pop
rol
mov
mov
test
scas
and
sar
fsubr
mov
push
mov
shl
or
pop
(bad)
mov
and
jne
jno
xor
mov
outs
(bad)
in
dec
movs
in
cli
xchg
mov
inc
push
dec
repz
and
fs
retf
(bad)
xor
hlt
xlat
shl
mov
cli
mov
ret
jg
inc
(bad)
bound
mov
add
dec
push
xchg
clc
xchg
mov
pop
inc
sub
and
dec
cdq
nop
cmp
cmps
cmps
lods
jle
cmovg
mov
pushf
mov
sbb
sub
sub
add
clc
xchg
and
aas
mov
stc
dec
out
dec
pop
clc
dec
dec
imul
or
addr16
fisub
mov
ins
scas
push
mov
out
push
xchg
cmc
int3
sbb
dec
push
sbb
pop
daa
pop
test
xchg
fwait
pop
(bad)
ret
push
outs
and
jecxz
add
in
out
jae
pop
add
sahf
sub
inc
out
xchg
(bad)
mov
stos
or
xor
rol
jp
loop
out
int
xchg
sahf
inc
lock
or
das
enter
popf
dec
sub
arpl
adc
adc
xor
mov
rcl
adc
gs
lods
push
popf
and
or
inc
(bad)
mov
push
push
jmp
les
ret
das
mov
pop
sti
out
das
jo
fucomp
mov
(bad)
into
out
aad
or
push
push
pop
call
lahf
inc
jmp
stc
and
prefetcht0
repnz
mov
inc
call
pop
call
jnp
test
jle
dec
xor
das
jp
in
jmp
jbe
out
pop
mov
(bad)
cmp
movups
sub
icebp
lock
mov
jp
jg
cmp
leave
pushf
adc
xor
and
int3
das
shl
xor
(bad)
lock
enter
and
mov
mov
or
dec
pop
ret
(bad)
fst
scas
je
xor
inc
or
mov
add
jo
and
or
and
mov
and
lods
mov
inc
fs
mov
adc
push
add
dec
pop
and
shl
jne
pop
xchg
(bad)
sbb
scas
xchg
xchg
mov
dec
cmc
jl
leave
in
mov
retf
mov
or
iret
lahf
mov
adc
or
outs
(bad)
cmp
jge
shr
popa
xchg
fsubr
in
adc
mov
jae
pop
mov
push
in
fst
iret
pop
cmp
pop
fist
push
fwait
into
sbb
jmp
out
lods
pushf
in
xchg
and
inc
sbb
mov
dec
sbb
jb
stc
or
imul
pop
add
jg
dec
jmp
mov
cmp
jg
cmc
in
pop
ficom
in
mov
add
mul
rcr
push
cmps
xor
test
hlt
retf
das
lahf
mov
cmp
add
scas
mov
or
aad
cs
pop
cld
pop
out
outs
pushf
push
ds
cmp
loop
cmp
psubsw
jge
cmp
add
jne
push
and
adc
push
mov
nop
mov
cli
mov
addr16
push
pop
xchg
neg
jnp
inc
enter
fsubp
cmp
aam
stc
mov
add
jecxz
stos
in
dec
mov
mov
(bad)
sbb
mov
cwde
jp
gs
sbb
(bad)
dec
sbb
mov
imul
repz
jg
jmp
xchg
push
pop
cli
cmc
mov
dec
push
inc
rcl
lahf
xchg
cmp
sbb
js
push
daa
inc
data16
cmp
ja
imul
mov
cmp
cmp
bnd
mov
adc
cmp
mov
push
shr
push
mov
inc
pop
sbb
dec
scas
and
(bad)
add
mov
mov
or
addr16
mov
nop
stc
int
cmp
pusha
mov
mov
stc
xchg
iret
push
dec
(bad)
and
aas
rcr
add
mov
mov
sar
add
ffreep
and
or
sub
cmps
push
push
xchg
jo
or
dec
mov
ja
sti
and
addr16
icebp
daa
ins
sbb
dec
jae
fcomp
sbb
xor
movs
jne
sub
pop
push
adc
outs
xor
push
or
sar
enter
inc
push
aam
jno
adc
inc
push
mov
data16
(bad)
mov
enter
loopne
sbb
call
popa
aad
sbb
jbe
mov
outs
jg
cmp
test
cmp
adc
inc
ss
mov
not
jne
imul
sub
(bad)
rol
mov
or
add
push
outs
mov
cwde
or
jns
scas
aas
mov
mov
add
aam
mov
mov
movs
xor
je
xor
jge
nop
std
pusha
in
clc
sub
add
test
push
call
sbb
out
inc
and
cmc
xchg
mov
cli
shl
sbb
jg
adc
or
hlt
add
outs
dec
loopne
mov
sub
ins
inc
sti
jns
pop
xchg
loop
aad
mov
cdq
mov
mov
mov
outs
in
outs
push
cmps
cmp
in
fwait
es
inc
cli
jmp
mov
cmc
dec
and
out
mov
push
jbe
mov
and
cmps
push
xor
sub
pop
outs
pop
xchg
xchg
fcom
daa
stos
push
sub
jmp
jle
out
push
cdq
xor
mov
xor
movs
add
xchg
sbb
add
(bad)
jno
dec
cdq
and
neg
xchg
outs
jmp
jbe
outs
(bad)
mov
mov
repnz
sbb
adc
(bad)
adc
sub
xchg
in
(bad)
jmp
mov
jle
(bad)
xchg
xchg
mov
jmp
jo
adc
aad
jecxz
jno
cmpnltps
dec
or
push
cmp
jge
jb
(bad)
dec
push
dec
cdq
cld
xchg
pop
sahf
sti
mov
jae
fsub
das
xchg
or
xchg
sub
int
inc
xchg
mov
fdiv
rcl
cwde
xchg
ins
jne
call
call
cmps
xor
mov
int
fadd
test
not
test
inc
std
cwde
and
mov
push
dec
cwde
jl
sbb
cmc
lods
and
dec
fwait
cmovne
lock
dec
in
add
push
xchg
xchg
aam
shl
pop
xchg
pop
xlat
xchg
mov
enter
mov
and
sbb
mov
cmps
data16
cld
jne
jno
add
ds
jne
punpcklbw
or
inc
cmc
lods
sub
cdq
lock
ror
movs
ss
adc
aaa
sbb
int3
or
in
cmp
push
in
jmp
ja
imul
jne
dec
adc
mov
sbb
pop
call
sar
xchg
enter
ss
cmp
xchg
sbb
scas
loopne
fild
and
push
das
movs
push
sti
mov
cmp
aad
jl
xor
jmp
loop
imul
push
mov
movs
cmp
sub
into
leave
push
adc
(bad)
cmp
add
jnp
adc
sbb
push
cmp
nop
xchg
ror
imul
xchg
mov
out
jne
xchg
outs
ja
aad
and
fnstcw
stc
out
clc
dec
sbb
mov
mov
add
cs
mov
retf
mov
sub
mov
or
aas
add
ror
test
mov
adc
je
jns
mov
push
push
dec
ror
and
adc
xchg
cld
jno
push
sahf
inc
dec
jns
jnp
mov
fwait
or
jl
mov
adc
cwde
cmc
mov
pop
sub
test
mov
pushf
dec
xchg
mov
sub
das
xor
or
rol
push
pop
jns
jne
les
mov
js
cmp
pop
add
inc
sub
mov
std
ss
inc
les
es
pusha
test
dec
bound
cmp
cmc
hlt
into
add
enter
mov
dec
mov
dec
je
adc
movs
cmp
ror
and
add
cli
xor
add
push
mov
dec
xor
stc
imul
add
jmp
jae
xchg
xchg
mov
sahf
ret
xchg
add
xchg
xchg
cmps
paddq
mov
jmp
mov
xor
jmp
mov
js
mov
fild
sbb
je
push
mov
and
jae
push
or
xor
inc
call
sbb
lods
pop
cmp
sti
mov
inc
and
add
mov
pop
fst
jno
out
sub
(bad)
aad
mov
xor
dec
mov
cmp
test
push
xchg
jae
or
fadd
mov
out
repnz
jb
aam
jnp
int
cs
mov
inc
lea
push
or
loopne
mov
test
ins
xor
stos
and
out
adc
aas
fnstcw
sub
(bad)
mov
sbb
inc
outs
mov
dec
mov
and
or
clc
mov
push
mov
and
mov
leave
jmp
pop
iret
cmp
dec
aaa
xchg
xchg
(bad)
jne
xchg
icebp
xchg
jmp
mov
inc
je
sub
std
or
mov
imul
sub
scas
jno
test
not
or
mov
jg
cmp
arpl
lock
int3
cwde
cmp
(bad)
pop
sub
je
xor
stc
mov
or
sbb
cld
aad
std
frstor
adc
sub
jno
ds
or
sbb
xchg
mov
call
dec
data16
sar
inc
cmc
inc
lahf
mov
popf
call
retf
out
out
fldenv
pop
push
les
sbb
mov
enter
retf
or
jne
dec
scas
aaa
cmp
jne
and
and
jmp
ins
aam
dec
inc
ffreep
test
sub
into
mov
cmc
sbb
test
inc
loope
enter
or
jne
cmp
rcr
dec
sbb
dec
add
in
dec
cmp
add
les
push
cmp
and
pop
stc
add
imul
add
shr
fdiv
in
ds
loope
xchg
inc
jl
inc
mov
and
stos
call
cmp
std
out
sub
call
xchg
push
adc
stos
dec
fiadd
mov
test
test
fucom
sbb
fucomp
adc
jnp
push
or
xlat
psrlq
popa
mov
mov
iret
mov
popf
shr
test
dec
shr
xor
iret
ret
(bad)
xor
sbb
aad
pop
data16
cmp
sub
xchg
sar
sub
pop
dec
loopne
movs
dec
out
test
add
dec
xor
xor
xor
mov
push
cmps
mov
int3
repnz
xor
out
call
push
(bad)
cld
sti
jl
jne
jns
xchg
mov
cmc
mov
dec
and
shr
mov
ins
cmp
daa
fisubr
pop
mov
xor
outs
out
inc
lods
std
add
popf
call
clc
out
into
into
xor
cwde
inc
and
push
push
xchg
adc
add
adc
sub
es
adc
push
xor
(bad)
cwde
repz
repnz
pop
mov
lods
loopne
push
dec
popa
push
jmp
mov
inc
cli
setl
and
in
test
push
fist
push
add
mov
fld
into
push
fs
dec
inc
pop
outs
bound
dec
mov
cli
jge
cli
or
jo
or
push
adc
push
xchg
(bad)
pop
pop
or
jo
mov
xchg
data16
clc
ins
sub
mov
inc
and
xchg
clc
call
inc
rcr
retf
aaa
jecxz
xor
cmp
mov
mov
retf
(bad)
imul
(bad)
in
cmp
in
jne
scas
xchg
outs
push
xor
pop
cli
test
inc
pop
sbb
jl
add
loope
cmps
push
pop
cmps
xchg
xchg
icebp
inc
mov
lea
movs
sub
call
ins
sbb
repnz
and
fsin
jno
sbb
push
sti
frstor
rcr
adc
hlt
inc
cli
cmp
adc
(bad)
adc
mov
pop
out
popa
pop
out
ds
mov
xor
into
adc
push
shl
and
cmps
mov
cmp
arpl
adc
mov
fcomp
jg
call
arpl
loope
add
aas
mov
jmp
test
into
retf
xor
jg
jne
inc
js
jb
mov
jo
adc
call
in
aam
pop
dec
hlt
fsubr
fist
xchg
mov
cmp
and
dec
es
es
in
int
pushf
pop
pop
std
fisubr
sbb
pushf
shl
inc
pop
sbb
(bad)
cld
mov
jno
movs
add
ret
retf
fist
mov
cmp
mov
mov
mov
lods
mov
(bad)
dec
mov
and
cmp
jmp
retf
jnp
pop
sub
lods
add
cli
cmp
dec
cs
dec
dec
cmp
lods
push
addr16
and
jb
ds
mov
lea
xor
push
pop
lods
adc
and
cmp
call
lock
cmp
(bad)
shr
push
sub
mov
inc
adc
dec
cmp
mov
push
in
outs
sub
leave
and
test
sti
jne
aas
je
arpl
imul
retf
or
imul
pop
pushf
loopne
and
jecxz
inc
fsub
fbstp
out
psubsw
mov
into
dec
push
(bad)
xchg
inc
hlt
or
aaa
rol
gs
repz
test
bound
in
cmps
mov
inc
leave
cmps
lea
mov
or
bound
idiv
cmps
dec
and
iret
inc
ret
pop
popf
mov
out
fmul
adc
xchg
jo
adc
pop
not
test
mov
lods
sub
mov
das
movs
in
pop
out
jns
xlat
das
xchg
imul
add
ret
rol
jge
sbb
fstp
cmc
sub
cmp
dec
gs
pop
or
imul
or
test
mov
ret
adc
retf
mov
xchg
inc
jp
div
xchg
mov
fcomp
xchg
cmp
fist
lock
ja
stos
or
add
mov
jmp
call
cmp
push
sub
mov
in
loop
inc
rcl
mov
(bad)
pop
sbb
vorpd
push
das
inc
shl
out
fdivr
call
mov
adc
sbb
mov
push
ins
sbb
cld
mov
mov
aam
xchg
rcl
loopne
dec
shl
xchg
mov
and
push
mov
(bad)
cmp
adc
or
and
outs
mov
push
dec
adc
jae
out
repz
sbb
mov
ja
sbb
inc
addr16
leave
repz
xor
stos
(bad)
mov
fisttp
icebp
mov
pushf
ret
out
imul
cmp
ret
xchg
mov
out
enter
jmp
int3
hlt
mov
add
mov
mov
cmp
add
out
aad
(bad)
in
(bad)
or
test
pop
dec
test
pushf
mov
or
jl
xchg
inc
mov
xchg
xchg
clc
stos
dec
retf
or
and
repnz
jo
xchg
stos
leave
aam
rcl
cmp
test
repnz
(bad)
mov
mov
test
xor
xor
ffreep
xor
cld
sbb
jle
sub
push
xor
in
adc
ret
mov
jae
mov
hlt
or
addr16
fisub
xor
loopne
imul
mov
adc
int3
imul
dec
daa
out
leave
lahf
push
sub
aaa
int
inc
mov
int3
push
hlt
pop
sub
mov
pcmpeqb
fimul
jmp
(bad)
retf
mov
sbb
mov
mov
adc
mov
aad
jg
ds
shr
mov
push
mov
jnp
sbb
jns
js
ret
fsub
ja
or
ror
cmp
jle
les
nop
cmp
fiadd
inc
fld
cmp
aam
mov
ss
mov
cli
cmovle
daa
dec
call
push
xor
inc
mov
mov
out
loop
icebp
daa
out
cdq
daa
or
push
add
jae
mov
xchg
xchg
ds
(bad)
lods
mov
lods
daa
aad
sbb
mov
add
dec
mov
in
push
jmp
sub
cmp
jne
mov
or
pushf
cmc
adc
cdq
adc
mov
cmp
(bad)
das
test
inc
mov
leave
jo
inc
out
mov
and
pop
in
mov
jb
and
call
or
lods
std
inc
ins
adc
and
leave
inc
pop
retf
jo
popf
dec
or
pop
add
or
sar
imul
pop
pop
pop
lods
ss
stos
aas
movs
xchg
mov
ja
dec
and
push
xor
push
dec
push
cmp
daa
mov
dec
xchg
fdivr
adc
xlat
retf
stos
pop
push
lahf
adc
push
mov
push
ficomp
jge
bound
cmp
arpl
call
fscale
bound
pop
scas
jno
std
and
jl
pop
pop
add
(bad)
xchg
and
nop
ss
(bad)
mov
loopne
ret
sbb
cmp
pop
jmp
cli
push
pop
rcl
imul
in
leave
pop
loop
(bad)
mov
mov
(bad)
rcr
sbb
js
adc
repz
stos
maskmovq
imul
out
xchg
jl
arpl
(bad)
mov
test
ror
xlat
mov
scas
and
arpl
push
in
adc
mov
les
fcomp
shr
loope
arpl
leave
mov
inc
mov
pop
xor
outs
gs
mov
xchg
mov
lods
adc
lock
movs
in
sub
inc
test
daa
mov
popf
sub
leave
cwde
cli
icebp
push
pop
jo
icebp
jecxz
mov
or
neg
xor
mov
xchg
jbe
pop
jp
pop
push
or
or
daa
je
call
xchg
add
xor
fdivrp
shl
mov
stos
jmp
fcomp
out
arpl
jle
sbb
vpshuflw
push
pop
jmp
jno
fisubr
mov
and
stos
xchg
cwde
cmp
aas
call
inc
sahf
mov
push
push
mul
scas
add
in
aam
outs
pop
adc
mov
push
retf
or
push
mov
pushf
jae
fdivr
xlat
and
xchg
mov
add
or
dec
push
ficomp
loop
dec
jecxz
(bad)
(bad)
enter
push
repnz
adc
dec
movs
xor
test
shr
fdivr
stc
jno
repz
fwait
inc
stos
cwde
je
std
mov
pop
adc
test
in
in
test
xchg
enter
jmp
add
jmp
mov
and
and
int
repz
lods
test
pop
mov
shl
int3
dec
stc
shr
dec
push
pop
xor
ins
test
pop
int
std
xor
jp
push
pop
lods
int3
lea
std
rcr
rcr
mov
pop
jl
dec
jl
fwait
loope
xor
mov
adc
dec
in
cmp
sbb
and
push
test
fndisi(8087
cmp
je
test
mov
mov
repnz
mov
pop
mov
std
adc
mov
jno
(bad)
mov
cs
icebp
xor
and
shl
or
mov
(bad)
int3
dec
mov
add
(bad)
cmp
xchg
aas
add
repz
pop
push
xor
adc
ficomp
(bad)
or
ja
mov
rcl
sbb
shl
cmp
inc
and
push
arpl
xor
sbb
leave
jo
daa
outs
sbb
retf
gs
stos
push
cli
popf
shl
dec
push
(bad)
(bad)
cdq
int3
dec
stos
xchg
iret
jmp
push
mov
sbb
pop
jp
or
cmp
test
ins
cs
aas
fs
sbb
xor
ret
xor
aad
adc
in
fwait
xchg
stc
rcr
xchg
ss
scas
xchg
sahf
repz
mov
(bad)
xchg
out
rcr
cmp
movs
stos
inc
jne
jle
jnp
fsubr
xchg
cmps
cwde
jmp
iret
pop
movs
bound
stos
jmp
pop
push
dec
dec
jbe
mov
sub
inc
loop
sub
mov
fcmovbe
jmp
and
xchg
and
aaa
sub
call
cmc
cmp
cmc
jmp
in
jl
dec
push
loope
jle
aam
ret
in
jne
outs
les
mov
dec
mov
push
enter
xor
jbe
adc
sub
xor
pop
jp
fnstsw
aam
fisttp
dec
jg
pop
add
sti
pop
rol
cmp
test
repz
adc
into
dec
sub
test
dec
lods
jbe
add
and
cwde
out
cld
mov
loopne
inc
adc
rol
inc
dec
js
or
nop
test
push
movs
ja
push
mov
push
inc
mov
enter
stos
outs
mov
addr16
stos
xchg
aaa
test
jno
imul
mov
jle
jne
adc
rol
adc
xchg
(bad)
mov
daa
hlt
adc
xor
ins
bound
andps
sbb
rol
inc
outs
xchg
push
pop
shl
push
cmp
jp
shr
test
(bad)
iret
mov
pop
inc
sub
fcmovnb
scas
dec
out
stos
add
inc
std
addr16
ret
dec
mov
retf
jecxz
mov
shl
cwde
dec
adc
dec
das
jo
ins
sbb
push
or
stos
push
and
xchg
adc
mov
xchg
cmps
fsub
push
pop
je
adc
push
xchg
push
mov
rcl
sub
push
cmc
cmp
cmp
mov
mov
repz
jle
loopne
jecxz
stos
jge
push
push
xor
cmp
add
xor
ja
add
inc
frstor
push
mov
out
mov
sub
push
out
stos
idiv
adc
pusha
add
stos
sub
stos
or
(bad)
ja
pop
sub
inc
jmp
sbb
xor
cs
mov
add
push
in
or
nop
xor
sbb
ss
adc
ja
fwait
dec
arpl
mov
stc
mov
jl
sbb
adc
pushf
jne
adc
or
adc
xor
add
sbb
mov
xchg
push
sbb
pop
xlat
jmp
cwde
push
fdiv
xchg
out
jns
pushf
inc
int3
add
jecxz
repz
mov
fst
imul
cwde
stos
fldcw
fdiv
repz
mov
sub
cmps
daa
ret
ror
shr
inc
adc
xor
inc
int
cmp
sub
pop
imul
es
xchg
mov
mov
outs
sbb
test
aaa
xchg
(bad)
mov
inc
inc
push
xchg
dec
inc
mov
dec
push
xor
push
stc
jl
mov
loope
ins
jecxz
xchg
jge
mov
retf
adc
mov
mov
fild
aas
pusha
cdq
and
fmul
lods
imul
ins
xchg
ja
hlt
xchg
ja
aam
mov
sti
mov
out
and
dec
outs
xchg
fiadd
lods
mov
mov
punpcklwd
imul
lods
and
jge
push
mov
retf
xchg
inc
jnp
adc
(bad)
mov
mov
mov
and
dec
mov
cs
sub
jecxz
dec
cmp
mov
push
(bad)
fadd
movs
add
inc
dec
fisttp
call
les
into
xchg
inc
das
push
pushf
bound
out
leave
add
(bad)
and
mov
xchg
and
adc
mov
jecxz
not
stc
mov
xor
outs
sub
sbb
jge
sub
pop
and
cmp
push
xlat
jbe
push
jmp
fs
test
or
cmps
inc
stc
or
mov
ins
mov
sbb
pop
mov
cmp
movs
or
sbb
in
retf
xchg
pop
pushf
jl
ffreep
popa
mov
adc
imul
outs
icebp
ret
(bad)
xlat
sbb
into
cmp
mov
movs
test
add
loop
pop
dec
ret
sbb
js
lock
or
mov
into
pop
add
jno
(bad)
ins
push
retf
fwait
and
outs
dec
cld
movs
sub
pop
mov
mov
push
mov
push
iret
adc
and
add
mov
(bad)
mov
clc
idiv
iret
inc
std
lods
jmp
mov
stc
sbb
jmp
icebp
cwde
cmp
mov
das
jnp
inc
cmp
shr
test
inc
adc
jl
je
scas
pop
out
(bad)
out
enter
xchg
or
inc
mov
mov
dec
xchg
fsubrp
mov
jae
jbe
std
test
retf
mov
outs
clc
call
dec
test
ror
push
jecxz
aad
cld
cdq
sub
aas
pop
int
pop
bound
jnp
std
or
movs
sbb
loop
sbb
xchg
cmps
mov
cs
jbe
scas
mov
sahf
pop
jge
dec
test
dec
adc
rol
nop
pop
mov
jnp
or
ret
xchg
(bad)
and
sbb
push
rol
adc
test
es
stos
fs
push
jecxz
push
outs
sub
movs
faddp
test
jg
adc
daa
scas
int
loop
nop
and
scas
mov
or
sar
inc
jg
jmp
div
push
ret
sbb
and
adc
jmp
(bad)
test
mov
sbb
fistp
stos
push
cmps
gs
xor
aam
arpl
add
mov
and
mov
mov
add
dec
ds
cmps
das
lods
int
inc
repnz
ret
jmp
cmp
xchg
(bad)
cmc
(bad)
into
enter
fnstcw
pslld
xor
add
gs
out
lods
sbb
mov
add
idiv
pusha
test
aas
dec
(bad)
arpl
or
call
lods
mov
loop
(bad)
imul
mov
mov
inc
adc
jge
dec
out
pop
shr
mov
int
lds
jae
test
movs
sub
add
fsubr
sbb
push
enter
mov
push
and
xor
ins
or
push
imul
arpl
cvtpi2ps
loopne
xor
test
fadd
rol
cld
nop
popf
jmp
outs
mov
pop
jo
test
inc
mov
inc
inc
movs
call
jl
cmp
jae
adc
in
jnp
movs
inc
mov
out
push
cmp
xlat
cmp
cmp
das
mov
mov
xor
or
test
scas
pmaxub
sub
mov
inc
inc
call
ja
mov
fwait
sbb
or
in
ror
rcl
cli
leave
ss
repz
inc
jmp
enter
cs
adc
leave
pop
aas
mov
or
into
ja
mov
dec
leave
sahf
or
(bad)
sub
xor
stos
popa
ficom
sbb
or
(bad)
jae
sub
gs
sbb
mov
clc
jg
inc
cmp
bound
mov
push
cmp
in
or
ss
mov
mov
inc
inc
push
outs
fistp
jne
add
and
idiv
repnz
ja
push
xlat
(bad)
push
pop
mov
(bad)
lock
jge
pop
movs
pop
fsub
test
out
xor
mov
push
lock
mov
pop
mov
jecxz
sub
jg
pop
mov
popf
lods
dec
and
inc
jae
inc
movs
jl
push
jmp
stos
add
jg
sbb
sbb
ins
popf
sub
shl
stos
jo
fbld
popf
call
inc
and
jb
push
push
pop
sti
call
jno
jge
fistp
cld
adc
dec
inc
(bad)
popa
dec
sbb
or
mov
xor
xchg
outs
xchg
movs
cmp
rol
dec
or
dec
les
cwde
mov
xor
fwait
(bad)
icebp
mov
js
mov
adc
or
and
mov
das
aaa
addr16
pop
jb
pop
or
inc
jle
sbb
pop
sbb
leave
add
test
and
push
push
jbe
das
mov
loop
mov
inc
jb
cmps
es
scas
outs
pop
mov
popf
mov
sahf
mov
xchg
xor
enter
push
add
cmp
jo
sti
add
ror
leave
jae
adc
inc
push
pop
and
mov
leave
mov
out
jns
inc
loopne
fiadd
push
(bad)
jo
daa
pop
cmp
loopne
imul
sbb
pop
pop
cmp
inc
aam
push
push
sub
fist
push
xchg
mov
jmp
xlat
pop
imul
mov
dec
cmp
mov
push
jne
dec
ror
popa
rcl
sbb
pop
jo
test
mov
cdq
and
xor
mov
cmps
xor
xchg
push
push
sub
pusha
adc
repz
or
inc
add
outs
push
mov
jae
add
push
mov
lahf
add
pop
mul
int
jecxz
xchg
jbe
add
scas
mov
cmp
push
daa
cmc
pop
jbe
pop
lods
dec
mov
iret
push
mov
pop
mov
and
jge
(bad)
adc
mov
push
test
mov
test
sbb
ror
sub
cmp
adc
inc
shl
pop
imul
mov
mov
stos
fucomp
xor
and
cdq
loope
dec
mov
mov
add
lea
adc
ja
push
push
adc
push
mov
xlat
imul
sub
jne
outs
add
dec
dec
(bad)
cs
pop
and
xchg
mov
fwait
push
mov
addr16
mov
xlat
or
addr16
(bad)
out
and
inc
enter
pop
daa
adc
mov
xor
(bad)
cmp
mov
ss
jl
ins
out
ror
xchg
mov
out
loopne
lahf
mov
sbb
(bad)
jmp
into
sar
rol
sar
push
jmp
jge
out
or
xchg
data16
cmp
js
inc
or
in
ret
aaa
jno
sbb
xor
cwde
mov
lods
jno
xchg
repz
add
jge
xchg
xor
xchg
mov
jge
jbe
mov
lahf
jge
test
pop
cmp
pop
rol
clc
dec
xor
mov
dec
sub
xor
imul
inc
fnstcw
mov
sub
inc
(bad)
fimul
sti
(bad)
lea
cs
mov
mov
enter
loop
jecxz
lea
mov
sub
mov
pop
movs
push
inc
pop
fs
xor
xlat
(bad)
mov
mov
sub
push
fistp
inc
es
ror
test
fcom
and
cmp
aas
dec
test
fwait
shr
cmps
lods
add
gs
dec
loope
mov
push
cmp
xor
std
mov
retf
push
adc
xchg
shl
loope
fisttp
jno
inc
dec
sbb
adc
push
dec
add
mov
in
push
in
or
div
or
mov
vmwrite
arpl
hlt
or
rcl
mov
dec
and
cmovo
bound
hlt
bound
sbb
out
and
sti
fcom
mov
adc
xchg
mov
sbb
in
icebp
jo
cmp
gs
mov
fnstenv
mov
dec
mov
fstp
push
fdivr
movs
addr16
scas
enter
mov
jge
cmp
retf
push
iret
adc
movs
ds
outs
clc
mov
cs
lea
sahf
xor
int3
inc
pop
aad
xchg
push
adc
pop
mov
sbb
movs
loopne
mov
add
pop
jae
pop
nop
iret
lds
or
mov
inc
aas
ins
es
fwait
pop
xchg
sub
lahf
pop
add
adc
clc
pop
je
adc
xchg
(bad)
jmp
push
push
arpl
jno
ror
xor
mov
mov
or
sub
out
mov
cmc
aad
das
loop
pop
aas
push
pop
add
scas
mov
movs
(bad)
mov
cmp
out
mov
lods
ss
xor
hlt
pop
pop
mov
sub
and
mov
jnp
ret
push
or
hlt
cmps
pusha
mov
adc
mov
sub
mov
test
loop
and
or
loope
or
mov
jmp
mov
dec
and
lock
(bad)
fnstenv
es
lds
and
sar
(bad)
cmps
mov
imul
ss
jnp
cld
ss
sub
dec
sbb
adc
add
imul
pop
mov
mov
aas
comiss
movs
mov
sub
mov
clc
das
mov
daa
ret
or
mov
daa
push
dec
std
sbb
push
cwde
xchg
inc
ins
mov
jae
cmp
test
jmp
jno
cmp
jo
shl
pop
inc
mov
and
add
inc
mov
pop
pop
cmp
and
sahf
push
or
cmp
outs
pop
stos
sbb
pop
ss
sub
repnz
push
mov
xor
push
retf
mov
jecxz
out
leave
lds
push
and
jo
or
ss
scas
in
fcom
mov
push
add
(bad)
les
mov
sbb
push
pop
rcl
gs
pusha
scas
dec
adc
retf
ins
hlt
out
call
int3
jl
mov
pop
and
scas
mov
push
stc
and
enter
jb
jmp
pop
push
mov
lea
cmp
call
out
mov
cmp
mov
push
jl
push
mov
xchg
addr16
xchg
xor
movs
mov
sub
in
mov
fnstcw
xor
mov
inc
push
sahf
pop
retf
nop
in
mov
clc
mov
call
pop
cmp
test
pop
or
loop
retf
dec
and
mov
rcl
loope
int
loopne
mov
mov
push
pop
jl
ret
mov
aad
mov
xor
xchg
jmp
test
scas
out
push
and
sbb
ficom
push
push
mov
xchg
xchg
ret
push
lods
xor
shl
movs
mov
jmp
pop
dec
dec
outs
xchg
jae
add
xor
je
test
test
mov
fld
xor
jbe
pop
add
int
add
adc
shl
mov
cmps
or
call
cmp
sbb
add
xor
or
adc
rep
lods
aad
imul
ins
ret
je
xlat
or
xchg
sub
adc
pop
popf
push
loop
inc
dec
adc
xor
xor
(bad)
sub
or
dec
dec
or
pop
push
sbb
cmps
add
ins
inc
dec
mov
mov
adc
push
add
sbb
push
inc
mov
lods
imul
stc
pop
pop
cmp
adc
fmul
and
jge
lods
mov
add
mov
adc
mov
neg
test
push
pop
movs
cld
test
cmp
fwait
adc
aaa
sub
add
je
lods
std
stos
ja
cmps
arpl
repz
imul
mov
ins
push
test
cwde
sub
or
xchg
sub
lock
add
sbb
or
fcomp
std
out
jns
jg
popf
movs
pop
loop
xchg
out
push
lock
stos
fcomp
scas
sbb
jmp
mov
fadd
dec
ret
sti
dec
and
(bad)
aaa
xchg
mov
inc
fnstcw
push
clc
jge
das
add
push
mov
and
sti
sar
dec
and
test
ja
les
adc
xchg
clc
mov
js
repz
dec
outs
psrlq
xchg
sub
xor
cmps
outs
adc
push
push
movs
lock
hlt
jle
mov
jae
sbb
bound
repnz
in
mov
adc
js
lods
pusha
xchg
mov
push
aaa
fiadd
dec
aam
mov
in
xor
std
test
fistp
out
jno
ret
mov
and
sar
jbe
cwde
mov
sahf
not
repz
lahf
bound
fwait
pop
and
inc
pop
inc
aaa
repnz
pusha
fwait
dec
sbb
loop
call
hlt
push
push
mov
cmp
out
popf
sub
push
out
dec
push
daa
adc
les
sbb
ins
outs
cld
jmp
(bad)
dec
xchg
mov
xchg
or
push
inc
push
imul
dec
neg
fmul
clc
rcl
aaa
gs
inc
aad
dec
dec
pushf
push
jb
loope
aaa
pop
cmp
xor
dec
sbb
or
je
jb
inc
sub
shl
in
mov
mov
pop
xor
ins
lods
sbb
inc
jmp
out
mov
cmc
jge
daa
cwde
outs
cli
fbld
outs
push
pop
push
adc
jp
or
pop
xchg
push
test
movs
test
sub
ds
mov
lods
popf
dec
dec
(bad)
es
cmp
pop
push
sbb
mov
movs
fisub
out
stc
sbb
rcl
dec
std
adc
cmc
or
pop
sub
lahf
dec
sti
jl
bound
leave
movs
sbb
ret
inc
mov
test
dec
jae
or
(bad)
cs
mov
mov
mov
inc
mov
pop
mov
xchg
fs
ret
mov
rol
and
mov
(bad)
fld
lock
cmp
retf
add
pop
xor
sar
bound
fist
ins
push
mov
sub
das
movs
pop
and
loopne
or
test
xchg
mov
cmp
add
pop
cmp
sub
repnz
stc
or
dec
jne
aam
int3
cmp
mov
jnp
outs
sahf
or
fisttp
imul
sub
or
pop
ror
mov
push
mov
enter
jecxz
push
in
stos
cmc
sbb
shl
(bad)
dec
es
(bad)
(bad)
idiv
push
out
xchg
cli
jmp
inc
bound
cmp
jne
cmps
ret
push
add
lods
mov
add
sar
test
dec
ins
xchg
call
xchg
add
inc
push
or
retf
test
xchg
iret
xchg
jb
gs
call
in
xchg
jmp
popaw
dec
jne
pop
fdiv
and
push
mov
pop
mov
jbe
sar
add
out
push
cmp
lods
(bad)
sbb
xchg
nop
loope
push
out
push
sub
hlt
xchg
je
in
xchg
icebp
sbb
out
popa
gs
add
test
(bad)
pop
ret
cmp
stos
gs
sti
into
sbb
xor
adc
jmp
jnp
adc
and
adc
add
xor
out
mov
mov
jae
(bad)
or
sbb
mov
pop
pop
faddp
cld
push
outs
stc
xchg
gs
mov
lds
or
pop
sub
mov
add
nop
test
les
pop
mov
repz
(bad)
bound
inc
push
popa
cwde
popa
(bad)
mov
mov
jno
cdq
jp
rcl
pusha
mov
retf
mov
lods
push
dec
inc
clc
fnstsw
pop
sar
retf
mov
inc
fs
popf
mov
int
xor
jo
movs
mov
cmp
and
cwde
nop
lea
mov
ins
lds
int3
leave
addr16
push
inc
jmp
sbb
jl
jle
sub
pop
add
adc
fwait
jg
hlt
xor
push
in
mov
aaa
add
mov
push
outs
mov
ret
mul
adc
popf
mov
jbe
mov
call
inc
in
sub
inc
or
ja
loope
nop
sub
xor
push
xchg
push
xor
cmc
test
ret
jecxz
add
fcomi
popa
inc
movs
pop
js
into
push
icebp
div
loopne
mov
call
mov
gs
mov
xor
mov
adc
pop
movs
fdiv
cmp
jge
gs
xchg
mov
outs
adc
out
ds
cmp
push
xchg
icebp
sbb
mov
and
mov
push
inc
in
mov
nop
xchg
and
dec
(bad)
and
xchg
pop
ror
dec
lods
(bad)
test
xchg
pop
add
mov
sub
cwde
xor
lds
jle
push
pop
mov
add
out
pop
pop
int
mov
mov
sub
sbb
push
mov
mov
pop
pop
test
dec
enter
rcl
xchg
out
sub
nop
cmp
mov
fsub
and
mov
scas
stos
inc
enter
and
(bad)
or
arpl
call
sub
inc
push
xchg
jno
(bad)
push
sbb
xchg
ret
jmp
mov
push
mov
push
jecxz
sbb
sbb
pusha
call
and
ret
push
je
lock
lods
jns
sub
int
add
das
sub
hlt
mov
rol
mov
mov
pop
imul
imul
push
test
aaa
sub
pop
iret
vpperm
pop
adc
adc
inc
in
cmps
mov
js
int
out
and
dec
cs
sub
stos
pop
lods
fld
stc
add
outs
pop
test
or
mov
pop
in
sti
xchg
sbb
xor
outs
jbe
mov
sub
nop
xlat
adc
out
push
fnstcw
xchg
(bad)
sbb
cli
xor
and
mov
cmp
imul
push
outs
loopne
(bad)
dec
cdq
dec
je
jp
or
push
pop
arpl
jnp
mov
jns
pop
adc
mov
daa
dec
sahf
aam
rol
outs
sbb
jmp
loope
mov
test
and
nop
mov
xor
jnp
add
sub
shl
sar
mov
sbb
stos
cmp
and
aaa
nop
rcl
icebp
retf
sbb
ja
cld
inc
outs
cdq
mov
and
pop
cli
imul
mov
pop
cmp
aas
outs
cdq
dec
pop
xchg
dec
test
pop
in
inc
cmp
sub
rcl
push
sar
push
imul
data16
sub
imul
mov
jmp
ja
mov
push
pushf
and
arpl
dec
cmc
clc
xlat
iret
mov
push
jle
bound
scas
movs
gs
sbb
jl
push
stos
aam
mov
dec
add
adc
scas
movs
sub
cmp
aaa
repnz
dec
sbb
sti
mov
sar
jns
xchg
(bad)
jmp
gs
inc
and
test
mov
fisubr
mov
adc
xchg
add
cmp
cmc
push
mov
add
fdiv
cmp
(bad)
fxch
sbb
push
push
sbb
or
xor
lods
add
ss
add
push
jnp
pop
xor
mov
dec
mov
xor
pop
xor
jae
push
pop
adc
push
(bad)
jg
cdq
push
xchg
adc
mov
xor
ret
pop
xor
sti
push
clc
movs
les
xchg
aas
cmp
xchg
mov
stos
cmp
mov
and
mov
lods
sub
cmp
scas
jae
xchg
imul
mov
adc
xor
adc
pop
or
dec
sub
push
lods
add
pop
sbb
add
in
shr
ins
pop
ds
loopne
xchg
mov
jecxz
into
aaa
arpl
cmp
xchg
int3
mov
aam
and
dec
leave
mov
inc
inc
ins
jae
hlt
loop
mov
push
bound
inc
mov
pop
push
in
xor
popa
popa
dec
enter
mov
dec
xor
stos
fsubr
aam
dec
es
dec
out
in
add
jge
inc
inc
sbb
rcr
xor
ss
(bad)
mov
inc
jp
int3
jge
in
jge
xor
cmc
sbb
xor
push
sbb
mov
mov
aaa
push
jl
popa
shr
stos
xchg
es
pushf
lods
mov
fs
pop
lea
mov
dec
and
test
dec
and
cdq
cmp
out
es
xchg
test
fwait
aam
add
jae
(bad)
pusha
mov
(bad)
lock
push
sub
or
shl
push
sbb
int
imul
movs
pop
dec
pop
or
iret
and
mov
inc
scas
sub
cdq
shl
aaa
mov
das
jae
add
push
data16
add
popa
xor
push
or
sub
int
push
or
stc
inc
sbb
xchg
mov
mov
xlat
mov
pop
adc
sub
iret
hlt
xor
out
jge
push
add
ror
xchg
cdq
push
mov
repnz
cmp
into
push
cld
ja
lds
sbb
call
cmc
scas
push
lods
(bad)
cli
mov
movs
xchg
fsub
push
mov
imul
xchg
mov
test
mov
sub
cdq
fnstenv
mov
xchg
inc
and
adc
addr16
mov
js
ins
cwde
jbe
hlt
mov
xchg
mov
adc
sub
push
cmps
jae
lock
cmp
jecxz
adc
ins
(bad)
das
mov
and
fidivr
lahf
enter
and
inc
inc
call
ins
jno
arpl
dec
pop
mov
loope
cmp
int3
jecxz
movs
fdecstp
cli
xor
ds
std
sahf
fist
fwait
add
xor
cmp
jnp
push
dec
mov
add
xor
xor
fidiv
mov
jp
int3
jp
(bad)
cli
sbb
in
cld
cmp
ja
cmp
xchg
fiadd
sahf
jmp
pop
inc
jmp
pop
push
int
and
and
call
and
push
fist
retf
sub
outs
scas
jno
test
pop
call
cs
xchg
fisubr
xchg
mov
jno
xchg
cmp
dec
cmp
out
mov
aad
xor
ins
mov
mov
pusha
or
xor
addr16
ins
ret
mov
pusha
and
js
jae
cmc
pop
adc
push
pextrw
rol
jecxz
ins
pop
or
mov
clc
in
ins
inc
pop
mov
xchg
pop
mov
dec
and
mov
push
mov
mov
pop
push
test
iret
imul
ss
and
push
ror
or
sub
cmps
shl
dec
out
adc
call
push
mov
enter
in
into
movs
push
jecxz
les
icebp
jnp
sub
xor
dec
imul
frstor
(bad)
mov
ja
jno
jnp
pushf
and
sbb
push
(bad)
sub
or
cmp
hlt
xchg
out
sub
sub
sbb
dec
xor
pop
movs
xor
jge
not
sub
pop
add
pop
cwde
push
mov
nop
push
xor
out
add
jae
sbb
push
(bad)
fsubr
shr
sub
push
cmp
inc
adc
dec
ret
jo
not
aad
and
push
movs
xchg
dec
cdq
call
fs
sbb
inc
xor
jno
ds
inc
icebp
jae
xchg
je
cmp
cmp
fcomp
pop
or
retf
dec
sub
xor
loopne
movs
pop
bound
sub
add
mov
(bad)
loope
inc
sub
fisub
aas
imul
jbe
mov
or
pop
jmp
test
mov
je
gs
pop
pop
cmp
push
retf
std
pusha
mov
ins
mov
cwde
pop
jbe
mov
cmp
or
jecxz
jp
or
add
sub
fwait
jp
cs
call
mov
xchg
scas
add
inc
push
and
into
xchg
pop
lds
jp
stos
pop
or
test
(bad)
jmp
arpl
les
aad
push
hlt
jnp
inc
inc
pusha
push
jnp
aaa
cli
das
mov
jmp
mov
jb
in
pop
pop
(bad)
(bad)
sar
cs
fwait
cs
and
test
mov
inc
mov
mov
clc
inc
add
sbb
mov
jg
push
fild
mov
jmp
inc
adc
adc
xor
mov
add
sar
jle
(bad)
stc
test
inc
xor
adc
mov
mov
xlat
inc
pop
rcr
xor
pusha
mov
xchg
clc
ins
nop
cld
jle
or
or
xor
add
xor
gs
xchg
retf
ja
add
or
push
jne
sbb
sub
bound
stos
pop
add
sbb
sub
scas
pop
jecxz
dec
in
outs
jns
dec
xchg
pushf
test
xchg
dec
pop
movs
fcom
sbb
std
pop
shr
scas
or
inc
lock
cdq
sub
inc
cmps
pop
stos
(bad)
pop
out
and
jnp
or
jecxz
adc
pop
push
sar
mov
rol
inc
mov
cmps
adc
and
mov
rcl
and
test
fisub
cmp
sub
pusha
ret
outs
jb
cli
fld
jp
in
inc
sbb
movs
call
popf
ja
das
mov
jmp
jg
inc
sbb
sbb
xlat
adc
jle
or
(bad)
push
mov
in
pop
mov
pusha
call
stos
or
inc
xchg
add
push
loopne
test
loop
xor
mov
jne
inc
(bad)
xor
mov
pop
mov
dec
ret
arpl
fbld
cmps
sbb
mov
mov
enter
movd
test
test
loope
pop
sub
call
or
sub
mov
lods
fdiv
(bad)
xor
outs
jno
add
ins
fnstcw
loope
xchg
and
and
jl
ret
xor
leave
popf
add
jb
jge
das
jbe
mov
cmps
(bad)
mov
adc
jp
aad
daa
pop
sbb
cmp
xchg
cmp
and
cmp
stc
push
ja
test
inc
push
mov
je
xchg
or
movs
sub
clc
jecxz
mov
add
mov
sub
scas
lods
mov
ins
and
dec
sar
outs
mov
ss
and
xor
xlat
pop
stos
jl
and
shl
mov
loopne
daa
sbb
xchg
pop
out
loop
push
ret
sub
mov
sub
pop
in
add
mov
nop
xrelease
int3
mov
lods
xchg
movs
aaa
xor
(bad)
jp
xchg
scas
fld
jg
mov
int
inc
ret
push
cli
ror
mov
shl
inc
sahf
jmp
das
das
dec
jmp
aad
jge
or
pop
cmp
mov
gs
es
mov
mov
xchg
push
dec
rol
sub
or
enter
pushf
jmp
jne
or
pop
adc
cmp
push
shl
xor
jb
inc
pop
cld
call
xchg
call
add
jne
mov
bound
xor
adc
mov
test
push
aam
dec
icebp
aad
push
xchg
in
ficomp
repz
daa
test
jmp
lds
cmps
mov
jmp
fucomi
out
push
repz
xchg
mov
(bad)
and
nop
xlat
repnz
mov
cdq
ror
gs
push
mov
push
pop
pop
adc
loop
inc
and
mov
inc
(bad)
popa
scas
jmp
or
or
dec
jmp
aam
mov
ins
xor
mul
and
mov
mov
iret
rcr
iret
mov
aam
lock
inc
mov
sar
jl
repnz
jmp
hlt
or
fst
leave
push
sub
sbb
push
adc
xlat
scas
ins
adc
lahf
retf
dec
mov
xchg
clc
ins
push
cmp
jb
jle
dec
ret
(bad)
adc
mov
dec
popa
(bad)
push
gs
stos
ficomp
dec
jb
and
xchg
mov
cmp
(bad)
in
retf
mov
push
add
in
es
pop
xor
popa
outs
cmp
sub
sbb
in
sbb
sahf
xchg
inc
icebp
and
mov
push
mov
adc
mov
shl
sbb
push
jg
fcomp
inc
retf
jo
mov
in
sub
jp
inc
movs
dec
out
int3
lods
mov
test
jl
mov
mov
jns
lock
push
adc
pop
sub
sbb
fs
fild
xchg
pop
iret
out
je
or
pop
and
cmp
ret
into
pop
sub
mov
push
jmp
test
mov
xchg
movs
pop
dec
pop
add
jae
shl
(bad)
retf
pop
cwde
in
xor
cmc
fisubr
(bad)
push
retf
mov
mov
mov
fisub
and
ficom
fwait
push
(bad)
cmp
popa
push
cdq
mov
push
rcl
jge
lock
scas
out
sbb
pop
mov
mov
leave
jns
ret
add
inc
call
or
mov
push
dec
dec
aas
rep
test
mov
loopne
(bad)
cmp
push
outs
pop
mov
inc
fld
fwait
dec
in
jmp
cdq
fdivr
(bad)
fsub
outs
jge
js
lods
xor
mov
sub
(bad)
jo
mov
xchg
jne
addr16
pop
sahf
push
sar
movs
imul
sub
mov
adc
and
imul
retf
push
sbb
push
dec
retf
int3
or
sbb
fsubr
ret
sbb
sti
pushf
push
sub
and
mov
or
pop
fst
shl
jmp
pushf
in
push
jns
imul
mov
pop
push
sub
cli
xchg
sbb
xchg
(bad)
sbb
cwde
ror
js
cmp
sub
or
arpl
das
pop
jg
mov
mov
bound
popa
or
into
int
inc
out
pop
push
call
lods
inc
mov
add
jmp
shr
adc
jle
and
jbe
ins
fild
call
ss
jg
aas
lock
movs
xor
sub
and
or
aam
xchg
pop
ins
outs
dec
fldcw
sbb
dec
loopne
dec
jb
js
(bad)
or
sti
xor
mov
outs
not
fbld
mov
mov
bound
fld
test
pop
shl
add
sbb
das
and
scas
cdq
out
mov
clc
dec
loopne
fidivr
fst
sub
(bad)
data16
jecxz
jp
out
addr16
jnp
and
retf
hlt
pop
xchg
int3
add
dec
adc
movs
xchg
and
mov
adc
dec
jns
jecxz
mov
sub
mov
mov
mov
inc
push
lods
sub
pop
cs
retf
cmp
inc
add
out
icebp
lods
in
das
dec
repz
cmps
mov
push
ins
int
into
nop
pop
pop
and
jb
xchg
popa
or
cmp
and
pusha
aad
call
movs
mov
xchg
sub
pop
js
sub
sbb
or
fwait
add
repnz
or
pop
imul
mov
mov
movs
push
adc
add
xor
cmp
lea
aad
and
jne
push
jo
xor
lock
inc
jo
xchg
cdq
mov
sbb
cmp
lods
add
movs
jae
push
in
test
xchg
mul
cld
popf
ins
mov
call
lea
loop
inc
iret
pop
jmp
dec
fld
pop
adc
call
dec
(bad)
es
jle
(bad)
aas
jno
xchg
retf
(bad)
js
fistp
or
movs
push
call
aam
addr16
dec
mov
in
fidivr
mov
dec
shl
leave
fst
mov
push
ret
cdq
sub
mov
in
adc
pushf
pop
add
pop
lock
or
stc
outs
popa
dec
test
mov
xchg
in
jmp
xor
inc
xor
pop
mov
and
push
inc
imul
add
xchg
jp
adc
xor
xchg
out
jno
dec
sbb
lea
jnp
aam
stos
pop
cld
inc
inc
mov
add
mov
fs
push
dec
retf
jnp
les
pop
jnp
shr
jae
sub
loope
push
xchg
push
pop
pop
and
pop
clc
imul
cmc
push
pop
or
xchg
mov
add
add
mov
int3
xor
popf
sbb
scas
mov
gs
outs
xchg
sub
fwait
pop
cwde
das
mov
in
enter
enter
arpl
mov
jne
push
cdq
cld
or
clc
pop
(bad)
mov
cmps
adc
mov
jge
lea
mov
cmps
mov
mov
sbb
cs
inc
clc
inc
(bad)
pop
cmp
mov
jmp
cdq
out
mov
mov
(bad)
fisttp
fwait
mov
dec
repz
sub
les
push
lahf
aaa
xor
pop
xor
jno
and
jbe
jp
pop
add
xor
push
aam
mov
push
mov
pop
inc
(bad)
mov
mov
in
inc
add
xchg
sub
xchg
loope
mov
or
cmc
cmp
jle
and
inc
es
xchg
mov
or
out
xchg
cmps
inc
inc
loop
or
in
xor
bound
pop
cmps
stos
xor
mov
repnz
ficom
cmp
and
(bad)
mov
dec
std
mov
fwait
inc
dec
fidivr
cmp
dec
lods
sub
cmp
mov
inc
inc
pop
sbb
cmp
daa
pop
lahf
addr16
push
push
add
mov
add
push
adc
js
out
mov
sbb
jae
jne
pop
push
ins
xchg
jno
jo
into
push
in
cmp
ret
jle
xchg
iret
cld
inc
mov
repnz
jne
mov
test
xor
push
adc
daa
mov
push
shr
fmulp
xor
jp
aam
inc
push
inc
imul
pop
fmul
push
leave
add
addr16
mov
je
xlat
mov
ja
sahf
ins
cmc
mov
(bad)
adc
pop
fwait
cwde
and
outs
push
enter
push
or
movs
mov
mov
mov
push
xchg
pop
xor
stos
cmp
pop
xor
jb
or
pop
sbb
out
adc
add
leave
inc
pop
hlt
mov
cmp
sub
test
jo
enter
jnp
bound
dec
add
in
mov
or
popa
arpl
iret
in
(bad)
das
cmps
data16
sar
ins
fdivr
aaa
lds
es
mov
fld
cld
mov
lods
xchg
cld
cmp
or
pop
mov
xchg
dec
lea
pop
add
mov
sub
sbb
(bad)
jmp
push
das
das
ror
cmp
gs
or
rcpps
and
popf
mov
pop
inc
mov
mov
cmp
mov
cmp
call
(bad)
movs
ficom
std
xchg
iret
loopne
call
sbb
push
popf
rcr
stos
push
and
cmp
xor
add
mov
call
inc
add
movs
sub
loope
(bad)
aaa
add
popa
cli
test
fisubr
fsqrt
les
popa
popf
push
popf
jne
aas
fs
cmp
jmp
xor
rcl
and
sti
cli
sbb
lods
ror
outs
pop
push
dec
sbb
cmp
std
nop
(bad)
adc
sub
arpl
push
mov
mov
mov
mov
(bad)
jae
add
add
dec
sub
lods
jo
push
(bad)
push
loope
ins
push
sub
dec
test
rol
mov
icebp
xor
sbb
scas
mov
sete
inc
xor
pop
and
cmp
inc
jmp
dec
aas
out
fsub
sub
popf
sti
mov
nop
sti
mov
pushf
dec
in
(bad)
xchg
imul
iret
xor
xor
mov
test
and
lahf
(bad)
push
clc
xchg
sahf
std
dec
scas
(bad)
in
js
in
shl
or
push
sbb
imul
sti
push
call
or
add
movs
jae
add
jb
test
rcr
sahf
or
clc
repz
xchg
ins
rcr
nop
lock
mov
pop
mov
inc
gs
jb
aas
jp
imul
loope
sti
pop
test
loopne
cmp
xchg
shl
mov
adc
xor
adc
bnd
popf
cmps
dec
lahf
mov
ss
lahf
mov
fld
enter
push
int
das
pop
cs
test
inc
pop
inc
push
mov
sbb
add
and
lods
out
lods
call
add
repnz
inc
(bad)
call
repz
sbb
call
inc
push
jne
mov
scas
jg
xchg
in
jmp
std
xchg
psubusw
mov
adc
loop
bound
inc
leave
adc
pop
cmp
sti
retf
mov
pop
fsubr
push
mov
add
lods
sar
pop
std
pop
call
pop
test
rol
inc
fcomp
out
jno
add
mov
call
call
mov
sbb
push
jns
test
aad
jmp
adc
cmp
pop
add
movs
and
fidivr
aad
add
cwde
xor
cmc
dec
nop
cmp
inc
jecxz
mov
bound
not
mov
adc
jl
and
data16
and
inc
cmp
push
enter
pcmpgtb
test
cwde
pop
jmp
inc
push
ins
mov
or
xchg
movs
mov
popa
cmps
shl
repz
dec
je
push
sbb
outs
jbe
adc
mov
push
into
adc
dec
mov
mov
push
jecxz
mov
dec
cmps
aaa
cdq
fwait
test
push
pop
push
cmps
or
sbb
cli
test
or
rol
ret
mov
loopne
out
ins
sub
xchg
(bad)
push
dec
sbb
xor
push
popf
out
fnsave
mov
(bad)
(bad)
adc
mov
pop
xor
leave
ja
inc
repnz
lock
clc
push
mov
inc
scas
jae
out
mov
fidivr
imul
jnp
jg
push
jo
and
push
sub
loop
mov
mov
adc
stc
lahf
jmp
(bad)
mov
inc
daa
dec
adc
jecxz
jmp
ins
lds
shl
sbb
(bad)
in
outs
cdq
sbb
sub
dec
dec
int
push
mov
fsubr
mov
(bad)
adc
and
mov
sub
mov
clc
jg
scas
lds
cmc
jnp
test
call
xchg
retf
push
mov
mov
loop
cmps
sbb
add
mov
shl
or
sbb
ret
adc
scas
in
pop
pop
dec
ins
ret
aas
mov
jne
xor
adc
mov
ficomp
or
cmp
dec
pop
jle
lahf
inc
add
imul
xlat
sbb
mov
rcl
rcl
je
(bad)
jo
aas
push
imul
repnz
sar
fst
std
pusha
int
xchg
xchg
(bad)
pop
frstor
scas
neg
dec
xchg
js
call
sar
inc
arpl
ror
std
mov
mov
sbb
retf
xchg
dec
push
sbb
adc
dec
pop
fst
pop
hlt
mov
mov
movs
stos
es
cmp
jo
and
xor
jo
push
sti
xor
sbb
xor
or
jle
bswap
sahf
cmp
jmp
and
add
retf
out
mov
sub
repz
fadd
clc
lock
pop
mov
addr16
add
mov
(bad)
adc
(bad)
in
mov
pop
pop
jp
jno
add
adc
cdq
and
scas
pop
sub
push
out
xor
inc
xchg
and
cmp
inc
bound
cmp
and
add
mov
dec
pop
sub
sar
ror
push
popf
xchg
dec
mov
xor
ret
sub
fcomp
mov
(bad)
jbe
mov
enter
sbb
(bad)
setl
pushf
mov
mov
or
je
sbb
adc
aam
add
scas
cwde
fwait
push
or
jnp
mov
out
and
dec
scas
dec
(bad)
ffreep
xchg
pop
ficom
test
xor
sti
pop
or
cs
mov
fnstenv
mov
adc
repz
push
fwait
and
or
sbb
fucomi
pop
mov
movs
lods
adc
js
sbb
cmp
fisttp
and
add
push
jo
imul
test
lock
stos
(bad)
fnstsw
xchg
repnz
in
out
mov
xor
inc
pop
in
sub
adc
sub
jb
int3
adc
ins
in
mov
mov
jo
xchg
xchg
test
enter
das
mov
outs
test
adc
repz
mov
adc
aad
pop
push
xor
push
push
es
cmp
cmp
add
mov
mov
ins
pusha
mov
movs
mov
xor
add
cmp
(bad)
cmp
adc
sar
into
daa
stos
fwait
lods
ret
daa
or
mov
push
sbb
push
xchg
and
or
leave
lds
jle
mov
imul
jle
shr
add
lds
jo
movs
hlt
add
(bad)
jae
mov
in
mov
cmc
inc
pop
jmp
scas
mov
and
sahf
lods
loopne
lahf
rcr
mov
jne
test
lods
mov
mov
sbb
adc
data16
in
xor
push
data16
xchg
xor
and
pop
(bad)
popf
sbb
jnp
jae
imul
dec
mov
daa
dec
pop
pop
sub
jle
add
loope
call
inc
mov
jns
inc
maskmovq
int
fsub
sbb
xor
enter
data16
cmp
add
mov
rol
sti
rcr
icebp
stos
ret
and
aaa
and
sub
or
mov
lds
ins
sub
clc
push
add
add
pop
mov
dec
ret
je
ret
cs
and
ins
pop
arpl
push
fild
xchg
push
mov
dec
pop
ins
jmp
inc
les
mov
or
mov
mov
idiv
or
push
retf
je
mov
imul
xlat
sbb
sti
test
aas
popa
(bad)
ficomp
xchg
mov
mov
adc
xchg
pushf
xchg
mov
enter
shl
outs
cmp
(bad)
ja
sbb
cmps
mov
cwde
or
div
xchg
arpl
test
data16
js
cmp
cwde
jl
jl
sbb
push
xchg
sub
and
sub
jo
pop
jecxz
test
and
pop
aas
xchg
cmp
dec
pop
pop
adc
repnz
and
fisttp
adc
xchg
fwait
bound
xor
push
xor
sbb
sub
aad
jmp
jle
cmp
mov
ss
mov
shl
add
sbb
inc
mov
sbb
sub
mov
call
pop
mov
jno
fs
fstp
pop
(bad)
mov
adc
cmp
iret
stc
fwait
sub
aad
lds
loopne
(bad)
jb
mov
or
mov
retf
js
or
sub
cmp
lea
push
cmp
cmp
out
dec
arpl
cmp
retf
das
push
jb
inc
inc
scas
js
repnz
aam
in
(bad)
cld
sahf
mov
mov
fiadd
mov
pop
jne
aad
sub
or
jb
repz
sub
sub
fwait
rcl
(bad)
jl
ins
jecxz
jp
add
cmp
push
hlt
xchg
or
xchg
cdq
bound
daa
in
cmove
add
mov
and
ds
into
clc
sbb
mov
mov
jns
push
shl
mov
sbb
cmp
sub
dec
push
sbb
jne
(bad)
mov
int
xchg
add
xor
lods
lds
sbb
pop
repz
xchg
mov
sub
fcom
mov
jnp
pop
call
mov
sbb
mov
mov
xchg
sbb
jl
mov
pop
rol
add
fimul
aas
xor
push
call
out
mov
push
(bad)
neg
retf
xlat
idiv
or
adc
in
repz
iret
cmp
cs
or
and
div
rol
in
add
sbb
pop
pop
sbb
xor
rol
jge
mov
jmp
xchg
mov
aas
repz
and
mov
sub
pop
sub
mov
sahf
adc
dec
pop
ds
lea
mov
pop
aam
out
cdq
cld
sbb
dec
hlt
outs
mov
or
jo
jnp
ins
scas
pop
mov
and
lock
(bad)
lea
xor
sti
into
stc
int
inc
fadd
adc
cmps
jns
xor
je
clc
adc
in
test
loop
iret
sbb
xchg
xor
loopne
fisub
mul
jmp
adc
aas
scas
push
cli
call
inc
lds
mov
cmp
xor
push
push
(bad)
ins
sub
(bad)
(bad)
cmps
adc
or
add
cmp
and
cmp
mov
retf
dec
(bad)
dec
js
jp
popa
mov
aad
xchg
mov
(bad)
mov
fstp
jmp
enter
jb
adc
rol
xor
ds
jmp
xchg
ins
outs
leave
outs
lahf
or
xor
aam
pinsrw
js
test
adc
sbb
jo
dec
(bad)
rcl
rol
mov
test
adc
mov
add
cwde
mov
sub
je
je
xchg
mov
bound
ret
add
inc
js
sub
mov
pop
enter
mov
adc
and
mov
ins
ins
stos
pop
push
jb
sar
xchg
push
mov
mov
ins
enter
and
xchg
js
test
adc
sub
mov
jmp
and
jle
xlat
xchg
sahf
push
shl
mov
adc
cld
imul
stos
outs
jbe
xchg
mov
lds
lods
xchg
jmp
mov
cld
gs
clc
mov
cmp
inc
mov
add
push
shl
push
ins
sbb
inc
and
xlat
shl
in
sbb
fistp
jp
xchg
mov
data16
pop
arpl
xchg
pop
adc
push
xchg
aaa
jnp
cmc
cmp
cs
adc
(bad)
mov
arpl
std
cmp
and
xchg
popa
inc
rol
(bad)
test
fld
fwait
imul
daa
and
mov
add
pop
add
and
ret
outs
xor
xchg
(bad)
imul
push
mov
adc
je
mov
push
inc
imul
das
mov
je
jo
add
jmp
call
mov
or
cmp
sti
jmp
out
icebp
dec
sbb
and
outs
cmp
jne
push
inc
(bad)
lea
je
inc
cmp
hlt
jge
sub
sub
push
(bad)
cdq
sub
or
push
cmps
xor
aaa
sahf
xor
mov
mov
dec
imul
xor
xchg
add
or
push
dec
minps
lock
adc
sbb
mov
sub
mov
fst
repnz
pop
jl
xor
mov
nop
cmps
adc
popf
mov
cmc
pop
dec
ficomp
xor
mov
movs
push
fistp
adc
sbb
mov
fsub
test
jge
jbe
fwait
xchg
jp
push
loope
pop
lods
or
mov
cmps
xor
aas
and
jle
adc
in
mov
pop
cmps
sbb
mov
adc
mov
or
retf
repz
dec
add
retf
mov
ja
lock
stos
bound
xchg
sbb
xchg
(bad)
sbb
or
into
inc
scas
data16
movs
pop
jne
ja
fwait
dec
ret
push
add
cmp
lds
sbb
xchg
call
cmp
popf
das
push
or
push
popf
shr
and
int3
(bad)
aaa
ror
pop
in
je
jns
push
sub
xchg
ror
shr
mov
and
jp
enter
movs
lods
push
(bad)
mov
popf
loopne
jmp
inc
and
mov
sbb
mov
fsubr
adc
clc
out
adc
fs
pop
mov
mov
gs
jbe
(bad)
and
ror
pop
pop
xchg
jnp
cmp
lods
inc
cmp
in
sbb
or
mov
jo
and
mov
adc
add
dec
pop
js
sub
xchg
jle
pop
fsubr
xor
test
jl
rcl
or
sbb
fwait
in
out
pop
inc
bound
imul
mov
sub
std
inc
pop
dec
aad
fwait
sub
jne
sub
(bad)
jne
inc
enter
aad
push
xchg
cli
cmp
push
sbb
addr16
shl
xor
push
adc
repz
jns
and
icebp
and
mov
xchg
dec
adc
(bad)
aaa
xor
pusha
mov
cmp
mov
fstp
shr
mov
push
sub
lods
mov
inc
cli
inc
lock
ins
fisub
vsubsd
pop
jle
mov
push
cwde
fcomp
add
fwait
sar
shr
loop
lahf
cmp
adc
mov
cs
cmp
stos
loop
add
inc
pop
jae
cmp
mov
das
push
scas
mov
jg
fs
mov
out
jne
gs
cmp
sub
ins
or
push
add
in
(bad)
jnp
inc
sub
and
cmp
mov
(bad)
jne
or
(bad)
rcr
rcl
lods
fisubr
xchg
inc
loope
std
push
es
js
adc
js
gs
lea
dec
lahf
pop
out
in
addr16
call
pusha
(bad)
sti
aam
push
pop
fwait
xchg
into
dec
push
mov
ja
ret
dec
enter
mov
and
xor
pop
jmp
mov
mov
dec
mov
push
cdq
adc
pop
popf
jne
int3
and
cs
js
push
cwde
mov
and
cli
cmc
add
fld
xor
scas
out
add
jnp
xlat
xor
call
(bad)
xchg
(bad)
and
aas
fld
paddd
adc
adc
xchg
pop
jne
das
and
xchg
xchg
ins
clc
jns
movs
fnstenv
stos
xor
(bad)
dec
xor
dec
add
and
inc
mov
es
and
inc
sub
aam
adc
xor
arpl
loopne
in
xor
fnstsw
in
enter
sbb
mov
popf
or
stos
data16
outs
cwde
dec
sbb
cmp
cwde
(bad)
leave
sbb
xor
inc
add
cmp
fcmovbe
add
cmc
dec
stc
xor
and
lds
clc
sub
mov
push
dec
fisttp
aad
jge
add
mov
mov
leave
or
pop
mov
mov
mov
sar
rol
sub
xor
fbld
jbe
xor
cmp
imul
int
out
das
add
xchg
cmps
(bad)
xchg
pop
fdivr
push
mov
out
sbb
pop
pop
je
adc
pushf
fwait
imul
test
mov
call
idiv
mov
jmp
cmp
cmp
mov
inc
jecxz
inc
sbb
jno
retf
or
test
in
ss
stc
jge
sbb
je
xor
or
xor
mov
inc
jmp
adc
cmp
imul
mov
out
fldcw
enter
mov
push
popf
cli
call
icebp
ja
arpl
mov
xchg
fild
stc
pop
or
mov
hlt
into
lods
rcl
add
mov
iret
js
and
pop
aad
sub
ret
xchg
pop
mov
iret
inc
mov
mov
cmps
adc
mov
add
mov
in
push
fld
pop
jb
pop
pop
add
bnd
sub
jmp
cli
or
cmps
shl
jo
in
mov
push
(bad)
icebp
je
mov
xchg
or
retf
int
shr
adc
xchg
gs
daa
sub
dec
inc
mov
leave
add
es
or
cli
and
lods
std
sub
push
fiadd
xor
dec
and
push
std
mov
mov
call
pushf
adc
mov
jg
imul
inc
rcr
aad
ins
paddb
fsubrp
js
sar
push
mov
in
inc
add
stos
mov
imul
jns
repz
sahf
sbb
int
(bad)
and
pop
jo
xor
inc
les
je
mov
cmp
mov
jae
sub
add
and
adc
repz
shr
jle
xchg
push
sbb
fwait
mov
pop
jno
pop
cmps
dec
inc
xchg
sbb
imul
sbb
retf
sbb
and
ja
stos
jmp
loop
add
mov
xor
addr16
jnp
push
gs
xor
pusha
repz
add
or
stos
inc
add
mov
outs
xchg
addr16
and
shl
jnp
mov
cmps
(bad)
mov
xchg
jno
js
xor
add
es
daa
add
jl
mov
mov
xor
test
pop
call
pop
push
sar
or
mov
fs
xor
scas
data16
test
retf
push
mov
jge
cmp
fwait
mov
add
dec
outs
aad
ds
inc
inc
or
adc
mov
in
retf
and
pop
in
mov
test
ja
(bad)
retf
fdivr
fsub
imul
or
push
jno
movs
xor
mov
inc
stos
or
sub
push
mov
shl
xchg
and
aam
sub
test
jl
jae
mov
push
cmp
daa
inc
xchg
pop
loop
outs
pop
inc
jnp
lahf
lods
mov
push
loope
inc
ins
addr16
(bad)
or
xlat
sbb
ret
inc
add
cmp
jp
push
leave
call
fwait
aaa
and
sar
adc
add
mov
dec
std
inc
add
movs
loope
(bad)
jns
mov
hlt
jmp
test
mov
mov
jg
push
inc
and
lods
mov
cmp
fadd
jmp
test
mov
sbb
jne
pop
jge
push
les
jo
cmp
fs
inc
push
fldenv
aaa
cld
add
ror
loopne
push
inc
jg
sub
add
aas
into
xor
dec
imul
shr
mov
stos
xchg
ror
dec
push
jl
dec
fs
dec
pop
and
out
jno
add
push
test
js
push
into
lahf
dec
jbe
je
(bad)
fsub
pushf
push
pop
xlat
pop
clc
and
mov
and
inc
popa
jle
adc
xor
lahf
jb
push
or
paddq
xlat
(bad)
sahf
push
sbb
sub
pop
cli
pop
into
adc
aad
cld
sbb
(bad)
jns
jl
test
add
mov
cmp
adc
cmps
int
jmp
pop
je
adc
sar
push
pushf
cld
or
adc
push
inc
mov
xchg
mov
shl
sub
xchg
out
mov
ficomp
adc
loope
push
iret
xchg
div
shl
aaa
add
nop
(bad)
bound
push
cmp
fmul
mov
and
scas
xor
jne
cmp
rcr
pop
mov
adc
mov
mov
adc
lahf
shl
adc
or
arpl
movs
adc
adc
cs
addr16
and
adc
mov
dec
inc
std
cmps
test
push
add
ret
sub
adc
pop
push
std
es
fs
inc
(bad)
mov
es
mov
cmp
mov
mov
xor
leave
scas
iret
add
lds
add
mov
loopne
std
jmp
cwde
adc
test
and
das
cli
ds
(bad)
scas
xchg
add
jae
mov
mov
add
xchg
js
cmp
dec
loop
mov
stos
fstp
imul
nop
add
inc
add
dec
pop
jns
adc
push
dec
and
mov
and
dec
inc
adc
(bad)
repz
dec
or
jnp
sti
pop
(bad)
sahf
pop
outs
sbb
cmc
rol
jmp
rol
or
bound
push
mov
(bad)
je
sub
push
stos
out
pushf
xchg
sub
xchg
hlt
inc
jg
in
mov
(bad)
xor
imul
cmps
(bad)
iret
out
xchg
and
ins
cmps
adc
add
mov
call
ret
mov
and
sbb
push
mov
adc
(bad)
push
in
call
push
cmps
jmp
cdq
xor
push
lock
adc
pop
inc
xchg
sub
xchg
push
stos
es
fcom
sub
repnz
cwde
jecxz
cmc
push
sbb
lods
sbb
jecxz
sub
popa
sub
repz
add
jb
add
xchg
retf
jae
je
fdivr
shl
das
loope
cmps
inc
inc
mov
cmp
repz
fcom
mov
xchg
or
cmps
scas
sbb
mov
xchg
das
mov
ds
cmps
or
jmp
xlat
cmps
iret
in
out
mov
pop
xor
enter
pop
dec
fwait
test
adc
shl
add
mov
dec
mov
(bad)
mov
dec
xor
aaa
xchg
movq
push
popa
jns
jmp
lock
add
lahf
hlt
mov
cmp
cmps
push
std
gs
push
test
push
dec
ds
enter
sbb
iret
fist
aas
pop
or
push
fild
nop
add
jp
push
mov
xchg
enter
nop
xor
(bad)
les
dec
push
ins
sbb
scas
mov
pop
ret
or
pop
addr16
mov
clc
inc
gs
mov
cld
lods
xor
je
push
mov
fstp
je
push
dec
dec
xchg
pop
out
sub
push
sub
ja
lea
sub
jmp
mov
cmp
sub
rcr
(bad)
loope
das
mov
test
add
pop
inc
mov
xchg
sahf
cli
ror
sahf
cmp
sbb
ret
(bad)
mov
xchg
sbb
mov
add
int3
jbe
scas
data16
ss
mov
jmp
mov
sub
or
push
jp
std
or
cli
fs
add
sub
and
cwde
inc
call
sub
jne
xchg
xchg
dec
add
lods
stos
inc
jb
cwde
test
xor
inc
or
sbb
aaa
(bad)
mov
sub
adc
out
mov
movs
xchg
mov
pop
push
sub
lods
push
out
pusha
inc
mov
pop
sub
aas
(bad)
push
es
iret
mov
pusha
cs
inc
jle
in
test
daa
out
or
pop
and
es
mov
test
bnd
jge
call
mov
xchg
(bad)
ins
dec
adc
fisub
fmul
pop
in
mov
ror
aaa
mov
inc
fadd
sub
add
dec
(bad)
xchg
pushf
or
std
std
(bad)
and
inc
popa
mov
lods
int
cli
inc
dec
mov
hlt
add
xchg
and
clc
data16
xchg
ins
add
cdq
mov
cli
push
leave
dec
jno
dec
fisttp
cmps
(bad)
nop
mov
xor
cld
arpl
xlat
iret
mov
add
jo
iret
push
cmps
aam
inc
imul
and
mov
mov
not
cdq
leave
and
mov
cmps
cwde
jno
add
add
dec
cs
and
mov
pop
rcl
adc
and
movs
std
mov
push
out
xchg
mov
stos
das
pushf
arpl
adc
push
mov
rcl
push
movs
jg
mov
add
test
inc
(bad)
push
ret
sti
bound
jl
cli
lea
pop
inc
inc
cdq
pop
dec
ret
inc
pop
lods
push
dec
aas
push
adc
(bad)
stc
mov
lock
inc
add
fld
je
sbb
loopne
fdivr
xor
push
add
sub
xchg
jnp
pop
push
stc
or
call
jmp
adc
aad
sbb
out
rol
das
out
fwait
mov
cmp
sbb
not
call
jae
push
mov
cmp
xlat
outs
adc
adc
jo
jno
jae
sbb
lahf
call
test
inc
add
dec
xchg
adc
mov
cmc
mov
mov
xlat
push
imul
outs
jle
mov
imul
sbb
xor
test
enter
daa
pop
lods
xchg
sub
mov
jbe
ficom
pop
mov
jg
mov
sub
dec
popf
add
cld
scas
test
xchg
aad
div
cmp
xor
mov
xchg
cmp
mov
(bad)
pop
jg
xlat
push
es
adc
in
add
push
in
std
pop
adc
push
jbe
clc
cmp
out
test
cli
mov
mov
popf
or
dec
dec
popa
das
push
scas
push
dec
add
aad
mov
cwde
mov
lods
inc
out
push
adc
int
mov
and
les
sub
mov
lods
test
test
jbe
xchg
dec
inc
lahf
mov
dec
test
retf
lods
iret
or
scas
lea
scas
xlat
xor
mov
ret
clc
xor
and
inc
in
mov
inc
mul
cmps
shr
or
cmps
lods
mov
and
fstp
xchg
xor
fadd
imul
aad
mov
cmc
adc
jle
jmp
popa
mov
(bad)
(bad)
xchg
push
cmps
dec
sahf
xlat
jnp
mov
inc
in
iret
fscale
mov
dec
(bad)
push
sbb
cmc
adc
jp
mov
mov
push
jmp
cmp
add
dec
xor
cmp
inc
hlt
jge
jne
adc
js
fstp
out
test
inc
out
aam
xor
es
cwde
(bad)
xor
or
out
cmp
into
arpl
mov
mov
and
in
es
pop
aam
stc
das
add
jmp
adc
pop
mov
xchg
jnp
dec
repnz
mov
mov
test
movs
movs
jmp
xchg
iret
xchg
retf
sbb
je
fimul
vmread
aad
idiv
(bad)
cmp
test
jp
pop
dec
lea
popa
and
lock
push
jmp
(bad)
push
ds
fstp
jne
pusha
sahf
adc
test
mov
mov
mov
or
mov
popa
sub
int
sbb
int3
mov
int
in
std
(bad)
mov
sbb
iret
dec
cdq
or
mov
adc
mov
aad
push
bound
lahf
aas
add
cli
leave
mov
xor
mov
nop
pop
jo
mov
push
adc
inc
or
or
stos
mov
jecxz
or
sbb
jle
in
shr
push
add
jb
dec
addr16
pop
sbb
cmp
aad
mov
cwde
imul
fcom
int3
lods
gs
jno
int
cdq
test
cmp
repnz
mov
mov
xchg
jns
test
mov
mov
test
jno
inc
ror
inc
dec
lods
mov
dec
outs
jb
arpl
and
push
inc
mul
mov
jb
ret
ficom
rcr
xchg
xor
mov
push
cld
dec
mov
ins
dec
or
test
inc
iret
or
arpl
xchg
mov
xchg
(bad)
in
(bad)
in
pop
sbb
(bad)
into
xchg
popf
adc
bound
addr16
fcomp
in
mov
or
fidiv
add
push
retf
dec
test
(bad)
clc
jno
and
jnp
inc
mov
imul
cli
sub
out
jl
mov
xor
clc
jg
mov
loopne
add
mov
sub
ret
adc
mov
jno
scas
jbe
or
test
inc
test
jmp
popf
fidiv
push
inc
sbb
imul
sbb
ds
les
or
jmp
pop
jg
ds
lahf
sbb
add
mov
push
sbb
movs
movs
xor
mov
addr16
in
adc
xor
retf
cmc
xchg
nop
adc
pop
cdq
ret
pop
pushf
cmp
add
mov
lods
xor
(bad)
xor
sbb
jo
or
fsubp
pusha
jbe
xor
adc
hlt
call
xor
dec
and
(bad)
pop
sbb
xor
add
jmp
cmp
mov
mov
and
pslld
mov
inc
sbb
adc
mov
push
mov
add
push
(bad)
push
jmp
sub
pop
jl
out
fcmovnbe
outs
xor
(bad)
mov
push
mov
(bad)
xchg
inc
in
clc
push
mov
mov
and
jl
out
test
shl
rcl
aam
dec
cmp
mov
push
push
popf
sbb
lods
jno
fimul
(bad)
push
shl
push
inc
lahf
jbe
push
out
in
or
or
cwde
xchg
mov
out
or
push
in
fcmovnb
daa
push
in
mov
js
mov
pop
cmp
aam
cmp
push
gs
(bad)
jbe
(bad)
jg
outs
mov
adc
mov
ins
or
out
call
cmps
push
cdq
test
das
jo
pop
loopne
dec
dec
ficom
out
dec
mov
mov
jnp
push
xor
int
cs
ds
mov
push
mov
fsub
sub
push
int3
jl
iret
mov
outs
bound
adc
cmp
cmps
push
mov
push
and
cld
shr
inc
cmp
add
int3
arpl
adc
mov
adc
push
mov
add
sub
pop
mov
aas
xor
pop
jmp
ds
out
sbb
dec
mov
aam
addr16
icebp
mov
in
mov
outs
adc
lods
pop
add
das
sbb
js
aaa
sbb
int3
aas
mov
xchg
mov
jbe
ret
fidivr
xor
sti
test
jbe
out
push
enter
pop
pop
pop
imul
in
scas
das
dec
aad
out
push
lock
mov
lahf
mov
test
sti
es
out
aas
xor
aam
int3
mov
cmp
fisttp
dec
cmp
scas
push
cmp
sbb
sar
fdivr
or
sbb
bound
inc
outs
xor
xchg
pop
xchg
fistp
popf
cmp
out
dec
cmp
aas
in
inc
mov
sbb
adc
mov
xor
xor
xor
push
add
jmp
inc
les
es
aas
stos
mov
mov
jne
scas
je
das
(bad)
mov
pop
adc
imul
jno
and
xor
pop
sahf
inc
dec
pop
popa
retf
and
jl
mov
mov
fldcw
push
dec
daa
add
clc
mov
mov
aas
shr
clc
or
mov
pop
jbe
adc
jmp
xchg
ror
cmp
or
jnp
push
sbb
mov
add
cwde
push
div
rcr
and
mov
xchg
xor
xchg
fbstp
hlt
dec
pop
sub
stos
add
neg
aaa
ret
into
or
pushf
pushf
lds
inc
mov
cli
adc
dec
sub
retf
sub
ret
in
add
test
pop
in
(bad)
mov
xlat
int
mov
mov
fld
push
sub
lock
and
test
sbb
mov
cmp
inc
out
fcomip
jge
xchg
dec
fadd
fidivr
addr16
jmp
leave
push
inc
out
lahf
(bad)
sti
imul
add
repz
pop
pop
(bad)
call
test
imul
fs
addr16
push
movs
rcr
test
movs
jg
jae
mov
dec
hlt
fdiv
mov
ja
not
adc
idiv
cmp
retf
gs
jae
test
cmps
(bad)
dec
xor
fnstsw
cmps
repnz
popf
xor
shl
ins
in
push
js
push
popf
pop
lds
lock
aas
xor
ja
stos
clc
leave
adc
dec
fdiv
outs
clc
jp
mov
cld
push
repnz
mov
(bad)
aaa
aas
add
xchg
ret
push
dec
sahf
push
ss
add
mov
ret
out
ror
ss
stos
mov
jns
sbb
popf
sbb
inc
or
les
and
pop
pmullw
mov
(bad)
or
cdq
cdq
sahf
cdq
ret
add
imul
test
cld
adc
(bad)
fisub
jbe
dec
mov
sbb
mov
leave
std
idiv
hlt
mov
int
add
sbb
cmovge
fwait
ss
or
push
call
(bad)
dec
xor
adc
gs
pushf
out
(bad)
sub
adc
push
adc
out
jbe
call
retf
stos
hlt
pop
sub
inc
mov
pop
es
mov
mov
jle
adc
rol
dec
(bad)
cld
sub
xchg
ror
jg
pushf
xor
and
cmp
repnz
cwde
cmps
pop
and
call
xchg
jg
sbb
mov
test
dec
in
jae
jecxz
jb
lock
sub
push
dec
xor
je
out
pop
mov
(bad)
fdiv
cmp
xor
xchg
pushf
pop
cmp
inc
add
out
add
popf
cld
pop
cmp
int3
test
loope
outs
push
sbb
pop
lods
test
sti
jg
jo
out
stc
ror
in
imul
adc
sbb
shl
imul
push
and
or
cdq
xchg
out
shr
and
add
sub
push
bound
add
stc
jae
test
cld
xchg
inc
ins
test
cli
fidivr
movs
mov
dec
push
xchg
cmp
lahf
pop
xor
das
daa
lock
into
outs
imul
mov
jns
loopne
pop
adc
cmp
sub
or
hlt
xor
mov
xor
cmp
or
fld
or
cmp
ror
stos
adc
pop
sub
shl
pop
es
lock
xor
stos
dec
sbb
lock
imul
mov
test
sti
cli
outs
mov
fcmovb
or
adc
mov
inc
xor
rdtsc
xor
inc
out
xchg
mov
mov
pop
pop
mov
jl
push
jmp
daa
adc
repz
add
mov
mov
icebp
jge
jmp
cmp
mov
xchg
fldcw
and
bound
adc
mov
pop
outs
pop
push
repnz
adc
push
out
or
shl
int
pop
fild
mov
js
gs
bound
mov
mov
into
cmp
cli
adc
iret
cwde
loope
sub
jo
test
push
pop
xchg
sbb
add
jl
sub
and
(bad)
and
(bad)
xchg
test
pop
mov
push
fs
add
jl
jb
stos
in
jmp
les
lock
imul
jl
xchg
aad
das
mov
int3
fstp
cmps
and
(bad)
loope
test
cmc
dec
out
jecxz
fs
(bad)
ja
clc
cmc
jbe
out
add
adc
xchg
xchg
mov
and
add
leave
inc
cmp
inc
pop
mov
push
inc
test
fwait
nop
sti
mov
call
and
jb
jnp
scas
mov
cmp
jp
sub
cmp
jmp
popf
test
aad
test
fdiv
fstp
stc
scas
js
adc
movs
jns
add
or
int3
mov
push
inc
inc
iret
mov
outs
xchg
imul
stos
mov
mov
call
js
inc
add
stos
div
mov
adc
sub
inc
scas
mov
addr16
jge
push
pop
call
jo
mov
pushf
push
pop
sahf
jmp
in
sbb
or
mov
cmp
add
cmp
mov
xchg
jp
les
dec
xchg
nop
inc
jns
sub
sbb
xchg
sub
push
outs
push
std
dec
dec
mov
fcmovnb
outs
addr16
stos
push
iret
(bad)
mov
dec
and
inc
ffree
inc
fwait
push
pop
das
cmp
sub
jae
adc
dec
mov
retf
push
push
push
jo
sar
add
sbb
or
repz
movs
movs
xchg
sbb
and
push
lea
hlt
idiv
and
add
adc
sub
push
jp
push
xchg
arpl
outs
jmp
xchg
test
mov
push
adc
or
aas
xor
and
addr16
shl
dec
cdq
daa
fiadd
dec
mov
mov
xor
popf
cmps
fist
jmp
cmps
stos
and
sbb
jmp
shl
stc
xchg
sbb
mov
fisub
call
add
cld
mov
ret
sbb
out
xchg
cmp
pusha
aam
pop
mov
popa
cli
ficom
mov
pop
pop
xchg
and
std
mov
and
repnz
mov
aad
mov
jmp
mov
cmps
loop
dec
(bad)
int
int3
ins
nop
or
scas
dec
cwde
and
cli
ds
das
int
add
adc
test
push
dec
bound
test
inc
and
sub
and
in
pop
fs
hlt
jne
inc
lods
imul
fucomip
lods
ds
ins
inc
push
dec
arpl
out
mov
xor
sbb
idiv
lds
into
xchg
sub
ret
mov
int3
repnz
retf
mov
or
(bad)
adc
fs
sbb
stc
(bad)
movs
xchg
test
jle
mov
ror
or
jle
call
syscall
pop
ins
jno
movs
loop
popa
loopne
add
or
push
shl
sub
xchg
aas
sahf
nop
ja
(bad)
gs
sti
mov
stos
sub
adc
or
hlt
lahf
dec
add
dec
popa
(bad)
pop
adc
ret
sub
mov
jge
pusha
inc
pop
and
cwde
int
out
jne
(bad)
addr16
in
call
mov
mov
jle
cmp
xor
inc
xchg
fdiv
into
movs
xchg
out
test
mov
push
popf
mov
call
sbb
mov
ja
sbb
mov
add
stos
pop
and
mov
pop
adc
add
sub
outs
cmp
popa
jg
or
lds
rol
leave
or
and
push
test
aam
sub
mov
and
push
mov
push
fdiv
push
jg
xor
(bad)
sub
pop
cmp
xor
and
add
pop
jnp
xlat
clc
xor
cld
cmp
xchg
pop
cmp
push
cmps
mov
ins
int3
xchg
jg
jecxz
imul
ins
repnz
sbb
aad
leave
outs
leave
cmp
lock
fs
adc
inc
lahf
sub
cmp
or
mov
adc
xor
out
mov
repz
mov
cs
pop
or
push
ja
inc
test
leave
jg
or
dec
mov
movs
out
push
mov
jmp
and
(bad)
fucom
(bad)
rol
shl
sahf
pop
mov
pushf
cmps
sub
mov
mov
sbb
aaa
xchg
jl
fst
inc
sbb
imul
pop
pop
jmp
and
das
mov
xchg
mov
inc
inc
push
mov
dec
dec
aas
mov
mov
dec
pop
shl
lahf
in
pop
in
ins
ret
mov
movs
mov
movs
(bad)
das
mov
adc
stos
aad
mov
clc
and
loope
cmp
jg
cmp
xor
stc
dec
pop
mov
sub
popf
int3
hlt
xor
push
js
movs
sahf
mov
sar
aaa
inc
sbb
or
ds
pop
test
rol
nop
in
aas
pop
xchg
or
stos
push
xor
inc
sahf
bound
and
ret
(bad)
cld
sahf
adc
mov
jb
mov
pusha
sar
inc
sub
clc
aas
(bad)
cmp
sub
pop
sub
inc
call
or
mov
repz
aas
fs
and
movs
push
imul
dec
rol
push
inc
fwait
test
enter
idiv
ins
push
das
jecxz
mov
cmovae
scas
pushf
or
movs
enter
jno
dec
push
add
repz
lock
in
adc
daa
pusha
cmc
addr16
sub
pop
ds
push
xlat
pop
test
popf
(bad)
imul
daa
(bad)
cmps
mov
frstor
mov
mov
mov
jl
add
adc
movs
movs
jp
adc
outs
xchg
pop
cwde
fnstenv
je
mov
adc
mov
and
stos
sub
adc
arpl
js
fidiv
int3
shl
repz
inc
shl
xchg
add
pop
xchg
enter
aaa
pop
movs
repnz
xchg
aas
add
and
ins
imul
sub
xor
fsub
enter
mov
or
sbb
lods
mov
imul
scas
je
call
retf
outs
xchg
pop
aaa
loope
mov
lds
mov
mov
pop
jb
cmp
(bad)
shl
push
sub
in
cmp
pop
test
adc
jno
dec
std
(bad)
adc
or
cld
movs
sub
repnz
mov
mov
inc
mov
ins
jecxz
mov
lahf
clc
jbe
mov
mov
xor
out
je
ret
stos
(bad)
clc
(bad)
repz
lock
inc
inc
mov
fist
or
lock
xor
test
fild
in
cmc
add
stc
xchg
push
inc
popf
inc
jmp
jbe
push
dec
mov
xchg
mov
repnz
sub
ins
sbb
stc
xor
mov
xchg
sub
xchg
test
jp
cld
mov
mov
mov
jecxz
push
cmp
das
sbb
ja
jmp
popa
jecxz
xor
push
xor
fwait
sub
xlat
xor
sti
out
push
test
and
add
movs
shl
xchg
push
jle
aam
push
fidiv
jmp
cli
in
shl
pop
mov
sbb
adc
iret
and
lods
push
mov
outs
cld
repnz
icebp
sbb
daa
xchg
aam
pop
fisub
add
lods
mov
shl
cmp
push
jnp
call
mov
outs
and
and
or
cli
xchg
in
popa
sub
inc
sub
adc
sbb
xchg
dec
lahf
gs
jmp
imul
sub
lods
or
or
mov
gs
sub
pusha
dec
dec
pop
xor
retf
retf
sub
xor
inc
push
mov
in
ror
inc
push
sbb
sub
push
pop
push
adc
xlat
dec
test
cdq
and
aas
pop
pushf
xor
sub
mov
rcl
ds
cld
rcr
retf
repz
mul
xor
cs
in
add
and
shl
test
cs
inc
or
cmps
imul
inc
retf
dec
inc
xchg
sub
mov
outs
mov
jnp
sub
pop
mov
ret
ror
out
and
(bad)
outs
mov
mov
mov
xchg
pop
xchg
adc
sub
push
add
call
push
jecxz
pop
mov
cmp
ret
enter
jae
retf
xor
sahf
repnz
(bad)
push
pop
push
(bad)
xchg
js
inc
arpl
ror
mov
ins
sahf
clc
xchg
pushf
adc
movs
shr
xchg
jmp
push
mov
sbb
dec
ss
push
pop
mov
xlat
(bad)
jnp
push
mov
gs
mov
fadd
nop
push
ins
pop
cmps
rcl
shr
dec
inc
cld
movs
js
cld
and
sbb
push
retf
jmp
aaa
inc
and
xchg
xchg
xchg
rcr
pop
jmp
mov
cmp
(bad)
cmp
pop
jmp
hlt
popf
pop
push
jl
sbb
bound
mov
dec
xor
iret
jmp
push
inc
pop
call
cmp
imul
test
repz
jnp
push
and
mov
inc
daa
ret
dec
movs
daa
jmp
int
xor
fyl2x
fsubr
add
sbb
cmp
dec
movq
cmp
out
jecxz
add
mul
mov
jmp
xchg
popa
imul
and
xor
add
repnz
fistp
xor
lock
jns
aad
ins
mov
fdivr
outs
fwait
cs
adc
sti
les
lea
lock
mov
or
stos
cmp
sub
outs
cmp
frstor
hlt
lock
cmp
std
ins
cld
add
cli
stc
or
ins
jp
(bad)
cs
add
lods
jmp
sbb
inc
and
sti
sti
dec
push
xor
pop
rcr
jae
(bad)
lds
hlt
xchg
push
sbb
out
loopne
xchg
inc
xor
fisttp
jne
add
or
push
dec
push
inc
test
fincstp
in
ins
push
int
and
movs
push
add
punpcklwd
retf
fld
add
inc
cmp
jg
jmp
push
addr16
(bad)
jle
leave
ins
ds
add
mov
sub
lods
test
cmps
xchg
add
das
fwait
xchg
sbb
mov
pop
xor
pop
jns
lock
sahf
inc
arpl
pop
pushf
enter
jns
mov
or
iret
mov
mov
xlat
and
cs
icebp
fwait
imul
es
and
outs
jp
mov
jmp
sbb
mov
jo
ins
mov
sub
mov
movs
xor
sub
repz
loope
aaa
nop
pushf
mov
loope
mov
xor
pop
dec
push
dec
cmp
outs
xchg
mov
scas
mov
movs
(bad)
push
movs
xchg
mov
pop
adc
jb
js
mov
shr
in
adc
pop
xlat
shl
mov
adc
fs
sub
sub
jp
or
out
mov
jge
and
xchg
mov
cs
or
fwait
dec
or
cld
push
sbb
mov
sbb
imul
ins
js
repnz
retf
mov
ins
and
repz
scas
push
sub
pop
sbb
push
shl
push
fwait
sti
mov
or
xchg
call
addr16
mov
sub
and
outs
push
iret
mov
lock
jnp
sub
mov
mov
cmp
jnp
or
sbb
fadd
mov
imul
cmps
jmp
ror
xlat
inc
inc
addr16
xchg
cs
fs
out
adc
lds
das
aam
push
(bad)
mov
inc
inc
pop
push
push
push
pop
inc
mul
mov
fsubr
inc
mov
dec
dec
push
mov
sub
adc
jns
ror
xchg
rcl
mov
pop
icebp
cld
dec
test
shl
and
or
jo
stos
mov
mov
scas
push
pop
mov
outs
fidiv
js
inc
dec
stc
imul
pop
in
jb
lods
lea
cmp
mov
out
imul
jle
out
ss
fist
shr
aad
out
and
movs
and
adc
shl
rcl
dec
xlat
mov
test
fsub
test
push
cmp
lahf
jle
repz
jle
dec
rcr
add
xor
xor
(bad)
loopne
xlat
pop
imul
retf
fdiv
and
inc
ins
ins
js
jo
mov
sub
pop
jnp
pusha
(bad)
xchg
pop
loop
jno
xchg
jne
das
jmp
push
xchg
push
xchg
mov
fadd
push
inc
mov
xor
jae
pop
cmp
mov
hlt
sbb
push
mov
stos
out
and
add
lods
and
sbb
ja
inc
adc
pushf
mov
shl
push
in
add
neg
lods
(bad)
mov
cdq
push
cdq
mov
or
aad
push
icebp
lock
(bad)
xor
nop
xor
and
xchg
test
lock
cdq
repz
push
iret
stos
outs
cmps
dec
jge
mov
cmp
sub
add
les
ins
test
or
stos
xchg
add
outs
xor
not
inc
pusha
sbb
add
(bad)
sub
inc
in
add
int3
sub
adc
adc
sbb
cmp
outs
jo
push
ficomp
or
dec
lods
sub
iret
push
test
push
call
shl
jle
push
clc
movs
or
mov
mov
mov
and
jg
fist
inc
xor
inc
inc
inc
xchg
fimul
outs
sbb
pop
test
test
fucom
into
or
(bad)
fs
retf
mov
mov
mov
inc
push
pusha
mov
sahf
int3
dec
hlt
int3
pop
pop
gs
shl
pushf
mov
cmp
xor
das
xchg
shl
mov
jmp
ret
dec
xchg
lods
fisttp
ja
xchg
fisttp
cmp
mov
ins
outs
xor
pop
jnp
mov
out
sbb
jle
pushaw
mov
pop
ja
shl
mov
call
add
mov
jmp
and
hlt
pushf
jmp
and
jbe
ret
scas
sar
daa
(bad)
test
fwait
ret
add
pop
aam
sub
loope
ret
test
xchg
dec
ror
or
in
ud2
fstp
mov
out
jecxz
push
mov
add
dec
iret
sbb
adc
mov
mov
in
cdq
lea
fisubr
and
dec
stc
iret
rcr
adc
(bad)
pop
fild
mov
jns
scas
mov
lahf
call
(bad)
sub
add
cmp
lea
mov
out
stos
into
enter
loope
add
jne
sub
rcl
add
push
test
dec
and
ds
in
aaa
scas
imul
pop
xchg
imul
xchg
cmp
movs
dec
sub
dec
mov
or
outs
mov
neg
(bad)
popf
mov
leave
mov
iret
imul
sub
popa
jnp
xchg
in
in
ja
xchg
aad
inc
cli
scas
xor
mov
mov
cmp
sbb
xchg
hlt
lods
xchg
stc
call
xchg
mov
xchg
test
push
sbb
and
fsub
and
bound
adc
sub
(bad)
mov
cmp
aaa
pop
sbb
mov
daa
push
inc
add
cs
mov
add
jne
sbb
xchg
add
xor
push
or
and
add
pop
jns
hlt
pop
xor
in
mov
out
dec
repnz
clc
pushf
push
mov
std
cmp
jl
push
or
or
jo
mov
pop
mov
es
adc
jge
xor
cdq
push
ds
and
dec
enter
shr
xlat
mov
out
pop
add
mov
dec
push
xchg
lods
loop
mov
pop
call
pop
sub
jno
mov
fisttp
sbb
fst
pop
push
lahf
sbb
or
mov
test
xchg
neg
test
adc
or
jns
gs
int
dec
xchg
not
pop
shl
dec
repz
push
(bad)
cmc
xchg
add
mov
dec
aaa
or
mov
push
(bad)
neg
xchg
dec
test
lods
ret
cmp
aad
jecxz
and
ret
rcr
fs
call
into
jo
jae
cmc
stc
clc
ja
push
(bad)
and
jge
ds
adc
cmp
pop
sbb
inc
ins
sub
mov
imul
jbe
test
add
pop
sub
xor
fidiv
repnz
xchg
adc
call
mov
and
push
push
sbb
sti
dec
ret
std
fwait
xor
adc
xlat
into
or
into
add
(bad)
popa
movs
cmc
or
mov
out
cmps
inc
fmul
mov
mov
and
jp
xlat
cld
mov
int3
sub
daa
lea
sub
les
xlat
mov
imul
mov
push
xchg
xchg
inc
mov
fimul
clc
(bad)
dec
movs
mov
and
jns
dec
ss
clc
scas
mov
sahf
in
inc
(bad)
loope
retf
mov
mov
stos
add
push
xchg
cmp
daa
xor
mov
popa
cmp
pop
out
sbb
or
pop
ret
not
push
mov
scas
je
cmp
sahf
mov
addr16
push
xor
push
pusha
bound
in
dec
repz
sub
mov
xchg
dec
loopne
xchg
ret
movs
or
clc
std
mov
into
iret
call
movs
fwait
mov
inc
idiv
ret
dec
sub
sbb
cli
xchg
js
retf
xor
mov
jecxz
add
sbb
popf
aam
pop
xor
in
sbb
(bad)
repnz
fs
pop
ins
int
dec
cwde
mov
xchg
test
sub
test
jb
and
push
jmp
int3
in
aam
jmp
test
add
(bad)
shld
cmps
in
(bad)
mov
arpl
out
add
outs
es
jae
clc
mov
mov
aam
scas
inc
fidiv
stc
sbb
imul
or
add
(bad)
push
push
fisubr
cmp
ins
push
sub
mov
cmp
mov
call
adc
mov
dec
retf
and
mov
gs
pusha
push
jo
in
xchg
les
aaa
fsubr
sub
inc
mov
js
push
adc
scas
sub
cmp
pop
ret
icebp
xor
aas
addr16
call
cdq
cld
push
popf
add
jbe
not
aaa
shr
mov
lock
and
fwait
ins
push
loop
cmps
sub
loopne
cld
pop
lods
ins
out
cmp
mov
jmp
mov
sub
mov
mov
pop
cmovb
jge
xchg
add
mov
pop
cwde
mov
jle
test
and
fs
and
sub
dec
jns
xor
int3
cmps
pop
pop
push
fstp
dec
cmp
out
fnstcw
stos
pop
(bad)
enter
and
sub
push
and
pop
jmp
jge
mov
jp
or
sub
push
scas
lahf
aad
ins
dec
xor
cmps
cs
hlt
cs
aad
movs
or
fldcw
ins
xchg
inc
push
and
jnp
mov
cs
cmp
jns
jnp
loope
hlt
sub
in
push
xor
test
pop
shl
pop
or
call
fucomp
cmps
daa
es
or
(bad)
(bad)
dec
faddp
inc
dec
mov
cmp
push
jno
dec
(bad)
xchg
cmp
jmp
(bad)
push
lock
dec
adc
jmp
cmp
mov
lock
push
mov
pusha
dec
test
dec
or
inc
(bad)
xchg
inc
mov
lea
mov
adc
or
mov
fadd
sub
xchg
ss
test
rol
add
fucomip
sub
ja
sbb
xchg
adc
ins
jmp
mov
or
mov
and
adc
adc
cwde
sub
jns
xchg
sbb
leavew
add
xchg
imul
rcl
cmp
push
out
jl
cmp
jbe
adc
arpl
pop
xor
stc
fnstcw
mov
pop
push
xor
sbb
mov
fs
jmp
(bad)
push
out
(bad)
test
xchg
jecxz
inc
mov
push
mov
inc
pop
adc
cmp
sti
cwde
ja
xor
sbb
ins
gs
xchg
hlt
icebp
popf
popf
sbb
stos
in
xchg
adc
xor
int
aad
mov
es
test
mov
pusha
mov
pop
cmp
ins
pop
mov
adc
scas
mov
jl
sub
call
lds
lods
int3
lods
mov
pop
sbb
cli
fadd
and
lods
wrmsr
leave
retf
sar
mov
popa
cld
and
mov
cmp
or
xchg
xchg
mov
sbb
push
retf
sbb
sub
dec
clc
inc
ret
sbb
mov
ret
dec
jae
popa
mov
outs
and
mov
punpckhbw
mov
into
dec
dec
jmp
sahf
jmp
std
dec
ret
adc
inc
cmp
addr16
inc
mov
sbb
push
and
movs
shr
mov
push
xchg
iret
xor
push
dec
(bad)
std
fcmovb
jle
push
push
sahf
daa
xor
push
cmp
aas
mov
sub
gs
fild
or
cmp
lock
arpl
int3
pop
xchg
movs
pop
push
out
jae
push
mov
pop
mov
imul
sbb
xchg
das
enter
or
add
pop
pop
dec
rcr
mov
jnp
push
test
mov
lock
sbb
jmp
inc
addr16
or
xor
mov
xlat
lock
rcl
inc
idiv
arpl
ror
mov
outs
ret
lds
popf
aam
cmp
sbb
push
sbb
jl
fidiv
mov
sbb
fmul
pop
jnp
pop
mov
shl
jle
(bad)
mov
jp
cmp
and
fwait
xor
into
scas
nop
aam
in
pop
inc
and
and
ja
jle
mov
jecxz
adc
cmp
jne
cld
sub
cmp
jo
fistp
mov
sbb
push
jl
add
leave
xor
and
add
(bad)
cmp
cmp
lods
pop
mov
jb
or
inc
and
hlt
loop
xor
pusha
jl
jno
inc
sub
add
imul
dec
scas
ret
enter
push
jp
jmp
push
pop
sub
outs
add
sub
stc
pushf
(bad)
pop
ins
add
movs
rol
daa
mov
test
dec
popw
and
jno
add
mov
fs
in
cmp
test
add
(bad)
(bad)
dec
aaa
imul
push
dec
push
jecxz
test
xchg
adc
xchg
scas
pop
xchg
jge
jnp
cs
iret
mov
ror
mov
jmp
push
pushf
jne
mov
iret
dec
push
les
adc
dec
mov
sbb
sbb
test
inc
scas
pop
test
adc
push
neg
fdivrp
mov
nop
xor
out
test
adc
cmps
mov
xor
aaa
daa
mov
les
mov
mov
sar
not
cmp
dec
loope
adc
inc
sub
or
inc
in
fcom
push
cdq
sbb
adc
pop
jmp
mov
fcom
pop
arpl
in
jle
or
nop
ins
int
sub
inc
ret
fimul
jge
mov
aas
dec
rcr
mov
xchg
mov
mov
loope
gs
aad
in
es
aas
adc
lods
and
das
push
shr
gs
ins
jge
pop
mov
jl
(bad)
ins
movs
and
jcxz
rcr
inc
mov
clc
or
xchg
mov
cmp
lea
jnp
and
sub
xchg
push
bound
idiv
jae
inc
add
mov
mov
icebp
pop
mov
dec
mov
cs
cmps
ja
fsub
and
jge
lea
sti
mov
shr
and
test
adc
sbb
pusha
sti
int3
and
ds
popa
mov
jge
fcom
pusha
aad
mov
mov
mov
adc
scas
not
in
scas
cmc
add
pop
bound
sub
mov
mov
dec
icebp
mov
int
fcomp
pusha
add
or
movs
fisttp
jae
je
das
pop
sbb
clc
adc
mov
test
add
pusha
enter
hlt
fcomip
pop
icebp
mov
outs
dec
mov
or
or
sahf
fimul
lods
mov
test
xor
test
jmp
add
outs
inc
retf
fs
adc
lea
add
jg
add
mov
mov
je
jnp
mov
jns
add
inc
xlat
or
stc
jg
pushf
xor
push
mov
jp
loopne
enter
dec
(bad)
call
jmp
inc
fild
mov
dec
xlat
sub
sbb
cmps
mov
scas
mov
sbb
js
mov
(bad)
outs
ror
mov
xor
cmp
stos
fadd
arpl
mov
fnstenv
scas
js
jp
add
jle
cmp
das
jnp
dec
cmc
sub
test
sahf
pop
retf
sub
xor
into
int
enter
jbe
sub
or
xchg
jge
fisub
and
and
jb
ins
cmps
mov
aas
or
jg
es
stc
(bad)
aam
pop
in
and
aam
push
push
or
jns
push
(bad)
lods
pop
adc
dec
jl
test
sbb
ja
mov
adc
rcl
inc
fsubr
enter
out
mov
pop
jo
daa
xlat
xor
push
jnp
jg
(bad)
sub
mov
jge
cli
mov
inc
fld
nop
popf
cmps
pop
mov
movs
in
in
jne
imul
fstp
pop
adc
js
pop
add
shr
add
not
(bad)
push
rcr
fistp
ret
xchg
and
add
mov
mov
into
sbb
sbb
inc
aas
sub
jns
mov
cs
jmp
sahf
movs
add
jg
add
leave
mov
or
call
int
adc
adc
iret
or
cvtps2pd
stc
std
cmp
adc
dec
rcr
fwait
pop
les
outs
jae
or
mov
jp
div
in
mov
xor
pop
cmp
sbb
loop
push
mov
outs
rcl
shl
jle
dec
arpl
(bad)
adc
rsqrtps
sub
das
loope
lahf
inc
add
push
inc
popa
jmp
mov
sbb
inc
push
out
aaa
scas
cli
enter
cmp
jno
leave
xor
fnstenv
push
cmp
push
addr16
emms
push
xchg
or
btr
jl
mov
cdq
loopne
cmp
mov
test
adc
jl
sub
dec
inc
and
icebp
xchg
mov
dec
not
ficomp
or
mov
inc
jle
outs
add
sub
sub
pop
lods
lea
xchg
inc
ror
es
retf
adc
dec
cmp
pusha
cmp
les
dec
xchg
rcl
or
mov
cwde
mov
(bad)
mov
aam
retf
adc
ins
lods
je
cmps
and
mov
push
test
xchg
mov
adc
adc
icebp
xchg
mov
scas
imul
adc
fwait
add
or
adc
movs
adc
xor
sub
adc
add
in
or
dec
xor
ss
sbb
(bad)
push
adc
add
jmp
or
jge
scas
rcr
inc
(bad)
cld
mov
fisttp
xchg
sub
rcr
jne
scas
popa
pushf
test
and
sar
arpl
imul
cld
cmps
pop
int3
aaa
mov
cmp
xor
fs
imul
sbb
(bad)
cmp
cdq
cmc
fstp
pop
fstp
cmps
fmul
test
adc
jge
call
xchg
nop
mov
jmp
adc
xor
xchg
ss
fnstcw
adc
movs
aaa
arpl
or
fs
stc
lds
cmp
les
les
gs
rcr
adc
xchg
jge
in
pop
mov
inc
dec
jns
jnp
mov
push
push
cmps
jbe
stc
jno
movs
sbb
sub
sub
xchg
pop
in
pop
mov
jp
fcmovbe
cmp
int3
mov
lods
aad
movs
push
(bad)
cdq
in
push
retf
mov
push
loopne
xor
loopne
das
sub
cmp
adc
leave
jmp
add
daa
push
fwait
adc
std
je
mov
cwde
mov
and
pop
cli
dec
popf
out
push
adc
mov
adc
dec
je
lock
mov
mov
ret
or
lea
lock
xor
int3
cld
xor
imul
or
jp
jbe
jo
std
sbb
xchg
sbb
xor
adc
out
int
fisub
add
or
mov
ins
out
sbb
sbb
xor
or
jmp
jecxz
jmp
cwde
fild
(bad)
(bad)
push
push
or
adc
cli
add
imul
mov
es
imul
(bad)
sbb
mov
push
mov
gs
mov
jecxz
push
mov
add
cdq
sub
cmps
mov
test
test
sti
and
inc
xor
adc
repz
pop
pop
mov
(bad)
pop
sub
leave
xchg
neg
repz
xor
mov
iret
push
and
es
inc
aaa
js
movs
xchg
add
jl
xor
pop
stos
int3
sbb
and
dec
xchg
stc
dec
retf
or
mov
sub
icebp
push
ficom
rol
stc
cmp
add
push
mov
popa
xchg
mov
push
inc
sub
inc
sub
mov
cwde
std
cmp
sbb
into
pop
lods
xor
mov
sub
ins
test
pop
xchg
or
cmp
(bad)
lahf
sahf
and
xchg
popa
nop
cmps
loope
jns
sbb
(bad)
jmp
push
daa
gs
outs
mov
sub
aad
sbb
push
inc
mov
mul
mov
push
jbe
adc
(bad)
(bad)
scas
cmp
loope
xor
(bad)
ficomp
sub
lods
in
dec
les
dec
and
mov
jmp
jmp
enter
lahf
dec
ja
cmp
shl
(bad)
or
stos
adc
adc
fbstp
pop
push
and
and
inc
or
retf
or
pushf
xor
std
nop
rcl
mov
cmps
and
jmp
jnp
aam
pop
xor
cmp
jmp
ds
mov
cs
sub
in
pop
pop
cmps
add
(bad)
jmp
jge
fwait
sbb
ins
loopne
xor
cmp
sbb
fldz
or
jo
mov
outs
push
dec
mov
fnstenv
sbb
mov
jg
cmps
frstor
jmp
push
cmp
adc
pop
int
xor
fisttp
jmp
jmp
aaa
or
xchg
cli
jmp
std
inc
jnp
movs
int3
xchg
stos
sub
mov
stos
sbb
sub
fwait
iret
cmps
repz
fild
js
repz
aad
cmps
lock
jg
scas
add
mov
add
jns
sti
jne
std
shl
inc
push
shr
popa
sub
jge
clc
add
xchg
jecxz
js
out
and
(bad)
cs
in
inc
jl
sbb
ret
pushf
cmp
xor
and
push
mov
fldcw
cmp
sahf
xor
test
and
aad
add
fucomi
mov
mov
fisttp
lods
cmps
mov
jbe
(bad)
in
sbb
fwait
into
push
mov
cmps
(bad)
jmp
push
mov
xor
idiv
pushf
cmps
push
cmp
fst
dec
adc
sub
dec
into
mov
dec
xchg
repnz
mov
pop
push
xor
in
mov
outs
out
in
dec
pop
mov
inc
inc
ror
cmps
(bad)
cmp
mov
add
int3
jno
push
popf
inc
and
or
dec
ss
test
fld
add
or
and
jne
and
sar
or
adc
push
push
outs
and
push
cmp
pop
repnz
rol
adc
pop
sbb
mov
fsubr
xor
pop
push
cmc
adc
sub
cli
jne
out
fist
outs
repz
out
loopne
xchg
mov
ins
leave
sbb
sbb
adc
jno
in
stc
scas
scas
push
aas
in
imul
mov
and
test
sar
adc
test
in
mov
fstp
dec
mov
xor
mov
outs
int3
icebp
lods
mov
mov
neg
es
jae
or
mov
ins
jbe
arpl
push
xchg
push
add
(bad)
mov
bound
lock
ins
cld
int
mov
and
lock
mov
push
mov
(bad)
add
adc
fnstenv
jecxz
cld
jmp
retf
pop
jnp
test
das
jno
int3
and
sbb
rcr
popa
(bad)
in
dec
inc
push
(bad)
xchg
and
dec
adc
scas
mov
xlat
int
or
jmp
not
(bad)
fdivr
ret
iret
xor
aad
xchg
xor
sar
call
push
or
xor
(bad)
jmp
jmp
adc
sub
xor
push
inc
cmp
push
sub
pop
cmp
iret
ds
jle
test
lods
mov
inc
inc
lds
xchg
adc
mov
popa
sbb
push
cs
and
jge
mov
ds
nop
sbb
clc
dec
shr
ret
xor
popf
test
dec
jg
mov
not
rol
xor
xlat
xor
pop
add
push
inc
inc
fisttp
loope
bnd
mov
scas
sti
mov
call
xchg
xchg
scas
retf
mov
cmc
dec
mov
sbb
or
ret
lahf
pop
cmp
fwait
hlt
movs
les
mov
and
aaa
mov
cmps
inc
mov
fadd
fadd
cld
add
mov
cwde
test
fisub
cmp
and
jle
jae
adc
cwde
adc
add
sbb
fcomp
movs
push
repz
mov
xchg
adc
popa
xor
cmp
sub
sbb
push
repnz
inc
dec
xchg
out
mov
lock
lods
hlt
mov
adc
push
hlt
int
push
cmp
push
xor
jnp
xchg
xor
aad
mov
shl
inc
ds
push
inc
lock
aam
jo
inc
(bad)
sub
inc
sub
stos
(bad)
iret
pop
cmp
out
(bad)
cli
or
push
pop
add
fcmovnbe
pop
cmp
movs
call
add
dec
cmp
inc
stos
ss
mov
inc
adc
and
mov
jo
ror
pusha
js
adc
cdq
mov
es
xor
mov
jbe
movs
inc
lea
dec
or
imul
sar
test
int
jns
jmp
leave
pop
xlat
fs
jle
jns
push
mov
push
adc
fsubr
inc
out
imul
or
mov
xor
cmp
jecxz
or
int3
or
xchg
outs
das
mov
stc
les
shl
adc
mov
cmc
inc
cld
push
mov
xor
dec
xchg
aam
test
nop
bound
pop
pop
xor
div
mov
sbb
xchg
xor
jo
arpl
xchg
inc
inc
leave
mov
pop
loopne
into
xor
inc
mov
jne
push
sub
cld
jle
test
dec
and
cld
jbe
and
lahf
gs
jbe
inc
sub
(bad)
loop
fild
jmp
ins
mov
(bad)
mov
retf
xlat
ja
jmp
pop
jl
xor
xchg
pop
cmp
es
xor
lods
pushf
das
inc
sub
sbb
push
pop
sbb
xor
ficom
das
aam
ins
xlat
push
pop
mov
nop
add
mov
les
mov
scas
push
mov
rol
push
je
cmp
mov
int
mov
pusha
push
add
push
sbb
or
bound
sub
imul
pop
(bad)
in
stos
cs
int
stc
mov
adc
in
add
inc
mov
push
lods
mov
sub
mov
cld
mov
mov
call
in
jo
popa
js
in
(bad)
push
push
mov
cmp
dec
push
jno
out
push
dec
stos
mov
or
mov
sub
lods
ret
(bad)
jecxz
jmp
and
retf
cld
mov
adc
sub
mov
jge
test
push
lea
inc
das
in
aad
sti
and
inc
clc
inc
(bad)
fild
mov
(bad)
test
dec
lahf
out
xchg
test
out
unpckhps
cs
pop
dec
add
dec
std
pusha
popa
mov
sub
movs
test
and
retf
adc
jmp
xchg
jl
xlat
sub
lea
inc
xor
xchg
xchg
retf
mov
push
adc
(bad)
loop
test
gs
mov
call
or
int
add
dec
int
xchg
inc
les
jl
pop
pushf
mov
out
fs
mov
cmps
mov
fisubr
inc
xchg
dec
add
test
xchg
sti
(bad)
nop
ins
fistp
mov
enter
mov
xchg
fidiv
rcl
repz
ds
inc
mov
mov
pusha
rep
cmp
xchg
xor
pushf
fwait
dec
fadd
mov
fisttp
cmp
xchg
or
mov
lods
push
cmps
mov
test
pop
pop
jns
and
and
cmps
add
mov
stos
cmc
stc
mov
in
arpl
shl
xchg
imul
(bad)
inc
imul
or
xor
icebp
cwde
pop
push
psrlw
aas
scas
jne
xchg
xchg
retf
pop
pop
mul
adc
xor
cwde
xchg
mov
call
fucomip
xchg
sbb
mov
ret
push
mov
lahf
dec
push
xchg
adc
mov
sar
and
dec
pop
push
or
(bad)
xchg
sbb
xor
push
xor
test
out
lods
jae
jns
sahf
repnz
in
mov
gs
sub
push
retf
stos
add
int3
test
xor
mov
jmp
aaa
fldenv
rol
lahf
jecxz
cmp
push
jecxz
rol
imul
pop
sub
sub
ja
imul
scas
fmul
ins
pop
jp
(bad)
pop
jge
dec
pop
aaa
sub
ucomiss
xchg
cmp
shr
aam
sub
pop
xlat
cmp
rcl
pop
cdq
cmp
(bad)
call
or
pop
cmc
test
test
xor
ja
aaa
sub
sub
idiv
or
arpl
test
shr
pop
cmps
lds
lea
pop
scas
dec
add
imul
psubusw
mov
inc
lods
mov
inc
and
or
mov
jg
and
cwde
inc
or
mov
scas
xchg
lds
inc
push
(bad)
fwait
jmp
cmps
movups
nop
mov
and
push
dec
in
and
fisub
sti
fsubr
push
xchg
mov
sub
pushf
aas
dec
std
xchg
in
ficom
stos
(bad)
shl
daa
stos
inc
or
rcl
leave
sbb
dec
pop
xchg
xor
pop
mov
retf
jbe
test
dec
push
jo
push
cs
mov
add
stc
loope
popa
push
sahf
aaa
imul
in
jno
mov
mov
jbe
jbe
pop
cld
mov
dec
xor
std
cmp
out
lds
mov
call
ficomp
xor
or
sub
inc
push
bswap
cmp
movs
sub
xchg
dec
rcr
cs
jg
xchg
jecxz
call
sub
mov
les
push
mov
xor
add
addr16
repnz
ins
xchg
jne
ins
inc
adc
lods
or
push
shl
(bad)
and
adc
xchg
mov
jne
ficomp
cli
sub
(bad)
aam
jge
imul
ret
retf
jge
xor
mov
push
rcr
xchg
cmc
xor
pop
nop
aaa
pop
adc
(bad)
and
call
adc
mov
aam
mov
(bad)
push
dec
mov
mov
mov
neg
xlat
rcl
add
stos
xor
or
pop
add
cwde
sub
and
inc
xchg
or
(bad)
mov
cld
inc
mov
rcr
or
push
add
int3
mov
mov
aaa
xor
addr16
inc
jl
cmp
push
mov
dec
test
sub
add
(bad)
mov
push
int
jmp
ret
adc
pop
or
pop
ins
and
mov
ret
lea
pop
(bad)
ret
or
call
or
aad
bound
out
add
fsub
dec
adc
push
in
inc
xchg
nop
gs
mov
call
push
push
inc
or
dec
sbb
dec
push
mov
xor
(bad)
(bad)
test
jge
idiv
xlat
cmp
mov
xchg
pop
adc
push
adc
inc
gs
add
or
popa
inc
pop
push
mov
das
aad
clc
lahf
stos
repnz
inc
lahf
push
mov
dec
(bad)
mov
mov
(bad)
or
test
mov
jnp
cdq
dec
ret
int
sub
dec
or
(bad)
mov
push
mov
es
cmc
jge
jl
sub
fcmovu
push
and
mov
dec
ins
or
xor
mov
imul
cmps
in
sahf
pop
pop
and
jo
fsub
push
imul
leave
fsub
ja
mov
mov
aam
mov
sbb
das
push
push
dec
pushf
cs
cmp
dec
push
bound
scas
push
sub
lahf
sub
adc
adc
cmp
ror
test
sub
mov
xchg
and
inc
fwait
jnp
sbb
adc
aaa
out
inc
add
push
cli
out
(bad)
pop
mov
mov
out
or
dec
aad
imul
mov
iret
aad
cs
cmp
push
iret
sub
pop
mov
cld
hlt
mov
loope
cmp
add
xor
push
inc
pop
and
cmp
lds
fs
inc
outs
cmc
gs
add
sbb
jo
dec
fild
xor
popf
inc
ins
xor
xor
mov
pop
adc
loop
leave
cmp
sub
xor
in
imul
mov
into
gs
mov
mov
in
dec
lea
push
mov
sub
xor
pop
clc
mov
sub
(bad)
push
cs
pop
pop
sub
cs
jnp
cmc
jg
mov
repz
add
gs
fisubr
mov
mov
mov
aaa
outs
add
(bad)
arpl
lods
ror
cmp
jnp
jp
mov
(bad)
enter
mov
stos
xor
popf
(bad)
mov
push
jge
cmp
inc
cmp
int3
imul
dec
ss
hlt
dec
sahf
(bad)
aad
je
add
adc
mov
mov
xor
pop
mov
cmp
jbe
and
loope
add
jo
jl
jo
jns
(bad)
jbe
xlat
mov
sbb
mov
adc
and
pop
add
jns
mov
push
mov
adc
mov
push
dec
inc
xor
adc
in
sub
scas
scas
or
mov
mov
and
mov
ret
outs
cmp
fwait
mov
pusha
cmp
movs
xor
mov
push
pop
call
adc
dec
xchg
popw
adc
fcomp
sub
shr
jmp
and
aad
jbe
push
mov
and
icebp
xchg
jno
outs
sbb
inc
movs
adc
test
fisubr
and
mov
(bad)
fadd
push
sbb
stc
jle
mov
leave
bound
rcl
pop
mov
leave
repnz
bound
inc
jecxz
or
dec
add
and
daa
add
xor
cld
pop
mov
jle
mov
pop
lea
popf
push
dec
lock
pop
cmp
mov
addr16
jl
nop
fmulp
fdiv
dec
fucomp
sahf
dec
fwait
or
add
fdivrp
in
jge
mov
and
inc
aad
jno
jecxz
rcr
rcl
mov
inc
out
and
pop
mov
daa
jns
xor
jecxz
dec
rcr
inc
or
or
mov
xchg
xchg
enter
cld
fwait
mov
cmp
in
shl
inc
out
in
lahf
aam
ret
push
xor
rol
mov
add
cli
jmp
jecxz
or
js
mov
sbb
stc
pop
inc
push
jmp
sbb
jmp
jno
stos
xchg
jle
mov
pop
sbb
call
xchg
mov
dec
mov
push
sbb
stos
jg
push
sbb
addr16
pop
xor
iret
dec
retw
test
or
mov
cmp
xchg
xor
jl
loope
xchg
pop
xchg
hlt
data16
(bad)
enter
or
push
xchg
inc
inc
ins
enter
push
mov
or
rol
int
es
mov
lods
(bad)
fdiv
cdq
icebp
push
push
jbe
mov
jbe
inc
push
lds
jl
pusha
adc
cmp
test
pop
sbb
fisub
pop
add
in
loop
fisttp
xchg
jp
adc
loopne
arpl
mov
jo
lock
in
inc
inc
ja
icebp
call
jae
pop
add
jl
movs
in
adc
xchg
add
push
push
cmps
and
(bad)
int
and
jnp
das
sbb
(bad)
dec
mov
sbb
dec
sub
and
stos
in
push
sti
test
jmp
imul
cwde
test
fild
xchg
bound
or
xchg
and
and
or
xor
mov
add
es
cmp
repnz
ins
pop
jbe
push
pop
movs
mov
xchg
loopne
sbb
pop
repnz
test
loopne
dec
scas
test
scas
imul
fdivr
pop
xor
pop
test
cmps
or
add
sti
aaa
xor
repz
lea
add
push
add
jbe
ret
mov
out
push
and
es
mov
adc
mov
add
xchg
adc
add
cmp
je
mov
mov
lock
adc
jne
pop
push
(bad)
add
(bad)
lahf
call
cs
add
daa
into
jle
mov
xor
mov
xchg
inc
retf
add
loop
scas
xchg
or
scas
push
dec
das
add
cwde
jp
scas
cmp
(bad)
(bad)
mov
and
hlt
dec
dec
xor
mov
in
inc
mov
scas
jle
jmp
gs
dec
leave
into
pop
push
ror
fimul
or
sbb
jp
aad
push
popa
jmp
int
xor
pop
cdq
(bad)
retf
fsubrp
rcl
aaa
inc
mov
es
cmp
ror
xchg
xor
inc
xchg
jmp
mov
push
psubd
push
bound
fnstenv
pop
sub
push
add
jle
dec
pop
mov
and
(bad)
ficomp
xor
pop
xchg
out
loope
and
aad
mov
icebp
adc
jae
inc
(bad)
hlt
mov
mov
rcl
pop
out
leave
(bad)
push
test
xor
mov
sbb
enter
pop
test
mov
mov
dec
ja
out
bound
bound
mov
aad
pop
popa
(bad)
outs
adc
fcmovb
add
mov
icebp
mov
mov
dec
mov
sti
xor
add
imul
inc
xchg
retf
push
dec
sar
add
movs
xchg
cwde
cli
and
aad
push
mov
ss
cmp
adc
pop
(bad)
mov
xchg
sub
sub
test
fwait
inc
adc
(bad)
sbb
dec
cld
cmp
jnp
add
pop
sbb
pop
pop
fistp
sub
xor
int3
shr
mov
mov
dec
shr
add
imul
mov
in
je
pop
mov
stos
das
aas
cmp
pop
sub
mov
push
xchg
mov
sub
fld
lahf
lea
xor
loopne
int
ficom
jmp
sub
push
cmp
lods
adc
jae
mov
inc
fsub
das
xlat
cwde
sub
push
jnp
mov
lods
adc
sahf
movs
(bad)
rcr
imul
in
jmp
pop
repz
call
test
lahf
out
jnp
repnz
adc
cmp
js
or
lea
sub
leave
push
add
and
loopne
dec
das
ins
das
and
jp
push
inc
jle
rcl
mov
dec
cmp
retf
outs
enter
es
out
hlt
test
ss
adc
adc
ds
sub
adc
mov
cmps
pop
mov
pop
(bad)
icebp
push
mov
xor
iret
loop
cmp
popa
shl
xchg
daa
push
mov
push
sub
das
mov
dec
xchg
xor
mov
jne
cmps
adc
mov
pop
or
sub
mov
sbb
stos
adc
cli
inc
add
les
mov
inc
fsubr
lea
inc
shl
adc
mul
fistp
adc
mov
cmp
pop
push
xchg
ja
aad
or
ret
and
jge
cmps
add
dec
enter
and
mov
mov
cmp
in
xor
mov
pop
push
cmps
mov
xchg
(bad)
xor
fistp
push
retf
rcr
pop
or
mov
push
xchg
sub
pop
aam
or
leave
(bad)
leave
push
pop
mov
inc
pushf
cmp
shl
and
push
std
xchg
or
sbb
in
aas
mov
pop
bound
ret
out
mov
stos
xor
sbb
stc
aad
sbb
add
jle
(bad)
gs
pop
mov
xor
aad
loopne
dec
sub
and
cmc
jns
(bad)
cwde
and
xor
inc
jge
jo
adc
xor
or
pop
(bad)
sbb
inc
test
push
scas
jae
cmps
xchg
push
adc
inc
lods
pop
sbb
sub
bnd
or
loopne
sbb
pop
aaa
mov
sub
test
inc
push
push
jmp
adc
cmp
inc
ret
lock
pop
xlat
inc
inc
and
cmp
lods
adc
into
out
test
mov
cmps
sar
dec
inc
leave
icebp
pop
push
in
mov
sahf
or
xor
xchg
fild
gs
bswap
fnstcw
add
jne
jmp
scas
jne
mov
jmp
jmp
enter
stc
test
cmp
daa
add
aad
sbb
or
jle
sbb
jne
inc
adc
out
add
jb
xor
push
or
mov
xchg
pop
inc
popf
outs
call
jne
popa
adc
cmp
neg
pop
mov
push
cmp
push
outs
or
outs
sbb
mov
outs
jp
sub
jp
lea
xor
or
xor
imul
icebp
loop
mov
jns
xchg
xchg
sbb
aaa
xchg
das
je
cs
je
or
ss
sbb
add
inc
repz
mov
push
mov
in
xchg
push
loop
inc
xor
add
(bad)
mov
sub
mov
arpl
cmp
and
sbb
lahf
(bad)
fisub
ds
dec
push
movs
leave
loop
in
mov
stos
mov
cwde
enter
xchg
mov
jmp
fwait
mov
push
pop
push
leave
into
clc
fnstcw
neg
pop
lds
into
or
add
dec
lea
and
rcr
sub
mov
loope
inc
retf
ja
ins
adc
push
(bad)
xchg
jne
shl
arpl
call
xor
push
pavgb
adc
and
mov
mov
adc
fidiv
push
pop
push
jne
jle
jmp
cmps
cmps
or
mov
fbstp
mov
hlt
imul
mov
dec
fwait
mov
(bad)
nop
or
shr
iret
inc
in
mov
pusha
xchg
xchg
call
mov
fldcw
push
jae
xor
mov
xor
pop
gs
dec
stc
dec
and
rcl
xchg
inc
add
fld
int
push
xor
aaa
gs
inc
loopne
sbb
scas
mov
icebp
popf
stos
jns
pusha
cmps
or
mov
and
dec
sub
add
inc
jne
cmp
out
lock
cmp
mov
cld
jbe
inc
lods
sub
pop
(bad)
lods
int3
xor
aas
pusha
pop
or
inc
mov
into
mov
and
push
in
and
mov
mov
mov
and
push
imul
push
pop
or
sbb
jae
out
xor
shl
jno
ins
(bad)
addr16
fs
mov
xchg
jp
daa
pop
scas
call
inc
lahf
or
xor
fwait
add
inc
jo
inc
fist
lea
jecxz
sbb
loope
in
jp
cmp
pop
rol
nop
rcl
push
ins
jl
cld
mov
jo
xor
test
sar
daa
mov
clc
mov
loop
xor
push
aad
mov
popf
inc
and
scas
jmp
shl
xor
sbb
cwde
loopne
mov
ins
repnz
mov
sub
fwait
adc
pop
or
jo
push
inc
pop
(bad)
in
pop
mov
mov
es
std
mov
dec
ja
enter
lods
add
fwait
inc
out
stos
addr16
mov
fild
call
out
push
jl
pop
cmps
mov
test
mov
adc
lea
in
xchg
xchg
xor
out
sbb
sbb
sub
mov
mov
inc
push
fbstp
cmps
je
addr16
adc
imul
inc
jns
xor
jmp
pop
out
data16
cmc
push
mov
or
ss
dec
cmp
in
cmc
and
icebp
(bad)
loope
mov
mov
pop
cli
shl
rcr
ficomp
shl
push
dec
adc
test
mov
les
mov
fwait
mov
out
sbb
lea
jecxz
jle
dec
pop
int
adc
mov
movs
hlt
xchg
pop
pop
cmp
cdq
retf
fwait
shl
add
xchg
packuswb
ins
xchg
mov
and
pop
movs
ins
rcr
and
jmp
rcl
stc
movs
out
rol
sub
lea
push
push
xchg
jo
outs
in
cmp
cmps
mov
adc
add
mov
push
cmp
sbb
dec
in
jmp
dec
mov
lds
sbb
xchg
pusha
jnp
not
adc
xchg
rcr
cwde
mov
cmps
imul
sahf
pusha
cs
add
shl
mov
ins
sbb
add
dec
lahf
cmp
outs
es
sar
mov
cmps
repz
sub
in
mov
or
ja
clc
mov
xor
adc
mov
push
(bad)
or
out
mov
or
les
sbb
test
outs
cwde
xor
xor
push
sahf
and
sub
add
rol
and
hlt
mov
cmp
mov
cmps
pop
stos
jmp
push
clc
inc
test
pop
bound
xchg
shl
push
pushf
mov
ins
mov
xchg
scas
inc
xchg
sbb
xor
scas
(bad)
(bad)
xor
jnp
dec
outs
xchg
stos
aaa
or
jno
and
outs
mov
sub
mov
repnz
mov
lods
push
mov
mov
in
shl
dec
mov
add
mov
ss
movs
add
xchg
aas
dec
mov
imul
call
xchg
pop
pusha
shl
pusha
out
stos
sti
std
pop
in
int3
idiv
and
mov
test
addr16
scas
add
lea
pushf
mov
dec
jg
ja
pop
loop
add
imul
sub
inc
repnz
sub
pop
aas
adc
pop
loop
(bad)
out
test
push
jae
les
fbstp
(bad)
daa
or
stc
push
(bad)
inc
ins
jnp
pop
push
add
mov
jecxz
in
cmp
jns
dec
mov
cmp
loopne
movs
cmp
xchg
xor
mov
shl
adc
(bad)
mov
scas
ins
sbb
mov
sbb
and
pushf
aam
lahf
int3
ret
(bad)
xor
mov
test
in
xor
loope
and
pop
xor
es
inc
jnp
ins
sbb
pop
movs
and
out
into
and
jbe
(bad)
iret
push
push
xchg
test
dec
and
pop
xor
cmp
test
rol
inc
in
(bad)
and
loopne
(bad)
cmps
shr
stc
ins
cmps
sbb
outs
dec
cmps
sbb
fisttp
inc
pop
cmp
lahf
adc
stos
(bad)
add
sbb
daa
daa
dec
lea
sub
jne
dec
and
mov
sub
shl
pop
push
pushf
xchg
xchg
inc
shl
pop
inc
pop
sbb
cmp
push
test
popf
orps
repz
sub
arpl
adc
test
adc
cmp
retf
jb
nop
ins
pop
fild
pop
arpl
jns
shl
sbb
push
loope
ins
cs
ds
fdivr
loope
aaa
xor
mov
lods
lods
pop
mov
sbb
or
ds
sbb
clc
int
cs
xor
and
inc
lods
cmp
jmp
js
adc
(bad)
fsubr
(bad)
das
pop
(bad)
push
jno
ss
sbb
mov
mov
jno
xor
int3
imul
mov
mov
sbb
cmp
or
lods
sbb
cmps
scas
es
lods
test
or
mov
ds
dec
pop
or
loop
ret
dec
mov
pop
mov
daa
push
(bad)
adc
sub
mov
sbb
cmc
inc
ins
iret
aad
sbb
in
xchg
out
mov
js
clc
lds
mov
pop
sub
outs
and
es
pop
jmp
shl
arpl
sbb
xor
and
inc
push
pop
lods
inc
or
inc
sti
sti
ins
popa
(bad)
aaa
fdiv
jecxz
es
pop
shl
jae
adc
in
inc
jl
ret
mov
sub
inc
stc
in
inc
push
ret
push
mov
jg
aaa
inc
inc
inc
ja
pushf
xlat
sbb
and
imul
cmp
jnp
dec
pop
cmc
add
loope
shr
cmp
ins
pop
out
(bad)
sbb
mov
fs
mov
rcr
in
movs
rcr
enter
fist
in
daa
movs
int
mov
frstor
jecxz
push
test
sbb
jmp
outs
inc
mov
push
push
cmps
leave
popa
adc
inc
sahf
pop
clc
cli
lods
pop
scas
shl
push
das
aad
sub
popf
mov
lods
lods
pop
mov
jmp
jecxz
sbb
in
lock
mul
add
(bad)
out
adc
gs
es
daa
jns
inc
xchg
ins
cdq
or
es
repz
push
mov
push
mov
fcmovnbe
xchg
push
mov
repnz
call
mov
jle
pop
push
out
cs
mov
inc
nop
dec
gs
and
out
add
sbb
ss
retf
ss
and
cli
inc
inc
in
jp
jns
sub
vpaddsb
ror
pushf
ret
ret
aas
cld
cmovl
repnz
stc
fisttp
jecxz
sub
sbb
popa
push
sub
or
outs
addr16
ja
stos
mov
in
cdq
mov
and
mov
push
outs
jp
mov
or
sbb
daa
xor
in
jae
adc
inc
(bad)
inc
imul
inc
ins
pop
push
sub
adc
retf
jp
jmp
sub
sub
out
dec
int
jecxz
xchg
test
inc
(bad)
fsub
in
cld
jnp
in
dec
xor
fldenv
adc
xor
xchg
sbb
fisub
pusha
jp
fs
scas
inc
mov
daa
dec
xchg
hlt
sub
imul
cli
mov
popa
je
test
cmp
pop
mov
loope
imul
aas
xchg
bound
cld
ret
mov
stos
add
xor
icebp
mov
out
and
xchg
jecxz
das
(bad)
out
(bad)
cmps
cdq
mov
(bad)
sbb
lods
popf
xchg
rcl
mov
adc
in
jp
jle
in
cmp
push
jbe
sub
hlt
xor
mov
sbb
scas
sub
lds
mov
retf
or
call
pop
jp
adc
or
mov
ins
aas
call
das
mov
(bad)
test
pop
or
ins
rcr
jne
jmp
xor
mov
bound
mov
cmp
xchg
in
in
pushf
xchg
push
mov
loope
or
push
imul
sbb
xchg
in
fadd
psraw
push
fdivr
iret
mov
fld
(bad)
ins
mov
and
hlt
out
je
xor
out
jle
push
pop
dec
add
(bad)
pop
repnz
pop
mov
iret
and
clc
shr
jge
add
loope
dec
lods
adc
hlt
jne
call
pop
(bad)
pop
or
cmps
xor
jecxz
jo
inc
in
pusha
inc
sti
movs
jne
js
scas
sbb
outs
sahf
xchg
pop
jnp
daa
mov
shl
mov
or
push
and
xchg
ror
jle
leave
in
xchg
mov
ret
int
icebp
fwait
gs
call
xor
and
jmp
mov
jbe
mov
mov
mov
int3
push
repz
cmp
lds
dec
cmp
push
pop
movs
cmp
repnz
cdq
test
jge
fdivrp
mov
xchg
adc
or
mov
xor
out
dec
inc
(bad)
jo
fwait
pop
int
idiv
cli
into
or
(bad)
loope
adc
les
retf
repz
fwait
and
jo
enter
mov
(bad)
ficom
cmps
dec
pop
std
scas
popa
and
mov
(bad)
mov
out
sbb
(bad)
les
lods
pop
loope
nop
inc
adc
fcom
dec
mov
not
sbb
repz
jp
xor
inc
jl
mov
cmp
cwde
outs
int
fucomi
sbb
popa
xchg
pop
jns
mov
add
test
dec
xchg
sbb
inc
addr16
sub
jmp
popf
das
outs
push
bound
push
loope
in
das
jno
mov
mov
jl
add
sub
sub
push
jl
xor
cmp
sub
and
adc
fwait
stos
cwde
and
mov
outs
pop
mov
mov
inc
cmp
repnz
(bad)
inc
lds
out
mov
test
inc
mov
ret
xchg
sub
stos
xor
xchg
in
fdivr
xchg
sbb
jbe
xor
jb
xchg
stos
mov
add
cwde
jp
shl
xor
inc
clc
adc
jbe
imul
jg
fisub
sub
inc
mov
icebp
add
dec
mov
push
cwde
jne
ret
xor
cmp
push
cmp
cli
sahf
pop
dec
dec
jg
outs
(bad)
jecxz
jecxz
mov
sub
xor
sbb
or
jno
xchg
add
or
arpl
xchg
or
cmp
iret
icebp
dec
jnp
shr
and
movs
dec
aam
nop
cmps
rol
add
jmp
idiv
test
int
pop
popf
mov
lods
mov
jmp
adc
xchg
jmp
xor
cmp
jge
inc
xor
jno
into
push
inc
int3
jle
jle
int3
mov
dec
mov
mov
sub
pop
ror
xchg
sub
(bad)
mov
xchg
test
sub
adc
imul
fidivr
inc
cli
pop
dec
push
and
mov
mov
cld
pushf
inc
cld
aas
dec
mov
mov
jno
inc
mov
pop
or
cmc
sbb
add
xchg
xchg
add
push
sub
and
jmp
xchg
xor
(bad)
imul
add
mov
and
movs
in
repnz
aam
inc
sar
pop
mov
std
jmp
shr
ss
jle
in
movs
ret
pop
outs
gs
sub
js
mov
and
fwait
jl
xchg
sub
ret
dec
not
adc
add
sbb
add
retf
and
fwait
add
pop
retf
cld
pusha
inc
dec
dec
es
mov
pop
adc
cli
mov
mov
sbb
outs
enter
sub
movs
out
sbb
and
lods
adc
or
inc
dec
ret
xor
int3
retf
not
ja
sub
pusha
ret
and
movntq
out
pop
pushf
retf
mov
(bad)
ret
mov
inc
lahf
xchg
dec
add
cmp
mov
hlt
test
jbe
mul
and
push
xchg
xor
fistp
push
mov
jb
cwde
hlt
imul
jnp
xchg
jns
add
test
daa
imul
in
jae
mov
movs
mov
js
int3
or
jp
mov
push
jns
shr
pusha
jmp
stos
test
outs
out
test
mov
dec
bound
adc
xchg
sub
inc
xor
mov
sbb
sub
push
mov
jo
xor
pusha
aam
mov
push
jnp
shl
mov
mov
ftst
mov
enter
jae
mov
cli
js
fnstcw
mov
loope
ss
mov
xor
pop
cmp
pop
inc
push
out
into
pushf
fiadd
mov
adc
xor
inc
int
add
jnp
icebp
ret
add
and
(bad)
sti
adc
mov
mov
mov
jle
repz
ja
sbb
sbb
mov
jecxz
retf
mov
rcl
jno
(bad)
sbb
arpl
clc
jmp
and
int3
daa
(bad)
push
in
and
div
xor
rol
out
stc
inc
lock
sbb
mov
push
mov
add
or
cmp
std
loop
aad
or
mov
outs
cmps
test
mov
jo
jg
cmp
(bad)
test
in
(bad)
shl
lods
xchg
push
jbe
xchg
cmp
dec
fstp
rol
inc
mul
imul
mov
lds
sahf
(bad)
aas
push
(bad)
or
rol
mov
cmp
add
add
mov
sahf
push
sbb
adc
fistp
aas
or
jl
ss
popf
adc
cmc
outs
dec
and
mov
pop
xchg
lds
(bad)
and
call
popf
jge
jae
jne
pop
je
arpl
cmps
mov
out
or
movs
push
xor
in
adc
stos
outs
mov
sub
dec
or
adc
mov
cmp
das
and
and
sub
pushf
fistp
mov
mov
dec
(bad)
outs
sub
add
xchg
ds
pop
(bad)
adc
add
test
mov
shr
movs
cs
popa
stc
dec
add
cmc
repnz
(bad)
movs
fucomp
add
call
add
lds
xchg
or
mov
or
mov
mov
inc
xchg
(bad)
xchg
imul
jp
dec
cli
push
scas
pop
and
sub
call
dec
lock
scas
mov
cmps
mov
adc
sar
std
rdtsc
inc
pop
jmp
movs
aad
sub
aaa
fmul
enter
push
(bad)
les
das
inc
cld
stos
pop
jp
fldenv
popf
cmp
shl
imul
pop
and
cmp
lock
ja
sbb
js
push
jns
mov
daa
sbb
ins
or
pop
addr16
js
fistp
jns
ficom
les
ret
mov
cmps
je
adc
fcomp
mov
mov
shl
das
pxor
loopne
mov
or
stos
pop
loop
push
jmp
(bad)
aas
(bad)
adc
dec
xor
xor
pop
or
test
add
int
mov
popf
repnz
sbb
xor
push
data16
cmp
add
xor
das
mov
test
retf
popa
lea
hlt
xlat
lahf
fcmovb
mov
rcr
movs
or
outs
pop
mov
mov
adc
sbb
and
shl
add
sahf
lahf
sub
test
add
bound
es
faddp
mov
push
(bad)
pop
sub
sub
call
xor
scas
test
call
sub
pop
ds
lods
popa
aas
push
daa
imul
shl
sub
test
mov
mov
cmc
hlt
mov
into
dec
push
adc
cmp
add
cmps
xchg
or
repz
pop
ret
cdq
push
ins
adc
adc
ret
mov
xor
xchg
add
cmp
adc
out
sahf
pop
cmp
daa
int3
stc
or
retf
cmp
inc
nop
lahf
pop
or
fdiv
adc
inc
lods
jg
(bad)
outs
scas
enter
mov
jae
or
(bad)
push
(bad)
xchg
daa
cli
inc
mov
push
in
in
mov
repz
ftst
fs
add
clc
(bad)
loope
and
sub
popa
cs
add
lds
push
stc
fs
jle
in
push
mov
dec
jo
and
mov
mov
cmp
pop
test
inc
cld
sbb
cmp
xchg
ds
cmp
or
stc
pop
xchg
cwde
jecxz
test
in
or
test
mov
ds
out
test
sahf
xchg
pop
int
in
cwde
mov
pop
xchg
and
push
out
bnd
sub
scas
rcl
cld
repnz
(bad)
lahf
sub
hlt
jg
stc
fisttp
mov
ja
mul
lea
inc
test
dec
dec
imul
xchg
cmp
lea
or
cmp
and
test
int3
mov
xchg
cmp
xor
shr
test
mov
sbb
adc
fucomip
sahf
movs
mov
inc
pop
mov
push
xchg
mov
int3
or
and
add
pop
sbb
mov
stos
rcl
inc
xchg
dec
sub
enter
je
xchg
je
dec
mov
cmp
xchg
shl
(bad)
(bad)
enter
jb
or
(bad)
mov
jl
in
dec
in
pop
not
fwait
xor
xchg
cmp
sub
xor
jnp
jae
xor
adc
push
faddp
(bad)
loope
xor
and
pop
test
cmps
fstp
cld
sbb
mov
mov
mov
mov
dec
cwde
xlat
scas
push
xchg
mov
inc
in
loopne
jnp
pop
xor
ret
fdivr
popa
popf
inc
jno
out
jnp
test
inc
cli
push
shl
mov
ret
cmp
les
fucom
sub
mov
xor
push
aam
or
mov
jmp
and
inc
repz
mov
sbb
test
or
test
push
nop
jl
mov
push
mov
jle
or
jbe
pop
and
mov
movs
(bad)
aad
mov
fidivr
pop
jne
movs
pop
xchg
(bad)
call
jne
mov
scas
call
psubsw
aam
jmp
add
fs
faddp
and
dec
sub
push
xor
ss
mov
fsub
xchg
mov
mov
icebp
pop
mov
out
pop
sbb
add
jmp
std
pop
jns
push
imul
push
xchg
xchg
mov
jge
shl
mov
loopne
add
hlt
push
imul
(bad)
outs
xor
and
in
push
ror
cmp
sub
movs
pop
pop
pop
inc
add
pusha
jae
mov
or
mov
or
outs
test
ret
or
mov
cmp
mov
cmp
(bad)
test
test
ja
mov
rcr
les
das
js
repz
pop
loopne
sub
sbb
sub
push
fwait
(bad)
shl
cdq
pop
push
adc
test
cli
popf
ret
jmp
ds
inc
lods
(bad)
outs
lds
fild
push
pop
dec
push
cdq
cmp
mov
add
outs
and
nop
clc
adc
push
inc
aam
popa
mov
jae
jmp
call
cmp
sar
ja
and
stc
enter
pop
loop
add
dec
fld
cmp
adc
loop
jne
inc
in
repz
scas
inc
das
(bad)
dec
test
jno
and
cmps
and
loop
inc
scas
xchg
jmp
int3
xchg
lods
cmp
lock
jne
adc
in
nop
fsubr
pop
out
jb
in
pop
push
addr16
mov
lods
ret
xlat
pop
jmp
inc
loop
sub
aaa
xor
and
test
out
hlt
cmc
imul
shr
fwait
(bad)
push
xchg
cmp
mov
add
shl
dec
add
push
mov
cmp
mov
add
das
xor
xlat
les
loope
sub
sub
cmp
inc
sub
jp
mov
xchg
dec
das
xor
xchg
shl
aas
cmp
lds
push
int3
sub
ret
inc
and
mov
out
(bad)
fisub
jne
mul
add
clc
int3
ficom
dec
dec
push
ja
mov
sahf
shl
dec
nop
call
xchg
adc
pop
into
ja
arpl
scas
loope
out
add
sbb
aas
dec
push
jne
aad
test
or
sub
pop
mov
pop
dec
xchg
ds
push
xchg
nop
push
out
jge
addr16
mov
popf
cmps
arpl
cmp
pop
cli
xor
cmp
mov
data16
fmul
inc
fs
pop
ret
jl
outs
retf
out
aaa
fist
jp
sar
mov
shl
ret
daa
popa
push
mov
mov
jle
fistp
sbb
popf
addr16
inc
in
cdq
popf
inc
les
repnz
fdivrp
mov
add
xchg
cli
test
xchg
or
call
call
repz
sub
repz
pop
stos
jecxz
pusha
outs
lds
inc
sbb
xchg
fst
leave
fst
in
cld
mov
fcom
test
xchg
stos
lock
pop
nop
push
mov
jmp
arpl
test
xchg
xchg
and
int3
fwait
ins
ja
sub
inc
mov
add
(bad)
je
out
aaa
mov
mov
jl
mul
(bad)
repz
jmp
push
jbe
mov
cmp
leave
pop
mov
sbb
push
pop
(bad)
adc
add
mov
push
push
cld
cmp
es
and
pop
xchg
hlt
sti
sub
or
push
xchg
inc
inc
mov
xchg
(bad)
je
cmp
mov
bound
add
jle
aas
pop
add
scas
mov
(bad)
popf
in
xor
retf
gs
jl
push
jnp
int
pushf
sbb
jo
dec
sub
or
mov
xchg
shr
cmp
sti
mov
inc
mov
js
or
or
retf
or
mov
xlat
es
sub
and
sub
les
or
and
(bad)
lods
mov
sbb
mov
leave
mov
hlt
pop
fimul
call
and
jge
and
adc
es
cld
loope
cwde
push
aad
sub
mov
xor
jmp
dec
fstp
(bad)
sub
add
push
lahf
push
pop
out
(bad)
lock
aam
pop
movs
mov
(bad)
xlat
jmp
popa
into
push
aam
lahf
mov
cmp
in
sub
inc
dec
test
mov
pop
mov
movs
nop
dec
sub
lahf
push
into
enter
adc
pop
cmp
std
adc
dec
mov
sub
jbe
or
js
add
fdivp
ficom
repnz
jo
cmp
mov
dec
cmps
imul
pop
rol
xchg
pop
sbb
push
dec
adc
out
sbb
jecxz
inc
fst
jl
imul
add
movs
sbb
mov
stos
outs
mov
sub
push
cli
out
das
xor
mov
sub
jp
mov
arpl
loop
bound
adc
pop
jno
dec
dec
div
xchg
cmp
aaa
sbb
xlat
sbb
xchg
lea
jo
aaa
add
rcl
sbb
jg
bound
mov
sub
jmp
mov
fwait
aas
add
xchg
push
cld
push
inc
jmp
sbb
sbb
and
adc
sub
ja
mov
inc
out
stos
add
stos
and
mov
xchg
aad
test
inc
push
jne
push
mov
stos
or
cmps
pop
leave
add
mov
pop
mov
rcl
lea
jbe
xor
push
ret
mov
sub
stc
push
mov
fcom
fwait
and
and
xor
and
mov
and
mov
push
push
rcr
pop
mov
sbb
jne
mov
xchg
cdq
jbe
sub
ret
xor
aas
mov
in
cwde
xlat
test
fucompp
and
cmp
mov
and
add
pushw
mov
je
out
mov
(bad)
mov
fsub
outs
shr
cdq
imul
out
inc
mov
and
push
(bad)
mov
scas
retf
lea
and
(bad)
mov
movs
(bad)
sbb
out
cwde
ins
fist
mov
stos
cs
addr16
inc
mov
xor
cdq
cmps
in
cwde
jae
bound
mov
mov
lahf
pop
pop
addr16
cmps
sahf
push
data16
mov
mov
cmp
pop
xchg
add
jp
aam
imul
adc
mov
rcr
xchg
pushf
retf
fs
push
jno
sbb
dec
jno
xor
(bad)
ja
xchg
jecxz
imul
int
es
add
arpl
or
xor
sbb
xchg
mov
xor
(bad)
sub
jne
adc
mov
xchg
dec
mov
jecxz
repz
cmp
mov
or
cmp
or
jo
push
xor
xchg
(bad)
xchg
dec
stos
xchg
lahf
push
and
jp
xchg
pop
shl
(bad)
hlt
lea
add
pusha
ja
push
aam
xchg
das
out
pop
cwde
or
add
data16
scas
bnd
lods
ins
aam
aas
js
in
(bad)
scas
adc
test
out
xor
repz
and
fs
jo
and
(bad)
test
test
rcr
cld
shr
jnp
pop
pop
xchg
push
(bad)
and
mov
ds
dec
sbb
and
in
mov
push
push
leave
les
adc
cmc
mov
sub
sub
xchg
sub
shl
or
inc
int3
push
push
(bad)
rol
call
jle
arpl
(bad)
call
add
call
sbb
out
jge
adc
call
mov
out
(bad)
fistp
(bad)
add
fstp
(bad)
leave
js
add
pop
lahf
cdq
es
mov
scas
clc
inc
jecxz
xor
movs
out
icebp
std
dec
cmp
push
into
aad
add
test
pop
adc
push
arpl
pop
mov
ins
les
loop
lods
mov
pop
sahf
dec
retf
out
add
inc
jb
mov
(bad)
gs
push
mov
dec
bound
mov
in
xchg
cmps
jae
inc
es
(bad)
inc
std
scas
mov
jmp
mov
xchg
call
repnz
and
fldenv
and
sti
adc
jmp
int3
ret
aam
repnz
fpatan
dec
cdq
jle
xchg
and
dec
cmp
xchg
aaa
call
fld
dec
neg
add
fild
retf
add
dec
loopne
mov
outs
mov
dec
pop
test
dec
and
jb
sbb
rol
test
inc
inc
pop
pop
retf
push
dec
data16
dec
adc
test
fnstenv
cmp
xlat
sbb
in
jl
jo
push
dec
adc
xchg
lahf
aam
and
mov
loope
fnsave
add
cmc
jg
ret
leave
mov
ud2
jmp
mov
sub
sbb
js
mov
or
enter
into
pop
dec
lock
frstor
sub
add
pop
cmc
clc
xor
stos
xchg
iret
jge
sub
sub
push
sar
mov
mov
test
mov
sbb
add
mov
sub
inc
out
jg
sub
sbb
pop
pop
clc
mov
arpl
push
enter
stos
ss
push
fcmovnb
dec
call
pop
adc
jmp
adc
pop
lock
mov
pop
dec
mov
mov
fldenv
mov
cmc
sub
and
call
mov
sub
or
daa
and
les
xchg
sti
sub
es
jmp
sub
or
cmc
jne
cmp
in
loopne
mov
rcl
xor
sbb
inc
adc
push
push
sub
gs
inc
cmp
mov
add
push
pop
xor
mov
mov
dec
xlat
or
scas
jbe
adc
cmp
imul
add
sbb
cmps
push
sbb
adc
in
cmp
push
nop
jecxz
ret
mov
inc
(bad)
mov
out
pop
xor
(bad)
jmp
in
stos
cmp
movs
add
xchg
call
xchg
nop
jne
test
bound
adc
rcr
cmp
xrelease
inc
loop
inc
ror
repz
push
sar
xchg
adc
jns
mov
jne
sub
es
fcomp
(bad)
out
(bad)
mov
push
enter
jns
xchg
lahf
not
inc
fdivr
out
push
xchg
cli
push
neg
and
xor
push
jp
movs
loop
test
push
call
jp
adc
pop
inc
add
xchg
jne
ror
call
js
(bad)
or
pop
adc
push
sar
jmp
jl
push
clc
and
outs
mov
jle
jnp
dec
seta
cdq
punpckldq
fidivr
dec
in
push
xor
xchg
ja
std
(bad)
rcl
xchg
jecxz
mov
(bad)
js
or
jmp
bnd
addr16
sbb
or
test
dec
scas
test
lods
mov
fmul
test
xor
(bad)
pop
(bad)
cmp
cmc
jnp
pop
movs
test
add
loope
popa
push
and
(bad)
jecxz
pop
dec
xor
enter
mov
(bad)
sbb
sub
into
ret
jmp
push
loopne
jbe
cmp
ja
ficom
or
or
or
jbe
push
inc
push
fnstenv
jbe
out
stos
jmp
movs
or
(bad)
mov
gs
je
cmp
mov
lea
cdq
test
bound
mov
pop
jnp
ret
add
lods
push
or
push
mov
out
fisub
sub
out
inc
sub
xchg
es
xor
cwde
cmp
xchg
mov
(bad)
lea
sub
sbb
xchg
pop
retf
mov
jmp
loop
sub
dec
test
dec
es
sub
int3
xor
out
adc
lea
sti
cli
push
fisttp
push
and
xchg
nop
les
xchg
scas
imul
ss
sbb
pop
fisttp
rcl
into
cli
lds
mov
adc
add
loopne
pop
cmps
aas
adc
mov
xor
inc
test
ficomp
dec
or
stos
sahf
movs
sub
adc
push
cs
mov
(bad)
push
test
jno
loopne
sbb
(bad)
out
xor
enter
pop
das
or
jle
lods
mov
xor
mov
adc
push
cmp
dec
mov
(bad)
test
jl
sub
popa
inc
daa
jp
and
test
retf
xchg
xor
pop
adc
xchg
mov
aas
mov
adc
dec
cmp
pop
(bad)
test
sub
xchg
jbe
enter
test
xchg
mov
es
and
sbb
inc
int3
mov
scas
or
movs
es
(bad)
outs
add
or
inc
fcom
mov
dec
imul
cmp
ror
xor
gs
pop
dec
jb
ins
mov
scas
xchg
mov
movs
xor
cmc
xchg
pop
arpl
jo
mov
in
fs
cwde
dec
pop
lahf
and
sub
lods
not
daa
shl
stc
jo
mov
fnstenv
loopne
aad
fwait
es
jno
leave
inc
jmp
int3
test
test
rol
sti
dec
dec
jb
popa
or
scas
retf
(bad)
fdivr
jbe
xchg
loope
retf
movs
cwde
addr16
dec
push
push
mov
cmp
lods
out
retf
int
jp
pushf
arpl
push
cmps
jns
sub
adc
iret
outs
fs
test
fild
std
cmp
pop
std
in
adc
mov
xor
idiv
lods
gs
inc
rol
fidiv
ja
mov
cmp
rcl
imul
lods
(bad)
js
mov
(bad)
xor
fistp
inc
inc
xor
int3
push
mov
jne
imul
scas
dec
dec
rol
test
sub
pusha
and
(bad)
repnz
or
(bad)
cdq
mov
int
inc
pop
(bad)
(bad)
cmp
sar
sbb
mov
inc
jmp
mov
xchg
xchg
(bad)
ficomp
pop
push
nop
(bad)
xchg
mov
push
ja
dec
and
push
and
out
inc
add
dec
mov
inc
push
dec
hlt
fs
xchg
xor
sbb
sbb
sbb
and
xor
or
popf
loopne
dec
xor
jmp
xchg
pushf
movs
inc
int3
pop
out
inc
inc
jb
and
push
sbb
cmc
rol
or
sub
cmp
or
fdiv
xor
bound
mov
inc
mov
sub
adc
outs
sub
jmp
add
mov
cmps
cmp
(bad)
pop
fsub
stc
mov
mov
mov
and
xor
popa
stos
inc
shr
adc
int
mov
jl
mov
sbb
or
jo
adc
cld
inc
mov
push
cmps
lods
xchg
add
or
fistp
mov
xchg
data16
and
fmul
arpl
call
stos
dec
outs
push
in
movs
in
dec
push
adc
iret
fisubr
out
or
mov
cmp
sti
movs
test
jle
pusha
jl
mov
out
test
sbb
adc
cmp
sahf
inc
sub
inc
xor
in
push
and
pop
jecxz
je
les
pop
imul
push
push
xlat
test
ss
sbb
push
adc
sbb
mov
(bad)
repz
jecxz
or
out
mov
sbb
mov
sub
in
jge
addr16
cmp
stos
in
movs
fs
pop
inc
aad
in
inc
mov
dec
into
push
xchg
adc
mov
lods
ins
dec
mov
cmp
inc
out
setbe
cli
sbb
repnz
in
out
xchg
arpl
imul
adc
lods
ret
push
inc
loop
push
and
std
mov
in
pop
mov
ins
and
(bad)
pop
jmp
sub
in
(bad)
jno
sbb
mov
pop
js
popa
scas
cmp
mov
or
(bad)
jge
ror
add
inc
sub
sub
imul
xchg
xor
ins
sbb
sbb
shl
in
out
jp
mov
fist
inc
xchg
movs
adc
cmp
adc
repnz
sub
div
mov
pop
scas
mov
lahf
iret
int3
adc
or
push
cwde
pop
retf
mov
fwait
push
test
pop
imul
xchg
xlat
xor
test
and
push
mov
mov
outs
pop
sbb
inc
popa
jmp
add
dec
out
dec
mov
jmp
adc
xchg
dec
cmps
sti
xor
cmc
mov
or
fcomp
and
rcr
pop
add
jmp
pop
pop
mov
int
sub
push
jno
cvtps2pi
and
and
xlat
inc
inc
sar
sub
xor
pop
pop
adc
jg
dec
push
mov
imul
ret
sub
dec
jno
mov
sbb
sub
xchg
xchg
loop
dec
ds
mov
aad
std
test
xor
mov
or
push
scas
push
loopne
stos
sbb
xchg
xchg
repz
(bad)
push
das
dec
outs
push
jp
jmp
mov
sbb
fistp
dec
push
pusha
add
jo
fist
out
jbe
lea
xor
outs
jns
aaa
xor
jle
in
mov
fdiv
push
inc
pop
cmp
xor
stc
nop
aad
xor
mov
loope
sub
or
stos
fist
sub
(bad)
adc
call
mov
cmp
jecxz
cld
sbb
dec
mov
jmp
rcr
mov
xchg
jl
mov
aaa
push
cs
mov
push
bound
ja
push
add
mov
jne
or
sbb
not
in
and
pop
nop
xlat
loopne
fst
ins
(bad)
sbb
fcmovb
mov
in
repnz
ins
loop
loop
mov
mov
jl
mov
xor
stc
xchg
pop
popf
popa
adc
xor
rcr
ret
xchg
pop
rol
xchg
test
jns
jne
fucomp
or
(bad)
and
rol
lods
pop
neg
bnd
mov
xlat
mov
mov
outs
div
inc
icebp
or
ins
out
jge
ret
or
inc
in
jae
ja
test
mov
dec
(bad)
cli
xchg
push
xchg
mov
stos
imul
jne
jmp
loop
and
add
ins
sbb
repz
loope
lahf
sub
fisttp
ins
inc
std
jmp
pop
and
enter
mov
push
dec
xchg
jl
adc
cld
(bad)
daa
daa
mov
or
loope
lds
push
call
ja
mov
sub
rcr
hlt
adc
mov
mov
xor
inc
jo
shl
in
pushf
ss
pop
mov
ss
sub
pop
dec
pop
retf
cmps
fstp
pop
add
scas
popa
popf
mov
mov
cmp
sub
mov
jge
xchg
mov
add
popf
sbb
push
out
adc
popf
or
dec
(bad)
sbb
mov
cmps
test
add
xor
dec
icebp
rol
repz
push
xchg
jnp
daa
fld
xlat
mov
mov
out
ins
out
ss
xchg
xchg
pop
repz
loope
add
sub
test
adc
lods
push
test
mov
xchg
mov
add
nop
or
jae
cmp
(bad)
jle
outs
cwde
pop
lds
shl
or
xor
xchg
pop
dec
pop
pop
inc
leave
and
jns
ja
add
xchg
mov
dec
test
push
(bad)
aaa
lds
add
lahf
cwde
(bad)
aad
mov
call
lahf
iret
dec
mov
xchg
jge
pause
enter
adc
nop
xor
ret
int
lods
movs
out
jae
push
ror
adc
mov
jge
mov
sbb
mov
mov
lods
and
xlat
les
in
jbe
push
pop
pop
adc
and
pop
sub
rcl
loopne
fisub
popa
xchg
sub
mov
xchg
aaa
inc
cmc
cmp
jmp
xor
add
add
and
xor
lahf
lods
and
add
in
jno
mov
jge
pop
add
mov
scas
fisttp
or
in
frstor
mov
sti
arpl
(bad)
lea
(bad)
aaa
int
cmp
test
xchg
pop
mov
iret
loop
xchg
cmp
popf
shl
xchg
add
loopne
(bad)
mov
xor
add
jae
jmp
je
mov
hlt
sahf
xchg
stc
push
cmp
adc
in
jmp
fwait
mov
cmp
cmp
dec
inc
sbb
lahf
pop
loop
pop
aam
loopne
pop
(bad)
fisttp
dec
dec
fst
inc
or
adc
mov
pop
sub
xor
shr
outs
cmp
xchg
jg
push
pop
xor
test
sub
inc
sub
in
mov
push
iret
dec
int
addr16
inc
push
pop
jb
ss
popf
mov
and
fcmovbe
sub
in
jb
in
sub
push
inc
je
data16
retf
aas
dec
sbb
pop
(bad)
stos
imul
sub
mov
je
mov
jp
dec
jo
clc
daa
mov
and
das
pop
movs
pop
das
mov
push
aaa
cmp
xor
pop
mov
mov
dec
inc
pop
test
neg
fidiv
stos
cmc
sbb
sub
dec
jnp
or
fucom
push
cmp
test
jmp
rol
dec
popa
xchg
inc
mov
and
push
into
test
sbb
cmps
add
dec
sbb
cld
aam
imul
fidivr
in
add
adc
cdq
popw
dec
mov
sub
inc
mov
cmp
dec
pusha
and
mov
popf
mul
mov
cwde
mov
popf
push
lods
cmp
cmp
jmp
mov
fxtract
mov
pop
jg
mov
mov
outs
add
clc
mov
or
imul
popa
stc
mov
or
xchg
xlat
push
data16
push
(bad)
outs
push
jg
add
das
pop
int
xchg
mov
mov
aad
sahf
add
xchg
add
push
pop
std
inc
mov
fisubr
sbb
jmp
mov
mov
(bad)
push
push
(bad)
cmp
mov
and
das
dec
or
movs
mov
dec
dec
push
or
xchg
ja
add
je
pop
cli
loop
push
fisubr
xchg
xchg
rcl
push
xlat
hlt
not
rol
into
inc
push
(bad)
in
mov
add
ror
adc
sub
xor
mov
icebp
or
xchg
daa
je
ins
jmp
inc
data16
scas
push
aad
fwait
loope
fst
inc
retf
and
adc
adc
stos
xor
fadd
fsubr
push
mov
xchg
scas
pop
xchg
call
cld
outs
add
lds
pop
enter
inc
cmp
stos
mov
sub
inc
mov
inc
daa
jmp
sbb
scas
mov
push
xor
pop
jmp
(bad)
push
push
xor
push
jl
inc
jg
add
int3
sbb
pop
mov
cmc
gs
push
aaa
icebp
add
mov
pop
mov
xor
rol
adc
stos
push
sub
xor
retf
lahf
(bad)
lods
cmc
jbe
jmp
mov
mov
inc
call
aad
fs
or
dec
popa
jp
out
aas
neg
and
aaa
cmps
dec
jecxz
push
jbe
in
adc
and
cmp
or
mov
repnz
or
outs
sub
call
repz
aam
stos
fdiv
xchg
mov
mov
push
mov
fs
out
scas
push
clc
jb
ins
mov
xchg
jno
pusha
dec
inc
mov
pop
sbb
das
xor
pushf
les
sbb
xor
mov
into
sub
dec
sbb
push
fprem1
and
mov
xchg
pusha
xchg
mov
int
pop
aam
repnz
dec
cdq
into
pop
lock
push
push
dec
push
outs
bound
xchg
ror
sub
pop
aaa
mov
push
stos
dec
icebp
popa
imul
mov
push
icebp
mov
icebp
push
test
mov
ins
or
ror
inc
jns
call
jg
lods
push
sbb
or
push
std
imul
mov
push
or
jmp
imul
loope
fs
icebp
add
cld
popf
mov
(bad)
pop
rcl
int
xlat
cmp
icebp
push
mov
cdq
mov
mov
cwde
js
data16
lods
in
adc
sbb
add
fsub
sub
cmp
cmps
iret
call
xchg
je
imul
aam
xor
popa
push
daa
fs
jnp
cmps
cmc
xchg
pop
mov
shl
or
or
dec
mov
mov
cwde
movs
push
push
aas
cmp
clc
sub
and
popa
pop
sub
icebp
xor
aaa
push
mov
mov
jge
push
or
(bad)
es
aam
push
or
push
jae
(bad)
mov
clc
fist
dec
mov
add
pop
inc
int3
outs
pusha
push
call
sti
push
add
arpl
inc
xchg
clc
fcmovnbe
sbb
add
dec
cmp
iret
push
mov
and
ret
je
sub
inc
cmp
jo
in
lods
(bad)
out
mov
mov
and
mov
mov
rol
je
sbb
jmp
or
pop
ja
xchg
push
test
sahf
mov
add
and
cmp
fdivrp
lahf
mov
fldcw
cmp
(bad)
repz
pop
icebp
push
das
cs
dec
das
sbb
jmp
scas
sub
xlat
mov
in
and
pop
add
clc
aas
in
inc
nop
idiv
(bad)
and
pop
add
enter
cmp
pop
add
mov
cmp
mov
pop
dec
movs
xchg
sahf
test
inc
dec
mov
into
adc
lahf
outs
shl
and
hlt
mov
add
sbb
push
and
push
dec
add
jecxz
hlt
xor
jg
xchg
push
add
test
lods
mul
data16
test
cmps
and
into
inc
push
out
inc
or
lds
nop
outs
or
xchg
mov
xchg
push
adc
pop
sub
mov
inc
mov
leave
sahf
xchg
xor
push
pop
sbb
call
mov
jno
test
out
xchg
jmp
mov
adc
adc
jmp
or
loop
push
or
jecxz
xor
adc
mov
xor
sub
into
and
ret
fidiv
pop
out
lods
mov
add
outs
add
add
aad
jne
retf
(bad)
lea
stc
mov
(bad)
mov
pusha
or
aas
inc
jo
xchg
jmp
fdiv
in
idiv
push
or
outs
add
loopne
in
add
ins
das
repnz
mov
int3
adc
call
sbb
sti
popa
or
fisub
and
jmp
xor
jno
mov
sub
je
dec
je
call
shr
fwait
adc
or
xchg
mov
mov
xchg
xor
inc
push
stos
pop
cmc
jecxz
adc
inc
and
aas
retf
dec
xchg
push
outs
dec
xchg
dec
pop
fs
pop
and
call
shl
in
pop
addr16
pop
out
adc
ror
pop
cmp
mov
rol
outs
fdivrp
jp
mov
jmp
cmp
sbb
mov
mov
das
test
repz
xor
sub
ret
cmps
add
or
int3
std
cdq
mov
inc
bound
add
icebp
stos
in
fdivr
jge
aaa
pop
es
jo
cmp
popf
push
inc
test
sbb
aaa
jns
jmp
mov
add
and
jbe
sub
movs
fcmovnbe
push
push
adc
dec
pop
mov
ds
inc
or
mov
mov
or
jbe
out
inc
adc
cli
clc
pop
mov
scas
or
out
jbe
sub
push
cmc
pop
shl
lea
xchg
lahf
out
jo
fnstenv
rol
lea
adc
loopne
add
pop
xchg
and
clc
test
jp
mov
(bad)
aas
push
loope
mov
aad
push
bound
xchg
adc
add
and
inc
movs
cs
mov
jle
cmps
push
fs
ret
call
jmp
xchg
cmps
pop
sub
cmps
and
cmp
dec
es
lea
test
push
fisubr
or
mov
movs
jbe
lahf
add
in
inc
mov
jbe
mov
push
scas
push
adc
inc
mov
int
cld
sbb
push
lods
xchg
dec
or
aaa
cmp
in
and
dec
jo
mov
shr
(bad)
sbb
push
push
xchg
sub
push
jmp
push
jo
pop
and
pop
add
add
pop
xor
adc
push
cmp
scas
mov
mov
pop
sub
data16
in
and
icebp
mov
dec
push
adc
(bad)
xor
mov
aad
mov
or
cwde
sub
and
pop
in
ins
push
das
xor
mov
xchg
jmp
adc
sub
pop
inc
pushf
jp
sbb
and
out
mov
and
ss
sbb
fldcw
pop
dec
out
sub
rcl
cmp
jmp
xchg
or
sub
popf
push
inc
mov
sbb
mov
xchg
enter
mov
or
or
jge
push
mov
xor
cld
outs
push
ror
push
outs
mov
out
push
ja
add
(bad)
jmp
aas
mov
jbe
or
xlat
imul
jo
das
in
repnz
(bad)
sub
daa
sub
cwde
sbb
or
xor
pop
lea
je
pop
out
call
loopne
lods
and
lock
data16
icebp
out
or
push
sbb
or
pop
or
or
mov
mov
xor
icebp
cmp
mov
xor
pop
call
jne
adc
(bad)
es
call
(bad)
imul
pop
rcl
add
mov
iret
in
(bad)
test
mov
mov
adc
out
jge
es
cmp
or
mov
popa
in
or
mov
clc
cmp
(bad)
leave
cmp
xor
out
daa
mov
pop
(bad)
push
dec
sahf
inc
fidivr
inc
popa
push
push
xlat
inc
jmp
loopne
mov
stc
test
fisub
inc
jle
xchg
dec
xchg
popf
xchg
sub
sub
or
sbb
out
es
add
add
and
sub
jg
int
or
push
fbld
js
fsub
aad
icebp
mov
jge
ret
push
add
(bad)
loop
addr16
into
rcr
ja
add
mov
xchg
lods
adc
sbb
pop
imul
fucom
jb
out
(bad)
cmps
mov
les
arpl
iret
fnsave
aaa
ins
xchg
(bad)
push
sar
pop
in
jle
(bad)
pop
mov
imul
fdivr
fcomp
sahf
out
xchg
mov
scas
imul
jg
(bad)
lahf
sub
adc
mov
cmp
pop
pop
push
mov
clc
call
jbe
test
cmps
and
and
sbb
adc
cmp
je
and
repz
mov
js
lahf
(bad)
sbb
cmp
std
cmps
mov
mov
and
outs
ror
dec
(bad)
pop
(bad)
adc
cmp
pop
push
scas
mov
mov
cmp
bound
(bad)
rcl
jp
loope
jge
std
sub
fisub
mov
jmp
cdq
xchg
or
sti
ja
cmp
scas
push
push
push
ror
mov
retf
das
movs
pop
or
or
xchg
inc
and
xlat
test
and
loopne
gs
popa
jbe
(bad)
mov
cmp
mov
repnz
lahf
leave
push
inc
xor
mov
and
or
pop
mov
iret
lds
cmps
adc
mov
idiv
sub
adc
call
ds
jmp
sbb
mov
addr16
jb
mov
xchg
jae
jns
dec
and
fstp
jmp
loop
mov
in
fmul
jg
(bad)
repnz
xor
jne
(bad)
out
xor
adc
out
push
shl
call
add
test
sub
cmps
jecxz
mov
sub
xor
in
mov
mov
xchg
xchg
test
popf
popf
cs
leave
daa
enter
sbb
xchg
xchg
pop
push
fs
mov
jmp
jp
push
stos
idiv
hlt
ja
mov
xchg
sbb
mov
jmp
jg
mov
mov
sti
or
dec
fmul
enter
mov
add
pop
mov
xchg
mov
mov
pop
mov
pusha
dec
sub
jne
in
cmp
adc
xchg
xor
retf
in
ror
in
mov
mov
stc
mov
imul
test
xchg
mov
xchg
cmp
into
leave
(bad)
and
test
pop
dec
sub
pop
add
rcl
fwait
stc
push
jmp
mov
jo
dec
stos
fidivr
ret
pop
add
jnp
pop
mov
mov
call
or
or
mov
gs
xor
sub
sbb
ret
pop
add
push
adc
fidiv
cmps
out
fidiv
and
sbb
jge
or
push
(bad)
mov
lods
cli
ret
jecxz
ja
add
fdivr
jmp
pop
mov
mov
sbb
mov
xlat
xchg
retf
(bad)
outs
sbb
jb
ret
xchg
xlat
or
cmp
jmp
test
ins
ja
adc
gs
mov
repz
cmc
(bad)
test
(bad)
ins
or
cmp
mov
aad
lods
jns
into
push
jle
xor
stc
jns
cmp
sbb
push
jg
js
ins
add
jecxz
xor
ss
push
lods
pop
push
adc
sbb
(bad)
data16
ror
fldcw
fwait
mov
or
jnp
shr
ins
imul
push
xor
daa
or
mov
les
mov
cmp
jge
movs
mov
stos
add
mov
das
lods
mov
loopne
aas
pop
dec
cmp
jbe
add
loopne
fidiv
xor
ss
cdq
push
sub
cld
and
mov
inc
sub
xor
fisttp
xor
jge
sti
dec
sub
imul
lea
stc
fcom
sbb
add
loope
or
add
dec
cmps
stc
out
xor
call
retf
inc
sbb
push
clc
fs
cmps
jle
das
pop
cmp
in
mov
xlat
pop
inc
add
adc
je
mov
pusha
adc
jnp
and
pop
xchg
sbb
test
mov
jbe
enter
clc
push
lahf
or
dec
dec
mov
popf
gs
dec
cmp
in
test
sub
pop
ret
jmp
stc
cmp
dec
stos
mov
mov
or
fwait
mov
rcl
xchg
ror
push
mov
jnp
cmp
out
adc
add
es
dec
jmp
adc
test
fld
push
mov
cmp
in
mov
(bad)
aam
xchg
out
call
adc
mul
out
(bad)
and
out
aam
int3
fwait
ins
mov
add
ds
out
xchg
repz
add
pop
rcl
stos
repnz
mov
pop
loop
adc
sub
lea
push
jecxz
lods
data16
xor
pop
cli
bound
sbb
mov
inc
jle
adc
jno
mov
sub
bound
jecxz
sbb
jmp
pop
pop
scas
xchg
and
mov
stc
xchg
scas
push
fscale
repz
pop
vpblendvb
fbstp
sub
xor
xor
mov
mov
pop
cdq
repnz
jge
cld
repz
mov
inc
test
push
dec
push
xor
adc
mov
mov
fs
push
movs
int3
int
lock
and
movs
and
cmp
cmp
retf
and
enter
test
mov
mov
mov
nop
pop
cmps
pop
nop
sahf
push
hlt
fadd
sbb
fcmovnu
jno
pusha
and
jae
pusha
and
icebp
dec
inc
jns
rol
dec
push
xor
repz
ins
lea
jl
rcl
lods
and
test
pop
jl
popa
fwait
cld
aad
dec
icebp
mulps
cmps
cmp
adc
xor
pusha
jl
daa
nop
and
push
aas
jecxz
dec
and
inc
lods
mov
das
cmps
inc
pop
push
pop
gs
(bad)
lds
adc
(bad)
mov
in
mov
aaa
out
xor
cmp
adc
push
push
std
mov
sbb
mov
sahf
or
xchg
add
(bad)
xchg
pop
stos
jle
sbb
add
pop
pop
adc
test
pop
repnz
push
aas
aad
lods
mov
and
into
aas
sbb
fwait
in
lahf
cmp
xchg
jbe
sahf
enter
fiadd
mov
loope
cmp
sbb
sub
jl
jnp
or
mov
cmp
iret
mov
sub
ins
fninit
dec
jp
mov
repz
sub
fidivr
push
inc
and
pop
outs
pop
xchg
adc
jns
into
jnp
mov
int3
ja
and
(bad)
retf
add
dec
jne
inc
shl
ror
push
pop
icebp
push
dec
rcr
cmp
scas
xchg
fwait
push
repnz
jmp
retf
stos
bound
int3
pop
inc
aaa
scas
and
sti
sub
xchg
jne
xor
push
fbstp
jl
sahf
loope
push
inc
inc
mov
mov
and
imul
(bad)
cmp
and
stos
add
or
movs
sbb
ds
daa
aas
nop
call
xchg
imul
xor
mul
sti
js
and
push
jecxz
inc
mov
sub
mov
out
push
push
xor
push
push
pop
mov
or
cmp
pop
(bad)
mov
cwde
sahf
xchg
into
and
outs
xchg
adc
xor
adc
push
mov
or
add
dec
ins
xor
jmp
loop
xor
xchg
cmp
mov
repnz
jecxz
cmp
adc
adc
rol
push
mov
cmc
jle
or
outs
mov
mov
cmps
adc
jmp
sub
add
jecxz
sahf
jp
jmp
dec
das
imul
icebp
fisttp
jl
rol
scas
imul
mov
xchg
arpl
call
scas
lds
scas
xchg
jae
or
xchg
mov
loop
sub
popaw
out
dec
test
fsin
lds
daa
ss
add
dec
mov
(bad)
stos
call
in
stos
jne
jbe
imul
test
adc
inc
xchg
es
retf
xor
dec
jmp
stos
int
sub
xor
sbb
cs
lods
ss
in
sbb
call
pushf
mov
sub
cmps
sbb
(bad)
sti
loopne
pop
rcr
push
jb
mov
out
jb
or
sub
pop
mul
ret
mov
and
sti
ficom
inc
mov
out
stc
aam
mov
mov
cmp
add
or
or
test
mov
xor
ins
mov
or
loope
scas
shl
(bad)
popa
dec
or
pop
push
sbb
pop
sub
outs
jne
dec
loop
test
fld
arpl
jl
hlt
popf
adc
ds
cmp
sbb
lods
cmp
ds
adc
repz
push
xchg
push
adc
ja
arpl
(bad)
mov
sub
pop
adc
push
pushf
mov
hlt
inc
js
rcl
sub
mov
jge
fstp
cmps
leave
pop
push
mov
pop
jno
add
and
out
mov
repnz
nop
mov
cdq
aad
lods
mov
or
pop
dec
inc
add
jb
or
inc
aaa
jnp
ja
les
mov
and
in
icebp
push
ins
out
inc
mov
push
dec
mov
push
dec
es
pop
std
add
inc
int3
(bad)
loopne
test
add
ss
sub
add
in
dec
cmp
out
test
jne
stos
mov
mov
or
dec
cmc
pop
pop
pop
aas
push
or
pushf
fild
inc
call
mov
fbld
cvtps2pi
std
or
daa
inc
mov
repz
jno
sbb
sbb
push
cmp
or
adc
jb
sub
imul
and
fsubrp
mov
sbb
in
loopne
in
push
sub
mov
dec
(bad)
lods
jmp
pop
out
cmps
rcr
xchg
sti
mov
jae
jae
add
int3
call
ins
mov
adc
xchg
ror
jns
sar
xchg
sub
adc
push
push
cmp
xchg
mov
push
xor
pop
je
jno
loopne
lods
(bad)
push
cmps
cmps
jle
das
(bad)
fst
call
shr
xlat
shl
loopne
std
mov
sub
cmp
sub
enter
scas
mov
int
push
cmp
cmp
enter
xor
xor
lea
or
jg
stc
(bad)
dec
xor
pop
cs
pop
dec
scas
jl
into
cmp
(bad)
es
data16
or
les
sbb
mov
cmp
loopne
dec
push
(bad)
sub
push
mov
xchg
push
add
(bad)
leave
push
mov
aad
popa
aaa
in
stc
mov
cmp
cmp
mov
cmp
das
test
jnp
dec
out
cli
in
test
mov
mov
push
dec
inc
mov
mov
(bad)
or
mov
pop
cwde
dec
ret
fwait
push
fscale
adc
pop
mov
mov
cwde
nop
movs
in
cmp
(bad)
aas
xor
(bad)
xor
jmp
lods
loopne
push
stos
sar
in
inc
cmc
(bad)
sti
test
aad
test
push
(bad)
xrelease
test
mov
(bad)
jae
xchg
adc
inc
pusha
dec
leave
inc
xchg
push
mov
xchg
in
leave
daa
mov
adc
mov
pop
push
adc
xchg
stos
push
shl
jns
push
das
xor
inc
rol
daa
stos
out
mov
jmp
(bad)
cld
int
stos
pop
popf
call
xchg
jl
loop
out
push
and
lahf
sbb
jl
adc
push
pop
je
outs
or
inc
xlat
mov
out
mov
gs
int3
push
jb
gs
pushf
retf
jbe
pop
inc
popa
xchg
push
xchg
cmp
cmp
lds
sbb
jbe
push
stos
inc
mov
sub
lahf
repnz
fnstsw
call
cmp
leave
seta
sbb
add
cmc
(bad)
rol
test
jb
outs
jb
cmps
lock
jg
mov
jecxz
rol
ss
addr16
gs
mov
lods
int
mov
jmp
gs
pop
inc
or
xchg
inc
push
cmp
outs
xchg
(bad)
leave
mov
and
clc
pop
rol
dec
jae
adc
push
mov
fiadd
enter
fdivrp
add
xchg
add
cmp
cmps
loope
xor
iret
inc
nop
cdq
(bad)
jle
test
cmp
out
mov
iret
clc
mov
jecxz
sbb
adc
xchg
xchg
(bad)
and
sub
pop
push
movs
mov
fs
(bad)
mov
mov
fwait
(bad)
pop
retf
in
arpl
repnz
mov
sub
aam
pop
clc
add
adc
test
xchg
lds
push
mov
mov
mov
(bad)
xor
stos
test
(bad)
xor
mov
cld
push
xlat
(bad)
icebp
sbb
(bad)
movs
imul
ror
jg
push
sbb
movs
push
out
sbb
movs
and
dec
aam
dec
sbb
jp
data16
push
mov
cmps
mov
inc
mov
fs
adc
je
sbb
add
dec
cmp
mov
mov
test
xchg
int3
adc
aam
lods
call
icebp
(bad)
adc
loopne
cmp
jnp
jp
xlat
js
gs
xchg
xor
adc
cmp
jg
call
bnd
(bad)
shl
sub
or
mov
pusha
or
test
push
outs
jb
and
cmc
das
sub
scas
fld
and
daa
outs
adc
jge
adc
cmp
pop
pushf
loop
int
test
mov
mov
sub
sub
dec
in
inc
cwde
movs
mov
cwde
push
sbb
pop
aad
or
mov
xchg
mov
popf
ror
mov
shl
fbstp
lods
fisttp
daa
sahf
jle
repz
sbb
cmp
call
lods
inc
test
and
fstp
outs
in
sti
daa
xor
sub
bound
mov
fs
mov
cld
pop
sub
lahf
sbb
cwde
test
ins
add
hlt
mov
xor
jecxz
gs
(bad)
(bad)
adc
shl
ins
dec
xchg
loop
cmp
adc
push
ret
mov
adc
stos
enter
lock
dec
pop
mov
inc
adc
or
jb
jmp
inc
(bad)
xchg
hlt
cdq
(bad)
pop
clc
into
mov
and
loope
imul
mov
mov
lea
arpl
dec
int3
idiv
fistp
pop
sahf
sub
cmps
xor
xor
out
and
cmc
xor
and
add
xor
adc
mov
lahf
popf
cld
mov
jns
inc
ret
sbb
jb
(bad)
pop
loop
and
fcomp
push
call
movs
xchg
lds
js
cdq
and
sub
cmp
sub
ins
add
jae
(bad)
pop
popf
xchg
sbb
dec
(bad)
aad
adc
mov
scas
jnp
int
stos
in
jmp
push
and
cmp
add
repnz
jmp
das
movaps
icebp
mov
mov
sub
mov
mov
jb
jg
rol
(bad)
(bad)
mov
scas
push
in
jne
into
rcr
jnp
bound
jmp
mov
inc
mov
mov
mov
xchg
(bad)
push
scas
jmp
aas
aad
ror
repnz
sub
adc
push
jmp
call
stc
lods
add
jne
rcl
daa
lea
xor
fisubr
sub
mul
sbb
(bad)
jmp
lods
push
fadd
xor
mov
xchg
enter
ja
or
lods
(bad)
pop
fwait
cdq
pop
les
popf
pop
enter
rcl
xor
jmp
out
inc
jno
push
ffreep
pop
rcl
fist
cmp
bound
ficomp
(bad)
sub
xchg
retf
mov
and
mov
into
enter
or
aas
test
js
sbb
fcom
sbb
adc
cli
sbb
cmps
pusha
pop
mov
lea
push
cmp
aaa
(bad)
mov
push
lds
ror
dec
int
cmc
stos
mov
mov
add
add
mov
pop
xlat
sbb
stc
sahf
in
mov
adc
pop
adc
int3
mov
out
sbb
es
pop
jb
jg
imul
scas
mov
adc
pop
cmp
cmc
icebp
repnz
xchg
ins
add
pavgw
mov
fsub
les
pop
les
cmps
jle
add
dec
add
push
call
pop
jmp
retf
jb
aad
dec
pusha
push
mov
fbstp
mov
mov
loope
xchg
rcr
push
push
scas
push
sub
mov
jne
rol
in
jmp
sbb
push
out
mov
pushf
sub
rcr
jmp
mov
xchg
dec
push
out
cmp
add
icebp
nop
out
loop
jns
pop
mov
sbb
adc
inc
xchg
icebp
mov
sbb
(bad)
fdivr
mov
ret
scas
adc
daa
imul
pop
xchg
movs
outs
mov
sbb
pop
mov
xchg
push
lds
dec
xchg
mov
or
add
es
hlt
jle
fldenv
out
inc
pop
or
lock
inc
sub
or
mov
sub
xor
xchg
cwde
xchg
add
test
push
ret
imul
push
dec
xchg
sti
mov
sub
jmp
add
or
sbb
push
xchg
js
int
cmps
mov
sub
cmc
je
div
aas
add
xor
cld
ret
pushf
or
popf
loope
test
stos
or
bound
test
sbb
push
jb
sbb
xchg
rol
push
cmps
out
enter
push
in
dec
aas
or
repnz
shr
jb
cwde
ret
xchg
(bad)
xchg
test
ror
pop
nop
mov
call
sbb
lock
loopne
dec
sbb
push
test
js
or
int
add
(bad)
jnp
(bad)
(bad)
cmp
cmp
mov
sar
pop
jg
cwde
ror
stos
inc
jl
in
mov
int
jl
pop
aas
je
adc
jae
not
lds
std
jae
cmp
outs
mov
xlat
ins
jmp
div
icebp
sbb
jb
dec
push
daa
int
xlat
xor
lds
push
je
pusha
cmps
outs
adc
cwde
rcl
dec
push
call
data16
test
es
inc
loop
jmp
lds
dec
inc
mov
jmp
dec
xchg
dec
(bad)
xlat
lahf
inc
xchg
loop
iret
bound
dec
sub
mov
ds
mov
mov
and
jnp
aad
xor
cmc
pop
outs
sub
pop
out
sti
sub
hlt
fdivr
cli
lahf
iret
pop
ret
mov
sbb
nop
outs
mov
lahf
out
xchg
lahf
jmp
dec
or
mov
pop
pop
pop
ss
dec
jb
mov
add
sbb
mov
dec
cs
call
pop
ins
hlt
scas
adc
retf
cmp
(bad)
jae
int
inc
out
lds
fwait
ja
shl
out
jno
adc
adc
in
mov
mov
mov
ss
mov
inc
cmp
pop
fsub
test
xlat
or
popf
les
cmp
push
push
pop
iret
test
cmp
loope
aas
mov
mov
popa
arpl
fild
jl
int
xchg
aam
(bad)
push
call
xchg
inc
(bad)
outs
rol
push
arpl
dec
push
fwait
iret
dec
les
mov
adc
stc
push
cs
sti
fwait
add
adc
jmp
adc
or
sti
or
xor
or
and
iret
cdq
test
mov
xor
in
cmp
mov
cmp
dec
loope
arpl
cmp
fimul
sbb
mov
nop
lods
retf
fbstp
ret
int
mov
shl
sub
jecxz
inc
mov
loope
sahf
push
mov
jge
cmp
not
push
fs
mov
and
inc
sbb
mov
test
add
inc
fidivr
jns
cmp
dec
inc
test
gs
jl
fldcw
aad
jl
xor
leave
jno
es
xor
cwde
rol
pop
push
xchg
dec
mov
sbb
leave
dec
loopne
test
inc
cmp
inc
pop
jl
adc
outs
or
adc
jo
pop
rol
mov
dec
outs
xchg
inc
inc
cmp
mov
mov
inc
mov
out
outs
or
test
in
mov
push
popf
fdiv
sti
mov
loope
xor
lods
mov
and
pop
mov
call
(bad)
sbb
lahf
pop
fidivr
mov
fnstcw
enter
stc
mov
and
add
ss
fdiv
xchg
sub
shl
sub
or
adc
and
push
or
cmp
ins
xchg
adc
call
ret
jns
mov
scas
mov
sbb
jno
add
mov
or
mov
fcomp
scas
fimul
jae
jle
out
js
cld
sub
fdivp
mov
inc
(bad)
and
jo
sub
fist
push
ret
xchg
mov
ret
loope
call
or
lods
scas
xlat
(bad)
inc
push
cli
(bad)
cmp
stos
test
aam
cmps
cmp
or
push
or
push
push
jl
in
(bad)
mov
jle
jp
mov
cs
fcmovnb
test
test
mov
adc
push
test
add
lods
mov
enter
rcl
pop
repnz
sbb
pushf
push
adc
push
cmp
mov
xchg
dec
ins
pop
dec
stc
(bad)
(bad)
pop
test
mov
sbb
sar
inc
imul
push
(bad)
pop
sub
xor
mov
fld
jmp
jcxz
cmp
mov
retf
and
iret
test
pop
xlat
or
add
xchg
cli
adc
jmp
mov
jge
outs
mov
cld
cmps
or
push
int3
movs
sbb
retf
popf
or
jnp
push
pop
adc
add
adc
push
js
mov
dec
sub
push
mov
or
test
pop
fcmovnbe
push
or
pop
nop
aad
dec
or
repz
icebp
jl
stos
loope
xchg
dec
inc
data16
cmovne
adc
or
sbb
sub
inc
int3
stc
pop
inc
push
mov
pushf
ficomp
or
or
out
outs
fbld
and
jge
mov
jno
push
mov
jecxz
(bad)
adc
inc
ss
sbb
cwde
push
in
daa
retf
jmp
push
je
sar
fcomp
inc
cmps
dec
repz
shr
pushf
iret
nop
ins
cwde
pop
stos
sbb
sbb
and
mov
fwait
mov
xor
or
popf
in
test
mov
pop
popf
popf
mov
outs
imul
push
outs
fmul
add
sub
xor
pop
xchg
cli
adc
inc
call
jnp
push
mov
mov
sahf
push
ds
je
fsubr
xchg
xchg
in
dec
jg
add
sbb
fst
into
jl
or
scas
stos
xor
xor
dec
xor
push
mov
jl
mov
add
ins
dec
in
mov
outs
lods
adc
dec
lea
addr16
xchg
cmp
sub
inc
ins
sbb
xchg
push
adc
call
jmp
cmp
mov
inc
pop
add
jae
xchg
or
pop
ficomp
cwde
push
add
out
hlt
lds
(bad)
or
xor
adc
sbb
in
add
call
ret
mov
xchg
loope
loopne
call
pop
mov
test
fwait
pushf
imul
mov
inc
xchg
mov
bound
ss
fcomp
movs
out
fwait
adc
fs
shl
movs
je
add
movs
and
xchg
ss
je
leave
jl
inc
jl
mov
popf
xor
into
movs
movs
xchg
rol
adc
out
jp
pop
mov
mov
jnp
sbb
test
sbb
jmp
popa
dec
push
test
daa
or
ret
lods
inc
sub
test
pop
out
out
xor
in
(bad)
or
or
sbb
call
push
mov
loopne
xor
jl
or
or
out
scas
xlat
jne
pop
iret
aas
jl
fadd
stos
jmp
jb
jne
jae
dec
mov
jg
(bad)
gs
inc
cmp
daa
int
lods
push
push
sub
fsubr
push
jge
dec
cmp
gs
out
jno
es
pusha
hlt
mov
dec
xchg
xchg
push
sub
xor
pushf
jns
enter
or
xchg
scas
and
pushf
(bad)
mov
sbb
mov
sbb
ss
jg
cmps
fs
xor
adc
scas
sub
pushw
fs
inc
imul
retf
dec
mov
xor
lea
cdq
mov
cwde
mov
inc
daa
mov
loop
sub
sbb
ret
cmps
dec
mov
js
jg
mov
xchg
pop
xchg
pop
out
pop
mov
cmp
adc
xor
sub
push
int
mov
cli
(bad)
xchg
push
inc
loope
scas
push
jno
arpl
mov
inc
xor
push
ins
(bad)
sti
pop
sub
out
jge
inc
xor
gs
pop
cmp
rol
dec
mov
outs
or
or
mov
lock
mov
outs
lock
cmp
sub
aam
dec
call
or
mov
jge
add
add
xchg
inc
mov
xor
xor
out
mov
dec
sbb
in
in
lahf
fsubr
inc
js
xchg
mov
or
cli
adc
shr
jl
mov
mov
push
fcom
push
(bad)
inc
mov
xchg
aad
xchg
test
sbb
das
in
adc
or
cmps
outs
int3
ret
mov
adc
jb
nop
test
mov
mov
daa
jmp
push
push
fneni(8087
adc
lods
pop
mov
into
sbb
jmp
or
stos
mov
clc
call
pop
inc
leave
sub
adc
aad
inc
clc
cmp
mov
xor
leave
fld
mov
in
push
adc
ins
adc
sub
mov
mov
and
and
and
(bad)
and
push
xor
mov
mov
imul
jmp
mov
push
iret
mov
jne
dec
mov
jg
inc
mov
push
in
fidiv
mov
push
nop
add
mov
lahf
jae
aad
lods
imul
mov
imul
mov
inc
cmc
jno
mov
xchg
sub
scas
enter
cmc
shl
pop
movs
sbb
push
movs
adc
adc
and
sub
add
rcr
jmp
aaa
mov
mov
(bad)
popa
push
xchg
pop
mov
cmp
mov
cmps
sub
jo
mov
loop
xchg
iret
sti
je
fld
scas
push
xor
add
mov
ret
xchg
popa
push
or
retf
inc
mov
hlt
and
jmp
leave
jmp
nop
in
mov
test
cmp
mov
arpl
imul
pop
sbb
ja
(bad)
sbb
fild
inc
loope
dec
and
addr16
mov
fnstsw
sahf
push
mov
sbb
jo
mov
jb
mov
jecxz
dec
repz
push
ficom
mov
repnz
nop
dec
arpl
aad
aam
scas
scas
ret
xchg
sbb
push
push
fistp
fisub
mov
add
call
mov
ds
pop
lock
mov
sub
loopne
push
push
mov
or
cmp
mov
in
adc
push
sbb
shr
jno
jo
cs
mov
mov
pop
std
and
(bad)
inc
sbb
dec
xor
mov
xor
jg
fs
scas
aad
sub
aad
out
xchg
into
sub
call
int
aam
and
push
adc
fld
jg
shl
(bad)
loope
push
fisttp
loopne
xor
dec
mov
icebp
adc
dec
movs
push
cmps
pop
enter
test
imul
inc
sar
pop
fldenv
push
pop
and
push
jno
loop
xor
push
out
xor
ret
sub
inc
xor
int3
or
movs
mov
cli
mov
fdivr
dec
sbb
jbe
add
mov
sbb
mov
sbb
(bad)
jle
cmp
sbb
mov
ret
sbb
fimul
clc
xchg
in
jb
jmp
fild
in
inc
mov
loopne
imul
lods
out
into
adc
movs
(bad)
push
and
imul
add
mov
stc
sbb
leave
fdivp
pop
or
adc
cmp
push
and
adc
pusha
icebp
jg
xor
bound
stc
popf
ficom
mov
push
jb
jbe
cwde
pushf
les
ja
icebp
in
inc
jg
pop
outs
(bad)
cmp
push
stc
cwde
or
mov
hlt
dec
mov
add
lods
pop
pop
pop
pop
jno
jns
cwde
push
xchg
ins
rol
out
clc
shl
cmp
sbb
jge
sub
and
mov
fiadd
imul
jbe
pop
test
cmp
cmp
push
iret
jno
add
test
stos
pop
les
loope
out
mov
pop
xor
dec
pop
jle
(bad)
dec
and
push
inc
les
call
xchg
mov
rol
icebp
mov
(bad)
adc
xchg
or
jp
cmp
int3
fs
cmc
test
outs
cli
cdq
mov
jge
mov
mov
sub
cmps
jmp
ret
jnp
arpl
cld
imul
pop
and
dec
mov
mov
mov
cmp
push
pop
xchg
mov
fstp
adc
out
retf
pop
xchg
in
aas
jne
xor
jne
sbb
lock
jbe
xchg
div
cmp
lds
cmp
cld
popf
xlat
xchg
mov
add
mov
push
ds
gs
out
loope
popf
add
xor
lds
mov
adc
test
repz
mov
rol
popf
pop
push
sub
mov
adc
push
xchg
mov
leave
sub
imul
test
push
and
lahf
sbb
pop
mov
repz
push
sub
pop
into
std
xchg
xchg
(bad)
mov
push
fidiv
push
mov
push
fwait
jl
inc
ss
xchg
adc
pop
ror
repz
pop
mov
rcr
xor
pop
mov
mov
push
fs
shl
hlt
(bad)
aaa
ds
cwde
add
or
push
loop
sub
sub
fdiv
dec
sbb
xor
jp
test
inc
(bad)
hlt
push
adc
push
or
int3
ret
push
mov
ja
jb
inc
push
pop
test
shl
xor
jmp
and
push
cmp
mov
sbb
push
in
pop
jle
shl
cmp
pop
shr
jns
mov
jge
xor
or
xchg
and
cli
xchg
mov
jle
pop
mov
fst
test
add
cmc
jmp
loope
mov
rcr
fnstcw
fdivp
mov
adc
iret
test
sub
je
inc
fsub
(bad)
mov
scas
push
pushf
sbb
outs
aaa
xor
cmp
xchg
xor
call
push
inc
pop
cmp
pushw
mov
in
sbb
push
and
jle
adc
popf
cmp
(bad)
enter
scas
mov
xchg
jo
cwde
mov
xor
push
mov
mov
push
addr16
push
jmp
add
cmp
jp
add
call
sbb
daa
xchg
(bad)
clc
mov
jb
sub
fcmovnu
add
sub
arpl
lea
dec
lahf
push
fiadd
push
adc
add
in
push
or
pop
ins
add
call
loope
(bad)
popa
cmp
out
cld
jp
add
sbb
pop
sbb
mov
push
pop
arpl
pop
in
mov
packsswb
outs
xchg
mov
adc
pushf
in
mov
in
jno
jne
mov
js
test
repnz
inc
sub
aam
rcr
mov
add
sbb
cmc
daa
mov
sub
pop
and
(bad)
pop
arpl
pop
iret
mov
imul
fprem1
fpatan
imul
jle
movs
push
xchg
push
leave
dec
pushf
and
cdq
aam
lds
fild
mov
ds
aaa
mov
loope
sub
jge
mov
fsub
jge
ret
and
pop
pop
push
fs
pusha
hlt
add
ja
push
dec
sub
rcl
cmps
xchg
inc
ss
mov
xchg
cmp
and
pop
push
xchg
cmps
into
or
mov
push
add
repz
nop
fs
dec
jmp
daa
jmp
mov
arpl
xlat
daa
adc
dec
clc
mov
int3
xlat
pop
or
popa
mov
mov
data16
dec
into
lahf
mov
push
ret
mov
aad
cmps
daa
mov
(bad)
es
dec
cmps
or
sbb
ins
and
add
mov
adc
int3
push
push
and
ins
and
stc
mov
repz
enter
pusha
mov
xchg
mov
mov
ret
js
jg
pusha
cld
fdivr
mov
ins
loop
leave
push
dec
pop
repnz
aad
aam
push
mov
inc
out
jnp
call
inc
sub
inc
or
mov
jp
loope
sub
adc
mov
test
sub
das
xor
and
mov
test
sub
div
test
test
dec
mov
(bad)
fadd
cwde
pop
inc
scas
cmps
imul
xchg
test
and
lock
iret
cdq
aaa
cmps
or
push
mov
inc
fist
jb
daa
mov
xlat
movs
mov
stos
addr16
push
es
xlat
mov
or
iret
mov
cmc
add
imul
jmp
jae
repz
cmp
mov
test
add
or
push
mov
adc
jo
jno
lods
mov
rcr
fisub
test
ins
cmp
imul
pusha
jo
push
shl
jmp
pop
mov
sub
inc
cdq
jne
sbb
xor
adc
hlt
call
pop
mul
adc
pop
leave
mov
mov
retf
fiadd
(bad)
les
mov
popf
push
push
stos
dec
lods
xor
movs
(bad)
jns
xchg
jp
sub
int3
and
mov
sbb
mov
sti
cs
sbb
dec
mov
leave
pusha
mov
push
jo
adc
lods
js
pop
loope
data16
test
ret
pop
push
push
aad
xchg
and
je
mov
call
add
test
mov
xlat
xchg
aaa
loopne
cmp
mov
test
call
loopne
int
dec
shl
cmc
lahf
or
lock
gs
sub
call
in
jnp
jp
(bad)
xor
mov
sar
add
cmp
call
adc
mov
outs
xchg
movs
inc
jg
inc
sti
jle
jp
or
dec
fprem
inc
ret
adc
add
add
icebp
pushf
adc
mov
jnp
mov
mov
pusha
jg
dec
sar
cmps
cmp
add
dec
in
std
add
iret
pop
sbb
sbb
bound
add
or
dec
test
jmp
sbb
cmp
or
push
fnstsw
int
dec
or
pop
movs
push
mov
mov
inc
inc
fdiv
or
xor
mov
inc
mov
adc
enter
or
mov
(bad)
xor
pop
sub
ss
jmp
adc
js
out
(bad)
pop
adc
ins
pop
repnz
mov
and
cmp
jmp
mov
mov
imul
xor
hlt
and
daa
sbb
push
mov
stos
push
cli
scas
and
jb
push
aaa
inc
mov
adc
shl
fwait
pop
pop
sbb
cmc
mov
jae
(bad)
push
dec
or
push
mov
retf
fwait
jmp
adc
xchg
dec
pop
add
sahf
std
repz
fcom
aam
mov
pop
and
bound
cmps
loopne
dec
xchg
inc
or
das
add
pop
xchg
dec
aam
jnp
popf
das
dec
ins
pop
std
or
jle
or
loopne
call
dec
cmp
cmps
mov
and
call
popf
dec
enter
(bad)
push
xor
or
lods
sbb
jg
fs
je
inc
out
push
das
ins
pop
stos
aas
mov
sub
dec
arpl
add
cmp
sbb
dec
jmp
pop
pop
adc
add
and
iret
aaa
adc
cmp
sub
nop
shl
fs
xchg
xchg
add
int3
ss
push
jl
(bad)
shl
sbb
popa
ins
push
sub
mov
mov
jo
data16
or
enter
or
or
jae
(bad)
mov
adc
mov
mov
bnd
les
sar
test
pop
and
bound
clc
sbb
pop
dec
and
stos
jecxz
dec
and
test
sbb
or
xlat
inc
dec
mov
push
cmp
call
(bad)
push
mov
test
stc
outs
lods
sub
iret
push
aad
idiv
lea
xor
sub
dec
mov
xchg
cmps
adc
and
sbb
xchg
xor
sub
dec
test
fstp
fild
nop
mov
jle
stos
mov
ret
lods
cmps
mul
push
(bad)
cs
lahf
aaa
nop
ror
jmp
or
and
enter
lock
arpl
jp
scas
(bad)
xlat
push
shr
and
or
or
retf
cld
cli
scas
lods
xchg
cmp
dec
in
iret
movs
push
sahf
jbe
movs
cmp
push
dec
sub
lods
int
inc
push
ds
or
mov
mov
mov
test
dec
add
add
pop
mov
jno
or
sysexit
popf
lock
sti
pop
movs
xchg
cmp
fs
xchg
push
and
lock
cdq
or
push
call
leave
outs
cmp
inc
xchg
inc
xor
mov
dec
cmp
mov
(bad)
movs
out
xchg
sbb
mov
inc
inc
adc
ja
mov
and
push
adc
shl
jge
push
rcl
pop
push
shr
not
stos
rcr
xchg
mov
cmps
sti
aas
pop
daa
push
dec
sub
fst
push
push
stc
(bad)
adc
(bad)
mov
test
mul
lods
sub
cwde
popf
mov
in
lahf
xchg
cmp
pop
jle
jl
iret
in
icebp
out
and
daa
sti
sub
dec
(bad)
(bad)
push
les
dec
call
push
add
out
add
push
aas
rcl
mov
aad
stos
push
in
or
enter
dec
ret
jg
outs
out
movs
fnstenv
sbb
xchg
ss
(bad)
js
test
ret
cmp
int3
or
xor
mov
dec
sub
call
xchg
mov
cmp
and
cmp
shl
neg
mov
xor
mov
mov
out
repz
neg
sbb
loopne
daa
add
mov
pop
push
mov
mov
xchg
ret
in
or
aaa
dec
lea
les
cld
ja
or
sahf
mov
inc
(bad)
es
pop
out
mov
stc
std
gs
or
test
sub
cmp
adc
out
and
test
les
lea
sub
clc
dec
shl
jae
stc
out
mov
sub
add
jo
inc
dec
popa
push
xchg
retf
cs
jne
pop
hlt
xor
cs
jecxz
sbb
std
imul
sub
shl
cmp
push
or
imul
out
ss
add
dec
inc
pop
movs
xchg
(bad)
aas
push
push
popf
rcr
js
cli
fstp
(bad)
sbb
add
push
leave
dec
or
call
addps
sbb
lea
adc
adc
jg
cmp
xchg
dec
retf
mov
loop
inc
mov
enter
cli
popf
adc
pop
jp
daa
out
ret
mov
xchg
push
jne
popf
dec
sti
push
pop
cmp
sbb
(bad)
idiv
test
rcl
xchg
mov
pop
mov
adc
js
stc
mov
cmp
jmp
ret
mov
push
in
stc
sti
mov
in
popf
popf
test
in
sbb
and
and
sub
add
xchg
repz
into
dec
cli
test
mov
jp
push
in
sar
(bad)
mov
sub
out
loope
fimul
test
mov
loopne
repnz
ret
int3
inc
pop
sub
mov
xchg
cmc
xchg
push
(bad)
xchg
mov
inc
or
enter
scas
adc
or
sub
add
xchg
idiv
dec
icebp
fdiv
push
in
in
test
or
xchg
in
xchg
loope
or
sbb
mov
push
mov
adc
mov
cmp
xchg
je
ror
retf
pusha
scas
lods
pop
jo
or
mov
xor
sbb
movs
mov
stos
movlps
retf
cmp
mov
xchg
jnp
push
and
dec
push
loope
mov
into
in
dec
aaa
pop
sti
inc
push
fsub
mov
jmp
adc
add
repnz
lock
or
sub
adc
mov
outs
clc
xor
xor
mov
in
xor
mov
mov
wrmsr
inc
adc
ja
ds
mov
stc
push
retf
push
mov
pop
mov
enter
xchg
sbb
out
int3
mov
adc
xor
sub
ror
test
popa
push
idiv
ds
dec
dec
jp
out
jb
jge
dec
pop
jb
sub
out
lods
retf
dec
pop
scas
fnstsw
movs
repnz
neg
and
in
in
sub
sbb
jns
push
jne
lods
int3
mov
out
addr16
jns
mov
fs
test
pop
jecxz
jnp
fdivr
fwait
into
aad
and
jmp
jne
popa
sub
nop
fidiv
fldcw
leave
in
push
out
and
ss
retf
jo
not
aas
daa
dec
pop
clc
cmp
imul
in
retf
cmp
rcl
ror
sub
fidiv
or
mov
add
addr16
and
or
sbb
fdivr
(bad)
int
pop
out
fcmovu
xchg
scas
inc
and
pop
adc
rol
mov
movs
popa
jge
dec
mov
add
pop
inc
jge
sbb
aaa
xchg
push
mov
outs
or
loop
ret
aas
out
cmp
jno
inc
rcr
pusha
aad
dec
add
sahf
add
adc
mov
cli
mov
mov
loopne
push
inc
push
mov
imul
xchg
outs
xor
push
mov
ror
xor
ss
mov
dec
dec
cmps
int
mov
(bad)
jmp
adc
addr16
sub
fiadd
push
imul
fldenv
stos
mov
ror
dec
ret
je
jbe
mov
(bad)
and
mov
mov
or
inc
cld
aaa
xchg
stos
sub
dec
mov
jne
xor
inc
mov
fimul
mov
(bad)
mov
lods
sar
fs
add
push
hlt
xchg
mov
fst
hlt
ja
jmp
mov
xor
mov
push
pop
jecxz
add
daa
std
xor
dec
icebp
jl
(bad)
mov
std
icebp
mov
(bad)
cmp
pop
sbb
push
mov
loop
adc
inc
xchg
pop
jge
and
hlt
pop
jmp
cmps
hlt
add
cmp
pop
push
add
cld
gs
jnp
scas
arpl
retf
(bad)
fwait
xor
jo
neg
and
sahf
mov
or
jb
bound
mov
loop
mov
pushf
mov
xchg
mov
cwde
cmp
aad
push
sbb
mov
shl
aas
fwait
xor
or
cmp
in
cld
lods
xor
loop
ret
shl
jle
mov
fcomp
adc
rcl
inc
test
sub
fwait
jnp
pusha
icebp
loop
jns
xchg
shl
jnp
or
repnz
aad
hlt
enter
jp
fisub
mov
leave
ins
lea
xor
adc
xchg
movs
pop
sbb
inc
hlt
div
or
sub
and
into
push
ds
sahf
pop
push
jo
pop
lea
sar
dec
sub
cmp
test
icebp
add
fcomp
(bad)
stc
in
jmp
cmc
mov
inc
sbb
test
fcmovbe
push
sub
sbb
jmp
mov
sar
ja
mov
dec
mov
sahf
loopne
jo
rcl
test
(bad)
out
imul
mov
sbb
mov
fs
xchg
in
jno
rcr
pop
addr16
mov
aaa
icebp
pop
imul
repnz
dec
stc
cmp
mov
lea
cmc
fmul
jnp
sbb
lahf
jbe
or
jbe
pop
jns
sub
icebp
sar
loope
inc
sub
out
stos
dec
or
xchg
cmp
push
jae
mov
cmp
cmp
mov
jg
dec
fnstenv
dec
test
xchg
jmp
xchg
jp
and
jl
lods
xor
stos
aas
test
cld
cs
outs
pop
or
push
mov
sbb
enter
jbe
jl
fbld
scas
pop
mov
cmp
and
inc
sbb
imul
mov
push
loope
shl
and
xchg
push
data16
adc
retf
mov
lods
mov
int
movs
xor
sub
sub
pop
mov
(bad)
cmp
jo
or
jb
call
xor
xor
iret
clc
das
fcmovnbe
iret
popa
(bad)
mov
adc
add
cmc
push
add
and
xchg
ret
push
fistp
iret
shl
xor
les
mov
pusha
cli
test
adc
xor
in
or
es
pop
das
bound
cs
(bad)
cmc
aaa
call
arpl
and
jmp
cld
ret
sub
cdq
pushf
ins
or
mov
test
jne
dec
cmp
cli
push
gs
jle
aad
mov
cmp
out
imul
lods
mov
pusha
sub
or
sub
retf
push
fs
test
inc
xchg
jb
mov
data16
test
jecxz
cs
cmp
jnp
add
ds
sbb
jg
(bad)
fnstsw
mov
xor
es
xchg
icebp
repnz
jp
push
dec
dec
jo
shl
mov
into
push
retf
(bad)
xchg
nop
and
and
jbe
xchg
fisubr
mov
sub
aaa
xor
sub
dec
inc
lds
pop
mov
adc
aad
ins
repnz
jmp
ins
fcmovu
mov
mov
xor
push
add
aam
out
addr16
jns
shl
sbb
lods
sub
adc
inc
data16
add
pop
adc
idiv
bound
inc
jns
in
lods
(bad)
aam
jne
into
ds
stc
mov
push
dec
jbe
xor
stos
mov
push
cmp
jg
xchg
pop
mov
mov
int3
dec
pop
inc
push
sahf
les
scas
shl
(bad)
and
sub
push
test
sub
ds
movs
push
iret
js
and
and
hlt
sbb
cmp
(bad)
mov
rol
ror
je
or
xchg
js
out
sub
mov
in
outs
jns
cmp
call
in
lahf
and
in
push
sbb
xor
icebp
cmp
jmp
call
mov
repz
sbb
jne
xchg
addr16
or
mov
sub
rcl
jnp
sub
popf
retf
mov
fwait
push
and
push
push
cmp
fs
mov
dec
push
xchg
dec
xor
jns
aas
dec
aam
add
jecxz
push
std
cli
mov
mov
stos
ret
rcr
xchg
pop
pop
imul
cmc
ret
cmps
mov
cdq
iret
mov
mov
dec
aad
mov
jle
sbb
xchg
test
inc
and
ja
jge
push
jb
xor
jl
sahf
rcr
xchg
dec
jae
adc
std
cwde
push
dec
xchg
movs
adc
pop
pusha
imul
sub
push
push
add
lods
stos
cli
hlt
call
inc
rol
mov
pop
sub
push
mov
push
mov
sub
enter
sbb
mov
or
xor
push
mov
cdq
cli
call
cmps
xchg
mov
mul
mov
adc
adc
pop
nop
push
xor
mov
mov
sti
and
mov
add
call
shl
mov
cmps
pop
sub
test
jp
fdivr
xchg
mov
mov
shr
jge
shl
shl
in
adc
push
xor
mov
and
sar
std
fidivr
dec
(bad)
cmp
mov
xchg
movs
(bad)
jne
push
fistp
and
xor
scas
addr16
(bad)
pop
ror
out
in
mov
loop
ss
xchg
sub
ja
loope
or
test
cmp
test
call
sti
jo
xchg
xchg
ss
(bad)
or
fwait
pop
push
scas
mov
scas
movs
pop
xchg
add
pop
dec
es
hlt
dec
(bad)
mov
aaa
and
out
test
jp
dec
(bad)
sti
les
and
jecxz
and
xchg
pop
gs
(bad)
fwait
(bad)
jmp
int
retf
mov
adc
xchg
cmp
mov
mov
xchg
push
loop
push
bound
dec
xor
std
popf
dec
and
loop
aas
xor
mov
lods
arpl
imul
imul
lods
dec
in
stos
jb
ds
popa
(bad)
mov
xchg
imul
jae
(bad)
imul
fmul
scas
and
ret
popf
call
shl
mov
adc
int3
sub
inc
outs
push
add
push
cmps
clc
pusha
gs
fwait
inc
addr16
es
add
inc
je
cmp
mov
movs
in
add
popf
stc
repz
fwait
repnz
push
clc
cli
xor
popa
out
out
mov
(bad)
stos
imul
mov
addr16
and
sub
stc
cmps
xchg
mov
and
pop
or
push
in
jmp
sub
push
mov
xor
repnz
sahf
sub
sbb
and
sbb
sub
mov
inc
dec
ja
mov
fsub
push
dec
pusha
int3
das
and
jmp
(bad)
outs
push
fisttp
ds
cmp
push
cmp
push
mov
(bad)
jbe
hlt
adc
jbe
pmaxub
cdq
imul
add
rcr
mov
ret
mov
push
push
pop
and
int
mov
xlat
and
gs
jmp
adc
jp
push
mov
icebp
xchg
mov
sahf
popa
mov
add
test
xchg
fs
add
dec
ror
mov
push
and
jl
jg
cmps
repz
addr16
cmp
and
mov
call
adc
pop
into
mov
out
pusha
or
xchg
daa
dec
mov
rol
cld
mov
arpl
stos
xchg
sub
add
mov
push
and
and
add
mov
cdq
and
arpl
popa
xor
mov
xor
mov
and
aaa
pop
push
(bad)
dec
jl
cmp
sbb
data16
adc
cdq
fldenv
push
inc
add
adc
imul
push
or
dec
xchg
sar
pop
jg
cmps
mov
scas
push
ror
fwait
adc
cld
adc
arpl
sbb
xor
outs
jge
pusha
ficom
ror
into
mov
add
pop
cld
pop
cmp
movs
sbb
fld
mov
sbb
push
jg
xchg
gs
pop
xchg
das
retf
push
sbb
(bad)
loop
mov
mov
pop
mov
sti
fs
adc
pop
dec
jno
data16
add
(bad)
js
mov
push
sbb
jmp
fcmovne
xor
cmp
mov
movs
inc
nop
fwait
aas
ds
js
rol
scas
jb
mov
and
push
out
or
xor
jmp
leave
lock
sbb
sub
cdq
mov
push
rol
sbb
jl
test
jl
jmp
div
adc
repz
xchg
pushf
xchg
mov
cli
add
cmps
mov
pop
ss
out
or
ins
(bad)
mov
pop
xchg
pop
inc
fcmovbe
inc
(bad)
lds
sbb
outs
das
mov
xor
cmp
mov
cmc
sar
mov
dec
dec
xchg
or
call
adc
mov
mov
pop
xor
sahf
pop
mov
add
not
add
pop
aas
xchg
mov
mov
xor
jb
scas
xchg
jno
mov
dec
sbb
pop
das
test
adc
aad
push
cmp
adc
push
jb
jg
arpl
lahf
ja
fdiv
inc
jne
adc
inc
outs
and
scas
dec
xlat
xor
call
ins
sbb
sbb
lods
imul
retf
lods
(bad)
imul
push
add
pop
jecxz
adc
jmp
(bad)
pop
pop
jmp
add
xor
cwde
mov
imul
cmp
sahf
imul
test
pop
add
scas
hlt
jb
inc
scas
in
or
addr16
xor
sub
mov
sbb
fimul
popf
adc
add
in
lahf
data16
icebp
fiadd
inc
or
push
mov
dec
and
fld
(bad)
lds
bound
mov
cwde
push
xchg
sbb
sti
out
lock
mov
xlat
pop
or
dec
jbe
pop
aaa
imul
mov
mov
mov
test
jno
cmps
aad
js
std
js
jnp
pushf
ror
and
push
jae
xchg
push
push
cld
imul
(bad)
enter
div
neg
scas
neg
pop
jmp
xor
fst
jl
hlt
clc
daa
xchg
jno
retf
adc
inc
jmp
cmp
mov
enter
imul
xchg
lea
xor
dec
adc
add
sahf
cmp
es
daa
scas
pop
movs
ret
push
stos
fwait
into
outs
retf
mov
and
ja
loopne
ja
xor
arpl
jo
sbb
jnp
cmp
push
jnp
(bad)
dec
fwait
sub
int
and
jns
cdq
xor
mov
pop
das
stos
loopne
dec
fisttp
inc
mov
adc
inc
(bad)
mov
pop
pop
ret
arpl
out
imul
cld
jmp
mov
aad
push
add
push
movs
xor
pop
into
retf
cli
(bad)
(bad)
jb
in
in
scas
push
jge
add
push
mov
mov
adc
or
pop
out
jno
mov
sub
jmp
sub
cmp
pop
lahf
in
out
and
push
imul
pop
jns
sub
int
and
sub
push
and
aaa
fs
fnstsw
cmp
rol
add
push
xor
mov
dec
dec
adc
mov
jl
fist
ficomp
or
inc
scas
mov
mov
(bad)
addr16
shr
jne
xchg
xchg
mov
jne
ins
pop
cmp
fcmovne
xchg
in
and
out
sub
cmps
xor
and
(bad)
xor
sub
pop
lock
push
ret
and
cmp
pop
push
sub
cmc
xchg
stos
or
add
mov
mov
fadd
mov
dec
jecxz
add
fcom
addr16
rcr
imul
add
nop
jno
mov
test
jmp
gs
mov
mov
xor
mov
mov
pusha
xchg
in
adc
inc
inc
(bad)
lock
push
(bad)
or
mov
cmp
push
out
xlat
jge
ja
dec
jns
or
or
sub
aas
ins
test
pop
mov
or
sbb
or
loop
sbb
sbb
stos
fcomp
xor
sbb
mov
into
loopne
mov
jp
(bad)
xor
bound
pushf
movs
outs
test
xor
(bad)
int
ja
add
and
call
(bad)
mov
and
dec
cld
mov
nop
push
mov
stc
push
jmp
and
outs
cs
movs
fcmovb
mov
aad
ins
lahf
std
sbb
cs
jnp
sbb
cmc
adc
mov
repnz
outs
or
cwde
jmp
out
jae
shl
or
xchg
push
sub
retf
call
pusha
fisubr
sub
cmp
push
inc
xchg
(bad)
jecxz
mov
cmp
or
fiadd
cmp
inc
cmp
stos
fwait
stos
and
call
dec
mov
js
cld
test
add
xor
mov
aam
or
(bad)
jae
inc
loop
jae
in
jecxz
cmp
mov
mov
fmul
mov
push
out
sub
mov
int
fsubr
retf
popa
xor
cmps
push
push
adc
mov
lods
mov
pushw
sbb
sub
and
loop
(bad)
jg
jns
loopne
(bad)
dec
jae
lds
mov
cli
es
dec
or
dec
xchg
adc
xchg
jmp
enter
mov
push
fidivr
jle
mov
mov
cli
push
jo
xlat
push
dec
or
ficom
and
imul
pop
sbb
sti
pop
clc
stc
int
ss
mov
sbb
out
cmp
or
clc
jecxz
inc
into
pop
pushf
sahf
mov
and
push
cdq
xchg
jae
mov
sbb
retf
mov
cdq
adc
(bad)
xchg
mov
stos
test
rcr
pop
in
mov
lds
jnp
je
and
fisubr
push
fisubr
inc
cmovne
outs
add
in
pop
sbb
ss
movs
sbb
std
xor
ret
mov
jp
pop
not
sbb
jg
add
int3
cmp
xchg
adc
repz
inc
mov
jmp
cmps
dec
xchg
xchg
pop
stc
outs
xor
push
xlat
shr
add
cmp
push
dec
enter
repnz
sti
shl
jle
data16
clc
clc
daa
scas
outs
out
mov
push
xor
(bad)
(bad)
jmp
cmp
cmp
es
mov
pop
inc
xchg
mov
jg
sar
and
mov
sub
adc
sbb
mov
fsub
xor
rcr
add
xchg
add
daa
sub
(bad)
arpl
cwde
mov
cmps
cmps
dec
out
arpl
add
inc
ja
inc
sbb
dec
int3
jge
push
cmp
pop
and
repnz
pop
mov
aam
push
xchg
cs
test
imul
or
cli
cmps
add
cli
or
mov
jns
vhaddpd
fisttp
lods
jmp
mov
mov
inc
jl
and
mov
in
or
(bad)
dec
loope
into
imul
out
jl
mov
cwde
cmp
aad
popf
ficomp
out
cs
add
adc
(bad)
out
and
int
aas
lods
push
cli
mov
sbb
pop
lea
lods
xor
or
lock
ret
jmp
pop
lahf
jbe
xlat
and
sbb
mov
call
add
inc
or
and
idiv
popa
cld
lds
cwde
jb
leave
pop
push
into
test
pusha
adc
jae
cli
adc
movs
popa
(bad)
adc
dec
fwait
dec
repz
inc
in
out
cdq
mov
fsub
fdiv
mov
xchg
repnz
and
stc
add
sub
mov
dec
add
stos
mov
push
imul
data16
int
jl
push
fmul
cli
mov
inc
sub
mov
stos
clc
jle
jp
xor
inc
lock
aas
mov
int3
lods
out
mov
jnp
cmp
xchg
dec
adc
fild
(bad)
call
(bad)
jbe
or
stos
inc
ins
into
stos
add
pop
out
loop
cld
mov
out
inc
lds
and
(bad)
ds
cmp
jns
sub
ret
dec
sbb
mov
inc
xchg
push
in
mov
add
sub
add
imul
pop
add
push
icebp
outs
mov
push
pop
jle
ror
shr
mov
push
sbb
pop
cmp
add
dec
and
pop
push
movs
out
retf
gs
call
or
or
mov
xor
xchg
or
aas
imul
loope
retf
inc
adc
mov
jo
mov
lea
mov
dec
in
aaa
fcom
jg
(bad)
jo
lea
test
add
xchg
pop
adc
movs
inc
sub
shl
xchg
out
cmps
push
jg
mov
mov
(bad)
cmp
adc
jg
sbb
xor
mov
dec
std
fldcw
xor
clc
xchg
or
adc
pop
sub
push
addr16
jae
add
mov
add
cmp
call
adc
jmp
mov
test
pop
fld
mov
cmp
(bad)
pop
iret
add
xchg
ins
sbb
js
add
shl
sbb
add
jo
ds
xchg
retf
xor
jno
mov
inc
mov
adc
je
mov
scas
retf
inc
pop
lods
jl
shl
ins
push
fsubr
(bad)
dec
pop
sbb
outs
repz
xchg
je
mov
add
mov
pusha
xor
add
jnp
cmp
mov
xchg
and
clc
aaa
dec
inc
sbb
and
xchg
xor
in
sahf
ins
fstp
cwde
push
lahf
(bad)
sub
xchg
and
popa
(bad)
icebp
cld
inc
cmc
lods
dec
punpckhbw
jl
ss
push
jmp
test
cmp
popf
sbb
test
imul
pop
push
add
add
or
les
lods
ret
fiadd
and
push
add
pop
push
add
jno
sti
aas
cmps
(bad)
jns
jg
jge
pop
jmp
out
jnp
cmp
xchg
cld
mov
sti
mov
in
rcr
stc
and
xor
fdiv
pop
stos
pop
mov
in
pop
add
sbb
pop
ins
cld
adc
ins
xor
xchg
push
fwait
jg
jle
xchg
out
loopne
test
jno
sub
mov
xor
jb
pushf
mov
xchg
aas
popa
mov
mov
jo
imul
imul
ins
pop
loop
add
outs
inc
inc
xchg
push
cwde
imul
pop
ror
mov
repnz
stc
push
call
cmp
inc
mov
mov
into
add
sub
out
mov
pusha
imul
std
mov
aaa
or
mov
imul
std
hlt
scas
pop
push
outs
jp
ss
lahf
pop
adc
xchg
lock
mov
les
movs
mov
or
jb
jmp
mov
das
mov
(bad)
and
xchg
or
test
jne
loopne
cli
into
fldcw
push
push
xchg
mov
jb
stos
cmp
bound
xchg
mov
mov
push
das
shr
neg
cwde
jo
add
jb
inc
xor
push
adc
dec
mov
dec
(bad)
add
mov
push
pop
cli
das
xor
mov
fs
aam
mov
dec
clc
mov
push
ins
and
adc
out
jns
adc
xor
push
jmp
xlat
ficomp
jae
fwait
sbb
xor
int3
inc
out
cmp
out
rcl
retf
mov
out
pop
(bad)
fisttp
pop
movs
adc
lock
sbb
mov
jle
int3
cmps
out
mov
lock
stos
inc
js
sti
aad
sub
mov
xchg
dec
lea
out
movs
gs
int
sub
std
movs
cmps
retf
lods
sbb
dec
iret
stos
sub
xchg
dec
sbb
ins
push
pop
adc
jl
aam
out
popf
(bad)
xchg
cld
xchg
push
and
mov
rol
mov
jmp
xlat
xlat
(bad)
dec
ret
rol
outs
xlat
loopne
xor
test
sti
out
cmp
clc
mov
and
lea
push
sti
mov
mov
retf
or
xchg
shl
cmp
es
and
test
jns
movs
lock
xchg
cmc
arpl
add
adc
clc
push
test
dec
fist
mov
inc
daa
(bad)
adc
xor
cmp
mov
push
or
shr
sub
stc
mov
callw
fstp
or
push
nop
rcl
sbb
or
xor
cmp
mov
sbb
xor
mov
or
pop
das
sbb
pusha
and
mov
test
jbe
jbe
vhsubps
mov
cmp
in
xchg
inc
cdq
inc
sub
icebp
xchg
push
cmp
add
movs
les
fnstsw
test
dec
pop
cmp
scas
pop
mov
adc
aam
aam
clc
and
dec
cli
mov
mov
push
jo
lods
adc
sahf
cmp
jb
push
sbb
mov
fimul
popf
(bad)
sbb
push
push
ss
push
mov
push
pusha
add
daa
ror
jecxz
push
in
cmp
(bad)
or
or
mov
jne
adc
xlat
or
or
cmps
jge
mov
arpl
pushf
and
js
mov
popf
mov
cmp
imul
int
or
scas
mov
pop
into
fcomi
mov
mov
dec
ins
(bad)
shr
dec
xchg
sub
sahf
push
enter
aam
dec
dec
mov
rol
pop
dec
xlat
mov
stos
add
fldcw
in
jmp
sub
or
adc
ja
jbe
push
rol
pop
and
mov
inc
retf
xchg
cmc
out
lock
sbb
out
sbb
lea
or
test
push
ficomp
cmps
inc
iret
fmul
ds
push
and
fist
add
mov
sbb
dec
ficomp
sbb
add
xor
pop
(bad)
or
(bad)
pop
fsubr
cmp
mov
xor
call
scas
inc
jno
pop
hlt
mov
mov
push
mov
mov
dec
jp
inc
mov
dec
cmp
ret
push
mov
ror
pop
mov
pop
and
jg
pop
sub
les
mov
sub
mov
lahf
dec
adc
test
inc
dec
movs
fiadd
push
into
xchg
jle
push
cmp
lahf
pop
xor
cdq
popa
clc
cs
pop
xchg
nop
ins
loop
jmp
pop
and
out
mov
je
lds
pushf
scas
(bad)
jp
cmp
or
jle
add
rol
iret
push
fwait
lds
add
pop
stos
cmp
fild
adc
jecxz
push
mov
fs
xchg
mov
in
mov
or
mov
cld
mov
mov
dec
leave
and
iret
and
add
jae
rcl
and
push
out
movs
mov
das
jmp
mov
ss
fs
clc
or
push
mov
jnp
jmp
iret
scas
mov
scas
xchg
push
add
outs
and
repz
mov
sub
push
mov
pop
fcom
jb
xor
fnstcw
cmc
rcl
cmp
xor
mov
out
mov
jnp
(bad)
inc
adc
fwait
mov
sbb
push
pop
jo
cmp
les
pop
push
xchg
jle
scas
shl
nop
and
ins
jae
add
rol
add
call
sbb
fwait
(bad)
outs
call
icebp
sbb
ror
mov
jmp
in
push
jp
and
pusha
and
(bad)
stos
ja
mov
sbb
lods
mov
xchg
dec
jge
out
iret
fst
xchg
in
dec
mov
push
(bad)
dec
and
popf
gs
dec
mov
sub
rcr
cmps
xchg
inc
and
adc
ret
and
das
push
and
xchg
movs
sbb
xchg
dec
retf
xchg
aas
in
or
(bad)
mov
jmp
lods
mov
aad
movs
cmp
in
jecxz
cli
push
mov
add
lods
jbe
adc
and
loope
out
jns
movs
mov
ins
or
push
mov
leave
lods
sub
push
jecxz
mov
nop
xor
test
aaa
add
jo
into
xchg
cmps
or
mov
or
xlat
mov
jp
pop
hlt
adc
scas
mov
iret
mov
jmp
mov
fs
aad
call
mov
enter
mov
pop
shl
pop
(bad)
cmp
mov
jp
mov
scas
sar
bound
mov
mov
fstp
out
xchg
ret
sbb
xchg
call
int3
and
mov
sbb
lea
jb
aas
mov
retf
(bad)
loopne
inc
cmc
xor
mov
movs
movs
cwde
fild
cmp
mov
mov
sbb
sahf
stos
adc
(bad)
push
jo
xchg
dec
int3
mov
fnsave
xor
cmp
cmps
fs
mov
or
and
int
(bad)
(bad)
loop
jl
adc
xchg
imul
xchg
sbb
retf
xor
mov
mov
sbb
pop
mov
cmps
mov
sub
cmp
test
lds
leave
add
int3
sbb
add
(bad)
ins
mov
pop
mov
int3
or
pop
mov
pop
and
shl
movs
dec
or
mov
pusha
repz
lds
stos
sar
repz
movs
mov
mov
xchg
xor
out
pop
neg
jmp
in
mov
mov
mov
or
mov
call
in
or
mov
retf
sti
xor
jbe
aad
ds
outs
sbb
cmp
mov
outs
aaa
sbb
dec
add
movs
stos
cmp
scas
hlt
test
in
mul
pop
mov
hlt
add
jno
adc
jge
cmp
cmp
les
jge
(bad)
test
sub
adc
cwde
fdivp
jmp
rcr
ins
and
lods
cmp
pushf
js
jae
pop
scas
push
inc
cmps
popa
imul
(bad)
sub
aam
sbb
mov
rcl
cmp
xchg
jecxz
pop
dec
cmp
mov
mov
test
adc
xor
adc
sub
aaa
(bad)
mov
mov
call
fs
cmp
mov
jae
daa
sub
pop
lds
inc
sbb
mov
stos
cmp
scas
inc
fs
scas
mov
sub
add
cmp
fcom
push
lea
lock
inc
inc
stos
or
imul
out
leave
adc
adc
xor
xchg
sbb
rol
ins
nop
cmp
retf
cmp
mov
fisttp
sbb
or
cmp
xchg
fcomi
outs
(bad)
bnd
mov
pop
xchg
out
or
inc
push
inc
jp
mov
xchg
repz
sbb
xlat
inc
jle
jl
add
hlt
pop
jbe
sub
jae
fwait
mov
daa
(bad)
mov
cld
lds
sub
fistp
(bad)
clc
iret
stos
fild
aad
fwait
push
repz
sub
mov
ret
mov
adc
nop
loopne
mov
cmp
jmp
push
fmulp
jo
mov
push
push
pop
pushf
inc
sub
je
dec
jg
cmc
or
pop
sub
cmp
sahf
out
push
and
in
out
inc
sahf
in
mov
(bad)
cmc
adc
pushf
shr
push
sbb
xor
mov
repz
(bad)
mov
mov
or
(bad)
fistp
jb
push
mov
andnps
or
int3
hlt
in
out
aas
pop
xchg
push
mov
mov
int
jmp
(bad)
lock
sahf
fild
mov
or
rcr
iret
outs
imul
or
mov
sub
lds
stc
popf
mov
mov
sub
pop
movs
cld
jmp
jmp
jnp
cwde
xlat
push
in
(bad)
dec
jecxz
jns
sbb
pop
adc
mov
retf
sti
repz
cld
popa
in
adc
push
jns
or
ins
fcmovnb
push
mov
daa
jecxz
lods
push
jno
pop
test
xlat
jae
jg
jnp
(bad)
sub
jg
mov
jns
retf
xchg
mov
add
(bad)
sub
inc
mov
sub
test
lods
fisttp
sbb
jnp
aad
cmp
pop
ja
push
out
inc
pop
cmp
push
push
hlt
mov
jns
pop
or
fmul
push
outs
inc
jo
sub
xor
pop
push
cdq
outs
rcr
leave
jl
jae
sbb
ret
arpl
xchg
ds
into
and
mul
std
loope
jnp
inc
dec
jle
mov
dec
loop
pop
aas
jle
sub
icebp
sahf
movsx
inc
sbb
clc
jg
out
mov
and
shr
or
gs
test
call
aad
cmp
mov
bound
cmp
adc
ins
test
sbb
mov
in
in
movs
dec
mov
add
out
xor
cmp
popf
popf
ds
pop
adc
out
jmp
xor
add
pop
fwait
(bad)
cmp
xchg
test
cmp
mov
mov
call
mov
movs
aad
push
ret
jl
adc
arpl
and
cli
(bad)
mov
jne
fisubr
mov
xchg
int3
fisub
int3
addr16
outs
call
and
movs
jg
sbb
ss
xor
cld
adc
test
cmp
dec
cmps
lahf
mov
out
clc
push
fsub
lds
sbb
cs
mov
(bad)
int3
and
int
cmp
mov
adc
ins
ret
cmc
retf
cmp
dec
add
inc
mov
lock
mov
xchg
int
ror
sub
rcr
sub
sti
sbb
div
retf
(bad)
outs
mov
(bad)
shl
imul
shr
cmps
neg
cmps
adc
and
es
inc
push
mov
dec
dec
cmp
jmp
xchg
pop
div
mov
adc
pusha
dec
sub
push
sbb
cmc
lahf
mov
std
xor
pop
jo
int3
lahf
push
std
pop
push
cmc
pop
dec
js
mov
in
test
jmp
mov
xchg
xchg
mov
inc
pop
fcom
push
jbe
(bad)
lock
sbb
pop
ins
and
cmp
mov
adc
fnsave
xlat
scas
mov
lods
mov
dec
pop
sbb
cmp
mov
lods
mov
mov
fadd
sbb
mov
mov
repz
dec
pop
push
test
es
push
cld
and
adc
sub
mov
int
rcr
hlt
ss
mov
test
mov
and
mov
fadd
stc
jle
mov
xor
push
mov
ss
outs
sub
(bad)
outs
fbstp
inc
and
mov
clc
inc
xchg
pop
pop
xor
shr
sbb
mov
(bad)
jbe
inc
jbe
popf
mov
lock
inc
aaa
dec
inc
mov
jno
repnz
xchg
(bad)
jl
loope
cmp
lea
es
dec
cs
and
movs
and
(bad)
ja
movs
fsubr
sub
pushf
pusha
xchg
cs
cmp
imul
mov
stos
hlt
fild
outs
fsub
stos
fnstsw
pop
push
push
dec
leave
add
out
push
add
xor
(bad)
push
xor
jbe
inc
adc
imul
aam
jbe
sub
loopne
mov
test
jmp
loop
out
push
push
jno
sub
xor
adc
shr
cmp
cmp
test
adc
xor
adc
(bad)
movs
xchg
scas
pop
ror
stc
lea
dec
push
add
inc
sar
inc
dec
cmp
out
cmp
les
add
sbb
int3
mov
pusha
pop
adc
daa
fnsave
pop
xor
cmp
imul
sti
inc
fnstenv
cld
xchg
jns
push
sbb
out
scas
cli
ins
loop
lods
mov
push
adc
into
adc
sub
lahf
out
inc
mov
and
sbb
lock
sahf
pop
mov
fmul
mov
cmp
lea
add
idiv
lds
cmp
mov
test
outs
inc
mov
mov
jecxz
jae
(bad)
push
shr
lds
xor
xchg
enter
xchg
jne
ins
cmp
jae
sub
aam
rcl
aam
fldenv
enter
popa
xor
fldcw
and
mov
mov
call
mov
hlt
mov
xchg
jno
or
inc
pushf
cmp
int
pop
xchg
xchg
add
jno
ins
fiadd
stc
add
nop
repnz
out
adc
and
out
fdivr
repz
push
dec
mov
cmp
and
fnsave
push
pop
pushf
push
mov
in
repz
jae
inc
lea
pop
shl
mov
cmc
push
and
cwde
test
imul
mov
inc
xlat
sbb
hlt
mov
fcom
out
in
cmp
arpl
cmps
or
sbb
jo
ss
loope
ss
mov
in
movs
rcl
mov
xor
aad
mov
cmovp
(bad)
sub
add
add
mov
out
jbe
jl
xchg
mov
loop
pop
retf
shl
shr
cmp
push
stc
inc
pop
sbb
pop
int3
sub
hlt
int
mov
into
fucomi
push
pop
xchg
cwde
pop
mov
iret
movsx
pop
gs
dec
ret
push
nop
cs
sub
xchg
imul
xchg
pop
pop
xlat
mov
imul
sbb
pop
je
das
add
xchg
jmp
cmp
xchg
and
or
inc
xor
jge
(bad)
out
imul
jp
clc
push
sub
adc
jno
retf
je
ins
in
leave
into
mov
dec
call
fiadd
int
les
mov
aas
cmc
retf
mov
mov
ret
push
les
and
push
mov
ja
pop
cmp
mov
out
jg
jb
xchg
into
pusha
adc
nop
add
inc
xchg
nop
aaa
fist
or
cs
adc
(bad)
dec
cmps
nop
inc
and
rcl
bound
out
shl
pop
das
imul
inc
mov
adc
les
or
retf
push
movs
sbb
lods
ret
pop
fistp
inc
mov
add
sub
push
das
pop
mov
add
ds
and
or
mov
lock
clc
mov
pop
dec
(bad)
jmp
mov
popa
mov
pop
inc
sti
sub
data16
popf
adc
mov
loope
mov
adc
push
mov
push
jns
cmc
stos
sub
ja
xor
and
mov
sub
sub
test
and
adc
cmp
xor
adc
arpl
out
push
sar
xchg
push
out
pop
test
fcmovnb
mov
and
push
sbb
popf
inc
repz
xor
data16
push
xor
in
shl
outs
jmp
shr
int
(bad)
std
in
pop
aam
call
gs
pop
out
add
loope
jno
fistp
xchg
arpl
jmp
xor
mov
sub
dec
xor
sub
jne
test
pusha
mov
repz
cmc
cmp
ins
ins
dec
pop
xchg
xchg
push
loopne
sub
push
loopne
in
stos
cmp
push
and
aas
retf
ins
inc
dec
gs
push
neg
jmp
push
dec
inc
daa
cmp
mov
cs
js
mov
out
add
(bad)
mov
push
(bad)
jmp
mov
fcmovb
cmc
test
mov
sbb
mov
retf
inc
std
fisttp
and
xor
cmp
xlat
dec
push
jmp
push
add
jecxz
mov
push
test
pop
and
hlt
shl
add
and
mov
cwde
mov
les
push
sbb
cmp
mov
inc
mov
mov
es
xchg
push
dec
xor
lods
lods
push
and
out
mov
shl
daa
jno
rcr
ret
pop
mov
xor
out
aad
leave
out
(bad)
lds
sbb
pop
es
push
and
leave
jne
xchg
adc
leave
mov
into
cld
addr16
rol
push
push
add
inc
xchg
pop
fimul
or
fst
xchg
int
fnsave
pop
out
rcl
mov
loope
in
xchg
sbb
sbb
ins
mov
outs
in
int3
jns
or
xchg
cmp
jo
das
jno
leave
xor
inc
xchg
xor
push
mov
fadd
je
push
movs
xor
xchg
ins
sub
in
or
popa
pop
xchg
loope
shr
lods
pushf
inc
jg
jecxz
adc
mov
hlt
imul
fidiv
pop
jne
adc
rol
or
icebp
pop
fsubr
cmp
adc
repz
cmps
xor
push
and
adc
xchg
int3
icebp
popa
inc
repnz
cmp
xchg
pop
les
adc
mov
and
jb
or
push
sbb
sbb
pop
push
pusha
jecxz
out
cmp
jge
mov
imul
xor
in
imul
cmps
popf
into
into
adc
cmps
ret
and
mov
popa
jnp
mov
xchg
xchg
adc
jge
ss
ror
pusha
dec
pop
pop
imul
popf
adc
pop
jo
cld
mov
dec
retf
stos
pop
push
in
dec
movs
xchg
cmp
cld
mov
add
pop
and
push
addr16
push
fidivr
jp
mov
push
and
cmp
std
and
mov
jg
scas
gs
xor
push
sub
idiv
pop
mov
xor
popa
xchg
retf
jmp
ja
jl
dec
mov
sub
push
sbb
std
mov
adc
jo
shl
fisttp
pop
and
inc
rcr
fld
or
cmc
add
inc
jne
mov
retf
fld
sub
dec
pop
push
loope
pop
loope
push
inc
je
dec
retf
pop
or
stos
cmp
mov
sbb
mov
mov
shl
cmp
sub
add
dec
movzx
cmp
mov
pop
mov
mov
inc
dec
push
xchg
sub
and
mov
adc
(bad)
mov
outs
mov
add
pop
sub
call
and
std
js
sub
(bad)
sub
fld
gs
ss
cdq
push
sbb
shl
or
xchg
stos
xchg
push
mov
sub
sbb
sbb
pop
adc
inc
cli
or
clc
imul
mov
mov
jns
inc
jae
cmp
jbe
jl
cwde
mov
sub
lea
xchg
stc
je
sub
out
pop
mov
lds
mov
dec
inc
inc
in
fidivr
sbb
mov
test
pushf
popa
pop
dec
scas
std
mov
mov
pop
sbb
repnz
call
jmp
jmp
sbb
test
add
adc
dec
mov
test
fwait
sar
adc
sar
mov
ret
(bad)
jo
and
cdq
mov
xor
inc
xor
add
icebp
mov
sbb
ins
cmp
outs
sahf
jg
popa
shl
dec
add
dec
test
outs
aaa
imul
loopne
lahf
mov
mov
inc
rep
mov
adc
popa
dec
push
test
std
out
cmp
fld
fnsave
mov
xchg
mov
mov
inc
mov
cmp
ds
or
mov
push
pop
push
push
sub
aam
inc
fist
sbb
mov
test
das
not
inc
outs
xlat
and
sub
adc
dec
xchg
clc
out
ffree
xchg
cmp
add
mov
aas
cmp
or
test
mov
mov
loopne
mov
inc
(bad)
jmp
or
adc
cmp
dec
jnp
je
leave
(bad)
pop
and
aad
or
xchg
xchg
es
(bad)
fmulp
add
push
mov
xlat
pop
mov
mov
fdiv
add
mov
mov
je
rcr
add
scas
pop
int
cmp
bound
ror
scas
loop
pop
pop
push
loopne
test
es
and
out
cmp
ins
add
neg
xor
pop
mov
jns
mov
inc
xchg
pop
sub
pop
push
pop
xchg
test
dec
sub
repz
mov
in
out
leave
xor
mov
(bad)
xchg
push
push
stos
adc
mov
pop
jmp
jns
pop
js
cmp
test
mov
(bad)
jns
stos
push
repz
dec
nop
pop
ret
jge
jnp
adc
bound
ja
arpl
cwde
inc
xchg
pusha
mov
in
jmp
fimul
mov
idiv
xchg
and
mov
push
mov
push
out
add
popa
xor
and
and
mov
push
imul
push
ret
sub
fadd
test
popf
js
mov
fs
jmp
ds
scas
sub
pop
add
nop
cli
out
cwde
sbb
arpl
fild
bswap
or
add
and
js
in
and
out
and
in
xchg
in
cs
inc
inc
test
xchg
xor
mov
stc
(bad)
out
dec
sub
popf
mov
iret
jl
stos
xchg
leave
ret
jo
test
aam
inc
in
test
jge
es
mov
(bad)
pop
mov
inc
div
ret
ja
ror
fbld
mov
aad
push
mov
xchg
int3
jno
or
leave
jecxz
jmp
out
mov
(bad)
cld
jnp
leave
out
nop
jno
sub
jne
push
cli
push
imul
jecxz
fld
jp
lds
dec
test
jnp
jnp
sub
xor
aad
jb
or
sub
into
test
loope
test
mov
cmp
mov
inc
popf
jge
aaa
addr16
icebp
hlt
cs
sub
enter
fwait
mov
bound
(bad)
pop
and
retf
fwait
sar
stos
cmps
inc
aad
push
in
fist
dec
dec
push
mov
mov
jmp
scas
and
xchg
add
xor
xor
xchg
(bad)
fidivr
and
mov
add
ret
call
ins
in
jp
pop
dec
pop
cmp
popa
cmp
fwait
xchg
sub
cmc
iret
xchg
or
inc
pop
call
(bad)
cld
and
xor
mov
lea
or
call
fiadd
adc
or
ja
enter
fnstsw
ja
mov
or
or
mov
pushf
sub
cs
add
push
add
bound
inc
sbb
mul
lods
mov
sub
jne
movs
and
fisub
push
pop
ds
fs
lds
rcr
(bad)
sub
test
cwde
or
mov
pop
xchg
sbb
loopne
mov
mov
dec
inc
sbb
jo
test
in
lods
jle
cs
test
sub
or
sub
shr
xchg
sahf
jno
mov
mov
dec
dec
sub
aaa
sbb
xor
fnstcw
mov
mov
sub
div
fisttp
(bad)
xlat
test
div
mov
sbb
outs
pop
test
push
int3
in
addr16
std
lock
sub
fucomi
mov
mov
(bad)
in
inc
sub
pop
dec
mov
lahf
test
xchg
pop
test
push
jnp
xchg
cmp
xchg
ins
fwait
retf
jnp
in
int
lods
cdq
mov
jle
pop
and
or
xchg
call
fwait
or
push
cmp
adc
cdq
pop
inc
aaa
retf
mov
mov
mov
and
ins
in
ret
ins
es
mov
adc
shr
xchg
pop
mov
mov
popf
ins
push
sub
push
push
add
dec
sub
fwait
aad
stos
and
inc
add
daa
adc
pop
aam
jnp
jbe
jns
sbb
pop
ror
test
jmp
push
dec
cld
jbe
int3
push
fwait
and
lea
lods
fidiv
jp
arpl
bound
jmp
pop
sbb
outs
dec
pop
xor
hlt
call
jmp
pop
mov
sub
dec
dec
mov
inc
fcos
aaa
jmp
mov
stos
fild
data16
stos
sbb
fidiv
ficomp
hlt
push
retf
dec
or
dec
xor
fwait
movs
inc
mov
icebp
call
xor
push
lds
mov
cs
stos
jno
sub
jmp
mov
jmp
mov
retf
rol
out
ss
popf
pop
and
ficomp
jle
and
sub
mov
test
pushf
aas
mov
inc
mov
out
jmp
aas
imul
add
xchg
test
sub
in
cmps
stc
jb
pushf
aam
mov
mov
outs
xchg
fmul
loop
adc
hlt
mov
pop
jecxz
push
jns
std
inc
jmp
sub
mov
bound
loopne
call
fsubr
pop
or
xor
data16
cli
pop
inc
cmp
dec
nop
push
adc
aam
fnsave
(bad)
cmp
push
sbb
retf
or
sbb
mov
and
xor
sub
fsubr
aad
loope
in
test
jle
or
cmp
enter
pextrw
jb
mov
je
dec
inc
dec
dec
mov
test
jmp
push
pop
movs
(bad)
test
push
and
iret
popf
adc
retf
pusha
out
add
inc
mov
adc
movs
sub
dec
js
leave
pop
jno
jne
popa
push
cmc
sub
and
sub
in
out
sbb
aaa
hlt
ret
lahf
std
xchg
lock
fild
std
xchg
mov
add
out
bound
ficomp
inc
int3
ins
out
std
sub
xor
(bad)
ret
jbe
add
scas
sub
mov
adc
and
pop
xor
pushf
jge
pop
js
aas
js
jbe
pop
cmp
push
push
inc
push
cmps
jnp
pop
cmps
mov
jg
lds
mov
dec
push
lahf
lds
adc
mov
loopne
mov
in
jne
div
ret
add
and
aaa
int3
cwde
add
aad
mov
scas
jno
or
jbe
lea
xchg
jmp
je
jbe
mov
jmp
xchg
fist
gs
aas
in
(bad)
shr
cdq
jmp
aas
push
jl
adc
cmp
std
push
or
adc
lahf
mov
je
jge
xchg
pop
ret
fild
adc
out
xor
repnz
retf
push
or
cmc
arpl
mov
aad
lahf
jge
sbb
xchg
nop
mov
jge
cmc
in
inc
mov
cmp
adc
jbe
mov
call
test
out
lods
loope
lods
ret
dec
cmp
jbe
lds
test
sbb
test
daa
jb
movs
pop
repz
add
and
call
push
sub
cmps
iret
stc
ds
adc
and
cdq
mov
dec
mov
adc
fisub
fs
loope
out
mov
xchg
inc
mov
jbe
(bad)
fisttp
and
add
call
(bad)
lahf
jmp
loope
push
and
out
xor
adc
inc
sbb
aam
call
jmp
xchg
add
int3
sbb
pop
mov
jecxz
mov
mov
rol
xchg
fisubr
jns
iret
adc
mov
test
popf
dec
push
adc
mov
xor
out
std
ror
add
pop
hlt
test
test
in
mov
sub
std
imul
lds
repnz
mov
mov
sbb
or
push
mov
ja
pop
cmp
loope
mov
jmp
add
jecxz
xchg
mov
aas
xchg
sub
shl
lahf
xchg
dec
dec
add
add
xor
sub
push
mov
das
xor
xchg
int3
sub
and
pop
frstor
inc
test
imul
sub
or
sub
ins
movs
ins
out
pop
loop
aas
push
or
add
or
sar
dec
and
xor
inc
cmc
(bad)
sub
sti
mul
stos
jp
leave
inc
push
dec
xor
xchg
ficomp
stos
push
inc
out
sub
inc
xchg
inc
rcl
cmp
aad
jb
(bad)
pushf
cmp
mov
mov
pop
sbb
dec
xchg
adc
add
mov
push
push
into
icebp
add
lea
std
cli
arpl
cdq
clc
movs
dec
push
sti
int3
(bad)
out
pop
aad
xchg
(bad)
jg
sbb
enter
cs
jmp
ret
scas
dec
retf
mov
jl
xchg
xchg
xchg
lods
push
enter
fcmovnu
in
aam
retf
test
cmps
cmp
cdq
lahf
mov
mov
popf
adc
mov
stos
into
in
lds
cwde
jge
mov
sub
sbb
push
adc
das
sbb
dec
jl
(bad)
clc
in
iret
jno
(bad)
pop
inc
jns
xchg
pusha
stc
or
xchg
mov
jo
lods
sub
adc
pop
shr
dec
icebp
movs
inc
xor
mov
clc
and
aas
icebp
imul
lods
leave
jbe
imul
adc
inc
call
jecxz
jne
dec
and
mov
aas
in
in
lods
inc
or
xchg
mov
pop
loop
inc
push
xchg
xchg
lahf
(bad)
or
cwde
arpl
popa
sbb
lahf
push
pop
jno
xor
mov
popa
cdq
sbb
mov
iret
cmps
mov
xor
or
(bad)
ins
aaa
sub
xor
test
enter
retf
mov
in
jmp
retf
int3
pop
sti
push
push
pmaxub
femms
dec
pop
sub
mov
jecxz
push
ficom
or
arpl
leave
or
ja
push
add
pop
andnps
inc
in
shl
je
jmp
add
sbb
mov
jns
test
loop
mov
mov
jmp
fisub
push
ja
sbb
stc
neg
inc
nop
inc
push
or
(bad)
outs
iret
xor
and
dec
jno
sub
jl
mov
add
mov
inc
mov
inc
dec
icebp
adc
xor
jge
push
icebp
jns
out
repnz
jmp
pop
test
mov
inc
movs
dec
push
shl
xchg
push
and
dec
loope
lods
jmp
adc
push
movs
pop
nop
jmp
jb
mov
mov
cmps
xchg
or
cmp
sbb
fcomp
mov
ins
je
ret
in
sub
cmp
int
push
dec
movs
mov
ror
out
aam
push
mov
cmps
daa
out
jmp
in
data16
out
mov
cli
adc
ret
mov
scas
mov
fistp
cmp
cmp
ret
dec
ins
xchg
adc
std
mov
cmp
cmp
test
mov
add
mov
dec
cwde
and
fbstp
inc
adc
or
imul
mov
sbb
add
cwde
cli
xlat
std
(bad)
push
in
push
mov
test
imul
sbb
cmp
cmp
cmp
jnp
dec
icebp
dec
mov
bound
ret
aad
jne
mov
jle
sub
mov
xchg
jo
jmp
push
sbb
clc
(bad)
mov
in
push
jmp
or
js
inc
scas
pop
jecxz
cmp
cmp
xor
bound
push
ficomp
fistp
(bad)
fnstsw
fild
jne
les
and
clc
pop
mov
cld
ins
retf
jbe
je
int
push
sahf
sbb
mov
cmp
in
lods
and
mov
pop
or
sub
mov
sbb
xlat
inc
sbb
inc
or
clc
std
adc
(bad)
push
jmp
lahf
xchg
xchg
inc
adc
dec
sbb
shl
ss
and
sbb
add
xchg
mov
dec
loopne
es
dec
add
mov
add
jnp
mov
in
rcr
adc
ds
jg
pop
xor
(bad)
fadd
cmps
in
or
cmp
jb
xor
adc
and
fist
jle
jb
add
in
and
ficom
rol
mov
sub
ja
jle
repnz
push
mov
or
test
(bad)
jbe
mov
stos
jbe
cmp
push
pop
jb
mov
fnsave
add
jge
rcl
in
arpl
mov
jmp
lock
mov
cmp
out
or
retf
call
xchg
sbb
push
mov
push
idiv
push
adc
popf
outs
xor
sub
and
int
inc
jge
out
jmp
inc
dec
test
xchg
ret
rol
mov
jne
adc
jmp
test
xor
shr
or
enter
icebp
push
mov
mov
sbb
mov
cmp
mov
movs
fadd
pop
xchg
push
sti
adc
and
scas
jno
jle
int3
pop
enter
push
mov
xor
mov
aam
add
push
popf
jle
cmp
xor
dec
fbstp
test
sbb
xchg
jb
sbb
sti
sahf
jne
push
xor
shr
sub
dec
inc
sub
pop
dec
and
push
adc
push
inc
cmp
sti
jae
sti
das
loop
sbb
cdq
loopne
add
inc
nop
sbb
sar
dec
arpl
imul
add
ds
ja
push
mov
pand
or
mov
cmp
rol
sti
loopne
pop
jae
fisubr
pusha
jnp
loopne
or
push
stos
fldenv
outs
data16
xor
sub
rcr
pusha
jo
inc
cmc
cmp
(bad)
sub
sbb
mov
popa
mov
push
fisubr
or
stos
dec
iret
mov
xlat
clc
popa
mov
push
mov
(bad)
idiv
mov
jbe
arpl
or
sti
(bad)
push
xchg
cmps
mov
(bad)
clc
cmp
out
enter
mov
push
in
aaa
jb
adc
mov
cdq
xchg
and
sub
das
ins
sbb
hlt
call
and
mov
fisubr
push
retf
mov
stos
outs
aad
jg
adc
mov
jne
add
cli
mov
ss
mov
cwde
retf
pushf
pop
cmps
mov
push
nop
xchg
mov
mov
mov
mov
xor
xchg
leave
mov
pop
mov
icebp
cmp
jo
addr16
pop
cmc
pop
and
xor
and
mov
jecxz
in
inc
retf
push
or
pop
pop
(bad)
or
dec
cli
fstp
(bad)
aam
cmp
out
mov
mov
sbb
jg
cmp
ror
sar
add
and
dec
and
mov
mov
jmp
push
xchg
sub
gs
fwait
gs
mov
pop
retf
repnz
into
sub
pop
mov
jl
int
je
aas
jmp
inc
(bad)
pop
dec
push
shl
push
sar
xor
sub
aas
iret
xor
cdq
out
cmp
in
(bad)
jge
fwait
sti
pop
in
push
xchg
nop
nop
popa
das
mov
in
shl
data16
push
ret
adc
stc
sbb
and
call
mov
stos
sbb
jg
stos
inc
push
pop
adc
adc
fiadd
stos
add
push
out
cmps
enter
sub
aam
sti
iret
sub
popa
and
adc
fidivr
push
xchg
pop
push
call
cs
mov
sbb
fmul
mov
loope
push
cli
mov
hlt
mov
cmp
mov
bound
mov
dec
jno
sti
popa
add
mov
sbb
inc
push
mov
dec
(bad)
jne
mov
cmp
jmp
fcomip
sti
repnz
xchg
je
inc
jbe
cwde
mov
xor
pop
fcmovnbe
mov
shr
out
loope
inc
fmulp
adc
xchg
cdq
rcr
in
mov
cmp
push
pop
leave
xor
stos
xchg
out
test
xor
mov
out
scas
cmps
pusha
aaa
out
xor
es
push
mov
jo
retf
mov
sbb
sub
out
enter
(bad)
mov
push
mov
xchg
rcl
stos
xor
aad
jno
xchg
dec
xor
jo
in
cmp
push
sub
add
xchg
adc
rol
mov
mov
arpl
adc
ror
mov
jns
out
push
sbb
cmp
sub
inc
scas
aam
xchg
mov
mov
jl
test
xor
mov
je
inc
cmps
adc
cmp
jne
add
call
xchg
jmp
xor
add
cmps
frstor
test
adc
cmp
mov
dec
adc
and
adc
mov
mov
outs
or
cs
fistp
fst
call
xchg
(bad)
push
scas
(bad)
dec
push
xchg
pop
xor
cmp
sbb
in
dec
pop
sub
ret
lock
add
jp
mov
jle
test
mov
cld
mov
pop
(bad)
dec
jnp
xlat
add
scas
(bad)
sbb
mov
pushf
inc
and
sub
and
shr
inc
retf
inc
(bad)
fmul
aad
scas
dec
xchg
jle
test
ins
cli
outs
add
fidiv
xchg
xor
aam
stos
cmp
fadd
pavgw
je
shl
fbld
cmps
push
scas
enter
aaa
push
ds
xor
mov
outs
sbb
pop
jno
jo
gs
jb
lock
mov
in
jmp
cdq
outs
cmp
mov
repz
xchg
retf
cmp
test
retf
mov
out
enter
les
fadd
call
jb
xchg
mov
fcom
jno
stos
pusha
sub
pop
sbb
into
or
(bad)
jle
test
mov
sbb
fs
add
pop
repnz
frstor
je
int
fsub
mov
add
in
jo
cmp
push
jbe
and
data16
es
xchg
mov
movs
xchg
pop
add
xchg
jmp
das
loop
adc
fdivr
test
xor
js
jae
sub
push
push
lods
std
jbe
xor
xchg
cwde
pop
inc
outs
out
repnz
sbb
push
mov
mov
icebp
arpl
dec
add
or
ror
dec
mov
adc
fistp
push
lea
lods
cld
test
sub
fiadd
loope
mov
das
jmp
test
jo
aam
iret
stc
pushf
xchg
das
fdiv
test
rcl
mov
xchg
cmp
inc
jge
xor
scas
jmp
stc
sub
sti
rep
test
adc
fcom
xor
leave
test
aaa
push
lods
(bad)
add
adc
bound
les
std
cld
(bad)
das
jp
xchg
dec
add
into
mov
push
mov
cmps
(bad)
xor
or
xchg
cli
xchg
pushf
mov
pop
in
or
(bad)
in
push
sub
jp
rol
rol
aas
dec
in
xchg
mov
shl
and
add
xor
cmp
adc
ins
mov
and
out
mul
push
cmp
dec
cld
or
pop
fistp
in
xchg
inc
sbb
mov
xor
test
ret
xor
pop
rol
push
out
jo
(bad)
sti
and
lea
fimul
shl
fsubr
adc
mov
hlt
pop
lods
mov
inc
mov
ja
scas
ret
cmp
push
jmp
ds
addr16
mov
jge
cmc
jecxz
and
sub
ins
push
mov
inc
mov
les
mov
dec
fstp
scas
lock
addr16
js
shld
ins
mov
in
(bad)
cdq
sar
xchg
add
adc
mov
cmp
pop
test
jecxz
retf
std
int3
and
ja
pusha
xor
retf
mov
or
aaa
or
es
push
mov
xor
dec
jnp
aaa
or
in
icebp
push
mov
xor
inc
ss
rol
popa
dec
fcmovb
push
out
gs
fisubr
add
int3
call
inc
enter
in
mov
sar
xor
push
jne
jae
cwde
cmp
add
add
xchg
cmp
cmp
or
retf
mov
mov
aad
pop
outs
push
xchg
jnp
pminub
ja
adc
push
stos
and
test
lods
pop
int
aaa
jg
jb
gs
inc
dec
movs
mov
push
xchg
or
xlat
jne
pop
movs
mov
int3
aaa
cmp
or
inc
dec
fcom
cwde
add
adc
xor
fimul
icebp
xor
push
out
cwde
dec
xchg
shr
or
jmp
inc
icebp
gs
cmp
or
out
mov
cmps
pcmpeqd
fld
sahf
or
sbb
cmp
jmp
push
adc
addr16
mov
shl
repz
fnsave
dec
iret
mov
fdiv
cmps
ds
pop
sub
lea
inc
inc
mov
outs
pop
push
push
jmp
popw
inc
rcr
cmp
test
mov
pop
mov
xchg
push
jl
mov
pop
mov
jmp
push
fwait
jo
fdiv
cmp
mov
mov
add
push
push
mov
lahf
pop
loop
jo
clc
aas
ret
fdivr
xor
or
and
out
jl
sbb
sbb
jmp
lods
xor
and
xor
(bad)
fidiv
push
stos
push
ss
in
stos
pop
or
lea
inc
dec
push
leave
test
mov
cmp
icebp
lds
inc
mov
pop
and
jmp
cmp
and
add
mov
mov
sahf
xchg
bndldx
inc
jmp
adc
mov
in
mov
mul
xchg
pop
rol
es
imul
stc
or
push
adc
je
out
mov
adc
jo
les
popf
icebp
retf
in
jns
or
call
shl
jmp
and
cmp
aaa
pop
dec
popf
mov
fcomip
loop
and
les
nop
(bad)
inc
mov
fwait
pop
ins
jne
jne
cs
mov
cmp
(bad)
data16
xchg
mov
xchg
xlat
test
sti
sub
add
pusha
loopne
jecxz
retf
mov
xchg
and
or
sub
mov
pop
pusha
movs
pop
cs
mov
js
and
jp
test
js
lods
cmp
(bad)
addr16
imul
or
push
push
repz
and
fbstp
jne
das
sbb
mov
mov
(bad)
mov
int
jle
xchg
xchg
aad
jae
daa
in
faddp
sub
sbb
xor
ins
mov
lods
jmp
lock
repz
xchg
mov
cmp
clc
or
fdiv
mov
enter
iret
fmul
xchg
movs
mov
mov
int3
ins
jb
sbb
inc
movs
xlat
pop
int3
ja
movs
fwait
aas
jb
das
xchg
stos
stos
xor
pop
imul
jbe
sub
test
jg
xchg
adc
xor
sbb
call
mov
fst
push
jl
cmp
inc
stos
adc
sub
je
xchg
jbe
hlt
rcl
cmps
pop
adc
aaa
bound
pop
mov
jle
cmp
es
bnd
(bad)
and
sar
xchg
call
cwde
into
imul
push
push
in
hlt
adc
push
xlat
retf
outs
scas
call
mov
lods
cmp
mov
push
cmp
test
inc
add
pop
stc
xchg
pusha
pop
mov
jbe
test
fcomp
dec
dec
out
(bad)
mov
push
les
sbb
add
add
data16
shl
call
popa
or
xchg
jecxz
ds
aaa
mov
ja
dec
or
push
push
loop
gs
mov
inc
loop
imul
lds
shr
push
push
push
xor
mov
adc
ja
xchg
into
leave
pop
mov
outs
add
inc
cmc
jmp
shl
mov
(bad)
ss
adc
retf
lea
sbb
push
push
xchg
test
adc
jg
out
fist
push
js
mov
and
add
loop
retf
adc
sbb
data16
outs
pop
mov
repnz
xor
ins
add
or
(bad)
mov
scas
cmp
mov
cmp
sahf
frstor
xchg
and
jp
push
push
dec
adc
shl
and
mov
test
cwde
pop
sbb
retf
sbb
add
ficomp
fwait
xlat
lahf
sbb
mov
adc
ret
add
js
(bad)
sbb
test
mov
sub
jmp
aad
aad
imul
fist
sub
xchg
lea
push
dec
into
mov
sub
iret
div
inc
pop
into
add
pop
xchg
cmc
cs
std
xchg
pop
dec
call
xor
imul
jno
cmp
mov
cli
xor
add
(bad)
cmp
clc
call
mov
adc
push
test
inc
rol
add
iret
cli
call
dec
retf
cmps
out
push
push
jno
push
lods
mov
dec
cdq
sbb
mul
mov
test
cmp
fst
add
mov
fcomp
ins
lahf
jbe
inc
test
and
pusha
inc
mov
xor
adc
push
inc
pop
repnz
push
jmp
lahf
cli
pop
mov
pop
push
xchg
(bad)
pop
and
scas
pop
test
mov
pusha
mov
adc
sub
pop
(bad)
sub
loope
stos
ins
mov
xlat
dec
arpl
mov
rcr
fistp
das
sub
jle
bnd
pop
and
push
sar
das
scas
out
lds
test
jmp
in
jno
pusha
cmp
dec
pop
or
ficom
loope
aas
aaa
loop
(bad)
push
push
lods
gs
les
int3
int3
or
mov
add
fwait
sbb
inc
inc
int
mov
gs
mov
in
push
shl
sub
dec
mov
jmp
out
pop
jmp
and
lea
mov
stc
aad
dec
daa
mov
xor
mov
iret
(bad)
lahf
int
cmp
popa
movs
or
jae
sub
lods
not
popa
mov
sbb
cmp
gs
and
mov
jle
jne
adc
cmps
adc
mov
pushf
leave
adc
pop
cmp
icebp
popa
or
sbb
gs
daa
add
pop
or
push
mov
fmul
and
icebp
pop
mov
push
cmp
mov
outs
lds
lds
cmp
lahf
push
sahf
jl
mov
mov
mov
retf
repnz
sbb
add
aad
xor
mov
push
mov
mov
cli
xchg
outs
jne
jp
mov
mov
push
xor
add
sub
arpl
jae
xor
cmp
repnz
out
push
ins
les
sbb
sar
push
mov
das
jmp
dec
cli
mov
or
push
mov
pushf
mov
mov
in
outs
repnz
fcmovu
aam
and
fwait
xchg
scas
mov
frstor
jmp
jbe
stc
and
mov
mov
pusha
aas
rcl
(bad)
enter
add
fs
cmp
dec
xor
arpl
xor
nop
mov
mov
int3
dec
pusha
outs
daa
sti
loope
mov
xchg
sub
adc
and
jbe
loopne
cmp
test
test
nop
jl
pop
xchg
outs
in
add
imul
jle
mov
mov
mov
jge
repnz
xlat
pop
sbb
sub
mov
fcmovnu
popf
mov
push
mov
mov
push
or
push
aam
fmulp
xchg
push
cdq
cdq
in
rol
cmp
add
dec
sub
mov
repz
je
cmc
retf
clc
aas
dec
dec
neg
add
movs
fs
jecxz
push
xchg
push
sub
(bad)
stc
shl
dec
pop
adc
imul
ret
(bad)
adc
sbb
aad
xchg
cmps
shr
xchg
popa
sbb
pop
mov
inc
shl
enter
lds
hlt
rcr
pop
das
cmp
pop
sub
dec
sbb
movs
je
mov
xor
xor
mov
aas
xchg
ret
xor
fs
mov
leave
loop
mov
jmp
dec
jecxz
cs
ins
fwait
push
in
add
pop
enter
lock
jo
mov
adc
fidiv
adc
xor
sub
pop
test
pushf
jae
jae
cs
xchg
xlat
aad
push
push
pop
(bad)
popf
mov
add
xlat
push
mov
jecxz
pop
cmp
lods
shl
push
bound
pop
loop
cmp
aas
push
shl
sti
in
(bad)
imul
cmp
pop
dec
scas
ret
cmps
jbe
pop
adc
iret
lea
push
(bad)
fadd
cmp
int
mov
push
mov
xor
lds
hlt
jbe
mov
or
mov
mov
jns
aas
rcr
dec
adc
cs
xor
pop
retf
sahf
test
xor
adc
inc
arpl
test
iret
mov
popa
xor
push
and
jge
add
lea
scas
lods
repnz
in
cmps
fdiv
int
sub
retf
loopne
cdq
cs
(bad)
xchg
xchg
add
sbb
loope
inc
add
std
lahf
sbb
ja
pop
add
and
mov
xchg
hlt
xor
ins
aam
mov
aad
mov
es
jg
sbb
push
ins
repnz
or
(bad)
cmp
(bad)
hlt
pop
fs
in
sti
das
pminub
fwait
xor
scas
movs
sti
in
pop
fwait
add
idiv
nop
xor
out
je
pushf
cmp
add
inc
pop
out
inc
leave
ficom
hlt
mov
cs
mov
mov
push
shr
cmp
ror
dec
xchg
jns
or
pusha
add
idiv
cmp
sbb
push
sahf
aas
sub
cmp
aad
lahf
leave
cmps
scas
xor
xchg
rcl
je
dec
push
sub
ret
outs
dec
sbb
inc
sbb
sbb
das
xlat
outs
stc
stos
sbb
push
shl
mov
sti
adc
mov
mov
lods
xchg
cmp
xchg
daa
xlat
stos
push
scas
scas
imul
loope
xchg
push
xor
jmp
outs
out
out
gs
mov
mov
into
or
xchg
(bad)
or
add
push
cld
aaa
pop
dec
stos
or
inc
xor
and
adc
jbe
or
xor
sti
ret
mov
sbb
mov
rcr
add
test
dec
pop
mov
fmul
rcl
pop
xchg
jg
jg
pop
loope
jbe
ss
imul
lds
js
xchg
aas
std
xchg
dec
rol
xchg
sar
or
push
sti
dec
and
dec
fiadd
sub
imul
mov
jb
jg
call
int3
push
and
call
and
dec
nop
push
outs
rcr
pop
shld
jns
scas
xchg
mov
test
cmp
loope
popf
pop
xchg
dec
sbb
(bad)
(bad)
shl
inc
sub
ins
std
hlt
bound
shl
imul
movs
(bad)
ins
cmp
xor
fsub
adc
retf
jge
push
sbb
popf
xor
shl
add
sbb
cmp
mov
add
not
fisttp
(bad)
mov
ins
fild
pusha
ds
pop
push
ss
call
xchg
adc
out
xor
mov
gs
movs
(bad)
push
xchg
fimul
daa
and
ss
and
xlat
inc
jp
mov
loopne
pop
cdq
jl
icebp
outs
push
sbb
bound
push
hlt
les
xchg
push
adc
mov
pop
mov
inc
movs
loopne
test
sub
fadd
ins
repnz
xchg
aaa
cmp
xchg
test
frstor
out
aaa
sbb
mov
sub
adc
pop
or
mov
movs
ins
inc
nop
int
fidiv
loope
(bad)
(bad)
call
add
imul
sar
pop
jo
pop
jbe
into
fdiv
xor
mov
enter
stc
push
imul
loop
out
shl
jmp
mov
(bad)
jg
mov
xlat
mov
into
rcr
(bad)
or
and
pushf
sub
sub
jmp
xchg
sti
or
sti
scas
enter
aad
pop
cmc
aam
idiv
jbe
adc
fist
cmp
mov
daa
inc
gs
dec
adc
mov
dec
fdiv
pop
xor
adc
add
cmp
xchg
push
xchg
pop
nop
daa
inc
pusha
xchg
scas
mov
inc
cmc
aas
push
mov
fst
and
cli
lock
xchg
fwait
dec
in
fs
jae
push
and
cmc
pop
or
div
sahf
inc
imul
mov
stos
push
jns
and
jl
xor
aad
xor
aaa
in
dec
inc
mov
sub
inc
add
popf
adc
pop
inc
xchg
mov
mov
jl
aad
mov
outs
into
inc
push
aad
scas
ror
cmps
pop
push
xor
xchg
out
cld
dec
pop
push
xchg
cmps
les
es
xor
stos
dec
push
push
iret
sub
test
bound
(bad)
jecxz
cmp
fistp
dec
mov
push
push
sub
iret
and
jnp
ja
sbb
push
loop
mov
arpl
jae
xor
(bad)
mov
idiv
fisub
addr16
dec
cli
pop
xor
push
xchg
pop
pop
stos
pop
in
xlat
shr
mov
pop
adc
mov
dec
push
adc
movs
add
call
sbb
sti
inc
cmps
xchg
movs
outs
jle
icebp
fs
cmps
sbb
aad
inc
mov
and
data16
or
popf
push
shr
js
push
cmp
cwde
fld
jmp
movs
in
adc
inc
popa
xor
mov
xchg
stc
sbb
cmc
push
push
sbb
mov
shr
addr16
xchg
outs
xchg
adc
dec
cdq
or
cmp
pop
mov
fidivr
gs
popa
xor
push
dec
cmp
cmp
xor
fcom
sub
and
jmp
add
into
mov
and
cmp
fmul
dec
sub
jg
sub
mov
test
ja
pushf
loopne
cmps
xor
dec
out
inc
add
xchg
xor
or
sub
stc
mov
(bad)
out
or
cmps
test
out
mov
jge
mov
out
adc
in
sub
xchg
sub
sub
jp
sub
outs
xor
stc
ds
push
adc
cmc
gs
arpl
adc
dec
aas
lock
test
inc
adc
jmp
stc
aas
ret
ret
imul
mov
add
inc
fisttp
scas
mov
idiv
adc
loope
or
xchg
retf
les
sbb
addr16
mov
lock
sbb
das
(bad)
mov
aam
sub
mov
jecxz
ja
enter
mov
lahf
pop
sbb
inc
xchg
lds
sub
add
sbb
sub
cmp
dec
stc
loope
cmp
xor
retf
fwait
xchg
sub
xchg
and
in
push
movs
mov
push
adc
bound
or
mov
add
pop
shr
outs
jmp
xlat
dec
jns
js
push
jmp
dec
hlt
jns
movs
sub
iret
sbb
jle
mov
ds
lea
movs
scas
xchg
and
mov
cmps
and
jbe
test
and
int
jl
(bad)
(bad)
call
scas
jmp
add
mov
or
or
and
add
les
imul
jmp
cdq
mov
mov
adc
dec
shl
je
cli
add
push
mov
pop
addr16
(bad)
leave
out
inc
popa
in
add
sub
push
mov
jmp
ret
nop
movs
retf
ret
mov
add
xor
xchg
pop
dec
cmp
lds
test
xchg
pop
xchg
fst
enter
mov
aad
and
out
pop
adc
adc
sahf
retf
(bad)
jbe
inc
add
push
in
rcr
push
call
inc
outs
jmp
or
aam
test
ret
mov
retf
shl
dec
mov
sbb
div
mov
fdivr
pop
out
jp
mov
out
mov
stc
xor
mov
mov
cmp
cmps
xorps
pop
sbb
daa
or
add
push
pushf
mov
mov
push
xor
call
popa
repz
mov
or
lods
jb
cdq
ss
inc
and
aam
cmc
sub
popf
mov
jns
shl
jnp
pop
push
sbb
adc
sahf
xchg
add
adc
inc
out
shl
lea
arpl
mov
out
xchg
pop
jb
ret
jae
push
add
cmp
sbb
hlt
shl
fcmovbe
cdq
xor
push
daa
xchg
hlt
mov
pop
sar
shl
in
jmp
ret
into
outs
adc
push
int3
retf
dec
xchg
fbld
push
scas
out
mov
mov
dec
pop
imul
dec
pop
es
sub
call
fistp
push
in
adc
pusha
ins
xchg
sbb
push
das
sbb
cmp
dec
and
xor
imul
daa
pop
push
mov
add
lock
push
pop
inc
mov
adc
inc
inc
cmps
jnp
adc
cdq
(bad)
push
mov
pop
pop
mov
lea
dec
imul
repz
loop
dec
(bad)
pusha
cld
jg
sub
sub
jno
test
ins
ins
and
cdq
push
mov
jnp
mov
cmp
and
push
repz
pop
aad
push
mov
cmp
enter
cmps
adc
mov
pop
adc
mov
xchg
aaa
push
repz
dec
dec
jne
push
enter
mov
(bad)
pushf
mul
jnp
mov
mov
jno
cmp
add
loopne
mov
and
cmc
add
aas
dec
and
test
out
xchg
push
inc
jmp
xchg
cs
lock
jo
rcl
xor
(bad)
mov
loopne
in
mov
xchg
sub
xor
cmp
or
xchg
jae
pop
push
push
sub
push
xchg
and
iret
jne
jge
in
fsubr
pop
pop
pusha
bound
mov
push
cwde
adc
xor
lea
pop
or
dec
imul
cmps
stos
jno
xor
jmp
fwait
inc
sti
dec
lock
inc
mov
loop
mov
movs
(bad)
jo
out
dec
ror
out
aaa
add
cmps
fst
mov
ins
pop
out
loope
mov
mov
sbb
es
hlt
loope
add
xchg
les
fistp
cmps
mov
inc
push
push
or
in
retf
mov
dec
cli
dec
sbb
jmp
fst
cdq
call
fisttp
and
sub
xchg
shr
mov
jne
sets
test
sti
inc
ror
cwde
or
movs
jmp
daa
sbb
push
sub
(bad)
out
adc
fs
add
mov
fcomp
jne
add
xchg
in
shl
int3
pushw
xchg
loopne
cs
pop
jne
jle
mov
jbe
mov
or
pop
not
into
adc
push
call
or
mov
sbb
gs
mov
xchg
xchg
mov
jp
sbb
stc
mov
mov
push
sbb
aaa
sub
sbb
and
les
mov
and
mov
in
mov
jnp
mov
and
add
inc
bnd
mov
int3
mov
mov
push
ja
dec
mov
or
ret
in
jmp
jge
or
lds
push
(bad)
jl
cli
xchg
push
mov
in
xor
mov
mov
jg
cmps
ins
mov
lods
mov
imul
and
sahf
dec
lds
hlt
mov
test
mov
retf
popf
mov
jo
mov
mov
in
js
out
mov
jmp
add
push
jle
lods
and
sar
dec
fdiv
xor
cs
xor
popf
popf
xlat
into
inc
pop
cwde
int3
or
jae
push
lea
jo
std
cmp
and
mov
sub
and
and
and
mov
add
ss
push
bound
mov
(bad)
xchg
xchg
and
mov
sub
repnz
lods
addr16
into
popf
inc
fwait
sar
daa
bound
in
test
cmps
jge
mov
int
idiv
gs
jge
leave
lock
rcr
or
shl
nop
movs
jb
mov
scas
mov
fdiv
pop
jp
mov
push
dec
jge
jnp
xor
cdq
test
out
mov
and
fistp
pushf
out
or
inc
cmp
fwait
sbb
sub
aam
jo
jecxz
push
fist
dec
or
xlat
jo
shr
outs
aad
rol
pop
movs
push
leave
call
cmps
retf
and
inc
mov
or
outs
(bad)
dec
sub
fidiv
push
imul
xchg
gs
and
(bad)
ret
cmp
in
adc
sbb
and
sbb
xor
shl
hlt
aaa
loopne
sub
xor
imul
dec
mov
test
gs
xor
inc
dec
xchg
cmp
neg
add
dec
mov
cwde
sar
ret
fcom
xchg
fistp
mov
push
(bad)
je
mov
fs
bound
test
add
mov
sub
sbb
aad
sub
sub
xor
retf
(bad)
cmp
cmps
mov
mov
std
jnp
add
icebp
push
jb
(bad)
call
mov
hlt
jae
frstor
ret
les
cwde
test
xchg
push
pop
add
ds
in
pushf
adc
mov
out
or
scas
stc
pushf
xchg
inc
in
out
sub
repnz
dec
retf
dec
mov
iret
dec
mov
ins
jmp
xchg
clc
rcl
mov
push
daa
test
jno
lock
movs
movs
cmc
pushf
inc
outs
call
and
jl
mov
fld
jle
retf
mov
cli
push
mov
aam
test
mov
mov
pop
cmps
push
pop
js
inc
mov
test
fidiv
dec
shl
daa
loopne
xor
push
imul
popf
inc
and
push
ficomp
movs
mul
pop
arpl
gs
cmc
fwait
nop
fild
test
sbb
int3
pop
pop
jmp
xchg
xchg
mov
sbb
jmp
inc
inc
sub
gs
mov
dec
pop
in
je
mov
into
mov
xchg
xchg
push
mov
add
int3
outs
cmp
push
lea
(bad)
scas
outs
push
mov
sub
sahf
mov
mov
out
cli
xchg
repz
add
mov
rcr
out
and
lock
dec
nop
pop
rcr
mov
add
inc
call
(bad)
retf
mov
add
fidivr
or
repz
into
loop
cmps
inc
vandnpd
fs
ficom
sub
dec
push
mov
(bad)
popa
jl
test
add
ss
dec
out
xchg
push
lea
popa
sub
scas
es
test
scas
mov
loope
enter
sbb
movs
pop
xchg
leave
adc
lods
xchg
test
fldcw
test
xchg
sar
xchg
xor
fwait
jp
cmp
jp
jnp
(bad)
into
in
jle
sub
push
rcr
push
aad
jbe
xchg
dec
xchg
dec
(bad)
adc
outs
lds
jp
pop
int
cmp
xor
fwait
outs
adc
(bad)
cmp
pop
call
jmp
fild
pop
cmps
sar
mov
int3
fcomip
mov
add
mov
es
imul
xchg
test
mov
test
pop
mov
adc
xchg
push
cmps
cs
xchg
inc
sub
je
jno
sahf
lahf
push
adc
ja
stos
push
iret
and
cdq
lahf
retf
mov
pushf
jae
push
cmp
adc
pop
outs
or
imul
jle
leave
ficom
aaa
inc
imul
icebp
mov
popa
xor
xchg
sub
inc
das
sub
pop
mov
xor
mov
ja
add
jb
fwait
pop
dec
movs
popa
xor
jae
icebp
mov
adc
push
fcmovnu
xor
and
cdq
adc
jns
out
cmp
sar
xchg
loop
jp
fcmovb
and
loopne
push
repz
mov
push
dec
jae
sahf
adc
xchg
stc
sbb
xchg
jle
fld
fist
jbe
jnp
int
shl
or
shl
sbb
pop
push
sbb
pop
xchg
repz
inc
out
sti
push
adc
es
xchg
push
xchg
clc
adc
enter
fld
add
std
jle
sbb
xor
push
sbb
and
jae
push
(bad)
push
inc
mov
je
and
ret
push
test
lea
mov
mov
jg
cmps
or
out
mul
mov
inc
jmp
push
fiadd
aam
leave
inc
or
mov
sub
test
test
push
test
mov
shl
pushf
add
mov
addr16
and
pop
sub
mov
sahf
fld
adc
js
inc
mov
jecxz
dec
jae
xchg
lods
inc
dec
ss
arpl
and
(bad)
mov
jmp
fwait
push
sub
nop
imul
xchg
arpl
test
jle
cs
das
call
not
cmps
in
mov
xor
add
inc
sbb
adc
(bad)
shr
mov
hlt
(bad)
out
lahf
icebp
daa
pop
or
pop
jmp
xchg
ins
test
out
and
(bad)
out
inc
sub
(bad)
sub
not
into
add
dec
xchg
ficomp
mov
scas
jmp
jo
gs
mov
xchg
je
movs
and
jmp
out
adc
sti
vaddsubps
cmp
ret
or
and
out
ret
xor
sbb
mov
stos
std
cs
sbb
mov
fwait
inc
das
mov
jb
adc
dec
cmc
add
hlt
mov
pop
int3
push
jnp
mov
adc
test
cmp
xchg
mov
adc
push
iret
sbb
shr
daa
cmp
lods
adc
cmp
adc
(bad)
int
hlt
into
lods
retf
add
or
ins
enter
jecxz
std
fs
and
fld
jb
mov
push
cmc
fld
jl
pop
adc
shr
sub
mov
jg
mov
adc
mov
push
pop
outs
dec
mov
pop
ds
push
test
cmp
push
add
arpl
dec
out
fsub
jbe
dec
in
lahf
and
add
inc
in
mov
xor
daa
mov
add
loope
dec
mov
add
in
or
mov
adc
push
mov
adc
neg
mov
jno
mov
bnd
sahf
push
dec
lock
(bad)
jne
add
push
mov
xor
mov
jae
cmp
(bad)
inc
in
dec
imul
jmp
mov
or
leave
dec
or
jnp
adc
ins
inc
test
test
pop
mov
xchg
dec
pop
popa
out
jae
ficom
pop
pop
clc
push
cmps
je
iret
(bad)
adc
pop
ss
rol
and
fnsave
rcl
cdq
nop
or
xchg
adc
nop
mov
mov
mov
pop
jns
xlat
lods
inc
jb
sbb
cmp
stc
adc
imul
cmp
xor
and
call
lea
movs
adc
(bad)
dec
loope
test
rol
aas
xor
cmp
inc
and
xchg
inc
lock
jnp
clc
or
and
push
outs
xchg
cmp
sbb
mov
pop
clc
(bad)
push
sbb
jge
pop
scas
idiv
mov
adc
fidiv
xlat
jo
jg
ret
scas
jmp
or
in
push
pop
sub
add
mov
sbb
ins
dec
adc
mov
jb
push
jecxz
sbb
ret
jns
cld
lea
out
scas
mov
xchg
in
jns
adc
mov
jge
push
jmp
pop
adc
xor
and
mov
in
aas
in
lea
retf
mov
stos
jl
push
push
mov
leave
daa
mov
aas
adc
popf
jp
jg
dec
pop
dec
xchg
pop
mov
fistp
mov
xchg
adc
cwde
xor
cmps
sbb
jae
popf
aam
sti
out
popf
into
add
jo
scas
push
ficom
push
out
shl
inc
or
sti
dec
push
push
movq
lds
fsubr
movs
xchg
fwait
dec
cmp
stos
pop
pop
or
fcomip
cmps
cwde
jno
add
jne
rcr
rol
jecxz
xchg
fidivr
sbb
icebp
dec
adc
pop
push
fbld
les
push
jmp
adc
lahf
mov
imul
mov
pop
adc
push
xchg
sub
je
ror
sti
repz
jnp
(bad)
jge
dec
mov
out
inc
cmps
jo
cmp
in
out
pop
repz
xor
push
or
dec
aad
sbb
(bad)
or
pop
cmp
mov
and
out
adc
adc
cmps
test
adc
push
rcr
(bad)
mov
repz
test
pop
mov
pop
dec
ret
bound
test
jbe
imul
inc
das
icebp
mov
in
and
mov
sti
inc
stos
and
push
ds
das
icebp
or
enter
(bad)
aam
movs
in
jge
hlt
movs
or
cld
shl
sbb
sbb
fistp
cmp
xchg
push
push
jne
pop
pop
dec
addr16
and
in
imul
xchg
mov
aaa
jb
xlat
pop
mov
sub
or
adc
push
pop
xchg
cmp
ins
xchg
ror
push
xlat
gs
mov
ja
push
retf
loope
retf
push
or
mov
ret
nop
xbegin
cli
icebp
loop
cmps
aaa
movs
jne
shr
inc
jp
xchg
inc
cmp
in
ss
cmc
push
int3
xchg
int3
and
popf
ja
and
mov
xlat
or
xor
in
inc
xor
inc
dec
jmp
ret
mov
sbb
(bad)
pop
test
pop
dec
nop
fstp
lods
sar
mov
cmp
(bad)
or
jo
outs
test
cmp
scas
stos
call
or
push
dec
das
dec
sub
add
lods
repz
adc
stos
enter
fsincos
les
cdq
xlat
sbb
xchg
add
int3
inc
xor
in
dec
push
ins
vcvtss2si
out
sbb
inc
sbb
fcom
jno
mov
outs
fiadd
fcomi
mov
test
ja
(bad)
shl
call
pop
pop
and
sbb
pop
popa
dec
fisubr
stos
aas
sub
(bad)
leave
and
daa
and
xor
xchg
retf
pop
push
xor
js
pop
jbe
adc
mov
dec
mov
mov
int3
and
jmp
nop
sbb
fcmovnu
mov
(bad)
mov
lock
fwait
lods
jne
jge
mov
cmp
ss
pop
rcr
xlat
vpsrlw
inc
cs
repnz
(bad)
jg
(bad)
jecxz
cwde
aad
les
sahf
js
test
es
sub
shr
adc
fsubr
sahf
dec
neg
dec
inc
scas
retf
test
adc
cmp
jno
mov
dec
xor
into
and
xchg
aam
and
push
dec
imul
mov
adc
ss
(bad)
sub
ins
std
jb
daa
xor
mov
adc
out
xor
push
jne
jne
sbb
jb
int3
push
xchg
loopne
jl
icebp
in
and
loopne
xchg
std
ret
jl
jmp
imul
bound
mov
and
adc
call
sbb
repnz
push
cwde
add
mov
push
mov
cmp
int
fld
inc
and
jo
nop
shl
sub
sti
in
dec
pop
or
shr
xlat
ficomp
xor
dec
pop
pop
arpl
pusha
pop
test
mov
pushf
xor
jge
ins
movs
cmp
dec
cwde
cmps
mov
dec
adc
mov
daa
ret
mov
inc
push
movs
mov
jg
test
cs
mov
mov
rcr
in
xor
(bad)
das
add
loope
cdq
pop
cmp
sbb
push
out
adc
or
cld
add
push
test
lea
mov
int
xor
mov
dec
add
mov
or
mov
imul
and
push
repnz
inc
in
movs
nop
bound
fwait
clc
xchg
scas
addr16
les
neg
xchg
fwait
pop
mov
int3
mov
and
into
call
daa
cmp
sub
call
jae
adc
stc
clc
xchg
mov
(bad)
mov
adc
lods
adc
(bad)
je
ficom
outs
pusha
xor
push
sbb
jg
es
jbe
(bad)
sti
push
pop
ins
in
and
das
(bad)
cli
fcomi
or
mov
or
pop
into
mov
pop
(bad)
jbe
in
mov
inc
and
loop
adc
adc
dec
push
xchg
inc
fisubr
addr16
movs
push
mov
jno
(bad)
mov
xchg
sbb
(bad)
mov
mov
fcomip
dec
ret
sbb
jnp
pop
scas
test
or
retf
mov
ds
mov
sub
loopne
dec
xchg
push
mov
push
xchg
push
mov
sub
xor
and
das
jnp
int3
stos
jge
xor
hlt
lock
in
or
and
ss
jecxz
clc
rol
fnstenv
cmp
mov
push
sub
cld
jmp
pop
nop
sbb
sti
add
mov
or
sub
or
xchg
jmp
out
inc
xchg
out
mov
jne
cmp
inc
xchg
mov
adc
aaa
hlt
jle
jo
add
imul
xor
cmp
aam
and
xor
jmp
shl
sub
or
or
and
mov
pop
fsubr
or
int3
adc
cmp
fisttp
and
cmps
or
cmp
sbb
nop
sub
push
mov
pop
and
sub
retf
data16
cmp
push
lock
mov
cmp
stc
in
adc
and
inc
mov
cvtps2pd
gs
and
fcmovnbe
shr
std
jo
xchg
mov
sub
adc
aaa
stc
xchg
jl
or
cmps
out
or
or
inc
sbb
sub
or
ss
sbb
cmp
out
gs
cmc
dec
pushf
xchg
xchg
jae
xor
jle
push
fstp
(bad)
scas
xchg
jmp
and
call
psubsw
and
or
mov
jmp
arpl
adc
xchg
cld
test
xor
imul
aaa
imul
inc
sahf
sahf
popf
sbb
ret
(bad)
retf
or
rol
aaa
(bad)
std
mov
sub
movs
scas
mov
rol
fiadd
pop
and
std
push
shl
dec
push
jae
cmp
push
sahf
shl
(bad)
call
fcmovnu
cwde
pushf
mov
push
repnz
jg
leave
pop
push
mov
lahf
imul
inc
jecxz
pop
lds
mov
pop
add
mov
adc
jno
mov
xor
in
mov
pop
add
rcl
mov
pop
int
jmp
mov
mov
pop
xor
pushf
push
add
inc
adc
cmp
dec
mov
push
mul
jecxz
addr16
push
imul
mov
out
popa
sbb
shr
cld
hlt
cmp
push
lods
jl
out
xchg
and
lods
icebp
mov
retf
cmp
sbb
mov
adc
cs
mov
mov
or
sbb
cmp
dec
enter
cmps
movs
or
or
push
jmp
pop
popf
or
test
in
aam
mov
clc
sti
test
add
shl
adc
shl
(bad)
dec
(bad)
xor
inc
pop
mov
sbb
push
aam
jns
xor
mov
dec
adc
bound
aaa
scas
aad
ret
shl
test
mov
popf
pop
push
mov
push
test
fwait
push
cwde
movs
test
(bad)
icebp
fsubr
(bad)
sbb
imul
xor
pop
jo
repnz
cmp
cwde
lods
mov
daa
push
cmps
or
leave
mov
je
int3
xor
mov
jae
jne
outs
adc
and
rcr
div
push
push
pushf
mov
fst
dec
repnz
outs
and
xor
in
xchg
inc
jmp
mov
shl
inc
sbb
sbb
mov
inc
cmp
in
pop
lahf
jo
push
mov
sahf
imul
adc
add
in
fstp
push
or
daa
and
adc
add
inc
dec
(bad)
xchg
inc
repnz
popf
fdiv
push
cmp
sub
out
movs
(bad)
ficom
call
adc
mov
iret
add
inc
out
inc
ins
pop
enter
cdq
ret
inc
loopne
rcl
cwde
lea
shr
inc
and
int3
or
or
(bad)
call
and
(bad)
in
popa
scas
sub
mov
push
add
push
cli
stos
dec
xor
jmp
out
or
ret
xor
mov
pop
cli
test
loopne
aam
xchg
fs
pop
mov
out
retf
pop
and
gs
das
data16
or
addr16
mov
inc
push
rcl
inc
jle
or
leave
xchg
int
or
stc
outs
ret
add
or
jmp
inc
out
icebp
arpl
push
rol
sar
aad
popf
int3
pusha
(bad)
out
sbb
bnd
cwde
cld
xchg
psubd
ret
ret
pusha
shl
cld
cmp
in
adc
aas
shr
jbe
jge
jecxz
mov
fstp
faddp
and
or
into
adc
sub
cmps
add
pop
jb
and
push
and
and
pop
add
pop
cdq
mov
les
into
fmul
fwait
add
inc
push
out
sub
loopne
shr
test
(bad)
(bad)
push
jl
mov
jb
inc
movs
ret
les
cld
jecxz
arpl
adc
lods
hlt
int
clc
mov
(bad)
mov
pop
lods
and
adc
in
lods
or
push
int3
scas
out
gs
xlat
test
ds
xor
and
adc
icebp
cmps
add
ret
inc
push
les
sbb
sub
iret
out
jge
sbb
or
sbb
jg
js
icebp
lods
retf
add
xor
retf
push
jno
sbb
mov
stc
push
shl
(bad)
outs
xchg
jge
cmps
lahf
in
out
jne
sbb
jnp
push
push
push
dec
sbb
ret
dec
aad
inc
dec
adc
adc
fidiv
popa
jmp
mov
pause
mov
aad
pushf
int
cmps
mov
enter
add
(bad)
mov
push
sbb
mov
sar
inc
int3
cmp
xor
out
pop
mov
imul
inc
mov
mov
sub
pop
stos
push
push
and
shr
aam
fisub
xchg
lods
fdivr
les
iret
shl
call
(bad)
jno
mov
push
repnz
and
fiadd
push
or
and
(bad)
adc
pop
fwait
bound
sbb
lods
sub
cmp
add
push
or
xchg
lds
add
cmps
cmp
mov
ins
icebp
mov
loop
sbb
push
jecxz
scas
xor
das
fs
jnp
mov
inc
sbb
jp
or
(bad)
ror
push
push
icebp
(bad)
jp
mov
jmp
mov
out
fisub
add
nop
xor
xlat
test
pop
push
outs
in
movs
fcmove
pop
inc
cmp
pop
lea
mov
push
jmp
dec
pop
(bad)
adc
cld
push
paddb
cmp
mov
cmps
sbb
sahf
pop
mov
test
test
out
or
aad
bound
je
fild
inc
mov
rcr
jmp
or
jp
jecxz
arpl
mov
inc
mov
rcr
jmp
pop
out
mov
cwde
jbe
inc
aaa
inc
dec
mov
jmp
and
mov
fs
jbe
loop
cdq
dec
fwait
xchg
fimul
lock
add
cmp
aas
js
sub
add
loope
pop
xchg
and
push
xchg
out
mov
push
mov
adc
push
lock
cdq
into
fnstenv
daa
xlat
ja
mov
in
push
lock
aad
shl
push
xchg
or
div
xchg
cmps
or
leave
mov
fs
loopne
and
cmp
jecxz
ror
xchg
xchg
dec
dec
mov
daa
add
adc
(bad)
sti
idiv
pop
jmp
xor
(bad)
add
push
xor
test
dec
mov
sbb
adc
(bad)
push
xor
test
fidiv
add
ret
jb
scas
data16
inc
fmul
jae
rcl
scas
fidiv
or
sbb
adc
cmp
sbb
jmp
adc
jns
jmp
int
or
test
addr16
fiadd
imul
mov
lea
(bad)
mov
loope
fstp
xchg
push
sub
std
movs
pop
cmp
je
mov
aaa
xchg
inc
add
and
stc
(bad)
jb
pop
add
dec
xor
cld
sbb
push
imul
sbb
stos
jge
xor
clc
or
xor
push
cmps
jge
pop
xlat
in
mov
jbe
jnp
or
xchg
popf
jae
mov
jmp
jecxz
into
or
jmp
mov
sub
outs
xchg
add
fs
fiadd
shr
stos
aaa
pop
mov
mov
loop
inc
ins
sub
mov
stos
jo
fwait
(bad)
scas
xor
push
shl
les
push
jp
lea
adc
mov
in
icebp
neg
and
scas
fstp
sub
ss
xor
cmp
cmp
pop
add
xchg
ins
dec
push
mov
and
inc
lods
jnp
push
sahf
or
mov
and
jb
retf
mov
push
pop
inc
into
loope
arpl
push
test
mov
mov
cmp
rcr
outs
jae
shl
jnp
(bad)
jno
ret
dec
fsubr
cmp
pop
pop
ficom
xchg
loopne
push
repz
mov
or
jnp
push
adc
iret
xor
ins
jae
dec
push
scas
jecxz
les
and
pop
inc
mov
imul
cli
(bad)
into
and
aaa
mov
std
push
add
sub
test
ja
lock
shr
es
jae
jnp
popa
xchg
mov
iret
enter
pop
mov
xchg
test
ret
addr16
mov
mov
cdq
jmp
fwait
(bad)
cmp
cmp
mov
push
out
std
mov
cmp
jne
dec
leave
push
or
inc
adc
or
jmp
(bad)
adc
mov
and
inc
sti
push
(bad)
push
jp
aaa
jno
int
or
push
lock
inc
mov
popa
stos
out
pop
popf
mov
iret
mov
jmp
fsubr
dec
aas
xlat
xor
(bad)
(bad)
call
rcl
jg
(bad)
hlt
mov
cwde
and
out
adc
mov
ret
retf
retf
imul
aaa
lea
dec
pop
cmp
test
xchg
dec
inc
nop
dec
jbe
es
mov
lds
mov
shl
out
retf
or
jge
(bad)
or
inc
dec
sub
div
mov
scas
pop
ffree
mov
cmp
je
mov
and
daa
cmps
push
les
(bad)
(bad)
imul
mov
mov
mov
dec
inc
push
adc
cmp
lea
aas
aas
xchg
jge
mov
pop
arpl
xlat
sahf
addr16
popa
jg
sbb
sub
or
sbb
daa
push
(bad)
jno
out
shl
aad
pop
repz
push
xchg
imul
and
mov
repnz
fwait
lock
icebp
mov
xchg
stos
xchg
cld
pop
shl
(bad)
adc
aaa
add
xor
adc
cmp
cs
mov
push
mov
sub
(bad)
cld
pop
xor
sub
push
push
push
cmps
out
push
mov
add
pop
shr
aam
sub
lds
mov
test
imul
xchg
movs
xchg
in
shl
pop
loope
cwde
icebp
mov
sub
mov
cmc
inc
mov
fild
pop
inc
inc
popa
cmp
bound
sar
ins
iret
push
adc
aaa
das
sub
cdq
(bad)
xchg
sbb
mov
leave
pop
(bad)
repz
sbb
mov
fwait
lahf
(bad)
enter
adc
mov
aas
andnps
or
rcl
adc
stos
jecxz
xchg
dec
mov
xchg
(bad)
dec
adc
inc
push
fild
fwait
or
xor
sub
sar
dec
into
ins
adc
sbb
inc
push
adc
mov
repnz
sbb
adc
lods
mov
mov
(bad)
xchg
fiadd
inc
sbb
and
pop
(bad)
jno
cmps
cmc
dec
mov
mov
add
sahf
fdivr
fcmovu
ins
shr
enter
and
cdq
shl
mov
retf
or
mov
fsub
or
rol
std
ss
fst
aaa
inc
jecxz
fnstcw
fbld
dec
adc
lahf
repz
fs
out
es
jo
outs
mov
rol
cld
push
sub
jmp
mov
lahf
sub
sbb
out
jge
cli
sahf
in
nop
cli
adc
xor
mov
sahf
inc
jns
fmul
mov
or
jbe
imul
jne
shr
aas
ja
jmp
pop
jnp
repnz
xor
hlt
aam
push
add
dec
cmps
dec
mov
push
ds
xor
int3
rol
data16
lahf
push
(bad)
call
fwait
jne
push
mov
mov
aas
int3
mov
les
jg
or
fild
cmp
inc
mov
pusha
cmp
inc
or
mov
mov
in
push
test
xor
inc
mov
cmps
cmp
imul
test
addr16
push
mov
retf
scas
jo
push
dec
mov
(bad)
retf
xor
xor
(bad)
cmc
mov
rcl
out
push
in
sti
int
xchg
adc
adc
dec
test
retfw
repz
xchg
ja
jae
pop
sbb
popa
sti
adc
mov
add
xchg
pushf
push
sub
adc
jnp
xchg
inc
adc
mov
enter
jbe
addr16
icebp
rol
push
aaa
(bad)
add
xchg
(bad)
dec
dec
out
out
jo
pop
std
sbb
aas
imul
fwait
mov
inc
mov
jge
mov
in
aam
in
loope
xor
data16
loopne
push
popf
lds
sbb
cmc
push
loopne
and
imul
dec
es
imul
inc
int
aaa
jne
ficomp
rol
adc
scas
xchg
popfw
jmp
cmp
adc
jmp
push
jbe
test
mov
inc
mov
xchg
shr
loopne
xchg
mov
std
mov
mov
cmp
into
retf
jne
inc
fisubr
hlt
test
pop
xor
icebp
enter
xor
cli
add
mov
fidivr
scas
xor
push
and
pop
int
xchg
mov
xchg
or
scas
call
push
sbb
inc
xchg
dec
mov
dec
sub
xchg
jecxz
cmp
jle
mov
xchg
xchg
(bad)
mov
mov
call
mov
pushf
mov
push
mov
in
or
retf
sub
cmpxchg
fsub
sub
sub
lahf
fild
add
dec
les
cmc
js
or
shl
aas
jle
cmp
mov
xor
sbb
push
sbb
sub
stos
adc
add
mul
push
sbb
mov
jecxz
sbb
sbb
sub
mov
sub
push
repz
stc
lods
dec
cmp
mov
or
pop
mov
xchg
sbb
repnz
jns
dec
ins
lea
mov
push
push
fstp
pop
outs
jp
imul
mov
sub
pop
xchg
cld
jb
push
in
test
xor
cmp
leave
gs
dec
cmp
imul
jns
dec
jae
xor
into
(bad)
jp
xchg
add
addr16
ja
sbb
pushf
adc
ja
lods
out
aas
(bad)
fxch
push
scas
jge
dec
xlat
pusha
mov
nop
leave
mov
cmp
jo
sub
push
cli
movs
jge
fidiv
ffree
hlt
out
and
jl
dec
inc
shl
cmp
push
loopne
shr
xchg
jo
pop
add
dec
data16
xchg
mov
push
sub
scas
cmps
pop
jp
hlt
addr16
cmc
pop
and
(bad)
sub
dec
mov
scas
jno
inc
adc
mov
xchg
into
aam
xchg
sbb
int
lds
retf
jle
nop
ins
stos
push
in
nop
xchg
sub
retf
xchg
lea
jmp
push
aam
sub
xor
mov
dec
and
mov
sbb
cli
adc
loope
pop
int
repnz
jge
adc
aaa
xchg
mov
fcom
daa
push
js
sub
lahf
iret
xor
pop
ja
xor
les
cmovg
and
rcr
dec
fs
adc
pop
pop
popa
popa
push
cs
aaa
jmp
xor
sub
cmp
inc
push
inc
int
xchg
cmc
fld
mov
adc
daa
hlt
mov
fisubr
mov
pop
pop
or
add
hlt
dec
mov
adc
xchg
lahf
vpmaxub
jno
sub
mov
cmp
jge
in
push
mov
push
inc
lods
hlt
bnd
into
es
in
aam
jbe
pop
jmp
cmc
jecxz
and
lock
retf
jno
pextrw
mov
dec
and
gs
xchg
dec
pop
sbb
sub
push
push
and
js
cli
sbb
add
mov
xor
mov
ja
cmp
push
adc
pop
push
int3
out
sub
xchg
or
out
jge
and
mov
sub
mov
and
into
sub
movs
push
pushf
or
mov
push
xchg
adc
mov
repz
fidiv
fst
retf
pop
push
imul
cmps
dec
dec
push
inc
movs
dec
mov
xor
and
mov
dec
inc
shr
pop
pop
(bad)
jg
fs
mov
imul
adc
cmp
in
dec
push
xchg
jle
cmp
xor
adc
in
mov
or
in
push
cmp
mov
test
rcl
pop
push
repnz
ret
dec
add
lods
in
xchg
sbb
or
pop
ins
push
jns
jecxz
stos
or
jecxz
outs
push
inc
out
in
call
ret
push
rcr
repnz
adc
jle
pop
xor
int
sbb
push
mov
ss
push
js
push
fisttp
sub
push
sub
adc
or
scas
mov
and
push
cmp
pop
xor
pop
scas
popa
mov
inc
and
mov
and
xchg
sbb
fiadd
bound
mov
es
push
rcl
(bad)
xlat
sahf
pushf
pop
imul
les
fsubr
fsub
sti
jo
test
je
rcr
in
cmp
out
iret
mov
stos
out
dec
ror
push
add
and
lea
call
test
call
mov
adc
sbb
sahf
test
imul
lods
fs
fist
mov
pop
xchg
cmp
movs
adc
repz
fmul
dec
sar
or
jge
add
jg
(bad)
cmp
fldcw
stc
sbb
or
xchg
jo
xlat
repz
fs
mov
scas
aaa
cmc
jmp
jmp
xlat
xchg
xlat
push
or
lock
push
loop
ins
mul
pushf
cmps
imul
les
mov
neg
dec
movs
in
cmc
mov
and
add
and
in
sar
jge
shl
(bad)
mov
push
xor
add
out
sbb
leave
div
mov
xchg
xchg
ror
test
shl
cld
inc
add
loopne
mov
xor
dec
outs
push
mul
cmp
int
stos
movs
scas
jno
add
mov
(bad)
into
pop
imul
or
and
adc
test
imul
push
rol
pop
and
sub
repnz
sbb
mov
or
and
in
and
mov
pshufw
fnstenv
pop
inc
jns
cdq
out
cmp
out
in
dec
cmp
push
in
fsubr
int3
cmc
dec
dec
or
fcmove
pop
cmp
scas
jmp
push
loopne
add
hlt
or
push
aas
mov
shr
mov
ror
pop
into
retf
scas
movs
out
cmp
push
xchg
jl
push
sar
test
ja
jp
mov
repnz
leave
jno
jmp
sahf
sbb
mov
xlat
lea
iret
and
arpl
lods
test
(bad)
movs
gs
mov
pop
mov
sbb
fbstp
xlat
jo
fisttp
(bad)
pop
add
popf
dec
aam
pop
xchg
cmp
pop
pop
jmp
mov
mov
mov
retf
out
push
add
or
add
or
push
lods
int3
(bad)
jnp
pop
jb
mov
pop
cmc
push
mov
mov
out
jge
mov
and
push
imul
(bad)
int3
movs
cs
aaa
loop
rol
cmp
stos
dec
or
and
(bad)
push
sub
into
pop
test
enter
xchg
loope
loope
ja
adc
fiadd
test
(bad)
out
cmps
push
and
frstor
dec
dec
outs
test
hlt
stos
cs
mov
mov
adc
loopne
fimul
mov
and
ret
sub
xor
jmp
mov
(bad)
test
addr16
ss
push
sbb
cmp
or
and
(bad)
fist
mov
sub
(bad)
loop
inc
xor
xchg
and
fwait
sbb
mov
sub
loopne
mov
cmp
mov
jns
jecxz
sbb
int
jecxz
mov
jmp
fcmovb
pop
pop
cmp
push
add
lods
int
push
cmps
xchg
repnz
sti
sbb
sbb
cs
mov
cld
popf
xor
push
lods
cmp
(bad)
ficomp
push
xchg
popf
cmp
inc
cmp
or
(bad)
in
or
scas
cdq
test
mov
mov
loope
cli
xchg
jg
mov
bound
jle
(bad)
pop
and
movs
cmp
cmp
xchg
clc
cmc
dec
jb
or
fist
and
daa
adc
stos
or
jg
je
loop
lods
inc
inc
icebp
leave
daa
sbb
mov
ret
xor
stos
aaa
call
jle
mov
add
xchg
sbb
iret
(bad)
push
adc
addr16
jmp
mov
push
cmps
test
xchg
push
mov
mov
push
cmc
cmp
popa
mov
or
dec
xor
dec
jmp
mov
xchg
adc
daa
pop
or
ins
pop
add
mov
and
jno
ret
xchg
push
dec
add
into
shl
sbb
movs
aam
inc
(bad)
retf
xor
cli
(bad)
xlat
xor
dec
push
sar
and
addr16
rcl
jmp
sub
lods
mov
shr
jmp
mov
inc
push
mov
test
pop
stos
pop
cmp
adc
mov
ins
ins
sbb
repnz
sub
mov
imul
xchg
jg
pushf
cld
push
lods
lea
(bad)
mov
push
test
call
push
ins
popa
mov
fstp
rcr
mov
cs
lods
mov
repz
mov
int
pusha
shl
addr16
pop
ror
mov
sub
and
pusha
sbb
xlat
and
push
pop
cdq
enter
push
cmp
gs
xchg
out
ins
dec
(bad)
push
loopne
mov
mov
stc
jae
loopne
(bad)
out
adc
jne
pop
inc
stc
js
dec
dec
mov
out
imul
int
lds
out
sti
fiadd
push
std
pusha
loop
sbb
clc
adc
nop
pop
mov
lds
push
inc
loope
jmp
aas
xchg
mov
aaa
jle
ins
dec
xchg
enter
out
mov
sub
fnsave
adc
aaa
loopne
push
nop
or
repz
push
out
add
mov
xor
rcl
das
mov
sub
cmp
fs
out
(bad)
adc
xchg
dec
(bad)
fdivr
and
jmp
cmp
out
sahf
xchg
dec
ficomp
test
mov
mov
cmp
jle
add
fld
push
mov
mov
mov
stos
outs
xchg
sbb
adc
jmp
(bad)
in
sbb
xor
mov
in
or
data16
add
and
xchg
or
push
lds
xchg
rcr
xchg
jmp
icebp
push
inc
inc
push
push
push
test
xor
fnstcw
dec
icebp
add
push
or
sub
pop
mov
mov
mov
jmp
pop
xor
cmp
or
outs
test
inc
or
ds
adc
dec
push
dec
sub
mov
(bad)
bound
outs
leave
sbb
stos
mov
lods
ret
or
stc
mov
je
idiv
and
adc
repz
add
std
out
push
mov
cmp
sub
scas
outs
lea
adc
mov
iret
sub
dec
xchg
movs
into
cmp
mov
outs
xchg
xchg
in
xor
xchg
into
ss
adc
ins
pop
ins
repz
fld
ret
adc
int3
jl
mov
je
push
adc
and
pop
mov
jecxz
mov
pop
rcl
sub
inc
cs
xor
pop
fsubr
cmp
ja
sub
outs
mov
mov
nop
cmp
mov
repz
dec
repz
xchg
sub
and
jno
inc
or
mov
xor
sub
adc
cmps
dec
out
or
cmps
mov
xchg
mov
shl
call
movs
(bad)
jno
es
nop
jmp
xchg
pop
jp
push
xor
jo
outs
dec
sar
out
das
inc
dec
push
fdiv
jmp
out
cmp
cld
push
fst
mov
shl
cli
cdq
int3
xchg
push
cmp
sbb
(bad)
dec
dec
inc
xchg
rol
dec
cli
ret
jno
addr16
lods
ret
loop
dec
jae
mov
and
jl
ja
shr
fisub
pop
jmp
mov
ins
idiv
fisub
adc
je
out
adc
dec
(bad)
(bad)
xchg
test
jge
clc
loope
mov
in
inc
inc
imul
inc
cmp
inc
or
mov
mov
fwait
out
(bad)
loopne
(bad)
cmps
mov
mov
aas
mov
dec
mov
(bad)
jo
arpl
xchg
aas
aaa
jg
cmp
arpl
ds
popa
in
mov
mov
dec
cdq
rcl
cli
fistp
push
lock
stos
fs
popf
jo
inc
mov
ja
inc
scas
mov
xor
xchg
xchg
dec
add
cdq
sub
mov
aaa
sub
ret
cmp
in
loope
in
aas
imul
and
adc
inc
into
(bad)
data16
sub
mov
sbb
sub
xor
fbld
int
mov
pcmpeqw
or
jmp
inc
jne
push
adc
dec
icebp
jl
cmps
lods
xchg
hlt
rcl
adc
or
pop
xor
arpl
inc
fnstenv
fsubr
test
sbb
lds
jge
pushf
test
popa
mov
mov
sub
pop
cs
mov
mov
and
sti
xchg
add
shl
dec
mov
push
cdq
(bad)
mov
iret
inc
(bad)
mov
icebp
xchg
cmp
xchg
sub
imul
retf
pop
call
lods
pop
push
scas
cwd
enter
jp
(bad)
clc
gs
or
xchg
mov
xchg
mov
ja
dec
add
sbb
outs
dec
movs
movs
mov
push
cmp
push
icebp
pop
xor
pop
fldenv
cmp
mov
mov
add
stc
mov
mov
add
fidivr
mov
adc
fsubrp
(bad)
into
mov
in
lea
in
scas
(bad)
xor
fistp
call
and
pop
xchg
es
push
mov
daa
out
add
jp
pop
jge
adc
fadd
adc
lds
fwait
mov
ja
add
jecxz
push
leave
or
ds
(bad)
pop
in
enter
mov
jmp
and
jle
test
mov
inc
xchg
and
adc
sar
popf
mov
mov
push
push
in
pop
xchg
add
repnz
cwde
jo
aad
ins
das
(bad)
cmp
cmp
outs
cmp
xchg
jge
(bad)
pop
and
push
es
clc
shl
(bad)
fist
mov
inc
cmp
add
dec
int3
adc
mov
or
inc
mov
lahf
cmps
arpl
pop
adc
xlat
repnz
std
xor
cmp
dec
pop
add
ficomp
xchg
xor
ins
in
jecxz
scas
stos
retf
int
retf
mov
dec
xor
inc
mov
popf
stc
shr
mov
repz
stc
mov
push
push
ss
push
cmp
repz
mov
cs
outs
dec
cmp
push
xor
mov
das
ds
xlat
add
repnz
mov
fist
scas
cmp
mov
pop
ror
xchg
xor
cmps
push
into
jae
sbb
fwait
adc
icebp
pushf
sub
cmp
inc
out
mov
lods
out
(bad)
fadd
icebp
push
or
fwait
out
fisttp
jmp
pushf
xchg
adc
sbb
mov
test
sub
sbb
outs
cmps
pusha
jnp
sub
or
fist
pop
mov
add
scas
sbb
cld
jnp
je
ret
sub
ror
jbe
not
dec
popa
jae
fdivr
or
and
mov
mov
or
cmps
cmc
out
jmp
and
scas
mov
or
imul
int3
jne
(bad)
push
retf
neg
and
arpl
(bad)
repz
shl
mov
adc
leave
cs
push
cmps
js
dec
jb
cmp
dec
mov
mov
imul
mov
loopne
jmp
hlt
repnz
push
shl
(bad)
jmp
mov
mov
repnz
push
cwde
inc
repz
test
aaa
imul
pop
cwde
mov
xor
cdq
pop
leave
jne
out
nop
push
jno
fs
sub
cmp
lock
in
push
shl
out
arpl
push
movs
pop
and
loope
aad
fmul
push
in
mov
jmp
in
jmpw
mov
or
arpl
cs
jne
loop
mov
popf
out
in
call
xchg
push
push
retf
int
mov
sbb
or
(bad)
add
mov
call
ror
stos
lods
mov
dec
jmp
daa
fisubr
int3
push
aad
xor
cmovns
das
pop
test
push
(bad)
iret
test
movs
add
lea
into
das
mov
jae
jmp
xchg
sti
xchg
and
adc
gs
aas
dec
sbb
int3
dec
pop
pusha
in
mov
and
pop
sub
popf
lahf
pop
pop
sub
sub
outs
mov
fnstsw
jb
and
pusha
into
xor
adc
test
mov
popf
sbb
mov
mov
dec
jne
call
cmc
adc
hlt
and
xchg
es
or
and
and
cmp
ins
in
stos
dec
and
xchg
mov
jnp
jp
mov
dec
fld
cld
dec
sbb
jl
fmul
xor
inc
and
xlat
hlt
jnp
mov
mov
xchg
cmp
mov
mov
dec
div
ret
pop
movs
cmp
push
push
xor
add
inc
sub
jnp
call
in
cmp
popf
sbb
ins
sub
ret
sbb
or
adc
je
cmp
fidivr
je
sub
sub
pushf
(bad)
push
inc
xchg
adc
inc
sbb
test
out
loope
sbb
pop
jmp
add
pop
xchg
mov
mov
(bad)
out
sub
test
movs
push
xchg
clc
mov
cmps
jmp
and
movd
pop
(bad)
mov
jl
loop
nop
sbb
sub
loope
xchg
sbb
cmp
aam
dec
jle
pop
out
pop
add
mov
clc
retf
mov
sub
in
arpl
mov
xchg
xor
mov
(bad)
sbb
or
mov
or
push
inc
cmp
pop
aam
js
cwde
xlat
sub
pop
pusha
rol
into
or
jle
int
mov
fadd
sbb
(bad)
nop
fidiv
pop
mov
or
cmp
push
xchg
jns
dec
lock
add
mov
jno
scas
or
int
aaa
stos
mov
xor
repnz
mov
cwde
lea
mov
or
xchg
or
jl
mov
(bad)
jmp
imul
les
sbb
push
das
and
jne
adc
mov
in
add
push
pop
popf
jbe
mov
xchg
or
xchg
lods
mov
imul
dec
in
xor
pop
jmp
je
stos
xor
ret
jnp
xor
mov
in
sbb
push
(bad)
hlt
push
jne
cmps
pop
std
push
push
and
ss
push
jno
sub
cmp
addr16
ins
stos
test
cmps
mov
jmp
rcl
cmp
fidiv
sub
test
pop
jmp
loope
inc
inc
mov
test
pushf
push
outs
cmps
fsub
and
mov
dec
adc
(bad)
sbb
nop
cmp
pusha
stos
mov
push
cmp
ja
ret
pop
test
push
jb
call
(bad)
jno
jo
test
push
std
pop
ins
sub
mov
aam
das
das
pop
push
shl
push
cs
in
xor
cmp
pop
cmp
cwde
jmp
ret
jmp
pop
push
cmp
nop
lds
jp
stos
xor
mov
(bad)
iret
call
cmps
sbb
sbb
ins
mov
or
fnstenv
xchg
xchg
std
les
loopne
push
xor
in
cmps
shl
mov
imul
js
xchg
cmp
xchg
add
xlat
jnp
mov
ja
inc
push
fbld
fld
jne
popa
cmp
inc
sub
ja
fnstenv
xor
loopne
mov
cmp
out
sub
ins
xchg
dec
mov
sub
cmp
test
xor
cmp
cdq
adc
aaa
xchg
enter
jnp
sti
and
pop
push
push
mov
data16
adc
xchg
and
adc
jmp
mov
ja
addr16
mov
popa
(bad)
jbe
mov
ret
cmps
xchg
push
mov
and
enter
inc
out
mov
sbb
adc
hlt
and
jmp
sbb
mov
push
add
sub
cli
adc
jnp
pushf
stos
cmp
mov
dec
or
sbb
aam
and
mov
xchg
xchg
call
push
in
std
mov
cwde
push
pushf
dec
cmc
pushf
mov
push
xor
leave
sub
fsub
xor
push
dec
adc
imul
cwde
sub
ins
ret
ret
iret
jecxz
fild
ins
dec
mov
jbe
and
jl
je
jmp
xor
mov
(bad)
(bad)
movs
rcr
inc
sbb
pop
lock
(bad)
sets
cmp
sub
fadd
xlat
cs
sbb
or
dec
dec
call
test
inc
lods
mov
imul
fist
fwait
cmp
mov
inc
imul
fld
mov
inc
sbb
frstor
adc
mov
fsub
pop
xchg
and
pop
fcmovnb
cdq
and
cmp
in
je
cmp
or
test
sub
mov
call
cs
push
mov
dec
xor
pop
add
sbb
sahf
or
cmp
jno
retf
lea
sub
cmp
cwde
mov
and
ret
out
fs
mov
retf
je
push
xchg
mov
fsubr
mov
and
lahf
mov
nop
ds
bound
out
cmp
(bad)
hlt
retf
scas
pushf
inc
adc
jmp
inc
mov
jg
imul
ret
and
add
test
hlt
into
mov
loopne
mov
and
jno
dec
std
and
ret
loopne
aad
cli
cmp
out
arpl
jmp
bnd
sbb
movs
pop
mov
lock
or
int3
add
call
sbb
call
out
mov
sbb
mov
jno
das
fcomp
rcl
sub
mov
jmp
stc
dec
add
jae
aas
cmp
or
test
inc
or
push
push
pop
popf
call
jg
xchg
push
mov
test
jecxz
inc
or
(bad)
adc
std
lods
xchg
jo
or
jno
movs
test
jecxz
pushf
xor
push
pop
stc
je
push
or
fidivr
aas
test
cli
dec
(bad)
(bad)
lds
xor
popa
mov
add
lea
je
enter
xchg
retf
or
test
arpl
dec
sub
div
xchg
jbe
inc
push
test
call
pop
jl
jge
ret
ret
sbb
inc
fs
out
(bad)
lahf
out
imul
aaa
cmp
sbb
ror
adc
ins
bswap
ins
push
aaa
fild
cmp
mov
or
test
dec
jno
repnz
lahf
cmp
je
and
enter
and
test
fbld
and
jne
dec
push
pop
jge
mov
fidivr
add
imul
shl
inc
dec
add
pop
jg
xor
retf
lahf
ret
push
jmp
jge
mov
popa
push
ror
sbb
retf
mov
jae
inc
xchg
sbb
bound
push
push
add
or
inc
and
adc
sbb
or
loope
mov
test
pop
cs
imul
add
icebp
lahf
iret
ror
adc
fpatan
cli
mov
xchg
ds
xor
cmp
xor
mov
call
sbb
mov
or
jno
cli
aas
out
push
loopne
mov
sub
popf
or
mov
test
mov
xor
cmp
mov
(bad)
ret
adc
adc
mov
mov
xlat
inc
aaa
dec
lods
xchg
fs
cdq
div
cmp
bound
(bad)
cli
ss
and
aam
popa
out
adc
inc
mov
and
cmps
bound
mov
popf
hlt
ret
mov
cmc
cmps
add
enter
xor
xor
cmp
loopne
adc
aam
out
sbb
or
out
sub
xlat
mov
add
xor
mov
push
adc
aam
adc
das
cmp
jns
mov
mov
mov
fnsave
imul
mov
dec
ins
mov
lds
cmp
cmp
jle
fst
out
out
adc
mov
aaa
jo
popf
sahf
dec
nop
xor
cmp
(bad)
je
scas
stos
cmp
ds
xor
add
or
mov
jl
adc
or
dec
sub
in
sub
inc
shr
and
in
sbb
repnz
ret
imul
bound
push
inc
hlt
or
stc
xchg
push
push
call
and
xchg
jmp
push
inc
js
test
mov
adc
adc
mov
dec
sub
mov
cmp
movs
das
cwde
sti
push
out
in
sbb
or
aas
and
sti
sub
bsr
xor
js
cmp
in
xor
test
or
cmp
dec
(bad)
lock
push
out
adc
mov
mov
dec
retf
adc
sbb
dec
jbe
aaa
gs
mov
jp
jp
scas
xchg
push
push
mov
movs
popf
aam
loop
dec
or
sub
daa
jno
test
or
cld
loop
xchg
psllw
in
enter
jno
(bad)
mov
enter
xchg
push
sub
test
cmovle
bound
jae
dec
xor
aas
sub
enter
test
nop
fcomp
retf
or
mov
ins
shl
stos
movs
sub
mov
mov
fild
cmp
cmp
stos
(bad)
in
mov
add
push
inc
mov
cmp
inc
pop
xor
jmp
adc
aas
jns
cmps
jo
pop
add
fcom
iret
mov
and
or
inc
cmps
push
adc
mov
xchg
xchg
enter
enter
loope
jge
fwait
(bad)
xchg
fist
mov
outs
imul
mov
jmp
cmp
and
repnz
sbb
mov
push
cwde
das
mov
repnz
in
add
adc
inc
ins
int
jb
xchg
or
icebp
jo
jecxz
xor
loop
adc
icebp
inc
add
mov
sbb
les
pop
in
sub
adc
dec
pop
(bad)
pop
ins
cmp
call
cmp
outs
sti
lods
(bad)
pop
dec
sar
rol
(bad)
popa
(bad)
lock
sbb
mov
adc
pop
pop
push
xor
test
test
int
push
push
call
mov
aad
sbb
xchg
shr
cmp
fs
iret
cs
loop
pop
mov
retf
sahf
pop
scas
lods
and
addr16
scas
jne
pop
dec
sbb
cmps
xchg
clc
(bad)
loopne
jmp
neg
xchg
ret
jnp
ins
lock
(bad)
adc
or
sub
ret
mov
icebp
rcl
mov
cmp
ror
add
cwde
or
fisub
cmp
pop
rol
and
scas
dec
fbld
outs
adc
inc
fisub
pop
and
fnstcw
cmp
or
popa
dec
test
aam
jmp
imul
outs
dec
fbld
ja
in
adc
sub
jmp
sbb
dec
out
dec
and
out
arpl
test
mov
xchg
mov
jmp
pop
cmps
cmps
mov
in
jp
pushf
push
xor
out
ja
push
push
sahf
mov
mov
jns
push
loopne
push
mov
sub
enter
adc
(bad)
xlat
aaa
adc
push
dec
mov
ds
lods
dec
inc
stc
pop
inc
mov
cmp
retf
std
inc
or
cld
mov
les
repz
addr16
cmp
retf
fidivr
jp
stc
xchg
sbb
scas
retf
ret
add
and
push
stos
in
loope
sti
mul
test
test
dec
xchg
or
in
sbb
jae
mov
rol
or
mov
xor
fs
or
shl
cmp
jnp
cmps
icebp
push
mov
adc
mov
xchg
addr16
xchg
fcom
and
or
jb
aas
lods
adc
ret
pop
cmps
or
xor
pusha
dec
mov
js
fisubr
push
xchg
dec
movs
add
gs
adc
les
jmp
das
xlat
or
mov
fild
lahf
into
fcmovbe
xlat
mov
lods
push
ror
lahf
mov
dec
leave
mov
repz
pop
fwait
out
cmp
rol
fstp
add
loope
jmp
cmp
icebp
outs
loopne
xor
cmp
and
fs
pop
mov
pop
sub
add
in
movs
movs
test
cmp
and
xchg
adc
push
aam
add
add
adc
push
aam
cdq
xchg
sub
xor
mov
ins
sbb
arpl
xor
dec
mov
icebp
ja
loopne
or
add
cmps
and
or
scas
in
ins
cmp
push
(bad)
and
xchg
push
aam
(bad)
xchg
sti
add
pop
sar
cmps
pop
dec
push
mov
xor
dec
scas
cmc
xchg
pop
cmc
xlat
mov
adc
mov
push
sahf
int
and
cmp
and
jno
fisubr
add
out
mov
outs
jb
(bad)
cmps
mov
inc
lahf
repnz
icebp
push
adc
jo
lods
mov
cmc
and
adc
sar
outs
mov
aas
dec
mov
gs
mov
(bad)
push
lea
ss
adc
cmp
test
(bad)
fcmovne
sbb
movs
outs
cmp
std
arpl
out
jb
les
xchg
inc
or
js
das
add
or
inc
lds
or
add
push
sti
push
ficom
jle
dec
add
add
(bad)
mov
sub
repz
repnz
mov
retf
push
dec
push
iret
adc
and
fwait
mov
(bad)
push
jne
sub
in
(bad)
cli
push
add
sbb
fdivrp
clc
jmp
push
xchg
popa
pusha
retf
stos
imul
or
push
fs
sbb
push
je
cmc
mov
inc
xlat
(bad)
imul
stos
stc
adc
xlat
dec
mov
or
mov
mov
(bad)
push
pop
arpl
fbld
push
jp
cmc
cmc
sbb
cmps
jno
mov
out
cmp
pcmpeqb
ret
aas
cmp
and
int3
mov
jmp
(bad)
(bad)
cmp
ins
cmps
sbb
(bad)
pop
cmp
in
add
cld
xor
or
xchg
ret
xchg
cdq
or
sbb
adc
xchg
jnp
sub
and
push
pop
xor
add
movs
aaa
je
sub
xchg
ret
xor
jbe
xchg
push
adc
cmps
lods
cmp
fsub
add
outs
jo
pop
enter
and
adc
xchg
mov
mov
jecxz
mov
fnstsw
jns
mov
push
adc
out
in
repnz
adc
pop
fs
add
mov
out
in
xlat
retf
xchg
out
shl
arpl
push
retf
mov
es
jmp
xor
add
ins
call
fwait
pop
addr16
(bad)
nop
sub
jmp
mov
cld
adc
jo
inc
jp
push
cli
and
int
sbb
into
mov
sbb
loopne
in
scas
push
arpl
xchg
popf
loopne
ja
shl
sbb
pusha
xchg
out
jbe
out
add
pop
data16
sti
inc
and
pop
inc
out
push
rcl
test
in
xlat
ret
or
jl
mov
mov
into
dec
mov
push
jo
test
and
cmps
(bad)
in
sub
test
ror
cs
sbb
sahf
mov
sbb
add
xlat
add
adc
adc
pushf
mov
xor
mov
dec
mov
push
sub
f2xm1
add
jns
or
bound
xchg
push
test
jg
dec
adc
(bad)
mov
daa
jne
idiv
adc
jbe
add
nop
outs
and
xchg
outs
popf
cwde
add
mov
test
jnp
icebp
aad
leave
stos
push
fistp
inc
or
in
pushaw
int
sub
popf
rcl
dec
pop
int3
jae
adc
jecxz
mov
(bad)
pop
jg
pop
mov
cmps
fnstsw
pushf
ds
mov
loop
and
sti
push
push
gs
cld
adc
push
sbb
mov
mul
int3
mov
cli
pop
test
pop
cmps
add
pop
in
adc
ins
sbb
jl
ins
and
retf
pop
stc
and
nop
repnz
xor
stos
(bad)
jmp
(bad)
lock
icebp
ret
ror
and
call
loope
jmp
data16
in
or
test
ja
jb
faddp
dec
and
mov
ret
pop
mov
lock
fcmovnbe
pop
xchg
xor
pop
(bad)
cmp
fwait
push
pusha
xchg
test
rcr
out
ins
ficom
sbb
jbe
xchg
pop
retf
sbb
shl
out
scas
inc
pusha
test
and
jo
int
sbb
dec
fdiv
imul
and
imul
shl
pop
das
(bad)
les
lea
mov
pop
scas
xchg
mov
test
pop
inc
and
sub
call
popa
fwait
lock
jb
out
mov
or
js
shl
dec
das
clc
pop
(bad)
out
dec
mov
sub
xchg
invd
fnstsw
cli
push
dec
mov
imul
xchg
arpl
test
in
cmps
iret
cdq
ror
test
shl
xlat
cmp
loop
cdq
(bad)
xchg
push
fcom
repnz
add
mov
aaa
mov
inc
stc
fsub
sahf
shl
and
das
retf
sub
or
stos
add
je
das
jmp
sub
push
pop
fist
iret
sbb
outs
shl
sub
repz
scas
lods
pushf
sbb
inc
int3
inc
jmp
push
stos
dec
iret
xlat
leave
out
int
mov
or
mov
inc
pop
inc
loop
or
add
and
idiv
mov
aad
cmp
fs
leave
sbb
jle
jmp
les
sbb
inc
(bad)
pop
inc
mov
add
mov
(bad)
mov
retf
or
pop
bound
int
push
(bad)
rcr
fwait
jne
push
call
cmp
enter
cmps
pop
not
mov
ins
into
das
retf
cmp
and
push
js
int3
sar
lods
inc
sbb
jg
mov
mov
mov
xchg
cmp
pmaxub
ss
daa
hlt
ret
sbb
test
dec
(bad)
lds
sbb
icebp
jne
and
push
mov
or
cld
sub
jg
mov
xor
(bad)
enter
les
cmp
loope
(bad)
mov
pop
push
mov
out
pop
dec
int
nop
fisub
mov
test
inc
ss
push
jmp
sti
mov
push
pop
and
push
pop
inc
out
fisubr
adc
dec
jg
into
sar
mov
cld
retf
and
add
cli
mov
dec
mov
dec
enter
mov
aaa
enter
mov
mov
into
inc
(bad)
jle
mov
or
std
mov
stos
sbb
pop
popf
fstp
mov
and
fwait
cs
inc
xor
inc
mov
sub
rol
or
push
jecxz
push
lds
cwde
fsub
hlt
mov
push
scas
stos
inc
dec
jnp
xchg
push
retf
enter
imul
mov
add
jp
push
fmul
sbb
sti
jge
add
sub
mov
dec
clc
icebp
aam
cli
jnp
jae
nop
lahf
xchg
neg
jmp
daa
dec
cmp
cmp
and
cmp
cwde
daa
imul
jle
in
sub
ret
(bad)
cmc
adc
jge
test
mov
pop
rol
mov
pop
mov
aam
bound
in
(bad)
fbld
adc
add
xor
sbb
nop
add
jb
pushf
(bad)
jbe
pop
xor
ds
mov
ficomp
push
jb
xchg
mov
movs
mov
jecxz
jge
and
mov
icebp
dec
xor
lea
leave
js
xor
mov
sti
mov
in
mov
jae
sub
push
push
or
and
jg
out
lahf
(bad)
loop
hlt
push
retf
adc
xor
xchg
mov
int
cmc
mov
leave
jecxz
out
or
daa
push
repz
ficomp
push
icebp
iret
cmp
pop
xchg
xor
mov
scas
sbb
gs
iret
outs
mov
mov
cld
sti
aaa
cmps
stc
(bad)
hlt
loope
fist
ret
les
push
jno
shl
mov
cmp
shl
inc
jge
jae
jl
jmp
cmp
push
xor
in
sub
or
cmps
xchg
jg
xchg
cmps
cmps
inc
data16
xchg
push
push
mov
sti
retf
jne
pop
sub
sub
mov
loop
enter
xor
les
mov
jle
xor
and
popf
hlt
pushf
xor
pop
loop
mov
push
test
sahf
fsubp
cmc
aam
xlat
mov
inc
push
fmul
pop
pop
data16
or
dec
xor
retf
aas
push
push
sahf
lock
add
or
clc
cld
movs
rcr
sub
das
and
pop
stos
and
rcr
ins
xchg
inc
add
popf
xor
adc
inc
outs
and
adc
xchg
shl
mov
xor
je
outs
pop
ret
pop
test
cli
lds
pop
pushf
in
mov
inc
push
stos
ja
jo
ficomp
loopne
fistp
loop
sub
icebp
sbb
loopne
repnz
cmc
ret
xor
pop
mov
int
outs
(bad)
das
stos
pop
ror
push
and
inc
cli
cs
fucom
scas
inc
sahf
and
xchg
test
push
in
lock
jne
mov
push
repz
out
sub
int
push
arpl
das
out
mov
cmp
adc
retf
pop
test
sub
or
mov
mov
pop
xchg
xchg
mov
sub
mov
cmp
lods
jmp
std
scas
cmp
dec
dec
loopne
push
dec
mov
mov
push
stos
add
out
xchg
repnz
xor
mov
dec
popa
push
(bad)
sti
and
xchg
stos
push
cmp
call
outs
push
ret
(bad)
test
inc
push
add
mov
lods
out
cmps
dec
clc
cli
es
push
jns
ds
clc
jae
das
sbb
nop
pop
jmp
jp
sbb
jp
cmp
push
repz
sti
mov
or
inc
stos
push
ret
jle
sahf
cld
cmp
or
(bad)
cdq
outs
loop
xor
stos
mov
pop
outs
push
(bad)
aam
mov
lahf
jl
ret
sbb
push
popf
jb
sbb
movs
inc
fwait
cmp
jmp
ret
xchg
sub
aas
or
pop
fistp
pop
ret
enter
(bad)
xchg
mov
stos
fwait
dec
pop
js
test
cmp
sbb
jae
xor
lods
cwde
call
call
pop
xchg
cwde
in
xor
and
push
sbb
icebp
in
lahf
pop
arpl
cwde
mov
cld
jecxz
das
cmps
xor
mov
imul
jmp
jb
and
stc
push
movs
inc
jnp
dec
push
push
add
movs
jp
popa
push
fldcw
cld
add
adc
ror
mov
and
(bad)
ins
pop
shr
or
adc
loop
(bad)
loope
pushf
addr16
adc
or
(bad)
mov
test
sub
loope
xchg
and
repz
jle
movs
lods
mov
cmps
pop
or
shl
clc
ss
sbb
imul
jp
arpl
hlt
mov
or
stos
pop
repz
enter
add
enter
pop
mov
sub
ror
in
std
xor
sub
push
mov
pop
loop
sbb
retf
test
call
mov
adc
mov
jns
xor
scas
inc
jno
cwde
je
outs
push
fld
pop
mov
or
push
sbb
mov
mov
dec
and
inc
adc
mov
inc
(bad)
stos
adc
inc
push
push
mov
gs
push
out
scas
jg
dec
scas
scas
xchg
stos
clc
int3
popf
out
out
sti
and
in
mov
mov
pop
push
dec
jno
sbb
out
add
shl
pop
out
ins
add
sub
hlt
add
leave
(bad)
push
iret
(bad)
gs
add
es
pop
int3
(bad)
nop
dec
mov
cmp
jecxz
cmp
mov
xor
shr
in
sbb
mov
hlt
dec
push
test
rcr
pop
mov
mov
mov
inc
sbb
aaa
add
cmc
mov
addr16
cmp
out
mov
dec
inc
xor
mov
mov
cmp
xor
xchg
call
cld
(bad)
cli
daa
fidivr
fld
sub
push
push
stos
or
dec
mov
dec
jle
sub
out
cmps
ror
stc
cli
fadd
movs
sbb
pop
jno
sbb
pop
sub
add
xchg
or
sub
in
popa
add
into
push
xchg
pusha
dec
inc
xor
ror
aas
xor
and
xchg
adc
adc
lods
or
mov
(bad)
mov
jnp
ds
fadd
pop
push
fldcw
cwde
lods
mov
cli
in
push
dec
jns
fmul
inc
jnp
enter
(bad)
ja
push
or
mov
test
in
xor
cld
jo
mov
cmc
stc
dec
ret
jnp
inc
stc
and
imul
add
(bad)
sub
dec
or
and
mov
inc
repnz
aaa
ds
inc
pop
ja
das
nop
pop
xor
mov
jl
and
scas
and
leave
cdq
loopne
sbb
mov
ror
into
stos
jns
add
scas
outs
jecxz
xlat
add
mov
outs
add
mov
repnz
jle
lea
mov
in
push
into
and
arpl
clc
(bad)
outs
dec
inc
push
dec
xor
mov
mov
sub
out
arpl
mov
and
jbe
lahf
add
sbb
xchg
add
and
adc
(bad)
mov
repz
(bad)
pop
mov
cmc
xchg
adc
js
test
mov
and
pop
jne
adc
pop
push
popf
inc
add
inc
jmp
int
sbb
mov
es
movs
mov
sbb
adc
lock
mov
js
add
pop
mov
dec
pusha
cmp
(bad)
cmp
mov
dec
xlat
in
or
xlat
pop
or
scas
imul
les
jle
cmc
mov
jle
inc
scas
jnp
sahf
inc
stos
xor
sar
jns
pusha
dec
in
and
sub
jo
xor
jo
sub
ds
pop
pusha
mov
fcomp
in
jp
adc
in
ins
jge
bound
hlt
push
cdq
push
repnz
sti
not
mov
fst
imul
outs
jae
rcl
test
or
mov
aas
mov
jp
mov
lea
cmp
outs
pop
out
inc
test
sar
sub
retf
and
fwait
test
aas
pop
xchg
xlat
rcl
dec
push
adc
mov
sub
arpl
lock
imul
mov
(bad)
out
(bad)
dec
push
cmps
dec
test
adc
inc
and
call
imul
xlat
test
and
arpl
mov
dec
cmp
mov
jnp
jb
rcr
aas
addr16
imul
dec
mov
push
mov
mov
pop
call
dec
sub
pop
hlt
das
sbb
inc
retf
jmp
enter
(bad)
mul
aam
scas
adc
jge
movs
pop
xlat
popa
xchg
xchg
sahf
mov
xchg
sbb
mov
enter
cs
test
pop
push
push
cmp
push
push
push
jge
enter
das
mov
in
push
stos
adc
xor
pop
sti
(bad)
outs
ret
mov
rcl
daa
stos
ins
outs
ror
jp
add
inc
scas
pop
idiv
add
mov
in
dec
mov
lods
inc
jmp
int
inc
aas
dec
in
addr16
out
test
dec
sar
popa
pop
loopne
jbe
retf
repz
jbe
mov
aaa
es
ret
adc
popf
cdq
retf
fistp
sub
mov
adc
stos
push
jge
fnsave
jo
sbb
repz
test
test
and
test
cli
mov
arpl
jge
push
cwde
inc
adc
mov
xchg
movs
mov
je
add
or
cmp
into
xchg
sahf
cmps
pop
std
test
sub
jmp
add
ror
mov
in
push
outs
push
fisttp
cs
fwait
sbb
cmp
in
loop
or
(bad)
dec
xchg
mov
push
lods
mov
and
test
inc
aad
out
jae
cmps
cwde
add
retf
adc
jnp
mov
jmp
pop
dec
pop
jle
addr16
inc
jl
mov
sub
loopne
mov
lods
(bad)
call
xchg
js
call
pop
or
jg
jmp
cmp
pop
sub
mov
ins
xchg
mov
(bad)
enter
stc
jg
popa
movs
and
and
lahf
xor
xor
inc
add
cmp
ror
call
ror
inc
int3
push
jbe
scas
jno
mov
fistp
in
int
mov
mov
daa
pop
pop
imul
loop
xchg
ds
mov
jle
shl
inc
inc
cmps
inc
pop
fcomp
dec
imul
jp
add
pusha
mov
xlat
imul
lds
pop
icebp
loopne
xor
fidivr
lea
mov
cmp
jo
aam
ja
shl
push
cwde
mov
cwde
xor
adc
enter
sbb
fisub
adc
inc
jl
mov
(bad)
mov
dec
push
fisttp
add
test
repnz
movs
out
in
pop
push
in
push
cmps
sti
xor
push
ret
dec
or
aam
fsub
push
jae
push
gs
push
sbb
xor
shl
dec
scas
mov
mov
xor
pop
(bad)
call
cld
jns
int
dec
addr16
out
and
rcl
xor
sub
add
mov
jb
aaa
popa
add
int3
aad
test
ins
mov
push
or
addr16
mov
lods
lods
fs
stos
aad
setae
xlat
int
mov
or
add
cmc
pop
dec
gs
cli
pushf
sub
mov
xor
jns
jg
into
into
push
push
sub
lods
sbb
inc
sar
push
pop
out
jmp
jb
jmp
mov
in
(bad)
dec
js
jp
sub
pop
mov
and
mov
(bad)
fidivr
out
xchg
xor
imul
push
into
cmps
dec
(bad)
sahf
hlt
jmp
xchg
and
or
call
ret
repz
xor
imul
jmp
sub
cmp
call
jmp
xor
cmp
hlt
add
retf
(bad)
sti
jae
std
sub
ins
fidivr
mov
adc
adc
mov
mov
cmps
and
ds
mov
pop
xchg
ds
stos
push
inc
dec
test
repz
sar
inc
dec
jae
fwait
movs
mov
jecxz
scas
mov
cmp
inc
retf
jno
(bad)
fild
(bad)
jge
mov
sbb
in
mov
pushf
scas
jns
stc
jbe
jne
or
ds
out
push
(bad)
(bad)
xchg
jns
(bad)
cmp
inc
cmp
push
mov
pop
jg
popa
mov
mov
jno
retf
jle
lods
mov
dec
shl
pop
mov
jmp
cli
jne
mov
lahf
jg
or
retf
add
xlat
mov
ja
pop
cmps
addr16
xchg
cli
in
repz
pop
lods
push
sub
lds
xor
cdq
mov
call
sub
xor
imul
icebp
out
and
cmp
outs
mov
ret
sti
jle
icebp
sbb
xchg
jg
retf
xor
jae
fmul
mov
push
icebp
(bad)
jbe
jp
and
inc
cmp
or
sub
sbb
fbstp
rcr
jae
jb
pop
aam
sbb
loope
repnz
icebp
mov
sar
inc
lea
sub
stos
add
ins
pop
cmp
jg
xlat
cmp
pop
(bad)
fcomp
jbe
addr16
popa
je
icebp
jecxz
cld
mov
das
ror
ins
mov
repz
inc
add
mov
int3
mov
push
mov
push
cmp
inc
pop
pop
mov
ds
pop
add
cli
sbb
pop
jge
mov
pop
cmp
int
cmp
xchg
adc
mov
into
test
cmp
(bad)
in
jae
js
call
sbb
ret
cmp
aaa
test
pop
add
or
inc
inc
mov
(bad)
sub
xor
fisttp
dec
add
lods
mov
(bad)
loope
sub
lock
jle
arpl
dec
and
xchg
test
and
xor
int3
inc
mov
aam
mov
jp
mov
mov
out
out
jb
dec
and
dec
shl
movs
mov
dec
pop
pop
adc
jns
mov
cmp
cdq
xchg
out
and
mov
add
push
fist
push
adc
push
mov
add
dec
dec
xchg
cld
mov
sbb
es
lahf
call
sub
imul
jns
push
add
call
ret
repz
xchg
loopne
nop
jb
enter
fdivr
mov
imul
daa
and
mov
sub
imul
clc
fs
(bad)
test
xor
mov
out
jne
out
pop
leave
mov
shl
add
cmp
(bad)
mov
mov
push
fistp
cmp
mov
iret
push
imul
push
dec
dec
pop
repz
(bad)
mov
xor
cmp
pushf
push
call
xlat
sub
adc
fsub
shr
and
cs
mov
idiv
cmps
cmp
js
jmp
div
stos
mov
jmp
dec
and
ss
pop
dec
jge
push
mov
dec
inc
(bad)
and
stos
retf
stos
(bad)
gs
xor
call
daa
fwait
cmps
icebp
sbb
cmp
shr
movs
mov
hlt
pop
aam
xor
dec
mov
(bad)
cmp
or
jae
mov
mov
dec
arpl
and
scas
out
out
xor
jae
jo
popf
test
shl
pop
shl
mov
test
test
mov
lods
dec
mov
sbb
std
mov
gs
pop
dec
dec
das
add
not
gs
push
out
adc
push
sbb
imul
inc
mov
sub
fs
mov
pop
adc
pop
(bad)
jmp
pop
or
ins
jp
lahf
ins
ror
lods
bound
sub
ss
add
les
das
push
sbb
fsubr
or
fnop
mov
cmp
mov
retf
jnp
xor
jns
int
sub
add
out
push
in
out
dec
jl
push
test
jle
pop
movs
outs
xchg
shl
fadd
dec
ror
retf
jp
mov
js
(bad)
pop
cli
cmp
loope
mov
xchg
xchg
dec
inc
xor
test
push
xor
mov
scas
lock
sti
leave
cmps
mov
inc
pop
loope
bound
test
mov
sti
jne
shl
fs
dec
and
dec
mov
push
icebp
cmp
pop
outs
add
push
or
mov
aaa
mov
xor
lahf
fs
jb
sbb
ins
dec
pop
xchg
movs
call
out
sub
movs
xchg
ror
in
push
sub
sti
push
jmp
xor
jo
cmp
out
fmul
dec
pop
push
ins
jb
adc
inc
loop
pop
mov
pop
or
mov
sbb
and
cmp
push
mov
int
popa
(bad)
ss
jae
pop
shl
int3
pop
xchg
test
addr16
xlat
imul
loope
mov
jbe
xor
xor
stos
int
fs
dec
movs
fidivr
stos
popf
dec
mov
dec
jmp
jp
aad
xchg
icebp
and
cs
adc
sahf
ins
(bad)
lock
scas
dec
jb
rcr
xor
je
neg
mov
sbb
ds
add
and
xchg
imul
cmp
dec
jmp
es
data16
icebp
cs
scas
pushf
or
jg
jge
xchg
dec
loope
push
ja
jg
sti
sbb
lds
loope
mov
mov
mov
push
fwait
mov
int
lods
mov
sbb
add
mov
mov
dec
and
into
sbb
into
test
dec
fadd
xor
ins
daa
out
mov
and
inc
icebp
inc
xlat
mov
dec
(bad)
lods
push
mov
dec
bound
outs
jo
sar
sub
mov
in
mov
test
push
daa
fnstenv
popa
imul
mov
mov
cmp
lock
push
fidivr
adc
and
mov
or
imul
sbb
pop
mov
sbb
lds
cmp
(bad)
cwde
jle
mov
mov
loop
push
lods
ins
sbb
pop
aam
popa
out
mov
adc
xor
dec
jmp
or
inc
and
mov
or
inc
inc
jge
fadd
mov
daa
mov
es
ins
xchg
das
aas
adc
pop
jp
adc
leave
ss
adc
rcl
push
fwait
mov
std
(bad)
movs
inc
fimul
ret
scas
or
test
rcl
cmc
lds
in
gs
dec
jg
stos
inc
ret
xchg
stc
pop
push
lods
jbe
ret
xchg
mov
xchg
gs
cmp
icebp
sbb
sub
and
add
push
push
daa
mov
aaa
test
mov
sub
jmp
jae
xor
sub
mov
fs
sbb
and
in
cmps
jbe
inc
sti
mov
xor
movs
test
and
xchg
fwait
pop
add
loope
movs
setns
rol
cdq
sahf
stc
(bad)
dec
lahf
mov
fisttp
nop
push
lock
pop
jl
clc
add
movs
cmps
or
pop
(bad)
in
push
sbb
in
mov
add
sbb
loope
add
in
movs
out
mov
jns
sahf
mov
and
mov
pushf
loope
stos
in
cmp
mov
(bad)
shl
jne
fwait
add
(bad)
dec
(bad)
mov
mov
sbb
mov
cmp
adc
sub
sti
cmps
mov
cmp
sub
and
clc
inc
cmp
cmps
les
xchg
clc
and
mov
fmul
cmp
add
sti
and
retf
ins
mov
push
mov
arpl
xchg
shr
pop
lods
mov
sub
mov
inc
retf
mov
pop
(bad)
gs
mov
lods
and
xchg
es
or
cmp
pop
mov
test
shr
pop
add
push
shr
(bad)
dec
fwait
out
addr16
mov
push
mov
push
and
push
aam
ret
scas
push
pop
sti
div
mov
nop
push
mov
mov
xchg
mov
ja
sub
cmp
sbb
adc
cwde
dec
jmp
cli
xchg
js
push
fimul
jge
inc
rol
fs
sub
and
lds
cmp
mov
mov
dec
clc
xchg
(bad)
aad
hlt
pop
shl
mov
aad
xchg
push
imul
in
leave
lods
jmp
cwde
mov
cmp
cmp
push
lahf
inc
mov
stc
fimul
fcomp
sbb
mov
ja
push
(bad)
fsub
push
mov
mov
xchg
fucom
fadd
jle
outs
xor
loopne
xchg
push
inc
pop
sub
fisttp
sti
cmp
mov
sub
dec
out
jo
mov
xchg
icebp
mov
cmc
aam
add
mov
push
and
test
and
ins
adc
push
loop
jno
outs
in
jns
push
mov
fadd
pop
mov
mov
xor
outs
jb
icebp
cdq
icebp
loopne
ins
sub
mov
mov
outs
adc
rcr
or
mov
stos
(bad)
in
fidiv
inc
inc
cdq
repnz
movs
fxch
sub
nop
pop
test
push
repz
xchg
pop
mov
sub
sub
push
push
add
dec
out
push
fbld
repz
cld
sub
pop
dec
iret
pop
dec
jmp
shr
sbb
repz
push
es
repz
(bad)
cmp
imul
push
mov
pop
sub
call
mov
ins
add
fwait
cmp
dec
enter
jg
rcr
inc
lods
dec
outs
push
jmp
mov
jmp
test
(bad)
and
stos
xchg
jl
(bad)
loopne
dec
and
cwde
pop
int3
xchg
fdiv
rcr
xor
iret
jge
sub
dec
mov
cmp
pop
pop
mov
test
mov
or
cmc
dec
sar
jle
and
dec
adc
jnp
sbb
imul
pop
(bad)
and
call
jbe
pop
test
adc
mov
enter
aam
push
push
je
pop
in
sub
pop
mov
test
mov
add
leave
jno
push
inc
add
xchg
xchg
sbb
dec
sub
cmps
stc
inc
ja
mov
add
add
lea
jno
add
into
cmc
jae
adc
mov
adc
push
and
iret
imul
call
test
dec
mov
popa
mov
imul
jnp
sub
and
arpl
cmps
pop
push
in
stc
xor
mov
mov
mov
xchg
fcmove
cmps
xor
ins
xchg
xchg
scas
mov
adc
in
push
fist
addr16
hlt
xor
nop
jne
popa
data16
push
push
leave
jp
xor
loop
pop
dec
xor
test
scas
outs
and
pop
xor
inc
push
cmp
mov
popa
call
mov
inc
or
test
into
int
mov
fidiv
cmp
inc
jno
mov
lds
dec
xor
enter
jbe
ins
(bad)
imul
xchg
pusha
xchg
pusha
aas
mov
data16
cs
fcmovu
std
mov
dec
mov
enter
ins
(bad)
jle
retf
sbb
je
add
imul
push
xchg
cli
je
add
inc
inc
je
mov
test
mul
ins
sbb
scas
loopne
add
cmp
push
gs
inc
outs
leave
and
popf
mov
push
xor
jmp
push
loope
repz
jbe
js
dec
sahf
xchg
pop
popa
and
sub
xchg
mov
ss
sar
test
lods
xchg
cmps
test
sti
fadd
add
push
rcl
cmc
stos
lea
ins
xchg
xchg
loope
iret
lahf
fidiv
or
mov
mov
push
stc
add
test
stos
jo
adc
mov
and
dec
cmps
lods
or
add
jg
or
fmulp
adc
cmp
xlat
(bad)
(bad)
aas
movs
lock
js
pop
loop
lock
sub
rcl
pusha
stos
je
xchg
xor
add
scas
mov
lock
addr16
daa
test
inc
pushf
scas
and
jle
sbb
sar
pop
stos
call
repz
adc
pop
ds
call
and
cmp
lds
jmp
push
push
sub
sub
pop
pop
add
das
push
xor
cs
push
or
jae
mov
mov
cwde
test
inc
dec
test
and
mov
repnz
mov
mov
daa
call
fcom
xor
xor
cli
(bad)
mov
data16
mov
jae
sub
test
dec
daa
pop
dec
push
test
ret
movs
pop
xchg
push
jg
in
add
aas
add
rcr
retf
push
push
cwde
push
mov
mov
ins
arpl
cwde
leave
lds
mov
lods
daa
jmp
es
push
mov
and
add
test
and
add
sub
mov
imul
das
out
rcr
cmp
add
sti
js
mov
add
cld
mov
xor
repz
mov
mov
adc
sub
and
mov
imul
out
mov
outs
cwde
mov
fst
or
call
movs
(bad)
retf
nop
mov
and
shl
stos
popa
aas
jl
mov
sbb
mov
sbb
int3
dec
push
jnp
jb
daa
inc
or
sti
add
test
(bad)
clc
mov
(bad)
aam
xchg
push
mov
push
fadd
pop
sbb
pop
push
pop
in
mov
out
jbe
or
jl
add
xchg
cmp
add
scas
and
clc
retf
and
cmps
iret
(bad)
pusha
(bad)
sub
cld
add
jp
mov
enter
sbb
aas
(bad)
(bad)
jmp
and
mov
jnp
jbe
aaa
mov
mov
push
mov
fisub
out
fdivr
dec
cmp
aam
sti
add
mov
sub
and
sbb
or
stos
mov
call
scas
movs
dec
xchg
popa
inc
adc
mov
sub
inc
shl
repz
mov
mov
jle
(bad)
mov
or
iret
sar
cmps
cmc
xchg
out
jmp
xchg
dec
xor
inc
inc
xchg
stos
jo
cmp
xor
jp
dec
adc
and
repz
cmc
and
pop
inc
jns
jmp
ins
mov
out
xor
aaa
dec
repz
mov
inc
enter
jmp
and
jl
mov
push
sbb
xor
adc
push
mov
mov
push
push
inc
dec
inc
loopne
outs
in
test
and
ffree
and
mov
cmp
mov
add
pop
in
daa
inc
mov
icebp
sub
mov
cmps
je
out
xchg
sbb
sbb
push
or
(bad)
cmps
mov
cmp
loopne
scas
outs
sbb
popf
out
cmp
pop
das
cdq
pusha
aam
lahf
xor
dec
jp
xchg
retf
pop
or
add
jnp
(bad)
dec
stc
mov
std
and
dec
xor
mov
rcr
xchg
xchg
or
xchg
push
dec
and
mov
lods
lea
jl
fist
repnz
xchg
mov
imul
jp
fs
push
push
mov
and
int
lock
jno
and
mov
sti
dec
ins
dec
cmp
dec
je
jmp
aaa
and
inc
sar
shr
stos
add
sub
or
(bad)
xchg
sub
lock
mov
sbb
jb
sbb
(bad)
lea
std
and
inc
cmps
inc
xchg
xchg
ja
mov
cmp
cdq
jmp
in
dec
or
mov
fisubr
clc
sub
or
cli
xchg
lahf
push
and
xor
rol
jns
out
popa
out
pop
fiadd
dec
lods
out
fbld
push
mov
iret
or
sub
push
or
mov
stc
xchg
inc
bound
ss
inc
ficomp
xchg
push
imul
fisttp
mov
mov
loope
xchg
dec
pop
mov
sti
push
jmp
jp
ds
retf
adc
paddsb
push
stc
pop
std
or
arpl
sub
aad
jmp
in
stos
out
idiv
push
(bad)
cmp
pop
fisubr
stos
inc
cmp
jge
mov
push
fwait
mov
add
in
je
pop
dec
xlat
ds
xlat
mov
xor
cmp
or
cmps
popf
clc
mov
loope
xor
adc
xor
add
push
push
pop
jns
xchg
iret
mov
mov
dec
inc
xor
inc
test
mov
bound
add
dec
(bad)
enter
repnz
shl
inc
cmp
outs
mov
mov
in
outs
cmp
sar
lods
sbb
imul
test
into
dec
xchg
or
add
shl
call
and
push
sub
pop
jae
adc
push
loop
push
mov
cmp
mov
jle
cmps
test
arpl
sbb
adc
ins
not
push
aad
fs
mov
or
xchg
adc
retf
pop
and
test
xchg
sub
or
inc
fcomip
outs
vmread
dec
call
mov
xlat
fwait
add
push
lock
les
loop
test
mov
cli
das
repnz
daa
sbb
or
jmp
loop
jb
cwde
inc
neg
(bad)
jne
mov
gs
call
mov
and
movs
fsubr
scas
mov
repnz
dec
outs
xor
and
jle
in
lock
jmp
jle
mul
int3
mov
or
std
int
fadd
cwde
das
mov
jne
sub
iret
inc
dec
dec
int3
sub
adc
xchg
shl
inc
faddp
scas
or
cld
cmp
lahf
mov
and
sbb
into
jmp
mov
xchg
mov
jmp
mov
add
test
adc
pusha
and
das
sti
shl
push
ficomp
mov
sub
push
xchg
jno
pusha
loopne
hlt
mov
out
add
nop
adc
iret
push
jp
adc
(bad)
cmp
jo
push
out
imul
mov
push
mov
popa
sti
push
pop
mov
adc
push
in
stos
fcmovnu
mov
mov
(bad)
push
in
pop
mov
dec
jb
add
push
pop
adc
je
dec
mul
mov
pop
sbb
pop
fdivr
jmp
fwait
inc
adc
ja
js
add
loopne
in
sub
lds
arpl
lds
xor
xlat
imul
inc
ror
cmc
sbb
mov
xchg
mov
(bad)
je
pop
xchg
icebp
out
and
sar
jmp
lahf
retf
jge
(bad)
lds
in
adc
adc
sub
pop
outs
sub
in
imul
jmp
out
cli
or
sysret
imul
pop
in
xor
je
pop
jmp
xchg
push
(bad)
loop
fs
mov
add
jbe
inc
xchg
xchg
pop
shl
jno
pusha
cwde
or
adc
dec
inc
mov
stos
dec
push
mul
clc
jmp
push
icebp
or
mov
dec
scas
add
scas
or
mov
stos
xchg
call
sbb
add
enter
jl
inc
not
jno
cmp
cli
and
xchg
loopne
pop
sub
sahf
jl
loopne
cld
sbb
call
dec
sbb
out
adc
enter
mov
rcl
retf
jecxz
cmp
jecxz
and
pushf
loopne
mov
mov
jl
lock
arpl
aam
xor
push
lock
call
inc
sub
dec
mov
mov
inc
push
or
(bad)
ret
cs
xor
sbb
xchg
iret
mov
cmps
xor
adc
call
outs
outs
cdq
xor
outs
aam
repz
jb
xchg
push
push
in
or
outs
adc
shr
sub
jle
cmp
add
mov
mov
adc
rcl
ret
sub
ficomp
out
ins
mov
div
mov
push
ds
cwde
fsub
push
icebp
ins
mov
add
cwde
sub
or
adc
shl
retf
mov
rcpps
dec
dec
arpl
aad
dec
add
and
or
mov
pop
call
pop
and
aaa
les
sti
pop
or
nop
out
imul
sub
in
dec
push
push
mov
mov
fiadd
jns
into
mov
xor
out
in
rol
push
pop
test
pushfw
xor
push
pop
mov
je
nop
push
xchg
adc
pop
push
push
ss
sub
push
push
sti
arpl
(bad)
adc
stc
adc
clc
hlt
or
pop
xchg
pop
mov
xlat
fwait
data16
movs
leave
jo
xlat
ja
push
sbb
das
xor
and
sbb
sub
push
div
std
sbb
mov
dec
add
xchg
lock
leave
xchg
pop
cmp
out
call
dec
jno
and
dec
jmp
sub
adc
and
push
xchg
inc
into
dec
retf
lods
push
sbb
lods
jmp
ins
xchg
rol
cmp
mov
xor
pop
in
inc
or
rcr
jns
inc
jg
dec
xor
jge
lock
daa
dec
retf
jnp
bnd
jnp
push
sub
or
mov
sub
mov
xchg
int
sti
les
fcom
ret
cmp
inc
jb
fwait
push
out
jno
(bad)
jp
add
or
jmp
xchg
and
pop
inc
adc
mov
fmul
fnsave
inc
das
loope
jecxz
mov
add
pop
push
data16
ds
lock
sbb
add
sub
ins
addr16
enter
adc
(bad)
rcr
dec
sub
inc
dec
or
shl
aaa
push
mov
inc
shl
popf
aam
jne
icebp
nop
xor
loope
jnp
jg
das
jne
sub
not
mov
xor
xchg
inc
and
fistp
leave
test
cmp
repz
and
and
xor
add
or
xchg
lds
inc
fst
ss
sub
add
idiv
or
cmp
add
test
push
mov
sub
or
xor
push
xchg
in
mov
push
cmp
mov
adc
jno
popa
in
pushf
test
and
xchg
xor
lods
mov
outs
into
jo
mov
popa
push
aas
xor
repz
sbb
adc
je
pop
xor
loop
pop
cdq
cld
(bad)
scas
fbstp
scas
pusha
push
test
inc
xchg
jb
dec
add
sar
push
pop
test
xor
js
jp
pop
xchg
nop
mov
jg
dec
sub
jns
dec
mov
xlat
pop
sub
xchg
stos
loopne
or
or
jno
fwait
rol
clc
js
aas
(bad)
lods
pop
push
das
add
fwait
push
jecxz
mov
stc
push
jg
aad
daa
cdq
mov
loopne
test
mov
jne
xchg
icebp
pop
add
pop
ja
into
push
lods
push
sti
jmp
lods
(bad)
imul
dec
xchg
into
out
dec
push
xchg
pop
xor
inc
inc
stos
adc
sbb
xor
repz
mov
lods
and
pusha
loop
cld
and
mov
data16
dec
inc
dec
jmp
stos
cwde
jge
push
xchg
mov
out
js
inc
jmp
cmp
(bad)
jbe
mov
(bad)
mov
lods
ror
and
mov
sbb
scas
pop
cli
cmp
(bad)
cmc
inc
repz
xchg
mov
shr
outs
sbb
pop
mov
xchg
xor
ds
lock
rol
retf
dec
cmp
push
leave
(bad)
les
not
xchg
adc
fimul
jecxz
ss
xor
push
mov
and
lock
sub
fisub
xchg
fs
adc
(bad)
call
or
test
cmp
cld
mov
xchg
xor
mov
push
inc
adc
sub
dec
mov
hlt
(bad)
retf
mov
sahf
pop
lods
idiv
fcmovnb
je
ret
jae
stos
cwde
dec
or
dec
stos
retf
push
(bad)
test
xor
sub
push
xor
(bad)
jl
fisttp
inc
out
fimul
ret
pop
mov
pushf
mov
js
cmp
lahf
xchg
pop
jmp
fld
cmc
pop
jmp
test
push
push
dec
es
mov
test
imul
xchg
jge
imul
xchg
mov
push
icebp
ins
mov
and
pop
and
repz
xchg
push
icebp
out
loop
mov
cmp
add
xor
adc
sub
movs
jns
mov
fadd
mov
shl
jnp
inc
xor
jne
int3
pop
movs
sar
(bad)
stos
cmp
daa
shl
cmc
and
imul
sub
push
push
pop
sbb
xor
loopne
sub
out
cmp
addr16
sub
aad
pop
mov
imul
sub
repz
ret
jmp
leave
sti
leave
sub
cmc
push
test
sub
push
ret
dec
jle
sbb
sbb
jl
mov
mov
loop
(bad)
scas
ss
inc
push
aaa
ins
retf
sbb
stos
popa
push
pop
inc
cmp
fld
xchg
(bad)
test
xor
jge
or
cmp
jge
cmc
dec
(bad)
jae
mov
or
mov
cmp
enter
loop
and
movs
jae
dec
sub
push
lods
mov
dec
sbb
repz
dec
cld
push
or
push
mov
dec
and
push
cmc
cld
push
cdq
imul
stc
pop
jg
adc
hlt
int3
cld
inc
or
sbb
inc
inc
pop
dec
sahf
(bad)
sub
gs
and
mov
lods
mov
lea
ret
mov
retf
sbb
hlt
cmovae
push
xor
movnti
ss
cmps
je
xor
bound
dec
mov
mov
xor
das
ret
xchg
ja
xlat
mov
sbb
jl
(bad)
ror
xor
jb
pop
scas
push
cmp
fldenv
es
aad
out
push
pop
xchg
test
sub
jp
sbb
add
mov
sub
sbb
xchg
add
cdq
scas
mov
movhps
xor
lds
jnp
mov
stos
std
pop
sub
xchg
icebp
std
dec
jns
sar
div
push
add
mov
push
xor
sahf
dec
retf
xor
jmp
fwait
lea
repz
jb
popa
sub
or
mov
hlt
sbb
jge
test
push
mov
shr
loop
aaa
sub
(bad)
and
pop
arpl
mov
jecxz
pop
add
hlt
add
push
mov
xchg
mov
jge
pop
mov
fmul
push
mov
cwde
es
dec
popa
cmps
inc
(bad)
pop
inc
aas
jg
jmp
stos
mov
push
mov
fcmove
sbb
pop
in
push
adc
scas
mov
and
repnz
in
push
push
repz
add
pop
pop
retf
mov
push
mov
rcl
push
mov
hlt
jecxz
aas
sub
adc
repnz
and
hlt
dec
jp
es
mov
std
leave
data16
mov
int3
pop
jbe
pusha
jl
adc
fldenv
jle
loop
clc
push
stos
pop
test
sahf
and
dec
sbb
fisub
(bad)
fwait
or
push
ins
adc
or
add
repnz
cmp
cwde
inc
mov
xchg
outs
pop
or
cli
arpl
test
mov
or
or
mov
or
xlat
cmps
pop
dec
or
rcl
stos
mov
adc
xchg
fs
pop
pop
xchg
les
loopne
pop
cld
(bad)
iret
xchg
mov
mov
adc
inc
test
xchg
ret
xor
sub
clc
lea
nop
xlat
cld
(bad)
mov
out
or
outs
push
cmps
test
adc
and
(bad)
cmps
jmp
cmp
push
cmp
aaa
mov
test
sti
outs
loopne
and
dec
mov
daa
sahf
fs
cdq
(bad)
fwait
xchg
xor
ret
mov
xchg
or
loop
mov
or
retf
popw
mov
int
push
outs
jne
or
adc
data16
test
pop
jo
push
mov
pop
cmp
xor
inc
lods
lods
or
jge
int3
out
mov
push
frstor
sar
leave
(bad)
pop
mov
aas
call
xchg
cmp
mov
stc
out
in
adc
movs
xchg
xchg
rol
fcomp
push
lods
add
jmp
out
popf
in
add
adc
es
aad
mov
dec
or
aaa
rol
enter
sbb
aad
xor
or
jae
adc
push
test
dec
ins
mov
lods
cmp
inc
in
or
shl
fbld
mov
mov
dec
imul
(bad)
stos
or
and
dec
sub
xor
push
fistp
xor
jecxz
jno
mov
dec
inc
out
(bad)
cli
pop
push
bswap
jecxz
pop
adc
imul
add
ins
(bad)
cmps
outs
fs
cmp
adc
dec
and
adc
and
(bad)
imul
mov
scas
iret
test
ins
xor
xchg
sub
xchg
outs
xchg
loope
sbb
mov
jmp
pop
push
cli
std
inc
push
jge
jl
repz
ins
(bad)
cli
sbb
pushf
rcr
mov
add
(bad)
or
add
jnp
dec
lahf
sub
ins
adc
in
push
aad
into
fst
mov
or
push
sbb
dec
add
jnp
push
inc
jmp
pop
xor
out
mov
call
mov
pop
sub
jle
inc
mov
pop
arpl
ja
out
xchg
ror
addr16
out
call
int
jge
add
dec
std
ins
cmp
inc
xor
pop
ror
mul
jbe
jle
xor
or
pop
cmp
jp
adc
inc
pop
add
mov
dec
rol
push
mov
push
cmps
shr
sbb
xchg
mov
jo
movs
jns
lock
and
lock
or
mov
(bad)
sahf
sbb
aam
or
jl
sub
je
or
inc
and
or
mov
bound
movs
dec
jl
push
stos
or
leave
xor
repnz
add
sti
mov
and
out
int3
push
cmp
retf
sub
mov
shl
cmc
repnz
(bad)
out
popf
inc
add
stc
inc
test
jo
cmp
jg
add
mov
add
mov
in
rcr
sbb
jmp
ja
xor
pop
xchg
pop
neg
retf
or
aaa
test
hlt
shl
xchg
sbb
jns
shr
outs
fsub
jns
movs
sub
nop
nop
out
movs
xchg
aam
push
fnstsw
add
lds
cmp
xchg
(bad)
(bad)
sti
nop
jae
mov
repz
xchg
xor
test
aad
repnz
call
sbb
das
mov
cmps
jmp
sub
popf
cdq
jecxz
(bad)
leave
xlat
adc
xchg
push
push
pop
jecxz
and
lahf
mov
dec
out
pop
mov
outs
xchg
je
xchg
push
cld
je
mov
cmp
(bad)
test
jae
popf
out
das
xchg
push
stos
jp
jnp
jb
xchg
mov
cmp
mov
shr
mov
(bad)
dec
hlt
push
mov
pushfw
in
xor
dec
pushf
lahf
loopne
jecxz
ror
int
sub
cli
fmulp
add
and
loope
dec
jge
or
cmp
call
or
in
into
movs
adc
cmps
xor
les
cdq
jne
or
pusha
int3
jmp
ret
mov
test
ins
dec
lods
call
or
mov
jbe
inc
or
pusha
(bad)
cmc
test
adc
add
(bad)
stos
add
rcr
fdiv
icebp
retf
dec
or
lea
pop
in
mov
out
push
fistp
(bad)
ds
inc
mov
jae
loope
push
ins
std
cli
sbb
sbb
cs
pop
jb
mov
mov
or
add
movs
pop
fwait
jmp
imul
stos
outs
bsf
push
cmps
fcmovnu
add
sbb
jl
mov
fld
pushf
daa
pop
out
dec
out
xchg
fld
mov
mov
ret
test
mov
sub
aam
push
pop
mov
fwait
sub
ja
js
or
fwait
push
xchg
and
fmul
sbb
mov
sbb
xlat
cmps
cmc
mov
mov
jns
mov
lahf
std
enter
cmp
mov
xor
mov
(bad)
loopne
popf
loop
jge
mov
mov
loope
xor
pop
mov
dec
fwait
mov
xlat
jmp
xchg
loopne
push
leave
mov
inc
or
add
mov
leave
fdivr
dec
aaa
ret
outs
daa
inc
or
leave
loopne
inc
jg
pop
int3
aad
push
(bad)
fnstenv
push
mov
jne
mov
dec
cli
mov
mov
inc
int3
xor
fwait
int
dec
dec
jno
mov
lods
addr16
test
or
xchg
or
push
retf
pop
retf
loopne
inc
imul
icebp
les
sbb
jge
adc
jno
out
lods
jge
outs
pop
addr16
daa
idiv
jno
and
xchg
cmps
mov
mov
add
aaa
sti
movs
adc
or
mov
arpl
adc
pop
or
pop
mov
push
push
movs
jmp
cmps
popf
fcom
pop
xchg
les
aas
mov
aaa
add
adc
icebp
xchg
out
ret
lahf
inc
dec
rol
ret
add
js
cmp
push
adc
test
mov
outs
inc
in
ficom
cmp
shr
cmc
shl
out
push
cwde
lods
pop
call
mov
mov
mov
ins
aaa
or
ins
push
mov
mov
pop
mov
loopne
ins
push
rcr
inc
js
mov
mov
mov
mov
mov
adc
add
loopne
mov
jmp
sar
lea
mov
mov
or
inc
arpl
outs
out
icebp
je
inc
and
repnz
ja
push
loopne
mov
pop
arpl
shr
rcr
movs
in
jb
dec
mov
es
mov
iret
cmp
mov
in
push
mov
add
test
xchg
call
mov
outs
xor
pop
test
stc
and
test
sub
fstp
outs
les
pop
fst
add
xlat
mov
call
retf
jbe
mov
retf
or
cli
push
popf
pop
mov
aad
popf
mov
test
sub
cmps
arpl
push
mov
mov
retf
mov
sub
sub
mov
fidivr
pop
stos
rol
leave
test
xchg
lahf
cmp
(bad)
cmc
jmp
jp
test
dec
mov
(bad)
gs
and
adc
cld
ror
jge
cmp
test
pushf
bound
lahf
sub
cmc
ret
jecxz
pop
arpl
push
sbb
push
push
into
pushf
(bad)
cmp
mov
bnd
push
aad
or
pop
scas
jmp
push
mov
das
aam
adc
mov
fcomp
mov
push
mov
jnp
leave
add
xlat
mov
out
or
test
loope
leave
mov
mov
fimul
jmp
sub
jne
rol
sahf
test
dec
sti
popa
cmp
in
scas
jo
scas
xlat
sub
pop
inc
fstp
fcom
xchg
out
inc
xchg
jle
push
xchg
jns
inc
sbb
xchg
out
mov
push
add
pop
push
sbb
(bad)
or
int
lea
pop
pop
call
std
outs
fiadd
fs
fnstsw
adc
int
ins
cmps
pop
cmp
pshufw
jns
dec
xor
push
nop
mov
jb
(bad)
in
mov
pop
js
xor
or
sti
cmps
gs
sub
enter
in
jp
or
clc
fdiv
push
and
in
cmp
stc
scas
arpl
das
mov
ja
cmp
stos
sub
push
pusha
(bad)
mov
push
icebp
mov
cmp
das
mov
add
mov
sub
sub
sub
jmp
dec
enter
pop
sub
xchg
or
enter
pop
adc
and
in
dec
dec
or
fild
out
stos
test
adc
sti
xchg
gs
jp
cli
and
jl
pop
pop
(bad)
scas
cmp
or
inc
ja
jmp
idiv
inc
test
neg
inc
mov
ss
mov
jg
pop
sbb
sbb
jno
imul
pop
scas
adc
mov
cdq
xchg
xor
mov
icebp
das
adc
pop
jl
sbb
cmp
xchg
sbb
mov
in
(bad)
pop
cmp
xchg
in
mov
jne
mov
mov
(bad)
addr16
adc
addr16
xchg
(bad)
std
fwait
pop
dec
test
xor
xchg
test
sbb
stos
push
sbb
push
in
dec
mov
(bad)
fisttp
addr16
nop
cmp
loop
adc
movs
xchg
shr
add
add
aad
mov
jmp
mov
jle
sbb
ret
add
inc
adc
in
push
or
add
inc
pop
ss
ins
or
inc
das
test
movs
out
and
push
pusha
pushf
in
jnp
jecxz
and
out
clc
xchg
jl
mov
retf
mov
adc
aam
push
push
lods
mov
push
push
jbe
xchg
sub
push
adc
ja
dec
push
mov
jo
push
fsub
push
push
jo
cmp
jbe
lods
std
call
aad
std
fst
ret
adc
imul
test
jne
rol
in
push
jns
repnz
ss
mov
hlt
jnp
fimul
sahf
in
test
pop
adc
push
xchg
cmps
movq
retf
fs
hlt
push
xor
adc
mov
add
aas
jmp
sub
rol
hlt
and
lods
fcos
neg
retf
lods
xor
fdivr
push
adc
stos
(bad)
sub
inc
push
sar
mov
and
xchg
adc
shr
pop
js
dec
in
int
cmp
and
mov
and
jnp
fsub
inc
inc
addr16
adc
pop
popa
stos
sub
(bad)
cwde
lods
push
mov
push
jecxz
popa
out
jge
(bad)
sbb
lea
sub
call
jb
leave
fcom
and
call
lods
sbb
xchg
or
xchg
loop
mov
loop
data16
into
and
lods
mov
enter
ret
push
ret
aad
data16
out
inc
adc
call
test
cld
fisub
inc
and
add
jl
and
outs
hlt
call
cmp
jl
outs
fmul
cmps
popf
pop
push
sti
pop
dec
xchg
sbb
jb
sbb
push
mov
fs
push
add
dec
pop
sub
sub
aaa
jle
add
ret
push
jp
mov
mov
or
inc
in
pop
popf
aas
scas
out
inc
nop
mov
xlat
in
icebp
in
sar
jle
push
inc
mov
push
inc
adc
div
fcomp
jne
push
rol
push
mov
mov
nop
stos
out
aaa
jno
in
jecxz
pop
das
int3
cmp
ficomp
and
fs
push
mov
sub
adc
js
cmp
jbe
shr
es
repnz
jo
retf
out
xor
pop
sti
dec
mov
mov
dec
xor
xor
mov
(bad)
dec
dec
adc
(bad)
xor
les
jl
imul
xchg
jbe
xlat
mov
jae
std
cmps
push
out
jne
add
mov
cwde
leave
mov
mov
fisubr
jle
push
mov
out
xchg
ret
xchg
pop
dec
pop
lock
fs
pop
je
inc
scas
arpl
repz
repz
gs
shr
pop
in
adc
imul
mov
adc
pop
popf
call
repnz
pop
sub
sub
adc
ror
sti
sbb
jo
mov
data16
test
popa
dec
or
mov
mov
mov
sbb
add
cwde
sub
push
shl
mov
loopne
mov
scas
pop
js
mov
rcr
mov
test
jmp
lods
fldcw
movlps
(bad)
imul
and
aam
adc
mov
mov
lds
retf
mov
inc
sbb
rol
iret
and
fiadd
out
fnstsw
test
rcl
and
sbb
push
neg
and
fisttp
and
and
sahf
inc
xchg
out
xor
aad
inc
mov
push
test
or
dec
fisubr
out
jbe
stos
aam
xor
ja
pop
cli
and
mov
sub
bound
aam
xor
xchg
dec
cmps
sahf
pop
adc
adc
inc
repnz
sub
mov
adc
mov
jbe
jo
mov
sub
and
push
or
arpl
and
cwde
fcom
adc
(bad)
fbstp
fdivr
mov
pushf
mov
lock
xchg
and
arpl
xchg
xor
lock
je
jbe
outs
push
pop
push
sahf
cs
dec
inc
jns
mov
jmp
xchg
sbb
dec
adc
std
add
enter
idiv
xor
rcl
ret
test
sub
jns
sub
inc
add
or
lods
pop
mov
jb
pushf
stos
xchg
pop
push
inc
pop
push
shl
or
mov
enter
jae
fdivr
mov
xchg
daa
add
push
call
xor
in
(bad)
mov
loope
mov
(bad)
ret
movs
jnp
inc
jo
lahf
xchg
xor
cmc
or
aas
pop
mov
inc
test
popa
pop
and
fmul
push
arpl
adc
mov
clc
jle
add
sbb
cmps
ja
mov
shl
popf
aas
inc
mov
ret
inc
inc
out
sub
(bad)
and
or
sub
test
stc
inc
cs
mov
push
aaa
or
sub
xchg
fcomp
(bad)
sti
xchg
imul
add
and
lahf
pop
fst
pushf
ret
xor
lea
stos
sahf
jmp
cmp
js
push
mov
ins
test
lahf
xor
cmp
in
ds
in
test
addr16
adc
ror
xchg
mov
popw
movs
xor
clc
mov
jno
cmp
push
pop
or
and
shl
sbb
sub
call
test
jge
pusha
add
stos
lds
sahf
pop
inc
outs
fiadd
ins
adc
inc
call
mov
mov
sar
stos
xor
fist
(bad)
test
mov
lock
push
push
add
(bad)
jae
add
push
movs
pop
iret
mov
dec
js
shl
popf
stos
das
mov
push
repz
sar
and
je
and
in
mov
xor
sub
pushf
pop
pop
aaa
or
movs
cmp
mov
das
push
shl
retf
dec
ret
call
ins
aaa
jns
fcomp
xchg
jle
imul
add
ficom
sbb
mov
add
jnp
out
mov
rcr
cmp
jns
pop
mov
jns
mov
call
xor
neg
sub
mov
retf
popa
loope
mov
pop
popf
ret
loop
(bad)
fild
jno
add
jb
movs
inc
sbb
cwde
test
jl
add
inc
dec
iret
xstore-rng
cmps
add
xchg
inc
jns
mov
jo
sbb
adc
cmp
jo
adc
popa
inc
fwait
sti
and
addr16
xchg
es
mov
cwde
aaa
push
mov
dec
or
push
or
xor
out
repz
cmp
mov
xchg
btc
ss
pop
movs
cs
ret
mov
add
les
adc
cs
cmp
imul
call
fcomip
in
mov
shr
ja
and
sbb
outs
lock
test
int3
retf
das
mov
repnz
mov
pushf
cmps
jge
int
fild
dec
xor
test
fwait
and
push
fldcw
fbld
mov
mov
lahf
dec
shl
mul
push
pop
inc
cmps
or
lds
dec
int
push
out
xor
jge
mov
mov
sbb
inc
cli
into
push
in
sbb
int
stos
add
mov
adc
xchg
pop
mov
adc
jns
mov
ror
aam
jecxz
cmp
sub
adc
lea
mov
adc
sub
dec
arpl
int3
call
stc
sbb
dec
arpl
xlat
gs
dec
add
cmp
les
adc
cmp
cmp
or
hlt
add
and
push
mov
rol
leave
loop
dec
mov
loop
in
gs
xor
sub
rcl
mov
jbe
push
sbb
adc
add
inc
push
sar
xor
mov
and
rcr
xchg
inc
repz
inc
inc
inc
sbb
rol
popf
popf
fs
(bad)
rcl
inc
in
cmp
push
and
sbb
fwait
aas
and
push
fidiv
iret
cld
retf
sbb
out
sub
stos
jmp
fs
push
popa
sti
jae
xor
mov
in
(bad)
test
sbb
(bad)
sbb
mov
in
cmps
or
push
inc
scas
or
test
int
pop
cmp
ins
mov
outs
not
mov
cmps
or
rcr
jno
push
inc
pop
lock
iret
push
punpckhdq
aam
and
and
dec
adc
mov
ss
sub
or
test
push
fdivr
xchg
sbb
(bad)
mov
enter
mov
sub
xchg
ficom
sar
mov
pop
ret
test
cmp
push
and
gs
scas
jmp
add
fldcw
mov
adc
cmc
fbld
xchg
mov
sub
or
push
and
push
dec
(bad)
lahf
sbb
call
enter
pop
popf
sbb
shr
sub
xor
and
push
sbb
mov
jo
mov
cmp
xchg
mov
jp
inc
cmps
pop
stos
(bad)
push
leave
ins
adc
(bad)
int3
imul
mov
jae
loopne
jle
dec
les
xchg
adc
call
fisubr
inc
popf
(bad)
enter
xor
aaa
sub
xor
(bad)
sbb
pop
test
ins
push
pandn
imul
leave
and
repnz
mov
ret
stc
cmp
popf
xchg
fs
les
dec
stos
pop
lods
mov
nop
fs
fisttp
inc
bound
jge
cmp
imul
xchg
inc
pushf
fisttp
xchg
leave
mov
cli
jl
sub
cli
sub
out
dec
cmps
fld
mov
push
dec
cdq
jbe
mov
push
test
jmp
jmp
mov
add
(bad)
sbb
fiadd
cmp
inc
sub
pop
fnstenv
fld
arpl
dec
movs
dec
jo
xor
xor
int
cs
pop
outs
and
jno
test
dec
and
mov
int3
push
clc
popf
xchg
dec
cmp
imul
dec
cmp
pop
inc
xchg
mov
jns
jg
xchg
lock
js
lds
popf
retf
mov
loop
mov
aad
neg
les
cmp
or
inc
add
stc
and
sti
push
jne
push
mov
sbb
(bad)
jge
xor
dec
stos
into
xor
imul
imul
add
sbb
and
shr
add
ret
ret
inc
sub
and
and
in
or
test
sar
push
ins
push
hlt
stc
mov
dec
daa
call
mov
and
ret
mov
cmp
pop
pop
jmp
cwde
dec
push
aad
and
fcmovne
pop
push
xchg
sub
cmp
imul
adc
mov
mov
add
mov
xor
pop
cmc
shr
mov
push
ficom
loop
fmul
mov
add
or
fsub
mov
jmp
mov
lods
sbb
jmp
cmp
mov
sbb
cmps
sbb
pop
adc
xchg
sbb
std
push
mov
push
stos
jno
(bad)
sbb
push
and
or
inc
test
pop
or
jb
jecxz
(bad)
(bad)
ja
mov
(bad)
mov
lock
mov
ror
mov
jecxz
mov
int
cwde
pop
dec
fst
(bad)
lock
fidivr
xchg
xlat
dec
push
scas
jle
aas
inc
gs
call
in
aas
call
inc
repz
outs
adc
lods
(bad)
cmp
lods
pop
dec
cmp
adc
xchg
pop
xor
int
test
sahf
into
dec
dec
cmp
lods
cmps
adc
jo
mov
inc
shl
daa
stos
hlt
dec
call
loop
loope
test
dec
out
mov
adc
xor
lods
xchg
rol
scas
es
stos
pop
xchg
pop
push
inc
cmp
xor
(bad)
gs
mov
cmps
adc
cmc
pop
add
mov
ins
sbb
jne
clc
outs
xor
xor
(bad)
iret
(bad)
xor
fadd
jp
mov
cld
xor
or
test
mov
dec
xchg
mov
ffree
xor
sbb
sbb
popa
popa
in
dec
icebp
data16
jecxz
mov
mov
loope
mov
outs
push
sahf
iret
inc
ja
ss
test
push
or
hlt
lods
cmc
jl
and
aad
dec
int
stos
sbb
jmp
hlt
cwde
mov
popf
call
pop
loop
xchg
aaa
pop
cmp
lea
and
mov
out
dec
scas
push
xchg
cmp
inc
and
ror
adc
pushf
add
mov
pop
enter
aad
sar
mov
adc
(bad)
pop
fnstenv
xchg
jnp
call
pop
scas
into
sbb
stc
cmp
xor
jmp
loope
cmp
outs
fdiv
sahf
retf
dec
retf
fcomip
lods
shl
mov
xlat
xor
push
jecxz
push
jnp
pusha
push
sahf
cmp
fwait
push
test
movs
xor
in
retf
jmp
cmps
pop
arpl
rcr
fisubr
js
push
xor
mov
scas
ret
fdiv
jp
lahf
xchg
jmp
int3
mov
icebp
mov
iret
out
jmp
lds
sub
jmp
(bad)
push
dec
or
pop
or
lea
imul
jae
hlt
dec
stos
cs
clc
cwde
leave
shl
shl
icebp
imul
mov
outs
mov
mul
arpl
ds
shr
loope
cld
(bad)
outs
fcmovbe
outs
dec
adc
gs
pop
in
cwde
cmp
xor
cmps
int
and
jnp
jb
mov
imul
add
mov
jne
cdq
push
lods
test
stc
(bad)
dec
aad
sar
cmps
adc
pushf
mov
inc
adc
pop
sar
enter
jle
dec
repnz
out
jecxz
xchg
sar
inc
inc
fld
daa
out
lods
and
jecxz
leave
adc
push
push
dec
jmp
or
inc
sub
cmp
les
sub
popa
das
mov
outs
cdq
push
int3
and
out
les
or
mov
addr16
push
mov
push
xchg
cdq
fidiv
imul
adc
sbb
repz
ins
std
inc
mov
push
aas
dec
(bad)
push
sbb
xor
movs
sbb
test
(bad)
push
pop
je
rcr
or
mov
xor
sub
xchg
call
sub
xchg
aas
cmc
cmp
(bad)
mov
test
and
mov
sub
add
out
xor
pop
fsub
rol
shl
test
test
adc
xchg
cmp
loop
pop
push
movzx
cdq
shr
xchg
ds
push
push
mov
scas
inc
ret
addr16
out
ds
add
loopne
mov
fsubp
enter
out
add
mov
push
arpl
mov
mov
or
aam
rcl
add
sub
js
push
or
add
ret
popf
jp
add
mov
arpl
out
cmps
add
or
das
add
clc
mov
addr16
adc
adc
fidiv
rol
jmp
cmp
(bad)
in
cmp
mov
mov
test
in
loopne
ins
adc
pop
adc
push
into
jecxz
cmps
xor
fidiv
leave
dec
int3
rcl
jmp
push
call
ins
pop
daa
fst
mov
or
sbb
mov
fs
push
nop
xchg
adc
ret
cmc
data16
jmp
sub
je
dec
fstp
cmp
mov
sub
pop
push
mov
mov
stos
add
add
rol
enter
xchg
int
jmp
aas
movs
or
clc
jne
dec
in
xchg
adc
add
jmp
dec
sub
jae
repnz
ror
iret
add
icebp
enter
cmp
loopne
xor
dec
imul
adc
out
cmp
mov
xchg
bound
(bad)
cmp
fcmovnbe
test
leave
sub
jg
iret
xlat
and
fmul
aad
mov
jg
and
je
sub
xchg
mov
stos
pop
and
or
out
pop
lods
mov
jmp
adc
ja
cmp
jmp
jmp
pop
in
aad
ret
add
aas
and
ds
nop
stos
and
dec
xor
adc
cdq
push
sar
mov
or
pop
mov
shl
test
cmps
or
ja
jns
jmp
cmps
sbb
inc
imul
imul
push
and
mov
sbb
sbb
pop
movs
push
mov
mov
add
inc
sbb
dec
xchg
(bad)
jbe
mov
cs
xor
mov
pusha
push
ss
jmp
call
xor
sub
cmps
jb
lods
sub
cwde
and
cmps
mov
cwde
out
mov
out
retf
(bad)
pop
and
jb
sub
(bad)
sbb
psubsw
in
push
aas
xchg
jo
rol
int
sbb
push
aas
or
mov
xchg
xchg
mov
pop
push
push
aam
sub
and
pusha
dec
jmp
jnp
mov
loopne
mov
popa
push
sub
mov
fisubr
cmc
and
sbb
mov
adc
jg
push
mov
cmps
fucom
pop
mov
mov
mov
loope
mov
jbe
inc
mov
adc
sti
push
dec
mov
pop
mov
das
mov
mov
mov
and
ret
in
test
clc
jo
push
adc
cmps
leave
dec
push
sub
movs
daa
cmc
or
inc
pop
and
xlat
ins
pop
xor
xlat
inc
pop
lea
js
push
mov
jmp
or
aaa
cmp
gs
push
mov
mov
aam
xlat
xchg
fild
cmps
dec
jge
inc
fsubr
cmp
push
shl
sub
psubb
dec
daa
mov
cdq
je
outs
call
mov
xor
fmul
outs
inc
ins
pop
mov
loope
mov
pop
xchg
jns
sbb
cli
push
push
and
mov
push
jl
aaa
ss
ret
pop
or
cmp
icebp
shl
cmc
xchg
mov
popa
dec
repnz
out
jge
push
repz
in
inc
jmp
std
dec
aas
mov
jl
(bad)
sar
push
inc
mov
or
ins
sub
jecxz
pop
cmc
xor
mov
shl
test
call
pop
sub
fiadd
aad
sbb
fisubr
cmps
pop
leave
in
jg
inc
sbb
les
inc
adc
inc
mov
mov
ror
push
mov
jecxz
inc
mov
test
ins
les
stos
ret
cmps
pop
and
dec
adc
shr
pusha
mov
scas
mov
sub
mov
push
(bad)
nop
test
xchg
push
lods
loope
or
jbe
cmp
sbb
mov
shl
push
inc
sbb
dec
xchg
mov
cdq
test
jecxz
pop
mov
mov
icebp
neg
(bad)
adc
fisub
dec
stc
adc
adc
aam
adc
inc
cmp
call
mov
arpl
sub
and
sbb
and
(bad)
push
pop
xor
push
xchg
bound
xchg
jno
push
or
cwde
push
shl
dec
ins
cmp
push
adc
pop
pop
xchg
pop
ja
mov
push
jmp
pop
in
(bad)
sbb
jle
scas
in
iret
pop
pop
jne
mov
add
outs
mov
or
add
pop
and
aam
scas
jmp
cmp
gs
and
add
inc
(bad)
pop
inc
shr
dec
xor
sub
lods
push
add
ret
dec
cmp
clc
add
pop
sbb
adc
add
ror
not
in
jge
xor
or
(bad)
lea
popa
jmp
cld
test
fild
ins
outs
out
lds
inc
(bad)
mov
push
jecxz
sbb
(bad)
mov
jo
mov
(bad)
call
data16
pop
mov
ds
mov
mov
out
(bad)
into
xchg
movs
mov
sub
test
loopne
call
dec
repnz
jge
test
mov
jecxz
cmp
(bad)
xchg
mov
jae
and
inc
ins
push
mov
jge
(bad)
js
(bad)
lea
test
jb
inc
cmp
adc
popa
ja
mov
retf
loope
std
and
popf
mov
data16
jbe
rcr
push
xlat
dec
dec
xchg
int
(bad)
pop
outs
inc
jmp
mov
test
and
cmp
cld
jg
int
pop
int3
inc
fs
jne
test
xor
ss
lods
dec
mov
in
push
ret
pop
add
fs
push
inc
xor
imul
push
loope
adc
dec
mov
push
push
sub
jp
leave
add
inc
push
pop
push
aaa
movs
sub
jae
add
jmp
cmp
inc
dec
inc
xchg
test
xor
mov
ret
rcl
push
inc
push
jo
into
lahf
scas
scas
dec
scas
sub
pavgb
pop
neg
push
jmp
xchg
cld
neg
stos
mov
cmp
adc
scas
(bad)
sar
cdq
fsubrp
fcom
mov
mov
pop
inc
icebp
out
add
call
inc
stc
mov
sbb
xchg
add
add
xchg
pop
mov
daa
cwde
push
xchg
xchg
jno
in
fiadd
xor
js
dec
push
push
movs
inc
push
movs
adc
mov
mov
xchg
push
and
mov
(bad)
fiadd
nop
cmp
ss
xor
lock
mov
bound
xor
sbb
(bad)
and
or
mov
stos
aam
mov
data16
mov
push
mov
pop
xor
addr16
or
and
iret
adc
js
stc
jno
mov
ins
or
pop
out
push
dec
and
lock
pop
jecxz
push
jnp
cmp
jno
(bad)
mov
xor
push
outs
mov
mov
inc
cmps
(bad)
aam
push
outs
or
inc
jno
and
movs
xor
jbe
int3
sub
leave
sbb
pusha
test
enter
dec
mov
mov
jnp
jo
xlat
add
jmp
ret
call
ss
fucomi
mov
jp
push
aam
out
sub
js
cmp
shl
jg
mov
push
and
sub
sbb
ror
imul
outs
ins
push
cmp
test
mov
mov
ficom
dec
out
out
dec
js
leave
sub
pop
push
call
jge
and
mov
xchg
inc
push
out
neg
mov
leave
das
fwait
pop
jmp
fist
loop
mov
fist
fsubr
mov
or
jne
ss
cmps
xor
push
aas
ret
stos
and
inc
push
fisttp
adc
scas
and
scas
int
mov
and
inc
dec
pop
mov
lods
fwait
mov
std
xor
test
retf
cmps
and
jbe
add
adc
adc
mov
xchg
out
or
mov
adc
retf
dec
jl
jp
adc
push
lds
jecxz
icebp
lahf
loop
adc
jmp
(bad)
repnz
hlt
dec
adc
xor
ror
dec
adc
les
dec
push
pop
inc
(bad)
xchg
or
sub
ret
push
mov
mov
jno
dec
pop
popf
ins
ja
fdivr
shl
scas
jmp
stos
mov
mov
aam
jl
push
push
loopne
ins
xor
out
(bad)
cmps
fwait
ins
dec
fistp
fsubr
mov
xchg
mov
nop
sub
shl
jmp
pushf
clc
scas
sbb
jl
inc
jbe
adc
adc
aaa
xchg
out
mov
pop
pop
ds
out
cmp
(bad)
jl
push
loopne
jb
cmps
adc
jge
fs
cs
inc
cs
ficom
(bad)
sbb
inc
adc
sbb
fmul
data16
push
repz
test
sbb
push
or
dec
and
push
push
inc
and
test
or
addr16
loop
xchg
sbb
daa
mov
sbb
frstor
mov
xor
dec
ins
xchg
pop
mul
and
cmps
push
pop
and
pop
pushf
(bad)
xchg
fwait
cmp
xchg
sbb
(bad)
or
or
repnz
repnz
shr
jo
daa
shl
shl
das
add
and
int
test
jl
scas
cmps
mov
aam
in
jae
test
shl
fwait
imul
fistp
mov
xor
cmp
fcmovnbe
adc
neg
test
daa
dec
mov
or
xor
inc
test
ja
mov
shl
mov
int3
xchg
hlt
xchg
test
inc
in
test
mov
pop
std
clc
push
sbb
inc
test
jno
imul
dec
sbb
rol
adc
popf
xor
jle
pop
mov
push
daa
scas
int
xor
push
sub
mov
inc
fisub
lea
pop
loop
outs
push
jb
aam
adc
mov
enter
stc
clc
int3
jge
cli
repnz
lods
loope
mov
cmp
inc
ins
lods
lods
sbb
cmps
int3
mov
dec
out
push
loop
push
cmp
mov
mov
jle
mov
aas
inc
movs
push
cmp
cvttps2pi
add
add
das
loop
inc
add
movs
arpl
or
add
dec
mov
idiv
mov
cmps
inc
mov
pushf
mov
push
aad
imul
les
sbb
es
lahf
scas
adc
rcr
test
pop
xchg
push
sub
adc
movs
and
xor
push
pushf
mov
imul
inc
jg
add
add
xlat
dec
dec
dec
or
das
je
loop
out
xor
inc
push
arpl
mov
fadd
mov
movs
push
sub
mov
ja
jb
bnd
sbb
retf
ins
sbb
and
jg
sub
jnp
loop
or
in
jnp
sbb
mov
mov
cwde
ret
mov
or
pop
jg
clc
das
mov
mov
les
jle
stc
xchg
out
jno
aaa
movs
into
push
sti
loope
ficomp
jp
fstp
push
sar
imul
xor
jge
and
mov
mov
je
xchg
shld
sub
and
je
inc
push
and
pop
pop
and
jl
pop
out
shl
(bad)
adc
sahf
inc
test
nop
out
mov
xchg
xor
repnz
shr
gs
add
adc
sub
push
xor
push
xchg
rcl
(bad)
xchg
stc
repnz
arpl
add
outs
iret
sub
iret
shr
jb
mov
jp
(bad)
push
cmp
jbe
mov
push
sub
sub
or
add
js
ins
and
mov
das
cld
fimul
shl
js
sub
in
push
ds
mov
cli
push
xor
jge
cmp
mov
stc
inc
fidivr
ficom
sub
mov
pop
xor
shl
cmp
jnp
adc
fadd
mov
fs
xchg
xchg
movs
or
out
(bad)
jno
lds
add
stos
dec
jno
push
mov
and
iret
push
pop
inc
std
pop
fwait
mov
cmp
or
cli
rcl
jb
or
data16
xchg
sub
xchg
or
jmp
jbe
(bad)
stc
cmp
aad
xchg
cmp
or
pop
push
xchg
out
pusha
cmp
mov
gs
mov
xchg
push
subps
xchg
cli
sbb
jne
div
push
(bad)
lock
jnp
(bad)
push
loope
sub
pop
mov
mov
cmp
fisubr
aam
mov
inc
sbb
fld
push
adc
push
cmp
pop
push
jecxz
das
and
fist
mov
ror
add
or
xor
mov
or
pop
(bad)
xor
inc
scas
call
xchg
(bad)
jne
test
out
mov
add
or
icebp
movs
xor
mov
fild
sub
cwde
pop
adc
sub
pop
dec
jecxz
mov
pop
outs
(bad)
enter
sti
sbb
push
mov
dec
ds
jge
push
es
add
sub
mov
fsub
shr
cmp
jno
jns
fist
cmp
lea
pop
test
jge
cwde
call
xchg
cmp
cli
daa
mov
clc
add
or
es
pop
xchg
jle
jo
test
aad
add
scas
int3
xor
enter
adc
xlat
jns
jecxz
test
aaa
repz
stos
mul
sub
xchg
xor
inc
mov
sahf
mov
inc
jbe
ja
push
and
xchg
inc
push
ins
inc
inc
sub
add
sbb
cmp
pusha
sbb
adc
test
xor
xchg
xor
push
(bad)
aam
popa
inc
es
pop
fmul
inc
ds
inc
sbb
fstp
sub
and
pop
mov
into
xchg
pop
into
out
pop
add
aas
or
fcomp
push
xor
into
pop
sbb
xchg
dec
xchg
js
int3
dec
jae
call
movs
pop
cwde
and
imul
jle
enter
dec
push
xchg
xor
mov
(bad)
mov
out
idiv
in
pop
shl
xor
call
adc
dec
js
pop
sbb
sti
fnstenv
add
add
in
daa
iret
cmp
(bad)
xchg
(bad)
jnp
rcr
cmp
icebp
inc
mov
jmp
test
mov
jp
jne
clc
jge
xor
and
sbb
sub
xchg
loopne
mov
dec
scas
xor
pop
(bad)
les
xor
outs
pushf
push
mov
sub
mov
dec
push
hlt
lods
dec
adc
mov
add
mov
jnp
push
sub
or
jg
dec
xor
mov
in
dec
inc
mov
and
iret
in
ins
nop
push
dec
xchg
fs
and
call
pop
pop
inc
jnp
adc
jb
inc
(bad)
cld
jge
data16
aaa
sbb
xchg
push
test
(bad)
clc
movs
inc
lahf
cmp
mul
mov
sub
adc
sub
sub
fs
test
fldcw
int
xchg
movs
pushfw
or
xor
add
into
punpckhdq
add
mov
out
fst
or
out
mov
xchg
adc
add
push
xchg
or
mov
cmp
jmp
xchg
aaa
lds
sub
cmps
sub
jae
stos
loop
out
dec
jge
scas
(bad)
pop
les
icebp
mov
rcl
sub
and
lods
ret
outs
icebp
loopne
pop
cmp
jl
add
pop
cld
jge
mov
jbe
das
mov
xchg
add
push
adc
mov
stos
fdivr
popf
inc
mov
loopne
add
(bad)
mov
data16
retf
adc
das
scas
pop
inc
popf
pop
push
aas
push
aas
mov
pop
loope
xor
ss
xchg
into
jnp
pop
daa
or
js
mov
shl
push
stos
jl
sbb
out
fisubr
jb
pop
dec
jb
dec
adc
xchg
cmps
out
xchg
mov
push
mov
gs
pop
iret
jle
push
inc
loope
mov
cmp
jmp
inc
and
adc
test
xlat
adc
inc
cmc
stos
sbb
in
mov
mov
sbb
icebp
cmp
in
fs
mov
cdq
repz
pop
(bad)
fnstcw
mov
sub
add
xor
into
dec
push
pop
gs
adc
daa
adc
icebp
and
and
in
xor
cmc
xchg
ret
mov
cmp
cmp
pushf
push
fstp
add
add
xchg
sub
sbb
push
jne
fwait
mov
fs
sahf
mov
int3
or
mov
inc
dec
inc
shl
xor
and
jp
int
jge
mov
not
out
rcl
cwde
pop
adc
es
aam
push
adc
lods
adc
cdq
adc
retf
shl
pushf
sub
pop
adc
cmp
outs
add
xor
int3
in
pop
mov
lods
inc
mov
pop
jl
mov
pop
iret
ss
jae
aas
cmps
adc
add
push
xchg
cld
sub
icebp
sub
lea
mov
stos
clc
adc
inc
inc
in
xor
les
adc
sbb
or
int3
jnp
cld
(bad)
test
int3
pop
out
xor
and
xchg
retf
bnd
bound
cmc
cmp
pop
movs
cld
enter
jo
xchg
or
push
out
jns
(bad)
pop
stos
(bad)
hlt
mov
mov
repnz
push
sti
test
sub
fst
fnstsw
(bad)
jl
jmp
pop
(bad)
xchg
je
retf
or
push
ror
push
mov
fidiv
or
push
adc
mov
add
jae
int3
into
mov
inc
add
or
and
sub
out
adc
retf
in
pop
(bad)
popa
lea
add
add
xchg
iret
mov
xchg
or
inc
mov
sbb
cs
je
adc
(bad)
cmp
test
rcr
add
add
xor
enter
jo
and
cmp
and
dec
out
and
popf
leave
jae
(bad)
arpl
xor
inc
jg
test
sbb
pusha
int
adc
call
sub
jg
and
enterw
clc
icebp
ret
imul
fcomp
cmp
and
ins
sahf
fidiv
inc
fistp
xor
sbb
or
sub
push
cmps
(bad)
and
xlat
mov
es
sbb
push
push
je
push
and
imul
add
add
fs
int
pop
out
mov
rcl
ins
jmp
inc
sbb
punpckhdq
call
daa
pop
sub
push
mov
fadd
cmc
pop
cmc
(bad)
clc
(bad)
cwde
add
jl
cdq
xchg
add
movs
icebp
scas
movs
add
pop
mov
int3
(bad)
and
mov
retf
mov
jnp
cmp
or
lahf
jb
pop
(bad)
cmps
ret
leave
and
add
xchg
clc
(bad)
inc
rol
mov
scas
or
retf
rcr
cmp
pusha
jbe
mov
push
fmul
sbb
fcmovnbe
pushf
fist
test
dec
stos
test
gs
cwde
sub
jno
pop
fs
loop
mov
xchg
lods
movs
into
cmp
xchg
fsubr
push
sbb
stos
stos
stc
shr
jb
mov
std
or
call
cmps
and
push
push
fmul
(bad)
out
inc
fwait
rcr
pop
rcr
cmp
cmp
cmp
int3
xchg
rcr
mov
xor
push
inc
test
outs
ss
test
inc
fldenv
loopne
add
cli
and
in
daa
test
ins
mov
retf
xchg
and
movs
aaa
dec
(bad)
shl
cld
lods
sti
xor
pop
fistp
fmul
xlat
stc
jle
lock
call
loope
xor
push
repz
aas
repz
and
pop
repz
fstp
retf
adc
push
mov
scas
xchg
xor
inc
dec
sahf
lods
xchg
xchg
ins
bound
movs
dec
xchg
and
xchg
fisubr
arpl
sbb
jmp
inc
les
pop
bound
mov
test
ss
loope
outs
movs
or
pop
out
jl
nop
sets
repnz
hlt
lods
jae
clc
or
xor
adc
mov
mov
adc
test
ins
cmp
enter
cmp
pop
popa
and
mov
stos
pmulhw
mov
xchg
pop
movs
cli
mov
dec
mov
ins
call
and
rcl
inc
popa
jnp
sub
in
cmp
int
retf
bound
jbe
or
sbb
clc
xchg
stos
ins
cwde
int
xchg
shr
lahf
push
sub
pop
cld
rcl
loope
test
aas
push
stos
cwde
xor
or
xchg
test
sub
mov
and
fcom
jl
imul
call
pushf
adc
pop
or
sbb
les
jns
jne
sbb
pop
movs
mov
pop
(bad)
gs
fsub
xor
bound
sub
mov
or
test
mov
cmc
jbe
push
jg
cmp
ss
add
(bad)
adc
(bad)
pop
xchg
sub
leave
inc
fs
dec
sahf
xchg
xchg
mov
adc
in
jmp
or
iret
out
lahf
sub
push
xor
std
push
mov
adc
inc
into
sbb
dec
xchg
cmp
jne
iret
pop
ficom
dec
movs
fmul
fistp
push
addr16
jmp
into
pushf
retf
(bad)
(bad)
nop
sar
repz
xor
mov
cli
jno
add
(bad)
fistp
xchg
and
data16
shl
jl
out
inc
inc
pop
inc
mov
out
jmp
scas
cdq
movs
pop
lods
sub
cmp
arpl
ds
int
jl
xor
outs
idiv
sbb
add
fcom
mov
mov
push
popa
and
xchg
pop
mov
dec
xchg
push
dec
jecxz
mov
adc
sbb
add
jge
in
cdq
(bad)
jnp
jg
outs
jbe
pop
repz
mov
ss
xor
std
das
in
cmp
push
(bad)
pusha
repz
xor
fdiv
and
test
fnstsw
mov
mov
shl
popf
test
leave
or
lods
pop
sbb
xor
cld
sbb
ja
stc
cmps
cdq
out
add
dec
sub
test
stos
jge
ja
lock
xor
cmp
dec
mov
sti
bswap
(bad)
stos
push
std
outs
cmc
and
nop
lods
gs
leave
cmps
movs
loop
and
xor
shl
repz
push
cmp
imul
push
lock
pop
push
les
push
js
adc
mov
push
xor
adc
inc
mov
dec
fsubr
(bad)
xor
sub
mov
xor
push
or
cld
and
js
bound
test
out
lock
cmp
xchg
mov
ret
mov
call
sub
imul
xor
xchg
ins
outs
fisttp
scas
xor
lea
jp
lods
xchg
xchg
(bad)
lahf
and
sbb
and
fist
sub
ja
test
popf
add
and
dec
xchg
pop
cmp
cmp
retf
cmp
out
xor
mov
into
sar
in
and
stc
mov
loopne
jecxz
add
jo
mov
mov
mov
push
cmp
cs
or
dec
jns
shl
jle
adc
aas
(bad)
cmp
aad
call
scas
mov
sub
pop
stos
out
icebp
sbb
les
sub
inc
mov
in
jle
fisubr
inc
fnstcw
mov
ja
sub
jl
adc
lods
adc
std
sbb
lahf
inc
(bad)
lock
mov
pop
and
mov
sbb
xor
inc
cmp
mov
dec
in
sbb
dec
test
retf
mov
popf
cmps
inc
adc
pop
jecxz
mov
or
fisubr
fld
ret
mov
add
xor
dec
(bad)
mov
xor
fiadd
xchg
imul
pusha
pusha
mov
sbb
leave
fcmovbe
call
test
out
cmp
(bad)
fcomp
mov
call
inc
xor
jo
mov
jno
ja
cmc
dec
cmp
xor
leave
outs
call
scas
daa
push
cdq
imul
push
loopne
jnp
inc
fdivr
jbe
les
mov
pop
sbb
adc
aaa
push
les
inc
fstp
es
inc
mov
outs
push
cmp
dec
int
adc
fsub
addr16
fldcw
pushf
(bad)
retf
out
add
nop
loop
sbb
daa
push
js
int3
lods
cmps
mov
or
add
scas
pop
xchg
sbb
loop
push
pop
ror
adc
fld
es
icebp
dec
jle
arpl
add
mov
adc
iret
add
sar
add
iret
scas
jbe
push
sub
dec
dec
arpl
pop
mov
inc
add
pop
xlat
gs
mov
out
enter
rcr
fidiv
outs
xor
hlt
adc
xchg
es
mov
jb
add
scas
out
xor
pusha
lahf
outs
jae
rep
adc
rcr
cwde
cli
jnp
xor
cmp
xchg
stos
sbb
movs
int
xor
inc
cmp
mov
jp
into
mov
(bad)
icebp
in
ds
dec
fcomi
or
xor
and
shl
push
ror
pop
aas
in
pop
loopne
pop
add
or
dec
jmp
sub
jle
sbb
mov
push
enter
dec
in
add
mov
xchg
mov
jb
push
in
mov
popa
and
pop
mov
aas
scas
stc
lock
sub
nop
clc
jnp
mov
mov
fwait
dec
outs
xor
repnz
(bad)
inc
repz
cld
sbb
mov
ror
pop
test
retf
out
jl
cmps
cmp
ds
imul
addr16
xchg
pop
cmc
jne
mov
xchg
cmps
pop
xor
mov
sbb
fcom
cwde
leave
mov
mov
pop
mov
test
(bad)
sbb
dec
test
aad
cmc
repz
mov
shr
mov
sbb
scas
dec
xor
mov
call
fxch
xor
in
(bad)
xlat
jg
mov
dec
inc
jns
push
jb
jmp
mov
xchg
dec
xchg
arpl
xchg
das
mov
pop
leave
dec
xlat
mov
in
push
mov
jo
and
xor
add
mov
xor
push
pop
jno
add
jb
loope
out
jbe
(bad)
jne
test
arpl
add
dec
nop
add
ss
stos
jns
shl
(bad)
mov
pop
jecxz
xchg
or
cmc
lods
retf
out
xchg
adc
loope
aad
call
push
lock
gs
pop
fndisi(8087
cmps
lods
rcr
mov
mov
cmp
iret
loop
dec
push
sbb
and
xchg
iret
into
jno
sbb
dec
lea
jne
leave
cmps
repz
cld
aam
outs
inc
adc
mov
test
pop
(bad)
sbb
push
or
adc
inc
shl
cmp
repz
jecxz
in
mov
xor
xchg
into
fimul
and
mov
xchg
xor
push
lods
pop
fdivr
sub
out
in
stos
in
push
cmp
mov
or
cmp
xchg
xchg
mov
fild
add
adc
idiv
hlt
ret
adc
mov
mov
mov
imul
mov
xchg
retf
rcr
clc
push
repnz
scas
push
std
xor
outs
jmp
mov
sar
xchg
cmp
addr16
aad
leave
in
pusha
clc
loop
sbb
jne
stc
movs
je
shl
les
xchg
push
hlt
mov
out
aaa
mov
adc
mov
inc
fst
mov
xor
push
mov
test
ins
ja
aad
popf
scas
fld
sbb
scas
das
mov
in
test
stos
fnsave
xchg
gs
cmp
cwde
xor
push
in
leave
add
and
sbb
push
push
pop
stc
and
pop
(bad)
adc
test
fnstsw
sub
stos
cli
dec
push
fstp
shl
out
mov
inc
xchg
lods
cmp
hlt
cld
xor
and
sbb
mov
dec
cmp
out
mov
clc
stc
rcl
or
mov
sub
(bad)
test
(bad)
int
lea
in
imul
retf
mov
mov
les
fild
scas
jno
adc
lock
pop
sar
out
pop
add
sub
pop
rcl
sub
call
js
stos
icebp
sti
xchg
movs
sbb
jae
pop
lods
push
pop
jg
rcl
in
aaa
adc
mov
ja
stc
cmp
sbb
retf
inc
stos
pusha
add
and
btr
ss
adc
sub
frstor
xor
lock
pop
xchg
sahf
mov
repnz
mov
aaa
fwait
inc
jecxz
sub
adc
mov
pop
stos
arpl
(bad)
in
mov
loop
pop
and
cmp
scas
mov
imul
daa
push
loope
inc
add
retf
pusha
imul
or
pop
jp
inc
mov
pop
shl
pop
(bad)
sub
(bad)
jae
lea
sub
xchg
loop
pop
int3
cld
in
(bad)
fcom
int
pop
lds
cli
xlat
nop
cmp
push
cmps
xchg
dec
and
jp
push
mov
sbb
dec
outs
(bad)
fild
xchg
dec
or
xor
or
mov
or
mov
adc
ja
ror
mov
sub
sbb
enter
add
jns
loop
scas
mov
push
push
in
fs
jmp
dec
call
adc
add
mov
mov
data16
aam
xchg
daa
or
jle
ins
nop
and
popf
push
xchg
cmp
sar
push
xchg
or
(bad)
les
push
xor
sbb
icebp
ret
add
pop
push
add
je
shl
dec
call
popa
fisubr
sub
fsub
lea
fs
movs
int3
ins
ret
outs
cs
mov
push
inc
jne
mov
inc
dec
push
add
dec
cmp
leave
icebp
seta
test
es
add
in
cs
mov
pop
mov
xchg
cmp
sub
mov
sbb
les
dec
xor
mov
mov
cwde
ret
(bad)
ja
push
lock
ret
sub
ja
or
dec
sbb
outs
rol
movs
fiadd
fimul
xlat
test
stos
bound
sbb
inc
sub
lods
outs
sahf
cmps
xchg
outs
xchg
sahf
mov
inc
out
xor
ss
clc
fdiv
(bad)
mov
(bad)
or
cmc
inc
scas
jae
jg
adc
movs
aas
xor
sbb
js
lods
inc
sub
xchg
or
fstp
loopne
iret
or
xchg
cmp
movs
xchg
add
push
jge
dec
or
cmps
movs
cmp
xor
retf
addr16
or
scas
stos
jmp
push
jecxz
or
out
enter
cmp
push
xor
(bad)
rcl
mov
inc
sub
xor
je
mov
sbb
add
pop
shl
pop
inc
mov
push
push
adc
gs
add
mov
out
cwde
push
sbb
fucompp
jle
sbb
or
add
out
scas
cmp
xchg
not
iret
hlt
or
xchg
pop
and
adc
add
and
call
enter
fisttp
mov
cmps
add
push
ins
bound
aaa
lds
cmps
call
jo
inc
and
loop
rcr
cmc
sub
repz
xor
fucomp
int3
shl
fs
into
add
enter
out
fstp
xlat
(bad)
ficom
sahf
repnz
mov
and
sbb
push
shl
shl
jo
cmp
and
push
mov
sbb
xchg
fs
sbb
das
sub
(bad)
cld
push
popa
cmps
rol
bndstx
dec
add
dec
push
dec
sub
retf
(bad)
enter
(bad)
sti
or
in
pushf
and
xchg
adc
mov
and
add
ret
dec
xchg
aas
imul
mov
jecxz
ret
shr
outs
bound
push
(bad)
stos
push
xchg
in
xor
sbb
sbb
push
pop
add
pop
mov
pop
push
adc
push
aad
cs
ret
idiv
daa
inc
ja
jno
cmps
sub
out
dec
pusha
sub
xchg
mov
addr16
jo
dec
outs
(bad)
or
aam
cmp
mov
pop
inc
fcmovu
mov
xchg
(bad)
xor
(bad)
int3
getsec
adc
lahf
sbb
xor
or
pop
xlat
inc
test
popa
fadd
mov
and
add
inc
into
sahf
sar
pop
jne
cmp
hlt
jle
push
xchg
and
push
or
(bad)
adc
inc
std
std
jbe
push
repz
push
outs
int
dec
popf
ret
fcom
hlt
gs
fwait
(bad)
jnp
pop
xacquire
mov
gs
sub
mov
push
xor
pop
cs
sbb
dec
sub
or
outs
sub
out
pop
(bad)
arpl
xor
enter
shl
clc
jae
outs
gs
push
xor
mov
in
stos
test
pop
pop
in
mov
dec
aad
paddusw
loope
inc
jmp
mov
push
out
xor
ror
mov
pop
out
jge
fldl2e
shl
iret
inc
mov
jl
hlt
add
lods
mov
push
sbb
in
call
dec
or
retf
mov
mov
sbb
iret
mov
inc
(bad)
ret
jle
sti
mov
dec
add
pop
out
sar
cwde
aam
mov
test
outs
push
xor
call
retf
fwait
outs
xor
(bad)
fldenv
lods
aaa
fbstp
mov
or
pushf
cmps
fstp
retf
jp
jne
leave
mov
push
inc
sub
in
push
jecxz
mov
inc
sub
das
push
inc
fst
popf
ins
or
fwait
stos
add
and
mov
mov
stc
retf
fcom
push
fimul
aaa
or
call
jne
leave
(bad)
out
ud0
inc
(bad)
xor
xor
inc
cmp
xlat
push
dec
test
pop
jae
xchg
jle
sti
popa
in
scas
dec
cdq
or
sbb
addr16
addr16
push
or
xchg
sub
dec
push
outs
loope
clc
aaa
sub
xlat
mov
out
inc
xchg
arpl
icebp
and
jl
or
or
in
and
mov
ins
mov
adc
push
xor
adc
hlt
or
loopne
nop
sub
push
xchg
adc
pusha
adc
(bad)
lods
push
jmp
mov
sub
mov
adc
xor
xchg
mov
mov
pop
icebp
in
mov
mov
(bad)
xchg
mov
enter
fimul
loope
ficomp
mov
sub
std
push
xchg
inc
sahf
jmp
int3
jno
mov
cmp
popa
ret
scas
sbb
add
push
std
mov
call
pop
data16
push
xor
ret
ins
lods
or
cmc
cli
ss
ins
pmaxub
ins
mov
push
cmp
rcl
cs
in
lea
pop
and
jle
mov
xor
jmp
shufps
jmp
test
mov
in
pop
in
push
bound
adc
adc
out
jo
xor
mov
push
or
inc
xchg
(bad)
icebp
mov
rol
ss
imul
xchg
ins
push
mov
gs
dec
xchg
mov
pop
add
ins
jmp
dec
cmps
adc
movs
push
adc
jno
ins
jne
or
dec
and
test
out
push
lods
add
out
xor
js
sbb
cmp
cmps
mov
(bad)
cmp
mov
ret
mov
sub
or
scas
je
inc
shr
pop
mov
ror
sbb
mov
bound
mov
push
cmc
push
retf
sub
xlat
push
and
mov
jmp
outs
movs
mov
ror
pop
mov
test
std
in
mov
pushf
(bad)
mov
inc
xchg
addr16
add
mov
push
inc
xchg
(bad)
jle
sbb
lea
push
cli
cmp
stc
rol
cmp
add
pusha
cmc
mov
lea
jge
ficomp
div
sbb
jmp
adc
mov
jg
cmps
and
mov
sub
js
push
dec
dec
mov
jge
adc
sub
inc
mov
inc
push
push
rcr
(bad)
jmp
loopne
pop
pop
mov
push
bound
add
cdq
jae
cdq
scas
dec
ja
cmp
or
test
xlat
clc
xchg
inc
and
arpl
adc
shr
cmp
shl
bound
hlt
jnp
sub
(bad)
jle
adc
push
scas
xor
call
push
adc
data16
jg
or
es
mov
hlt
mov
dec
aad
in
jl
outs
stos
dec
out
push
stos
mov
xor
sbb
cwde
imul
ins
clc
es
xor
push
(bad)
cmp
jb
xchg
mov
mov
stos
adc
pop
cld
mov
js
movs
xor
lods
add
sbb
jl
add
out
prefetcht1
jmp
int3
fld
arpl
xchg
cmp
mov
dec
pop
and
enter
add
(bad)
pop
jbe
adc
loop
sbb
(bad)
sbb
stos
mov
jmp
pop
jmp
das
imul
sar
push
dec
mov
inc
sbb
and
inc
xor
push
mov
outs
or
sbb
je
dec
into
cdq
out
jge
enter
test
pop
jg
cmp
push
and
adc
sbb
imul
mov
cmp
adc
inc
and
jmp
aaa
cwde
hlt
out
pushf
push
push
clc
js
es
cmp
push
push
and
stos
outs
in
inc
mov
sar
pop
stos
call
fdivr
adc
pop
mov
adc
inc
or
dec
dec
jl
sti
aad
and
arpl
dec
ds
cmp
or
and
leave
pop
test
mov
fisub
adc
cmps
xor
test
adc
jl
or
sub
loope
jo
ret
pop
fwait
gs
aas
xchg
and
mov
outs
mov
test
repnz
ins
jmp
jecxz
mov
outs
aas
xchg
jp
xor
icebp
inc
addr16
repnz
ss
inc
outs
xor
or
xchg
lods
in
inc
inc
mov
cmps
jmp
inc
push
rcr
pop
xchg
repnz
or
aad
das
ja
mov
leave
mov
in
stc
cmp
adc
mov
dec
sub
adc
dec
in
imul
add
add
and
loop
or
mov
jns
pop
or
fldcw
inc
loop
mov
or
sub
xchg
call
pop
jp
add
loopne
pop
inc
mov
bound
retf
or
jmp
scas
int3
fwait
inc
out
cdq
test
add
dec
xlat
xchg
ss
ror
mov
cmp
lds
sbb
add
hlt
test
rcr
dec
fst
(bad)
cmp
dec
mov
sbb
std
mov
pop
mov
out
stc
jmp
mov
xor
out
(bad)
pop
push
mov
mov
cmc
or
les
adc
ja
test
or
push
cmp
or
cdq
arpl
inc
cld
and
loopne
dec
je
dec
(bad)
(bad)
daa
popf
cmp
and
adc
sub
fisub
dec
mov
loop
add
arpl
stos
jb
hlt
sub
loop
sahf
iret
mov
xchg
in
pop
push
dec
ss
loop
in
xlat
push
push
test
jecxz
out
stc
std
dec
sub
pop
ss
test
lods
inc
push
in
pushf
cs
(bad)
adc
add
cmp
fistp
jmpw
call
inc
adc
aas
jb
push
loope
scas
popf
add
outs
mov
mov
daa
xchg
addr16
pop
out
int
push
es
into
xchg
ins
and
enter
fstp
scas
(bad)
jbe
xchg
(bad)
jl
popa
or
push
mov
jbe
mov
(bad)
jae
call
and
movs
cmp
inc
loop
js
push
ror
sub
or
mov
push
cld
repnz
int3
push
xor
push
mov
iret
shl
into
out
or
pop
dec
arpl
stos
aam
pushf
dec
ret
sbb
mov
xor
and
call
push
test
js
push
cs
mov
in
mov
iret
or
xchg
add
add
mov
mov
cmc
inc
sbb
aaa
sbb
mov
jbe
clc
pop
movs
fmul
push
jg
ds
push
or
add
or
lock
cmp
es
mov
or
inc
pop
in
mov
mov
bound
(bad)
leave
inc
add
xor
pop
(bad)
inc
aaa
jecxz
div
je
or
retf
add
pop
in
mov
cmc
sbb
dec
leave
sbb
cdq
and
repnz
into
ret
dec
mov
mov
push
lahf
fdiv
scas
test
sub
jg
push
and
or
repz
retf
cli
icebp
sbb
stc
xor
xchg
cmp
mov
pop
sub
jge
pusha
pop
pop
inc
inc
in
imul
call
jg
icebp
mov
add
cmp
stc
sub
adc
pop
rcr
pop
test
sahf
push
sbb
mov
(bad)
inc
push
pop
and
dec
mov
mov
dec
test
test
inc
push
test
pop
mov
dec
mov
repz
ins
xchg
enter
mov
xchg
inc
sub
dec
imul
int3
mov
ds
hlt
les
jl
xor
sti
push
nop
call
shl
clc
cmp
int3
jbe
mov
xor
cmp
popf
fiadd
push
std
scas
sub
jmp
mov
(bad)
xor
pop
(bad)
pushf
iret
ror
je
mov
sahf
xchg
dec
test
call
pop
sti
and
cdq
es
into
cmp
retf
clc
sti
inc
mov
adc
or
lods
add
and
out
imul
adc
ins
jnp
inc
add
inc
jno
mov
(bad)
int3
popa
arpl
cli
cmp
cmp
or
test
repz
gs
aad
inc
xchg
cwde
dec
sbb
out
pop
inc
pushf
icebp
cmps
ja
sub
stos
pop
nop
call
mov
push
push
loope
(bad)
clc
cmp
xlat
sbb
std
sti
loop
mov
call
or
xchg
add
xchg
fnstsw
loope
loope
les
aaa
and
scas
fistp
inc
mov
mov
mov
test
pop
mov
mov
aaa
sti
and
jae
ror
xchg
xor
push
dec
pop
pop
in
pop
and
ds
pop
mov
shr
fucomi
or
pop
xor
aas
mov
or
fld
and
neg
sti
jecxz
aad
(bad)
popa
mov
cmp
mov
mov
mov
adc
push
xchg
adc
sub
xor
movs
push
mov
fdiv
loope
cmp
leave
hlt
pusha
jne
ficomp
sub
push
jne
push
out
pop
jne
lods
mov
xchg
out
ds
sbb
sahf
jg
jp
hlt
lods
sbb
aaa
jmp
addr16
enter
adc
ins
adc
cmps
scas
out
mov
sub
test
adc
fsub
push
(bad)
shr
push
repz
mov
mov
jge
pusha
xchg
mov
cdq
inc
fisub
in
and
push
das
in
movs
mov
test
push
dec
cld
pop
lods
mov
jp
add
rcl
in
lock
sbb
add
sub
repnz
ins
or
mov
xchg
cmps
xor
push
pop
jbe
mov
retf
cmp
popa
jge
mov
sbb
cmps
out
lock
pop
dec
and
out
mov
fisttp
lods
cmp
jb
inc
jb
or
aas
outs
push
adc
dec
push
scas
fdivr
mov
mov
fisub
imul
inc
call
push
fstp
test
repnz
outs
xchg
leave
mov
add
fadd
dec
pop
stos
cmp
push
and
xor
(bad)
mov
xchg
movs
cmp
hlt
rol
inc
lds
iret
inc
shl
adc
je
and
xor
cld
inc
mov
mov
jmp
lods
inc
stc
inc
pop
and
shl
jmp
outs
popf
out
repz
adc
out
inc
dec
iret
rol
fidivr
xlat
mov
pop
dec
xchg
pop
ds
xchg
cmps
scas
rcr
pushf
xlat
xor
cld
sub
jae
movs
cmp
addr16
retf
jg
push
pushf
sbb
xchg
sbb
sbb
xor
pop
fdiv
push
arpl
or
add
xchg
xchg
mov
pushf
add
or
ficomp
jnp
pusha
dec
cmps
push
adc
jno
mov
out
jnp
sahf
mov
or
mov
(bad)
mov
xor
push
and
or
ficom
(bad)
jmp
fadd
fs
pop
xchg
leave
xor
jl
xor
rcl
std
daa
scas
lock
repnz
das
neg
clc
jb
and
fcomp
pop
cmp
jne
add
sbb
xor
mov
sbb
(bad)
shr
retf
push
arpl
add
inc
rcl
dec
es
rol
push
mov
sbb
sbb
shl
hlt
pop
jnp
jns
out
dec
and
and
dec
inc
sub
test
pusha
inc
shr
fwait
ss
sar
pop
imul
jb
fnstcw
push
ins
je
dec
enter
cmp
mov
inc
das
ret
in
cmp
ror
in
jae
test
mov
pop
jnp
popa
dec
or
cmp
aam
clc
jmp
mov
mov
jge
inc
inc
sub
sub
(bad)
out
jb
adc
xchg
mov
pop
lock
inc
mov
call
sub
adc
mov
repnz
or
pop
mov
test
xlat
xor
pop
lods
mov
sti
mov
popf
mov
adc
fcmovbe
aas
adc
push
js
adc
mov
mov
fld
mov
retf
inc
xor
jb
mov
dec
(bad)
sub
je
mov
xchg
jecxz
in
jnp
aas
out
rcr
pop
add
sbb
cmp
adc
pop
adc
sub
cdq
sbb
sbb
cmc
pminsw
mov
inc
call
ror
lods
gs
push
leave
sti
out
aam
retf
push
add
cdq
dec
jo
mov
mov
sbb
xchg
jo
pushf
adc
test
(bad)
mov
scas
mov
loope
mov
mov
test
gs
push
jl
adc
and
push
inc
adc
aam
inc
addr16
aas
dec
lahf
sti
sub
mov
test
rcr
mov
jl
mov
ror
fidiv
cmp
mov
ds
adc
cmp
and
std
xchg
adc
ins
push
push
mov
dec
jb
mov
repnz
pop
or
div
dec
not
int
jmp
cmc
in
(bad)
push
xor
jb
in
jp
cmc
mov
retf
push
out
push
or
xchg
fs
sub
mov
push
pop
xchg
in
repz
push
pop
inc
mov
push
xor
clc
push
add
xchg
ins
cmp
jle
xchg
xchg
push
sbb
test
pop
cwde
adc
lods
ret
xor
lods
inc
out
sub
push
int3
and
rcr
xor
sti
gs
dec
imul
jge
(bad)
pop
adc
cmp
xor
ret
fld
mov
mov
sti
imul
xchg
mov
iret
icebp
fs
pop
sar
in
pop
fiadd
xchg
sahf
inc
sub
cmp
imul
jbe
xor
sbb
cld
or
mov
leave
into
mov
(bad)
jmp
out
add
out
jo
adc
sub
test
mov
mov
push
mov
xchg
sub
hlt
inc
sbb
movs
sbb
and
sbb
and
(bad)
fdivr
std
cld
fimul
outs
jmp
popf
rcr
call
and
clc
add
popf
lahf
iret
or
pop
and
inc
pop
or
hlt
xor
(bad)
outs
aad
and
aam
cmp
jl
pop
push
scas
push
dec
push
retf
mov
mov
dec
dec
jns
or
or
adc
cli
push
out
in
adc
add
out
lods
rcr
ds
scas
nop
xchg
out
popf
fdiv
sub
int3
int
je
cmp
adc
inc
xor
mov
sbb
inc
into
cmp
xlat
fwait
loopne
sub
jno
aaa
pop
(bad)
popf
nop
iret
in
(bad)
push
shl
mov
mov
adc
xor
into
fild
fisub
xchg
icebp
out
arpl
xor
mov
call
das
sahf
ja
lock
gs
xor
push
cmps
push
jno
leave
jns
sub
jb
fist
icebp
push
or
xor
mov
int3
leave
call
xchg
loopne
or
leave
popa
mov
jmp
mov
add
iret
in
or
int3
jbe
inc
mov
dec
lds
std
cmp
in
in
fs
cdq
clc
inc
dec
test
pop
repz
xlat
push
adc
cmp
fldcw
pop
das
pushf
push
inc
add
sahf
sbb
mov
add
not
jbe
(bad)
cmps
fnstsw
stos
mov
push
add
loope
shr
cmp
sub
call
ret
ins
cmp
imul
scas
scas
jp
ja
fcmove
pop
daa
(bad)
sbb
mov
or
jge
dec
test
cmp
mov
push
shr
push
movs
repz
out
xchg
hlt
in
ins
add
xchg
cmp
pusha
xlat
scas
adc
push
popa
scas
aaa
fmul
push
xchg
icebp
cld
pop
bound
sub
daa
repnz
jl
mov
stos
and
jg
cmc
pusha
sbb
retf
mov
jle
rcl
cmp
xor
adc
test
push
scas
in
jbe
outs
dec
bound
pop
sub
sub
(bad)
aad
sub
fisttp
ret
in
bound
pop
dec
dec
xor
mov
cmp
gs
fsubr
pop
dec
sbb
and
xlat
jae
cmp
jl
(bad)
xor
in
(bad)
mov
inc
inc
pop
shl
jecxz
and
loop
jl
sub
jo
imul
mov
pop
add
and
mov
adc
mov
or
shl
scas
leave
nop
xchg
dec
adc
dec
out
sbb
xchg
xchg
sti
mov
xchg
outs
cld
mov
not
sbb
movs
adc
lea
stos
je
xor
inc
scas
pop
mov
aam
jo
scas
jnp
repnz
jp
loop
in
pop
lds
xchg
imul
inc
and
sbb
and
call
jnp
(bad)
push
fisttp
scas
dec
mov
cmp
adc
in
(bad)
sub
in
pusha
mov
ins
fsubr
xor
sbb
mov
(bad)
or
test
mov
and
cmp
outs
jle
retf
test
(bad)
ret
adc
or
rol
idiv
push
dec
or
sub
mov
shl
fbld
outs
bound
ds
inc
xor
and
stc
xchg
sbb
sub
push
sbb
jmp
or
shl
dec
ficom
int
stos
stc
addr16
lahf
cmp
xchg
das
cmps
aam
mov
mov
cmp
fild
pop
repz
jp
pusha
push
or
inc
cli
shr
or
inc
ja
mov
ss
adc
into
mov
inc
xchg
jge
outs
(bad)
mov
or
push
and
out
adc
or
mov
les
(bad)
repz
ds
mov
inc
mov
push
test
jl
lea
sub
and
or
pop
outs
ins
xchg
mov
push
scas
mov
jno
sar
add
or
sub
inc
jne
stos
mov
xor
push
cmp
mov
cmp
jbe
mov
hlt
cdq
aaa
or
add
stos
sti
daa
dec
mov
imul
dec
loop
rcr
add
xor
add
and
outs
dec
mov
rcl
stos
push
push
pop
loopne
je
mov
wrmsr
jae
pop
pushf
out
repz
fbstp
mov
popf
dec
ss
mov
fisubr
rdtsc
inc
aas
cmps
ja
xchg
into
xchg
bound
fild
test
stos
jo
fbld
add
or
je
push
cdq
push
mov
inc
cmp
push
fstp
movs
xchg
addr16
adc
push
(bad)
mov
lods
icebp
int3
add
add
and
push
add
xchg
loope
push
inc
(bad)
fisub
out
add
aas
test
xchg
or
rol
and
jo
push
mov
fcmovnb
inc
jns
mov
jle
mov
in
add
lock
out
jae
and
sub
xchg
test
jecxz
ins
pop
cwde
cmps
cmps
lods
fidiv
into
aam
mov
outs
icebp
xchg
test
mov
mov
imul
xor
imul
xchg
inc
adc
mov
sar
mov
jnp
sub
or
std
dec
sub
loopne
and
mov
push
dec
pop
jmp
xor
mov
sbb
jns
daa
xchg
lds
pop
xor
stos
mov
push
mov
(bad)
rcr
mov
cs
jae
push
mov
pop
push
or
sti
push
call
cli
push
movs
sbb
jnp
add
fst
xlat
dec
xor
out
add
(bad)
sbb
lods
dec
push
ins
sub
pop
ss
into
inc
das
inc
mov
loope
outs
gs
pop
inc
xor
push
jo
inc
cwde
or
fcomp
xor
sbb
mov
out
jg
xor
cli
dec
pop
and
dec
sbb
jp
xchg
xchg
aad
fld
adc
ret
call
and
pop
pop
sub
dec
dec
call
xor
dec
scas
pop
ss
repz
shl
pop
(bad)
mov
dec
inc
scas
sub
mov
add
rol
jge
pop
fwait
popf
and
add
or
push
jne
hlt
jecxz
sbb
sub
js
xchg
movs
int
jge
ret
shl
adc
movs
lock
aas
fistp
inc
xchg
inc
sbb
xor
mov
outs
cmps
cmp
sbb
cli
and
repz
aaa
stos
(bad)
shr
inc
hlt
pop
jnp
das
cmp
mov
ret
ret
mov
mov
mov
pusha
(bad)
cwde
pushf
stos
mov
mov
sub
sbb
jb
les
inc
and
cmp
adc
movs
ins
iret
out
(bad)
sbb
or
in
loopne
or
sbb
and
arpl
ror
mov
das
sbb
jle
test
bound
add
jl
les
stos
movs
test
(bad)
fsubr
inc
dec
xchg
jns
cmp
or
sbb
je
mov
test
mov
inc
(bad)
and
xchg
mov
out
push
out
rol
retf
sbb
das
bound
jmp
and
pop
xor
pop
dec
inc
xchg
xor
pop
push
xchg
xor
mov
cmp
movs
sub
shr
aam
xor
(bad)
mov
mov
repz
pop
retf
aad
cdq
mov
outs
dec
test
icebp
outs
repnz
xchg
std
cmps
or
aam
fsubr
jns
into
test
xchg
mov
cmc
mov
fild
mov
popa
cmc
jmp
xor
sub
test
scas
out
aad
jl
xor
inc
push
pop
push
sahf
mov
push
cmp
cmp
imul
mov
aas
rcr
lods
ins
test
mov
out
int3
(bad)
add
(bad)
mov
or
aas
pop
adc
int3
jbe
xchg
xor
retf
(bad)
mov
int
loope
mov
jmp
inc
in
aaa
fwait
pop
pop
sub
pushf
adc
rcl
inc
xor
es
ins
mov
(bad)
mov
mov
jecxz
scas
mov
push
xchg
cmps
push
arpl
mov
repz
jecxz
dec
dec
mov
jg
scas
repz
int
repnz
and
test
inc
and
stos
cmps
inc
mov
rcl
sti
in
dec
hlt
inc
jmp
cwde
pop
scas
sahf
push
test
and
jecxz
and
mov
xchg
dec
(bad)
pop
lock
jmp
cmp
dec
scas
out
inc
call
push
mov
pop
pop
jg
push
ror
out
arpl
adc
mov
jns
mov
int
adc
icebp
sub
cmp
dec
mov
test
jnp
icebp
xor
stos
test
movs
std
adc
inc
aam
data16
mov
cmps
pop
mov
pop
sti
ret
cmp
test
sbb
add
lods
mov
stc
jmp
stos
pop
xor
cmp
mov
(bad)
ins
mov
js
jno
push
and
push
lea
dec
int3
xchg
xchg
mov
retf
mov
movs
xlat
pusha
sbb
mov
cmp
lds
(bad)
xor
das
inc
xchg
jge
cmps
rol
pop
repz
adc
clc
repz
mov
cli
daa
sahf
clc
cmc
mov
and
sbb
xchg
xchg
cmc
and
sbb
mov
pop
das
shl
jmp
dec
and
outs
nop
adc
pop
(bad)
aam
js
cmp
fisub
movs
xor
xor
shl
and
scas
aad
pop
mov
stc
push
out
fiadd
jae
jo
es
jmp
mov
adc
loopne
sbb
sbb
pop
sbb
(bad)
fisub
repz
jmp
adc
fsubr
cmp
push
xor
jg
push
retf
and
ss
pop
jmp
jecxz
ins
sti
dec
shl
pop
pop
jecxz
mov
pop
shl
arpl
fwait
jp
daa
add
xchg
push
setns
jl
sub
mov
pop
pop
push
(bad)
not
fisubr
ret
stc
scas
or
into
dec
inc
outs
mov
(bad)
cmp
cmp
loopne
push
xchg
fstp
sar
jo
cmps
in
ret
and
and
add
pop
adc
push
stc
ds
cli
mov
les
repnz
not
cld
aaa
imul
repz
sub
data16
and
ret
lds
inc
stc
dec
dec
(bad)
and
jmp
sub
inc
and
imul
adc
fabs
cmp
aam
jmp
mov
out
pop
pushf
hlt
psrad
out
retf
mov
hlt
dec
leave
dec
jb
pop
mov
mov
sub
jl
dec
fs
std
sbb
fadd
jnp
in
(bad)
lods
xchg
cmp
sub
clc
not
lea
repnz
out
mov
stos
test
leave
xchg
or
pop
cs
mov
es
or
and
push
pop
in
sbb
or
jne
jp
mov
and
jbe
fistp
jmp
jo
shl
mov
shl
out
test
arpl
cwde
mov
cmc
sbb
ins
mov
icebp
cmps
xor
and
rcl
std
retf
add
or
jb
test
in
sti
adc
mov
pop
int
fcomp
mov
lahf
cmc
adc
mov
lods
icebp
inc
stos
pop
sti
push
ins
push
mov
sbb
dec
and
call
retf
mov
mov
sub
das
mov
jo
fstp
leave
pop
adc
ja
add
sbb
push
mov
mov
dec
test
pop
jnp
mov
fs
movs
dec
pusha
sub
rcr
call
mov
xor
push
push
fidiv
lds
jmp
sti
xchg
(bad)
sti
xor
jg
sbb
idiv
mov
(bad)
adc
push
push
neg
mov
sbb
pop
xchg
mov
inc
push
ja
cmovg
call
push
push
xor
xchg
jbe
in
loop
(bad)
xchg
mov
adc
mov
pushf
movs
sub
mov
mov
mov
ret
call
loopne
jbe
add
pop
test
(bad)
or
mov
rol
jno
hlt
push
rcl
pop
pop
inc
jmp
setle
cdq
mov
call
push
loop
push
mov
jg
add
sub
shl
mov
add
and
cmp
mov
inc
mov
xchg
cwde
fdiv
mov
(bad)
jns
xchg
mov
inc
push
ss
inc
push
into
int3
std
sbb
lock
(bad)
add
xor
(bad)
sub
jnp
jns
and
rcl
cmp
lock
push
dec
scas
or
(bad)
loope
sub
or
arpl
push
mov
add
stos
mov
into
adc
mov
xchg
arpl
sbb
xor
dec
shl
mov
or
and
inc
cmp
daa
sbb
xchg
ret
sbb
ret
and
lahf
out
mul
mov
add
push
sbb
or
sahf
xchg
das
jle
pop
inc
xchg
scas
jne
xchg
fstp
shr
push
and
cmp
push
in
(bad)
sbb
pop
dec
rol
ficomp
cmp
outs
cmps
sub
jns
aaa
push
and
(bad)
mov
add
cld
push
or
sbb
int3
mov
in
jmp
neg
xor
sbb
inc
jmp
call
fcmove
and
sbb
arpl
push
mov
test
push
jae
and
popf
add
data16
lahf
sub
stos
aad
mov
das
add
or
push
xor
xchg
movs
(bad)
psraw
adc
jp
ret
jbe
inc
fisubr
pop
mov
stc
inc
mov
and
inc
cmps
push
push
push
pop
adc
sub
adc
sbb
push
std
add
ret
fstp
xor
dec
mov
pop
inc
xchg
cmp
xchg
mov
(bad)
pop
shr
xchg
aam
mov
sbb
cs
imul
ins
inc
pop
(bad)
into
cmp
mov
cmp
jl
mov
mov
dec
fcmovnbe
neg
sub
push
and
push
sub
cmp
inc
(bad)
icebp
inc
add
add
pop
mov
popa
inc
ds
dec
out
jl
lds
inc
jle
sub
pusha
rcr
mov
pop
pusha
retf
sbb
jbe
adc
test
daa
dec
mov
inc
pop
and
sub
cmp
and
mov
inc
retf
inc
sub
leave
das
push
fxch
sbb
push
inc
jmp
(bad)
push
xor
inc
cmp
fs
fdivrp
mov
fsub
inc
mov
nop
fwait
cmovp
or
test
scas
and
xor
gs
out
xchg
cmp
and
xor
add
lahf
sahf
jo
cmc
jne
int
fnsave
sub
and
dec
sub
and
es
mov
mov
jnp
cmp
mov
jp
mov
call
push
adc
dec
mov
mov
in
clc
je
std
out
fstp
dec
ret
mov
push
push
scas
(bad)
lock
mov
das
inc
sub
shl
movs
xlat
sbb
jno
sbb
push
ficom
xchg
clc
pop
std
pushf
scas
jmp
or
pop
jo
or
aad
mov
xchg
push
pop
in
(bad)
outs
fiadd
(bad)
call
inc
pop
ins
std
mov
arpl
mov
ror
loope
xor
pop
mov
inc
pop
dec
cdq
frstor
js
or
push
dec
push
in
into
sub
lahf
ret
test
stos
jae
popa
test
sbb
movs
or
out
mov
mov
(bad)
adc
int
fisub
push
and
mov
int3
out
or
je
jae
shl
or
jge
(bad)
loope
jg
cs
mov
mov
cs
mov
outs
cmps
fdiv
out
mov
ror
jmp
dec
mov
jle
in
inc
fwait
cld
adc
clc
loope
pop
repnz
jne
sbb
mov
scas
pop
movs
jbe
jno
enter
fimul
jmp
fldcw
ss
jmp
pop
push
ins
popf
aad
xor
ror
jp
mov
adc
cli
mov
jge
xor
ret
rcl
fidiv
cmp
mov
push
jge
mov
adc
xchg
xlat
mov
xor
js
push
in
popa
jmp
mov
sbb
ret
sbb
imul
inc
inc
in
pop
retf
dec
mov
push
shl
cmp
cmp
pop
div
mov
repz
test
fmul
aam
shl
xor
xlat
mov
ret
psrad
fwait
xor
xor
cli
aad
mov
ds
cwde
frstor
fisttp
ins
icebp
cmp
xchg
aam
call
nop
pusha
fcomip
cmp
or
je
call
ds
movs
(bad)
sub
rol
xor
call
test
cs
add
xor
dec
stos
popf
(bad)
(bad)
jmp
nop
fucompp
dec
dec
repnz
bound
add
out
mov
jmp
push
sbb
clc
jle
imul
jp
test
xchg
or
and
adc
jg
stos
mov
add
push
push
cmc
sub
adc
pop
mov
in
dec
nop
clc
lods
imul
push
pop
inc
aad
add
xchg
clc
sahf
bound
cmp
daa
xchg
fsqrt
and
push
xor
dec
lods
dec
mul
das
test
addr16
jno
inc
mov
mov
xchg
aad
xor
push
mov
xchg
test
add
arpl
out
xchg
lds
int
jne
xchg
sbb
xlat
(bad)
movs
xor
fstp
nop
dec
out
push
add
movs
xchg
add
ja
push
pop
dec
xchg
jns
ja
hlt
out
in
jnp
pop
adc
and
icebp
std
mov
cmps
movs
fdiv
cmp
dec
push
inc
cmp
shl
scas
mov
sbb
push
or
ror
pop
dec
push
push
nop
push
add
adc
dec
or
cmp
jns
in
enter
pop
cmp
adc
fcmovne
pop
(bad)
out
sub
ficomp
sar
adc
popa
pop
sbb
sub
push
in
cmc
add
push
ds
nop
mov
push
(bad)
hlt
out
mov
xchg
out
call
cmps
xor
iret
jmp
test
jne
cs
dec
add
add
jmp
add
xor
ds
adc
lea
das
xlat
mov
jmp
ja
sub
mov
jg
inc
cmp
std
cmp
jmp
and
mov
pop
jecxz
pop
test
adc
pop
shl
shr
aaa
popf
lds
push
mov
mov
cmp
in
dec
mov
loopne
sub
sbb
cmp
das
pop
or
dec
data16
jge
js
fsubrp
or
jle
pop
mov
mov
repnz
(bad)
jmp
lds
jno
shl
sbb
inc
sar
and
test
add
and
jp
cmp
xchg
lods
cld
push
pop
rcr
ds
repnz
(bad)
xchg
push
jae
pushf
add
mov
ret
or
frstor
loopne
pop
out
xchg
or
cmp
out
inc
mov
mov
cmp
cmps
retf
and
fisttp
sbb
clc
out
lods
cmp
mov
sub
push
pop
test
dec
out
inc
sbb
(bad)
xlat
push
xchg
ins
jp
mov
inc
inc
int
in
vmovsldup
sahf
dec
push
add
adc
call
pop
fidivr
xlat
fld
mov
adc
sub
nop
movs
arpl
adc
lds
push
fmul
cmc
retf
nop
ret
pop
xchg
movs
xchg
xor
pop
inc
imul
leave
push
mov
(bad)
int3
test
lock
outs
std
adc
adc
mov
movs
movups
fldenv
std
sahf
mov
scas
(bad)
daa
(bad)
div
test
or
bt
setbe
xchg
in
stos
les
stos
repz
popf
repz
jge
mov
adc
xchg
out
pop
cdq
imul
dec
adc
test
in
outs
stos
jl
or
pop
mov
pop
pushf
cdq
dec
mov
push
add
pop
push
inc
mov
push
inc
das
sti
fdivrp
movs
inc
or
imul
xor
scas
in
jecxz
adc
ds
daa
inc
sub
pop
dec
pop
leave
lods
dec
lods
jbe
mov
cmc
lahf
add
jmp
std
cs
push
lock
stos
jmp
push
rcr
test
std
lea
mov
retf
popa
repnz
xor
sbb
pop
call
ins
xlat
in
xchg
mov
fiadd
adc
push
pushf
scas
popf
fs
inc
aam
stos
or
jmp
inc
leave
pop
ret
or
add
sbb
sbb
pop
xor
jg
hlt
cmps
lds
outs
cli
jmp
mov
inc
mov
dec
jecxz
xchg
mov
cmp
jp
push
adc
cmps
push
and
addr16
in
xor
movups
std
push
shr
cmc
(bad)
jmp
sbb
in
(bad)
and
push
das
cs
call
fdivrp
test
pop
inc
xor
jmp
and
xor
outs
and
lahf
std
enter
mov
sub
in
push
mov
(bad)
retf
push
cmp
bound
xchg
ret
xor
mov
adc
in
jg
outs
idiv
data16
cld
push
cmp
xchg
sbb
popf
jmp
in
push
bswap
dec
idiv
das
xabort
push
loop
and
retf
cld
lods
sbb
sub
mov
lahf
pop
mov
mov
(bad)
mov
lods
(bad)
adc
xchg
sar
add
test
fcmovbe
cs
inc
cmc
inc
sub
cs
dec
daa
cdq
test
repnz
mov
add
repnz
mov
xchg
cmp
jl
xor
add
into
imul
je
push
sub
sub
mov
ret
(bad)
push
cmp
fwait
pop
sub
shl
and
stos
and
push
aam
jo
add
int
cmp
popf
pop
pusha
call
cmc
add
(bad)
jmp
loopne
mov
mov
loop
add
sbb
sbb
cld
(bad)
dec
sahf
mov
mov
jb
adc
out
sub
aas
je
movs
ds
shl
jp
mov
dec
mov
or
je
into
cdq
ficomp
jg
xchg
and
repz
mov
xchg
and
sub
add
imul
jmp
push
inc
or
sub
mov
add
mov
sbb
inc
fdiv
mov
mov
hlt
jl
outs
and
pop
mov
pushf
and
xchg
adc
cmp
jle
fs
pop
cwde
push
cmps
xor
add
xchg
jns
jmp
push
xor
inc
lds
icebp
shl
jb
les
neg
out
std
dec
pop
fisub
xchg
mov
cmp
scas
outs
add
imul
xchg
ss
adc
cmps
push
mov
fidivr
in
cmc
sahf
es
jmp
cmp
(bad)
mov
fidivr
lea
repz
inc
mov
xor
mov
pop
xlat
xchg
jo
pop
popf
rol
jb
jl
jmp
mov
xor
outs
mov
mov
cmps
out
cld
pop
and
test
cmc
cmp
xor
popf
imul
mov
pop
jg
mov
mov
sub
js
pop
pop
imul
xor
daa
dec
mov
xchg
out
sbb
mov
es
jecxz
jle
mov
add
ds
xchg
bound
xor
sbb
xor
(bad)
add
adc
popa
xchg
mov
push
mov
xlat
sub
data16
outs
xor
out
(bad)
(bad)
xlat
jmp
bound
out
ja
pop
cmp
pusha
test
dec
push
push
fwait
add
sar
pop
xlat
test
daa
fbld
nop
inc
mov
adc
mov
jnp
mov
xchg
stos
mov
pop
rcr
mov
repz
out
fldcw
pop
(bad)
sbb
mov
icebp
inc
aam
loop
xchg
pop
aad
push
mov
int3
aas
and
ins
mov
mov
xchg
cmp
adc
mov
je
ins
aas
imul
dec
clc
sub
jae
inc
mov
dec
pop
(bad)
outs
jnp
daa
loop
fisttp
xchg
dec
push
test
pop
cmps
xchg
mov
xchg
gs
into
leave
leave
mov
loope
outs
mov
and
push
loopne
sub
mov
ret
push
pop
and
xor
ins
cmp
sbb
mov
sub
jge
adc
xchg
sar
jmp
push
fild
xchg
int
and
pop
xchg
add
jnp
stos
mov
mov
xor
push
cmp
or
test
iret
inc
adc
sub
popf
xchg
fcom
adc
icebp
in
adc
test
into
xlat
cmp
cmc
addr16
adc
(bad)
stos
jmp
aaa
aad
xor
pop
sbb
out
jnp
cmps
add
dec
push
mov
sbb
xchg
add
cmps
fld1
pop
pop
enter
int
gs
(bad)
sbb
add
add
jg
push
das
dec
jle
mov
pop
xchg
cmp
xor
(bad)
pop
icebp
mov
retf
push
cwde
add
sbb
rcl
add
xchg
add
aaa
into
push
inc
retf
nop
mov
rdtsc
in
idiv
jmp
mov
lods
daa
test
inc
pop
jnp
xor
sbb
push
hlt
xchg
adc
jae
pop
sbb
adc
int3
das
arpl
push
inc
scas
dec
jb
les
test
cmp
cmp
or
in
into
xchg
pop
ror
xchg
pop
jp
push
(bad)
aad
push
(bad)
sub
pop
add
cmp
mov
data16
mov
sar
pop
jmp
in
mov
test
das
shl
adc
push
mov
addr16
loop
and
ds
int3
cdq
inc
sbb
jmp
and
out
adc
adc
fadd
and
push
fidivr
pop
sub
dec
jmp
nop
and
inc
adc
rcr
js
jae
mov
pop
bound
aad
xchg
or
enter
sub
push
sar
or
sbb
dec
and
out
inc
add
push
inc
fimul
mov
sub
inc
fisttp
xchg
mov
cmp
pop
fnstenv
out
adc
fsub
dec
ja
dec
retf
ins
or
jecxz
cmps
push
(bad)
popa
imul
pop
dec
xchg
out
cmp
cmps
mov
inc
(bad)
jne
test
cwde
push
dec
xchg
cmps
add
(bad)
push
pop
movs
mov
jne
xchg
pop
mov
mov
mov
mov
sti
adc
clc
in
pusha
es
add
lock
pop
sbb
add
inc
ret
out
in
xchg
test
les
pop
sub
div
shr
push
fcomip
add
push
sbb
ss
retf
jg
mov
dec
icebp
jp
sbb
dec
aas
jne
mov
retf
xchg
in
je
add
ins
and
cmp
in
test
mov
dec
and
jl
xchg
ins
arpl
aam
out
jbe
mov
adc
mov
inc
pop
fsubp
mov
sub
pushf
pop
jbe
icebp
repz
sub
popa
cli
out
push
clc
or
mov
or
mov
mov
sbb
cmp
icebp
ds
shl
or
mov
pusha
call
dec
prefetchwt1
outs
sti
sahf
sti
cmps
or
rol
test
adc
nop
adc
xchg
(bad)
adc
jge
sahf
repnz
mov
pop
xchg
and
rcr
mov
fmul
std
inc
xchg
push
sub
inc
dec
mov
dec
mov
mov
call
dec
sbb
retf
ret
push
dec
push
call
dec
pop
scas
pop
jp
lods
imul
int3
daa
pop
clc
cmps
test
cmp
inc
test
dec
or
jl
cmc
fsubr
aas
pop
iret
inc
movs
test
addr16
jmp
mov
mov
or
in
out
xchg
test
imul
mov
pop
lahf
push
xchg
jb
push
enter
rcr
xor
sar
sti
jmp
repz
cmp
adc
retf
pop
test
jne
or
xor
add
ds
fbstp
dec
jmp
pop
jne
mov
cmp
lock
add
stos
aas
aad
mov
mov
shr
xchg
(bad)
rcr
pop
xchg
addr16
ret
mov
fcom
push
add
scas
xor
ds
jnp
dec
int
inc
es
mov
repnz
mov
xchg
ror
or
cmp
dec
pop
xchg
adc
outs
sti
in
mov
(bad)
fucomi
xlat
and
or
push
dec
imul
lods
mov
(bad)
sar
test
movs
cli
push
cmp
call
jno
jb
or
(bad)
or
dec
cdq
popa
xchg
ds
clc
clc
xchg
pop
add
in
or
test
repz
mov
mov
sti
mov
cs
or
adc
jno
retf
or
test
cmp
fild
mov
test
pop
sahf
or
dec
call
or
jns
ins
jge
ja
push
inc
jne
pop
popa
neg
icebp
add
or
sti
jge
rol
retf
test
jno
cmp
mov
lods
rcr
fistp
cmp
mov
fmulp
shr
pop
xchg
cwde
cmp
and
nop
mov
cli
pushf
cmp
fst
cld
add
mov
pushf
and
and
pop
retf
pop
(bad)
int
jl
push
sbb
lock
ret
jge
mov
dec
in
push
jns
js
push
add
jg
stos
(bad)
mov
imul
scas
dec
jge
and
mov
or
mov
clc
(bad)
popa
jp
loope
repz
sbb
push
inc
inc
sub
movs
cmp
shr
ret
dec
(bad)
test
add
jl
fwait
add
mov
imul
or
cwde
mov
xchg
gs
mov
iret
dec
dec
mov
movs
mov
lahf
or
gs
int3
mov
hlt
out
xchg
loopne
mov
ds
rdmsr
cmps
fiadd
xlat
push
dec
adc
je
pop
inc
or
cwde
cmps
mov
push
rcl
inc
popa
loop
push
cwde
int
sbb
push
mov
push
xchg
xchg
jns
mov
not
bound
pop
and
movs
mov
mov
imul
mov
mov
scas
outs
aam
mov
mov
loope
outs
mov
push
mov
out
call
dec
test
retf
js
pop
dec
sbb
mov
mov
and
dec
cld
out
jbe
mov
mov
lock
xor
adc
push
pop
adc
cmp
fwait
xchg
popa
jne
dec
add
jne
inc
jp
stos
inc
jecxz
les
adc
push
jno
mov
adc
(bad)
loopne
dec
aas
(bad)
and
jp
mov
je
mov
pushf
ret
(bad)
nop
enter
cmp
lods
test
mov
lods
call
mov
inc
sbb
pop
push
xor
jge
pop
test
fst
xor
xchg
xchg
and
and
out
pusha
pop
add
out
movs
test
xor
pop
pop
(bad)
aad
jb
pop
std
inc
out
add
scas
out
xchg
sar
xchg
jns
fadd
cli
dec
xor
cmp
idiv
dec
xor
cmp
dec
jo
mov
push
or
add
add
out
inc
or
inc
pop
rcr
mov
je
jmp
fwait
add
cmp
pop
fld
pusha
scas
and
sbb
mov
fidivr
call
xchg
inc
sub
jge
dec
mov
sbb
mov
mov
mov
and
sti
loope
pop
popf
popf
test
push
xor
and
aad
fiadd
(bad)
and
icebp
imul
cld
fst
inc
push
inc
mov
jnp
or
jge
loope
adc
adc
repz
cli
std
and
pop
pop
stos
xor
push
mov
das
ins
push
push
ds
ins
sbb
push
or
in
inc
gs
hlt
add
fisub
ja
clc
jl
and
xor
sub
icebp
sbb
sub
pop
push
or
add
pop
dec
cmps
lock
and
test
pop
xchg
cmps
cmps
mov
sbb
frstor
call
xchg
lahf
xchg
nop
lods
push
enter
pop
jo
test
fdiv
push
xchg
pop
sub
int
mov
dec
adc
inc
push
pop
arpl
mov
adc
int3
mov
imul
(bad)
(bad)
mov
adc
sbb
rcr
jmp
idiv
push
rcl
or
mov
loop
cs
outs
lds
shr
popa
(bad)
mov
in
ror
sub
mov
push
sub
and
xchg
xchg
xchg
mov
jmp
(bad)
or
adc
rol
and
fimul
sahf
push
lds
(bad)
bound
or
(bad)
cmps
test
enter
and
mov
sbb
ins
out
adc
inc
add
aas
or
rcl
daa
or
xchg
push
cli
mov
and
jmp
loopne
(bad)
xchg
mov
xchg
call
rcr
xchg
xor
int3
das
jno
jg
call
bound
or
xchg
lods
mov
fsub
lods
dec
cwde
lods
push
retf
mov
test
stc
adc
repz
mov
sbb
dec
call
dec
mov
or
mov
and
xchg
push
stos
mov
test
xchg
add
inc
dec
adc
movs
(bad)
sub
push
test
sub
repnz
mov
add
inc
jecxz
sub
and
mov
push
ins
rcr
xchg
sub
or
jnp
push
sbb
push
cs
das
retf
and
movs
jb
adc
mov
mov
cdq
adc
jae
pop
repnz
or
loop
aad
dec
test
call
mov
mov
adc
pop
in
daa
in
mov
adc
xlat
mov
enter
cld
popf
mov
loop
mul
stos
sub
or
in
fstp
ret
inc
cmp
add
dec
inc
pop
shl
rcl
stos
fadd
cmp
lock
jns
cli
js
dec
adc
dec
pop
pop
mov
add
adc
fsubr
or
stos
sbb
jg
in
xlat
in
and
sub
out
aas
shl
ret
and
(bad)
jbe
sub
push
int3
xchg
ret
ret
aas
mov
dec
mov
je
mov
jmp
xor
mov
call
xchg
mov
jnp
cmp
outs
addr16
nop
das
and
neg
cli
push
dec
nop
lea
mov
mov
paddw
jle
hlt
ret
sub
lea
ja
add
adc
cmp
dec
(bad)
sub
or
in
inc
cdq
es
sti
shr
repnz
fisub
push
sbb
mov
pop
in
add
call
(bad)
mov
xlat
cli
dec
sub
sub
sahf
mov
mov
jecxz
hlt
sub
sub
sbb
fcomi
or
xchg
mov
jmp
adc
test
gs
or
mov
adc
cmps
mov
int3
out
add
arpl
(bad)
push
sbb
pop
bound
add
xchg
cmp
cmps
call
adc
xor
stos
cmp
jb
outs
mov
int3
es
pop
imul
addr16
pop
fs
fcomp
jp
(bad)
xchg
aam
adc
add
lods
popa
xchg
pop
(bad)
loopne
mov
dec
mov
jnp
aaa
pushf
out
stos
leave
out
(bad)
in
cmp
aas
dec
js
jno
popa
mov
jl
cmp
jg
cli
mov
addr16
in
push
ret
ja
and
iret
fnsave
mov
imul
das
sub
sbb
bound
pop
xor
test
jmp
dec
(bad)
mov
imul
or
mov
xchg
test
adc
sub
iret
fcom
in
das
xlat
sub
dec
mov
pop
das
or
fld
cli
inc
imul
mov
fdivr
call
mov
inc
push
inc
les
cmps
sar
ss
xor
jo
orps
(bad)
or
les
in
mov
test
sbb
sub
cmp
push
leave
mov
jno
mov
add
xchg
pop
mov
adc
imul
sbb
outs
mov
adc
add
pop
(bad)
(bad)
xlat
pusha
bound
add
ins
mov
pop
movs
jp
arpl
mov
aam
jo
pop
pop
clc
xchg
mov
imul
sub
int
retf
push
repz
outs
leave
mov
jbe
leave
mov
mov
es
or
aad
push
jmp
pop
(bad)
mov
stos
cmp
fisub
sahf
cmp
mov
ss
mov
mov
mov
stc
outs
adc
dec
adc
loopne
adc
loop
imul
push
sahf
std
and
dec
push
pop
fcomp
ss
pusha
xor
xchg
fsubr
cmp
popf
fmul
jle
cmp
add
sbb
xchg
mov
mov
add
in
xchg
cdq
icebp
mov
jno
(bad)
mov
adc
stos
add
or
sbb
xor
and
xlat
sub
inc
outs
ja
test
cvtps2pd
aad
sbb
test
xlat
(bad)
mov
xchg
and
out
repz
pop
in
xlat
dec
mov
pop
popf
jns
call
in
jge
mov
and
pop
and
jno
bound
pop
repnz
push
addr16
fmul
lods
sar
push
aas
add
sub
inc
sbb
xor
pop
nop
xchg
mov
or
xchg
mov
bound
ret
push
pop
out
lea
push
rcr
sbb
push
jmp
(bad)
pop
ss
and
dec
fisub
mov
mov
mov
jno
movs
imul
cwde
mov
loop
loop
jl
sbb
sub
dec
fimul
into
inc
or
sbb
stos
lods
(bad)
mov
sbb
or
add
mov
mov
call
mov
fadd
jmp
in
ror
cmps
push
call
pop
(bad)
loopne
dec
mov
fucompp
fiadd
mov
mov
lahf
lods
stos
rcr
sbb
into
and
leave
sbb
lods
inc
xchg
add
xor
nop
pusha
jg
imul
cdq
jmp
or
pop
dec
xchg
fidiv
xchg
pop
je
mov
popf
sar
cld
gs
sub
rol
ror
sub
dec
addr16
addr16
jp
jmp
mov
test
test
mov
cmp
xlat
movs
sti
(bad)
dec
pop
sti
ds
int
js
cmp
mov
inc
mov
lock
scas
in
ss
test
and
mov
xchg
jle
inc
adc
dec
mov
mov
loop
scas
push
outs
fdiv
mul
stos
mov
inc
xor
add
loope
jmp
ror
adc
mov
rcl
shl
mov
jp
push
pushf
repnz
test
cmp
out
mov
movs
pusha
mov
cmp
xor
xor
movs
clc
sub
repnz
mov
push
mov
fs
daa
mov
(bad)
mov
mov
(bad)
(bad)
call
jb
push
sar
jp
sti
ror
inc
or
mov
dec
clc
stc
nop
cli
jne
mov
rcr
addr16
sbb
adc
cmp
inc
jle
or
sbb
pushf
stos
xchg
xor
stc
mov
adc
loop
jle
lods
adc
jecxz
(bad)
push
out
cmps
mov
jle
push
stos
sbb
or
rol
jo
imul
arpl
sub
arpl
cmc
mov
push
dec
pop
retf
cmp
adc
or
sub
in
nop
add
pushf
js
xchg
retf
ss
mov
icebp
mov
adc
dec
inc
rol
pop
aaa
and
pop
sub
cs
pop
pop
mov
arpl
cmp
push
loopne
mul
pop
xor
adc
mov
adc
repnz
outs
push
test
dec
xor
push
inc
sbb
mov
adc
pop
inc
sub
push
shl
xor
pop
mov
add
cmp
dec
add
sbb
add
sahf
and
mov
dec
xor
ins
push
sub
dec
mov
xor
ss
jae
stos
imul
popa
mov
(bad)
out
cmp
dec
mov
and
cdq
push
inc
imul
jbe
pop
add
jle
ins
aaa
or
mov
xchg
and
popf
nop
inc
mov
mov
add
rol
add
(bad)
push
xchg
mov
ja
ficomp
ss
jns
xchg
adc
(bad)
cmp
push
dec
adc
fs
scas
sub
div
int3
and
sub
popa
xor
sbb
inc
add
sub
xlat
iret
gs
jmp
ror
xchg
cmp
and
movs
out
in
mov
into
mov
lock
mov
mov
ror
pusha
cmp
jae
jmp
(bad)
outs
repnz
(bad)
retf
mov
ja
call
scas
inc
adc
cs
mov
and
mov
xchg
mov
in
push
push
ret
mov
pop
cmp
add
push
retf
mov
jae
mov
mov
in
sub
fist
mov
(bad)
fst
test
inc
mov
pop
outs
icebp
adc
repz
jl
js
push
mov
ds
call
xchg
(bad)
and
push
shl
sahf
lods
xchg
sahf
lods
outs
jae
jmp
push
repnz
pusha
cmc
sub
sub
lods
cli
mov
test
adc
pop
sub
nop
xlat
mov
dec
in
popf
repnz
add
xchg
stc
fwait
pop
adc
add
jne
sub
ds
jecxz
in
cli
jp
aaa
mov
jle
pop
sti
btc
mov
and
pop
sub
scas
push
or
rol
cwde
or
shl
ret
and
sar
sti
(bad)
leave
dec
mov
pop
add
sbb
jns
xchg
xor
stc
xchg
jnp
popa
lods
imul
loope
or
push
xor
and
cmp
repnz
out
in
or
pusha
dec
int
loop
sbb
repz
or
add
int3
movs
xchg
sbb
stos
and
jge
(bad)
cmp
dec
(bad)
clc
push
popa
aas
inc
mov
mov
pop
sbb
mov
into
and
ja
and
int3
test
inc
jmp
pop
sub
arpl
js
pop
xor
hlt
(bad)
jg
out
test
mov
and
mov
lahf
jne
ja
icebp
jns
cmc
xchg
push
or
icebp
fwait
call
cwde
cmp
or
fnsetpm(287
mov
call
(bad)
std
das
sub
xchg
push
fsub
mov
inc
dec
aas
loope
iret
mov
jl
aad
ret
or
rcr
cmp
mov
push
jg
jmp
daa
aam
out
ret
daa
inc
das
sub
lds
sub
cmp
push
dec
push
xchg
sbb
xchg
jp
cmps
enter
jl
jae
(bad)
adc
jmp
cmp
cmp
dec
cs
lock
cs
data16
sbb
test
dec
or
cld
dec
or
mov
enter
dec
test
mov
lahf
jle
mov
aaa
adc
pop
sub
arpl
jnp
in
pop
mov
mov
push
(bad)
scas
iret
out
(bad)
sti
test
mov
gs
int3
stc
retf
clc
jl
xchg
sti
mov
les
pop
jl
or
lock
(bad)
sbb
pop
jmp
icebp
jae
mov
and
xor
dec
push
ffree
cmp
cmps
fwait
sahf
push
mov
popa
pop
xchg
test
call
pop
push
ins
div
push
mov
aam
ins
aaa
push
mov
stc
xor
sbb
or
movs
pop
test
mov
mov
pop
mov
neg
out
in
mov
pop
retf
dec
fsubr
stc
imul
shl
xor
leave
push
pushf
jnp
cli
mov
mov
sub
lock
adc
jl
lods
aad
jns
or
xor
add
xchg
and
push
add
shr
bound
je
inc
test
cli
loope
and
push
repz
mov
sub
inc
or
(bad)
dec
(bad)
loop
jmp
das
out
push
pop
and
ins
lahf
push
repnz
push
and
sbb
loop
xchg
sbb
mov
dec
dec
mov
sbb
add
leave
nop
aaa
jae
xor
xor
dec
jmp
inc
lea
mov
enter
dec
test
cmc
aaa
add
mov
cdq
sbb
cmp
movs
les
in
pop
add
test
xchg
or
retf
cmc
lock
das
arpl
lds
scas
xchg
and
mov
sti
or
push
dec
sbb
mov
cdq
(bad)
sbb
imul
and
mov
xchg
fisub
jp
mov
ds
xchg
push
rcr
fild
jg
sbb
xor
pop
push
cdq
ins
mov
lods
inc
jo
mov
aaa
aas
xor
mov
xor
adc
jecxz
sysenter
(bad)
jl
test
mov
mov
fcomp
dec
fiadd
and
mov
repz
xchg
(bad)
into
lahf
and
push
popa
inc
nop
stos
lods
hlt
fmul
stc
fdiv
jle
sbb
stos
call
push
mov
pop
mov
sbb
mov
inc
hlt
outs
bound
fdivr
sub
cmp
inc
ja
cmp
sbb
jle
or
inc
dec
push
or
(bad)
hlt
xor
sub
inc
jbe
cmp
ficom
mov
test
push
mov
popf
ret
(bad)
loop
mov
rol
fwait
pop
rdmsr
adc
or
fbstp
lods
push
cs
add
loop
enter
clc
leave
out
cld
cli
fs
test
add
push
or
inc
push
jb
push
jmp
add
dec
shr
pop
mov
loope
inc
fidiv
xor
jmp
popf
dec
jno
mov
cli
mov
fdivrp
xor
jne
mov
ins
ficom
bound
dec
stos
test
mov
jge
add
rol
lock
jecxz
lods
cmp
test
sbb
dec
fdivr
mov
fwait
test
mov
scas
(bad)
xor
cmp
jae
fdiv
xchg
push
push
dec
mov
cli
pop
lods
mov
repnz
dec
mov
imul
pop
outs
jmp
retf
add
std
(bad)
lock
mov
inc
add
(bad)
dec
call
mov
pop
test
xchg
or
jno
jb
xchg
(bad)
mov
mov
sbb
call
sub
and
js
outs
mov
fldenv
icebp
cs
jmp
inc
and
pop
pop
sahf
cli
jne
sub
mov
xchg
lock
xchg
sub
dec
cld
fld
ret
repz
push
add
push
inc
sub
xchg
xchg
inc
cli
mov
je
xlat
push
test
je
call
pop
arpl
ret
pop
sar
outs
jb
cmp
fcomi
repz
add
fst
out
ficomp
and
mov
int3
dec
push
mov
sub
pop
aas
add
jp
push
jnp
rcl
sbb
mov
shl
test
push
aaa
mov
jnp
jmp
inc
(bad)
xchg
mov
lea
cs
pop
jo
mov
sbb
aas
retf
dec
stos
inc
jmp
fcmovb
loope
mov
jmp
loop
sar
xchg
sub
mov
shr
add
dec
xor
inc
pop
gs
inc
mov
jb
jb
push
jmp
popf
inc
jle
jecxz
in
arpl
dec
or
mov
call
mov
imul
repz
and
fcom
(bad)
fxch
add
ret
mov
or
or
aas
cmp
xchg
in
dec
fnstenv
fsubr
or
dec
add
push
cmp
or
or
pop
cmp
shl
ss
dec
pop
test
and
pop
or
outs
inc
std
pop
jns
mov
or
ret
rcr
and
mov
nop
jae
pop
or
sub
mov
inc
xchg
pop
mov
lds
scas
xor
adc
inc
and
jmp
push
pop
in
enter
mov
sahf
cmp
mov
fwait
mov
mov
pushf
push
xor
or
mov
mov
xlat
mov
xchg
pop
(bad)
pusha
mov
aas
clc
xor
mov
in
imul
cs
push
imul
pop
or
or
xchg
mov
xchg
xlat
movs
cmps
ss
mov
lods
daa
mov
aas
jo
iret
lea
imul
xor
cmp
cmp
dec
loope
ficomp
inc
jl
mov
push
loop
adc
inc
jl
cmp
jae
nop
std
inc
mov
mov
mov
out
jns
push
cld
xor
inc
ds
dec
int
mov
mov
xchg
(bad)
jle
rcr
jno
hlt
jmp
inc
aas
xchg
add
fdivr
adc
jbe
das
lock
jne
std
mov
dec
rcl
dec
pop
xor
cwde
cwde
or
pop
cli
test
jb
cmp
xor
es
inc
push
or
sub
jae
mov
jge
mov
fmul
cmps
cli
xchg
ret
inc
cld
sub
pop
inc
fwait
outs
lea
sub
cmps
xor
imul
jno
inc
hlt
adc
cmp
in
and
(bad)
inc
test
mov
call
xor
jo
mov
arpl
test
cdq
pop
jge
cmp
or
stos
jl
mov
shr
stc
daa
mov
xor
retf
loopne
(bad)
les
repnz
in
jle
lds
data16
scas
ret
or
adc
mov
movs
push
xchg
in
lahf
and
jbe
mov
aas
movs
fmul
imul
cs
inc
(bad)
jne
push
jmp
xor
(bad)
jnp
xor
inc
mov
or
jp
rcr
inc
es
add
dec
dec
jbe
or
or
cmp
int
movs
fucom
arpl
mov
jg
inc
fmul
or
sbb
pop
sub
inc
lahf
retf
and
mov
rcl
retf
push
(bad)
cmp
dec
int3
inc
retf
popa
pop
sbb
sahf
mov
ja
cmp
or
mov
dec
(bad)
mov
jns
dec
xor
test
test
cmp
jnp
pop
add
lods
pop
mov
mov
jnp
cmps
mov
push
pop
test
jl
mov
bound
sub
push
or
xlat
jb
int
push
mov
fbld
movs
jnp
mov
pop
fstp
dec
jne
cmps
pusha
gs
int
dec
xchg
icebp
jno
sbb
movs
shr
pop
test
mov
dec
xchg
stos
jge
mov
rep
into
dec
repz
hlt
sti
adc
loopne
daa
adc
jecxz
add
movs
cli
mov
cmp
lods
jnp
leave
add
push
cld
jmp
rcl
mov
jns
cmp
jno
inc
ret
loope
inc
mov
icebp
loope
ret
or
ss
pop
dec
clc
jbe
jb
fisttp
and
mov
push
push
ret
pop
mov
int
jmp
es
dec
out
mov
sahf
jmp
jle
retf
sbb
cmp
pop
jp
fbstp
adc
xor
jae
test
mov
add
and
push
dec
mov
jne
outs
ror
mul
mov
call
fs
stc
fild
adc
(bad)
push
sbb
ret
pop
(bad)
(bad)
jo
add
push
pop
(bad)
cmp
scas
adc
ret
(bad)
jmp
jle
scas
push
fs
shr
push
add
in
gs
dec
fs
out
dec
dec
mov
(bad)
mov
or
fwait
lods
pop
xchg
jl
and
xchg
push
xor
ret
scas
rcr
imul
dec
xchg
out
mov
ins
sbb
cmp
out
adc
pusha
jg
ror
xchg
shl
ror
mov
test
gs
je
or
ins
mov
pop
leave
mov
mov
sbb
jnp
ret
data16
pop
bound
iret
leave
(bad)
xchg
or
fbld
out
cmp
shl
mov
pop
(bad)
pop
jne
fnsave
pop
jo
adc
push
and
mov
inc
es
mov
push
sub
imul
js
outs
sub
dec
push
scas
hlt
retf
mov
mov
or
ins
pop
or
aas
mov
inc
in
jne
jo
je
aad
sub
lock
fs
movs
cmp
or
and
mov
fmul
in
sbb
bnd
cmps
cli
pop
(bad)
push
mov
jnp
jae
leave
lds
adc
ja
in
jne
and
mov
stos
and
xchg
sbb
out
lea
aad
repnz
dec
or
leave
pop
out
jmp
cli
jle
mov
stos
xor
and
or
jns
aaa
mov
xor
mov
adc
ret
stc
xchg
sbb
mov
aaa
or
lock
mov
mov
daa
cmp
sbb
cmp
jmp
add
out
adc
jno
sub
and
sbb
stos
add
xchg
xchg
lds
imul
aad
mov
mov
std
xchg
mov
mov
adc
lods
inc
ret
push
dec
call
inc
aam
and
xchg
pop
(bad)
mov
xchg
mov
test
or
addr16
and
push
cmps
xchg
mov
mov
imul
sub
mov
int3
push
sbb
jg
jp
and
stos
jo
movs
retf
outs
jp
sub
test
fs
imul
lock
ds
mov
mov
mov
je
(bad)
sbb
adc
mov
cli
imul
cwde
jnp
or
in
dec
mov
lahf
ret
mov
aad
xchg
call
adc
stc
mov
mov
fs
(bad)
shr
xchg
inc
ret
ss
repnz
jecxz
stc
std
inc
cmp
xor
loopne
pop
push
shl
and
fbstp
cdq
imul
scas
push
adc
xor
ds
movs
xor
mov
neg
cwde
pop
jge
icebp
ins
fistp
push
pusha
pusha
jle
rcr
jo
sbb
jbe
fisttp
cmp
movs
gs
pop
pop
adc
fnstenv
cmp
lods
stos
push
add
and
scas
adc
adc
push
jmp
out
jg
sbb
fnstsw
xchg
loop
pop
jne
out
add
adc
cmp
mov
cmp
data16
inc
in
sbb
int
int
mov
mov
adc
leave
dec
pushf
sbb
adc
std
fsub
mov
stc
cmp
les
inc
inc
ja
retf
mov
sbb
jge
xchg
cs
ins
daa
mov
xchg
sbb
(bad)
stc
or
jg
pop
sbb
add
jge
(bad)
in
shl
push
pop
icebp
scas
lods
sbb
inc
mov
into
lea
inc
test
xor
mov
xchg
add
hlt
fs
mov
addr16
sar
pop
jbe
adc
jle
pop
popa
sbb
test
mov
sub
push
push
fidivr
sub
out
inc
jno
sub
or
xor
mov
push
out
or
out
test
lahf
(bad)
sti
mov
push
fisttp
fbstp
jno
mov
xchg
inc
sub
xlat
mov
ret
pop
cmc
fmul
data16
lods
pop
or
pop
ret
(bad)
push
push
mov
sbb
push
add
mov
ja
hlt
loop
arpl
leave
pop
scas
jnp
cmp
push
rcr
out
sti
stos
and
outs
sahf
mov
cmp
ret
mov
add
movs
mov
imul
pop
xor
sub
(bad)
sar
lea
jp
rdpmc
push
push
cmp
push
fimul
ret
addr16
repz
jmp
test
ins
imul
iret
mov
cdq
pop
inc
adc
je
stc
popa
push
test
add
mov
jns
in
xor
xchg
jmp
push
stc
cmps
scas
or
inc
xlat
xchg
leave
xchg
or
dec
out
cli
adc
and
inc
sub
rol
adc
ds
cmp
add
xchg
movs
push
or
out
xchg
mov
sbb
or
sbb
or
push
leave
cwde
rcl
push
mov
jecxz
cmp
cld
dec
xor
in
lahf
xchg
frstor
xchg
retf
bound
imul
and
nop
mov
aam
dec
cmps
call
lods
mov
out
mov
push
mov
xor
pop
jl
cmp
dec
cmpxchg
loope
shl
pop
add
icebp
out
and
add
mov
shl
mov
cs
and
in
pushf
mov
out
(bad)
loope
std
jno
sbb
pop
sub
test
xchg
jno
movs
sbb
(bad)
pop
cs
push
hlt
inc
fwait
mov
inc
xor
das
pop
call
int
stos
inc
mov
pop
sub
imul
push
push
popa
fsubr
pop
mov
sub
mov
and
lods
sub
xchg
lock
ins
mov
shr
mov
xor
adc
sahf
lahf
ja
push
out
rcl
(bad)
retf
std
mov
mov
xchg
jge
xor
add
mov
jecxz
fisttp
mov
and
mov
fwait
inc
xchg
lea
inc
jmp
popf
aam
aam
push
and
enter
add
aam
add
sub
adc
dec
mov
mov
jge
fstp
mov
jp
dec
pop
psubsw
sti
sub
icebp
mov
push
fwait
cmc
ja
cli
mov
test
(bad)
shl
push
jl
es
(bad)
jle
cmp
dec
mov
retf
mov
sbb
nop
fdiv
mov
ins
push
inc
cmp
arpl
push
icebp
outs
dec
push
sbb
inc
loop
popa
outs
cmp
sbb
into
inc
inc
pop
push
and
dec
mov
fcom
fwait
sub
into
jp
mov
test
bound
je
adc
mov
cmc
dec
cli
test
in
(bad)
adc
loope
out
mov
in
mov
in
mov
sub
xchg
pop
out
(bad)
bnd
and
push
lahf
jg
mov
pop
outs
dec
outs
sar
cmp
jno
(bad)
(bad)
aam
mov
adc
retf
or
push
mov
pusha
(bad)
cvtdq2ps
inc
mov
push
push
add
out
inc
repz
jo
in
out
inc
and
jns
imul
or
jb
addr16
adc
lahf
or
cs
sub
call
cdq
xchg
pop
shr
mov
fwait
in
adc
and
int
adc
jp
neg
cmp
or
cwde
out
aam
ja
pop
push
scas
sub
imul
test
fisubr
std
lea
retf
int3
pop
inc
inc
pop
imul
sbb
inc
popa
(bad)
out
movs
sub
jnp
movs
aas
cmps
mov
scas
mov
pop
in
inc
fdivr
xchg
ins
xor
push
mov
cmps
sub
adc
je
mov
adc
jne
cs
ins
pusha
mov
jl
scas
jl
ret
push
pop
cli
inc
push
repz
mov
pop
cmp
jmp
adc
jne
jmp
daa
xor
cmp
adc
mov
pop
inc
push
adc
loop
ins
cmp
arpl
loop
ss
or
shl
cmp
les
sbb
jne
cmc
stc
sub
jg
(bad)
mov
mov
cmps
mov
push
(bad)
cmp
add
cld
sbb
mov
cmps
out
vmread
daa
aaa
(bad)
loope
out
daa
in
push
jg
pop
adc
call
js
mov
mov
add
xor
out
adc
xchg
jno
jnp
clc
shl
and
pop
push
cli
out
loope
sbb
(bad)
push
stos
jno
mov
dec
aam
(bad)
sbb
xchg
std
pop
cmp
xchg
gs
movs
out
mov
inc
cs
inc
cmps
loope
lock
mov
sub
mov
jl
repnz
jle
pusha
js
and
sub
(bad)
(bad)
dec
int3
rol
cmps
inc
je
movs
imul
cmp
test
xchg
jg
jmp
int
xchg
xchg
lods
shl
cs
mov
fidivr
push
add
lds
aad
aam
mov
xor
repnz
push
lahf
stos
lds
dec
lahf
movs
cmps
sub
sbb
stc
pop
cdq
mov
div
ret
adc
and
fnstsw
jmp
stos
push
icebp
cmp
rcr
sbb
outs
sbb
stos
ins
int
pop
mov
xor
fadd
push
add
icebp
mov
pop
test
ins
or
sub
(bad)
leave
and
ss
mov
rcr
add
jne
fyl2xp1
dec
clc
test
sbb
cmp
js
mov
xor
and
dec
mul
or
xor
jmp
clc
dec
popa
adc
pop
mov
cmc
scas
lods
push
loope
and
sub
add
push
sub
fsub
mov
push
leave
cs
mov
out
xchg
call
lds
cmp
inc
(bad)
mov
cmp
stos
mov
(bad)
loope
mov
hlt
mov
(bad)
xor
popa
mov
cmp
sbb
scas
mov
dec
retf
mov
xchg
mov
pop
jecxz
mov
add
into
je
rcr
test
cs
aam
cs
or
ror
push
mov
test
jmp
cmps
cmps
inc
jne
fstp
inc
inc
scas
rol
adc
cli
push
add
and
jmp
pop
pop
fcmovnb
or
les
mov
jne
and
mov
cs
jg
pushf
fsubr
shl
xor
push
je
stos
std
adc
int3
xor
dec
fcom
scas
dec
xchg
orps
jge
pop
add
popa
jle
pop
fcmovne
jle
mov
test
out
jo
ss
mov
lods
cs
mov
pop
push
lods
rol
dec
out
jmp
clc
add
arpl
aaa
repz
imul
enter
jl
or
ins
jne
xor
mov
xchg
lahf
xlat
push
sub
(bad)
(bad)
hlt
repnz
adc
cdq
test
mov
call
mov
int
shl
sbb
pop
xchg
bnd
sub
push
add
xor
arpl
sbb
add
fdiv
cmp
add
inc
shl
inc
xchg
out
mov
repz
jl
not
jnp
inc
xchg
jae
xor
sbb
and
mov
push
push
pop
or
adc
ret
out
std
aad
mov
popa
mov
push
daa
inc
mov
daa
add
bound
ins
ja
xor
jge
add
push
xor
dec
call
vphaddubw
shl
and
iret
int3
sub
mov
int
ds
sbb
add
cmp
push
and
ret
jne
rcr
das
jp
dec
add
fisttp
mov
cdq
push
cmp
test
test
or
push
mov
add
pop
(bad)
jo
(bad)
leave
mov
inc
mov
(bad)
jl
lods
neg
push
jge
xchg
enter
cmps
call
imul
push
retf
idiv
(bad)
pop
fsubp
cmps
ins
push
xchg
js
mov
jmp
mov
pop
mov
sub
jno
sub
out
test
pop
(bad)
hlt
call
lods
inc
mov
xchg
cmps
ins
xor
cmps
push
scas
lock
cdq
repnz
xchg
lock
dec
(bad)
push
mov
cwde
sub
imul
pop
lock
hlt
cdq
push
pusha
jl
dec
and
cmps
ss
ja
loope
push
mov
cs
mov
clc
test
dec
sahf
test
ds
ror
dec
xchg
std
je
jae
jmp
int3
fisub
retf
xchg
add
adc
shl
mov
ss
sub
fst
cmp
ja
xchg
ret
bound
push
cmp
je
dec
sbb
dec
rcr
mov
mov
dec
out
xchg
stos
push
seto
cmp
push
sbb
pop
xchg
daa
xor
or
xchg
inc
cmps
xor
sti
sbb
jge
lds
inc
sbb
outs
sbb
cli
ret
pushf
sbb
and
xchg
fmul
imul
pop
(bad)
push
xchg
les
push
mov
icebp
cmp
sub
in
mov
cmp
mov
das
and
arpl
std
sahf
inc
sub
xchg
sub
gs
fwait
jecxz
test
sbb
stos
xor
popa
xor
(bad)
scas
push
aas
add
fild
fcom
je
fnstcw
and
icebp
fsub
mov
pop
pop
imul
mov
lahf
fcom
add
cmp
mov
jle
test
lea
add
mov
cmc
in
sbb
mov
in
add
cmp
js
test
or
jecxz
mov
xchg
mov
sti
jl
jg
repz
add
mov
cld
mov
sub
rol
daa
out
dec
sub
dec
jae
jecxz
xlat
mov
cmp
jb
int3
imul
sbb
cmc
js
inc
or
sub
mov
inc
add
lods
xor
loope
xor
out
and
ret
inc
fdiv
inc
pop
cmp
test
pop
(bad)
sbb
mov
enter
push
xor
xchg
jl
push
xor
shl
shr
je
mov
xchg
cwde
and
jecxz
push
sbb
pop
jp
fcomp
pop
inc
add
test
leave
push
mov
push
sub
lds
imul
rcl
sbb
adc
cmp
mov
ja
scas
and
mov
lock
xchg
push
pop
xchg
arpl
scas
xchg
sbb
inc
pop
cli
xchg
loope
pop
mov
add
or
mov
dec
pop
jecxz
and
mov
aam
and
frstor
mov
cmp
cld
adc
or
jne
dec
jecxz
cmp
jns
push
add
xchg
adc
or
popf
cmp
cs
pop
xchg
(bad)
rcl
int3
out
fcmovnu
or
sbb
pusha
fcomp
add
adc
popa
xor
popf
je
dec
or
cli
lods
movs
aaa
inc
fdiv
stc
inc
out
ret
cmp
pushf
cmp
mov
jmp
loope
pop
inc
sub
sahf
icebp
or
cmp
(bad)
pop
inc
dec
mov
cwde
jae
xchg
sbb
movs
mov
iret
stos
and
stos
adc
xchg
mov
fbstp
jmp
xchg
std
push
ficomp
xor
mov
jl
sub
adc
jmp
cmp
jecxz
scas
retf
fdivr
(bad)
sbb
jnp
dec
rcl
test
stos
test
cmc
neg
sbb
rcl
jnp
sahf
iret
lea
sub
lods
xor
dec
call
push
sbb
mov
jne
jp
fsub
pop
mov
push
lods
push
inc
or
ins
cmp
in
cmp
mov
into
xchg
dec
jno
pop
cwde
mov
xchg
in
mov
outs
jmp
cmp
test
push
adc
add
xchg
fild
sub
fwait
xchg
pop
mov
jnp
mov
fidiv
punpckldq
mov
push
je
jno
jne
popf
popa
inc
sub
(bad)
jnp
xlat
(bad)
(bad)
cli
and
into
push
mov
jg
fdivr
cdq
in
mov
js
or
mov
add
in
push
clc
cmp
xor
xor
js
mov
pop
sbb
inc
jae
pop
cmc
inc
pop
add
mov
dec
push
push
les
imul
into
pop
aam
jnp
fisub
inc
add
ins
sub
xor
mov
push
inc
lods
dec
mov
not
sub
enter
int
test
sub
xor
loop
mov
outs
pop
dec
sub
pusha
scas
dec
mov
inc
loop
dec
jle
aas
or
push
inc
add
pop
das
int3
mov
stos
aas
arpl
sub
lahf
add
push
fidiv
sti
fnstcw
out
jae
addr16
mov
nop
inc
push
jnp
xchg
push
sub
mov
mov
bound
mov
or
cmpxchg8b
jne
leave
xchg
test
enter
sbb
cmp
push
or
(bad)
mov
xor
sbb
jo
int3
popf
ret
adc
and
lods
(bad)
jnp
iret
and
hlt
aam
mov
rcl
aam
arpl
adc
fiadd
inc
les
int
idiv
pop
(bad)
mov
pavgb
xor
sub
leave
sub
(bad)
and
adc
gs
ds
ja
lds
dec
daa
cdq
neg
mov
ret
das
inc
or
cmps
xor
dec
push
push
mov
fwait
xchg
lds
(bad)
inc
pop
leave
sub
xor
inc
retf
jae
xlat
pop
cdq
and
mov
scas
movntq
sbb
ror
inc
fs
xchg
sbb
lods
sbb
jmp
outs
std
daa
popa
mov
push
xor
cmc
repnz
test
pop
in
jbe
jne
inc
push
adc
cwde
(bad)
jo
std
sbb
daa
push
loopne
jge
jo
dec
das
jae
pop
or
rcr
jmp
dec
jg
pop
pop
xchg
icebp
aaa
xchg
ror
retf
das
jl
mov
rcr
cwde
jmp
cld
je
stos
arpl
sti
ds
jmp
mov
xchg
xor
inc
ins
push
repnz
test
mov
(bad)
xchg
repz
jno
fnsave
leave
cmp
ins
xchg
inc
pop
or
lock
jnp
mov
inc
ins
fst
mov
arpl
aad
lods
enter
cmp
cmp
dec
stos
sub
adc
lea
or
cmps
push
cmp
daa
jbe
push
int3
pusha
aad
sub
fwait
cmp
(bad)
scas
bswap
sti
cwde
jg
stos
es
and
or
in
xor
push
data16
pop
jmp
out
jnp
dec
push
push
pop
js
lods
inc
xchg
dec
lods
in
sbb
and
sti
cmps
ret
fsubr
pop
cmps
jb
pop
adc
sub
push
sti
icebp
mov
or
aaa
cmp
push
push
js
in
adc
xchg
stc
inc
fiadd
fwait
xlat
sub
repz
add
fwait
push
jl
fnstenv
sar
fidiv
mov
push
adc
fld
mov
xchg
shl
push
mov
sti
je
mov
sbb
sbb
jne
xlat
fnstsw
mov
fwait
dec
rcr
les
xchg
ja
stos
cdq
sub
data16
sub
retf
jg
mov
loopne
sub
jo
push
ja
pop
mov
stc
fldenv
pushf
dec
dec
mov
ret
cmp
or
dec
mov
jp
imul
sub
sub
adc
xchg
and
inc
lods
out
fsub
dec
pop
cld
sahf
sbb
add
stc
mov
bound
jne
pop
mov
dec
pop
inc
or
adc
add
js
or
jg
sbb
jae
fimul
sar
mov
fwait
xchg
lahf
vmovhps
sub
push
sbb
inc
pop
cmp
adc
push
push
push
push
out
jmp
or
jmp
aaa
or
mov
scas
push
dec
aaa
and
ret
addr16
test
test
shl
pop
leave
mov
pop
add
cmp
xor
inc
cmp
popf
rol
jecxz
and
in
(bad)
sub
xchg
cmp
mov
(bad)
je
shl
shl
push
or
cmp
int
(bad)
into
movs
xchg
and
push
cmp
inc
mov
neg
xor
hlt
jp
sub
aas
loope
mov
pop
dec
(bad)
push
xor
mov
rol
xchg
pop
or
or
mov
sbb
leave
cmp
imul
push
xchg
icebp
(bad)
gs
aas
mov
mov
push
popf
cs
je
mov
xlat
aad
mul
das
outs
mov
mov
push
fwait
inc
ret
ja
out
and
sahf
pop
push
mov
scas
jns
in
push
ret
scas
loopne
fimul
dec
ds
ja
std
or
imul
adc
and
mov
aam
xchg
shl
movs
std
pusha
retf
xor
adc
(bad)
adc
fwait
mov
dec
(bad)
popf
jae
rcr
pop
xor
pop
loop
icebp
mov
mov
push
and
mov
loopne
mov
mov
in
pop
adc
cmps
mov
inc
mov
aaa
ficom
or
mov
shl
cs
adc
mov
fstp
or
mov
sbb
aam
ja
jnp
mov
sbb
lods
or
xor
and
mov
and
fdivr
test
mov
adc
in
pop
and
into
cdq
push
jnp
xor
hlt
jg
sbb
aad
stos
cmp
pusha
xchg
cdq
ins
ds
imul
movs
mov
mov
rep
push
js
mov
cmps
daa
sar
and
jae
push
adc
pop
out
ss
mov
xor
mov
fnstenv
inc
rcr
(bad)
or
mov
data16
(bad)
push
(bad)
or
cmp
push
add
test
ret
outs
mov
jne
xchg
xor
jnp
fdiv
sub
push
jbe
or
leave
lea
test
stos
inc
(bad)
jbe
cmp
sar
sbb
pushf
mov
pop
push
cmps
mov
mov
imul
lahf
ficom
fadd
mov
dec
mov
frstor
jmp
retf
dec
pop
stos
pop
add
test
fld
cmp
mov
(bad)
pop
jnp
mov
inc
push
or
leave
add
xor
pusha
pop
leave
pushf
push
rcl
fisttp
mov
mov
sar
add
jle
into
jg
inc
xor
fmul
test
fld
scas
dec
ret
rcr
repnz
cmp
xor
lahf
cmps
push
cld
jmp
adc
sahf
sbb
cmps
test
call
push
xchg
mov
jno
call
cmc
cwde
stos
sbb
add
and
xchg
xlat
xchg
xor
adc
outs
retf
ss
mov
ss
xchg
sbb
pop
inc
aad
xchg
cs
loope
(bad)
cs
inc
or
rcl
mul
test
pop
and
or
aaa
pop
into
mov
cmp
inc
aam
in
add
adc
cdq
pop
add
js
add
xor
idiv
icebp
dec
rcl
outs
push
add
xor
push
xlat
int3
xor
aas
js
(bad)
push
clc
(bad)
xchg
outs
lods
pop
push
sub
shr
imul
pop
mov
outs
daa
cmps
mov
pop
inc
popf
mov
cmp
add
sbb
out
nop
(bad)
mov
dec
xchg
inc
nop
imul
push
xor
rcl
(bad)
cld
xor
sti
mov
(bad)
aaa
sbb
xor
jmp
test
fdiv
mov
mov
cmp
ror
neg
popa
adc
popf
loope
aam
rcl
inc
je
aam
loopne
sub
jg
add
add
and
in
ins
enter
mov
aaa
pusha
pop
clc
xchg
mov
gs
push
jmp
pop
inc
xor
mov
xor
outs
jecxz
shl
pop
mov
jo
int
je
push
nop
mov
xchg
mov
mov
scas
out
or
inc
out
jbe
into
retf
ins
inc
sbb
sbb
dec
mov
enter
(bad)
pop
test
loopne
into
fst
sub
in
fucomp
pop
xchg
sub
jae
dec
dec
daa
pop
test
adc
xlat
sbb
fld
sbb
and
cmp
int3
sbb
jmp
sub
jecxz
mov
outs
sbb
cmp
push
sbb
sbb
jne
sahf
das
dec
sub
jb
mov
xor
dec
idiv
pop
mov
outs
addr16
mov
aad
jno
jg
mov
std
adc
call
adc
inc
mov
repnz
bound
xor
mov
imul
das
jne
hlt
mov
sub
retf
cwde
fdivr
cmp
sub
mov
into
shl
and
fst
pop
jnp
or
scas
repz
dec
and
cmps
call
xchg
lock
(bad)
jmp
xlat
test
out
sbb
mov
lods
pop
inc
ret
xchg
xchg
xchg
ins
add
cmc
fistp
push
mov
shl
pop
lea
imul
pop
xor
ror
int3
or
dec
jo
add
push
imul
cld
mov
(bad)
lds
push
adc
ficom
lock
loopne
cmp
xchg
push
jne
push
fld
stos
test
cmp
fwait
lods
inc
cmc
adc
cld
es
dec
loopne
cld
call
shl
jg
xchg
pop
mov
adc
mul
push
pop
data16
mov
xchg
jns
cmp
push
leave
jbe
dec
fs
xchg
push
adc
int
jbe
(bad)
push
or
xor
mov
add
lods
add
fadd
adc
sbb
cwde
call
mov
repnz
into
cli
fdiv
movs
sbb
sbb
sbb
bound
call
sti
sbb
out
call
and
cmc
sub
scas
dec
or
sub
ds
(bad)
mov
scas
sub
movs
fs
mov
popf
mov
je
sbb
leave
xchg
dec
ss
call
dec
cs
cmc
mov
push
cmp
cmp
and
(bad)
ins
repnz
mov
ins
mov
cwde
xor
addr16
add
jnp
fldenv
xchg
or
(bad)
fidivr
jle
sbb
xor
or
jmp
mov
loopne
inc
scas
cmps
mov
add
xlat
jo
popa
scas
inc
in
xchg
repz
ficomp
and
mov
sahf
or
ds
sbb
inc
fdiv
popf
lea
js
push
bound
loopne
popa
ins
ret
jle
fdivr
and
test
sti
and
adc
push
daa
cli
xchg
das
stc
fild
ss
mov
jb
jmp
popf
mov
xchg
js
and
sub
je
outs
dec
xchg
ret
fild
or
aam
mov
js
out
push
mov
or
and
or
push
fucomip
xor
and
or
sub
inc
xchg
out
xchg
sar
mov
dec
jg
jle
adc
cmp
jb
add
push
sub
mov
fsub
xchg
shr
adc
lahf
mov
push
das
jmp
(bad)
rcl
xor
stos
pusha
movs
dec
loop
sar
cmp
lahf
sub
mov
mov
sti
xor
pop
inc
xchg
push
adc
push
pop
fsubr
push
inc
retfw
inc
je
std
jbe
cmp
xor
and
ss
mov
cmc
call
bound
sub
lock
aad
push
push
dec
xlat
(bad)
dec
jbe
fisttp
mov
adc
cmp
mov
mov
inc
sbb
cmp
test
xlat
cwde
jecxz
push
(bad)
push
rcl
cld
fwait
jmp
jne
test
addr16
test
fnstcw
out
jns
add
test
lock
movs
in
cmp
test
pop
rcr
jb
pusha
rol
mov
dec
pop
in
mov
data16
jo
pusha
xchg
cmp
pop
retf
enter
in
mov
push
push
sbb
mov
(bad)
inc
xchg
dec
add
loopne
in
cld
gs
sahf
je
inc
les
adc
xlat
sub
(bad)
sar
gs
ja
loope
(bad)
cmc
mov
mov
stos
push
adc
ss
mov
mov
lods
push
shl
(bad)
mov
(bad)
imul
frstor
xlat
adc
stos
imul
ja
(bad)
cli
lods
dec
xchg
inc
xor
(bad)
(bad)
fadd
pop
sti
adc
cwde
jns
hlt
(bad)
cmp
pushf
das
mov
xor
jae
loopne
sub
fld
add
pop
dec
mov
ins
sbb
aaa
dec
xchg
dec
retf
push
sub
(bad)
adc
pop
jne
ja
cmc
cmc
mov
add
or
sti
xchg
jecxz
stos
sahf
dec
mov
mov
push
fmul
fs
jo
xchg
sbb
sar
clc
mul
jbe
inc
push
inc
retf
jae
in
jecxz
mov
mov
fs
mov
icebp
(bad)
sti
dec
inc
cmp
(bad)
cmc
mov
push
mov
mov
cmp
dec
scas
jmp
mov
cli
jge
fstp
call
das
push
mov
adc
or
mov
mov
lds
mov
mov
pusha
jmp
jecxz
jb
push
div
out
(bad)
pop
lods
(bad)
out
mov
ret
xchg
rcl
pop
cmp
jl
mov
mov
jecxz
scas
sbb
sar
in
mov
sahf
in
jge
add
sub
xor
inc
fild
mov
test
xor
mov
jnp
cli
lea
push
sahf
cmps
rol
xor
stos
ins
adc
call
dec
aam
sub
add
inc
lods
xor
out
call
cld
sub
mov
lahf
bound
xor
arpl
fst
push
iret
dec
pop
add
push
or
mov
pop
jmp
(bad)
pop
movs
hlt
shl
pusha
push
iret
loopne
retf
xchg
out
sbb
mov
lods
leave
push
xchg
mov
mov
mov
stc
xchg
jge
jge
jp
(bad)
ret
lods
les
sub
ja
or
lods
jmp
jecxz
in
mov
mov
int3
jns
daa
ds
aaa
mov
mov
jge
fwait
and
pushf
inc
(bad)
dec
mov
mov
push
jmp
xchg
cmp
repnz
pusha
inc
jnp
dec
add
push
pushf
inc
aas
jb
dec
push
stc
shr
mov
cmp
jge
cli
and
sub
pushf
imul
test
jb
add
mov
adc
push
ja
and
cdq
xor
cmps
retf
sbb
sub
push
pop
jb
in
daa
test
loop
jg
xchg
jns
popf
mov
outs
je
cmp
xchg
stc
push
mov
jg
lea
push
inc
mov
ret
pop
cmp
outs
jae
scas
adc
inc
stc
jg
mov
inc
and
call
mov
pop
push
add
pop
(bad)
mov
push
pop
cmp
ds
add
dec
retf
dec
sbb
xor
xlat
inc
adc
mov
loope
cmp
pop
ror
pop
test
retf
cmps
out
mov
js
mov
mov
xor
(bad)
sub
jb
mov
not
popa
jo
dec
stc
xchg
add
daa
inc
ds
aad
adc
inc
jmp
aad
dec
sbb
sub
fidivr
pop
pop
push
es
xchg
mov
mov
in
mov
enter
loopne
ds
leave
mov
repnz
inc
gs
dec
test
fwait
jno
xor
adc
retf
cmp
bound
xor
xchg
lods
in
imul
lock
(bad)
dec
adc
push
or
jo
xchg
neg
imul
mov
nop
jo
adc
lahf
push
and
leave
and
(bad)
stos
xchg
lea
mov
push
push
gs
mov
loopne
and
xor
cs
or
test
cmps
xchg
sub
(bad)
cld
pop
test
imul
addr16
inc
lea
sahf
aam
mov
mov
push
cwde
sub
and
jle
jbe
push
sahf
fwait
test
call
and
push
inc
ins
stc
scas
enter
push
cmps
lea
movs
mov
jmp
fwait
mov
xor
mov
sub
add
nop
and
(bad)
sub
xchg
jge
and
adc
cs
pop
xchg
pop
stc
movs
scas
popf
xor
je
add
hlt
mov
movs
add
sub
sub
ds
inc
movs
dec
ret
(bad)
push
(bad)
mov
pop
cmc
imul
inc
xor
aad
push
sub
retf
xor
push
xchg
sbb
add
fldcw
or
fsubr
jnp
in
sbb
mov
mov
in
jbe
rcr
inc
mov
je
xchg
adc
or
cmp
and
sahf
push
cld
outs
push
div
pushw
xchg
popf
into
imul
sub
pop
in
and
jnp
mov
icebp
mov
inc
jle
mov
add
loope
(bad)
dec
xor
mov
loop
jnp
mov
sbb
dec
sbb
pop
xchg
sbb
or
arpl
orps
ins
sbb
or
adc
ror
call
sub
pop
add
rcl
and
mov
loop
sti
sbb
or
ins
das
adc
mov
cmps
fistp
cmc
inc
aad
mov
int
xchg
sub
sub
mov
xchg
cmp
sti
daa
loope
cld
pop
inc
sbb
push
fnstsw
push
cld
imul
add
pop
popa
push
inc
lock
pop
ror
mov
or
inc
jns
std
shl
cli
icebp
pop
shl
shr
in
sub
cli
imul
imul
jae
push
cmp
ror
xlat
seta
dec
shr
outs
pushf
out
pop
mov
or
sbb
push
mov
rcl
cmp
mov
repnz
sbb
jecxz
shr
cmp
and
mov
and
dec
rol
xchg
sub
jae
lds
push
push
mov
mov
aam
xor
stc
sub
sbb
shl
or
add
jo
fs
xchg
dec
and
xor
and
fisttp
ret
neg
jo
cmc
jp
nop
mov
out
jmp
sti
int
mov
xchg
aam
sub
mov
add
inc
cmp
sub
sti
xchg
int3
xor
test
fldcw
jp
jae
out
je
lods
(bad)
in
mov
mov
mov
sahf
test
push
lods
sbb
mov
xchg
call
fcomp
sbb
pop
inc
outs
mov
sbb
ins
cmps
mov
or
sbb
mov
bound
or
call
inc
push
inc
out
push
in
dec
movs
sbb
dec
out
pusha
add
repz
push
push
int3
gs
int
mov
or
dec
pushf
and
std
call
arpl
retf
jmp
lea
shl
push
dec
(bad)
xlat
push
xchg
cmps
mov
and
das
mov
rcl
fstp
retf
lahf
add
add
cwde
int
inc
repz
pusha
jle
outs
out
sbb
inc
cmp
pop
inc
pop
add
jo
stc
addr16
pushf
outs
hlt
lock
add
inc
scas
rol
cmp
xor
test
mov
sbb
out
sbb
out
push
nop
(bad)
out
sti
push
in
xchg
pinsrw
inc
repnz
jbe
mov
fcomp
adc
shr
(bad)
mov
mov
psllw
and
scas
aas
addr16
cmps
cmps
xlat
imul
fnstenv
sahf
mov
jmp
mov
and
repz
int3
jns
cmp
fstp
cs
scas
neg
cs
lods
cld
or
fisub
jmp
cli
inc
out
and
lock
sub
jecxz
imul
stc
sbb
fwait
aaa
xchg
mov
push
push
jmp
xchg
push
int3
jmp
out
lods
or
add
movs
int3
sbb
in
jmp
lds
jp
xlat
mov
pop
mov
pop
pop
jge
xchg
inc
mov
inc
sub
inc
add
jle
add
int3
les
(bad)
pop
(bad)
cmp
sub
jmp
mov
cs
(bad)
sub
test
sub
out
dec
or
aad
cmp
or
add
ret
gs
ja
inc
imul
xchg
loop
jns
mov
(bad)
cld
mov
test
sub
cmps
data16
cmc
sub
push
popa
shl
xor
sub
out
fisub
pop
dec
stc
cmp
pop
pop
push
cmp
dec
mov
rol
xor
adc
out
repnz
lods
(bad)
xchg
out
mov
neg
sbb
ins
mov
dec
xor
aaa
mov
cld
mov
add
(bad)
xchg
mov
mov
sbb
pop
sbb
sub
adc
sbb
in
mov
jl
or
sbb
enter
mov
ins
sub
jmp
cmp
movs
inc
pop
pop
pop
and
cli
icebp
pop
sbb
push
test
adc
xchg
sti
gs
dec
test
fdivrp
inc
test
mov
and
loop
movs
pop
sbb
and
ds
rcl
popa
xchg
mov
test
fstp
or
pop
inc
dec
cmps
jge
mov
icebp
ror
sbb
mov
push
(bad)
and
pop
lahf
movs
js
stos
test
lock
and
and
jns
xchg
stos
loope
push
sub
push
push
inc
add
mov
jno
push
xlat
mov
leave
popa
fs
jae
push
cld
sub
mov
push
mov
or
lods
jp
push
daa
adc
or
enter
sbb
xor
fwait
pop
enter
loop
in
sub
push
xchg
out
out
mov
lock
sub
in
jmp
call
jmp
push
or
sti
bound
js
fstp
mov
fild
cmps
jg
sbb
mov
add
mov
aaa
mov
mov
iret
inc
(bad)
(bad)
scas
popf
stos
test
xchg
retf
push
ja
rcr
xchg
inc
dec
ins
sahf
popf
xor
and
mov
aaa
movs
mov
mov
ins
inc
or
jg
test
sbb
and
cmp
test
sbb
dec
xchg
stos
fwait
push
les
pop
retf
xchg
fist
and
into
jnp
jbe
(bad)
aaa
jns
ret
lds
jmp
fs
or
dec
mov
inc
imul
jae
pop
add
dec
test
jg
stc
sbb
cmp
(bad)
pop
sub
cs
icebp
xchg
xor
push
mov
rol
daa
jmp
inc
sti
push
xlat
pushf
sub
scas
mov
scas
call
and
jne
nop
inc
sbb
inc
lods
sti
mov
add
leave
mov
test
les
dec
jnp
dec
lds
push
push
loope
fidiv
ret
jle
out
iret
push
cmp
xor
and
dec
xlat
data16
inc
stos
xchg
(bad)
loope
sbb
mov
out
pusha
or
rcl
retf
sub
clts
sbb
test
(bad)
jl
push
test
mov
pop
push
in
cmp
sar
stos
adc
rol
scas
mov
xchg
call
out
fxch
inc
jnp
and
add
push
stos
cdq
les
ds
cdq
push
lds
stos
popa
mov
adc
in
clc
inc
push
je
push
es
cld
lods
inc
add
cmp
in
lods
cmp
inc
mov
test
dec
cmc
sti
stc
jmp
xor
into
lahf
push
jge
(bad)
out
jl
push
sub
add
pop
ins
shl
sahf
cmp
add
or
aas
movs
xor
test
movs
mul
sub
jge
cmp
mov
stc
xchg
jae
sbb
push
add
and
mov
xor
inc
(bad)
xchg
xor
ja
iret
dec
inc
lods
sub
mov
call
lea
sbb
data16
js
xlat
mov
sti
inc
push
repnz
and
test
mov
loopne
inc
es
scas
into
add
rcl
jmp
cmp
push
mov
repnz
inc
xor
cwde
mov
sub
xor
ror
cwde
xor
fmul
dec
jmp
xchg
ins
xor
rcr
cmp
cmp
mov
jp
lock
add
mov
ins
or
or
xchg
fdiv
leave
xchg
sub
cmp
and
sbb
ins
loopne
inc
or
push
movs
sbb
mov
outs
clc
dec
jp
std
cs
cld
push
push
daa
hlt
mov
fist
dec
movs
loopne
mov
xlat
dec
stos
mov
scas
addr16
ror
xchg
aaa
mov
jns
loop
jns
into
test
push
jo
and
std
mov
xor
(bad)
popa
and
int3
sbb
mov
push
call
lock
out
movs
mov
cmp
or
cdq
jne
mov
(bad)
mov
inc
mov
xor
sub
out
jmp
jg
cmp
add
xor
test
pop
pop
and
out
mov
jnp
outs
ins
popf
movs
(bad)
cmp
pop
push
cli
inc
dec
outs
imul
inc
inc
inc
arpl
ret
pop
repz
push
pop
ret
add
fcomp
fimul
pop
sar
fcomi
add
and
mov
mov
dec
das
aad
fs
jns
scas
xchg
stos
in
call
cmp
and
push
mov
xadd
adc
test
xchg
adc
fmul
mov
ds
and
jecxz
loopne
pop
int
mov
imul
movs
mov
data16
add
inc
shl
and
pop
sub
add
mov
test
jmp
or
push
div
inc
jne
mul
ds
and
lea
adc
ds
pushf
jmp
sbb
dec
mov
(bad)
ja
xchg
(bad)
daa
ret
cmps
push
popa
jae
sbb
pop
adc
push
sub
sub
fild
aam
stc
in
push
cmp
ror
dec
mov
(bad)
pop
(bad)
cld
mov
std
ret
pushw
into
add
cmps
cmp
xchg
cmp
jne
iret
push
xor
push
mov
popa
dec
add
or
arpl
es
inc
je
xor
cld
sbb
jle
add
adc
rcl
cmp
sub
pushf
aad
jg
movaps
pop
xor
div
jge
mov
sti
or
retf
stos
fisttp
test
in
xchg
dec
retf
aaa
jecxz
lahf
mov
xor
aaa
test
add
or
add
push
dec
test
jle
xchg
push
je
sub
jo
ficom
mov
retf
xor
call
mov
dec
loope
push
cmps
adc
jmp
cmp
aam
idiv
call
mov
jp
mov
xchg
push
js
pop
and
adc
int3
jg
xchg
fs
pop
sahf
push
jp
ins
addr16
sahf
in
dec
cld
and
sar
mov
pushf
js
cli
inc
mov
sbb
mov
ja
lock
mov
inc
mov
sbb
sub
prefetch
push
leave
fnsave
fsub
test
aas
in
mov
pop
sbb
jl
enter
add
push
fmul
xor
jg
(bad)
sbb
sub
in
mov
jmp
cmp
mov
push
and
hlt
shl
or
call
jge
mov
ins
mov
aad
loopne
sub
mov
add
movs
loope
hlt
and
in
daa
das
push
call
sub
sub
adc
xchg
cld
mov
aaa
jmp
out
lods
adc
stos
retfw
add
jb
into
add
xchg
stos
sahf
fidivr
push
loop
or
push
retf
pop
mul
sbb
cmc
mov
sub
cmp
cmps
int
call
push
jle
mov
mul
arpl
fmul
mov
out
and
outs
xor
in
mov
icebp
mov
lods
jbe
jle
mov
fisubr
lds
adc
enter
in
cmp
jns
cwde
mov
movs
int3
jmp
or
dec
dec
xchg
xchg
jne
and
push
dec
jo
pop
das
rol
ss
inc
into
ja
mov
xchg
shl
xchg
sti
test
shl
jbe
fst
in
sbb
(bad)
hlt
int3
push
sub
adc
adc
enter
adc
test
mov
push
imul
push
fwait
xchg
sbb
cwde
push
test
xchg
xchg
sbb
add
inc
pop
push
xor
ja
xchg
sub
sti
movs
shl
xchg
mov
mov
retf
leave
shl
stos
mov
inc
test
ja
xor
fstp
hlt
shl
loope
mov
and
fadd
inc
daa
dec
int
xchg
sahf
cmp
jae
jne
aam
iret
or
dec
cmp
rol
(bad)
sub
mov
lea
scas
pop
sar
xor
js
adc
loop
jns
aas
push
test
pop
sub
jmp
outs
push
adc
xor
sub
inc
add
jp
mov
retf
fsubp
jecxz
jge
sbb
es
(bad)
lahf
bound
pusha
sub
inc
pusha
movs
cmps
pop
cli
push
repz
jno
stos
jnp
rcr
xor
sahf
fs
cmp
mov
mov
inc
(bad)
out
inc
lods
ficom
pop
pushf
mov
fstp
push
jle
mov
iret
pop
leave
lock
cmps
mov
mov
pop
icebp
sub
lahf
cmp
ret
pop
icebp
jecxz
mov
mov
jmp
fst
mov
inc
call
arpl
shl
sbb
mov
js
iret
mov
jmp
mov
out
inc
adc
test
adc
ins
or
inc
xchg
movs
pushf
cli
dec
jl
lock
loope
dec
sti
repz
inc
es
or
std
xor
inc
add
jle
add
les
xchg
(bad)
mov
dec
xchg
jo
and
xor
inc
push
mov
ins
out
add
xchg
push
dec
sub
mov
mov
rcl
jl
(bad)
jge
lods
adc
push
pop
or
dec
jnp
sub
nop
xlat
inc
mov
enter
push
pop
les
jnp
add
adc
ja
lea
mov
ja
lock
xor
dec
mov
les
aad
rcr
cli
fbstp
inc
mov
mov
cpuid
pop
xor
imul
fnstcw
inc
jnp
(bad)
into
shl
xchg
fimul
lea
lods
adc
loop
adc
mov
mov
shl
mov
pop
call
mov
int
(bad)
adc
push
sbb
sbb
jecxz
push
nop
sub
sub
outs
lods
cmps
fnstsw
aaa
xchg
sub
pop
adc
sti
adc
inc
or
out
or
cwde
pop
dec
sbb
push
leave
fs
enter
call
stos
sbb
repz
mov
cmp
popa
popa
sub
stos
(bad)
jmp
test
dec
xchg
mov
mov
cld
add
jg
hlt
fwait
int3
jb
or
arpl
(bad)
lods
jecxz
call
jmp
out
retf
je
out
push
sub
push
iret
fdiv
in
sahf
scas
mov
jb
add
sub
cmp
and
mov
idiv
hlt
sahf
adc
or
movs
sub
clc
jp
push
pop
inc
xchg
pop
dec
sbb
out
arpl
xor
sbb
xor
sub
ss
pop
ja
call
adc
push
xor
push
std
adc
sahf
rcl
jmp
mov
jmp
(bad)
out
jbe
(bad)
cmp
nop
jp
sub
(bad)
in
push
call
sbb
(bad)
push
jg
pop
xor
and
mov
cmp
xchg
test
adc
adc
enter
dec
clc
mov
jp
add
pop
jge
mov
pop
mov
repnz
pop
sbb
push
xchg
sub
leave
ins
or
inc
call
xchg
xchg
adc
retf
xor
fidiv
into
inc
sub
mov
repz
jne
repz
adc
adc
push
test
and
jbe
in
and
fnstcw
and
ins
sub
out
aas
test
cwde
js
sub
mov
mov
pop
out
(bad)
jmp
ins
mov
jbe
es
mov
push
pop
mov
mov
stos
out
sahf
call
push
jmp
movs
add
lods
arpl
cmc
inc
add
cmp
sbb
scas
inc
ret
xor
or
daa
or
cmp
mov
data16
cwde
mov
ret
repz
sbb
jns
jmp
inc
mov
mov
xchg
ficomp
jle
cwde
fnstcw
or
and
out
mov
test
xor
dec
lods
ret
inc
push
xchg
mov
out
movs
and
mov
sbb
mov
add
es
sub
aaa
shl
push
inc
aad
cmp
scas
rcl
fucom
js
aad
xlat
inc
es
push
or
into
xchg
jmp
pop
sub
movs
rcr
in
sub
or
add
mov
xchg
cli
outs
hlt
not
mov
scas
nop
ja
div
xchg
sbb
add
retf
out
add
jp
je
dec
or
mov
pop
adc
add
push
lea
scas
in
jae
jnp
fsubr
xchg
inc
dec
push
inc
mov
ja
mov
xchg
fwait
cmc
loope
add
imul
cmp
loopne
sbb
in
inc
jb
and
or
(bad)
retf
mov
cmps
jmp
movs
pop
xor
and
lea
inc
(bad)
add
cmp
mov
adc
test
fcmovnbe
xor
mov
jns
icebp
mov
mov
pop
inc
pushf
push
add
pop
jns
jmp
bound
nop
cmp
mov
mov
xchg
lods
pop
sahf
cmc
cmp
adc
iret
xchg
xor
xchg
push
lods
ins
test
clc
sub
adc
mov
jmp
mov
dec
shr
push
mov
add
xchg
(bad)
xor
mov
shl
fdivrp
sub
and
fist
ret
(bad)
dec
fwait
or
pop
dec
(bad)
dec
mov
sahf
push
xchg
inc
aad
mov
enter
fcmovbe
(bad)
mov
inc
xor
pop
adc
mov
pop
jns
enter
imul
mov
std
shl
adc
lahf
push
into
xlat
ret
push
scas
cmp
adc
test
sub
pusha
pop
and
repnz
out
daa
jnp
test
mov
repnz
jle
nop
pop
xor
sub
shr
mov
in
hlt
inc
cmps
push
repz
mov
or
add
fisubr
bound
jp
push
push
imul
xlat
loopne
lahf
clc
call
jmp
movs
xlat
mov
push
mov
or
stos
mov
outs
mov
mov
and
mov
and
imul
mul
mov
enter
xchg
jmp
test
inc
fnsave
cmp
adc
dec
das
sti
push
mov
ficom
cmp
inc
push
or
shl
icebp
jge
push
das
nop
loop
(bad)
jmp
mov
mov
lods
pop
sbb
push
or
sahf
popf
(bad)
pop
mov
fs
jbe
xor
movs
cmp
xlat
fcom
pop
pusha
mov
test
call
jle
idiv
and
mul
push
xor
pop
xchg
or
jno
in
rol
push
ins
xchg
jbe
cmp
push
pop
sbb
repz
mov
loope
add
mov
in
fwait
mov
mov
test
mov
and
dec
and
stos
stos
cmp
outs
push
leave
leave
pop
or
leave
(bad)
(bad)
movs
dec
cmc
dec
out
inc
push
fiadd
xchg
xchg
adc
imul
or
xchg
repz
adc
xlat
xor
sbb
fisttp
mov
int
xor
imul
pop
adc
inc
movs
or
ror
pop
les
push
aas
lds
adc
inc
push
push
mov
jmp
in
cmp
sbb
sbb
add
xor
jge
xchg
(bad)
mov
out
dec
inc
cmp
add
pop
std
cwde
or
fist
mov
pop
xor
push
mov
and
push
cmp
dec
shl
sar
cwde
dec
js
jge
rol
sub
push
cmps
lods
cmp
gs
xchg
fnsave
repnz
jp
in
or
scas
addr16
jb
jnp
sbb
add
and
pop
inc
push
and
sub
shr
add
fisttp
popa
xor
stos
int3
inc
(bad)
jle
fucomip
aad
xor
rcr
jnp
inc
xor
(bad)
nop
out
jmp
inc
cwde
dec
jp
das
jae
dec
or
push
dec
cwde
fst
test
sub
jmp
imul
cmp
xor
ret
cmp
jp
(bad)
ret
aam
xor
mov
add
adc
ret
pop
sub
pop
popa
cli
push
adc
jmp
cs
out
sub
inc
fwait
dec
mov
mov
cmp
aaa
adc
popa
or
dec
xchg
test
call
add
inc
mov
push
leave
pop
pop
xlat
int
out
mov
sub
inc
push
mov
sahf
xlat
inc
add
jp
cmp
or
scas
ins
add
es
pop
fwait
sbb
jl
pop
je
push
loop
xor
sbb
add
lea
pop
push
dec
mov
pop
or
movs
mul
add
std
push
cmps
pop
jp
fnstcw
xchg
lea
(bad)
lock
(bad)
(bad)
repnz
xchg
(bad)
mov
pop
nop
adc
xchg
loop
or
add
sti
xchg
lds
mov
pop
call
dec
add
je
xor
mov
fst
aas
pop
je
dec
cmc
cmp
jne
add
lods
push
mov
rol
or
repz
fs
lea
iret
dec
fist
fnsave
data16
nop
or
xor
cdq
mov
push
xchg
cmp
adc
icebp
sbb
mov
inc
fstp
jne
fwait
mov
retf
adc
sbb
push
inc
lea
jae
aaa
pusha
jbe
and
push
mov
mov
fwait
pop
mov
out
ss
sti
(bad)
inc
imul
stos
xor
push
(bad)
int3
jne
add
shl
stos
xor
dec
sbb
daa
sub
fnsave
fs
mov
enter
cmp
and
inc
push
fisttp
pushf
jmp
xchg
stos
aaa
mov
pop
es
aas
sbb
repnz
mov
outs
aas
addr16
in
cmp
mov
fiadd
jmp
mov
mov
xchg
jle
or
cmc
cmp
jecxz
jmp
daa
icebp
mov
xchg
pop
mov
jmp
dec
dec
btc
jmp
and
jge
test
jb
sbb
(bad)
loop
or
push
mov
test
rcr
xchg
fcmovnb
imul
adc
jp
sub
add
jb
pop
das
xchg
outs
cmp
dec
mov
add
and
pop
inc
add
mov
loop
scas
add
pushf
test
test
jnp
scas
sti
shr
dec
cmc
mov
mov
out
out
fdiv
in
int3
int3
and
cmp
adc
add
cdq
inc
lds
sub
pop
scas
out
and
test
pop
mov
in
pop
out
js
mov
in
data16
ja
out
stos
out
sti
xor
aas
xchg
mov
add
call
xlat
or
cmp
repnz
call
mov
sub
(bad)
mov
iret
mov
in
mov
mov
and
or
add
arpl
cmp
test
dec
out
lods
xchg
inc
call
iret
mov
push
inc
aad
stos
inc
jmp
xor
test
jo
or
fild
cmps
mov
sbb
jbe
call
adc
xor
sbb
pop
(bad)
stos
arpl
jle
out
mov
lods
retf
push
nop
addr16
pop
xor
jp
push
pop
jno
sbb
add
mov
xchg
mov
add
cmp
mov
xor
stc
pop
lds
arpl
sub
pop
pop
jmp
dec
sub
cmps
xchg
pop
cwde
ret
pop
xor
xchg
sbb
rol
std
in
sub
jmp
dec
and
mov
outs
fwait
std
outs
push
mov
add
and
fs
jno
iret
sbb
xor
lods
fistp
jmp
push
mov
pop
iret
xor
cmp
and
outs
push
std
jo
shr
sub
mov
dec
pop
push
and
fisubr
shr
adc
xor
xchg
cdq
sub
dec
mov
mov
xchg
sahf
iret
and
pusha
fscale
stos
sub
adc
daa
add
push
imul
js
shl
fld
sub
jg
jne
and
repz
rol
das
aam
mov
pusha
sbb
arpl
jnp
out
cs
shl
mov
cwde
cmp
cmp
dec
mov
retf
ds
jmp
lods
mov
data16
mov
cli
jecxz
loopne
sub
adc
test
fsub
inc
xor
xchg
mov
cmc
cs
dec
lock
mov
inc
leave
sbb
or
ffree
sbb
xchg
js
pop
mov
jecxz
int3
call
cmp
(bad)
add
inc
mov
cmp
push
repnz
jg
lods
stos
(bad)
or
stos
cmp
and
cmps
mov
mov
inc
(bad)
stos
mov
push
inc
or
fimul
in
lods
jg
test
mov
shl
xchg
or
nop
push
aaa
jbe
pusha
jnp
ret
out
imul
popf
scas
fucom
je
pop
or
xor
cmp
stos
mul
rol
mov
popf
pop
fbstp
cmc
loope
test
loope
dec
ins
dec
mov
adc
push
and
scas
xchg
xchg
sbb
mov
ret
pop
jae
jp
stos
push
dec
lods
(bad)
retf
out
repz
fld
aas
outs
push
fist
push
and
mov
sbb
push
out
sub
and
pop
les
mov
jbe
jno
enter
shr
scas
inc
fwait
jcxz
mov
mov
stos
ss
jb
imul
adc
inc
test
mov
cmp
mov
retf
(bad)
push
outs
mov
push
lock
inc
push
mov
dec
cmps
fstp
aaa
out
(bad)
mov
or
mov
shr
je
test
ins
cld
xchg
in
js
jno
mov
xor
fsubr
shl
rol
inc
aam
aam
(bad)
jnp
imul
(bad)
jno
dec
push
pop
retf
sbb
add
pop
les
hlt
or
jmp
sbb
xchg
pop
cs
or
mov
fdiv
in
jbe
dec
xchg
stc
js
ins
push
push
loope
mov
and
dec
sub
inc
inc
jne
pushf
cli
xchg
cmp
retf
inc
push
hlt
cmp
or
mov
xchg
outs
ins
mov
add
push
aad
push
int
loop
dec
inc
mov
add
scas
rcl
stos
mov
out
scas
test
add
xor
call
std
leave
jo
ficom
cmp
into
or
das
out
cmc
movs
push
push
adc
xor
nop
inc
movs
mov
(bad)
not
sub
push
xchg
sub
mov
ins
xchg
pop
neg
mov
cld
sahf
shl
call
inc
shr
(bad)
(bad)
xor
test
mov
stc
dec
inc
fld
adc
mov
mov
fisub
cdq
or
sub
mov
test
dec
or
cmps
scas
xor
outs
movs
or
push
add
enter
stos
mov
jbe
or
jns
js
sub
std
rcl
scas
daa
pop
mov
mov
or
in
retf
rcl
xchg
clc
add
lea
sti
rol
cmps
sbb
jmp
xor
pop
mov
das
pop
jno
(bad)
and
add
push
mov
or
cwde
sub
pop
leave
aas
or
jo
add
leave
xor
stos
dec
pop
and
push
cmp
daa
mov
pop
cmp
or
cmp
and
jecxz
mov
add
or
mov
sbb
lods
xlat
jg
push
xor
outs
mov
jecxz
mov
mov
mov
jge
dec
push
push
cwde
sub
mov
inc
int3
stos
pop
xor
je
fild
ja
or
sbb
xor
mov
xor
arpl
ret
inc
pop
inc
xchg
pop
nop
nop
sbb
mov
mov
push
inc
mov
fwait
pop
inc
rcr
cmp
loope
fidivr
popa
dec
repz
in
xchg
mov
mov
bound
and
and
popa
mov
jecxz
push
inc
xor
mov
das
and
jp
pop
loope
lds
pop
xor
icebp
mov
mov
gs
daa
imul
scas
bound
mov
xchg
stos
mov
jbe
push
int3
jmp
mov
iret
fwait
ret
inc
movs
loopne
jle
std
call
test
cwde
popa
xchg
mov
add
popa
dec
adc
sar
cmps
jle
jne
mov
sub
pop
mov
push
repnz
xor
mov
test
and
into
jae
fisub
mov
mov
aad
mov
jmp
loopne
ret
test
adc
addr16
xchg
mov
cwde
nop
and
mov
popa
sub
mov
jl
fcmovbe
push
cmp
repnz
les
mov
cs
out
aas
lods
mov
popf
dec
test
imul
clc
mov
cmps
cs
cdq
call
sub
lock
mov
jle
ss
xor
jge
sbb
neg
dec
leave
adc
mov
and
xor
dec
cwde
out
pusha
pminub
or
iret
dec
sub
call
adc
xor
daa
retf
stos
mov
hlt
adc
sub
(bad)
lock
push
out
or
mov
cmp
ds
pop
xchg
mov
lods
hlt
pop
xchg
mov
mov
cmps
test
mov
adc
imul
or
jne
or
sub
lock
dec
inc
push
pop
dec
dec
or
ror
adc
cmps
add
imul
dec
les
adc
test
loop
pop
lea
movs
add
rol
sub
cmps
cmps
push
inc
out
scas
outs
js
data16
push
pop
pusha
jmp
or
mov
fwait
cld
clc
lods
sbb
popf
push
xor
fbld
sti
fistp
imul
sbb
icebp
out
mov
xchg
arpl
push
lock
ret
ror
js
mov
dec
jp
and
mov
or
add
push
sbb
pop
hlt
pop
fisub
shl
jbe
scas
cmp
rcl
dec
shr
jle
push
push
cmps
ss
pop
imul
and
rcr
loop
aam
(bad)
sub
inc
out
imul
lods
sti
into
fs
adc
and
inc
jmp
mov
out
cmp
jne
push
dec
push
imul
std
cwde
cld
or
aam
rcl
(bad)
xlat
jns
add
into
and
add
xchg
inc
mov
das
inc
dec
sub
mov
pushf
mov
xchg
xor
mov
mov
in
popa
and
cmp
inc
xor
sbb
cmp
movd
mov
adc
add
pop
and
add
icebp
bnd
or
mov
jle
in
xchg
loope
mov
fld
jmp
sub
sbb
and
test
jp
xchg
es
sub
xor
leave
inc
mov
loopne
xchg
adc
iret
aas
int
shr
inc
mov
inc
adc
jne
mov
mov
or
dec
jecxz
repnz
mov
xchg
test
add
add
push
sahf
adc
loop
les
fldenv
jne
cdq
data16
push
jno
pop
mov
gs
mov
jb
cli
add
in
or
ret
bound
cmp
int3
addr16
mov
sbb
shr
pushf
bound
mov
gs
fisubr
bound
lds
inc
(bad)
cwde
sub
addr16
popa
in
pop
mov
cwde
sub
push
add
es
setbe
and
mov
sbb
(bad)
pop
mov
mov
add
sti
xor
jge
pop
mov
scas
mov
mov
mov
mov
mov
(bad)
out
and
jecxz
iretw
mov
jae
xor
xor
addr16
xchg
cmc
dec
jge
pop
push
inc
push
or
sub
popf
popf
xchg
retf
or
mov
jle
xor
les
lock
shr
jmp
stc
inc
inc
es
add
push
cmps
sbb
idiv
out
nop
cs
adc
loopne
cmp
cwde
cli
popf
adc
cmp
pop
ja
pop
fwait
ja
cmp
jnp
jne
push
pop
inc
sar
mov
push
cmp
loope
adc
shl
hlt
push
stos
rol
sub
fdivr
and
lahf
inc
add
out
out
add
mov
dec
fwait
sar
jp
xchg
les
inc
iret
(bad)
ror
(bad)
cmc
pop
hlt
aad
adc
lock
pop
push
fnstcw
test
shl
inc
adc
(bad)
ss
movs
cli
je
fidivr
retf
imul
das
inc
retf
xor
pop
outs
xor
aad
mov
inc
push
cmp
inc
push
jle
and
cmc
dec
imul
jb
nop
je
or
je
aad
xchg
mov
or
in
movs
sub
cs
mov
mov
cmp
push
ja
out
jge
mov
(bad)
cli
hlt
pop
mov
into
jmp
scas
daa
out
popa
xchg
push
mov
ins
inc
fimul
outs
sbb
mov
test
inc
jo
xor
xchg
xor
pop
xchg
sub
mov
enter
inc
mov
mov
xchg
dec
fldcw
jo
jle
sub
or
push
in
sub
push
(bad)
mov
out
cmp
in
sub
push
pop
jg
jnp
stos
pop
mov
dec
push
xchg
add
cmps
mov
sar
cld
int3
push
in
jge
sub
dec
mov
(bad)
out
rol
jmp
push
sbb
shl
inc
(bad)
fisttp
in
xchg
ds
xchg
cld
jae
in
jnp
sub
push
adc
push
mov
jg
stos
cld
idiv
dec
inc
push
jo
sbb
cmp
shl
(bad)
dec
neg
icebp
jmp
and
cmps
add
outs
mov
fcom
ins
xor
dec
ss
icebp
pusha
test
add
jge
cld
mov
nop
lods
inc
cmc
sub
hlt
hlt
cmp
or
mov
mov
pop
pop
pop
mov
xchg
sbb
cmp
inc
test
add
pusha
sbb
enter
imul
sub
call
sbb
movq
out
pop
jnp
test
mov
push
or
xchg
js
retf
mov
pusha
ror
push
jb
dec
repnz
mov
clc
pop
retf
fldcw
mov
pop
fisubr
test
sar
icebp
adc
cld
pop
lods
nop
sub
sbb
ror
stos
mov
pop
stos
shr
sar
loopne
cmp
daa
(bad)
stos
in
adc
add
lods
outs
push
xchg
mov
test
xchg
daa
fbstp
and
push
mov
xlat
scas
or
js
lds
aas
frstor
out
gs
push
jb
add
mov
pushf
stc
jp
mov
inc
pop
aam
imul
daa
stc
inc
popfw
mov
push
mov
shl
les
dec
call
push
icebp
mov
xchg
(bad)
(bad)
cld
popf
sub
or
sbb
pop
sub
add
push
lahf
dec
xor
pop
outs
test
jb
iret
outs
sub
adc
xor
and
test
add
adc
inc
jo
aas
cmp
ret
mov
dec
in
ins
arpl
mov
jg
out
push
adc
jno
or
mov
test
add
inc
fiadd
aam
(bad)
cmp
and
jno
dec
push
or
pusha
pop
stos
stc
mov
pop
out
dec
jecxz
sbb
lods
pop
mov
pusha
fisttp
cmps
cmp
add
push
wbinvd
and
push
push
xchg
cmp
rcr
add
sub
es
ins
cmps
gs
jmp
lods
cmp
imul
inc
scas
dec
shl
inc
mov
add
and
mov
out
loopne
jbe
mov
add
popa
xchg
repnz
ss
jns
leave
sbb
cmp
xchg
mov
aaa
cmps
add
cmp
out
fnstcw
cmps
aaa
fild
es
inc
aaa
shl
popf
scas
lods
dec
lods
ss
add
jg
and
scas
enter
push
div
push
test
cwde
fdivr
push
mov
xchg
mov
mov
fcmovne
outs
jecxz
data16
(bad)
fiadd
int3
loopne
mov
fxsave
push
pop
adc
xchg
call
jmp
in
scas
add
aam
push
dec
cld
repz
fwait
lahf
test
cmp
sbb
and
rcl
(bad)
int3
movs
retf
shr
fwait
inc
outs
cmp
mov
outs
nop
enter
mov
mov
icebp
mov
and
mov
or
dec
bound
jb
not
sbb
mov
aad
sub
mov
stos
int3
xchg
jbe
test
cmps
aaa
or
aas
das
xchg
push
(bad)
stc
loopne
xchg
mov
or
call
xchg
in
push
add
dec
in
jne
sub
cmp
pop
xor
jmp
imul
adc
sbb
scas
(bad)
xor
inc
pusha
call
add
mov
aam
adc
sbb
call
stos
or
mov
jae
mov
push
inc
or
addr16
fist
pushf
ja
sub
sbb
xor
mov
add
call
ja
pop
lea
mov
and
in
mov
push
mov
push
xchg
out
loop
mov
sub
test
adc
fld
cmp
nop
sbb
adc
and
fcomp
dec
mov
rep
sbb
dec
les
repz
sub
imul
push
inc
sub
frstor
push
jmp
in
test
jecxz
fisubr
sbb
mov
call
adc
das
cmp
inc
cmp
in
dec
sahf
push
jo
mov
jmp
jno
and
inc
xlat
gs
das
or
dec
cmp
popa
ret
cmps
jle
mov
mov
clc
cli
add
(bad)
dec
jo
push
sbb
fsub
fsubr
shl
cs
xchg
jns
fadd
and
rcr
sbb
jbe
lock
ja
xor
sub
xchg
aad
pop
scas
pop
jns
(bad)
shl
movs
cmps
retf
push
mov
bound
(bad)
loopne
and
hlt
pop
inc
rcr
cwde
ds
loop
mov
hlt
mov
push
cli
scas
cmp
cmp
xor
ins
push
add
mov
xor
or
inc
push
popa
fsubr
lahf
mov
inc
sbb
inc
cmps
push
mov
outs
dec
aaa
xchg
push
shl
mov
mov
pop
or
pop
inc
pop
lea
shl
sbb
inc
sub
add
retf
pop
push
push
movs
mov
ja
mov
movs
popa
mov
inc
ror
sbb
retf
inc
add
jmp
sub
and
nop
mov
callw
dec
out
aam
loopne
imul
push
jno
jae
xor
mov
outs
or
sbb
loope
int3
mov
mov
dec
fstp
rcl
retf
mov
sub
add
jnp
cli
or
scas
xchg
stos
cmps
pop
inc
mov
test
add
jbe
dec
cmp
gs
and
pushf
jbe
lahf
jg
or
and
fnstsw
test
sbb
mov
cmps
lods
(bad)
fwait
je
loop
adc
cmp
bound
or
mov
pop
ss
loopne
sub
sbb
leave
and
and
dec
(bad)
js
into
cmp
shl
cmp
inc
jp
popa
cs
inc
and
xchg
mov
jle
aas
aas
sti
lods
mov
sbb
call
and
movs
out
mov
sti
rcl
add
jnp
xor
out
xor
rol
push
ror
sub
sbb
pop
mov
movs
xchg
xor
and
sbb
dec
mov
jge
(bad)
pop
lock
xor
mov
es
jmp
not
push
sub
push
lds
shl
push
adc
jo
js
jns
shr
fcom
sbb
dec
inc
add
add
retf
push
gs
(bad)
into
push
add
leave
sub
fwait
push
lock
mov
enter
bound
sti
dec
push
pop
pop
inc
jmp
(bad)
in
push
rcl
fidiv
mov
mov
jne
ret
and
test
pop
dec
jg
(bad)
fsub
dec
jno
add
in
dec
inc
popf
sbb
int
jp
ficomp
mov
ror
and
(bad)
sub
cld
xchg
into
push
retf
sbb
jbe
mov
push
jge
or
sbb
out
cmc
mov
push
inc
(bad)
xchg
cli
cmps
inc
cld
pop
ror
xchg
test
(bad)
push
pop
pop
pop
in
imul
jne
loop
sahf
aaa
gs
ret
jae
mov
(bad)
out
xchg
push
out
test
inc
sub
add
mov
or
jmp
bound
mov
cmp
retf
adc
mov
lods
ins
or
movs
mov
(bad)
fcom
pop
jnp
retf
pop
lahf
add
loopne
adc
repnz
add
adc
mov
sbb
fisubr
or
cmp
out
xchg
inc
cmps
cmp
xor
mov
or
std
lods
fist
mov
xchg
pop
ins
imul
in
adc
lods
jae
mov
aas
inc
or
adc
lods
enter
xchg
repnz
xchg
(bad)
xor
mov
repz
mov
xchg
mov
out
sbb
adc
test
jl
pop
add
out
arpl
sub
ret
mov
into
cs
mov
xor
push
cmp
scas
jp
(bad)
jmp
xchg
xchg
inc
pop
push
pop
lahf
cmps
xchg
jns
lea
jbe
pop
or
lock
pop
sub
fild
mov
dec
les
(bad)
jge
adc
pop
fld
mov
xor
not
cwde
mov
and
xchg
dec
jg
mov
push
bound
add
add
jecxz
xor
inc
int
and
aas
sbb
(bad)
fiadd
clc
scas
add
push
retf
out
ds
icebp
in
adc
fiadd
or
jmp
xor
out
mov
aaa
in
mov
cmp
call
cmp
sub
arpl
push
test
or
pushf
mov
mov
adc
in
int3
jae
addr16
retf
inc
(bad)
cld
pop
push
jmp
test
sub
in
or
adc
mov
dec
add
sub
adc
cmp
out
cs
bound
int3
std
pop
dec
test
loope
in
pop
jnp
shl
pop
add
mov
sub
cmps
out
call
rol
int
loope
(bad)
cmp
pop
loopne
sbb
lods
inc
out
test
fnstsw
leave
xor
or
int
pop
mov
add
mov
cs
loope
outs
pop
push
xchg
lock
repnz
jne
outs
(bad)
adc
jnp
imul
pop
add
cmp
xchg
es
test
test
pop
rcl
loop
ficom
test
jmp
leave
aam
jmp
mov
dec
mov
loope
adc
pusha
push
cmps
or
in
in
fsub
test
int
test
out
sbb
and
mov
aam
xor
in
dec
jbe
push
ret
jp
push
inc
data16
sbb
icebp
push
pop
jae
hlt
je
add
(bad)
jo
or
cmp
sub
gs
ds
scas
aam
(bad)
mov
test
enter
pop
cmps
and
out
or
fdivr
ret
ror
push
out
dec
cmp
mov
mov
push
(bad)
inc
pop
pusha
mov
loope
(bad)
aaa
mov
cld
fwait
leave
mov
xchg
xchg
jl
pop
push
pop
sbb
fs
faddp
mov
cmps
sub
(bad)
in
mov
xchg
retf
and
ror
jne
mov
pop
xchg
and
cmps
test
and
xchg
pop
(bad)
neg
cmp
outs
jl
or
push
jge
pop
shl
out
das
mov
mov
sti
sub
xchg
dec
fwait
mov
xchg
add
and
jle
mov
adc
mov
dec
fcmovbe
xchg
jae
jns
clc
fwait
sbb
lods
xchg
push
aam
jb
xchg
hlt
jle
ret
pop
fild
and
xchg
lods
add
call
mov
dec
fisttp
inc
jo
push
pusha
into
jecxz
mov
rol
iret
lds
cmp
std
int3
lods
pop
dec
jle
mov
les
popf
fdiv
pop
mul
pop
fs
push
inc
sbb
inc
jl
and
icebp
cmps
loopne
out
pop
gs
push
dec
(bad)
jle
(bad)
adc
popf
jno
jo
mov
cmp
inc
mov
cs
outs
jno
cmc
or
jo
jmp
shr
lea
mov
cmp
or
rcr
std
or
lods
mul
mov
xchg
and
jb
mov
fs
xchg
aas
ret
mov
jns
popf
or
into
mov
cdq
push
cld
retf
mov
push
into
fnstenv
cmp
jmp
xchg
push
push
mov
push
(bad)
lea
jns
out
std
das
nop
mov
mov
data16
cmp
movs
or
and
js
stc
dec
cmp
retf
fidiv
jne
dec
gs
inc
retf
repnz
stos
xchg
or
(bad)
xor
jne
xor
dec
arpl
dec
jle
retf
xor
fdivrp
mov
xchg
sub
jmp
or
call
sub
mov
mov
mov
cli
inc
loop
imul
xor
(bad)
mov
pop
das
pop
jb
sbb
add
xchg
test
xor
xchg
sbb
imul
arpl
mov
cmp
sbb
xlat
cdq
test
xchg
or
mov
fwait
adc
lods
or
and
lods
push
or
cmp
stc
push
bound
push
adc
sub
sbb
adc
inc
shl
mov
sub
jmp
mov
pop
aas
jp
and
mov
jecxz
aaa
stos
sbb
dec
mov
js
jmp
jp
inc
rcr
stos
xchg
pop
sbb
sub
jo
cmp
outs
mov
fcmovu
repz
xor
cmp
inc
dec
mov
das
ins
test
mov
out
cmp
addr16
mov
rol
jg
neg
push
sar
xor
les
ret
and
xchg
std
push
and
mov
mov
sbb
adc
daa
xchg
rol
xor
ins
js
xchg
sbb
inc
into
pop
call
push
fucomip
retf
push
xor
mov
cdq
call
dec
jmp
int3
(bad)
pop
(bad)
shl
push
dec
lahf
adc
mov
mov
mov
mov
pushf
inc
and
fdivr
sub
in
xchg
jl
popf
xchg
mov
or
test
ins
fcomp
mov
mov
lock
call
pop
mov
push
sti
mov
xor
pop
out
movs
inc
sbb
out
xchg
mov
imul
adc
xchg
fsubr
or
mov
scas
mov
add
mov
mov
fisub
je
jecxz
cwde
pop
xor
(bad)
loopne
out
push
test
and
push
jae
inc
sub
test
(bad)
popf
cmc
outs
sahf
push
retf
push
dec
xlat
shl
jno
addr16
fimul
cmps
xor
imul
outs
push
jge
push
mov
inc
cmp
pop
or
xchg
push
mov
shl
add
sub
pushf
clc
sti
lods
jno
cmp
stos
test
dec
jmp
imul
inc
xchg
push
loopne
mov
jb
push
dec
retf
out
sub
lods
add
fadd
out
add
mov
sahf
psubd
mov
sbb
mov
paddusb
cmp
retf
adc
cmp
out
mov
cmc
sar
loopne
loopne
sbb
sbb
loop
nop
nop
jp
inc
outs
movs
aaa
iret
pop
fsubr
lods
imul
cwde
push
jecxz
jmp
xlat
enter
pop
sub
test
lods
jle
add
pop
push
in
cwde
pop
imul
mov
jmp
test
shl
inc
adc
clc
dec
mov
rcl
push
adc
pop
push
outs
pop
imul
fcmovbe
adc
xchg
dec
(bad)
push
ror
or
xor
or
add
imul
mov
movs
xor
retf
xchg
sbb
cmp
enter
je
jmp
dec
cmps
dec
div
leave
cdq
mov
ret
movzx
fbld
imul
lods
paddd
pop
dec
popf
cmc
(bad)
gs
mov
jbe
inc
xchg
xchg
mov
add
pminsw
pop
sub
sub
pop
dec
mov
mov
ja
outs
mov
into
mov
add
or
es
stos
mov
push
scas
bound
cmp
jb
cmps
out
jecxz
out
ret
les
ins
mov
jnp
(bad)
pmulhuw
shr
push
retf
jp
inc
mov
xchg
add
imul
xchg
dec
arpl
movs
outs
mov
ja
xor
nop
mov
aaa
xchg
dec
adc
mov
pushf
jmp
dec
inc
mov
cdq
mov
xor
lods
cmps
jmp
aas
popa
test
mov
inc
dec
push
(bad)
scas
ret
stc
cwde
call
call
fisttp
inc
(bad)
jbe
inc
(bad)
aam
div
push
fisub
jne
xlat
pop
rcr
xor
jne
sub
aas
out
xor
lds
rcl
in
je
dec
fcom
jmp
and
int3
in
inc
xor
inc
aaa
out
outs
ret
out
sub
mov
lods
outs
ss
aad
sar
in
fsub
fisubr
pop
sub
pop
sbb
fwait
loopne
push
in
xchg
jp
mov
in
pop
std
dec
xor
movs
(bad)
loopne
pmaxsw
sahf
sbb
arpl
call
fisub
sar
pop
mov
out
ficomp
hlt
aas
pop
idiv
xor
xor
addr16
add
sbb
out
cmp
sbb
rcl
jns
push
out
mov
inc
and
pusha
pop
ins
jp
push
mov
mov
push
clc
lds
retf
cmps
ja
mov
hlt
mov
mov
clc
aad
sti
inc
mov
mov
pop
icebp
repz
arpl
jnp
sbb
and
sbb
fist
mov
ins
imul
rol
push
jo
inc
scas
xor
repnz
cmps
outs
in
adc
inc
lahf
fstp
push
adc
retf
jecxz
and
jo
je
sbb
outs
xor
push
xchg
cmp
push
sub
test
sub
add
dec
and
mov
mov
(bad)
popf
cmp
mov
mov
push
pop
cdq
push
sub
push
xchg
test
lock
xchg
jl
and
mov
pop
add
or
push
inc
pop
mov
inc
sbb
fmul
rcl
outs
cmc
mov
fldenv
cld
outs
outs
repnz
lea
mov
sub
xor
sbb
fld
ror
push
popf
ret
test
jg
cmp
ror
bound
mov
pop
sti
retf
lahf
inc
push
cmp
cmp
push
stos
sbb
cmc
cld
lahf
xchg
inc
les
push
adc
inc
je
out
ret
movs
cli
pcmpgtb
or
add
fwait
jne
or
mov
push
lock
mov
bound
rol
inc
es
mov
sbb
dec
jno
cwde
or
jne
fsubr
and
fcmovnbe
or
lods
fs
inc
and
pop
scas
xchg
(bad)
push
aas
xor
mov
clc
loope
pop
jns
sbb
es
cmp
sbb
mov
or
loop
popf
jno
dec
addr16
fdivr
mov
mov
inc
cli
fst
pop
add
jge
pop
scas
pop
out
and
sub
pop
pop
pop
aam
mov
mov
shr
(bad)
es
loope
xchg
mov
push
stos
fst
lock
mov
mov
push
and
les
fdiv
test
popf
sub
hlt
dec
push
adc
bound
pop
cmp
cdq
ror
in
sub
fld
mov
xchg
call
outs
mov
mov
fcmovnb
je
mov
dec
(bad)
mov
into
(bad)
stos
jl
inc
dec
xchg
shl
out
cmps
shl
xor
lea
mov
test
mov
jecxz
jmp
sti
dec
sbb
imul
push
loope
sbb
je
movzx
mov
pop
cdq
sbb
or
mov
sbb
mov
shl
adc
loopne
(bad)
inc
add
add
ins
pop
repz
scas
dec
dec
sub
jg
aas
dec
scas
cdq
cmp
adc
mov
shl
mov
jns
cwde
scas
jmp
jno
loop
jne
rcl
retf
push
pop
mov
xor
cmp
push
or
pop
fdiv
push
ret
int3
mov
in
sahf
cwde
add
popa
xor
sti
sbb
xchg
pop
xchg
adc
bound
ret
xchg
out
pusha
and
mov
out
mov
push
clc
xor
test
fldcw
gs
scas
js
xchg
test
xchg
pop
pop
push
pop
jmp
pop
fs
cmp
jns
mov
stos
cdq
mov
mov
aaa
push
or
fadd
mov
jo
stc
pushf
(bad)
aas
or
loopne
push
in
int3
add
mov
or
ds
inc
push
sbb
call
movs
das
pushf
inc
fwait
fs
sub
pop
sbb
outs
(bad)
jbe
inc
hlt
jp
or
dec
add
cmp
mov
lock
(bad)
and
test
xchg
lds
pop
mov
xor
cmp
movs
fstp
pop
mov
xchg
scas
std
addr16
(bad)
in
mov
pop
call
sbb
prefetch
sar
pop
xor
lods
int3
shr
call
pusha
aaa
pushf
(bad)
mov
or
dec
pushf
bound
sbb
ret
cmp
push
inc
(bad)
cli
fadd
push
movs
push
xor
(bad)
mov
idiv
and
scas
xchg
jl
mov
mov
mov
dec
mov
push
mov
into
addr16
adc
pop
cmp
jbe
inc
and
call
inc
nop
add
loope
imul
jg
ja
out
leave
sub
lods
dec
xchg
mul
repz
ss
scas
sbb
ja
fistp
inc
out
movs
jno
call
pop
jmp
gs
mov
int
ret
pushf
pcmpgtb
push
test
and
js
cmp
jg
and
pop
repnz
(bad)
dec
push
or
xchg
add
cmp
inc
xchg
jg
or
les
lods
xchg
mov
test
xor
mov
lods
add
xchg
cmp
pushf
cmp
nop
mov
and
inc
nop
inc
shr
pop
dec
push
dec
iret
dec
ret
adc
cmp
dec
jl
mov
mov
sbb
int
iret
dec
sub
outs
les
xor
and
add
enter
xchg
arpl
inc
cdq
mov
jecxz
mov
call
xchg
gs
add
out
rol
das
aad
outs
(bad)
enter
pop
add
jmp
sar
mov
push
jns
cmp
xchg
jecxz
scas
sbb
shr
fist
fistp
dec
jb
loop
pop
xlat
xor
shl
mov
mov
adc
cmp
adc
hlt
xchg
jae
sub
xchg
(bad)
inc
xchg
sar
sbb
push
xor
in
pusha
dec
add
ror
in
inc
inc
scas
retf
inc
xchg
rol
or
nop
xchg
pop
pop
sub
not
or
mov
hlt
mov
rcl
cli
xchg
jp
jns
cmp
inc
aad
enter
leave
shl
imul
push
adc
ins
test
jno
xor
fst
fcomip
sbb
arpl
pop
mov
inc
mov
xlat
add
ret
cmp
cmc
cmp
and
sub
unpcklps
push
es
and
mov
cmp
retf
in
not
mov
sub
cld
shl
outs
xor
push
adc
pop
(bad)
mov
pop
sbb
(bad)
jmp
inc
ret
sbb
mov
repnz
nop
movs
push
mov
add
or
mov
mov
push
jecxz
mov
call
jno
fsubr
jle
cli
lahf
shl
js
scas
stc
out
add
dec
imul
retf
shr
sbb
or
in
and
fdivr
pop
daa
fcomp
not
cmp
xlat
pop
mov
adc
test
dec
lods
mov
mov
sub
cld
adc
pop
test
mov
and
jge
outs
mov
and
in
cmp
push
aas
test
jecxz
mov
out
inc
xchg
sbb
cmps
sbb
push
lea
and
pop
jb
jmp
mov
inc
mov
adc
rol
cmps
fsub
cmps
push
add
iret
push
in
mov
adc
cmps
cdq
imul
jb
push
and
(bad)
jmp
stc
fs
mov
inc
push
imul
dec
outs
dec
cmp
fcomi
stos
inc
sbb
enter
scas
jae
xor
int3
rcl
sub
adc
fisubr
pop
sbb
inc
cwde
jno
mov
add
pop
popa
mov
ds
jnp
cli
sbb
xchg
jnp
xchg
inc
adc
je
adc
sbb
lahf
mov
pop
sub
ror
(bad)
test
ins
or
pop
enter
xchg
xchg
lahf
push
sub
sub
jnp
mov
pop
dec
xchg
sub
mov
push
sar
dec
aam
shr
pop
push
mov
jp
add
(bad)
retf
dec
xchg
inc
inc
fistp
pop
inc
xchg
stos
cld
push
data16
nop
pop
arpl
jmp
cwde
dec
jae
add
das
xor
ss
sbb
or
and
hlt
pop
pop
leave
jp
and
sti
sub
retf
leave
add
push
xchg
sahf
cld
fadd
mov
lods
aam
lahf
mov
or
into
lods
mov
sub
test
mov
out
repnz
hlt
add
hlt
jb
xchg
inc
sbb
enter
repz
(bad)
xchg
mov
adc
xchg
pop
push
xchg
mov
inc
(bad)
shr
ret
sbb
xor
add
cdq
imul
rol
mov
xor
retf
push
(bad)
stc
mov
inc
sub
(bad)
jl
js
fistp
je
push
push
cdq
adc
and
and
stc
je
xor
xlat
lods
aaa
js
retf
add
sub
xor
push
arpl
cmp
mov
in
imul
and
adc
nop
pop
jecxz
sub
cmp
cld
fdiv
mov
mov
sar
sbb
inc
ret
push
fidivr
out
inc
test
mov
xchg
xor
or
popf
out
ror
iret
ret
jmp
ret
imul
adc
idiv
mov
ins
sti
lods
loop
and
adc
dec
adc
aam
in
cmp
jno
aaa
retf
fcom
call
push
xor
push
xchg
hlt
mov
pop
pop
inc
aam
pop
rcl
cwde
std
icebp
addr16
and
mov
push
(bad)
in
clc
push
inc
mov
jecxz
dec
jecxz
mov
dec
or
xchg
dec
or
sub
loope
aad
int
jmp
fcomi
pop
add
sbb
jbe
cld
imul
rcl
pushf
and
gs
movs
add
mov
mov
and
mov
adc
xlat
mov
hlt
dec
dec
mov
and
sub
adc
sti
psrad
and
iret
or
stos
dec
or
fwait
clc
pop
out
pusha
mov
test
retf
jge
xchg
push
aad
dec
in
stos
in
xchg
inc
(bad)
xchg
pop
add
pop
mov
adc
push
test
out
jl
pop
mov
fidiv
mov
jbe
push
cld
(bad)
push
loope
push
jo
jmp
lds
cld
std
xchg
loope
or
pop
fidiv
mov
movs
sbb
mov
sbb
jle
dec
add
cmps
les
pop
aaa
jmp
(bad)
pop
(bad)
fadd
leave
adc
add
push
cmp
(bad)
je
pop
push
loop
xlat
aas
jne
out
pop
dec
and
test
sub
in
mov
or
wbinvd
sub
fsub
test
cmp
jo
cli
mov
(bad)
imul
addr16
ins
xor
sub
push
sub
mov
add
jp
mov
adc
mov
(bad)
retf
arpl
mov
or
fcmovb
iret
pop
(bad)
mov
lahf
and
sbb
sahf
out
mov
jecxz
popa
jae
outs
das
push
ins
cmp
mov
sahf
cli
dec
push
sub
push
dec
inc
jmp
idiv
cmp
outs
cmps
xchg
xlat
(bad)
ds
push
mov
out
or
repnz
push
ss
test
or
aam
push
mov
add
cmp
cmp
jge
pop
cwde
mov
cmp
pop
fisubr
adc
pushf
jb
shl
and
adc
mov
mov
or
fist
push
gs
jbe
jle
sbb
mov
cmp
xlat
(bad)
xor
leave
das
inc
sti
push
xchg
fs
std
das
xchg
mov
(bad)
in
ror
jmp
cmp
mov
push
mov
in
retf
(bad)
xor
sbb
cs
(bad)
ror
add
call
outs
retf
int3
push
xor
dec
aas
mov
fs
push
fcom
outs
sbb
jne
and
sbb
mov
add
rcl
push
mov
(bad)
push
add
dec
scas
daa
(bad)
mov
and
std
pop
mov
fs
jns
sub
mov
aas
dec
fdiv
add
inc
popa
and
xor
sbb
cmps
popf
aad
dec
mov
mov
xchg
mov
push
mov
and
pop
fwait
icebp
aam
rol
imul
pop
adc
push
xchg
rcr
or
jb
xchg
sbb
or
jno
adc
shl
or
adc
jmp
and
sub
mov
div
pop
sar
cld
jmp
jbe
enter
fld
push
pop
test
lds
inc
in
stos
imul
dec
and
push
clc
div
or
rcl
xchg
in
mov
add
xchg
add
icebp
sbb
sbb
hlt
into
sbb
cmp
rcr
fwait
shl
mov
outs
cmps
faddp
aaa
mov
ins
xchg
movs
cmp
sti
(bad)
sbb
or
call
xor
or
mov
jp
mov
adc
and
outs
mov
jl
leave
inc
cmp
nop
adc
add
cmp
inc
push
mov
push
mov
add
or
mov
(bad)
std
sti
call
sub
imul
mov
stos
xchg
outs
push
push
data16
and
xor
cmp
mov
std
jl
cmp
pop
(bad)
jge
aam
jae
sub
aas
add
sub
xchg
sub
push
loop
jmp
adc
fild
sbb
or
sbb
dec
mov
jns
mov
mov
mov
outs
aas
fidiv
sub
inc
(bad)
xor
int
pushf
adc
popf
cmp
mov
call
pop
jg
lds
pop
arpl
das
jns
arpl
sub
loope
in
inc
or
or
or
sbb
inc
and
out
mov
out
jb
in
inc
mov
neg
mov
cmp
inc
mov
mov
(bad)
out
ror
jns
push
inc
aas
add
cmc
test
mov
xor
cwde
jnp
lea
loop
adc
xchg
mov
retf
iret
inc
push
inc
aad
(bad)
out
jo
sbb
cld
dec
sar
mov
adc
test
mov
jnp
pop
jae
xchg
paddw
call
inc
ror
and
xchg
jns
push
mov
add
push
aad
pop
jge
cmp
out
je
and
bnd
pop
mov
cmp
push
lock
neg
sub
lds
in
nop
mov
sub
js
pop
inc
pushf
enter
and
arpl
into
xchg
daa
aas
pop
xchg
dec
popf
inc
mov
sub
repz
daa
(bad)
(bad)
cmp
jle
adc
xlat
je
mov
call
neg
in
and
inc
leave
int
je
std
addr16
js
sub
aas
pop
or
push
adc
lahf
test
add
lahf
push
jp
(bad)
and
sbb
pop
cmp
and
xchg
pop
fsubrp
mov
(bad)
xor
repz
std
mov
daa
mov
out
fsubr
push
jmp
loop
rcl
hlt
cld
xlat
dec
push
mov
sti
sub
into
cmp
hlt
push
hlt
push
inc
scas
pop
xor
sbb
inc
stos
xlat
pop
nop
pop
pop
sahf
movs
jno
inc
sub
retf
(bad)
sbb
and
sbb
imul
sbb
xchg
fwait
fs
data16
xchg
sub
and
popf
stos
or
mov
mov
jne
call
xchg
sbb
(bad)
(bad)
test
xchg
scas
cli
jne
push
cmp
mov
dec
pop
inc
add
and
data16
(bad)
jno
mov
jl
pusha
lock
and
or
mov
mov
cdq
sub
mov
adc
xor
sub
daa
and
mov
out
(bad)
cli
cld
in
dec
cmp
out
xor
es
les
jae
js
imul
cmp
push
mov
clc
je
cmp
mov
js
fmulp
les
in
mov
mov
inc
mov
push
jle
pop
fisubr
nop
dec
xchg
in
xor
scas
in
movs
(bad)
ds
jmp
cld
and
stc
mov
gs
cld
cmps
jmp
das
stos
repz
out
xchg
sbb
mov
mov
sbb
add
cmp
loope
stos
iret
cmc
mov
outs
nop
jle
sub
cmp
loope
call
retf
out
cmc
outs
pop
or
inc
call
sar
addr16
and
mov
inc
dec
cmps
mov
sbb
pop
xor
add
out
mov
pop
aaa
lods
in
std
bound
inc
(bad)
nop
lds
push
pop
jnp
mov
inc
test
jnp
cmp
lods
mov
lock
adc
add
sar
or
xchg
inc
jo
fwait
xchg
pop
cli
and
inc
xchg
sbb
js
lods
les
or
adc
loop
or
fucomi
scas
push
mov
push
ret
inc
adc
xchg
and
xchg
mov
pop
mov
fwait
jecxz
shl
in
aam
sbb
add
inc
xor
mov
(bad)
outs
stos
xchg
popa
cmp
add
jmp
call
pop
retf
mov
adc
lods
push
inc
cwde
mov
cs
lea
adc
mov
or
jne
retf
or
adc
or
out
mov
(bad)
xchg
and
and
imul
fild
mov
scas
movs
jns
add
ss
sbb
retf
jmp
jno
pop
fdiv
imul
jae
mov
out
xchg
pop
add
xchg
jmp
je
repz
or
arpl
in
pusha
sbb
push
pop
(bad)
and
cmp
out
and
cmp
xchg
mov
je
(bad)
mov
or
fwait
xchg
mov
inc
xchg
xor
ja
jecxz
ficom
mul
pop
out
daa
les
mov
stos
dec
iret
lds
push
sbb
inc
cmp
jp
out
lods
xor
pop
stc
(bad)
fistp
push
pop
xchg
cmps
xor
std
or
adc
ret
or
and
lods
dec
or
cli
mov
arpl
xchg
int
mov
xchg
sti
icebp
aam
imul
push
pop
or
(bad)
dec
data16
jmp
add
loop
loopne
dec
cmp
pop
scas
es
stos
jge
xchg
push
arpl
cmp
xor
inc
scas
dec
pop
int3
push
out
mov
or
cmp
aas
arpl
or
int
pop
xchg
xor
out
mov
mov
mov
jbe
sub
aam
mov
jge
and
cmp
pop
mov
mov
sub
loopne
sbb
cmp
cld
stos
(bad)
aad
call
or
add
(bad)
jmp
push
adc
cmp
nop
push
out
inc
mov
dec
clc
sub
mov
inc
int3
and
sbb
or
pusha
and
mov
add
dec
add
ins
or
push
mov
push
icebp
jbe
nop
mov
hlt
mov
adc
dec
adc
mov
xor
sub
inc
imul
scas
jo
or
xor
gs
xchg
loope
xchg
cmp
outs
add
and
xor
daa
pop
sti
inc
popa
add
and
sahf
pop
add
adc
fst
pop
and
outs
dec
inc
out
gs
sub
xchg
adc
and
pop
aaa
cmp
or
or
pminsw
jae
or
add
shl
mov
popa
sub
lea
mov
jnp
jnp
aaa
bound
cmp
retf
ret
faddp
adc
jns
or
aas
fidivr
loope
jno
aad
retf
xor
inc
les
mov
sbb
rcr
dec
xor
(bad)
pop
jge
ins
adc
push
mov
lods
mov
scas
mov
xchg
(bad)
cmps
jns
neg
loope
xor
les
test
xor
enter
rcr
loopne
dec
mov
push
pop
cmp
push
dec
jb
scas
shl
push
addr16
das
push
cmp
retf
mov
dec
(bad)
adc
fnsave
mov
int3
cs
js
cdq
(bad)
das
daa
test
xchg
repz
push
jo
mov
jns
dec
mov
mov
add
shl
push
daa
pop
out
icebp
loope
daa
sbb
fcom
hlt
arpl
mov
mov
stc
(bad)
dec
cmp
retf
fcom
ins
xor
add
jae
lds
xor
enter
sub
cli
xchg
cld
adc
sub
and
(bad)
imul
test
adc
ret
and
test
in
mov
and
leave
pop
inc
in
gs
aaa
adc
lock
cmp
and
into
fldcw
adc
ds
jne
adc
cmp
mov
jae
push
stc
sbb
pop
test
fldcw
outs
mov
mov
inc
jb
mov
cmp
push
stos
rcr
lahf
or
sahf
or
sar
ss
jmp
ficomp
mov
push
sbb
neg
das
dec
in
pop
ret
loop
stos
mov
in
icebp
loopne
imul
mov
icebp
cmp
cmp
ja
push
imul
mov
dec
mov
mov
inc
cdq
add
mov
xchg
mov
dec
out
inc
lods
push
mov
xor
jo
sbb
cdq
xchg
loopne
pop
inc
pop
outs
ret
or
sbb
ins
mov
pop
je
div
mov
mov
sbb
fwait
jo
mov
cmc
xor
push
dec
jne
out
shr
lods
sub
xchg
or
and
lea
jge
rcr
mov
pusha
enter
cmp
sub
cwde
ds
xchg
lods
clc
push
dec
or
push
outs
sub
inc
push
ins
adc
jp
lds
iret
mov
add
ret
inc
ja
pop
fisttp
pop
dec
cmps
dec
and
xlat
outs
sbb
cmp
push
pop
adc
daa
dec
int3
fcomp
push
mov
jae
dec
shl
mov
iret
test
jp
mov
retf
jg
stos
jo
gs
xchg
sbb
data16
cmps
sar
cmc
in
movs
sub
inc
dec
add
jg
add
ss
and
ds
lds
pop
pop
dec
rcr
dec
mov
push
jmp
popa
push
cmc
(bad)
lods
ret
fcom
mov
data16
add
pop
adc
daa
shr
dec
popf
iret
shl
loope
push
adc
dec
call
xchg
push
(bad)
in
jg
fsub
les
push
push
pop
cmp
rol
shrd
jecxz
std
jl
jne
test
es
jae
call
pop
inc
inc
scas
inc
or
sub
cmp
loopne
xor
xchg
shr
popf
dec
sbb
jno
aad
leave
inc
je
adc
shl
test
retf
es
retf
sub
dec
jno
jae
movs
enter
jmp
sbb
outs
std
xchg
stos
mov
popa
fst
(bad)
lock
adc
dec
dec
sub
xor
jne
cwde
cmp
fs
mov
adc
jmp
xchg
popa
adc
int
inc
adc
xchg
jae
je
outs
xor
(bad)
sbb
ret
(bad)
out
mov
ret
jmp
mov
xor
mov
aas
and
ficom
in
out
ins
aas
mov
xchg
add
push
ret
or
pop
dec
mov
in
jb
jb
test
push
aas
lds
call
xchg
imul
jae
mov
push
xchg
hlt
fistp
push
mov
and
jmp
cmp
add
scas
mul
inc
xchg
xchg
inc
call
or
stos
retf
mov
jmp
xchg
popa
adc
dec
xlat
dec
iret
xchg
stos
ret
aam
cmp
mov
xor
xor
ins
out
(bad)
adc
stc
dec
dec
data16
sbb
mov
jo
xchg
jecxz
fst
xchg
out
addr16
push
popa
inc
shl
and
fld
sti
addr16
pusha
dec
xchg
jecxz
lods
retf
inc
sbb
dec
mov
into
ror
sub
enter
aaa
mov
push
outs
jmp
fisub
movs
xchg
imul
jbe
xchg
jp
cli
cmps
retf
mov
jmp
in
pop
(bad)
cmp
popf
adc
xchg
dec
(bad)
aad
fist
fadd
fisttp
xor
adc
arpl
add
adc
adc
fwait
push
dec
xchg
in
in
xbegin
repnz
cld
hlt
sbb
mov
scas
mov
sbb
mov
adc
loope
loope
daa
cdq
cdq
lahf
inc
test
xchg
ret
outs
(bad)
jmp
jl
pusha
adc
enter
call
xchg
in
call
jo
xor
lds
ret
mov
xor
movs
test
test
idiv
mov
sbb
adc
mov
adc
fs
mov
test
sar
jns
or
push
(bad)
mov
outs
out
mov
fidiv
repnz
and
and
xchg
data16
rcr
leave
pushf
(bad)
jp
cli
add
push
out
mov
and
inc
out
pop
bnd
mov
icebp
adc
pop
leave
pop
lock
sbb
pop
inc
and
and
in
sbb
xlat
adc
lahf
repnz
jb
mov
cmps
bound
and
mov
pushf
push
mov
jl
push
aas
outs
lds
jmp
cmp
test
mov
jb
mov
stos
mov
and
jle
arpl
stos
inc
add
cmp
inc
adc
cld
sbb
pop
out
in
fsub
and
sbb
sbb
cld
stos
sbb
sahf
mov
jno
vmovss
test
clc
test
cmp
das
into
jmp
jbe
jl
test
jae
inc
and
fs
jmp
rcl
and
leave
jbe
lea
pop
or
push
addr16
mov
mov
mov
adc
xor
cmps
jbe
ss
dec
scas
jbe
in
shr
jle
pop
mul
js
jge
jae
lahf
xchg
inc
mov
xlat
jmp
or
imul
cwde
in
jnp
add
sub
pop
or
imul
cwde
push
or
or
or
add
inc
cmp
inc
lea
mov
and
repz
cmp
mov
xor
je
sti
push
iret
xchg
outs
jg
cs
not
cmp
les
jp
adc
out
cmps
icebp
sbb
mov
lea
icebp
sti
(bad)
mov
push
xlat
cmps
pusha
test
dec
popa
pop
mov
clc
pop
sbb
imul
xchg
(bad)
fdiv
cmp
pushf
(bad)
and
(bad)
mov
data16
fs
fwait
xchg
xchg
mul
loopne
call
fbstp
dec
mov
cmp
and
pop
fsub
call
cwde
js
fidivr
jl
stc
mov
sti
push
or
and
or
mov
dec
mov
clc
cmp
mov
pusha
sahf
test
jecxz
les
inc
dec
push
cdq
mov
gs
imul
or
adc
pop
fcmovb
adc
(bad)
cmp
retf
mov
jmp
clc
pop
nop
retf
idiv
aam
lahf
cmp
sbb
pop
jmp
cdq
jns
cmp
lahf
fidiv
ja
rol
inc
std
cs
sbb
jne
mov
sub
jle
xlat
psubsw
or
sub
sbb
les
and
movs
add
or
into
mov
cs
repz
fsubr
fcomp
pop
jmp
into
(bad)
enter
daa
popa
pop
jns
fs
mov
popf
sbb
push
sub
test
fdivr
cdq
sbb
imul
ins
mov
int
jnp
sub
and
inc
xor
jae
pop
sub
ret
jle
inc
or
dec
pop
js
ret
inc
sub
jae
in
ffree
xor
adc
ret
(bad)
inc
push
xchg
sub
out
pusha
mov
test
pushf
push
push
addr16
inc
aam
les
(bad)
cli
movs
inc
mov
cmps
pop
adc
and
(bad)
test
int3
ins
cmps
push
(bad)
push
and
outs
aaa
div
pop
rcl
pusha
jns
cmp
movs
pushf
inc
outs
stos
sbb
cmc
sub
mov
sub
push
adc
imul
repz
sar
lods
fcom
dec
dec
in
fwait
in
sbb
push
or
xchg
sar
in
jo
loop
(bad)
jne
fadd
mov
or
lea
nop
mov
xor
in
xchg
lods
cmps
jbe
push
outs
xchg
cli
lds
xor
lock
xor
or
jbe
bound
enter
daa
pusha
push
ja
cmp
jno
call
jbe
cmps
pop
daa
cmps
add
fistp
sbb
pop
test
push
fs
pop
nop
out
dec
enter
movs
nop
cmp
pusha
push
adc
arpl
das
(bad)
push
mov
mov
lahf
mov
into
add
aad
lods
je
int
das
outs
inc
mov
loop
in
sbb
inc
xchg
sar
xchg
stc
(bad)
int3
mov
pusha
adc
cdq
mov
popa
(bad)
lock
push
xchg
rol
xchg
ins
test
(bad)
xor
js
inc
and
sub
mov
std
sbb
cdq
movs
dec
outs
loop
movs
in
add
xor
outs
inc
out
lds
into
jo
xchg
jbe
xor
in
call
mov
mov
dec
push
and
ss
xadd
sub
test
test
cld
or
push
mov
adc
repz
stos
in
sar
popa
push
aad
mov
ror
sub
adc
mov
cs
shl
add
inc
ret
jp
add
mov
or
inc
rol
stos
cmps
(bad)
and
icebp
push
cmc
shr
cmp
popa
popa
scas
push
mov
mov
sbb
stos
jmp
and
rol
mov
mov
fstp
pop
imul
xchg
inc
aam
mov
aad
test
clc
xchg
xor
xor
(bad)
dec
cmp
mov
sar
add
mov
leave
stos
sub
(bad)
movs
scas
dec
ror
sbb
arpl
aam
cli
(bad)
in
jnp
lea
jns
sub
push
scas
jb
add
ins
xlat
mov
(bad)
out
inc
out
mov
rol
sbb
in
and
jo
inc
mov
leave
shr
fbstp
cmp
cld
cmp
xchg
jecxz
jae
lahf
pop
sbb
inc
arpl
xor
adc
ret
sbb
or
icebp
das
jge
sahf
mov
popa
dec
cli
jae
sahf
adc
and
push
mov
xlat
sbb
test
dec
call
mov
nop
sbb
inc
cli
mov
jno
sbb
cmp
adc
and
ja
adc
jmp
loopne
cdq
scas
push
sahf
es
dec
mov
mov
push
fwait
das
and
rcr
in
xor
add
inc
jbe
aad
mov
sub
int3
retf
outs
out
inc
pop
leave
pushf
jae
and
in
and
test
dec
adc
and
and
cmc
xchg
or
mov
cmp
dec
dec
ins
fld
(bad)
out
retf
ficom
fld
fsubr
aad
call
fcom
sub
mov
addr16
jp
test
enter
jge
mov
sub
push
mov
lds
fs
out
pop
add
mov
adc
dec
adc
and
xor
or
mov
dec
push
(bad)
fdiv
mov
jge
mov
cdq
push
imul
mov
mov
jecxz
mov
ins
push
imul
jg
inc
dec
loop
pop
imul
inc
in
xchg
icebp
cmp
push
lahf
mov
mov
js
sahf
gs
in
xor
ror
or
adc
xchg
jmp
ins
daa
or
jb
mov
pusha
mov
inc
xchg
jecxz
and
pop
jmp
call
push
xchg
fdiv
cmp
mov
cli
xchg
mov
imul
dec
sub
nop
in
adc
aam
in
inc
fucom
inc
out
push
cmp
sbb
les
cmp
call
mov
fsubr
das
mov
push
xor
mov
pop
xchg
(bad)
dec
and
or
ins
pop
sti
movs
add
cmp
fnsave
ins
je
in
mov
adc
int3
shl
pop
or
imul
retf
pop
mov
sub
out
mov
or
mov
mov
pop
adc
adc
(bad)
cs
mov
outs
clc
dec
aad
(bad)
or
aam
pop
cmp
gs
shl
xor
cli
or
jns
cld
adc
jecxz
leave
mov
(bad)
into
in
mov
cld
(bad)
nop
pop
or
push
pop
arpl
or
in
pop
and
outs
fs
sbb
mov
mov
sbb
fwait
ja
sbb
push
lea
and
outs
push
div
cmp
or
and
jbe
ins
nop
fninit
sub
outs
add
push
shl
and
shl
enter
dec
add
test
add
pushf
cmps
jl
bswap
outs
into
adc
push
movs
dec
leave
sar
push
push
loopne
rol
cmp
mov
add
inc
imul
outs
cdq
popa
jg
dec
sti
retf
enter
push
bound
xor
out
lods
in
cwde
mov
pop
(bad)
mov
dec
xchg
cmp
xchg
inc
imul
loope
ds
xor
xchg
ret
(bad)
xchg
mov
lock
clc
das
cmp
jne
adc
add
sub
shl
dec
dec
bnd
inc
imul
outs
je
pusha
mov
std
push
retf
fidivr
out
push
xchg
sbb
inc
push
shl
mov
dec
cmp
jnp
loopne
jb
setle
mov
mov
fdivr
cld
aad
jmp
jo
sbb
(bad)
idiv
(bad)
xor
(bad)
lods
inc
sahf
lods
sbb
xchg
(bad)
mov
aam
test
push
adc
jns
jle
dec
jp
cmp
push
mov
cmc
mov
fwait
sbb
fidiv
adc
(bad)
int
sub
push
es
sbb
imul
push
sub
or
leave
int3
xor
pop
aaa
mov
shl
xor
and
js
stos
pop
inc
fcmovnbe
add
sub
ret
mov
jne
push
or
(bad)
mov
cwde
out
mov
aam
cmp
xor
arpl
push
or
lahf
xor
sub
mov
icebp
gs
pop
stc
add
fcom
lds
out
or
in
cmp
out
cmp
mov
push
jp
cmp
xor
fsubrp
cli
inc
in
gs
outs
cmp
je
std
call
aas
or
and
xor
std
pop
fs
dec
fwait
cli
dec
cmc
jle
cmps
sbb
mov
adc
test
les
gs
mov
inc
popf
push
jmp
jae
jne
push
aad
and
shr
and
gs
dec
or
or
pop
aas
adc
jp
cmp
mov
iret
mov
push
imul
scas
test
iret
inc
into
pop
dec
out
cmp
xor
aaa
scas
ds
jno
repnz
into
sar
and
xchg
push
sbb
nop
pop
sbb
ss
hlt
sbb
rol
push
dec
sbb
std
in
sub
jmp
push
push
lea
ret
jl
inc
stc
int3
arpl
loope
mov
xchg
cmc
push
gs
stos
jns
bound
scas
shr
pop
arpl
cmp
xor
push
cmp
inc
lea
loope
pop
mov
or
inc
stos
cmp
aas
mov
ins
cmp
xor
movs
adc
fsubrp
cmps
mov
(bad)
sub
and
mov
nop
cmps
inc
or
mov
imul
aam
(bad)
aad
sub
das
icebp
test
jecxz
sbb
retf
inc
add
shr
enterw
xchg
sbb
test
mov
jmp
clc
shl
sbb
lods
div
shl
js
ror
sub
inc
push
mov
ret
inc
lods
xchg
jae
shl
push
and
pusha
mov
xchg
sbb
xor
mov
(bad)
je
fild
ss
retf
or
sub
repnz
ins
jge
mov
fiadd
sbb
div
call
sbb
jbe
int3
call
popf
mov
and
cmp
test
push
clc
lods
or
test
leave
call
xchg
repnz
push
xchg
cmp
xchg
leave
pop
lock
in
fmul
retf
adc
cmc
ss
jnp
and
fild
mov
loopne
mov
enter
(bad)
push
(bad)
jl
push
sbb
xchg
test
pushf
imul
sti
sbb
lahf
and
push
fidiv
sahf
and
test
out
ret
sub
iret
or
or
or
pop
scas
lahf
xchg
aam
pop
pop
mov
loopne
push
cld
cmps
mov
nop
popf
push
cmp
stc
mov
mov
shl
imul
(bad)
outs
push
sub
pop
and
adc
repz
dec
sbb
call
out
add
popa
idiv
mov
dec
call
xchg
mov
inc
cs
push
mov
rol
jbe
scas
test
inc
jmp
mul
add
mov
adc
fwait
mov
call
xor
cdq
cld
xchg
popa
or
xchg
inc
sub
push
cli
lahf
mov
aas
shr
cmp
dec
dec
cmp
mov
and
out
add
adc
inc
and
enter
xor
div
retf
and
ret
out
lock
sub
jns
stc
inc
cmps
sub
(bad)
lahf
jo
mov
loopne
and
cmc
mov
pop
jno
xor
std
ja
dec
cmp
pop
sub
das
adc
adc
in
rol
push
daa
adc
mov
int3
dec
scas
in
lds
mov
jmp
out
push
loopne
scas
test
(bad)
fucom
es
enter
inc
mov
imul
or
mov
ret
ret
in
imul
xchg
push
sub
xlat
imul
or
ins
pop
invd
xchg
(bad)
stc
ds
push
mov
fidiv
jbe
push
icebp
int
or
sub
cwde
pop
sub
inc
jb
sbb
mov
add
data16
xchg
jecxz
lea
repz
std
or
jmp
xor
loope
pop
test
cmp
rol
(bad)
mov
call
rcl
push
mov
in
xchg
imul
xchg
sub
dec
mov
sub
leave
fild
mov
cli
xchg
jne
xor
enter
sti
mov
xchg
mov
ss
outs
pushf
and
mov
push
imul
outs
xor
popf
mov
ror
jns
mov
mov
inc
mov
pop
adc
jmp
or
ds
ds
or
push
and
lods
add
mov
lods
inc
test
push
scas
inc
movs
mov
stc
loopne
aaa
out
pop
repnz
xor
lea
test
ja
mov
mov
movs
jmp
shr
mov
mov
gs
sbb
xchg
(bad)
iret
ds
popf
add
sbb
mov
out
xor
dec
xchg
jmp
ins
xchg
sub
push
sub
fs
lds
repnz
mov
fs
aas
inc
stc
int
jl
mov
div
push
and
mov
mov
mov
in
inc
mov
lds
int
int
inc
inc
les
xchg
out
cmp
mov
dec
(bad)
or
int3
in
hlt
xor
imul
adc
vmovdqa
imul
lea
push
sbb
fidivr
adc
(bad)
push
add
or
mov
xchg
fcom
pop
inc
ror
or
icebp
fs
pop
test
or
adc
sbb
shl
and
mov
je
mov
cmp
das
repnz
test
xor
(bad)
lahf
sti
mov
jg
inc
dec
adc
repz
ja
mov
fiadd
cmp
test
retf
(bad)
mov
jle
or
dec
out
add
setl
pop
mov
and
cdq
pop
cld
stc
call
mov
mov
ins
jl
add
(bad)
cmps
cmp
or
(bad)
mov
cmc
cmps
xor
call
mov
inc
ja
aas
pop
xor
xor
shl
cs
mov
push
test
xor
pop
push
fst
js
sbb
xor
and
jmp
jecxz
xchg
aaa
or
lea
lea
jo
and
push
jl
push
das
push
(bad)
lds
das
aas
mov
and
and
xchg
xor
test
inc
dec
push
(bad)
out
cwde
or
shl
cwde
mov
into
pop
stos
xlat
push
out
push
test
inc
imul
mov
push
sbb
jge
pusha
jmp
xor
push
jb
inc
int3
sbb
addr16
rol
sbb
mov
je
(bad)
mov
out
(bad)
int3
int
xchg
add
xor
pusha
mov
rcr
cmp
cmp
push
sub
int3
push
out
cmp
movs
sub
mov
adc
jns
mov
mov
inc
xchg
or
mov
ds
sbb
out
adc
cwde
or
outs
cmps
sahf
mov
outs
pusha
ss
push
fidivr
inc
data16
mov
add
and
rcr
jge
jecxz
mov
mov
push
fcmovbe
(bad)
xor
dec
mov
aam
clc
lods
out
pop
dec
movs
maskmovq
imul
or
jg
push
movs
mov
sar
sub
xchg
ins
inc
mov
jp
(bad)
and
(bad)
fidiv
cmp
enter
bound
xor
xor
(bad)
stc
sbb
xlat
daa
and
push
lea
pop
clc
mov
push
mov
cmp
and
rcl
mov
xor
mov
push
adc
mov
mov
fimul
adc
jmp
add
xchg
shl
or
lahf
cmps
xchg
sub
mov
arpl
xchg
in
jl
shl
ret
(bad)
out
fld
jae
nop
out
dec
call
adc
movs
add
leave
imul
movs
inc
je
loop
push
xchg
aas
sbb
pop
int3
mov
dec
xlat
or
inc
ins
outs
mov
test
jp
mov
dec
je
test
sbb
inc
neg
pop
lgdtd
lock
mov
or
nop
jno
loop
stos
jno
sbb
je
lds
add
icebp
stos
imul
sahf
(bad)
ret
add
add
jg
int
xor
repnz
or
inc
mov
mov
xor
test
call
jne
scas
adc
push
arpl
stos
or
or
jo
xor
mov
sahf
jp
pop
shl
dec
je
mov
cld
jle
repz
dec
repz
pop
add
mov
mov
lea
cmps
xchg
imul
cld
std
enter
xor
test
les
mov
mov
push
(bad)
pop
or
adc
test
jb
push
dec
mov
mov
push
mov
clc
cmps
mov
sub
push
iret
loopne
add
or
int
and
scas
mov
lods
mov
sbb
(bad)
xchg
in
ficom
xor
add
mov
add
dec
push
sahf
dec
xchg
xchg
cmp
iret
scas
jns
add
push
outs
pop
adc
popf
push
mov
xor
movs
dec
test
stos
jecxz
mov
stos
repz
cmc
imul
les
lea
ret
pop
xchg
enter
movs
test
fwait
rep
aad
jnp
or
retf
add
cli
or
into
mov
xor
ins
not
push
adc
aad
out
and
ins
fsubr
gs
and
cmp
rol
and
adc
sbb
or
fadd
out
or
mov
adc
fwait
jp
mov
movs
jecxz
sub
iret
leave
lahf
inc
das
imul
inc
fwait
dec
mov
das
jg
pop
ja
cmp
in
iret
call
adc
push
cwde
pop
test
sub
scas
jae
shl
les
sbb
dec
ins
pop
mov
pop
push
lods
ficomp
sbb
movs
mov
jmp
xor
fnstsw
mov
sar
or
dec
icebp
imul
(bad)
popa
inc
jb
xor
das
jecxz
and
scas
mov
xor
addr16
call
pop
(bad)
je
fistp
adc
or
pop
pop
das
inc
sub
add
xchg
pop
dec
sbb
in
xchg
int
jns
aad
test
jns
stos
std
out
shl
gs
inc
jns
dec
test
push
push
pop
push
neg
pop
jmp
pop
add
jns
xchg
xor
push
sbb
fidivr
push
cs
das
or
inc
dec
ret
sub
loope
lods
mov
mov
adc
pop
dec
and
inc
outs
inc
ins
sti
mov
pusha
addr16
cdq
loopne
(bad)
mov
gs
mov
pop
inc
mov
pop
fwait
sub
lods
call
movs
mov
xchg
fsubr
adc
nop
imul
daa
fs
mov
stos
and
aas
mov
icebp
loopne
add
mov
imul
aam
and
push
xor
je
or
cmp
and
jne
out
int
leave
push
adc
mov
xchg
pop
(bad)
cmp
sbb
pop
sar
push
pop
jl
ds
mov
add
clc
loope
shr
lds
stc
(bad)
fcomp
test
imul
clc
pop
int3
xor
ret
pop
and
sti
scas
mov
clc
pusha
enter
cmp
push
repz
or
out
dec
cmps
ret
jns
sbb
aad
shl
popf
fs
dec
lea
pop
sbb
in
mov
sub
loop
push
mov
iret
(bad)
(bad)
pop
mov
aas
inc
pusha
mov
ja
(bad)
fadd
lds
sbb
push
call
pop
int3
mov
jecxz
icebp
sub
mov
xor
jg
ss
xchg
push
or
aam
cmc
and
aaa
(bad)
jns
dec
sub
call
fdivr
jo
jp
imul
cmp
mov
fdiv
ja
lea
fdivr
push
add
icebp
xchg
cmp
xchg
retf
push
popa
mov
cmp
mov
imul
in
xor
sub
fldlg2
cs
push
xor
ins
ja
xchg
shl
out
inc
fsubr
sbb
je
xchg
xchg
dec
aam
cmp
inc
sbb
xchg
xlat
icebp
ss
(bad)
call
xchg
or
ret
mov
and
and
xor
pop
xor
movs
test
sub
mov
xor
pusha
mov
and
aaa
and
lds
retf
std
ficomp
repnz
nop
pop
retf
aaa
and
or
cwde
mov
jnp
and
cmp
ins
dec
jge
sbb
mov
push
xchg
inc
jl
in
sti
jmp
imul
fidivr
inc
cmp
xor
cli
(bad)
aaa
in
jo
and
and
pop
call
arpl
mov
jb
xchg
nop
jno
jo
es
and
or
sbb
sti
pop
pop
inc
js
mov
movs
int
pop
adc
aam
cmps
iret
inc
sub
mov
lahf
xchg
data16
xor
fcom
dec
fld
je
mov
inc
mov
stos
add
cld
push
mov
adc
xchg
xchg
(bad)
dec
jo
sti
(bad)
mov
in
xor
rep
xchg
cmp
dec
sub
out
fnsave
je
shl
nop
jg
pop
sbb
test
aas
inc
cmp
push
sbb
cdq
(bad)
mov
in
pop
dec
ins
xor
dec
pop
jge
add
cmp
outs
push
sbb
or
lahf
mov
add
rcl
and
sbb
pop
outs
int
xchg
sub
xchg
mov
xchg
inc
jecxz
iret
fst
stos
sbb
pop
daa
aas
out
inc
xchg
sbb
div
mov
shld
pop
add
call
sahf
jge
sbb
adc
cmc
sub
loope
daa
cwde
sbb
adc
jmp
cmp
xor
imul
adc
and
inc
mov
mov
push
arpl
dec
add
les
test
popf
fucomp
xor
xchg
lods
adc
leave
shr
cld
int3
mov
mov
xor
xor
inc
jge
ret
loop
and
push
int3
pop
popf
in
dec
sahf
xor
pop
loope
(bad)
les
in
cmp
mov
sub
cs
mov
cmp
inc
or
and
fcmovne
fst
clc
push
push
fs
out
and
(bad)
fidiv
mov
loopne
jmp
pop
(bad)
mov
sub
ret
pop
pop
retf
xchg
sti
jp
loop
mov
jmp
(bad)
cld
cli
stos
mov
or
in
mov
cmps
jmp
jge
mov
inc
rcl
cmp
and
popaw
out
push
dec
xchg
out
mov
push
adc
(bad)
shr
jae
add
xor
repz
ror
bound
mov
inc
mov
dec
add
jnp
pop
idiv
sar
(bad)
xor
call
sahf
jo
xchg
xlat
aam
mov
adc
(bad)
xlat
fwait
sar
stos
mov
outs
leave
jae
push
sbb
mov
scas
mov
jbe
mov
cmps
ins
add
aam
xor
xor
adc
and
jle
stos
and
arpl
aam
fimul
ins
dec
mov
adc
and
pop
call
inc
popa
movs
pop
push
or
push
xor
xchg
retf
mov
je
scas
cli
dec
arpl
gs
fs
cmps
(bad)
pusha
mov
shl
and
add
das
mov
(bad)
sti
mov
and
jo
mov
mov
xchg
push
repnz
sbb
add
adc
adc
or
seta
mov
xchg
jo
shl
xchg
ins
test
pop
lods
fimul
cs
mov
aam
push
enter
xchg
call
imul
cmps
mov
and
add
jge
(bad)
(bad)
sbb
jg
inc
popf
mov
push
cmp
sbb
hlt
pushw
ins
das
je
adc
icebp
aas
stos
sub
jle
mov
cmp
cmp
xchg
fiadd
retf
dec
out
or
inc
lock
jge
loop
jnp
sbb
test
mov
cdq
(bad)
movhps
xor
je
(bad)
adc
xchg
pop
test
cmps
sub
out
outs
sahf
lods
mov
mov
rcr
stos
pop
mov
test
mov
mov
xchg
mov
xchg
mov
push
push
mov
in
push
and
push
stos
scas
popa
jns
mov
lods
pusha
icebp
into
inc
jns
and
xchg
pop
pop
add
loopne
jnp
dec
pop
ja
mov
inc
fild
arpl
xchg
mov
popf
jae
sbb
pop
or
je
les
sbb
dec
lock
ja
push
cmp
movs
jo
sub
inc
pop
add
adc
mov
mov
in
lock
mov
fmul
add
sub
enter
(bad)
jne
lock
jmp
ds
mov
(bad)
sub
aaa
inc
add
mov
sar
std
lds
mov
cmp
clc
mov
add
cmp
xor
jecxz
xchg
sbb
lock
lock
pop
rcr
push
push
inc
es
xor
pop
mov
jae
scas
fiadd
mov
lahf
aam
stos
call
clc
jno
mov
push
aam
cmps
pop
mov
pop
sub
pop
jmp
loope
jno
popf
jl
add
cwde
fmul
je
pop
xchg
push
or
jle
inc
sub
xchg
push
jbe
or
cmp
sbb
inc
ret
aam
retf
lods
jae
dec
mov
in
xor
stos
(bad)
pop
jns
js
scas
fimul
shl
push
imul
popa
dec
aas
dec
in
scas
push
mov
push
pop
inc
inc
xor
retf
lods
xor
nop
mov
aam
icebp
aas
mov
jns
icebp
mov
stos
adc
jb
jns
in
xlat
cs
sbb
out
inc
and
jae
test
movs
punpckhdq
ret
pmulhuw
pop
test
cmp
outs
sahf
or
fimul
cmp
sbb
into
mov
rol
jne
mov
push
test
popa
pop
mov
hlt
cmps
dec
pop
std
stc
fiadd
scas
cmps
aad
or
pop
loopne
mov
xor
into
(bad)
mov
ds
out
pop
jmp
adc
cmp
or
or
cmps
sbb
loop
add
add
dec
stos
mov
xchg
pop
mov
outs
lock
(bad)
loopne
out
leave
mov
nop
aam
cwde
add
xchg
and
inc
lock
or
mov
fist
mov
ins
pop
mov
xor
test
mov
jo
cmp
push
or
xor
inc
pop
xchg
xchg
dec
sub
nop
cmp
(bad)
pop
pop
jecxz
push
jp
ds
test
call
push
fucomip
jmp
mov
test
shl
pop
adc
retf
pop
mov
push
jmp
(bad)
xor
inc
or
mov
scas
in
xor
mov
mov
lock
sub
adc
mov
sahf
jnp
mov
in
nop
push
test
std
or
and
movs
dec
sub
jmp
xor
out
pop
jo
fisubr
dec
call
mov
pop
cmp
fwait
jnp
inc
pop
cmp
add
jns
pop
sub
(bad)
xlat
cld
test
adc
inc
push
inc
push
adc
ror
stos
adc
pop
ins
adc
mov
ins
inc
lds
jge
pop
pop
and
test
xor
aam
dec
fcom
pusha
xchg
js
das
movs
out
ret
push
cmp
lea
ficom
adc
or
sti
ins
clc
daa
std
push
pop
and
test
je
push
inc
stc
aad
and
jp
cld
loop
(bad)
test
jns
rol
popf
pop
js
mov
int
xor
leave
rcr
mov
daa
jle
mov
lock
jp
cmps
sub
add
rcl
xchg
sbb
test
mov
lea
addr16
pop
ds
pop
stos
xlat
mov
imul
(bad)
mov
rcr
push
jno
mov
loope
shr
repz
push
test
and
rol
sbb
dec
sub
out
rol
icebp
mov
(bad)
frstor
mov
pusha
iret
inc
pop
mov
adc
clc
push
(bad)
out
mov
cmc
mov
jne
js
sub
rcl
sub
jb
xchg
mov
pusha
fiadd
rol
lock
mov
mov
mov
dec
or
dec
cmp
xor
outs
jb
and
ins
movs
jge
(bad)
mov
adc
mov
pop
imul
push
jle
dec
xchg
adc
iret
popa
daa
cmp
cmps
mov
stc
dec
push
jns
fild
nop
dec
push
jg
aad
out
mov
push
mov
aaa
or
scas
clc
xchg
gs
out
clc
fst
sahf
gs
inc
cmp
jle
push
pop
stos
or
shl
fst
dec
adc
mov
pop
mov
mov
popf
shl
fsubp
fsubr
pop
xchg
pop
inc
cmp
inc
and
jle
jecxz
adc
add
lds
daa
pop
mov
inc
sub
repz
cmps
sbb
clc
sbb
fld
mov
enter
adc
xchg
sbb
xor
data16
movs
retf
pusha
pop
or
loop
add
mov
pop
dec
(bad)
stos
pusha
scas
adc
sub
mov
add
mov
cmc
add
add
(bad)
jmp
repnz
or
fwait
into
shr
and
inc
movs
sub
pop
std
movs
scas
sub
jl
jo
outs
enter
aad
mov
lods
inc
lods
pop
mov
add
cmp
add
sub
jge
out
mov
xor
push
retf
jmp
loopne
and
xlat
ret
jge
out
ficom
outs
mov
xchg
into
jno
fisub
push
mov
adc
das
scas
test
sar
add
popf
out
retf
jnp
es
xor
mov
call
mov
stos
or
inc
syscall
and
shr
call
jae
stc
stc
xchg
not
cli
sbb
cmps
test
pop
jecxz
push
sahf
mov
mov
cmc
arpl
sbb
mov
or
xchg
push
scas
and
and
xchg
aam
inc
imul
fprem
imul
and
or
loopne
stos
stos
lods
xor
adc
cmp
or
cmp
and
imul
jl
fwait
mov
mov
test
mov
out
mov
push
inc
mov
cld
scas
neg
jb
push
inc
adc
jno
pop
cmp
fwait
jo
nop
ja
neg
add
jmp
adc
je
les
cmp
mov
cli
jl
cmp
add
aaa
shr
pop
ja
xor
je
vucomiss
je
rol
xor
loop
xor
cld
ret
fwait
jl
jbe
or
mov
mov
test
pop
and
rol
es
stc
inc
jmp
cdq
xor
ss
mov
and
pop
lds
scas
add
adc
and
xchg
sbb
fist
test
ss
leave
mov
popa
stc
pop
push
ja
jmp
call
loopne
push
sti
ret
lods
jmp
or
mov
sbb
shr
nop
jne
shr
or
call
ds
je
setg
les
(bad)
cmp
pop
cmp
push
jnp
mov
fld
js
xchg
cdq
retf
sti
test
loope
sti
out
sub
js
add
jle
cmp
and
dec
jnp
cli
or
ins
pop
hlt
(bad)
scas
jp
sbb
mov
fmul
call
mov
retf
xchg
mov
push
and
xor
fs
mov
jge
es
fsubrp
jne
int3
pop
cmp
inc
out
jmp
jb
cdq
(bad)
jmp
mov
lods
xchg
popf
adc
cmp
in
xchg
push
das
mov
jnp
iret
jg
(bad)
jns
out
xor
pop
sbb
or
jns
push
sbb
mov
bound
fdiv
scas
sbb
jnp
loopne
lea
dec
jge
jbe
dec
push
int3
ror
ds
or
pop
fwait
or
bound
xchg
ror
jg
in
adc
inc
movs
gs
cdq
jmp
or
je
repz
mov
rol
or
dec
rcr
mov
push
mov
mov
jno
push
push
mov
jns
and
xchg
lds
sbb
(bad)
das
push
(bad)
in
cmp
jbe
leave
xor
call
adc
pop
addr16
ins
(bad)
inc
adc
jecxz
jne
shl
push
cmc
iret
pop
cmp
in
fdiv
pop
fcmovb
push
cld
outs
ss
std
mov
fdivr
fisubr
push
(bad)
int3
(bad)
repz
retf
pop
stos
fwait
xchg
push
pop
mov
sti
cmc
fisttp
push
cld
out
cmp
fs
fstp
fimul
popa
cdq
jle
xlat
jl
and
inc
lods
clc
or
mov
les
icebp
xor
or
jns
or
lahf
jne
cvtps2pi
ds
dec
(bad)
imul
cmp
or
out
and
cmp
and
test
and
scas
push
dec
sbb
nop
pop
jl
mov
push
hlt
add
icebp
jnp
(bad)
fbstp
mov
(bad)
out
out
xor
add
stc
ds
pop
dec
mov
(bad)
loopne
int
scas
mov
hlt
mov
pop
mov
push
int3
cwde
mov
dec
cmp
ror
mov
dec
mov
into
inc
fbld
and
push
cmc
or
sbb
pop
mov
push
loope
mov
out
es
rcl
push
or
shl
es
jnp
rcr
xchg
cmp
inc
dec
jle
pop
ror
fcomi
mov
or
sbb
pop
lea
into
pop
mov
inc
mov
out
lock
sti
pop
dec
sbb
test
push
mov
jmp
mov
fistp
jnp
call
xchg
pop
jo
addr16
inc
mov
cmp
push
ror
dec
xor
cmp
aad
xchg
cmp
jge
mov
inc
inc
pop
or
mov
loope
lods
sbb
sub
push
pop
test
lock
add
mov
mov
test
inc
jne
push
jne
in
adc
mov
fild
mov
xor
jae
dec
aad
test
test
sti
pop
fwait
adc
into
pop
mov
add
mov
(bad)
xor
test
fs
test
xchg
gs
dec
loope
sbb
(bad)
mov
inc
pushf
and
or
fisubr
dec
jns
cmp
inc
fstp
cli
aaa
lea
mov
inc
dec
jle
lds
aad
movs
fidivr
ins
mov
out
sbb
mov
pop
push
mov
mov
rcl
mov
xor
neg
add
xchg
sar
sbb
sub
lea
aas
gs
rol
loopne
dec
ja
adc
stc
(bad)
call
dec
sti
adc
stos
and
ret
jbe
cmp
xor
(bad)
aam
mov
jb
es
aad
add
mov
iret
dec
sub
fs
repz
push
in
std
ret
mov
and
cwde
inc
test
outs
pop
dec
scas
push
jecxz
jns
or
pop
iret
xchg
shr
movs
lods
sbb
adc
jmp
lds
rcr
pop
les
and
dec
(bad)
lahf
mov
leave
stos
cmps
jg
jge
dec
push
or
xchg
push
mov
cmp
dec
shl
retf
out
or
in
fdiv
add
shl
sbb
push
xor
out
cwde
xor
sahf
xchg
cmp
cli
scas
or
jl
dec
pop
out
retf
mov
sbb
sub
jmp
and
mov
mov
inc
out
mov
xor
retf
jecxz
xor
mov
push
inc
sub
sub
shr
loop
ja
sub
and
fsubr
mov
jns
fxch
fs
pop
xchg
add
or
lods
cmc
inc
xchg
jg
mov
adc
fst
in
(bad)
sub
jbe
or
push
or
inc
cdq
push
rcr
cmp
sbb
mov
aad
test
adc
in
test
arpl
add
int3
push
mov
(bad)
pop
xor
cdq
xor
xchg
inc
or
adc
rcl
test
call
dec
in
dec
cmps
out
mov
sahf
sbb
dec
jbe
in
loope
push
add
xchg
sti
dec
jae
cli
ins
or
pushf
and
xor
xor
out
mov
or
repnz
xor
add
inc
popf
mov
in
ins
and
cwde
cwde
push
pop
push
in
pop
add
idiv
ins
mov
sub
push
inc
aam
pusha
jecxz
outs
int3
outs
push
sbb
mov
jmp
add
mov
mov
xchg
mov
sub
test
mov
into
add
shr
pop
adc
cmp
int
sbb
sti
pusha
inc
add
mov
mov
lds
sbb
xor
inc
xchg
jbe
jnp
push
push
mov
adc
xchg
daa
clc
xor
sbb
pusha
lea
cmp
mov
inc
push
xor
(bad)
dec
cmp
sub
sbb
cmps
ficomp
clc
push
pushf
mov
call
cs
and
in
loope
jg
or
or
sub
in
xlat
out
ror
xor
scas
jmp
lahf
or
xchg
and
jns
xor
cdq
in
inc
lods
push
rcr
fisubr
enter
inc
icebp
jle
scas
loope
jmp
and
sti
jne
mov
sub
or
cmp
scas
mov
ror
pop
jne
movs
arpl
pop
ret
(bad)
fistp
cwde
inc
or
cmp
push
or
int
rcr
mov
sub
push
cmc
mov
jbe
cmp
nop
add
fiadd
loop
add
scas
push
call
sub
adc
aaa
xchg
push
sti
sub
popa
xor
sbb
aaa
into
mov
js
mov
adc
cwde
je
loopne
pop
sub
and
push
les
push
inc
xchg
lods
repnz
mov
add
iret
(bad)
rcl
mov
dec
push
sbb
xor
js
dec
mov
jge
push
inc
popa
call
retf
pushf
inc
stc
cmps
xchg
jl
pop
ja
lock
and
dec
cs
cmp
inc
xchg
and
out
inc
cmp
cvtdq2ps
(bad)
or
jmp
or
or
sub
inc
daa
xchg
and
mov
and
push
sub
or
jle
cmp
ret
mov
mov
mov
mov
call
sub
cmps
pusha
push
(bad)
push
ja
sbb
inc
pop
mov
push
cmp
inc
or
(bad)
jmp
out
fisttp
outs
pop
mov
loope
out
ror
add
dec
cmp
in
mov
push
xchg
mov
aaa
out
pop
inc
sbb
sbb
inc
adc
push
loopne
loope
repnz
xor
out
ffreep
cmp
xchg
xchg
sbb
sub
xor
or
inc
adc
adc
mov
out
xchg
enter
cli
push
ret
cmp
lods
inc
int
xor
mov
xchg
inc
sbb
xchg
cmp
pop
retf
or
(bad)
pop
inc
icebp
dec
dec
pop
stc
ror
xor
enter
shl
xlat
mov
dec
sub
mov
int
inc
or
add
mov
push
jmp
xor
mov
das
push
adc
in
cmp
scas
retf
scas
jo
pop
jp
ja
loopne
mov
loope
mov
(bad)
push
push
add
mov
lds
xchg
jo
pop
rcr
push
add
in
popf
je
mov
mov
adc
(bad)
jae
sbb
lea
sub
dec
cdq
cli
pusha
inc
icebp
mov
into
xor
and
xor
cmp
dec
jp
ins
icebp
add
pop
pop
fimul
push
aaa
mov
or
add
pop
repz
call
(bad)
inc
in
popf
mov
inc
in
xor
aaa
lods
outs
mov
cdq
call
sub
dec
mov
mov
sub
mov
loopne
je
idiv
mov
icebp
sub
es
mov
and
jg
mov
jge
adc
movs
(bad)
xor
je
inc
les
ret
xchg
xor
cs
sub
in
popa
stos
test
jns
push
(bad)
cdq
sbb
add
sub
ret
ret
(bad)
test
stos
(bad)
mov
mov
push
sbb
cmp
xchg
lahf
jbe
mov
xor
fistp
mov
jb
into
cmc
inc
fadd
xchg
pop
ja
pop
sar
jb
dec
or
jb
shr
test
into
mov
das
add
ficomp
sub
(bad)
ds
out
sbb
mov
push
out
jl
(bad)
mov
ror
jbe
or
pop
jl
pop
les
in
mov
adc
mov
pop
xchg
aaa
ror
push
mov
push
cmps
out
xor
leave
mov
dec
lods
mov
(bad)
es
(bad)
push
adc
mov
push
mov
jecxz
fisttp
add
rcl
test
xchg
jle
mov
inc
xchg
mov
idiv
int
cmp
loopne
mov
lahf
adc
into
(bad)
mov
not
stc
in
cmps
push
mov
jmp
cbw
jmp
mov
pop
cmp
and
inc
les
les
(bad)
movs
sbb
cwde
or
mov
cld
imul
stc
mov
cmp
dec
mov
jle
pop
mov
xchg
pop
mov
int
lds
pop
adc
dec
pop
pop
add
lea
ins
cmc
sub
cmps
in
pop
and
repnz
loopne
jp
xchg
loopne
je
ins
jl
cmp
pop
adc
movs
dec
aas
xchg
call
(bad)
ret
pushf
mov
push
jge
mov
adc
sub
and
ret
jmp
dec
packuswb
pusha
mov
aas
shr
jno
push
lds
aas
cmp
daa
mov
mov
(bad)
in
in
pop
in
fimul
add
mov
and
imul
rol
adc
push
std
repz
mov
mov
dec
xchg
push
mov
inc
xor
retf
out
push
jge
in
add
test
ror
xchg
jmp
xor
add
and
ds
xchg
add
inc
and
out
push
push
sub
mov
shl
cmps
dec
sub
cmp
nop
add
mov
or
aas
ret
or
sub
mov
pop
jae
push
xchg
pop
adc
in
out
mov
in
js
jp
cmc
push
fnsave
and
xchg
shl
xor
out
push
inc
xchg
fld
xchg
or
(bad)
or
or
dec
inc
xor
push
fs
xchg
jmp
movs
imul
les
lods
xor
pop
mov
pop
es
call
pop
cmp
mov
mov
pop
xchg
mov
mov
in
scas
jbe
(bad)
push
or
loopne
push
sbb
out
and
nop
outs
out
popa
xchg
mov
fstp
fs
xor
xchg
or
push
movs
movs
xor
dec
dec
cmp
mov
je
add
inc
lea
or
mov
aad
inc
ins
and
pop
jae
scas
jle
popf
xchg
(bad)
cli
in
xchg
js
push
stos
(bad)
xchg
stos
pop
(bad)
loop
shr
fucomi
jns
and
enter
int3
pshufw
cmp
jno
les
xchg
inc
test
mov
and
sbb
adc
fiadd
ror
in
pop
add
pop
adc
sbb
jb
inc
lock
cmp
cmps
lea
call
les
cmc
and
pushw
loop
mov
pop
or
dec
xor
cs
jle
pop
fwait
sub
cmp
dec
arpl
rcl
jb
pop
pop
mov
aaa
outs
nop
(bad)
push
cli
cmp
xchg
mov
sub
mov
xchg
xor
(bad)
jle
rol
cwde
js
ins
pop
adc
inc
and
xchg
push
mov
addr16
out
je
lea
js
or
lods
cli
test
ins
jo
mov
inc
addr16
jle
push
xchg
stos
js
lods
cwde
jmp
aaa
pop
int3
mov
adc
pop
rcl
jne
sub
nop
enter
fldcw
scas
and
in
ret
add
adc
dec
jbe
xchg
test
(bad)
popa
dec
pop
mov
out
mov
sbb
je
adc
or
adc
inc
push
scas
mov
xchg
pop
in
loopne
fdivr
(bad)
out
loop
cmps
sbb
daa
push
jne
aad
mov
mov
sbb
pusha
xor
outs
and
sbb
xlat
inc
mov
jg
int
stos
push
movs
push
and
test
repnz
or
data16
(bad)
pop
outs
mov
aad
push
push
dec
in
pop
mov
jns
bound
lods
imul
jmp
dec
les
and
push
scas
xor
xchg
dec
jb
popf
pushf
sar
mov
in
jle
sahf
sbb
pop
(bad)
stos
jnp
out
inc
or
fwait
push
mov
adc
call
jge
inc
ret
mov
test
gs
or
inc
rol
jne
sub
pop
mov
aad
jno
cs
mov
jae
cmp
add
das
xchg
xchg
rol
inc
add
xchg
inc
sbb
xor
or
jmp
nop
pop
inc
pop
cmp
cmc
cmp
out
rol
enter
mov
dec
jmp
and
cmc
retf
test
call
push
jl
imul
les
imul
arpl
dec
mov
jmp
mov
ss
sahf
inc
cmp
retf
sti
or
(bad)
into
sbb
not
fimul
cmp
fs
seto
cmp
push
imul
dec
call
data16
dec
fsub
mov
mov
jge
addr16
enter
inc
adc
jo
mov
push
push
fwait
aas
jbe
cmp
adc
adc
shr
adc
jno
dec
dec
pusha
mov
pop
cld
inc
pop
cmc
test
(bad)
push
dec
and
xchg
adc
call
fsubrp
adc
dec
cwde
or
cmps
rcl
mov
mov
(bad)
retf
sub
popf
clc
inc
stc
retf
ret
mov
lea
popf
cmp
mov
mov
retf
idiv
cwde
stc
test
dec
cdq
mov
data16
inc
dec
cmp
xor
gs
aaa
mov
sub
mov
in
pusha
mov
xor
push
adc
fadd
dec
aas
jmp
xchg
inc
and
jmp
xchg
sub
inc
adc
jae
jne
stos
out
ror
push
adc
add
sbb
sub
std
sub
popa
iret
cwde
or
jmp
cmps
repz
int3
sub
test
jecxz
clc
lods
jp
es
out
test
jg
or
enter
dec
inc
sub
outs
inc
sub
jno
out
sub
add
xor
xor
ret
sub
add
jmp
mov
dec
jmp
or
push
dec
mov
cmc
sahf
adc
inc
sub
les
imul
sahf
sahf
sub
mov
mov
mov
or
mov
lock
adc
pop
pop
aaa
or
and
sbb
pop
das
fild
ret
(bad)
pop
es
and
jne
mov
pop
push
mov
pusha
mov
adc
icebp
test
into
rol
fs
pop
sti
shl
lods
mov
rol
int
lock
mov
daa
sub
aas
cmp
mov
add
mov
lods
dec
jge
arpl
inc
fiadd
test
test
mov
xchg
mov
or
xchg
sbb
adc
and
dec
sar
mov
sbb
pushf
or
fimul
inc
cmp
pop
add
xor
or
fcom
push
xchg
es
xchg
test
adc
dec
xchg
xor
dec
pop
shr
push
int3
aaa
mov
xchg
sub
jp
and
xlat
jnp
mov
mov
xchg
mov
xor
mov
push
outs
repnz
sub
inc
and
jg
mov
rcl
stc
or
movs
or
pusha
adc
fisttp
imul
pusha
xor
les
ss
push
inc
paddsw
or
mov
xchg
(bad)
push
push
sub
imul
xchg
jge
xchg
pop
aam
test
inc
push
arpl
sbb
adc
push
je
ds
pop
sbb
loop
pop
sar
sub
pop
dec
xchg
aam
ds
mov
fild
push
or
sahf
popf
jp
jmp
(bad)
(bad)
ins
xor
sbb
movs
adc
xchg
cwde
xchg
mov
test
push
pushf
stos
jmp
inc
push
cmp
push
cmps
cmp
sub
test
add
scas
dec
ds
mov
(bad)
jb
dec
lahf
mov
xchg
je
inc
test
pop
popf
xor
imul
mov
iret
mov
jae
mov
mov
(bad)
mov
xchg
bswap
jb
(bad)
call
sub
sub
leave
in
mul
adc
push
inc
idiv
push
adc
push
push
fwait
sub
dec
inc
push
mov
fiadd
aad
mov
mov
and
(bad)
call
in
sub
sbb
neg
pop
call
mov
pop
movs
inc
dec
add
push
cmps
ret
ins
xchg
cdq
fbstp
and
xchg
fdivr
adc
movs
iret
pop
mov
sub
cs
retf
in
sbb
sbb
add
xor
pop
js
xchg
sbb
int
not
jb
and
sub
ret
cmp
clc
jno
fimul
(bad)
mov
pop
xchg
xchg
into
fild
mov
idiv
pop
or
pop
popa
leave
pop
mov
ror
jmp
movs
xchg
ret
pop
jmp
add
scas
and
data16
mov
add
and
nop
sar
sub
xchg
push
xlat
pop
xchg
je
shl
or
jne
idiv
pop
rcl
movs
xchg
stos
push
cwde
xor
(bad)
fadd
push
into
aas
cli
mov
sub
push
jb
and
dec
clc
retf
(bad)
mov
frstor
adc
mov
iret
dec
push
pop
push
pop
xchg
mov
pop
aad
mov
mov
cmp
xchg
and
jecxz
jmp
dec
mov
add
(bad)
and
push
sub
call
pop
cmp
daa
pusha
les
mov
push
sbb
addr16
test
dec
and
push
xchg
lea
jmp
imul
mov
out
cmps
adc
jns
stos
fist
push
xor
dec
std
test
clc
lahf
aaa
imul
push
ret
fbld
inc
hlt
fldln2
cmc
push
xor
xor
lods
push
xchg
psubq
imul
cwde
push
stc
mov
inc
pop
out
jmp
adc
mov
outs
cdq
mov
jg
push
fwait
jmp
sub
sub
pop
mov
(bad)
mov
cmps
ja
mov
pop
xchg
push
add
scas
push
daa
sbb
clc
add
mov
retf
sub
lock
shl
jno
xchg
in
mov
out
xor
loope
outs
sub
cmp
push
xchg
add
jge
push
mov
mov
add
aaa
jmp
mov
addr16
vmovntps
pop
ins
popa
mov
addr16
pop
lods
js
test
sub
push
sub
shl
dec
arpl
repz
repz
lahf
stc
adc
shl
bound
scas
stos
std
rol
sbb
sbb
int3
inc
add
mov
repnz
or
ret
jne
out
cli
cdq
or
fimul
aad
adc
jmp
ins
scas
ds
sbb
dec
xchg
jno
repz
xchg
aam
cmp
jno
dec
mov
jne
les
fcom
inc
mov
shr
in
je
je
fmul
test
jbe
xor
in
pop
loop
add
ror
mov
and
cld
adc
push
fmulp
sbb
shr
adc
jecxz
cmps
inc
dec
mov
push
jp
gs
es
pop
retf
pop
cmp
pop
jae
jmp
mov
call
push
pop
add
push
and
push
dec
popa
cwde
test
test
test
mov
arpl
cdq
sub
outs
inc
not
dec
cmp
inc
add
mov
retf
and
dec
xor
pop
int
repnz
sub
ror
(bad)
call
pop
fist
or
(bad)
xchg
sub
fisttp
jecxz
push
inc
jo
call
xchg
add
imul
movs
dec
imul
mov
adc
push
rcr
and
pop
push
je
aam
adc
add
cmovge
rol
clc
push
inc
adc
xor
mov
call
enter
shl
not
or
into
fstp
les
jno
lahf
daa
aaa
xchg
cmps
jle
lea
mov
push
lahf
das
repz
pop
sar
mov
mov
xchg
repnz
repz
mov
lds
sub
arpl
or
ds
das
adc
pop
mov
xchg
test
sti
xor
test
imul
xchg
inc
lock
jbe
in
xor
(bad)
and
pop
(bad)
int3
sahf
mov
xchg
imul
sub
aas
cs
mov
stc
scas
es
fwait
(bad)
mov
jns
xor
xor
dec
xchg
pop
pop
mov
fld
aad
retf
xor
mov
pop
lock
xchg
and
out
cmp
ret
and
loopne
mul
sub
adc
sbb
call
mov
mov
and
add
pop
jb
dec
pushf
sub
push
adc
cld
scas
shl
sub
or
inc
mov
test
mov
mov
out
leave
repz
adc
add
ins
(bad)
pop
lds
cmc
ins
fsubr
(bad)
jb
in
xchg
cmps
out
or
lea
out
and
leave
or
adc
lock
aam
add
and
rcl
add
xchg
pop
push
xor
rol
stc
pop
int
lea
aaa
jne
push
sub
imul
push
sti
gs
call
test
lods
cmps
or
call
leave
cmc
jo
or
adc
push
pop
push
xchg
gs
xchg
xchg
lahf
fimul
rcr
stc
cmp
(bad)
fisubr
and
adc
add
aaa
sub
push
jge
das
xor
jmp
aas
push
loopne
push
pop
scas
sar
or
inc
mov
das
ja
scas
or
js
fcmovb
cmps
mov
or
sbb
repnz
mov
mov
mov
in
inc
or
sbb
xor
ret
adc
int3
in
fild
or
add
loop
fisub
test
sahf
mov
sub
xchg
sbb
mov
mov
jae
cwde
arpl
loope
push
loopne
pop
aad
iret
or
das
leave
push
cmps
mov
xchg
and
in
sbb
push
mov
shl
mov
xchg
mov
mov
jbe
fwait
(bad)
mov
mov
stos
shl
fcom
fist
mov
cmp
push
ins
xor
ss
rcr
dec
mov
dec
pop
rcl
mov
(bad)
cmp
dec
add
ins
and
adc
out
mov
(bad)
push
xor
jmp
stos
popf
(bad)
(bad)
in
popa
cmp
xchg
sub
dec
out
push
xchg
dec
sbb
cmps
dec
jecxz
mov
lds
xchg
push
and
out
fs
mov
cmp
or
pop
or
jae
mov
test
shr
mov
mov
mov
xchg
adc
or
call
dec
push
mov
out
mov
dec
into
jmp
cmp
xor
cdq
adc
push
mov
or
mov
mov
xor
out
imul
fistp
in
ds
js
mov
xchg
add
or
cmps
mov
xor
and
sahf
and
cmp
pushf
xor
(bad)
jmp
retf
lea
sbb
(bad)
mov
dec
popa
lods
mov
xor
scas
push
xor
pusha
inc
out
mov
pop
scas
xor
test
mov
das
mov
outs
je
movs
adc
neg
mov
mov
popf
and
mov
pop
in
mov
outs
push
inc
arpl
out
push
sub
add
pop
fwait
sbb
sub
inc
aam
out
fmul
rol
int
ja
rol
cmp
lods
imul
push
call
call
ret
retf
jbe
sbb
shr
mov
test
pop
ins
xchg
mov
lock
xor
mov
dec
pop
lods
dec
inc
scas
mov
adc
mov
fcomp
mov
push
jp
lods
xchg
pop
and
(bad)
mov
inc
nop
fnsave
(bad)
call
clc
inc
call
mov
inc
into
xor
ret
mov
scas
test
adc
imul
dec
push
jg
pop
xchg
xchg
fldenv
or
ret
pop
ds
popa
mov
push
sbb
push
leave
sbb
ret
sub
in
mov
sub
hlt
push
mov
xchg
pop
int
pusha
int
dec
mov
jmp
inc
sahf
jmp
movs
mov
add
in
sub
xor
mov
sbb
adc
retf
fidivr
movlps
fadd
mov
jg
jo
pop
fdivr
add
cs
ins
cmp
push
jle
mov
inc
jmp
push
sub
fbld
rcl
dec
fninit
cmps
mov
(bad)
pop
pop
add
xchg
sbb
out
fninit
inc
out
lahf
cmp
call
push
xchg
cli
ins
repz
lods
aas
retf
add
xchg
sbb
adc
test
fiadd
or
loope
jo
iret
dec
ins
jle
xchg
ins
shl
idiv
pushf
mov
cmps
scas
push
fs
mov
movs
push
mov
dec
je
and
sbb
out
es
and
inc
imul
adc
pop
or
aam
mov
shl
inc
(bad)
jp
pop
mov
jp
(bad)
cmp
in
adc
les
jp
cmps
mov
mov
int
dec
and
icebp
imul
sbb
cmps
(bad)
pop
push
retf
addr16
fimul
aaa
stc
pop
jne
or
add
shr
loopne
cwde
push
stc
call
pop
xlat
mov
aad
mov
adc
outs
push
mov
inc
enter
imul
fimul
es
fcomp
mov
add
(bad)
out
jg
ja
and
js
or
fistp
sub
mov
add
or
xor
xchg
shl
into
(bad)
std
ror
loop
mov
pop
cmps
in
jmp
cmp
movs
jp
mov
inc
xchg
add
enter
bound
pop
hlt
or
addr16
fiadd
into
jno
sub
pushf
(bad)
xchg
pop
cmp
push
mov
inc
add
stos
mov
test
xor
add
jo
int3
push
fld
lea
sub
xchg
repnz
mov
push
shr
pop
dec
loop
repnz
mov
cmp
sar
cli
push
xlat
mov
or
repnz
test
pushf
out
and
loop
sub
adc
mov
ds
sahf
jns
and
dec
out
or
mov
daa
mov
and
scas
test
mov
pop
or
(bad)
test
and
cwde
mov
or
ss
adc
push
mov
ja
xchg
xchg
xchg
hlt
repz
aaa
jns
daa
cmp
jae
int
shr
mov
movs
push
cmps
and
adc
mov
jb
add
and
movaps
inc
pop
out
mov
sbb
retf
movs
fstp
jle
lahf
xor
cmc
pop
xor
dec
cmps
int3
gs
jge
sahf
mov
push
cmp
inc
mul
cmp
jae
jecxz
sbb
cmp
push
pop
mov
stos
sbb
aam
inc
cmp
xchg
jae
in
adc
mov
bound
into
mov
and
rcr
jb
and
push
mov
mov
(bad)
pop
leave
cmp
bnd
enter
retf
pop
dec
fidiv
push
pop
data16
xchg
(bad)
pop
pusha
pusha
aaa
pop
(bad)
sub
dec
inc
and
inc
mov
sti
sbb
mul
fiadd
call
push
xchg
loopne
cld
mov
mov
adc
mov
outs
stos
loop
int3
xor
mov
or
outs
pop
int3
and
cdq
and
cld
jo
pop
sbb
or
mov
mov
jmp
pop
xchg
pop
inc
pop
mov
pop
add
jne
ss
outs
mov
dec
(bad)
frstor
jmp
dec
pop
int3
mov
test
adc
leave
daa
dec
out
cmc
push
dec
mov
dec
(bad)
rcl
sub
movs
pop
sbb
repnz
push
loope
pop
ficom
pusha
lock
rcr
mov
sbb
dec
mov
push
adc
aad
pushf
pop
adc
fs
mov
nop
mov
rol
out
imul
mov
sbb
xchg
add
out
jno
mov
sbb
aaa
pop
aad
outs
fadd
out
icebp
jnp
int3
pop
dec
lds
(bad)
adc
je
and
jmp
js
fcom
or
outs
and
cmp
dec
scas
xchg
pusha
ret
sbb
out
in
sub
fisttp
aas
jo
dec
cli
pop
into
bound
xor
adc
(bad)
xor
dec
push
pop
mov
aas
sahf
add
cwde
rol
shl
pushf
loopne
inc
daa
imul
and
ret
dec
mov
fldcw
cmp
out
sbb
addr16
sbb
shl
xchg
lods
ins
xchg
pop
add
imul
jb
idiv
lods
mov
lahf
out
les
gs
adc
rcl
jl
xchg
out
aas
or
jmp
sub
loopne
fbld
ja
sub
mov
pop
lds
add
aaa
sub
out
push
pop
hlt
in
push
(bad)
dec
jno
imul
scas
int
mov
dec
cmp
retf
in
dec
out
xchg
(bad)
fnstsw
or
movs
jg
adc
imul
pop
mov
jmp
xor
adc
xor
xchg
dec
rol
nop
mov
sbb
push
mov
call
out
dec
lock
mul
dec
(bad)
lea
scas
(bad)
lods
shl
and
scas
ins
es
dec
mov
mov
sub
mov
sub
ret
call
mov
hlt
int
sbb
dec
jb
and
out
daa
xor
or
fnstenv
iret
mov
push
sahf
aam
jecxz
adc
sbb
push
in
xchg
neg
lods
sbb
mov
jmp
pop
sbb
cwde
add
fdiv
outs
xchg
adc
mov
lods
in
leave
sar
cli
mov
ds
cmp
stc
xor
adc
cwde
lods
mov
popf
xchg
mov
dec
adc
cld
rol
loopne
or
or
pop
jnp
lods
(bad)
in
push
es
pop
mov
xor
xchg
cwde
stos
sbb
sar
cs
aas
and
dec
jl
cli
(bad)
sub
push
aam
mov
pop
ja
mov
rcr
xchg
out
cmp
addr16
add
xchg
(bad)
cmp
inc
scas
lods
call
jecxz
cmps
cmps
sahf
sub
lea
les
dec
outs
xchg
mov
pop
sbb
cdq
push
mov
or
push
retf
cdq
xor
retf
fsub
popa
jg
nop
mov
or
mov
mov
lods
ret
sbb
mov
push
mov
jno
push
cmc
iret
js
pop
sahf
push
stc
mov
cdq
dec
mov
or
add
push
push
pop
addr16
mov
cmps
repz
out
push
fs
xchg
cmc
(bad)
push
(bad)
outs
test
clc
inc
pop
stos
pusha
fisttp
adc
pushf
scas
inc
ret
or
xor
retf
mov
adc
push
stc
jo
int3
stos
pop
loope
cdq
add
dec
(bad)
stos
rcr
fadd
mov
mov
mov
cmp
mov
repz
xchg
sub
jge
cmc
or
mov
pop
pop
mov
cmp
mov
out
dec
ins
inc
pop
adc
cld
cmp
int3
dec
adc
lea
sbb
neg
pop
xor
inc
or
sbb
xchg
pop
dec
sub
int
daa
sub
xchg
std
cmp
lahf
leave
ins
dec
shr
sub
out
mov
adc
jg
mov
adc
mov
cs
xchg
pop
enter
mov
ret
mov
inc
dec
das
xor
jmp
sub
xor
mov
inc
fs
ins
dec
sti
push
jns
arpl
push
lock
adc
jo
jle
popa
dec
adc
dec
jo
sub
sbb
sar
xchg
popf
cdq
inc
jae
xor
xchg
mov
sar
push
cmp
pop
je
mov
dec
sahf
fnstsw
jg
in
mov
adc
pop
mov
test
xor
fcom
je
into
jmp
inc
sub
xor
stos
ja
jg
mov
pop
ficom
imul
mov
sbb
pop
sbb
data16
out
and
movs
jp
pop
push
fwait
outs
sbb
sbb
imul
pop
mov
jg
loopne
ins
mov
in
daa
xchg
pop
in
(bad)
rol
fistp
or
fdivr
outs
ss
cmovp
pop
cmp
mov
clc
push
mov
les
mov
fwait
mov
lds
ja
adc
pushf
inc
mov
ja
pop
push
mov
xchg
dec
imul
outs
fsubr
mov
add
into
jg
sbb
cmp
loop
(bad)
jmp
inc
xlat
fucomip
lea
in
(bad)
mov
jne
mov
pop
cmps
mov
mov
fist
les
jbe
cmp
or
cmp
xor
pop
loop
sub
sub
add
mov
sbb
jp
gs
outs
pop
add
or
push
(bad)
cld
xchg
les
push
add
jbe
pop
dec
pushf
jo
jns
jg
xor
test
adc
push
popa
ds
repz
or
push
mov
lods
into
jb
mov
mov
retf
hlt
pop
adc
lods
xchg
sub
pusha
(bad)
inc
test
mov
cmps
mov
rcr
retf
jnp
push
dec
ret
jp
mov
cmp
inc
xchg
jecxz
xchg
stos
push
ss
inc
imul
lods
out
mov
add
int
push
mov
xchg
(bad)
add
sub
jg
ret
mov
lahf
inc
shl
mov
cdq
inc
jno
js
mov
sar
add
daa
popf
iret
fld
push
scas
movs
and
xor
icebp
or
xchg
add
push
lock
jge
test
std
cld
aas
icebp
pop
sti
in
add
inc
sbb
bound
add
jecxz
jne
mov
push
aas
(bad)
mov
cli
xor
rcr
les
stos
xor
inc
xchg
js
xlat
dec
popf
inc
mov
or
lock
sub
fwait
clc
dec
xchg
or
cmp
push
rcr
push
movs
rol
adc
sbb
mov
dec
inc
inc
cmp
(bad)
(bad)
fwait
in
push
sub
xor
imul
mov
fdiv
xor
jecxz
cmc
ss
sbb
lods
push
sbb
sbb
lock
dec
pop
mov
dec
fwait
(bad)
jns
ror
leave
jns
pop
jno
outs
jbe
sbb
loop
push
cmp
movs
xchg
inc
or
xor
test
and
js
adc
dec
test
cmp
push
retf
sbb
mov
loopne
mov
mov
popa
arpl
pop
jg
and
ins
movs
dec
mov
(bad)
in
jp
ret
xor
add
stos
les
fidiv
rcl
sub
inc
pop
jbe
jne
add
pop
stc
pusha
mov
mov
out
mov
in
gs
fucomip
cli
rep
xor
outs
or
and
lea
cwde
stos
rcl
ds
mov
push
loop
int3
or
jbe
loop
cmp
cmp
mov
add
sbb
cld
sub
f2xm1
test
push
stos
enter
xchg
push
inc
inc
popf
add
inc
jl
inc
pusha
mov
fiadd
test
test
sub
and
inc
xchg
pop
lds
leave
popa
cld
pop
stc
cdq
es
or
std
xchg
jecxz
fdivr
and
jle
les
mov
icebp
cmp
pop
inc
xchg
(bad)
cmp
pop
ror
add
jg
lds
dec
pushf
fucomi
(bad)
gs
push
jbe
pop
fwait
popf
inc
push
retf
mov
jmp
mov
aad
fild
xor
shr
test
xor
daa
inc
lock
xor
inc
cdq
test
adc
std
add
mov
call
icebp
call
bound
add
enter
fcomp
xchg
dec
cmp
xlat
add
jb
aam
xlat
and
xor
or
shl
out
dec
xchg
cmc
cmp
fist
enter
push
je
std
sbb
cmps
aas
mov
xor
mov
mov
and
dec
mov
xchg
jle
outs
popa
sti
test
mov
and
ror
sub
cmp
(bad)
pop
mov
pop
jae
loopne
or
les
pop
cmps
xlat
mov
and
std
femms
xlat
or
add
add
mov
dec
fs
or
pusha
cli
adc
sar
test
xor
xchg
sbb
(bad)
movs
into
fisttp
push
adc
ret
stc
les
pop
jb
pop
mov
mov
out
je
ja
loope
push
ss
sub
xor
loope
xlat
fistp
mov
movs
sbb
mov
test
call
inc
repnz
(bad)
xor
fdiv
jbe
aas
sbb
sub
cs
popa
or
sbb
and
shl
adc
cmp
in
fimul
fdiv
push
adc
mov
outs
or
pop
jl
mov
loop
jbe
jle
pop
fiadd
xchg
out
mov
idiv
dec
out
jns
or
mov
es
leave
std
push
test
pop
repnz
mov
js
retf
jge
or
pop
fdivrp
mov
and
jle
cld
clc
icebp
push
(bad)
int
arpl
and
pop
pop
dec
push
cwde
pusha
or
sti
mov
jbe
lock
inc
and
mov
xchg
push
xor
mov
and
outs
dec
mov
out
sti
and
lods
or
aaa
dec
adc
int3
sbb
sahf
push
xor
(bad)
mov
mov
hlt
sub
jne
jl
and
push
mov
jp
add
shl
push
or
and
lock
jle
dec
pop
push
test
bound
js
retf
pushf
out
or
test
jns
call
movs
jmp
push
and
scas
xchg
mov
fdiv
pushf
inc
test
loop
pop
and
mov
push
int3
scas
xchg
pop
inc
dec
cmp
cld
fsubr
imul
jmp
div
test
cmp
push
pusha
pop
jge
push
xlat
jbe
or
sub
retw
push
in
sub
loopne
jno
les
mov
mov
sbb
xchg
jns
xchg
mov
cmps
cmp
mov
in
lea
mov
inc
gs
cdq
(bad)
and
mov
outs
cmps
nop
sub
inc
fidiv
mov
imul
mov
imul
xor
push
out
loopne
aad
mov
cmp
push
xor
dec
mov
inc
cmp
pop
loope
nop
xor
iret
inc
mov
scas
ins
in
cmps
in
je
test
ins
cmp
jp
pop
inc
(bad)
lods
dec
sub
cli
icebp
jle
mov
(bad)
fiadd
test
push
mov
jns
test
sbb
jg
push
lds
les
int3
test
dec
test
inc
dec
fnstenv
jmp
ins
into
stc
inc
(bad)
or
and
jl
xchg
rol
cmp
adc
sub
fcmovb
enter
or
mov
inc
xchg
push
rcl
jecxz
xor
fbstp
inc
xor
and
cmp
push
sbb
mov
add
std
cmp
(bad)
call
ins
arpl
std
and
popf
pop
and
call
test
movs
outs
lea
ins
jg
inc
call
in
loop
in
cmp
jns
mov
shl
not
enter
stc
ret
cmp
mov
in
pusha
adc
aaa
and
cs
sub
xchg
movs
daa
iret
jno
dec
cli
jns
fadd
sbb
int3
mov
mov
aaa
jmp
mov
ss
dec
jne
inc
cld
sub
jle
es
out
xlat
adc
jg
and
xor
and
sar
dec
stos
(bad)
int3
hlt
or
popa
xchg
mov
push
mov
mov
mov
cmps
lock
arpl
cmp
shl
sub
push
jne
inc
or
xchg
movs
xor
test
in
mov
cwde
fiadd
repnz
or
sbb
fdivr
jmp
jmp
pusha
xchg
ret
outs
and
cmp
push
stos
dec
fcom
out
lods
fwait
ins
push
dec
or
inc
stos
enter
pop
aaa
ret
loopne
leave
fsub
mov
and
repnz
jg
and
test
xor
cs
in
test
in
outs
cmp
mov
adc
shl
jle
push
push
ret
mov
retf
mov
jmp
idiv
xchg
sahf
les
addr16
sar
cmp
in
aaa
add
inc
push
push
daa
in
sub
into
icebp
es
mov
push
push
lock
rcr
xchg
mov
out
push
in
inc
sub
mov
xchg
mov
in
adc
scas
or
jne
arpl
xor
cld
adc
sar
or
jp
or
rol
(bad)
pop
or
int
std
call
sub
xor
jle
les
je
ss
lea
into
(bad)
xor
mov
sbb
fbld
push
mov
xchg
loop
push
or
ret
jge
push
jl
inc
fabs
stc
and
shl
push
or
jle
or
rcl
in
push
ror
rol
call
test
push
sbb
mov
jne
jno
fcom
and
and
push
and
ret
jp
stc
sahf
jg
and
sbb
fwait
mov
imul
test
std
sub
jle
pusha
cs
adc
cmp
mov
cli
mov
and
fwait
(bad)
xchg
fwait
mov
mov
cmp
inc
dec
rol
mov
adc
lods
icebp
mov
lods
and
setno
add
test
rol
pop
jae
ret
mov
js
hlt
sub
rcr
test
fld
xor
mov
test
add
and
sar
(bad)
nop
rol
inc
not
(bad)
jg
movs
mov
les
rcl
cmp
scas
pop
repnz
sub
lods
pushf
arpl
shl
bound
nop
test
mov
ffree
scas
stos
pop
sar
mov
mov
in
lods
rcl
cmp
retf
in
sbb
enter
out
in
loope
cmp
les
repnz
nop
and
mov
adc
retf
int3
and
(bad)
jecxz
pop
jle
and
loope
mov
out
in
fcmovnu
inc
ret
pop
shl
sub
lods
mov
mov
(bad)
xor
out
inc
aam
push
mov
leave
outs
xchg
aam
(bad)
pop
fwait
xchg
scas
enter
fist
xchg
in
and
in
jmp
mov
cld
xor
sahf
in
fstp
xor
fidiv
and
jae
xchg
dec
cdq
or
lods
adc
dec
or
stos
pop
repz
movs
sbb
jge
ds
jmp
and
loope
out
push
push
scas
xor
rcr
jmp
stc
mov
out
and
jge
mul
daa
and
fst
dec
aam
push
fwait
jle
sbb
pop
or
sahf
jne
pop
mov
xor
cmc
repnz
jns
cmp
mov
inc
dec
ins
enter
jp
push
push
adc
mov
rcl
out
mov
in
xchg
popa
jg
js
inc
pop
inc
adc
xchg
ss
cmp
es
push
inc
out
sbb
mov
cwde
push
pop
(bad)
jmp
fmul
or
ret
push
push
adc
ja
push
call
lea
push
pop
cmps
arpl
push
push
rcr
sahf
shr
outs
sub
and
adc
sti
inc
cmp
adc
test
hlt
pop
or
mov
cmp
dec
scas
adc
call
dec
sub
das
aas
stos
das
mov
inc
cmp
dec
out
(bad)
fcomp
or
mov
hlt
(bad)
lahf
push
mov
je
sbb
sbb
fmul
jb
cmp
xor
add
das
xor
fstp
in
pop
and
fimul
imul
shl
cmp
inc
xchg
push
std
cmp
ficomp
mov
add
lea
bnd
int3
jle
arpl
std
pop
adc
xchg
mov
or
cmp
cwde
sub
popa
xchg
dec
xor
jbe
jmp
adc
scas
mov
loopne
jge
or
outs
fmul
add
es
call
cmps
mov
sbb
fstp
int3
sub
xchg
mov
sbb
mov
xchg
div
fisttp
sub
pop
fimul
push
push
adc
js
mov
cmp
pop
sub
leave
loopne
outs
inc
jg
je
jg
repz
adc
inc
cmp
int
xor
das
add
sbb
mov
pop
dec
and
pop
or
cmp
jnp
cmp
loopne
mov
outs
jb
cli
loop
popa
icebp
or
cmp
lods
fbstp
and
bswap
out
aad
add
cli
stos
int
xor
adc
mov
push
pop
mov
push
ficom
add
dec
xor
mov
aas
les
inc
inc
popa
mov
inc
jb
cmps
mov
cmp
sti
je
aad
pop
dec
push
jns
fdiv
ins
xchg
jb
push
push
cmc
dec
icebp
rcr
cmp
mov
xor
stos
cmps
mov
loopne
jecxz
cli
fcomp
lahf
es
xor
pop
mov
leave
sub
pushf
(bad)
retf
outs
test
retf
add
not
test
rcr
push
cmp
and
jl
mov
iret
jle
jnp
mov
loopne
test
dec
or
gs
dec
adc
das
lahf
xlat
fidiv
scas
out
cmp
call
sbb
mov
pushf
outs
test
js
(bad)
pop
iret
movs
or
inc
int3
fistp
out
xor
je
sbb
dec
(bad)
sub
loopne
out
ret
test
mov
mov
ret
dec
stos
mov
iret
xor
pop
mov
call
sub
mov
xchg
imul
jno
and
mov
adc
adc
mov
imul
and
ja
cwde
pop
xchg
pop
xor
lahf
push
cdq
mov
(bad)
and
xor
inc
mov
sar
sub
nop
push
pop
mov
fs
jge
ficom
and
push
jle
scas
hlt
mov
cli
mov
cmps
push
in
add
xchg
stos
retf
loope
sub
mov
xchg
hlt
mov
scas
mov
adc
mov
cs
add
fbld
mov
imul
enter
xor
dec
pop
sub
(bad)
xor
mov
push
fwait
cli
les
jle
fwait
add
pop
in
imul
call
mov
cli
in
mov
fs
(bad)
leave
jne
stc
jle
inc
or
es
dec
add
mov
aam
or
sti
mov
ja
cli
xlat
cdq
mov
(bad)
repz
or
jbe
pop
repnz
addr16
xor
test
repnz
ja
pop
sub
sahf
cmp
mov
inc
dec
xchg
sti
sti
stc
lds
xchg
jne
fadd
shl
xor
inc
inc
sub
sub
cmp
aam
and
cmps
popa
mov
and
arpl
and
cs
push
jnp
mov
jp
arpl
and
gs
gs
sbb
shl
xchg
mov
daa
pop
and
aam
mov
xchg
repz
mov
outs
clc
pop
ss
popa
mov
in
jmp
jle
mov
bound
(bad)
jo
fstp
fld
mov
ins
sub
mov
xchg
in
clc
lahf
vpminsw
jae
add
mov
je
push
sahf
aas
mov
push
(bad)
mov
std
outs
fmul
scas
cmp
jns
push
loopne
aaa
ja
daa
std
xor
(bad)
adc
popa
adc
and
sti
es
iret
pop
fidiv
adc
add
pushf
div
jl
sub
ds
dec
sub
test
fnstenv
out
icebp
dec
mov
pop
lea
add
(bad)
cmc
inc
cwde
jle
repnz
das
push
push
aas
std
or
mov
mov
je
popa
or
add
xor
sti
push
outs
jl
bound
push
jl
loopne
je
pop
or
aad
adc
int3
xchg
or
scas
mov
xchg
push
dec
jno
pop
movs
pop
jae
adc
sub
mov
cdq
stc
xor
cmc
pop
out
mov
test
pusha
jmp
in
jecxz
mov
pop
(bad)
mov
push
add
sbb
fucomi
mov
mov
movs
mov
mov
shl
jae
in
cmp
stc
retf
sti
xor
mov
pop
sub
in
fwait
sub
mov
jo
mov
push
jmp
cmp
lds
rcr
data16
and
and
jae
shl
mov
fldenv
adc
xchg
nop
pop
shl
adc
outs
(bad)
in
or
push
fadd
push
into
ret
test
inc
fisub
xor
jmp
popa
aas
inc
xchg
dec
jnp
mov
sub
add
movs
mov
jg
add
into
cmp
mov
test
push
push
add
inc
xchg
xchg
pushf
adc
jo
jbe
jle
(bad)
cs
push
or
sub
mov
mov
inc
dec
inc
dec
popf
cmps
dec
mov
retf
push
sub
dec
cmc
dec
and
xor
jmp
push
sahf
fidivr
shl
sub
in
and
dec
mov
mov
test
push
adc
mov
fs
adc
lds
inc
retf
mov
add
imul
jo
sub
adc
jg
xor
push
ret
cmps
jo
cmp
jge
inc
lods
enter
cmp
and
cdq
mov
adc
mov
sbb
shl
or
push
lock
jmp
ss
fisubr
call
out
fisubr
(bad)
sbb
cdq
dec
sub
jns
and
sub
movs
sbb
enter
lds
push
inc
pop
sbb
lods
lock
leave
xchg
jae
inc
fidiv
pop
loop
jo
bound
ss
jbe
jl
add
push
outs
and
mov
cmc
add
dec
mov
jae
add
mov
push
and
(bad)
add
adc
jne
and
(bad)
retf
mov
mov
push
test
mov
mov
leave
call
pushf
jo
cmp
mov
inc
outs
dec
mov
mov
mov
jns
int
or
and
and
cld
bound
jg
in
loop
repz
jmp
call
inc
aad
call
jle
cmp
push
mov
pusha
pop
pop
pop
clc
cdq
jnp
adc
mov
pop
pop
adc
adc
xchg
and
fwait
jo
imul
mov
push
cs
call
mov
mov
imul
mov
js
fwait
inc
adc
dec
ret
jmp
mov
dec
mov
xor
inc
das
inc
xchg
pop
lods
inc
in
jmp
xor
add
das
pusha
pusha
fs
dec
stos
repnz
test
les
mov
push
fidivr
scas
addr16
pop
sub
inc
xor
sbb
out
and
jmp
(bad)
fucomp
mov
pop
retf
add
adc
jmp
cwde
dec
pop
in
mov
or
aad
mov
jl
ds
les
dec
mov
pop
mov
das
(bad)
adc
mov
test
jg
mov
add
mov
or
loopne
cmp
(bad)
adc
and
pop
enter
sbb
mov
push
add
sbb
mov
inc
xlat
and
aad
jb
cs
sbb
inc
or
jns
shl
jno
push
jnp
mov
rcl
mov
jecxz
(bad)
lea
push
imul
cwde
enter
mov
adc
(bad)
es
clc
jne
mov
push
movs
and
ds
lods
sub
push
xchg
mov
pop
lahf
iret
sbb
push
pop
retf
inc
in
push
sub
jae
mov
push
stc
and
xor
into
in
fstp
xor
hlt
or
cli
(bad)
loope
ja
jp
xchg
xor
loope
inc
sbb
and
aaa
add
mov
jns
das
mov
jle
pop
adc
icebp
(bad)
out
cmp
jp
psrld
and
sub
jl
or
fld
iret
add
bound
cmps
cwde
outs
and
fnsave
out
into
daa
mov
jmp
push
lods
and
add
lds
addr16
lods
adc
mov
fdiv
mov
ficom
in
mov
fistp
jl
pop
sbb
ins
sub
int3
jmp
hlt
clc
push
jl
push
cmps
lock
sbb
test
cli
hlt
xlat
pusha
jne
js
fadd
(bad)
dec
and
inc
ret
xchg
jmp
push
xchg
push
push
add
dec
(bad)
ficom
aaa
cdq
add
enter
jbe
adc
(bad)
mov
jmp
sahf
mov
xor
paddsb
and
mov
push
test
push
pushf
mov
push
inc
mov
mov
mov
mov
bound
mov
push
sbb
out
mov
jmp
ror
es
add
(bad)
in
xor
push
xchg
mov
ret
inc
cmp
jg
pop
hlt
cmp
adc
rcr
fwait
pop
loop
and
mov
pop
cdq
loope
dec
sub
cdq
fdivr
rcl
cmp
es
and
cmp
sbb
inc
xchg
push
adc
and
ins
mov
mov
scas
(bad)
sti
pop
sbb
mov
ss
adc
sbb
inc
jl
mov
cmc
cmps
xor
jb
rcl
neg
and
adc
jle
xchg
out
jmp
shl
stc
aas
push
fist
pop
xchg
mov
jp
adc
(bad)
pop
and
push
nop
in
sbb
jg
push
iret
pop
nop
dec
push
lods
sti
out
outs
pop
outs
sub
mov
jns
push
push
jmp
push
mov
jne
or
out
and
sbb
out
or
ins
adc
retf
enterw
cmp
lods
mov
or
cmps
push
or
mov
rcl
iret
pop
sbb
cmc
push
lds
xlat
sub
sbb
or
inc
sbb
sahf
adc
lods
xchg
mov
scas
test
or
mov
push
cmp
(bad)
shr
test
stos
and
jnp
xchg
sub
xchg
push
cmp
mov
sbb
int
fmul
pop
ja
inc
outs
push
cwde
jo
push
int
stos
mov
push
dec
xor
jbe
mov
lock
sbb
adc
scas
fldcw
inc
and
stc
cmps
cli
dec
fcomp
inc
xchg
daa
pop
enter
iret
add
cmp
or
test
(bad)
pop
or
fidivr
mov
sbb
push
sbb
cmp
mov
mov
xchg
cdq
clc
mov
cs
scas
push
pop
scas
push
pop
jecxz
test
and
add
mov
js
adc
jae
scas
mov
shl
pushf
push
sbb
sbb
nop
cs
push
stos
bound
jge
adc
cmp
sbb
adc
test
mov
push
or
jo
shr
sub
test
mov
(bad)
push
out
dec
mov
sub
ins
sbb
dec
mov
mov
ret
xor
ja
cmp
jmp
jnp
mov
ins
(bad)
xor
mov
fisttp
add
jne
or
xor
and
(bad)
call
sbb
dec
jmp
xlat
leave
xor
and
xchg
out
dec
out
imul
inc
mov
xor
cmp
xchg
lds
dec
xchg
mov
mov
jl
lahf
sbb
inc
out
les
xchg
push
mov
inc
push
push
or
jl
or
clc
pop
ret
add
cmp
cld
out
sbb
(bad)
jnp
movs
cmovle
ins
mov
cdq
test
xchg
inc
out
add
cmps
and
loopne
jb
dec
dec
pusha
in
jb
jb
sbb
sahf
dec
cld
jle
int3
lods
imul
mov
jns
scas
(bad)
adc
jmp
cmp
cmp
cmp
leave
push
inc
mov
cmps
pop
mov
arpl
je
jno
jo
sti
std
ret
pop
xchg
dec
js
jnp
sub
sub
(bad)
dec
inc
push
xor
pop
stos
pop
rol
in
out
pop
ins
mov
sbb
ret
scas
sub
push
xor
jae
jge
mov
cld
dec
push
mov
pop
scas
retf
xchg
xchg
xchg
not
lods
jns
comiss
xchg
leave
pop
psrld
jb
fbld
adc
adc
fcomp
jae
jnp
inc
ret
jbe
scas
inc
mov
mov
push
scas
das
cmp
retf
mov
sub
ins
mov
cmp
dec
arpl
dec
cmp
or
mov
(bad)
stos
mov
int
std
mov
or
ret
js
adc
jns
cmp
cdq
add
jo
and
ins
out
adc
rcr
dec
fisubr
popa
das
ret
add
mov
jae
jmp
sahf
mov
jmp
add
jl
inc
mov
xchg
in
sahf
inc
jmp
pop
mov
out
stos
stos
es
jns
jmp
test
stc
dec
fst
pop
pop
ss
push
xchg
push
scas
xchg
mov
imul
loop
jns
adc
xor
gs
ret
xchg
push
mov
xor
ins
fwait
(bad)
mov
in
ror
mov
cmp
test
ret
and
and
push
sub
(bad)
mov
(bad)
jae
(bad)
add
dec
pop
icebp
call
loope
push
(bad)
popa
mov
das
sbb
sbb
dec
in
icebp
cmps
push
imul
cwde
ja
inc
data16
movs
stc
cmps
xchg
sbb
repnz
ins
retf
pushf
mov
add
int
push
add
add
scas
test
or
leave
jmp
fist
je
mov
xor
or
jb
cmp
imul
and
mov
nop
out
inc
movs
lea
ror
fistp
xchg
mov
mov
scas
cli
xor
nop
hlt
xchg
test
sbb
aad
cmp
mov
pop
imul
and
push
jb
xor
cmp
in
sbb
mov
cmp
push
pop
aam
push
mov
out
push
pop
popa
sub
retf
stc
cmc
adc
push
sub
cmp
fild
mov
lea
xchg
(bad)
outs
add
lahf
mov
xlat
adc
das
adc
iret
xor
inc
call
cmp
loope
out
mov
add
mov
cmp
and
sbb
(bad)
cmps
and
ds
cmps
ret
xchg
mov
cld
dec
jecxz
movs
mov
mov
and
mov
push
mov
lss
mov
sbb
dec
hlt
ret
cs
data16
xlat
pop
repz
aas
js
pop
xchg
sbb
ins
mov
dec
push
mov
push
and
mov
mov
dec
das
push
adc
icebp
or
mov
add
xchg
pop
daa
loope
xor
daa
sbb
cmp
xor
mov
dec
fisubr
push
xor
rcr
adc
jo
push
out
loop
int
lods
mov
sbb
jmp
mov
jns
jl
pop
fwait
mov
add
mov
test
ds
push
push
jp
std
or
rcr
and
(bad)
scas
and
mov
cmp
sub
out
jns
js
pop
int3
pop
lock
and
mov
inc
fisub
(bad)
cmp
add
inc
aas
cmc
comiss
fimul
rcr
mov
inc
cmp
sub
and
mov
adc
mov
pop
mov
sbb
add
mov
je
push
xor
and
fs
je
adc
mov
dec
xchg
cmp
out
mov
adc
fsub
mov
movs
sbb
inc
std
sub
icebp
test
adc
mov
or
adc
cs
loope
outs
sub
or
adc
retf
int3
xchg
inc
jp
xor
test
push
mov
into
imul
push
addr16
xchg
mov
ret
lods
or
scas
lds
xor
jbe
pop
outs
xor
inc
sub
(bad)
repnz
or
call
sub
and
scas
popf
loopne
js
(bad)
js
test
cmp
jae
pop
js
scas
out
jno
aad
pop
xchg
cli
push
lds
xor
mov
push
and
mov
int3
jmp
aam
bound
ins
addr16
inc
sbb
jmp
mov
mov
push
mov
sbb
add
scas
cmps
jb
adc
pop
js
leave
jg
daa
hlt
div
fmul
ret
stos
les
push
fcom
sub
xor
sub
(bad)
push
ret
rcl
jecxz
mov
lea
iret
push
fwait
xor
(bad)
add
sar
or
popa
cmp
int
xor
sub
xlat
pop
push
cli
mov
js
adc
shl
imul
scas
or
cmps
or
xlat
ret
int
jl
outs
(bad)
rep
pop
ins
push
sub
sub
push
dec
cmp
jl
je
cs
adc
(bad)
xor
out
jp
pcmpgtw
lods
rol
mov
mov
push
mov
les
lahf
inc
outs
cdq
pop
mov
loopne
sti
mov
nop
test
xchg
dec
fild
push
mov
ins
jns
dec
cmp
cdq
push
fistp
mov
fist
xor
out
xchg
push
jo
sbb
(bad)
outs
in
xchg
push
xchg
adc
or
push
in
aad
and
mov
inc
sbb
mov
mov
push
cmc
daa
shl
(bad)
int
(bad)
dec
leave
js
add
mov
call
xchg
mov
ja
mov
xor
fld
sbb
adc
idiv
out
mov
mov
shl
call
sbb
and
dec
movs
daa
lods
pop
pushf
inc
fdiv
xchg
xor
xchg
in
pop
mov
add
dec
push
stos
daa
idiv
popw
jmp
daa
lods
in
jecxz
jmp
push
lahf
jae
mov
xor
jo
mov
cmp
in
jg
cwde
scas
push
sub
dec
jmp
scas
stos
or
rol
jnp
cmps
int3
sbb
jle
pop
pop
jp
dec
push
pop
adc
out
retf
mov
fidiv
jo
aam
or
mov
stos
fyl2xp1
test
mov
push
lds
and
push
popa
ret
push
out
sub
mov
fdivr
mov
fcomp
push
jbe
(bad)
mov
mov
jle
daa
shl
and
mov
fbstp
mov
ja
xchg
xor
ret
retf
iret
outs
sbb
arpl
int
mov
jno
adc
mov
mov
dec
xor
(bad)
mov
fisub
enter
push
sar
(bad)
gs
fucom
mov
iret
rcr
imul
inc
mov
hlt
mov
cmp
mov
dec
mov
xchg
ret
push
loopne
fxch
imul
in
outs
mov
adc
call
xchg
xor
call
fistp
sbb
popa
push
cmp
dec
and
xor
push
or
into
jno
mov
mov
jno
xor
mov
mov
and
cmp
adc
sub
sub
loopne
dec
cmp
aaa
xlat
mov
pop
mov
icebp
lods
mov
mov
mov
or
xchg
xchg
movs
int
ss
lahf
(bad)
fld
sbb
mov
into
aas
jmp
and
xor
push
jge
cmp
inc
call
jmp
lea
cmp
outs
in
retf
dec
xchg
mov
mov
test
xor
cmc
cmc
cmc
cdq
inc
fcom
ret
cmp
xchg
faddp
or
jns
into
mov
iret
dec
clc
mov
add
dec
sub
out
cwde
stc
enter
or
jb
push
pop
adc
lods
push
xchg
sub
adc
(bad)
dec
dec
sbb
dec
les
mov
jl
push
cs
pusha
je
cli
or
scas
cmp
sub
push
mov
fdivr
xlat
adc
dec
mov
fsubr
mov
imul
adc
aas
mov
sub
and
adc
mul
addr16
fidiv
cld
les
sub
sub
sub
jle
jnp
stos
dec
cld
outs
(bad)
outs
cmps
int
mov
mov
rol
push
lahf
jae
push
dec
xchg
hlt
pop
or
aad
mov
dec
scas
movs
movs
movs
imul
xor
jns
mov
into
mov
mov
mov
fiadd
int
xchg
repz
push
or
and
fwait
and
test
clc
fdivrp
outs
fadd
pop
cmp
adc
inc
neg
xor
loop
aam
sbb
loop
fld
sub
dec
leave
xor
ror
aad
lds
mov
add
mov
xor
cmp
pusha
adc
shl
push
call
cmp
fild
fadd
mov
das
in
or
mov
movs
cmps
xchg
xor
outs
int
dec
mov
mov
jno
jb
inc
shr
mov
pushf
or
rcl
xchg
out
jno
fnstcw
mov
mov
push
repz
jno
ins
cmc
xchg
retf
jne
ins
fadd
adc
fsub
call
mov
and
(bad)
outs
arpl
fwait
jge
js
jecxz
add
das
jno
xor
pushf
data16
and
stos
mov
and
(bad)
add
pop
inc
add
hlt
out
ja
in
mov
retf
bound
ret
add
push
adc
je
daa
fsin
pop
sub
test
pop
test
and
adc
fwait
cmp
stc
xchg
cs
in
ret
leave
cmp
enter
cmp
sbb
jle
and
inc
scas
xchg
mov
lods
xor
pusha
imul
push
inc
xor
xor
xchg
push
add
mov
shl
sub
dec
jge
imul
gs
movs
icebp
pop
(bad)
or
pusha
(bad)
jnp
cmp
dec
add
stos
sub
sets
xor
test
push
sub
xchg
cdq
sbb
scas
mov
push
jmp
dec
inc
xchg
add
leave
mov
push
or
mov
aaa
stc
mov
vpaddq
fistp
inc
test
cmc
sub
aad
cmp
pop
xchg
xor
ficomp
push
sar
sbb
inc
pop
div
mov
or
jl
sar
inc
adc
ficomp
imul
add
mov
popf
inc
dec
adc
adc
jmp
jp
sbb
add
ss
xchg
pop
mov
cwde
and
push
xchg
cli
in
or
pop
cmp
or
add
das
test
ja
adc
cld
push
or
adc
bnd
xchg
or
inc
mov
xor
gs
in
test
sub
mov
jb
aad
sbb
or
mov
mov
(bad)
cld
push
dec
das
jnp
daa
sbb
imul
(bad)
xchg
iret
pop
ss
movs
pop
push
ds
(bad)
stc
adc
xchg
inc
mov
add
lea
pop
adc
xchg
jae
jb
aas
pop
test
cs
je
lods
sbb
imul
out
div
retf
mov
fwait
mov
or
inc
pop
add
inc
sub
mov
adc
(bad)
neg
scas
sahf
xor
xchg
and
jo
add
je
dec
cmps
iret
push
sbb
idiv
sbb
js
sub
cli
(bad)
sbb
popa
shl
cmp
cdq
test
push
outs
jmp
cmp
mov
aam
push
pop
cli
inc
add
repz
pop
lahf
mov
mov
hlt
jle
in
inc
ret
dec
hlt
imul
ins
mov
shl
jmp
mov
neg
out
leave
repnz
and
out
xchg
(bad)
lods
(bad)
arpl
mov
jp
retf
adc
(bad)
lods
xchg
cmps
or
inc
mov
cld
in
push
imul
inc
daa
aas
mov
xchg
jmp
imul
adc
sbb
adc
repnz
(bad)
sub
pop
call
lea
dec
xchg
mov
xchg
jno
pusha
addr16
leave
dec
xor
sub
das
out
bound
add
add
mov
ror
mov
daa
aad
pop
out
push
inc
inc
jle
ja
cld
int
into
stos
test
test
sahf
inc
bound
ffreep
stc
xchg
ret
cmp
in
or
pop
fnsave
push
test
jns
sub
cmp
cld
movs
repz
mov
inc
push
cmp
cmps
jns
jge
pop
ins
mov
in
inc
hlt
test
and
push
idiv
cld
jle
aas
sti
xor
aad
sahf
iret
iret
and
lods
pop
xor
xchg
fbstp
inc
mov
pop
mov
mov
and
pop
adc
imul
dec
mov
pop
sahf
(bad)
dec
adc
ret
lock
cmp
nop
imul
dec
js
jge
daa
and
repz
enter
dec
dec
dec
mov
fld
dec
retf
fst
ret
push
mov
cmp
rcr
hlt
ret
aad
into
push
outs
aas
imul
in
(bad)
fdivr
dec
push
add
adc
and
in
xchg
pop
pop
lods
pop
rcl
out
xchg
ja
or
ins
into
jp
loope
ins
jne
sbb
cmc
int3
jp
into
push
imul
lods
ins
stos
outs
mov
inc
jl
std
arpl
jge
and
dec
lods
jmp
push
ss
and
pop
or
xor
fwait
push
sub
outs
xchg
ja
aad
ficomp
fsub
fidiv
sub
sub
pop
sbb
dec
dec
fsubr
out
or
sub
sub
fsub
adc
and
test
scas
add
mov
dec
add
pop
jno
adc
xor
fldenv
jne
ds
rol
shr
mov
mov
push
repnz
mov
js
out
(bad)
ss
lods
pop
push
and
and
or
dec
xchg
jno
pushf
jl
test
jo
mov
ins
pop
int
xchg
sbb
pop
jmp
std
dec
sbb
adc
and
fcom
(bad)
pop
dec
mov
lds
sub
lock
adc
jnp
neg
leave
popf
out
ja
ins
and
adc
sub
into
xor
arpl
inc
ja
in
call
loopne
rcl
mov
inc
inc
iret
mov
jne
inc
std
out
clc
push
xchg
call
sbb
sub
fistp
test
xchg
fnstsw
push
stc
leave
mov
dec
jl
add
in
mov
lahf
jge
out
fnstcw
pop
mov
mov
xchg
pop
aaa
ds
xor
or
mov
and
push
cli
cwde
or
adc
xor
cmps
int3
jl
outs
push
jo
sbb
mov
(bad)
dec
cs
xor
les
push
xor
and
paddb
cmp
out
sub
pop
dec
in
pop
imul
jmp
movs
pop
cmp
inc
push
popf
sub
dec
les
pop
repnz
pop
sbb
repz
pusha
mov
jecxz
inc
mov
and
xchg
sar
iret
aad
sub
mov
mov
push
push
ret
cmp
lock
push
adc
adc
dec
jl
rcl
sbb
ret
pop
scas
jp
inc
mov
lahf
push
sbb
fld
retf
idiv
retf
xor
popa
adc
pop
cs
jg
sub
mov
inc
int
mov
xchg
movs
jo
popf
pop
and
and
dec
jge
mov
outs
mov
xlat
hlt
and
test
push
rcr
fmul
rcr
(bad)
mov
dec
int
ret
out
add
and
jo
dec
jp
imul
sbb
xlat
push
pop
push
mov
imul
jnp
imul
imul
sbb
lock
iret
inc
xor
adc
adc
(bad)
pusha
nop
add
out
aaa
icebp
or
cmps
stos
lods
aad
ja
xchg
mov
mov
inc
mov
sub
xor
or
pop
adc
aad
mov
mov
mov
mov
jge
add
mov
stos
ror
lds
inc
sub
fwait
(bad)
mov
(bad)
hlt
repz
mov
xchg
dec
fs
enter
repz
inc
pop
sti
dec
int
rcr
dec
add
sbb
inc
add
adc
cs
jp
mov
sub
sub
or
data16
arpl
xor
sar
fbld
sahf
xor
mov
in
inc
out
xchg
aaa
imul
push
sub
mov
dec
clc
jns
loopne
jmp
ret
stc
and
jmp
push
mov
or
jno
les
in
or
or
sub
push
ret
add
mov
fidiv
sti
test
fnstcw
retf
test
out
inc
cmp
loope
and
xor
outs
cmps
pop
mov
dec
clc
ror
icebp
adc
scas
mov
mov
dec
pusha
movs
pop
jmp
dec
(bad)
jbe
in
pushf
pop
push
adc
mov
xchg
stc
jbe
int
xor
popf
(bad)
cmp
inc
repz
es
adc
lds
and
adc
out
inc
jge
ds
dec
push
or
(bad)
mov
mov
bound
inc
mov
lea
test
jnp
mov
jle
cmp
mov
mov
xlat
push
adc
ins
mov
jbe
in
jecxz
mov
lods
movs
mov
sub
adc
sbb
test
scas
dec
nop
xchg
rcl
daa
jbe
mov
mov
and
pop
daa
fisttp
cmp
adc
fs
pop
fisubr
sahf
scas
inc
bound
dec
pop
xor
dec
(bad)
stos
je
ins
xchg
mov
mov
fs
mov
adc
imul
ja
or
push
(bad)
(bad)
inc
xor
mov
shl
ins
neg
leave
(bad)
in
jnp
scas
repnz
pop
mov
lock
mov
mov
stc
int
or
arpl
xchg
xor
pop
mov
inc
xchg
outs
and
dec
nop
xchg
jne
lock
imul
mov
ins
push
sub
ins
and
je
mov
ins
and
mov
mov
je
adc
(bad)
pop
(bad)
and
js
sbb
mov
je
ss
retf
mov
fild
aam
and
jecxz
cmp
clc
adc
cmps
pop
test
lods
ja
xchg
(bad)
jne
aad
inc
ins
imul
cmp
mov
fs
addr16
js
sqrtps
enter
adc
push
aas
and
das
pop
repz
jno
out
stc
repnz
inc
es
and
jecxz
ds
das
loope
and
jmp
aad
pop
sbb
fiadd
xchg
add
pop
pop
add
mov
enter
adc
xchg
inc
adc
adc
xor
ret
mov
jg
nop
dec
cs
pop
cdq
sub
inc
jge
and
and
xchg
fild
push
ss
cmp
mov
cli
cmp
push
inc
dec
std
xchg
ficomp
sub
nop
stc
xor
mov
loopne
(bad)
adc
inc
mov
test
in
xlat
pop
out
cmp
test
in
ss
mov
and
mov
nop
sbb
repnz
sub
push
std
add
lea
cmp
popf
or
jmp
adc
mov
pop
shr
hlt
mov
dec
xchg
in
aas
clc
sbb
or
sti
popa
jno
push
jmp
push
das
mov
lea
xchg
das
pop
and
or
mov
lea
dec
cmp
jle
inc
mov
pusha
les
sub
in
push
cwde
repz
dec
imul
dec
mov
jb
sbb
rcl
outs
or
and
or
call
cmp
jbe
push
imul
(bad)
idiv
or
mov
or
scas
data16
push
sub
repnz
pop
xor
(bad)
pop
loopne
xchg
push
mov
adc
(bad)
mov
aad
je
sbb
loopne
out
inc
sbb
jecxz
ds
lock
push
inc
cwde
xchg
aad
inc
mov
stos
cmps
mov
mov
repnz
xchg
mov
in
fild
lods
ins
ficom
leave
mov
sub
xchg
dec
cmp
pop
adc
mov
mov
inc
repz
jae
scas
add
int
xlat
clc
xor
mov
lea
addr16
xor
sub
lods
pop
push
enter
das
shl
pop
pop
retf
or
mov
mov
out
pushf
les
push
std
mov
retf
cdq
inc
adc
cs
mov
sbb
jnp
(bad)
mov
mov
lea
and
sahf
cmps
mov
pop
out
xchg
inc
jge
cmp
pushf
and
inc
mov
and
lods
sub
aad
push
in
push
sar
(bad)
fld
adc
das
pusha
mov
pop
xchg
out
jbe
adc
fmul
xor
es
std
push
shl
and
and
ret
sub
cmp
shl
mov
xor
repnz
fwait
retf
adc
or
cmp
pusha
bound
test
test
mov
ficom
sbb
jle
cdq
in
inc
xchg
add
push
add
cmp
loopne
sub
std
ret
inc
push
mov
mov
outs
xor
test
inc
sub
push
aas
xchg
dec
mov
xchg
cdq
inc
ins
stos
jle
aad
into
mov
ret
imul
lock
sub
mul
push
xchg
stc
lods
add
adc
add
or
adc
xchg
inc
mov
and
das
popa
mul
stos
xor
ror
(bad)
jns
cs
stc
das
psubq
cwde
mov
sub
gs
(bad)
cld
addr16
out
(bad)
pop
fmul
popf
pop
fild
inc
mov
inc
jne
fld
test
clc
cmp
push
pushf
outs
jle
pop
cmps
sbb
push
stc
ds
xchg
sub
inc
call
mov
and
mov
mov
pop
(bad)
mov
stc
sub
arpl
inc
pop
icebp
ret
cli
imul
in
fidiv
cli
cmc
test
mov
loope
addr16
pop
aas
add
pop
sub
and
xchg
fsub
cmp
xlat
out
test
pop
scas
out
or
xchg
xor
int3
pop
pop
std
mov
scas
test
hlt
pop
xor
xor
fisubr
add
push
(bad)
and
pop
dec
stos
xlat
cmp
dec
sbb
lods
call
pusha
mov
es
shr
call
sti
xor
ret
dec
add
ss
mov
pop
add
arpl
cmc
ins
pop
jmp
jmp
inc
call
mov
cmp
xchg
inc
mov
mov
mov
js
mov
in
test
mov
mov
push
cmps
pop
jg
sahf
popa
push
leave
cli
mov
push
(bad)
jno
inc
sbb
and
test
pop
xlat
mov
mov
push
fsub
jmp
pushf
mov
cld
rol
mov
xchg
pop
xchg
mov
dec
arpl
and
push
imul
(bad)
data16
dec
mov
or
popf
jb
cmp
call
sub
loopne
cmp
xor
jp
adc
shr
jnp
test
adc
cdq
mov
test
out
out
cdq
jno
lods
call
daa
jns
loop
test
xor
dec
fist
daa
adc
in
out
lock
stos
or
adc
cmps
and
pop
mov
or
mov
push
add
cmp
add
lahf
jle
mov
add
(bad)
mov
fwait
mov
int3
movs
aad
(bad)
sti
push
cmps
out
adc
jae
inc
xlat
adc
xor
jecxz
call
and
sbb
mov
sub
sub
(bad)
jle
jp
sbb
jmp
pop
pop
fsub
movs
add
sbb
xor
addr16
fistp
sub
sti
in
mov
into
jl
idiv
lock
cmp
pop
test
xlat
dec
repz
cmp
cmp
jp
loop
inc
fld
mov
add
arpl
inc
push
fwait
push
pop
push
sub
inc
dec
repnz
add
movs
xor
nop
sub
pop
mov
mov
push
xchg
push
or
push
xchg
push
xchg
xlat
mov
push
push
add
mov
mov
xor
dec
push
inc
push
test
cmp
(bad)
ret
mov
sbb
pushf
addr16
test
mov
fwait
int3
(bad)
xchg
fiadd
mov
call
mov
mov
mov
jb
and
retf
cdq
es
movs
and
xchg
inc
jp
outs
imul
rcl
xor
arpl
loope
jns
loope
das
or
mov
es
std
pop
addr16
mov
mov
xor
xchg
mov
mov
gs
leave
jl
pop
and
push
mov
(bad)
mov
jb
test
jecxz
jnp
out
or
repz
mov
xchg
and
push
aaa
add
bound
psubb
jns
rcr
xlat
add
js
jno
icebp
mov
jne
jge
push
rcl
adc
(bad)
xchg
pop
hlt
shl
and
inc
inc
or
mov
sub
push
cmp
sub
jp
cmps
data16
mov
add
sbb
jg
punpcklwd
push
in
adc
dec
fsub
aaa
in
mov
cmp
sti
push
stos
ret
add
rcl
cmps
jno
xor
jmp
das
adc
mov
jecxz
adc
jo
lods
pop
mov
mov
outs
dec
pop
dec
jp
pop
sub
pop
push
mov
push
adc
pop
pop
jg
and
push
adc
sti
jo
fld
xchg
fst
aam
push
fsub
(bad)
cdq
push
cs
cmp
sub
je
scas
(bad)
pop
add
test
inc
stos
fidivr
jg
xor
sbb
inc
mov
cli
mov
fcomp
xor
jl
inc
pop
xchg
int
mov
mov
mov
dec
fstp
pop
scas
lods
push
lods
mov
pop
adc
dec
xchg
sub
fcom
mov
test
xchg
sbb
sbb
test
rol
sub
ds
pop
adc
dec
cmp
je
cmp
push
mov
push
jae
pushf
jnp
movs
add
sar
in
imul
xlat
mov
jmp
add
shl
xor
lods
adc
jp
pop
dec
dec
shr
xchg
repnz
adc
or
pusha
inc
push
dec
imul
jbe
ins
sti
or
cli
arpl
inc
cmc
add
push
or
test
mov
test
repnz
and
vsqrtpd
nop
ins
adc
mov
call
sub
in
mov
xor
repz
push
cmp
aad
imul
pop
sbb
inc
dec
xchg
mov
mov
inc
into
adc
jl
clc
adc
jbe
mov
sub
lods
cmp
xchg
scas
in
in
xor
lods
inc
dec
push
cwde
cld
cmp
push
into
mov
fsubp
popf
or
mov
push
int3
sahf
jl
mov
push
call
add
pop
xor
jo
(bad)
pop
cmp
(bad)
out
mov
mov
shufpd
adc
and
loop
imul
cmc
adc
xchg
(bad)
ficomp
cmp
cdq
lock
hlt
mov
mov
es
cmp
push
mov
sbb
mov
sbb
dec
fidiv
xchg
sbb
xlat
dec
mov
repz
shl
not
outs
jno
sbb
push
sbb
mov
and
mov
popa
and
sub
xchg
addr16
mov
mov
push
jecxz
lock
shl
inc
outs
dec
cmps
ffree
in
ficomp
in
out
pop
out
in
rcl
mov
test
stc
test
add
jmp
imul
inc
ret
int
(bad)
cmp
adc
inc
xor
or
ss
test
jl
sbb
js
mov
mov
in
mov
sbb
in
cmps
mov
mov
mov
dec
call
jl
fidivr
icebp
pop
sub
rol
sbb
push
xchg
mov
jae
test
sbb
dec
xlat
bound
rol
repz
fst
adc
loope
mov
fwait
hlt
pop
je
test
enter
pop
jge
adc
push
mov
dec
ds
test
dec
ror
mov
daa
hlt
push
pop
push
leave
xchg
jne
in
jle
xchg
ss
sub
out
ret
mov
adc
cmp
xchg
or
ja
aaa
adc
(bad)
jg
adc
push
lods
push
cwde
nop
test
xchg
add
fmul
and
or
sbb
and
mov
inc
pop
bound
add
imul
out
rcr
das
inc
ins
ror
jae
popf
mov
cli
test
fdiv
out
repz
push
into
push
mov
dec
jge
ds
add
adc
cwde
iret
xor
mov
stos
dec
mov
dec
adc
inc
jle
xchg
mov
stc
daa
neg
pop
iret
aam
mov
lods
xor
rcr
daa
push
daa
ret
out
fnstcw
jnp
shl
aaa
rcr
imul
dec
adc
cmp
push
inc
mov
test
mov
ins
es
add
(bad)
aam
sti
push
mov
(bad)
jnp
movs
pop
mov
jmp
sbb
mov
loop
fidiv
adc
(bad)
pop
jne
mov
jno
jmp
add
adc
push
push
cmp
aaa
ret
es
jnp
iret
repz
push
push
pop
jae
das
dec
ins
and
outs
mov
cwde
daa
fwait
inc
outs
xchg
test
js
and
lock
sub
aas
ds
sub
iret
sub
std
cld
cld
sbb
aas
in
xchg
(bad)
push
inc
mov
xchg
cmps
cdq
mov
shr
jbe
stos
repnz
pop
push
inc
inc
cvtpi2ps
imul
mov
(bad)
cmp
fisubr
out
(bad)
ret
fldcw
sub
cdq
call
fwait
inc
mov
jae
mov
mov
mov
call
sbb
pop
retf
(bad)
jb
in
pop
dec
cmp
outs
popf
and
sbb
out
imul
fmulp
in
mov
das
(bad)
fsub
int
aaa
adc
rcl
xor
js
or
pusha
ret
xchg
add
loope
dec
mov
adc
sbb
add
(bad)
adc
imul
jne
in
ret
daa
cs
push
jns
mov
cmp
jb
das
imul
cmp
imul
mov
add
cdq
mov
push
cmps
addr16
(bad)
shr
fld
xchg
sbb
sti
int
cmp
out
add
vminpd
mov
call
scas
mov
cdq
sub
mov
sbb
push
cmp
mov
inc
icebp
or
je
cmp
movs
outs
mov
out
xchg
movs
movs
leave
sub
inc
imul
jg
test
stos
xchg
pop
add
xchg
enter
imul
data16
pop
dec
movs
mov
retf
aad
int3
dec
out
fdivr
test
add
daa
in
imul
cs
stos
iret
adc
fst
add
add
getsec
cmp
out
cmps
pop
xchg
jecxz
mov
adc
loope
or
add
push
dec
fimul
and
adc
in
out
daa
fistp
fsubr
adc
out
jmp
adc
cmp
loope
and
imul
neg
aas
ret
sub
in
dec
sti
dec
sti
in
pop
push
mov
cmps
in
and
jo
jne
retf
rcl
push
bound
pop
test
cmp
enter
out
lods
jnp
aaa
mov
cmp
xchg
bound
push
cmp
mov
xor
repz
addr16
in
fnstsw
ins
outs
jg
sub
rol
sub
xchg
push
xchg
sub
xor
dec
xchg
sbb
xlat
xlat
cli
mov
leave
(bad)
repnz
jmp
pop
stos
out
jbe
add
or
mov
mov
lods
inc
xor
ds
int3
cmps
popf
loopne
mov
xchg
in
jb
pop
dec
mov
cmp
pop
mov
xor
lahf
adc
daa
adc
in
ss
xchg
adc
je
mov
jb
dec
fsubr
ins
les
es
inc
call
aad
fmul
add
in
mov
mov
rcl
movs
adc
adc
cmp
fdivr
sub
jns
scas
inc
lods
and
pushf
xchg
mov
dec
shl
or
and
jnp
lahf
pop
and
pop
ret
jmp
pop
sbb
out
cmp
sub
out
fbld
mov
pop
pop
sub
jg
movs
adc
ret
mov
cmovs
(bad)
xlat
push
pop
fsubr
jbe
pushf
clc
jne
xor
push
es
xchg
call
jle
dec
or
ja
dec
(bad)
xchg
sub
push
mov
xchg
enter
cmp
mov
cdq
inc
sbb
cmp
sub
add
xchg
pop
aas
ret
lods
cmp
stos
mov
sub
jecxz
ss
call
sub
stos
and
pusha
sub
in
pop
push
dec
test
scas
cdq
out
pop
ss
mov
enter
xchg
popf
mov
fisub
jl
(bad)
cli
mov
pop
inc
and
outs
or
xchg
in
xchg
xchg
jno
dec
mov
jne
imul
mov
jl
out
adc
lock
rcr
ins
mov
ret
and
cdq
mov
inc
dec
in
mov
lea
das
push
inc
mov
sbb
or
out
lahf
ins
adc
aas
addr16
sub
arpl
inc
push
call
(bad)
jmp
in
adc
xlat
pop
call
mov
mov
push
imul
dec
add
aas
shl
(bad)
mov
stos
add
push
add
inc
add
fs
xor
daa
or
daa
lods
push
push
cdq
jo
ds
jmp
jno
sbb
sahf
pop
call
sbb
push
push
mov
call
imul
mov
xor
adc
adc
and
xor
sub
scas
or
push
pop
jle
adc
rcr
dec
mov
or
loop
xchg
pop
mov
loop
into
mov
dec
ret
or
fwait
test
(bad)
stos
ficom
out
icebp
aam
cli
rcl
jo
sti
retf
xchg
movs
jns
nop
lods
js
jmp
addr16
adc
scas
icebp
xchg
icebp
mov
or
sbb
jns
ds
add
aad
push
retf
pop
(bad)
xor
mov
retf
and
mov
cmp
push
sub
jmp
xor
dec
cmp
adc
jo
jo
jnp
xchg
inc
js
sub
jns
mov
dec
inc
cmp
test
loop
adc
cli
inc
jmp
rol
mov
mov
loopne
out
jno
or
shl
mov
sub
mov
lods
jl
outs
inc
test
xchg
add
inc
jne
xchg
dec
fistp
cs
clc
jle
push
shl
inc
hlt
call
(bad)
pop
das
imul
fimul
sbb
pop
jmp
and
pop
adc
dec
aas
xor
(bad)
push
push
dec
fsubp
pop
sub
dec
xor
leave
push
xchg
clc
leave
mov
xchg
call
adc
aaa
pop
sbb
jmp
stc
pop
xor
cmps
out
cmp
pop
in
adc
lds
jb
stos
cmc
xchg
imul
cmc
(bad)
mov
cs
shrd
cmp
pop
or
fst
jnp
mov
inc
jmp
test
(bad)
(bad)
push
int
sub
sbb
sar
bound
gs
mov
add
icebp
fwait
lods
xchg
and
icebp
(bad)
(bad)
scas
xor
jecxz
in
hlt
cmps
xchg
sbb
mov
test
mov
push
fisubr
cmps
(bad)
sub
dec
cli
xchg
adc
nop
pusha
sbb
adc
sbb
sbb
inc
dec
(bad)
(bad)
stc
xchg
aam
cmp
push
push
and
xchg
shl
(bad)
mov
outs
cmp
push
pop
mov
mov
(bad)
inc
loop
mov
adc
xor
fsubr
pop
sbb
add
dec
jno
mov
mov
mov
mov
fs
or
out
dec
cmp
dec
retf
push
(bad)
loop
push
adc
mov
cs
mov
(bad)
dec
xor
jecxz
mov
push
adc
das
mov
fmul
int
mov
sbb
fld
push
jp
mov
adc
jmp
leave
sar
fcmovnb
cmps
scas
stos
popf
call
cdq
neg
add
mov
pop
enter
(bad)
sbb
jg
inc
mov
jbe
sub
add
(bad)
xchg
test
ficomp
shr
adc
pop
xchg
mov
cli
push
and
sbb
push
dec
arpl
scas
(bad)
dec
xchg
fidiv
sbb
retf
ds
xchg
sbb
cs
lock
leave
or
pop
aas
inc
out
inc
inc
pop
pop
bound
or
fcmovnu
aad
int3
add
(bad)
(bad)
fs
adc
mov
dec
pop
mov
rcl
jmp
ds
sbb
test
dec
out
std
lahf
xchg
je
lds
mov
and
mov
data16
mov
test
call
(bad)
cmp
xchg
or
popf
jae
cld
or
mov
popf
leave
(bad)
lock
dec
jbe
adc
cmp
mov
adc
mov
fldcw
shl
sub
mov
jg
and
push
xor
inc
dec
inc
stos
scas
add
mov
mov
cmp
cdq
jge
jg
addr16
jl
div
mov
les
add
aad
pop
clc
imul
scas
jo
out
add
or
pop
into
ffreep
in
jmp
loopne
addr16
xchg
xchg
push
adc
fidivr
repz
and
mov
sar
xchg
(bad)
ins
and
(bad)
ins
loopne
ss
sub
push
or
fcomp
mov
icebp
loope
mov
mov
cmp
adc
cmps
or
and
int3
mov
push
shl
mov
out
ds
push
mov
loope
(bad)
and
inc
xor
dec
sti
xor
and
inc
(bad)
mov
lods
add
mov
es
mov
and
cmp
popf
gs
ret
jmp
jno
mov
cwde
jge
retf
das
in
pop
adc
fsub
push
adc
push
jp
dec
and
adc
push
xchg
imul
pop
fiadd
mov
dec
lea
mov
and
mov
pusha
jnp
inc
push
and
adc
and
or
adc
mov
mov
imul
sub
and
shl
jb
stos
ja
jo
xchg
ud0
pusha
cwde
shl
push
rcr
mov
ror
jbe
mov
and
enter
(bad)
fwait
pop
jmp
jl
stc
ret
shr
inc
push
inc
and
xor
out
pop
ins
in
pop
add
sub
std
and
hlt
dec
outs
test
cdq
push
bound
fchs
mov
ja
rcr
sub
and
div
pop
daa
and
mov
in
cmp
cmp
fxch
in
cmp
and
sbb
test
lods
inc
bound
add
mov
in
rcr
cmps
popf
cmp
push
pop
mov
dec
dec
adc
test
dec
test
cld
sbb
push
cmp
mov
imul
jno
xor
jmp
shl
inc
jl
push
movs
jne
push
lahf
aas
inc
mov
xchg
ins
jno
adc
add
add
jg
pop
xchg
jbe
fld
ret
hlt
mov
sahf
pop
into
or
sbb
mov
aas
leave
fwait
mov
(bad)
jle
mov
rcr
push
(bad)
int
popf
and
les
popa
sbb
push
inc
xor
call
xor
push
xor
mov
imul
and
(bad)
ja
fisttp
sbb
jp
(bad)
adc
xor
es
in
push
jmp
out
stc
dec
cmps
shl
lods
cmp
pusha
push
adc
jno
pop
jg
stc
adc
es
add
fild
and
dec
and
mov
in
stos
sub
adc
cdq
fisttp
div
bound
das
add
out
jb
(bad)
(bad)
jmp
dec
rol
jb
fsubrp
push
icebp
sub
add
mov
mov
in
and
imul
inc
jmp
and
pop
pusha
scas
add
sti
(bad)
in
stos
jno
fwait
test
and
dec
and
fs
aaa
fs
adc
xchg
push
icebp
out
and
(bad)
popa
xchg
mov
lods
xor
shl
dec
aam
mov
push
mov
outs
add
outs
je
shl
cmc
and
out
jnp
jge
test
icebp
sbb
hlt
or
clc
jnp
movs
movs
push
mov
sbb
jle
jns
add
(bad)
push
jg
mov
jmp
leave
push
sbb
pop
cmp
popa
mov
dec
adc
push
sti
mov
xor
xchg
sub
jno
out
adc
cmp
fxch
fwait
leave
mov
sbb
cmp
mov
sbb
xor
sub
cmp
sub
or
sub
jge
xor
popf
adc
sub
pushf
icebp
jae
dec
sub
rcr
fldcw
mov
movs
in
retf
cmp
cmps
inc
xor
test
adc
or
test
shl
xlat
cmp
sbb
pop
xchg
inc
nop
xchg
mov
xlat
mov
bound
mov
shl
adc
in
mov
mov
loopne
mov
mov
stos
loopne
mov
push
sbb
or
jmp
repnz
add
push
mov
popf
pusha
sbb
mov
retf
sbb
aam
jne
sub
into
gs
adc
inc
(bad)
test
retf
mov
sbb
sbb
in
xchg
and
jnp
les
fcomp
mov
int3
dec
loop
mov
int
dec
fldenv
ret
jl
aad
aam
inc
cli
mov
leave
xor
movs
or
ret
sbb
jp
idiv
pop
mov
pop
in
mov
pop
jl
pop
mov
repnz
and
xor
loopne
aaa
xchg
mov
or
enter
mov
ror
adc
jb
(bad)
jmp
loopne
in
js
or
ror
cmps
xchg
sbb
pop
inc
movs
frstor
retf
pop
mov
ja
inc
in
xchg
outs
pop
(bad)
imul
pop
mov
xchg
push
cmp
or
sbb
and
int
add
jbe
mov
push
pop
mov
je
mov
les
or
inc
mov
popf
loopne
sbb
in
adc
push
mov
dec
stos
mov
pop
jp
mov
imul
test
cwde
das
and
sbb
rol
adc
xor
pushf
xchg
dec
xchg
xchg
jg
cld
jmp
iret
addr16
and
aas
fs
sahf
das
mov
push
jmp
adc
fnstenv
ja
xchg
imul
push
and
push
fadd
and
pushf
sub
and
cld
push
mov
xor
sub
mov
imul
pop
(bad)
aam
or
test
pop
cmp
mov
cmc
mov
pop
xchg
fs
test
movs
xchg
push
dec
out
xor
pushf
xor
in
adc
stos
gs
or
mov
and
ror
or
push
pushf
inc
mov
xchg
lods
push
push
aam
mov
and
repz
shl
arpl
les
jns
jmp
xor
cmp
lock
test
xchg
dec
inc
push
bound
jl
adc
push
aad
out
push
cmc
pavgb
and
in
mov
ror
fdivr
call
jg
dec
ins
xchg
(bad)
mov
jle
add
ss
dec
into
cli
dec
mov
clc
popa
mov
add
pop
aam
fisubr
inc
mov
daa
nop
sub
xchg
in
dec
or
jge
mov
das
cmp
into
ror
xchg
add
mov
jae
jl
fnstenv
add
lds
test
cdq
mov
or
aad
std
cmp
rol
int3
mov
js
movs
adc
mov
dec
fiadd
cmc
les
stos
jecxz
inc
push
jbe
xor
inc
mov
push
xchg
adc
inc
lds
ja
or
or
dec
xchg
adc
in
retw
push
xlat
lock
push
test
test
sbb
cmc
cli
dec
shr
ret
js
inc
ror
(bad)
aaa
push
sub
mov
in
popf
cdq
(bad)
sti
leave
xor
dec
ret
je
nop
nop
(bad)
in
movs
or
pop
xchg
das
pop
fidiv
mov
cli
xchg
inc
nop
xchg
push
jecxz
in
ss
fadd
mov
cmp
sbb
pop
xchg
jbe
fs
in
in
mov
bound
aaa
cmp
mov
stos
mov
sub
dec
and
sub
aas
adc
sbb
mov
hlt
push
repnz
imul
pop
dec
push
cli
movs
aam
cmp
js
fsubp
dec
sub
into
cmp
inc
jbe
retf
push
jnp
jbe
dec
js
es
out
ins
mov
outs
hlt
adc
movs
cmc
adc
xor
xor
movs
pop
xor
aaa
add
(bad)
in
out
scas
push
mov
push
dec
in
dec
or
jecxz
push
pop
stos
rcr
movs
(bad)
repz
push
stos
cmc
aam
push
mov
xor
jecxz
and
stos
shl
dec
out
movs
das
jo
push
and
inc
push
int3
cli
pop
inc
jecxz
fist
add
test
sbb
jge
pop
mov
fdivr
(bad)
xchg
arpl
jbe
mov
push
pop
fnstenv
das
inc
scas
xchg
lods
bound
xor
inc
(bad)
push
xor
push
and
mov
sbb
lods
mov
dec
jb
and
mov
adc
bound
mov
adc
lock
in
sbb
push
sbb
lock
jno
mov
xchg
dec
enter
fcmovnbe
neg
aam
iret
mov
out
loope
gs
push
xor
pop
mov
fsub
mov
mov
adc
xchg
pop
pop
xor
int3
sub
hlt
inc
adc
pop
cmp
not
push
push
das
mov
mov
fimul
jmp
xor
stos
loope
out
push
pop
xlat
les
mov
xor
push
cld
push
int
out
or
mov
test
int
sub
pushf
cmps
loop
fmul
inc
sahf
push
stc
shl
inc
cmc
arpl
test
adc
ds
stos
mov
dec
push
mov
jbe
leave
mov
cmp
inc
ret
xchg
fisttp
shl
dec
ins
not
cdq
mov
mov
lods
shl
add
cmp
scas
mov
add
enter
xchg
cli
rcl
cmp
adc
xchg
xchg
ss
mov
repz
daa
jo
adc
ret
inc
or
popa
sub
in
mov
jecxz
pop
mul
and
add
adc
push
inc
dec
aam
mov
mov
sub
pop
sti
popa
or
loope
movs
inc
pop
jmp
fnstcw
xor
or
out
and
jne
adc
addr16
push
fmul
les
xchg
test
adc
and
sub
xchg
movs
or
push
mov
(bad)
or
jo
xor
rcr
test
sub
mov
imul
push
stos
in
push
ss
stos
dec
pop
dec
dec
test
adc
dec
mov
(bad)
fmul
push
mov
dec
ins
shr
into
maxps
std
iret
stc
outs
push
loop
leave
dec
sub
sbb
xlat
xor
mov
(bad)
or
lahf
lock
add
mov
dec
pop
dec
and
mov
jo
ds
mov
xchg
lahf
fcmovb
or
into
not
aas
ins
arpl
add
pop
clc
out
sbb
movs
sbb
or
call
pop
pusha
push
(bad)
popf
jno
imul
fs
sub
loope
imul
lock
inc
nop
ja
add
pop
sahf
neg
pop
inc
addr16
jo
push
xchg
mov
cmp
mov
(bad)
dec
push
dec
sub
cli
mov
add
fisubr
test
jo
xor
sahf
fimul
push
cmc
mov
mov
stos
neg
ret
sub
call
icebp
inc
dec
add
test
loop
add
cli
shl
adc
and
push
out
popf
(bad)
jg
mov
call
xor
dec
sbb
pop
mov
imul
add
mov
adc
jmp
rcr
add
mov
stc
dec
or
and
in
(bad)
movs
mov
(bad)
mov
clc
mov
xlat
movs
xor
out
and
mov
leave
adc
les
dec
xchg
clc
cmp
repz
lds
loopne
pop
adc
fcomp
sub
or
call
loope
mov
popa
test
test
sub
aad
pop
mov
sbb
mov
mov
fld
mov
jne
out
mov
push
jg
inc
cmps
mov
push
dec
repz
adc
fidivr
shl
les
sbb
or
fdiv
stc
hlt
xchg
loope
rol
xor
or
sbb
sbb
cs
add
cs
(bad)
(bad)
xchg
jae
sub
out
add
cmp
cmp
(bad)
stos
shr
mov
mov
shl
icebp
jg
aad
(bad)
lods
push
mov
mov
imul
call
mov
add
adc
leave
popa
int3
das
(bad)
mov
mov
inc
ja
dec
jae
jmp
and
imul
test
pop
and
jo
push
cmp
imul
shl
push
or
xchg
imul
cmp
ins
mov
cdq
je
sbb
cmp
arpl
mov
hlt
sbb
inc
fdivr
mov
xor
pusha
lods
adc
mov
sbb
(bad)
ds
xlat
xchg
std
mov
icebp
sbb
xchg
cld
cmp
add
aam
cmp
mov
cmc
fs
mov
lock
jl
push
imul
or
push
sub
and
or
lods
push
adc
popa
fs
sti
xor
xor
mov
xor
mov
mov
push
movs
dec
push
cwde
push
ja
(bad)
rcr
or
add
pushf
xchg
sub
xchg
or
adc
xor
(bad)
jnp
aad
sbb
jl
push
sub
cmps
test
mov
hlt
cli
cmps
jae
pop
bound
ret
add
sub
or
bnd
mov
pop
je
imul
cmc
scas
iret
push
arpl
int
push
gs
xchg
scas
hlt
cmp
sub
test
int3
sbb
fiadd
pushf
cmc
mov
pop
and
adc
sub
sbb
mov
xchg
lods
out
imul
jbe
into
cmp
jae
or
mov
pop
je
call
jb
repnz
das
push
clc
xchg
aas
mov
cdq
imul
daa
push
(bad)
ins
movs
dec
shl
push
cmp
push
fsub
xor
xor
leave
retf
and
pop
test
outs
mov
add
cmc
clc
mov
(bad)
pop
ins
mov
add
mov
retf
pushf
and
jns
loopne
or
xchg
add
or
(bad)
mov
sbb
retf
mov
inc
pop
mov
outs
add
cmps
sbb
mov
jle
(bad)
leave
hlt
sbb
outs
(bad)
pop
pop
std
dec
sbb
mov
(bad)
ins
dec
or
cmc
loope
pop
aam
add
cmps
fwait
or
in
mov
inc
loope
cld
jge
pop
and
gs
jae
test
jno
rol
(bad)
fldcw
sbb
gs
lds
push
cmps
(bad)
inc
xchg
mov
ror
xchg
nop
das
loopne
sti
cmp
jae
stos
jnp
push
jmp
inc
aam
mov
add
mov
jbe
dec
cdq
adc
inc
cdq
jg
aas
pushf
adc
and
push
sub
and
cmp
xor
mov
test
and
push
sub
(bad)
or
inc
adc
jmp
xchg
inc
pop
mov
call
lods
arpl
pop
ret
int
cwde
sub
mov
fimul
push
fst
test
std
into
leave
mov
daa
stc
jmp
xchg
test
inc
push
sti
movaps
popa
pop
ins
push
cmc
dec
xor
shl
and
push
cdq
bound
out
scas
iret
push
fdivr
jp
mov
xchg
aaa
inc
ror
push
retf
cmp
popa
cli
xchg
aas
enter
mov
cmp
mov
xor
call
xor
cmps
lock
jbe
cmp
outs
lods
mov
dec
cmp
adc
inc
test
cwde
bound
jmp
loop
adc
push
and
xchg
mov
inc
call
dec
adc
xchg
and
xchg
(bad)
push
cs
mov
lahf
pop
retf
into
jmp
(bad)
sbb
mov
add
fsub
dec
pushf
cmp
test
clc
sbb
push
test
inc
xchg
mov
dec
xor
ss
cli
or
xchg
cmp
mov
cdq
or
jb
fldenv
jne
adc
and
push
(bad)
pop
xor
mov
std
or
push
sahf
fistp
jmp
enter
cmps
js
aad
test
ins
iret
(bad)
fnstcw
outs
mov
push
and
sbb
xchg
push
and
mov
cmc
mov
and
push
sti
cmp
dec
push
jmp
test
xchg
pop
push
mov
pop
gs
push
mov
xor
out
imul
inc
mov
xchg
inc
jnp
and
in
or
add
adc
sub
dec
jmp
dec
jg
out
xchg
mov
dec
mov
or
jmp
xor
scas
mov
lahf
jno
not
(bad)
fidivr
mov
retf
pop
mov
scas
mov
adc
sahf
cmp
dec
xchg
push
pop
sbb
sahf
lods
sub
bound
test
cs
les
imul
or
push
cmp
xor
pop
jnp
fsubr
daa
call
pop
into
arpl
lea
adc
sub
into
or
std
xchg
cmc
jecxz
enter
mov
scas
mov
xor
jmp
mov
mov
mov
lea
pop
les
mov
or
xchg
shl
gs
cli
mov
and
or
pop
mov
(bad)
xor
retf
pop
fbstp
bound
adc
lock
mov
retf
mov
iret
out
push
add
pushf
sbb
mov
stc
mov
pop
adc
cmps
imul
outs
aas
xor
test
out
call
adc
outs
cmp
dec
data16
sub
aad
aam
in
pop
jmp
mov
and
pop
adc
xor
test
mov
sbb
orps
jg
push
xor
pop
and
test
dec
sub
scas
and
mov
test
mov
hlt
lock
aad
aas
jne
aas
mov
in
(bad)
data16
rcr
cdq
jg
popf
sub
fisubr
std
adc
inc
sbb
pop
adc
cmp
xchg
xor
in
cmps
inc
and
fcom
and
mov
xor
jns
retf
push
xchg
sbb
add
inc
sahf
mov
xchg
jmp
fdivr
and
inc
dec
(bad)
in
leave
jnp
out
in
retf
into
mov
mov
scas
fs
jnp
(bad)
jne
sub
call
loopne
pop
stc
icebp
push
dec
mov
or
test
add
data16
sub
sbb
call
(bad)
mov
out
shr
enter
call
or
pop
pop
mov
lahf
imul
hlt
dec
add
ds
outs
call
daa
ret
xchg
cld
or
add
lea
(bad)
lahf
mov
imul
xor
push
mov
mov
sub
or
bound
add
mov
loopne
sub
add
inc
jecxz
push
fld
sub
fldenv
xchg
or
cmp
add
iret
daa
in
loopne
mov
xchg
lahf
fwait
sti
fiadd
das
fst
xchg
out
repz
div
mov
pop
shr
add
scas
test
mov
clc
ret
test
and
fidivr
enter
nop
or
and
clc
and
imul
addr16
mov
or
mov
xor
inc
adc
pop
adc
push
push
sbb
outs
aam
jae
jl
push
aam
jecxz
fbld
retf
ror
cmp
test
lods
inc
scas
push
retf
lods
push
push
mov
loop
add
inc
mov
pop
xor
xor
leave
fcomp
mov
mov
xor
int
lods
add
retf
mov
mov
js
pop
add
fmul
xchg
clc
in
js
add
rol
ds
js
dec
cmp
daa
pop
gs
mov
les
adc
hlt
and
fsubp
aaa
cmp
icebp
jae
push
add
dec
push
jp
(bad)
cmp
pop
ja
fsub
jp
xor
jbe
and
rcr
jl
cld
push
push
sbb
je
js
xchg
and
(bad)
lds
outs
loope
out
loopne
sar
mov
pop
pop
adc
push
pusha
in
xchg
xchg
push
mov
mov
outs
scas
pop
push
outs
mov
sbb
imul
fnstsw
jge
pop
adc
and
adc
scas
adc
mov
sbb
inc
retf
movs
std
popa
cmp
lds
fidivr
popf
mov
jle
out
or
(bad)
mov
add
shl
xor
or
jae
mov
call
inc
outs
inc
xchg
or
jbe
adc
into
inc
std
in
lock
pop
in
lods
mov
imul
cmovg
pop
pop
mov
lods
adc
nop
into
clc
(bad)
shl
js
nop
iret
cmps
push
loope
cmp
inc
popf
dec
cmps
cmps
call
and
fnstcw
sub
mov
nop
fiadd
daa
or
je
dec
sbb
iret
iret
ror
jno
xor
jae
shr
aam
fdiv
pop
inc
push
mov
jmp
and
rol
das
aad
or
retf
in
sub
stc
push
or
or
daa
push
or
xchg
pop
mov
nop
cmp
lds
dec
adc
adc
loope
outs
popf
adc
div
jge
and
scas
push
mov
xchg
mov
push
or
in
aam
idiv
xchg
(bad)
cmp
cdq
sbb
or
pop
es
shl
pop
xchg
sub
mov
int3
xor
jecxz
std
cmps
add
mov
cmp
imul
mov
(bad)
repnz
dec
inc
mov
lahf
out
xor
add
dec
jns
imul
imul
aam
xor
aaa
or
stos
(bad)
int
jno
in
mov
push
push
pushf
cmps
push
imul
cmp
icebp
lea
lods
xchg
ins
sti
or
(bad)
mov
xchg
in
push
xchg
and
push
jbe
int
inc
or
dec
je
call
cmp
mov
inc
in
int
and
sub
stos
cmps
pop
mov
xchg
mov
xchg
mov
jge
mov
ins
jecxz
jecxz
out
pop
sbb
jmpw
cmp
pop
jmp
sar
hlt
adc
call
mov
cs
and
test
adc
jg
(bad)
jo
lea
iret
inc
pop
out
scas
xchg
dec
push
mov
inc
xchg
xlat
outs
mov
pop
into
lods
push
stos
bound
mov
imul
fiadd
movs
idiv
mov
gs
ds
test
loopne
std
push
imul
cmps
icebp
sub
adc
sub
xor
jne
scas
mov
(bad)
or
pop
cs
or
xor
jne
adc
cmovg
(bad)
je
and
js
scas
sti
lea
stos
inc
enter
test
mov
cwde
(bad)
fmul
aam
lahf
bound
jnp
aam
shl
iret
mov
rol
mov
(bad)
std
xor
sti
div
xlat
inc
jge
ja
push
iret
jo
mov
mov
jne
out
imul
movs
call
pop
mov
mov
mov
push
lahf
and
mov
sti
mov
jnp
adc
rcr
mov
pop
xor
mov
dec
je
scas
retf
clc
dec
mov
(bad)
sbb
or
cld
push
mov
imul
fdivr
mov
test
retf
scas
aaa
sbb
fucomi
sbb
int3
adc
repz
cmps
mov
cmova
or
pop
bswap
mov
ins
lock
lds
mov
jae
mov
lods
inc
icebp
add
push
pop
ins
mov
pop
xchg
or
gs
rcr
push
sub
xchg
sahf
mov
fldcw
loopne
scas
and
shr
dec
mov
xchg
cld
mov
xchg
jp
loop
dec
xchg
mov
dec
inc
pop
fbld
cmps
pop
icebp
dec
mov
int3
mov
call
(bad)
xchg
outs
cs
fisubr
add
stos
pop
sub
pop
and
mov
arpl
mov
ins
das
in
movs
call
leave
scas
mov
xchg
inc
sbb
hlt
xchg
jb
sbb
dec
int3
ret
loopne
and
inc
fldcw
and
dec
and
cmp
in
xchg
xor
xchg
iret
repnz
dec
pushf
add
jns
outs
into
retf
imul
aaa
xchg
fs
aaa
out
ins
jo
mov
and
xchg
fdiv
repz
mov
fcmovb
(bad)
cmp
jecxz
frstor
unpckhps
rol
mov
cwde
in
pop
movs
sbb
push
cmp
pop
mov
push
rcr
in
add
jo
mov
pop
aas
adc
dec
rcr
mov
adc
xor
dec
dec
je
push
fild
push
stos
mov
mov
jmp
pop
imul
add
sbb
in
mov
sahf
mov
inc
adc
sbb
add
push
out
sbb
enter
aaa
repnz
inc
retf
loope
inc
add
inc
sahf
cmp
dec
dec
push
bound
movs
les
cs
xchg
jo
(bad)
push
xor
fistp
jnp
jne
inc
or
push
popa
pop
mov
mov
dec
pop
lock
stos
aaa
fsub
stos
mov
and
fmul
icebp
pop
aad
inc
cmp
mov
gs
inc
adc
je
push
xchg
fisttp
rol
inc
fisttp
cmp
repnz
jp
sub
pop
or
xor
stos
jge
adc
adc
rcl
loop
inc
jnp
pop
leave
inc
or
aad
out
mov
sbb
enter
fwait
sub
sub
mov
mov
dec
rol
push
mov
fld
ror
add
pop
add
outs
sbb
adc
jnp
add
xchg
mov
push
push
stos
repz
push
int3
jl
outs
adc
cmp
mov
imul
arpl
xor
jae
add
(bad)
pushf
dec
mov
xchg
xor
cwde
mov
inc
adc
and
sti
or
nop
push
pop
xor
ss
ds
jp
pushf
adc
push
dec
push
stc
sub
mov
loopne
dec
push
and
cs
daa
test
jbe
(bad)
aas
ins
aas
movs
repz
test
add
inc
clc
std
retf
clc
daa
mov
and
xor
xchg
call
pop
adc
sbb
xchg
add
mov
aaa
repnz
int3
jge
xchg
jl
aaa
cmp
inc
jno
lea
cmp
jmp
and
jno
mov
loop
pop
mov
test
shl
and
pop
retf
stos
aad
adc
pop
pusha
call
inc
fcomp
outs
mov
shl
pop
add
in
sub
pop
push
mov
in
mov
rol
mov
push
ret
xor
or
xor
mov
mov
mov
pop
cwde
in
fisub
cli
cmp
mov
(bad)
idiv
aaa
hlt
loope
movs
nop
loope
dec
dec
nop
mov
pop
retf
rcr
fwait
mov
pop
cmps
idiv
dec
mov
call
fdivr
sahf
fcomp
jnp
pop
sbb
xchg
sub
loop
push
call
xchg
mov
xchg
pop
jmp
xchg
gs
pop
sbb
jbe
int3
(bad)
sbb
sbb
jb
(bad)
mov
in
or
jae
sbb
daa
mov
pop
push
lahf
push
(bad)
call
sahf
hlt
retf
pop
lahf
arpl
fucomp
mov
test
adc
(bad)
out
cmp
dec
xchg
jmp
mov
sbb
lahf
in
into
xor
pusha
imul
rcr
in
repnz
inc
nop
mov
popa
loope
mov
sbb
pop
mov
add
leave
lea
inc
adc
lahf
ja
jne
imul
div
mov
std
xor
aam
pop
(bad)
push
or
fld
or
inc
bound
sahf
ja
fistp
pop
xchg
fadd
add
mov
imul
aas
(bad)
adc
popf
mov
movs
sbb
pop
in
cmc
xchg
xlat
mov
gs
xor
push
mov
hlt
test
cmp
adc
test
jne
scas
in
lods
xchg
push
mov
es
sbb
inc
xrelease
fwait
add
ss
push
cdq
jnp
pusha
xor
jl
loopne
out
mov
inc
repz
xor
pop
jl
add
sar
js
mul
movs
aam
jg
lahf
sub
out
pop
repz
shr
adc
mov
test
out
mov
sbb
mov
sub
jne
xor
dec
hlt
scas
jmp
test
xor
pop
in
out
fbld
sub
and
jl
xchg
cmp
push
inc
xor
hlt
jg
fisubr
push
in
outs
ja
inc
mov
xchg
mov
retf
inc
es
aas
ja
mov
xor
scas
jnp
sub
(bad)
xor
pop
dec
lods
mov
lock
arpl
xor
(bad)
in
lds
jl
frstor
imul
stc
ret
or
(bad)
sbb
adc
fdivr
addr16
pop
out
xor
(bad)
stos
add
cld
xor
jne
or
mov
in
xchg
(bad)
push
jbe
ja
xchg
xor
pushf
cmp
cld
pop
mov
out
push
push
mov
mov
js
jmp
sbb
movs
mov
mov
pop
or
cmp
js
inc
xchg
inc
xor
mov
dec
jae
pop
lods
pop
(bad)
test
and
cs
inc
xchg
cwde
dec
fs
jle
xchg
sub
jns
or
sahf
jmp
cmp
stc
scas
xor
test
aaa
or
imul
pop
imul
pop
in
mov
mov
imul
imul
jns
pop
shl
js
xor
mov
xor
xor
shr
pop
retf
inc
mov
cmp
pop
sub
popa
mov
sub
call
fcmovnbe
lods
fs
inc
jle
xchg
sub
outs
sub
les
loope
fild
dec
or
jmp
push
xor
arpl
cmp
cmp
and
hlt
push
das
addr16
int
or
popf
mov
xchg
adc
cmp
add
in
cmps
mov
ins
mov
push
mov
push
enter
mov
dec
out
(bad)
jne
lock
xchg
cmp
mov
jle
cmps
or
or
pop
jb
push
add
jge
scas
mov
jo
add
int
pop
outs
inc
pop
data16
pop
mov
dec
ret
mov
sbb
(bad)
jle
cs
mov
leave
lods
les
fs
jo
lahf
pop
lods
ret
dec
loopne
add
lahf
nop
ret
sub
or
lods
movs
lock
jb
cli
(bad)
cmp
loopne
or
sbb
or
push
or
add
leave
pop
mov
repnz
(bad)
pop
clc
jl
push
mov
inc
fs
push
jb
retf
pop
imul
mov
sbb
push
push
sub
fmul
test
or
or
dec
cmp
cmp
lods
or
jbe
or
push
out
sbb
inc
ja
in
xchg
push
iret
pop
imul
pop
scas
or
fcmovbe
and
mov
mov
fisub
test
and
int3
jb
xor
xor
pop
dec
clc
lahf
mov
lds
sbb
das
dec
adc
shl
test
mov
add
pop
jo
or
inc
xchg
mov
les
clc
or
sub
inc
dec
leave
bound
adc
popa
pop
mov
xchg
call
stos
add
dec
mov
or
hlt
test
and
dec
xchg
push
xchg
mov
pcmpeqb
aad
push
fnstenv
push
ins
(bad)
mov
repz
adc
cli
fld
stc
add
or
pop
hlt
sbb
inc
je
sub
in
pop
inc
add
pop
ret
sbb
cmp
and
cwde
out
int3
je
jae
or
leave
inc
scas
pop
inc
jb
push
or
imul
push
mov
mov
clc
cmps
jle
jbe
push
cmp
movs
inc
iret
ss
push
in
mov
fbstp
(bad)
add
inc
test
xor
shl
bound
daa
jae
mov
jo
jg
cld
inc
bound
push
movs
test
xchg
mov
imul
sbb
mov
je
pop
aad
call
lods
pop
clc
pusha
jbe
shl
push
sbb
(bad)
stos
pop
in
mov
sbb
mov
mov
fistp
sub
xor
pop
lock
mov
mov
add
cmp
popa
dec
clc
das
nop
out
lock
loopne
fbstp
xlat
(bad)
imul
add
jbe
(bad)
adc
sbb
mov
push
pushf
cli
imul
fstp
xor
pop
sub
jl
add
mul
sbb
ret
cdq
das
inc
into
xchg
(bad)
loopne
or
inc
adc
ins
ret
into
mov
icebp
jmp
push
std
call
adc
dec
cmp
in
xchg
and
mov
retf
inc
fs
test
mov
ret
pop
sub
jmp
sbb
xchg
cli
scas
pusha
dec
ret
pop
mov
adc
stc
and
enter
fwait
push
push
and
ins
daa
jp
xchg
idiv
iret
lods
lock
cmps
test
sahf
push
push
mov
std
cmc
mov
mov
int3
cmp
sub
(bad)
inc
inc
lds
sub
pusha
aam
sbb
scas
fsub
dec
mov
push
sti
cmps
and
cmp
xor
das
and
adc
xchg
mov
inc
loop
rol
inc
ret
lahf
pop
mov
stc
loopne
je
in
stc
bswap
push
sub
xchg
stos
or
inc
mov
icebp
loope
stos
xchg
adc
mov
sbb
add
or
fidiv
cdq
inc
jmp
in
test
inc
mov
dec
xor
add
mov
outs
xor
les
lahf
xchg
mul
test
lea
jno
add
ja
pushf
out
cmps
aad
mov
and
rcl
cli
xor
pop
das
mov
dec
ret
inc
ja
pop
push
and
mov
ins
xor
jmp
sub
inc
out
and
inc
push
stos
mov
xor
and
dec
ds
mov
repz
and
loope
aaa
test
sbb
pop
sub
int3
xchg
outs
dec
stc
rcr
mov
mov
std
outs
or
ins
xchg
cmp
sbb
push
inc
push
movs
push
add
out
jae
ins
lock
ret
pop
and
ins
sbb
sahf
cmp
sub
jecxz
repnz
mov
dec
dec
add
movs
sbb
cli
pshufw
add
or
jmp
mov
dec
ins
mov
cmp
jmp
push
cmp
cmp
or
mov
pop
ret
add
hlt
mov
nop
mov
popa
sub
fild
xor
ficomp
mov
ret
cld
jo
pop
adc
mov
(bad)
aad
ds
imul
mov
retf
push
out
mov
mov
cdq
outs
xor
xchg
adc
adc
mov
push
jle
xchg
arpl
adc
jge
cmp
or
sbb
inc
(bad)
js
fld
stos
sahf
test
jmp
pop
sahf
call
cmp
lahf
push
in
loopne
ja
das
jno
pop
adc
(bad)
sub
div
inc
cmp
push
mov
add
inc
pop
fwait
int
rol
add
sub
pop
sbb
lea
into
clc
imul
in
stos
cmp
ja
ja
sbb
cmp
in
mov
sti
push
outs
or
repz
xchg
shl
add
sbb
cmp
lods
mov
sbb
mov
leave
push
add
fbld
and
ins
lahf
mov
cld
mov
fld
les
loope
out
pushf
les
loope
cmp
dec
xchg
sar
shl
pop
test
mov
test
sub
inc
shl
jbe
(bad)
adc
test
mov
call
ins
jp
xchg
jecxz
rcr
out
push
loopne
jmp
lods
shl
pop
pop
(bad)
add
jmp
xchg
push
sub
push
(bad)
mov
mov
iret
xchg
jns
gs
dec
aaa
sbb
or
jl
mov
ds
pop
rol
or
leave
bndstx
pop
les
jnp
push
push
into
arpl
clc
xor
daa
mov
sbb
pop
loope
jae
pushf
jo
xchg
mov
mov
movs
jnp
adc
cld
and
sbb
pop
xchg
push
js
(bad)
adc
ss
inc
xchg
xchg
sub
shl
jns
mov
push
into
add
enter
cmc
inc
int3
inc
inc
and
pop
xchg
add
sbb
retf
lods
int
retf
and
in
xor
test
adc
mov
stos
jae
lock
out
imul
clc
pop
popf
addr16
jle
popa
call
into
add
push
call
into
cmp
test
push
cld
js
mov
fwait
test
sub
mov
les
push
adc
jl
dec
out
mov
mov
fs
std
mov
enter
cmp
enter
ins
xor
sti
fwait
in
jmp
mov
cmc
add
(bad)
jge
xor
enter
popf
mov
sbb
mov
pop
fmul
adc
daa
and
xchg
inc
dec
out
mov
pop
xchg
or
dec
mov
mov
shr
js
mov
in
stc
test
pop
adc
inc
pop
cli
cmp
jne
aad
les
add
mov
sub
sub
push
jo
repnz
xchg
xchg
pushf
pusha
adc
jbe
jno
int3
or
jge
fs
cmp
dec
outs
jmp
push
out
retf
int3
sar
mul
jno
sub
mov
pop
aaa
jo
xor
jno
add
lods
and
js
out
pop
inc
call
retf
stc
data16
and
rcl
push
mov
fldl2e
mov
sbb
xchg
and
je
mov
mov
add
je
jle
push
mov
call
cdq
mov
fidiv
add
in
fucomi
ins
sahf
push
stos
mov
xor
in
lock
(bad)
mov
(bad)
jmp
(bad)
mov
sbb
dec
push
lods
or
aad
sub
mov
out
pop
lods
mov
pop
mov
rol
xor
jle
pop
and
push
test
mov
mov
pushf
jae
sbb
jb
lock
shl
je
cdq
iret
fisubr
add
xor
xchg
sahf
faddp
(bad)
out
sub
imul
sub
in
adc
push
vpsubb
add
or
outs
stos
sbb
sbb
fcmovbe
jp
call
das
sbb
pop
shr
push
mov
and
jmp
test
mov
out
jb
push
fs
dec
push
lods
pushf
sub
idiv
and
std
aad
or
mov
push
push
test
or
sbb
push
je
cmp
jecxz
and
add
push
ins
or
gs
in
add
push
clc
out
or
jbe
test
mov
and
add
imul
test
outs
shl
inc
mov
gs
shr
sub
inc
push
cvtps2pi
sti
mov
inc
cmp
sub
popa
stc
(bad)
out
jecxz
int
xor
push
push
ffreep
xor
inc
outs
jge
movs
dec
xchg
cld
in
shr
push
push
cmp
das
push
push
lds
mov
ins
jp
mov
imul
out
fwait
(bad)
mov
shl
pop
push
cs
mov
ret
or
xor
and
lahf
test
mov
sbb
aaa
inc
retf
mov
gs
and
ins
pop
fwait
addr16
cmp
fistp
adc
xor
sbb
mov
or
cmp
and
adc
cmp
mov
mov
xchg
mov
adc
jmp
fwait
xor
xchg
or
rcr
jg
mul
pop
sbb
jle
push
push
jns
mov
dec
fmul
mov
in
loop
fstp
dec
mov
xchg
push
mov
mov
bound
mov
mov
xchg
loop
enter
loopne
jmp
sub
adc
add
xchg
pop
in
jmp
cmp
add
inc
repz
cmps
dec
mov
cld
sbb
scas
and
mov
push
pusha
adc
sbb
fadd
loop
or
std
or
push
sub
cmp
sti
iret
int3
xchg
aaa
cmp
xchg
or
mov
xchg
jns
fs
mov
xlat
pusha
pop
add
pop
jmp
xchg
push
stos
mov
(bad)
(bad)
fcom
lods
pop
inc
push
cld
cmp
sahf
pop
push
push
int3
in
and
or
test
pushf
arpl
mov
mov
mov
mov
fistp
cs
aas
(bad)
push
stos
dec
adc
repz
in
daa
push
inc
or
out
mov
sub
adc
mov
sub
sub
xchg
call
and
call
fnstcw
or
ins
adc
pop
mov
add
das
mov
loop
jmp
or
pop
sbb
idiv
cmps
lds
ins
jg
shr
mov
mov
push
cmp
(bad)
sahf
into
xor
mov
leave
(bad)
loop
fmul
cmps
retf
mov
call
inc
test
lds
jg
int3
leave
mov
dec
sub
outs
jno
cmp
adc
xchg
(bad)
cli
dec
push
xchg
arpl
sbb
push
cmp
xlat
cmp
repz
and
mov
pusha
movs
lea
sub
inc
outs
cld
fs
add
push
push
mov
or
push
imul
pushf
xchg
sbb
daa
ss
fmul
sub
retf
aaa
test
cmp
test
sbb
fild
movs
adc
cmp
aad
mov
or
pop
xchg
arpl
add
(bad)
or
mov
jmp
cmp
stc
sub
xchg
sub
jmp
in
inc
mov
adc
jl
mov
(bad)
nop
pop
loop
aas
(bad)
push
adc
iret
movs
push
sbb
(bad)
push
sub
pusha
test
stc
fdiv
sbb
ins
adc
jb
daa
dec
(bad)
sub
jecxz
ins
jae
(bad)
jl
pop
test
sub
and
inc
push
outs
mov
add
test
dec
adc
push
mov
nop
dec
pop
call
call
into
call
popa
es
push
fwait
cld
dec
adc
out
xor
pop
push
cmp
test
mov
mov
repnz
test
xor
mov
pop
sti
fiadd
add
shl
mov
xor
inc
popa
ds
inc
popf
scas
ror
sbb
iret
jg
xchg
jne
ja
shl
add
inc
stc
sbb
and
xor
xor
inc
repz
leave
test
pop
fs
daa
sub
adc
inc
outs
pop
jmp
fucomip
aaa
dec
dec
test
scas
sub
rol
outs
pop
jae
imul
jle
aas
push
les
jno
xchg
mov
enter
push
(bad)
jmp
mov
neg
dec
into
call
out
or
jb
xchg
sti
mov
xor
mov
sub
mov
lods
nop
retf
push
jns
inc
jne
mov
into
fistp
pop
sub
out
and
sbb
(bad)
fild
ret
enter
sub
adc
jp
cmps
adc
fidivr
loopne
pop
jmp
cmps
ss
mov
test
mov
nop
mov
cld
or
pop
fsub
adc
jge
xchg
imul
int3
movs
jne
stos
mov
lock
dec
or
push
addr16
xor
pop
sbb
cmp
leave
xchg
adc
leave
test
aas
cmp
pop
inc
xchg
mov
out
retf
mov
loopne
dec
inc
out
ja
jno
xor
es
int
pop
test
cmp
data16
mov
ja
mov
mov
fs
outs
leave
dec
dec
aaa
sub
mov
in
shl
xor
mov
and
add
jae
stos
in
retf
outs
jl
ss
sbb
xchg
or
sbb
cmps
clc
xor
repnz
xor
cmp
adc
adc
jne
mov
shl
sbb
rcl
jae
dec
mov
inc
pop
pusha
jmp
xchg
clc
dec
shr
pop
mov
hlt
iret
adc
(bad)
nop
retf
mov
push
lock
movs
in
or
ror
pop
pop
shr
xchg
jae
mov
imul
add
xor
jmp
add
inc
test
jnp
imul
jnp
cld
imul
or
mov
shr
mov
lock
jle
xor
pop
out
out
mov
cmp
idiv
add
dec
push
jbe
loopne
mov
xor
xor
inc
xchg
pop
les
xlat
pushf
xchg
icebp
popa
mov
leave
xor
std
pop
jbe
adc
loopne
enter
jno
rcr
pop
and
sub
lods
test
jmp
out
cmps
mov
out
mov
sub
icebp
mov
push
mov
jmp
push
xor
jmp
jle
jle
pop
jmp
mov
in
dec
fxch
xor
mov
jns
sbb
cmc
inc
adc
and
ret
pop
repz
pop
sbb
cs
and
adc
std
daa
adc
or
push
idiv
aaa
push
xor
mov
xor
sti
or
into
cs
(bad)
cmp
out
pop
and
cmps
repz
test
mov
(bad)
test
cmc
mov
adc
pop
pop
pop
push
pop
ror
pop
pop
fwait
stos
xchg
aaa
lea
mov
sahf
es
je
je
cmp
mov
jae
pop
mov
stos
sub
push
test
mov
cmp
sub
pop
repz
mov
cmp
bound
data16
xor
ins
scas
out
sbb
not
pop
inc
je
jmp
jns
scas
sbb
cmp
mov
retf
push
xchg
xor
in
and
xor
(bad)
into
pop
push
push
cmps
xchg
and
lea
mov
outs
out
mov
lea
add
pop
lahf
and
sub
fisttp
ret
jmp
test
fs
adc
js
mov
js
int3
xchg
sub
cmp
push
fcomip
cwde
es
jb
movs
call
ficomp
mov
fsubr
and
hlt
mov
adc
push
or
cdq
test
sbb
sub
rcr
push
scas
scas
hlt
dec
push
jb
mov
mov
and
xchg
sub
dec
hlt
mov
sbb
sbb
mov
popa
mov
xchg
inc
arpl
pop
dec
in
or
pop
outs
or
xchg
adc
sub
push
movs
fnstcw
outs
enter
iret
out
sub
mov
mov
div
push
pop
fisubr
cmp
dec
xchg
xchg
xchg
xchg
(bad)
cmp
les
pop
out
hlt
movs
jp
and
popa
cmp
push
inc
adc
scas
popf
ror
adc
adc
push
sub
xchg
call
and
pop
jle
sbb
lods
std
retf
(bad)
mov
pushf
push
cmps
sub
loop
jnp
pop
jnp
mov
mov
call
(bad)
fdivr
cmp
xchg
das
test
shr
fiadd
mov
sub
add
mov
xor
int
rol
pop
push
retf
outs
or
adc
(bad)
jmp
dec
jb
stos
enter
add
lea
data16
cmp
add
scas
or
and
(bad)
out
or
(bad)
adc
push
daa
xor
out
test
jle
mov
pop
push
movs
mov
mov
clc
mov
pop
in
cmp
out
outs
inc
mov
xchg
addr16
push
jg
into
and
scas
add
lock
popa
add
mov
mov
cmp
jmp
bswap
in
addr16
enter
bnd
push
pop
mov
push
adc
pop
sbb
repnz
les
loop
div
and
stc
jmp
daa
cwde
push
xchg
adc
rol
sub
ins
jecxz
mov
inc
popa
daa
mov
push
aas
cmps
sbb
jl
xor
adc
fiadd
stos
lds
lock
jmp
add
mov
cwde
ror
int
mov
pop
jne
rcr
mov
ret
cwde
push
cmp
xchg
xchg
jo
in
jbe
jmp
(bad)
test
iret
cmp
and
mov
inc
scas
loop
and
cmps
lds
sbb
repz
aad
out
inc
pop
iret
loopne
(bad)
xchg
push
rcr
cmp
dec
movs
rcl
mov
dec
hlt
in
sbb
scas
sahf
mov
scas
mov
std
retf
adc
jmp
cld
dec
ins
cdq
jmp
mov
cmp
xor
call
(bad)
shl
sub
mov
jne
push
scas
ficom
aad
jmp
dec
pop
fadd
dec
adc
retf
mov
lods
mov
pop
imul
push
jb
daa
call
retf
stc
aas
push
or
jb
jle
pop
pop
ins
sub
inc
mov
pop
jno
test
adc
and
outs
sub
sbb
dec
scas
adc
and
hlt
(bad)
out
movs
pop
mov
xor
loopne
in
adc
out
adc
mov
push
adc
dec
cmps
ficomp
fsubr
adc
or
in
lods
xor
repnz
xchg
inc
adc
and
sbb
push
mov
dec
and
aas
mov
mov
leave
sbb
lock
loopne
dec
adc
pop
mov
scas
push
xor
mov
jae
cdq
pop
mov
dec
retf
das
es
repz
popf
mov
in
mov
mov
cmc
mov
clc
sti
fidiv
mul
cmp
call
into
pop
fisttp
add
push
mov
idiv
ss
loope
mov
out
imul
xor
mov
imul
jne
lods
cmp
push
add
pop
ins
xor
inc
cmp
mov
dec
mov
add
mov
mov
cmp
xchg
sar
call
xor
or
dec
or
dec
inc
or
popf
add
xchg
mov
and
dec
fst
mov
xchg
add
sar
add
mov
inc
cdq
jbe
dec
out
dec
pushf
shl
call
fimul
mov
cs
fisttp
out
sub
sbb
inc
rcl
xlat
mov
cmp
xchg
mov
aam
jp
mov
add
sbb
aaa
jl
stos
jb
outs
and
xor
xchg
sub
adc
fst
outs
pop
push
or
push
cmp
sub
inc
fst
cli
xchg
jg
add
jmp
sbb
push
movs
push
jp
mov
pop
imul
mov
ficom
in
ffreep
or
mov
lds
push
shl
sbb
and
mov
xor
jmp
ss
mov
rcl
stos
and
push
mov
xor
add
nop
push
mov
outs
cli
out
push
inc
clc
cmp
jl
clc
fisttp
div
mov
in
cmp
sub
jg
add
lock
icebp
pop
inc
fiadd
stos
mov
mov
push
retf
shl
loopne
sahf
pop
mov
jbe
gs
neg
icebp
sub
mov
mov
(bad)
imul
mov
add
movs
or
xor
in
mov
ja
mov
mov
xchg
adc
jmp
xchg
or
pop
sbb
loop
shl
jp
(bad)
popf
mov
push
fs
sub
cli
fwait
jl
mov
mov
jmp
add
inc
cmp
push
out
push
repnz
pop
int
loop
lahf
in
out
into
cdq
push
(bad)
and
sahf
sahf
xchg
ror
push
jl
std
test
pop
repz
ss
push
cmc
lock
pushf
int3
(bad)
test
vxorps
cmp
jae
mov
xchg
xor
icebp
daa
pushf
cld
sbb
fsub
and
shl
mov
mov
enter
mov
adc
int3
mov
push
inc
and
(bad)
jp
push
push
sbb
icebp
ret
mov
mov
xchg
test
imul
push
mov
xor
rcr
sbb
daa
inc
push
inc
fnstcw
adc
ja
js
mov
mov
sbb
call
xchg
and
push
adc
(bad)
movs
xchg
xchg
cmps
pop
lods
add
xchg
jo
loope
mov
or
jl
adc
sub
xlat
xor
dec
nop
push
iret
pop
loop
mov
sti
sub
test
loop
or
mov
sbb
sub
lods
out
mov
pop
mov
cmps
mov
cwde
and
xchg
jp
lahf
aaa
add
cmp
sbb
push
aaa
scas
sbb
sub
jns
mov
outs
ret
shl
xchg
push
loope
mov
pop
adc
xchg
jmp
push
in
pusha
test
jmp
push
inc
ret
movs
movs
pop
pop
add
and
aad
test
or
daa
aad
pop
std
mov
das
mov
push
popf
xchg
sub
jae
jle
xchg
ja
mov
bound
adc
adc
pop
enter
and
push
(bad)
xchg
sub
sbb
popf
inc
xor
cmp
xchg
push
clc
and
cmp
sub
jmp
mov
lock
out
test
mov
jp
mov
call
fimul
cmp
push
mov
cwde
mov
int3
sub
aaa
and
loop
sahf
adc
jle
pop
loop
jo
sbb
stos
lea
into
and
adc
outs
inc
sbb
fidivr
fsub
sub
and
adc
icebp
and
in
les
repz
in
jo
daa
mov
jp
adc
mov
inc
cmps
inc
dec
sbb
in
add
gs
jle
ret
pop
gs
sub
or
mov
mov
aaa
and
inc
adc
adc
push
or
pop
push
sti
xor
mov
int3
push
(bad)
into
or
test
sub
inc
mov
pop
aas
dec
out
push
mov
jb
cmp
sar
stc
jno
mov
es
dec
retf
cli
mov
leave
imul
mov
xor
std
test
repnz
clc
mov
mov
push
pop
jmp
inc
or
mov
ret
jecxz
test
sbb
imul
mov
and
mov
out
lods
xchg
cmp
jae
pop
mov
call
sbb
mov
pop
adc
add
inc
mov
mov
push
popa
es
jl
push
push
mov
jg
in
xor
jnp
stos
std
adc
daa
repz
adc
retf
repz
stos
clc
adc
inc
in
mov
cmps
cmp
dec
data16
fdivp
adc
inc
loop
int3
cwde
pop
mov
mov
add
or
in
add
into
lds
push
and
shl
dec
cdq
pushf
mov
je
push
push
ins
cli
add
mov
cmp
iret
push
mov
in
inc
test
or
jo
loope
test
mov
popf
sbb
ficom
adc
hlt
xor
sbb
cmp
cmp
cmps
push
adc
out
cmp
mov
loopne
lds
and
rcr
xchg
and
ins
movs
lods
in
mov
push
jne
fisttp
mov
enter
dec
in
or
gs
add
bswap
leave
in
lds
jnp
pop
mov
ss
and
xchg
jecxz
arpl
xchg
sub
call
jae
je
ret
lods
not
pop
aaa
div
test
push
adc
retf
push
loope
dec
scas
pop
push
sbb
clc
push
dec
xor
cmc
push
test
xchg
scas
ds
mov
shl
fndisi(8087
mov
(bad)
jg
jmp
xor
push
les
xchg
mov
outs
stc
cmp
shl
cmp
sub
sub
push
aas
(bad)
pop
in
jge
stos
push
jns
les
or
adc
aas
xchg
sbb
repz
rcr
stos
sti
data16
inc
sub
xor
mov
inc
add
loopne
xchg
pop
or
lods
xor
lock
les
mov
out
mov
daa
movntq
mov
cld
ja
cmps
or
push
adc
dec
stc
icebp
dec
sbb
ss
repnz
mov
inc
jmp
ins
sahf
call
ds
loop
xchg
in
mov
xchg
icebp
aaa
cmc
and
fidiv
or
push
dec
xchg
addr16
scas
clc
retf
mov
dec
push
repnz
adc
cmp
sub
mov
inc
jo
mov
stos
xchg
xchg
mov
mov
into
inc
dec
push
push
stc
jo
dec
not
push
xlat
xor
push
mov
jmp
call
(bad)
outs
shl
fbld
jl
sub
test
add
arpl
adc
pusha
arpl
adc
aad
xchg
xchg
xor
push
fidiv
and
xlat
bound
mov
stos
addr16
adc
jg
hlt
fwait
test
push
adc
inc
enter
sbb
jo
loop
push
and
outs
outs
imul
push
ss
jg
inc
rcl
movs
popa
test
popf
jle
pushf
neg
mov
jb
xor
clc
dec
fadd
sar
xor
mov
ds
push
call
dec
cwde
out
push
sbb
(bad)
test
adc
and
outs
mul
test
jle
rcr
xor
(bad)
cdq
push
fwait
in
sbb
sub
jae
push
les
ins
scas
ss
test
loop
inc
push
lahf
loopne
out
mov
call
sub
and
(bad)
jmp
cmc
xor
push
out
push
dec
mov
shl
call
fs
adc
mov
mov
(bad)
aad
mov
push
dec
push
xchg
dec
lods
jns
push
test
xchg
rcl
pop
lods
pop
ss
add
dec
fmul
wrmsr
mov
cmp
in
xadd
leave
xor
movs
mov
aas
xor
sub
inc
outs
mov
addr16
ror
add
jns
cmp
loop
push
iret
jne
jmp
cmp
mov
jl
aaa
mov
pop
ret
cmp
movs
jb
clc
pop
in
cmp
push
adc
and
mov
mov
fstp
xchg
mov
add
jle
je
dec
xchg
or
mov
in
inc
sub
and
jo
cmp
push
ret
mov
into
mov
cmc
call
add
psrld
add
push
push
sub
int
xor
inc
scas
into
mov
sbb
mov
enter
mov
add
mov
pusha
in
out
(bad)
inc
jg
pop
scas
sbb
push
dec
add
pop
out
push
or
mov
movs
or
int
dec
add
mov
fcom
ffree
out
add
retf
xchg
stc
aaa
xor
mov
and
ror
pusha
or
adc
cmps
ja
lahf
xor
cmp
aam
mov
sub
(bad)
pop
inc
cmp
cmp
mov
hlt
ficom
jp
hlt
ja
mov
mov
adc
cmp
and
or
push
cld
push
jo
in
mov
bound
adc
jno
sar
pop
push
sbb
aad
sbb
lock
inc
jnp
jge
cmc
out
cmp
sbb
lea
out
jns
xor
fwait
or
mov
and
movs
std
sub
fcmovnu
push
nop
bound
dec
(bad)
xchg
push
push
arpl
mov
cmp
lahf
pusha
outs
xor
push
mov
add
dec
mov
outs
mov
lahf
sub
leave
mov
imul
and
mov
xor
jmp
dec
push
std
mov
scas
xchg
dec
retf
mov
mov
arpl
imul
xchg
push
mov
jmp
mov
shr
sbb
sub
repnz
mov
orps
ins
(bad)
punpcklbw
and
push
movs
retf
inc
sti
bnd
adc
scas
addr16
fnstcw
jb
xchg
mov
sbb
nop
dec
dec
dec
pop
shr
xor
mov
movs
mov
mov
shl
sbb
xor
repz
xorps
leave
clc
jne
retf
movs
pop
adc
into
mov
fldenv
(bad)
out
xor
cld
add
push
lds
test
xchg
xor
jecxz
das
dec
movs
repnz
adc
push
pop
into
in
imul
ja
mov
call
mov
or
out
jp
js
jbe
jmp
mov
mov
lds
aas
inc
popa
and
pop
cmp
cmp
pop
add
or
aam
int
sti
fstp
sub
(bad)
cmp
pushf
rcr
xchg
pop
mov
retf
jnp
add
out
fld
fsubr
inc
sub
sahf
lock
add
int
sub
mov
retf
jg
jno
rcl
lds
jb
fs
arpl
cmps
jb
les
push
mov
cld
mov
dec
gs
mov
xor
mov
and
popf
push
loope
repz
out
mov
add
dec
add
rol
jmp
dec
les
outs
bound
dec
retf
or
push
std
mov
and
sub
jo
mov
mov
out
int3
adc
sahf
int
mov
fistp
js
mov
mov
or
pop
mov
(bad)
enter
(bad)
xchg
jg
shl
lods
push
mov
fisub
add
in
dec
push
pushf
call
xchg
shl
dec
pop
and
mov
and
sahf
dec
adc
push
mov
cwde
call
jmp
dec
or
ss
ins
ins
jmp
cmp
jnp
xor
fwait
out
jmp
xchg
sbb
xchg
mov
sub
jge
das
std
pop
jle
enter
test
in
xor
mov
mov
inc
jb
pop
xor
jbe
movs
inc
inc
out
sub
rol
jl
lahf
enter
mov
inc
mov
pop
xor
in
cld
xchg
mov
mov
out
pushf
push
iret
jb
scas
test
mov
sahf
pop
jge
scas
lea
jmp
(bad)
dec
xchg
int3
inc
push
add
xor
mov
dec
push
cwde
addr16
sar
hlt
stos
lods
popa
not
nop
mov
ss
sahf
imul
add
(bad)
js
add
cmovno
clc
dec
and
mov
in
fstp
and
xor
sub
ret
(bad)
and
out
cmp
push
out
fwait
retf
sub
stos
or
adc
fdivr
ss
ins
adc
aaa
dec
ret
sub
ins
sbb
(bad)
psrlq
inc
jmp
pop
int
mov
out
or
outs
ja
in
mov
outs
cmp
dec
inc
mov
adc
rcr
xchg
pop
sbb
mov
and
imul
imul
mov
mov
cmc
test
lahf
das
repnz
push
pop
sbb
mov
sbb
shr
fwait
push
or
sbb
movs
xor
scas
add
add
adc
jmp
retf
mov
cmp
je
ret
xor
in
std
jle
adc
mov
mov
mov
pop
pop
adc
add
retf
mov
or
inc
ret
aam
and
mov
neg
std
cmc
jo
inc
in
pop
sub
dec
or
pop
(bad)
mov
int3
mov
in
cmps
les
sub
jl
xor
sbb
shl
pop
test
dec
(bad)
push
ds
push
fistp
jbe
cs
xchg
pusha
jno
aad
(bad)
xchg
cmps
and
pop
jmp
adc
stc
cmp
sub
retf
movs
mov
daa
loopne
jmp
sahf
fcom
movs
js
fisubr
shl
mov
in
sar
xchg
(bad)
sub
inc
jmp
nop
addr16
jbe
(bad)
pop
fild
jmp
in
cmp
fbld
cmp
jne
in
dec
mov
mov
pushf
jno
dec
sub
sti
stos
dec
push
rcr
out
popa
fs
mov
or
loop
in
xor
in
sub
mov
dec
jnp
(bad)
out
jb
movs
into
repz
mov
sbb
out
lds
fiadd
adc
lea
aaa
test
pop
cmp
mov
ss
cmp
scas
lods
mov
cmp
mov
sub
retf
jg
ins
add
(bad)
neg
(bad)
xchg
sbb
cli
(bad)
xchg
and
shl
mov
(bad)
leave
inc
data16
neg
mov
mov
jno
dec
pop
test
ret
out
sbb
ret
fs
and
enter
outs
sub
dec
mov
nop
jae
test
mov
push
jo
push
push
pop
ror
fild
sub
or
outs
jmp
mov
hlt
pop
js
jo
push
add
call
ins
jg
das
pop
pop
inc
sar
dec
idiv
cmps
fsub
mov
sub
pop
in
stos
push
mov
aad
add
sar
xchg
mov
sub
xchg
xchg
mov
lock
push
mov
test
in
push
push
pop
addr16
ret
movs
fwait
movs
leave
arpl
xchg
pop
push
push
pop
push
xor
cmp
xchg
mov
mov
inc
in
sub
cmp
push
in
mov
movs
mov
mov
sbb
(bad)
out
inc
add
cmp
or
push
mov
(bad)
(bad)
repnz
and
and
ins
dec
mov
dec
les
ror
mov
lock
inc
scas
ins
mov
loop
pop
xor
movs
xor
cmp
dec
add
scas
retf
sbb
xchg
push
icebp
mov
in
mov
ds
fidiv
(bad)
fist
pop
in
cmc
arpl
push
xor
das
jmp
in
mov
(bad)
jmp
imul
iret
xchg
repz
inc
or
xchg
(bad)
aam
icebp
push
xchg
xor
retf
push
enter
jmp
enter
leave
scas
out
mov
cmp
jmp
and
fcmovne
aam
inc
ficom
xlat
inc
lahf
lods
stos
enter
jnp
sti
mov
adc
stc
or
xlat
je
xor
mov
nop
lea
or
or
xchg
aaa
jle
mov
pusha
inc
dec
imul
mov
dec
jmp
shl
test
ret
jle
jle
aas
fwait
jno
aad
xor
fmul
and
repnz
fs
das
cmp
ja
stos
push
cmp
jmp
std
lock
jl
dec
sar
push
xchg
pop
sar
cmps
retf
jae
int
xchg
popf
shl
mov
xlat
stos
rol
cmps
mov
call
dec
imul
stc
addr16
pop
mov
inc
cdq
sar
mov
mov
add
pusha
cmps
(bad)
sahf
jmp
jecxz
fwait
mov
and
mov
call
call
or
fist
out
mov
std
lods
adc
and
push
add
in
hlt
cmc
pop
jno
(bad)
push
test
jmp
inc
pop
jl
fcmovb
mov
inc
rcr
repz
jbe
cmp
cmc
inc
std
pop
xchg
popf
pushf
std
sub
data16
aas
inc
pushf
cmp
out
sub
cmp
add
fistp
adc
out
cs
test
pop
cli
aam
xor
in
dec
popa
fiadd
sbb
mov
mul
and
mov
mov
push
jne
sbb
out
mov
lahf
cmps
scas
fmul
movd
scas
loope
icebp
jg
and
movs
pop
je
pop
xchg
inc
push
add
mov
sar
pop
sub
jnp
pop
outs
pop
int
cli
mov
(bad)
and
sbb
bound
xor
pop
push
pop
mov
fs
sub
xchg
xchg
sbb
out
popf
or
adc
mov
push
lds
aad
lea
sub
fidivr
call
repnz
sbb
pop
std
push
mov
lea
or
sbb
adc
jbe
popa
cld
shl
mov
nop
jno
xchg
sbb
out
iret
xchg
jae
mov
mov
out
jecxz
mov
cmc
mov
sbb
xor
jmp
lds
inc
ins
popf
sub
add
cmps
out
icebp
push
rcr
jo
xor
lods
jecxz
jne
adc
daa
adc
push
or
pop
push
adc
cwde
adc
jmp
hlt
xlat
mov
fild
into
idiv
dec
and
inc
xchg
enter
outs
test
push
ins
add
add
js
rol
push
outs
sbb
pop
jne
lods
mov
push
add
lods
fnstcw
in
sbb
dec
into
mov
and
inc
ins
jge
ja
mov
ss
or
mov
(bad)
push
stos
(bad)
fnstenv
dec
inc
nop
xchg
ins
out
mov
mov
xchg
or
fisubr
pop
inc
pop
xor
mov
test
push
adc
mov
clc
jge
mov
pop
xor
aam
or
loopne
cdq
sbb
shl
jne
lods
push
ror
cs
loope
or
cmc
sbb
adc
sti
sub
adc
xor
push
and
adc
mov
push
mov
and
jne
retf
cmp
(bad)
adc
lahf
sub
clc
aaa
push
and
sub
outs
jle
pop
sbb
in
mov
pop
aas
dec
mov
adc
inc
xor
adc
push
rcl
aam
and
mov
jecxz
(bad)
loop
cmp
mov
sbb
push
sti
ss
call
add
inc
je
xor
adc
add
push
dec
or
retf
pushf
add
adc
fist
or
mov
out
retf
mov
cmp
(bad)
xchg
pop
inc
div
pop
imul
ds
mov
test
fidiv
jae
sbb
push
jmp
es
add
fmul
ss
and
enter
or
mov
ret
or
and
popf
add
sub
mov
or
or
bound
jg
pop
sbb
mov
rol
rcr
cwde
mov
cmc
(bad)
xchg
xor
xchg
icebp
into
cwde
stos
(bad)
jmp
mov
std
popa
and
test
mov
(bad)
push
adc
mov
push
mov
cmp
(bad)
and
sub
rol
int3
push
xchg
retf
add
jmp
loop
or
hlt
mov
popf
mov
mov
mov
jl
xor
jl
cmp
pushf
mov
hlt
repnz
out
sbb
je
mov
cmp
les
or
mov
loope
mov
ins
in
and
movs
push
mov
(bad)
dec
cmp
pop
in
(bad)
int3
cs
sbb
imul
push
jne
push
jg
mov
ret
mov
push
mov
sub
mov
stos
inc
xor
shl
sbb
stos
lods
loopne
jecxz
(bad)
dec
aam
cmp
arpl
loopne
xor
ficomp
pusha
int3
add
mov
adc
dec
xor
mov
aaa
sar
mov
call
adc
jnp
xor
xchg
mov
add
push
fnstenv
lds
xchg
cmp
sub
call
out
inc
pop
adc
xor
xor
in
cmp
ficom
xchg
punpcklbw
push
std
movs
(bad)
es
mov
mov
fwait
cmp
sbb
mov
aad
push
int3
jne
mov
jne
sbb
loopne
jp
and
sub
daa
add
adc
jecxz
mov
cmps
call
inc
cmp
jp
sar
xchg
imul
and
mov
das
aad
inc
lods
adc
pop
xchg
push
adc
cmc
fs
inc
(bad)
cli
push
mov
retf
or
xchg
mov
mov
inc
xchg
mov
cmp
test
das
mov
ins
fbld
shl
xor
lahf
push
fdivr
mov
xchg
sbb
(bad)
mov
and
mov
cs
(bad)
mov
ret
cmp
sbb
rcr
xor
and
sbb
mov
ss
es
imul
jp
mov
fdivr
pusha
or
push
in
in
xlat
dec
pop
je
das
pop
pop
jge
js
popf
movs
arpl
cmp
fld
xchg
icebp
aam
pop
pop
call
xchg
dec
jae
cmp
mov
add
pop
in
cs
pop
imul
dec
or
cdq
pop
xchg
xor
add
cmp
mov
nop
xchg
out
mov
int3
jmp
sar
pushf
ins
cwde
pop
ins
or
inc
rol
sub
outs
mov
mov
pop
xchg
lods
out
jmp
dec
icebp
cwde
mov
and
imul
sbb
pop
push
(bad)
movs
repz
ins
dec
jl
gs
mov
out
int3
or
push
mov
jns
xchg
adc
mov
inc
pop
ret
sub
inc
fcom
dec
xchg
push
add
mov
loopne
outs
pop
arpl
add
pop
pop
adc
xchg
push
into
pop
je
sbb
cmp
sbb
push
pop
or
popa
dec
fcom
xor
dec
mov
aas
mov
stos
cli
jae
jnp
ins
push
pop
xor
cmc
inc
and
movs
pusha
outs
jo
(bad)
stos
outs
and
jb
mov
fistp
mov
(bad)
in
push
cmp
xchg
leave
outs
xlat
adc
push
aas
pushf
icebp
mov
test
fstp
add
inc
repnz
mov
cmps
and
or
test
shr
mul
sub
adc
lock
sti
adc
dec
and
stos
loop
cmp
jne
bound
cmps
push
jno
rcl
or
add
xchg
mov
in
nop
adc
loope
outs
mov
or
test
inc
xor
arpl
inc
sub
xor
xchg
int
dec
dec
pop
fidiv
jo
leave
jmp
push
cs
sbb
out
cli
pusha
sahf
int
mov
fisttp
out
and
scas
into
rol
and
pusha
ins
sub
or
jne
mov
cmp
sub
rol
mov
xlat
jg
shl
movs
mov
jg
pop
je
mov
jne
add
cmps
sub
sbb
jl
in
call
cs
mov
jg
push
in
cmp
or
call
stos
call
xchg
shl
popa
xor
cmp
cmps
mov
in
push
popf
enter
sbb
sub
out
xor
cmp
sbb
sub
aad
sub
rcr
iret
das
rcr
inc
jae
push
xlat
in
xor
jmp
jle
sti
sbb
jb
stos
cmp
xlat
xor
xlat
add
sub
or
and
(bad)
and
lock
or
dec
ss
jno
lock
fcom
jmp
enter
xchg
push
and
adc
xor
mov
sbb
mov
mov
adc
cdq
and
sub
popa
lea
sub
loopne
aam
ret
jnp
inc
adc
repz
jno
lods
cwde
dec
ret
pusha
ret
mov
pusha
xchg
adc
pop
pop
or
shl
std
jo
psubd
xchg
dec
in
frstor
movs
inc
or
shr
(bad)
retf
out
popa
dec
mov
rol
fld
(bad)
sar
xor
fimul
mov
and
pminub
jae
sbb
mov
imul
jne
add
cmp
stos
fs
mov
push
leave
xchg
mov
cwde
sub
xlat
lahf
je
pop
mov
xchg
stc
dec
mov
dec
ret
es
ins
jne
pop
xchg
add
dec
cmp
retf
daa
sub
jno
push
call
pop
faddp
sub
das
out
fcomp
xor
sub
xchg
inc
cld
call
sub
retf
add
pop
sub
scas
push
outs
scas
xor
imul
mov
aam
jge
push
test
jmp
jo
sub
mov
jnp
addr16
pop
mov
push
push
sbb
jge
out
test
pop
mov
or
pop
stos
push
loop
aaa
int3
mov
mov
cmp
(bad)
rcr
pop
dec
mov
sub
xchg
mov
out
xor
dec
lock
jmp
test
inc
add
push
jo
in
inc
outs
sub
and
mov
data16
lods
popa
pop
jb
mov
aad
xchg
add
mov
cmp
cdq
mov
push
pop
mov
ja
fs
adc
js
inc
pop
mov
je
mov
sub
cmc
into
outs
xor
xor
mov
adc
outs
jg
sub
leave
adc
adc
repz
movs
cmc
pop
add
push
adc
lock
fcmovb
xor
das
add
fsub
jl
add
imul
mov
clc
sahf
adc
(bad)
imul
pop
loope
jbe
mov
inc
inc
jns
xchg
mov
fsubr
sub
jo
je
loop
movs
bound
mov
add
mov
sub
push
ins
inc
std
xchg
pop
fidivr
adc
jmp
js
call
mov
pop
jno
sbb
fidivr
sar
js
mov
or
jp
push
xchg
cdq
sub
test
push
xchg
daa
or
scas
out
iret
inc
and
es
inc
xor
pop
aas
cmps
jp
out
daa
std
fdivr
push
push
arpl
pop
call
jg
ins
pop
int3
adc
jbe
xor
ins
sub
mov
pop
outs
cs
ret
inc
lea
(bad)
ins
loop
sar
movs
xor
and
sub
push
fiadd
push
push
sbb
leave
xor
cmp
retf
jecxz
mov
mov
add
mov
imul
aaa
xchg
iret
dec
fcmovne
mov
xor
sbb
jg
(bad)
sbb
mov
cdq
fstp
mov
xchg
ss
movs
sbb
fidivr
iret
or
ret
jecxz
sbb
popf
push
jmp
aad
adc
ins
pop
ret
adc
pop
pop
cmp
mov
sbb
cmp
dec
daa
jle
dec
(bad)
fdivr
jg
ins
arpl
data16
ficom
sub
add
inc
and
dec
shl
dec
mov
scas
out
xor
jno
popa
cmovns
bnd
mov
ficom
jg
xor
sbb
ins
mov
mov
test
(bad)
sbb
jmp
test
pop
sbb
inc
addr16
clc
sub
add
sar
cdq
test
cmc
add
push
sbb
push
xlat
jg
imul
test
pop
mov
pop
movs
mov
sti
xchg
jns
fwait
aas
xchg
es
pop
int3
inc
cdq
cmp
inc
(bad)
mov
push
xor
adc
cmp
rol
xchg
push
(bad)
aad
jbe
jmp
xor
mov
dec
inc
call
popa
or
push
push
fsubr
pop
jp
inc
das
jae
add
repnz
inc
fdiv
iret
jl
rcl
push
push
call
loope
fs
je
sub
jge
push
sub
ret
push
aaa
sahf
inc
into
mov
pop
mov
mov
push
sahf
mov
fadd
jp
lds
in
sub
aam
fwait
repnz
movs
das
push
push
pop
xlat
cmc
stos
lock
add
lahf
xor
test
sbb
ror
test
cmps
out
mov
mov
push
ins
(bad)
rep
fdivr
pusha
(bad)
jno
cmps
das
dec
push
loop
je
xchg
sbb
out
mov
inc
scas
inc
xchg
push
dec
addr16
stos
inc
ds
das
and
sbb
rcr
sbb
test
repz
mov
cmp
xchg
dec
bound
or
pop
dec
inc
pop
inc
mov
int
adc
and
rol
dec
test
jne
adc
and
sub
fisttp
ret
adc
jecxz
mov
jge
retf
js
aad
push
jmp
dec
lods
gs
fmul
jb
or
rol
shr
jl
inc
jae
(bad)
cmp
mov
sbb
xchg
inc
xor
out
jno
cmp
test
ja
xlat
stos
mov
inc
in
mov
lea
les
ret
inc
out
mov
gs
mov
aas
xchg
es
in
jno
out
jnp
ret
(bad)
call
iret
(bad)
mov
movs
dec
xchg
mov
push
xor
inc
inc
xchg
sub
mov
lock
ret
(bad)
test
mov
lds
(bad)
loope
and
cmp
addr16
fmulp
push
int
cwde
not
cmp
add
adc
rcl
sub
ja
in
mov
inc
les
fcomi
lahf
mov
loopne
cs
arpl
mov
mov
out
ret
idiv
or
or
jnp
test
inc
jo
dec
mov
rcr
jle
dec
loop
xchg
imul
in
movs
jno
fdivr
clc
xchg
test
movs
xor
xchg
sti
into
dec
imul
mov
cs
loop
leave
xchg
(bad)
xor
in
ldmxcsr
rol
mov
call
frstor
jnp
jmp
fdiv
add
xlat
push
pop
test
jnp
fist
push
cmp
mov
aad
mov
test
cld
adc
push
push
in
xchg
std
xor
lods
in
mov
sbb
fbld
sub
mov
adc
mov
scas
pop
or
es
sar
into
dec
mov
dec
sub
dec
bound
aad
jmp
mov
(bad)
or
push
push
fwait
scas
mov
xchg
pop
mov
movs
mov
push
scas
out
mov
mov
fnstsw
stos
leave
fnsave
mov
inc
cmc
lds
pop
lods
pusha
fcom
inc
cmp
cmc
sbb
test
mov
loop
dec
imul
cmps
neg
adc
cwde
inc
mov
fwait
dec
xchg
popf
idiv
iret
jbe
scas
sub
repz
icebp
clc
ret
mov
pop
cwde
sub
sub
imul
jnp
mov
and
dec
popa
call
push
pop
or
jno
push
mov
ja
call
leave
xor
cmp
sub
mov
mov
idiv
arpl
sbb
addr16
stos
xchg
jmp
cmp
jns
mov
std
rcr
push
mov
and
push
xchg
sbb
iret
in
xor
cdq
ret
xor
jbe
and
inc
mov
leave
hlt
outs
bound
mov
in
sahf
cmp
cmp
cli
and
scas
and
sahf
pop
push
movs
test
aas
mov
xchg
movs
out
sbb
jmp
test
inc
push
inc
mov
out
pop
mov
push
adc
cmp
mov
push
rcl
retf
jne
inc
cmp
fdivr
or
(bad)
sbb
jmp
or
jmp
fs
(bad)
ja
mov
call
fadd
pop
inc
jmp
outs
jp
ret
(bad)
ds
icebp
and
or
fidivr
xlat
lds
ins
ss
jecxz
cmp
data16
and
cmp
retf
push
clc
ret
repnz
int
dec
dec
sub
popa
fisttp
xchg
pop
sub
pop
or
mov
pop
cmp
pop
pop
pop
ds
add
popf
in
push
xchg
or
pushf
adc
scas
ror
out
pop
ins
jg
je
shl
and
sahf
aad
adc
fldcw
mov
xchg
shl
push
stc
sbb
cmp
sbb
adc
xchg
(bad)
adc
mov
push
sub
imul
add
test
(bad)
push
cmp
mov
adc
xchg
cmp
icebp
bound
fld
add
pop
mov
dec
aad
mov
push
add
test
fwait
inc
fld
or
dec
inc
sbb
adc
push
pop
push
and
pop
xor
push
jne
test
cwde
cs
aaa
adc
push
cwde
jg
mov
nop
push
inc
add
mov
mov
sub
int3
adc
pop
pushf
imul
push
lods
in
push
push
jne
jb
mov
(bad)
jmp
xchg
in
pop
pop
data16
fiadd
sahf
mov
mov
aas
neg
adc
mov
es
add
inc
add
ret
out
jb
outs
mov
test
pop
ds
repz
xchg
leave
aaa
mov
lahf
lock
popa
xor
adc
mov
cmps
add
sahf
ja
stos
dec
sub
adc
lea
dec
cmps
mov
stos
cmp
scas
in
rcr
mov
inc
aas
jle
rcr
mov
imul
or
enter
pop
es
jo
pop
push
mov
je
retf
lds
dec
sub
outs
fyl2x
hlt
fwait
and
adc
(bad)
mov
mov
dec
xchg
mul
push
cmp
(bad)
into
push
into
sub
xchg
retf
pushf
dec
sbb
loop
hlt
aam
sbb
scas
int3
xor
(bad)
mov
xor
(bad)
(bad)
jb
xchg
cmp
mov
jb
mov
movs
out
lock
cmp
pusha
pop
fisub
mov
lock
shr
mov
in
cmp
nop
mov
inc
dec
add
mov
inc
rol
fwait
push
je
dec
sub
sub
fild
test
icebp
cmp
adc
cmp
mov
push
les
push
mov
mov
mov
test
jle
cmps
sahf
push
out
add
xchg
mov
sti
xor
out
mov
mov
add
aam
push
push
jbe
jge
rol
and
out
and
sub
stos
jecxz
jmp
mov
sub
stos
adc
je
jmp
push
mov
or
jno
mov
lea
pushf
cmp
(bad)
xlat
push
imul
mov
sub
cmp
retf
or
jns
sbb
mov
inc
add
push
push
fadd
into
jl
cmp
xor
push
rcr
stc
push
cdq
fscale
mov
xor
adc
sbb
call
div
test
out
jecxz
(bad)
pop
bound
mov
mov
fcom
fld
jmp
cmp
rcl
icebp
cs
sub
sbb
dec
pop
(bad)
into
push
es
sub
call
aam
daa
inc
or
dec
movs
popf
sbb
ja
popf
sub
jo
adc
xchg
xchg
icebp
mov
mov
lea
cmp
dec
pop
fsub
add
(bad)
(bad)
push
push
call
cmp
out
push
pop
ds
ja
mov
fdivr
outs
or
addr16
scas
or
mov
adc
int
repnz
in
xor
ror
push
mov
aad
pop
in
add
clc
aas
rcl
adc
mov
xor
push
sti
mov
add
adc
adc
imul
popa
jno
ds
sti
pop
sub
sbb
scas
std
add
(bad)
jmp
loop
inc
out
inc
inc
adc
push
ins
sub
rol
xchg
mov
cmps
lock
call
int3
dec
or
fistp
into
fsubp
mov
mov
lea
arpl
(bad)
pop
add
jl
test
pop
mov
cli
mov
push
outs
clc
push
pop
fisubr
push
dec
jecxz
or
out
mov
aaa
jge
sub
andps
in
out
xor
gs
enter
mov
mov
hlt
out
dec
pop
dec
repz
es
call
aas
in
or
xor
jp
jle
xchg
inc
pusha
inc
ror
xor
jb
push
add
jns
sbb
fwait
pop
hlt
imul
sub
sbb
adc
mov
sub
jg
push
add
(bad)
rcl
lea
call
jmp
imul
pop
repz
imul
mov
push
aad
clc
or
fcmovne
pusha
jmp
ss
(bad)
(bad)
daa
adc
or
dec
adc
pop
cmp
fisub
scas
clc
cmp
fdivr
mov
aas
dec
xor
je
jp
mov
iret
jle
pop
les
add
push
aaa
mov
adc
xchg
stc
mov
std
xor
pop
jmp
pop
pop
or
arpl
jbe
mov
ss
and
stc
(bad)
mov
add
jb
loopne
push
loop
cmp
jg
clc
adc
mov
stos
dec
mov
idiv
out
das
dec
or
mov
fucomp
jge
pop
(bad)
lods
js
out
dec
outs
in
loop
or
test
mov
dec
frstor
cmp
ins
mov
xchg
imul
mov
cmps
out
aam
es
cld
xor
lahf
jg
mov
imul
xchg
cs
stc
test
mov
and
ret
imul
ret
mov
or
aas
mov
pop
shl
and
inc
lods
pop
mul
popf
test
xchg
or
out
adc
fsub
imul
js
fstp
jge
inc
dec
or
inc
cmp
or
stos
and
mov
add
push
adc
cmc
xchg
mov
mov
or
stos
loop
addr16
dec
lahf
arpl
icebp
les
adc
mov
cmp
sub
stc
ds
lods
dec
dec
mov
pop
sahf
sahf
mov
fisubr
scas
int3
and
or
ja
in
fs
shl
into
pop
xchg
(bad)
in
push
inc
xor
idiv
mov
mov
mov
leave
ror
inc
scas
or
in
cmp
sub
dec
mov
test
outs
jmp
ror
cwde
sbb
sbb
or
cmp
fdivr
(bad)
push
dec
dec
dec
shl
or
inc
mov
leave
inc
nop
cmc
mov
push
push
pop
inc
(bad)
adc
push
lods
jne
test
ins
mov
push
int3
dec
lods
or
enter
cs
lds
mov
fild
aad
aam
jb
jae
jmp
and
fimul
sub
dec
mov
dec
mov
add
add
int
and
sbb
pop
movs
(bad)
imul
rcr
fisubr
xor
ja
cmps
shr
xchg
jns
push
mov
mov
jmp
add
sbb
inc
pop
inc
dec
popa
or
pop
nop
jecxz
imul
add
sbb
or
pop
push
xchg
(bad)
and
adc
mov
es
mov
xor
stos
js
xlat
fwait
mov
pop
je
retf
mov
xchg
or
into
cmp
dec
bound
add
js
cwde
push
or
cdq
dec
sub
mov
jns
lahf
cwde
movs
sub
test
cmp
pavgb
out
mov
pop
iret
xchg
push
xor
cmp
out
shr
jae
push
mov
int
xchg
inc
mov
xchg
repnz
sub
mov
das
inc
mov
inc
jo
pop
and
mov
sbb
xor
neg
leave
pushf
mov
idiv
out
mov
enter
movs
outs
leave
push
rol
fild
outs
shl
pop
add
xchg
push
push
cs
sbb
call
es
in
fcomp
inc
pop
pushf
jne
in
arpl
enter
inc
(bad)
pop
movs
mov
sbb
or
out
fwait
push
mov
cli
(bad)
pop
cmps
or
pop
lds
outs
test
cmp
xchg
add
cmp
push
pushf
mov
and
push
mov
xor
push
jb
cmc
(bad)
pushf
(bad)
iret
mov
cwde
gs
(bad)
mov
mov
or
adc
jle
or
or
int3
sahf
and
es
(bad)
inc
(bad)
and
jns
mov
xor
pop
mov
or
lods
lock
xchg
test
mov
into
add
ins
call
mov
push
add
hlt
popf
je
cmp
lock
xor
(bad)
lahf
cmp
ror
mov
xchg
arpl
inc
mov
inc
fnstenv
lea
jg
dec
cs
(bad)
mov
inc
lahf
sbb
push
out
stos
add
cli
inc
push
mov
mov
ins
into
(bad)
push
rcr
mov
mov
dec
ss
lock
sbb
mov
addr16
ret
mov
lods
std
(bad)
dec
mov
push
xchg
xor
not
int3
jbe
ja
inc
dec
sbb
cld
add
mov
shl
lock
clc
push
out
ins
inc
mov
mov
xchg
add
adc
xchg
int
sub
dec
xlat
xor
popa
jmp
cmp
and
hlt
xor
mov
lds
lds
pop
adc
gs
call
xchg
out
stos
sub
stos
lahf
cmp
pop
cmc
mov
hlt
cmp
jbe
out
sub
add
mov
cmp
ror
ret
fs
mov
scas
cmc
sbb
adc
mov
ficom
jbe
loope
fwait
and
stos
call
arpl
mov
inc
retf
repnz
int
or
mov
or
(bad)
nop
jecxz
mov
xor
inc
shl
aaa
inc
cmp
in
mov
adc
mov
loopne
sar
sti
fwait
mov
xor
ret
pop
pop
rcl
jecxz
jmp
inc
pop
enter
fnstenv
or
add
jno
dec
test
jp
xchg
cmc
sub
push
pop
jo
mov
clc
std
and
pushf
movs
out
scas
pop
cmp
pop
test
inc
call
icebp
dec
cmp
push
and
mov
add
jp
adc
sub
inc
cmp
call
pop
inc
pop
outs
repnz
xor
rcl
scas
push
mov
pop
sbb
les
aas
lea
jne
sbb
stos
arpl
and
rcr
push
pop
in
push
iret
(bad)
les
pop
addr16
aas
or
aad
xchg
sbb
add
pop
sub
sbb
mov
retf
push
fwait
push
cli
fnstsw
xchg
dec
int
call
push
neg
in
(bad)
push
jmp
cmps
add
int
push
xchg
out
shr
sub
test
nop
xor
iret
cmp
or
stc
and
retf
hlt
pop
fdivr
mov
sbb
jge
pop
fmul
push
jp
inc
mov
scas
(bad)
lds
push
jbe
and
sub
(bad)
jmp
or
mov
push
mov
scas
push
hlt
adc
aam
movs
(bad)
add
add
pop
adc
mov
inc
inc
or
or
mov
jge
stc
mov
and
in
jp
adc
ror
in
and
in
popa
nop
jmp
int
(bad)
mov
or
sub
xor
sbb
bound
dec
pushf
pop
inc
fmul
adc
xchg
mov
xor
adc
scas
ja
les
or
ds
(bad)
add
xchg
mov
push
jl
loopne
ss
in
jle
loop
les
aaa
mov
es
mov
ds
lds
bound
mov
pushf
xchg
add
outs
fwait
cmp
movs
das
mov
sti
adc
in
arpl
jp
pop
sbb
cmp
dec
repz
xchg
ret
out
fbstp
xor
inc
pop
pushf
pop
sub
call
or
mul
inc
pushf
movs
xchg
or
or
jle
shr
mov
(bad)
vpmulhuw
mov
sbb
(bad)
pop
rcl
jbe
cmp
outs
adc
dec
sbb
adc
inc
out
fcomp
fild
xchg
fbld
int3
fld
cmp
cmp
shl
jmp
es
xor
sbb
cmp
mov
dec
ja
mov
outs
push
xchg
push
jge
popa
dec
add
push
mov
int3
xor
into
xor
scas
out
pop
jbe
adc
(bad)
loopne
cs
imul
dec
jecxz
adc
sub
and
cwde
adc
sub
test
mov
mov
jp
retf
test
xchg
mov
ror
push
pop
sbb
pop
pop
add
fisttp
jbe
dec
neg
xchg
int3
shl
jb
jb
xor
jg
jne
xlat
push
fdivp
add
ficomp
add
or
jle
xor
in
dec
xor
iret
push
fisttp
imul
pushf
push
call
push
xor
mov
sub
mov
xor
call
mov
inc
or
cdq
sbb
push
ds
jle
call
xchg
fdiv
ja
adc
adc
movs
jns
in
cmp
cld
pop
mov
fidivr
sti
mov
leave
cmp
fsqrt
shl
sub
nop
xor
call
adc
pop
ret
sti
jle
mov
retf
jb
push
in
loope
mov
lea
pop
jg
les
jbe
push
jl
xchg
xchg
dec
sbb
fstp
int
and
(bad)
mov
pop
stc
sbb
jns
dec
enter
outs
fstp
int
clc
stc
add
pop
out
shl
mov
xor
mov
ror
jmp
int3
test
addr16
hlt
in
ins
sub
jmp
mov
dec
jae
mov
add
ficomp
clc
movs
jns
test
or
repnz
lea
in
inc
clc
call
pop
or
mov
movs
das
clc
push
xchg
loope
sti
jns
sbb
mov
mov
and
cdq
cmps
push
and
pusha
call
ror
add
lahf
ins
xlat
lahf
mov
adc
fwait
enter
jle
(bad)
pusha
fmul
push
outs
dec
call
jmp
mov
push
shr
pop
stos
shl
out
mov
cld
dec
cmp
cmps
daa
mov
test
imul
or
shr
mov
std
pop
inc
fs
jg
fst
mov
enter
cld
sbb
outs
pop
mov
or
out
mov
mov
shl
gs
sub
outs
adc
outs
cmp
push
adc
out
(bad)
popf
pop
mov
cmps
cwde
xor
push
mov
xchg
mov
push
mov
xlat
mov
mov
xchg
jmp
(bad)
in
pop
fs
xor
lds
rol
idiv
int3
cmps
xor
ins
in
repnz
mov
xchg
push
dec
sbb
push
mov
xor
jno
ins
fst
dec
and
or
lods
adc
int
xchg
inc
outs
adc
test
aad
not
ret
add
retf
int
sub
cld
pop
in
jne
in
mov
mov
add
gs
mov
mov
call
ja
jp
fcom
jnp
pop
stos
pop
jnp
mov
fld
aas
mov
adc
sbb
and
lods
push
mov
in
repnz
lea
ins
mov
fidiv
imul
in
arpl
pop
inc
push
xor
inc
xchg
lods
mov
call
leave
mov
inc
in
sub
lahf
inc
jnp
outs
xchg
into
mov
xor
pop
jge
pop
push
xchg
stos
sub
dec
xchg
shl
jb
sbb
and
test
int
leave
retf
jmp
or
(bad)
imul
cmps
test
sub
clc
adc
cmps
push
ror
jne
sbb
rcr
push
cld
fist
sbb
mov
arpl
jbe
test
sahf
add
pop
(bad)
jmp
pusha
leave
pushf
idiv
or
mov
out
or
iret
and
pop
lds
jg
xchg
dec
rcl
push
pop
or
cmc
jnp
xchg
mov
sbb
fcomp
dec
loop
pop
jecxz
les
mov
fwait
xlat
hlt
cmc
and
inc
lahf
inc
cmps
scas
ror
mov
or
test
jmp
push
leave
push
and
cmp
xchg
cmps
test
pop
sbb
loopne
mov
xor
cmps
and
cmps
sahf
jne
sub
loop
lahf
mov
pop
es
es
jmp
sbb
shr
inc
dec
and
mov
mov
sub
pop
mov
cmp
xchg
or
adc
or
fstp
fidivr
mov
mov
arpl
add
ret
mov
test
mov
lods
cmp
test
push
movs
sti
movs
pop
pop
popa
mov
scas
cld
test
xor
inc
mov
inc
dec
xor
in
dec
mov
push
arpl
adc
dec
mov
pop
rcl
retf
shl
add
adc
(bad)
inc
jg
cmp
out
pop
fisubr
push
repz
adc
and
in
and
jmp
rcl
push
(bad)
pop
les
je
add
(bad)
loope
int
push
xor
enter
add
push
cmps
mov
inc
jnp
mov
mov
daa
out
nop
jae
les
std
lods
ret
cmp
fldcw
dec
or
adc
add
imul
lock
adc
xor
pop
jae
sti
out
cmps
mov
lods
xor
sbb
cmp
and
shl
nop
mov
dec
bound
mov
sub
mov
iret
jae
loope
pop
lds
mov
enter
or
jae
(bad)
cmc
mov
cmc
dec
pop
push
in
dec
pushf
scas
enter
xor
daa
push
out
leave
test
mov
pop
sub
xor
cmp
test
add
or
ret
mov
cmp
jo
ret
jp
sub
cmp
les
xchg
jmp
inc
xor
leave
idiv
and
test
popa
into
adc
sbb
aam
lock
xor
jne
jno
lea
test
(bad)
ins
push
test
iret
gs
cmp
lods
xlat
mov
rcl
je
or
mov
mov
outs
xor
adc
inc
arpl
in
push
movs
pop
lahf
sar
sub
sbb
push
jb
cld
and
test
mov
movs
jns
mov
jmp
push
xor
dec
add
std
rol
push
xor
push
jle
push
aad
cmc
mov
xor
fs
pushf
test
xchg
cmc
lock
sbb
inc
cmc
scas
or
cdq
in
jno
dec
(bad)
xor
js
jl
(bad)
out
xor
das
push
retf
mov
xor
mov
xor
cli
xchg
cmp
add
shr
rol
xor
sti
mov
dec
inc
jmp
push
test
icebp
xor
loope
int3
data16
mov
mov
push
xchg
mov
pop
cmps
iret
ficom
ficom
imul
mov
push
and
or
retf
xor
dec
add
loopne
cmp
cmps
xchg
call
pop
pop
fcom
nop
popf
mov
loopne
fild
inc
(bad)
add
shl
jecxz
dec
pop
push
mov
mov
mov
inc
out
jg
pop
push
icebp
cmp
and
clc
aas
dec
adc
mov
rol
inc
out
add
mov
xlat
fcom
fs
call
pop
sub
rol
jmp
nop
mov
xor
iret
retf
fdiv
dec
cmps
jmp
or
jnp
ss
push
outs
xor
mov
in
mov
jmp
or
mov
cmps
push
sub
inc
iret
jecxz
inc
nop
fld
mov
mov
mov
mov
push
outs
aas
xor
adc
ficom
(bad)
xor
add
ins
jo
bound
aas
leave
outs
int
add
cmp
dec
jb
mov
dec
(bad)
nop
out
leave
adc
fdiv
dec
fmul
aas
add
dec
pop
sbb
call
ret
stos
jmp
xchg
leave
pop
jns
jnp
push
fs
cli
jo
pop
sub
push
dec
mov
shl
xor
xchg
pop
mov
push
fadd
sbb
lahf
jle
mov
repz
loop
pop
xchg
pop
sub
xchg
xchg
addr16
iret
xchg
loopne
icebp
lds
jmp
dec
adc
sbb
pop
bound
out
in
stos
movs
int3
inc
jecxz
mov
xchg
in
retf
loope
or
aaa
mov
sub
mov
popa
adc
in
mov
das
and
jae
xor
fs
pop
out
test
inc
or
add
adc
or
fcmovb
js
repz
inc
test
inc
mov
das
movs
push
jae
xor
push
mov
lsl
into
loop
test
in
lods
xchg
push
pop
shl
int
and
into
adc
std
jbe
jg
xchg
iret
fwait
xchg
ret
pop
lods
mov
cmp
mov
mov
jb
or
hlt
shr
xor
sbb
aas
xchg
lods
inc
or
dec
push
push
jg
hlt
adc
add
lock
or
iret
retf
adc
jbe
ficom
xchg
int
(bad)
out
add
dec
cdq
arpl
adc
bound
fsubr
add
cmp
push
scas
sti
inc
pop
nop
xchg
in
movd
jb
cmps
loope
xchg
cmp
loope
arpl
jae
inc
lock
adc
cmp
out
ret
cmp
add
jle
popf
adc
daa
xchg
call
mov
pop
cmp
pop
inc
xchg
rcl
jae
(bad)
and
das
repnz
nop
pop
leave
stos
in
add
mov
pop
sub
and
popf
jg
gs
sbb
daa
imul
add
outs
xor
ret
push
pop
(bad)
xchg
movs
xchg
frstor
mov
nop
cmc
(bad)
sub
cwde
in
(bad)
into
stos
call
fldcw
mov
or
xor
test
scas
pop
add
jnp
pop
(bad)
aaa
out
out
push
scas
push
cmps
dec
cmp
das
sub
push
outs
mov
sub
or
repz
retf
inc
(bad)
retf
inc
cmps
test
aad
or
arpl
pop
inc
push
cwde
sbb
(bad)
mov
jno
fsubr
cmp
fcomp
xlat
gs
mov
cli
jns
int
push
mov
cmp
mov
add
pop
int
cdq
jne
fld
sbb
les
mov
in
jb
in
prefetch
mov
push
shr
jecxz
inc
dec
ss
pusha
loopne
xchg
jecxz
adc
mov
pop
mov
mov
arpl
scas
lods
into
repnz
xor
mov
push
xchg
xor
stc
mov
in
jg
push
fbld
call
into
dec
fbstp
rol
scas
inc
jb
sub
and
push
sub
ret
cs
fld
sbb
lods
ror
popa
(bad)
aam
clc
and
test
cmc
outs
out
ja
pop
aaa
sbb
xchg
scas
xchg
fsub
bound
lea
xor
icebp
mov
sti
sbb
sbb
pop
test
fs
push
adc
adc
push
(bad)
scas
mov
fnsave
lock
(bad)
pop
std
cli
rcl
ja
gs
xchg
loope
into
push
mov
adc
jne
fidiv
nop
inc
out
xor
and
dec
pushf
sbb
add
sbb
jo
inc
ja
adc
or
dec
push
jp
repz
popa
mov
sub
(bad)
pop
dec
stc
cdq
arpl
pop
push
adc
or
test
in
clc
stc
pop
js
stos
js
mov
adc
fisub
mov
jb
xor
repnz
mov
sbb
push
mov
das
mov
mov
lods
sub
pop
jmp
mov
fiadd
nop
jecxz
xor
xor
nop
je
push
cdq
sti
js
int3
aad
outs
dec
sub
cld
dec
lods
mov
jo
lds
cld
stc
xchg
cdq
aas
push
leave
shr
fwait
adc
jle
lods
in
mov
ins
sbb
pop
xcrypt-cfb
cmps
addr16
lods
mov
jge
ja
push
in
dec
dec
sub
rcr
pop
jbe
fsub
pop
fsubr
push
xchg
vcvtsi2ss
fadd
test
xchg
dec
hlt
jbe
ret
pop
jne
sbb
mov
in
inc
xlat
fcmovu
adc
in
fdivrp
and
mov
fwait
(bad)
icebp
inc
push
dec
sub
xchg
scas
push
dec
scas
xor
fwait
push
rcl
je
xchg
jbe
fs
xchg
lods
mov
xchg
xor
(bad)
xor
in
ficom
dec
mov
jbe
xor
sbb
loope
push
nop
aas
cdq
pusha
aas
std
push
jns
(bad)
std
push
cdq
retf
pop
sub
aad
pop
mov
xchg
sub
dec
adc
jmp
jne
outs
sbb
sub
push
xor
pop
dec
cmp
and
mov
add
sub
jmp
call
pop
test
mov
les
mov
adc
aaa
lods
ds
movs
mov
es
mov
fisttp
daa
sbb
movs
cmps
push
scas
push
cmp
(bad)
data16
sub
and
(bad)
jne
test
scas
neg
xor
in
mov
iret
outs
in
ficom
pop
add
dec
lock
dec
and
push
int
push
inc
test
mov
pop
mov
shl
(bad)
cld
jnp
adc
pop
pop
xor
dec
fisubr
retf
rcr
fidiv
sbb
inc
mov
ret
cmps
stc
and
hlt
xor
dec
dec
in
fcmovnu
mov
mov
ins
jo
push
push
leave
fwait
xchg
nop
das
push
sub
sahf
mov
pop
neg
inc
lahf
mov
pop
push
pop
cmp
nop
aad
pushf
inc
stos
lock
addr16
xor
xchg
std
in
sbb
cdq
mov
jb
fsub
adc
and
push
push
add
pop
div
ds
jo
retf
mov
and
mov
cmps
push
dec
jp
nop
jecxz
pop
ds
mov
popf
xchg
adc
es
cmp
jle
test
sub
inc
and
adc
ficom
call
fsub
sbb
inc
aam
ss
push
popf
xor
stos
repz
dec
pop
clc
leave
push
dec
cmc
and
sbb
xchg
pop
cwde
inc
movs
push
and
dec
cmps
sub
mov
cwde
sbb
jb
xchg
test
pop
inc
aas
cmp
and
xchg
cli
xor
ss
mov
lahf
adc
push
mov
mov
out
jo
mov
sbb
iret
push
fisub
adc
dec
or
popf
ins
dec
out
sub
test
mov
pop
stos
xchg
daa
packsswb
mov
in
gs
and
mov
lahf
test
sysret
mov
(bad)
or
inc
shr
inc
pop
cdq
aad
dec
cdq
xchg
jl
inc
and
cmp
dec
adc
pop
dec
and
in
lods
sub
fdivr
sbb
inc
(bad)
loopne
pop
ds
push
fs
pop
pop
inc
int3
xor
add
jns
fdivr
test
sbb
mov
xchg
dec
mov
xchg
mov
dec
fmul
(bad)
pop
and
or
pop
xor
cwde
jne
iret
je
push
(bad)
aaa
cdq
outs
pusha
(bad)
dec
jb
xor
scas
push
hlt
jle
call
mov
lods
xchg
jo
aas
out
push
mov
push
push
sbb
jp
xlat
lahf
mov
ins
cmp
mov
and
test
popf
sahf
inc
push
pop
mov
ins
jae
hlt
ja
mov
or
push
cmp
sub
adc
sub
dec
xor
hlt
add
ins
sub
addr16
dec
inc
push
sahf
stos
ficom
sub
repz
gs
adc
sbb
or
call
or
leave
and
sbb
xlat
test
ret
push
dec
and
inc
and
cmp
and
sahf
mov
pop
repnz
mov
lock
jmp
aas
push
ja
cmp
rcr
cmps
sub
fcmovbe
add
xchg
push
sub
sub
cwde
stos
fisub
fld
mov
ror
add
sub
jl
iret
cmps
mov
(bad)
aad
pop
push
xchg
das
pop
pop
(bad)
inc
push
xor
(bad)
or
adc
adc
cwde
or
(bad)
xlat
test
adc
cld
cld
sub
aad
iret
ins
fimul
scas
test
fwait
sar
cs
ret
mov
mov
mov
or
pop
jecxz
aaa
dec
adc
ins
xor
stos
test
sbb
adc
(bad)
dec
enter
cmp
jne
test
or
rcl
sbb
gs
push
sahf
jmp
data16
nop
adc
int
dec
adc
xor
sbb
xchg
jmp
or
(bad)
rcl
mov
adc
sub
jo
xchg
lock
push
push
stc
xchg
imul
fcmovbe
and
ja
sbb
popa
dec
inc
lock
jg
mov
mov
leave
and
int
jg
push
fcmovbe
xchg
aam
sahf
add
add
dec
(bad)
dec
push
stos
adc
ins
loopne
or
iret
stc
adc
mov
fst
mov
imul
mul
and
in
inc
xchg
mov
retf
add
mov
xchg
adc
mov
test
test
add
adc
ds
jmp
mov
add
aaa
test
push
(bad)
jp
idiv
inc
stos
jo
scas
popa
js
(bad)
adc
jmp
inc
retf
and
sub
xchg
aam
jns
xor
mov
inc
or
adc
pop
enter
mov
push
loop
loop
push
fs
bound
call
aad
inc
sahf
mov
inc
cdq
pop
jnp
shr
ins
mov
test
push
pop
dec
fiadd
cmp
and
loope
mov
outs
jmp
pop
aas
mov
pop
daa
xchg
add
pop
xchg
in
ins
cmc
stc
das
ds
inc
fld
add
rcr
xor
push
xchg
mov
test
mov
dec
cmps
test
call
xor
push
push
imul
psubq
mov
sbb
sbb
push
jp
sti
cmps
jne
ins
sub
hlt
fisubr
jmp
mov
pusha
jnp
push
mov
ficom
es
stc
jnp
sbb
ret
push
adc
sbb
out
(bad)
cwde
lods
inc
std
int3
mov
out
mov
pop
xor
cmp
sub
addr16
ror
add
xchg
into
mov
aaa
js
jno
dec
retf
or
push
mov
sub
data16
mov
mov
jle
(bad)
xchg
sbb
dec
sar
mov
movs
shl
mov
js
jmp
stos
mov
add
cmp
or
and
xchg
out
sti
jp
es
sub
(bad)
and
std
cld
cdq
data16
fsub
popf
or
push
mov
jnp
pop
leave
cmp
xchg
je
xor
pusha
inc
int
imul
ror
inc
imul
dec
mov
lock
or
push
dec
fwait
test
repnz
dec
dec
jle
loop
dec
dec
jmp
jae
inc
clc
mov
loop
retf
(bad)
aad
outs
mov
lods
xor
and
jns
jno
fwait
mov
inc
retf
xor
adc
fs
jl
lods
mov
stos
push
arpl
inc
jae
fsub
lahf
add
push
xchg
lahf
adc
mov
inc
test
push
mov
retf
movs
out
xor
aas
xchg
add
mov
cmps
mov
loopne
mov
push
dec
(bad)
cld
dec
fdivr
(bad)
push
pop
adc
inc
out
inc
mov
pop
sbb
cmp
pusha
mov
cmps
inc
int
add
inc
xor
retf
jmp
ss
or
aad
mov
adc
and
in
(bad)
pop
je
jae
loop
push
push
movs
lods
mov
int
out
fxch
lods
xchg
arpl
loopne
inc
push
cmp
sbb
and
inc
clc
fs
inc
pand
pushf
scas
and
ss
leave
ins
sub
mov
les
and
mov
stos
mov
mov
push
push
(bad)
icebp
jns
lods
dec
hlt
or
mov
push
mov
xor
or
fldenv
iret
inc
fbstp
jecxz
fisubr
les
push
xchg
xchg
scas
fwait
ins
add
test
aas
(bad)
inc
inc
mov
mov
test
es
xchg
mov
(bad)
sbb
jl
out
mov
xchg
push
mul
arpl
inc
dec
adc
mov
popf
ja
lahf
inc
xchg
in
mov
fcmove
push
cwde
cmp
pop
scas
jne
and
pop
ficomp
mov
xchg
push
leave
test
addr16
adc
pop
add
sub
ins
add
dec
inc
xchg
sub
ret
sar
inc
cdq
cld
sub
dec
cwde
xor
fisttp
fwait
mov
add
ja
out
test
aam
or
cmp
scas
loopne
ret
fadd
fs
or
pop
push
or
add
mov
inc
nop
sub
inc
mov
loope
xchg
or
dec
loopne
mov
ror
push
push
dec
and
sub
leave
push
rcr
cmp
sub
adc
ins
fstp
dec
cmp
add
call
rol
jge
dec
fs
and
push
inc
cmp
les
xor
sub
or
mov
xchg
pop
call
cmp
mov
test
and
push
aam
ss
jge
push
xchg
or
mov
inc
lock
xchg
sbb
mov
mov
test
shl
adc
std
mov
xchg
mov
and
jbe
loopne
adc
inc
idiv
and
cmps
(bad)
inc
movs
shl
mov
clc
repz
adc
outs
les
mov
push
cdq
int3
xor
jb
and
inc
push
add
mov
mov
test
stos
mov
test
sub
add
scas
mov
xchg
mov
popf
(bad)
enter
ret
lds
push
sti
outs
shl
in
je
adc
lea
jge
rcr
adc
push
scas
int3
jno
dec
inc
pop
popa
dec
xor
xlat
imul
sub
jne
sub
push
(bad)
jbe
pop
pop
add
inc
pmovmskb
xlat
(bad)
mov
adc
cwde
loop
rol
icebp
and
cli
lahf
xchg
adc
mov
gs
push
in
jnp
pop
mov
sub
lods
ds
xchg
shl
push
sbb
in
mov
ret
cmps
iret
push
fisub
and
mov
repz
mov
xor
xlat
xchg
push
neg
(bad)
lods
inc
out
cmp
aaa
jl
dec
sbb
sub
js
test
push
mov
fnstsw
jge
or
fs
les
hlt
hlt
(bad)
pushf
push
leave
sar
xchg
push
fldenv
sub
les
xchg
std
fistp
cmp
push
push
add
in
push
fcmove
cs
call
add
and
test
or
lods
sub
jbe
mov
mov
not
out
xchg
mov
fdivr
fimul
das
imul
or
cdq
mov
outs
adc
cmps
jg
stc
jmp
jge
xlat
repnz
pop
rol
rcl
sub
adc
pop
clc
sti
test
adc
dec
(bad)
push
loopne
mov
imul
or
outs
test
xor
mov
mov
mov
leave
sub
sbb
out
cmc
out
fcom
data16
inc
cmp
cmp
add
dec
jns
cmp
push
xor
cld
jmp
scas
mov
cmp
push
(bad)
add
add
mov
push
imul
adc
xor
call
dec
dec
daa
pop
inc
xlat
test
lock
int3
jg
adc
inc
hlt
sar
imul
addr16
jle
mov
scas
mov
repz
lods
jg
cmp
not
pop
pop
xchg
and
mov
mov
inc
mov
jmp
test
mov
cmp
mov
sub
int3
call
jmp
jo
dec
out
and
dec
repz
adc
cmp
push
push
sub
mov
rcl
fwait
push
pop
(bad)
cld
dec
or
xlat
rcl
lods
fucomp
mov
(bad)
iret
xchg
dec
pop
jns
sti
fdivr
sbb
fwait
sub
pop
imul
rol
(bad)
lds
sbb
std
add
push
ins
pop
aam
das
movs
dec
cmps
aad
inc
jmp
pop
fadd
out
test
or
xor
mov
push
fcom
fwait
jmp
pop
sbb
xchg
xor
test
fild
adc
mov
pop
push
rol
retf
ja
and
cmp
and
jo
mov
xchg
push
pop
mov
sbb
cwde
ret
or
push
cmp
mov
push
and
icebp
ss
repnz
lea
cmp
repnz
mov
gs
and
sub
push
push
sti
adc
xchg
cmps
movs
lods
aaa
inc
bound
cdq
fiadd
xchg
mov
gs
aaa
jg
or
or
in
es
adc
pop
inc
(bad)
clc
data16
adc
inc
not
fdiv
add
inc
ret
iret
stos
shr
push
xlat
scas
and
iret
pusha
pop
sahf
ja
push
daa
pop
mov
in
sub
clc
outs
test
lea
repnz
ins
jle
cmp
inc
xchg
mov
idiv
popf
shl
sub
push
jnp
dec
cmps
mov
jp
adc
hlt
pop
mov
ret
in
push
imul
mul
dec
jl
das
sub
jnp
mov
pop
mov
mov
dec
cmp
push
mov
bound
stos
stos
and
aam
jg
xchg
test
call
pop
and
dec
mov
lock
jno
outs
add
outs
sbb
dec
jno
and
mov
push
jo
test
test
mov
mov
dec
pop
and
pop
mov
stc
add
dec
and
jle
pop
jmp
mov
cmp
fistp
and
hlt
das
std
and
push
dec
in
popf
fmul
iret
jecxz
bound
js
pop
pop
bound
adc
stc
push
cmc
xchg
dec
xor
mov
add
or
fadd
mov
and
xor
push
jp
jo
je
outs
sub
pop
push
addr16
test
and
cmc
sub
jecxz
test
inc
mov
dec
add
out
adc
pusha
add
das
jns
xchg
into
jmp
data16
pushf
sub
cs
addr16
test
cmp
cmps
retf
mov
and
adc
push
je
push
jecxz
push
and
mov
pushf
mov
pusha
(bad)
call
shl
icebp
pop
test
out
or
add
mov
push
pop
jne
add
mov
mov
rol
arpl
cmps
cs
cmp
sub
mov
jb
sub
jle
sub
ins
nop
inc
cwde
mov
push
push
bound
xchg
pop
jae
in
pop
pop
cmp
into
out
mov
mov
ffree
scas
inc
inc
cmp
jnp
shl
test
lea
xor
adc
jnp
push
sbb
add
fcmovnu
ret
scas
mov
rcl
(bad)
mov
xchg
jp
cs
sub
mov
inc
div
lods
and
rcr
clc
dec
mov
pop
inc
clc
xchg
ss
mov
xlat
push
call
ret
add
icebp
mov
mov
xchg
push
mov
cmps
dec
ins
push
xor
retf
mov
inc
cmp
lea
cmp
cmp
shl
sub
mov
jmp
cmps
xor
aaa
mov
lods
ret
imul
and
add
xor
add
fsubp
push
test
fwait
aas
xchg
cmp
or
or
sbb
jp
mov
xlat
outs
les
fdiv
outs
fadd
js
test
mov
sbb
outs
and
mov
cld
cmp
shr
jecxz
shl
sub
mov
inc
(bad)
test
inc
dec
leave
adc
xor
out
cli
pop
pop
das
xchg
and
aam
stc
adc
pop
push
cmp
pop
rcr
add
jne
push
cdq
sub
fwait
or
pop
imul
jne
mov
arpl
xchg
nop
(bad)
mov
shr
call
or
mov
cdq
and
xor
mov
sbb
xor
adc
rcl
pop
pop
push
add
push
sub
xor
adc
sub
xchg
aad
push
dec
xlat
popf
out
xchg
or
leave
idiv
cmp
ret
mov
adc
dec
test
in
xor
lods
mov
push
sub
hlt
js
stc
aam
and
sub
lahf
mul
inc
jmp
or
stos
cmp
shl
add
stos
repnz
dec
dec
mov
call
std
jp
mov
movs
pop
stc
sbb
fcomp
in
and
dec
cwde
sub
addr16
inc
(bad)
repnz
aad
lods
or
scas
test
or
in
jmp
call
dec
or
add
retf
in
aam
rcr
and
stc
push
dec
xlat
imul
retf
inc
cwde
sub
jg
sbb
lods
jmp
xor
xor
sbb
lahf
rcl
pop
lock
jmp
lods
clc
sub
pop
sbb
cmp
bound
nop
push
mov
sti
mov
adc
jne
jb
int3
pop
sub
mov
fst
sahf
mov
nop
pop
ins
add
mov
mov
jl
out
in
and
sbb
hlt
(bad)
test
(bad)
and
aaa
call
std
in
arpl
dec
fdiv
movs
sahf
sbb
and
push
sbb
xor
outs
loope
shl
xchg
mov
push
cwde
xor
addr16
inc
fs
push
add
xchg
xor
ret
(bad)
shl
cs
add
les
dec
pop
(bad)
mov
lahf
pop
xor
loope
push
test
test
jmp
mov
jno
mov
push
xor
mov
cmps
call
cmp
push
test
in
adc
dec
mov
ds
shr
ret
addr16
aam
test
jge
pop
outs
loope
int
call
pop
lahf
mov
mov
ja
icebp
les
mov
push
sub
sub
(bad)
xor
push
call
clc
xchg
fwait
jp
es
cmc
jp
andps
(bad)
jl
pop
xor
dec
xchg
mov
lds
bound
or
or
jnp
sub
pop
jae
sbb
(bad)
jg
(bad)
sbb
mov
or
retf
jmp
mov
add
pop
mov
mov
and
add
jne
cmc
pinsrw
mov
jae
ins
cli
not
adc
mov
hlt
ds
cmp
add
jne
scas
and
jbe
ret
and
mov
and
lock
inc
jnp
and
mov
dec
lds
fimul
cmp
std
mov
adc
and
inc
popf
lahf
cli
xchg
shl
inc
lods
jae
cmp
dec
xlat
lahf
add
add
enter
mov
repnz
cmps
fisubr
jle
xchg
loop
mov
xor
loopne
shr
xlat
ss
mov
call
pushf
fmul
add
retf
(bad)
push
fsub
push
xchg
sub
mul
mov
mov
hlt
dec
sub
sbb
je
pushf
sar
movs
sbb
pop
loopne
lea
jo
push
cmp
sbb
jle
fbld
inc
in
mov
inc
sub
xor
retf
stc
ja
in
and
jle
push
push
mov
popf
inc
inc
mov
mov
ret
lods
sti
xlat
xor
xchg
xor
and
jecxz
mov
out
jle
ins
pop
mov
retf
sbb
test
sub
push
pop
aaa
popa
or
(bad)
enter
cdq
sub
in
mov
cld
stc
std
scas
add
pop
js
mov
jmp
ins
dec
or
popa
sar
jns
scas
sbb
or
shl
mov
xor
fcomp
fld
iret
mov
sbb
adc
mov
xchg
sbb
mov
test
jns
push
ds
pop
xchg
dec
aaa
mov
mov
jns
js
lock
cmp
popa
jmp
daa
inc
push
imul
mov
xchg
das
lods
cmp
fild
inc
(bad)
aad
aaa
repz
xor
mov
iret
lea
and
hlt
pop
fld
cmps
and
cmp
inc
inc
push
mov
ror
inc
add
mov
ins
lods
push
test
daa
sbb
cld
es
xchg
cmp
(bad)
pushf
test
mov
cmps
jl
(bad)
rol
ds
in
das
pop
pop
pop
fwait
jb
lds
in
aas
daa
jnp
js
sbb
jo
jle
adc
mov
loopne
sbb
addr16
call
mov
sub
mov
int3
inc
and
adc
gs
mov
mov
or
pop
xor
push
ret
xchg
retf
std
test
cmc
sub
cmp
jmp
jecxz
jl
cmp
cmps
pusha
out
pop
mov
sub
scas
cmps
repnz
ja
(bad)
cdq
cmp
sub
ror
jbe
pop
pop
(bad)
xor
shl
ja
jmp
sbb
js
jmp
pop
xor
movs
cmp
daa
add
stos
sub
cmp
jo
bound
dec
jmp
cmp
outs
fbld
jae
and
loop
sub
sahf
mov
inc
jnp
in
inc
fistp
inc
sbb
nop
cld
in
mov
inc
mov
jno
rcl
je
call
inc
pop
jp
clc
mov
in
mov
mov
daa
push
or
mov
sbb
cmp
xor
arpl
leave
jns
rcl
xor
(bad)
daa
ja
(bad)
icebp
pop
mov
xchg
pop
add
(bad)
cmp
and
xor
jp
xor
idiv
(bad)
jmp
mov
mov
fucom
popa
lds
pusha
jnp
gs
jg
cmp
in
dec
xchg
push
add
cmp
mov
cmp
cli
std
cmp
and
ss
sbb
ret
and
jnp
call
cmp
aad
mov
mov
pop
or
ins
pop
pop
pop
clc
mov
push
pop
mov
pop
mov
sbb
sbb
push
mov
jmp
call
jecxz
ins
mov
rol
movs
push
push
jnp
je
int3
mov
cmp
add
test
or
mov
mov
mov
adc
pop
icebp
ret
clc
xchg
or
imul
pop
movs
ror
rcl
mov
cmp
dec
lods
mov
push
add
lea
hlt
pop
sahf
rcr
test
mov
cmc
clc
and
and
test
aad
xchg
push
je
int
add
mov
fimul
mov
inc
aad
jle
pushf
nop
(bad)
add
pushf
dec
push
std
mov
dec
sbb
imul
pop
or
jnp
xor
shl
jp
push
cmp
mov
cmp
aam
sbb
ret
sar
cdq
pop
xchg
movs
sub
and
gs
stc
test
push
outs
shr
cmc
adc
or
pop
stos
mov
jmp
lods
push
add
popa
es
mov
dec
adc
xchg
mov
sub
call
in
or
das
mov
in
call
das
and
gs
inc
test
add
push
popa
mov
push
sub
adc
mov
gs
lods
mov
cmp
sbb
(bad)
or
(bad)
mov
repnz
dec
(bad)
mov
lea
rcr
jne
repz
sub
ror
mov
push
mov
rol
mov
adc
add
cmps
ret
retf
jg
out
pop
lea
imul
pop
push
cdq
xor
cmps
mov
jp
mov
in
sub
outs
pusha
mov
stc
add
mov
sahf
jl
sbb
mov
inc
pop
test
addr16
sub
adc
mov
ret
cmp
push
pop
ret
mov
pop
test
jmp
sbb
or
aam
jbe
dec
pushf
xchg
xor
and
sbb
jne
in
xor
xor
imul
pop
cs
xor
clc
jle
push
les
int
xchg
(bad)
and
xor
ret
mov
fimul
fdivr
mov
stos
sub
cs
fist
loop
pop
dec
xchg
cmp
pop
outs
push
push
xchg
mov
(bad)
es
push
neg
push
int
pop
ins
scas
mov
cld
cmp
dec
mov
xchg
cmc
adc
imul
int3
outs
fwait
and
hlt
mov
add
xor
sbb
pop
xchg
out
les
adc
(bad)
mov
push
sub
sar
shl
aaa
lea
cmp
cld
stc
push
jmp
jns
stos
sbb
inc
in
sub
fnsave
sbb
mov
out
jno
in
scas
adc
pushf
movs
pushf
adc
and
cdq
xchg
in
leave
add
cld
mov
gs
pushf
push
and
fs
mov
stos
adc
hlt
xlat
sbb
mov
inc
dec
arpl
and
rol
or
push
sbb
stc
enter
call
dec
retf
sub
cli
nop
inc
sub
push
jno
fisubr
dec
lock
dec
cmc
pop
sub
ret
es
xchg
inc
fwait
xlat
add
mov
out
sub
or
xor
jns
jnp
lea
jl
pop
dec
dec
ret
mov
add
push
xchg
jl
(bad)
repz
adc
movs
adc
ins
aad
jp
pop
mov
fist
pushf
jge
shl
mov
sbb
jnp
rcr
inc
popa
test
push
lock
cmc
call
jno
test
inc
ja
and
call
inc
das
sbb
or
push
nop
mov
dec
cmps
call
mov
fwait
dec
int3
repz
mov
or
jmp
stc
addr16
mov
mov
xchg
mov
lea
add
or
cmp
in
idiv
or
push
ins
imul
adc
xbegin
push
add
mov
leave
in
cmp
mov
adc
clc
(bad)
fadd
stos
in
enter
sbb
jg
adc
pop
dec
loope
rcl
sbb
mov
mov
ins
adc
jg
or
jmp
dec
push
repz
mov
std
dec
sbb
ds
ret
mov
jp
sub
pop
xchg
push
enter
adc
int
pop
mov
stc
and
mov
dec
jmp
cwde
stc
xchg
push
aad
jmp
adc
int3
xor
(bad)
addr16
dec
scas
mov
dec
sahf
mov
dec
mov
adc
cwde
inc
fwait
out
daa
in
and
std
or
arpl
xchg
in
cld
repz
and
in
or
bswap
inc
ret
mov
cmp
mov
scas
jecxz
aas
(bad)
xor
pop
sahf
shl
sub
push
popf
mov
add
mov
adc
in
pushf
stc
test
fild
add
mov
dec
cmp
xor
imul
mov
adc
es
(bad)
stos
mov
int3
cs
loopne
add
ins
push
cmp
retf
outs
test
push
arpl
mov
mov
(bad)
out
or
inc
inc
retf
add
cmp
mov
push
scas
sbb
call
xchg
mov
mov
pop
adc
mov
sar
loope
xchg
mov
inc
pop
jle
sub
adc
adc
jge
mov
sbb
push
adc
int
jg
sbb
call
jmp
pop
xchg
add
sbb
mov
pop
iret
jl
push
push
jne
(bad)
adc
das
mov
inc
test
dec
repnz
inc
cmp
repz
jnp
in
test
sbb
xchg
cmp
add
les
and
outs
pop
sub
loop
xor
ret
js
and
xor
repnz
scas
push
push
aad
repz
push
lods
mov
fnstsw
fs
cmp
cmps
ret
mov
test
shl
outs
dec
and
mov
scas
(bad)
dec
inc
or
leave
retf
sbb
rcl
les
push
(bad)
and
sbb
mov
xchg
jae
ss
pop
aas
push
xchg
daa
push
lahf
loope
jbe
out
and
call
call
aad
jmp
idiv
mov
enter
and
les
dec
sub
cmp
fdivrp
mov
xor
add
push
cmp
div
cmp
scas
enter
push
push
out
lods
jecxz
and
out
push
or
aad
dec
int3
leave
inc
and
jo
jbe
int3
xor
cwde
sbb
icebp
and
cmps
sbb
rcl
mov
jmp
stos
out
jmp
or
loope
loop
test
push
mov
cmps
addr16
mov
cli
fisttp
sbb
sub
imul
push
mov
fst
pop
pop
mov
scas
outs
xchg
mov
daa
cmp
mov
mov
cld
outs
frstor
aaa
je
sbb
addr16
or
push
inc
loop
push
push
add
dec
cmp
aad
shl
outs
call
rcr
cmp
or
mov
xchg
int3
mov
int
loop
mov
rcr
add
push
sub
je
gs
aam
lock
add
fcomp
sti
mov
test
aas
jmp
xchg
mov
mov
jb
repnz
pusha
out
(bad)
aam
mov
sub
fidiv
test
mov
add
jnp
sbb
shl
pop
sub
push
pop
push
ret
push
mov
mov
outs
sti
imul
into
sbb
fsubr
ins
or
push
or
js
and
js
ret
(bad)
aas
dec
mov
sub
inc
mov
mov
sbb
sahf
dec
sub
jmp
jle
xor
mov
push
xchg
int
adc
clc
pop
retf
dec
push
(bad)
push
test
ins
and
repz
xchg
inc
fmul
xor
jae
out
push
cdq
test
inc
add
mov
cmp
ins
es
inc
inc
test
mov
rol
jl
mov
and
adc
inc
mov
outs
cmp
pop
(bad)
xchg
daa
jnp
push
icebp
(bad)
xlat
pop
out
pop
arpl
jmp
push
imul
push
fwait
mov
mov
mov
div
mov
sub
and
mov
jno
push
inc
and
add
pusha
jns
out
cld
mov
push
outs
mov
mov
jge
shr
iret
nop
(bad)
adc
mov
jnp
and
ins
dec
test
jecxz
inc
add
and
mov
or
and
int3
mov
jecxz
mov
adc
sbb
loop
sbb
add
cwde
ror
push
imul
idiv
into
cdq
xor
add
cld
jbe
adc
add
sbb
mov
xor
call
test
fwait
or
movs
mov
scas
popa
rol
in
inc
mov
jae
in
repz
fwait
adc
lea
pop
push
jl
mov
sbb
inc
add
lods
imul
pop
mov
add
jmp
xor
xchg
push
pop
jmp
jmp
imul
mov
bound
call
mov
ret
xor
movs
push
fisttp
imul
adc
(bad)
jae
sub
xchg
cld
pushf
sti
inc
xor
mov
inc
hlt
dec
iret
lds
mov
push
pop
inc
test
ss
sub
or
inc
int
mov
inc
mov
cmp
(bad)
cdq
icebp
ds
out
mov
(bad)
mov
test
inc
sbb
in
mov
aam
xor
cmp
jmp
outs
int3
cmp
clc
sti
push
int
sub
jnp
pushf
xor
xor
gs
das
jae
stc
call
sub
xor
mov
add
fist
jo
push
pop
push
xor
leave
adc
sahf
and
pop
sar
ins
rol
pop
(bad)
xor
or
cmp
cmps
jmp
stos
repnz
and
mov
popf
mov
retf
stos
xchg
xor
pop
(bad)
sbb
(bad)
cmp
psllq
arpl
mov
or
sub
dec
rcr
fldenv
out
dec
fldenv
push
bound
jo
cs
xlat
and
inc
bound
inc
sahf
xchg
jo
stos
rcr
mov
xor
cmps
dec
(bad)
into
pop
xor
adc
scas
shr
outs
ret
mov
ins
and
mov
inc
mov
or
push
cld
jae
cmp
lahf
sbb
mov
ins
fisub
push
push
sub
push
jl
outs
in
xchg
es
(bad)
sar
mov
xchg
dec
adc
mov
jg
jne
jne
imul
adc
repnz
mov
mov
xor
sahf
popa
mov
xor
rcr
ins
(bad)
mov
jmp
mov
inc
movs
loop
cld
jb
ins
mov
outs
enter
lahf
pop
push
mov
loope
loope
xchg
pop
call
ror
aaa
out
sahf
or
dec
jnp
or
cmp
push
sti
cdq
and
inc
jmp
jge
int3
add
pop
xor
sar
call
pop
inc
data16
xchg
jnp
or
enter
pushf
cdq
or
dec
add
xchg
mov
(bad)
nop
test
movs
sub
push
dec
outs
or
mov
cmc
jmp
sbb
sbb
sub
aad
dec
push
dec
fisubr
bound
test
lahf
hlt
dec
mov
outs
xacquire
inc
or
mov
inc
adc
outs
outs
(bad)
in
ins
call
push
jnp
and
call
hlt
add
dec
and
xor
test
fmul
xlat
or
dec
ret
addr16
mov
push
cmps
mov
sub
sub
xchg
pusha
lahf
pop
inc
jge
adc
mov
jae
cs
lods
cmp
or
push
or
test
out
ffree
test
pushf
loopne
cmc
adc
push
mov
dec
and
loopne
sub
xchg
cmc
xchg
jle
adc
ret
popf
mov
loop
outs
in
call
inc
xchg
xlat
add
cmp
in
ins
ret
cdq
mov
cmp
mov
adc
add
ins
mov
inc
loopne
mov
sbb
cmc
adc
leave
(bad)
daa
xchg
call
ss
mov
cmp
gs
aam
jne
in
retf
xor
pop
fst
popa
lahf
jae
jle
test
lods
(bad)
push
fsub
imul
mov
mov
push
xchg
(bad)
ds
retf
sbb
cmp
push
retf
outs
sub
pusha
lods
inc
or
into
mov
sub
or
push
rcr
mov
in
retf
outs
sbb
mov
adc
fmul
addr16
jo
or
lods
fwait
xor
fs
loop
cmc
call
pop
idiv
movs
sub
int
cmp
jns
dec
mov
push
jecxz
cmc
cmovo
xchg
in
hlt
out
and
add
dec
push
jb
(bad)
and
cmp
or
sub
push
add
jecxz
test
movups
mov
idiv
and
js
or
xor
into
push
test
add
or
mov
and
enter
clc
fmul
xchg
dec
popf
aaa
in
pop
retf
data16
sbb
mov
sbb
dec
mov
cmp
out
addr16
or
stos
rol
les
mov
xchg
sbb
aad
jne
enter
mov
fidiv
fsubr
test
daa
loopne
out
pop
xor
inc
test
icebp
rcr
jo
mov
test
xchg
pop
mov
repz
aam
jo
dec
dec
retf
ja
jno
inc
inc
(bad)
inc
jp
fistp
and
mov
cli
and
mov
jmp
mov
xchg
sbb
sub
loop
or
xchg
cmp
fst
cwde
stos
inc
jmp
push
mov
push
mov
jge
leave
adc
rol
xor
xchg
mov
push
rcl
pop
cli
stc
int
cmps
out
adc
xor
mov
xchg
dec
cmps
mov
fs
and
and
ficomp
test
jo
ret
out
push
inc
mov
jmp
push
inc
jmp
mov
mov
repz
push
push
or
das
pop
ficomp
aam
pop
cdq
je
push
sub
inc
je
or
das
shl
mov
test
sbb
lods
mov
clc
inc
je
add
sahf
outs
adc
or
mov
jg
pop
lea
push
xor
push
daa
jg
mov
adc
cmp
pop
xchg
xor
dec
ret
mov
rcl
dec
outs
cmp
dec
dec
out
mov
dec
xor
ins
aas
jno
fnstenv
xchg
jge
and
add
fsubr
jecxz
int3
or
dec
push
stos
ret
bound
cmp
dec
mov
fucom
ja
stc
inc
and
mov
rcl
sti
rol
(bad)
mov
sbb
das
and
bound
sub
outs
dec
in
mov
aaa
test
fnstenv
adc
dec
sar
loop
mov
inc
mov
and
stos
out
ret
dec
jae
or
inc
inc
push
push
push
jb
xor
cdq
inc
push
leave
sub
dec
ror
ja
stc
sbb
push
pop
sub
add
push
cli
popf
cdq
outs
mov
cdq
push
lods
adc
shl
loope
ja
dec
xor
or
daa
rcl
push
xchg
dec
sahf
jo
and
cmp
ss
(bad)
outs
push
cmp
dec
jmp
cmc
pop
dec
sub
shl
add
ss
stos
jmp
inc
aaa
inc
ins
ror
dec
sub
mov
shr
or
data16
popa
sti
loopne
(bad)
aad
stos
mov
inc
js
stc
les
and
jno
xchg
push
retf
ret
in
or
(bad)
cmps
imul
dec
lock
mov
sub
iret
or
pop
movs
add
lods
push
ja
pop
cmp
mov
fidiv
add
fidiv
sbb
xchg
rcl
mov
xchg
ja
fcom
outs
jmp
int3
fmul
pop
ja
sti
pop
cs
cwde
dec
in
pop
jle
sti
in
test
ss
in
push
adc
mov
pop
mov
mov
add
pop
inc
pop
mov
mov
mov
xchg
xor
neg
push
fsubr
and
cmp
xchg
inc
push
pop
jl
fcom
push
fisub
in
push
iret
xchg
out
jl
mov
jae
stc
(bad)
xor
push
sbb
ja
addr16
xchg
pop
xlat
push
dec
xchg
out
xor
cmps
loope
pop
push
pop
outs
cs
mov
ja
ja
dec
push
mov
xchg
ja
gs
fwait
add
or
pop
jmp
std
sub
imul
dec
(bad)
mov
cmps
das
loop
push
das
push
or
rol
mov
mov
mov
add
xor
jae
nop
adc
mov
cmp
test
mov
pop
rcl
mov
enter
ss
or
push
js
jl
in
fs
mov
push
jp
pop
xchg
and
pop
xchg
ror
or
dec
stos
inc
xchg
xor
xchg
mov
or
test
dec
mov
je
or
hlt
test
pusha
(bad)
(bad)
and
enter
outs
dec
push
data16
int
ror
xchg
in
aaa
pop
jl
imul
jae
scas
cmp
mov
cli
adc
mov
stos
(bad)
or
mov
les
adc
jp
arpl
ins
ret
push
mov
mov
lods
cmp
xchg
pop
push
fmul
fwait
aaa
test
inc
xchg
add
repz
lods
(bad)
mov
pop
dec
popa
inc
xlat
sub
add
pop
add
mov
push
es
xchg
bound
sti
fcomp
mov
mov
data16
xor
cmp
jmp
mov
cdq
xchg
xor
jmp
mov
push
inc
mov
fcmovbe
call
popa
add
icebp
and
lahf
stc
push
dec
call
cld
dec
mov
pop
xor
pop
in
or
loope
dec
jl
mul
pop
jg
movs
enter
add
add
ror
mov
fimul
sub
ins
push
mov
adc
xchg
rcl
data16
ret
enter
adc
loope
jecxz
adc
icebp
fistp
mov
push
xlat
xchg
call
push
sub
das
fnsave
fwait
stos
push
adc
and
push
xor
push
mov
out
and
stc
into
mov
(bad)
mov
jno
mov
scas
sub
inc
mov
and
lods
mov
sbb
neg
sub
shl
js
retf
(bad)
jb
jo
jge
sbb
pop
add
movs
fs
test
rcl
add
push
jge
mov
mov
mov
out
pop
mov
mov
pushf
lsl
jae
enter
repnz
les
les
cmp
push
mov
xor
test
int
pop
rol
push
stc
loope
pop
es
aad
cld
add
push
add
add
lods
in
pop
mov
jg
xchg
dec
xor
jmp
ss
push
jae
dec
test
arpl
je
popf
sub
hlt
sbb
jl
dec
sbb
adc
or
daa
cmp
jmp
repz
mov
shr
outs
retf
inc
loopne
jbe
inc
in
pop
ss
jecxz
test
pop
mov
dec
sub
or
cmps
test
jno
jp
dec
mov
mov
mov
jmp
scas
pop
dec
or
push
xchg
pusha
cmps
imul
int
mov
cmp
std
mov
xchg
ss
inc
nop
rol
adc
mov
cmp
mov
pop
pop
jmp
add
adc
stos
mov
xor
iret
ins
sbb
ins
mov
push
xor
out
cmp
(bad)
nop
sbb
loopne
mov
cmp
push
jnp
sub
jae
sbb
call
out
or
xor
sbb
scas
mov
das
add
lock
pop
add
fmul
ret
test
nop
sbb
xor
iret
imul
mov
bnd
shr
outs
cld
pop
bound
sbb
jnp
pop
sbb
ds
mov
mov
pop
pushf
std
xor
call
or
jmp
xchg
(bad)
or
xlat
lahf
xchg
dec
xchg
fld
aaa
inc
jle
add
mov
ins
(bad)
jae
fnstsw
data16
sub
dec
mov
adc
adc
retf
fmulp
aam
sbb
jno
or
lods
mov
(bad)
xor
inc
xlat
lahf
clc
add
sbb
xchg
pop
retf
cmp
dec
pop
in
stos
adc
or
dec
and
jmp
and
loop
mov
and
cmc
dec
pop
pop
dec
adc
bound
and
and
mov
(bad)
xchg
std
daa
mov
popf
bound
xchg
push
xor
pop
sar
aaa
sub
mov
retf
dec
enter
imul
aas
sti
dec
push
sti
mov
enter
push
leave
in
retf
out
in
in
sbb
mov
jne
pop
jle
mov
mov
les
jmp
shl
shr
push
mov
sub
xlat
aaa
sbb
fidivr
nop
dec
fbld
jne
out
(bad)
inc
iret
pop
mov
lods
push
lods
adc
push
shl
mov
push
cmp
pop
add
pop
stos
fnsave
es
cmc
test
and
add
lds
lods
or
xchg
retf
mov
xor
lea
and
and
inc
clc
cmp
push
popa
fiadd
push
popa
aas
add
mov
ins
outs
mov
test
mov
inc
and
cld
pop
popf
fcom
lds
pop
iret
sbb
cmp
cdq
mov
sub
paddusw
push
cdq
ds
cmps
ror
fs
and
jg
jbe
cmc
pop
div
scas
call
inc
daa
push
inc
mov
imul
or
lock
jmp
fwait
sbb
pop
dec
call
cmp
xchg
mov
pop
in
loop
sub
ds
xor
push
push
jecxz
aam
add
adc
sub
dec
or
mov
mov
rcr
aad
aad
test
pop
mov
adc
nop
out
ins
(bad)
jne
mov
and
test
scas
cmp
shl
xor
loop
cmp
cwde
rcl
sti
test
je
add
xchg
rcl
or
adc
mov
mov
loope
jp
xor
pushf
in
cli
std
fwait
scas
hlt
sub
daa
mov
out
pop
fstp
jae
ja
js
push
enter
icebp
cmp
cwde
in
les
nop
sub
push
sbb
ins
sub
cs
stc
sub
sbb
test
mov
scas
shl
int
rol
pop
mov
jle
lea
push
icebp
adc
in
mov
movs
imul
out
pop
inc
push
adc
push
mov
push
daa
sub
and
or
ror
stc
in
jmp
push
inc
cmp
dec
aam
aaa
call
inc
psubb
and
cld
xchg
adc
addr16
pop
mov
push
mov
sbb
or
sbb
mov
ret
xchg
aaa
or
or
daa
lds
cs
shr
pop
popf
sub
pop
lods
iret
rcl
xor
add
mov
cli
sbb
jp
add
mov
adc
push
mov
sti
leave
imul
pop
mov
mov
test
cmp
push
bound
sbb
jmp
jp
push
stc
das
xchg
outs
xor
sub
shl
lahf
sub
outs
push
lds
dec
sub
mov
adc
push
stos
push
setno
push
push
push
mov
inc
arpl
ret
dec
push
push
es
sub
push
into
dec
add
das
jmp
cmps
xor
or
fisttp
sbb
fs
movs
sbb
adc
gs
push
loope
jecxz
and
lahf
lock
xor
jl
(bad)
xor
ret
mov
mov
popa
cli
mov
mov
xlat
stos
add
imul
int3
rcr
xor
pop
jno
ret
retf
mov
es
adc
es
pop
fwait
jmp
jp
xchg
jle
xor
aad
inc
cwde
jnp
std
outs
sub
fs
sub
in
out
into
sbb
sti
loope
and
in
dec
js
das
enter
addr16
leave
je
cmps
push
mov
adc
retf
test
ret
inc
mov
jnp
je
push
and
add
ss
rol
mul
push
out
imul
dec
adc
and
test
retf
sbb
push
loop
ret
push
pop
sbb
test
xor
mov
fisttp
(bad)
pop
jnp
das
mov
repnz
or
and
mov
les
inc
in
mov
fwait
jmp
pop
aam
test
jmp
fidiv
jmp
jnp
pushf
out
in
and
lds
orps
xchg
imul
retf
dec
dec
xchg
fidiv
shl
adc
pop
jne
mov
loope
stos
dec
js
into
jne
aas
push
push
retf
bsr
jne
jbe
shl
aam
push
sbb
lea
lahf
adc
in
sbb
dec
and
xor
mov
cmp
pop
(bad)
scas
movs
jp
push
pop
adc
mov
push
(bad)
out
out
adc
in
out
ror
dec
bound
or
sbb
ins
xlat
std
dec
(bad)
(bad)
push
add
packssdw
xchg
cmp
loopne
cdq
shl
adc
cmps
scas
cmp
repz
xchg
push
retf
inc
adc
dec
movs
mov
sub
call
aas
jae
cwde
repz
sub
xor
jge
sbb
push
test
ror
jl
mov
popf
(bad)
fmul
mov
and
test
jo
lahf
sub
popa
push
jae
sbb
jne
lods
jbe
jle
inc
hlt
dec
sbb
sub
jns
mov
retf
sti
enter
xchg
mov
mov
add
jecxz
cdq
pop
sbb
and
lea
clc
mov
and
xor
xor
into
mov
cmp
es
jns
int
popf
sbb
jb
std
fisubr
mov
out
mov
xchg
nop
xor
daa
outs
aad
movs
retf
dec
shl
mov
adc
cmp
sub
mov
out
adc
int
or
bound
imul
fwait
outs
mov
pop
int3
pop
jge
stos
or
(bad)
int3
sub
mov
adc
or
lods
jmp
leave
cli
loop
push
cmp
call
xor
adc
aas
xchg
dec
repz
repnz
jmp
movs
or
xor
sbb
ror
push
xchg
dec
jbe
mov
pushf
idiv
add
dec
and
and
sbb
xchg
inc
aam
pop
imul
les
movs
jl
inc
aam
hlt
mov
sti
sbb
outs
pusha
mov
inc
mov
and
stc
(bad)
push
sub
hlt
or
pop
and
fwait
mov
pop
test
pop
xchg
addr16
in
mov
ficomp
jns
mov
jnp
mov
push
mov
mov
mov
call
gs
xchg
sub
lods
sub
dec
dec
push
lea
out
fcomp
xchg
mov
aas
popf
mov
xor
xchg
mov
adc
test
aas
jae
xchg
xchg
ror
les
mov
pop
lods
add
push
pop
ja
xor
std
mov
ja
mov
jle
and
pop
(bad)
test
jle
inc
jo
cmp
or
fcmovbe
fiadd
mov
jbe
leave
mov
and
xchg
push
push
fstp
inc
push
add
cmp
rcl
pop
cmps
jecxz
ss
dec
jmp
mov
xchg
test
ret
mov
cmp
fldcw
push
cmp
adc
or
call
arpl
mov
jge
sub
add
add
rcl
jecxz
out
cmp
das
clc
mov
cmps
mov
fwait
into
ins
in
stos
test
add
pop
push
bound
adc
push
(bad)
sub
cdq
iret
jmp
push
fnstenv
gs
push
mov
cld
jge
out
in
(bad)
push
pop
cmp
arpl
fadd
or
in
rcr
ja
test
dec
(bad)
or
imul
dec
xchg
xchg
icebp
push
pushf
mov
out
mov
dec
out
enter
mov
cmc
dec
or
stc
nop
adc
jno
add
stos
cmps
mov
sahf
and
cli
inc
add
jmp
es
inc
lock
sub
and
loope
push
pop
mov
pop
or
pusha
pop
pop
adc
scas
xchg
aam
imul
outs
mov
inc
mov
push
mov
data16
rcl
lea
call
(bad)
or
mov
mov
dec
push
lods
adc
xchg
jae
push
pop
clc
das
mov
iret
fsub
and
test
hlt
inc
inc
mov
repz
xor
fild
call
xor
jno
aad
dec
lods
mov
dec
inc
aaa
daa
mov
jg
or
fild
ds
adc
cmp
pop
scas
stos
pop
sub
fisub
pop
inc
mov
rcl
or
mov
push
xor
dec
push
pop
fidivr
mov
fcomp
icebp
sbb
push
push
mov
sbb
mov
pop
bound
push
addr16
push
push
dec
ror
inc
in
xchg
pop
xchg
cmp
push
add
shl
(bad)
sub
in
pop
push
mov
pop
sbb
(bad)
outs
jg
mov
sbb
test
sbb
lds
cmp
mov
into
inc
mov
call
xlat
xchg
mov
(bad)
jecxz
push
shl
movs
mov
xchg
xchg
outs
fs
or
and
aas
not
inc
xchg
lds
cdq
in
ins
xchg
sub
call
pop
call
xor
out
and
sub
or
movs
dec
push
cmp
and
mov
lods
(bad)
mov
mov
in
fld
and
cs
(bad)
sub
in
cmp
js
dec
mov
inc
xchg
jne
das
es
jnp
sbb
(bad)
stc
jle
mov
xor
pop
jmp
mov
mov
test
and
frstor
in
pop
xor
int3
pop
mov
mov
xor
push
mov
fidivr
imul
scas
sbb
frstor
ja
sbb
xor
nop
stc
mov
and
pop
jo
lods
dec
popf
loopne
mov
add
out
jp
mov
adc
loop
sbb
shl
jg
clts
fst
ror
call
dec
scas
push
push
push
pop
dec
xchg
dec
cmp
rol
fidiv
movs
aas
movs
or
cmp
outs
mov
je
mov
mov
push
cmp
mov
add
mov
mov
push
inc
lods
mov
int
adc
rcl
iret
enter
lods
cdq
dec
into
inc
mov
lds
repz
dec
jecxz
leave
aaa
(bad)
lods
stos
shl
das
daa
in
or
fdivr
and
push
arpl
mov
fadd
mov
xlat
movs
(bad)
fwait
push
and
add
(bad)
scas
add
inc
js
jb
xor
mov
mov
lds
xor
push
xor
dec
pop
clc
hlt
cmp
pop
dec
int3
push
push
int
retf
rol
bound
int3
fcom
adc
fdiv
rcr
xor
imul
jmp
xchg
adc
loope
out
adc
pop
mov
hlt
sbb
enter
cmp
or
adc
jns
mul
out
and
xchg
push
cs
push
fdiv
push
cmp
jp
jns
xor
pop
(bad)
in
shr
dec
mov
into
adc
or
dec
ffreep
loopne
pop
jae
sbb
pop
mov
push
cmp
xchg
or
and
leave
stos
out
jmp
or
mov
ins
int
dec
sbb
nop
push
jne
inc
adc
xor
in
inc
jmp
cmp
or
cmp
push
movd
movs
popf
pop
std
pop
push
js
mov
adc
lds
stc
in
jmp
das
pop
xchg
xchg
movs
fidivr
ja
or
xor
cmp
cmps
test
test
mov
xchg
adc
lods
sar
nop
shl
jge
or
jmp
das
cmp
sbb
jmp
jo
cwde
cli
mov
lock
or
sbb
lea
and
or
xor
inc
in
jnp
data16
aas
inc
dec
mov
pop
pop
fidivr
(bad)
stc
(bad)
ret
int
out
xor
adc
jne
out
fadd
cwde
ror
add
adc
push
dec
push
mov
cmp
mov
vcmpss
cwde
popa
adc
test
or
add
ds
cmp
sub
push
jp
push
dec
add
call
push
clc
adc
pop
mov
mov
mov
das
mov
mov
xor
cmp
cmp
sub
aam
test
inc
ds
rcr
dec
fwait
xchg
adc
lock
nop
sub
pop
in
(bad)
icebp
pop
cld
arpl
mov
mov
add
or
jbe
out
int3
jbe
fwait
push
call
fdivr
mov
jne
adc
bound
(bad)
sahf
jnp
jne
bound
lahf
dec
add
inc
jb
das
cwde
jne
cmp
(bad)
int3
xor
(bad)
fbstp
(bad)
in
xor
sbb
ret
cmp
pusha
mov
inc
push
jno
enter
xor
jb
dec
pop
adc
pushf
mov
es
adc
arpl
js
cmp
(bad)
pop
xor
cli
add
and
adc
jmp
stc
and
inc
in
scas
sub
jns
adc
pop
(bad)
fcom
pop
test
ficom
jmp
push
leave
xchg
cmp
push
aad
sbb
jo
std
cmp
ret
add
mov
jl
leave
inc
cmp
jb
call
test
sub
xchg
and
data16
gs
cmp
and
(bad)
sub
xor
popf
pop
inc
out
mov
movs
push
popf
push
call
pusha
arpl
and
add
dec
sbb
pushf
xchg
jae
cmp
push
push
and
mov
inc
dec
inc
mov
jmp
clc
jne
cmp
je
es
sahf
jae
or
iret
lods
iret
xor
frstor
jns
cwde
push
movs
std
push
imul
pop
icebp
jae
pop
out
popf
shl
data16
and
ins
hlt
jnp
mov
aaa
pop
mov
fld
mov
mov
sub
dec
jp
pop
nop
scas
or
jns
call
int
sbb
lods
(bad)
(bad)
idiv
std
cmp
mov
out
xchg
rcr
cmp
out
jmp
mov
inc
idiv
dec
jne
enter
lods
scas
lods
jne
dec
scas
hlt
(bad)
mov
jle
mov
mov
dec
dec
test
jle
in
sti
loop
aaa
int
mov
mov
jg
addr16
pop
push
lods
clc
popa
xor
dec
in
push
add
imul
mov
mov
(bad)
sbb
dec
dec
and
test
in
sti
and
pop
lea
pushf
or
jp
shl
sub
jnp
sbb
jle
stos
sub
retf
lock
xchg
stos
fwait
xor
(bad)
scas
mov
ins
les
mov
inc
xchg
aas
in
mov
cdq
test
xor
or
jo
push
jae
sub
ror
mov
xor
cld
loopne
or
or
xchg
enter
gs
mov
pop
repz
retf
je
in
jecxz
in
repz
xchg
(bad)
ins
mov
add
popw
inc
pop
fisttp
stos
mov
pop
pop
lahf
inc
dec
cmp
scas
mov
add
es
mov
inc
movs
mov
jo
xor
push
add
dec
add
add
and
xchg
ror
cdq
fidiv
adc
dec
mov
pop
mov
sub
movs
enter
js
pop
pop
jne
sbb
iret
lea
outs
cmc
cmps
push
mul
mov
les
in
pop
loope
jnp
call
add
sub
dec
mov
add
xchg
dec
mov
(bad)
int
ss
cmp
jmp
jb
cwde
out
mov
ds
sbb
xchg
and
sbb
push
xor
sub
hlt
mov
sub
pop
lea
(bad)
das
addr16
sbb
sahf
jns
pop
popa
(bad)
pop
ins
mov
(bad)
inc
cmp
in
jecxz
mov
repz
inc
xchg
cdq
test
mov
ins
xchg
jmp
das
fdivr
jecxz
dec
pop
or
sar
das
imul
sub
loop
test
into
std
daa
cmp
jge
lahf
add
je
add
into
fwait
sub
add
clc
sub
daa
jb
adc
inc
pop
imul
jns
rol
test
stos
fcmovu
nop
loope
cmp
jp
lods
mov
mov
out
aaa
inc
stos
and
test
and
ds
fsub
cmp
jb
pop
bnd
retf
pusha
into
pop
mov
dec
pop
mov
ja
sub
xchg
das
test
mov
and
push
jo
das
or
xchg
sub
out
fidiv
cmp
jb
cld
xchg
sbb
pop
into
div
push
add
sub
xchg
fistp
xor
outs
daa
aam
xchg
pop
repz
add
sub
and
adc
adc
cmps
cmp
sub
mov
mov
mov
xor
outs
loopne
mov
imul
sub
fcomp
inc
adc
xchg
and
(bad)
jmp
loopne
cmps
or
mov
(bad)
dec
jle
mov
dec
les
(bad)
fldenvw
stos
sar
and
dec
jecxz
add
into
push
add
mov
or
xchg
sbb
mov
push
cmps
enter
pop
xchg
jecxz
mov
xor
sbb
movs
push
and
sub
hlt
rol
mov
fs
adc
cli
in
addr16
push
out
nop
or
mov
adc
push
out
lock
les
pop
push
xlat
ja
jl
mov
cmp
dec
and
jne
shr
sti
popf
out
sti
pop
pop
lock
mov
nop
cmps
pop
xor
sbb
mov
mov
ss
icebp
push
jne
retf
loope
mov
push
and
daa
ja
and
push
fbld
mov
test
stos
pop
or
add
movs
mov
sbb
xchg
je
mov
push
xchg
lahf
xchg
mov
jge
adc
pushf
call
out
cmc
movs
adc
add
in
into
pop
out
and
(bad)
std
fwait
mov
call
pop
test
aas
xchg
int
push
fst
adc
aam
jp
mov
xchg
mov
ja
xchg
mov
push
test
xor
(bad)
add
retf
cmp
and
cmovns
ins
rcr
cmp
dec
and
iret
rol
loopne
gs
fcom
fdiv
jns
je
retf
int3
inc
pop
fwait
mov
pop
addr16
imul
and
inc
sahf
dec
pop
lock
out
mov
cmp
inc
popf
xchg
lea
nop
test
ins
pop
push
inc
xor
ret
cdq
sub
cmps
(bad)
push
push
xor
pop
or
das
push
clc
aaa
cli
rcr
jae
inc
pop
cmp
test
retf
fst
fdiv
adc
xor
ins
icebp
jne
sbb
fadd
das
leave
ins
inc
(bad)
imul
dec
mov
adc
jge
leave
call
or
jecxz
rol
sub
and
fst
into
add
xchg
jg
jmp
in
outs
jmp
mov
(bad)
pop
push
test
mov
inc
xchg
xor
sahf
out
push
mov
sbb
jnp
ins
stos
into
loopne
inc
(bad)
sti
pop
test
xor
or
jle
mov
adc
icebp
pop
push
daa
lahf
outs
mov
mov
cmp
xchg
fild
jo
jmp
sub
scas
test
pop
mov
mov
pop
pop
(bad)
jne
or
rol
mov
xchg
inc
and
xchg
mov
iret
mov
mov
rcr
ficom
fcmovb
xchg
mov
fld
dec
xor
ds
adc
fcom
mov
xchg
les
repnz
fsub
lahf
push
sub
fwait
pop
mov
sbb
dec
repz
or
dec
test
inc
inc
dec
lea
cwde
inc
sbb
data16
or
call
ret
retf
in
sub
pop
push
scas
and
stos
hlt
pop
mov
mov
movntq
fcomip
stc
sbb
push
push
loop
mov
mov
dec
inc
and
sbb
fstp
jnp
aaa
pop
xor
add
cmp
push
js
repnz
int
call
shl
test
ror
mov
test
and
adc
sbb
mov
rol
dec
sbb
jmp
and
imul
stc
jecxz
push
repnz
adc
dec
pop
inc
sub
pop
clc
push
in
sahf
xor
ret
(bad)
mov
jp
out
xor
jmp
movs
ss
add
mov
push
sub
sbb
or
sbb
call
es
jnp
gs
sbb
cs
scas
mov
mov
jo
lds
xchg
sub
loope
add
and
idiv
enter
and
idiv
(bad)
test
inc
add
cmp
push
jae
or
loop
pushf
dec
xchg
into
sub
rol
cld
cmp
or
dec
(bad)
xor
xor
aad
sti
imul
gs
jbe
repnz
push
int
cwde
cs
inc
jmp
jecxz
fcmovb
or
int3
xor
lods
shl
pop
jo
fcmovu
xchg
test
into
pop
jecxz
jmp
add
xor
js
test
jbe
pop
add
int
inc
pop
mul
fs
dec
cmovbe
scas
push
jmp
mov
movs
in
adc
(bad)
hlt
cmc
hlt
mov
inc
push
cmp
jg
cmp
jns
inc
int
in
sbb
cmp
addr16
stos
sbb
pushf
jno
pusha
call
mov
mov
lahf
(bad)
mov
cmps
xor
mov
adc
push
jbe
test
stos
sub
fiadd
arpl
mul
ins
and
cmps
pop
add
mov
rcr
sahf
ret
aad
push
shl
adc
mov
pushf
jl
pop
mov
test
into
test
mov
ret
or
xchg
popa
mov
mov
movs
jg
and
jb
enter
pop
mov
and
fcmove
sbb
jne
and
jmp
inc
mov
std
popa
or
mov
xchg
xchg
repz
daa
and
cs
or
data16
push
loope
movups
mov
pop
loopne
loopne
lods
cmp
imul
popf
frstor
pop
mov
ja
mov
std
adc
ins
adc
leave
jmp
dec
push
mov
enter
jl
or
rol
add
ss
jg
cs
sub
out
adc
mov
jl
adc
les
inc
and
or
fist
aas
jp
mov
xchg
mov
sbb
ss
mov
xchg
shr
or
mov
mov
cmp
inc
cmps
jmp
mov
add
xchg
add
push
jbe
cmp
xor
xor
jl
std
pop
test
or
inc
inc
out
push
pop
and
add
clc
or
popa
out
xchg
dec
lods
dec
sahf
xor
jl
cs
push
in
shr
and
lahf
clc
sbb
call
inc
test
pop
sub
arpl
sbb
adc
aaa
push
push
xchg
sahf
psraw
mov
jmp
gs
jle
arpl
and
sbb
mov
cmc
dec
jg
mov
sbb
or
dec
je
cli
sahf
sbb
jg
sbb
sbb
in
push
mov
gs
sahf
fisttp
(bad)
lods
(bad)
or
daa
inc
imul
mov
mov
sbb
rol
sbb
rcr
xchg
mov
push
fisubr
push
and
aad
mov
jle
aas
fild
ror
push
mov
mov
or
mov
mov
mov
push
ins
fimul
fs
mov
pop
or
jb
fs
dec
call
adc
fdiv
xchg
enter
shr
sub
fst
xor
inc
cmp
xchg
popa
inc
stos
jle
dec
xor
add
out
data16
and
push
or
adc
pushf
imul
js
leave
mov
push
test
jmp
jecxz
push
pop
xor
pushf
sub
inc
(bad)
imul
data16
or
(bad)
jmp
or
(bad)
loopne
mov
test
ss
xor
in
adc
jge
mov
fidivr
mov
test
shl
mov
das
into
es
push
(bad)
in
jbe
dec
mov
data16
jle
and
daa
adc
(bad)
sub
fbstp
sar
dec
xor
pop
mov
sbb
clc
fcom
sub
imul
mov
adc
pop
push
jle
jg
mov
(bad)
scas
xor
jmp
loopne
add
push
and
or
adc
scas
jbe
retf
stc
jo
hlt
xor
xchg
add
or
sub
push
add
xchg
mov
xor
mov
push
push
(bad)
mov
test
add
call
mov
aas
and
sbb
dec
lds
and
cmp
js
inc
or
lods
xchg
pop
neg
rcl
pop
(bad)
fcomp
ret
lahf
mov
pop
push
xchg
shl
nop
pop
lahf
mov
jge
and
add
sub
imul
dec
mov
cdq
fnstenv
(bad)
add
shl
and
and
out
leave
cli
rol
fbstp
pop
lock
inc
pop
out
in
mov
pusha
dec
or
cmp
addr16
aaa
clc
nop
std
mov
rol
nop
add
adc
jnp
adc
add
push
adc
inc
sahf
jns
push
adc
and
out
push
xchg
loopne
std
lock
sahf
add
xchg
xchg
int3
mov
fnstsw
mov
jle
dec
mov
sub
lods
inc
pop
xchg
sub
inc
jmp
enter
add
lahf
adc
mov
outs
inc
out
js
fld
jmp
push
shr
jno
xchg
(bad)
daa
adc
cmc
push
pushf
jge
or
mov
xchg
push
pusha
or
fisubr
push
mov
stos
sbb
jge
dec
int3
add
ds
adc
dec
(bad)
add
stos
push
popa
stos
lahf
gs
xor
test
(bad)
cdq
ins
inc
pop
xor
mov
pop
push
push
or
xor
pop
inc
call
sub
ss
jmp
xor
mov
mov
ss
cld
retf
adc
or
mov
iret
lds
mov
push
and
pop
pop
jecxz
xlat
cmp
test
popa
inc
sub
cwde
stc
pop
icebp
sbb
(bad)
fdivr
mov
add
enter
dec
out
sti
fs
mov
pop
std
popf
rcr
xchg
jle
push
xor
dec
mov
(bad)
ficom
push
imul
cmp
and
and
jns
cmp
cmp
or
hlt
test
inc
xchg
ror
push
dec
add
xlat
xor
fcom
mov
test
lods
adc
ret
cmp
dec
mov
(bad)
loope
jbe
dec
xchg
add
rcl
ins
ds
in
add
push
jno
std
xor
push
jns
cdq
jnp
arpl
mov
sahf
(bad)
aas
ins
push
ja
loop
add
push
ja
out
mov
add
xchg
pop
jae
movs
mov
cli
aas
imul
std
mov
dec
dec
cmps
out
dec
fsubr
or
es
mov
inc
xor
test
adc
stos
xor
mov
icebp
ins
test
push
xor
or
shl
mov
pop
pop
retf
sbb
test
(bad)
and
and
jno
sbb
sub
xchg
stos
mov
ins
dec
inc
xor
(bad)
and
daa
adc
int3
cld
sti
jge
adc
xlat
push
test
mov
xlat
sub
outs
(bad)
sti
push
adc
xchg
inc
push
stos
call
bound
pop
mov
xor
sahf
adc
in
int3
jmp
push
fcmovu
retf
pop
dec
mov
xor
jnp
js
push
xchg
jmp
repz
daa
out
rcr
cmp
les
shl
push
push
imul
hlt
xlat
(bad)
out
test
fscale
adc
mov
stc
xor
scas
xor
outs
jp
sbb
and
adc
icebp
scas
push
add
jecxz
dec
rol
jle
pop
inc
add
cmp
cmp
or
in
xchg
jmp
jo
dec
inc
call
jae
popf
inc
sbb
(bad)
jbe
loopne
sar
jno
mov
push
pop
cmps
mov
sbb
test
stos
sub
arpl
test
mov
shr
das
inc
ss
scas
jl
imul
mov
xchg
cmc
call
pop
imul
out
enter
pop
sbb
arpl
jg
adc
push
in
pop
or
call
mov
clc
jecxz
mov
dec
hlt
xor
fsincos
jo
sbb
mov
or
adc
ss
mov
xor
push
pop
xchg
retf
adc
inc
test
xchg
out
rcl
dec
ss
sahf
dec
xor
dec
push
and
inc
cdq
dec
xchg
sbb
(bad)
adc
gs
(bad)
pop
pop
icebp
lea
or
pushf
out
xor
cdq
jmp
ja
repz
mov
jne
xchg
retf
cmp
repz
mul
lahf
fisttp
cli
shl
fldenv
lahf
enter
test
mov
fst
pop
adc
push
pop
js
std
in
les
data16
mov
cmp
test
fdivr
clc
sub
mov
sbb
xor
cmp
imul
je
jmp
xchg
add
jmp
imul
dec
push
test
mov
arpl
cmp
xchg
pop
int
dec
imul
push
fptan
adc
das
aad
std
inc
dec
fs
scas
cld
out
xlat
lea
add
or
xchg
cmp
sbb
je
sbb
aas
push
jb
jae
loope
sahf
mov
repnz
cli
jle
dec
retf
pop
push
cmc
ret
sbb
sbb
xchg
xor
inc
into
pop
fs
sbb
shr
adc
lock
jecxz
push
or
js
ret
and
aaa
(bad)
daa
mov
lea
or
jnp
xchg
xchg
push
test
out
add
xchg
push
lahf
pop
mov
push
mov
sub
mov
nop
sahf
jmp
xchg
imul
in
callw
fcom
ret
(bad)
jbe
xchg
in
push
daa
icebp
repnz
in
and
mov
(bad)
pop
(bad)
adc
fisubr
lahf
jae
add
cmp
xor
sub
push
dec
mov
adc
adc
mov
mov
add
outs
repz
xchg
fcmovu
imul
jecxz
sbb
pop
mov
fimul
pushf
dec
pop
jmp
and
xchg
jp
pop
pop
cmps
inc
retf
inc
rol
mov
fadd
(bad)
and
and
mov
lock
and
inc
in
ja
retf
pop
lock
mov
pop
jnp
jle
mov
movs
pushf
mov
lds
sbb
pop
ja
sar
arpl
or
scas
mov
add
aas
xor
int
outs
movs
loop
stc
push
push
inc
jno
icebp
mov
inc
mov
pusha
mov
stos
pop
or
xor
xchg
inc
pop
inc
out
lods
fistp
push
out
test
addr16
mov
cmp
pop
xor
sbb
inc
fs
jl
cmp
lea
out
xchg
sbb
jp
mov
push
mov
fwait
or
xchg
xor
icebp
sahf
icebp
sti
bound
repz
ss
inc
adc
sub
repz
iret
xchg
scas
jb
fild
push
je
inc
in
and
test
xchg
mov
sub
test
inc
mov
rcl
shl
retf
adc
sahf
dec
in
jne
xchg
lods
jmp
rcr
dec
es
imul
dec
adc
lods
fisub
stc
inc
cdq
jns
nop
push
fpatan
add
and
jnp
push
(bad)
push
mov
not
cmp
mov
xchg
and
push
clc
xor
nop
inc
inc
mov
movs
jns
xor
ficom
mov
std
jmp
jge
lock
jg
jle
es
fiadd
fstp
jecxz
stos
in
mov
jmp
pop
loope
es
cmp
retf
aad
in
mov
jb
ja
add
dec
push
fwait
int3
xlat
jg
xchg
inc
sbb
imul
ins
(bad)
xchg
push
xor
imul
cmp
mov
sub
pop
mov
add
jp
fidiv
jmp
(bad)
mov
retf
dec
mov
adc
or
inc
inc
fisttp
push
mov
mov
imul
pop
mov
fcomip
shl
mov
jns
mov
mov
jbe
adc
pop
pop
cdq
push
les
fisubr
mov
pop
into
jp
inc
aam
daa
fimul
pop
mov
or
xchg
fcomip
imul
push
test
sbb
data16
mov
xchg
out
jmp
fsub
mov
(bad)
jg
rcl
ret
call
jg
lods
jnp
dec
cmps
push
cmp
xchg
sbb
ret
ins
mov
out
mov
jp
aas
shr
sbb
or
gs
fadd
mov
push
cmp
sub
and
aam
mov
sete
cmp
out
push
pop
retf
out
jl
sti
je
or
mov
mov
adc
mov
shl
push
daa
rcr
pop
(bad)
sub
in
shl
popa
mov
dec
shl
mov
mov
dec
es
add
xchg
aad
sub
cmp
rcl
dec
aaa
and
dec
push
pop
nop
mov
test
in
int3
shl
sti
stos
out
pop
mov
push
popa
sti
out
xor
ret
dec
loop
push
mov
fistp
ja
jmp
xor
sub
cwde
mov
ins
sbb
or
aaa
sbb
jnp
mov
ret
xchg
enter
jne
lock
clc
popa
cmp
pusha
(bad)
jle
mov
cmovno
mov
(bad)
or
xchg
aas
push
or
lahf
outs
stos
inc
adc
mov
fwait
mov
(bad)
xlat
retf
imul
pusha
je
idiv
ficom
out
and
das
and
stc
lock
push
ror
add
jp
or
pop
add
aam
add
mov
and
scas
lods
xor
or
pop
out
dec
mov
enter
push
xchg
and
sub
popa
into
out
cmp
cmp
dec
repz
shl
aaa
fidiv
leave
dec
sti
xchg
xor
ret
aas
scas
repz
pop
call
mov
mov
rcr
cli
les
into
bound
xchg
xlat
fdiv
ss
repz
cvttps2pi
mov
idiv
hlt
jne
cmp
pop
add
push
push
push
jne
push
push
pop
gs
addr16
fmul
iret
mov
ds
popa
jbe
ja
mov
mov
bound
sbb
dec
lea
imul
shl
pusha
lods
aaa
and
cmp
int
cmp
fwait
mov
rcr
jmp
outs
sbb
mov
hlt
push
cwde
pop
dec
push
test
fld
stc
imul
mov
loope
test
cmps
out
and
adc
fbstp
cmp
ret
xor
outs
xor
jg
lods
jbe
push
mov
nop
test
lods
add
pop
fidivr
xor
pop
push
inc
jne
push
mov
cmps
jl
loope
xchg
jno
daa
sub
(bad)
outs
or
and
jge
fisttp
or
and
dec
iret
sbb
lods
sti
mov
test
pop
or
repnz
pop
lds
rcl
popf
cld
movs
fadd
ret
retf
inc
cld
cmc
or
or
mov
sar
mov
fs
dec
pop
mov
inc
mov
pop
mov
mov
jno
sbb
or
mov
sti
pop
cmp
pop
int3
arpl
test
scas
lds
pop
loope
es
cmp
mov
pop
outs
enter
and
fisub
jge
pop
jne
adc
xchg
call
stc
mov
dec
xor
into
cdq
sbb
inc
adc
aas
xor
mov
and
cli
xchg
repnz
xchg
push
xor
adc
mov
xchg
movs
pop
adc
pop
sub
jge
fild
cmp
stos
les
mov
push
jle
sbb
test
xchg
add
fisub
test
or
imul
fdivr
sti
push
(bad)
push
add
imul
(bad)
sbb
je
je
jg
mov
add
mov
cmp
xchg
call
push
adc
into
scas
in
push
iret
mov
sub
lock
jle
or
movs
aas
fwait
call
je
mov
cmp
mov
ret
cmp
movs
xor
mov
xchg
pop
pop
cdq
cli
retf
inc
mov
add
pusha
jmp
fmul
out
mov
stos
cs
loope
and
mov
pop
xchg
cs
push
pop
loopne
in
cs
inc
jmp
add
xchg
or
cli
adc
push
out
jp
jg
jns
gs
cld
inc
push
sbb
push
pop
push
das
gs
lock
mov
(bad)
sti
sbb
stos
add
sahf
xor
cmp
xchg
rcr
test
add
loopne
jl
cli
lods
inc
jae
or
(bad)
ins
pop
and
cwde
push
mov
adc
sub
int3
lahf
(bad)
cwde
mov
dec
iret
inc
or
dec
out
add
jnp
xor
mov
mov
xchg
(bad)
adc
or
(bad)
or
xor
pop
or
lea
and
stc
sub
xchg
mov
fisub
cmp
cmp
lahf
or
daa
into
mov
xor
xor
pop
mov
jg
scas
js
in
mov
push
jae
lahf
aas
out
pop
dec
mul
int
mov
or
and
xor
repnz
scas
xchg
inc
jo
inc
mov
(bad)
mov
das
adc
pop
dec
cmp
imul
mov
xchg
int
and
nop
aad
ret
cmc
pop
xor
bound
ss
sbb
push
add
retf
add
rol
pop
enter
cmps
inc
mov
gs
sbb
imul
jle
daa
not
in
pop
lods
mov
jmp
xor
fdivr
cmp
jnp
sar
ffreep
mov
jnp
pushf
add
outs
je
(bad)
adc
sbb
test
and
cmp
or
sbb
pusha
lea
aas
sbb
bound
push
inc
fwait
adc
or
or
xchg
inc
data16
add
scas
cmc
dec
jne
jb
mov
jmp
jle
mov
xchg
dec
sar
aas
mov
ja
ja
arpl
push
mov
clc
loope
mov
push
lods
out
mov
mov
push
addr16
mov
fdivp
jge
push
dec
sub
dec
pusha
or
lods
ror
push
pusha
dec
dec
mov
repz
ins
add
retf
pop
jecxz
push
imul
fidiv
in
dec
inc
(bad)
push
in
xchg
and
ins
outs
stos
pop
push
jge
xlat
enter
adc
inc
mov
popf
mov
pusha
push
call
scas
adc
or
ret
out
mov
add
ficom
fiadd
mov
mov
mov
fs
add
aam
loop
adc
rcr
movs
or
out
xchg
mov
sbb
adc
imul
pusha
jmp
cs
add
frstor
gs
push
fidiv
movs
and
xchg
jle
lahf
lods
ja
in
sub
push
aad
cmp
popa
xchg
push
push
xor
inc
jge
retf
pushf
jmp
mov
add
bound
adc
inc
je
mov
lods
jno
sub
push
mov
or
lds
(bad)
(bad)
or
jae
fldenv
sub
add
xchg
mov
fldenv
push
cs
pop
div
xchg
sbb
jl
mov
add
pop
popf
pushf
cli
pop
xor
or
fwait
sub
or
xchg
outs
test
clc
and
rcl
push
frstor
repz
scas
loopne
jo
or
out
fsubr
push
pop
or
mov
xchg
add
es
outs
ret
inc
mov
ret
xchg
mov
xchg
inc
dec
rcl
popa
cmp
inc
sar
jns
add
mov
in
inc
bound
sub
sub
icebp
jmp
ss
xchg
and
repz
sub
inc
cmp
inc
or
out
in
dec
aaa
stos
add
dec
int
lea
aaa
lea
es
icebp
out
and
pop
sar
fsubrp
hlt
aas
cdq
popf
aam
sub
scas
xchg
hlt
addr16
out
mov
jae
mul
lea
scas
sub
inc
stos
add
mov
mov
test
cmp
test
xor
and
pop
lahf
jno
adc
adc
mov
inc
call
jmp
cmp
pop
sbb
(bad)
pushf
arpl
jecxz
neg
mov
idiv
fiadd
aad
xchg
dec
stc
stos
cmc
popa
and
int3
mov
loopne
inc
dec
dec
sahf
je
daa
(bad)
jle
cmps
add
jl
cmps
pop
div
sbb
push
das
or
cmps
fdivr
movs
cmp
push
jnp
daa
pop
sub
repnz
loopne
push
pop
xchg
dec
adc
loop
(bad)
popa
inc
pop
inc
lods
popf
add
data16
repnz
xchg
enter
add
xor
test
imul
bound
(bad)
imul
xor
push
add
xor
mov
test
hlt
pop
mov
adc
les
dec
int3
dec
ror
repnz
sub
jp
dec
cwde
cmp
shr
xchg
bound
call
sub
outs
xchg
out
mov
and
(bad)
pop
es
mov
adc
stc
adc
or
fdivr
add
inc
mov
xor
test
lahf
call
pop
push
lods
lahf
out
sti
xor
or
pushf
cld
iret
push
add
aam
loop
out
out
lock
call
das
xchg
sbb
test
retf
rcr
ss
cmp
outs
rol
cli
xor
pusha
or
and
sbb
xchg
scas
and
sub
mov
sti
popa
and
pop
(bad)
cld
xlat
stos
push
icebp
not
xchg
fld
(bad)
sub
fdiv
ins
dec
hlt
cwde
mov
mov
test
loop
mov
aaa
sub
call
push
xchg
cdq
jae
sbb
push
jb
and
mov
addr16
ins
outs
sti
or
xor
sbb
push
bound
or
and
out
xor
sub
cmp
pop
loopne
out
loop
hlt
test
pop
dec
outs
ret
ds
fs
retf
cmp
dec
adc
cmp
retf
jp
pop
icebp
push
out
xlat
bound
loopne
retf
pop
ds
xor
cmp
jle
pop
daa
add
lods
mov
cs
je
xchg
jmp
sub
cmp
lods
adc
dec
mov
jg
and
fiadd
loopne
pop
pushf
mov
lea
fistp
in
cmp
jbe
inc
std
xchg
jmp
in
mov
dec
fdivr
inc
dec
lods
pop
sub
sub
cmp
(bad)
cmp
hlt
ret
sub
loop
and
pop
fiadd
rcl
add
into
push
sub
xor
sbb
mov
lds
and
lods
cmps
or
scas
mov
sub
mov
mov
xchg
pop
ja
test
xchg
cmp
pop
imul
xchg
das
aaa
loop
out
pop
xchg
inc
jecxz
push
ror
js
jbe
add
inc
shl
dec
xor
and
pop
pusha
add
pop
cmp
call
cmc
in
daa
and
pop
mov
adc
xchg
outs
cmp
imul
add
in
stos
out
jge
outs
sub
test
mov
popa
push
into
pushf
jns
(bad)
pop
cmp
call
std
data16
fisttp
mov
push
shl
or
lahf
adc
test
push
hlt
cmp
je
leave
inc
lods
test
cmp
mov
jle
pop
(bad)
push
add
or
dec
aas
push
jo
xor
ins
adc
loop
xchg
data16
fdiv
cmp
and
in
fxch
fdiv
add
call
enter
popf
and
test
pusha
xor
cdq
or
test
mov
into
sbb
imul
data16
push
jbe
dec
mov
xchg
or
mov
xchg
xchg
test
jae
test
das
or
(bad)
jmp
dec
xor
jecxz
mov
mov
and
dec
xor
not
rol
popf
mov
add
or
test
call
xor
ret
outs
add
jg
lahf
bound
fsubr
aaa
ins
or
add
pop
cmp
add
arpl
push
call
mov
sbb
sub
mov
nop
xchg
and
and
retf
mov
scas
out
shr
cld
test
daa
je
mov
mov
cmps
jnp
out
test
in
aam
test
inc
out
inc
popf
add
sti
mov
mov
in
mov
and
ret
inc
mov
xchg
mov
dec
mov
je
mov
outs
jb
cmp
adc
movs
sub
adc
leave
inc
ficomp
leave
or
jmp
cmps
js
pop
mov
and
in
movs
mov
adc
and
nop
xchg
mov
xchg
xor
scas
push
das
into
jnp
(bad)
jle
mov
push
mov
or
push
sbb
sbb
xor
cmp
inc
mov
mov
in
nop
push
adc
xor
cs
adc
loope
gs
jne
jl
jge
mov
test
invd
or
ss
jle
div
jp
mov
inc
add
push
jle
int
lahf
xchg
sub
movs
fimul
cdq
popf
mov
and
lds
in
push
jp
ins
xor
les
addr16
ret
cdq
and
add
pop
(bad)
adc
nop
sahf
ja
test
mov
pop
aad
push
out
jnp
sbb
ds
sbb
add
cdq
adc
neg
push
adc
sbb
loope
int3
or
sbb
inc
fisubr
idiv
xchg
imul
addr16
sti
lods
sbb
mov
aaa
mov
gs
cdq
push
movs
sbb
fs
jne
add
imul
mov
mov
xchg
lahf
dec
lods
sub
xchg
and
or
inc
inc
sbb
fistp
push
dec
lds
adc
inc
movs
out
fild
pop
aad
aam
pop
cli
mov
leave
pop
inc
xchg
cmp
mov
cs
push
lea
jnp
aad
jne
(bad)
pop
cmps
icebp
or
dec
out
adc
iret
push
jecxz
sbb
das
pop
aad
sbb
xchg
jecxz
fsubr
jmp
mov
add
sub
inc
sub
lods
pushf
jecxz
add
retf
cmps
outs
cmps
and
add
jge
call
test
mov
sti
iret
xchg
call
xchg
adc
mov
gs
cld
xchg
cmp
call
and
outs
(bad)
xchg
sub
(bad)
call
jg
cmp
in
sub
pop
iret
jne
mov
arpl
lds
and
mov
test
mov
pop
xchg
xor
jg
push
pop
popf
pop
sub
xchg
jns
jne
stos
out
fcomip
and
cmps
push
mov
mov
xchg
aam
lea
add
not
dec
push
rcr
adc
xor
fwait
cs
or
xor
ret
mov
lahf
inc
int3
pushf
sbb
shl
sub
lahf
ret
mov
lods
dec
or
cdq
push
cmp
pusha
enter
fwait
xchg
or
cmp
pushf
xchg
xchg
or
mov
or
add
mov
iret
inc
adc
xchg
in
mov
test
and
mov
ds
cmp
push
push
mov
mov
movs
push
scas
div
dec
idiv
sbb
repnz
sbb
xor
dec
retf
lock
stc
sbb
push
mov
jb
push
sbb
sub
or
jns
fnsave
cmps
dec
ja
inc
jbe
in
(bad)
jg
fidivr
mov
cmp
pop
ret
fwait
pop
xor
fdiv
pop
adc
je
add
ret
sbb
or
test
shl
pop
out
movs
test
repz
adc
jle
fisttp
push
push
jp
ret
adc
jne
cdq
stos
push
sub
mov
nop
jo
cmp
rcr
fistp
lea
push
xchg
loope
jp
fdiv
hlt
xor
pop
popf
push
cmps
cli
outs
lods
push
sub
iret
outs
inc
mov
adc
and
push
(bad)
pushf
vpunpcklwd
sar
test
popf
push
loope
cmp
enter
pop
mov
jmp
jge
mov
sbb
sub
inc
(bad)
popa
lock
out
jbe
jnp
imul
imul
stos
ret
mov
fcom
mov
cmp
cmp
sbb
popa
out
lods
in
jns
ins
(bad)
cmp
or
fadd
cli
hlt
ss
mov
retf
mov
pusha
mov
pusha
ja
leave
addr16
xlat
push
mov
jmp
ins
inc
jmp
pop
jmp
fsub
les
xchg
lods
jp
cmps
sbb
retf
in
inc
add
mov
shl
mov
pop
and
add
pop
sar
retf
add
sbb
dec
or
lods
or
in
sbb
sbb
test
mov
inc
adc
pop
jmp
retf
inc
mov
pop
in
push
dec
sahf
call
push
push
scas
dec
cmc
adc
hlt
inc
cs
mov
add
dec
sub
pop
cmp
lods
ins
dec
jmp
fistp
and
mov
addr16
in
mov
mov
jno
stc
scas
int3
outs
jle
and
xor
jl
(bad)
lods
(bad)
(bad)
mov
sub
fld
dec
std
adc
and
dec
daa
es
cwde
push
aad
jge
mov
fist
xor
jge
cmp
(bad)
sahf
jns
icebp
rcl
dec
mov
div
ds
inc
jge
imul
ss
lahf
sub
mov
sahf
jbe
mov
test
xor
sub
test
mov
sbb
scas
shl
adc
add
cmp
data16
xchg
jmp
leave
lods
dec
jmp
retf
add
loop
retf
sti
adc
sbb
adc
mov
push
jg
add
mov
adc
add
pop
pop
test
idiv
gs
dec
loop
fiadd
(bad)
rcr
mov
call
in
cmps
(bad)
retf
ret
mov
(bad)
shl
cmp
pop
mov
adc
mov
(bad)
fisttp
sbb
push
shl
movs
xor
and
scas
ret
push
xlat
and
inc
test
cmp
dec
fsub
pop
add
push
sub
push
nop
push
test
and
xchg
ret
push
inc
test
aaa
sub
iret
lea
outs
push
or
pop
pop
jg
jae
inc
mov
vmovupd
fistp
bound
ret
jmp
sub
push
lock
jbe
push
jno
add
jp
lahf
adc
push
sub
sar
push
or
cmp
pop
popf
push
(bad)
adc
les
aaa
nop
push
sahf
adc
or
inc
sbb
pop
adc
in
imul
mov
es
movs
leave
rcl
cmp
jle
xor
stos
rol
ins
jmp
in
or
mov
test
jg
movs
sub
in
loopne
pusha
imul
(bad)
cld
(bad)
icebp
push
push
sub
push
punpckhbw
ret
scas
pushf
retf
mov
and
cwde
hlt
mov
iret
sbb
and
call
rol
nop
aas
jg
es
jo
jne
push
mov
shl
cli
sar
xchg
jmp
icebp
aad
mov
arpl
push
mov
stos
ret
repz
inc
or
mov
call
dec
sbb
popa
and
jns
adc
shr
bound
inc
shl
mov
xchg
sbb
pop
push
popa
cmp
jbe
or
bound
ins
jnp
in
scas
dec
retf
sbb
xchg
ret
pop
inc
cmps
pop
add
pop
pop
retf
jbe
nop
imul
(bad)
dec
imul
xor
cwde
fimul
add
pop
dec
lahf
dec
or
cmps
movs
icebp
les
jb
pop
push
cld
sbb
jno
cwde
mov
mov
jmp
or
pop
and
bound
or
cmp
jno
xchg
mov
jmp
int
adc
out
stc
cmp
loope
ja
sub
xchg
je
push
jmp
xchg
scas
ins
dec
xor
popf
cmps
xor
pop
jbe
jge
aam
xchg
jns
dec
hlt
ds
mov
adc
sbb
xor
xor
sub
inc
sbb
mov
jno
push
xchg
cmp
ds
mov
mov
cwde
cmc
(bad)
adc
jmp
jecxz
aad
jae
jbe
into
dec
test
daa
js
inc
mov
xchg
sub
rcr
(bad)
jecxz
inc
sti
cmps
xchg
loopne
sub
sbb
xchg
cld
sbb
bound
cmp
jb
push
pop
stc
icebp
mov
push
sahf
sbb
xchg
mov
aad
push
ins
out
test
inc
sub
std
push
adc
fwait
ret
or
and
sub
clc
ffree
retf
jmp
vpcomq
movs
push
call
adc
mov
push
adc
div
jle
sbb
sar
xchg
sbb
stos
xor
xor
leave
fnstenv
(bad)
addr16
cdq
ds
aas
inc
fstp
xor
data16
jnp
lods
lods
pop
mov
les
(bad)
jmp
mov
das
sbb
push
pop
sub
or
int3
mov
adc
jge
ins
stos
aas
pushf
dec
sub
dec
ins
dec
sti
xchg
xchg
and
pop
or
test
inc
movs
pop
pop
sub
movs
jmp
div
and
pop
aam
mov
and
xchg
leave
in
call
ret
pop
pop
fcomp
xor
xchg
test
adc
imul
mov
lods
jo
test
xchg
(bad)
call
out
add
or
jae
aam
push
fnstcw
xchg
mov
int3
jb
cld
daa
mov
shr
pop
cmp
ret
scas
sub
cli
xchg
dec
xchg
call
mov
stos
loopne
jl
cmp
and
mov
dec
cmp
mov
cmp
jl
std
xor
push
pop
jmp
adc
jns
data16
push
shr
(bad)
cmp
fst
pop
fiadd
push
jns
adc
push
lds
pushf
mov
adc
loopne
in
cdq
imul
retf
inc
fisub
cmp
xchg
adc
push
lds
and
call
lock
stos
(bad)
push
lods
push
xor
push
addr16
ds
addr16
fisubr
add
movs
push
lods
test
shr
sti
in
jmp
mov
mov
jge
das
and
adc
addr16
mov
add
jecxz
mov
(bad)
dec
mov
push
in
jne
mov
stos
outs
fs
lahf
aaa
xchg
inc
add
stc
xor
push
rcr
mov
push
inc
lods
jo
pop
pusha
xor
push
mov
loopne
retf
dec
adc
ja
cmp
mov
jecxz
fidivr
das
iret
sub
sbb
xor
xchg
mov
push
ror
inc
idiv
sbb
mov
int
ja
mov
or
xchg
dec
xlat
leave
fs
les
shr
subps
mov
jg
xor
xchg
das
mov
ins
mov
retf
jmp
jno
adc
outs
xor
cmp
movs
mov
push
or
cmc
push
not
lahf
nop
dec
shl
and
fnstcw
mov
loope
cdq
es
sub
mov
aad
push
pushf
mov
gs
sub
pop
ins
ret
sar
in
(bad)
push
fstp
sub
xor
js
sbb
jp
ins
test
fs
inc
je
dec
jb
push
hlt
test
mov
repnz
mov
fwait
mov
xchg
cmp
dec
sbb
dec
mov
leave
shr
pop
rol
mov
pop
jle
test
add
dec
out
(bad)
and
pop
push
jge
cmp
cmp
lods
dec
push
xchg
cmp
and
jecxz
push
mov
jbe
mov
cmc
mov
inc
sbb
jmp
imul
into
loop
pop
je
fstp
and
int3
xor
inc
aaa
pop
imul
lea
ficomp
adc
pop
inc
mov
imul
call
aaa
pushf
test
adc
aas
dec
pop
popf
push
and
fdiv
jl
pop
push
mov
ror
xchg
pop
add
adc
retf
mov
mov
add
arpl
mov
sbb
push
push
popa
xchg
push
daa
ins
pop
add
pop
mov
or
pushf
push
dec
ret
mov
push
(bad)
add
es
and
out
cwde
or
test
hlt
mov
mov
sti
das
gs
out
idiv
jo
inc
push
push
or
iret
stc
loop
or
jb
loop
inc
sahf
pop
add
movs
out
aaa
neg
sbb
add
call
mov
std
lahf
dec
xchg
sbb
adc
pusha
adc
and
cs
popf
push
cmp
aad
pop
fwait
pop
and
mov
push
lea
rcl
cmps
(bad)
mov
and
call
inc
or
adc
push
inc
stos
or
xchg
sbb
xchg
div
mov
je
adc
outs
movs
mov
stc
push
in
jge
cmps
retf
xor
sbb
sahf
add
inc
cmps
in
(bad)
fisub
fwait
jno
or
mov
in
add
add
mov
push
mov
jle
dec
add
sub
(bad)
push
imul
or
and
dec
xor
ficomp
jecxz
out
fld
pop
hlt
cmc
and
jns
and
cmps
mov
xchg
dec
mov
retf
xchg
pop
aam
(bad)
stc
jmp
pop
mov
scas
ins
icebp
pop
ror
cld
in
pop
shr
add
mov
jmp
jo
cwde
cmp
lea
pop
cmps
pop
fucomi
push
icebp
dec
in
pinsrw
add
mov
push
and
(bad)
pushf
pop
dec
(bad)
fisttp
das
test
arpl
mov
fs
xlat
push
es
push
push
push
jge
sbb
jns
mov
std
mov
fisttp
fcmovu
sub
push
pop
sti
sub
in
mov
pop
dec
xor
mov
xchg
xchg
je
adc
adc
enter
xor
hlt
in
pop
push
cmp
cli
addr16
mov
test
call
rcl
sbb
cdq
and
push
add
shr
pop
dec
and
nop
mov
mov
cmp
mov
aas
push
ror
jnp
sbb
jl
mov
pusha
mov
cld
mov
mov
jnp
and
xor
daa
jns
push
gs
das
sbb
mov
rcl
ja
add
add
cmps
lahf
pushf
push
arpl
dec
inc
cmp
fnstenv
pop
mov
jg
sbb
(bad)
jg
or
das
test
cmp
psubb
clc
add
(bad)
pop
cmp
jge
jl
inc
jno
xor
test
(bad)
clc
lahf
jae
(bad)
jne
xor
loope
push
lods
push
push
push
and
sbb
add
enter
js
cli
pop
dec
mov
fild
cmps
stos
dec
jle
ja
cdq
pusha
add
mov
cmps
inc
sub
push
outs
add
sbb
out
jg
repnz
repz
out
mov
add
xchg
dec
sub
fcomp
sub
sub
aad
ja
cmp
and
stc
mov
xchg
or
ret
bnd
cmp
dec
dec
sbb
mov
jae
hlt
push
sbb
fcom
adc
stos
jle
mov
xchg
xor
popa
adc
int
pop
or
jge
sbb
xchg
inc
fistp
mov
test
fisubr
sbb
jbe
out
sub
or
or
std
xchg
repz
sub
jo
mov
aad
lahf
aad
cli
fnstsw
or
cwde
sub
cmp
xor
jg
icebp
rcl
inc
xchg
push
sbb
mov
mov
or
fcomp
jp
pop
pop
es
int3
hlt
sbb
ins
push
aad
in
jbe
pop
in
inc
mov
lods
inc
(bad)
jno
stos
imul
sbb
ds
ins
mov
sub
pushf
test
push
lds
scas
mov
jecxz
aad
sub
cwde
in
dec
lock
stos
dec
test
inc
pop
mov
xchg
lock
pop
add
jne
outs
leave
es
lods
push
push
je
fld
push
fs
mov
repz
(bad)
aaa
jge
out
cwde
test
cmp
popa
mov
not
dec
mov
sbb
imul
xchg
inc
(bad)
mov
out
or
mov
aam
mov
leave
jp
pop
mov
shr
cmc
adc
jmp
lods
dec
dec
test
mov
(bad)
rol
push
push
(bad)
mov
dec
mov
arpl
cmps
dec
pop
pop
xor
push
lods
pop
into
pop
ret
cmps
adc
les
inc
enter
int
lahf
int3
sbb
mov
xor
sbb
adc
sti
stos
pusha
jg
call
push
aaa
push
dec
dec
sub
cmp
xchg
shl
jno
jns
mov
repnz
xor
pop
aas
mov
mov
test
push
mov
pushf
ffree
and
aad
sbb
pop
js
cld
std
jae
xor
aaa
pop
retf
and
sub
cmps
cmps
push
jg
scas
movs
mov
mov
jae
pop
ins
dec
mov
mov
sbb
xor
sahf
adc
pusha
ins
jmp
pop
sub
pusha
mov
or
psubw
aad
popf
mov
xchg
outs
dec
or
jp
rcr
dec
mov
lds
imul
add
add
loop
mov
dec
pop
push
xor
adc
cli
into
repnz
or
inc
dec
imul
mov
scas
popa
xor
pop
jmp
mov
int3
sub
pop
std
mov
sar
and
pop
push
loope
push
inc
jno
(bad)
or
add
pop
and
xchg
jnp
pop
in
jecxz
lahf
jecxz
push
push
into
out
pop
push
and
ret
dec
xor
dec
lds
in
sbb
(bad)
ror
mov
popf
xchg
dec
stc
mov
je
stos
das
ins
jmp
retf
push
push
cld
out
xchg
icebp
mov
retf
cmp
js
mov
movs
out
sub
adc
add
jecxz
loope
out
xchg
shr
push
popf
out
jno
clc
data16
xor
pop
mov
fadd
cmp
xchg
mov
shr
mov
sbb
add
jmp
sbb
enter
aad
jg
mul
cmc
dec
push
leave
and
and
scas
in
repz
dec
cmp
popa
and
stos
inc
in
xchg
push
sub
fwait
xor
mov
lea
das
xchg
push
mov
fcom
mov
loop
popf
inc
test
ins
mov
stos
push
aam
addr16
lds
add
js
test
sahf
popa
(bad)
loopne
cmp
(bad)
pusha
sub
inc
dec
lds
cmc
push
jne
enter
pop
dec
mov
cmp
pop
inc
and
mov
sbb
push
mov
scas
repnz
mov
mov
outs
imul
and
inc
jmp
push
cld
or
mov
popa
dec
fucomip
(bad)
mov
das
pop
and
sbb
jae
dec
push
dec
test
icebp
jb
push
loopne
adc
lods
and
jge
pusha
jg
cmp
and
shl
mov
cmp
std
xor
ss
inc
(bad)
repnz
(bad)
std
and
out
inc
jne
lods
stc
sbb
pop
mov
shl
and
loop
outs
retf
xor
aam
lods
push
nop
or
xchg
and
adc
xor
std
xchg
adc
mov
xchg
pop
clc
fsubr
jne
inc
imul
aaa
mov
test
push
mov
pop
xor
fwait
mov
in
add
call
mov
sbb
adc
mov
pushf
xchg
out
daa
cmp
inc
mov
sub
mov
inc
xchg
fwait
cmp
dec
btr
retf
sahf
and
imul
out
(bad)
mov
gs
stos
jae
jmp
add
add
lahf
stos
mov
repnz
call
push
mov
sub
imul
jbe
cwde
cmp
movs
push
and
add
popf
push
loope
pop
push
add
lods
mov
add
jp
out
in
inc
hlt
inc
xor
jns
jae
push
hlt
add
fsub
sar
test
fcmovbe
xor
sahf
or
ins
mov
jae
xor
shl
neg
in
xchg
or
jmp
pusha
out
aaa
sbb
mov
daa
scas
pushf
and
repnz
rol
mov
jae
mov
dec
mov
pop
pop
mov
pop
pop
adc
stos
es
sub
sar
int3
adc
ins
iret
aaa
sbb
not
aam
sbb
add
loope
stos
aad
mov
int3
pop
sbb
and
sbb
add
int
jg
mov
and
push
xor
dec
lods
push
inc
xlat
stc
(bad)
cmp
je
jae
xchg
shl
inc
sbb
pop
aam
mov
cmp
jmp
je
xchg
fst
dec
hlt
push
sbb
add
lock
repnz
stos
pop
and
movs
call
sar
mov
pop
lahf
cmc
repz
mov
scas
aam
shl
jae
imul
jb
mov
(bad)
add
sub
das
retf
xor
nop
jle
sub
or
stc
jbe
aad
push
jmp
sub
es
mov
je
jbe
stos
adc
ret
push
retf
fidivr
mov
(bad)
test
sub
jae
mov
and
and
arpl
or
push
icebp
and
adc
mov
adc
inc
xor
xchg
pop
enter
pop
fadd
call
jle
and
shl
cs
and
push
xor
sub
out
mov
cmps
adc
sbb
movs
or
popf
jge
mov
aam
pop
mov
jmp
push
xor
sub
je
retf
adc
sbb
les
xchg
arpl
mov
and
fs
mov
push
neg
cs
xor
cli
dec
mov
mov
in
push
bound
jae
movs
push
cld
inc
xor
jmp
arpl
mov
js
mov
fcmovnu
sub
inc
xchg
jg
rcl
cmp
loopne
and
sbb
imul
in
cmp
sti
xor
shl
aas
push
mov
call
not
repnz
stos
pop
rcl
pop
cmps
popa
push
fcmovnbe
mov
inc
dec
fsub
pop
aas
adc
adc
xor
push
cmp
jp
cmp
stos
pop
clc
scas
adc
loopne
or
mov
mov
fild
mul
push
mov
imul
push
mov
cli
(bad)
in
dec
sbb
push
lea
fcmovbe
mov
adc
sub
xchg
jmp
fmul
jge
jl
push
ret
addr16
cmp
add
mov
lods
jle
pop
xor
imul
xor
sbb
mov
and
fsub
inc
dec
mov
retf
movs
xchg
xchg
mov
cmp
scas
fild
in
push
pop
neg
pop
cmps
in
mov
adc
nop
dec
scas
out
fstp
dec
shr
cmp
dec
xchg
fld
push
int3
xchg
fmul
mov
or
repz
pushf
add
jno
pop
lods
sub
and
das
movs
mov
push
jno
into
cmp
(bad)
jno
jecxz
inc
mov
ftst
xchg
mov
cmp
mov
inc
aad
loopne
push
add
jmp
sbb
div
dec
in
or
scas
sbb
lock
adc
sahf
jmp
push
fisttp
jnp
test
xchg
push
mov
xor
inc
sbb
mov
mov
pop
push
jae
push
adc
pop
stos
inc
fimul
jmp
or
cmp
shr
jmp
fadd
and
jns
lods
jne
loopne
mov
fwait
push
(bad)
fidiv
call
jae
mov
jno
out
ret
dec
pop
jno
cld
fsubr
ins
rcr
xor
and
scas
(bad)
jmp
jns
leave
mov
push
sbb
mov
aas
nop
inc
loope
stos
movs
pop
loopne
pop
nop
xchg
mov
hlt
std
fstp
cld
mov
mov
push
cmps
inc
cmps
pause
rol
das
cli
mov
fst
mov
imul
add
push
jg
pop
add
mov
(bad)
jmp
and
and
call
mov
cmp
jmp
pop
leave
loope
fdiv
sub
or
xor
and
xchg
mov
int
mov
jns
shr
pushf
push
rdpmc
sub
dec
push
bound
(bad)
in
jns
test
cld
rol
sub
mov
sub
jg
mov
pop
push
js
lock
test
cmps
mov
jo
dec
es
sbb
sub
rcl
fs
add
adc
pop
outs
pop
mov
jg
inc
mov
adc
nop
sub
add
push
imul
mov
call
mov
retf
adc
pusha
ret
add
xlat
jbe
mov
(bad)
dec
sbb
aam
(bad)
fsub
pop
and
fcom
xchg
jecxz
movhps
ins
sbb
and
inc
dec
stos
jmp
push
fwait
cmp
cmp
mov
cmc
lock
and
call
jle
xor
sar
pause
cmp
jmp
pop
or
pop
stc
add
imul
xchg
out
cmp
in
les
dec
sbb
push
inc
jb
push
movs
inc
aas
pop
out
and
aas
cmps
movs
jge
pusha
sub
iret
ins
neg
push
lods
mov
in
jae
pop
jp
inc
out
jmp
push
push
shl
inc
cdq
dec
jecxz
jne
dec
pop
inc
arpl
outs
sub
push
rcl
xlat
mov
std
inc
and
ins
test
out
in
mov
(bad)
les
push
sbb
adc
mov
neg
adc
mov
push
dec
mov
xchg
sub
(bad)
mov
inc
(bad)
shr
pop
fld
mul
test
xchg
jns
jmp
push
cmp
inc
ret
add
and
or
mov
sub
addr16
and
popf
mov
xor
or
add
call
cmp
arpl
(bad)
or
in
sahf
inc
jno
add
cs
pushf
mov
mov
fsubr
push
mov
popa
adc
dec
cmps
(bad)
aaa
pop
mov
repnz
imul
cwde
rol
pop
pop
(bad)
pop
inc
pop
imul
retf
mov
sbb
scas
dec
mov
adc
lea
and
(bad)
repz
movs
or
nop
xchg
shr
add
dec
jo
xlat
push
cmps
inc
mov
pusha
ins
mov
mov
in
pop
fstp
cli
hlt
xor
movs
out
aas
or
(bad)
and
call
lods
jno
sub
inc
daa
icebp
(bad)
mov
mov
ss
mov
pop
test
addr16
dec
xor
mov
int
movs
js
sbb
adc
xor
mov
mov
int
into
addr16
sub
pop
and
inc
mov
mov
and
dec
xchg
das
jle
mov
out
cwde
ins
rcr
xchg
mov
inc
dec
dec
out
mov
sbb
push
and
push
loope
(bad)
lahf
not
leave
ins
xor
pinsrw
lock
adc
push
daa
call
imul
mov
pushf
fstp
add
inc
mov
pop
stos
lds
mov
ja
sahf
fs
inc
lea
jp
scas
in
mov
cmp
pushf
mov
cmp
dec
mov
ss
jl
dec
inc
dec
mov
aas
inc
(bad)
fsub
pushf
lods
lds
repnz
je
mov
jge
cld
out
and
popa
ins
push
imul
push
or
mov
xor
adc
pop
xor
addr16
out
cli
fldcw
jb
ret
int3
xchg
loop
jecxz
jns
scas
fs
sub
cld
or
in
push
mov
loopne
test
neg
rol
les
loop
data16
push
fnstsw
enter
inc
test
xor
lods
in
(bad)
push
mov
clc
ds
jl
add
stos
sub
mov
or
pop
test
inc
ins
loop
mov
cmps
or
cmps
lods
mov
jmp
ins
mul
ret
cdq
movs
call
lods
call
fistp
iret
push
ror
hlt
popa
mov
mov
jbe
ins
mov
or
cmp
sub
mov
into
dec
cmp
fcmovnu
jne
(bad)
jmp
mov
jmp
xor
mov
or
addr16
ror
push
push
xor
mov
push
les
in
jmp
in
add
aam
pushf
inc
or
arpl
jecxz
xchg
scas
inc
loopne
and
int3
das
lds
adc
ror
xchg
icebp
xor
add
or
in
fdivr
mov
imul
nop
adc
loope
mov
xchg
lods
jmp
rcr
out
in
xchg
cli
sub
lds
push
out
jecxz
and
or
adc
and
aad
jno
xor
(bad)
inc
mov
mov
pop
aaa
pop
stc
fild
in
pop
ror
in
cmp
and
jp
push
iret
and
ret
or
mov
sbb
mov
sahf
sbb
mul
stc
and
fs
xchg
sbb
pop
in
add
hlt
rol
jbe
call
cwde
mov
repz
or
std
cmp
jmp
loop
mov
loop
adc
ficomp
arpl
nop
push
cmp
cmp
hlt
out
xchg
jne
(bad)
es
call
jns
add
or
push
xchg
push
inc
pop
mov
fninit
(bad)
icebp
mov
ds
sub
shr
inc
mov
push
cmp
aas
ds
test
mov
ins
(bad)
mov
adc
lock
mov
add
cwde
fild
mov
popa
std
add
jmp
stos
shl
fcmovu
sub
loopne
test
test
test
inc
iret
mov
push
jnp
xlat
sub
fwait
scas
es
jmp
jb
inc
pop
and
xchg
add
cmp
mov
loope
inc
jae
and
shr
pop
adc
lock
arpl
jnp
adc
pop
lods
int3
dec
aam
fs
imul
push
push
mov
aaa
pop
js
inc
mov
push
rcr
jo
cmp
jp
scas
pop
test
mov
test
aas
inc
xchg
cwde
cmps
into
pusha
pop
push
aad
pop
xor
das
jne
xchg
push
ss
out
les
add
nop
push
in
mov
std
xchg
and
retf
push
push
xchg
outs
push
push
mov
jb
mov
cmc
and
test
popf
push
push
mov
fild
pusha
sti
bound
mov
push
ror
jp
stos
sub
icebp
mov
ret
jle
sbb
pop
into
lahf
imul
sbb
test
cmc
xor
aam
dec
aad
ror
aaa
loop
arpl
jo
cmp
enter
setno
pushf
push
or
xchg
mov
fisttp
sub
and
jnp
cmps
pop
mov
inc
jno
leave
in
xchg
push
test
adc
and
dec
xor
sub
mov
sbb
das
test
xchg
sahf
and
add
lods
pop
pop
sbb
out
pop
scas
pop
sbb
lds
cs
mov
sub
js
or
xchg
stc
push
cmps
push
lds
xchg
shl
fwait
pushw
xchg
xchg
add
test
btr
mov
ja
fcomp
gs
and
or
sub
lods
popa
ds
rol
rcl
ror
cmp
inc
shl
mov
push
sub
sbb
movs
(bad)
adc
jo
jns
sbb
out
loop
das
cmp
jp
lahf
dec
sbb
cmps
xchg
jno
into
int
in
jo
test
push
inc
stos
mov
mov
pop
xor
inc
scas
adc
mov
cmp
bound
out
js
call
add
lahf
push
ins
ins
pop
pop
fwait
cld
nop
jbe
cmp
or
xor
int
dec
push
stos
xlat
and
icebp
xchg
sub
(bad)
xchg
fimul
mov
push
push
add
xor
repz
(bad)
and
rol
cmp
sbb
sub
jp
mov
adc
sbb
cmps
loopne
pop
cdq
arpl
jl
adc
adc
adc
xchg
rcl
(bad)
repz
push
or
add
pop
adc
in
retf
jmp
inc
retf
xchg
and
mov
bound
and
mov
sahf
ror
cmp
icebp
iret
mov
jp
push
sti
jae
jo
xlat
push
cmc
cmp
jmp
mov
cmp
sbb
sti
xor
and
xor
jmp
pop
lea
in
cmp
leave
nop
and
jbe
pushf
sbb
cmp
jge
cmps
retf
push
inc
add
mov
push
gs
xor
js
lahf
xchg
sbb
cmp
(bad)
sete
retf
mov
test
cli
call
(bad)
mov
ds
movs
pop
sub
test
mov
addr16
ss
mov
cmps
lods
push
adc
stos
rol
cmp
xchg
ret
loope
adc
adc
repnz
inc
jnp
icebp
or
test
xor
ret
xchg
dec
popa
add
addr16
lea
mov
and
jae
pusha
ss
cs
cmps
xor
outs
xor
jle
aam
dec
(bad)
jmp
int
in
mov
jmp
inc
lods
push
add
jnp
les
into
not
icebp
jl
sbb
sbb
pop
push
cmp
dec
es
sbb
push
rol
(bad)
mov
add
out
jae
loopne
cmp
inc
mov
icebp
jge
das
movs
movs
cmp
ret
mov
lahf
and
imul
(bad)
int3
fnstsw
push
mov
into
jns
(bad)
mov
or
outs
fbstp
sub
(bad)
and
mov
push
mov
sbb
ss
sar
or
mov
mov
mov
sbb
les
std
loopne
(bad)
xchg
mov
in
xor
aad
enter
xchg
mov
mov
xchg
retf
xor
out
aas
and
jp
add
xor
jmp
lock
fsubr
leave
adc
xchg
into
test
dec
repz
movs
pop
cld
xlat
int3
sub
popf
cmc
mov
mov
mov
movs
icebp
add
seta
dec
dec
sub
fidivr
rcr
cmc
imul
cmc
cmc
or
retf
mov
nop
jnp
lock
sub
cmp
xchg
(bad)
adc
fwait
call
repnz
xchg
pop
cmp
jnp
inc
pop
cmp
xor
jle
inc
iret
enter
jmp
call
inc
stos
jmp
sub
adc
pop
or
fcmovu
pop
in
es
or
and
ins
stc
mov
lds
jg
test
push
std
mov
pop
in
jge
ficomp
inc
test
enter
dec
xor
and
movs
push
hlt
scas
xor
ss
and
jae
jl
ja
dec
(bad)
into
jbe
lods
jecxz
repnz
dec
jbe
stc
stos
in
mov
fisttp
jge
mov
jnp
sbb
in
cmp
mov
mov
outs
push
mov
stos
push
rcr
or
pop
jae
ret
jno
cli
cs
(bad)
sub
shl
fistp
aam
xchg
push
movs
cmc
dec
or
add
ja
xor
fiadd
hlt
or
lods
jo
out
out
dec
pop
ficomp
test
xor
jno
sbb
add
int3
mov
into
sbb
call
fwait
sub
sbb
(bad)
aad
pop
cmp
sub
retf
and
sbb
fwait
or
inc
push
bswap
nop
fsubr
test
push
mov
dec
jo
sahf
adc
ror
mov
lods
loope
xchg
arpl
or
fsub
outs
mov
out
cwde
out
(bad)
scas
lds
or
and
cmps
jmp
sbb
aas
lock
lahf
les
shl
aam
cmps
ss
test
dec
in
pop
in
and
ror
sub
xchg
sbb
or
pop
ins
es
daa
or
add
push
push
and
mov
enter
mov
ret
jae
add
add
cwde
jb
add
cmps
inc
jne
sub
mov
or
mov
xchg
ins
popa
outs
sub
xchg
arpl
mov
cmc
shl
pop
pop
sbb
xor
shr
ins
loop
add
aad
fild
jge
cld
and
test
xor
je
aad
mov
das
jge
xchg
in
mov
test
xor
mov
sub
jnp
push
call
in
inc
sub
call
xchg
push
out
or
enter
or
jmp
leave
movs
fs
retf
jnp
and
adc
sbb
les
dec
pop
test
cmps
add
fwait
popa
push
fist
pop
out
shl
aad
inc
pop
or
adc
add
mov
mov
push
not
sbb
mov
and
mov
sbb
ficomp
(bad)
sbb
push
ss
push
xchg
or
xchg
or
jnp
js
data16
add
cmp
push
xchg
mov
sub
int
dec
into
push
mov
je
cdq
push
retf
fs
pop
lahf
xor
adc
rcr
cmp
mov
xchg
cmp
pop
push
or
pop
cmp
fnsave
lds
jb
sahf
add
xchg
dec
dec
jge
inc
inc
sub
sub
lods
sub
std
lods
mov
xchg
xor
imul
xchg
pop
push
cmc
aad
adc
and
aas
jb
sbb
add
xor
aas
popf
sub
jp
mov
sar
sbb
push
add
dec
movs
pop
mov
loope
push
or
push
leave
jns
sbb
fistp
jl
cld
inc
inc
push
mov
mov
xor
into
loopne
mov
clc
mov
out
mov
mov
out
ins
xchg
test
push
push
xchg
inc
fcomp
test
adc
cld
int3
cmp
movs
fadd
sbb
cmc
mov
rcr
ret
nop
out
lock
inc
sar
inc
repnz
ficom
jno
lea
in
(bad)
aas
inc
xchg
jnp
sub
in
(bad)
jmp
jne
dec
loopne
enter
in
imul
xchg
mov
jmp
imul
adc
movs
fnstsw
sub
std
ret
arpl
jnp
jecxz
jmp
xor
cmovp
mov
retf
jmp
dec
(bad)
sub
xchg
outs
xchg
and
inc
es
add
test
outs
jb
lods
pop
clc
add
addr16
stos
xchg
stos
pop
in
xor
scas
out
adc
aam
mov
pop
push
adc
aaa
fdiv
xor
outs
adc
mov
dec
jecxz
hlt
ins
mov
shl
mov
ss
mov
popf
mov
stos
(bad)
cmp
jb
retf
mov
popf
movs
mov
sbb
rol
mov
push
cdq
push
sahf
aas
icebp
cmps
xchg
jle
test
dec
retf
sbb
imul
(bad)
dec
test
ret
outs
adc
out
inc
cmps
dec
xchg
sbb
shl
or
loope
lds
iret
ss
and
mov
dec
jb
xor
and
adc
xchg
sbb
sub
(bad)
adc
pop
or
rol
iret
jae
push
loop
dec
in
test
std
jle
cmc
mov
mov
ror
sbb
sub
sar
cmp
pop
mov
bnd
clc
or
mov
jmp
jb
pusha
or
inc
mov
inc
push
mov
fist
mov
in
xor
ja
aad
lahf
es
mov
push
clc
fst
jb
push
ror
inc
addr16
mov
inc
out
xor
jmp
sti
mov
adc
je
mov
mov
adc
retf
or
clc
rol
push
mov
sbb
and
inc
in
pop
mov
iret
mov
xor
sub
mov
inc
fild
(bad)
pop
arpl
adc
pop
pop
sub
or
loopne
fs
outs
jnp
inc
push
xchg
outs
test
or
push
mov
xchg
jno
bound
cmps
jecxz
add
adc
cmps
xchg
(bad)
hlt
jbe
or
popf
cli
mov
jmp
cmp
lods
dec
push
and
into
or
jbe
hlt
or
jno
ret
hlt
jmp
or
sbb
cwde
ret
das
int3
test
adc
xchg
mov
xor
fstp
pop
xchg
adc
mov
jge
popf
inc
add
xchg
push
mov
push
push
lahf
jae
aas
xchg
(bad)
sub
mov
pop
cmps
push
xor
push
in
pop
jo
cmp
pop
iret
cmp
ss
jmp
arpl
jp
cwde
nop
or
mov
jae
xor
sbb
or
fst
test
push
push
fisub
mov
mov
enter
ja
pop
cmp
call
repnz
mov
hlt
dec
test
pop
fs
cmp
cmp
xor
lods
pop
jnp
jecxz
int
ins
imul
xchg
in
cmp
cs
ins
idiv
(bad)
into
fstp
int3
lea
mov
lds
jb
xor
xchg
push
jb
rcr
inc
jno
daa
or
int
cli
gs
pop
aaa
push
pop
in
clc
bound
dec
mov
push
xchg
push
pop
add
and
dec
add
dec
lods
xlat
in
sub
dec
imul
ins
lds
mov
mov
xlat
imul
adc
sub
bound
jo
adc
mov
pop
mov
pop
scas
mov
jnp
sbb
loop
stos
mov
sub
pop
and
sbb
cmp
gs
sub
imul
mov
dec
sub
pop
xchg
addr16
mov
movs
add
dec
pop
jb
loopne
idiv
jmp
pop
ficomp
sbb
loopne
push
rol
push
adc
xor
push
inc
not
(bad)
pop
mov
mov
cmp
in
mov
outs
iret
or
and
sti
or
or
mov
leave
lods
jge
scas
fsub
ja
xor
lock
add
cmps
movs
or
hlt
les
and
fldz
dec
jbe
aaa
js
xor
dec
mov
out
inc
xor
sahf
adc
xor
retf
mov
cmc
push
and
add
add
aaa
inc
mov
jmp
outs
in
imul
loopne
lahf
push
jg
call
bound
cmp
dec
mov
xor
mov
(bad)
xlat
mov
in
popa
fisub
ins
sti
(bad)
cmps
xchg
out
mov
sti
pop
xor
mov
add
jle
div
imul
ror
add
ss
push
retf
dec
ja
xor
pop
add
out
dec
mov
sub
shl
cwde
in
jnp
sub
dec
std
ins
jmp
jo
shr
sbb
sahf
addr16
ins
sti
dec
pop
fidivr
daa
cmp
inc
popa
out
sti
push
and
add
sbb
mov
ret
repz
mov
test
(bad)
jmp
push
dec
add
call
mov
cmp
mov
test
cwde
lahf
pop
mov
mov
pop
ja
mov
jns
sbb
mov
ja
test
outs
jns
shr
mov
xor
dec
pop
cmp
xor
push
jo
scas
fcom
xchg
mov
xchg
call
jle
pop
pop
push
adc
mov
mov
mov
mov
inc
cmp
out
(bad)
fistp
sub
aam
cmp
fiadd
lock
test
das
xor
sbb
and
fldcw
je
pop
mov
pop
add
out
mov
in
inc
cmp
fs
sbb
inc
arpl
ret
jo
jo
ror
out
mov
jns
push
fwait
rep
inc
mov
xor
leave
pop
in
sbb
cwde
cmp
xor
push
mov
add
jo
xlat
mov
shl
mov
mov
dec
push
into
cdq
hlt
mov
mov
cwde
fs
push
or
and
mov
or
sub
xor
ror
ret
adc
sbb
mov
stc
jecxz
mov
out
push
mov
xchg
inc
in
(bad)
mov
push
js
aas
jmp
push
imul
mov
imul
dec
mov
jo
dec
xchg
add
int3
sar
mov
push
dec
xchg
cmp
mov
dec
(bad)
movs
fucomi
pop
rol
js
movs
inc
cmp
shl
jb
pusha
fidivr
outs
in
in
in
xor
and
xchg
fsubr
jle
aaa
mov
or
mov
xchg
mov
dec
or
pop
push
xchg
mov
mov
push
(bad)
jne
leave
jno
divps
cmps
jp
mov
add
inc
sub
mov
ret
ret
int
ins
pop
out
aaa
fadd
adc
pop
push
mov
lahf
sub
cmps
sub
out
push
mov
dec
pop
fprem
xor
jno
out
(bad)
pusha
push
aaa
mov
pop
xchg
pop
mov
sub
data16
xchg
sar
test
div
add
mov
and
sar
xor
scas
adc
xchg
and
sub
add
jnp
add
push
repnz
dec
and
adc
out
js
pop
jne
add
add
arpl
lea
cmps
out
sbb
xor
xchg
stc
lds
xor
pop
lahf
test
ds
cmp
jmp
test
add
aam
imul
enter
lods
hlt
out
mov
loopne
xchg
mov
in
aam
mov
add
add
into
arpl
shl
inc
fisubr
pop
and
cmps
cs
test
xor
in
xor
push
(bad)
dec
dec
(bad)
push
ins
leave
popa
and
xor
test
adc
xchg
ja
or
jae
dec
push
std
sbb
lock
cmp
cli
adc
in
gs
xlat
dec
es
mov
sbb
in
dec
and
bound
pop
enter
repz
mov
es
js
mov
loopne
je
push
adc
jbe
test
ja
xor
mov
mov
ret
jbe
(bad)
icebp
pop
hlt
jns
adc
rcpps
jbe
sub
leave
jp
ins
in
sub
stc
push
fcomip
movs
push
jae
movs
mov
sbb
aaa
or
ret
fwait
scas
sti
xor
hlt
out
mov
mov
add
retf
hlt
jae
push
clc
(bad)
aaa
sbb
popa
movs
test
sbb
mov
pop
mov
jb
cmp
jae
pop
add
mov
mov
xor
jecxz
adc
mov
fstp
cmp
aaa
mov
fldcw
cli
push
in
and
test
aad
push
adc
or
(bad)
scas
std
es
add
stos
push
mov
out
jge
sbb
mov
mov
cwde
add
ret
call
repnz
push
dec
sub
pop
clc
xchg
mov
push
and
movs
and
lahf
fmul
jnp
je
in
cmp
mov
xchg
dec
pusha
jl
popa
xchg
push
sub
test
out
jbe
xchg
(bad)
jecxz
jne
movs
push
mov
dec
cwde
jmp
push
xor
ror
xor
and
pop
adc
add
adc
sbb
icebp
mov
pop
or
inc
or
jbe
imul
jo
icebp
push
frstor
sub
in
sbb
push
mov
test
cmp
pop
ja
fisub
cli
je
mov
out
cmp
mov
pop
sbb
sbb
push
rcr
adc
int
add
push
aaa
mov
cmp
sar
outs
scas
cmp
jmp
xor
ds
mov
fsubr
xor
test
mov
in
pop
cmp
in
fsubr
mov
push
ret
mov
cli
pop
adc
jmp
and
je
(bad)
mov
icebp
daa
loopne
push
xchg
repz
test
gs
sbb
mov
pop
sahf
mov
ins
sbb
in
out
(bad)
daa
mov
and
mov
(bad)
rcl
or
pop
icebp
xor
jg
mov
push
sbb
int
push
mov
push
xchg
xchg
cmps
jmp
mov
add
retf
dec
add
adc
retf
loop
test
int3
pushf
pusha
mov
pop
lods
iret
inc
add
jle
popa
jp
push
fistp
dec
sahf
adc
xor
jo
stc
mov
daa
repnz
mov
scas
je
es
outs
jmp
imul
push
movs
xchg
xchg
or
jmp
pop
std
cdq
leave
das
mov
outs
inc
or
pusha
jnp
daa
mov
xor
xchg
adc
dec
mov
(bad)
outs
jae
into
xor
lock
adc
outs
jns
fs
inc
xchg
sub
repnz
ds
outs
xor
inc
jbe
movs
pop
dec
es
sub
out
ret
gs
(bad)
les
cmp
popf
test
mov
mov
sub
pop
xchg
in
cmps
cdq
mov
(bad)
adc
fcmove
jecxz
jl
jb
adc
(bad)
lds
xchg
not
outs
movs
xchg
push
loop
xchg
ja
xor
fidivr
push
mov
push
mov
outs
xchg
jmp
cmps
cmp
shl
xor
mov
sbb
ret
inc
in
shl
outs
mov
sbb
sahf
stos
mov
jl
xchg
xor
sub
fmul
sbb
xchg
ret
cmp
push
es
pop
xchg
pop
(bad)
das
call
aas
(bad)
pop
xchg
fadd
mov
aad
mov
push
jl
pop
or
fsub
ret
pop
dec
add
loope
lods
test
push
sub
adc
cmp
xor
rcl
cwde
iret
repz
mov
or
pop
mov
stos
ffreep
mov
jl
jne
sub
adc
cwde
test
jp
call
cmps
sub
mov
pusha
push
(bad)
pop
sar
xchg
push
fcompp
mov
jle
lods
mov
ret
and
add
xchg
ins
loope
cmp
int
cmp
imul
dec
push
mov
paddsb
add
enter
or
ins
mov
out
xchg
inc
mov
and
les
jb
sbb
mov
(bad)
aam
jl
iret
call
inc
out
add
out
jne
mov
fwait
jmp
sbb
shl
and
daa
cmps
faddp
sub
retf
fs
xchg
cld
outs
jae
inc
data16
fs
mov
mov
ss
rcr
pop
adc
stos
cli
mov
movs
dec
adc
pop
sub
ret
daa
or
sub
push
idiv
iret
and
cmp
mov
dec
jno
xor
add
xor
mov
mov
ret
pop
mov
icebp
imul
push
nop
dec
scas
movs
cld
adc
les
pushf
inc
push
jecxz
and
cmp
in
jbe
cmp
call
repnz
and
in
or
xor
cmp
lods
and
push
mov
inc
or
mov
mov
jns
mov
mov
in
sar
sub
adc
das
test
xor
push
repz
popf
and
dec
jns
or
stc
mov
mov
neg
sbb
ins
xor
std
mov
fisub
jg
sub
push
cmp
adc
div
jns
popf
add
inc
inc
inc
pop
sbb
mul
out
xchg
jnp
retf
cmc
loop
aad
inc
dec
cwde
mov
inc
test
sbb
ins
xchg
fcomp
add
xchg
stc
fwait
neg
cmp
nop
shl
retf
adc
xor
or
fnsave
add
jmp
xchg
nop
cmp
fdivr
add
push
loope
mov
mov
dec
movs
loope
mov
loope
xchg
into
hlt
pusha
into
or
mov
daa
push
mov
xchg
jecxz
add
sub
sahf
add
aaa
pop
mov
sbb
sub
mov
paddq
sbb
jp
xor
inc
movzx
imul
scas
les
fucomip
cmp
imul
call
imul
cmp
push
scas
cmp
shr
xchg
enter
push
inc
add
leave
cmp
out
jo
adc
mov
popf
sbb
ins
mov
outs
push
xchg
mov
rol
fimul
popa
add
mov
jo
xor
or
test
mov
int
loop
adc
sar
gs
jo
fs
sub
rcr
popf
mov
inc
mov
xchg
aad
iret
adc
pop
add
(bad)
int
sbb
xor
fisubr
jnp
(bad)
pop
cld
jmp
lods
lahf
xchg
pop
adc
xchg
(bad)
mov
or
inc
test
fild
shl
mov
call
cs
mov
add
sbb
scas
pushf
not
fst
xchg
mov
jns
int3
and
inc
push
out
retf
test
dec
pop
jmp
sub
jge
inc
cmps
xchg
sar
cmp
pusha
add
lods
pop
ins
imul
sbb
pop
jle
push
cmps
test
test
bound
push
mov
inc
fwait
jne
xchg
jne
(bad)
cmc
dec
xor
jne
lds
jl
pop
pop
sub
sub
inc
and
scas
or
mov
loope
jne
movs
inc
stc
jmp
rcl
push
adc
comiss
cmp
sub
add
aad
in
add
fs
jae
cmp
in
jns
inc
mov
jns
sbb
sub
mov
das
jg
lods
jl
(bad)
sbb
push
cmp
jne
adc
xor
shl
add
inc
pop
xchg
cmp
loop
mov
out
(bad)
mov
sub
stos
xor
call
scas
sbb
mov
pop
dec
jmp
sub
ja
jb
xlat
fwait
lock
rdtsc
adc
retf
sbb
lods
add
ins
(bad)
fimul
push
sub
pop
or
fcom
test
aam
jns
call
pop
ret
retf
xor
daa
adc
dec
jle
xchg
rcl
pop
dec
jg
jmp
repnz
mov
mov
mov
pop
push
inc
xor
mov
pop
mov
lods
or
inc
jae
xor
xor
push
adc
aam
and
ss
(bad)
add
push
add
push
cmp
rcl
daa
clc
sub
sahf
jge
push
outs
fs
stc
leave
js
mov
mov
and
ss
fnsave
inc
(bad)
push
and
sub
dec
xchg
xor
loopne
pusha
mov
xchg
jmp
inc
cmp
mov
xchg
mov
xchg
dec
push
add
pop
repz
jge
jmp
xor
js
push
neg
pop
inc
xor
ret
mov
mov
cdq
xor
adc
xchg
adc
jne
jl
adc
mov
into
retf
dec
in
in
aaa
out
add
jge
jmp
fs
dec
scas
clc
jae
cmp
aaa
int
imul
and
push
mov
jmp
cmps
(bad)
fsubrp
and
movs
xchg
push
(bad)
scas
icebp
(bad)
sbb
ss
popf
adc
jecxz
jbe
xor
xor
idiv
push
fs
jle
xchg
inc
xor
jmp
push
xchg
adc
dec
sysexit
sahf
mov
loope
pop
cmp
sbb
push
(bad)
mov
dec
popa
mov
shl
movs
loop
retf
push
mov
pop
mov
cmp
xor
xor
test
sbb
and
add
add
xchg
jno
lds
frstor
xchg
push
jb
add
push
add
das
xchg
stos
adc
dec
ficomp
inc
movs
fmul
je
icebp
jge
push
popa
stos
mov
fsubr
jmp
inc
cmp
push
xor
stos
scas
jmp
mov
hlt
push
pop
into
fdivr
pop
ins
cmp
loope
fnstenv
in
outs
dec
jns
(bad)
repz
mov
mov
stos
mov
dec
std
lock
mov
ds
jg
push
mov
lods
cmp
adc
(bad)
jle
stc
fdiv
or
jnp
cmp
fnstsw
xor
outs
sbb
or
cmp
pop
cli
aas
dec
sbb
adc
jge
dec
jns
push
hlt
add
dec
inc
jge
inc
loope
xchg
xchg
inc
aaa
mov
shr
loop
test
xor
and
push
fidivr
sub
xor
rcr
iret
mul
push
cmps
int
cmp
shl
sub
out
(bad)
adc
sbb
pop
mov
lahf
aas
clc
std
sbb
bsf
(bad)
xchg
mov
pop
inc
adc
push
xchg
mov
cdq
fcomp
add
mov
cmp
es
pop
adc
scas
adc
fs
mov
imul
sub
mov
push
add
and
arpl
cli
mov
icebp
stos
or
mov
mov
pop
mov
adc
scas
push
fild
mov
cmp
fstp
jp
das
mov
sti
test
js
ror
mov
xlat
xchg
test
adc
push
js
cmps
pusha
test
je
stos
inc
fstp
in
rol
fst
je
add
rep
inc
dec
mov
in
or
jp
mov
retf
mov
cmps
sbb
test
mov
xlat
xchg
dec
and
sbb
outs
popa
pop
mov
add
jle
mov
cli
shl
inc
pop
ins
shl
aad
outs
mov
cs
cmp
dec
(bad)
icebp
add
mov
rcr
mov
cmp
mov
jnp
xchg
mov
lahf
mov
jns
pusha
jo
call
fst
pop
mov
and
scas
int3
mov
out
ins
ret
sub
in
and
loop
ss
pop
sahf
mov
cld
dec
fcom
mov
pop
jle
call
daa
ja
out
and
inc
fist
push
pop
sub
cmp
imul
xor
test
shl
ins
cmp
imul
cmps
cdq
sbb
and
pop
cmp
movs
pop
mov
repz
pop
or
rcl
jg
aas
pop
and
imul
lahf
lds
sbb
xor
xchg
in
addr16
xor
test
repnz
pop
mov
xchg
cmp
mov
mov
movs
out
xlat
add
push
and
xchg
and
test
(bad)
mov
pop
and
(bad)
or
call
push
loopne
sbb
xchg
aaa
sub
mov
inc
jl
xchg
xchg
cmps
cmp
jl
push
scas
dec
fild
xlat
cli
mov
test
xor
shl
inc
cmp
cmps
xchg
or
scas
leave
imul
push
cmps
mov
sub
in
sbb
test
lahf
stos
xchg
ins
sbb
jge
sbb
jmp
ja
rol
sbb
test
in
ror
lahf
mov
jg
cli
dec
mov
cmp
xor
dec
(bad)
sub
inc
es
pop
ins
mov
imul
jmp
rcr
cmp
fadd
stc
(bad)
sub
jae
dec
cld
mov
sbb
hlt
and
not
scas
pop
(bad)
cmp
inc
inc
cmp
test
dec
and
ficom
xlat
jns
(bad)
std
mov
inc
(bad)
cli
fistp
fcmove
repnz
movs
outs
push
fadd
sbb
mov
fucomp
mov
arpl
js
mov
sti
mov
adc
push
dec
cmp
out
out
cld
stos
stos
jmp
cmp
rcl
iret
repnz
push
cli
jmp
scas
(bad)
fnstsw
(bad)
xchg
sbb
out
mov
and
stos
sbb
aad
add
mov
pop
out
inc
add
loopne
push
je
mov
sub
ds
push
es
test
jns
jmp
lods
loopne
push
(bad)
fidivr
add
lahf
mov
leave
inc
dec
pop
cmp
cmp
cmps
sbb
push
inc
push
cmps
dec
(bad)
mov
das
mov
ss
(bad)
retf
sar
fist
imul
mov
and
dec
xchg
leave
push
test
cld
fistp
pop
stos
mov
inc
cmp
pop
mov
pop
sbb
nop
out
cdq
aaa
in
(bad)
pop
sub
cmc
pop
aas
or
xor
(bad)
push
adc
mov
test
(bad)
sub
pop
jg
xchg
loopne
(bad)
loope
inc
sub
inc
mov
pop
mov
mov
mov
add
(bad)
mov
es
push
cmc
xor
je
adc
jp
scas
xchg
adc
push
or
dec
xchg
clc
sar
or
mov
arpl
fstcw
std
dec
fwait
adc
sub
cmp
je
int3
mov
es
xchg
scas
enter
xor
xchg
dec
sahf
out
test
push
into
add
cmp
mov
mov
cwde
xor
popa
(bad)
adc
movs
and
sbb
push
vcvtsd2si
retf
sbb
mov
adc
fsubr
dec
dec
add
xchg
push
inc
mov
xor
data16
cmp
hlt
sbb
add
mov
jge
stos
ja
mov
je
xor
pop
fidiv
add
mov
jb
adc
mov
addr16
cmc
cmp
push
call
or
shl
pop
xor
mov
cmp
adc
int3
(bad)
lahf
and
lods
jecxz
outs
ret
sbb
sbb
sar
xlat
xchg
gs
pop
pop
push
(bad)
jnp
clc
cli
out
adc
add
fwait
addr16
push
ins
jle
dec
faddp
fdivr
fdiv
mov
jl
sub
jmp
sub
nop
sti
cmp
fs
sub
rcl
clc
push
cmc
aad
xchg
dec
hlt
mov
clc
fcomp
cmp
mov
cmp
or
out
outs
in
xor
lods
inc
push
leave
mov
pop
mov
test
adc
out
push
retf
mov
pmulhuw
sar
repnz
fnstenv
movs
repnz
dec
in
mov
mov
out
int
je
popf
jns
inc
out
scas
xor
mov
lds
jmp
xlat
xor
sbb
in
(bad)
cld
aam
push
and
enter
fistp
lds
lock
mov
mov
and
push
mov
jge
jmp
mov
adc
lahf
mov
test
out
test
int3
jae
and
sub
test
xor
lds
gs
clc
mov
in
jo
addr16
movs
push
mov
shl
mov
add
out
mov
dec
outs
out
std
shr
aas
xchg
push
mov
outs
rcl
jno
in
jle
jbe
ss
add
popa
cmp
aam
add
mov
push
mov
xlat
mov
push
inc
xchg
sub
pop
push
sahf
xlat
mov
cld
ret
sub
ret
outs
iret
sub
movs
std
jmp
mov
jns
inc
ins
xchg
xchg
mov
and
xchg
test
sub
or
inc
jmp
inc
and
inc
(bad)
adc
jg
fwait
mov
xchg
test
cmp
pusha
jl
pushf
repnz
xor
inc
pop
(bad)
ins
addr16
jl
test
in
add
into
call
stc
scas
popa
dec
loope
loope
iret
mov
push
in
outs
jns
sbb
sbb
xchg
(bad)
(bad)
imul
pop
and
push
pusha
aam
setp
add
pusha
lea
bound
loope
sub
fadd
adc
jns
cdq
pop
test
fiadd
dec
je
sbb
jle
int3
adc
xor
retf
(bad)
cmp
sub
leave
mov
jge
push
imul
lods
jmp
push
data16
in
mov
in
not
(bad)
xchg
push
leave
xchg
sbb
rol
mov
lock
jbe
push
fcomi
push
cmp
cld
adc
add
dec
dec
inc
movs
popf
loopne
fisub
pop
repz
out
push
mov
mov
pop
push
inc
xor
pushf
dec
ret
pop
in
pop
inc
pop
pop
cmp
iret
and
test
xchg
dec
jo
push
shl
fsubr
jnp
mov
xchg
fst
and
in
in
cmp
mov
cmp
add
push
test
dec
inc
cmp
dec
pushf
arpl
mov
jle
xor
stos
mov
pop
cwde
inc
mov
xor
lea
div
ret
jbe
push
fisubr
mov
dec
mov
outs
add
mov
retf
or
push
xchg
mov
ins
call
mov
push
sub
mov
mov
push
cmp
out
push
js
or
fimul
dec
jp
inc
loopne
and
out
(bad)
pop
(bad)
pop
xchg
sub
scas
stos
push
xor
jmp
aaa
and
fs
xor
(bad)
call
das
call
ins
push
pop
(bad)
fsubr
movs
pushf
clc
dec
and
push
or
loope
in
xlat
lods
cdq
mov
jecxz
push
iret
ja
or
pop
xchg
or
cmp
add
add
shr
repz
jne
mov
push
and
(bad)
cmps
mov
jp
mov
mov
stos
xor
invd
adc
daa
mov
dec
cs
sahf
ror
and
mov
ficomp
pop
lods
or
cmps
push
xlat
pop
pop
aad
fsubr
aaa
inc
xlat
lods
inc
push
or
ficom
(bad)
lods
xlat
out
sti
mov
(bad)
xor
aas
cmp
int
sub
in
push
(bad)
jp
es
sbb
jg
and
nop
or
fadd
mov
push
xor
jno
sub
cli
jmp
(bad)
scas
mov
mov
call
enter
cmp
inc
es
cwde
mov
fild
xor
inc
pop
cli
mov
cli
rcl
and
mov
scas
neg
pusha
pop
or
sub
xchg
movs
cmp
xchg
jns
cli
fcmovbe
cmp
jo
sbb
movs
adc
mov
(bad)
cmp
fwait
iret
xchg
adc
mov
mov
cmp
push
js
jns
sbb
cmp
(bad)
mov
(bad)
fsubr
(bad)
adc
jp
xchg
jmp
dec
mov
js
jnp
call
adc
push
or
loopne
es
add
loop
mov
xchg
sub
or
fld
jge
cmp
mov
stos
xor
ins
xor
test
or
cwde
xor
add
xchg
ret
mov
ret
aaa
je
xchg
div
les
rcr
iret
sub
or
clc
je
sbb
adc
fs
addr16
pop
jp
cdq
jmp
shr
jae
pusha
xchg
aam
daa
rol
pop
mov
jae
nop
fucomi
fadd
pop
cmc
hlt
cmp
in
(bad)
xor
(bad)
mov
dec
and
mov
adc
add
pop
add
mov
jecxz
and
jbe
add
(bad)
adc
jl
xchg
xlat
dec
adc
shr
aas
inc
je
and
inc
mov
outs
push
loope
adc
pop
shl
inc
std
sar
js
int3
mov
jne
aam
adc
pop
test
mov
add
dec
mov
mov
dec
ret
test
sbb
mov
(bad)
mov
xor
movaps
pop
fcmove
repnz
cmp
sub
loop
add
mov
movs
pop
push
adc
stc
es
ss
jmp
mov
neg
push
loopne
mov
push
retf
hlt
pop
scas
dec
inc
jecxz
xchg
push
icebp
dec
rcl
fisubr
or
rol
sub
mov
in
jns
mov
les
ret
mov
push
sub
jb
ss
daa
inc
dec
(bad)
mov
out
inc
fucomip
inc
sbb
dec
cmp
xlat
cmp
arpl
xlat
enter
loope
pop
dec
out
sub
retf
lahf
cs
pop
sbb
aad
(bad)
std
mov
inc
cmc
iret
jmp
aad
outs
add
fisub
leave
push
adc
jns
mov
adc
push
jecxz
retf
cmc
mov
fcom
js
xchg
pcmpeqw
fbstp
test
pop
adc
retf
sub
dec
imul
popf
test
sbb
fs
ds
rcl
inc
loopne
loop
(bad)
jns
fs
lds
xchg
mov
mov
mov
push
push
test
jecxz
mov
inc
pushf
xor
inc
(bad)
fiadd
push
aas
cld
push
in
mov
jo
(bad)
dec
je
into
(bad)
in
add
sub
dec
das
xor
int3
rol
push
adc
daa
sbb
hlt
push
sti
pop
cli
dec
les
mov
jp
aas
ret
inc
sbb
sub
pop
jns
or
out
dec
jmp
gs
cmp
xor
call
jg
jl
cmp
inc
std
mov
jo
aaa
and
or
push
sbb
arpl
jmp
dec
add
sub
push
and
imul
sbb
sub
adc
xchg
adc
cmp
call
and
ret
cmp
scas
mov
jle
sub
cmp
add
xor
icebp
adc
push
das
in
jmp
push
ss
aad
inc
call
call
ret
mov
rcl
mov
das
rcl
add
push
jbe
mov
dec
(bad)
jbe
cmp
and
fs
add
int
mov
inc
sub
mov
and
bound
cli
ret
adc
mov
clc
out
and
loope
sahf
push
imul
sbb
es
out
cmp
test
push
sub
pop
xchg
dec
or
xor
add
cmp
lods
adc
xor
mov
mov
cmps
int
leave
mov
mov
sbb
mov
imul
sub
popf
sbb
dec
mov
push
xor
xchg
mov
jae
rcr
xchg
push
add
aad
jecxz
dec
js
mov
and
nop
dec
xchg
mov
retf
and
bound
nop
je
jo
mov
sub
out
scas
mov
dec
movs
dec
and
or
scas
push
inc
dec
in
inc
scas
jmp
stc
xor
mov
dec
jge
(bad)
(bad)
sub
mov
nop
or
push
mov
lods
inc
push
jecxz
ins
add
aad
mov
xlat
andnps
or
and
pusha
dec
xor
cld
stc
mov
xchg
fs
loope
sub
sar
nop
mov
mov
nop
je
lds
pop
jo
xor
int
das
mov
pop
or
sar
add
(bad)
push
mov
push
addr16
xor
stc
(bad)
das
pop
mov
xor
cmps
cmc
sub
imul
aas
pop
arpl
jne
jo
enter
das
(bad)
call
comiss
ins
sbb
popa
cmc
das
or
mov
adc
pop
xchg
cmp
adc
rol
bnd
(bad)
mov
adc
dec
xlat
enter
jl
xchg
cs
imul
mov
test
pop
and
rcl
cmps
dec
loop
retf
adc
push
and
push
inc
enter
inc
jle
movs
pop
movs
mov
add
test
inc
jecxz
and
jb
adc
mov
mov
or
cli
adc
movs
jbe
inc
call
nop
rol
cmp
movs
mov
test
pop
push
jge
mov
call
adc
icebp
mov
inc
mov
pushf
jg
mov
cmps
xor
popf
ins
loope
fs
xchg
add
sahf
jl
inc
or
xlat
imul
add
pushf
(bad)
xchg
jns
icebp
and
inc
stc
cs
ins
mov
xor
or
inc
xor
imul
xchg
jns
stos
(bad)
js
and
jp
pusha
and
stos
sub
sbb
sub
dec
or
pop
xchg
jmp
cdq
cmp
mov
jle
retf
fwait
sub
mov
adc
dec
xchg
jmp
std
popf
sub
test
sbb
xchg
xchg
pop
movs
jecxz
sti
hlt
cmps
repnz
sub
popa
loopne
arpl
sbb
shl
add
test
cmp
out
jecxz
jmp
lods
xor
aaa
nop
xor
adc
xchg
std
addr16
addr16
jbe
or
(bad)
mov
inc
mov
(bad)
jmp
inc
sbb
push
(bad)
sbb
inc
bound
dec
pusha
mov
pop
pusha
pop
mov
outs
call
adc
mov
jp
retf
(bad)
push
xchg
repz
(bad)
fbld
jb
mov
mov
lock
cmp
pop
inc
and
mov
and
or
or
mov
mov
xor
cmp
xchg
jae
jbe
xor
(bad)
xchg
or
ja
mov
pop
ror
es
jmp
pop
sbb
inc
mov
in
test
cmp
jle
pop
test
cmp
mov
loopne
mov
and
cld
xchg
or
cmps
add
ds
clc
nop
es
or
(bad)
pop
jnp
imul
rcl
lods
dec
movs
sub
push
repnz
enter
jnp
sub
add
inc
les
lods
ds
sub
add
or
xor
push
jnp
and
mov
pushf
jo
mov
sub
inc
cmp
adc
ins
neg
cmp
aad
fdiv
and
sbb
pop
jnp
test
mov
(bad)
test
(bad)
(bad)
push
cmp
cmp
sub
shl
mov
shr
daa
jmp
test
mov
hlt
in
mov
in
pop
mov
movs
jecxz
into
cmp
adc
out
enter
add
dec
(bad)
xchg
mov
fsub
ret
pop
and
mov
ficom
jno
jmp
addr16
adc
xor
push
push
out
icebp
(bad)
ss
(bad)
jnp
inc
mov
ja
int
cmpxchg8b
mov
cmp
jle
mov
mov
pop
fisttp
int3
or
int
ret
cmc
ret
aas
sbb
add
sub
sub
ins
and
adc
mov
mov
add
stos
jg
pop
int3
(bad)
add
and
lea
test
loope
inc
(bad)
dec
mov
sbb
fiadd
jno
jecxz
pop
aad
xchg
hlt
rcl
cs
out
sbb
out
adc
cs
pop
sub
test
adc
ficom
jnp
dec
loop
pop
xor
sbb
ss
and
lahf
in
jg
sub
out
pop
stc
adc
retf
adc
aaa
cmp
dec
jmp
cmp
cmp
cmps
jmp
xchg
arpl
mov
mov
jmp
push
stos
fdivr
sbb
mov
fcom
dec
fisttp
mov
clc
scas
push
retf
lahf
hlt
leave
xsavec
push
cmps
scas
(bad)
popa
jae
sub
scas
lds
mov
sub
es
fist
sar
(bad)
(bad)
lds
xor
into
xchg
test
test
mov
dec
jmp
mov
rcr
sti
jno
mov
xchg
int
cmp
xchg
cmp
xor
sbb
mov
push
hlt
dec
xchg
(bad)
jp
pop
jecxz
outs
leave
loop
xor
mov
add
push
push
push
jge
es
sbb
pop
jle
mov
inc
and
mov
stos
lock
cmp
pop
stos
sbb
stos
test
sub
(bad)
jge
push
int
addr16
sbb
add
jnp
imul
hlt
mov
xor
add
mov
xchg
inc
sbb
jge
sahf
sbb
adc
(bad)
ja
xor
enter
jne
inc
in
sub
xor
in
push
(bad)
sub
fs
loope
rol
sbb
cmp
sbb
xor
xor
xchg
sbb
test
and
dec
push
into
gs
ficom
push
pop
(bad)
cmp
jae
dec
pop
xor
mov
dec
sar
cmc
dec
lods
jge
scas
jmp
ficom
lods
cmp
jmp
test
inc
aam
div
push
mov
adc
stos
push
hlt
mul
cld
arpl
and
pop
inc
enter
cmp
push
mov
push
cmp
pop
cmps
(bad)
jle
inc
mov
cmp
add
adc
sub
fwait
movs
jnp
pop
dec
out
jp
outs
pop
mov
mov
aad
stos
adc
hlt
aas
push
sbb
je
hlt
mov
mov
prefetch
pop
daa
push
adc
mov
movq
sbb
push
dec
jo
pop
das
fidivr
mov
pop
cdq
in
test
aam
pop
xchg
add
xor
or
xchg
xchg
adc
movs
inc
xor
mov
and
stos
std
jnp
dec
push
add
mov
mov
pop
sub
pop
test
mov
rcr
mov
dec
ficom
push
sahf
and
mov
aad
jae
xor
adc
sub
push
and
test
push
mov
mov
std
inc
sub
leave
fsub
sub
dec
test
or
mov
call
(bad)
and
les
je
pop
inc
mov
(bad)
iret
jle
cli
mov
call
cmp
adc
aad
push
xor
mov
in
mov
dec
movs
mov
adc
rcl
fld
inc
dec
clc
mov
retf
imul
or
idiv
pop
(bad)
dec
loope
stos
out
mov
sbb
dec
fwait
jmp
(bad)
and
(bad)
pop
enter
aam
aas
inc
pop
sbb
xlat
add
out
iret
(bad)
out
call
iret
sbb
mov
jmp
lods
push
jecxz
cli
arpl
lea
arpl
dec
mov
pop
mov
ins
arpl
xchg
ins
mov
aas
mov
jne
imul
retf
pop
adc
int3
sahf
mov
add
or
sbb
cmp
(bad)
xchg
dec
aad
dec
fisttp
add
out
ja
sub
call
xchg
scas
jmp
xchg
test
lods
cmp
(bad)
pop
inc
or
sub
dec
xchg
std
nop
push
mov
fs
cs
jne
adc
nop
in
add
out
xchg
xor
iret
push
xchg
cwde
dec
pusha
dec
cmps
fisub
stc
xchg
push
mov
cmps
dec
adc
pop
out
pop
add
jge
stos
shr
or
xor
jmp
in
or
jo
cmps
fnsave
push
ds
aam
cmps
fimul
sub
jns
cwde
dec
cmp
inc
add
pop
xor
push
out
pop
(bad)
and
loope
cdq
rol
mov
inc
inc
cmc
ds
inc
mov
jmp
xor
adc
mov
add
jg
(bad)
add
je
loopne
in
movs
ds
daa
jae
mov
stos
repnz
dec
xor
pop
pop
out
and
and
xor
xchg
rcr
pop
inc
mov
add
add
test
mov
xchg
and
scas
mov
out
inc
test
int
arpl
ins
dec
outs
mov
pop
icebp
test
sbb
jmp
cmp
fwait
mov
mov
push
cdq
out
in
daa
pop
jg
lea
push
pop
call
pop
xchg
sti
pop
add
imul
mov
test
and
mov
jbe
call
mov
inc
xchg
add
jnp
dec
fld
(bad)
pop
loope
push
pop
push
cmp
(bad)
scas
mov
data16
ror
jecxz
mov
fiadd
js
jns
lds
ins
adc
fistp
movs
mov
dec
sti
dec
jo
scas
mov
into
fist
cli
cmp
adc
mov
adc
jl
les
sub
pop
nop
(bad)
in
cmp
and
bswap
or
stc
out
mov
lds
cli
xlat
mov
loopne
fdivr
fidiv
iret
icebp
mov
push
ret
lahf
push
pop
add
and
mov
bound
mov
loopne
dec
movs
jp
jb
pop
mov
mov
ins
movs
ins
sub
aad
pop
mov
and
sbb
sub
movs
inc
out
sbb
push
cmp
inc
sar
xchg
dec
xchg
retf
repz
mov
fmul
jmp
loopne
aas
cmc
test
loope
mov
jle
stos
mov
test
fs
(bad)
mov
sub
loope
pop
sbb
sbb
call
mov
aad
jmp
and
mov
jns
bound
and
push
mov
cwde
popa
lods
cmp
inc
das
das
fsub
std
add
inc
pop
mov
leave
mov
pop
stos
mov
shr
ins
aas
mul
xor
cmp
ja
and
hlt
dec
fdivr
inc
sub
retf
dec
add
jmp
icebp
inc
nop
or
daa
mov
mov
fadd
fisttp
xchg
cmp
inc
or
in
scas
push
int3
jnp
or
movs
aas
(bad)
jmp
push
jne
repnz
mov
mov
inc
xchg
adc
xor
hlt
add
inc
call
mov
(bad)
not
inc
retf
mov
adc
or
push
push
cmp
push
sbb
mov
cwde
out
popf
sbb
out
enter
out
mov
outs
jno
adc
push
pushf
mov
das
dec
popf
int3
mov
and
cmp
ds
fs
ja
cmp
iret
pop
outs
sub
fmulp
mov
push
call
pop
mov
data16
fistp
je
mov
dec
or
(bad)
out
mov
add
int3
and
sub
or
hlt
les
or
xlat
loopne
gs
fcom
add
aaa
arpl
xchg
cmp
dec
aam
hlt
mov
adc
ins
jmp
lahf
and
sub
mov
loopne
push
mov
imul
scas
push
push
mov
xchg
test
cs
dec
pop
and
mov
push
push
and
daa
clc
inc
icebp
pusha
xchg
mov
jmp
cmp
imul
push
icebp
jmp
dec
(bad)
ror
cld
inc
cs
fmul
sub
(bad)
jb
mov
inc
cld
pusha
stos
cld
push
lock
mov
loop
xchg
sbb
inc
dec
iret
xchg
xchg
call
xchg
jae
lods
stc
mov
nop
scas
test
pop
daa
mov
fcmovnbe
mov
pop
cwde
cli
lahf
shl
hlt
adc
add
mov
pop
xchg
enter
pop
inc
mov
repnz
jp
sub
setbe
add
daa
add
loopne
push
ja
jne
jns
popf
ret
std
data16
ficom
cwde
jg
lahf
stc
push
ret
adc
dec
mov
fidivr
and
out
mov
popf
push
(bad)
dec
jne
fistp
sub
mov
(bad)
repnz
into
cs
loopne
test
or
jge
sub
movs
push
xlat
inc
leave
out
out
jmp
mov
daa
xchg
aam
ror
pushf
dec
cld
pop
mov
into
enter
repnz
cmp
sub
repz
fdivrp
xchg
in
or
int
push
cld
int3
push
clc
repnz
(bad)
sbb
out
aad
pop
and
fnstcw
mov
xor
js
lock
mov
std
fild
mov
inc
aam
fs
xchg
mov
or
dec
in
stos
fs
fbstp
mov
pop
sub
jg
outs
ret
outs
nop
sub
pop
add
push
jmp
in
dec
lods
out
push
ins
dec
mov
jecxz
pushf
pop
mov
sbb
fiadd
repz
pop
mov
ret
lahf
fisub
sbb
retf
ds
rcr
jns
pop
dec
push
fistp
ins
movzx
mov
inc
jle
mov
mov
sub
imul
mov
daa
outs
jecxz
jno
xchg
jecxz
call
sbb
cmp
and
add
jmp
push
dec
and
push
sahf
repnz
mov
lods
icebp
lahf
je
jne
bound
mov
jl
dec
int3
fisubr
call
jp
iret
jbe
and
test
push
es
out
call
and
pop
sub
(bad)
jne
repnz
push
pusha
and
mov
inc
xor
push
xchg
icebp
dec
jp
sub
retf
jl
mov
rol
and
les
fisub
dec
scas
sub
xor
popf
aaa
shr
adc
(bad)
neg
ror
imul
popa
cwde
xlat
in
sbb
or
pop
lea
lds
sbb
push
push
rcl
jl
out
xor
in
nop
and
out
cmp
xchg
stos
movs
out
js
into
mov
clc
and
(bad)
ficomp
add
mov
cmp
jnp
jecxz
lock
inc
outs
jne
aam
into
loop
push
ja
xor
sbb
push
sub
stc
test
xchg
mov
xchg
jp
mov
movs
sbb
movs
les
scas
es
push
lods
fistp
test
jb
sub
inc
inc
dec
mov
lock
inc
jae
das
adc
add
lds
aas
fmul
fs
cdq
mov
push
sbb
je
outs
je
pop
ret
push
aaa
ror
mov
sub
nop
mov
dec
xchg
inc
add
fisttp
cwde
mov
push
call
mov
cmc
lock
push
imul
mov
nop
xchg
call
xchg
mov
jl
jno
add
aas
ss
jmp
jmp
cmp
jmp
push
das
sti
sub
xchg
lods
jmp
or
aaa
nop
xor
into
jbe
callw
jb
(bad)
(bad)
xor
xor
fst
pushf
dec
es
xor
mov
outs
cmps
mov
pop
pop
mov
fcom
test
mov
(bad)
push
cdq
or
pop
dec
jecxz
cmps
shr
es
and
jmp
jne
cmp
bound
scas
stos
and
mov
ja
inc
jmp
push
jb
jo
sub
clc
jp
pop
pop
fwait
xchg
inc
rep
sbb
jbe
into
mov
add
dec
outs
pop
sbb
pop
cmp
mov
xchg
cdq
or
adc
xlat
mov
mov
xchg
inc
mov
pop
xor
mov
in
or
ret
dec
aaa
push
xchg
ins
pop
int
jg
sbb
callw
dec
ins
not
cmps
int
jp
sbb
sahf
inc
(bad)
jnp
repnz
aaa
mov
sub
pop
aaa
lods
add
jne
push
dec
repz
xor
cwde
iret
jbe
repnz
mov
ins
mov
repnz
popf
sub
push
xor
fwait
push
in
push
pop
loope
adc
(bad)
sti
xor
lahf
jmp
stc
push
repnz
out
out
mov
sub
sbb
cmc
ficomp
ficomp
jne
lds
gs
fild
add
movs
xor
or
(bad)
cmp
sub
loope
out
ret
inc
sbb
shl
enter
and
cs
pushf
jmp
mov
mov
cmp
jae
mov
jl
mov
mov
pop
xchg
outs
retf
mov
(bad)
mov
adc
jo
out
jbe
push
and
push
xchg
jecxz
pop
add
cmps
mov
out
sub
inc
sub
pop
jl
dec
push
adc
int3
gs
mov
cmp
push
sub
push
leave
mov
inc
leave
xchg
pop
aam
pop
(bad)
(bad)
xor
adc
pusha
aaa
push
cmp
pop
mov
sar
les
push
ja
call
xor
ins
ss
xor
pushf
into
sub
jg
inc
nop
repz
rcl
and
sbb
fwait
repnz
inc
nop
(bad)
neg
stos
cli
loopne
loope
fwait
icebp
pop
inc
jl
inc
push
xor
stc
ficomp
in
cmp
out
repnz
out
clc
pop
ss
mov
add
aaa
stos
mov
pop
inc
jbe
outs
xor
cwde
lea
hlt
add
les
add
fild
mov
and
lds
cmp
in
test
sbb
imul
daa
imul
ret
out
repz
sbb
push
loop
xor
dec
daa
xchg
mov
sbb
adc
dec
inc
dec
mov
out
push
fisub
test
(bad)
lods
xchg
sahf
mov
(bad)
out
cmps
test
or
out
mov
xor
cmp
push
movs
cli
mov
push
xor
mov
aaa
cmp
sbb
rcr
push
mov
rcl
pop
sbb
sub
out
adc
popa
(bad)
retf
sub
loop
cmp
imul
(bad)
mov
ret
mov
outs
lea
and
ins
call
pushf
loope
mov
fwait
icebp
mov
dec
leave
fsub
stos
pushf
stos
pop
xor
xchg
(bad)
mov
outs
dec
push
rcr
and
and
jbe
mov
sbb
(bad)
mov
sub
cmp
mov
fadd
ins
retf
push
rol
add
fadd
retf
sub
sti
shr
test
(bad)
and
sub
leave
jbe
push
in
in
and
shl
add
test
adc
data16
pop
out
mov
fwait
inc
push
ret
mov
push
mov
cmp
push
std
push
out
cmps
or
mov
dec
in
retf
jno
cdq
xchg
repnz
mov
mov
stos
xlat
inc
dec
adc
stos
(bad)
mov
add
inc
dec
push
(bad)
sbb
stos
inc
xchg
mov
ja
hlt
dec
mov
lea
cmp
out
retf
mov
push
dec
out
outs
pushf
scas
bound
ins
mov
dec
ds
xor
iret
mov
adc
ss
pop
(bad)
jp
daa
rol
pop
dec
scas
inc
dec
mov
sub
or
dec
sahf
es
hlt
or
sub
push
sbb
daa
sahf
int3
xchg
fld
jle
inc
fldcw
lds
xor
into
or
lock
aam
pusha
fdiv
dec
push
out
jmp
(bad)
ficom
cs
das
int
jmp
test
iret
int3
pushf
add
test
jmp
sub
imul
js
int3
in
(bad)
push
ficom
pop
push
std
adc
and
ds
nop
loope
sbb
mov
sbb
dec
arpl
outs
rcr
clc
stos
add
jno
gs
retf
std
push
pop
inc
jmp
(bad)
jmp
jg
jbe
ss
fidiv
(bad)
das
jle
stos
xor
mov
sbb
jg
jb
mov
(bad)
loopne
in
mov
imul
dec
jl
(bad)
jnp
inc
cmp
sbb
aas
aam
adc
adc
or
xor
stc
mov
(bad)
mov
dec
push
lods
out
loope
test
(bad)
neg
mov
mov
movs
popa
fs
arpl
lods
jno
aam
cmps
lds
or
mov
sbb
into
aas
mov
repz
mov
dec
fisttp
mov
push
jo
mov
ins
add
stc
dec
xchg
in
inc
scas
xchg
sbb
sti
pop
inc
test
popf
jmp
(bad)
push
jmp
shr
jle
xchg
aaa
dec
mov
mov
inc
rol
fs
jb
pop
aaa
mov
mov
ficom
ja
movs
pop
mov
js
pop
mov
mov
pop
fucom
inc
mov
mov
nop
pop
push
ds
out
push
sub
mov
inc
xor
inc
mov
xchg
push
mov
aad
ret
jnp
jecxz
add
fldpi
std
adc
adc
fst
xchg
dec
mov
in
fld
mov
ja
stos
icebp
mov
imul
lds
add
inc
cmps
movs
fwait
mov
xor
cmps
loopne
loopne
(bad)
fstp
adc
jge
dec
arpl
pop
dec
ins
outs
mov
(bad)
jnp
stos
ins
xor
add
fstp
lock
xor
daa
xchg
gs
sub
test
xor
int3
xchg
adc
xchg
xchg
add
repnz
sti
inc
clc
inc
arpl
clc
sti
out
in
add
(bad)
(bad)
xor
mov
mov
pusha
sbb
mov
ret
ror
test
pop
add
xchg
inc
cli
cli
cdq
xor
mov
fs
iret
mov
ss
mul
(bad)
xchg
add
add
mov
ins
cmc
inc
lahf
mov
jbe
dec
stos
div
dec
shl
popf
inc
cmp
arpl
pop
sub
inc
adc
add
aas
cwde
lods
test
aad
aam
cwde
test
sub
inc
mov
jle
mov
xchg
xchg
icebp
mov
jmp
mov
sbb
mov
ret
out
add
mov
out
ret
jbe
scas
sub
jbe
daa
inc
(bad)
pop
jb
jae
outs
mov
ins
prefetcht2
jnp
sub
fs
idiv
outs
pop
retf
icebp
aad
dec
push
adc
inc
sbb
mov
or
jmp
xor
es
dec
jns
and
xchg
xor
xchg
stc
stos
jne
into
push
jl
xor
das
loopne
les
enter
out
xchg
popf
xchg
hlt
call
out
imul
adc
mov
in
adc
loope
mul
mov
movs
lea
and
dec
outs
in
cmps
icebp
fldcw
(bad)
pop
outs
cmp
mov
retf
and
jbe
loop
fistp
push
xor
int3
push
sub
call
inc
dec
mov
mov
imul
add
out
cmp
out
repnz
cmps
xchg
pop
lods
mov
and
out
pminsw
and
sti
dec
aam
iret
test
mov
dec
xlat
push
out
outs
fdiv
das
cmp
add
mov
in
inc
mov
push
mov
pop
mov
fs
loopne
lea
js
xor
movs
shl
call
jno
les
mov
jmp
mov
aaa
jbe
mov
pop
or
mov
ss
sbb
xor
mov
pop
push
jl
xchg
shr
cmp
dec
lahf
loope
jecxz
adc
stc
mov
mov
retf
sub
jp
add
jg
dec
xor
aas
outs
rol
aas
cs
movs
inc
xchg
cmp
mov
push
out
pop
test
inc
(bad)
fbld
cwde
leave
popa
arpl
pop
push
mov
xchg
mov
push
fs
inc
sub
xchg
mov
adc
cmp
je
or
push
fs
ss
test
inc
movs
in
out
pop
(bad)
iret
jnp
cmp
cmps
lock
je
icebp
sbb
cmp
nop
mov
rol
sub
es
pop
xchg
sbb
mov
stos
push
mov
jl
add
xor
(bad)
mov
cmp
mov
das
lods
jno
(bad)
lods
std
jb
lock
pop
in
push
jbe
jmp
rol
popf
adc
push
fs
into
loop
dec
mov
loope
inc
cmc
fs
pushf
stc
xchg
arpl
pop
movs
leave
cmp
int3
sbb
pusha
jl
pop
mov
mov
gs
mov
cmc
loop
adc
pushf
xchg
xchg
mov
cmp
mov
push
and
loope
jge
mov
push
sub
out
popf
inc
jecxz
cs
mov
mov
jmp
cli
cs
inc
add
push
add
loopne
mov
mov
push
fist
repnz
call
movs
stos
loop
popf
adc
fdivr
sub
sbb
adc
fwait
sub
inc
cmp
add
(bad)
addr16
mov
jp
(bad)
shr
imul
add
mul
mov
int3
fisttp
mov
ins
std
(bad)
lock
pop
aad
pmulhw
xlat
add
push
xchg
sbb
sub
(bad)
push
(bad)
cmp
add
mov
inc
int3
mov
loope
fdiv
xchg
sub
dec
xor
add
xchg
mov
sub
inc
outs
dec
add
loop
sub
jg
xchg
and
cmc
push
adc
cmp
ss
and
or
mov
pop
mov
pop
jae
jecxz
pushf
jne
loopne
mov
cli
je
inc
or
movs
scas
movs
xchg
xchg
mov
ds
mov
(bad)
out
sub
jae
repz
iret
or
mov
pop
out
jb
ja
repnz
cmp
mov
dec
(bad)
xor
hlt
mov
sahf
jae
adc
ror
sub
sub
sbb
fsubp
pop
mov
push
cwde
xchg
cmps
push
push
idiv
xchg
xchg
in
and
call
sbb
jmp
aaa
loopne
xchg
mov
scas
sbb
push
outs
mov
ins
adc
je
xor
stos
sub
sub
xchg
leave
(bad)
daa
push
outs
add
push
fbstp
loop
dec
mov
bound
xchg
fsubrp
iret
and
lock
dec
cwde
les
imul
cdq
jbe
clc
adc
adc
jmp
add
xor
nop
je
pop
pushf
outs
dec
in
or
or
push
dec
imul
cwde
mov
sub
fs
sbb
test
mov
sahf
scas
mov
leave
movs
mov
dec
xchg
add
sub
das
ss
fidiv
lock
push
jnp
adc
mov
scas
sbb
cmp
fcomp
fadd
add
dec
mov
cli
push
xchg
add
lock
inc
inc
inc
call
adc
cmp
(bad)
cld
cdq
frstor
add
call
inc
mov
jbe
jno
ds
rol
add
sub
add
xor
or
pop
lock
int
xor
inc
push
sub
outs
pop
sub
(bad)
clc
cmp
dec
mov
mov
sahf
cmp
fdiv
jl
out
add
dec
clc
jmp
add
xor
cmp
pop
mov
scas
cmps
jno
imul
xchg
fnstcw
jne
scas
(bad)
cdq
sub
loop
mov
pop
in
jno
push
aaa
loop
push
ret
cmp
jns
out
xor
inc
jmp
mov
sti
shr
test
ja
out
(bad)
ja
mov
aas
je
pop
xchg
pop
add
lock
scas
sub
xchg
mov
lods
popf
or
mov
cmps
or
sub
popf
imul
cmp
jo
inc
das
ins
loopne
ret
xlat
xor
mov
sbb
inc
hlt
sbb
mov
and
vcvtsd2ss
fmul
jb
sub
adc
mov
push
rcl
and
push
test
imul
loope
sbb
and
dec
lods
and
pop
retf
ins
lahf
jp
dec
arpl
cdq
mov
push
jno
repz
push
and
mov
call
and
sub
add
mov
sub
in
add
mov
and
push
push
mov
idiv
adc
xlat
ret
mov
rcr
or
xchg
dec
pop
pop
dec
dec
cwde
enter
jg
repnz
jb
pop
push
adc
and
aas
rcl
imul
cmp
jb
jne
aad
or
or
cdq
loope
add
das
inc
inc
cmp
das
call
hlt
repnz
adc
and
mov
mov
and
fs
lock
in
rcl
add
or
push
add
dec
add
test
retf
or
mov
pop
outs
nop
dec
jmp
shr
push
add
sub
cmc
mov
sti
cmp
aam
sbb
(bad)
aad
gs
jnp
push
push
sbb
and
dec
pop
fmul
mov
mov
das
into
sbb
imul
fdivr
and
jne
mov
pop
stc
xor
xlat
call
fdivrp
xor
repz
mov
fsubr
inc
das
dec
ins
es
mov
stos
pop
push
lods
in
ins
and
jmp
int3
sti
cld
and
dec
xor
out
pop
xor
or
and
imul
mov
dec
dec
jle
dec
cmps
or
dec
xchg
xchg
xlat
mov
or
bound
cmp
cmp
mov
pop
(bad)
jmp
or
push
data16
sti
inc
rcr
cmps
stos
mov
rcr
add
lock
jl
and
pusha
or
or
iret
test
dec
sub
cmp
mov
repz
cmp
pusha
(bad)
sbb
dec
jg
inc
adc
int
pushf
out
out
fcmovu
rcl
sar
shl
pop
push
icebp
ret
clc
mov
mov
adc
and
lds
aas
add
stos
outs
add
sub
cli
xor
jae
fwait
sub
out
inc
mov
(bad)
out
mov
test
cmc
and
movs
rol
cmp
xchg
outs
mov
mov
or
dec
paddsw
adc
stos
pop
(bad)
scas
mov
fdivr
jbe
fbstp
jbe
out
fdiv
sub
mov
or
mov
pushf
inc
aad
(bad)
ret
sbb
cmp
xchg
daa
movs
sub
sbb
jns
cmp
cmp
repz
sub
jmp
lods
mov
cmp
mov
and
inc
pop
ret
mov
mov
ds
out
test
xor
add
xchg
xchg
fnstsw
std
fwait
jp
add
mov
xchg
imul
pushf
xchg
push
imul
mov
stos
imul
int3
cmp
mov
add
pop
jge
rol
mov
pop
clc
and
dec
push
movs
cdq
movs
dec
ret
outs
pop
xlat
scas
retf
push
mov
adc
pop
call
mov
ficom
jno
popa
inc
sahf
mov
push
sbb
in
les
cmp
mov
jne
call
lds
or
loope
and
xor
mov
xchg
out
out
ins
(bad)
rol
mov
enter
in
push
cli
je
das
sbb
jecxz
fild
and
and
add
jl
jge
push
fsub
or
pop
imul
pop
fadd
dec
fst
out
mov
test
xor
aad
mov
push
test
mov
adc
sbb
out
cmps
(bad)
cmp
ret
scas
rcr
inc
mov
push
or
in
adc
push
mov
jae
sbb
movs
jbe
mov
push
aaa
(bad)
jne
xor
cmc
cmp
cmp
push
adc
leave
push
pop
dec
sti
bound
cwde
in
pop
jo
scas
movs
push
jmp
(bad)
mov
mov
cmps
adc
fadd
into
cmp
neg
nop
hlt
and
pop
scas
loopne
pop
jnp
std
or
lods
shl
clc
popf
daa
fmul
aas
or
or
or
mov
dec
or
aam
ja
ja
mov
sbb
movs
add
mul
repnz
movs
mov
movs
jno
push
xchg
scas
fmul
aas
in
mov
cdq
repnz
cmp
push
push
cmc
jle
xchg
ds
jp
inc
sub
push
sbb
push
sbb
cli
xchg
imul
mov
retf
push
dec
aaa
mov
mov
dec
hlt
lock
enter
call
and
xchg
dec
les
arpl
xor
pop
push
sub
leave
pusha
adc
mov
popa
into
dec
push
out
call
mov
int3
and
dec
adc
cmp
popf
mov
je
sbb
lahf
mov
xchg
push
mov
mov
jns
rep
push
(bad)
sub
xchg
lods
and
test
or
mov
or
pop
fucomi
ins
stos
push
cmps
sbb
fsub
hlt
lsl
popa
test
mov
xor
cs
mov
rcl
(bad)
popa
lock
pop
call
pop
push
outs
xchg
adc
ss
pop
sub
xchg
and
or
cs
outs
aas
push
fnstenv
add
xor
addr16
addr16
leave
mov
jae
lock
mov
mov
sbb
cmc
dec
xor
in
sbb
mov
adc
jno
mov
pop
sub
xchg
fwait
mov
ror
or
push
jmp
repnz
(bad)
xor
adc
cs
mov
test
loopne
push
mov
icebp
jns
mov
lds
not
fistp
outs
lods
mov
es
xchg
cmp
call
out
push
sahf
mov
std
and
adc
dec
push
xchg
mov
aaa
pop
mov
adc
push
in
bnd
smsw
addr16
pop
sbb
stc
retf
dec
mov
xor
inc
enter
adc
bound
mov
push
xchg
and
push
in
jmp
aad
push
test
mov
loope
and
mov
out
(bad)
mov
and
outs
and
push
jge
test
jecxz
(bad)
pop
ins
dec
pop
int
test
xchg
cwde
mul
mov
movs
in
adc
or
or
sbb
xor
push
rcr
mov
test
cmps
mov
out
or
xor
hlt
push
mov
fdiv
ja
and
ret
stos
mov
cdq
hlt
bound
jmp
stc
(bad)
and
xchg
and
cli
fadd
shr
or
xchg
cmp
popf
sar
aaa
repz
xchg
not
add
jo
es
dec
aas
dec
add
cmps
cdq
les
sti
jae
mov
in
push
mov
jno
retf
add
and
dec
pop
sub
iret
or
xor
loopne
jne
cwde
lahf
retf
cmp
xor
jmp
ret
sbb
push
(bad)
iret
xchg
add
or
jl
and
ins
sub
daa
(bad)
out
ja
jg
iret
out
jns
(bad)
cmp
lods
jg
jmp
ins
inc
mov
xor
jne
sbb
xlat
xlat
cmp
and
call
adc
daa
pop
retf
xchg
xchg
mov
cld
out
mov
(bad)
std
jb
or
(bad)
sbb
cmp
xchg
sub
stos
call
jno
jae
push
push
call
push
adc
adc
fs
xlat
adc
leave
mov
cli
pop
pop
ss
lock
jb
jnp
adc
or
pop
out
sub
push
jmp
inc
or
fld
jne
inc
xor
cmps
pop
lock
(bad)
jp
sub
scas
sub
mov
add
adc
pop
dec
std
cmp
mov
sub
ror
aam
mov
das
nop
and
cmp
add
or
in
lock
ds
mov
jnp
pop
sub
mov
lea
test
jle
mov
jb
jno
outs
inc
mov
mov
cmp
mov
rcl
mov
not
(bad)
sbb
add
add
pusha
ss
xchg
pop
add
dec
adc
push
outs
cwde
jp
or
aaa
mov
aad
sbb
inc
movs
jns
pop
stos
mov
adc
in
inc
adc
loope
adc
cld
cvtps2pd
mov
icebp
lea
sahf
push
push
jge
in
cdq
mov
clc
jmp
mov
hlt
jne
push
pop
jl
pop
(bad)
fs
ror
jl
xchg
push
cmp
clc
ins
add
loop
and
or
xchg
cmp
movs
fcomp
push
dec
or
pusha
inc
aaa
mov
das
outs
ret
iret
sar
inc
pop
fs
inc
in
je
inc
int
inc
and
mov
fsubr
cmp
push
daa
rcl
lar
and
and
in
mov
push
mov
enter
and
xchg
inc
push
(bad)
dec
fs
mov
xor
dec
xor
popa
mov
test
add
xor
jae
lds
or
test
adc
xor
mov
pop
adc
xchg
sar
pop
cdq
clc
fcmovne
leave
mov
mov
fsub
mov
outs
mov
fnstcw
movs
sti
mov
fmul
cmc
or
dec
pushf
cmp
jmp
mov
stc
mov
pop
pop
mov
cmp
xchg
(bad)
div
inc
sbb
sbb
hlt
push
arpl
ins
inc
movs
cmp
retf
call
sbb
pop
lods
mul
mov
dec
or
jnp
(bad)
jmp
hlt
xchg
xchg
jle
push
xor
cmp
sub
push
daa
push
push
das
in
adc
mov
ds
in
jg
pop
push
sti
mov
cmp
or
jnp
sti
jnp
mov
mov
(bad)
nop
and
cmps
int3
fs
cmps
arpl
les
push
sub
inc
lds
jae
xor
mov
cs
jg
lahf
cli
or
(bad)
retf
ja
je
cmp
pop
mov
repz
xor
jle
jg
pusha
in
jle
push
and
iret
hlt
cli
push
(bad)
jno
mov
arpl
jmp
idiv
sub
push
nop
xlat
adc
and
repz
stc
adc
imul
xchg
div
adc
mov
imul
push
mov
neg
sub
mov
ret
sbb
pop
mov
add
push
mov
iret
lar
inc
xchg
pop
mov
cmp
mov
pop
movs
mov
push
shl
or
xor
add
mov
push
mov
dec
xchg
scas
pop
popa
cmp
pop
mov
jl
jae
mov
push
popf
push
(bad)
in
xlat
or
(bad)
cmp
mov
xor
fnstsw
and
movs
rcr
cmp
(bad)
or
xor
(bad)
pop
mov
(bad)
cmp
fldenv
mov
popa
cwde
(bad)
add
lods
mov
jecxz
test
mov
xchg
hlt
pop
inc
lds
int
or
arpl
mov
mov
call
cwde
push
adc
cmc
add
loop
rol
adc
bound
inc
mov
dec
jmp
dec
sbb
mov
loope
pop
out
mov
inc
jbe
js
ds
aam
das
movs
cmp
xchg
jecxz
fwait
sahf
cdq
int
setne
les
xor
test
shl
push
pusha
les
adc
xchg
pop
je
(bad)
add
repz
shr
scas
cld
movs
and
in
js
mov
mov
mul
jno
xchg
push
or
cmp
and
mov
dec
dec
cdq
xor
stc
push
add
jmp
sbb
pop
nop
or
cmp
mov
xchg
sti
jl
(bad)
mov
jl
sub
jnp
stos
adc
cmps
mov
jecxz
test
mov
or
icebp
gs
cmp
fisttp
(bad)
mov
cmps
adc
sti
fst
xchg
repz
fdivr
nop
dec
cld
dec
xchg
movs
outs
pop
pop
cmp
cmps
mov
js
fs
xor
mov
mov
or
inc
pop
fwait
add
inc
push
stos
xchg
adc
adc
rcr
push
repnz
out
sbb
mov
ret
push
add
jnp
scas
sub
jle
(bad)
imul
test
dec
lahf
movs
unpcklps
pop
push
nop
sbb
adc
xor
sub
ins
popf
imul
int3
xchg
mov
jae
mov
push
(bad)
adc
xchg
scas
mov
sbb
in
mov
ret
push
ds
mov
jns
xor
or
jmp
mov
(bad)
neg
dec
scas
mov
pushf
std
cmp
jo
ror
lds
pop
pop
ins
(bad)
mov
jb
mov
in
sbb
push
sbb
pusha
pop
sub
ins
dec
mov
and
es
daa
xor
rcl
inc
xor
jge
repz
lds
rol
leave
iret
lods
jg
sbb
xchg
mov
daa
test
test
mov
mov
sub
or
pushf
inc
in
cwde
jl
int
and
xor
push
sub
int
not
add
loopne
popf
jp
or
push
es
jne
mov
sub
pop
sbb
ins
or
dec
loop
push
and
pop
push
pusha
nop
push
jmp
cmp
(bad)
and
icebp
addr16
sub
push
lock
pop
out
or
scas
mov
or
add
rcl
xor
push
movs
xor
cli
adc
addr16
das
jb
gs
ret
mov
and
cmp
test
add
aad
test
cwde
add
mov
jnp
shl
or
xchg
daa
(bad)
fcmovne
xchg
cmps
push
pop
adc
and
adc
pop
sar
pushf
in
cld
add
scas
jl
idiv
push
jnp
inc
adc
aad
cmps
sub
mov
push
cmps
jge
adc
jle
call
cmps
xor
push
or
jp
xor
mov
dec
fdivr
or
mov
iret
add
test
mov
adc
rol
imul
push
sar
sbb
inc
mov
loop
fld
sub
add
pop
shr
aaa
jp
outs
cmp
fcom
lods
gs
into
shl
sar
add
mov
cli
push
mov
adc
cmp
push
adc
inc
adc
rcl
xlat
pop
out
and
mov
lahf
icebp
(bad)
and
(bad)
push
sub
push
outs
jmp
push
or
jo
cmps
mov
leave
out
or
jmp
cmp
scas
pmaddwd
test
cmp
mov
outs
pushf
mov
(bad)
mov
(bad)
or
xor
mov
sub
pop
sub
or
(bad)
fwait
outs
leave
iret
push
mov
daa
or
push
in
xchg
std
aas
fwait
(bad)
xor
scas
(bad)
inc
sub
stos
sub
outs
mov
sub
xchg
push
mov
cmps
jg
inc
faddp
mov
add
add
pop
imul
push
add
adc
lahf
pop
jmp
fwait
jg
sbb
arpl
fmulp
push
ror
test
ret
in
bound
je
jg
adc
popf
mov
push
mov
pop
or
int3
mov
lds
rcr
cwde
mov
es
xor
test
mov
mov
push
adc
cs
clc
inc
fisttp
in
fisub
movs
dec
ds
mov
(bad)
sti
icebp
cmp
pop
or
mov
push
adc
add
stos
aaa
xor
daa
retf
jno
pusha
jo
out
out
jecxz
add
sub
jns
into
hlt
jecxz
retf
test
shl
pop
inc
lahf
out
mov
jae
mov
xchg
dec
out
aam
je
xor
xchg
jmp
inc
push
xchg
push
jl
shl
cmp
xor
cmps
shl
xchg
imul
or
mov
inc
repz
icebp
jbe
cld
xchg
lods
leave
sbb
(bad)
fbld
icebp
dec
sub
dec
iret
mov
push
aad
sbb
sbb
adc
sbb
mov
xchg
sahf
lods
movs
ret
fsub
or
inc
dec
jmp
add
add
dec
cmp
imul
int
pushf
mov
push
out
(bad)
iret
sub
pop
ret
loop
fdivp
fs
retf
sahf
stos
add
mov
clc
inc
int
and
push
mov
nop
cdq
xchg
lods
rol
dec
out
or
aam
div
mov
cs
std
popf
pop
in
lods
push
xchg
iret
fucom
fdiv
add
arpl
out
sub
adc
jmp
scas
gs
mov
sti
cmp
dec
hlt
in
adc
scas
rcl
sbb
cmps
popa
mov
push
dec
push
test
jge
cmp
bnd
jmp
add
pop
adc
jp
mov
pop
retf
adc
xchg
push
out
aad
xchg
pop
fsubr
xchg
test
test
add
dec
lea
mov
addr16
scas
inc
nop
adc
and
cld
xor
or
jl
cs
jp
cmps
bound
lods
hlt
inc
mov
xor
pop
call
pop
inc
inc
ficom
push
cmp
xlat
push
cli
mov
xor
xchg
mov
dec
loopne
js
xor
mov
add
repnz
sar
mov
mov
xchg
pop
int
lods
jmp
xchg
and
mov
pop
cmp
xlat
(bad)
mov
arpl
loopne
cmc
lods
test
ins
mov
push
sub
call
enter
cli
in
rcr
fisubr
sub
or
mov
adc
leave
inc
(bad)
iret
pusha
jns
mov
jno
aad
stos
jp
xchg
push
add
xor
or
mov
stc
lods
test
pop
sbb
pop
(bad)
fucomp
imul
(bad)
(bad)
out
push
or
stos
call
scas
adc
jl
(bad)
es
je
dec
jae
xor
(bad)
mov
fsub
loope
adc
and
adc
outs
cmps
push
std
cld
dec
fdiv
sbb
push
call
out
stos
and
cmps
mov
popa
mov
add
jns
jmp
(bad)
aas
add
lds
or
es
cmp
xor
mov
mov
xchg
int
mov
cld
and
mov
fwait
je
fisubr
inc
dec
icebp
(bad)
out
jae
or
jge
adc
inc
pop
xchg
lods
cmp
add
sub
call
ins
test
js
inc
or
ins
push
imul
push
sbb
lahf
mov
sub
pop
into
pop
lock
pusha
xchg
xchg
mov
mov
ss
movs
pop
(bad)
xchg
inc
push
leave
add
cmp
lods
add
ins
xlat
add
retf
pusha
lods
(bad)
pop
mov
(bad)
ds
push
mov
imul
or
rol
xor
sbb
in
imul
add
(bad)
mov
mov
movs
cmp
push
add
xor
and
mov
out
pushf
out
shl
push
retf
jb
xor
mov
(bad)
icebp
jnp
mov
jne
mov
fst
je
lods
in
xchg
arpl
pop
loope
test
lods
mov
inc
sbb
fsubrp
pop
dec
xchg
mov
int
mov
push
mov
movs
jno
dec
xchg
jl
in
shl
cmp
pop
mov
mov
fs
jae
jmp
pushf
ret
pop
call
sahf
jb
adc
aas
cld
or
add
cdq
sbb
into
sub
and
in
dec
jle
fld
fld
aaa
jne
mov
shl
adc
inc
push
out
inc
loopne
push
mov
cmp
test
add
mov
jmp
mov
in
test
aad
add
add
push
data16
add
or
fabs
push
dec
or
fldcw
in
pop
addr16
mov
mov
out
aas
pop
stos
xchg
(bad)
cmp
mov
movs
popf
mov
mov
push
push
sahf
int
push
push
movs
pop
into
outs
inc
push
into
push
lods
sbb
shl
xlat
pop
les
call
adc
pop
dec
xor
lods
and
je
inc
int3
mov
leave
cli
inc
and
pop
jmp
not
aaa
shl
cli
mov
jne
mov
mov
ror
jae
push
mov
repz
retf
cli
(bad)
mov
or
or
ror
fcom
outs
call
push
dec
jne
push
fstp
pop
push
and
cmc
je
xor
jns
sbb
pop
cmps
aad
stos
pop
push
fldenv
cmp
jb
sbb
out
inc
pop
inc
addr16
mov
xchg
out
out
cmp
mov
(bad)
repz
adc
push
jno
push
sbb
pop
inc
out
mov
cmps
or
leave
popf
fild
std
or
mov
dec
xchg
and
xchg
lock
mov
in
pusha
add
les
(bad)
cmp
ss
(bad)
imul
jmp
aaa
rol
xlat
fwait
movs
stos
jmp
jmp
mov
add
call
dec
sub
pop
(bad)
lods
call
and
mov
ret
inc
add
dec
pop
mov
lahf
hlt
fsub
(bad)
dec
nop
rol
repz
ins
xchg
(bad)
jmp
into
mov
arpl
add
(bad)
mov
jne
adc
and
aaa
push
sbb
dec
stc
nop
or
mov
or
add
mov
stos
mov
or
(bad)
das
inc
push
mov
push
xchg
lock
push
movs
mov
lds
in
sbb
xchg
add
fild
xor
shr
aas
sub
jbe
sbb
sub
fisttp
jns
jmp
and
sbb
lods
dec
lods
and
dec
ds
cmps
aas
xchg
and
sbb
or
push
sbb
jbe
adc
push
test
inc
lock
movs
dec
sub
daa
inc
mov
sbb
sub
ja
push
add
inc
fwait
dec
repz
cli
ror
add
pop
xor
paddb
scas
scas
xchg
sub
cmp
imul
rol
xor
jge
and
inc
ret
mov
movs
jge
repnz
es
repnz
stos
mov
xor
inc
bound
cmp
adc
or
sbb
pop
popf
xor
cmp
mov
pop
or
enter
cmp
rol
pop
pop
xchg
aam
push
or
mov
cli
sub
mov
inc
test
ret
cmps
loop
aas
test
push
std
pop
fild
popf
mov
xlat
dec
fiadd
ret
pop
rcl
sub
fstp
and
pushf
mov
cmp
mov
das
xlat
inc
jmp
push
jle
loopne
lods
dec
scas
mov
mov
or
shl
test
sub
std
mov
cli
mov
jmp
sub
and
fst
mov
jmp
loop
jp
cdq
adc
jmp
adc
outs
cmp
mov
pop
fwait
div
jg
sti
and
lock
test
and
jnp
scas
sbb
(bad)
pop
call
shr
or
retf
imul
push
jl
mov
pop
icebp
jg
in
mov
cmp
add
outs
push
push
scas
(bad)
jno
mov
ja
xchg
test
leave
aas
xchg
inc
cmc
xor
mov
out
add
scas
sbb
cdq
mov
daa
lea
adc
mov
sub
jo
cmp
mov
xor
xchg
sbb
imul
cmp
out
jb
fcomp
jnp
jecxz
or
enter
cli
fdivr
dec
and
xchg
sub
sub
adc
jl
lock
out
pop
xor
retf
sbb
inc
cmp
xor
xchg
jns
pop
(bad)
sbb
pop
fdivr
push
into
pop
dec
sbb
(bad)
scas
push
dec
pop
dec
pop
mov
dec
xor
sbb
ret
xchg
enter
xchg
and
lods
test
iret
sbb
dec
rol
add
push
add
sub
icebp
ret
lock
and
mov
mov
stc
dec
(bad)
test
(bad)
stc
push
stos
xchg
cmps
add
repz
add
scas
jb
adc
jo
and
inc
jp
fwait
sbb
xchg
pop
push
cmc
into
add
push
outs
dec
mov
cld
and
push
or
idiv
xchg
lahf
xor
or
push
or
(bad)
mov
sub
jl
jns
iret
jnp
out
xchg
test
dec
fld
sbb
ins
add
xchg
pop
inc
stos
xor
or
lods
mov
outs
xchg
in
dec
popw
ror
popa
fwait
adc
inc
cmp
push
pop
in
jl
cs
sub
popf
aas
stos
in
xor
or
mov
sub
mov
cmps
xchg
adc
mov
fist
pop
mov
sbb
mov
cs
and
pop
mov
adc
sub
lock
xchg
cmp
fsubr
je
add
xchg
or
xchg
adc
mov
lods
das
gs
cmps
or
add
mov
push
jo
inc
int
adc
pushf
jmp
cmp
mov
scas
lock
pop
sahf
dec
cmp
xchg
mov
jmp
mov
fnstenv
mov
inc
cmp
fmulp
push
xchg
mov
xchg
or
xor
hlt
aad
and
sar
xchg
pop
ja
xchg
fidivr
dec
je
mov
push
fcomp
mov
mov
xchg
scas
cmps
xchg
jmp
repz
and
push
test
dec
or
push
jmp
mov
inc
xor
fisub
dec
mov
dec
dec
push
and
sub
xchg
sub
sbb
repz
cmp
sub
mov
loop
inc
cmp
mov
loope
xchg
cmp
sbb
das
(bad)
leave
int
pushf
aam
test
je
mov
in
mov
sub
fcmovb
xchg
into
jmp
(bad)
push
sbb
sahf
cmovp
lods
mov
lods
xchg
jg
in
inc
cli
je
or
add
cmc
in
popf
dec
pop
inc
or
jne
sub
mov
xor
or
pop
jle
and
leave
xchg
push
mov
pop
loopne
cs
inc
pop
int
xor
fcomp
mov
ins
sbb
or
xchg
adc
out
fst
xchg
rcr
stos
loop
xchg
mov
aam
lods
aaa
pop
xchg
inc
clc
and
mov
xor
add
mov
mov
add
cmp
push
(bad)
xchg
enter
mov
inc
mov
xor
mov
shr
fsub
add
pop
sbb
pop
les
push
sub
sub
sub
mov
fild
mov
jb
gs
sahf
jne
aas
push
imul
mov
pop
in
push
dec
lods
andps
aaa
xchg
leave
mov
dec
mov
xor
inc
adc
jle
fldcw
retf
imul
in
mov
fidiv
xchg
jg
sub
fnstenv
push
xor
dec
adc
mov
pop
lahf
icebp
mov
mov
cli
inc
cs
jmp
test
xchg
adc
fmul
mul
pop
pop
sub
mov
mov
xchg
stc
enter
jns
dec
jp
lods
mov
dec
pop
inc
(bad)
call
dec
fidivr
dec
stc
ret
adc
add
sub
std
or
or
sub
ja
in
cmc
ffree
sub
mov
inc
fwait
jmp
jle
mov
jnp
dec
imul
mov
hlt
movs
iret
sub
mov
jge
das
ret
pop
or
mov
add
mov
inc
mov
cld
not
fistp
and
pop
xlat
ret
aaa
and
int
xchg
mov
fisub
sub
in
cmp
and
and
inc
lods
or
movs
pop
add
fsub
xchg
popf
jge
ja
mov
call
fwait
leave
dec
fisttp
cwde
es
adc
xlat
jmp
sub
in
cdq
xchg
cld
xor
mov
sub
jg
aad
adc
cs
xor
jb
fistp
fucomp
cmp
mov
jo
cli
pop
sbb
inc
fstp
in
add
std
pop
mov
mov
add
(bad)
ins
push
add
arpl
inc
cld
data16
and
or
sub
in
or
mov
cmp
push
and
(bad)
jl
shr
leave
pop
repz
sbb
xchg
inc
xor
fmul
xchg
test
es
xchg
call
mov
clc
mov
push
inc
cmp
fisttp
imul
cli
jmp
and
push
retf
sti
sub
sub
jmp
test
inc
pop
outs
iret
xlat
inc
arpl
xchg
hlt
aam
sub
std
inc
mov
adc
arpl
push
jnp
int
jmp
rcl
pop
jb
xor
dec
xor
dec
inc
shl
xchg
pop
or
jno
mov
das
xor
jmp
add
dec
repz
nop
ret
xchg
push
fwait
pop
jnp
and
jecxz
call
pusha
gs
xor
sub
add
add
inc
mov
fcmovne
stos
(bad)
into
mov
aam
not
sbb
dec
scas
aas
dec
cli
ins
out
xlat
sti
in
mov
mov
in
adc
sbb
jo
push
or
push
leave
call
mov
iret
retf
aas
or
imul
push
ins
movs
(bad)
jo
add
les
pop
in
mov
ficomp
and
nop
repnz
push
lock
push
mov
push
imul
mov
mov
repnz
imul
pusha
push
jne
clc
cli
(bad)
enter
gs
xchg
and
data16
shl
cmp
stos
jae
mov
push
ss
xchg
and
(bad)
jno
jb
mov
out
mov
fwait
inc
jg
jno
cmc
int3
inc
(bad)
mov
pushf
add
xchg
fnsave
mov
lahf
outs
fstp
loopne
push
fimul
sub
jl
scas
add
in
arpl
cwde
rol
in
stc
jno
out
pop
inc
test
mov
(bad)
and
mov
rcr
int3
and
sbb
fdiv
test
xchg
daa
add
outs
(bad)
movs
sbb
jne
push
and
lods
mov
jo
dec
mov
sbb
xor
arpl
mov
adc
xor
aam
inc
mov
std
retf
sbb
rcl
rcl
ret
cmp
and
and
cmp
sub
mov
adc
add
out
cmps
test
jl
shr
cmp
mov
dec
sub
pop
sahf
bound
xor
push
xor
cmp
mov
or
test
lea
in
sbb
lock
dec
mov
loop
adc
out
lods
and
and
jl
push
jmp
test
xor
jno
cmps
rol
dec
mov
mul
add
test
jbe
pop
jp
xchg
sti
mov
icebp
ss
aaa
das
test
std
mov
push
dec
cdq
mov
in
mov
out
xlat
(bad)
push
add
xchg
(bad)
jno
jmp
pushw
fidivr
and
sbb
pop
jbe
out
shl
lds
rcl
not
cmp
(bad)
jmp
pop
xchg
pusha
in
aam
sar
adc
cs
es
cmp
lock
aam
adc
fsubrp
mov
push
(bad)
or
xchg
test
cli
shl
pop
loopne
cmp
cmps
lahf
inc
cmps
cmp
js
test
inc
mov
popf
xchg
pop
adc
push
mov
mov
in
cmps
mov
call
or
pop
xlat
mov
int
add
mov
pop
dec
icebp
pop
or
mov
dec
std
cmp
(bad)
jg
test
shr
out
cwde
xchg
push
into
cmp
xchg
cmps
inc
or
xor
or
ret
mov
std
scas
sahf
jl
scas
scas
sub
push
popa
call
int3
sbb
in
sub
mov
dec
jmp
stos
mov
test
inc
or
in
je
push
push
sbb
adc
outs
push
ja
and
xor
jp
dec
data16
nop
or
inc
sti
dec
jnp
in
fcom
push
mov
or
add
rsqrtps
aam
push
mov
mov
mov
cs
call
dec
loop
push
sub
sbb
loope
sbb
and
stos
sbb
(bad)
pop
cmc
jmp
lock
out
or
out
inc
not
sub
clc
and
rol
xor
sti
jge
call
movs
ret
push
pop
stos
and
test
(bad)
in
inc
xchg
jae
mov
inc
push
inc
adc
lods
ins
jg
jb
jg
xchg
icebp
adc
mov
jno
pop
pop
sub
jae
cmp
push
cmp
ins
sub
jl
icebp
mov
pop
push
mov
add
push
mov
(bad)
out
ins
loop
jae
imul
mov
das
xchg
adc
or
add
add
mov
fnsave
dec
or
adc
les
cs
sbb
inc
xchg
outs
add
scas
ins
(bad)
cmps
mov
hlt
mov
std
and
sbb
xchg
movs
cld
xchg
(bad)
mov
test
je
adc
mov
jns
fdivr
push
scas
inc
jle
push
cmps
(bad)
das
push
clc
mov
(bad)
mov
cs
mov
mov
mov
inc
lds
scas
aas
out
jle
push
jmp
and
jg
ja
and
lea
fdiv
cwde
add
test
in
inc
ins
les
mov
fisttp
pop
fisttp
add
in
mov
pop
inc
pushf
imul
out
vpsubb
push
xor
sub
or
aas
mov
mov
test
inc
xchg
xchg
mov
fdiv
jl
jbe
jno
mov
nop
hlt
sub
cmps
mov
fst
in
ret
jg
scas
mov
or
mov
nop
out
mov
mov
pop
test
rcr
inc
mov
ret
cdq
add
out
lahf
adc
in
pusha
dec
sub
and
jge
cmps
and
(bad)
movs
cmc
pop
in
bound
push
mov
(bad)
pop
iret
sbb
out
and
or
movs
stos
ret
sub
inc
mov
push
xchg
cld
jge
jl
xor
rcl
imul
jmp
lock
jecxz
clc
add
pusha
in
inc
xchg
scas
inc
jb
xchg
icebp
retf
jae
jge
add
push
iret
mov
xor
xchg
leave
in
call
xchg
imul
std
retf
ror
mov
inc
icebp
fstp
xor
jl
cmp
fild
mov
push
addr16
mov
fcom
mov
and
mov
dec
out
push
mov
lahf
repz
jp
pop
push
aad
sbb
push
pushf
push
push
sub
mov
xchg
int3
(bad)
(bad)
mov
int3
mov
(bad)
jbe
das
fs
fwait
idiv
and
(bad)
lods
sbb
pop
sbb
add
sar
push
xlat
pop
and
leave
fiadd
cwde
mov
loope
inc
xchg
xchg
and
mov
mov
fnstenv
push
out
adc
pop
ins
pop
jne
pop
pop
jg
popa
mov
(bad)
jns
dec
add
sub
movs
shl
ret
or
sub
xchg
ds
adc
pop
scas
loopne
xchg
cmps
mov
ror
or
pop
clc
push
jmp
xor
and
xor
rep
cmps
mov
xchg
ror
lods
add
retf
aaa
lea
cdq
into
mov
hlt
loope
mov
scas
pusha
sub
aas
lahf
pop
mov
mov
sub
mov
or
cli
jne
dec
adc
xor
and
pop
mov
pop
add
sub
inc
scas
out
pushf
push
popf
rcl
scas
or
push
cld
scas
jne
hlt
je
adc
cmc
xor
sbb
test
outs
xchg
je
out
jl
add
aas
out
push
cmc
dec
ss
pop
mov
imul
movs
push
test
ins
jo
cmp
mov
addr16
(bad)
int3
hlt
xchg
(bad)
adc
js
sahf
(bad)
mov
call
mov
popf
pop
push
mov
test
mov
push
cdq
mov
sub
mov
lahf
mov
sub
daa
jmp
dec
mov
xchg
jns
jmp
arpl
sbb
rcl
jle
sub
fisubr
in
push
fs
dec
std
mov
lods
and
sti
fnstenv
xor
dec
shl
ss
push
or
into
out
not
inc
pop
iret
test
or
sbb
xor
jg
mov
fild
and
addr16
iret
dec
jno
repnz
or
cmp
mov
es
inc
and
xor
mov
push
idiv
retfw
push
imul
mov
leave
sbb
xor
std
inc
das
les
cmps
aam
dec
daa
dec
sar
inc
dec
fldcw
or
dec
jns
adc
or
mov
xchg
cld
xchg
in
or
dec
mov
push
(bad)
pop
fcmovne
and
cmp
movs
(bad)
jmp
(bad)
das
cmp
in
jne
mov
iret
inc
stos
repnz
lea
loope
push
mov
(bad)
cmp
mov
retf
push
xor
ss
out
and
test
rcl
push
pop
xchg
sub
hlt
das
lahf
sahf
popf
and
xchg
xchg
rol
mov
sub
xchg
dec
out
retf
rcr
setp
out
xchg
fstp
cmp
shr
jb
in
jbe
or
inc
or
inc
jno
inc
pop
test
(bad)
lock
aaa
xor
lahf
push
icebp
aaa
jae
fs
jne
fld
or
lods
push
mov
mov
mov
sbb
(bad)
add
test
mov
mov
and
xchg
add
inc
cmp
xlat
cli
and
mov
lods
pop
ret
adc
sbb
and
jns
arpl
push
pop
pop
cmp
into
iret
std
sbb
mov
int3
mov
cs
pusha
cmp
loope
aam
rcl
out
sbb
xchg
jno
inc
push
push
mov
test
cld
sub
push
pop
data16
sti
or
in
jns
mov
sub
and
mov
xchg
js
add
adc
cwde
aad
int
fadd
add
addr16
in
rcr
inc
ja
jno
dec
adc
dec
pop
jge
ss
clc
cld
int
sub
iret
jb
cli
test
out
or
push
lods
rol
push
inc
or
(bad)
jo
lahf
mov
xor
stos
icebp
add
fwait
ret
test
mov
dec
daa
and
cwde
aad
sub
sbb
call
mov
adc
inc
push
mov
test
xchg
pop
sbb
mov
mov
pop
rcr
xchg
jge
sub
jge
dec
pop
shl
call
add
xor
xchg
scas
test
out
jae
mov
std
mov
loopne
push
cmps
imul
add
stc
ja
inc
jo
ret
mov
out
sub
loope
sbb
aaa
nop
adc
rol
sbb
stc
rcl
xor
and
out
cli
je
fwait
cmp
test
xchg
adc
inc
mov
push
data16
inc
adc
into
aad
repz
aam
mov
shr
fisub
retf
out
and
nop
call
(bad)
adc
out
cld
mov
ins
daa
subps
dec
(bad)
cmovg
loopne
mov
xor
dec
fsubr
call
xor
(bad)
mov
lods
and
iret
mov
push
add
adc
inc
inc
out
addr16
cdq
xchg
clc
rol
lahf
push
mov
mov
and
xchg
popa
jmp
nop
mov
dec
enter
vpunpckhqdq
lock
push
xor
jg
movs
data16
adc
add
mov
into
or
fnstenv
mov
shr
pop
aam
enter
scas
in
std
fisub
inc
ja
mov
sbb
pop
mov
adc
and
ficom
mov
pop
fild
jle
mov
imul
jb
cmp
inc
dec
(bad)
cmp
and
shr
xor
ja
bound
dec
dec
mov
fwait
inc
addr16
addr16
pop
dec
sbb
stos
add
xchg
mov
call
xor
xor
scas
int
sahf
iret
pop
call
js
push
in
pop
outs
stos
xor
ds
mov
inc
dec
jnp
mov
xlat
adc
inc
push
mov
(bad)
fmul
repnz
call
sbb
add
(bad)
ins
push
sar
add
bound
fcomp
stos
mov
sahf
jmp
retf
mov
popf
push
das
mov
ret
or
cmp
push
(bad)
jo
inc
into
mov
ret
xor
and
pop
mov
hlt
cmp
call
pop
cmp
scas
test
daa
sub
pop
or
and
stc
jge
lock
nop
int3
into
or
iret
inc
sbb
dec
aad
inc
and
xchg
ret
imul
in
loopne
out
pop
neg
cmp
inc
inc
add
in
sbb
clc
mov
test
daa
pop
enter
movs
xor
sar
xchg
sub
int3
jb
icebp
adc
jmp
add
hlt
loopne
sbb
mov
push
mov
pop
retf
xchg
rol
test
pop
je
aad
std
lods
and
aaa
mov
mov
inc
inc
dec
sbb
adc
cdq
(bad)
js
popa
enter
cli
bound
mov
and
xchg
xchg
jb
xor
sbb
aaa
add
gs
push
xor
dec
scas
add
bound
push
daa
icebp
ror
jns
mov
inc
jge
iret
mov
inc
in
lock
xchg
dec
adc
push
pop
pop
les
cmp
mov
loop
fild
mov
fmulp
sbb
adc
mov
imul
ficom
xchg
cmp
cmp
aaa
in
push
mov
or
retf
mov
popf
lods
lods
idiv
jb
pop
rol
das
lahf
pop
dec
imul
inc
or
mov
cmp
or
call
adc
bound
(bad)
mov
out
aas
push
imul
mov
xchg
mov
gs
mov
cwde
repz
jmp
xor
nop
repz
test
sbb
or
pop
sub
xor
aaa
repz
sbb
pusha
and
sbb
and
push
(bad)
sub
fdiv
lods
cli
xchg
cmp
mov
sbb
test
mov
cmovns
rcl
fmul
and
ret
aam
xchg
not
std
pop
popf
jecxz
ficomp
mov
sbb
mov
lea
stc
retf
unpckhps
pusha
xchg
dec
mov
adc
cmp
test
xor
pop
sub
retf
adc
xchg
pop
lds
adc
jmp
call
cmp
mov
and
inc
inc
or
inc
adc
pop
movs
pop
mov
sti
mov
es
iret
ret
fistp
inc
add
test
dec
into
ficom
lods
jmp
push
sub
xor
add
pop
dec
loop
ds
hlt
xchg
out
pop
(bad)
das
mov
movs
hlt
inc
add
out
shl
mov
dec
mov
mov
dec
test
mov
scas
and
xlat
(bad)
jmp
test
mov
xchg
pop
sub
loopne
jmp
outs
mov
inc
inc
aaa
push
and
sub
les
cdq
in
xlat
pop
enter
push
cmp
fisub
outs
or
and
push
inc
in
jle
or
into
and
data16
cmp
popa
push
int
cmp
setl
pop
(bad)
jle
jns
mov
or
iret
sti
movs
adc
cmp
jno
mov
sub
nop
lds
(bad)
mov
fs
xchg
movs
push
mov
aad
xchg
out
push
push
add
mov
int3
cmp
sub
cwde
jne
nop
or
push
jo
sub
and
lock
test
mov
(bad)
xlat
dec
stc
xchg
mov
cwde
ins
and
in
jp
aad
aad
aas
xor
scas
jl
pop
mov
push
push
jg
bound
inc
inc
jge
lds
pop
and
mov
mov
imul
cmps
outs
(bad)
lds
adc
lock
push
ins
mov
shl
cmp
fdiv
dec
mov
pop
pop
ds
arpl
xchg
pop
cld
cmp
sub
sbb
scas
cs
stos
mov
push
xor
lds
sub
dec
adc
bound
inc
aad
dec
xor
imul
arpl
inc
pop
les
pop
xor
int
adc
test
out
dec
xchg
inc
fcmovne
pop
ins
xchg
push
mov
lods
dec
je
mov
shl
xchg
cmp
cmps
jbe
mov
add
adc
sbb
xchg
dec
inc
add
dec
jmp
pop
call
pop
rcl
xchg
test
cmp
retf
mov
aam
test
fnstenv
sub
movs
xor
test
aas
cmp
ret
jns
je
push
lods
mov
ret
(bad)
aam
test
gs
pop
icebp
push
out
add
das
sbb
je
cmp
(bad)
jmp
mov
movs
pop
ror
and
std
jmp
hlt
je
test
add
mov
push
lods
js
jg
or
mov
lods
push
js
es
mov
hlt
lds
cmp
ins
popa
add
and
mov
xchg
gs
inc
dec
jle
add
lds
(bad)
in
cld
cmc
rol
ret
dec
fmul
pop
push
repz
adc
and
rcl
lds
popf
xchg
(bad)
es
clc
loope
aam
sbb
sti
jg
stos
cmp
sar
retf
sbb
not
leave
jge
test
or
push
push
xor
pop
mov
xchg
idiv
stc
loope
das
mov
cli
cli
and
jmp
pop
(bad)
and
xor
imul
fimul
idiv
repz
jmp
xchg
div
inc
je
lods
cmp
push
mov
lods
imul
mov
fcmovnu
ficom
nop
cwde
(bad)
push
mov
jge
in
jg
arpl
adc
mov
inc
pop
push
sub
std
sub
and
adc
mov
ret
stc
and
das
add
mov
add
retf
rcl
andps
push
pop
mov
ins
addr16
adc
mov
sbb
(bad)
fstp
(bad)
jne
ret
icebp
fcmovu
add
adc
adc
scas
push
xor
xor
mov
mov
div
sbb
inc
mov
push
(bad)
and
push
call
inc
ret
dec
xchg
jge
lea
fistp
and
leave
push
ror
bnd
fdiv
cmp
mov
adc
and
cmp
inc
repnz
out
cmp
dec
addr16
push
repz
sbb
jb
mov
jle
cwde
adc
or
mov
bound
mov
push
sbb
(bad)
adc
test
mov
inc
or
cdq
sbb
retf
(bad)
jmp
dec
mov
add
xor
mov
arpl
or
mov
neg
ret
pop
cmps
inc
bound
stos
inc
call
fisttp
adc
scas
pushf
fnsave
mov
mov
cld
rcl
push
jecxz
fwait
loope
pop
jmp
mov
sub
push
out
mov
jmp
and
mov
and
or
ss
in
in
cdq
sti
addr16
mov
aaa
out
rcr
sub
stc
mov
jg
loop
pop
cdq
fbld
jmp
xor
sub
jmp
push
inc
gs
jge
lock
mov
cmps
dec
sbb
push
ret
scas
ins
loopne
inc
nop
in
xchg
and
stc
int
sbb
push
fstp
push
aaa
dec
lods
iret
or
fimul
sbb
xor
clc
adc
(bad)
mov
or
sbb
mov
and
imul
dec
jo
fcom
cwde
jo
int3
sbb
outs
fisttp
dec
or
aaa
retf
(bad)
retf
and
dec
jne
jmp
xchg
addr16
lds
sub
inc
push
mov
cs
aaa
and
mov
nop
cmp
pop
sbb
pop
jecxz
sub
test
adc
sbb
aad
sbb
(bad)
cs
jp
jbe
sbb
fmul
or
sahf
stc
or
pop
mov
xor
push
adc
test
dec
aam
xchg
or
cmp
test
cdq
(bad)
pusha
inc
xchg
xchg
dec
mov
ret
and
adc
iret
movs
dec
push
arpl
push
mov
and
mov
mov
cwde
mov
imul
xchg
fwait
xor
adc
mov
fbld
add
adc
movs
in
popa
ret
jle
xchg
add
cmp
sbb
cmp
push
xchg
cli
lahf
jmp
out
cmp
mov
je
and
stc
or
adc
push
imul
jg
hlt
cmovnp
leave
test
push
rcl
rcr
mov
adc
scas
cmc
nop
mov
test
pop
xor
push
mov
lds
pop
and
mov
int
sbb
mov
ror
pop
ret
mov
pop
js
sar
jecxz
or
mov
movs
mov
out
push
movs
ins
or
out
push
outs
movs
adc
or
(bad)
cli
bound
rcl
aam
pop
sbb
int3
jmp
adc
and
sar
mov
push
dec
loopne
enter
ds
nop
fs
sbb
mov
or
in
jg
shl
cmp
sub
sbb
inc
test
addr16
fst
mov
es
cmp
js
hlt
nop
sahf
rcr
or
outs
jecxz
cld
adc
repz
xor
cmp
call
jbe
in
call
push
xor
rcl
xlat
and
adc
push
fwait
or
sub
mov
int3
test
xor
push
cld
cwde
in
(bad)
sar
std
aam
mov
mov
sub
stos
arpl
inc
pop
jmp
sbb
aaa
add
shl
xchg
push
sub
ficom
inc
xchg
pop
mov
fsubr
add
mov
call
sbb
out
add
add
aaa
lods
mov
pop
into
jae
mov
aas
iret
xchg
out
cli
dec
push
gs
pop
mov
das
dec
adc
jne
mov
adc
aad
dec
clc
fld
mov
stos
les
add
jg
cmp
inc
inc
icebp
in
lds
stos
pop
push
es
adc
mov
jns
jmp
and
xor
xchg
hlt
mov
pop
mov
repz
push
fs
jbe
inc
pop
fidivr
add
fwait
pop
xlat
aaa
push
xor
test
retf
sub
in
mov
mov
xchg
inc
ins
iret
mov
test
in
inc
hlt
mov
mov
sbb
imul
sbb
jge
dec
pop
xor
or
fdiv
xor
addr16
stos
push
test
(bad)
add
mov
(bad)
je
aas
sub
dec
out
cmps
jle
int3
fidivr
xlat
lock
and
and
(bad)
jmp
jle
je
mov
mov
pop
aam
pop
push
femms
pop
pop
imul
jl
scas
or
daa
lods
mov
loope
(bad)
dec
and
call
mov
jle
sub
test
out
imul
fist
adc
ss
mov
(bad)
(bad)
gs
cmp
push
arpl
add
add
imul
icebp
add
cdq
mov
sub
jecxz
sar
out
inc
stos
rcr
shl
cmps
in
sub
aad
inc
adc
jge
cmps
int3
cmps
icebp
in
dec
cmp
(bad)
pop
dec
cmc
xlat
lea
mov
mov
and
adc
mov
adc
sbb
sbb
pop
cli
pop
pop
jns
mov
call
cdq
or
cmp
div
(bad)
lock
jle
cmp
movs
pop
addr16
pop
mov
daa
xor
or
and
mov
and
fmul
mov
xor
jb
pop
add
iret
jge
cmp
jne
or
add
jle
mov
lea
in
daa
fld
dec
es
(bad)
(bad)
in
mov
repnz
fdiv
xor
lods
fcomp
push
fisub
sbb
rol
mov
xchg
xchg
enter
push
imul
mov
or
mov
dec
(bad)
jno
daa
mov
in
imul
leave
and
into
mov
add
inc
add
mov
sbb
sub
xchg
(bad)
outs
xchg
ja
ror
fist
data16
test
add
push
lods
es
int
jmp
les
jnp
leave
or
xchg
aas
xchg
loopne
ins
inc
rcr
jb
xchg
push
ins
shl
shr
adc
push
mov
inc
cli
aam
mov
sbb
not
jle
or
jmp
js
pop
adc
mov
aaa
lahf
or
adc
and
pop
pop
jbe
(bad)
cmp
aaa
xor
xchg
enter
push
sub
sbb
stos
std
push
sub
xchg
sahf
lods
sahf
(bad)
rsqrtps
movs
push
pushf
daa
loopne
pop
sti
pop
add
out
push
ret
mov
and
das
xor
xlat
fadd
es
das
gs
lahf
or
imul
mov
sbb
test
jo
int3
fist
and
sbb
jnp
dec
std
xchg
xor
js
mov
lods
sbb
ins
out
jno
cmps
xor
or
and
bound
mov
jmp
dec
mov
xchg
push
pushaw
jmp
hlt
mov
popa
fist
sub
clc
imul
pop
inc
or
inc
cwde
mov
and
std
adc
out
add
dec
pop
in
xor
jne
push
push
movs
mov
aam
or
fucomp
sub
sbb
movs
cmc
fcomp
adc
xor
lds
mov
mov
int
aas
and
cmp
cli
push
aad
scas
mov
sub
and
lds
ins
adc
push
cmc
pop
add
mov
mov
mov
iret
mov
push
fcmovbe
in
das
shl
in
movs
xchg
adc
mov
sbb
adc
test
pop
xchg
sub
mov
jne
sahf
popa
jl
add
(bad)
mov
lock
mov
js
das
push
fmul
shr
adc
sub
shl
movs
push
movs
cdq
mov
mov
inc
xor
std
cs
imul
(bad)
fsubr
cmp
cmp
fwait
add
outs
call
fist
stc
inc
pop
sub
lods
scas
sub
shl
fisub
rcr
and
mov
xchg
rcl
aad
push
inc
gs
inc
jnp
xlat
stc
mov
stc
pushf
daa
in
and
jge
fcom
cmp
mov
(bad)
imul
mov
enter
pop
clc
push
cmp
fistp
jl
popa
jae
loope
mov
int
pop
leave
xor
fldenv
add
inc
mov
sbb
test
sbb
loopne
loopne
inc
sub
retf
ins
jp
lgs
fs
and
mov
fcomp
scas
mov
mul
mov
adc
xchg
sahf
sub
movs
repz
(bad)
imul
sahf
shl
imul
or
jle
fdivr
mov
ss
retf
stos
inc
nop
enter
inc
xor
push
mov
and
cdq
jbe
mov
pop
sbb
in
push
mov
gs
push
or
xchg
dec
adc
sbb
push
mov
std
and
mov
push
out
or
scas
fwait
ss
pushf
ins
aam
ret
push
adc
imul
lods
jb
jmp
xor
(bad)
push
sub
lds
fst
pop
clc
adc
jge
adc
cdq
rol
scas
add
mov
or
imul
ds
gs
jne
mov
ret
sahf
cmp
push
jg
(bad)
xor
pushf
jmp
ins
mov
test
jmp
je
hlt
or
pop
out
lea
inc
adc
popf
xor
cmp
fsubr
out
stos
pop
sbb
cmc
bound
sbb
dec
pop
push
cdq
je
out
inc
and
or
jnp
mov
das
ss
inc
mov
push
jo
scas
inc
mov
sub
ret
push
out
cmps
and
push
add
sbb
in
dec
push
bound
out
imul
adc
adc
jmp
mov
mov
jbe
xor
jo
(bad)
mov
pop
aam
es
push
xchg
sub
xchg
test
jbe
dec
mov
mov
call
ins
mov
and
cdq
push
cmp
xlat
or
or
imul
ja
sbb
js
movs
cmp
sub
push
dec
mov
jmp
fidivr
fisub
retf
les
clc
push
cmp
xchg
or
add
ror
sbb
pop
arpl
pop
cdq
cmps
cmp
ror
and
jecxz
xor
retf
repnz
(bad)
outs
ja
inc
xor
xchg
cwde
adc
call
cld
push
clc
push
and
icebp
xchg
in
loopne
shl
mov
mov
stos
in
add
push
or
add
add
sub
sub
lods
test
xchg
mov
sub
or
aaa
xor
xor
inc
push
jo
jno
mov
and
into
jmp
push
shl
push
fwait
mov
call
or
nop
cmps
and
std
sub
xor
inc
bound
fld
cmp
jmp
ja
(bad)
or
aad
and
ins
jae
and
jp
cmps
lahf
ins
in
dec
retf
dec
imul
mov
sahf
mov
inc
sub
sub
adc
repnz
mov
inc
pushf
pop
enter
and
mov
in
outs
jecxz
aad
add
mov
adc
xchg
(bad)
dec
inc
rcr
lods
mov
mov
sbb
in
sub
paddsb
push
sub
push
call
adc
add
js
or
cmp
mov
rol
fs
jbe
aas
ffreep
adc
data16
adc
add
ins
xor
inc
imul
pop
mov
xchg
dec
fwait
xor
bound
lock
sahf
les
xor
jbe
mov
movs
jp
dec
outs
in
mov
pop
sbb
jl
push
cmp
cli
test
retf
in
rcr
(bad)
and
mov
push
adc
push
fnstsw
mov
lock
aad
or
mov
je
cmp
test
push
sbb
inc
mov
mov
or
mov
dec
aaa
fnstsw
dec
sbb
jle
test
sbb
test
loope
shl
adc
pop
and
pop
and
sar
xor
jnp
mov
popa
mov
xor
and
cmp
sub
pusha
ins
stc
cdq
jle
mov
mov
shl
xor
sub
push
imul
mov
cmps
add
imul
scas
test
imul
cmc
mov
sbb
(bad)
std
cmp
rcr
or
jmp
or
mov
ins
adc
ret
sbb
cmp
push
(bad)
outs
xchg
test
jecxz
jb
xchg
xor
in
retf
pop
push
adc
dec
adc
jecxz
push
lds
lock
arpl
mov
fadd
jecxz
and
adc
fld
adc
dec
sbb
push
xor
test
xor
(bad)
adc
inc
mov
jae
fcomip
in
je
push
xor
imul
cs
lea
test
call
xor
and
adc
lea
lahf
cld
mov
add
popa
inc
and
imul
ret
test
cmp
pushf
cmp
icebp
jb
movs
popf
jge
pop
or
stc
ins
fisttp
push
inc
cld
xor
mov
xor
jecxz
cmp
movs
push
or
movs
ja
iret
(bad)
fisubr
push
je
add
mov
lods
sbb
pusha
dec
jae
mov
fs
loopne
pop
dec
inc
(bad)
retf
inc
jns
mov
(bad)
jmp
fild
dec
and
data16
xor
or
push
lods
and
popa
mov
jmp
sub
(bad)
jg
push
add
cmps
jns
test
add
iret
iret
lods
in
neg
std
xchg
imul
jl
push
pop
pop
fist
cmp
xor
leave
das
fistp
std
cs
jmp
cmp
mov
jae
or
mov
ds
popa
add
addr16
inc
retf
rcl
and
call
fiadd
inc
adc
mov
jmp
mov
test
inc
mov
pop
outs
pop
out
jo
jle
call
jno
int3
cmp
cmp
add
push
cs
xor
rol
dec
mov
mov
dec
ret
out
push
es
daa
mov
clc
mov
jp
xor
(bad)
adc
mul
clc
or
add
jl
lods
je
push
int3
pop
add
addr16
lds
test
xor
repz
mov
push
jge
repnz
inc
cmp
push
in
das
push
push
sub
dec
lds
mov
or
stos
jne
ret
xchg
pop
rol
aaa
sahf
jns
inc
mov
daa
xor
call
cs
stos
mov
(bad)
mov
mov
pop
mov
push
in
pop
call
sub
ins
xlat
popa
sub
xchg
push
mov
sub
sub
scas
push
xchg
aam
jno
and
in
lea
or
ret
pusha
or
dec
aam
jecxz
jbe
enter
xor
les
xchg
sub
mov
sub
push
sub
mov
inc
dec
popa
ss
jmp
and
jae
dec
add
inc
jmp
sbb
mul
fcmove
leave
loopne
or
xor
cmps
movs
xor
xlat
in
fs
ins
sar
push
sbb
fsub
and
fild
mov
setae
in
imul
idiv
in
js
mov
jne
jmp
iret
repnz
rcl
pop
pop
rcr
add
hlt
call
mov
pop
out
mov
shl
sub
xchg
add
xchg
xor
retf
fdivp
imul
std
add
lods
and
ja
sbb
ror
jns
push
jge
inc
movs
dec
daa
je
sub
aaa
cdq
sub
out
ins
movs
sub
jecxz
(bad)
cs
(bad)
daa
mov
pop
or
into
loope
ins
aad
mov
ds
cmp
and
mov
adc
xlat
call
dec
jp
test
cmp
or
popa
(bad)
cld
jo
pusha
pop
cmp
add
xor
mov
mov
mov
mov
push
hlt
bt
push
mov
xchg
cmps
jge
fimul
mov
push
xchg
xchg
cmp
mov
(bad)
pop
xchg
mov
jle
push
pop
(bad)
mov
xchg
or
and
je
repnz
jp
pusha
loope
iret
push
sbb
outs
mov
and
cmp
(bad)
addr16
aam
xchg
and
xchg
inc
int3
jg
jo
jl
in
movs
dec
mov
inc
dec
ins
adc
inc
in
pop
aas
adc
rol
or
int3
pushf
jb
and
gs
dec
and
jp
pop
(bad)
sub
and
fwait
and
mov
mov
add
xlat
or
mov
push
xor
push
or
cli
inc
fbld
push
and
sub
and
outs
gs
xchg
jle
sub
outs
into
loopne
test
add
das
jne
dec
pop
sbb
and
mov
shr
sbb
and
adc
movs
fld
pop
cmp
dec
adc
repz
cs
jl
pop
xchg
(bad)
lea
jo
call
hlt
icebp
jl
enter
jle
inc
mov
repnz
xor
pop
jecxz
push
mov
push
adc
xor
dec
sar
sbb
dec
test
sbb
inc
arpl
js
push
and
stc
leave
arpl
add
fs
mov
mov
popa
mov
je
sub
or
xlat
mov
pop
shl
push
pop
cmp
dec
fidivr
mov
bound
stos
jmp
and
push
out
call
fsubr
cmps
xor
mov
sub
mov
add
jge
pop
popf
push
jecxz
dec
add
imul
jnp
fld
or
mov
test
movs
mov
push
lea
xchg
sahf
mov
or
daa
jecxz
or
jbe
dec
les
jl
test
add
popa
lahf
les
cmc
es
ss
call
mov
mov
mov
jle
mov
out
fild
pop
call
xor
pop
fisttp
out
xor
arpl
ins
inc
mov
ret
mov
push
inc
cmp
inc
inc
cmp
and
in
lea
out
pop
imul
aas
push
and
jns
pop
ret
in
test
lock
das
mov
jb
retf
lea
leave
inc
dec
test
cmc
scas
hlt
cs
ret
out
jmp
pop
lahf
dec
in
xchg
or
jl
pushf
mov
dec
sti
ins
into
cmp
add
and
sub
es
loop
xor
xchg
xchg
std
repz
ins
inc
pop
xlat
mov
jecxz
outs
mov
iret
mov
inc
cmps
jle
sub
scas
shl
inc
xchg
add
std
jle
push
jle
(bad)
(bad)
cwde
dec
test
adc
or
sahf
and
pop
fs
leave
mov
push
dec
fld
scas
fsub
xor
pop
push
inc
outs
and
mov
je
movs
movs
aam
sbb
mov
jns
stos
shl
aad
dec
sahf
mov
add
dec
add
push
xor
adc
inc
jne
cmp
push
add
and
add
cmps
fldenv
out
lock
add
je
ins
clc
jle
div
sbb
mov
(bad)
dec
mov
stc
cwde
push
into
pop
pop
push
add
loope
sahf
dec
or
mov
jge
sbb
cli
push
out
add
retf
stos
mov
xchg
std
mov
mov
adc
jmp
mov
cmp
or
jg
pop
sti
lock
out
nop
call
lods
hlt
inc
pop
neg
mov
cld
push
mov
leave
fsubr
stc
jno
neg
pop
mov
ja
mov
cmp
push
xchg
bound
data16
cld
bnd
fadd
xchg
sti
push
popa
sbb
imul
mov
repz
je
icebp
int
mov
loope
cli
add
dec
add
cmp
sahf
dec
loop
dec
dec
into
xor
stos
bound
push
hlt
pop
icebp
or
inc
mov
mov
mov
mov
rol
adc
sbb
push
sbb
stc
mov
idiv
test
loope
fbstp
or
cmp
push
(bad)
fisttp
adc
das
mov
sub
outs
pop
pusha
inc
mov
popa
adc
dec
icebp
jmp
je
test
(bad)
aas
ss
cmp
fidivr
cdq
mov
push
aam
mov
aad
jne
in
push
mov
in
jb
ret
jmp
ds
leave
xchg
sbb
xchg
cli
inc
fwait
(bad)
lods
test
sbb
xor
std
jecxz
out
dec
jo
in
ror
push
out
dec
bound
pop
ins
div
sbb
dec
pop
js
repz
(bad)
add
neg
adc
dec
cs
and
jb
jns
push
dec
inc
mov
in
jmp
xor
ret
mov
into
mov
jmp
(bad)
imul
test
sar
je
cld
(bad)
add
aas
cmps
jnp
mov
loop
cmp
push
cmps
movs
js
ret
fsub
pop
push
pop
xor
call
jbe
iret
mov
push
fist
mov
(bad)
xor
test
sbb
jmp
dec
jl
cmc
cmc
mov
mov
(bad)
pusha
lea
jp
bound
mov
add
push
or
sub
pushf
or
nop
add
sbb
stos
sub
sub
inc
and
or
ror
repnz
xchg
jg
repnz
mov
add
icebp
(bad)
sti
fnsave
(bad)
sub
mov
bound
ss
or
shl
lods
adc
jge
jb
xchg
pop
push
mov
jae
icebp
pop
pop
mul
jp
xchg
aam
jle
sbb
dec
imul
sub
mov
mov
cmp
dec
out
jg
xchg
cdq
pop
lods
mov
mul
cs
cmps
pop
imul
ins
ret
sub
outs
mov
rol
daa
sub
jp
mov
leave
in
scas
push
ja
add
xchg
ds
fild
retf
call
test
xchg
xchg
pop
cli
pop
out
dec
fidivr
jmp
(bad)
adc
push
sbb
inc
pop
inc
imul
fdivrp
mov
sub
lods
sti
mov
jmp
cwde
int3
scas
lea
(bad)
(bad)
cmps
mov
ss
pop
sub
fdiv
or
mov
add
push
pusha
and
jns
sbb
out
cmp
test
scas
xchg
movs
inc
(bad)
dec
push
mov
fisttp
(bad)
scas
fadd
rol
and
adc
or
out
xchg
call
jae
into
js
add
cmp
retf
jmp
cmps
xor
and
lea
push
xor
jns
icebp
and
hlt
pop
add
scas
scas
test
inc
xchg
data16
aam
mov
mov
outs
xor
pop
sub
das
push
shr
lock
push
xor
push
mov
imul
icebp
mov
aad
xchg
(bad)
ds
pop
adc
es
movs
outs
pop
dec
xchg
xchg
sbb
aaa
mov
push
pop
sub
mov
pop
js
push
pop
add
push
rcr
push
shr
xchg
icebp
mov
hlt
adc
sbb
loope
sti
push
stc
popa
dec
test
push
xchg
test
fcmovb
(bad)
nop
mov
sub
adc
gs
jns
mov
loop
pop
call
mov
nop
mov
outs
fist
cli
sbb
push
xor
or
sbb
fsubr
or
mov
test
pop
lods
retf
lock
(bad)
cmp
int3
fisubr
xchg
push
xchg
sub
sub
les
neg
ja
jne
fcom
(bad)
bound
jb
stos
and
dec
mov
test
pop
or
inc
(bad)
add
and
cmp
jge
mov
inc
in
adc
push
xor
loopne
add
mov
mov
retf
dec
push
push
cmp
(bad)
xchg
fnstenv
or
lahf
sub
je
fwait
dec
sti
mov
aam
(bad)
jnp
jp
xor
out
loop
fcomip
and
sub
and
sub
imul
cmps
xchg
xor
in
test
icebp
ret
test
fdiv
push
push
adc
adc
adc
inc
into
mov
mov
xchg
xchg
hlt
dec
lea
cmp
jns
adc
enter
or
inc
(bad)
and
into
call
ret
cld
bound
pop
gs
add
fwait
inc
ret
mov
cli
jp
adc
cwde
out
dec
popf
test
xchg
ds
add
push
int
loope
fs
cmp
cmp
adc
xchg
jl
dec
mov
(bad)
or
ins
stc
ss
scas
scas
inc
sbb
jmp
push
pop
(bad)
pop
xor
and
sbb
and
outs
sti
(bad)
dec
pop
add
hlt
loope
mov
mov
sbb
inc
pop
icebp
in
ja
aam
ja
jp
shl
sbb
sub
or
je
mov
call
push
aad
sub
jns
and
scas
sti
push
push
clc
jmp
ret
cmp
push
shl
into
pushf
and
test
mov
int3
sub
out
call
into
dec
cli
lock
cs
dec
adc
dec
lea
fnstenv
es
ret
pop
mov
add
adc
(bad)
and
jg
retf
les
push
jge
sbb
sti
mov
push
cmp
push
jle
retf
dec
xchg
mov
icebp
repz
inc
(bad)
xor
mov
and
les
imul
jbe
dec
je
and
pop
mov
popf
cmp
cmp
adc
mov
rcr
mov
repnz
(bad)
cwde
xchg
add
push
or
inc
retf
leave
cmp
push
push
cmp
hlt
sahf
ror
aas
into
cwde
les
pop
fisub
call
add
jl
jle
scas
push
popf
pusha
in
outs
int
out
add
dec
addr16
cmp
jns
bt
fyl2xp1
in
out
adc
test
push
je
outs
lahf
add
ss
retf
jne
xor
ds
lods
rol
fstp
shl
pop
mov
in
gs
pop
dec
adc
cmp
rol
(bad)
jp
stc
std
out
pop
rcr
in
jmp
sti
into
repz
mov
adc
sub
fcomp
and
sbb
adc
or
ror
scas
cmp
out
fnstcw
add
outs
add
out
push
rol
scas
xchg
int3
push
dec
and
fistp
mov
sahf
jg
(bad)
dec
inc
sti
xor
add
adc
push
les
push
fild
mov
repnz
icebp
mov
dec
pop
pop
sbb
mov
fld
xlat
cld
mov
cmp
lods
jo
add
jbe
aam
addr16
pusha
ror
mov
repnz
sub
rcl
ret
dec
or
or
(bad)
jmp
jno
int3
rol
dec
aad
lds
mov
add
sub
xchg
int
sbb
xor
(bad)
jge
jae
repnz
mov
cmps
xchg
and
add
test
pop
cwde
and
(bad)
inc
jp
lds
call
adc
int
or
push
add
push
adc
pop
outs
sti
push
mov
repz
std
outs
scas
cld
mov
jg
(bad)
outs
mov
pop
add
mov
and
sub
jnp
xchg
add
pop
fisub
cmp
and
dec
pusha
sbb
cld
loopne
(bad)
and
test
or
xchg
xor
clc
xchg
cmp
mov
xchg
and
test
cmc
jno
fnstenv
sub
sbb
div
sbb
xchg
xor
cwde
enter
mov
sahf
das
mov
bound
or
outs
pusha
popf
retf
retf
int3
ins
xchg
test
hlt
pop
xchg
call
ficomp
add
xor
jge
pop
mov
sub
aaa
fsubr
pop
jnp
and
test
ss
mov
ss
ret
movs
clts
mul
sub
pop
add
retf
ds
push
xchg
pop
in
call
or
ror
aaa
das
jno
jne
(bad)
es
sbb
push
movs
fisub
mov
gs
outs
sbb
add
add
dec
mov
adc
inc
pop
in
sub
push
push
cld
enter
cmps
pop
xchg
les
xor
jp
int3
es
jmp
and
sar
nop
xlat
(bad)
das
inc
repz
ror
adc
movs
sbb
loopne
sub
scas
mov
mov
loopne
call
or
outs
pop
arpl
sbb
mov
aam
cwde
fmul
test
fcomp
jmp
adc
div
arpl
xor
es
hlt
cmova
pop
out
pop
and
loop
(bad)
xor
mov
or
fdiv
xchg
scas
test
xchg
mul
jmp
ss
les
pop
adc
push
mov
sbb
int3
mov
mov
adc
add
push
ds
sbb
and
mov
movs
retf
scas
sbb
retf
xor
mov
stc
imul
cmp
(bad)
icebp
or
loopne
aad
jl
lea
rcr
test
shl
out
jp
push
gs
daa
xor
jmp
pause
cmp
pop
imul
sbb
pop
jl
mov
cmp
dec
mov
push
(bad)
repnz
leave
dec
loopne
xor
and
xchg
test
bswap
shr
fisttp
sub
adc
inc
mov
cmp
gs
fidiv
mov
les
out
jo
bound
cmp
aam
cld
push
mov
mov
jge
imul
ja
mov
lods
les
and
lods
test
push
xor
push
iret
pop
sahf
daa
ds
loopne
fisttp
je
or
mov
cdq
in
push
push
sub
mov
mov
mov
xchg
pop
retf
out
push
jns
sahf
sbb
cmp
popf
std
mov
in
scas
addr16
xchg
push
int3
fisttp
bound
pusha
pop
or
mov
es
sar
mov
ret
and
clc
sbb
inc
inc
sbb
dec
xor
pushf
mov
mov
(bad)
mul
sbb
adc
and
push
in
call
cs
sbb
test
jg
or
mov
xchg
shr
mov
cmp
adc
scas
push
out
into
adc
push
push
(bad)
or
ror
arpl
cmp
or
int
ficom
or
add
add
out
mov
and
das
pop
shl
fwait
aas
cwde
arpl
iret
fst
mov
xor
and
movs
lods
push
out
mov
mov
adc
xchg
pop
pop
sahf
rep
dec
cli
push
ja
dec
xchg
sub
inc
mov
lods
push
test
xor
nop
lahf
push
movs
dec
mov
add
cwde
pop
xchg
cmp
jmp
out
mov
mov
push
lahf
int3
and
jle
fisttp
mov
rcr
out
add
jecxz
mov
mov
inc
f2xm1
or
pop
and
clc
(bad)
jbe
pop
ss
push
mov
das
popf
mov
or
stos
mov
jg
pop
lock
test
imul
pop
sub
call
add
sub
iret
jns
fld
mov
fldenv
retf
mov
cmp
xor
mov
xchg
and
loope
push
into
ins
ret
pop
gs
mov
retf
or
fstp
jno
sbb
inc
fild
and
inc
dec
xor
rcl
mov
push
add
adc
inc
sbb
add
dec
and
cmps
fimul
addr16
rol
(bad)
dec
cmp
mov
div
ret
cdq
sar
mov
into
ins
movs
dec
fwait
dec
mov
(bad)
(bad)
mov
jle
pop
cmp
mov
fild
mov
push
jne
mov
mov
pop
fiadd
xor
mov
retf
and
xchg
sti
sub
push
pop
(bad)
ds
jae
pusha
stos
jmp
gs
jmp
cli
outs
pop
mov
retf
scas
mov
call
(bad)
aam
inc
adc
ror
sbb
or
lods
mov
scas
fidivr
and
les
pop
jp
cmp
imul
cwde
leave
and
repz
mov
aad
ins
or
mov
mov
xchg
into
pop
aam
pop
push
dec
push
inc
mov
cmps
mov
xor
push
jge
cmp
cwde
push
out
pop
add
iret
mov
out
mov
cwde
ret
jns
mov
test
cli
inc
outs
ret
pop
jb
mov
jne
mov
mov
mov
mov
sub
push
pop
in
pop
dec
cmp
mov
sub
(bad)
or
stos
ficomp
out
cmp
jmp
ins
dec
dec
sbb
lock
pop
xor
inc
mov
sub
jne
mov
fbld
dec
xor
pop
mov
jns
and
jae
sub
dec
ss
jne
les
in
adc
int3
gs
xor
shr
and
aas
leave
jns
popf
hlt
adc
pop
in
aas
lahf
inc
out
movs
in
pop
jmp
into
mov
je
mov
stos
rcl
jnp
imul
sbb
mov
dec
popa
cdq
inc
outs
das
dec
sub
sub
cmp
lock
inc
jge
stos
xor
and
test
xchg
sar
hlt
and
mov
leave
(bad)
cmp
addr16
pop
retf
pop
movs
neg
cs
lods
sar
call
scas
inc
push
sbb
mov
jmp
fild
xchg
addr16
add
and
jmp
cwde
punpckldq
leave
arpl
or
jo
sub
sbb
cmps
mov
call
mov
mov
inc
pop
bound
xor
in
cmp
into
inc
fmulp
imul
add
jne
cmps
arpl
sbb
ror
js
(bad)
iret
mov
pmuludq
int
push
mov
ss
xlat
mov
inc
or
in
mov
mov
xchg
(bad)
push
jmp
jae
loopne
inc
jge
retf
push
jle
or
xchg
rol
and
add
std
sbb
js
jl
xchg
int3
iret
(bad)
or
xchg
or
aam
or
adc
xor
pop
jne
jo
or
adc
inc
mov
jae
inc
dec
or
fwait
mov
out
clc
adc
sbb
add
sahf
jecxz
inc
out
cld
xchg
inc
or
adc
sbb
loope
xor
movs
data16
repz
repnz
ja
stos
mov
pop
pusha
and
adc
aas
fld
jb
je
sub
push
mov
in
repnz
ss
add
sbb
into
arpl
js
pop
test
cli
cmps
mov
or
xchg
xchg
jge
fucomi
sbb
out
int
mov
es
repz
imul
push
scas
dec
jecxz
lahf
push
push
mov
jecxz
mov
cwde
add
pop
push
dec
out
mov
retf
sub
pop
jge
xchg
fwait
cli
std
(bad)
adc
jge
inc
sbb
addr16
push
xor
and
es
jle
sub
cmp
or
xchg
es
mov
jp
mov
outs
push
and
call
nop
jns
adc
sbb
and
jmp
xchg
jmp
jo
nop
leave
xchg
out
or
cdq
pop
jmp
push
imul
adc
adc
jbe
daa
sbb
retf
dec
dec
fdivr
dec
or
je
xchg
sbb
int
shl
inc
mov
sar
push
sbb
mov
fcom
cs
pusha
repz
cld
jmp
sub
cmps
dec
sti
ror
je
cmp
or
pop
rol
sbb
xchg
and
adc
cmp
mov
xchg
repz
out
inc
sbb
adc
mov
jmp
xchg
mov
lds
aam
mov
and
imul
pop
popf
into
mov
loop
dec
push
sbb
enter
stos
ds
in
mov
sbb
sub
imul
and
push
sahf
push
call
scas
mov
pop
retf
in
inc
call
mov
sbb
pop
sbb
rcr
mov
xchg
gs
jb
je
or
lahf
sub
fldenv
shl
sub
iret
ret
fisttp
loopne
outs
jmp
jne
pop
xchg
xchg
dec
fsubrp
jo
inc
cmp
pop
aam
fbstp
pop
aam
imul
push
mov
hlt
xchg
mov
hlt
jl
pop
enter
outs
mov
xor
out
xor
mov
and
push
mov
loop
sbb
dec
or
xor
ret
retf
mov
mov
mov
mov
jbe
sbb
xor
repz
repz
test
cli
(bad)
(bad)
loop
test
jecxz
cwde
aaa
sar
sahf
mov
inc
jl
adc
xor
push
cdq
rcr
leave
adc
cs
fstp
push
bound
into
sub
out
shr
dec
outs
mov
in
push
jb
sub
and
sbb
xchg
add
dec
mov
std
lods
jnp
inc
or
int3
aas
jl
lock
xor
aaa
sbb
stos
cld
xor
mov
ret
leave
mov
mov
fwait
setl
jmp
test
dec
jo
sub
and
and
shr
xchg
cmp
js
and
sub
xchg
mov
je
out
mov
push
(bad)
(bad)
sar
sub
or
adc
repnz
retf
xchg
mov
imul
inc
ins
inc
(bad)
lds
and
xor
sbb
lahf
mov
aas
mov
mov
mov
clc
popa
popf
mov
mov
cmp
ret
sub
add
je
out
sti
std
scas
jmp
cmc
stc
mov
mov
or
les
int
push
dec
dec
xchg
(bad)
push
mov
mov
or
shl
push
adc
and
mov
rcr
test
or
jl
int3
xchg
push
cmp
pop
mov
mov
inc
ss
and
push
fldcw
test
imul
pop
inc
mov
xor
mov
pop
pop
xor
sub
xchg
rol
add
cld
je
loope
inc
out
retf
call
and
fnstenv
push
lahf
push
int
out
loop
mov
hlt
dec
inc
sbb
retf
mov
push
cmps
loop
dec
jg
std
icebp
add
icebp
and
mov
popa
jb
std
inc
ja
iret
mov
mov
inc
out
in
loop
push
je
pop
scas
inc
ins
dec
(bad)
mul
int3
adc
push
fiadd
xor
jmp
pop
rcr
sbb
ret
cmp
ins
retf
fsub
or
sub
fisttp
and
jo
dec
cwde
cmps
cld
dec
add
mov
retf
push
imul
push
mov
push
pop
jge
xor
ja
idiv
adc
adc
sbb
add
in
xlat
(bad)
xor
(bad)
sbb
inc
xchg
repz
test
xchg
push
ror
int3
fisttp
(bad)
lods
lock
(bad)
rcl
daa
rcr
aam
retf
mov
dec
cmp
xor
fs
je
into
popf
movs
xor
das
mov
sti
dec
dec
lahf
push
dec
jnp
sbb
mov
sub
xlat
adc
dec
repnz
bt
aas
stc
jmp
cmps
jmp
jno
adc
mov
mov
fst
dec
jecxz
cmp
jl
jg
mov
not
hlt
(bad)
ror
aaa
dec
inc
repnz
jle
xor
cmp
lods
jmp
cmp
jl
scas
push
pop
mov
inc
ffree
pop
js
xor
dec
inc
and
(bad)
xchg
push
mov
cmps
push
test
push
in
sub
add
push
sbb
dec
inc
mov
or
or
leave
sbb
cmps
loop
outs
std
sahf
inc
(bad)
xchg
ficom
or
mov
lds
dec
fisttp
xchg
add
mov
lock
hlt
push
sahf
jne
out
xchg
shr
xchg
(bad)
xor
push
or
rcl
mov
push
je
stos
mov
cmps
out
add
dec
adc
inc
sub
repz
outs
lods
mov
sbb
fsubr
aad
stos
push
retf
fimul
push
or
not
adc
(bad)
jl
mov
mov
pop
jb
xchg
fsubr
shl
dec
sti
pop
inc
sbb
es
push
xor
outs
cmp
add
out
clc
mov
add
xlat
cld
in
fimul
pop
cs
add
stos
int3
pop
retf
sbb
out
(bad)
push
ins
loope
or
mov
inc
lods
pop
in
(bad)
push
rcr
cmp
mov
movs
sahf
and
in
cmc
(bad)
inc
pop
stos
jge
adc
test
lock
in
les
das
sub
fild
jg
call
sub
cmps
sahf
cmps
fnstsw
cmp
ins
cdq
jae
bound
cmp
das
jo
mov
imul
inc
mov
or
push
lods
pusha
out
or
loopne
lods
stos
or
or
sub
in
imul
and
test
sahf
push
and
fidiv
lods
jne
jmp
in
scas
adc
nop
adc
into
pop
sub
sahf
lds
hlt
add
loopne
push
or
lods
imul
inc
pop
sbb
pop
sbb
sub
cli
(bad)
mov
in
les
dec
jmp
mov
add
pop
mov
push
add
sbb
pop
(bad)
retf
repnz
les
scas
enter
in
jbe
push
inc
pop
ret
cld
cmp
cdq
sub
cdq
or
cli
sub
inc
mov
xor
out
in
in
bnd
ins
nop
shr
sub
dec
xchg
imul
pop
inc
(bad)
dec
fidivr
(bad)
cwde
mov
inc
adc
ret
adc
imul
jno
test
mov
or
jl
std
push
(bad)
xchg
jmp
and
or
les
in
sub
mov
clc
call
push
fwait
cmp
loope
fnsave
call
xchg
mov
sbb
stc
lds
fdecstp
jnp
and
lods
jne
out
mov
jge
lock
mov
stc
adc
addr16
or
stos
or
in
pushf
mov
es
and
and
test
inc
jecxz
push
ret
retf
push
imul
gs
xchg
es
inc
mov
ja
cwde
scas
cmps
xchg
addr16
cdq
pop
sbb
scas
jl
mov
mov
mov
jle
cmp
test
inc
push
js
imul
scas
xchg
sub
pop
or
out
popa
jl
add
sar
push
fistp
adc
test
fldenv
hlt
test
pushf
outs
mov
shr
lds
mov
xor
mov
dec
in
or
inc
mov
dec
xchg
(bad)
loope
repz
and
sub
ds
aas
in
retf
fs
rcr
adc
jl
sub
xor
test
sti
enter
pushf
shl
jge
mov
daa
add
fwait
loop
xlat
add
fcom
or
or
adc
add
in
mov
out
(bad)
fnstenv
outs
leave
push
fdivr
das
push
shl
xchg
cs
adc
int3
icebp
loopne
xor
or
ins
xor
leave
and
mov
push
mov
arpl
jmp
movs
adc
cld
push
arpl
shr
retf
push
and
jmp
jg
cmp
dec
popf
dec
ss
std
dec
ret
inc
or
test
rcr
jecxz
jno
in
lock
cwde
or
jecxz
(bad)
mov
repz
and
push
push
mov
stc
adc
imul
(bad)
sub
jbe
mov
adc
inc
retf
nop
retf
(bad)
inc
mov
lock
int3
xor
jae
mov
(bad)
jle
push
cmc
xor
jmp
inc
clc
mov
sbb
push
inc
icebp
out
outs
sub
dec
adc
lds
fdiv
bound
mov
sbb
mov
clc
mov
push
mov
jno
loop
out
inc
sub
(bad)
jge
in
adc
jmp
push
fisubr
xchg
inc
xor
mov
sbb
mov
cmp
in
fwait
mov
ja
jnp
out
mov
popf
movs
movs
fst
sbb
cmps
div
loop
fdiv
retf
add
dec
dec
fwait
jmp
ror
in
jbe
xchg
iret
retf
mov
push
jg
popf
rcr
inc
test
cmp
inc
test
rol
mov
or
pop
icebp
lea
sub
adc
and
jge
(bad)
out
inc
xor
aad
das
loopne
adc
pop
cwde
jae
pop
xlat
es
rcl
cdq
xchg
dec
lock
push
dec
pop
pop
add
cdq
sbb
fiadd
movs
(bad)
dec
sahf
sub
jae
mov
repz
push
add
or
mov
add
sbb
fidiv
jl
push
mul
push
lods
cld
sbb
add
xchg
ds
es
jae
es
dec
sahf
add
mov
xchg
jo
jmp
jnp
pop
pushf
mov
lds
jmp
js
fst
scas
mov
icebp
mov
(bad)
push
stc
popf
pop
mov
imul
test
and
xchg
fwait
dec
rcl
dec
clc
je
push
movs
movs
ds
push
data16
xchg
or
mov
sub
js
pop
pop
sub
xor
push
sub
popa
stos
das
or
jnp
out
sbb
dec
push
dec
push
or
es
arpl
push
xor
cmp
xor
push
fbstp
addr16
fbld
inc
ss
add
xchg
je
inc
in
out
xlat
lea
sti
shl
in
xchg
(bad)
mov
adc
sti
xchg
push
push
nop
and
mov
jnp
or
pop
mov
pop
sub
imul
add
inc
je
mov
mov
in
cwde
scas
lock
sbb
mov
xchg
xchg
call
ds
jae
bound
adc
repz
popa
sub
lods
jle
mov
imul
or
mov
aas
das
sub
je
dec
push
mov
and
xor
clts
popa
shl
sub
push
clc
(bad)
cmps
ins
loopne
add
dec
adc
jp
adc
loopne
loop
cmp
and
inc
xor
pop
popf
lods
mov
(bad)
mov
mov
jbe
push
out
adc
cli
cmp
cmp
mov
xor
fxch
mov
out
mov
jmp
scas
in
addr16
fcmovu
je
mov
add
fist
pop
(bad)
fs
mov
xchg
hlt
inc
and
(bad)
sub
add
idiv
fidiv
and
scas
add
mov
clc
sbb
stos
push
aaa
cdq
stc
icebp
sub
fnstsw
mov
mov
mov
sahf
in
adc
jl
xchg
sub
retf
ins
fwait
xor
dec
dec
mov
jmp
xchg
sub
or
leave
pop
leave
aam
push
mov
int
nop
mov
(bad)
sbb
add
out
imul
pop
dec
lahf
ror
add
movhlps
iret
jmp
call
imul
pop
dec
mov
or
jle
test
mov
out
les
sti
ja
xchg
or
xchg
cmp
inc
cli
cdq
in
pop
push
mov
pop
lea
(bad)
push
outs
cld
or
scas
mov
addr16
out
mul
shl
rcl
dec
mov
mov
dec
daa
outs
jae
xlat
xchg
xchg
arpl
adc
cld
xchg
ss
retf
jb
call
aas
adc
je
xchg
xchg
mov
or
ins
test
ret
test
xor
mov
mov
push
and
mov
inc
sub
rol
ins
jge
retf
outs
push
(bad)
dec
out
repz
sahf
push
add
pop
pop
imul
shr
and
nop
pushf
cli
xor
push
aas
or
jnp
or
xchg
pop
xchg
mov
mov
fidiv
leave
pop
cmp
(bad)
sti
or
cmc
push
lea
jp
and
pop
sbb
lahf
pop
pop
cmp
inc
rcl
push
mov
push
test
aaa
cwde
popf
and
xor
or
jns
lods
mov
pop
cdq
into
sbb
bound
mov
clc
and
dec
hlt
lods
xor
mov
sub
ret
xor
inc
mov
push
mov
pop
jg
jmp
int3
mov
outs
jp
stos
cmps
add
cmp
int3
aad
fmul
inc
mov
pop
(bad)
scas
mov
mul
test
icebp
nop
xor
sub
aad
pop
mov
out
out
mov
(bad)
jg
in
stc
push
stc
mov
out
pop
sbb
popf
mov
xor
addr16
add
ror
sti
inc
push
shl
and
adc
mov
js
mov
fwait
inc
addr16
push
pop
pop
imul
stos
mov
das
clc
int
adc
and
pop
(bad)
mov
and
and
inc
xchg
inc
int3
int
cmps
xchg
jle
mov
scas
and
fistp
inc
cmp
inc
xchg
or
jnp
inc
out
nop
call
push
shl
mov
test
pusha
or
aam
inc
xor
mov
dec
sbb
jmp
stos
lods
enter
mov
mov
push
jmp
cmp
sub
xchg
test
retfw
inc
and
sub
cmps
inc
inc
jno
out
cwde
iret
dec
cmps
and
sbb
enter
clc
cmp
das
outs
jb
and
test
xchg
jl
ss
or
fwait
add
jne
jp
stos
loop
or
je
mov
mov
std
fisttp
adc
popa
pop
fidivr
aaa
les
sub
in
imul
dec
xor
sahf
jg
pop
(bad)
leave
sub
jo
retf
mov
ret
mov
jno
xor
rol
sbb
bound
repz
pop
and
pop
pop
inc
xor
adc
leave
dec
pop
and
mov
repnz
pop
imul
popa
mov
adc
jno
iret
sahf
pushf
jae
loope
inc
test
jno
mov
retf
mov
jle
dec
cli
add
mov
in
xor
scas
shr
push
rcr
in
lea
sub
scas
cmp
inc
adc
cmp
aam
in
jns
or
pop
aad
ret
xor
sbb
in
test
or
shl
cmp
add
add
mov
pop
mov
loop
repnz
ret
addr16
pop
gs
inc
or
or
add
mov
push
dec
inc
enter
inc
call
in
lods
leave
ret
int3
fwait
mov
cmp
or
adc
push
mov
call
jp
xor
lahf
sbb
mov
cld
xor
call
pop
or
adc
in
sbb
movs
test
sti
ss
jae
(bad)
sbb
and
aam
mov
popf
xor
inc
les
push
je
jbe
scas
add
lock
xor
jns
dec
push
test
pop
pop
mov
fcomp
inc
popf
std
xchg
pop
out
inc
es
push
out
clc
xlat
lds
fmul
ror
cmp
imul
cdq
movs
jb
adc
sbb
test
and
arpl
push
shl
dec
jne
jmp
xchg
add
jo
dec
int3
scas
or
and
fucomip
or
add
sub
gs
mov
inc
jae
ins
in
aaa
ftst
mov
or
or
fnstsw
mov
jbe
ins
fucomip
xchg
mov
lods
(bad)
sub
into
pop
imul
pop
sbb
sub
xor
cmp
es
imul
push
ret
fldenv
das
outs
xor
movs
mov
int3
popa
js
aam
adc
add
cmps
sbb
inc
jg
or
pop
pop
repnz
xchg
inc
pop
in
sbb
mov
gs
repnz
arpl
mov
fcomp
int3
imul
enter
rcr
cmps
xchg
(bad)
movs
lahf
jne
mov
cld
repz
inc
cmp
mov
scas
out
jo
ins
pop
pop
xor
push
outs
call
jae
pop
push
cmc
sub
and
inc
push
lahf
stos
or
pop
xlat
sub
aas
int3
aam
repz
jae
(bad)
outs
mov
shl
xor
rcl
leave
lahf
mov
test
test
sbb
adc
xchg
xor
xor
push
xor
inc
adc
out
fst
sub
in
cmps
mov
les
fild
and
out
mov
daa
inc
ins
push
xor
fbld
lock
outs
mov
xor
or
lods
ds
mov
sub
repnz
sbb
dec
fimul
stos
pushf
sar
and
jge
jl
mov
dec
bswap
das
ss
xor
fistp
jnp
rcr
stos
jns
mov
popa
mov
mov
test
xor
pop
mov
pop
cmp
jmp
inc
jecxz
in
mov
mov
(bad)
ds
sbb
(bad)
and
mov
stc
jmp
sbb
cmp
xchg
ins
jle
ror
fimul
js
inc
sbb
mov
pushf
data16
mov
xchg
fldcw
inc
pusha
mul
sub
sub
lea
mov
sub
bound
cmp
lods
arpl
push
xor
or
cli
inc
mov
mov
fidiv
adc
xor
adc
dec
adc
mov
dec
lods
push
lock
and
pop
fmul
daa
int3
aaa
mov
push
sub
cmps
js
and
aad
int3
xchg
pusha
add
rcl
dec
add
jle
call
cdq
stos
adc
std
inc
pop
les
fwait
sub
jne
or
or
adc
mov
mov
inc
test
mov
idiv
out
dec
and
pop
xor
push
int
enter
xor
mov
push
jmp
mov
fsub
nop
xchg
pop
xchg
ror
js
cld
imul
xchg
mov
mov
imul
fcomp
pop
cld
xor
daa
sub
shl
sbb
cmc
push
in
add
repz
mov
push
retf
dec
add
or
jmp
sub
and
bswap
jno
push
aas
lods
loop
cmps
mov
lods
dec
dec
push
pop
(bad)
into
and
ds
cmps
dec
push
inc
dec
mov
mov
gs
test
push
or
in
and
outs
out
or
ja
mov
(bad)
in
mov
ret
inc
push
jbe
mov
std
inc
and
cmp
cmp
mov
mov
xor
sub
sahf
sar
dec
test
dec
(bad)
ins
loope
cmps
inc
xchg
push
stos
mov
xor
into
push
retf
mov
xchg
cmp
xchg
inc
push
xor
stos
sbb
jle
inc
mov
int
fsubr
mov
loope
in
cmp
push
mov
adc
mov
mov
sub
(bad)
fs
sub
ss
fld
dec
out
stos
aam
jle
xor
sahf
test
popa
lahf
shl
xchg
cmp
sub
in
mov
imul
jg
mov
inc
pushf
inc
cld
xor
and
stc
stos
cmps
jns
loopne
stos
shl
retf
fdiv
add
mov
pop
rol
daa
xor
and
mov
mul
sub
and
or
xchg
mov
mov
pop
popf
and
mov
js
push
mov
nop
dec
mov
push
cwde
mov
in
fidiv
out
shl
mov
out
(bad)
mov
fdivr
(bad)
int3
cs
add
jae
xor
mov
push
iret
sar
shl
sub
jno
into
xchg
push
fstp
(bad)
xchg
jb
xchg
idiv
es
sahf
add
mov
xor
stos
ds
fucomp
sbb
retf
arpl
sbb
push
in
outs
xor
and
sbb
or
mov
and
adc
mov
pop
aam
je
rol
out
adc
out
inc
xchg
aas
popf
sub
adc
rol
dec
out
cmc
or
movs
outs
sub
shr
inc
fisttp
mov
aad
popa
or
scas
inc
inc
mov
inc
std
in
mov
or
jnp
pop
and
push
pop
out
jb
je
mov
inc
xor
(bad)
add
sbb
mov
adc
call
inc
push
inc
adc
xor
add
and
push
pop
sub
(bad)
shl
inc
enter
arpl
and
push
and
outs
jns
call
ficom
leave
movs
out
dec
and
mov
or
adc
mov
inc
fs
daa
aaa
aas
je
fdiv
test
cmps
add
pop
(bad)
rcl
adc
jne
sub
mov
push
aaa
lods
cld
adc
dec
fmul
and
call
stos
add
mov
stos
mov
push
lea
(bad)
and
jmp
mov
fstp
pop
lds
push
in
mov
jle
adc
jb
sti
pop
ins
or
mov
pushf
in
mov
jg
jo
inc
in
dec
pop
mov
ror
div
mov
(bad)
shl
sar
sahf
aaa
and
fimul
mov
lock
retf
and
test
ds
int3
out
mov
or
inc
enter
sub
enter
fwait
dec
jp
call
mov
arpl
(bad)
lods
les
mov
push
and
movs
dec
pusha
sub
test
sbb
push
jbe
ror
dec
push
shr
sar
call
ds
xchg
(bad)
xchg
cmp
push
jle
pop
test
adc
pusha
stc
fmul
jns
rcl
pusha
mov
(bad)
js
test
out
lds
push
add
pop
stos
xchg
mul
mov
stc
sbb
stos
out
jge
and
jbe
imul
jl
cld
jle
sub
cmps
sub
pop
or
fnstcw
dec
pop
mov
mov
loopne
add
pop
adc
jmp
xchg
sub
pop
push
pop
dec
or
mov
vmwrite
enter
dec
dec
int3
mov
not
data16
mov
ins
je
clc
dec
and
mov
or
push
push
mov
pop
pusha
adc
inc
mov
(bad)
lds
repz
jns
jg
pop
retf
cmp
xor
sar
lds
and
arpl
sbb
add
jle
shr
inc
jno
scas
jmp
ins
test
sub
push
fst
mov
es
xchg
fisub
je
mov
and
jecxz
pusha
test
lea
mov
test
imul
mov
mov
mov
jmp
cmps
xchg
popa
loope
add
ret
scas
mov
dec
ja
test
dec
cmp
and
(bad)
jp
repnz
sub
inc
push
and
(bad)
repnz
outs
loope
inc
stos
xor
add
xchg
mov
push
out
or
enter
sub
imul
dec
and
jno
outs
enter
pop
mov
adc
movs
mov
les
std
pop
repz
inc
repnz
call
int3
mov
and
inc
pop
dec
dec
mov
pop
aad
jns
mov
call
fild
xor
mov
cwde
adc
aad
and
bnd
cmp
xchg
mov
sub
(bad)
jg
leave
or
outs
or
xor
push
or
in
inc
movs
aam
mov
bound
test
ret
push
sbb
icebp
outs
push
mov
pop
stos
jne
mov
sub
out
inc
cwde
pop
lds
(bad)
iret
sar
jmp
or
adc
adc
pop
hlt
pop
in
test
jl
fidivr
ret
cmps
xchg
add
mov
mov
repz
xlat
bound
int
in
cmp
aad
xchg
sbb
dec
int
xor
mov
adc
dec
shl
enter
call
pop
in
in
test
arpl
mov
inc
mov
xor
lds
xlat
aam
jmp
mov
stos
iret
dec
sub
daa
mov
aam
fadd
adc
test
fcom
cdq
sbb
cmps
pop
and
xlat
xor
ret
mov
dec
xchg
jl
dec
pop
sub
cmc
xchg
fs
mov
ret
loope
inc
mov
push
add
add
jbe
stc
cli
xor
retf
or
or
into
push
rcr
push
mov
sub
sub
cmp
sbb
arpl
pop
xchg
ins
jp
nop
(bad)
pcmpeqw
jns
add
push
popf
add
and
add
xor
sbb
cmp
adc
fadd
mov
ret
sub
jl
cmps
jp
mov
adc
jo
vphaddwq
cmps
xchg
mov
push
and
dec
adc
pushf
fadd
lahf
gs
(bad)
sbb
sbb
ja
sbb
add
sbb
(bad)
je
test
call
ficomp
scas
sti
dec
dec
fs
sub
mov
jmp
pop
stos
lock
mov
ja
std
add
mov
cwde
xchg
push
jno
push
paddq
fisttp
jmp
test
fbstp
mov
jecxz
int3
jp
push
sar
in
clc
in
sbb
int3
outs
popa
dec
inc
aad
test
fmul
fistp
mov
xchg
jp
loope
and
sbb
xchg
inc
dec
js
pop
cmp
jne
mov
push
pop
add
sbb
mov
stos
jb
lahf
inc
idiv
loope
mov
mov
outs
fstp
test
xchg
push
add
not
cmc
out
test
pop
ins
mov
cmp
pop
add
mov
je
pop
pop
fimul
inc
das
push
mov
jg
(bad)
mov
or
dec
stc
cmp
pop
data16
xor
arpl
test
inc
xor
pop
rcr
rcl
mov
xlat
loope
les
aaa
(bad)
ror
add
xchg
(bad)
(bad)
and
jmp
mov
mov
add
out
ror
jmp
add
fadd
mov
jmp
push
sti
mov
jp
xchg
jmp
(bad)
mov
jae
aas
mov
sub
xor
inc
sbb
dec
push
inc
xor
test
mov
inc
cld
cmp
std
pop
into
push
jne
cmp
hlt
pop
add
sbb
sbb
fdiv
adc
sbb
sbb
inc
mov
jno
ret
daa
mov
movs
ins
jbe
aam
mov
jne
and
ds
repz
in
jo
test
xor
in
test
cmp
ins
mov
rcr
sub
ret
dec
loope
jmp
push
nop
adc
call
das
pop
clc
fnstcw
push
popf
jmp
mov
xchg
mov
mov
push
or
or
adc
es
add
rcl
mov
jae
idiv
mov
(bad)
das
loop
(bad)
mov
pop
sahf
retf
xchg
sahf
sub
sti
test
sub
(bad)
mov
fstp
pop
xlat
mov
cmps
daa
or
xchg
dec
imul
and
cmps
mov
push
pushf
das
lds
lahf
push
jb
int3
repz
inc
inc
pop
outs
inc
jmp
and
mov
lock
sbb
xchg
(bad)
push
or
cmp
xor
push
mov
imul
scas
das
ret
and
(bad)
in
dec
div
cs
idiv
jne
mov
int3
add
ret
mov
cmp
hlt
retf
adc
gs
shl
sub
mov
adc
inc
jno
sub
xor
inc
fwait
add
mov
push
inc
gs
ins
icebp
sub
shl
mov
ss
call
push
sub
cdq
add
pop
loopne
dec
or
cli
xchg
xchg
(bad)
mov
mov
je
retf
ret
out
aam
inc
pmuludq
cdq
dec
mov
cmp
inc
not
mov
push
sbb
and
data16
or
push
push
push
add
test
(bad)
xor
mov
aaa
push
fild
cmp
call
jp
jb
push
jnp
xchg
inc
mov
sub
xchg
test
idiv
sub
dec
xbegin
push
jmp
mov
cmp
add
jg
je
data16
mov
mov
or
xchg
inc
int3
xor
or
test
cs
loopne
xor
cmp
jno
or
test
das
test
popw
xchg
std
mov
add
push
mov
dec
int
adc
xchg
or
mov
mov
nop
jbe
xor
jp
aaa
cmps
aam
push
dec
and
call
jbe
sub
xchg
push
jmp
adc
mov
inc
jle
add
adc
mov
jle
push
cmp
mov
outs
sbb
mov
adc
pusha
push
mov
cdq
test
outs
movs
xchg
cmp
ret
mov
pop
mov
inc
(bad)
push
sub
sbb
jb
(bad)
pop
adc
cmp
call
jmp
cmps
in
pushw
sub
add
ins
mov
pushf
in
sti
call
mov
lods
jl
xor
mov
mov
ins
sar
sar
scas
(bad)
push
xor
iret
cmps
retf
push
add
rcl
add
jecxz
xchg
cmc
je
je
or
adc
shl
mov
(bad)
(bad)
aam
int
fild
out
push
dec
sahf
mov
(bad)
jmp
jne
inc
js
and
pusha
shr
cwde
push
mov
sub
imul
lods
xchg
inc
cmp
push
sbb
cmps
mov
mov
ror
pop
fucom
js
fbstp
test
xchg
popa
retf
jnp
(bad)
(bad)
mov
dec
and
pop
aam
mov
cmp
inc
cdq
loopne
inc
sahf
fild
mov
arpl
pushf
jp
push
scas
sbb
sub
(bad)
out
jb
outs
dec
mov
push
daa
cmps
add
sub
call
retf
outs
or
sbb
or
pusha
jmp
xchg
idiv
inc
jl
out
clc
push
xchg
fwait
sar
pop
xor
mov
stos
mov
out
sub
mov
imul
fs
or
jns
sub
(bad)
mov
push
lods
div
mov
cmp
pop
mov
jmp
test
enter
test
clc
pop
mov
sbb
and
jmp
loop
scas
jbe
mov
lods
sbb
adc
je
ret
fs
sbb
das
mov
loop
mov
jne
ficom
mov
sahf
push
dec
add
push
xor
sbb
mov
mov
daa
pop
outs
cld
push
jmp
cmp
movs
int
dec
jne
mov
push
add
mov
add
int
add
movs
(bad)
arpl
ret
adc
dec
in
push
mov
mov
addr16
gs
dec
dec
mov
pop
cmp
test
dec
adc
or
repnz
xor
mov
ins
lahf
inc
cmp
adc
nop
pop
das
fcmovu
sub
mov
bound
scas
pop
xor
sar
cmp
test
xor
inc
dec
dec
out
into
push
fbld
cmc
arpl
test
or
xchg
cmc
and
movs
cmp
cmp
dec
xchg
lock
inc
jle
xchg
cwde
cmp
xchg
push
pop
stc
xor
xlat
mov
xchg
push
mov
fbld
jg
outs
inc
mov
jmp
sbb
cmp
push
pop
push
mov
sub
call
aam
or
xchg
xor
dec
enter
dec
clc
(bad)
pop
outs
sbb
call
rcr
mov
cwde
ret
fisttp
xchg
jge
nop
jb
aas
cwde
push
ins
(bad)
sar
movs
data16
and
aad
dec
leave
aam
cmp
mov
data16
jne
(bad)
mov
mov
pop
mov
pop
push
out
out
nop
icebp
sbb
sbb
xchg
sbb
out
lods
adc
aaa
mov
call
out
xchg
dec
jb
popf
adc
and
mov
and
mov
sbb
xchg
mov
aam
pop
rol
ds
int
pop
dec
popf
mov
mov
call
retf
sti
jns
lahf
shl
lods
adc
pusha
in
lahf
scas
push
sbb
mov
push
mul
cdq
xchg
out
or
pop
inc
ins
mov
call
mov
neg
fcom
ds
and
cwde
xchg
jnp
and
rcr
cli
mov
leave
adc
retf
jl
inc
xchg
jge
mov
pop
sbb
in
or
sub
bound
mov
outs
sub
cmp
idiv
mov
int3
sub
xlat
pop
jle
push
addr16
test
fwait
daa
xor
dec
jo
xor
icebp
inc
fbstp
push
fldlg2
repnz
les
xchg
cmp
out
xor
mov
sbb
out
mov
gs
sbb
pushf
int
loop
sbb
out
cwde
mov
mov
pop
push
xlat
xlat
mov
add
out
stos
shr
mov
lods
(bad)
push
retf
adc
mov
aas
int
mov
xchg
dec
(bad)
push
retf
push
data16
pop
mov
(bad)
mov
mov
push
(bad)
push
mov
and
aad
xor
das
fs
push
call
out
ret
inc
dec
sub
add
icebp
push
pop
push
or
sbb
popf
mov
aas
in
lods
push
int3
sbb
inc
mov
mov
and
dec
cdq
jl
test
mov
push
inc
movs
ins
call
lods
loop
fnstcw
add
test
mov
mov
lahf
icebp
pop
xor
or
fwait
cmp
js
xchg
out
(bad)
js
sbb
test
mov
lds
sbb
inc
xchg
mov
jmp
jae
aad
push
repz
xchg
loopne
dec
mov
movs
(bad)
sar
fsubr
imul
mov
mov
stos
or
xlat
setge
data16
and
or
enter
cmp
pushf
lock
dec
xchg
pop
cmp
scas
inc
mov
xchg
aas
mov
arpl
or
(bad)
sbb
jbe
or
(bad)
rcl
sub
js
pop
xchg
jns
lods
fistp
fiadd
repz
jo
jge
sbb
test
xchg
xchg
jnp
cmp
jmp
(bad)
out
(bad)
aad
mov
push
adc
test
hlt
cs
xchg
lods
hlt
or
cli
fidivr
adc
pop
mul
imul
xchg
outs
jge
(bad)
and
cmc
fs
xchg
cwde
enter
sbb
jle
adc
push
push
xor
jmpw
xchg
sbb
into
loop
stos
cdq
not
mov
adc
cmps
das
mov
fnstenv
cmp
loope
shr
xchg
mov
push
js
cmc
add
popf
frstor
cs
add
cmovns
mov
add
lods
test
inc
xchg
and
pop
sub
lods
mov
cmp
xlat
cdq
jbe
and
xchg
inc
dec
jg
lahf
xor
pop
cdq
dec
cmps
rsm
cmp
push
sbb
sbb
icebp
idiv
ins
das
cmp
(bad)
in
stos
out
jl
sar
icebp
sub
shl
xor
je
xchg
es
sbb
mov
in
mov
sub
cmp
repz
aas
retf
jnp
and
bnd
cmp
inc
sbb
inc
jb
pop
shl
test
outs
inc
test
std
cld
aaa
sbb
movs
cmp
ffreep
push
push
aad
sbb
push
pop
mov
push
mov
or
sub
add
or
sbb
xchg
pop
sub
enter
leave
xchg
std
pusha
cmp
dec
jns
imul
mov
jbe
mov
sub
push
cmp
ins
dec
pop
push
mov
fptan
fbstp
ja
lods
stos
xor
cdq
je
mov
cmp
dec
(bad)
stos
daa
jnp
es
sti
and
clc
imul
inc
jo
in
and
inc
adc
stos
cmp
xchg
and
ret
out
(bad)
in
inc
mov
in
fadd
adc
and
pop
push
adc
xchg
arpl
xchg
fmul
push
cmp
adc
cmp
sar
or
dec
out
mov
cli
inc
dec
cdq
cld
pop
std
sbb
xlat
cmp
xchg
inc
icebp
(bad)
pop
fwait
loopne
mov
mov
xor
push
add
leave
dec
cs
fild
pop
sahf
hlt
int3
fstp
mov
mov
pop
pop
inc
aad
pop
mov
fstp
in
lods
sti
mov
dec
cmp
xchg
xchg
xchg
ins
xor
pmulhw
push
dec
xor
arpl
cmps
out
cmp
add
or
es
fdiv
jmp
rcr
mov
scas
outs
popa
ret
retf
leave
mov
lods
ja
push
mov
mov
aad
mov
push
shl
mov
gs
mul
cmc
rol
push
cmps
dec
call
cmp
or
jae
mov
inc
push
shl
mov
push
out
mov
inc
outs
and
xchg
int
mov
scas
and
cmps
inc
xor
mov
xchg
fs
out
sub
lods
add
push
sbb
leave
aaa
mov
iret
mov
xchg
pop
mov
push
ret
fisub
enter
imul
mov
gs
out
cld
popf
fsub
into
sbb
mov
and
stos
sbb
inc
add
lahf
xor
push
gs
adc
in
int3
mov
stos
js
mov
out
pop
lahf
push
push
and
popa
push
fs
xchg
ret
scas
push
test
cld
lods
push
and
jge
test
or
int3
cmp
mov
jnp
scas
pop
sbb
cmp
push
sbb
je
js
mov
sub
cmp
xchg
pop
sti
out
mov
enter
cli
sti
cmp
sbb
jo
stc
sub
bnd
xchg
add
cmp
lods
xor
outs
fcom
xor
test
jno
inc
pop
sbb
mov
xchg
or
pusha
xor
push
mov
adc
mov
and
out
jg
rol
(bad)
mov
push
aas
imul
shl
mov
sbb
sbb
pop
stc
push
xor
std
scas
add
or
jns
dec
xor
arpl
mov
lds
jbe
ins
lods
or
mov
cs
and
mov
clc
cwde
(bad)
mov
repz
and
ds
or
fisttp
add
fcmovnb
aad
sub
call
sub
mov
mov
sbb
scas
xor
pop
mov
xor
cs
pushf
scas
fdiv
push
dec
jne
ins
push
out
lea
xchg
add
popa
jmp
not
dec
icebp
(bad)
xor
jg
xor
loop
int3
jbe
sub
repnz
out
jo
pushf
aaa
jns
mov
dec
sbb
xchg
out
mov
adc
jp
or
or
mov
aas
call
push
jo
iret
push
out
push
cmp
sahf
stc
popf
mov
xor
add
xchg
neg
call
lods
xchg
(bad)
stc
ret
cmp
call
add
or
add
xchg
sub
ins
enter
sbb
in
adc
aad
inc
stos
jno
jmp
sub
xor
enter
push
xor
imul
cmp
int3
mov
aas
jae
call
inc
(bad)
aad
dec
mov
lds
aas
push
dec
retf
xor
or
in
jnp
or
fist
ja
loopne
ins
leave
stos
sbb
mov
adc
out
ror
cwde
lahf
test
cmp
ret
out
leave
loop
inc
das
sti
in
jns
imul
add
mov
ror
jp
idiv
in
push
hlt
jns
mov
jecxz
shr
jbe
mov
in
out
jmp
rcr
pusha
adc
mov
imul
fwait
xlat
xor
mov
fmulp
out
adc
xor
and
xlat
lds
(bad)
xor
adc
inc
jecxz
scas
jae
mov
out
das
xchg
(bad)
fisub
xchg
push
and
add
cmp
jg
loop
jg
fistp
pop
(bad)
int
loop
popa
xchg
pop
mov
mov
ret
xor
add
jecxz
ins
and
jmp
(bad)
jb
xor
pusha
xchg
repz
mov
outs
fyl2xp1
and
je
adc
push
mov
mov
scas
jb
mov
mov
sahf
(bad)
push
pop
popf
loope
test
xchg
mov
inc
or
xor
adc
(bad)
retf
sub
add
outs
inc
sub
sbb
stos
loopne
lea
dec
mov
mov
sbb
and
xchg
inc
jmp
cmp
adc
sar
clc
xchg
loopne
mov
jle
call
jl
mov
repnz
daa
inc
bound
push
jmp
xor
cli
lods
fstp
push
pop
shl
xchg
xchg
outs
sbb
cmp
mov
dec
dec
sbb
jne
mov
fmulp
test
jecxz
adc
add
sub
xchg
push
or
push
pop
out
out
addr16
out
das
repnz
daa
cmp
cld
fwait
in
pop
or
mov
pop
fwait
scas
loop
sub
lods
int
pop
fadd
mov
sbb
pop
loop
adc
scas
(bad)
sbb
popf
lods
mov
out
fs
cmp
cld
mov
test
pop
sbb
inc
retf
or
and
cmp
adc
pop
xor
mov
sbb
les
xchg
loope
xchg
cmp
in
sbb
in
cmp
cld
dec
je
ficomp
test
push
xor
rol
ficomp
sub
jle
xchg
sbb
mov
je
mov
or
ds
(bad)
cli
sar
out
test
sbb
xor
xchg
cli
shl
sub
mov
test
jnp
mov
cmp
jecxz
xor
add
sub
mov
fstp
push
addr16
push
push
sti
pop
aas
aaa
sub
xlat
jae
clc
shl
pop
sub
adc
popf
ficom
scas
aaa
sahf
mov
daa
das
mov
xchg
adc
mov
fdiv
dec
sub
jmp
in
mov
mov
push
cmp
pop
jno
pop
xor
in
repz
cmp
test
pop
and
mov
mov
fs
rcl
push
adc
fadd
adc
in
xchg
add
dec
pop
push
cmp
mov
mov
xor
sub
fmul
xchg
xor
lds
adc
xchg
push
jmp
movs
and
sub
call
dec
pop
ss
pop
cmp
pop
push
aaa
scas
pop
js
xor
cwde
popa
cdq
dec
neg
and
pusha
mov
mov
xor
push
mov
add
fs
jl
je
mov
or
out
loop
mov
movs
xor
or
popa
pusha
xor
jle
xor
fisubr
pop
mov
inc
les
xchg
ret
dec
push
mov
or
lods
aas
out
xchg
in
(bad)
jmp
adc
mov
neg
sub
cmp
movs
cmp
push
push
push
int
push
push
(bad)
adc
mov
lods
ins
xor
dec
mov
cmp
mov
inc
push
fmul
jns
jb
(bad)
xchg
(bad)
lods
rcl
cmps
push
std
shr
mov
mov
js
jl
pop
xor
pop
mov
leave
imul
mov
adc
shl
mov
fsub
mov
aad
cdq
add
stos
push
pop
inc
push
shr
fisttp
inc
mov
aaa
ins
mov
adc
jg
xchg
xchg
aaa
push
jmp
xlat
fadd
icebp
xchg
adc
mov
mov
inc
mov
sub
pop
std
xchg
dec
daa
cmp
test
out
add
mov
pop
jp
jmp
mov
add
xor
adc
into
xlat
out
dec
sbb
mov
in
in
call
or
xchg
scas
test
jmp
or
mov
movs
(bad)
mov
les
push
fimul
sahf
js
add
cs
aad
fisttp
mov
sbb
dec
mov
loop
pop
add
mov
xchg
inc
sub
or
(bad)
or
adc
cmps
mov
push
rcl
pusha
call
inc
aad
and
mov
push
imul
pop
test
(bad)
and
sub
lods
push
xchg
mov
ja
adc
mov
(bad)
shl
retf
ins
enter
(bad)
xchg
imul
mov
lock
(bad)
loopne
xor
iret
mov
lds
add
jnp
inc
es
push
pop
fild
stos
cli
sub
dec
sbb
inc
sub
dec
mov
out
ins
pop
into
cld
out
dec
aaa
adc
leave
out
xchg
mov
mov
aam
test
mov
popa
adc
or
das
pop
inc
daa
and
push
or
fidiv
mov
xchg
test
es
sbb
(bad)
es
inc
lods
das
cmc
repz
or
cmp
xchg
lahf
jp
mov
jp
repz
movs
mov
fldcw
js
or
dec
add
lods
mov
mov
(bad)
sbb
popf
push
fidivr
leave
mov
sbb
retf
cmp
clc
sahf
stos
loopne
jae
aaa
pop
mov
call
push
scas
mov
mov
mov
xchg
fbld
aaa
push
ins
rcl
nop
(bad)
(bad)
xor
push
ins
sbb
das
cwde
std
outs
add
(bad)
sub
add
imul
inc
add
cs
push
cli
pop
and
jecxz
dec
test
sbb
dec
mov
jmp
inc
xor
jge
mov
push
addr16
fsin
cmp
mov
out
mov
lods
push
in
cmps
pop
mov
cmp
aas
ret
cdq
cmp
into
push
xchg
sbb
cmp
test
fcmovu
bound
daa
(bad)
sub
sub
pushf
xchg
adc
dec
push
in
or
mov
leave
push
jl
cdq
sti
inc
cs
cld
retf
inc
sub
fwait
mov
(bad)
fs
loopne
and
jmp
std
repz
outs
ss
enter
mov
dec
scas
int
jne
sub
dec
aaa
cli
mov
lds
cs
jl
cwde
std
leave
or
test
lds
test
imul
push
fnstcw
test
out
mov
call
mov
jg
aam
dec
cli
and
call
pop
aad
push
out
inc
pop
cmps
mov
jp
scas
out
in
and
inc
mov
adc
push
pop
cmp
mov
clc
dec
dec
shl
imul
icebp
mov
add
in
sub
cwde
pop
sub
sub
sbb
aad
lea
loopne
gs
scas
repz
lock
inc
pushf
and
jns
adc
lea
jg
xor
addr16
test
mov
outs
(bad)
cmp
addr16
js
repnz
mov
test
mov
and
jo
lock
test
pusha
loope
std
aaa
mov
in
pop
cmp
pop
jbe
stos
dec
mov
xor
es
xor
mov
sub
ins
xchg
xchg
cmp
jle
and
mov
mov
jmp
lods
inc
loopne
pop
adc
xor
jbe
fucomi
push
mov
adc
jl
and
dec
inc
rcr
imul
dec
or
cmp
and
mov
(bad)
out
sti
ja
cli
stc
add
mov
cli
in
jp
ins
and
repnz
adc
adc
cwde
inc
add
sub
stos
pop
push
xor
cmps
xor
push
in
cld
mov
jbe
div
push
call
loop
push
pop
and
repz
inc
push
in
push
movs
push
cmp
dec
xchg
(bad)
cmp
ins
mov
nop
jne
sub
jecxz
jle
pop
jns
push
aas
pop
imul
loopne
hlt
int3
(bad)
xor
pop
dec
loopne
outs
hlt
push
mov
mov
cmp
sbb
inc
out
xlat
xchg
mov
fmul
sbb
inc
imul
ret
ror
imul
movs
arpl
pop
inc
sbb
xor
sti
lahf
cmps
dec
mov
gs
test
loope
push
outs
xchg
data16
add
sbb
pusha
(bad)
sbb
jge
mov
jae
or
dec
mov
xchg
push
add
mov
mov
int
retf
cdq
int
(bad)
xchg
and
fiadd
push
ds
lahf
jmp
aaa
es
push
jo
rol
xlat
push
dec
pop
sbb
sbb
das
mov
sub
push
leave
mov
js
sub
loop
sbb
dec
push
pop
xor
jne
push
or
ror
stc
out
jge
xor
bnd
ret
adc
or
jmp
mov
es
sar
pop
mov
sti
cmp
leave
mov
xor
sbb
fiadd
mov
adc
int3
mov
push
pop
hlt
je
jle
(bad)
and
test
icebp
inc
sar
jl
sti
scas
dec
add
xchg
retf
jmp
out
push
jp
cmp
push
and
or
pop
dec
out
cwde
mov
stos
scas
push
out
out
jle
out
cmp
jecxz
pop
jmp
xchg
es
add
out
out
aad
int
inc
pop
outs
fs
and
enter
fs
aaa
adc
inc
pop
sbb
sti
cli
cwde
mov
dec
mov
mov
xlat
mov
imul
mov
pop
xor
pop
mov
shr
movs
pop
jmp
icebp
icebp
dec
and
sti
and
pop
fst
xor
(bad)
add
add
shl
cwde
xor
or
pop
push
pop
lds
mov
(bad)
and
adc
rol
ret
inc
inc
mov
es
and
adc
icebp
dec
cmp
ins
test
(bad)
push
scas
pop
iretw
cmp
jle
and
js
sbb
push
out
mov
or
lock
outs
pop
not
dec
test
and
inc
add
(bad)
shr
xchg
aaa
sub
jbe
sahf
fbld
jecxz
out
mov
jl
aaa
xchg
push
pusha
sbb
lds
clc
cmp
dec
into
mov
mov
inc
aad
call
add
gs
mov
or
xlat
(bad)
pusha
shr
cmp
imul
mov
imul
into
sbb
leave
or
mov
ror
push
cli
pop
popf
dec
sbb
cmp
xor
sbb
out
push
cmps
lock
aam
or
shl
xchg
cmp
in
jmp
sbb
js
pop
lds
mov
jns
movs
ret
sbb
stos
xor
inc
push
das
mov
fadd
xchg
mov
les
dec
dec
add
nop
sbb
mov
(bad)
mul
icebp
(bad)
lods
pop
test
adc
sbb
sbb
test
sub
test
push
or
push
lock
push
iret
cwde
loope
gs
imul
pop
jg
cmp
ror
div
dec
xor
scas
cmp
dec
aad
push
inc
and
xor
test
in
enter
push
in
cs
int3
(bad)
mov
fcom
iret
sbb
mov
xlat
mov
xor
sbb
jb
adc
lahf
jg
sub
enter
push
aas
imul
cmps
or
out
outs
push
xchg
cmp
mov
test
jl
mov
cmp
xchg
pop
cwde
push
cmc
jmp
sub
mov
push
ins
adc
(bad)
fidiv
and
out
cmp
retf
pop
mov
or
jne
test
cwde
or
(bad)
das
into
test
and
cmp
sbb
cmc
cmps
mov
pop
test
inc
in
xchg
add
sahf
and
pop
adc
fsubr
int
jle
daa
addr16
scas
push
mov
rcl
aad
fs
cwde
push
mov
fs
ins
int
std
icebp
mov
pop
aam
lods
popf
mov
add
shl
pop
or
lods
sub
dec
push
jmp
jb
mov
pusha
fbstp
fs
dec
adc
in
sub
cmp
shl
popf
adc
fsubr
mov
enter
retf
push
fild
rol
mov
jmp
inc
sti
adc
inc
scas
jmp
mov
add
or
hlt
test
jmp
fsub
or
shl
idiv
fnstenv
pop
gs
stc
cdq
dec
movs
loop
ficomp
adc
xchg
cmp
ror
lods
mov
mov
or
aam
fsin
push
inc
sub
pop
(bad)
cmc
inc
mov
fadd
cmp
fsubr
fdivp
in
push
fdiv
fwait
shl
gs
push
rcl
mov
bound
cmp
push
nop
sbb
daa
inc
mov
inc
push
movs
outs
mov
and
mov
bound
icebp
(bad)
jl
jne
adc
and
fdivr
aad
mov
popa
push
push
jmp
not
push
add
jne
or
and
dec
adc
cmp
inc
sbb
fs
(bad)
fidivr
fwait
shr
div
xor
add
iret
jp
hlt
jg
xchg
popf
mov
add
dec
lds
sbb
jmp
sahf
push
and
loop
dec
out
movs
stos
jo
inc
push
xor
je
dec
mov
push
cli
test
or
xchg
jb
lahf
(bad)
ds
cmp
shr
or
enter
and
setne
movs
scas
daa
call
aad
fsubr
jecxz
imul
and
mov
inc
call
adc
je
xchg
icebp
mov
sub
mov
fisttp
jmp
push
pextrw
movs
jns
push
out
add
in
repnz
bound
adc
mov
xor
mov
dec
retf
dec
mov
inc
cld
lods
cdq
xchg
scas
mov
lea
in
jp
xor
pop
pop
xor
(bad)
sahf
push
ret
jbe
pop
or
fldcw
and
cmp
or
or
and
adc
cmps
cdq
rcr
dec
mov
mov
cwde
sar
push
fst
dec
or
loop
arpl
jle
mov
xor
cdq
mov
clc
pushf
daa
mov
test
mov
shl
repz
and
or
inc
xchg
push
push
or
cmps
add
xor
dec
icebp
xchg
pop
call
pop
call
pop
stc
and
fldln2
xor
add
push
(bad)
pop
jmp
cwde
icebp
enter
sar
pop
in
div
xchg
cmp
push
cmps
and
(bad)
jmp
mov
push
jecxz
out
out
or
neg
stos
cmc
fwait
mov
inc
sbb
push
mov
mov
xchg
dec
pop
and
dec
rol
add
mov
dec
(bad)
or
cdq
jnp
push
js
mov
and
cmp
dec
pop
clc
mov
stos
and
xchg
mov
or
out
not
and
xchg
cwde
jbe
(bad)
mov
pop
mov
gs
clc
push
push
add
movs
pop
aad
cmp
push
out
fisttp
xor
sub
xchg
std
(bad)
in
mov
xchg
rcl
mov
or
jl
in
inc
cmc
add
and
push
cld
add
xchg
and
icebp
xor
mov
faddp
fcomp
es
and
jno
mov
pop
idiv
bound
pop
jno
out
xchg
mov
push
push
mov
ins
push
and
mov
or
ins
dec
inc
ss
sub
mov
cmp
scas
jbe
and
xchg
sahf
popf
inc
jae
popa
out
test
cmp
int3
mov
and
js
repnz
outs
das
and
jbe
mov
cmp
xchg
in
(bad)
gs
inc
cmp
shl
jno
mov
push
or
(bad)
jecxz
std
in
add
repz
enter
jg
or
push
ss
push
pop
stos
add
daa
shrd
xor
fisubr
and
add
jnp
xchg
test
sub
cmp
and
aam
mov
sub
int
imul
int3
xor
xchg
pop
push
ins
xchg
mov
push
inc
lock
in
cdq
aas
rcr
bound
fcomip
mov
lods
dec
sub
mov
inc
mov
jbe
ss
outs
jne
add
(bad)
push
lds
test
dec
lods
mov
jmp
adc
les
dec
out
pushf
stos
and
xor
fucom
in
ja
out
lds
cs
iret
mov
fld
lock
arpl
retf
or
mov
pushf
lock
sbb
pop
imul
stos
mov
test
cdq
add
cmp
retf
jp
adc
hlt
(bad)
ja
dec
out
rcl
lds
adc
dec
mov
fiadd
xor
(bad)
daa
nop
lods
pop
cmps
pop
adc
test
js
mov
movs
jmp
or
push
iret
(bad)
mov
mov
cli
and
add
rol
fcomp
or
je
jmp
push
ins
call
lds
(bad)
ret
pop
ret
pop
loopne
clc
cmps
sti
sub
pop
or
imul
or
xchg
iret
ss
cmps
push
cmp
inc
test
mov
cmp
popa
fadd
xchg
xchg
inc
mov
adc
push
std
movs
test
arpl
aas
sbb
pop
hlt
xor
mov
mov
and
dec
ficomp
sub
mov
mov
call
jecxz
jmp
inc
fs
mov
div
add
jmp
ret
ret
cmp
dec
rcr
push
xchg
cld
(bad)
sbb
and
cmp
popf
adc
jmp
aas
xchg
call
mov
call
loope
xor
fcos
in
mov
out
mov
pop
add
movs
in
add
pop
add
xchg
aaa
test
ins
pop
fcomi
mov
mov
outs
sub
and
mov
popa
shr
int
fs
cmp
inc
xchg
mov
(bad)
push
jno
movs
or
sahf
lock
sbb
(bad)
fidivr
cmp
aam
ror
cmps
fbstp
dec
(bad)
jmp
pop
dec
sub
jl
bnd
jecxz
sub
xchg
scas
cmp
popf
std
dec
push
cmp
cmc
jne
outs
adc
call
stos
add
loopne
loope
js
(bad)
dec
shl
jae
nop
pop
and
repz
lea
jecxz
adc
sub
retf
xchg
cmp
sar
and
push
retf
imul
(bad)
mov
push
cmp
push
cli
stos
lock
imul
push
test
stos
push
and
mov
fld
in
push
(bad)
call
mov
das
dec
or
sub
shl
in
out
(bad)
lock
jno
lahf
inc
push
mov
lahf
ficom
out
add
mov
outs
stos
js
rcl
or
adc
dec
dec
xchg
ret
imul
inc
xlat
add
mov
and
into
loopne
ins
xchg
add
xchg
jge
cmp
dec
cmp
icebp
sti
cmp
pop
mov
adc
add
push
mov
mov
pop
arpl
repnz
fucompp
fucom
loope
inc
into
mov
mov
push
rcl
popa
dec
xchg
sahf
movs
cmc
add
mov
sbb
cmp
jmp
xchg
mov
and
sbb
mov
mov
push
and
cmp
mov
mul
sbb
sbb
lea
mov
clc
or
data16
lahf
or
ffree
and
jp
das
les
fucom
inc
js
ins
call
pusha
mov
add
xor
fsubr
(bad)
arpl
iret
jbe
xchg
jl
in
adc
jmp
outs
ret
cmps
or
adc
mov
neg
jbe
ins
xor
je
aam
adc
add
lds
leave
test
scas
in
mov
push
push
dec
ret
xchg
bound
push
aam
mov
and
inc
pop
aam
xchg
das
pushf
stos
push
ficomp
int3
cmp
xor
and
add
das
jmp
fs
push
jns
xchg
xchg
rol
push
pop
pop
pop
call
scas
or
sahf
test
push
xor
repnz
mov
or
cmc
daa
push
jge
jl
aas
mov
inc
loop
adc
daa
jno
hlt
ja
daa
xor
movs
lea
dec
mov
sbb
mov
mov
mov
xchg
shl
dec
loopne
mov
lods
ins
lods
mov
xchg
cmp
(bad)
mov
js
pop
cmp
adc
imul
xchg
aam
mov
or
ins
ret
push
dec
or
pop
psubsw
shl
push
jbe
push
(bad)
and
adc
push
pop
or
std
pusha
xor
ss
sbb
fdivr
ffreep
jbe
adc
sbb
and
inc
ret
inc
cmp
cmp
mov
scas
cmps
jae
xchg
jo
add
mov
xor
hlt
icebp
cwde
sub
xor
ins
mov
fs
or
pop
push
into
scas
adc
aas
and
or
imul
sbb
mov
inc
xchg
mov
popf
neg
inc
inc
aad
and
mov
cmps
xor
repz
inc
mov
movs
add
ins
in
mov
ss
pop
dec
jmp
hlt
aam
mov
lods
fbstp
imul
(bad)
out
or
jne
loop
(bad)
jmp
test
sub
push
sub
lea
enter
jne
add
arpl
punpckhwd
pushf
lahf
ret
sub
jnp
cmp
aad
gs
sar
or
cmc
adc
or
ds
sub
push
cwde
icebp
rcr
push
cmp
and
dec
jae
call
std
mov
mov
xchg
in
and
add
scas
and
out
int3
or
call
and
inc
add
cmc
imul
(bad)
push
cmps
sub
cmp
pop
cwde
sub
push
xchg
adc
aaa
sub
and
dec
mov
xchg
in
mov
int3
mov
adc
pop
ja
pop
xchg
in
jb
test
or
push
xchg
inc
pop
mov
push
cmp
shl
pop
dec
mov
in
cmps
cmp
loope
cld
push
push
dec
sbb
pop
repz
into
inc
add
push
hlt
adc
popf
mov
cli
outs
and
int
enter
inc
sti
mov
jmp
scas
mov
adc
mov
stc
icebp
je
in
aam
inc
pusha
or
cmp
mov
ss
call
pop
push
dec
inc
jne
cmp
xor
(bad)
loopne
pusha
lahf
xor
lods
rcr
js
jo
mov
sbb
push
fdiv
push
xor
fwait
jno
jg
cmp
xor
out
push
lea
or
sbb
cli
retf
adc
popf
mov
add
jns
cmps
ins
jp
jne
xchg
jae
inc
adc
inc
pop
jb
pop
pushf
popa
sbb
fwait
pushw
(bad)
cli
js
adc
push
and
and
sbb
fadd
mov
sub
mov
test
rcl
out
jmp
outs
mov
(bad)
or
les
and
int3
dec
fdiv
std
int3
scas
xor
div
cwde
imul
xlat
sbb
sahf
jmp
aad
push
sbb
sbb
cmc
call
pop
mov
dec
mul
inc
aam
js
rol
xor
or
push
cmps
cli
in
jg
fsub
ret
mov
ins
pop
cdq
es
mov
inc
xor
aas
jbe
ins
sti
sahf
jp
push
in
pop
pop
push
inc
pop
ins
(bad)
and
sti
test
cmc
rcl
push
ins
jmp
push
aas
popa
mul
xor
adc
push
push
mov
jmp
das
leave
clc
ds
add
dec
(bad)
scas
test
ins
faddp
mov
fwait
int
fldcw
loop
xor
test
push
pop
xchg
pop
cmp
cli
jmp
das
lea
int
pop
sub
out
out
mov
sub
shl
cmp
push
ins
jno
imul
jbe
mov
jge
add
loope
xor
or
cmp
inc
daa
(bad)
mov
mov
aaa
and
inc
cmp
test
rcr
fisttp
retf
(bad)
push
outs
pop
mov
imul
retf
mov
push
leave
sub
xor
mov
ins
mov
mov
jne
or
lds
and
mov
int3
push
inc
pop
fbstp
jne
or
xor
or
ret
repz
clc
lods
retf
sar
rcr
out
ss
push
addr16
push
ret
shr
shr
sub
popf
js
scas
push
mov
pop
inc
(bad)
mov
jp
pop
out
js
cld
inc
push
inc
idiv
mov
pop
mov
mov
inc
push
add
mov
inc
stos
ja
in
test
sti
or
leave
push
hlt
int
inc
and
xchg
dec
or
(bad)
test
sub
fwait
jmp
in
mov
fimul
add
add
out
mov
adc
adc
xchg
xor
hlt
add
imul
mov
dec
psubsw
movs
sbb
out
outs
bound
sbb
or
lds
outs
xor
or
imul
cmps
sbb
cmp
out
xchg
or
(bad)
(bad)
sub
pop
push
inc
cli
cmp
fdiv
xchg
and
test
hlt
lahf
push
(bad)
xor
adc
mov
pushf
and
fld
cmps
xchg
xor
ins
xlat
stos
add
mov
dec
hlt
push
aaa
jmp
lods
out
pop
sub
pop
inc
inc
dec
add
mov
dec
xchg
jno
pop
dec
shl
or
stc
cmp
daa
mov
inc
jmp
(bad)
xrelease
cld
bound
pop
xchg
or
push
sbb
es
adc
fsub
imul
lods
inc
(bad)
aaa
iret
cmp
xchg
(bad)
xor
sti
jg
ret
jge
in
fcmovne
fcomp
pop
xchg
jecxz
inc
movs
lods
popf
or
aad
xor
xchg
mov
in
loop
or
in
test
popf
lock
pop
pop
sbb
loope
mov
daa
or
cmp
add
fnsave
sbb
add
fcomp
ja
pusha
jnp
aaa
or
mov
mov
pop
add
loop
pop
in
test
retf
pop
test
fadd
sbb
ror
mov
dec
sub
je
fadd
xchg
mov
ins
lea
out
neg
inc
imul
mov
cdq
jns
icebp
sbb
fiadd
pop
loope
jb
jb
jmp
pop
inc
dec
pop
mov
or
push
push
mov
mov
leave
int3
icebp
outs
jns
push
pop
rcr
jnp
cmp
cmp
pop
loope
fsub
ficomp
adc
das
mov
frstor
cs
repnz
sub
cld
dec
lea
movs
mov
(bad)
scas
ficomp
pop
icebp
add
mov
(bad)
pushf
ror
fisttp
inc
inc
adc
inc
sbb
inc
int
nop
out
lea
aam
and
xor
out
and
dec
lahf
repz
pop
in
mov
data16
jne
or
cdq
aas
imul
pop
or
ror
pop
push
in
cmp
mov
aaa
(bad)
stos
inc
adc
cmp
(bad)
xchg
in
jo
sbb
xchg
rol
ds
jmp
sbb
(bad)
nop
retf
add
mov
sbb
mov
inc
mov
mov
lds
ret
sub
dec
fldcw
shl
mov
push
inc
shl
aad
mov
jns
xchg
mov
xor
inc
sub
loopne
cs
jnp
data16
push
ins
aad
out
addr16
pop
in
into
dec
les
pop
pop
jmp
mov
sbb
mov
adc
rcl
and
pop
mov
mov
(bad)
xor
fs
xor
adc
in
xchg
or
mov
mov
mov
sub
inc
mov
sub
cmp
je
and
push
out
loop
dec
call
pusha
cmc
push
movs
xchg
jns
pop
(bad)
xchg
xor
fsubr
ins
xchg
xor
mov
(bad)
hlt
or
push
ret
mov
loopne
add
lds
add
xchg
shl
ja
rcl
int
les
out
stos
loop
test
ss
or
rol
mov
cmp
push
sbb
or
adc
push
sbb
xchg
lods
push
mov
retf
jmp
in
pushf
mov
pop
or
ret
into
mov
or
sahf
sub
mov
into
gs
sbb
fs
mov
inc
out
adc
and
test
fiadd
int3
push
fcmovu
mov
jnp
fwait
mov
add
call
inc
pop
mov
xor
jecxz
mov
and
add
iret
mov
mov
sar
mov
outs
mov
stc
ss
or
fadd
ins
ins
pop
jg
in
loopne
pop
or
int
cmp
mov
add
cmps
cmc
mov
ja
add
and
sub
xor
shl
xchg
mov
repz
pop
in
add
js
sub
mov
stos
push
div
pop
pop
fsub
push
mov
xor
mov
dec
dec
or
dec
adc
pusha
or
sbb
test
xchg
xchg
add
inc
int3
add
gs
sahf
lahf
fwait
imul
shl
pusha
icebp
adc
push
les
rol
and
sbb
jge
dec
jae
fwait
and
push
in
jl
cwde
les
mov
push
xor
mov
and
icebp
jbe
call
ja
rcr
hlt
repnz
pop
push
or
(bad)
scas
loope
imul
dec
mul
fist
push
pop
bound
fld
jle
movs
pop
out
jnp
mov
jne
jp
in
mov
imul
fldcw
mov
push
ins
dec
push
fiadd
dec
loop
dec
or
cmp
jnp
ficomp
sahf
pop
(bad)
(bad)
mov
shl
imul
popa
cmps
push
or
adc
push
lock
or
stc
pop
fnstenv
jmp
test
loop
ins
mov
in
inc
ror
jl
sbb
push
inc
loop
js
xchg
fbstp
pop
mov
dec
jle
sbb
xchg
mov
adc
mov
(bad)
jp
cmp
iret
pop
aam
push
pop
pop
and
test
inc
and
leave
cmp
nop
(bad)
pop
cmp
cli
xor
stc
push
dec
lods
pop
mov
pop
mov
cmp
xor
retf
inc
xor
or
cmp
mov
adc
jp
jg
sbb
pop
cdq
push
(bad)
pop
mov
sbb
add
call
jp
sbb
jl
dec
and
test
(bad)
stos
pop
neg
test
scas
jmp
sbb
into
cmp
or
loope
cmp
imul
test
dec
mov
and
xor
mov
push
jne
fcomp
ret
sub
popf
sar
xchg
mov
pop
fdiv
mov
ret
lds
inc
xor
ja
pop
fdiv
in
sbb
pop
xor
sar
mov
adc
jle
lea
mov
cmp
aad
ins
cs
rcl
or
leave
xchg
adc
outs
push
mov
adc
cmps
dec
aaa
lahf
aam
inc
loop
mov
enter
cmp
xor
ins
inc
cwde
fwait
lock
stos
jae
dec
pop
aas
lea
cmps
pop
sbb
jbe
cmp
sbb
popf
dec
ficom
in
mov
push
inc
movs
in
cdq
(bad)
fisttp
or
lods
neg
fmul
jne
data16
adc
push
data16
popf
int
and
fst
js
jge
popf
ficom
pusha
(bad)
mov
lahf
das
ret
cmc
gs
sub
mov
jne
mov
stc
arpl
repz
cmp
lea
imul
adc
popa
push
outs
std
or
mov
push
cdq
adc
and
loope
mov
(bad)
in
or
int
jno
xchg
mov
cmp
int3
pop
nop
pop
sbb
and
mov
jl
cmp
pop
addr16
aam
push
inc
nop
dec
ss
test
cmp
and
imul
sbb
inc
push
outs
add
mov
sbb
cmp
and
inc
mov
fld
js
cs
sbb
add
cmp
inc
sahf
jl
cli
fwait
dec
mov
and
je
(bad)
adc
std
fsubr
call
(bad)
pop
xor
ss
jnp
dec
sub
and
call
mov
adc
and
jae
jo
adc
cmp
movs
sbb
out
jmp
cwde
shl
int3
arpl
(bad)
into
(bad)
in
das
cmp
arpl
cmp
jmp
dec
pop
out
outs
gs
cmova
lods
mov
fst
stos
jno
xlat
into
stc
test
(bad)
(bad)
iret
add
les
inc
aaa
arpl
fucom
jb
add
scas
out
pushf
xlat
dec
mov
mov
mov
jmp
cmps
xor
rcr
leave
iret
adc
jo
inc
lods
loop
add
neg
push
lods
cmp
cmp
clc
sbb
iret
adc
inc
cmps
imul
cmp
test
mov
daa
in
mov
cli
cmp
sbb
pop
(bad)
push
pop
xor
sub
ret
mov
jp
mov
cli
add
out
mov
scas
push
retf
adc
mov
(bad)
dec
repz
mov
cmp
pop
sub
jmp
je
push
jnp
repz
icebp
test
out
xor
daa
cld
outs
dec
jo
pop
fisttp
push
pop
popa
jae
jbe
es
call
jb
and
iret
adc
inc
push
push
sbb
or
jnp
xlat
aas
int
push
test
mov
cmp
es
sbb
or
popa
ficomp
(bad)
push
push
aam
outs
lods
jge
jae
push
pop
aam
add
dec
xchg
push
add
inc
xor
xor
xor
adc
pop
addr16
mov
xchg
mov
retf
push
in
xchg
jle
dec
cmp
sbb
js
retf
xor
rol
cs
(bad)
push
jae
push
lods
js
lods
lea
shr
mov
or
pop
cmp
int
jl
shl
fwait
or
sbb
fistp
fisubr
pop
cmp
sbb
add
push
adc
jecxz
test
aas
outs
and
and
push
push
mov
jmp
push
cmc
popa
xchg
xlat
fs
cmp
pop
jb
dec
sub
mov
in
in
shl
jmp
bound
push
sbb
pop
xor
cmp
sub
add
test
repnz
jmp
xchg
sar
push
sti
movs
neg
imul
jns
hlt
fst
dec
push
sbb
inc
mov
stc
mov
out
or
lods
daa
jmp
int3
pop
test
xor
(bad)
push
push
gs
inc
push
out
hlt
bound
(bad)
shl
fsubr
fwait
scas
cmps
icebp
adc
adc
(bad)
add
mov
popa
adc
xchg
out
jge
js
pop
mov
xlat
pop
xchg
sbb
sbb
pop
addr16
arpl
push
sbb
jmp
add
inc
xor
in
fs
mov
fdiv
ss
mov
pusha
gs
push
les
inc
inc
rcr
sbb
add
cmp
mov
cmps
aam
shl
cli
pop
jbe
dec
mov
popf
and
jmp
shl
scas
adc
scas
retf
mov
mov
arpl
fwait
inc
les
loope
stos
sub
xchg
push
jg
and
fisubr
adc
lahf
xchg
xchg
mov
loopne
pop
or
cmp
push
fsub
ins
movs
xchg
pusha
push
sbb
cwde
mov
ret
in
int3
aad
cmp
imul
xlat
adc
cs
xlat
or
lahf
stc
mov
outs
xor
loope
push
push
mov
adc
clc
popa
pop
xor
mov
pop
jae
mov
arpl
mov
sub
sub
mov
ds
leave
adc
inc
pop
dec
in
scas
inc
push
xchg
add
sbb
lods
popa
test
jp
jl
cli
or
push
sahf
and
stos
scas
mov
out
cli
lea
xor
test
jge
sar
out
dec
repz
push
in
pop
mov
icebp
pop
pusha
xor
(bad)
push
dec
dec
pop
imul
mov
jmp
sbb
retf
pop
jmp
add
shl
push
(bad)
loope
ret
mov
jae
mov
jbe
mov
je
pop
in
pop
inc
sbb
cld
call
ficomp
ss
repz
(bad)
in
repnz
(bad)
adc
mov
sahf
out
jp
stc
cmc
jb
out
sti
sbb
add
int3
test
mov
fisttp
adc
inc
jge
push
jb
inc
sbb
imul
(bad)
jge
retf
xchg
loop
cld
popa
enter
jmp
loop
mov
sbb
pop
arpl
cmp
retf
cmp
ja
out
clc
fistp
inc
popa
clc
stos
add
xchg
stos
cmp
adc
adc
fimul
xchg
fst
into
adc
xchg
jo
rol
adc
push
jnp
push
int
mov
fisttp
fdivr
jp
sub
bound
and
mov
inc
popa
rcl
dec
cmp
popa
sub
or
imul
cmp
dec
aad
sbb
add
sbb
call
stos
test
cld
add
push
(bad)
xchg
dec
outs
stc
mov
mov
mov
or
aam
out
mov
int3
jb
jnp
sbb
push
icebp
bound
xchg
(bad)
enter
jmp
inc
inc
loopne
xchg
retf
hlt
shl
jecxz
inc
adc
lahf
sub
aas
lahf
pop
sub
push
loope
cmps
xchg
add
data16
sub
mov
clc
sub
bound
clc
adc
fldenv
sub
fild
push
inc
imul
iret
pop
stos
ins
add
scas
cmp
inc
movs
push
mov
addr16
stos
mov
jge
mov
xor
add
pop
lahf
cmps
sub
fwait
outs
mov
and
(bad)
cmp
mov
sbb
rcl
pop
lods
adc
mov
sti
int
or
retf
jmp
outs
ss
fsub
or
mov
repnz
add
jge
and
ror
push
dec
(bad)
bound
leave
(bad)
js
sbb
test
into
sbb
addr16
jp
and
std
push
jb
pop
aam
jmp
or
(bad)
lods
jmp
cmc
mov
test
mov
fmul
mov
xor
mov
daa
inc
(bad)
pop
add
jmp
push
(bad)
mov
push
cld
xchg
mov
fstp
cmc
xor
xchg
push
xchg
cmp
jae
int
add
fild
das
adc
sbb
cmp
xchg
push
jp
rdtsc
out
cmp
stc
mov
shl
stc
push
std
into
adc
jnp
jb
inc
fstp
add
push
sub
push
add
ins
lods
pop
push
das
int3
adc
ret
sti
(bad)
cli
cmp
scas
scas
mov
neg
mov
mov
mov
sub
add
pop
sbb
fsub
(bad)
inc
inc
pop
push
add
pop
inc
retf
adc
sbb
sahf
je
repnz
(bad)
fisttp
add
add
xchg
fist
pop
mov
leave
out
and
in
js
push
fwait
push
ins
or
sbb
lahf
aas
mov
imul
aaa
ds
aad
sbb
pop
movs
cmp
(bad)
mov
into
gs
into
loop
dec
popa
mov
fs
ss
inc
fbld
cld
pop
scas
retf
cs
ltr
or
cmps
xor
push
ja
mov
test
imul
fs
ds
loopne
loopne
add
pop
pop
dec
lods
out
xchg
outs
mov
inc
and
add
mov
icebp
in
fadd
mov
bound
icebp
(bad)
jp
mov
and
in
or
push
cmp
into
(bad)
xchg
dec
lahf
cld
sahf
(bad)
or
dec
enter
inc
std
cdq
sub
xor
movs
xlat
mov
add
sub
fcomp
rcl
push
push
mov
cs
(bad)
xor
retf
leave
adc
and
jl
movs
cmp
xchg
std
scas
or
enter
xchg
and
sub
leave
adc
aaa
scas
aad
into
mov
push
(bad)
cmp
jo
or
ror
pop
or
and
lahf
pop
clc
gs
xor
fidivr
adc
sub
iret
xor
push
test
fs
loopne
fs
aaa
mov
cmps
test
cmp
data16
movs
inc
rcl
pop
inc
aad
and
inc
iret
retf
or
and
(bad)
adc
shr
pop
mov
das
iret
les
imul
out
imul
cdq
jmp
cmc
cwde
push
add
push
loopne
mov
adc
fstp
xchg
push
jns
push
pmaxub
sbb
mov
sub
ins
(bad)
mov
xchg
pop
fadd
popf
sub
jbe
adc
xchg
sahf
lods
xchg
call
call
xor
cdq
imul
push
or
mov
xor
adc
mov
gs
test
ror
(bad)
loopne
ret
ds
xchg
mov
mov
add
arpl
pop
rol
fldpi
ret
mov
pop
sahf
in
out
add
loopne
sub
jo
shl
shr
inc
or
xchg
mov
hlt
dec
mov
jnp
mov
xchg
push
aam
or
adc
jbe
jb
data16
pusha
lea
dec
ficomp
and
mov
push
dec
int
repnz
leave
stc
dec
push
or
mov
mov
hlt
(bad)
ja
xlat
cdq
inc
jb
add
cmp
inc
xchg
aad
daa
stos
cmp
icebp
movs
sub
mov
sbb
mov
lahf
pop
ss
xlat
mov
xchg
jbe
sub
outs
mov
or
pop
sbb
xchg
js
jg
jecxz
(bad)
popf
(bad)
pop
cmp
popa
(bad)
aaa
mov
mov
imul
adc
push
das
push
fbstp
retf
mov
cmp
push
imul
mov
fisttp
mov
add
in
mov
xor
in
retf
sahf
addr16
xlat
or
fadd
sub
fcomp
jno
scas
imul
fidiv
adc
push
int3
jo
popf
or
jg
pushf
xchg
loop
xchg
adc
add
shl
dec
sub
adc
add
adc
push
cwde
mov
cmp
mov
inc
pusha
mov
inc
sbb
xchg
pop
or
mov
mov
or
out
mov
adc
xor
inc
sub
(bad)
mov
push
sub
cmp
dec
leave
sub
push
and
cld
pop
xor
retf
pushf
repnz
repnz
fnstenv
sar
leave
mov
add
push
and
mov
gs
fs
sub
loopne
or
sub
scas
lock
sar
fdiv
sub
jb
sbb
btc
sub
sar
adc
aam
mov
shr
scas
sbb
mov
sbb
idiv
push
dec
fbstp
ret
cmp
xor
dec
fisttp
sub
sar
push
inc
aam
push
add
push
cmc
in
add
imul
sub
stc
fld
dec
pavgb
lock
in
int
fs
aas
out
ss
inc
xchg
push
mov
ficom
(bad)
scas
sbb
lods
or
mov
and
(bad)
int3
scas
ins
daa
mov
inc
xchg
xor
or
iret
or
fdivr
pop
ds
push
or
adc
xchg
mov
push
push
xchg
mov
pop
cmps
fs
sub
es
gs
loop
cmp
pop
jmp
add
add
add
cli
stos
mov
imul
xlat
mov
xchg
add
dec
mov
fdiv
and
les
pop
stos
test
push
adc
cld
mov
push
jo
xchg
es
and
mov
lahf
push
outs
cmp
fwait
(bad)
(bad)
(bad)
retf
pop
sbb
xor
movs
mov
sub
in
mov
pushf
popf
cmp
cld
xor
ja
popa
sub
sub
mov
std
into
xor
push
aas
(bad)
inc
movs
cs
push
ds
mov
mov
stos
les
shl
sub
das
pop
ins
mov
xchg
ret
imul
dec
sbb
and
add
push
inc
xor
mov
mov
sub
inc
ins
inc
xchg
cmp
test
popa
pushf
(bad)
and
cmc
inc
in
call
mov
outs
in
mov
cdq
push
jg
inc
lea
(bad)
sahf
ins
dec
sub
scas
xor
adc
sbb
xor
iret
mov
out
add
jp
mov
add
shr
jno
push
jecxz
push
out
and
imul
inc
jmp
jmp
cmps
lock
jl
retf
dec
jmp
(bad)
adc
bound
mov
add
and
rcr
call
enter
in
pop
push
push
pop
lock
push
sahf
inc
retf
sub
mov
ds
pop
jns
pop
or
xor
pop
inc
push
cs
and
les
ret
push
xchg
mov
retf
push
int3
cmp
jmp
cmp
pop
aad
or
mov
jmp
fcomp
push
push
das
xchg
xor
inc
pop
mul
push
daa
(bad)
pop
cld
int
es
sbb
(bad)
pop
lock
ins
xor
sar
mov
call
xor
jp
sub
(bad)
call
jl
daa
inc
scas
sub
add
imul
sub
mov
dec
sti
scas
jl
and
sbb
(bad)
dec
(bad)
inc
jmp
(bad)
call
mov
enter
adc
lock
push
mov
xchg
loopne
clc
out
mov
frstor
cmp
mov
jmp
fiadd
sti
sar
repnz
hlt
mov
mov
jmp
ror
dec
pop
imul
leave
and
dec
mov
mov
push
sbb
dec
fdiv
(bad)
hlt
fimul
mov
arpl
or
loopne
pushf
jl
lahf
or
int3
jmp
repz
retf
sbb
sbb
ret
out
mov
add
xor
pop
das
mov
xchg
or
sti
sub
mov
dec
lahf
lea
and
xchg
add
pop
ds
xchg
jnp
das
retfw
sahf
out
lahf
and
sub
adc
or
fadd
mov
aad
jbe
inc
leave
cmps
sbb
mov
movs
movzx
push
stos
in
jae
inc
or
lods
adc
out
dec
dec
jnp
cmp
and
mov
inc
mov
adc
outs
add
dec
popf
std
pop
in
xchg
fidiv
imul
outs
and
shl
sub
pop
je
xchg
and
pop
jbe
mov
xlat
mov
fisubr
mov
loopne
xchg
movs
xchg
push
out
movs
rol
inc
jg
pop
(bad)
jmp
pop
cmp
xor
lds
std
loop
and
sub
pushf
mov
mov
or
or
sbb
mov
or
push
adc
fisubr
(bad)
mov
fadd
xor
cmps
adc
data16
sbb
adc
popa
jne
shr
mov
sub
cmp
and
icebp
lods
add
jg
fcomp
jno
lock
sti
add
bnd
loope
mov
imul
adc
std
cmp
push
fwait
in
mov
sti
ds
pop
xor
inc
dec
jle
inc
dec
ffreep
xchg
mov
mov
jge
mov
and
dec
xor
lods
xor
sub
loope
enter
jmp
fisubr
arpl
jbe
sbb
adc
pop
fistp
movs
cwde
push
cmps
hlt
not
outs
adc
lock
dec
data16
mov
mov
dec
mov
add
adc
pop
cli
adc
pop
xor
sub
(bad)
adc
mov
lods
inc
(bad)
mov
jne
add
mov
ds
jg
push
dec
xbegin
sbb
loope
mov
popa
mov
inc
dec
jmp
icebp
push
jp
into
neg
adc
dec
mov
mov
jmp
bound
shl
fdivr
lahf
lods
stos
rcr
or
dec
adc
rol
mov
div
mov
adc
aam
lock
fnstsw
ficom
out
repnz
clc
jle
das
test
(bad)
mov
(bad)
mov
jo
stos
icebp
prefetchw
and
xlat
mov
repz
jmp
xlat
sub
cmp
sub
scas
jne
xchg
rol
push
clc
stos
sub
pmaddwd
retf
sub
mov
pop
sub
mov
sar
shl
outs
push
imul
mov
std
data16
sub
sub
mov
out
mov
cs
repz
cdq
int3
pusha
stos
(bad)
sbb
mov
add
and
add
push
ds
dec
sbb
popf
add
gs
jae
rcr
and
and
mov
fisubr
adc
jmp
mov
sub
sar
push
inc
sbb
lods
stos
stos
pop
cld
fidivr
jmp
bound
lods
xchg
add
ins
mov
jnp
int
call
cmc
out
mov
xchg
out
lock
mov
mov
ss
call
xor
mov
ficomp
mov
and
js
mov
(bad)
fist
clc
mov
pop
push
mov
ret
jp
push
push
push
pop
dec
inc
retf
sbb
daa
xchg
pop
int3
rcr
mov
xchg
call
add
mov
or
retf
cmp
mov
fnstcw
mov
xor
dec
ret
dec
ja
popa
jmp
div
repz
cli
xor
pop
mov
sbb
jp
sbb
jb
mov
das
and
add
int3
mov
imul
xchg
ja
dec
arpl
jecxz
or
aaa
cmc
je
or
movs
add
push
loop
cwde
fsub
xor
sub
outs
shl
cwde
jl
sbb
jnp
popf
ins
push
mov
scas
push
sub
mov
fwait
pop
sub
add
nop
xchg
and
ss
mov
xchg
aaa
test
push
fsubr
test
sub
fistp
call
outs
push
iret
out
inc
sub
jmp
and
pop
and
lock
setne
inc
das
loop
adc
sbb
test
xor
dec
mov
test
ret
dec
aam
aam
and
pop
mov
pop
mov
imul
outs
pop
clc
pushf
int
and
mov
mov
fld
adc
xchg
dec
mov
adc
mov
xchg
cmc
ins
outs
xor
icebp
mov
cmc
mov
jne
xor
xor
sub
sbb
fwait
mov
leave
dec
push
std
loop
in
dec
(bad)
fisttp
pop
mov
popf
neg
lods
daa
cmp
sar
xchg
cwde
imul
cdq
add
fisubr
add
jo
or
cmc
sub
movs
(bad)
repz
or
adc
jmp
push
rcr
les
mov
add
int
aam
scas
pusha
push
test
das
scas
cmp
ins
test
cdq
sahf
pop
cmc
and
mov
mov
push
inc
xchg
movs
adc
cmp
ret
mov
cmp
out
add
repnz
push
shr
and
lods
and
or
in
jmp
pop
cld
(bad)
mov
scas
je
xor
mov
mov
repz
mov
sti
jecxz
bound
mov
hlt
dec
sbb
mov
lahf
inc
pop
out
adc
and
cmp
jno
inc
push
mov
sbb
imul
push
add
jmp
pusha
push
hlt
xchg
cmp
xchg
add
ror
lahf
jp
jae
dec
les
adc
dec
cld
sbb
loopne
icebp
xor
fdiv
fdivr
mov
rcl
push
out
or
arpl
fbstp
jmp
xor
stos
cmp
ror
out
xchg
inc
int
inc
out
xor
pop
jne
stos
mov
xchg
adc
jle
unpckhps
fwait
cmps
adc
ror
add
cmps
(bad)
mov
ins
fist
repnz
sub
inc
push
hlt
xchg
ins
xchg
cmc
sbb
dec
add
inc
bound
lods
xchg
xor
jno
shl
jmp
cmp
inc
enter
adc
fwait
xor
xchg
lods
sub
jp
jne
jb
mov
sar
mov
or
pop
push
and
out
push
test
jg
mov
retf
movs
jmp
(bad)
fisttp
cld
or
fmul
data16
pushf
jb
scas
enter
adc
sti
pop
mov
sub
adc
mov
jecxz
xchg
aad
and
xchg
xlat
int3
adc
scas
hlt
addr16
sbb
push
adc
cli
lock
add
retf
fwait
(bad)
lea
aaa
shl
cdq
jns
mov
fidivr
mov
in
sub
sbb
mov
imul
daa
clc
stos
aaa
xor
out
and
pop
les
sbb
cs
popf
test
int
push
mov
mov
ins
dec
adc
jbe
dec
mov
adc
sub
or
ins
jp
xor
fbstp
mov
mul
jne
mov
movs
sub
sub
sbb
cmp
pop
add
dec
pop
inc
stc
jg
or
test
mov
adc
or
popf
push
in
popa
mov
jp
adc
rcl
int3
push
mov
arpl
dec
sub
movs
repnz
cmp
hlt
sbb
je
test
push
cmp
push
je
jnp
mov
xor
pop
jns
int3
jbe
mov
mov
push
and
cwde
xchg
sahf
aad
jo
sbb
outs
test
cmps
ret
cmp
addr16
xchg
push
pushf
daa
fcom
ret
popf
mov
pop
es
adc
jl
out
mov
ins
mov
fdiv
jmp
gs
(bad)
into
(bad)
gs
aam
test
xor
(bad)
xchg
int3
rcr
xchg
stc
pop
mov
mov
or
lock
test
aad
xlat
jmp
sub
(bad)
jge
arpl
pop
fstp
(bad)
retf
mov
nop
rol
and
inc
pop
retf
(bad)
das
in
add
add
add
and
les
add
inc
pop
dec
push
pop
add
out
nop
push
xchg
adc
aam
adc
mov
(bad)
ja
ja
icebp
mov
pop
sbb
cmp
jg
mov
mov
xor
aad
gs
add
jno
bound
jmp
or
add
fld
aam
in
js
add
retf
out
data16
mov
(bad)
call
es
aaa
sbb
mov
mov
ja
mov
push
xchg
shl
es
(bad)
xchg
sar
mov
mov
xchg
ins
mov
inc
(bad)
sub
pop
neg
mov
mov
dec
dec
mov
sub
xchg
sub
xor
and
mov
retf
pop
jo
xchg
leave
call
mov
push
push
sbb
add
ror
js
push
sbb
jecxz
pop
imul
dec
ret
xchg
iret
or
mov
test
jge
jae
sub
or
xchg
fidivr
outs
int
jle
pop
daa
mov
test
idiv
idiv
movs
fadd
jecxz
fs
popa
movs
add
xor
mov
scas
(bad)
sub
imul
(bad)
adc
stos
dec
jecxz
sub
popf
or
outs
mov
mov
adc
inc
sub
push
sub
ror
add
sbb
add
out
out
adc
(bad)
adc
dec
pop
imul
cmp
iret
push
stc
nop
sub
stos
repnz
lahf
loope
jbe
out
hlt
pop
sbb
scas
pop
or
in
sbb
and
cmc
and
xchg
daa
into
pop
cwde
ss
sahf
imul
fadd
lods
mov
dec
jp
jp
and
mov
pop
pop
mov
mov
xrelease
inc
mov
in
push
loop
out
dec
les
pcmpgtd
fwait
mov
in
movs
or
sbb
icebp
popf
cmp
pop
int
dec
mov
push
push
and
addr16
mov
loop
rcr
les
es
dec
xor
mov
push
add
out
out
mov
call
sahf
pusha
adc
jno
push
mov
push
jp
out
out
xor
or
xor
pop
sub
call
mov
cdq
mov
in
loopne
inc
js
aam
lock
xor
call
mov
out
call
repnz
lods
cmp
mov
xor
push
mov
hlt
sub
loopne
fs
fidivr
nop
xchg
inc
jns
push
mov
mov
push
imul
and
test
std
fmulp
xchg
jmp
jg
inc
test
popf
push
push
push
mov
loope
dec
scas
inc
les
fisub
daa
hlt
mov
movs
push
or
(bad)
xchg
popf
pop
scas
sub
xor
aad
fsubr
repnz
daa
repz
rcr
cmp
xchg
xchg
and
and
adc
popa
(bad)
std
pop
cmp
inc
jl
stos
leave
ror
dec
(bad)
(bad)
sbb
in
fwait
mov
dec
push
xor
(bad)
sbb
rol
ins
dec
fs
or
ret
sahf
and
mov
jno
xchg
dec
inc
add
adc
cmp
xchg
or
xchg
mov
mov
add
or
inc
ss
cmp
mov
shr
xor
push
lods
test
fdiv
or
sub
loopne
js
addr16
push
mov
retf
outs
push
movs
pushf
pop
cmp
sub
mov
(bad)
or
mov
cmps
fsub
add
ss
push
xor
lds
jmp
cmp
fmul
retf
(bad)
mov
ins
pop
int3
adc
in
adc
mov
and
outs
xor
mov
mov
scas
jecxz
add
push
inc
push
add
jl
jbe
mov
movs
leave
rol
iret
hlt
mov
and
jo
fld
mov
mov
retf
push
cli
out
xchg
bound
jl
or
push
adc
jmp
jae
cs
mov
mov
inc
aad
xchg
xlat
mov
or
xchg
jne
push
mov
mov
mov
jne
jne
cmps
cmc
xchg
fidivr
pop
pop
jmp
ds
maxps
or
pop
push
popa
retf
out
(bad)
cmp
aam
sbb
jp
pop
int3
inc
jp
call
mov
jmp
jb
ja
xchg
jnp
push
sub
push
jge
movs
dec
fistp
xchg
cwde
rcr
std
sbb
dec
fwait
push
or
std
test
in
sti
je
add
mov
retf
pop
pop
sar
push
cwde
push
(bad)
inc
stos
and
inc
cli
and
push
jmp
(bad)
adc
aas
xchg
adc
inc
or
(bad)
jmp
sub
mov
lahf
(bad)
dec
mov
xchg
dec
push
dec
cmp
xchg
xor
call
(bad)
fist
jbe
int
scas
pop
call
iret
push
cld
xchg
mov
push
xchg
nop
mov
in
mov
dec
cmps
mov
aam
adc
xchg
fisttp
mov
or
push
add
push
or
adc
add
jmp
loopne
push
fidiv
inc
adc
add
hlt
jns
inc
sbb
rol
fdiv
adc
nop
pop
into
push
mov
movs
mov
add
add
les
ror
test
and
mov
push
nop
stos
fldcw
adc
or
arpl
mov
mov
loopne
jmp
push
adc
ret
mov
jmp
pop
xor
aaa
dec
shr
jbe
xchg
fidiv
push
mov
inc
cmps
push
and
clc
jns
lods
sub
mov
mov
(bad)
in
inc
sbb
pop
mov
xor
pop
cmp
pop
cmc
mov
out
pop
adc
lock
adc
push
jb
sbb
adc
call
or
psrlq
and
pop
sub
cwde
pushf
retf
adc
out
xor
mov
xor
(bad)
cwde
or
cmp
popa
sti
pop
dec
sbb
xchg
push
xchg
or
imul
add
shr
mov
or
pop
and
retf
call
retf
cmp
mov
cmp
test
cmp
fist
push
(bad)
cli
xchg
xchg
int
movs
je
imul
lea
cmc
adc
jl
pusha
in
xchg
push
cmp
adc
mov
mov
scas
repz
je
mov
push
push
jne
js
and
popf
jo
or
lds
pop
or
sbb
mov
mov
push
clc
push
and
add
shr
jbe
aas
dec
nop
or
mov
and
retf
ret
mov
retf
inc
jno
dec
sub
or
push
pop
stc
cmp
jns
dec
xchg
mov
sbb
cmc
dec
pop
xchg
es
sahf
xor
jp
add
movs
pop
(bad)
popa
inc
sub
out
mov
in
fbstp
call
lods
xchg
std
push
mov
repz
out
mov
aam
add
popa
and
dec
push
loope
push
mov
je
sub
xor
xchg
imul
sbb
inc
ja
xor
lahf
out
shl
push
fsubr
stos
lea
aad
and
sbb
stc
xchg
xor
ins
or
jb
and
psubq
fisub
fs
xchg
into
sub
rcl
jb
and
mov
dec
jp
pushf
cmp
sbb
cmp
out
rol
cmp
xor
stc
out
js
pop
clc
(bad)
mov
lods
(bad)
or
jmp
jmp
add
and
mov
outs
sbb
addr16
call
inc
or
je
inc
fwait
xor
cwde
movs
xor
cld
fs
int
push
adc
adc
out
mov
xchg
icebp
or
inc
xchg
bound
jecxz
jmp
lods
jecxz
push
addr16
scas
call
test
leave
inc
jmp
sbb
mov
inc
adc
pop
sub
push
fst
pop
ins
stos
push
clc
pop
mov
mov
out
stos
cwde
ds
ret
jbe
imul
xchg
stos
fwait
sbb
data16
xor
mov
imul
mov
fwait
dec
loop
adc
mov
dec
aam
test
xor
jmp
jns
loopne
outs
imul
test
adc
cmp
and
test
arpl
fsubr
je
pop
push
popf
mov
mov
hlt
std
jl
ins
call
or
inc
dec
adc
aad
in
ins
mov
in
push
gs
out
mov
aad
cmp
sar
jo
aas
adc
inc
dec
hlt
dec
xchg
sub
jno
dec
rcl
mov
imul
loop
imul
shr
(bad)
sub
sti
cmp
pusha
test
das
(bad)
outs
cwde
idiv
jge
cmp
jmp
mov
(bad)
mov
jne
jmp
mov
enter
cmps
outs
cld
stos
in
scas
mov
dec
fdiv
cdq
and
(bad)
mov
sbb
sbb
das
sbb
int3
adc
test
arpl
mov
jns
mov
and
imul
and
out
scas
enter
cs
stos
jo
add
aad
jne
dec
hlt
out
fnstcw
nop
getsec
or
test
sar
inc
icebp
xchg
add
or
ins
and
das
je
fwait
sbb
out
push
dec
cmp
(bad)
xchg
jbe
push
xchg
js
out
call
cmc
adc
adc
fild
xor
mov
inc
test
xor
or
push
jmp
add
sub
xadd
dec
aas
scas
xchg
cmp
test
nop
mov
cmp
mov
pop
push
inc
push
repz
cmp
and
adc
fisubr
call
inc
inc
sub
jae
gs
or
(bad)
add
sti
jle
in
inc
add
rol
sbb
or
push
sbb
add
cmc
jp
pop
push
mov
inc
fsubr
mov
test
retf
je
inc
mov
sbb
inc
add
cmp
push
pushf
fcomp
xchg
mov
(bad)
es
inc
pop
icebp
lds
pop
xor
and
or
add
call
int
xchg
mov
aam
arpl
xchg
cwde
in
aaa
cmps
sub
pop
xchg
ds
sub
sbb
push
cmc
sti
inc
and
cmc
cdq
pop
add
dec
xchg
pushf
adc
mov
mov
pushf
cld
in
xchg
xchg
xchg
in
pop
push
ja
js
into
fstp
jbe
jns
repz
icebp
nop
jb
imul
outs
fwait
test
or
inc
dec
aas
push
xchg
dec
lock
add
mov
xor
jp
xchg
int
ror
and
shl
mov
loopne
lahf
addr16
push
dec
pop
int
out
pop
and
ins
jle
xlat
jg
pop
inc
pop
test
jb
hlt
push
std
add
and
(bad)
test
outs
jnp
jb
mov
bound
and
stc
pop
repnz
mov
adc
push
arpl
jg
jbe
jns
and
and
lods
lahf
jae
ret
xor
shl
mov
ss
xchg
scas
and
sub
(bad)
adc
adc
cmp
scas
mov
add
lds
call
or
adc
rol
(bad)
pop
xchg
and
je
repnz
push
out
and
pop
mov
mov
ficom
pop
out
push
mov
xor
cdq
fcom
leave
mov
push
mov
neg
jb
dec
jp
rcr
push
shl
pop
(bad)
mov
xor
jmp
sub
jmp
pop
inc
and
sbb
cmp
push
outs
repnz
stos
or
sbb
gs
push
lock
lea
aaa
mov
xchg
or
adc
retf
xor
pop
sbb
jns
pop
jne
xor
mov
mov
ja
ret
push
ror
fld
iret
push
icebp
sbb
xchg
mov
jo
sub
push
pop
mov
test
push
pusha
sbb
inc
mov
cdq
int3
aas
mov
adc
inc
adc
imul
push
shr
in
inc
sub
pop
mov
sub
inc
cli
dec
jbe
push
sbb
fucomp
aad
enter
mov
call
mov
shl
mov
popf
mov
push
fldenv
jo
and
xchg
arpl
aas
data16
imul
xchg
xor
mov
mov
inc
call
dec
(bad)
callw
xchg
mov
and
bnd
imul
idiv
cmp
mov
inc
fwait
(bad)
out
mov
add
inc
call
mov
mov
pop
and
add
(bad)
xor
pusha
das
jnp
add
popf
arpl
adc
out
cmp
lods
inc
xchg
sbb
fisttp
mov
fisub
inc
or
test
add
sbb
jecxz
movs
ret
and
jno
jmp
cwde
ja
in
lds
push
out
xchg
sysret
xor
repnz
dec
popf
and
cs
and
cmp
ins
or
ja
mov
fxch
js
pop
jo
movs
pop
push
outs
cmp
test
or
and
test
cmp
outs
stc
test
fistp
pop
lds
mov
loopne
push
cdq
xchg
or
jno
adc
popa
push
fmul
jp
fucomp
iret
push
out
pop
xor
retf
mov
into
ror
sti
movs
in
sub
ins
add
jg
adc
(bad)
call
jo
dec
mov
gs
(bad)
out
add
nop
xor
pop
sub
xor
dec
or
add
push
jnp
jns
mov
pusha
xor
cdq
xchg
es
jle
fcom
retf
mov
rcr
adc
ja
lea
call
inc
sub
fild
repz
cmp
pop
xor
test
xchg
les
adc
imul
adc
inc
xor
nop
jp
or
adc
inc
adc
inc
dec
pushf
jo
stos
jno
aas
xchg
xor
das
mov
and
fadd
out
inc
sar
in
sbb
lods
movs
adc
and
pusha
inc
inc
fcmovu
jl
or
sbb
bound
push
mov
xchg
(bad)
leave
xchg
test
mov
pop
fadd
loopne
sar
(bad)
movs
lock
sbb
xchg
stos
fs
icebp
xlat
nop
cmps
add
pop
add
xor
sub
inc
mov
cmps
test
mov
call
out
jmp
shufps
cmp
iret
bound
xchg
ror
dec
and
shl
repnz
shl
into
sbb
ins
(bad)
imul
mov
push
int3
push
test
xor
int
gs
mov
cmp
adc
cmp
mov
xor
pusha
fwait
push
jmp
pop
pop
test
adc
scas
adc
pop
pop
push
sbb
or
adc
leave
call
xlat
rcl
mov
ja
pop
mov
cmps
imul
int3
mov
jle
xor
push
dec
test
fadd
mov
add
punpckhdq
or
xor
inc
les
iret
jae
popa
cdq
ins
repnz
ds
sahf
or
jmp
into
cmp
scas
outs
je
and
or
std
or
call
add
popa
lds
cmp
xor
or
mov
lock
lods
stos
out
push
jnp
cmc
sub
add
hlt
dec
lods
rcr
cmc
lahf
loope
push
xor
xchg
and
add
sub
xor
xor
dec
rcl
movups
shr
jns
adc
aam
stos
div
push
xor
push
inc
jp
inc
aaa
dec
xor
cmp
mov
int
ja
loopne
inc
mov
sbb
cmps
xchg
hlt
sbb
aas
push
pop
repz
rcr
imul
sbb
loop
cmps
jg
and
add
fldcw
pop
add
xlat
xchg
hlt
and
aam
and
sbb
add
stos
data16
push
jmp
stos
pop
pop
mov
cmp
and
aam
je
in
push
cmp
cmp
sbb
test
adc
std
inc
sbb
xor
(bad)
push
jno
cmp
or
cmp
data16
fcom
pop
dec
je
mov
sub
or
test
sub
lods
adc
xor
and
aad
pop
jns
repz
scas
outs
lea
mov
movs
and
add
inc
outs
cs
jbe
or
leave
outs
cmp
mov
add
(bad)
out
sbb
sbb
mov
cmp
imul
mov
dec
mov
das
dec
into
or
pop
ins
mov
adc
js
sbb
pop
out
fs
sub
mov
or
or
mov
pop
into
fistp
out
cwde
mov
jle
fnstcw
push
jae
nop
pop
out
pop
dec
inc
push
xor
out
fnstcw
es
mov
mov
xchg
adc
mov
mov
xor
mov
mov
jmp
push
adc
fadd
scas
mov
sbb
bnd
and
cmc
icebp
cmp
lea
mov
inc
xchg
mov
fnstsw
das
mov
mov
push
sti
(bad)
test
push
or
mov
fdivrp
mov
movs
shl
jle
(bad)
xchg
adc
sbb
xor
push
sbb
push
jmp
test
imul
in
push
sub
xor
cmps
mov
in
cwde
or
xchg
cwde
outs
shr
adc
fnstsw
je
popa
mov
int
sbb
les
pop
out
scas
inc
clc
xchg
add
inc
test
lods
int
mov
mov
cmp
test
add
jns
sti
int
sbb
ret
mul
and
in
pop
leave
call
ds
lahf
xchg
xchg
inc
and
out
pop
pop
in
or
arpl
cmp
loop
cwde
or
mov
jp
sbb
cmps
lock
jg
jno
xchg
xor
mov
ja
adc
jmp
xchg
jno
mov
imul
ins
jb
add
xor
sbb
dec
cdq
mov
test
inc
mov
and
and
out
or
sbb
enter
jge
xchg
test
mov
mov
push
inc
xor
xchg
mov
jmp
inc
mov
clc
push
cld
add
and
int3
clc
mov
jne
inc
out
cmp
cmp
sub
mov
adc
or
add
(bad)
out
cmp
mov
clc
cmc
retf
cmps
adc
adc
cmp
cmc
fisub
jmp
pop
dec
mov
dec
popf
add
cdq
cmp
sbb
scas
aas
push
inc
xor
neg
lea
sub
mov
int3
pushf
ret
cdq
xchg
das
jp
ins
sahf
sub
inc
(bad)
loop
pop
lea
mov
jns
and
dec
and
cmp
cmps
(bad)
stc
jnp
sbb
(bad)
arpl
mov
push
jne
and
pop
add
mov
rcr
sbb
call
retf
call
in
mov
xchg
jmp
adc
loop
cwde
enter
push
pop
mov
dec
inc
stos
pop
(bad)
pop
push
jle
inc
mov
fistp
xchg
(bad)
sbb
or
push
aaa
lods
ret
mov
mov
fs
or
inc
jmp
pop
cmp
cmp
jp
adc
cmp
adc
inc
pushf
cmp
and
cmp
cmp
sub
xchg
cmp
mov
and
mov
dec
dec
push
sahf
adc
cld
js
das
(bad)
in
call
jl
add
les
inc
addr16
jecxz
jle
cmps
mov
cmps
scas
jl
aad
pop
cmp
mov
mov
or
loopne
loope
dec
xchg
pop
xchg
push
dec
xor
push
mov
mov
popa
adc
addr16
cmp
fyl2x
jl
push
dec
test
mov
push
call
and
cdq
jo
sbb
loop
movs
and
shr
(bad)
lock
adc
mov
stos
mov
jmp
pop
cdq
cwde
mov
imul
ror
dec
mov
inc
(bad)
xor
aaa
xor
outs
movs
pushf
scas
(bad)
adc
sbb
das
into
add
retf
adc
xchg
mov
cmp
xor
rcr
fcmovnbe
sbb
dec
pop
loope
shr
push
jmp
lock
test
xlat
cmp
ins
(bad)
clc
pop
sar
out
pop
push
das
adc
jge
xchg
ja
in
nop
jno
bound
mov
mov
mov
outs
imul
xchg
outs
cmp
add
sub
xchg
ins
cmp
(bad)
sub
xchg
(bad)
shr
inc
shl
and
or
movs
jae
inc
test
inc
mov
es
fnstsw
retf
lahf
repz
lds
mov
pop
sbb
mov
ror
lahf
sbb
dec
push
cmps
stos
bound
sahf
js
mov
daa
bnd
dec
push
pop
or
inc
ret
retf
mov
leave
inc
leave
push
test
dec
or
loope
inc
lahf
dec
push
mov
xor
lods
xchg
std
cmc
pop
and
jns
pop
ror
sub
pusha
leave
loop
inc
cmp
jg
xchg
out
out
adc
sub
fnstenv
sbb
jb
dec
sti
inc
lds
mov
popa
inc
iret
or
mov
fiadd
push
loopne
push
popf
add
fadd
xchg
cdq
push
inc
das
jge
mov
test
mov
mov
and
out
cmp
inc
lahf
(bad)
call
or
pushf
mov
aad
cli
pop
test
std
mov
inc
cmp
xor
retf
cdq
inc
adc
mov
mov
jne
jno
and
xchg
loop
pop
repnz
jmp
hlt
cmp
push
lods
jmp
(bad)
arpl
sbb
xchg
xchg
ret
dec
movs
mov
and
xchg
mov
mov
add
bound
and
mov
pushf
pop
movs
es
loope
mov
push
je
outs
mov
test
enter
pop
fdiv
xchg
cmp
jp
pop
sub
or
mov
scas
add
jbe
pop
pusha
mov
sti
inc
and
imul
push
xchg
nop
bound
ja
in
int
mov
jecxz
cmp
(bad)
or
jmp
test
cdq
push
fcomip
jnp
mov
mov
in
mov
ss
dec
ins
popa
(bad)
(bad)
xor
jae
mov
in
hlt
mov
sub
jb
xor
retf
push
mov
sbb
inc
mov
jb
int
enter
lods
call
pop
xlat
inc
lods
popa
shl
daa
call
gs
ja
mov
clc
add
jl
js
sbb
enter
lods
mov
ins
rep
inc
or
out
add
push
sub
fwait
pop
test
pop
pop
fimul
fidivr
in
sbb
mov
ret
push
cmc
stc
rcr
pop
jl
push
jns
test
or
icebp
lahf
sbb
pop
sub
aad
(bad)
pop
sbb
adc
mov
inc
inc
xchg
mov
repz
outs
daa
ret
ficom
dec
dec
shl
jns
inc
lock
xor
pop
xor
ror
repz
in
mov
add
jno
mov
ret
jl
and
fld
retf
push
cmp
sbb
xchg
mov
cs
add
(bad)
pop
stos
imul
sbb
add
mov
ret
(bad)
aad
inc
mov
xchg
jns
inc
popf
push
push
jb
and
push
cmp
xchg
repz
(bad)
fdiv
mov
jns
mov
jo
loopne
sub
pusha
dec
mov
clc
or
dec
enter
sbb
es
arpl
out
mov
push
shr
jp
je
stos
dec
into
daa
dec
push
lock
push
and
neg
mov
loopne
(bad)
jae
mov
popa
mov
mov
push
inc
push
pop
or
add
fwait
outs
jp
mov
add
test
mov
cmps
pop
mov
fdiv
mov
sti
or
mulps
xor
ins
std
push
xor
aaa
mov
es
jg
add
jnp
enter
mov
lea
xor
mov
xlat
cmps
mov
(bad)
inc
add
cmc
mov
jge
stos
bound
int
cvtps2pi
js
adc
rcr
pop
mov
jo
mov
mov
call
cmp
sbb
cmc
nop
cmp
push
pop
jno
cmps
cmp
pop
fcomp
push
xchg
(bad)
xlat
jns
pop
popa
push
cmp
pushf
add
jns
(bad)
loopne
mov
(bad)
imul
jle
ret
cwde
jo
mov
inc
cmp
in
inc
sub
mov
mov
icebp
push
xchg
(bad)
arpl
jp
arpl
(bad)
sbb
sub
jnp
in
jle
mov
mov
fwait
retf
adc
and
rcl
test
sub
dec
aam
mov
pop
push
daa
ds
xchg
pop
pushf
rcl
fwait
hlt
retf
std
push
xchg
les
es
mov
sbb
adc
mov
test
add
push
pop
inc
mov
jbe
mov
fistp
sbb
cmp
rcl
arpl
mov
or
jle
in
push
or
pusha
cmc
out
dec
add
pop
and
jmp
xchg
aaa
add
inc
lds
cli
xor
out
adc
div
call
into
imul
mov
retf
dec
and
pop
aam
in
aad
push
add
cmps
mov
(bad)
jne
(bad)
jns
jp
mov
dec
imul
jmp
test
in
add
icebp
jns
(bad)
push
movs
ss
mov
imul
mov
push
out
icebp
ror
je
mov
jmp
push
stc
inc
lods
arpl
inc
jne
xor
(bad)
ja
fldenv
scas
test
push
iret
and
sub
adc
sub
cmp
imul
ret
cmp
cwde
cmp
jle
(bad)
xchg
cdq
xor
push
loop
std
jge
sub
(bad)
stc
test
in
js
push
lahf
pop
adc
push
mov
mov
inc
ja
sbb
xchg
not
jne
add
in
test
loopne
stc
add
dec
xlat
dec
push
cwde
adc
fbld
pop
mov
push
sub
mov
ja
sbb
xor
pop
inc
addr16
ds
add
movsx
dec
loopne
dec
adc
push
sar
sub
xor
sbb
adc
pop
inc
or
test
rcr
addr16
ins
sbb
popa
push
jb
mov
test
stos
mov
inc
or
add
(bad)
xor
aam
fbstp
lds
shl
mov
add
sbb
pop
dec
out
pop
outs
jmp
sbb
sub
jns
std
inc
and
lea
stc
loopne
neg
inc
inc
and
ds
push
mov
movs
(bad)
movsx
rcl
in
pop
aad
add
mov
push
adc
jl
imul
mov
push
push
fdivr
adc
(bad)
js
rcl
fnstcw
out
jo
jp
push
jbe
pop
stc
inc
dec
enter
arpl
ins
and
mov
into
ss
pusha
lahf
ret
cli
jge
jmp
push
adc
mov
mov
rol
mov
retf
push
cmp
das
pop
enter
adc
loopne
mov
jg
xchg
or
loop
iret
cs
xchg
retf
bound
(bad)
in
in
cdq
lods
js
adc
mov
cmps
pop
add
loopne
out
fwait
mul
mov
sbb
mov
cmp
jecxz
mov
fs
inc
(bad)
pushf
or
les
jmp
fld
add
cmp
jp
shr
fcomip
arpl
test
dec
mov
inc
sti
mov
push
or
pop
xchg
call
out
add
push
mov
mov
std
js
lahf
sub
dec
loopne
inc
jle
or
jb
retf
inc
sbb
rep
sti
pop
inc
fidiv
and
lock
sub
ss
loope
repnz
dec
sbb
sbb
push
cmc
dec
enter
cs
loop
pop
enter
ins
or
cmps
push
arpl
(bad)
imul
push
and
mov
mov
neg
test
imul
rcr
mov
cld
inc
imul
ds
stos
in
mov
pop
fsub
fcom
mov
jg
and
adc
ds
jns
xor
addr16
test
stos
ins
push
clc
adc
sub
xor
dec
mov
adc
mov
fimul
adc
into
jno
dec
outs
push
cli
or
or
test
dec
adc
pop
not
les
hlt
sbb
aaa
fsub
pop
daa
or
ds
mov
and
push
(bad)
mov
mov
push
jmp
xor
call
xchg
mov
jecxz
xor
enter
push
in
ficomp
inc
push
and
ss
test
lahf
js
pusha
inc
xchg
(bad)
in
std
xchg
xchg
loop
inc
imul
clc
test
pop
jmp
ss
pop
add
aam
int
push
lds
sub
jae
mov
jecxz
imul
xchg
push
inc
sub
sbb
sub
jne
stc
xchg
shr
not
test
int3
sbb
je
jne
and
and
ror
sub
ins
xor
dec
jmp
xchg
jmp
cld
cmp
lock
push
pop
or
xor
leave
(bad)
(bad)
scas
jmp
sub
inc
test
mov
popa
rcr
xor
inc
adc
(bad)
dec
and
pop
pop
mov
les
popa
jp
and
jle
cmp
fild
pop
scas
add
rol
xor
in
sbb
jns
dec
add
sub
jmp
pop
inc
fsubr
imul
xchg
retf
and
add
push
jbe
fimul
pop
cwde
and
imul
iret
(bad)
stos
fild
dec
fwait
gs
repnz
or
adc
lods
mov
sti
dec
xchg
mov
cld
(bad)
jmp
mov
cmps
adc
fist
pop
loopne
call
jge
sub
jbe
xchg
xchg
enter
mov
fsub
push
lods
dec
pop
mov
add
ds
add
inc
push
adc
repnz
inc
(bad)
xor
aad
out
ins
sbb
jmp
scas
xchg
outs
mov
ja
inc
add
jmp
xor
and
ret
and
loope
js
test
xchg
jecxz
push
xchg
sbb
jae
sub
sbb
imul
push
mov
iret
call
pop
add
sti
or
dec
and
test
mov
push
jmp
loopne
mov
cmp
cmps
test
and
jge
imul
retf
in
jns
cmps
(bad)
pop
(bad)
dec
push
xchg
mov
es
aaa
and
mov
sahf
mov
push
shr
and
or
push
sub
mov
mov
and
das
add
cwde
test
jmp
sub
pop
sbb
add
push
imul
push
sti
add
xchg
call
mov
add
sbb
xor
add
popf
outs
add
mov
outs
pop
pop
jns
xchg
inc
aaa
jb
sub
inc
xchg
test
xor
aaa
pop
retf
mov
(bad)
cmp
cmp
mov
sbb
jg
mov
add
dec
cmp
call
imul
sahf
iret
adc
inc
outs
mov
je
mov
hlt
sub
cwde
push
sub
test
jecxz
call
push
icebp
sub
dec
pop
inc
dec
rol
xchg
movs
push
enter
dec
sbb
adc
fnstcw
in
arpl
sub
in
cmp
xor
sbb
mov
jb
inc
adc
mov
fld
xchg
jmp
xor
mov
cs
ss
arpl
dec
das
dec
sbb
push
adc
push
fwait
push
sti
lds
imul
lods
cmp
inc
popa
pop
mov
inc
mov
jmp
fnsave
mov
popa
fisttp
inc
add
inc
das
loopne
adc
icebp
mov
leave
movs
cmp
mov
jno
mov
adc
or
pop
jns
sahf
sub
mov
or
daa
aam
repz
es
fsub
mov
dec
retf
xor
jl
das
sub
pop
push
les
rcl
pusha
and
mov
sbb
pushf
fs
fucomp
lea
pusha
fwait
dec
hlt
imul
xchg
daa
xor
addr16
out
fwait
mov
hlt
add
out
and
aas
jecxz
dec
push
sti
aam
cli
pop
push
mov
std
sbb
jl
fld
mov
into
or
imul
mov
out
jge
rcr
fnstcw
leave
dec
cmp
mov
mov
outs
jg
mov
repnz
inc
(bad)
shl
cmp
xchg
das
sub
or
in
pop
test
fsubr
ds
mov
movs
je
mov
jae
dec
shl
inc
sahf
adc
pop
cmps
leave
dec
mov
scas
jbe
data16
pusha
out
inc
cmps
xchg
adc
leave
pop
and
(bad)
sti
xchg
scas
jge
xor
sbb
xor
icebp
xchg
mov
and
add
pop
iret
xchg
ins
inc
gs
push
sbb
adc
jno
loop
dec
mov
popa
pop
ret
daa
jp
or
mov
cmp
fmul
mov
cmp
loop
sub
int
scas
(bad)
int
lock
lods
sar
add
es
dec
mov
fstp
outs
and
xor
js
add
mov
sbb
(bad)
push
adc
repz
call
dec
int
fwait
into
pop
xchg
add
mov
add
scas
mov
cmc
icebp
test
fs
and
scas
inc
ja
sub
cmp
dec
xchg
lods
xor
xor
adc
inc
pop
(bad)
iret
ficomp
pop
jl
mov
mov
dec
scas
daa
xlat
jle
sbb
nop
jo
test
imul
mov
clc
mov
sbb
movs
or
jge
sub
push
fdivr
je
mov
mov
or
sub
adc
(bad)
cmp
mov
mov
cmp
scas
es
mov
push
sub
out
mov
add
test
inc
out
fisttp
scas
out
int3
jg
pop
fs
inc
sub
and
or
in
cld
les
mov
popf
arpl
fstp
shl
stc
(bad)
lods
add
scas
lea
add
je
and
pop
in
jb
out
push
aas
jmp
scas
xchg
xchg
cmp
mov
push
mov
dec
mov
sub
fcomip
(bad)
mov
and
and
(bad)
cdq
(bad)
inc
cmp
(bad)
(bad)
mov
dec
push
xchg
cmp
adc
push
bnd
dec
ja
mov
mov
aad
inc
cmp
stos
sbb
push
nop
or
and
in
push
sub
add
fwait
aaa
or
mov
mov
cld
dec
cwde
rcr
(bad)
cdq
add
adc
cmps
push
lock
cli
adc
cmp
lds
ret
mov
jbe
xlat
sub
sbb
scas
push
pop
jmp
cmp
and
push
sahf
sbb
test
inc
xchg
sti
inc
cmp
push
jno
sahf
ucomisd
mov
ins
mov
fist
aaa
das
mov
and
into
push
out
ins
inc
lods
adc
push
jbe
add
enter
div
pop
in
sub
pop
es
in
movs
xchg
outs
mov
div
cmp
push
(bad)
gs
loope
push
dec
xchg
dec
fild
stos
mov
pop
jmp
in
pop
sti
sbb
movs
std
scas
adc
std
and
add
data16
pop
mov
dec
pop
mov
and
xchg
(bad)
in
ins
cld
ja
xor
inc
mov
fistp
repz
cmps
jae
repz
lock
ss
inc
jmp
jecxz
ret
daa
pop
and
add
cmps
or
(bad)
(bad)
in
xchg
and
or
xlat
jle
and
xchg
dec
out
sahf
loop
and
push
enter
xchg
push
mov
add
dec
(bad)
nop
loope
and
iret
(bad)
mov
pop
push
adc
fcomp
jp
repz
cld
imul
retf
cmp
push
xchg
sub
outs
cmp
pop
and
rcl
icebp
pop
iret
mov
xor
dec
js
xor
mov
mov
mov
push
pop
stc
inc
dec
xchg
(bad)
fst
clc
mov
mov
push
rdtsc
mov
xchg
pop
outs
xchg
mov
ret
mov
loopne
retf
jmp
push
dec
mov
or
imul
dec
sub
and
fcmovne
and
xor
cmc
fisttp
cmp
xchg
or
inc
aas
mov
xchg
cmps
xor
mov
adc
mov
mov
pop
adc
ret
jg
jg
pushf
cdq
cmp
push
fsubr
ret
and
push
mov
cmp
jo
pushf
not
xlat
push
(bad)
xor
mov
xchg
fidivr
(bad)
jge
ret
mov
push
adc
(bad)
ss
mov
icebp
jmp
and
aad
jmp
lods
shr
inc
mov
std
pop
mov
inc
ds
mov
mov
add
imul
leave
in
mov
mov
and
sar
retf
bound
fsubr
mov
out
adc
cmp
outs
xchg
fs
test
xor
sub
clc
ret
sbb
pop
(bad)
dec
inc
in
dec
sar
movs
jmp
jl
(bad)
cmp
cmp
add
loope
fisttp
out
loop
repz
push
dec
nop
cld
test
inc
(bad)
xchg
cmp
not
or
sub
inc
xor
std
mov
sbb
addr16
push
outs
arpl
adc
loope
pop
aaa
stos
or
mov
jo
push
ins
cmp
xor
int
sbb
pop
add
push
(bad)
mov
jb
cmc
jmp
cmp
or
mov
xchg
xor
(bad)
dec
dec
push
pop
and
icebp
jmp
xor
mov
inc
in
(bad)
lods
js
or
fwait
nop
xchg
dec
lahf
and
jmp
mov
std
dec
inc
test
jbe
into
mov
daa
xchg
xchg
xor
and
mov
xchg
sub
push
mov
or
std
cmc
call
popf
popa
or
or
inc
sub
gs
sub
ret
xor
dec
shl
or
fidiv
jae
cmp
cmps
adc
cmp
mov
sub
loop
pop
lahf
xchg
or
(bad)
and
add
sbb
jl
daa
mov
mov
pop
and
jmp
aas
loope
pushf
push
sbb
in
es
cli
sub
in
repz
nop
mov
es
push
shl
and
push
lods
pop
xchg
out
xchg
xchg
paddsb
pop
outs
fadd
xor
pop
sub
adc
or
jne
ret
mov
pop
aad
addr16
aad
and
pop
xchg
push
push
push
or
dec
jl
(bad)
cmps
fist
add
lahf
es
pop
mov
shr
hlt
cmp
dec
inc
dec
and
mov
cmp
or
mov
cmp
or
and
xchg
dec
and
ret
loope
mov
out
xlat
pop
cs
leave
or
and
jg
loop
fsubr
mov
fs
out
mov
dec
idiv
mov
iret
fcmovu
loop
xor
out
stc
fisttp
jmp
ss
out
push
shl
sub
sbb
popa
ror
es
das
sbb
add
inc
repz
ins
pusha
(bad)
call
push
out
inc
inc
fs
mov
jecxz
xlat
inc
jmp
call
push
stos
push
adc
sbb
clc
std
iret
pop
push
cmp
jmp
into
int
push
xor
adc
leave
daa
adc
iret
xor
xlat
mov
out
and
lds
jo
movlps
and
add
shr
inc
ins
shr
xor
adc
int
(bad)
mov
xchg
outs
ins
icebp
push
push
call
stos
inc
loope
jmp
cwde
jl
mov
mov
test
test
ror
hlt
shl
das
outs
lods
dec
sub
ret
dec
jns
in
out
sbb
popf
les
sub
push
pop
mov
dec
xchg
fisubr
jmp
adc
sbb
inc
call
xchg
pop
jo
push
enter
xlat
mul
punpcklwd
push
dec
and
sbb
add
(bad)
fist
lea
push
test
inc
cld
jp
fisub
out
popa
idiv
xchg
push
cmp
cli
sbb
outs
in
mov
pop
ret
movs
and
adc
mov
mov
shl
fidivr
cmp
lahf
retf
or
addr16
jmp
push
mov
cwde
in
and
ret
mov
mov
stos
popf
dec
mov
aaa
test
xor
fisttp
mov
cmp
push
cmps
push
in
scas
scas
push
lds
mov
xchg
lock
fs
test
mov
adc
popa
pop
mov
pop
nop
in
inc
enter
out
pop
and
mov
scas
addr16
dec
(bad)
push
cli
mov
outs
mov
pop
popa
fstp
sub
sti
in
sbb
ret
add
jmp
seto
jae
mov
cwde
js
adc
stos
pop
dec
test
mov
jg
dec
and
adc
inc
test
aam
cdq
add
imul
sbb
jbe
shr
dec
pop
repnz
out
push
jp
or
adc
rsqrtps
xchg
(bad)
xlat
shl
xor
enter
inc
mov
ficomp
xchg
(bad)
ja
iret
and
js
mov
rcr
ja
pop
xchg
pop
dec
cmp
mov
adc
xchg
arpl
(bad)
outs
(bad)
cmp
cmp
fidivr
dec
lock
inc
and
test
cmp
adc
xor
fdivr
push
das
imul
jg
imul
cwde
sti
mov
dec
jb
shl
sbb
mov
lock
dec
mov
mov
inc
cmp
push
add
xor
pop
ret
ja
int3
outs
cmp
leave
xor
loop
sbb
sub
popf
mov
jg
in
inc
add
adc
fstp
add
or
xchg
mov
cld
add
aad
jmp
stos
das
push
aam
pusha
or
lods
jmp
and
inc
or
mov
xlat
call
pusha
sbb
jno
xchg
shl
mov
icebp
jecxz
ss
or
inc
jnp
add
sbb
sub
int3
adc
pop
shl
pop
rcl
rol
lea
aam
mov
dec
inc
pop
int
mov
in
push
mov
add
inc
add
(bad)
mov
inc
(bad)
cmc
fld
int
iret
mov
push
push
jp
(bad)
jge
inc
xor
in
pop
cmp
jnp
or
pop
pop
pop
int
dec
sbb
and
ins
ds
dec
add
mov
jmp
out
cmp
imul
call
inc
mov
and
pop
pop
pop
sub
iret
imul
repnz
mov
or
pop
mov
mov
cmp
add
and
cmp
jmp
stos
ds
(bad)
and
jmp
cli
sahf
and
icebp
lahf
mov
popa
sbb
mov
popf
mov
fistp
dec
pop
(bad)
jle
movs
sbb
shr
add
aaa
(bad)
call
ins
fidivr
ds
bound
cld
popf
mov
scas
mov
test
es
repnz
mov
dec
imul
mov
jle
xchg
or
mov
out
retf
loope
xchg
sub
xor
call
sar
xchg
mov
pop
mov
pop
lods
into
adc
pop
dec
pop
cs
jbe
lock
add
pop
push
push
inc
int3
push
cmp
pop
ja
out
or
out
push
jle
adc
or
arpl
fisub
adc
sub
inc
xor
dec
mov
(bad)
or
lods
rol
and
inc
in
out
(bad)
(bad)
in
xor
fidiv
leave
lock
adc
(bad)
in
sbb
jle
jp
test
adc
mov
xlat
jp
inc
push
adc
mov
bound
(bad)
add
cmp
pop
inc
ror
push
sbb
push
sbb
shl
je
push
or
and
rol
jmp
and
and
rol
jecxz
cli
xor
mov
scas
mov
cdq
mov
scas
or
ins
pop
ret
loopne
mov
push
dec
(bad)
jle
leave
xchg
push
rcr
int
jge
dec
test
mov
mov
add
mov
out
inc
out
movs
jp
fwait
int
test
push
test
daa
mov
pop
test
add
mov
jg
lock
push
and
rol
xor
push
mov
jnp
mov
inc
test
and
lds
call
pop
arpl
pusha
repz
inc
adc
pop
fsub
mov
push
ss
sub
cmp
jmp
test
stos
jmp
or
popf
push
and
or
aaa
into
sub
imul
dec
test
sar
cmp
retf
bound
xchg
inc
pop
cmp
(bad)
or
outs
jge
fdivr
fwait
daa
mov
loop
js
push
mov
or
xchg
dec
push
or
mov
sbb
lock
pop
ja
icebp
xchg
sub
imul
dec
cmps
adc
add
test
dec
jl
or
lock
push
fsubr
in
xor
inc
dec
xor
movs
popa
cmp
adc
pushf
and
push
movs
scas
and
call
inc
out
out
fs
mov
icebp
sbb
adc
movs
dec
scas
jae
sbb
sbb
xor
jns
sub
ret
jp
dec
retf
mov
neg
jne
or
push
pushf
repz
mov
mov
inc
ins
popf
or
imul
cwde
cmc
pop
dec
pop
sub
ret
adc
mov
xor
xchg
inc
(bad)
adc
inc
xlat
cmp
loopne
adc
mov
xor
sbb
jns
cmp
loopne
cs
inc
mov
add
mov
dec
in
sbb
push
push
stos
or
inc
xchg
int
(bad)
scas
cmps
icebp
jnp
xchg
pusha
push
mov
push
push
movs
pop
in
or
xchg
push
add
rcl
cmps
mov
out
mov
sub
sub
sahf
inc
xchg
mov
lea
or
pusha
cmp
cli
push
mov
sbb
mov
mov
cli
in
sbb
jne
sub
arpl
jge
dec
xlat
fdivr
pop
or
mov
scas
retf
inc
stc
xor
dec
mov
xchg
sub
jle
inc
sti
pop
enter
mov
mov
push
movs
adc
js
jge
(bad)
cmp
mov
(bad)
call
aad
jmp
or
adc
daa
jge
shl
mov
repnz
and
add
imul
pop
movs
movs
xchg
fucomp
mov
sub
jecxz
fdiv
pop
mov
cmp
mov
lock
aaa
aaa
add
shl
and
(bad)
adc
popf
push
in
ret
enter
iret
fwait
mov
das
popf
scas
out
fs
loopne
and
jmp
push
push
adc
in
sbb
pop
mov
add
dec
jecxz
inc
pop
(bad)
pusha
add
retf
mov
sub
ins
add
cwde
stos
clc
sub
in
adc
push
jmp
jae
sbb
cmp
push
sar
scas
test
dec
aas
aam
test
movs
push
aam
pop
frstor
xor
jmp
cmp
sub
leave
shr
pop
push
add
inc
mov
sub
xchg
jb
popf
inc
pop
adc
sub
push
xor
xchg
jnp
pop
ret
mov
xor
in
cmp
jge
mov
pop
add
(bad)
cmp
pop
xchg
and
dec
in
add
adc
xchg
cmp
xchg
or
out
dec
fwait
in
cmp
or
ret
mov
popa
(bad)
js
mov
mov
addr16
scas
aam
jne
push
or
add
fs
fwait
nop
out
inc
jmp
mov
in
xchg
scas
and
retf
leave
pop
push
xlat
inc
sub
enter
mov
mov
xchg
rcr
pop
ss
pop
mov
cmp
xor
popa
loope
inc
imul
mov
imul
(bad)
pop
loopne
jnp
cmp
dec
xor
ret
data16
mov
xchg
cli
jmp
mov
popf
sbb
test
push
nop
mov
aam
adc
ja
ds
and
cmp
sti
leave
gs
mov
or
bound
jp
sub
lock
mov
jae
push
push
gs
sub
idiv
inc
sub
out
ror
setno
or
in
push
in
cmps
mov
fistp
mov
mov
fsub
out
xor
aas
mov
adc
jmpw
xchg
or
lds
fsubr
mov
das
scas
outs
jecxz
inc
mov
cdq
mov
mov
fisub
jno
mov
cli
xchg
nop
sbb
push
adc
lock
addr16
mov
xor
adc
outs
and
(bad)
fiadd
mov
pop
(bad)
mov
sub
or
pop
pop
loope
es
(bad)
xchg
sbb
and
sbb
(bad)
push
push
in
add
imul
icebp
xchg
pop
dec
xlat
fistp
mov
xchg
mov
sbb
push
mov
mov
xchg
shr
xor
mov
mov
pop
jae
retf
push
pop
(bad)
mov
in
cmp
out
iret
div
pop
movs
outs
leave
jle
and
pop
xor
cmp
mov
mov
sub
pop
ins
retf
stos
add
or
ret
sub
out
les
lock
ja
dec
adc
or
inc
(bad)
pop
push
loopne
xor
in
movs
xchg
test
test
dec
jo
aad
add
(bad)
or
and
loope
test
movs
js
xor
aas
dec
add
pop
jmp
cmp
lods
cmps
aam
xlat
add
mov
pop
adc
pop
pop
mov
(bad)
pop
(bad)
adc
and
movs
lea
jbe
test
xor
or
(bad)
shl
xchg
pop
cmps
sti
xchg
xor
fist
es
outs
imul
xchg
dec
add
das
cmp
repnz
push
and
cld
stos
adc
cmp
mov
mov
jle
pop
push
adc
fwait
mov
mov
and
dec
inc
dec
jbe
jb
xchg
pop
retf
test
adc
pop
jmp
add
int3
loope
xor
dec
mov
(bad)
push
pop
rcr
call
jp
push
popf
mov
test
add
ret
pop
fdivr
add
add
mov
adc
or
xchg
or
sub
ficom
xor
ins
arpl
and
pop
clc
in
mov
and
push
cmp
popf
or
jecxz
jo
loope
sbb
push
cmps
dec
pop
ds
or
inc
inc
inc
mov
sbb
mov
call
add
sbb
xor
inc
or
out
pop
lods
ror
push
loope
nop
lods
call
push
add
dec
mov
sahf
loopne
xchg
or
mov
lock
xchg
test
outs
push
push
mov
test
stos
adc
js
daa
enter
cld
push
scas
dec
or
mov
bound
adc
not
mov
pushf
(bad)
jno
jl
fstp
jne
lock
and
(bad)
call
inc
mov
das
jbe
call
inc
cmps
jnp
fdiv
or
sbb
push
sbb
dec
cmp
push
xchg
inc
lds
iret
mov
xlat
sbb
cld
or
mov
imul
mov
test
xchg
ror
sbb
lahf
or
xchg
sbb
and
sub
mov
cld
push
dec
and
adc
inc
ds
or
ficomp
(bad)
sbb
and
xor
pop
push
ss
out
jno
loop
aaa
dec
ficomp
ficomp
sbb
jge
pop
xchg
scas
add
mov
mov
dec
and
pop
xchg
xor
jmp
in
mov
dec
pop
lods
pop
loop
adc
pop
rcl
(bad)
inc
lods
call
test
jae
cmp
lahf
das
adc
push
popf
sub
imul
pop
push
retf
mov
aaa
mov
jne
mov
dec
sub
adc
xor
sbb
nop
ins
and
mov
ror
xor
sahf
push
out
out
(bad)
dec
call
and
maxps
mov
push
jmp
cmc
adc
jmp
sti
push
sbb
xor
push
mov
xchg
mov
fs
daa
adc
fsub
inc
pop
jmp
jo
in
cmp
fldcw
aas
inc
popf
(bad)
ins
fadd
imul
sahf
mov
mov
movs
lods
sub
push
jmp
adc
rcl
sbb
inc
or
mov
mov
loope
ins
adc
(bad)
xor
push
and
dec
pop
aaa
jge
mov
fdivr
fmul
repz
mov
cld
sub
outs
and
loopne
adc
sbb
cmp
ss
xor
enter
xor
add
scas
xchg
jnp
mov
inc
cs
fld
shl
jb
dec
in
mov
inc
xor
les
inc
mov
ins
cdq
pop
push
shl
div
cdq
mov
in
fiadd
adc
jno
mov
mov
arpl
aas
jbe
aad
outs
(bad)
push
inc
add
xchg
std
js
add
jnp
mov
sub
cs
add
inc
mov
inc
cmc
adc
rcr
adc
xchg
call
or
jmp
adc
nop
(bad)
js
sub
sub
lds
or
cmp
ds
in
out
push
in
gs
adc
xchg
and
maxps
fadd
test
mov
mov
out
dec
clc
(bad)
jl
mov
xlat
push
mov
bound
mov
dec
scas
mov
or
ficom
mov
ret
nop
aaa
es
jbe
or
fcmovbe
mov
sub
add
(bad)
fcmovbe
jne
iret
xor
inc
push
jmp
in
push
pop
push
dec
clc
cwde
(bad)
icebp
daa
gs
sub
pop
or
call
xlat
add
int
dec
fisub
adc
movs
and
cmp
out
movs
ins
pop
xor
fld
ja
(bad)
push
pmaxsw
test
inc
dec
out
cdq
ins
loope
retf
dec
push
dec
inc
pop
xchg
call
repz
cmc
test
pushf
mov
xchg
xchg
rcr
jne
mov
push
(bad)
mov
rcl
shl
ja
ss
pop
(bad)
push
sub
inc
sub
stos
jp
jle
(bad)
mov
xchg
fnstenv
jb
xchg
imul
xchg
cwde
sub
in
scas
fisttp
lea
loopne
mov
pop
adc
aam
adc
sbb
and
cdq
sbb
ficom
test
(bad)
jmp
cmp
jg
in
test
movs
div
xchg
int3
mov
aas
sub
push
lock
jbe
test
inc
rol
and
repnz
xchg
inc
mov
or
xchg
mov
xor
stc
rcl
ins
inc
enter
jmp
je
pop
xchg
es
sub
push
mov
sub
sar
pop
adc
inc
xor
shl
(bad)
in
jmp
mov
imul
mov
inc
mov
ret
xor
cwde
out
xor
jo
mov
cwde
cli
and
call
dec
arpl
dec
cwde
sbb
cmp
xchg
sbb
and
gs
in
or
dec
dec
xchg
pop
icebp
xor
push
pop
jb
(bad)
loope
add
sti
push
idiv
mov
hlt
mov
sub
mov
(bad)
adc
xchg
aas
lahf
mov
daa
pop
push
inc
nop
popf
push
dec
or
pop
mov
cmp
pop
out
outs
fmul
jecxz
dec
fs
xor
rcl
and
movs
xor
lods
daa
sbb
js
mov
outs
dec
push
xor
mov
xchg
add
or
add
fwait
push
inc
ret
mov
jmp
retf
loop
repz
xchg
or
mov
das
jg
scas
addr16
pop
sbb
inc
out
and
sub
jno
out
fimul
jb
mov
mov
les
push
jmp
rcl
pop
mov
pusha
add
stos
mov
dec
push
sub
lock
jb
mov
xchg
and
push
and
xchg
fstp
outs
adc
inc
push
pop
mov
push
(bad)
cmp
jne
or
lods
jmp
repnz
lds
lahf
mov
mov
mov
xchg
lsl
sub
sbb
outs
in
pop
push
punpckhdq
push
push
addr16
dec
idiv
add
mov
sar
or
add
nop
jmp
fcmove
lea
sbb
adc
sub
or
mov
xor
retf
sub
aas
jge
cmp
mov
in
outs
xchg
xchg
jb
add
sbb
out
std
pop
or
push
popf
or
mov
int
push
lods
fsub
dec
cmp
adc
inc
inc
lea
and
sbb
in
aad
mov
in
inc
fst
xchg
icebp
clc
add
daa
sub
(bad)
(bad)
scas
sub
mov
int3
inc
push
jmp
and
sar
xchg
outs
inc
(bad)
cmps
fisub
xor
xchg
ss
int3
jb
cdq
dec
enter
popa
mov
into
in
out
popf
push
out
dec
push
(bad)
sbb
ins
ds
(bad)
stos
out
and
or
mov
push
inc
pushf
pop
(bad)
xchg
test
jae
gs
inc
loopne
imul
repz
nop
and
adc
and
mov
pop
or
pop
ss
sub
xor
adc
cmps
mov
sbb
sbb
mov
fisub
(bad)
push
(bad)
je
les
jnp
and
fdiv
add
jle
adc
shr
in
xor
loope
add
call
jg
sbb
xlat
mov
outs
jmp
fsubr
out
mov
cwde
and
clc
add
xor
cmps
and
pop
push
das
mov
aaa
inc
cmp
jl
scas
inc
in
xchg
and
out
jle
(bad)
loopne
xchg
fldenv
mov
mov
cmp
and
leave
and
or
mov
xor
lods
cmp
les
xchg
jp
xor
sbb
mov
sbb
mov
pusha
call
out
fadd
sbb
ficomp
fistp
mov
rcl
loope
rol
adc
mov
and
or
pop
dec
fwait
adc
pop
in
and
ss
push
jl
enter
xlat
or
pop
ins
xor
loope
int
(bad)
sbb
arpl
(bad)
fild
sbb
call
retf
sub
pop
in
aam
add
xor
cmc
(bad)
shl
or
cmp
push
adc
outs
lds
lods
sub
(bad)
stc
rcl
gs
pop
icebp
adc
fdivr
and
adc
jle
push
fbstp
and
shl
pop
and
jb
adc
and
cs
retf
jne
adc
jmp
xchg
xchg
push
jmp
jl
data16
loop
mov
retf
push
sub
push
jne
jns
xchg
or
xor
mov
in
adc
sbb
jecxz
dec
add
push
add
(bad)
fisttp
xchg
adc
outs
call
cmp
dec
dec
or
xchg
int3
cmp
in
es
stc
push
fxch
pop
hlt
scas
and
jnp
loopne
and
inc
sahf
sub
push
call
dec
in
dec
mov
(bad)
aam
jnp
cmp
shl
(bad)
and
jle
adc
out
je
push
xchg
je
into
out
mov
jmp
jb
pop
int
cmp
or
je
mov
stc
and
je
out
pusha
mov
cwde
stc
sub
and
bound
xor
ret
and
call
fiadd
sahf
call
xchg
cmp
mov
push
rcr
add
ret
fsub
in
leave
stos
popf
icebp
shl
push
ins
out
cs
inc
jne
adc
sub
inc
(bad)
ret
fisub
and
add
dec
push
jne
inc
mov
out
adc
xor
cmc
jmp
jns
out
add
leave
retf
fisttp
jle
in
(bad)
cmc
mov
and
in
call
pop
mov
jnp
lahf
xor
mov
mov
out
push
lock
mov
test
aam
lea
push
dec
fisttp
push
leave
adc
gs
mov
inc
mov
movs
movs
sahf
or
or
push
dec
lock
pop
xor
or
xchg
retf
xchg
or
test
xchg
jmp
add
scas
add
inc
test
fcomp
add
xor
mov
and
stos
pop
mov
shr
push
lock
call
and
push
xchg
xchg
imul
sbb
add
sub
fidivr
aas
dec
ss
mov
gs
cld
sbb
ss
jl
bound
mul
test
push
mov
adc
cwde
add
neg
ss
arpl
dec
add
lods
sub
ret
adc
inc
push
and
das
jno
fmul
imul
or
and
xchg
int
div
iret
jne
stos
jecxz
aam
in
and
xchg
ss
test
shl
stc
or
cmp
mov
xchg
mov
in
mov
and
cmps
repnz
hlt
push
ss
adc
(bad)
ins
add
lahf
inc
push
ret
and
push
fwait
sti
loopne
push
sub
push
aad
stos
in
pop
idiv
push
push
enter
stc
test
call
sbb
adc
inc
sbb
jecxz
mov
add
and
iret
push
cmps
ds
lods
lea
push
popa
jmp
sub
inc
and
outs
aas
movs
ins
mov
cmp
call
or
sbb
jmp
addr16
call
adc
jle
(bad)
lock
cmps
sar
add
jle
and
call
add
aam
std
aam
rol
mov
repnz
lea
and
cwde
call
leave
pushf
mov
fsubp
ror
out
mov
test
sub
enter
adc
dec
or
ret
pushf
mov
add
lock
cld
mov
lock
pop
xchg
xchg
dec
mov
out
push
mov
outs
mov
pop
mov
addr16
dec
repz
mov
stos
mov
jp
add
xchg
pop
and
outs
loopne
je
adc
sub
pop
fwait
rcr
or
outs
sub
loope
mov
mov
gs
mov
sub
inc
loopne
pop
stos
cmp
imul
adc
xor
mov
mov
in
xor
into
mov
jmp
test
sub
fs
cwde
push
sub
push
cmp
mov
call
inc
test
mov
addr16
(bad)
lea
test
addr16
ret
mov
out
int3
add
mov
add
ret
cmp
cmc
loopne
fnstenv
ja
pop
sbb
retf
jmp
xor
mov
aam
mov
scas
aas
jo
scas
call
push
mov
inc
test
mov
(bad)
les
push
inc
retf
ja
cmp
popf
stc
lods
loop
pop
jle
xchg
and
dec
push
jecxz
arpl
adc
jecxz
jb
jg
push
sti
jg
push
dec
daa
imul
movs
jnp
sbb
or
xor
sub
inc
and
cwde
jp
adc
xchg
mov
pop
push
and
or
pushf
and
dec
push
fisttp
sbb
mov
or
cmp
outs
xchg
in
fisubr
popa
push
jne
cmp
dec
or
mov
bnd
push
ins
scas
and
sub
sub
or
pop
pop
out
or
aaa
adc
mov
inc
rol
xchg
xchg
push
fisub
js
xor
pop
inc
mov
pop
imul
cmc
cmps
mov
jmp
mov
adc
adc
scas
cmp
stos
dec
jne
stc
mov
in
daa
add
mov
fidivr
in
cli
dec
mov
and
ds
outs
xor
inc
dec
fldcw
out
in
lds
push
sbb
sar
out
and
sub
jg
hlt
cmps
or
mov
jecxz
fisttp
call
jp
cmp
jp
sub
dec
(bad)
data16
shl
loop
or
adc
sub
dec
mov
mov
inc
adc
dec
cmp
test
hlt
imul
cmp
int3
sub
ret
jmp
sbb
out
pop
mov
pop
push
in
into
cmc
dec
sub
pushf
push
addr16
pop
mov
push
jge
pop
xor
aam
fidiv
loop
in
cmps
fwait
and
ins
xor
dec
lahf
xchg
xor
cmp
scas
pop
mov
cmp
push
repz
int
mov
cmc
add
out
pminub
mov
retf
cwde
cmp
cmp
sbb
std
ins
ds
imul
jo
retf
and
pop
or
popa
add
add
out
xlat
jb
cmp
out
out
xlat
addr16
stos
sub
popf
and
retf
addr16
jecxz
pop
inc
ds
ds
mov
mov
mov
dec
pushf
imul
fld
sar
jb
call
sbb
or
fadd
cld
dec
dec
retf
add
sahf
mov
les
fmul
mov
push
nop
xor
inc
cmps
fisttp
push
mov
arpl
mov
sahf
dec
add
dec
btc
pop
xchg
clc
retf
in
jbe
mov
xor
fwait
jae
leave
push
jecxz
(bad)
ficomp
call
sahf
and
test
cmc
ror
mov
xchg
int3
retf
mov
inc
add
movs
retf
adc
inc
clc
aam
dec
and
jbe
mov
ins
cwde
pop
push
mov
and
add
ret
std
cli
ret
mov
lock
out
xor
inc
aad
jnp
mov
in
fs
push
jge
mov
mov
ins
ret
adc
sar
mov
jmp
cbw
outs
inc
xor
dec
arpl
cmp
dec
xchg
leave
lods
push
stos
les
(bad)
icebp
bound
iret
daa
push
fld
pop
sar
cwde
dec
outs
add
(bad)
adc
adc
jns
in
fsubp
push
movs
dec
imul
mov
ror
int3
pop
jl
das
stc
mov
dec
mov
fimul
lods
add
fldcw
jae
dec
jmp
xor
lds
inc
inc
mov
pop
mov
addr16
pop
xchg
push
pop
ret
jge
mov
push
into
(bad)
neg
call
pop
ds
scas
cmps
cmp
mov
adc
icebp
test
scas
mov
mov
jns
and
jecxz
xchg
push
mov
ret
idiv
mov
add
dec
dec
push
ins
or
(bad)
adc
aam
cmp
pop
push
mov
sub
lahf
ret
and
pop
lods
pushf
or
ins
xor
push
lock
inc
add
mov
call
or
in
mov
(bad)
cmp
nop
add
iret
jbe
(bad)
call
stos
pop
cmc
in
jmp
loop
xlat
(bad)
shl
test
jmp
sub
adc
(bad)
mov
xchg
repnz
ret
adc
ror
pmuludq
in
jne
push
mov
adc
aas
out
jne
sub
in
xor
dec
jo
aam
xor
xchg
cwde
adc
pop
pop
mov
xchg
inc
outs
jns
es
inc
jae
inc
jg
mov
rol
test
fs
xor
es
inc
nop
out
mov
mov
loopne
push
mov
movs
rol
sahf
xlat
add
imul
lock
dec
xchg
loop
not
cmc
sbb
into
lock
out
sbb
inc
sbb
(bad)
push
or
xchg
test
jbe
xor
and
test
or
add
jmp
push
mov
add
cmps
cmps
xchg
mov
repz
ja
ins
aas
cmp
ror
fwait
call
repz
cmp
rol
scas
add
pop
add
daa
dec
sub
xchg
sbb
out
mov
aad
add
ror
fcom
sub
dec
adc
(bad)
mov
mov
retf
movs
or
mov
mov
ds
jno
dec
(bad)
and
adc
fdivr
aas
jb
cmp
call
or
pop
dec
add
and
aaa
mov
add
arpl
cmc
mov
sub
mov
enter
rcr
pushf
cmps
ss
inc
out
stos
in
push
mov
repz
xchg
mov
inc
inc
and
stc
ja
sahf
pusha
add
cmp
arpl
les
pop
jmp
dec
(bad)
push
ins
test
aas
cs
aaa
daa
and
popa
ret
sbb
outs
lock
fimul
add
dec
fiadd
jecxz
push
fnstenv
adc
xchg
jnp
ja
test
jl
ins
jmp
aaa
test
sar
inc
jbe
and
test
add
or
popa
add
aaa
popa
movs
push
fs
xlat
jo
addr16
(bad)
popf
mov
dec
sbb
out
dec
mov
sub
out
loope
push
adc
cmp
in
jns
ret
cdq
or
cld
call
cmc
imul
pop
mov
push
pop
es
jge
scas
mov
in
jno
xchg
sahf
(bad)
jge
out
sub
call
sub
and
adc
cdq
push
cmps
or
retf
push
test
shl
pop
jno
cmp
popf
cmp
adc
xchg
push
push
sti
loope
es
xchg
dec
or
div
dec
adc
add
popf
cld
ins
add
pop
sub
add
inc
test
hlt
cwde
dec
popa
or
fs
cwde
(bad)
sub
mov
rcr
retf
add
sahf
xor
pop
and
add
xor
push
aad
cmp
push
(bad)
cwde
(bad)
push
xlat
xchg
cmp
scas
sti
jne
and
loope
int3
pop
fistp
adc
into
push
or
mov
jno
or
sbb
ja
test
mov
out
aad
bound
div
popf
aam
adc
cmp
mov
xchg
add
fwait
das
sbb
and
mov
add
out
sub
ror
call
sti
dec
test
(bad)
repnz
mov
pop
mov
dec
xor
test
sub
adc
sbb
ins
ficomp
scas
jp
pop
mov
jo
push
ret
addr16
repz
out
sbb
dec
popf
sbb
(bad)
retf
mov
pop
mov
mov
or
cmp
mov
xchg
dec
pop
pop
xor
jecxz
sub
mov
shl
cmp
adc
lock
add
lods
lds
outs
xor
ss
and
call
int3
or
fscale
aam
std
mov
repnz
add
loop
add
sub
repz
test
xchg
mov
adc
sti
movs
push
pop
or
mov
daa
into
pop
inc
push
call
out
push
push
xor
addr16
push
jnp
inc
xor
cmp
cmp
xchg
call
and
jmp
out
mov
push
enter
aam
cs
cld
push
aam
and
cmps
cdq
xor
jae
inc
push
adc
dec
outs
pop
or
dec
mov
cmps
popf
inc
sub
mov
jmp
mov
add
push
(bad)
out
sub
add
xor
pop
inc
mov
(bad)
ins
lock
or
add
adc
popf
sub
ret
stc
jle
int
mov
sahf
test
jns
push
xchg
sub
push
mov
jp
jno
adc
sbb
mov
out
scas
sbb
lds
xor
ret
je
(bad)
adc
cmp
js
popf
nop
fs
pop
xlat
(bad)
in
adc
stc
repz
cmp
add
jmp
pop
push
stc
mov
dec
cmps
jge
scas
jnp
fisub
mov
je
mov
pop
xor
cld
inc
es
pop
mov
pusha
jmp
xchg
pop
xchg
pop
xchg
push
in
mov
shl
bound
repz
sti
mov
sbb
push
jnp
fimul
call
pop
cmp
retf
xor
jae
repnz
mov
jbe
fadd
ins
lods
out
ret
pop
sub
xor
popf
test
jmp
pop
jl
xchg
sbb
mov
push
shr
inc
xchg
xor
pusha
dec
or
mov
out
xchg
jmp
pushf
mov
push
daa
fwait
js
xchg
iret
mov
mov
jle
hlt
cmp
in
and
aam
adc
retf
sbb
adc
(bad)
popa
js
loopne
or
test
gs
out
cmp
lock
and
add
adc
push
test
into
rol
mov
push
pop
cmp
fbstp
cmp
shr
aas
(bad)
std
push
sbb
mov
sahf
pushf
ficom
aad
cmp
mov
cmp
jb
sbb
mov
(bad)
pop
imul
sbb
inc
fiadd
shl
out
mov
or
dec
pop
add
hlt
test
push
mov
and
jne
es
add
lgs
lea
dec
fcomp
xchg
(bad)
(bad)
(bad)
xchg
popa
xchg
nop
in
iret
test
mov
rcr
(bad)
inc
and
or
bound
movs
scas
inc
hlt
xor
push
and
rol
xchg
enter
iret
(bad)
mov
mov
jb
aas
sub
adc
fsub
out
adc
mov
dec
pop
mov
xchg
jbe
inc
xchg
adc
repnz
retf
mov
dec
jno
mov
push
xchg
cmp
out
xchg
push
std
inc
push
lock
jae
pop
mov
adc
dec
mov
jo
imul
pop
pushf
rol
dec
or
xchg
or
mov
cwde
add
mov
int3
mov
sar
sbb
(bad)
mov
sub
das
shr
inc
mov
int3
jp
fcmovb
mov
xchg
mov
mov
fnstenv
mov
scas
add
cmp
pop
cmp
test
sub
mov
in
(bad)
aas
adc
sub
ror
mul
jmp
cmp
lds
inc
jge
imul
(bad)
jmp
cmp
repz
jmp
in
xor
iret
or
enter
dec
cmc
mov
sbb
sub
xchg
in
out
mov
pop
and
sbb
cmp
cmp
inc
dec
and
xchg
sub
lahf
xor
out
mov
xchg
lods
or
mov
jp
loope
stos
(bad)
std
or
sar
sti
mov
out
add
inc
repnz
test
add
lahf
aam
cmc
out
jne
add
shl
fsubr
pop
imul
stc
addr16
nop
lds
xchg
repnz
data16
push
push
shl
jl
inc
cmp
pop
jmp
cld
imul
in
imul
arpl
out
xchg
out
and
sub
(bad)
fisubr
cs
les
stos
test
mov
rcr
retf
aas
loopne
add
not
sbb
mov
sub
push
xchg
pop
push
and
pop
arpl
mov
mov
add
dec
mov
and
push
das
pop
mov
jecxz
test
jmp
mov
cmp
push
loope
nop
push
add
cmps
add
clc
mov
nop
jae
dec
loop
popa
out
push
mov
xchg
sti
scas
adc
fxch
push
xlat
leave
retf
(bad)
test
and
rcl
mov
xor
sbb
jmp
ficomp
push
in
shl
cmps
cmps
inc
and
add
cwde
jmp
test
xor
pop
out
pop
mov
mov
jbe
fnsetpm(287
and
jle
mov
sub
(bad)
mov
ss
pop
xchg
push
aad
push
push
mov
jbe
adc
clc
inc
mov
pop
and
xor
add
arpl
add
xadd
mov
xor
sub
add
cmc
fsubp
aaa
dec
arpl
jmp
pop
pop
shr
lds
out
sub
fcomip
in
bound
xchg
jae
stc
test
test
pop
cmp
lods
out
mov
jne
gs
scas
test
retf
xchg
xchg
cmp
ret
pop
test
xchg
pop
fisttp
mov
pusha
std
dec
dec
stos
test
mov
jl
daa
fbstp
jecxz
mov
icebp
scas
std
adc
pop
aaa
sbb
pop
out
jne
fisttp
or
add
icebp
sar
sub
inc
fstp
adc
repz
std
sbb
icebp
cmp
mov
dec
(bad)
sub
mov
clc
loop
test
xchg
xchg
leave
or
out
fwait
mov
push
adc
sahf
out
xor
cmp
mov
jo
ja
scas
int
mov
out
test
or
aam
sub
pop
add
test
mov
cmps
dec
xchg
jle
sub
mov
mov
outs
adc
sbb
pop
cdq
ins
xchg
pop
jmp
out
mov
sbb
push
inc
(bad)
pop
mov
addr16
out
loop
sbb
sbb
xor
add
and
adc
out
out
mov
cld
cmps
inc
out
cmp
push
mov
mov
stc
out
retf
ret
fs
adc
aad
xchg
xchg
std
or
shl
aad
popf
pushf
hlt
mov
fwait
imul
hlt
pushf
adc
mov
mov
mov
push
je
or
push
push
fmul
jmp
and
push
push
mov
inc
jle
push
or
push
mov
mov
adc
cmp
push
sub
vpsrlq
xchg
push
call
(bad)
push
aam
mov
test
lahf
jmp
xchg
sub
je
hlt
sbb
push
call
sbb
mov
jg
enter
cld
nop
dec
dec
jmp
or
xchg
xor
jp
jno
adc
pop
shl
fwait
push
xchg
xchg
mov
add
aam
xor
jae
icebp
sub
xor
ret
into
sahf
pop
fbstp
xlat
cmp
xor
or
mov
xchg
pop
outs
ds
cmp
sub
pop
movs
xchg
push
jns
adc
fcomp
or
add
dec
pop
arpl
aam
js
daa
jmp
ins
cs
jae
mov
repnz
sahf
test
out
fldenv
sbb
add
dec
jnp
sbb
pop
pop
add
(bad)
ret
in
cmp
lock
push
jp
mov
test
fwait
adc
xor
mov
jb
test
cdq
sub
push
jmp
mov
stos
pop
mov
lahf
mov
sar
push
(bad)
aaa
pop
push
scas
int
sub
arpl
or
and
pop
popa
ret
cdq
mov
js
xor
test
mov
push
cmp
push
test
mov
jl
push
dec
mov
(bad)
shr
(bad)
and
cmc
mov
icebp
loopne
bound
out
and
sbb
ret
push
scas
xchg
cmp
clc
ret
aaa
out
xchg
repz
cli
cs
repnz
in
mov
or
iret
push
mov
ins
mov
ret
data16
int
jge
xor
xchg
ja
xor
mov
sbb
mov
pop
sbb
(bad)
pushf
call
lea
jge
dec
or
add
xor
in
mov
and
push
repz
xlat
in
aas
pop
xor
xor
call
fwait
mov
outs
movs
push
into
adc
aas
push
and
in
in
jg
fisubr
jbe
xor
movs
scas
imul
sti
dec
sbb
xchg
sbb
and
inc
sbb
add
out
popf
dec
inc
push
addr16
mov
cmp
inc
sub
pusha
jge
fcomi
shl
fwait
push
sbb
ds
cmc
es
test
out
inc
out
and
es
inc
pusha
fprem
jmp
jns
retf
std
pop
mov
lds
popa
shr
inc
dec
pop
jb
fwait
sub
jb
mov
sub
nop
fisub
ins
loopne
sbb
sahf
lock
mov
inc
pop
mov
sbb
mov
mov
loop
in
imul
sar
jmp
inc
test
mov
int
fstp
and
mov
inc
jp
stc
mov
stos
or
pop
ficom
adc
push
cmp
pusha
mov
sbb
cmp
pop
into
sahf
adc
mov
dec
daa
rol
mov
mov
(bad)
push
aad
jno
push
cmps
sbb
fwait
shr
push
cdq
fdiv
pop
(bad)
lock
leave
push
adc
or
xchg
pop
mov
int3
sub
mov
or
and
arpl
sbb
push
mov
addr16
push
fucomip
ins
pop
mov
(bad)
cwde
jecxz
pop
pusha
xchg
xor
lods
push
pop
pop
loop
shl
mov
icebp
imul
and
and
inc
sbb
pop
mov
pop
pop
push
sub
mov
adc
or
xchg
dec
adc
push
call
aam
sub
rcr
(bad)
gs
cs
out
retf
out
hlt
in
pushf
dec
push
out
js
mov
dec
jae
into
icebp
adc
stos
mov
in
adc
cld
out
aas
xchg
in
adc
mov
ins
sbb
fs
xor
push
mov
push
in
unpcklps
and
add
sub
sub
(bad)
xor
retf
inc
imul
jb
push
or
jns
shl
push
pop
scas
into
mul
test
xchg
xchg
dec
ins
jae
mov
aas
xchg
push
jg
push
retf
xchg
mov
inc
loope
enter
jge
xchg
pop
or
xor
add
es
movs
xchg
pusha
xchg
call
sahf
aaa
cmp
or
mov
push
mov
out
into
push
mov
inc
ror
fwait
sbb
aaa
cmp
repz
push
sub
pop
int3
jle
das
pop
xchg
pop
push
jecxz
lea
sahf
mov
movs
shl
mov
xor
sbb
aaa
enter
ins
mov
pop
(bad)
push
ror
inc
retf
jnp
fist
outs
pop
pop
loopne
es
pop
add
sub
in
mov
sub
mov
xlat
mov
sub
out
jge
js
sub
xor
jmp
pop
cmp
sub
push
fwait
cmp
(bad)
xchg
imul
hlt
or
xchg
fxch
aad
jae
xor
sahf
dec
shr
mov
cmp
scas
pusha
xchg
repnz
jno
jmp
stos
jmp
adc
mov
jnp
xchg
call
xchg
stos
jmp
xor
jo
stc
jp
mov
fisub
mov
cmp
mov
addr16
mov
adc
dec
jl
jno
mov
addr16
adc
into
mov
push
pop
ret
mov
pop
pusha
dec
inc
inc
enter
sbb
xor
mov
push
sbb
or
cmps
pusha
mov
outs
add
or
lock
jbe
sbb
jl
dec
inc
adc
fsubrp
mov
mov
xor
movs
pop
in
jbe
sahf
pop
sub
pop
push
sbb
jbe
outs
adc
mov
sti
out
retf
das
jg
ins
test
fdiv
cli
mov
pop
mov
push
add
lods
sub
fdiv
pop
stos
dec
cmp
(bad)
aas
imul
ret
xchg
mov
scas
retf
add
xor
mov
push
sbb
adc
aas
and
xor
mov
fxch
js
and
inc
jecxz
mov
je
icebp
shl
push
or
ret
popa
adc
cmp
adc
fstp
mov
sbb
xchg
jmp
add
(bad)
sub
not
inc
rol
lock
xchg
or
inc
mov
cmps
mov
ja
push
shr
pop
mov
sbb
leave
sbb
outs
fnsave
push
aam
sahf
stc
pop
pushf
lea
call
mov
ret
cmps
fmul
xor
or
ja
popf
das
dec
or
and
outs
fs
stos
xor
pop
adc
cmps
pop
test
pop
stos
daa
mov
pop
repnz
xchg
fwait
shl
out
add
adc
sub
and
cmp
sub
dec
es
add
xchg
imul
cmps
sahf
xchg
mov
push
into
jo
jecxz
xor
xchg
fimul
mov
pop
xchg
cmc
push
aam
sub
mov
cmp
or
xlat
test
mov
cmp
fld
aaa
dec
cmp
push
mov
in
mov
pop
lahf
xor
loope
push
mov
adc
adc
adc
fldcw
and
add
push
cdq
xor
int
lods
sub
shl
pop
je
push
and
push
dec
mov
mov
ds
jmpw
sub
xchg
cwde
loop
cmc
mov
dec
(bad)
cmps
and
xchg
dec
outs
mov
push
call
pop
push
cdq
push
jno
xor
cmp
mov
fnstcw
xchg
push
out
xchg
fs
arpl
mov
mov
gs
or
xor
cmps
imul
cmp
inc
add
sbb
pop
and
jp
ja
lahf
movs
sub
mov
not
mov
jbe
mov
out
ret
cld
add
mov
popa
dec
jns
push
cld
ds
sar
mov
jecxz
neg
jns
cld
add
into
adc
xor
mov
ds
dec
mov
add
retf
hlt
into
ds
outs
mov
jbe
cmps
dec
clc
test
mov
ins
int
sbb
inc
xor
je
dec
cwde
aaa
jmp
dec
add
mov
cmp
ja
mov
sub
push
xor
es
xor
mov
push
(bad)
dec
test
inc
inc
shl
outs
in
xchg
fdivr
test
mov
out
adc
cwde
lods
rcl
jmp
(bad)
fld
inc
or
or
xchg
xchg
rcr
lock
shr
mov
out
popf
test
popa
or
aas
sub
or
mov
repz
mov
mov
and
jmp
adc
inc
mov
xchg
sub
add
ror
ja
pop
jecxz
inc
popf
or
adc
jb
aam
mov
or
lahf
dec
xchg
into
pusha
add
jmp
cs
jo
out
jb
mov
jno
add
mov
aaa
pop
lods
addr16
les
std
mov
mov
sbb
out
(bad)
mov
xor
mov
push
loop
add
push
into
out
push
(bad)
push
out
fisubr
or
mov
retf
xor
adc
das
dec
pminub
jp
in
(bad)
movsx
retf
fld
mov
push
pusha
das
add
loopne
adc
cmc
jo
and
fdivr
scas
xor
mov
test
mov
push
mov
add
push
inc
int3
loope
jg
push
sbb
dec
(bad)
mov
push
push
push
aam
or
sub
or
and
shl
gs
adc
cld
inc
cmp
push
js
leave
scas
ror
scas
xchg
mov
mov
mov
jg
rcr
pop
scas
lahf
inc
xchg
loop
ins
push
cmp
cld
mov
sbb
and
jmp
jle
cli
gs
stos
out
xchg
sub
sti
xchg
mov
neg
leave
fbld
sahf
jmp
inc
int3
daa
pop
rol
(bad)
cmps
xchg
gs
push
xchg
xor
xchg
and
pop
test
mov
in
imul
lods
bound
aaa
cdq
rol
mov
push
rcl
shl
adc
and
jae
xchg
ins
jecxz
cmp
inc
mov
test
into
cmc
out
scas
add
mov
add
addr16
sahf
fbstp
rcl
cmc
xchg
jno
inc
iret
repnz
and
pushf
push
push
int
xor
xor
pushf
mov
xchg
xchg
fisttp
out
add
inc
nop
ret
add
jne
xchg
inc
or
push
jne
loopne
jle
retf
fld
add
(bad)
sub
mov
cmp
lods
xchg
(bad)
adc
gs
or
and
cmp
pop
pop
xchg
je
mov
ds
jge
enter
les
retf
es
mov
mov
mov
pusha
pop
stos
mov
jno
scas
scas
inc
inc
idiv
or
push
(bad)
imul
mov
jae
inc
pop
lahf
jae
xchg
cmps
into
lahf
lahf
popf
inc
rcl
xor
cmp
lds
cmp
push
or
inc
adc
adc
push
popf
les
jns
mov
clc
cmps
pop
pop
sub
xor
fcmove
add
fistp
repz
mov
sbb
(bad)
mov
sbb
pop
push
aad
push
ret
mov
mov
xchg
retf
out
xor
or
and
push
adc
cmp
sbb
push
shl
push
inc
gs
cld
mov
add
fst
jb
repz
mov
add
mov
ins
arpl
mov
mov
(bad)
lock
aas
push
inc
ficomp
inc
out
in
mov
push
pop
ins
fucomi
cs
jle
nop
inc
in
and
fstp
xor
lods
(bad)
cs
add
xchg
sar
mov
jge
or
dec
pop
lea
sbb
adc
sar
mul
rol
or
sub
(bad)
pushf
push
mov
pop
cmp
leave
xchg
or
mov
and
call
jbe
pop
loope
(bad)
sub
dec
popf
fsub
sahf
movs
ds
sti
outs
sti
arpl
inc
sahf
mov
push
mov
pop
mov
mov
push
je
aaa
or
push
fsubp
dec
and
imul
mov
fnsave
(bad)
push
mov
fisub
adc
(bad)
dec
(bad)
push
and
jg
cwde
repz
fistp
je
xlat
mov
sub
addr16
pop
sti
lds
shl
push
sub
mulps
mov
dec
jle
cmc
fstp
xchg
jbe
jecxz
inc
and
cmc
cmp
stos
pop
out
dec
push
cmp
stos
push
leave
repz
pmaxub
mov
cli
pop
pop
sub
jl
and
mov
adc
test
xlat
cmp
jl
retf
sbb
int
jecxz
jbe
pop
mov
aad
stos
out
mov
xor
into
lock
or
jo
call
push
push
outs
ficomp
cdq
std
sub
inc
adc
cli
xor
inc
and
aas
jmp
mov
cmp
shl
hlt
pop
push
ds
cmp
jg
syscall
(bad)
retf
out
push
lods
aad
call
jns
repz
jecxz
sub
stc
sub
fdiv
ret
es
jp
int3
enter
into
fld
repnz
dec
(bad)
clc
test
cmp
push
inc
ret
sar
and
not
(bad)
stc
les
ret
jle
and
mov
mov
stc
lds
mov
cdq
pop
or
inc
shr
leave
stc
das
sub
and
stc
mov
ins
sub
add
xor
mov
sahf
mov
shr
cwde
test
or
ja
imul
add
cli
jge
and
icebp
sbb
sbb
inc
mov
test
mov
test
cmp
mov
bound
scas
xor
adc
mov
inc
ins
jge
mov
xchg
xor
aas
lods
or
ror
inc
pop
sahf
dec
stc
mov
cld
xor
xor
fisubr
pop
or
les
cmp
push
das
retf
inc
ja
xchg
call
sub
cmp
sub
jbe
pop
sbb
mov
xchg
mov
cmc
sbb
ret
popa
sub
jecxz
cld
js
push
icebp
shl
(bad)
jge
xor
ja
inc
mov
cmp
lods
and
add
push
ss
mov
imul
add
in
aaa
out
add
in
and
pop
or
mov
nop
gs
mov
(bad)
pushf
sbb
dec
fsub
xor
mov
arpl
jecxz
pop
cs
retf
ret
sub
adc
jp
retf
ss
sbb
adc
sbb
mov
into
fs
jmp
repz
dec
cs
in
daa
xor
sbb
loopne
in
adc
repnz
out
cmp
jne
push
dec
out
movs
bound
dec
arpl
ja
out
cmp
stos
xchg
push
pop
or
(bad)
call
and
xchg
jnp
nop
fbstp
test
repz
mov
popf
sub
dec
mov
call
mov
dec
pop
push
sar
ins
shl
inc
rcr
shl
jbe
xchg
pop
push
pop
aam
jbe
jle
dec
or
icebp
and
and
inc
lods
dec
mov
lods
mov
out
cmp
sbb
adc
push
mov
mov
xchg
cmps
leave
test
ins
mov
sbb
pop
fdivr
mov
jmp
add
(bad)
cli
popf
mov
ins
or
neg
sbb
inc
cmp
xchg
mov
test
pop
sti
push
xor
enter
push
mov
adc
stos
movs
(bad)
mov
sub
xor
cmp
pop
xor
not
(bad)
(bad)
xlat
and
mov
mov
aaa
int3
in
fst
cmp
mov
nop
cmp
lahf
jae
sub
sub
pop
popa
adc
push
ja
ja
aam
ret
dec
cmp
mov
sub
shl
(bad)
xor
test
mov
cs
pop
test
pushf
inc
dec
mov
lock
cmc
enter
xadd
sbb
stc
sar
mov
add
ss
call
push
lea
mov
jns
jb
cmp
aam
jl
(bad)
(bad)
arpl
push
add
add
fild
or
cmps
sbb
pop
mov
gs
ror
adc
sub
rol
dec
sub
sub
enter
mul
test
(bad)
repz
int3
fs
xchg
cli
aas
out
xor
jne
jmp
loope
fiadd
dec
inc
mov
inc
idiv
xor
aas
sub
sbb
sbb
nop
inc
pop
or
fs
pusha
pop
rcr
pusha
fcom
ja
stos
fmul
out
cwde
int
pop
push
xor
dec
xchg
jge
test
sahf
adc
mov
test
mov
mov
push
out
jecxz
pop
mov
leave
sbb
sbb
push
pop
jmp
nop
inc
iret
rol
cld
dec
mov
dec
inc
dec
stos
push
or
dec
sub
das
pop
inc
sbb
(bad)
idiv
adc
ins
sbb
ret
out
push
cmp
cmp
sub
xor
cmc
(bad)
adc
and
je
xchg
and
cmp
loopne
push
sbb
cmp
(bad)
div
and
lods
mov
adc
hlt
ror
sub
adc
lods
xor
cwde
sbb
stos
data16
adc
pop
or
leave
repz
xor
jle
mov
ins
push
(bad)
and
cmp
ds
sub
imul
imul
jmp
mov
je
rcl
lods
and
or
shl
call
fisttp
mov
push
xchg
inc
mov
mov
bswap
bound
dec
add
pop
mov
sub
popa
or
adc
(bad)
sahf
dec
mov
inc
gs
add
out
aad
and
ss
lods
dec
retf
cli
stos
repnz
leave
shl
dec
dec
(bad)
sbb
fadd
xchg
retf
adc
ds
dec
mov
mov
mov
mov
adc
cmps
push
mov
mov
int3
sbb
jb
lea
mov
mov
ret
add
mov
movs
int3
inc
sub
cwde
movs
jb
push
out
pop
in
or
sub
xchg
xlat
retf
add
dec
cmp
inc
cli
rcr
std
or
pop
adc
cmp
cwde
dec
out
(bad)
(bad)
aad
fisub
pusha
iret
fisttp
outs
imul
loop
call
sbb
mov
(bad)
std
es
dec
daa
sbb
scas
je
(bad)
push
rcr
cmp
lods
movs
pop
sbb
cmc
fdivr
das
push
pop
push
adc
clc
adc
and
pop
pop
inc
xor
sub
inc
xchg
cmp
clc
nop
sbb
(bad)
dec
jno
jmp
into
jecxz
push
or
xchg
int3
push
and
sbb
sahf
enter
jg
or
mov
push
out
sub
cmp
xchg
add
fwait
sahf
ret
add
call
jmp
call
jnp
push
xor
fild
cmp
dec
pop
into
push
pusha
add
jo
outs
push
bound
rcl
jbe
mov
ja
loopne
pushf
cmp
mov
(bad)
(bad)
call
fsub
loop
call
or
test
and
ds
adc
or
pop
or
sbb
or
lea
enter
test
jno
(bad)
mov
repz
ins
or
and
jecxz
(bad)
cmp
sub
inc
xchg
push
in
retf
push
pusha
sub
mov
jmp
shl
adc
inc
imul
push
repnz
fld
sbb
stos
pop
push
jge
or
sbb
loope
dec
sbb
pop
loopne
sbb
les
mov
mov
xchg
out
fxtract
xor
sbb
pop
push
and
cmps
mov
lar
dec
fimul
add
in
mov
adc
and
add
sbb
in
fnstsw
adc
pop
std
pop
cmp
outs
fs
jne
or
and
fimul
adc
fnstcw
cdq
ins
mov
sbb
or
xor
xchg
jle
sahf
cmps
pop
sahf
adc
sub
mov
or
aas
ins
jb
mov
out
jle
(bad)
(bad)
nop
rol
loopne
sbb
inc
ss
adc
mov
rcr
mov
daa
addr16
mov
cs
mov
add
(bad)
sub
(bad)
cmps
(bad)
cmp
dec
and
aaa
mov
sbb
loop
mov
adc
and
mov
iret
cmps
into
leave
pop
pop
nop
repnz
popf
mov
xchg
(bad)
sbb
mov
fidivr
jnp
jo
(bad)
hlt
inc
je
dec
mov
dec
repnz
neg
iret
int3
das
in
xor
pop
xor
jg
ret
mov
cdq
bound
scas
int
mov
ds
lahf
bound
push
test
scas
adc
dec
imul
inc
lods
push
push
scas
or
jne
mov
sbb
mov
hlt
das
dec
push
mov
fwait
out
or
les
cmp
inc
mov
xchg
jmp
pop
adc
(bad)
addr16
add
icebp
mov
jno
mov
clc
call
sub
cmp
push
fld
cmp
dec
push
fisttp
mov
or
or
add
push
and
data16
pop
sub
mov
dec
xor
and
mov
inc
popf
add
jae
leave
dec
sbb
cmp
xchg
aam
scas
mov
shr
es
sub
shr
jne
outs
lods
pop
(bad)
fdivr
jne
out
ret
call
addr16
mov
push
pop
add
dec
push
or
push
pop
dec
xchg
shl
fwait
inc
jbe
cmp
adc
mov
imul
push
cmps
mov
(bad)
xchg
pop
push
cmp
gs
cmp
xacquire
jnp
lahf
cmp
xchg
(bad)
div
add
xor
mov
mov
stos
popa
pop
mov
add
pop
inc
mov
sbb
push
mov
pushf
adc
popa
or
movs
xor
fldenv
clc
jmp
pop
mov
or
mov
push
jecxz
lods
jb
lea
int
movs
pusha
or
xchg
sbb
xchg
jle
popa
nop
xchg
gs
pop
nop
mov
dec
xchg
pop
out
call
or
dec
or
or
mov
nop
cs
push
lock
shl
test
scas
ins
stc
aaa
adc
fild
cwde
mov
loop
fdiv
lock
sbb
lahf
pop
(bad)
loopne
and
dec
rcl
int
leave
lods
std
cwde
popf
push
mov
dec
add
(bad)
arpl
cmp
cwde
in
jne
fisubr
lock
push
inc
shl
jecxz
out
pop
std
adc
push
adc
jno
nop
mov
jns
xchg
data16
adc
mov
imul
test
inc
das
fwait
adc
inc
sub
je
push
daa
adc
popf
cmp
mov
add
cmp
je
outs
jns
ins
xchg
dec
call
sbb
stos
mov
mov
ins
call
fistp
xchg
fld
mov
or
sub
or
cmp
movs
jo
jns
or
sti
rol
daa
fs
pop
(bad)
aad
adc
cwde
push
ins
or
or
shr
push
pop
sbb
cwde
add
pop
adc
mov
xchg
pop
leave
out
jecxz
pop
addr16
dec
jmp
jle
adc
or
bound
gs
pop
(bad)
push
cmp
pop
int3
pop
nop
cmps
dec
inc
pushf
mov
pop
dec
fadd
sub
xchg
test
imul
lahf
and
cmc
or
mov
xor
iretw
mov
rcr
leave
js
xchg
adc
mov
xchg
mov
xchg
mov
jne
jle
jo
or
outs
dec
rol
push
stos
dec
mov
jmp
pusha
adc
and
mov
in
jp
pop
mov
mov
xchg
adc
fwait
sub
out
inc
pusha
cmp
(bad)
out
ins
xor
ffreep
or
pop
js
out
mov
ins
pop
ss
loopne
xchg
mov
ja
je
xchg
(bad)
push
in
sbb
mov
sbb
retf
scas
sbb
imul
in
inc
add
std
mov
xlat
popf
mov
mov
add
push
push
fldl2t
test
pop
retf
lock
add
test
stos
add
and
outs
lods
sti
aam
bound
outs
push
and
push
cld
(bad)
rcr
pop
loope
mov
push
sub
push
(bad)
push
js
aaa
add
lods
mov
bswap
(bad)
and
jl
stos
fld
mov
xchg
push
jp
dec
sub
mov
shl
dec
mov
and
pop
push
lock
cld
rcl
mov
dec
sub
pop
push
in
daa
xchg
mov
mov
add
push
push
and
fwait
add
scas
mov
ds
mov
jp
repnz
icebp
(bad)
add
xor
sti
cmps
pop
fld
pop
ret
mov
jbe
test
add
mov
sar
jnp
mov
pop
ror
mov
icebp
dec
ss
mov
pop
ja
aad
adc
lods
sub
test
and
lea
mov
adc
push
ret
push
in
mov
call
mov
scas
jl
mov
sbb
in
or
sbb
call
sub
ret
jecxz
and
les
pop
add
ret
pop
inc
sub
mov
je
data16
arpl
scas
jne
sbb
fadd
add
cmps
jns
cmc
shr
ds
inc
cmp
add
loop
lock
aad
mov
div
push
out
sub
adc
retf
sbb
enter
shl
mov
loop
in
adc
mov
leave
mov
mov
outs
cld
loopne
call
xor
test
or
sbb
sub
out
arpl
push
pop
out
dec
xor
das
push
icebp
and
ss
sub
test
mov
dec
mov
sbb
mov
inc
push
push
sbb
das
pop
out
jecxz
inc
pop
outs
sbb
loop
lods
mov
fisub
pop
jp
shr
fdivr
mov
jmp
jns
cmp
ret
jg
ret
out
fild
popf
mov
fmul
dec
rol
or
je
push
pop
aad
(bad)
lea
outs
fcmovne
retf
jnp
xor
mov
jae
not
or
call
and
movs
cli
and
push
loope
mov
jge
scas
jp
movs
aaa
and
cmp
sbb
test
sbb
dec
or
daa
adc
daa
pop
cli
repnz
popf
cli
cmc
push
in
push
inc
cdq
mov
xor
popf
out
movs
push
das
mov
imul
repz
out
adc
mov
xchg
imul
and
push
es
call
xchg
mov
cdq
jmp
nop
pop
xor
es
mov
add
ror
cld
inc
mov
cmp
stos
mov
sub
in
add
idiv
sbb
cwde
clc
or
mov
mov
leave
or
pop
out
xchg
cmp
shl
je
ds
inc
loop
add
outs
push
aam
mov
and
xchg
dec
repz
iret
add
in
mov
jl
(bad)
movs
ins
xchg
mov
xchg
lods
push
in
fldl2t
fwait
dec
jnp
sbb
in
sbb
popf
mov
or
std
push
sbb
fdivrp
and
cmp
mov
pushfw
or
add
pop
imul
lds
cld
inc
lock
lods
nop
or
sbb
pop
xchg
out
data16
in
xor
or
sub
jnp
jmp
or
dec
jge
mov
sub
aad
test
dec
jae
sub
lods
cmp
adc
push
ss
add
(bad)
cs
fnstsw
or
jmp
loope
xchg
cmps
scas
test
test
call
xchg
ja
int3
nop
aas
arpl
les
fild
pop
jo
aas
jae
sbb
test
push
fcom
mov
sbb
test
xchg
push
fsub
jno
mov
pop
sub
retf
cmps
jae
pop
shl
sub
loope
cmp
push
add
pop
std
xor
cdq
xor
and
and
xchg
(bad)
bswap
adc
popf
add
sub
add
sub
in
ins
mov
call
aas
sahf
sub
jbe
sbb
mov
or
popa
push
out
adc
sub
push
ins
(bad)
xor
and
mov
inc
repz
or
das
mov
push
test
popf
ss
sbb
mov
xor
std
jmp
nop
lds
jb
mov
jmp
mov
clc
and
loop
mov
jns
rcr
push
push
inc
out
fdivr
mov
cmp
es
cmp
adc
pop
mov
pop
mov
call
pop
es
push
cmp
sbb
cmp
pop
mov
xchg
or
popf
mov
jnp
mov
sbb
jl
mov
inc
pop
dec
mov
psraw
dec
(bad)
addr16
push
in
xor
add
push
adc
add
cmc
daa
sbb
cmps
ins
(bad)
out
sbb
mov
mov
mov
jg
mov
fwait
popf
imul
dec
call
sti
retf
dec
add
(bad)
fwait
cs
sbb
sbb
scas
in
xchg
sub
xlat
bound
and
test
std
into
clc
ja
pop
cmps
fs
ror
mov
lea
test
mov
inc
sub
mov
inc
inc
sub
rcl
es
data16
sbb
add
or
xor
or
(bad)
cwde
sbb
shl
lock
in
pop
inc
add
rcr
push
pop
xor
mov
adc
fisub
and
mov
stos
pop
mov
fisubr
push
mov
sbb
jle
cld
push
leave
pop
daa
es
sti
cmp
jae
sub
test
xlat
imul
fadd
add
out
in
sbb
pop
iret
cmp
in
(bad)
push
out
pop
jl
leave
push
(bad)
push
std
bound
mov
clc
pop
outs
mov
popa
add
push
jae
cwde
push
mov
ins
adc
test
jle
(bad)
repz
out
xchg
push
cmp
mov
mov
lods
aad
add
inc
or
xchg
call
aas
cwde
adc
sub
pop
cmp
and
jmp
ins
mov
jl
add
add
shr
cmps
in
ins
scas
xor
pushf
jp
adc
arpl
pop
pop
aas
xor
dec
inc
xor
fldenv
cmps
jne
jns
aad
push
mov
sub
mov
push
fldcw
xor
dec
scas
sub
mov
inc
mov
add
mov
cmps
adc
and
mov
cwde
test
das
loopne
sub
xchg
enterw
xchg
jp
inc
xchg
outs
fisubr
leave
sbb
fimul
mov
mov
in
retf
ss
push
sahf
jmp
cmps
je
cdq
xchg
stos
imul
adc
mov
dec
jb
ss
jo
fdiv
mov
jno
add
and
dec
inc
adc
adc
xchg
ins
popf
(bad)
and
je
and
xchg
adc
outs
(bad)
sub
sub
rcr
fst
inc
or
mov
mov
sbb
push
jae
popf
xor
mov
in
mov
test
lds
cld
adc
xchg
std
ins
inc
nop
aas
pop
outs
lods
cmp
pop
scas
pop
xor
mov
sub
sbb
jnp
xchg
loop
add
cpuid
dec
bound
fwait
imul
cs
loopne
retf
movs
mov
fisttp
xor
test
stos
stos
ja
push
jp
pop
into
or
cli
sahf
pop
mov
dec
mov
aaa
fisub
adc
inc
pop
cld
sbb
adc
cmc
movs
ds
add
pop
pop
out
pop
dec
xchg
lock
add
push
inc
in
mov
dec
jp
add
or
jg
rol
xor
and
or
addr16
sbb
push
stc
int3
push
sbb
aaa
loop
outs
sbb
sbb
js
jge
dec
imul
test
mov
leave
jmp
into
fimul
sbb
add
mov
xchg
inc
pop
jg
imul
mov
xchg
ds
push
addr16
shr
pop
cmps
lds
xchg
daa
mov
pop
dec
mov
add
outs
fdivr
fwait
or
stos
adc
ret
in
adc
fstp
and
test
sbb
adc
js
stc
cdq
mov
movs
iret
add
clc
pop
dec
movs
inc
xchg
sub
adc
retf
inc
mov
jnp
mov
mov
jb
or
sbb
adc
jns
(bad)
fs
sub
addr16
fnstcw
and
movs
aam
dec
stos
sbb
aas
and
in
pop
mov
xchg
sbb
test
dec
sub
push
xchg
pminub
mov
inc
outs
mov
loope
inc
ja
add
stos
add
scas
dec
imul
dec
xchg
ins
or
rol
int3
popf
jp
outs
out
sub
inc
pop
pop
add
dec
push
xchg
fucomip
ss
xchg
data16
popf
push
cmp
(bad)
hlt
push
cmp
pop
cmp
lea
dec
cmp
(bad)
js
les
push
cmp
pop
loope
cmp
sbb
sbb
loope
fsubr
inc
aad
or
fld
or
movs
and
jp
(bad)
mov
stos
lods
dec
inc
pop
pop
add
imul
repz
inc
push
rcl
fld
xchg
in
sub
xor
js
mov
aaa
inc
and
pop
add
jns
cmp
and
loope
jno
jmp
xchg
es
sar
ds
xchg
test
aaa
inc
push
je
jmp
ret
into
mov
push
aaa
sub
inc
pop
adc
int3
mov
or
movs
adc
cmp
loop
lahf
adc
cld
pop
inc
xchg
sbb
mov
loope
jnp
mov
int3
shl
outs
and
add
and
adc
xchg
adc
sbb
push
icebp
or
ins
adc
xchg
aaa
inc
pop
scas
xor
enter
sahf
sahf
into
ficomp
lahf
and
xor
in
idiv
hlt
outs
data16
mov
pop
xchg
inc
add
in
mov
jns
jge
inc
test
iret
pop
and
addr16
fldenv
jp
xchg
(bad)
inc
adc
aaa
mov
mov
pop
loopne
sbb
cmp
push
push
std
jnp
stc
int
pop
sub
ins
shl
push
out
jg
retf
mov
pop
push
sbb
jmp
mov
and
mov
icebp
push
gs
sub
int
cmp
xchg
mov
push
(bad)
mov
push
push
mov
retf
sbb
inc
mov
mov
pushf
pop
std
adc
add
or
stos
repz
dec
int3
add
xchg
pushf
jno
out
mov
dec
(bad)
stc
xor
pop
mov
test
out
xchg
sub
jo
aam
mov
mov
inc
int
xchg
jmp
mov
mov
jb
ss
not
jo
stos
bound
stos
jl
xor
rol
repnz
test
(bad)
mov
in
inc
nop
jnp
jno
mov
mov
push
or
push
movs
xor
pop
inc
retf
xchg
cmp
hlt
outs
call
cmps
cmc
mov
pop
and
add
pop
hlt
dec
and
mov
sbb
in
cmps
in
jmp
sbb
pushf
mov
adc
call
or
out
xor
pop
pop
fldcw
loope
enter
sahf
scas
jecxz
push
icebp
daa
jns
xchg
xor
into
push
cs
popf
(bad)
or
xor
mov
cmp
add
stos
lods
cli
in
dec
dec
dec
dec
xchg
stc
shl
jb
sub
dec
rcl
push
xor
test
mov
inc
aad
lods
xor
psubw
push
adc
(bad)
int
or
in
cmps
push
aas
cmps
cmps
xchg
push
adc
jge
and
movs
push
in
jno
(bad)
lea
cmp
push
div
retf
retf
dec
or
sar
xchg
lock
lea
std
pop
push
mov
sub
pop
es
out
add
sub
or
pushf
out
scas
scas
outs
je
dec
push
(bad)
fidivr
pop
lods
movs
mov
sub
rcr
pop
mov
(bad)
out
mov
dec
adc
int
test
fistp
out
test
sub
sub
lock
scas
ss
mov
enter
cld
fsubr
add
mov
mov
movs
sbb
adc
fwait
push
inc
push
xor
adc
jbe
cs
cmp
pop
arpl
adc
push
test
js
inc
pop
pop
addr16
cmps
sub
sub
aam
xor
pop
add
push
jle
inc
out
into
sbb
add
mov
inc
xor
mov
retf
hlt
repz
xchg
inc
dec
es
sbb
shl
ret
lock
sub
sub
jbe
xor
mov
jnp
or
(bad)
imul
mov
sbb
push
cmp
cld
hlt
iret
sub
xchg
jl
ret
movs
ret
add
mov
fst
sbb
jg
adc
jns
les
lahf
inc
adc
icebp
and
mov
jbe
sbb
sbb
call
sti
into
xchg
and
dec
mov
hlt
cmc
mov
aaa
cld
xor
daa
xor
cdq
xor
aaa
cmp
cmp
xchg
sahf
mov
pop
dec
sbb
adc
xor
xor
or
push
shr
test
(bad)
cwde
fcomp
nop
scas
xchg
pextrw
or
push
jle
cmp
call
push
mov
pop
pop
adc
mov
mov
(bad)
mov
and
mov
sub
in
loopne
jp
sti
sub
xchg
mov
out
add
sbb
imul
jl
mov
imul
or
mov
fwait
mov
fcomp
lock
add
lahf
or
pop
ret
xor
(bad)
repnz
sbb
retf
fwait
ret
mov
push
rcr
xchg
cmp
pop
mov
sti
pop
sub
dec
out
out
mov
cmc
test
fidivr
retf
rol
mov
popa
xor
mov
ret
cmp
jo
pop
inc
test
inc
aad
shl
xchg
push
mov
sbb
sbb
jmp
repnz
in
add
xchg
aaa
lods
std
and
jmp
clc
je
mov
push
jne
pushf
or
jnp
mov
jno
fwait
dec
movs
aaa
js
push
and
in
mov
int3
xchg
rcr
aad
and
pop
retf
das
test
inc
into
mov
cld
test
sar
dec
pushf
loopne
jae
(bad)
les
fstp
mov
push
push
jns
retf
aad
call
add
mov
sbb
adc
pop
ss
cmp
lods
push
shl
sbb
out
(bad)
pop
mov
mov
pop
xor
jno
xchg
pop
xor
adc
jo
int3
hlt
sub
push
fisubr
mov
and
pop
push
sub
push
call
test
aaa
das
xlat
push
mov
cwde
scas
addr16
pop
xor
inc
add
xchg
push
das
aam
dec
fcomp
add
jecxz
dec
mov
rcr
out
mov
jecxz
and
add
mov
dec
in
addr16
ss
xchg
or
inc
xchg
in
push
mov
ins
push
and
jo
jle
pop
imul
xchg
retf
push
jno
stos
mov
out
mov
sbb
cmp
push
mov
ins
cmp
fidiv
mov
loop
ins
lods
pop
mov
call
push
call
push
cmp
mul
outs
sbb
test
jns
loope
mov
js
jecxz
cmps
push
dec
retf
xor
lock
xchg
arpl
push
stc
mov
leave
pop
mov
adc
cs
test
popf
jp
cli
cli
test
add
mov
xchg
jmp
cmps
cwde
dec
jnp
std
jnp
mov
popf
es
pop
out
and
pop
add
add
add
adc
or
xchg
mov
add
arpl
lods
add
push
inc
pop
add
pop
popf
push
div
mov
xchg
leave
das
shl
fsubr
add
loopne
dec
rol
ins
push
mov
mov
xchg
mov
cwde
pop
popf
jp
adc
popf
retf
adc
push
pop
and
test
out
push
rol
aad
mov
lahf
pop
daa
push
pop
idiv
inc
enter
retf
movs
dec
loopne
test
es
sbb
retf
mov
sahf
or
(bad)
pusha
loopne
push
nop
jno
aad
adc
or
sub
inc
pop
popf
sub
jnp
dec
xor
inc
push
sub
sbb
into
(bad)
mov
jmp
adc
fist
cdq
aaa
out
or
cdq
mov
jle
push
inc
push
mov
inc
das
add
push
mov
mov
test
inc
loop
pop
adc
push
int3
das
test
and
jp
ds
imul
push
retf
dec
sub
jecxz
xchg
cs
movs
push
mov
pushf
sahf
stc
and
sbb
std
or
dec
push
lods
(bad)
add
push
jno
jmp
mov
jnp
rol
ss
mov
jbe
daa
retf
cs
mov
les
push
mov
sbb
jbe
pop
jmp
int
mov
popf
xor
rcl
add
fsub
inc
test
popf
popa
sbb
push
mov
cli
push
les
cmp
adc
push
call
pop
popf
cmc
jmp
call
nop
mov
ret
xchg
inc
mov
into
(bad)
adc
mov
ret
add
jo
mov
ins
cs
lock
inc
add
por
cmp
xor
call
ror
(bad)
sbb
or
xchg
push
cmps
nop
and
cmps
xlat
addr16
mov
push
call
or
xor
xor
mov
adc
mov
bnd
inc
cdq
mov
add
pop
iret
cmp
aaa
ins
cmp
rcr
dec
icebp
push
adc
sub
mov
lods
add
mov
jp
cmp
cwde
movs
scas
icebp
sbb
inc
or
imul
jbe
add
lods
leave
mov
cmp
sbb
pop
push
xchg
aad
in
xchg
jl
or
cmp
nop
pop
inc
add
pop
xor
dec
adc
mov
pop
inc
cmp
mov
into
pop
or
adc
ds
out
jbe
mov
mov
js
ds
cdq
jg
and
mov
and
inc
dec
ins
fstp
aas
pop
inc
mov
push
add
adc
sbb
(bad)
outs
xor
test
(bad)
int3
pusha
ds
imul
jmp
out
cmp
jmp
jmp
repnz
icebp
(bad)
das
mov
xor
mov
push
xor
cmps
bound
aaa
mov
in
xlat
and
movs
push
mov
js
into
cmp
inc
das
imul
data16
sbb
cwde
pop
mov
adc
sub
popf
cmps
sbb
xor
xor
xchg
inc
and
retf
imul
pop
cmp
mov
adc
out
inc
jns
fistp
xor
adc
mov
and
call
dec
ret
shl
clc
std
mov
sub
imul
call
jne
push
and
cwde
inc
nop
jae
sbb
shl
sub
mov
(bad)
push
push
fiadd
inc
pop
or
mov
or
and
adc
push
lods
fwait
and
jns
int3
cmp
push
test
call
push
mov
jmp
sbb
mov
aam
push
aas
dec
mov
or
cdq
sbb
xlat
shl
mov
icebp
jl
lods
lea
jns
pop
test
cmp
popf
mov
fld
out
xor
ins
xchg
fdiv
jecxz
jge
dec
cmps
fwait
loop
or
enter
cmps
mov
cmc
iret
sub
sub
test
scas
sub
outs
sub
aas
mov
lds
add
sub
push
ins
cdq
addr16
stc
outs
push
adc
pop
retf
xchg
ins
int3
fs
neg
stos
test
fwait
ret
and
dec
pop
shr
call
loopne
outs
je
adc
call
hlt
jae
addr16
retf
test
and
int3
iret
stos
rol
add
test
sub
neg
adc
cwde
add
pop
dec
mov
imul
enter
mov
or
push
rcl
dec
mov
in
inc
push
and
(bad)
mov
or
loop
jb
std
inc
fwait
jne
or
jg
xor
add
cmp
sti
(bad)
fld
imul
shr
int3
fistp
cs
into
les
dec
dec
leave
test
sub
aad
pop
ins
pop
mov
jb
les
jno
cmp
pusha
test
jecxz
lock
inc
scas
mov
xchg
gs
addr16
jecxz
sbb
adc
daa
in
cli
or
stos
inc
cmps
dec
rol
mov
loope
mov
mov
popa
dec
jo
test
pop
mov
mov
jmp
xchg
cwde
push
test
cmp
xchg
out
xchg
test
(bad)
repnz
das
adc
sub
mov
(bad)
enter
cmps
pop
push
mov
out
gs
sub
in
xchg
sbb
dec
pusha
xor
call
inc
mov
push
sbb
xchg
out
lea
inc
leave
fs
jge
sbb
or
gs
cmp
retf
mov
mov
add
sub
and
cmp
pop
push
js
dec
pop
cmp
dec
jp
lods
push
cmps
mov
test
sbb
cld
push
pop
std
ja
add
ja
popa
repnz
aam
fadd
sti
dec
sub
ds
lds
push
mov
mov
shr
cmp
das
test
push
stc
and
jle
jmp
fsub
push
sbb
ins
jo
out
push
add
adc
(bad)
jmp
jmp
ins
adc
call
cmp
mov
xor
mov
in
arpl
ror
(bad)
pop
clc
cmp
ret
les
gs
aad
xor
inc
dec
out
push
mov
sub
mov
lea
sbb
push
fstp
daa
out
jmp
movs
mov
iret
mov
inc
jg
loop
adc
dec
xor
ror
dec
or
jp
pop
aaa
aas
add
pop
cli
dec
cs
xor
fcomp
add
mov
and
ss
sbb
cmp
ds
dec
sub
lea
push
icebp
sub
lahf
mov
pusha
or
rcl
or
add
loope
outs
xchg
stos
sbb
mov
in
and
rol
cmps
xchg
and
test
jno
sbb
js
mov
mov
enter
sti
int3
push
add
(bad)
inc
cmps
inc
(bad)
xor
nop
ins
fdiv
cdq
nop
in
sahf
(bad)
imul
jmp
nop
cmp
xlat
jp
aad
dec
jnp
pop
out
xchg
fwait
xor
nop
sbb
or
and
out
mov
out
pop
std
xor
and
shl
fdiv
arpl
sub
aad
pop
inc
nop
sbb
adc
stos
retf
pop
sub
mov
or
jae
popf
mov
push
bound
stos
jne
ins
push
cmp
mov
dec
test
int
adc
jp
xchg
fcom
sub
daa
loop
sub
into
loop
daa
sub
outs
mov
in
jl
lods
popf
inc
jle
mov
mov
cmps
sub
xchg
aas
pop
sub
pop
push
xchg
sub
inc
push
sub
adc
movs
(bad)
aaa
push
call
jns
jmp
cmp
ficom
add
cmp
add
imul
daa
cmps
pop
repz
adc
or
movs
sahf
pop
push
cmps
sti
loope
push
push
mov
xor
add
inc
jns
sbb
movs
lods
pop
push
sti
sub
cmps
std
pop
xchg
push
cmp
retf
push
jae
add
js
idiv
add
in
xlat
retf
and
push
(bad)
lods
ins
in
cdq
mov
adc
sbb
sbb
jmp
xchg
pop
je
inc
pop
pop
retf
pop
data16
xor
mov
adc
sub
cmp
or
mov
icebp
pop
in
cmp
mov
push
jmp
mov
xchg
mov
adc
xchg
jle
mov
push
test
add
ins
mov
mov
dec
and
push
pop
pusha
out
xor
aas
and
mov
mov
retf
or
inc
cmp
mov
or
mov
imul
or
xchg
int3
pand
inc
(bad)
loopne
push
lods
mov
cmp
into
(bad)
cli
dec
dec
xchg
xor
inc
repnz
not
div
and
mov
add
dec
push
and
xor
outs
adc
push
inc
aad
test
or
inc
dec
fdiv
mov
into
xchg
es
int
retf
mov
jmp
dec
stos
sbb
push
mov
pop
enter
dec
hlt
mov
repnz
mov
movs
rol
xlat
int
add
pop
mov
ror
test
addr16
push
pop
jg
idiv
outs
movs
mov
cdq
xchg
addr16
in
(bad)
fdiv
scas
iret
(bad)
sbb
push
jno
mov
add
imul
in
div
cmps
jbe
sub
int3
mov
pushf
gs
nop
dec
add
pop
mov
daa
shr
push
dec
or
popf
mov
imul
push
shl
and
or
cmp
mov
mov
xor
retf
or
and
jmp
mul
mov
daa
mov
dec
xor
inc
lods
sub
scas
fcomp
call
ret
jmp
sbb
addr16
cmp
jmp
cmc
mov
lods
inc
xchg
(bad)
lods
sbb
out
xchg
xor
gs
sahf
cli
cmp
in
popf
call
dec
xor
fistp
or
mov
cmp
test
out
pop
push
mov
jno
cdq
nop
mov
inc
sbb
lds
cs
imul
inc
push
cld
int3
fisubr
fcom
sbb
fadd
sub
popa
je
idiv
in
cmp
dec
push
int3
xchg
and
loop
sub
aas
lods
retf
add
cmp
aas
inc
rcl
js
push
mov
xor
pop
add
mov
(bad)
sbb
mov
cmc
push
rcl
loop
(bad)
mov
loop
out
aas
test
jl
(bad)
out
sub
dec
scas
stos
arpl
pop
push
pop
movups
enter
pop
xchg
pop
rol
mov
scas
fisub
adc
jecxz
jl
cmp
add
shr
popf
dec
pop
jne
jge
adc
push
std
jbe
xchg
mov
sbb
sbb
(bad)
call
sti
mov
stos
inc
cmps
mov
adc
movs
les
xor
dec
test
es
out
mov
jecxz
js
test
jg
call
or
outs
jg
jg
mov
adc
loope
cmps
adc
fstp
call
push
inc
popa
lds
push
jae
mov
adc
ret
sbb
jle
and
out
mov
call
in
iret
xchg
cmps
xchg
or
push
(bad)
sub
stc
lea
les
jmp
mov
nop
out
movs
dec
outs
lods
sub
fstp
jmp
das
aad
cmp
inc
pop
cmps
cli
xchg
cmp
or
retf
shl
mov
retf
jae
fiadd
div
and
sub
idiv
add
adc
fsubr
loope
(bad)
ret
jl
loope
inc
xor
sbb
or
dec
dec
int3
push
mov
nop
dec
call
mov
cld
push
(bad)
push
dec
test
inc
sbb
jb
in
in
(bad)
jns
sub
add
jge
mov
jg
or
gs
cdq
neg
stos
mov
dec
daa
dec
clc
pop
xchg
sub
mov
retf
mov
(bad)
(bad)
mov
or
lahf
jmp
dec
std
dec
push
and
or
xor
dec
fstp
loop
dec
cmps
cdq
je
das
sub
or
cld
xchg
ins
jl
out
and
les
pop
jecxz
jp
xchg
mov
leave
push
and
cli
dec
gs
loope
cmps
or
sub
mov
inc
add
pop
mov
push
xchg
mov
inc
push
add
mov
imul
inc
xchg
xchg
les
pusha
jno
shl
ins
xor
and
cld
iret
js
push
movs
xor
add
pop
imul
pop
cmp
addr16
cmp
mov
not
pop
call
cli
in
cmp
arpl
aas
sub
sub
lods
push
(bad)
out
les
sub
js
lea
icebp
mov
cdq
mov
xor
fisttp
stos
and
sub
popf
dec
out
movs
data16
jmp
outs
js
pop
push
sbb
ins
(bad)
arpl
repz
push
popa
xchg
fimul
leave
mov
add
adc
test
xchg
cmps
int3
push
mov
fistp
mov
rol
and
xor
and
push
leave
jb
test
test
mov
mov
movs
stos
mov
xchg
xchg
push
js
(bad)
cmps
loop
inc
sbb
push
jmp
dec
adc
jnp
or
push
xchg
pop
aad
sub
mov
pop
mov
mov
retf
lahf
cmp
dec
sbb
sbb
fdiv
mov
or
mov
outs
out
(bad)
cmps
retf
and
jmp
mul
dec
sbb
xchg
int3
fcom
xor
pop
sub
push
out
shl
ins
int3
outs
adc
dec
movs
push
call
loop
xor
mov
mov
iret
stos
push
(bad)
fild
adc
out
jb
and
pop
or
add
(bad)
sar
sti
loope
mov
jmp
mov
fisttp
mov
out
fcom
(bad)
xor
inc
sbb
fwait
cli
jp
cdq
or
ss
js
pop
fisub
mov
add
jg
sbb
push
push
ret
int3
lds
out
cmps
add
jnp
popf
js
mov
inc
pop
out
mov
out
(bad)
or
jecxz
sub
cmps
jbe
jge
in
mov
bound
push
enter
xor
or
cs
mov
std
inc
sti
rol
repnz
inc
xor
jmp
pusha
enter
and
retf
adc
push
test
sub
mov
das
sub
jl
mov
fsubr
fstp
fidiv
scas
xchg
sbb
fst
sub
mov
mov
mov
xchg
sbb
and
iret
ret
dec
inc
ficom
add
aad
cmps
test
mov
nop
aam
add
(bad)
and
popf
dec
add
inc
aaa
cli
push
mul
or
jnp
les
in
jecxz
sahf
mov
gs
mov
xor
repnz
mov
cmp
push
aam
push
dec
sub
adc
push
dec
sub
fiadd
inc
push
pop
aad
mov
adc
fdivr
daa
xchg
pop
cs
push
pop
outs
add
sbb
in
fnstenv
ins
pushf
xor
cmp
adc
iret
cmc
xor
or
data16
cld
mov
addr16
jmp
outs
div
stos
push
data16
movs
dec
cdq
das
sbb
add
test
popa
mov
and
jp
push
movs
inc
out
push
inc
movs
xchg
mov
addr16
sbb
and
hlt
(bad)
xchg
or
and
push
ficomp
cmp
or
push
jae
mov
jge
jl
(bad)
xchg
sub
stc
lock
fstp
in
(bad)
mov
mov
push
pop
or
loop
outs
das
arpl
jb
repz
movs
push
dec
inc
loop
sahf
xchg
mov
into
out
mov
je
mov
add
inc
sbb
and
dec
xlat
jmp
arpl
popf
call
push
outs
shl
add
push
add
cmp
push
aam
dec
lahf
xchg
inc
jmp
add
add
lea
out
cmps
or
add
sub
shl
dec
jmp
loop
(bad)
retf
in
inc
fs
out
inc
sbb
xor
rol
test
retf
push
inc
mov
or
stos
lahf
movs
xchg
pop
pop
jmp
cli
in
mov
test
into
cwde
ins
les
sbb
es
sbb
jl
popa
movs
mov
nop
cmp
push
dec
in
das
mov
idiv
das
mov
mov
xor
(bad)
js
jne
repnz
movs
nop
sbb
sbb
leave
cli
fdivr
(bad)
pop
cmp
pop
pop
sbb
popa
jge
outs
push
pop
jno
aam
fyl2x
mov
xchg
jl
fstp
jmp
int3
gs
cmp
jle
int3
in
inc
adc
lds
xchg
mov
hlt
inc
pop
das
fstp
mov
xor
daa
xchg
mul
jno
push
stos
or
jns
push
jae
xchg
dec
adc
dec
jmp
pop
mov
les
mov
rcr
ss
sub
retf
adc
popf
mov
mov
push
fiadd
jne
neg
or
or
fisttp
dec
retf
cmp
xchg
jne
int3
movs
mov
mov
push
enter
pop
sub
int
int3
stos
push
(bad)
cmp
leave
ror
xor
or
out
fidiv
call
and
ror
out
sub
sub
aas
sbb
div
and
test
sub
mov
or
cdq
int3
adc
sub
mov
xor
mov
mov
jb
js
push
rol
imul
test
push
cmp
xor
jp
cmps
lds
rcr
std
push
(bad)
xor
retf
sbb
mov
xchg
es
xchg
xchg
dec
adc
pushf
sub
inc
mov
fistp
push
loop
imul
jp
xor
and
and
fldenv
mov
(bad)
or
sub
dec
pop
jp
xchg
pop
push
mul
out
push
arpl
xchg
adc
jge
enter
push
or
js
ins
pusha
dec
cs
lds
outs
aaa
dec
ins
mov
push
mov
loope
std
out
cld
out
dec
jo
pop
push
in
push
repnz
clc
sbb
cmps
arpl
lahf
cwde
mov
out
adc
in
test
adc
push
cmp
jle
jae
test
dec
pop
xor
loope
mov
sub
stos
cld
cmps
out
and
imul
movs
lock
xlat
xor
div
cmp
cdq
cmps
sub
ja
aam
mov
(bad)
xchg
xor
jmp
add
mov
lock
not
(bad)
dec
inc
outs
jo
in
sbb
cdq
xchg
or
cld
movs
test
mov
fisub
ret
xchg
mov
or
xchg
jg
stc
aad
aas
arpl
mov
loope
fmul
sub
sbb
push
inc
add
out
fst
rol
(bad)
cmp
(bad)
lods
int3
jmp
iret
lds
shr
mov
aam
jecxz
cld
int
push
data16
inc
adc
rcl
aas
(bad)
pop
mov
pusha
sbb
adc
sbb
out
popa
pop
mov
pop
mov
mov
out
nop
xchg
in
adc
and
add
imul
push
fiadd
cmp
movs
pushf
ss
jecxz
mov
jb
out
mov
in
mov
pop
sahf
lea
mov
or
fistp
fst
jge
outs
mov
movs
and
aaa
jecxz
fiadd
movs
xor
scas
push
outs
inc
xor
mov
pop
sar
rol
rol
lock
mov
mov
mov
call
int
je
das
dec
iret
mov
jo
sub
jnp
rcl
xchg
call
fstp
js
lods
or
sbb
ss
cmps
xchg
pusha
rcr
push
dec
sub
dec
sub
retw
sar
ret
iret
bound
xchg
mov
ds
mov
sub
shr
loop
pop
push
mov
push
clc
mov
mov
mov
mov
sub
mov
pop
mov
xchg
ds
ret
aad
dec
jno
xchg
and
loopne
pop
out
push
dec
imul
fs
fwait
push
sbb
jae
out
int3
je
test
mov
(bad)
jge
arpl
call
mov
add
cmp
cmp
movs
jmp
mov
(bad)
mov
sbb
dec
stos
inc
lods
mov
jecxz
xchg
das
adc
adc
movs
jnp
xor
jecxz
(bad)
(bad)
stc
xlat
aam
fcom
pop
pop
mov
mov
shr
pop
sahf
push
inc
fistp
int3
mov
cmp
out
scas
add
ficomp
dec
pop
and
enterw
cdq
in
fisubr
fld
cmp
repz
cmc
mov
outs
aam
clc
aaa
and
pop
pop
pop
mov
fsub
jle
jb
retf
add
adc
adc
(bad)
std
addr16
iret
mov
sub
lods
clc
xchg
mov
pushf
rol
lds
adc
movs
hlt
retf
test
retf
or
sub
adc
(bad)
push
shl
fwait
not
pop
pop
and
popf
add
inc
adc
pop
and
(bad)
pusha
(bad)
and
test
pop
pop
xor
nop
(bad)
outs
add
sub
ja
fstp
sub
call
xor
dec
mov
pop
lock
push
jno
mov
push
clc
ret
fistp
xchg
test
(bad)
push
xor
movs
les
xor
push
add
(bad)
xchg
cwde
dec
dec
dec
add
jp
mov
lea
js
sbb
retf
lea
mov
mov
aam
mov
cmp
ins
jae
das
test
mov
sbb
sbb
int3
sbb
cmps
push
leave
or
fsub
rol
pop
pop
es
push
push
cmp
mov
cmp
std
pusha
aaa
mov
jns
dec
xchg
or
mov
aas
adc
les
add
push
ss
jns
pop
out
outs
jnp
cmp
mov
imul
shl
in
lock
adc
add
(bad)
push
mov
adc
xchg
ins
je
mov
xor
jge
push
das
mov
xlat
pop
dec
lds
sbb
(bad)
icebp
push
pop
and
fcmovnb
pop
retf
lock
dec
dec
arpl
xor
clc
jmp
adc
jge
loop
sti
outs
popa
push
pop
fistp
int3
fldenv
(bad)
std
fcmovnu
xor
xor
in
pushf
and
xchg
sbb
cmps
and
or
fdivr
or
push
imul
sub
mov
aas
mov
into
add
cmps
je
(bad)
bound
push
outs
inc
mov
retf
aaa
mov
pmuludq
dec
sub
outs
rcl
push
and
push
fistp
test
imul
and
sub
(bad)
and
xor
shl
lock
(bad)
js
stos
hlt
and
push
jns
xchg
xor
xchg
stos
(bad)
test
pop
and
pushf
mov
or
xchg
div
xchg
or
gs
(bad)
and
mov
je
scas
jp
mov
jnp
and
jbe
xchg
ficom
jne
ret
repz
adc
cmp
aas
sbb
(bad)
in
rcl
fmul
push
mov
lea
lods
or
ret
rol
xchg
add
imul
lock
enter
icebp
cli
push
sbb
pop
clc
addr16
daa
pop
push
push
jg
stc
imul
xchg
std
mov
jg
js
jns
xchg
(bad)
cmps
std
pop
dec
out
test
sub
cld
das
push
add
mov
movs
je
shl
lea
and
xchg
lock
inc
outs
adc
test
sbb
push
loope
pusha
fwait
add
pop
in
adc
mov
sub
fsub
jbe
std
push
inc
dec
cld
dec
pop
cmp
jae
xor
mov
jnp
xor
xchg
adc
inc
cmp
cmp
or
call
loop
jge
xchg
stos
aad
and
repnz
jle
mov
cdq
mov
sbb
ret
outs
sub
rol
push
sub
mov
push
xchg
jmp
mov
xor
mov
adc
loopne
pop
ja
stc
adc
stos
or
stos
sar
ficom
cmp
push
fidiv
add
dec
mov
and
int
out
sub
sub
bound
nop
dec
iret
jle
arpl
out
je
push
xor
mov
inc
mov
imul
mov
hlt
mov
fisub
dec
arpl
push
neg
inc
dec
repz
shl
xchg
or
and
jno
jmp
in
int3
mov
aad
fmul
fmul
mov
sub
sbb
ins
xor
mov
aas
mov
(bad)
std
test
(bad)
mov
xchg
aas
add
sub
or
or
ror
stos
int
mov
xchg
ja
inc
sbb
out
stos
movs
cs
lods
adc
out
cmp
adc
addr16
int
mov
push
or
mov
adc
jb
jns
push
sar
popf
std
cmc
adc
retf
or
xchg
test
adc
sbb
xchg
daa
xchg
jg
das
scas
scas
mov
adc
mov
sub
sbb
js
mov
call
sub
add
sub
pop
sbb
mov
sub
rcr
cmc
adc
inc
stos
sub
shr
retf
ds
mov
in
in
leave
add
or
stos
adc
ror
rcl
es
(bad)
hlt
call
fs
icebp
sub
xchg
popa
jns
sub
mov
ss
pop
pushf
dec
lahf
mov
lock
jnp
shl
test
dec
sub
inc
cmp
cmp
inc
cld
mov
mov
jg
sub
sti
rdmsr
pop
and
adc
call
loope
jge
mov
inc
push
adc
iret
stc
(bad)
setns
mov
cmps
je
jl
idiv
mov
jle
fadd
cld
out
cwde
mov
sbb
and
cld
push
or
movs
loop
dec
sbb
mov
sub
clc
(bad)
mov
test
jmp
je
xchg
add
jbe
inc
and
std
jle
aas
sub
in
jg
shl
mov
dec
jmp
ja
fidivr
bound
or
adc
cmp
add
gs
cs
fldenv
sbb
inc
test
push
dec
xlat
mov
and
clc
mov
leave
fwait
jae
pushw
xchg
rcl
in
test
stos
push
fcom
mov
adc
xor
popf
outs
adc
outs
mov
xor
sti
int
jno
test
leave
adc
js
mov
pop
ss
jl
imul
pop
or
jns
add
pop
(bad)
arpl
dec
xchg
test
jb
jg
jb
lods
push
push
xchg
pop
ss
out
pushf
mov
pop
mov
jmp
and
mov
cmc
rol
jl
lahf
push
mov
xchg
inc
stc
jo
fisubr
or
cmp
(bad)
jmp
call
jnp
mov
imul
push
cmp
pop
jbe
arpl
movs
into
mov
int
out
repz
jmp
xlat
inc
pop
popa
sar
push
inc
enter
stos
jge
adc
sub
and
lahf
mov
mov
jmp
addr16
mov
add
sbb
cmp
test
jae
mov
xor
mov
(bad)
repnz
pop
ret
xlat
jnp
cmp
pop
mov
(bad)
dec
inc
in
mov
or
stos
mov
sbb
cwde
aam
push
stos
test
int3
sub
dec
cmps
xchg
lods
sbb
into
and
cmps
pop
jmp
inc
mov
jmp
inc
xor
ins
or
lods
mov
xor
scas
and
dec
movs
aad
call
fmul
sub
mov
stos
inc
cwde
pop
xchg
mov
mov
cmp
push
inc
push
(bad)
bnd
arpl
fst
dec
jb
rol
lods
pop
(bad)
lods
aad
(bad)
jge
dec
test
cdq
dec
push
mov
cmps
jmp
xchg
sub
xchg
push
inc
out
shr
jle
scas
popf
or
dec
and
jno
xor
loope
in
mov
or
call
cmps
jl
mov
out
lds
jns
xchg
(bad)
inc
shl
out
pavgw
inc
and
imul
call
retf
push
test
mov
retf
mov
pop
dec
in
xchg
xchg
call
mov
mov
push
rol
daa
and
in
adc
push
push
jb
inc
test
xchg
cmps
mov
int
fincstp
movs
add
bound
inc
cmp
mov
repz
aas
add
inc
addr16
bound
fisttp
ja
pop
mov
push
test
push
push
outs
(bad)
and
stc
or
adc
and
jae
cmp
iret
loope
mov
sub
sbb
lods
lea
mov
and
push
popf
push
aaa
cmp
popa
jb
(bad)
and
inc
push
pop
pop
ins
outs
loopne
sub
inc
jb
push
int
pop
in
xchg
or
sub
aaa
ins
mov
outs
mov
ss
lock
push
outs
xchg
jmp
lock
ja
pop
pop
pop
xor
in
and
cmp
push
add
sub
push
popa
xor
cld
(bad)
in
(bad)
(bad)
jg
add
mov
ret
push
in
int3
pop
fwait
inc
cdq
sbb
mul
xchg
std
sub
in
mov
mov
mov
add
ret
jb
lahf
sar
loopne
paddusw
push
(bad)
and
pop
sub
lahf
jmp
sbb
xor
addr16
fucomip
scas
aad
xor
ins
mov
push
jmp
cmp
call
out
shl
mov
pop
inc
and
pop
lock
xor
cmps
popa
ja
mov
addr16
scas
jne
and
adc
xchg
mov
ss
hlt
ins
test
rcr
repz
rol
call
leave
les
mov
push
fiadd
fadd
adc
sub
cmc
jns
or
mov
sbb
xchg
jle
or
jle
mov
aam
mov
and
js
add
int3
and
cmp
aas
std
dec
adc
xchg
adc
inc
mov
xchg
cmp
mov
sbb
add
dec
ret
inc
xchg
push
(bad)
mov
cmp
retf
ret
mov
lock
mov
adc
pop
sahf
jecxz
push
scas
neg
cwde
call
ins
mov
and
mov
inc
cmps
xor
push
push
pushf
nop
fadd
mov
ficom
push
and
loope
mov
inc
nop
and
rcr
les
mov
in
xchg
js
lods
das
bound
retf
int
lock
or
push
cmc
and
jecxz
outs
adc
(bad)
fiadd
push
sbb
sbb
xchg
iretw
pop
cmp
pop
adc
cmp
ss
xchg
imul
aad
ins
bound
xor
popa
loop
(bad)
xchg
jl
call
std
into
out
call
and
lods
arpl
addr16
aas
(bad)
pusha
sub
cmps
ins
call
dec
sub
ror
pusha
call
mov
movs
jge
inc
add
mov
jnp
hlt
popa
mov
sbb
inc
jecxz
cmp
mov
sbb
int3
mov
loope
aas
or
pop
movs
test
jle
inc
push
jmp
push
cld
mov
cmps
std
xchg
in
cwde
mov
imul
xor
sub
sbb
fld
dec
scas
sub
inc
pop
mov
fisub
arpl
xor
xor
stos
rcr
out
dec
cdq
sub
fild
leave
dec
mov
sub
mov
call
xor
loope
popa
pop
(bad)
out
js
in
push
test
loopne
call
push
int
sub
les
add
cld
push
or
jmp
rcl
xor
sar
ss
mov
adc
aaa
inc
xor
fbstp
jnp
jecxz
xchg
arpl
adc
cmps
scas
daa
inc
xor
sbb
or
push
mov
push
jnp
push
mov
scas
and
jg
dec
sub
pop
dec
pop
fucom
adc
mov
mov
std
inc
fst
push
ins
or
and
or
int
cmc
add
jl
xor
outs
push
stos
add
pop
adc
mov
fst
inc
shl
lea
pop
dec
dec
ror
ja
adc
xchg
mov
mov
das
mov
stos
dec
icebp
es
int3
xlat
jecxz
aad
jbe
lds
or
jae
dec
loop
repnz
sbb
push
stc
ds
movs
push
shr
xor
shl
xchg
test
out
lods
sbb
mov
cmps
(bad)
inc
pop
(bad)
sbb
cmp
cmps
cmps
cmp
inc
aaa
mov
sub
in
mov
push
sub
mov
xchg
mov
adc
xchg
xchg
aam
jle
daa
repnz
or
dec
lds
mov
out
das
and
jnp
push
mov
ss
dec
retf
or
jns
sub
xor
push
out
lea
or
stos
pop
rcl
and
jp
stos
ds
sub
hlt
(bad)
lock
xchg
jo
adc
out
(bad)
jae
sub
push
inc
sti
inc
arpl
jbe
aam
mov
xchg
mov
pop
sbb
shl
sahf
sub
push
imul
idiv
iret
push
jge
and
ret
xchg
in
jmp
sar
rcr
test
scas
movs
hlt
neg
loopne
pop
addr16
ret
or
lea
je
jmp
inc
jns
out
mov
jge
into
adc
or
xor
movs
xlat
(bad)
std
rcr
shr
xor
push
mov
adc
adc
pusha
loopne
xchg
jmp
push
(bad)
jnp
and
adc
popa
xchg
inc
adc
xchg
dec
cmc
mov
xchg
lods
sbb
cdq
cmp
out
aas
sar
stos
fldcw
test
retf
add
aaa
lahf
mov
cmp
nop
shrd
popf
inc
cs
std
push
psubsw
xchg
out
mov
daa
shr
or
pop
jecxz
add
jecxz
int
aad
shr
mov
and
fisubr
aad
mov
clc
xlat
retf
xchg
mov
inc
push
ds
add
int3
rol
or
mov
push
sahf
cmps
arpl
jmp
push
(bad)
out
xor
push
fcom
add
lds
push
adc
jmp
test
mov
retf
or
jmp
mov
add
mov
mov
test
xchg
movs
sbb
and
out
or
in
mov
(bad)
jnp
cmp
or
scas
imul
dec
jnp
cli
jecxz
mov
adc
push
pop
or
or
addr16
addr16
mov
adc
adc
(bad)
imul
gs
enter
dec
xchg
mov
add
stc
sar
int3
pusha
and
mov
jne
and
pop
jl
loope
loop
jmp
pop
stos
mov
push
add
mov
dec
xchg
xchg
cmp
mov
jp
js
inc
or
cdq
repz
cmp
xor
cmp
add
test
sbb
loop
mov
fs
push
push
test
xor
sahf
imul
add
push
jmp
in
lods
push
cmp
mov
out
je
mov
es
sub
pop
and
cmp
sub
(bad)
jl
adc
adc
jg
xchg
lods
add
and
cli
pop
pusha
cmp
icebp
sub
out
mov
mov
cmps
jns
cmp
pop
(bad)
dec
add
popa
mov
out
js
retf
pop
sete
shr
leave
cld
cmp
and
cmp
repnz
inc
repz
fimul
call
(bad)
xor
mov
scas
mov
jg
std
mov
lock
stos
cmp
mov
data16
pop
aam
out
loop
sub
stos
in
mov
out
jb
fdivr
dec
dec
and
add
xor
mov
push
sbb
ss
pop
or
icebp
jnp
and
push
jle
test
fwait
mov
cld
jmp
cmp
jnp
push
test
mov
pop
aam
aas
push
(bad)
sub
lds
mov
fcom
les
mov
or
jg
xchg
das
pop
sbb
or
sbb
jno
jb
pop
lods
fdivp
mov
movs
loope
aam
lods
(bad)
mov
fisttp
sti
in
push
push
fst
xor
cwde
das
repnz
les
fcom
pop
sbb
mov
stos
cmp
int
xor
or
mov
adc
mov
fidiv
push
jle
lea
and
jl
add
dec
pop
add
mov
mov
sbb
xor
call
in
inc
pop
in
sar
sti
mov
or
and
fcomp
mov
sub
fs
ds
jae
dec
dec
push
fimul
dec
jb
push
xor
sbb
stos
adc
mov
dec
lock
mov
pop
mov
out
add
loopne
push
and
ss
mov
pop
cmps
xchg
mov
jmp
mov
imul
test
cmc
and
lock
outs
push
pop
jnp
push
inc
adc
sbb
pop
ja
mov
sbb
div
enter
jnp
(bad)
std
adc
mov
or
cli
pop
out
rol
pop
xor
jo
stos
mov
aaa
sahf
inc
cmp
ror
and
mov
mov
movs
fst
push
out
dec
ret
inc
mov
das
test
pop
jmp
xchg
inc
mov
repnz
test
test
push
imul
lahf
shl
int
dec
pop
outs
sahf
ins
dec
jg
hlt
ret
push
mov
aam
ss
imul
push
daa
sub
(bad)
scas
push
js
and
mov
mov
out
imul
daa
int3
lods
mov
je
fiadd
je
adc
not
frstor
cmps
jge
add
das
addr16
loope
sti
popf
movs
fimul
dec
jb
shr
fldcw
xlat
push
hlt
sub
mov
mov
js
fidivr
mov
pop
pushf
mov
adc
xchg
adc
fdiv
pop
out
sub
xlat
(bad)
mov
ret
xchg
das
(bad)
stc
inc
push
lds
ja
mov
sbb
leave
inc
inc
shl
loope
inc
xor
and
call
xchg
(bad)
mov
scas
adc
mov
pop
sbb
xchg
lds
sub
adc
aad
in
or
adc
xchg
ins
pusha
mov
fiadd
jne
sub
pushf
data16
cmovno
push
and
bound
adc
stos
pop
pop
push
add
outs
call
or
icebp
sbb
arpl
cld
ficomp
(bad)
int
mov
mov
call
movs
mov
pop
xor
inc
in
inc
lods
sub
dec
ret
icebp
mov
mov
push
xor
mov
clc
ds
stos
cmps
ret
jp
pop
(bad)
push
sbb
adc
ror
inc
mov
xchg
inc
cmp
gs
jmp
xchg
aaa
or
mov
or
loopne
mov
mov
mov
pop
push
adc
sub
imul
jnp
out
dec
xchg
jbe
fcomp
jbe
mov
fisttp
repnz
push
rol
enter
repz
ja
call
clc
push
mov
rcl
and
sahf
inc
hlt
int
scas
in
pusha
add
(bad)
or
aam
ss
loope
rcr
pop
imul
aaa
mov
adc
loop
lods
and
cs
fs
sub
mov
sahf
and
sub
cmp
pop
add
push
mov
dec
xchg
adc
outs
pop
and
pop
(bad)
cs
cwde
adc
mov
data16
mov
mov
push
ret
sahf
retf
xchg
clc
test
mov
mov
cmp
push
iret
push
add
not
jno
mov
outs
push
inc
jne
cs
shl
arpl
and
shr
push
(bad)
xor
and
cld
movs
jae
mov
xchg
dec
cmc
ret
push
sub
pop
jb
nop
and
sbb
ja
pop
sub
cmp
mov
mov
(bad)
xor
dec
cmps
les
jo
imul
popa
mov
xchg
add
inc
push
mov
inc
xchg
imul
popa
ds
shr
inc
and
int3
(bad)
sbb
ficomp
cli
push
pop
jecxz
adc
mov
adc
cmp
ja
sbb
xor
inc
inc
nop
add
push
ret
pop
sub
pop
(bad)
adc
sub
push
inc
out
or
sub
cmp
jae
jnp
push
popf
and
xor
sbb
push
ds
mov
dec
stc
cmp
aam
push
repnz
call
pop
or
cmp
add
pop
cld
js
jno
imul
dec
ror
xchg
lods
and
mov
mov
cmps
mov
data16
retf
gs
push
sbb
adc
xor
sub
xor
xchg
mov
or
add
inc
faddp
ret
cwde
add
pop
sar
add
pop
addr16
mov
jmp
add
jae
jmp
push
xchg
in
xor
cmp
cli
adc
aam
xor
add
cmp
xchg
cmp
pop
pushf
inc
add
loopne
ret
and
cwde
lds
inc
dec
pop
add
outs
mov
and
or
in
mov
movs
jbe
inc
ret
into
jl
mov
idiv
ja
popa
inc
add
pop
pop
idiv
dec
jp
cmp
shr
push
jbe
dec
scas
neg
inc
xchg
pop
cwde
jae
xor
scas
out
pop
sbb
adc
fnstenv
mov
enter
dec
pusha
xor
xchg
or
mov
sbb
pop
ficom
aam
fs
leave
pop
leave
inc
jmp
inc
sbb
jne
ja
xor
pop
push
sub
lahf
popf
ret
mov
mov
inc
into
jp
mov
cmps
push
test
inc
or
mov
imul
and
aas
sbb
aam
inc
push
cwde
inc
outs
cli
push
mov
jp
xchg
aas
stos
cmp
add
jp
std
pop
push
call
mov
and
(bad)
gs
pop
hlt
cmp
test
(bad)
arpl
cdq
into
lods
bnd
fld
scas
sbb
mov
add
mov
mov
stos
xchg
pusha
(bad)
test
cmp
pop
add
(bad)
fstp
mov
popf
sub
mov
mov
call
iret
daa
adc
scas
and
mov
dec
ds
xchg
dec
dec
cmp
pop
adc
bound
adc
xchg
cmc
xor
push
mov
out
ror
mov
xor
mov
movs
pop
aaa
or
push
fdivr
sub
cmc
lods
inc
pop
stc
call
push
sbb
in
loopne
mov
adc
pop
dec
xchg
xchg
cld
mov
fidiv
push
cmp
mov
jo
jb
adc
into
icebp
pop
retf
cmc
mov
push
fcmovbe
add
movs
pop
mov
shl
sti
lock
sub
xor
jg
cmp
arpl
cli
push
xor
call
fistp
aad
test
out
inc
loop
mov
outs
call
fiadd
sub
enter
aas
adc
jno
xlat
sbb
jp
std
push
fidivr
fcom
xlat
adc
pop
out
push
xchg
add
push
bound
fmul
and
cmp
mov
add
mov
cmps
pop
add
aam
xor
push
xchg
mov
(bad)
ficomp
pushf
loopne
mov
push
push
xor
xchg
pop
mov
aaa
add
xchg
not
cmp
mov
pmulhuw
test
add
adc
mov
adc
xchg
(bad)
neg
movs
mov
ins
mov
js
aam
pop
jmp
mov
xor
mov
and
push
dec
adc
or
or
or
lods
xchg
push
call
add
jge
mov
pop
cwde
and
xchg
dec
push
mov
push
push
stc
scas
jb
xchg
lds
dec
ret
js
and
or
call
jmpw
lods
hlt
loopne
sub
es
psllq
fld
imul
sub
mov
lods
sub
int3
jle
add
cmc
xor
mov
jnp
xor
xchg
mov
movs
aad
xchg
jno
(bad)
addr16
xor
push
xchg
leave
mov
push
push
or
push
retf
out
std
ds
gs
in
loope
inc
add
and
pop
in
xor
xchg
jno
push
addr16
push
or
sub
dec
mov
pusha
cwde
mov
xor
hlt
jne
cmc
shl
mov
adc
sub
cld
fs
mov
(bad)
xlat
sub
sub
fiadd
dec
fwait
sub
(bad)
aaa
mov
arpl
mov
(bad)
push
adc
xor
lods
cmps
addr16
loopne
jb
test
lods
push
fwait
add
mov
or
mov
xchg
mov
dec
dec
in
push
scas
int3
fcomip
ret
and
pop
sbb
push
cmp
(bad)
or
test
clc
ss
ds
fisttp
std
sub
adc
mov
adc
lock
into
test
mov
aas
jp
fbld
test
jnp
(bad)
leave
bound
gs
xor
out
adc
xchg
in
sar
arpl
mov
sub
jno
sbb
in
jle
jb
daa
fild
into
ds
stc
repz
push
fcomi
aaa
push
add
xchg
int3
add
cli
ffree
adc
cli
cwde
ins
or
or
test
xchg
mov
mov
scas
cs
scas
sahf
dec
xlat
push
outs
sar
lea
out
test
or
out
cmc
and
xor
xchg
icebp
pop
add
xor
repnz
lods
jne
ds
xor
or
and
add
cmps
lahf
pop
ss
jns
pop
mov
pop
pop
xor
(bad)
and
clc
lea
xchg
outs
inc
mov
je
fidiv
and
cmps
mov
or
mov
jge
jmp
aad
test
dec
xor
pop
call
inc
ror
retf
jmp
sub
push
adc
(bad)
jecxz
out
or
or
loop
add
sub
cmps
pusha
pop
in
(bad)
int3
jmp
in
dec
icebp
mov
rcl
in
xor
(bad)
aam
xchg
scas
scas
cmc
inc
inc
scas
mov
lea
nop
stos
jno
and
mov
xchg
pop
push
push
xchg
lods
icebp
fdiv
mov
lock
imul
(bad)
fsubr
mov
pop
jo
or
jmp
pushf
push
adc
(bad)
adc
mov
dec
sbb
test
xor
popa
lock
add
or
xchg
jg
fwait
popf
loope
and
mov
mov
mov
push
xchg
mov
push
push
dec
aam
dec
push
mov
dec
fs
stos
stc
push
ss
loope
lahf
ror
push
daa
add
retf
int3
sbb
adc
jnp
adc
jnp
cmp
out
out
jmp
ror
stos
adc
push
mov
test
hlt
int
pushf
or
les
adc
fmul
dec
cwde
or
daa
mov
pop
mov
xchg
in
std
cmp
xchg
aam
or
xor
fucomi
pop
dec
push
ret
xchg
add
xor
xor
and
cmp
out
pop
mov
aas
daa
jbe
movs
adc
and
pop
mov
sbb
sub
test
shl
cmp
xchg
imul
or
jmp
int3
jnp
js
inc
and
cmp
out
cmp
std
pusha
inc
add
inc
xlat
push
cdq
mov
add
imul
lods
cmp
xchg
(bad)
imul
xor
inc
out
in
cmp
fcomp
jp
pop
jle
adc
fcom
aam
push
fisubr
jbe
mov
dec
fs
es
push
push
popf
and
mov
dec
sar
enter
lea
popf
push
pop
pop
jge
or
jae
pop
lahf
bound
test
enter
cmp
in
xchg
and
popf
aaa
jo
test
jl
pop
dec
imul
shr
(bad)
jno
imul
pop
xchg
adc
adc
les
xchg
cmp
mov
and
jbe
add
bnd
xor
and
test
mov
pop
sub
outs
loop
fwait
pushf
mov
xor
jmp
cmp
leave
adc
(bad)
fiadd
out
in
jp
popa
push
or
add
movs
add
icebp
cmc
add
lds
nop
icebp
inc
arpl
aaa
push
stos
icebp
mov
jl
int3
lea
mov
fwait
dec
mov
mov
pop
sbb
mov
pushf
jns
mov
mov
pop
or
mov
mov
sar
mul
push
ins
movs
mov
rcl
test
jg
xor
and
or
jno
mov
(bad)
fmul
ret
cli
call
rol
pop
xor
jo
xchg
xchg
aas
push
(bad)
clc
sbb
ja
mov
and
sahf
jmp
mov
imul
jg
inc
xor
pop
xor
sbb
dec
adc
jg
popf
sbb
sub
mov
jb
jge
inc
inc
ss
es
dec
mov
popa
or
loope
mov
cdq
pop
sub
or
jns
inc
push
mov
ret
push
pusha
jecxz
push
pop
xchg
(bad)
mov
inc
push
mov
adc
push
inc
jecxz
lea
pop
pop
pop
push
add
sbb
ret
push
mov
mov
imul
addr16
(bad)
cld
push
xchg
movs
xchg
lds
ss
pop
sahf
aas
adc
dec
setp
xor
inc
sub
xchg
shl
jg
repnz
pusha
mov
test
inc
outs
and
pop
das
sahf
popa
movs
clc
pusha
(bad)
pop
mov
mov
jge
clc
jp
arpl
arpl
add
imul
jp
pop
aaa
mov
add
jmp
xchg
cmp
repz
(bad)
loope
into
xchg
(bad)
lock
sbb
and
mov
xor
cmp
xor
retf
mov
mov
or
xor
clc
add
mov
adc
call
inc
inc
pop
xchg
mov
jmp
push
pop
out
in
or
dec
dec
add
mov
push
lds
hlt
in
ds
call
sub
clc
test
push
fstp
loop
retf
push
xor
sub
xor
ins
fsub
add
cwde
sar
cs
xchg
call
cmc
mov
jbe
pop
jecxz
pop
cmps
nop
shl
adc
adc
mov
dec
pop
ret
pop
stos
dec
fist
push
shr
dec
aad
aad
sub
add
xor
sti
inc
es
popf
cs
pushf
sub
fsub
lahf
stc
pop
inc
sub
lds
in
xchg
test
imul
and
push
ins
addr16
cwde
push
ss
cmp
clc
int
push
sub
stc
cmps
sahf
xchg
pushf
pop
pop
test
out
mul
je
call
sqrtps
xchg
dec
push
imul
(bad)
sti
add
data16
xor
xor
loope
(bad)
loopne
or
lds
mov
int
fnstcw
inc
push
iret
jae
or
lahf
lods
and
lods
fs
mov
retf
and
into
into
call
mov
jl
(bad)
data16
jbe
sti
ja
inc
or
hlt
ret
loopne
push
loope
jns
mov
push
jp
lea
jecxz
mov
addr16
jg
repnz
pop
in
and
xchg
mov
inc
push
mov
mov
pop
enter
in
mov
sbb
mov
xor
mov
push
pushaw
inc
jge
shl
lahf
pop
sub
push
sbb
sti
pop
test
pop
push
stc
test
in
xor
loopne
push
test
jo
es
adc
dec
mov
mov
jb
jbe
clc
cmp
inc
in
mov
mov
push
and
lock
jl
push
push
xlat
cmps
sbb
scas
cmp
inc
mov
popf
lea
addr16
mov
lods
xchg
loope
fstp
test
cwde
fwait
mov
aaa
push
aad
mov
and
imul
xchg
movs
loop
xor
fwait
push
mov
movq
outs
fistp
fadd
(bad)
fs
or
popf
push
jns
push
mov
cmp
std
xor
jno
pop
mov
push
dec
xor
pusha
pop
xor
lds
sbb
dec
(bad)
addr16
xchg
xlat
sub
pop
and
cmp
test
out
ds
inc
in
sbb
jl
or
fidiv
xor
mov
mov
fmul
test
loope
test
fstp
mov
lahf
adc
xor
cwde
pop
or
test
call
mov
iret
ret
pop
outs
pop
inc
mov
xchg
inc
fistp
jp
mov
mov
(bad)
fld
cmp
outs
pop
(bad)
mov
fisubr
mov
test
lea
loope
mov
mov
stos
mov
fs
fidiv
add
jp
pop
lods
and
rcl
je
gs
pop
inc
add
or
jmp
out
dec
call
inc
retf
pusha
je
xchg
mov
pop
mov
inc
dec
mov
out
repnz
data16
cmp
cwde
(bad)
lods
cs
sar
repz
stos
aad
mov
stc
repnz
sar
js
aad
jbe
leave
cdq
in
mov
lea
xchg
in
ins
fst
jno
mov
daa
pop
ja
dec
mov
les
jbe
js
mov
cmp
retf
out
mov
sar
and
dec
sbb
icebp
outs
pop
cmp
ror
cwde
sbb
shl
aam
dec
dec
push
mov
call
push
fs
dec
and
out
jmp
dec
and
in
pop
sbb
xor
cmp
stos
cmc
outs
sbb
call
dec
jge
sbb
dec
and
adc
xchg
push
(bad)
enter
pop
sbb
xor
jge
and
popf
and
mov
cmp
mov
shr
sbb
cmp
mov
(bad)
sub
call
push
fisub
daa
fnsave
mov
mov
inc
lods
leave
mov
mov
ins
add
jbe
jo
ficomp
and
cmps
xor
arpl
ret
pusha
nop
adc
mov
push
out
inc
jnp
movs
(bad)
ja
or
add
fimul
or
test
shr
loopne
mov
cmps
js
call
push
cmp
lods
push
pop
jmp
jae
sbb
adc
fcompp
inc
arpl
mov
jne
adc
cmp
pop
in
dec
imul
bound
add
jp
gs
mov
pop
mov
ins
jmp
inc
add
add
dec
shr
jg
div
sub
ins
sbb
loopne
hlt
sbb
cdq
push
ret
push
es
mov
push
rol
dec
pop
adc
dec
imul
xchg
je
stos
xor
jns
nop
addr16
fdiv
jl
mov
aas
fdivr
mov
xchg
mov
cmp
mov
push
movs
je
stc
push
fstp
pop
in
les
(bad)
retf
fdiv
and
or
ins
jge
pop
mov
test
add
push
in
ja
xchg
xchg
test
bound
mov
mov
retf
daa
jno
movs
mov
lods
xchg
cmp
stc
adc
nop
jbe
fcmovnbe
stos
pusha
loope
or
call
fst
in
push
mov
mov
jo
ret
cmp
jmp
and
imul
lea
les
sub
sbb
out
call
pop
addr16
stos
or
cmp
jle
mov
push
xchg
adc
lods
push
adc
and
sahf
popa
dec
ins
ja
aaa
(bad)
movs
mov
icebp
stc
js
(bad)
inc
bound
jno
or
sub
sbb
add
xchg
ss
cmp
fild
aas
mov
mov
ds
jge
fldenv
inc
ja
push
cmps
mov
dec
(bad)
adc
popf
adc
add
cli
mov
out
je
pop
jne
jbe
fdivr
xor
daa
or
nop
xor
xchg
mov
vpunpcklwd
jp
outs
cld
adc
jp
je
out
iret
arpl
popf
stos
movs
lahf
pop
aaa
test
hlt
ret
jecxz
dec
lods
jbe
mov
or
sahf
jp
pop
dec
fs
repnz
sbb
into
enter
ins
adc
adc
or
stos
jmp
enter
push
jno
inc
jns
fs
ja
dec
fadd
jge
mov
and
push
sbb
and
jge
icebp
xchg
inc
jbe
lds
push
std
call
pop
xor
jns
in
sbb
aam
and
ret
pop
arpl
cs
fdivrp
ret
dec
push
push
xor
das
cmp
or
push
ror
rcl
outs
bnd
adc
pop
mov
xchg
pop
push
cld
nop
fcom
ret
test
push
fistp
and
push
jnp
jg
lock
cmp
dec
gs
jecxz
adc
int3
sub
es
stos
fmul
mov
sbb
es
sbb
pop
lea
dec
pop
mov
sbb
popf
pop
push
imul
xor
ror
xor
mov
add
xlat
clc
ficom
cmp
inc
jb
pop
inc
dec
xchg
fadd
cdq
xchg
lods
cwde
mov
dec
mov
add
adc
iret
jae
xchg
out
jo
or
rcr
jnp
mov
(bad)
imul
mov
rcl
(bad)
jl
jl
sbb
jo
dec
xchg
aam
jb
movs
imul
pop
jl
mov
pop
cmp
(bad)
xor
xor
les
loop
mov
dec
mov
xor
(bad)
cmps
mov
leave
fs
ja
jbe
and
outs
ins
pop
mov
pusha
mov
ror
mov
in
cmp
in
mov
xlat
sbb
ret
pop
outs
gs
rcl
fild
pop
shl
mov
pop
adc
push
cwde
or
and
sbb
shr
jae
lods
and
aam
ins
imul
loopne
mov
shl
int
imul
mov
retf
cdq
addr16
je
mov
mov
stc
mov
jmp
adc
js
outs
mov
leave
push
call
mov
mov
or
in
adc
push
cmp
movs
and
psubsb
xchg
(bad)
adc
add
pop
xchg
sub
xor
cld
cld
(bad)
div
push
xor
xchg
hlt
pop
xchg
sar
pop
fdiv
lea
stos
jle
push
sub
mov
(bad)
cs
xor
add
add
cmp
jno
out
shl
or
mov
loopne
add
adc
xchg
not
mov
sbb
es
pop
sar
or
xor
hlt
ds
pop
push
(bad)
ror
push
ficomp
pop
lea
jns
aad
repnz
mov
inc
mov
xchg
adc
sbb
scas
xchg
pop
jnp
daa
stc
inc
enter
imul
sub
push
mov
scas
movs
sub
ud2
movs
push
or
adc
mov
adc
imul
inc
neg
xchg
xchg
mul
movs
movs
push
int
mov
push
call
into
lock
add
fcmovu
shr
dec
and
je
jnp
jmp
shl
cdq
stos
inc
xor
sub
cmp
test
push
dec
jge
push
mov
sti
pop
jmp
imul
jecxz
jb
inc
scas
sahf
stos
cmc
rcl
sbb
call
cmp
das
or
pop
(bad)
shl
je
fst
dec
in
popa
xchg
or
scas
sahf
dec
enter
fimul
xor
xchg
pop
mov
popa
outs
or
(bad)
or
div
add
gs
mov
push
push
and
movs
and
mov
stos
cmp
cmc
in
jo
push
int
ret
int3
add
push
dec
xor
sub
sbb
mov
retf
hlt
stos
push
fild
inc
(bad)
lods
xlat
push
ins
bound
mov
lock
aam
mov
sub
outs
mov
mov
xchg
jnp
hlt
out
mov
add
push
mov
sub
stc
rcl
or
ret
xchg
int3
dec
pop
pop
add
mov
cmp
cmp
xchg
repnz
fcom
je
dec
fidiv
jmp
not
xor
mov
(bad)
ja
es
push
ret
mov
push
jbe
imul
jnp
and
cwde
pusha
xor
pop
push
pop
pop
inc
mov
(bad)
inc
or
ss
ins
scas
mov
test
(bad)
aas
fnstcw
retf
inc
inc
mov
add
test
leave
outs
repz
push
pusha
xchg
lock
bound
pop
std
mov
jmp
mov
mov
jecxz
fwait
and
rcl
leave
dec
and
and
imul
lahf
sahf
or
enter
xchg
shl
dec
adc
clc
adc
jnp
sbb
or
and
jbe
jle
push
inc
inc
les
in
or
ret
xor
leave
adc
ret
sub
ja
int
in
jmp
leave
lds
cmovo
aad
inc
int
into
push
pop
jl
push
mov
idiv
and
inc
xor
adc
lea
or
or
and
std
lock
in
push
ror
jp
and
fisub
inc
fdivr
cwde
mov
repnz
dec
mov
in
das
pop
mov
jmp
sub
or
mul
mov
jl
and
pop
loop
mov
rcl
dec
test
jecxz
neg
sbb
sub
(bad)
adc
xor
popf
sub
shl
test
rcr
repz
mov
adc
scas
movs
movs
pop
packsswb
xchg
int3
hlt
bound
outs
push
xchg
sub
arpl
dec
sbb
cld
cli
xor
add
push
sub
jg
jo
in
add
pop
leave
enter
dec
push
jg
or
fld
and
push
mov
cmps
int3
fwait
or
outs
test
int
scas
test
mov
inc
mov
in
clc
pop
rcr
js
nop
cmc
cmp
cmp
ficom
sub
xchg
fidiv
cli
sbb
outs
out
sub
jge
cmp
inc
and
sub
sti
es
add
jae
bound
and
pop
inc
imul
dec
std
mov
cmp
jno
mov
lock
out
and
call
enter
push
sub
rcr
imul
shl
or
pop
and
push
xchg
leave
mov
dec
or
xchg
mov
mov
rol
stos
push
pushf
push
pop
jmp
popa
inc
push
jns
(bad)
adc
cld
fsubrp
fwait
push
nop
ret
jg
(bad)
cmps
sub
icebp
in
adc
imul
test
or
arpl
xor
jno
mov
jns
jmp
jecxz
add
mov
fst
xor
mov
sbb
jnp
sbb
fnstcw
push
mov
mov
pop
mov
mov
cmps
xchg
loop
xchg
in
cld
mov
bound
push
pop
lods
ret
mov
dec
fwait
cs
jmp
and
fmul
mov
loop
or
lods
mov
dec
(bad)
iret
mov
push
neg
sbb
ret
test
cmp
sahf
(bad)
enter
cmp
cmp
lahf
das
dec
xchg
lock
push
push
sbb
(bad)
(bad)
jmp
sub
xor
inc
(bad)
(bad)
in
push
sub
adc
jecxz
xchg
adc
adc
call
xchg
gs
mov
dec
imul
mov
cld
imul
rcl
cmp
cmps
fdivr
dec
xor
pop
jp
inc
sub
mov
pop
xor
(bad)
in
inc
daa
movs
dec
pop
jmp
mov
lods
xchg
call
out
jmp
lds
pop
push
int3
loope
out
push
repnz
cmps
out
lods
mov
mov
mov
jl
call
pop
cs
xor
adc
ret
cmp
pop
or
fcomp
fsubr
push
dec
call
stc
arpl
push
sbb
inc
mov
jecxz
sub
leave
scas
mov
mov
jmp
dec
inc
jmp
aad
sub
std
xor
clc
mov
sbb
dec
neg
(bad)
arpl
add
jb
test
pusha
mov
mov
dec
(bad)
fdivr
xor
int
xor
inc
pusha
pushf
push
cdq
nop
cmp
scas
aas
jne
pop
xchg
mov
push
sbb
call
imul
add
pushf
lds
call
xlat
cmp
sar
(bad)
into
out
pop
sti
cmp
or
outs
ins
iret
mov
pop
jno
dec
or
push
inc
movs
pop
not
inc
(bad)
out
imul
in
mov
fmul
outs
inc
ins
sbb
cmp
jmp
lods
into
out
add
lods
int3
inc
movs
inc
cmps
lock
sub
xor
repz
cmc
xor
hlt
test
sahf
repnz
pop
jle
nop
jg
xchg
or
adc
test
mov
sub
add
dec
je
add
push
hlt
sbb
ror
aas
loope
test
leave
pop
mov
xchg
bound
fdiv
jb
fsubr
fcmovbe
pop
movs
(bad)
pop
jg
(bad)
arpl
fldenv
or
cmps
mov
das
sbb
cmp
inc
inc
adc
cmps
outs
adc
xor
sahf
or
mov
sub
(bad)
jge
dec
pop
outs
fdiv
mov
stos
cdq
or
mov
mov
cmc
pusha
xchg
mov
jle
push
test
sti
hlt
inc
jmp
pop
jecxz
fimul
mov
in
adc
mul
lods
pop
mov
jg
cmp
stos
inc
add
iret
and
xchg
and
stos
fsubr
add
shl
adc
lods
call
cmps
fldcw
rcr
push
mov
data16
outs
pop
or
test
shl
or
mov
enter
sub
fimul
shr
cwde
ret
pop
mov
pop
add
dec
adc
push
aad
mov
fdivr
mov
mov
ret
dec
or
mov
movs
call
inc
stos
out
xchg
or
pop
mov
js
jnp
inc
jecxz
mov
fisttp
movlhps
in
in
(bad)
and
sub
cmp
jo
(bad)
mov
pop
adc
add
xor
or
sti
push
jp
lahf
and
outs
cmc
call
fwait
in
adc
fstp
push
jmp
out
mov
jmp
mov
fst
and
test
retf
loope
mov
jmp
call
mov
pop
jbe
les
into
test
push
(bad)
pop
jmp
scas
xchg
fcom
sbb
aam
xor
push
sbb
pop
sbb
or
fld
fmul
pop
jnp
fdivrp
daa
xchg
jmp
pop
mov
dec
add
and
mov
jmp
out
retf
jns
add
fcmovbe
jnp
pop
sti
sti
sbb
xchg
cmp
push
xor
xchg
scas
mov
mov
daa
nop
scas
mov
test
cmp
cwde
adc
xlat
out
add
iret
jecxz
es
in
jmp
pop
rcl
mov
rol
rcr
push
(bad)
out
jno
test
addr16
push
lahf
stos
xchg
and
je
sbb
sub
mov
lods
xchg
popf
inc
cmp
adc
pop
call
add
pop
popf
es
ss
movs
xor
push
and
xchg
xchg
out
push
inc
stc
retf
scas
ins
pop
xor
aaa
dec
dec
test
adc
add
ins
mov
loope
and
aad
jnp
cdq
xchg
cli
adc
jns
jnp
and
dec
out
lock
and
ror
cwde
out
sub
push
sbb
scas
mov
cmp
outs
stc
mov
or
clc
cs
pop
ins
mov
mov
xor
xor
pop
int3
imul
rol
in
cmp
push
int
popa
cdq
int3
jmp
adc
xchg
(bad)
sti
add
shl
push
leave
sub
inc
icebp
add
dec
gs
add
in
out
mov
xlat
(bad)
lods
in
shl
and
sar
ss
sub
inc
cmc
mov
cld
jne
xchg
(bad)
mov
inc
(bad)
popf
or
lods
pop
jmp
pop
or
sar
jbe
sbb
dec
(bad)
cdq
mov
or
cmp
and
and
ja
mov
lds
in
je
out
sub
mov
ins
xchg
adc
arpl
sub
mov
mov
pop
dec
jno
pushf
fs
test
sub
movs
pop
call
lock
jb
push
je
fiadd
pop
push
pop
ja
fwait
lock
dec
fcom
or
sub
repnz
sub
imul
lds
dec
inc
sbb
sbb
adc
and
loopne
ins
xlat
js
and
sar
push
enter
push
data16
xchg
dec
add
pusha
cmps
pop
cmc
fcom
dec
icebp
fs
dec
sub
int
mov
in
push
imul
lock
push
xor
into
jecxz
ss
dec
xlat
in
pop
movs
pop
xor
leave
adc
shl
xchg
add
js
inc
and
push
push
rcl
mov
or
sub
test
inc
bound
dec
fistp
outs
jg
test
fdivr
les
push
or
lods
mov
cwde
sbb
test
retf
out
outs
pop
jbe
movs
pushf
xor
jb
jmp
mov
cdq
pop
push
jnp
pushf
or
(bad)
leave
sti
push
data16
test
cmc
mov
adc
cld
lock
out
(bad)
aad
dec
jns
adc
enter
mov
pop
jae
and
sahf
mov
out
scas
in
lahf
test
sub
adc
mov
faddp
inc
mov
leave
in
fcom
movs
gs
fs
xor
mov
cmp
out
scas
mov
dec
lock
cmc
imul
xchg
or
dec
sub
mov
or
xchg
hlt
mov
jle
icebp
das
mov
lds
ficom
sub
cmc
jge
aad
cld
neg
loop
getsec
mov
adc
jl
fcomp
push
sbb
mov
arpl
mov
add
cmp
test
mov
push
xor
popa
ins
mov
jb
mov
imul
ds
mov
ja
push
cmps
int3
xor
adc
repz
in
mov
aam
icebp
repz
pusha
mov
pop
(bad)
aaa
(bad)
and
xchg
outs
sbb
andps
dec
sti
and
sub
jmp
(bad)
pop
mov
in
data16
idiv
xor
push
ins
scas
popa
pop
arpl
mov
stos
scas
shl
lods
fistp
push
push
xchg
ja
dec
mov
loop
aaa
sub
aam
cdq
adc
mov
mov
dec
jb
outs
add
push
push
mov
inc
fdiv
jmp
pop
(bad)
inc
mov
jmp
inc
mov
(bad)
int3
adc
jge
mov
mov
push
mov
fsubr
test
cmp
je
mov
jo
mov
and
jl
mov
out
in
dec
fld
(bad)
call
pop
fld
js
int
retf
mov
sub
mov
ud2
addr16
loop
arpl
dec
inc
jne
inc
lods
movs
inc
test
and
xchg
stos
pop
mov
cmp
cli
add
out
mov
fistp
fst
int3
shl
in
cdq
call
out
push
fild
icebp
and
test
mov
mov
push
xor
not
mov
sbb
(bad)
fcomp
int
dec
mov
jmp
lock
popf
xchg
ins
iret
or
sub
add
out
outs
add
jl
aam
sub
test
push
sbb
and
inc
sbb
aas
pop
pop
mov
mov
fwait
cmp
adc
aam
cmp
fist
aas
imul
in
aad
sbb
xchg
test
dec
mov
sar
xor
and
sti
pop
into
xchg
jae
xor
add
inc
imul
movs
(bad)
mov
or
shr
push
int3
inc
ret
scas
adc
pop
jl
rol
mov
jge
xchg
in
jbe
ficomp
sub
sub
cld
xchg
mov
mov
pop
stos
mov
inc
inc
or
or
frstor
imul
dec
dec
pop
inc
mov
mov
mov
lock
fnstenv
push
(bad)
jp
mov
jmp
sub
sub
sub
in
add
daa
push
mov
arpl
push
stos
test
cmp
outs
leave
ret
push
pop
jb
hlt
push
rcr
mov
and
push
lods
mov
adc
pop
movs
mov
test
das
sub
jnp
pop
imul
frstor
xchg
mov
pop
je
retf
vmwrite
lahf
jno
adc
add
xlat
cwde
pushf
cmp
aad
fwait
lds
and
fwait
pop
cmp
neg
(bad)
inc
dec
mov
ins
pop
push
movs
push
adc
xchg
push
jb
mov
push
fdiv
cs
pop
and
loope
aaa
sbb
outs
call
xor
popf
or
inc
sub
jle
lds
or
(bad)
fwait
or
loope
jp
sub
sbb
dec
mov
jo
cmp
jo
(bad)
sti
pop
sbb
dec
xor
mov
and
daa
shl
jecxz
lods
push
dec
das
jle
(bad)
pop
fs
inc
sbb
xchg
push
fistp
or
inc
jo
int3
fiadd
test
pop
cdq
push
jmp
outs
mov
dec
lock
mov
xchg
push
retf
cmp
inc
xchg
push
test
lds
jmp
in
test
xor
sbb
adc
mov
mov
add
into
push
xchg
scas
mov
ret
out
mov
popf
clc
movs
push
push
and
sub
loop
xchg
ins
pushf
cli
mov
and
ret
inc
mov
std
outs
push
dec
fs
jnp
jmp
fcom
add
out
xchg
sbb
mov
loope
push
mov
xchg
ret
fs
popa
js
fs
xchg
sbb
movs
cmp
push
stos
jl
repz
shl
(bad)
mov
mov
pop
js
movs
xor
adc
xchg
pushf
sbb
sbb
add
test
inc
(bad)
or
sbb
or
adc
add
xor
push
and
lods
ror
pop
add
push
pop
dec
adc
lahf
jne
dec
scas
mov
mov
dec
mov
imul
sub
mov
jno
push
inc
mov
jl
sbb
add
xchg
xchg
shl
aad
dec
repz
nop
pop
pop
jecxz
rcl
jge
pusha
push
dec
clc
pop
mov
fidivr
ja
outs
sti
nop
ficomp
aas
fnsave
ficom
sub
ret
or
pop
dec
pop
and
pop
jmp
push
jno
ins
dec
mov
in
pop
movs
push
sbb
dec
ret
js
dec
jecxz
jbe
mov
in
adc
push
sbb
test
or
push
mov
bound
fild
inc
mov
in
(bad)
into
sbb
ins
out
ins
mov
cmp
sub
out
dec
aad
inc
lea
out
arpl
or
jp
movs
sbb
sbb
mov
dec
inc
daa
adc
iret
push
loopne
add
cmp
and
push
cmp
mov
add
dec
adc
lods
cmp
ds
xchg
mov
push
(bad)
in
pop
push
jb
das
and
loope
pop
mov
push
add
and
stos
in
clc
mov
into
mov
lahf
pop
cwde
push
(bad)
retf
xor
in
mov
xchg
test
add
clc
push
xor
mov
sbb
les
jo
pop
imul
pop
sub
jnp
imul
inc
xchg
cmp
retf
mov
xor
cmp
in
aas
adc
bound
xchg
out
cmp
dec
inc
dec
cmp
sub
int3
retf
aam
push
fdivr
mov
and
shl
push
sti
cmp
(bad)
shr
xor
cdq
ror
pop
dec
jmp
jg
add
movs
mov
and
(bad)
(bad)
xchg
retf
clc
aad
push
xor
inc
cmp
lods
adc
add
inc
loope
(bad)
aas
push
push
pop
rol
dec
stc
retf
repnz
push
pusha
mov
ret
push
test
movs
mov
(bad)
sbb
dec
mov
or
add
jmp
cld
push
mov
in
test
xlat
stos
fbstp
(bad)
sub
addr16
xlat
nop
adc
xchg
jne
fdivr
jecxz
(bad)
mov
stos
jns
mov
jmp
mov
lods
push
add
dec
frstor
fild
inc
push
scas
pop
jecxz
ror
icebp
sub
adc
sbb
and
dec
shl
aaa
xor
push
jne
mov
stos
mul
mov
popf
adc
ror
out
shr
stos
movs
loop
stc
adc
xchg
or
cmps
or
fdivr
lea
test
aas
fimul
cmp
pushf
rol
dec
sbb
dec
dec
and
mov
aaa
out
jecxz
xor
es
dec
pop
pop
pusha
mov
fucomip
aad
je
xor
aaa
sbb
cli
push
ror
pop
inc
retf
in
out
cmp
in
pop
mov
mov
call
js
mov
call
(bad)
xor
imul
leave
ins
and
mov
mov
xor
scas
adc
inc
ins
sub
mov
push
or
jne
sub
cmp
lds
rcr
sub
sub
ret
and
jp
add
mov
addr16
xor
scas
adc
jge
fmul
std
cmp
jmp
sub
sbb
stos
movs
test
sbb
ret
enter
cmp
leave
out
sbb
mov
cld
aad
push
pushf
xchg
sub
jo
repz
hlt
out
mov
push
movs
retw
sub
enter
dec
imul
sub
loop
scas
or
repz
xchg
das
mul
test
sti
cwde
fild
sahf
fisttp
aam
ss
mov
inc
dec
push
fcom
jb
repnz
cmp
data16
dec
mov
or
cmp
mov
cmp
dec
inc
xchg
mov
fisttp
mov
movs
cmp
add
jne
das
test
and
nop
pop
sbb
fist
jnp
mov
mov
dec
dec
int
cs
and
push
jmp
pop
or
dec
and
pop
(bad)
sub
adc
push
inc
fistp
scas
pop
sub
(bad)
dec
or
and
pop
movs
mov
ins
adc
pushf
or
jb
fwait
scas
xor
js
mov
cmp
scas
and
rep
push
sub
jae
lahf
push
jp
add
cdq
add
adc
aas
adc
fmul
out
in
dec
mov
sub
clc
cmp
push
lds
test
jno
loop
push
enter
xchg
inc
dec
ins
and
call
cmps
cwde
dec
push
cmp
sub
out
test
sahf
cmp
dec
aaa
mov
sbb
sub
jmp
neg
popa
leave
xchg
in
js
(bad)
dec
hlt
pushf
lods
xchg
dec
pop
jl
adc
aaa
imul
popf
xor
mov
or
pop
inc
test
ret
and
mov
cmp
or
ss
or
xor
mov
jno
lods
fldenv
pop
jmp
add
sub
in
jge
mov
pop
push
inc
inc
fsubr
cmc
dec
xor
jns
xor
push
add
mov
mov
(bad)
and
and
stos
div
(bad)
jmp
inc
mov
das
mov
mov
cmp
xor
cmp
retf
mov
jle
or
add
(bad)
sub
(bad)
stos
movs
pop
loop
pop
add
dec
xor
pop
fwait
push
push
and
repnz
int3
cwde
in
and
or
mov
retf
sar
arpl
xchg
icebp
or
ficom
lds
inc
popa
sbb
adc
popf
or
dec
pop
stos
mov
lods
push
mov
mov
push
adc
jg
jnp
lock
movs
pop
mov
pusha
add
test
jmp
and
ficom
fadd
loopne
inc
sbb
xchg
ja
push
(bad)
sahf
pop
xor
outs
mov
std
jnp
xchg
retf
es
mov
push
adc
aas
ret
push
pop
lods
shl
ins
jb
(bad)
pop
sub
mul
mov
shl
sbb
dec
push
test
push
mov
arpl
cs
add
xchg
pop
sti
lahf
fiadd
jle
jg
ins
add
lock
add
fisttp
sar
dec
pop
sbb
ror
mov
retf
and
adc
repnz
xchg
mov
push
jle
dec
jo
pop
enter
sub
push
mov
jae
rcr
adc
jge
out
pcmpgtb
mov
out
xor
test
fnstenv
adc
and
or
(bad)
in
inc
aas
ret
or
fmul
out
mov
mov
pushf
pop
ja
xchg
pushf
es
fnsave
sub
adc
adc
and
bound
xor
mov
pop
adc
xchg
cmp
out
es
ja
and
jnp
xor
mov
jmp
pop
mov
scas
fidivr
(bad)
sbb
rol
outs
gs
or
cdq
(bad)
push
inc
ja
mov
shr
test
lahf
imul
jns
icebp
bound
scas
shl
movs
xchg
jbe
cmp
dec
cmps
cmps
mov
outs
mov
(bad)
jl
adc
sub
scas
call
push
sbb
inc
popf
dec
ret
jne
rcr
add
jmp
cmc
mov
out
out
clc
pop
mov
jb
add
add
pop
repnz
int
fst
bound
aaa
xlat
push
test
push
cmp
inc
sub
inc
sub
sbb
mov
push
dec
or
add
xor
jl
popa
push
xor
xchg
push
mov
mov
fsub
inc
jg
fcmove
xor
push
mov
cli
add
into
adc
inc
add
das
mov
xchg
enter
pop
call
dec
nop
outs
mov
ins
sub
mov
pop
mov
fs
cld
adc
push
es
xchg
sbb
cmc
js
lock
lahf
cld
and
jp
and
jnp
jecxz
adc
or
jns
fidiv
neg
xchg
in
adc
pushw
mov
test
je
sub
lods
psubd
mov
cli
mov
movs
(bad)
(bad)
fisubr
ror
and
xchg
inc
and
lock
fsub
es
xor
daa
mov
adc
jnp
sti
ss
fs
es
pop
aaa
pop
add
xchg
push
ja
or
and
jge
cld
pop
imul
enter
lahf
sub
xor
das
mov
ins
cmp
mov
sbb
cmps
jp
inc
lds
add
std
pop
clc
rol
fistp
inc
stos
add
xor
sbb
inc
inc
repnz
call
add
neg
les
push
mov
sti
mov
in
mov
or
mov
fstp
fbld
(bad)
add
pop
and
add
sub
mov
sub
lods
mov
fwait
adc
mov
ror
mov
mov
sub
sti
xchg
add
or
inc
sti
pop
jb
ins
jge
or
inc
sub
int
and
mov
mov
cmp
dec
or
jge
je
sahf
cmp
pop
aad
rcl
mov
mov
push
je
sbb
inc
adc
inc
xchg
(bad)
push
mov
jb
xchg
dec
xor
mov
mov
leave
cmp
adc
enter
pop
mov
ret
dec
ffreep
xchg
mov
sahf
and
ret
cs
inc
mov
out
jns
push
adc
(bad)
(bad)
sar
aam
pop
xchg
lahf
inc
cld
mov
mov
rep
leave
xor
daa
ds
mov
pop
(bad)
mov
cmp
dec
fsub
pop
push
dec
loopne
or
hlt
movs
std
adc
popf
and
cmp
mov
mov
jl
xchg
pop
push
dec
add
movs
aam
movs
cli
mov
jp
test
nop
imul
sbb
mov
push
sbb
stos
ret
fwait
adc
inc
cs
pop
imul
add
call
push
xchg
aas
in
cmp
in
or
cmp
pop
loop
mov
xlat
xchg
sub
sahf
bound
stc
adc
push
dec
out
mov
not
pop
je
imul
dec
dec
lock
fs
jmp
sbb
pop
add
jmp
orps
add
add
xchg
mov
xchg
out
and
mov
repnz
add
aad
test
shl
jp
rol
pop
inc
and
out
sbb
and
pop
jmp
xchg
shl
aad
cwde
les
ffreep
test
pop
dec
not
xor
cmp
nop
xchg
jbe
pop
push
sbb
mov
outs
cmp
add
std
not
(bad)
stc
pop
fstp
call
in
jns
fadd
pop
test
rcl
shl
fcomp
push
enter
fxch
cmps
sub
pop
pushf
mov
in
jae
xor
mov
or
mov
lds
cmp
or
iret
add
push
mov
or
scas
cwde
loope
dec
push
mov
add
push
push
mov
sbb
ins
or
jecxz
in
stc
mov
push
rol
push
movs
push
aas
stos
icebp
arpl
cdq
dec
mov
inc
jne
mov
cwde
popa
cmp
icebp
pop
pushf
cli
les
mov
fimul
add
adc
(bad)
dec
das
cmps
xor
jne
retf
lahf
out
cmp
adc
int
fmul
cmp
stos
cmp
je
ins
cmp
aaa
div
push
add
jns
cmp
jmp
std
fnstcw
lods
daa
pusha
push
cmp
xchg
(bad)
ds
loope
mov
inc
and
sbb
std
mov
(bad)
mov
in
mov
lods
adc
adc
dec
pop
ja
fcomp
loopne
dec
mov
cs
jecxz
inc
dec
shl
outs
into
repz
stos
jle
dec
scas
ja
and
sub
sub
test
fild
test
ins
push
fmulp
push
inc
add
je
mov
pop
and
(bad)
xchg
outs
pop
push
mov
test
fsub
and
xchg
xor
add
sbb
ss
jbe
mov
call
mov
repz
sti
adc
fwait
or
je
inc
push
push
dec
pop
mov
mov
outs
or
jl
adc
add
dec
xor
xchg
push
outs
inc
aas
test
or
aam
jl
cmp
jmp
sbb
popa
xchg
cmp
mov
(bad)
xor
xchg
push
xchg
popf
shl
sbb
mov
fistp
lock
cmps
xor
cmp
xor
fcmove
dec
aaa
cmc
sub
xchg
jmp
jmp
xor
mov
mov
cwde
movs
fwait
movs
jne
ins
and
or
movs
pop
(bad)
out
lahf
pop
stos
cmp
cmp
pop
adc
mov
inc
mov
pushf
fdiv
xchg
popa
and
xchg
jp
xchg
in
add
dec
add
mov
ret
pop
and
sub
sub
cmp
mov
pop
mov
aaa
mov
shl
add
or
push
sbb
or
cli
cli
out
mov
ins
jne
imul
stos
(bad)
scas
sub
shr
sar
jo
xor
fwait
outs
sub
sahf
mov
popf
add
rcr
outs
xor
cmp
fsubr
jg
data16
dec
mov
clc
pusha
cmps
repz
mov
sbb
test
data16
adc
nop
adc
lea
out
lds
dec
fild
jl
adc
ja
dec
dec
loop
mov
sbb
xlat
stos
pop
jb
xchg
ja
sub
or
lods
ss
push
jle
addr16
xchg
xchg
and
or
mov
xor
sbb
iret
mov
xchg
jbe
add
jmp
adc
jmp
cdq
cmp
mov
and
ret
bound
ss
loopne
(bad)
jge
jae
into
sbb
jmp
pop
arpl
shl
test
sti
pop
cmp
mov
cmps
rcr
scas
jb
adc
fdivr
jns
or
push
pop
sahf
push
mov
dec
mov
xchg
dec
cmp
sub
jmp
lea
xchg
dec
into
pop
sar
movs
pop
add
es
mov
test
sar
add
fcmovbe
xor
or
sbb
push
test
jae
sbb
jmp
jg
mov
adc
push
fwait
das
mov
nop
bswap
std
lods
cmp
pop
xchg
rcr
and
push
mov
sbb
mov
xor
inc
lods
js
out
test
repz
fwait
idiv
mov
jne
push
fnstsw
test
gs
adc
loop
retf
fisub
out
pop
mov
inc
mov
mov
out
and
clc
or
fnsave
or
sbb
and
dec
inc
fcom
(bad)
fst
out
add
adc
nop
dec
pop
sahf
je
fisubr
jb
mov
les
mov
add
jecxz
lods
add
mov
cmp
aaa
popf
nop
popa
inc
xchg
call
jo
pop
sub
mov
push
sbb
mov
inc
fistp
mov
in
mov
aad
mov
add
adc
mov
cmp
cmp
dec
popa
dec
mov
xlat
xchg
int
adc
stos
fwait
push
sbb
fld
inc
pop
and
ins
ror
fild
jo
rol
ins
ins
ins
lods
into
mov
pushf
push
popa
xchg
jle
ins
shl
push
xchg
mov
or
(bad)
fist
je
jae
mov
into
in
sahf
jno
push
(bad)
cwde
clc
xchg
jo
ins
ds
jbe
pop
xchg
setne
sbb
jge
push
xchg
jno
fidivr
sti
adc
test
push
rcl
in
mov
loop
mov
pop
int3
mov
adc
jp
out
push
call
xchg
xchg
xchg
pop
inc
mov
mov
pusha
fild
push
mov
mov
int
aad
cmp
add
mov
push
jmp
in
leave
out
pop
mov
inc
mov
cmp
dec
inc
dec
in
(bad)
in
je
bound
pop
loope
dec
xor
jl
cmp
mov
fs
(bad)
(bad)
imul
sbb
call
push
mov
test
push
mov
adc
jne
retf
mov
data16
sahf
shr
cmps
cmp
stos
mov
jne
imul
mov
cmp
ror
pop
rcl
jmp
sbb
fstp
icebp
or
push
fistp
and
enter
fistp
adc
loop
scas
lahf
ins
jg
mov
lahf
popa
mov
dec
test
dec
(bad)
mov
dec
sbb
stc
cmc
sti
imul
daa
retf
jmp
adc
push
mov
push
mov
xchg
arpl
out
xchg
pushf
call
add
lock
in
xor
rcl
stc
jns
stos
jg
sbb
adc
sub
jns
add
hlt
pop
je
cwde
stos
and
(bad)
xor
sbb
adc
mov
jns
out
(bad)
fstp
gs
xor
arpl
arpl
sbb
lods
out
adc
call
dec
or
or
aad
cli
pop
inc
pop
inc
jl
std
xchg
pop
nop
dec
fnstcw
shl
cmc
not
sar
mov
imul
sbb
sbb
ds
jo
js
push
and
lods
add
in
push
sub
out
daa
shl
mul
add
sub
lds
mov
test
push
add
(bad)
sub
push
mov
inc
loope
(bad)
loope
in
jnp
cmp
adc
fxam
mov
enter
sbb
xor
scas
xor
or
jecxz
cmps
(bad)
in
add
xchg
adc
dec
std
ficomp
mov
das
nop
(bad)
imul
inc
es
sbb
sub
adc
cmp
inc
mov
inc
sub
jmp
fisttp
sahf
fstp
lods
daa
push
es
not
into
push
sbb
cld
xchg
pop
xor
popf
sti
cmc
mov
sbb
lock
push
test
inc
retfw
iret
mov
std
mov
dec
ror
mov
stos
rcl
cmp
fadd
aam
test
inc
mov
jbe
and
pop
daa
cmp
adc
fisttp
ret
xlat
js
dec
xchg
pushf
scas
add
sbb
outs
ja
or
jo
out
repnz
xchg
ins
nop
out
adc
rcr
add
js
ss
or
fistp
arpl
in
rcr
cmp
or
mov
lea
and
(bad)
in
fmulp
xor
inc
data16
cmp
jne
loopne
cmp
cwde
fwait
or
in
add
pop
sbb
push
nop
sub
push
mov
pop
xchg
and
cmps
lock
pop
(bad)
ret
cmp
retf
fadd
repnz
inc
fdivrp
movs
xchg
adc
add
cmc
or
js
mov
inc
sbb
cmp
cs
or
cdq
cli
aad
aas
iret
mov
and
push
cmp
sub
push
mov
cmps
xchg
xchg
in
mov
pop
int
jb
adc
fdivr
jno
pushf
adc
ret
xor
jb
jb
dec
aad
adc
daa
in
cwde
movs
mov
xlat
ret
ss
mov
test
xchg
push
popf
cmp
pop
lods
div
loop
dec
movs
fcomp
iret
in
jg
push
jns
in
jno
jne
ss
adc
push
mov
adc
int
push
mov
mov
pusha
and
popa
es
fcmovbe
or
mov
and
les
xor
xor
aas
into
hlt
repnz
push
or
xlat
out
test
icebp
ss
and
dec
push
adc
shl
xor
in
pop
dec
sub
je
jo
div
mov
pop
test
push
push
inc
mov
retf
inc
clc
std
cmp
jne
ins
fdivr
xor
fmul
add
push
dec
jne
and
sti
jcxz
cmp
js
dec
add
cmps
xchg
and
cwde
or
es
jo
(bad)
cmc
mov
popf
dec
xor
iret
push
dec
test
mov
rol
ja
sti
push
push
cmp
mov
out
jg
out
add
cmp
jecxz
xor
je
test
call
mov
movs
daa
jecxz
lahf
daa
iret
js
mov
fistp
cs
rol
add
in
add
ins
(bad)
mov
gs
pop
enter
mov
mov
rol
xor
inc
stos
clc
mov
movs
pop
xchg
add
push
fldenv
mov
imul
mov
fidiv
or
enter
or
loope
rcl
out
lods
or
cmp
dec
test
xchg
xor
loop
test
gs
dec
mov
imul
sub
sbb
shr
das
push
or
xor
call
cwde
lahf
popa
je
repnz
outs
adc
(bad)
xor
push
imul
push
es
add
loopne
xor
push
mov
inc
add
inc
outs
xchg
push
fnstenv
cmp
lods
mov
xor
inc
(bad)
push
out
dec
faddp
pop
sbb
std
imul
aaa
push
cli
popf
jbe
(bad)
pop
test
aaa
(bad)
push
pop
pop
pop
arpl
pop
(bad)
mov
lahf
ror
retf
pop
or
inc
movs
cld
jg
add
jbe
pop
ror
sahf
add
xor
mov
xor
rcl
int3
sub
fcmovnu
cmp
or
and
scas
or
add
xchg
push
int
and
inc
(bad)
dec
cmp
mov
sbb
jnp
fwait
pop
dec
or
or
jmp
inc
sub
add
pusha
daa
mov
jg
and
dec
frstor
add
pop
std
add
addr16
cmps
inc
jle
retf
jge
(bad)
mov
pop
mov
mov
je
xlat
xchg
mov
jno
lock
sar
ret
xchg
cmp
cmp
fiadd
imul
into
cmps
xchg
test
popf
mov
addr16
push
pop
jg
cmps
(bad)
dec
add
js
jmp
sbb
mov
mov
xchg
outs
pop
retf
icebp
mov
pop
push
aam
aam
mov
xchg
jl
imul
xchg
ins
popa
sub
add
aaa
lea
dec
sbb
jo
push
in
dec
adc
je
mov
jg
dec
addr16
and
jge
sub
ret
cmp
adc
je
fidiv
stc
imul
add
aas
das
and
pop
jmp
aad
stc
inc
adc
in
arpl
addr16
pop
mov
or
loope
jl
mov
imul
sbb
xor
mov
shl
jb
pop
mov
mov
adc
icebp
loope
dec
mov
inc
pop
push
sbb
lods
push
mov
dec
jmp
or
pop
jbe
and
sub
mov
jl
push
gs
jecxz
dec
pop
repnz
fdivr
inc
inc
xchg
shr
sbb
call
cli
jmp
jne
mov
mov
jmp
mov
cmps
das
pop
lods
dec
sub
xchg
retf
jl
adc
push
jmp
sbb
mov
xor
cwde
fistp
mov
loopne
jmp
and
mov
jmp
sbb
imul
push
inc
inc
or
cmp
sub
popf
xor
ret
add
mov
fidiv
xchg
leave
arpl
jecxz
ret
push
in
jp
int3
aad
or
clc
xor
fwait
sbb
cs
shl
xor
sbb
sub
jmp
movs
add
pop
lods
aad
std
push
mov
add
pop
cmp
xor
popa
sbb
jb
call
in
jno
sub
jl
jmp
mov
xor
not
push
add
lea
add
xchg
nop
cld
scas
mov
sbb
sbb
dec
jl
cmp
push
pop
rcl
sbb
add
mov
in
rcr
stos
xchg
gs
ss
mov
push
mov
sub
mov
mov
(bad)
cmps
adc
jns
jl
ds
into
inc
dec
push
xchg
cmp
pop
mov
stos
scas
adc
sub
xor
js
push
in
imul
jl
mov
push
neg
push
pop
mov
xchg
nop
mov
movs
sbb
xchg
jl
test
push
enter
popf
push
(bad)
pop
test
mov
mov
fdivr
jno
pop
jge
add
popf
xor
inc
mov
push
aaa
or
fsave
push
in
in
in
pop
xor
push
pop
loope
sub
xchg
jae
mov
fld
cmc
dec
xor
inc
dec
mov
int3
dec
mov
repz
shl
addr16
gs
cmp
pop
and
(bad)
scas
loop
into
fistp
aam
xor
leave
in
sub
(bad)
sbb
sar
sub
inc
jmp
test
pop
je
std
fisubr
out
add
gs
mov
in
or
cmp
std
fwait
inc
push
icebp
push
ins
xor
lahf
stc
jecxz
sbb
shr
(bad)
das
sub
std
fsubr
pop
popf
mov
or
movs
sub
cmp
cld
icebp
sbb
mov
lock
aas
stos
lock
ret
aad
push
or
jg
push
shl
adc
into
pop
pop
or
pop
mov
pop
xchg
sahf
movs
mov
inc
loopne
es
std
sub
mov
movs
pop
ins
stos
out
aad
int
sub
cmp
loopne
push
jecxz
xor
xchg
ret
shrd
pop
adc
mov
ret
addr16
and
sti
mov
mov
adc
mov
shl
cwde
sbb
fdiv
(bad)
mov
cmp
pop
neg
test
sar
fcmovnbe
je
out
adc
adc
adc
(bad)
repz
mov
jae
adc
sti
pop
cwde
pop
shl
fnstenv
xor
pop
adc
loope
test
pop
in
mov
sar
dec
pop
es
add
adc
scas
nop
sub
jo
pop
jg
std
cmps
sub
out
mov
enter
jg
call
or
mov
adc
xchg
inc
cmp
or
jnp
mov
and
sub
stc
mov
mov
xchg
sbb
dec
popa
jmp
(bad)
mov
test
addr16
push
cmp
cwde
je
aaa
mov
rcr
xchg
nop
ss
pop
imul
js
test
xor
mov
ror
call
mov
arpl
in
loopne
outs
xor
clc
jno
inc
ret
test
aam
ret
mov
jl
jae
xchg
xchg
add
mov
pop
repz
(bad)
aam
and
and
in
sahf
push
sar
je
(bad)
sbb
imul
sbb
xchg
sbb
push
out
daa
lock
mov
jmp
out
push
loope
js
js
and
stos
out
jl
(bad)
hlt
jb
or
or
inc
mov
fwait
jns
(bad)
or
add
lds
cmp
rcr
push
xor
cmc
jle
pop
aas
sub
idiv
out
les
(bad)
push
mov
fsubp
add
xor
dec
sbb
add
icebp
loopne
jge
sub
sti
ss
push
clc
dec
loope
ds
not
inc
jns
lahf
mov
les
push
mov
nop
repz
adc
cmp
cmp
daa
ins
inc
movs
jge
aam
jle
sbb
cmp
lods
lock
pop
push
cmc
xchg
int3
sub
and
fcmovnbe
xchg
sar
popf
cmp
fsubp
push
dec
sub
add
hlt
dec
sbb
cmp
pop
push
lds
sub
shl
and
(bad)
cwde
into
or
aas
sar
or
ret
(bad)
std
add
and
cmp
dec
out
add
outs
movs
push
mov
addr16
ret
cmp
sub
mov
xor
add
xlat
xor
push
jl
clc
int3
imul
(bad)
sbb
movs
cmp
lds
push
cmp
aaa
je
mov
dec
jb
cld
add
mov
pop
xchg
cld
out
rol
(bad)
clc
or
cld
mov
rcl
loop
push
scas
outs
imul
es
ret
sub
je
add
or
push
xlat
mov
push
outs
mov
dec
enter
fisubr
cmp
mov
outs
rol
pop
jmp
inc
jp
rcl
lahf
xor
xchg
jmp
repnz
dec
mov
mov
xor
mov
pusha
and
sbb
and
lock
cmp
jnp
adc
fcomp
push
repnz
and
pop
fcom
dec
xor
dec
call
div
sub
dec
jmp
adc
sbb
pop
(bad)
scas
mov
sbb
cmps
adc
inc
jg
in
adc
pop
xchg
hlt
add
jg
(bad)
push
pop
pop
(bad)
sbb
inc
xor
mov
pop
xor
xor
sti
pop
popa
out
lds
mov
(bad)
and
jno
(bad)
xor
imul
or
dec
jge
mov
or
add
loope
jmp
jo
cld
or
adc
retf
addr16
stos
dec
sbb
push
in
rcl
sub
jmp
cmps
fcomp
ds
mov
pop
dec
and
pop
mov
mov
ins
sahf
(bad)
inc
mov
(bad)
xlat
xchg
jmp
fistp
sub
adc
ret
sub
jmp
cmp
sbb
push
je
jmp
ror
cdq
cmp
mov
push
enter
xlat
clc
data16
pop
mov
sub
and
sub
push
xchg
into
out
xchg
mov
or
push
ret
jge
or
repz
mov
(bad)
sub
(bad)
xchg
xchg
sbb
jle
xor
push
add
jns
inc
mov
or
lock
pop
call
sar
out
aas
mov
jl
sub
inc
call
add
test
xchg
xchg
mov
cmp
fwait
shl
cdq
ins
mov
movs
hlt
hlt
aad
mov
jle
test
cmps
fdivr
or
scas
push
clc
popa
xor
mov
xchg
arpl
cmps
aad
dec
mov
add
mov
add
stc
mov
sub
mov
add
nop
lahf
mov
mov
xor
push
push
(bad)
jle
xor
sbb
adc
inc
xchg
and
add
in
jno
jecxz
in
mov
outs
cmp
adc
mov
cmps
xlat
or
mov
jmp
xchg
test
push
xchg
arpl
pop
rcl
sbb
pop
std
out
add
pop
pop
ret
cmp
aas
or
mov
pushf
pop
movs
scas
ds
movs
xchg
mov
adc
xchg
lods
daa
popa
jno
mov
imul
fld
lods
inc
cmps
xchg
inc
push
jp
in
xor
jo
add
jmp
mov
pusha
cmp
add
fdivrp
or
mov
clc
sahf
out
mov
rcl
aaa
pop
js
or
les
and
(bad)
aad
mov
push
or
out
push
jo
iret
out
imul
je
sti
mov
cmc
mov
add
lahf
adc
fcom
mov
and
jae
jb
jg
int
loope
pop
(bad)
dec
cdq
inc
add
lock
in
xor
xor
js
inc
lahf
lods
jo
pushf
retf
mov
std
addr16
xchg
mov
push
fwait
mov
dec
mov
dec
(bad)
pop
push
pop
fcomp
ret
inc
jle
inc
dec
sub
mov
dec
imul
cmp
call
mov
test
jno
std
fxch
(bad)
mov
dec
stos
scas
retfw
in
inc
push
loopne
ds
dec
and
push
mov
dec
fisub
xor
cli
push
jp
aaa
lods
shl
das
or
add
inc
rol
add
ret
xor
mov
xchg
xor
movs
push
rcr
ret
(bad)
arpl
xchg
adc
add
dec
xchg
add
test
pusha
and
sub
pop
jbe
push
dec
(bad)
mov
lods
in
enter
mov
xor
(bad)
enter
ficom
jg
inc
lock
jecxz
mov
inc
sub
scas
xchg
mov
sbb
int
scas
mov
mov
out
sub
stc
jae
out
or
or
push
cdq
xchg
stos
fadd
test
fwait
push
iret
jmp
pop
outs
cmps
pop
jecxz
push
push
fdivr
or
test
arpl
pop
fdivr
test
cmp
sbb
or
push
lock
nop
nop
aam
jnp
clc
loop
add
loope
xchg
ins
push
ud1
test
rcr
movs
stc
retf
jl
add
sbb
out
jecxz
outs
outs
push
jecxz
lods
cmp
jmp
sahf
sub
pop
or
fld
pop
std
int3
xor
test
xchg
jl
push
dec
mov
stos
mov
xchg
mov
inc
cmp
js
imul
xor
fmul
call
sbb
adc
push
sti
jae
or
rcl
stos
add
dec
movs
xor
mov
sahf
cmps
test
mov
and
xor
jge
enter
fs
jbe
dec
mov
ret
loope
sub
and
and
add
sbb
test
xchg
mov
xor
mov
popw
fcomp
add
ds
in
adc
div
dec
mov
mov
dec
fisubr
add
imul
in
xchg
jbe
call
mov
in
pop
mov
mov
cli
aam
jle
xor
sbb
cdq
adc
pop
push
pop
das
rol
cwde
aad
add
push
add
push
adc
inc
fidiv
push
xor
or
scas
xchg
into
dec
xchg
jne
sbb
xchg
mov
mov
test
test
jp
test
retf
cmp
pop
xor
rol
mov
sub
push
sub
jge
pop
adc
std
(bad)
imul
ret
int3
loopne
aas
add
pop
nop
xchg
inc
xchg
xchg
sbb
jecxz
mov
ds
add
jnp
mov
shl
rcr
iret
jp
aas
sub
retf
inc
mov
pushf
xor
mov
jno
mov
xchg
imul
adc
ja
sub
pop
sbb
push
xchg
sbb
clc
imul
(bad)
or
add
adc
repz
add
ins
jmp
add
inc
and
adc
mov
sbb
sti
or
sub
or
shl
dec
xchg
sbb
jg
xor
(bad)
dec
mov
mov
into
lahf
arpl
adc
jl
sub
mov
test
fdiv
lock
icebp
out
sahf
pop
aad
movs
das
push
stc
mov
lea
dec
hlt
in
out
inc
push
shr
sub
fcmove
rcr
sbb
or
sahf
sbb
cmp
jl
repz
sbb
dec
ret
movs
sub
(bad)
jnp
push
ret
and
test
popa
fwait
jmp
fild
xlat
sbb
push
add
cmp
fistp
out
mov
mov
mov
jg
cwde
xchg
hlt
xchg
jae
xchg
ret
pop
addr16
adc
enter
call
sbb
or
mov
pop
nop
lahf
pop
ds
jg
enter
mov
fwait
popf
xlat
mov
or
ret
call
sbb
aad
jg
dec
fs
dec
test
dec
pop
out
mov
(bad)
call
sbb
dec
pop
pop
outs
fs
ds
je
div
(bad)
sbb
sbb
in
stc
(bad)
xor
sbb
lds
and
adc
pop
adc
fstp
add
dec
mov
lods
push
sub
pushf
movs
(bad)
cmc
mov
cmp
xlat
adc
cmp
outs
shl
test
jns
(bad)
(bad)
arpl
mov
mov
add
sbb
dec
daa
out
in
(bad)
and
pop
fadd
fimul
das
pop
outs
mov
movs
xor
mov
sbb
mov
ret
bound
fstp
mov
outs
add
pop
adc
cld
mov
dec
adc
push
dec
add
stos
cmps
cmp
call
cs
jp
adc
inc
fistp
stos
push
pop
arpl
cmps
rol
mov
or
jle
popa
cdq
mov
repz
repz
push
fisub
xor
loope
jbe
rcr
jnp
ficom
loope
mov
lods
pop
and
adc
push
out
mov
jge
ret
lods
adc
ins
nop
and
fs
loop
mov
adc
dec
cmps
js
push
push
adc
in
pop
push
js
jecxz
addr16
jns
sbb
mov
pop
xchg
nop
neg
pop
xchg
iret
cmp
scas
loop
sahf
call
sbb
ss
inc
leave
mov
pusha
(bad)
xor
sbb
lods
push
ret
add
popf
pushf
sub
add
sbb
outs
into
jae
hlt
mov
aam
popf
add
and
mov
cwde
or
or
repnz
lahf
mov
adc
int3
scas
jbe
and
adc
je
add
push
idiv
mov
mov
and
sub
ds
jmp
loopne
(bad)
(bad)
out
push
fwait
retf
je
fistp
imul
inc
lods
in
rcr
je
cld
test
xchg
out
jmp
nop
cwde
xchg
hlt
aas
mov
add
cmc
mov
cs
(bad)
inc
inc
push
loop
sbb
movs
adc
add
lods
or
push
in
jb
jns
leave
jmp
adc
jo
repz
mov
xor
xor
xor
jle
adc
add
hlt
sbb
mov
pop
loope
loopne
int3
push
jmp
bound
xchg
xchg
(bad)
fnsave
adc
jb
jae
mul
push
std
test
cmc
outs
inc
das
mov
or
mov
call
js
or
and
pop
addr16
(bad)
or
xchg
leave
cli
and
fiadd
sub
aam
xor
shl
inc
aas
movs
sub
adc
dec
push
int
jns
imul
jp
cmp
std
jle
inc
arpl
ins
jns
xchg
mov
inc
xchg
xlat
pop
mov
xchg
jmp
gs
outs
jmp
dec
pusha
pop
in
sub
data16
dec
xchg
jmp
mov
or
ins
scas
cmp
inc
or
in
ret
sub
inc
push
mov
cmp
mov
xchg
mov
jo
das
mov
push
dec
aad
sub
shr
cmp
ss
mov
add
push
jno
jns
in
inc
fdivr
push
sbb
xchg
pushf
imul
retf
cli
fidiv
adc
(bad)
div
xchg
dec
mov
mov
push
fs
out
out
or
enter
mov
dec
and
push
mov
aaa
icebp
scas
enter
fsub
shl
jns
jb
and
xor
mov
fldenv
cwde
push
pop
inc
rol
push
pop
fwait
sbb
push
mov
mov
clc
mov
push
mov
xor
clc
mov
js
movs
scas
movs
xchg
cmps
cmp
sahf
mov
sub
push
mov
jbe
icebp
dec
add
pop
rcr
and
xlat
hlt
pushf
jge
push
and
gs
repz
(bad)
fist
add
sbb
jno
and
inc
cdq
das
stos
inc
mov
add
cmp
arpl
xchg
sbb
call
add
cli
test
or
push
pop
cwde
mov
and
scas
pop
adc
test
sub
fucomp
adc
mov
test
ins
jo
test
rcr
sub
add
sbb
cmps
lods
int
ffree
enter
add
in
ret
xor
(bad)
mov
mov
stos
lds
imul
daa
xchg
jp
jle
mov
stos
inc
inc
iret
xlat
cmc
sbb
mov
cli
popa
aas
aam
xchg
xor
inc
nop
push
and
and
add
mov
test
lds
pushf
div
call
xchg
lea
outs
or
into
in
mul
add
in
loope
sbb
fisubr
mov
mov
lea
adc
mov
popa
push
shl
loope
or
add
ja
cli
sub
bound
scas
mov
jae
add
fs
test
and
dec
inc
jnp
fwait
cli
mov
or
sti
into
fucompp
cld
mov
ins
rcl
out
pop
and
mov
jg
xchg
jmp
add
test
fadd
rcl
lahf
outs
jo
gs
jp
inc
pop
cs
jnp
and
fstp
push
(bad)
sahf
mov
call
out
push
repnz
mov
push
push
pop
mov
pop
in
in
cmps
add
into
std
test
test
scas
mov
bound
xchg
xchg
and
push
loope
in
(bad)
mov
pop
inc
mov
fst
movs
dec
scas
(bad)
sbb
gs
(bad)
popa
inc
mov
jnp
mov
mov
ss
dec
repnz
jbe
enter
xor
or
mov
mov
xor
cs
dec
push
mov
sub
fwait
sub
or
push
mov
jmp
mov
ds
mov
cmp
or
leave
int
out
inc
inc
add
dec
jns
lea
mov
mov
je
cmp
int
cmp
dec
test
cmp
sbb
ret
or
mov
repnz
pop
gs
adc
bound
movs
pusha
loopne
pop
sbb
pop
push
inc
pop
mov
inc
mov
test
sub
adc
push
jl
imul
and
ret
adc
loop
loop
cli
jle
data16
xchg
ret
(bad)
popa
jge
arpl
fistp
movs
out
pop
inc
xor
sbb
jae
xchg
push
ins
cdq
into
sbb
xchg
cmc
pop
movs
xchg
xor
push
nop
fadd
int
push
sti
mov
xor
lods
loop
mov
lahf
and
jp
xchg
push
imul
cmp
into
movnti
mov
lock
aas
clc
lahf
jl
fst
pop
jle
push
xchg
mov
cld
pop
xchg
sbb
push
dec
dec
fidiv
jecxz
sub
jmp
cli
mov
(bad)
lock
stos
rol
sub
mov
push
or
std
daa
dec
in
mov
dec
add
mov
repnz
aam
fwait
or
mov
sti
inc
xor
push
mov
(bad)
and
mov
xor
jno
movs
fmul
and
mov
fsubr
or
dec
(bad)
cs
xor
dec
push
xchg
mov
call
scas
les
outs
mov
mov
sar
sbb
cmp
scas
mov
es
movs
mov
push
retf
mov
out
je
clc
(bad)
scas
and
bound
or
(bad)
call
movs
popf
adc
xchg
mov
je
dec
jb
pushf
mov
dec
dec
mov
loope
adc
neg
xor
and
and
shl
jecxz
mov
sub
and
or
cli
sbb
pop
es
test
mov
test
cmp
test
jg
cdq
adc
fisubr
call
into
cmps
pop
aaa
dec
scas
inc
ja
cmp
add
push
mov
cmp
jecxz
push
xor
push
or
or
loopne
loop
out
dec
std
(bad)
inc
rcr
mov
xor
push
push
mov
jnp
add
cmp
and
jle
adc
xchg
xor
test
in
jns
sub
xor
stos
inc
xchg
fnsave
test
and
test
add
dec
ins
popa
pop
aas
aas
jp
clc
cli
xor
dec
mov
and
out
outs
sbb
add
shl
sub
add
or
inc
jnp
jecxz
jp
push
(bad)
and
repz
sub
or
adc
mov
inc
popa
fild
xor
je
or
lods
les
fsub
cmp
cdq
mov
inc
jge
mov
dec
mov
loopne
mov
sbb
iret
aaa
sub
pop
cmp
mov
and
mov
fld
jne
(bad)
and
jp
mov
mov
xchg
in
push
adc
xchg
inc
mov
daa
bound
out
retf
cmps
pop
pop
or
add
cld
xlat
test
das
gs
mov
aam
jg
and
fcmovnbe
daa
mov
cmp
lods
add
cmp
popa
(bad)
pop
data16
push
je
test
or
cdq
xor
push
dec
mov
dec
xchg
ins
dec
jns
mov
popa
gs
xchg
push
add
test
in
jecxz
fdivr
out
call
outs
or
or
or
test
movs
mov
ds
inc
shr
inc
push
rcr
sar
(bad)
xor
call
loop
in
bswap
aad
and
mov
pop
jmp
jae
hlt
iret
dec
sub
js
dec
push
pop
dec
test
pop
enter
xor
pop
and
add
sub
fwait
xchg
or
adc
leave
lds
jle
mov
out
aaa
xchg
data16
lahf
cmp
cmps
in
in
or
jl
fadd
mov
xchg
sahf
mov
add
mov
(bad)
mov
shl
push
xor
inc
shl
push
adc
mov
stc
aas
add
sbb
or
inc
mov
test
mov
repz
ret
(bad)
scas
mov
mov
xchg
jo
mov
sub
lahf
jmp
push
(bad)
mov
lock
push
inc
or
or
hlt
stc
xor
mov
mov
add
(bad)
sar
push
cmp
aam
out
shl
pop
cmp
pop
dec
inc
push
jo
nop
nop
jb
dec
movs
jl
into
fisttp
or
dec
pop
xchg
push
jne
xchg
jnp
sbb
jbe
(bad)
loopne
add
or
ret
mov
mov
dec
test
push
imul
mov
jbe
out
jae
daa
out
into
and
mov
call
dec
push
ins
in
jno
mov
inc
pushf
xchg
aam
cmp
fs
mov
xchg
pop
mov
xor
xor
sbb
cmp
inc
or
mov
je
popf
push
xchg
cli
add
in
adc
movs
sub
sub
pusha
ror
ins
inc
cmp
sbb
pop
add
dec
scas
cli
cmps
xor
and
aas
rcl
inc
mov
mov
int
(bad)
jo
stos
inc
retf
push
jle
ins
inc
cld
pop
adc
rcr
les
stos
ja
xchg
jo
(bad)
push
scas
push
mov
pusha
arpl
add
cmp
push
movs
repnz
cmp
adc
mov
ins
sbb
push
pop
fstp
jns
shl
lea
je
(bad)
fsubr
adc
out
dec
int3
push
hlt
inc
loopne
sbb
adc
(bad)
mov
shr
hlt
out
xchg
add
push
jg
mov
inc
sbb
movs
mov
scas
xchg
sahf
lods
pop
xchg
out
add
hlt
adc
lds
aad
bound
sub
std
jnp
xchg
mov
push
popf
jp
pop
xor
add
cdq
jns
push
and
jb
dec
inc
fwait
cmp
aam
push
retf
adc
rol
dec
adc
push
adc
lods
sbb
adc
and
xor
sub
cmp
adc
iret
int3
push
adc
sub
or
add
imul
add
fild
or
pop
mov
ins
inc
xor
xchg
test
dec
loopne
dec
inc
ja
sbb
ss
sub
mov
pop
nop
dec
cmp
jl
dec
mov
sbb
mov
push
cmp
or
pandn
push
xor
neg
ins
outs
dec
lods
mov
test
cld
aad
xchg
aas
out
fimul
out
jb
shl
shl
push
jp
mov
adc
lock
mov
je
adc
mov
ffreep
fidiv
pop
out
faddp
mov
(bad)
pop
repz
or
jp
sbb
stc
xchg
jmp
mov
dec
push
sub
std
xchg
push
test
dec
aas
rol
gs
imul
inc
xchg
test
fsubrp
les
dec
ret
loop
in
and
fs
pop
xchg
stc
fdivrp
xor
mov
mov
fdiv
hlt
dec
mov
mov
(bad)
(bad)
jecxz
jg
int3
xchg
jecxz
out
sar
jmp
adc
enterw
idiv
fiadd
sub
xchg
xor
push
clc
dec
mov
cmp
in
icebp
(bad)
(bad)
mov
int3
pushf
mov
retf
inc
push
jne
pop
pop
outs
jmp
inc
test
pop
cmps
int
add
(bad)
les
bnd
jb
(bad)
jns
leave
outs
rcr
xchg
push
xor
data16
push
je
jg
add
in
mov
cwde
xor
sar
ja
not
in
into
cwde
movs
or
stc
add
addr16
xor
movs
push
adc
in
jnp
cmps
or
xchg
push
add
jg
or
sub
xchg
and
imul
jmp
xchg
dec
(bad)
mov
daa
xor
pushf
ins
div
push
jno
sar
ds
test
ret
(bad)
out
mov
add
mov
xchg
loop
inc
scas
callw
mov
jae
popa
sub
js
pop
push
ja
cmp
aam
jns
push
ja
jne
sub
mov
dec
xchg
pop
daa
and
or
mov
xor
std
push
lods
cmp
loopne
add
and
fwait
aaa
or
and
add
push
cdq
or
xor
inc
xchg
jbe
test
pop
pop
mov
dec
movs
(bad)
loop
adc
pusha
mov
fdiv
or
xor
and
push
jl
movs
out
mov
and
xchg
xchg
cmps
stc
push
loopne
xor
pop
(bad)
mov
sbb
xchg
inc
mov
push
nop
iret
mov
dec
mov
pop
mov
mov
in
mov
jns
jae
fs
inc
test
cmp
add
push
inc
ja
(bad)
add
sbb
and
mov
sbb
cld
leave
cdq
call
repz
dec
inc
or
dec
out
pop
jg
jbe
shl
mov
dec
sub
and
or
test
push
std
sub
jnp
mov
sub
stc
test
popa
scas
xor
push
dec
(bad)
and
sbb
dec
das
dec
push
inc
retf
dec
mov
fsub
or
test
push
iret
jmp
push
cmp
jbe
pop
std
jne
xor
mov
mov
push
xor
push
sbb
rcl
(bad)
repnz
and
push
pop
lds
stc
clc
sub
mov
dec
(bad)
sti
sub
sbb
mov
mov
inc
(bad)
fxch
pop
inc
rcl
pop
mov
sub
sub
ror
jle
add
das
mov
xchg
push
add
ins
dec
lods
dec
mov
jne
sub
sub
xor
jp
fsub
cs
adc
movs
xchg
cmp
push
(bad)
int3
imul
iret
mov
retf
mov
push
loopne
cmps
sbb
push
adc
enter
mov
int3
dec
inc
pop
cdq
mov
push
ins
xor
loop
jmp
xchg
dec
(bad)
aaa
cmp
popa
jge
cdq
shl
out
dec
iret
xor
out
loop
xor
sbb
ss
(bad)
push
in
arpl
jno
mov
pushf
and
addr16
inc
outs
arpl
or
lods
sbb
dec
shr
sbb
fsub
outs
clc
and
xor
push
sub
push
je
gs
lahf
mov
cwde
mov
xchg
jo
daa
dec
loop
adc
push
push
jle
aam
add
jb
xchg
aaa
push
fimul
mov
cld
xchg
aaa
movs
int3
bound
ja
das
push
mov
pop
add
xchg
adc
mov
or
mov
shl
rcr
in
cmps
inc
push
lahf
idiv
cmc
cmc
sahf
pusha
mov
mov
add
mov
inc
pop
mov
iret
jne
fnstenv
or
fidivr
or
loopne
mov
out
xor
retf
jecxz
daa
arpl
xchg
or
mov
cld
dec
jns
in
push
push
sbb
movs
xor
add
pop
jmp
xor
mov
sub
xor
jmp
sbb
mov
or
jb
out
or
(bad)
push
shl
mov
and
sti
mov
fisubr
(bad)
bound
sub
jmp
das
pop
arpl
sub
call
push
and
pop
xor
xchg
mov
stos
jmp
sbb
jb
xchg
test
mov
or
fnsave
pop
and
add
jmp
repz
inc
mov
daa
mov
lfs
icebp
ret
aam
mov
ds
push
mov
iret
jle
enter
inc
push
or
icebp
xchg
xchg
lods
repz
daa
fdiv
(bad)
repz
cmps
ins
outs
add
test
cmps
in
xor
or
xor
or
std
sub
ret
jnp
shr
je
mov
fild
je
push
scas
pop
mov
sbb
ss
push
pop
fstp
xor
int
pop
pop
mov
enter
enter
push
loopne
lahf
aam
sar
dec
test
push
fstp
push
stos
in
aas
xor
call
stos
add
dec
sbb
sub
sub
push
retf
lahf
sub
pop
jmp
fld
nop
pop
sub
sbb
mov
or
pop
sub
arpl
pushf
imul
jne
adc
(bad)
je
adc
mov
cmp
rcr
add
je
ret
(bad)
cwde
mov
scas
rol
push
(bad)
das
dec
outs
xor
mov
sub
stc
or
or
jecxz
inc
hlt
shr
add
or
pop
inc
jbe
mov
js
pop
cmp
and
rol
sub
in
sbb
cmp
cs
xor
push
cmc
(bad)
js
icebp
dec
test
or
scas
dec
aad
push
aaa
cmp
int3
out
jnp
pop
nop
push
jge
sub
loope
dec
call
and
cmp
clc
sbb
push
mov
int
sub
mov
push
out
movs
push
and
xor
jb
fsub
add
cmp
fsubr
scas
enter
xchg
test
das
and
shl
sub
mov
hlt
lock
out
emms
dec
daa
call
pop
outs
sbb
xor
xchg
mov
mov
adc
out
or
ds
(bad)
int
add
imul
jno
inc
adc
and
cmc
xor
mov
inc
mov
(bad)
mov
dec
mov
mov
(bad)
jmp
push
das
bound
dec
push
not
push
mov
jnp
scas
push
ja
xchg
mov
mov
or
loop
shl
mov
pop
inc
fst
mov
(bad)
cli
push
push
not
xchg
mov
jns
inc
clc
jl
jae
xchg
pop
imul
mov
xlat
pop
int3
add
jno
inc
icebp
loop
dec
mov
inc
icebp
push
ins
pop
mov
jo
jle
(bad)
push
fldcw
ja
mov
fadd
adc
sbb
jne
dec
call
mov
mov
shr
ret
mov
cdq
outs
xchg
scas
jns
jns
loope
imul
cli
sub
scas
sbb
fidiv
call
retf
mov
mov
sbb
dec
int3
or
cmp
cmp
inc
cmc
pop
pop
lock
js
clc
imul
jb
push
cld
scas
jb
jnp
scas
pmaddwd
inc
outs
loope
(bad)
js
pop
jne
jmp
cli
es
add
sti
ds
je
cmps
mov
inc
jns
ror
leave
xor
movs
xchg
pop
mov
fiadd
jle
jbe
in
test
inc
gs
adc
sub
pop
cmp
in
loope
movs
inc
pop
dec
lods
cmp
xlat
fldcw
xchg
ins
xchg
call
lock
push
xchg
lahf
add
arpl
mov
and
clc
push
pop
pop
pop
fidiv
inc
pop
ins
or
shl
cmc
xchg
aam
sbb
push
mov
cmp
xor
lds
add
jp
scas
sub
pop
cmc
sbb
nop
or
fnstcw
fs
cld
jmp
arpl
add
lea
xchg
aad
add
ja
dec
repnz
cmp
in
ins
xchg
ins
rcl
or
repnz
adc
test
xchg
inc
mov
jl
pop
cdq
pop
push
add
sbb
xchg
std
mov
inc
xor
sbb
and
js
hlt
das
xchg
cmp
sbb
xchg
bound
scas
add
into
js
push
loopne
in
ja
fdiv
(bad)
aaa
cdq
int3
push
mov
and
bound
je
adc
sub
sbb
jmp
mov
mov
ficomp
int3
(bad)
jbe
movs
sbb
jg
ins
pop
inc
mov
shl
push
add
jo
add
mov
and
or
outs
mov
jl
iret
pushf
js
jg
je
jbe
mov
push
or
jns
cmp
xor
cmp
mov
dec
adc
test
leave
pop
into
iret
imul
fidiv
ror
retf
icebp
arpl
(bad)
ins
cmps
pushf
push
jg
and
outs
sub
(bad)
dec
push
mov
das
pop
adc
adc
pop
xor
fild
clc
retf
ret
push
push
in
or
sub
pushf
jb
jl
es
xchg
in
frndint
ror
add
mov
les
popa
ins
fs
ja
mov
xchg
aad
(bad)
jge
in
push
push
frstor
jo
or
data16
jb
push
mov
test
arpl
adc
or
sub
(bad)
sub
pop
adc
jns
sub
push
jmp
repz
inc
sbb
add
loopne
ja
ret
jg
push
adc
push
sub
inc
fs
inc
or
and
sahf
rcl
clc
jge
fmul
mov
aad
jns
repz
sub
mov
repnz
push
mov
out
adc
imul
sub
js
push
push
jne
es
clc
inc
and
cmps
push
jae
rcl
push
mov
jg
cmp
pop
xchg
inc
ins
arpl
and
fs
imul
outs
test
pop
std
pushf
and
jl
mov
lods
add
xor
test
int
jp
mov
push
sub
arpl
push
fnstsw
iret
mov
ret
xchg
mov
test
or
fisttp
mov
jbe
bound
lods
mov
mov
mov
jge
jb
(bad)
cmc
mov
jo
sar
ret
xor
lods
mov
in
fsub
mov
pop
jecxz
fs
inc
dec
mov
aam
aam
(bad)
add
mov
ins
adc
jecxz
and
jg
xchg
fdivr
inc
out
jmp
setno
jo
loop
test
jmp
adc
fist
xor
shr
xor
cdq
pop
push
push
adc
out
mov
je
daa
call
inc
jl
add
movs
jnp
jo
out
stos
outs
jnp
sbb
sbb
ror
repnz
shl
push
dec
push
retf
push
fmul
ficom
sahf
mov
gs
test
int3
or
dec
gs
pop
pusha
jp
and
mov
dec
sbb
ins
bound
test
mov
mov
shl
call
dec
pusha
outs
xor
jle
cmp
stc
mov
movs
add
mov
fld
icebp
ret
scas
les
sbb
adc
(bad)
in
jmp
retf
rcl
adc
ins
outs
and
xchg
(bad)
pop
hlt
push
jno
aaa
addr16
das
pop
sub
xor
xor
jg
jne
imul
dec
ret
in
popf
sub
lahf
push
jo
retf
xor
stos
sbb
pop
cmp
sbb
jl
(bad)
out
or
sbb
pusha
out
xor
rol
bound
mov
(bad)
lods
lods
pusha
mov
call
push
int
mov
psllw
imul
cs
xor
add
loope
outs
or
(bad)
mov
jecxz
pop
pop
xor
outs
jo
test
adc
push
es
adc
in
push
cdq
or
adc
ret
xor
or
sbb
xchg
or
inc
jns
mov
movs
jb
mov
inc
sbb
test
mov
xchg
les
aaa
mov
dec
pop
xchg
sub
movs
push
lock
lods
lods
into
inc
int
push
xchg
ins
aaa
les
mov
mov
lods
cmp
ins
repnz
jle
xor
jmp
cdq
mov
out
adc
repz
inc
xlat
lods
xor
mov
or
mov
pop
shr
(bad)
jecxz
jns
mov
js
sbb
push
inc
cli
(bad)
retf
sub
dec
scas
adc
ja
ret
add
sti
das
retf
xchg
mov
sbb
mov
outs
sub
cld
cld
add
mov
mov
ror
ror
add
pop
cmp
popf
loopne
xchg
mov
outs
pop
in
jns
mov
pop
inc
dec
mov
outs
inc
jb
lods
jbe
ja
(bad)
cmp
dec
ss
and
add
xchg
movs
test
outs
sbb
(bad)
xor
scas
push
dec
je
int
retf
pusha
cmps
inc
into
fist
(bad)
aaa
out
cmp
jl
mov
pop
fdivp
jge
scas
dec
inc
(bad)
imul
inc
mov
dec
loopne
fimul
pop
in
mov
and
and
push
jmp
pop
lods
sbb
add
and
xor
popa
stos
pop
lods
mov
pop
js
out
push
cdq
ja
jno
cmp
fdivr
leave
mov
dec
or
or
push
cmp
(bad)
sub
pop
out
jmp
repz
into
push
sub
(bad)
retf
aas
aas
xchg
pop
in
adc
clc
popa
cwde
xor
cmp
movs
jmp
cmps
fucomip
lock
cmp
sub
retf
mov
inc
push
jb
ja
ror
xor
mov
hlt
mov
inc
cdq
jb
adc
mov
inc
pop
mov
lods
(bad)
lds
daa
mov
sub
dec
dec
in
rol
pop
mov
dec
out
cdq
jb
pop
aad
fistp
iret
cmp
cld
das
das
adc
shr
sub
pop
test
lds
adc
dec
mov
sti
sub
pmulhuw
or
mov
jbe
mov
lods
add
movs
cmps
pop
call
je
xchg
stc
add
xor
lahf
repnz
mov
pop
fstp
inc
mov
or
nop
cli
mov
push
or
aad
jge
push
mov
xchg
dec
or
mov
and
(bad)
push
in
in
or
sbb
push
cmp
mov
push
lock
jne
mov
sub
mov
or
hlt
(bad)
sbb
js
jae
xlat
jbe
daa
fldenv
sahf
mov
mov
push
lock
push
ret
ins
mov
push
retf
jmp
clc
movs
dec
xchg
mov
push
jmp
cs
jo
mov
ins
jne
ins
jp
xchg
push
ss
mov
je
rcl
dec
xchg
out
pop
dec
dec
mov
xchg
inc
jne
in
ficom
ins
mov
or
ins
and
repnz
les
push
(bad)
out
push
fcom
sub
push
(bad)
jecxz
xor
xchg
push
out
ror
and
xchg
gs
jne
stos
and
xchg
int3
test
sub
jl
rcl
jle
push
and
(bad)
xchg
jg
jnp
icebp
iret
mov
js
rol
dec
mov
xor
imul
ins
lods
sbb
rol
cmc
in
mov
loope
mov
inc
xchg
mov
aaa
jno
in
jb
sbb
jecxz
shl
(bad)
loop
int3
inc
(bad)
xlat
dec
lea
stos
shl
popf
jne
mov
cld
cld
lock
dec
fisub
push
mov
retf
jne
imul
int3
aas
and
fstp
or
into
cmp
pop
inc
dec
pop
(bad)
loopne
cwde
retf
jnp
mov
jo
outs
add
aas
xchg
mov
test
sub
dec
popa
gs
addr16
lock
xchg
in
fcom
jle
fwait
ins
imul
or
cmp
add
jge
xchg
pushf
push
int
jl
pop
xchg
in
push
inc
ss
jne
int3
dec
xchg
cmp
and
or
sub
cs
lods
pop
cmc
xchg
sub
inc
cmp
cmp
retf
push
xchg
and
jmp
mov
aad
xchg
dec
jno
jae
add
std
cmc
iret
pusha
into
sbb
iret
adc
pop
les
retf
gs
or
dec
loop
push
adc
dec
and
lods
jecxz
lods
pop
adc
adc
movs
je
push
movntps
mov
jp
ds
and
inc
into
inc
test
in
sub
ss
xchg
inc
and
push
xor
ja
movs
xchg
aaa
mov
imul
sub
sbb
xor
stos
and
dec
inc
lea
add
cdq
movs
out
jecxz
xchg
cmp
pop
imul
and
add
or
adc
xchg
and
or
ficom
inc
div
cmc
fbstp
or
(bad)
imul
lods
mov
int3
movs
jge
mov
std
in
cmp
fnstsw
repz
xor
xor
in
pop
retf
out
and
aas
push
gs
cmp
dec
fbstp
xor
inc
out
jmp
cdq
clc
sbb
shl
call
dec
mov
fldcw
popf
(bad)
xchg
sub
test
push
ja
test
xor
ins
cmp
push
push
jp
inc
jbe
int3
shl
pop
dec
push
mov
cli
idiv
dec
retf
aas
int
or
mov
test
inc
js
test
mov
(bad)
shr
mov
dec
div
into
fwait
cmp
jecxz
mov
retf
mov
outs
out
adc
add
jg
sub
inc
out
jmp
dec
call
(bad)
cmps
mov
xchg
enter
popa
inc
inc
dec
push
outs
pop
out
hlt
push
push
pop
test
dec
movs
lock
push
add
stc
dec
cli
push
sub
addr16
cmp
add
cmp
and
add
xor
cld
xchg
jecxz
fcom
adc
jle
ins
ins
adc
adc
mov
mov
sub
lds
add
jmp
xchg
cs
and
js
ins
cld
xor
ret
ror
imul
dec
jge
rcl
loope
xor
xor
push
mov
stc
addr16
jnp
mov
and
add
fdivr
test
adc
cmp
icebp
xchg
stc
or
ds
cmps
inc
mov
or
add
js
adc
pop
mov
push
push
mov
cmc
dec
inc
nop
pusha
rcl
jo
loop
popf
frstor
and
and
shl
sahf
and
mov
test
dec
mov
and
stc
adc
sub
or
loopne
mov
sbb
loopne
jle
daa
jecxz
ret
ret
push
fsubr
imul
dec
addr16
cmp
stos
fsubr
pop
out
or
jle
jae
or
repnz
arpl
jbe
addr16
xlat
data16
sahf
jo
mov
cs
pop
sti
push
xchg
pop
test
hlt
bound
xor
sub
stc
test
xchg
imul
mov
stos
fwait
cmp
dec
sbb
push
xchg
es
test
jmp
push
or
mov
ja
pop
js
adc
ret
loope
xor
inc
cmp
lea
outs
int3
xchg
clc
sahf
mov
mul
addr16
inc
ss
lods
popa
ret
sub
adc
dec
cmp
and
cmps
mov
cwde
pop
dec
xchg
and
adc
daa
xchg
xchg
in
adc
mov
test
pop
jbe
or
adc
jmp
mov
jge
jnp
shl
mov
loop
not
dec
add
xchg
test
cmp
mov
add
xor
xor
add
(bad)
sbb
pop
sbb
lock
movs
repnz
push
mov
cli
mov
xchg
push
adc
fistp
xor
xor
sbb
pop
mov
mov
dec
call
mov
movs
mov
cld
leave
(bad)
and
into
leave
sbb
dec
or
pop
and
in
or
jo
mov
push
add
fs
sub
(bad)
aad
popa
xlat
jge
ror
es
jne
inc
(bad)
cmp
push
ror
pop
xor
je
fidivr
adc
sti
xor
nop
dec
aas
adc
xchg
aas
adc
lods
or
inc
outs
push
push
jmp
mov
pop
imul
test
(bad)
jle
xor
(bad)
adc
cmp
or
imul
push
adc
push
xchg
cwde
scas
pop
push
fnstsw
sub
pusha
in
outs
add
xchg
mov
mov
idiv
inc
sub
pop
ds
jp
and
je
mov
jecxz
dec
cwde
jnp
dec
pop
mov
mov
in
je
std
xor
sub
cmp
(bad)
add
xchg
adc
fadd
adc
push
jno
les
add
std
(bad)
and
into
xor
push
push
sar
mov
jecxz
jae
cmp
(bad)
push
cmp
int3
or
dec
xor
inc
mov
dec
push
(bad)
ficom
out
dec
and
data16
call
xchg
push
sub
pusha
out
addr16
and
popa
mov
int3
mov
fistp
add
js
out
fistp
cmp
scas
imul
outs
outs
xlat
leave
aaa
and
shl
add
into
adc
xchg
dec
sub
jne
mov
aam
js
lods
and
fwait
jp
add
leave
push
ins
jp
push
jg
test
push
add
dec
ror
int
scas
arpl
pop
mov
or
adc
add
adc
fdivr
xchg
mov
hlt
aam
cmps
pop
inc
adc
inc
mov
sbb
mov
jge
dec
pop
retf
repz
add
add
sub
loop
mul
cmp
xor
mov
xchg
lods
imul
bound
ror
push
test
test
mov
mov
jae
pushf
inc
cs
arpl
pop
sbb
push
pop
out
xor
sbb
(bad)
setns
inc
sbb
and
mov
(bad)
retf
int3
xor
mov
or
iret
jl
cmp
adc
add
jne
sbb
xchg
fadd
fwait
inc
or
mov
jge
(bad)
and
mov
movs
scas
dec
pushf
adc
loopne
repnz
aas
cli
clc
aaa
scas
nop
sahf
cmp
shl
or
cmp
inc
dec
jl
mov
inc
(bad)
cli
mov
(bad)
fiadd
cwde
cmp
mov
dec
xchg
enter
inc
fsub
mov
push
out
mov
mov
adc
and
jge
and
call
adc
or
xchg
add
adc
sbb
xchg
ins
fisttp
(bad)
xchg
icebp
test
call
dec
inc
idiv
xor
mov
or
in
mov
mov
call
ins
je
and
push
mov
push
cmp
mov
push
dec
js
push
push
test
and
(bad)
shr
mov
daa
add
pop
sub
cdq
cli
bound
push
stos
stos
popf
shr
and
and
pushf
repnz
adc
cmp
add
dec
nop
into
jno
adc
xor
ss
aad
daa
clc
pusha
push
pop
clc
movs
mov
mov
(bad)
mov
pop
pusha
out
and
or
or
sbb
jmp
in
xchg
shr
sahf
lahf
add
mov
dec
lock
push
mov
jbe
mov
dec
inc
gs
ja
aad
lahf
cmp
jae
fcmovne
cmps
pop
sbb
mov
push
sbb
repnz
clc
xlat
ins
lods
js
pop
les
rcl
xor
(bad)
popa
mov
(bad)
fist
lock
mov
add
sub
mov
cmp
test
dec
stos
xlat
loopne
mov
adc
pop
push
stc
std
loopne
or
push
add
cmc
loopne
in
enter
adc
scas
sub
and
pop
cmc
mov
mov
not
sbb
sbb
addr16
fisttp
(bad)
call
(bad)
adc
dec
std
push
lea
jecxz
imul
test
test
pop
dec
add
sbb
dec
xlat
adc
xchg
sbb
cli
fld
out
jp
imul
(bad)
jmp
pop
mov
into
add
fwait
and
(bad)
mov
je
(bad)
mov
loop
sbb
sti
imul
push
(bad)
sub
in
hlt
les
xor
dec
(bad)
xchg
push
push
addr16
pushf
fldenv
mov
inc
cs
cmp
dec
out
dec
das
rol
sbb
pop
mov
sbb
and
test
fmul
or
jp
add
and
in
and
ss
xchg
es
test
cmp
push
aas
add
ins
or
xchg
repnz
int
neg
push
push
iret
xor
cmp
and
imul
shl
test
or
imul
shr
out
or
cmp
scas
pushf
hlt
loop
hlt
or
icebp
(bad)
repz
push
jo
xchg
sbb
xor
retf
ds
push
jmp
repnz
add
jno
cdq
ret
pop
loop
scas
or
imul
pop
fnstenv
jmp
mov
ret
int3
jmp
xor
dec
dec
xchg
lea
dec
int3
inc
xchg
popa
out
icebp
movs
test
sbb
jns
pop
mov
dec
fsubr
icebp
or
daa
push
gs
pop
mov
mov
ja
aam
push
mov
mov
inc
xchg
push
or
(bad)
js
iret
mov
push
xor
movs
mov
xchg
bnd
xchg
mov
jb
mov
pop
add
repz
dec
xor
outs
clc
push
fimul
xchg
or
ret
mov
xor
fs
fwait
xor
ins
inc
punpckhdq
not
xchg
stos
xchg
in
(bad)
mov
shl
scas
mov
arpl
jae
imul
(bad)
or
cmp
add
lds
or
push
test
sbb
ror
rcr
stc
cli
sahf
mov
fistp
addr16
out
in
sbb
into
test
test
cmp
xchg
in
icebp
mov
gs
divps
sub
aad
jb
arpl
adc
jae
jmp
daa
pusha
and
rcr
cmps
sub
in
shl
or
adc
idiv
aaa
and
adc
rol
sub
cmp
jno
jecxz
inc
sti
and
stos
xor
jle
mov
and
sbb
inc
push
push
imul
pop
or
std
daa
jbe
in
xchg
and
add
add
std
mov
fcomip
mov
shr
adc
(bad)
lock
sbb
ror
inc
mov
and
ror
sub
das
ins
push
push
mov
mov
mov
lock
fld
add
cmp
jmp
loope
push
mov
jmp
pop
(bad)
dec
jmp
ret
xor
scas
mov
loop
dec
xchg
ror
outs
cdq
lahf
loope
and
imul
push
loopne
and
xchg
je
popa
mov
mov
cmp
push
xchg
sub
ins
sbb
outs
inc
jne
sbb
aas
sub
inc
test
pop
mov
test
mov
mov
pop
loop
fwait
sbb
call
xchg
inc
lods
and
ret
daa
and
sahf
add
dec
ins
adc
ins
sub
jle
add
fldcw
es
push
pop
in
and
jbe
adc
jmp
and
mov
mov
and
sub
adc
test
lods
pop
and
stos
out
movs
fist
adc
adc
je
outs
mov
push
es
hlt
cs
lds
inc
inc
(bad)
test
sar
dec
or
mov
dec
dec
stos
and
cmps
mul
fs
xor
inc
or
mov
in
ins
push
scas
scas
pop
test
or
pop
das
xor
sbb
loope
movs
int3
xchg
out
xchg
jp
aam
in
and
and
or
fdiv
int3
xor
repz
shl
rcr
shl
mov
pop
push
inc
push
xchg
pop
popa
jmp
add
mov
or
lods
mov
ins
jb
push
lods
cs
mov
jno
and
push
xchg
div
mov
repz
jne
call
cs
jmp
inc
data16
inc
xchg
cmc
lds
aam
push
mov
or
les
xchg
ja
push
mov
sar
pusha
mov
(bad)
jge
imul
and
shr
adc
dec
xchg
sub
stos
mov
inc
aas
dec
push
push
add
(bad)
adc
add
add
(bad)
xor
cmp
iret
(bad)
in
mov
ds
pshufw
sar
dec
dec
aad
mov
fs
inc
fs
movs
xchg
(bad)
xchg
jge
xchg
imul
pop
mov
into
mov
xlat
mov
adc
shl
in
shr
in
std
ror
(bad)
xor
lods
push
loop
or
call
mov
jnp
fwait
(bad)
xor
sbb
mov
scas
mov
and
adc
pop
into
fisub
sub
push
adc
and
nop
mov
imul
add
nop
inc
inc
sub
pop
retf
mov
nop
inc
lods
and
sbb
cmp
out
xchg
scas
mov
cmps
aad
fincstp
pop
and
iret
and
mov
mov
outs
or
and
inc
jmp
and
xchg
nop
and
fild
std
mov
shl
xchg
cmp
cmps
daa
(bad)
mov
stos
and
cmp
push
lods
or
mov
(bad)
(bad)
call
pop
jmp
lods
dec
jns
push
mov
cdq
pop
cmp
call
mov
addr16
aas
inc
mov
popa
cdq
inc
retf
xchg
or
add
sbb
data16
int3
dec
fisub
sub
sbb
xchg
(bad)
xchg
mov
cld
mov
scas
push
adc
fistp
clc
iret
mov
daa
lahf
cmps
gs
jg
cli
movs
jns
add
iret
adc
dec
ss
pop
jle
mov
add
pop
pop
pop
mov
push
dec
inc
test
adc
retf
xor
cwde
popf
dec
pop
sahf
in
sbb
cmps
clc
movs
jne
shl
enter
out
jl
add
aad
sub
adc
fwait
xchg
dec
mov
mov
pop
aaa
(bad)
sti
add
outs
into
lock
stc
(bad)
jae
out
jno
dec
fstp
ficomp
lods
pop
or
or
fild
add
pop
dec
xor
pop
inc
inc
push
jno
sar
mov
sub
adc
js
and
inc
mov
cmp
push
adc
xor
outs
shr
jecxz
pop
fisubr
and
jo
ror
(bad)
aad
sub
sbb
jmp
pop
dec
loope
jo
test
loopne
pop
pop
xor
pop
mov
dec
cmps
jb
and
into
pop
push
mov
dec
ja
lock
push
out
add
dec
mov
fadd
inc
push
and
sub
out
test
dec
lock
jp
add
loop
iret
xor
sub
in
(bad)
mov
and
push
pop
inc
pop
mov
jecxz
outs
push
je
ficomp
outs
inc
or
push
mov
in
ja
mov
xor
cdq
sbb
ds
dec
fdiv
pop
mov
inc
lock
ja
push
sbb
jmp
ds
sbb
mov
jmp
xor
sbb
call
out
push
movs
push
(bad)
retf
adc
loop
pop
(bad)
fistp
outs
nop
inc
shl
mov
retf
jmp
jne
std
push
test
test
icebp
jnp
sbb
addr16
cmp
mov
js
iret
mov
push
stos
in
je
pop
xchg
in
pop
sub
jg
add
adc
inc
shl
test
add
shr
push
xchg
push
cmc
sti
dec
test
xor
popa
xor
cli
dec
enter
sbb
push
(bad)
out
ja
das
inc
sti
xor
push
xchg
xchg
add
inc
sbb
pmulhuw
pop
or
jb
push
das
dec
add
stos
fist
push
call
and
fidiv
push
and
not
mov
ins
mov
test
xchg
pop
adc
jg
mov
and
dec
lock
mov
or
inc
mov
or
pop
jae
dec
xor
int
(bad)
hlt
iret
icebp
sbb
cdq
fucomp
sar
mov
mul
dec
sub
cmps
inc
lea
in
jno
ds
test
cmp
and
iret
cmp
movs
gs
repnz
ins
pop
in
or
add
push
call
(bad)
pop
mov
iret
repz
(bad)
dec
mov
sub
push
xchg
push
mov
adc
xchg
push
push
outs
cs
int
iret
arpl
jmp
in
push
pop
pop
enter
mov
xchg
and
xor
xor
cmp
mov
leave
inc
pop
mov
or
jl
inc
pop
out
dec
ins
inc
repnz
sbb
pop
push
xor
nop
gs
xchg
sub
sbb
push
lods
jno
pop
push
pop
js
jne
in
cdq
dec
mov
push
cld
push
retf
mov
dec
(bad)
adc
and
rcl
mov
(bad)
or
fbstp
loop
(bad)
cmp
pop
mov
inc
bound
pop
(bad)
cld
js
xor
repz
and
dec
lods
int
xor
sbb
inc
xlat
nop
pop
shl
mov
pop
dec
bound
push
loopne
lea
daa
mov
aam
out
ja
dec
jecxz
out
jl
dec
or
nop
fisttp
mov
in
jl
mov
and
test
inc
retf
stc
mov
xchg
xlat
jmp
cld
cli
inc
xor
(bad)
rcl
mov
pop
xchg
jae
call
stc
mov
inc
into
xor
fucomip
jge
and
mov
dec
shl
test
fidiv
mov
int3
and
adc
adc
xor
sub
fadd
and
pop
xchg
mov
sub
jecxz
movs
jp
lock
push
adc
mov
jne
stc
xchg
pop
lods
cmps
movs
mov
sub
push
and
cmp
pop
push
inc
xor
and
lds
shl
arpl
sbb
lahf
bswap
sub
inc
jbe
ds
pop
cld
mov
jecxz
adc
mov
dec
sub
imul
out
popf
xchg
jnp
or
jle
inc
lock
mov
pusha
fist
sbb
and
out
ret
jp
or
sub
jb
in
aam
jb
shl
dec
je
fwait
sub
loopne
ret
jae
or
or
sti
call
out
or
out
in
ret
lods
xchg
mov
xor
inc
jae
jno
xchg
pop
mov
cld
cmp
pop
cmps
shl
mov
aas
mov
inc
push
out
clc
xchg
cmp
aad
cli
pop
and
test
stos
ficomp
lds
mov
js
ja
xor
xchg
ret
outs
stc
sbb
adc
sub
push
jno
sub
cld
(bad)
dec
adc
mov
mov
pushf
rcr
fcom
adc
and
fwait
mov
imul
inc
inc
int
out
xchg
jle
pop
xor
add
and
popf
loopne
cli
ja
cs
nop
loope
ds
dec
push
out
pop
mov
es
aaa
cmps
or
mov
push
sub
fistp
jecxz
test
jge
pushf
test
inc
jecxz
xchg
pusha
cmp
dec
in
xor
adc
xor
push
stos
out
adc
aam
inc
cmp
outs
bound
rcl
sub
jecxz
add
dec
inc
cmc
adc
int
ja
outs
dec
iret
pop
rol
outs
and
fsubr
pop
push
test
cs
or
dec
fiadd
adc
leave
adc
pop
scas
mov
into
inc
push
adc
mov
fstp
fstp
mov
shr
test
add
retf
pop
jns
fidiv
ret
push
out
outs
aad
(bad)
jmp
mov
sub
jp
vmovd
repz
or
xor
(bad)
enter
adc
fdivr
inc
sbb
repnz
dec
mov
xchg
mov
lods
add
scas
xor
stc
xor
ds
sbb
out
cmc
and
inc
call
sbb
push
mov
in
stc
test
or
loope
xlat
(bad)
lods
stos
mov
xlat
stc
(bad)
sti
out
sbb
xchg
sbb
xchg
fs
sahf
gs
out
outs
xchg
jb
icebp
aaa
sub
sub
mov
sbb
lea
add
pop
sti
add
aaa
enter
xor
and
ss
ficom
sub
and
add
pop
in
sub
lds
jo
mov
ins
sub
aas
neg
push
lods
(bad)
jnp
jo
addr16
jle
cdq
aad
call
pop
dec
push
sub
hlt
mov
and
jg
add
push
dec
add
inc
retf
mov
dec
shl
iret
stos
out
cmc
dec
xchg
add
inc
mov
mov
xor
loopne
jno
jbe
push
cmp
sub
adc
loop
not
and
call
cmp
rcr
clc
adc
xor
popf
call
cmc
scas
sub
and
cmp
adc
dec
hlt
push
mov
inc
mov
idiv
add
pop
mov
adc
repnz
jg
mov
retf
mov
pop
es
(bad)
jmp
in
push
js
xchg
fild
sahf
nop
outs
mov
lea
xchg
imul
sub
mov
jae
enter
pop
test
cmp
mov
test
popf
xor
inc
adc
add
ds
(bad)
lods
xor
into
imul
inc
xor
ret
aam
nop
les
(bad)
jb
ins
cmp
dec
retf
arpl
out
and
xchg
dec
data16
in
retf
push
adc
out
jmp
jno
clc
jmp
sub
dec
xchg
outs
or
inc
addr16
imul
jmp
or
jns
pop
fcomp
sub
sbb
add
stos
jg
clc
lea
je
xchg
inc
push
or
adc
outs
sbb
out
adc
mov
cmc
loop
xchg
popf
pusha
adc
in
dec
jbe
clc
mov
jns
push
out
neg
mov
sub
out
pusha
out
xor
not
cmps
mov
imul
shr
arpl
add
out
sub
xchg
adc
or
sub
push
mov
xchg
jmp
pop
fistp
xchg
clc
cmp
pop
cwde
sub
mov
dec
lahf
hlt
add
cmp
inc
loopne
fdivr
popa
mov
push
stos
adc
fsub
outs
mov
repnz
out
ins
(bad)
xor
js
in
fwait
gs
ja
pop
push
(bad)
in
jne
cwde
pushf
adc
xor
ret
pop
cmp
push
xchg
test
or
inc
cmps
(bad)
cmp
dec
xchg
xor
push
mov
cmp
xor
mov
shl
jge
push
lds
sbb
adc
mov
pop
sub
sar
(bad)
(bad)
pop
xchg
int3
mov
cmp
inc
mov
outs
or
ror
ja
pop
test
ret
push
cmp
pop
addr16
pop
or
jne
cmp
in
jno
out
sub
repz
outs
sbb
mov
jmp
test
mov
pop
lods
ffreep
lea
imul
test
adc
pop
inc
es
xchg
lea
adc
out
cmp
int3
js
cmp
jbe
xor
jp
sbb
inc
adc
in
aam
push
(bad)
jbe
pop
imul
push
sahf
(bad)
imul
inc
ret
jle
dec
or
xchg
or
pop
push
inc
pop
scas
leave
add
dec
enter
xchg
jecxz
xor
nop
int3
or
aaa
ret
ins
scas
cmp
mov
iret
outs
xchg
call
jbe
adc
bound
cmc
(bad)
jecxz
repz
cmp
in
cmp
ret
mov
lods
jne
ins
xchg
jae
mov
call
leave
xchg
stos
sub
nop
ja
leave
cmc
xchg
adc
pshufw
xchg
pop
xor
cmp
mov
ret
sub
jo
sub
neg
into
xor
mov
push
mov
test
and
cld
rcr
pushf
popa
pusha
and
pop
push
(bad)
jo
cmp
jg
das
push
add
les
adc
jg
jp
ins
movs
pusha
pop
fidiv
push
out
jno
dec
jbe
mov
mov
std
popf
call
jo
fwait
mov
es
aas
test
int3
stos
clc
test
enter
(bad)
jne
dec
test
les
jnp
jecxz
imul
cwde
adc
xchg
loopne
leave
pop
jne
xchg
xchg
mov
jle
iret
loop
lods
push
les
test
popa
add
jp
pop
mov
(bad)
(bad)
sbb
jbe
mov
pushf
sar
mov
and
pop
and
xchg
out
bnd
rcl
and
ret
sbb
addr16
adc
test
jb
je
inc
adc
add
pop
scas
cmc
popf
out
pop
pop
mov
xor
or
scas
in
(bad)
pop
loope
cmp
jb
aam
lods
add
sub
push
jae
jl
adc
inc
mov
mov
xchg
sbb
icebp
dec
(bad)
adc
mov
and
repnz
add
cmc
cmp
(bad)
test
mov
sbb
push
hlt
test
mov
or
jne
mov
push
add
dec
push
cmp
(bad)
dec
adc
mov
xchg
xchg
int
fild
pop
add
jae
cdq
aas
jae
sbb
mov
dec
xchg
xor
cmp
mov
daa
inc
pop
mov
call
xor
mov
jecxz
pop
arpl
cli
retf
popa
jmp
or
and
dec
push
or
mov
dec
pop
add
aam
pop
inc
aam
cmp
ds
mov
xlat
mov
add
movs
ret
jecxz
or
mov
out
fcomp
mov
test
push
mov
jno
jo
adc
stos
fstp
pop
(bad)
jmp
dec
or
mov
mov
cwde
aad
data16
cs
push
cmps
sub
stos
gs
dec
aad
(bad)
jp
in
adc
mov
sub
pslld
add
jo
cld
mov
rcl
sahf
mov
mov
sar
test
push
leave
adc
mov
push
and
add
popa
mov
in
jmp
es
loopne
scas
hlt
push
les
inc
test
int
or
lahf
inc
sub
sqrtps
mov
sar
sub
and
ins
and
and
cmp
idiv
sbb
in
ds
inc
dec
fidivr
in
pushf
cmp
ins
pusha
fnstsw
ret
sar
imul
lock
popa
icebp
and
or
jno
movaps
sub
fstp
xor
and
adc
mov
dec
ja
lea
test
mov
ja
rcl
cmps
xor
cmp
dec
jg
mov
loopne
xor
and
ss
ins
and
mov
lods
popf
push
xchg
sbb
out
cld
xor
pop
pop
mov
test
jmp
loop
adc
sub
pop
and
lahf
xor
push
push
fs
pop
ret
in
lea
mov
ds
into
ret
outs
mov
rcl
in
xchg
sahf
mov
dec
add
pop
dec
pop
push
sar
nop
(bad)
rcr
jno
rol
ds
int3
add
mov
mov
mov
ret
cmp
rcl
sbb
xor
imul
stc
add
jle
call
rol
outs
nop
pop
jne
sub
adc
popf
lods
movs
jmp
xchg
inc
gs
aaa
mov
popa
rol
cwde
leave
repz
mov
cmp
pop
je
outs
sbb
loopne
cmp
xor
mov
pop
rcl
(bad)
enter
not
dec
stc
aam
pushf
pop
push
mov
lds
in
sub
cld
push
push
das
push
cmp
ss
jo
push
jno
movs
xlat
cmp
es
add
mov
adc
sbb
pop
adc
gs
inc
mov
sbb
rcl
iret
lea
pop
mov
sub
movs
fbstp
or
inc
aaa
push
pop
sub
mov
mov
jns
mov
cmp
push
mov
sti
add
jge
mov
call
mov
ins
or
cli
mov
lock
mov
ja
pop
dec
aad
and
pop
pop
adc
fs
out
pop
(bad)
stos
dec
(bad)
lods
iret
aaa
stc
sbb
pusha
fild
pusha
cli
sbb
add
xchg
inc
pop
std
adc
gs
stos
(bad)
js
shl
xor
dec
push
fucomp
dec
fdivr
mov
popf
jae
loope
scas
movs
jbe
(bad)
xchg
pop
cmc
xchg
lods
and
pusha
mov
sub
mov
and
fisttp
jl
xor
mov
sti
xchg
rcl
shl
adc
das
pushf
jne
rcr
iret
mov
or
aas
lea
ss
mov
push
push
retf
jmp
and
(bad)
mov
and
shr
sbb
jecxz
jmp
inc
scas
sub
xchg
or
adc
stc
xchg
mov
add
enter
mov
addr16
aas
stc
push
out
jns
mov
mov
clc
push
push
sbb
movs
out
and
jns
lods
mov
sub
pop
pop
sub
leave
xchg
fmul
pop
hlt
gs
sbb
retf
xchg
popf
cmp
sbb
push
add
or
(bad)
jecxz
test
and
dec
lds
aaa
mov
add
push
ja
add
es
loop
fld
inc
add
push
fs
retf
dec
xchg
xchg
mov
loop
call
rcr
imul
fucomp
cdq
or
xor
out
mov
push
jg
into
aas
pop
mov
rcr
and
jbe
pop
jmp
mov
cmp
repz
shl
sub
in
rcr
leave
mov
sub
add
loop
xor
icebp
clc
xlat
cmp
cmp
xor
movups
and
scas
inc
and
or
inc
loope
fnsetpm(287
sub
movs
repz
lock
in
pop
(bad)
je
mov
adc
arpl
xchg
dec
test
addr16
xlat
sub
jb
out
jl
push
into
push
or
add
cmp
ja
les
push
mov
pop
dec
mov
or
fwait
test
in
stos
imul
aam
sub
adc
pop
jg
js
pusha
(bad)
aad
push
or
xchg
outs
push
ror
stc
retf
dec
ins
test
jne
clc
cmps
jg
addr16
sbb
inc
cld
push
cs
push
mov
mov
icebp
sbb
loop
(bad)
in
xor
pop
sub
pcmpeqw
sub
aam
xchg
jge
or
inc
popf
xchg
in
sub
popa
push
dec
push
icebp
pop
sbb
pop
mov
xor
(bad)
push
pop
mov
xchg
xor
mov
movs
dec
cld
xor
mov
and
sub
sub
test
add
jge
and
inc
aad
inc
retf
(bad)
loope
bnd
push
inc
outs
movs
enter
xchg
std
inc
add
jae
(bad)
pop
sub
xor
in
lea
aam
aas
(bad)
dec
jno
xchg
xor
cmp
cs
mov
popa
out
jmp
mov
or
cmp
mov
mov
enter
je
mov
mov
ins
jmp
xor
aam
pop
(bad)
hlt
cmp
adc
(bad)
fcmovnb
and
fst
cmp
xchg
loope
aad
cdq
bound
femms
in
jl
aaa
or
inc
pop
or
outs
mov
pop
and
jbe
cs
or
shr
mov
xchg
(bad)
aas
pop
int
lds
mov
push
push
push
or
inc
pop
add
ret
bound
test
xchg
jmp
leave
call
outs
pop
js
inc
mov
mov
or
imul
icebp
dec
cwde
retf
sub
xchg
call
cmp
test
and
inc
stos
pop
mov
cmps
cmc
je
leave
cli
pop
jmp
mov
imul
pop
add
pop
call
push
adc
mov
mul
adc
ffreep
or
cmps
inc
inc
mov
xchg
push
retf
xchg
cmp
and
mov
js
icebp
mov
cmp
scas
lods
nop
mov
jns
push
shl
stc
pop
pop
mov
xchg
mov
jo
stos
dec
arpl
mov
and
mov
mov
(bad)
addr16
add
push
icebp
lods
xchg
mov
adc
xor
sbb
jecxz
mov
sub
adc
stc
pop
jno
inc
sbb
pop
test
fistp
mov
mov
jo
xchg
out
cmp
cmp
lods
mov
cs
mov
xchg
jno
cmps
sub
das
cmc
cld
push
xchg
adc
mov
or
dec
sbb
sbb
adc
in
aaa
jp
aaa
cwde
mov
and
xor
xchg
jne
sub
dec
sub
mov
ficomp
sub
mov
lods
mov
add
jecxz
clc
(bad)
mov
mov
jno
jecxz
sbb
stos
jp
pop
sub
or
and
lods
adc
test
xor
mov
adc
lock
add
mov
leave
add
das
das
pop
shr
mov
in
mov
movs
aam
outs
(bad)
(bad)
in
and
inc
fdiv
adc
pusha
xor
dec
out
rcr
aaa
dec
mov
je
add
mov
(bad)
sahf
cmps
sub
sbb
(bad)
push
ss
aad
sub
inc
or
daa
push
call
pop
pop
and
sbb
ins
mov
push
iret
adc
stos
and
push
(bad)
xor
xor
cmp
retf
sub
(bad)
int3
pop
jns
inc
pop
repz
or
xchg
adc
(bad)
imul
pushf
addr16
add
inc
sbb
mov
jnp
adc
add
mov
xchg
lods
and
inc
sbb
mov
cmp
loopne
(bad)
add
mov
repnz
mov
loope
lahf
mov
mov
retf
test
cmps
mov
hlt
xchg
sub
pop
mov
mov
mov
jp
and
sbb
adc
lea
push
loope
lods
call
sbb
and
push
sub
lds
sub
mov
cmp
sbb
pusha
mov
mov
xlat
nop
aaa
or
jno
dec
mov
test
sub
nop
push
ja
mov
call
mov
out
mov
ror
or
mov
push
dec
mov
push
movs
outs
sbb
iret
xchg
push
push
loop
push
jno
enter
xchg
sub
shr
adc
xlat
mov
mov
push
xor
call
call
adc
adc
sub
or
cmp
popa
pushf
lods
xchg
subps
mov
xor
stc
push
enter
into
ss
adc
in
shl
stos
das
aad
ficomp
dec
adc
(bad)
xor
mov
and
ret
mov
retf
ins
sub
cli
stos
movs
or
pop
jle
mov
xchg
stos
inc
mov
adc
in
inc
cmps
push
push
aas
cmp
shr
xchg
or
fdiv
xchg
mov
out
adc
cli
mov
daa
bound
jle
ins
outs
cmc
mov
(bad)
mov
les
jp
xchg
cmp
add
sbb
push
jbe
rol
jl
cmps
or
dec
repz
xor
inc
mov
rcl
inc
adc
clc
or
fdiv
cmc
imul
cmp
mov
je
sub
push
inc
sbb
in
and
mov
add
mov
xchg
inc
xchg
sti
lahf
rcr
ret
inc
(bad)
loopne
sub
inc
mov
retf
imul
cmovb
fs
daa
and
or
sbb
hlt
mov
stos
push
dec
pop
or
nop
dec
xchg
(bad)
in
mov
adc
stos
inc
test
xchg
mov
xchg
mov
mov
loope
xor
push
cmp
or
adc
aaa
push
shl
inc
push
dec
pop
jge
and
fnstsw
stos
(bad)
xchg
jg
stc
inc
mov
jne
push
icebp
out
or
xchg
test
dec
add
lods
xor
jbe
cmp
(bad)
jmp
sub
push
movs
jp
jmp
fdiv
addr16
inc
in
xor
pop
hlt
push
sbb
scas
cmps
push
add
pop
je
in
mov
pop
stos
mov
sub
pop
sbb
stos
cmp
sti
or
push
push
mov
ins
or
mov
ret
dec
call
imul
popa
sbb
(bad)
popa
pop
fld
cmp
sub
add
dec
test
xor
int3
jnp
jae
sahf
outs
push
sbb
cdq
icebp
loopne
mov
sbb
ins
ret
or
icebp
rcl
cmc
lods
sbb
jnp
adc
xchg
xchg
ror
call
aas
cmp
sti
gs
daa
outs
sbb
jp
push
jle
out
inc
retf
test
pop
adc
ins
add
addr16
lock
inc
sar
and
hlt
pop
loope
retf
nop
mov
stc
dec
ss
mov
sbb
loope
outs
xchg
daa
push
adc
push
shr
mov
shl
dec
jl
lahf
sub
mov
fld
je
mov
mov
sar
jns
aas
stc
gs
sub
push
cmp
gs
add
push
lahf
adc
sub
icebp
data16
shl
mov
mov
sbb
mov
test
fstp
daa
nop
lods
push
xchg
push
cwde
ds
stos
pushf
out
cs
mov
sbb
shl
sbb
clc
sti
daa
push
inc
lea
pop
xlat
fs
xchg
dec
pop
mov
sbb
fsubr
push
xor
xor
cmp
push
lahf
clc
test
jmp
jne
and
ret
int3
mov
sbb
cwde
mov
mov
cmp
inc
mov
sub
mov
fld
jnp
cli
jae
js
cwde
sti
mov
shl
call
in
push
dec
fsub
imul
arpl
inc
jle
ss
xchg
xchg
jmp
cmps
inc
ss
das
aas
iret
add
sub
sbb
clc
jns
test
dec
fwait
and
inc
shl
fcom
jno
daa
enter
cmp
addr16
dec
push
mov
lds
pop
xor
ret
icebp
jnp
pop
jp
inc
sbb
out
loop
inc
fwait
out
sbb
pushf
fcom
cs
(bad)
out
ins
xor
out
push
add
dec
inc
gs
(bad)
retf
test
jmp
jae
mov
stos
push
stos
inc
adc
dec
fwait
push
(bad)
les
xor
scas
lea
inc
xchg
ss
mov
jnp
mov
call
jg
pop
pop
loope
scas
bound
mov
ss
in
xor
loopne
adc
popa
(bad)
mov
sahf
cmp
add
jmp
xlat
inc
sbb
test
cmc
xchg
push
shr
lea
push
add
aas
mov
mov
fidiv
repnz
mov
or
pop
mov
inc
add
and
add
ins
dec
popf
outs
gs
fist
or
ret
mov
pop
add
jnp
paddw
xchg
dec
pop
and
aaa
jae
mul
add
test
mov
jmp
sbb
lahf
adc
das
mov
dec
jnp
(bad)
and
pop
xchg
fnsave
in
jl
or
sub
mov
into
pop
jb
(bad)
cs
push
mov
hlt
les
jb
xchg
aam
jg
mov
iret
shl
test
add
sbb
push
push
lea
dec
test
sbb
jle
mov
inc
dec
mov
and
outs
mov
(bad)
out
daa
jb
mov
(bad)
push
aas
or
repz
retf
and
in
dec
mov
adc
loopne
mov
xchg
or
mov
inc
call
mov
movs
arpl
pop
pushf
dec
cdq
mov
rcr
dec
cmps
push
mov
sub
mov
adc
mov
pop
in
or
jno
test
out
ss
xor
mov
(bad)
xchg
dec
mov
xchg
pop
adc
cmp
leave
aaa
test
sub
jns
mov
mov
jl
inc
stos
or
push
ret
or
movs
xor
cmp
das
add
fstp
out
int3
add
xchg
ror
repz
xchg
xchg
dec
mov
js
push
repnz
inc
fucomi
cmp
xor
fnstsw
or
and
ins
out
mov
mov
jo
push
test
ds
pop
add
fadd
adc
add
in
add
and
pop
push
mov
fs
jnp
jmp
inc
mov
jns
cld
shl
pop
jmp
retf
or
mov
xor
gs
mov
(bad)
mov
cmp
imul
movs
xlat
cmp
(bad)
jbe
push
jbe
mov
dec
lds
ror
(bad)
lods
sub
in
jg
pushf
outs
dec
sbb
or
adc
ss
xchg
sbb
mov
add
callw
adc
pusha
movs
rcr
cmp
iret
cmp
cmp
cli
in
je
cmp
test
cld
push
shr
sbb
sub
in
xor
in
sbb
or
mov
jp
loope
pop
mov
push
push
mov
out
movs
sbb
push
mov
loopne
xor
shl
xchg
fs
shl
push
pop
mov
lods
mov
retf
popf
lock
fnstsw
mov
cmps
stc
adc
mov
mov
sar
test
outs
pop
(bad)
repnz
in
and
sbb
mov
push
pop
movd
mov
fwait
ror
xor
pop
je
(bad)
es
pushf
mov
ins
add
add
or
in
mov
push
loop
cmp
stc
popf
adc
cmp
xchg
repnz
les
movs
or
sub
mov
push
mov
mov
sub
jg
xchg
push
mov
dec
inc
in
jno
xor
icebp
in
push
les
push
int
inc
in
das
push
xor
(bad)
push
xor
call
dec
mov
push
add
sbb
mov
jb
shr
cmp
push
in
sbb
jle
lock
pusha
xchg
popa
xor
in
dec
lods
xor
jnp
int
shl
sti
clc
std
fucomp
xchg
cmp
aad
inc
mov
jo
push
ss
js
cld
mov
push
push
jb
outs
out
clc
sahf
push
pop
mov
vmovaps
rcl
(bad)
sbb
mov
ins
adc
aaa
add
call
or
mov
xlat
add
popa
pop
pushf
dec
arpl
jne
add
sbb
push
jne
push
xchg
outs
int
lods
cmps
dec
loope
mov
jmp
(bad)
mov
cld
shl
ins
sub
mov
mov
ficomp
add
push
inc
mov
inc
pop
xor
retf
(bad)
jmp
out
inc
shl
stos
or
xor
cmps
gs
jb
aaa
imul
loopne
jp
mov
cmp
cmps
idiv
cld
cmps
nop
jecxz
fsubr
mov
in
in
push
(bad)
push
test
inc
test
jae
fidiv
cdq
(bad)
bound
sbb
int3
loopne
dec
(bad)
icebp
xchg
xchg
or
push
push
mov
pop
fcmovnbe
mov
and
mov
inc
leave
scas
cmp
dec
repnz
mov
cs
test
out
sub
rcl
jns
jne
inc
adc
inc
sub
push
cmp
lods
scas
imul
stos
popa
push
pop
cli
out
xchg
cmp
fbstp
and
iret
sbb
test
leave
jne
dec
outs
aam
(bad)
mov
mov
sbb
cmp
sbb
loop
cmp
cmps
mov
add
xchg
mov
int
imul
cld
push
lds
fcom
mov
jge
and
and
xor
ficomp
aas
xchg
cmps
mov
sub
and
popa
sbb
in
mov
jno
mov
mov
sub
jmp
and
dec
cdq
shr
sti
out
int
fnstenv
into
leave
scas
cmps
or
adc
mov
dec
dec
jmp
clc
icebp
or
not
mov
popa
dec
les
test
pop
test
stos
cld
stos
scas
mov
aam
stos
test
(bad)
or
fisub
ret
in
push
and
and
es
sbb
data16
fcom
dec
cvtps2pd
jno
test
mov
jmp
push
jge
out
push
adc
and
not
jo
fs
shl
test
push
pop
std
adc
sub
push
xchg
dec
sahf
pop
adc
jbe
and
movs
repz
ds
(bad)
mov
hlt
scas
mov
adc
cmps
sub
push
pop
cwde
mov
(bad)
mov
pop
cmp
call
xchg
add
lds
aaa
and
test
out
pop
add
leave
jle
dec
sahf
pusha
pop
inc
mov
repz
mov
dec
jecxz
mov
rcr
adc
movs
fldcw
inc
(bad)
out
xchg
jne
js
mov
loop
jb
or
mov
retf
jbe
mov
ja
cdq
or
outs
outs
aam
gs
mov
dec
sub
xor
pop
das
mov
(bad)
sub
push
jg
inc
dec
jecxz
or
pop
jns
adc
out
(bad)
fisub
outs
mov
sub
sub
sub
jmp
ret
push
jl
inc
xlat
cs
sbb
enter
fdivr
sti
(bad)
push
nop
movs
aas
adc
push
ror
push
mov
push
inc
cmp
or
xchg
mov
lods
mov
xor
int
fimul
cmps
mov
mov
xor
xor
mov
cmp
xor
sbb
pop
or
mov
out
sti
xchg
pop
fdiv
mov
and
mov
loop
jl
lahf
jl
and
cmps
pop
scas
xor
pop
loop
sbb
mov
mov
add
push
movs
(bad)
int
push
or
sub
daa
rcl
ds
test
test
icebp
inc
out
sub
mov
mov
scas
dec
cmc
sub
out
jb
ins
test
mov
aas
or
and
pop
or
mov
out
and
or
push
and
inc
daa
loope
mov
add
xor
xchg
xchg
inc
mov
mov
call
(bad)
and
sub
int3
test
mov
or
adc
sbb
inc
push
jbe
pop
xchg
xor
sub
dec
mov
repnz
and
arpl
pop
call
gs
xchg
pop
push
pop
aaa
out
scas
xchg
and
push
adc
ds
push
inc
jmp
and
jecxz
cmp
sub
mov
add
push
(bad)
pop
scas
push
iret
xchg
jnp
inc
mov
icebp
rol
iret
mov
retf
repnz
mov
add
stos
out
aam
dec
test
fwait
xlat
(bad)
lock
inc
adc
fnsave
or
push
addr16
push
fldenv
cld
inc
adc
jl
ret
cmp
mov
call
scas
xchg
ror
nop
fwait
xor
dec
test
fstp
std
cmps
jno
rcl
mov
add
ins
pop
test
call
adc
xor
scas
or
xchg
popa
out
cmovae
jb
(bad)
retf
imul
adc
or
xchg
les
cmps
push
fidiv
movs
xor
iret
bound
scas
lods
push
sahf
sbb
add
xchg
loopne
hlt
mov
pop
push
pusha
cmp
stos
inc
cdq
(bad)
das
daa
dec
pop
mov
aam
push
hlt
inc
mov
push
mov
int3
ret
sbb
test
sbb
cmp
aaa
mov
jnp
fcmovbe
push
jg
icebp
ror
aad
addr16
cmc
push
sub
adc
fs
dec
cmp
es
into
sbb
jg
scas
mov
cld
inc
xchg
add
mov
inc
lea
mov
jg
pop
fcmovb
scas
ror
push
neg
ja
sub
lahf
jno
sar
ja
cmp
lods
fucomip
pop
mov
lds
loope
and
sbb
pushf
pop
mov
js
ret
loopne
adc
cmp
push
icebp
in
outs
lods
int
dec
cmp
add
inc
addr16
or
inc
pop
adc
hlt
retf
test
(bad)
adc
shr
outs
cmp
xor
in
cs
in
(bad)
aam
push
in
or
and
ret
lahf
push
cld
xchg
cmp
mov
ret
fwait
test
jo
rcl
jle
iret
sub
mov
push
adc
jb
daa
stos
and
xor
icebp
mov
add
add
pop
cmp
sub
push
sub
(bad)
int
fmulp
hlt
sbb
mov
test
out
push
push
mov
mov
adc
out
xchg
popa
clc
mov
jge
mov
fidiv
adc
sbb
inc
js
and
outs
daa
and
mov
out
arpl
stc
dec
addr16
add
or
push
lock
sub
jne
push
add
je
xchg
mov
pop
lock
or
dec
cmp
inc
ins
pop
retf
push
mov
nop
loopne
cmp
pop
call
or
jbe
mov
retf
sbb
icebp
pop
shl
leave
retf
jecxz
inc
jmp
cmp
sub
repnz
test
xchg
or
sub
nop
mov
push
int3
in
xchg
dec
ficomp
pop
bound
jo
or
aam
(bad)
adc
ss
push
aad
sub
sub
sahf
pop
inc
int3
or
inc
sub
movs
in
inc
in
push
(bad)
jbe
out
cmc
inc
mov
sbb
add
pop
hlt
es
push
push
scas
cmp
jno
cmp
stos
addr16
call
dec
push
pop
xchg
std
std
and
scas
pushf
push
call
add
ins
(bad)
cmc
fisubr
mov
jbe
shl
xchg
and
mov
ins
js
jl
and
mov
stos
pop
sub
mov
fdiv
icebp
(bad)
xchg
xor
hlt
lock
and
jb
imul
mov
lods
mov
into
enter
dec
or
push
xchg
int
cmps
jecxz
inc
mov
adc
scas
mov
push
aaa
sbb
mov
loop
add
push
clc
xchg
jmp
sub
(bad)
aaa
div
test
mov
sar
loope
xor
and
and
push
push
dec
cmp
pop
jbe
les
lods
int
in
lock
out
inc
dec
sti
pop
movs
cdq
adc
popw
xchg
push
jb
sbb
sbb
scas
mov
jge
and
mov
pop
and
xlat
xchg
popa
jne
pop
jg
lds
in
das
mov
fs
fdiv
xor
adc
inc
inc
mov
movs
jbe
aas
xchg
add
test
inc
mov
daa
jmp
call
push
cli
mov
or
stos
lock
xchg
int
pop
adc
xchg
dec
pop
(bad)
mov
jge
mov
mov
shl
inc
inc
xchg
lods
gs
mov
lock
dec
xchg
xor
mov
push
cmc
clc
packuswb
aad
movs
xchg
rcr
or
cmp
add
mov
(bad)
outs
(bad)
cmp
(bad)
cmp
mov
push
je
push
jo
mov
clc
or
loope
xchg
push
fidivr
arpl
dec
lea
in
pop
(bad)
jns
jae
test
push
gs
outs
xor
lods
jg
out
sahf
xor
test
sahf
int3
clc
and
mov
jge
movs
pop
in
mov
call
mov
xchg
adc
jmp
or
fild
pop
jae
jecxz
inc
push
xchg
out
or
push
cmp
jmp
adc
aad
ret
mov
xchg
sub
test
xchg
pushf
pop
js
and
mov
mov
enter
xchg
jle
daa
xor
test
mov
jae
add
or
dec
pop
jns
retf
mov
pusha
daa
pop
mov
jno
gs
mov
mov
xor
inc
sub
fdivr
or
or
dec
aaa
std
push
bound
jnp
loop
stc
sub
fcmovbe
jmp
inc
ficom
scas
jecxz
repnz
push
add
dec
aaa
fwait
addr16
bound
les
cmps
add
sub
in
jmp
mov
push
imul
fstp
and
mov
xor
stos
pusha
out
in
push
std
aad
sbb
adc
push
dec
xchg
lock
out
fcmovu
add
inc
sbb
shl
xor
jbe
mov
and
adc
inc
daa
test
jp
adc
movs
jae
in
enter
call
mov
xchg
sub
sub
xchg
xchg
sub
arpl
mov
stos
mov
jnp
cdq
or
jle
push
mov
stos
sub
xchg
iret
jmp
pop
clc
inc
lahf
push
adc
dec
or
xor
xor
add
sbb
movs
and
cwde
fmul
ds
cmp
addr16
jmp
mov
pcmpgtw
pop
and
inc
add
sbb
mov
pop
(bad)
je
ja
xchg
test
(bad)
jno
pushf
(bad)
sti
jbe
sbb
lar
dec
sbb
mov
or
(bad)
neg
mov
xchg
mov
inc
mov
in
mov
xchg
cwde
adc
xchg
sub
hlt
push
mov
xchg
retf
adc
jbe
stc
inc
cmp
aam
arpl
xor
ret
aam
popf
fwait
dec
jmp
add
fadd
adc
in
mov
or
lods
dec
in
test
xchg
ins
jmp
and
test
iret
pop
jmp
pop
mov
pop
cld
imul
bound
stc
outs
cmps
dec
(bad)
outs
xchg
out
ror
cmp
(bad)
cmp
mov
jnp
jno
lods
out
nop
pop
add
stos
add
inc
xchg
push
jle
xor
ins
cwde
loope
stos
mov
dec
mov
add
jno
mov
dec
or
mov
in
and
out
jecxz
jl
xchg
mov
retf
movs
test
jae
ds
sub
in
mov
sbb
push
popa
pusha
xor
push
adc
pop
pop
retf
jbe
rcl
test
sahf
xchg
ss
sbb
loop
mov
or
sub
iret
jl
xchg
xchg
imul
(bad)
mov
add
push
push
inc
iret
dec
push
xchg
cwde
pop
mov
in
stos
rol
imul
mov
xor
adc
adc
data16
ret
or
sub
ret
ficomp
cli
daa
jb
and
xor
pop
add
push
jbe
mov
pop
mov
(bad)
daa
push
ins
push
mov
push
(bad)
and
inc
sbb
adc
push
mov
cmp
ss
call
mov
xchg
or
mov
lds
push
push
mov
lahf
xchg
ds
lock
xchg
cs
aaa
(bad)
jecxz
mov
jecxz
mov
jecxz
into
popa
cmp
lds
(bad)
out
int3
pop
inc
mul
pop
retf
aam
out
or
shr
call
out
shr
cwde
out
mov
dec
or
sbb
daa
movs
pop
mov
retf
call
cmp
mov
jmp
stc
xchg
lock
sbb
push
jp
dec
pushf
in
out
cdq
aas
(bad)
enter
sbb
cli
hlt
lds
cld
add
retf
ins
(bad)
and
sub
fld
test
fs
in
stos
movs
xor
rcl
(bad)
sbb
cli
(bad)
int3
push
sbb
pop
data16
push
ins
test
mov
mov
sub
pop
ins
cmps
fmul
fisubr
sub
dec
push
loope
adc
hlt
in
std
adc
aas
(bad)
out
mov
sub
repnz
icebp
inc
cli
adc
idiv
mov
(bad)
sub
pop
inc
add
aam
hlt
popa
jno
ret
fldcw
dec
rcl
xor
xor
loopne
mov
out
dec
fcom
pop
adc
movs
push
or
cmp
ss
xchg
and
stos
lock
jnp
jo
jmp
out
xchg
aad
dec
aaa
(bad)
inc
dec
data16
ja
mov
mov
nop
inc
xlat
sbb
outs
in
sbb
ror
jmp
xor
add
sti
push
or
xchg
test
adc
out
ret
sbb
jo
xchg
call
or
arpl
inc
cmp
es
xor
mov
ret
or
mov
adc
(bad)
stc
and
stos
xchg
icebp
cld
cmp
push
lock
push
and
adc
jl
call
or
ja
push
out
or
std
sbb
adc
aaa
stos
sbb
cmp
gs
and
cmp
mov
jno
push
adc
pop
mov
or
in
aam
adc
mov
call
test
dec
cs
jle
jl
jnp
data16
out
push
xchg
fbstp
mov
mov
mov
jp
inc
pop
xor
push
(bad)
stc
jno
sub
inc
add
cmps
and
xor
movs
test
repnz
data16
outs
aaa
imul
jno
jne
adc
sbb
aad
stos
out
push
and
test
(bad)
add
mov
loop
aas
mov
aaa
ds
inc
add
inc
mov
stos
pop
or
int
retf
push
jb
test
movs
adc
push
dec
mov
and
in
mov
les
push
push
mov
rol
aam
stos
add
in
scas
pop
cmps
sub
xchg
mov
stos
jmp
out
cmp
in
mov
cwde
xchg
sub
fild
add
mov
cmps
cmovae
lock
fisubr
dec
daa
jmp
imul
jo
or
mov
pop
cli
push
cld
xchg
mov
fdiv
dec
add
stc
mov
pop
sbb
(bad)
int3
mov
push
mov
xor
repz
push
and
pop
in
aam
jns
pop
sahf
repnz
bound
pop
jg
loopne
outs
jnp
les
idiv
das
call
int3
xor
pop
pop
mov
dec
mov
or
lock
push
outs
dec
es
add
mov
mov
hlt
stos
sbb
mov
push
iret
dec
push
xlat
vpand
cs
rcr
es
dec
mov
and
xor
push
sub
clc
ds
xor
call
daa
and
mov
(bad)
mov
ret
das
push
ins
add
nop
cmp
int
or
call
pushf
inc
pop
(bad)
mov
cwde
sbb
adc
and
cdq
cmp
add
cs
sbb
pop
and
retf
jne
lods
sbb
popf
sbb
shl
cmp
mov
jns
mov
xor
jo
xchg
jmp
aad
pop
or
add
pop
add
ins
mov
int
pop
push
sti
and
dec
dec
inc
cmp
pop
xor
jnp
repnz
dec
mov
stos
sbb
add
pop
sub
jbe
aas
lahf
or
nop
jnp
out
mov
mov
adc
iret
sub
jmp
js
mov
ss
jne
addr16
add
(bad)
jmp
call
int3
ret
mov
xor
out
std
jns
sbb
test
xor
stos
sar
call
shl
stos
push
ds
scas
enter
fnstcw
mov
jecxz
xlat
pusha
(bad)
pusha
pop
stc
push
and
repz
out
adc
and
mov
jmp
jmp
mov
retf
inc
scas
xlat
aas
call
mov
(bad)
in
add
xchg
mov
mov
ss
mov
clc
jae
sar
or
push
ins
xchg
dec
(bad)
into
test
leave
dec
aas
iret
dec
jo
sbb
ss
and
sbb
cmc
aaa
loope
adc
mov
ret
add
push
in
dec
and
daa
mov
jg
ret
nop
adc
out
or
and
call
xor
mov
jne
scas
fstp
ds
cmp
daa
sub
(bad)
mov
push
scas
mov
add
jns
or
mov
dec
(bad)
rcl
sbb
out
(bad)
mov
sahf
mov
push
mov
push
and
push
test
fwait
arpl
les
mov
jbe
(bad)
jmp
xor
or
mov
out
loopne
ins
mov
hlt
xchg
lods
sti
jl
push
and
sbb
mul
shl
sbb
xchg
int
popf
mov
xchg
shl
lea
test
retf
in
(bad)
in
xor
inc
xor
sahf
dec
loope
jno
xlat
gs
les
push
mov
(bad)
fist
cmps
sub
pop
pop
loopne
sar
pusha
mov
dec
gs
cmps
jecxz
enter
mov
xchg
data16
push
(bad)
adc
cmp
ins
jno
outs
icebp
fucom
inc
pop
scas
cli
loop
test
jo
push
or
xchg
pop
jge
ja
mov
or
mov
rcr
mov
dec
call
mov
cmp
fild
xor
aam
(bad)
push
lea
jecxz
jg
jae
outs
(bad)
lods
jmp
test
pushf
in
test
cmp
sub
lods
iret
scas
and
jmp
gs
xor
inc
int
test
fisubr
jecxz
test
dec
mov
xor
sub
in
pop
sub
or
dec
push
jecxz
and
or
jne
test
inc
gs
call
adc
inc
push
ror
sub
mov
retf
mov
clc
gs
aam
and
(bad)
imul
inc
movs
sbb
xor
fmul
jne
dec
out
mov
xchg
inc
ficom
jae
mov
push
aad
lods
or
cmp
ins
sbb
push
les
std
pushf
ret
jns
and
cli
jge
sub
outs
iret
enter
repnz
xchg
ror
mov
ret
jb
pop
or
or
sbb
push
and
xlat
sbb
mul
mov
mov
mov
js
iret
pushf
push
mov
in
and
push
mov
xchg
inc
pushf
lahf
outs
gs
cmps
aaa
push
sbb
ins
mov
push
add
nop
dec
lods
rcl
xchg
push
imul
leave
pop
push
pop
retf
xchg
add
sti
pop
sub
add
inc
jb
xor
movs
test
sbb
int
stos
pop
jo
shl
xchg
std
nop
aas
adc
out
pop
out
fimul
jl
and
mov
push
sbb
push
sub
cs
fcomp
test
or
xor
ds
je
aas
(bad)
cwde
ins
sub
or
jae
xchg
imul
cmp
inc
inc
xchg
es
sbb
xor
fsubr
cwde
rcl
dec
cmp
xor
and
ffree
mov
adc
or
add
lahf
test
fbstp
xchg
push
cmp
or
pop
popf
cmp
jmp
mov
(bad)
mov
or
push
into
fcmovnb
ja
cmp
cwde
nop
rep
jp
jge
ret
test
shl
cmp
fsubr
push
clc
sahf
icebp
sub
div
xlat
mov
dec
in
pop
(bad)
movs
add
jnp
xchg
in
out
pop
jbe
je
and
lods
not
cmp
pop
fldcw
outs
jl
call
gs
pop
cdq
mov
xchg
cdq
jmp
repz
add
dec
dec
lock
dec
test
mov
xor
dec
jmp
pop
dec
and
pop
mov
cmp
div
and
call
scas
not
push
hlt
and
retf
inc
movs
(bad)
lods
sbb
retf
mov
ins
icebp
mov
fstp
mov
icebp
jb
or
jmp
push
push
adc
xchg
xor
js
cdq
rol
mov
loope
push
int3
jbe
sub
rol
pop
push
xor
cmp
xchg
and
dec
je
fdiv
add
and
movs
mov
leave
xor
adc
fnstcw
fs
inc
repz
inc
push
inc
inc
retf
ror
jns
popa
xchg
xchg
pop
leave
pop
mov
lods
adc
pop
sub
nop
cdq
rcl
pusha
xchg
pop
in
push
pop
in
mov
pop
scas
inc
adc
fsubr
cdq
jbe
jae
jle
pop
loopne
inc
lods
mov
aas
sub
repnz
fiadd
neg
ds
adc
ret
mov
iret
mov
push
cmp
push
shr
mov
and
scas
mov
fsubr
lahf
(bad)
jne
jo
inc
outs
push
out
test
movs
pop
les
cmps
cmp
push
nop
push
push
adc
mov
aaa
nop
inc
push
push
movs
pop
aas
jns
iret
dec
sbb
cmp
xchg
or
cld
(bad)
cmp
adc
mov
jb
push
and
outs
lods
xchg
add
arpl
stos
xor
(bad)
sbb
aas
pop
jb
adc
retf
xor
xchg
push
dec
aam
sub
out
aas
dec
cmp
add
aaa
loope
sbb
or
cmps
adc
into
jl
gs
jmp
mov
or
addr16
out
bound
push
pop
fisttp
mov
aad
js
adc
push
push
outs
cs
fld
jno
jecxz
mov
push
push
xchg
xchg
sub
dec
call
fsubr
add
call
jae
sub
jge
aaa
add
and
fisub
inc
push
pushf
fidiv
cmps
jae
movs
mov
into
aam
xchg
xchg
push
push
xchg
or
retf
push
push
sbb
loopne
outs
stos
adc
jl
ja
mov
and
cli
push
xchg
loopne
cmc
ins
pop
daa
add
sar
ins
pop
dec
enter
push
dec
xor
ffreep
fst
pop
jl
push
inc
imul
stos
call
sbb
xor
dec
js
xor
jns
aas
sub
cmp
es
adc
dec
les
fist
xchg
pop
fdiv
sub
push
(bad)
jmp
aas
push
(bad)
fnstcw
fild
sub
fist
add
pusha
sub
imul
cmp
lea
mov
popf
pop
cmp
jbe
scas
cmps
movs
pop
push
(bad)
fdiv
mov
push
mov
das
cmp
shl
mov
(bad)
sub
lea
adc
fs
inc
jmp
xchg
cmps
scas
mov
and
outs
call
imul
and
xchg
(bad)
adc
cmps
(bad)
xchg
fadd
mov
jge
inc
es
cmps
(bad)
dec
jns
(bad)
dec
popf
test
cwde
add
and
or
mov
push
mov
or
adc
fisubr
hlt
es
add
ror
ret
add
cmps
jno
pop
sar
fcmovbe
inc
mov
or
jl
gs
jl
sbb
aas
jl
sar
cmps
fwait
dec
fmul
pop
lock
xor
mov
sbb
inc
jge
xor
jg
xor
retf
xor
pusha
sahf
clc
jecxz
mov
in
retf
dec
fldcw
cwde
in
mov
ja
aad
xchg
cmp
mov
popf
jns
dec
push
or
adc
push
fcmovbe
adc
test
or
xchg
mov
dec
or
sbb
shl
push
scas
loopne
xor
pop
add
push
cwde
ins
fwait
(bad)
jo
xchg
mov
cmps
aam
pop
mov
inc
ret
scas
lods
sub
lds
pop
data16
movs
test
cvtps2pd
sbb
pop
mov
inc
jp
cli
ret
addr16
fild
loope
call
hlt
movs
add
imul
pop
aam
fs
rcr
and
dec
pop
mov
inc
daa
adc
and
in
je
sub
(bad)
push
mov
mov
test
int
in
sbb
scas
and
add
pop
lods
inc
mov
in
inc
jmp
mov
and
ret
adc
(bad)
and
aad
xchg
and
cmp
lahf
or
imul
mov
jmp
bound
fld
pop
pop
sbb
cmp
sub
xlat
cwde
mov
jle
mov
mov
stos
mov
lahf
cmc
dec
call
pop
jge
add
sbb
fcmove
pop
add
lods
sub
or
mov
int3
clc
push
stos
and
inc
ret
mov
mov
push
in
mov
pop
lods
inc
ja
add
add
movs
mov
mov
mov
xchg
cmps
int
(bad)
loopne
retf
cmc
imul
dec
add
adc
lods
push
ficomp
stc
iret
dec
mov
movs
pop
mov
enter
ret
lods
cmp
dec
mov
push
push
jno
adc
call
push
mov
cmc
sub
xchg
jno
in
or
popf
inc
fsubr
mov
dec
push
scas
jne
fcomp
xor
push
out
mov
(bad)
lods
and
mov
adc
pop
cli
test
xor
push
inc
sbb
pop
push
and
inc
pusha
cdq
es
jo
loop
dec
(bad)
pushf
in
cdq
mov
add
jnp
mov
test
and
pop
(bad)
push
and
or
and
sbb
mov
and
lahf
arpl
lahf
iret
rol
xchg
mov
stos
pop
stos
les
mul
or
fild
sub
js
mov
rcl
ror
dec
ds
pop
or
add
int
xor
xchg
pop
xchg
xchg
mov
push
mov
and
sub
pushf
dec
dec
dec
inc
ins
push
jnp
out
loopne
inc
adc
adc
sbb
adc
sahf
cmovb
pop
std
mov
popf
call
pop
mov
xor
aam
test
dec
jno
int
jo
pop
(bad)
popa
pop
int
sbb
mov
xchg
fiadd
arpl
hlt
dec
add
xchg
mov
jl
add
gs
jmp
retf
sub
and
mov
mov
outs
mov
sti
sub
mov
movs
std
mov
pop
jp
sub
mov
shl
mov
add
xor
push
push
pusha
je
jmp
in
enter
and
mov
rcl
test
cmc
xchg
popf
lahf
sbb
pop
pop
add
mov
mov
push
out
enter
pop
enter
imul
ss
mov
jns
sub
cmps
xchg
(bad)
push
pusha
scas
or
xor
sbb
mov
add
outs
push
sar
sub
pop
pop
add
repnz
adc
inc
js
adc
sbb
xor
mov
pop
movs
hlt
add
int3
push
out
cdq
lds
div
pop
cmc
cmp
test
push
scas
pop
mov
(bad)
jl
mov
add
jno
mov
mov
xchg
mov
mov
and
xor
push
outs
jle
inc
jo
rcr
dec
mov
push
jg
sbb
lock
adc
ret
addr16
inc
pop
xchg
jns
mov
stos
cmps
pop
sub
add
push
int3
cmp
sbb
dec
push
cmps
or
cli
cmp
aad
xchg
xor
dec
shl
jmp
shl
add
adc
arpl
(bad)
adc
jmp
into
popf
hlt
fdivr
jmp
movs
jno
test
mov
les
mov
out
sub
pop
rcl
cdq
or
out
cmps
sti
add
test
in
out
div
mov
in
sbb
xor
bnd
and
mov
ins
sar
mov
push
xchg
and
daa
int
(bad)
xchg
adc
pop
xlat
push
arpl
les
sub
ins
imul
and
push
adc
push
out
mov
mov
fld
ds
(bad)
adc
cmps
or
rcr
xor
repnz
lock
enter
sti
sub
push
xor
pop
loop
push
xrelease
fdiv
mov
jbe
std
jp
and
ret
movs
push
in
mov
jmp
pushf
ja
or
and
stos
push
iret
jae
ret
add
sub
xchg
inc
jae
sar
jg
mov
mov
push
sub
(bad)
cmp
mov
sbb
int3
fsqrt
cmp
mov
xchg
jbe
mov
add
sub
enter
stos
inc
jne
std
mov
repnz
daa
mov
cmp
jmp
sub
cmp
push
test
cs
add
test
loope
movs
push
mov
ins
pop
daa
fldenv
test
ror
add
(bad)
nop
popf
dec
adc
cmps
hlt
aam
sub
popf
fdivr
lahf
leave
mov
xor
call
pop
sbb
push
mov
ret
lds
cmps
inc
not
inc
cwde
jmp
xor
comiss
fst
int
xor
sbb
xor
push
cmp
add
push
inc
fisub
adc
xlat
mov
sbb
adc
add
and
sub
pop
inc
ds
inc
mov
jae
mov
sub
jl
add
mov
xor
jg
xchg
scas
ins
add
xor
neg
gs
shr
xor
cmps
jle
jmp
mov
pop
adc
pmulhuw
call
pop
add
popf
pop
icebp
push
movs
(bad)
push
mov
iret
movs
pop
mov
(bad)
mov
enter
rol
mov
sti
cmc
mov
xor
xor
mov
in
or
xchg
popf
push
xlat
cs
adc
daa
repz
jne
add
sub
popa
pusha
je
mov
div
cmc
jp
add
push
cmc
retf
aaa
clc
pop
sbb
inc
ins
mov
cwde
cwde
mov
mov
xchg
xchg
outs
outs
std
lds
dec
lods
pop
out
push
add
sub
xor
inc
popw
js
adc
sbb
xchg
xchg
pusha
lahf
inc
mov
adc
inc
mov
and
xor
jl
std
jl
mov
and
mov
rcr
inc
cmps
ins
xchg
mov
push
adc
test
add
nop
xchg
imul
cwde
xchg
jae
sbb
frstor
inc
(bad)
sbb
call
fisttp
add
mov
es
xchg
sbb
inc
hlt
lods
popf
xor
cld
addr16
sbb
das
jns
and
sbb
push
inc
or
sub
(bad)
(bad)
loop
in
out
sbb
pop
mov
retf
es
gs
aas
dec
adc
sub
mov
add
adc
cmp
add
mov
or
mov
addr16
or
mov
test
scas
mov
adc
pop
jo
sub
add
lods
in
mov
and
hlt
(bad)
mov
or
push
out
fisubr
adc
popa
pop
or
sub
ffreep
cmp
and
jmp
jns
in
dec
sbb
out
mov
fild
ja
sub
mov
lds
mov
inc
test
sbb
scas
fimul
aad
aam
mov
cmp
clc
xor
sbb
dec
(bad)
xchg
test
sbb
jae
jae
jne
repz
sbb
repnz
jmp
pop
push
adc
out
cwde
and
stos
xchg
imul
jg
cmp
push
jmp
pop
and
xor
ds
repnz
hlt
aam
lahf
sbb
ds
push
mov
enter
xor
aad
les
icebp
mov
outs
dec
or
test
cmp
mov
mov
(bad)
pop
das
(bad)
adc
lds
jecxz
pop
or
mov
dec
add
sub
retf
scas
test
cmp
lods
inc
test
add
add
out
fcmovne
lahf
mov
call
loop
js
loop
in
jp
retf
dec
cmp
mov
das
inc
cmp
lods
and
pop
shl
sbb
jl
outs
gs
and
ins
jae
jno
movs
fadd
sbb
cmp
(bad)
lahf
inc
or
or
jnp
push
jns
dec
dec
in
or
rol
(bad)
data16
pop
mov
xor
dec
sbb
dec
and
dec
dec
mov
adc
hlt
fucom
sbb
xchg
dec
int3
mov
imul
hlt
cmps
in
jmp
add
pop
xor
ja
inc
ss
add
dec
cdq
sbb
loop
mov
fstp
test
and
push
lods
shl
aas
nop
cmp
push
scas
loop
pop
test
call
cmp
cmp
cld
push
(bad)
fstp
sub
or
mov
adc
(bad)
adc
cmps
dec
call
sub
rcr
jp
(bad)
fcomp
xchg
push
ror
sti
cmps
add
xchg
sub
and
je
shl
cmp
cld
into
jle
out
fadd
sbb
and
ins
lock
std
sub
push
cmp
add
inc
mov
ror
jno
int
iret
push
push
sub
mov
adc
sbb
cmp
mov
aas
mov
adc
inc
pop
mul
out
mov
push
loopne
pop
and
and
stc
div
popf
and
inc
cmp
cli
test
les
test
cld
lea
mov
stc
out
mov
in
push
cmc
pop
lahf
cmps
jo
mov
int
pop
jae
push
hlt
test
mov
jl
cmp
and
push
mov
data16
mov
fsub
xchg
ins
nop
jnp
popa
jge
mov
mov
pop
imul
(bad)
jbe
stos
popa
(bad)
mov
das
sbb
mov
hlt
cmp
dec
push
fidivr
pop
and
fsubr
in
pushf
cmp
pop
mov
add
pusha
imul
push
je
aaa
add
into
xlat
push
push
adc
cmp
add
lods
jge
jno
xlat
pop
xor
add
stos
fst
call
cmps
lds
clc
bound
fisubr
fisubr
(bad)
js
jne
pop
xchg
xchg
pop
adc
aas
push
pop
imul
inc
sti
mov
loopne
cmp
fcomi
jmp
popf
adc
aam
jmp
or
lock
xor
jle
neg
in
retf
jne
mov
fsub
xchg
movs
out
push
or
xchg
mov
(bad)
cwde
jo
adc
pop
dec
push
jmp
pushf
jg
int
fdivr
mov
xchg
jge
mov
pop
iret
mov
or
jnp
or
ja
int3
jns
(bad)
mov
mov
inc
sub
addr16
lods
test
xchg
test
ins
scas
ds
fs
sbb
xchg
inc
add
lds
shr
push
popf
(bad)
xor
aas
jbe
mov
test
ins
mov
cmp
dec
scas
sbb
cwde
and
(bad)
das
dec
idiv
dec
sbb
lds
pushf
out
mov
movs
in
out
cmp
into
outs
push
jg
repz
in
inc
adc
add
out
or
and
retf
fnstsw
sti
push
mov
cdq
sbb
ins
popa
add
int
mov
jg
pop
sbb
push
lea
push
add
adc
sahf
dec
jb
inc
push
or
or
daa
ret
imul
loop
mov
scas
inc
push
mov
mov
xor
jbe
retf
xor
imul
cmps
push
(bad)
scas
mov
ret
jo
popf
scas
sbb
ret
sahf
jnp
jmp
je
add
pop
int3
test
cmp
adc
fcom
aad
and
(bad)
pushf
or
in
adc
test
mov
pusha
fistp
push
test
cmp
call
mov
test
(bad)
cld
pop
push
lea
arpl
mov
xchg
lods
mov
push
or
sbb
adc
addr16
mov
dec
sub
sub
adc
xlat
and
and
jp
int3
mov
xor
mov
retf
add
sbb
mov
std
ja
jg
adc
dec
mov
jae
in
ss
ins
test
and
pop
fld
mov
pusha
xchg
fild
or
xor
lahf
xor
and
adc
xor
out
dec
movs
pop
repnz
pop
fwait
outs
inc
lds
jge
call
aaa
retf
shr
aad
mov
mov
test
popf
lahf
xchg
mov
sbb
mov
sub
ds
mov
in
adc
pusha
or
jb
pop
xor
imul
cmp
aad
pop
push
fwait
mov
lahf
jbe
push
cdq
push
js
jmp
jo
in
sub
shl
imul
popf
rcr
sub
dec
inc
mov
fild
add
jo
loope
leave
adc
push
push
mov
cmp
lock
jno
cmp
outs
shr
stos
mov
fs
inc
and
cmc
xor
mov
lock
push
sar
xchg
mov
jno
pusha
mov
inc
fisubr
push
movs
pop
call
cmps
lock
and
mov
js
jbe
lss
je
call
push
mov
xchg
and
push
pop
mov
mov
sti
mov
mov
or
inc
sub
xchg
mov
(bad)
or
xchg
pop
sbb
push
pop
or
mov
sub
jbe
jb
pop
and
stos
daa
stos
setne
lock
das
fsub
jle
pop
adc
outs
add
add
and
add
add
mov
outs
lahf
sahf
and
jb
jmp
mov
cmp
mov
jns
xor
xchg
lea
jge
in
inc
and
sbb
cmps
fimul
in
leave
xchg
arpl
cmp
aaa
jb
or
in
imul
add
aad
dec
xor
sbb
fdivrp
dec
push
js
ret
xor
and
ins
fdivrp
push
int3
int3
in
std
lods
xor
repz
popa
call
out
jl
aam
jne
clc
fdiv
cmovnp
sbb
mov
loopne
cmp
sbb
call
pushf
mov
mov
inc
rcr
fsubr
push
int
sbb
mov
mov
jo
movs
fiadd
(bad)
xchg
outs
add
mov
icebp
mov
mov
(bad)
or
push
ror
inc
dec
xor
push
stos
(bad)
fld
je
mov
pop
mov
sub
arpl
add
jmp
mov
cmps
mov
jmp
mov
mov
push
dec
es
lock
inc
push
push
push
(bad)
loop
push
mov
push
jb
xor
adc
inc
jle
adc
leave
dec
lods
popa
int3
movs
(bad)
cmps
jmp
stos
lds
xlat
push
cs
sbb
ror
out
retf
jl
push
gs
add
shr
sbb
into
dec
mov
in
js
mov
mov
jae
fmul
jle
test
out
test
cmc
int3
adc
jo
outs
push
inc
fidivr
rcl
jle
inc
dec
dec
or
push
xchg
adc
inc
fwait
and
test
jns
xor
bound
rcr
jg
push
jnp
shl
loopne
js
adc
ret
or
mov
sbb
repz
test
sub
ret
push
and
in
jg
cs
fbstp
outs
pop
xchg
pop
dec
sub
test
lds
cdq
xchg
cmp
pop
out
mov
or
push
out
xor
cmp
dec
dec
push
jae
repz
stc
nop
fstp
jno
cmc
mov
inc
ins
xor
test
push
xchg
aas
(bad)
in
call
scas
loopne
mov
push
and
and
jmp
mov
mov
pushf
inc
fisttp
ret
movs
fnstcw
mov
xor
adc
pop
xor
outs
das
rol
gs
dec
inc
(bad)
out
out
pop
fcmovnu
mov
jmp
inc
jge
push
dec
adc
in
fisub
adc
sbb
xchg
bound
imul
inc
aad
cs
mov
push
cdq
sub
call
clc
(bad)
scas
test
cld
jecxz
add
(bad)
aam
int3
es
les
xchg
in
jbe
cmp
int3
arpl
aaa
pop
sbb
call
cdq
push
jnp
push
bound
sbb
xor
std
sti
mov
call
pusha
stos
jb
xchg
loopne
adc
adc
mov
ins
ret
cld
and
fdivrp
fs
push
adc
adc
les
inc
pushf
stc
cwde
push
dec
retf
dec
ins
push
retf
or
and
fwait
mov
gs
xlat
or
push
mov
ja
(bad)
idiv
cdq
enter
ret
sbb
mov
pop
xchg
or
jecxz
test
or
test
xor
jno
nop
cmp
mov
cmp
and
adc
add
jmp
data16
mov
scas
fst
sbb
sbb
rcr
ins
and
aaa
sbb
add
adc
faddp
push
push
mov
out
sub
aam
das
in
add
in
jbe
test
sub
cmp
mov
xor
sbb
aaa
js
lock
and
(bad)
sbb
xor
cli
xchg
mov
dec
pop
adc
test
pop
mov
lea
(bad)
jns
addr16
and
pop
out
ja
adc
xchg
hlt
shl
sbb
mov
or
nop
dec
mov
es
nop
mov
test
sub
ret
add
jge
inc
imul
xchg
fwait
xlat
inc
sbb
add
mov
cdq
sbb
push
ds
call
pop
pop
ror
aaa
mov
or
out
inc
call
loop
fucomip
retf
cmp
add
mov
push
ret
xor
aam
pop
(bad)
pop
in
fadd
aad
out
dec
outs
out
mov
xchg
xchg
dec
adc
nop
mov
loope
call
mov
inc
aas
out
addr16
pushf
sbb
stc
movs
ror
icebp
out
lock
add
jb
int3
jge
mov
dec
xchg
mov
jne
jb
sbb
aas
pushaw
lock
or
sbb
inc
adc
in
repz
xlat
push
fisttp
in
daa
shrd
daa
in
call
shl
push
scas
ins
loope
push
cmp
add
ss
(bad)
mov
pop
cmp
lds
jnp
(bad)
xor
sub
mov
ins
mov
push
pop
adc
xchg
add
out
push
push
pop
cs
pop
test
repnz
fnstsw
mov
ret
je
adc
xchg
push
shl
sbb
push
xchg
mov
xchg
repz
lahf
cld
ret
ins
mov
les
clc
sub
out
mov
repnz
jmp
cmp
scas
xchg
xlat
dec
inc
sbb
cli
xchg
pop
mov
int3
cmp
shl
mov
(bad)
fsubp
xor
sbb
addr16
into
lods
repnz
xchg
aam
xchg
xor
add
add
out
sti
mov
aam
jae
xchg
mov
xor
int3
test
jmp
sbb
pop
inc
and
push
or
mov
repnz
and
or
sbb
jae
xchg
lahf
push
sbb
jns
xchg
popf
stos
adc
adc
rcl
dec
xrelease
popf
out
xchg
add
daa
imul
sbb
fiadd
int3
leave
dec
test
dec
sub
push
mov
push
xor
push
or
popw
pop
in
add
int3
xor
push
inc
adc
popa
sbb
aad
push
push
std
dec
push
test
dec
data16
int
out
dec
in
cli
or
shr
lods
jae
scas
je
lds
retf
pop
sbb
mov
pop
and
cld
add
mov
ins
pop
pmullw
cwde
pushf
mov
enter
pusha
add
xor
lods
cmp
std
add
inc
aas
sub
or
stos
or
mov
adc
aas
aam
loope
and
rcr
nop
jmp
movs
call
test
sbb
call
jns
test
push
aaa
fisttp
std
retf
fst
outs
repnz
xor
sub
xlat
pop
js
add
add
push
in
or
out
addr16
into
sub
cli
or
sti
hlt
scas
mov
push
out
(bad)
mov
jge
xchg
push
jns
lods
dec
test
popa
cmp
test
aaa
mov
in
jbe
retf
push
test
push
shr
fmul
inc
rol
jmp
rcr
ret
jno
fst
fucomp
sub
cli
es
sbb
add
rcr
push
repnz
repz
fucomp
das
mov
cmp
xchg
jmp
mov
dec
mov
xchg
call
cmc
in
pop
mov
lods
imul
je
bound
fsub
(bad)
sbb
jmp
div
pop
popf
inc
scas
sahf
std
out
stos
inc
xchg
out
cmps
dec
push
push
stos
in
jg
xchg
lock
into
push
rcl
xchg
out
dec
popa
shl
pusha
int
and
outs
arpl
xor
(bad)
fldenv
inc
imul
fist
test
pop
sub
mov
cwde
inc
nop
repz
sbb
push
mov
or
cld
jmp
rol
cmp
fldenv
test
push
fs
push
jae
bound
xchg
out
sahf
mov
lods
inc
jnp
adc
or
jnp
das
(bad)
imul
mov
cli
dec
dec
sub
cli
fadd
pop
mov
xlat
outs
je
add
fadd
in
mov
mov
jmp
pop
push
stos
inc
retf
aaa
jge
add
and
or
in
cmp
cdq
push
lock
inc
outs
repnz
add
aad
dec
add
mov
aam
xchg
fsubr
jle
mov
je
out
fnsave
jmp
call
jge
xor
cmps
mov
aaa
and
push
fdivr
xchg
mov
mov
dec
mov
xor
mov
mov
pop
cli
jge
and
mov
mov
(bad)
and
aam
retf
push
arpl
push
mov
push
pop
loopne
or
sbb
dec
ins
sub
xchg
pop
adc
sub
cld
adc
jb
mov
imul
stc
xor
add
test
(bad)
xchg
mov
push
and
fsub
jg
pop
bound
xor
pop
ud1
sbb
push
xchg
cmps
jnp
mov
mov
pop
jb
call
xchg
aam
xchg
jo
cmps
sbb
outs
dec
shl
and
xchg
test
ftst
lods
xor
push
dec
inc
cli
mul
and
push
sub
lock
das
jmp
and
mov
lea
gs
out
cli
pushf
test
ins
push
adc
fpatan
jmp
es
xchg
rcr
arpl
test
mov
dec
fdiv
stc
xchg
jp
mul
(bad)
popf
sbb
or
test
sbb
inc
pop
mov
pop
aam
jl
pop
pop
leave
xchg
jle
jns
dec
cmp
nop
aaa
push
stos
fstp
mov
ins
or
add
xchg
in
or
movs
loopne
aad
sbb
cmps
daa
inc
ror
and
shr
cmp
pop
xchg
xlat
mov
jne
push
pop
and
aam
inc
ja
(bad)
call
popf
aas
fld
push
push
push
retf
in
jge
xchg
add
fisub
scas
xor
ja
mov
mov
pop
(bad)
sub
ret
(bad)
setae
cmps
or
push
sub
pop
cmps
(bad)
sti
jge
mov
(bad)
in
jge
sahf
jno
inc
and
mov
in
jae
xor
jbe
(bad)
mov
inc
xor
out
xor
leave
mov
push
sahf
jle
pop
test
pushf
mov
xchg
stos
addr16
iret
sbb
sbb
sti
aaa
out
inc
ret
leave
mov
add
mov
jo
out
in
sub
adc
fwait
dec
retf
cmps
outs
mov
mov
mov
mul
pop
jmp
xchg
test
cmp
or
sbb
fild
push
neg
lock
mov
fdiv
pop
adc
sub
xchg
lahf
or
push
mov
stc
mov
sub
mov
pop
loope
movs
out
outs
inc
out
leave
xchg
jne
or
sbb
jnp
jno
cmps
jno
mov
jne
inc
xor
mov
push
cmp
fistp
aad
jae
ds
inc
push
je
and
cmps
and
nop
push
std
imul
stc
mov
and
fmul
dec
addr16
xchg
sbb
jae
jo
jae
push
sbb
inc
pop
out
leave
dec
jmp
retf
fdivr
jle
(bad)
ins
adc
(bad)
mov
into
mov
jno
adc
adc
popa
adc
ret
repnz
xchg
out
sar
aad
sub
repnz
and
(bad)
jno
mov
or
leave
fisubr
cmp
sbb
inc
scas
jbe
test
cmps
xchg
repz
es
inc
or
(bad)
sub
pop
dec
test
mov
mov
sbb
dec
imul
loope
pop
(bad)
in
pop
mov
mov
jl
mov
ss
push
arpl
mov
(bad)
aaa
mov
sub
sbb
or
xor
in
ins
aam
xchg
test
pop
push
out
mov
sub
cmp
mov
loop
add
inc
inc
(bad)
xor
jmp
add
xlat
mov
xor
cld
leave
out
mov
inc
and
ins
retf
jge
(bad)
aaa
fwait
sbb
test
mov
(bad)
int
xor
lahf
clc
push
pusha
mov
and
adc
scas
fmul
inc
jne
(bad)
cli
mov
test
in
test
inc
or
mov
mov
inc
ins
mov
add
xchg
imul
and
daa
pusha
call
loop
ja
mov
jnp
sahf
push
repz
je
dec
(bad)
loopne
in
jle
sub
int
(bad)
jno
mov
bound
out
xchg
inc
mov
xor
xchg
pop
out
mov
int
xchg
pusha
in
xchg
xchg
mov
test
lods
mov
add
test
ja
ret
pop
pop
inc
mov
jb
xor
daa
sbb
jl
leave
xchg
sub
(bad)
fdivrp
lahf
pop
pop
scas
mov
xor
add
in
mov
add
test
dec
pop
inc
mov
leave
xchg
sub
push
jp
inc
std
sub
nop
ret
repz
je
dec
push
test
sbb
ret
xchg
mov
nop
adc
cmps
test
jmp
ret
mov
push
iret
aas
xchg
in
iret
inc
addr16
xor
xchg
inc
jge
add
out
dec
xchg
lock
popa
mov
leave
sbb
xor
scas
mov
mov
aam
and
aam
pop
call
sti
gs
loopne
enter
in
les
push
sbb
cmps
hlt
xor
std
jo
sbb
adc
jne
mov
(bad)
lahf
ins
sub
(bad)
mov
dec
adc
mov
pop
outs
not
je
outs
mov
jl
sbb
enter
xchg
inc
and
shl
mov
in
sahf
inc
jg
ss
out
sub
pop
test
rol
sbb
leave
repz
push
jmp
jl
arpl
fnstcw
aaa
cmps
add
std
or
test
push
shr
push
pop
or
pop
(bad)
rcr
xchg
xchg
inc
cs
xchg
mov
(bad)
xor
aaa
sub
and
ds
out
mov
push
mov
mov
xchg
fidiv
retf
fdiv
jno
adc
je
pop
sbb
lock
fbld
add
push
lahf
(bad)
mov
lahf
pop
inc
mov
stc
pop
ret
cdq
cmp
cmp
xchg
pop
jg
add
popa
push
scas
xchg
shl
cmp
std
adc
dec
in
cmps
push
xchg
mov
mov
jne
aam
push
fdiv
daa
xchg
ja
out
aas
xchg
clc
cmp
mov
call
xor
fnstsw
(bad)
mul
ds
pop
and
xor
(bad)
sub
aaa
dec
inc
push
scas
pusha
jmp
ficom
ret
adc
inc
add
test
retf
push
bound
ins
dec
fwait
jecxz
sub
fsubr
ins
(bad)
fdiv
scas
movs
mov
fcomi
or
jp
pop
cdq
xor
mov
xchg
sti
lods
dec
(bad)
loopne
sbb
rcr
sub
xlat
repnz
xchg
add
dec
in
icebp
stos
nop
fild
jle
pop
sbb
pop
inc
fisubr
inc
add
outs
lods
sub
pop
jae
movs
mov
inc
dec
inc
fs
adc
and
jg
movs
and
fldcw
ret
push
shr
mov
jle
inc
(bad)
ficom
mov
jmp
and
mov
xchg
inc
data16
sbb
add
push
pop
cmps
sub
in
and
mov
jg
cmp
ja
push
adc
cld
ds
or
pop
mov
or
inc
push
dec
pop
ins
push
mov
dec
ins
cmp
addr16
xor
cmp
add
inc
daa
dec
sbb
pop
shr
inc
mov
xchg
jle
out
retf
aad
out
mov
dec
sub
push
pop
scas
and
pop
shr
cmp
stos
cdq
(bad)
out
cli
or
gs
(bad)
adc
jg
sbb
ins
je
adc
xor
in
enter
pop
jmp
stos
hlt
rcr
mov
inc
into
cli
outs
add
je
add
mov
loope
sbb
imul
jnp
push
fs
xor
push
iret
loop
retf
or
mov
adc
xchg
xor
mov
dec
dec
fs
es
add
cli
dec
data16
pop
test
pop
push
push
movs
int3
imul
stos
mov
stc
sub
lods
(bad)
repnz
hlt
pop
and
ins
(bad)
push
sar
sub
fnstsw
aaa
or
pop
and
cmp
movs
sti
adc
xchg
lock
cmc
mov
(bad)
cld
or
add
mov
and
(bad)
(bad)
in
arpl
repz
(bad)
or
fcmovnbe
out
jbe
sbb
jo
lods
mov
int
mov
repnz
and
jmp
push
out
and
jo
pop
ss
jbe
fidivr
dec
push
(bad)
pusha
cmps
aas
mov
ret
jne
or
sbb
and
outs
or
or
shl
hlt
pop
loop
inc
ret
xor
jmp
cmp
pop
cmp
pushf
rcl
xlat
sbb
rol
fbstp
pop
inc
xor
mov
mov
add
ffree
retf
outs
inc
inc
jb
adc
xchg
inc
movs
cld
into
adc
(bad)
dec
pop
pop
test
mov
cli
add
jge
pop
cs
fisub
repz
jbe
imul
aad
sti
in
add
rcr
scas
imul
add
push
lock
outs
std
adc
adc
mov
jno
por
dec
ds
je
jmp
cwde
out
(bad)
or
dec
div
dec
add
mov
retf
les
mov
jmp
cmp
stos
bound
popa
arpl
push
xchg
push
int
fsub
pop
jnp
pop
sub
sahf
enter
cmp
out
pop
mov
ins
rcr
and
hlt
pop
mov
and
cli
hlt
test
push
in
sbb
xchg
sahf
dec
icebp
sar
fst
jl
in
xchg
inc
aad
nop
or
nop
push
push
addr16
cmc
jno
sbb
loop
fnsave
out
dec
mov
add
push
pop
outs
inc
cmp
arpl
dec
imul
push
inc
hlt
popa
leave
mov
loopne
pop
int3
in
add
push
mov
(bad)
jge
test
(bad)
adc
push
sub
loopne
cmp
repnz
fadd
jmp
sub
std
js
mov
jle
pop
pop
jnp
and
lea
addr16
pushf
shl
mov
and
xchg
std
push
jbe
sub
inc
push
add
jmp
aaa
pop
(bad)
push
js
dec
mov
jl
adc
ret
inc
jmp
aad
xor
jae
pop
sbb
aaa
cmp
push
add
jmp
xchg
std
ins
das
push
mov
or
cwde
mov
imul
fstp
into
loop
repz
xor
icebp
sbb
lods
mov
inc
movs
cmp
cmp
sub
push
xchg
jmp
je
dec
inc
call
mov
mov
and
hlt
pop
adc
mov
movs
in
mov
jo
mov
mov
idiv
jp
fnstsw
dec
jmp
jmp
retf
and
jae
je
pop
xor
dec
jmp
and
data16
ja
or
mov
inc
and
or
xor
mov
pusha
sub
nop
or
cmps
dec
fimul
retf
jmp
retf
arpl
xor
jmp
mov
iret
movs
xchg
pop
in
ins
cli
add
push
test
dec
dec
cmp
xchg
and
(bad)
into
adc
nop
(bad)
retf
adc
mov
cmps
xchg
movs
cmp
jg
icebp
inc
xor
dec
sahf
mov
jle
pop
jo
call
cmp
mov
repnz
pushf
cmc
xchg
xor
pop
icebp
cwde
fs
jb
mov
(bad)
dec
lea
pop
push
xchg
mov
cwde
imul
mov
addr16
pop
jmp
les
scas
jae
sbb
mov
fidivr
jp
xchg
jmp
call
mov
jmp
gs
fild
adc
sub
jle
inc
pop
pop
adc
jg
pushf
jmp
pop
sub
lahf
pop
dec
dec
cmps
ins
add
dec
push
cmps
out
pop
int
into
cli
pop
lea
mov
loop
inc
dec
leave
stos
jmp
lahf
inc
ret
mov
aaa
call
in
pop
add
out
cdq
adc
aad
or
clc
dec
xor
pop
clc
pop
push
fwait
lds
pop
dec
xor
adc
enter
stos
addr16
adc
sti
das
in
cmp
or
pop
mov
aaa
jnp
and
das
mov
and
pop
adc
adc
je
iret
pop
cdq
ins
xchg
das
adc
mov
jne
or
push
cli
mov
mov
cmp
jbe
fwait
or
retf
sbb
enter
xchg
dec
cdq
add
xchg
clc
fst
and
je
jl
imul
lea
push
das
cld
jno
xor
clc
or
das
push
pop
add
fld
test
rcl
mov
aas
xor
aad
in
xor
sar
cmp
pop
(bad)
enter
push
aas
stos
les
mov
pop
aaa
xor
pop
push
faddp
xor
sbb
push
sub
adc
int
jns
out
cli
ret
push
inc
jmp
mov
mov
jae
(bad)
xlat
pop
xor
lahf
mov
xchg
lock
test
pop
rcl
sbb
ret
xor
test
mov
es
iret
dec
inc
sbb
fadd
xchg
popa
sub
cwde
int
add
sahf
push
adc
dec
fwait
mov
mov
adc
pop
aam
adc
push
out
push
ins
lods
jmp
mov
cmps
xor
call
jo
adc
mov
dec
pop
xchg
mov
out
mov
clc
adc
push
push
push
ins
mov
cmps
in
mov
mov
adc
outs
repnz
cmp
(bad)
js
mov
cmps
jge
jno
xor
lods
sbb
jp
xor
mov
jl
inc
sbb
arpl
daa
pop
sbb
dec
repz
push
test
pop
imul
adc
std
xchg
out
adc
jbe
das
mov
stos
jmp
pop
(bad)
cmc
jne
cmp
or
or
rcr
lods
ins
pusha
inc
out
mov
lock
and
repnz
or
(bad)
jns
fistp
enter
dec
mov
nop
xlat
mov
or
fwait
mov
push
jl
mov
cmp
gs
xor
inc
push
cs
scas
(bad)
fisttp
sbb
movs
mov
sub
test
adc
mov
js
cmp
int
repnz
mov
inc
jmp
dec
jns
sub
adc
cmp
add
adc
cmps
mov
pushf
in
stos
movs
push
bound
leave
fisttp
jl
dec
or
popf
and
clc
jnp
loopne
fsubr
jns
jmp
outs
cmp
mov
sub
adc
and
(bad)
inc
dec
loop
sbb
sbb
inc
xchg
jge
or
sub
or
fsub
addr16
cmp
out
sbb
test
scas
jnp
inc
scas
dec
(bad)
cmc
dec
sahf
inc
aaa
push
call
shl
(bad)
xchg
in
sub
mov
mov
fwait
cmp
xchg
js
xchg
jg
daa
outs
dec
cdq
ins
sub
stos
sahf
jns
outs
and
jmp
xchg
(bad)
sbb
(bad)
(bad)
gs
imul
mov
sar
scas
push
cdq
cli
sbb
stos
lock
jne
cmps
addr16
enter
or
neg
push
pop
(bad)
std
je
ins
xchg
les
dec
sbb
mov
push
leave
mov
cld
out
retf
movs
dec
adc
popf
retf
sub
pushf
ret
fs
je
addr16
jge
rol
ins
es
mov
je
sub
je
shr
xor
or
lods
mov
sub
inc
push
in
mov
scas
jno
adc
call
cld
lock
adc
ret
(bad)
jne
mov
pusha
xor
iret
jmp
dec
add
xor
adc
and
out
fs
adc
inc
mov
std
dec
arpl
mov
inc
sbb
scas
enter
or
xor
xchg
dec
outs
stos
retf
stos
stos
pop
xchg
sar
or
add
add
(bad)
sti
ror
adc
ds
push
adc
(bad)
movs
sbb
in
mov
loop
xchg
movs
scas
les
push
pop
mov
aad
jb
lahf
cmp
pop
push
lock
leave
pop
rol
jnp
jbe
push
repnz
je
add
jp
jnp
test
clc
(bad)
add
inc
add
inc
pusha
push
lahf
and
aam
sbb
cmp
(bad)
out
mov
imul
mov
sbb
pop
adc
arpl
add
xor
jae
and
add
adc
add
sbb
scas
push
daa
std
sub
xor
retf
push
dec
push
mov
adc
pop
hlt
xchg
into
sub
add
popf
mov
iret
imul
das
jo
push
or
jo
push
and
aam
ss
sbb
xor
jmp
imul
mov
in
out
in
push
cli
ret
(bad)
jne
adc
push
cmp
mov
movs
aad
neg
dec
mov
push
test
ficomp
push
retf
sub
addr16
push
sub
outs
mov
jno
cs
xchg
rol
retf
cmp
out
jno
jmp
fiadd
stos
mov
pop
xor
adc
movs
popa
jg
or
sti
aas
shr
in
and
xlat
or
dec
pop
lock
sbb
sub
adc
jbe
xchg
jns
ror
sahf
ror
lea
jmp
pop
jno
push
mov
pop
push
or
retf
cmp
mov
sbb
stos
xor
xlat
adc
scas
fcom
bound
popa
xlat
out
addr16
dec
scas
add
imul
pop
sbb
add
xlat
(bad)
in
jo
pop
mov
xor
fdivrp
pusha
(bad)
push
aas
imul
xchg
or
and
shl
(bad)
sbb
sbb
or
(bad)
jmp
xchg
mov
aad
xchg
nop
mov
xor
mov
jge
dec
cdq
(bad)
imul
ds
rcr
movs
cld
push
pop
popa
in
inc
clc
scas
mov
jg
pop
sbb
push
xlat
dec
(bad)
gs
dec
loop
sbb
ret
or
jle
jle
dec
cld
mov
imul
xor
call
sti
lods
js
cwde
mov
xor
jne
and
in
cmps
mov
mov
add
ficomp
sub
add
fbstp
mov
mov
clc
imul
sub
push
sub
jnp
in
mov
(bad)
leave
icebp
or
push
or
jo
lahf
mov
pop
pop
loope
pusha
mov
xor
pop
cli
pop
das
push
pusha
mov
repnz
cmps
jne
mov
dec
in
and
rol
sbb
cmp
fbstp
lock
sbb
rcl
loopne
and
and
ins
neg
and
stc
lahf
fisubr
mov
outs
ins
push
push
dec
jb
mov
ret
add
xor
mov
pop
enter
add
mov
lds
popf
inc
mov
push
push
out
ret
mov
popf
loop
imul
clc
sub
out
mov
pop
jle
jne
(bad)
popa
bound
hlt
xlat
adc
movs
add
lds
pop
push
into
int3
adc
dec
push
or
cs
shl
lahf
sub
loop
not
pop
jns
dec
out
dec
inc
jnp
int
out
stos
aad
into
sysenter
sub
in
mov
sbb
dec
pop
xchg
push
stos
nop
loop
mov
jnp
jbe
pop
xchg
stc
shl
imul
jl
xchg
aad
sub
cmp
mov
xchg
nop
sub
scas
adc
ret
cmp
inc
aas
aad
leave
je
test
mov
pop
pop
adc
jae
loopne
lea
adc
outs
loop
hlt
fistp
sub
(bad)
in
cdq
inc
sahf
mov
daa
inc
rcl
mul
adc
and
aam
mov
dec
jo
xchg
out
mov
test
xor
div
movs
add
cld
inc
or
cmp
adc
adc
inc
pop
push
call
test
mov
adc
scas
jl
aaa
lahf
pop
call
pop
dec
push
addr16
mov
inc
call
jp
xchg
retf
ds
aaa
fstp
lods
mov
inc
das
mov
push
movs
cdq
xchg
xor
cvtdq2ps
cld
sub
(bad)
mov
out
hlt
mov
imul
cdq
push
movs
jns
int
mov
pop
mov
push
jle
adc
cmp
inc
cmp
lock
cld
and
icebp
outs
pop
sub
jne
push
mov
mov
xchg
hlt
test
pop
xor
iret
pop
cmps
adc
xor
es
sub
aam
jmp
sti
dec
mov
push
push
jecxz
cmc
fisttp
jmp
inc
repnz
out
or
xchg
and
stos
adc
jmp
cli
jl
jl
out
push
sbb
es
xchg
add
shl
mov
int
mov
out
jecxz
test
icebp
repz
mov
aaa
rcr
inc
bound
movs
test
sbb
push
daa
and
lahf
add
(bad)
aad
pusha
jmp
in
or
jmp
std
jo
(bad)
sub
pusha
jne
adc
leave
gs
pop
sub
sub
mov
daa
mov
pop
mov
movs
(bad)
cmps
push
mov
jmp
bound
dec
sub
jle
xor
repnz
adc
(bad)
mov
outs
leave
or
mov
mov
xchg
cmp
std
xchg
std
xchg
dec
fldenv
and
ins
test
int3
xlat
cmp
setnp
aam
lds
add
das
mov
ja
out
adc
adc
adc
js
in
push
call
inc
or
stos
and
cmc
jmp
dec
gs
das
adc
pop
or
pop
sbb
movs
nop
mov
ds
loop
(bad)
(bad)
sbb
ja
scas
test
sub
add
xor
xor
mov
mov
iret
mov
iret
xchg
fsubr
bound
call
fisubr
repnz
sti
fidivr
xor
pop
xchg
dec
aad
mov
or
pop
add
mov
jle
ror
hlt
jne
test
mov
push
es
imul
cmp
push
add
rcl
jns
and
jno
or
mov
pop
or
xchg
scas
push
bound
mov
sub
mov
mov
hlt
sub
shl
fsubr
div
mov
(bad)
sub
jne
mov
xchg
mov
cmps
test
xor
push
jle
and
fdivr
inc
sub
mov
dec
out
mov
pop
adc
mov
daa
cmp
inc
enter
cs
mov
loope
dec
ins
sbb
or
push
push
ret
test
je
out
cmps
jmp
push
shl
push
mov
cmp
xlat
xchg
pop
in
inc
popf
pop
push
call
pop
and
xor
jno
mov
sbb
movs
adc
int
inc
fbstp
mov
xchg
mov
fucom
and
aas
adc
sti
lahf
ins
ret
sub
or
call
jbe
or
outs
call
jle
add
or
or
cdq
inc
cmp
arpl
sub
xor
push
xchg
outs
or
test
movs
into
lds
repz
jbe
aaa
sbb
sbb
mov
mov
sub
lods
retf
xchg
sbb
es
fs
and
dec
fbld
sbb
retf
mov
sub
nop
fcmovnbe
(bad)
and
out
mov
shl
aam
scas
xor
lahf
or
imul
and
retf
xchg
push
lea
push
shr
pusha
loop
mov
pop
cmps
test
pop
add
div
mov
sub
popf
ror
pop
cld
mov
lods
adc
adc
or
sub
mov
jns
idiv
js
clc
or
push
fist
push
repz
add
fcomp
mov
fldenv
inc
dec
test
push
push
(bad)
xlat
xor
pop
das
sbb
cmp
or
out
add
sbb
jb
cmp
ins
stos
push
popa
imul
(bad)
in
mov
cli
std
popa
mov
outs
sub
idiv
out
jg
mov
push
push
dec
ret
ins
in
mov
mov
(bad)
pop
ret
repnz
sub
jb
pop
ficom
cli
sti
dec
les
outs
mov
mov
inc
jae
push
mov
ja
int
jbe
rcl
shl
mov
aas
pop
ror
iret
dec
in
nop
fadd
mov
and
(bad)
movs
jne
inc
outs
aas
and
cld
jp
and
add
mov
jmp
call
inc
sub
fdiv
loop
mov
js
push
inc
(bad)
fbstp
retf
and
and
ja
test
cmp
push
pop
add
and
sar
(bad)
adc
inc
sub
cmp
inc
inc
xchg
outs
xor
mov
jo
pmaxsw
adc
ins
js
in
cmc
lods
nop
add
pop
add
rcr
aad
ins
adc
mov
mov
mov
pop
add
loopne
cmp
xchg
stc
mov
pop
inc
test
fmul
xchg
shr
mov
or
xchg
push
cli
add
enter
(bad)
in
and
mov
mov
in
arpl
icebp
jae
loop
mov
test
mov
inc
pop
push
add
mov
shr
adc
cmp
or
mov
sub
iret
xchg
mov
fisttp
popa
ret
xchg
jbe
imul
cmc
or
fisubr
ins
xchg
or
xchg
inc
mov
mov
ror
sar
push
leave
sub
sti
inc
xchg
push
fxch
xchg
not
xchg
inc
je
adc
enter
jb
mov
daa
or
mov
aaa
sar
inc
dec
repnz
push
ret
imul
add
pusha
cs
inc
inc
(bad)
pop
pop
xor
and
and
test
pop
inc
add
lock
pop
sbb
or
mov
xchg
jo
sbb
inc
xor
lds
lods
mov
lods
mov
sahf
xchg
(bad)
mov
lods
push
dec
test
mov
shl
imul
inc
mov
sbb
test
or
jp
or
jns
mov
arpl
pop
mov
xlat
stc
push
jb
push
out
lods
fsubr
jmp
cs
sti
mov
mov
leave
cmp
sar
outs
mov
leave
pop
jge
adc
neg
push
or
add
dec
sbb
or
arpl
jns
inc
mov
sahf
jmp
jl
xchg
cmc
je
pop
or
daa
test
cmp
fxch
push
push
in
adc
xchg
add
popf
mov
push
xchg
push
jo
fst
test
mov
(bad)
jle
dec
loope
mov
hlt
add
cwde
xor
or
punpckhbw
cmp
scas
sub
fnstsw
dec
inc
adc
test
cmp
sub
test
sub
adc
push
(bad)
loopne
dec
add
adc
(bad)
cli
fst
fwait
xor
(bad)
or
push
retf
or
jo
push
or
jne
fnsave
out
pop
pusha
xchg
hlt
stc
shl
xchg
xchg
shl
push
out
xchg
cld
xor
enter
or
imul
add
fwait
inc
xchg
xchg
xchg
add
retf
nop
jmp
or
mov
lock
imul
xchg
xor
das
and
mov
cvtps2pi
jno
hlt
mov
xchg
adc
push
adc
inc
mov
push
mov
pop
add
jmp
sti
iret
mov
or
push
push
jl
jns
push
xor
jns
jmp
sub
(bad)
(bad)
cdq
jmp
ss
cmp
inc
test
neg
lds
mov
xor
clc
and
xor
idiv
mov
pop
xchg
mov
(bad)
cmc
mov
cdq
retf
pop
dec
xchg
or
dec
cmp
ins
test
add
xlat
das
repz
ins
mov
cs
mov
js
push
xchg
pop
dec
les
fistp
xchg
repnz
sahf
pop
shr
push
sub
out
hlt
xchg
add
imul
ins
mov
in
scas
enter
jne
inc
sbb
shl
leave
mov
imul
xor
addr16
dec
xchg
mov
lock
adc
jl
es
push
(bad)
add
call
and
dec
test
inc
sahf
fst
ret
inc
inc
fidiv
xor
add
test
fdivr
enter
mov
stc
cs
fnsave
xchg
mov
dec
xchg
push
(bad)
xor
jle
mov
xchg
test
or
adc
push
pop
jnp
lahf
add
call
pop
retf
test
mov
add
or
das
aaa
inc
add
xor
pop
jo
xchg
pop
sti
clc
into
stos
ins
out
not
cmp
loope
adc
mov
out
rcr
fcom
jno
jno
pop
jp
and
loop
outs
mov
sti
lock
jmp
pop
js
cmc
pop
jne
and
jbe
jmp
int3
jge
push
sbb
mov
adc
ds
mov
mov
sahf
sahf
popf
lods
mov
rcr
jmp
outs
or
dec
arpl
sub
inc
xchg
popf
push
test
shl
adc
dec
adc
jne
add
scas
sub
addr16
xchg
jl
in
and
(bad)
xor
inc
scas
in
inc
fs
cmp
xchg
push
sar
cmp
and
mov
mov
shr
mov
daa
mov
dec
dec
stos
mov
and
outs
mov
add
out
push
int
pop
repnz
stc
ins
icebp
xlat
loopne
xchg
push
inc
sub
xchg
inc
fisttp
mov
loop
jo
cdq
add
ficomp
cs
jmp
cmp
add
jle
jle
mov
lods
and
mov
adc
adc
arpl
jg
add
jmp
xor
je
xchg
out
inc
lods
sti
mov
retf
(bad)
hlt
mov
jnp
cmp
pop
outs
adc
popa
cwde
or
mov
arpl
adc
sub
pop
jno
adc
and
icebp
jmp
gs
adc
mov
adc
loopne
jae
das
rcr
dec
xor
add
out
xchg
popf
mov
aaa
adc
repz
sbb
jle
dec
icebp
(bad)
xor
pop
fldenv
sub
popa
jmp
test
pop
dec
and
mov
or
sbb
test
push
cmp
pop
popa
outs
or
push
mov
nop
jne
mov
xchg
mov
imul
bound
sbb
lods
out
ins
jmp
dec
imul
test
fimul
loop
mov
xor
pusha
(bad)
repnz
mov
into
add
push
cwde
movs
retf
push
push
xchg
cdq
cdq
imul
sbb
cli
pop
xchg
jbe
cmp
mov
mov
ins
adc
and
in
shl
into
mov
test
pop
inc
sbb
in
(bad)
jne
cmp
out
adc
clc
mov
sub
dec
cdq
mov
jmp
xchg
mov
sti
bswap
inc
xor
es
jns
mov
aam
adc
and
mov
retf
xlat
push
repnz
mov
cwde
xchg
sar
in
cmp
cmc
cdq
addr16
xchg
pop
push
jne
add
in
and
push
outs
add
pop
int3
ss
cs
rcl
jecxz
inc
retf
stc
inc
pop
fsubr
inc
cli
cmps
mov
adc
or
lds
fsubr
shl
jecxz
xor
jns
hlt
test
sub
outs
inc
sbb
push
cmc
fdiv
fsub
scas
aad
and
in
aad
fucomip
cmp
sub
imul
loopne
mov
adc
fcmovne
lods
mov
jg
jle
pop
sub
retf
fld
pshufw
sbb
icebp
cmc
lds
sbb
add
mov
ret
pop
daa
xchg
or
inc
push
add
sbb
add
inc
or
retf
adc
cmp
xor
ds
nop
jl
xor
lods
mov
pop
stos
jae
pop
ror
dec
jp
or
scas
mov
push
pop
push
repz
popf
retf
inc
stos
retf
jb
mov
mov
in
jno
mov
mov
ins
arpl
pop
dec
pop
xor
adc
dec
hlt
nop
cs
sbb
aas
inc
daa
arpl
or
in
jmp
ja
imul
dec
mov
rol
call
mul
sbb
add
dec
hlt
dec
inc
jae
ja
in
ins
in
(bad)
mov
ror
mov
mov
push
sbb
mov
dec
xchg
adc
xchg
scas
inc
lods
pop
aam
xchg
pop
mov
push
push
pusha
or
test
scas
loop
jae
scas
in
scas
movs
ja
sbb
fsubp
dec
jno
xor
add
(bad)
je
and
sti
mov
mov
or
ins
enter
in
test
retf
dec
loop
push
pop
jecxz
push
pushf
or
push
dec
pop
mov
loope
push
jmp
push
mov
popa
xor
call
mov
cmp
data16
adc
mov
xchg
inc
jmp
jecxz
jecxz
mov
and
lods
shl
movs
popa
(bad)
test
call
iret
sub
loopne
pop
int3
ins
xchg
jg
jbe
mov
ins
loop
mov
arpl
or
adc
sbb
mov
in
sbb
stos
in
sub
ror
jmp
or
jae
int3
cmp
mov
ins
aas
loop
stos
nop
xor
mov
fmul
mov
fld
repnz
test
mov
test
pop
mov
in
ds
xchg
xor
cmp
jecxz
loopne
push
jg
pop
mov
add
mov
ins
adc
lahf
jge
in
or
pop
icebp
adc
rcr
not
mov
sbb
ja
rol
push
pusha
xchg
lods
inc
and
inc
dec
mov
fwait
stos
loop
add
or
es
punpcklbw
ins
push
cmp
mov
or
inc
arpl
dec
(bad)
push
push
(bad)
xor
rol
rcl
dec
hlt
movs
mov
push
push
inc
pop
jp
popf
out
(bad)
push
out
push
sar
fst
mov
pop
imul
add
and
ret
aaa
add
xor
shl
inc
sub
loop
popf
sub
inc
out
jmp
test
pusha
call
ins
inc
mov
stos
cld
leave
fs
or
push
ret
lahf
or
inc
(bad)
les
xchg
repz
iret
lock
ins
or
in
jb
or
cmp
cs
out
ds
and
out
push
scas
mov
(bad)
sbb
pop
(bad)
(bad)
popf
dec
iret
xchg
loope
dec
cmp
(bad)
xchg
sub
pop
js
stc
psubusw
or
push
into
jb
pop
aas
repz
test
mov
loopne
int
nop
leave
and
inc
inc
sar
push
jmp
sbb
sbb
cdq
cli
lea
(bad)
lods
stos
sbb
sub
lods
pop
mov
test
add
adc
add
pop
pop
add
xor
ja
scas
lods
cmp
fisttp
repnz
out
adc
(bad)
out
std
arpl
and
inc
scas
hlt
adc
mov
or
jno
movs
out
jle
mov
cld
mov
mov
cs
movs
int3
test
or
or
inc
sbb
arpl
or
sbb
inc
fcmovnbe
test
aas
dec
push
mov
in
out
mov
push
nop
icebp
es
stc
(bad)
pop
cmps
jge
add
adc
pop
retf
or
mov
xor
jnp
int
retf
add
aad
mov
xor
retf
repnz
adc
rcr
cs
xchg
test
sub
in
enter
fiadd
aas
jns
fstp
dec
test
mov
mov
pop
push
pop
sub
push
call
sbb
mov
mul
mov
jae
ja
xor
mov
xchg
enter
lea
lds
sbb
sub
and
mov
pop
sub
push
sbb
xor
stos
in
xchg
lods
movs
or
fwait
add
mov
and
cmp
xchg
sub
shl
or
mov
lock
gs
sbb
aam
lea
test
mov
scas
push
ret
shl
mov
pop
and
push
dec
mov
mov
adc
lock
rsqrtps
hlt
bound
gs
lds
or
jae
jmp
pushf
jp
aas
dec
test
loopne
mov
inc
lea
inc
in
neg
push
inc
popf
movs
scas
push
loope
push
sub
xor
shl
push
scas
xchg
outs
cwde
daa
add
and
std
push
jne
stos
fcomp
arpl
mov
imul
mov
daa
pop
sbb
mov
adc
je
sub
sub
fcomp
dec
retf
sub
pop
pop
imul
imul
sbb
cmc
mov
jmp
int
in
imul
mov
loop
add
xor
inc
push
fnsave
test
imul
mov
fist
seta
mov
in
dec
shl
inc
xchg
jle
jae
sub
(bad)
jmp
loop
movs
mov
pop
icebp
test
cmp
push
iret
jb
xchg
sbb
xchg
cld
cmps
mov
aaa
pusha
dec
in
leave
std
cmp
frstor
pop
sti
rol
call
inc
fmul
xchg
retf
jae
dec
and
or
int3
cmp
test
inc
xor
xchg
nop
stc
mov
inc
ficom
mov
sub
call
(bad)
xchg
add
test
sbb
daa
jmp
test
add
sub
sub
jbe
dec
pop
sub
aam
cmp
test
fsubr
add
ret
or
iret
dec
mov
sbb
sbb
adc
jne
mov
bnd
adc
jmp
retf
scas
jno
inc
test
call
mov
call
xlat
rol
mov
sar
cmc
add
dec
fst
call
or
lods
xlat
enter
(bad)
fimul
ins
jmp
push
or
out
cmp
xchg
pop
push
(bad)
pop
pop
cmp
pop
push
and
fldenv
mov
hlt
cmp
push
add
adc
(bad)
sub
push
hlt
or
mov
fstp
arpl
xor
and
lea
sub
rcr
ret
push
loopne
jbe
sub
mov
pop
inc
push
mov
pop
sub
xchg
pop
pusha
outs
loop
pop
fsub
pop
shr
imul
sub
push
push
loop
aas
fdivp
and
adc
cmps
sbb
(bad)
aad
mov
sbb
movs
dec
cmp
pushf
jmp
sub
add
ins
and
loope
or
jmp
cmp
jb
xor
add
or
scas
push
fiadd
pop
inc
sub
popa
push
or
sar
jno
and
pop
adc
mov
ja
inc
call
and
pop
xchg
int3
mov
pop
dec
xchg
add
imul
xchg
out
loopne
pop
addr16
mov
pop
arpl
jge
scas
add
not
mov
movs
push
adc
stc
test
(bad)
out
fstp
xor
cmp
outs
mov
push
cld
(bad)
push
fistp
addr16
pop
fadd
mov
mov
pop
sbb
movs
inc
push
sub
cmp
mov
cmp
loopne
iret
inc
adc
push
xchg
aam
into
inc
xor
pusha
inc
adc
push
repnz
(bad)
jnp
mov
xchg
mov
retf
stc
das
popa
xchg
dec
mov
sub
js
(bad)
jecxz
pcmpgtd
jg
mov
xor
push
cs
jnp
stos
xchg
and
fistp
pop
jne
aas
retf
imul
repnz
hlt
jns
fcmovb
dec
shl
fnstenv
sub
push
arpl
aam
mov
dec
cwde
adc
mov
test
(bad)
out
sbb
add
enter
(bad)
sahf
leave
jae
and
int
dec
iret
gs
pop
loopne
movs
sub
lahf
retf
cmp
aaa
aad
rol
stos
scas
jbe
jne
stc
repz
test
inc
cdq
pop
in
cwde
mov
dec
bound
and
cmps
(bad)
aam
fcomip
adc
dec
repz
push
cmps
cmp
jae
push
in
nop
iret
stos
cmps
dec
cdq
ds
sbb
sbb
xor
sbb
jne
jmp
xlat
je
js
and
pop
or
adc
test
inc
data16
xchg
jno
ja
or
inc
add
outs
jmp
ins
sub
sub
inc
xor
jb
adc
movs
sbb
mov
dec
sbb
jmp
idiv
mov
mov
das
test
fdecstp
retf
sbb
pop
rol
sbb
outs
add
jmp
aas
ret
sbb
sbb
shl
in
inc
or
sbb
es
sub
cmp
cli
outs
movs
lahf
jne
or
dec
call
jbe
push
fwait
xor
loope
push
pop
neg
xchg
lods
dec
adc
fucomp
add
mov
jmp
lods
cld
fcom
xor
sub
xorps
(bad)
rcl
xchg
shr
jno
ror
std
push
push
cmps
xor
movs
cwde
mov
dec
xchg
xor
adc
push
inc
sbb
sub
pop
loop
push
pop
mov
ss
or
cmps
fsub
in
mov
xor
jo
lods
dec
(bad)
or
xchg
outs
mov
fwait
in
sbb
in
xor
fldenv
sbb
lods
or
in
outs
jo
je
inc
js
aad
sbb
out
std
(bad)
jge
cmp
(bad)
cld
stos
rcl
mov
sti
popa
add
fdivr
out
xor
jb
(bad)
pushf
mov
fmul
mov
dec
cmp
cdq
dec
mov
cmc
xchg
push
popa
mov
xchg
hlt
jne
jno
je
push
and
sub
adc
cmp
popf
mov
test
iret
ror
push
add
std
jns
js
das
fidivr
cmc
out
scas
ins
ins
arpl
loopne
sub
sbb
fldenv
or
and
cmp
arpl
ss
cmps
in
inc
cmp
inc
mov
jg
scas
adc
pushf
sti
imul
das
sahf
loope
mov
cmp
push
mov
leave
mov
dec
and
and
xchg
mov
aam
pop
cs
pushf
aad
jo
sahf
fdiv
movs
xchg
jb
or
enter
test
xchg
dec
scas
xor
mov
ss
pop
outs
mov
add
and
stos
call
icebp
out
add
retf
sub
loop
das
mov
fwait
cmp
fdivr
xor
lahf
icebp
aaa
xchg
fsub
retf
and
mov
gs
mov
shl
adc
or
pop
push
(bad)
sbb
cmp
(bad)
adc
arpl
sbb
fnsave
ret
or
lds
test
movs
pop
fild
es
xchg
sub
xchg
test
or
xor
outs
adc
out
scas
mov
je
xor
out
pop
fadd
xchg
xlat
jmp
pop
add
jge
fwait
xchg
pop
inc
mov
cmps
fisub
call
cmp
cmps
nop
cmp
lods
sbb
push
ret
xor
inc
adc
push
push
push
mov
hlt
mov
mov
test
pop
inc
cs
xchg
mov
sub
les
jbe
or
out
daa
dec
and
sub
lea
or
pop
stos
lds
(bad)
inc
jle
outs
xchg
pushf
and
inc
mov
(bad)
sub
mov
pop
loope
xchg
fcom
cmc
iret
sbb
retf
pop
add
in
ror
lds
sub
je
mov
pop
sbb
shl
stos
aam
imul
push
rcr
push
fdiv
out
or
ror
out
fmul
ins
cmp
test
sub
scas
in
stos
jecxz
jge
or
cmp
pop
loopne
xor
push
cmps
cmp
cmps
into
mov
mov
nop
test
cdq
mov
xor
data16
jbe
or
stos
cs
add
pop
loop
loop
fsincos
and
push
xchg
lahf
cmps
cmp
adc
retf
loope
and
adc
fadd
mov
push
neg
fdiv
adc
cmc
sbb
fisubr
std
das
bound
xchg
enter
jmp
ss
xor
inc
xchg
inc
push
popf
add
cwde
xor
sbb
sub
aaa
and
cmps
std
in
xor
sbb
mov
push
xchg
xor
outs
dec
in
push
jne
pop
dec
les
cmp
in
in
jno
jnp
fidivr
push
and
xchg
fdiv
xor
add
fsub
call
aam
mov
sub
cmps
rcl
imul
sar
push
xchg
addr16
shr
cmp
scas
daa
data16
jmp
retf
cs
jae
repnz
sbb
jb
xchg
pop
jbe
sbb
cdq
ss
mov
add
add
xor
rcr
mov
inc
xchg
mov
push
add
mov
out
aam
jle
fdivr
jbe
gs
pusha
(bad)
push
shl
dec
mov
mov
in
fs
ins
bound
inc
push
xchg
test
mov
mov
mov
mov
bound
dec
arpl
jne
pop
outs
scas
push
pop
and
mov
mov
jge
mov
pop
in
mov
and
ins
nop
sub
dec
inc
pop
scas
(bad)
cli
(bad)
adc
rcl
fwait
call
mov
push
sub
adc
ffreep
push
push
icebp
and
cmp
xchg
fdivr
scas
lock
adc
scas
xchg
xor
pop
or
pop
mov
daa
xchg
push
mov
mov
dec
cld
add
repz
mov
shl
pushf
clc
jne
inc
jge
hlt
fst
pop
and
(bad)
fnstsw
push
mov
xor
jp
add
sbb
mov
xchg
pusha
stc
and
pop
std
or
sahf
sbb
stc
xlat
es
push
les
out
sub
dec
fiadd
xor
add
loop
jg
or
repz
or
repz
(bad)
ss
lds
aad
out
hlt
cmp
push
pusha
mov
dec
enter
in
xchg
scas
cvtps2pi
std
data16
xor
xchg
je
addr16
pop
js
inc
mov
pop
and
mov
frstor
dec
adc
pop
inc
sbb
loopne
dec
jp
icebp
push
inc
sbb
rcr
mov
xchg
stc
cli
int3
stos
mov
sbb
sar
sbb
jne
out
mov
test
out
out
retf
int
cmp
ins
pop
cmp
sub
or
inc
cmps
das
or
out
sub
add
fld
mov
imul
jo
xchg
mov
mul
inc
and
inc
inc
hlt
test
lea
push
cmp
les
jmp
leave
enter
xchg
add
xchg
push
scas
and
in
stc
sti
mov
int
mov
adc
mov
add
pop
pcmpgtb
js
stos
adc
cld
jle
pop
test
or
jp
ret
or
pop
cld
stos
mov
call
enter
mov
jb
or
cwde
dec
xchg
xor
ret
cmps
push
popf
jp
mov
stc
mov
mov
stos
nop
add
pop
push
(bad)
(bad)
(bad)
mov
mov
xor
addr16
(bad)
fcomp
sar
cmp
pop
jecxz
stc
retf
mov
fisubr
sub
or
ss
popa
int3
sub
fstp
iret
outs
popa
fisubr
ins
push
into
retf
sbb
rol
xchg
mov
out
sbb
pop
loop
xor
ret
xor
lods
popf
mov
lock
gs
leave
inc
xchg
pop
mov
and
test
xchg
(bad)
cmp
pop
sbb
push
fild
xchg
pop
daa
dec
push
mov
xchg
stos
movs
ins
(bad)
jo
mov
pop
mov
out
imul
and
jecxz
adc
sti
sbb
push
aas
cdq
call
dec
adc
pop
(bad)
push
mov
in
push
xchg
dec
adc
fs
bound
mov
push
xor
movs
sub
ss
mov
xor
add
pop
cli
xlat
in
repz
mov
pop
jae
mov
out
cmp
fwait
test
and
push
mov
shl
mov
xchg
shl
and
jne
xchg
jb
imul
cld
cmc
lods
cmp
or
lods
sbb
or
loope
xchg
xchg
out
cwde
(bad)
ins
aaa
cmp
ret
(bad)
mul
inc
inc
out
xchg
xchg
push
jmp
imul
inc
jge
hlt
rol
cmp
ins
mov
pop
inc
xor
and
sub
cli
jb
sahf
sub
push
aam
stc
fldcw
and
(bad)
js
dec
and
outs
mov
pop
xor
clc
loopne
call
xchg
jmp
push
mov
cmp
xchg
ret
xchg
aam
aas
push
xor
or
int3
add
div
fadd
jne
int3
cmp
mov
adc
imul
and
mov
jnp
repnz
cs
stos
adc
xchg
scas
dec
dec
mov
sbb
mov
repnz
push
fsubr
stc
add
aam
add
cwde
pushf
stos
ss
in
pop
test
or
arpl
mov
or
and
cmps
pop
rol
push
fbld
cmp
inc
push
mov
nop
mov
xchg
mov
jmp
or
lahf
cdq
push
xlat
ret
adc
and
mov
fcom
neg
dec
jbe
mov
mov
aaa
test
iret
cmp
cmp
je
and
cmp
ret
add
fadd
loopne
aam
es
popa
shl
(bad)
lahf
cmc
lock
popa
movntps
sub
les
test
es
jo
daa
push
mov
pop
aam
aaa
popf
call
jmp
add
mov
aas
cmp
sub
push
xor
(bad)
out
dec
mov
adc
les
add
xor
push
mov
jecxz
pop
sub
push
ss
test
std
nop
sbb
mov
sub
ins
or
inc
jae
mov
xchg
mov
jecxz
pop
shr
inc
aaa
and
les
and
fld
add
scas
data16
ja
dec
mov
pop
out
pop
pop
(bad)
std
mov
add
mov
call
out
jge
icebp
mov
or
sub
push
loopne
adc
xchg
inc
shr
push
sub
call
add
popf
cmp
mov
push
push
xchg
inc
ins
cmps
cdq
rcr
les
or
mul
sub
inc
xor
stc
aam
outs
xchg
mul
fwait
adc
test
in
mov
lock
mov
rcr
aaa
std
xor
mov
popa
pop
outs
xor
mov
or
out
js
jecxz
je
xlat
pop
cmp
dec
rcr
fiadd
add
(bad)
xchg
fistp
call
call
cwde
sub
mov
rol
push
and
sub
add
je
dec
adc
out
test
or
call
test
shl
or
sbb
stos
das
inc
ret
mov
mov
mov
mov
repz
inc
pop
sub
sub
mov
push
rcl
push
fwait
adc
in
sbb
sbb
ja
jmp
cmp
mov
js
mov
into
cmp
inc
and
test
(bad)
cmp
or
js
retf
in
jle
sub
repnz
xchg
and
lds
pop
jecxz
ret
test
add
sbb
jmp
aad
mov
push
inc
loope
ss
cdq
movs
outs
inc
int3
sub
adc
sub
pop
xor
dec
arpl
jecxz
and
test
and
inc
imul
add
cmp
sub
jg
or
iret
push
and
enter
ret
outs
mov
in
xchg
(bad)
neg
jmp
mov
xor
cwde
nop
push
cld
fcomp
xor
not
mov
in
scas
xchg
push
fs
cwde
out
(bad)
push
aad
test
mov
lods
inc
out
lods
mov
lods
mov
aam
xor
mov
fdivr
fs
and
sbb
mov
dec
scas
out
jae
push
pop
arpl
out
cmp
jecxz
out
in
push
std
cdq
rol
mov
mov
pop
loopne
call
movs
cmp
sub
or
sti
add
shr
test
lss
sub
retf
mov
lock
fwait
or
mov
mov
xchg
ins
stos
inc
mul
jmp
sbb
push
aam
and
int3
push
mov
xor
mov
dec
outs
inc
lds
xor
cld
call
out
cmps
icebp
arpl
neg
in
loope
mov
push
and
adc
in
(bad)
jmp
es
sbb
not
push
xchg
inc
mov
(bad)
les
dec
cli
in
sbb
sbb
add
adc
cmp
imul
xchg
test
cmp
dec
mov
cwde
cmps
aas
pop
mov
xchg
aam
mov
sahf
mov
sbb
xor
and
retf
out
lock
scas
push
xor
mov
mov
jne
(bad)
and
outs
xor
cmp
mov
in
cmps
hlt
vpcmpeqw
outs
loop
fwait
lods
pop
push
push
mov
sbb
sbb
xor
enter
jb
pop
int
es
pop
outs
pop
push
cld
loope
and
pop
cmp
inc
add
loopne
jecxz
fsubr
xor
lock
push
dec
(bad)
fwait
pop
pop
adc
scas
sti
aaa
es
push
scas
jecxz
pop
xchg
pop
and
ss
inc
out
push
fcomi
jnp
sahf
pop
ins
out
or
add
sti
dec
or
mov
in
mov
and
lds
out
mov
cmps
jecxz
sbb
push
xor
push
test
cmp
sub
and
or
mov
lods
cmp
cmp
aaa
gs
push
mov
(bad)
xchg
(bad)
fsubr
(bad)
icebp
sub
shl
mov
jmp
jl
add
push
or
lods
int3
sbb
in
xor
inc
and
scas
je
xchg
jecxz
(bad)
rcl
fwait
das
cmps
jmp
dec
mov
adc
mov
inc
mov
bound
adc
loop
push
jmp
push
sbb
popf
out
adc
stos
inc
pop
push
out
cdq
xlat
test
inc
enter
jle
popa
aad
and
dec
mov
dec
and
ret
fs
push
jg
push
sbb
arpl
mov
or
test
daa
pop
adc
dec
mov
popf
int3
pop
leave
cmps
aaa
pop
or
(bad)
xor
aaa
out
repnz
xor
in
jp
lea
sti
mul
mov
repnz
fimul
stos
ins
mov
aaa
icebp
mov
and
or
mov
add
fisttp
ss
dec
jge
jmp
lods
cmc
push
mov
les
pusha
xor
lods
ficomp
popa
movs
or
sub
push
pop
xchg
frstor
pop
add
pop
dec
ret
jg
add
jne
bnd
pop
in
(bad)
and
xor
cmp
cmp
xor
hlt
cmp
jbe
call
mov
outs
adc
and
jne
push
and
sub
jnp
push
pop
push
sbb
jmp
mov
bound
push
dec
cmc
sub
dec
jnp
test
out
xchg
pop
adc
pop
popf
popa
xchg
mov
pop
jb
add
and
add
xchg
pop
cmps
(bad)
push
push
imul
push
xor
and
mov
fld
and
loope
cli
lock
mov
retf
inc
ret
call
mov
pusha
jnp
mov
cli
retf
pop
rcl
inc
mov
lods
xor
cmp
(bad)
xchg
rcl
mov
push
add
adc
or
mov
inc
loopne
mov
lea
pop
dec
sub
popa
(bad)
sahf
xchg
in
jo
jecxz
in
xchg
js
cmp
nop
push
ret
retf
mov
mov
ja
rcl
(bad)
jae
in
sbb
sahf
clc
bound
in
stc
lods
mov
je
ja
mov
sub
movs
jmp
inc
or
or
js
out
repnz
outs
adc
xchg
push
(bad)
mov
hlt
imul
sbb
mov
rcl
sbb
mov
push
mov
sub
pop
aas
into
cs
cmp
ret
pop
out
inc
stc
loope
call
push
test
sbb
(bad)
movs
ss
mov
mov
or
or
mov
add
test
cmp
xor
jb
inc
stc
push
movs
xor
sub
pop
xchg
push
mov
repnz
cmps
jmp
dec
into
outs
jnp
clc
mov
and
xchg
jns
lock
xchg
push
inc
ficomp
out
inc
inc
out
ja
into
push
inc
je
loope
jle
cmps
ja
and
sub
cmp
out
or
popf
xchg
cmps
(bad)
xor
mov
cmps
(bad)
mov
fwait
pusha
fdiv
sahf
repz
inc
push
out
inc
clc
mov
adc
dec
iret
retf
xor
ins
ret
call
push
and
das
popa
call
js
sub
mov
inc
xor
mov
sbb
loopne
jl
cmps
shl
pop
hlt
test
xor
mov
mov
mov
js
add
ins
adc
push
dec
mov
loope
jp
inc
jp
adc
mov
or
out
jbe
jnp
pop
gs
sub
push
addr16
fwait
xor
xor
jle
adc
repz
sbb
(bad)
dec
fidivr
pop
mov
cmp
inc
shl
sub
mov
push
jb
imul
inc
xor
xor
xchg
sub
ds
push
mov
sub
mov
inc
sub
(bad)
fistp
mov
vunpckhps
ins
in
sub
pusha
inc
push
jbe
int3
icebp
lods
not
in
and
xchg
loopne
adc
cwde
push
or
outs
adc
int3
call
sbb
fld
cmps
in
outs
ror
stos
jg
neg
push
jmp
lea
or
js
adc
aam
pusha
dec
std
dec
mov
mov
cdq
in
popf
int
push
fs
dec
sbb
stc
add
pop
pop
pop
cmp
enter
push
mov
push
scas
scas
and
add
sub
daa
cmc
pop
xlat
sub
test
ret
hlt
mov
mov
pop
fst
sub
data16
or
aad
lods
push
in
and
mov
mov
daa
sub
or
jns
push
and
xchg
mov
xor
adc
push
push
aaa
adc
jo
in
scas
xchg
dec
mov
sub
rol
xchg
retf
dec
into
(bad)
loopne
test
jle
cwde
fmul
push
pusha
out
inc
xor
jmp
adc
pop
sub
pop
inc
repnz
sbb
xor
(bad)
bound
adc
adc
sbb
popf
je
dec
cmp
inc
or
and
ss
mov
out
sti
jne
popa
jnp
cmp
pop
inc
in
xchg
and
(bad)
in
sbb
aad
retf
es
cmps
jmp
test
inc
je
arpl
xchg
jb
(bad)
cli
(bad)
sub
ret
and
hlt
stc
aas
mov
mov
cmp
repz
cmc
int
shr
mov
out
and
test
pop
push
sub
mov
sbb
(bad)
aaa
lea
cld
shl
enter
outs
push
lods
and
out
js
(bad)
js
inc
or
hlt
mov
adc
ficom
xor
xchg
ds
int3
mov
mov
pavgw
icebp
lds
movs
je
push
addr16
int3
ins
fdiv
(bad)
popf
jno
mov
mov
sub
pushf
bound
xchg
push
mov
loopne
jle
(bad)
adc
(bad)
pop
mov
cld
std
cmp
sub
adc
cwde
xor
mov
mul
add
ins
fwait
mov
or
sbb
dec
rol
mov
mov
inc
adc
adc
stos
xor
sub
pop
leave
repz
mov
popa
aas
pop
push
cdq
jno
scas
or
xchg
dec
pop
fist
or
pop
jnp
dec
jb
and
std
or
dec
outs
call
rcl
ret
ins
jns
iret
pop
add
mov
rol
ficom
sbb
cs
cld
daa
jb
inc
das
dec
cld
movnti
call
mov
hlt
sbb
daa
add
pop
or
aad
push
jecxz
xchg
dec
or
cmc
cmp
setp
jae
popa
mov
push
inc
jle
mov
add
and
sbb
and
sbb
je
(bad)
pop
fs
dec
scas
sub
jge
ror
ret
mov
jge
add
(bad)
jmp
cmc
mov
xor
xchg
pop
mov
push
mov
sub
xchg
inc
adc
ror
outs
xor
jmp
adc
aas
in
cmps
retf
cld
adc
clc
jns
pop
adc
addr16
cld
push
or
movs
jae
ins
retf
push
push
enter
inc
je
lea
dec
xchg
std
inc
sub
jb
mov
arpl
sub
mov
fdivr
sub
push
cwde
xchg
aad
or
dec
das
sub
push
scas
sti
and
sub
in
and
retf
xchg
wrmsr
sar
aaa
jg
mov
ror
xchg
sahf
xchg
pop
adc
sub
pop
xchg
pushf
shl
enter
mov
imul
jge
push
into
es
pop
fs
std
(bad)
jmp
mov
cmp
add
stc
jle
push
push
add
add
mov
pusha
or
es
(bad)
xor
xchg
jae
stos
outs
pop
push
(bad)
mov
xor
pushf
cmp
pop
adc
sub
add
enter
or
loopne
inc
lds
xor
xor
aaa
es
sbb
add
xchg
dec
mov
xchg
std
cmp
aad
add
cs
or
nop
jp
push
imul
dec
mov
xor
imul
xor
lahf
in
clc
scas
or
or
mov
mov
in
push
jp
(bad)
imul
cmp
inc
and
cmp
je
mov
sbb
ja
dec
rcl
test
nop
fs
jnp
mov
int
lds
jns
je
lods
pop
cli
je
aad
xchg
inc
cwde
adc
enter
xchg
imul
pop
ins
int
shr
push
jne
mov
aas
sbb
pop
cwde
xchg
in
mov
cmp
push
(bad)
enter
daa
leave
aaa
movs
or
enter
std
mov
rcl
push
nop
pop
xchg
inc
push
jmp
push
(bad)
enter
pop
dec
sar
enter
adc
mov
sub
stos
es
or
push
popa
sahf
pop
rol
pop
dec
sub
sub
mov
ss
sti
fmul
sbb
dec
daa
push
pop
cmp
gs
mov
and
xchg
mov
ins
in
sbb
test
jmp
rcl
mov
test
xchg
fucomi
clc
add
das
dec
push
(bad)
mov
arpl
add
aam
loopne
pop
dec
xchg
fs
rol
data16
jg
add
ror
imul
arpl
stos
aas
mov
cld
(bad)
test
jle
test
and
mov
dec
rcr
int3
mov
fistp
popf
je
(bad)
sbb
inc
mov
call
pop
cmp
ror
push
push
in
push
add
push
shl
pop
ja
fcmovu
push
jge
mov
in
jge
mov
jmp
mov
ins
xchg
sub
ret
add
inc
xor
loop
ss
cmps
jo
icebp
stos
cld
ja
pop
sub
pop
les
lds
mov
fsub
jmp
cmc
push
cmp
mov
add
sub
inc
pop
enter
jno
mul
sub
out
dec
sbb
mov
inc
mov
(bad)
daa
arpl
jbe
mov
cwde
fidiv
cld
adc
loope
sub
mov
iret
test
adc
jno
repz
mov
jb
(bad)
mov
xchg
lea
mov
sbb
xor
cld
pop
in
and
inc
dec
mov
mov
fistp
sti
jo
pandn
adc
sub
imul
rol
sbb
std
sar
int
aad
inc
mov
xor
movs
jl
(bad)
fstp
or
sub
popf
aaa
leave
adc
xchg
inc
fnstenv
cmp
xor
addr16
adc
pop
adc
stos
push
lock
mov
sub
inc
or
mov
push
mov
cld
mov
jno
mov
int3
fincstp
jecxz
cmp
inc
rcl
and
or
in
xor
aad
and
fdiv
sbb
mov
mov
in
out
dec
add
lahf
add
sub
stos
cmps
sub
sti
xchg
or
or
push
xor
dec
mov
xor
(bad)
iret
out
jno
lds
ins
shl
push
pop
jno
arpl
cmp
xor
fld
xor
xlat
dec
movs
(bad)
jbe
push
or
jge
scas
mov
lahf
pop
sbb
shl
jmp
cmp
cmp
and
fs
std
cmp
jnp
arpl
mov
inc
push
out
outs
or
or
imul
popa
(bad)
pop
mov
cmps
(bad)
cmp
out
arpl
in
sub
hlt
fwait
lods
and
ja
test
push
dec
and
xchg
fld
mov
ffree
mov
inc
jg
sbb
pop
add
stos
stc
mov
jg
cmp
mov
push
lds
iret
mov
stos
pop
cmc
dec
push
ds
aas
es
mov
les
sub
pop
arpl
push
xchg
repz
jmp
stos
or
dec
sub
mov
xchg
and
retf
icebp
push
call
jge
ret
popa
stos
xor
div
ror
les
(bad)
into
out
shl
rcr
pop
in
call
fldenv
push
adc
cmps
cmps
sbb
cdq
mov
sbb
lea
ret
or
test
jo
xlat
cli
xor
pop
pop
mul
js
add
and
aas
or
mov
mov
pop
shr
sub
push
add
mov
ss
sbb
mov
mov
ins
test
repnz
and
xor
add
je
jle
movs
xchg
pop
cli
in
fptan
pop
sar
cdq
push
sti
pslld
mov
fnstenv
stos
stc
outs
dec
dec
add
pop
jle
xor
fmul
outs
xchg
mov
pop
pop
sub
xchg
inc
adc
xchg
xchg
aad
jl
add
ja
or
mov
cmp
and
mov
repz
add
popf
fs
lods
fimul
mov
mov
mov
xchg
push
outs
xchg
test
sbb
jp
daa
imul
adc
rcr
inc
aad
ret
xchg
cmc
nop
dec
jb
xchg
sahf
or
mov
jle
arpl
je
mov
xchg
add
cmps
sbb
push
mov
cmp
(bad)
popf
push
mov
in
mov
es
js
sbb
push
pop
(bad)
mov
mov
pop
icebp
cwde
scas
pop
push
test
rcl
pop
ror
retf
int
xor
fidiv
daa
mov
push
fcom
fmul
pop
lods
neg
hlt
enter
pop
(bad)
push
lock
jmp
in
fs
jp
bound
xor
push
xchg
icebp
movs
jp
test
pop
in
xchg
dec
out
imul
jbe
shl
jnp
inc
pop
(bad)
lea
cli
or
test
imul
mov
adc
add
xor
shl
iret
or
fndisi(8087
out
or
jne
jnp
jo
test
pop
mov
mov
adc
in
cli
and
xchg
in
cmp
mov
fadd
out
into
pop
cmp
pushf
pop
push
and
mov
xor
int3
and
(bad)
push
repz
mov
js
and
xor
dec
and
dec
inc
xor
rcr
cwde
mov
push
addr16
ret
inc
jnp
or
daa
fsubr
jae
jbe
add
push
inc
adc
jmp
mov
xor
push
and
or
or
je
cmp
ror
out
sbb
(bad)
fimul
or
repz
mov
fist
xchg
je
mov
imul
cmc
mov
stc
out
dec
repnz
mov
(bad)
xchg
adc
adc
adc
ins
mov
out
shr
out
neg
neg
data16
mov
cdq
(bad)
sub
jae
xchg
sti
push
sbb
mov
adc
loope
ret
stc
dec
sub
rol
inc
adc
push
int3
ret
shl
add
aas
jae
lods
sbb
and
jo
nop
sub
mov
pop
and
fist
push
mov
aaa
call
and
shl
mov
std
(bad)
cmp
mov
jle
dec
cmp
cmps
test
push
add
stc
push
std
add
pop
mov
(bad)
dec
fisttp
test
pop
dec
pop
inc
xchg
shl
xchg
xor
mov
push
xor
(bad)
inc
pop
pop
or
mov
rcr
adc
movs
loope
je
push
lods
cmp
jno
sbb
or
ins
mov
xchg
div
jp
or
sub
aas
pushw
pop
and
xlat
rcr
xchg
dec
or
mov
repnz
movs
mov
add
xor
xchg
in
rol
popa
(bad)
pushf
push
pop
dec
mov
push
jb
pop
imul
adc
mov
clc
(bad)
jmp
adc
mov
loope
and
mov
lock
dec
in
mov
leave
pop
icebp
inc
lfs
or
(bad)
jbe
jno
sub
sahf
cwde
fmul
outs
jmp
retf
push
jbe
pop
xchg
test
icebp
xor
xchg
gs
repz
pop
xchg
pop
xchg
in
sbb
idiv
push
jl
mov
xchg
or
add
cmp
inc
sbb
and
imul
aad
pushf
cld
cmps
sbb
adc
and
push
ret
or
inc
jle
(bad)
cwde
jbe
cwde
jne
icebp
(bad)
das
cli
sub
stos
mov
xor
gs
add
popa
inc
mov
mov
inc
daa
and
mov
inc
jmp
add
(bad)
mov
sbb
and
dec
ja
jecxz
pop
fucom
push
out
daa
lods
inc
in
sub
push
lea
rol
or
mov
mov
push
ins
fs
mov
test
cmp
mov
push
in
sub
hlt
add
in
xor
test
pop
rcl
push
loop
xor
push
cmp
repz
fist
sub
pop
or
lods
mov
cmc
aad
pop
xor
push
loop
mov
and
fwait
std
(bad)
out
mov
xchg
pop
inc
cmps
and
daa
sbb
jecxz
dec
(bad)
ficomp
dec
jl
setnp
push
xlat
out
cmp
int
lds
mov
leave
and
cli
pushf
rcl
icebp
or
out
pop
movs
and
imul
adc
cmc
ror
jne
sbb
test
dec
div
rcr
xchg
fwait
cmp
scas
jne
add
cmp
ficomp
stos
repz
pop
jmp
rcr
(bad)
stos
mov
retf
shl
std
and
dec
and
dec
mov
mov
(bad)
mov
iret
mov
scas
hlt
sbb
xor
mov
xor
lods
adc
in
(bad)
jge
inc
mov
cmp
push
adc
les
scas
xlat
scas
jno
push
xor
popa
cli
test
sub
mov
and
cmps
(bad)
aad
sub
pop
cwde
and
xor
jnp
mov
cli
ins
sub
sub
iret
dec
(bad)
ja
push
mov
stc
in
dec
mov
pop
ins
mov
div
fcom
jmp
jp
push
sbb
cli
or
adc
xchg
or
lea
dec
(bad)
mov
sbb
shr
cmp
daa
mov
stos
and
lds
fisubr
into
mov
xor
scas
shr
fisubr
pop
aad
ret
mov
sbb
stc
das
mov
movs
sbb
pop
sbb
(bad)
push
scas
leave
hlt
mov
xor
sub
push
mov
in
jmp
pop
lock
stos
push
jmp
cmps
fsub
(bad)
adc
mov
mov
movs
out
jb
addr16
aad
mov
inc
outs
push
daa
mov
and
mov
xor
iret
xor
mov
mov
sbb
jmp
inc
fidivr
inc
or
fwait
retf
sahf
sbb
into
push
fnsave
xchg
mov
dec
cmp
je
fcom
leave
rcr
arpl
fdiv
sub
in
xchg
aas
hlt
pop
xor
or
xchg
(bad)
jp
arpl
popf
mov
cs
fdivr
fstp
hlt
lock
call
jge
daa
inc
xchg
cmp
pushf
adc
je
inc
jb
(bad)
mov
sahf
das
stos
or
in
and
retf
cmp
out
fnstenv
arpl
pop
in
sbb
dec
test
fs
nop
pop
adc
inc
jmp
(bad)
fldcw
pop
jb
xlat
sbb
or
add
inc
xchg
and
dec
fild
(bad)
std
outs
mov
cmp
in
dec
out
scas
and
fsubr
in
xor
pop
push
lea
out
cmp
int
sub
mov
xchg
lods
stc
mov
mov
test
mov
sub
cmps
inc
xor
xchg
push
push
and
ds
bound
mov
jmp
push
fsubr
ds
aaa
push
push
arpl
jmp
or
push
rol
arpl
ss
dec
inc
dec
mov
popf
add
stc
mov
mov
mov
scas
cmps
fwait
retf
add
scas
sub
stos
sub
in
add
les
mov
mov
jae
or
cmc
push
das
cmps
cwde
push
fwait
nop
xlat
xchg
mov
pusha
cdq
adc
sbb
inc
sbb
add
lds
or
jecxz
mov
dec
or
loop
adc
das
xor
mov
pushf
mov
sub
lds
inc
or
xor
jb
xor
sbb
dec
(bad)
les
hlt
xchg
push
stos
lods
jne
sbb
push
lods
push
rcl
jg
push
inc
enter
call
and
jae
inc
div
cmp
outs
mov
mov
sub
shl
push
ja
dec
push
push
mov
inc
test
rcr
pop
scas
pop
and
(bad)
das
mov
jecxz
shl
out
retf
daa
mov
or
retf
icebp
out
icebp
clc
(bad)
sti
sbb
pop
mov
and
pushf
mov
or
and
mov
call
pop
out
fadd
fimul
dec
xchg
mov
pop
xor
push
push
pop
push
xchg
in
(bad)
cmp
jmp
out
(bad)
and
xchg
pop
add
pop
sub
ja
addr16
xchg
xor
ds
ret
cmp
xchg
cmps
mov
adc
and
inc
(bad)
ja
xchg
dec
mov
mov
pop
repnz
cmp
fld
push
jae
fst
xlat
imul
aas
retf
sbb
inc
cs
push
call
in
(bad)
mov
push
test
stos
add
add
cmc
mov
frstor
test
daa
jmp
add
sub
and
pop
dec
pop
push
and
aad
push
push
xchg
mov
xor
adc
loopne
shr
pop
adc
repnz
lock
mov
stc
clc
cmp
aam
sahf
retf
fs
out
cmp
cmp
jp
push
pop
ins
xchg
dec
sahf
or
mov
xor
pop
out
or
dec
dec
dec
jp
push
movs
mov
push
pop
ret
mov
call
dec
xor
adc
movs
mov
xchg
push
xor
inc
and
adc
pop
test
xlat
add
leave
and
pop
adc
xchg
hlt
loopne
cmps
or
add
xchg
and
add
add
loope
mov
cmp
pop
push
movs
or
data16
shl
push
je
enter
or
faddp
xor
popf
or
push
add
lods
repnz
and
sub
rol
sbb
ds
mov
rcl
mov
mov
movs
cmps
mov
push
enter
mov
in
xchg
stos
fisttp
lds
or
icebp
or
jl
ret
dec
dec
fs
xchg
push
mov
mov
cs
fiadd
mov
add
ficom
in
xor
(bad)
lods
cmp
add
jmp
fstp
ret
or
xor
mov
in
into
bound
mov
xchg
mov
in
xor
daa
xchg
sahf
xor
sub
mov
mov
or
mov
cmp
xchg
test
sub
xchg
icebp
mov
push
sub
dec
and
aam
imul
mov
or
fcomp
cmc
retf
gs
pop
add
(bad)
xchg
lods
sbb
iret
add
mov
or
lock
scas
repnz
js
iret
mov
add
xchg
cmp
push
push
fidivr
sbb
xor
and
loope
test
shl
sub
cmc
ret
das
jg
(bad)
pop
mov
addr16
cdq
call
inc
sub
mov
dec
ror
lahf
ins
loope
add
arpl
retf
inc
jp
dec
inc
mov
(bad)
mov
sbb
add
pop
push
xor
pushf
mov
push
daa
cmp
add
add
mov
mov
dec
in
mov
and
xor
adc
outs
push
(bad)
cld
das
xchg
mov
push
mov
div
and
dec
retf
jae
push
sbb
fwait
mov
retf
mov
dec
xchg
movlps
pop
vrsqrtss
mov
xor
cmps
push
retf
aas
sbb
jb
cmp
gs
push
or
pop
addr16
push
and
stos
push
(bad)
in
movs
es
les
js
xchg
xor
jno
pop
mov
mov
imul
adc
in
aas
push
popa
mov
in
js
mov
scas
not
(bad)
jmp
out
hlt
mov
sub
mov
mov
rcl
sub
sbb
sub
mov
dec
movs
mov
mov
sbb
cld
push
loopne
jmp
mov
mov
cwde
lods
lea
push
xor
mov
cmc
ficom
xor
lods
out
fld
push
fstp
fld
iret
push
adc
jg
mov
cmc
and
push
inc
fcmovne
push
adc
pop
sub
bound
xor
push
jne
inc
cmp
sti
daa
fstp
fmul
inc
cwde
push
into
inc
stos
enter
movs
or
ret
out
enter
push
stos
mov
dec
mov
nop
cmp
xchg
ins
mov
fbstp
mov
scas
mov
lahf
rcr
rcl
push
xor
pusha
out
mov
mov
es
sbb
mov
cs
and
lods
(bad)
adc
or
lock
movs
(bad)
ror
xchg
dec
aas
(bad)
add
enter
mov
test
pop
loopne
daa
push
adc
rcl
inc
lods
ret
cwde
imul
(bad)
sub
mov
hlt
pop
mov
cmp
xor
pop
scas
neg
mov
ret
or
or
ja
jbe
mov
fsubr
gs
rcr
add
icebp
popa
or
xchg
and
in
dec
int
pop
lahf
push
add
sahf
adc
pop
xor
cmp
shr
inc
idiv
and
aam
data16
call
push
jno
scas
and
test
ins
add
sbb
push
inc
js
les
(bad)
mov
pop
push
cld
jmp
mov
xchg
mov
lds
xor
fisttp
add
push
hlt
inc
inc
dec
ror
xor
push
dec
adc
and
fiadd
mov
pop
(bad)
(bad)
std
jl
push
popf
popa
clc
adc
fisubr
jg
out
adc
cmp
push
test
into
ret
pop
push
ret
sbb
sub
mov
lods
fwait
xor
outs
inc
xor
xchg
(bad)
cdq
out
lods
jmp
sbb
or
in
cmp
(bad)
adc
push
or
clc
mov
cli
mov
ds
add
xor
mov
pop
jge
out
pop
arpl
imul
popa
leave
push
stos
push
call
jg
xlat
xchg
inc
push
(bad)
test
mov
in
add
sbb
js
jno
sub
and
(bad)
aad
icebp
arpl
cmp
test
xor
jae
es
ror
pop
inc
icebp
dec
inc
dec
jp
shl
stos
mov
jo
rcr
out
push
sub
or
push
adc
ja
or
inc
cld
cli
mov
dec
loop
cmps
or
pop
inc
(bad)
outs
and
jl
xchg
sbb
mov
jbe
or
outs
dec
addr16
scas
or
(bad)
loope
inc
call
(bad)
imul
int3
mov
icebp
in
in
jnp
xor
adc
pop
mov
fwait
mov
xchg
outs
into
dec
ret
fcmovu
fsub
mov
retf
repz
imul
lds
adc
jge
cmp
movs
jo
fs
stos
sar
push
push
push
aaa
aam
xor
adc
dec
into
(bad)
mov
dec
movs
inc
mov
ins
inc
ret
dec
sbb
lods
std
xchg
rol
push
and
jne
(bad)
arpl
into
lock
xor
sub
push
push
imul
mov
inc
push
sbb
bound
jbe
daa
and
test
pop
fmul
mov
sti
mov
sbb
ret
nop
or
sbb
or
or
inc
xchg
retf
out
into
imul
and
xor
repz
retf
ret
sti
stos
cwde
mov
jle
xor
cwde
dec
xchg
jge
inc
mov
mov
inc
xchg
mov
mov
xor
aas
js
sbb
inc
dec
add
(bad)
jg
adc
push
fyl2xp1
push
lea
fwait
sbb
ror
inc
fldcw
xchg
push
dec
out
lods
arpl
or
scas
mov
fist
xor
rcl
jnp
adc
mov
(bad)
adc
icebp
jmp
dec
or
mov
inc
dec
cmps
pop
bound
rcl
push
fs
ret
fsubr
aam
daa
mov
mov
pop
pop
ror
cmp
mov
inc
mov
fild
mov
sahf
shld
(bad)
clc
and
retf
adc
out
jne
imul
in
sub
iret
dec
fsubr
sub
or
sub
add
lods
pop
in
ret
mov
xchg
add
push
add
bnd
sub
inc
test
mov
les
jle
sub
retf
arpl
les
jmp
fwait
sbb
cdq
aam
jecxz
mov
jo
push
test
mov
xor
push
cmp
outs
frstor
in
call
jp
repz
sahf
xchg
mov
(bad)
mov
sbb
and
push
or
(bad)
cmc
ins
in
(bad)
int3
push
pushf
cmc
jb
inc
push
leave
xchg
adc
in
repnz
xchg
movs
out
add
and
jns
aad
xor
inc
call
adc
lods
ss
cli
dec
or
xor
pop
jmp
je
or
inc
add
jb
cmp
mov
sbb
cmp
cld
lea
cs
sbb
mov
fcomp
idiv
and
scas
mov
jge
cmp
repz
arpl
leave
sub
sub
popf
add
and
xchg
rol
in
retf
or
and
mov
scas
and
(bad)
punpcklwd
lahf
es
sub
jge
cmp
mov
ds
sahf
xchg
sbb
lahf
adc
retf
sbb
ret
mov
fld
xor
(bad)
ror
aad
sub
outs
mov
adc
dec
bound
and
jb
stos
fiadd
jae
(bad)
jle
aas
jge
pop
cli
cld
cmp
lahf
or
xor
call
dec
in
cmp
mov
mov
mov
popa
cs
les
push
call
inc
int
shl
and
popf
jmp
cmp
jmp
mov
fucomp
stc
sbb
inc
jmp
mov
inc
xlat
ret
mov
stos
popf
test
ds
jle
(bad)
(bad)
call
and
push
adc
sbb
movs
mov
xor
cdq
or
clc
retf
sbb
sub
push
sbb
loope
jbe
shr
jnp
cmc
and
outs
cmp
stos
ins
cmp
scas
dec
push
out
xor
int3
dec
(bad)
arpl
nop
test
lahf
out
xchg
mov
out
into
fistp
icebp
xor
jl
repz
je
cmps
mov
mov
fisttp
into
sub
nop
sbb
jb
adc
sbb
and
xchg
pop
int
mov
sbb
jbe
push
cmp
mov
mov
push
out
pop
xchg
adc
cmp
and
cmp
repnz
pop
mov
(bad)
(bad)
cmp
shr
retf
or
mov
imul
sbb
inc
dec
pushf
mov
outs
lods
clc
xor
scas
arpl
jl
int3
mov
push
movs
sub
sbb
pop
mov
lods
and
dec
adc
jmp
pop
les
jle
ror
pand
mov
mov
sbb
adc
or
push
inc
push
inc
in
mov
and
push
push
fsub
xchg
mov
pop
jle
data16
das
jmp
push
loope
shr
push
fs
add
lahf
scas
out
cmps
mov
in
sbb
lods
sti
repnz
movs
ror
ss
sahf
xor
and
ss
int
push
nop
or
lods
xor
scas
and
pop
enter
xchg
mov
and
les
push
mov
mov
dec
bound
outs
mov
ret
and
sbb
add
loopne
aaa
mov
and
adc
pop
jmp
lea
pop
clc
sbb
or
mov
xlat
mov
stos
mov
pop
cmp
bound
cmps
lds
xchg
jg
add
push
dec
iret
nop
cwde
dec
scas
adc
(bad)
loopne
mov
xchg
out
xchg
inc
mov
jg
mov
jmp
jg
cmp
add
aam
call
inc
call
ins
pushf
addr16
xor
loopne
add
jnp
mov
sti
jmp
ret
and
outs
stos
pop
inc
loopne
jl
push
or
movs
sbb
fwait
or
test
mov
xor
xor
or
mov
or
mov
adc
cmps
mov
scas
sub
sbb
jbe
cmps
jnp
inc
hlt
and
loop
xor
das
(bad)
jmp
imul
pop
pop
in
push
xchg
push
adc
mov
mov
jg
pop
and
lahf
sub
xlat
mov
or
dec
icebp
push
cli
pop
retf
nop
mov
out
add
cmp
cmp
jno
(bad)
mov
mov
cmp
inc
push
leave
xchg
push
sub
and
into
xchg
jae
add
xlat
cld
pop
retf
inc
push
push
test
shr
dec
dec
push
mov
into
mov
pop
pop
popf
mov
jnp
mov
mov
sub
xchg
popf
cmp
xor
xchg
push
cli
bnd
xor
(bad)
sbb
jecxz
xor
inc
(bad)
scas
(bad)
out
jg
push
sub
mov
inc
sar
jbe
pop
jb
push
call
push
jecxz
icebp
movs
ins
cs
in
aaa
ins
push
retf
sbb
push
enter
cld
shl
cwde
pusha
clc
in
jnp
cmp
jae
rol
shl
xchg
out
xchg
jge
ret
adc
(bad)
call
push
shl
lahf
mov
or
ds
fist
aam
mov
add
pop
and
nop
sub
push
rcr
xlat
inc
mov
sbb
sti
and
sub
(bad)
jmp
push
fadd
cmp
cmc
(bad)
fld
and
pop
fs
mov
fbld
push
icebp
aas
dec
jp
outs
js
xchg
pusha
(bad)
xchg
jns
test
out
push
pop
xor
add
loop
stc
cmc
call
adc
fstp
xchg
fcomp
fimul
ret
test
mov
add
cmc
xchg
dec
imul
jae
sti
(bad)
or
pushf
scas
ficom
fist
cmps
xchg
or
jl
mov
sti
push
fcom
or
sbb
xchg
sub
and
scas
and
popf
jns
imul
out
adc
ins
(bad)
in
je
pop
ret
cmp
enter
ins
mov
xor
push
(bad)
je
cmp
pop
mov
cwde
ret
cdq
xchg
jl
push
js
hlt
adc
xor
sub
aam
es
shl
int
mov
int3
pop
cmp
data16
int
xchg
dec
cmp
aam
stos
ret
mov
addr16
je
mov
mov
xor
ret
pusha
push
fsub
add
scas
lds
je
jo
fmul
and
ja
scas
adc
fwait
jp
xchg
fbstp
cli
lods
cwde
ins
aaa
pop
cs
test
sbb
cli
mov
movs
test
inc
out
cld
test
sbb
into
mov
into
(bad)
out
aas
adc
hlt
gs
jl
call
addr16
and
fldenv
dec
and
popa
adc
xor
pushf
retf
lds
pop
cmps
pop
sbb
push
pop
mov
outs
test
fist
or
cmc
cmc
mov
rcr
xor
inc
cld
rcl
enter
gs
pop
lods
retf
pop
movs
cld
fwait
mov
mov
jno
xchg
aam
aaa
popa
vmwrite
mov
xchg
stc
call
jae
sbb
inc
sbb
retf
fmul
jle
out
fnstsw
stos
cmc
xor
jl
mov
dec
cmp
retf
loope
xor
sub
pop
cmp
retf
add
adc
shl
ret
xchg
fidivr
sbb
test
xchg
out
fstp
mov
and
outs
sub
cmp
push
mov
fs
scas
call
loop
pop
push
or
test
jnp
mov
pmuludq
(bad)
or
xor
fsub
enter
mov
out
test
sbb
inc
pop
movs
jb
and
outs
adc
push
mov
retf
stos
push
int3
aas
ret
adc
js
jl
cmp
std
sub
inc
lock
lods
sbb
mov
imul
(bad)
das
pop
out
lods
js
sbb
ds
jle
and
or
or
xchg
sub
jmp
dec
sbb
inc
and
adc
cmp
test
int
dec
out
imul
sbb
mov
aaa
out
add
enter
inc
je
sbb
pop
rol
xlat
sbb
mov
dec
into
push
inc
outs
call
pop
push
imul
cld
aam
mov
or
lea
inc
xlat
jbe
lods
jno
jg
ror
push
fidivr
in
call
inc
jne
cmp
aaa
(bad)
cs
sbb
pop
popf
jb
aad
enter
adc
jns
(bad)
mov
(bad)
mov
lds
dec
mov
retf
sbb
xchg
iret
dec
sub
test
and
cs
push
gs
inc
repnz
test
pusha
popf
dec
int3
punpckldq
or
push
cwde
stos
ret
test
mov
jae
shl
sub
sbb
aam
fwait
not
pop
dec
sub
push
repz
dec
xchg
ins
repnz
fist
mov
cmps
inc
aad
loope
fidiv
mov
lahf
(bad)
pop
outs
aad
or
imul
lea
add
dec
pmulhw
sbb
adc
mov
pop
inc
adc
and
xchg
add
jo
popa
xor
dec
inc
and
push
jecxz
xor
fsubr
aas
xchg
jns
out
inc
jbe
popa
clc
mov
xor
cmp
push
push
sub
jg
push
nop
shl
adc
mov
in
out
push
lods
stos
inc
aas
mov
inc
cmp
imul
adc
mov
jmp
jecxz
sub
sbb
icebp
adc
cmps
cmps
not
xor
pop
out
arpl
push
push
xlat
jae
mov
ins
xchg
fistp
ficom
out
jns
mov
dec
jmp
dec
push
push
mov
adc
and
mov
or
xor
dec
push
xor
test
add
cmps
cmp
in
adc
ret
jns
jp
ja
xor
sub
ja
sahf
adc
push
loop
cmp
sub
cmp
out
cmp
sbb
mov
sub
fwait
xchg
mov
cmp
jns
cdq
fld
mov
sub
cmp
mov
dec
test
xchg
mov
imul
out
mov
aaa
sti
loope
pop
in
(bad)
and
daa
jb
mov
call
push
mov
repz
push
scas
mov
adc
xor
add
stc
enter
mov
scas
out
pop
gs
arpl
int3
cmp
inc
xchg
push
push
push
inc
cdq
add
sub
sbb
cs
ins
pop
(bad)
scas
jns
movs
push
sub
leave
dec
push
push
ja
in
into
mov
and
imul
push
sub
pusha
pop
pop
mov
in
pop
(bad)
bnd
inc
mov
test
movs
mov
push
mov
ins
adc
dec
jb
repz
jge
pop
rcr
sub
ja
loope
jmp
test
out
gs
cmp
pushf
cmp
in
inc
xor
jl
jns
ins
in
cmps
jno
or
pop
shl
xor
and
push
add
mov
adc
adc
mov
stos
sbb
jp
(bad)
cs
jg
outs
movs
jae
clc
sbb
jnp
cmps
cmc
bound
aas
retf
stc
mov
jl
das
lahf
in
jb
mov
inc
shl
push
jne
shl
mov
adc
push
gs
ret
mov
cmps
or
je
icebp
out
lfs
cdq
sbb
pushf
mov
lods
cmp
pusha
ss
sbb
sbb
dec
mov
sbb
dec
pop
mov
xchg
shl
xor
or
mov
ret
fdiv
loopne
rcl
jecxz
and
div
sahf
bswap
jp
adc
push
jnp
dec
nop
call
cli
push
in
lds
inc
cmp
repnz
lds
pop
fimul
mul
or
sub
(bad)
mov
fsub
mov
push
imul
scas
jl
mov
pop
xchg
mov
(bad)
mov
int
sub
xor
add
ins
repnz
cmp
ds
daa
jno
pushf
fisubr
mov
jbe
xchg
scas
das
ja
sub
out
xlat
out
jo
fucom
or
mov
jns
adc
movs
mov
je
mov
ss
cmp
ret
jge
inc
xchg
jnp
cmc
mov
pushf
jle
cli
jno
loopne
mov
call
dec
ds
jl
push
sbb
xchg
sub
sbb
inc
fstp
pop
adc
dec
lods
call
clc
clc
fistp
cmp
or
inc
stos
movs
gs
cmp
mov
shr
gs
inc
add
mov
fcomp
int
pop
or
lods
and
das
pop
ror
shr
ins
sub
xchg
add
repz
(bad)
and
dec
jo
or
fsubr
mov
inc
xchg
shl
xchg
inc
int3
aam
outs
add
ja
pop
js
jnp
and
ss
lahf
jae
jl
cmp
in
dec
lahf
inc
jp
sbb
in
in
dec
cmp
mov
gs
or
or
inc
cmp
cmp
int
sub
pop
dec
xchg
fldcw
push
mov
push
into
iret
mov
std
xor
aas
ret
daa
je
or
icebp
iret
mov
jp
or
(bad)
cmp
add
jbe
imul
(bad)
push
mov
cs
dec
inc
xchg
xor
popa
mov
gs
mov
or
cmp
stc
pop
fwait
xchg
adc
xor
inc
out
jge
mov
fild
ss
mov
outs
fisttp
ins
jmp
xor
shl
mov
in
fwait
outs
xor
adc
push
add
push
iret
and
mov
inc
popa
into
ret
adc
int3
icebp
lahf
(bad)
lea
xor
into
fld
popf
jno
jb
inc
cmps
mov
push
fsubr
xchg
cmp
lahf
enter
ss
xor
test
hlt
xor
lds
call
mov
stos
jae
stos
mov
iret
pop
loop
pusha
or
fisubr
(bad)
and
jnp
aad
das
jo
cmps
add
xor
and
mov
cmp
or
adc
push
sbb
mov
jno
dec
adc
(bad)
jle
jbe
push
xchg
push
add
cmp
(bad)
sbb
rcr
jns
xchg
sahf
out
push
pop
xchg
aas
enter
lods
jno
adc
inc
mov
test
call
call
dec
push
xor
jg
dec
fld
sub
enter
retf
push
les
xor
pop
mov
inc
mov
clc
push
out
jmp
ret
push
sar
dec
push
test
arpl
cmp
leave
and
xchg
push
dec
clc
into
add
(bad)
(bad)
jno
pop
mov
aaa
push
pop
push
repnz
dec
pop
out
and
and
(bad)
dec
test
outs
inc
and
or
in
sbb
retf
dec
inc
bswap
add
xlat
lods
scas
or
dec
lods
dec
addr16
loop
add
xchg
or
clc
aaa
add
jbe
(bad)
sub
(bad)
fild
pop
in
or
jecxz
fld
and
and
outs
or
loope
ret
pop
(bad)
cmps
cmp
xchg
out
fimul
or
int
fisttp
jns
xchg
lahf
mov
pop
iret
xor
out
cmp
cmp
jno
outs
pop
or
add
xor
xchg
shl
sub
icebp
enter
add
iret
sbb
jmp
mov
mov
sub
xchg
mov
fcomip
and
push
repnz
inc
out
sbb
(bad)
(bad)
les
popa
cmp
es
adc
add
in
aas
and
shr
shl
jns
repnz
or
jb
cdq
cli
jae
push
shl
inc
jae
cmp
jmp
stc
cmps
out
aaa
imul
or
mov
or
call
cld
ds
sub
lods
aam
scas
test
sbb
test
xchg
(bad)
push
idiv
jb
(bad)
(bad)
dec
loopne
dec
int3
sbb
xor
mov
stc
stc
push
ins
and
fisub
push
and
(bad)
in
imul
sub
outs
push
xchg
sub
cwde
les
jg
das
xchg
mov
sbb
pop
mov
cs
data16
(bad)
or
jp
movs
cld
(bad)
push
push
jl
adc
adc
call
lods
mov
xor
scas
sub
sbb
xchg
das
mov
push
jno
fcomp
lock
xchg
das
and
xchg
arpl
retf
dec
dec
shl
cwde
imul
sbb
clc
test
(bad)
push
in
ins
enter
push
cmps
repnz
sub
jl
push
scas
ss
or
outs
pop
add
or
(bad)
mov
add
mov
push
popa
inc
xchg
sbb
loope
addr16
inc
adc
and
pop
ja
xor
iret
outs
dec
es
xor
push
cmps
iret
dec
xchg
inc
adc
lahf
push
in
je
imul
xor
and
adc
popf
shl
pusha
and
xchg
dec
push
inc
bound
adc
je
out
imul
js
jne
pop
xchg
rol
sub
sub
xor
push
loopne
sbb
lahf
mov
dec
retf
std
pop
mov
rol
daa
int3
std
call
sbb
xchg
pop
sahf
sub
mov
fwait
aam
mov
nop
fucomip
sub
cmp
pop
loopne
or
lods
jmp
sub
add
mov
pusha
popf
or
pop
cmp
jno
div
movs
or
jo
sub
jl
ins
loope
js
jno
out
test
lea
jmp
out
mov
fstp
pop
sub
mov
shr
rol
aam
add
pop
pushf
enter
movs
mov
xlat
adc
sub
fimul
push
(bad)
xchg
test
mov
jmp
or
pop
leave
int
cmp
pop
ds
xor
mov
or
inc
xchg
shl
adc
stos
popa
movs
test
sbb
daa
stc
mov
rcr
push
mov
push
ret
ror
cwde
dec
sti
pop
jns
cld
cmp
fisub
mov
cmc
popf
sub
aam
out
ficomp
mul
and
and
out
jmp
xchg
js
xor
xor
push
push
pop
aaa
sti
jl
push
iret
outs
mov
pusha
and
imul
inc
xor
int
js
or
add
js
and
dec
inc
es
mov
jo
fxch
call
(bad)
xchg
dec
es
fnstsw
call
inc
cmp
inc
xor
lea
loop
mov
and
fild
lds
mov
rol
sbb
xchg
stos
and
push
fbstp
and
inc
jp
rcr
in
stc
xchg
mov
mov
in
pop
jns
into
add
sub
jns
shl
cmp
sub
cmc
adc
idiv
pop
rol
addr16
lea
pop
xchg
inc
dec
mov
fwait
hlt
sbb
jmp
popf
inc
fcmove
add
sbb
jmp
mov
push
adc
lods
pop
fwait
loop
sub
xchg
shl
cmps
jecxz
fbld
les
mov
fwait
jns
not
dec
xchg
adc
adc
test
sub
mov
xchg
pop
fld
lods
push
cdq
mov
(bad)
jmp
addr16
inc
stos
jnp
cmp
cmp
dec
pop
mov
cmp
neg
xchg
shl
sub
adc
xor
(bad)
xchg
jbe
outs
cmp
and
into
pusha
inc
cld
or
mov
mov
jbe
rcr
jb
push
ins
test
in
mov
sahf
mov
stc
add
shl
lahf
neg
or
(bad)
ret
or
sub
std
mov
cmp
das
cmp
and
iret
mov
add
cld
sbb
xor
fsub
loopne
test
cmp
scas
ret
cmp
add
xor
dec
or
test
(bad)
xor
push
xchg
jmp
aam
jmp
pusha
jle
gs
and
mov
icebp
cmp
inc
xor
popa
retf
shl
push
int
xchg
fist
lea
jmp
sbb
mov
sub
fdiv
lods
xchg
xor
sar
cmps
jnp
xchg
(bad)
ror
js
pusha
jnp
cmp
push
sub
in
xor
dec
pop
mov
jns
cmp
imul
mov
clc
sub
inc
mov
jl
mov
not
jmp
xor
cmc
mov
or
jecxz
arpl
and
outs
mov
inc
cmps
xor
push
js
fidivr
jne
in
sbb
out
jmp
mov
jg
retf
cli
sub
or
mov
cmp
test
sub
pop
ror
and
js
stos
adc
mov
(bad)
imul
aad
or
push
dec
push
data16
pop
stos
mov
mov
test
fdiv
push
ror
movs
mov
inc
mov
outs
adc
xor
dec
jp
arpl
jg
mov
mov
pop
push
rol
pop
or
repnz
push
fstp
lea
or
ins
adc
fmul
or
jnp
mov
cmp
fcomp
jg
stc
int
jmp
push
mov
stos
movs
repnz
push
cdq
(bad)
aaa
push
cld
int
addr16
and
jecxz
call
jp
cmp
mov
push
xor
cwde
movups
pop
jb
and
shl
sub
adc
push
in
inc
nop
cmp
and
push
adc
arpl
xchg
jmp
mov
addr16
push
inc
and
les
mov
(bad)
ds
xlat
pusha
inc
arpl
jne
scas
stos
lahf
xor
or
in
sbb
mov
inc
repz
mov
out
inc
call
(bad)
scas
mov
mov
shr
push
loope
les
inc
mov
pop
mov
scas
or
add
mov
bound
dec
test
adc
and
cmp
dec
jb
mov
fsub
std
jmp
pop
push
dec
shl
leave
fucompp
add
adc
xor
clc
mov
popa
mov
xchg
mov
jns
aad
(bad)
je
and
mov
pop
add
and
jmp
push
hlt
and
jmp
mov
ja
fimul
aam
cwde
or
lods
adc
mul
sub
(bad)
lock
das
xor
jbe
ins
or
aas
test
sub
lea
adc
(bad)
mov
imul
ins
int3
call
(bad)
mov
jns
stos
neg
and
inc
shl
out
sub
dec
cmp
push
mov
push
xchg
(bad)
mov
or
jmp
dec
mov
push
(bad)
jmp
xchg
clc
iret
jmp
enter
xchg
outs
push
sub
out
stos
movs
sub
mov
cmp
cmp
imul
cli
or
dec
xchg
fild
leave
fistp
cmps
mov
mov
out
repz
fsubr
hlt
daa
push
push
pop
into
jb
mov
rcr
jp
and
inc
(bad)
adc
hlt
cdq
cmps
pop
test
lods
mov
aaa
inc
call
cmps
daa
add
push
fstp
jno
mov
sub
mov
push
into
jns
jns
dec
and
inc
(bad)
in
sar
mov
or
sbb
push
gs
pop
(bad)
mov
adc
xchg
push
or
lds
fcomi
hlt
jle
movs
xor
lock
inc
sbb
add
out
ret
scas
dec
aam
jecxz
(bad)
icebp
aas
out
mov
mov
jp
sub
or
adc
movs
sbb
sub
or
test
loopne
or
mov
les
pop
pop
mov
mov
arpl
jle
sbb
pop
enter
(bad)
std
loop
dec
push
jle
or
jg
sub
fcomp
rol
jl
loope
mov
or
sub
sbb
or
jb
inc
inc
loop
jo
pop
ret
mov
inc
mov
lahf
dec
mov
cmp
gs
aam
(bad)
fistp
add
cmps
ret
fwait
add
hlt
add
ret
jae
movs
sbb
dec
sbb
into
imul
(bad)
ja
dec
imul
out
xor
add
fidivr
dec
mov
adc
mov
push
(bad)
(bad)
mov
push
nop
or
xlat
js
inc
les
clc
mov
mov
enter
aaa
inc
dec
adc
movs
imul
mov
jo
and
jmp
pop
xchg
mov
push
push
pop
loop
test
or
test
loop
jl
xchg
cdq
inc
add
add
sbb
mov
and
push
mov
leave
in
movs
in
cmp
(bad)
mov
outs
adc
movq
call
js
jmp
jnp
or
cmp
test
dec
add
dec
hlt
(bad)
cli
leave
mov
retf
push
and
hlt
pop
mov
pop
in
mov
ret
out
jns
mov
cmp
and
call
cmps
inc
dec
mov
(bad)
cmp
sub
add
mov
out
test
mov
les
ins
push
aaa
in
push
cmp
jnp
push
(bad)
sar
ret
or
stos
stc
add
mov
inc
retf
out
pop
dec
add
sti
mov
out
in
test
pop
inc
aam
mov
xchg
inc
mov
call
jmp
aad
shr
add
sar
mov
test
ret
sub
repnz
xlat
dec
or
mov
out
shl
add
es
popa
cmp
xchg
jns
scas
fstp
jnp
sbb
sti
rcr
mov
jg
or
and
pop
repz
pop
xchg
daa
mov
cmc
les
sti
nop
push
or
imul
out
mov
jmp
sub
sbb
sub
das
rcr
retf
outs
clc
pop
xchg
cld
enter
push
and
sbb
stc
nop
movs
out
mov
js
inc
enter
sub
retf
nop
add
pop
mov
jg
shl
adc
sub
ss
xor
mov
mov
dec
dec
push
loop
pop
or
mov
dec
cmp
cmp
fs
pop
and
nop
je
ret
jl
inc
add
jae
mov
xor
xor
mov
lds
and
jle
jno
cmp
or
inc
add
jge
cmp
push
outs
movs
ins
fisubr
retf
(bad)
pusha
jg
fcom
stos
pop
es
mov
cmp
in
xchg
gs
in
stos
xchg
jmp
into
dec
arpl
dec
push
ins
jmp
cs
stos
adc
das
cmp
cmp
(bad)
in
cmp
test
push
ins
mov
or
fs
inc
stos
test
inc
cmovbe
inc
mov
test
fwait
jo
pop
ficom
push
int
mov
imul
push
cwde
xchg
jb
repnz
(bad)
(bad)
(bad)
das
data16
mov
mov
sahf
push
xlat
and
iret
xor
add
fwait
nop
adc
rcl
adc
loope
shl
sub
icebp
jno
jl
sahf
sub
and
push
cmp
jnp
cmc
out
and
aad
push
ja
mov
and
sbb
in
jge
in
scas
cmps
push
sbb
mov
push
xlat
iret
adc
mov
and
cmp
sbb
cmc
and
(bad)
inc
inc
scas
sbb
stc
arpl
xor
push
dec
inc
or
push
mov
mov
mov
push
xchg
pushf
inc
jmp
cmp
cmp
sbb
les
push
mov
dec
in
dec
addr16
es
bound
nop
mov
ret
sbb
or
sbb
xchg
sahf
movs
inc
add
add
fsub
mov
nop
dec
cmc
pop
add
cmp
cld
cmp
cmp
int3
push
add
sub
xor
mov
dec
ss
(bad)
mov
jmp
pop
sti
and
jno
in
sub
cmp
inc
inc
jl
pop
add
imul
xor
push
les
inc
pusha
cmc
jae
sbb
popf
or
push
je
(bad)
stos
lahf
mov
ins
push
shl
cmp
ds
mov
adc
or
pop
ror
sbb
or
add
push
nop
push
jmp
xor
pop
iret
push
retf
mov
loopne
xor
push
xor
cmp
add
ret
dec
out
adc
pop
dec
je
push
ins
xchg
call
or
mov
test
mov
mov
cmp
pop
inc
leave
not
call
xlat
lds
jle
pop
xchg
mov
dec
mov
add
retf
push
sub
addr16
je
jnp
push
add
cmp
xor
pop
jle
iret
mov
adc
pushf
jae
cmp
jne
jmp
shr
nop
gs
pop
lods
(bad)
or
jno
es
(bad)
data16
das
popa
push
sbb
jae
arpl
lahf
mov
jae
cmp
or
mov
inc
adc
jl
(bad)
or
adc
cmp
inc
or
stos
xor
push
ja
adc
retf
or
xor
sbb
pop
sub
sbb
push
dec
int3
push
mov
xchg
stos
xchg
jo
lock
sbb
xor
push
stc
jle
pop
xchg
xchg
cmp
iret
jmp
xor
ror
sub
call
jge
aaa
(bad)
(bad)
mov
inc
inc
inc
jmp
and
test
int3
shr
push
inc
fs
pop
pop
clc
call
fistp
xor
or
rcl
rol
mov
and
sbb
jle
inc
push
mov
in
dec
and
or
fsub
cwde
and
xor
sub
or
sbb
test
and
jmp
dec
adc
js
in
pushf
add
push
sar
loope
lock
jmp
cmps
dec
ins
push
pop
retf
nop
daa
jne
out
jbe
add
mov
sbb
scas
scas
xchg
jns
test
sbb
xchg
sub
sbb
xor
scas
std
push
inc
cmc
imul
ss
sub
inc
test
in
outs
add
xor
test
int3
out
push
push
add
rcl
xchg
lea
add
ins
sbb
test
sub
push
sub
(bad)
sar
xchg
mov
sbb
cwde
aas
jbe
dec
adc
sub
gs
iret
shr
jmp
test
popf
jecxz
push
dec
push
and
dec
test
hlt
jmp
cmps
das
jecxz
mov
fisttp
sbb
in
out
jb
and
push
pop
pop
dec
mov
mov
clc
push
aaa
pop
jecxz
fcompp
mov
or
jno
ins
outs
fdiv
mov
(bad)
aas
ds
loope
sti
cwde
push
(bad)
jae
or
jbe
push
sub
adc
(bad)
inc
shr
pop
pop
stc
icebp
aad
sbb
jle
xchg
cmp
push
fldcw
ins
scas
test
int
pop
adc
xor
in
jbe
sub
out
test
mov
inc
arpl
popf
rol
push
and
xor
jb
inc
cmp
jne
cmps
dec
dec
scas
cmps
or
iret
jns
pop
js
in
mov
js
dec
aam
jle
lahf
out
(bad)
push
mov
jmp
mov
mov
imul
jg
push
imul
movs
adc
jae
(bad)
out
mov
mov
lods
sbb
adc
fcmovnbe
xlat
cld
or
int
adc
in
mov
xlat
mov
js
add
mov
neg
ins
pop
jp
je
xchg
scas
imul
pop
cdq
mov
dec
adc
stc
jecxz
daa
not
je
into
cld
push
adc
pop
pop
xchg
shl
pop
bound
mov
pop
push
adc
cdq
pushf
push
push
leave
dec
mov
ror
shl
sti
outs
and
scas
dec
data16
rcr
xor
cmp
xchg
jge
data16
test
ins
jo
test
gs
or
jl
ret
pop
xchg
push
scas
ret
fwait
mov
fimul
addr16
out
mov
imul
shl
test
dec
mov
popa
ja
int3
inc
lock
dec
jl
xor
aas
scas
and
mov
sti
lea
jae
pop
mov
arpl
inc
inc
and
pop
jmp
cwde
xor
cs
ret
ins
jmp
bound
fstp
sbb
mov
nop
dec
aad
xchg
or
aaa
mov
aad
add
inc
leave
mov
mov
mov
aad
mov
jne
(bad)
stc
ja
pop
out
push
sbb
sub
pop
mov
or
test
inc
xchg
aaa
adc
jl
fs
push
fild
pop
jns
int3
enter
sbb
les
sar
ins
retf
call
push
mov
addr16
sub
mov
xor
mov
mov
jno
pop
retf
inc
and
xor
int
imul
js
repz
lods
or
iret
and
rol
xchg
scas
adc
pop
mov
sub
mov
fidiv
out
adc
call
test
movs
inc
call
pop
out
and
pop
xchg
jle
jmp
es
ror
cs
dec
adc
div
cmp
mov
xor
sbb
ret
es
pop
jnp
mov
ins
jecxz
out
lock
cmps
dec
rcr
in
(bad)
push
cld
lods
cld
hlt
scas
mov
push
icebp
mov
add
pop
xor
mov
inc
cmp
or
fdivr
pop
call
(bad)
sbb
push
cwde
adc
cwde
and
pop
test
mov
retf
cmc
mov
dec
sti
pop
dec
aas
out
aad
dec
mov
cli
test
sbb
or
sub
aas
pushf
xchg
iret
ss
or
pop
sti
retf
mov
xor
jg
fwait
lock
push
gs
or
inc
ror
sub
cmp
call
sbb
hlt
and
lea
push
cmp
ficomp
(bad)
mov
ds
icebp
test
or
sbb
adc
xor
sbb
les
aad
inc
ror
or
in
data16
dec
inc
mov
dec
in
jg
fst
jbe
lods
jns
xor
adc
popa
xchg
in
arpl
pop
aam
mov
adc
xor
test
pusha
inc
and
sbb
mov
mov
ss
add
stos
or
jecxz
repnz
test
add
imul
out
mov
es
aad
sub
add
(bad)
fs
xor
xor
cmps
push
xor
loope
dec
dec
out
popa
xchg
sbb
lahf
inc
and
inc
jp
mov
add
jmp
xor
jmp
and
aaa
inc
and
out
add
pop
jecxz
and
daa
add
scas
mov
arpl
adc
test
dec
add
inc
fwait
loop
cmc
jnp
ins
push
inc
inc
ret
inc
pop
pusha
adc
not
out
repnz
jne
push
lods
rcr
cdq
test
push
inc
fnsave
int3
fimul
and
mov
enter
fistp
hlt
sub
loope
shl
dec
hlt
push
jns
jle
and
or
dec
adc
jne
adc
pop
mov
inc
out
lahf
aad
shr
inc
and
in
out
inc
aas
cwde
ja
sub
stos
xor
push
ins
repnz
mov
mov
sbb
aas
aas
pusha
dec
lock
call
jmp
add
cmp
add
retf
(bad)
sbb
inc
mov
inc
xchg
xchg
push
and
ror
leave
dec
lods
fisttp
ss
cwde
js
mov
sti
mov
inc
sbb
mov
pop
sahf
maxps
fsub
leave
mov
inc
sbb
jae
mov
lock
(bad)
addr16
fadd
gs
in
lods
and
arpl
dec
push
xchg
inc
mov
mov
rol
mov
xchg
inc
hlt
dec
mov
mov
leave
inc
mov
sbb
fcom
mov
xchg
pop
daa
sbb
xchg
nop
sbb
mov
mov
jne
into
xchg
inc
lea
cmps
bound
repnz
addr16
mov
lods
out
mov
ins
pop
pop
push
in
fstp
popa
gs
pop
mov
out
sub
add
sbb
sahf
sbb
pop
or
ret
xchg
fild
pop
popf
xrelease
addr16
test
sbb
sub
stos
mov
retf
fmul
out
hlt
xor
movs
sbb
(bad)
sub
stos
mov
jg
cmp
scas
test
and
(bad)
inc
cmp
inc
xchg
popa
out
pop
jnp
enter
mov
(bad)
push
dec
jmp
or
sbb
pop
sub
mov
neg
pop
or
shl
mov
cs
jno
and
movs
cmp
xor
pop
je
jg
xor
pop
adc
(bad)
adc
inc
sub
sahf
test
iret
xchg
mov
cmp
daa
call
fiadd
and
out
mov
mov
jns
and
stos
mov
mov
push
xchg
jge
cmc
and
mov
cdq
cld
or
cs
clc
pop
and
fisttp
scas
push
test
mov
mov
leave
cmps
adc
xchg
push
xchg
sub
cs
cmp
pop
test
pop
aam
popa
outs
mov
in
imul
stos
ins
pop
retf
lea
adc
jl
push
jecxz
mov
inc
sub
sub
cmp
outs
popa
and
sbb
sahf
(bad)
test
inc
or
int3
ret
lock
hlt
or
mov
retf
dec
call
cmp
mov
add
cli
shl
sti
mov
add
inc
or
pop
cmp
mov
pop
dec
bound
inc
push
mov
cmp
rcl
ds
jmp
(bad)
xchg
dec
out
mov
sub
imul
add
cwde
jp
imul
rcl
mov
push
adc
cmp
movs
xchg
cmc
ret
cmp
mov
aaa
mov
mov
pop
std
scas
inc
mov
unpckhps
xchg
xchg
sub
inc
pmuludq
not
push
jecxz
mov
add
into
adc
mov
mov
pop
cmp
ret
(bad)
test
push
push
adc
jmp
imul
cmp
push
jmp
sar
push
xchg
daa
inc
pop
lock
ins
out
sar
jmp
in
jg
imul
cmps
jmp
lods
loopne
pop
in
ficom
pop
push
jmp
je
stos
adc
cmp
out
retf
das
retf
jg
jl
lock
std
hlt
xchg
sbb
and
mov
jnp
mov
out
push
adc
ds
pop
arpl
lods
in
sub
sbb
fcmove
push
(bad)
aam
inc
out
pop
lods
aam
sti
clc
mov
es
aam
jg
test
ret
cmp
push
lods
test
imul
dec
dec
out
outs
mov
imul
and
mov
sbb
je
aad
icebp
fidiv
mov
int
cmp
mov
in
hlt
aad
test
pop
shr
sbb
out
outs
sub
clc
adc
inc
adc
and
vprotd
call
add
adc
cld
repz
inc
sti
fsubr
js
cwde
psrld
fmul
inc
scas
cmp
mov
xchg
cmp
sub
sub
fsubp
hlt
mov
add
cmp
es
xor
push
into
imul
pop
aaa
cmc
mov
push
jmp
test
mov
jne
and
iret
xor
push
rcr
movs
add
mov
out
in
push
jmp
push
mov
in
dec
test
cs
fdiv
lea
bound
push
inc
sub
push
sbb
xchg
nop
shr
lods
and
mov
outs
stos
dec
xor
js
adc
push
call
outs
fs
ins
clc
push
sbb
in
pop
pop
repnz
aaa
push
push
rcl
cwde
jmp
mov
ret
hlt
aas
cmp
mov
movs
repz
sbb
jbe
xor
push
call
xchg
cmps
mov
and
ret
(bad)
lahf
xlat
sub
outs
rcl
push
jg
push
xchg
cmp
out
xor
aam
lods
mov
mov
movs
adc
ret
in
sbb
push
dec
push
into
ins
data16
pop
xchg
mov
lahf
pop
int3
fucomp
test
(bad)
repnz
inc
mov
push
push
pop
pop
fist
outs
or
jne
outs
xchg
inc
mov
inc
in
lods
mov
pusha
dec
gs
mov
xlat
lods
xchg
frstor
sub
sub
je
adc
rcl
mov
inc
sub
ins
push
push
cmps
cmp
pop
push
pop
clc
mov
sar
dec
jmp
jle
in
jne
push
inc
pop
xchg
jbe
hlt
movs
sbb
adc
test
iret
jg
icebp
pop
out
shl
mov
push
sbb
mov
jns
cmp
rcr
(bad)
in
adc
push
mov
in
and
test
pop
leave
mov
inc
pop
jns
daa
and
xchg
lahf
test
or
jb
loope
jne
xchg
xchg
inc
test
ffree
mov
cmp
cdq
cli
dec
fild
in
mov
call
pop
dec
les
(bad)
pop
cmp
mov
or
pop
sub
popa
mov
and
jae
lods
icebp
xor
rcl
arpl
mov
sbb
jae
jae
add
dec
or
or
lea
jge
ss
sbb
daa
mov
inc
jo
imul
jbe
push
out
es
or
cdq
arpl
xlat
lods
sti
pop
inc
sub
test
sub
bound
cs
retf
mov
mov
ror
dec
cmp
scas
test
push
cmp
fistp
fs
adc
xor
pop
inc
adc
sti
push
out
lods
cs
repnz
or
and
hlt
out
scas
aam
in
outs
cmp
adc
retf
fcmovne
jge
enter
add
or
pop
(bad)
les
jmp
inc
jge
mov
into
mul
inc
mov
add
jecxz
jecxz
jmp
aas
in
(bad)
out
xchg
ja
ror
into
jmp
call
mov
push
jl
ja
out
add
int3
ss
jmp
sub
loopne
pop
ins
in
jne
xchg
jns
stos
mov
dec
sub
inc
inc
shr
jg
and
xor
in
or
pusha
jle
cmp
jb
ror
and
call
jo
push
retf
test
in
ds
ror
cmp
gs
cmp
dec
jl
(bad)
mov
cdq
lea
jno
mov
sub
pop
enter
inc
mov
rcr
sti
adc
das
std
and
(bad)
mov
add
pop
sbb
and
cmp
shl
fisttp
sbb
mov
nop
imul
jno
pop
dec
push
pop
in
cdq
mov
(bad)
mov
push
xchg
cmp
cmp
xchg
jg
push
adc
push
sub
mov
lock
stos
test
sar
movs
loope
lods
loope
jge
in
cmp
mov
mov
or
movs
leave
or
xor
jg
mov
ret
sub
sub
jl
dec
pop
xchg
adc
cmp
adc
stos
clc
sbb
and
or
or
xchg
in
stos
jmp
mov
dec
cmps
jmp
ss
popf
aas
and
mov
bound
adc
scas
mov
xchg
xor
xor
and
or
jns
xchg
loop
ja
adc
adc
and
fstp
cmp
xchg
int3
int3
mov
ins
mov
mov
inc
inc
sbb
cld
and
push
fbld
lahf
add
pop
gs
js
dec
pop
jae
ret
ss
inc
pop
scas
dec
cmp
xor
mov
scas
add
sbb
cmp
scas
and
sub
jmp
aad
adc
shl
xchg
push
stc
or
shl
lock
push
adc
and
(bad)
fs
iret
aad
fwait
retf
(bad)
or
xchg
xor
add
(bad)
or
pop
push
fidivr
dec
sbb
jl
popa
out
cmp
dec
sbb
xlat
cdq
push
sahf
sbb
in
fsub
scas
in
outs
cmp
cld
mov
test
loopne
mov
movs
sub
sar
sbb
push
dec
lock
sub
in
mov
jle
inc
mov
cmp
aaa
mov
xchg
hlt
(bad)
stc
pop
aam
addr16
mov
fcomp
push
inc
push
(bad)
xlat
movs
jle
pop
mul
sbb
iret
fs
pop
data16
inc
cmc
push
and
mov
push
das
iret
sbb
loop
mov
js
popf
enter
sub
js
in
mov
out
mov
xor
lahf
pop
nop
mov
fcomp
js
gs
pusha
je
test
inc
movs
aaa
xchg
call
shl
sbb
jbe
aaa
sahf
pop
pop
adc
jb
lds
inc
cmps
(bad)
popf
shr
repnz
out
pop
fidivr
push
mov
adc
sbb
fidivr
add
aaa
cmp
(bad)
pop
mov
popf
dec
int
push
mov
es
jecxz
lods
into
sub
ins
jmp
mul
dec
cdq
pushf
push
mov
call
sub
dec
test
sbb
out
or
adc
cwde
pop
and
or
push
fstp
xor
adc
nop
shr
mov
push
push
aad
neg
lahf
cmp
aaa
mov
in
lods
(bad)
repz
inc
xchg
inc
pop
ds
xor
mov
ja
jg
int3
push
or
push
dec
adc
sub
jae
into
sahf
loop
sub
cld
mov
pop
not
and
and
fsub
dec
js
fisttp
mov
mov
das
and
sub
jno
dec
jmp
xchg
xor
fldenv
sti
pop
test
sub
adc
push
jmp
and
sar
adc
out
pop
adc
outs
jl
daa
fimul
shr
ja
test
inc
dec
dec
ret
test
int
pop
jbe
outs
xor
xchg
push
stos
out
dec
pop
xchg
jo
mov
ficomp
in
shl
gs
pop
cld
mov
sahf
sbb
(bad)
and
pop
pop
scas
adc
fimul
imul
and
or
and
cs
or
jmp
mov
rol
sbb
or
mov
or
popf
adc
lods
and
inc
inc
push
retf
jo
xchg
mov
sbb
pushf
outs
mov
pop
sbb
in
pop
std
out
cs
hlt
inc
cmps
cmc
lods
sub
jecxz
lahf
loop
pushf
in
mov
ins
out
or
jecxz
fild
fiadd
rol
add
lods
jmp
sub
sbb
adc
mov
xor
test
out
pushf
or
mov
xor
xchg
hlt
ret
iret
or
cld
dec
xchg
jne
(bad)
push
leave
and
ja
xor
fcom
sub
push
jle
sbb
call
lods
jae
add
add
xchg
in
cmp
inc
push
ds
sbb
stos
jbe
sbb
(bad)
arpl
fdiv
push
sbb
or
rcr
ins
movs
clc
js
out
push
dec
test
jge
add
or
stc
aam
aad
out
(bad)
lock
(bad)
mov
(bad)
addr16
cmc
jo
outs
push
add
cmp
mov
lock
mov
dec
lahf
(bad)
mov
mov
(bad)
pop
pop
sub
xlat
outs
jecxz
xchg
int
inc
push
sar
add
fsub
ret
mov
inc
pop
(bad)
hlt
inc
add
stos
xchg
call
pusha
pop
out
sub
mov
xor
mov
out
jl
sub
xor
push
outs
cwde
push
hlt
xor
gs
sbb
shl
pusha
enter
fs
jae
out
adc
imul
inc
jno
shr
pop
addr16
in
cli
cmps
xor
inc
mov
xor
sbb
pop
push
mov
xor
pop
(bad)
stos
add
(bad)
jmp
lahf
ss
push
push
mul
std
iret
sti
push
lock
mov
add
and
xchg
loopne
bound
adc
pop
inc
dec
cmp
xor
and
repnz
retf
js
push
stos
fisub
sbb
mov
cmps
mov
mov
aas
aam
push
push
jmp
addr16
clc
jg
xlat
shr
xor
movs
and
inc
mov
pop
adc
and
jg
sub
xchg
push
test
and
lds
mov
add
pop
fidiv
stos
mov
iret
mov
not
test
inc
popa
jnp
inc
fst
xchg
or
(bad)
mov
push
fld
stos
cwde
push
addr16
jp
sub
jle
imul
jecxz
mov
mov
pushf
pop
sbb
sti
loope
and
pop
mov
xchg
mov
mov
retf
mov
sub
dec
popa
ds
sti
mov
pop
mov
sbb
or
mov
daa
push
addr16
sub
retf
cmp
mov
outs
push
pop
(bad)
cdq
ret
lods
mov
pop
jg
lock
xor
and
or
pop
out
or
jno
adc
int3
sub
and
sbb
leave
add
sbb
loope
mov
popa
aaa
into
add
xchg
stos
or
sub
retf
jge
repz
sbb
out
bnd
int
xchg
dec
sub
into
fcmovnbe
std
add
fadd
and
imul
xor
mov
lods
push
nop
(bad)
sbb
push
sbb
mov
inc
dec
jo
mov
adc
leave
frstor
test
add
jmp
cld
push
fistp
mov
(bad)
sub
aaa
mov
mul
lea
pusha
bound
mov
daa
push
and
loop
dec
les
cmc
sub
add
cmp
pop
es
jmp
sub
lods
test
mov
inc
jmp
test
push
or
jne
adc
js
pop
cli
out
js
or
xchg
dec
imul
retf
sbb
mov
arpl
pop
xchg
mov
pop
inc
add
cli
adc
sbb
pop
sbb
or
jae
cmc
js
ds
movs
movs
mov
jns
cmp
sub
imul
js
lock
xlat
dec
mov
dec
je
sub
add
xchg
mov
in
cmp
sub
mov
adc
into
add
js
stos
pop
in
adc
fistp
dec
lods
jl
adc
pushf
dec
dec
dec
in
movs
xor
lods
leave
ss
pop
jge
dec
and
jae
or
adc
scas
test
jnp
int3
lock
pop
and
ins
push
add
jno
xor
loopne
outs
sub
mov
push
or
push
sbb
or
add
or
inc
pop
sub
cld
scas
je
fcom
xor
jge
mov
lock
int3
or
inc
pop
lea
cld
leave
mov
test
cmp
mov
mov
inc
nop
hlt
bound
mov
jge
sbb
dec
(bad)
ss
ins
fidiv
fst
sbb
(bad)
sub
inc
pop
jle
push
out
mov
(bad)
out
cmp
and
out
scas
cmps
fst
push
inc
aad
cld
sub
push
cmp
clc
pop
pushf
pusha
push
mov
mov
out
add
pop
dec
call
fstp
fcom
mov
pop
push
add
ret
les
sbb
pusha
or
pop
(bad)
pop
xor
lods
jge
inc
into
out
inc
(bad)
inc
cmps
shl
adc
rcl
call
(bad)
dec
add
push
cmps
in
aaa
cmp
test
or
mov
kunpckdq
and
and
retf
sbb
inc
push
jo
push
aam
lahf
dec
xor
pop
xchg
int
loope
ds
mov
scas
mov
mov
fiadd
aad
xor
shr
dec
xlat
cmc
js
call
lods
cmp
arpl
dec
sub
call
icebp
movhps
or
into
mov
sar
adc
lea
xchg
push
(bad)
repnz
pop
stos
cmp
and
inc
in
sbb
push
pop
add
int3
adc
lods
ficomp
or
push
out
or
hlt
or
sbb
fs
mov
pusha
aas
sub
or
das
inc
fldcw
test
add
(bad)
or
mov
xlat
fstp
loop
ins
push
add
lea
jns
cmps
lahf
shl
inc
or
pop
add
dec
in
stos
loop
and
imul
push
cmp
jecxz
jl
clc
jbe
inc
and
mov
sahf
leave
adc
add
fiadd
push
lahf
cmp
or
(bad)
pop
out
push
inc
(bad)
mov
jo
shl
loop
rcr
push
cwde
jbe
pop
jmp
cmp
inc
fcom
stc
cmp
dec
push
dec
ret
fs
mov
cmps
mov
jb
jge
jbe
pop
ds
and
loopne
mov
inc
mov
and
imul
jb
xchg
adc
sbb
xor
shl
int3
pop
pop
and
jmp
sub
add
out
mov
sbb
lock
aad
popf
out
push
outs
fcomp
inc
sub
pop
cmc
ds
push
pushf
xchg
test
sub
push
in
xchg
arpl
je
cmp
jl
rcl
mov
push
add
sbb
mov
(bad)
pop
adc
or
dec
js
jmp
stos
dec
cwde
mov
in
sbb
dec
xor
mov
bound
call
add
xor
xchg
fistp
jo
pushf
push
or
sbb
loop
mov
leave
out
(bad)
nop
lock
arpl
ret
arpl
pusha
mov
(bad)
int
xchg
loope
pop
cmps
arpl
shr
jne
jmp
cld
dec
push
test
sahf
(bad)
out
cmc
jns
pop
fdivr
and
cwde
add
mov
cmp
mov
xchg
cmps
xor
inc
iret
inc
jmp
in
int
lahf
push
cs
fs
xchg
adc
daa
fisttp
aaa
cmc
mov
mul
hlt
xchg
loope
cdq
std
jne
ds
icebp
aam
cmp
mov
jns
xor
or
add
xchg
test
movs
adc
fwait
shl
imul
repz
sbb
cdq
xor
movs
jno
push
fdiv
xchg
adc
push
adc
int3
into
or
loopne
pop
adc
mov
retf
cwde
pop
stos
jae
fidivr
sub
out
dec
sub
and
mov
push
fld
pop
(bad)
ja
sub
push
mov
fsubr
jne
sbb
push
scas
sbb
in
pop
cmp
jae
mov
ds
iret
add
out
aad
aaa
rcr
popa
(bad)
fimul
push
pop
fisub
mov
jb
xchg
scas
lods
xlat
push
and
out
jne
pop
push
lahf
mov
adc
cmp
jns
push
test
clc
outs
lea
dec
test
out
push
xor
sub
adc
clc
xchg
test
xchg
lea
xchg
gs
mov
popa
jl
pop
daa
sbb
push
pop
add
pop
data16
lods
add
jmp
es
rcl
xor
dec
dec
lods
xchg
loopne
mov
call
repnz
popa
xor
shr
fst
mov
mov
inc
inc
cdq
mov
rcr
scas
push
xchg
cmp
dec
cmp
mov
mov
cmps
adc
cli
(bad)
ds
aad
rol
pushf
add
fnsave
push
(bad)
or
mov
retf
sbb
mov
push
(bad)
cld
jo
or
imul
mov
div
dec
dec
and
sar
mov
pop
pop
adc
loopne
repz
stos
jmp
lahf
push
ror
jg
adc
xchg
add
add
mov
sub
and
cmps
xchg
add
call
loope
push
mov
add
sub
scas
sub
add
cwde
adc
mov
out
jle
sbb
loope
les
inc
dec
or
add
jle
mov
cmp
mov
and
xchg
pusha
stos
shr
clc
test
cmp
sub
push
jl
in
scas
xchg
inc
dec
sar
pop
or
cmps
mov
and
jnp
pop
mov
push
dec
es
adc
leave
hlt
(bad)
jmp
jae
mov
adc
cmps
cmp
stc
cwde
popa
fmul
sub
leave
dec
cmps
js
pop
inc
(bad)
and
xchg
xchg
loopne
daa
out
mov
add
mov
xor
adc
sbb
jle
mov
mov
gs
bound
dec
jg
xchg
loopne
add
imul
lds
dec
movs
xlat
lahf
sbb
xor
dec
xlat
mov
push
jnp
inc
shr
mov
fs
xor
jmp
mov
mov
dec
add
ror
push
and
cmps
sahf
or
retf
or
xchg
div
and
neg
icebp
iret
out
xor
repnz
js
lds
fisubr
fld
mov
std
retf
jecxz
mov
(bad)
std
fmul
pop
icebp
movs
push
sti
lock
jg
into
scas
(bad)
cmp
xchg
and
jbe
pop
stc
imul
nop
rol
leave
inc
test
stos
mov
in
mov
jae
stos
ds
arpl
mov
loope
data16
mov
add
xor
xchg
or
outs
pop
xor
push
add
mov
mov
mov
or
and
adc
pop
icebp
or
mov
sbb
xchg
fadd
popf
push
cli
(bad)
pop
pusha
les
nop
pushf
add
test
jno
rcr
pop
xor
or
push
pop
ficomp
in
mov
loope
and
xlat
push
movs
(bad)
rol
icebp
(bad)
sbb
es
movs
adc
rcl
sbb
add
into
shl
out
mov
(bad)
push
ds
les
xlat
xchg
das
xor
call
sbb
cmp
dec
jns
retf
mul
fs
fisttp
rcr
adc
push
cs
xchg
ds
mov
adc
adc
repz
xlat
cmp
cmp
sub
outs
dec
pop
(bad)
das
dec
ret
in
mov
int
sub
mov
stos
sub
or
into
mov
inc
(bad)
data16
shl
mov
leave
adc
repnz
movs
xor
inc
sub
or
sub
jg
addr16
push
aam
dec
repnz
mov
and
pop
inc
daa
add
inc
or
fnstcw
jne
out
fcom
loop
pop
dec
ins
xchg
add
fsub
pushf
adc
xor
jbe
mov
cmp
lods
imul
sub
das
test
adc
or
jecxz
jecxz
xor
push
call
test
xor
pop
push
int
xchg
shl
push
js
dec
inc
cmp
push
cli
call
(bad)
or
std
jb
sub
ins
in
mov
mov
dec
in
jmp
in
jg
(bad)
into
push
pop
mov
minps
dec
data16
dec
pop
mov
in
ja
in
jmp
mov
nop
mov
enter
mov
mov
add
push
inc
adc
pop
mov
add
ins
pop
jge
stos
pop
pop
stos
arpl
mov
jbe
pusha
nop
sbb
cmp
scas
or
ins
mov
push
sbb
pop
jp
xor
xchg
adc
push
retf
adc
clc
and
es
ret
push
xor
jg
xor
das
int3
rcr
sub
jae
lock
xor
stc
sub
jns
cdq
bound
cli
adc
pop
es
push
and
test
rol
outs
inc
cmp
inc
stos
in
sbb
push
shl
(bad)
cld
mov
push
ds
push
adc
out
nop
push
dec
fst
xor
aaa
dec
push
pop
cmp
jno
xlat
ja
in
jo
mov
mov
dec
shl
or
leave
je
fmul
stc
fs
cmp
fwait
mov
ret
sub
inc
cld
cmc
mov
pop
jg
fwait
icebp
popf
lahf
test
mov
cmc
cmc
js
rol
sti
aad
retf
cdq
rcr
mov
xor
add
push
mov
jp
push
into
je
mov
sti
in
stos
pop
sub
mov
push
pushf
mov
clc
ret
(bad)
imul
aam
mov
pusha
mov
inc
enter
mov
out
(bad)
xchg
pop
int3
mov
mov
push
out
rol
cmp
or
jp
mov
clc
int
cwde
gs
xor
ror
repz
shl
shr
sbb
xor
rol
mov
in
jae
retf
pop
(bad)
mov
jae
addr16
arpl
xor
fwait
adc
inc
(bad)
test
aad
cmp
jmp
inc
mov
dec
(bad)
call
push
and
int3
mov
jmp
adc
fdivp
nop
sbb
jns
sbb
clc
add
(bad)
pop
movs
imul
cmp
mov
dec
out
mov
jge
inc
imul
adc
loop
inc
cmp
call
das
js
push
jno
push
pop
cld
int3
int3
dec
push
shr
scas
pop
ror
and
ror
inc
fadd
(bad)
and
mov
and
xchg
fbld
pop
cmp
out
xor
popa
dec
and
stos
adc
xchg
push
jmp
push
lock
mov
dec
in
cmp
sub
cmps
or
and
arpl
enter
dec
jb
daa
sbb
pop
sahf
sub
mov
pop
mov
popf
jb
push
sbb
stos
mov
mov
in
arpl
push
push
xchg
inc
inc
jae
retf
mov
jle
jno
(bad)
dec
stc
sub
fistp
loopne
jmp
cmp
ffreep
gs
fsub
out
and
sti
test
sbb
or
pusha
mov
pushf
jmp
cmp
in
mov
jmp
call
adc
pop
fdiv
cmps
cmp
add
mov
pop
push
adc
jb
mov
inc
scas
(bad)
gs
iret
neg
pop
fucomi
xchg
xor
or
sub
xchg
aad
enter
rol
mov
fcom
mov
cmp
inc
call
daa
jl
and
mov
movs
leave
sbb
lea
cmpxchg
ss
daa
jmp
fild
sub
inc
cmc
sub
add
mov
enter
iret
jo
xor
es
push
dec
sub
adc
(bad)
mov
ss
ins
in
inc
cdq
(bad)
jmp
xchg
loop
cmp
xchg
imul
inc
fldenv
xchg
ret
sbb
shl
jbe
pop
(bad)
xchg
and
xor
fcomp
mov
cmps
(bad)
mov
add
mov
or
sbb
jmp
jp
sub
cli
sbb
retf
ins
dec
or
or
mov
adc
in
js
and
lock
jle
push
aaa
mov
sar
mov
fcomp
jecxz
jp
fs
inc
enter
pop
outs
out
inc
mov
int
loopne
add
sti
jp
loopne
mov
cmp
mov
jmp
jmp
lock
sub
loop
sbb
hlt
mov
sbb
ja
xor
dec
data16
jbe
enter
ret
lock
leave
inc
and
fcom
jno
call
push
jmp
jno
sub
cmp
dec
int
jg
push
dec
jno
dec
(bad)
adc
push
ins
pop
popa
push
push
cmps
mov
mov
cmp
jl
mov
jl
repnz
int3
sub
das
enter
sbb
mov
cmp
ret
xchg
mov
add
dec
inc
and
sbb
ins
pop
xchg
shl
int
sbb
sahf
cmps
call
retf
mov
hlt
sub
out
mov
loop
push
ror
repz
aam
in
in
inc
out
hlt
mov
mov
sub
jo
or
mov
pop
fild
push
push
retf
jo
loop
das
jle
ins
scas
sti
sbb
aam
ins
push
or
loop
jl
dec
outs
xchg
inc
pop
pop
fcomp
shr
jb
sahf
imul
jge
add
in
enter
or
mov
sti
add
adc
mov
jns
mov
push
and
les
mov
pop
push
sbb
mov
arpl
xchg
lods
sahf
outs
add
mov
dec
mov
imul
cmp
mov
mov
(bad)
aam
or
add
sbb
jg
xor
mov
mov
mov
(bad)
leave
into
add
movs
mov
inc
or
daa
mov
icebp
mov
and
dec
enter
jge
push
sub
imul
and
pop
xor
aas
mov
push
outs
xchg
aas
adc
loopne
sbb
xchg
pushf
(bad)
ds
(bad)
jmp
loopne
ins
in
cld
or
pop
push
xor
movs
push
add
mov
jmp
stc
mov
mov
mov
add
sar
lods
ficomp
push
mov
ins
test
mov
arpl
movs
arpl
rcr
pop
jmp
popw
or
in
iret
cwde
movs
inc
mov
push
mov
dec
xchg
es
out
iret
clc
mov
sbb
jl
mov
mov
xor
sub
xchg
jo
sbb
inc
or
add
(bad)
xor
inc
adc
and
popa
call
dec
inc
xchg
retf
stos
test
test
(bad)
ret
xchg
push
bound
fsubr
int3
pop
dec
bound
stos
mov
mov
hlt
or
push
fcomp
sbb
cwde
leave
stc
in
cwde
(bad)
sbb
scas
inc
xor
add
dec
out
shl
gs
sar
push
adc
enter
sar
lods
test
add
add
push
pop
sub
fldenv
rol
(bad)
mov
les
mov
sub
and
xchg
fist
mov
sbb
inc
push
xchg
mov
inc
outs
sub
sbb
rcr
retf
pop
push
pop
scas
lea
ret
or
inc
cs
jmp
add
adc
out
sub
adc
cmp
dec
fisubr
pop
mov
mov
stc
mov
into
(bad)
adc
pop
jo
shl
sbb
ret
mov
inc
lock
cmps
gs
pop
jae
bswap
cwde
jbe
sub
mov
(bad)
loopne
rcl
stos
loopne
jle
imul
mov
ins
shr
jmp
loope
cmp
xchg
dec
pop
pop
(bad)
jg
push
cmp
ret
in
fpatan
daa
in
lock
std
imul
cli
loope
std
inc
mov
in
pop
and
inc
sar
sub
test
je
xor
adc
sbb
pop
mov
cmp
pushf
mov
iret
xchg
mov
jo
pop
stc
jl
mov
and
loope
cmp
popa
test
and
and
repnz
dec
sbb
adc
std
fsub
test
dec
or
push
cmp
aas
int3
stos
mov
ss
jl
clc
inc
pop
lods
loopne
sbb
push
push
jmp
pushf
in
clc
inc
and
aaa
mov
and
inc
push
dec
ins
mov
sub
fist
cdq
pusha
sbb
or
sub
out
add
(bad)
sar
lea
rcl
adc
jb
fcomp
adc
fistp
jle
ret
shr
dec
push
jno
(bad)
inc
(bad)
cmp
mov
xor
shl
dec
ret
mov
add
mov
cmp
and
pop
xor
bound
ficomp
jecxz
sbb
out
xor
fdiv
lock
xchg
out
ficom
ss
cmps
xlat
inc
(bad)
bound
loopne
inc
out
js
loop
int
add
or
in
stos
mov
mov
mov
fst
ins
loop
pop
mov
and
add
mov
cmps
dec
out
call
xchg
mov
das
in
sbb
hlt
add
out
adc
and
(bad)
(bad)
and
out
les
jmp
adc
shr
fs
fist
fisubr
rcr
mov
fstp
jbe
jg
rcr
adc
pop
dec
mov
push
idiv
adc
adc
jne
xor
xchg
add
fstp
js
mov
mov
sub
mov
jo
fstp
mov
push
in
sub
mov
mov
sbb
neg
sti
or
push
jecxz
clc
sub
mov
jno
mov
das
fisub
cwde
inc
add
adc
hlt
cmps
jne
pop
and
pop
out
(bad)
dec
sub
mov
dec
scas
jno
shl
sub
test
cmp
jl
jge
mov
xlat
(bad)
jnp
or
movs
or
push
ror
addr16
stos
lods
cli
mov
movs
mov
test
outs
pop
xchg
icebp
(bad)
jmp
sbb
test
stos
imul
loopne
test
(bad)
mov
pop
js
pop
jne
add
sub
or
and
scas
mov
mov
jmp
xchg
(bad)
adc
rcr
popf
ret
ins
adc
jmp
aad
imul
and
(bad)
ins
push
enter
add
bound
add
ret
push
mov
mov
repz
scas
fbstp
test
out
ja
outs
loopne
call
test
cmps
or
sbb
adc
xor
jae
inc
or
sub
nop
cld
stos
inc
icebp
cmp
cmp
sub
pand
ret
out
add
or
outs
or
xchg
rcl
idiv
imul
inc
jg
aam
xchg
or
jae
jl
xor
call
add
mov
fs
fisubr
and
lea
jp
ins
xor
movs
lea
popa
adc
iret
or
cmps
push
inc
pop
ret
cmps
fdiv
jge
shr
(bad)
scas
out
cmp
push
inc
cwde
ss
jmp
adc
mov
and
(bad)
out
std
xlat
xchg
mov
int
test
cli
cmp
mov
pushf
mov
push
aam
iret
pushf
or
sub
inc
inc
cld
popf
pop
mov
push
loope
cmc
jbe
out
popf
jne
ficomp
std
int3
sbb
(bad)
mov
cs
jge
add
inc
mov
xchg
and
mov
rol
push
je
mov
or
xchg
(bad)
(bad)
aam
sbb
jbe
xchg
loope
jge
jmp
pop
leave
push
es
lods
(bad)
(bad)
arpl
pop
rcl
xchg
fild
sahf
shl
pop
inc
mov
or
(bad)
sar
mov
fcom
pop
scas
xchg
mov
adc
jge
mov
cld
jg
test
xlat
and
dec
mov
cli
(bad)
cdq
mov
sahf
fcompp
add
or
in
pusha
shr
dec
(bad)
push
fiadd
shr
in
adc
test
test
clc
in
scas
mov
and
mov
fidivr
jmp
push
dec
or
fld
dec
xlat
aam
sub
inc
mov
cmp
mov
out
add
test
push
inc
dec
adc
sbb
add
lds
xor
movs
jecxz
jne
dec
mov
cli
add
test
and
popf
outs
add
jbe
jne
inc
sub
push
pop
fist
(bad)
out
stc
addr16
arpl
pusha
ins
cmp
add
leave
inc
out
push
outs
mul
sbb
lock
dec
aam
dec
out
test
jb
adc
movs
ds
inc
push
mov
jecxz
icebp
iret
add
in
sub
pop
xchg
mov
pop
cwde
and
fstp
mov
lods
pop
fnstsw
dec
xor
inc
jp
push
cli
fimul
sbb
neg
pop
cmps
adc
jle
(bad)
adc
iret
ds
sti
out
or
imul
mov
mov
or
push
popf
jbe
ds
popf
call
mov
in
popa
add
push
repz
pop
mov
adc
call
(bad)
call
mov
adc
loop
je
test
lock
xchg
pop
jl
inc
jb
ret
adc
xchg
imul
shl
xor
mov
ja
cmps
or
retf
js
and
mov
push
cwde
js
jmp
test
stos
ret
out
push
inc
cmp
ins
adc
mov
inc
sbb
xchg
movs
mov
or
push
or
dec
fisttp
movs
lods
or
push
icebp
xchg
push
and
push
cli
dec
mov
repnz
push
js
or
jecxz
add
out
rcr
or
in
cmps
push
(bad)
adc
inc
std
or
repz
retf
sub
or
lds
cwde
int
fnsave
sbb
fdiv
mov
hlt
add
add
out
sub
dec
inc
xchg
mov
sar
gs
es
inc
(bad)
out
movs
out
rcr
cli
or
fcmove
or
sbb
ret
mov
sbb
adc
ret
inc
ins
and
push
add
mov
aas
xchg
sub
cli
cmp
cmc
ins
sub
mov
xlat
xchg
push
pop
push
sbb
popa
pop
mov
sub
rol
xchg
int
or
dec
js
aas
cmp
mov
sahf
imul
imul
add
fsubr
ror
pop
sti
std
pusha
inc
sbb
mov
mov
inc
mov
call
push
mov
fcom
adc
aam
sub
mov
fucomp
pushf
ds
and
dec
add
push
add
jmp
fld
push
addr16
dec
not
push
push
out
push
out
fs
les
enter
cmps
pop
sbb
adc
xchg
push
and
imul
in
in
retf
int3
int
push
or
cs
hlt
push
inc
(bad)
mov
repz
mov
dec
loop
inc
mov
in
xor
mov
(bad)
repnz
lds
fnstenv
jae
ror
in
inc
mov
jmp
mov
fwait
pushf
sbb
mov
pop
aaa
out
xchg
add
or
push
xchg
xchg
ins
mov
retf
(bad)
jo
jo
iret
popa
pop
arpl
mov
pop
ja
fld
xor
mov
call
loope
sar
mov
sub
fisub
enter
ds
and
in
add
scas
sti
or
test
iret
shr
test
mov
lods
mov
clc
iret
addr16
ja
pop
pusha
out
sbb
sbb
mov
inc
mov
movs
xchg
inc
test
fs
inc
lock
pop
xchg
cmp
stc
and
jb
pop
pop
nop
out
test
test
iret
and
jp
adc
mov
aaa
fist
lahf
ins
cmp
xor
call
cmp
dec
and
test
and
movs
retf
add
cmps
sbb
inc
daa
mov
xchg
xchg
enter
add
or
ja
pop
mov
xchg
adc
mov
rcl
pop
jl
add
ror
in
sub
rcl
cmp
(bad)
fnstsw
fsub
mov
out
popf
adc
adc
out
jge
daa
pusha
add
mov
push
(bad)
stos
dec
movs
cmps
movs
(bad)
popf
and
add
mov
add
xchg
dec
inc
xchg
and
in
or
jno
fild
inc
and
jecxz
xlat
arpl
fdivr
mov
retf
inc
pop
cmp
and
xor
out
pop
lods
push
daa
retf
out
jmp
in
sub
sahf
cmp
mov
sub
je
or
out
loop
leave
movs
pop
jo
adc
stc
in
cdq
cmps
lock
sbb
mov
jmp
and
sbb
and
dec
jecxz
mov
sbb
cs
popf
test
pop
lods
loop
fs
and
dec
jge
gs
cmps
dec
jns
inc
out
xchg
mov
jmp
or
hlt
(bad)
shl
arpl
dec
add
pop
test
xor
xor
sbb
sub
add
and
ds
jae
mov
xchg
ss
jg
div
rcl
mov
or
aam
pushf
dec
pop
hlt
jb
cmp
(bad)
fdiv
mov
adc
xchg
ret
call
push
out
test
sub
test
inc
or
lahf
bound
inc
adc
dec
jmp
loopne
and
sub
into
mov
adc
dec
sbb
test
in
mov
(bad)
outs
xor
call
xlat
and
push
aad
(bad)
das
push
int3
jns
cli
sbb
fisttp
pop
mov
mov
lock
adc
add
repz
jae
pusha
xor
jecxz
mov
clc
pop
mov
iret
and
cld
bound
retf
sbb
xor
das
xchg
fwait
leave
aaa
rol
jg
lea
pusha
mov
dec
je
push
xor
pop
push
push
push
loope
xor
imul
fsubrp
adc
or
(bad)
test
fdivrp
pop
lahf
sahf
out
and
arpl
pop
fsub
enter
or
repnz
jae
cmps
ins
pop
add
and
std
jmp
ds
xor
cmps
adc
out
xchg
pop
mov
xor
xchg
cmp
scas
sti
push
loope
(bad)
or
or
mov
xor
(bad)
pusha
aas
ins
sbb
dec
inc
dec
(bad)
ins
repz
outs
movs
fisttp
jnp
and
mov
cdq
push
aam
sub
popa
pushf
in
push
cmps
xor
jb
or
loopne
sbb
cmc
mov
out
jl
cdq
push
into
xchg
stos
adc
pop
xor
mov
lods
daa
jns
mov
sbb
jge
adc
push
jns
adc
add
mov
fcmovnbe
cs
lods
fisttp
mov
push
mov
lods
push
mov
adc
mul
jge
inc
jmp
call
imul
loop
jmp
retf
loopne
test
cmp
das
jmp
xor
pop
mov
shr
or
test
sub
adc
popf
lock
and
loopne
lock
test
xchg
and
jp
mov
mov
adc
add
stos
sar
cmc
push
je
and
ret
mov
ror
ins
dec
pop
mov
mov
call
lds
fstp
sahf
(bad)
jmp
stos
sbb
into
fwait
mov
sti
xchg
add
fisttp
shr
daa
adc
dec
imul
ds
mov
cmp
mov
cmp
lods
fiadd
jl
and
mov
cld
mov
push
arpl
jo
mov
jmp
nop
(bad)
cmp
mov
(bad)
repnz
push
mov
arpl
loopne
scas
sub
mov
xchg
(bad)
sbb
xchg
icebp
lahf
jo
mov
les
and
fistp
jbe
nop
scas
enter
mul
dec
popf
call
outs
pop
es
imul
mov
je
jne
push
hlt
mov
int
fisttp
mov
fild
pop
or
stos
xchg
xlat
cmc
inc
cmp
jno
jo
addr16
gs
or
icebp
mov
or
mov
inc
xchg
push
cdq
data16
int3
pop
or
push
inc
adc
mov
inc
fdivp
mov
pop
xor
test
xchg
sub
call
push
sahf
mov
daa
mov
lock
push
arpl
bound
ja
pop
or
fst
dec
sub
add
popa
out
or
inc
mov
lods
mov
(bad)
jle
inc
mov
je
sbb
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
sbb
adc
