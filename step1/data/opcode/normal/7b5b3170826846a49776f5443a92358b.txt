mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
or
jae
jge
(bad)
inc
push
push
xor
push
or
out
in
das
add
push
push
outs
out
inc
(bad)
je
cmp
(bad)
jg
aaa
ins
popa
ins
ins
std
stos
int3
mov
cmp
mov
gs
xor
fisub
cmp
das
add
jns
iret
(bad)
fidiv
shr
push
int3
fs
call
test
jb
pop
cld
out
inc
popa
push
sub
add
adc
add
ss
icebp
add
cmp
push
inc
jns
pop
add
dec
xchg
mov
sti
popa
je
jbe
dec
jae
je
lock
out
xor
ss
scas
mov
sbb
push
mov
sti
cmp
fs
mov
inc
outs
jne
mov
(bad)
out
ins
jo
aas
aam
stc
outs
jmp
jne
jb
arpl
daa
call
out
(bad)
call
jb
fdivr
es
push
xchg
retf
popa
xor
adc
das
push
imul
sub
or
mov
push
pop
enter
pop
dec
outs
outs
addr16
jne
aas
inc
mov
push
jae
mov
lock
or
or
or
xlat
and
gs
xchg
les
or
push
popa
push
xor
push
(bad)
popa
jl
pop
or
and
outs
call
ins
popa
jae
pusha
sbb
jecxz
adc
push
dec
push
adc
mov
push
add
inc
adc
(bad)
adc
inc
xor
sbb
popf
jge
inc
push
xor
dec
or
xor
sar
(bad)
push
or
pop
inc
jno
test
iret
je
je
ret
add
adc
add
gs
xchg
cmps
mov
imul
push
jl
sar
imul
add
jae
pop
xor
(bad)
pop
pop
sti
popf
xchg
jb
popa
arpl
adc
adc
add
rol
or
andps
sbb
adc
ss
xchg
adc
dec
es
in
sbb
sub
mov
or
pushf
adc
ins
adc
data16
and
adc
repnz
or
jo
inc
mov
inc
es
adc
push
sbb
les
imul
pop
or
jne
rcr
xchg
ja
sub
imul
mov
mov
hlt
fs
mov
jb
add
add
out
push
pop
inc
xor
dec
je
fld
jbe
adc
xor
push
mov
cs
mov
sti
cmp
repz
enter
push
ss
std
mov
inc
ret
add
add
push
jl
aam
inc
adc
inc
punpckhdq
xchg
xchg
out
sahf
xlat
add
leave
leave
leave
leave
sub
into
sahf
out
in
sbb
inc
(bad)
repnz
dec
add
inc
inc
test
jb
mov
sbb
mov
cmc
repnz
xchg
aas
psadbw
jp
jmp
pop
mov
cmp
jmp
jmp
cdq
out
aas
dec
add
dec
dec
shl
push
pop
inc
inc
dec
bound
arpl
push
stos
aaa
xor
jb
popa
add
imul
mov
das
and
dec
add
jno
sub
ds
jmp
cdq
leave
mov
movs
or
pop
arpl
mov
icebp
lock
dec
jnp
add
jl
ins
lahf
and
xor
sub
pop
push
enter
in
mov
in
inc
push
jl
add
pusha
dec
popa
ins
and
adc
adc
add
add
push
sub
push
ror
dec
jae
add
xchg
mov
jno
add
popa
push
je
jno
and
add
push
loope
push
nop
adc
cmps
or
inc
fiadd
gs
pushf
cmp
mov
push
test
push
outs
ins
pop
das
das
or
in
inc
add
je
ja
jl
or
mov
add
adc
adc
and
ds
inc
add
je
mov
mov
mov
popa
add
push
adc
cs
data16
rcr
jl
add
or
outs
ins
jns
and
(bad)
push
mov
in
rcl
mov
add
mov
cdq
push
pop
lock
xchg
add
add
ins
push
mov
xchg
cld
(bad)
push
repnz
adc
jp
add
hlt
mov
test
or
mov
imul
or
outs
jo
or
xor
push
mov
icebp
lahf
sbb
pop
cmp
or
xchg
dec
sbb
add
outs
and
scas
pusha
mov
sub
mov
sbb
gs
pusha
inc
js
dec
shl
push
jo
imul
add
adc
sub
les
inc
data16
jne
movs
test
lock
pusha
enter
jg
outs
jb
inc
cmp
dec
add
imul
dec
fistp
call
test
inc
aas
ds
mov
or
scas
outs
fs
jb
adc
add
ja
adc
mov
push
out
daa
add
push
pop
rep
jns
mov
test
popw
lds
or
sub
dec
or
xchg
fldcw
imul
mov
or
jne
ins
mov
fs
imul
hlt
or
bound
cmp
add
cmp
mov
add
jmp
adc
clc
int3
ss
and
cmp
idiv
or
int3
push
push
es
mov
pop
call
adc
scas
ja
xchg
xchg
cmps
inc
add
sbb
pop
pushf
popf
or
push
dec
ins
sbb
dec
mov
pop
jnp
sub
adc
lds
fs
xor
and
pop
mov
sub
xor
pop
inc
pop
dec
pop
jae
out
ins
addr16
pop
shl
nop
ins
adc
popf
or
xor
sbb
inc
mov
enter
loope
test
xchg
inc
sar
das
cmp
das
push
push
push
(bad)
arpl
test
mov
xor
fisubr
inc
cmp
std
(bad)
daa
or
aas
mov
xchg
sub
push
test
test
movs
outs
add
shl
or
std
mov
outs
push
imul
push
(bad)
pusha
ror
cli
inc
jb
jns
ret
in
cmc
pushf
or
pusha
push
mov
mov
xor
and
adc
or
ja
pushf
je
and
push
and
ins
xchg
or
and
repnz
cmp
mov
add
rcl
scas
aas
or
ins
inc
(bad)
imul
popf
in
or
and
mov
daa
add
or
test
push
bound
pop
push
adc
or
and
sub
or
adc
cmp
inc
mov
add
in
or
jbe
mov
xchg
popf
sub
push
jne
rol
jp
cmp
or
in
push
dec
mov
mov
pop
push
mov
test
jg
rcl
xor
ss
sub
data16
jo
adc
push
adc
fist
cwde
pop
or
xor
cld
mov
lds
push
outs
imul
fs
nop
add
mov
push
dec
call
movs
fst
loopne
pop
sub
push
pusha
lods
adc
inc
lock
add
and
aad
cdq
icebp
and
mov
or
jae
adc
cdq
fwait
xchg
cld
mov
mov
fld
add
and
and
mov
xchg
pop
dec
xor
jle
popa
mov
scas
push
sub
xor
stc
inc
adc
push
push
cwde
fisubr
adc
popa
pop
ds
xchg
or
cmp
or
adc
shl
cmp
fstp
and
(bad)
sub
sub
xor
cmp
or
mov
pop
dec
imul
and
cmp
das
sbb
pop
mov
xor
xchg
and
add
inc
xor
jo
or
popa
cdq
fcomp
das
or
das
cwde
jbe
dec
adc
or
jae
mov
(bad)
or
movs
retf
or
sti
enter
es
or
jo
adc
je
push
or
shr
push
fild
pop
jle
add
in
sbb
out
lods
xchg
shl
cs
test
es
dec
scas
(bad)
lds
push
movs
or
test
xor
mov
xor
dec
add
cmp
mov
adc
push
lea
dec
jne
cmps
test
bound
jle
and
inc
(bad)
adc
adc
icebp
xor
inc
jb
adc
fild
mov
fbld
mov
lock
add
ret
nop
xchg
adc
ins
les
push
mov
jae
ss
mov
cmp
daa
int
int
das
jmp
push
push
js
daa
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
dec
dec
dec
outs
fild
cmp
daa
and
jmp
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
daa
daa
daa
daa
add
cld
les
dec
outs
psubb
mov
dec
mov
lock
dec
dec
dec
dec
call
dec
dec
dec
mov
and
rcr
and
mov
push
cmp
sub
adc
sbb
mov
mov
mov
dec
inc
or
data16
test
je
fucomi
repnz
mov
and
mov
add
pop
ret
fadd
aam
in
lea
pushf
shr
add
add
adc
cli
dec
dec
and
aaa
fidiv
sub
jb
push
imul
and
xor
xor
sub
push
sub
and
inc
outs
add
imul
test
push
add
jo
sub
loope
scas
test
ins
mov
and
and
arpl
lods
xchg
fsub
push
pusha
pop
cmp
mov
bound
test
cs
pop
cmp
or
jmp
popa
dec
leave
cmp
mov
and
test
mov
in
iret
and
xor
fwait
jno
cmp
dec
sbb
outs
mov
(bad)
mov
mov
mov
mov
dec
add
inc
or
and
imul
adc
push
adc
adc
xchg
cmps
imul
fild
add
not
call
fistp
add
xor
pop
lods
sub
aas
inc
and
sub
sbb
dec
sub
xor
jbe
imul
cmp
imul
jmp
jmp
retf
jns
fistp
fild
jl
push
cmp
add
js
and
pop
cdq
cdq
in
mov
inc
pop
add
pop
sub
cmc
mov
add
out
push
push
mov
or
pop
mov
aaa
jp
jl
mov
add
and
push
sbb
retf
mov
xor
dec
call
xor
shl
sub
add
dec
jne
pop
pop
call
jmp
adc
xchg
and
push
jl
shr
adc
ror
pop
loop
add
sub
shr
movzx
mov
(bad)
(bad)
shl
xchg
js
jne
pop
mov
and
mov
xor
test
or
inc
xchg
(bad)
sbb
and
add
xchg
mov
cmp
mov
in
mov
add
stc
pop
test
sbb
loopne
(bad)
in
in
push
cmp
ins
adc
inc
cld
add
mov
dec
cld
xor
xor
add
clc
cmp
sbb
and
mov
cld
push
jnp
into
sub
pusha
mov
mov
test
mov
push
add
push
and
dec
adc
cmps
sbb
test
dec
ficomp
mov
mov
jbe
pop
lods
mov
loop
mov
adc
sti
out
mov
sar
mov
mov
mov
retf
push
rol
or
aaa
or
nop
xchg
clc
retf
jns
clc
retf
inc
clc
or
aam
mov
mov
pusha
inc
rol
fwait
pushf
push
xchg
outs
shr
test
je
sti
mov
or
ja
pushf
push
mov
ja
in
add
mov
pop
mov
sbb
add
retf
add
adc
icebp
mov
mov
lock
jae
(bad)
jle
adc
mov
mov
add
or
ret
sbb
loop
jg
lahf
push
jns
add
(bad)
jmp
or
cmp
in
cmps
shl
lea
inc
jo
(bad)
(bad)
fst
push
mov
cmp
jbe
sub
add
jmp
test
pop
inc
cmp
jne
in
(bad)
fimul
inc
mov
add
nop
popa
mov
adc
mov
mov
sub
pusha
(bad)
fcmovnbe
jle
fadd
loope
pop
shl
scas
fdivr
add
cmp
jbe
jmp
adc
loopne
add
call
sahf
and
aas
cmp
adc
outs
pop
cmp
push
cmp
jae
mov
sar
fnstsw
push
aas
dec
and
jae
fdiv
jo
loopne
movs
mov
pusha
dec
mov
adc
jb
test
push
xchg
jo
rol
pop
or
pop
pop
cld
data16
lds
push
std
pusha
jbe
sti
sub
add
jbe
ret
push
mov
clc
in
pop
adc
xchg
dec
sbb
and
cmp
xor
imul
or
push
das
dec
(bad)
je
ins
repnz
mov
and
add
add
push
ja
cmp
adc
lea
mov
jo
adc
fidivr
fidiv
(bad)
pop
movs
add
and
(bad)
(bad)
je
(bad)
call
add
movzx
add
cmp
sbb
fnsave
dec
mov
cmp
dec
clc
inc
cmp
ficomp
or
mov
and
cdq
data16
xchg
dec
xchg
mov
or
aas
je
lods
add
cmp
cmp
push
xor
je
xchg
inc
or
outs
rol
mov
bsf
lea
push
mov
test
mov
cmp
push
aam
add
ja
push
pop
push
add
jns
cld
cmp
xlat
jne
mov
test
btr
cmp
add
mov
or
add
mov
dec
jnp
sub
lea
(bad)
pusha
xchg
and
movs
lock
sbb
mov
xchg
jle
fisttp
enter
iret
sub
sub
cmp
and
aam
fdivr
inc
push
mov
adc
mov
aaa
cld
test
clc
jg
mov
mov
mov
inc
and
pop
mov
lea
adc
imul
iret
mov
addr16
xchg
dec
or
out
dec
icebp
mov
xor
fidiv
mul
fadd
mov
jne
lea
cli
sbb
loopne
pop
je
fdiv
ins
push
loope
rol
or
jmp
mov
iret
ss
fidivr
add
push
bsf
loopne
lock
mov
shl
xor
sbb
jnp
sub
cmp
push
dec
inc
mov
jmp
mov
dec
mov
pop
or
inc
xor
fdiv
cmp
mov
adc
push
xor
pop
xor
jb
jae
rcl
(bad)
test
fisttp
jns
fwait
push
or
or
test
sar
das
push
add
mov
jne
sub
sti
movs
es
inc
mov
fadd
data16
mov
imul
aam
pushf
cmps
loop
push
push
into
inc
or
cmp
jne
imul
push
cld
iret
mov
push
dec
shl
or
xchg
scas
jmp
mov
pop
leave
outs
xor
dec
mov
jmp
aaa
inc
add
call
rol
fmul
scas
test
sub
xor
test
dec
ret
lahf
lock
cmp
inc
fiadd
mov
popa
ret
xor
xchg
mov
xlat
mov
mov
je
add
cmp
aaa
ret
pop
dec
clc
sub
sub
mov
xor
xchg
mov
lahf
test
cmove
stos
loope
clc
add
retf
pop
out
add
lods
mov
in
mov
loopne
add
jno
shr
dec
rol
pusha
aad
popa
in
or
in
or
shr
jb
sbb
dec
cmp
jb
pop
inc
popa
jo
cmp
pop
pusha
lock
mov
ret
jle
mov
outs
jmp
push
test
lea
push
mov
loop
rol
idiv
and
add
hlt
xor
out
sbb
clc
iret
mov
call
xchg
xor
push
pslld
push
and
cmp
push
clc
xchg
stos
push
xchg
cvttps2pi
cmp
jb
and
fs
sub
adc
add
les
lea
jmp
lds
add
sub
cmp
jno
das
push
jge
neg
jno
inc
or
cmp
mov
mov
pop
cld
or
mov
push
mov
add
aas
sbb
rol
data16
mov
sar
xlat
sub
clc
add
sahf
sub
push
ret
rcl
mov
out
inc
jle
(bad)
stc
call
mov
test
mov
sbb
cmp
cmp
dec
fistp
iret
cdq
cmps
or
pop
xor
out
cwde
sub
sar
xlat
xlat
je
iret
ja
cmp
loopne
(bad)
pop
mov
call
cmp
enter
rol
add
pop
add
xor
and
push
or
adc
jb
lea
or
xor
push
movs
add
cmp
jae
cmp
pop
rcl
dec
iret
push
loope
pop
pop
gs
loop
cmp
xchg
cmp
add
push
lea
out
hlt
push
push
jecxz
(bad)
(bad)
lea
or
(bad)
mov
neg
fldz
fst
add
js
or
rcr
pop
ins
(bad)
jle
cld
mov
in
ror
ret
test
jne
xor
xchg
jnp
inc
adc
adc
jnp
mov
rcl
mov
shr
je
mov
jg
outs
test
mov
sub
jle
cmp
jne
mov
fwait
call
mov
mov
sub
sbb
add
push
pusha
lock
mov
mov
dec
mov
fucomip
mov
mov
mov
test
test
xor
div
std
das
ficom
add
push
sub
inc
mov
add
mov
in
sub
mov
test
jne
mov
xor
add
push
xchg
push
gs
push
loop
mov
mov
test
iret
push
xchg
rcr
mov
(bad)
neg
or
sub
mov
fisttp
retf
xor
add
adc
out
jbe
dec
jmp
push
mov
shl
mov
add
jecxz
jg
jo
jae
xor
leave
mov
push
adc
mov
inc
sbb
add
push
adc
std
test
adc
add
emms
push
std
jmp
mov
pop
pop
inc
or
sub
iret
mov
xchg
and
call
push
push
ins
mov
cmp
test
mov
out
ja
mov
and
xor
sti
fimul
les
dec
mov
idiv
lea
mov
and
add
push
ret
sbb
pop
push
(bad)
pushf
xor
pop
inc
in
sbb
mov
push
sbb
sbb
sbb
in
xchg
retf
adc
pop
test
retf
jne
add
leave
add
mov
pop
loope
mov
pop
sub
movs
sub
aas
fimul
sbb
add
inc
icebp
and
xor
out
xchg
cmps
mov
mov
push
rol
or
fwait
mov
jl
sub
es
pop
mov
cmp
jne
add
push
mov
jbe
fist
and
mov
add
dec
jne
mov
sbb
fdivr
add
push
add
call
cmp
add
lea
pop
clc
scas
jmp
dec
fmul
loopne
in
sub
or
imul
jne
sbb
sbb
sub
fld
dec
mov
sub
mov
test
jle
(bad)
mov
clc
add
ins
mov
inc
hlt
adc
inc
add
sbb
lock
add
loopne
(bad)
adc
pop
mov
jbe
add
cdq
test
inc
fs
sbb
add
dec
aas
ror
adc
or
sub
and
fadd
pop
imul
cmp
jae
add
dec
sub
out
fdiv
cmp
test
sbb
not
jb
jb
call
push
or
adc
in
cdq
fild
xchg
das
mov
in
pop
or
jae
sti
test
in
movq
ret
adc
(bad)
inc
fiadd
test
das
(bad)
fmul
xchg
scas
lock
jbe
mov
mov
push
dec
jne
data16
mul
push
pop
jae
mov
and
or
fadd
inc
add
pop
mov
test
cmp
push
mov
jo
out
and
jb
call
ds
mov
or
scas
loopne
shr
lea
xchg
fnstsw
out
add
mov
and
or
jmp
loope
xchg
movs
fwait
cmp
and
and
xchg
jb
jne
mov
mov
jb
mov
int3
ds
aaa
inc
adc
es
in
stos
or
mov
xchg
sti
in
jge
ds
je
dec
jl
cmp
rcl
xor
neg
shl
xchg
and
cs
mov
loopne
xor
cld
dec
out
in
loope
sbb
sahf
sub
push
mov
(bad)
mov
bound
scas
cmp
ja
adc
push
add
pop
shl
pop
add
push
cmp
or
mov
jo
pushw
mov
and
push
sbb
adc
lods
or
fs
or
sbb
jmp
je
dec
je
jmp
in
leave
rcr
jo
inc
mov
leave
cmp
inc
cld
pusha
fs
packuswb
push
js
sub
or
inc
das
jl
call
cmp
enter
add
pcmpeqw
xchg
cmp
repz
add
sbb
outs
cmp
out
adc
cmp
mov
dec
(bad)
ja
pop
jb
inc
xor
mov
dec
xchg
xchg
add
mov
(bad)
inc
xor
dec
jne
sbb
mov
adc
sbb
pop
push
mov
or
and
(bad)
xlat
xor
pop
lock
mov
in
(bad)
cmps
sub
and
or
sbb
jp
aaa
lock
add
or
sub
test
sub
in
xchg
jmp
and
test
fld
(bad)
cmp
aaa
in
mov
imul
rol
jge
dec
mov
adc
or
jmp
mov
add
sub
in
add
outs
push
sbb
ja
imul
out
push
sub
adc
jmp
cmp
sub
add
sbb
inc
outs
push
test
pop
cmp
sub
jle
mov
sbb
mov
jg
aaa
(bad)
rol
and
not
sbb
loopne
sbb
jo
pop
ror
dec
sub
or
cs
jp
cmp
inc
sbb
add
cwde
scas
adc
and
mov
mov
retf
jnp
outs
(bad)
cmp
out
add
cmp
jbe
mov
in
mov
inc
add
cmp
jne
test
fwait
pop
rcl
(bad)
scas
out
mov
inc
in
inc
lock
repnz
xchg
jb
inc
clc
mov
inc
stos
jno
xchg
out
rcl
jbe
xor
add
cmp
jmp
pop
jns
mov
shl
mov
shl
add
mov
mov
mov
(bad)
xor
loope
lea
scas
dec
mov
and
jae
ds
out
mov
call
sar
gs
mov
mov
or
pushw
data16
jmp
xor
xor
mov
mov
idiv
sbb
test
fsub
or
repz
out
xchg
out
adc
retf
rcr
sahf
mov
jle
adc
sub
mov
pop
push
mov
cmp
jne
ret
mov
mov
or
mov
xchg
mov
enter
mov
or
dec
test
adc
jbe
aad
adc
jle
mul
pmuludq
cmp
mov
mov
iret
cmp
(bad)
adc
adc
push
in
sar
das
jo
or
lahf
iret
(bad)
lds
pop
sbb
ss
pop
fmul
call
add
xchg
data16
jmp
ret
cs
pop
xchg
retf
lods
sbb
addr16
jne
lahf
idiv
and
xor
mov
inc
fs
or
sbb
add
adc
jae
mov
test
mov
xor
out
add
mov
inc
mov
nop
fucomip
cs
pop
mov
adc
mov
or
adc
jne
mov
jne
mov
or
mov
cmp
pusha
adc
add
sbb
or
inc
cmp
bndstx
sub
dec
aas
add
and
inc
sbb
(bad)
sbb
mov
jo
(bad)
adc
clc
cmp
gs
mov
jge
pop
pusha
ds
jecxz
aam
mul
(bad)
jge
mov
push
cwde
or
cwde
push
stos
fstp
sbb
movzx
add
je
adc
xchg
dec
hlt
inc
cmp
iret
outs
push
mov
fcomp
xor
fcomp
scas
pop
mov
pop
pop
pop
jne
push
sub
ret
int
movs
jge
int3
mov
jmp
adc
cmp
inc
mov
push
stc
and
sub
jg
jmp
or
in
out
sub
or
loopne
adc
inc
push
loope
jmp
sbb
dec
dec
dec
push
push
out
sahf
out
imul
push
mov
dec
or
adc
fld
push
popa
or
jl
pushf
sbb
ret
sbb
jnp
jle
or
shr
retf
adc
jbe
adc
mul
pop
add
clc
sub
pop
inc
cmc
pop
dec
mov
push
retf
or
ja
fild
mov
adc
and
pop
add
pop
cmp
mov
add
ret
mov
(bad)
cmc
mov
jmp
sbb
pushf
adc
push
shl
outs
das
jle
and
or
and
js
or
pop
pop
mov
and
sub
std
and
sbb
mov
pop
jmp
inc
imul
out
call
mov
xlat
ins
push
mov
mov
jmp
pop
push
push
test
adc
(bad)
in
jb
or
rcr
call
icebp
mov
dec
add
xor
xor
(bad)
jbe
pop
mov
cmp
mov
outs
pop
cmp
add
jmp
pop
pop
pop
pop
adc
aas
or
hlt
jo
gs
mov
or
int3
test
push
mov
(bad)
out
add
ret
test
(bad)
inc
div
push
adc
mov
mov
push
data16
cmc
std
or
clc
push
mov
lock
jmp
mov
int3
xchg
scas
add
push
sar
ret
lock
sub
xchg
sbb
iret
mov
add
fnclex
fldcw
cmp
pop
push
jnp
imul
push
stmxcsr
push
ins
or
mov
add
fnstcw
fwait
or
or
psubusw
fldcw
out
add
aam
fwait
cmp
pop
jmp
(bad)
lock
imul
fscale
fstp
pop
ret
call
jg
(bad)
pop
sti
fstp
fstp
daa
in
xchg
icebp
mov
in
bound
cli
pop
ds
scas
in
pusha
fwait
pop
ror
imul
add
pop
inc
jle
cmp
das
out
push
mov
stos
ins
(bad)
rcl
push
add
jmp
mov
ror
jmp
jmp
or
mov
jl
jbe
pop
cmp
inc
cld
push
pop
cmp
and
hlt
bnd
jns
pusha
daa
cmp
jmp
mov
sbb
pop
jmp
inc
cmp
mov
ja
and
adc
jo
xlat
push
jne
xchg
cmp
xchg
out
sub
and
(bad)
lahf
jmp
int3
ins
icebp
adc
mov
(bad)
je
(bad)
mov
jl
mov
dec
add
adc
push
fld
fst
fst
lods
stos
stos
mov
clc
pop
call
call
ret
hlt
add
cmps
adc
pop
jle
mov
mov
pop
mov
xchg
inc
jbe
cmps
dec
(bad)
cs
repz
xchg
sbb
sbb
push
adc
cmp
repz
push
or
(bad)
cld
call
or
out
mov
push
fidiv
pop
or
sub
fstp
int
pusha
mov
add
cmp
je
mov
push
sub
repz
je
js
outs
pop
je
comiss
div
jne
arpl
push
push
data16
std
outs
jmp
lock
sub
ja
cmp
ja
cs
outs
sbb
rol
gs
mov
jge
jmp
and
push
neg
jle
js
pop
sub
arpl
inc
dec
jmp
mov
xchg
popa
jb
mov
mov
push
div
ret
or
mov
retf
mov
pop
xor
shr
mov
das
ja
add
mov
mov
jl
sub
fdivr
rcl
rol
fnstenv
or
pop
inc
sbb
mov
and
dec
inc
push
clc
pop
movs
xor
shl
dec
jne
into
mov
xchg
adc
cmp
repz
sbb
mov
inc
or
inc
dec
outs
data16
fnstenv
push
jg
retf
(bad)
mov
add
and
icebp
push
inc
sbb
push
add
push
jl
sbb
xchg
inc
dec
call
das
add
xchg
fld
cdq
test
je
loope
mov
das
(bad)
fadd
popa
shl
pop
sar
xchg
fldpi
push
fcom
cdq
xchg
retf
stc
sbb
jbe
pop
stc
jmp
fstp
fld
add
fldz
ror
xchg
fs
jg
push
pushf
pop
and
sbb
push
popf
adc
enter
aas
adc
pop
ins
mov
je
sub
stc
inc
mov
add
pop
fsubrp
pop
dec
call
dec
and
or
ret
add
push
fninit
fwait
std
push
loop
ins
push
mov
fnsave
pusha
pop
adc
(bad)
retf
sub
pushf
cwde
dec
add
pop
jmp
inc
xor
pop
jmp
push
push
sbb
inc
clc
daa
and
sbb
pushf
jmp
xchg
push
enter
clc
mov
cmp
shr
mov
pop
add
xlat
mov
iret
add
push
pop
and
add
mov
add
and
int3
clc
neg
and
and
mov
xchg
jmp
cmp
sete
test
mov
sar
fs
fld
out
sar
sbb
sbb
aaa
inc
pop
or
out
xor
test
sahf
les
dec
add
movups
(bad)
sbb
cs
xor
out
mov
pop
mov
mov
call
cs
repz
ret
stos
mov
push
mov
pop
(bad)
mul
mov
mov
sub
add
pop
rcr
aam
rcl
je
pop
mov
sbb
mov
mov
pop
clc
dec
in
mov
push
sbb
cmp
push
pusha
push
mov
mov
sub
sbb
adc
fdiv
jmp
sub
inc
push
xchg
cmp
push
adc
pop
movsx
mov
mov
call
mov
add
push
cmp
outs
jp
outs
ss
psubb
fisttp
sbb
clc
sbb
ja
adc
add
pop
jp
xor
clc
inc
push
lock
or
jno
ins
mov
sub
dec
mov
dec
inc
or
out
jmp
test
test
es
pop
jne
arpl
mov
push
arpl
leave
js
cwde
arpl
nop
pop
mov
lock
in
sub
jl
xor
xor
jb
cmp
jne
or
or
or
and
inc
call
data16
lods
dec
push
add
daa
pusha
fadd
cmps
pop
push
retf
add
mov
add
loop
dec
dec
add
jnp
jmp
push
retf
aas
ds
mov
and
jb
jl
push
mov
(bad)
sbb
in
les
pop
loope
dec
ins
jo
loopne
push
neg
inc
xor
mov
add
loope
test
rol
cmp
inc
test
and
adc
mov
out
addr16
or
or
pop
lods
or
jbe
push
push
pop
ins
icebp
pusha
lea
push
pop
pop
jmp
cmp
push
xchg
js
mov
inc
xor
clc
dec
add
repnz
je
in
lods
mov
xor
pop
add
sub
inc
inc
cld
adc
fld
jbe
push
xchg
pop
cmps
adc
pop
dec
(bad)
(bad)
loop
jmp
pop
sahf
cmp
outs
lods
call
or
mov
dec
mov
mov
add
out
out
int3
loopne
push
pop
xlat
pop
push
data16
aaa
sub
sbb
cli
add
jae
push
or
hlt
jmp
pop
loopne
lock
cmp
test
lea
inc
inc
mov
push
js
dec
cdq
jmp
jmp
pop
cmp
ins
add
test
mov
push
cmp
daa
fmul
shl
loope
add
mov
mov
loope
sub
loope
jo
xor
ds
clc
int
push
repnz
cmp
cmp
push
add
dec
jne
(bad)
loopne
addr16
jmp
pop
jmp
push
lea
lahf
hlt
sub
call
jmp
xor
test
jne
xor
(bad)
xor
fbstp
jo
ret
dec
aaa
mov
ja
jecxz
outs
xor
mov
in
mov
push
push
mov
xor
fadd
ret
pusha
or
xor
adc
fiadd
cmp
je
pusha
add
(bad)
push
inc
push
xor
ds
and
pop
add
cmps
fcom
adc
sbb
push
inc
or
dec
in
hlt
je
pop
jmp
fldpi
cmp
jmp
repz
sbb
daa
inc
out
jecxz
iret
push
pop
add
pop
iret
dec
fs
call
sar
mov
adc
mov
mov
imul
pop
pushf
jb
add
xchg
push
loopne
stos
add
sub
or
push
call
push
sbb
push
test
outs
mov
push
clc
aas
push
push
repz
xlat
inc
xor
push
push
xor
out
adc
mov
or
sub
jb
mov
mov
ja
or
scas
add
or
cmp
ja
jg
sbb
or
inc
jmp
popa
sar
cli
adc
xor
mov
push
jmp
stc
adc
adc
inc
jne
enter
dec
push
push
add
jge
cmp
dec
not
stos
xchg
mov
(bad)
push
push
adc
retf
jg
pop
fdivr
fmul
fcomp
xor
les
pop
cli
lock
shl
add
pause
dec
push
jg
adc
aas
jbe
clc
push
in
inc
stos
pop
pop
inc
shr
add
cwde
imul
movs
mov
shl
aaa
cwde
mov
jno
and
xor
lds
pop
mov
cmp
adc
jbe
add
sub
cmp
jne
sti
scas
aas
mov
sub
das
rcr
sub
dec
loope
mov
call
cdq
mov
xchg
and
imul
(bad)
aad
outs
arpl
outs
jb
hlt
out
add
imul
add
ins
mov
inc
xchg
fidiv
into
adc
test
cmp
mov
call
dec
pop
or
retf
cld
push
add
jo
dec
sar
jle
mov
and
inc
adc
das
dec
and
or
loope
les
mov
jmp
pop
bnd
stos
inc
add
enter
and
push
add
xchg
paddb
das
dec
xor
dec
mov
xchg
xor
rcr
mov
sbb
and
les
adc
cmp
jne
xor
les
inc
push
adc
add
sub
or
adc
in
mov
push
sbb
lea
outs
adc
test
mov
xor
push
mov
test
(bad)
outs
or
repz
jle
mov
jle
xor
push
inc
je
and
test
fs
sbb
sbb
push
push
sti
stos
cmp
sub
movs
push
push
mov
in
pop
dec
inc
add
push
dec
or
jg
and
clc
push
ss
push
push
inc
rcr
xchg
lea
dec
inc
pop
sbb
inc
popf
cmp
cmp
push
adc
mov
and
or
jbe
pop
les
jmp
push
fdiv
ret
clc
call
mov
sub
or
fucom
inc
add
iret
add
inc
cmp
loope
jl
push
cwd
cvttps2pi
xor
movzx
les
mov
sahf
dec
mov
dec
add
jle
jmp
mov
xor
push
mov
adc
adc
lds
cs
xor
xor
(bad)
stc
mov
das
dec
loope
in
bound
and
inc
dec
ja
adc
jmp
or
rcl
inc
xchg
push
call
jg
sub
scas
sbb
adc
add
cmp
mov
mov
sbb
lahf
add
mov
add
push
lods
lock
(bad)
call
pop
into
cmps
daa
addr16
or
inc
cmp
adc
dec
add
cmp
dec
ins
pop
pusha
xor
leave
mov
movs
push
pusha
enter
dec
aaa
lahf
fmul
mov
stc
add
fstp
sub
icebp
ror
loope
in
jo
js
call
je
out
stos
ss
mov
add
push
cmp
jne
call
pusha
rep
jg
cld
cmp
jne
nop
sbb
shl
imul
push
add
adc
outs
sbb
mov
mov
add
push
push
inc
or
inc
gs
inc
and
inc
dec
adc
inc
ret
sub
or
call
xor
call
cvtpi2ps
jle
push
mov
pop
mov
popa
mov
xor
fstp
gs
mov
mov
push
lock
push
inc
sti
cmp
jae
jae
jmp
push
push
mov
adc
jbe
movs
ret
mov
or
in
mov
push
loopne
or
stc
sbb
(bad)
push
sub
push
sbb
xlat
pause
out
xor
jbe
fisubr
cli
in
push
call
push
pop
aaa
xchg
push
inc
mov
out
push
push
cmp
and
or
add
add
push
pop
mov
or
jae
push
sbb
retf
mov
sahf
pop
push
push
and
sar
cmp
je
or
jne
movsx
inc
inc
pusha
fsub
push
mov
add
sbb
mov
push
jecxz
pop
fs
adc
loop
ret
mov
pop
and
adc
jecxz
pop
(bad)
mov
cmp
push
shl
cmp
cli
inc
mov
adc
outs
ret
mov
pop
test
aam
push
dec
cmp
shl
out
pop
loopne
mov
into
cli
out
push
je
mov
xor
xor
test
lea
push
mov
pop
jbe
arpl
mov
jno
addr16
jbe
adc
mov
cli
push
jns
je
or
cmp
add
ret
sbb
add
push
push
daa
pusha
pop
inc
sbb
jl
jg
addr16
mov
(bad)
pop
add
inc
js
xchg
add
push
add
test
push
cmp
div
adc
mov
mov
inc
enter
hlt
adc
retf
xchg
popa
js
pop
dec
adc
adc
lea
dec
mov
test
sub
inc
lds
out
sbb
les
or
ret
push
int3
cmp
and
inc
inc
enter
xor
mov
cmp
jne
inc
inc
out
push
clc
jg
dec
je
jg
push
add
dec
jne
push
loop
jno
shl
outs
inc
inc
out
daa
push
adc
adc
adc
and
mov
or
push
sbb
inc
gs
adc
bound
push
or
cmp
(bad)
call
xor
or
xor
adc
dec
jo
dec
add
push
xchg
sar
pushf
add
sub
xor
jecxz
and
add
(bad)
cmp
or
mov
jns
loope
out
mov
stos
add
je
cdq
push
in
push
lds
je
jg
adc
or
aas
out
and
aam
nop
sub
imul
jg
je
std
dec
or
mov
call
dec
push
pop
(bad)
mov
fs
cmp
pop
pop
lea
pop
jmp
xchg
clc
mov
pmullw
pop
push
push
push
push
adc
loopne
jmp
ret
push
pop
and
cmp
jo
add
adc
pop
retf
add
xor
pusha
push
les
test
dec
mov
push
jns
mov
xor
xchg
mov
jo
data16
mul
cli
push
pushf
bound
or
pusha
add
jns
shr
jge
push
fcom
test
pop
adc
adc
sub
pop
out
sub
pop
shl
repz
pop
test
or
scas
xor
icebp
add
mov
add
adc
sub
pop
cmp
out
adc
push
sub
je
out
(bad)
pop
icebp
jmp
add
call
xor
push
cmp
cmp
xchg
xchg
cs
adc
jmp
sub
(bad)
sti
(bad)
(bad)
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
mov
mov
jmp
mov
jmp
mov
mov
add
scas
and
dec
mov
push
or
mov
ret
fisttp
mov
jno
push
stc
xor
loop
imul
or
inc
sbb
mov
jbe
jno
push
inc
call
or
sbb
mov
nop
mov
and
xor
push
hlt
inc
lock
or
ror
ret
cmps
fmulp
call
or
and
add
cmp
dec
add
and
xchg
or
jne
test
sub
add
out
mov
mov
pop
push
mov
pushf
std
xchg
xchg
jle
dec
mov
je
test
jmp
jg
pop
jmp
or
inc
sbb
test
cmp
inc
fimul
fild
ror
cmp
jle
cmp
fadd
xlat
cmp
in
mov
sbb
mov
add
sub
jmp
pop
and
pop
pop
xor
(bad)
xor
and
or
mov
clc
imul
cmp
pop
in
pusha
aaa
cmps
and
nop
das
pushf
outs
or
shl
daa
call
sub
sbb
test
ror
mov
pop
dec
in
sbb
packuswb
jmp
or
cmp
add
mov
iret
pop
pop
out
xchg
and
fistp
add
mov
dec
in
cmp
lock
mov
cmp
sbb
sbb
fnstcw
pop
and
and
(bad)
dec
sbb
adc
mov
das
(bad)
dec
and
pop
ror
xlat
cli
sbb
mov
outs
pop
lock
mov
outs
adc
ja
add
mov
mov
or
neg
sbb
inc
leave
out
and
in
mov
push
dec
pop
ret
pop
cmp
adc
cmp
mov
jl
or
push
sbb
cmc
mov
jl
and
jecxz
js
inc
adc
pop
cvtps2pd
sbb
jne
in
xchg
enter
jle
imul
movs
imul
sar
cmp
cmp
or
pushf
punpckldq
inc
ss
push
test
add
dec
xor
xchg
movs
adc
jle
xor
pop
mov
pop
mov
sbb
call
sbb
icebp
xor
cmp
push
(bad)
inc
add
add
hlt
fsub
hlt
and
mov
aam
or
imul
in
cmp
dec
sub
xchg
mov
push
(bad)
js
or
xor
or
clc
dec
xlat
mov
ja
jne
call
push
pop
dec
xor
sub
inc
ins
jne
pop
sub
mov
jnp
dec
jp
lock
mov
add
pop
or
xchg
mov
xchg
pop
pusha
pop
cmps
add
add
push
xor
push
sub
or
push
push
xchg
pop
pop
call
xor
mov
xor
rol
(bad)
aad
push
pop
jge
out
xor
mov
xlat
jp
sbb
sbb
or
pop
xor
mov
imul
xchg
pop
pop
push
mov
ret
adc
sbb
push
sub
fmul
jae
mov
movs
inc
push
aam
mov
push
les
scas
adc
out
outs
std
adc
shl
jo
jmp
test
sbb
mov
or
data16
sub
or
add
inc
cmps
nop
add
sub
mov
inc
dec
push
jg
push
ja
and
push
push
out
out
add
dec
jb
cdq
adc
or
out
in
cmps
cs
mov
and
pop
lea
js
in
xchg
inc
outs
jns
inc
sbb
clc
js
bswap
dec
clc
dec
jl
lock
cmp
inc
push
loopne
or
pop
repnz
sbb
add
mov
rcr
sub
fistp
or
push
stc
inc
call
inc
mov
inc
jle
xor
sbb
ins
popw
int3
(bad)
fwait
jmp
and
cld
shr
fstp
loopne
or
aas
cmp
sbb
xor
in
loop
call
cmp
or
call
add
and
pop
pop
push
js
(bad)
jnp
jae
ins
inc
imul
mov
xchg
mov
mov
pop
pop
mov
mov
or
add
call
pusha
dec
add
mov
mov
push
repz
push
xor
add
movzx
mov
or
push
outs
inc
mov
cld
cld
je
or
jecxz
ret
jmp
lea
cmp
ret
jmp
pushf
out
pop
movs
enter
mov
pop
jmp
jle
lea
sub
std
and
lea
sbb
add
mov
add
ins
and
push
xchg
pop
mov
pusha
icebp
sbb
pop
fs
dec
mov
push
and
test
push
clc
clc
cmp
adc
xor
inc
sub
push
scas
cmps
mov
outs
stc
cmc
mov
ss
push
aam
xor
jne
inc
mov
aam
mov
pop
mov
mov
(bad)
dec
pop
sti
push
xchg
add
mov
pop
or
es
(bad)
lahf
add
jmp
cmps
pop
mov
pop
pop
jmp
inc
clc
xchg
into
cmps
add
fild
test
and
call
push
stos
test
into
dec
scas
push
std
and
sub
mov
push
lods
push
hlt
aas
cwde
or
aaa
cmp
push
xor
sbb
jbe
sbb
jmp
inc
cmp
jne
mov
xlat
imul
cmp
sub
aas
cmps
shl
je
push
pushf
lea
xchg
pop
adc
dec
inc
jl
add
mov
out
xchg
mov
pusha
mov
addr16
adc
in
mov
push
(bad)
inc
push
mov
inc
inc
sub
ja
add
push
test
clc
push
mov
cmp
jne
dec
je
mov
xchg
mov
iret
inc
sbb
mov
jbe
jmp
adc
add
and
je
mov
cmp
jne
dec
je
mov
dec
sar
add
dec
add
or
add
add
jmp
pop
cmp
(bad)
outs
jbe
cmp
jne
shr
shr
sbb
repz
mov
shr
or
(bad)
sub
dec
pop
cmp
push
stc
loope
ret
and
pop
int
imul
dec
and
imul
sbb
pop
jecxz
movq
inc
xchg
arpl
call
retf
jbe
mov
mov
inc
inc
leave
xor
out
mov
pop
cmp
push
je
inc
cmp
jg
inc
inc
test
jl
cmp
jg
push
sar
add
mov
inc
rep
jmp
jge
in
add
inc
out
in
mov
call
nop
inc
jmp
push
mov
ret
push
mov
or
mov
xor
xor
or
je
add
push
inc
aas
cwde
adc
sub
imul
stc
cmp
pusha
pop
or
push
push
outs
stc
in
gs
or
in
add
pusha
icebp
or
mov
(bad)
inc
ins
icebp
repnz
push
pop
pop
pop
cmp
aad
push
outs
out
adc
push
fdiv
cmp
popa
push
rcr
outs
inc
addr16
lea
sbb
push
push
cld
lea
into
mov
and
cli
jo
push
je
mov
aaa
mov
mov
aas
out
lea
xor
lods
sahf
out
xchg
and
cmp
pop
cmp
push
adc
cmps
aam
push
cld
add
jo
call
(bad)
jmp
cli
mov
mov
pop
cmps
dec
push
push
jmp
js
xchg
sahf
add
dec
clc
fwait
add
jo
sub
mov
pop
add
mov
ror
push
sub
in
cld
jmp
lea
lea
neg
push
cmp
or
(bad)
jns
add
cmp
je
xchg
pop
clc
pop
dec
stos
sub
ja
mov
in
cmp
ret
cmp
aaa
push
push
mov
mov
(bad)
inc
aaa
add
addr16
mov
mov
jb
sub
ret
cmp
pop
jne
cmps
cli
add
js
mov
dec
cmp
jge
sar
test
sub
cmp
and
mov
es
test
cmps
or
test
and
outs
sbb
sbb
nop
ret
ja
xor
pop
pop
fucomip
cdq
(bad)
lock
xor
dec
jl
jge
nop
jle
sub
cmp
inc
aam
jle
stc
add
lea
(bad)
dec
push
inc
ins
push
cld
stos
dec
hlt
xchg
jg
movs
ins
shr
es
popf
int
jmp
push
pop
cmp
sub
loope
adc
cwde
or
int3
jp
ret
aaa
mov
push
stos
mov
xor
das
lods
push
jmp
adc
icebp
xchg
xchg
cmp
dec
pop
ja
mov
inc
mov
xlat
xor
push
or
push
inc
aad
add
push
cmp
popa
mov
pushf
and
push
das
push
(bad)
pusha
jl
fcomp
push
mov
pop
stos
les
jg
jb
push
sub
adc
mov
cld
pop
dec
cs
inc
xor
xor
mov
sbb
or
pop
das
or
adc
cmp
paddsw
imul
jp
hlt
shr
add
shl
mov
xchg
leave
mov
jle
push
xor
jb
cmp
and
or
push
js
sbb
sbb
shr
ins
mov
inc
pop
cmp
pushf
mov
clc
and
inc
into
loope
push
pop
mov
sub
(bad)
fldenv
adc
xor
pop
add
xchg
shr
call
sub
idiv
in
repz
mov
or
xchg
lds
pop
das
add
test
cld
dec
popa
xchg
mov
lahf
bound
rcr
sbb
add
jne
(bad)
lods
lods
and
xchg
nop
mov
xchg
push
iret
add
pushf
xchg
ret
movs
jg
dec
lods
xor
jne
push
scas
retf
or
add
mov
out
shl
push
add
test
sub
fs
aaa
add
jo
inc
push
jo
push
xchg
leave
sahf
mov
pop
lea
sbb
jo
jp
add
jp
pop
adc
ror
stos
stos
out
push
ret
mov
out
pusha
mov
repnz
jmp
out
popf
mov
jmp
outs
lods
sbb
repnz
ins
hlt
imul
ss
cli
inc
cld
add
shr
jb
dec
in
pop
(bad)
jmp
adc
loop
stc
in
rol
or
mov
pop
test
push
rcl
outs
xor
dec
xchg
sbb
jg
mov
or
dec
dec
jmp
test
clc
sub
add
jae
iret
retf
inc
js
into
in
push
movs
ja
scas
mov
push
pop
sahf
shl
add
dec
sub
in
add
arpl
(bad)
dec
pushf
sbb
repnz
test
pop
xor
push
dec
add
and
jns
fmul
scas
imul
retf
pop
pop
lea
jmp
pop
cmp
xor
and
leave
push
clc
jmp
push
mov
cmp
jne
push
js
(bad)
dec
test
inc
add
(bad)
fild
lea
mov
mov
pop
ret
jle
jb
clc
fimul
dec
clc
fst
ss
jl
push
cmp
mov
inc
jmp
in
push
jnp
push
clc
lea
mov
movs
adc
add
stos
mov
pop
pop
xchg
jbe
out
cmp
shl
mov
call
jo
push
nop
cs
test
ds
dec
cmp
repz
adc
ss
cmp
jge
xchg
inc
dec
mov
icebp
pop
jle
inc
xor
and
cmp
inc
mov
mov
push
mov
and
fmul
(bad)
fdivrp
dec
mov
adc
mov
sub
adc
jecxz
jmp
nop
pop
mov
cmova
push
inc
dec
js
test
inc
nop
jle
jo
mov
inc
scas
js
in
shl
cmps
pop
call
pop
jmp
pop
mov
sub
inc
adc
jmp
dec
cld
push
fadd
and
loopne
push
iret
adc
cmps
nop
or
or
fsubp
adc
xchg
shr
pop
xchg
cwde
dec
dec
push
push
std
test
mov
pop
(bad)
jl
addr16
int3
cmp
add
add
mov
fcomp
(bad)
sbb
cdq
push
loopne
adc
out
add
cmps
inc
in
adc
lock
adc
add
out
sar
or
shl
fisub
sahf
sbb
dec
add
ret
inc
mov
cld
jbe
add
inc
ja
push
test
jne
push
or
ja
and
and
loope
ror
cmp
jne
push
jge
or
xor
push
icebp
test
sub
lahf
in
lds
cli
test
or
or
mov
push
imul
or
pop
lock
mov
jmp
arpl
mov
push
add
xor
adc
mov
jmp
push
pushf
inc
out
push
lock
mov
add
mov
cmp
dec
xchg
lock
sti
sbb
add
or
mov
(bad)
call
(bad)
dec
push
mov
sbb
fs
inc
fstp
out
aas
push
(bad)
(bad)
jl
cmp
jnp
enter
ret
adc
xlat
pushf
push
sub
push
outs
int3
into
jae
add
cmp
push
inc
or
popf
and
cmps
adc
cbw
pop
repz
xchg
loope
sub
jle
dec
xchg
pop
sbb
mov
jo
push
mov
lea
adc
jl
data16
cmp
and
loopne
dec
mov
dec
jg
dec
mov
sub
jg
fisttp
push
add
or
or
or
cmp
je
cmp
je
cmp
je
cmp
mov
mov
movs
xchg
ss
dec
add
or
jecxz
cli
dec
adc
jmp
push
mov
mov
or
div
mov
adc
cmp
pop
jmp
cmp
retf
je
xor
and
in
pop
jmp
and
jbe
mov
cld
cmps
adc
pop
call
or
jle
lods
cmp
add
out
mov
jns
and
jb
pop
cmps
rol
retf
mov
sub
fdivr
dec
scas
sub
mov
pop
xchg
cmp
xchg
dec
les
sbb
fnstenv
fs
es
les
daa
nop
sbb
jmp
jbe
inc
inc
mov
inc
jbe
jmp
test
cdq
jne
fld
adc
and
jbe
push
imul
adc
dec
pop
mov
adc
retf
mov
rcr
js
out
mov
jp
or
push
xchg
pusha
clc
xor
(bad)
add
or
adc
js
push
js
xor
cmp
ja
sbb
xchg
test
stos
or
lea
sbb
sbb
popa
and
cld
mov
lea
outs
cld
cmp
outs
push
push
push
sub
sar
scas
add
lock
popa
inc
add
xor
or
or
mov
inc
or
bound
dec
ror
test
setne
popf
lds
jo
pop
pop
sub
xchg
popa
sub
jbe
in
arpl
jmp
dec
pop
and
jle
ins
lea
mov
pop
mov
push
pop
dec
jg
xchg
or
pusha
pop
jmp
aas
add
shl
xchg
and
mov
adc
(bad)
cmp
dec
jne
or
sbb
or
cmp
mov
and
mov
and
movs
dec
pop
ins
jl
xchg
inc
stos
mov
sub
push
and
nop
out
and
dec
jne
sub
ins
pop
jo
enter
jmp
dec
push
sub
cmp
adc
push
jo
mov
or
push
fild
in
pop
cmp
pop
add
inc
call
test
add
cmp
add
sbb
jmp
dec
iret
adc
popa
xchg
daa
popa
push
sub
lea
add
or
scas
mov
mov
fnstsw
adc
pop
dec
sub
jl
push
(bad)
pcmpeqw
push
xor
out
rcr
and
add
xchg
mov
adc
cs
jbe
jmp
push
rcl
and
mov
fist
popf
add
adc
cmc
and
rcr
cmps
pop
call
lds
sar
xor
xor
sub
(bad)
jg
lock
sar
(bad)
xor
xor
sub
sbb
jne
cmp
jb
add
push
outs
mov
add
mov
dec
shr
inc
dec
enter
sbb
xor
shr
rcr
ror
fcomp
mov
fisttp
mov
rcl
and
push
mov
mov
add
scas
clc
in
mov
sub
enter
mov
sbb
sbb
cwde
data16
sbb
lahf
or
sub
or
add
das
or
je
int
add
inc
jmp
rcl
rcl
rcl
cmp
jb
push
or
mov
add
inc
loop
bound
mov
repz
pusha
fwait
jge
mov
pop
pop
push
jns
neg
div
add
jns
neg
neg
sbb
int
iret
idiv
add
test
add
fdiv
xchg
clc
repnz
mov
mov
outs
sub
add
inc
sub
rol
jl
(bad)
and
outs
popf
mov
sbb
ret
mov
inc
jmp
sbb
jne
mov
aaa
and
add
add
sbb
in
rcr
sbb
sbb
loop
in
cli
pop
sete
ins
mov
inc
pop
xor
(bad)
imul
sbb
jmp
pop
rol
sbb
or
mov
and
add
dec
mov
(bad)
inc
in
shl
jb
adc
call
adc
imul
out
xor
or
jmp
getsec
jmp
push
int3
cld
in
aaa
sbb
dec
retf
mov
(bad)
in
and
inc
and
add
xor
jmp
(bad)
cdq
xchg
xchg
push
push
add
(bad)
mov
in
adc
xor
jp
cmp
adc
lds
inc
shl
sub
push
loopne
inc
pop
ficom
cmps
jne
add
pop
sbb
jle
retf
inc
int3
jne
test
shl
or
sub
jg
loop
jl
inc
or
out
fadd
inc
and
jmp
daa
je
jnp
sub
je
sbb
out
push
or
xchg
shr
setl
cmp
je
dec
das
jo
iret
rcr
or
and
retf
std
pop
jmp
push
adc
sub
jns
hlt
daa
fidivr
dec
push
and
pop
push
loopne
repnz
mov
sbb
cmp
outs
jecxz
pop
pop
mov
repz
mov
push
retf
cmp
mov
or
lock
aad
mov
add
(bad)
push
push
add
inc
pop
lods
cmps
dec
idiv
and
outs
sbb
ins
call
idiv
cmp
je
inc
mov
stos
and
in
int
sbb
mov
pop
(bad)
adc
cmp
jge
and
int
retf
scas
add
mov
sub
adc
sbb
jnp
xchg
ret
jmp
dec
les
cwde
push
in
jge
mov
mov
iret
mov
push
in
test
pop
les
(bad)
jns
call
push
dec
rol
rcl
or
mov
dec
fwait
mov
or
fimul
push
cmp
xlat
sub
test
fwait
or
add
mov
add
cli
or
add
mov
mov
mov
mov
retf
sbb
push
dec
jne
mov
icebp
sub
push
ins
nop
push
sbb
pop
pop
xor
std
lock
jne
push
dec
push
adc
test
rcl
adc
movs
push
mov
ja
pop
xchg
or
pop
pop
sar
sbb
mov
adc
dec
push
xor
inc
xor
dec
pop
pop
pop
jmp
jle
in
sbb
xchg
add
hlt
add
ins
aam
push
cmp
sbb
add
mov
push
or
jp
push
call
push
add
out
xchg
js
cmp
mov
dec
xchg
outs
rol
add
jecxz
pusha
(bad)
out
(bad)
lock
cmp
int
inc
sbb
or
addr16
fbstp
clc
out
(bad)
sti
sbb
rol
add
sub
cmp
push
je
dec
gs
popf
mov
pop
je
popa
outs
leave
outs
bound
outs
in
aaa
xor
sub
push
sub
std
popa
je
sub
push
ins
or
dec
sub
mov
ja
push
push
xchg
sbb
mov
fwait
and
inc
inc
push
push
jo
jo
arpl
mov
popa
sub
popa
addr16
leave
add
inc
dec
jae
outs
push
into
push
outs
jae
pop
pop
jge
jl
fist
fs
inc
inc
sub
sub
adc
jne
and
cmp
repnz
sti
es
ins
sbb
ins
sub
jb
frstor
dec
dec
inc
mul
pop
dec
push
inc
jae
push
jnp
addr16
or
xchg
bound
fisub
pop
push
inc
mov
in
popa
xchg
popa
aaa
div
outs
fidiv
aaa
sbb
cmps
jae
dec
ja
push
push
aaa
outs
outs
cmps
mov
dec
dec
inc
das
pop
push
adc
sbb
mov
or
loopne
push
setae
push
test
enter
js
push
nop
retf
sub
push
and
jb
push
dec
push
cwde
jne
or
xor
jae
dec
imul
sub
fist
jns
pop
pop
int3
(bad)
call
test
sub
jmp
adc
sub
add
pop
dec
stos
jmp
fild
mov
inc
mov
outs
jnp
jne
xor
push
add
sbb
cmp
mov
adc
jg
or
mov
not
sub
fs
dec
jne
xchg
scas
xchg
sbb
cmp
loop
jecxz
and
mov
mov
daa
test
mov
loope
out
sbb
dec
push
push
shl
mov
and
lock
push
add
add
jecxz
addr16
or
pop
neg
frstor
lea
pop
ret
sbb
or
je
jmp
xor
push
adc
ja
mov
ficom
mov
fild
pop
clc
shr
cmp
fst
sbb
dec
jmp
fwait
stos
movs
xchg
jmp
mov
add
stos
xchg
add
jp
mov
out
jns
(bad)
push
ficomp
nop
and
push
lea
pop
ficomp
gs
pop
clc
daa
movs
(bad)
pop
and
fdivr
fisttp
and
push
nop
xchg
ss
inc
pushf
movs
(bad)
pushf
loopne
in
push
int3
cwde
sub
mov
add
dec
lds
movs
mov
inc
pop
sub
das
add
mov
into
sub
pop
sbb
shl
and
cmps
push
dec
aad
shl
hlt
cmp
mov
cmp
adc
pop
push
inc
add
test
sar
lea
aaa
out
in
mov
inc
and
je
inc
mov
iret
outs
and
mov
mov
push
adc
ins
ds
movs
mov
jmp
jmp
add
xor
call
or
push
pushf
cld
in
mov
aam
pop
lahf
cmp
movs
or
inc
enter
les
and
adc
push
sub
call
nop
cwde
call
inc
sbb
scas
push
mov
and
sar
not
lods
push
sub
push
push
or
inc
push
mov
daa
push
fwait
jge
adc
adc
cmp
push
dec
js
adc
add
sbb
cmp
sub
mov
mov
cmp
push
sub
or
jo
imul
push
xor
adc
add
inc
sub
add
lock
push
inc
addr16
push
dec
and
and
and
jmp
push
xchg
(bad)
adc
xor
jb
xlat
xor
ret
jg
add
(bad)
repnz
sti
test
in
pop
popf
lds
jnp
fst
push
fisttp
jno
pop
adc
pop
icebp
mov
ror
sub
inc
lea
lock
shr
add
add
imul
add
mov
cmps
and
test
push
mov
add
adc
push
mov
ja
(bad)
pop
mov
fisubr
pop
cld
sar
jns
adc
dec
test
cmps
ins
in
xor
push
(bad)
sar
pop
rol
add
inc
cmp
xlat
push
adc
inc
push
push
sub
ret
mov
std
mov
xor
jge
stos
movs
into
cmp
sub
int3
jle
clc
int3
std
cwde
lea
jle
jg
ins
jnp
mov
test
pop
add
push
push
fcomi
(bad)
or
pop
pusha
pop
jl
cmp
test
pop
scas
dec
cmp
adc
xor
popa
je
or
ret
ja
in
fnstcw
mov
daa
adc
retf
out
loope
sbb
pop
lock
cmp
bound
test
pop
int
lea
iret
pop
sahf
sub
xor
and
xor
je
jg
stc
xchg
or
cmp
pop
fs
ja
xor
and
rcl
rol
stc
mov
lods
mov
and
popa
outs
jmp
gs
or
pusha
jae
push
push
pop
push
fisttp
xor
gs
mov
popf
movs
popf
das
int3
jecxz
in
push
cdq
pop
fwait
lahf
shl
mov
mov
jns
mov
lahf
add
and
jecxz
add
add
popa
(bad)
shl
inc
int3
add
arpl
fs
outs
cs
mov
dec
ja
and
push
fisttp
push
es
cdq
fisub
adc
jbe
scas
mov
iret
addr16
inc
jo
mov
add
imul
or
or
sub
(bad)
fadd
cdq
dec
mov
in
adc
sbb
push
mov
ss
je
mov
test
push
dec
and
xor
cwde
test
jnp
dec
test
fadd
ja
pop
mov
cmp
xchg
ret
test
je
and
jne
inc
enter
(bad)
cmp
pop
hlt
hlt
mov
addr16
(bad)
stc
and
pop
dec
mov
jmp
inc
lea
hlt
movs
or
pop
pusha
cmc
pop
push
pop
(bad)
sub
call
sub
jbe
dec
mov
in
popa
cmp
mov
(bad)
dec
mov
leave
xchg
mov
xchg
ret
jecxz
mov
mov
push
sbb
shl
movs
dec
in
add
sbb
or
push
sbb
mov
adc
hlt
jo
in
ret
movs
dec
dec
xor
and
add
and
aaa
mov
pop
or
push
mov
pop
xor
mov
add
inc
dec
push
xor
pop
jge
xchg
jae
dec
mov
fsub
jmp
jne
test
mov
mov
nop
movs
push
popf
xchg
push
lock
jle
loope
jmp
jne
in
push
mov
cmp
jno
ins
aaa
fsub
mov
jne
popa
call
xor
inc
and
dec
jns
movs
es
sbb
push
in
dec
dec
aas
call
jge
in
std
jo
std
dec
adc
lods
movs
mov
in
arpl
hlt
mov
jno
mov
shl
test
shl
pop
out
mov
cmps
cmps
push
repz
cmp
sbb
cs
pop
pop
scas
xchg
int
lods
(bad)
mov
call
jl
pop
ins
aam
test
into
dec
adc
aad
push
jmp
add
push
mov
(bad)
div
mov
and
add
fmul
inc
mov
inc
push
and
cmp
adc
sbb
and
mov
fild
mov
dec
inc
pop
add
(bad)
dec
daa
sub
push
rcr
cmps
je
cmc
or
mov
cmp
mov
ins
xchg
jae
sub
push
inc
adc
imul
jno
scas
out
push
loopne
inc
das
movs
cmp
or
dec
loop
(bad)
or
or
pusha
ja
cmp
cmp
jno
or
mov
jmp
mov
cmp
data16
out
push
inc
push
fs
hlt
scas
clc
sub
mov
push
mov
mov
test
int
sub
sub
rol
push
push
pop
ss
daa
call
out
push
push
and
imul
inc
shr
push
add
push
mov
fimul
loope
shl
push
xor
ja
out
mov
pop
ret
sbb
mov
out
sbb
push
bound
push
call
push
dec
push
cmp
add
mov
add
mov
inc
adc
pop
dec
rcr
mov
add
lahf
and
fild
or
cwde
nop
mov
loope
push
call
imul
in
pushf
or
mov
sbb
leave
sbb
sti
daa
push
push
das
add
adc
fchs
dec
rol
jno
arpl
push
mov
mov
int
leave
popf
shl
cmp
ja
(bad)
add
jne
sbb
dec
add
and
fstp
jbe
test
adc
mov
push
add
rol
(bad)
sub
aam
mov
mov
not
shr
push
push
pop
sub
mov
inc
pop
add
jb
xor
fs
xor
and
das
push
and
or
adc
fbstp
dec
push
mov
dec
shr
pop
test
sbb
aam
sbb
push
stos
pushf
mov
mov
push
lea
movs
rcr
add
push
pop
add
cmp
ss
push
or
imul
ins
rcl
mov
jns
or
in
inc
adc
jne
xor
inc
cwde
jb
addr16
sub
loopne
imul
adc
push
xchg
enter
adc
sbb
mov
mov
cmc
daa
mov
add
push
push
stos
inc
mov
dec
into
pop
mov
scas
mov
pop
das
mov
stc
imul
or
loopne
cs
and
lds
xchg
adc
push
std
enter
add
xchg
xchg
pop
ins
adc
add
cmp
and
add
sti
dec
mov
lods
outs
sub
enter
mov
cmps
inc
mov
das
pop
dec
add
and
(bad)
and
pop
pop
adc
pop
or
lods
sar
sbb
and
and
add
adc
sub
xchg
adc
xor
add
test
(bad)
or
int3
or
mov
xlat
cmp
retf
xor
clc
adc
sbb
sbb
sbb
mov
sub
fcom
fimul
sbb
push
add
cmp
push
ret
and
ds
cli
pop
add
or
push
add
adc
mov
or
cmp
outs
dec
add
dec
push
or
aas
mov
cmp
je
pop
inc
or
ja
mov
movs
mov
or
adc
pop
in
ja
jl
hlt
cmps
cmc
idiv
add
mov
add
sbb
cld
movs
push
cmp
ss
es
fnstcw
scas
mov
out
clc
push
imul
xchg
xor
xor
in
push
pushf
jb
jb
cwde
xchg
nop
mov
jb
mov
mov
xchg
movs
out
mov
push
and
sub
sub
ja
scas
or
mov
ret
loop
sahf
in
xchg
or
xor
or
mov
xor
int3
ds
jp
mov
jns
add
fimul
mov
fcmovnb
adc
lea
sti
repnz
mov
mov
sub
and
mov
iret
jns
test
pop
shr
mov
in
lea
inc
sub
inc
jle
mov
add
push
add
movs
mov
test
mov
push
pushf
aam
inc
or
lods
movs
jns
in
fmul
fcom
mov
sbb
sbb
test
push
call
sub
lods
mov
mov
ret
mov
in
and
cdq
retf
(bad)
bound
pop
pop
push
adc
ins
rcr
adc
inc
mov
jp
or
push
mov
xor
add
clc
(bad)
dec
fisttp
clc
shl
add
test
xor
fcmovu
dec
and
cs
clc
addr16
pop
int3
pop
pop
push
mov
jo
clc
cmp
xor
retf
out
add
movs
sub
push
add
xchg
mov
push
pop
mov
jmp
mov
lods
sti
pop
jge
sbb
enter
pop
imul
sbb
cmp
hlt
push
lock
mov
inc
inc
ja
push
and
call
or
lock
adc
push
lock
mov
xor
add
adc
xchg
mov
adc
ins
add
fsubr
push
push
mov
dec
cmp
push
xchg
jne
lods
xor
retf
movs
inc
mov
mov
push
jp
nop
inc
add
sub
and
mov
inc
std
pop
ja
or
xchg
jg
pop
sbb
les
aaa
xchg
pop
jbe
mov
enter
jg
mov
hlt
movs
(bad)
push
retf
sbb
sahf
mov
lds
cmc
fcomp
and
movs
test
adc
xor
push
push
xchg
btc
add
and
mov
add
lock
test
outs
pop
cld
jl
dec
add
jns
jae
jnp
inc
or
out
adc
imul
dec
sbb
mov
call
shl
pop
mov
mov
mov
push
sbb
push
lods
add
stos
add
rcpps
pusha
push
mov
adc
clc
dec
sub
or
mov
leave
xor
sub
loop
jecxz
add
les
add
stc
jne
xchg
mov
fsubr
and
jo
aaa
push
pop
lock
add
pop
cmp
jne
push
xor
xor
inc
push
pcmpeqw
ret
or
fst
push
ret
je
sub
ds
mov
cmps
ret
cmp
push
push
push
ins
lahf
mov
repnz
outs
loopne
(bad)
out
shl
add
jnp
cld
das
pop
scas
ror
cs
inc
cs
sub
dec
hlt
mov
loope
mov
or
inc
inc
dec
je
mov
cmp
je
movzx
dec
mov
sbb
push
jmp
adc
add
inc
sub
mov
pop
pop
xchg
stos
outs
aaa
xor
js
mov
mov
loop
(bad)
out
icebp
or
sbb
scas
cmp
jb
or
jne
fld
loopne
cmp
dec
or
pop
add
pusha
jne
mov
push
mov
add
ficom
or
add
add
add
test
cmps
add
cmp
leave
or
sti
sahf
imul
mov
pop
cmp
clc
dec
cmp
adc
and
cmp
mov
xchg
add
adc
mov
in
retf
fist
sbb
inc
fs
pusha
mov
scas
pop
mov
push
jne
or
or
mov
enter
add
mov
inc
ss
or
inc
mov
mov
xchg
add
inc
les
jae
xor
adc
or
loope
push
mov
jl
and
push
and
add
sub
bound
add
nop
ins
pop
xchg
sub
add
sbb
dec
push
inc
int3
int3
int3
mov
dec
adc
add
xchg
or
js
test
int
mov
gs
aad
sub
aad
jl
adc
dec
add
add
inc
nop
sub
adc
sti
lock
xchg
mov
push
and
add
pop
call
and
adc
push
cmp
mov
xchg
xchg
push
mov
repnz
aam
mov
ds
call
push
jg
cld
leave
call
imul
mov
jne
dec
adc
inc
js
in
loope
inc
ja
mov
and
in
ret
call
add
or
mov
retf
push
lock
sub
cld
mov
xchg
add
xchg
sub
push
cmp
push
lea
mov
rcl
ret
xchg
xor
pusha
sub
inc
dec
ret
fwait
std
and
cmp
mov
je
gs
test
test
mov
ret
add
push
jae
in
push
or
add
jg
into
or
inc
outs
je
outs
ins
or
mov
sub
fs
adc
xchg
adc
(bad)
mov
pushf
daa
mov
loop
leave
pop
add
sbb
les
jnp
add
add
ffreep
lods
push
stc
add
add
mov
idiv
ja
sbb
jo
adc
jb
test
dec
dec
ret
nop
inc
add
loop
inc
or
or
push
lds
loopne
mov
pop
add
adc
pop
leave
or
dec
xor
pop
movs
enter
dec
stc
retf
test
ins
and
or
imul
push
pop
cmp
add
jo
jo
mov
gs
les
popa
pop
xchg
cmp
ins
pop
xor
es
dec
or
pop
ret
xor
or
pop
jmp
pop
push
repz
sub
ss
outs
outs
cmps
jno
or
jae
aaa
jge
ins
pop
ins
in
inc
mov
mov
jno
pop
jae
jae
cmp
or
jbe
push
xor
sub
push
add
ins
add
sbb
mov
js
mov
fs
pop
(bad)
mov
mov
mov
mov
push
movs
xchg
(bad)
jne
data16
shl
or
cmp
enter
push
adc
sub
push
inc
sbb
into
push
vmread
mov
dec
lds
pop
jg
mov
xor
inc
ficom
out
fisub
push
pop
push
in
lock
mov
into
add
inc
add
or
dec
inc
jne
add
cwde
daa
and
sub
and
mov
sub
jb
mov
xchg
add
inc
and
pushf
pop
inc
add
cmp
movs
movs
jg
call
jge
data16
sbb
sub
cmp
cmp
adc
in
data16
outs
add
add
or
retf
or
aaa
ror
cmp
pop
mov
loope
ret
mov
icebp
add
std
imul
add
mov
aaa
or
cmp
add
push
imul
add
add
pop
inc
ins
adc
enter
cmps
hlt
fisttp
push
clc
fstp
fstp
into
xchg
add
or
xor
dec
add
nop
add
add
cmp
mov
je
xor
jae
rol
in
xchg
mov
popa
test
or
or
and
xchg
jnp
mov
push
jl
call
adc
mov
push
ret
pop
fmul
sub
into
push
mov
mov
add
xchg
push
cmp
aas
lods
(bad)
test
cdq
and
or
or
loopne
jmp
call
push
or
popf
add
jge
mov
(bad)
mov
in
push
push
or
or
test
fisttp
fistp
push
inc
cmp
fsubr
adc
sub
movs
or
adc
and
or
adc
daa
jge
retf
inc
(bad)
retf
(bad)
sub
pop
das
cmp
mov
rdtsc
lock
or
jbe
mov
pop
lock
repnz
or
retf
inc
out
call
jp
jmp
test
dec
push
or
sbb
adc
lahf
adc
or
cmove
jl
loop
or
sti
lahf
xchg
and
call
int3
mov
mov
movs
add
aaa
pop
ins
push
inc
loopne
lea
imul
lahf
sbb
or
jle
nop
inc
movs
xchg
push
mov
call
or
jle
jl
dec
sub
add
and
cmps
scas
sub
iret
aas
pop
sbb
hlt
test
or
and
or
lea
xor
leave
bound
scas
pop
aas
ret
inc
add
loopne
adc
js
xchg
div
xor
ja
sub
sub
mov
int3
push
ja
sbb
and
iret
neg
neg
cmp
(bad)
adc
adc
ins
cmp
add
mov
and
and
dec
mov
jge
movs
pushf
pop
sub
jb
adc
retf
aam
je
push
and
sub
push
(bad)
pop
aas
adc
adc
sub
or
in
xchg
push
push
outs
scas
and
(bad)
lods
inc
aas
iret
lods
pop
scas
es
pop
jmp
pmaxub
(bad)
xor
fild
dec
push
cmp
cmp
pop
aaa
mov
ror
add
jmp
sahf
outs
mov
cmp
push
inc
in
adc
mov
mov
or
not
jmp
call
out
adc
add
sar
sbb
add
js
or
and
adc
pop
dec
repz
adc
push
pop
pusha
lods
sub
mov
jne
sar
pop
sub
lea
stc
ror
mov
lods
sbb
jnp
mov
retf
ret
loopne
les
inc
inc
outs
pop
sbb
push
dec
clc
sar
shr
fiadd
test
dec
daa
mov
xchg
int3
mov
ror
mov
leave
or
das
adc
push
adc
lds
ds
les
add
or
movs
loopne
or
inc
adc
mov
sbb
repz
lods
sbb
outs
repnz
mov
lock
or
jge
jns
dec
inc
add
inc
or
or
lock
add
aas
mov
pop
aam
dec
or
dec
jle
test
imul
dec
shl
add
xor
out
fnstenv
add
push
or
inc
adc
pop
push
mov
push
daa
mov
pop
pop
pop
not
push
dec
pop
(bad)
mov
popf
das
push
mov
jmp
mov
or
jo
sub
add
push
add
push
mov
or
push
sbb
fld
ret
sub
sbb
adc
sbb
adc
mov
cwde
cmp
mov
out
into
push
aas
add
sbb
sbb
jne
dec
pop
scas
sub
pop
leave
sub
push
dec
inc
xor
push
cmp
inc
jae
in
movsx
add
sub
stc
adc
pop
outs
pusha
es
sbb
sub
inc
pop
add
and
or
cmp
jbe
je
pop
pop
or
and
imul
loopne
jmp
mov
fwait
nop
test
add
push
dec
jo
cmps
movs
push
mov
push
and
adc
movs
xor
outs
push
dec
ins
jns
adc
int
xor
gs
in
push
pop
push
or
cwde
push
or
dec
outs
inc
push
jb
mov
out
and
ja
gs
jo
xor
leave
outs
or
sbb
ins
xor
push
cmp
adc
inc
(bad)
cli
jb
or
sub
sub
lahf
pop
mov
jae
cmp
gs
rcl
fisttp
cmp
or
loope
push
aaa
jae
jnp
jne
outs
and
jno
and
dec
cmp
jb
inc
jne
outs
xor
jb
adc
xor
sahf
dec
ins
fs
je
ins
jp
addr16
pop
inc
add
gs
imul
sbb
and
adc
mov
xchg
dec
scas
sub
dec
addr16
sahf
in
sbb
cs
rcl
imul
loop
jmp
dec
mov
sub
jae
sub
pusha
add
sub
pop
popa
mov
sbb
popa
enter
xchg
xchg
call
(bad)
out
mov
ror
inc
outs
jb
gs
jle
leave
dec
arpl
mov
lahf
dec
daa
rol
sbb
imul
gs
js
stc
out
out
cmp
sbb
scas
mov
add
iret
cmp
push
mov
scas
jnp
dec
icebp
aaa
xor
or
outs
outs
cwde
jge
or
jmp
nop
js
rcr
rcl
jg
js
out
inc
popa
jae
sahf
ins
xchg
xchg
mov
adc
push
pop
push
mov
push
dec
outs
ja
loopne
add
aam
xor
mul
xchg
pop
add
out
aas
push
dec
cld
sbb
in
arpl
cld
or
js
mov
jecxz
adc
push
pop
adc
js
mov
xchg
xlat
push
pop
fwait
push
idiv
test
pop
adc
cvtpd2ps
daa
sub
adc
dec
push
imul
push
fs
jmp
popa
adc
adc
cmp
in
and
fs
adc
js
dec
sub
mov
data16
or
je
arpl
mov
mov
adc
gs
pop
or
gs
into
xchg
sub
push
fst
sbb
rol
orps
adc
and
scas
jnp
pop
mov
jl
mov
and
ret
add
jg
outs
and
imul
call
arpl
gs
shl
or
bound
lahf
dec
ja
mov
mov
and
bound
dec
xchg
out
scas
ret
and
push
stc
xor
jbe
add
and
fidiv
or
ins
popa
adc
adc
xchg
fs
or
ins
jle
iret
shl
out
pushf
add
es
cwde
dec
add
shl
aaa
(bad)
pop
inc
add
hlt
int3
sbb
pop
xchg
loopne
int3
addr16
pop
or
or
xor
popa
mov
inc
cs
lds
test
arpl
sbb
inc
mov
aam
or
sbb
or
pop
xchg
jae
and
dec
gs
jbe
or
inc
gs
adc
jo
ja
scas
dec
or
das
ins
sub
in
imul
jnp
ja
pop
xchg
out
dec
dec
or
add
mov
add
loopne
mov
test
outs
adc
imul
cwde
loope
(bad)
mov
adc
iret
push
arpl
ins
ins
inc
xchg
jmp
xchg
xor
or
push
outs
inc
push
add
adc
outs
es
mov
mov
daa
adc
add
pop
adc
push
imul
adc
or
mov
fs
pushf
aad
push
xchg
fild
or
(bad)
into
out
adc
adc
dec
inc
adc
mov
test
or
mov
rol
adc
in
mov
jbe
add
jl
adc
pushf
push
popa
cmp
sbb
or
dec
pop
imul
or
mov
jae
adc
and
out
or
pop
push
and
mov
adc
add
out
add
data16
pusha
mov
push
sbb
das
push
push
mov
sub
lock
xchg
or
cmp
or
mov
push
mov
adc
daa
cmp
or
xlat
cs
call
push
push
pop
inc
dec
push
push
pop
or
movs
xor
add
fnsave
add
dec
jl
adc
dec
inc
pop
out
add
xchg
fmul
js
dec
mov
bound
mov
adc
inc
push
sbb
inc
push
jbe
jmp
push
cld
inc
adc
inc
dec
dec
pop
inc
inc
inc
push
inc
and
pop
jb
adc
xor
add
fst
inc
mov
pop
xor
xchg
push
bnd
js
dec
mov
inc
or
ret
adc
jo
(bad)
jae
fucomip
pop
mov
dec
sub
fucom
pushf
mov
xchg
(bad)
xor
les
inc
push
jo
and
inc
push
mov
pusha
jg
jecxz
cmp
sbb
cmp
or
mov
add
push
inc
or
dec
les
test
fstp
ins
loop
test
sub
cli
ins
adc
xor
stc
(bad)
icebp
and
dec
push
dec
inc
shr
mov
dec
dec
dec
dec
dec
xor
loopne
dec
inc
les
push
xor
add
push
push
dec
popa
mov
cmp
mov
dec
dec
push
in
xchg
sbb
and
dec
push
adc
cmps
cmp
dec
inc
push
push
inc
xor
add
inc
es
dec
push
inc
ror
js
fimul
dec
je
out
mov
std
push
inc
je
ficom
push
data16
xor
add
mov
or
adc
push
in
pop
inc
or
arpl
push
or
psrld
clc
outs
dec
outs
addr16
lods
or
mov
jo
and
inc
mov
pop
adc
push
nop
pop
sub
rcr
fucomi
or
dec
out
dec
sub
(bad)
ins
bound
fist
movs
cmp
xor
xor
stos
sub
lock
fisub
sbb
enter
pushf
push
bound
mov
shr
add
and
pop
je
push
dec
jmp
in
push
int3
push
adc
test
frstor
mov
push
jbe
movs
push
push
push
ss
sub
or
xchg
xchg
inc
push
push
inc
inc
add
add
or
in
jb
bound
and
add
and
and
add
es
sub
add
xor
push
test
adc
loop
call
inc
hlt
inc
push
sub
or
and
inc
bound
xor
pop
imul
es
push
daa
mov
or
or
cmp
xor
jb
xor
ins
or
dec
popa
rcr
add
add
sub
mov
sub
daa
mov
sbb
retf
cdq
sbb
xchg
and
ins
jb
ret
sub
xchg
and
mov
(bad)
popa
jnp
test
jo
pop
repnz
dec
cmp
inc
test
repnz
sub
sub
cmp
iret
clc
fstp
xor
les
gs
push
or
push
mov
or
fs
ins
fdiv
and
rep
ja
in
xor
ins
push
mov
push
cld
jae
inc
dec
sub
jmp
xor
inc
mov
data16
popa
cmp
add
pop
xchg
cs
sahf
or
adc
dec
or
jb
outs
xlat
fwait
jl
push
sub
es
push
or
das
push
mov
pop
in
xchg
mov
sub
mov
jb
lea
push
pushf
data16
jae
xor
jbe
cdq
in
sub
xor
fs
inc
jne
fdivr
pusha
aaa
add
push
jne
bound
outs
call
fs
push
cmp
xchg
or
add
xchg
popa
cmps
dec
(bad)
xchg
add
sub
adc
pop
pop
mov
js
lods
pop
fwait
in
fld
inc
pop
mov
nop
mov
frstpm(287
das
mov
jnp
push
jo
adc
xor
adc
daa
fld
dec
leave
in
mov
inc
dec
adc
xor
sub
push
jo
imul
rcl
int3
das
int3
mov
mov
push
stos
inc
add
movs
sbb
xchg
test
sar
or
lds
pop
in
in
aam
pop
sub
fsubr
jp
adc
jmp
inc
dec
mov
pop
push
pop
xor
pop
xlat
add
ins
rcr
popf
in
xchg
sbb
pop
imul
sub
adc
push
mov
pop
test
xchg
or
loopne
adc
xor
dec
inc
push
push
push
test
rol
jo
outs
push
outs
fs
and
inc
ja
outs
xchg
into
sub
aaa
mov
mov
push
pop
loopne
inc
add
mov
push
ss
and
jb
data16
sub
jnp
rcr
mov
and
das
sbb
xchg
xchg
cmc
dec
cld
jns
neg
loop
dec
push
inc
sbb
adc
fyl2xp1
push
pop
xor
pop
ins
lods
popa
pushf
push
gs
ja
pop
xchg
retf
shl
push
or
pop
pop
mov
dec
add
jmp
mov
and
pop
pusha
jecxz
dec
dec
dec
xor
jg
or
in
add
and
cs
shl
add
xor
lods
mov
or
cdq
dec
inc
imul
adc
pusha
adc
into
jo
or
cld
xor
lods
adc
arpl
jno
outs
or
dec
outs
je
xchg
cmps
ror
add
mov
lods
or
imul
mov
push
(bad)
ins
bound
outs
js
push
sbb
fld
jo
cs
jge
dec
data16
sbb
xchg
fdiv
js
in
sbb
pop
movs
in
cs
fist
push
push
inc
mov
inc
adc
das
push
pushf
fs
inc
push
push
xor
out
test
and
pop
inc
sub
cmp
and
sahf
dec
repnz
or
leave
in
call
xchg
xchg
and
aad
fmul
leave
in
movs
outs
in
paddusb
leave
leave
leave
leave
aam
int3
enter
leave
(bad)
sar
lods
test
add
in
pusha
repnz
leave
leave
sub
leave
leave
leave
leave
nop
mov
leave
cmp
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
pushf
pushf
pop
and
adc
js
mov
pop
or
nop
xchg
cmps
or
cmp
or
shr
and
inc
adc
xor
ins
jno
inc
fmul
xor
adc
and
nop
push
adc
cmp
mov
aam
aam
in
jb
add
add
fmul
xchg
add
cld
icebp
clc
(bad)
jb
mov
call
in
(bad)
jb
jb
aam
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
xchg
nop
mov
test
jb
je
ins
push
fs
pop
pop
jb
jb
push
push
dec
inc
sbb
jb
cmp
jb
xor
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
lock
hlt
pop
jb
jb
lock
call
jb
(bad)
aam
jb
jb
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
sbb
jb
dec
pushf
out
dec
jb
jb
inc
cmovo
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
sbb
jb
add
out
clc
cmp
cmp
hlt
lock
call
in
(bad)
cmp
cmp
aam
int3
enter
cmp
sar
mov
test
cmp
cmp
test
out
out
in
in
pop
jl
je
in
in
ins
push
in
pop
pop
push
in
in
push
dec
dec
inc
in
in
inc
cmp
xor
in
in
sub
and
pushf
fsubr
and
sbb
adc
pushf
pushf
pushf
adc
fs
leave
add
cld
out
clc
in
in
hlt
lock
call
in
(bad)
leave
in
in
aam
int3
mov
leave
(bad)
sar
mov
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
ins
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
pop
enter
and
stc
mov
xchg
ret
cs
cs
ss
or
and
add
in
clc
hlt
in
and
lock
pop
in
in
in
loopne
fsub
in
in
ror
enter
in
sar
mov
test
in
in
mov
in
xchg
nop
mov
test
cmp
pushf
pushf
je
ins
push
fs
pop
pop
in
movs
bnd
das
enter
in
bound
dec
pop
cmp
mov
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
in
pushf
pushf
pushf
mov
hlt
lock
jb
pushf
pushf
call
jb
(bad)
aam
push
jp
jb
enter
cmp
(bad)
lods
mov
das
mov
cmovs
sub
mov
cmp
fisttp
push
adc
sbb
add
and
iret
ror
loop
dec
jmp
dec
sbb
xchg
and
pusha
ds
repz
push
ficomp
sti
int
jl
loope
cld
mov
push
push
ins
pop
inc
sbb
arpl
jbe
push
push
push
gs
or
dec
je
call
cmp
loopne
sub
rol
aas
mov
bound
iret
add
retf
fldcw
addr16
jmp
add
inc
add
inc
outs
add
jae
pop
pop
inc
sti
pop
add
pop
pop
dec
push
dec
das
inc
aas
les
ins
cmp
push
push
sbb
ins
mov
push
xor
or
jnp
arpl
dec
jb
push
cmp
in
lfs
xor
(bad)
(bad)
out
inc
push
cmp
shr
mov
mov
xor
aam
adc
mov
pop
xchg
adc
mov
mov
pushf
bound
xor
jl
enter
mov
das
ss
jbe
mov
xchg
or
or
sbb
(bad)
cmp
test
shl
das
and
inc
mov
popa
ins
and
push
add
je
and
ins
outs
xor
push
add
and
fiadd
and
mov
sbb
mov
bound
call
aas
mov
call
jb
sbb
(bad)
dec
xor
pop
inc
dec
cmp
jb
or
jbe
pop
cmc
inc
sbb
clc
push
add
add
mov
mov
cmp
add
add
push
inc
or
stos
mov
and
push
int
inc
les
int
mov
daa
(bad)
call
movq
cwde
(bad)
int
push
dec
add
movq
dec
adc
ror
adc
push
jmp
xor
or
ja
cmps
or
inc
add
mul
shr
mov
and
loop
jmp
mov
or
mov
mov
std
mov
or
sbb
inc
sbb
wbinvd
ror
fdivr
das
lea
dec
aaa
sbb
cmp
pop
sbb
sbb
sbb
xor
push
and
adc
mov
adc
inc
add
and
and
mov
or
adc
xor
dec
push
mov
pop
mov
sbb
(bad)
cmp
adc
mov
add
push
push
repz
arpl
loopne
sub
addr16
test
call
push
call
repnz
jmp
adc
push
xchg
xchg
xchg
cmp
xchg
int
retf
nop
int
int
xor
xor
xor
adc
dec
in
push
or
xor
js
retf
int
dec
enter
cmp
sub
sbb
int
int
push
push
enter
int
int
inc
push
enter
int
mov
test
int
push
ss
inc
xchg
and
and
and
dec
mov
ins
sub
jb
int
mov
jb
lahf
mov
add
or
cmp
jne
scas
xchg
enter
mov
enter
mov
enter
leave
push
repnz
cmp
sub
fld
inc
dec
adc
shr
add
push
nop
or
fcom
sbb
out
icebp
les
pushf
inc
out
enter
pusha
arpl
(bad)
ja
mov
jl
cwde
clc
push
mov
push
push
sbb
add
outs
xor
push
and
add
sub
mov
ss
cmp
jl
daa
cmp
int
int
inc
int
int
inc
dec
and
cmp
(bad)
loope
xor
hlt
dec
cmp
out
cmp
xor
xchg
add
jns
int
int
ror
xor
mov
sbb
enter
jns
add
out
int
pop
inc
repnz
push
ja
int
int
xchg
iret
retf
xor
xor
cmp
or
test
jb
jns
ja
int
int
mov
jmp
int
jne
not
jmp
nop
imul
push
stos
jo
xchg
cmp
popf
pop
sbb
xchg
sub
or
mov
cs
shl
and
popa
and
sub
popa
loop
mov
int3
outs
sbb
imul
enter
int
jmp
jns
nop
push
cmp
xor
xor
enter
jp
out
enter
dec
out
icebp
(bad)
out
enter
xchg
icebp
(bad)
fild
and
dec
push
iret
add
cmp
xor
in
sbb
pop
jmp
aas
out
enter
or
or
movs
xchg
dec
fs
stos
imul
or
and
scas
jmp
int
int
enter
inc
in
enter
scas
(bad)
imul
enter
js
sbb
stos
mov
mov
repnz
push
inc
add
or
jo
mov
sbb
mov
add
inc
nop
pop
push
jb
and
es
push
inc
test
test
ins
ins
cs
or
fiadd
fisttp
(bad)
mov
and
mov
in
fdiv
push
nop
dec
mov
or
clc
adc
js
enter
pop
inc
lock
adc
nop
xchg
cmp
daa
fs
test
adc
test
arpl
add
adc
sbb
or
inc
adc
cmp
sbb
xchg
xor
or
(bad)
mov
nop
ins
adc
pop
mov
pop
stc
and
hlt
or
call
jmp
jne
inc
je
fs
jge
or
inc
scas
gs
cmp
pop
call
mov
add
adc
add
enter
mov
lock
xchg
or
jmp
mov
adc
adc
aas
sbb
adc
add
push
push
iret
scas
lahf
je
push
bound
fisttp
jp
jle
addr16
add
test
or
xchg
mov
iret
xor
cmp
adc
jge
cld
aaa
lea
xor
loopne
xor
aad
mov
adc
rol
outs
lods
push
lock
mov
adc
and
ror
movzx
scas
mov
pop
add
fdiv
mov
aam
aam
xchg
cs
push
rol
call
adc
sub
mov
lods
fst
and
mov
dec
jecxz
out
push
rcr
jp
mov
pop
xchg
inc
mov
push
cs
rol
add
mov
rol
mov
mov
sbb
or
cmp
xor
fidiv
add
leave
sti
cmp
jl
mov
dec
cmp
add
rcr
jle
test
inc
rol
(bad)
repz
(bad)
std
sub
daa
dec
adc
dec
adc
push
fnsave
push
add
dec
add
dec
xchg
add
xchg
xchg
je
mov
push
sub
popf
or
add
cmp
add
xor
fs
in
inc
mov
pop
mov
dec
or
xchg
imul
loopne
rol
scas
xchg
rol
daa
cmps
fisttp
push
sub
xchg
ret
popa
arpl
sbb
popf
cdq
daa
fild
mov
test
js
(bad)
cmp
cmp
inc
sti
cmp
lods
sub
push
push
push
jbe
out
mov
sbb
or
dec
lods
in
adc
mov
jnp
xor
sub
xor
dec
nop
push
or
cmp
xlat
stc
pusha
jecxz
out
jb
(bad)
in
fistp
jb
(bad)
xor
push
mov
sbb
repz
add
xchg
shl
clc
push
jbe
ins
lods
scas
out
and
jo
sti
mov
in
cli
nop
jo
add
aas
xchg
(bad)
(bad)
sbb
jge
cmp
outs
jmp
or
sbb
ds
xchg
mov
sti
rcr
imul
and
addr16
jbe
push
std
mov
or
sbb
(bad)
sub
sbb
test
cdq
jmp
push
sub
push
pushf
not
inc
sbb
dec
ror
fldpi
addr16
(bad)
sub
jge
or
pusha
dec
shl
mov
icebp
pop
jmp
bound
(bad)
sub
push
xchg
fmul
std
jmp
(bad)
mov
mov
retf
sub
(bad)
(bad)
jmp
adc
sbb
xchg
les
dec
adc
loop
pushf
xchg
in
imul
shl
inc
lds
ss
int3
xchg
push
cmp
dec
retf
fincstp
enter
test
xchg
jmp
(bad)
cmp
inc
mov
inc
push
or
call
fisttp
sub
and
sar
pushf
out
stc
xor
xchg
lods
jmp
pop
sub
pop
outs
and
ret
dec
adc
mov
jmp
mov
cwde
movs
repnz
cdq
loopne
dec
adc
mov
dec
sbb
dec
push
fdivr
clc
sub
outs
jns
or
js
jle
das
je
out
cmpxchg
movs
sar
jae
clc
(bad)
cs
out
push
jo
cmps
rcr
(bad)
mov
pop
inc
jg
mov
ds
inc
test
adc
inc
sub
loope
adc
jmp
rol
jo
pop
mov
popa
and
mov
pop
icebp
stos
mov
js
enter
sbb
addr16
adc
bound
jo
xor
hlt
and
(bad)
loop
mov
stos
mov
mov
adc
mov
pop
mul
push
outs
int3
bound
cmps
test
out
fcomp
loop
arpl
cwde
loope
adc
inc
mov
repz
into
xchg
aam
and
inc
jne
xor
and
pop
and
xlat
imul
dec
pop
inc
retf
pop
dec
test
jbe
imul
mov
push
adc
movaps
adc
mov
ret
add
sub
mov
iret
mov
loopne
mov
push
gs
pop
and
in
push
inc
call
out
sbb
sub
and
ds
add
(bad)
in
fsubr
cwde
fdivr
xchg
int
int
nop
inc
mov
int
int
cld
and
dec
push
add
cmp
or
mov
jmp
add
or
push
mov
cmp
sbb
jo
mov
leave
out
call
adc
stos
rol
mov
sub
ins
stos
popa
cmp
test
xor
mov
xor
es
daa
out
dec
enter
inc
sub
inc
mov
fadd
sbb
mov
(bad)
sub
in
arpl
mov
int
mov
mov
test
mov
ficom
je
mov
sub
outs
jne
test
mov
sub
push
in
inc
ss
push
push
xchg
imul
pop
out
push
int3
xchg
push
pop
push
pop
fst
xchg
adc
pop
int
dec
inc
call
mov
fnstsw
jb
push
daa
js
fs
push
ins
outs
enter
mov
sbb
ins
xor
jp
popa
retf
or
in
xchg
jg
imul
ins
fs
(bad)
xchg
push
repz
mov
push
mov
mov
sahf
push
ja
sbb
or
les
pusha
add
daa
sar
gs
push
mov
ja
jno
sub
mov
cmp
dec
add
and
shl
mov
ins
imul
dec
push
inc
xor
sub
sub
or
sbb
lds
push
xor
in
jno
dec
aaa
sub
outs
xor
cmp
int3
ror
adc
add
jo
movs
ret
loopne
xor
lods
rcr
xor
and
and
cld
fadd
(bad)
dec
push
mov
mov
inc
jae
ins
and
dec
std
sub
in
shr
push
out
ret
jb
mov
ret
cli
add
fadd
adc
shl
inc
add
loop
int3
push
hlt
add
ins
jne
fadd
das
add
mov
lea
adc
mov
inc
add
loop
ficom
add
add
and
cmp
test
(bad)
ror
mov
fisttp
xor
inc
loopne
(bad)
cs
scas
cmps
add
and
fadd
mov
int
rcr
add
pop
adc
in
adc
dec
pop
out
cmp
clc
adc
add
ds
int
add
out
hlt
add
lock
or
add
nop
icebp
mov
mov
sub
into
or
xor
pop
je
xor
or
lock
(bad)
shl
cmp
cld
call
adc
aam
fcomp
or
add
(bad)
jo
cmps
(bad)
xlat
sub
pop
lods
or
nop
nop
add
pusha
sbb
aaa
dec
sbb
sar
mov
popf
in
mov
pop
sbb
or
inc
dec
cs
mov
pop
movs
mov
bound
add
inc
sar
sbb
push
adc
das
mov
dec
jae
mov
add
daa
sub
inc
dec
daa
popf
dec
pop
movs
lods
or
outs
jbe
das
cdq
daa
push
dec
imul
nop
pop
or
pop
jg
ret
(bad)
push
in
or
jg
in
dec
cs
and
xor
jg
daa
jg
cmp
jg
movs
and
inc
push
dec
dec
gs
or
sbb
sbb
or
or
scas
inc
dec
add
push
outs
or
fcom
mov
push
mov
push
mov
jecxz
and
push
or
mov
mov
xchg
cmp
sub
mov
or
dec
sbb
cld
mov
or
or
jbe
fsub
ins
js
add
jae
test
inc
mov
sbb
mov
enter
dec
push
jae
sbb
mov
inc
movs
je
ret
fst
inc
das
in
adc
or
fnstenv
push
pop
sbb
dec
inc
in
je
nop
and
rcr
mov
jnp
cdq
or
out
cwde
and
gs
jno
jns
push
inc
sub
push
add
pushf
or
adc
xor
or
pop
xlat
and
xor
or
push
mov
xchg
dec
dec
dec
cmp
icebp
repnz
dec
dec
dec
dec
cmc
div
clc
dec
dec
dec
dec
stc
cli
sti
cld
dec
dec
dec
dec
std
(bad)
jmp
dec
dec
dec
dec
loope
jecxz
dec
dec
dec
dec
in
out
dec
dec
dec
dec
jmp
dec
dec
dec
in
out
out
ror
dec
dec
rcl
rcl
dec
dec
dec
dec
aad
xlat
fmul
dec
dec
(bad)
fcmovnu
dec
dec
dec
dec
fstp
ffreep
in
in
rol
in
in
(bad)
(bad)
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movs
cmps
cmps
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
in
nop
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
cwde
cdq
call
popf
sahf
lahf
in
in
add
in
test
in
mov
in
lea
in
jno
jae
in
in
jne
ja
in
in
jns
jnp
in
in
jge
jg
in
in
popa
bound
in
in
gs
in
push
in
in
ins
outs
outs
in
in
push
push
push
push
in
in
push
push
push
push
in
in
pop
pop
pop
pop
in
in
pop
pop
pop
pop
in
in
inc
inc
inc
inc
in
in
inc
inc
inc
inc
in
in
dec
dec
dec
dec
in
in
dec
dec
dec
dec
out
in
xor
xor
out
ds
add
sub
jae
jne
jb
sub
and
pop
repz
aaa
ss
inc
mov
jmp
sahf
push
js
lock
dec
cmp
rol
cmps
adc
ret
mov
or
out
bound
or
push
xchg
loope
add
sbb
mov
shl
test
test
adc
outs
ins
and
jmp
data16
add
or
pop
push
or
push
lock
sub
out
je
or
bound
ds
push
pop
pop
nop
inc
shl
and
imul
xchg
cmc
cmp
push
jo
adc
(bad)
rcr
xor
stos
add
nop
add
xchg
ror
add
lock
pop
into
add
add
add
push
add
jo
add
add
fist
add
add
mov
call
jmp
add
pusha
add
sbb
add
jg
rol
add
add
xor
jp
enter
add
add
add
dec
add
pusha
or
clc
add
nop
add
test
cs
call
sbb
dec
adc
add
add
add
mov
pusha
add
add
add
add
add
push
loopne
lock
in
add
add
in
push
adc
add
add
pusha
add
add
aas
adc
add
jg
popf
add
loopne
inc
sbb
add
adc
adc
add
pop
lock
and
mov
push
in
rol
add
push
call
sub
sub
adc
test
xor
push
cmp
rol
(bad)
jae
mov
mov
inc
ss
pop
cmps
jo
add
dec
add
inc
fidiv
sahf
data16
into
add
push
jo
out
sub
push
add
push
mov
add
fistp
cmps
mov
add
add
push
xor
inc
add
int3
mov
adc
adc
(bad)
out
pop
bound
sub
outs
push
push
loopne
das
add
out
add
arpl
or
sub
loopne
scas
add
push
jmp
shr
or
outs
(bad)
pop
add
add
sub
jle
fsubrp
inc
push
push
push
pusha
push
pop
jo
add
push
mov
push
mov
push
pop
loopne
lock
mov
pop
pop
and
xor
inc
push
pop
pusha
pop
jo
push
add
add
das
mov
idiv
pop
cmp
add
dec
or
or
or
or
(bad)
push
ret
aaa
cmp
or
jo
or
out
or
or
(bad)
or
or
aas
jnp
or
or
or
or
or
push
or
add
mov
xor
cs
nop
or
or
imul
mov
adc
lock
add
adc
ret
and
pop
or
or
or
ficom
push
or
mov
nop
push
mov
(bad)
mov
ror
es
or
or
adc
xor
(bad)
or
adc
add
pusha
or
fistp
out
sahf
or
add
jae
dec
rcl
or
fwait
cmps
or
loope
dec
or
or
or
inc
or
or
cld
push
popa
in
mov
jecxz
or
or
or
push
stos
mov
es
loopne
pop
jae
cdq
pop
add
or
or
ficomp
dec
add
and
wrmsr
or
push
pusha
or
jg
or
ror
or
cld
push
and
xor
inc
push
push
push
pusha
push
jo
or
nop
push
mov
push
ror
loopne
inc
and
cmps
push
lar
push
xor
inc
pmaxsw
pusha
or
or
add
mov
sub
jbe
sar
(bad)
bswap
xchg
lock
ret
cmps
jb
hlt
pop
adc
sbb
mov
inc
cmovge
jg
jnp
and
mov
fstp
mov
mov
je
push
mov
inc
shl
adc
xchg
call
push
adc
dec
and
outs
aas
cmp
cmps
add
neg
scas
adc
aaa
push
adc
xor
enter
add
add
push
mov
adc
adc
xchg
mov
sar
add
adc
jle
and
xor
sahf
es
xcrypt-cfb
cmps
and
fild
inc
inc
ror
pop
cmps
cld
outs
fidivr
add
jo
pop
pusha
or
aaa
adc
dec
stos
movs
or
xchg
test
fiadd
sbb
divps
ud0
inc
js
rcl
lahf
adc
adc
adc
sub
cmps
scas
aaa
adc
adc
adc
mov
pusha
or
adc
jg
cmp
push
or
adc
shl
add
adc
pop
jo
fnstsw
adc
adc
adc
out
mov
adc
adc
adc
push
aas
pusha
adc
add
jbe
bound
fistp
xchg
cmp
mov
add
sub
in
mov
pcmpeqd
retf
push
or
rol
lock
xor
adc
pop
cmp
pop
arpl
and
adc
inc
xor
adc
jo
adc
adc
push
adc
neg
rol
scas
adc
adc
mov
in
stos
dec
int3
or
into
push
and
stc
aad
jmp
push
cmps
fwait
sbb
scas
out
ja
jecxz
jnp
add
jo
sbb
pop
sbb
xor
mov
ins
nop
push
pop
retf
dec
fiadd
push
jl
adc
push
iret
jecxz
in
pop
ss
jg
pop
jp
cmp
and
es
xor
jg
pop
mov
fcom
push
push
pusha
aas
add
or
mov
or
mov
inc
and
sub
and
or
aas
add
mov
outs
fild
push
loopne
sti
loopne
js
sbb
nop
pop
mov
pop
jg
adc
loopne
loopne
rcl
fstp
mov
xor
inc
sbb
and
xor
sbb
or
sbb
dec
jb
add
ror
loopne
add
dec
rep
iret
lock
ss
sbb
sbb
pop
adc
cld
enter
jg
and
xor
add
sub
sbb
push
sbb
jo
sbb
sbb
inc
push
sbb
shr
fmul
iret
les
add
pop
fidiv
out
loopne
add
add
mov
ds
pop
in
xor
add
sbb
ds
(bad)
push
adc
or
adc
ds
push
adc
jle
idiv
sbb
sbb
sbb
add
sbb
cmovge
adc
adc
mov
xchg
adc
add
fidiv
sbb
sbb
movs
sbb
push
jle
add
or
dec
jnp
iret
leave
add
cmp
push
mov
ror
sbb
add
push
add
or
neg
int3
out
push
add
push
ficom
mov
add
cmp
sub
or
addr16
mov
sbb
aaa
sbb
or
mov
mov
cld
push
push
enter
add
add
add
or
adc
add
pop
pop
aas
call
mov
ror
mov
dec
and
jg
in
in
push
imul
icebp
adc
cmp
or
push
push
shl
jg
sbb
cmp
(bad)
push
(bad)
xlat
jns
add
leave
ins
mov
fnsave
aas
sub
bound
add
loope
dec
or
pop
or
test
scas
rol
or
(bad)
cs
mov
sub
sub
movs
popa
jg
mov
mov
pop
sbb
or
cmp
fcmovnb
push
cld
add
pop
sar
add
mov
ins
out
fwait
ret
pop
or
daa
sub
imul
lods
pop
dec
ins
test
pop
sbb
dec
add
add
adc
mov
fst
pop
or
or
shr
push
iret
and
adc
pop
or
pop
sbb
mov
popa
(bad)
outs
mov
inc
scas
and
seto
pop
lahf
or
jbe
lahf
add
cmp
shl
lahf
mov
add
adc
pop
fistp
imul
das
ins
push
sub
aas
mov
loope
add
mov
mov
push
cwde
inc
xchg
jge
mov
sub
gs
int
push
cs
lods
and
mov
imul
inc
push
sbb
mov
addr16
or
or
xchg
add
adc
ret
add
imul
mov
ins
cmp
mov
add
push
add
fadd
or
pop
(bad)
jns
out
xor
dec
pop
and
test
mov
(bad)
(bad)
cmp
pop
lahf
push
sub
dec
inc
pop
fnstsw
and
(bad)
xchg
mov
test
adc
leave
cvtps2pi
call
cmps
pop
add
adc
add
adc
sbb
cmp
and
add
add
inc
push
in
popa
pop
adc
and
imul
jmp
inc
je
adc
jo
mov
les
sbb
lods
and
or
add
or
jmp
pop
mov
sub
push
ins
xor
cdq
add
fistp
dec
pop
enter
ret
xor
sti
and
fwait
xchg
or
lods
mov
pop
ja
sbb
adc
adc
xor
aaa
dec
adc
sbb
mov
add
mov
ins
fwait
jg
add
pop
lods
dec
sub
mov
and
retf
aas
jecxz
mov
or
sub
jnp
pop
push
mov
pop
cmp
fstp
call
mov
mov
adc
adc
adc
jge
retf
pop
cmp
sbb
cmp
adc
sbb
xchg
in
adc
hlt
add
push
cmps
data16
push
or
xor
adc
mov
test
add
jno
out
or
daa
lahf
or
or
out
fadd
sbb
add
gs
add
das
fcomp
add
sbb
sbb
add
xchg
mov
or
stos
or
sbb
push
jmp
sbb
add
or
outs
pop
and
mov
addr16
mov
and
daa
add
daa
fidiv
add
add
fild
pop
or
mov
sub
pop
ins
sub
pop
pusha
or
aas
sbb
sbb
out
mov
in
push
sbb
gs
fimul
jno
sbb
in
adc
int3
or
popa
daa
add
pop
dec
sbb
ja
push
imul
xor
sub
mov
(bad)
(bad)
jmp
push
ficomp
sub
sbb
mov
dec
inc
push
xor
adc
mov
ret
mov
int
push
push
or
adc
cmp
and
push
jecxz
dec
popa
or
sub
pop
cmp
cwde
in
mov
adc
int
or
test
cmp
push
cmp
or
fnstcw
or
inc
inc
test
sbb
popf
pop
fld
mov
jae
jo
xchg
popa
and
jg
or
mov
movs
pop
xchg
mov
sbb
iret
mov
mov
sar
fadd
test
pop
rcr
or
call
add
add
mov
xchg
push
jb
jnp
jnp
dec
jo
lds
jno
rcl
adc
mov
call
cmps
push
(bad)
sbb
mov
sbb
inc
add
rol
pop
pop
xor
lahf
sub
jg
pop
mov
cmp
lods
pop
sbb
sbb
xchg
lock
pop
adc
cmp
movs
mov
xlat
stos
mov
sbb
lods
and
sub
stos
mov
aas
(bad)
iret
xor
push
cmp
sub
pop
adc
and
pop
jecxz
inc
fwait
(bad)
push
aas
xchg
lea
cmp
or
pop
pop
sub
mov
push
outs
xchg
pop
call
sbb
add
mov
sgdtd
sbb
(bad)
pop
movs
xchg
and
push
push
lods
lea
inc
sub
inc
leave
add
add
inc
sub
mov
mov
in
imul
fcmovnbe
scas
sub
cmps
inc
adc
mov
mov
jb
sbb
(bad)
mov
cmps
sbb
sbb
push
xchg
pop
inc
les
neg
and
imul
fist
xor
pop
and
sub
mov
bound
mov
add
mov
popa
ds
add
adc
xor
icebp
push
and
or
ins
sti
mov
or
adc
or
pop
es
rol
jo
adc
arpl
or
and
pop
in
mov
mov
ja
xor
add
dec
adc
adc
fiadd
leave
or
add
and
or
xor
xchg
mov
adc
pusha
mov
pop
pop
aaa
pop
dec
xor
fiadd
cs
or
inc
adc
pop
sbb
or
jo
adc
faddp
mov
adc
not
idiv
add
sub
inc
inc
pop
push
addr16
inc
xchg
xor
cmps
push
inc
or
scas
pusha
xlat
dec
shl
sub
fistp
loopne
pop
lock
ins
sbb
add
imul
cmps
pusha
ret
adc
xchg
add
imul
rol
jbe
mov
pop
shl
(bad)
pusha
fs
and
add
add
add
(bad)
aas
scas
jbe
out
rcr
or
mov
shl
mov
mov
mov
data16
adc
or
adc
dec
dec
dec
sbb
and
ins
add
(bad)
jg
fadd
das
shl
rcl
paddq
popf
pop
mov
bswap
lahf
shr
dec
push
dec
mov
(bad)
xor
pop
inc
(bad)
mov
scas
mov
jmp
cmp
clc
aas
pushf
pushf
pushf
mov
adc
sbb
pusha
dec
inc
sbb
jg
daa
mov
and
xor
inc
xchg
and
daa
dec
dec
adc
cmps
xchg
push
push
lahf
mov
js
jnp
xor
xor
inc
mov
aas
jmp
push
lods
mov
(bad)
(bad)
(bad)
aas
sbb
ret
sar
aas
lds
aas
call
imul
add
out
push
push
aad
pop
push
dec
(bad)
das
(bad)
fcomi
in
leave
psubusw
xor
jecxz
jmp
and
fcmovnb
cmp
mov
test
movups
xchg
in
aas
outs
aas
pusha
and
dec
es
sub
aaa
mov
mov
es
pop
sbb
mov
adc
clc
inc
lahf
daa
mov
and
sub
sub
adc
sub
pop
add
mov
aam
sub
pxor
mov
scas
lahf
mov
ucomiss
inc
add
iret
jg
push
xor
scas
adc
xchg
pop
movd
inc
inc
(bad)
xor
dec
dec
dec
cmp
cmp
mov
(bad)
cmp
cmp
add
mov
(bad)
inc
pop
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
lods
or
daa
dec
dec
pop
add
sub
push
xchg
jmp
fistp
jns
inc
out
imul
les
rol
bound
and
js
and
enter
mov
rcr
and
pop
dec
fucom
jg
push
into
jne
imul
in
aas
pop
icebp
repz
stc
cmc
or
in
loope
adc
dec
mov
imul
push
ins
sbb
fistp
and
mov
rol
ins
xor
pushf
or
(bad)
dec
aad
(bad)
jno
dec
popa
aas
scas
aas
jne
push
call
call
or
mov
outs
stos
fcmovbe
add
pop
mov
das
scas
out
stos
push
inc
and
sub
mov
leave
add
aam
adc
pusha
or
inc
test
jg
dec
or
lahf
stos
fs
test
fisubr
push
stos
mov
pop
fild
inc
mov
mov
mov
scas
inc
push
add
(bad)
or
outs
aas
add
mov
pop
mov
push
into
pop
add
das
inc
test
inc
jmp
(bad)
dec
push
dec
mov
aas
add
test
and
push
mov
inc
neg
mov
mov
add
mov
add
imul
or
dec
jmp
cmp
and
push
adc
push
push
dec
cmp
push
adc
adc
and
(bad)
inc
dec
push
sub
xor
clc
mov
movs
sub
dec
(bad)
icebp
call
or
leave
adc
xor
gs
imul
dec
xor
push
push
mov
popf
or
aas
shl
inc
inc
cmp
sbb
popf
mov
dec
pop
ins
sbb
gs
stc
push
test
mov
or
mov
jae
push
imul
push
push
jb
ins
test
mov
pop
mov
arpl
and
xchg
mov
xor
inc
popa
js
or
inc
js
outs
popa
neg
and
(bad)
data16
imul
or
dec
mov
and
or
cmp
sub
sbb
xor
jo
ss
loop
adc
in
or
neg
xchg
inc
neg
pop
fadd
cs
push
push
shl
ins
mov
sbb
pop
jmp
or
add
add
mov
mov
push
inc
sbb
cmp
dec
jbe
stc
mov
jl
pop
and
enter
js
cdq
jo
lods
fwait
mov
push
xchg
pop
out
in
stc
cmp
jl
sahf
xchg
cwde
inc
fdivr
hlt
xchg
aaa
ja
mov
ins
sub
pop
and
leave
cmp
cwde
sbb
test
inc
pusha
popf
stc
pushf
cmp
or
neg
clc
jecxz
pop
lock
and
out
in
stc
les
jl
lock
adc
rcl
repnz
dec
fdivr
cmp
and
fsubr
inc
test
xlat
movs
rcl
xor
mov
cmp
fistp
adc
retf
(bad)
ja
pop
mov
mov
mov
test
xor
in
jl
into
js
int
adc
xchg
outs
push
jb
mov
les
or
push
je
repnz
push
and
imul
das
jmp
jns
dec
xor
add
icebp
es
fld
cmp
je
pop
nop
jb
orps
in
in
or
add
invd
inc
imul
add
mov
add
dec
inc
call
push
stos
inc
neg
or
inc
data16
into
xchg
dec
mov
fist
jo
push
pop
push
ja
aad
or
loopne
add
sub
and
mov
mov
fld
and
inc
adc
scas
aam
inc
add
or
loopne
push
mov
or
pusha
setno
iret
jae
add
es
ins
stos
repnz
popa
and
mov
into
inc
add
es
adc
cdq
das
xchg
xchg
pop
mov
add
push
test
xor
bound
mov
dec
cmp
sbb
cmp
pusha
push
mov
sub
xor
adc
inc
movs
cwde
je
add
sbb
fistp
sbb
hlt
adc
test
shl
sub
xor
sar
inc
add
cmovae
fwait
mov
cwde
cmps
and
inc
sub
out
sbb
lea
add
sbb
(bad)
clc
sub
mov
jns
jb
repz
xlat
pop
aaa
(bad)
mov
jae
dec
pop
outs
add
ins
pop
cmp
jecxz
mov
cmp
das
push
add
push
mov
sbb
pop
add
or
and
or
add
sbb
jge
loopne
into
or
ins
dec
xlat
mov
xchg
das
movs
cmp
sbb
js
xor
ja
push
pop
ja
ins
adc
add
jo
inc
ret
mov
or
cwde
call
les
movs
cmp
xchg
cmovbe
or
loop
xor
mov
mov
inc
mov
arpl
mov
cli
inc
arpl
imul
vpackssdw
invd
ret
dec
dec
dec
jg
movs
repnz
daa
and
ret
pop
mov
cmp
and
ret
sbb
jp
ins
out
stc
jnp
ss
imul
sub
add
leave
call
or
sahf
sub
or
xor
add
fmul
mov
lods
push
in
push
es
out
jge
add
and
and
adc
mov
and
dec
je
leave
(bad)
or
(bad)
or
add
cs
movs
and
inc
add
nop
jmp
inc
lock
or
jne
lds
add
add
xor
jl
xchg
ins
rcl
mov
mov
int3
les
loopne
xor
adc
and
jo
xor
lahf
and
int3
les
call
adc
imul
scas
sub
stos
in
and
and
push
inc
sbb
sub
inc
or
dec
mov
(bad)
enter
jne
rol
mov
out
inc
and
and
cwde
mov
or
xor
fwait
push
in
jns
dec
fstp
ret
inc
push
push
xchg
or
mov
fstp
or
ja
add
loop
mov
in
mov
ins
(bad)
(bad)
scas
xor
inc
xchg
inc
int
inc
inc
jb
mov
pusha
int
pop
xor
daa
int
inc
lock
mov
rol
outs
sbb
jb
dec
(bad)
and
sub
or
pop
dec
in
dec
lds
out
out
inc
add
retf
inc
adc
popa
push
sbb
push
jl
cld
(bad)
das
sbb
add
call
(bad)
mov
push
enter
cmp
iret
and
js
je
jno
call
sbb
rcl
xor
test
push
inc
lock
sub
leave
adc
and
or
inc
or
mov
mov
test
leave
mov
mov
rsm
leave
inc
jl
and
inc
test
pop
mov
adc
push
inc
retf
fstp
fwait
sbb
push
imul
ins
mov
(bad)
dec
add
out
mov
test
push
data16
call
xor
in
pop
and
data16
cmp
retf
xchg
adc
mov
retf
cmp
mov
mov
or
sbb
mov
pop
mov
pop
inc
mov
jbe
add
fsub
fidiv
call
xor
shl
retf
mov
cmp
inc
outs
movs
int3
nop
int3
xchg
int3
jb
push
add
sub
mov
fst
mov
push
sub
pop
xor
xchg
adc
int3
fisubr
dec
mov
rol
int3
push
aam
leave
leave
inc
dec
hlt
fsub
mov
cmps
push
in
push
xor
aam
cmp
cmp
pushf
into
test
push
pop
xchg
sbb
into
mov
mov
das
or
or
iret
aaa
xchg
and
inc
iret
sub
xor
inc
dec
pop
stos
out
dec
call
popf
mov
sbb
inc
int3
dec
in
sub
jb
fcmove
into
jbe
and
cmp
inc
iret
je
jb
enter
jl
adc
shr
ja
adc
ins
mov
jo
push
sbb
dec
cmp
mov
cmp
shr
rcl
mov
mov
test
cld
xchg
mov
mov
enter
mov
add
ffreep
pop
les
push
push
and
jbe
push
inc
je
movups
fidiv
sub
sbb
mov
mov
aaa
xor
ja
sbb
sbb
pop
and
stos
in
dec
loopne
add
cmp
into
or
inc
ret
(bad)
xor
cwde
pop
pop
and
and
mov
aam
aam
mov
adc
sar
sub
add
mov
and
sub
outs
mov
pop
mov
push
out
xchg
out
add
call
int3
ret
xchg
rol
or
sub
les
(bad)
push
(bad)
fld
jl
adc
jmp
or
xlat
mov
or
(bad)
xlat
jmp
mov
(bad)
and
sub
mov
and
push
push
cmps
push
leave
leave
int3
shr
and
pop
inc
test
push
mov
cwde
fmul
sbb
rol
adc
sar
fsubr
iret
pop
sub
push
shl
in
xchg
cmp
pop
sub
xor
shr
sbb
shl
pop
sub
nop
mov
adc
mov
das
(bad)
fstp
clc
(bad)
mov
dec
push
sub
pop
sbb
sub
aam
nop
ficom
das
das
(bad)
ficomp
mov
adc
xlat
pop
xor
add
outs
fist
push
leave
xchg
fist
lods
sbb
xor
gs
pop
mov
aas
sahf
pushf
mov
ficom
pop
dec
adc
mov
xlat
pop
xor
xor
das
or
and
ja
fdiv
loop
inc
and
pop
inc
shl
inc
xchg
fst
push
mov
fstp
je
push
jne
(bad)
fld
ins
sbb
jns
pop
sub
sbb
movs
pop
push
and
shr
mov
cli
jo
vminss
add
xor
mov
cmp
xor
test
mov
cmp
xor
xchg
pop
mov
add
cmp
inc
sahf
pop
enter
pop
mov
xor
imul
push
les
or
adc
fiadd
es
sbb
or
repz
xor
pusha
test
sbb
push
jp
jbe
or
add
cmp
xor
retf
imul
dec
jp
jl
mov
and
mov
sub
push
imul
fdiv
out
add
jnp
add
add
push
or
in
mov
dec
fwait
das
sbb
mov
cmp
and
xchg
shl
or
imul
sbb
dec
imul
and
jae
imul
cs
jge
movs
int3
leave
sbb
lods
inc
fldcw
ss
push
and
pop
jns
mov
icebp
add
dec
gs
mov
(bad)
or
push
or
sub
xchg
arpl
mov
fst
xchg
fld
add
addr16
mov
fld
pop
(bad)
lods
loope
cmp
xor
shl
fmul
ins
jle
test
push
sbb
inc
push
dec
ficom
pushf
jnp
or
push
mov
(bad)
sbb
push
loopne
sbb
int
imul
push
jb
lea
stc
jns
mov
push
or
or
mov
adc
popa
sub
adc
data16
pop
xchg
stos
lahf
cmp
loop
mov
daa
pop
das
or
sbb
and
dec
nop
mov
jge
inc
clc
jge
shr
and
clc
push
cdq
mov
or
in
adc
(bad)
daa
mov
imul
and
inc
pop
xchg
sbb
add
fisub
add
mov
inc
movs
out
fdiv
xor
push
mov
cmp
adc
add
scas
mov
rcl
das
add
into
je
dec
push
sbb
mov
aam
aam
cmp
pop
mov
cdq
mov
test
xor
outs
fsubr
sub
sbb
in
xchg
addr16
enter
out
add
xor
push
add
je
or
sbb
cmc
cmp
int3
les
jge
inc
icebp
and
outs
popa
sub
xor
pop
das
scas
(bad)
mov
popf
jns
repz
sbb
adc
data16
sbb
in
add
cmps
xchg
out
or
sub
pop
(bad)
jge
adc
jbe
jnp
push
dec
hlt
add
pop
mov
dec
inc
dec
mov
cvtpi2ps
jge
cmps
push
fwait
add
lods
inc
jb
cwde
stos
test
mov
pop
jp
dec
xchg
inc
inc
es
pop
jl
rcl
inc
or
ret
sub
xchg
xor
mov
lahf
or
sbb
movs
movs
sbb
sub
push
ficom
cmp
or
imul
jns
sub
dec
or
push
and
mov
repz
push
sub
imul
lds
lea
cld
out
rcr
add
hlt
inc
push
sbb
and
dec
mov
pop
dec
pop
cmp
push
call
das
mov
out
pop
xchg
daa
outs
jg
mov
call
xchg
inc
clc
out
daa
and
lock
mov
mov
rol
inc
lea
or
retf
dec
jmp
cmp
pushf
int3
mov
jmp
cmp
in
inc
sahf
push
in
jb
cmps
jb
repnz
adc
inc
jnp
jns
jb
in
out
dec
cmp
cmp
test
pushf
pushf
mov
gs
lock
pop
mov
dec
dec
dec
(bad)
lock
pop
cmp
cmp
sbb
mov
jmp
dec
inc
jno
ret
daa
daa
daa
and
rcl
xchg
xchg
xchg
xchg
cmc
pop
sahf
loop
leave
leave
enter
(bad)
fsubr
sbb
mov
and
paddw
adc
repz
sbb
mov
add
cmps
(bad)
jno
push
push
inc
inc
jne
mov
push
movs
or
pop
xchg
or
push
adc
add
or
test
mov
sbb
jno
dec
sbb
push
call
add
pop
xor
popa
mov
popf
dec
add
add
xchg
xchg
loop
xor
bound
cld
and
jb
(bad)
push
sub
cld
outs
mov
inc
jo
fcmovb
aam
cmp
outs
mov
imul
dec
and
dec
push
leave
nop
sbb
adc
adc
add
pusha
mov
and
mov
mov
enter
leave
push
ror
adc
in
jl
or
rcr
and
or
mov
adc
sti
inc
mov
dec
inc
push
dec
in
adc
imul
nop
dec
adc
jl
leave
daa
cmps
and
add
add
pusha
nop
inc
or
pop
or
fist
repnz
cmp
push
lods
add
lods
pop
pop
movs
scas
test
sbb
push
mov
push
mov
adc
(bad)
push
mov
jne
and
repz
pop
add
mov
add
outs
jo
push
outs
mov
lea
nop
stos
add
inc
cmp
inc
jnp
test
jo
or
pop
and
jns
add
lods
mov
mov
call
(bad)
adc
xchg
adc
jl
mov
cmp
pop
or
adc
sub
leave
push
or
movs
cmps
or
mov
sub
repnz
sbb
and
xchg
or
les
or
xor
xor
or
inc
xor
mov
fsubr
int3
adc
mov
xchg
or
clc
xchg
mov
or
mov
scas
and
ret
shl
add
arpl
mov
loopne
sub
into
push
gs
outs
jbe
loop
sbb
repz
push
dec
add
mov
loope
retf
pop
and
cmp
outs
and
dec
gs
dec
jo
scas
call
cs
aad
or
dec
or
mov
add
mov
outs
push
inc
stos
jne
mov
ins
repnz
fisttp
add
stc
pop
inc
or
fistp
fbstp
rol
cmps
push
pop
mov
inc
sbb
mov
push
xor
add
mov
add
mov
out
and
or
cmp
and
ror
pop
push
scas
mov
dec
add
inc
nop
call
xchg
xchg
dec
xchg
inc
movs
push
(bad)
cli
cli
cli
rol
inc
inc
cli
inc
outs
or
call
imul
(bad)
cli
int
and
or
popf
jge
xor
clc
daa
in
mov
call
(bad)
loop
jbe
inc
add
enter
das
add
cs
int
inc
dec
jae
mov
mov
push
push
xchg
or
and
cld
sbb
push
push
inc
out
mov
sahf
pcmpgtd
inc
retf
inc
jb
xor
or
jb
jb
ret
shl
lock
jns
call
(bad)
and
cmp
inc
adc
pop
add
or
cmp
or
add
pop
(bad)
add
inc
shl
push
mov
iret
pop
(bad)
mov
jmp
mov
pop
fistp
iret
xchg
ins
sbb
sub
lods
or
cmps
push
xor
push
sbb
lods
mov
fs
gs
and
push
add
mov
jmp
sub
pop
nop
mov
or
imul
js
xor
and
test
inc
bound
dec
push
pop
fadd
or
ret
ins
add
test
jns
fisub
lldt
nop
in
movs
or
cld
mov
in
add
push
ficomp
inc
loop
ret
ret
and
movs
add
push
dec
movs
sbb
lds
push
icebp
and
push
mov
cmp
out
jo
xor
in
hlt
adc
xor
push
and
pop
and
adc
sub
add
sub
fist
xor
xor
push
push
lods
loop
and
or
push
pop
mov
movs
stos
cld
mov
mov
aad
cld
inc
inc
sbb
adc
sbb
xor
sub
xor
xchg
add
push
enter
fsubrp
sbb
das
pop
push
sbb
jl
inc
stc
mov
mov
in
add
fdivp
sahf
cmps
and
push
fs
push
jo
(bad)
jl
leave
mov
sbb
pop
cdq
or
stc
adc
inc
dec
inc
push
outs
push
in
sub
xor
mov
dec
(bad)
sbb
fmul
ja
inc
pop
mov
setnp
repnz
add
or
ins
nop
inc
push
frstor
pop
ret
nop
lahf
mov
call
test
jo
pop
mov
jbe
cwde
adc
and
fistp
push
and
xchg
pop
push
add
cmovb
js
stos
mov
pop
jne
dec
pop
push
cmp
and
cmp
pusha
xchg
sub
aaa
pop
daa
jl
adc
xchg
mov
pop
lods
das
rol
(bad)
cmp
jnp
enter
int
sbb
mov
(bad)
enter
add
jb
adc
push
add
sub
(bad)
or
push
push
inc
aaa
enter
test
out
loop
mov
mov
xor
sub
mov
inc
lds
and
mov
adc
xchg
pop
lds
add
pop
and
pushf
cwde
push
je
mov
add
js
stc
inc
icebp
jns
and
pop
xchg
jae
(bad)
add
push
dec
jb
in
push
sahf
cmp
xchg
push
push
xchg
push
js
push
outs
nop
dec
and
pop
push
push
test
ret
and
pop
aaa
pop
in
jge
jb
loop
(bad)
and
je
js
xchg
or
jle
adc
out
in
push
dec
into
outs
push
push
ins
js
out
sahf
cwde
mov
enter
or
mov
pop
mov
shl
in
pop
sbb
pop
wbinvd
adc
adc
pop
enter
into
jo
cmp
jno
pop
dec
dec
aaa
jb
jns
mov
enter
jo
clc
into
bound
dec
daa
pop
in
mov
adc
mov
pop
sub
inc
or
pop
dec
and
mov
add
mov
iret
pop
rol
sub
and
push
or
xchg
ret
push
inc
imul
push
stos
and
pop
jb
adc
mov
lods
adc
hlt
pop
fmul
add
lods
mov
cmps
jmp
or
add
repnz
and
outs
and
add
adc
cmp
test
adc
inc
xchg
cmps
ret
adc
cs
sbb
add
hlt
mov
or
xchg
push
mov
bound
pop
mov
dec
retf
imul
add
xchg
sbb
enter
mov
adc
mov
jnp
out
call
or
(bad)
add
xchg
out
cdq
jmp
push
not
xor
popa
add
or
push
and
jb
in
jle
(bad)
movzx
sub
pop
add
and
pop
add
inc
mov
add
push
adc
das
dec
cmps
mov
sbb
(bad)
test
add
(bad)
pop
push
ror
rcl
pop
mov
lods
adc
sub
fbld
dec
sti
sbb
mov
inc
cmp
jne
loop
ins
punpckhdq
add
cmp
(bad)
add
repz
xchg
pop
pop
inc
xchg
(bad)
or
ret
pop
inc
or
jne
sub
add
ret
add
push
inc
mov
pop
test
daa
push
push
test
std
outs
je
mov
(bad)
mov
pop
or
add
rcr
push
xor
xchg
mul
ins
dec
jmp
sub
and
add
pop
(bad)
data16
ror
add
cli
xor
push
movs
xor
ins
ret
rcl
(bad)
icebp
cmps
add
prefetcht2
lods
call
add
stos
out
sbb
or
push
mov
and
mov
jne
scas
xor
push
sub
mov
push
(bad)
push
test
pop
xor
pop
push
pop
or
or
push
ins
jmp
sub
xor
sub
push
adc
push
push
lock
fldcw
xor
sub
push
call
mov
bsf
shr
add
add
jns
je
push
adc
sub
pop
pop
and
add
rcl
add
sub
test
shl
mov
iret
ds
fwait
mov
jg
sahf
cmp
push
movs
adc
mov
fnstcw
sub
pop
add
pop
adc
enter
pop
sub
cmp
jg
xlat
add
outs
aaa
sub
push
and
xchg
(bad)
mov
pop
jg
movzx
cmp
jne
icebp
add
into
adc
cmp
pusha
pop
inc
jb
adc
push
cwde
mov
push
sub
add
lea
jbe
int
adc
cmps
fimul
fdiv
or
ret
ds
nop
outs
aas
xchg
or
jp
add
add
push
mov
and
fdiv
outs
and
jb
or
adc
(bad)
jle
jno
xor
pop
cld
jl
mov
pop
pop
pop
cmp
jne
fadd
js
test
int
pop
push
mov
cs
cmovb
mov
es
and
sbb
xor
or
mov
cmp
sub
clc
out
addr16
add
cmp
aad
and
add
jns
sbb
xchg
daa
pop
fadd
add
sbb
and
push
xor
je
pop
rcr
fcomp
ja
add
push
jmp
jns
cmc
xchg
xchg
xor
pop
jo
jbe
dec
or
mov
mov
add
add
add
push
sub
loope
cmc
sub
iret
push
push
adc
push
jbe
jno
test
sar
enter
jns
call
push
ja
adc
clc
jnp
sbb
jmp
inc
cmp
jl
arpl
mov
repz
jge
ss
rcr
sbb
div
mov
jo
pop
xlat
fldpi
add
ret
pop
sub
fild
xor
fmul
push
nop
xchg
and
xchg
(bad)
pusha
mov
test
fistp
aad
hlt
add
stc
hlt
push
cli
loop
jo
lea
sbb
xor
stos
mov
rcl
ja
cmp
adc
idiv
push
pushf
sub
out
jne
(bad)
push
add
jne
add
and
adc
arpl
adc
add
(bad)
lea
inc
ins
xchg
js
cli
sbb
ins
adc
mov
ret
lock
add
or
add
add
cdq
nop
mov
jmp
or
xor
mov
mov
push
rcr
xlat
and
mov
xchg
push
lock
mov
and
fist
cmp
mov
cmp
jne
add
add
dec
sbb
loopne
mov
jne
adc
xchg
xchg
imul
sbb
or
lods
mov
mov
mov
mov
ret
(bad)
shr
aad
push
(bad)
add
std
jp
call
jmp
js
fsubrp
add
push
add
cmp
nop
or
cmps
sbb
or
(bad)
in
cmp
sub
add
sub
xor
adc
xlat
sbb
or
mov
add
nop
add
sbb
pop
jne
arpl
adc
and
jmp
xchg
popf
mov
in
mov
push
ds
je
les
xor
adc
lahf
imul
pop
mov
inc
inc
dec
jne
jmp
xchg
iret
and
or
rcl
push
jle
or
pop
cld
call
cmp
outs
dec
xchg
inc
inc
ucomiss
loope
add
loope
retf
setae
call
dec
and
aaa
dec
repnz
mov
mov
clc
fs
das
inc
test
or
xor
inc
test
loop
adc
enter
sub
mov
add
test
push
jl
ds
rol
imul
sub
xchg
add
push
and
bound
dec
adc
ja
mov
pop
jg
or
or
mov
pusha
test
pop
ror
repz
and
mov
fadd
push
or
cmp
outs
jbe
sub
add
ja
mov
ds
cdq
mov
push
(bad)
mov
or
sbb
or
hlt
jb
mov
pop
add
adc
and
xchg
add
aas
stc
repz
mov
loopne
cmps
jb
add
(bad)
out
std
std
xchg
mov
mov
mov
mov
xor
fcomip
in
arpl
mov
ret
add
jmp
mov
lea
in
fbld
add
das
por
call
pop
adc
sbb
mov
jecxz
repz
sub
or
pop
shl
pop
pop
inc
call
jl
and
adc
xor
adc
push
lock
pop
sub
push
lock
jne
push
xor
mov
ins
xchg
sbb
mov
inc
adc
xor
repz
dec
aas
cmps
adc
shr
sub
mov
pop
mov
pop
pop
pop
mov
inc
rcl
mov
pop
mov
jl
and
push
in
and
sbb
push
push
aas
call
mov
sub
sbb
pop
pop
push
loopne
mov
dec
loopne
sar
add
mov
cmp
enter
shl
dec
dec
jmp
outs
ins
cmp
mov
shl
rol
fcomp
fimul
dec
int
xchg
or
adc
cs
call
xchg
outs
mov
inc
add
pusha
ja
or
dec
xchg
mov
xor
inc
add
push
leave
push
pop
lock
and
adc
call
fdiv
inc
jge
into
sbb
out
or
jae
clc
jge
jbe
rcl
mov
mov
push
pop
jmp
out
pop
xor
or
xor
pop
fcmovnbe
push
add
lods
enter
pop
cld
int3
aaa
loope
lods
rol
push
les
jmp
inc
xlat
sub
lock
push
ja
cmp
jge
and
mov
cld
sub
sahf
or
inc
pop
aam
out
adc
pop
cmp
mov
hlt
inc
push
(bad)
mov
jmp
dec
jne
sub
push
jmp
jo
pop
js
rcl
gs
jle
adc
mov
pop
adc
or
mov
movs
or
mov
out
imul
sar
mov
adc
fdiv
adc
lea
add
mov
add
out
popa
ret
lahf
mov
outs
or
mov
mov
ss
pop
(bad)
ja
fadd
or
dec
push
lock
xchg
retf
lea
cdq
scas
ins
pop
or
mov
(bad)
xor
ins
imul
cmps
mov
or
mov
mov
sub
stos
(bad)
sahf
cmp
or
pop
mov
mov
je
adc
cmc
or
mov
or
pop
bound
mov
test
test
int
push
adc
leave
push
in
(bad)
mov
mov
test
inc
xor
jmp
xchg
add
mov
mov
push
ins
push
fmul
nop
retf
out
(bad)
xor
jb
jne
sbb
sahf
arpl
add
xlat
ja
xor
stc
push
push
push
js
pop
sbb
push
mov
bnd
inc
call
ins
cld
mov
retf
adc
outs
add
jo
test
cmp
enter
or
popa
sbb
xor
lea
sub
mov
mov
lods
mov
cli
adc
xchg
(bad)
sti
ins
lock
loopne
setne
jmp
cmp
push
sar
cmp
dec
pop
sub
push
add
inc
push
push
js
movs
add
ret
lods
ret
pusha
dec
aad
pop
ds
(bad)
add
inc
jns
sbb
js
add
dec
test
xor
add
jmp
pop
ret
dec
jp
shr
mov
ss
je
mov
or
fsub
arpl
or
add
dec
aam
punpckhdq
push
push
ficomp
lods
add
ds
aam
sbb
rcr
sbb
pop
fcom
fadd
push
sub
inc
xchg
add
cwde
sub
into
jbe
mov
xchg
mov
pop
mov
or
imul
pop
jbe
xchg
jbe
fucomip
pop
xchg
push
rcl
das
push
loopne
jp
cmps
mov
outs
les
adc
pause
ja
mov
ja
rol
cmp
add
mov
mov
add
adc
push
push
mov
(bad)
jb
sbb
pop
aad
scas
lock
and
cmp
push
and
sar
stos
push
or
loopne
fldcw
push
push
dec
stos
imul
retf
ret
pop
addr16
pop
call
mov
add
or
and
jae
jnp
lods
pop
movs
fidivr
sub
jne
sbb
add
pop
push
push
xchg
add
leave
outs
mov
mov
test
mov
out
addr16
fwait
(bad)
and
idiv
adc
and
daa
cs
push
mov
je
mov
idiv
je
clc
pop
lods
jno
jmp
adc
popa
cdq
sbb
push
sar
fstp
fmul
jnp
push
cmp
rol
cs
mov
sub
je
or
je
jnp
or
mov
data16
mov
repnz
inc
push
cmp
push
and
shl
xchg
adc
sub
or
adc
dec
cs
jb
adc
addr16
jnp
ins
jmp
adc
sbb
or
add
push
pop
test
call
je
xor
pop
xchg
xchg
pop
pop
outs
mov
mov
push
imul
push
push
ins
mov
push
sbb
adc
arpl
push
push
sbb
add
rol
mov
dec
and
cmp
sbb
fbstp
js
je
or
inc
mov
ud0
ja
add
popa
int
nop
adc
pop
mov
sbb
pop
(bad)
push
test
lahf
and
jl
sbb
mov
add
retf
push
mov
jne
sub
in
push
adc
fimul
std
cs
mov
xor
movs
xchg
out
or
push
push
outs
ins
iret
and
scas
rol
cld
fnsave
fdivr
ret
jle
jo
mov
mov
inc
cmp
ret
lds
jae
pusha
mov
test
pop
sar
jg
jmp
dec
push
div
or
adc
xchg
mov
clc
lock
aad
jae
adc
xor
cmp
in
mov
enter
fdivr
sbb
push
ffreep
fdivr
fisubr
mov
inc
jbe
or
or
lods
mov
jmp
hlt
rcl
sbb
inc
(bad)
nop
add
je
aam
sbb
inc
inc
push
inc
inc
fsub
or
inc
push
mov
pop
dec
pop
in
push
clc
cmp
out
push
push
hlt
clc
cld
push
xor
mov
clc
(bad)
hlt
jmp
dec
or
add
int
ins
xor
adc
pushf
xor
push
mov
in
aaa
call
mov
ret
pop
adc
cld
xchg
lods
in
call
add
leave
pop
jg
jo
fstp
fwait
(bad)
inc
out
mov
pop
push
add
push
jge
mov
aas
mov
and
mov
fsubr
push
lock
arpl
push
jmp
dec
xor
and
cmp
aam
fist
jge
mov
or
xor
push
push
inc
out
push
out
fwait
jne
mov
out
shr
cmps
jns
data16
shl
or
adc
or
cmps
and
shl
inc
test
int
hlt
cmps
jmp
add
inc
inc
adc
inc
xor
or
cmc
(bad)
lods
add
(bad)
mov
mov
fucomp
es
xchg
sub
test
or
xor
lock
adc
cmp
cli
ja
pop
ret
inc
or
shr
lahf
mov
ja
test
jmp
fst
mov
ror
idiv
xor
inc
mov
test
retf
push
mov
ins
xor
(bad)
cmp
aam
xchg
add
shr
add
jne
test
dec
add
cmp
jne
sbb
add
jne
push
add
aaa
mov
and
jno
pop
in
in
jno
sub
pop
mov
jp
or
loopne
add
cmp
dec
bound
lock
sbb
ret
jne
jecxz
sbb
add
mov
or
jmp
pusha
pop
add
mov
cmps
imul
cmp
jae
jo
xor
fst
push
shr
ret
mov
inc
push
jb
jl
jge
shl
xchg
mov
jno
sbb
adc
call
jbe
mov
or
add
add
movs
dec
xor
cmps
das
cs
movs
test
call
imul
sbb
pop
out
jmp
rol
loope
xchg
and
lock
mov
outs
or
not
lahf
(bad)
mov
xor
cwde
pop
cmp
cs
icebp
fisubr
dec
or
loop
adc
data16
shl
mov
rol
adc
(bad)
in
jg
mov
and
icebp
jbe
push
lea
mov
lods
and
mov
jg
add
(bad)
mov
jne
lea
jg
rol
pop
pop
pop
fld
(bad)
sub
loop
cwde
or
xchg
je
adc
push
cmp
inc
fcomi
cs
xor
adc
and
and
mov
add
and
mov
and
sub
dec
jne
pop
add
dec
out
fwait
sub
add
or
push
scas
sub
ins
sbb
fsub
das
sahf
sbb
push
dec
or
mov
popa
(bad)
sbb
jl
jo
mov
pop
ss
add
sub
loope
(bad)
or
ja
cmp
(bad)
add
pop
cwde
dec
dec
jnp
sbb
mov
dec
icebp
pop
sub
mov
add
xor
inc
or
cdq
mov
mov
dec
and
and
ror
pop
push
xchg
mov
sbb
cmp
pusha
inc
cmp
sub
pop
sub
loopne
loop
or
(bad)
fstp
int
mov
cs
adc
adc
mov
push
fimul
(bad)
xor
and
jns
xor
inc
sbb
(bad)
or
xlat
xor
nop
add
adc
loopne
clc
fisubr
iret
iret
imul
fcomp
mov
out
sub
push
xor
pop
inc
dec
push
or
rol
add
mov
fs
cmp
scas
jge
and
mov
ficom
fistp
mov
dec
ins
push
jmp
pop
mov
hlt
js
cmp
jg
jmp
inc
lods
test
pusha
(bad)
fcmovnb
cmps
pop
add
push
mov
or
mov
iret
jp
mov
xchg
(bad)
bnd
and
cmps
jge
cmp
and
pop
and
inc
cld
jge
push
add
push
je
(bad)
jnp
lea
push
mov
lea
mov
fwait
add
cmp
add
aad
cs
jl
inc
dec
lock
add
sbb
in
je
pop
aam
jbe
cs
in
add
mov
push
xlat
mov
cmp
lock
adc
jge
test
aas
inc
test
gs
pop
pop
hlt
div
mov
adc
xchg
ret
add
and
sub
out
adc
push
add
or
outs
lods
sbb
xchg
cmp
cmp
mov
sbb
and
aam
pop
xchg
fild
add
retf
adc
sub
loope
mov
pop
pop
rol
mov
sub
dec
inc
inc
push
xor
mov
mov
sbb
add
sar
xchg
mul
nop
cmps
inc
jp
mov
xor
inc
fcomip
sub
cs
setb
or
dec
xor
pop
es
mov
push
add
inc
inc
pop
shl
repz
mov
(bad)
mov
je
ret
xchg
(bad)
jle
pop
inc
(bad)
clc
movs
add
ret
jmp
or
loope
sbb
movs
ret
sub
jmp
xor
call
push
adc
add
and
cmp
or
mov
mov
pop
in
push
inc
shl
ror
std
cmp
stos
ins
call
jge
pusha
ss
lods
sub
sahf
call
inc
fs
xchg
pop
fadd
mov
fcomp
repnz
adc
jne
add
add
mov
xchg
into
push
into
and
(bad)
mov
or
call
daa
imul
jns
adc
sub
in
movzx
pop
sbb
mov
ins
xor
mov
cdq
add
inc
fldenv
outs
mov
adc
sti
mov
or
jne
cmp
je
test
dec
sar
add
jle
rcl
mov
add
or
sbb
outs
sbb
inc
add
push
pop
or
or
push
jne
fcom
mov
and
lea
sub
aaa
fst
adc
mov
sbb
add
cmps
addr16
aas
sub
movs
cmp
cmps
mov
je
jnp
or
inc
dec
adc
hlt
adc
jns
add
pop
aaa
cld
or
sub
jb
inc
push
or
cld
ss
dec
or
loop
retf
adc
test
push
dec
or
pop
jg
(bad)
jae
adc
cmp
jl
cmp
add
cmps
jae
push
xor
cmp
xor
or
add
xor
mov
ss
mov
neg
inc
jmp
call
or
and
int
ret
test
mov
mov
pop
retf
add
mov
xchg
pop
std
add
test
xor
push
push
loopne
shr
xor
aaa
cs
popf
jge
aaa
test
mov
inc
push
cmp
push
push
shl
xor
lahf
push
xor
push
clc
mov
push
in
cld
mov
add
or
je
adc
jmp
mov
inc
jo
push
lea
xor
mov
or
jmp
cs
jo
cmp
or
or
push
pop
pop
out
not
cli
push
jne
cmp
(bad)
xlat
pop
xchg
mov
sbb
xchg
xchg
xchg
or
jmp
inc
movs
or
pusha
neg
adc
push
cmovo
fnstsw
push
sbb
ins
pop
pusha
or
and
push
adc
mov
popf
xor
(bad)
jmp
push
lds
pop
lock
add
cmp
pusha
mov
cmp
sub
push
dec
pop
mov
and
dec
cmp
cmp
inc
push
push
xor
popa
push
and
jbe
test
hlt
inc
push
pop
cmp
cs
in
loop
les
sub
push
jne
scas
push
sbb
xchg
setns
ror
dec
test
mov
push
pop
lea
aas
add
adc
movs
sub
add
xor
and
ins
and
xchg
add
pop
fadd
add
add
push
mov
cmp
pop
and
pop
mov
stc
je
sbb
inc
xchg
jmp
push
sbb
frstor
jmp
and
push
test
mov
in
push
lods
sbb
or
aas
call
stc
cmp
into
loop
inc
sbb
adc
out
test
pop
pushf
pushf
mov
mov
jl
fs
lods
or
loopne
sub
sar
fcmovbe
jb
aad
mov
adc
ins
ret
cs
test
int
add
inc
outs
cmp
inc
in
aam
sub
xor
stos
adc
add
add
shr
add
push
mov
neg
jmp
or
ror
pop
push
push
mov
jbe
dec
push
sbb
jmp
dec
mov
adc
or
push
dec
mov
pop
je
dec
cmp
jne
pop
pop
daa
aam
adc
cli
sahf
add
xlat
jbe
mov
mov
mov
lock
outs
scas
call
mov
sar
jne
adc
push
adc
jle
jb
add
loopne
(bad)
dec
jge
add
or
in
icebp
out
(bad)
sub
(bad)
sub
push
jae
mov
sub
dec
jp
mov
add
mov
jmp
jne
adc
pop
adc
mov
mov
movsx
mov
add
fcomp
lea
or
or
ror
sbb
popf
xchg
idiv
mov
dec
ret
loope
mov
inc
push
inc
lods
or
add
ret
dec
fdivr
mov
rol
into
dec
(bad)
sar
mov
dec
jg
cmp
jl
mov
xor
sbb
push
adc
adc
repz
and
mul
cmc
adc
push
dec
ins
sub
xor
cdq
jne
adc
fisttp
sub
dec
mov
and
div
int3
push
jbe
xor
mov
mov
mov
cmp
enter
(bad)
and
or
js
cmp
jo
cli
adc
mov
push
fisttp
je
mov
dec
mov
div
mov
inc
lods
sti
mov
mov
je
dec
jne
loop
retf
lods
cmp
and
in
and
sub
data16
add
or
dec
js
cs
add
jno
data16
jns
jo
adc
dec
ja
sbb
mov
push
mov
retf
dec
mov
jmp
pushf
fwait
sub
call
and
cmp
mov
cmp
adc
push
jmp
or
dec
pop
test
clc
pop
inc
loop
ret
shl
pop
sub
cld
(bad)
outs
and
inc
outs
iret
imul
sub
and
adc
and
sub
inc
sub
xor
sub
sbb
pop
idiv
or
sub
sub
cmp
fs
xor
sub
xor
or
dec
aam
mov
fs
repnz
js
pop
cmp
fbld
mov
inc
mov
and
xchg
or
push
bound
clc
adc
or
lahf
popa
mov
dec
push
rcr
jmp
rcl
ins
lahf
dec
xor
rcr
push
fabs
rcr
or
fiadd
pop
frndint
dec
inc
fstp
fld
fstsw
fwait
mov
mul
(bad)
xlat
ret
fidiv
loopne
jnp
mov
(bad)
js
mov
mov
enter
shld
add
inc
jmp
jmp
or
enter
jge
sti
idiv
fist
or
cmp
jb
mov
js
dec
mov
cmp
jmp
data16
pusha
xor
jmp
mov
cmp
inc
xor
push
lock
jl
shr
mov
mov
ret
mov
or
add
dec
sbb
in
or
jg
ror
je
add
or
or
jge
cmp
jl
mov
jg
cmp
pop
jae
dec
add
leave
mov
or
inc
xchg
stos
sub
and
fidiv
xor
mov
sbb
adc
jne
mov
and
jne
dec
in
outs
xor
jmp
mov
add
stos
aas
and
mov
inc
jmp
enter
or
push
into
cmp
div
pop
jmp
xor
je
mov
iret
loopne
hlt
js
push
or
fadd
dec
call
(bad)
hlt
fwait
mul
lds
out
js
mov
push
push
sub
clc
out
icebp
xor
popf
outs
sub
inc
div
and
pop
scas
mov
fild
inc
stos
or
push
les
pop
add
lahf
fnstenv
mov
mov
mov
mov
ret
ret
clc
add
loopne
add
aas
jmp
fstp
mov
(bad)
test
add
fwait
or
sub
jo
lods
data16
cmp
push
repz
cmp
add
or
(bad)
and
add
jmp
inc
mov
xchg
stc
stc
pusha
imul
movs
push
cld
push
imul
pop
cmp
or
xchg
add
pop
rol
cmp
jge
leave
fild
fcmovb
jae
enter
mov
nop
gs
or
add
mov
or
dec
add
stos
xchg
and
xchg
daa
add
mov
out
and
(bad)
jge
mov
out
icebp
fild
cs
inc
add
mov
or
and
sub
sub
xchg
fptan
ja
and
sti
ins
add
push
sub
pop
fwait
mov
test
dec
inc
sub
or
mov
cmp
inc
out
inc
xchg
fstp
xor
das
shr
data16
leave
(bad)
jle
pop
xchg
push
sbb
mov
or
shl
inc
inc
test
jg
push
movs
test
jbe
shl
lods
cmp
sar
inc
cld
inc
xlat
pop
rcr
xor
mov
dec
cmp
popa
je
mov
ins
test
mov
xor
push
or
sahf
adc
inc
add
mov
xor
add
mov
jl
(bad)
out
jle
nop
jle
cmp
or
ficom
jmp
sbb
loopne
test
adc
add
ror
xchg
adc
push
int3
mov
xlat
xchg
inc
add
and
and
and
enter
mov
push
out
push
lods
add
mov
or
mov
xor
cmp
rol
pop
jbe
push
dec
stos
jge
jmp
add
push
fild
fdiv
mov
lods
xchg
(bad)
int3
add
push
out
xor
mov
fcmovne
xor
hlt
dec
push
test
rcr
jae
or
cmp
push
outs
push
dec
dec
cmp
jae
push
or
mov
shl
popa
shr
test
jo
adc
push
cmp
pop
pop
aad
adc
ss
or
aas
das
push
sbb
nop
clc
jp
icebp
push
and
nop
push
jle
xchg
jmp
ffree
nop
popa
sub
jg
adc
and
mov
xor
dec
(bad)
mov
add
pop
ret
push
cmp
jne
mov
cld
call
imul
rol
(bad)
cmp
adc
and
xor
adc
mov
adc
pop
fadd
push
and
sub
std
add
dec
cmp
test
push
in
fidiv
jo
(bad)
sub
(bad)
ja
xor
dec
jb
or
jb
sti
ins
fidivr
mov
(bad)
ja
adc
pop
int
dec
push
lea
pop
dec
inc
jne
inc
sub
hlt
push
xchg
ret
imul
mov
and
add
cli
add
repnz
ds
ds
mov
arpl
add
ret
or
sbb
ret
clc
fld
xchg
rcl
(bad)
xor
and
mov
mov
sub
sub
out
pop
or
pop
inc
jg
call
jg
cs
xchg
fild
pop
or
ror
add
pop
xor
dec
and
dec
data16
stos
outs
dec
cmp
adc
lds
imul
and
jl
xchg
(bad)
adc
push
mov
loopne
cdq
ret
push
push
fld
fwait
cmp
imul
fcom
movzx
or
pop
mov
pop
push
int3
adc
sbb
cmp
int
sub
lock
movs
neg
sub
ret
jbe
or
jp
cmp
(bad)
dec
add
jb
adc
sbb
fistp
adc
or
in
inc
and
mov
add
xchg
(bad)
push
jecxz
fcomp
pop
xor
arpl
cmp
jbe
mov
addr16
xchg
inc
imul
lods
test
push
hlt
xor
ins
sub
push
clc
mov
sub
push
push
cmp
inc
sti
adc
adc
jbe
ret
xor
and
loopne
xchg
mov
rcr
adc
add
dec
inc
movs
inc
sub
xor
lahf
(bad)
xchg
mov
icebp
adc
lods
mov
mov
mov
pusha
iret
sti
std
jmp
repz
xor
(bad)
sbb
mov
daa
xor
stos
xchg
repnz
movs
adc
cmps
ror
into
neg
repnz
mov
jne
gs
mov
jb
xchg
push
add
or
lock
mov
jl
sbb
xchg
pop
ins
inc
mov
aas
xchg
retf
addr16
sahf
movs
maxps
push
pushf
cmp
or
and
rol
adc
add
test
sar
jbe
add
ins
(bad)
mov
mov
out
mov
sbb
adc
bound
xor
fsubr
jmp
sar
or
in
sbb
or
jecxz
sub
adc
or
lea
xor
cmps
(bad)
mov
mov
loop
pop
cs
leave
push
ins
jge
idiv
add
addr16
ret
inc
pop
in
add
dec
leave
and
xor
les
xchg
test
cld
out
xchg
punpcklbw
mov
sbb
dec
inc
push
mov
in
and
sub
mov
movs
pushf
add
les
add
add
sbb
xor
sub
mov
or
add
test
mov
sbb
retf
jle
jae
cmp
sub
add
ret
push
aas
mov
mov
sub
cmp
clc
add
enter
xchg
add
mov
pop
add
scas
adc
mov
call
ret
mov
lds
mov
push
repnz
in
dec
pop
mov
add
call
add
loop
push
inc
inc
prefetchwt1
mov
dec
je
and
pusha
js
das
pop
adc
jne
jb
(bad)
mov
add
cmp
push
xchg
pop
jns
sub
dec
add
das
test
add
int3
(bad)
ret
mov
add
cmp
dec
adc
sub
inc
cmp
pop
inc
data16
data16
lods
jecxz
loop
push
popa
ret
das
sub
jp
jmp
cmp
subps
in
jecxz
mov
ss
xor
pop
(bad)
sub
jmp
mov
sbb
jne
mov
test
xchg
loopne
jne
mov
(bad)
lock
xor
ja
pop
add
and
or
aam
add
sbb
and
push
or
mov
lods
add
(bad)
jmp
push
jns
(bad)
ins
push
dec
push
ja
sar
push
push
sbb
call
hlt
sub
test
cmp
or
mov
and
mov
mov
dec
ret
dec
in
ins
xor
inc
mov
add
adc
lea
and
jl
cld
fcomp
call
cmp
aam
dec
or
cmp
shl
jmp
sbb
adc
inc
cld
(bad)
cmp
mov
aas
clc
xchg
adc
je
dec
mov
out
dec
ins
inc
inc
imul
loopne
xchg
xchg
cli
push
imul
lods
aad
mov
fistp
stc
pop
pop
add
inc
or
cmp
add
mov
inc
fsubp
jne
xor
cs
(bad)
jmp
cmp
sub
inc
sar
mov
clc
dec
jg
je
or
je
or
aaa
in
div
pusha
or
je
sub
jmp
cmp
dec
mov
adc
sbb
jmp
and
add
push
dec
add
sbb
jp
add
push
mov
push
xchg
and
xchg
fld
xor
pusha
sbb
add
add
or
or
add
or
xchg
ret
xchg
sub
or
xor
inc
popa
not
add
hlt
push
add
push
adc
test
dec
es
repnz
push
mov
cmp
jne
dec
clc
inc
pop
js
scas
scas
push
and
cmp
std
xchg
arpl
and
add
out
stos
dec
mov
jns
sbb
bound
in
xchg
dec
pop
in
lods
push
xor
xor
add
gs
lahf
inc
add
add
test
cmp
(bad)
jmp
inc
pop
arpl
pop
adc
or
add
mov
sbb
arpl
fild
mov
rol
addr16
xchg
cmp
or
jp
js
jmp
mov
cmp
adc
xor
sub
cmp
add
cmp
xor
mov
cmp
mov
sbb
in
pop
cli
movs
xchg
sbb
adc
pusha
pop
shr
jns
mov
ror
push
aam
or
or
cmps
out
gs
scas
and
or
adc
and
sbb
pop
jnp
pop
jnp
sbb
in
adc
pop
rcr
xchg
push
hlt
jmp
mov
push
sbb
inc
popa
add
ja
mov
js
push
push
and
sbb
test
mov
mov
mov
adc
sub
(bad)
mov
xchg
xlat
mov
outs
sbb
adc
xor
clc
inc
dec
jne
sbb
popa
ficomp
enter
push
xchg
sbb
sbb
jecxz
pop
xchg
ret
jp
or
ins
mov
push
rol
and
pop
xchg
(bad)
out
dec
je
mov
mov
dec
xor
imul
mov
mov
adc
sub
xchg
xchg
mov
xchg
pop
(bad)
div
add
rol
and
(bad)
mov
xor
pop
leave
jb
jne
clc
nop
je
jle
shl
add
xor
add
imul
mov
push
push
aas
call
xor
add
pop
xlat
xchg
dec
repz
(bad)
into
push
push
add
xor
cmps
add
jne
lds
pop
mov
add
cmp
ret
loopne
hlt
pop
dec
adc
pop
push
jmp
cmp
jl
mov
cmp
jne
inc
jl
mov
mov
inc
xor
adc
xchg
(bad)
pop
dec
pop
or
mov
(bad)
or
mov
cmp
push
add
inc
mov
jle
ret
pop
jmp
retf
push
xlat
cmp
or
jbe
cmp
cli
mov
je
stc
(bad)
hlt
cld
add
or
adc
outs
inc
dec
js
mov
call
dec
mov
aam
and
loopne
cs
lea
jp
mov
mov
and
(bad)
jmp
jl
jecxz
or
and
frstor
jmp
sti
arpl
jmp
test
add
mov
add
lahf
mov
fadd
aas
ror
js
dec
shl
ret
aaa
data16
sbb
xor
imul
retf
mov
add
jmp
shl
add
mov
and
pop
ror
mov
je
or
call
rcl
popa
and
(bad)
(bad)
ss
mov
mov
add
and
ror
mov
lods
aad
in
cmps
inc
mov
mov
sub
and
pop
in
or
in
jecxz
mov
lea
nop
repnz
jb
sub
lods
daa
push
inc
jmp
into
in
jnp
shr
jecxz
loop
lock
iret
out
out
inc
inc
out
lock
fnsave
adc
in
pmaxub
xchg
push
jle
push
sbb
adc
test
jmp
cmp
outs
in
addr16
outs
dec
mov
push
mov
push
jmp
imul
cmp
jbe
mov
enter
push
fs
loopne
mov
repnz
and
add
dec
or
pusha
push
xor
adc
sbb
push
fsub
adc
inc
sbb
aaa
ja
jmp
mov
jl
sti
push
or
mov
dec
dec
fcom
adc
loopne
and
fsubr
cmps
in
pop
xor
aam
aam
test
lock
ret
sbb
cld
inc
dec
movs
push
call
or
mov
add
nop
jecxz
scas
clc
push
dec
inc
sbb
repz
jmp
dec
add
lock
sbb
jecxz
into
loopne
adc
xor
push
adc
mov
adc
xor
pop
sub
inc
repnz
sbb
add
rcr
in
sub
adc
in
jne
add
or
repnz
outs
fsub
dec
or
ret
call
sbb
rol
inc
cmp
or
pop
sbb
mov
jnp
push
sub
ret
retf
ffree
jne
ds
push
add
(bad)
pusha
iret
clc
add
addr16
rcl
arpl
xchg
daa
mov
repz
repnz
iret
fs
push
sub
sar
sbb
inc
push
push
out
ret
es
dec
test
test
pop
pushf
inc
jb
jge
pop
iret
jg
loopne
sahf
mov
add
popf
ins
or
scas
adc
lea
scas
sbb
xor
or
pop
sbb
xchg
add
adc
xor
add
test
pop
dec
dec
(bad)
mov
mov
jo
xchg
mov
jle
sub
dec
jge
call
sbb
mov
jno
bound
or
ds
nop
jbe
mov
sub
sbb
jecxz
std
adc
jne
jmp
(bad)
pop
scas
jae
je
scas
and
jecxz
out
test
push
push
shr
in
test
ins
and
fiadd
push
gs
mov
adc
xchg
push
fadd
mov
or
repnz
adc
push
pop
dec
cmp
xchg
inc
loopne
fisttp
dec
inc
test
jb
pop
fcomp
loopne
and
data16
xor
and
sbb
int3
shl
cwde
push
cld
or
push
and
inc
movs
pop
adc
das
add
pop
or
xor
ror
fucomip
cmp
add
push
inc
sahf
sub
test
pop
(bad)
mov
cld
lods
in
mov
nop
dec
or
fld
test
ror
fsubr
sbb
arpl
aaa
inc
add
daa
xchg
cmps
test
loope
aam
pop
lea
push
jno
jl
fs
adc
in
jbe
sub
or
int3
push
test
sbb
xchg
add
ins
pop
mov
out
push
fstp
jne
je
fldcw
add
fsub
mov
imul
push
ficom
pop
adc
add
ror
adc
push
add
(bad)
xchg
xor
loopne
jl
mov
cmp
ud2
mov
call
nop
call
sub
cmovs
std
and
cmp
sbb
call
sbb
das
sbb
mov
jnp
push
jo
mov
outs
push
inc
pop
cdq
pop
and
lea
fwait
call
fsubr
and
adc
push
inc
or
mov
mov
fsub
add
aaa
dec
aam
in
aam
push
cwde
xor
cmp
jb
mov
ret
shr
es
aaa
clc
dec
pop
in
or
int3
and
fs
int3
aas
ret
add
hlt
mov
and
mov
pusha
jl
dec
push
push
add
add
xchg
fs
(bad)
pusha
js
or
or
cmp
mov
enterw
loop
inc
inc
bound
mov
add
pop
add
outs
fucomp
ins
add
inc
sub
mov
mov
inc
daa
push
jmp
xor
push
aad
push
lods
movs
jmp
sub
fisttp
pop
adc
inc
cmps
daa
pop
add
fimul
jae
add
or
push
cmp
add
popf
rcr
sbb
call
clc
clc
popf
(bad)
jge
sbb
pop
mov
push
push
xor
inc
push
xor
push
jg
inc
push
ins
add
rol
adc
sub
loopne
std
mov
pop
jne
outs
js
push
sub
jne
sbb
xor
push
mov
mov
or
test
add
pop
cli
push
add
movs
out
sbb
xor
mov
xchg
hlt
push
and
fild
mov
inc
cmp
(bad)
idiv
or
(bad)
imul
outs
xchg
push
mov
imul
mov
push
outs
sbb
clc
movs
inc
hlt
xchg
or
hlt
dec
xor
mov
hlt
sbb
nop
xchg
adc
inc
shr
cs
and
adc
add
xchg
retf
pop
movs
or
add
(bad)
loop
push
sub
push
or
(bad)
dec
or
(bad)
xchg
lds
pop
add
cmps
jmp
add
ins
test
mov
cmps
or
push
mov
xor
cmc
test
(bad)
shr
mov
mov
std
push
jb
sub
pop
rcl
loope
jmp
xor
test
adc
test
inc
and
add
lock
fwait
push
call
xchg
sub
loope
test
test
ds
hlt
rcr
sbb
xchg
sub
mov
mov
jne
jae
adc
movs
and
push
or
in
push
cdq
es
xchg
hlt
mov
push
mov
or
loop
cdq
lea
pop
add
adc
mov
and
movs
add
mov
pop
add
push
enter
iret
paddusb
cmp
xor
xchg
pop
push
pop
je
retf
jae
test
icebp
xchg
fdiv
push
pop
(bad)
jge
jle
or
ins
sti
sbb
rcr
sub
lods
inc
and
shl
cvtpi2ps
sub
sbb
add
pop
sub
pop
aaa
inc
push
(bad)
shl
psadbw
sti
dec
jmp
inc
je
inc
cmp
add
adc
in
js
adc
push
fist
adc
int3
jo
(bad)
jl
ret
inc
mov
and
pushf
ins
jmp
and
aas
outs
mov
sahf
outs
add
mov
je
xchg
fcom
ret
jae
push
push
ret
push
add
(bad)
push
mov
popa
cmp
jo
leave
popa
cmp
add
ins
movs
push
jb
pop
je
push
icebp
out
cmp
mov
enter
rol
mul
(bad)
adc
mov
lea
iret
push
sbb
cmp
in
push
jbe
test
dec
xor
int3
dec
push
add
std
sub
pop
mov
sub
gs
mov
ja
adc
outs
add
aam
sbb
imul
sub
mov
push
adc
fnsave
nop
jns
inc
add
outs
sub
ds
or
add
hlt
popf
retf
pop
shr
xchg
jb
jno
loopne
lea
fadd
inc
pop
pushf
and
movs
jo
out
loopne
and
lods
out
into
xchg
jbe
mov
jl
mov
cmp
push
sub
lea
aam
add
jg
xor
sar
pop
mov
add
lds
les
push
xor
xchg
jo
aaa
add
xor
js
rcr
jno
inc
or
xchg
lea
dec
sbb
inc
add
jmp
cmp
dec
jo
repz
pop
gs
xor
ds
and
sbb
pusha
and
xor
fiadd
dec
cld
adc
aaa
push
sub
pop
sbb
sub
add
dec
xor
inc
mov
dec
jle
mov
test
cmps
nop
cmc
dec
xchg
(bad)
aam
jecxz
movs
jg
jno
popf
inc
or
jmp
mov
push
cmp
ror
push
cmp
mov
sub
xchg
es
push
sub
or
inc
jb
movs
add
cmps
dec
popa
sbb
pop
mov
push
and
add
mov
and
(bad)
mov
fdiv
andps
dec
or
loop
push
ret
adc
imul
enter
jb
les
or
jae
cdq
xchg
lods
lea
shl
daa
push
ror
nop
bound
xchg
inc
push
adc
je
xchg
xchg
data16
push
addr16
push
div
xchg
adc
jno
mov
jns
add
xchg
add
ins
lahf
in
push
or
jbe
or
pop
pop
mov
nop
pop
inc
(bad)
out
jbe
xchg
pop
adc
inc
daa
sub
rol
inc
out
or
add
push
adc
mov
mov
and
in
jle
adc
mov
fld
mov
or
test
cmp
and
sbb
or
push
push
sbb
jg
movs
out
std
inc
inc
adc
ss
and
ja
nop
lahf
jae
imul
cmp
cmps
outs
mov
cmp
or
cmp
dec
mov
cmp
cmp
iret
popa
add
or
nop
movs
test
adc
and
push
fild
push
movs
mov
jae
fld
cmc
pop
inc
lea
pop
adc
adc
retf
cmp
and
shr
add
and
pop
mov
int3
fadd
ss
adc
or
or
xchg
jl
sbb
pop
mov
leave
jmp
mov
push
xor
push
dec
lock
mov
jo
pop
pop
out
jp
and
jmp
ror
dec
sub
sti
add
xor
cmp
call
dec
movs
das
push
adc
imul
inc
ret
adc
ret
add
lock
xor
xchg
adc
cdq
fld
and
scas
ret
adc
and
loopne
dec
xor
leave
pop
jp
dec
sub
cmp
mov
mov
inc
ins
add
jge
mov
xor
call
push
sbb
sub
call
in
jmp
or
cmp
mov
mov
pop
sbb
es
mov
add
fidivr
sbb
imul
add
pop
push
pop
in
cs
cmp
je
jmp
xor
xchg
sub
push
jmp
and
sbb
mov
xor
push
pop
or
or
push
shl
fsubr
div
mov
or
mov
adc
mov
aam
push
lods
inc
cmps
jl
xor
push
or
sbb
jne
fs
jmp
and
popa
fcomp
sbb
shr
adc
or
ja
add
cmp
packsswb
cdq
mov
(bad)
jmp
and
in
fbstp
scas
mov
fs
mov
mov
std
dec
inc
sbb
inc
lods
mov
adc
pushf
pop
sub
xor
adc
scas
pop
call
int3
lods
ror
push
outs
mov
cmp
xor
repnz
sub
cs
mov
pushf
mov
mov
or
cmp
outs
scas
jl
test
pop
pop
cli
inc
mov
scas
or
lea
push
mov
adc
mov
outs
sbb
dec
push
or
fild
shr
mov
shr
pusha
xor
push
clc
sbb
jns
jle
lock
retf
jo
fmul
push
add
imul
inc
sbb
enter
scas
adc
sub
cs
cmp
out
add
pusha
pop
push
or
rcl
or
jb
test
xlat
jl
jns
sub
fwait
adc
movs
mov
or
adc
cdq
mov
sub
out
stc
das
enter
mov
fscale
jnp
mov
mov
jp
inc
xchg
sahf
mov
out
sbb
mov
sbb
adc
aaa
inc
movs
fadd
fsubp
movs
adc
inc
mov
mov
dec
into
adc
cwde
in
inc
outs
and
pusha
adc
inc
addr16
add
icebp
scas
call
jle
sbb
adc
push
dec
and
or
adc
loop
cmp
add
call
mov
jo
cmc
push
std
xlat
cmp
push
adc
popa
out
sub
test
cmp
add
xor
les
jns
and
add
movs
jne
std
pop
ret
rol
inc
ins
pusha
jmp
mov
cmp
cmp
mov
test
test
add
pop
inc
mov
lea
add
cmps
add
sbb
mov
test
pop
aaa
je
cld
outs
pop
lock
mov
sub
add
jbe
mov
outs
xor
mov
mov
adc
fild
adc
or
add
mov
call
das
mov
or
xor
pop
ins
xor
push
xchg
adc
pop
inc
jne
pop
cmp
in
mov
and
mov
out
jge
and
jp
fild
xor
(bad)
sbb
and
mov
add
in
(bad)
cmps
fxch
retf
cwde
in
adc
or
push
das
add
xchg
mov
xchg
mov
out
and
or
adc
jne
xchg
xor
dec
mov
out
fidivr
add
jne
rol
mov
cld
pop
mov
es
hlt
aam
or
cmp
add
icebp
fnstcw
add
and
(bad)
bound
jbe
imul
or
push
int3
pop
dec
xor
sbb
pop
push
jge
sub
test
jmp
xchg
rol
mov
push
fcomp
adc
sub
test
vmovdqu
cmp
dec
or
retf
shl
adc
and
mov
out
stc
push
cmp
inc
cmp
mov
or
add
ret
in
cmp
jge
push
je
(bad)
and
retf
bound
mov
data16
push
dec
loopne
adc
retf
mov
jle
mov
je
daa
sub
loopne
or
dec
dec
jmp
stc
adc
or
mov
call
or
jmp
sub
jbe
sub
adc
mov
inc
repnz
nop
dec
jge
ret
adc
jl
jbe
pop
cmpxchg8b
(bad)
int
inc
adc
mov
inc
popf
mov
sar
(bad)
jbe
imul
adc
cmp
jl
int3
enter
jne
sbb
je
push
and
dec
pushf
mov
or
add
dec
sub
(bad)
(bad)
shl
xor
ret
cmp
push
leave
aam
dec
mov
call
cmp
pop
adc
adc
jmp
dec
sub
dec
add
or
xchg
fstp
scas
out
je
adc
cmp
mov
pop
jge
sbb
mov
std
ret
repz
shl
rcr
jbe
adc
mov
(bad)
lock
pushf
add
or
fdiv
(bad)
jp
rsqrtps
xchg
ret
mov
xor
pop
sbb
sbb
test
push
cmp
lds
jae
pop
sbb
inc
inc
or
mov
into
mov
add
dec
enter
and
popf
ror
add
jge
jg
mov
rcr
sbb
pop
pop
mov
shl
jb
test
pop
popa
sub
aas
call
call
gs
adc
cmp
push
xchg
mov
jle
sub
ret
outs
adc
jne
cli
cmp
xor
rol
lock
sbb
loope
sub
fsub
adc
push
add
mov
add
clc
pushf
fcomp
sub
clc
bswap
lods
rcr
sub
sub
mov
push
jg
push
mov
or
sub
inc
or
nop
stos
add
fcom
jmp
mov
or
or
push
pop
jne
mov
btc
xchg
add
lods
mov
or
dec
cmc
nop
mov
mov
adc
js
aad
inc
mov
call
mov
mov
xor
mov
mov
movs
lock
popf
mov
push
ins
add
xor
pop
(bad)
test
add
adc
cmc
push
fwait
sbb
mov
call
add
lea
dec
add
mov
je
ss
mov
add
dec
in
data16
add
dec
enter
mov
inc
push
xor
inc
dec
fiadd
sahf
retf
inc
dec
mov
js
cmps
push
pop
dec
in
retf
and
cmp
jb
push
pop
push
pusha
pop
mov
pop
mov
adc
push
mov
cmp
dec
(bad)
mov
fwait
and
add
arpl
lea
mov
repz
in
sbb
lsl
xor
cld
add
lds
loope
and
inc
and
mov
out
pop
and
in
mov
mov
rcl
cmp
test
int
xchg
rol
jl
or
or
cmps
mov
or
std
in
mov
inc
outs
inc
dec
mov
xor
pop
mov
fld
aas
dec
push
fild
punpcklwd
adc
in
pop
mov
dec
pop
jnp
and
push
fild
jecxz
pop
out
call
sar
call
add
bnd
jp
jl
pop
cvtps2pd
xor
test
stos
jl
stos
nop
adc
aad
and
xor
pop
mov
jae
xlat
fld
movs
add
test
add
add
xchg
outs
pop
add
jb
jbe
inc
adc
and
sbb
(bad)
rol
add
xchg
stos
or
jo
push
or
or
out
and
push
push
sbb
pusha
call
mov
test
sbb
or
stos
inc
add
mov
and
fild
cmps
and
or
adc
cmp
movs
mov
or
or
clc
sbb
cmp
dec
call
lods
pop
adc
pusha
cli
and
or
fadd
mov
hlt
push
adc
aas
push
outs
mov
sbb
cmps
jmp
inc
shl
shr
or
mov
or
xor
xor
popf
adc
lock
(bad)
jnp
ret
or
int3
(bad)
mov
add
fild
push
add
or
cmp
or
or
fcos
mov
retf
and
ret
inc
jmp
pop
pop
pop
ret
pop
push
fdivr
inc
arpl
lahf
mov
pop
ds
sbb
sahf
enter
repz
ror
test
and
js
fmul
xlat
xor
add
xor
jmp
adc
cli
mov
sti
int
fmul
cmp
sub
sbb
adc
cmp
adc
adc
jmp
imul
inc
lea
push
inc
ret
std
adc
mov
xchg
lock
inc
mov
nop
inc
cmp
ret
popf
sub
sar
mov
xchg
dec
adc
inc
in
adc
and
mov
js
inc
xor
jnp
sahf
fsub
inc
cmp
jmp
xchg
daa
adc
cld
mov
test
mov
bound
(bad)
in
xchg
jl
push
in
pop
outs
(bad)
aaa
xchg
mov
cmp
sub
cmps
ror
adc
jl
and
int
fldcw
lods
popf
(bad)
loopne
pop
sbb
imul
inc
pop
or
inc
or
ror
arpl
jle
pop
mov
pop
and
or
icebp
cmp
mov
clc
push
loop
pop
xchg
(bad)
adc
test
pop
push
js
add
and
push
clc
add
jnp
mov
add
loopne
inc
or
data16
add
and
out
push
imul
push
mov
cld
outs
scas
popa
add
inc
add
dec
enter
xlat
ins
in
adc
jo
xor
mov
aam
mov
sub
icebp
inc
cmp
jne
movzx
cld
add
adc
push
ret
out
push
sbb
mov
xchg
icebp
push
icebp
inc
jmp
out
out
bound
aas
mov
mov
ins
xchg
and
lods
add
lock
mov
aaa
push
or
mov
mov
push
mov
inc
ss
xor
jl
inc
mov
add
cdq
xchg
shl
ja
sub
push
xor
mov
add
or
pop
add
pop
adc
or
scas
jae
loopne
in
mov
adc
push
push
nop
or
inc
pop
lods
sbb
inc
ror
hlt
lahf
ret
(bad)
mov
jmp
inc
adc
dec
jns
inc
sbb
ss
jb
sbb
sub
mov
nop
(bad)
loopne
shr
loopne
adc
nop
arpl
loop
or
dec
in
pop
inc
adc
cmps
pop
movs
jmp
and
aaa
add
adc
push
sbb
or
xchg
fwait
clc
out
push
test
sahf
(bad)
imul
inc
and
mov
movs
int3
or
rcr
mov
and
pop
ficom
sbb
sbb
daa
dec
call
(bad)
jbe
mov
sub
cmp
js
fcmovnb
(bad)
add
ins
mov
sub
inc
sbb
push
inc
dec
cmp
and
rcr
add
add
or
jns
mov
jp
cmp
aaa
mov
in
pop
leave
loop
or
add
ret
xor
cmp
je
pop
cmp
xor
mov
pop
(bad)
fld
xor
stos
sar
add
lock
pop
push
jg
dec
or
mov
inc
aaa
dec
in
inc
xor
mov
enter
mov
sbb
or
(bad)
jmp
adc
mov
add
pop
dec
jmp
xchg
test
push
push
xchg
movs
mov
and
push
adc
ja
xor
shl
dec
sub
xor
pusha
or
adc
or
and
or
mov
jne
sub
xchg
inc
cld
xchg
adc
pusha
and
test
and
jb
mov
cli
leave
mov
xlat
popf
aam
or
or
cdq
and
fldenv
cmp
out
cmp
sbb
cli
aam
cmovnp
(bad)
sub
jg
xchg
je
cmps
push
lods
inc
(bad)
and
bound
xchg
hlt
pop
adc
ficom
mov
or
call
adc
pop
sbb
cld
mov
test
push
pop
lods
inc
movs
aam
enter
mov
mov
sub
adc
lea
xchg
in
mov
dec
clc
mov
or
pusha
lea
jb
imul
pop
add
pop
inc
push
dec
xor
mov
xor
mov
test
or
in
jns
lea
mov
push
ds
shl
adc
fnstenv
pop
ficomp
or
adc
sub
rol
out
mov
mov
push
cld
xchg
xchg
lea
test
sub
or
jmp
stos
adc
jmp
cwde
rol
dec
mov
adc
mov
lahf
retf
jb
jbe
adc
sub
jl
or
mov
inc
call
jmp
or
mov
pop
aas
adc
cmp
cmps
je
add
test
mov
loopne
inc
or
retf
and
inc
enter
aas
rcr
lods
mov
inc
inc
mov
push
push
not
add
add
je
add
pop
in
out
pop
add
iret
clc
inc
jp
inc
popa
xchg
xor
loopne
addr16
push
pop
(bad)
outs
or
loopne
dec
jmp
iret
arpl
lahf
arpl
adc
mov
pop
mov
bound
pop
sbb
adc
lock
xchg
pop
daa
add
adc
in
repnz
xchg
call
imul
aaa
inc
ds
call
mov
movs
repnz
pushf
xor
xor
addr16
sbb
(bad)
xlat
pop
jecxz
jnp
mov
adc
test
sbb
loope
sahf
mov
xchg
inc
xcrypt-cbc
cmps
adc
call
jg
adc
adc
mov
xor
popf
fcomp
imul
and
or
pop
pop
push
jle
je
data16
push
xor
adc
mov
xlat
(bad)
loope
add
fwait
jg
or
jge
fwait
or
pop
jo
add
or
in
inc
sbb
push
mov
bound
push
or
and
inc
jp
xchg
sahf
mov
sub
xor
jo
mov
inc
push
push
inc
pushf
sub
loopne
or
pushf
js
or
inc
mov
adc
test
add
add
hlt
xor
aaa
mov
jne
mov
sbb
add
pushf
dec
or
dec
jns
sbb
(bad)
mov
jmp
and
bound
and
mov
jne
mov
dec
pop
sub
jnp
fbld
sub
fcomp
sahf
push
cs
addr16
jge
cmps
scas
add
popa
add
shr
xor
push
dec
enter
inc
push
inc
daa
push
lahf
xlat
mov
xchg
(bad)
mov
pop
sbb
pusha
cmc
mov
into
or
cs
dec
add
cmc
jne
xchg
test
lahf
and
pusha
test
in
mov
push
adc
add
or
mov
adc
and
(bad)
mov
add
adc
nop
pop
mov
mul
stos
jmp
lahf
push
loopne
enter
mov
enter
xchg
and
push
inc
or
mov
mov
arpl
xlat
inc
mov
outs
pop
(bad)
out
pop
mov
jno
int3
in
inc
mov
scas
retf
mov
cmps
icebp
xor
sbb
shl
cmp
mov
pop
or
inc
adc
dec
imul
push
cwde
stos
pop
jg
inc
sub
adc
(bad)
sbb
pop
push
fmul
movs
or
dec
cmp
and
pop
aas
add
call
jne
or
sub
jae
rol
cli
pop
and
add
cdq
imul
add
jle
out
xchg
rcl
pop
ret
mov
add
dec
sbb
dec
stc
and
add
adc
or
inc
add
mov
outs
cmps
pop
call
fidivr
imul
ss
movq
dec
push
xor
sub
jg
sub
and
and
shr
jns
es
mov
and
jl
(bad)
imul
dec
add
push
sahf
hlt
gs
out
jmp
and
bound
nop
sbb
movs
jne
loope
sbb
or
xchg
lahf
push
adc
and
test
xor
stos
xlat
sub
mov
xor
pop
cmc
pop
pop
dec
cmp
jle
test
fwait
pop
daa
mov
inc
cmp
ret
adc
cmp
mov
aad
out
xchg
add
adc
add
inc
cwde
cmp
mov
retf
fnstcw
lock
adc
pop
pop
mov
or
xchg
sub
mov
rep
pop
mov
adc
fs
cs
lock
sub
jecxz
or
mov
or
dec
(bad)
popa
les
call
leave
adc
or
mov
arpl
adc
xchg
sub
fsubr
mov
fbld
inc
push
xchg
dec
daa
int3
test
cmp
jle
pop
pop
push
push
mov
(bad)
pop
add
add
add
sbb
retf
sub
sbb
xor
fmul
mov
lea
das
inc
mov
stos
in
nop
add
(bad)
sub
stos
push
jns
movs
scas
fprem
jnp
in
pop
mov
mov
stos
adc
add
push
stos
mov
icebp
mov
xor
lds
push
inc
push
inc
enter
lods
fs
add
(bad)
inc
test
lds
pop
or
jo
push
mov
mov
mov
mov
dec
or
adc
pop
jo
mov
push
push
jo
or
xchg
mov
dec
pop
sbb
xchg
(bad)
lods
inc
repnz
mov
idiv
lods
cmc
dec
push
xor
aas
lods
xchg
cmp
mov
xchg
lods
test
scas
cwde
in
lods
pcmpgtb
aad
in
lods
mov
hlt
lods
dec
scas
repnz
add
xor
test
aaa
outs
xchg
jle
out
inc
mov
or
inc
sbb
inc
aam
aad
sbb
jl
stc
mov
dec
fcomp
add
push
dec
xor
and
fwait
mov
add
add
stos
inc
int
fcom
aam
mov
rcr
adc
add
pop
add
mov
inc
and
test
and
(bad)
cmc
sub
cld
xchg
cmp
aam
arpl
or
fstp
retf
shl
(bad)
lea
sub
or
mov
das
daa
add
push
test
pop
js
cmp
push
shr
mov
les
add
mov
dec
adc
lds
xchg
retf
and
mov
in
jle
repz
sbb
mov
jg
mov
movs
gs
cwde
mov
enter
add
jnp
and
xlat
(bad)
(bad)
sti
sub
mov
dec
sbb
lds
mov
ds
retf
and
js
push
mov
in
popa
std
xchg
sub
dec
stos
mov
fimul
inc
addr16
push
mov
xchg
fnstenv
(bad)
fdiv
ins
fsub
fmul
nop
out
pop
cld
nop
add
je
lea
jle
lds
xor
enter
sub
or
cmp
inc
mov
xor
sbb
cmps
in
(bad)
dec
pop
add
dec
mov
dec
sub
xchg
imul
cmp
ja
movzx
dec
add
arpl
jne
test
nop
ret
lahf
dec
mov
and
test
mov
xchg
movs
push
cdq
or
call
add
in
and
out
add
test
inc
dec
lahf
xor
jbe
mov
iret
pop
mov
mov
adc
cwde
add
add
push
mov
push
in
xchg
movs
rol
(bad)
cmp
fldcw
retf
adc
dec
(bad)
pop
push
xor
dec
inc
mov
lods
sub
pusha
jae
scas
jmp
lds
xchg
pop
or
jl
call
or
paddusb
jne
shl
or
out
add
jae
fcomip
and
dec
loope
pop
repz
dec
setne
pop
or
dec
leave
and
fwait
dec
or
repnz
test
push
mov
sbb
nop
iret
and
mov
inc
mov
mov
daa
xchg
lods
arpl
mov
jmp
imul
and
mov
loopne
dec
sbb
enter
mov
popf
sub
fmul
pop
or
and
or
adc
js
clc
mov
pop
push
es
dec
adc
and
push
sub
xchg
retf
test
xor
xchg
push
mov
shl
push
loopne
mov
inc
adc
jmp
dec
push
stc
add
add
pop
fistp
push
fdivr
ins
dec
cmp
mov
jno
push
mov
add
ja
or
mov
jno
mov
sbb
enter
adc
cmp
or
arpl
dec
sbb
jno
cld
es
adc
test
into
gs
push
and
test
dec
adc
stos
add
clc
je
lock
rol
inc
out
and
and
add
stc
push
lods
hlt
clc
dec
push
add
add
test
arpl
iret
pop
iret
inc
and
cld
or
push
push
push
lea
jg
call
rol
add
ret
pop
pop
ret
sub
inc
push
call
icebp
pop
xchg
mov
aad
xchg
add
inc
or
js
jge
popf
mov
push
jmp
test
inc
push
cmps
add
sbb
cwde
dec
cmp
retf
js
add
pop
inc
xor
sbb
add
fucom
retf
inc
mov
sbb
cmp
pusha
outs
jo
push
out
das
push
fs
popa
and
inc
popa
call
out
outs
mov
mov
xlat
inc
daa
sahf
cwde
scas
xchg
jno
mov
ds
lock
popa
pusha
or
repnz
add
push
dec
sbb
cmc
xor
mov
jge
mov
(bad)
push
adc
leave
jne
cmp
cmp
gs
mov
aam
push
push
ss
test
(bad)
pop
dec
inc
or
mov
(bad)
dec
adc
adc
out
in
mov
add
or
jge
mov
stos
fdiv
mov
xchg
fisub
movs
mov
enter
push
jb
fs
pusha
mov
cmp
adc
xor
(bad)
pusha
mov
cmp
cmp
inc
mov
sub
inc
adc
pminub
cs
ret
mov
enter
daa
jo
or
sub
pusha
ja
mov
fadd
popa
and
lods
cmp
inc
dec
ins
pusha
mov
call
mov
add
iret
cmp
and
mov
pop
xchg
lock
hlt
(bad)
cmp
push
push
pop
inc
dec
and
aam
cmp
and
inc
dec
mov
cmp
xor
cld
sub
mov
push
(bad)
mov
adc
dec
inc
(bad)
lock
or
lock
and
in
in
lods
mov
fild
icebp
or
or
loopne
imul
lock
sub
es
fadd
cld
(bad)
shl
test
push
mov
(bad)
and
test
dec
imul
je
dec
xchg
ret
jo
rcr
sub
cmp
xchg
nop
stc
dec
pop
sub
(bad)
sub
add
mov
add
sbb
adc
(bad)
jns
push
(bad)
jbe
pop
and
or
cld
or
daa
imul
inc
retf
ret
or
cmp
jle
adc
and
push
dec
je
add
rol
test
iret
and
lock
nop
adc
add
in
push
adc
loop
mov
mov
mov
iret
dec
test
jecxz
fisub
sbb
mov
xchg
xor
sub
les
popf
stos
cmpps
push
adc
add
fiadd
jl
cmp
icebp
in
rcr
lods
test
clc
retf
add
or
cdq
sub
ss
jl
cmp
loop
and
fdivr
movs
pop
inc
and
cmp
jle
xchg
inc
add
push
(bad)
push
popa
cmps
test
dec
or
mov
jbe
or
add
mul
push
enter
and
loop
movs
or
ins
mov
xchg
and
pusha
adc
das
inc
das
inc
push
push
mov
inc
cmp
push
sub
scas
dec
fdivr
rol
add
add
xor
inc
lds
and
pusha
call
add
or
(bad)
dec
addr16
out
lods
add
mov
push
mov
xchg
push
cmp
adc
cld
and
xchg
ret
pop
add
sub
outs
or
xchg
push
or
ins
xor
arpl
push
push
hlt
cmc
pop
and
add
sar
or
xor
add
scas
icebp
jge
rol
push
jb
call
into
(bad)
xchg
stos
inc
cmc
(bad)
jl
pop
cmp
dec
jge
xor
add
or
or
xor
es
sbb
mov
mov
xchg
cmp
je
adc
stc
pop
sbb
mov
mov
xchg
ret
pop
jns
lods
mov
and
mov
push
data16
and
jne
out
jmp
inc
sbb
lock
add
push
inc
shl
test
sbb
mov
jmp
xchg
adc
enter
cmp
push
dec
inc
mov
push
mov
xor
mov
push
xchg
lahf
xor
add
dec
enter
test
sbb
enter
xor
stos
outs
fs
add
fs
xor
ins
stc
outs
ins
cmp
cmp
in
je
push
ins
and
push
call
xor
scas
and
sbb
call
xor
mov
xchg
inc
rcl
mov
test
lahf
push
sbb
call
cmps
xor
and
mov
outs
adc
or
and
and
ror
sub
xor
jmp
push
jo
inc
or
mov
mov
popa
inc
popf
ja
stos
movs
mov
jo
fwait
xor
adc
sbb
pusha
out
push
rol
dec
call
mov
adc
popf
sbb
pop
push
cmp
shl
inc
push
mov
push
xor
jno
mov
std
xor
jo
inc
add
push
cli
or
mov
pop
inc
adc
retf
and
add
inc
imul
adc
jns
pushf
mov
sar
jp
sub
cmp
mov
shl
xor
mov
add
or
(bad)
imul
push
nop
or
clc
dec
mov
sar
mov
out
fld
test
mov
hlt
cmp
jns
test
enter
hlt
add
imul
movs
inc
mov
push
push
pop
jg
add
push
add
add
test
nop
addr16
pop
sub
push
bnd
lea
mov
add
fistp
into
pop
and
(bad)
aam
sbb
cld
cld
cld
add
mov
ret
retf
mov
call
or
mov
or
popf
nop
retf
int3
xchg
mov
out
rol
iret
sub
fnstenv
adc
or
fild
and
jnp
adc
sbb
push
fcom
mov
loop
out
mov
call
pusha
iret
sub
add
sub
inc
aaa
xchg
sub
dec
mov
ds
mov
mov
mov
test
iret
inc
mov
adc
je
or
xor
iret
push
sbb
add
dec
out
add
dec
push
clc
sbb
jmp
pushf
rol
or
inc
and
mov
shl
mov
movs
mov
adc
push
jle
nop
sbb
pop
shr
mov
add
shl
or
mov
push
frstor
jne
mov
push
enter
sbb
ss
push
xor
sub
add
and
inc
jle
popa
push
and
xchg
repnz
rcl
push
and
push
(bad)
(bad)
fcom
mov
ins
popa
and
or
mov
fcom
pop
push
enter
retf
add
pop
into
rcr
mov
enter
out
pop
sub
mov
pop
stc
das
push
ds
push
add
xchg
sbb
and
sub
stc
mov
add
sbb
aaa
repnz
rcr
and
add
xchg
push
leave
cmp
or
popf
add
(bad)
popf
cmp
add
pushf
das
cld
cld
cmp
fisttp
clc
push
push
cwde
hlt
inc
xchg
out
in
lock
sub
mov
lahf
call
loopne
fstp
int
das
fdiv
fcom
jo
jns
out
aam
mov
cmps
nop
int3
push
repnz
fmulp
and
out
adc
jbe
daa
iret
enter
mov
mov
das
mov
cmp
test
mov
sub
mov
add
call
repnz
add
cmps
adc
popf
nop
mov
mov
pushf
popf
cmp
lahf
mov
test
repnz
js
repnz
je
fadd
and
cmps
push
push
cmp
inc
cwde
in
test
add
ror
add
rcr
test
sbb
mov
jge
in
and
nop
adc
sub
mov
add
push
and
pop
cli
sbb
enter
mov
js
outs
pop
test
mov
mov
sbb
push
or
push
in
sbb
pop
fdivr
mov
out
nop
adc
mov
mov
jle
pushf
adc
add
jns
inc
push
inc
pop
std
test
aad
push
sbb
mov
test
push
inc
push
push
inc
dec
xchg
cmp
inc
inc
mov
arpl
pop
xor
xchg
push
jg
jp
jns
(bad)
xlat
or
xor
push
push
and
movs
sti
shl
sbb
test
lods
sub
addr16
test
sub
and
mov
push
xor
mov
mov
fs
push
cdq
pop
inc
or
dec
dec
mov
dec
das
inc
inc
or
ja
inc
loope
(bad)
cmp
dec
push
sbb
add
or
jae
sbb
into
adc
ja
loopne
mov
mov
mov
dec
sbb
or
pop
bound
loop
enter
setg
outs
loopne
retf
cs
inc
jne
fisttp
push
mov
stc
(bad)
cmp
mov
je
pop
mov
xchg
aad
adc
and
imul
or
and
xor
or
outs
fs
(bad)
jo
ja
push
test
add
mov
push
mov
mov
gs
js
push
fidiv
add
adc
and
ins
sub
sub
pop
jo
out
fadd
mov
adc
sbb
mov
adc
jne
retf
nop
pop
movs
adc
repz
and
xchg
xchg
xchg
xchg
sbb
adc
xchg
xchg
xchg
or
push
xlat
and
xchg
push
dec
ja
add
sbb
lea
push
test
sub
hlt
add
enter
mov
and
sti
jne
mov
les
adc
test
or
dec
xchg
ss
sub
add
inc
and
sahf
or
fnstenv
mov
cs
and
test
repnz
jo
dec
mov
call
pop
and
nop
fild
mov
fadd
pop
test
mov
pusha
jb
in
mov
fcmovne
sub
adc
test
adc
int
shr
popf
sub
lods
and
fimul
or
cmc
sbb
push
mov
stc
inc
outs
and
movs
clc
sti
jge
test
sbb
inc
dec
shr
daa
fdivr
sub
xchg
popa
xchg
pop
mov
cdq
and
ret
xlat
fcom
inc
xor
scas
inc
js
mov
inc
jno
or
adc
(bad)
push
or
call
enter
adc
pop
jb
jb
jbe
inc
inc
cmp
pop
inc
dec
push
dec
or
jne
popa
adc
(bad)
jmp
adc
(bad)
aaa
sbb
fcomip
adc
sbb
rol
mov
xchg
dec
es
movs
mov
in
fs
dec
sub
es
mov
mov
es
sar
xchg
mov
fs
dec
(bad)
lock
es
int3
clc
add
and
retf
and
add
or
and
retf
aam
sbb
iret
retf
and
loopne
fcom
cmp
dec
retf
and
retf
in
fistp
sahf
xchg
imul
je
dec
lock
cmp
outs
es
mov
popa
bnd
or
aas
jno
dec
cs
js
jl
jne
jmp
fs
das
pop
mov
jne
inc
imul
adc
add
lea
dec
jb
pop
outs
jb
ins
jo
add
cli
pop
dec
or
ficom
cmp
sti
ss
mov
(bad)
jns
sbb
inc
es
inc
fadd
test
push
inc
mov
clc
cwde
sti
loope
test
push
mov
and
clc
adc
in
popa
sti
or
dec
sub
pop
pop
adc
sahf
mov
pop
or
jb
xor
sub
aaa
mov
and
or
dec
(bad)
and
int3
add
les
(bad)
adc
int3
int3
stc
mov
loope
adc
sbb
inc
cmp
repnz
in
add
cld
sub
inc
lahf
push
inc
lahf
cmp
jmp
loopne
inc
jb
push
je
mov
iret
repz
addr16
in
mov
push
mov
fnstcw
add
inc
loopne
js
jae
test
cmp
sbb
mov
jecxz
cmp
mov
cmps
clts
add
inc
retf
pop
add
ins
inc
iret
pop
in
in
dec
(bad)
add
scas
shl
(bad)
add
in
add
mov
adc
push
sub
mov
add
add
lock
push
adc
add
addr16
inc
fist
push
or
(bad)
fs
mov
loopne
inc
int
inc
outs
push
js
push
call
mov
hlt
mov
arpl
add
sbb
pop
adc
ins
jae
add
jns
push
mov
mov
push
adc
pop
xor
pop
xchg
dec
int3
jle
ror
loope
and
stos
dec
shr
sub
call
or
fsub
sbb
adc
add
push
add
mov
imul
push
mov
jns
jo
xchg
inc
xchg
das
dec
gs
xor
xchg
cmps
ja
ss
inc
pop
push
stos
aas
es
or
lahf
iret
or
push
enter
ja
mov
in
pop
scas
jmp
add
sub
add
or
mov
imul
pop
push
adc
inc
sbb
gs
clc
ret
xor
or
add
nop
dec
push
pusha
mov
aas
adc
adc
cmp
shr
jbe
add
fdiv
clts
mov
rcl
inc
inc
popa
add
fld
mov
pop
cmp
aaa
xor
inc
stos
jg
daa
adc
(bad)
lods
loop
and
mov
xlat
pop
xor
sub
add
push
or
out
pop
inc
push
push
pop
jo
jl
jbe
call
xor
repnz
call
jns
ja
jmp
add
push
cmp
ds
pop
xor
mov
dec
cld
jno
jle
mov
add
cmp
or
out
jg
and
popa
les
fild
cmp
lock
jle
add
fld
pop
mov
jo
xor
inc
arpl
lods
cmp
pushf
or
ja
jmp
cwde
jmp
and
je
jp
add
and
sbb
inc
in
cmp
gs
fild
cmp
cmp
inc
mov
in
ja
mov
fild
sbb
leave
enter
adc
hlt
imul
cli
adc
cmp
xchg
xlat
pop
xor
in
outs
movs
in
pusha
js
cdq
shr
push
xor
and
cmp
and
or
out
nop
pop
or
jmp
ins
(bad)
out
out
push
fbstp
inc
ins
pop
cmp
inc
push
and
dec
out
sub
es
sbb
call
jmp
aas
repnz
lock
out
dec
cs
mov
ret
dec
int
inc
sub
and
loopne
inc
loopne
and
inc
cmps
push
mov
push
xchg
fsubr
or
rol
std
xchg
dec
sti
mov
sbb
push
add
in
and
inc
push
dec
add
pop
popa
add
adc
push
sub
cmp
out
or
sahf
dec
add
cmps
cmp
add
pushf
or
jmp
dec
gs
push
pop
aas
dec
dec
jle
cmp
push
hlt
call
inc
inc
icebp
mov
in
fwait
nop
fmul
jnp
mov
ror
popf
jnp
pop
mov
push
enter
inc
loopne
lock
call
push
jns
mov
cmp
lods
addr16
jo
mov
fild
enter
repnz
mov
pop
xor
cmps
jle
pop
ret
add
xchg
jne
push
enter
sbb
or
cmp
rep
repz
in
sbb
cdq
aam
adc
repz
or
and
mov
jg
mov
pushw
ret
add
add
mov
clc
sub
(bad)
mov
inc
sub
jmp
or
fs
ins
xchg
data16
push
nop
es
jbe
add
cwde
jo
in
adc
add
dec
pop
loope
(bad)
lock
fdivr
mov
iret
and
pop
dec
hlt
mov
iret
and
sbb
lock
and
cmp
mov
test
mov
in
inc
rcr
jnp
jae
loopne
in
add
nop
iret
loopne
out
push
dec
sub
mov
and
mov
add
les
inc
cdq
mov
and
mov
push
xor
and
(bad)
cmc
enter
or
loopne
or
add
cmp
dec
cmps
cmp
rol
jecxz
sub
cmp
ins
retf
or
(bad)
adc
push
lods
xor
jmp
adc
jb
or
xchg
dec
jl
mov
mov
clc
push
in
sub
rcl
jmp
inc
push
sbb
sbb
xlat
(bad)
nop
pop
jb
hlt
xchg
int3
out
sbb
psraw
xor
pusha
cwde
add
or
jmp
sub
imul
inc
mov
inc
inc
mov
cmps
clc
div
add
mov
inc
cld
int3
mov
in
jle
dec
or
fs
push
mov
(bad)
sub
outs
or
(bad)
fild
test
lds
in
shl
jb
add
sbb
loopne
in
mov
xor
or
or
pusha
xchg
xor
aaa
or
add
std
(bad)
push
(bad)
or
adc
or
xor
test
jne
push
xchg
adc
mov
add
inc
add
add
pop
mov
push
mov
data16
je
push
icebp
mov
aam
pop
(bad)
push
jmp
or
rcl
xchg
jmp
in
adc
pcmpeqd
clc
push
inc
adc
mov
int3
into
or
pop
inc
mov
int3
pop
add
cli
mov
mov
inc
aaa
cld
jb
jne
add
aaa
outs
or
cmp
push
or
mov
xchg
(bad)
in
cmp
loope
shl
cmps
inc
add
ret
fs
add
dec
sahf
dec
cmp
movs
jmp
inc
mov
ret
push
ret
pop
cmp
cmp
dec
outs
mov
lea
jmp
arpl
sub
inc
sub
mov
and
cmp
ss
std
div
and
or
ins
push
xor
xor
cwde
clc
das
jl
leave
inc
jnp
xchg
jmp
cmp
dec
cwde
mov
(bad)
in
dec
mov
rol
mov
pop
cmp
ret
push
daa
xchg
and
(bad)
or
or
or
out
mov
aaa
cwde
or
dec
cld
out
out
in
div
or
mov
popf
fistp
cli
push
sbb
add
or
or
adc
lds
adc
add
retf
iret
push
(bad)
cli
(bad)
iret
sar
lock
push
sub
cmp
repz
dec
popa
jne
stc
cmp
pause
sahf
leave
icebp
add
or
pushf
cmps
cmp
pusha
sbb
sbb
test
push
or
fiadd
les
sub
mov
mov
or
bound
(bad)
sbb
push
xchg
popa
ror
cmp
add
adc
outs
in
sub
push
push
adc
mov
sbb
retf
sbb
mov
mov
(bad)
scas
xchg
loop
je
cmp
dec
add
mov
xchg
push
xchg
stos
(bad)
adc
ret
sti
cmp
sub
pop
adc
clc
push
jb
cmp
fimul
call
jmp
add
mov
in
push
sbb
inc
and
sbb
or
rol
shl
mov
xchg
adc
call
xlat
cwde
inc
jge
jg
cmp
fsubr
mov
inc
ins
jnp
gs
cs
add
xchg
sbb
sub
jmp
and
adc
adc
cmp
cmp
inc
jmp
cld
(bad)
clc
adc
push
push
add
in
add
xchg
pop
add
cmc
xor
imul
in
jmp
sbb
mov
jns
lock
mov
pop
iret
imul
xor
das
or
push
lea
jno
out
xor
push
dec
test
and
inc
aaa
retf
test
xchg
inc
sub
inc
loop
inc
pop
mov
inc
stos
sahf
shr
ins
lock
jno
fcom
push
add
sbb
mov
fs
cmp
inc
adc
mov
sub
sbb
jecxz
inc
xchg
add
test
(bad)
mov
fmul
fcomi
push
dec
gs
or
into
mov
mov
pop
call
mov
and
outs
mov
inc
call
movs
std
xor
call
mov
mov
mov
mov
xor
out
out
not
adc
adc
ja
fs
cmp
test
sbb
cmp
mov
xor
aas
add
add
popa
xchg
add
data16
into
or
inc
pop
jo
push
(bad)
mov
push
inc
jmp
and
adc
and
or
inc
cli
out
test
inc
stos
in
xchg
jmp
mov
movs
or
(bad)
mov
mov
imul
and
pop
ja
repz
(bad)
call
xchg
(bad)
mov
daa
mov
xor
push
lahf
enter
jns
popf
loope
cld
and
jo
out
mov
jle
out
or
mov
icebp
icebp
js
push
fs
call
xlat
add
(bad)
jns
add
bound
jns
das
fadd
inc
xchg
inc
add
mov
inc
xchg
xchg
mov
nop
inc
pop
and
push
cdq
sub
and
and
fld
or
and
ds
and
cmp
sub
xchg
adc
cmp
in
clc
jne
add
add
loope
jb
jp
adc
push
push
mov
pop
js
shl
mov
dec
ins
and
jae
pop
push
push
mov
xor
jge
imul
neg
add
data16
daa
test
sbb
es
push
aaa
or
jmp
mov
js
shr
ins
mov
hlt
or
stos
into
mov
lock
mov
stos
sub
in
fcom
lock
mov
shl
mov
jg
xchg
lods
add
cmp
out
iret
push
data16
mov
mov
cmps
push
add
(bad)
pop
repz
push
sbb
xor
ins
adc
push
data16
cmp
movs
shl
sar
rol
push
adc
or
and
std
push
imul
in
sub
add
dec
or
stos
cld
fldcw
sbb
cmp
inc
cmp
nop
clc
fstp
lahf
xchg
sbb
mov
and
jb
mov
stos
sub
or
adc
leave
(bad)
hlt
sub
int3
cld
test
dec
xor
dec
dec
jmp
jmp
retf
add
or
fs
add
cld
aas
mov
loopne
inc
adc
repnz
rol
cmp
je
dec
and
xor
pop
adc
sbb
xor
dec
repnz
ds
and
xchg
inc
add
xchg
rcl
aam
daa
sahf
mov
dec
and
push
xor
mov
sti
(bad)
std
jg
sub
xor
int
xchg
xor
ret
sbb
mov
adc
add
hlt
add
adc
or
sub
push
pop
push
ins
push
adc
adc
mov
push
adc
add
nop
push
and
cmp
adc
pop
jmp
and
hlt
xchg
in
and
add
cmp
pop
pop
in
mov
inc
(bad)
pop
test
xor
dec
and
inc
and
outs
dec
pop
push
and
movs
retf
inc
test
(bad)
in
dec
(bad)
enter
add
mov
cmps
stc
mov
push
jmp
out
sahf
es
push
mov
div
rcr
or
iret
xor
out
fiadd
in
cld
adc
xor
and
jecxz
jo
mov
or
call
aas
xor
mov
jg
ret
adc
push
sar
scas
ins
gs
ret
inc
inc
inc
fnsave
das
sbb
cwde
fdiv
lock
push
jo
mov
ins
sbb
mov
jae
or
xchg
push
inc
push
xchg
ss
imul
fnstsw
(bad)
lock
dec
je
or
jmp
mov
in
push
pop
imul
les
test
sub
mov
dec
clc
movs
enter
jns
out
fwait
or
xor
inc
push
jbe
imul
mov
push
pop
sub
xchg
jns
ins
shr
lds
add
mov
fxch
cmp
fild
mov
xchg
xchg
or
pop
add
cmp
nop
mov
jge
cmp
sbb
xor
cmp
jae
bound
jbe
add
in
neg
jne
xor
(bad)
aaa
pop
push
push
pop
(bad)
es
xchg
push
shl
mov
and
dec
ins
and
aaa
popa
mov
shl
pop
adc
push
mov
or
push
dec
cmps
jg
adc
in
dec
mov
mov
pop
or
pop
adc
or
das
push
xchg
push
xchg
lock
ins
adc
in
and
or
in
adc
ins
sub
test
(bad)
addr16
cmp
push
sbb
pop
push
dec
xor
pop
push
push
xor
adc
mov
mov
jnp
cdq
jne
or
cmp
std
mov
add
push
mov
cwde
cmp
repz
in
jb
sbb
jp
ret
sahf
push
mov
aas
nop
xchg
inc
sahf
mov
jbe
cs
add
das
inc
cs
add
ja
retf
jb
outs
push
or
jge
or
call
mov
nop
sub
add
lds
or
in
and
or
arpl
iret
repz
push
ret
cs
xchg
cmp
mov
dec
in
scas
iret
adc
pusha
xor
and
adc
xchg
inc
out
push
test
add
adc
and
call
push
adc
rcl
out
pop
sub
push
adc
loop
xor
inc
pop
aaa
jae
cmp
xor
aaa
sbb
adc
and
pop
bound
and
movs
mov
fmul
(bad)
rcl
xor
jecxz
mov
fwait
lock
jb
push
stos
sbb
dec
jo
dec
xlat
xor
std
vmwrite
ins
popa
dec
loopne
fwait
adc
cdq
loopne
pusha
ss
cmp
add
push
xor
adc
push
add
xchg
into
xor
int3
popa
daa
call
and
adc
call
and
xchg
bound
repnz
sub
push
mov
and
sub
inc
adc
sub
add
arpl
lds
pop
push
nop
push
jecxz
cmp
adc
cmp
rol
push
aas
push
fs
stc
cmp
nop
lods
ret
xchg
mov
pop
adc
call
out
call
xchg
mov
adc
jb
mov
std
aas
arpl
int3
pop
leave
les
fisttp
test
cld
push
arpl
add
and
fisub
xor
rcl
mov
test
add
sub
pop
arpl
sub
mov
jmp
mov
inc
mov
and
je
rcr
(bad)
arpl
jns
ds
cmps
vunpckhpd
push
jnp
iret
xor
add
xor
repz
push
mov
cmps
mov
inc
das
into
pop
and
sbb
adc
sub
add
lods
push
xchg
add
inc
cmps
sub
mov
aas
dec
adc
add
push
daa
mov
inc
cmp
sub
fiadd
dec
inc
sub
mov
daa
inc
mov
and
pop
add
add
scas
jecxz
imul
fwait
ds
xor
push
push
nop
cmp
xor
pop
lock
push
or
stos
or
cdq
lea
mov
push
sub
xchg
push
push
jb
jle
sbb
loopne
cmp
es
jmp
(bad)
and
sbb
in
repnz
sbb
adc
xchg
adc
cmp
rol
sti
loope
pop
movs
push
fmul
fisttp
add
inc
dec
enter
sub
mov
xor
xchg
add
and
inc
jns
sub
out
enter
inc
cs
out
out
mov
rol
movs
or
das
popa
dec
dec
test
push
es
nop
nop
or
lahf
push
pop
popa
les
shl
sbb
xchg
out
sahf
out
lahf
mov
repz
add
into
push
inc
iret
shr
pop
push
into
repz
test
or
or
push
jnp
inc
out
sbb
sbb
nop
je
mov
inc
test
gs
sub
fild
ins
mov
or
sub
arpl
or
add
add
addr16
jmp
enter
nop
call
and
adc
sbb
jne
pop
adc
xor
sbb
int
sbb
test
fdiv
imul
or
pop
sbb
iret
repz
sub
sbb
loop
sub
iret
push
sbb
jns
sbb
or
pop
sub
pop
sbb
pop
jno
sbb
je
pop
pop
xchg
push
repnz
xor
test
and
ds
aam
xor
push
dec
mov
scas
jne
retf
pop
or
pop
neg
xlat
loopne
movups
test
push
add
mov
clc
shr
ds
lea
jns
clc
dec
aas
mov
fld
and
sub
jmp
add
add
add
sbb
(bad)
fimul
leave
cmp
mov
mov
data16
inc
inc
push
jl
mov
add
add
fld
pusha
push
inc
mov
add
push
xchg
jecxz
imul
or
push
push
cmp
push
pop
jo
xchg
es
jl
and
push
inc
and
fsub
mov
adc
sbb
mov
push
cmp
cdq
mov
xor
cmps
add
cld
pop
addr16
(bad)
imul
js
loopne
not
mov
or
inc
cmps
ffree
inc
adc
push
sub
mov
in
adc
ins
adc
add
fdiv
inc
dec
or
pushf
or
and
adc
ss
fadd
push
ret
ret
push
push
xchg
pusha
push
add
xchg
mov
pop
movs
add
out
into
pop
xchg
pop
and
xor
idiv
dec
bound
and
push
repz
imul
push
fistp
call
inc
push
jbe
(bad)
sbb
mov
nop
ret
pop
mov
sub
sub
inc
dec
jno
cdq
inc
fisubr
mov
or
mov
jb
push
dec
adc
push
xor
pop
dec
cmc
sub
adc
jmp
out
jmp
jmp
jmp
jns
inc
pop
adc
sub
pop
inc
jmp
push
iret
not
cmp
fld
push
mov
mov
and
sbb
and
ds
repz
push
bound
and
jo
xchg
pushf
push
mov
imul
cmp
jne
sbb
xor
dec
xchg
cwde
fist
int
enter
rcl
in
imul
add
sub
mov
out
(bad)
les
rcr
ins
in
xor
push
or
(bad)
push
cmp
test
in
in
mov
and
daa
aaa
int
dec
xchg
inc
(bad)
ret
or
push
mov
push
repnz
sub
cmp
daa
inc
xchg
call
jne
loope
jne
scas
fbld
and
inc
cmovae
jg
or
in
pop
push
push
adc
fs
lahf
jecxz
inc
call
shl
or
push
fild
mov
and
test
inc
stos
or
enter
pop
inc
pop
xchg
push
and
pop
daa
sub
das
lea
fs
ja
and
xchg
out
fisubr
push
cmp
jbe
ja
out
xchg
cwde
sub
test
sub
mov
push
out
repnz
not
xor
inc
sbb
pop
sbb
dec
fcmovnbe
push
mov
or
inc
adc
test
sub
mov
sub
sbb
mov
cwde
loope
xchg
sub
and
inc
arpl
pusha
imul
aas
add
cmp
add
mov
sub
sub
inc
sub
mov
jo
sub
imul
daa
stos
ret
iret
repz
f2xm1
or
and
sub
sbb
push
repz
nop
fldcw
or
cdq
inc
mov
sub
aaa
inc
sbb
mov
pop
mov
enter
mov
test
lahf
add
pushf
popf
xchg
sub
imul
ror
test
fild
jmp
(bad)
and
fild
xor
leave
and
xchg
repnz
dec
repnz
fistp
sub
xor
mov
fdivr
xor
push
bound
repz
xchg
test
mov
out
stc
sahf
(bad)
enter
daa
jecxz
out
mov
xor
outs
das
or
and
push
xchg
test
or
fimul
stc
and
or
pop
fld
inc
pop
inc
pop
mov
pusha
enter
mov
xor
and
jbe
shl
sbb
jae
cmp
bound
push
adc
test
nop
jnp
add
mov
sbb
sar
mov
jae
xor
pop
xor
stos
mov
into
fiadd
push
rol
jns
out
or
inc
bound
xor
fild
and
movs
cmp
sbb
jne
mov
leave
inc
repnz
cmp
add
pop
inc
out
sbb
push
lods
stc
out
popa
nop
arpl
adc
pop
dec
pop
push
ds
and
sbb
dec
xor
daa
pusha
xor
mov
ret
scas
mov
jmp
inc
pop
test
lods
lock
ins
outs
int3
call
mov
sub
inc
xor
push
mov
mov
xor
ds
fwait
add
je
and
inc
dec
add
cld
test
or
mov
inc
xor
out
lock
cld
mov
add
xchg
inc
xor
shr
add
dec
xchg
push
bound
(bad)
test
imul
les
add
push
inc
or
mov
xor
xor
pop
push
xor
popa
adc
pop
fs
inc
mov
pop
xor
sbb
(bad)
and
sub
add
adc
ret
dec
dec
adc
mov
arpl
xchg
add
mov
dec
shr
je
add
loope
cmp
sbb
inc
das
xor
or
mov
add
in
sbb
pop
in
es
cmp
mov
cs
jns
jge
(bad)
xor
pushw
xchg
retf
rcr
mov
iret
jae
adc
push
push
jne
aas
or
xchg
je
sub
add
adc
or
nop
cs
ret
outs
pop
adc
mov
sar
test
cmp
and
push
xlat
or
or
sbb
fst
xor
movs
rcr
aam
clc
cmp
clc
push
add
and
adc
push
push
jbe
movs
addr16
mov
shl
loope
fiadd
ins
xchg
pushf
push
push
cwde
jo
lods
pop
jbe
test
cwde
xchg
jno
aaa
mov
gs
jb
pop
aas
nop
mov
aas
mov
shl
mov
mov
test
and
or
shr
jl
lods
and
sbb
adc
xlat
aas
sub
mov
jnp
add
mov
dec
jae
js
add
gs
(bad)
ja
add
inc
dec
push
cmp
dec
jb
or
test
nop
cmp
icebp
cmp
cmp
jns
cmps
inc
jne
aam
cmp
int
pushf
adc
xchg
adc
sub
call
ins
adc
leave
lahf
(bad)
sbb
push
xor
push
sub
pop
add
cmp
inc
fisubr
and
jo
or
and
dec
jo
dec
movs
leave
jmp
ror
shl
shl
hlt
imul
mov
mov
lock
pop
xchg
fwait
imul
xchg
adc
inc
push
push
mov
ins
cdq
push
jno
cmc
fs
jbe
jnp
pusha
mov
pusha
pop
dec
mov
fwait
inc
push
pop
pop
out
dec
dec
pop
add
pop
sub
xchg
cmps
cmp
push
and
mov
imul
dec
dec
call
sbb
jmp
(bad)
jmp
add
push
cmp
sub
call
push
inc
inc
fistp
sub
sbb
cmp
cmp
ficomp
fs
ds
mov
out
jl
jno
inc
pop
lahf
cwde
shl
test
cmc
xchg
rcl
add
test
pop
cmp
xchg
push
or
fs
cld
adc
sub
call
bound
cmps
sbb
in
cmp
push
cmp
loop
mov
pop
sbb
jno
push
setb
fadd
fild
cmp
push
and
and
sbb
int3
or
sbb
inc
jno
ret
adc
mov
mov
sub
jg
add
shl
sbb
sti
mov
pop
cmps
in
mov
out
ds
scas
in
icebp
sbb
xor
int
jns
jl
(bad)
in
inc
jmp
rol
xor
push
daa
(bad)
mov
add
dec
mov
mov
imul
adc
and
lea
les
ins
sbb
(bad)
pushf
push
pushf
gs
(bad)
sti
cwde
les
xchg
xor
nop
mov
adc
sub
inc
movs
cmp
test
cmps
out
pop
and
or
xor
test
imul
inc
sbb
mov
or
xchg
loop
movs
mov
mov
cli
inc
pop
call
pop
inc
push
sub
test
inc
in
test
pop
jnp
mov
xor
retf
lock
or
inc
mov
pop
bound
sub
and
fwait
je
fst
sbb
xchg
pop
lds
sbb
cmovl
ins
and
imul
cmps
push
pop
in
mov
jno
pusha
xchg
pusha
inc
mov
adc
mov
leave
adc
jg
sub
push
aad
leave
in
add
dec
mov
aam
je
push
jmp
icebp
shl
pop
jns
dec
lea
fwait
push
fnstsw
cmp
repnz
and
dec
xor
xchg
icebp
inc
dec
adc
inc
push
cmp
push
push
push
push
je
jg
stos
adc
imul
jae
pop
adc
inc
arpl
dec
inc
sbb
push
adc
inc
stos
ret
loopne
push
enter
inc
test
shl
pop
pushf
cmp
xor
inc
sub
sbb
loopne
inc
sub
gs
ret
mov
jns
iret
repz
ret
inc
pop
dec
sar
jnp
mov
dec
into
repz
(bad)
push
sahf
dec
daa
cmc
adc
push
inc
or
add
xor
ret
mov
or
mov
ret
sub
mov
movs
sbb
sub
xor
add
inc
sti
xor
mov
out
sub
shr
adc
scas
in
and
or
and
sub
mov
ret
mov
sbb
dec
jb
hlt
cmp
pop
dec
dec
repnz
pop
int3
out
call
jno
pop
push
loope
mov
cmp
xchg
sub
add
push
adc
stos
or
mov
(bad)
pop
fiadd
popa
(bad)
pop
aam
push
test
and
push
and
sbb
dec
gs
mov
and
pop
inc
inc
movs
sub
mov
sub
aaa
or
repnz
push
test
ins
cmp
mov
jo
and
xchg
stos
loopne
mov
(bad)
mov
dec
inc
dec
sbb
add
inc
(bad)
or
adc
and
sbb
test
dec
lock
sub
jns
xchg
or
test
dec
dec
jge
dec
stos
loop
sar
dec
aas
mov
add
aas
jmp
mul
fsub
test
push
sub
or
lock
ss
mov
cs
cmps
xchg
or
mov
push
adc
sbb
pop
ret
sub
lods
add
pop
push
sub
movs
sbb
or
inc
jb
sahf
mov
retf
ret
dec
add
dec
xor
xchg
rcl
pop
and
iret
xor
outs
inc
push
jb
and
dec
and
enter
or
add
mov
imul
test
mov
inc
xor
xor
jo
adc
cli
daa
add
pop
loopne
lahf
ss
lods
sub
add
xchg
or
aas
dec
in
adc
adc
mov
adc
mov
call
sub
adc
cmp
and
adc
adc
add
add
mov
bound
dec
mul
data16
push
add
scas
ficom
pop
add
loopne
or
sti
les
pop
push
(bad)
in
inc
inc
add
dec
xor
dec
add
sbb
mov
or
fistp
mov
and
fistp
imul
pop
xchg
jno
fadd
cmps
dec
push
xor
scas
or
push
sti
mov
pop
bound
repnz
add
xor
inc
leave
popa
push
xchg
sub
repnz
add
xchg
push
inc
xor
push
mov
inc
mov
sahf
push
pop
scas
in
push
out
outs
or
(bad)
dec
aaa
dec
push
mov
dec
and
add
push
push
xchg
sub
push
inc
pop
scas
clc
lods
dec
fisub
cmp
fsubr
inc
cmp
cmp
cli
jg
je
pop
mov
and
je
gs
jge
jp
cmp
dec
and
in
jmp
cwde
(bad)
mov
or
xor
push
mov
sbb
or
jns
ja
jmp
jg
and
and
clc
push
jb
and
adc
cmp
pop
inc
iret
adc
or
shr
es
inc
push
jmp
jnp
or
sbb
clc
mov
jmp
fs
cmp
pop
test
sub
sub
xchg
test
and
jae
daa
adc
repz
popa
sub
sub
mov
sbb
and
jmp
mov
fist
mov
jbe
into
add
or
add
or
push
xor
xor
push
inc
push
jnp
sbb
push
pop
push
(bad)
inc
int
mov
add
fldenv
push
repz
cmp
sub
jmp
fbstp
or
inc
dec
add
outs
inc
out
ficomp
jle
mov
mov
call
add
cli
add
add
clc
add
dec
mov
sub
aaa
inc
push
push
je
dec
adc
adc
out
add
adc
mov
out
mov
or
sub
sti
retf
adc
retf
add
add
int
lods
cmc
data16
out
div
mov
or
jmp
xchg
jmp
mov
or
pop
test
jne
ds
div
inc
jle
adc
sub
test
dec
scas
sbb
adc
mov
mov
push
cmp
aaa
sub
jge
xor
push
adc
push
or
pop
cmp
jae
xor
sbb
sahf
mov
jbe
outs
jne
mov
cmps
ja
outs
push
je
mov
daa
jbe
fstp
pop
or
sar
pop
push
fmul
outs
dec
fild
add
fcompp
cmp
and
pop
fwait
mov
pushf
cmp
pop
inc
rcl
mov
ins
rcl
clc
aad
sar
in
std
pop
pop
and
fldenv
pop
inc
out
adc
xchg
jle
inc
and
mov
movs
and
adc
sub
push
add
(bad)
and
(bad)
(bad)
retf
pop
add
pop
movs
repz
repz
aas
dec
popa
mov
repz
out
pop
sub
pop
jnp
cmp
jl
inc
push
pop
add
push
ins
(bad)
imul
movs
jnp
int
cmp
pop
iret
fstp
pop
push
pop
out
fucomi
mov
xor
jno
adc
mov
push
cld
adc
sbb
add
dec
dec
shr
mov
loopne
ins
sbb
jmp
inc
enter
ret
(bad)
sbb
cmps
mov
inc
cmp
adc
jmp
pusha
dec
mov
adc
popf
inc
dec
jmp
stos
movs
mov
push
jmp
inc
jg
popa
and
push
or
jmp
adc
and
jae
call
add
fmul
nop
dec
in
mov
add
and
sub
or
lock
aaa
xchg
mov
rol
dec
cmp
mov
sti
xchg
test
or
nop
sbb
jo
or
add
cmp
retf
aaa
xchg
dec
imul
clc
pop
test
call
adc
gs
retf
in
or
nop
out
pop
fadd
mov
add
mov
add
mov
cmp
sbb
fwait
(bad)
pop
les
sub
and
clc
mov
xor
(bad)
aad
and
stc
repnz
jb
push
mov
in
or
pop
rol
bnd
pop
sub
mov
push
lock
jae
stc
xor
dec
push
and
push
ss
imul
pop
sub
or
and
iret
fsubr
adc
and
stos
scas
test
js
pop
inc
es
cmps
xchg
lods
aam
dec
push
into
or
xchg
popf
adc
xchg
rcl
cdq
or
or
jmp
int3
mov
es
cmp
push
loop
xchg
dec
push
xchg
push
sbb
ret
das
xor
cmps
pop
in
sbb
pusha
(bad)
xchg
ror
xchg
or
adc
mov
loop
jle
les
push
xchg
xchg
or
aaa
dec
add
icebp
cmp
push
popa
xor
xchg
clc
and
neg
enter
push
jb
push
pop
enter
xor
inc
(bad)
dec
xchg
bound
out
int
fidivr
jb
gs
(bad)
mov
popa
out
dec
fwait
(bad)
shr
imul
cmps
push
das
jecxz
xchg
bound
dec
mov
aaa
mov
es
imul
out
sbb
jbe
outs
inc
call
mov
add
push
pop
xor
inc
pop
push
xor
fistp
inc
add
push
imul
(bad)
loop
sub
add
mov
push
add
lahf
bound
mov
(bad)
aad
adc
xlat
add
lds
sub
movs
mov
std
cmp
fsub
or
arpl
test
push
in
cmp
pop
mov
adc
mov
(bad)
mov
sub
xchg
into
mov
test
in
add
and
or
jecxz
bound
mov
pop
xor
fadd
cmp
out
pop
sbb
adc
inc
hlt
push
pop
in
es
inc
ja
and
(bad)
shl
aaa
push
data16
jmp
push
pop
jb
mov
push
xchg
and
cli
pop
shl
pop
movs
add
add
retf
shr
add
inc
sub
test
test
je
or
stos
sub
popa
or
fidivr
jae
push
add
lahf
int
push
aas
add
add
sar
pop
dec
sti
sbb
or
repz
adc
sbb
daa
pop
jnp
test
xchg
and
daa
add
xor
mov
xor
(bad)
sar
jnp
push
or
into
or
mov
jg
push
jb
fs
xchg
inc
push
movs
popfw
mov
mov
out
pop
cs
cmps
dec
and
fs
xchg
repnz
loop
lds
pop
push
and
adc
js
adc
and
add
test
mov
and
sbb
inc
push
pop
cmp
test
std
cmp
pop
call
inc
xchg
adc
add
add
pop
mov
jmp
jne
je
push
xor
pushw
and
aas
outs
sbb
lea
stos
or
sbb
jmp
mov
test
sbb
cmp
or
ja
leave
jp
adc
or
adc
push
dec
adc
cmp
test
push
dec
aam
sub
inc
or
shr
cmp
cmovs
xor
add
leave
shl
daa
inc
mov
adc
xor
fsub
xchg
les
aas
loopne
addr16
(bad)
aaa
fstp
add
push
cwde
cmp
cmovae
hlt
push
mov
jb
mov
mov
out
addr16
cwde
mov
pop
xchg
not
test
adc
mov
into
and
ins
mov
jmp
jnp
push
mov
stos
(bad)
adc
into
cdq
dec
in
inc
ret
xchg
adc
cmps
cmc
test
call
stos
repz
dec
mov
mov
add
jno
dec
imul
mov
add
fisttp
sti
adc
mov
sub
mov
push
or
cli
lds
out
(bad)
jnp
pusha
inc
xchg
aaa
mov
rol
loopne
in
cdq
mov
mov
mov
mov
inc
sar
inc
(bad)
out
adc
je
adc
jmp
dec
loopne
sub
sbb
in
into
inc
(bad)
xchg
mov
adc
pop
test
and
ins
pmulhuw
out
xchg
jg
xchg
cmp
add
out
inc
fidiv
add
xchg
loopne
mov
out
in
push
mov
vmwrite
(bad)
push
int
pop
(bad)
ja
sbb
adc
mov
xchg
enter
pushf
add
cmps
lods
jne
mov
fsub
xchg
out
jmp
add
int3
rol
int3
test
in
mov
add
xor
mov
js
add
mov
retf
inc
pop
mov
adc
sbb
nop
dec
and
xor
mov
out
fidiv
or
call
inc
imul
jo
repz
add
push
dec
cmp
push
adc
add
fst
jns
push
jnp
imul
xor
les
pop
in
push
mov
js
push
pop
pop
fild
mov
jo
lods
aad
dec
push
add
add
cmp
test
scas
add
addr16
mov
ja
jmp
retf
(bad)
fidivr
nop
mov
sbb
out
pop
adc
pop
(bad)
pusha
inc
je
(bad)
ror
add
or
scas
adc
sti
into
sub
and
jl
jg
push
out
je
dec
test
mov
pop
ret
xlat
inc
add
icebp
(bad)
ins
movs
and
jnp
jp
cld
jecxz
push
mov
movs
and
jo
(bad)
scas
ins
(bad)
fisub
and
and
sub
push
sbb
xchg
mov
clc
and
sbb
or
xchg
inc
loopne
cmp
or
push
stos
sbb
push
(bad)
fmul
xchg
fld
cwde
dec
mov
fdivr
cs
dec
(bad)
or
push
dec
mov
add
jns
adc
mov
ds
mov
mul
inc
call
outs
or
leave
xchg
js
pop
cmps
lea
pop
pop
sbb
or
popa
dec
sbb
mov
je
rol
adc
inc
add
push
stos
push
adc
or
or
mov
jae
mov
adc
push
cmp
adc
sub
mov
test
neg
sti
xchg
and
pushf
dec
push
adc
xchg
or
dec
imul
arpl
fucomp
leave
fimul
sti
out
out
(bad)
cdq
ss
push
inc
jns
dec
jo
sbb
push
or
ins
data16
jp
and
cmp
sbb
dec
sbb
scas
(bad)
xchg
push
xchg
cwde
das
or
lods
cs
or
dec
push
push
popa
data16
add
add
xchg
and
mov
ss
lock
pop
sahf
in
push
and
add
or
popf
push
xchg
or
popa
sbb
cmp
int3
or
mov
and
xchg
add
inc
nop
gs
ret
and
adc
jnp
and
sub
or
pop
or
sbb
mov
sub
push
and
out
pop
xor
fs
jno
pop
sbb
mov
or
fld
push
mov
inc
ret
add
aaa
xor
cmp
outs
jb
ds
dec
(bad)
or
or
bound
popa
dec
mov
repnz
loopne
mov
out
mov
data16
call
xor
jg
fcomp
xor
adc
inc
add
retf
dec
inc
ret
pop
push
add
jmp
add
and
inc
jp
add
clc
ret
es
test
repz
sub
xor
xor
xor
or
pop
out
xor
mov
fdivr
es
(bad)
fimul
mov
push
lea
mov
xor
sbb
mov
lea
mov
push
add
fcmovnbe
ins
imul
adc
xor
inc
or
int3
adc
fwait
jp
lea
mov
in
xchg
jle
inc
push
sar
aad
and
adc
and
outs
fstp
movups
fbstp
dec
jne
jmp
mov
test
fstp
sbb
jne
add
add
clc
jle
(bad)
pop
iret
icebp
or
je
inc
rol
movnti
push
fs
jmp
lea
addr16
rol
sbb
enter
hlt
push
mov
lock
loopne
in
cmp
add
and
push
stos
and
inc
and
pushf
xchg
mov
sub
push
shl
loope
mov
adc
xor
dec
sar
add
or
fmul
sub
sub
pop
pop
sbb
mov
pusha
jl
or
push
in
test
xor
or
pop
sbb
(bad)
push
push
or
idiv
fistp
retf
je
mov
dec
push
mov
add
sbb
jne
ret
dec
hlt
ja
mov
jmp
movs
and
cmps
sbb
loop
mov
imul
ins
xchg
fistp
sbb
(bad)
(bad)
jne
jmp
popa
lock
mov
lea
fstp
push
fstp
mov
xchg
cmp
jne
sub
lds
cwde
jne
or
xchg
inc
outs
pop
sbb
call
mul
ja
out
push
or
stos
mov
push
add
rol
push
pushw
or
sar
or
dec
sbb
(bad)
sbb
jbe
loop
xor
repnz
jmp
adc
or
shl
mov
paddd
ja
out
dec
sar
adc
call
ret
jmp
or
mov
clc
pop
add
pop
jbe
mov
mov
cmp
je
fisub
addr16
lar
sar
or
jmp
jl
sbb
lds
aas
test
cmp
and
add
add
sub
es
or
add
push
es
movs
movs
imul
xchg
daa
pop
loopne
aaa
fs
fisttp
mov
cli
data16
mov
mov
cmp
ja
retf
repz
jb
add
add
call
(bad)
out
fnstenv
lock
mov
or
add
mov
push
outs
jmp
push
adc
xchg
or
adc
enter
add
inc
loop
test
je
fs
bound
in
adc
outs
ja
lods
leave
mov
mov
xchg
pop
aam
leave
clc
pop
js
adc
shl
add
adc
loopne
add
repz
popa
adc
aaa
cmp
or
add
fist
or
ja
inc
or
push
loop
pop
and
ror
adc
mov
repnz
loope
dec
(bad)
mov
jle
and
loop
mov
inc
cmp
pop
push
(bad)
xlat
or
cmc
add
mov
movs
clc
or
lods
cmp
mov
stos
mov
rep
iret
mov
sub
rcl
hlt
scas
push
push
aam
lods
inc
dec
ins
loope
into
scas
arpl
or
mov
test
push
push
push
inc
outs
icebp
outs
(bad)
out
and
cmc
mov
repz
mov
jle
clc
inc
jge
pop
int3
adc
inc
push
out
add
and
imul
xchg
lds
xchg
jns
mov
mov
pop
xlat
retf
adc
jnp
cmp
jns
movs
jp
fcomp
lods
mov
sub
ins
fcom
inc
push
cmp
lods
add
or
loope
sbb
fbld
or
or
sbb
adc
sbb
jbe
push
xor
add
xchg
mov
push
outs
stos
daa
mov
sub
addr16
retf
je
adc
in
jns
lea
push
xchg
adc
loopne
cmp
pop
cs
jle
pop
sti
nop
add
push
push
sbb
sbb
inc
jno
retf
sbb
rcr
xor
clc
mov
das
sbb
sbb
mov
push
add
xor
lds
mov
dec
pop
adc
inc
adc
and
out
mov
inc
jmp
aam
clc
and
in
xorps
lock
aam
(bad)
jns
add
dec
and
xor
inc
add
(bad)
popf
(bad)
push
jb
add
ins
clc
cld
and
es
jg
add
cmp
and
fild
in
in
add
icebp
ins
and
push
fild
aaa
pushf
(bad)
xor
in
dec
add
test
(bad)
jbe
test
push
nop
xchg
inc
sub
ss
mov
add
dec
ins
pusha
imul
inc
jg
sub
je
mov
aam
cld
mov
inc
jmp
inc
(bad)
xchg
cmp
lea
imul
addr16
cld
(bad)
adc
ret
dec
jg
sub
loope
jmp
xor
and
mov
push
pusha
sbb
jmp
pop
(bad)
cmp
arpl
cmp
and
mov
pop
jo
enter
mov
movs
push
add
jge
test
pop
out
mov
test
add
shl
loope
test
mov
fstp
daa
loopne
in
gs
push
dec
xchg
retf
cmp
mov
ds
xchg
mov
adc
push
adc
jnp
ss
ins
mov
mov
jg
inc
(bad)
cmp
mov
outs
mov
xor
add
ins
xor
lahf
jp
inc
add
and
sub
cmp
or
add
push
xor
or
sub
pop
cmps
xchg
sub
fisttp
ds
stc
jb
adc
in
inc
mov
jge
ja
ja
aam
inc
sbb
mov
or
sbb
and
push
or
jp
sar
ds
add
jae
mov
add
ror
pusha
sbb
add
xor
movs
and
into
out
stos
push
xchg
stos
push
push
shl
xchg
xchg
movs
mov
push
icebp
xor
dec
mov
cmp
add
push
ins
dec
das
push
push
enter
mov
pop
add
or
jae
js
cmp
and
jns
adc
xchg
rcr
inc
int3
test
pop
loop
out
mov
add
in
cli
test
mov
jg
mov
dec
add
add
inc
dec
add
popa
fmul
xchg
mov
mov
test
mov
cmp
adc
push
rcl
mov
data16
inc
inc
outs
jne
xchg
and
push
xor
add
xchg
loopne
pusha
xlat
and
movs
xchg
pusha
das
mov
xchg
inc
mov
pop
mov
xchg
push
xchg
or
cwde
xchg
pushf
sub
in
fs
adc
push
add
test
pop
lea
dec
xor
ins
jecxz
mov
shl
fwait
in
pop
das
sub
push
mov
mov
adc
add
push
xchg
rcl
adc
in
mov
xor
jl
pop
mov
call
scas
mov
stc
lods
mov
mov
(bad)
fcom
push
adc
scas
pop
mov
inc
lea
jg
loop
push
scas
pop
add
jle
fnclex
mov
ret
call
or
jnp
fmul
pop
add
add
or
outs
lods
scas
cmp
jno
push
inc
outs
ins
imul
pop
adc
adc
xchg
sbb
or
enter
arpl
push
mov
xadd
pop
imul
int
adc
out
inc
rcl
cmp
mov
pop
addr16
jmp
out
mov
rcl
or
pop
add
xchg
cmp
inc
pop
loop
sbb
mov
stos
pusha
xchg
sub
jmp
xchg
adc
inc
lea
ins
push
ror
lea
test
test
out
xchg
pop
repnz
sbb
xchg
mov
test
push
pop
movs
mov
inc
mov
retf
nop
and
mov
call
add
(bad)
std
movs
push
bound
stc
inc
mov
outs
ja
and
(bad)
pop
xor
test
add
mov
aam
leave
push
xchg
cmps
(bad)
dec
push
add
dec
(bad)
push
clc
ror
and
xor
inc
mov
and
adc
mov
inc
mul
mov
or
sti
sar
sbb
test
jnp
inc
adc
adc
bound
add
pop
pop
jns
and
arpl
arpl
ret
inc
or
sub
ja
adc
ret
xor
dec
push
xchg
mov
out
jecxz
inc
sbb
cmp
cmc
inc
pcmpgtw
add
je
jmp
push
call
and
dec
shl
or
sub
and
adc
inc
dec
push
ror
cmp
and
lock
inc
or
enter
or
and
pop
shl
std
out
adc
ret
adc
mov
sbb
xor
or
daa
nop
add
xor
in
and
jns
push
pushw
or
or
in
or
adc
cmp
lods
dec
pop
daa
adc
fild
ret
push
push
aaa
data16
data16
inc
enter
jmp
adc
or
sbb
pop
call
xchg
dec
enter
and
jl
xchg
inc
sub
and
mov
pop
add
sub
movs
lea
pop
dec
add
shl
outs
add
sbb
inc
push
jge
add
mov
(bad)
dec
pop
jecxz
xchg
or
mov
dec
xchg
jo
les
adc
dec
dec
jne
aaa
dec
adc
icebp
sbb
or
jbe
inc
ja
cmps
or
inc
imul
movs
add
fs
outs
xchg
sbb
sbb
pusha
nop
sbb
xor
rcr
pushf
or
cwde
sub
push
and
sub
cmps
add
ins
dec
into
xor
or
jae
aaa
or
xchg
in
les
mov
push
xadd
je
or
jb
or
das
pop
ror
jae
jae
cld
mov
push
outs
jne
push
out
stos
pop
jo
ins
popa
inc
in
les
imul
retf
or
jecxz
adc
cs
inc
xchg
mov
add
inc
pop
mov
add
or
dec
push
or
or
pushf
inc
aaa
inc
cli
ja
jne
mov
adc
add
or
dec
jne
cmp
or
jne
jl
inc
jbe
push
or
push
add
mov
sub
out
and
out
and
add
sbb
scas
cmp
and
xor
outs
cvtpi2ps
les
mov
xchg
pop
mov
ror
pop
mov
mov
les
leave
leave
enter
fcmovb
cdq
inc
xor
xchg
pop
push
xchg
pop
push
inc
dec
jo
inc
and
pusha
push
or
dec
in
and
daa
pop
or
pop
jg
int
cmp
xor
cmps
sbb
int3
fwait
in
sbb
fwait
ins
mov
scas
sub
cs
jmp
pop
and
cmp
je
dec
enter
xchg
pushf
jl
sbb
in
retf
xor
xor
xor
dec
add
popf
cmp
es
popf
cvtpi2ps
mov
mov
ffree
pop
and
pusha
mov
dec
in
xor
leave
int3
rcr
inc
mov
and
scas
and
in
sub
ins
sahf
mov
sub
jp
sahf
push
or
rcl
push
xor
push
adc
dec
sbb
cmp
mov
mov
inc
inc
pop
in
ss
and
pop
sub
push
scas
les
enter
int3
ror
xor
xchg
push
mov
pop
adc
(bad)
mov
pop
je
jp
lahf
jmp
and
sub
push
or
or
(bad)
mov
pop
push
lock
jae
xor
mov
pusha
push
dec
dec
mov
dec
(bad)
retf
imul
dec
fdiv
stos
pusha
fisub
loopne
outs
adc
or
(bad)
movs
loope
stos
iret
pop
sub
sbb
mov
cmp
adc
cmovne
sti
push
push
test
iret
pop
sub
adc
sbb
jmp
push
mov
sti
push
test
repnz
sahf
xchg
or
(bad)
call
lds
enter
je
mov
add
add
and
das
iret
pop
mov
ret
fisub
mov
shl
popa
in
(bad)
add
int3
or
outs
mov
daa
adc
jecxz
dec
jo
or
jnp
add
movs
inc
or
(bad)
mov
leave
sub
pop
adc
add
mov
adc
fcomp
ins
sub
xor
sbb
leave
mul
xor
xchg
jle
adc
jne
xchg
add
mov
sub
inc
sub
test
dec
jl
add
cmp
movs
dec
add
mov
jb
pop
outs
jb
push
xor
pop
xchg
jbe
or
add
sbb
nop
cmps
aaa
je
inc
daa
mov
ja
push
adc
(bad)
fild
aaa
push
add
add
push
pop
cmp
fisubr
mov
cld
inc
push
dec
in
adc
xor
adc
xor
outs
mov
sbb
js
mov
add
inc
adc
xchg
push
adc
fcom
or
add
mov
hlt
sbb
ror
adc
add
push
shl
add
push
ds
and
in
sub
aas
mov
mov
shr
adc
rcl
or
leave
mov
sbb
jmp
js
sub
xchg
push
(bad)
das
movs
test
dec
adc
jl
add
fs
fwait
mov
mov
stc
test
sbb
aas
push
out
or
xchg
loopne
xchg
sub
icebp
mov
cmp
stos
xor
mov
stos
pop
pop
(bad)
repz
pushf
push
inc
fsubr
and
setae
retf
lock
leave
leave
enter
sahf
loope
in
in
lods
dec
or
lock
add
add
push
daa
sbb
push
ja
sbb
adc
or
movnti
movs
cmp
inc
jecxz
mov
out
and
inc
int
xor
inc
add
mov
fdiv
shl
mov
test
push
adc
pop
ins
movs
inc
bnd
sbb
sbb
inc
dec
add
sbb
dec
outs
xchg
add
xor
add
sbb
es
push
jo
stos
(bad)
rol
jp
mov
rcl
arpl
fwait
cmp
scas
dec
sub
sub
fs
jno
(bad)
out
mov
xchg
clc
cmp
mov
inc
es
dec
sub
jmp
std
movs
jo
loope
nop
cmps
push
mov
mov
leave
add
or
mov
rcl
jg
sbb
dec
and
cmp
add
js
mov
or
xor
and
loope
sbb
xor
test
jne
ret
pop
dec
pop
data16
aam
stos
and
push
das
fsubr
clc
mov
lea
into
inc
push
movs
inc
stc
inc
imul
or
jno
nop
push
add
or
mov
dec
sub
sbb
jno
pusha
pop
mov
movs
inc
aaa
sbb
inc
mov
add
or
adc
mov
bound
mov
pop
mov
sub
jle
or
add
jbe
cdq
cs
cdq
or
sbb
in
add
sub
add
mov
inc
or
mov
xor
mov
or
pop
sbb
add
xor
daa
mov
daa
jno
mov
mov
or
inc
xor
jno
enter
cmp
enter
(bad)
sub
or
in
mov
ret
mov
mov
adc
inc
pcmpgtd
les
mov
mov
lock
pop
dec
jge
mov
lea
into
ins
inc
add
lods
(bad)
in
mov
xchg
pop
mov
cmp
cmp
imul
test
outs
add
fcom
mov
lahf
pop
or
xchg
arpl
jb
sub
pop
outs
or
pop
movs
dec
sbb
femms
mov
lds
add
mov
add
movs
sub
repnz
mov
jb
jle
(bad)
jg
dec
adc
cwde
sub
jo
mov
mov
ss
cmps
add
test
mov
sbb
inc
daa
movs
das
ret
repnz
inc
jecxz
and
jns
push
lock
inc
imul
mov
and
sbb
pop
push
lds
stos
ds
das
(bad)
cmp
cdq
js
stc
pop
pop
dec
jmp
add
inc
push
sub
inc
mov
adc
xchg
add
pop
jne
cdq
or
mov
dec
add
push
and
add
cmp
sbb
call
lock
xchg
and
inc
jg
or
fistp
xor
lahf
nop
fs
cld
fs
inc
sbb
lock
js
lock
fadd
repz
iret
test
mov
stc
add
or
sbb
sub
cmp
repz
inc
dec
push
pop
fs
repz
imul
fcom
nop
or
or
aaa
fsub
fldenv
jl
xor
daa
push
mov
mov
sbb
push
dec
les
mov
dec
mov
add
outs
xchg
xchg
aas
dec
ins
mov
mov
paddsw
daa
and
mov
xchg
xchg
daa
or
cmp
xchg
scas
jecxz
mov
leave
js
and
and
call
sub
and
and
inc
imul
(bad)
jb
dec
enter
nop
and
add
mov
and
mov
stos
sar
sahf
xchg
push
enter
jns
mov
ficom
arpl
aaa
xchg
or
pop
xchg
stos
or
mov
std
lods
fidiv
stc
push
movs
in
cmp
sub
or
xchg
stc
lea
inc
ret
aaa
add
xor
adc
ret
mov
pop
into
mov
cmp
xchg
mov
push
inc
xchg
pop
stos
cmp
shr
xchg
fisttp
xor
add
inc
or
mov
xlat
pop
jecxz
test
lea
pop
inc
cli
je
pop
nop
pop
pop
xchg
mov
xchg
inc
add
add
hlt
xchg
in
inc
dec
xchg
sti
inc
and
jge
(bad)
idiv
pusha
push
dec
mov
mov
xor
call
and
push
lock
dec
sahf
ja
xor
jmp
pop
push
clc
xchg
xor
out
cmp
mov
dec
xor
idiv
sbb
add
jmp
ins
imul
imul
pop
iret
pop
push
test
and
fmul
adc
mov
test
sub
inc
mov
add
xor
mov
hlt
pushf
adc
and
inc
shl
icebp
adc
mov
push
(bad)
in
push
sahf
sub
loopne
add
push
mov
jbe
mov
mov
jle
pusha
cdq
pop
enter
push
mov
call
mov
ss
jmp
dec
add
add
scas
adc
fnstsw
inc
lds
sbb
and
nop
aas
pop
dec
call
jo
scas
clc
adc
adc
mov
pop
mov
loopne
pusha
or
outs
mov
pop
ror
adc
sbb
mov
pop
sub
inc
mov
fiadd
and
rcl
cmps
fs
inc
hlt
cdq
dec
mov
pusha
pushf
mov
pop
and
inc
push
and
mov
add
jne
stc
cs
add
adc
nop
dec
dec
int
jne
jns
ins
sbb
adc
or
or
rol
and
or
mov
xor
lods
shr
inc
inc
loope
js
mov
shl
mov
test
rol
sar
les
mov
iret
mov
fwait
xchg
mov
inc
mov
mov
add
xor
jl
sub
ror
cli
sahf
ret
ret
shld
mov
andps
mov
ret
or
or
in
cmps
jne
adc
cmp
fwait
pusha
ret
or
xlat
pop
pop
xlat
or
sub
arpl
fs
xlat
or
jmp
and
mov
sub
inc
addr16
call
xchg
cs
adc
repz
mov
or
inc
bound
mov
ret
push
cmp
enter
pusha
imul
daa
in
add
adc
cs
add
dec
(bad)
ror
sbb
xchg
xchg
xchg
les
les
mov
cmp
pushf
movs
dec
fimul
test
fadd
pop
ficom
sub
jne
xchg
nop
ja
jl
pop
cmp
dec
ja
push
cmp
push
movs
jae
jo
push
xor
les
mov
nop
push
nop
ret
adc
pop
jno
out
push
push
stos
sbb
mov
popf
or
push
and
sub
mov
in
xor
inc
not
cmp
add
mov
push
sub
mov
and
push
jo
imul
aam
fucomp
mov
ret
pop
inc
xlat
in
or
push
inc
sub
mov
add
add
out
(bad)
movlhps
push
idiv
in
mov
test
das
in
sbb
das
or
enter
xor
pop
pop
mov
jp
leave
mov
std
out
(bad)
(bad)
cld
(bad)
sti
(bad)
ins
lahf
jo
xchg
adc
or
cmp
push
popf
cmp
cmp
pop
or
or
cwde
adc
mov
sbb
inc
add
and
in
popf
adc
inc
push
xchg
push
mov
or
mov
sub
or
sbb
inc
test
enter
dec
dec
enter
mov
rcl
call
(bad)
cmp
cmp
imul
ror
ins
xor
enter
add
mov
movs
dec
or
in
fsub
sbb
in
aam
pop
jl
data16
imul
mov
push
mov
popa
outs
mov
xlat
pop
int
mov
dec
loopne
repnz
xchg
sbb
retf
add
jo
stc
add
mov
repnz
mov
das
sar
aam
cmps
add
imul
inc
retf
push
enter
lock
ss
clc
and
lds
sbb
out
push
rol
add
or
mov
add
cmp
test
cmp
retf
push
add
lds
test
sbb
xor
dec
cld
cmps
nop
outs
(bad)
cmovns
jae
adc
scas
fsub
in
fucomip
xor
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
cmp
sar
add
xor
pop
(bad)
jmp
pusha
mov
push
jne
adc
push
fwait
std
add
ins
es
sahf
sub
imul
adc
js
in
inc
int3
jno
fadd
andps
jp
add
fdiv
push
dec
int
daa
loop
and
adc
int
std
adc
pop
dec
movs
fisttp
inc
and
jns
stc
stc
adc
dec
int
int
leave
(bad)
adc
jne
cmp
cwde
mov
int
or
jnp
and
mov
and
enter
int
ret
xchg
add
int
movs
adc
int3
xor
out
aaa
adc
into
pop
hlt
push
addr16
rol
shr
ja
inc
or
or
retf
movs
and
jne
add
mov
scas
mov
stc
out
mov
push
sub
dec
mov
mov
enter
movs
pop
pop
mov
fnstenv
movs
scas
mov
mov
mov
mov
mov
loopne
mov
dec
dec
mov
loop
mov
lock
mov
shl
mov
cld
adc
or
add
mov
int3
or
push
or
scas
inc
push
jl
inc
pop
dec
mov
test
retf
xor
(bad)
sub
push
sbb
jo
aad
sub
adc
mov
aad
push
aas
sbb
fs
sub
push
or
jbe
push
movs
aad
rcr
and
(bad)
dec
dec
mov
sub
adc
ror
push
or
sti
(bad)
mov
in
in
dec
lea
pop
adc
lods
out
jmp
loop
ror
rcr
xchg
push
retf
add
adc
out
das
pop
aam
dec
aam
call
xchg
fild
xchg
pop
ret
pop
jmp
iret
xchg
sub
add
add
xchg
mov
sub
bndldx
push
pop
stc
in
add
sbb
add
retf
xchg
pop
and
sbb
and
push
and
mov
and
xlat
fmul
psubusw
inc
add
sub
push
add
or
fisubr
dec
sahf
dec
dec
outs
jg
gs
or
push
sub
xchg
es
movs
jae
sub
movs
add
pop
pop
dec
cs
(bad)
add
inc
mov
or
int
add
xchg
jge
in
jo
inc
popa
xchg
adc
leave
jo
fiadd
jmp
popf
or
sub
imul
call
das
in
push
inc
dec
add
cmps
add
or
jecxz
dec
mov
cmps
movs
fcmovne
or
inc
mov
cmp
cwde
fiadd
fistp
and
in
fiadd
fstp
out
fimul
aaa
dec
push
mov
sub
cmc
inc
inc
jbe
mov
mov
sbb
fstp
xor
mov
in
out
movs
pop
pop
push
add
jbe
ror
inc
xchg
mov
push
cmp
cmp
mov
nop
push
imul
nop
dec
test
add
ss
test
stos
movs
shl
retf
cmp
push
sbb
stc
pop
and
es
mov
or
popa
xor
repnz
data16
pop
push
xchg
dec
mov
xor
ins
ret
or
or
push
fcom
lahf
xchg
inc
push
iret
call
call
js
sbb
add
add
and
or
xor
cmp
or
mov
xchg
adc
dec
iret
ja
enter
cmp
or
fwait
and
bound
les
mov
pop
adc
mov
outs
in
add
cmp
sbb
std
shr
mov
stos
jno
pop
mov
jb
adc
outs
mov
outs
jl
test
add
and
inc
fucomp
mov
mov
pop
test
mov
sbb
push
jne
mov
or
adc
or
test
sub
mov
adc
and
adc
dec
add
mov
stos
sbb
mov
jp
xchg
push
popa
inc
and
mov
inc
pop
nop
fiadd
pusha
sub
cmp
push
push
lahf
sysret
jo
mov
and
add
and
xchg
and
and
and
test
stc
and
sub
xchg
fiadd
es
(bad)
push
or
into
jmp
add
push
cmp
sbb
(bad)
dec
adc
mov
add
pusha
or
xor
sub
sbb
ins
xor
xchg
adc
adc
cmps
rol
mov
xor
ja
in
ret
ins
fidivr
mov
and
stos
inc
xor
or
fs
jnp
mov
add
and
inc
inc
and
in
dec
popa
inc
sbb
mov
xchg
out
add
mov
sbb
sub
enter
mov
mov
xor
aaa
xchg
inc
adc
mov
xlat
jmp
mov
add
imul
stos
mov
jnp
pop
pop
pop
int3
test
add
fs
add
sahf
add
adc
xor
ss
fiadd
ror
dec
fbld
inc
adc
inc
jecxz
(bad)
sub
and
add
cmc
icebp
push
ja
jmp
add
jo
loopne
xchg
cli
sahf
fidiv
push
imul
in
enter
into
add
ds
mov
ins
ret
lds
jmp
add
enter
aam
ss
jbe
ret
and
repz
mov
in
test
test
les
test
ror
(bad)
push
push
in
idiv
mov
in
or
and
jp
pop
xchg
xor
cmp
jns
sbb
loope
cmp
cmp
jae
and
cs
retf
dec
hlt
ret
dec
je
mov
outs
jnp
dec
dec
das
sub
sub
out
arpl
mov
ja
ret
fcomp
lods
repz
retf
(bad)
call
loop
retf
test
add
adc
dec
push
jno
repnz
jle
add
daa
mov
xchg
lea
das
ss
jbe
int
pop
sub
movaps
icebp
fsub
jmp
leave
in
es
fs
data16
xor
inc
or
jae
add
pop
enter
in
shr
ret
and
ins
ret
or
sub
and
in
cmp
ret
mov
cmps
sub
xchg
or
sub
ds
add
xchg
dec
pop
popw
add
xor
lds
inc
inc
push
inc
mov
dec
push
and
cmp
mov
scas
int
hlt
and
add
cmp
rol
pop
xchg
dec
sub
add
inc
mov
push
push
pop
ins
lods
or
mov
sbb
ds
dec
call
adc
aam
enter
add
add
adc
leave
rol
mov
and
jo
in
push
daa
mov
add
in
jmp
out
nop
or
out
retf
adc
push
push
fadd
xor
es
fdiv
xlat
add
(bad)
add
mov
add
jne
fs
add
jmp
in
rcl
jmp
push
jmp
mov
pop
pop
push
mov
push
add
outs
cwde
xchg
aam
cmp
jno
inc
nop
sub
add
test
fs
stos
add
pop
imul
gs
aam
xchg
int3
push
lods
aas
xchg
adc
sbb
push
lods
mov
xchg
xchg
rol
ret
ins
push
add
xchg
jl
imul
mov
sbb
(bad)
xor
xchg
or
test
rol
sbb
push
pop
aaa
dec
or
aas
test
mov
mov
rol
xchg
pop
pushf
ss
sub
or
pushf
into
jl
nop
dec
dec
inc
bound
sub
push
and
push
dec
mov
add
push
add
adc
js
push
sub
inc
sahf
daa
in
mov
inc
(bad)
sbb
mov
ins
sub
outs
pop
movs
inc
sbb
pusha
and
outs
loopne
movs
adc
xchg
(bad)
dec
or
add
dec
push
or
int
push
fadd
jb
jae
and
loop
cmp
pop
cs
add
mov
js
imul
(bad)
shr
or
test
adc
jg
mov
adc
vaddpd
add
out
sbb
inc
imul
call
add
or
jecxz
push
retf
inc
add
push
retf
mov
scas
dec
pusha
or
in
mov
call
jp
aam
inc
loope
adc
aad
lods
add
in
cmps
sar
inc
das
ins
push
or
xchg
cmps
fs
test
push
cwde
fisubr
out
cmp
dec
xor
pop
add
mov
push
or
test
pop
jecxz
fdivr
stos
mov
std
shl
fwait
cmc
ucomiss
out
fld
sbb
outs
scas
pop
jmp
cmp
sub
sbb
sub
add
outs
jmp
sbb
imul
add
jne
movq
das
push
js
xchg
mov
and
movs
mov
into
cmps
inc
mov
popf
xor
inc
xchg
int
outs
push
push
je
inc
(bad)
out
jg
cmps
inc
ds
out
adc
dec
or
inc
jg
ins
push
(bad)
or
and
xchg
cmp
pop
(bad)
push
out
sub
out
inc
lock
shl
push
inc
or
dec
add
lock
mov
xchg
push
jbe
test
xor
nop
das
jbe
and
lea
add
imul
add
in
aad
loop
pop
scas
adc
pop
mov
mov
dec
ins
fld
or
popf
pop
xchg
(bad)
dec
and
daa
fsubrp
sbb
test
stos
push
adc
adc
mov
inc
imul
or
in
das
out
(bad)
add
and
and
and
int
scas
jae
mov
pop
inc
ror
xor
add
in
inc
xchg
call
sbb
sbb
repnz
inc
aad
mov
add
pusha
test
repnz
xchg
adc
dec
(bad)
shl
add
mov
push
mov
add
enter
mov
push
repz
dec
cmc
mov
fnstcw
int3
lock
jns
or
fcom
scas
cmp
mov
adc
xor
pop
daa
mov
aam
hlt
fisttp
mov
js
and
push
adc
jb
(bad)
adc
daa
rol
mov
(bad)
inc
dec
sub
adc
sub
(bad)
dec
cmc
sbb
jbe
shl
dec
cmc
aaa
lock
adc
shl
or
or
dec
adc
fmul
push
mov
mov
pop
mov
cmp
aam
lahf
idiv
push
cmps
clc
push
test
and
and
neg
repz
fmul
cmp
dec
add
xor
add
ret
(bad)
jl
push
sub
push
mov
cmp
pop
cmp
push
push
or
pop
push
or
fsubrp
sbb
es
das
test
and
push
and
push
jl
or
pop
jle
or
add
imul
or
xor
mov
imul
pushf
mov
cmc
fcmovne
test
sub
ins
setnp
push
push
imul
dec
adc
stc
je
jbe
mov
dec
add
sar
xchg
fstp
mov
mov
add
or
add
inc
dec
lea
fcomp
shl
inc
mov
adc
test
daa
bound
js
add
pop
fsub
sbb
in
cmp
or
aad
fcomp
sbb
adc
xchg
cmp
out
adc
cli
pop
xchg
out
stc
adc
pop
leave
jmp
or
or
test
fs
xor
dec
ss
int
dec
pushf
mov
fist
adc
xchg
cli
add
inc
cmp
fiadd
fild
mov
add
cli
adc
imul
bound
mov
sti
ret
addr16
outs
sti
int
hlt
sti
push
leave
or
or
stos
pop
dec
fst
sbb
xchg
pop
test
out
or
xor
jge
xchg
or
inc
mov
mov
add
imul
sub
inc
mov
pop
outs
and
inc
sub
add
inc
push
(bad)
aas
xor
jns
sbb
dec
cmp
or
jg
push
adc
bound
cmp
leave
in
or
or
add
nop
adc
cmp
and
push
nop
add
push
add
xchg
sub
push
iretw
sar
inc
mov
dec
fcomip
cmp
dec
or
jo
mov
aam
jae
les
xchg
cmp
jne
cmc
popf
xchg
es
cmp
outs
inc
push
push
sbb
int
stc
xor
or
je
adc
repz
cwde
movs
and
aas
ret
dec
mov
cs
ret
mov
mov
mov
inc
jmp
xor
xor
inc
pop
ins
lsl
cmps
stc
jb
mov
inc
push
add
sub
or
sub
or
jae
adc
push
sbb
mov
mov
in
(bad)
or
sub
ror
dec
jmp
xchg
movs
or
pop
adc
addr16
ins
sbb
inc
or
and
jo
arpl
arpl
mov
add
sbb
xor
fwait
push
jge
mov
jl
mov
ins
dec
jl
adc
or
(bad)
fsubr
adc
ja
and
push
shl
jno
int3
leave
mov
push
iret
cmc
jnp
mov
jbe
outs
add
or
lock
dec
(bad)
jmp
mov
and
add
cmp
jl
ins
(bad)
lock
mov
and
jne
(bad)
inc
jo
or
movs
ret
dec
and
call
jp
add
sub
cwde
and
xor
inc
push
sub
sbb
push
imul
mov
cmc
pop
or
sub
data16
or
sbb
and
stos
sub
int3
add
xchg
stc
pop
mov
dec
aam
out
mov
dec
lds
dec
movs
je
jecxz
jno
pop
jns
dec
aad
jae
push
jcxz
loope
aam
mov
add
paddusw
mov
sub
bound
push
add
pop
jmp
add
fbld
or
add
pop
and
shr
xor
lods
pop
fisubr
and
fsub
adc
je
scas
scas
ss
or
jbe
(bad)
out
pop
push
cmp
call
add
das
das
push
xor
and
dec
call
das
inc
jle
or
hlt
mov
or
out
mov
mov
inc
sqrtss
popa
fstp
ror
bnd
jnp
add
rol
fist
adc
pop
inc
sub
xor
lods
add
mov
dec
or
add
xor
lea
stc
or
(bad)
push
mov
mov
push
add
jno
das
pop
add
sti
jmp
fcomi
popa
loopne
in
or
daa
sub
xchg
cmp
adc
mov
push
jbe
(bad)
mov
repnz
outs
je
pop
dec
xor
pop
xor
rdpmc
xor
or
jge
jbe
aaa
pushf
or
icebp
aam
or
jbe
not
add
pop
and
imul
xchg
xor
mov
outs
mov
push
iret
dec
ja
xchg
cmp
loopne
inc
int
lock
jo
das
add
jb
jo
xchg
add
push
or
xor
xor
xchg
or
xor
ins
mov
xchg
outs
and
add
mov
xor
cmp
mov
les
pop
sub
inc
sbb
push
js
out
dec
sub
xchg
out
int
xchg
pop
sub
fcmovnu
inc
and
jo
pop
pop
scas
xchg
xchg
sbb
add
dec
call
stc
mov
nop
adc
push
xor
pop
sbb
inc
(bad)
int
push
adc
clc
dec
add
(bad)
push
or
loopne
or
jecxz
movs
cmp
sub
xor
ret
mov
iret
test
daa
add
fdiv
stos
and
add
xchg
(bad)
jnp
dec
or
adc
outs
fs
loopne
cmp
jno
push
outs
outs
je
sbb
dec
and
sbb
les
and
fnstenv
outs
add
cld
add
add
aad
mov
retf
or
ss
in
add
inc
pop
nop
inc
daa
push
or
fmul
pusha
ror
pop
pop
out
pusha
ins
and
pop
jb
test
les
das
xchg
or
push
xchg
xor
sbb
add
sub
or
inc
arpl
add
outs
jae
inc
ins
and
and
sahf
(bad)
js
rcl
dec
dec
(bad)
out
ins
pop
ins
dec
mov
or
ror
jne
push
mov
pop
sbb
retf
add
and
mov
sbb
jbe
mov
add
add
xchg
push
loop
in
inc
repnz
add
mov
dec
inc
and
pusha
aam
adc
push
sub
push
inc
mov
imul
and
clc
fild
add
dec
mov
and
add
cs
sub
jae
add
sub
sahf
imul
xchg
add
lds
into
lods
cmp
sbb
and
sti
xor
out
inc
xor
mov
imul
or
or
add
js
cmp
push
push
jmp
add
and
pusha
outs
popa
shl
jecxz
inc
xor
enter
jnp
add
inc
cmp
mov
xor
xor
pop
mov
adc
cmp
adc
push
jb
cs
xchg
dec
sub
lahf
stc
out
pop
dec
inc
push
sbb
jae
and
aaa
xor
fst
ins
leave
mov
or
mov
add
xchg
push
add
addr16
loop
sbb
pop
sti
cdq
jl
pop
adc
xchg
out
js
sbb
add
cmp
mov
push
rcl
aad
mov
push
pusha
inc
jb
pusha
in
or
adc
aas
(bad)
mov
cmp
adc
imul
lea
xlat
sbb
rol
(bad)
adc
nop
pop
data16
inc
xsaves
nop
and
cmps
add
mov
mov
and
dec
sbb
push
mov
adc
xor
cmp
in
adc
add
cmp
js
inc
jg
jnp
movs
push
inc
je
push
push
adc
jle
jb
in
inc
add
aaa
fwait
int
movs
jmp
in
test
inc
mov
hlt
fs
push
push
pop
cmp
dec
daa
das
cmps
add
loop
adc
and
xor
sub
es
xor
and
xor
push
in
je
push
sar
(bad)
outs
lea
imul
xor
dec
or
xor
push
adc
mov
push
aaa
pushf
pop
adc
cmp
push
pusha
or
(bad)
jns
inc
pusha
(bad)
push
outs
adc
inc
jo
mov
into
adc
mov
js
aad
cmp
leave
sahf
mov
cmp
and
mov
sbb
pop
mov
push
sub
outs
aad
xlat
adc
jge
add
addr16
lods
adc
push
inc
addr16
pop
add
das
sub
pop
add
andnps
mov
sbb
inc
imul
pushf
xchg
fstp
sbb
dec
dec
dec
lahf
leave
repz
sbb
daa
daa
and
cmps
iret
aas
and
cld
daa
sbb
mov
pop
mov
fist
sbb
daa
daa
daa
daa
jg
ficom
cmp
add
pop
aad
inc
sbb
xchg
jl
jbe
ins
jae
cmp
or
xor
add
push
bound
inc
inc
add
fwait
movs
jmp
dec
jmp
inc
and
das
fwait
and
or
pop
inc
xchg
sub
out
or
mov
pop
shr
movs
mov
push
pop
lods
js
addr16
add
lock
add
out
xor
mov
es
retf
and
or
dec
sbb
dec
dec
sub
inc
sub
add
or
sub
cmp
repnz
push
pusha
inc
adc
or
add
add
gs
not
sub
mov
xchg
inc
add
stos
lea
push
adc
jmp
and
or
ret
in
cli
mov
jns
(bad)
fisub
sti
jmp
imul
push
mov
cli
mov
push
mov
pusha
sti
enter
cdq
mov
adc
pop
xchg
pop
mov
fidiv
mov
cmp
(bad)
pop
fdiv
inc
sbb
xchg
lds
in
call
aas
pop
call
test
push
dec
sub
jmp
in
stos
popf
push
out
mov
nop
ja
pop
or
sbb
adc
adc
jo
push
xchg
std
mov
cmp
inc
jge
shl
cmps
inc
inc
pop
mov
pop
pop
inc
hlt
xor
rol
ret
lds
inc
xor
jl
mov
or
and
add
pop
imul
lods
sub
push
pop
pop
sub
iret
imul
rol
or
mov
mov
cmovne
or
lahf
ss
sbb
push
cs
pop
nop
rcl
adc
add
push
sbb
adc
imul
pop
test
push
pop
(bad)
aam
mov
pop
push
leave
jb
stos
cld
or
add
sbb
xor
xor
dec
outs
sahf
ret
cmp
in
sbb
inc
je
add
imul
and
jg
sub
xor
and
cmp
mov
pop
adc
mov
and
mov
inc
jnp
cmp
(bad)
mov
or
xchg
pop
pop
shl
adc
or
cmp
aad
(bad)
(bad)
push
or
psllw
jnp
jmp
pop
adc
pop
jo
push
inc
or
mov
mov
pop
js
or
pop
cmp
adc
xchg
sub
and
jmp
jo
or
inc
or
adc
ret
xor
ins
push
pop
ds
dec
int
jb
jge
fistp
pop
dec
xchg
jbe
repz
cwde
and
sub
fist
inc
xchg
inc
xchg
imul
div
movs
inc
movs
or
inc
push
fldenv
mov
push
js
mov
test
pop
jb
inc
add
daa
inc
and
dec
sbb
ds
push
adc
mov
mov
imul
rcl
push
es
or
ret
push
mov
xchg
xor
mov
mov
por
or
xor
inc
daa
cmp
cmp
inc
das
out
mov
and
stc
inc
adc
and
mov
xchg
xchg
xchg
mov
rdmsr
and
enter
es
in
in
call
jb
repnz
or
inc
jae
jns
jb
loopne
sub
cmp
cmp
loopne
mov
out
cmp
(bad)
sub
inc
cmps
add
je
sbb
das
xchg
inc
je
nop
sbb
add
inc
sub
and
movs
jo
and
outs
dec
add
cmp
dec
push
or
add
imul
and
je
dec
sbb
stos
aaa
je
jnp
inc
or
aas
js
fadd
cmp
sbb
test
and
add
stos
add
inc
mov
pop
movs
jmp
mov
add
mov
dec
sub
sahf
or
and
and
adc
xchg
not
imul
pop
and
xchg
outs
jae
mov
ins
rcl
xchg
inc
mov
sbb
jno
bound
adc
ja
ror
sub
in
sbb
mov
cld
inc
push
es
inc
mov
dec
and
add
sub
pop
sub
sbb
je
rol
test
add
in
or
push
das
sub
sub
(bad)
sub
sub
and
gs
rol
(bad)
pop
gs
push
les
adc
pop
sub
xor
inc
mov
mov
js
lea
pop
or
cmc
add
test
ja
pop
shl
inc
add
jne
jae
mov
xlat
fs
and
push
nop
add
and
jb
jne
shl
mov
sub
shl
add
sub
or
mov
leave
inc
add
js
sbb
sbb
or
or
aas
push
inc
xchg
test
fld
adc
inc
and
push
sub
mov
xchg
fild
(bad)
sub
adc
mov
adc
fsubr
jno
pop
sbb
adc
(bad)
sbb
xor
sub
push
and
mov
push
jnp
pop
cmp
cmp
xor
adc
outs
jl
sub
adc
fs
inc
jg
cmp
add
fld
push
xor
jb
ss
ja
cmp
je
dec
mov
ins
and
add
jb
push
add
and
adc
or
inc
push
add
and
adc
push
pop
js
out
push
sbb
push
sub
xchg
(bad)
dec
add
dec
adc
xchg
sub
xchg
lock
cmp
xor
pop
add
inc
ds
lods
xor
cmps
adc
inc
mov
sbb
addr16
xchg
enter
fimul
add
add
icebp
data16
ror
inc
iret
imul
inc
inc
fmul
push
sbb
(bad)
dec
int3
sub
fisub
rcl
pop
jg
fnsave
or
xchg
mov
push
jne
jo
aaa
or
push
popa
es
mov
aaa
xor
sub
xchg
inc
gs
(bad)
pop
sbb
aaa
mov
dec
imul
push
add
mov
das
mov
imul
xor
add
sub
out
cmp
imul
sbb
fdiv
dec
pop
jp
hlt
cmp
inc
jmp
stc
call
xor
bndstx
out
cmp
inc
imul
mov
sbb
popa
mov
leave
leave
mov
shld
xor
xchg
mov
or
es
dec
inc
inc
int3
xor
pop
aas
add
dec
add
movaps
inc
dec
inc
jg
cmp
push
xor
inc
outs
push
jns
outs
clc
jae
ror
or
add
repnz
jmp
pusha
mov
repnz
inc
xlat
scas
mov
push
dec
push
pop
js
bound
add
cmp
out
mov
jecxz
sub
lods
xchg
sub
mov
and
rcl
inc
or
and
in
arpl
ret
test
lods
mov
push
dec
and
pop
jmp
ror
jp
ret
in
(bad)
push
sbb
lds
inc
sub
sti
adc
push
dec
adc
adc
adc
cmc
jae
in
sbb
mov
nop
push
aam
movs
and
ins
or
mov
mov
call
sub
clc
push
adc
test
or
mov
adc
or
and
push
inc
add
pop
push
inc
rcl
adc
jmp
shl
xor
push
add
inc
arpl
sbb
lock
xor
in
dec
pop
inc
clc
sbb
add
mov
in
dec
or
pop
fstp
cmp
frndint
push
sub
jo
pop
cmps
inc
mov
outs
fld
add
pop
sub
popf
jo
dec
sub
pop
inc
dec
pushf
mov
call
aas
or
add
bound
mov
adc
mov
test
xchg
xor
sbb
push
add
or
test
adc
(bad)
xlat
lock
dec
mov
in
shr
aam
inc
push
adc
or
or
or
mov
pop
mov
sub
add
fistp
inc
daa
adc
pop
xor
repnz
int3
pop
add
xor
sub
movs
ret
inc
cmp
mov
repz
inc
stos
push
adc
test
push
cmp
les
xchg
dec
dec
xchg
aam
mov
push
jg
pusha
and
lds
sub
jnp
iret
add
push
mov
add
push
pop
dec
outs
pop
dec
inc
ins
sbb
call
cmp
adc
cmp
add
outs
or
jo
and
out
mov
add
movs
add
jl
mov
or
and
arpl
enter
fcom
push
gs
pop
int3
cmp
or
sbb
xchg
jns
sub
add
das
adc
sub
dec
test
and
popa
lahf
(bad)
retf
or
pushf
mov
sub
inc
adc
sahf
push
movq
mov
xlat
(bad)
mov
or
add
push
(bad)
fwait
cmps
inc
mov
clc
sbb
xor
bound
pop
xor
(bad)
test
dec
inc
and
cli
inc
cmp
cmp
add
mov
nop
push
ins
in
daa
or
dec
popa
sub
ja
outs
and
es
adc
fwait
dec
jno
cmps
jecxz
adc
out
push
nop
mov
dec
bound
jmp
test
jae
push
xor
mov
jecxz
fwait
xchg
in
xchg
push
mov
mov
or
cli
(bad)
jg
mov
add
pop
cmp
stos
push
adc
sub
add
sub
dec
cmp
ror
push
push
xor
scas
or
add
jl
dec
fwait
add
cmp
inc
prefetch
cmp
push
ja
dec
es
dec
jb
cmps
out
sbb
adc
add
popf
hlt
sbb
cmp
imul
les
popa
je
xchg
sti
mov
inc
dec
mov
pop
enter
js
push
add
add
or
or
inc
test
ja
inc
mov
inc
in
jecxz
sbb
shr
mov
add
push
inc
push
mov
and
jb
jns
stc
dec
je
ds
out
add
ja
jns
dec
aas
pop
aas
xchg
aas
fimul
(bad)
in
add
inc
inc
or
es
pusha
mov
push
js
ret
ret
lds
xchg
ss
or
adc
lock
or
imul
mov
add
mov
mov
mov
dec
int
xchg
aaa
or
and
push
shl
(bad)
push
add
cmp
sub
cmp
dec
out
mov
push
dec
pop
push
cmp
xchg
lahf
(bad)
int
inc
add
xchg
adc
inc
cmp
xchg
int
fisubr
mov
jne
mov
mov
mov
or
adc
dec
jmp
jne
mov
movs
mov
and
pusha
inc
test
lahf
lea
popa
stos
jmp
fwait
xlat
pop
xor
stos
addr16
scas
add
fimul
xor
cs
int3
adc
retf
and
rol
int3
int3
repz
mov
add
out
push
loope
jmp
hlt
test
stc
add
mov
pusha
js
adc
xor
test
ss
cmps
jnp
pop
cs
es
ror
cmp
inc
jbe
push
sbb
inc
aam
loopne
xor
nop
pop
jns
pop
pusha
imul
mov
in
pop
inc
in
fwait
dec
sti
sahf
cs
hlt
push
mov
addr16
cmp
add
ss
nop
imul
outs
or
inc
mov
xchg
xor
mov
push
test
fnstcw
mov
or
outs
adc
pop
xlat
sbb
sbb
sbb
pusha
test
test
dec
cmp
push
cmp
add
mov
leave
jnp
movs
xchg
sub
sub
adc
fdivr
stc
add
and
inc
ret
cwde
inc
jnp
sub
cli
dec
inc
ret
(bad)
inc
push
sahf
fadd
push
add
jmp
popf
psraw
inc
jg
dec
inc
pop
test
repnz
daa
mov
das
icebp
call
dec
aas
pop
setl
fisttp
push
cmp
ds
push
call
das
mov
add
add
xchg
es
push
dec
stc
jmp
push
push
push
ss
cmp
data16
ret
push
xchg
mov
lock
fmul
mov
sbb
push
test
ss
adc
and
dec
lock
aas
dec
imul
add
pop
inc
popa
jo
and
popa
(bad)
(bad)
(bad)
out
add
or
jo
or
and
cmp
jne
jbe
fild
dec
jge
popa
sub
inc
test
dec
leave
inc
adc
mov
or
jns
push
mov
push
jo
push
das
xor
test
lock
shl
push
pop
sahf
fadd
sar
fimul
mov
push
pop
xchg
(bad)
std
mov
and
sbb
in
or
inc
dec
inc
int3
ret
sub
lods
enter
and
sub
pop
push
mov
nop
call
ins
test
pop
out
test
inc
popf
dec
inc
add
jnp
test
push
loopne
push
dec
mov
pop
xchg
aas
imul
inc
dec
inc
dec
jmp
call
cmp
adc
(bad)
jae
(bad)
push
fld
data16
test
push
fisttp
dec
xchg
jb
mov
test
push
or
cmp
dec
(bad)
stos
push
outs
inc
and
pop
and
aaa
push
or
adc
gs
push
and
add
add
xchg
push
(bad)
sti
xor
enter
cli
retf
in
in
dec
inc
add
mov
inc
inc
or
fisub
sbb
fisttp
push
in
or
lds
in
add
dec
cld
je
and
push
add
fs
push
loope
test
adc
in
mov
test
push
stos
hlt
sbb
es
arpl
dec
adc
loopne
or
mov
inc
dec
adc
in
rcl
add
push
loopne
adc
mov
push
sbb
test
fbstp
adc
mov
fnstcw
repz
rcl
and
es
or
lods
cli
xchg
lods
sub
sub
dec
loop
add
movs
fst
loopne
mov
push
inc
jo
retf
imul
je
mov
jg
out
sub
imul
ror
outs
push
sub
retf
mov
xchg
or
inc
sub
jnp
rcr
lods
pop
adc
jp
lods
sbb
dec
outs
dec
popf
add
nop
out
shr
or
jle
push
in
dec
add
inc
lea
mov
dec
push
sbb
je
mov
ins
xor
inc
ins
into
repz
push
dec
fcomp
or
loopne
leave
(bad)
in
push
add
xor
ins
test
or
lea
(bad)
sbb
fisub
jge
or
pop
push
mov
push
push
jl
into
lahf
icebp
retf
pop
mov
adc
xor
lock
cmp
addr16
push
sahf
jge
test
ret
call
ss
(bad)
sub
xchg
pushf
add
ins
sar
bound
fsubr
jecxz
pop
jae
les
mov
and
enter
cmc
or
ja
fisubr
jns
add
loopne
pusha
adc
jecxz
mov
stos
sbb
or
pop
sbb
jae
push
pop
adc
inc
call
jp
push
outs
jg
sub
mov
mov
and
mov
jmp
or
xchg
add
inc
sbb
(bad)
out
rcl
or
push
push
and
dec
adc
xor
pop
nop
pop
cmp
push
movs
dec
sbb
push
(bad)
div
xchg
cmc
inc
pop
push
js
nop
ja
jns
sbb
jae
jbe
je
sub
aaa
fs
xchg
aam
sub
dec
imul
dec
je
sub
std
xor
xchg
mov
mov
and
push
imul
es
inc
pop
rdmsr
movs
push
sub
pushf
push
retf
push
cmps
cld
push
lahf
mov
movs
scas
push
add
loopne
add
jecxz
fimul
xor
fnstenv
mov
mov
mov
pop
leave
xor
add
imul
movs
mov
or
adc
mov
pushf
jmp
ins
jns
js
mov
dec
and
mov
add
xor
mov
popa
mov
sub
pop
add
jmp
mov
or
mov
les
and
test
imul
add
test
add
inc
adc
(bad)
retf
or
es
or
sbb
pop
mov
adc
push
sbb
push
inc
mov
outs
push
call
ins
xor
bsf
xchg
push
outs
fs
dec
popa
jo
mov
sbb
cmp
or
sahf
adc
or
sar
xor
sbb
fs
test
mov
cmp
push
outs
lahf
outs
ins
fiadd
push
add
inc
mov
les
adc
push
(bad)
mov
dec
fst
or
sub
ret
and
pop
in
inc
add
inc
pop
and
hlt
stos
in
pop
adc
push
rcl
xchg
and
xlat
add
adc
ja
jne
jbe
and
in
inc
loopne
aam
gs
ds
adc
and
dec
lds
or
or
outs
and
movs
mov
mov
mov
pop
mov
mov
mov
xor
or
add
sbb
or
jmp
movs
mov
ins
jmp
inc
call
sub
das
jmp
fwait
les
pop
xor
sbb
adc
mov
or
jecxz
rcl
dec
pop
add
mov
retf
ins
div
add
movs
adc
push
or
xchg
ins
loopne
or
pop
repnz
and
rol
stc
add
inc
pop
inc
push
daa
cmp
adc
js
push
test
jl
add
mov
loopne
hlt
fild
iret
adc
xor
xlat
mov
scas
and
pop
(bad)
fadd
cmp
pop
inc
das
bound
or
push
jmp
jp
pushf
mov
pop
pop
mov
pop
sahf
pushf
sti
push
pop
mov
xchg
in
add
jge
outs
jecxz
sub
dec
test
xchg
or
sbb
sbb
or
push
or
xor
jbe
outs
jb
add
or
pop
and
in
ins
lahf
inc
(bad)
or
cmps
gs
push
scas
dec
ins
mov
(bad)
pop
add
test
ins
add
and
(bad)
jg
jae
push
cwde
test
add
clc
push
and
or
or
je
mov
xor
addr16
mov
mov
cmp
aas
shl
or
test
jmp
call
mov
ret
add
fsubr
(bad)
nop
jge
or
jg
es
xor
lahf
mov
js
jne
aam
icebp
call
test
inc
daa
dec
pusha
cmps
sub
adc
mov
or
movs
xchg
pop
adc
dec
jle
sub
inc
ins
imul
or
sub
aaa
jle
addr16
push
mov
retf
leave
repz
neg
popa
push
inc
jb
inc
stos
in
in
out
bound
push
sbb
js
and
ss
add
mov
ret
mov
push
dec
pop
add
ss
fcompp
or
push
inc
mov
sub
xor
popf
fcomp
add
dec
mov
shr
test
outs
add
sub
inc
push
arpl
add
sub
lock
add
dec
adc
push
adc
or
inc
adc
ins
js
sub
popa
inc
and
sub
or
not
test
add
and
add
in
inc
inc
add
jl
adc
arpl
xor
loop
mov
popa
adc
inc
jne
add
push
arpl
jne
(bad)
iret
je
daa
xchg
add
add
adc
imul
or
jmp
cmp
pcmpeqb
ss
push
and
iret
inc
xchg
psubusw
daa
daa
sahf
ret
daa
daa
daa
mov
jp
or
scas
push
xchg
pop
aam
outs
inc
jo
mov
jmp
adc
cmp
or
popf
add
sub
cmp
outs
add
outs
mov
pop
add
jo
cmp
lock
adc
cdq
push
and
cmps
or
jo
add
jno
jno
add
dec
jg
inc
leave
push
xchg
mov
xchg
pushf
inc
into
mov
je
jo
repnz
mov
push
lods
jno
sub
in
jb
daa
adc
or
or
loop
jb
leave
and
jo
leave
add
push
mov
rcr
test
and
mov
push
pop
fs
pop
xor
in
pop
xlat
xor
mov
add
cmp
ja
or
add
xlat
bound
movs
movs
jb
jo
dec
xor
les
push
or
sahf
pusha
loopne
add
retf
mov
xchg
add
xlat
out
inc
neg
(bad)
call
inc
neg
stc
ds
push
inc
sub
mov
jne
popa
jmp
or
sti
xor
sbb
outs
jmp
push
(bad)
(bad)
dec
pop
push
xchg
jl
xchg
mov
(bad)
fbld
nop
xchg
or
in
add
movs
daa
xchg
cmp
cmp
jp
in
or
and
adc
and
or
js
xchg
shl
dec
pmuludq
dec
push
xor
or
push
pop
aaa
je
leave
sbb
fiadd
pop
jae
ja
(bad)
sub
sbb
and
xchg
add
movs
pop
bswap
inc
mov
in
mov
pop
adc
cwde
ret
and
ret
and
gs
xchg
inc
mov
and
shufps
adc
fnop
stc
loopne
pop
or
mov
jae
sbb
sahf
loopne
xor
mov
mov
clc
fcmove
call
or
btr
imul
adc
push
add
inc
enter
fadd
push
inc
and
(bad)
fld
jno
shr
jne
xchg
jo
add
dec
xchg
inc
(bad)
hlt
movs
lock
ins
inc
inc
pop
add
inc
add
xor
sub
and
fwait
out
mov
retf
hlt
fwait
les
test
sub
fild
sub
mov
and
repz
inc
add
cmc
inc
ins
adc
dec
aaa
shl
xchg
les
(bad)
(bad)
mov
lods
mov
xchg
sub
mov
jmp
xchg
xlat
cwde
push
fisubr
sbb
cmp
or
dec
dec
or
enter
add
dec
(bad)
sahf
inc
fs
jne
sbb
pop
inc
wbinvd
loop
jne
inc
ss
pop
push
hlt
mov
std
dec
add
js
add
mov
dec
ret
or
sbb
push
cmp
pop
ins
and
cmps
mov
mov
sbb
ret
or
cmp
sub
test
adc
dec
adc
pop
rol
add
int3
dec
or
or
cmp
pop
inc
add
scas
add
ss
and
pop
pop
xchg
cmp
or
jmp
xlat
push
push
scas
jle
lahf
add
pop
inc
inc
pop
loope
or
inc
or
fld
push
scas
je
inc
adc
xor
sbb
and
sbb
call
mov
ret
pop
xor
inc
adc
jne
ficom
push
push
xor
pop
xlat
data16
rol
adc
adc
mov
or
js
xchg
pop
inc
pop
test
fiadd
out
xchg
sub
shufps
add
arpl
adc
pop
arpl
and
cmp
or
in
and
push
imul
mov
pusha
out
mov
aad
rcl
cmp
jno
inc
mov
fdivp
dec
xchg
movs
out
add
sbb
mov
or
nop
outs
pop
repz
xchg
pop
prefetch
or
aas
or
inc
test
inc
outs
sub
fiadd
add
lock
mov
xchg
test
jo
out
inc
outs
and
test
sub
or
or
hlt
ins
enter
xor
js
outs
sub
pop
push
sbb
or
cdq
or
fsub
inc
cmp
dec
int3
xchg
stos
call
or
cmp
je
psubsb
xor
cmp
popa
inc
mov
stc
mov
mov
je
ss
or
dec
xor
cmps
aam
add
dec
cmp
mov
xor
icebp
mov
push
aad
cmp
mov
pop
or
sbb
jecxz
cmp
daa
xchg
sbb
aad
sub
aaa
test
inc
cmps
jge
push
add
out
inc
jae
jge
and
int
shr
in
cmp
push
sub
imul
pop
or
test
sbb
clc
sbb
in
imul
pop
cmp
pop
retf
scas
push
(bad)
loop
pop
dec
jle
cmc
movs
xchg
xchg
mov
rcl
inc
add
inc
mov
push
adc
jae
xchg
pop
inc
xor
add
adc
fmul
add
or
bound
cdq
rcl
sbb
cmp
sub
out
push
push
or
fidiv
inc
or
dec
js
das
out
les
sbb
imul
mov
add
js
cmp
popa
pop
adc
jmp
xor
movs
adc
pop
pushf
or
dec
add
jne
or
sbb
nop
xlat
and
out
add
and
js
or
inc
mov
or
ficom
loop
xchg
out
scas
and
mov
add
cmp
pop
enter
and
jmp
mov
inc
xlat
mov
clc
sub
gs
adc
sbb
aad
ins
inc
paddsw
cmps
sbb
sbb
sbb
out
or
sahf
scas
cmp
jbe
push
test
pop
jbe
push
adc
shl
je
pop
ins
or
fcom
pushf
xchg
ja
in
sub
push
add
movs
jbe
inc
dec
fwait
into
test
add
or
fild
aad
cld
or
cmps
mov
ja
mov
idiv
daa
xchg
lock
das
xchg
push
adc
icebp
int3
nop
imul
xchg
outs
enter
mov
inc
or
repnz
inc
or
and
and
js
ss
nop
lock
test
cmp
pop
sub
outs
or
stos
jb
inc
sti
add
stc
mov
or
test
daa
pop
out
cmp
mov
je
shr
sbb
dec
cmp
or
and
mov
in
test
in
mov
xor
sbb
jge
xorps
shl
jle
hlt
or
pop
and
jg
ds
lods
stos
jne
pop
or
and
pop
fbld
js
ins
xchg
(bad)
jno
popa
xchg
test
or
movs
push
jb
pop
mov
or
es
cmp
sub
or
retf
push
(bad)
pop
inc
mov
sahf
or
mov
adc
mov
inc
shr
add
push
call
inc
mov
sbb
dec
or
cs
stos
dec
cwde
pop
int3
test
jl
inc
adc
push
adc
mov
ins
retf
dec
jne
sub
sub
adc
push
pop
add
or
ja
imul
adc
pop
shr
js
cs
xor
out
or
test
mov
mov
mov
pop
push
(bad)
call
hlt
bound
dec
and
out
sub
test
outs
cmp
xchg
mov
push
xchg
sbb
rcr
mov
fisttp
iret
je
setg
push
xor
push
out
pop
cmp
inc
int
je
enter
(bad)
and
cmp
dec
mov
iret
cmp
hlt
addr16
imul
dec
sbb
fwait
(bad)
adc
sbb
ret
push
fdivr
mov
sbb
retf
sub
fdivr
jg
mov
pop
rcl
shr
inc
dec
jne
pop
cmp
push
push
xor
je
cli
fwait
push
hlt
lock
mov
push
or
loope
movs
retf
adc
sbb
ins
arpl
adc
cmp
cmp
mov
sbb
test
lock
loope
xor
call
cmp
sub
(bad)
cmps
loopne
imul
bnd
ret
pop
aas
jle
jle
add
sub
mov
repnz
jle
sbb
and
adc
cld
or
cmp
push
mul
and
aam
(bad)
mov
adc
out
push
jae
push
ins
sub
(bad)
imul
cmp
push
jo
je
test
imul
xchg
enter
inc
add
inc
test
jne
clc
rcr
and
jb
imul
jl
dec
leave
jo
xlat
push
inc
daa
sub
xor
push
lods
test
sbb
outs
hlt
push
mov
and
cmp
fnstsw
sar
and
enter
inc
jge
inc
jge
mov
or
hlt
pusha
std
jo
and
xor
push
push
aam
and
and
cmps
fsubrp
nop
mov
ins
pop
jne
cmp
push
push
add
push
push
cmp
inc
ins
add
mov
cmp
test
retf
sbb
inc
(bad)
rcl
xchg
cmp
xor
nop
push
dec
int
mov
and
push
push
push
stos
cmp
aam
pusha
and
mov
inc
ret
(bad)
adc
adc
or
add
sbb
(bad)
or
mov
adc
push
sar
fcom
cmp
xchg
mov
lea
(bad)
mov
xchg
call
and
push
out
mov
ror
inc
daa
(bad)
push
jb
pop
adc
mov
enter
add
sub
jmp
ja
nop
inc
rcl
adc
inc
nop
loopne
lahf
jb
xlat
or
mov
jmp
inc
imul
push
fs
xchg
test
and
adc
add
adc
xor
and
pop
jnp
adc
sub
adc
mov
adc
mov
mov
mov
mov
dec
inc
ret
das
push
aaa
push
xchg
ja
mov
sbb
inc
xchg
enter
nop
jo
sub
jle
fild
xor
xor
cmps
rol
stc
add
adc
js
dec
sbb
retf
in
add
out
int3
dec
and
cmp
je
add
inc
mov
xchg
fst
mov
(bad)
pop
add
jb
push
dec
cdq
cld
mov
mov
fsubr
add
inc
xchg
movs
or
repz
outs
and
inc
jle
sti
loopne
push
(bad)
movs
push
cwde
or
aam
mov
shl
popf
ss
inc
xchg
(bad)
jmp
push
mov
aaa
and
cmp
je
(bad)
call
inc
out
test
mov
arpl
ficom
dec
and
jb
pop
mov
or
or
jl
or
ins
sub
int3
mov
push
ins
sbb
add
jbe
(bad)
sti
mov
or
pop
or
sbb
pusha
pop
test
mov
add
sub
mov
cmc
add
nop
cmp
icebp
sbb
mov
rcl
mov
mov
mov
cmp
sbb
scas
js
pushf
clc
(bad)
sub
inc
sbb
cwde
clc
ja
pop
sub
jl
mov
pop
pop
lea
(bad)
pop
jge
sbb
aas
rcl
(bad)
hlt
xor
fsub
inc
push
aaa
adc
inc
mov
cdq
or
lock
push
pop
jle
push
mov
or
dec
enter
add
or
mov
scas
xor
sub
jg
dec
fist
jne
jge
and
nop
mov
scas
add
or
cmp
cmp
mov
mov
push
dec
aaa
lea
lahf
add
test
in
scas
imul
jl
add
retf
mov
loopne
and
outs
in
cwde
not
popf
or
jo
or
jmp
mov
jmp
push
je
cmp
lea
mov
push
cdq
cmp
dec
add
fild
cmp
cmp
jle
add
into
ins
add
test
or
jl
push
jmp
xchg
mov
or
loop
cmp
push
test
push
and
ss
and
and
enter
in
xchg
aas
ins
mov
call
int
xlat
push
loope
in
pop
int
shr
adc
repnz
iret
jl
mov
cld
add
xchg
mov
jg
call
push
movs
xchg
rol
das
or
and
mov
mov
pop
aaa
sub
adc
addr16
jb
mov
xchg
das
add
mov
xor
mov
dec
jo
fucomp
retf
sbb
mov
sbb
pop
sub
fld
push
jl
mov
xchg
(bad)
adc
mul
cmps
dec
inc
or
or
dec
jg
cmp
pop
out
jns
jge
les
push
mov
add
sub
mov
xlat
or
xchg
sub
sub
imul
or
mov
nop
fbld
sbb
inc
or
xor
outs
clc
push
sti
mul
retf
add
xchg
xchg
int
jns
aas
push
jg
stc
call
inc
cwde
mov
call
inc
sti
dec
add
adc
call
sbb
inc
dec
pop
sub
pushf
jge
sbb
popa
nop
ja
mov
inc
jne
cmps
add
jmp
test
adc
mov
mov
pushf
xor
cdq
mov
mov
and
jl
iret
adc
inc
fnsave
and
pop
xchg
stos
mov
pop
ins
cmovo
popf
pop
or
xchg
ret
(bad)
fadd
loopne
lods
out
test
(bad)
xor
sbb
pop
adc
xor
pop
shr
aas
out
adc
idiv
fstp
adc
jg
movs
mov
test
sbb
inc
dec
jg
nop
mov
or
adc
inc
dec
nop
push
enter
shr
out
outs
lea
cmp
mov
inc
lock
jns
pop
or
in
nop
leave
imul
jo
jmp
pop
mov
enter
dec
es
fdivr
xchg
mov
divps
or
repz
mov
fcom
jecxz
push
sbb
sub
lods
rcl
xchg
fcmovu
pop
sbb
out
repz
mov
and
not
xor
cmp
mov
dec
and
call
sbb
add
call
push
rol
rcl
dec
and
lea
fsubr
rcl
xor
pop
pop
jg
lea
pop
dec
dec
sbb
aas
test
rcr
inc
nop
mov
push
push
pop
dec
adc
push
adc
fisttp
cdq
rol
cdq
pop
mov
xchg
dec
loope
cmps
das
pushf
test
and
or
ss
in
out
leave
scas
push
bound
(bad)
dec
ret
shl
(bad)
cmp
jns
stos
add
(bad)
pusha
or
and
ret
inc
adc
add
movs
mov
jle
pop
push
in
aad
xchg
mov
loopne
xchg
sbb
or
(bad)
fcom
dec
push
jecxz
cmps
pop
fs
inc
xor
dec
sbb
or
jle
ja
push
push
xor
jecxz
retf
and
sbb
mov
scas
jno
inc
or
mov
(bad)
sbb
add
inc
jno
push
add
in
pop
xchg
fistp
loope
mov
fdiv
nop
or
shl
mov
add
mov
jmp
lahf
xchg
inc
leave
mov
dec
mov
xchg
lahf
arpl
das
test
cwde
add
push
icebp
adc
xor
loopne
sbb
pop
xlat
mov
ja
xchg
shr
sub
cld
adc
cmp
scas
lods
inc
xchg
sbb
sbb
or
xchg
leave
aad
ret
out
loopne
and
test
popa
and
xchg
pop
dec
pop
popa
sbb
xchg
les
sbb
pop
mov
fwait
fs
mov
mov
inc
mov
cmp
gs
inc
mov
ret
mov
and
or
loop
clc
add
push
outs
pop
call
out
je
pop
xchg
and
fnstsw
adc
imul
adc
push
adc
and
test
aad
aaa
js
loopne
adc
lock
push
xor
or
leave
je
stos
adc
btr
and
sbb
xchg
push
dec
push
inc
adc
ja
push
jmp
push
jae
mov
loope
in
icebp
sbb
dec
inc
sub
idiv
xchg
mov
movs
cmp
je
sbb
mov
pop
ja
inc
je
nop
sahf
call
mov
jg
pop
cmp
aam
ret
adc
push
inc
cmp
jne
mov
jne
les
aaa
aas
fsubr
inc
xchg
inc
pop
pop
in
mov
jle
jmp
add
outs
call
rcr
or
xor
pop
push
rol
loope
pop
mov
ret
ss
mov
in
cmp
call
std
in
jnp
push
test
call
lahf
cwde
call
arpl
out
ja
retf
or
mov
push
or
adc
inc
cmps
cdq
xlat
das
ret
mov
sub
adc
xor
sub
adc
push
push
inc
adc
pop
test
aaa
jecxz
cmp
mov
mov
inc
sub
dec
daa
mov
xchg
dec
and
ret
cwde
std
movs
mov
ret
out
dec
mov
movs
add
pop
xor
es
push
popa
push
xlat
aas
add
cmps
into
or
and
clc
or
aad
adc
adc
xchg
test
ret
push
xor
psubq
sbb
je
addr16
push
shr
test
pop
and
sub
push
daa
push
nop
adc
inc
imul
push
pusha
or
fwait
bound
(bad)
test
or
adc
sbb
scas
mov
push
adc
push
add
outs
aaa
loopne
ss
popa
xchg
add
call
inc
jo
dec
and
jle
loopne
aam
pop
shl
jne
aas
sbb
or
sub
sti
ret
mov
push
pusha
paddsb
pop
pushf
add
push
test
push
or
and
and
and
sbb
stc
je
inc
jmp
scas
mov
out
xor
xor
pop
push
pop
fist
xor
or
xchg
push
xchg
xchg
pop
add
je
xor
shl
pop
dec
enter
pop
call
into
cmp
je
loop
test
sahf
add
(bad)
mov
dec
push
(bad)
mov
dec
add
icebp
rcl
or
mov
(bad)
jle
js
push
pop
fild
imul
(bad)
fimul
inc
retf
je
or
xchg
sahf
sar
sbb
aam
movs
adc
aad
rcl
and
les
(bad)
xor
lds
adc
sar
and
fwait
sahf
jmp
test
mov
leave
inc
pop
test
and
js
out
retf
and
enter
gs
call
push
push
fs
pop
test
jbe
shl
popa
push
inc
test
popf
call
xor
ret
sub
adc
rol
fwait
mov
dec
addr16
cs
lahf
mov
movs
in
cwde
not
sub
sti
and
mov
push
sbb
aaa
xchg
out
cmp
or
cmp
push
push
or
inc
mov
loopne
pop
pop
gs
ins
add
inc
pop
bound
ja
iret
icebp
and
fcomp
and
dec
or
adc
in
test
mov
arpl
inc
daa
and
dec
push
sbb
xor
test
push
clc
xor
push
sub
xchg
sti
jae
mov
add
add
sbb
sub
xor
sar
ins
int3
and
imul
and
stos
xor
cmp
push
mov
cli
hlt
or
xchg
movs
pushf
jge
rcl
sti
and
jae
dec
inc
dec
dec
rcl
outs
push
inc
jge
rcr
jne
sub
(bad)
pop
data16
fldenv
and
sbb
out
or
pop
cmps
xchg
add
inc
dec
jne
ja
mov
std
enter
stc
fcmovne
mov
daa
retf
dec
or
jmp
test
jns
stos
or
pop
push
rcl
es
mov
pop
call
and
or
mov
xchg
mov
retf
lods
add
addr16
shr
rol
je
sbb
push
push
mov
leave
retf
and
inc
push
push
imul
pop
das
cmp
pop
xor
inc
mov
enter
or
pop
aas
dec
dec
pop
lock
mov
sub
popa
(bad)
jecxz
and
push
ret
pop
ret
xchg
sub
jb
jnp
and
daa
pop
mov
push
push
xor
sub
adc
nop
test
enter
push
add
test
mov
mov
mov
push
adc
pop
add
int
cmp
or
popf
xchg
lahf
push
adc
push
mov
jp
mov
and
icebp
or
fcom
lea
test
add
add
les
and
xchg
lods
je
adc
dec
iret
or
cmp
(bad)
lock
and
pop
pop
(bad)
outs
and
or
inc
push
aas
pop
or
inc
pop
hlt
das
fld
jb
movs
xor
imul
clc
or
xchg
fmul
ficom
enter
out
mov
cmp
(bad)
mov
cmp
mov
or
nop
add
sub
(bad)
sbb
pusha
add
adc
push
in
jmp
cmps
or
clc
adc
and
or
mov
xor
pop
(bad)
(bad)
jno
cmps
loopne
popa
sub
mov
sub
les
call
pop
fcom
daa
popf
or
clc
push
movs
and
or
and
jg
jmp
or
aas
imul
inc
sbb
pop
or
adc
bound
sub
sbb
sub
xlat
dec
leave
and
cmps
dec
jl
lea
aaa
sbb
and
pop
and
mov
pop
ja
clc
dec
das
lahf
jo
daa
mov
stc
adc
div
inc
clc
(bad)
mov
inc
(bad)
jg
adc
outs
add
mov
ret
pop
pushf
xor
clc
jmp
dec
inc
jecxz
inc
call
ror
or
ins
add
loope
icebp
pop
call
push
dec
and
loopne
jne
outs
(bad)
adc
and
cmps
dec
rcr
aam
popf
or
repz
lock
call
in
pop
(bad)
or
push
in
pop
test
xchg
rol
dec
js
add
stos
sub
aas
call
retf
sub
and
sbb
push
bound
pop
nop
dec
daa
pop
call
cdq
mov
cdq
mov
mov
mov
clc
mov
xchg
xchg
lods
adc
adc
jno
xor
es
dec
mov
popa
sub
and
imul
and
push
push
add
and
lock
add
iret
push
adc
or
shl
push
jb
je
or
jno
sbb
xchg
or
(bad)
xchg
push
out
xchg
jb
adc
pop
and
pop
add
and
cs
jmp
adc
adc
sbb
mov
lods
mov
and
dec
shl
scas
dec
jae
mov
adc
mov
adc
sti
mov
push
or
fdivr
js
jl
dec
adc
(bad)
int3
mov
fsubr
jmp
lods
test
and
dec
lea
inc
aad
jmp
aaa
cdq
lods
cmp
mul
push
(bad)
loopne
jmp
push
add
pop
popf
test
lock
jge
out
test
test
mov
inc
aas
test
lods
loopne
pop
mov
es
sub
test
movs
mov
lea
jl
(bad)
sti
adc
sub
mov
mov
(bad)
outs
dec
aam
lahf
or
aam
inc
daa
bound
inc
inc
stc
ficomp
mov
popa
fs
sub
dec
push
or
xchg
pop
and
pop
inc
shl
addr16
inc
or
movs
movs
(bad)
test
mov
sub
fs
into
std
pusha
icebp
dec
test
push
push
push
and
add
jne
dec
and
adc
test
icebp
loop
test
jo
das
and
pop
sub
push
les
(bad)
adc
aaa
(bad)
cmps
inc
addr16
inc
sub
xlat
popa
test
scas
or
scas
fistp
push
pop
or
or
sub
mov
mov
fs
xchg
int3
push
imul
jmp
out
std
mov
out
inc
and
lock
scas
lock
inc
push
pop
ja
mov
push
lock
pushf
inc
cmc
sub
fcom
push
xor
cmp
popaw
daa
sbb
clc
jne
dec
inc
jbe
sub
lea
mov
mov
fadd
es
xor
xchg
cli
add
add
ror
jo
fwait
dec
jmp
xchg
(bad)
mov
mov
cld
ret
jbe
stos
mov
pusha
call
xor
xor
clc
push
add
mov
adc
xor
inc
fcomp
xor
adc
dec
mov
cs
pop
cmps
cmp
movs
xor
pusha
je
or
es
mov
mov
lds
add
jnp
loop
inc
je
mov
and
push
sub
inc
mov
jo
dec
daa
sub
clc
ins
pop
dec
xor
inc
xor
dec
cld
adc
mov
or
mov
and
stc
inc
mov
jo
inc
and
in
pop
enter
and
mov
add
xor
dec
pop
ret
test
pop
nop
stos
mov
pop
fsub
push
inc
ret
push
xor
call
sub
cmp
movs
les
shl
movs
mov
push
and
out
and
push
push
jae
adc
sub
call
movs
out
aas
aas
lock
jmp
push
or
mov
push
retf
out
sbb
pusha
sub
mov
aam
repz
mov
xor
(bad)
pop
icebp
lods
sub
shl
cmps
cmp
xor
push
rcr
test
leave
xchg
js
or
pop
ds
add
adc
inc
int3
sub
push
and
cwde
daa
cmp
jae
dec
pop
adc
or
dec
adc
aam
test
jge
shl
cmc
ret
push
xor
ret
fs
adc
and
sub
sbb
mov
mov
pop
sbb
add
xor
nop
std
cmp
je
or
(bad)
fwait
dec
sbb
xchg
or
xchg
sub
retf
dec
add
iret
dec
mov
fs
push
loop
jb
add
ror
test
pop
mov
adc
pop
xchg
adc
rcl
pop
scas
inc
inc
daa
mov
in
loope
sub
imul
aad
mov
pop
mov
aam
pop
cmp
and
aas
add
push
jb
mov
xor
adc
test
sub
test
(bad)
xor
push
and
sub
dec
pop
mov
pop
dec
mov
mov
pop
and
sub
nop
mov
stos
and
sub
mov
xor
add
mov
or
inc
and
cs
call
sub
dec
outs
daa
cld
iret
and
hlt
shr
nop
add
scas
pop
and
sbb
mov
jns
xor
mov
jmp
mov
arpl
lods
adc
and
sahf
cmp
(bad)
push
aas
mov
inc
push
inc
jmp
cmc
and
pop
add
add
pop
aam
mov
mov
pop
ror
and
mov
lock
lock
pop
inc
add
add
rep
imul
call
adc
jmp
mov
(bad)
rcl
jne
ja
hlt
and
lods
mov
add
add
imul
in
in
inc
sbb
fnstenv
call
push
add
repnz
in
inc
mov
mov
test
add
push
jo
jne
sbb
cmp
push
ret
or
add
sbb
mov
jmp
call
pop
and
mov
xor
or
mov
adc
(bad)
jge
test
cmp
fldcw
xchg
js
lock
add
mov
cmp
lods
xchg
ds
or
push
sbb
push
xor
rol
add
in
mov
dec
cwde
or
fmul
lods
les
cmp
ins
retf
lds
or
and
lea
sar
sub
or
test
mov
add
xchg
and
or
ds
pop
hlt
xor
les
dec
inc
call
mov
mov
clc
fchs
mov
add
and
(bad)
sbb
xor
mov
or
ja
and
push
je
xor
push
adc
popa
pop
adc
mov
ds
aaa
sbb
dec
fnstcw
or
pop
mov
pop
jg
mov
scas
sbb
mov
jb
mov
adc
inc
in
ret
es
pop
mov
pop
lock
pop
cmp
mov
je
sbb
adc
sub
xchg
add
outs
dec
scas
sbb
adc
add
xor
or
iret
cmp
or
ret
call
push
sbb
lock
or
pop
xor
cmp
(bad)
jle
les
mov
data16
fs
cs
add
push
sbb
add
pusha
dec
jbe
mov
out
push
fisttp
jne
or
test
sbb
scas
inc
push
sahf
add
daa
cmp
imul
sbb
inc
ss
or
sbb
or
xchg
sbb
dec
cmp
scas
cmp
out
and
sbb
add
sbb
xchg
es
and
cmp
xor
adc
jmp
ja
clc
jle
jmp
dec
or
jmp
and
ror
test
pusha
jg
aaa
les
je
mov
outs
sti
sahf
cmp
add
sub
push
fdivr
out
xlat
clc
loopne
in
adc
add
pop
mov
stos
shl
add
bnd
push
add
adc
jmp
adc
stc
vhaddps
cmc
push
out
jmp
gs
push
in
xchg
call
ja
lahf
(bad)
and
jmp
sub
add
add
cmovs
push
jo
and
inc
xor
add
cmc
int3
push
cli
dec
adc
sub
inc
fdivr
out
mov
and
push
cs
push
call
and
mov
push
mov
nop
icebp
add
push
mov
xchg
lods
inc
cmp
jmp
ins
leave
inc
imul
aam
add
out
pop
pop
xor
add
shl
das
arpl
imul
les
nop
cmp
xchg
add
xchg
fcomp
dec
ret
cdq
xor
inc
cwde
sub
pusha
pop
test
sbb
and
repz
push
cmp
cmp
mov
pop
adc
inc
pop
inc
inc
sbb
je
aaa
push
push
dec
repnz
ret
arpl
sbb
test
xchg
xchg
adc
mov
inc
dec
xchg
adc
out
mov
inc
dec
fwait
inc
sub
xchg
clc
jns
xchg
pop
cmps
adc
mov
lahf
mov
fwait
sub
mov
xchg
or
pop
or
ins
push
loopne
hlt
mov
je
cmp
out
sub
jo
fwait
add
lock
dec
mov
cmp
xor
push
pop
dec
loop
hlt
mov
or
pop
dec
sub
leave
adc
iret
and
adc
mov
mov
add
mov
enter
dec
push
sbb
xchg
mov
movs
pop
fbld
ror
lods
sbb
dec
std
mov
inc
sub
je
jg
mov
add
push
das
adc
rcr
push
xor
adc
mov
adc
push
idiv
and
jmp
adc
xchg
jle
push
int3
xor
pop
and
dec
or
xchg
xor
js
push
jmp
mov
mov
xor
imul
pop
inc
push
xor
repnz
mov
xchg
retf
leave
sar
mov
jne
adc
push
mov
call
push
sbb
jno
pop
cli
xchg
inc
dec
fisttp
pop
mov
xlat
cmps
mov
push
jo
xchg
cdq
out
jle
mov
cmp
pop
cmps
jle
inc
jmp
es
xor
jg
lods
cmp
mov
js
push
repnz
mov
ret
mov
add
push
mov
push
add
data16
stc
nop
cdq
mov
test
jb
mov
jne
fsubr
jns
movs
inc
sub
or
int
xchg
out
add
and
(bad)
lods
sub
add
dec
lahf
fidiv
add
cmp
and
sbb
mov
sbb
mov
jl
cmc
popa
dec
jb
div
dec
xchg
and
add
push
mov
cmp
jae
call
mov
jle
pop
int3
test
sete
pop
nop
jbe
xchg
inc
adc
or
push
je
mov
xor
mov
fs
movs
pop
xlat
shl
inc
and
jle
jmp
xor
dec
das
retf
and
cmp
sbb
das
inc
daa
sbb
pop
dec
push
sbb
ins
fnstcw
sbb
or
aas
(bad)
(bad)
fdivr
push
cmp
enter
push
adc
fs
or
mov
adc
nop
mov
sub
popf
dec
sbb
arpl
or
add
pop
jle
sub
shl
ins
out
fild
pop
shr
add
push
pop
sub
inc
adc
mov
inc
fld
ja
pusha
push
cwde
xchg
push
cmp
and
jno
outs
mov
sbb
xor
xor
jecxz
cmps
push
enter
hlt
push
and
sbb
pop
in
push
cmp
inc
pop
ret
push
loopne
ins
and
retf
jnp
mov
push
data16
cmps
jle
adc
lea
pop
dec
lods
sbb
dec
pop
pusha
pusha
mov
dec
shl
sub
out
or
cmp
hlt
jne
sbb
mov
sbb
mov
jae
dec
dec
(bad)
fnstcw
or
inc
jne
and
push
out
ror
je
shr
mov
movs
shl
cdq
jge
mov
loop
and
imul
jmp
aaa
push
sub
rcr
jbe
add
je
add
lock
inc
ins
popf
inc
ins
or
jg
cs
xor
adc
inc
adc
in
ret
and
mov
sbb
xchg
push
nop
mov
cmps
mov
or
or
adc
fwait
add
add
jbe
mov
sahf
or
out
ins
loope
xor
outs
call
rol
int
xor
jg
push
or
or
add
add
loopne
sbb
or
and
add
and
inc
addr16
cdq
sub
push
mov
mov
(bad)
mov
jne
inc
in
(bad)
(bad)
cmps
xor
fs
and
and
add
into
sub
test
das
into
ds
mov
push
push
cmp
jmp
rcl
and
add
and
repnz
mov
rol
push
rcr
fnstcw
mov
repnz
or
add
cmp
shl
xchg
cmp
inc
rol
movs
dec
and
pop
enter
loope
fs
ret
sbb
jl
or
in
(bad)
out
xchg
add
fsub
clc
aas
adc
push
inc
inc
xchg
lock
add
add
xor
inc
xchg
and
addr16
ud1
inc
or
pop
hlt
xor
adc
ret
push
sbb
jecxz
add
test
or
mov
add
or
(bad)
and
lea
lea
add
cli
ds
in
or
cld
jns
dec
add
add
add
jne
inc
and
js
shl
sub
or
jnp
dec
xchg
add
add
add
(bad)
std
jge
pop
das
or
lea
adc
lock
daa
enter
push
push
repnz
xor
scas
fcmovu
lock
push
cmps
(bad)
neg
sub
fbstp
sub
or
add
mov
scas
cmp
push
outs
xor
outs
push
xchg
push
mov
push
cmp
push
add
movs
jnp
jmp
fld
mov
(bad)
cmp
stos
punpcklbw
mov
lods
mov
cmps
popf
stc
xchg
and
rol
sbb
pop
push
rcl
(bad)
in
add
loopne
lahf
add
inc
cmp
jle
sub
pop
sub
and
adc
sbb
cmp
adc
test
(bad)
(bad)
pushw
inc
or
pop
nop
pop
call
lahf
add
sbb
outs
jne
push
je
or
push
cmp
outs
push
or
push
mov
jecxz
push
daa
mov
mov
add
sub
dec
adc
inc
ret
lods
pop
mov
or
mov
mov
xor
or
ds
aas
fcom
add
fs
lock
push
inc
stos
and
add
add
inc
ja
sbb
aad
cmp
daa
pop
mov
push
jge
call
mov
cmp
push
je
shl
into
xchg
push
sbb
sbb
jo
ret
inc
cmp
pushf
ror
push
arpl
clc
add
or
mov
pop
shr
cmp
adc
xchg
jae
and
data16
pop
loop
or
je
test
jmp
xlat
shr
enter
dec
enter
in
test
pusha
mov
add
movs
jns
add
fsubr
dec
and
xor
fwait
ds
adc
xor
or
sbb
or
and
sub
out
and
pop
cmp
inc
nop
jle
mov
(bad)
xor
push
sahf
lmsw
push
or
and
or
retf
push
sbb
cmc
mov
enter
push
cdq
gs
xchg
push
cmps
push
or
jno
(bad)
xchg
std
xlat
push
or
test
mov
(bad)
pop
inc
shl
imul
mov
or
or
test
sbb
loope
daa
add
mov
xchg
pop
push
push
sub
inc
add
daa
push
add
in
jnp
adc
outs
xlat
push
nop
lock
mov
hlt
repz
xor
pop
add
js
mov
fs
jge
into
add
add
rcl
lea
adc
push
add
adc
pop
mov
into
loopne
dec
or
adc
or
adc
cmp
sub
sub
fst
pushf
mov
test
mov
test
sbb
mov
mov
enter
popf
push
out
adc
jmp
dec
push
xor
inc
sub
fisttp
add
adc
adc
nop
sub
sub
xchg
mov
sbb
dec
mov
push
mov
aaa
or
call
movs
pusha
mov
call
xchg
inc
add
pop
movs
cmp
inc
sbb
add
push
pop
add
adc
push
adc
push
and
mov
sbb
(bad)
mov
mov
loop
addr16
adc
cmp
je
push
into
leave
leave
test
xor
sub
xchg
retf
and
xor
xor
xchg
(bad)
add
jmp
popa
inc
sbb
inc
cmp
outs
push
push
xor
enter
fiadd
movs
inc
dec
mov
or
int3
repnz
and
loop
dec
jnp
fcomp
lea
movs
push
or
shr
sub
lock
jne
retf
(bad)
dec
in
mov
shld
cmp
adc
popf
adc
loope
mov
xor
add
arpl
sti
inc
add
arpl
lock
adc
or
sbb
push
mov
mov
hlt
(bad)
pusha
or
call
push
test
popf
(bad)
mov
pop
aas
mov
mov
add
loop
pop
call
add
sub
(bad)
cdq
pop
test
or
jmp
or
and
pop
adc
lock
jp
fcmove
jmp
leave
daa
mov
add
div
fst
xchg
xor
daa
xor
add
dec
in
(bad)
dec
mov
mov
dec
mov
nop
jl
mov
(bad)
out
mov
cwde
sub
push
mov
mov
adc
fsubp
retf
fldenv
xchg
pop
adc
js
daa
mov
sbb
adc
push
cmp
loop
lock
push
ret
call
mov
ffree
outs
(bad)
int3
mov
dec
jmp
daa
pusha
ins
loopne
cmp
sub
int
pop
xor
add
fadd
mov
adc
inc
and
push
xor
cmc
dec
and
dec
(bad)
pop
fbstp
push
loopne
mov
mov
dec
lock
jo
dec
cli
mov
sbb
lds
pop
xchg
push
or
and
sub
out
test
fmul
ret
adc
daa
adc
les
in
mov
push
cs
lahf
das
mov
push
or
mov
lds
adc
mov
les
dec
movs
or
fst
mov
mov
outs
pop
or
in
les
or
das
pop
xchg
adc
pop
add
dec
push
dec
jns
inc
and
or
cmp
add
add
or
loope
push
add
add
pop
adc
nop
je
adc
push
loope
cmps
je
in
add
fdiv
jb
dec
push
adc
adc
idiv
dec
enter
shl
movs
and
fst
mov
gs
aam
test
mov
arpl
pop
shufps
adc
pop
push
inc
enter
pop
loop
mov
sub
loop
push
loopne
or
mov
movs
loop
mov
add
or
push
test
sub
add
aam
xchg
pop
mov
or
inc
imul
dec
xor
inc
or
out
clc
les
dec
cmp
lds
nop
cmp
push
mov
or
cs
cmp
fwait
js
fisttp
retf
lea
retf
inc
mov
mov
test
xchg
and
nop
mov
adc
movs
cmp
xchg
lahf
mov
test
add
mov
loope
dec
add
push
mov
cmp
(bad)
pop
and
sub
push
es
popa
movs
mov
cs
cmps
fcomp
aaa
call
(bad)
shl
shl
xchg
push
in
mov
inc
push
jmp
and
loopne
mov
aad
mov
mov
fmul
dec
retf
sub
add
push
dec
pop
xlat
add
mov
add
push
add
cld
mov
test
cmp
xor
add
dec
add
mov
jge
add
jmp
jmp
or
or
ret
dec
mov
add
add
jle
loop
xor
dec
inc
repnz
(bad)
pop
in
inc
xor
add
dec
xchg
ja
sub
and
jl
inc
jno
test
lods
cmps
xor
or
int3
pop
jp
xchg
stos
mov
es
mov
pop
add
sub
imul
sbb
cmp
inc
or
movs
inc
push
pushf
stos
jle
cmp
or
js
sub
neg
xlat
or
ret
add
cs
xchg
les
jge
mov
push
push
sub
aam
or
sbb
sbb
xor
imul
or
push
imul
daa
sbb
mul
add
push
inc
add
cmp
jo
adc
jmp
out
pop
rcl
sub
pusha
ins
es
push
pop
jmp
addr16
(bad)
mov
pop
sub
cmp
and
xchg
(bad)
out
es
push
stos
sbb
loope
mul
or
cmp
pop
sbb
mov
mov
and
or
bound
inc
rol
test
hlt
sub
add
xor
push
ret
push
dec
test
(bad)
call
call
imul
xchg
xchg
inc
lods
xor
push
dec
shl
adc
push
xlat
jno
popa
dec
sub
dec
test
das
sahf
lods
sti
mov
scas
scas
fnstenv
fsub
adc
int
inc
js
push
imul
test
test
inc
inc
mov
(bad)
pusha
lock
sub
or
lea
repnz
mov
dec
dec
fldcw
and
pop
jmp
inc
inc
dec
xchg
ret
sub
test
xchg
(bad)
cld
cmp
push
dec
inc
mov
add
pop
enter
cmp
shl
in
stos
repz
ror
sbb
adc
add
dec
ins
xchg
and
adc
inc
jmp
and
inc
gs
jg
add
or
xor
sbb
in
ror
sub
rol
arpl
push
getsec
scas
hlt
test
push
out
xlat
ficomp
and
add
dec
sbb
sub
cmps
xchg
inc
cmp
in
mov
lock
add
push
adc
aaa
lock
fsubr
jae
ins
push
lock
add
stos
cdq
in
or
pop
dec
ret
mov
cmps
mov
test
dec
daa
add
xchg
(bad)
(bad)
scas
sbb
addr16
enter
inc
or
jbe
mov
cwde
jle
xor
pop
or
push
hlt
and
push
push
pusha
jnp
cs
int3
pop
icebp
sub
cmp
(bad)
sbb
xchg
inc
not
push
push
jp
xchg
xor
jmp
fstp
adc
cmp
adc
mov
jecxz
sub
and
ins
test
mov
mov
pop
mov
fimul
xchg
in
or
add
cmp
mov
(bad)
or
dec
sub
jns
(bad)
out
sub
jg
cmp
jne
push
or
jne
ins
or
or
sar
mov
cs
mov
stos
cmps
call
(bad)
enter
xor
mov
xor
retf
push
cmp
and
adc
jo
cdq
inc
pause
or
aam
jne
das
sbb
clc
in
cmp
push
inc
jl
fbld
mov
stos
or
mov
xor
outs
sar
sub
fldenv
pop
dec
js
popa
jmp
push
inc
dec
jmp
dec
nop
cmp
lds
sub
sub
jno
push
(bad)
out
inc
dec
fidiv
add
inc
xor
ror
xor
retf
and
popf
lahf
or
loopne
pop
jb
mov
adc
adc
test
xlat
mov
jbe
inc
jle
sub
mov
and
xor
jg
ror
rol
mov
jmp
lahf
and
adc
xchg
xor
mov
out
bound
add
mov
aaa
add
idiv
cmp
jp
test
sub
xchg
je
xchg
xchg
retf
mov
inc
and
aad
cmp
mov
ror
sub
sub
xchg
scas
add
aaa
sub
cmps
(bad)
sub
cwde
inc
dec
cld
and
xlat
mov
mov
jle
pop
mov
adc
mov
loope
cmc
dec
or
sbb
fldenv
fst
retf
int3
pushf
adc
fadd
cmp
inc
xchg
mov
mov
push
sar
add
pop
or
loopne
aam
and
call
adc
pop
and
inc
iret
xor
sar
(bad)
aam
ret
jmp
sub
fsubr
adc
push
(bad)
icebp
inc
in
cmp
aas
push
mov
or
cmc
jmp
and
mov
mov
adc
nop
inc
pop
mov
dec
repnz
jmp
sbb
fwait
push
hlt
aad
ror
lods
sub
xchg
jmp
lods
mov
jle
add
in
js
add
iret
add
dec
fwait
cmp
je
cmp
and
lahf
sti
repnz
fisttp
repz
or
or
icebp
cmp
and
or
fiadd
sub
adc
adc
fadd
mov
std
jg
arpl
add
and
loop
scas
sub
inc
mov
xor
jnp
add
std
rcr
mov
push
pop
or
push
mov
mov
dec
mov
std
cmp
cmp
add
cmp
popf
loopne
test
or
or
push
jmp
and
sar
cmp
ror
xchg
jne
mov
aas
cmp
ss
imul
rcl
jno
mov
dec
pop
sbb
outs
or
push
push
aaa
push
repz
out
add
push
sub
jo
mov
mov
or
scas
mov
sbb
xchg
pop
in
pop
js
sub
mov
(bad)
test
mov
jo
imul
and
cmp
cwde
and
dec
imul
adc
dec
iret
add
sbb
add
or
sbb
inc
sbb
icebp
add
imul
das
push
mov
push
and
clc
call
shr
adc
pop
not
pop
outs
mov
clc
shr
mov
pop
pop
lock
scas
dec
aam
adc
add
pop
sub
cmp
in
test
dec
inc
pop
leave
sub
clc
test
hlt
add
pop
xor
mov
add
ins
dec
push
sbb
add
sbb
inc
sub
xchg
add
sahf
fadd
rcr
push
pushf
inc
stc
shrd
xor
cwde
cmp
fimul
js
dec
int3
cld
inc
adc
fcmovbe
jbe
cmp
je
adc
fadd
add
pop
jecxz
in
push
not
loopne
shl
jl
jmp
scas
pop
mov
in
pop
leave
cmp
jle
inc
jbe
sar
push
add
push
std
jecxz
push
push
mov
dec
add
pop
jle
call
in
cmp
push
adc
sbb
in
lds
sbb
in
push
push
js
popf
add
outs
imul
mov
sbb
push
xor
jecxz
adc
out
push
dec
stc
mov
or
sub
xor
add
jmp
push
xor
sbb
xor
mov
push
lea
dec
sbb
or
repz
xor
pop
aad
xor
inc
sub
fsub
out
mov
and
and
pop
cmp
jmp
outs
add
cmc
das
xchg
call
js
cmps
and
js
or
sub
cmp
add
pop
(bad)
loope
ret
pop
bound
dec
adc
and
clc
adc
shl
in
call
mov
cli
cmp
imul
jge
popa
sub
xor
add
xchg
shl
sbb
xor
cmps
repnz
cli
cld
clc
cld
hlt
and
sub
aaa
mov
inc
pop
or
or
jmp
xor
pop
jmp
nop
outs
lock
enter
xlat
fild
and
sbb
mov
dec
daa
add
sub
adc
add
sahf
adc
or
pop
scas
adc
test
dec
mov
adc
inc
mov
and
and
xchg
adc
stc
add
or
add
cmp
out
and
scas
mov
sub
in
repz
das
cmp
mov
push
mov
adc
add
jno
shl
add
adc
inc
and
enter
adc
sbb
add
loopne
fst
outs
mov
dec
and
or
das
xchg
clc
jle
and
and
ss
(bad)
imul
xchg
jg
mov
nop
push
xor
mov
stos
xor
adc
jmp
pop
inc
sar
(bad)
in
jge
mov
cwde
sbb
cdq
jae
ja
or
xor
into
jp
push
outs
fwait
add
cmp
push
mov
div
cmp
jne
ret
and
test
mov
loop
jne
pop
mov
sub
and
inc
daa
push
jns
lods
aam
sub
pop
add
test
mov
push
pusha
jne
pop
sbb
in
cld
jo
jo
lahf
mov
dec
mov
imul
daa
adc
fadd
popf
or
test
add
sbb
(bad)
cld
mov
sub
addr16
mov
pop
lahf
fimul
in
in
inc
sahf
aaa
mov
inc
push
arpl
inc
popf
sub
xchg
xor
sub
lock
push
ror
jp
pop
inc
dec
mov
or
or
aaa
inc
sbb
mov
mov
mov
dec
rol
gs
or
popa
mov
mov
and
arpl
retf
add
pop
test
enter
test
div
xchg
sbb
ds
pop
test
cmps
out
push
jmp
jle
aas
inc
(bad)
out
dec
pop
imul
out
sar
add
jg
repz
jmp
jnp
movs
test
push
mov
add
xor
pop
mov
inc
sbb
call
clc
xchg
arpl
adc
stos
push
add
loope
fidivr
fild
into
in
repnz
cmovb
sub
mov
mov
and
jmp
xor
sub
imul
movs
adc
or
lock
clc
adc
jno
push
cdq
je
or
push
add
popf
or
outs
lods
sub
add
sbb
mov
adc
cmp
mov
xor
loope
push
lds
cmp
shl
xor
pop
call
pusha
adc
push
xchg
adc
cwde
movs
push
mov
xlat
rol
hlt
fld
shl
loope
mov
mov
adc
pop
stos
push
pushf
jmp
dec
add
test
or
ja
iret
loopne
pop
fiadd
push
test
cmc
adc
sbb
outs
daa
cmp
lea
xchg
outs
or
popf
push
ss
push
loopne
mov
mov
aam
jne
xor
mov
cmps
enter
loope
adc
jbe
lock
pop
(bad)
adc
add
xlat
(bad)
lods
aam
lds
movs
pushf
lahf
mov
sbb
mov
daa
loopne
loopne
daa
fist
cmp
xchg
dec
outs
nop
fdiv
fsub
pop
dec
fadd
sbb
cs
lea
scas
aam
lea
sti
fs
mov
sbb
shr
sub
mov
add
sti
nop
dec
sub
int3
repnz
sbb
jge
fwait
sbb
pop
push
mov
jnp
jmp
inc
inc
push
xchg
movs
nop
enter
sbb
sbb
aaa
(bad)
add
imul
iret
inc
xchg
test
aaa
push
push
vphaddwq
jl
jmp
mov
lods
stos
sub
aas
shl
jbe
in
rcl
fcomp
loopne
adc
aaa
or
adc
jmp
inc
cld
jge
adc
clc
push
jne
cmp
inc
loopne
xor
sub
mov
imul
aam
rcr
stos
xchg
pushf
movs
stos
loopne
in
or
je
ds
repnz
dec
inc
sbb
xchg
push
stc
sar
ss
xor
adc
ins
adc
add
push
fst
lods
mov
adc
mov
loope
sub
cmp
xor
mov
mov
daa
jmp
sub
fwait
movs
pusha
rcl
sbb
mov
fcom
add
test
retf
les
jno
add
ficom
xor
ins
sbb
xchg
push
mov
cmp
mov
or
(bad)
or
and
(bad)
adc
jno
mov
pop
pop
pop
leave
adc
dec
test
xor
jne
and
inc
cmp
mov
push
and
sub
mov
or
std
xor
cmp
outs
fistp
cmp
mov
jmp
aam
and
add
mov
mov
adc
test
int
xlat
int3
mov
hlt
mov
add
cmp
inc
sbb
mov
push
add
add
or
fstp
adc
and
pop
mov
or
mov
mov
push
(bad)
sbb
iret
sbb
lods
adc
aam
or
shl
inc
or
dec
and
or
adc
jb
fwait
mov
jne
sub
mov
or
js
dec
shl
cmp
or
push
mov
dec
and
ret
aad
xor
sbb
sbb
cmp
ja
(bad)
inc
pop
lock
ret
jmp
mov
mov
mov
push
mov
and
in
inc
and
add
push
sub
or
call
scas
and
or
sti
popf
aaa
xor
mov
or
movs
add
sti
call
jmp
into
adc
arpl
outs
inc
sbb
stc
or
pushf
add
es
adc
add
mov
pop
or
adc
and
push
cli
mov
push
adc
cs
les
sbb
js
in
xor
scas
in
test
mov
sbb
or
dec
xor
ret
addr16
dec
rcl
push
push
sbb
sbb
aam
add
ret
int
push
inc
push
test
push
pop
daa
mov
mov
rcr
inc
leave
imul
daa
ins
fdiv
jmp
stos
xchg
xor
stos
dec
mov
pop
movs
es
not
add
add
fisttp
mov
xchg
sub
ror
or
sar
jo
inc
(bad)
hlt
aad
and
popa
adc
jge
push
add
xchg
add
loopne
imul
inc
sbb
shl
and
in
xor
imul
retf
pop
in
mov
mov
aas
stos
mov
retf
frstor
add
and
adc
or
mov
and
jbe
leave
loope
(bad)
jnp
in
nop
pop
jae
inc
retf
dec
ror
dec
fdivp
(bad)
push
out
push
add
push
and
fmulp
repz
xor
inc
dec
pop
push
data16
out
jne
xchg
mov
out
test
(bad)
ins
adc
(bad)
xchg
(bad)
js
pop
sub
and
add
inc
and
or
jmp
sbb
movs
(bad)
inc
push
cmp
jmp
xor
(bad)
je
aam
retf
jmp
mov
or
inc
cmp
ins
bound
sbb
or
dec
pop
call
cmp
(bad)
push
jmp
xor
cmc
or
add
mov
fsub
into
and
jo
pusha
sub
ret
fisub
dec
add
add
push
clc
test
js
retf
add
in
dec
sbb
add
xchg
add
dec
loope
add
cmp
or
mov
cmp
or
mov
or
jg
add
jnp
out
cmp
stos
adc
lods
scas
hlt
stos
jg
push
xchg
fs
movs
cwde
pop
clc
std
inc
das
cld
imul
sbb
mov
and
mov
adc
retf
jecxz
in
out
cmps
ins
cmp
ja
cmp
xchg
scas
cmp
imul
ds
sar
lds
cld
xchg
mov
ins
jo
pop
inc
dec
imul
in
js
push
sub
add
adc
rcl
xor
lock
ins
pop
mov
push
dec
xor
xchg
jle
dec
pop
and
jmp
push
adc
call
jbe
sbb
shr
repz
lahf
pop
retf
jbe
mov
fstp
shl
and
jmp
cdq
pop
icebp
inc
mov
sbb
jmp
jmp
and
mov
add
ret
add
mul
aam
add
je
adc
jnp
xor
sub
mov
hlt
adc
cs
movs
add
ret
sub
and
ret
inc
jmp
cmp
enter
push
add
xlat
les
int
pop
inc
and
dec
test
jae
adc
sub
fwait
ins
inc
xchg
pop
push
(bad)
fimul
and
inc
pop
call
cmp
into
and
push
push
ror
mov
or
pop
inc
ret
das
xor
xor
movs
sbb
rcl
push
push
out
add
dec
or
into
and
lock
pusha
xchg
sub
les
inc
sbb
or
lods
add
ds
inc
shl
aam
cmp
cmovne
dec
cmp
push
push
scas
rcr
mov
lock
push
ret
cmp
adc
xchg
and
nop
outs
add
pop
pop
jnp
inc
add
or
pushf
adc
pop
es
js
or
jmp
and
ss
jg
or
aaa
in
add
and
sbb
adc
popa
(bad)
mov
adc
test
sub
retf
out
adc
mov
dec
mov
aam
dec
mov
inc
rol
mov
inc
shr
xchg
xchg
sbb
out
retf
es
(bad)
mov
pop
fcomp
lock
dec
adc
fldcw
and
call
mov
or
pop
inc
add
loop
jge
push
add
dec
in
xor
cmp
shl
cmp
popa
xor
push
or
call
inc
pop
sub
aas
sbb
xor
pop
sub
adc
shr
mov
jmp
call
sbb
jns
repz
mov
push
in
add
push
aad
mov
pop
sbb
cmp
push
inc
push
push
jg
sub
fstp
mov
inc
fadd
enter
pop
loopne
or
and
scas
pop
stos
movsx
mov
xor
les
movs
xor
mov
and
pushf
ret
inc
or
jmp
int3
scas
movs
lea
pop
daa
dec
adc
enter
or
popf
lea
jmp
mov
sub
adc
ret
sbb
inc
push
or
add
and
and
push
or
add
sbb
jne
mov
int
popa
loopne
(bad)
push
add
add
loopne
pop
div
dec
mov
push
and
push
loope
push
jae
ss
ins
out
jnp
movs
and
sbb
xor
repz
das
jecxz
lsl
nop
les
or
cmp
adc
cmp
push
cmp
adc
shl
clc
add
cmps
mov
dec
sbb
sbb
(bad)
xor
ffreep
cmp
jg
pop
adc
repnz
fldcw
stos
ret
dec
shr
cmps
test
jbe
mov
imul
push
mov
mov
sbb
out
xor
call
(bad)
dec
or
dec
jmp
jmp
retf
push
aaa
popa
test
add
add
dec
jmp
cmps
daa
mov
adc
push
(bad)
lock
xchg
inc
lds
cmc
pop
sub
clc
pop
call
cld
leave
in
mov
sub
inc
xor
movs
pop
adc
cmp
ds
push
xor
or
enter
mov
rdseed
rol
sub
cmp
xchg
(bad)
jmp
(bad)
lahf
repz
inc
pop
xor
cli
mov
cli
jns
push
add
ret
repnz
(bad)
pop
push
iret
jmp
push
sbb
cs
adc
sbb
data16
rcr
or
sub
pop
neg
inc
aad
pop
sub
movs
fs
adc
and
js
pop
pop
xchg
psrad
cmps
add
aas
pop
xchg
sub
mov
mov
add
in
and
or
inc
mov
hlt
fbld
inc
and
add
xor
daa
add
movs
jge
nop
add
cdq
mov
shl
sub
mul
setl
and
dec
jnp
inc
push
and
add
stos
in
mov
shr
pop
das
scas
lea
sbb
pop
pop
and
adc
in
sbb
jecxz
xchg
cmp
lock
shr
add
(bad)
sbb
dec
and
int3
ret
inc
inc
rol
bound
sub
and
dec
or
sub
mov
dec
ret
je
or
scas
popa
movd
ret
test
loopne
ret
fistp
pop
scas
and
daa
sti
and
jbe
push
and
int3
pop
push
fwait
adc
rcl
add
dec
adc
mov
xor
or
es
mov
xor
ins
pusha
in
pop
xchg
cmp
dec
cmp
fst
add
(bad)
push
inc
clc
add
or
ror
inc
and
enter
adc
shr
mov
arpl
xor
shr
sbb
sub
xor
dec
stos
and
and
push
xchg
push
adc
clc
int3
dec
cmp
das
dec
repz
out
adc
xor
cmp
sbb
fdivr
and
call
xor
jo
xor
sbb
leave
mov
and
add
sub
or
inc
rol
pop
push
mov
dec
sbb
dec
mov
mov
ffree
daa
dec
movs
cld
xor
pusha
and
loope
cmp
or
fcom
pop
rcl
mov
sti
es
(bad)
loopne
fmul
mov
sbb
je
xchg
cmps
push
ins
sahf
jo
jne
mov
push
mov
mov
sbb
xor
cmp
popa
adc
xlat
(bad)
lods
sub
mov
add
push
jbe
jmp
aam
push
es
mov
sub
sbb
or
and
(bad)
enter
add
or
sbb
adc
add
arpl
fcom
in
daa
inc
add
mov
aas
in
or
ja
ss
pop
inc
ins
add
dec
or
call
dec
xor
call
ds
test
repnz
jmp
mov
in
mov
loopne
in
inc
dec
in
cmp
mov
adc
mov
lahf
ret
out
repz
loopne
or
inc
adc
dec
sub
imul
fdiv
out
cmp
jg
mov
jno
xchg
fcom
ds
xor
cdq
mul
jg
mov
push
add
pop
dec
or
fidiv
push
add
jg
and
and
and
push
push
hlt
mov
push
jmp
mov
cmps
mov
and
aaa
out
pop
push
das
cmc
movd
mov
pop
lahf
sub
(bad)
mov
test
inc
xor
add
or
add
add
frstor
fimul
out
and
push
push
push
dec
sbb
and
adc
add
cmps
adc
inc
lods
sub
rcl
lock
nop
push
and
mov
inc
cmp
mov
add
cmp
dec
pop
and
retf
sbb
cmp
pop
add
adc
xor
inc
dec
sbb
jno
cwde
jmp
sti
or
test
pushf
or
adc
cwde
fcomp
fwait
outs
jmp
jp
mov
test
push
loop
adc
mov
pop
lea
sub
call
pop
div
outs
pop
mov
xor
cmp
xchg
popa
mov
add
or
enter
das
in
mov
jl
mov
fld
or
sub
jecxz
or
jne
sbb
mov
push
(bad)
push
stos
out
(bad)
mov
cmp
aad
nop
leave
and
mov
cmp
or
ret
fistp
xchg
out
sub
adc
pop
add
pop
in
or
jne
ror
outs
xor
sbb
xchg
push
or
and
rcr
or
xor
add
fwait
sub
push
add
cmp
mov
xor
cmp
xor
lods
xchg
jb
or
outs
jecxz
hlt
or
or
int3
mov
push
sbb
cmps
mov
inc
adc
inc
push
cmovb
pop
rcr
dec
mov
inc
or
xchg
les
and
sbb
popf
stc
mov
or
aaa
daa
sub
adc
pop
cli
sahf
jecxz
push
rol
push
jmp
add
cli
cld
bound
cmp
jno
add
cmp
cmc
je
cmp
jle
mov
push
clc
inc
les
adc
or
pop
les
mov
fs
add
sbb
inc
sbb
sbb
jne
or
loope
mov
gs
lock
xchg
and
cmp
imul
or
mov
push
rcl
or
lock
shl
cmp
stc
mov
leave
sbb
clc
clc
sbb
xchg
adc
push
iret
lea
jae
add
push
enter
adc
jae
aad
int3
and
outs
pop
ror
js
and
das
clc
jnp
add
mov
jl
pop
cmp
(bad)
aam
or
pop
clc
je
jmp
push
cwde
lea
xchg
add
cmp
push
xlat
adc
xchg
test
scas
mov
xchg
jo
aas
and
loopne
lock
and
in
cmp
fimul
pop
push
dec
sbb
mov
adc
test
in
imul
mov
call
fisttp
mov
or
add
xchg
(bad)
dec
dec
lock
inc
mov
mov
add
sbb
jmp
xchg
add
mov
popa
sbb
or
pop
mov
add
push
iret
pop
mov
inc
xchg
or
test
dec
sbb
add
add
stos
cmps
or
pop
jb
sub
iret
repz
mov
ret
fsub
out
ds
fdivp
stc
add
push
push
pop
jmp
movs
mov
stc
adc
xor
sbb
sub
js
and
mov
pop
sub
adc
mov
in
push
(bad)
fisub
adc
mov
sbb
push
clc
ins
sub
sub
sbb
scas
xchg
or
mov
(bad)
cmp
add
mov
or
add
and
jae
aas
xor
push
lock
test
cmp
(bad)
lds
adc
ins
xor
lahf
shl
imul
and
lea
jecxz
dec
add
mov
icebp
pop
(bad)
mov
imul
test
add
push
and
pop
mov
dec
inc
stc
clc
mov
pop
jmp
pop
add
mov
(bad)
out
mov
dec
pop
mov
push
jae
out
xcrypt-ofb
cmps
sub
xor
adc
mov
inc
xlat
imul
leave
cmp
jbe
push
xchg
mov
pop
mov
pop
cmp
mov
pop
jmp
adc
push
pop
jmp
fild
lock
ins
mov
sbb
xor
pop
nop
cmp
lds
add
and
mov
(bad)
arpl
test
adc
cmp
xchg
enter
mov
cld
sub
popf
add
xchg
pop
inc
ins
mov
aaa
sub
daa
in
dec
mov
cmp
sar
cmc
inc
and
push
dec
cmp
daa
inc
push
jle
seta
xor
in
sub
sbb
(bad)
pusha
das
retf
jp
jno
shl
jmp
pop
cmp
(bad)
push
sbb
imul
sub
mov
es
je
lock
inc
sbb
aaa
push
mov
add
dec
cmp
sub
push
sub
aaa
and
pop
xchg
push
aas
movs
or
add
dec
cmp
rcr
and
dec
lahf
clc
or
pop
sub
xor
icebp
push
aas
in
or
std
fwait
mov
std
aaa
xchg
clc
push
cdq
pop
push
xchg
push
mov
and
or
sar
sbb
sub
dec
adc
push
and
sbb
adc
test
or
lock
add
push
test
cmp
std
int
xor
dec
out
xor
jecxz
push
add
pop
dec
sbb
adc
adc
jmp
or
(bad)
dec
push
push
push
cmp
inc
pop
pop
jns
mov
push
and
sub
int
jmp
sbb
in
icebp
jmp
leave
cmp
push
pop
pusha
xor
cwde
sub
or
das
xor
xor
xor
add
xchg
hlt
mov
dec
clc
mov
or
dec
btc
fs
inc
test
inc
mov
(bad)
popa
shl
lea
pop
inc
xor
lock
in
clc
inc
int
mov
enter
cmp
sbb
lock
repz
mov
cld
icebp
add
enter
adc
dec
lods
mov
cmp
out
push
dec
add
mov
and
jns
add
mov
clc
add
movs
ret
out
or
js
test
retf
or
repz
jnp
inc
push
dec
push
pop
push
jno
cmp
adc
cmp
adc
daa
jbe
push
call
inc
push
pop
imul
sbb
jns
dec
(bad)
les
add
mov
mov
sub
push
inc
aas
add
mov
or
lock
sbb
icebp
pop
jg
scas
imul
push
jne
xchg
out
pslld
cmp
test
jns
rcr
push
adc
xor
xor
dec
or
jl
add
cs
addr16
ficom
or
aad
je
cmp
or
adc
inc
inc
jo
push
xchg
rcl
or
xchg
and
lock
stc
(bad)
iret
sub
enter
(bad)
retf
clc
xor
lds
sub
daa
stc
adc
jg
sub
inc
cwde
mov
lahf
mov
xchg
mov
inc
lock
push
fsubr
dec
ds
clc
aas
inc
mov
test
adc
inc
xor
pusha
in
sbb
rcr
sbb
sub
xchg
enter
dec
ins
ins
sub
out
cmp
or
jno
xor
xchg
jp
sbb
hlt
ror
push
dec
sbb
pop
into
cmp
xor
shl
vprotd
xor
in
in
mov
data16
xchg
les
push
lock
sbb
mov
clc
xchg
or
in
clc
out
in
and
and
xchg
outs
and
arpl
shr
inc
push
pusha
jae
xchg
(bad)
int3
xor
loopne
dec
into
imul
(bad)
leave
cmp
pusha
mov
test
push
popf
inc
popf
mov
mov
ret
(bad)
pusha
or
mov
ret
or
dec
add
loopne
and
push
jle
test
sbb
adc
ins
aad
adc
or
and
out
cmps
fist
sti
or
mov
jle
call
cmp
(bad)
out
push
jmp
dec
jne
pop
fmul
ret
fs
add
or
lods
repnz
push
pop
fiadd
xor
xor
test
push
nop
das
push
adc
inc
add
add
xor
(bad)
sar
aas
aam
or
sub
xor
or
(bad)
jns
pop
outs
popa
(bad)
icebp
dec
hlt
and
push
push
aam
add
mov
nop
and
arpl
daa
and
inc
adc
cld
loopne
inc
mov
adc
add
dec
loopne
ds
sbb
mov
push
push
adc
push
mov
mov
mov
mov
scas
add
mov
inc
(bad)
sub
das
out
push
fld
xchg
pop
cs
mov
pop
shl
retf
add
cmp
push
lahf
sub
js
dec
imul
test
(bad)
icebp
sbb
jne
int3
xor
aad
in
mov
rol
jmp
shr
or
stc
push
dec
mov
lods
push
outs
jle
adc
and
mov
adc
and
adc
pop
add
inc
inc
or
add
xchg
inc
mov
and
test
cmp
or
xor
xchg
mov
es
ret
inc
push
adc
bound
cmp
pop
aam
inc
dec
sbb
and
dec
retf
dec
mov
jmp
or
xor
adc
cs
mov
sbb
xchg
push
xor
xchg
mov
sub
icebp
dec
push
call
std
aad
and
rol
mov
sbb
and
add
aaa
pop
adc
inc
(bad)
in
jns
str
sahf
mov
pop
fstp
pop
ror
ss
movs
mov
fsub
or
jl
mov
into
cmp
bound
fs
pop
and
inc
and
dec
mov
aad
call
movs
push
jb
push
nop
sub
fnstenv
jmp
dec
push
test
nop
pop
push
inc
or
dec
push
cs
xchg
push
or
(bad)
sbb
out
xchg
jg
(bad)
sbb
lock
mov
loop
scas
sbb
out
mov
jno
(bad)
pushf
stos
mov
sbb
xor
or
(bad)
jmp
sbb
xor
and
in
dec
push
test
in
stos
mov
push
popf
adc
pop
xchg
bound
fimul
(bad)
jecxz
mov
jmp
add
adc
lock
ja
xor
das
jg
mov
push
dec
inc
xchg
xchg
inc
cmp
movs
jno
les
pop
ret
jo
xor
out
in
dec
inc
jmp
je
xchg
in
push
add
adc
inc
enter
ja
hlt
jb
jo
push
adc
add
(bad)
rcl
inc
shr
aaa
or
or
adc
movs
jb
or
push
lds
dec
inc
add
xor
add
push
pop
xchg
js
mov
les
pop
in
cmp
mov
clc
pop
or
push
mov
cmp
and
push
mov
push
pusha
push
or
mov
dec
inc
sbb
enter
adc
ror
sbb
jmp
imul
seto
xor
(bad)
movs
push
cwde
or
mov
mov
xor
aas
push
jne
or
xchg
inc
test
or
push
mov
je
or
adc
imul
cmc
rol
inc
mov
push
sbb
push
mov
pusha
or
ds
and
mov
div
and
inc
inc
and
in
xor
adc
xor
mov
or
das
stos
fidiv
dec
xchg
sbb
mov
fs
leave
pop
xchg
add
dec
cmps
lods
in
movs
dec
in
jl
ins
jmp
sub
adc
sbb
test
xor
and
sahf
push
inc
dec
pop
sub
pop
or
mov
inc
je
mov
sbb
loope
push
mov
inc
inc
push
(bad)
jmp
in
xchg
adc
mov
and
sub
repnz
out
mov
dec
inc
mov
jge
push
or
jnp
cwde
cdq
cmp
aas
or
cmp
inc
push
je
mov
and
mov
inc
sahf
add
inc
(bad)
lock
sbb
out
lods
and
test
test
sbb
or
jae
or
add
test
push
test
in
cmp
dec
arpl
adc
sbb
cmp
jne
daa
fisub
mov
mov
sbb
inc
sti
xchg
or
sbb
or
push
dec
int3
(bad)
les
mov
retf
adc
(bad)
cwde
mov
pop
add
xor
push
mov
push
subps
pop
xchg
jle
imul
xchg
pop
cmp
dec
clc
push
xor
aam
pop
push
cmp
dec
clc
mov
mov
invd
inc
inc
and
popa
jb
dec
enter
adc
mov
arpl
xlat
das
mov
mov
scas
ds
hlt
inc
ja
je
add
adc
les
jo
rol
jnp
fldenv
or
enter
push
cmp
mov
jmp
mov
fs
pop
mov
fisttp
jno
mov
scas
cmp
cmp
sub
jne
adc
jne
jno
jno
or
sub
sbb
mov
test
arpl
mov
mov
pop
add
push
aas
fdiv
and
ret
or
(bad)
(bad)
or
push
dec
and
adc
inc
aas
and
pop
sbb
sub
cmp
add
aaa
pop
xchg
and
pop
jmp
push
sar
pop
sti
cmps
je
and
sbb
sbb
push
inc
xchg
sub
and
jno
add
movs
enter
test
inc
pop
xchg
mov
daa
push
push
loop
push
stos
data16
adc
xchg
jne
mov
into
loopne
xor
or
shl
sbb
dec
adc
js
lods
jno
push
enter
cmp
mov
ret
ja
adc
adc
jno
bound
sbb
pop
and
sbb
sub
(bad)
and
imul
pop
rcr
push
scas
lods
or
fwait
or
xchg
jnp
jno
push
cdq
adc
push
shr
add
sub
retf
jne
sub
popa
adc
icebp
addr16
mov
xor
lods
cld
push
or
ss
out
jmp
movs
add
add
push
sbb
aas
adc
ss
xor
lock
rcl
icebp
pop
dec
add
cmp
imul
loopne
push
or
jecxz
pop
or
icebp
inc
jl
sub
hlt
or
lock
loopne
push
push
and
push
loopne
cmp
iret
push
adc
pop
mov
add
add
cdq
das
sub
pop
and
mov
jns
sub
cmp
je
(bad)
mov
adc
loop
mov
pop
aam
push
mov
xchg
in
adc
sub
aaa
(bad)
daa
cwde
mov
push
inc
jl
ss
sub
test
fsubr
and
in
sbb
mov
(bad)
fmul
(bad)
mov
cld
rcr
aaa
add
add
add
in
or
inc
add
dec
adc
fstp
iret
push
pop
pop
xor
add
icebp
and
arpl
and
loopne
push
push
mov
ds
mov
pop
jl
push
scas
pop
and
dec
add
push
jb
sbb
sbb
test
add
mov
sub
push
add
fld
mov
mov
loope
dec
and
lds
add
arpl
mul
or
jo
mov
ins
inc
jnp
adc
sub
sub
jecxz
and
xor
enter
lahf
add
xchg
cmp
push
dec
xlat
or
sub
adc
dec
rcr
ja
nop
mov
or
dec
dec
sbb
sbb
sbb
xor
cmps
addr16
inc
mov
or
mov
cmp
sub
or
cs
and
shl
movs
pop
je
dec
jg
push
sar
int
mov
mov
mov
das
jo
js
sub
shr
adc
adc
adc
xor
xchg
mov
dec
sbb
xchg
xor
mov
(bad)
icebp
jno
jbe
data16
sub
sbb
mov
adc
inc
sahf
cmps
push
sbb
adc
repz
add
adc
inc
bound
fs
sub
bound
mov
xor
popa
cmp
and
and
xlat
push
sub
adc
mov
shl
sub
sbb
dec
call
jb
shl
inc
adc
mov
scas
rcl
push
lods
aad
mov
mov
sub
jnp
pop
retf
mov
jnp
ficom
inc
fs
add
ja
in
dec
adc
xor
or
sub
adc
dec
pop
pop
push
xor
jmp
aas
or
inc
sbb
adc
fcomp
pop
das
in
and
adc
cmp
in
and
fcom
jle
mov
rcl
pop
(bad)
push
mov
fmul
test
or
xor
cmp
push
pop
add
adc
inc
pop
push
cmps
and
fwait
add
xchg
dec
mov
daa
(bad)
call
adc
aad
adc
adc
repnz
xchg
xchg
dec
cmp
lea
jmp
xor
icebp
lock
ret
mov
xor
xor
mov
inc
ja
(bad)
fdiv
inc
sub
jnp
cmp
pop
push
push
jge
pop
mul
mov
mov
push
push
xchg
ins
or
pop
sti
das
jecxz
mov
xchg
sar
ins
or
inc
dec
push
jl
push
enter
add
cmp
dec
pop
je
and
push
push
cmp
mov
(bad)
das
bound
cmp
push
iret
mov
and
dec
xor
(bad)
mul
push
addr16
or
xchg
fst
arpl
inc
xor
in
pop
mov
jmp
adc
lahf
pop
xor
ffreep
rol
neg
inc
rcl
xchg
iret
add
lock
mov
mov
jo
and
xor
and
scas
fist
xor
inc
sbb
add
addr16
push
cmps
pusha
push
adc
inc
lfs
inc
xchg
inc
test
(bad)
pop
push
inc
inc
xchg
mov
pop
hlt
test
out
mov
push
pop
and
(bad)
and
inc
sbb
sub
pop
and
cmp
arpl
adc
pop
hlt
jmp
hlt
mov
hlt
jge
xchg
xchg
jne
push
lahf
fstp
and
popa
rcr
mov
ror
add
movaps
adc
xchg
push
ja
add
and
push
inc
and
or
mov
loop
inc
loop
push
or
or
stos
adc
bound
iret
enter
pusha
inc
clc
xlat
cmp
dec
jecxz
idiv
jnp
je
pop
nop
or
push
push
pop
mov
add
call
push
cmp
dec
mov
addr16
push
ds
inc
sbb
lods
inc
adc
loope
jns
sar
cli
ret
xchg
mov
imul
inc
aaa
lock
sbb
jg
sub
sti
aas
xchg
fdivr
(bad)
jl
lea
shr
and
adc
cwde
sub
pushf
xor
pop
enter
xor
add
test
pop
mov
jae
and
outs
push
int3
nop
add
add
jae
pop
lahf
or
cmp
das
call
aaa
rol
lods
adc
pusha
lods
fs
cmp
push
adc
retf
(bad)
jmp
sbb
mov
add
mov
sbb
cmp
sbb
js
push
dec
sar
pop
rcl
shl
push
sub
and
mov
inc
les
mov
pop
lahf
mov
fs
mov
sub
xlat
mov
push
cli
lahf
xor
fimul
or
cmp
(bad)
jg
push
mov
call
xlat
jnp
popf
ss
ins
fs
mov
scas
mov
push
and
add
mov
xor
sbb
adc
xchg
xor
dec
jle
daa
add
inc
add
mov
popa
inc
imul
pop
mov
xchg
fwait
jg
out
stos
mov
test
adc
fcomp
pop
add
xchg
data16
add
daa
jl
or
ja
dec
loope
xchg
mov
ss
rol
inc
inc
icebp
movs
add
cmp
dec
push
add
pop
pushf
jg
or
test
and
outs
pop
mov
addr16
outs
sbb
or
cmp
fcom
mov
cmp
sar
in
push
jne
mov
(bad)
(bad)
pop
in
fistp
mov
sbb
sub
lock
mov
inc
xchg
and
fld
in
or
sbb
cmp
daa
cs
sub
icebp
mov
sbb
rol
jmp
add
imul
ret
dec
fadd
sub
jno
fsubr
dec
adc
jns
cmps
mov
jb
add
test
push
cmps
dec
test
test
sub
and
or
loope
push
hlt
sbb
imul
fld
inc
cmp
lahf
sub
add
cmp
int3
pushf
pop
adc
pop
push
rcr
cmp
mov
imul
xchg
xchg
call
mov
mov
xchg
mov
cmp
push
push
cmp
pop
iret
and
push
or
sbb
sbb
jmp
push
push
mov
xchg
adc
stos
ins
imul
push
fist
es
push
enter
out
or
push
cmps
mov
jne
inc
aaa
leave
aaa
add
div
xor
sbb
push
icebp
or
cmp
fcom
jl
mov
sbb
sbb
jbe
push
popf
sbb
sbb
sbb
fld
jns
imul
stc
add
sbb
es
adc
mov
cmp
adc
mov
and
and
inc
pop
xor
pop
mov
shl
(bad)
mov
jne
(bad)
std
pop
rcl
jecxz
or
or
jmp
test
xlat
clc
push
mov
pop
jl
fidivr
push
sbb
rcl
int
xor
jle
adc
outs
push
ret
inc
ss
(bad)
test
adc
das
push
sub
jle
inc
cmp
xlat
and
mov
and
xchg
push
adc
mov
mov
ja
and
inc
pop
lea
ja
xor
sbb
add
add
ja
mov
outs
shr
nop
lahf
and
push
sbb
jnp
fs
out
aaa
lods
dec
rcr
push
outs
popf
add
inc
dec
jle
inc
push
xor
jl
push
pop
fmul
xlat
sub
mov
out
xchg
ins
mov
xchg
dec
aaa
lock
cli
inc
and
xchg
dec
sahf
sti
xchg
xlat
test
aam
sbb
push
sbb
rcl
loopne
and
shl
mov
cmp
jo
pop
ins
div
adc
or
scas
aad
mov
fadd
arpl
mov
sub
push
les
adc
inc
test
dec
cmp
add
push
fmul
clc
inc
mov
shl
cwde
add
or
movs
xor
or
setb
nop
imul
add
mov
add
out
aad
add
pmaxub
and
movs
fiadd
inc
pop
retf
ss
mov
jae
xor
je
or
adc
pop
add
or
pop
push
adc
cmp
pop
sti
push
jo
shr
push
mov
sub
cmp
shr
fmul
add
retf
(bad)
inc
sbb
xchg
dec
fucom
pop
jb
or
gs
aam
xchg
out
or
ret
nop
dec
sbb
pop
cmp
cmp
test
adc
add
hlt
push
pop
push
in
add
adc
xor
pop
adc
in
retf
jg
test
mov
adc
adc
or
test
lock
xchg
test
jo
add
loope
ror
pop
test
icebp
test
mov
inc
or
aam
in
test
fmul
push
pop
daa
lods
xchg
mov
dec
cld
xor
dec
pop
loopne
ret
test
out
push
and
add
jnp
js
(bad)
sub
push
adc
pop
push
nop
pop
(bad)
push
jp
or
mov
ja
adc
or
mov
sbb
sbb
in
mov
sub
retf
push
ins
es
adc
sub
rol
data16
add
adc
out
pop
pop
out
jne
dec
das
mov
jp
xchg
retf
sbb
or
repnz
push
not
pop
jae
jmp
mov
mov
test
or
sbb
popf
lods
push
and
sub
imul
jb
(bad)
aaa
or
sub
mov
cmc
or
or
xchg
aaa
mov
dec
jne
jae
or
adc
pop
xchg
mov
push
shl
or
les
xor
dec
sub
(bad)
mov
dec
scas
cwde
je
rcl
popa
inc
stc
sahf
add
add
dec
retf
cmp
mov
ret
push
sbb
in
adc
or
inc
inc
pop
cmps
and
add
sbb
adc
mov
or
test
add
xor
retf
stos
lahf
je
std
cmp
shl
adc
dec
mov
test
nop
and
pop
xchg
mov
loope
leave
les
in
and
adc
sub
add
mov
fcomi
mov
sbb
int3
cmp
scas
jo
pop
mov
stos
mov
sar
xchg
or
rcl
jne
pop
bnd
cmp
dec
dec
hlt
lock
mov
repnz
add
test
sbb
or
jbe
(bad)
fidivr
pop
sbb
dec
dec
xchg
pop
jmp
lahf
ror
inc
or
movs
lods
(bad)
xchg
sbb
sub
cli
cld
outs
mov
clc
mov
and
add
cmp
cmp
hlt
dec
enter
pop
dec
pop
inc
data16
inc
sub
or
nop
stos
pusha
leave
inc
pop
cmp
mov
cdq
jbe
xor
push
nop
jne
(bad)
retf
mov
ss
push
and
xor
mov
pop
push
pop
js
or
sbb
data16
fadd
call
xor
enter
aam
pop
imul
gs
xchg
inc
das
aaa
push
mov
aaa
outs
pop
jp
outs
ds
adc
mov
dec
dec
inc
loope
inc
push
pop
push
pop
in
xor
bound
add
push
dec
fs
inc
and
clc
aaa
push
dec
test
fidiv
adc
xchg
into
and
or
xor
xor
mov
nop
mov
popa
in
mov
rcl
sbb
arpl
pop
xor
adc
test
jo
dec
mov
add
lock
xor
or
daa
inc
ret
xchg
inc
cmp
in
jbe
jne
push
inc
inc
inc
jge
mov
mov
mov
inc
add
adc
sbb
jl
xor
loope
ret
fistp
add
ins
or
or
mov
push
jb
lea
mov
adc
and
into
jl
pop
pop
inc
inc
dec
push
maskmovq
test
add
dec
leave
and
mov
or
or
cmp
mov
xor
pop
mov
arpl
int
or
cmp
push
adc
mov
dec
xor
or
mov
fs
clc
jo
gs
xor
xchg
mov
xchg
mov
dec
jne
icebp
mov
jmp
mov
lea
cmp
jne
sbb
out
cmp
xchg
(bad)
cmps
inc
add
jmp
in
sbb
test
dec
mov
push
mov
scas
imul
cmp
sub
nop
test
jecxz
xchg
xchg
scas
dec
jo
fisubr
pop
add
push
mov
hlt
dec
hlt
and
mov
ins
arpl
aam
mov
fs
outs
call
mov
js
ret
hlt
jl
(bad)
daa
retf
sar
mov
push
fdiv
adc
pop
push
loop
push
leave
inc
cmps
or
xor
push
mov
rol
or
outs
hlt
rcr
fs
and
cld
or
pushf
inc
add
pop
pusha
lods
ss
xchg
jo
and
cmp
push
cmc
cmp
pop
test
in
les
inc
jle
and
xchg
mov
xor
call
inc
push
jo
repz
jge
aam
add
mov
cmp
xor
push
add
enter
or
add
or
adc
pop
sbb
ror
cwde
pop
xor
fisttp
jne
(bad)
mov
add
test
xor
rol
sahf
push
mov
test
scas
mov
xchg
sbb
jg
bswap
mov
add
ret
inc
je
sbb
add
ror
or
add
and
cli
pop
mov
add
and
mov
add
xor
test
mov
xchg
std
jle
test
and
mov
add
add
push
or
or
lock
sub
fstp
in
add
xchg
mov
inc
pop
sbb
and
mov
xchg
or
movlhps
arpl
(bad)
pop
or
das
and
(bad)
cmps
adc
add
sub
push
ret
mov
cmp
dec
jmp
cdq
xchg
stc
imul
in
mov
cwde
(bad)
adc
pop
scas
or
mov
ins
or
lock
or
mov
data16
mov
js
jo
or
ss
bound
sbb
jmp
(bad)
cmp
lods
loopne
rcr
ss
push
jle
daa
out
adc
inc
popa
inc
jge
jp
jge
adc
call
jl
sbb
inc
dec
outs
mov
xor
out
and
inc
xchg
push
les
call
pop
je
movs
mov
jecxz
push
fild
xor
aaa
ja
push
or
and
push
or
aaa
xor
cmpps
lea
inc
call
call
push
mov
mov
jae
lahf
fistp
pop
cmp
push
and
add
pop
inc
and
fist
add
add
inc
pop
dec
aam
or
push
or
lea
and
add
add
pushw
adc
test
pusha
ja
sbb
ret
inc
arpl
ins
adc
sbb
adc
push
or
lea
or
mov
test
push
nop
out
cld
xor
sbb
adc
pop
ja
pop
and
mov
clc
push
test
imul
jmp
sbb
cwde
cmp
jo
aas
aam
pop
adc
add
mov
inc
push
mov
dec
fwait
add
ins
add
cmps
retf
pop
jbe
xlat
rol
shl
or
adc
mov
jg
xor
add
scas
inc
xchg
adc
and
add
and
and
je
or
and
cmps
or
mov
xchg
mov
pop
mov
pop
fdiv
sub
sbb
and
in
inc
add
(bad)
inc
inc
call
aad
push
aam
push
adc
jne
xchg
aaa
xor
push
adc
ret
clc
pop
ins
bound
push
addr16
stc
rcr
sar
je
mov
dec
push
in
test
add
test
cmp
sub
inc
and
lea
les
adc
mov
gs
enter
xor
cmp
and
lods
add
ror
and
idiv
popa
adc
or
test
popa
shl
test
inc
inc
fistp
rol
mov
push
push
inc
add
add
pop
cmp
push
xchg
dec
enter
sub
retf
lock
mov
inc
lock
lahf
inc
jae
xrelease
inc
push
jb
cld
mov
push
hlt
xor
test
icebp
cmp
push
in
das
or
ja
movs
mov
push
sbb
hlt
inc
enter
mov
lods
sbb
push
xchg
jno
pusha
ds
push
push
nop
xchg
mov
xor
leave
retf
sbb
inc
ins
add
ret
mov
xchg
mov
xor
cmp
int
arpl
xor
lds
shl
push
adc
(bad)
push
add
xchg
sub
nop
addr16
push
jno
arpl
inc
cmp
xor
mov
in
mov
es
sbb
into
clc
or
inc
(bad)
and
repz
into
call
in
in
inc
fsub
fsubr
fs
or
mov
adc
retf
mov
inc
(bad)
pop
xor
aaa
rcl
mov
lock
test
js
adc
mov
iret
xor
cld
xchg
out
ret
rol
fs
jecxz
fdiv
jl
sar
pop
and
lock
addr16
iret
pop
dec
adc
fidiv
push
mov
fwait
or
movs
sub
in
in
ret
and
lea
fs
adc
call
mov
call
push
jns
dec
repz
(bad)
call
in
repz
cmp
mov
lock
ret
aam
sbb
movs
popf
mov
pop
cmp
add
sbb
shl
or
(bad)
mov
and
mov
clc
xor
(bad)
ja
sbb
or
cdq
dec
sbb
fisubr
inc
mov
mov
add
jne
mov
and
sbb
movs
xor
jo
pop
fadd
sub
and
xchg
aaa
jp
push
jmp
push
cmp
pop
repnz
lea
fcmovne
adc
in
push
test
inc
(bad)
in
push
fs
js
cmp
or
aas
inc
nop
jns
and
retf
cmp
pop
cmp
xchg
adc
psrlw
aaa
or
inc
cli
fucomi
sahf
dec
mov
loopne
adc
clc
jb
inc
pop
imul
jo
xchg
inc
cmp
rcr
(bad)
popf
jmp
xor
cwde
or
mov
call
push
mov
inc
mov
jle
mov
test
dec
lods
dec
out
movs
cmp
stc
and
leave
clc
cli
sub
rcr
add
cwde
push
mov
je
jne
sti
test
jg
repnz
dec
mov
inc
sti
xchg
(bad)
mov
out
arpl
xchg
jb
xor
and
jp
add
add
nop
push
retf
retf
sbb
jbe
test
adc
xchg
cmps
mov
push
xchg
scas
sbb
push
mov
inc
int
xor
test
inc
jmp
pop
std
fs
or
into
pop
push
movs
gs
retf
shl
inc
inc
add
mov
shl
add
shl
xchg
shl
(bad)
adc
sar
test
inc
sub
imul
lea
sub
cld
jecxz
test
mov
loopne
cli
outs
jmp
sbb
xchg
std
sub
ret
outs
cld
je
or
jne
push
add
dec
test
add
sbb
test
mov
test
xor
lods
fst
icebp
push
jne
mov
movs
sbb
call
adc
rcr
lds
mov
cs
push
pusha
dec
and
adc
pop
add
ins
gs
cmp
add
lock
sbb
ins
jmp
sbb
pop
xor
adc
es
push
jb
add
dec
pop
dec
xchg
sub
shr
test
xor
sub
push
icebp
pop
fild
xchg
(bad)
pop
push
adc
imul
cs
or
lock
rcl
(bad)
cmp
pop
sub
sbb
mov
in
fwait
sahf
je
fxtract
fxch
fistp
fld1
fchs
inc
pop
ja
push
fscale
(bad)
fstp
pop
js
mov
xchg
cmp
dec
sbb
xchg
test
jae
dec
mov
arpl
(bad)
loope
add
popf
shl
fcom
jne
fistp
xor
fisttp
rcr
push
bound
inc
push
movs
fmul
cs
fdiv
fstp
rol
lods
ins
jge
cmp
icebp
jmp
ss
pop
mov
rcl
jge
fmulp
or
pop
mov
pop
add
push
adc
sahf
jae
rcl
jg
cli
or
sbb
xor
and
sti
xchg
outs
adc
lock
(bad)
lock
das
mov
add
popa
out
retf
ret
scas
adc
jbe
inc
sbb
stos
aas
test
sbb
shl
sbb
hlt
xchg
cmp
leave
out
sub
jecxz
shl
rol
inc
add
jb
sub
mov
sar
add
add
add
adc
and
inc
add
add
push
push
fadd
dec
sahf
outs
lock
adc
pop
mov
mov
push
movs
lock
add
inc
out
popa
add
add
dec
ins
sub
es
xor
movs
sub
and
or
inc
ficom
inc
inc
xchg
push
jl
add
add
aam
inc
sbb
mov
ficom
cmc
cwde
ds
in
into
jg
cmps
add
mov
es
xchg
xchg
outs
inc
xor
call
popa
in
pop
shr
or
out
add
xor
retf
jb
inc
sub
gs
sub
inc
pop
cdq
or
stos
inc
or
or
cmp
outs
mov
inc
and
jbe
cmp
mov
sahf
pusha
or
dec
add
add
inc
adc
cmp
mov
daa
fs
mov
add
and
or
add
(bad)
jmp
pop
fdiv
(bad)
aas
rol
fcmovu
ins
aas
xor
loop
in
jb
test
add
xchg
inc
in
pusha
mov
adc
in
ins
and
test
lods
iret
adc
shr
fwait
cmp
shl
lods
rcl
dec
pusha
sub
push
daa
or
push
inc
xor
movs
adc
es
mov
push
push
dec
jb
lock
sbb
mov
movs
sar
jns
fnsave
inc
jns
adc
inc
push
sub
lods
sbb
pop
or
push
mov
pop
ins
add
aam
mov
dec
in
stos
add
add
mov
dec
loope
sbb
addr16
push
shld
pop
jecxz
jge
mov
add
jo
or
adc
aaa
add
adc
or
dec
push
jecxz
pop
enter
cwde
push
bswap
or
loopne
dec
adc
or
cmp
dec
mov
and
adc
movs
sbb
out
sub
rol
sbb
cwde
test
add
jp
dec
or
test
and
test
fmul
test
scas
mov
and
gs
aaa
jae
push
cwde
mov
mov
and
mov
cmp
push
and
fcmovnbe
test
in
cmp
movzx
pop
ret
xchg
push
adc
mov
inc
bnd
add
push
dec
push
icebp
mov
pop
inc
fdivr
xor
lock
xor
or
ja
lods
inc
add
jne
clc
ret
xchg
xor
or
repnz
ret
push
lahf
outs
adc
and
movs
mov
xchg
adc
inc
jmp
test
inc
fisubr
mov
inc
inc
inc
lock
lahf
inc
lock
inc
jb
das
std
mov
cmp
xor
pop
lahf
inc
in
and
add
and
sbb
inc
cli
movs
test
fbld
or
and
mov
cmp
cmp
nop
sbb
push
or
push
pushf
sbb
xchg
inc
(bad)
nop
sub
inc
add
ror
pop
pop
mov
add
jbe
dec
cdq
cmp
test
add
mov
cmp
jge
adc
or
mov
mov
jnp
sbb
fwait
shl
pop
in
imul
adc
dec
jae
or
je
or
or
cmp
xchg
or
or
js
and
add
loope
retf
nop
jle
retf
sbb
add
in
xlat
stos
scas
mov
inc
add
sbb
rol
mov
adc
(bad)
les
jne
hlt
shl
pop
add
popa
retf
mov
fadd
and
(bad)
loope
rcl
or
mov
dec
inc
leave
pusha
stc
cmp
ret
cmp
xchg
add
jnp
ret
and
xor
add
(bad)
jmp
jl
xchg
in
test
int3
xchg
inc
inc
rcl
sbb
ret
and
push
adc
idiv
out
push
mov
xor
imul
jge
in
dec
push
push
dec
jb
iret
adc
adc
inc
mov
loopne
mov
and
cmp
add
lea
xchg
cwde
add
nop
mov
stc
dec
(bad)
mov
adc
and
or
and
and
xor
movs
inc
rol
bound
ins
fld
mov
mov
cmp
call
xchg
or
push
add
fidivr
mov
push
cmp
cmp
pop
ja
ficom
daa
and
shl
xor
push
sub
xor
sub
loopne
xor
call
sub
inc
pop
xchg
lods
stos
pop
cmp
sar
or
in
mov
or
xor
push
repnz
or
cmp
pop
or
fst
cmp
xor
adc
mov
or
push
lock
xor
test
and
out
cmp
pop
or
push
les
div
mov
imul
and
xor
and
nop
cmps
xchg
inc
push
mov
lds
jo
cmps
and
nop
stos
cs
and
call
sbb
jne
mov
fidiv
loopne
pop
inc
adc
xchg
jne
aam
nop
ins
jle
lock
movs
push
dec
xchg
std
rcr
fwait
mov
cs
mov
cmp
push
dec
add
imul
sbb
push
cs
push
popf
aaa
call
enter
adc
sbb
pop
shl
sbb
lea
xchg
mov
dec
outs
add
js
push
sbb
xor
push
adc
or
push
add
xor
sbb
mov
out
inc
sub
sub
jae
les
(bad)
ins
cmps
aad
sbb
add
daa
rcl
or
mov
arpl
repz
popa
inc
sbb
out
adc
dec
add
add
(bad)
xchg
cmp
aad
mov
fild
push
sub
sub
jae
stos
jne
imul
lods
ret
(bad)
(bad)
cmp
les
add
pop
and
mov
push
pusha
mov
sub
retf
xchg
mov
xor
scas
test
fild
and
sub
pop
or
arpl
and
cmp
int
jge
fadd
repnz
ja
clc
mov
ja
nop
push
sub
mov
xor
fwait
ja
mov
or
or
xchg
xchg
mov
hlt
xor
push
dec
jmp
push
or
push
cmp
jg
add
mov
sub
inc
(bad)
shr
nop
push
(bad)
pop
lahf
inc
adc
xchg
xlat
scas
icebp
inc
cmp
ss
sub
jle
xchg
jl
xchg
out
sbb
aam
cwde
in
(bad)
or
and
and
sysenter
js
clc
adc
mov
or
add
sub
loopne
rcl
popa
xchg
mov
lahf
popa
or
inc
outs
add
cdq
mov
sub
inc
sbb
jg
sar
ins
(bad)
sub
cmp
dec
fwait
push
dec
xchg
xchg
div
pop
pop
cmp
sbb
mov
xor
pop
jo
push
jae
push
(bad)
into
hlt
xchg
mov
js
loope
out
cmp
fisttp
add
pop
shl
daa
mov
and
idiv
fiadd
sbb
and
outs
and
xchg
call
cli
push
and
fild
fld
push
aam
leave
push
push
sbb
pop
add
fcom
adc
sar
repz
jmp
or
push
sub
sbb
gs
in
gs
add
mov
icebp
aas
ficom
adc
sar
xchg
setg
nop
aaa
xchg
mov
push
popf
call
test
bound
jecxz
lods
pop
dec
cmp
jmp
cwde
or
bound
add
mov
fidiv
jo
push
xchg
test
nop
fsubr
sbb
and
push
in
xchg
mov
test
mov
dec
pop
inc
push
in
movs
sti
fld
add
mov
(bad)
in
hlt
add
add
(bad)
mov
pushf
xchg
aaa
sahf
push
repnz
pop
push
sub
mov
enter
scas
bswap
push
mov
popf
call
gs
ja
pushf
inc
and
test
rcl
xchg
adc
sub
pop
inc
adc
lahf
and
out
and
ss
rcl
dec
jne
je
hlt
mov
nop
scas
nop
(bad)
mov
mov
mov
xor
mov
leave
retf
les
mov
aas
inc
xor
and
inc
fmul
xchg
retf
ins
add
and
jo
rcl
jne
les
es
sub
popa
add
shl
gs
push
xchg
adc
push
sbb
and
mov
adc
mov
cmps
jbe
push
mov
mov
daa
das
sub
adc
mov
mov
pop
and
movs
out
imul
dec
cmp
xchg
jmp
xor
test
inc
js
xor
mov
xor
aam
rol
jg
ja
aaa
dec
loope
mov
cmp
jo
jl
add
movs
test
add
idiv
add
jl
or
imul
xchg
pop
sti
xor
fcomp
data16
test
enter
lock
ins
clc
fsubp
adc
or
ret
ret
adc
loope
ret
inc
mov
adc
or
mov
xor
cmp
or
mov
or
push
dec
and
data16
mov
inc
(bad)
fsubr
sub
fidivr
sub
test
fadd
mov
test
cwde
gs
outs
arpl
mov
call
pop
or
pusha
jg
mov
repz
lgdtd
mov
add
inc
imul
test
jg
test
cmp
sahf
pop
jg
mov
inc
imul
lds
gs
cmp
mov
mov
inc
nop
mov
pop
and
enter
inc
mov
adc
mov
icebp
pi2fd
jl
cmps
outs
adc
addr16
mov
mov
push
jne
mov
and
aaa
mov
or
add
lds
push
aas
movs
push
lahf
jo
cmp
les
xchg
xchg
add
add
stos
mov
pop
sub
imul
or
inc
dec
dec
pop
sbb
lahf
add
push
push
pushf
arpl
dec
xor
das
in
mov
and
inc
or
mov
cmp
mov
and
xlat
pop
pop
leave
xchg
rol
mov
out
hlt
mov
lods
cdq
cwde
shr
ss
or
inc
repz
pusha
xor
mov
sub
sbb
adc
xor
fisub
ins
ins
sub
adc
out
push
xchg
jecxz
test
xchg
inc
dec
xchg
push
bound
dec
inc
jno
add
or
je
push
add
in
inc
aaa
sar
aaa
fst
sub
je
cmps
mov
sbb
inc
(bad)
mov
push
push
push
(bad)
inc
mov
push
adc
mov
sub
jp
movs
jno
pop
inc
cmp
mov
(bad)
cmps
or
cdq
or
sbb
mov
xor
or
xchg
ret
sub
mov
push
or
push
inc
ins
add
mov
test
sar
push
push
jnp
dec
outs
cli
(bad)
cmc
mov
out
int
int
int3
mov
stos
mov
and
push
test
inc
mov
fdiv
and
add
mov
out
mov
bt
and
add
mov
mov
mov
clc
enter
or
mov
xor
mov
or
xchg
dec
cmc
sub
dec
inc
dec
test
mov
jl
dec
and
cdq
test
loop
mov
shl
xchg
pop
inc
loop
pop
cmp
sub
inc
sti
adc
inc
mov
ds
imul
fwait
das
cmp
sbb
mov
ins
idiv
pop
push
jno
cmp
add
mov
cmps
add
jl
clc
add
call
(bad)
lock
xchg
cs
fisub
xor
iret
push
sar
nop
xor
(bad)
mov
inc
clc
jne
and
or
jmp
loopne
shl
pop
dec
gs
xor
sbb
jg
out
xor
fucomi
pop
inc
fsub
inc
jno
push
push
rol
adc
test
cmp
push
or
push
push
push
mov
ins
sbb
cmp
clc
fcmovnu
aaa
add
sbb
jl
(bad)
imul
fdiv
fcomp
ror
sar
adc
dec
(bad)
and
add
retf
add
sub
sbb
add
adc
add
or
inc
mov
mov
sbb
adc
pop
ins
mov
outs
push
mov
inc
test
pop
pusha
mov
mov
(bad)
outs
jae
cli
ret
cmp
push
mov
add
mov
(bad)
mov
jo
dec
sub
cmp
mov
lods
sbb
aad
inc
shr
lods
cld
and
adc
test
xchg
xor
cmps
data16
cmps
out
jno
pop
xor
fld1
cmp
push
sub
jne
jmp
cld
sbb
push
xor
call
iret
mov
mov
sub
mov
cmp
rol
pop
and
mov
les
adc
and
ror
sub
ins
inc
lea
mov
pop
fisubr
or
daa
dec
mov
sub
rcr
jmp
mov
jmp
add
add
sub
into
movs
call
fst
push
mov
inc
idiv
sub
sub
ror
or
pop
adc
dec
je
popa
ins
pop
mov
popa
and
loop
adc
add
test
push
sbb
jbe
push
pop
or
sub
xor
packssdw
push
ret
push
cmc
push
mov
(bad)
jmp
push
dec
mov
ds
inc
ins
adc
daa
mov
inc
enter
mov
push
sub
or
push
pop
mov
and
sar
xor
jge
and
mov
add
icebp
hlt
or
mov
movs
jb
adc
(bad)
repz
jmp
or
or
jmp
add
adc
adc
dec
loope
jg
push
adc
js
xchg
jle
jmp
sbb
jne
push
dec
mov
imul
sbb
pop
sbb
(bad)
or
dec
or
shr
(bad)
jb
jmp
add
adc
je
or
push
jmp
fcmovu
xchg
les
(bad)
adc
and
je
and
push
inc
add
add
pop
ret
inc
push
mov
mov
cmps
xchg
cli
loope
sub
aas
scas
jl
add
scas
adc
call
jmp
push
xchg
int3
pop
pusha
rol
sbb
pushf
cmps
pop
mov
call
pop
mov
das
imul
xor
dec
call
add
clc
jbe
fsubr
jp
push
jg
mov
adc
mov
aaa
add
repnz
inc
dec
out
cdq
(bad)
cmp
and
gs
pop
mov
shl
shl
pop
ss
sbb
sahf
loope
les
leave
mov
daa
cdq
je
push
adc
mov
call
mov
cmp
js
scas
jns
push
mov
sbb
or
mov
fdiv
test
aad
mov
add
pop
and
mov
xchg
or
call
cwde
push
mov
add
popa
mov
or
nop
dec
jmp
jle
add
mov
outs
add
clc
push
clc
or
test
mov
jmp
push
adc
xor
(bad)
loopne
stc
jno
clc
mov
punpcklbw
iret
div
loopne
sbb
jmp
idiv
ss
add
xor
adc
popa
and
add
imul
jo
ss
jmp
ins
or
inc
jo
add
add
sub
xlat
arpl
cmps
retf
xchg
ss
sbb
es
arpl
sbb
(bad)
xlat
sbb
jb
mov
cmps
cs
scas
dec
neg
call
inc
sub
hlt
daa
inc
jl
(bad)
imul
mov
pshufw
mov
adc
sbb
sub
sbb
or
loope
imul
or
push
call
es
or
out
ror
add
aam
sbb
call
mov
pop
jmp
inc
push
(bad)
jne
cmp
xchg
gs
hlt
push
in
sub
ret
ds
push
or
aaa
mov
cmps
mov
adc
mov
or
push
imul
jno
push
cdq
xchg
js
dec
cs
gs
gs
retf
les
push
mov
sub
mov
push
jnp
mov
push
inc
jmp
push
mov
jo
xor
mov
sahf
xor
push
dec
test
sub
inc
aam
xor
add
pop
or
mov
in
popa
call
test
arpl
sbb
or
sub
ffreep
add
add
xor
fdivr
sbb
das
add
sbb
mov
inc
adc
fistp
retf
mov
or
inc
pop
mov
dec
mov
cmp
push
mov
mov
sub
js
jge
mov
and
mul
movzx
add
imul
lahf
mov
ret
add
retf
out
or
lock
lea
repz
sub
outs
js
mov
nop
push
mov
lods
retf
adc
lods
and
sub
loope
mov
push
or
inc
mov
nop
adc
scas
cld
pop
inc
rcl
inc
aas
dec
or
push
cmp
and
dec
sbb
les
pop
(bad)
mov
sbb
jbe
lahf
dec
and
jb
mov
sbb
push
aas
jae
test
(bad)
push
rcl
or
fnstsw
out
and
in
fisttp
pop
and
or
sub
add
or
jns
add
movs
mov
push
loopne
adc
push
and
sbb
loope
ds
or
add
jae
add
rcl
aas
and
pop
test
add
int
or
push
or
(bad)
or
mul
inc
pop
and
ficomp
sbb
sbb
test
(bad)
pop
or
into
sbb
aas
xchg
jae
cmp
lods
lods
addr16
adc
(bad)
mov
add
ds
and
iret
repz
inc
mov
repnz
add
call
inc
mov
or
leave
xchg
xchg
xchg
jl
aam
add
add
sbb
jle
mov
adc
shr
xor
nop
shl
nop
cmps
and
in
mov
push
sbb
retf
lods
pop
push
push
push
xchg
sub
push
fcmovu
add
ret
or
jo
adc
repnz
cmp
add
cs
and
push
mov
inc
adc
adc
daa
dec
pop
hlt
imul
loope
or
daa
mov
sub
mov
scas
inc
std
movs
pop
mov
std
sti
outs
and
js
fincstp
sub
xor
(bad)
loopne
(bad)
mov
scas
(bad)
xchg
xchg
movs
scas
jbe
jmp
repz
js
sti
cmp
adc
xchg
adc
jns
push
mov
leave
retf
shl
(bad)
adc
inc
aas
push
sub
shr
jb
cmp
cmp
and
test
call
(bad)
cmp
jb
mov
mov
inc
inc
rep
cmp
sub
imul
and
enter
sub
add
mov
repnz
aaa
clc
mov
push
xchg
add
mov
sbb
dec
sahf
mov
add
dec
rcr
mov
leave
xchg
pop
mov
gs
add
add
jmp
cld
in
addr16
xor
movs
xchg
mov
pop
and
xchg
mov
jnp
mov
(bad)
push
shr
lods
sbb
pop
adc
and
add
scas
repnz
dec
jmp
add
test
jbe
mov
in
mov
js
sbb
push
into
pop
push
arpl
push
push
or
push
cmc
pop
sbb
xor
test
adc
pop
push
xchg
mov
xchg
add
pop
jo
xchg
ins
movs
add
leave
xor
ss
test
dec
pop
jo
movs
and
dec
cmp
mov
push
add
add
and
mov
cmp
sbb
adc
adc
and
push
dec
inc
test
add
inc
repnz
imul
ins
or
add
inc
xchg
adc
xlat
imul
mov
add
sbb
les
sub
xlat
inc
mov
(bad)
mov
mov
jmp
fmul
cs
pop
sub
sbb
mov
imul
push
xor
gs
add
cld
pop
ror
mov
hlt
aam
jnp
add
and
jmp
xchg
xor
pop
jmp
jg
movs
pusha
enter
cmp
mov
out
add
adc
rcr
leave
les
sub
popa
jne
aam
cmp
jb
loop
xlat
inc
fcom
fcom
mov
inc
rcl
addr16
xchg
jmp
mov
(bad)
and
mov
ret
pop
xlat
xlat
popa
jno
dec
aas
or
pop
fadd
cs
push
cmps
cs
dec
and
jns
cdq
data16
lahf
aaa
movs
push
adc
xor
pop
and
and
imul
lea
lahf
add
in
jbe
pop
mov
call
sbb
je
adc
jmp
xor
mov
(bad)
out
and
adc
shr
inc
pop
push
jmp
or
movs
cwde
in
test
test
std
jbe
inc
out
mov
xor
mov
mov
push
aam
clc
mov
neg
mov
sub
test
jnp
js
add
stc
xchg
sub
imul
and
add
sub
xor
ins
push
mov
out
or
imul
mul
(bad)
xor
inc
mov
call
push
fcomp
xor
aam
xor
add
movs
imul
mov
dec
int3
int3
xor
imul
adc
les
rcl
rol
pop
mov
shl
cmp
icebp
pop
(bad)
frstor
pop
js
xchg
pop
(bad)
fcmovbe
push
mov
out
(bad)
loop
push
fcmovne
repz
xor
stos
movups
push
iret
adc
adc
iret
pop
add
and
add
inc
cmps
fs
call
push
fsubr
or
xor
fadd
cdq
inc
jmp
xor
ror
adc
dec
cmps
xchg
(bad)
push
push
shl
(bad)
jmp
add
outs
retf
xchg
or
not
add
add
int3
inc
jbe
xor
enter
push
pop
xor
enter
or
mov
mov
movs
cmp
jae
test
movs
mov
mov
leave
movs
cdq
cwde
cwde
cwde
xchg
xchg
xchg
dec
xor
nop
nop
nop
xchg
inc
call
xchg
xor
test
call
fst
sahf
push
out
rol
jns
out
mov
fwait
xchg
sbb
sbb
int3
adc
pop
or
or
sbb
pop
pop
adc
xor
adc
jbe
pop
add
add
fmul
dec
adc
pop
stos
adc
sub
add
cld
push
shr
or
test
sub
adc
ror
ins
or
dec
sti
out
adc
or
push
adc
xchg
mov
je
je
push
cs
pop
jo
adc
pop
jb
cs
ins
ins
adc
adc
movs
push
mov
fs
mov
pop
pop
push
mov
sub
adc
rcr
mov
pop
push
sbb
bound
push
adc
test
or
add
inc
loopne
or
dec
clc
sub
psllq
daa
mov
(bad)
in
maskmovq
test
loopne
sub
mov
or
into
and
xchg
or
daa
adc
jge
rcl
or
and
mov
and
outs
sbb
(bad)
or
scas
call
mov
jbe
pop
push
aaa
popa
push
or
sub
add
inc
or
dec
repz
cdq
adc
push
push
fild
jmp
or
cmp
push
ret
push
mov
cmps
sub
dec
push
jbe
pop
add
push
das
or
add
pop
mov
xchg
cmp
pop
cmps
mov
loop
xor
or
out
(bad)
mov
fucomi
sub
and
or
dec
repnz
rcl
pop
and
sahf
or
or
aad
and
lods
loop
push
stos
inc
cmp
dec
xchg
or
push
leave
adc
dec
aaa
cld
ins
lods
and
and
call
sub
jmp
retf
jb
add
lahf
mov
mov
cwde
inc
and
cld
mov
and
test
pop
dec
stos
xor
cli
dec
fs
lea
retf
(bad)
dec
add
add
sahf
jp
add
and
int
sbb
pop
inc
(bad)
call
cwde
sbb
xchg
mov
pop
sbb
pop
rcl
sub
lods
add
(bad)
lea
mov
aam
aam
or
jle
and
mov
add
clc
addr16
mov
test
add
and
in
xbegin
inc
or
dec
adc
adc
sub
inc
jge
sbb
adc
jl
or
mov
add
push
imul
leave
dec
add
pusha
sub
movs
add
xchg
aas
jbe
add
div
jb
or
xor
repnz
test
jbe
shr
push
adc
lea
int3
mov
or
mov
sub
pop
inc
push
nop
out
sbb
shl
imul
pop
mov
test
dec
inc
psllw
lea
adc
test
mov
xchg
add
ja
mov
lods
cmp
shl
dec
mov
movs
cmp
mov
xor
jns
mov
adc
retf
jg
stc
stos
(bad)
arpl
inc
mov
mov
push
test
rcl
xor
lods
add
test
xchg
push
mov
pop
pop
in
shl
cmp
mov
dec
adc
jmp
cmps
les
mov
or
pop
push
cvtps2pd
and
xlat
mov
xchg
or
jns
aad
mov
daa
inc
jl
add
and
push
add
adc
int
dec
and
xor
xor
mov
sub
lods
inc
xchg
mov
in
sbb
or
movs
dec
or
pop
or
fsub
or
push
adc
sub
sub
lahf
xchg
hlt
adc
cmp
imul
int
call
lahf
aaa
les
jb
dec
add
jge
or
push
adc
sbb
shl
in
xor
inc
add
cmps
pop
mov
or
push
pop
and
or
sti
sbb
xchg
xlat
add
push
add
icebp
mov
arpl
test
inc
xchg
push
and
mov
cli
(bad)
adc
and
sbb
inc
push
call
or
or
inc
dec
push
pop
sbb
jns
or
or
pop
or
pop
push
shl
clc
and
ins
lods
mov
es
jecxz
push
add
jmp
(bad)
push
(bad)
fcmovnb
psubd
jno
in
daa
daa
mov
xor
jg
out
xchg
xchg
xchg
daa
dec
in
pushf
fcmove
leave
leave
enter
(bad)
retf
in
in
cmc
sub
jno
jb
xor
adc
dec
xchg
cmp
sbb
icebp
push
mov
pushf
mov
cli
cmp
dec
inc
sahf
add
popa
stos
lock
daa
and
hlt
pop
test
xchg
cmc
dec
xchg
ffree
leave
leave
enter
mov
rol
cmps
add
and
ins
or
mov
add
aam
add
push
loope
fdivr
bound
xchg
mov
cwde
sti
cmp
fcmovnb
repz
xchg
test
loope
adc
fld
mov
fsubr
cmp
test
inc
add
fimul
add
nop
inc
out
test
fcmove
and
sub
rcr
ins
cmp
stos
movs
ins
dec
mov
xor
or
xor
mov
adc
pop
fst
xor
mov
add
jnp
push
add
add
adc
fidiv
add
pop
xor
ror
adc
and
push
aam
not
in
jo
jae
shr
test
inc
in
popf
test
adc
inc
inc
pop
mov
jae
gs
inc
jmp
adc
inc
inc
ret
add
or
mov
or
inc
nop
adc
push
add
jle
(bad)
dec
add
cmp
pusha
mov
and
mov
jo
xor
and
fnstcw
add
push
sub
ins
mov
in
adc
cmovg
mov
inc
inc
cmp
mov
add
or
aas
add
mov
inc
and
sub
addr16
arpl
arpl
add
mov
es
xchg
sbb
xlat
inc
inc
push
push
ins
add
and
push
push
ror
rol
sbb
out
fdiv
add
xlat
add
and
scas
push
fdivr
push
jno
pop
push
inc
jo
inc
dec
mov
mov
adc
mov
shl
mov
leave
lahf
test
stos
cwde
outs
pusha
sub
push
dec
inc
ret
add
dec
add
movd
mov
jno
xlat
mov
aas
mov
push
push
or
fsub
or
jno
pop
xor
scas
jne
repz
jb
jo
aas
dec
jmp
push
pop
or
stc
xchg
mov
bound
dec
dec
mov
pop
clc
mov
push
outs
(bad)
loopne
cmp
loope
or
out
pop
xor
js
shl
jno
xlat
mov
pop
pop
rcr
xchg
cmovne
xlat
add
cmp
shl
inc
mov
scas
aas
loopne
enter
or
xchg
cmp
sar
scas
and
out
add
iret
mov
mov
ins
loopne
test
les
aas
pushf
xor
dec
add
inc
jo
dec
dec
add
mov
add
add
xlat
xor
jl
add
jnp
jmp
movs
pushf
mov
bound
or
sbb
and
sbb
mov
stos
in
xor
adc
rcl
cdq
dec
loope
add
int
add
fmul
call
test
xchg
cs
sti
inc
pop
inc
xchg
pop
ins
add
dec
add
inc
or
push
push
pushf
call
add
hlt
out
cmovo
pop
or
add
mov
mov
push
push
mov
adc
sbb
lods
popa
or
push
and
in
ret
mov
add
call
add
or
add
push
xchg
push
(bad)
call
iret
pop
or
push
jns
js
cli
neg
enter
(bad)
cmps
or
mov
out
mov
add
mov
cmps
cmp
lea
add
push
or
push
mov
pop
cli
mov
mov
sub
mov
test
cmp
add
ja
sub
mov
sbb
cmp
push
cli
inc
popa
add
dec
and
pop
pusha
push
add
or
jmp
inc
aas
push
sbb
lds
bound
add
sbb
out
sub
ss
add
pusha
add
jbe
repnz
and
adc
clc
add
pop
xor
xlat
pusha
loope
sub
or
or
pop
xor
mov
stc
in
sub
cmp
rcr
mov
add
clc
adc
push
aaa
loopne
pop
mov
jns
loop
out
(bad)
call
lock
mov
sub
push
adc
mov
jle
and
mov
mov
iret
sub
or
xchg
rol
test
js
cmp
xor
mov
es
aaa
xchg
cld
mov
dec
sub
add
lods
std
cdq
test
inc
or
xor
and
fcom
push
cmp
aad
movs
mov
aas
and
cli
xor
fcmovu
sub
mov
int3
std
and
sub
mov
ins
inc
mov
inc
add
push
jle
daa
bound
and
arpl
sbb
sbb
mov
mov
cmp
mov
mov
mov
out
jns
or
or
daa
xchg
pop
add
mov
add
or
fcmovne
inc
push
inc
xchg
icebp
and
iret
les
ins
leave
dec
cld
add
jae
adc
push
push
pop
fwait
out
out
add
sti
into
push
xchg
add
adc
sti
lock
push
je
add
dec
jmp
xor
test
enter
je
mov
adc
dec
mov
test
int3
inc
jne
nop
pop
dec
popf
pop
fwait
popf
movzx
shl
xchg
push
fcomp
dec
cmp
in
(bad)
out
mov
test
xlat
xor
call
mov
dec
clc
in
cmp
test
cli
rcr
and
sbb
out
jns
pop
cmp
(bad)
and
push
loope
adc
nop
out
add
mov
adc
lahf
inc
mov
or
and
daa
pop
mov
or
ds
inc
dec
pushw
or
retf
or
jp
lds
adc
pop
jo
adc
mov
cmp
push
call
jne
add
or
sbb
aam
pop
jae
aad
xchg
and
push
sub
pusha
fdivr
mov
mov
fdivr
dec
fdivr
adc
popa
xchg
hlt
hlt
repz
dec
pop
ins
adc
and
fmul
loope
movs
mov
jno
add
add
(bad)
(bad)
jnp
ret
nop
retf
or
retf
and
inc
mov
push
shl
sub
cmp
mov
pop
mov
push
add
mov
inc
push
sbb
push
push
jae
mov
adc
ret
mov
out
push
dec
push
inc
ss
jbe
add
cmp
mov
cmps
push
inc
adc
push
inc
inc
mov
test
pop
scas
or
adc
inc
fdivr
nop
imul
or
(bad)
int3
adc
pop
lock
or
jb
push
push
ja
ret
or
movs
and
mov
push
sbb
(bad)
fistp
in
in
or
inc
add
int
repnz
stos
(bad)
dec
or
test
cmps
xchg
cli
int
ror
fidiv
jg
mov
pop
int3
pop
cmc
dec
call
test
in
pop
dec
jb
adc
xlat
add
ins
or
popf
adc
adc
mov
sbb
and
push
out
add
je
pop
push
imul
test
mov
xor
xchg
daa
cmp
or
ins
dec
dec
inc
cmp
xchg
(bad)
lds
fsub
jmp
adc
inc
push
xor
and
sub
loop
xchg
pop
inc
cmp
idiv
lea
xchg
or
(bad)
adc
ret
aaa
test
out
test
inc
xchg
mov
add
jo
je
dec
inc
adc
mov
pop
xchg
add
adc
lods
adc
das
mov
jge
cmp
daa
dec
clc
fcomp
arpl
mov
sbb
push
mov
jecxz
ins
mov
in
push
inc
mov
gs
push
mov
loope
scas
je
adc
cmps
xor
push
add
dec
inc
mov
mov
ja
cmp
js
les
pop
das
xor
pop
fwait
cwde
shl
sub
fdiv
sbb
or
xchg
push
(bad)
js
dec
je
movs
jbe
jg
les
adc
mov
movs
dec
cmp
fcmove
retf
xchg
into
hlt
or
mov
repnz
and
fwait
pop
clc
or
shl
addr16
fild
jno
or
sub
xchg
stc
mov
jnp
ds
into
dec
or
imul
sbb
imul
aaa
mov
jge
add
sbb
(bad)
mov
bound
sar
sbb
xchg
mov
xchg
outs
mov
aam
sbb
jmp
mov
cdq
or
fsubr
shl
sbb
adc
push
sbb
mov
lock
out
(bad)
fsub
inc
fnstenv
sahf
rcl
les
mov
dec
inc
std
ret
mov
in
xchg
daa
push
mov
out
sbb
call
pop
and
push
inc
jp
inc
inc
xchg
les
clc
mov
movs
mov
fadd
arpl
fcom
call
fiadd
push
push
(bad)
dec
sub
loopne
jb
adc
sbb
loopne
lock
sub
xchg
sub
arpl
pusha
in
add
mov
int3
xor
and
or
rol
mov
pop
push
(bad)
icebp
adc
in
jne
inc
inc
ss
push
push
sub
ins
inc
jecxz
sbb
out
mov
mov
out
(bad)
pop
nop
ja
push
mov
bt
or
mov
je
dec
jmp
enter
aaa
pop
cmovp
and
arpl
outs
xor
mov
pop
sbb
aad
out
adc
sub
xor
dec
imul
sti
inc
sti
and
out
push
push
mov
movs
mov
shl
sbb
inc
pop
and
pop
xor
dec
add
xchg
jle
inc
inc
lahf
adc
popa
push
pusha
or
pop
sti
inc
ja
ffree
pop
icebp
adc
addr16
sbb
lea
test
or
lods
xchg
pusha
mov
xor
imul
prefetch
or
(bad)
mov
jle
mov
je
xchg
(bad)
mov
push
addr16
ror
and
hlt
imul
rol
mov
mov
retf
mov
hlt
cmp
inc
lods
popa
and
xchg
movs
xchg
inc
mov
or
int3
adc
mov
(bad)
rcl
dec
sbb
pop
xchg
cmp
pop
add
cmp
adc
fnsave
jb
pop
push
add
pop
loopne
push
push
movs
aam
inc
test
push
push
pop
xchg
rcl
fld
mov
xchg
loope
movs
inc
es
lahf
scas
adc
or
or
imul
and
mov
sub
vmwrite
inc
es
adc
sbb
push
push
rol
movs
mov
sti
mov
fadd
sub
sbb
sti
popf
inc
imul
xchg
sub
dec
mov
xor
imul
mov
mov
adc
mov
pop
and
mov
adc
mov
adc
jb
mov
fdiv
nop
pop
cmp
adc
pusha
ret
pop
cmp
pusha
pop
add
pop
addr16
adc
jno
in
pop
mov
cdq
in
and
aaa
jne
sub
pop
adc
outs
add
inc
ret
adc
xchg
jecxz
pop
lods
cwde
push
and
sar
and
mov
retf
mov
inc
sbb
pop
add
push
loop
pop
shl
lea
push
sbb
mov
test
jmp
out
fucomip
mov
movs
repnz
add
hlt
rcl
and
clc
mov
and
pop
sub
sbb
popf
push
inc
enter
sbb
ins
jns
xchg
les
jne
mov
mov
push
xlat
or
call
cmps
popa
fistp
or
aas
aad
or
cmps
jbe
inc
xor
aaa
dec
jmp
fisubr
aaa
or
mov
mov
call
addr16
xchg
lock
lds
push
aas
or
jo
ja
inc
mov
push
inc
or
mov
xchg
jg
fiadd
jnp
jb
dec
inc
lods
jmp
sti
mov
xor
je
push
mov
add
or
pusha
loopne
pop
or
push
add
fwait
inc
sbb
jb
mov
or
jo
jg
pop
inc
push
push
xchg
jo
add
adc
inc
push
adc
jbe
pop
movs
aas
pop
mov
aas
mov
into
mov
push
outs
pop
push
ret
mov
ss
call
ins
xor
cs
cmps
outs
movs
mov
inc
clc
(bad)
xor
dec
pop
jbe
gs
jbe
sub
dec
xor
or
aad
pop
in
add
pop
ins
aaa
sbb
popa
scas
inc
ins
ja
mov
pop
jb
add
ja
cmps
dec
outs
ins
pop
cmps
test
scas
ins
sub
jb
push
mov
ja
inc
xor
jae
or
bound
popa
out
push
pop
mov
dec
push
(bad)
enter
jns
add
push
imul
sbb
(bad)
addr16
fdiv
jo
ja
push
fld
ficom
je
fcmovbe
lock
inc
fwait
out
xorps
sahf
jo
scas
sub
fwait
imul
add
pop
test
xor
in
mov
ss
xchg
out
pop
les
dec
scas
ins
or
cmp
push
mov
mov
movs
xchg
sbb
cwde
xchg
pop
add
cmp
je
stos
mov
dec
or
or
mov
or
jnp
shl
ins
test
out
mov
dec
aas
adc
je
(bad)
aaa
adc
or
pop
out
ficom
or
inc
inc
fcom
add
mov
inc
stos
cmp
push
daa
(bad)
jne
imul
push
sub
or
pop
dec
stos
sbb
or
daa
inc
rol
pop
or
add
inc
mov
aad
ret
jecxz
repz
add
pop
leave
or
ret
push
dec
out
repnz
ins
push
pop
push
xchg
test
mov
stos
push
mov
mov
fmul
das
ins
ret
add
imul
bound
dec
outs
ss
sti
mov
inc
ja
pop
push
xchg
sbb
mov
pop
aaa
sbb
mov
outs
or
or
cs
cwde
popa
mov
fild
cmp
mov
adc
aas
loope
daa
or
imul
sbb
jl
ins
xlat
out
dec
inc
pop
mov
aaa
inc
lock
daa
push
pop
push
arpl
outs
(bad)
push
jno
lock
and
jns
dec
fs
je
dec
inc
(bad)
mov
or
add
pop
dec
outs
rcl
not
outs
sbb
mov
cmp
pop
adc
leave
shl
mov
imul
fwait
imul
mov
pop
jo
inc
outs
inc
jns
aad
gs
mov
cmova
ret
ret
xchg
sbb
addr16
sti
jno
cs
outs
push
inc
cmps
and
or
and
sub
sbb
pop
out
imul
popa
lahf
pusha
xor
jo
jne
push
fistp
cld
cmp
(bad)
mov
push
outs
sbb
dec
out
fst
rcl
arpl
shr
adc
pop
xchg
push
pop
xlat
push
jb
gs
or
xor
out
xchg
pop
add
jmp
push
or
ror
in
outs
push
inc
jae
jb
mov
(bad)
in
sub
gs
lahf
push
sar
jg
popf
arpl
or
inc
(bad)
bound
lock
xlat
push
dec
ins
fmul
push
jge
shl
pop
push
das
xchg
add
add
jmp
inc
inc
lock
mov
out
loope
jo
pop
jmp
call
add
xchg
inc
mov
push
xchg
scas
jbe
aas
jns
dec
sbb
test
pop
ja
xor
(bad)
or
mov
dec
outs
push
sbb
dec
or
ret
or
ds
jns
or
scas
jecxz
test
lahf
dec
or
dec
ins
push
jge
pop
and
mov
fiadd
cmovg
add
loopne
repz
data16
rcr
cmps
ret
cmps
imul
ss
jnp
push
sub
mov
stos
inc
shl
sub
xchg
stos
gs
inc
pop
ins
add
dec
or
xchg
loopne
pop
push
shl
sub
test
push
adc
pop
gs
imul
pop
mov
sbb
push
pop
aaa
add
jb
push
or
adc
pop
dec
out
adc
aas
mov
jne
adc
jne
or
inc
adc
ss
sbb
aaa
push
jo
ins
push
lods
retf
outs
push
les
pop
ret
add
addr16
dec
mov
jno
xlat
and
push
test
adc
adc
sti
add
jno
fist
arpl
push
jae
fisub
or
arpl
stos
imul
sbb
sbb
pop
in
pop
push
jns
dec
adc
pop
mov
arpl
call
xlat
aas
fs
push
push
mov
mov
add
inc
adc
push
ja
adc
ret
mov
inc
or
neg
arpl
rcl
and
push
jns
jo
or
xchg
fdivr
dec
fidiv
dec
mov
sub
aaa
hlt
pop
adc
ins
inc
fbld
or
or
xchg
nop
add
loop
sahf
xchg
pop
push
cmp
outs
push
test
dec
push
cmp
pop
stos
push
push
or
cmps
fcom
mov
or
cmp
xchg
inc
or
push
outs
inc
adc
mov
or
mov
daa
adc
mov
push
push
or
pop
or
xchg
adc
dec
cs
outs
xchg
jmp
xchg
mov
adc
push
ficom
mov
xchg
push
jae
mov
mov
cmps
or
(bad)
push
ffree
inc
mov
push
pop
iret
add
cmp
bound
pop
or
push
jae
imul
jb
mov
lods
aas
aas
pop
inc
arpl
ror
pop
inc
cmp
lods
cmp
mov
sar
cmp
movs
or
sbb
cmp
and
or
xor
mov
push
fiadd
rcr
push
sub
mov
rcl
call
jns
add
fs
cmp
test
popf
stos
add
cmp
add
inc
push
xchg
pop
add
or
icebp
out
xor
push
or
sahf
test
cmp
gs
inc
adc
push
daa
or
or
inc
mov
mov
cmp
js
sbb
int3
cmp
in
mov
xor
xchg
daa
jl
test
cmp
cmp
call
add
sbb
mov
jno
jns
mov
int
sub
fstp
sub
cmp
xchg
scas
cmp
xchg
aas
mov
inc
iret
or
ins
push
sub
or
jge
xchg
into
ins
pop
nop
push
int3
push
xor
sysexit
xchg
xchg
xchg
xchg
ss
cmp
xchg
xchg
xchg
xchg
cmp
cmp
xchg
xchg
xchg
xchg
ds
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
xchg
es
sub
xchg
xchg
xchg
xchg
sub
sub
xchg
xchg
xchg
xchg
cs
adc
xchg
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
xchg
push
pop
sbb
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
push
pop
add
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
xchg
xchg
xchg
xchg
or
or
leave
enter
(bad)
(bad)
icebp
leave
leave
leave
leave
repnz
cmc
leave
leave
leave
leave
div
clc
stc
leave
leave
leave
leave
cli
sti
cld
std
leave
leave
leave
leave
(bad)
jmp
loope
leave
leave
leave
loop
in
leave
leave
leave
leave
out
call
leave
jmp
leave
out
out
rcl
leave
leave
leave
leave
rcl
aam
leave
leave
leave
leave
(bad)
xlat
fcomp
leave
leave
leave
leave
fcmovu
(bad)
leave
leave
leave
leave
(bad)
rol
leave
leave
leave
ret
lds
iret
leave
mov
ds
loop
outs
sbb
or
adc
dec
imul
cmp
add
arpl
pop
sub
or
push
arpl
cmp
sbb
(bad)
aas
push
push
aas
add
sbb
aas
xor
or
mov
sbb
fild
cmp
inc
jns
nop
adc
aaa
mov
gs
add
enter
push
push
add
mov
mov
sbb
or
fldpi
push
add
sahf
or
pop
jae
cmp
ror
add
xor
ins
ror
outs
fadd
sub
mov
push
dec
and
cmp
mov
rol
rcl
mov
out
and
cmps
js
inc
inc
xchg
add
cs
jo
push
outs
(bad)
xchg
jp
jo
jae
add
sbb
or
push
adc
lods
sbb
jae
ret
sahf
adc
jge
inc
mov
inc
ins
imul
add
jmp
add
or
dec
sub
sbb
cld
ins
inc
and
mov
add
or
mov
jns
sbb
or
imul
gs
and
and
xor
sub
fisubr
xor
aas
mov
add
adc
or
mov
test
jle
stc
or
(bad)
cmc
adc
fiadd
ror
aam
add
out
stos
call
or
cmps
add
dec
cmps
inc
inc
(bad)
jl
ret
jne
pop
pop
and
das
repnz
adc
dec
mov
pop
lds
jp
loopne
sbb
or
inc
inc
imul
mov
jae
es
adc
or
add
(bad)
in
mov
test
adc
movs
test
jmp
sub
outs
hlt
mov
sbb
inc
inc
bound
movs
push
stos
and
or
and
shr
or
cmps
dec
add
call
arpl
or
ins
pop
or
mov
xchg
sub
movs
adc
faddp
or
inc
push
cld
push
pusha
dec
and
test
das
mov
adc
dec
nop
xor
dec
mov
js
push
dec
adc
mov
fld
adc
xlat
dec
fist
jno
fwait
sbb
stc
inc
mov
inc
inc
add
inc
cmp
sub
(bad)
psubusb
xor
push
add
clc
inc
inc
ret
and
pop
lea
sbb
push
cmp
or
dec
sub
adc
or
aaa
push
add
nop
mov
or
stc
push
inc
(bad)
jmp
and
or
movs
xchg
cmp
add
push
cmp
fwait
sbb
or
das
stos
push
sub
inc
and
clc
inc
inc
sub
inc
adc
mov
push
xchg
lods
pop
mov
bound
lahf
push
mov
cmp
sbb
inc
lar
jmp
push
js
les
mov
jns
inc
xlat
cmp
mov
fcom
inc
inc
bound
js
retf
or
jp
movs
inc
xor
push
jo
push
ret
daa
jno
mov
cmps
nop
xchg
pop
xor
inc
push
or
lods
scas
pop
sbb
adc
mov
mov
lods
loop
mov
fstp
aaa
ins
ret
push
(bad)
mov
add
xchg
fsub
aas
(bad)
mov
inc
rol
loopne
nop
sub
inc
jg
add
aad
mov
jnp
les
mov
or
push
add
xor
sub
add
sar
add
pop
bnd
mov
int3
adc
daa
or
fisttp
retf
xchg
out
add
and
pop
inc
jp
xchg
xchg
xchg
call
xchg
xchg
and
pop
cdq
cmp
adc
mov
pusha
jne
push
hlt
cmps
mov
xchg
mov
mov
rol
ror
add
in
popf
push
js
into
es
jmp
and
leave
mov
push
ret
add
sbb
fild
in
dec
push
dec
cmp
cmps
pop
push
jl
lods
je
in
repnz
sub
and
dec
shl
loopne
das
pop
sbb
(bad)
mov
(bad)
jl
scas
or
cmp
add
loope
and
jns
mov
sub
in
sbb
xor
cmp
shr
fild
pop
add
add
and
pop
popf
xchg
dec
or
cmp
cs
mov
jp
mov
pusha
ja
mov
pop
mov
fisubr
das
out
sbb
jns
cmp
fdiv
dec
mov
sbb
dec
cmp
sub
jns
xchg
mov
dec
test
pop
fdiv
scas
in
mov
dec
pop
sbb
xor
pop
sbb
out
inc
add
pop
mov
and
(bad)
jl
mov
daa
adc
add
test
ficomp
dec
outs
xchg
dec
mov
inc
(bad)
and
outs
loop
les
lods
mov
mov
xor
inc
jg
xor
mov
or
add
pop
sub
adc
push
lea
icebp
mov
jae
mov
xor
jae
jl
inc
sar
cmp
push
sahf
or
jl
repz
or
or
push
ret
(bad)
in
fadd
mov
inc
add
out
dec
(bad)
adc
cld
or
xchg
mov
fnstsw
(bad)
sub
popf
pop
dec
aas
pusha
mov
inc
or
out
arpl
es
cmp
dec
or
sbb
sbb
inc
pop
jo
jae
sbb
mov
sbb
or
or
cmp
push
push
jb
shl
sbb
dec
push
test
pop
push
and
add
jne
adc
ror
inc
or
sti
cmp
cdq
mov
jge
leave
adc
sbb
sbb
popa
or
gs
les
and
jae
pop
sbb
pop
dec
hlt
mov
push
mov
lock
inc
aas
add
jnp
xchg
or
inc
(bad)
scas
push
lea
mov
dec
mov
push
or
adc
push
mov
and
imul
aas
mov
pop
xchg
pop
xor
inc
add
inc
mov
ss
dec
sub
dec
les
movs
xchg
rol
fdivr
inc
outs
stc
push
imul
loope
nop
and
in
das
push
dec
or
add
sldt
mov
add
adc
adc
adc
lods
out
add
mov
push
pop
frstor
outs
movhps
iret
push
push
push
dec
sbb
out
outs
in
inc
push
popw
sbb
mov
pop
pop
mov
xor
inc
sbb
retfw
das
pop
add
and
sbb
repnz
mov
pop
and
daa
pop
and
push
mov
pop
and
in
pmaxsw
dec
outs
and
aas
add
and
retf
aaa
stos
add
add
jp
popa
scas
push
add
scas
add
clc
stos
pushf
pop
sub
jb
lea
and
and
or
mov
inc
pop
xor
add
sbb
xor
xor
cmp
adc
adc
ficomp
or
add
push
add
pop
push
jbe
inc
or
lock
sbb
adc
push
add
mov
pop
ret
push
inc
mov
mov
adc
lahf
fistp
mov
gs
(bad)
mov
data16
adc
xor
xchg
add
sbb
jo
xor
popa
mov
jbe
or
cmp
push
or
add
gs
push
fidivr
push
ret
call
lock
mov
push
or
inc
jno
mov
fst
adc
nop
pusha
xchg
or
cmp
dec
inc
jns
mov
cmp
ins
mov
mov
mov
fadd
push
add
pop
js
pop
gs
and
or
xor
xchg
dec
mov
inc
xor
and
sbb
push
outs
fs
les
inc
ins
les
or
mov
rcl
sahf
scas
and
cmp
xchg
push
in
or
scas
inc
add
or
mov
and
imul
dec
outs
jbe
jle
push
add
adc
rcl
jecxz
push
add
cmp
add
or
bnd
adc
mov
jp
adc
add
and
pop
add
sub
frstor
ins
ja
test
mov
fild
or
inc
daa
xchg
mov
adc
push
inc
jno
fsubr
mov
js
fwait
sbb
in
dec
scas
adc
or
in
mov
mov
ret
add
inc
loope
(bad)
mov
popf
inc
jne
add
or
mov
add
sbb
mov
movs
add
in
leave
pop
dec
cmp
je
pop
or
mov
xchg
dec
dec
les
jo
in
adc
loopne
test
bound
and
test
mov
hlt
pop
jl
sub
movs
mov
or
sub
xchg
pop
add
or
adc
xchg
outs
enter
test
add
scas
cmp
add
mov
stos
imul
jo
mov
movs
pop
stc
add
and
in
sub
jb
jo
mov
dec
xor
and
les
add
push
pop
inc
movs
and
push
push
dec
cmp
jg
xor
sbb
cmp
pop
ret
add
aas
inc
add
and
mov
mov
sub
mov
cld
out
push
xlat
jp
push
mov
push
frstor
pop
add
cdq
ss
shr
mov
add
call
(bad)
sbb
push
sbb
jmp
mov
mov
movs
les
adc
pop
and
add
(bad)
pop
repnz
pop
inc
push
repz
pop
mov
nop
xchg
xchg
ror
mov
mov
add
shl
lds
movs
jnp
into
repz
xchg
sbb
push
out
mov
les
cmp
mov
cmp
out
ds
js
or
inc
jo
repz
enter
jl
add
jns
ror
movs
les
and
push
ret
adc
call
movs
pop
loopne
jg
mov
ss
fisttp
popf
call
cmp
aaa
cmp
outs
add
jmp
neg
popf
and
sub
and
pop
add
add
out
mov
fisub
popa
bound
or
xchg
out
add
add
and
imul
sub
sahf
(bad)
call
adc
jg
jo
repnz
add
adc
add
fdiv
jg
pop
sbb
dec
xchg
das
pop
mov
add
sbb
jmp
jl
repnz
add
push
add
push
add
and
add
add
add
mov
xor
rcl
push
movs
mov
inc
dec
adc
mov
mov
pushf
mov
(bad)
push
mov
mov
mov
mov
mov
mov
aam
into
cmp
out
fdivr
add
pop
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
add
seto
lods
in
mov
dec
mov
add
or
xchg
inc
mov
add
jo
mov
xchg
adc
nop
pushf
nop
add
jl
inc
adc
and
scas
fs
loop
ror
ror
pop
ror
les
lods
xchg
adc
leave
rol
push
ret
daa
dec
push
and
push
and
fild
prefetcht0
pop
ret
xor
mov
inc
sahf
cmp
shl
push
adc
push
or
imul
xor
mov
push
imul
mov
inc
fsub
ss
imul
sbb
cmc
adc
add
inc
mov
movs
xor
push
add
cmp
jae
addr16
pushf
(bad)
imul
xor
push
outs
adc
sub
sub
sahf
or
push
add
sub
inc
inc
or
xor
test
fs
dec
outs
ja
clc
dec
dec
loope
add
mov
gs
inc
fmul
add
pop
xor
jo
mov
mov
ins
inc
loopne
xor
cdq
mov
mov
sbb
imul
enter
push
ret
into
cmp
dec
test
mov
mov
fadd
xlat
movs
clc
cmp
inc
in
out
mov
pop
mov
and
lods
mov
mov
mov
dec
mov
push
cld
jns
push
jno
cmp
push
fs
inc
adc
lahf
loopne
inc
call
fstp
jbe
repz
pop
mov
fisttp
iret
cmp
pop
lock
push
popa
jnp
push
das
pop
fild
das
in
adc
imul
hlt
scas
or
xor
push
fmul
and
adc
sub
mov
jo
das
and
adc
or
(bad)
paddsb
or
fcom
mov
(bad)
outs
cmp
push
outs
outs
vmread
and
stos
outs
jmp
and
inc
pop
mov
sub
jo
add
sbb
std
call
xor
cmp
lea
mov
mov
xor
or
pmullw
inc
jno
ds
inc
cmp
dec
(bad)
repnz
jno
outs
cmp
les
dec
(bad)
fnstenv
data16
sub
or
int
adc
xor
inc
ficom
mov
imul
push
in
pop
out
bound
jb
pop
cmp
stc
mov
fs
adc
jo
add
sub
loope
ins
fcomp
out
cmp
jae
dec
add
es
xchg
adc
es
dec
mov
push
add
xlat
cmp
es
push
push
xlat
test
jmp
test
adc
or
add
pop
jb
inc
inc
cmp
test
int3
icebp
add
adc
(bad)
xchg
jmp
dec
and
cmp
and
push
sub
inc
aas
loope
pop
xchg
xchg
lea
mov
jne
push
xlat
push
sub
mov
or
dec
xor
and
pop
lahf
and
sub
sub
test
test
nop
dec
sbb
into
movs
nop
and
sahf
xor
arpl
ja
enter
jae
adc
jmp
adc
pop
pop
fmul
loop
cmove
or
fcomp
jne
jl
neg
ins
jae
lahf
and
sub
cmps
fnstcw
push
sar
dec
je
mov
cmp
or
xor
sbb
out
les
loopne
xchg
push
or
push
repnz
js
jno
xlat
mov
test
(bad)
sar
arpl
mov
jo
ret
lods
ret
fcom
jae
(bad)
xchg
xchg
psubsb
sahf
and
out
(bad)
xor
outs
push
inc
lods
psubsw
daa
push
jbe
inc
add
fwait
std
dec
or
ja
stos
wbinvd
js
test
sbb
inc
ss
add
ins
dec
pause
push
loope
add
imul
in
and
js
mov
adc
dec
and
loopne
int3
js
fimul
sbb
ja
push
leave
or
xchg
inc
leave
mov
push
stos
mov
addr16
adc
movs
fnstcw
test
ror
sub
js
mov
push
rcl
icebp
dec
add
(bad)
iret
and
ret
outs
add
in
xlat
dec
and
cld
xchg
xor
in
add
pop
xchg
sbb
sbb
xchg
outs
mov
or
sub
push
ret
popf
cwde
repnz
mov
adc
xor
or
and
add
jp
sub
xlat
pop
outs
pop
mov
or
add
inc
inc
xchg
jns
or
cs
inc
in
jp
dec
jp
(bad)
jne
adc
out
xor
push
nop
or
inc
popa
add
imul
pop
push
test
and
js
sbb
mov
and
add
and
mov
add
xor
sub
fistp
popa
dec
lds
int
dec
sti
and
mov
add
jnp
push
cs
test
xlat
loopne
in
and
or
test
xor
ds
push
jnp
adc
iret
and
and
xor
xor
ins
adc
call
mov
mov
cwde
jl
es
jl
and
loope
jl
jo
fist
mov
imul
or
xor
shl
xchg
pop
adc
jnp
imul
cmp
popa
mov
cmps
cmps
dec
or
sahf
jo
ins
jo
and
ins
out
push
sub
ss
push
push
mov
jns
int
jl
ret
ret
pop
jns
push
ror
mov
adc
jge
or
jnp
mov
xor
pop
push
dec
inc
daa
sbb
inc
cmp
cmp
inc
loopne
inc
push
stc
push
jmp
and
daa
mov
nop
sti
push
xchg
ss
inc
in
xchg
push
dec
add
shl
dec
dec
(bad)
mov
repz
sbb
add
and
push
je
inc
add
ins
sub
cwde
dec
pop
pop
cmp
push
mov
loop
jno
xchg
jg
or
das
jle
jle
jl
pop
or
add
push
jg
inc
clc
dec
stos
dec
jg
xchg
(bad)
js
out
jg
adc
inc
jno
add
and
shl
add
jns
sub
sbb
dec
and
push
les
inc
clc
ins
stc
sub
daa
lods
pop
dec
adc
and
leave
add
das
ror
loop
jb
pop
mov
mov
shr
repnz
pop
pop
cmp
cmp
add
and
inc
idiv
js
cmp
sub
sub
sar
sahf
scas
or
dec
pop
xchg
mov
or
(bad)
xchg
jp
xchg
push
mov
arpl
inc
inc
inc
shl
adc
pop
dec
jo
cmp
pop
fs
jns
les
rol
or
out
inc
mov
and
test
popf
cmps
push
cmp
or
mov
mov
dec
dec
inc
hlt
stc
sbb
xchg
xor
or
inc
repnz
add
sub
fst
mov
jo
sub
dec
and
fldenv
(bad)
je
ret
test
mov
in
pop
shl
inc
push
les
inc
push
retf
pop
jl
mov
test
hlt
or
add
shl
in
test
jae
xor
jge
out
daa
xchg
sbb
movs
xor
xor
jno
sbb
es
or
fsub
adc
jg
ds
sub
inc
inc
cdq
dec
test
or
movs
add
dec
sbb
fisttp
adc
jo
add
neg
xor
pop
sub
in
xor
xor
test
sub
add
jmp
pusha
loop
inc
adc
shr
or
popa
mov
or
and
fld
jl
mov
je
mov
or
loop
lea
pop
xor
add
(bad)
cld
les
push
in
mov
rcl
neg
push
rcr
sbb
sbb
(bad)
mov
pop
fadd
sbb
inc
out
or
int
push
in
sub
adc
mov
imul
jl
sbb
adc
out
daa
inc
aaa
push
fs
aam
mov
xchg
js
push
fsubr
inc
mov
(bad)
jno
(bad)
sub
popa
and
xor
add
call
sbb
xor
mov
or
push
or
xor
or
sub
outs
sbb
jns
loop
pop
ss
cmp
mov
das
int
or
add
(bad)
retf
retf
bound
cdq
in
and
sysexit
fs
outs
mov
out
int
pop
mov
jbe
adc
cmps
aad
dec
cmp
jns
mov
mov
es
repz
punpckhbw
pop
je
cmp
loop
daa
mov
add
dec
xchg
jl
ss
mov
mov
or
int3
sbb
adc
outs
je
sub
or
rol
out
or
pop
inc
dec
les
mov
mov
mov
sub
stc
mov
or
and
push
addr16
push
cmp
data16
mov
and
aaa
(bad)
leave
imul
pop
xchg
pop
adc
stc
mov
add
shl
adc
gs
mov
mov
sbb
leave
add
and
xlat
adc
fisttp
push
xor
js
sub
inc
pop
mov
mov
adc
ins
sub
mov
test
ins
add
jbe
dec
dec
gs
lods
xor
inc
test
push
add
sub
imul
pop
or
jmp
push
outs
ja
(bad)
or
or
mov
inc
inc
or
mov
inc
cs
inc
sti
and
inc
inc
dec
adc
dec
dec
add
dec
popf
sti
aaa
fs
jo
and
adc
in
ficom
add
mov
js
adc
call
pop
loopne
(bad)
je
xor
movs
imul
enter
cmp
cwde
in
test
ror
mov
and
and
(bad)
xor
cmp
xchg
add
popa
jne
lock
xchg
sbb
mov
cmc
push
ins
xor
hlt
add
xchg
pop
es
pop
dec
pop
dec
les
cmp
inc
and
addr16
add
ret
dec
or
jecxz
inc
loop
or
loopne
xor
push
mov
xor
jp
push
(bad)
scas
int3
and
scas
and
mov
lahf
pop
ins
fisubr
add
pop
jo
dec
sub
jnp
test
push
nop
ss
movs
dec
ret
mov
pop
(bad)
call
cmp
hlt
cmp
cmp
jbe
out
movs
cmp
iret
ror
lods
je
push
out
div
inc
aas
ss
mov
lahf
int3
push
inc
(bad)
jl
test
popa
jmp
xchg
xor
test
xchg
std
in
inc
sub
sbb
mov
fcomp
lahf
lldt
nop
mov
xchg
pop
ds
retf
ins
xchg
stos
xchg
xchg
xchg
cmp
pop
jns
rcl
call
xchg
jae
jb
dec
ins
xchg
ins
cmp
in
pushf
nop
xchg
cwde
cmp
xchg
fcmovu
mov
push
outs
outs
xchg
dec
and
ds
scas
nop
cmp
cmp
ins
xchg
inc
aas
test
or
fld
ins
inc
sub
push
and
inc
ins
xchg
push
and
dec
nop
inc
ins
xchg
in
pushf
dec
push
inc
ins
xchg
in
repnz
ins
xchg
in
repnz
ds
xchg
xor
mov
stos
add
xchg
ror
dec
pop
mov
xchg
mov
les
(bad)
call
push
jns
fwait
inc
mov
xchg
ja
inc
ins
jo
push
outs
addr16
lahf
scas
fdivr
dec
jo
addr16
imul
xchg
loope
push
push
adc
fcomp
nop
or
hlt
push
fcomp
loopne
mov
ret
xchg
out
inc
cmp
inc
add
loopne
mov
inc
inc
push
pusha
push
and
mov
fs
inc
and
inc
cmp
xor
xor
inc
les
ss
in
add
push
mov
inc
dec
(bad)
fisttp
sub
xchg
inc
bound
or
and
ins
sub
fisub
xor
sub
movs
rol
nop
arpl
pushf
xor
pop
cmp
pop
adc
cmp
mov
neg
adc
dec
sahf
or
stc
add
xchg
xor
xchg
(bad)
bnd
push
xchg
lea
pop
add
shl
or
nop
loope
push
mov
outs
xchg
adc
fcmovnu
xchg
cmp
cmps
in
mov
fcom
ds
inc
and
inc
jns
xchg
shl
test
add
xchg
xchg
mov
fcom
inc
dec
fcom
aaa
pop
mov
pop
fild
sbb
cdq
or
cli
enter
pop
and
sbb
mov
jo
push
adc
fst
cmps
cmp
out
and
ficomp
pop
cdq
imul
and
jl
cmps
es
das
lea
adc
mov
add
scas
adc
adc
aas
and
add
mov
icebp
inc
jns
inc
in
xor
sahf
cdq
inc
ficomp
and
jge
inc
sahf
pushf
aam
fwait
push
add
dec
arpl
jo
fnstcw
sub
test
inc
mov
pop
pop
leave
xlat
or
out
dec
or
inc
push
adc
int
dec
adc
in
inc
inc
add
mov
or
loope
inc
dec
ja
mov
mov
jg
add
clc
inc
push
arpl
nop
or
sub
or
fld
lahf
lods
stc
lods
ins
add
pop
pop
outs
jg
in
sub
fcomp
cmps
in
dec
lea
fbstp
dec
sbb
lahf
or
pop
or
adc
test
inc
lock
add
push
adc
cmp
lods
pop
xor
and
ror
das
mov
data16
xor
inc
dec
jne
and
mov
inc
and
add
xchg
adc
cmps
aas
cdq
inc
inc
push
push
ja
push
adc
add
add
push
outs
push
test
repnz
popf
inc
push
js
add
cs
(bad)
sti
test
jne
push
daa
sbb
(bad)
cmp
jne
ret
dec
ret
ja
or
leave
pop
pop
cmps
fisubr
dec
cmp
xor
pop
or
inc
and
fistp
sub
lods
lea
mov
mov
push
or
out
scas
xor
clc
dec
push
sbb
xchg
hlt
sbb
popf
push
jo
inc
dec
sti
push
repnz
out
loopne
add
sub
xchg
out
in
in
shr
mov
mov
js
mov
sbb
mov
mov
movhps
cmp
add
mov
cmp
jne
jmp
dec
jae
or
sahf
call
sbb
jbe
push
and
addr16
and
xor
dec
popa
push
int3
and
movs
jp
pop
fchs
dec
lahf
jae
xchg
add
push
lds
test
aas
xor
sbb
popa
pop
cmps
mov
pop
mov
aas
push
adc
loope
hlt
repz
jmp
sbb
pushf
inc
push
dec
mov
and
xor
push
adc
into
call
xor
cmp
inc
sbb
loopne
cmps
or
adc
mov
and
clc
push
test
adc
jl
dec
jge
push
xor
jp
or
mov
daa
in
adc
or
jmp
pop
sti
xchg
daa
lods
ret
jnp
jo
data16
jne
adc
jg
dec
shl
fbld
add
sub
dec
xor
pop
cld
dec
push
cmps
sub
dec
cmps
and
or
xchg
push
aaa
int
sub
and
sub
or
adc
es
movs
add
pop
mov
fsubr
cmp
jo
pop
adc
and
and
dec
daa
dec
sbb
add
(bad)
(bad)
test
fmul
inc
mov
in
push
scas
bound
into
or
lahf
push
jp
test
pop
test
push
aaa
dec
out
or
mov
out
mov
cmp
inc
inc
xor
ficom
sahf
xor
call
ja
adc
outs
out
adc
dec
jp
cmova
inc
js
pop
mov
dec
nop
dec
out
pop
adc
cmovs
sti
scas
xchg
adc
xor
push
aaa
aam
dec
push
inc
ss
mov
aam
ucomiss
ret
xchg
sub
mov
pop
adc
push
xor
loope
inc
pop
dec
sub
ja
iret
dec
sub
arpl
sub
or
into
push
pop
mov
xor
test
sti
mov
and
and
xor
(bad)
aam
sbb
push
cwde
cmps
cdq
or
xchg
mov
cmp
dec
or
enter
adc
or
int
mov
adc
outs
cmp
ins
push
lahf
arpl
mov
(bad)
and
call
jl
data16
dec
mov
(bad)
inc
retf
fisub
jecxz
cmp
add
add
rcr
ins
enter
or
imul
inc
mov
or
mov
(bad)
mov
add
ret
xor
pop
aad
sbb
(bad)
sbb
or
or
dec
adc
jb
and
sub
push
aas
xchg
dec
enter
xchg
sbb
lahf
xlat
clc
adc
sti
adc
cmp
pop
lahf
push
mov
pop
clc
aaa
cmp
leave
cmps
inc
ret
das
sbb
sbb
and
(bad)
pop
push
jo
xchg
scas
adc
je
jne
mov
aaa
fwait
push
add
loop
ins
dec
mov
cmp
jae
bound
add
inc
add
xor
sub
mov
sub
and
pusha
xchg
lods
retf
jae
sbb
fwait
mov
pop
sar
push
sbb
adc
mov
ret
mov
mov
ret
ins
fnstenv
es
xlat
mov
cld
test
daa
pop
or
cmp
push
jmp
int3
test
cmp
pop
nop
rcr
sbb
add
add
and
je
in
in
push
pop
mov
nop
xor
data16
xor
(bad)
mov
cmps
sbb
mov
and
cmp
adc
fisttp
lods
xchg
or
icebp
cmp
sbb
add
pushf
sbb
and
cmc
mov
sbb
call
jne
mov
into
add
fnstenv
jmp
les
inc
retf
xchg
clc
pop
sbb
ds
cmp
loop
mov
xor
adc
les
push
rcr
stos
mov
jp
inc
push
es
mov
mov
inc
mov
cmp
fist
sti
or
or
stos
add
add
add
stos
add
push
xchg
dec
lock
out
arpl
popa
loopne
cmp
cmp
in
pop
pop
add
and
mov
adc
push
mov
sub
cwde
pop
in
xchg
jo
xchg
mov
mov
int3
push
mov
and
mov
dec
add
mov
push
ja
enter
shr
popa
arpl
sbb
pop
leave
inc
add
inc
or
push
inc
mov
jge
ror
and
mov
xchg
sbb
pop
mov
dec
sbb
push
sar
test
neg
mov
xor
push
xor
neg
pusha
shl
jle
call
cmps
add
xlat
push
ins
das
pop
sub
pusha
add
pop
and
sbb
je
sub
pop
mov
punpckhwd
and
and
adc
sar
fadd
mov
add
add
push
outs
enter
in
sahf
pushf
and
push
jne
xchg
ror
and
neg
inc
ja
dec
mov
lock
add
or
lods
jl
(bad)
mov
inc
sbb
or
stc
push
lods
das
dec
pop
fcmovnbe
adc
mov
and
push
add
dec
clc
push
dec
cmps
mov
jbe
inc
rol
jp
push
mov
push
dec
popf
iret
jo
jl
fist
sbb
fs
sti
nop
pshufw
sahf
lods
cld
push
push
mov
mov
or
(bad)
adc
mov
push
or
xchg
int
popa
mov
or
loop
add
pop
push
shr
sbb
push
add
fs
mov
push
aam
sbb
pop
mov
pop
adc
inc
sbb
adc
and
push
pop
and
repnz
dec
test
scas
cwde
dec
enter
and
ret
add
mov
push
enter
scas
nop
scas
lock
test
dec
push
in
scas
and
scas
sub
add
inc
jecxz
cmps
push
push
lahf
adc
inc
xchg
in
adc
mov
inc
out
test
push
mov
pop
data16
icebp
sub
jmp
sbb
call
and
sub
push
push
(bad)
xchg
cld
pop
cmps
fbld
popf
or
mov
jmp
sahf
mov
cmps
ja
xchg
cmp
mov
dec
push
fcom
sbb
imul
or
xlat
aaa
fcomp
jns
je
inc
cmp
hlt
push
push
push
std
cmp
jno
mov
xor
rcr
scas
pop
jmp
jge
out
test
test
ret
ins
pop
sub
xchg
add
push
mov
add
xchg
and
fdiv
bswap
int3
or
inc
add
cmp
test
retf
outs
mov
sub
daa
dec
cmps
sub
adc
sub
mov
push
add
inc
add
sub
mov
and
push
cmp
leave
test
test
sbb
es
dec
out
(bad)
das
mov
jmp
adc
pop
mov
sub
sbb
mov
cld
dec
movs
int3
jb
adc
pop
mov
push
stos
and
pop
or
add
xlat
xor
pop
xchg
push
cs
pop
test
call
test
sbb
(bad)
imul
sbb
mov
and
jns
shl
outs
pop
lods
mov
adc
push
add
push
inc
movs
mov
(bad)
in
call
pushf
mov
xor
outs
mov
cld
adc
add
push
out
or
js
push
inc
pop
rcl
inc
xor
sahf
mov
inc
mov
and
(bad)
dec
mov
mov
daa
adc
lahf
dec
or
mov
loop
push
push
mov
push
inc
xor
pushf
cmp
sbb
lea
dec
push
xor
mov
jl
imul
mov
push
push
or
cmp
adc
mov
xchg
dec
xchg
mov
xchg
mov
das
retf
test
jmp
xchg
inc
int3
and
call
or
fs
mov
xor
xchg
mov
repnz
pop
add
mov
dec
mov
imul
fadd
loope
adc
rcl
push
sar
and
loop
push
xchg
enter
cmps
adc
jle
pusha
dec
stos
xor
es
and
dec
dec
popf
fadd
jns
and
mov
pop
xor
inc
out
add
fs
icebp
and
and
dec
jge
push
xchg
and
sub
mov
les
shr
dec
and
int3
icebp
lea
call
or
sub
cmp
pop
adc
add
jp
sub
dec
push
sbb
enter
scas
jo
leave
adc
ins
mov
mov
pop
xchg
add
rol
lea
in
les
out
outs
pop
xchg
mov
jecxz
mov
or
pop
cvttps2pi
data16
mov
add
push
mov
rol
cmp
inc
in
pop
rcr
hlt
jae
lock
sub
xor
shl
fadd
cld
fwait
mov
mov
loopne
push
ret
adc
aam
jmp
nop
into
je
inc
imul
mov
or
adc
movzx
in
cs
jl
daa
sub
mov
mov
fadd
push
lods
jbe
and
imul
les
repz
mov
add
enter
pop
hlt
pop
or
push
cmp
stos
mov
shl
push
add
mov
inc
xor
push
ja
dec
pop
xor
out
test
inc
mov
jg
hlt
push
loopne
imul
pusha
or
movs
sbb
push
inc
fsubr
xchg
ret
add
mov
loopne
push
xor
inc
adc
or
pushf
arpl
addr16
or
cmps
js
aas
xor
sbb
push
outs
mov
dec
mov
in
in
aam
jl
mov
or
jl
repnz
mov
push
push
push
mov
push
add
enter
mov
and
xor
jbe
jmp
sub
push
push
xor
fsub
push
and
(bad)
rcl
or
pop
test
push
rol
repz
rcr
cwde
adc
loop
and
nop
xor
jmp
sbb
mov
add
daa
pop
mov
add
mov
dec
jb
mov
or
lock
adc
lock
cmp
adc
out
arpl
cmp
push
and
or
loopne
rcr
mov
adc
sub
aas
xchg
inc
dec
cmp
pop
add
push
rol
js
scas
nop
mov
movs
pop
add
inc
lea
fild
outs
xor
xchg
mov
or
ffreep
mov
push
fld
add
inc
jns
pop
enter
cmp
sbb
pop
and
jb
sbb
mov
and
mov
cld
rcl
popa
repnz
clc
nop
addr16
push
ror
adc
movs
adc
adc
nop
iret
sbb
test
es
dec
cld
or
sbb
lock
push
fistp
sub
xor
test
ja
or
lods
or
out
dec
dec
shl
push
jp
fcom
ja
inc
add
xor
(bad)
lahf
xor
xor
sahf
dec
loopne
cmp
in
test
out
sbb
mov
fadd
stos
loopne
dec
stos
shl
jb
jns
add
ret
stos
nop
xchg
inc
enter
mov
fs
jge
sub
dec
add
ret
xor
sbb
xor
lock
sub
test
inc
jb
add
fisttp
dec
sbb
in
push
das
lea
sub
inc
mov
xchg
and
push
test
jmp
adc
enter
inc
or
mov
push
jp
cmp
pop
cmp
or
sbb
inc
jge
jnp
pop
inc
or
ret
arpl
pop
iret
pop
call
sbb
add
pop
ror
or
je
rcr
xor
dec
repz
cwde
les
les
mov
pop
lds
repnz
sbb
pop
mov
cmp
lds
lods
cmp
and
fisttp
vrcpss
movs
lods
mov
test
mov
inc
sbb
dec
cmp
jo
sub
add
add
add
add
jmp
scas
add
jno
sbb
(bad)
push
loope
dec
sbb
leave
fdiv
xchg
cmp
mov
push
inc
aas
fcmovnbe
xchg
lahf
dec
jae
bound
add
or
push
cmp
sar
mov
jo
or
mov
mov
ss
call
sbb
fist
xlat
lea
or
and
fcomp
icebp
add
mov
fist
push
sub
cli
loopne
cmp
sub
or
inc
lea
imul
push
sbb
push
and
in
pop
cmp
shl
sbb
(bad)
xchg
(bad)
cmp
je
test
lock
pushf
test
add
dec
xchg
cdq
mov
xchg
leave
xchg
loopne
add
mov
pop
imul
or
or
cmp
mov
call
popf
call
bound
lahf
mov
aaa
in
pop
pushf
sbb
mov
push
sub
jl
pop
lods
lea
jge
jo
cmp
jnp
ret
and
lods
push
adc
hlt
bound
cs
and
cmps
inc
icebp
shl
push
adc
std
lods
or
retf
mov
add
mov
xchg
or
mov
seta
ds
das
and
shl
mov
fadd
mov
jb
xchg
pop
leavew
inc
clc
xchg
and
mov
xor
push
nop
popf
cmp
test
ror
add
dec
push
push
dec
cmp
(bad)
xor
inc
mov
adc
das
lea
cld
cmp
mov
push
mov
inc
jp
popf
adc
jmp
adc
cdq
dec
cmps
popa
mov
add
pop
iret
int3
dec
jge
test
jmp
ds
cmp
push
retf
lods
pop
imul
push
push
outs
fadd
xchg
add
inc
sbb
add
scas
and
pop
xchg
stc
jge
bound
mov
pop
cmc
cmp
dec
cmp
movs
pop
lock
fdivr
movs
loope
into
mov
adc
jmp
in
inc
inc
fstp
jle
outs
fwait
mov
push
out
pop
in
test
rcl
xchg
test
(bad)
jle
or
fstp
inc
cwde
cmp
stos
out
xchg
and
mov
mov
or
je
or
sub
dec
sbb
shl
fst
mov
adc
or
pop
pop
sbb
hlt
es
jmp
ficomp
popf
jne
xchg
jl
xor
sbb
adc
mov
sub
nop
xlat
push
es
int3
sub
stos
int3
or
cmp
in
es
ret
aam
sub
or
nop
push
and
sbb
pusha
shl
adc
or
adc
into
push
xor
pop
adc
sub
mov
and
cmps
jbe
lea
push
sub
dec
jmp
jns
outs
or
xchg
xchg
dec
add
sti
enter
cmp
push
push
test
dec
lods
sbb
(bad)
mov
mov
xchg
cmps
push
inc
stos
dec
imul
and
movs
mov
pop
call
add
fiadd
cmp
lea
inc
jmp
lea
jg
(bad)
mov
aad
xchg
lea
add
dec
pop
add
cmps
jns
add
or
add
add
inc
adc
pop
sbb
jo
stc
cmp
aas
sub
jle
mov
xor
sar
lea
lea
pop
pop
pop
pop
mov
mov
dec
jne
ins
idiv
loopne
cmp
sub
pop
push
pop
inc
cmp
mov
add
test
fimul
pop
and
mov
mov
add
loopne
dec
sub
aas
xchg
adc
jg
add
mov
enter
mov
dec
jns
jmp
daa
cmps
test
mov
(bad)
mov
aam
pop
xor
jecxz
mov
mov
jmp
addr16
sti
mov
add
cli
adc
outs
xor
mov
sbb
add
cli
pop
rol
add
movs
shl
int3
adc
mov
aam
adc
or
ss
sbb
rol
jne
ds
ds
int
xchg
call
std
in
add
test
pop
movs
lea
push
cs
jmp
dec
shl
data16
in
or
fs
lea
scas
push
icebp
push
in
std
sub
cmps
stc
cmp
shl
and
rol
clc
mov
fiadd
sbb
ja
xor
icebp
inc
das
or
mov
and
mov
add
adc
clc
sub
pop
cld
xchg
sahf
xor
bound
rcr
mov
push
sub
pop
push
push
pop
clc
mov
xor
inc
movs
int
adc
sar
les
mov
dec
mov
lds
int
ret
sbb
cmp
adc
shl
das
adc
and
sar
and
and
inc
and
push
aaa
sub
je
push
push
xchg
fimul
cmp
mov
add
outs
push
dec
aam
aaa
ficomp
pop
rcr
fsubr
outs
in
rcl
(bad)
faddp
push
movs
sbb
adc
mov
mov
test
xchg
das
stos
xor
inc
test
xor
enter
(bad)
lods
sar
xor
add
mov
add
jb
xlat
or
push
pop
add
shr
in
scas
(bad)
hlt
add
stc
repnz
js
enter
cmp
add
(bad)
ficomp
adc
lds
pop
push
xchg
inc
pop
enter
pusha
repnz
and
fmul
shl
and
push
push
addr16
nop
xchg
cmp
popa
mov
mov
adc
adc
pop
mov
mov
pusha
xor
adc
xor
sbb
(bad)
sub
inc
jne
jo
and
mov
pop
sub
jmp
xor
sbb
nop
xchg
or
adc
mov
adc
pop
or
xchg
out
jmp
rcl
movs
retf
ja
in
rcl
call
jne
push
imul
rol
inc
cmc
gs
cmp
or
and
or
cli
out
adc
clc
jg
jo
cmp
int
ret
adc
enter
inc
pop
cmp
jg
or
mov
jmp
dec
loope
pop
iret
nop
stos
and
sub
imul
mov
mov
jo
add
js
pop
or
or
sbb
rcr
cmps
loop
mov
push
pop
xchg
test
outs
adc
imul
and
add
jmp
xchg
sbb
scas
xor
xor
scas
or
outs
add
mov
ret
xchg
cmp
pop
and
or
adc
dec
clc
or
jge
or
sbb
inc
fidivr
dec
idiv
jne
jg
or
jl
push
ins
sahf
sbb
inc
lea
pushf
adc
add
rcl
sbb
dec
mov
cdq
xor
push
adc
dec
inc
add
xchg
inc
mov
mov
mov
cmp
cmp
mov
neg
out
or
cmps
xlat
ss
ins
in
or
and
add
sub
rcr
popa
push
adc
dec
clc
pop
shr
and
pop
rol
push
mov
enter
rcr
rcl
mov
enter
push
test
pop
mov
ja
sub
ins
mov
sbb
jmp
add
sbb
add
and
int3
mov
mov
sbb
sbb
sbb
inc
mov
push
sub
popf
data16
adc
hlt
and
adc
adc
add
ds
arpl
or
aam
test
add
test
mov
pushf
sahf
daa
mov
or
jmp
test
push
or
out
or
and
into
push
data16
dec
or
call
and
hlt
xchg
loope
push
push
push
retf
into
pop
pop
loope
lahf
cs
jmp
mov
sbb
jb
dec
dec
rcl
aaa
sbb
or
hlt
mov
jmp
inc
sub
adc
sahf
mov
dec
test
xor
mov
mov
dec
or
jle
lock
jmp
mov
xchg
jmp
(bad)
sub
ja
mov
jmp
adc
sub
imul
or
or
push
and
jae
and
pop
wbinvd
dec
and
push
sub
xor
sub
add
out
xor
mov
mov
mov
mov
outs
retf
stos
(bad)
iret
cli
sahf
dec
and
or
out
inc
fbstp
rcl
mul
sub
inc
dec
call
test
jne
push
and
xor
push
outs
xchg
add
scas
lock
or
sbb
mov
test
add
fiadd
sbb
ficom
fdivr
pop
xchg
cwde
cmp
inc
sub
push
xchg
inc
inc
sahf
(bad)
clc
hlt
hlt
pop
xchg
lea
jmp
jg
leave
pusha
lock
in
out
retf
and
and
lods
dec
aas
(bad)
test
dec
repnz
lods
adc
fidivr
add
rcr
sar
addr16
push
in
hlt
int3
mov
repz
into
add
add
dec
clc
call
sbb
push
fsub
loopne
xchg
and
loope
movs
imul
loopne
and
adc
push
shr
rcl
loopne
out
adc
xchg
fwait
jns
inc
fmul
fidiv
mov
push
shl
ficomp
mov
or
lods
ret
xchg
call
push
scas
mov
or
mov
jle
push
jb
lods
mov
xchg
xchg
or
xor
sbb
fsubr
dec
add
in
shl
jp
popa
or
cmp
loopne
int
xlat
push
fcom
and
in
xor
in
push
lods
cmp
pop
inc
and
pop
xor
inc
out
and
(bad)
ins
xor
and
cmp
adc
das
push
and
mov
sar
adc
adc
cmp
sti
and
adc
clc
mov
int3
mov
fld
repnz
sbb
push
inc
popa
add
arpl
cmp
(bad)
iret
adc
inc
push
sub
ja
mov
lahf
or
je
mov
push
lods
fmul
js
adc
inc
outs
int3
sub
inc
stc
jne
inc
fld
dec
hlt
pop
inc
and
mov
fiadd
mov
add
cmp
adc
adc
pop
rcl
dec
dec
(bad)
and
pop
mov
mov
push
push
mov
and
push
ret
aaa
es
dec
adc
idiv
jns
sub
pop
call
fild
inc
push
and
sub
sbb
ins
push
ja
push
or
shl
or
out
retf
iret
imul
xlat
push
pmulhuw
pusha
cmps
je
add
aaa
or
loopne
jecxz
jno
or
mov
ret
xor
push
inc
arpl
adc
aaa
scas
and
mov
addr16
dec
aaa
inc
dec
pusha
add
inc
xchg
retf
cmp
add
xchg
invd
movs
xor
mov
or
push
adc
ins
pop
add
sub
mov
cmp
loopne
jecxz
in
jecxz
das
cs
in
nop
mov
in
mov
dec
test
loope
jbe
stc
push
gs
loope
nop
mov
xchg
retf
loopne
lods
pop
inc
xchg
loopne
push
imul
add
inc
dec
loope
jmp
pop
add
popa
call
adc
push
sub
imul
xchg
cmc
inc
sbb
mov
cmps
xchg
xor
mov
add
ret
fidiv
adc
add
jl
or
mov
jae
mov
dec
outs
push
clc
jle
adc
or
out
adc
ret
hlt
jle
cdq
dec
ins
retf
inc
test
stos
and
or
sub
inc
ret
ffreep
push
mov
or
xor
sub
aam
sub
enter
out
and
xchg
fdivr
dec
out
inc
push
aad
clc
mov
test
jl
and
nop
pop
push
enter
xchg
lock
add
lock
xchg
jl
mov
xlat
sub
cwde
or
leave
mov
pop
jns
in
push
fist
push
dec
push
rcl
and
or
gs
aaa
je
pop
ins
dec
jnp
push
cmps
adc
aam
bound
add
or
cmp
dec
sbb
add
mov
mov
dec
jne
xor
jmp
push
adc
(bad)
nop
sub
movs
sub
push
sbb
in
call
fisubr
jmp
push
xchg
test
push
mov
inc
ins
and
cmp
das
jno
push
(bad)
popa
imul
adc
inc
ret
sub
adc
mov
and
test
add
mov
jmp
push
adc
in
xor
add
mov
dec
xor
xor
add
pop
sub
sbb
xor
in
jno
sbb
inc
hlt
mov
mov
add
mov
in
sub
push
pop
in
dec
push
aam
nop
popa
int3
mov
test
add
mov
mov
cmp
dec
setnp
jbe
adc
xor
xchg
dec
call
mov
xor
int
mov
jno
mov
leave
or
lock
ins
mov
adc
mov
repnz
jl
adc
cmp
mov
or
xor
mov
aam
arpl
in
out
adc
pusha
cdq
xchg
aas
(bad)
repnz
rcl
inc
mov
lds
mov
shr
stos
mov
ficomp
scas
dec
jge
jp
sti
cs
add
mov
cld
stos
je
fidivr
stc
test
adc
sub
jo
mov
bswap
dec
add
in
fimul
adc
addr16
push
test
mov
ss
in
ins
dec
loopne
(bad)
jmp
rcr
cmp
loopne
xor
adc
dec
(bad)
jle
sub
cs
sub
jl
test
dec
mov
add
(bad)
or
(bad)
jg
mov
loop
fucomip
inc
daa
jo
sahf
push
(bad)
in
sub
ins
in
inc
or
fisttp
inc
daa
or
ret
test
call
jmp
imul
sub
mov
inc
jae
jmp
inc
dec
(bad)
loope
jmp
in
les
mov
imul
add
or
imul
aaa
(bad)
in
inc
imul
stos
and
sub
inc
and
lods
jmp
pop
jno
mov
and
push
pop
dec
push
bound
xchg
call
not
push
sub
add
jno
les
mov
mov
pop
adc
add
rol
xchg
adc
sti
std
in
add
or
or
loopne
mov
imul
pop
jle
and
or
jo
in
ror
enter
call
and
fnsave
enter
ja
das
push
mov
xlat
xchg
adc
cld
mov
add
xchg
ror
push
pop
pop
add
iret
adc
retf
inc
pop
xlat
daa
mov
call
repnz
mov
aaa
aam
push
fisttp
push
cmp
icebp
(bad)
pop
leave
or
push
mov
mov
xchg
or
or
aad
or
ret
mov
arpl
jae
gs
mov
arpl
rcl
(bad)
call
or
push
adc
mov
jmp
aas
jo
push
imul
sbb
dec
cmp
shl
inc
adc
jle
test
das
lods
mov
mov
sbb
xor
or
fimul
jno
push
add
mov
inc
lods
push
mov
or
fcomp
cs
test
cs
sbb
out
rcr
pop
adc
sahf
inc
adc
pop
and
inc
or
mov
cwde
ins
mov
and
retf
shl
icebp
inc
sub
or
adc
or
push
ret
test
cmp
xor
jb
sahf
inc
stos
and
(bad)
sub
das
mov
xabort
cmps
lock
xchg
(bad)
mov
xbegin
aas
jne
pop
fldenv
push
icebp
sbb
and
test
push
sbb
mov
sbb
inc
pop
ds
xlat
idiv
fld
mov
mov
gs
mov
cmp
or
and
shr
xor
loopne
rcl
in
push
sub
aaa
inc
pop
jae
or
mov
sub
inc
push
lea
push
loop
push
and
pop
es
mov
and
or
sub
das
and
jae
add
jmp
fisttp
ror
aaa
or
sbb
or
(bad)
sbb
sub
inc
push
inc
sub
adc
outs
jge
mov
adc
and
xor
stc
inc
out
inc
js
mov
stos
sbb
out
jl
dec
sbb
ds
push
and
jecxz
xlat
hlt
adc
ret
arpl
scas
repz
adc
adc
repz
push
push
jne
and
adc
and
(bad)
js
hlt
ss
or
mov
movs
hlt
out
dec
mov
xor
hlt
rol
push
inc
xor
xchg
xor
sub
push
sub
xchg
and
dec
push
pop
aad
loop
xchg
lahf
lea
loop
jnp
int
inc
sbb
or
loope
push
clc
sub
fsubr
clc
hlt
xlat
in
fcom
js
sbb
jns
lahf
dec
rcl
gs
cmc
adc
lock
mov
dec
mov
mov
sbb
fidiv
cmp
rcl
pop
or
lahf
adc
dec
xor
pop
dec
shr
inc
or
and
pop
xlat
pushf
repz
call
push
test
sub
aas
adc
lods
aad
enter
adc
inc
ret
ror
mov
in
pop
das
and
mov
add
dec
ds
inc
jbe
nop
push
sti
cmp
push
inc
aas
push
int3
cmp
sub
push
and
and
push
sub
pusha
pop
pop
dec
or
mov
icebp
and
xor
adc
fdivr
fild
test
fs
sub
inc
sub
inc
outs
(bad)
jmp
out
pusha
jnp
pop
(bad)
es
shl
jmp
cmp
sub
clc
adc
test
inc
and
(bad)
adc
add
and
test
outs
in
loopne
imul
sub
in
push
sbb
call
and
(bad)
mov
push
xor
pop
nop
xchg
movs
mov
dec
adc
dec
aaa
mov
test
fwait
ret
adc
inc
sbb
cmp
xor
dec
pop
and
cmp
mov
jp
adc
mov
push
push
fild
ficom
sub
in
cdq
cmp
pusha
sbb
dec
mov
add
inc
dec
add
pop
aaa
add
rcl
aam
sbb
icebp
xchg
enter
add
push
xlat
push
sub
dec
sti
adc
xor
mov
data16
sub
adc
mov
sub
jmp
push
push
and
lods
cmps
shl
push
adc
jmp
pop
(bad)
call
mov
call
ins
das
loopne
repnz
clc
pop
and
jbe
lods
int3
push
loope
adc
push
daa
fsub
or
popf
arpl
add
and
les
je
out
dec
cld
rol
jle
and
mov
pop
es
push
mov
ss
pop
dec
movs
ja
xor
push
mov
mov
sbb
push
cmc
xchg
pop
enter
sbb
dec
or
sub
pop
or
les
push
icebp
pusha
add
jmp
sub
in
test
pop
sub
aaa
test
mov
in
enter
scas
adc
xchg
jb
pop
aad
retf
jl
push
mov
dec
inc
pop
popa
and
or
dec
mov
pop
mov
scas
daa
cmp
cwde
xchg
jmp
push
mov
nop
ret
dec
ins
mov
cdq
movs
loopne
fwait
(bad)
mov
dec
pop
cmp
je
jl
push
inc
xor
(bad)
jns
xchg
mov
sub
rcr
xchg
(bad)
test
dec
pop
add
test
mov
sbb
mov
inc
test
adc
adc
or
or
push
push
add
jmp
xchg
and
mov
mov
xlat
int
call
inc
(bad)
aam
or
fwait
sbb
mov
jns
sub
cs
(bad)
and
mov
sub
mov
in
add
pusha
add
dec
jge
or
retf
and
pop
cmps
dec
call
ret
in
fdivr
add
and
into
xchg
xchg
jb
cmp
mov
xor
cmc
inc
ins
or
mov
repz
pop
adc
ins
pop
inc
adc
cld
add
adc
inc
inc
inc
and
pusha
std
shl
mov
cmc
dec
daa
adc
sub
dec
rcr
das
sbb
and
mov
jp
inc
inc
jbe
sbb
je
or
xor
test
test
pop
dec
xchg
add
loope
sti
add
sub
(bad)
hlt
repnz
cmp
shr
call
and
lock
sar
adc
scas
xor
ficom
sbb
dec
les
jmp
push
dec
and
repnz
xor
and
xor
pop
imul
inc
js
lods
and
pusha
cmp
pop
push
sub
fs
call
lock
in
and
inc
aaa
in
loope
cmp
jbe
add
pop
mov
outs
dec
outs
wbinvd
add
je
pop
mov
ja
pop
enter
or
adc
add
dec
sbb
sub
push
lods
and
jmp
sub
push
shr
xor
or
mov
ret
inc
loopne
inc
inc
enter
jl
sub
mov
mov
cmps
das
jne
mov
jmp
add
aad
test
out
add
(bad)
(bad)
sti
adc
or
jbe
(bad)
mov
sbb
shl
xchg
sbb
and
cmp
cmps
daa
sbb
or
adc
mov
dec
lahf
(bad)
xor
jle
scas
repnz
xor
mov
rcr
sub
lahf
test
cmp
xor
push
dec
jo
add
dec
pop
mov
aas
dec
add
mov
cmp
rol
nop
and
dec
pushw
clc
cmps
call
pop
je
loop
sub
movs
xchg
and
jb
inc
jo
add
adc
rcl
mov
add
push
clc
sbb
cmp
sub
das
adc
sbb
data16
ret
push
repnz
ins
and
nop
mov
stc
push
test
inc
(bad)
jmp
pop
jae
fsub
add
xor
popa
adc
mov
lods
or
adc
sahf
outs
cld
push
ins
pushf
arpl
call
xchg
ret
push
(bad)
lods
mov
push
ins
retf
sbb
test
jae
test
enter
lahf
push
adc
rol
shr
or
dec
cmps
fmul
inc
pop
inc
pop
pop
xor
push
add
mov
out
pop
jg
xor
pop
test
adc
sub
ret
or
dec
or
nop
test
push
(bad)
push
add
xor
xor
lds
js
cmp
repz
xlat
push
call
pusha
pop
jbe
mov
les
pop
loope
cmp
push
ror
aas
fcomp
mov
and
call
inc
or
shl
cmp
test
mov
push
push
jp
nop
sbb
sub
xor
retf
mov
pop
inc
sub
or
adc
or
xchg
fadd
in
ret
mov
lock
(bad)
(bad)
mov
jecxz
or
adc
inc
gs
ins
movs
mov
xchg
cmc
test
out
push
in
xchg
in
movs
mov
xor
test
call
dec
push
in
dec
add
into
rcr
inc
pop
mov
push
or
dec
cs
pusha
aaa
or
xor
sub
or
sbb
push
cmp
nop
xchg
movs
pop
dec
mov
inc
push
cmps
mov
push
inc
(bad)
neg
push
add
cmp
mov
cmp
retf
mov
mov
paddq
in
punpckhdq
xor
pop
cmp
shl
ret
popf
mov
(bad)
into
mov
adc
mov
pop
shl
test
mov
adc
adc
adc
push
clc
shl
test
jno
sbb
dec
jo
(bad)
lods
mov
ins
mov
add
int3
add
mov
dec
adc
aam
fsub
jno
mov
pusha
push
repnz
push
mov
fnstcw
or
int
push
out
ret
dec
jg
lahf
rcl
dec
add
pushf
call
mov
xchg
push
lods
pusha
add
add
push
and
xchg
in
es
aad
lea
adc
dec
mov
sbb
psubq
adc
sbb
or
jmp
sub
enter
mov
adc
lock
(bad)
sti
or
sbb
xchg
and
lock
mov
mov
jp
(bad)
icebp
in
adc
mov
and
cmps
inc
fsubr
inc
fucomip
dec
pop
or
lock
cmp
sub
je
push
imul
pop
data16
adc
mov
loopne
bnd
mov
cmp
jne
xchg
shl
stos
xlat
or
rcr
push
nop
dec
jl
shl
mov
sbb
and
and
sbb
sub
pop
ins
clc
push
or
cmc
add
movs
push
mov
ret
mov
push
movs
add
xor
or
xchg
mov
in
mov
add
jae
fiadd
mov
inc
adc
mov
inc
or
dec
jmp
push
pop
sub
push
ret
cmps
dec
xchg
aas
fild
mov
or
xchg
adc
inc
scas
sbb
add
or
or
or
jb
and
ror
inc
call
out
inc
sbb
cli
test
(bad)
std
adc
mov
and
lods
ss
mov
sbb
sbb
sub
and
cld
sbb
mov
sub
push
or
add
cs
pop
cdq
push
imul
cmps
hlt
mov
mov
cmps
add
sub
mov
dec
cmp
and
pop
ja
xchg
inc
cmp
fimul
cmp
in
sbb
jmp
ror
push
movs
outs
cmp
xchg
push
lock
pop
daa
and
push
adc
cld
in
jno
mov
gs
inc
mov
shl
rol
in
sahf
aam
add
ret
xchg
lods
cmp
rcr
inc
xor
lods
or
jbe
xchg
test
push
(bad)
repnz
xor
(bad)
dec
and
xor
sub
pop
cmp
rol
adc
pop
rol
cmc
loop
(bad)
imul
in
or
mov
sbb
dec
cmp
dec
ins
daa
mov
mov
mov
aas
inc
in
mov
inc
in
push
inc
mov
popa
sbb
pop
mov
jge
mov
sbb
mov
and
cmp
inc
ret
sub
int
pop
dec
dec
sbb
add
dec
imul
adc
loope
daa
pop
nop
test
sbb
fsub
xchg
jnp
xor
sbb
ror
(bad)
or
pop
add
cmp
xchg
in
push
add
nop
jnp
cmp
adc
pmulhw
nop
(bad)
push
jecxz
dec
push
sbb
popa
movs
xchg
mov
sbb
push
mov
cmp
out
xchg
shl
jl
in
call
dec
lock
mov
sub
adc
iret
and
clc
xchg
push
jge
in
pop
and
pop
movs
(bad)
lods
dec
test
inc
add
push
push
fstp
add
add
push
lahf
or
jg
hlt
dec
dec
ss
mov
cmc
push
inc
rcl
add
test
adc
mov
mov
mov
loopne
pushf
cld
or
mov
jne
push
addr16
mov
xchg
lock
add
pusha
or
sbb
mov
cmp
ror
test
cmp
jo
xchg
fidivr
push
sbb
les
call
xor
adc
pushf
lock
sub
jmp
add
mov
adc
mov
js
in
jns
or
sar
adc
jmp
sbb
stos
fwait
xchg
add
mov
mov
and
inc
cmp
mov
addr16
sbb
cmp
adc
js
sub
pop
inc
(bad)
pop
adc
je
push
inc
cmp
js
test
scas
push
cmp
pop
jo
outs
or
xor
cmp
dec
lock
sub
inc
and
and
xor
cmc
shl
cmp
sub
inc
jmp
test
cmp
and
fsub
ret
cwde
cmp
add
or
cdq
mov
lea
inc
lods
mov
adc
and
lods
push
jp
mov
adc
out
movs
mov
cmp
mov
adc
mov
pop
adc
stc
pop
inc
sbb
xor
jbe
clc
mov
pop
push
fidiv
add
xchg
inc
sub
push
loopne
enter
nop
jno
ss
ret
lods
aaa
es
les
xchg
lds
cld
ins
loopne
(bad)
lods
fist
push
lods
adc
outs
sub
rcr
rcr
pusha
ja
inc
xor
xor
test
inc
imul
add
xlat
xchg
shl
sar
outs
pop
mov
pop
add
fcom
adc
dec
loopne
or
push
iret
push
jns
and
loopne
cmps
xor
mov
push
mov
fwait
ins
push
inc
adc
nop
sub
and
sbb
xchg
jle
and
xchg
fcomp
sbb
ds
push
inc
rcl
dec
in
scas
shl
add
shr
push
mov
sbb
imul
xor
pop
repz
sbb
cld
es
data16
inc
cmp
xor
aas
mov
sbb
(bad)
pop
leave
mov
ret
ins
dec
jne
add
dec
push
dec
mov
and
call
add
call
xor
out
pop
and
fwait
add
or
xchg
fs
and
mov
rcl
add
cwde
push
ins
iret
mov
pusha
pop
mov
cdq
pusha
sbb
(bad)
mov
lods
or
loope
jmp
in
mov
add
inc
sbb
pop
mov
pop
inc
pop
pop
cld
sbb
adc
xor
and
and
loope
inc
fwait
out
sbb
call
fwait
add
or
daa
mov
pop
push
lods
push
sbb
cmp
push
lods
push
or
test
jne
dec
and
and
dec
inc
adc
push
dec
push
mov
ja
xchg
mov
cmc
(bad)
sub
inc
jnp
sub
or
(bad)
add
sbb
pop
loopne
dec
or
pop
sar
icebp
pop
xor
lods
and
daa
lods
test
pop
sbb
add
ret
dec
push
sub
pop
enter
inc
and
jmp
retf
adc
mov
clc
sub
add
clc
sbb
mov
inc
sbb
stc
inc
sub
pop
adc
mov
xor
aam
(bad)
dec
adc
test
les
or
cmps
or
add
in
inc
push
xor
lock
wbinvd
or
pop
(bad)
or
sub
sub
mov
or
pusha
xchg
push
(bad)
rcr
adc
jno
mov
in
adc
pop
test
push
outs
pop
inc
es
mov
inc
je
cmc
shrd
addr16
add
push
sbb
jmp
daa
dec
je
sub
je
sub
mov
xor
xor
or
call
stos
add
enter
pusha
loopne
dec
ja
rcr
jmp
(bad)
sbb
pop
or
mov
or
sbb
mov
out
(bad)
pusha
mov
jnp
test
pushf
mov
add
jl
mov
lock
inc
mov
ins
cmps
jle
sub
lock
or
push
loop
aam
sub
add
cmps
xchg
neg
push
adc
repz
shl
dec
clc
mov
xor
sbb
and
cmp
dec
adc
cmps
sub
pop
rcl
data16
lods
cmp
or
or
push
push
add
cs
ds
daa
mov
int3
and
or
fisttp
loopne
mov
inc
rol
movs
jg
movs
loopne
add
jnp
dec
(bad)
mov
xchg
adc
out
jo
sbb
add
add
dec
jns
jo
and
push
sub
inc
or
daa
jg
mov
outs
inc
sub
xchg
movs
xor
loopne
popa
cmp
jne
cmp
repz
dec
push
cmp
in
adc
xor
or
or
inc
adc
je
adc
cmp
cmp
and
sbb
push
cli
or
rcr
jns
xor
add
inc
loopne
pop
sbb
pop
sbb
sbb
push
adc
loope
sahf
addr16
cmp
ret
mov
mov
push
(bad)
mov
adc
or
add
dec
adc
dec
in
cmp
ja
jae
xor
adc
jmp
push
xlat
sub
loopne
adc
ret
fwait
mov
loope
cdq
jg
outs
imul
ins
cmc
inc
push
xchg
popa
mov
mov
mov
add
cmp
aam
int3
ss
dec
ins
adc
mov
test
retf
ficom
add
mov
ror
mul
test
and
popa
(bad)
fisttp
cli
(bad)
mov
sub
add
test
movs
and
test
cmp
push
mov
dec
dec
dec
das
push
cli
push
mov
xor
inc
adc
xor
dec
outs
inc
mov
add
xor
xlat
outs
add
adc
xlat
dec
(bad)
dec
fwait
mov
push
xor
out
test
cmp
push
adc
xchg
push
or
cs
mov
add
jmp
and
mov
jns
or
adc
xchg
jge
daa
sahf
add
xlat
icebp
pushf
or
adc
loopne
cmp
push
sub
jmp
mov
(bad)
inc
je
xchg
inc
(bad)
adc
mov
add
inc
xor
fwait
push
or
cmps
dec
or
lock
add
push
sub
lods
rol
test
shl
xlat
arpl
add
jge
(bad)
call
inc
and
ror
jo
not
into
and
dec
daa
ret
jecxz
xor
fwait
or
inc
inc
mov
push
daa
inc
push
fmul
outs
fistp
mov
or
js
in
aaa
ret
dec
push
mov
outs
add
push
mov
cwde
frstor
inc
or
jo
xchg
dec
outs
ins
mov
push
sbb
mov
adc
inc
outs
ror
cmps
push
jae
xchg
adc
push
add
daa
ins
cdq
xchg
mov
shr
inc
and
sbb
cwde
dec
sbb
in
ins
fldcw
cs
movs
dec
test
push
mov
cmp
pop
push
xor
inc
call
lods
ss
call
mov
adc
ret
test
loopne
std
add
inc
xlat
sub
mov
or
sub
sub
lds
sbb
cmps
jns
pop
or
or
pushw
or
add
jns
push
sub
sbb
test
push
call
sub
xor
mov
cmp
ds
clc
add
xchg
mov
and
push
aas
adc
out
and
push
pusha
and
push
mov
ja
shl
push
cmp
aaa
mov
mov
pop
pop
daa
daa
(bad)
xchg
in
add
or
mov
(bad)
mov
inc
adc
dec
mov
fiadd
xchg
out
and
sub
into
clc
loop
pop
shl
push
sub
ins
call
inc
adc
add
add
pop
and
test
mov
or
add
inc
test
push
xchg
cmps
in
sbb
pusha
fdivr
das
imul
adc
popf
lods
fmul
mov
push
add
cwde
sub
lds
push
dec
ss
test
pusha
push
sbb
xchg
(bad)
rol
mov
jno
adc
mov
sub
add
xchg
imul
cmp
int3
jmp
or
jbe
pmuludq
or
aas
rcl
add
std
rcr
or
outs
or
add
xor
mov
mov
dec
loopne
adc
sbb
sub
int3
fild
shl
pop
sub
and
push
shr
ins
sub
pop
mov
js
mov
adc
dec
add
mov
xchg
or
sub
leave
xor
xchg
hlt
mov
pop
push
or
lock
mov
push
jbe
adc
push
ins
loope
call
movs
push
fs
and
je
adc
lea
out
cmp
les
and
and
sub
lock
ds
out
cmc
mov
sub
push
dec
pop
pop
add
test
sbb
inc
add
jge
pusha
lea
add
scas
mov
inc
jmp
jnp
aaa
inc
or
add
es
push
mov
stos
je
js
and
add
push
mov
dec
test
mov
xlat
iret
dec
push
add
rol
adc
(bad)
add
stc
loop
push
mov
or
adc
push
jle
xchg
sbb
push
jmp
sbb
mov
or
sub
cwde
cld
test
xchg
gs
cld
sbb
sub
lods
sub
cmp
lock
sbb
mov
sbb
xor
adc
jp
fcomp
push
rcl
pop
les
and
cmp
xchg
scas
add
fiadd
das
sbb
fistp
inc
xchg
loop
push
call
(bad)
outs
adc
adc
mov
sbb
xor
push
outs
jo
jmp
mov
inc
mov
js
or
and
repz
xchg
lea
sbb
xor
jmp
push
mov
cmp
pop
inc
adc
rol
jecxz
and
daa
push
shr
pop
push
in
nop
or
xchg
neg
clc
add
dec
sbb
retf
adc
and
rol
or
pusha
add
xlat
icebp
shr
inc
xor
sub
inc
push
dec
add
pop
jecxz
mov
ja
movs
dec
and
and
push
adc
xor
or
xor
int3
mov
adc
js
or
lock
adc
pop
dec
dec
add
sbb
sbb
jb
sbb
repz
inc
inc
pop
hlt
imul
add
jae
jno
push
xor
push
inc
or
mov
lea
lock
mov
xor
inc
and
arpl
xchg
mov
mov
xor
inc
jecxz
push
push
push
mov
add
js
and
mov
mov
sbb
push
or
push
(bad)
adc
rcr
call
sub
test
jl
les
or
add
cmp
icebp
and
daa
fadd
dec
add
xor
dec
lea
inc
sbb
sub
or
pop
ins
add
dec
sub
fucomi
sbb
enter
jbe
mov
pop
enter
aam
and
ror
xor
clc
ror
add
push
sub
push
or
pop
push
(bad)
fdivr
mov
add
or
push
xor
inc
cmp
cmp
jge
fmul
add
sub
test
ret
xchg
cmp
je
xor
mov
adc
mov
pop
scas
and
jo
jge
and
scas
add
xor
outs
popf
shl
into
call
push
lds
adc
push
test
or
adc
add
or
xchg
add
pop
daa
dec
adc
mov
sub
fisubr
push
or
das
cmp
cwde
out
sub
push
sub
or
outs
and
mov
cmps
sbb
or
lea
rol
ins
rcl
rcr
pop
rcr
push
push
ja
cmc
stc
rol
inc
imul
dec
xchg
jmp
mov
les
inc
ficom
or
jmp
mov
int
sar
mov
or
xor
inc
sub
jmp
and
mov
adc
mov
jbe
adc
add
int3
sahf
mov
push
dec
leave
adc
adc
cmovns
add
jle
inc
inc
leave
sbb
out
daa
add
je
or
or
or
mov
adc
fsub
mov
(bad)
adc
shl
es
sub
push
mov
sub
fld
mov
in
and
cmp
xor
jg
fist
je
ss
jns
lea
mov
ins
(bad)
and
dec
inc
sbb
rcl
add
sbb
shr
push
or
or
shl
add
xchg
sub
adc
ret
push
pop
enter
mov
xor
sbb
lea
cmps
or
pop
test
push
test
add
repz
push
ret
xchg
mov
or
(bad)
mov
in
dec
cmp
mov
rcl
pop
js
xor
adc
cmps
push
jecxz
(bad)
xor
adc
cmp
je
loopne
mov
mov
push
ja
push
xchg
adc
retf
aas
cmp
push
jnp
xchg
add
xor
inc
adc
shl
adc
fst
es
and
ret
mov
sbb
nop
sub
cs
push
je
or
loopne
dec
push
add
mov
add
ror
lock
lods
fstp
push
wrmsr
(bad)
adc
and
pop
adc
in
inc
lock
fcom
adc
(bad)
dec
push
inc
push
mov
xchg
dec
fstp
or
addr16
shl
lahf
push
mov
pusha
sti
les
sub
or
push
frstor
or
xor
mov
jne
mov
cmp
and
cmc
jl
dec
imul
aad
retf
outs
push
cmp
daa
rol
lock
lods
xchg
cld
push
sti
inc
loopne
cwde
call
jecxz
sbb
jmp
sub
imul
fadd
add
sbb
sbb
out
xchg
and
sar
push
lock
jne
shr
retf
or
mov
sub
adc
xchg
xor
cmp
retf
nop
and
mov
aas
inc
rol
call
adc
dec
adc
retf
or
or
cmp
in
dec
jmp
adc
lods
xor
inc
mov
mov
mov
mov
clc
pushf
lea
push
test
xlat
add
bound
push
dec
lods
mov
sub
ret
xor
inc
or
sbb
push
das
and
xor
add
xor
inc
test
cmp
cmp
cmp
adc
lds
rcl
and
or
and
jnp
xlat
pop
push
jnp
scas
out
adc
push
inc
inc
add
lods
mov
sbb
xchg
outs
cwd
and
or
mov
add
sahf
test
inc
fsub
ret
neg
jo
cdq
mov
add
inc
sub
inc
clc
add
mov
push
jl
and
mov
or
inc
fsubr
arpl
or
les
xchg
ret
bound
out
sbb
or
push
mov
sub
movnti
in
add
not
xor
ins
xchg
adc
push
push
pop
fld
retf
xchg
adc
rcl
xor
(bad)
fdiv
je
xor
aas
stos
sub
mov
dec
ret
into
aas
jecxz
xchg
xchg
outs
pop
sub
adc
push
push
cmp
and
(bad)
xor
or
sahf
sbb
hlt
pusha
retf
cdq
cmp
ret
bound
push
mov
push
stos
inc
or
add
cmp
pusha
adc
rol
fmul
add
mov
jo
inc
lahf
sahf
jno
call
mov
dec
jo
xchg
mov
sub
ja
ret
mov
push
clc
jb
jnp
push
push
mov
xchg
aam
and
movups
test
adc
push
aam
xchg
loop
adc
sub
sbb
xchg
mov
out
sbb
xchg
jns
add
xor
and
xchg
shl
mov
sti
or
mov
lods
cmp
ja
nop
push
jb
bound
fs
test
inc
cwde
or
jae
dec
mov
mov
or
push
mov
fsubr
mul
xor
sbb
lds
xor
mov
stos
or
push
push
push
imul
xor
adc
adc
cli
adc
repnz
ins
inc
push
xor
xor
outs
xor
bound
xor
jb
lock
fdivr
xor
adc
dec
sub
lods
mov
int3
addr16
push
adc
ins
aad
adc
arpl
loopne
dec
dec
jmp
add
cmp
je
std
int
or
stos
shr
bound
adc
and
add
lods
sbb
(bad)
ffree
cmp
sub
cmps
movs
cwde
(bad)
movs
pop
(bad)
sub
add
dec
mov
pcmpgtw
or
dec
dec
mov
or
sub
or
(bad)
mov
jle
nop
mov
mov
xchg
and
dec
add
inc
jmp
pop
inc
adc
mov
adc
mov
rcl
xchg
jle
pusha
or
jmp
test
mov
repnz
shr
mov
inc
inc
xor
inc
dec
mov
test
jl
mov
jo
in
sub
mov
xchg
mov
stos
arpl
mov
and
and
inc
sahf
push
pop
cmp
inc
inc
xor
push
sub
jo
sbb
or
neg
mov
jb
jb
into
and
push
shl
lahf
mov
push
inc
xor
add
jp
stc
lea
clc
adc
mov
nop
(bad)
loope
push
xor
stos
mov
mov
les
fs
xchg
repnz
and
shl
mov
push
jae
push
sub
push
add
or
adc
loopne
xlat
push
xor
xchg
popa
sbb
sar
add
mov
scas
in
stc
movs
adc
and
inc
rol
mov
inc
jg
das
sub
inc
inc
xor
mov
dec
adc
and
(bad)
inc
ins
pop
cmp
retf
mov
dec
xor
int3
std
dec
sub
or
aas
pushf
call
faddp
or
push
and
fimul
inc
push
call
clc
ret
popa
inc
xor
mov
rcr
cmp
inc
sub
or
sub
or
paddw
push
xor
cs
xor
jns
dec
inc
popa
push
test
sahf
sbb
test
imul
lock
scas
pusha
outs
cmp
and
jge
or
pop
and
lock
xchg
inc
sbb
lea
cmp
add
jmp
sbb
sbb
sub
fcomi
and
in
aas
ret
push
cli
in
jge
sbb
in
out
cmp
sbb
and
and
pop
inc
arpl
push
jns
setp
lods
dec
in
sbb
jns
call
rcl
xchg
ret
jae
xor
aaa
lahf
jne
in
popa
dec
push
aas
sbb
nop
or
and
xor
cdq
or
pop
mov
sbb
mov
mov
dec
daa
retf
cwde
test
inc
push
dec
adc
test
sub
lea
pop
mov
je
cmp
jmp
mov
sub
js
push
xchg
cld
nop
cld
add
inc
mov
xor
cld
add
sbb
or
push
aaa
cmp
or
adc
xchg
dec
inc
mov
mov
cmp
adc
add
repz
jb
xchg
movs
aas
xor
cmp
mov
fwait
add
sub
aam
inc
js
sbb
xor
xor
and
add
and
adc
rcr
test
xor
pop
sbb
stos
mov
sub
pop
add
jo
jb
dec
xor
xchg
push
sbb
pop
(bad)
adc
dec
add
pop
mov
sbb
test
mov
sub
lahf
ins
out
add
add
sub
jmp
clc
ins
mov
loope
jbe
inc
je
cdq
arpl
in
sub
or
enter
or
mov
xchg
int3
jecxz
rcl
add
dec
pop
(bad)
and
sbb
mov
out
jge
ret
or
pop
fwait
cmp
repnz
ret
sub
cmp
xchg
gs
and
in
xor
xor
xchg
dec
push
xchg
not
dec
xor
dec
inc
pop
mov
scas
mov
sbb
pop
cmp
pushw
mov
ins
ins
mov
add
jecxz
mov
dec
into
ja
or
pop
les
cmp
lock
pop
ret
out
stc
inc
jmp
in
and
sub
mov
mov
push
(bad)
stc
or
or
ss
jmp
pop
movs
(bad)
(bad)
xchg
xor
xor
push
cs
int3
pop
adc
xor
mov
push
not
call
or
adc
repz
mov
call
mov
and
fisttp
adc
aam
push
xor
push
popa
bound
(bad)
cmp
xor
push
add
dec
push
adc
clc
gs
jae
call
movs
xlat
sbb
bound
popa
loopne
je
mov
rcr
das
push
jp
and
dec
bound
cmp
jmp
mov
push
scas
push
or
jl
jnp
inc
push
xor
xchg
adc
push
dec
dec
dec
dec
es
xchg
pop
mov
es
or
push
es
mov
and
sbb
jl
add
inc
or
sbb
lods
gs
ins
xchg
xchg
mov
addr16
int3
aam
push
push
das
adc
inc
and
das
out
push
and
dec
jl
cmps
add
adc
or
add
loopne
push
enter
das
jg
cmp
push
call
(bad)
pminsw
or
xor
js
call
adc
adc
inc
xor
popf
inc
rcr
outs
and
cmp
inc
push
test
outs
jl
rcr
mov
sub
push
inc
adc
jl
xor
adc
xor
push
inc
inc
lods
pusha
pushf
cmp
xor
pop
dec
push
dec
add
mov
rcr
add
add
(bad)
popf
inc
jl
adc
push
push
push
add
cmps
jns
das
xchg
pop
xchg
push
mov
pop
adc
and
sub
xor
or
and
add
icebp
inc
jo
pop
or
pushf
and
adc
int
push
add
in
call
and
pop
push
add
add
mov
cmp
fwait
pop
or
fild
inc
mul
movs
aam
dec
popa
data16
inc
pop
inc
in
mov
xor
add
lock
loop
jle
std
mov
inc
and
inc
or
add
pop
into
sub
iret
and
hlt
xchg
mov
cmps
loopne
jne
sub
xor
or
and
enter
adc
hlt
sbb
js
arpl
pusha
mov
sbb
(bad)
xor
int
jmp
imul
icebp
or
add
fwait
aaa
jbe
test
xchg
jmp
call
pusha
inc
jne
xchg
mov
mov
call
push
ins
or
push
and
(bad)
mov
stc
pop
ja
pop
or
aaa
or
or
jae
or
inc
enter
out
scas
pusha
shl
add
popf
ret
push
and
stos
test
mov
sar
popf
jmp
inc
sbb
jae
and
mov
mov
and
lea
add
mov
cmp
inc
add
push
add
outs
add
mov
dec
in
add
or
add
cs
add
daa
add
mov
or
fld
fwait
adc
cdq
lea
dec
and
leave
mov
inc
sti
xor
inc
dec
call
adc
test
adc
add
xor
sbb
or
and
jae
jbe
call
jecxz
mov
jbe
or
daa
outs
inc
push
dec
inc
pop
inc
mov
push
push
pop
cli
bound
fcom
mov
mov
xor
adc
xor
nop
arpl
pop
and
and
mov
ret
sub
pop
call
xor
pop
mov
xchg
push
adc
pop
inc
fadd
add
gs
pop
mov
pop
inc
and
push
daa
inc
pop
xchg
test
pop
or
push
sub
pop
js
jg
frstpm(287
in
pop
sbb
pcmpeqw
mov
add
gs
dec
cmp
adc
pop
std
lock
lds
inc
inc
pop
dec
sub
fldenv
push
sahf
fimul
add
pop
inc
je
in
push
dec
push
add
stos
mov
or
ins
add
jne
in
hlt
jb
addr16
inc
xor
push
or
add
add
jo
sbb
mov
stos
mov
inc
mov
inc
les
imul
sub
xor
outs
jb
push
pusha
add
pop
inc
sahf
jecxz
ss
mov
mov
add
inc
xor
inc
push
add
and
push
outs
mov
sbb
movs
or
or
ret
mov
add
inc
and
cs
test
push
push
shl
jg
dec
jno
pop
xor
or
ret
push
rol
dec
or
sbb
ins
clc
out
adc
shl
add
adc
and
sub
mov
push
adc
clc
inc
dec
inc
dec
inc
dec
dec
inc
pop
inc
push
push
xchg
dec
adc
sub
or
xchg
in
sbb
frstor
jp
cmp
mov
repz
or
push
push
jl
in
ret
and
cmp
add
repz
std
or
aas
dec
jne
push
shl
and
add
je
push
xor
cmp
dec
ins
cmps
sbb
or
push
jge
cmc
inc
retf
inc
pop
ss
inc
push
das
jae
sbb
aad
sar
mov
cmp
inc
rcr
add
xor
cmp
shl
in
cmp
cmp
(bad)
aam
cmp
cmp
int3
enter
cmp
cmp
cmp
lods
test
mov
pushf
cwde
xchg
nop
cmp
cmp
mov
cmp
jl
je
cmp
cmp
ins
push
test
or
nop
adc
inc
dec
cmp
and
dec
dec
ret
mov
sbb
inc
aad
enter
shl
push
movs
fs
mov
ss
mov
adc
push
inc
arpl
cmp
lods
addr16
jmp
std
cli
dec
(bad)
pop
sahf
pop
dec
inc
push
inc
dec
dec
push
js
arpl
lea
mov
sub
sub
push
lods
das
or
call
pop
xchg
ins
push
sub
sbb
out
cdq
and
hlt
rol
fsubr
lock
and
jb
lock
in
and
in
sbb
dec
sbb
(bad)
call
xor
sti
mov
add
jle
dec
(bad)
mov
aaa
scas
mov
xor
xchg
retf
out
and
or
adc
xchg
xchg
dec
dec
push
push
xchg
xchg
xchg
xchg
pop
pop
pusha
fs
xchg
xchg
xchg
push
xchg
xchg
xchg
js
add
nop
xchg
xchg
xchg
xchg
xchg
cwde
pushf
mov
xchg
test
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
fcomp
loopne
xchg
xchg
xchg
xchg
call
sub
xchg
clc
jge
inc
pop
lods
mov
jl
js
pop
mov
xchg
push
jl
sub
mov
pop
jns
inc
(bad)
dec
sub
lahf
retf
push
add
xchg
mov
add
int3
push
sub
add
sub
test
and
in
addr16
push
pop
dec
mov
xlat
addr16
retf
pusha
and
cs
sbb
push
retf
fs
sub
push
mov
lods
or
gs
adc
inc
sub
test
push
nop
sti
and
cwde
int3
pushf
call
mov
push
push
movs
sub
retf
mov
gs
sub
mov
mov
in
mov
gs
sub
dec
xchg
add
nop
push
movs
xor
shr
(bad)
fsub
push
cs
sbb
sbb
sbb
call
test
rcl
fs
hlt
inc
push
ja
pop
lea
retf
jns
data16
mov
rol
push
push
retf
dec
add
xor
sbb
ins
push
pop
add
inc
ja
mov
dec
imul
xor
fisub
jg
out
mov
jbe
push
xchg
sbb
jae
addr16
sub
adc
pop
xchg
leave
jp
inc
dec
dec
das
push
or
pop
imul
sahf
clc
scas
and
dec
repnz
ja
push
fcom
dec
(bad)
push
out
xchg
adc
jbe
jmp
ret
out
bound
pop
dec
or
jmp
cmp
out
outs
jb
aaa
imul
xor
adc
or
mov
add
inc
cs
sbb
outs
test
jo
xor
add
sub
mov
pusha
inc
stos
aaa
mov
or
push
cvtdq2ps
jbe
adc
mov
pop
pop
pop
lods
sub
mov
fist
rcl
or
(bad)
and
mov
popa
inc
push
ins
push
mov
inc
inc
adc
xchg
jne
inc
push
push
(bad)
fmul
mov
les
add
push
ins
sbb
mov
call
aaa
out
shl
lock
xlat
(bad)
adc
add
imul
pop
mov
xorps
add
cmp
scas
dec
dec
fadd
retf
jae
sahf
(bad)
jbe
inc
rol
fwait
xor
cmps
(bad)
mov
pop
mov
(bad)
mov
and
mov
je
sbb
sbb
adc
jp
shl
pop
mov
add
or
pushf
lock
mov
jg
repz
mov
xor
mov
test
dec
dec
push
dec
push
pop
sbb
add
mov
add
hlt
add
cld
mov
clc
hlt
push
push
xlat
adc
pop
pop
add
and
in
daa
or
or
push
in
add
add
(bad)
nop
inc
add
cld
and
das
clc
mov
adc
das
ins
push
sub
pop
lahf
cmps
fld
jle
mov
add
jbe
xchg
pop
nop
pop
add
inc
cmp
loopne
les
cdq
pusha
add
adc
pop
jbe
and
rcr
ja
js
lock
shl
mov
aam
test
adc
ret
push
stos
popa
shufps
in
call
(bad)
jmp
pop
mov
shl
mov
ins
test
push
pusha
inc
push
adc
mov
daa
or
dec
sbb
sar
imul
mov
sub
movs
jno
dec
push
push
repnz
pop
inc
jle
push
add
inc
xchg
push
sub
aas
dec
les
inc
(bad)
mov
push
add
out
inc
push
dec
add
(bad)
in
xchg
dec
push
mov
sbb
ret
or
data16
test
mov
add
inc
sub
hlt
call
test
in
pop
dec
jmp
movs
fld
xor
in
sti
and
xchg
daa
gs
adc
ins
fadd
test
and
add
push
fcomp
mov
repz
inc
(bad)
push
adc
inc
call
sub
jae
add
ins
sub
fadd
repnz
add
jl
stc
adc
adc
bound
dec
ja
shl
push
movs
cmp
pop
(bad)
or
push
cmps
add
pop
push
nop
add
cmp
push
sub
inc
adc
add
or
jae
(bad)
fild
jbe
jg
nop
cmp
push
dec
pusha
leave
add
pop
mov
cld
jae
add
popa
adc
and
out
pop
add
add
out
mov
jns
je
xor
cmps
fnstcw
push
add
je
daa
mov
inc
sti
push
inc
push
dec
xchg
jbe
mov
push
add
sub
daa
or
imul
xchg
stos
push
dec
ret
dec
adc
mov
inc
es
(bad)
xchg
xor
xor
pop
jae
inc
dec
ror
lea
push
nop
mov
mov
ja
in
loop
or
sar
in
mov
jae
daa
jl
inc
dec
test
jbe
test
inc
popf
fisttp
std
dec
ja
xor
push
inc
pop
lods
push
add
punpckhdq
stc
jmp
mov
mov
mov
cwde
sbb
jl
inc
sbb
in
test
lea
and
mov
js
popf
or
pusha
xor
cmp
jne
inc
dec
push
mov
cmp
fmul
or
mov
nop
jle
dec
jae
add
jle
pop
adc
xor
sbb
mov
aad
div
or
jno
jno
ror
sub
jmp
pushf
adc
fldcw
pop
lods
push
add
pop
jo
xchg
cmp
aad
pop
mov
lea
mov
aam
xlat
pop
aam
push
and
mov
xchg
inc
(bad)
es
sti
dec
xor
sbb
xchg
inc
dec
dec
add
add
mov
dec
push
and
jns
mov
add
(bad)
xchg
and
fild
stc
add
xchg
inc
jp
xlat
sub
ror
push
inc
mov
jp
xchg
inc
mov
sti
fld
cmp
hlt
jp
add
sub
push
or
jecxz
jae
cdq
inc
hlt
cmps
xor
or
add
jbe
and
adc
cmp
pusha
mov
sbb
mov
(bad)
rol
std
xchg
dec
das
mov
aad
cmp
push
or
add
push
sub
or
sbb
fld
inc
aam
ja
sub
adc
jp
ins
adc
jne
jae
xchg
pop
jl
data16
xor
jle
sub
push
pusha
adc
dec
js
mov
loope
mov
push
mov
inc
enter
cmp
js
xchg
fild
mov
in
ins
jo
mov
adc
and
imul
ins
or
jmp
push
ss
add
loop
jno
sub
out
dec
mov
es
sub
adc
or
and
jae
loope
sub
movs
outs
mov
outs
inc
adc
test
sub
ret
stos
fsub
dec
add
aas
fldenv
in
jo
pop
mov
pop
js
dec
imul
lock
movs
lds
test
xchg
lods
push
pop
push
inc
sub
dec
mov
mov
popf
sub
out
lock
sbb
movs
stc
pop
xchg
sub
lock
outs
jle
std
jns
movs
jle
jle
inc
jg
js
mov
sbb
push
cmp
or
pop
ss
add
xchg
pop
jg
mov
and
call
cmp
pop
shl
fild
cmp
rol
test
jmp
dec
add
mov
jmp
or
inc
inc
inc
jle
leave
out
inc
inc
cs
adc
inc
inc
inc
cmps
enter
enter
test
(bad)
mov
dec
mov
mov
inc
ret
xchg
lea
popf
inc
movs
stos
outs
push
jno
cdq
in
popf
jb
mov
xchg
mov
enter
ret
das
call
or
sbb
pop
stos
sbb
nop
jl
shl
(bad)
movs
scas
or
cmp
mov
scas
cmp
imul
pop
inc
or
stc
int3
add
fild
clc
int
in
and
xchg
mov
mov
inc
add
inc
sub
sbb
lahf
aam
mov
jae
push
push
add
repz
clc
or
and
pop
cmp
repz
test
iret
rep
test
mov
mov
mov
add
adc
movs
or
and
push
adc
icebp
leave
rol
pop
ja
mov
add
popa
mov
ret
or
popa
lahf
xchg
retf
shl
sbb
shl
bndstx
aaa
and
jle
cmps
mov
stc
push
je
or
je
mov
sub
and
and
jnp
mov
nop
ret
mov
inc
xor
lea
sbb
ficom
xchg
pop
adc
mov
outs
mov
push
jg
adc
mov
pusha
jb
(bad)
movs
jnp
dec
or
push
pusha
xchg
shr
xchg
or
adc
call
or
adc
sti
inc
mov
ret
xor
ins
mov
aas
add
call
enter
movs
xor
adc
sub
in
sub
aas
adc
fs
jo
pop
jbe
jbe
mov
js
add
cmp
and
sbb
dec
ret
mov
test
mov
cmp
(bad)
xchg
add
and
aad
jecxz
sub
inc
cmp
inc
push
js
or
cmp
cmp
adc
inc
cmp
dec
iret
dec
or
pop
inc
or
jmp
pop
mov
and
push
add
rol
xor
and
jg
push
sbb
sbb
jecxz
lods
mov
ins
sub
or
outs
mov
ror
retf
cmps
dec
fdiv
pop
or
(bad)
lock
xchg
jno
fild
in
xchg
push
cmp
jecxz
repnz
adc
and
enter
cmp
jne
ret
mov
add
neg
cmp
aam
inc
adc
fs
push
fistp
out
outs
dec
add
cmps
mov
mov
cmps
or
add
in
div
adc
sahf
test
xchg
dec
ins
mov
jno
dec
out
shr
or
imul
inc
mov
aaa
mov
mov
mov
loopne
mov
cmp
push
sbb
ja
push
pcmpeqb
data16
call
in
pop
cmc
adc
dec
sub
frstor
xchg
mov
xchg
bound
sbb
out
push
push
sbb
cli
mov
xchg
aas
xor
stos
mov
cmp
stc
mov
or
fs
inc
cmp
jmp
xchg
push
es
scas
jns
or
push
add
outs
adc
int3
jge
and
mov
xor
and
push
xchg
pop
pop
pop
sub
adc
add
xor
jnp
jnp
add
es
xor
pop
in
inc
and
out
cmp
inc
mov
xor
sub
and
aas
add
xor
adc
nop
pop
jmp
jle
frstor
inc
sbb
jp
(bad)
cmc
adc
jb
inc
test
mov
inc
rol
test
or
xor
lds
adc
and
sqrtps
mov
add
xchg
add
test
xchg
pop
xchg
inc
call
or
mov
adc
mov
ror
mov
rcr
aam
popf
xchg
(bad)
lods
imul
jl
repnz
adc
or
jge
jb
and
je
les
mov
push
nop
push
js
sbb
test
or
cmp
in
and
pop
sub
cmp
mov
mov
and
xchg
jae
add
jnp
das
pop
inc
mov
push
xchg
dec
imul
or
dec
shl
inc
inc
inc
sbb
push
dec
shl
enter
cmc
je
sbb
pop
mov
mov
in
xor
and
ror
jno
cmp
and
mov
sbb
pop
cmps
sub
aam
xchg
shr
outs
mov
xchg
add
and
ret
shl
aam
pop
(bad)
sbb
int3
jo
add
and
pop
jo
push
jp
pop
pushf
cmp
cmp
inc
loopne
sub
fldcw
adc
loopne
and
mov
xchg
jns
add
push
fiadd
dec
je
jle
out
movs
fisttp
pop
push
jnp
ror
or
sbb
pop
or
inc
out
cld
je
mov
or
je
pop
push
pusha
test
test
dec
inc
jmp
sub
mov
mov
mov
jle
lods
inc
pop
stos
sbb
jge
shl
or
mov
add
sbb
(bad)
or
adc
or
fiadd
cwde
je
push
mov
pop
lods
movs
es
mov
aaa
pop
xchg
or
imul
addr16
mov
xchg
and
inc
inc
add
xchg
aad
imul
adc
mov
test
aaa
scas
and
mov
inc
mov
fsub
push
adc
xchg
or
or
jns
int
ret
mov
mov
sub
xchg
jo
ret
mov
mov
inc
icebp
mov
test
mov
pop
xor
or
es
test
in
xor
push
pop
pop
loop
dec
pop
dec
cmc
ret
mov
inc
cmp
sbb
xchg
nop
(bad)
sbb
data16
in
add
and
cmp
dec
jnp
icebp
add
push
cmp
cmp
aam
jno
or
cmp
rol
push
mov
dec
sbb
sbb
je
dec
in
adc
mov
nop
(bad)
scas
lods
pop
sbb
inc
sbb
or
sbb
xor
push
(bad)
pop
fist
lods
jmp
sar
icebp
popa
movs
inc
xchg
cld
jg
inc
movs
leave
xchg
push
lock
adc
mov
adc
enter
sbb
inc
xor
xchg
out
dec
rcr
xchg
es
dec
scas
fdivr
or
add
sub
xor
push
adc
inc
cld
in
sahf
or
push
retf
sbb
mov
adc
xor
jl
stc
push
jl
push
out
sub
popw
das
or
pop
ret
in
and
push
ds
mov
push
pop
maxps
sub
add
xlat
pop
js
(bad)
das
xor
xor
xor
push
call
push
push
mov
and
test
sbb
mov
nop
addr16
add
push
push
add
push
push
or
cmp
lods
inc
es
cmp
mov
cmps
sbb
inc
or
sbb
call
sbb
or
dec
fisttp
and
and
std
fiadd
sbb
inc
or
add
test
call
neg
(bad)
jae
jmp
out
adc
add
or
adc
jne
imul
outs
inc
or
jg
mov
jl
or
or
mov
push
or
adc
lods
mov
les
js
(bad)
pop
push
call
xchg
and
ror
pop
inc
or
les
icebp
mov
mov
pop
fist
add
loop
sub
push
xor
ret
mov
repnz
push
dec
push
out
add
mov
lods
test
div
ss
inc
dec
sub
loope
xchg
mov
cmp
and
inc
inc
dec
push
mov
push
push
inc
cld
and
(bad)
push
test
fisttp
test
jle
add
inc
sbb
push
jnp
xchg
sub
loop
fidiv
adc
std
mov
or
inc
call
or
sbb
loopne
cwde
mov
push
(bad)
fld
pop
fcom
adc
pop
faddp
movs
mov
add
jnp
or
cwde
dec
adc
pop
loopne
sub
mov
cdq
stos
xchg
xchg
bound
inc
outs
nop
fldcw
push
and
jg
rcl
push
sub
adc
add
js
mov
mov
je
xchg
test
xor
push
adc
mov
out
dec
xor
in
pushf
fild
cmp
jg
es
mov
lock
mov
sub
xchg
pop
mov
dec
cmp
push
ds
mov
push
and
xor
sub
outs
cmps
push
xor
xchg
pop
xor
add
xor
and
mov
shl
mov
and
adc
ss
fisttp
dec
or
cmp
jbe
mov
sahf
mov
daa
and
in
sbb
and
out
dec
arpl
jmp
ficom
add
dec
xchg
xor
sub
int
inc
xchg
fcom
les
push
xor
(bad)
pusha
bound
add
mov
es
mov
test
repnz
popa
in
shr
fsubr
push
pop
jne
xor
scas
add
test
or
rcr
dec
xchg
cmp
xor
jae
movs
call
push
test
sbb
push
fisubr
pusha
cli
xchg
or
xchg
mov
outs
pop
data16
add
and
mov
xchg
or
mov
pusha
sbb
les
adc
(bad)
cmp
xchg
and
retf
leave
jno
dec
fstp
xchg
jmp
sar
xchg
rcr
mov
mov
push
inc
inc
cmp
pop
mov
je
das
or
push
in
mov
sahf
fst
mov
lea
enter
mov
jb
xor
cmp
mov
cmp
inc
jl
mov
sub
jmp
xchg
scas
dec
mov
ret
scas
movs
imul
jl
add
or
or
lea
lea
inc
sar
jle
jmp
fld
fsubr
outs
mov
inc
push
add
dec
dec
adc
mov
mov
lock
popa
xchg
loopne
cmp
ins
mov
push
nop
xor
jmp
inc
xor
sbb
inc
adc
adc
add
ret
or
cmp
fidiv
and
sub
push
xor
push
mov
cld
loopne
pcmpeqw
push
pcmpeqb
je
add
jmp
call
add
je
xchg
dec
je
pop
add
cmp
jg
dec
adc
inc
adc
shl
outs
mov
inc
or
loop
fsub
hlt
and
sti
nop
mov
push
jo
xor
push
cmp
sub
pop
push
push
add
push
sbb
inc
adc
jae
sar
sub
sbb
jno
je
and
push
adc
pop
inc
mov
or
ja
cmps
pop
wbinvd
rol
xchg
leave
xchg
ja
or
je
mov
add
ror
fsubr
jnp
jne
and
jne
jnp
mov
addr16
push
adc
sub
xor
leave
fiadd
jnp
cmp
and
pslld
dec
xor
das
add
stc
in
add
pop
je
dec
adc
mov
sbb
push
popa
adc
test
fs
add
icebp
jmp
cmp
mov
sbb
(bad)
jbe
inc
int
jge
xor
sub
push
cmp
mov
push
inc
jnp
or
loopne
rol
(bad)
mov
dec
lea
sub
mov
daa
add
cmp
xchg
ss
or
loopne
inc
adc
inc
mov
pusha
aas
jle
in
mov
sub
and
das
adc
mov
add
or
adc
loopne
arpl
shr
pop
loopne
push
pop
mov
and
add
int
xor
sub
push
mov
ret
xor
adc
jns
rcl
into
inc
xor
adc
or
fisub
mov
push
push
push
jne
scas
and
icebp
int
add
loopne
or
xchg
(bad)
cmps
ins
std
mov
pop
ins
mov
mov
mov
mov
fsub
(bad)
pop
mov
sub
push
sub
mov
sbb
mov
cmp
inc
xlat
sbb
cdq
cmp
xor
xchg
jne
cmp
cld
fnstenv
sub
push
xor
dec
clc
cmp
fld
pop
mov
dec
or
dec
mov
popa
cmp
and
push
cmp
ja
xlat
push
jo
adc
jae
jne
pop
adc
dec
aad
lahf
push
mov
out
rcr
cmp
hlt
ret
dec
xor
fwait
dec
dec
hlt
inc
and
test
nop
push
mov
hlt
jg
out
ss
movs
inc
dec
sbb
sbb
or
sahf
fld
push
loop
xchg
xchg
mov
or
pop
xchg
hlt
addr16
enter
pop
jle
pop
xor
xor
in
jnp
leave
enter
in
in
or
and
adc
out
inc
and
call
cs
leave
enter
adc
addr16
vmread
pusha
pop
fs
xor
push
sub
jbe
inc
mov
mov
or
jp
mov
adc
dec
mov
mov
sub
or
std
jp
jne
xor
aas
out
add
sbb
loopne
inc
push
in
mov
das
sbb
xor
dec
fisttp
ins
xor
(bad)
imul
fldenv
out
jge
or
jne
lock
sub
mov
jge
imul
or
aam
shl
dec
ficomp
fdivr
jle
bound
je
pop
mov
cmp
mov
out
scas
sub
sub
fnstsw
pop
jmp
sbb
jae
cld
adc
outs
add
dec
loopne
ret
dec
jl
dec
push
(bad)
dec
add
inc
cdq
test
push
pop
rcr
mov
mov
repz
icebp
jg
test
out
cmp
add
pushf
add
mov
mov
xor
mov
and
adc
scas
fs
mov
or
jmp
rcr
mov
mov
pop
inc
shl
(bad)
push
and
pop
or
test
push
js
xor
in
outs
xchg
sub
inc
je
(bad)
(bad)
dec
je
pop
je
addr16
jno
jno
push
fild
shl
sahf
and
push
mov
sbb
push
fsubr
xchg
or
sbb
xor
clc
sbb
jne
std
dec
test
stos
add
cmps
sub
retf
daa
outs
aad
fmul
push
cdq
adc
xchg
fsubr
pcmpgtw
je
cmp
inc
dec
dec
sub
sub
pushf
mov
mov
adc
scas
adc
ja
sub
or
add
data16
sub
inc
inc
dec
inc
in
xchg
cmp
or
or
rcr
sub
add
movs
mov
sbb
jmp
jo
mov
cmp
jmp
cmps
xchg
pop
xchg
add
push
mov
cmp
out
cmp
and
or
xor
jae
inc
push
xor
or
pop
sbb
and
and
push
adc
mov
rcr
sahf
ins
inc
mov
(bad)
adc
adc
hlt
fnstsw
inc
and
xchg
js
aaa
jle
add
call
xor
xchg
or
mov
xchg
xchg
mov
add
inc
in
push
and
lea
retf
push
imul
out
lea
jb
dec
jl
ins
aaa
pop
imul
shl
es
pusha
and
mov
pop
push
dec
mov
jl
or
inc
or
js
ins
imul
mov
push
test
xchg
call
dec
xchg
jno
ins
out
sub
push
adc
lock
lock
or
xchg
and
cmp
dec
ins
sub
call
dec
out
or
or
inc
push
pop
gs
cmp
cld
es
cmp
jbe
jo
clc
dec
or
sbb
cmp
call
xor
sbb
nop
adc
cmp
adc
jle
sti
mov
push
cmp
jne
sysexit
jb
jb
sub
movs
jne
or
js
lea
mov
aad
adc
cmp
jge
mov
pop
jo
icebp
cmp
xchg
jge
and
sub
sbb
sar
or
hlt
jbe
xchg
inc
xor
mov
mov
cmp
into
mov
adc
jg
add
cmp
push
test
fiadd
add
and
shl
adc
jne
mov
sub
sub
jne
call
push
mov
mov
cmp
ja
inc
rcr
add
push
xlat
mov
jo
ins
sub
ss
inc
inc
or
jne
ja
data16
sub
add
inc
mov
dec
fs
dec
inc
or
dec
add
or
or
mov
fstp
outs
ins
add
push
push
jmp
shl
xchg
in
pushf
je
jb
mov
adc
mov
dec
fs
lods
inc
push
test
imul
xor
adc
jbe
push
and
jp
dec
sbb
add
push
push
jbe
ret
pop
stc
sub
aam
loop
cmp
or
test
add
sub
dec
sub
inc
xchg
mov
mov
pusha
push
aam
sub
ins
iret
add
cli
dec
cs
adc
mov
xor
and
dec
movs
ficom
or
pop
clc
loopne
test
dec
cdq
xor
lods
sar
sti
or
xchg
and
or
push
ins
or
sub
dec
sub
add
ja
push
mov
mov
mov
dec
pop
push
test
push
data16
add
cmp
icebp
push
add
je
jp
mov
or
or
jmp
jmp
sbb
(bad)
push
lods
lock
mov
imul
popa
stos
bound
push
dec
inc
sahf
inc
fnstenv
lods
rcl
or
lea
add
test
push
mov
and
xor
cli
cmp
cmp
jle
xchg
add
imul
inc
add
rol
loopne
xchg
add
outs
add
xor
dec
xor
inc
rol
fst
lock
or
push
push
ja
push
adc
cdq
add
enter
loopne
or
clc
inc
pusha
aam
ror
daa
stos
leave
or
inc
push
push
inc
out
in
out
mov
mov
adc
sub
xor
dec
inc
or
push
imul
mov
sub
xor
test
or
pop
aaa
cmp
out
add
mov
leave
(bad)
xchg
adc
sar
mov
ret
add
ror
and
and
and
enter
mov
cmp
add
inc
xchg
adc
cmps
call
sub
mul
mov
dec
mov
mov
sahf
(bad)
ror
pusha
rcr
inc
mov
jae
ret
add
pop
jbe
jmp
pop
adc
outs
adc
sbb
das
xor
push
xchg
inc
mov
nop
or
xchg
add
je
not
std
jns
or
and
adc
adc
pop
(bad)
pop
lds
dec
jl
es
fs
arpl
push
inc
js
and
rol
aaa
movs
(bad)
or
add
sbb
clc
and
or
test
js
call
adc
add
xchg
add
dec
dec
xchg
mov
ds
jmp
imul
ins
aam
xor
jnp
jne
and
ins
cmp
push
cmp
aaa
inc
pop
push
mov
inc
adc
sub
shl
and
fbstp
cwde
retf
retf
pop
enter
adc
add
cmp
in
dec
xor
icebp
mov
mov
push
inc
or
test
neg
and
add
movs
jmp
daa
sub
pop
loopne
or
sar
jbe
add
mov
inc
in
cmp
jne
adc
or
outs
and
in
pop
inc
bound
cmp
jne
sysenter
in
in
sub
sbb
fdivr
jmp
enter
shl
xor
xor
jb
add
and
rcr
in
mov
adc
pop
imul
mov
inc
out
add
dec
repz
sbb
or
(bad)
stos
push
nop
sbb
in
std
mov
push
out
(bad)
and
and
shl
add
push
sbb
cmps
sub
mov
ja
or
push
xor
repz
cmp
add
and
scas
leave
dec
js
and
inc
sbb
xchg
or
jo
or
loopne
call
outs
mov
jbe
lahf
ds
adc
sbb
lahf
cmp
push
daa
cmp
adc
adc
cmp
ins
add
popf
mul
sbb
adc
inc
mov
cmp
cmp
jg
call
jno
or
mov
(bad)
sar
inc
cmp
into
jge
jbe
mov
jecxz
mov
std
mov
outs
or
push
ins
rcl
cmp
dec
mov
test
out
push
into
push
jno
mov
and
loope
pop
xchg
xor
push
pop
sbb
ss
repnz
jnp
fidiv
outs
scas
lahf
mov
fsub
jmp
sub
sbb
ficom
cmp
cld
add
jo
icebp
push
mov
cmps
mov
push
clc
or
out
les
sbb
jp
nop
add
jmp
setl
or
call
sbb
dec
adc
(bad)
out
inc
mov
jge
xchg
clc
pop
lods
inc
cmp
lock
jl
or
stc
and
sbb
not
fidivr
shl
add
add
in
sub
dec
inc
push
outs
sbb
ret
xchg
pop
pop
add
sbb
and
push
mov
dec
inc
inc
xchg
sub
call
sbb
ss
adc
cmc
mov
mov
mov
jp
dec
inc
sub
dec
jle
jecxz
jb
cmp
jb
mov
pop
ror
push
jns
jle
fst
jle
sub
pop
fist
cmp
je
sbb
pop
(bad)
push
pop
add
sahf
and
and
int3
jmp
mov
call
nop
repnz
xor
jne
aas
cs
dec
sub
sub
cmps
pop
imul
mov
and
ins
iret
js
adc
adc
nop
push
push
fidiv
xor
add
ins
push
pop
jb
or
jmp
nop
add
popa
inc
cmps
mov
and
adc
cld
sbb
jns
jae
xchg
inc
lods
cmp
and
mov
xlat
cmp
sar
pop
lahf
fwait
cli
jmp
mov
int
stc
xor
arpl
out
jl
shl
iret
sar
ret
repnz
arpl
pop
ds
enter
retf
stc
xor
repz
dec
int3
or
lahf
xor
into
test
add
sub
test
aam
adc
jae
clc
add
mov
clc
jbe
scas
loop
push
lock
or
fisub
or
and
int
jb
pop
mov
or
add
add
mov
add
or
inc
shr
rcr
add
ror
outs
hlt
dec
clc
add
pop
jns
daa
mov
pusha
add
bound
xor
add
sbb
scas
faddp
call
ret
sub
jg
sbb
sahf
sbb
jl
loope
out
aas
ja
inc
dec
lahf
shr
in
push
dec
loop
clc
stos
fadd
or
push
or
mov
push
fdivr
jbe
push
inc
sbb
fadd
adc
mov
lea
test
mov
sub
ror
sub
fnsave
add
xchg
xor
or
cmps
test
mov
xor
inc
sbb
cmp
nop
loopne
inc
or
pop
call
push
push
inc
push
dec
jmp
dec
into
sbb
dec
sar
dec
add
loope
and
mov
out
push
div
inc
add
ss
adc
xor
jno
or
push
mov
push
pop
sahf
addr16
std
rcl
adc
test
adc
fdivr
nop
push
(bad)
jmp
and
out
or
std
add
add
outs
int
repnz
cmovge
fcmovu
xchg
lock
lock
mov
push
or
sub
xchg
adc
xchg
push
add
adc
cmp
js
inc
pushf
prefetchwt1
sti
dec
mov
ror
clc
aas
repnz
shr
cli
jnp
add
sbb
int3
add
fsub
add
and
mov
sahf
or
sub
xor
add
sbb
sub
shl
in
test
bound
jle
mov
xchg
mov
ins
mov
push
es
inc
sbb
cmp
pusha
mov
mov
dec
sbb
inc
add
xchg
inc
fdivr
add
adc
gs
cld
arpl
push
ret
adc
mov
inc
aam
pop
sub
je
in
or
push
or
cs
xor
cmp
rol
and
mov
ja
lds
jns
jecxz
(bad)
or
je
dec
or
sub
nop
and
daa
call
sbb
popa
repz
push
push
clc
or
push
sub
or
or
pop
and
lock
mov
das
jmp
dec
out
loopne
sub
jno
into
inc
add
add
or
fidiv
xor
or
and
pop
mov
and
push
call
ffreep
add
or
mov
dec
rcr
test
or
pop
jno
cdq
out
push
mov
or
push
(bad)
test
into
and
shr
movntps
xchg
xor
sbb
ror
add
adc
(bad)
dec
add
mov
test
add
je
dec
and
jmp
loopne
jl
cmps
or
jo
out
inc
js
and
push
jne
sub
sub
fidivr
stos
jmp
push
adc
in
xchg
mov
adc
adc
bound
lock
or
jnp
and
cmc
jmp
bnd
adc
inc
fidivr
sbb
fdiv
pop
pop
cwde
pop
mov
xor
ja
add
cmc
push
adc
cmp
fiadd
aaa
inc
xor
xchg
int
xor
xchg
pop
repnz
xor
scas
adc
jns
push
sub
mov
add
daa
inc
enter
pop
add
shl
add
and
add
jle
cmp
push
push
jbe
push
push
sbb
and
xor
add
jecxz
dec
and
sti
fmul
sti
push
aad
push
sbb
inc
xor
movs
push
out
pop
aad
jo
add
push
push
scas
jmp
dec
std
inc
out
inc
mov
mov
lds
call
dec
push
cmp
mov
lahf
push
push
push
lea
adc
leave
sbb
jb
imul
inc
enter
adc
push
mov
shr
dec
and
or
ins
lock
loopne
inc
loope
lock
xlat
ror
mov
jmp
dec
loop
(bad)
dec
ins
jge
jmp
push
xchg
call
dec
sahf
icebp
jb
lods
add
xor
jbe
sbb
data16
inc
and
fwait
push
cli
adc
inc
sti
popf
and
mov
stos
and
pop
stos
repnz
jne
pop
loope
cmp
ror
cmp
lods
gs
or
shr
inc
add
inc
jb
pop
add
pop
mov
fs
push
cmps
outs
pop
mov
or
pop
xor
mov
add
retf
jne
sub
cmovbe
mov
bswap
cmp
push
pop
jmp
out
je
pop
jo
sub
sbb
pushf
js
and
mov
std
dec
adc
in
sbb
or
sahf
dec
jo
adc
aaa
mov
mov
mov
fwait
div
scas
mov
pop
push
mov
test
push
rol
and
dec
enter
dec
rcr
mov
cli
bound
adc
lea
and
pop
push
sub
cli
jb
retf
clc
mov
popa
cmp
sub
push
cmp
fisttp
jo
xor
push
mov
or
test
icebp
mov
stos
xor
movs
fisttp
je
in
ficom
lods
loopne
adc
add
cmp
jle
inc
loopne
jne
mov
jb
fdivr
hlt
pop
fadd
enter
shr
(bad)
fiadd
rol
xchg
mov
enter
loope
int3
and
sahf
add
rol
loopne
inc
cdq
ds
cmps
dec
add
mov
(bad)
into
push
push
lahf
sbb
test
cs
pop
cmp
add
add
cmp
cld
sbb
loop
pop
and
xor
adc
out
adc
adc
test
sub
jmp
les
dec
dec
fld
adc
dec
cmps
sahf
and
cmp
adc
jp
cmp
ret
pop
dec
or
and
adc
adc
sub
xor
in
add
push
or
cmp
sbb
enter
rcl
pop
inc
push
inc
pop
lods
add
test
mov
rcl
(bad)
jmp
ret
adc
jbe
xor
pop
xor
xchg
(bad)
push
sub
push
xor
sbb
sbb
fldln2
ss
jae
sub
jb
shl
push
ds
cmp
jbe
fisub
out
and
rcr
in
out
or
sub
jle
pop
leave
mov
mov
inc
call
sub
lea
shl
jmp
fcmovnu
pusha
add
mov
pop
dec
jp
in
hlt
inc
jnp
call
js
add
int
sbb
call
or
call
(bad)
nop
jle
push
clc
sub
push
xor
jmp
xor
mov
mov
adc
adc
scas
mov
in
cmc
and
loope
add
inc
sbb
ja
and
imul
push
(bad)
push
xor
retf
loop
lods
in
call
sbb
inc
or
ja
out
les
adc
fisubr
lahf
or
fdivr
add
mov
add
or
push
rol
adc
cmps
add
or
cmps
out
test
inc
fisubr
push
push
jecxz
lahf
in
or
in
mov
inc
or
adc
push
mov
je
xchg
inc
sbb
push
add
adc
aaa
iret
mov
xchg
mov
adc
jne
mov
push
lods
add
in
sub
push
sub
add
ficomp
xlat
rcr
push
sub
add
jl
pop
push
cmc
or
cmps
push
lods
sti
and
int
add
iret
(bad)
in
pop
gs
mov
xor
mov
in
add
and
pop
fcomp
or
add
pop
outs
ins
ror
sbb
sbb
fistp
popa
sbb
lds
sub
inc
push
push
outs
or
jmp
lea
scas
add
sub
adc
jo
mov
add
(bad)
sub
add
or
dec
pop
lods
xchg
rcr
test
pop
jle
mov
pop
dec
aaa
minps
mov
dec
sub
jmp
xor
loopne
push
inc
dec
add
out
out
cmp
jne
jb
cmp
ret
cld
rcl
mov
inc
ds
cli
loop
fnstenv
add
retf
ffreep
ror
sbb
mov
jb
daa
ret
jnp
or
push
punpckhwd
sti
cmp
pop
dec
pop
sub
test
arpl
add
int
adc
pop
sub
pusha
jmp
clc
lods
jmp
cmp
jl
jmp
inc
ror
mov
cmp
pop
dec
dec
sar
and
push
add
add
push
sub
movs
or
mov
add
inc
or
cmp
cmp
jne
cmp
and
cmp
outs
sbb
outs
pop
push
and
je
out
aaa
(bad)
daa
jo
ret
clc
mov
pusha
or
add
sub
enter
mov
shr
shr
setge
jg
cmp
sbb
or
lea
enter
pusha
add
out
lea
ja
sub
add
(bad)
pop
mov
xlat
add
jmp
fstp
mov
enter
fwait
push
cmp
iret
add
inc
lods
add
push
cmp
jb
or
push
xor
sbb
clc
pop
call
add
leave
neg
mov
pop
or
jbe
ja
add
xor
cmp
dec
mov
mov
dec
out
sbb
mov
fsub
ret
mov
lahf
out
mov
add
add
add
call
add
push
ins
or
or
cli
push
push
fld
pop
outs
add
mov
mov
jl
ins
dec
sub
adc
mov
loopne
fdivr
imul
aam
rol
int3
mov
mov
dec
sbb
ret
sub
dec
jg
mov
adc
add
or
aam
sub
(bad)
fistp
shl
mov
mov
shr
sub
sbb
les
push
mov
mov
mov
(bad)
push
fs
adc
jge
mov
std
ret
xor
inc
mov
adc
push
sub
imul
mov
or
xor
mov
ret
das
sbb
sbb
mov
pushf
mov
repnz
int3
and
(bad)
daa
fcomp
sbb
lock
sbb
lods
sub
add
je
pop
mov
sub
dec
add
out
xor
jae
lods
mov
inc
inc
mov
mov
dec
cld
shr
(bad)
jmp
sub
out
out
loopne
aas
inc
test
dec
in
push
dec
mov
fild
mov
jge
mov
leave
and
push
adc
mov
jbe
inc
inc
and
or
in
fidivr
aaa
ja
or
enter
jno
add
xchg
adc
or
test
cdq
mov
and
les
ret
xor
lahf
sub
(bad)
and
cmps
and
in
add
(bad)
jmp
jge
pop
retf
lds
daa
dec
and
mov
or
mov
sahf
sub
xor
sub
or
jb
inc
sub
shl
mov
es
jle
rep
(bad)
out
cmc
inc
mov
jns
push
or
or
retf
fbld
ret
or
mov
sbb
int3
jae
rcr
mov
or
jo
cmp
aad
inc
lahf
pop
fmul
mov
aam
cmp
jg
push
test
outs
adc
fld
rol
pcmpeqd
add
cmp
and
fisubr
(bad)
mov
xchg
inc
inc
push
ja
push
push
movs
pop
dec
or
and
out
mov
call
(bad)
fadd
jae
sbb
mov
fs
popf
pop
retf
es
ficomp
add
outs
mov
add
dec
sub
pop
sbb
add
or
test
push
int
inc
inc
jnp
retf
lea
loop
daa
mov
add
dec
mov
add
les
das
jb
icebp
clc
jae
or
cmp
add
rol
sbb
test
jge
enter
loope
lods
inc
sub
adc
push
mov
ins
out
pusha
xchg
sbb
mov
or
add
cmp
adc
jo
vmwrite
dec
jle
mov
mov
pop
cld
leave
mov
pop
dec
test
sbb
push
fmul
xchg
dec
inc
jno
aad
retf
inc
ins
(bad)
lods
jne
push
push
pusha
int3
add
lock
loopne
pop
cmp
shl
jmp
jns
movs
jb
and
int3
dec
add
adc
pusha
sub
mov
loopne
jmp
pop
push
push
mov
adc
or
rol
cmps
push
call
sub
shl
or
pop
rol
or
mov
mov
jne
cmp
daa
cmp
or
out
call
mov
mov
mov
mov
sbb
bound
out
push
(bad)
and
sbb
push
mov
dec
fmul
mov
xor
inc
dec
pusha
xor
popa
mov
xchg
or
repnz
jge
adc
jp
shr
add
aam
fs
scas
jne
jmp
jmp
shr
test
jne
fsubp
lea
ins
and
add
cli
xchg
cmp
push
cld
dec
or
(bad)
jmp
sbb
js
fnstenv
les
jp
inc
je
hlt
add
call
push
loopne
sbb
xchg
fadd
loopne
add
jne
jne
into
(bad)
xchg
inc
add
int
mov
jle
inc
add
push
dec
ins
call
xlat
ror
iret
sbb
lods
mov
sub
retf
push
(bad)
repz
push
fimul
lock
aam
adc
and
test
cwde
jbe
jae
mov
or
inc
inc
or
fdivr
adc
mov
cmp
and
and
sbb
fs
shr
(bad)
in
or
gs
fxch
dec
and
xchg
mov
add
scas
shl
dec
test
stos
movs
lea
lea
add
cld
push
mov
and
cmp
dec
test
mov
and
sahf
mov
cmp
data16
inc
popf
cmps
in
xor
sbb
(bad)
popa
shr
sbb
push
mov
pushf
out
mov
sbb
add
mov
loop
lock
mov
sbb
out
das
cmp
jl
sub
xor
int
adc
lods
fmul
test
mov
fwait
inc
lods
mov
rcl
aad
xchg
nop
pop
push
sub
and
pushf
sbb
adc
pop
hlt
lea
adc
je
ins
cmp
push
sub
dec
mov
cmp
jle
jle
cmp
jb
das
jne
(bad)
mov
mov
ja
inc
cmp
retf
push
jne
gs
ja
push
and
or
call
out
fld
imul
cwde
or
jno
jle
mov
mov
aam
xchg
inc
scas
xchg
sbb
cmps
cdq
mov
loopne
stos
push
or
ret
pop
fdiv
cld
xchg
cmp
jecxz
movs
int
add
add
jle
sti
sti
sbb
test
add
cmp
xor
mov
sbb
inc
call
mov
(bad)
out
scas
mov
je
cmp
mov
and
xor
imul
stos
jne
sub
imul
push
xor
and
or
pusha
jne
xchg
leave
rol
add
add
ss
adc
ss
mov
test
inc
enter
sub
add
cld
cmp
mov
loopne
and
adc
inc
test
add
idiv
fidiv
jmp
sub
ds
dec
sub
mov
push
sub
jg
dec
mov
mov
or
es
dec
in
inc
cmc
sub
dec
lea
(bad)
mov
jbe
xchg
test
xor
je
adc
je
adc
xchg
(bad)
dec
movs
mov
ret
call
mov
mov
out
add
loop
sub
xor
imul
into
jb
inc
fld
and
fcomp
fidivr
jg
retf
xchg
jne
xor
or
rol
or
jecxz
inc
push
jle
mov
cmps
idiv
cs
adc
clc
movs
jp
push
daa
ror
pop
sub
inc
push
adc
or
arpl
cmp
vmovss
mov
xlat
xor
push
loop
(bad)
icebp
xor
push
inc
fs
inc
test
addr16
outs
jl
jmp
add
pop
cmp
hlt
jb
rcr
xchg
add
mov
lods
cli
rol
pop
mov
and
mov
mov
mov
sub
add
add
mov
cmp
adc
jl
push
push
sbb
movs
pop
mov
adc
sahf
in
jge
lea
or
pop
cmp
push
add
outs
ja
es
pop
outs
push
sub
adc
xchg
pop
and
loopne
stc
or
into
add
mov
repnz
cmp
mov
mov
xor
mov
mov
pop
pop
jl
pusha
cmpxchg
mov
add
adc
mov
or
jne
ins
ret
fwait
fs
rcl
rcl
imul
sar
lods
inc
je
pusha
mov
inc
add
jo
add
ficom
das
mov
mov
mov
dec
mov
rol
pop
jmp
(bad)
lods
jge
jne
pop
fadd
fnstcw
mov
(bad)
push
jecxz
pop
aam
jmp
idiv
push
add
jmp
push
inc
mov
sbb
pushf
add
cmp
mov
and
jmp
pop
les
jo
push
jmp
pusha
inc
in
fsub
push
or
add
mov
mov
pushf
lods
mov
in
push
push
jb
mov
lahf
je
push
(bad)
cmps
rcl
or
push
out
loope
adc
inc
or
cmp
jle
cmp
jne
jle
push
lods
or
(bad)
mov
nop
jle
mov
sbb
dec
mov
(bad)
ds
xor
or
sbb
shl
or
les
pop
mov
and
mov
div
sti
sar
pop
xor
(bad)
mov
ret
xchg
inc
jmp
fisubr
jg
jmp
mov
push
jmp
cmp
push
sub
test
lods
loopne
sub
repnz
in
in
push
and
jns
mov
and
loopne
xor
nop
out
mov
and
mov
add
loopne
fadd
(bad)
cmp
jbe
ret
std
gs
sti
push
fcmovnbe
sti
push
cwde
sti
arpl
and
pop
sub
or
call
push
and
mov
dec
daa
xchg
xchg
aam
sahf
retf
and
in
mov
push
nop
rcl
add
int3
pop
push
xchg
pop
int3
int3
(bad)
enter
pushf
enter
nop
dec
mov
(bad)
enter
push
(bad)
enter
int
and
jae
cmovae
inc
rcl
cmc
and
jb
ror
or
sbb
inc
dec
sbb
and
mov
mov
xor
mov
sbb
inc
push
push
sub
mov
push
ret
test
lea
jp
adc
repz
sbb
or
fidivr
sub
dec
inc
pop
mov
lea
adc
xchg
(bad)
push
ficom
cmps
pop
jo
dec
test
jg
sar
xchg
jmp
dec
jmp
inc
add
(bad)
stc
mov
dec
inc
jnp
enter
xor
mov
(bad)
sar
xchg
sub
sub
jb
pop
lock
out
xor
out
push
add
mov
dec
dec
in
es
adc
add
push
xchg
mov
cli
cld
dec
dec
push
cdq
mov
shl
cld
xor
mov
adc
lea
adc
retf
jge
call
mov
or
mov
jp
mov
ins
add
dec
xchg
push
ffree
out
fisub
add
inc
jge
dec
lea
ja
jns
cmp
cmp
sbb
adc
and
and
push
scas
adc
mov
out
repz
repz
fst
pop
push
jecxz
cs
ret
push
out
xor
aad
jmp
adc
test
je
adc
callw
call
add
mov
dec
outs
adc
fnstsw
call
jmp
ficomp
cwde
ins
add
mov
sar
mov
or
add
push
enter
aad
popa
cdq
stos
(bad)
dec
pop
add
add
sub
mov
add
add
jle
out
xchg
stos
ja
jo
mov
mov
sbb
sbb
or
fld
lahf
add
mov
ret
or
call
push
add
jb
and
cmp
shl
adc
mov
ins
(bad)
sub
(bad)
in
and
or
or
add
push
add
test
cli
aad
xor
cmc
jbe
(bad)
data16
ror
lods
add
sub
xchg
in
and
test
outs
add
dec
xchg
add
loop
lods
js
push
add
inc
lahf
xor
dec
push
add
xchg
adc
aas
dec
and
int
rcl
mov
inc
cwde
jecxz
mov
(bad)
adc
push
fild
aas
jmp
push
mov
jne
pop
mov
mov
xchg
lahf
mov
movzx
pop
mov
mov
sbb
dec
sar
xor
dec
pop
nop
mov
nop
dec
cmp
fucom
shl
xlat
shl
iret
clc
ins
fld
add
add
into
xor
xor
mov
sbb
ret
push
cli
mov
adc
sbb
pop
xor
sub
cld
sub
cdq
not
(bad)
mov
mov
mov
mov
mov
test
jp
pop
cmp
push
add
out
xchg
gs
push
mov
inc
call
fs
cli
ins
inc
add
pushf
test
das
mov
xchg
and
sbb
push
ror
jbe
inc
repnz
sbb
cld
imul
(bad)
imul
xchg
or
hlt
dec
xchg
push
sbb
add
or
cmp
test
mov
mov
push
test
xchg
mov
mov
(bad)
push
sbb
stos
xor
cwde
es
or
sub
jno
enter
jge
add
je
mov
pop
add
xor
sbb
imul
jecxz
lock
jg
push
fiadd
sbb
rol
rcl
pop
inc
adc
inc
shr
call
mov
mov
or
ficom
lock
cmp
scas
pusha
jns
popa
in
scas
xchg
adc
mov
pop
xchg
sar
out
jmp
add
loop
jmp
jae
jo
adc
shr
lods
hlt
adc
les
lock
mov
dec
or
sbb
sbb
sub
sub
sti
or
mov
(bad)
jecxz
(bad)
pop
or
out
xor
aam
inc
pop
idiv
add
jmp
imul
adc
or
les
jno
xchg
loopne
add
adc
push
add
push
dec
dec
enter
or
(bad)
cmp
jl
sar
pop
mov
pop
mov
mov
not
pop
and
push
add
inc
sub
iret
not
mov
in
cmp
rdtsc
mov
push
inc
mov
or
int
(bad)
(bad)
cmp
or
mov
popa
or
mov
or
and
sub
push
icebp
cmps
(bad)
std
and
sub
call
out
scas
call
or
call
fstp
xchg
jae
jmp
add
add
inc
jo
add
bound
cmps
not
es
mov
add
ins
sbb
enter
cmp
add
adc
push
add
add
or
add
enter
or
enter
or
push
cmovg
rol
dec
jg
or
xchg
ret
shr
xchg
xor
jmp
fimul
stos
adc
shl
sahf
mov
scas
fadd
stc
push
xor
inc
nop
push
scas
fdiv
or
or
pop
and
pop
sub
xchg
pop
xchg
movs
or
dec
push
shl
xchg
push
xchg
push
xchg
push
add
adc
mov
inc
aas
xchg
mov
imul
dec
jp
sbb
mov
dec
je
pop
xchg
push
and
out
inc
fist
loop
rcr
dec
add
lods
fst
stos
out
sub
inc
out
push
sbb
or
fdiv
out
arpl
push
sbb
inc
(bad)
mov
int3
or
aaa
rcl
sahf
mov
adc
sub
push
pop
icebp
xor
dec
dec
add
in
(bad)
cmp
or
or
push
mov
inc
xor
pop
sbb
ror
(bad)
mov
push
ret
xchg
and
dec
dec
add
push
ficomp
jno
jae
fcomp
adc
shl
pop
xor
inc
and
ja
mov
dec
jp
nop
xor
adc
jp
mov
or
add
add
add
mov
add
or
sub
add
mov
push
inc
pop
mul
add
xor
mov
mov
or
data16
or
or
mov
call
or
mov
out
sar
and
pushf
push
out
xor
mov
add
xor
and
lahf
out
sbb
hlt
mov
cdq
xchg
mov
cmp
xor
mov
dec
pop
adc
cmp
ret
mov
shl
rcl
add
enter
add
ficomp
xchg
sub
outs
sbb
test
mov
arpl
push
dec
and
shr
mov
loop
sub
retf
aaa
or
rol
pop
xchg
fnstcw
hlt
xor
les
push
xor
shr
loop
icebp
mov
popf
pop
adc
(bad)
(bad)
pop
fadd
cmp
add
dec
pop
dec
add
adc
adc
jmp
jl
scas
and
loope
inc
leave
idiv
mov
clc
jno
test
and
inc
cmp
jge
add
ins
xor
fadd
ror
adc
ins
sti
add
shr
adc
push
ret
lea
adc
jno
aad
or
inc
rcl
int
jnp
ins
xor
rcl
push
adc
gs
xor
cmp
sub
adc
mul
mov
jmp
pop
add
or
enter
and
jmp
inc
icebp
int
inc
xchg
sbb
shl
add
or
or
mov
or
sbb
inc
sub
adc
test
adc
or
sbb
mov
cmps
sub
xor
pusha
aas
in
js
mov
jae
sub
add
imul
and
out
jo
add
dec
sub
bound
pop
push
jne
rol
push
movs
and
adc
addr16
sbb
and
xchg
and
or
dec
and
and
add
enter
push
adc
push
adc
pusha
inc
pop
add
push
cmp
mov
push
cmps
or
movs
pop
adc
pop
fsub
out
dec
adc
and
adc
addr16
push
pop
scas
adc
(bad)
push
mov
push
test
(bad)
outs
rol
or
or
and
or
dec
or
and
or
add
lea
mov
aaa
out
es
jecxz
pop
bound
test
pop
xchg
add
inc
or
mov
or
xchg
arpl
test
push
or
push
fwait
or
or
xchg
pop
fbld
test
add
adc
xor
test
mov
xchg
dec
das
stos
dec
adc
add
or
mov
mov
pop
adc
add
mov
cs
test
push
lea
inc
nop
or
addr16
push
pop
sbb
inc
aaa
push
add
(bad)
xchg
or
iret
jae
rcl
mov
mov
mov
lods
sbb
sbb
ret
or
scas
aaa
or
test
pop
inc
sbb
inc
sbb
in
pop
inc
cmps
jb
and
inc
mov
lds
dec
imul
stos
sub
daa
xor
inc
inc
aaa
mov
or
adc
inc
test
inc
dec
cmps
inc
xor
xor
ret
and
push
push
sbb
pop
ret
mov
cmps
lahf
retf
inc
mov
or
adc
inc
test
jecxz
mov
popa
mov
ins
xor
lahf
sub
fsub
adc
mov
outs
daa
push
xor
adc
ss
addr16
adc
push
xor
push
dec
add
cmps
test
pop
fcom
ret
add
or
or
inc
lahf
push
fbld
sbb
ja
(bad)
test
ja
push
pusha
pop
pop
cmp
iret
ins
int3
xchg
aaa
push
dec
adc
aam
mov
adc
pop
nop
and
sub
inc
inc
fadd
cmps
dec
(bad)
loop
ret
adc
adc
mov
add
add
pop
pop
adc
repz
cmps
test
ins
mov
bound
or
(bad)
mov
addr16
inc
or
scas
out
mov
and
or
pop
adc
mov
ret
and
test
push
pop
push
sbb
inc
movs
and
ja
aad
or
mov
jg
and
ins
ror
adc
lods
or
cmps
pop
and
movzx
xchg
rol
aas
adc
mov
imul
loopne
or
xchg
aaa
out
mov
inc
sub
test
psrad
dec
or
pop
inc
dec
test
inc
or
add
fild
sbb
push
pop
adc
push
adc
sti
inc
jbe
add
xor
daa
mov
xor
dec
pop
and
pop
fist
xor
adc
push
jecxz
or
cmps
fistp
sub
inc
lods
bound
aaa
bound
mov
(bad)
stc
or
pop
into
out
sub
push
addr16
push
push
nop
xor
mov
and
mov
clc
das
add
cwde
xchg
adc
movs
push
ret
xor
fcom
ror
cmps
xor
fmul
test
loopne
fisubr
jmp
mov
call
and
adc
jl
outs
rol
inc
out
repnz
jge
hlt
das
ss
mov
add
or
aam
add
cmp
lea
jg
and
adc
adc
clc
lock
mov
aaa
fistp
pop
add
add
ja
or
and
gs
push
movs
pop
mov
outs
in
pop
addr16
es
int3
push
pop
pop
push
popa
add
ins
add
mov
adc
cmp
cmps
push
sbb
out
das
jae
cdq
dec
add
sti
sub
pop
out
add
pusha
imul
or
jae
inc
push
(bad)
or
add
jbe
push
push
adc
mov
test
jo
cmp
das
adc
push
inc
and
push
pop
dec
in
pusha
and
sbb
fadd
inc
stos
and
fcmovnb
mov
push
adc
jl
add
mov
cmp
outs
enter
xor
jne
cmp
ret
adc
jmp
mov
or
push
push
sbb
dec
rcr
pop
add
ins
test
call
push
stc
sbb
hlt
push
or
lock
and
ror
fistp
jge
dec
mov
rol
sbb
rol
xor
push
outs
test
popa
inc
push
sbb
dec
sbb
je
dec
mov
sbb
xchg
pop
outs
in
idiv
scas
xor
mov
or
shl
fs
mov
sub
push
dec
jns
and
and
adc
aam
xchg
push
movs
or
repz
scas
push
mov
cmp
sub
xchg
ins
sub
popa
cs
xchg
ins
xor
inc
loop
inc
mov
fiadd
sub
call
add
daa
dec
prefetch
or
fnstcw
(bad)
in
ss
inc
push
adc
lahf
out
ins
mov
in
pusha
fldenv
test
or
pop
inc
rcl
sbb
into
jmp
xchg
inc
add
or
ins
ins
mov
pop
call
loopne
dec
or
inc
mov
ins
add
sbb
mov
in
mov
jo
push
ins
dec
inc
mov
stc
or
adc
inc
adc
loop
outs
das
xor
jno
dec
in
sbb
imul
mul
mov
xchg
das
jg
add
lds
add
adc
mov
sub
dec
dec
mov
adc
xor
mov
mov
sub
cmp
xor
jmp
ins
das
es
push
sub
adc
xchg
cmp
add
push
rcr
inc
add
lods
mul
test
in
jge
mov
xor
jb
adc
fidivr
fist
sbb
ins
and
xchg
jne
sti
outs
mov
push
fs
fs
and
dec
add
cmps
je
cmps
or
pop
add
add
and
pop
fwait
mov
cmp
ja
add
jno
adc
or
mov
dec
sub
test
push
retf
fstp
or
dec
xor
ror
push
dec
jo
adc
int3
add
add
add
addr16
pop
sub
and
or
sbb
popa
sbb
mov
pop
add
mov
rcr
push
cmp
inc
pop
out
jns
imul
or
push
add
outs
mov
cmp
movs
mov
dec
leave
xchg
pop
test
add
nop
mov
call
jge
loopne
cdq
add
loope
ficom
or
arpl
cmps
js
popf
and
sub
je
and
rcr
xchg
sbb
int3
(bad)
ficom
sub
(bad)
inc
out
invd
push
adc
mov
push
sbb
in
sub
aad
movs
out
pop
in
iret
dec
or
inc
dec
or
fisubr
sub
out
adc
adc
pop
stos
xchg
fucomi
sti
sub
sub
js
ror
enter
sub
add
xor
jp
ins
and
cmps
xor
(bad)
cmp
das
dec
add
mov
pop
test
out
dec
leave
dec
lods
fistp
sbb
pop
jbe
iret
jnp
aam
call
mov
ins
jo
inc
sbb
adc
inc
and
rcl
(bad)
and
outs
cmps
sahf
push
push
add
ins
xor
xor
add
jb
xchg
bound
popa
or
xor
jg
mov
and
ds
cmovp
pop
leave
sbb
push
xor
fisttp
repnz
dec
add
push
xor
pop
pop
out
pop
dec
push
add
shl
jb
jbe
or
inc
inc
sub
mov
dec
sub
or
dec
or
adc
sub
ss
movs
jge
adc
inc
test
fnsave
inc
push
cmp
leave
int3
nop
jnp
jg
push
push
and
je
add
xchg
cwde
cmp
sub
cmp
aad
push
jp
dec
enter
pop
test
xchg
xor
and
(bad)
mov
and
xor
add
retf
fstp
nop
adc
xor
test
in
mov
adc
xor
xor
pusha
jmp
push
and
test
dec
nop
retf
lea
mov
pop
add
xchg
add
add
retf
pop
fiadd
pop
sub
or
mov
das
xchg
test
stos
outs
push
es
test
sub
rcl
mov
sbb
add
sub
fisubr
dec
lock
gs
pop
sbb
inc
das
add
test
pop
(bad)
and
mov
sub
jb
xor
pop
repnz
out
dec
mov
and
adc
out
add
push
scas
pop
hlt
dec
adc
dec
sbb
dec
les
dec
inc
inc
rcr
jns
mov
cwde
push
test
test
dec
mov
push
aam
fidivr
hlt
push
cmp
cmps
fldlg2
push
sbb
sbb
movs
int3
push
hlt
cmc
gs
xor
cs
mov
aam
sub
cmp
outs
rol
inc
push
mov
outs
out
xor
adc
mov
bound
mul
(bad)
sub
sub
sbb
push
scas
and
(bad)
adc
adc
dec
gs
add
and
popf
movs
mov
mov
push
mov
fmul
sbb
movs
out
mov
repz
push
fidiv
(bad)
outs
dec
jae
adc
jo
mov
arpl
lock
or
xchg
pop
shl
push
or
lahf
add
sbb
and
fadd
arpl
enter
clc
rol
popa
add
fidiv
or
psubusb
sbb
or
mov
fld
and
mov
mov
and
fwait
mov
sub
rcl
dec
outs
(bad)
inc
and
xchg
add
push
fcmovnbe
popa
sbb
inc
stos
add
iret
adc
push
jecxz
jae
pop
inc
mov
fisubr
jbe
pop
cmp
jne
inc
mov
mov
loope
or
adc
aad
cmp
adc
add
data16
pusha
jae
pop
and
mov
cmp
cmp
adc
jbe
ins
loopne
aam
out
in
icebp
dec
outs
js
jns
fs
inc
fdiv
xchg
adc
push
sbb
or
movs
cmp
add
retf
data16
sti
pusha
addr16
or
mov
pop
cmp
push
or
pop
or
retf
(bad)
jle
pop
js
imul
addr16
test
jbe
inc
mov
add
adc
push
pop
xor
xchg
out
icebp
dec
in
adc
das
push
add
sub
es
cmp
ins
or
or
sub
jmp
adc
nop
and
adc
outs
inc
pop
rcr
cmp
lods
inc
lods
dec
push
add
inc
push
and
jae
push
jno
cmps
push
cmp
mov
stos
adc
lahf
lds
add
ret
lds
add
icebp
jmp
or
mov
dec
push
or
(bad)
in
jb
adc
add
jo
cs
adc
add
outs
mov
pop
add
add
fcomp
sbb
sbb
mov
and
pop
add
push
jecxz
add
cmp
loop
xchg
das
and
icebp
mov
dec
mov
icebp
sub
dec
pop
push
cmp
pushf
imul
add
mov
adc
add
fucomi
pop
es
adc
cdq
shl
cmp
add
ret
jle
ja
stc
cmp
retf
sbb
dec
and
mov
xor
enter
(bad)
mov
adc
xor
xor
push
sbb
fstp
xlat
and
dec
adc
leave
dec
xor
or
jns
or
call
mov
stc
or
add
jo
repz
imul
or
adc
add
or
inc
pop
or
(bad)
loope
fwait
push
test
sbb
push
mov
dec
jmp
add
cmp
add
add
cmp
add
dec
mov
add
imul
rol
or
or
test
jb
inc
dec
jb
pop
aas
and
jp
mov
push
pushf
add
and
das
pop
retf
dec
push
xchg
inc
xchg
or
arpl
ror
or
xchg
xchg
fs
add
stos
and
mov
dec
or
add
dec
cmp
dec
push
cmp
add
pop
lock
pop
add
mov
adc
and
cmp
nop
add
mov
popa
fs
out
sbb
and
leave
add
add
jb
add
inc
pop
inc
xchg
inc
bound
movs
(bad)
out
call
jg
scas
or
and
add
or
adc
dec
inc
cmp
jae
sbb
in
add
test
adc
xchg
xor
adc
and
test
adc
or
adc
or
ror
add
jp
fbstp
daa
or
dec
adc
fmulp
call
rcl
add
adc
mov
dec
and
inc
mov
inc
dec
ins
movs
mov
add
pop
jbe
loopne
data16
mov
sahf
je
imul
jbe
mov
je
or
je
dec
shl
and
dec
test
adc
add
mov
adc
js
and
dec
outs
xchg
mov
adc
dec
addr16
adc
mov
or
ja
inc
in
inc
mov
sbb
push
push
sbb
push
xchg
add
pop
sbb
adc
es
xchg
and
pop
int3
jg
inc
xchg
push
xchg
xor
add
pop
add
adc
xor
addr16
adc
xor
or
ja
imul
ja
jmp
mov
iret
mov
lods
adc
adc
push
pusha
arpl
mov
mov
adc
pusha
adc
mov
inc
rcr
or
push
(bad)
add
adc
adc
push
jo
cmp
and
stc
fsub
frstor
adc
jns
call
jns
add
cmp
pop
inc
inc
dec
bsf
in
or
push
and
push
in
in
sbb
inc
add
mov
repz
pop
jns
push
jmp
xor
fs
jge
mov
fistp
jb
adc
jns
scas
mov
mov
sub
mov
and
jns
ret
jecxz
mov
push
repnz
loopne
sub
push
xlat
ret
or
add
or
imul
imul
cmp
push
repnz
nop
hlt
fnsave
and
add
inc
enter
pop
dec
iret
aam
add
in
dec
dec
ret
dec
add
dec
pop
ret
mov
verw
mov
test
adc
in
adc
retf
xchg
sub
add
add
sbb
or
jl
sbb
push
sbb
fwait
sbb
out
sbb
out
(bad)
push
add
stos
add
mov
fstp
dec
movups
outs
adc
(bad)
mov
test
push
shl
dec
mov
enter
loope
add
(bad)
ror
loopne
lods
ror
stc
(bad)
or
adc
sbb
test
inc
and
dec
or
push
jb
in
lods
jle
jae
sub
sbb
add
ins
dec
push
and
dec
jl
iret
xchg
cmp
cmp
inc
add
jecxz
mov
mov
pop
mov
push
add
push
add
jo
int
and
push
fisttp
xchg
add
mov
nop
or
mov
push
add
xchg
inc
call
out
inc
and
and
(bad)
retf
add
adc
iret
push
dec
add
push
es
add
inc
mov
and
mov
and
inc
dec
and
xchg
cmp
sbb
adc
fs
inc
push
push
inc
pusha
add
push
out
inc
cmp
adc
add
pop
lock
mov
xor
push
add
into
sti
inc
push
xlat
arpl
xchg
adc
test
adc
cwde
nop
add
add
inc
ins
dec
dec
inc
push
test
sbb
pusha
sbb
aam
mov
lds
fcom
daa
sbb
sbb
imul
add
push
into
push
sub
jle
add
test
lahf
loop
xchg
pop
cwde
push
shr
push
or
sbb
stos
iret
sub
dec
stc
repz
int3
push
mov
(bad)
into
push
push
add
leave
test
ins
xchg
push
jp
and
sahf
cmp
lods
dec
dec
jg
rol
adc
sub
xor
or
jb
mov
sbb
pop
jne
inc
bound
jno
retf
cld
push
add
or
sbb
inc
dec
jg
pop
jae
cmp
es
push
inc
and
pop
jecxz
pushf
stc
add
push
dec
add
push
out
shl
add
adc
mov
inc
jne
out
enter
push
xchg
icebp
adc
cmp
nop
and
sbb
adc
jge
xchg
dec
push
inc
(bad)
sbb
mov
pop
leave
xchg
cmp
ins
inc
sbb
mov
inc
pop
ins
add
cwde
aas
or
add
push
push
inc
sahf
fsubr
call
dec
dec
dec
sahf
fiadd
ss
test
fild
shr
call
in
push
pushf
push
dec
es
lods
jno
pop
mov
mov
dec
adc
rol
call
and
cmp
jl
mov
push
sbb
sbb
test
pop
pop
cmp
mov
loop
rcl
inc
movs
dec
mov
aad
push
std
mov
sbb
mov
pop
nop
push
mov
inc
inc
inc
cs
adc
mov
push
out
loop
loop
pushf
rol
xchg
mul
sub
ja
loop
dec
inc
sbb
mov
cmps
push
adc
pop
mov
inc
sahf
adc
xchg
pop
jo
sub
pop
hlt
pop
pop
jne
enter
dec
inc
adc
sbb
mov
sub
mov
pop
push
orps
sub
dec
push
and
and
push
push
iret
pop
and
cmp
add
xchg
arpl
add
push
enter
add
push
push
lods
in
add
inc
inc
les
nop
clc
add
cmps
xchg
and
out
pop
dec
pop
adc
mov
test
and
add
adc
mov
ror
push
cmps
sub
int
ret
or
xchg
pop
inc
fiadd
xchg
adc
push
sbb
or
inc
adc
fild
sbb
ins
ja
pop
push
jecxz
push
mov
fisttp
test
pop
jle
cwde
inc
xor
mov
ret
add
pop
add
sbb
adc
mov
mov
and
or
sbb
pop
and
xor
pop
push
das
cld
adc
retf
and
add
inc
or
rcl
out
add
add
stc
pusha
xor
int3
adc
les
add
ins
adc
xchg
ins
(bad)
mov
push
sbb
inc
add
jecxz
enter
fcmovnu
add
mov
sahf
arpl
imul
add
pop
int
ret
mov
cmp
mov
dec
repnz
mov
outs
inc
icebp
mov
call
fdiv
or
add
add
add
xchg
inc
dec
imul
pop
pusha
ins
or
mov
jp
popa
cmp
add
push
cld
xor
ret
or
pusha
int
jg
lock
mov
sbb
adc
sbb
sbb
pop
stos
sbb
push
pushf
mov
outs
arpl
add
push
mov
dec
out
dec
cmps
adc
pop
sub
dec
xor
pop
jns
or
pusha
mov
mov
popa
or
push
outs
jns
sub
xor
sub
or
ja
adc
movs
or
rol
cdq
mov
rol
out
jle
sbb
dec
int
(bad)
jge
fld
push
dec
xor
xor
inc
rcl
bound
push
xor
xor
mov
push
dec
or
or
mov
(bad)
or
cmp
inc
daa
or
jl
pushf
or
mov
sbb
mov
ror
add
and
stc
xchg
out
stos
xchg
stc
retf
mov
into
sub
and
inc
test
xor
lock
das
add
push
pop
dec
shl
fnsave
sbb
mov
push
xchg
retf
cmp
ins
int3
inc
leave
pop
lds
sub
fcmovnb
outs
in
and
gs
and
outs
and
rcr
mov
js
mov
and
pop
je
fcmovnu
ror
in
ins
imul
js
repz
shl
and
gs
loope
add
pop
or
sbb
push
adc
arpl
cs
pop
pop
fisub
jns
sub
rol
out
mov
mov
int3
add
mov
fwait
es
push
shl
adc
mov
jae
jo
jo
xchg
inc
dec
inc
(bad)
inc
inc
mov
mov
push
addr16
(bad)
addr16
ret
mov
cmp
dec
shl
or
outs
cmp
es
jb
mov
outs
ja
inc
call
push
cmps
add
shr
jmp
jae
add
es
cmps
adc
dec
iret
test
loopne
dec
add
dec
test
hlt
sti
mov
push
cmps
mov
push
push
sbb
dec
in
ss
mov
cwde
dec
clc
xor
xor
ss
lods
mov
movs
add
jnp
jae
push
or
or
or
imul
or
fs
popf
add
nop
adc
push
and
pop
add
mov
add
cmp
popa
push
mov
stos
pushf
or
shl
int
mov
xlat
and
push
or
ficom
inc
pcmpgtb
mov
inc
imul
inc
or
popa
lahf
or
or
je
xor
popa
and
(bad)
xlat
es
mov
arpl
or
mov
sub
aas
mov
mov
push
or
mov
shl
ins
add
pop
imul
cmps
dec
push
imul
std
push
test
aam
imul
dec
cmps
loope
xor
cmp
pop
adc
mov
hlt
je
jecxz
enter
mov
mov
es
push
pop
iret
retf
test
sbb
mov
lea
adc
rol
sbb
jmp
and
xor
out
or
nop
ret
sub
sub
sbb
push
xchg
xor
ins
aam
xchg
stos
sti
cmc
or
gs
ins
inc
pop
outs
mov
cwde
repz
cmp
sbb
aas
push
pushf
sbb
lock
and
cwde
popf
jge
or
push
ret
mov
adc
jb
pop
popaw
test
push
inc
lods
aam
add
push
inc
inc
mov
dec
or
add
mov
ret
jne
mov
test
out
xor
loopne
adc
int
mov
enter
add
pop
shl
out
and
call
sub
pop
loopne
dec
repz
pop
call
fs
xor
pusha
push
shl
inc
ss
cwde
test
in
pop
add
fiadd
je
add
xchg
(bad)
mov
je
xchg
mov
or
cwde
imul
daa
and
aaa
dec
sub
push
inc
aam
call
add
frstor
or
inc
xor
sahf
es
out
and
xor
xor
push
adc
cmp
stc
movs
xor
hlt
mov
cld
push
push
pop
inc
repnz
mov
loopne
mov
ins
sar
cmp
push
jle
adc
jl
or
cmps
ret
or
mov
sub
push
fidivr
mov
cmps
xor
inc
and
ja
pop
test
shl
(bad)
mov
repnz
movs
push
stos
popa
(bad)
nop
ja
xor
add
add
in
lods
cld
movs
mov
add
jae
mov
jae
data16
pavgw
jns
loope
je
push
sbb
in
push
dec
pop
repnz
inc
test
xchg
and
jb
stc
retf
scas
jl
jmp
dec
mov
lods
loopne
pop
ret
fimul
and
mov
ja
leave
inc
jae
and
paddusb
js
xchg
mov
mov
pop
mov
daa
mov
js
sub
mov
out
retf
enter
clc
jle
aas
push
inc
pop
in
jnp
add
(bad)
out
jnp
mov
fistp
cld
call
jl
imul
cmp
cmp
cmps
rcr
add
mov
add
add
add
add
add
retf
(bad)
(bad)
push
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
fcomip
mov
mov
jb
cmp
out
(bad)
in
(bad)
in
(bad)
jmp
jmp
clc
(bad)
jmp
jmp
jmp
jmp
jmp
mov
fdivrp
(bad)
(bad)
inc
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
call
call
and
iret
dec
dec
jmp
retf
sbb
mov
jae
(bad)
push
sub
push
mov
push
sub
jnp
cmps
push
mov
cwde
sub
iret
repz
adc
push
push
lods
call
out
ror
or
jbe
ss
sar
jl
cmp
xor
jns
jnp
js
pusha
ds
push
in
mov
ds
ins
inc
in
xor
lods
aaa
cmps
hlt
adc
fstp
cs
jbe
sub
push
adc
xor
call
push
and
neg
movs
push
and
xor
mov
xor
pushf
sbb
sub
xor
ss
dec
cmp
cli
push
test
(bad)
icebp
xchg
idiv
sub
or
and
push
or
push
je
sar
xchg
mov
pop
ds
int3
bswap
(bad)
adc
fiadd
ss
sub
jge
imul
and
ins
push
add
dec
xor
add
adc
ins
pop
mov
cmp
and
outs
pop
inc
cdq
mov
xor
or
int3
sahf
xor
mov
inc
jb
cmc
in
fsub
pop
dec
in
mov
add
jo
inc
pop
add
push
sbb
jno
fdivr
(bad)
std
sub
xchg
addr16
or
add
ss
retf
mov
xchg
pop
pushf
dec
dec
add
sub
jg
or
nop
psubsb
ins
adc
add
jo
pop
add
(bad)
or
pop
pop
and
jbe
(bad)
dec
daa
or
add
mov
pop
les
out
mov
ja
shl
in
loope
add
mov
jge
mov
xchg
push
and
push
loope
jmp
pop
push
nop
jmp
hlt
mov
add
jle
or
imul
ror
inc
sub
cmps
mov
jmp
xchg
push
hlt
test
test
and
movs
or
dec
inc
ins
xchg
jnp
sub
or
test
cld
cmp
inc
sub
mov
pushf
mov
sub
add
cwde
hlt
jae
sub
and
imul
push
rcl
adc
test
sub
cdq
cli
jae
jge
push
inc
cmp
mov
and
jmp
xchg
out
cmp
jno
push
stos
push
add
push
rol
push
movs
inc
or
push
adc
and
jo
movs
jge
adc
or
dec
and
test
dec
ror
ins
sub
loop
and
fs
test
loopne
adc
push
sub
ja
gs
aam
enter
and
inc
(bad)
(bad)
adc
add
add
xchg
popa
hlt
mov
jae
push
cmp
mov
pop
es
(bad)
mov
or
or
lods
cmp
dec
ficomp
xchg
jns
js
push
test
or
or
jb
aas
jmp
push
dec
imul
push
or
sub
jmp
xor
inc
xchg
adc
xchg
dec
aaa
adc
cwde
push
lods
retf
mov
or
adc
test
adc
iret
imul
sub
pop
inc
int3
adc
mov
and
xor
mov
xor
jne
sub
pop
cmp
adc
or
add
jbe
push
inc
xchg
jp
xchg
je
mov
inc
push
adc
cmps
pop
movs
mov
mov
movs
rcr
scas
sti
adc
push
(bad)
loope
pop
stc
lods
addr16
prefetch
push
mov
xchg
ret
and
nop
movlps
out
or
es
int3
jle
push
fwait
ret
mov
dec
add
and
push
inc
push
scas
mov
push
sbb
int3
add
inc
dec
or
pop
jae
out
cmps
(bad)
inc
inc
sub
xor
or
mov
and
fist
cmp
xor
ret
adc
mov
add
pusha
xchg
xchg
or
sbb
sub
jo
je
(bad)
movs
mov
inc
es
mov
mov
aam
push
sub
or
int3
mov
or
out
sub
xchg
jo
mov
retf
or
xchg
xchg
xchg
cmps
into
hlt
sbb
xchg
xchg
xchg
xchg
inc
push
fst
or
inc
inc
pushf
mov
and
retf
and
and
mov
and
and
mov
push
adc
(bad)
retf
stc
add
enter
push
mov
add
daa
out
(bad)
cmp
and
adc
xchg
push
dec
mov
mov
and
imul
lea
pusha
jmp
or
or
inc
adc
xchg
mov
or
popf
add
pop
xor
dec
or
popa
xchg
or
mov
sub
or
pop
sub
js
loopne
jnp
jnp
aaa
and
add
or
aad
pop
dec
ficom
pusha
neg
xchg
addr16
shl
xchg
shr
mov
stos
sbb
sub
mov
inc
mov
cmp
jo
mov
cwde
and
hlt
add
sar
stos
and
std
call
call
sbb
push
add
jne
test
and
mov
cmp
popf
pop
xor
fisttp
adc
ins
push
ffree
xor
out
icebp
mov
pop
or
or
xchg
cmp
dec
mov
loopne
aaa
inc
mov
stos
clc
aam
sbb
push
or
rcr
int3
mov
xchg
jo
dec
call
adc
aaa
or
inc
stos
jb
pop
das
or
inc
add
and
sbb
add
or
stc
in
inc
cmp
xchg
and
loope
add
gs
dec
rcr
mov
jge
xchg
inc
xchg
sahf
iret
cmp
pop
pop
and
outs
pusha
xor
jns
in
cmp
jmp
mov
fadd
aaa
dec
jno
cmp
ss
jl
ja
ret
dec
ins
gs
xchg
jle
or
or
xchg
lods
xor
pop
adc
push
push
icebp
out
or
or
nop
inc
repz
push
inc
in
aad
cmove
je
xor
cmp
test
jbe
(bad)
push
cld
addr16
ins
sub
pop
or
jne
mov
adc
push
push
cmps
or
paddq
and
aas
lods
nop
aam
fiadd
daa
and
ja
push
mov
pop
add
add
or
out
out
mov
push
inc
repz
mov
xchg
cmp
or
xor
aam
movs
fbstp
push
or
adc
or
xchg
ss
sub
jo
enter
loope
add
or
sti
inc
fs
xlat
add
in
int
gs
cmp
pop
gs
repz
push
gs
call
mov
push
mov
(bad)
fs
sub
sub
push
imul
sub
cli
jne
mov
add
and
(bad)
dec
push
aas
fs
fbstp
xchg
xor
pusha
adc
jo
mov
sbb
mov
pop
loope
iret
in
test
add
inc
add
or
inc
xor
sbb
cmp
stos
dec
sti
mov
push
pop
retf
pushf
lods
popf
cmps
xor
lock
push
mov
add
add
add
lods
bound
shr
repz
pop
pop
adc
dec
or
cmp
sbb
adc
dec
sbb
add
mov
sbb
in
adc
push
inc
jge
ja
adc
mov
jae
sub
pop
pusha
or
scas
sti
add
jl
rol
jo
bound
mov
or
xchg
push
xchg
inc
adc
sub
repnz
ins
aas
dec
add
add
cmp
cld
xchg
dec
nop
cmp
lods
push
cmps
inc
les
mov
push
cwde
cmp
pop
add
loopne
dec
mov
test
movs
outs
mov
jle
out
rcr
pop
mul
dec
add
push
ds
push
xor
ss
ins
(bad)
call
(bad)
popa
cld
xchg
(bad)
or
call
adc
in
xchg
das
arpl
jae
fstp
pushf
rcl
mov
dec
cwde
xor
mov
sub
mov
imul
int
aaa
add
dec
add
sahf
lods
mov
dec
add
pop
cs
xchg
jecxz
inc
sub
pop
aad
add
int3
jnp
sbb
(bad)
mov
sbb
stos
ret
dec
adc
jno
stos
test
jmp
loope
pop
test
add
xchg
daa
in
dec
add
call
add
jnp
pop
(bad)
or
xlat
jmp
lock
push
daa
pop
outs
jmp
icebp
fld
ins
xor
jo
xchg
into
mov
repz
mov
xlat
and
fnsave
mov
out
cmc
add
sahf
add
lods
iret
ins
test
inc
ret
test
(bad)
jno
test
clc
repz
jbe
mov
mov
add
inc
or
arpl
daa
mov
js
mov
cmp
test
not
pop
and
sbb
mul
adc
pushf
sub
fcmovnb
ins
mov
xchg
pop
xor
sub
jns
sahf
popf
or
cmp
into
sar
sub
inc
adc
out
adc
ds
adc
dec
push
and
mov
pop
pusha
push
push
xor
and
pop
mov
shr
dec
or
xadd
add
cmp
or
xor
cli
test
xor
and
aas
pop
repnz
nop
movs
and
clc
add
cli
push
sti
push
xchg
popa
dec
push
(bad)
adc
test
xchg
sbb
not
xchg
pop
xchg
sub
das
fist
cwde
mov
mov
pop
mov
inc
mov
sti
in
xchg
push
push
jmp
in
pop
js
out
in
in
icebp
pop
cmp
scas
inc
pop
frstpm(287
dec
loope
pushf
sub
pushf
push
pop
xchg
aas
test
or
popf
jge
fnstcw
add
popf
dec
std
push
add
sahf
(bad)
add
push
mov
add
dec
ins
rol
adc
adc
add
sub
inc
add
cli
fild
add
add
imul
lds
adc
add
jp
adc
sbb
push
push
(bad)
mov
push
add
add
add
add
mov
mov
mov
mov
(bad)
call
or
mov
mov
mov
mov
mov
mov
mov
mov
out
adc
sbb
and
mov
mov
mov
test
add
xor
adc
pop
mov
out
(bad)
sub
dec
mov
mov
outs
in
inc
mov
(bad)
inc
inc
inc
inc
push
(bad)
mov
adc
cmps
push
mov
pushf
ret
push
inc
inc
mov
inc
test
and
call
cmps
cmp
data16
mov
push
enter
push
js
call
sub
imul
js
xor
jl
dec
repz
xchg
out
lods
push
mov
shl
ja
cmps
stc
and
inc
xchg
mov
stos
push
call
stos
pusha
mov
xchg
js
retf
jns
sub
push
pusha
push
int3
into
data16
scas
out
inc
mov
cmps
or
adc
push
cmp
test
cmp
repz
sbb
push
adc
push
jnp
cmp
mov
mov
nop
push
mov
clc
(bad)
(bad)
fcom
fadd
pop
or
xchg
push
clc
mov
popf
in
jnp
dec
sbb
xor
loopne
inc
int3
test
ins
mov
push
cld
cmps
neg
push
lock
repz
jg
adc
mov
pop
mov
or
fidivr
cmps
je
lods
xchg
xor
sti
sub
call
mov
outs
lahf
mov
push
jbe
ficom
mov
mov
repnz
add
push
loope
test
mov
jnp
movs
inc
add
mov
adc
jo
jg
fldcw
movs
add
enter
cmp
hlt
push
adc
popa
fs
popa
pop
scas
bound
sub
adc
shr
inc
dec
push
ret
inc
psrlw
test
mov
mov
arpl
cmp
test
stos
js
add
or
push
and
or
inc
mov
sub
daa
outs
or
jae
not
or
inc
test
cld
push
enter
jo
inc
loope
adc
sbb
mov
imul
and
cmps
sub
stos
jmp
cmps
fiadd
icebp
inc
push
jo
xchg
and
leave
retf
lds
fs
xchg
test
jmp
aas
mov
rol
cmps
xchg
enter
pop
xchg
pop
or
inc
ja
js
dec
(bad)
fsubr
mov
push
movs
sbb
ret
jbe
in
mov
jl
fnstsw
push
inc
or
pop
dec
and
mov
js
adc
or
icebp
push
xor
or
mov
je
and
movs
cwde
mov
xchg
jae
adc
movlps
push
push
xor
dec
adc
add
xchg
dec
sbb
ret
xor
mov
scas
push
sub
jmp
adc
ret
and
or
fsub
push
jns
inc
aam
clc
push
arpl
fwait
test
aam
popa
pop
sub
mov
sub
add
xchg
mov
inc
jns
nop
mov
stos
sbb
aam
jle
sbb
ret
jnp
and
jbe
sub
hlt
lahf
addr16
xchg
and
add
je
rol
pop
je
or
inc
or
ja
jns
mov
sub
sbb
cdq
dec
xor
add
mov
sbb
aad
push
jmp
mov
(bad)
cmp
cwde
push
adc
in
jno
test
test
or
fst
ds
ins
or
mov
xchg
xchg
xchg
sub
mov
ret
in
mov
xchg
pop
and
and
and
push
or
mov
test
adc
sub
xchg
imul
lods
cmp
popf
sbb
add
mov
mul
nop
or
sahf
mov
fucom
push
mov
mov
cmps
scas
dec
pop
in
je
push
dec
sbb
or
and
push
jb
adc
test
mov
fiadd
fcom
push
mov
shl
inc
aam
fmul
into
mov
dec
inc
and
cdq
or
jo
call
cmc
jne
mov
fldenv
adc
cmps
aam
cwde
push
sbb
add
ds
das
lock
jmp
cmc
inc
repz
sbb
or
lods
out
cmp
push
add
mov
out
jns
in
pusha
mov
dec
add
add
adc
adc
add
add
mov
popa
push
idiv
jmp
fcomp
test
pop
dec
push
leave
ret
daa
add
dec
jl
cmp
sahf
pusha
mov
mov
scas
aas
pop
out
and
movs
out
out
das
mov
push
pop
xor
cmp
and
cmp
icebp
add
call
xchg
lds
add
leave
jp
xchg
movs
aas
enter
xchg
(bad)
xchg
das
pop
cmp
lods
movs
bound
jns
cwde
enter
xchg
xlat
pop
out
mov
pop
ror
dec
enter
test
dec
jle
iret
rcr
pop
mov
cmp
or
les
test
push
jl
enter
jo
add
push
add
rcl
push
pop
aaa
clc
sub
xor
sbb
add
in
xchg
add
cmps
sbb
xchg
jle
imul
inc
add
sbb
xchg
pslld
clc
adc
and
in
sub
xchg
outs
or
xor
or
leave
sub
mov
add
fcomp
ss
stos
js
bound
retw
adc
or
js
aaa
loope
xchg
jne
xor
repnz
and
or
loopne
dec
add
adc
pop
adc
mov
fwait
mov
rcr
inc
hlt
clc
xchg
pop
or
int3
mov
scas
add
and
cli
mov
add
mov
pop
int
jp
add
xor
stos
scas
xor
sbb
push
pop
dec
adc
or
test
jbe
jae
xchg
inc
daa
lea
inc
loope
test
push
psubb
dec
stos
adc
pop
sar
in
hlt
les
add
inc
inc
add
xor
jo
dec
add
das
cmp
cld
or
lds
add
fst
out
push
add
fsubr
dec
outs
in
sub
fmul
out
lds
stc
xchg
cli
inc
(bad)
daa
push
test
js
pop
xchg
xchg
pop
lea
nop
arpl
cmps
ds
outs
je
jo
das
adc
loope
sub
fisttp
daa
mov
mov
pxor
lods
push
jle
mov
xor
pop
loopne
aas
scas
inc
ins
inc
test
and
enter
fs
je
add
push
addr16
adc
add
adc
push
push
mov
mov
mov
not
(bad)
(bad)
cmps
push
add
rcl
test
push
outs
cmps
ret
add
jmp
sub
mov
sub
call
pop
pushf
hlt
xor
dec
in
outs
jecxz
add
add
mov
mov
add
lds
imul
push
xchg
or
or
icebp
or
dec
xor
mov
mov
sub
addr16
sub
add
cdq
pop
push
pusha
add
scas
(bad)
sbb
xchg
call
shr
cmps
xor
mov
inc
push
call
push
adc
adc
fistp
add
out
push
shr
(bad)
scas
fild
stos
dec
xor
push
mov
pusha
or
ds
or
or
pop
push
test
(bad)
or
jne
adc
push
jnp
int3
add
pusha
div
clc
in
dec
add
mov
aaa
dec
sub
loopne
push
cmp
pop
imul
jns
xor
mov
rol
stos
and
rol
dec
dec
push
gs
or
mov
xchg
cmp
mov
lea
repz
nop
nop
(bad)
imul
les
dec
adc
test
sbb
sti
dec
push
std
pusha
cmp
gs
das
mov
arpl
jae
adc
jns
inc
dec
repz
lock
cmp
or
mov
add
xchg
xchg
xchg
xor
xchg
retf
xchg
xchg
ret
mov
mov
rcl
cmp
jg
fwait
std
sahf
loopne
dec
daa
push
mov
push
push
ds
loop
add
push
add
inc
ficomp
stos
or
xor
(bad)
int
inc
pop
add
sbb
or
jbe
int
sub
inc
push
es
adc
leave
das
aaa
xchg
(bad)
lea
push
jb
jbe
movs
inc
cmp
mov
into
or
iret
and
lods
dec
lods
sub
inc
loope
inc
or
pop
mov
xchg
push
inc
ror
inc
sahf
add
das
pop
xchg
and
mov
push
leave
out
sbb
in
mov
pusha
test
and
adc
loopne
and
pop
inc
in
les
add
push
dec
xchg
xor
ins
shl
and
sbb
int3
fiadd
pop
pop
push
push
retf
fist
pop
mov
jae
mov
and
pop
inc
lock
adc
pop
out
adc
bound
lock
inc
mov
shr
in
push
imul
jl
jb
fs
fs
dec
ins
cwde
shr
mov
add
pop
add
fcomp
and
ins
test
(bad)
xchg
cwde
retf
not
pusha
or
rcr
inc
add
test
int
mov
and
push
shl
iret
adc
enter
or
lods
pop
jg
inc
adc
and
jecxz
mov
push
push
(bad)
mov
pop
jg
outs
mov
das
or
dec
cmovl
cmp
cmp
or
fcomp
sbb
dec
inc
push
fs
and
icebp
dec
push
cmp
(bad)
fstp
mov
cmp
mov
fiadd
ins
push
iret
sar
in
cmc
test
cmp
jnp
clts
sbb
ss
mov
xlat
test
js
js
add
push
sbb
lea
repnz
bound
test
and
mov
stos
dec
sar
push
mov
rcr
fldcw
fild
mov
loopne
fnstcw
sub
cs
jmp
call
out
mov
loope
adc
inc
daa
mov
fbld
and
pusha
sub
xor
pop
add
add
xor
push
jae
outs
stos
movs
adc
in
sub
xor
or
inc
inc
mov
pusha
cs
and
mov
test
or
fnstcw
out
das
fwait
inc
jmp
or
popa
inc
sub
dec
push
daa
ins
movs
mov
pop
es
jns
pop
sub
sub
es
add
aas
pusha
sub
fneni(8087
dec
adc
fs
loop
xlat
test
jne
push
pop
ins
aaa
shr
jo
xchg
add
je
popa
js
out
add
imul
add
retf
push
add
mov
sti
dec
push
lea
add
lds
rol
adc
jno
mov
cmp
mov
lock
aaa
pop
adc
inc
je
cld
mov
adc
push
xor
test
test
les
enter
and
mov
and
stos
out
adc
and
int
push
fisub
daa
and
adc
adc
and
jg
ret
imul
inc
cmovo
xchg
and
and
lods
sub
sub
ret
push
shr
add
scas
mov
and
add
sub
mov
jnp
repz
mov
sbb
mov
dec
jno
jo
add
std
daa
mov
xor
cmp
or
pop
and
sbb
or
adc
inc
movs
icebp
outs
addr16
inc
mov
dec
inc
movs
leave
mov
or
xor
xlat
mov
loope
mov
mov
nop
not
das
dec
cdq
add
aaa
ret
das
sub
imul
push
pop
add
and
addr16
cmp
sbb
add
mov
xor
mov
push
mov
gs
mov
ror
retf
xchg
jne
pop
push
push
es
lods
lds
rcl
or
push
shl
xor
xor
pop
test
pop
pop
push
pop
adc
(bad)
clc
push
adc
jo
inc
mov
sbb
inc
or
inc
xchg
push
or
add
shl
mov
xchg
or
xchg
and
in
ret
and
and
sub
adc
(bad)
dec
sbb
test
mov
pop
arpl
stos
or
or
xor
or
dec
fstp
xor
and
pusha
pop
inc
dec
mov
lds
and
add
mov
jno
mov
(bad)
or
mov
push
xor
in
(bad)
lahf
inc
adc
mov
(bad)
frstor
push
add
fisttp
mov
in
xlat
rol
sub
pop
dec
popa
xor
inc
cmp
push
xchg
or
jg
add
or
jae
push
or
push
pop
jmp
frstor
mov
les
lds
pushf
test
dec
sbb
mov
dec
push
dec
int3
outs
cdq
mov
xchg
add
outs
and
add
pop
jecxz
int3
and
or
add
add
bound
mov
add
dec
aam
or
pop
dec
mov
add
pop
or
(bad)
lds
lds
repnz
mov
pop
inc
or
dec
test
pop
push
cwde
ins
jge
push
movs
sub
or
xchg
jl
inc
dec
lods
add
in
(bad)
and
add
add
pushf
inc
sub
cli
or
add
je
adc
outs
fnstsw
push
sbb
add
dec
repnz
adc
inc
dec
or
sub
adc
(bad)
xchg
xchg
xchg
outs
or
or
cmp
add
inc
add
push
fcom
mov
adc
stos
mov
rol
dec
stos
dec
sub
cwde
lock
(bad)
leave
push
cld
es
sbb
(bad)
enter
pop
jmp
sahf
mov
cmovp
sbb
inc
movs
ror
add
add
mov
add
pop
xor
push
clc
hlt
dec
jge
inc
sub
sbb
xor
inc
stos
mov
xchg
psrlw
mov
inc
push
je
pop
iret
outs
dec
call
test
push
lea
dec
ins
imul
add
fs
repnz
mov
jnp
inc
pop
rcl
and
(bad)
arpl
sbb
ror
xchg
push
cmps
test
imul
add
sbb
xchg
(bad)
ret
adc
out
pushf
push
and
push
out
sbb
pop
or
sbb
mov
mov
adc
pop
mov
test
mov
and
inc
or
es
scas
mov
pop
add
jbe
loopne
or
cmp
cmp
add
xor
xchg
add
scas
dec
xchg
or
ja
inc
adc
scas
xor
dec
cmps
mov
cmp
push
std
dec
push
inc
outs
mov
ret
inc
mov
jae
popf
jmp
rcr
sub
pop
ficom
dec
pushf
pop
test
sub
adc
je
(bad)
inc
loop
jmp
add
mov
cmp
enter
and
or
pop
int3
pop
or
pushf
mov
int
ja
call
movups
ds
mov
mov
sub
or
push
shl
push
jns
and
(bad)
and
add
push
add
jbe
ins
imul
push
jae
adc
imul
fiadd
pop
jb
or
pusha
stos
jge
ins
dec
shl
cmp
aas
aad
mov
lods
or
shr
mov
dec
inc
jge
mov
add
aas
or
adc
pop
(bad)
cli
adc
cmp
add
pop
fldcw
cmp
int
mov
mov
push
stos
les
pop
add
imul
mov
ds
push
push
cmps
jns
add
cmp
inc
sub
push
and
iret
stc
xor
stos
xchg
or
into
imul
jb
jmp
inc
add
aam
mov
arpl
nop
pop
add
and
cmp
pop
retf
inc
inc
add
cs
sbb
and
mov
mov
cwde
add
xor
jl
sbb
ds
cmp
inc
ret
rcr
sbb
inc
(bad)
xor
daa
mov
xor
inc
nop
outs
push
ret
xchg
test
dec
push
clc
pop
sbb
clc
mov
div
sub
in
aaa
lock
int
xchg
cmps
dec
rcl
movs
xor
nop
in
inc
and
and
push
in
jmp
mov
rol
xchg
mov
das
js
bound
add
sub
sahf
inc
mov
dec
fwait
rol
and
push
mov
es
push
(bad)
sbb
adc
cmp
or
mov
add
add
pop
cmp
push
and
out
sbb
or
div
xor
or
clc
cld
cmp
adc
pop
(bad)
mov
std
or
jl
inc
cmp
add
jne
mov
add
cmp
jge
xchg
add
sbb
ja
jne
(bad)
sbb
ins
dec
imul
push
fchs
loope
ins
push
ins
pop
pop
jne
int
xchg
or
jo
or
(bad)
mov
inc
inc
or
sti
adc
adc
lods
pop
sub
inc
enter
push
push
xor
inc
dec
(bad)
and
xchg
mul
push
mov
cmovs
cmp
adc
pop
xchg
adc
dec
inc
xchg
inc
or
pop
inc
pop
adc
mov
or
scas
call
mov
sub
add
clc
xor
push
jl
frstor
cmps
xor
sbb
ret
scas
adc
mov
sti
mov
mov
cmp
xchg
rol
ret
push
aam
add
xor
nop
inc
inc
div
cmp
jb
add
adc
and
jne
mov
int3
inc
push
scas
scas
mov
or
gs
mov
fwait
push
mov
or
mov
jmp
pop
mov
aam
ins
adc
aad
loopne
push
push
jl
mov
(bad)
add
xor
dec
jb
outs
mov
mov
(bad)
adc
aas
or
add
dec
pusha
dec
push
push
test
aad
add
jno
jge
les
retf
ins
or
dec
or
sub
sub
sub
dec
mov
cmc
and
dec
std
add
and
rcl
lahf
jb
(bad)
dec
dec
test
or
cmps
pop
mov
push
or
or
daa
dec
dec
gs
stos
inc
push
inc
sbb
stos
add
jmp
pop
mov
push
jl
adc
push
imul
retf
js
retf
sub
or
inc
and
and
sub
or
sbb
sbb
xor
cld
mov
lea
and
dec
dec
pop
sbb
push
cmp
inc
rol
lahf
mov
setb
jl
rcl
add
sti
int3
retf
push
jae
add
xor
addr16
add
xchg
test
aaa
push
sbb
sub
repz
adc
mov
sar
dec
jne
dec
sbb
jmp
cmp
cmps
cmp
xchg
imul
ins
adc
push
and
adc
dec
cmp
push
shl
shl
add
dec
adc
call
adc
sbb
sbb
call
sub
xor
xor
dec
jo
adc
imul
ret
add
mov
je
and
ins
jo
dec
imul
dec
add
je
sub
imul
adc
arpl
adc
je
push
ss
and
pop
push
pushw
or
repnz
(bad)
mov
das
inc
int
mov
add
mov
addr16
in
sbb
ror
jmp
hlt
adc
mov
gs
mov
shr
ret
xor
jecxz
push
adc
mov
jl
add
sub
add
pop
daa
not
push
cmp
mov
jmp
add
inc
sub
cmp
mov
aam
shl
xchg
push
les
fs
inc
or
cli
xchg
inc
sbb
mov
push
add
repz
rol
xchg
sub
sbb
(bad)
mov
mov
and
loop
mov
adc
sub
cmps
mov
push
push
adc
push
inc
mov
or
mov
mov
mov
and
inc
(bad)
xor
mov
dec
or
test
add
fisttp
pop
xchg
pusha
imul
mov
xor
lods
arpl
fwait
xchg
(bad)
fbstp
fisub
and
nop
add
sub
(bad)
test
sbb
xchg
sbb
inc
add
shl
das
stos
fadd
inc
cmp
test
outs
push
popa
jae
mov
mov
mov
add
mov
and
jg
mov
xchg
xor
retf
push
aam
fistp
push
push
call
je
add
lea
mov
ins
imul
cmp
pop
sbb
pop
mov
inc
inc
out
fs
sbb
lahf
fisubr
dec
cmp
dec
ret
addr16
add
sub
cmps
lock
je
add
or
das
dec
inc
and
lock
mov
adc
dec
push
sub
cwde
int3
xor
stc
out
dec
xchg
dec
or
adc
(bad)
dec
jb
dec
rol
loope
outs
jae
cmp
lea
cmp
xchg
push
test
(bad)
xchg
popa
push
lahf
daa
fadd
mov
sbb
xchg
jbe
dec
test
rol
jne
mov
nop
rol
push
inc
push
pop
pusha
pusha
or
mov
push
or
add
or
fs
ds
jmp
cmp
jmp
adc
inc
mov
lock
pop
inc
xchg
or
shl
dec
in
rcr
adc
ja
sar
mov
js
inc
movs
pop
ret
add
test
leave
fisub
and
fwait
nop
mov
inc
add
cmp
adc
add
push
lahf
in
sub
fcomp
leave
add
dec
add
dec
pushf
clc
cmps
push
hlt
or
pop
xor
add
(bad)
nop
loope
jmp
mov
and
push
mov
push
cwde
mov
mov
mov
xchg
sub
popa
scas
ins
mov
sbb
loop
pop
retf
aas
cmp
je
mov
add
je
or
push
sub
popf
jb
lods
dec
xchg
and
in
jmp
add
call
push
sar
xchg
lock
xor
cmp
adc
int3
data16
mov
or
xor
enter
fs
mov
cmp
int3
adc
dec
cwde
(bad)
cmps
lahf
scas
and
test
xlat
sub
and
push
adc
lock
cmp
in
cmp
mov
xchg
imul
push
or
or
mov
movs
into
mov
jbe
or
call
fadd
pop
cwde
push
adc
mov
add
ins
cmp
cmp
and
xchg
movs
and
or
cmp
and
mov
hlt
mov
std
xor
setg
nop
xlat
add
shl
pop
xor
push
ret
(bad)
adc
inc
jne
and
icebp
or
loope
addr16
and
sbb
cmp
and
pop
test
add
sub
ficom
cmp
jmp
dec
dec
nop
inc
adc
xchg
push
sbb
mov
scas
rcl
inc
cmp
xchg
scas
add
dec
add
sbb
imul
sbb
js
xlat
push
or
loop
pcmpgtd
jne
jecxz
test
leave
das
dec
clc
cmp
dec
mov
push
jp
jmp
mov
es
lock
pop
shld
push
lods
or
push
ins
inc
sub
dec
and
or
adc
fst
ss
push
scas
ins
shl
or
inc
cmps
xchg
mov
cmp
mov
in
jg
mov
mov
fcmovnb
or
ins
bound
loopne
xor
add
or
adc
ds
repnz
rcl
xor
imul
push
pusha
xchg
cwde
cmc
pop
and
jmp
les
repz
pop
test
repz
jl
pop
fcmovnbe
sub
add
inc
push
jge
mov
sub
mov
adc
je
mov
or
in
push
test
es
mov
xchg
shl
sbb
lea
test
dec
(bad)
fistp
add
jmp
xchg
jl
popf
arpl
sbb
add
fdiv
shr
cmp
rep
lods
mov
dec
add
or
adc
adc
add
js
xchg
adc
add
add
sbb
lods
js
jl
fist
hlt
mov
in
or
js
dec
mov
mov
sub
cmp
or
idiv
outs
pop
and
jne
adc
inc
pop
and
inc
jno
push
mov
sub
mov
sbb
sub
call
or
jge
jae
jl
adc
mov
jmp
mov
mov
pop
in
mov
aad
mov
pop
movs
sub
mov
(bad)
sbb
push
imul
bnd
jmp
movs
push
sub
nop
and
(bad)
hlt
sahf
sub
ret
ficom
inc
pop
xchg
xor
push
movs
(bad)
push
cmp
(bad)
dec
add
imul
movs
push
fs
sbb
nop
xor
mov
dec
or
xor
xchg
pop
mov
xor
js
pusha
pop
pop
mov
not
dec
shr
fidivr
ret
inc
pop
add
dec
adc
sub
mov
mov
mov
dec
pop
daa
movs
test
and
lea
ss
sbb
or
stc
push
jle
mov
adc
add
dec
inc
fbstp
fistp
std
stc
fstp
fwait
jmp
sub
cmp
jge
add
rol
cmp
and
jns
sub
jns
pop
mov
and
push
push
ins
pop
xor
inc
xor
push
adc
pop
xchg
pop
mov
mov
or
aad
sbb
mov
pop
and
aam
fs
sub
sub
(bad)
fadd
test
pop
xchg
aas
inc
shl
cmps
loopne
sub
sbb
in
mov
dec
inc
inc
mov
and
gs
adc
mov
push
sub
inc
popf
add
in
sub
(bad)
in
xor
in
adc
jo
push
mov
sbb
sbb
outs
iret
dec
(bad)
mov
lods
push
bound
mov
xor
imul
dec
or
mov
dec
mov
shr
in
fbstp
aas
or
enter
ins
jmp
dec
sub
lods
sub
push
push
adc
adc
cmps
imul
adc
ror
imul
call
ja
cld
scas
aad
or
jle
lock
dec
jae
stos
push
inc
sbb
sbb
jmp
sub
or
sbb
push
adc
xor
sub
sub
or
or
sahf
scas
fist
add
add
leave
pavgb
in
cmp
test
das
xor
inc
add
fwait
sar
sub
and
dec
int3
mov
add
cmp
mov
sub
push
dec
mov
es
adc
popf
or
pop
sbb
adc
les
hlt
fstp
pop
add
mov
jle
push
adc
adc
(bad)
add
inc
jle
fidiv
pop
nop
mov
adc
pusha
jne
pop
add
cwde
inc
sahf
mov
and
les
clc
sub
add
push
cmp
sbb
stos
and
or
add
cwde
dec
je
mov
aas
or
and
fdiv
sbb
add
ret
sbb
ins
and
mov
test
dec
adc
add
or
es
xchg
sub
and
jmp
cmp
enter
adc
nop
xor
mov
dec
or
and
jp
arpl
fimul
pop
ret
je
mov
inc
(bad)
sub
and
mov
in
adc
and
push
sbb
mov
xchg
push
out
sub
push
xchg
xchg
je
shr
jecxz
stos
cmc
mov
daa
daa
aaa
imul
and
cmp
inc
sbb
test
out
(bad)
adc
or
outs
sub
adc
enter
cmp
xor
add
inc
outs
test
mov
retf
sbb
push
gs
or
call
movs
adc
inc
sbb
jne
dec
stc
popa
and
outs
lea
dec
mov
sbb
or
dec
pushf
push
push
mov
add
xchg
add
jo
pop
lock
(bad)
push
or
xor
pop
add
cmps
out
dec
sbb
push
test
imul
jle
mov
aas
xchg
jge
or
fwait
xor
loopne
fucom
fnsave
jmp
pop
test
fldcw
or
mov
sbb
inc
or
pop
in
and
ins
adc
out
dec
shr
hlt
cmp
test
mov
cmp
dec
adc
mov
or
pop
cmp
mov
outs
push
sub
and
imul
push
lods
push
push
inc
sbb
lock
sub
lock
lods
push
pusha
cmps
aam
adc
pop
popf
or
or
or
inc
lock
push
pop
pop
les
mov
test
xadd
or
or
je
loop
test
inc
jmp
add
push
pusha
dec
test
sbb
mov
pop
les
mov
outs
sub
xchg
or
movs
repnz
dec
sbb
pop
and
xor
mov
and
ret
les
xor
mov
adc
or
adc
dec
ror
adc
add
or
inc
or
ret
dec
dec
out
mov
xchg
inc
add
jmp
call
mov
fcomp
adc
or
adc
pushf
(bad)
xor
fsub
ret
cmp
push
or
add
xchg
movs
adc
je
and
jbe
cmp
cmp
mov
je
cmp
or
inc
inc
mov
inc
or
xor
mov
sbb
imul
dec
add
call
js
outs
push
rcr
mov
xlat
or
jp
out
lea
mov
mov
xchg
push
sub
into
push
hlt
xchg
aas
mov
es
jno
in
sbb
jle
movzx
les
push
dec
dec
js
mov
(bad)
xchg
xchg
and
scas
jno
dec
adc
inc
mov
in
xlat
leave
xor
ja
add
jb
sbb
je
fild
jns
cmps
dec
inc
add
add
call
push
inc
or
idiv
sub
sbb
and
or
adc
push
cmp
mov
shl
enter
lods
add
inc
jb
pop
fisubr
sbb
pop
fisubr
dec
mov
outs
jns
mov
popa
lods
leave
add
cmp
xchg
cmps
mov
iret
pop
movs
popf
mov
adc
mov
das
sbb
cmp
xchg
test
sub
xor
mov
push
mov
daa
cli
hlt
(bad)
mov
inc
sbb
cdq
imul
pxor
xchg
cmp
xchg
add
add
xchg
imul
xchg
fdivrp
in
jno
pop
cmp
xchg
adc
popf
jnp
or
xor
xor
in
(bad)
cmp
jl
popa
nop
xchg
sub
jne
in
popf
imul
bswap
xor
pop
aas
mov
cld
mov
ret
cmp
dec
jg
xchg
push
in
and
or
pop
or
xor
call
push
mov
pop
or
pusha
cmp
mov
mov
imul
inc
imul
xor
dec
ja
aam
js
sbb
sbb
cmp
repnz
or
cwde
jl
cmp
std
fwait
mov
mov
push
bound
push
inc
adc
xchg
lods
ror
sbb
push
aam
scas
push
jp
sbb
shr
out
ret
adc
je
sub
adc
xchg
add
adc
adc
sbb
xor
pusha
add
pusha
sbb
xor
push
imul
lock
clc
cmps
xlat
call
xchg
dec
mov
push
and
cmp
add
aad
ret
mov
int3
fbld
rol
cmps
int3
cmps
jno
add
lea
sub
push
js
rcr
sbb
clc
aas
xor
sbb
cmp
loopne
shr
dec
test
repz
push
enter
ret
pusha
and
pop
fbld
xlat
cmp
add
lds
sbb
sub
popa
or
add
repz
add
pop
jmp
add
pop
xor
jle
adc
fcmovnu
dec
sete
out
jge
push
adc
cmp
xor
push
jo
in
or
call
inc
imul
xlat
cmps
fistp
pop
imul
test
jo
sahf
cmp
aam
dec
pop
adc
clc
jne
mov
pop
add
dec
jne
sub
jne
test
je
push
and
mov
xchg
jle
ret
in
movs
div
imul
xor
pop
and
sbb
push
adc
jmp
or
cmp
add
xchg
xchg
mov
add
push
xchg
jo
scas
cli
or
push
mov
inc
or
push
or
lock
mov
dec
mov
push
mov
mov
add
mov
pop
shl
dec
push
neg
xor
jmp
jnp
jns
jmp
cli
cmp
test
adc
sbb
sbb
mov
jne
or
bound
cmp
shl
inc
add
inc
pop
add
jo
sub
stos
push
jnp
enter
pop
shl
sbb
fiadd
pop
mov
scas
addr16
cmp
and
bnd
cmp
dec
hlt
jmp
jmp
inc
je
test
mov
or
mov
jo
int
xor
in
rcr
or
in
cs
cmp
cs
xchg
lock
cmp
dec
pop
ins
movs
pop
fcom
jmp
mov
sub
aam
cmp
or
xchg
adc
sub
adc
adc
dec
pop
ja
aas
iret
cmp
int3
and
or
sub
cmp
sbb
mov
fs
push
test
xor
test
jnp
adc
sti
add
push
pusha
push
adc
daa
xor
cmp
jp
push
add
rcl
cmp
jne
xchg
sub
sbb
sub
fdivr
push
sbb
push
dec
dec
mov
adc
mov
loopne
cmp
(bad)
xchg
(bad)
xchg
pop
cmp
mov
(bad)
loope
pop
je
add
out
mov
inc
push
or
aad
ins
ins
sbb
dec
cmp
adc
es
out
mov
add
add
jecxz
fs
jnp
mov
push
popa
push
cmp
dec
mov
mov
inc
mov
xchg
sub
repz
add
rcl
jae
adc
movs
sub
shr
rol
or
jb
popa
or
sbb
cmp
sbb
test
clc
xchg
add
xor
mov
fistp
dec
sub
mov
add
pop
or
call
cmp
push
mov
or
add
xchg
mov
cwde
cmp
add
sub
mov
add
test
push
shr
in
outs
out
mov
das
add
inc
sbb
inc
mov
sub
fdiv
pop
mov
push
mov
pop
data16
mov
aas
pop
push
mov
dec
sbb
sar
push
inc
pusha
dec
dec
out
dec
pop
cmp
or
ins
xchg
pop
sbb
scas
(bad)
addr16
cdq
fdiv
fs
dec
imul
push
pop
imul
add
push
movs
push
movs
sbb
or
adc
adc
push
and
or
dec
adc
cli
cmp
cmp
and
mov
mov
and
loopne
and
jne
cmp
fldenv
push
mov
pusha
jno
dec
pop
add
mov
add
adc
pop
inc
cld
xchg
out
adc
fs
in
jb
dec
xor
aam
arpl
sub
(bad)
ds
ror
out
test
or
pusha
and
push
xor
pop
ins
add
xor
ja
mov
or
mov
push
in
mov
xlat
jne
xchg
test
jl
into
and
push
mov
leave
ret
scas
test
(bad)
sbb
inc
adc
dec
jbe
mov
or
cmp
movs
xchg
(bad)
mov
cmove
cs
pop
dec
in
addr16
ins
mov
push
adc
and
push
xor
aas
mov
pop
and
sub
ror
pusha
xchg
lea
fdivr
jge
jbe
xchg
push
dec
inc
add
mov
je
push
jne
add
jno
retf
lods
push
enter
mov
pop
jg
adc
repz
in
bound
mov
sub
cmp
daa
push
pushf
pop
mov
es
hlt
sbb
stos
mov
pop
adc
and
push
inc
ins
sbb
dec
add
lods
les
add
enter
fild
push
add
push
jae
test
inc
adc
call
js
imul
push
mov
push
lock
popa
xlat
loope
cmp
adc
or
add
adc
(bad)
repz
xor
fdivr
repnz
adc
lods
nop
repnz
cmp
sub
and
sub
and
and
mov
rol
not
adc
jne
iret
ror
je
fild
xchg
or
jne
rol
add
in
add
adc
jnp
add
push
or
pop
aaa
out
adc
jle
lock
nop
mov
stos
sahf
nop
sub
sbb
test
jo
jmp
pop
call
mov
xor
cdq
push
xchg
jb
adc
jmp
jl
xor
push
add
pop
sub
jb
lods
pop
popf
sbb
or
xchg
jne
fstp
mov
push
ror
xchg
adc
rcr
hlt
pop
hlt
js
imul
adc
dec
dec
aad
clc
mov
and
xor
or
mov
lds
push
pushf
fsubr
cmp
and
push
stos
and
data16
in
(bad)
fs
xchg
add
adc
sub
aas
sub
push
data16
mov
or
pop
ret
dec
adc
inc
pop
and
sub
xor
xor
push
push
adc
pop
push
push
or
xor
or
sbb
rcl
or
xor
push
or
push
and
add
adc
inc
push
test
add
push
sbb
dec
dec
pop
or
dec
inc
stc
jp
je
imul
xchg
(bad)
mov
push
pushf
mov
cmp
inc
lods
ds
pop
leave
adc
inc
lods
(bad)
and
cmp
pusha
rcr
mov
into
mov
shl
or
dec
mov
je
out
nop
daa
mov
or
or
pop
fisub
enter
mov
add
inc
js
sbb
fbld
add
mov
pop
mov
mov
test
sub
jl
shl
mov
ins
xor
pop
jmp
inc
jg
xor
rcl
lea
inc
dec
sub
xor
adc
jle
out
push
adc
jp
sub
inc
scas
or
dec
lods
test
rcr
or
aaa
in
or
sbb
(bad)
arpl
xchg
jl
in
je
mov
mov
cmp
inc
sub
add
jo
or
sub
sbb
jmp
test
stos
sub
or
js
or
adc
nop
sub
je
mov
jle
adc
repnz
or
nop
xchg
bnd
push
pop
sbb
dec
and
fimul
inc
xchg
and
popa
enter
icebp
sar
mov
mov
(bad)
cmp
je
mov
mov
test
hlt
add
and
js
or
es
cmp
cdq
pusha
leave
xor
or
push
sbb
xchg
and
cmp
cmp
mov
adc
or
cs
push
test
inc
test
jg
aaa
sbb
mov
jmp
and
das
push
mov
ret
aam
add
xor
inc
not
loopne
sbb
push
cmp
sub
cmp
inc
or
jno
mov
dec
jne
call
es
adc
jo
pop
dec
xchg
into
bound
mov
add
or
je
pop
loopne
test
adc
add
jns
cld
rcl
mov
dec
mov
pushf
dec
mov
test
ins
stos
inc
je
ror
fcomip
test
inc
push
jle
sti
add
pop
jo
je
les
sub
fisub
cmp
dec
push
sub
and
mov
pop
mov
ror
sbb
sti
(bad)
cmp
dec
dec
scas
push
add
inc
inc
pop
inc
pop
jecxz
movs
cmp
add
dec
mov
imul
jne
mov
inc
and
cdq
jge
or
jmp
push
sub
mov
out
les
or
pop
add
pusha
xor
call
add
or
dec
dec
or
and
fdiv
aas
push
dec
loopne
mov
push
icebp
icebp
jbe
push
jno
or
fisttp
ins
clc
test
or
xor
mov
dec
test
xlat
in
fnsave
xor
rol
add
mov
adc
push
std
push
retf
jmp
push
or
out
daa
xor
(bad)
sub
test
adc
adc
sub
repz
jne
cwde
adc
fidiv
(bad)
les
or
fwait
in
cmp
inc
ins
mov
clc
push
push
xchg
clc
in
ret
out
cmp
enter
dec
push
jae
in
pop
inc
push
dec
pop
or
js
sub
inc
sbb
ins
les
mov
pop
add
and
mov
sbb
addr16
and
push
sub
xor
jbe
fidivr
xchg
sub
imul
dec
mov
cld
add
cli
data16
push
dec
pop
xchg
dec
test
adc
fbld
out
cwde
xor
jne
and
jecxz
popa
add
ins
adc
gs
inc
or
add
imul
dec
dec
add
xchg
sbb
imul
js
in
adc
ins
or
push
add
pop
mov
inc
mov
ds
pop
in
pop
rol
mov
cli
cli
mov
xchg
fmul
std
cmp
push
inc
pop
push
xchg
mov
xor
sub
xchg
aam
push
pop
movnti
cmp
or
fiadd
add
and
sub
xor
mov
into
fst
pusha
fiadd
or
shl
fimul
iret
sub
mov
jns
scas
mov
pop
inc
inc
stos
aaa
inc
out
push
pop
jmp
add
sahf
test
movs
xor
pop
in
call
xor
loop
xor
loopne
repnz
movs
push
push
or
adc
or
pop
(bad)
or
or
push
cwde
adc
mov
mov
aaa
add
adc
xchg
lods
pushf
xchg
add
adc
adc
add
das
ficomp
mov
adc
mov
sub
inc
inc
add
rcl
scas
fcom
cld
call
cld
aas
and
dec
sub
inc
or
loope
adc
in
mov
adc
aas
rol
jae
icebp
xchg
and
and
push
fst
sbb
xor
ret
add
mov
in
dec
pop
xchg
icebp
sub
inc
(bad)
push
clc
push
jo
rcr
rol
std
push
loope
xor
push
outs
push
mov
add
push
frstor
and
dec
adc
test
xlat
das
add
enter
add
pusha
cli
sbb
push
or
or
cld
xchg
clc
bound
push
or
mov
test
mov
add
pusha
dec
or
or
aas
loopne
mov
dec
int3
mov
or
add
mov
add
dec
sbb
add
push
xor
pop
outs
pop
ficomp
dec
in
jge
jne
add
fldpi
bound
and
mov
js
sbb
cs
popf
mov
neg
xor
mov
and
mov
jmp
sub
cmp
js
mov
add
and
(bad)
pushw
ret
nop
call
sub
jne
data16
or
enter
xchg
pop
pop
enter
pop
sti
or
loopne
cmp
add
repnz
fdivp
lea
jmp
sbb
xor
sahf
push
fld
and
cwde
mov
sbb
loope
adc
push
in
mov
fdiv
sbb
(bad)
sub
cmp
push
test
dec
in
ss
out
pop
inc
mov
(bad)
mov
call
inc
loopne
in
movs
jne
test
add
add
and
loope
adc
dec
hlt
clc
dec
mov
not
pusha
cmps
sbb
add
add
in
mov
or
scas
jno
mov
out
xor
push
lds
lods
jo
pop
loopne
add
aad
mov
adc
and
inc
pop
popf
push
and
cmp
adc
inc
adc
imul
in
mov
or
xor
pop
fmul
leave
or
sbb
pusha
pop
sub
imul
rcr
add
mov
or
xor
xor
and
jle
sub
dec
xchg
adc
add
inc
mov
xor
pop
mov
or
ins
or
loopne
sbb
mov
paddq
sti
cmc
and
les
sub
cs
sub
xchg
jne
jle
ret
xchg
or
push
lock
sub
sub
ror
test
sbb
arpl
stos
retf
and
inc
ds
or
xchg
sub
pop
dec
pop
(bad)
wbinvd
scas
lods
inc
jo
push
mov
inc
pop
pop
out
js
nop
add
adc
es
sar
es
push
lea
push
xchg
push
add
fcomp
xchg
jg
fsubrp
jne
mov
adc
not
nop
shld
fdiv
xor
aaa
push
(bad)
icebp
add
adc
xchg
xchg
xor
dec
outs
jns
push
into
sti
fmul
inc
adc
add
mov
lahf
add
jno
inc
mov
leave
xor
clc
xchg
sbb
mov
pop
mov
adc
enter
and
sub
and
enter
inc
xor
adc
and
or
pop
gs
pop
pop
hlt
mov
mov
arpl
adc
cld
mov
inc
cdq
sbb
mov
pop
add
jno
cmp
sbb
fisttp
jge
ret
mov
add
or
jp
inc
stos
jp
shl
push
je
sbb
imul
push
jl
or
ja
fmul
xor
(bad)
call
imul
(bad)
push
addr16
xchg
xor
cmp
jbe
inc
xor
xchg
jnp
bound
test
or
or
and
xchg
lock
push
jg
xchg
or
add
or
or
push
mov
push
jae
cmp
sbb
mov
ret
cmps
pop
(bad)
ja
movs
dec
imul
shl
(bad)
push
cmp
ja
sbb
xor
cmp
shl
adc
push
fld
icebp
lods
int3
push
stos
cbw
dec
inc
or
das
xor
hlt
addr16
pop
add
xor
ins
mov
fimul
add
dec
push
or
mov
sbb
js
test
shl
shl
ins
push
ror
out
pop
inc
iret
adc
push
jmp
sub
jb
cmp
sub
or
pop
loope
jb
shl
or
sbb
jle
add
imul
cdq
test
xchg
shr
mov
jge
rcl
or
out
mov
push
jmp
sub
push
add
and
ret
jge
or
ins
movs
pop
dec
into
mov
dec
jl
push
dec
cmp
or
cmp
ret
add
daa
pop
retf
mov
cmps
dec
cmp
pop
ret
push
shr
and
mov
mov
push
pusha
movs
adc
jmp
mov
cmp
or
or
mov
jmp
add
std
inc
or
test
add
dec
repz
sbb
add
and
ret
int3
adc
dec
push
icebp
cmp
cmc
sub
leave
dec
pop
shr
push
add
push
mov
mov
sub
jb
add
jb
cmp
jne
fiadd
ror
pop
inc
xor
dec
jns
lahf
int
and
push
add
push
fnsave
push
jbe
xchg
icebp
pop
xor
sub
push
test
jne
pop
nop
push
fwait
les
add
pop
nop
call
iret
sar
cmp
push
and
xchg
adc
and
mov
mov
sti
retf
and
mov
xor
or
inc
and
pop
mov
sbb
adc
mov
inc
and
nop
movs
xchg
jmp
mov
pop
and
pop
push
xor
lods
mov
mov
push
neg
push
jno
aam
inc
xor
push
cmp
into
pop
pop
out
sub
push
sbb
cmp
push
sub
int3
jmp
xchg
out
ret
xor
sub
jle
add
jg
sub
or
cmp
jmp
or
shl
sbb
addr16
loop
push
sub
inc
sbb
pop
lea
xor
xor
add
mov
adc
cmp
je
mov
sub
cmp
scas
xchg
cmp
rol
cmc
pop
retf
mov
sub
adc
(bad)
(bad)
dec
call
inc
xor
add
jo
dec
and
into
sub
jb
outs
push
imul
jge
mov
add
inc
push
arpl
pop
push
xchg
and
mov
dec
and
es
mov
popa
cmps
or
inc
(bad)
loope
mov
fnstenv
sahf
or
lock
dec
push
ret
and
and
test
aaa
xchg
pop
xchg
aaa
adc
das
lds
mov
pop
or
xor
dec
xor
enter
jae
dec
test
repnz
jle
les
pop
jne
enter
inc
jne
mov
mov
sbb
imul
lock
pop
hlt
and
js
sbb
leave
les
add
add
mov
leave
mov
movs
jb
dec
cld
mov
fs
movs
push
jb
add
jnp
test
or
add
add
rcl
inc
mov
add
and
cld
sbb
push
push
jo
push
mov
or
test
iret
adc
xchg
out
xor
cmp
movs
into
imul
in
mov
ss
leave
jmp
mov
dec
cs
mov
sbb
and
in
cmp
cmp
add
pushf
inc
cmp
outs
les
xor
jae
push
mov
add
call
inc
xchg
or
or
xor
xchg
pop
inc
or
scas
dec
push
xor
or
sbb
and
nop
xchg
cmp
sbb
cli
and
xor
sbb
popa
cld
push
xchg
sbb
jne
popa
or
loope
out
arpl
push
retf
mov
xor
push
arpl
and
out
mov
add
int3
enter
fadd
xchg
test
pop
xor
push
sbb
(bad)
sahf
jg
adc
ins
mov
or
inc
or
adc
or
mov
es
jmp
punpckhbw
xor
mov
or
arpl
lar
loop
pop
rcr
sub
fadd
or
movs
add
jle
and
cld
js
or
mov
add
push
mov
sbb
or
aaa
rcl
outs
cmp
adc
or
and
inc
sub
cs
mov
and
inc
imul
sub
fisub
int3
rcr
aam
jl
gs
inc
sub
cmp
pop
inc
mov
push
dec
fcom
add
aam
inc
clc
int3
popa
sbb
gs
dec
fwait
rcr
mov
or
and
add
push
xor
mov
add
sbb
add
inc
push
in
in
add
inc
fldcw
and
xchg
inc
scas
xor
mov
sbb
and
imul
sbb
pop
jp
int3
inc
push
pop
js
stos
sbb
daa
stos
push
inc
add
movsx
imul
sbb
jge
aad
aad
sub
jge
add
dec
push
xor
and
xor
pop
sbb
add
add
ret
bound
(bad)
xchg
jl
or
inc
mov
sub
in
adc
rcr
dec
nop
(bad)
sub
add
shl
or
jmp
pop
cmp
push
jae
jae
or
and
fadd
ja
sysret
sbb
and
mov
aaa
add
push
sub
les
xchg
movs
sub
push
js
push
dec
ret
adc
xor
sub
push
jmp
es
jle
adc
or
sub
push
push
or
jge
popf
xor
je
hlt
push
and
cs
sbb
xor
inc
adc
inc
outs
leave
lea
sbb
test
inc
mov
sbb
pop
inc
and
mov
dec
mov
jns
pushf
pop
sbb
test
sti
je
daa
adc
adc
pop
sbb
push
pop
or
adc
out
sub
movs
and
xabort
xor
and
movs
loopne
mov
test
add
sub
push
ret
push
loopne
and
push
push
add
push
mov
lea
push
(bad)
adc
in
ins
add
xor
inc
in
pop
push
jmp
jns
arpl
mov
fist
xchg
mov
cmc
adc
retf
mov
jb
pop
dec
mov
js
pusha
add
add
xor
mov
daa
loop
lea
loopne
and
sbb
lock
adc
jl
lock
repz
vmwrite
loope
push
inc
xor
sub
mov
inc
adc
sbb
hlt
outs
cmps
sti
dec
rcl
ret
xchg
mov
mov
cli
lock
push
ins
sbb
inc
mov
pusha
adc
mov
pop
add
mov
pusha
cmps
and
cmp
cmps
push
jno
push
sub
loop
or
jne
xchg
ja
imul
rcr
iret
sbb
(bad)
sbb
fwait
inc
sti
adc
cmp
dec
jb
cmp
xchg
icebp
or
xchg
xor
or
(bad)
dec
pop
xchg
and
test
push
pusha
or
enter
sbb
rol
mov
pop
jo
outs
add
fist
rol
dec
movs
aam
ret
sbb
xchg
jne
add
lods
cdq
ret
out
mov
adc
sbb
shl
add
pop
retf
or
addr16
mov
push
ds
sub
mov
loopne
xchg
add
test
mov
dec
bswap
retf
or
repz
clc
or
lea
or
daa
adc
movs
dec
dec
dec
adc
aaa
dec
cmp
push
push
stos
popa
cmp
outs
mov
int
xor
sub
mov
sub
js
fsubr
push
cld
retf
lea
sbb
dec
inc
cs
xor
adc
xlat
mov
and
out
ds
cdq
and
sbb
imul
add
or
or
enter
mov
js
dec
test
daa
cmc
adc
in
(bad)
push
pop
jl
frstor
push
mov
ins
sub
mov
inc
or
jb
mov
pop
sbb
adc
lea
adc
xchg
nop
retf
jle
imul
or
nop
data16
sbb
push
inc
jne
data16
dec
sbb
cmp
push
xchg
mov
dec
xchg
nop
mov
xchg
pop
lidtd
mov
inc
lahf
jo
inc
js
sub
imul
dec
cs
mov
mov
adc
rcl
rol
xchg
and
rcr
add
mov
ss
mov
imul
jle
cmp
mov
dec
adc
bound
popa
sub
push
and
popa
and
call
sub
pop
add
out
mov
test
imul
rcr
mov
inc
xor
push
loopne
popa
xor
push
arpl
pop
mov
fisub
imul
add
jns
sti
imul
add
ins
cmp
push
add
gs
mov
fadd
lock
je
fwait
sub
scas
(bad)
sub
sub
jns
sahf
ja
xor
xor
and
xor
imul
shr
js
mov
inc
push
xor
bound
cmp
push
(bad)
jmp
in
adc
rol
mov
aaa
and
sub
ja
and
and
dec
popa
pop
call
push
cwde
and
add
je
or
daa
(bad)
inc
(bad)
shl
add
and
jmp
ja
js
sbb
or
sti
sub
mov
das
adc
pop
jp
dec
pop
mov
xchg
sbb
inc
xor
and
sbb
mov
cmp
or
mov
repz
pop
push
clc
fs
and
scas
add
mov
lods
rcl
sahf
sub
imul
sar
mov
sbb
dec
aas
pop
mov
push
adc
jo
daa
jmp
or
mov
sub
jne
dec
or
mov
jbe
cmp
push
sbb
outs
or
pop
dec
cmp
inc
mov
cmps
loopne
sbb
sbb
sbb
mov
sub
inc
sub
or
enter
pop
ss
aad
add
mov
sub
push
jp
sub
dec
sub
mov
and
cmps
js
or
jno
in
add
mov
ret
adc
data16
push
pop
adc
adc
inc
sbb
in
(bad)
cwde
lock
ret
in
dec
xchg
add
cmovl
inc
and
jmp
popf
out
test
adc
mov
push
dec
add
dec
sub
xchg
in
and
cld
xor
mov
sub
xchg
sub
xchg
nop
adc
cmp
sub
xchg
adc
sbb
inc
dec
sub
cmp
(bad)
cmp
mov
adc
dec
jl
mov
dec
scas
push
or
push
cmps
outs
sbb
adc
and
pop
add
adc
push
xchg
cs
inc
jne
pop
rol
nop
push
pop
call
movs
push
xor
mov
test
aaa
in
mov
pushf
pop
mov
or
adc
dec
movs
enter
mov
and
pushf
(bad)
in
xor
sar
test
mov
adc
lahf
repnz
mov
or
test
cld
add
push
add
or
inc
popf
mov
iret
je
stos
xchg
and
mov
test
test
in
add
aam
mov
push
add
add
mov
and
inc
sahf
sub
outs
push
mov
add
mov
inc
inc
mov
daa
sbb
mov
jecxz
inc
pop
les
test
dec
dec
mul
sbb
add
jo
inc
lea
pop
xor
les
or
and
add
push
leave
or
rcl
sub
sub
lods
test
mov
jge
and
dec
jg
add
lea
push
jmp
(bad)
rol
or
pushf
lea
jo
mov
dec
cmp
push
or
and
das
pop
inc
push
jns
repnz
xor
xchg
lds
or
rcr
int
gs
pop
xchg
cmp
imul
aad
enter
sar
add
mov
in
adc
mov
fsub
cmp
and
and
xor
aad
pusha
test
jle
pop
pop
xor
or
push
test
mov
retf
hlt
jbe
inc
call
xchg
pop
mov
xchg
dec
xchg
shl
cmp
nop
in
lods
mov
(bad)
pop
jge
enter
dec
loopne
mov
shr
adc
(bad)
ret
(bad)
lea
ja
je
pop
pop
inc
push
call
outs
in
pop
cli
or
test
movs
inc
dec
jge
mov
or
cmp
stos
pop
mov
push
popf
test
adc
adc
inc
cld
psllw
inc
imul
mov
mul
das
dec
or
or
pop
adc
dec
or
les
push
mov
lods
aad
retf
add
sub
push
add
inc
inc
stos
test
scas
enter
dec
cmp
cdq
movs
pop
les
rcr
mov
pop
lock
adc
or
in
jmp
iret
sub
jmp
das
clc
test
adc
jmp
imul
inc
scas
cmp
cmp
adc
add
popa
fucomp
pop
pop
or
mov
and
movs
cwde
mov
sahf
pusha
lahf
in
jmp
xor
jmp
outs
jne
mov
cwde
dec
fmul
cs
aaa
jnp
fs
les
jbe
inc
xchg
gs
inc
pop
mov
xchg
pop
js
add
mov
push
sub
and
inc
pushf
xlat
jecxz
push
scas
inc
adc
push
in
push
or
jb
sub
imul
push
pushf
scas
ror
add
addr16
test
pop
hlt
dec
pusha
mov
sbb
fiadd
scas
cmp
mov
mov
sbb
push
sti
inc
xchg
inc
mov
push
jmp
or
jno
mov
or
jnp
daa
mov
(bad)
push
lock
lea
xor
xchg
movnti
pop
shl
jne
(bad)
cmp
mov
test
mov
add
jmp
data16
into
repz
stos
rol
sub
outs
cwde
pusha
jmp
inc
es
adc
loopne
or
sub
mov
mov
cmp
dec
in
push
(bad)
dec
cmp
push
jmp
adc
lea
push
inc
and
xchg
push
fwait
mov
(bad)
or
adc
je
cs
out
(bad)
cs
test
pushf
cld
pop
cmps
or
push
int
rcl
sbb
cmp
dec
pop
mov
div
fbstp
add
push
sti
cmp
or
iret
imul
xchg
mov
loop
or
out
push
je
mov
sar
ins
add
and
jle
lds
pushf
sbb
(bad)
push
or
inc
sbb
lock
xchg
cdq
rcr
dec
inc
fdivr
repz
pop
add
in
dec
and
xchg
mov
xlat
ds
retf
mov
add
add
adc
test
adc
dec
add
aad
into
dec
daa
mov
lock
jo
stc
adc
or
inc
jl
push
ss
(bad)
mov
xchg
xchg
test
or
fadd
popf
adc
daa
jae
inc
mov
mov
lock
sbb
imul
push
test
pop
cmp
jne
lock
test
xchg
cdq
sbb
rol
ss
stos
ins
push
push
shl
cmp
cs
cmp
xor
cmp
and
dec
enter
mov
cmp
mov
sbb
pop
dec
push
int
out
push
cmp
xchg
je
rcl
jmp
sbb
sbb
cmp
(bad)
mov
sbb
iret
aas
xchg
adc
setg
ins
push
mov
or
add
dec
adc
pusha
pusha
icebp
or
xor
call
jne
gs
mov
sub
pop
cmp
or
outs
loope
or
pinsrw
or
imul
movs
or
dec
pop
jns
pop
mov
loope
inc
sahf
popa
bound
add
or
mov
inc
dec
and
dec
imul
mov
dec
out
or
push
stos
dec
mov
add
js
pushf
fisub
aam
popa
popa
cld
sar
jae
iret
call
icebp
fninit
mov
push
cmp
or
lea
mov
in
idiv
leave
dec
dec
or
shl
sbb
xchg
test
mov
cmp
xlat
or
add
adc
lock
or
outs
pop
or
pop
sub
pop
push
dec
sar
inc
xchg
pushf
mov
sbb
mov
nop
mov
lods
jnp
pop
add
xchg
and
sub
leave
ins
clc
cmps
lods
sbb
popf
add
mov
lahf
mov
das
jne
outs
or
adc
or
popa
pop
jg
aam
repnz
inc
dec
dec
lock
(bad)
cmp
pop
push
stos
sbb
mov
out
out
push
popa
push
cmp
push
loope
pop
fucomi
sub
inc
test
jns
mov
mov
je
out
int3
adc
in
sbb
cmp
ror
sar
ret
rcl
push
mov
add
mov
outs
cmp
push
stos
ins
jecxz
pop
push
imul
push
jecxz
stos
xchg
push
mov
in
adc
pop
jmp
repz
outs
jecxz
sbb
repz
test
cld
sub
mov
xchg
or
stc
push
lock
push
addr16
xor
imul
add
push
jmp
(bad)
in
es
dec
xchg
mov
sbb
or
cmp
adc
xor
and
inc
sahf
or
xor
leave
mov
call
dec
ja
jl
pop
repnz
daa
cmp
pop
jg
push
dec
cli
popa
fnstcw
cmp
pop
xchg
int3
arpl
add
stos
jae
(bad)
pop
sbb
aas
mov
adc
ret
cmps
xor
adc
mov
pop
(bad)
aam
or
je
pop
or
imul
hlt
jg
mov
adc
push
ret
les
dec
xchg
sbb
add
dec
(bad)
jne
lahf
movs
xor
call
out
repz
ja
inc
sti
add
cdq
loopne
or
hlt
push
add
fcom
mov
push
mov
leave
mov
leave
jecxz
rol
neg
enter
pop
mov
outs
pusha
in
ret
aam
sub
or
sub
and
loope
fld
popf
shl
pop
shl
fidivr
xchg
xchg
(bad)
icebp
push
in
test
outs
mov
jo
add
repnz
movs
adc
pusha
xchg
test
mov
test
imul
mov
sub
mov
int
jo
push
cmp
xchg
gs
jmp
jmp
leave
add
pop
xor
add
inc
add
jmp
pop
rol
lds
fisubr
inc
sbb
cdq
or
add
xor
mov
into
sar
stos
jmp
mov
dec
mov
inc
imul
add
push
xor
sub
test
sbb
and
daa
imul
in
add
inc
cli
ja
rcl
(bad)
jne
test
jo
out
hlt
or
xchg
push
sbb
dec
or
add
mov
movs
inc
dec
fnstcw
sub
outs
cmps
push
test
ss
mov
mov
sub
adc
into
dec
test
push
add
jno
adc
add
movs
cs
xchg
inc
adc
shl
adc
or
pop
cmp
add
mov
cmp
pop
call
nop
pop
or
pop
add
add
ja
test
xor
sbb
or
ja
and
sub
popa
or
ret
inc
inc
stos
mov
jle
ds
idiv
lds
mov
pop
and
mov
idiv
mov
fs
call
mov
xlat
ins
push
adc
sub
xor
ficom
inc
adc
and
lahf
mov
or
lock
loopne
or
ja
xchg
add
ficomp
fnstsw
xor
mov
push
pop
test
sub
add
push
xchg
daa
cmp
ret
or
mov
push
cmps
pop
push
xor
mov
adc
pop
xor
loop
enter
push
or
and
inc
test
sub
add
inc
adc
pusha
and
and
idiv
fisub
xchg
pop
push
std
mov
imul
loop
clc
inc
lea
pop
mov
pop
and
pop
mov
or
sbb
add
push
mov
nop
pop
sub
in
pop
loope
mov
dec
shl
dec
adc
push
sbb
or
ss
fsubr
fcom
and
inc
outs
enter
mov
ins
sub
test
jl
mov
push
push
mov
xchg
es
add
test
in
shr
pop
es
(bad)
ror
xchg
cwde
bound
cmp
sub
cmp
test
adc
push
nop
adc
and
popf
mov
adc
inc
inc
and
ins
sub
dec
out
in
mov
sti
and
pop
jbe
out
push
jg
pop
sub
pop
jbe
pop
mov
or
sub
pusha
loop
movs
(bad)
or
mov
cmp
stc
mov
arpl
push
jo
dec
and
jl
pop
xor
mov
mov
shl
mov
or
mov
sbb
adc
(bad)
sub
shr
add
inc
jmp
sbb
mov
push
sbb
cli
add
add
icebp
adc
push
add
(bad)
or
mov
jge
pop
dec
add
and
push
out
fiadd
enter
adc
pop
sub
movs
push
and
sbb
loop
mov
sahf
fucomip
or
jmp
mov
push
push
nop
mov
xor
mov
fstp
ja
jno
popa
mov
test
data16
inc
mov
sbb
ret
push
iret
shr
test
adc
test
adc
pop
mov
das
dec
xor
(bad)
stos
cs
push
pop
test
inc
cmc
shl
push
xor
jmp
sbb
imul
aad
call
call
add
fadd
imul
add
iret
xchg
cmp
pop
dec
or
or
pushf
add
pop
enter
ss
fisttp
xchg
outs
sbb
mov
ja
or
add
jo
sbb
sub
movs
adc
xchg
sub
shl
outs
inc
add
repnz
outs
sbb
mov
clc
or
mov
rol
mov
dec
xchg
popa
sub
mov
arpl
pop
pop
adc
daa
mov
fs
nop
inc
push
xor
mov
shl
adc
ror
push
fcom
xor
pop
jmp
push
push
mov
inc
in
iret
push
cmp
rol
pusha
test
in
adc
push
cmps
and
fsubr
sub
and
add
dec
xchg
dec
push
add
lods
push
ret
cmp
xlat
and
jo
mov
lods
hlt
inc
add
inc
pushf
ror
add
pop
aam
hlt
in
sub
xchg
lock
mov
xlat
xchg
inc
sub
mov
xchg
xchg
pop
clc
(bad)
outs
shl
push
clc
inc
add
push
pop
mov
mov
and
mov
inc
add
dec
inc
adc
dec
cmp
jp
xchg
out
lods
je
rcl
and
sub
xlat
repz
xor
pop
add
pop
cmp
stc
out
cmps
test
setne
mov
in
pop
dec
test
addr16
inc
aam
enter
pop
xlat
jmp
sub
pop
push
mov
aas
sti
push
sub
stos
mov
or
xor
ins
mov
outs
(bad)
push
sbb
bswap
inc
loope
(bad)
pop
scas
push
pop
mov
jecxz
xchg
dec
or
add
pop
and
inc
pop
add
jmp
push
push
or
mov
imul
and
loope
dec
dec
out
ficom
ror
movs
adc
out
push
and
mov
xchg
scas
lds
lea
and
mov
xchg
jge
imul
add
push
bound
fsubr
loop
and
or
mov
jo
jmp
mov
cmp
cmp
test
pop
xor
in
rcr
jae
popa
jo
pop
add
inc
loop
pop
mov
add
adc
fadd
push
add
repz
add
xchg
das
push
add
mov
pop
inc
mov
mov
sar
pop
pop
icebp
dec
mov
xacquire
push
mov
mov
add
and
outs
pop
ret
daa
add
jmp
cmps
jns
add
aad
fstp
ins
add
inc
xchg
outs
dec
fmul
retf
call
out
mov
inc
ja
inc
and
lea
nop
(bad)
sbb
or
adc
xchg
add
push
dec
stos
dec
sbb
(bad)
cmps
je
nop
out
cmp
inc
loopne
add
lods
push
adc
adc
cmp
adc
pop
je
push
pop
or
adc
dec
mov
add
(bad)
jns
(bad)
test
jmp
or
cwde
and
sbb
xor
in
sbb
xor
push
mov
in
inc
pusha
cmp
push
out
jp
inc
fidivr
jl
loopne
or
sub
into
push
xchg
push
cli
mov
scas
add
enter
inc
std
sahf
or
push
mov
jne
or
xor
push
adc
add
xor
movs
lahf
or
adc
adc
xor
fisttp
and
mov
mov
adc
jmp
(bad)
into
aaa
push
adc
inc
or
cmp
pop
or
mov
jp
inc
fs
add
inc
adc
or
xchg
adc
mov
and
mov
sub
push
and
daa
xchg
and
cmp
lock
xchg
cmp
aaa
stos
aaa
xor
xor
inc
sub
ficom
push
sub
es
or
sub
and
dec
ss
cmp
frstor
dec
sbb
adc
lods
xor
jp
jae
ret
sub
cmp
call
jge
add
jmp
or
add
aam
and
or
and
repnz
pop
add
add
adc
xor
outs
call
popa
sbb
data16
mov
ror
add
lds
push
xchg
jg
nop
add
mov
mov
ror
lahf
jo
mov
jne
pop
and
aas
mov
pusha
jbe
cmp
popa
jge
cmp
jg
or
pop
adc
loope
retf
dec
push
dec
add
xor
xor
cs
pop
push
sub
sbb
dec
or
or
and
inc
nop
jg
inc
pop
or
lea
call
xor
mov
call
dec
dec
pop
add
push
(bad)
mov
push
and
fsub
ja
xchg
xchg
push
dec
ret
or
adc
add
push
aaa
call
xor
cs
push
push
push
dec
push
rol
mov
cmp
dec
add
cld
adc
sub
mov
loop
js
push
mov
inc
cmp
add
test
adc
jnp
std
and
mov
(bad)
icebp
pop
or
pop
and
and
adc
hlt
xchg
test
or
pop
and
pop
fiadd
or
pop
xchg
dec
js
push
or
out
xchg
inc
dec
out
xchg
ret
imul
dec
and
out
enter
mov
int3
movs
leave
jb
push
add
ror
push
add
not
adc
inc
jo
das
pop
jge
dec
push
pandn
mov
add
add
dec
mov
or
cmp
scas
xchg
imul
test
or
lock
and
loope
int
add
xor
push
(bad)
add
sbb
mov
cmp
inc
movs
push
shr
imul
daa
iret
push
add
push
or
jbe
pusha
nop
ss
cmp
xchg
jb
sub
sbb
xor
pop
and
lea
or
mov
mov
sbb
jecxz
inc
icebp
lds
mov
add
ja
aam
cmps
fst
and
push
and
out
or
adc
or
or
push
(bad)
dec
mov
jno
or
adc
jmp
aam
add
push
jge
out
jo
lods
lds
mov
adc
sbb
in
adc
shl
retf
fdivr
ss
dec
or
pop
outs
cmp
pop
pop
xor
xchg
js
or
dec
push
sbb
xchg
dec
mov
in
add
adc
dec
enter
and
add
mov
aam
cwde
pushf
arpl
xchg
push
jg
shl
cmp
jnp
test
cmps
push
xor
xlat
in
loope
sar
push
ret
sti
sbb
into
iret
pop
jb
add
jmp
cmc
mov
or
sahf
xchg
xchg
mov
ins
ins
jns
add
nop
ins
dec
inc
add
test
fucomi
ja
add
lods
jg
cmp
xor
mov
sbb
jae
adc
push
stos
mov
adc
test
adc
pusha
or
call
or
adc
push
xor
and
and
pop
add
jnp
add
outs
add
addr16
sub
sub
jmp
and
xchg
fcom
push
jp
popa
in
adc
cli
and
cmp
rcr
or
pop
push
pushf
mov
(bad)
jnp
pushf
int3
and
data16
sbb
sbb
inc
push
scas
adc
aaa
out
xor
outs
add
and
rcl
retf
push
push
push
push
add
adc
add
dec
xchg
js
inc
es
dec
je
push
xchg
inc
movs
in
push
mov
jb
mov
and
add
(bad)
adc
inc
movs
pop
add
xchg
pusha
add
scas
imul
shr
mov
add
fst
cdq
in
push
sub
int3
cld
clc
or
and
jmp
dec
cmp
jmp
adc
clc
ss
pop
arpl
and
cs
in
mov
pop
call
and
sub
rcl
add
mov
jne
retf
push
rol
inc
push
sbb
push
add
sahf
retf
push
movs
clc
push
add
jle
repnz
in
fistp
add
pop
scas
push
push
sbb
fwait
inc
jl
cmp
jno
or
pop
ret
rcr
push
out
loope
mov
jg
mov
mov
in
icebp
sbb
in
clc
ret
add
les
jnp
ret
or
movs
test
mov
pop
popa
cmp
sbb
sub
push
xchg
icebp
inc
mov
xchg
adc
mov
stos
push
push
sub
cmps
ret
fisttp
dec
xor
movs
push
enter
dec
dec
sbb
dec
dec
pop
cmp
or
fidiv
pop
in
arpl
mov
je
mov
inc
mov
aad
or
xor
cmps
or
push
adc
xchg
jb
or
or
es
popf
arpl
int
dec
push
fwait
jb
pop
inc
call
movs
sub
cmp
scas
inc
pop
adc
or
xor
rol
cld
cmps
es
popf
hlt
mov
sbb
inc
mov
(bad)
jne
sub
inc
(bad)
mov
push
clc
mov
out
(bad)
mov
pop
sub
sbb
jbe
mov
jne
sbb
xor
aas
or
add
test
je
test
or
jp
movsx
and
sbb
icebp
cs
sar
sti
or
add
mov
xchg
hlt
cmps
push
push
add
lds
test
repz
mov
loope
add
jae
bound
(bad)
pop
ret
add
cmp
cmp
cmps
mov
or
in
lock
rol
loope
sub
and
ins
and
adc
in
fld
retfw
cld
and
dec
leave
enter
sub
or
or
dec
test
add
(bad)
mov
jne
movs
test
push
cld
imul
pop
gs
mov
les
cmc
and
push
add
adc
jne
sub
cmc
push
fidiv
lock
call
mov
das
dec
mov
and
lea
push
push
nop
out
mov
xlat
outs
push
int3
fstp
add
sbb
call
je
mov
add
dec
in
cmps
sub
cs
jno
out
push
add
movs
repnz
mov
movs
daa
js
sbb
or
mov
ja
push
sti
push
ds
mov
fcom
xchg
aam
es
add
xchg
push
mov
adc
sub
jmp
daa
gs
es
into
dec
cmp
xor
push
lods
xchg
or
xor
pop
enter
sub
lock
mov
jb
inc
jmp
(bad)
and
mov
pop
fisttp
inc
or
inc
dec
enter
mov
add
and
push
scas
sbb
xor
in
add
and
lahf
out
and
nop
es
pop
daa
sbb
jb
sbb
nop
inc
or
mov
pop
rol
mov
or
add
or
xor
jg
dec
pop
inc
adc
int
adc
test
je
(bad)
push
scas
dec
adc
sub
jmp
or
and
jmp
cmp
ins
push
sub
adc
call
jmp
or
mov
cwde
pop
mov
outs
cmp
ss
pop
adc
lock
rol
sbb
or
sub
loop
jo
lahf
mov
xchg
cmp
pop
xchg
pusha
test
sahf
adc
mov
push
data16
fldenv
(bad)
inc
sbb
xor
sbb
mov
xor
popa
pusha
cmp
sub
outs
mov
jl
cmp
icebp
loopne
and
sbb
aad
lea
xchg
gs
push
or
sub
or
adc
adc
sbb
adc
push
int3
inc
ficom
ret
push
pop
sbb
bound
cmp
inc
cmps
sbb
popa
popa
fwait
ret
sub
pop
or
loope
mov
sbb
test
adc
dec
sbb
mov
test
loop
xor
call
add
add
retf
mul
das
cmp
dec
data16
mov
xchg
xchg
pop
sub
pop
adc
adc
aaa
mov
call
add
pushf
daa
push
sub
mov
je
adc
cmp
imul
pop
das
loopne
repnz
mov
clc
out
cmp
mov
shl
xor
loope
fs
stos
mov
pop
outs
push
mov
mov
cmp
add
shl
xchg
push
shr
mov
aad
js
std
inc
inc
push
mov
mov
sbb
xchg
in
inc
push
xlat
add
popa
and
sbb
outs
xchg
xor
adc
jnp
mov
cmp
mul
push
add
and
add
xor
xor
sbb
aad
in
pop
pop
push
daa
adc
sahf
fst
jl
add
leave
inc
in
cmp
cld
mov
cmp
xor
add
xor
mov
test
inc
ffree
sbb
cmp
xor
add
loope
pusha
xchg
fadd
and
xchg
push
in
mov
sub
inc
ror
loopne
dec
pusha
fnclex
je
adc
retf
adc
mov
inc
inc
push
sub
cmp
cmp
pop
mov
jmp
lock
cmp
or
xchg
mov
or
or
adc
push
mov
outs
inc
(bad)
or
sub
mov
inc
out
cmp
lods
jae
mov
ins
pop
jo
xchg
inc
in
mov
clc
rcl
in
add
xor
add
push
or
add
or
aad
jbe
jmp
ins
rcr
sbb
ret
add
cmc
or
sti
push
push
mov
sar
lahf
xchg
or
cmp
add
fcom
adc
cmp
add
pop
dec
push
sbb
mov
pop
sbb
add
sub
pop
outs
mov
int3
add
or
sub
cmp
aaa
sbb
mov
or
lods
add
and
pop
leave
mov
or
sbb
inc
mov
cmp
sbb
ret
push
out
or
daa
cmp
mov
rcl
pop
dec
xchg
iret
lods
jne
dec
inc
push
sbb
xor
fcom
das
mov
hlt
imul
rep
push
outs
jmp
call
xchg
mov
loope
add
or
and
sbb
adc
ds
pop
adc
pop
cmp
fild
cld
push
jb
sub
imul
jmp
add
fidivr
lods
cmp
push
je
mov
sahf
mov
(bad)
mov
xchg
push
push
mov
test
in
aam
jg
aaa
cmp
mov
jle
adc
cmp
jecxz
sub
mov
xchg
adc
add
cmp
repz
push
dec
pusha
sbb
xor
inc
arpl
and
inc
jge
xor
cmp
js
cld
lods
fwait
mov
test
loopne
sub
sub
ret
sub
loopne
pop
pop
push
pusha
or
add
ret
xchg
inc
sub
mov
sbb
xor
es
or
mov
popa
jg
idiv
imul
icebp
push
ss
or
pop
mov
addr16
xlat
adc
pop
xchg
pop
jne
in
add
dec
popa
mov
test
dec
push
xor
sub
inc
(bad)
xor
or
js
mov
push
and
add
dec
push
push
data16
dec
dec
add
and
sbb
mov
cdq
and
and
sbb
inc
sub
push
push
cmp
je
cmp
jbe
es
jne
fiadd
int3
pop
shl
push
pop
cli
loop
mov
and
xor
imul
mov
(bad)
jl
adc
sbb
sub
sub
or
int
mov
mov
xor
inc
inc
cmp
es
daa
mov
outs
fmul
pop
jo
or
not
mov
xor
cmp
cmp
jbe
push
test
jbe
add
fadd
daa
or
outs
pop
sub
sub
aas
sub
dec
sub
and
and
push
ja
test
and
and
lahf
popa
xchg
mov
and
es
jg
xchg
xchg
sbb
or
push
adc
dec
sbb
xor
retf
or
popf
fcomp
inc
test
add
daa
imul
jo
add
jne
jle
pop
mov
out
aas
js
sbb
fldenv
dec
ins
pop
sub
jmp
adc
cmp
or
in
pop
adc
xchg
sub
test
xor
cmp
je
fadd
and
add
sub
pop
jae
add
sub
or
arpl
push
scas
mov
and
int
xor
outs
(bad)
outs
push
or
retf
rcr
(bad)
mov
push
in
xchg
xchg
and
dec
in
mov
cmp
xor
fwait
ret
cs
add
cli
mov
xchg
test
push
sbb
xor
aam
xchg
out
inc
jnp
or
(bad)
test
jge
sbb
mov
or
jmp
and
inc
sbb
pop
or
test
ins
adc
jl
add
push
fadd
or
jl
inc
xor
or
into
aas
mov
scas
pop
and
cmps
das
pusha
pop
pop
mov
lea
and
or
test
pop
das
dec
movs
push
movs
ret
xchg
push
and
add
push
call
retf
and
mov
add
test
add
enter
jns
xchg
es
or
jmp
imul
jb
xchg
inc
clc
mov
das
nop
adc
adc
imul
sbb
inc
aaa
push
mov
and
pop
xor
cmc
movs
rol
popf
mov
int
rcpps
adc
adc
pop
sbb
aam
pop
xchg
pop
pushf
dec
shr
shl
push
adc
sub
add
or
jecxz
lods
das
pop
mov
mov
or
sbb
add
fucom
xchg
cmc
push
and
push
aam
and
dec
or
mov
das
dec
enter
xor
add
ret
xor
dec
call
lock
sub
mov
xor
fmul
adc
and
push
or
(bad)
inc
pop
ret
(bad)
sub
xor
push
fwait
cmp
jge
pop
dec
outs
pop
pop
dec
and
(bad)
xchg
sub
mov
jle
shl
xor
mov
inc
mov
add
jne
ror
lods
jmp
xor
outs
and
pop
jg
test
inc
sub
(bad)
ins
and
pop
inc
in
add
jnp
les
cmp
add
adc
cmp
add
dec
mov
dec
cmps
pop
les
jmp
fwait
(bad)
push
ror
int
and
jle
jne
test
adc
add
pop
pmulhuw
adc
xchg
jmp
fdiv
retf
das
sub
pop
jb
or
inc
cld
aad
out
or
inc
mov
mov
imul
xchg
push
sbb
add
push
shr
and
adc
adc
imul
jnp
out
mov
xor
dec
inc
jne
push
movs
mov
dec
dec
add
cs
popa
retf
xor
xor
gs
je
mov
adc
sahf
pop
jmp
add
push
jle
icebp
adc
push
adc
adc
retf
xchg
jmp
push
add
mov
mov
add
fwait
xchg
daa
test
or
stc
ret
add
inc
cmp
std
and
inc
dec
push
dec
scas
push
sub
adc
jmp
add
or
adc
mov
cmp
jns
test
xchg
push
fs
call
idiv
pop
xor
mov
pop
and
das
cmc
dec
sub
ss
xor
dec
inc
dec
xchg
aaa
add
push
push
je
jmp
in
push
add
xchg
sub
mov
iret
movs
mov
cmp
sub
adc
mov
xchg
adc
push
sbb
cmp
or
es
push
pop
je
push
inc
dec
mov
mov
xchg
or
loopne
sbb
and
rcl
ss
test
es
sbb
rcl
inc
sub
ja
fs
dec
or
dec
lahf
or
xor
loope
ja
xor
push
pop
stc
ins
das
ins
ficom
sbb
popf
div
mov
cmc
aam
test
mov
xchg
sbb
xchg
inc
hlt
xchg
outs
xchg
iret
jmp
movs
ja
pop
fcomp
sbb
dec
sbb
and
dec
retf
repnz
int
in
pusha
or
adc
inc
cld
(bad)
or
aaa
inc
imul
mov
xchg
mov
xor
push
js
sub
repz
cwde
or
adc
leave
mov
sub
mov
or
push
and
sti
pop
aam
jl
dec
jmp
retf
jne
adc
lock
out
jle
dec
add
push
and
xchg
data16
mov
mov
xlat
ja
and
sub
mov
jmp
test
push
inc
sub
iret
(bad)
jg
aam
push
adc
sub
call
lea
pop
nop/reserved
mov
sbb
cmp
(bad)
daa
mov
(bad)
in
mov
rcl
neg
adc
jle
adc
mov
and
inc
(bad)
xor
(bad)
pop
repnz
mov
inc
mov
retf
sub
adc
inc
or
mov
push
jo
mov
cmp
push
push
outs
mov
jmp
inc
or
adc
fsubr
or
sub
xchg
jns
mov
div
in
adc
out
test
mov
push
adc
aaa
shl
int
dec
imul
sbb
add
js
jge
adc
push
xor
push
ret
ret
loopne
add
xor
xchg
sub
pop
rol
lds
sub
popa
xchg
fcom
push
add
or
loop
mov
or
mov
les
add
push
test
adc
or
cmc
mov
inc
ins
pop
pop
mov
cmp
dec
repz
mov
cs
mov
pop
das
jae
and
out
rcl
or
sbb
push
dec
xor
or
jo
pop
or
inc
lods
out
into
popa
in
(bad)
aaa
push
jne
scas
sar
xor
fnstsw
es
sub
push
pop
test
mov
or
pop
xchg
les
mov
or
mov
sub
xchg
dec
and
dec
sti
push
pop
scas
cmp
jge
sbb
adc
cmp
jge
and
daa
jecxz
(bad)
pop
daa
call
push
aas
mov
jae
outs
mov
ds
(bad)
or
and
xchg
(bad)
fisubr
or
out
push
cmc
push
push
into
stc
push
in
mov
in
mov
es
fs
aad
sbb
das
jge
push
adc
test
sbb
nop
shl
mov
dec
mov
mov
repz
icebp
add
dec
adc
and
add
or
ficom
imul
cmc
and
pop
cmp
dec
cmp
xlat
imul
stos
arpl
pushw
mov
rdmsr
repnz
das
or
adc
cmp
bswap
gs
aad
xlat
sbb
loopne
(bad)
dec
cmp
or
or
lock
jmp
ret
cmp
cmp
ins
xchg
push
mov
int
push
inc
rol
sbb
outs
fisttp
adc
mov
mov
imul
in
push
push
aam
sti
jl
jae
sbb
add
or
add
ret
add
test
sbb
mov
hlt
cmps
je
push
sbb
pushf
xor
push
cmp
and
or
adc
enter
or
mov
cmp
sub
retf
pop
adc
popa
mov
pusha
pop
inc
into
retf
and
xchg
mov
ins
loope
inc
sbb
xchg
adc
adc
jne
div
inc
dec
inc
dec
sub
push
ins
sub
and
inc
mov
bound
lock
xlat
sbb
and
and
sar
loope
push
or
mov
pop
pop
test
push
cmp
ins
sbb
ret
sbb
inc
in
cli
sub
out
xor
dec
mov
sti
mov
push
pushf
jl
adc
mov
cmps
mov
jecxz
sbb
xlat
sbb
xor
add
pop
jecxz
add
out
popf
push
test
pop
lock
sub
pop
sbb
or
or
ret
jmp
dec
fld
or
add
stos
push
pop
cli
cmp
or
stc
add
push
xchg
mov
adc
add
lahf
pop
ss
push
or
inc
inc
inc
dec
(bad)
sahf
sub
or
sbb
nop
es
add
inc
mov
cwde
lods
mov
outs
inc
jb
fcom
test
cs
push
xor
xor
(bad)
fisttp
dec
inc
dec
cmp
fs
or
cld
ror
cmp
shl
mov
sbb
shr
adc
mov
mov
imul
inc
stos
inc
lods
cmp
mov
mov
xor
xchg
cld
adc
mov
xor
data16
xor
mov
es
mov
cmp
jg
or
add
or
cmp
mov
ret
cwde
sbb
dec
xchg
leave
lahf
(bad)
cmp
pop
fs
mov
mov
xchg
push
xchg
lods
ret
mov
mov
inc
sar
test
pop
pop
cs
xor
add
sbb
sub
dec
rcr
faddp
sub
pop
clc
lock
xchg
out
or
in
or
add
retf
push
movs
cmps
ror
or
sub
enter
cwde
adc
pop
lods
pop
pusha
inc
dec
inc
push
fwait
out
(bad)
fmul
test
and
dec
push
mov
mov
jp
fst
test
mov
rol
push
cmp
test
mov
add
addr16
push
push
ss
cmps
mov
adc
and
jle
pusha
push
add
ror
pop
add
pop
dec
rol
daa
add
sub
mov
jmp
mov
or
add
add
or
retf
mov
mov
cmp
(bad)
sbb
mov
cs
dec
ror
mov
mov
lock
jo
dec
call
jbe
(bad)
adc
sbb
scas
adc
loopne
add
dec
jnp
jo
inc
cs
jle
ins
mov
push
and
jle
adc
jno
sbb
push
cs
sbb
mov
clc
mov
clc
mov
jb
sub
mov
mov
push
sub
mov
aam
mov
push
aam
enter
or
(bad)
jmp
pusha
shl
loopne
loopne
push
call
or
mov
cmp
and
xor
mov
cmp
int3
in
jmp
dec
or
dec
fadd
outs
mov
sbb
imul
sbb
push
ins
adc
lods
hlt
nop
or
fmul
push
mov
lahf
ja
inc
dec
pop
inc
or
mov
cmp
and
pop
(bad)
mov
(bad)
ficom
dec
rcl
mov
ret
retf
mov
jmp
add
dec
xchg
jge
pop
mov
nop
mov
nop
into
mov
dec
popf
xchg
and
test
adc
add
sar
popa
mov
sub
int3
iret
adc
fld
(bad)
adc
leave
sahf
test
ss
fisttp
xor
xor
cmp
call
mov
movs
int3
not
sub
or
xchg
mov
jp
sub
cmp
xlat
add
in
xchg
imul
push
loop
inc
add
ret
sub
enter
mov
and
inc
push
xor
sbb
fs
cli
add
push
cmp
je
sub
sub
jg
loopne
dec
movs
shl
shl
add
ret
add
xor
out
xchg
cld
inc
aas
mov
pusha
xor
test
mov
mov
sub
mov
add
vcvtsi2ss
mov
out
pop
pop
call
push
aaa
cmp
inc
ja
inc
pop
sub
(bad)
pop
inc
sti
push
sbb
sub
ja
mov
icebp
inc
cmp
add
mov
in
xchg
stos
add
and
pop
add
arpl
add
adc
jmp
add
inc
or
inc
adc
or
cmp
mov
adc
ins
xor
sub
add
xchg
sbb
or
rcr
imul
mov
neg
xchg
mov
daa
push
call
jl
or
lea
add
popa
xchg
cmps
sbb
in
adc
jmp
inc
test
and
adc
or
adc
mov
ror
ror
push
adc
adc
loopne
cmps
js
clc
add
cmp
push
add
fwait
loop
test
out
retf
add
sbb
or
sub
cmp
sti
xchg
pop
loopne
mov
nop
dec
pop
and
mov
add
jb
mov
pusha
push
ja
popf
xchg
arpl
test
mov
test
mov
or
jmp
in
push
push
adc
inc
add
sbb
push
fmul
fstp
les
cs
xor
jmp
push
idiv
xor
(bad)
in
imul
clc
dec
push
les
or
and
dec
cmc
sub
arpl
sbb
sbb
adc
push
mov
(bad)
(bad)
push
cmp
jmp
cwde
or
xchg
xor
xchg
sahf
aad
rol
xchg
adc
stos
inc
dec
jne
dec
sbb
fwait
xchg
les
xchg
add
lock
sub
inc
sub
popf
aam
ds
js
or
adc
arpl
cwde
fisubr
pop
ins
push
and
jae
call
bound
mov
movs
movs
fisttp
lds
push
xor
sti
neg
add
or
sbb
ret
in
adc
jb
cmc
add
and
add
add
mov
bound
shr
not
daa
or
daa
add
mov
jne
dec
dec
pop
ins
mov
ficom
or
jo
mov
dec
sbb
lds
les
jae
mov
mov
in
and
or
jns
xor
(bad)
in
lods
addr16
xchg
jns
out
dec
out
stos
adc
adc
adc
or
bound
fisub
inc
mov
sub
sbb
hlt
adc
and
pop
pop
lds
jl
sti
or
mov
call
cmp
add
add
push
aam
push
pusha
push
call
int3
inc
and
mov
dec
pushf
mov
add
or
ja
add
jae
mov
cwde
call
repz
pop
xchg
fisub
lea
cmp
push
ins
test
jo
add
je
add
add
inc
call
add
add
mov
dec
push
sbb
dec
mov
add
mov
das
stc
mov
mov
push
jo
lahf
or
bound
and
rcl
pop
and
retf
pop
xor
pop
adc
adc
ins
pop
or
loopne
mov
loop
mov
out
adc
inc
add
or
mov
call
sbb
and
xor
shr
shl
push
aam
mov
int3
jmp
push
sub
lahf
fisttp
pop
fdiv
fmul
fld
push
jmp
mov
(bad)
idiv
adc
push
dec
pushf
stos
add
push
nop
push
inc
push
jo
mov
inc
hlt
or
je
(bad)
fistp
jmp
push
inc
dec
sti
fsub
mov
and
nop
test
(bad)
add
(bad)
push
(bad)
jg
dec
inc
test
leave
push
ds
inc
xchg
pop
add
mov
ret
out
xor
add
sbb
mov
adc
sbb
les
ds
call
sub
popf
pop
shl
xchg
cmps
fidivr
and
enter
sub
loopne
dec
mov
(bad)
dec
loope
mov
outs
push
adc
dec
nop
jo
outs
dec
xor
push
ins
mul
hlt
fisttp
pop
push
dec
test
push
int3
mov
shl
pop
std
mov
pop
js
mov
mov
pusha
in
and
inc
mov
mov
xchg
pop
cmp
in
out
sbb
mov
dec
pop
adc
inc
in
mov
pop
adc
out
add
xor
dec
rol
pop
jmp
or
ins
ss
rcl
fsubr
imul
sbb
imul
dec
xor
lods
mov
in
ret
les
retf
and
and
call
and
add
in
in
pop
mov
add
clc
mov
mov
mov
daa
rcr
xchg
add
pop
mov
adc
push
sbb
jae
add
cmps
mov
and
in
xchg
push
or
sub
jae
sub
pop
mov
push
sbb
enter
sbb
jae
cmp
mov
sub
mov
imul
inc
adc
rol
test
iret
ret
mov
and
mov
outs
ret
sbb
push
jl
or
or
sbb
mov
test
sti
emms
or
mov
scas
and
or
shl
dec
or
mov
jne
sbb
imul
pop
sub
inc
pop
mov
je
out
jmp
or
mov
jmp
test
fs
cmp
aaa
or
fcmove
jne
sbb
das
loop
mov
jp
push
inc
dec
ss
push
add
in
or
rcr
ins
cmps
sahf
fnstenv
push
clc
xchg
aas
jb
dec
adc
(bad)
cmps
icebp
and
adc
call
inc
or
(bad)
mov
and
add
and
or
push
imul
add
popa
mov
rcr
sbb
mov
push
xor
add
mov
push
jo
sbb
adc
clc
cmp
inc
loopne
and
ror
push
sub
push
sar
or
popf
shr
and
pop
and
das
dec
or
clc
mov
in
inc
xor
xchg
stos
mov
inc
xlat
out
(bad)
repz
adc
push
cmps
mov
mov
nop
inc
jp
xor
ret
mov
dec
loope
jge
sbb
inc
push
or
pusha
cmc
add
call
push
mov
popf
aam
rcl
(bad)
sbb
cs
nop
mov
fisub
into
arpl
push
sub
bound
mov
dec
loope
or
mov
and
sti
lods
sbb
mov
add
mov
stos
mov
dec
and
call
pop
push
dec
test
add
xor
add
in
mov
pop
dec
in
pop
xor
cmp
jecxz
inc
sar
lods
add
adc
or
mov
xadd
fnstsw
push
sbb
outs
jge
add
in
outs
cmovp
shr
ja
(bad)
xchg
popa
clc
inc
scas
lock
fnstenv
sahf
popa
and
lods
dec
mov
jge
jae
inc
sub
cmp
sub
cwde
sti
int
fst
xlat
or
jp
xor
add
retf
fimul
mov
push
fcom
push
inc
xchg
in
jns
fst
and
or
adc
xchg
mov
scas
repz
mov
in
mov
jb
ret
int
mov
xchg
mov
nop
adc
sbb
loope
add
adc
mov
or
mov
push
dec
lock
xor
imul
shl
or
enter
movs
cmp
sbb
push
mov
fadd
cmp
lock
loope
xor
adc
out
or
and
pop
jae
or
adc
push
sbb
adc
xor
je
dec
push
and
rcl
(bad)
mov
mov
sub
add
cmp
mov
add
sub
xchg
add
or
push
or
mov
push
mov
ret
ja
dec
lahf
test
or
or
dec
xor
or
add
clc
sbb
add
inc
push
or
ror
rcr
loopne
pushf
fisttp
adc
or
cmp
or
iret
in
ret
rcl
add
cli
outs
imul
push
jge
gs
sbb
cwde
mov
enter
loope
jp
cs
xor
clc
iret
pop
mov
and
jge
cmp
out
and
mov
adc
out
int3
push
loopne
add
mov
movs
mov
mov
mov
jge
sbb
push
cmp
stos
loopne
cwde
add
jmp
or
and
rcl
hlt
sub
les
ret
cmp
xlat
jbe
jns
stos
adc
aad
test
xchg
push
sbb
sub
aas
pop
das
sbb
aaa
test
adc
mov
mov
retf
jle
sub
pop
and
dec
call
call
shr
dec
test
push
popf
mov
aaa
imul
mov
or
add
movs
jo
pop
lock
mov
es
mov
lahf
cmp
pop
imul
or
lods
rol
fstp
add
push
or
popf
ret
les
push
or
jne
adc
fcomp
and
jne
push
lods
data16
js
add
jmp
cmp
and
test
(bad)
mov
pop
mov
hlt
sbb
jo
ror
enter
xor
(bad)
dec
xchg
call
ret
lods
adc
dec
sub
inc
pop
sbb
aam
mov
dec
cld
pop
push
jp
hlt
es
call
dec
adc
push
push
in
sub
adc
push
clc
bswap
loopne
push
inc
sbb
lods
(bad)
mov
das
mov
jo
jns
add
dec
int3
ins
hlt
popa
adc
dec
sbb
mov
int
dec
or
push
js
retf
adc
push
add
cli
cmc
adc
adc
adc
add
pavgb
inc
daa
fiadd
mov
add
int3
ret
mov
jle
mov
test
xchg
add
cli
ret
loopne
dec
mov
cmp
mov
aas
and
loope
fild
inc
xchg
push
js
repz
add
mov
popf
cmp
(bad)
cmp
ja
je
das
mov
rol
dec
stos
fimul
lods
sub
loope
mov
inc
jl
fiadd
or
ins
sbb
lods
popa
adc
push
pop
rcl
sub
jl
inc
inc
js
popaw
je
jl
sbb
push
aaa
dec
and
mov
push
fnstcw
jae
inc
push
dec
push
mov
dec
xchg
pop
call
das
add
push
mov
fistp
cmp
loopne
xor
fstp
jo
dec
pop
(bad)
fwait
xchg
(bad)
and
loopne
mov
sbb
sub
jno
js
or
fmul
sub
adc
aam
cmp
cmps
add
inc
(bad)
outs
pushf
outs
popa
js
xchg
and
dec
pop
arpl
sbb
and
cdq
jnp
push
js
inc
aaa
(bad)
mov
add
sbb
test
or
jmp
cmp
mov
movs
xor
xchg
xchg
adc
sbb
inc
fs
and
sub
inc
dec
popa
pop
add
rol
stc
dec
dec
stc
daa
outs
or
push
jns
inc
inc
xchg
repnz
or
add
shr
cmp
popa
jmp
mov
popa
lock
push
cmp
or
push
movs
mov
popa
adc
cmp
mov
dec
adc
shl
or
or
rol
stc
idiv
jne
mov
leave
mov
ret
(bad)
push
add
jo
adc
mov
sbb
inc
adc
push
gs
data16
inc
sbb
imul
fisttp
dec
imul
pop
sub
sbb
pop
(bad)
popf
aad
or
adc
push
jns
or
mov
mov
sbb
add
outs
and
jne
test
retf
ss
ss
or
repz
cmp
les
ins
jbe
lods
add
push
adc
sub
mov
sbb
push
inc
stc
sub
push
or
sub
jmp
jg
ins
scas
adc
jmp
cmp
and
outs
push
add
ret
mov
(bad)
lds
pop
xor
mov
mov
and
pusha
(bad)
aam
mov
adc
adc
and
lods
test
and
rcl
pop
jno
mov
test
in
mov
sahf
adc
or
aaa
jns
fisttp
jo
add
(bad)
daa
(bad)
ror
pop
pop
leave
or
adc
adc
sub
xor
add
xor
sbb
sahf
add
jno
sbb
xor
add
mov
mov
adc
jno
inc
enter
fnstsw
ins
lods
int
mov
bound
mov
mov
push
fistp
mov
dec
or
rcr
pop
push
adc
jmp
cmps
jmp
adc
fistp
jmp
sub
sub
dec
dec
mov
(bad)
add
sub
(bad)
push
ins
push
test
pushf
push
adc
dec
mov
ins
xor
jp
xor
or
xor
in
icebp
outs
or
sbb
pop
or
adc
push
mov
jo
cmc
push
neg
je
and
inc
adc
add
repnz
xchg
xor
push
push
in
je
fist
mov
pop
call
or
dec
push
xchg
adc
mov
sbb
loopne
leave
rol
dec
adc
outs
jae
ret
push
lods
sbb
loope
mov
add
aaa
or
xchg
mov
xchg
adc
adc
adc
icebp
mov
ror
and
adc
mov
inc
hlt
cmp
add
mov
daa
popa
cmp
ins
dec
push
and
outs
push
cdq
mov
jl
daa
(bad)
enter
adc
jle
push
push
mov
pop
ret
sbb
xchg
(bad)
pop
dec
mov
sbb
dec
or
add
inc
pop
sbb
add
movs
add
shl
dec
adc
and
sbb
cmp
or
(bad)
call
cmp
and
xchg
(bad)
fldcw
mov
adc
mov
lods
fld
cvtdq2ps
movs
aas
and
pop
adc
pop
sub
ret
ffree
dec
daa
arpl
setbe
mov
les
mov
cmp
mov
fs
outs
aaa
and
call
jmp
nop
sahf
leave
jmp
ret
lea
mov
or
pop
inc
or
mov
mov
mov
inc
xchg
add
push
inc
dec
call
xor
xor
movs
test
sbb
int3
inc
adc
xlat
push
cli
cmps
leave
add
add
imul
ja
inc
ins
jl
inc
mov
ins
fidivr
scas
xor
ins
sahf
fidivr
push
xchg
movs
add
or
pop
test
out
jno
shl
ret
lods
enter
or
pop
sbb
xor
inc
and
fild
mov
(bad)
or
mov
dec
cmp
(bad)
loope
inc
jmp
add
aam
inc
mov
outs
sbb
in
mov
dec
daa
or
adc
xor
nop
pop
cmp
popa
and
loope
cmp
mov
push
dec
pop
cmps
inc
in
ds
retf
jne
das
xchg
and
(bad)
sbb
xchg
mov
hlt
jnp
lods
and
mov
xor
repnz
rcl
call
add
ret
or
popf
lea
cmps
test
jp
ins
adc
imul
cmp
pop
mov
jl
add
xlat
clc
rcr
sbb
pusha
and
adc
push
fadd
scas
dec
jmp
arpl
int
push
pop
sbb
inc
pop
push
jge
ret
fnstsw
add
push
inc
cmp
push
rcr
sub
jne
add
loop
sbb
jecxz
or
dec
test
out
adc
inc
xor
mov
loopne
dec
jne
sub
push
sbb
adc
xlat
or
push
push
sub
sub
and
dec
data16
movs
add
jmp
dec
add
popf
mov
ret
push
rep
jb
adc
adc
adc
mov
cmp
adc
push
xchg
das
push
mov
(bad)
js
sbb
jbe
jno
aam
add
adc
xor
leave
fsubr
adc
int3
fadd
loopne
adc
call
inc
inc
dec
xchg
and
dec
scas
add
push
mov
add
or
enter
cmp
add
push
xchg
in
call
add
sbb
xchg
mov
or
or
and
fistp
dec
inc
mov
fmul
mov
sbb
push
sbb
push
and
dec
mov
jns
mov
inc
fiadd
or
mov
xchg
aam
pop
cli
or
or
and
ror
cmp
pop
lock
adc
push
out
int3
cdq
aad
jnp
jo
bound
js
jmp
movs
in
mov
cmp
and
inc
mov
sub
add
add
jne
fld
jae
xchg
or
mov
sbb
and
add
pop
ss
inc
dec
sar
mov
sub
sbb
xchg
xor
out
faddp
mov
movlps
xchg
mov
pop
movs
sbb
or
and
rcr
mov
mov
mov
(bad)
loop
mov
(bad)
and
add
dec
sub
mov
sub
jg
sbb
in
inc
push
push
sub
call
retf
adc
popa
adc
push
stc
adc
dec
or
mov
mov
idiv
jmp
jg
push
add
and
sub
sbb
push
xor
push
scas
ret
push
mov
leave
inc
and
pop
jmp
mov
sub
adc
xchg
or
ret
invd
pop
fs
pop
xor
dec
jo
and
mov
adc
gs
sub
push
and
xor
add
fisubr
and
sub
xor
ds
fcom
rcr
jmp
xchg
add
in
cmp
add
sub
and
gs
cmp
push
or
push
push
push
and
or
mov
or
test
pop
dec
push
imul
and
out
(bad)
ret
and
shr
aad
leave
sub
mov
mov
jecxz
jge
xchg
sub
or
add
push
call
or
push
daa
dec
rol
push
lock
dec
dec
daa
mov
iret
(bad)
mov
mov
mov
add
aad
xor
hlt
cmp
movs
mov
and
fisttp
mov
hlt
test
rol
bound
in
or
xchg
into
mov
test
and
in
or
jmp
sti
daa
dec
or
or
pop
daa
xor
enter
add
cmp
and
mul
cmp
addr16
pop
jmp
pop
loopne
sbb
sub
inc
and
mov
test
cwde
xor
adc
adc
add
pop
inc
loope
aas
lock
pop
int3
loop
lea
retf
sub
js
pop
sbb
mov
test
sbb
fs
loop
lock
sub
loopne
in
call
mov
push
cs
int3
je
(bad)
ins
jmp
mov
jl
push
inc
push
iret
xor
in
jge
cmp
pop
outs
adc
ds
(bad)
pop
lea
xchg
out
popf
push
and
sbb
adc
ins
dec
mul
pop
xor
clc
cmp
dec
jb
test
jae
or
pop
stos
or
jmp
cmp
jne
sub
or
pop
xchg
je
ss
mov
cmp
(bad)
mov
xor
sti
test
jmp
pop
jge
and
sbb
jle
pop
loopne
push
pushf
xchg
ins
sbb
cli
loopne
mov
out
and
adc
inc
sbb
dec
ins
mov
push
push
mov
fisub
jae
retf
scas
adc
xchg
ret
bound
jp
shr
mov
xor
adc
dec
shl
dec
mov
push
dec
inc
js
mov
js
in
retf
sub
adc
jmp
movzx
cmp
xor
movs
sub
data16
pop
(bad)
jmp
mov
add
add
xchg
aam
push
mov
push
jle
repz
in
lahf
and
daa
out
xor
or
outs
and
adc
inc
retf
dec
mov
dec
pusha
xchg
inc
pushf
aas
stc
inc
sbb
or
and
rol
add
inc
inc
bound
shl
jae
sub
std
outs
scas
test
add
or
or
jmp
dec
sbb
sbb
sub
adc
dec
xor
rcr
push
inc
push
dec
push
sbb
add
mov
test
inc
or
sar
and
sbb
int3
jnp
sub
sub
push
outs
dec
or
add
aaa
add
jo
jo
and
and
dec
or
inc
pop
jb
rol
aas
addr16
fwait
and
and
dec
push
retf
cmps
retf
repz
inc
and
inc
(bad)
das
fild
jbe
and
cs
fisubr
cmp
cmp
push
xchg
adc
shl
mov
sbb
inc
adc
jmp
mov
movs
dec
clc
add
in
mov
loope
xor
mov
push
sbb
pop
jecxz
mov
jne
packuswb
inc
inc
xor
iret
xor
stos
adc
test
lea
push
cmps
push
sar
nop
sub
imul
cmc
xor
call
cmps
aam
adc
mov
cwde
xor
lahf
adc
out
pop
mov
xor
in
out
icebp
mov
pop
or
inc
xchg
gs
jle
lods
ror
cld
clc
or
mov
push
mov
clc
in
daa
inc
jge
or
sar
jns
adc
push
bound
dec
pop
ins
test
in
push
xchg
mov
cdq
sub
add
ins
dec
inc
mov
add
mov
xor
pusha
test
cld
sti
pop
push
xor
imul
pop
fcomp
xchg
pop
movs
dec
aam
and
push
jmp
les
outs
sbb
or
in
repnz
or
sbb
mov
fisttp
cmp
mov
jmp
xchg
cmpxchg
daa
jl
push
pavgw
jne
std
jmp
fs
xor
sbb
mov
call
(bad)
out
cmp
dec
cmp
mov
jp
sub
xchg
sbb
inc
xor
test
addr16
mov
lock
sbb
in
mov
fnstenv
popa
and
xor
jmp
jb
sub
sbb
cs
fdivr
add
mov
add
and
pop
adc
fidivr
shl
outs
movs
fwait
in
dec
pop
mov
mov
push
push
cmp
ror
not
das
aam
cmp
mov
fwait
movs
dec
in
cmp
jle
jecxz
aam
in
test
mov
xchg
add
add
gs
or
and
es
sub
or
cmp
fwait
inc
jp
pop
mov
push
adc
or
lods
ds
and
pop
mov
je
inc
sbb
mov
popa
or
out
or
hlt
shr
sbb
sbb
int
add
pop
add
cwde
or
cmps
out
and
vandps
rcl
push
push
adc
ins
mov
adc
sbb
inc
loope
(bad)
loopne
add
les
je
push
add
(bad)
and
in
add
push
or
adc
sbb
sub
addr16
lea
jp
out
in
xor
jmp
dec
das
inc
add
pop
movs
mov
inc
rcr
cmp
inc
mov
ffreep
mov
rol
outs
out
aas
add
es
cmp
sbb
test
sti
lods
clc
add
lods
je
add
dec
inc
push
inc
and
icebp
inc
mov
sub
dec
mov
push
adc
and
les
jno
dec
mov
sub
lds
retf
sbb
adc
or
xchg
cli
shl
inc
test
arpl
cmp
(bad)
cmp
out
jmp
adc
xchg
push
scas
or
or
fdivr
xchg
not
xor
add
rol
(bad)
pop
and
nop
inc
outs
sbb
into
pop
inc
and
lea
arpl
jo
or
fstp
push
into
push
push
inc
sub
or
dec
gs
or
and
imul
dec
mov
fsub
dec
lea
xlat
jae
xlat
js
dec
hlt
mov
fidivr
jmp
das
ins
fstp
stos
or
mov
shr
add
dec
pusha
sub
fnsave
push
mov
cmps
out
xor
mov
cmp
mov
ud2
es
or
cmp
pop
rcr
or
nop
xchg
in
sti
cmp
sar
push
idiv
pop
in
cwde
cli
xor
xchg
loop
push
in
pusha
mov
xchg
push
xchg
push
neg
clc
aaa
push
mov
clc
inc
dec
test
adc
lock
dec
popa
dec
adc
mov
pusha
inc
or
or
adc
aas
sbb
jo
jne
inc
and
cld
cmp
and
scas
loope
ins
imul
jp
daa
add
mov
jno
call
jecxz
and
lahf
icebp
or
idiv
add
xchg
sub
or
pop
(bad)
mov
add
xor
and
sub
je
(bad)
setb
sbb
add
pmullw
imul
mov
push
in
and
out
xor
adc
push
lea
or
mov
adc
adc
adc
pop
out
cmp
gs
pusha
pop
jecxz
pusha
inc
mov
and
jne
dec
dec
sbb
ficomp
jbe
or
push
stos
and
ret
clc
sbb
push
and
pop
loopne
fadd
sbb
push
cmp
push
out
and
rcr
push
add
out
mov
cwde
mov
not
mov
in
pop
add
add
add
push
fcom
and
sbb
xor
or
sub
sub
or
adc
inc
addr16
adc
cmp
lods
or
jmp
pop
ins
gs
xchg
cdq
ret
mov
adc
lea
lock
mov
test
adc
outs
arpl
pop
push
arpl
cmp
les
push
pop
cld
je
jg
outs
and
inc
mov
in
retf
xor
inc
pavgb
prefetchwt1
or
jno
loope
fbld
inc
(bad)
jle
sbb
cmp
(bad)
clc
jne
aam
enter
pop
add
pop
js
ja
adc
mov
pop
movs
push
or
daa
stos
add
fcmovbe
or
leave
mov
xchg
add
pusha
retf
sbb
dec
pop
dec
mov
add
jle
jl
shl
loopne
sub
sti
fidiv
inc
ss
es
push
scas
popa
lods
or
xchg
xlat
jmp
adc
and
or
push
out
and
xor
(bad)
pop
sbb
rcl
loope
sbb
unpckhps
sub
xor
lock
add
sbb
add
and
jo
mov
fld
pop
jo
or
push
sahf
pop
xchg
or
faddp
cmp
loope
inc
sbb
inc
inc
lock
(bad)
cmp
ins
adc
xor
mov
push
mov
mov
inc
and
inc
jmp
daa
test
add
cdq
addr16
mov
mov
retf
inc
xor
in
jne
add
xor
test
dec
dec
pop
and
adc
punpckhwd
shl
push
sbb
rcl
fimul
adc
aas
inc
cmp
and
popaw
or
mov
cld
sub
imul
mov
loopne
or
mov
sbb
jae
lock
ins
add
cmp
in
cmp
mov
mov
sub
and
scas
lods
pop
mov
push
out
or
jno
cmps
pop
and
pusha
add
scas
sub
out
jbe
fld
mov
jne
push
sbb
dec
loope
jo
mov
jecxz
lea
xor
fs
push
fldenv
sbb
jmp
dec
mov
xchg
dec
mov
lea
add
scas
jno
sub
cmp
sbb
sub
sbb
les
loop
xchg
xor
push
dec
ror
inc
fnstenv
add
jne
sbb
icebp
mov
jo
jne
or
jno
lock
xor
adc
hlt
or
inc
pop
ja
adc
xor
push
xor
ret
outs
clc
cmp
es
ins
xor
cmp
into
jg
cli
dec
loopne
or
sbb
inc
xor
add
fdiv
mov
pop
and
imul
std
mov
js
mov
mov
fmul
dec
cmp
mov
ins
pushf
sub
adc
inc
jmp
ret
and
dec
add
cmp
shr
inc
add
dec
push
adc
sub
or
push
pop
push
sub
and
sub
sub
test
and
add
or
arpl
jmp
bound
sub
add
inc
adc
inc
or
sbb
pop
push
fisub
adc
pop
lods
inc
push
jge
retf
dec
xchg
cli
fdiv
std
js
js
call
sbb
(bad)
retf
push
rcr
loopne
push
mov
dec
or
loopne
outs
leave
jne
mov
mov
jae
je
rcl
les
mov
inc
and
add
add
dec
sub
gs
pusha
mov
(bad)
sbb
add
popa
add
fs
sar
fs
mov
outs
les
pusha
dec
ss
or
call
lods
pop
mov
mov
mov
call
jg
jmp
and
adc
push
push
push
lods
pop
and
jg
cdq
test
mov
fldln2
sahf
mov
adc
shl
or
xor
mov
jno
outs
push
mov
in
or
pop
dec
fcmovne
movs
or
pop
cli
mov
ret
fsubr
push
ins
cmp
inc
lea
mov
mov
jne
jno
jp
inc
adc
add
cli
xchg
and
add
lods
or
inc
shl
xchg
cli
dec
push
or
out
adc
jle
enter
jmp
and
xor
ins
dec
cmp
pop
add
xor
mov
dec
popf
pusha
inc
aas
mov
jecxz
stos
in
pop
imul
call
test
xor
fmul
shl
cmc
ins
pop
adc
and
daa
imul
addr16
fimul
loop
inc
add
jnp
adc
or
add
sub
mov
jne
jg
adc
pushf
js
xchg
push
or
inc
or
fdivr
add
outs
sbb
mov
dec
xchg
ret
pop
aaa
inc
sub
add
xchg
or
stos
xchg
leave
rol
or
and
shl
push
xchg
jno
add
pop
rol
stc
inc
mov
add
out
adc
ins
cld
push
xchg
sahf
gs
pop
(bad)
dec
push
inc
lea
xchg
ret
pop
jnp
or
fild
pop
and
pusha
adc
push
mov
cmp
loop
dec
jp
idiv
mov
jl
adc
push
and
jecxz
data16
and
adc
and
retf
jmp
add
fld
outs
push
imul
push
sete
push
js
and
sub
popw
nop
inc
xchg
xor
xor
rcr
sbb
fldln2
pushf
pop
or
and
shl
shl
clc
jmp
adc
pop
leave
add
adc
jo
cmps
(bad)
dec
les
imul
push
sti
and
push
add
cld
pusha
ret
stos
inc
std
dec
mov
or
dec
es
xor
and
dec
std
and
test
mov
inc
and
push
sbb
outs
dec
adc
or
pop
sbb
sub
lds
out
xchg
add
and
call
add
or
jmp
adc
outs
movs
lahf
add
or
leave
out
inc
femms
out
movs
stos
in
test
mov
jge
rol
cwde
push
or
mov
xchg
or
outs
call
daa
mov
aaa
push
adc
outs
loopne
hlt
push
mov
cmps
fst
or
inc
or
push
ror
cwde
push
repz
sbb
inc
pop
push
sub
and
retf
es
sti
xchg
das
mov
adc
pop
push
ja
pop
(bad)
sub
sub
outs
add
pop
mov
push
fwait
stos
dec
fiadd
out
hlt
mov
sub
inc
nop
sub
sub
inc
dec
pop
push
pop
mov
dec
sbb
shl
sti
dec
or
fisub
pusha
cmp
cld
mov
mov
mov
or
cmp
inc
rcl
les
test
cmp
lock
inc
xor
sub
es
loope
mov
ret
mov
sbb
jmp
test
add
repnz
hlt
mov
gs
pop
add
loope
inc
fwait
dec
pop
pop
adc
mov
adc
mov
add
push
mov
shl
(bad)
mov
add
pop
sub
(bad)
xor
adc
dec
add
or
pop
push
add
or
scas
scas
cmp
lods
adc
aaa
daa
ins
in
and
jae
addr16
sub
mov
test
jne
inc
push
and
inc
dec
lea
sub
add
mov
sub
mov
test
mov
scas
or
mov
mov
(bad)
or
or
test
dec
je
mov
cld
daa
dec
je
jmp
cmp
les
mov
je
(bad)
push
adc
dec
adc
scas
scas
lods
mov
push
ret
dec
call
pop
add
jg
xchg
mov
and
inc
ins
pop
ror
jle
lods
movs
xor
or
jl
les
or
and
inc
jo
or
fmul
cmps
xchg
rol
xlat
movhps
es
xor
dec
lock
xor
xchg
cmp
mov
pop
fisubr
out
movs
aas
pop
ficom
pop
and
ins
add
xchg
icebp
sbb
ins
in
ret
scas
hlt
cmp
lods
scas
jne
lods
jne
ins
push
adc
dec
jl
mov
or
jle
mov
popa
(bad)
outs
iret
int
sbb
clc
adc
jge
cli
or
sahf
push
lock
add
ds
data16
in
add
adc
pop
dec
mov
sub
xchg
cmc
xchg
dec
inc
dec
call
cmp
sahf
push
add
push
push
pushf
xor
inc
push
or
push
mov
jno
mov
cmp
push
sbb
jl
or
fcomp
xchg
mov
jmp
movs
movs
nop
test
jmp
sbb
ss
cs
jmp
sbb
mov
xchg
js
and
ret
mov
test
dec
cmps
adc
mov
jns
or
cmp
xchg
daa
dec
mov
int
js
pusha
xchg
ins
mov
(bad)
inc
inc
sbb
jo
dec
mov
add
ud2
test
sub
(bad)
mov
loopne
rcl
pop
push
ret
arpl
mov
call
mov
sub
or
test
std
add
aam
neg
sub
inc
pushf
xor
out
aam
mov
add
(bad)
aaa
mov
sub
(bad)
dec
mov
dec
add
jp
ins
or
pushf
xor
mov
cmp
popa
sub
sahf
and
fwait
in
dec
rcr
push
push
adc
movs
aam
sbb
hlt
inc
ret
je
ret
xor
ror
xchg
int
or
hlt
inc
dec
adc
xor
ds
fwait
mov
repnz
or
mov
rol
lea
inc
push
add
push
lock
or
les
pop
and
arpl
popa
sbb
shl
inc
mov
inc
mov
mov
cmps
add
pop
call
or
pop
ret
sub
dec
pop
mov
sahf
add
adc
add
pushf
jge
ret
or
inc
fnstcw
out
jae
jns
jge
and
add
xchg
repz
sub
invd
dec
or
out
ret
dec
call
jmp
ret
mov
dec
jecxz
mov
add
dec
mov
push
push
hlt
xchg
push
or
rcl
enter
cli
je
pusha
jp
ja
push
out
addr16
ja
dec
xor
bound
movs
ja
jne
(bad)
jbe
push
dec
inc
stos
and
or
sbb
ja
or
jp
push
stc
aad
jg
rol
movs
movs
add
xchg
inc
movs
or
jge
mov
loop
cmc
add
or
rol
retf
mov
popa
adc
jl
dec
std
mov
hlt
or
ins
xchg
movs
jmp
hlt
in
adc
ss
fild
sub
shl
mov
in
jle
mov
cmps
repnz
and
pop
jmp
aad
mov
dec
sub
les
cmp
nop
sub
mov
sbb
mov
mov
jo
inc
sbb
repnz
mov
jb
and
mov
push
xor
(bad)
les
repz
adc
mov
mov
xlat
xlat
dec
inc
sbb
push
add
adc
bnd
test
push
dec
bound
mov
sub
sbb
(bad)
addr16
push
adc
inc
xchg
dec
ret
je
or
in
cdq
movs
lods
inc
les
call
cmps
call
jp
add
push
cmp
push
in
push
xor
adc
mov
inc
and
ror
xor
out
mov
dec
ins
aaa
test
mov
push
sti
scas
sbb
jbe
movs
pop
jmp
cdq
sbb
rcr
push
push
add
jge
ret
or
hlt
popa
jns
inc
dec
inc
push
dec
jae
adc
inc
cmps
sub
mov
push
fiadd
dec
ret
addr16
test
rol
loopne
add
add
mov
xor
pop
not
xchg
cli
shr
adc
xchg
adc
cwde
(bad)
dec
sub
sbb
adc
or
mov
mov
pop
or
dec
jmp
and
sahf
dec
push
nop
add
ret
call
fs
mov
call
jmp
mov
mov
(bad)
loop
push
mov
adc
push
mov
add
shr
aam
or
push
dec
push
(bad)
cdq
inc
add
enter
pop
mov
sbb
in
push
retf
out
or
jns
push
jo
ror
in
mov
les
sbb
adc
shr
inc
push
ss
adc
push
dec
mov
fwait
mov
aam
test
and
aaa
xor
dec
mov
fstp
inc
sub
out
and
mov
gs
push
inc
repnz
sub
jecxz
xchg
pop
pop
cmp
mov
loopne
movs
test
add
add
sub
aam
mov
repz
cmp
adc
in
add
mov
lock
ja
xchg
sbb
sub
in
pop
xor
push
mov
xchg
rcr
sahf
(bad)
or
cmps
and
mov
retf
stos
dec
jb
dec
lock
out
xchg
or
lods
mov
fld
fsub
add
fmul
mov
push
push
pop
mov
repnz
adc
call
xor
loope
test
sbb
cmc
sar
int3
es
mov
imul
mov
mov
test
adc
xor
or
mov
imul
ja
or
mov
mov
push
pop
mov
mov
xchg
test
movs
push
sub
sub
not
jbe
dec
inc
sbb
xor
std
clc
dec
push
mov
mov
lock
inc
push
mov
inc
mov
xchg
dec
push
je
or
mov
jo
in
add
aam
je
cmps
jmp
or
loope
mov
stos
mov
das
icebp
in
xor
loop
jbe
dec
add
outs
and
sahf
in
pusha
sbb
add
pop
add
mov
pop
push
adc
mov
ins
and
adc
adc
inc
mov
inc
aam
popf
inc
jge
pop
mov
stos
rol
pop
inc
xor
nop
icebp
pop
stos
inc
mov
or
mov
gs
rol
push
sbb
out
jo
movs
mov
or
fnsave
jns
inc
lods
mov
sbb
xchg
dec
inc
ins
(bad)
mov
mov
movs
push
xchg
xlat
jb
sub
outs
or
adc
mov
cs
dec
inc
in
dec
sbb
mov
xor
ins
mov
sbb
(bad)
pop
mov
ds
mov
cli
cmc
test
xchg
pop
pop
pusha
pop
addps
aas
add
or
movs
sbb
push
push
inc
push
dec
pop
sub
inc
(bad)
cmp
xchg
xor
mov
add
inc
mov
pop
jnp
cld
adc
or
(bad)
jle
dec
push
adc
fisub
mov
(bad)
daa
sbb
xchg
cmp
add
inc
and
pop
dec
inc
mov
je
(bad)
and
or
mov
ins
pop
add
mov
punpckhbw
rcr
shl
mov
cmp
or
mov
sbb
ror
jo
or
and
xchg
dec
shl
mov
sub
jp
jp
or
adc
push
adc
xor
ret
cld
ret
pop
push
leave
test
mov
push
test
mov
pusha
cmp
add
inc
retf
rcl
ret
pop
push
cld
push
xchg
aaa
lea
mov
mov
int3
mov
adc
inc
mov
ins
or
or
dec
sbb
adc
lea
cmp
sbb
pop
dec
xchg
cmp
fsub
sbb
inc
dec
call
push
enter
aas
add
cmp
inc
retfw
or
pop
and
outs
sbb
xor
aas
sub
mov
clc
mov
ficom
push
mov
inc
vmread
loopne
into
push
in
cmp
push
sbb
fcomp
push
jmp
push
outs
in
dec
mov
jns
jmp
sar
adc
jl
adc
aaa
adc
mov
or
adc
les
fdivr
and
fdivr
std
ins
or
outs
js
cli
mov
sahf
stos
fisttp
add
mov
mov
and
mov
jmp
test
add
fimul
add
sbb
cmovae
loop
fimul
push
add
push
push
imul
xor
dec
inc
repnz
add
add
mov
jge
push
xchg
pop
leave
xchg
mov
add
add
add
adc
mov
mov
aam
adc
adc
mov
repnz
add
gs
add
xor
pop
fcomp
add
ins
add
and
dec
loopne
int3
pop
loope
jno
add
xor
add
jge
or
xor
add
add
repnz
mov
in
sar
lds
cwde
addr16
push
mov
mov
repnz
add
jmp
add
repnz
repnz
and
or
dec
cmc
add
pushf
and
fwait
je
in
and
cmc
arpl
or
or
cmp
je
xchg
or
mov
adc
sti
jl
or
ficomp
frstor
add
pop
jo
shl
add
cwde
sbb
sub
add
or
sbb
add
jns
and
add
fmul
dec
lea
lock
adc
pushf
loopne
nop
out
dec
dec
sub
sbb
push
repz
outs
add
inc
mov
pop
sub
add
loope
aaa
add
inc
xchg
outs
xor
and
xchg
add
test
add
arpl
int
inc
dec
xor
dec
shr
nop
neg
xchg
clc
xor
dec
xor
jb
dec
xor
add
pushf
push
(bad)
or
and
dec
mov
xchg
fnsave
sbb
loopne
test
sahf
adc
xor
sbb
ss
dec
inc
adc
aaa
add
or
adc
pusha
enter
pop
rcl
mov
cmp
or
int
push
push
pop
rcl
add
shl
dec
enter
movs
or
in
jns
or
repnz
inc
cmp
or
cwde
pop
enter
cmp
stc
inc
movs
jge
out
ds
cmp
fmul
ret
es
push
xor
xor
add
pop
and
inc
test
js
inc
jbe
sub
add
sub
or
sbb
pop
sbb
dec
sbb
sbb
jno
mov
sbb
pop
inc
push
sbb
sbb
sbb
lea
sbb
sbb
sbb
push
ja
mov
fdivr
sub
push
sbb
sbb
js
(bad)
jmp
sbb
pop
jle
sbb
sbb
sbb
sbb
mov
cmc
sbb
sbb
add
push
add
aas
add
adc
xor
push
(bad)
or
mov
jge
imul
(bad)
ds
push
gs
push
or
sub
xchg
or
inc
iret
sbb
rcl
add
in
xor
int
inc
dec
push
ins
loope
dec
ret
inc
add
xchg
add
jo
inc
mov
and
adc
bound
or
xor
xor
add
mov
inc
ins
fwait
dec
loopne
add
ficomp
outs
mov
test
add
ins
cmp
sub
pop
sub
push
sub
and
sub
fadd
int3
mov
ins
test
fadd
push
enter
xchg
mov
push
out
retf
adc
imul
jnp
inc
xor
aas
dec
mov
xor
sub
or
mov
adc
shr
add
enter
outs
mov
or
repz
int
add
jo
into
mov
xor
sbb
mov
rcpps
inc
loopne
xchg
lahf
rcl
in
out
sub
fsub
push
jmp
xchg
or
and
or
(bad)
cld
ss
enter
xchg
sub
pop
xchg
sub
jl
icebp
test
mov
sub
xor
inc
or
xchg
adc
add
shr
push
jb
xchg
int3
(bad)
fucomi
rol
sub
or
sub
pop
xchg
cmp
sub
xchg
xchg
sbb
or
cmp
nop
pop
dec
mov
xchg
(bad)
and
adc
iret
cdq
jl
enter
mov
js
enter
xlat
fist
add
mov
and
push
leave
add
xchg
inc
push
scas
(bad)
mov
inc
xchg
bound
pop
pop
shl
xor
or
or
stos
inc
dec
retf
add
and
nop
add
xchg
stos
inc
lods
and
pusha
inc
cs
and
add
inc
or
jns
and
jae
enter
cld
mov
clc
rcl
add
sub
jmp
sub
inc
ficom
sub
adc
cs
xchg
sub
dec
scas
xchg
or
xor
or
mov
xor
sbb
xor
add
adc
xchg
shl
rol
cmp
cmp
cdq
cmc
(bad)
sbb
sub
or
sbb
sub
sbb
sbb
sbb
sbb
mov
jmp
sbb
stos
rcr
mov
xor
jg
(bad)
in
sbb
mov
pop
sbb
sbb
sbb
mov
aas
add
sbb
push
inc
jl
or
not
mov
int3
xor
fld
push
fidiv
cmp
mov
pop
sub
or
mov
fcom
dec
pop
mov
sub
mov
dec
add
jns
(bad)
mov
cwde
dec
sub
outs
cmp
pop
push
movs
mov
xchg
push
aam
sbb
cmp
mov
les
movs
add
popa
jae
jg
js
pushf
jl
imul
movs
je
imul
inc
ffreep
sti
dec
pop
add
dec
aaa
push
fwait
xor
movs
inc
add
pop
jb
in
pop
mov
retf
jae
or
and
lods
sub
(bad)
jae
sub
test
cmc
dec
inc
dec
in
mov
bound
pop
dec
adc
ins
push
mov
in
xor
imul
cmps
add
adc
dec
cmp
nop
add
xchg
xchg
pushf
add
pusha
dec
arpl
mov
or
iret
mov
(bad)
out
jae
ret
bound
pop
mov
jo
add
xchg
push
add
ret
pop
mov
xchg
aaa
nop
inc
adc
xchg
xor
das
in
movups
cmp
fcom
add
mov
(bad)
adc
sub
push
dec
adc
mov
dec
stos
shl
rcr
jnp
idiv
sbb
popf
push
fs
enter
inc
fisttp
call
dec
nop
ret
jns
shr
xchg
mov
rol
sub
and
or
imul
add
sahf
(bad)
das
add
rol
mov
les
inc
adc
sar
xlat
xchg
dec
xor
nop
test
sbb
inc
xor
loopne
push
push
add
and
xor
sbb
bound
sub
sub
sbb
mov
inc
loopne
xor
and
push
mov
ret
sbb
dec
popa
inc
ins
ins
dec
test
or
xor
repnz
dec
cmp
nop
nop
push
gs
add
inc
mov
adc
inc
and
jbe
cmp
stos
add
ins
outs
add
or
or
xchg
cmp
dec
jo
ins
test
and
cmp
jmp
mov
and
add
mov
pop
retf
inc
movs
mov
xor
dec
xchg
loopne
inc
shl
pop
adc
rol
dec
mov
pop
add
je
add
or
popa
or
pop
mov
lods
or
add
mov
fcomip
mov
pop
jl
nop
pop
loop
ins
(bad)
ds
pop
xor
cmp
test
enter
fild
adc
jne
push
int
jne
xor
adc
adc
cmps
sub
adc
in
pop
adc
dec
fwait
pop
rol
sbb
out
repnz
jl
jle
add
and
shl
cmp
push
dec
xchg
fs
dec
and
rol
mov
pop
sbb
fst
sbb
jmp
add
dec
sbb
mov
mov
inc
test
sub
xchg
ret
sbb
dec
mov
dec
and
sbb
or
outs
stos
in
in
and
dec
mov
mov
and
pop
push
inc
mov
add
and
dec
aam
daa
addr16
ins
lds
push
out
dec
dec
jne
(bad)
push
or
dec
mov
push
pop
(bad)
mov
mov
xor
jg
test
ret
pop
jo
mov
add
add
add
xor
mov
es
xchg
(bad)
cmp
xor
add
sub
dec
enter
add
inc
pop
xor
ss
test
sub
jb
cmp
nop
mov
and
push
jno
pop
fcomp
jb
dec
cmp
cmp
push
jb
pop
ds
and
movs
inc
push
xor
and
leave
inc
inc
pop
dec
sti
sbb
rol
aas
pushf
inc
sub
or
in
inc
out
enter
pop
xchg
xor
ds
loopne
dec
ja
mov
add
add
dec
dec
add
add
dec
dec
add
sbb
std
ja
add
add
xchg
sbb
mov
mov
fld
inc
and
dec
outs
mov
std
and
sbb
sbb
push
mov
inc
cmp
sbb
sbb
mov
jbe
mov
in
inc
sub
sbb
sbb
scas
mov
repz
sbb
arpl
sbb
cmc
pop
inc
cmp
sbb
and
sbb
mov
gs
aad
sub
test
mov
enter
push
xor
sbb
test
dec
int3
sahf
dec
inc
cmp
sahf
dec
sub
test
dec
dec
add
adc
sbb
addr16
pop
das
ins
cmp
movs
xchg
scas
jns
jmp
(bad)
lock
add
loopne
jl
dec
xor
lahf
dec
add
add
push
repnz
dec
sbb
sbb
add
add
sbb
mov
in
test
jae
add
out
push
fwait
clc
enter
cli
(bad)
cwde
cmps
lods
js
pop
ss
adc
push
aad
popa
adc
dec
dec
test
push
jnp
pop
cdq
daa
add
fild
add
add
lock
inc
cld
mov
pop
push
imul
imul
jge
rcl
mul
cmp
adc
pop
movs
ja
outs
fcomp
sbb
jg
lea
and
cmps
test
out
jle
mov
mov
sub
daa
or
shr
scas
inc
shl
fwait
pop
add
pop
or
sbb
mov
aam
dec
pop
mov
and
add
pusha
or
es
sub
add
shl
and
add
and
cdq
frstor
add
and
sbb
xor
pop
js
pop
mov
ror
pop
inc
push
or
dec
xor
dec
add
nop
dec
or
arpl
xchg
out
pop
xor
ret
iret
adc
int
add
sbb
jnp
mov
add
xor
or
fcomp
adc
sub
les
call
rcl
imul
aas
fcom
push
out
push
add
int
push
sbb
jl
mov
sub
lods
dec
scas
cmp
push
lahf
push
mov
cmp
aam
dec
ret
push
mov
push
in
mov
pop
or
test
outs
leave
(bad)
adc
add
not
add
movs
push
pushf
adc
dec
jno
pushf
add
or
add
adc
mov
mov
pushf
nop
jg
movs
aaa
push
loop
adc
adc
or
fstp
fs
cwde
cmp
test
mov
in
lods
movs
mov
(bad)
add
pushf
dec
(bad)
sbb
sbb
mov
stc
mov
mov
pop
or
push
or
(bad)
(bad)
pop
cmp
cdq
cmp
loope
add
popa
les
adc
gs
mov
movs
or
or
add
movs
push
fcmovne
mov
push
add
push
(bad)
(bad)
js
add
adc
push
mov
stos
pop
mov
ds
test
out
loop
scas
call
dec
push
jp
int
clc
scas
pusha
mov
shr
cmp
or
cmp
push
xchg
sub
or
jns
lods
ins
and
cmp
dec
sub
test
add
ins
aas
pop
xchg
jno
add
test
pop
sbb
std
adc
pop
ins
stc
or
and
jb
enter
(bad)
pop
aaa
enter
pop
sub
add
push
jb
rcr
pop
jl
test
test
or
inc
cmps
psubusw
push
xchg
pop
pop
repnz
push
cmc
out
inc
mov
cmc
add
adc
lock
jmp
sub
inc
repnz
or
test
daa
sbb
cld
test
movs
mov
call
xchg
mov
dec
add
pusha
pushf
or
xlat
xchg
mov
or
dec
cs
jl
lods
jmp
jge
mov
xlat
nop
adc
mov
jl
mov
adc
add
rcr
or
scas
adc
lahf
pop
and
push
add
jmp
shl
pop
icebp
dec
mov
fsubr
hlt
call
nop
mov
js
adc
ror
nop
(bad)
sbb
pop
push
dec
ret
cmp
and
cmp
loope
add
shl
dec
adc
push
adc
les
push
adc
test
push
or
add
and
sbb
push
pop
add
inc
dec
pop
sbb
xchg
and
sbb
jb
pop
sbb
nop
pop
adc
sbb
leave
push
add
pop
xchg
mov
or
add
add
or
add
add
enter
jmp
pop
xchg
pop
and
mov
add
sbb
daa
mov
mov
dec
cs
scas
sub
add
or
sub
push
add
jns
add
add
fistp
and
add
add
xor
pop
inc
nop
xor
mov
scas
mov
dec
xor
sub
test
test
or
popa
leave
cmp
cmp
pop
aam
inc
mov
xor
test
leave
push
cmp
cs
and
add
add
push
inc
cmps
xchg
inc
inc
dec
cdq
push
jle
cmp
add
pop
push
or
sbb
sbb
jno
mov
in
minps
sbb
sbb
pop
test
sbb
pop
pop
cmp
sbb
sbb
test
sbb
mov
mov
lock
sbb
sbb
popa
and
jmp
sbb
xchg
mov
pop
jge
sbb
sbb
bound
sbb
js
add
add
(bad)
pop
gs
or
dec
rcl
and
int
xchg
add
rol
sbb
mov
and
in
add
cmp
fsubr
scas
lock
pop
addr16
pop
push
cmp
les
in
mov
pop
mov
in
cmp
mov
mov
ror
push
dec
ins
xchg
adc
fistp
call
xchg
test
imul
jns
ret
push
dec
inc
popa
imul
nop
sar
retf
das
xchg
xor
retf
jne
ins
sti
in
jecxz
lods
cwde
pop
pushf
mov
mov
add
pop
push
jecxz
sbb
or
or
aam
jmp
test
sbb
jp
mov
or
cmp
push
pop
push
mov
fs
adc
jo
fisubr
and
pop
shl
add
sbb
test
jle
or
cmp
inc
dec
xlat
adc
adc
and
pop
js
jb
sbb
or
leave
test
(bad)
jge
xchg
imul
call
mov
pop
popf
add
cmp
jae
sbb
mov
xchg
or
push
add
push
pop
fistp
and
and
and
fstp
test
ds
lea
ja
and
repnz
sub
jmp
sti
and
es
sub
inc
inc
sub
pop
les
mov
xor
inc
scas
xchg
stos
in
sub
push
leave
push
xor
xchg
or
xor
and
push
xor
add
mov
xor
adc
jb
sbb
dec
mov
add
inc
or
cmp
xchg
xchg
fldenv
pop
or
xchg
xchg
mov
xchg
xchg
xchg
xchg
xor
retf
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
inc
imul
sub
xchg
xchg
xchg
je
mov
retf
add
sub
xchg
xchg
xchg
xchg
xchg
mov
xchg
retf
and
imul
fndisi(8087
mov
adc
jb
jno
(bad)
sbb
mov
push
adc
dec
mov
cmovo
and
add
dec
and
inc
scas
ds
dec
cdq
les
clc
outs
outs
imul
add
(bad)
or
ds
test
and
punpckhbw
int3
push
aam
mov
loop
out
cdq
cs
jno
dec
add
cwde
das
xchg
inc
add
inc
jb
jb
(bad)
push
xor
retf
and
sbb
pop
js
mov
dec
pop
dec
inc
inc
jo
cmp
or
aam
dec
test
and
pusha
jae
inc
lods
xchg
es
push
push
sahf
cmps
push
push
(bad)
cmp
xor
mov
xchg
scas
idiv
loopne
dec
mov
jl
pusha
mov
jge
int3
pop
push
dec
and
test
vcmpordps
enter
hlt
in
(bad)
cdq
add
fisubr
sub
push
ins
imul
mov
push
jo
outs
pusha
or
mov
jb
xchg
dec
xor
loope
inc
cs
inc
fidiv
repnz
mov
add
jne
mov
mov
int3
test
rcr
sub
pop
add
add
dec
pop
fsubr
xchg
sbb
adc
push
fnstcw
xchg
xor
jo
imul
into
push
cwde
ror
out
mov
call
out
jns
mov
adc
test
(bad)
popf
mov
int
xchg
dec
inc
fsubr
mov
push
add
cmc
pop
fadd
cmp
retf
int3
out
int
jnp
add
pop
hlt
add
or
cld
js
and
mov
mov
pop
repnz
ss
(bad)
sub
dec
enter
sbb
push
rcl
mov
push
push
sbb
sub
jge
aam
jbe
mov
push
lahf
pop
popf
or
inc
and
pop
xor
ja
push
pop
inc
dec
iret
repz
daa
pop
xlat
ds
dec
leave
cmps
call
jae
shr
call
shr
sub
imul
test
sub
mov
leave
loope
ins
or
add
add
xchg
mov
adc
mov
mov
in
ds
stc
mov
in
fistp
fidiv
adc
push
repnz
dec
xor
pop
xchg
in
mov
sar
ss
and
jnp
adc
pushf
jecxz
sub
test
mov
sahf
adc
loop
push
adc
mov
les
sbb
not
scas
mov
mov
mov
push
and
and
adc
or
adc
mov
xchg
adc
sbb
test
adc
xchg
cs
add
pop
xchg
pop
std
in
je
and
outs
xor
(bad)
fiadd
cld
ds
add
lar
(bad)
mov
xor
sbb
jg
or
mov
(bad)
xor
shl
adc
mov
jae
or
shr
or
or
xchg
das
sbb
fmul
add
sbb
(bad)
dec
fmul
dec
cld
out
and
inc
mov
loopne
jmp
rcl
adc
mov
push
sbb
cdq
imul
sub
daa
lods
pop
movs
mov
add
jmp
push
push
push
test
and
iret
rol
mov
jecxz
xlat
mov
and
push
pushf
adc
dec
test
add
sbb
mov
sub
pusha
in
popf
das
ret
cmp
fdivr
inc
dec
cmc
jbe
pusha
ds
sar
add
shr
xor
push
cmp
jge
or
ins
lds
cmp
cmp
jl
adc
in
adc
adc
push
inc
mov
mov
inc
add
aas
push
mov
jnp
in
xlat
jle
test
or
inc
or
mov
sub
fcomp
cmp
mov
push
cmc
push
in
cs
das
jecxz
imul
(bad)
das
push
or
sub
add
fdivr
mov
mov
lea
jne
xchg
sub
loopne
push
in
and
add
arpl
loopne
test
cli
ins
add
call
cmp
cli
adc
mov
inc
enter
sti
mov
sub
or
popf
push
imul
loopne
shl
jmp
and
sub
(bad)
pusha
and
add
ins
repnz
xchg
or
jno
cwde
or
mov
add
ja
mov
or
mov
adc
sub
or
push
sub
mov
or
or
lods
mov
jg
dec
or
pop
jbe
imul
shr
mov
add
fs
ins
mov
lods
sbb
and
daa
inc
adc
xchg
cmc
mov
outs
test
adc
mov
push
shl
jmp
popf
mov
sub
cpuid
or
or
ret
and
push
mov
add
xchg
aad
dec
lock
sbb
mov
inc
lds
dec
adc
xor
sub
add
pop
sbb
adc
inc
push
rol
sub
por
dec
xlat
pop
mov
repz
pop
sbb
push
push
hlt
pop
sbb
cld
push
and
movs
sub
icebp
cmp
sbb
scas
call
das
jne
push
sti
push
sbb
in
sbb
adc
xchg
iret
in
addr16
inc
(bad)
das
push
inc
pop
jb
cmp
loop
or
je
outs
and
popa
and
mov
je
sbb
shl
fwait
sbb
jb
aas
lods
or
popf
push
test
stos
xor
or
loopne
mov
das
add
dec
xor
mov
sbb
mov
ret
and
mov
add
or
push
or
or
adc
mov
jge
mov
mov
retf
mov
inc
loope
data16
ins
lahf
xor
(bad)
push
xor
sbb
sub
movs
add
inc
es
ds
xchg
scas
mov
adc
js
setg
pop
inc
rcl
es
push
scas
inc
or
mov
ins
call
(bad)
and
cli
add
push
adc
add
mov
pop
xchg
fwait
ins
jle
sbb
and
xor
test
aaa
into
mov
es
test
inc
sahf
jae
bound
pop
std
stos
stos
popa
aam
sub
xchg
mov
inc
and
sub
adc
cdq
or
dec
lods
fbld
add
add
xchg
mov
aaa
push
retf
push
or
jge
cmps
xchg
je
sbb
imul
jbe
jno
test
fstp
or
add
ret
clc
xchg
mov
rcl
adc
ficomp
dec
clc
xlat
je
and
in
or
retf
adc
(bad)
aam
jbe
test
loopne
add
push
push
ret
sbb
or
call
sbb
int
dec
or
pop
jne
or
inc
jb
push
jbe
iret
mov
jmp
pop
or
jmp
mov
mov
push
add
nop
inc
sbb
pushf
fdivr
retf
sbb
xchg
imul
mov
inc
iret
xchg
or
or
cmc
pop
sub
and
add
fild
movs
ds
shl
xchg
sbb
dec
aad
fucomp
pop
movs
add
ja
ss
xor
push
int
fisubr
(bad)
xor
or
sbb
inc
sbb
enter
shld
pushf
fldcw
pop
pop
dec
mov
dec
fcomp
pop
idiv
cmp
rcl
xchg
retf
fdiv
imul
xchg
pop
test
mov
add
rcl
clc
shufps
jbe
cmp
push
inc
xchg
(bad)
hlt
dec
sub
movs
xor
inc
pop
sbb
cmps
add
add
enter
loopne
das
into
mov
shr
movs
cmp
outs
xchg
push
test
fnclex
nop
xchg
sbb
or
test
push
(bad)
mov
daa
int3
fdivr
xchg
int
jmp
(bad)
dec
lea
pop
inc
ror
push
cmps
adc
mov
inc
out
fcom
das
ins
test
movs
cdq
ins
mov
ins
mov
jmp
mov
nop
xchg
or
jns
mov
mov
dec
inc
inc
dec
mov
mov
or
adc
hlt
rcl
enter
sbb
rol
daa
(bad)
icebp
adc
mov
jp
and
add
add
pop
sub
lods
adc
jg
mov
jns
add
aam
das
lea
outs
cmp
or
sbb
jo
cmps
push
or
dec
cmp
movs
adc
mov
dec
cmp
and
test
mov
sub
push
push
movs
sub
scas
shl
stc
sub
(bad)
pop
xchg
adc
mov
iret
xchg
dec
out
adc
scas
or
mov
dec
pop
and
ret
test
cmp
ror
pusha
ret
push
cmp
scas
cwde
mov
mov
popa
aad
xchg
mov
jmp
fisub
lea
mov
and
xchg
mov
daa
xchg
cmp
push
inc
sbb
mov
cmp
cwde
jl
clc
mov
into
sahf
mov
xchg
mov
dec
pusha
xor
fild
call
das
ret
adc
sub
add
dec
inc
out
jne
dec
mov
cmps
xchg
cmp
and
mov
add
dec
inc
and
rol
addr16
jnp
mov
mov
sbb
mov
sub
xor
in
sbb
loope
mov
adc
jmp
ins
pop
mov
arpl
test
cmp
outs
pop
sbb
adc
push
adc
(bad)
sti
dec
mov
(bad)
in
dec
mov
adc
sub
xor
aaa
clc
xor
jmp
js
mov
inc
hlt
rcl
jge
das
dec
cmp
daa
iret
jmp
cmp
rcr
lea
sbb
jecxz
sbb
lock
aam
push
std
cmp
push
out
push
sub
rol
push
rcl
push
ja
mov
lods
movs
xchg
mov
test
(bad)
out
pop
or
cmps
adc
add
aam
mov
lea
push
fidiv
xor
push
vprotw
jmp
fsub
sbb
xchg
(bad)
in
add
pop
and
aaa
add
push
enter
add
sub
nop
add
mov
shl
addr16
or
adc
pop
adc
cmp
push
lock
loop
push
and
and
dec
mov
mov
clc
jl
dec
adc
dec
cmp
mov
into
out
sub
sbb
or
scas
lods
mov
loope
loopne
sub
cli
or
mov
xchg
xor
nop
dec
cld
cld
lods
xor
sahf
sub
js
inc
mov
xchg
xor
xor
shl
rcr
push
pop
adc
jo
std
push
add
ds
or
xor
adc
je
add
jp
loop
(bad)
and
cdq
movs
add
hlt
hlt
push
leave
jecxz
sub
imul
outs
pop
dec
push
rcl
xchg
jne
ret
pop
leave
ja
and
jb
cmp
rol
and
adc
mov
adc
pushf
pop
pop
popa
pusha
add
add
or
fisubr
and
sub
mov
into
ret
leave
imul
and
jne
lahf
jmp
aaa
jb
in
lock
test
jbe
add
add
cmp
call
xchg
outs
xor
icebp
iret
xchg
call
add
lock
pop
(bad)
mov
sub
cs
(bad)
pinsrw
xor
cmp
adc
pop
push
sub
leave
xlat
dec
and
fisttp
test
test
xchg
jne
push
xor
pop
pop
cs
push
call
cmp
add
xchg
(bad)
iret
cmp
pop
and
lods
out
sbb
mov
xchg
xchg
lds
sub
dec
inc
retf
or
pop
adc
push
mov
mov
adc
push
dec
or
add
sub
sub
and
repnz
dec
nop
xchg
dec
jae
dec
or
inc
fdiv
daa
xor
sbb
cli
xchg
xchg
(bad)
xchg
or
xchg
(bad)
cmp
fild
dec
test
je
or
xchg
dec
sbb
shr
or
pop
push
jge
mov
repz
mov
imul
fisttp
cs
cmpps
mov
dec
cmp
aas
inc
pop
mov
inc
mov
movs
add
jl
mov
xchg
ins
ja
cld
xchg
cli
push
add
retf
ret
dec
rcr
inc
jp
inc
or
or
adc
push
ja
outs
call
test
inc
xchg
xchg
jo
xlat
add
pushaw
and
pop
and
mov
aad
and
js
dec
test
popa
xchg
and
push
fs
pop
daa
xchg
inc
or
out
jge
xor
push
dec
je
test
add
inc
aaa
outs
cld
mov
imul
aam
dec
fcom
xor
cmp
cmps
inc
push
mov
adc
fist
mov
cwde
(bad)
jbe
mov
rcl
sbb
lods
or
adc
mov
imul
je
sub
sahf
add
xor
lods
sub
ja
sbb
xchg
imul
lods
outs
lods
xchg
mov
adc
adc
(bad)
mov
pop
movs
and
mov
(bad)
inc
rol
push
jno
lods
shl
adc
or
mov
sbb
pop
add
ins
es
xor
push
push
repnz
sbb
addr16
fs
pop
inc
pop
mov
push
iret
test
sub
(bad)
and
inc
push
and
add
mov
dec
or
scas
sub
inc
sub
(bad)
fdiv
xor
sbb
add
and
jns
mov
push
jmp
push
pusha
pusha
movups
imul
outs
lahf
call
cmp
jle
loopne
aaa
add
add
test
inc
ret
add
pop
cmp
sti
add
ret
mov
add
mov
push
mov
cmc
les
sub
jmp
arpl
aas
hlt
or
jo
enter
xchg
xor
popa
add
mov
out
inc
xchg
test
adc
jecxz
jle
(bad)
loope
mov
rcl
push
std
dec
or
xchg
xchg
mov
mov
loopne
inc
loopne
jmp
dec
les
xchg
dec
push
inc
pop
mov
push
jge
pop
jl
pop
or
dec
xchg
fnstenv
jno
and
movs
fbstp
hlt
add
xlat
or
in
xchg
jp
push
pop
mov
mov
leave
add
mov
pop
or
not
rcl
add
dec
outs
sbb
pop
adc
and
xchg
pop
fldenv
cs
and
cmp
mov
or
and
sbb
adc
mul
sub
cmp
or
inc
jge
or
xacquire
add
sub
pop
inc
jns
and
pop
xor
adc
or
jl
je
push
ret
xchg
add
sbb
add
and
or
ret
ins
sbb
xlat
and
loopne
mov
jns
jo
mov
sar
dec
scas
add
test
add
add
jns
push
inc
add
adc
add
les
add
pop
xchg
xor
xchg
out
ins
or
or
stc
inc
add
shl
mov
sub
inc
xor
scas
or
mov
jle
imul
cmp
add
sbb
or
push
sub
popa
test
and
lahf
fcom
mov
lods
ret
retf
xlat
xchg
or
sub
ret
outs
add
leave
mov
aas
lds
add
pop
add
(bad)
in
adc
lahf
ror
push
cmp
or
sub
or
adc
mov
test
addr16
clc
mov
pop
jae
push
ss
xchg
mov
xchg
xchg
mov
push
jno
sar
bndldx
pop
(bad)
mov
xor
out
sub
rcl
push
mov
jmp
inc
mov
mov
mov
iret
daa
add
inc
inc
push
daa
adc
movs
xchg
jmp
adc
outs
sbb
xchg
push
or
xor
imul
movs
cld
sbb
aam
inc
adc
out
or
mov
imul
push
inc
pop
jbe
add
pop
or
outs
leave
enter
dec
mov
cmps
ja
dec
dec
and
push
repnz
adc
or
xor
or
xchg
or
mov
bound
in
mov
dec
je
add
jmp
cmp
je
mov
cmp
jae
jg
sbb
and
add
push
lea
rol
je
or
ja
pop
adc
pusha
add
ror
jb
add
or
sub
and
or
lea
mov
rol
mov
push
xchg
rcr
mov
or
hlt
mov
lahf
add
mov
test
sbb
scas
dec
pop
or
mov
mov
push
cmp
outs
cmc
adc
pushf
movs
enter
adc
es
movs
fwait
mov
mov
enter
cmc
jne
sbb
(bad)
lahf
inc
loop
sbb
cmps
mov
sub
into
nop
rcl
stos
daa
mov
(bad)
dec
inc
xor
pusha
push
cmp
mov
pusha
ret
mov
push
stos
and
push
lods
add
adc
add
mov
dec
bswap
aam
mov
or
ret
test
(bad)
and
inc
dec
mov
sbb
jb
cmp
push
dec
loopne
and
adc
cmp
lods
and
and
and
popf
test
sub
jmp
ss
mov
push
aaa
shl
and
dec
dec
jp
hlt
add
add
xchg
cmc
je
jp
or
test
arpl
pop
pop
push
test
mov
bound
call
jbe
xchg
xchg
repnz
in
ror
adc
enter
ins
and
and
mov
adc
aaa
lods
pop
das
lea
xor
xchg
xor
xor
mov
ins
repz
sbb
pop
and
xchg
retf
enter
mov
or
cmp
xchg
pop
arpl
and
pusha
(bad)
dec
mov
rcl
rol
out
pop
xor
nop
arpl
mov
popf
and
addr16
and
mov
xchg
push
and
inc
fist
xchg
scas
je
mov
push
mov
jle
mov
jo
scas
add
adc
adc
addr16
cmp
out
cmp
xor
mov
and
add
test
sub
sub
rcl
or
pop
or
pop
rcl
cwde
cwde
push
push
and
outs
in
sub
ins
mov
jne
outs
mov
retf
ret
add
ret
cmp
pop
leave
xchg
mov
inc
inc
or
mov
retf
sahf
inc
jne
pop
and
nop
mov
pop
stos
inc
mov
push
fdiv
inc
je
popf
jg
or
sub
push
sti
aam
adc
aas
push
inc
cmps
adc
inc
pushf
adc
inc
sbb
sbb
test
and
js
mov
je
sbb
loope
cmp
fcomip
les
add
add
test
fs
outs
mov
je
test
enter
xor
sub
pop
movs
arpl
or
adc
stc
push
leave
mov
adc
addr16
shl
or
cmp
aaa
dec
mov
test
mov
adc
fwait
(bad)
and
test
inc
dec
dec
mov
dec
add
arpl
or
mov
test
sub
adc
xlat
jmp
iret
lahf
stos
das
mov
and
and
pop
or
xor
out
stos
mov
scas
xchg
cmp
stos
mov
pop
fistp
cmp
ins
push
push
cmp
outs
scas
mov
shl
fist
xor
adc
or
(bad)
mov
ftst
aad
cmp
repnz
les
pop
or
sub
fucomip
test
adc
jae
mov
inc
cmp
or
cld
dec
push
push
cmp
pop
ficom
push
data16
add
or
mov
mov
cmp
adc
verr
sub
inc
movs
or
adc
mov
test
xchg
gs
mov
push
cwde
sub
call
aad
sub
leave
leave
fs
loope
mov
ror
push
inc
cwde
inc
loopne
out
xchg
lds
imul
icebp
sbb
push
aaa
sbb
and
adc
nop
jg
sub
and
add
(bad)
cld
adc
movs
xor
cmp
push
sub
adc
lods
adc
popf
out
pop
dec
fcomip
or
icebp
push
jecxz
fist
ss
or
adc
cmc
adc
sbb
sbb
call
adc
enter
and
sbb
cmp
push
xor
xchg
add
jb
repnz
inc
add
scas
dec
cmp
push
xchg
movs
mov
daa
inc
dec
cmp
or
imul
test
fcomip
jle
dec
pop
ret
push
js
das
or
sbb
gs
or
pusha
imul
es
sar
xchg
lods
or
pop
sub
jg
fs
sar
repnz
add
mov
lds
or
nop
push
pusha
xor
jne
into
retf
dec
in
enter
pop
lea
or
adc
movs
or
push
outs
xchg
jo
jb
mov
xor
call
stos
and
push
mov
ror
sub
mov
mov
xlat
addr16
ret
jl
jo
lods
ins
mov
add
mov
adc
or
adc
mov
jge
adc
add
js
or
add
push
cmp
iret
das
mov
or
call
fs
icebp
das
loopne
add
mov
jle
sbb
jbe
test
outs
popf
icebp
and
pushf
sub
out
push
cmc
cld
mov
dec
adc
add
rol
or
sub
sbb
mov
xor
sub
fs
cmps
add
xchg
mov
aam
lahf
xor
jmp
inc
push
and
dec
sbb
daa
stos
(bad)
pusha
push
test
and
data16
sbb
push
pop
dec
or
mov
jge
dec
push
enter
pushf
movs
inc
adc
imul
clc
xchg
(bad)
cmp
jge
(bad)
fwait
push
les
add
mov
mov
pop
cmp
and
mov
loop
sbb
dec
xchg
fidiv
add
int3
add
jbe
or
int
pushf
pop
adc
aam
jb
add
inc
and
jle
jmp
leave
adc
and
bound
leave
(bad)
push
or
dec
cmp
mov
or
and
fstp
and
push
dec
jg
mov
push
xchg
in
xchg
xchg
dec
adc
add
mov
pop
inc
loopne
push
jg
retf
pop
or
inc
pusha
or
add
add
scas
ret
in
pushf
cwde
gs
mov
inc
xchg
movs
aas
mov
mov
xor
les
scas
call
sbb
lahf
out
sub
movzx
hlt
fidiv
imul
je
mov
out
pop
add
jmp
dec
xchg
and
je
xchg
inc
dec
out
push
or
cmp
push
out
js
sub
(bad)
mov
push
pusha
jl
mov
push
push
daa
jns
jmp
lock
push
jle
inc
mov
std
in
cmps
sbb
cmps
movs
je
fcom
cmc
mov
or
es
add
inc
jg
or
mov
pop
push
addr16
or
(bad)
sub
pop
and
inc
test
push
xlat
rol
gs
leave
mov
and
div
mov
push
dec
add
dec
or
das
loopne
out
cmp
rcl
es
jl
pop
jg
inc
sub
pop
jns
and
adc
jbe
js
push
into
inc
mov
rol
std
enter
mov
jmp
and
xchg
and
shl
or
cmp
inc
hlt
pop
pop
and
add
pop
dec
jecxz
sbb
push
mov
or
pop
sar
hlt
dec
pop
shl
movs
stc
push
add
dec
xchg
movs
xor
jl
pusha
xchg
in
popf
nop
inc
or
mov
mov
xchg
iret
jnp
ror
aad
mov
popa
or
idiv
xchg
xor
push
push
fs
sub
sbb
sub
push
push
retf
shl
or
push
lahf
pop
movs
mov
inc
pop
mov
sbb
ss
xchg
pop
push
push
lods
arpl
clc
push
jmp
lock
cmp
popa
cmp
les
add
push
add
inc
out
popa
(bad)
rcl
push
pop
sub
sbb
fidivr
inc
adc
mov
in
test
out
xchg
push
dec
loopne
mov
xor
xor
sub
sub
aaa
fwait
mov
sbb
mov
out
retf
dec
push
cmp
ret
or
mov
inc
mov
jo
out
cs
cmp
jnp
mov
add
cmp
xor
stos
push
push
pop
in
add
sub
xor
das
or
adc
jo
or
adc
push
xor
pop
cmp
inc
enter
inc
test
and
adc
shl
mov
femms
dec
xchg
sub
nop
and
arpl
repz
cmc
push
inc
nop
inc
aas
push
xor
xchg
sub
jae
ins
add
mov
cmp
loopne
adc
push
out
push
xor
mov
jne
call
pop
xchg
test
lods
addr16
test
or
movs
sbb
jp
push
cmp
fimul
sar
jl
add
inc
test
cwde
cli
fisttp
frstor
test
mov
xchg
add
cmp
adc
sbb
cdq
or
sub
push
pop
aam
(bad)
in
leave
cmp
sbb
rcl
cmp
or
out
sbb
jl
lds
mov
xor
and
jnp
and
int
mov
jp
ins
mov
jo
and
daa
dec
jl
jae
push
dec
xchg
and
and
sub
in
sbb
mov
cwde
je
adc
cmp
lock
cmp
dec
jecxz
mov
loopne
xchg
inc
lock
sub
sbb
sti
and
ror
test
ss
sbb
ret
mov
dec
(bad)
cmp
cmp
into
inc
push
adc
mov
ins
xor
xor
and
cmp
jle
das
push
cmp
sbb
inc
and
xor
add
add
mov
ficom
popa
in
xor
inc
or
xchg
out
lahf
add
and
xchg
out
inc
jb
mov
in
add
push
fs
test
xor
xchg
mov
or
call
push
and
dec
cmps
(bad)
adc
ss
repnz
cs
cmp
repnz
xor
push
fidivr
inc
xor
aam
dec
dec
adc
sbb
xlat
mov
shl
mov
mov
dec
shr
jae
mov
nop
or
add
fcmovnu
adc
int3
or
dec
mov
cmp
(bad)
fild
in
jns
int3
or
xor
add
je
pop
mov
push
pop
das
mov
adc
xor
pop
push
push
(bad)
adc
pop
xchg
test
adc
xchg
js
or
xchg
xor
push
add
jl
mov
and
inc
cwde
outs
sbb
cli
and
add
jbe
test
sti
sbb
push
cmp
shl
test
mov
cmps
mov
je
sar
rep
enter
mov
pop
pop
and
ss
test
test
pop
mov
and
xchg
add
(bad)
dec
mov
mov
pop
inc
(bad)
push
mov
push
ins
test
xor
push
fs
shl
dec
dec
xchg
fmul
and
in
call
dec
call
mov
pusha
push
out
out
mov
xchg
ret
rcr
inc
sbb
out
push
pop
fnstenv
push
sub
mul
or
in
sbb
push
sub
jmp
inc
add
and
daa
mov
and
enter
or
test
mov
arpl
pop
es
sub
mov
(bad)
cdq
inc
push
add
xchg
enter
nop
retf
xchg
mov
mov
mov
adc
push
out
hlt
and
mov
cwde
cwde
hlt
pop
and
ffree
loope
push
sbb
pop
push
pop
dec
xor
in
add
add
xchg
cmp
cmp
jge
and
xor
push
fdiv
repnz
test
ret
add
mov
and
fchs
inc
pop
or
and
cli
das
fwait
pop
pop
fisub
and
xchg
lock
sahf
imul
jmp
and
sub
sub
mov
inc
or
mov
dec
inc
imul
xchg
hlt
imul
adc
add
in
lods
push
idiv
fidivr
push
or
push
movsx
push
push
mov
in
icebp
dec
sub
jmp
and
fcomp
or
xchg
push
sbb
adc
test
sub
jecxz
jb
sbb
in
or
repz
and
xchg
sbb
or
leave
xor
pop
pop
ror
and
in
adc
loopne
xor
sbb
das
sbb
push
or
mov
mov
out
jnp
aaa
div
daa
cmp
out
sbb
add
sbb
cmp
sub
sub
test
and
mov
enter
sti
cs
sub
dec
cld
jne
dec
js
xchg
das
pop
das
push
mov
jb
or
push
leave
sub
or
push
cwde
inc
cmp
xor
jb
rdtsc
push
aas
sti
sub
out
ins
push
push
rcl
dec
test
push
xchg
push
xor
paddsb
push
mov
adc
pop
icebp
adc
jne
mov
and
pop
retf
xor
iret
jne
sbb
sbb
cmp
mov
xor
nop
das
push
das
pop
pop
loopne
mov
out
pop
das
push
xor
cdq
inc
cmps
iret
xor
cs
cs
mov
mov
cs
inc
inc
retf
inc
and
retf
sub
add
mov
push
push
pop
in
xchg
mov
xor
xor
sub
xor
xor
scas
nop
dec
cs
pusha
or
jb
xor
xor
popa
push
push
leave
or
or
or
mov
adc
push
dec
shl
and
push
add
je
retf
xchg
add
sub
jne
(bad)
fst
dec
jne
jmp
mov
add
mov
inc
push
cmp
or
cmps
and
clc
adc
nop
cmps
ror
mov
pop
fdiv
das
sbb
jo
adc
inc
pushf
rcl
pop
sbb
daa
lock
push
push
adc
shr
xchg
mov
test
inc
add
in
fld
push
out
adc
push
(bad)
aam
inc
lock
cmp
or
inc
dec
pop
xor
inc
inc
xor
or
rcr
inc
cs
sbb
add
(bad)
sbb
lea
lea
xchg
jbe
pop
push
imul
call
push
test
pop
push
dec
push
dec
add
nop
sbb
jl
movs
mov
mov
rol
and
jle
cmp
or
inc
add
xchg
add
jae
or
sbb
fild
or
es
push
pusha
sbb
mov
or
push
scas
stos
imul
push
dec
loopne
or
adc
mov
out
push
or
mov
hlt
je
mov
or
and
shl
scas
sbb
or
iret
pop
pop
int3
sbb
jl
add
pushf
rcr
dec
push
add
sub
movs
mov
in
pushf
inc
popf
xor
fild
arpl
and
in
xor
dec
push
push
int
adc
icebp
cmp
aas
add
and
and
xchg
jp
mov
pop
rol
sub
add
ficomp
jge
ja
fld
push
sbb
jnp
inc
movs
inc
bound
repz
ror
arpl
ret
por
xchg
pop
and
and
retf
push
jnp
fidiv
and
and
sub
sbb
in
add
jp
sub
adc
add
and
mov
js
add
mov
push
and
mov
inc
mov
and
add
jmp
gs
and
inc
loopne
das
pushf
mov
popa
aaa
xchg
inc
push
(bad)
loopne
imul
in
js
cmp
cs
aad
js
inc
inc
ret
lea
push
fsub
fistp
inc
pusha
imul
pop
shl
test
or
xor
add
jae
add
adc
mov
movs
fsub
and
std
or
sub
(bad)
cmp
and
rcl
movs
and
leave
inc
xor
sub
mov
and
inc
leave
sub
sbb
or
fmul
int
loope
cdq
loopne
or
ins
out
cmp
(bad)
js
pushf
push
test
aaa
cmps
mov
dec
or
push
aad
adc
sub
mov
(bad)
movs
(bad)
std
mov
and
fnsave
adc
pop
adc
pop
pop
mov
popa
sub
dec
push
arpl
jno
shl
popa
(bad)
iret
dec
(bad)
retf
mov
add
dec
sub
sti
inc
(bad)
xchg
pop
outs
scas
in
adc
xchg
sub
pop
cmp
lds
push
mov
cmp
adc
push
sbb
push
adc
xchg
push
lea
push
int
out
xchg
lea
mov
xor
retf
dec
fs
(bad)
sbb
push
xor
pusha
arpl
or
xchg
push
push
fld
sub
cld
xchg
sbb
adc
jmp
xor
shr
fisttp
add
das
dec
pop
retf
add
dec
adc
aaa
inc
xchg
pushf
xchg
(bad)
jbe
and
hlt
loopne
push
mov
sbb
ins
xlat
ins
arpl
and
scas
gs
aam
mov
rol
mov
js
sub
in
push
cmp
jge
pop
mov
ficom
rol
daa
inc
fld
and
sti
push
mov
and
jo
add
inc
xchg
call
jne
mov
and
ret
gs
aas
aaa
mov
mov
cs
mov
bound
pop
test
add
data16
mov
mov
inc
dec
or
add
mov
lock
add
jp
xchg
sbb
ret
lea
iret
test
mov
fs
sbb
jne
or
mov
add
cmpps
fimul
push
mov
and
mov
xchg
ds
sub
aas
fiadd
add
(bad)
jo
and
popa
and
and
popa
not
pop
pop
push
rol
ror
or
pop
or
mov
outs
inc
dec
mov
sbb
cmp
mov
aas
xor
pusha
imul
xor
test
and
repnz
xchg
jl
scas
sub
movs
shl
movs
sbb
ins
cmp
add
imul
push
sub
clc
cld
imul
fs
sbb
push
inc
js
hlt
lock
leave
and
push
pop
push
xlat
mov
inc
ins
or
dec
jmp
js
jae
loopne
add
loop
jmp
stos
or
inc
jbe
push
int3
mov
xchg
push
cmp
nop
inc
repnz
stos
inc
mov
add
ror
adc
or
mov
xchg
clc
xchg
dec
jns
pop
and
pop
js
dec
xchg
jo
sbb
pop
mov
xchg
jmp
sub
pop
adc
fadd
or
cmp
leave
xchg
inc
and
jg
pop
lods
movs
fild
mov
dec
out
retf
inc
push
imul
xor
ds
mov
das
xchg
and
pop
adc
sbb
sub
add
inc
push
cs
mov
mov
xchg
or
or
lods
ror
test
in
xor
or
and
retf
clc
push
in
pop
and
movs
mov
inc
and
add
clc
push
adc
jmp
das
inc
test
es
dec
les
xlat
test
adc
push
(bad)
inc
xchg
xlat
dec
inc
adc
push
mov
movs
dec
xor
pop
push
pusha
sub
movs
or
(bad)
dec
adc
dec
push
dec
inc
pop
or
push
and
inc
inc
push
inc
push
mov
js
and
push
fstp
fadd
inc
test
jne
mov
or
jo
and
jne
mov
and
aad
mov
mov
mov
jae
push
imul
sbb
test
and
add
add
out
mov
repz
ds
push
push
and
or
lods
test
daa
enter
jns
and
or
mov
movs
add
rcr
sub
test
jne
dec
loopne
sbb
push
fsub
or
call
sahf
or
or
cmp
jmp
fs
mov
jb
jb
(bad)
and
sub
les
add
repnz
dec
pop
and
and
pop
jnp
in
dec
pop
mov
(bad)
xchg
xchg
fisttp
cmp
xor
into
sbb
and
(bad)
push
prefetch
retf
lock
add
hlt
cs
push
dec
push
ja
push
xchg
mov
inc
dec
ins
jge
retf
sub
pop
cmovns
pop
add
jmp
jne
xchg
fmul
xor
mov
mov
cwde
out
push
xchg
inc
inc
call
pop
push
xor
rol
or
inc
loopne
adc
mov
inc
xchg
imul
cmp
xor
or
outs
retf
scas
or
jne
inc
xor
iret
pop
loope
push
push
sbb
pop
add
hlt
or
mov
retf
js
sbb
repz
lock
fwait
xor
fsubp
jmp
out
add
sub
cmp
push
add
ins
ss
test
cmp
lds
mov
jge
or
pop
jo
es
dec
jns
sub
mov
mov
adc
and
inc
adc
and
and
or
pop
bound
pushf
adc
pop
sbb
jmp
or
ins
inc
mov
dec
aaa
add
sbb
push
mov
add
mov
in
loopne
add
add
push
xchg
add
bound
xor
mov
mov
sar
push
in
enter
cmp
or
inc
cwde
ret
dec
mov
inc
mov
and
adc
push
in
sbb
sub
pop
hlt
icebp
add
fs
mov
nop
mov
movs
cmp
and
icebp
jbe
dec
stos
sub
movs
mov
sbb
push
sbb
mov
sub
rcr
and
test
jo
in
in
in
movs
or
dec
and
ret
cmps
add
lea
inc
and
outs
repz
aam
jge
jmp
jns
add
movs
mov
adc
or
pusha
adc
leave
and
jge
pop
cmp
push
mov
push
cs
or
mov
das
je
mov
add
add
push
add
or
outs
push
pop
pop
dec
push
jne
and
loope
das
add
sar
mov
inc
fs
clc
pop
inc
inc
fs
js
(bad)
xor
mov
push
adc
dec
xchg
ret
pusha
aad
aas
adc
dec
mov
in
cld
outs
nop
mov
and
push
sbb
inc
add
xchg
and
and
mov
pop
or
dec
leave
stos
in
cwde
ja
and
push
(bad)
xchg
mov
sbb
sbb
rcl
adc
adc
out
dec
or
xchg
mov
call
out
dec
adc
jge
cmps
adc
mov
lea
pop
rol
rcr
lea
mov
mov
mov
inc
xchg
mov
push
push
inc
adc
sar
jbe
inc
push
or
movs
imul
dec
or
push
cmps
pusha
push
pop
es
xor
sar
add
push
addr16
retf
inc
push
(bad)
adc
pop
inc
inc
pop
add
or
int
jae
popa
push
pop
imul
add
inc
stos
mov
in
and
add
jne
adc
push
push
jmp
pop
pop
ins
pop
push
fistp
jne
push
inc
adc
dec
pushf
push
imul
push
push
add
lods
fsubr
repnz
inc
and
push
sub
xlat
push
xchg
ds
jns
push
fisubr
xor
hlt
cwde
nop
inc
adc
sbb
arpl
push
jne
sub
pop
or
ins
clc
cmp
add
call
mov
loopne
sub
sbb
fdivr
cwde
jmp
enter
repnz
fmul
pop
cmps
sub
inc
and
int
fimul
sbb
mov
xchg
or
fld
fcom
dec
ins
push
mov
ins
ja
push
ins
lea
lock
xlat
addr16
cmp
test
xchg
jmp
sub
ins
dec
pusha
jmp
test
ror
jbe
loope
or
mov
xor
xchg
enter
aaa
rcl
xor
shl
nop
jne
jmp
or
mov
fmul
shr
pop
std
sub
scas
mov
jns
push
popaw
or
add
jo
daa
inc
push
add
in
push
sub
dec
inc
pop
das
push
push
icebp
mov
sub
test
(bad)
fiadd
push
add
and
cmp
dec
or
xor
adc
xchg
cmps
cmp
or
or
ret
or
mov
xor
mov
ret
jbe
cmp
fs
fs
dec
clc
ja
cmp
cmp
xor
lds
movs
daa
cwde
or
mov
mov
sbb
daa
adc
shl
cs
xchg
jae
cmc
xchg
cmp
arpl
fs
ret
fisubr
test
cmp
adc
jbe
call
mov
imul
jmp
push
hlt
in
hlt
iret
adc
xor
mov
in
ret
sub
add
adc
cmp
xchg
ins
(bad)
push
mov
pop
jne
loope
aad
call
aad
sub
or
fdivr
jl
cwde
out
out
push
push
push
ror
imul
lds
sbb
or
sub
retf
(bad)
loopne
adc
inc
fld
adc
in
inc
jbe
bound
call
nop
cli
or
mov
sbb
or
cmp
je
add
stos
mov
inc
add
push
mov
(bad)
fucom
test
add
adc
lea
aas
loop
pop
sahf
cld
les
ficomp
idiv
sbb
mov
add
jle
clc
or
push
and
shl
push
or
hlt
shr
adc
sub
cs
popa
out
add
pop
pusha
add
outs
sub
xor
or
mov
and
ret
ret
ror
xor
add
mov
mov
inc
xor
lock
add
hlt
adc
popa
ret
adc
add
add
and
inc
lahf
out
sahf
dec
push
data16
idiv
out
stc
inc
xchg
adc
outs
xchg
cmp
repz
mov
push
leave
push
mov
es
pusha
and
adc
pop
lahf
bound
mov
push
mov
adc
add
mov
imul
dec
cmp
mov
(bad)
rol
lock
or
shr
outs
xchg
xchg
add
stc
xchg
push
movs
push
scas
fstp
out
mov
inc
mov
pop
pop
daa
into
fld
in
jge
repz
stc
push
cs
or
fucomip
fld
jbe
adc
jno
or
pop
stos
mov
adc
push
jmp
movsx
dec
movzx
mov
xchg
out
ds
jmp
adc
inc
fs
adc
popf
add
pop
fmul
cmp
mov
fist
adc
push
pop
shr
inc
and
pushf
popf
jb
and
aaa
adc
mov
push
test
sbb
jmp
psadbw
inc
jle
sbb
mov
add
sti
push
xlat
sahf
inc
xchg
dec
inc
cwde
push
pushfw
inc
mov
nop
pushf
rcl
adc
mov
add
aad
mov
test
(bad)
or
dec
pop
dec
dec
inc
dec
dec
or
or
fdivrp
mov
xor
ss
adc
or
push
adc
lds
js
ins
cmp
data16
fs
test
jae
and
xchg
push
pop
jbe
pcmpgtb
stc
push
add
add
or
sbb
cld
adc
xor
pop
sbb
or
xor
bnd
test
gs
and
sub
nop
jl
mov
int3
repnz
cmp
xchg
retf
inc
or
std
jbe
enter
jge
test
fld
dec
jg
loopne
mov
outs
xor
nop
jl
or
jmp
mov
pop
sbb
sub
mov
and
jbe
dec
sbb
and
inc
add
mov
or
lahf
xchg
or
jl
inc
sahf
dec
(bad)
cld
clc
cmp
adc
or
mov
inc
push
push
push
inc
inc
or
enter
add
popa
add
inc
push
jo
arpl
loopne
adc
icebp
or
push
cli
mov
inc
sbb
out
inc
mov
ret
jnp
or
dec
call
sbb
jbe
inc
outs
inc
clc
cmp
adc
mov
gs
jnp
ret
aaa
pop
ja
out
in
call
jmp
mov
pop
outs
inc
mov
cli
test
pop
cwde
idiv
push
sub
div
push
push
(bad)
jo
dec
mov
outs
retf
pop
pop
sbb
add
and
jbe
adc
ja
adc
xchg
sar
nop
(bad)
(bad)
fist
xor
inc
mov
test
sub
push
adc
xor
repnz
ja
ins
mov
xchg
jg
xor
pop
and
dec
xchg
in
fild
repnz
clc
inc
jle
pushf
inc
test
in
pop
adc
ins
mov
pop
retf
imul
dec
in
lock
mov
sub
das
cli
cmp
push
shl
ja
push
push
pop
ins
addr16
inc
dec
leave
addr16
adc
cmp
or
xlat
and
data16
push
push
inc
mov
loope
jmp
int
xor
cmp
mov
cmp
jmp
cwde
adc
ja
and
outs
and
ret
ficomp
or
idiv
mov
ins
ror
stos
sub
xor
cvtpi2ps
jb
xor
xchg
dec
pop
pop
xchg
xor
loopne
loope
int3
and
pop
cmc
xchg
outs
xchg
dec
pop
sub
sub
je
cmp
xchg
loopne
retf
inc
sub
mov
mov
or
push
aam
ror
test
ror
jmp
and
movs
aam
clc
sub
nop
xchg
push
fs
pop
xchg
inc
mov
pop
cmp
inc
subps
xchg
xchg
or
add
pushf
fld
add
jmp
inc
add
push
aaa
cli
xchg
inc
or
fsubr
push
ins
rol
mov
push
inc
push
mov
das
mov
mov
sbb
(bad)
push
add
in
addr16
fistp
cmp
outs
je
lahf
xor
mov
ins
push
aas
xchg
dec
xchg
ja
push
adc
or
mov
fisttp
jg
dec
dec
test
sbb
loopne
repz
(bad)
cmps
cmp
push
cmps
add
fnsave
aad
rol
inc
fwait
pop
mov
out
inc
nop
sbb
push
push
loope
push
add
hlt
fstp
test
bound
pop
adc
mov
stos
cld
add
or
rol
mov
push
inc
xor
cmp
mov
iret
pushf
sub
cmp
pop
push
or
mov
push
cmp
scas
ret
cmpxchg
dec
js
bound
add
adc
and
rol
adc
bound
inc
or
outs
arpl
les
xor
loopne
xor
dec
scas
cwde
(bad)
sbb
and
and
stos
xor
in
add
jb
dec
dec
push
mov
pop
stos
pop
push
loop
push
mov
and
xchg
pop
sub
and
rcl
outs
adc
fistp
and
les
scas
pop
stc
mov
push
xlat
push
xor
push
aas
or
popa
sub
jmp
mov
lahf
(bad)
mov
mov
or
in
rol
stc
adc
sbb
push
aam
dec
aad
push
lea
test
sbb
pop
mov
dec
add
outs
jo
test
rol
stc
lahf
loopne
push
mov
in
add
mov
and
sbb
or
and
dec
or
jo
out
mov
cmp
xchg
clc
(bad)
and
daa
push
pop
ins
add
xchg
or
fcom
ret
cmp
lahf
mov
ins
lock
mov
cmp
push
mov
inc
sbb
jbe
cmp
je
sbb
fimul
outs
add
inc
sub
sub
out
xor
shl
mov
or
sbb
mov
jmp
add
std
sbb
(bad)
cwde
mov
or
sbb
into
cs
fnstsw
fstp
push
cmp
and
pop
das
je
adc
inc
xchg
dec
inc
push
jb
ins
pop
add
stos
xchg
inc
add
and
push
ret
scas
pop
stos
add
mov
or
fimul
ja
mov
ins
mov
loopne
cwde
pop
or
aad
mov
adc
xor
test
dec
jae
scas
nop
or
(bad)
fild
leave
add
add
mov
mov
daa
adc
and
call
xchg
inc
or
ror
aas
and
(bad)
mov
or
popa
inc
sti
dec
push
inc
dec
in
dec
and
clc
or
adc
fadd
mov
dec
and
cwde
pslld
push
ins
push
das
(bad)
nop
sbb
jle
pop
xchg
stc
sub
dec
add
push
or
out
mov
test
add
call
adc
test
in
movq
inc
mov
add
or
mov
add
lock
outs
jb
sahf
push
aas
and
jp
(bad)
add
mov
shld
fadd
test
mov
add
push
sbb
cmovnp
inc
inc
movs
in
inc
add
sub
or
vmwrite
loopne
dec
sub
xor
movs
mov
jp
mov
mov
pop
jg
nop
aaa
mov
ins
pushf
jecxz
pushf
or
sbb
adc
cmp
fiadd
jo
movs
inc
push
out
push
push
shl
push
sbb
inc
and
jae
cmp
inc
sub
jp
fild
mov
and
sub
sub
mov
call
add
pop
enter
xchg
dec
imul
mov
test
and
out
cld
cmp
or
or
sub
add
adc
nop
push
or
sub
inc
sbb
inc
(bad)
arpl
add
mov
fcomp
dec
fld
bound
mov
imul
sahf
pusha
add
int3
adc
sbb
ss
mov
cmc
and
das
cmp
jle
mov
and
adc
and
inc
test
pop
test
ud2
xor
lods
cmp
inc
sub
gs
rcl
or
mov
xlat
repnz
lidtd
movs
add
add
cli
push
xchg
test
or
ret
ins
punpckhdq
dec
sbb
mov
mov
adc
push
xchg
pop
(bad)
cld
mov
nop
or
jmp
call
adc
dec
cli
mov
mov
shr
add
add
scas
sbb
(bad)
push
adc
scas
xor
add
inc
fild
push
cwde
ins
sbb
pop
ss
loope
add
mov
mul
es
fs
sub
arpl
popa
inc
sbb
in
pop
data16
(bad)
fnsetpm(287
push
adc
pop
outs
outs
add
test
and
ins
xor
push
or
rcr
arpl
gs
inc
pop
(bad)
and
mov
ret
test
test
xor
repnz
cwde
mov
and
and
fistp
cmp
dec
test
das
rcr
and
xor
fcom
test
add
add
add
loope
or
xor
outs
loope
les
dec
cwde
shl
sub
push
dec
rol
sahf
push
add
sahf
jle
out
in
cmc
xor
js
or
and
push
(bad)
and
dec
jmp
cmc
ds
push
push
and
lods
or
lock
shl
movs
test
adc
mov
add
or
jne
cld
adc
mov
push
lahf
push
imul
xchg
test
xchg
fs
xchg
push
mov
and
loope
or
cld
cmp
jbe
sahf
or
sahf
sbb
and
arpl
in
mov
ds
adc
pusha
and
add
mov
push
out
cmp
(bad)
inc
sub
adc
loope
scas
ins
mov
pop
and
mov
pop
adc
aad
ret
mov
retf
pop
or
pusha
mov
(bad)
push
add
aad
push
das
jae
adc
out
ins
add
adc
scas
or
test
fadd
add
fiadd
in
dec
inc
pop
inc
sub
xor
dec
pop
xor
aaa
dec
add
cmp
aam
jg
stos
and
loopne
jo
mov
and
pop
jmp
jg
push
fld
lds
and
and
sbb
rol
cmp
dec
sbb
or
xchg
sar
dec
jb
inc
push
jno
pusha
cmp
int
pop
stos
test
test
inc
sub
sub
or
push
sbb
es
adc
or
xor
adc
mov
in
dec
es
mov
(bad)
and
ins
pusha
push
cmp
xor
enter
fadd
dec
pop
leave
adc
xor
push
retf
ret
dec
mov
movs
pop
aaa
or
loope
pop
push
adc
pop
aas
or
outs
mov
dec
pop
clc
stc
adc
and
adc
sbb
in
inc
mov
das
outs
or
(bad)
cmp
jl
lea
aad
pop
arpl
pop
fistp
or
inc
imul
and
(bad)
js
mov
mov
mov
dec
or
mov
push
or
sbb
mov
in
inc
ficom
mov
js
and
cmps
xchg
ret
and
imul
add
mov
push
push
xor
add
jecxz
lea
enter
rcr
push
out
(bad)
inc
and
pop
and
or
mov
cmp
mov
inc
sub
arpl
xor
push
xor
add
aad
lock
out
or
movs
inc
ret
call
nop
jns
out
mov
sub
lock
loopne
adc
xchg
push
mov
les
cmp
fcom
scas
mov
jmp
adc
push
les
(bad)
push
jmp
adc
push
mov
xchg
sub
xchg
aam
push
rol
lock
cmc
or
and
mov
mov
loopne
jo
sbb
call
clc
add
push
sub
cwde
popa
mov
inc
rcl
aam
add
and
in
inc
psubusb
adc
xchg
fsubr
mov
call
xchg
add
sbb
je
xchg
sbb
cwde
fmul
dec
xchg
div
cmp
popa
xor
xchg
gs
rol
jnp
or
jle
pop
sub
and
lea
loopne
xchg
lock
xor
push
mov
add
sub
sub
enter
in
add
xor
ins
jmp
add
std
(bad)
ss
dec
push
push
cmp
mov
mov
pop
pop
movs
ins
push
adc
adc
cli
jmp
add
repz
fwait
ror
sbb
movs
fsub
pop
nop
or
outs
xchg
xor
mov
test
in
mov
push
and
add
xor
in
ret
jle
and
inc
inc
dec
pop
pop
outs
in
lea
or
pop
xor
mov
xchg
ja
jb
fadd
push
mov
add
inc
sbb
jno
xchg
movs
xchg
or
(bad)
retf
xchg
lods
mov
daa
pushf
and
push
and
femms
dec
push
nop
rol
jnp
or
add
stc
leave
jo
and
sub
push
in
leave
les
and
lea
inc
enter
mov
cmp
outs
inc
jne
loopne
iret
add
add
pusha
call
fild
xor
inc
inc
mov
pop
movs
es
sahf
add
fdiv
pop
xor
dec
or
(bad)
xlat
push
bound
cmp
cli
out
pusha
adc
xor
pop
push
adc
push
cdq
nop
xchg
mov
mov
pop
rcr
or
xchg
and
push
popa
mul
xor
das
sub
adc
push
fwait
js
pushaw
and
icebp
adc
push
xor
loop
sub
and
dec
add
outs
push
lock
xor
xchg
xor
xor
je
push
fs
scas
jl
xor
add
push
push
jbe
out
xor
add
mov
fldcw
xchg
xor
mov
das
mov
mov
add
das
jae
xchg
or
or
lea
adc
add
pushf
fnstsw
mov
test
aaa
mov
xor
movs
inc
mov
and
dec
aaa
inc
loope
ficom
xor
xchg
in
or
xor
or
and
movs
add
pusha
push
dec
mov
imul
dec
inc
jns
les
mov
or
sub
outs
pop
inc
aas
dec
cmp
sbb
in
jae
add
nop
pushf
adc
adc
add
shl
in
and
adc
xchg
pop
adc
sbb
enter
cmp
pop
fwait
pop
inc
inc
and
xor
dec
inc
push
add
mov
rdmsr
xchg
mov
sbb
pop
aaa
sub
jo
(bad)
sbb
adc
and
adc
jb
sbb
pop
mov
inc
and
mov
enter
scas
fisttp
pusha
pop
and
xchg
adc
(bad)
or
jl
loop
(bad)
jmp
sbb
and
inc
mov
test
cwde
cmp
dec
sub
orps
mov
and
jns
(bad)
add
cmp
jne
push
jb
pop
daa
sub
inc
inc
leave
sub
push
adc
mov
add
pusha
and
outs
sub
cdq
dec
cmps
xchg
das
xor
movs
mov
xor
xor
add
add
cmp
cmp
aaa
cmp
sbb
cmp
or
mov
mov
add
add
in
enter
loopne
daa
enter
sub
mov
enter
shr
adc
enter
inc
ins
nop
mov
in
enter
sub
enter
xchg
mov
enter
cmc
sbb
cmp
enter
movs
retf
enter
sub
pop
jp
enter
enter
retf
enter
bound
sbb
je
dec
jecxz
dec
out
das
pop
movs
setle
add
add
jns
cmp
ds
mov
and
ror
dec
call
xor
push
inc
or
outs
shl
pushf
add
sbb
mov
stos
popa
imul
leave
sbb
adc
sbb
pop
aad
sub
push
lock
dec
mov
cmp
adc
pusha
adc
pop
(bad)
ss
adc
add
xlat
dec
xor
xor
dec
setne
lds
or
daa
pushf
imul
mov
push
dec
jecxz
stos
pusha
pop
fdivr
cmp
and
cmp
mov
dec
cld
or
fdivp
add
xor
mov
sub
mov
cmp
push
and
xor
pop
movs
mov
movs
push
rcl
stos
inc
not
rcl
je
sahf
and
mov
fadd
pop
dec
test
adc
xor
add
hlt
ins
or
daa
test
cmp
ret
jmp
cdq
imul
xor
sub
cld
daa
iret
or
cld
mov
adc
rol
aaa
mov
(bad)
adc
in
dec
ret
xchg
call
dec
inc
mov
and
arpl
movs
or
inc
cwde
outs
into
or
mov
js
rol
and
or
push
call
nop
add
add
(bad)
(bad)
movs
jne
xchg
je
add
cwde
sub
sub
xchg
sbb
cmp
test
or
inc
or
or
loope
cmp
dec
mov
pop
add
dec
jmp
(bad)
adc
mov
pop
adc
push
fisubr
push
or
push
sub
add
push
test
push
loop
pop
call
pop
imul
cwde
sbb
xor
movs
movzx
cmps
in
push
dec
cmp
xor
sub
and
cwde
cs
and
adc
xchg
xlat
ins
sbb
pop
or
test
push
jl
adc
sbb
loop
and
test
xchg
(bad)
into
outs
add
test
cmp
fs
push
jmp
lahf
add
and
pop
outs
sbb
xchg
cmp
fmul
or
mov
mov
xchg
and
int3
and
jg
shl
jp
or
and
cmp
and
mov
ss
int
adc
test
shr
leave
rol
mov
and
xlat
mov
mov
adc
or
cmp
test
scas
pop
ss
add
test
and
aam
loope
cmp
je
out
mov
or
jne
inc
nop
ror
jno
jmp
xchg
sbb
xchg
gs
adc
cmp
out
vmwrite
push
(bad)
test
push
cmc
mov
dec
leave
add
jns
xor
int3
add
add
in
popf
ret
es
xchg
xchg
lahf
sub
cmp
or
mov
xchg
cmp
jmp
mov
dec
and
dec
cwde
or
mov
and
add
retf
inc
jno
push
xchg
js
jle
pop
adc
pop
mov
lods
shl
xchg
arpl
and
sub
add
mov
add
adc
dec
inc
xlat
movs
mov
sbb
test
sbb
or
mov
xchg
inc
cmps
bound
mov
mov
cmp
xchg
jo
sub
mov
rol
add
mov
cmp
or
xchg
mov
in
add
mov
in
cmps
sbb
aam
dec
add
inc
cmp
mov
push
das
dec
sbb
adc
dec
jne
sub
pop
add
test
xchg
cwde
or
mov
cld
lods
(bad)
std
sub
mov
test
and
pop
and
cmp
jg
cmp
jg
jo
mov
sbb
ret
jmp
fist
adc
fdivrp
jo
add
dec
push
xchg
inc
nop
shl
or
(bad)
jns
xchg
inc
ins
out
(bad)
fcom
fbstp
lock
(bad)
pop
cmp
add
add
int3
inc
adc
adc
aam
sub
cdq
lock
cmp
adc
push
cdq
mov
inc
jmp
sub
push
pushf
sbb
add
sbb
dec
ins
sub
iret
cli
jmp
sbb
push
inc
add
cmc
cmp
push
dec
cmc
xchg
popa
test
ret
or
(bad)
into
or
add
sub
xor
inc
jno
movs
inc
add
fiadd
ret
ret
sbb
lock
add
cmps
pop
mov
add
xchg
or
or
(bad)
sub
ror
cmovb
in
scas
vmread
sar
sub
lods
adc
scas
mov
dec
mov
xor
ss
lea
add
ficomp
outs
xlat
or
xchg
push
aaa
push
inc
ds
inc
mov
lahf
mov
and
xchg
in
and
les
jnp
mov
mov
in
popa
and
aaa
iret
inc
ds
and
sub
jmp
mov
adc
je
xor
jp
sbb
push
pop
imul
jb
retf
or
adc
cs
sets
xchg
outs
jb
xchg
cld
mov
adc
repnz
adc
jns
cmp
push
fwait
and
xchg
out
inc
mov
jnp
leave
mov
xchg
jle
aas
or
push
jnp
aam
sub
dec
loop
push
inc
mov
movs
leave
aam
mov
and
pop
jg
adc
mov
(bad)
(bad)
out
gs
pop
call
xlat
popf
rol
add
cwde
adc
inc
leave
in
mov
gs
jb
or
add
(bad)
(bad)
cmp
add
ret
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
or
mov
cwde
inc
js
jle
add
pop
adc
dec
push
add
test
xlat
pop
xor
dec
out
jno
movs
xchg
into
add
fcomp
aas
xor
xor
pop
mov
stc
dec
and
mov
(bad)
mov
pop
and
mov
js
mov
jb
loop
xchg
test
fcomp
in
dec
fmul
addr16
fimul
dec
pop
dec
mov
in
xchg
xchg
lods
inc
aas
inc
inc
jl
jnp
jb
xor
inc
and
xor
cwde
sbb
dec
fcomp
fcom
or
cmp
dec
sbb
repz
iret
repz
mov
cmp
repz
pop
arpl
loope
iret
repz
in
rcr
loope
cs
imul
sub
push
imul
outs
test
mov
int
jns
es
push
adc
ds
pop
cmps
std
out
call
dec
es
inc
fmul
pop
inc
popf
push
and
dec
dec
mov
xchg
ds
add
xor
add
cwde
dec
adc
adc
add
add
cmp
rcl
int
or
inc
imul
pop
xchg
mov
add
in
rol
inc
inc
setbe
fs
out
and
mov
jb
repnz
jns
push
dec
cmp
cmp
js
in
dec
push
aad
mov
ja
leave
and
shl
or
jb
cwde
dec
dec
and
dec
mov
dec
pop
dec
sti
cwde
popa
xchg
add
add
xchg
jp
outs
inc
dec
push
jo
and
push
jne
and
loope
push
ins
sub
mov
adc
ret
cmps
add
ins
dec
cmp
inc
imul
dec
inc
mov
xor
cmp
cld
lods
and
outs
je
movs
adc
mov
or
movs
into
arpl
add
dec
or
and
rcl
cmc
or
add
xor
pop
or
gs
js
iret
xchg
add
aaa
or
push
pop
xor
cmc
in
sub
dec
jle
add
mov
int
pop
shr
nop
mov
imul
sbb
js
dec
inc
jae
in
or
add
pop
scas
or
jo
inc
std
cmps
xor
pusha
dec
dec
jbe
or
mov
mov
rol
jmp
and
fwait
std
or
add
inc
and
stc
mov
dec
inc
sbb
ja
pop
push
pop
shl
dec
pop
dec
gs
sub
test
jnp
push
or
mov
pop
das
lods
cs
or
push
add
push
test
or
jo
fiadd
iret
loop
les
or
ja
adc
or
add
shl
stos
dec
inc
sbb
mov
pusha
dec
fist
cld
push
jb
add
mul
in
add
mov
sbb
mov
mov
and
xchg
cmp
lock
push
add
dec
sbb
int
mov
ins
adc
pusha
sbb
inc
(bad)
or
cmps
or
xchg
sbb
fldcw
and
pop
adc
int3
adc
pop
and
cmp
bswap
add
retf
jecxz
xchg
jb
popf
inc
add
cmp
in
inc
mov
test
(bad)
adc
shr
jo
shr
inc
adc
xchg
adc
rol
test
add
pushf
pop
and
and
sbb
sub
rol
hlt
add
ficomp
add
or
xchg
mov
mov
repnz
iret
inc
or
mov
idiv
in
cli
inc
sbb
adc
and
fmul
outs
mov
mov
adc
jp
push
xor
cmp
xor
jno
dec
dec
sub
bound
sub
xlat
mov
sbb
loopne
jmp
sbb
adc
cmp
(bad)
rcr
repnz
mov
cwde
(bad)
ja
dec
xor
ror
or
jp
dec
sub
jmp
sbb
add
es
in
dec
dec
in
in
and
int
hlt
call
xor
sbb
push
inc
xor
dec
sbb
sbb
add
retf
pop
jnp
pop
xchg
loope
xlat
daa
dec
out
stos
push
or
sbb
(bad)
add
cld
cmp
clc
div
(bad)
rcl
(bad)
or
int
and
push
je
and
cmps
lods
shl
(bad)
pusha
jp
pop
jae
push
pop
fiadd
cdq
lds
xor
mov
ror
dec
pop
xchg
or
retf
popa
xchg
fistp
dec
fdiv
push
mov
add
mov
pop
(bad)
or
jl
gs
inc
dec
test
or
arpl
je
dec
and
and
xchg
lea
mov
cmps
mov
fwait
jg
je
fdiv
jns
push
arpl
pusha
sbb
add
sbb
inc
sar
sub
retf
sbb
cmp
ror
nop
out
cmp
push
dec
in
sbb
int
pandn
je
jg
jl
mov
(bad)
stos
call
cmp
mov
and
in
sbb
cld
jmp
xchg
sbb
cmp
shl
mov
ins
cmp
popf
jecxz
pop
adc
and
push
dec
push
mov
and
add
sbb
rcr
ficomp
mov
sbb
je
into
loop
or
shl
cmp
sub
add
push
ja
les
int3
dec
xlat
test
fsub
call
inc
mov
push
or
ss
cmp
and
pushf
pushf
dec
jo
inc
mov
xor
pop
(bad)
(bad)
or
adc
or
jp
adc
mov
xchg
iret
mov
hlt
ins
mov
jno
push
aas
or
mov
pushf
mov
add
out
push
jnp
sbb
call
lea
sub
test
sub
imul
leave
pop
mov
inc
cmps
push
adc
ds
xor
xor
in
hlt
fadd
test
sbb
xchg
xchg
sbb
sbb
pusha
imul
mov
f2xm1
pop
sbb
nop
loopne
in
xchg
push
iret
(bad)
les
jmp
pop
fild
cmp
push
push
jno
inc
ja
bswap
in
enter
jmp
jecxz
es
add
lock
cmp
sub
stos
sar
ret
sbb
add
dec
adc
(bad)
jno
push
dec
push
hlt
xchg
add
sub
adc
inc
push
xchg
je
aam
test
imul
cmp
lock
lea
or
jno
sbb
leave
cmps
daa
jmp
jo
dec
push
push
sbb
dec
adc
inc
pop
xor
xchg
ins
repz
or
add
in
inc
cmp
push
repnz
mov
ds
sub
adc
mov
or
stc
cmp
mov
mov
aam
xor
mov
inc
or
inc
ror
loope
(bad)
push
(bad)
stos
or
mov
xchg
inc
(bad)
(bad)
jmp
adc
sub
cdq
xchg
push
sub
and
push
ins
push
lods
repnz
pusha
das
shr
xor
and
ds
jmp
fwait
add
push
popa
mov
ja
aaa
js
add
rcr
dec
vmread
rcr
rcr
adc
mov
loope
add
hlt
hlt
push
movs
sbb
mov
pusha
fidivr
into
dec
adc
mov
mov
jns
or
rcl
inc
sbb
(bad)
test
mov
inc
scas
mov
js
and
test
dec
pop
inc
inc
fsubr
mov
adc
loopne
test
(bad)
jmp
dec
pop
cdq
dec
sahf
adc
data16
mov
(bad)
test
test
pop
add
(bad)
pop
arpl
and
push
in
in
ins
pop
fst
dec
sar
pop
xlat
call
and
pop
pop
imul
jge
add
xor
mov
xor
or
inc
fstp
(bad)
stos
inc
mov
mov
or
pop
ss
and
dec
push
lods
pop
cmp
pop
lods
pop
inc
les
pop
lock
dec
add
pusha
rcr
outs
pop
and
inc
ds
je
jbe
inc
mov
ror
sub
scas
out
mov
fadd
inc
and
mov
out
dec
jne
inc
or
lahf
mov
test
mov
pop
pop
dec
idiv
pop
pop
gs
pop
mov
cmc
mov
nop
pop
mov
push
or
inc
repnz
or
dec
cdq
aas
cs
dec
xchg
test
xchg
xchg
lods
xlat
shl
dec
xor
cdq
pop
test
adc
test
test
cmp
ret
fsubr
jp
(bad)
jmp
sbb
adc
repnz
adc
cdq
shl
fstp
sbb
div
sbb
sbb
pop
adc
sahf
mov
clc
cmp
adc
test
add
imul
repnz
fcomp
sahf
dec
pop
enter
and
and
imul
pop
jbe
add
pusha
push
in
sbb
je
repnz
pop
scas
cwde
mov
loopne
dec
fcmove
inc
and
scas
dec
sbb
push
ins
or
mov
ins
push
xor
ins
loop
ja
int
sbb
rcl
xchg
adc
mov
inc
and
add
imul
inc
xor
sub
dec
test
and
rcr
sahf
in
dec
push
add
daa
xor
jno
add
test
dec
mul
add
xor
or
sbb
mov
popa
jg
retf
cmps
push
sub
add
dec
pop
in
push
dec
sub
bound
push
cs
loop
add
sub
lahf
out
push
pop
xor
adc
js
sbb
ss
les
bound
loopne
and
dec
stc
lds
inc
dec
cmp
dec
arpl
and
aam
adc
mov
push
and
or
dec
mov
pop
and
xchg
or
jmp
inc
dec
fisttp
add
mov
sbb
fmul
xchg
inc
adc
scas
push
push
ror
arpl
sub
and
jae
or
push
inc
les
jne
jge
adc
test
nop
xchg
xchg
call
shl
popa
cmp
data16
or
ins
xchg
dec
push
cmp
aas
adc
or
mov
in
mov
dec
pop
jecxz
xchg
push
fs
mov
dec
idiv
jb
pop
aas
jo
rcl
push
xor
imul
xchg
fs
xchg
add
fdivr
and
add
or
pop
dec
scas
lds
ret
xchg
dec
cdq
dec
xchg
mov
ja
out
ins
sbb
imul
add
repz
xlat
mov
push
in
addr16
push
push
push
and
inc
xchg
rcl
pop
pop
dec
sub
retf
mov
dec
mov
mov
daa
in
les
pop
mov
je
cdq
pop
mov
mov
add
fisubr
push
adc
iret
shl
push
shl
in
cmp
mov
mov
mov
popf
jge
inc
imul
push
ficom
cmp
cmp
push
mov
mov
inc
or
xor
dec
xchg
xchg
jnp
mov
push
or
int
sbb
mov
cmp
add
or
bswap
jae
daa
scas
xor
xchg
add
xor
lods
push
sbb
or
je
mov
jg
in
push
ret
or
pop
or
movs
adc
addr16
push
cli
mov
adc
dec
push
xor
addr16
popa
(bad)
adc
lahf
aaa
jp
mov
rcr
add
dec
mov
aas
and
iret
sub
scas
add
dec
ins
mov
push
sub
inc
lock
pop
push
sbb
sub
lods
adc
or
sub
loope
push
dec
dec
pusha
rol
push
dec
cmp
dec
pop
test
cmp
mov
js
pop
mov
(bad)
rol
es
mov
(bad)
cld
ror
xchg
sbb
mov
inc
add
push
jmp
and
fiadd
shr
cmp
sbb
add
jne
or
mov
dec
test
mov
pop
enter
mov
fadd
outs
push
and
nop
cmps
mov
adc
mov
dec
sar
inc
les
push
xchg
das
mov
mov
or
and
and
pop
jp
lds
xchg
and
out
imul
and
int3
sbb
xchg
add
cwde
add
xlat
dec
test
nop
xchg
mov
stc
movs
or
xor
inc
iret
xor
pop
fisubr
in
mov
call
ins
fs
mov
cmps
imul
stos
les
and
cmp
pop
add
imul
xchg
and
xor
addr16
inc
dec
sbb
jnp
ins
out
stos
in
in
ins
jo
jbe
inc
xor
clc
sbb
and
inc
ret
or
lods
or
pop
cmp
dec
add
dec
imul
cmp
mov
rcl
outs
xchg
and
push
out
enter
in
jae
dec
fmul
jae
and
stos
jne
pop
sbb
jae
sar
mov
mov
dec
pop
adc
and
xlat
test
(bad)
in
bound
dec
fcom
sbb
adc
(bad)
pusha
adc
and
mov
arpl
dec
mov
xchg
jo
xchg
bound
dec
mov
int
lods
dec
imul
in
and
fs
adc
sbb
xor
cwde
inc
cmp
or
inc
test
or
popa
popf
cmp
lock
leave
mov
out
outs
outs
push
adc
imul
jae
popa
inc
lods
add
adc
xor
jo
dec
test
or
mov
or
test
pop
data16
xchg
ja
std
or
and
add
nop
dec
sub
jl
add
jae
(bad)
or
pop
(bad)
push
pop
adc
push
xchg
aaa
jl
nop
mov
movs
fwait
inc
inc
loopne
push
xor
ins
cmp
imul
mov
stos
loop
shl
pusha
pop
or
addr16
sbb
out
xlat
rol
add
ret
sbb
aas
popf
push
in
test
inc
rcl
push
(bad)
and
adc
add
adc
add
add
and
(bad)
jno
push
or
fwait
xor
jb
xchg
push
and
adc
xchg
iret
pop
retf
cmp
xadd
dec
sbb
cmp
add
aas
ss
adc
aaa
push
jne
mov
sbb
jbe
jae
mov
in
fild
sbb
or
rol
jb
pop
add
jb
add
add
mov
retf
in
in
jae
pop
retf
push
pop
xor
pop
in
and
aas
ss
adc
xchg
daa
or
xchg
xchg
sbb
xchg
(bad)
ss
(bad)
cld
add
gs
mov
les
das
push
lea
test
pushf
retf
outs
xor
push
push
sbb
push
or
add
xchg
pop
adc
das
xchg
mov
inc
dec
(bad)
adc
enter
mov
inc
xor
ins
(bad)
ror
xor
jae
lods
retf
dec
retf
and
and
jne
outs
inc
push
in
jl
sbb
mov
add
adc
add
xor
jae
in
adc
or
rcl
arpl
add
dec
imul
push
dec
jb
fwait
enter
inc
fld
outs
adc
inc
mov
push
adc
xor
adc
mov
push
inc
arpl
imul
es
or
dec
cmp
fdiv
or
and
es
jbe
pop
push
das
sub
mov
and
add
mov
fnstcw
stos
jbe
ja
idiv
dec
daa
gs
or
xor
enter
and
dec
mov
ja
fisttp
inc
add
sbb
nop
push
add
retf
push
js
es
jmp
gs
pop
loopne
dec
jl
cmp
or
ret
bound
dec
xchg
je
popa
push
arpl
adc
ja
push
add
js
adc
pop
enter
hlt
js
and
dec
adc
inc
jns
jns
xchg
and
jns
jns
jns
adc
adc
data16
rcl
jp
and
dec
fidivr
dec
and
pop
dec
dec
int3
adc
dec
pusha
pop
and
nop
int3
and
jbe
mov
lds
add
ss
mov
daa
or
out
push
data16
jge
and
cmps
aam
jle
data16
pop
(bad)
pushf
rcl
pop
(bad)
repnz
loop
mov
push
fst
xchg
xchg
mov
cmps
add
mov
dec
jl
mov
fs
dec
add
ror
je
sbb
push
push
inc
xchg
data16
pop
cmp
fdiv
push
cmp
adc
inc
lea
sbb
or
gs
xor
imul
sub
xor
clc
add
push
pop
arpl
jns
pop
jmp
pop
xor
jae
mov
xor
cmc
dec
pop
add
gs
fisttp
inc
push
inc
ret
add
or
jae
je
shl
stos
xor
push
(bad)
arpl
test
inc
rcl
xor
jnp
nop
xor
mov
pop
jo
or
test
test
dec
shl
mov
push
and
dec
movs
dec
fsub
test
push
xchg
mov
(bad)
(bad)
loop
add
fstp
call
shl
cmp
ror
xchg
mov
retf
out
enter
push
adc
push
test
dec
mov
ficom
push
cmp
fadd
lea
adc
sub
ror
pushf
in
mov
hlt
rcr
mov
cwde
pop
leave
stos
push
or
adc
sbb
adc
adc
add
sbb
jg
mov
or
mov
xor
xor
popa
or
cmp
xor
lock
xor
pop
sub
push
and
adc
ins
mov
jo
adc
mov
xor
sbb
icebp
lahf
ficomp
or
or
inc
sti
add
arpl
sub
xchg
add
add
jg
ror
hlt
out
lods
push
popa
daa
xchg
enter
mov
rol
lahf
and
sbb
add
rcr
movs
dec
es
pop
inc
push
add
cmp
push
sar
pusha
inc
or
dec
sbb
jae
inc
dec
push
leave
pop
aad
xor
or
inc
pop
test
push
or
pop
and
cmps
je
mov
push
xor
xor
xchg
out
dec
mov
xchg
add
pop
pop
adc
sub
sub
add
or
pop
xchg
inc
add
call
sub
pop
clc
test
add
add
cmp
mov
and
sub
in
das
fs
adc
dec
add
loope
sbb
into
stos
(bad)
loop
dec
loop
rcr
sbb
cmp
and
clc
add
js
fadd
test
dec
inc
ss
push
test
add
add
push
mov
pop
pop
sub
inc
adc
or
adc
add
cmps
xchg
add
add
sbb
nop
add
add
and
add
add
pusha
and
cmp
or
xor
jns
dec
or
inc
add
xchg
daa
xchg
add
and
inc
lldt
xchg
xor
and
in
push
jb
jno
add
xchg
and
and
jmp
and
and
shl
xchg
and
repnz
and
xchg
pop
mov
jl
sbb
jbe
punpckldq
cmc
or
pop
lock
or
nop
pusha
xor
sub
dec
enter
mov
ror
mov
mov
ss
sub
adc
adc
add
add
stos
adc
adc
cmp
xor
sbb
cmp
xor
xor
xor
inc
data16
loop
lea
xchg
test
mov
add
xchg
clc
mov
adc
je
push
int3
and
dec
test
femms
nop
add
push
mov
(bad)
(bad)
and
adc
xor
sbb
icebp
mov
aas
inc
adc
mov
imul
outs
dec
stos
fs
adc
movs
inc
pop
push
pop
xchg
int3
adc
mov
adc
popa
jnp
cs
and
adc
pop
mov
adc
out
xor
and
mov
in
jb
push
add
or
add
push
outs
cmp
js
(bad)
or
leave
(bad)
xchg
in
jmp
bound
icebp
loopne
xlat
sbb
inc
les
xchg
mov
mov
add
mov
add
out
enter
aaa
add
xlat
hlt
add
push
or
sbb
or
data16
or
inc
and
adc
jb
adc
mov
nop
into
push
sbb
rcr
push
pop
cmp
add
aas
mov
mov
add
add
aaa
push
pop
push
sub
dec
and
push
xchg
dec
xchg
dec
movs
mov
lods
xor
sub
ror
pushf
sub
push
xchg
mov
imul
lods
sbb
in
pusha
or
fs
mov
xchg
test
jecxz
fld
pusha
leave
enter
loop
outs
cmp
add
int
aad
adc
dec
add
gs
pop
clc
add
add
add
das
sub
imul
dec
shl
ror
adc
(bad)
in
nop
sbb
or
popf
add
sahf
in
xor
add
dec
cld
xchg
mov
inc
pop
sbb
cld
mov
and
out
push
rcl
push
(bad)
das
cld
push
and
dec
les
xchg
inc
out
sysret
repnz
in
js
xchg
dec
xchg
test
aas
add
xchg
dec
and
lea
dec
push
inc
ds
adc
push
inc
repnz
add
clc
push
sbb
add
push
xchg
push
xchg
ja
dec
sbb
and
pushf
push
or
and
stc
push
dec
leave
jmp
out
xchg
push
leave
int3
xchg
inc
out
and
xchg
mov
mov
dec
ss
dec
das
fwait
push
rcr
mov
fild
test
cmp
enter
call
shl
cmp
frstor
inc
in
add
xchg
pushf
pop
popa
pusha
lds
ror
mov
mov
enter
add
sub
sbb
pop
icebp
rol
jmp
xchg
add
adc
cmp
fs
es
jbe
pop
out
test
das
into
push
sub
test
or
jmp
adc
mov
ret
aad
retf
sub
xchg
inc
mov
push
xchg
mov
inc
fwait
loopne
leave
mov
add
movaps
add
or
push
popa
lods
mov
(bad)
cmp
xor
and
imul
push
add
enter
cmps
lea
or
add
cmp
dec
push
fst
mov
movs
das
mov
and
ss
mov
clc
jmp
mov
or
xlat
(bad)
stos
js
xchg
sbb
shl
dec
pop
leave
xor
or
mov
mov
jns
aaa
inc
movs
add
dec
jle
out
or
movs
adc
sbb
paddsb
pop
pop
and
dec
dec
ds
jle
adc
push
and
retf
sahf
xchg
call
ret
push
sbb
fcomp
and
pop
jmp
xchg
fcomp
push
sbb
pop
arpl
mov
inc
mov
cmp
cmp
sar
mov
int3
fimul
sub
imul
and
test
dec
inc
or
dec
cdq
cli
outs
dec
xchg
lds
mov
or
push
sub
lock
and
repnz
mov
mov
leave
in
fmul
(bad)
aas
popf
ins
sub
and
push
mov
popf
cld
popa
rcr
mov
xor
daa
out
push
inc
ret
repz
xchg
push
jmp
pop
inc
in
loopne
mov
mov
add
dec
dec
or
nop
popa
cdq
movs
adc
and
lods
nop
sub
inc
mul
fstp
lea
inc
adc
call
pop
jmp
and
in
xor
dec
push
test
sub
sbb
int3
xchg
jg
cwde
outs
mov
inc
iret
push
retf
inc
arpl
pop
cmp
bound
push
loope
sbb
cmps
or
ret
ins
addr16
jae
bound
xchg
jne
(bad)
les
fsubr
and
push
xchg
mov
adc
xor
add
xchg
cmp
inc
jno
or
add
enter
adc
jbe
popf
xor
fwait
scas
mov
movs
push
cmps
mov
imul
mov
cld
in
pop
sbb
jns
in
push
stc
fs
andps
fs
dec
out
add
test
add
lea
arpl
fild
adc
mov
ins
ins
xchg
inc
ds
inc
sbb
mov
add
sbb
jp
stos
dec
iret
adc
cmp
add
xor
xor
sub
mov
fmul
loopne
outs
push
aaa
sub
xor
jae
cmp
shl
sub
xchg
push
ins
cmp
jo
mov
stc
ror
push
xor
bnd
rcl
or
rep
dec
fldcw
or
adc
or
add
arpl
(bad)
sbb
pop
xchg
adc
(bad)
aad
mov
and
retf
cdq
test
adc
add
ins
mov
test
aas
sahf
aaa
adc
jae
adc
sub
(bad)
cmp
or
jns
sub
sbb
fcmovu
pop
dec
popa
jbe
xlat
shr
adc
pop
jno
pop
fcomp
in
add
es
and
(bad)
jo
imul
mov
mov
add
dec
push
loope
xchg
or
dec
repz
push
hlt
iret
repz
adc
je
cld
sub
mov
push
and
xor
jne
repnz
fidivr
sbb
and
in
movs
and
enter
movs
mov
sbb
movs
adc
scas
push
bound
and
add
xchg
xchg
xchg
pop
mov
xchg
xchg
retf
and
retf
xchg
xchg
(bad)
test
xchg
xchg
xchg
xchg
push
ja
rcl
test
xchg
xchg
js
mov
xchg
xchg
xchg
retf
or
retf
xchg
xchg
mov
pop
stos
rcr
pop
add
mov
les
rcl
pop
lods
(bad)
loopne
and
inc
sub
or
adc
in
out
dec
je
add
or
add
repnz
push
and
push
iret
add
sub
ror
and
enter
retf
and
clc
inc
jae
je
pop
(bad)
or
jmp
stos
mov
and
aaa
fs
fimul
adc
inc
mov
call
cmp
push
jo
sbb
(bad)
push
(bad)
hlt
out
dec
call
ror
scas
add
or
mov
nop
ror
pusha
add
pop
fwait
test
and
inc
mov
mov
nop
add
cwde
dec
jecxz
add
jno
push
adc
adc
les
(bad)
jo
inc
and
adc
ror
jno
xor
mov
adc
sahf
mov
inc
repnz
dec
rol
in
or
dec
xchg
movs
loope
rcl
mov
jo
adc
dec
leave
add
test
inc
loopne
add
xor
test
movd
jo
and
fcmovne
sub
ins
sbb
test
cmp
or
xchg
pop
jnp
mov
rcr
or
and
dec
shl
cwde
es
xchg
lock
mov
sbb
dec
cs
and
imul
and
fs
push
push
cmp
and
ret
adc
out
push
jmp
cwde
les
mov
inc
jmp
push
jo
or
sub
fadd
or
add
push
mov
sbb
pop
outs
ror
xor
inc
inc
ja
pop
push
movs
imul
mov
sbb
pop
mov
js
push
dec
adc
add
scas
mov
push
xor
out
dec
inc
and
and
fistp
scas
dec
pusha
fdiv
inc
div
sbb
jmp
addr16
jl
add
add
jp
(bad)
adc
and
and
mov
push
imul
sub
(bad)
ins
and
inc
push
cmp
adc
es
add
cmp
inc
dec
cmp
and
cmp
sbb
sub
test
push
add
daa
cmp
jne
dec
jl
ja
ret
push
mov
aaa
fild
mov
mov
xchg
icebp
xlat
adc
mov
gs
mov
sub
mov
js
ror
jmp
imul
int
pop
mov
les
push
mov
loopne
push
or
jo
or
pop
pop
push
adc
adc
lock
pop
adc
aam
or
sub
loopne
pop
rol
and
cli
sahf
sbb
sub
pusha
pop
sub
pop
fwait
sbb
ret
pop
dec
mov
inc
add
lahf
in
movs
inc
ins
or
dec
push
jmp
and
rol
pop
pusha
dec
adc
sbb
mov
outs
sbb
imul
lods
call
in
mov
jb
mov
jo
rcr
mov
std
add
pop
push
call
pop
hlt
and
adc
dec
aas
(bad)
dec
and
jo
lock
mov
mov
call
les
shr
or
daa
pop
mov
call
ficomp
inc
es
add
clc
mov
ret
push
or
mov
test
fistp
adc
inc
loopne
addr16
jmp
sbb
jmp
cmc
jl
cmc
jae
jmp
cmc
sub
jmp
mov
rcl
shr
xchg
push
mov
mov
fld
mov
ds
pop
imul
mov
pop
mov
cmp
mov
cmp
mov
mov
call
pop
pushf
cpuid
mov
pop
mov
mov
inc
and
jmp
cwde
mov
xlat
pop
cmp
das
mov
adc
push
push
mov
js
es
mov
mov
mov
add
inc
shr
fdiv
mov
mov
daa
inc
ret
or
inc
pop
scas
sub
out
in
fcmovb
and
in
call
ffreep
mov
inc
xor
push
adc
or
mov
out
mov
xor
push
sub
ja
dec
mov
call
push
xchg
xor
or
je
add
sub
jbe
and
gs
adc
pusha
dec
call
test
cmp
call
jge
popa
pop
hlt
inc
clc
adc
ret
scas
add
(bad)
fadd
adc
jmp
dec
inc
or
or
popa
shl
jnp
adc
add
dec
pop
aaa
test
lock
out
add
in
in
rol
dec
daa
in
call
clc
pop
test
ret
int
or
cmps
and
add
imul
sbb
xchg
push
pop
adc
cld
in
push
je
out
pop
mov
or
push
and
cmp
jne
dec
test
add
mov
cld
cld
push
mov
and
js
aaa
or
mul
outs
mov
idiv
cld
mov
add
mov
cmp
adc
aaa
sbb
shl
lock
aam
dec
shl
xor
cmps
pop
nop
popa
das
sub
lea
mov
pop
dec
loope
mov
and
push
xchg
pop
xchg
and
jb
mov
inc
jb
movs
mov
add
pop
in
mov
aas
lods
in
inc
in
test
fisub
mov
push
int3
fcomip
mov
jecxz
in
jno
sub
outs
(bad)
mov
rcr
xor
mov
pop
jge
mov
retf
pushf
mov
sbb
and
add
lock
outs
fild
sti
mov
add
inc
dec
jne
in
hlt
mov
sti
mov
push
cmp
sti
xchg
(bad)
test
push
mov
and
mov
mov
inc
pop
inc
jns
mov
pop
shr
add
add
dec
push
and
scas
mov
dec
add
adc
addr16
sbb
add
xchg
sub
xchg
mov
fs
(bad)
jmp
inc
or
nop
mov
mov
push
xchg
imul
mov
and
cmp
(bad)
cmp
test
les
js
mov
bound
cmp
dec
fadd
mov
mov
push
scas
add
sbb
mov
lea
cmp
inc
mov
movs
in
mov
pop
adc
jecxz
arpl
xchg
inc
mov
test
adc
dec
mov
inc
mov
jg
cmp
push
push
jmp
cmp
jne
push
or
std
xchg
pop
xchg
je
(bad)
neg
pop
xchg
xchg
xlat
or
(bad)
pop
inc
jo
and
push
je
shr
sub
xlat
add
mov
dec
outs
jns
and
int3
daa
fwait
rol
or
xor
xchg
hlt
adc
repnz
fcomp
xchg
add
sub
mov
jle
mov
sub
lea
popf
add
test
mov
and
rcr
mov
dec
out
mov
and
je
pusha
add
cs
enter
add
mov
xchg
mov
inc
cmp
adc
pusha
sbb
lods
sub
xchg
sub
mov
sbb
jae
aad
pop
out
movs
jb
sbb
push
in
inc
scas
imul
jmp
je
mov
inc
mov
push
jb
push
xchg
loopne
add
jmp
xlat
das
mov
sub
xchg
ins
add
xor
jnp
cwde
repnz
sbb
push
in
lods
test
sub
sbb
and
mov
cli
data16
fild
add
xor
mov
call
adc
fcom
sub
add
or
or
and
retf
pop
sub
push
mov
push
les
adc
lock
adc
pop
inc
mov
popa
mov
jo
xor
fmul
cwde
sbb
adc
push
fcmovu
cmp
adc
and
adc
xchg
mov
adc
sbb
std
cmc
pop
mov
movs
loop
out
xor
mov
sub
or
pop
pop
daa
pop
mov
jmp
or
js
cmp
add
scas
and
nop
dec
xchg
add
ja
add
inc
add
pop
xchg
inc
sub
dec
and
dec
jo
add
scas
and
ret
and
(bad)
test
test
sbb
jbe
and
mov
jne
inc
and
call
adc
sub
jae
and
and
in
cmp
ret
loopne
int3
mov
jmp
mov
aam
sahf
pop
push
cli
and
and
pop
add
loope
cdq
aaa
fisub
test
dec
cli
jne
mov
jmp
sub
iret
push
clc
push
inc
pop
mov
(bad)
std
adc
add
or
sar
mov
loope
fist
mov
gs
inc
cmps
test
les
mov
and
and
adc
lock
lods
sub
nop
in
fisub
jmp
mov
shr
adc
lods
adc
push
retf
jge
mov
sbb
lods
sbb
sub
iret
or
add
jno
sti
test
cmp
jmp
xor
ss
add
retf
dec
add
call
loopne
xor
lea
dec
ret
push
xor
sbb
das
cmps
lea
int3
into
movzx
rol
mov
ja
or
pop
mov
cmps
imul
lds
mov
add
or
jno
je
jnp
sub
mov
dec
fdivr
test
mov
ins
or
add
pop
hlt
inc
ins
xchg
mov
jl
loope
cmp
lods
fld
call
ins
ja
jmp
adc
popa
repz
or
pop
imul
mov
mov
inc
mov
fs
mov
jecxz
adc
test
lock
inc
pop
cmp
test
push
leave
fld
les
enter
push
aad
xor
xchg
sbb
in
adc
or
cmp
adc
push
push
mov
inc
js
xor
fstp
inc
test
movs
mov
push
pushf
sar
out
jmp
push
lods
pop
dec
sub
xchg
je
mov
fldenv
shl
sbb
popa
or
add
popa
sub
sub
in
lock
idiv
sub
push
sbb
mov
mov
xchg
mov
dec
hlt
aas
sub
push
je
add
ds
xlat
mov
jne
push
xor
movs
add
xor
test
ja
xor
lods
mov
push
fcmovbe
fchs
loope
adc
jp
xchg
rcl
or
ins
fmul
test
test
push
adc
mov
jnp
adc
test
loope
or
das
add
or
dec
mov
xchg
stc
adc
push
aad
sar
add
sbb
lods
dec
adc
cmp
dec
mov
imul
and
or
dec
adc
sti
adc
inc
ret
dec
add
sub
scas
rol
or
movs
je
jg
push
int
sub
add
add
and
inc
jl
mov
loopne
pop
add
add
mov
nop
or
inc
aaa
or
or
and
enter
inc
imul
xchg
fnstenv
xlat
mov
nop
cmps
inc
shr
jo
adc
dec
lods
test
sub
call
test
or
ret
adc
adc
cmp
sbb
dec
mov
add
push
rol
adc
jno
cvtdq2ps
loope
(bad)
outs
es
xor
or
sub
mov
sbb
out
xchg
inc
addr16
call
aas
pushf
xchg
and
add
js
jl
call
mov
xor
or
fisub
rol
sahf
sar
inc
retf
mov
or
mov
lfs
dec
or
pop
pop
pop
ret
inc
(bad)
sub
cmp
dec
pop
sbb
xchg
in
data16
fucomip
or
movs
adc
enter
rol
pusha
mov
aam
scas
fcomp
push
scas
in
push
ret
cmp
repz
jae
xchg
fwait
movs
xchg
sbb
pop
or
shr
add
je
push
and
lahf
cmp
add
dec
scas
int
mov
jns
push
ds
ret
jg
or
push
popa
and
push
jno
test
imul
or
jnp
xor
into
xchg
inc
jbe
xchg
daa
daa
mov
aas
sub
xchg
xchg
pushf
aad
lds
stos
cmp
inc
in
xor
sbb
dec
or
jns
ror
fwait
dec
or
mov
loopne
or
add
shl
adc
add
dec
dec
inc
sbb
(bad)
mov
or
xor
retf
movs
push
loopne
jle
inc
cmp
nop
adc
pusha
mov
xchg
into
push
pop
add
sbb
xchg
add
and
add
ds
stos
aaa
nop
push
cmp
cmp
fcom
cmp
inc
sub
xor
and
adc
test
sbb
or
iret
cmp
sub
imul
inc
das
lods
and
les
outs
xchg
push
add
push
fst
inc
mov
cmp
pop
dec
es
mov
push
mov
out
inc
mov
out
adc
adc
in
add
imul
sbb
int
gs
test
mov
or
into
xchg
xor
add
sbb
ficom
pop
inc
stos
out
push
or
loope
push
push
rcl
add
mov
push
add
ror
push
jle
in
jae
lea
push
xor
mov
inc
mov
jns
js
dec
stc
fild
dec
fmul
je
fcomip
ins
mov
cmovs
jno
shl
inc
jp
or
cmps
or
xchg
retf
mov
xor
movs
jb
mov
test
xor
pushf
pop
cwde
push
or
jle
mov
mov
jecxz
mov
push
pop
dec
sbb
mov
pop
inc
mov
or
inc
ja
aaa
inc
pop
lahf
jle
jmp
movs
fsub
jge
mov
sub
or
dec
call
les
jne
ins
mov
mov
mov
adc
dec
fist
inc
sbb
sbb
fmul
int
rcl
and
int
outs
add
dec
xchg
lods
stc
mov
and
sbb
fnstenv
xchg
dec
jb
pop
push
pop
dec
mov
pop
adc
cmp
mov
or
mov
test
dec
cs
retf
dec
je
je
inc
int
inc
inc
inc
push
jo
adc
repnz
sbb
in
movs
inc
inc
mov
movs
or
lock
cmp
xor
xchg
mov
jge
pop
popa
test
mov
(bad)
sub
xchg
sar
pop
pop
push
and
arpl
xor
das
out
xchg
test
ds
popa
xchg
inc
push
retf
inc
icebp
or
adc
and
dec
inc
push
cmp
dec
xlat
mov
push
add
icebp
fsubr
pushf
mov
lds
adc
retf
ret
push
inc
adc
jns
inc
jmp
xchg
(bad)
push
xlat
dec
or
and
inc
mov
inc
test
test
mov
sub
sub
int
shl
mov
xchg
inc
test
add
int3
xchg
arpl
xlat
movs
xor
inc
cmp
cs
shl
dec
cmp
adc
xor
jno
inc
jmp
fmul
dec
sbb
pop
fbstp
stos
jae
or
aas
in
dec
or
sbb
and
jno
mov
loopne
push
xchg
int3
add
xor
add
popa
jbe
es
mov
mov
inc
xor
mov
sub
push
aaa
adc
xor
inc
daa
inc
(bad)
inc
pop
xor
pop
lock
inc
jbe
ss
and
mov
xchg
push
ds
nop
push
fidiv
imul
add
popa
add
or
and
xchg
mov
add
inc
ins
xchg
or
test
xchg
lea
xchg
shl
or
out
mov
or
js
mov
pop
xor
out
mov
mov
iret
popf
add
fwait
ret
in
or
sub
add
jmp
aas
inc
sbb
push
not
jo
cmp
or
xchg
and
dec
je
adc
ins
inc
pop
mov
pop
aas
arpl
or
pop
push
cmp
ins
xor
sbb
or
sbb
rcl
inc
arpl
ds
hlt
rcl
mov
mov
lock
dec
loop
adc
in
cld
dec
cmp
shl
dec
cmps
call
pop
pop
jp
xchg
sti
inc
xchg
(bad)
xlat
mov
add
pop
sub
mov
dec
in
sub
adc
add
or
call
xor
(bad)
repnz
loopne
adc
sbb
call
rcl
push
mov
mov
addr16
in
cmp
fist
mov
loopne
pop
dec
push
jnp
bound
inc
das
cmp
and
xchg
ror
pusha
hlt
test
nop
gs
push
push
dec
fist
jbe
sub
pop
sbb
lea
or
sub
std
int
sbb
sub
ins
xchg
fbld
inc
or
fistp
and
inc
cmp
scas
push
or
push
enter
and
sbb
mul
adc
push
pop
das
sbb
ret
inc
mov
pushf
nop
mov
out
clc
ret
(bad)
add
call
(bad)
adc
and
fdivr
and
cs
push
mov
test
not
es
cs
mov
mov
iret
mov
or
ja
fiadd
mov
mov
and
dec
leave
jecxz
ret
xchg
fimul
ficom
push
adc
xlat
sub
enter
fbld
adc
mov
lea
das
in
pop
rol
and
push
pop
cmp
cmps
inc
shr
rcr
adc
mov
movs
push
out
lods
pop
add
xor
pop
or
pop
inc
sbb
inc
cdq
lea
push
and
pop
fcom
add
dec
aas
add
add
push
mov
mov
leave
push
leave
or
jmp
pop
pop
pop
pop
call
add
jmp
scas
retf
fisub
adc
mov
stos
add
mov
mov
dec
mov
sbb
adc
mov
add
test
les
aaa
add
xor
and
inc
inc
imul
sub
daa
inc
or
inc
adc
xor
in
mov
outs
xor
sbb
in
inc
sbb
pop
sub
clc
test
and
pop
adc
js
cld
jo
inc
mov
cmp
inc
or
cs
push
jo
mov
add
call
add
aam
inc
mov
xor
pusha
inc
jo
or
jmp
inc
mov
jmp
cld
jo
mov
cmp
xor
jo
or
les
icebp
loop
and
pop
jg
adc
pusha
jecxz
mov
inc
xor
rcr
mov
out
sub
ja
lea
push
inc
adc
cmp
adc
neg
sbb
add
and
add
or
inc
sbb
sub
leave
xor
xor
mov
or
outs
or
jge
mov
or
xchg
gs
fwait
inc
and
inc
popa
es
push
movs
add
push
sar
es
imul
adc
adc
jb
adc
xchg
sbb
cdq
adc
push
xchg
pop
and
cld
shl
ss
sub
adc
fs
dec
jb
test
shr
push
push
call
retf
sbb
dec
cmp
ja
rcl
push
bound
dec
dec
sti
mov
and
or
and
push
push
push
xchg
pop
dec
cmp
es
xchg
neg
sbb
add
add
mov
xlat
es
cmp
xor
sahf
push
dec
loope
push
aas
push
or
mov
inc
popa
push
bound
mov
add
jge
cmp
ss
cs
mov
cmps
imul
adc
adc
add
shl
pop
xchg
sbb
stos
inc
cmp
iret
sbb
push
xchg
xchg
cli
adc
dec
sbb
in
data16
imul
outs
nop
shr
imul
fidivr
inc
and
and
cli
aas
add
lock
xchg
shl
and
nop
xchg
dec
jno
movs
fisttp
mov
mov
int
into
adc
ror
mov
repz
adc
movs
cmps
ret
adc
and
lds
jnp
add
retf
mov
jno
adc
imul
mov
inc
std
add
cmp
and
xchg
push
jo
aaa
inc
je
cli
fsub
add
jmp
or
test
jae
dec
push
das
push
and
adc
(bad)
jg
adc
adc
je
push
push
xchg
xor
and
or
mov
cdq
or
and
(bad)
fcom
cmp
mov
cmp
and
push
mov
sbb
xchg
cmp
adc
popa
or
outs
jo
xor
dec
mul
movs
adc
repnz
add
aaa
sbb
hlt
mov
jmp
pushf
dec
inc
cs
and
pusha
je
arpl
mov
and
cld
daa
inc
repnz
aad
bound
xchg
sbb
jge
enter
clc
cli
xchg
inc
adc
mov
cwde
fcomi
or
cmps
xor
fs
add
(bad)
in
clc
sub
adc
clc
cld
pop
(bad)
out
mov
call
mov
inc
cld
and
ins
push
sbb
sbb
and
jecxz
nop
xchg
retf
cld
cld
dec
xchg
andps
mov
clc
pop
int3
add
fwait
sahf
dec
mov
pushaw
mov
es
in
inc
inc
and
(bad)
out
lods
mov
sub
sbb
inc
jp
cmp
jmp
clc
push
data16
or
inc
jecxz
mov
pop
push
jae
shr
test
or
xor
adc
outs
cmp
mov
dec
jl
sub
shl
aaa
imul
test
clc
push
xchg
je
shr
clc
jbe
popf
push
sub
xchg
inc
jg
(bad)
iret
jnp
jnp
push
test
out
call
imul
inc
xchg
dec
adc
pop
mov
inc
and
popf
ret
lods
dec
fisttp
inc
mov
in
in
pop
test
int3
inc
cmp
cli
mov
pushf
out
test
mov
cmp
test
inc
and
xchg
sbb
sbb
outs
pop
or
fisttp
aad
jmp
je
call
sbb
out
jb
fsubr
je
stos
jmp
stc
push
inc
sbb
mov
push
adc
fsubr
outs
lods
imul
sub
ins
push
jl
movs
cmp
inc
pop
pop
aas
sbb
sub
jb
pop
call
xchg
retf
in
je
add
jne
call
sbb
mov
mov
cli
adc
adc
inc
aam
sti
retf
sbb
pusha
push
adc
inc
(bad)
int
mov
emms
or
fidiv
jp
pop
or
popa
bnd
fwait
adc
push
adc
les
stc
test
jne
jno
js
(bad)
mov
sub
psubw
add
ret
and
and
jo
(bad)
ret
jo
mov
dec
and
ins
push
inc
inc
ins
retf
add
add
dec
mov
ds
pop
sub
sbb
jle
out
add
mov
fsubr
sub
jmp
in
repnz
sub
push
xchg
pushf
push
inc
push
cmp
fs
movs
loopne
mov
fs
jb
xchg
dec
fs
pop
pusha
dec
xor
in
pop
inc
pusha
inc
push
cmps
and
xchg
pop
push
pop
rcl
add
jnp
out
push
and
inc
pusha
and
(bad)
daa
cli
xor
jae
or
dec
into
mov
pop
js
or
jne
sub
out
pcmpeqd
fbld
cmp
pop
pop
mov
aam
dec
fdiv
hlt
xor
jno
les
movs
add
hlt
mov
cmp
xor
ja
xchg
mov
aad
in
and
(bad)
and
or
add
push
push
arpl
xlat
jb
repnz
repz
cld
call
iret
pop
test
cwde
jno
in
fnsave
inc
or
leave
test
imul
add
gs
div
push
pop
aad
jg
mov
mov
(bad)
xchg
inc
outs
enter
jo
push
into
hlt
push
push
mov
push
or
fbstp
or
pop
cwde
mov
or
(bad)
ret
lock
nop
push
fild
and
enter
push
sbb
cmps
hlt
sub
cmp
stos
aam
add
pop
fidiv
lahf
ds
loope
mov
pop
cmps
pusha
pop
sahf
outs
push
and
movs
lock
or
adc
cmps
mov
pop
pop
mov
jmp
xchg
gs
aaa
cmp
xlat
repnz
lock
jo
cmp
sub
push
test
dec
pop
cmp
popa
cmp
mov
pusha
sbb
inc
imul
cmp
jb
pop
repnz
popa
push
(bad)
lock
and
popa
add
push
jp
xchg
ja
les
ins
add
adc
xchg
mov
inc
enter
push
jno
inc
push
jnp
test
mov
cs
fs
or
and
push
sbb
or
outs
push
push
dec
pop
(bad)
je
add
mov
(bad)
adc
adc
daa
mov
sbb
inc
adc
and
cdq
mov
mov
or
aaa
es
fnstenv
adc
cwde
cmp
or
mov
sub
or
xor
test
or
sbb
aas
jmp
arpl
jg
jp
add
cs
aam
fldcw
stc
push
sahf
loope
dec
or
and
adc
movs
enter
pop
adc
hlt
push
leave
add
ja
movs
dec
and
cwde
ror
(bad)
mov
or
clc
sbb
cmp
jmp
imul
jge
mov
ret
jns
mov
imul
inc
inc
jge
fdivr
je
jns
sbb
sub
or
push
in
jg
ds
add
push
test
mov
sub
inc
push
mov
push
add
push
add
push
cmp
pop
cmp
push
or
push
cmp
and
push
jo
push
test
pop
in
dec
push
mov
push
add
push
retf
pop
jl
push
push
push
push
(bad)
ror
push
js
jb
mov
hlt
jne
mov
repnz
fs
es
push
ss
int
test
sub
aam
push
inc
cld
mov
mov
dec
xchg
scas
jns
popf
jl
add
push
ds
sub
dec
mov
cvttps2pi
mov
dec
xor
rcr
dec
xor
xchg
mov
cmp
pusha
push
movs
inc
fild
mov
push
mov
and
outs
xchg
adc
rcl
sbb
mov
add
adc
call
inc
xchg
jne
xor
mov
xchg
es
mov
add
add
and
ds
jne
jne
xchg
xchg
ret
cmp
int
adc
mov
pusha
add
push
mov
jmp
retf
std
retf
int3
enter
test
sub
cmp
jge
enter
push
or
xor
ins
test
sub
mov
add
xor
or
sbb
or
mov
jbe
lods
adc
jo
dec
push
aas
aas
add
dec
pop
add
jle
adc
dec
je
repz
cmp
popa
ror
ret
dec
sbb
add
in
fwait
sub
mov
mov
dec
xor
loope
add
pusha
sub
add
dec
inc
and
(bad)
in
pop
in
clc
mov
adc
pushf
pop
dec
cmp
int3
sub
xor
in
shr
and
repnz
and
call
jns
lods
pop
jecxz
pusha
aam
push
or
loope
inc
xchg
outs
mov
jp
or
cmp
rcr
pop
je
cmc
inc
mov
cmps
cmp
es
fbld
adc
test
push
lods
cmp
hlt
xor
mov
pop
int
dec
jae
mov
mov
sub
mov
and
xchg
fcomp
loopne
mov
fnstcw
and
dec
scas
lock
xchg
mov
xchg
or
mov
cmps
es
or
push
sbb
fadd
out
pop
push
ss
mov
mov
pop
jae
ja
pop
daa
dec
add
add
ins
xor
xlat
inc
nop
mov
das
push
cmp
sub
jns
dec
add
or
mov
cs
push
push
aaa
movs
mov
or
cmps
cmp
add
mov
lds
jne
dec
add
outs
push
daa
jl
imul
sub
ret
iret
or
pop
dec
xchg
push
imul
push
pusha
xor
jnp
retf
adc
xlat
loope
ja
les
or
dec
nop
or
ins
sbb
push
les
das
push
and
les
das
sbb
sbb
hlt
push
fwait
adc
or
and
sub
push
and
sbb
rcr
in
daa
daa
int
cmp
loopne
fcomp
pushf
fcmovnb
(bad)
jge
cmps
mov
or
enter
fadd
lahf
dec
sub
inc
cmc
jae
mov
jo
dec
adc
push
mov
push
dec
pop
or
push
ror
jb
adc
pop
loop
stos
jne
fisttp
xchg
sub
mov
mov
call
fild
sbb
and
test
movs
scas
or
pop
jl
test
aam
retf
hlt
xchg
pop
test
xor
adc
pop
sub
ror
dec
jmp
inc
lds
mov
push
xor
adc
clc
xchg
mov
pop
test
push
gs
adc
cmp
int3
rol
mov
and
cmp
and
add
mov
jge
les
mov
sub
push
popa
add
inc
inc
shl
rcl
xor
add
dec
push
mov
shl
ret
mov
enter
push
jmp
adc
shr
cmp
sbb
add
add
add
add
push
adc
xchg
mov
cmova
fldenv
int3
add
nop
push
cmp
stc
inc
pop
xchg
sbb
mov
sbb
pusha
cmp
mov
sbb
and
push
xor
(bad)
or
mov
ret
and
imul
push
imul
add
and
jg
and
or
dec
push
in
je
dec
or
pusha
mov
lahf
or
es
lds
ja
in
fstp
loopne
cmp
pusha
sub
xchg
mov
dec
add
add
mov
mov
pop
mov
push
sbb
dec
jae
mov
test
inc
mov
add
push
mov
fadd
xchg
fisttp
scas
or
sbb
pushf
sub
cmp
cmp
xor
popa
sbb
out
inc
gs
mov
enter
mov
sub
cmp
test
pop
adc
cmp
xchg
sub
addr16
mov
shr
jne
sub
add
fisttp
call
xchg
mov
aam
jo
jo
add
mov
mov
mov
mov
popf
out
sbb
add
pushf
jmp
xor
mov
add
and
inc
adc
or
dec
dec
sbb
sub
mov
and
mov
mov
add
add
ds
in
adc
je
add
shr
icebp
cmp
or
jne
imul
repnz
scas
adc
add
mov
cmp
cmp
mov
into
add
and
xchg
(bad)
cmp
push
ds
mov
add
(bad)
mov
jb
and
pop
dec
repz
dec
cld
inc
rol
lahf
push
dec
or
lods
mov
and
loop
sub
cmp
and
and
sbb
or
push
jmp
sub
inc
cmp
rcl
out
test
adc
cdq
or
push
adc
cmp
shr
or
xchg
or
mov
movs
inc
add
add
imul
fmul
in
call
pop
lock
outs
jno
loope
shr
sbb
add
jmp
push
or
or
test
jbe
enter
inc
repnz
test
mov
xchg
add
test
aaa
push
fs
adc
and
(bad)
call
loope
lock
lods
test
(bad)
cmp
enter
je
popa
mov
dec
cmp
jno
adc
call
mov
sub
sbb
adc
push
test
sub
push
and
dec
out
popf
sub
pop
pop
adc
push
inc
sbb
fimul
sub
sub
sub
xchg
clc
test
jnp
add
ret
fwait
js
inc
lods
cmps
loop
test
inc
cmc
xchg
daa
xchg
lods
cmp
jo
jl
fadd
sti
cwde
and
imul
push
movups
xchg
xor
adc
stc
mov
test
movs
test
leave
adc
add
mov
dec
pusha
add
push
mov
inc
sahf
pop
or
hlt
dec
push
push
mov
inc
or
add
sbb
pop
shl
sbb
aaa
movs
outs
imul
fistp
dec
mov
rcr
sar
movs
rol
xor
xchg
mov
jp
ins
ja
jae
jp
pop
adc
test
movs
or
push
add
shr
adc
xchg
add
popa
push
stos
sbb
test
out
inc
inc
or
pop
inc
cmp
stos
and
xchg
lea
cmp
fdivr
scas
movzx
not
adc
mov
add
cmp
adc
push
inc
sbb
push
retf
mov
push
jo
add
and
adc
pop
iret
push
pop
sub
lock
test
adc
fdivr
adc
hlt
ret
push
movs
adc
xor
dec
cld
popa
or
or
popa
loop
rol
and
jbe
xlat
fs
adc
sub
cmp
or
bound
push
sbb
loopne
push
and
sub
out
add
outs
add
or
hlt
push
add
and
imul
mov
cli
gs
repnz
dec
test
test
ss
daa
or
push
loopne
movs
or
in
push
add
adc
popf
sbb
add
push
cmovbe
jae
inc
test
dec
repnz
nop
out
xor
nop
test
imul
pop
or
(bad)
fiadd
mov
push
retf
xchg
inc
mov
and
ins
or
sub
shl
dec
push
push
outs
sbb
inc
dec
jmp
fsubr
add
outs
call
mov
pusha
dec
lock
jo
add
lea
or
addr16
sub
ret
cmp
adc
xchg
out
xor
xor
add
adc
daa
imul
and
add
add
push
sub
mov
jg
cdq
int
jns
and
(bad)
repz
std
loope
push
and
push
or
cs
popf
jnp
pushf
inc
xchg
pop
push
add
adc
cmps
out
cmc
rcl
push
jg
sbb
daa
mov
dec
xchg
pop
dec
lock
jb
ss
bound
xor
adc
push
sub
or
or
fadd
sbb
mov
push
or
setb
adc
leave
adc
fwait
or
xchg
outs
xchg
jb
ror
dec
jle
inc
adc
inc
lock
add
aaa
mov
int
pop
jo
adc
mov
clc
jecxz
cwde
inc
(bad)
(bad)
add
clc
push
js
call
pop
push
inc
test
mov
aas
into
ja
cmp
shr
adc
dec
cmp
xor
mov
imul
pop
shl
dec
adc
add
add
mov
mov
xor
fstp
pusha
adc
test
dec
xor
rcr
jo
dec
add
loope
adc
inc
or
dec
inc
and
cmp
inc
or
and
push
mov
add
add
retf
fiadd
add
and
add
cmp
and
test
inc
xor
adc
add
mov
cdq
adc
gs
aaa
shl
mov
cmp
dec
xchg
pop
xchg
xchg
xchg
add
adc
pusha
loopne
or
mov
add
aad
stos
or
inc
mov
add
popa
clc
and
cwde
jl
jno
shl
push
adc
inc
rcr
adc
add
add
loop
bound
ret
or
sbb
inc
dec
lea
sbb
iret
pusha
(bad)
xor
push
cmps
add
add
add
add
adc
lods
push
push
daa
arpl
fucomip
daa
mov
aad
mov
jle
imul
dec
xchg
icebp
adc
mov
xchg
imul
(bad)
cmps
dec
jb
hlt
push
cmp
dec
adc
sti
pusha
cli
cmp
clc
out
dec
or
lahf
xchg
mov
test
and
ins
adc
inc
retf
mov
and
adc
inc
call
stc
in
movs
nop
(bad)
loope
cmp
pop
mov
or
add
push
jbe
lds
sahf
push
dec
add
ret
(bad)
stos
(bad)
pop
inc
jmp
(bad)
push
sub
add
adc
pop
int3
lods
jmp
lea
push
sub
pop
sbb
and
call
adc
jmp
mov
sub
sti
add
inc
inc
cmp
nop
les
cmp
push
add
adc
and
aaa
jns
pop
xor
dec
hlt
push
lods
or
sub
pop
mov
sub
and
xchg
inc
xchg
pushf
ret
pop
stos
pop
or
fsub
sub
leave
add
adc
rcl
add
mov
add
inc
out
pop
xor
xlat
sti
lock
ins
sbb
push
stc
push
dec
push
ret
test
leave
dec
jne
pop
add
cmp
push
cmp
dec
sbb
or
fdivr
inc
ret
add
sar
add
add
jbe
inc
inc
bound
and
jb
sub
inc
push
sbb
sub
add
add
les
or
or
shl
pusha
aaa
les
lock
add
sbb
das
push
push
dec
dec
aas
add
add
sbb
mov
jl
dec
loopne
rol
jecxz
sub
ret
nop
dec
je
adc
or
sub
in
test
test
add
sub
addr16
mov
push
ja
or
add
pop
mov
fwait
pusha
sbb
pop
and
ucomiss
and
sub
cmp
xor
xor
inc
das
or
(bad)
out
push
mov
xchg
jns
das
scas
jge
cmp
sbb
push
sub
push
mov
add
enter
sbb
and
xchg
jnp
int3
sbb
xchg
or
mov
mov
sbb
sbb
xchg
sbb
imul
or
lods
and
push
adc
lods
add
adc
inc
leave
xor
adc
or
js
sbb
pop
dec
adc
dec
clc
shl
or
xor
test
push
xchg
jle
and
and
jb
adc
add
mov
test
xchg
pusha
bound
push
sbb
aam
sahf
outs
ret
xor
jno
loop
mov
in
mov
pop
push
mov
mov
mov
pop
add
inc
aad
sbb
jno
xchg
aad
lahf
cmps
mov
push
pop
xor
jmp
xor
addr16
xor
jae
pop
mov
xlat
mov
dec
push
pusha
and
in
pushf
jmp
and
lods
inc
push
nop
push
scas
push
cdq
adc
test
pop
xor
enter
xor
nop
ja
jae
arpl
imul
cmp
cdq
add
in
add
cmps
add
das
in
in
jmp
jo
call
bswap
loopne
mov
inc
and
xor
fcomp
cmps
push
push
add
movs
inc
lock
xchg
or
xor
mov
inc
mov
pop
adc
sub
cmc
mov
mov
fiadd
out
fs
or
jae
ret
xchg
sbb
outs
aas
jo
ret
ficom
addr16
stos
push
adc
push
cmps
cmp
rcr
stc
push
dec
xchg
in
cs
fwait
call
sbb
pop
cmp
inc
fs
ds
fmul
pushf
aam
loop
jl
cdq
sar
ins
push
cs
dec
sahf
int3
enter
lods
(bad)
int
mov
adc
fisub
clc
sbb
xchg
and
shr
cwde
inc
push
and
jnp
push
test
dec
cs
or
aam
ss
mov
mov
xchg
jp
add
pop
clc
dec
add
xor
cmp
fs
hlt
push
or
push
add
or
fucom
push
add
jo
add
iret
sahf
sbb
es
sbb
pop
mov
sbb
push
and
inc
and
punpcklwd
adc
mov
sub
xor
push
adc
sub
aaa
pop
or
in
dec
push
add
lea
cmp
add
xchg
and
adc
adc
popa
mov
inc
or
sbb
stos
mov
bndldx
dec
cmp
test
sbb
mov
mov
pop
scas
xchg
or
sub
cmps
xchg
test
push
sbb
and
and
sub
fiadd
loopne
jmp
sbb
add
and
cs
mov
enter
sub
add
or
enter
daa
cmp
pusha
and
jmp
enter
shl
enter
sub
push
jnp
enter
ret
out
sub
enter
pop
test
iret
icebp
pop
sub
or
sbb
sub
push
sbb
xor
aam
inc
sahf
mov
push
dec
xchg
daa
sbb
dec
pop
dec
js
jb
mov
inc
xlat
or
fwait
add
js
enter
je
and
cmp
cmps
gs
and
mov
ins
xor
add
push
pop
retf
add
mov
and
rol
cmp
mov
outs
jb
add
mov
cs
jnp
dec
fld
sub
push
mov
inc
jo
leave
ss
xchg
ret
cs
and
ins
add
jg
aad
push
and
and
repnz
data16
outs
sub
enter
(bad)
adc
xor
mov
in
adc
mov
xchg
inc
jne
pop
xchg
lahf
adc
aas
sbb
push
loopne
sbb
jo
xchg
out
pop
or
cwde
nop
pmaxub
pop
sbb
jb
test
rcr
jae
lock
es
nop
rcl
pop
retf
push
or
sbb
dec
or
and
add
and
scas
xchg
stos
and
mov
cmps
xchg
sub
sub
inc
push
inc
sub
push
inc
push
inc
cs
test
push
in
shr
jae
add
mov
and
leave
cs
inc
or
cs
jne
inc
inc
inc
call
inc
cs
pop
jp
cs
inc
inc
(bad)
xor
inc
inc
inc
inc
push
jb
mov
loop
xor
inc
inc
inc
inc
je
ret
inc
cs
rdpmc
ss
sub
xor
inc
enter
xor
and
fist
sbb
or
int
add
xchg
jae
(bad)
pusha
jg
sahf
xchg
pop
push
add
adc
bound
call
or
push
xor
sbb
enter
test
mov
lds
cwde
shl
lahf
jb
mov
and
push
aaa
push
fsub
xchg
pmaddwd
add
mov
aaa
dec
push
inc
repnz
jl
add
adc
pop
and
jl
sbb
push
popa
ss
xchg
push
mov
mov
cmp
pop
test
push
sbb
push
jb
or
adc
push
jb
pop
adc
and
dec
adc
rcl
repnz
iret
test
jmp
and
ins
jb
dec
sbb
data16
in
enter
mov
push
cmp
enter
dec
imul
cmp
jnp
cwde
cmp
xor
xor
or
arpl
or
inc
clc
xchg
add
inc
mov
pop
xchg
and
xchg
cmp
add
and
dec
out
xchg
test
in
cmp
fistp
mov
loop
ss
push
xor
cmp
and
add
pop
rol
pop
xchg
jae
enter
add
pop
repnz
fsubr
jo
or
je
inc
and
pop
call
mov
nop
xchg
cmp
cmp
fwait
ds
cmp
sar
adc
and
ds
ins
dec
jns
pop
and
imul
mov
sbb
cmp
xchg
aaa
push
stc
fnstenv
lods
nop
adc
and
shr
adc
add
add
add
nop
inc
es
test
mov
sahf
sub
sub
lea
mov
mov
in
aaa
xor
test
mov
mov
(bad)
(bad)
or
pusha
dec
pop
lea
mov
xchg
nop
in
push
jno
cmps
pop
and
fist
imul
xchg
push
test
ds
push
adc
cmovp
jmp
xlat
xor
dec
iretw
repz
call
call
jp
jmp
js
leave
test
xchg
pusha
mov
dec
jge
cmps
rol
mov
pop
fcmovnb
jbe
mov
mov
jno
stc
adc
inc
pop
add
(bad)
(bad)
(bad)
inc
dec
inc
pop
add
mov
(bad)
inc
cmp
dec
mov
adc
jo
outs
cmps
pop
sbb
dec
push
inc
out
mov
(bad)
cld
push
stos
push
add
xchg
test
dec
adc
or
imul
adc
fiadd
or
push
push
adc
mov
stos
in
pop
sbb
push
push
sbb
jo
out
xchg
dec
test
or
xchg
fwait
outs
sbb
sahf
or
pop
sbb
test
sbb
rcr
adc
or
sub
adc
xchg
std
leave
add
sub
inc
and
xchg
mov
and
popa
inc
mov
sbb
sbb
daa
mov
mov
push
mov
sbb
lods
in
add
sub
scas
or
sub
inc
sub
inc
push
sub
push
das
pop
xor
nop
int3
sub
mov
cwde
inc
jecxz
mov
xchg
mov
sub
xchg
in
adc
or
mov
ucomiss
sbb
sbb
cmp
dec
and
enter
mov
daa
outs
adc
push
in
mov
cmp
add
shr
push
jb
inc
scas
xchg
or
xlat
inc
inc
add
dec
inc
jnp
cmps
xchg
stos
inc
inc
mov
inc
inc
es
cmps
xchg
dec
dec
dec
inc
xchg
cmovnp
inc
push
dec
dec
inc
push
inc
push
dec
dec
and
(bad)
push
adc
push
xchg
add
push
pop
xor
loopne
pop
dec
and
fild
inc
or
xchg
and
repnz
inc
cmp
and
and
test
xchg
and
inc
cmp
and
and
mov
mov
mov
popa
or
mov
sub
movs
retf
mov
cli
pop
inc
dec
ins
mov
cli
mov
push
mov
out
inc
mov
into
mov
repz
pusha
mov
out
mov
lea
xlat
cli
and
pop
mov
hlt
arpl
add
add
repz
nop
cmp
pop
stos
dec
data16
or
in
xor
sub
sbb
add
dec
jge
cmp
fistp
push
push
sahf
push
outs
dec
daa
mov
push
lods
mov
cmp
dec
aam
div
jne
jno
test
jle
mov
pop
test
aas
or
les
mov
repz
xchg
bound
or
cdq
inc
nop
out
or
xchg
xor
cwde
fmul
sub
lods
inc
xor
inc
in
fst
ret
push
push
mov
inc
loop
and
adc
or
lods
nop
pop
or
into
mov
rcr
or
pop
add
mov
xchg
nop
or
push
xor
dec
inc
cmp
adc
inc
add
dec
and
cmp
xor
push
dec
test
add
mov
dec
or
into
int
scas
minps
or
adc
adc
dec
dec
xchg
cmp
push
out
outs
imul
and
xchg
xchg
loop
dec
cs
fadd
xchg
and
daa
pop
(bad)
xchg
mov
inc
ins
inc
inc
pop
push
pop
cmp
cmps
mov
pop
pushf
and
push
addr16
and
and
xchg
push
dec
ins
mov
aam
pop
push
inc
and
and
data16
and
cmp
pop
mov
inc
cmc
in
ja
push
dec
cmp
call
dec
(bad)
push
jb
gs
pusha
in
jo
or
cmp
jbe
lds
inc
or
or
pop
cmps
shl
test
pushf
cdq
adc
pop
and
push
dec
and
dec
test
jmp
sub
sub
bnd
jne
sub
cmp
jo
jae
lea
mov
test
mov
mov
mov
ret
pop
and
add
push
jae
mov
ins
shl
or
inc
iret
fcmovu
xchg
push
jne
push
and
inc
dec
push
mov
xor
mov
(bad)
lds
outs
xchg
loope
or
sbb
add
adc
xor
push
icebp
cmp
inc
add
and
inc
or
xor
sbb
shl
and
push
fsub
imul
rcr
shl
addr16
or
xchg
pop
xchg
xchg
nop
or
xchg
ja
stc
imul
pop
call
hlt
inc
add
adc
mov
nop
into
and
mov
call
ffree
push
push
sahf
inc
clc
pop
and
inc
or
je
inc
inc
or
mov
inc
pop
jl
dec
push
and
sbb
add
mov
repnz
ins
mov
(bad)
icebp
pop
out
(bad)
xor
sub
fmul
or
jae
pushf
adc
icebp
xchg
lock
mov
inc
adc
dec
jmp
and
fcmovbe
sahf
mov
lods
sub
mov
cmp
dec
mov
fcom
mov
mov
loopne
popf
cmp
and
fidiv
ror
and
ret
pop
and
dec
loopne
push
sbb
pop
or
test
fcomp
mov
sub
and
les
pop
loope
add
xchg
jmp
out
sbb
mov
mov
adc
push
pop
mov
mov
add
cdq
cmp
jg
lock
je
jecxz
mov
jle
int3
jb
je
mov
adc
sub
aaa
adc
stc
adc
jl
mov
xor
inc
mov
std
out
outs
clc
lea
mov
push
add
dec
xor
jmp
mov
xor
bnd
mov
pop
and
or
or
push
sbb
jge
xor
and
test
or
mov
mov
lods
lds
lds
ins
and
fcmovnb
cmps
movs
call
mov
pop
or
inc
les
pop
cmp
and
push
ret
or
jns
mov
pop
dec
xor
mov
int3
pop
es
inc
cmp
add
adc
shl
add
add
int3
mov
dec
movs
or
(bad)
pop
add
daa
sbb
lods
push
mov
sub
sub
xor
imul
jecxz
adc
mov
sub
lods
sub
add
jo
arpl
inc
ficomp
sub
jle
push
imul
es
fsub
jmp
clc
mov
cmp
cmp
vfrczps
xchg
and
pop
ins
jmp
arpl
mov
fisub
mov
mov
ret
imul
iret
pop
sub
sub
test
data16
sti
dec
mov
add
jne
inc
pop
cmp
ret
jge
(bad)
retf
or
ficom
xlat
mov
pop
rcl
inc
dec
daa
and
pop
arpl
pusha
push
mov
mov
push
xchg
mov
xchg
push
cmp
mov
xor
pop
pop
push
or
fisub
pop
pop
or
jmp
mov
mov
or
retf
sar
sbb
cmp
aad
or
ror
rol
cmp
dec
cs
cs
retf
int
mov
ret
es
clc
xchg
(bad)
jg
shr
pop
dec
pop
daa
or
das
and
in
cmp
sub
retf
cmp
inc
xchg
lods
dec
inc
cli
aaa
sbb
fisubr
cmp
xchg
test
sbb
xor
stos
in
dec
adc
jne
pop
and
push
cli
xchg
retf
push
mov
jno
das
dec
mov
sub
jg
rol
mov
push
cmp
bound
cld
push
jl
mov
inc
sbb
pop
dec
pop
add
dec
pop
and
lds
adc
mov
jne
xchg
inc
cs
in
inc
cmp
sbb
loopne
cmp
xor
sub
test
daa
jo
mov
adc
in
dec
inc
mov
xor
gs
or
or
lods
adc
arpl
lods
pop
lods
mov
repnz
ja
or
mov
dec
cmp
sub
mov
idiv
jb
nop
mov
or
shl
mov
mov
inc
pop
mov
rcl
xchg
inc
sbb
fadd
xor
cwde
(bad)
shr
sub
in
daa
mov
xor
rol
sbb
int3
outs
mov
sbb
retf
hlt
movs
imul
aam
pop
or
fsub
rcr
cmps
aam
in
fdiv
adc
rcl
jmp
adc
sbb
push
fdiv
rol
(bad)
in
adc
sub
sub
(bad)
out
xchg
dec
in
xchg
(bad)
stc
(bad)
js
mov
push
jne
mov
mov
push
adc
outs
adc
fistp
outs
fcomp
ins
stos
adc
sub
jbe
push
daa
mov
sbb
cdq
add
xchg
sbb
jbe
xchg
mov
sub
(bad)
lods
jne
aad
leave
ins
xchg
call
dec
outs
mov
push
or
xchg
add
repz
popa
mov
push
loop
sahf
jle
out
push
or
in
clc
imul
dec
pop
dec
adc
cmp
xor
inc
sbb
mov
fdiv
arpl
bound
int3
and
mov
xchg
mov
xchg
loop
xor
sub
and
xor
imul
push
xlat
mov
jnp
sub
mov
cmp
xchg
sbb
fsubr
cmps
gs
shl
mov
dec
pop
dec
cmp
adc
imul
dec
xchg
dec
inc
jg
cmp
and
xor
sbb
add
aaa
jle
fcom
xlat
xchg
outs
adc
push
cmp
movs
adc
test
call
(bad)
stos
pop
pop
xor
icebp
inc
loop
(bad)
adc
add
and
rdpmc
jmp
jo
mov
push
push
sub
aad
les
xor
outs
fmul
mov
ret
nop
mov
pop
or
in
adc
loop
(bad)
xor
xchg
and
and
sub
or
test
sahf
push
ret
ret
sbb
push
sbb
push
and
aaa
cmp
mov
add
sub
sub
mov
mov
sub
pop
call
bound
push
repz
and
in
xor
or
test
popa
enter
xor
loopne
sub
mov
imul
xchg
scas
adc
sub
pop
dec
popf
and
or
push
lods
lea
push
adc
inc
push
fimul
ss
popf
adc
rcl
sub
and
mov
ror
add
and
aas
jae
dec
mov
push
jb
and
nop
imul
and
dec
add
mov
adc
push
push
cmp
and
repnz
dec
inc
scas
mov
dec
push
pusha
jge
sahf
lea
adc
pop
retf
inc
or
add
jae
or
cmp
cmps
test
add
and
xchg
nop
cmp
lea
adc
stc
js
adc
adc
(bad)
in
push
jl
push
xchg
loopne
push
adc
dec
xor
cld
lock
hlt
mov
sbb
enter
mov
dec
scas
inc
push
jne
cld
fdivr
repnz
hlt
je
ja
pop
lock
das
and
ins
std
adc
pop
(bad)
mov
imul
add
mov
ret
cld
cmps
mov
hlt
adc
je
push
mov
mov
bound
xchg
shr
cmp
jge
arpl
add
inc
repnz
mov
scas
cmc
into
xor
jmp
cmp
cmps
push
scas
dec
(bad)
loopne
and
inc
mov
xchg
push
pop
in
pop
jb
mov
jmp
xor
fcomp
int3
loopne
add
lods
inc
adc
arpl
or
test
mov
sbb
push
in
xchg
sub
and
movs
pop
mov
mov
out
in
pop
not
push
mov
loopne
mov
enter
jno
out
movs
and
sbb
popa
sub
sub
inc
call
sbb
movs
loopne
cmp
sbb
fs
or
es
pusha
fmul
mov
int3
je
das
sub
test
inc
jns
sbb
int3
in
movs
fld
dec
dec
mov
in
shl
ret
and
das
cmp
pop
cmp
jl
mov
test
ins
sub
mov
and
inc
nop
dec
sbb
and
push
je
fsub
sub
and
push
retf
mov
inc
cdq
cmp
loopne
pop
pop
js
mov
dec
inc
addr16
cmp
lds
lahf
xchg
or
and
jns
pusha
push
jne
and
pop
or
test
adc
mov
retf
jnp
jne
test
sbb
add
sbb
xchg
and
jge
dec
arpl
mov
push
inc
xchg
hlt
in
cmp
xor
inc
rol
in
mov
into
xchg
sub
fist
imul
inc
js
mov
rcl
xchg
pop
push
inc
ins
dec
and
into
push
add
push
jne
std
cwde
jo
mov
or
inc
dec
xor
pop
jb
ins
dec
sbb
or
test
inc
dec
pop
xchg
mov
inc
hlt
in
ror
add
add
rcl
mov
sub
add
inc
sbb
cbw
pop
out
les
inc
push
sbb
sbb
dec
cmp
out
push
xor
fs
jle
shr
les
mov
push
and
adc
pop
sbb
fstp
add
pop
add
dec
adc
movs
jo
adc
xlat
inc
call
jge
push
mov
retf
jae
inc
in
inc
or
add
and
sbb
out
pop
ins
loopne
mov
and
or
fs
or
add
rol
shl
pop
cmps
or
sbb
add
das
gs
outs
and
repnz
jmp
sub
pop
xchg
(bad)
dec
sub
mov
push
dec
lock
xchg
aaa
js
add
enter
jo
cmp
add
pop
or
mov
fist
or
loopne
rcr
je
xchg
or
inc
pop
cmp
pop
daa
js
data16
jmp
outs
add
or
jne
test
mov
push
jecxz
pop
(bad)
fldcw
or
(bad)
aaa
push
jo
add
mov
gs
das
xor
push
dec
push
movs
loopne
and
hlt
jmp
ret
jne
ror
loope
pusha
lahf
je
push
mov
ret
add
ins
mov
pusha
jmp
stc
(bad)
jmp
pusha
or
inc
outs
cmp
setno
mov
pop
jmp
aas
mov
lock
mov
mov
stos
adc
add
jne
push
push
dec
fimul
inc
sub
add
sbb
outs
mov
cmps
test
push
adc
stc
pusha
pop
add
adc
and
mov
mov
jae
clc
sbb
and
xor
sub
lock
jmp
inc
clc
fist
sbb
xor
js
inc
mov
push
add
xor
test
add
sub
mov
add
dec
mov
lock
idiv
dec
je
iret
push
cmp
add
sub
xchg
xor
add
push
pusha
add
addr16
inc
or
and
pop
xchg
popa
mov
cmp
sub
mov
fsubr
cld
test
and
ja
ja
ret
or
stos
inc
pushf
jbe
retf
cmps
pop
fdivr
xchg
sub
inc
push
cdq
imul
shr
ss
in
call
(bad)
cwde
pop
and
nop
sub
mov
and
mov
and
mov
sbb
jnp
je
or
mov
or
cmp
mov
mov
or
sbb
add
lds
lahf
add
jmp
xchg
fs
push
xor
addr16
movs
mov
dec
jb
je
test
movs
add
add
add
push
dec
mov
mov
or
and
(bad)
and
test
test
inc
adc
and
adc
arpl
(bad)
lock
mov
lahf
xchg
scas
xchg
push
dec
fcomp
adc
loopne
mov
xchg
pop
mov
ret
jae
neg
or
dec
movs
mov
fs
adc
loopne
jl
inc
jmp
adc
imul
stos
pop
cmp
lea
add
repnz
mov
add
fadd
add
iret
push
and
jo
adc
fsub
ja
mov
fs
mov
lahf
cmp
jne
cmp
pop
add
pop
rcr
push
retf
lods
cmps
add
pop
imul
dec
mov
movs
popa
leave
adc
jb
pop
jb
and
aas
inc
shr
icebp
add
add
ja
inc
adc
fisttp
push
push
adc
adc
pop
cmp
je
xor
and
push
and
dec
xchg
adc
fsubr
ins
jl
aaa
or
and
inc
ss
adc
add
jns
adc
xor
test
mov
and
or
or
adc
or
(bad)
stc
popa
add
mov
in
xchg
out
in
jecxz
push
bound
dec
sub
mov
ret
pop
les
das
inc
mov
sahf
sbb
or
shl
lea
(bad)
cmp
jb
xchg
lea
mov
mov
mov
mov
add
mov
sbb
pop
les
jle
or
jge
xchg
jmp
fldenv
jmp
adc
arpl
gs
and
movs
int
adc
cmp
adc
inc
sbb
mov
lock
adc
popa
adc
push
sbb
les
imul
push
int
jmp
or
and
xor
rcl
fimul
sub
ds
mov
or
add
adc
add
jecxz
xchg
add
jnp
(bad)
dec
inc
adc
adc
sbb
or
sub
movs
pop
adc
push
(bad)
pusha
jl
adc
sahf
and
retf
push
outs
arpl
add
pop
adc
sbb
cmp
ss
push
sbb
shl
xor
push
mov
xlat
sbb
add
and
mov
aad
rcr
sub
mov
xor
mov
mov
sub
pop
(bad)
mov
imul
push
jnp
push
and
inc
xchg
popa
scas
sbb
mov
cs
xor
push
rcr
(bad)
imul
pop
shl
mov
(bad)
sub
pop
push
xor
adc
jo
out
xor
ror
add
leave
sbb
adc
adc
fadd
sub
push
sub
pop
sub
call
aas
inc
ins
jns
dec
ins
ret
jo
aaa
xor
sub
xor
shr
sbb
add
sbb
inc
nop
xchg
sbb
push
add
fsub
aas
imul
ror
mov
push
pop
fst
and
(bad)
xor
add
dec
sbb
leave
ss
xor
sbb
mov
test
jb
pop
xor
ret
adc
push
add
sbb
xchg
xor
nop
pop
jnp
sbb
sbb
imul
xor
mov
cmc
mov
pop
push
inc
(bad)
or
rcr
jl
daa
lea
jmp
sub
mov
ins
add
lods
shr
das
mov
leave
mov
cmp
xor
in
test
adc
sbb
or
addr16
inc
and
sbb
cmp
adc
addr16
out
jp
adc
sbb
adc
sbb
sbb
daa
push
leave
ror
adc
adc
mov
rcr
(bad)
in
mov
push
shl
push
adc
push
pusha
push
xchg
or
rcr
into
cwde
push
fcmovu
test
test
aad
xor
mov
leave
push
pop
mov
pusha
cmp
or
dec
sub
movs
repnz
fdivp
setle
ins
(bad)
(bad)
push
cmp
adc
mov
les
jmp
and
dec
xor
jnp
ins
and
adc
or
sub
aad
cmp
sbb
mov
fistp
cmp
not
in
pop
xor
mov
aas
xchg
movs
inc
ficom
ror
enter
sbb
adc
and
jnp
and
adc
in
xchg
fs
add
push
ins
sbb
mov
xor
ins
shr
cmp
sbb
add
xor
push
das
stos
hlt
inc
pop
push
xlat
add
outs
ins
sbb
inc
outs
mov
test
outs
imul
dec
push
or
jl
lea
or
test
mov
movs
xor
push
fidivr
and
daa
ss
cmp
daa
(bad)
pusha
inc
or
and
adc
or
mov
lds
shl
mov
nop
bound
mov
inc
in
add
shl
into
or
pop
mov
xor
sbb
mov
sbb
cmps
adc
pop
movs
and
sbb
and
test
dec
mov
mov
jae
and
xchg
cmp
iret
lea
and
cmp
sbb
push
sti
shr
push
dec
sub
mov
test
jo
jbe
sbb
pop
(bad)
push
and
xor
dec
jo
cmp
push
xchg
popf
mov
pop
mov
jno
or
xchg
fmul
push
xor
mov
ins
mov
rcr
xor
add
and
or
jns
ja
push
dec
push
popa
sub
add
push
aaa
dec
sahf
adc
mov
and
xchg
(bad)
jo
test
scas
push
(bad)
std
sbb
inc
shl
cmc
std
push
xor
xchg
fcmovb
popa
sub
arpl
enter
adc
xchg
jp
imul
jbe
pop
ins
sbb
xor
adc
or
mov
mov
and
or
ins
sbb
imul
xor
jo
and
xchg
sub
mov
fistp
push
pop
jo
sti
out
nop
pop
push
out
popf
adc
gs
xor
clc
pop
imul
cmp
cmp
les
aaa
inc
outs
add
mov
mov
shr
nop
add
ins
and
xchg
in
fisttp
or
and
mov
jne
sbb
shr
and
mov
mov
xor
ins
(bad)
push
sub
sub
sbb
dec
lea
popa
adc
pusha
jbe
and
pop
inc
push
sub
pop
shl
sbb
mul
outs
mov
shr
(bad)
das
scas
popf
mul
add
xor
addr16
pop
call
mov
inc
xchg
fld
pop
adc
sbb
pop
sub
das
lods
aad
bound
imul
lods
retf
and
sbb
ret
outs
ins
(bad)
xchg
sbb
or
cmp
cmovbe
jns
cmp
mov
xor
(bad)
mov
ins
sub
in
sub
daa
inc
rcr
cmc
sbb
mov
bound
mov
in
inc
lahf
sbb
popf
push
pop
sub
add
or
add
stos
add
push
sub
cdq
pop
mov
pop
adc
ins
inc
ret
(bad)
mov
and
pop
dec
lods
mov
mov
or
xchg
lods
add
cmps
cmc
les
push
aas
mov
rcl
sub
inc
out
push
imul
pop
sti
fidiv
ins
daa
push
adc
inc
daa
test
inc
fwait
add
(bad)
test
sub
add
mov
aaa
idiv
adc
push
jo
xor
inc
pusha
fnstsw
jnp
mov
test
das
mov
sbb
mov
dec
stc
sub
and
shr
cmp
push
xchg
add
sub
rcr
add
ins
test
fnstenv
les
ror
adc
pop
sbb
mov
sub
push
or
and
fdivr
adc
and
jmp
inc
imul
aam
push
jmp
pop
mov
adc
cmc
inc
or
xor
mov
pop
sub
sub
and
push
cmp
xchg
rcr
add
and
enter
ins
and
pop
or
pop
or
fisub
aas
test
push
fwait
sbb
adc
repnz
sbb
adc
xchg
outs
aad
cdq
daa
dec
cdq
and
and
add
sahf
and
sbb
pop
sbb
and
cmp
sub
and
sub
aaa
cmp
test
and
aad
es
xchg
push
jns
mul
sbb
adc
dec
inc
and
sub
sub
push
pop
add
push
cmc
daa
dec
cwde
adc
adc
sub
mov
sub
push
add
ins
jmp
jg
sub
cdq
lea
cmp
jo
inc
fnstcw
mov
fbstp
jbe
fistp
fist
mov
xchg
neg
fwait
mov
cld
mov
daa
mov
sbb
imul
and
inc
add
and
mov
sbb
fwait
adc
ret
aas
or
or
ss
add
inc
call
mov
xor
adc
pop
and
or
dec
push
ret
aas
adc
pop
ins
sub
push
xchg
adc
push
fist
push
and
adc
cmovns
inc
ins
jne
pusha
mov
sbb
daa
add
xlat
pop
xchg
pusha
inc
sbb
mov
sub
mov
xor
and
(bad)
mov
mov
loope
and
bound
cmps
(bad)
xor
mov
cmps
pop
adc
push
fdiv
push
xor
pop
imul
pop
jmp
inc
xchg
sbb
sub
ja
adc
test
cmp
ficom
(bad)
dec
push
rcr
test
pop
ins
and
pop
(bad)
lds
fcomp
pop
das
jae
fisttp
xor
lahf
(bad)
mov
sbb
and
mov
cmp
and
mov
sub
cmps
or
bound
leave
imul
aaa
add
mov
xor
daa
inc
ins
arpl
sbb
adc
add
jo
cmp
cmp
fld
push
rol
dec
ret
ficom
add
cmp
ins
or
xor
sbb
lods
pop
lods
in
cmp
and
mov
xchg
mov
push
xor
mov
daa
sbb
dec
xor
add
aaa
sbb
imul
je
mov
and
and
and
push
dec
nop
in
movs
xor
cmp
test
ins
add
mov
mov
inc
jbe
and
ins
xchg
lahf
cwde
mov
sbb
push
pop
xlat
sbb
xchg
outs
xor
xor
sub
outs
test
push
and
fisubr
imul
mov
mov
cmp
sub
ins
ins
add
jnp
scas
sub
dec
inc
mov
inc
pop
inc
lock
daa
outs
push
repnz
adc
dec
inc
fs
or
outs
bound
sbb
or
leave
and
ins
pop
lea
js
sbb
jg
popaw
push
mov
pop
sub
retf
mov
sbb
jg
dec
xchg
xor
dec
or
cmp
ja
jnp
ds
popa
jae
ja
lods
ins
jnp
ja
ja
cmp
hlt
dec
mov
arpl
sbb
cwde
rcl
ins
(bad)
and
js
sub
outs
sbb
pop
xchg
jb
js
call
push
nop
adc
outs
push
outs
push
outs
sub
add
push
and
ja
loopne
ins
and
dec
mov
pusha
in
push
sbb
fmul
ins
shr
adc
pop
mov
ins
add
das
jbe
adc
(bad)
push
pop
push
mov
cld
mov
push
mov
jnp
or
jo
mov
jp
(bad)
sbb
dec
jmp
das
pop
adc
or
sbb
loope
xchg
mov
or
inc
adc
dec
inc
jbe
sbb
jb
arpl
fadd
push
sbb
mov
push
pop
push
xchg
jnp
mov
xchg
sar
sbb
or
and
test
aas
sub
push
or
sub
inc
inc
aas
pop
fsub
mov
pop
adc
push
bound
push
mov
add
cld
pop
ret
sub
mov
push
sub
dec
repnz
pop
adc
or
pop
adc
xor
sbb
add
cmps
or
push
inc
push
cld
imul
daa
push
add
xchg
cdq
out
clc
or
sub
test
in
add
jbe
sbb
cmp
adc
push
stos
add
inc
push
or
das
scas
sbb
ins
jmp
aas
gs
movs
jecxz
js
stos
aas
jb
aas
ret
nop
pop
dec
or
sub
mov
jb
inc
sub
push
je
pop
add
test
pop
sbb
adc
lea
mov
daa
push
sub
mov
daa
fcom
cmps
test
test
pop
pop
jo
out
push
ins
jne
daa
xchg
out
(bad)
fistp
adc
adc
lods
jae
sbb
ror
inc
je
sbb
mov
dec
(bad)
lea
lea
dec
add
ret
lea
adc
add
mov
add
sub
outs
adc
inc
movs
mov
cmps
and
mov
bound
dec
pop
ins
daa
and
and
adc
outs
sub
das
loopne
ins
mov
sub
ins
bound
fcom
and
bound
lods
popf
sub
push
pop
cmps
and
adc
pusha
add
push
adc
les
vorps
fisubr
push
mov
loop
jecxz
in
lea
jecxz
jecxz
pusha
mov
ins
jecxz
jecxz
fidiv
(bad)
adc
(bad)
jnp
das
inc
shl
adc
jecxz
(bad)
rcl
mov
das
jecxz
xor
inc
mov
push
xor
adc
xor
shl
lea
arpl
lds
daa
lds
and
lds
or
adc
not
daa
and
pushf
jecxz
push
mov
cmps
mov
pop
xchg
sub
sbb
mov
xchg
sbb
sbb
or
pusha
xlat
sbb
mov
loope
adc
outs
pushf
jo
neg
div
jae
or
leave
and
sbb
xor
adc
leave
jae
jae
and
jb
jae
mov
mov
sbb
pop
movs
mov
repz
ret
pop
xchg
(bad)
jns
ja
and
push
outs
add
and
xor
adc
pop
in
mov
dec
lods
mov
xor
mov
mov
das
or
adc
pop
or
sub
sub
iret
mov
or
dec
arpl
lds
jne
dec
dec
nop
mov
sti
hlt
xchg
jle
or
cdq
sbb
push
adc
ss
xor
and
sbb
ss
pop
xor
icebp
adc
inc
and
dec
stos
mov
pop
jge
jno
fiadd
xor
sub
sbb
mov
pop
movs
ss
sbb
inc
dec
mov
push
dec
sbb
and
outs
and
jo
sub
cs
ja
or
mov
idiv
loopne
cmc
and
and
fmul
adc
sub
sbb
mov
sbb
xchg
inc
daa
shr
push
test
mov
mov
xlat
or
shr
fdiv
je
retf
or
jno
out
pop
repz
or
mov
daa
sub
dec
or
cmp
push
sbb
dec
ins
xchg
inc
adc
xlat
das
ficom
shr
rol
or
pop
shl
je
xchg
fidiv
sub
test
sub
sub
je
ins
adc
xchg
das
icebp
sub
lods
xor
icebp
ret
mov
jns
mov
(bad)
(bad)
push
add
aad
cwde
(bad)
push
mov
add
stos
lods
pop
xor
lea
icebp
cmp
jbe
lods
sbb
aaa
mov
sbb
push
cmp
push
mov
sub
pop
pop
xor
sub
cmp
add
mov
dec
and
cmp
jp
and
xor
sbb
mov
shl
daa
cwde
cmp
adc
shl
pop
push
jne
scas
or
and
bound
repnz
fcomp
mov
jg
cmp
test
bound
cmc
daa
mov
sti
aad
add
and
pop
shr
xchg
jecxz
sbb
dec
cmp
pop
shl
popa
(bad)
xor
mov
adc
add
and
or
add
jns
daa
cmp
mov
lahf
jbe
xchg
in
stos
mov
or
or
(bad)
mov
lar
fcom
pop
mov
movs
adc
and
je
add
leave
and
jp
mov
push
es
movs
dec
push
jmp
add
sbb
push
push
fucomp
je
cs
outs
fld
and
out
push
or
push
shl
adc
or
and
shl
in
mov
outs
fcom
sbb
pop
sub
sbb
sub
das
lds
xchg
and
pop
mov
test
jmp
sub
das
and
or
mov
pop
movs
cmps
sbb
push
ret
mov
sub
xchg
add
xchg
in
mov
cdq
or
ins
xor
or
and
and
mov
add
push
dec
sar
mov
inc
mov
jmp
push
xlat
out
and
mov
push
push
pop
jge
sbb
xor
out
xchg
xor
inc
pop
dec
ficomp
mov
inc
push
inc
or
or
cmp
fwait
out
adc
sub
or
sub
push
jns
imul
ins
cmp
fwait
mul
and
mov
pop
js
sbb
scas
jne
and
test
imul
adc
inc
adc
or
in
pop
sbb
inc
pop
xchg
xor
pop
mov
inc
sbb
iret
shr
xchg
cmp
adc
test
adc
leave
sub
jbe
bound
sbb
mov
inc
push
ins
sbb
xchg
mov
inc
addr16
rcl
cmp
ss
and
cmp
pop
mov
cmps
jns
and
push
ins
sar
not
and
and
out
adc
xor
lahf
je
and
je
inc
dec
sub
and
xchg
or
sub
add
popa
inc
inc
sub
sub
sbb
mov
adc
mov
sbb
mov
and
jo
mov
mov
xchg
(bad)
jmp
mov
neg
sbb
adc
out
cmp
gs
jns
push
push
imul
add
das
push
and
aaa
je
pop
pop
pop
adc
and
push
sub
fimul
mov
ja
xor
ss
or
mov
ins
(bad)
adc
mov
pop
add
jg
jo
xchg
daa
inc
sub
add
cwde
dec
shl
push
pop
pop
sub
out
mov
gs
rcl
and
push
mov
xchg
xorps
cmp
fadd
or
int
ror
push
push
cmp
adc
imul
xor
xor
cmc
fadd
daa
or
jnp
ret
sbb
mov
mov
mov
sub
sub
and
mov
test
mov
in
shl
sub
adc
rcr
and
and
(bad)
push
dec
ds
fld
mov
or
sbb
ins
imul
mov
adc
daa
mov
ss
inc
jnp
mov
lods
inc
inc
push
sti
ret
aas
adc
int
or
mov
or
inc
push
cmp
sbb
jg
pop
xchg
push
cld
retf
pop
mov
imul
xchg
and
(bad)
movs
test
xchg
ja
int3
push
stos
lods
and
adc
cmp
das
dec
and
ins
call
ficomp
or
ja
ret
sbb
xchg
jbe
xchg
loopne
inc
cld
xor
fs
cmp
push
(bad)
cmp
or
imul
jecxz
(bad)
and
cmp
adc
xchg
and
cwde
stos
repz
fidiv
sub
data16
mov
push
dec
or
ss
sbb
sub
inc
mov
adc
popa
js
js
add
test
popa
js
jae
adc
or
mov
mov
daa
aas
pop
push
nop
mov
and
adc
daa
inc
stc
fs
push
pop
or
inc
mov
out
fiadd
xchg
and
xor
fisubr
sbb
rcr
adc
mov
and
in
bound
inc
dec
xchg
adc
cwde
fimul
push
and
pop
lds
xor
pop
jnp
and
sub
xor
sub
sub
dec
xor
cmp
js
dec
push
enter
js
or
daa
jmp
in
lods
daa
xchg
dec
inc
xor
sti
push
fcmovbe
cmps
adc
sub
lds
mov
gs
rcl
mov
push
mov
sbb
mov
fwait
test
sub
pop
ins
fist
lods
fbstp
test
xor
adc
mov
pusha
xor
sbb
inc
mov
pop
push
sub
xchg
outs
mov
es
rol
or
inc
mov
and
mov
mov
and
push
add
and
les
and
mov
nop
inc
and
pop
sub
and
and
aaa
xchg
and
ins
ins
and
scas
xor
or
fld
lock
sbb
movs
add
ins
cmp
adc
or
(bad)
jmp
sbb
xchg
aas
sbb
sbb
and
retf
mov
push
(bad)
dec
add
sbb
test
and
push
push
adc
or
jl
je
cmovne
mov
dec
jg
or
jb
jne
or
outs
add
addr16
adc
ror
enter
adc
and
mov
adc
imul
daa
bswap
sub
adc
frstor
push
stos
pop
xor
xor
xor
or
or
cmp
pop
adc
mov
and
mov
(bad)
cmp
popf
shl
or
ja
test
fcmovnu
(bad)
rcl
jl
and
fstp
ds
nop
cdq
adc
xor
es
das
daa
xor
pop
sbb
adc
fcom
push
inc
test
iret
and
lahf
pop
ins
fsub
popa
cmp
adc
fcmovne
push
push
sbb
dec
jne
push
push
gs
or
in
sbb
dec
cmp
clc
push
or
jae
add
fst
outs
mov
stc
adc
jl
sub
fdivrp
adc
cmps
or
mov
or
or
pop
pop
pop
das
or
add
or
test
pusha
pop
push
jns
sub
pop
ins
fcmovb
sbb
dec
loope
or
outs
push
push
inc
fs
jae
rol
inc
popa
sbb
or
push
adc
enter
sbb
add
push
scas
and
jmp
xor
jmp
or
add
xlat
mov
sbb
xchg
fiadd
xor
fsub
movs
dec
icebp
dec
movs
fisub
loopne
shl
bound
adc
cmp
fmul
pop
rcr
fisttp
sbb
or
mov
xchg
mov
push
adc
outs
iret
or
stos
in
dec
enter
(bad)
xor
mov
in
adc
jo
pop
dec
mul
inc
nop
sar
add
and
or
inc
pusha
cdq
movs
pusha
xchg
pop
adc
test
and
add
outs
pop
and
aas
inc
pusha
xor
adc
push
(bad)
fwait
jae
xor
or
nop
fbld
adc
fcmovne
add
pop
dec
mov
stos
fs
jl
cmp
pop
leave
das
mov
push
dec
scas
sbb
xchg
imul
pop
jge
push
push
adc
add
pop
add
ja
sbb
pop
mov
adc
adc
sub
dec
test
push
fimul
pop
mov
imul
sbb
and
(bad)
fsub
sbb
adc
mov
or
rol
jne
pop
inc
pushw
xor
or
mov
adc
xchg
jp
xchg
jg
daa
xor
inc
xor
pop
outs
sbb
pusha
dec
adc
dec
or
adc
cmp
pop
inc
jg
adc
(bad)
clts
mov
ins
adc
xor
jmp
push
mov
icebp
loop
xchg
mov
adc
pushf
xchg
and
push
or
push
xor
cmps
add
mov
pop
sub
and
push
pop
shl
and
or
or
push
sbb
sub
adc
push
mov
mov
pop
cmp
sbb
pop
aas
mov
mov
xor
xchg
sub
leave
ins
popf
sbb
loopne
cmps
les
ins
adc
sub
in
movs
call
leave
ins
pop
mov
or
in
mov
sub
and
cmps
add
mov
test
add
adc
push
or
pop
and
and
adc
imul
mov
add
dec
sub
sub
mov
cmp
sub
sub
rcl
popa
push
aaa
ins
mov
mov
sub
leave
sbb
retf
gs
sub
bound
std
dec
ins
push
sub
fisub
test
pop
cdq
adc
mov
xor
cmp
fwait
sub
cdq
sbb
outs
mov
sbb
aad
or
pop
push
fisubr
test
fst
sub
cmp
ja
xor
add
or
(bad)
jne
outs
or
sub
push
add
inc
adc
ins
push
pop
pop
fcmovnu
and
ret
mov
mov
sbb
jnp
ret
ret
and
mov
sub
mov
sub
jecxz
push
and
mov
mov
dec
shl
add
add
mov
dec
pop
pop
rol
adc
call
and
addr16
iret
js
adc
inc
dec
mov
xchg
cdq
cmp
fcomp
out
mov
adc
push
retf
or
push
and
or
scas
pop
adc
adc
and
pop
mov
pushf
cmp
xchg
pop
dec
pop
add
sbb
and
sbb
ins
mov
add
sbb
push
sbb
das
pop
push
add
pop
add
pop
scas
cld
repnz
int
add
out
and
gs
mov
in
das
and
dec
out
daa
add
sub
loope
add
sub
stc
jb
xchg
lds
adc
sub
test
das
add
xor
inc
repnz
lea
jl
repnz
add
xor
and
xor
sub
aaa
add
add
cmp
in
cmp
cmp
cmp
test
shr
retf
xchg
pop
cmp
add
add
shl
add
repz
test
inc
add
push
sbb
mov
jae
hlt
inc
add
push
mov
inc
pusha
mov
xchg
add
cmps
or
iret
into
jns
dec
add
push
pop
and
mov
pop
xchg
jle
clc
inc
cmovb
xchg
jg
pusha
sbb
add
lock
in
and
leave
adc
pop
and
xor
test
inc
push
cmp
xchg
test
cwde
mov
in
and
xor
inc
repnz
xchg
and
xchg
add
adc
xchg
pop
and
inc
adc
test
dec
push
test
or
mov
adc
mov
and
cmps
movs
nop
and
and
leave
adc
mov
push
xchg
pop
inc
stos
mov
mov
je
int3
adc
nop
cmp
mov
and
add
fadd
in
and
leave
cwde
mov
push
xchg
mov
cmp
ins
mov
add
les
or
shl
and
shl
enter
(bad)
leave
adc
pop
and
sub
retf
and
inc
push
xor
int3
inc
push
test
push
sahf
add
jmp
mov
adc
js
push
push
jp
adc
or
ror
pop
sub
aam
pop
or
imul
repnz
xor
push
sub
pop
ja
cmp
xchg
pop
div
test
rol
push
push
sbb
(bad)
push
adc
xlat
cmovns
sub
arpl
sar
xor
fs
inc
push
xor
aaa
xor
(bad)
xor
leave
push
and
xchg
ds
aaa
or
sti
mov
cmp
es
mov
push
add
dec
out
rcr
pop
std
mov
cmp
sbb
pusha
je
dec
or
sbb
(bad)
or
inc
push
out
xchg
rcr
push
cmps
es
cld
dec
inc
add
push
xchg
pop
inc
xchg
test
leave
enter
(bad)
mov
in
mov
pop
add
sahf
mov
jg
lar
dec
inc
jge
pop
add
enter
pop
add
fs
xchg
or
xor
in
inc
or
adc
mov
push
into
cmps
cmp
mov
cmovs
loop
aas
adc
(bad)
inc
(bad)
jae
jp
stos
push
dec
push
or
es
sub
fiadd
outs
and
and
pop
jo
dec
out
add
test
cli
inc
inc
and
fadd
jne
push
inc
dec
ror
add
arpl
dec
test
iret
xchg
je
out
cmp
pusha
imul
xchg
sahf
cdq
(bad)
pop
lds
jae
add
mov
or
sub
xchg
outs
pop
jb
int
loope
(bad)
test
fldenv
imul
sbb
retf
adc
bound
out
fld
pop
call
cmp
js
stos
add
scas
add
fmul
dec
bound
dec
add
adc
sbb
or
mov
or
sbb
add
sahf
xchg
pop
outs
add
jmp
mov
adc
ror
or
xchg
fcom
cmc
popf
pop
mov
lahf
mov
cdq
imul
lea
adc
movs
nop
clc
cli
dec
data16
retf
ss
or
stos
sbb
adc
and
lock
or
aas
pop
jp
sub
xor
sbb
mov
push
ss
hlt
popf
pop
push
aad
repnz
imul
add
test
inc
call
icebp
and
jl
adc
push
cmp
jge
ins
adc
xor
add
jo
inc
clc
inc
add
mov
mov
jno
in
aad
or
sub
ja
out
and
and
cwde
enter
and
add
xchg
frstor
cwde
pop
inc
mov
test
push
enter
pop
inc
lock
ins
pop
pop
add
dec
push
xchg
cmp
stc
inc
xor
in
add
fs
and
mov
in
and
imul
add
push
icebp
and
adc
mov
inc
int3
mov
jl
jno
pop
pusha
xor
add
pop
add
inc
lahf
les
cmp
rol
inc
inc
jle
add
fidivr
push
jns
jg
fild
in
test
cmp
pop
rol
add
add
mov
add
sub
pusha
mov
pop
mov
rcl
test
adc
and
and
ret
adc
mov
mov
sub
pusha
fisttp
or
dec
mov
adc
mov
repnz
xchg
das
jno
lock
mov
dec
iret
mov
vmwrite
into
adc
push
sbb
adc
and
pop
and
fmul
stos
mov
scas
loope
mov
xor
inc
lods
out
pop
cmp
out
add
or
add
imul
xor
packsswb
xor
pop
lods
cmp
shl
lds
jp
or
inc
fadd
or
ficomp
pop
retf
and
lock
cdq
nop
outs
adc
or
inc
dec
test
mov
dec
cwde
pop
mov
push
jnp
sub
pop
mov
ror
sbb
xchg
sbb
or
adc
lea
dec
enter
enter
lds
push
imul
push
in
fisub
nop
stc
int3
loop
cld
push
xor
idiv
int
aam
in
adc
es
cmps
stc
xor
lods
and
mov
jmp
int
jmp
hlt
clc
mov
inc
fimul
int3
adc
push
ins
or
add
adc
jnp
imul
push
dec
mov
or
fldcw
jmp
add
add
inc
not
ds
pop
scas
push
fldz
je
push
aam
pop
xchg
mov
stc
dec
and
les
scas
push
push
call
pop
mov
mov
nop
adc
pop
pmaxsw
ins
mov
mov
mov
mov
movs
add
pushf
das
push
pop
bound
outs
inc
pop
add
repnz
or
shl
pusha
outs
sbb
add
sub
popa
mov
gs
cmp
popa
add
mov
ds
cmp
adc
sub
mov
int3
sbb
dec
cmc
inc
push
dec
add
add
add
adc
add
retf
sbb
mov
sbb
push
push
jle
repnz
out
pop
add
adc
add
and
shl
add
adc
add
push
jle
and
mov
add
adc
add
sub
out
add
push
sub
jle
sub
sub
push
pop
sub
stc
in
add
add
xor
xchg
retf
xchg
pop
mov
add
sbb
jbe
pop
stc
in
add
add
sbb
add
add
cmp
repnz
sbb
add
cmp
(bad)
cmp
add
add
pop
test
sub
fiadd
sbb
push
js
(bad)
push
pop
sbb
call
dec
dec
pop
dec
leave
loop
dec
dec
inc
and
adc
pusha
sbb
inc
(bad)
xchg
adc
jns
xor
and
cmp
or
nop
mov
shl
lock
xchg
add
leave
sub
ss
movs
ins
call
xchg
sub
inc
pop
or
xor
lea
cmp
rcl
inc
dec
pop
adc
push
mov
je
or
dec
rcl
and
dec
push
test
clc
adc
dec
push
test
cli
lods
sahf
nop
cmp
sbb
cmp
sti
or
mov
clc
cmps
sbb
or
or
(bad)
and
movups
les
stos
xchg
nop
sbb
cmp
lods
nop
sbb
cmp
or
or
cld
or
mov
add
and
or
nop
adc
cmp
repnz
cwde
mov
pop
(bad)
mov
cmp
mov
bound
shr
mov
sbb
inc
jb
inc
shl
mov
mov
in
jb
xor
movs
add
inc
jb
cmp
add
pushf
add
(bad)
jg
int3
and
jb
push
mov
or
fs
add
sub
and
pusha
sbb
call
mov
xor
add
test
add
andps
push
and
sar
inc
push
imul
mov
add
(bad)
sbb
popa
and
clc
mov
lods
jb
jae
rol
outs
mov
jl
rcl
pusha
test
jmp
mov
scas
sub
int3
bound
arpl
add
vmovaps
jge
cmp
add
jne
aam
push
shl
mov
(bad)
sbb
add
sub
push
jmp
add
inc
sbb
add
(bad)
shr
pop
add
fld
and
imul
or
in
pop
in
push
test
sub
loope
mov
inc
or
adc
shl
repnz
push
mov
outs
lds
pop
adc
push
pop
xchg
xchg
iret
sbb
call
and
icebp
push
in
outs
in
test
jo
or
inc
add
cmp
add
or
xor
or
dec
sub
paddq
dec
test
or
adc
rol
and
dec
push
lock
repnz
pop
test
sbb
mov
push
push
pop
add
pusha
(bad)
xchg
or
dec
enter
and
das
lea
cmc
fisub
addr16
or
bound
dec
and
fs
leave
jns
or
jb
repnz
or
pop
xchg
cmp
sbb
es
ror
daa
inc
sahf
pushf
mov
adc
dec
dec
mov
add
push
or
mov
mov
das
dec
or
push
pop
enterw
and
adc
jl
xor
scas
dec
and
test
or
mov
lods
inc
jge
int3
xor
add
test
pop
add
add
pop
or
push
add
xor
mov
retf
in
in
scas
outs
add
xor
add
pop
pop
and
pusha
(bad)
cmp
dec
mov
cmp
cmp
cwde
or
fcomp
cmp
sbb
popf
test
movs
xor
inc
adc
push
mov
pusha
mov
or
movs
lea
fadd
add
cmp
ss
add
or
xchg
adc
imul
(bad)
push
jnp
add
repz
fiadd
and
dec
inc
inc
jb
push
dec
or
jns
or
add
or
stos
scas
shl
cmp
cmp
sbb
xchg
add
cmp
outs
(bad)
mov
loop
adc
dec
and
imul
mov
add
imul
or
xchg
and
mov
sub
xchg
inc
repnz
dec
daa
add
adc
dec
adc
mov
add
mov
push
movs
jmp
test
and
add
mov
mov
adc
arpl
psubw
sub
and
jns
xor
sub
cmp
or
push
mov
repz
in
add
adc
mov
into
or
lea
retf
push
sub
push
push
stos
sub
sub
in
mov
popa
sub
add
pop
pop
add
das
or
popf
or
dec
xor
jo
lods
or
icebp
xor
mov
imul
push
and
sbb
or
loop
cmp
inc
pusha
sub
inc
adc
mov
adc
xchg
les
dec
stc
sbb
stos
add
imul
cmps
xchg
jns
push
lods
xchg
popa
dec
mov
cwde
popf
push
lods
sbb
mov
mov
mov
inc
add
add
jno
xchg
lahf
mov
push
jge
xchg
cmp
mov
sbb
mov
push
add
and
repz
arpl
aad
sbb
xchg
imul
and
and
rcl
mov
frstor
nop
pop
dec
out
add
loop
pop
ins
out
jo
rcr
pop
xlat
or
adc
pop
pop
ins
adc
cmp
jo
push
xor
mov
xor
xchg
dec
nop
dec
or
popa
rcr
xor
lods
out
add
or
sub
mov
jecxz
nop
dec
xchg
add
(bad)
push
mov
cmp
inc
xor
xor
sbb
xor
dec
movs
dec
add
and
pop
jno
add
(bad)
xor
test
jmp
or
jb
inc
ins
test
xor
push
pop
push
cli
movs
dec
sub
or
dec
add
sbb
cmp
dec
xlat
pop
lods
or
xchg
xor
xor
enter
das
mov
test
daa
rcl
cmp
xor
sbb
push
sbb
dec
mov
mov
mov
aas
pop
sbb
cwde
sub
jecxz
aaa
mov
xor
int3
cmp
sub
push
enter
push
inc
dec
(bad)
fs
cmp
sbb
fild
int3
cmp
pop
inc
xchg
leave
xchg
and
pop
cmp
in
inc
inc
je
in
jg
inc
or
inc
aas
cmp
or
aad
call
cmp
aas
sbb
sub
push
je
pushf
test
ret
les
pop
cmp
shr
and
stc
sub
das
or
adc
add
cmp
add
out
push
xor
mov
mov
adc
pop
xor
pop
sbb
sbb
sar
cmp
dec
push
pop
pushf
push
enter
mov
iret
adc
cmp
inc
xor
pushf
push
and
pop
and
pop
gs
xor
pop
les
(bad)
aas
dec
outs
xchg
adc
inc
das
cmp
jno
cmp
pop
xor
inc
out
push
ret
mov
jl
ret
and
aaa
pop
cmp
test
sbb
jb
inc
fadd
inc
or
ins
dec
adc
dec
sub
inc
shl
dec
out
inc
push
push
mov
dec
inc
retf
(bad)
sbb
push
and
outs
ret
pop
add
test
dec
test
pop
mov
add
sub
inc
mov
int
dec
xor
mov
inc
inc
mov
add
adc
aas
add
mov
jg
repnz
dec
adc
mov
sbb
dec
pop
push
aam
imul
inc
imul
or
add
into
or
inc
cmp
call
mov
add
daa
(bad)
push
jmp
mov
or
adc
mov
popa
jge
adc
test
sbb
rcl
jbe
sub
addr16
or
push
jno
fisttp
dec
inc
in
mov
lods
std
daa
dec
outs
cmps
sbb
cli
mov
sbb
sbb
sub
mov
push
inc
jnp
loope
mov
fsubr
inc
invd
add
cs
scas
fmul
push
or
adc
ja
or
fisub
imul
pushf
push
mov
adc
mov
fs
int3
or
xor
sub
dec
test
pop
leave
inc
dec
mov
popa
sbb
or
test
push
data16
mov
adc
dec
mov
mov
pop
mov
or
rol
mov
stos
ins
push
sub
int
ds
or
mov
push
jg
stos
or
out
mov
dec
je
push
arpl
icebp
adc
hlt
mov
ss
xlat
dec
jns
adc
es
mov
mov
pusha
dec
cmp
push
shl
dec
rcl
and
in
jbe
aam
and
out
or
cmp
call
in
inc
into
hlt
dec
aaa
aaa
dec
or
out
repz
cld
adc
push
imul
push
dec
les
sub
jo
add
pop
add
push
xchg
movs
jle
mov
loope
and
push
adc
xor
inc
fwait
cmp
sbb
sbb
cmp
retf
retf
lods
dec
dec
dec
push
dec
push
adc
or
sub
adc
rol
sub
dec
jns
or
sti
dec
(bad)
lods
dec
or
and
lods
fnstcw
lods
mov
sbb
push
inc
push
add
adc
and
int
dec
xchg
mov
enter
dec
mov
je
gs
retf
test
push
push
xchg
bound
xor
xchg
nop
mov
fnstcw
(bad)
loope
push
outs
mov
mov
jo
inc
sub
sbb
adc
sbb
and
mov
js
(bad)
mov
inc
cmp
jge
adc
je
xor
pop
pop
cmps
lock
(bad)
(bad)
dec
imul
rol
mov
sub
addr16
dec
adc
adc
cwde
xor
mov
cmp
dec
and
leave
call
leave
push
push
or
jge
cmp
adc
jl
or
adc
sbb
add
inc
push
scas
pop
sbb
add
mov
(bad)
dec
mov
out
ror
int
ja
dec
enter
or
cmp
push
call
xor
sub
inc
fcom
arpl
shl
dec
sbb
ins
dec
gs
push
sti
xor
or
adc
fidiv
pop
push
ss
ins
add
pop
push
xchg
mov
add
cld
dec
adc
dec
add
push
js
pop
outs
test
pop
cmps
sahf
push
hlt
das
or
add
sub
shr
adc
push
cmps
cwde
and
dec
jns
or
add
inc
or
test
mov
adc
inc
mov
stos
dec
repz
dec
or
mov
push
jnp
fisubr
mov
push
inc
push
push
cvtps2pi
cmp
cmp
jmp
cmp
push
xchg
int3
add
dec
dec
inc
dec
or
push
daa
daa
daa
and
pop
xor
daa
push
dec
shl
aas
pop
iret
mov
pop
stos
pop
xlat
push
add
pop
sbb
loope
sbb
push
push
aaa
inc
int
sub
enter
add
or
add
imul
in
imul
fdiv
dec
inc
mov
and
psrad
or
(bad)
mov
sbb
(bad)
sbb
inc
jbe
mov
ja
add
leave
add
xchg
push
and
push
pop
dec
xchg
add
rol
and
mov
ins
and
add
mov
call
add
mov
push
movs
add
outs
or
push
mov
neg
sbb
lods
add
popf
and
xchg
push
shl
imul
push
push
xor
dec
push
pop
dec
mov
push
and
adc
push
pop
dec
or
dec
pop
and
pusha
test
xchg
dec
mov
test
(bad)
test
or
xchg
dec
inc
sbb
mov
add
or
imul
ins
gs
sbb
add
imul
cwde
jae
test
adc
push
inc
fwait
mov
fadd
add
jo
cmp
push
adc
nop
popa
or
cmp
retf
cmp
xchg
or
add
test
dec
or
dec
and
icebp
push
jo
xor
xor
outs
pop
in
mov
pop
mov
mov
sub
shr
mov
jbe
dec
adc
ja
imul
push
inc
rol
mov
cmp
popf
inc
xchg
sbb
mov
addr16
ja
and
pop
dec
bswap
daa
aas
push
pop
dec
and
and
dec
add
inc
repnz
dec
pop
dec
xchg
pusha
loopne
pop
int
test
or
cmps
xchg
jb
loopne
test
movs
sub
ins
jecxz
loope
pop
ds
pop
pop
call
or
lods
add
ss
and
jae
jo
out
add
inc
or
movs
movs
push
(bad)
popa
lock
xchg
gs
push
adc
mov
pop
int3
pop
in
in
pop
jl
aam
loop
push
jb
test
pop
push
push
inc
push
adc
sar
push
jo
out
xor
out
sbb
jns
pop
add
pop
push
test
pop
mov
daa
das
das
(bad)
cmp
pop
dec
pop
push
mov
jno
sbb
dec
lods
xor
xchg
pushf
nop
pop
stos
sbb
in
sbb
xchg
xchg
pop
sbb
mov
popf
pop
or
and
add
mov
imul
ins
adc
jbe
add
mov
pushf
jns
inc
mov
jns
nop
add
push
sar
arpl
dec
and
xchg
jmp
jbe
adc
and
lods
pusha
pop
imul
add
rcr
and
(bad)
push
mov
adc
inc
popa
inc
xchg
add
mov
popa
push
push
or
push
and
mov
adc
in
add
mov
mov
push
pop
ins
push
lds
inc
push
cmps
sub
test
pop
jbe
jecxz
in
outs
add
test
mov
arpl
pop
jb
sub
dec
cmp
jg
arpl
int3
or
xchg
daa
das
and
cmps
pop
test
pop
leave
adc
shl
mov
mov
dec
pop
pop
pop
mov
sbb
test
test
mov
xchg
mov
fs
repz
inc
sub
mov
pushf
test
es
das
mov
cld
adc
jg
add
jg
adc
and
push
sbb
data16
or
cmp
push
mov
and
mov
mov
jo
add
mov
adc
mov
dec
pop
sti
icebp
and
lds
adc
pushf
addr16
outs
call
adc
lahf
out
addr16
arpl
and
jne
pop
outs
dec
push
mov
mov
jno
pop
gs
pop
in
in
in
dec
dec
xchg
jg
popw
nop
pop
jb
push
xor
or
pop
pop
(bad)
add
pop
cmp
mov
das
adc
aas
xchg
scas
or
xor
inc
jo
push
push
sub
jns
push
push
push
or
loope
mov
movs
sub
add
sbb
adc
imul
mov
ins
push
xchg
mov
imul
xor
test
inc
ins
cmp
xor
jb
xchg
lods
es
ins
mov
pop
lock
jb
test
jl
test
dec
push
cmp
push
pusha
outs
repnz
jns
(bad)
ins
mov
push
xchg
jg
xor
dec
add
inc
enter
ins
xor
imul
in
pop
outs
mov
jns
mov
mov
mov
and
ja
outs
pop
outs
dec
inc
dec
jo
mov
or
or
inc
test
mov
mov
test
xchg
jo
repnz
xor
ret
mov
push
enter
fwait
jns
inc
dec
pop
outs
enter
mov
jb
enter
movs
mov
repnz
or
mov
cmp
pop
lods
and
ss
add
in
jno
jb
jb
adc
inc
je
call
xchg
pushf
jb
jb
sub
push
add
add
add
add
add
jns
or
add
pop
mov
ret
cs
or
adc
shl
push
push
sub
push
or
pushf
ja
jne
inc
pop
sub
mov
jge
repnz
test
lods
ja
int3
pop
push
pop
repnz
cwde
dec
leave
mov
xchg
or
adc
outs
ja
pop
mov
push
push
ficom
sahf
jp
cs
xor
push
sub
xor
gs
lea
cmps
jb
jns
fist
add
cmp
jb
ret
ja
in
stc
push
jo
scas
psrad
xor
mov
stc
pop
inc
cmp
jns
sbb
lahf
pop
push
add
jp
pop
dec
and
(bad)
imul
or
inc
xchg
mov
push
inc
jo
sbb
push
aam
pusha
in
jne
mov
jecxz
add
shr
ins
xchg
loopne
js
add
and
jns
lods
adc
jae
in
ins
inc
pop
push
jp
jp
mov
pop
aas
add
add
xlat
and
jl
call
out
cmps
inc
mov
inc
add
jnp
xor
add
repz
inc
aad
and
test
in
popa
div
jl
mov
add
popa
mov
aas
pop
and
jle
dec
ror
xchg
add
cmp
fcomp
sbb
or
inc
ret
mov
cld
outs
or
add
and
push
nop
jge
rol
jns
jp
jge
ret
or
sahf
lds
adc
(bad)
cld
push
push
addr16
xchg
adc
pop
push
ret
adc
and
pop
push
add
sub
dec
inc
inc
inc
inc
ins
xchg
int
stos
xchg
das
cmps
icebp
adc
push
aas
(bad)
sar
sub
xchg
or
adc
lods
cmps
dec
and
push
and
or
inc
js
push
cmp
push
xchg
les
aas
or
and
or
and
nop
dec
sbb
or
mov
(bad)
cmps
mov
jge
xchg
xchg
pop
sar
inc
jge
ret
xchg
jge
mov
or
inc
push
adc
jge
adc
std
daa
das
pusha
(bad)
jl
dec
jle
jns
(bad)
xchg
jnp
jle
jg
and
int3
jle
jle
test
jg
popa
jg
call
sub
xchg
fwait
mov
xchg
xchg
pushf
nop
test
jg
je
bnd
pop
ins
mov
push
cld
movs
or
cmp
mov
ins
adc
sub
push
mov
cmp
stc
cmc
sub
call
loopne
ds
cmp
inc
and
lahf
adc
cwde
add
lahf
aas
in
add
das
nop
and
adc
adc
cs
rol
add
and
repnz
adc
and
ucomiss
jo
out
rol
and
and
sbb
xchg
cs
add
add
ret
xchg
cmps
out
mov
test
pushf
test
test
cmps
dec
xchg
aad
add
shl
das
(bad)
movs
out
xchg
int3
xor
fcomp
fisttp
test
pop
std
inc
or
lods
push
sar
mov
fadd
es
add
sub
push
adc
mov
mov
dec
pop
inc
test
jecxz
xchg
push
mov
sub
mov
add
cwde
cdq
jo
daa
adc
xchg
pop
mov
cdq
(bad)
push
imul
xchg
sbb
or
sar
fsin
inc
test
pop
iret
cwde
cdq
js
adc
xor
mov
push
movs
and
cmp
push
repnz
adc
mov
enter
adc
adc
jns
xchg
adc
sub
pusha
xchg
pop
fild
mov
repnz
mov
inc
sbb
mov
xor
sub
push
xor
inc
cs
jns
jns
mov
jle
dec
add
jns
push
stos
cmp
xchg
(bad)
pusha
and
fmul
test
cld
call
xchg
and
retf
or
je
enter
adc
fimul
xchg
sbb
xor
add
retf
and
mov
dec
xchg
jns
retf
dec
ror
and
daa
je
sub
jl
xor
fistp
mov
imul
enter
mov
xchg
daa
das
daa
dec
ror
adc
lods
xchg
pushf
call
cmp
jns
xchg
jns
lds
or
pop
jae
enter
iret
cmc
mov
push
jl
aaa
cmp
mov
cmp
jo
or
arpl
and
jg
pop
pop
pusha
ret
fs
scas
ror
or
add
or
mov
xchg
stos
push
leave
sub
xchg
stc
mov
mov
xchg
inc
or
sub
mov
xchg
push
dec
js
mov
nop
mov
adc
or
mov
sar
pushf
es
mov
adc
jl
xchg
jl
sbb
setb
dec
bound
inc
and
cmc
test
mov
jb
xchg
jns
mov
fcom
add
(bad)
cmp
cmc
xchg
xchg
xor
sbb
push
pushf
mul
repnz
ins
jle
imul
xchg
push
lods
les
scas
mov
cmp
mov
cmp
xchg
add
adc
ins
nop
inc
xchg
inc
sahf
fsubr
jl
mov
xchg
cmp
aas
or
xchg
scas
scas
xchg
out
dec
dec
inc
fimul
and
and
cli
inc
cwde
jnp
xchg
xchg
lahf
test
cdq
push
inc
mov
adc
mov
jnp
mov
cmp
dec
mov
js
or
xchg
jge
mov
or
mov
jae
mov
push
or
mov
lea
xchg
in
cwde
cdq
mov
and
mov
jl
mov
pop
mov
ins
repz
inc
enter
jge
(bad)
cwde
cdq
test
cdq
dec
xor
in
(bad)
pop
xor
fwait
test
movs
pusha
sbb
jl
nop
(bad)
fimul
stc
and
rcl
out
stos
pop
xchg
adc
jns
cwde
cdq
(bad)
or
stc
mov
xchg
ss
es
mov
jge
or
and
add
test
into
pop
xor
add
imul
pop
jp
and
sbb
test
or
pop
dec
ret
pop
nop
xchg
pop
and
inc
adc
call
ds
(bad)
adc
and
imul
fwait
in
in
outs
and
jb
test
fwait
cmp
sub
add
and
sub
xchg
pushf
movs
and
xchg
int3
popf
adc
pop
push
xchg
mov
popfw
mov
popf
cmp
or
pop
inc
into
call
popf
inc
pop
jb
cwde
in
call
call
test
add
or
push
push
pop
mov
push
push
mov
rcr
sahf
cmp
sbb
ror
xor
(bad)
inc
or
jmp
add
and
and
in
and
stos
push
popf
push
daa
aam
(bad)
cmps
cmc
xor
es
mov
repnz
cmps
dec
add
in
jb
cmps
shr
call
sbb
mov
xchg
shr
jb
jmp
sub
adc
repnz
add
mov
inc
mov
mov
mov
neg
fimul
xor
cld
sub
lods
popf
dec
add
fwait
scas
shr
and
fwait
ja
sahf
sub
and
mov
nop
push
repnz
movs
xchg
sahf
fsubr
mov
jne
leave
in
repnz
outs
(bad)
mov
cmc
cmp
repnz
sbb
push
pushf
cmp
jns
frstor
cmp
cmp
icebp
sub
pushf
cwde
mov
dec
dec
inc
arpl
das
jg
sbb
xor
or
cmp
pop
leave
dec
dec
shr
sar
and
jno
inc
pop
leave
stos
lahf
lods
popf
shr
fcomp
cmp
pop
nop
sahf
shr
add
pushf
xchg
stos
rcr
test
movs
and
sahf
inc
pop
and
fcomp
sub
lahf
(bad)
stos
sbb
xchg
xchg
mov
dec
sahf
dec
mov
cmp
and
aas
mov
xor
imul
mov
mov
shr
shl
and
add
ret
lahf
mov
das
add
movs
retf
pop
push
leave
dec
imul
movs
shr
add
and
cmps
xor
movs
jbe
mov
loopne
movs
xchg
adc
dec
shr
push
add
jo
push
popf
(bad)
push
loope
cmps
lods
push
adc
or
cmps
cmp
aam
xchg
popf
(bad)
and
inc
pop
adc
mov
mov
cmps
shr
arpl
push
mov
xor
pop
xchg
cld
mov
push
neg
cdq
inc
or
sub
test
pop
sbb
add
pop
xchg
lods
sahf
lods
or
dec
add
inc
cdq
push
test
enter
pop
fst
stos
inc
test
xchg
cmp
lods
je
dec
push
xchg
mov
das
test
adc
pop
jle
test
adc
xchg
xchg
pop
push
addr16
scas
cmp
xchg
scas
je
enter
and
scas
ins
test
scas
adc
stc
nop
xchg
push
sub
fs
or
jmp
mov
cmp
inc
push
les
add
and
pop
sub
js
fsubr
dec
imul
xor
pop
push
sar
or
push
push
mov
mov
xchg
dec
call
add
popa
sbb
adc
push
mov
or
test
or
(bad)
das
dec
daa
mov
xor
out
mov
es
jnp
addr16
jge
adc
lods
lea
inc
out
sub
cmp
mov
mov
je
or
cmp
push
repnz
jl
ins
nop
mov
pop
das
pop
xor
pop
dec
sbb
pop
sbb
or
cmc
push
js
(bad)
mov
(bad)
int3
lods
out
stos
push
shl
lea
pushf
xchg
inc
leave
aam
dec
mov
mov
jns
cmp
in
jns
push
mov
mov
ud1
repnz
xor
jns
aad
mov
cmp
fmul
mov
pushf
pushf
ret
out
mov
dec
jns
(bad)
daa
daa
and
mov
mov
ss
mov
icebp
jbe
and
mov
leave
sub
mov
test
cmp
jno
inc
pop
leave
stos
ja
lods
loopne
aam
push
jb
lods
inc
adc
lods
inc
lods
add
and
mov
cmp
push
ja
ja
jb
dec
pop
lods
loopne
jns
xchg
add
jne
push
mov
xor
scas
fwait
sub
test
mov
mov
fsubr
loopne
loopne
xchg
je
add
mov
imul
add
loopne
inc
and
mov
in
cld
mov
xchg
and
bound
inc
or
sbb
mov
mov
sub
xor
mov
mov
sbb
push
xor
mov
adc
mov
jecxz
lds
cmp
jns
xor
adc
push
xor
pusha
and
lea
xchg
push
mov
mov
xor
in
mov
pop
mov
adc
pop
fsubr
rol
mov
dec
call
lea
loopne
or
pop
xchg
mov
add
push
repnz
add
fs
mov
int3
mov
xor
mov
or
push
enter
mov
dec
scas
mov
dec
jae
pop
mov
add
inc
mov
mov
mov
and
aas
mov
push
ds
dec
pop
pop
les
and
shl
and
mov
popa
test
not
dec
add
dec
inc
sub
pop
inc
sbb
jmp
int3
shl
sbb
mov
out
loope
or
cmps
add
fimul
mov
xchg
sub
add
adc
ss
xchg
add
adc
add
jns
add
cmp
fwait
mov
repnz
inc
cvttps2pi
shl
les
scas
hlt
push
sbb
inc
das
adc
mov
pusha
ror
sar
dec
add
add
xor
mov
jo
lock
mov
add
add
ret
add
das
stos
push
mov
add
push
sar
pop
out
push
mov
(bad)
push
push
lds
int
cmp
dec
mov
clc
mov
test
mov
sar
sub
pushf
enter
outs
xchg
pop
enter
(bad)
mov
lock
push
dec
sub
mov
mov
enter
jb
pusha
scas
cld
xor
cmp
cmp
data16
das
retf
pushf
mov
shl
dec
inc
sahf
sbb
push
mov
xlat
push
int3
push
mov
jl
daa
(bad)
mov
int
int
jo
mov
and
mov
int
leave
sub
loopne
mov
test
sub
nop
pop
leave
stos
push
mov
mov
jb
xor
sub
sub
and
jl
mov
enter
ja
pushf
or
mov
mov
mov
adc
push
jns
add
xor
adc
add
lock
pop
pop
leave
sub
adc
das
nop
mov
add
mov
mov
mov
mov
jb
cwde
mov
enter
add
mov
or
inc
or
or
mov
mov
adc
mov
mov
sbb
push
mov
mov
cmp
mov
adc
dec
inc
cmp
test
mov
mov
jns
lods
mov
xchg
dec
dec
and
mov
leave
sub
push
clc
mov
aam
mov
rol
les
leave
in
mov
add
sub
cmp
adc
movs
push
cmp
add
add
push
mov
into
xchg
cld
and
pusha
mov
add
repnz
pushf
mov
shl
add
pop
cld
das
add
mov
inc
cmp
jo
xlat
pop
xor
sub
xor
mov
shr
add
jns
iret
mov
cmp
xor
sub
pop
rcr
punpckhdq
mov
outs
push
iret
dec
and
inc
add
inc
in
dec
add
fild
cmp
cmp
bnd
rcr
xlat
dec
sbb
jnp
rol
xor
test
mov
enter
adc
es
push
adc
imul
mov
je
xchg
add
outs
mov
ss
in
xor
xchg
xchg
inc
outs
pop
js
fidiv
fidivr
mov
xor
(bad)
fdivp
push
jo
jb
jp
dec
data16
mov
dec
xchg
xor
fst
add
pop
jae
rcl
dec
jbe
ds
outs
jp
xchg
not
pop
mov
outs
outs
imul
cmp
push
xchg
imul
jo
add
xor
add
outs
jae
shr
jg
mov
xchg
dec
sub
jne
pop
jnp
das
push
jne
sbb
mov
mov
and
daa
jb
add
xlat
pop
fs
je
inc
xchg
js
jae
and
outs
pop
mov
jge
fbstp
jb
arpl
fidiv
sbb
outs
dec
pushw
das
cmps
gs
inc
cmp
out
ja
jno
inc
cmps
arpl
addr16
jns
pop
in
loopne
jae
sub
das
push
(bad)
push
add
jne
cmp
fcmovne
arpl
jb
(bad)
out
outs
clc
mov
repz
imul
punpcklwd
inc
popa
scas
or
imul
push
cmc
or
add
and
call
mov
fsub
mov
sbb
mov
mov
inc
push
test
fs
inc
sub
repz
lock
pop
sub
pop
ret
or
jne
xchg
es
je
and
adc
cmp
xor
inc
mov
sbb
xor
sbb
jge
dec
repnz
loopne
aad
adc
fistp
or
and
xor
aam
(bad)
out
imul
or
imul
out
aam
or
or
fmul
mov
and
movs
mov
adc
clc
lock
dec
pusha
dec
int
lock
push
nop
icebp
inc
add
and
adc
in
adc
adc
lock
test
mov
(bad)
jo
xchg
(bad)
mov
add
popf
add
jb
mov
inc
sub
ins
and
jnp
adc
sbb
inc
ret
push
mov
test
add
add
bound
dec
lock
dec
movs
add
and
cld
xchg
retf
in
or
cld
in
lock
or
ss
sub
fwait
dec
aam
adc
add
mov
sbb
mov
xor
dec
xchg
mov
jg
inc
push
adc
mov
mov
test
or
mov
or
inc
and
adc
or
or
add
or
xor
or
or
add
daa
xchg
mov
push
sbb
or
cld
mov
dec
adc
sbb
lea
cmp
ret
xchg
add
les
mov
inc
cmps
test
and
fcomp
push
sbb
jmp
xor
pop
popa
(bad)
adc
inc
push
or
jle
push
ret
lds
inc
or
dec
leave
cmp
add
adc
dec
in
rol
int3
or
movs
pop
add
into
lock
loopne
push
inc
jae
and
push
ja
mov
sbb
add
stc
and
xor
pop
xchg
dec
mov
bound
imul
enter
int3
add
adc
sub
aam
cbw
inc
or
xor
test
inc
lds
or
in
int3
push
inc
pop
or
adc
aaa
movs
inc
mov
add
sbb
movs
mov
adc
leave
adc
mov
cmp
fist
rcl
add
mov
dec
pop
ja
jns
sbb
stos
add
sbb
add
dec
mov
xchg
pusha
cmps
pop
inc
pusha
add
or
adc
daa
or
jg
je
ins
mov
mov
or
dec
and
invd
add
or
adc
sbb
in
mov
sbb
dec
aaa
jns
aaa
outs
xchg
dec
nop
sbb
in
pusha
xor
sub
and
xchg
add
out
pop
mov
jne
cwde
cld
sbb
lock
das
inc
movs
cmp
cli
(bad)
clc
fmul
gs
fwait
je
pop
jle
cld
or
and
nop
or
movs
ret
sti
xchg
lahf
je
or
aam
mov
or
fisttp
xchg
aam
lea
repnz
ret
cwde
jbe
stos
cmp
das
(bad)
sbb
out
inc
and
sbb
add
and
or
movs
mov
or
or
scas
dec
repnz
les
adc
sbb
addr16
mov
push
xchg
mov
jnp
push
sbb
sub
xor
pop
xchg
scas
or
mov
pop
pop
push
dec
lds
jmp
mov
ret
cmp
repnz
push
add
push
je
push
adc
jns
fisttp
nop
sub
add
mov
dec
mov
mov
daa
je
loop
movs
fdiv
mov
fcomp
fsubr
xor
(bad)
cmovp
loope
inc
pop
jmp
fld
ret
iret
retf
and
xchg
(bad)
dec
loop
xchg
add
sbb
xchg
inc
ficom
or
iret
cmp
inc
shl
sub
sub
jg
mov
(bad)
fiadd
mov
wbinvd
cmp
sti
push
jnp
jbe
mov
lock
bound
aam
pop
lock
push
jmp
add
clc
in
sub
jle
loopne
fadd
out
cli
dec
fimul
mov
jl
xor
(bad)
dec
int3
test
movs
fldcw
pop
and
pusha
cmps
sub
and
dec
pusha
arpl
mov
pop
mov
mov
inc
jns
jb
push
inc
sbb
adc
adc
mov
push
adc
in
mov
dec
push
xor
sub
sbb
retf
mov
nop
cmp
mov
movs
test
pop
inc
xor
add
add
(bad)
cld
inc
out
sub
pop
mov
jno
cmp
fmul
xchg
add
push
and
int
xor
add
xchg
push
xchg
add
sbb
ss
sub
clc
shr
mov
sete
cmps
stc
pop
add
test
jmp
or
sbb
test
imul
lods
dec
movs
nop
dec
movaps
push
test
push
jg
loope
push
ret
add
sub
jae
rol
xor
cs
inc
mov
std
aas
fwait
es
inc
xchg
call
mov
dec
es
ins
add
sahf
xchg
xchg
adc
aaa
fisub
add
add
scas
mov
or
out
and
es
or
xor
call
cmps
lods
sub
lods
gs
mov
dec
xchg
or
das
(bad)
and
(bad)
pop
cmp
fwait
lea
mov
add
daa
mov
call
sub
loopne
sub
sub
or
repz
lock
or
into
xchg
mov
enter
sbb
or
adc
sub
leave
jl
adc
mov
loope
push
ins
loope
stc
fwait
outs
pop
enter
or
dec
mov
ret
mov
ins
add
adc
dec
call
fcomp
int
push
movs
test
cmp
nop
dec
mov
or
add
and
call
lds
daa
mov
xchg
push
push
adc
test
sar
or
enter
add
mov
mov
add
icebp
xlat
out
mov
in
pop
pop
lds
aaa
aad
jecxz
jb
xchg
push
ins
aaa
fdivr
fmul
stos
nop
add
push
add
mov
xor
mov
in
cdq
repnz
push
popf
xor
jmp
hlt
adc
in
add
sub
cmc
in
cwde
push
push
leave
push
fild
scas
xchg
invd
outs
ret
jmp
mov
loop
mov
mov
fwait
or
ret
add
sbb
sub
push
leave
in
pop
ret
enter
dec
adc
sub
int
in
ja
mov
jmp
dec
push
push
pop
arpl
jns
out
outs
jne
sbb
lahf
jns
out
stos
mov
mov
out
iret
aad
loope
(bad)
iret
add
in
mov
ud2
sahf
lahf
fwait
pop
rol
add
lock
aam
in
or
pop
sbb
sbb
sbb
sbb
shl
sub
(bad)
mov
in
nop
inc
push
jp
stc
cmc
pusha
loopne
mov
cld
mov
outs
pop
div
mov
adc
push
jmp
in
push
iret
sar
out
in
sub
cmp
repz
pushf
cmps
mov
stc
cmp
repz
into
fdivr
sbb
out
jns
cmps
cmp
mov
inc
ds
and
sub
cmp
repz
dec
push
jne
jns
iret
repz
dec
out
sahf
out
xchg
mov
dec
repz
and
inc
push
jle
sahf
out
cmp
jmp
out
jno
mov
sti
mov
rdpmc
push
pop
jns
repz
cdq
dec
mov
in
hlt
push
push
js
dec
iret
repz
fnclex
push
ret
mov
mov
arpl
add
push
pushf
adc
inc
mov
pop
mov
jmp
adc
ret
mov
lds
and
loope
adc
aad
ret
outs
adc
cmp
adc
sub
stos
pop
adc
xor
adc
adc
inc
add
push
xor
inc
add
or
push
mul
and
mov
inc
mov
add
mov
aad
cwde
pop
inc
push
leave
add
and
pop
and
xchg
mov
inc
or
mov
sub
push
and
inc
sbb
sbb
sub
or
xchg
mov
dec
sbb
popa
cld
add
add
scas
mov
int3
jle
mov
inc
popf
adc
xor
push
pop
push
call
xchg
pop
call
cmp
jbe
add
add
cld
xor
lds
mov
add
jmp
ins
inc
lea
call
hlt
clc
xchg
or
push
or
sub
rcl
ror
sbb
clc
hlt
cmp
push
mov
loop
and
fdivr
mov
js
push
sbb
jmp
sub
shl
mov
xchg
movs
lahf
icebp
mov
or
xchg
xchg
dec
dec
ins
pop
xor
std
add
leave
dec
repz
pusha
add
or
xchg
adc
pop
dec
pusha
dec
pop
sub
fcom
add
add
cmp
ja
push
iret
jne
dec
test
sbb
mov
add
int
pop
int3
mov
pop
or
fidiv
aaa
or
jle
in
repz
sar
nop
cmp
push
mov
mov
sbb
data16
cmps
push
jns
or
ja
add
imul
pop
add
cmps
dec
push
or
pop
sub
or
xchg
cmps
push
jns
das
adc
dec
sub
push
or
scas
ss
sub
inc
mov
shl
push
ret
pop
inc
pusha
jae
push
push
imul
mov
adc
cmps
popf
mov
test
(bad)
add
add
repnz
cmp
repz
cmp
adc
add
or
aas
xor
movs
xor
inc
sbb
lea
dec
int
loopne
mov
sub
cmp
ins
jle
arpl
pop
sub
cmp
out
dec
pop
outs
jg
sahf
out
cmp
mov
add
pushf
pushf
cmp
nop
cmp
mov
pushf
inc
push
stos
push
mov
and
push
push
cs
or
or
or
xchg
retf
or
mov
or
or
pop
push
adc
call
push
sbb
stos
test
mov
and
adc
adc
adc
adc
pop
xchg
push
push
adc
sbb
stos
cmp
sbb
cs
or
call
cli
cs
mov
popf
dec
lahf
mov
or
sahf
out
sahf
rol
xor
outs
jl
out
jl
cwde
cmps
mov
xlat
push
jns
out
jmp
add
add
add
mov
sub
push
mov
loope
mov
and
or
push
sbb
dec
ret
nop
mov
push
adc
jmp
adc
sbb
(bad)
and
pop
stos
and
mov
xchg
int
clc
add
cld
push
std
pop
jp
out
call
xor
out
xlat
in
add
pmulhuw
mov
sbb
sub
and
ja
pop
xchg
cmp
mov
mov
ror
(bad)
and
popa
sbb
das
aaa
or
xchg
or
push
iret
push
cmp
and
cmp
xchg
sbb
xor
ret
add
shr
xlat
add
sub
and
and
adc
dec
fbld
or
jb
adc
jb
jmp
fadd
cmp
aaa
dec
add
pop
add
and
or
and
add
and
daa
out
adc
sub
lods
cld
test
aas
xchg
(bad)
mov
stos
push
popf
cmps
mov
add
cdq
jl
xor
dec
call
push
hlt
add
loop
iret
rcl
push
sub
inc
cmp
retf
jo
and
pop
dec
aas
setne
inc
mov
nop
retf
sbb
scas
ins
lock
add
or
add
aaa
mov
(bad)
cli
dec
or
or
or
repz
imul
outs
iret
repz
jge
cdq
cmps
mov
ror
loop
sub
add
push
in
pop
addr16
adc
inc
push
in
adc
in
sbb
and
and
scas
cmp
(bad)
dec
mov
add
or
fmul
repz
push
pop
push
push
lods
loope
cmp
mov
push
in
jmp
mov
retf
dec
inc
aas
(bad)
pusha
ret
adc
mov
or
and
add
(bad)
mov
sahf
pop
cmp
pop
sahf
out
inc
ins
jp
xchg
xor
xor
movs
rol
pop
jb
pop
add
jb
or
jbe
adc
xor
ficom
xchg
cmp
xor
dec
pop
pusha
leave
and
nop
add
cmp
cmp
or
mov
and
pop
mov
pop
mov
or
sub
jns
out
dec
push
and
ds
cmc
jns
out
push
xchg
and
(bad)
jecxz
sbb
push
add
nop
add
sbb
and
(bad)
and
xchg
sbb
pop
int3
shl
ror
add
push
inc
rol
in
jp
adc
and
outs
(bad)
cmp
pop
adc
push
pop
sub
repz
push
gs
add
ins
add
sub
cmp
fld
ins
or
rol
rol
xchg
push
cmps
sbb
mov
aaa
jmp
es
or
in
stos
or
push
add
adc
push
and
xor
ss
mov
das
imul
rcr
or
out
and
pop
xor
add
cmp
repz
adc
adc
repz
repz
push
pop
sbb
repz
sbb
sbb
and
out
inc
clc
and
fimul
nop
pop
push
adc
mov
aad
idiv
sar
sbb
cmp
iret
repz
outs
jg
mov
mov
aam
test
out
call
jns
out
push
xchg
mov
int3
or
stc
frstor
add
(bad)
and
dec
push
adc
adc
dec
sub
in
retf
sbb
mov
or
or
and
and
dec
sub
xchg
retf
adc
adc
jb
in
cmp
test
inc
push
inc
sub
sbb
xchg
dec
sbb
jb
in
push
sbb
pop
push
mov
push
and
pop
bound
movs
aad
aas
arpl
fs
push
test
xchg
inc
sub
mov
es
adc
pop
and
sub
in
cs
and
inc
cs
and
xlat
mov
dec
rol
mov
xchg
jg
and
je
dec
inc
xchg
je
mov
cwde
or
gs
xor
xchg
aaa
pop
shr
cwde
pop
add
out
push
cmp
lods
leave
jmp
cmp
rep
mov
into
fmul
or
push
pop
scas
push
pop
test
or
repz
xor
jg
retf
add
or
sahf
out
(bad)
or
ror
sar
repnz
cmp
and
jb
iret
je
nop
sahf
jmp
mov
jno
std
fscale
ftst
push
imul
std
(bad)
cmp
daa
std
fscale
fst
jl
or
or
dec
sub
pop
jb
in
adc
cmp
sahf
push
pop
pop
dec
sbb
dec
push
in
xor
and
mov
pop
push
inc
test
push
adc
sub
pusha
adc
push
ficom
pop
call
pop
sbb
fst
sub
jmp
fsub
jb
jnp
into
sbb
add
dec
mov
xchg
push
dec
sbb
add
and
and
and
xor
sub
add
cmp
xchg
out
stc
jne
mov
adc
fcmovnb
mov
mov
sbb
shl
add
adc
xor
sahf
out
sahf
inc
push
gs
cwde
jns
out
test
cmp
or
dec
sbb
cli
cmp
repz
push
pusha
outs
adc
jns
pop
push
add
xchg
push
outs
stos
pop
and
sub
push
pop
dec
in
retf
or
push
mov
or
push
cs
or
or
movs
xor
unpckhps
sahf
sbb
pop
xchg
out
jns
sbb
sbb
sbb
xchg
sub
xchg
add
push
call
or
push
dec
push
sbb
repz
repz
push
fs
and
adc
rcr
and
or
nop
add
adc
sbb
sbb
add
nop
sub
sub
cmp
xchg
pop
push
add
sahf
out
cmp
push
sbb
cmp
in
inc
push
bound
inc
test
add
and
add
push
and
xor
pop
or
xor
inc
cmps
adc
(bad)
adc
ret
and
cmp
push
and
xchg
sti
and
mov
loope
or
mov
mov
pxor
fdiv
pop
fimul
rcl
pop
imul
or
sbb
add
dec
scas
in
jns
loopne
push
iret
dec
mov
mov
xchg
pushf
or
lods
push
adc
ret
mov
sbb
int3
ja
dec
in
pop
mov
adc
or
fistp
push
loopne
push
mov
pop
mov
ds
xchg
out
sub
je
push
sbb
or
mov
push
enter
push
push
push
je
jecxz
ret
pop
mov
cmp
sbb
xchg
xchg
pop
push
lea
jb
dec
je
add
mov
cmovbe
test
xchg
dec
and
pop
lds
fstp
bound
inc
push
jnp
in
push
dec
dec
pop
popf
add
cmp
jmp
dec
fs
outs
push
pop
jae
mov
xchg
fadd
xchg
add
data16
dec
jg
rol
stc
bound
dec
lds
stc
cwde
in
or
dec
fadd
jmp
add
push
jo
(bad)
in
iret
pop
or
cmp
aad
leave
lahf
pusha
sbb
adc
xlat
test
lahf
out
rol
sbb
les
push
lods
sub
setae
add
pop
mov
leave
ins
mov
ret
aas
cmp
and
inc
inc
push
inc
scas
fwait
sbb
mov
mov
mov
sahf
inc
pop
in
sbb
sbb
lahf
stc
or
(bad)
mov
scas
fcom
or
sbb
xchg
fcomp
dec
adc
fst
adc
sahf
xchg
add
int
sbb
and
in
and
inc
xor
add
pop
pop
or
pop
cmps
pop
arpl
cmp
scas
popf
sbb
jg
sbb
and
sbb
div
push
pushf
ds
xchg
das
stos
sbb
aam
nop
pop
jl
push
ret
outs
jl
add
pop
sbb
stc
inc
scas
rcr
pop
sbb
in
jns
sbb
sbb
enter
sbb
push
pop
in
jns
add
push
inc
mov
in
in
mov
xor
in
xchg
loop
and
jns
jb
in
and
cmp
cmp
sahf
pushf
pushf
pushf
jno
loope
and
dec
inc
sub
lods
or
jbe
add
xor
pop
xchg
push
add
sub
rcl
ret
jb
pop
repnz
add
push
adc
dec
lock
mov
addr16
sbb
push
enter
lds
jmp
xor
sbb
and
fsub
nop
push
or
ja
push
jb
add
(bad)
sbb
push
inc
enter
repnz
push
dec
addr16
(bad)
repnz
push
mov
add
and
inc
call
mov
sbb
and
ss
movs
enter
adc
add
and
jns
leave
aas
mov
and
inc
push
dec
inc
push
inc
ficom
dec
test
pcmpgtb
sbb
push
sbb
popf
or
or
jb
xchg
xor
or
stos
dec
pop
cdq
nop
(bad)
movs
test
sbb
sbb
and
les
dec
add
add
retf
add
pop
repnz
push
push
enter
test
or
sub
pushf
bound
add
nop
inc
adc
mov
scas
in
mov
xchg
cld
add
test
in
mov
xchg
pop
sub
push
add
mov
dec
ds
inc
inc
add
pop
in
pop
sbb
out
inc
in
mov
or
dec
add
and
cmps
enter
pushf
ror
rcr
mov
sbb
sub
adc
push
xor
pop
mov
sbb
xor
xlat
xor
adc
dec
cdq
shr
adc
addr16
inc
or
jp
ins
inc
push
ret
xlat
jl
pop
add
mov
daa
dec
jo
dec
mov
ret
mov
push
jmp
xor
push
xchg
mov
je
sbb
mov
push
push
ret
aad
cmp
popa
loope
inc
clc
aam
nop
xchg
out
daa
dec
call
sar
cmp
push
push
add
ss
out
mov
lea
pop
movs
sbb
cs
sub
cmp
and
cmp
lock
mov
xchg
inc
mov
mov
xor
ret
ret
fwait
and
mov
leave
das
rcl
cld
(bad)
jne
mov
enter
mov
dec
enter
lods
in
mov
in
xchg
aam
out
sti
inc
sub
add
pop
sbb
jmp
xchg
xor
in
push
pusha
or
or
cwde
test
sub
ds
and
dec
sbb
mov
push
xor
xchg
dec
xchg
xchg
xor
push
sbb
jp
add
nop
dec
sub
shr
cmps
dec
hlt
inc
sbb
ja
in
in
ret
pop
bound
inc
mov
cmp
pusha
sbb
shr
pusha
loopne
fst
(bad)
(bad)
dec
sar
shl
push
popa
xor
mov
fdiv
add
cmc
fisub
sbb
call
cmp
cwde
add
pop
mov
sub
call
and
fcomp
push
popf
jo
inc
pusha
sbb
daa
pop
(bad)
push
stos
pop
(bad)
add
or
sub
ss
push
(bad)
cmp
lods
cdq
push
add
or
push
popa
das
and
popf
push
pop
clc
bnd
mov
jo
pop
jmp
pop
xchg
movs
xor
adc
pop
mov
mov
mov
mul
cmp
in
sub
or
cmp
add
mov
and
inc
and
out
pushf
or
in
mov
sbb
xchg
(bad)
dec
mov
sbb
enter
fdiv
mov
cmp
xor
adc
loope
add
sub
add
mov
dec
sbb
lock
sub
loopne
xor
popa
mov
sub
sub
in
div
jne
fsubr
aaa
push
inc
pop
fs
push
sbb
xor
aam
dec
adc
popa
test
fcomp
push
jl
ret
pop
ret
or
adc
jbe
in
fcom
cdq
pop
out
xor
push
icebp
enter
das
adc
xor
sahf
dec
xor
push
push
adc
dec
rol
inc
fisttp
ret
dec
pop
pop
in
mov
movs
nop
xchg
ret
xor
jo
in
out
adc
sub
xor
push
lock
mov
add
in
xchg
cmp
je
rcl
mov
pop
test
push
jns
aad
push
movs
out
cs
ret
add
in
mov
sbb
test
arpl
mov
sti
mov
pop
mov
adc
add
fs
inc
pushf
pop
or
sub
add
and
shl
aam
push
ror
loope
add
or
add
adc
sbb
scas
or
and
mov
xchg
xchg
or
xor
clc
adc
xchg
push
jp
mov
jl
xor
xor
or
xor
in
retf
inc
add
mov
mov
sub
daa
ret
or
and
das
lods
lea
xor
pop
and
enter
jns
xor
push
and
daa
jns
ret
mov
xchg
in
inc
pop
aam
inc
mov
xchg
sub
jns
sub
add
inc
push
ret
sbb
pop
pop
add
mov
xor
or
shl
cmps
add
fiadd
fsubr
xor
sbb
ins
sbb
(bad)
jmp
popa
adc
js
push
push
shl
dec
leave
ins
cmp
and
clc
mov
lock
repnz
lea
dec
stos
adc
imul
cmp
cmp
out
loop
sbb
cmp
aaa
fiadd
sbb
or
xchg
sti
and
jne
jnp
or
dec
mov
or
mov
add
push
pop
mov
shl
cmp
ja
mov
ins
jg
or
add
aad
es
fidiv
mov
and
xchg
mov
jae
ror
push
mov
out
sub
in
dec
shl
lahf
stos
int3
lods
in
pop
mov
mov
or
jle
rol
xchg
or
dec
dec
sar
and
mov
or
cmp
sbb
clc
lock
ds
je
adc
inc
xor
retf
les
jmp
jge
(bad)
xchg
test
push
mov
retf
mov
add
pop
cmps
int3
ret
mov
inc
fdiv
or
mov
bnd
(bad)
loop
or
ret
test
and
xchg
popf
jo
adc
cld
les
add
xor
lock
adc
xor
nop
mov
and
xlat
or
nop
dec
or
test
fsubr
(bad)
sbb
(bad)
hlt
hlt
push
stos
dec
sar
sbb
call
es
dec
jnp
sbb
add
jno
and
shl
xor
inc
sti
fsubr
retf
and
sbb
dec
std
ret
mov
xor
sub
mov
int3
arpl
inc
cmps
add
cmps
bound
adc
sub
outs
jp
pop
ins
pop
push
adc
retf
int
or
test
or
mov
js
add
enter
aaa
movs
fs
nop
cmp
retf
mov
mov
or
ret
popf
pop
test
sub
bound
or
sbb
sbb
adc
add
adc
mov
ret
aaa
mov
or
adc
sub
pop
adc
movs
cmp
fwait
loop
or
ja
inc
mov
sub
arpl
push
mov
pop
mov
dec
in
jmp
xchg
dec
sbb
repnz
or
inc
pop
sub
add
or
adc
iret
inc
ds
jno
jno
cmp
repnz
cmp
sbb
test
int3
sub
lea
mov
sub
push
sbb
sti
sbb
in
adc
xor
sbb
cmp
lock
xor
dec
sbb
int3
add
xor
je
jns
popf
int3
cmp
or
in
loopne
loope
push
in
rol
(bad)
dec
iret
push
jne
jne
mov
(bad)
outs
mov
movs
push
rcr
mov
int3
pop
mov
dec
out
mov
dec
add
cmp
bound
jmp
ins
ret
fadd
mov
cmp
mov
cdq
inc
mov
shr
fsubp
in
push
rcl
xor
sub
jne
jb
hlt
aam
and
xlat
mov
add
or
aam
push
and
or
jne
adc
jecxz
dec
pop
sbb
xchg
and
mov
loopne
mov
push
xchg
inc
repz
mov
xchg
xchg
sub
call
pop
icebp
jnp
lods
mov
call
sti
clc
cwde
test
cmp
clc
or
loopne
inc
or
xchg
or
arpl
cdq
gs
pop
or
cmp
xchg
psubb
and
jne
sbb
ret
mov
adc
mov
neg
mov
push
lea
or
enter
mov
sub
xlat
jns
mov
jne
inc
and
sbb
fwait
test
stos
std
fneni(8087
cmp
int
xor
and
in
xchg
jecxz
or
sbb
dec
mov
pushf
push
push
jb
jecxz
ds
in
fst
cmp
inc
sub
nop
cmp
mov
mov
xchg
(bad)
push
mov
add
dec
xchg
aas
(bad)
xor
shl
aas
mov
nop
cmp
and
dec
(bad)
dec
shl
cmp
or
cmp
jge
mov
loopne
clc
popf
fwait
aas
pop
add
(bad)
mov
pop
shr
adc
sbb
and
gs
mov
adc
ja
(bad)
das
jno
pusha
or
fcmovbe
jl
add
jb
or
fst
retf
and
xlat
imul
inc
cwde
inc
jmp
or
push
aaa
push
jmp
inc
push
ds
push
and
and
or
add
adc
dec
mov
or
lock
outs
push
adc
cdq
fild
and
in
out
imul
and
xor
je
lods
enter
jmp
and
add
sub
inc
pop
or
or
add
add
cmp
sub
ss
not
push
ins
jmp
add
js
es
or
vorps
push
mov
jmp
pop
pusha
imul
mov
sbb
sbb
test
cmp
xor
sahf
sbb
and
add
add
sub
out
in
add
call
cld
loopne
test
inc
hlt
dec
xchg
(bad)
ja
mov
adc
or
lods
pop
fmul
add
xor
ins
inc
jae
mov
xchg
mov
imul
out
jae
int
inc
sub
test
jmp
xor
or
adc
in
inc
mov
sub
add
in
jmp
fadd
mov
aaa
sbb
add
inc
arpl
sbb
or
cmp
sbb
add
sub
arpl
outs
and
xchg
xchg
mov
mov
retf
(bad)
mov
jae
pop
shr
push
xor
sar
retf
and
fadd
sub
fs
jle
xchg
cmp
pop
sbb
add
dec
sti
cmp
out
adc
adc
es
push
sbb
and
and
(bad)
iret
sub
or
loopne
add
mov
in
jmp
add
pusha
xor
mov
movs
or
add
loope
inc
inc
sub
shr
cmp
push
add
test
sub
jp
scas
sub
fisub
adc
xchg
hlt
push
push
add
repnz
jmp
mov
iret
push
repnz
sbb
and
aaa
lods
mov
mov
adc
and
xchg
and
test
or
movs
ror
xchg
push
ins
loop
sbb
sbb
scas
push
xchg
and
inc
inc
xor
inc
cmc
ret
xchg
xchg
xchg
xor
test
sbb
pop
cmp
pop
or
mov
or
(bad)
ret
mov
or
or
pop
shl
add
mov
dec
dec
cmp
movs
in
bound
mov
fnsave
jmp
add
frstor
ret
or
push
dec
dec
or
(bad)
sub
mov
xchg
sbb
sbb
add
cmps
inc
mov
or
imul
sub
(bad)
sbb
or
and
add
call
xlat
loopne
mov
or
or
sti
sbb
add
in
xor
jne
cmp
sbb
fs
mov
cwde
xchg
icebp
sbb
(bad)
xchg
or
inc
inc
pop
fs
sbb
xchg
pop
push
dec
xchg
cmc
or
mov
sub
jmp
aad
or
les
or
dec
lea
add
cmp
jg
outs
fimul
ja
xor
movd
dec
pop
(bad)
cmp
lahf
cmps
sub
adc
adc
loopne
xchg
daa
add
mov
cs
push
sbb
add
push
sbb
sub
popf
jmp
pop
setnp
enter
pop
dec
push
aas
fimul
inc
or
sbb
daa
add
or
dec
push
imul
ss
mov
sbb
ss
fadd
add
jns
sub
push
sbb
popa
and
adc
dec
inc
cs
push
adc
sbb
cs
adc
nop
or
pop
mov
scas
enter
es
add
cs
jo
inc
xchg
sbb
inc
jmp
pop
cwde
mov
cmp
adc
adc
sbb
push
int3
push
mov
jmp
mul
xlat
mov
xchg
enter
cld
inc
sub
les
push
pop
sbb
fwait
adc
jg
es
xor
or
push
enter
pop
into
push
or
xor
sub
push
add
sub
and
or
dec
push
xor
in
mov
gs
sti
(bad)
or
dec
cdq
inc
push
outs
pop
repz
jae
mov
ret
inc
bswap
into
pop
and
aad
mov
inc
add
iret
lock
inc
mov
pop
adc
jmp
or
jmp
or
adc
jmp
adc
or
xor
or
clc
mov
ret
das
mov
push
adc
push
sti
icebp
push
pop
lds
in
into
js
bound
jbe
sub
movs
mov
xchg
push
adc
push
jl
jmp
das
ss
sbb
adc
jno
and
inc
lds
add
(bad)
sbb
into
popa
mov
dec
(bad)
or
sbb
and
jmp
popf
jno
mov
imul
cmps
ja
mov
xchg
outs
push
lds
mov
popf
out
cdq
scas
mov
mov
daa
sbb
xor
adc
push
cmp
inc
imul
push
push
fstp
aaa
adc
jmp
pop
cmp
pop
or
or
sbb
or
lock
and
out
sbb
movs
add
sbb
or
ja
xchg
ins
or
fwait
pusha
push
xor
push
into
nop
jbe
dec
aaa
push
and
nop
add
add
dec
mov
inc
mov
xchg
das
cmp
or
sub
adc
and
sbb
pusha
jne
push
cmovb
xchg
push
das
cmp
adc
ror
and
fwait
push
mov
adc
push
add
sbb
retf
daa
mov
leave
sbb
mov
or
adc
add
sbb
jne
jle
push
sbb
pop
dec
sahf
xchg
sldt
adc
add
push
add
mov
or
sbb
leave
shl
sbb
and
test
lods
es
adc
and
cmps
es
add
inc
inc
mov
jbe
ins
jecxz
or
daa
add
inc
daa
hlt
push
aaa
adc
les
dec
sti
mov
mov
inc
aas
or
push
jnp
lds
push
test
sahf
mov
popa
dec
push
sub
data16
imul
xor
cmp
fwait
pop
daa
push
adc
jge
adc
xor
xor
sahf
ins
(bad)
jae
ds
dec
sbb
and
fs
pop
movs
sahf
dec
dec
dec
loope
or
ds
adc
mov
int3
ins
adc
cmp
push
sbb
test
inc
std
and
mov
imul
mov
sub
and
inc
adc
ss
and
lds
and
fdiv
adc
or
rcr
xor
adc
mov
or
shl
and
and
ret
pop
in
push
cmp
sub
mov
and
rol
inc
mov
mov
in
add
daa
or
sbb
or
cwde
imul
mov
xor
inc
adc
adc
test
and
cli
mov
pcmpeqb
pop
imul
inc
jae
or
rcr
retf
or
cwde
cs
adc
ss
mov
div
jecxz
dec
mov
sub
(bad)
pop
dec
push
mov
fdiv
aad
daa
xchg
shl
or
mov
pop
pop
push
or
adc
into
push
loope
clc
and
cmp
xchg
test
rol
cmps
pop
(bad)
adc
xchg
lds
les
ds
push
popf
je
push
rol
sub
les
jl
xor
inc
dec
loope
mov
inc
cmps
daa
inc
or
and
aam
push
and
add
push
fs
inc
inc
mov
outs
pop
test
sub
jne
pop
and
int3
push
xor
ret
add
or
add
fimul
lods
pusha
addr16
mov
test
dec
push
clc
(bad)
inc
cwde
test
daa
popa
adc
add
(bad)
pop
and
jmp
adc
push
cmc
out
and
dec
pop
inc
mov
add
ret
inc
add
push
inc
popa
and
test
xor
call
add
inc
popf
cdq
or
jmp
fistp
icebp
scas
xor
mov
inc
outs
or
jge
cmp
dec
sbb
mov
jp
cmp
mov
add
mov
cli
sub
outs
lods
mov
addr16
jmp
mov
push
lock
or
xchg
(bad)
pop
lock
arpl
lock
mov
sbb
xor
mov
pusha
sbb
das
repnz
cmp
and
mov
jecxz
and
fstp
stos
aas
inc
or
icebp
xchg
xchg
sub
or
and
dec
pop
bound
cmps
(bad)
cmp
mov
add
jne
clc
pop
add
cmp
inc
xor
or
ins
dec
jl
sbb
xchg
(bad)
(bad)
dec
pop
hlt
hlt
sbb
dec
add
js
push
mov
xor
add
das
gs
adc
enter
push
push
ins
pop
push
inc
cmp
adc
inc
add
sbb
(bad)
rol
ret
lahf
fiadd
add
and
sub
mov
or
dec
and
mov
mov
push
dec
mov
add
adc
sub
mov
pop
lock
dec
inc
fadd
push
ss
(bad)
mov
ret
mov
jl
adc
and
mov
out
data16
adc
sbb
xchg
loopne
pop
addr16
sbb
nop
ss
lahf
fisub
lea
lock
je
cwde
ret
sbb
push
sbb
pop
out
sbb
or
sbb
jbe
ins
and
ret
xor
pushf
test
inc
(bad)
pop
xchg
bound
or
push
xchg
mov
inc
adc
add
cld
ins
in
inc
hlt
lods
bound
or
cwde
mov
shr
hlt
jae
loope
bound
hlt
adc
add
ss
cmp
retf
shl
jnp
jcxz
jl
aam
push
pop
mov
dec
pop
xchg
(bad)
dec
sti
mov
push
push
jmp
sbb
dec
pop
cmp
add
adc
test
pop
adc
(bad)
js
pusha
mov
rcl
rcr
mov
sub
repnz
repnz
pushf
into
test
pop
call
sbb
cld
shl
mov
fild
xlat
mov
mov
adc
push
jae
sub
jl
cmp
pop
inc
or
or
sbb
fwait
out
mov
loopne
rcr
fld
movs
daa
or
shr
out
and
jecxz
mov
daa
pop
sbb
mov
sub
(bad)
push
ins
mov
add
push
xchg
mov
adc
push
pop
pusha
add
inc
inc
push
gs
add
ret
dec
addr16
loopne
sub
or
leave
cmps
jno
adc
push
add
in
jmp
push
addr16
and
in
adc
gs
or
leave
mov
ret
fmul
outs
or
lea
and
cs
(bad)
sub
push
mov
push
add
pushf
arpl
adc
xchg
jmp
cmp
daa
enter
pop
rol
xchg
mov
cmp
add
jl
fs
nop
dec
xor
outs
jae
inc
cmp
or
add
sbb
adc
push
ss
clc
or
sub
adc
ficomp
pop
and
jge
adc
shl
icebp
fadd
outs
inc
ins
retf
fcom
cs
sbb
test
test
push
inc
pop
jb
cmp
jl
nop
dec
jb
loop
sbb
mov
mov
nop
inc
outs
or
xchg
inc
jae
push
jno
mov
mov
ret
ins
retf
cmp
add
cld
mov
popa
mov
cwde
ds
mov
mov
stos
mov
xor
js
les
dec
mov
sub
mov
sbb
xchg
jg
dec
add
out
dec
push
inc
rcl
or
inc
xor
cmc
jge
xor
add
imul
imul
or
daa
call
push
mov
inc
xor
and
xchg
movs
nop
call
(bad)
mov
jmp
cli
leave
and
inc
rol
adc
mov
test
push
aad
jecxz
adc
mov
pop
and
mov
inc
sbb
pop
xchg
and
push
nop
dec
jle
adc
push
xor
inc
pop
dec
push
sub
test
mov
dec
inc
and
(bad)
xlat
aas
add
test
sahf
xchg
or
mov
ret
sbb
sbb
jle
add
adc
movs
shl
mov
test
adc
or
call
mov
popa
push
cwde
pop
rol
inc
ret
adc
fidiv
nop
(bad)
mov
or
mov
jg
(bad)
mov
push
add
out
movaps
popa
and
std
add
mov
inc
or
add
adc
jne
mov
in
sbb
pop
dec
cmp
sbb
sti
push
add
inc
pusha
sti
(bad)
or
sub
jo
xchg
jmp
lock
int
ja
sbb
repnz
xor
jns
ja
sahf
jmp
inc
fisttp
adc
clc
and
sbb
jnp
jecxz
and
sub
jl
push
adc
push
pop
xor
pop
enter
mov
pop
mov
push
imul
icebp
cs
inc
add
in
xchg
push
in
push
lock
call
dec
sub
mov
xor
call
fisttp
pop
mov
xchg
sub
outs
dec
hlt
push
pop
repnz
push
jb
mov
repnz
sbb
div
popa
inc
sbb
push
call
and
dec
lea
jmp
cmp
push
(bad)
ins
imul
dec
fwait
cmps
mov
test
pop
lods
xchg
and
adc
and
jp
jno
pop
hlt
cmc
jnp
pop
ss
mov
mov
and
sbb
ja
popf
xchg
cmp
outs
test
sbb
fdivr
push
xchg
pop
or
sub
mov
pop
xchg
popa
jmp
sub
retf
scas
pop
push
xor
mov
or
mov
lock
cmc
pop
popa
dec
add
adc
or
dec
les
push
pop
xor
jl
je
stos
jle
and
dec
ins
push
dec
sub
hlt
or
inc
or
add
cdq
cmps
stos
inc
mov
adc
and
jl
outs
xor
sub
iret
ins
inc
fdivr
xor
or
retf
in
sti
pop
or
cmp
pop
dec
inc
clc
test
or
adc
jne
push
xor
(bad)
mov
push
xlat
push
push
jnp
dec
push
imul
sub
mov
int3
pop
lock
inc
jnp
iret
jae
push
test
sbb
or
lds
mov
mov
xor
mov
aad
push
cs
sub
je
xchg
dec
popa
sub
xchg
pop
rol
and
mov
cmp
loop
or
daa
dec
test
xchg
jg
imul
adc
cdq
or
mov
leave
or
test
pusha
retf
in
pop
(bad)
mov
sub
sbb
fadd
and
add
jnp
and
cld
ins
mov
inc
(bad)
(bad)
in
xlat
cmp
jb
out
xchg
scas
in
pop
inc
dec
jns
in
ror
jb
in
dec
ror
adc
pop
js
es
xchg
mov
call
push
xor
loopne
fsubrp
mov
dec
arpl
mov
push
(bad)
lods
stos
mov
shr
or
je
inc
sahf
sub
hlt
inc
pop
dec
lea
dec
dec
and
shl
clc
mov
pop
sub
fucomip
lock
adc
pop
xchg
add
rol
(bad)
shl
fwait
dec
jl
adc
outs
ret
loopne
mov
xor
push
fwait
pop
cld
cmp
jge
or
cdq
test
aaa
push
add
dec
inc
pop
pop
and
(bad)
iret
and
je
dec
and
adc
and
ret
aas
mov
js
or
mov
inc
inc
das
pop
pop
in
jmp
fadd
push
xchg
imul
retf
mov
xor
jl
js
shl
add
xor
popa
xor
mov
ret
adc
movs
test
fisubr
or
inc
mov
fs
enter
leave
aas
imul
or
dec
(bad)
adc
je
ret
pusha
test
inc
cmp
sbb
add
cmp
add
out
clc
cmps
mov
mov
int
rcr
xchg
adc
inc
adc
dec
add
or
adc
sub
aas
xchg
call
outs
loopne
push
adc
and
inc
xchg
iret
or
out
call
in
jl
or
cmp
int
or
or
mov
or
fcmovnb
dec
and
fdivr
nop
push
lods
dec
fist
mov
pop
jmp
hlt
mov
inc
fbstp
test
call
ficom
cmps
push
aam
addr16
mov
add
jg
lahf
lods
jge
or
jnp
add
(bad)
(bad)
data16
(bad)
pop
inc
xor
stc
jmp
sbb
sbb
adc
and
adc
cvtdq2ps
clc
out
mov
lahf
imul
sbb
sar
and
or
rol
test
push
push
adc
inc
push
xor
shl
ret
js
loop
dec
or
ret
adc
dec
push
cmp
(bad)
test
daa
push
(bad)
hlt
retf
cmps
adc
push
in
jmp
jne
or
sub
cld
movs
and
and
jns
test
cs
es
test
jo
js
movs
push
enter
or
mov
mov
pop
jle
nop
pushf
and
jp
jp
inc
movs
dec
inc
mov
imul
inc
sub
push
dec
mov
(bad)
movs
je
and
adc
add
jb
mov
fs
push
add
fmul
not
add
data16
push
sub
lea
mov
jmp
or
sbb
into
xor
call
fucomi
cmp
push
cmp
mov
lahf
test
push
adc
and
xchg
pop
repnz
ja
js
and
add
sar
lods
dec
cmps
push
dec
adc
xchg
jmp
ds
xchg
push
popf
nop
pop
cs
jge
and
and
enter
xor
(bad)
ds
pop
push
test
mov
mov
xor
dec
fld
sahf
push
jl
jnp
or
loop
push
push
enter
jmp
sub
sub
xchg
(bad)
loopne
lea
cmp
rcl
in
ret
sub
aad
and
add
pop
dec
xchg
add
scas
das
movs
dec
imul
add
sbb
mov
pop
sub
nop
movs
adc
add
mov
sbb
outs
aam
and
outs
aas
dec
repz
sub
outs
jno
sub
test
push
cmp
mov
je
add
aam
jns
bound
mov
jle
arpl
and
mov
rcr
jge
adc
xor
cmp
jns
push
mov
dec
into
push
xor
sub
enter
or
inc
push
enter
outs
cmp
jg
sbb
and
add
add
outs
mov
rcl
dec
imul
ret
out
les
daa
ins
push
sub
add
bound
repz
hlt
sbb
mov
test
jp
inc
daa
lock
inc
and
(bad)
inc
push
cmc
fwait
mov
and
js
mov
inc
jg
daa
(bad)
repnz
sbb
imul
in
jno
loope
enter
fcomp
enter
and
jo
jo
fist
mov
sbb
ins
jb
jo
cmp
xchg
pop
or
jb
ins
sbb
pop
or
add
pop
add
mov
or
adc
mov
mov
jl
daa
outs
cmps
jb
je
jae
ret
xchg
fild
inc
imul
mov
sbb
lahf
(bad)
retf
fnstsw
and
sahf
es
lock
jmp
test
loope
retf
dec
les
inc
adc
sub
jb
out
gs
rcr
jb
test
jns
stos
inc
aas
call
add
push
dec
xor
out
shr
call
test
adc
call
cmp
add
fbstp
or
dec
pop
pop
jge
inc
aam
add
push
das
daa
nop
add
jne
jne
loope
jns
or
shl
adc
fwait
add
xor
out
pop
fild
enter
mov
ret
and
push
cmp
xchg
arpl
js
int
sub
enter
adc
jne
push
in
pop
or
pop
in
sbb
cmp
adc
cwde
adc
(bad)
push
aas
out
test
cmp
adc
xchg
and
or
aas
aaa
out
or
dec
add
fcomp
imul
adc
fld
ss
fbld
xor
shl
or
mov
(bad)
jne
add
and
leave
dec
daa
ins
and
push
mov
dec
xchg
add
sub
sbb
add
scas
cmp
cmp
inc
clc
shr
ror
data16
mov
ins
adc
adc
daa
sbb
sbb
inc
inc
add
sbb
or
sub
push
jns
bound
jbe
(bad)
fisttp
outs
movs
dec
lahf
mov
(bad)
dec
jnp
xor
shl
or
add
pusha
sbb
cmps
movs
ret
adc
(bad)
jle
stos
add
fwait
std
adc
inc
daa
push
out
cmps
jo
xlat
add
jge
cli
fwait
and
mov
fsub
mov
jl
cmp
iret
or
(bad)
and
arpl
movs
je
xchg
pop
std
ss
sbb
daa
mov
test
rcl
dec
xor
pushf
add
popf
sbb
mov
add
fcmovnb
pop
movs
push
fadd
fdivr
dec
sbb
push
aam
dec
ins
scas
dec
or
(bad)
mov
mov
pop
or
dec
dec
lods
add
lds
(bad)
mov
rcl
or
(bad)
in
in
mov
les
pop
das
jnp
jns
jb
jnp
fisttp
repnz
jne
cmps
push
xchg
sbb
mov
push
int
and
pop
out
pop
cmp
lods
leave
enter
sub
out
mov
mov
mov
cmp
out
add
data16
fdiv
loope
jb
mov
mov
mov
and
mov
nop
xlat
loopne
and
mov
(bad)
cmp
jb
fist
leave
stos
in
call
add
cmp
test
in
dec
in
enter
adc
lods
jne
je
adc
sbb
mov
adc
xlat
inc
cwde
mov
(bad)
dec
lods
cmp
test
imul
in
sbb
lods
cmp
mov
das
nop
pop
repnz
mov
mov
xchg
and
and
mov
jmp
and
sub
(bad)
push
retf
fadd
inc
push
xor
fisttp
sbb
outs
addr16
lods
es
sub
aad
addr16
aad
adc
ret
pop
out
inc
sub
pushf
xor
outs
jno
jmp
jo
pop
lds
xor
inc
leave
sub
aad
jns
js
aad
test
xchg
xchg
repnz
sub
std
push
sbb
xchg
mov
(bad)
and
xchg
push
repnz
xchg
mov
mov
jns
xchg
xchg
ins
gs
adc
xchg
lods
cmp
add
mov
sbb
inc
lea
ror
cmovae
pop
imul
popa
xchg
and
or
jae
xchg
pop
cmp
div
push
push
call
xchg
in
mov
cmc
mov
xchg
in
pop
jns
cdq
lock
pop
lock
dec
neg
movs
stc
adc
xchg
and
test
or
inc
in
xchg
sub
cmp
stos
push
or
les
push
add
sbb
sub
sbb
mov
and
push
cmp
sub
ins
sbb
cmp
shr
adc
pop
in
and
ror
add
test
cmp
and
xchg
scas
nop
and
test
xchg
(bad)
test
xchg
cwde
test
rcl
stc
xchg
pop
xchg
repnz
mov
pop
out
test
sti
test
mov
or
pop
add
mov
jb
js
hlt
ror
add
mov
sti
movs
retf
dec
or
js
lahf
xchg
les
inc
mov
in
sub
retf
mov
in
shl
cwde
inc
je
lods
push
sti
into
cwde
mov
nop
xchg
out
cld
in
cwde
in
sar
pop
add
mov
inc
mov
dec
lods
cwde
xchg
adc
dec
xor
cmp
cwde
outs
clc
cwde
(bad)
call
(bad)
inc
cmp
mov
adc
push
xchg
adc
xchg
lods
mov
daa
movs
and
adc
pop
adc
call
clc
push
into
mov
les
test
rol
jmp
nop
sbb
add
(bad)
sahf
out
adc
leave
mov
or
mov
loope
add
pusha
rol
add
or
xor
mov
mov
adc
xor
or
loope
cmp
cmps
push
(bad)
push
inc
out
sar
call
enter
adc
jb
ficomp
adc
fs
enter
dec
nop
prefetchwt1
mov
pushf
neg
xlat
and
add
(bad)
pushf
xchg
pop
xlat
push
and
lea
xchg
adc
(bad)
lds
hlt
mov
jbe
cmp
mov
stos
mov
push
(bad)
pop
call
nop
pop
sti
adc
mov
and
call
mov
lahf
jle
retf
mov
xor
jmp
cmps
jmp
sbb
xlat
xlat
es
(bad)
and
push
jl
cdq
and
or
jle
adc
fxch
add
push
pop
pop
je
sbb
test
ins
add
or
adc
sub
shl
xchg
mov
in
and
clc
and
xchg
mov
mov
dec
movs
add
push
pop
cli
inc
add
lock
inc
add
sbb
ror
movs
test
rcr
push
add
pusha
in
(bad)
mov
pop
(bad)
sbb
repz
(bad)
icebp
mov
push
outs
arpl
imul
and
imul
mov
mov
dec
or
xor
inc
mov
fld
mov
and
ja
cmp
(bad)
call
leave
xchg
dec
mov
xchg
mov
dec
push
fwait
into
pop
fiadd
sbb
loop
fadd
or
aad
xchg
cs
xor
push
jmp
add
pop
imul
pop
pop
(bad)
addr16
push
jb
inc
pop
out
mov
xor
rcr
sbb
ret
cmp
and
mov
ret
out
add
pop
lock
in
xchg
sub
or
or
imul
test
lods
movs
jno
retf
cmp
idiv
adc
or
push
(bad)
and
call
xchg
(bad)
sub
js
rol
and
daa
je
adc
fsubr
sub
mov
mov
sub
clc
and
js
dec
mov
dec
and
retf
shl
dec
sub
xchg
adc
adc
adc
xchg
adc
ret
outs
cmp
sbb
fbld
jb
add
adc
cmps
or
aam
ja
inc
lahf
adc
push
push
inc
test
dec
push
lds
adc
pop
xlat
prefetch
pop
nop
cmp
or
and
or
xchg
xor
and
and
dec
add
push
sbb
lock
sar
imul
(bad)
jmp
adc
in
ja
popf
(bad)
retf
xchg
cld
ja
adc
xchg
enter
inc
shl
int3
push
pop
movs
mov
inc
push
enter
test
inc
pop
dec
and
adc
test
test
cdq
pusha
aam
leave
and
leave
cdq
and
xor
push
cdq
xor
sub
test
nop
xchg
xchg
push
js
movs
mov
pop
lods
jb
ror
daa
aas
push
lods
ror
cmps
lods
pop
jb
movs
add
cmps
dec
push
lods
lods
cdq
xor
mov
popf
fcom
(bad)
sahf
les
or
add
push
xor
in
aaa
scas
cwde
pusha
cmp
or
stos
scas
popf
pop
cdq
sbb
adc
add
in
pop
lahf
aam
mov
cmp
add
enter
dec
xchg
add
call
mov
mov
imul
push
push
rcl
pop
ror
or
scas
nop
inc
cdq
xor
lods
lods
sbb
pop
cdq
mov
mov
xor
sar
outs
movs
add
xchg
js
jb
test
xchg
push
enter
mov
xor
push
sub
pop
dec
movs
cwde
enter
jb
movs
pop
movs
push
lods
adc
push
cmps
pusha
mov
xchg
xchg
cmp
mov
inc
push
repnz
fsub
push
leave
or
(bad)
outs
push
mov
fidivr
lea
je
mov
movs
push
push
test
mov
cmps
cwde
scas
and
push
cmps
cwde
push
and
xchg
inc
and
xchg
push
test
mov
scas
je
or
push
and
cmps
les
mov
push
cwde
inc
mov
push
cwde
scas
je
adc
call
movs
call
leave
mov
outs
scas
je
pop
adc
and
or
mov
push
or
call
xchg
mov
mov
mov
test
imul
shl
pop
ror
test
push
test
nop
ror
daa
scas
inc
sahf
in
aam
sbb
cwde
daa
(bad)
in
mov
mov
aad
fnstcw
mov
mov
enter
jmp
je
and
dec
and
push
sbb
mov
(bad)
ror
or
inc
loop
inc
or
mov
mov
mov
aaa
adc
aam
(bad)
popf
push
and
div
lock
xor
push
push
lock
icebp
lea
pusha
(bad)
in
dec
and
push
xor
cmps
sbb
out
add
add
ror
aam
lods
and
push
sahf
mov
push
xor
out
jl
adc
cmp
inc
mov
cmp
sub
pop
mov
sbb
into
les
add
jns
lds
leave
inc
push
aaa
out
mov
or
push
mov
mov
adc
ret
lea
jno
inc
jl
mov
sub
and
mov
mov
rcl
mov
lock
adc
or
mov
mov
push
imul
add
cs
or
add
adc
and
repnz
cmp
(bad)
rcl
add
loope
fldcw
add
push
fsubr
inc
out
or
xor
adc
xor
into
add
add
push
inc
or
sbb
rcl
sbb
mov
outs
hlt
enter
push
add
hlt
hlt
and
jb
mov
pop
enter
push
push
aaa
inc
shr
ja
pop
imul
in
movs
mov
sbb
pop
imul
nop
and
daa
mov
nop
xchg
mov
xlat
leave
or
inc
mov
fwait
xchg
and
popf
clc
sub
stos
inc
retf
and
das
or
mov
sub
lea
mov
leave
sub
icebp
xchg
mov
arpl
mov
pop
pop
adc
pop
jl
adc
mov
add
ret
pop
loop
out
fs
mov
shr
ds
movs
aam
and
fnstenv
mov
hlt
pop
jl
not
test
in
(bad)
int3
lods
in
or
dec
call
mov
lahf
test
clc
clc
push
ret
mov
inc
cli
add
jle
jno
je
invd
sbb
push
xchg
mov
loopne
movq
loop
es
mov
mov
mov
add
(bad)
mov
repnz
fsub
iret
ins
fcmovnb
and
cmp
cmp
je
sub
cmps
dec
and
xlat
dec
rcr
and
inc
jbe
(bad)
enter
test
adc
mov
in
adc
jns
adc
je
(bad)
rol
nop
scas
cwde
adc
cs
(bad)
sub
arpl
in
mov
div
jns
bound
sbb
mov
mov
mov
mov
dec
push
cmps
mov
add
(bad)
rcl
pop
pop
mov
mov
sub
fucomp
retf
jl
fwait
dec
add
pushf
fmul
adc
adc
jne
jne
popa
sbb
sbb
sbb
adc
adc
jg
push
jl
test
ins
push
adc
call
add
dec
lock
fucomp
jnp
(bad)
dec
(bad)
ja
repnz
dec
jae
rol
push
dec
cmp
sub
or
aaa
add
or
cmp
add
lock
and
mov
hlt
jp
pop
les
sub
shr
add
lods
push
mov
inc
adc
cmp
add
push
popa
sbb
enter
jle
push
lods
sbb
adc
xlat
or
pop
mov
cmp
xchg
mov
(bad)
xchg
add
and
inc
repnz
pop
and
retf
fs
inc
push
mov
inc
sahf
adc
enter
ror
pop
shl
mov
inc
inc
shl
mov
pop
xlat
(bad)
cmps
dec
push
dec
sar
push
shl
mov
or
lds
clc
xlat
nop
pop
add
in
cmp
repz
sub
push
and
arpl
ret
cld
(bad)
in
sbb
cmp
push
leave
pusha
test
adc
xchg
cmp
xlat
mov
retf
mov
leave
pusha
rcl
sub
rcl
adc
adc
pop
leave
pusha
adc
daa
dec
push
adc
pop
and
push
jl
in
pop
dec
rcl
jl
add
dec
retf
test
daa
(bad)
in
adc
je
in
and
fs
in
inc
add
sub
push
pop
dec
repnz
mov
int3
mov
dec
dec
and
jns
int3
dec
int3
pop
leave
or
rol
pop
mov
push
xlat
xor
push
nop
lods
ficom
call
push
adc
ficomp
pop
add
(bad)
test
inc
fild
jns
into
fild
enter
(bad)
sbb
pop
int
rol
pop
test
shr
shl
adc
sub
mov
or
or
nop
pop
pop
loop
and
sub
shl
rol
and
(bad)
aad
xchg
int
sub
and
adc
nop
mov
xor
nop
mov
dec
and
mov
sub
jb
fmul
fsub
adc
aad
or
push
nop
adc
repnz
in
mov
xchg
int3
fcom
dec
xlat
pop
xor
imul
in
setp
xlat
cld
lods
pop
dec
dec
jb
xlat
rcl
xchg
pop
adc
fidivr
int3
jns
and
fadd
loop
dec
adc
dec
push
pop
jns
movs
push
test
stos
in
nop
jmp
(bad)
jmp
xor
pop
out
fadd
xchg
sbb
jmp
int3
xchg
inc
and
push
int3
mov
fsub
and
fdivr
pushf
add
int3
in
fcomi
sbb
jns
shr
jo
mov
hlt
jno
jns
jb
dec
out
loopne
or
leave
add
jo
sub
add
out
mov
or
in
repnz
fldcw
les
fmul
sbb
cmps
adc
out
fadd
sub
int3
nop
pushf
and
int3
pop
xor
xor
int3
inc
enter
imul
xchg
xchg
pop
loop
fmul
add
add
jecxz
jecxz
scas
inc
sahf
dec
pop
adc
jecxz
and
jmp
or
ret
sbb
jo
repz
or
repnz
into
push
mov
in
push
lock
pop
hlt
inc
loopne
or
mov
inc
stc
mov
adc
xor
repz
add
add
imul
nop
inc
xchg
mov
or
loopne
add
dec
mov
xchg
and
or
sar
xchg
imul
call
in
sub
call
sbb
lea
lar
adc
idiv
pusha
pop
stos
in
xchg
mov
mul
adc
inc
in
mov
addr16
mov
cmp
pop
jmp
cmp
xor
add
lea
gs
or
dec
add
and
and
adc
imul
in
inc
stc
add
sbb
or
sbb
mov
dec
rcr
ins
jge
pusha
add
pop
leave
ror
jle
fmul
sbb
xchg
pop
movs
cli
push
leave
xchg
inc
push
lock
pop
stos
xchg
xchg
xchg
add
add
add
adc
pop
sti
pop
add
sbb
cmp
pop
lar
ss
inc
adc
in
int
test
inc
sti
dec
and
add
sbb
out
pop
jmp
and
test
enter
sbb
mov
jno
pop
jge
call
inc
mov
adc
push
jmp
in
dec
push
ja
(bad)
jmp
mov
lods
jbe
xor
mov
push
sub
inc
push
call
and
add
cmc
cmp
test
jge
pop
shr
and
pop
lea
pop
fidivr
sbb
retf
mov
pop
cmp
xchg
adc
jg
or
leave
jecxz
sar
aas
adc
jge
icebp
(bad)
cs
pop
daa
xchg
xchg
or
push
mov
jle
inc
xchg
dec
call
or
push
and
xchg
sbb
inc
mov
leave
add
and
or
push
repnz
or
mov
das
push
(bad)
out
pop
and
xchg
fucom
add
shr
and
inc
call
add
add
dec
xchg
lods
sub
dec
aaa
dec
or
inc
daa
adc
jns
xor
xor
dec
dec
sbb
cmp
inc
jge
sbb
mov
jl
push
adc
add
popa
mov
jnp
mov
xlat
out
lock
les
jns
pop
dec
dec
leave
retf
repnz
rol
bnd
or
inc
or
cmp
jne
leave
dec
push
repnz
call
lea
adc
xor
push
pop
inc
jg
xchg
mov
clc
mov
xor
dec
(bad)
arpl
cld
stos
fs
aaa
inc
js
jg
rcl
test
clc
fisub
out
loop
cmp
pop
lds
call
hlt
inc
das
pop
daa
or
jmp
and
add
dec
shl
inc
or
das
xchg
add
xchg
loopne
dec
ja
in
xchg
pusha
stos
mov
and
sbb
pop
jmp
or
dec
dec
dec
shr
xchg
repnz
and
push
dec
push
pop
dec
es
push
leave
sbb
or
and
bnd
cmps
pop
pop
not
pop
xchg
dec
inc
or
pop
lods
xchg
jp
dec
pop
hlt
js
xlat
and
or
jg
mov
js
dec
cli
sahf
movs
push
or
sahf
xchg
dec
dec
inc
rcl
aas
cdq
xor
imul
movs
adc
es
pop
leave
and
adc
push
sub
xchg
mov
fs
add
loope
xor
sbb
test
dec
clc
cmps
xchg
lock
test
sbb
or
popf
xor
ret
lahf
shr
mov
fbld
and
pop
xor
adc
add
dec
or
xor
add
mov
pusha
add
add
xchg
shr
or
std
mov
sbb
push
(bad)
popa
shl
push
in
dec
or
cmp
push
sub
cdq
mov
xchg
sbb
dec
push
jge
call
shr
xchg
daa
mov
mov
ins
sub
or
loopne
and
stos
and
lods
in
inc
out
repz
sub
sbb
call
std
mov
push
outs
outs
push
shl
mov
in
mov
int
jbe
add
stos
inc
out
sbb
xchg
sbb
sub
pop
sbb
bnd
daa
repz
enter
cmove
and
sbb
es
inc
pop
dec
in
mov
clc
iret
push
cmp
pop
xlat
push
jbe
repnz
dec
leave
add
push
or
sbb
sbb
str
adc
(bad)
sysret
cwde
lldt
add
(bad)
push
pop
pop
jns
scas
sbb
push
add
sub
mov
push
adc
jg
inc
repnz
push
sub
push
cld
lea
pop
dec
adc
and
shr
(bad)
call
syscall
mov
inc
jmp
call
(bad)
call
lock
dec
syscall
add
in
not
dec
test
jl
cmp
pop
dec
syscall
add
inc
outs
pop
dec
(bad)
fs
ds
sysret
nop
lar
or
(bad)
sbb
mov
das
dec
inc
into
sbb
mov
add
dec
(bad)
lar
leave
add
lgdtd
fsub
adc
pop
(bad)
fs
sbb
pop
and
dec
sbb
dec
mov
xchg
ror
add
xchg
lods
sbb
or
jns
mov
js
or
dec
push
cmps
and
movs
and
xchg
lods
pushf
je
sbb
sbb
and
sbb
aas
sub
(bad)
gs
and
daa
xchg
and
sbb
inc
push
adc
mov
xor
add
add
and
leave
push
in
sub
leave
xchg
add
fs
xchg
xchg
mov
cld
and
jo
push
mov
sbb
or
cmp
mov
xor
and
hlt
inc
inc
adc
ret
sub
pop
add
mov
mov
addr16
shr
add
add
leave
jno
int
adc
xchg
pushf
sbb
adc
(bad)
dec
sub
jle
fdiv
adc
add
fdiv
test
cmp
cmp
ja
push
dec
and
xchg
push
mov
cmp
push
and
and
in
inc
mov
and
xor
test
dec
pop
push
sbb
and
aam
mov
xchg
lock
and
and
push
loope
xchg
iret
dec
leave
adc
xchg
mov
fbld
pop
mov
and
mov
and
shr
inc
mov
in
fwait
rol
dec
mov
fadd
and
inc
nop
add
aam
repnz
pop
popa
pop
xchg
push
sub
shr
add
and
dec
fcom
cmp
ret
fmul
xor
(bad)
aaa
fs
shl
sti
add
test
fwait
adc
scas
mov
xchg
movs
loopne
jge
inc
adc
xchg
adc
and
sub
loope
aad
and
fs
sub
push
xor
adc
push
xor
or
or
or
lods
add
dec
in
push
add
dec
inc
enter
dec
sbb
lock
inc
cmp
fcomp
xor
or
push
mov
lahf
mov
fdiv
bound
in
add
add
ds
sbb
inc
or
xchg
enter
add
push
and
aam
(bad)
inc
cmp
in
call
push
dec
fsub
test
call
loopne
cmp
ss
mov
dec
call
hlt
push
cmp
lea
ja
movs
cdq
pop
inc
loopne
jbe
leave
add
add
jae
pop
ret
(bad)
in
pop
and
xchg
and
adc
sub
dec
add
mov
retf
push
cmp
aaa
aaa
in
rol
cmp
and
push
mov
and
add
movs
outs
jns
call
or
and
pusha
and
neg
cs
xor
dec
ss
mov
nop
loop
iret
(bad)
and
add
daa
push
adc
imul
inc
enter
pop
xchg
dec
add
and
dec
adc
jno
jnp
test
push
out
or
or
dec
jbe
fdiv
add
cmp
and
cpuid
and
mov
sahf
inc
loope
add
mov
fmul
fmulp
outs
add
sbb
adc
xor
and
dec
push
add
mov
mov
add
inc
bound
jb
xchg
add
lds
or
add
inc
repnz
pop
dec
cs
add
adc
lods
ja
dec
sbb
xchg
xor
or
stos
cmp
cmps
scas
dec
push
fs
xor
ja
hlt
xlat
test
add
push
mov
sbb
xor
mov
dec
lods
add
mov
and
or
dec
push
inc
inc
popa
or
test
mov
xlat
jnp
scas
cmp
xor
dec
pop
ds
lock
xor
dec
mov
push
sub
aam
or
je
dec
mov
push
jl
cmps
das
mov
sbb
dec
mov
inc
fisttp
add
lea
cs
dec
arpl
jo
test
dec
sahf
xchg
add
and
dec
lock
add
pop
cmps
push
fadd
(bad)
retf
cmp
pop
aaa
inc
dec
js
sbb
mov
mov
dec
rcl
xchg
ffreep
add
fisub
xor
inc
inc
sbb
mov
push
daa
push
mov
lods
rcr
nop
sub
cmp
cmp
lock
dec
push
dec
pushf
cmp
inc
cmp
add
or
test
inc
dec
in
leave
lods
popf
shrd
inc
repnz
fs
jns
jb
dec
or
inc
cmp
cmp
push
pushf
int3
sti
pushf
pushf
mov
dec
push
(bad)
(bad)
dec
inc
sahf
pushf
out
adc
xchg
add
sbb
aaa
cwde
cmp
mov
dec
pop
ja
add
inc
imul
int3
rol
dec
dec
dec
enter
ror
or
push
nop
pop
fmul
fdiv
pusha
add
test
inc
push
xor
cwde
rcl
add
enter
aam
call
sbb
cmps
or
hlt
ja
inc
jmp
in
aam
dec
dec
xor
in
pushf
nop
dec
mov
jl
in
test
mov
add
movs
test
movs
push
retf
inc
push
xchg
pop
and
(bad)
add
inc
enter
(bad)
add
add
xlat
aas
mov
test
retf
or
jns
fadd
dec
dec
adc
nop
cmp
fadd
dec
dec
aam
xor
fstp
cmp
fld
retf
(bad)
in
fld
dec
dec
dec
fst
mov
or
fldcw
fs
jae
or
retf
adc
pop
add
sub
push
test
jecxz
inc
jge
sub
retf
test
push
stos
and
retf
mov
rcl
retf
cld
fcmovu
ror
pop
ret
jl
aas
add
push
and
mov
retf
push
push
dec
and
pop
leave
dec
dec
shr
push
loope
inc
push
pop
pop
jge
clc
mov
sbb
or
mov
enter
arpl
stc
push
mov
dec
add
repnz
dec
and
sub
xchg
or
inc
or
jmp
sbb
sbb
add
dec
pop
add
xchg
call
cmp
cmp
je
lahf
das
mov
mov
lds
push
out
cmps
inc
lea
out
fcom
dec
pop
pop
(bad)
dec
or
jecxz
pushf
sub
mov
push
movs
out
xchg
pop
and
xchg
das
pusha
(bad)
fisub
daa
sbb
loopne
hlt
test
xor
mov
sahf
push
scas
int3
ins
(bad)
nop
arpl
fucomip
cmp
push
call
fiadd
scas
and
xchg
inc
leave
or
dec
jl
mov
pusha
dec
mov
fst
mov
dec
push
jae
movs
nop
jb
lock
jo
cmp
cmp
inc
sahf
pushf
pushf
mov
or
dec
dec
dec
cdq
mov
daa
daa
and
je
aad
xchg
daa
daa
stc
xor
pop
jle
xchg
aad
push
scas
xor
push
mov
dec
pop
xchg
push
adc
or
and
fcom
dec
dec
leave
rcr
fcom
dec
ss
pop
fbstp
mov
inc
hlt
(bad)
push
dec
ins
and
and
inc
sbb
jns
add
ins
loopne
push
ror
ins
add
mov
je
mov
rcl
loope
and
mov
push
push
and
loop
ins
shl
push
enter
push
or
cmp
loopne
inc
push
shl
in
imul
mov
push
jo
cmp
mov
xchg
push
pushf
adc
and
xor
xchg
sahf
mov
jecxz
dec
enter
cmp
fcom
in
inc
ret
dec
imul
inc
int
dec
les
or
movs
in
shl
in
scas
or
call
cmp
cmp
fs
nop
push
add
int
out
nop
add
adc
and
call
jl
push
dec
int
out
in
mov
add
ds
int
pushf
cmp
pusha
inc
add
or
adc
mov
pop
test
and
inc
cmp
sub
imul
add
rcr
mov
fadd
pusha
push
and
push
inc
mov
loope
pop
repnz
pop
dec
sbb
mov
add
aaa
ret
xchg
push
mov
cmp
inc
mov
mov
pop
fsubr
mov
inc
pop
push
pusha
mov
mov
and
(bad)
repnz
stos
in
test
repnz
and
(bad)
loope
push
pop
aas
mov
adc
jns
inc
pop
and
repz
pop
inc
sbb
and
leave
pop
adc
pop
dec
mov
or
mov
push
and
rcr
retf
mov
(bad)
pop
call
adc
push
jns
or
dec
lods
pop
sub
inc
leave
or
sbb
bswap
(bad)
xor
pop
dec
mov
mov
psubq
pop
jae
enter
leave
pop
pusha
gs
leave
call
in
cwde
loopne
bound
jb
jb
dec
test
jns
arpl
shl
pop
cmp
fs
mov
in
movs
(bad)
dec
dec
daa
mov
jmp
in
jmp
sub
xchg
add
js
jmp
enter
gs
xor
and
mov
jmp
jmp
inc
pop
jb
gs
pop
in
ja
mov
pop
and
or
test
in
mov
mov
(bad)
fcomp
pop
mov
ss
out
or
inc
jb
gs
mov
inc
enter
out
ins
push
stos
pusha
imul
and
out
jb
in
and
lock
stos
jmp
(bad)
fdiv
mov
push
leave
lods
lock
lock
sbb
lock
imul
(bad)
xchg
ins
mov
sub
nop
inc
inc
jecxz
inc
push
lods
push
test
lea
or
(bad)
fdiv
jns
pushf
(bad)
ror
adc
xchg
dec
lock
stos
lea
mov
jns
xchg
repnz
lods
in
gs
lea
mov
popa
push
call
rcl
mov
inc
add
rcl
(bad)
pop
lds
push
shl
dec
and
cdq
or
in
(bad)
out
add
out
call
les
adc
adc
popf
ds
sbb
mov
test
dec
loop
dec
sbb
shr
push
adc
ficomp
dec
test
mov
dec
lods
cmp
jnp
jnp
jne
in
push
loopne
dec
ins
sqrtps
imul
cmp
and
add
dec
das
gs
je
dec
inc
push
mov
xor
in
jb
xchg
mov
in
imul
mov
add
push
mov
add
adc
and
pop
add
or
add
inc
pop
scas
push
and
or
mov
imul
cli
dec
push
movs
add
mov
dec
inc
pop
test
add
(bad)
les
out
data16
xchg
inc
leave
or
data16
data16
sbb
xchg
(bad)
hlt
in
lahf
ins
out
ins
clc
daa
daa
and
pop
outs
inc
jg
xchg
xchg
daa
daa
aad
outs
jno
enter
(bad)
jo
fs
leave
scas
mul
jno
repnz
in
mov
and
jb
xor
movs
in
aas
retf
retf
inc
sbb
jae
movs
jae
ror
retf
shl
je
xor
neg
and
neg
xchg
push
push
div
push
and
neg
xchg
adc
pop
je
clc
mov
je
cmp
pop
je
sbb
das
dec
push
cmp
and
jnp
leave
or
stc
sbb
mov
movs
adc
pop
adc
mov
push
ins
sti
pop
dec
leave
inc
bound
cmp
or
pushf
or
cld
aas
pop
mov
mov
jnp
std
pop
je
inc
jb
fdivr
pop
je
or
add
popf
lahf
scas
xchg
sbb
shr
jmp
je
jmp
arpl
pop
pop
dec
mov
imul
and
pop
jns
pop
leave
fdivr
pop
je
add
in
mov
mov
pop
dec
pop
or
dec
shr
pop
and
inc
sahf
bound
add
aad
inc
or
push
add
dec
pop
sub
test
nop
ja
jns
stc
pop
je
clc
add
adc
adc
mov
push
sub
in
pop
mov
and
lods
sub
push
js
pop
inc
pop
pusha
and
mov
jg
stc
je
and
sub
dec
pop
enter
inc
repz
xor
test
gs
les
xor
test
sbb
shl
jmp
jg
jbe
cmp
xchg
js
push
sbb
fstp
fild
cmc
push
les
adc
push
repnz
mov
adc
repnz
ja
xchg
push
repnz
mov
adc
xchg
pop
repnz
sub
add
pop
pop
add
jg
in
in
ja
hlt
cmovg
js
push
dec
nop
jb
enter
mov
pop
fistp
(bad)
iret
sub
data16
push
pop
clc
js
cmp
loopne
das
pusha
jne
jne
mov
mov
dec
xchg
xor
pop
cmp
jp
mov
leave
enter
pmuludq
jnp
fs
leave
mov
adc
repnz
xchg
enter
sbb
jb
in
jle
cmp
cmp
push
popf
pushf
pushf
mov
pop
xchg
ficomp
and
aas
cmp
xchg
xor
pop
pop
mov
leave
add
add
and
or
dec
dec
sbb
pushf
jno
add
sub
dec
inc
sahf
nop
push
dec
sbb
dec
or
sbb
fiadd
sbb
dec
sbb
jg
pop
dec
dec
cmps
nop
inc
dec
or
or
mov
rol
mov
ins
mov
mov
icebp
or
sub
imul
cmp
dec
xor
imul
leave
pop
sub
in
or
cmp
es
test
jb
or
dec
or
fsub
repnz
dec
dec
cmp
push
pop
fdivr
movs
in
or
int3
push
jae
cmp
dec
dec
xor
push
push
inc
or
push
jns
in
sbb
movs
pusha
xchg
dec
fldcw
mulps
lock
sbb
pop
dec
or
bound
mov
fsubr
push
or
(bad)
xor
dec
adc
cmps
pop
pop
add
sbb
xor
jno
mov
add
xor
push
pop
nop
daa
or
add
and
inc
mov
inc
lea
and
sub
push
and
sub
push
mov
cmps
mov
or
xor
inc
add
cmovs
and
push
nop
test
and
adc
test
leave
retf
stos
in
mov
sub
lds
jae
jns
sub
mov
mov
or
sbb
add
inc
ror
inc
ret
(bad)
scas
sbb
dec
sbb
js
mov
test
mov
int3
dec
mov
mov
and
ins
adc
adc
jns
or
push
sbb
leave
or
or
xor
pop
seta
hlt
in
iret
xchg
xchg
daa
daa
daa
mov
getsec
jae
repz
xchg
xchg
daa
add
leave
enter
mov
in
in
fbld
mov
xor
in
stos
loop
mov
jbe
jb
popf
aam
sbb
ins
bt
mov
daa
das
inc
mov
icebp
enter
test
adc
dec
dec
adc
push
in
dec
fdiv
pop
leave
add
ins
adc
mov
push
jb
pushf
adc
push
lea
inc
push
enter
adc
mov
push
nop
xchg
clc
cmp
cmp
add
in
enter
adc
and
nop
adc
adc
mov
popf
add
fwait
mov
test
cmps
add
xchg
pop
mov
pushf
pop
mov
fcomp
aas
dec
jno
jo
imul
add
or
mov
xchg
inc
push
sbb
push
or
popf
lahf
jns
cmp
test
sbb
adc
test
sbb
cmp
(bad)
sbb
sbb
ins
shl
sbb
sub
mov
fcomp
xchg
adc
dec
mov
push
add
pop
inc
repnz
mov
push
lods
adc
test
inc
enter
xchg
mov
test
sbb
push
adc
mov
jbe
dec
test
movs
jbe
fidivr
leave
sbb
push
pop
leave
pop
lods
push
test
inc
adc
sub
sub
retf
hlt
xor
lods
or
sub
dec
(bad)
mov
dec
add
sub
inc
add
sub
mov
sbb
jmp
sbb
rol
push
or
inc
add
adc
loopne
pusha
or
push
and
xchg
xchg
inc
add
enter
ret
adc
pop
je
leave
jbe
cmp
add
sbb
dec
mov
and
dec
mov
jns
and
xchg
cmp
les
movs
and
or
je
xor
push
sbb
xchg
dec
out
nop
cmps
push
leave
xor
and
sub
xchg
adc
sbb
cmp
data16
mov
xchg
pop
xchg
lock
daa
dec
mov
xchg
not
xchg
and
sahf
xchg
sub
jge
jl
in
jb
dec
mov
mov
cmp
pop
pushf
push
dec
mov
nop
push
jb
xchg
dec
mov
xchg
and
cmp
add
or
add
dec
mov
add
xchg
dec
out
in
push
jb
les
add
push
jmp
push
dec
sub
jb
xchg
cmp
loopne
fs
leave
xchg
and
clc
xchg
in
add
sub
xchg
fidiv
dec
push
sub
jb
jbe
loopne
cmp
cmp
pop
in
rol
cmp
nop
push
jb
rcl
sbb
xchg
hlt
xchg
or
xor
xchg
or
adc
psubb
pop
or
xchg
and
repnz
(bad)
cwde
and
add
rcl
(bad)
cdq
cdq
xchg
cdq
cdq
cdq
mov
aam
pop
cdq
out
inc
mov
cdq
in
xchg
adc
call
sub
pop
repnz
inc
and
mov
adc
and
and
push
repnz
dec
and
aam
fcomp
fs
mov
aad
or
or
test
xor
fld
scas
sub
pushf
daa
xor
les
dec
in
dec
jmp
cmp
and
or
cs
jne
pushf
xchg
push
dec
push
sbb
push
sbb
add
int
push
or
lock
sahf
mov
ficomp
fsub
add
fcomp
pop
popa
call
add
add
push
in
or
ss
and
in
popf
neg
add
sub
dec
ret
sbb
in
xchg
push
xchg
lahf
pushf
sahf
mov
mov
popf
lahf
inc
cmps
add
or
pushf
cmp
jb
jo
sub
loopne
jb
rcr
cmp
enter
push
std
lahf
movs
push
add
lahf
or
mov
xor
sbb
push
lock
ins
add
push
and
mov
pop
inc
pusha
mov
xor
mov
out
add
test
(bad)
lahf
push
test
cmp
mov
jl
inc
mov
les
cmp
in
mov
mov
mov
add
add
dec
jl
inc
and
jl
xor
sbb
jl
cmp
dec
test
in
scas
sbb
dec
cdq
int
dec
xchg
subsd
add
xchg
mov
cmp
xor
pop
aaa
lods
xor
ins
movs
ja
add
out
and
mov
pushf
sub
movs
pushf
movs
cmp
mov
cmp
jb
movs
movs
in
movs
aaa
push
push
or
mov
in
jb
sub
pop
add
and
test
sub
nop
push
jb
mov
test
cmps
dec
mov
push
pop
out
inc
sbb
xchg
add
push
dec
es
xor
cmps
and
push
and
repz
hlt
jns
mov
mov
(bad)
ins
ss
cmp
cmps
movs
pushaw
test
cmps
in
xchg
xchg
pushf
test
sbb
jb
shr
and
movs
or
and
sar
adc
push
movs
data16
movs
cmp
cmps
movs
data16
test
xchg
cmp
xor
jmp
out
sbb
sub
xchg
and
out
aad
jbe
sbb
or
and
stos
scas
sub
xor
jnp
jb
push
cmp
out
mov
lods
mov
repnz
and
ins
inc
xchg
push
sub
mov
in
cmp
jne
stos
mov
and
mov
rol
inc
loopne
int
push
inc
cmps
pusha
out
or
dec
adc
and
rcl
sbb
(bad)
out
add
out
icebp
shr
out
mov
push
scas
lahf
dec
mov
movs
scas
mov
and
fisubr
xor
fwait
cmp
push
xor
enter
mov
mov
nop
adc
mov
lods
mov
cwde
scas
mov
push
movs
jo
fsub
and
fst
adc
int3
out
pop
sti
xchg
rcl
fdiv
das
adc
cmovb
add
dec
nop
push
sub
daa
in
jo
jo
dec
dec
pop
push
push
mov
mov
add
fwait
das
cmp
aam
jo
pop
ret
mov
mov
aam
lahf
pop
or
stos
or
sbb
and
mov
mov
shl
call
cs
pop
enter
mov
xchg
inc
mov
mov
mov
and
sub
sbb
push
mov
shr
adc
jno
xor
cmp
sub
jno
in
xchg
ja
pushf
in
pop
mov
mov
mov
jb
mov
mov
mov
mov
xchg
in
pushf
or
rcl
xchg
fdiv
and
mov
jo
cs
mov
lods
in
rcl
rcl
inc
inc
xchg
imul
mov
enter
adc
mov
es
mov
adc
pop
mov
cdq
cmp
add
xchg
add
repnz
int
sub
xor
in
cld
mov
pushf
mov
cld
mov
je
and
inc
loope
call
mov
push
call
fimul
hlt
mov
inc
sahf
pop
enter
xor
cmp
mov
call
xor
or
cmp
in
sbb
adc
test
movs
mov
pop
jmp
or
lahf
int
and
data16
in
int3
mov
fwait
mov
call
inc
mov
xor
cmp
add
mov
lods
cwde
push
and
pop
in
icebp
js
(bad)
enter
push
shl
sbb
mov
enter
pop
mov
inc
mov
add
mov
mov
mov
shl
in
mov
in
mov
mov
movs
inc
pop
leave
mov
nop
xor
push
jb
in
mov
add
cmp
add
lds
dec
cmp
pushf
in
mov
pop
mov
jp
nop
mov
sbb
and
and
mov
sub
pop
dec
test
loopne
pop
jb
mov
and
inc
inc
shl
add
pop
mov
stos
cwde
test
imul
push
mov
jle
cmovb
xchg
mov
and
in
lods
stos
lods
stos
nop
dec
pop
push
mov
out
mov
sub
(bad)
pusha
and
jo
jb
add
add
nop
sub
pop
pop
dec
int
push
adc
mov
ins
dec
in
in
test
rcr
cmp
shl
das
psllw
inc
push
enter
lods
lods
or
rcr
es
aaa
pop
in
lods
push
les
loopne
lods
push
cmps
ins
and
push
and
arpl
sub
push
pop
push
adc
xchg
sti
sub
push
jmp
jb
push
fadd
cld
cmps
scas
or
rcl
and
mov
and
lock
call
sbb
mov
scas
dec
push
cmp
dec
adc
adc
pop
mov
clc
mov
out
jl
call
push
add
adc
jno
and
test
mov
mov
push
aas
fs
in
or
ins
arpl
mov
sub
scas
xchg
leave
push
xchg
sub
xchg
sub
je
push
fdiv
sub
inc
sub
jb
jne
aas
dec
rcl
stos
push
jb
xchg
sbb
push
add
mov
shl
(bad)
out
inc
ja
(bad)
jnp
add
mov
push
ins
jb
mov
dec
sbb
pop
sbb
xor
mov
dec
jae
sbb
das
and
cmp
jns
sub
ss
or
lock
outs
div
outs
sbb
xor
add
jecxz
cld
xchg
aas
jl
or
dec
adc
loop
jb
inc
dec
into
sbb
and
or
pop
xor
xor
and
xor
xor
inc
(bad)
aas
dec
sahf
cwde
es
and
imul
push
push
aaa
(bad)
push
in
dec
xor
in
add
xchg
cmp
inc
xor
inc
mov
and
push
mov
ror
add
jno
add
fild
das
mov
hlt
or
or
fisttp
les
or
ja
dec
add
daa
push
or
inc
fsubr
dec
cmps
nop
nop
push
int
jne
leave
and
shr
daa
movs
fs
mov
nop
pop
ss
dec
dec
(bad)
out
lock
jg
sub
outs
leave
dec
leave
stc
out
leave
retf
pop
movs
pop
test
retf
add
xchg
daa
mov
cmpps
inc
enter
mov
fs
jp
int
dec
into
mov
retf
adc
call
inc
iret
sbb
fwait
paddb
rcl
mov
(bad)
shl
shl
dec
dec
inc
js
sbb
daa
daa
mov
dec
aam
leave
enter
aad
mov
add
adc
retf
test
mov
push
add
inc
lods
or
out
test
(bad)
ret
mov
and
push
xor
add
popa
add
(bad)
push
adc
loope
add
sub
mov
dec
jbe
dec
dec
(bad)
stos
add
sbb
sub
jae
fistp
sub
jle
mov
dec
pop
add
pop
ins
xchg
pushf
inc
add
and
adc
rol
les
inc
add
lea
push
inc
scas
ins
adc
outs
jae
in
shr
add
fdivr
dec
das
imul
in
sub
xchg
cld
or
(bad)
es
xchg
call
cmp
adc
gs
push
dec
cmp
mov
jnp
xchg
add
inc
sahf
nop
in
add
sbb
add
shr
push
or
mov
cmp
or
sub
sub
push
ja
adc
and
aaa
add
pop
push
(bad)
adc
jl
mov
or
dec
test
or
push
jb
adc
out
test
loopne
dec
push
fwait
sub
pop
lock
push
cmp
mov
pusha
rcl
or
lods
fadd
add
and
jl
push
jp
retf
scas
add
lahf
mov
pop
cwde
xor
push
daa
inc
(bad)
dec
inc
add
xor
pop
and
pop
mov
ins
xchg
jo
and
lods
push
loope
adc
add
mov
mov
cs
push
sub
imul
cmp
and
sar
jg
test
or
mov
pusha
sbb
push
add
or
aam
daa
cmp
lods
retf
or
and
xchg
or
add
add
clc
nop
sub
ins
mov
and
fimul
xchg
mov
mov
mov
les
rcl
inc
dec
retf
or
xchg
cmps
xchg
add
loopne
aas
dec
cmp
test
adc
inc
(bad)
adc
adc
in
fadd
add
inc
add
lahf
adc
adc
pop
dec
ret
mov
je
pop
inc
icebp
sub
outs
pop
mov
je
mov
mov
sbb
push
adc
mov
ins
xchg
mov
inc
xchg
imul
popa
add
and
ins
shl
inc
inc
(bad)
dec
sub
sahf
adc
mov
pop
xlat
sbb
stc
add
neg
or
sbb
or
enter
leave
enter
jmp
fmulp
jne
jb
ins
adc
mov
inc
jo
mov
xchg
scas
ds
sub
call
fwait
movs
dec
and
rol
or
(bad)
(bad)
(bad)
call
(bad)
cmp
dec
push
(bad)
(bad)
inc
mov
dec
(bad)
call
push
sbb
int
push
std
sub
addr16
(bad)
or
add
mov
pop
push
xlat
sub
sbb
sub
xor
cmp
or
or
push
mov
sub
cli
repnz
(bad)
mov
es
cmp
stc
cmp
popf
ficom
xor
pop
leave
xor
jecxz
mov
mov
pop
add
sbb
mov
inc
add
aas
sub
fwait
stos
sub
int
call
add
fist
cmp
setb
xchg
mov
add
lods
daa
call
and
fcom
jo
movs
ffreep
dec
and
retf
in
add
fimul
cdq
add
add
or
daa
call
push
fcomp
cmps
xor
inc
pop
pop
pop
rcl
out
aam
test
sbb
lahf
fs
(bad)
adc
xchg
gs
push
inc
(bad)
pop
fisttp
fwait
ret
bound
les
dec
push
xor
cmp
popa
inc
inc
jecxz
lods
pushf
and
and
xor
xchg
push
push
cmp
cmp
add
or
push
cmp
inc
retf
cmp
or
call
sub
test
stc
inc
stos
mov
lods
xchg
aas
push
mov
push
and
push
test
retf
je
adc
push
mov
test
call
aaa
inc
xchg
out
jno
movs
mov
fadd
mov
pandn
test
popa
iret
adc
dec
adc
jo
and
adc
dec
sbb
pop
inc
jo
in
xor
push
nop
pop
and
and
add
movs
push
and
sub
or
fisub
adc
inc
test
dec
fimul
xor
sbb
or
bswap
(bad)
jae
push
push
or
addr16
adc
movs
adc
add
adc
dec
mov
or
add
xchg
or
or
leave
or
(bad)
fcomp
fs
cmp
popa
mov
cs
mov
mov
outs
loopne
outs
add
fst
sbb
pop
and
inc
ins
inc
push
xor
push
cmp
ret
aaa
xor
(bad)
push
lods
popa
push
arpl
jp
fsubrp
cmp
fisubr
mov
in
jl
(bad)
cdq
add
rcr
inc
pop
jge
test
arpl
jns
(bad)
fimul
and
xchg
cli
hlt
and
es
adc
loopne
test
test
ja
test
rcr
jl
scas
movs
(bad)
or
lock
and
test
mov
pop
sbb
pop
stc
fbld
mov
dec
push
and
dec
in
mov
loopne
je
or
iret
jne
stos
leave
out
cmc
mov
clc
jmp
jbe
pop
add
icebp
pop
dec
test
and
imul
icebp
lods
adc
cmps
push
jg
push
fxch
mov
setg
and
adc
mov
xor
fiadd
push
and
dec
adc
test
add
ror
mov
scas
mov
pop
dec
or
scas
or
ins
xor
jns
std
pop
cs
inc
or
push
or
add
adc
sub
cmp
mov
in
es
jge
xchg
dec
pop
push
shr
imul
outs
add
dec
xchg
clc
cmp
and
loop
and
clc
push
je
std
pop
mov
rol
dec
movs
push
sbb
pop
pusha
push
and
push
lock
loop
cmp
clc
xor
fwait
push
lea
ds
adc
pop
add
dec
lods
in
out
inc
or
movs
(bad)
mov
fmul
sbb
or
adc
jbe
in
pop
ret
mov
jmp
cmp
jbe
mov
lds
stos
mov
xor
ret
sbb
lock
das
mov
fld
and
adc
adc
fnsave
adc
in
in
repnz
xor
daa
in
inc
cmp
inc
cmp
add
call
nop
mov
pmuludq
call
inc
mov
or
xchg
and
(bad)
pop
leave
mov
rol
push
in
xor
cmps
stc
push
push
inc
add
int
jmp
push
cmp
push
and
add
sub
sub
push
cwde
ret
pop
rol
or
dec
xor
ret
jl
dec
ds
xor
adc
adc
or
xor
loope
cs
jae
xchg
je
pop
bswap
xchg
mov
fidiv
xor
jg
jmp
jo
dec
retf
jmp
ins
jl
int
add
(bad)
fistp
push
jno
arpl
sbb
nop
push
dec
cmp
mov
xor
rol
add
adc
adc
or
mov
and
dec
arpl
arpl
rol
imul
ret
push
sbb
adc
retf
rcl
(bad)
adc
pop
inc
push
pop
push
xor
les
and
inc
aam
jge
mov
push
cmp
pop
add
cmp
pop
adc
mov
mov
sub
dec
cmp
xlat
xor
out
dec
add
cmp
sub
in
sbb
stos
push
jnp
sub
scas
outs
repnz
sahf
nop
push
adc
push
dec
push
das
or
push
fucomi
vmovhps
sbb
mov
dec
xchg
fcom
and
add
xor
inc
popf
cmps
pop
or
loopne
mov
inc
loopne
fcom
xor
lods
adc
push
sbb
sub
mov
mov
adc
cmp
popf
add
aad
dec
adc
xor
in
or
inc
jge
inc
shl
push
call
xor
and
push
and
stc
retf
sbb
ins
inc
pop
add
out
mov
ret
inc
mov
es
mov
mov
(bad)
leave
fmul
mov
mov
xchg
jmp
xchg
pushf
mov
inc
out
or
adc
push
test
test
dec
ds
in
inc
jmp
ss
sub
shl
cwde
jge
push
pusha
jle
js
es
pop
pop
hlt
jne
cmp
add
(bad)
in
sub
push
xchg
dec
aas
push
adc
rcl
sub
add
retf
(bad)
mov
dec
jmp
data16
add
cmp
(bad)
jmp
and
cmps
lock
movs
sub
in
sub
pop
popa
sub
sbb
clc
ss
cmp
and
mov
shl
mov
repz
jg
dec
mov
mov
sahf
les
ret
movs
in
cld
push
dec
inc
jne
leave
push
mov
test
sbb
or
sahf
push
popa
push
fisttp
pusha
mov
sub
push
and
xor
daa
cmp
xchg
das
hlt
addr16
or
add
ret
push
inc
leave
and
iret
ins
and
pusha
pop
fstp
mov
inc
sub
sub
(bad)
ja
fld
xchg
shl
in
dec
movs
mov
clc
adc
in
and
xchg
push
jmp
in
in
cmps
dec
dec
jo
loopne
and
dec
add
cmp
jge
or
or
mov
call
(bad)
in
adc
add
sub
cmp
sub
daa
lea
jg
dec
push
test
ins
inc
cld
mov
mov
sbb
push
test
xchg
loopne
int
(bad)
jmp
cli
(bad)
test
addr16
fwait
add
mov
inc
jle
sub
mov
adc
add
gs
push
out
mov
sub
xchg
mov
iret
cld
aas
push
dec
push
lds
addr16
out
inc
test
xor
ror
add
pop
ret
(bad)
mov
jmp
jg
lock
mov
iret
mov
inc
cmp
xor
cmp
sub
popa
pop
setle
jmp
adc
sub
bound
ja
es
or
mov
loope
xor
mov
push
out
mov
outs
xchg
inc
sbb
imul
test
test
add
add
push
or
aad
pop
imul
add
inc
and
retfw
inc
loop
pop
mov
(bad)
cs
daa
inc
fidivr
mov
sub
add
and
add
retf
or
cmp
adc
and
ins
mov
sbb
into
adc
mov
add
mov
xchg
add
ins
cmp
sub
adc
repnz
cmp
in
std
and
pop
cmp
sbb
in
inc
sti
jecxz
ss
push
adc
sbb
jbe
mov
inc
ins
sub
in
push
in
push
iret
jne
rol
cmc
push
in
daa
jns
repnz
pop
dec
pop
jg
adc
(bad)
fcomp
jg
jge
mov
adc
adc
sbb
es
out
fisub
sbb
push
clc
jno
inc
dec
jne
push
nop
(bad)
les
repnz
dec
ins
pop
jecxz
inc
xchg
fsubr
add
push
inc
dec
nop
mov
leave
add
fwait
arpl
mov
idiv
pop
fistp
push
jecxz
add
dec
pop
xchg
xchg
lods
test
mov
fdiv
addr16
pmulhuw
ja
adc
adc
add
in
xchg
add
xchg
hlt
clc
xchg
retf
dec
hlt
ja
pusha
outs
stc
hlt
mov
adc
ret
jle
sbb
sub
fwait
hlt
test
sbb
leave
inc
pop
mov
and
enter
pavgw
std
mov
or
add
leave
ret
dec
push
add
fs
in
cmc
dec
and
mov
imul
jo
shl
add
add
add
adc
repz
das
bnd
int3
(bad)
jns
lea
inc
call
inc
sub
and
repnz
lock
and
rep
inc
mov
push
sbb
add
shr
sub
xchg
cs
daa
inc
sbb
xor
jbe
dec
or
fcomp
push
inc
push
into
in
cmp
retf
ins
cdq
lahf
mov
movs
add
rol
xlat
adc
adc
sbb
sub
ret
hlt
sub
pop
enter
push
stos
aam
lock
aaa
push
xor
xchg
hlt
jge
and
jne
mov
(bad)
dec
jbe
leave
mov
(bad)
cdq
dec
xchg
arpl
loopne
shl
cmps
add
or
or
aaa
stos
and
clc
mov
pop
clc
inc
hlt
adc
inc
pop
das
mov
dec
inc
dec
push
aad
rcr
pop
loopne
inc
test
fild
cmp
and
mov
(bad)
in
adc
sub
out
and
(bad)
and
data16
add
dec
cmp
daa
xchg
out
or
xchg
movs
sub
sti
dec
xchg
loopne
or
lock
jbe
add
cmp
addr16
adc
fs
enter
dec
mov
(bad)
jmp
push
add
stos
fadd
or
add
pushf
and
mov
xchg
scas
or
(bad)
imul
add
pop
fld
sti
dec
jne
sbb
into
mov
in
pop
add
mov
sub
sbb
sbb
dec
or
adc
mov
sti
add
das
xor
aas
or
push
mov
push
lds
into
cmp
sti
enter
push
test
sbb
js
int
call
mov
in
jmp
(bad)
jne
and
aam
pop
ins
sti
or
lahf
adc
mov
push
test
cli
nop
retfw
jb
inc
fs
push
sahf
jle
dec
mov
sbb
mov
dec
or
pop
jg
xchg
jmp
jecxz
xchg
shl
(bad)
cld
into
in
jbe
les
lods
lss
add
dec
push
imul
outs
jne
pop
and
or
or
xchg
and
fs
xor
popf
xchg
dec
neg
xchg
or
pop
or
or
gs
rcr
popa
jb
xchg
push
xor
xchg
adc
sar
push
or
bound
sti
jle
rol
or
inc
or
in
or
mov
daa
arpl
xchg
sbb
fadd
sbb
gs
or
add
inc
add
adc
sbb
js
cmp
call
out
dec
mov
out
mov
push
js
or
push
inc
fs
sbb
push
adc
call
cmp
sub
jbe
fidiv
adc
push
push
es
shr
add
ret
mov
inc
jo
inc
movs
jmp
xchg
sub
mov
call
adc
adc
adc
shr
repz
adc
sbb
or
inc
xchg
jno
adc
lods
mov
dec
add
pusha
xchg
sub
inc
push
jl
mov
push
xor
dec
pop
push
jl
xor
sub
xor
daa
or
ficomp
nop
push
nop
ds
pop
adc
imul
push
mov
xor
out
nop
out
mov
sub
push
adc
jnp
pop
sahf
iret
lock
cmp
or
aaa
push
lods
dec
mov
jo
shr
cmp
add
pusha
out
data16
add
add
adc
stc
in
and
pop
inc
inc
enter
adc
inc
loope
xchg
or
popf
pop
cmp
push
add
mov
inc
mov
jl
push
xlat
cmp
jl
xchg
in
adc
loopne
push
aad
push
dec
pop
add
inc
ins
add
and
jns
jg
dec
stos
int3
cs
adc
dec
addr16
inc
(bad)
lock
nop
(bad)
mov
sbb
push
cmc
or
cdq
cwde
mov
outs
fcomp
lock
or
or
rol
and
data16
fdiv
push
das
jl
shr
shl
mov
outs
pop
xor
clc
fcmovne
push
or
ins
pop
jle
cmp
push
pushw
test
push
xchg
adc
sub
xchg
and
aam
push
cwde
cmp
cmps
bound
ret
ds
sbb
sub
aas
cmp
or
jl
jae
inc
adc
mov
push
gs
xchg
jecxz
push
or
jmp
xchg
inc
xor
sbb
jo
dec
jnp
loope
or
adc
and
push
int3
ror
cdq
pop
and
dec
das
mov
cmp
add
adc
dec
mov
nop
pop
adc
add
call
mov
(bad)
sub
pop
dec
fs
and
sub
pop
je
frstor
jmp
pop
sub
and
push
jae
mov
hlt
dec
push
sub
movs
pop
add
inc
and
xor
mov
mov
mov
or
int
(bad)
mov
mov
cmp
cmp
movs
sub
rol
add
push
mov
and
jl
sahf
sbb
out
push
or
movs
imul
mul
out
jae
jmp
jb
jns
add
or
sahf
les
sub
cld
push
add
dec
or
or
(bad)
fst
ret
icebp
(bad)
in
push
or
xchg
xchg
xchg
xchg
inc
test
imul
leave
leave
enter
arpl
dec
repz
call
or
into
add
fcomp
stc
(bad)
std
lods
add
fwait
adc
arpl
fs
ror
push
inc
pop
(bad)
div
das
repnz
repnz
pop
or
pop
adc
push
ins
mov
fs
pop
test
or
inc
add
dec
and
xchg
sbb
mov
repnz
gs
test
clc
ins
push
cmp
pushf
dec
enter
imul
outs
mov
pusha
jne
fnstenv
data16
lock
add
sub
pop
rol
es
jne
adc
cmp
and
mov
ds
add
push
scas
jbe
dec
sahf
out
add
push
mov
add
inc
push
sti
imul
mov
adc
aam
(bad)
adc
mov
sub
pop
pop
fst
(bad)
push
dec
adc
pop
mov
cmp
xchg
mov
jno
nop
push
or
push
adc
fs
lea
inc
mov
out
inc
adc
int3
sbb
fld
xor
sbb
cmp
sub
or
jno
popa
xor
lods
je
imul
inc
sub
mov
push
fimul
pop
or
inc
mov
mov
add
leave
dec
mov
pop
and
stos
inc
adc
fwait
aas
push
add
mov
lods
mov
dec
adc
je
push
in
and
shr
xor
add
inc
sbb
or
sbb
sub
das
add
cmps
dec
and
dec
inc
pop
jns
mov
adc
ret
push
je
or
mov
sub
jne
aam
dec
mov
in
adc
ds
ret
or
pop
push
add
dec
sahf
aaa
and
loopne
sti
ret
add
and
lahf
adc
loopne
or
adc
ins
push
int
xchg
cmp
or
jecxz
mov
imul
mov
fsubr
je
inc
push
push
add
pop
adc
adc
div
mov
pusha
test
cmp
je
push
sbb
rcr
adc
adc
xlat
nop
cmp
movs
(bad)
sbb
xor
xor
stc
mov
push
cwde
push
xor
ins
fisttp
pop
pop
inc
and
and
sbb
call
dec
or
add
dec
mov
sahf
and
imul
sbb
jae
or
pop
inc
mov
jb
inc
inc
inc
cwde
(bad)
in
push
inc
inc
inc
cs
dec
jno
cs
inc
inc
mov
add
pop
inc
inc
inc
inc
inc
push
inc
inc
iret
hlt
and
push
and
das
ss
sbb
(bad)
jmp
ror
movs
popa
hlt
int3
xor
cmp
pushf
rcr
cmps
or
mov
or
add
leave
retf
push
push
jmp
pop
dec
add
mov
fadd
imul
xor
popa
adc
mov
adc
neg
cmp
push
(bad)
adc
adc
adc
cmp
cwde
jp
add
xor
xchg
in
jns
pop
in
mov
push
sbb
loopne
call
or
inc
loope
nop
(bad)
mov
aaa
push
rcl
inc
inc
enter
retf
ror
and
inc
or
test
fs
shl
loopne
sub
call
or
call
adc
mov
dec
repz
cs
das
xor
or
into
das
cmp
out
push
stos
psllw
clc
stc
(bad)
mov
jecxz
push
enter
loopne
sbb
adc
xor
cs
push
imul
mov
jp
push
rol
inc
add
pextrw
adc
popa
shl
jecxz
lea
dec
sbb
inc
cmp
and
push
stos
add
pop
add
sar
fwait
jno
sub
xchg
inc
push
or
or
mov
xor
lods
add
xor
inc
cmp
dec
adc
dec
test
(bad)
(bad)
loopne
push
(bad)
push
clc
mov
cmp
or
push
xor
mov
and
imul
mov
or
and
or
push
dec
and
sub
sbb
cmp
push
or
cmp
jle
push
jp
or
cmp
fisttp
inc
cmp
xor
mov
pop
retf
push
pop
mov
or
xor
and
mov
in
push
fldlg2
ror
adc
rol
je
aam
push
sub
sbb
cmp
or
in
mov
adc
push
std
test
adc
mov
jae
pcmpgtb
fcomp
push
es
cmp
push
ins
sub
scas
add
add
mov
pusha
(bad)
push
stos
loopne
js
xchg
fs
pop
and
in
and
xor
push
maxps
adc
dec
sar
sub
lahf
xor
add
mov
fcomp
sbb
imul
cdq
add
imul
or
add
rcr
popf
push
add
add
push
or
es
push
aam
mov
mov
adc
ret
sbb
out
and
(bad)
and
mov
inc
dec
mov
or
inc
add
add
in
bound
add
adc
mov
add
xor
inc
mov
add
or
or
bound
and
mov
push
mov
sbb
stc
add
sbb
push
sbb
mov
add
push
daa
pushf
pop
cmps
ins
sbb
fstp
push
cmp
jo
or
in
pop
ss
push
ja
jecxz
cmp
ins
arpl
mov
lea
or
popf
int
bound
(bad)
adc
es
pop
pop
in
pop
sub
inc
jae
add
push
xor
icebp
ins
gs
pop
xchg
popa
sbb
cmp
adc
sub
sbb
in
and
sbb
push
push
add
cmp
lds
adc
aaa
into
push
add
add
je
out
lock
sahf
push
mov
daa
ins
add
pop
and
loope
pop
adc
stos
adc
imul
sub
test
push
cmps
pop
test
push
jno
aas
sar
mov
adc
icebp
xor
inc
pop
jne
dec
ss
pop
xchg
push
retf
xor
inc
mov
daa
xchg
inc
adc
pop
je
add
and
inc
out
xchg
in
sbb
cmp
add
xchg
sub
pop
movs
mov
icebp
adc
dec
dec
push
ins
cmp
adc
add
(bad)
jns
add
sub
cmp
or
xchg
enter
xor
mov
or
jns
cwde
xchg
push
jno
push
xchg
mov
and
add
out
push
pushf
pop
push
pusha
inc
shl
push
or
xchg
shr
psubd
adc
dec
and
jb
add
pop
sbb
inc
sbb
sbb
ins
nop
mov
sbb
and
stos
ins
sbb
xchg
mov
fs
movs
ins
xchg
ficom
je
inc
add
sbb
add
push
sbb
xchg
cld
imul
out
test
xlat
aaa
push
scas
bound
gs
jle
test
add
mov
add
test
pop
ss
mov
inc
dec
dec
rcl
cmp
out
ds
sub
jge
and
push
fwait
jne
xor
pop
pusha
nop
adc
outs
scas
and
and
lods
dec
hlt
jge
popa
xchg
jbe
jg
pusha
xchg
and
shl
add
sbb
and
or
movs
ja
mov
rcl
lahf
cwde
pop
xchg
sbb
or
out
xor
xor
mov
cmp
pushf
popa
test
movs
xchg
mov
dec
push
cmp
cmp
dec
pushf
adc
adc
jmp
pop
add
sbb
pop
fwait
mov
pop
add
rol
out
pusha
add
cmps
push
sbb
xchg
dec
inc
popf
lahf
(bad)
cld
dec
sub
inc
cmps
je
int
and
mov
aas
push
test
jne
mov
lahf
add
test
dec
add
call
lahf
xor
adc
mov
loopne
inc
aam
rol
sub
push
call
les
add
popa
cdq
or
xor
xchg
add
mov
inc
mov
cmp
fdiv
enter
jge
mov
call
je
mov
add
push
or
sub
pushf
mov
adc
adc
sbb
call
or
sar
sub
mov
sbb
fdiv
inc
pop
sbb
push
adc
dec
retf
sub
mov
fs
add
jg
push
fldenv
and
jmp
sub
add
adc
sub
xor
std
xor
push
and
or
cmp
sbb
bound
jae
jnp
rcl
cld
shl
push
mov
adc
fsub
sbb
and
daa
inc
movs
pop
fs
sub
test
cmc
push
adc
dec
repnz
sub
popf
and
add
test
xchg
hlt
sub
add
cmp
jg
inc
movs
retf
loope
lods
push
popf
imul
inc
loopne
add
imul
mov
or
shl
inc
shl
sbb
sub
mov
(bad)
cmp
fwait
xchg
outs
adc
mov
mov
mov
dec
into
sahf
jmp
stc
test
das
rol
jge
jmp
popa
movs
xor
test
jmp
pop
sub
push
imul
mov
push
sub
adc
jne
sti
or
or
push
or
xchg
sub
out
mov
outs
pop
clc
test
pusha
bound
or
shl
and
cmp
push
cmp
jl
inc
jmp
mov
loop
stos
ss
adc
mov
dec
or
jnp
jg
push
adc
xor
push
add
fs
aas
jnp
sbb
add
mov
and
(bad)
imul
sbb
test
add
sub
(bad)
dec
xor
jne
add
data16
or
lock
mov
int3
lods
sbb
(bad)
sub
jmp
xor
mov
cmp
jle
fldcw
imul
mov
cmp
cmp
into
fnstsw
retf
sbb
pop
xor
jmp
cmp
mov
xor
push
hlt
aaa
add
pop
rcr
pop
test
in
fist
xchg
cmp
push
jmp
jg
adc
xor
das
ss
nop
pop
add
stos
(bad)
enter
mov
cmp
dec
xchg
mov
adc
xchg
push
or
xor
scas
ins
nop
push
loopne
cmovo
push
pusha
add
dec
add
xor
hlt
cmp
iret
jp
push
jmp
sahf
arpl
xchg
dec
inc
inc
push
loopne
or
out
mov
or
cmp
test
mov
mov
mov
adc
dec
add
nop
dec
rcr
popf
mov
fs
mov
sbb
pop
cmps
sub
leave
push
push
inc
adc
mul
cmp
xor
dec
stos
pusha
add
and
push
xchg
adc
and
and
jbe
aas
fsubr
test
or
out
mov
mov
aaa
cmp
add
lahf
or
pop
sub
cmp
pop
xchg
mov
in
inc
aas
cmp
stc
adc
adc
movs
xor
repnz
add
iret
adc
imul
add
inc
inc
add
cmp
aas
add
jns
retfw
xor
ja
or
inc
xchg
pop
and
adc
push
mov
(bad)
mov
xor
add
jle
sbb
sbb
test
push
jmp
xor
add
data16
inc
adc
inc
fisttp
dec
in
and
xchg
fstp
jo
rol
push
dec
fwait
push
jb
jl
inc
push
pop
dec
xchg
mov
dec
popf
jmp
or
sub
imul
fs
xor
dec
pop
adc
loopne
movs
cmp
mov
adc
adc
data16
inc
or
je
pop
push
dec
sbb
adc
lods
inc
add
daa
fs
and
and
ret
or
inc
push
inc
jae
es
add
cmp
jo
add
jne
xchg
shl
rcr
shr
aas
sbb
push
movs
outs
inc
adc
jl
sub
je
push
and
push
cmp
adc
cmc
or
adc
push
loop
lods
inc
shl
pop
fwait
push
and
jmp
or
or
(bad)
cmp
push
sub
mov
inc
inc
hlt
adc
(bad)
ror
ret
adc
movs
test
inc
cwde
sub
xchg
enter
outs
add
fdivr
inc
cmps
test
movs
push
cmps
mov
fsub
(bad)
dec
push
dec
xlat
in
add
inc
add
lock
sub
and
jae
push
into
add
std
sbb
cmp
sub
sub
and
lea
push
or
in
jmp
xor
push
mov
int
or
push
xor
sbb
or
or
pop
es
sub
or
std
xchg
sbb
rcl
and
scas
out
inc
sub
pop
je
and
xor
jge
xchg
push
adc
and
or
cmp
mov
inc
mov
les
sub
scas
adc
push
ins
(bad)
pop
add
jo
xchg
add
repnz
fsub
cmp
es
stos
cwde
xchg
cmp
and
add
cmc
xchg
mov
pop
jo
jle
dec
mov
and
shl
test
mov
daa
and
jnp
add
jnp
mov
mov
in
shld
dec
and
add
sbb
and
pop
and
jmp
xlat
add
daa
add
pop
test
inc
sbb
add
adc
pusha
sub
ficom
and
hlt
cmp
je
push
fwait
sub
iret
pushf
jne
imul
push
mov
and
dec
xchg
sub
daa
daa
fst
or
loope
adc
cli
pop
mov
cmp
sub
inc
add
cmp
es
cmp
pusha
mul
adc
or
mov
pusha
adc
retf
add
push
out
leave
add
je
outs
xor
aas
or
sbb
ss
mov
clc
xchg
frstor
jmp
pop
nop
dec
sub
xor
ss
xor
ss
or
mov
mov
inc
out
xchg
xor
or
aad
sahf
cmp
mov
sub
mov
and
or
jmp
call
add
add
jle
call
test
adc
mov
mov
adc
sar
out
pop
loopne
jge
int3
cmp
xor
add
mov
push
push
clc
mov
xor
int
add
push
jo
(bad)
push
int3
add
fld
ss
pop
cmp
mov
scas
jmp
jge
add
enter
sub
fwait
cmp
out
mov
jne
fadd
and
sub
jne
push
pusha
pop
push
add
mov
or
popa
fisubr
fsub
(bad)
or
movs
cwde
mov
inc
sbb
jae
push
repz
or
xchg
pop
pop
adc
push
or
and
or
pop
and
pop
xor
or
and
push
test
retf
movs
xor
sbb
or
sub
adc
sub
in
jmp
adc
sub
dec
cmps
enter
inc
inc
fisttp
shl
or
pusha
adc
inc
into
or
cmp
push
mov
dec
and
hlt
ret
add
mov
aas
mov
js
push
mov
fsub
repz
dec
adc
push
test
pop
cmp
push
xchg
adc
rol
dec
inc
in
mov
jg
loope
pop
leave
sbb
stos
sbb
push
cmp
rcl
movs
mov
addr16
aad
xor
jl
inc
push
xor
loope
inc
sub
js
add
xchg
lods
cdq
add
inc
std
adc
(bad)
fmul
cs
inc
nop
daa
xor
and
pop
fld
sub
fadd
clc
pop
push
xor
xchg
push
push
sub
fdivr
add
xchg
outs
in
repz
and
add
ins
mov
pop
push
ins
ins
iret
lods
adc
in
shl
push
std
mov
pop
or
jmp
add
mov
adc
sbb
jne
and
push
or
das
or
cmp
mov
or
cmp
js
sti
cmp
bound
cwde
inc
int
mov
jnp
cmp
aaa
pop
ficom
test
or
add
add
adc
add
jne
mov
and
jmp
addr16
clc
xchg
scas
nop
nop
pop
sub
add
inc
add
sub
add
xor
jne
pop
stos
js
mov
jbe
je
pop
aam
push
movd
and
in
add
aas
int
in
das
cmp
sbb
mov
or
or
jmp
sub
or
fild
imul
sub
jg
test
push
or
sub
xchg
add
mov
test
mov
pop
push
push
sub
mov
mov
jae
dec
lock
scas
cdq
outs
pop
adc
add
fmul
jmp
push
mov
inc
mov
jne
push
add
loopne
(bad)
xchg
dec
rol
push
mov
pop
pop
cmp
adc
jl
sub
mov
mov
pop
retf
into
jle
fld
inc
xchg
sub
sub
ins
pop
mov
sub
test
and
shl
js
cmp
xchg
lods
and
movs
inc
jl
aas
sbb
push
bound
and
push
mov
movlps
ret
pop
or
jmp
or
dec
cs
jne
jle
push
add
pusha
jnp
clc
imul
lea
mov
sub
dec
dec
in
jae
sub
stos
dec
mov
aam
dec
cmp
retf
shr
push
pop
add
push
mov
shl
fstp
sub
xor
cmp
sbb
fmul
lock
cmp
xor
push
xlat
ss
jns
mov
add
ds
push
and
(bad)
mov
inc
sbb
daa
enter
std
or
mov
aad
ja
xor
pop
(bad)
xor
xchg
loop
jp
add
aas
add
inc
xchg
push
mov
pop
shr
and
pushf
movs
imul
or
pop
int
jl
dec
jmp
sbb
lds
xchg
pop
xor
sbb
adc
push
ror
adc
add
adc
mov
inc
sub
shufps
sbb
stc
adc
pop
or
lock
adc
stos
push
test
push
or
adc
inc
adc
call
push
xor
xor
sub
or
imul
add
sbb
mov
iret
add
xor
loope
out
adc
iret
and
pop
ja
enter
xor
pop
rcr
out
(bad)
loope
sub
add
add
bts
(bad)
sar
pusha
mov
sub
pop
mov
add
push
sbb
cdq
out
jmp
jl
lock
outs
loope
push
mov
mov
(bad)
push
adc
jmp
fcomp
(bad)
sbb
ret
lods
push
sub
dec
stos
sub
aaa
fldenv
aad
cld
hlt
imul
fcmovnu
lds
push
out
(bad)
push
movs
jmp
jo
sbb
pop
push
lds
or
pusha
and
idiv
pop
jne
add
cs
sub
(bad)
or
sub
xor
add
add
inc
push
mov
je
pop
push
and
pop
push
mul
(bad)
xor
out
out
rol
fld
cli
mov
sbb
and
aad
popa
imul
pop
in
jmp
int3
or
lahf
xor
js
call
inc
push
cwde
jl
sbb
retf
dec
mov
sub
inc
adc
jo
inc
nop
rcr
dec
jns
or
inc
mov
jmp
sub
or
push
fmul
sbb
sub
test
mov
or
adc
aaa
inc
dec
aad
xor
xchg
loopne
xchg
dec
aad
hlt
in
in
add
jbe
(bad)
(bad)
and
jne
inc
ds
mov
stc
enter
cmp
cmp
fwait
in
fdivr
push
jo
loopne
cmovo
(bad)
mov
sar
pop
pop
push
test
je
and
test
sbb
pop
fimul
adc
cmp
xchg
inc
mov
in
pop
pusha
inc
cdq
ficom
adc
loop
movs
pusha
in
gs
data16
in
sbb
sbb
in
out
mov
inc
mov
jnp
add
mov
add
pop
mov
popa
fwait
and
shl
in
sub
and
psadbw
mov
dec
fwait
mov
dec
jl
push
push
inc
loopne
in
dec
scas
inc
sbb
dec
ret
jo
cmp
push
dec
inc
xlat
cmc
sbb
jnp
loopne
aam
ins
mov
cmc
ins
leave
push
psubusw
mov
push
fs
dec
arpl
sbb
or
retf
xchg
mov
mov
nop
or
inc
push
mul
ret
jno
sub
arpl
(bad)
inc
push
dec
xchg
mov
pop
loopne
rcl
xchg
add
fwait
repz
push
inc
jecxz
es
or
inc
sbb
or
inc
sti
outs
mov
sbb
cmp
jge
cmp
adc
add
push
pop
add
jne
or
es
retf
in
iret
in
mov
inc
in
into
in
dec
and
(bad)
imul
pop
ins
and
mov
and
add
ins
xor
push
sbb
out
pop
or
leave
loopne
sub
push
mov
or
jl
pop
cs
ds
pop
mov
shl
push
xor
popa
pop
ror
bound
and
ror
test
out
mov
jno
repnz
xor
gs
push
(bad)
sub
pop
xchg
inc
lock
mov
repnz
sbb
add
jne
and
mov
inc
ret
leave
leave
add
and
add
clc
repz
inc
ss
xor
sbb
(bad)
scas
xchg
retf
les
add
fild
(bad)
fld
dec
push
add
call
mov
addr16
je
or
jbe
or
jmp
test
ds
dec
mov
sbb
mov
pop
jo
push
lods
and
test
dec
cmp
mov
mov
popa
inc
scas
xchg
stc
inc
add
sbb
shr
add
dec
push
das
add
pop
mov
leave
adc
push
cmp
dec
call
fs
xor
je
dec
push
mov
pop
cmc
call
loope
add
lods
call
sub
call
lea
(bad)
dec
loopne
push
xchg
or
and
push
push
repnz
push
jmp
ret
add
add
adc
pop
lea
add
push
inc
iret
jns
enter
dec
or
push
clc
ret
add
pusha
(bad)
iret
cmp
inc
and
pushf
xor
push
in
or
leave
adc
lahf
scas
add
inc
pop
leave
jo
xchg
mov
lock
scas
inc
enter
push
pop
push
dec
stos
test
lods
and
sub
out
adc
jmp
adc
sbb
es
mov
scas
mov
jmp
sbb
cmp
out
mov
cld
rol
sbb
push
fcom
add
lea
mov
mov
ficom
cmp
sbb
add
fbstp
pop
inc
mov
jne
add
fmul
dec
pop
cmps
sub
and
jmp
pop
fdivr
pop
icebp
stos
add
xchg
cmps
sub
lods
lods
xor
or
dec
and
mov
arpl
je
call
adc
mov
lods
leave
push
out
adc
call
sub
inc
push
lea
mov
push
push
fadd
bound
sti
or
call
jo
push
dec
pop
dec
pop
std
add
add
mov
adc
repz
or
loop
out
jecxz
xchg
or
mov
lahf
movs
sbb
in
xor
sub
pushf
sar
jne
dec
leave
pop
aaa
jnp
and
jg
adc
fcomp
cli
or
dec
jp
inc
dec
ror
or
inc
out
adc
sub
xchg
push
add
ret
sbb
sbb
in
in
rcl
sbb
inc
cmp
cmp
sti
clc
and
jecxz
push
xor
inc
loopne
add
bsf
rol
test
imul
or
xchg
dec
adc
lea
pop
hlt
and
lds
push
daa
or
out
mov
ror
add
loopne
in
adc
pop
sbb
jbe
test
loopne
hlt
fldenv
mov
enter
ss
jbe
add
xor
and
cld
mov
inc
les
test
mov
pop
int
les
push
mov
(bad)
shl
mov
jmp
pop
cwde
xchg
scas
gs
inc
cmc
jecxz
cmp
push
cmp
push
inc
adc
cld
lock
xchg
jg
mov
pushf
out
ror
pop
dec
fld
ds
dec
sbb
inc
jo
xor
pop
mov
cmps
in
dec
aam
or
loope
inc
jecxz
ret
or
shl
(bad)
and
ret
sub
rcr
shl
pop
adc
in
int3
cmp
inc
or
fucomip
mov
ss
dec
sbb
xchg
jl
inc
fld
inc
sti
or
add
push
pop
and
push
or
adc
inc
mov
jecxz
pop
std
or
test
adc
ret
push
popa
push
dec
push
adc
(bad)
sbb
push
ret
jno
jnp
daa
daa
das
pop
addr16
cmp
dec
jns
ret
mov
fild
and
in
nop
and
mov
popf
test
sbb
jbe
shl
int3
jne
pusha
or
stc
jo
ret
jle
or
push
sub
add
inc
sbb
lock
sbb
cmp
push
and
in
xchg
mov
or
mov
fucomi
sbb
and
xor
mov
fsub
ds
repz
xchg
clc
not
inc
push
and
push
add
or
or
jno
mov
xchg
popa
mov
lock
je
xor
add
push
mov
ror
xchg
dec
sbb
cmp
mov
sub
ucomiss
sbb
push
dec
and
jnp
sub
cmp
xchg
test
ja
ret
dec
jl
ffreep
dec
jo
cmp
cs
aaa
xchg
ins
sub
or
daa
or
add
or
(bad)
mov
shl
adc
fadd
adc
sti
cmp
inc
mov
mov
sbb
add
jl
add
cmp
and
nop
outs
adc
pop
fs
fsub
test
adc
sar
nop
cmps
adc
push
repz
addr16
mov
push
inc
clc
adc
(bad)
jmp
lock
aam
mov
dec
pushf
outs
daa
lock
inc
je
(bad)
adc
popa
push
cwde
and
push
sub
cmps
dec
cmc
ja
dec
add
mov
inc
and
mov
push
pusha
daa
inc
or
sbb
add
pusha
xor
cdq
jmp
pusha
sti
fwait
mov
mov
test
outs
out
inc
popa
shr
inc
lods
mov
je
outs
jecxz
or
vmovntdq
outs
jecxz
push
xor
xchg
mov
call
ins
retf
jnp
mov
and
in
test
shl
xor
add
aad
retf
es
add
push
(bad)
test
add
rol
(bad)
pop
pop
test
ds
inc
cmp
dec
jo
retf
test
and
int3
imul
lea
fimul
xor
dec
outs
sub
mov
enter
sbb
sub
push
cmp
out
sub
and
sub
aad
sub
imul
jbe
and
ret
test
dec
inc
das
dec
adc
sbb
mov
sahf
icebp
rcr
addr16
pop
inc
arpl
imul
imul
aaa
or
pop
hlt
xchg
idiv
push
sbb
sbb
(bad)
(bad)
jo
imul
pop
jno
stos
push
cmp
in
or
ins
repz
pop
inc
inc
cmp
cmp
or
mov
dec
mov
or
xor
or
cmp
(bad)
movs
jge
data16
and
dec
pusha
movs
scas
nop
cmp
scas
mov
xor
dec
adc
push
arpl
sub
add
in
or
shr
inc
push
mov
pop
xor
sbb
add
sub
pop
psubsb
inc
mov
inc
push
xchg
cmp
adc
xor
aam
jo
xor
push
lock
xor
(bad)
mov
xchg
sub
(bad)
jnp
add
stos
push
sbb
aaa
lods
mov
adc
sbb
ins
add
inc
or
mov
push
mov
jo
sbb
ret
fild
inc
mov
dec
mov
imul
dec
sbb
push
outs
adc
cmp
xor
dec
add
out
jno
inc
scas
aad
aas
jg
cli
jmp
or
js
add
je
out
jge
shl
aaa
cmp
ins
or
cmp
mov
sbb
(bad)
and
cmp
outs
add
ss
mov
push
hlt
jne
push
lahf
ja
je
mov
inc
xor
cwde
mov
and
sbb
xchg
repnz
nop
cmp
ins
adc
mov
xor
push
ja
inc
jo
loopne
adc
mov
pop
mov
sub
cmp
pop
jb
xor
sbb
jl
pop
pop
pop
add
clc
and
lods
adc
movs
mov
inc
xchg
fnstenv
pushf
or
repz
xchg
movzx
mov
cmp
nop
and
enter
dec
xchg
add
add
and
xor
dec
nop
pusha
cmc
sbb
mov
rol
out
aas
pop
and
leave
and
cmp
inc
jb
xor
pop
and
inc
inc
or
inc
jb
add
push
es
pop
push
pop
fimul
dec
lods
call
sbb
mov
inc
adc
add
gs
pop
pop
jae
push
jno
movs
or
push
add
xchg
cli
cwde
jmp
cmp
adc
push
push
cmp
jne
or
dec
cmps
jg
push
fs
add
mov
daa
inc
inc
mov
cmp
adc
fs
cwde
or
pop
jnp
lods
mov
test
cwde
rol
mov
jmp
out
cmp
xor
dec
sbb
cs
mov
push
or
sub
jb
dec
or
jnp
pop
mov
cmp
push
loopne
xor
icebp
mov
jbe
push
ins
lds
push
(bad)
fisub
and
outs
inc
test
add
cmp
mov
ret
daa
icebp
add
mov
adc
mov
icebp
xlat
jnp
jbe
jne
stos
mov
rcr
(bad)
cmp
xchg
in
inc
(bad)
push
cwde
pop
retf
sub
sbb
mov
ret
sbb
xchg
inc
mov
or
imul
add
sub
xor
rol
fld
sbb
ror
push
das
jns
jne
shl
jo
dec
cmp
test
loopne
mov
movs
jle
mov
dec
imul
dec
pop
je
cmp
imul
adc
int3
test
loope
cmps
mov
lock
sub
cmp
ja
adc
in
jo
push
ja
cld
shl
cmps
fsubr
repz
push
sbb
push
inc
push
mov
push
hlt
nop
cs
dec
add
push
and
loopne
mov
(bad)
cmp
jo
(bad)
fild
test
adc
sub
movs
into
test
mov
or
xchg
aas
and
jne
inc
fisub
aam
and
sbb
(bad)
jp
dec
jno
mov
sbb
push
pop
dec
retf
adc
hlt
xchg
clc
repnz
dec
xor
xlat
je
xchg
test
sub
es
es
aam
add
movd
push
pop
xor
cmp
inc
fistp
movs
(bad)
and
les
inc
inc
xchg
fcom
fdiv
xor
mov
in
cld
popf
jbe
xchg
and
pop
dec
cmp
out
hlt
and
push
sbb
(bad)
neg
sbb
pop
and
dec
repz
cmp
les
add
jns
xlat
cli
adc
push
inc
int3
jge
fsubr
add
add
imul
jmp
movs
fcom
adc
or
scas
sti
xor
push
xchg
ret
lds
(bad)
cmps
push
inc
jo
jb
add
and
out
arpl
cmp
(bad)
(bad)
fbstp
inc
jmp
jnp
popa
sub
mov
loope
in
jnp
(bad)
sub
cmp
movd
sub
aam
ret
fdiv
rcr
mov
repnz
add
xor
ds
inc
add
xor
loopne
cwde
add
sbb
add
adc
mov
pop
push
pop
fnstenv
pop
pop
xor
js
loope
rcl
aaa
ins
cmps
cli
enter
js
leave
jl
rcl
lahf
inc
xor
xor
movs
repnz
cwde
imul
pop
outs
or
clc
pop
in
pop
jnp
pop
mov
mov
imul
pop
pmuludq
push
mov
mov
xor
data16
sub
clc
sbb
and
(bad)
out
scas
pop
or
push
xlat
inc
fidiv
or
push
retf
inc
loope
xchg
push
push
dec
popf
adc
add
(bad)
push
or
xchg
sub
xchg
mov
test
ret
mov
push
outs
cmp
push
shl
or
pop
dec
push
sbb
shl
test
add
jbe
pop
add
or
imul
mov
or
in
mov
hlt
add
xchg
adc
outs
ins
call
sbb
sub
lds
push
in
mov
stos
ins
inc
push
push
cli
xor
cmp
je
xor
and
vmovupd
adc
outs
mov
sti
xor
xor
jge
mov
ins
dec
adc
mov
jecxz
ins
sti
ins
add
inc
fdivr
xchg
inc
fiadd
nop
es
dec
repz
movs
adc
aad
inc
cmc
imul
and
pushw
fwait
jge
retf
(bad)
pop
jp
aam
int
adc
mov
jmp
icebp
ret
outs
mov
pusha
loope
fist
and
popa
ret
jbe
mov
imul
movs
or
xor
inc
add
sub
cmps
cmp
sbb
dec
pop
add
ror
(bad)
clc
dec
sub
jl
inc
add
fsub
mov
rcl
mov
call
mov
test
dec
inc
or
jmp
mov
jmp
add
pop
js
scas
xor
loope
in
fsub
mov
and
jle
aaa
dec
and
dec
inc
jne
stos
jb
ret
out
jb
xchg
push
add
cmc
aas
cmp
jne
pop
push
mov
loope
xchg
adc
or
dec
pop
inc
mov
aas
sub
mov
pop
add
cmp
(bad)
aam
scas
cmp
shl
bound
and
stc
dec
in
inc
dec
pop
ins
xchg
mov
xchg
push
ret
ins
smsw
aas
mov
inc
mov
loopne
test
mov
mov
adc
add
pop
inc
ins
or
or
add
pop
pusha
pop
sub
dec
test
stc
push
movaps
loope
aas
test
adc
popf
mov
push
mov
pop
xor
call
fs
cmp
je
sub
test
jne
pop
pop
add
fisttp
mov
pushf
xor
mov
mov
dec
ss
mov
imul
add
cmp
fbld
xchg
push
loop
out
add
or
and
xchg
pop
xchg
and
adc
(bad)
and
dec
and
(bad)
sub
jne
add
(bad)
jno
loop
ror
cmp
mov
mov
fisub
dec
aad
imul
je
pop
and
dec
mov
pusha
or
mov
sar
pop
(bad)
mov
popa
push
add
add
inc
jmp
pop
adc
iret
or
xor
xor
nop
or
jp
frstor
dec
pusha
into
cmp
cwde
daa
dec
cli
cmps
imul
cmp
enter
mov
mov
loopne
test
jae
call
(bad)
pop
leave
sbb
and
pop
mov
adc
sbb
xor
push
or
mov
test
loopne
psubusw
aad
and
pusha
popa
adc
inc
add
add
xchg
mov
xor
mov
push
push
shr
clc
ins
loope
jl
and
push
push
pop
sahf
inc
stos
mov
loopne
inc
push
cdq
push
sahf
fsubp
sub
sub
jle
ins
xor
xchg
ss
xor
mov
xor
jl
rol
in
int3
cmps
test
jecxz
jnp
inc
loop
ds
not
imul
fdivr
ja
sti
out
push
mov
clc
push
sub
inc
inc
pop
push
in
ins
dec
jo
loopne
or
out
sub
sete
or
mov
add
adc
cmp
inc
pop
inc
inc
xor
pop
xchg
test
or
dec
push
or
pop
mov
or
xor
imul
dec
cs
icebp
pop
xchg
mov
es
xor
loop
and
outs
es
sbb
and
mov
dec
xchg
inc
mov
arpl
inc
jo
and
push
push
push
xchg
and
aam
cmp
jo
and
xchg
je
xlat
xchg
sbb
pop
add
and
addr16
or
pop
cmp
add
and
adc
dec
and
and
jl
push
cmp
and
xchg
sbb
ss
xchg
test
jle
hlt
addr16
add
fisttp
xchg
call
cld
inc
jo
pop
sbb
and
inc
fld
push
add
fidiv
adc
je
pop
cld
dec
cmp
fisubr
cli
pop
mov
sub
mov
mul
cld
imul
jno
fst
js
or
inc
rol
xor
adc
and
cmp
jp
mov
inc
push
loopne
shl
inc
cmps
add
add
push
or
pop
mov
add
mov
xor
or
popa
adc
sub
movs
(bad)
fist
inc
dec
sub
jecxz
xchg
sub
sub
aaa
sbb
dec
in
mov
pop
dec
loopne
mov
add
ret
sbb
clc
bound
and
inc
or
dec
push
or
sbb
and
mov
pop
pusha
add
rcl
mov
nop
push
call
push
or
or
add
out
inc
xor
dec
addr16
mov
movs
inc
cwde
scas
or
(bad)
pop
jb
das
xrelease
das
jle
or
rcl
sub
test
nop
jo
test
inc
add
or
fcomip
je
mov
adc
sub
cmp
jne
fild
push
inc
jbe
or
js
call
out
mov
jmp
inc
adc
add
or
fadd
inc
sub
and
lea
ins
mov
addr16
addr16
call
fs
xlat
sbb
hlt
test
push
dec
or
adc
lea
mov
inc
push
mov
cdq
adc
int3
in
dec
xchg
dec
sub
and
xor
es
inc
add
scas
xchg
lea
aad
jge
cmp
sbb
xchg
aas
sti
mov
test
pop
test
shl
mov
pusha
jae
pop
cmp
cmp
push
test
out
sbb
sbb
mov
test
stc
fbstp
inc
scas
or
pop
adc
addr16
movs
cmc
sbb
je
aad
ins
enter
push
adc
mov
mov
sub
mov
outs
jp
ret
(bad)
mov
sbb
or
test
mov
iret
add
inc
xchg
je
or
sbb
rcr
inc
or
std
adc
fisubr
pop
push
push
push
movs
sub
xchg
dec
sbb
dec
inc
fwait
sub
sub
xchg
or
xchg
push
push
popa
cmp
popa
xchg
(bad)
sti
cmp
jne
aaa
dec
push
popaw
nop
fisttp
inc
cs
dec
dec
movs
fisttp
and
pop
pop
js
mov
push
or
inc
les
push
or
outs
push
(bad)
ret
ins
jo
push
mov
xchg
movs
test
aas
pop
lock
xor
add
sti
dec
adc
xor
test
loopne
inc
mov
leave
adc
add
add
cli
in
add
push
sub
push
cmp
test
fsubr
sub
mov
add
lea
add
dec
jns
ret
test
or
or
pop
dec
jnp
rcr
cmp
and
pop
cmps
inc
xor
and
add
fwait
dec
imul
add
xor
lock
imul
xchg
jmp
or
pop
dec
sbb
lock
fimul
out
and
clc
ss
inc
and
jp
in
div
or
mov
fbld
(bad)
xchg
xor
inc
mov
push
mov
cdq
and
lock
cmp
sub
add
or
lds
in
lea
out
outs
xchg
call
dec
add
fdivr
mov
dec
in
enter
ds
adc
jmp
and
push
dec
mov
js
rcl
inc
mov
cmps
sbb
push
adc
or
sbb
jmp
loope
add
ins
cli
sbb
ss
jecxz
rcl
push
clc
mov
(bad)
and
dec
shl
cdq
pushf
stos
mov
push
add
and
mov
dec
or
adc
(bad)
cmp
gs
pop
jp
inc
enter
test
pop
or
jb
or
or
inc
inc
daa
loop
fcom
jb
dec
inc
sldt
js
inc
and
adc
inc
sbb
(bad)
rol
sahf
imul
adc
push
sbb
mov
or
cmps
push
or
(bad)
aas
add
ss
gs
xchg
push
xchg
pop
xor
add
out
inc
ss
cmp
sbb
and
rcr
mov
in
lea
mov
add
jg
sbb
or
arpl
imul
test
xor
sub
call
push
cmp
cdq
adc
aaa
adc
dec
dec
ins
cmp
jne
xor
(bad)
ret
adc
dec
scas
js
and
fcmovnbe
and
test
xchg
push
ss
xor
mov
pop
dec
dec
mov
test
add
and
or
add
aaa
mov
and
adc
sbb
add
test
jmp
and
pop
sti
loop
test
adc
ret
cmp
mov
add
call
and
loope
xchg
sahf
pop
inc
cmp
js
adc
out
inc
xchg
push
dec
sub
inc
imul
cld
ss
adc
mov
lea
jle
adc
cmp
retf
mov
sbb
movs
add
and
cmp
xor
rol
scas
scas
xchg
adc
dec
xor
or
jl
in
sbb
sbb
inc
mov
sub
retf
jge
cmp
push
add
stos
sub
jg
aaa
pop
cdq
rol
mov
imul
sbb
div
mov
enter
xchg
adc
xor
cmp
add
or
xchg
mov
cmp
sub
je
xor
add
es
idiv
pop
adc
sahf
or
jge
jno
das
sub
jns
xor
mov
sub
add
ins
pop
sbb
(bad)
cmp
imul
mov
mov
ins
loop
aad
pop
add
inc
push
scas
add
add
sar
fiadd
jne
call
adc
push
add
pop
push
mov
pop
or
clc
cmp
movs
push
inc
movs
xlat
sub
jmp
and
sub
pop
inc
mov
shl
inc
fild
les
lea
sub
mov
cld
pop
mov
addr16
xchg
add
mov
or
xchg
lods
jge
clc
hlt
jmp
and
and
mov
or
pop
sub
movs
jbe
add
inc
int
jecxz
sbb
pop
push
mov
das
movs
test
adc
inc
add
or
repnz
loopne
xor
or
in
rol
aam
add
adc
fwait
ret
cdq
add
in
call
mov
pop
pusha
add
cmp
inc
pop
xchg
cmps
sub
jno
sub
cld
push
xchg
adc
lea
shr
jo
mov
test
or
out
test
shl
and
xchg
xchg
in
adc
pop
rcl
loop
sbb
dec
xchg
or
in
push
ror
dec
clc
xchg
pushf
jbe
dec
in
(bad)
push
in
or
xor
ror
loopne
je
push
fs
and
movs
ins
loope
scas
or
fsub
cwde
sbb
xchg
jge
ja
xchg
cmp
loope
xchg
mov
dec
sub
cwde
stos
stos
xchg
call
in
pminub
pusha
cmps
add
int3
push
add
add
xor
and
lods
stos
iret
or
sbb
jmp
jbe
stos
imul
push
and
sbb
inc
or
scas
es
dec
movs
mov
enter
push
das
push
rol
xor
pop
adc
add
sub
or
xchg
sub
iret
loopne
xor
mov
inc
pop
inc
das
mov
dec
xchg
sub
loopne
adc
mov
movs
test
adc
arpl
call
adc
xor
xor
push
cmps
and
xor
inc
pop
xlat
cs
fisubr
cmp
js
test
(bad)
adc
dec
pushf
dec
jmp
and
add
loope
pop
jge
nop
lahf
dec
movs
cwde
sub
test
or
push
or
mov
or
pop
xor
(bad)
mov
jl
mov
adc
mov
cs
cmp
shr
inc
cmp
and
jne
and
clc
or
push
fsub
mov
pop
adc
sub
mov
or
sbb
shl
bnd
or
call
jle
mov
jle
movs
(bad)
ins
ins
inc
cmp
jno
or
push
pop
push
pusha
test
sbb
pop
call
stc
inc
fbld
add
dec
cmp
dec
sbb
push
das
or
rcl
mov
push
or
test
mov
call
fsubr
and
movs
push
adc
mov
or
and
jnp
or
(bad)
sbb
or
cmps
hlt
mov
aaa
dec
cmp
jno
and
nop
add
sbb
pop
fsub
movs
and
test
add
dec
es
hlt
inc
mov
xchg
sub
or
mov
sbb
dec
mov
ret
and
dec
jmp
std
add
inc
dec
mov
test
cmp
not
adc
enter
setge
or
and
pmulhw
inc
addr16
sub
jns
or
sub
or
rcr
push
or
mov
adc
xor
pop
iret
into
sti
popf
xchg
jno
jmp
sbb
cs
pusha
inc
call
mov
push
xchg
and
xchg
xor
push
ins
add
(bad)
xor
or
and
sub
lds
ret
dec
jl
inc
pop
mov
int
cli
xchg
pusha
push
dec
push
shl
mov
jle
rol
inc
pusha
mov
addr16
pop
push
sbb
dec
xchg
adc
mov
push
das
sbb
and
sbb
xchg
add
movs
push
fcom
repnz
pushf
cs
rcr
xchg
nop
push
xor
jl
cdq
mov
in
sub
jl
cmp
(bad)
cmp
fdiv
sahf
jo
repnz
cmp
ins
hlt
push
xchg
adc
push
ins
js
jns
xchg
call
or
add
jl
pusha
mov
pop
int3
mov
or
or
js
das
push
xchg
fdiv
dec
push
ss
(bad)
push
cdq
movs
xor
xchg
pushf
mov
mov
adc
fmul
push
xor
imul
inc
fs
nop
retf
push
test
push
gs
add
jo
push
cmp
jae
add
push
cmp
lock
jl
sahf
adc
xor
mov
xor
add
cmp
push
int3
dec
push
mov
push
dec
dec
or
dec
pop
pop
or
test
dec
ret
push
push
xchg
imul
pop
sbb
push
adc
stos
mov
addr16
add
cmp
pop
add
xor
dec
sub
cmps
movs
xchg
and
push
adc
rcl
sahf
add
inc
sbb
sub
ffreep
dec
add
or
adc
mov
xchg
ja
pop
jb
mov
add
dec
outs
arpl
push
aam
(bad)
jecxz
(bad)
or
cmp
or
addr16
ss
adc
add
mov
je
adc
fnstenv
sbb
push
and
mov
mov
mov
push
mov
lock
mov
mov
push
retf
xor
add
or
xor
or
or
add
adc
lods
or
sub
add
dec
push
sub
push
dec
pop
icebp
jp
push
xor
dec
sub
inc
or
jb
dec
pop
add
mov
and
push
sbb
test
mov
adc
leave
sub
sub
xor
(bad)
mov
cmp
std
cmp
add
mov
out
movs
xchg
stos
ins
daa
popa
popa
repnz
dec
imul
or
sub
(bad)
jns
push
scas
push
fdiv
outs
mov
rdmsr
adc
adc
sub
mov
push
adc
sbb
mov
xchg
nop
arpl
rol
fsub
sub
repz
adc
iret
pop
arpl
shr
and
push
mov
push
cs
xor
or
repnz
les
mov
inc
or
or
mov
sbb
xchg
push
loopne
jno
loope
popa
inc
(bad)
test
jl
adc
inc
adc
hlt
fs
push
xor
dec
pop
xor
jb
xchg
adc
pop
and
(bad)
xor
xor
jo
or
cmp
or
or
sahf
push
and
sbb
in
or
or
outs
or
or
mov
inc
inc
ins
movs
mov
add
data16
retf
icebp
adc
xor
enter
je
mov
fild
ret
shr
gs
mov
in
add
fdivr
jge
movs
dec
fild
or
push
scas
fsubr
enter
cmps
pushf
pop
sbb
xor
xor
push
and
add
enter
xchg
scas
push
js
push
mov
push
pxor
test
adc
pusha
inc
retf
mov
mov
mov
pop
out
ret
mov
hlt
mov
sbb
sbb
inc
jb
gs
push
test
shr
mov
mov
ss
adc
mov
ret
or
dec
sbb
jp
sub
psubusw
adc
inc
mov
retf
cmp
in
(bad)
mov
(bad)
and
push
inc
cmps
loopne
cmp
or
xor
les
gs
pop
lods
rcr
je
sbb
push
imul
movs
nop
push
xchg
test
adc
std
jl
(bad)
rcr
add
lahf
sbb
adc
or
dec
inc
xor
aaa
and
or
scas
pop
sub
je
dec
and
or
add
mov
inc
adc
jmp
ss
ror
ror
nop
cmp
xchg
dec
test
or
mov
xchg
push
mov
xor
xchg
and
repz
push
or
add
sub
mov
movs
jmp
inc
and
mov
or
xlat
add
add
mov
prefetch
push
je
adc
movs
inc
push
add
jmp
sub
dec
mov
das
mov
imul
outs
or
mov
stc
push
or
fimul
lods
and
dec
aas
sub
or
push
or
sbb
lea
push
mov
add
xor
pop
fwait
xchg
push
aaa
je
add
ja
icebp
sbb
stos
dec
cli
push
and
xchg
xor
data16
or
jnp
and
jle
adc
xchg
mov
shl
xlat
outs
xchg
fsubr
cmps
xchg
lods
ss
xchg
icebp
call
lahf
mov
and
xchg
adc
adc
out
dec
mov
popa
xor
jo
and
popf
push
jge
dec
pop
cdq
ror
cmp
and
xchg
div
dec
and
es
call
jle
nop
enter
cmp
fs
cmps
xor
push
cmp
adc
or
addr16
pop
sbb
fbld
cmps
and
popf
add
stos
jo
mov
lods
or
pop
or
je
outs
mov
mov
cmp
icebp
sar
xchg
mov
xchg
dec
or
or
cwde
sbb
inc
add
and
mov
mov
sub
imul
and
adc
dec
outs
or
mov
inc
add
and
adc
nop
jb
mov
mov
dec
mov
push
sub
add
ss
or
cmp
xor
(bad)
pop
adc
popa
or
daa
mov
scas
cmp
push
cmp
iret
xor
or
repnz
inc
pop
fist
setbe
inc
cmp
adc
ja
push
shr
adc
ins
out
test
and
mov
pusha
test
or
cmp
cmps
leave
mov
mov
loop
ret
ins
pop
in
mov
addr16
adc
in
scas
push
add
not
add
in
das
dec
ret
dec
mov
lods
ss
push
jo
scas
pop
jg
jo
in
ins
and
shr
jbe
rcr
push
add
imul
outs
mov
xchg
push
xor
xor
cmp
int3
push
push
dec
pop
push
(bad)
dec
(bad)
sbb
ret
xor
or
or
or
adc
inc
popa
test
sbb
and
add
or
popa
inc
mov
fsub
jle
or
nop
pop
test
pop
sbb
sub
leave
pop
mov
pop
jl
cld
ret
cmp
sub
jl
sub
jnp
or
arpl
dec
jns
inc
add
mov
leave
push
cmp
cmp
and
adc
pop
xlat
es
push
push
dec
enter
ret
push
jbe
mov
cmps
fadd
cs
fild
xor
and
enter
xchg
outs
mov
sbb
bound
outs
rol
xlat
mov
mov
bound
pop
mov
mov
in
enter
or
fisub
enter
mov
push
and
mov
fisubr
inc
mov
ret
push
outs
mov
mov
cmp
stc
add
fnstcw
mov
cld
xchg
push
lock
sub
pop
repz
pusha
stos
aaa
add
inc
pop
jno
and
je
aaa
xor
push
leave
xor
imul
mov
xor
mov
push
add
add
dec
xchg
or
movs
sub
jb
sub
jmp
montmul
cmps
add
inc
sub
cmps
pop
bound
pop
mov
dec
sbb
lods
xor
and
or
pop
bound
test
ret
sub
lods
sbb
aaa
dec
repz
mov
int
and
shl
mov
and
call
dec
leave
xchg
add
lods
dec
fucomip
xor
enter
xor
xchg
int3
add
ror
mov
in
xchg
jl
xchg
add
loopne
sbb
das
fmul
outs
loopne
lds
shr
mov
push
gs
push
arpl
arpl
dec
cs
adc
sbb
sar
cdq
mov
cmc
sub
aad
nop
adc
sahf
ror
movs
clc
mov
jnp
mov
lods
pusha
mov
xor
popa
mov
scas
adc
pop
leave
push
mov
sbb
and
enter
add
jb
or
mov
cmp
xor
and
pushf
xchg
add
dec
test
adc
sub
dec
adc
bound
clc
js
dec
add
mov
mov
aad
push
vunpckhps
mov
sub
ficom
inc
pop
(bad)
pop
add
(bad)
push
xchg
xor
mov
ins
mov
xchg
pusha
or
movs
inc
ficom
pop
inc
retf
add
cs
dec
pop
ins
sub
sub
add
sbb
jae
xchg
push
lods
(bad)
repnz
push
jge
aad
das
fmul
fstp
ret
shl
ss
adc
rcl
pop
jge
add
pop
stc
test
jne
test
scas
mov
imul
mov
lods
jo
push
sbb
out
mov
stc
mov
inc
add
xchg
mov
dec
push
cmp
paddb
and
aaa
jae
cmp
outs
and
(bad)
aas
mov
fld
outs
ja
mov
ror
dec
ror
mov
cmp
repnz
add
jns
enter
and
pop
ret
nop
ret
repz
cli
inc
and
inc
jl
mov
adc
adc
pop
add
add
push
xor
pop
add
in
add
sbb
sub
xchg
dec
sbb
or
call
mov
mov
inc
sar
dec
push
mov
mov
mov
mov
pop
(bad)
call
sub
dec
mov
mov
mov
mov
mov
jmp
shrd
jmp
jmp
jmp
mov
ror
dec
call
jne
shl
out
js
push
out
js
idiv
sbb
mov
test
out
mov
mov
pusha
xchg
call
sar
mov
push
adc
fadd
push
mov
fdivr
push
add
repz
push
push
cmp
fsub
cmps
fnstcw
mov
(bad)
fs
test
jge
mov
ins
pop
mov
adc
or
xchg
ins
mov
cmps
push
and
jle
jl
ss
mov
adc
int
mov
sbb
inc
jl
jo
cmps
jge
ds
aam
es
pop
pop
dec
add
add
movs
dec
inc
mov
and
and
cmp
leave
ret
aas
push
cld
push
repnz
enter
inc
push
xchg
xor
mov
pop
sub
push
add
dec
or
sub
xor
rcl
aas
mov
mov
add
dec
inc
and
js
popa
test
test
xchg
or
or
xchg
jo
mov
and
mov
stos
loopne
aad
or
sbb
das
dec
sub
add
add
and
nop
push
cld
ret
or
push
mov
add
and
push
les
inc
cmp
ror
test
jmp
add
gs
ret
sub
int
rol
movs
fist
or
pop
xchg
pop
sbb
cld
ret
jno
add
cmp
mov
(bad)
cmp
push
(bad)
adc
sub
jae
leave
daa
xchg
mov
xor
xchg
cld
fwait
test
cmp
dec
xor
inc
movs
push
mov
test
sub
push
inc
or
fs
push
pop
pop
pop
ins
retf
inc
pop
adc
inc
pop
inc
or
pop
cmp
and
retf
sub
or
or
add
push
dec
sub
or
loopne
cmp
pop
xchg
add
ror
sbb
sub
cmp
pop
adc
adc
sbb
jmp
outs
sub
popa
sub
sbb
bound
pop
ds
add
mov
call
outs
dec
jae
pop
or
mov
cmp
xor
add
dec
leave
inc
dec
js
test
mov
test
mov
sbb
das
les
xor
(bad)
jmp
sub
xor
xchg
mov
std
xor
jb
and
inc
mov
xor
xor
stc
xor
push
mov
add
push
inc
ins
shl
push
mov
cmps
inc
mov
ficomp
cwde
pusha
push
inc
or
shl
js
push
xchg
call
rol
inc
adc
pusha
xchg
fs
mov
js
adc
pusha
push
inc
or
jecxz
mov
lods
mov
cmp
or
push
ror
das
mov
imul
lds
stos
and
or
xor
sub
mov
push
inc
push
or
pop
aam
sbb
mov
dec
call
and
adc
inc
inc
fsubr
nop
and
out
adc
shl
jmp
mov
or
sub
jmp
inc
mov
les
lds
or
inc
dec
mov
mov
lds
pop
lds
lahf
retf
cli
test
add
cmp
mov
push
cwde
pop
lods
xor
add
pop
xchg
enter
movups
inc
leave
add
in
xchg
les
dec
js
call
ret
jmp
retf
add
add
xchg
pusha
inc
stos
in
mov
and
retf
mov
daa
xchg
shl
dec
adc
jno
and
adc
int3
jno
sub
test
pop
cmp
clc
stos
xor
(bad)
(bad)
inc
fwait
ror
push
pop
adc
out
push
outs
xchg
popa
es
dec
push
ins
adc
adc
enter
cdq
adc
and
mov
sub
sbb
imul
pop
adc
mov
pop
pushf
out
sbb
les
in
in
xor
mov
sub
cmp
add
sbb
sbb
rcl
ins
inc
test
loope
pop
dec
dec
adc
rcl
or
xor
adc
das
pop
add
mov
pop
stos
cwde
mov
sbb
mov
test
fadd
retf
and
mov
jo
and
jnp
pop
xor
push
adc
(bad)
sbb
jne
pop
es
and
adc
daa
dec
rol
cmp
add
push
sub
mov
mov
cmps
test
sbb
sub
sub
push
push
nop
mov
xor
push
pop
adc
das
add
inc
ss
enter
xchg
inc
enter
ins
xor
mov
mov
push
mov
xor
in
and
pop
cmp
inc
test
xor
pusha
mov
sbb
sbb
add
inc
ret
dec
leave
inc
neg
add
mov
dec
push
or
jb
sti
rcr
call
add
push
add
cmp
add
cmp
and
cmp
cmp
mov
jmp
mov
xor
icebp
pushf
shl
push
dec
jp
loopne
mov
sbb
xor
inc
stc
or
or
and
in
call
les
stos
sub
or
xor
jnp
push
mov
mov
push
mov
inc
add
enter
add
inc
test
int3
rcr
jns
pop
dec
dec
jno
arpl
fwait
loope
cmps
test
mov
stc
dec
mov
dec
dec
adc
clc
adc
add
dec
aas
lods
mov
pop
inc
mov
adc
aam
dec
cmps
dec
or
or
cmp
cmp
sbb
adc
and
and
aam
push
in
or
pop
add
fadd
mov
push
sbb
add
dec
cs
push
add
inc
psraw
shl
dec
push
add
invd
sub
leave
push
inc
or
jmp
sahf
push
push
sbb
pop
pop
or
cmp
mov
pop
inc
lods
mov
and
add
add
add
push
jg
pop
sub
pusha
push
fwait
push
add
adc
xor
or
xor
mov
rol
test
loopne
or
pop
rcr
or
xor
enter
push
pop
mov
cs
pop
addr16
hlt
jmp
push
mov
aad
imul
mov
jo
dec
mov
shl
xor
mov
add
and
sbb
ins
inc
cmp
or
leave
or
int
add
mov
sbb
mov
sti
and
mov
mov
(bad)
and
inc
sbb
sbb
ins
xchg
mov
sbb
mov
push
jge
sbb
sbb
sbb
sbb
mov
out
iret
sub
sbb
sbb
xchg
mov
fadd
shr
push
sbb
sbb
jnp
ret
jmp
or
xor
sbb
sbb
call
sbb
mov
out
shl
sbb
sbb
pop
jnp
rcr
mov
aam
sbb
sbb
mov
mov
push
sbb
sbb
sbb
sbb
xlat
and
sbb
ret
sbb
sbb
fsubr
push
fdiv
dec
fimul
add
stos
xchg
sbb
jne
ret
xchg
pop
test
or
pop
aam
add
push
jecxz
or
fild
add
ret
out
test
add
mov
addr16
pop
cwde
fst
jl
and
(bad)
(bad)
pop
sub
adc
out
fld
mov
mov
sub
cmp
mov
scas
int
jnp
fisubr
cmp
cmp
xor
lods
pusha
lods
int3
pop
or
sbb
inc
and
and
repnz
adc
inc
and
addr16
es
add
stos
pop
in
jnp
mov
dec
fs
or
(bad)
call
scas
dec
repz
mov
dec
mov
outs
fisttp
fild
cwde
(bad)
sub
inc
xlat
adc
scas
adc
inc
or
or
lds
sub
jbe
pop
pop
and
ins
mov
dec
test
push
(bad)
or
ds
or
mov
loope
jno
sbb
inc
inc
inc
or
or
pop
pushf
cmp
adc
fadd
sar
movmskps
test
aas
enter
or
mov
inc
or
or
popa
xor
leave
popf
ds
xlat
dec
pop
retf
add
or
dec
loope
or
pop
push
add
or
sub
add
cmp
loopne
xor
icebp
jmp
adc
fld
xor
lods
scas
push
aas
or
cmps
jle
push
adc
and
adc
mov
push
loop
nop
push
ins
jmp
push
mov
in
in
pop
pop
inc
outs
xchg
mov
sub
mov
add
inc
add
sbb
cdq
cmp
cmp
push
mov
mov
fisubr
in
inc
adc
in
(bad)
mov
sbb
sub
add
and
mov
xchg
adc
pop
xor
or
sub
(bad)
ret
mov
movs
movs
in
sub
lods
in
dec
fs
test
mov
cmp
pop
hlt
lock
ins
or
fwait
xchg
or
retf
sbb
je
adc
fld
jae
jl
xor
das
jae
xchg
in
or
mov
int
mov
shl
mov
scas
test
sub
sub
add
das
mov
mov
xchg
pop
mov
pop
sbb
inc
cdq
in
push
ins
cmp
sub
jge
popf
les
(bad)
xor
jl
in
sub
sbb
jb
jge
test
push
out
cmp
sbb
cmps
sar
cmp
das
adc
adc
sbb
and
mov
xor
sub
jmp
add
push
add
fiadd
push
and
push
pop
dec
mov
ins
xchg
inc
(bad)
mov
ins
adc
push
std
jl
mov
shr
sbb
inc
outs
inc
cmp
jmp
cli
(bad)
pop
mov
movs
sbb
bound
iret
int
xchg
pop
movs
fist
xlat
sbb
or
inc
sbb
pop
xor
mov
mov
out
sbb
jno
leave
repz
call
pusha
mov
enter
add
add
xor
out
mov
popa
push
fcom
push
mov
push
daa
sub
add
push
sub
mov
aad
add
outs
mov
cmp
int3
jns
and
jo
jno
dec
(bad)
leave
repz
add
and
jno
mov
mov
pop
mov
add
inc
in
repnz
xor
bound
jno
test
pop
in
inc
outs
fwait
xor
test
mov
jg
enter
add
fucomip
pop
jmp
mov
cmps
pop
mov
inc
mov
fisttp
sub
mov
adc
mov
push
jge
mov
ret
out
out
sub
sahf
(bad)
call
pop
lock
daa
or
js
cmp
xor
lods
push
sub
fisttp
outs
mov
push
xor
and
adc
lds
adc
mov
sbb
pop
pop
mov
add
jbe
xchg
or
popf
or
enter
pop
dec
add
push
push
imul
mov
js
aam
push
dec
adc
test
(bad)
lahf
int
loop
imul
movs
sub
das
(bad)
or
lods
cdq
lock
mov
inc
out
(bad)
mov
mov
loopne
arpl
fwait
or
pusha
dec
or
inc
xchg
inc
sbb
add
ins
or
and
ins
pusha
dec
or
js
or
mov
mov
or
inc
test
bnd
xor
mov
outs
and
sub
push
loop
or
push
repnz
test
mov
ret
push
rol
shr
add
retf
or
or
sub
dec
mov
lea
aaa
push
lods
les
mov
in
mov
xchg
mov
mov
mov
inc
add
dec
sub
mov
(bad)
adc
and
adc
mov
inc
inc
loop
cmps
pop
add
add
mov
lock
inc
sbb
idiv
jp
pop
inc
jmp
mov
fadd
add
mov
add
jno
repz
jno
cmp
and
scas
adc
mov
or
lock
div
xchg
push
sub
inc
lds
xchg
jb
xchg
(bad)
pop
stc
fsub
inc
dec
icebp
sub
lods
(bad)
(bad)
movzx
call
or
inc
or
int3
or
inc
add
gs
fs
mov
mov
or
repnz
movs
(bad)
mov
repnz
inc
ins
lods
pop
dec
jge
sub
stos
mov
inc
repnz
repnz
repnz
jno
lahf
ja
sbb
xchg
adc
jmp
push
adc
std
push
jmp
add
adc
aad
int3
pop
lahf
lahf
repz
xchg
mov
xchg
push
xor
inc
loopne
pop
dec
repz
(bad)
mov
in
mov
push
sbb
pusha
push
pop
or
xchg
adc
mov
pop
inc
push
sbb
test
(bad)
loope
push
and
mov
sbb
retf
scas
mov
(bad)
aam
retf
hlt
jbe
cmp
xor
xchg
gs
dec
sbb
and
out
jns
outs
mov
add
push
sbb
cmc
push
push
cld
das
mov
add
adc
add
xchg
mov
push
cmps
in
enter
(bad)
push
inc
jbe
ds
push
aas
push
mov
sub
call
mov
xchg
push
imul
dec
nop
cdq
sub
aad
dec
ret
out
sub
pop
ret
add
or
imul
mov
or
dec
ret
push
adc
add
dec
mov
add
cmp
pop
jb
pop
lds
dec
add
add
neg
push
cdq
xchg
fadd
inc
pop
adc
arpl
pop
pop
ret
and
pusha
test
sub
mov
xchg
ja
stos
push
mov
leave
lahf
js
push
fidiv
add
aaa
inc
fcmovb
outs
xor
in
es
in
push
pop
sbb
and
leave
xor
arpl
popa
enter
xchg
(bad)
in
inc
adc
sub
sub
add
sbb
pause
(bad)
jmp
and
add
sar
(bad)
sbb
cmps
xlat
cwde
cs
jl
pushf
add
lahf
mov
fistp
movs
add
popa
push
and
add
dec
add
mov
jae
push
lods
or
bound
outs
iret
mov
push
mov
and
mov
and
mov
ficom
sbb
jns
or
or
sahf
lods
cmp
cwde
pop
rol
outs
adc
(bad)
pop
mov
adc
gs
scas
adc
enter
fadd
sub
js
add
xchg
(bad)
mov
fidivr
and
retf
test
arpl
lods
mov
add
(bad)
repnz
adc
xchg
jecxz
mov
pop
xlat
nop
and
inc
add
fs
add
pop
mov
add
js
dec
fs
mov
cwde
loopne
dec
pop
dec
sbb
mov
push
and
xchg
mov
sbb
and
nop
pop
sub
fidiv
push
les
inc
mov
add
sahf
(bad)
or
rcl
inc
pop
aas
or
and
test
or
jmp
nop
out
fs
xchg
adc
xchg
mov
add
ss
and
push
mov
inc
push
cmp
push
jb
add
dec
inc
sub
push
sub
sub
nop
pushf
pop
imul
repnz
sahf
idiv
sub
adc
pop
push
in
leave
and
xor
add
pop
out
pop
pop
adc
mov
test
adc
add
pop
sub
mov
retf
retf
sar
std
push
(bad)
pop
setge
or
xor
xchg
xchg
xchg
mov
leave
leave
leave
popa
mov
adc
in
in
dec
mov
repnz
jne
aam
cmp
jns
add
push
or
add
sahf
pushf
pushf
pushf
sub
dec
inc
xor
in
daa
and
push
push
xchg
inc
pop
and
aam
(bad)
and
inc
loopne
push
imul
add
cld
push
daa
loopne
stos
add
adc
ins
xchg
add
loopne
add
push
fs
jge
arpl
push
iret
mov
loopne
push
inc
add
inc
inc
jb
inc
(bad)
xor
jne
dec
mov
pop
mov
add
cmp
sbb
mov
imul
inc
or
pop
scas
in
inc
shr
int
ss
test
hlt
add
jne
inc
outs
or
movs
inc
rol
aam
test
push
push
aas
js
push
sbb
mov
push
add
jp
or
inc
aas
pop
and
adc
loope
or
adc
stos
or
scas
mov
jp
push
mov
mov
add
inc
ficom
loope
into
test
pop
xchg
dec
xchg
sub
fnsave
add
or
sub
mov
or
(bad)
out
adc
lock
out
push
std
movs
outs
fwait
push
aaa
xchg
sub
xor
mov
fld
mov
stc
push
mov
push
clc
inc
xor
adc
cmp
fcomp
mov
adc
scas
push
xor
xor
imul
pushf
popf
je
or
pop
push
xor
add
adc
xchg
push
jb
jo
je
(bad)
jmp
add
mov
sbb
add
or
or
inc
add
pop
push
add
arpl
mov
sub
dec
arpl
or
fcomp
add
inc
mov
sar
sar
pop
push
mov
adc
shr
mov
sbb
sub
push
jns
add
out
lods
xchg
add
inc
fbstp
nop
adc
dec
adc
add
add
and
aaa
push
stc
cmp
lock
imul
pop
ss
sub
(bad)
mov
adc
adc
jns
add
adc
push
je
add
pop
jp
mov
popa
sub
mov
xor
stos
in
aam
addr16
push
cmp
ins
dec
pop
ins
push
dec
imul
adc
mov
cld
mov
jmp
and
ss
imul
xor
test
sbb
or
pushf
adc
popa
sbb
ret
stc
xor
ror
add
jb
stc
and
dec
outs
jb
fs
mov
fs
bound
fs
sbb
inc
fs
test
fs
daa
or
jno
fs
mov
fs
pop
mov
fild
push
mov
dec
xchg
xchg
xchg
xchg
jge
int3
in
xchg
xchg
xchg
retf
push
rdmsr
push
jle
xchg
xchg
xchg
mov
fisub
add
mov
xor
pop
inc
xor
enter
push
mov
addr16
sbb
push
cs
ror
sbb
das
or
aam
add
inc
setg
xor
mov
loope
loope
and
mov
push
imul
(bad)
(bad)
ss
jno
sbb
pop
loopne
cmp
and
xchg
adc
and
dec
test
xchg
cmp
repnz
add
lock
or
mov
pop
in
xchg
inc
fist
add
mov
sbb
jg
push
or
sbb
(bad)
push
push
inc
sub
jo
mov
sub
iret
test
dec
or
fistp
cmc
jg
les
adc
sbb
add
mov
and
cwde
and
shr
inc
add
in
and
push
fwait
mov
icebp
leave
sbb
pop
add
shl
fnsave
call
fdiv
add
xlat
pop
xor
adc
adc
outs
pop
pop
pop
xor
dec
int3
dec
leave
call
into
mov
push
fistp
imul
bound
xchg
jmp
push
and
cmp
add
pop
pop
or
adc
pushf
xchg
stos
retf
in
pop
cmp
pop
inc
push
(bad)
sub
sub
xchg
inc
xor
mov
or
jl
lods
lods
push
push
popa
fst
mov
aas
test
adc
xchg
in
pop
or
sub
pop
repz
outs
lods
dec
pop
nop
push
cwde
add
push
repz
sbb
dec
jo
jl
and
dec
loop
jb
shl
loop
push
popa
mov
repnz
xor
jge
or
shr
imul
sbb
sbb
xor
mov
dec
arpl
in
mov
jae
pop
daa
pop
mov
add
adc
sub
sub
xor
jbe
and
sbb
stc
mov
pop
cmp
push
(bad)
rcl
adc
lods
(bad)
ror
push
mov
xor
sbb
popa
movs
adc
adc
in
repz
(bad)
push
leave
sbb
add
push
jb
shl
jmp
mov
and
and
sub
xchg
jns
outs
or
ret
sub
add
popa
sub
xor
jns
xchg
add
cmp
cwde
xor
or
pop
ins
sub
jmp
mov
push
dec
ss
inc
inc
test
cmp
dec
mov
adc
leave
xchg
jo
add
dec
cdq
sub
sub
xor
jo
out
pusha
pop
in
sub
adc
mov
outs
fadd
add
mov
mov
adc
pop
adc
push
retf
adc
movs
jo
or
addr16
sub
and
test
cmps
or
arpl
shr
add
adc
sub
xor
enter
pop
cdq
fcom
pop
leave
leave
leave
leave
push
mov
sti
add
mov
cmp
or
xor
movs
jmp
xchg
mov
jl
sub
or
rol
lods
fldcw
push
push
stos
push
inc
fadd
nop
pushf
inc
dec
add
push
outs
and
mov
sbb
sbb
inc
pop
mov
sub
jbe
aad
push
jae
pop
jae
int
or
adc
add
loop
jle
pop
mov
jb
in
mov
jns
jns
add
sbb
adc
xchg
sub
mov
mov
jge
test
adc
inc
sub
(bad)
jns
mov
and
cmp
sub
or
aad
cmp
cld
stos
inc
or
(bad)
fadd
and
mov
push
int3
sub
mov
adc
add
xor
jnp
inc
or
test
jb
add
das
push
mov
xor
mov
add
call
inc
iret
in
and
adc
or
inc
repnz
or
mov
xchg
cmps
dec
dec
mov
adc
imul
adc
jne
and
(bad)
(bad)
cmovs
cmp
icebp
pop
mov
adc
pusha
push
adc
addr16
add
shr
xchg
sbb
ins
movs
inc
iret
sar
push
ds
ds
imul
inc
sbb
adc
inc
pusha
in
ss
inc
out
imul
data16
fidivr
nop
push
or
xor
ins
and
jae
dec
imul
pop
sub
jne
addr16
gs
retf
adc
ins
sbb
bound
dec
inc
clc
mov
loope
and
push
xor
in
idiv
push
or
bound
pop
pop
in
(bad)
xchg
(bad)
rep
mov
jge
mov
lods
jmp
fiadd
pop
ss
in
add
out
jmp
sub
mov
adc
sub
nop
push
add
sub
xchg
dec
ins
pop
cwde
cmp
fidiv
cmps
add
nop
pushf
cmp
mov
imul
mov
mov
jnp
ror
push
mov
sbb
mov
jecxz
inc
pop
xchg
inc
dec
mov
rol
inc
fcmovb
dec
inc
sub
aas
add
ret
push
in
add
mov
int3
loope
push
sbb
or
add
loopne
mov
in
xor
cmps
push
add
fisttp
rcl
push
ds
inc
add
push
adc
mov
sub
push
ds
jg
shl
mov
inc
and
sub
dec
push
imul
aam
cmp
xor
repz
push
hlt
pop
inc
lahf
data16
fs
jo
pusha
popa
cmp
bound
sub
aam
push
data16
sahf
data16
data16
fmul
mov
scas
or
pop
push
sub
add
sub
and
aaa
push
jno
sub
adc
fdivr
push
lock
ss
cmp
cmp
xchg
push
cwde
sbb
dec
sub
and
and
dec
sar
cmp
and
nop
add
add
das
in
mov
(bad)
in
lods
push
mov
(bad)
(bad)
sub
mov
mov
pop
jne
or
ret
push
je
and
pop
or
jo
inc
pop
push
imul
add
mov
mov
lods
hlt
mov
scas
(bad)
mov
test
or
xor
test
(bad)
cmp
mov
jmp
dec
mov
jnp
data16
xor
sbb
movs
add
mov
xor
xchg
sti
jmp
adc
mov
lods
rcr
push
sbb
ret
adc
ins
jmp
add
out
ins
mov
mov
pop
cli
ret
adc
sbb
adc
js
sub
mov
ss
mov
aad
movs
out
and
mov
adc
pop
mov
lahf
or
fucomip
pop
jae
adc
jae
hlt
mov
mov
pusha
and
ins
dec
xlat
or
add
and
(bad)
mov
xor
mov
cld
retf
sub
pop
push
xchg
fst
xchg
mov
sbb
ja
stc
push
clc
pop
or
stos
or
adc
mov
jo
mov
add
or
sbb
ins
lds
mov
ret
stc
bound
push
sub
sbb
xor
or
test
cmp
push
inc
jne
mov
add
adc
addr16
inc
cwde
xchg
sbb
lods
and
sub
pop
mov
jmp
sbb
loop
(bad)
push
and
xchg
ret
xor
add
xchg
sbb
mov
cmp
push
mov
add
add
add
pop
and
mov
push
in
or
adc
mov
inc
inc
add
and
sbb
pusha
gs
test
fstp
xor
adc
sub
dec
aas
mov
dec
mov
sbb
sub
sub
xchg
dec
adc
pop
push
jp
popa
test
cmp
push
enter
and
jno
push
int3
sbb
inc
mov
push
in
add
div
imul
outs
dec
xchg
and
sub
sbb
mov
cmps
ss
cs
push
adc
add
movs
mov
adc
sbb
and
push
(bad)
into
add
add
and
cmp
(bad)
movs
retf
test
dec
jo
and
inc
adc
int
adc
add
dec
xor
mov
add
add
pop
sbb
and
cmp
enter
push
xchg
adc
leave
rcr
in
rol
or
pop
es
inc
inc
dec
sbb
or
bound
add
add
xor
loop
je
fcom
pop
int3
lahf
mov
pop
xor
mov
inc
mov
dec
in
jb
adc
mov
popf
mov
sub
inc
or
sub
inc
jl
mov
dec
or
push
sub
add
jo
(bad)
inc
and
or
pop
(bad)
cwde
ds
push
inc
add
adc
mov
sbb
push
cmc
add
inc
push
sbb
adc
pop
cs
add
cmp
or
push
nop
sbb
adc
xchg
nop
inc
pop
adc
mov
sbb
inc
sbb
nop
jg
push
adc
rol
ss
(bad)
adc
pop
inc
pop
ret
or
dec
and
fild
inc
add
je
ss
sub
adc
rcr
aam
popa
push
xor
ds
push
dec
add
cmp
jl
in
push
dec
and
inc
inc
add
into
push
add
in
retf
push
add
rol
in
call
popa
push
in
retf
dec
adc
add
ss
pop
mov
daa
fwait
mov
push
and
push
outs
inc
and
aam
stos
add
cmp
fld
push
push
cmp
or
fcom
jl
inc
dec
push
ror
fdiv
fadd
push
mov
push
shl
adc
or
and
xchg
(bad)
sahf
out
(bad)
jmp
and
test
ins
sbb
aad
ret
dec
jg
nop
popa
pcmpeqw
clc
mov
xchg
popa
jne
pop
add
fsubr
pop
cmp
sti
pop
adc
add
mov
sbb
sbb
jo
xchg
ss
xchg
pushf
inc
fdivrp
xchg
xor
jmp
pop
jne
adc
inc
jb
adc
inc
es
ja
add
(bad)
ror
jmp
rol
test
std
jo
push
sub
push
fmul
mov
call
mov
xchg
xor
jns
add
ret
jmp
adc
inc
rcl
push
adc
loopne
mov
mov
out
mov
js
popa
xor
setl
daa
mov
gs
mov
mov
and
mov
cmp
jp
idiv
in
jge
add
and
pop
xor
xlat
inc
or
fadd
je
push
call
cmp
xlat
xor
or
and
sub
test
push
jmp
inc
push
ret
push
sar
add
inc
or
dec
cmp
pop
cmp
adc
sub
or
jmp
movs
add
mov
lods
xor
jne
cmp
and
popf
adc
clc
and
(bad)
cmps
add
es
xor
push
or
fnstenv
sub
push
int
push
add
sti
jmp
leave
aam
cdq
and
xchg
dec
movs
sbb
jo
inc
(bad)
pop
sbb
lock
pusha
mov
jnp
xchg
and
ja
lock
and
push
adc
mov
and
pop
sub
pop
jle
call
clc
sub
popa
ins
cdq
fld
sub
xor
shl
ja
xchg
nop
add
mov
pop
in
mov
mov
lods
or
adc
sbb
or
and
dec
out
fs
call
and
sbb
cld
jno
std
adc
sbb
aam
and
shl
ret
mov
icebp
jl
aam
add
push
ins
or
fs
mov
ins
loopne
adc
inc
dec
jnp
aaa
rcl
sub
or
cdq
and
dec
inc
adc
mov
movs
sub
sub
or
adc
adc
rcr
sahf
bswap
and
ss
mov
stos
fnstcw
adc
add
push
xchg
mov
xor
or
dec
pop
das
adc
ret
test
mov
les
sbb
repnz
repnz
cmp
cmp
mov
mov
fadd
mov
sbb
push
xor
repnz
das
pop
xor
xor
pusha
mov
js
mov
mov
mov
push
ret
ins
adc
pop
imul
or
mov
inc
loop
jnp
cmp
adc
and
ins
daa
(bad)
xor
jo
push
jl
xor
sbb
lea
push
inc
fiadd
and
adc
push
xor
and
pusha
popa
mov
in
movs
xor
in
push
xor
push
sub
adc
enter
mov
aaa
repz
std
test
push
adc
adc
loopne
popa
push
mov
push
(bad)
push
cmc
or
mov
adc
test
adc
inc
clc
mov
ja
inc
fdiv
loopne
or
call
or
inc
jbe
or
pusha
adc
out
mov
inc
sub
mov
pop
push
and
or
xchg
aam
stos
add
cdq
loope
cli
rcl
push
xor
adc
mov
mov
shl
ss
xor
inc
and
daa
and
sub
loopne
jp
adc
lock
push
sub
inc
lahf
nop
mov
popf
and
and
adc
sub
adc
frstor
or
das
xor
push
and
inc
pusha
push
ret
mov
adc
inc
xor
push
dec
lds
add
add
cs
leave
sbb
xchg
and
fcmovbe
cmp
adc
sub
ret
pop
dec
mov
push
lock
cmp
xor
mul
cmp
imul
mov
(bad)
jmp
in
aaa
inc
and
push
popa
outs
inc
scas
pop
nop
mov
sub
ss
int3
mov
pop
call
in
mov
push
or
cld
push
push
lahf
adc
aam
pop
xor
dec
mov
cmp
popa
sbb
(bad)
cdq
xchg
icebp
inc
or
je
mov
test
or
jo
mov
and
sub
mov
int
adc
or
popa
lahf
add
stos
xor
mov
mov
loopne
cmps
les
cli
add
in
or
test
adc
sbb
adc
addr16
jl
mov
fimul
xchg
outs
mov
sbb
out
pop
call
inc
call
cmp
pop
aaa
mov
add
adc
vmulps
inc
mov
out
xlat
and
pop
dec
outs
jbe
inc
xor
sbb
mov
inc
bound
mov
loopne
push
dec
(bad)
or
push
pop
daa
inc
scas
add
scas
dec
mov
or
sub
jne
or
clc
aaa
or
outs
adc
or
inc
jo
mov
sub
mov
mov
sbb
imul
push
or
je
mov
mov
or
or
push
sub
and
inc
mov
cmp
mov
adc
and
test
push
loopne
enter
mov
push
pusha
inc
in
and
inc
or
mov
add
and
out
shl
sbb
ja
adc
mov
fst
push
push
lea
push
mov
push
loopne
push
adc
cli
mov
mov
mov
mov
cmp
jge
sbb
out
sbb
fucomi
sahf
add
mov
push
fs
addr16
(bad)
push
mov
in
imul
sbb
fdivr
xchg
retf
and
or
nop
sub
cmps
push
add
test
ficom
or
adc
outs
std
fst
push
hlt
sbb
in
inc
push
adc
mov
push
ins
retf
pop
(bad)
pop
mov
mov
add
cmp
mov
xchg
pusha
test
dec
jne
stc
fadd
cmp
sub
xor
test
es
or
pop
or
add
sub
fisub
xchg
push
cmp
movs
pusha
lods
xchg
in
mov
repnz
gs
jmp
and
sahf
xchg
sbb
push
mov
mov
mov
adc
or
cmps
pop
enter
outs
stc
ret
je
scas
test
popa
jns
or
xor
fs
stos
push
push
and
sbb
xor
sbb
sub
out
test
clc
nop
jle
sub
clc
cli
push
xchg
shr
cmps
inc
push
neg
and
sahf
into
jno
or
je
pop
mov
jae
inc
rcl
or
and
hlt
cmp
ins
or
ins
or
test
push
int
test
or
add
xchg
fs
jb
imul
inc
inc
pop
and
pop
sub
mov
xchg
cmp
mov
cmp
ds
cld
push
add
add
shl
lea
enter
push
aaa
and
sub
mov
jge
mov
add
add
mov
and
movs
psrlq
jmp
mov
push
mov
or
cmp
popf
cmp
add
imul
mov
sub
retf
shl
adc
pop
ret
sub
outs
in
(bad)
and
dec
int
ds
gs
xchg
xchg
pushf
adc
mov
es
movs
jnp
mov
sub
daa
test
and
scas
mov
daa
fbld
mov
adc
xchg
sbb
mov
inc
add
lock
sbb
cmps
movs
imul
mov
xor
or
dec
fldpi
xor
inc
iret
cmp
cmp
adc
adc
dec
push
sbb
add
pushf
mov
xor
loopne
shl
push
mov
jns
sub
sbb
xchg
mov
cmp
push
pop
daa
fs
div
add
pop
and
inc
and
adc
retf
add
stos
fist
ja
sub
cs
sbb
js
in
cmp
adc
cld
add
sub
int3
pop
ins
popf
call
cdq
in
ins
mov
mov
stos
pop
aam
mov
out
popf
dec
xchg
popf
inc
mov
mov
xchg
test
stc
xchg
test
xchg
inc
sbb
adc
mov
cmp
push
xchg
pop
sub
mov
xor
pop
or
or
rcl
add
add
mov
aad
jns
lahf
xlat
mov
loopne
inc
arpl
adc
cs
movs
pop
sub
pop
pop
jl
push
call
and
inc
lds
cmps
jns
pop
(bad)
mov
sti
dec
or
iret
xor
adc
sub
add
in
cmps
popa
xchg
movs
or
jnp
inc
inc
mov
punpcklwd
test
in
sub
mov
leave
add
mov
mov
pop
xchg
cmp
jmp
mov
cmovns
mov
jae
fidiv
lock
ja
(bad)
sub
inc
ins
mov
ja
xor
xor
push
idiv
xor
add
mov
(bad)
and
pop
or
inc
sub
dec
cmp
xor
imul
test
out
cmp
push
cs
lds
dec
adc
fist
push
add
hlt
sub
enter
into
pop
mov
mov
add
mov
test
call
push
ds
jecxz
or
outs
cwde
shl
pusha
add
adc
call
(bad)
jo
sbb
and
inc
sub
xor
pop
push
mov
inc
fwait
cdq
retf
fcom
fsub
mov
ror
jae
adc
adc
xor
fucomp
lods
jb
fcomi
mov
jno
adc
int3
iret
test
retf
aaa
dec
pop
loopne
pop
sbb
pop
es
adc
or
mov
cs
push
loope
and
sbb
jmp
daa
xor
dec
out
or
adc
xor
xchg
icebp
cmp
inc
xchg
mov
cmp
dec
outs
retf
fidivr
and
push
xchg
hlt
or
adc
push
mov
sbb
xor
fmul
nop
cmp
and
test
call
rcl
fistp
shr
and
adc
cld
sbb
rcl
mov
in
sbb
test
mov
hlt
xchg
push
pop
xchg
adc
push
or
mov
adc
inc
(bad)
cmp
es
mov
inc
add
xor
pushf
inc
dec
aaa
and
sbb
popf
xor
jae
adc
xchg
push
mov
xchg
inc
js
jae
pop
cwde
add
dec
mov
sbb
inc
dec
pop
mov
adc
inc
inc
bound
adc
loop
and
xor
in
dec
out
add
adc
test
nop
mov
addr16
push
sub
daa
mov
adc
cmp
fsub
hlt
rcl
cvtps2pd
in
or
jnp
xchg
xor
test
push
cmp
jmp
(bad)
and
jno
inc
in
sahf
pop
and
mov
push
mov
cmp
ja
pusha
cs
and
mov
push
xchg
push
imul
sbb
leave
push
jg
ret
cmp
xchg
jmp
or
inc
cmp
jo
or
add
push
popa
out
sbb
cli
sbb
inc
xor
pop
cmp
frstor
cmp
or
or
push
xchg
xor
les
adc
adc
inc
add
test
iret
add
add
clc
sub
add
add
add
dec
sbb
ds
cmps
and
sbb
mov
cdq
inc
and
push
scas
clc
ja
pop
xor
push
cmp
fst
fcomp
sub
mov
imul
dec
or
xor
mov
aas
mov
wbinvd
xchg
fcomp
sbb
add
pop
and
pop
and
push
mov
jne
or
imul
fcmovu
outs
scas
je
fdiv
lds
push
adc
inc
shr
lods
ss
inc
mov
and
inc
sbb
adc
and
mov
daa
dec
ret
dec
pop
jmp
or
mov
daa
mov
jb
scas
push
push
and
adc
loopne
adc
addr16
pop
or
xchg
sub
xchg
dec
fsubr
mov
call
adc
or
mov
add
mov
call
and
rcr
clc
or
icebp
push
in
add
push
xor
pop
lahf
outs
dec
fsubr
jne
aad
push
add
add
and
mov
sbb
rcr
pop
mov
lahf
lahf
ret
jl
fcom
or
movs
add
inc
das
repnz
dec
push
cmp
(bad)
jne
mov
mov
pushf
fisttp
loope
push
mov
jo
aaa
mov
outs
add
rol
daa
arpl
and
sahf
or
das
push
push
fisttp
pop
adc
cmp
push
jge
cmp
jg
cli
fcomp
add
sub
cmps
ret
xor
inc
adc
inc
inc
add
inc
cmp
sub
sbb
jg
xor
add
loop
(bad)
add
cli
lods
mov
dec
ss
add
inc
mov
add
adc
mov
addr16
icebp
mov
sbb
ret
cld
pop
test
fnstcw
es
fcomp
inc
add
sub
inc
pop
cmc
mov
mov
inc
out
and
mov
adc
outs
loop
fiadd
hlt
dec
and
fcomp
sti
imul
int3
mov
inc
cli
mov
sbb
neg
int
fsub
sbb
sub
fwait
js
pop
not
rcl
add
add
and
repz
sbb
cli
fsubr
mov
aas
xor
test
push
ss
and
ret
call
mov
daa
cmp
inc
fsubrp
rcr
jne
xor
xlat
push
adc
clc
mov
push
fadd
imul
rol
in
retf
lods
inc
cdq
scas
mov
or
jbe
out
cwde
push
push
pushf
push
push
xchg
push
inc
or
mov
ja
jge
push
test
adc
cmp
and
dec
sbb
imul
in
dec
js
push
xchg
dec
das
mov
mov
fwait
dec
sbb
idiv
fistp
push
loop
mov
jmp
movs
xor
xor
add
frstor
cld
jb
push
call
sub
jo
mov
ins
hlt
inc
inc
sbb
call
jno
imul
retw
or
push
shl
push
imul
xor
cmp
inc
add
pop
push
out
push
ins
inc
(bad)
pop
inc
xor
mov
es
push
lock
pop
xor
lods
sbb
lock
push
jle
jbe
dec
or
sub
xchg
add
mov
add
test
add
adc
rol
ss
or
adc
mov
add
movs
lock
stos
gs
mov
pop
jmp
cmp
and
and
or
cmp
push
cmc
dec
sbb
test
adc
adc
aas
jae
sbb
adc
adc
fcomp
les
in
or
fmul
fld
sbb
(bad)
sub
xchg
pusha
add
jecxz
xchg
loop
mov
push
(bad)
mov
scas
or
dec
add
xor
loope
loope
scas
cmps
add
sub
call
inc
or
pop
mov
rol
and
scas
xchg
xchg
imul
cmp
imul
(bad)
cs
push
mov
or
inc
or
sub
push
mov
cmp
inc
call
sahf
jmp
jo
mov
mov
cdq
add
sbb
mov
dec
mov
add
std
push
pop
inc
add
mov
rol
sbb
add
nop
inc
adc
rcl
and
jl
neg
in
ffree
xchg
pop
imul
sbb
mov
sti
mov
sub
dec
add
mov
and
mov
push
inc
push
or
sbb
adc
dec
bound
sub
aaa
ins
std
retf
push
push
pop
mov
mov
popa
or
mov
adc
loopne
pop
or
add
xchg
loopne
inc
sbb
ds
iret
out
inc
enter
lock
les
fidiv
ins
call
push
cs
rcl
call
or
shl
xchg
fistp
pop
dec
adc
adc
and
push
ins
and
and
push
gs
and
sbb
push
(bad)
pop
adc
jmp
mov
or
pop
cmp
inc
cmp
shl
adc
mov
ficom
push
leave
mov
lods
in
push
sti
scas
rcr
inc
sbb
retf
cmp
pop
icebp
or
inc
add
pop
add
adc
inc
ror
mov
push
add
inc
adc
xor
sbb
clc
adc
or
dec
inc
test
pop
lods
pop
jns
add
inc
dec
adc
imul
push
clc
mov
push
hlt
inc
mov
jmp
shl
xor
add
sbb
lods
add
sahf
mov
cs
push
int3
xchg
jno
mov
mov
js
loopne
sbb
jl
sti
dec
fimul
sbb
add
add
mov
xchg
mov
repnz
add
or
jp
sahf
mov
add
dec
or
or
fiadd
pop
imul
mov
cmp
adc
popf
not
imul
movs
push
sbb
push
mov
pop
mov
loopne
sub
ret
mov
mov
pop
mov
and
pop
push
inc
push
inc
(bad)
pop
dec
jmp
pop
test
es
test
pop
icebp
pop
mov
jg
cmp
jle
popa
sbb
pop
pop
and
adc
and
pop
sbb
add
mov
inc
ret
stc
(bad)
scas
add
into
xor
push
add
add
adc
out
lock
mov
or
pop
jmp
xadd
jmp
les
jmp
je
aaa
mov
ja
into
or
adc
add
jae
data16
aad
xchg
or
adc
repz
add
dec
cli
dec
outs
movs
jbe
or
retf
and
dec
mov
lods
dec
rol
inc
popf
pop
pop
jg
(bad)
pop
adc
clc
cmp
mov
xchg
icebp
dec
test
and
and
add
repnz
pop
inc
push
add
add
(bad)
fsubr
in
push
sbb
movs
sbb
push
pop
sub
(bad)
mov
and
cmps
dec
icebp
and
(bad)
or
push
inc
mov
data16
out
add
and
lods
mov
xor
fnstsw
fs
scas
mov
push
sbb
sub
sub
aam
movs
add
inc
and
icebp
adc
lock
clc
out
int3
xchg
jo
ss
ret
pusha
cmp
and
cmps
jmp
lock
add
in
or
mov
adc
lods
jl
and
sub
add
sbb
sub
add
icebp
mov
hlt
adc
and
or
les
(bad)
(bad)
sbb
outs
aad
xor
shr
add
ja
pop
add
nop
fild
cli
nop
and
cmp
and
adc
add
xor
shr
and
sub
fist
xor
mov
push
or
rol
mov
mov
nop
and
nop
add
jnp
add
jns
sbb
sbb
sub
xor
icebp
xor
push
xor
cmps
(bad)
mov
imul
lds
jo
ss
lock
rol
pop
or
setg
add
cld
cli
sub
das
cmp
icebp
or
shl
dec
adc
and
pop
dec
dec
mov
jmp
or
dec
lea
or
arpl
fdivr
adc
fadd
jne
cmps
mov
es
gs
(bad)
fild
mov
mov
sbb
mov
cmps
add
call
push
clc
fcomip
rcl
fist
or
lods
xchg
loope
movs
dec
xor
call
push
and
bound
lea
cmp
test
je
test
int
push
mov
mov
xchg
aad
and
nop
pusha
mov
lock
push
push
fsubr
in
cmp
mov
dec
and
rcr
out
inc
adc
dec
imul
mov
inc
loope
scas
mov
cmps
aas
adc
fild
lds
repnz
mov
gs
push
mov
popa
inc
int3
xchg
lock
xchg
sbb
nop
push
lods
inc
daa
fdiv
mov
cwde
add
push
or
ins
adc
dec
es
jne
rol
cmps
jne
pop
test
or
je
and
mov
and
sbb
cmp
pop
mov
in
mov
fmul
popa
mov
push
jno
inc
test
xchg
ret
sub
imul
add
jne
dec
push
dec
push
jl
fndisi(8087
les
and
aas
inc
sbb
(bad)
je
sub
sub
push
ret
test
ja
sub
data16
inc
adc
or
mov
dec
inc
xchg
outs
dec
test
punpckhwd
add
sub
lock
pop
inc
add
push
or
xchg
add
out
sbb
adc
pop
push
nop
ja
dec
pop
pop
pop
adc
sub
add
inc
mov
data16
dec
loopne
xchg
int3
push
add
mov
jae
out
cmps
aam
inc
sub
pmaddwd
adc
push
add
bswap
out
inc
mov
mov
mov
or
and
mov
xor
rol
dec
nop
retf
mov
add
push
and
mov
and
fdiv
xchg
scas
push
cwde
cmp
jle
push
jl
xchg
xor
add
pop
(bad)
mov
xchg
cmps
xchg
lods
sbb
or
jns
push
mov
pop
xor
je
adc
sbb
pop
or
fisubr
pop
pop
movs
cmp
jne
dec
ret
add
jnp
pop
jne
jmp
adc
cmp
xchg
dec
dec
pop
fst
mov
xchg
mov
push
js
and
add
mov
jge
dec
or
mov
sub
movs
or
(bad)
out
dec
les
es
les
push
xchg
pushf
test
cmp
rol
aaa
loopne
mov
push
push
add
int
mov
jns
add
jo
cs
sub
push
movs
push
adc
hlt
inc
sbb
and
mov
mov
ret
and
add
adc
pop
pop
jg
add
xor
mov
lea
mov
mov
test
mov
sub
add
push
fbstp
push
jl
mov
sub
fxch
sub
popf
and
aaa
xor
add
shr
push
push
and
mov
inc
movs
mov
add
sbb
imul
mov
(bad)
or
test
pop
xchg
push
pusha
xchg
sar
or
(bad)
mov
pop
sti
pop
or
and
mov
fiadd
lds
in
cmp
jge
adc
shr
imul
jo
pusha
pcmpeqb
adc
das
or
mov
arpl
dec
rcr
mov
das
outs
mov
in
mov
xchg
and
ret
inc
rol
push
and
push
xlat
inc
arpl
ins
in
call
sbb
cmp
ins
mov
jbe
xchg
xor
jbe
je
add
ret
and
jbe
or
inc
sub
push
test
mov
addr16
mov
adc
or
test
jne
push
add
xlat
pop
xor
in
je
xchg
call
xor
(bad)
add
test
mov
icebp
or
dec
sbb
xchg
ja
and
daa
loop
sub
jmp
mov
add
add
ret
test
and
shl
xchg
stos
push
fild
js
pcmpgtb
jg
pop
dec
test
nop
in
imul
jnp
lock
push
cmp
push
xchg
cmp
(bad)
sub
add
jno
(bad)
outs
adc
jno
ja
imul
dec
repz
push
inc
and
and
sub
mov
pop
outs
jns
push
addr16
xor
jmp
jae
(bad)
inc
aad
mov
add
ja
ja
sbb
out
mov
sbb
add
add
xor
cmc
xchg
jne
xchg
mov
jo
pop
test
mov
into
push
pop
scas
adc
add
pop
jo
push
push
and
lds
clc
inc
scas
sbb
add
sub
lds
cmovnp
mov
sub
cwde
jae
push
adc
xchg
xchg
add
pop
inc
sub
mov
mov
mov
dec
mov
dec
xor
test
jae
mov
in
lds
and
dec
sahf
(bad)
adc
fwait
imul
dec
imul
inc
ror
sbb
mov
loop
xor
add
and
sbb
mov
mov
pop
or
pusha
loopne
jle
pop
ret
mov
jno
adc
jmp
ficom
iret
or
das
and
dec
dec
repz
add
or
dec
or
mov
mov
dec
or
movs
add
mov
dec
xor
sub
pop
xchg
lods
add
jne
adc
dec
pop
pop
xor
dec
jecxz
call
cs
cld
ins
in
std
call
call
test
sbb
cmp
lea
ret
movs
cld
adc
mov
popa
or
enter
sub
ret
je
jmp
push
mov
sbb
adc
inc
bound
xor
pop
push
jne
in
rcl
fwait
sub
add
xor
inc
or
pop
add
and
push
sub
mov
sub
cmp
mov
test
adc
and
sbb
sbb
add
and
and
mov
pusha
mov
adc
pop
sbb
shr
add
hlt
loop
mov
or
sbb
or
es
lock
xor
sub
add
jo
mov
push
test
xchg
or
adc
cvttps2pi
adc
test
mov
ins
jmp
cs
mov
push
ja
sbb
push
inc
xchg
call
sbb
xchg
hlt
xchg
sbb
jo
jmp
in
mov
jge
test
xor
push
inc
sbb
inc
lock
adc
xor
adc
pop
xor
rol
mov
xor
add
gs
add
retf
xlat
or
out
mov
es
in
adc
lds
add
lea
and
cmp
jp
inc
dec
loopne
or
imul
inc
or
call
cmps
in
adc
sbb
or
into
xchg
aam
in
dec
mov
clc
xor
and
xor
mov
xchg
or
das
mov
lea
sar
xor
push
pop
xchg
sub
sub
push
xchg
mov
jne
or
inc
or
xchg
push
push
adc
xor
aaa
add
dec
xchg
lea
pop
dec
add
push
add
sbb
fnstcw
mov
sbb
or
rcl
and
pop
dec
sbb
fidiv
test
rol
xor
arpl
mov
scas
add
cld
push
xlat
xchg
jp
adc
mov
js
xchg
aam
xor
inc
aam
lock
jne
or
push
jne
adc
add
mov
inc
lds
push
pop
adc
adc
and
jnp
fild
enter
jo
lahf
sti
dec
sbb
adc
adc
pop
daa
inc
cmp
jne
jnp
mov
cmp
add
pusha
loopne
cmp
psubd
jbe
push
cmp
js
push
test
mov
inc
cmp
je
push
ret
mov
or
stos
adc
or
cdq
add
popf
mov
ja
test
adc
push
sub
mov
xchg
lahf
js
cmp
call
add
pop
push
stos
or
xchg
pushf
retf
mov
sub
adc
movs
xor
or
xchg
dec
ds
shl
cmp
js
syscall
xor
das
cmp
mov
or
mov
jno
ror
or
mov
xchg
xlat
hlt
pusha
mov
add
rcl
mov
add
cmp
sbb
jge
pop
test
pop
(bad)
jmp
push
xlat
js
add
and
mov
add
xlat
cmp
mov
iret
sbb
adc
sbb
xchg
sub
ins
push
pop
cmc
push
xor
and
ret
into
jle
adc
pop
fst
push
ss
pop
pop
pop
repz
push
push
(bad)
jb
fwait
js
mov
push
ds
fcom
fild
cmp
dec
add
dec
push
pushf
push
mov
mov
adc
xbegin
sub
jmp
sbb
or
mov
sbb
inc
jg
rol
hlt
mov
ss
pop
cmp
lahf
inc
jne
mov
add
dec
dec
sbb
clc
xchg
and
pop
sar
and
aaa
test
mov
xchg
in
ficom
add
mov
pop
retw
mov
dec
loop
add
cmp
cli
jb
fwait
rcl
adc
push
mov
pop
push
in
pusha
adc
adc
cld
loope
xchg
and
or
test
add
mov
rcl
mov
nop
xor
xor
xor
pop
add
(bad)
hlt
popa
(bad)
and
push
inc
lods
mov
push
add
sti
sub
mov
pusha
stos
sahf
or
and
aas
sub
cmp
add
sub
mov
sbb
xor
and
adc
cs
ins
mov
add
sbb
sub
sbb
adc
add
ret
out
shr
push
mov
arpl
mul
arpl
adc
or
not
stos
or
fistp
mov
cmp
inc
dec
je
cli
cmp
adc
mov
adc
cmp
mov
ins
outs
shl
xchg
push
push
mov
jnp
mov
adc
or
mov
push
adc
and
ds
cmp
ror
dec
call
mov
inc
xchg
dec
adc
repnz
movs
mov
hlt
ja
pop
xchg
xchg
add
cs
ss
add
cwde
push
and
sbb
es
or
into
and
test
inc
mov
push
out
les
fidiv
pop
cmps
and
jmp
jns
push
jo
cwde
pop
jmp
loopne
cs
mov
or
dec
and
into
push
inc
inc
sub
add
in
pop
mov
sub
push
or
adc
cmps
and
pop
jmp
jnp
jmp
push
cmp
repz
dec
lea
jmp
sub
(bad)
imul
(bad)
xor
je
xchg
nop
rcr
in
jge
and
pop
and
lods
add
pop
push
sub
push
mov
test
xchg
leave
jnp
or
retf
dec
inc
xchg
xor
mov
outs
mov
jg
adc
cpuid
mov
jae
cmp
clc
cmp
dec
sbb
add
inc
xchg
test
push
inc
xor
or
mov
mov
dec
jne
gs
or
sub
add
mov
sbb
adc
pop
inc
jecxz
mov
pop
mov
or
or
daa
or
lahf
mov
addr16
mov
imul
jnp
leave
fstp
adc
inc
jno
test
add
fwait
je
sub
cmp
lahf
sahf
sbb
or
xor
scas
das
fld
inc
stos
stc
jmp
mov
xchg
lods
(bad)
stc
mov
ffreep
push
daa
inc
fimul
fimul
mov
nop
das
pop
retf
cwde
mov
cmp
and
int3
mov
jns
imul
pop
or
mov
cli
inc
pop
test
fld
jnp
das
push
sbb
dec
lock
sub
mov
xor
adc
outs
aam
and
pop
pop
fidivr
seto
push
pop
ret
sbb
sub
dec
pop
jo
sub
mov
inc
add
movs
mov
and
jmp
adc
push
push
fldenv
push
fwait
lock
out
stos
not
mov
add
add
dec
stos
int3
sub
jae
cwde
xchg
xor
sbb
sbb
ds
push
out
retf
call
lods
mov
inc
xor
aad
add
jnp
push
xor
add
mov
mov
adc
jmp
cmp
xor
cmovne
loopne
mov
and
bound
lds
es
jg
pop
jmp
fild
dec
pushf
sbb
and
or
(bad)
mov
dec
(bad)
ins
inc
test
xor
push
test
and
mov
repz
inc
or
out
mov
and
out
cmps
cmp
jge
movs
adc
and
mov
in
and
dec
nop
loope
or
sbb
mov
push
dec
rol
or
sbb
mov
aad
cmp
pop
or
xchg
js
and
sub
dec
out
(bad)
cli
popw
push
push
xchg
adc
neg
adc
mov
push
inc
or
push
xor
retf
clc
fld
jmp
mov
pushf
add
in
jb
xchg
jbe
sbb
xchg
les
mov
cmp
dec
inc
pop
pop
add
data16
faddp
adc
(bad)
xchg
push
jg
cmp
mov
ret
push
(bad)
xchg
add
mov
(bad)
adc
and
or
adc
mov
icebp
imul
pop
movs
retf
fimul
sbb
outs
push
sub
call
and
rcr
movs
or
add
jmp
inc
xchg
lock
sbb
rcl
jo
dec
and
adc
and
or
pop
mov
push
jns
cmps
call
inc
adc
or
or
dec
sub
dec
xor
jle
sub
mov
jnp
inc
pop
push
xor
jmp
adc
ja
add
and
cmp
loopne
pop
test
int3
outs
add
mov
stos
inc
inc
mov
or
lods
xchg
daa
repz
jae
inc
pop
into
pop
add
xchg
push
mov
add
mov
mov
das
mov
push
cmps
jno
add
sbb
push
xor
test
fst
loop
fwait
into
add
std
and
dec
push
mov
ret
pop
sti
or
or
leave
inc
aam
es
lods
push
jo
iret
out
and
out
adc
add
rol
jp
or
pop
fisubr
add
jne
outs
adc
shl
push
fnstsw
repnz
add
mov
and
push
cmps
pop
retf
retf
add
aam
add
fucomi
xor
ss
cwde
jne
or
dec
repz
in
call
cmps
mov
inc
jge
add
rcl
pop
repnz
aas
adc
test
test
(bad)
cmp
test
hlt
lds
shl
inc
rol
adc
push
aam
inc
and
xor
shl
or
jge
push
in
mov
or
jmp
lea
stc
stc
cwde
adc
add
mov
ffreep
sub
cmp
or
inc
mov
clc
fdivr
call
movs
sbb
test
jbe
mov
adc
and
jl
mov
sub
or
or
and
sbb
dec
ja
test
push
adc
mov
sub
adc
sub
pop
bnd
sub
mov
push
int3
push
fcomp
(bad)
or
adc
or
push
xor
and
jns
call
sub
pop
push
std
dec
push
or
adc
or
sbb
cmp
sub
iret
cmp
sbb
rcr
xor
xchg
inc
and
push
movs
and
push
dec
and
in
scas
mov
mov
sbb
push
sar
test
xor
sub
jns
inc
ror
sub
mov
hlt
pop
retf
sub
push
and
push
outs
fiadd
xor
cmps
inc
in
jecxz
add
cld
inc
sbb
movs
add
out
cld
cmp
adc
ret
push
xchg
mov
jo
faddp
js
pop
push
mov
inc
and
cmp
add
inc
cmp
inc
(bad)
and
push
(bad)
mov
sbb
and
inc
imul
in
(bad)
bound
add
sbb
out
call
xor
xor
sub
pushf
cmp
pop
add
jle
rcr
cmp
daa
sub
imul
push
push
inc
fisttp
inc
ret
and
jecxz
fisub
inc
cmps
daa
add
jl
hlt
sti
fistp
sub
pushf
add
adc
xor
addr16
inc
cmc
mov
sbb
setge
or
mov
mov
and
ficomp
cli
daa
je
or
or
push
xlat
add
popf
and
(bad)
cmps
jne
xchg
cmp
dec
repnz
scas
push
xchg
repz
iret
add
and
xchg
inc
pop
xchg
sahf
outs
out
push
add
lock
and
cmp
mov
pop
xor
fld
mov
inc
test
mov
mov
and
push
aaa
nop
retfw
mov
(bad)
in
jne
push
rcl
aad
sub
push
pop
cs
lods
aaa
clc
mov
outs
sar
push
jo
sar
jns
adc
add
dec
push
jnp
in
push
ins
push
pop
inc
pop
in
jnp
jne
jne
cmp
imul
rol
pop
repnz
fdivr
lock
xor
popa
pop
mov
push
push
lods
cdq
dec
jmp
push
test
push
in
cmp
xchg
or
mov
add
cmp
scas
test
jge
inc
pop
jne
mov
repz
jg
dec
sub
cmp
test
push
jae
fnstenv
cmc
fdiv
test
xor
jle
or
xor
mov
jb
sbb
add
and
popa
pop
or
jbe
and
ins
leave
in
outs
cmp
dec
inc
imul
stc
push
or
repz
lock
push
arpl
(bad)
xchg
es
sar
mov
xor
es
ss
and
inc
ins
mov
push
test
pop
xchg
arpl
in
push
mov
pop
jno
xor
scas
inc
push
mov
sbb
xchg
pusha
add
stos
lods
dec
pusha
bound
sbb
mov
inc
or
and
loope
and
sbb
or
adc
sub
jno
jne
or
mov
sbb
push
and
mov
mov
jle
mov
sbb
mov
dec
or
repnz
xchg
push
push
out
or
adc
inc
into
movs
inc
inc
out
test
mov
cmp
call
sbb
xor
shr
mov
push
ss
add
sub
sbb
push
xor
fs
and
push
cmp
ret
xlat
shl
repnz
repnz
(bad)
adc
inc
sub
or
inc
xchg
outs
sub
mov
icebp
or
ds
adc
and
scas
dec
add
or
mov
dec
aam
stos
mov
cmp
cmp
daa
ss
ret
sbb
inc
jmp
adc
ins
cld
add
imul
dec
sbb
stc
adc
xchg
push
dec
(bad)
imul
inc
sbb
sub
or
arpl
dec
mov
push
(bad)
xchg
rol
int3
mov
mov
gs
add
out
pusha
mov
mov
add
jmp
adc
adc
cs
sahf
leave
ins
por
cmp
mov
inc
cdq
mov
add
add
ret
cld
jl
cdq
ret
(bad)
dec
imul
dec
popa
and
dec
pusha
and
xor
adc
push
es
or
test
loope
adc
push
add
pop
inc
inc
push
jns
add
push
(bad)
sbb
mov
jae
or
dec
xor
out
or
in
add
cwde
xor
adc
pusha
pop
mov
xor
push
stos
or
shl
jo
xchg
dec
loop
jmp
leave
pop
dec
fsub
fstp
lock
pop
add
popa
call
mov
xor
inc
data16
stos
fcomip
add
outs
sub
je
sub
push
jno
xor
nop
add
and
mov
push
call
(bad)
pop
xchg
or
push
add
or
push
and
pop
mov
adc
add
mov
mov
sub
add
push
add
mov
cmp
lods
fdiv
rcl
xchg
fmul
sbb
add
icebp
aas
cmp
fadd
loopne
sbb
push
push
jno
arpl
jecxz
cmp
lea
(bad)
movs
out
inc
pusha
outs
pop
cmp
iret
or
jo
sbb
or
cmps
jmp
pushf
push
rcr
sar
test
cdq
ffree
push
test
xor
adc
push
push
stos
arpl
xor
jmp
mov
pusha
or
dec
ret
inc
jp
push
ficomp
and
jp
inc
pop
nop
seto
outs
mov
adc
cs
mov
dec
xor
adc
enter
imul
fistp
sbb
fisttp
and
or
rol
dec
mov
cmps
mov
or
add
lock
ror
adc
jbe
fs
movs
or
ins
mov
ror
add
mov
dec
xor
sub
dec
inc
out
cmp
je
xor
add
pop
dec
add
imul
daa
inc
mov
cmp
or
mov
push
pusha
and
sbb
sbb
mov
test
mov
sbb
cmc
mov
stc
mov
int3
fld
jge
adc
imul
cmp
imul
outs
lahf
pusha
test
push
push
fnsave
or
or
ret
dec
in
add
out
xor
sbb
or
dec
lods
mov
test
aaa
and
cld
cmp
ror
mov
mov
pop
and
ffreep
adc
sbb
add
lock
fcomi
nop
(bad)
js
add
ins
call
cmp
adc
daa
pop
adc
cmp
ins
out
add
ror
inc
test
xchg
xor
ins
or
mov
mov
cwde
xor
mov
lock
hlt
mov
out
nop
je
clc
or
data16
dec
addr16
imul
cmps
dec
test
ret
mov
retf
push
leave
mov
mov
xlat
push
add
fistp
push
loope
xor
jne
out
xor
retf
(bad)
fnstcw
xchg
les
fbstp
inc
add
arpl
lods
xchg
xor
adc
pop
or
cs
xchg
inc
loope
sbb
call
mov
icebp
ins
fsub
jo
add
push
inc
pusha
das
jne
pop
adc
add
sbb
or
sub
mov
pop
pop
adc
(bad)
call
jb
sbb
mov
xchg
clc
pop
lods
sub
dec
cmp
xchg
sub
or
mov
xchg
jae
xor
fisub
sbb
or
(bad)
ins
sbb
push
push
les
xchg
push
xchg
mov
retf
push
in
xchg
or
pusha
adc
cmps
inc
push
xchg
add
sub
mov
ror
jg
pop
xchg
add
repnz
xchg
xchg
add
sub
aam
test
dec
repnz
test
call
jmp
add
add
push
sbb
sbb
loope
sub
mov
push
pop
hlt
mul
sti
enter
cmps
aaa
jle
fld
mov
mov
lods
sub
mul
mov
adc
pop
or
or
out
add
ret
push
push
xor
pop
and
dec
nop
lock
mov
xchg
add
cmps
or
les
inc
add
xchg
addr16
rcr
dec
xchg
pop
sar
sub
and
mov
lods
push
sbb
(bad)
leave
cmp
add
mov
outs
dec
imul
arpl
loope
jo
arpl
neg
or
or
sub
jl
lods
in
sbb
add
mov
dec
add
jmp
mov
pop
sbb
cmp
xor
out
mov
test
push
xor
ret
sub
add
inc
dec
pop
inc
inc
es
dec
push
retf
cmp
xor
rcl
fstp
ror
(bad)
mov
jmp
mov
mov
add
pop
cmp
scas
pusha
(bad)
or
add
dec
add
or
xchg
(bad)
add
dec
xchg
inc
mov
mov
aaa
dec
sbb
dec
pop
adc
adc
jbe
inc
add
sub
inc
ins
adc
pop
dec
or
imul
cmp
mov
imul
dec
in
jbe
neg
adc
hlt
push
cs
mov
sub
retf
add
inc
cmp
popa
add
add
ja
call
loop
jge
mov
dec
and
mov
mov
out
mov
out
(bad)
scas
xchg
inc
push
mov
ret
adc
sub
lahf
mov
inc
inc
adc
pop
jb
inc
sbb
test
icebp
fiadd
mov
loopne
pop
mov
sbb
push
and
mov
adc
aas
outs
mov
(bad)
(bad)
jmp
push
pop
cmps
inc
mov
jb
jmp
bound
pusha
fwait
jg
(bad)
and
lods
es
sar
lahf
jnp
je
and
jl
mov
clc
mov
or
and
sbb
push
cli
mov
daa
bound
call
in
lock
mov
rep
out
push
push
lock
xchg
fwait
inc
add
jg
or
adc
adc
cld
mov
jne
mov
ret
stc
and
mov
cdq
mov
add
repz
jg
push
test
clc
jecxz
adc
inc
sbb
popf
retf
(bad)
aad
add
int
das
inc
or
popf
and
test
cs
push
push
sbb
adc
cmp
in
in
and
add
nop
add
pushf
and
xor
mov
adc
addr16
les
xor
aas
nop
(bad)
nop
(bad)
div
ret
xor
call
clc
sub
or
enter
imul
sbb
bound
pusha
aad
xchg
in
sub
mov
outs
movs
push
retf
cmp
mov
adc
xchg
ret
mov
inc
xchg
xor
add
dec
jne
cli
sub
inc
or
or
push
and
fucomi
jo
sbb
(bad)
call
icebp
and
loopne
pusha
rol
cmps
outs
add
js
sbb
stos
es
or
gs
loopne
(bad)
cmps
shl
xor
stc
aad
add
cmp
rcr
mov
inc
outs
fisttp
frstor
inc
(bad)
jmp
push
xchg
test
icebp
adc
jne
loope
or
sub
xor
psadbw
pop
jl
adc
je
ins
pop
xlat
rcl
pop
cmp
cwde
es
push
je
lock
inc
loop
mov
sbb
ss
cmps
add
fs
ins
pop
add
cwde
movs
or
sbb
dec
jl
repz
sbb
cld
scas
mov
push
lock
lock
jge
or
sub
jo
jp
mov
lods
inc
sub
lahf
loop
jmp
xor
mov
add
into
aaa
mov
inc
fs
push
inc
add
add
sub
stos
loope
add
jmp
push
adc
addr16
(bad)
xchg
aaa
push
mov
xchg
dec
sbb
sbb
daa
adc
popa
sbb
(bad)
(bad)
jmp
pop
call
sub
jnp
and
aaa
das
push
repz
or
lahf
outs
fisub
sub
cmps
and
lock
add
shl
sbb
and
in
push
push
dec
test
add
jl
xor
or
jl
jmp
mov
jmp
adc
test
fs
push
xchg
popf
or
fadd
adc
and
push
dec
loope
inc
lock
add
jne
pop
daa
mov
mov
cmp
(bad)
cwde
push
aas
pushf
popa
sbb
cmps
push
xor
inc
dec
jns
mov
nop
or
and
and
pop
add
es
adc
push
mov
pushf
add
mov
mov
mov
inc
jb
mov
leave
lods
dec
mov
mov
mov
mov
mov
rol
adc
lea
cmps
movs
lods
dec
and
mov
dec
cmps
test
in
cs
push
cmp
cs
cmp
mov
pusha
movs
sub
push
lds
test
nop
scas
and
test
and
ret
pop
jb
jb
cmovge
sub
and
xor
xchg
imul
imul
mov
mov
inc
push
pop
sub
sbb
push
call
stos
dec
rcl
ins
jecxz
fs
mov
pop
iret
adc
sbb
mov
adc
ja
rol
cs
dec
pop
push
add
pavgb
jne
gs
xchg
jmp
or
sbb
push
out
inc
pop
shl
push
xchg
add
adc
mov
mov
(bad)
sti
cmp
jl
or
jg
cmp
adc
mov
pop
mov
cmps
fadd
jno
jmp
mov
mov
je
popf
hlt
ins
xor
lods
cmp
nop
add
jmp
cmps
in
inc
push
adc
and
mov
movs
or
ret
xor
movs
sbb
xchg
js
push
rcl
pop
mov
push
and
iret
mov
daa
mov
jbe
add
push
fist
xlat
popf
imul
lea
pop
mov
mov
popf
adc
clc
retf
and
jo
push
dec
scas
(bad)
push
add
sub
inc
pop
pop
cmp
cmp
pop
adc
xchg
call
(bad)
leave
loopne
pop
mov
test
cdq
inc
fs
out
cld
or
mov
mov
push
cmp
gs
movs
cli
cmp
rol
ss
push
std
pop
lock
inc
enter
xchg
out
lods
and
jmp
xchg
les
imul
imul
test
cmp
sbb
jmp
cmc
xchg
jp
push
nop
push
out
mov
ret
add
cld
ja
jl
outs
push
loopne
sbb
mov
call
xchg
in
cld
add
pop
unpckhps
pop
sar
or
rcr
inc
jne
mov
inc
dec
out
jno
inc
repnz
jbe
push
add
mov
inc
cmp
or
jo
pop
inc
cmp
cmp
pop
jns
xchg
pop
and
js
jnp
sahf
add
out
cs
shr
imul
loopne
fisub
aaa
mov
test
mov
das
cmp
mov
retf
rcr
ss
pop
cmps
out
rcr
xchg
dec
pop
into
cmp
std
stos
outs
mov
test
mov
push
sbb
cmc
adc
mov
cmp
adc
(bad)
mov
add
aas
adc
adc
outs
into
and
sub
and
push
fld
inc
push
sbb
mov
dec
jno
add
pop
jmp
mov
or
mov
push
and
movsx
sbb
adc
inc
jecxz
add
out
jne
rol
or
and
mov
adc
mov
sbb
nop
sub
and
jb
mov
cmps
test
and
test
pop
xor
xor
mov
dec
or
mov
xchg
or
out
dec
add
pop
loope
lahf
sub
outs
jmp
call
shl
sub
and
repz
add
test
or
ins
es
mov
sbb
mov
daa
sbb
fs
cmp
ins
add
daa
fadd
push
jb
fwait
xchg
pop
imul
pop
mov
(bad)
mov
pop
mov
shl
(bad)
push
dec
and
push
add
loope
ror
retf
add
sub
xchg
mov
ins
push
jmp
ins
dec
mov
and
icebp
repz
inc
lahf
and
scas
dec
(bad)
adc
dec
fwait
jge
ins
sbb
pop
push
inc
add
cmp
fnsave
xor
sbb
push
lea
call
cld
test
retf
mov
mov
add
push
pop
in
jae
dec
mov
aas
lea
sub
pop
out
lea
or
push
dec
xor
adc
aad
sub
aad
fiadd
loope
pop
pop
cmp
mov
add
fcmovne
fwait
popf
sbb
cs
inc
inc
and
jmp
sbb
ja
jmp
sbb
add
or
xor
mov
dec
adc
outs
jmp
scas
rol
in
rol
sub
hlt
sub
daa
loope
mov
je
cs
fs
xchg
add
jne
push
rol
es
dec
sbb
jns
popa
aas
push
jg
fwait
sbb
jmp
and
inc
or
xor
shl
daa
pop
add
ins
ins
jmp
sbb
js
add
xor
or
dec
js
sbb
hlt
mov
xchg
aad
inc
xchg
cmp
mov
(bad)
push
sub
pop
lods
mov
fcmovnu
cmp
mov
not
mov
dec
cmp
and
pop
loop
push
mov
jp
clc
cmps
mov
inc
inc
pop
xchg
test
hlt
arpl
test
std
push
lahf
dec
korw
mov
hlt
je
and
fnstenv
push
adc
movs
outs
fild
add
imul
cmps
adc
mov
jne
sub
sub
inc
bound
push
xor
jnp
adc
outs
ficom
mov
mov
xor
(bad)
scas
mov
sbb
or
sbb
xchg
or
pusha
popf
or
xchg
es
mov
adc
fadd
test
cmps
ret
std
xchg
push
adc
add
xchg
inc
push
add
sbb
ret
and
add
ret
push
pusha
movs
xlat
aas
or
jmp
and
adc
sub
sar
lock
call
fsubr
frstor
out
xchg
xor
aaa
dec
in
inc
mov
sub
cmps
sub
mov
in
inc
fadd
push
push
mov
sti
adc
aad
sub
mov
pop
xor
inc
pop
push
loope
pop
jmp
and
mov
xor
jecxz
test
push
mov
mov
or
sbb
add
mov
mov
fmulp
repz
retf
or
mov
call
ins
rcr
shl
and
loope
cmp
and
jmp
js
jge
loop
pop
lods
lahf
(bad)
mov
pop
and
mov
cmp
sbb
imul
adc
and
fcomi
push
mov
mov
add
mov
mov
or
(bad)
pop
loopne
cmp
cmp
test
and
add
vpmacssdqh
and
sbb
or
loopne
jge
arpl
adc
push
inc
lahf
test
ins
jmp
fsub
cmp
pop
mov
mov
adc
in
cs
adc
idiv
sub
mov
sti
push
push
iret
je
arpl
inc
jecxz
aaa
clc
mov
dec
xchg
and
fld
fsub
sbb
or
bound
jno
jmp
push
call
test
jno
push
popa
cmp
ins
push
push
aam
cmp
push
adc
enter
rcr
add
mov
sub
xchg
or
push
out
lods
sub
pop
mov
in
sbb
dec
or
push
adc
push
paddusb
or
dec
jmp
outs
test
push
in
add
pop
push
mov
mov
jg
adc
adc
pop
or
lahf
mov
add
or
sar
fsubr
dec
ins
repnz
fisub
push
jb
ror
fadd
sbb
adc
or
sbb
xor
xor
in
shl
mov
cli
or
mov
push
pop
dec
pop
enter
mov
adc
cmp
mov
and
push
add
jae
mov
push
(bad)
arpl
inc
pop
xor
add
adc
shr
adc
sub
pop
xchg
in
dec
jecxz
pop
xor
fwait
xchg
test
clc
fwait
lock
cwde
ins
or
dec
mov
jnp
inc
push
mov
push
lods
and
call
mov
inc
pusha
sbb
jl
mov
add
test
jmp
sub
or
movs
fdiv
dec
pop
mov
and
sbb
xlat
(bad)
or
jo
xchg
push
cmc
push
sbb
sbb
jmp
loopne
sti
sar
sbb
jl
push
add
popf
retf
mov
and
js
lods
xor
adc
add
imul
or
clc
imul
in
push
mov
or
adc
loope
adc
or
add
pop
pop
add
stos
aad
sbb
or
mov
movntq
add
xchg
shr
fiadd
push
inc
mov
and
daa
mov
adc
inc
xchg
push
fisub
ficom
adc
outs
jne
pop
xlat
inc
mov
cmp
inc
sbb
add
mov
and
int
pusha
jge
pop
xrelease
lods
test
pop
pop
dec
bound
ins
xor
into
jle
push
push
xlat
xor
js
cmp
add
je
mov
movs
cmp
je
loope
aam
inc
retf
push
and
mov
loop
push
dec
inc
jp
push
jne
add
add
pop
fs
frstor
pop
dec
add
inc
push
push
shr
sub
movs
sbb
adc
mov
xchg
adc
gs
test
push
add
jbe
adc
(bad)
inc
nop
nop
aas
sbb
and
test
mov
dec
pop
sbb
adc
js
imul
fdivr
inc
inc
outs
sub
cmp
inc
mov
or
add
push
add
nop
or
aam
sbb
aam
add
xor
test
mov
in
pop
nop
mov
ja
push
inc
or
gs
xchg
sbb
cmp
repz
repz
push
adc
fs
cmp
push
int3
mov
pushf
push
(bad)
mov
sbb
enter
xor
jmp
sub
fcmovnb
fs
repnz
(bad)
aam
lods
mov
jb
add
in
xor
xor
xlat
xor
aam
out
es
dec
push
dec
adc
mov
mov
dec
mov
cmp
mov
add
jae
sbb
push
imul
je
pushf
lods
and
scas
fadd
stc
mov
adc
add
ror
sbb
dec
pushf
xchg
mov
fimul
loopne
pop
(bad)
push
sti
enter
inc
dec
push
jbe
popf
sub
sub
test
add
jne
retf
pusha
sbb
or
dec
sub
aad
xchg
and
(bad)
repz
mov
xor
ret
adc
sub
test
mov
stos
call
dec
mov
add
and
(bad)
mov
inc
and
imul
cmp
ret
inc
sbb
push
xor
lahf
aad
loope
or
or
out
inc
out
xchg
inc
xchg
and
mov
or
mov
aaa
ror
nop
jo
ss
fdiv
mov
mov
ja
inc
mov
and
mov
add
pop
jl
add
ins
cmp
mov
rcr
js
sbb
lock
pop
(bad)
jle
sub
sbb
jne
dec
sub
sub
or
mov
push
sub
inc
jne
lods
adc
les
xchg
push
xchg
mov
inc
aam
dec
pop
adc
dec
sub
out
in
test
les
xchg
js
imul
pop
add
push
cmp
jge
in
dec
jge
mov
add
add
hlt
pop
adc
mov
dec
mov
add
dec
pop
shr
cmc
sahf
dec
or
xchg
sbb
mov
sub
imul
mov
les
cmps
push
xor
xor
psrld
test
pop
dec
daa
mov
ror
mov
sub
pop
jmp
loop
dec
xlat
das
push
cmp
loopne
xchg
stos
les
jle
xchg
and
adc
mov
test
cdq
ret
xchg
fimul
bound
sub
xchg
or
cmp
shr
inc
sbb
cmp
xchg
xchg
adc
loope
mov
pop
jnp
adc
jns
addr16
daa
inc
arpl
mov
mov
adc
xor
sbb
mov
inc
sub
push
xchg
pop
xchg
mov
xchg
movs
jno
mov
push
ja
repz
js
sbb
mov
pop
ficomp
mov
xchg
inc
or
stc
cmp
(bad)
rcr
sbb
rcl
push
fdiv
push
and
jg
push
fadd
cwde
les
addr16
fbstp
ss
jo
popf
mov
add
add
or
pop
js
add
pop
inc
rol
jecxz
push
ss
push
jl
adc
push
cmp
ret
fwait
dec
or
clc
adc
adc
and
mov
loop
sbb
pushf
mov
push
cmc
mov
daa
or
fbstp
mov
mov
push
leave
fidiv
les
call
xlat
and
lods
add
mov
mov
push
bound
sbb
daa
jmp
adc
push
and
popf
cmps
sbb
sbb
add
jb
xor
int
adc
imul
mov
movs
xor
std
add
push
cld
jnp
in
xor
sbb
add
(bad)
add
lahf
add
add
imul
ja
sub
add
sbb
dec
retf
iret
inc
push
vmulps
or
addr16
cmp
arpl
dec
xchg
mov
xor
add
or
(bad)
and
mov
xchg
sub
inc
outs
hlt
inc
int3
and
xor
xor
or
push
pop
movs
or
xchg
ret
jge
test
enter
sub
sbb
lds
inc
or
xchg
imul
jae
shl
fmul
add
or
ins
in
int3
les
cmp
jne
leave
ins
mov
repnz
lods
add
or
xchg
cdq
pop
aad
outs
out
add
add
xor
inc
xor
mov
ret
sub
retf
xor
xchg
or
mov
or
sbb
sbb
ficomp
mov
in
ret
push
mov
push
nop
sbb
jo
lock
repnz
rcl
bswap
add
xor
push
xor
xchg
cmp
cmp
sbb
add
pop
dec
ja
sub
adc
or
add
call
pop
push
cmp
and
movs
sahf
aaa
adc
les
inc
aad
arpl
or
gs
sub
jbe
xchg
sbb
jo
nop
mov
inc
or
inc
sbb
add
jo
out
push
sbb
mov
xor
or
add
or
dec
cmps
mov
push
adc
sbb
shl
mov
sbb
retf
mov
mov
sub
std
jne
aas
sub
fdivr
fdiv
cmp
(bad)
mov
cmps
lds
adc
add
adc
dec
xor
jge
sbb
sahf
and
hlt
das
test
test
je
sub
fwait
int3
call
in
gs
mov
sbb
or
pop
cmp
cmc
mov
outs
inc
xchg
inc
sub
push
add
jmp
jno
dec
je
lahf
mov
jp
mov
fldenv
xchg
lahf
jecxz
jb
inc
ret
adc
jp
inc
in
inc
or
push
movs
inc
iret
es
add
add
ins
cmp
xor
push
pop
adc
je
push
sub
or
idiv
push
adc
push
pop
sbb
les
sti
cmp
shl
adc
mov
mov
dec
push
push
das
push
push
jo
adc
inc
and
rol
icebp
sbb
sub
adc
dec
push
inc
cmp
mov
sub
popa
icebp
xchg
pop
pushf
cmp
and
sbb
push
adc
adc
cwde
ret
cmp
mov
jb
pop
mov
cmp
and
and
ret
stos
fldenv
or
and
xor
or
mov
or
jmp
xor
lock
lock
jl
inc
cmp
dec
sub
cmp
dec
cmp
or
or
mov
test
mov
sbb
add
rcl
add
dec
bound
pusha
add
cmp
push
cmp
or
mov
stos
push
cld
test
and
inc
adc
in
call
or
sbb
retf
xlat
pop
jb
pop
sbb
jge
or
sbb
dec
sti
push
pop
out
lea
das
inc
loop
inc
pop
icebp
xchg
icebp
jne
pop
sub
lock
cmp
or
fidiv
add
sub
inc
adc
push
sub
and
and
fwait
out
sub
and
cmp
test
mov
test
dec
and
xchg
mov
mov
sbb
(bad)
std
pop
xchg
lock
jb
div
cmp
sub
mov
inc
mov
sbb
test
jne
fld1
jmp
push
dec
fisttp
sar
or
or
inc
repz
jmp
pop
mov
mov
add
mov
popa
pusha
idiv
pop
pop
cmp
retf
and
rcl
fild
cdq
mov
jg
gs
jo
repz
rol
mov
add
pop
push
push
pop
sbb
pusha
gs
or
scas
pop
mov
popa
(bad)
movs
rcr
or
call
xlat
adc
ins
or
add
or
(bad)
push
aam
mov
sub
mov
xlat
xchg
add
int3
repz
add
xchg
dec
or
or
xchg
adc
into
pop
add
mov
imul
adc
rcr
mov
in
(bad)
sub
call
push
test
push
adc
adc
push
loopne
and
mov
xor
ja
mov
or
sti
shl
call
or
xor
jmp
dec
imul
aaa
jb
fwait
xor
fadd
xchg
mov
adc
or
hlt
mov
sub
push
out
sbb
push
pop
jns
icebp
mov
or
out
ds
sub
xor
pop
mov
pop
or
fnstsw
(bad)
add
or
dec
dec
icebp
in
lods
ja
xor
dec
or
dec
int
pop
das
or
jecxz
add
xor
or
push
xchg
bound
lods
mov
xor
inc
arpl
pop
hlt
fdiv
rol
sbb
mov
aaa
ret
mov
in
add
sub
jmp
xor
fdiv
cmp
mov
adc
dec
add
test
xlat
mov
call
sbb
shr
aas
dec
not
ret
xchg
test
adc
popa
repnz
sub
es
dec
lods
sub
adc
push
call
mov
retf
cmp
cmps
cs
dec
shl
fadd
jl
or
inc
ins
outs
push
sar
(bad)
adc
dec
xchg
test
imul
sub
nop
jg
or
pop
inc
mul
jns
inc
dec
lods
in
(bad)
sar
xchg
dec
xchg
sub
and
(bad)
push
mov
mov
and
sub
add
pavgb
push
add
je
adc
(bad)
mov
add
retf
fsub
and
sub
xor
out
mov
pop
ret
xchg
push
jmp
pop
push
inc
cmp
mov
jp
outs
jo
gs
js
daa
adc
popa
xchg
add
and
inc
mov
or
push
test
and
xchg
ret
mov
sbb
ss
cmp
sub
nop
push
mov
push
(bad)
aam
(bad)
or
test
add
sub
test
jmp
repz
fs
sub
jne
sub
adc
push
leave
loop
sub
pusha
lea
pop
xchg
add
mov
pop
mov
movs
(bad)
ds
and
and
add
mov
xor
fsubr
mov
rol
pop
cmp
inc
cmp
dec
adc
pop
icebp
les
js
pushf
inc
pop
cwde
inc
pop
lock
sub
add
nop
inc
sbb
arpl
and
adc
mov
in
adc
dec
jnp
jnp
nop
xor
sbb
shr
inc
inc
movs
(bad)
dec
push
mov
fist
or
outs
inc
lahf
ss
in
inc
jns
popf
mov
in
xchg
dec
cmp
xor
and
jno
and
lods
mov
adc
add
loopne
sub
clc
or
hlt
pop
mov
add
adc
in
push
mov
shr
push
and
lahf
mov
fld
jns
xchg
lods
in
or
retf
das
sub
and
jmp
call
pop
mov
sar
imul
mov
lods
xor
and
shr
loop
sbb
dec
fisub
test
adc
ret
pop
dec
pop
jbe
adc
aas
dec
addr16
stc
aam
retf
xor
in
out
cmp
repnz
addr16
sbb
inc
push
jo
mov
jle
jbe
std
jne
inc
push
adc
mov
lea
xchg
sti
xchg
adc
mov
push
push
add
push
dec
iret
ins
adc
sub
or
xchg
div
scas
inc
and
jbe
(bad)
ja
and
cwde
in
cwde
cmp
loope
inc
dec
add
lds
pop
and
sub
std
lods
sub
sbb
ret
nop
pop
inc
add
dec
xor
xlat
xor
and
scas
inc
lock
enter
inc
add
and
add
xchg
loopne
sbb
pushf
xlat
ret
pop
add
out
aaa
pop
mov
add
adc
movs
pop
clc
pop
retf
or
and
adc
add
xchg
add
adc
icebp
repnz
scas
cmp
imul
adc
or
loope
push
aam
push
fs
adc
cmp
(bad)
iret
sbb
(bad)
sar
cmp
push
fild
mov
cdq
cli
adc
cmp
shr
xor
push
and
adc
jle
pusha
or
dec
add
mov
mov
sbb
imul
pusha
sub
push
nop
daa
js
add
psllq
mov
ins
pop
shr
gs
dec
inc
and
add
pop
sub
ror
adc
aad
or
mov
call
adc
les
sub
mov
sub
inc
gs
femms
(bad)
and
push
jo
jecxz
mov
sbb
mov
lock
popa
ss
xchg
dec
lock
in
push
shl
loop
mov
and
icebp
add
xchg
push
adc
dec
popa
ret
nop
or
mov
or
hlt
les
js
xchg
aad
or
push
mov
push
(bad)
lods
into
popa
ret
pop
jl
sti
les
sbb
dec
jnp
add
pushf
adc
das
mov
add
pop
loope
mov
daa
ret
push
jae
cdq
xlat
xor
mov
rcl
adc
or
hlt
cmps
inc
add
mov
xchg
leave
hlt
push
push
push
cmp
adc
icebp
mov
lods
mov
mov
cli
cmc
dec
les
and
inc
rol
stos
push
mov
adc
adc
mov
aam
nop
or
xor
adc
add
bnd
cdq
sbb
dec
jecxz
mov
mov
jbe
pop
adc
inc
sub
sar
jmp
mov
fwait
dec
or
movs
out
fld
pop
or
and
mov
add
fld
pop
pop
or
pop
icebp
push
mov
pop
xor
sbb
mov
jl
icebp
aas
cmp
mov
or
movsx
add
sbb
xor
xchg
hlt
popa
mov
scas
mov
out
inc
jb
fist
push
mov
aaa
enter
xlat
or
call
or
out
pop
jmp
pusha
mov
or
sbb
sbb
cs
or
sbb
sahf
pop
xchg
lahf
mov
clc
mov
xchg
mov
mov
pop
inc
lahf
fcomp
pop
ret
cmc
pop
mov
sbb
call
frstorw
add
data16
sub
inc
inc
rol
les
sahf
mul
ret
inc
dec
adc
cld
xor
add
mov
std
jae
js
test
mov
xchg
cmp
or
cmp
cmp
pop
bswap
aaa
mov
in
test
sbb
xchg
sub
inc
push
sar
push
in
add
mov
fist
pop
out
xchg
ins
mov
xchg
lods
jge
mov
imul
divps
cmp
dec
push
xchg
inc
cmps
inc
inc
inc
inc
sub
mov
cmp
mov
inc
popa
stos
sbb
sbb
in
mov
dec
ret
jbe
sbb
(bad)
rcl
lock
out
cmp
add
adc
inc
sub
dec
add
pushf
mov
add
push
arpl
and
int3
jmp
add
xor
push
js
mov
dec
add
nop
dec
dec
pop
dec
mov
mov
sbb
sbb
pop
ror
cli
mov
pop
repz
mov
mov
pop
add
or
xor
or
xor
je
adc
ds
push
add
lock
and
imul
or
xchg
call
arpl
adc
lock
xchg
es
jne
dec
push
push
imul
add
and
call
pop
sar
jo
mov
in
mov
sub
sub
add
inc
popa
sar
jmp
cmp
adc
xlat
inc
jecxz
xor
jns
clc
in
(bad)
adc
sub
aam
mov
dec
xor
daa
lock
inc
call
pop
sbb
pop
or
jecxz
les
adc
jo
dec
cdq
lea
pop
(bad)
fwait
test
xlat
cmp
add
and
or
retf
push
ins
add
je
mov
sbb
mov
and
inc
loope
jmp
mov
pop
add
or
push
add
dec
mov
test
les
jecxz
adc
add
fsub
add
xchg
xchg
cld
adc
daa
loopne
pop
adc
jo
push
or
add
mov
cmp
sub
mov
pop
icebp
pop
add
mov
push
sub
adc
test
addr16
xchg
dec
mov
out
movs
(bad)
test
mov
fldcw
xor
cmps
sub
hlt
pop
xor
movs
movs
cmp
lods
mov
data16
(bad)
cmps
imul
xor
push
je
int3
add
sub
push
pusha
mov
xchg
and
or
xor
mov
in
sub
into
mov
movs
or
pop
adc
push
das
cs
ins
or
fmul
fsub
add
mov
add
test
dec
mov
gs
push
pop
mov
add
test
(bad)
in
rcl
addr16
cld
adc
xor
test
xchg
stc
jnp
cmp
ret
push
push
loopne
aad
lock
xchg
xor
out
mov
adc
rcr
call
add
sbb
sub
fistp
mov
shl
ins
pop
push
push
or
adc
inc
pop
pushf
cmp
pop
out
add
push
inc
loop
je
shr
pop
repz
jmp
pop
adc
rep
cmp
xor
les
xchg
ja
nop
mov
retf
xor
pop
add
sub
cwde
cmps
aam
bswap
or
push
xchg
dec
fdiv
hlt
or
je
push
shl
push
stc
or
pop
lea
or
inc
fs
test
sbb
xor
sub
in
pop
xchg
sbb
push
mov
jne
call
scas
push
leave
pop
push
xlat
jmp
and
or
or
lock
popa
cmp
jne
pop
lock
icebp
sub
cmp
dec
mov
sbb
sbb
in
mov
adc
jae
jle
bound
lea
xchg
daa
mov
push
cmps
mov
add
pop
mov
adc
sti
ror
out
loopne
cmp
xchg
aad
lock
(bad)
pop
mov
imul
push
xor
mov
(bad)
push
loope
outs
jl
xor
call
xchg
int3
xchg
mov
push
sub
xor
neg
imul
and
pop
lahf
retf
in
(bad)
test
xor
setae
hlt
mov
scas
xchg
or
imul
jg
or
or
xor
(bad)
shr
jmp
jl
scas
stc
dec
test
cmp
je
test
adc
xchg
imul
not
add
jne
retf
and
imul
arpl
(bad)
jns
or
add
fwait
addr16
jnp
xchg
dec
nop
or
or
mov
or
xchg
xor
in
enter
(bad)
call
mov
pusha
add
add
call
call
dec
lea
adc
adc
scas
inc
ds
dec
call
mov
inc
dec
mov
call
(bad)
pop
add
mov
cs
loope
aaa
dec
mov
mov
sbb
sub
stc
or
adc
cs
inc
cmp
and
ins
pop
push
scas
mov
or
leave
rol
mov
push
cld
sbb
mov
push
loop
sbb
dec
arpl
mov
mov
and
scas
adc
push
cmp
mov
jo
pop
mov
cwde
inc
mov
(bad)
push
inc
cmp
xchg
sbb
gs
xor
movs
les
push
xchg
loopne
inc
lahf
loopne
mov
mov
jmp
adc
mov
das
loope
mov
mov
imul
mov
(bad)
out
push
push
stc
mov
int
xchg
cmp
and
xchg
inc
or
test
xchg
je
xchg
mov
mov
pushf
cmp
sub
and
nop
adc
cmp
add
jle
inc
mov
mov
or
cwde
addr16
fs
sahf
adc
dec
std
push
or
adc
adc
and
sbb
add
add
mov
jmp
sub
sub
jne
pop
and
mov
cs
cmp
or
jg
test
cdq
sub
adc
and
jns
ret
sub
mov
loope
add
dec
add
stos
loop
or
xchg
xchg
sub
xchg
push
or
mov
xchg
js
sbb
add
cmps
sbb
mov
xor
sub
retf
mov
add
adc
mov
or
dec
sub
imul
or
and
pop
push
adc
rol
inc
adc
ror
(bad)
and
add
js
lods
xchg
ret
xor
add
push
jns
mov
and
or
stos
mov
fidiv
push
xchg
or
shl
xchg
addr16
repnz
ss
xor
xchg
lods
(bad)
pusha
loopne
mov
dec
or
inc
jae
and
xor
adc
outs
cs
adc
and
sbb
int
movs
adc
sbb
call
ror
repz
cmp
xor
rcl
ret
cmps
imul
jae
inc
pop
lock
ror
shr
adc
jb
js
jp
push
push
pop
mov
call
leave
sbb
sub
sub
and
(bad)
sub
mov
call
xor
lea
out
inc
jmp
sub
xchg
movs
or
aaa
in
or
xchg
add
mov
lea
nop
xchg
sbb
stos
xchg
dec
mov
movs
push
adc
mov
mov
mov
and
mov
mov
xchg
pop
inc
cmps
cwde
lahf
or
mov
inc
aas
adc
mov
pop
clc
and
mov
sub
add
and
ret
xor
mov
and
jae
sub
adc
sbb
popa
lods
xor
xchg
pop
inc
cmp
push
dec
jno
mov
jg
fsub
(bad)
inc
pop
enter
pop
mov
mov
popa
ds
pop
nop
dec
ror
jae
pop
xlat
sub
push
sub
push
imul
mov
push
pop
lods
push
cli
and
mov
test
inc
pop
sbb
div
push
sbb
fcomp
or
sub
sbb
add
push
loop
push
xchg
xchg
pop
fidiv
pushf
rcr
cmp
pop
sub
inc
daa
and
fwait
sub
push
and
dec
dec
sub
inc
cmp
lock
cmp
xchg
movs
inc
ds
pop
inc
mov
sahf
inc
add
xchg
inc
inc
push
push
or
adc
mov
pushf
aaa
fimul
dec
scas
add
fcmovnb
sti
xchg
add
fimul
or
pop
push
fcom
add
shr
inc
sub
test
movs
or
div
movups
adc
aaa
jne
or
lods
add
(bad)
ror
and
pop
fcom
push
sub
ins
je
adc
dec
adc
sub
(bad)
clc
ins
cli
mov
inc
xor
inc
sub
stos
and
mov
pop
xchg
cmp
sub
rol
ins
xor
jne
aam
rcr
pop
rol
adc
xlat
pop
jp
mov
add
mov
xor
or
movzx
xchg
or
bnd
enter
push
outs
cmp
jne
rol
inc
fild
sub
add
popa
add
mov
std
enter
out
ja
shl
test
icebp
sub
jns
stos
push
push
sbb
or
and
mov
loopne
dec
push
xor
and
test
xchg
adc
pop
push
xor
inc
adc
ret
or
ret
jge
cmp
call
inc
mov
pushf
test
cmp
adc
sahf
add
add
sub
popa
sti
xor
adc
add
and
pop
dec
scas
int3
repz
ja
test
ins
ds
cmp
or
adc
sbb
sbb
test
adc
stc
add
sub
out
rcl
and
cmp
das
sub
sahf
inc
(bad)
mov
test
enter
or
push
inc
mov
lock
xchg
out
out
mov
test
xlat
mov
sbb
pop
fs
mov
jg
je
fmul
xor
mov
daa
pop
dec
je
gs
mov
and
xor
add
mov
jnp
xor
add
xor
mov
pop
pop
dec
jle
adc
aaa
and
and
jg
inc
outs
adc
ja
push
(bad)
or
inc
pop
je
push
jno
movs
add
das
add
xchg
jmp
retf
(bad)
add
dec
fcomp
int3
dec
cmc
imul
mov
jo
div
push
dec
push
cli
jl
pop
jg
movs
ds
jmp
push
mov
gs
int
lds
in
mov
pop
sub
push
xor
lar
data16
popa
sub
ret
mov
shl
jg
mov
(bad)
xchg
pop
int
pop
bound
xor
push
jno
mov
pop
cmp
mov
fdiv
xchg
int
push
add
push
fsubr
cmp
in
pop
mov
cmc
push
dec
jo
loopne
or
jne
out
dec
and
or
or
mov
xchg
jl
add
sub
sub
imul
dec
push
mov
out
jp
cmp
dec
jae
xchg
jle
ret
inc
dec
jne
xchg
sbb
test
adc
mov
clc
scas
add
int
test
sub
mov
fiadd
sub
retf
adc
ss
and
inc
xchg
nop
push
outs
and
fmul
inc
add
lock
add
pop
popf
push
daa
ret
add
arpl
loopne
shl
xor
aaa
fadd
push
prefetch
xchg
add
adc
push
mov
push
sub
dec
mov
cmp
in
dec
mov
lds
inc
xchg
dec
js
std
jmp
rcr
push
dec
push
mov
cmps
or
push
cmp
out
xchg
inc
cmp
in
cmp
add
or
add
xor
sub
push
sbb
jl
xor
cli
jl
sbb
(bad)
jae
inc
inc
pop
push
imul
dec
mov
inc
sbb
mov
xor
and
adc
mov
movs
int
mov
nop
test
pop
or
xchg
mov
jmp
fsqrt
and
pop
adc
inc
sub
jl
add
mov
add
out
add
push
sbb
or
inc
sub
jae
fadd
xor
test
int3
jne
xor
cmp
or
sub
push
and
or
je
cmp
xor
xor
add
sub
jle
sbb
clc
dec
mov
inc
ret
arpl
cmp
xor
add
inc
aaa
test
dec
(bad)
sbb
xor
dec
repz
sub
pop
data16
lods
mov
cmp
xchg
or
add
xchg
dec
xchg
pop
stos
fsub
xchg
mov
nop
retf
sub
pop
call
(bad)
cdq
mov
call
and
not
and
pusha
cmp
sub
sbb
lods
dec
dec
mov
and
movs
xor
sub
lock
push
cs
inc
ins
jl
or
loope
repnz
inc
sub
or
adc
or
dec
mov
scas
in
mov
adc
push
jmp
in
repnz
jmp
xor
cmp
or
popa
dec
add
cmps
xor
mov
pop
or
fbstp
sub
push
(bad)
das
inc
mov
dec
cmp
jnp
test
dec
add
test
int3
cld
in
inc
push
call
push
lea
sub
jg
dec
mov
add
cmp
cld
xor
je
in
jbe
aad
pop
pop
cwde
mov
dec
inc
push
scas
mov
lods
fwait
mov
daa
jl
push
and
push
mov
pop
dec
add
sub
adc
add
dec
jne
inc
push
and
adc
pop
arpl
(bad)
and
int
out
ja
ret
fwait
shl
push
in
sub
push
push
mov
mov
sub
jmp
out
sub
xor
lods
adc
loope
push
repz
inc
jae
or
inc
push
or
sbb
inc
ss
sbb
push
pop
inc
outs
push
adc
cld
or
pop
ret
aas
push
add
adc
sbb
mov
lea
add
es
fbld
xor
fld
xchg
push
xchg
or
inc
sub
fcmovne
push
push
push
xchg
out
nop
enter
jae
daa
jge
add
lods
mov
movs
or
test
push
imul
and
ins
push
loop
push
cs
adc
gs
fs
sub
pop
dec
imul
loope
daa
pushf
ret
xchg
xor
mov
pop
mov
and
adc
lds
mov
out
jb
test
push
or
inc
rcl
mov
test
mov
sbb
in
bnd
cdq
add
dec
pop
dec
jo
or
mov
sub
ins
ss
pop
push
inc
add
cmp
jle
ins
mov
mov
add
leave
and
push
call
clc
mov
inc
call
ret
shl
enter
outs
cld
xor
cmps
push
sub
scas
sub
in
xchg
add
es
jecxz
cmp
and
fs
push
inc
cmp
mov
inc
sub
or
pop
rol
cmp
jl
sbb
fisub
add
inc
inc
jle
mov
gs
pop
or
scas
and
dec
daa
lahf
mov
jae
pop
jo
inc
jmp
cdq
fbstp
lods
enter
sbb
mov
fmul
jne
gs
ror
jmp
and
pop
test
or
loop
push
mov
inc
push
sbb
shl
push
nop
sbb
into
or
xor
sbb
pop
cld
pop
sub
imul
fsubr
mov
adc
and
sar
fwait
pop
sub
sub
ins
mov
push
xchg
adc
add
aam
stos
xchg
dec
inc
mov
and
test
sub
popf
mov
jmp
fdiv
adc
sub
lea
add
aas
inc
cmp
add
jmp
push
push
jno
ret
push
outs
idiv
nop
pandn
xchg
cmp
into
xor
(bad)
rcr
sbb
es
and
mov
imul
adc
cmp
mov
dec
(bad)
ror
sti
lock
add
push
aas
pop
cmp
and
mov
push
(bad)
mov
add
in
jmp
mov
cmp
or
push
call
inc
leave
push
adc
or
pop
push
mov
push
add
fcmovb
or
ror
jp
and
repnz
push
aam
sub
and
dec
push
jmp
popa
sub
aas
dec
and
sub
cs
mov
push
dec
add
mov
pop
push
das
adc
std
sub
dec
add
push
pop
push
xor
iret
inc
stc
fdiv
es
les
cmp
push
icebp
enter
fcomi
test
rcr
mov
test
cmp
fcom
adc
bound
lods
xor
inc
pop
mov
push
call
adc
cs
das
or
mov
or
cmps
in
sub
cmps
add
adc
dec
jge
push
xor
loopne
or
add
test
jmp
dec
xor
cdq
inc
mov
imul
mov
sub
mov
pop
sbb
or
popa
rcr
cmp
add
sti
cmp
sub
mov
enter
test
or
jne
es
push
push
lea
add
loope
mov
cmp
out
shl
pusha
cmp
(bad)
xchg
or
mov
(bad)
mov
lods
jns
cmp
push
bound
sub
cmp
xor
pop
push
in
adc
jnp
es
push
sbb
sbb
xchg
or
mov
gs
popa
pop
mov
cmp
adc
leave
pop
imul
inc
inc
sub
pusha
add
or
mov
cdq
mov
adc
or
adc
sub
pop
and
or
aad
mov
pop
adc
xchg
mov
push
and
dec
mov
ret
jo
call
and
mov
sbb
mov
mov
inc
ret
mov
inc
ds
cmp
daa
cmp
jnp
jmp
mov
or
inc
jmp
test
inc
jmp
jg
jmp
repnz
jmp
sub
dec
dec
sub
shl
ret
add
(bad)
push
mov
faddp
mov
inc
(bad)
ret
adc
mov
jo
xor
mov
cmp
inc
inc
sub
push
sub
or
(bad)
cmps
or
xchg
adc
adc
rol
push
les
cmp
cmp
adc
add
sahf
mov
sar
push
xor
add
rcl
or
jnp
inc
xor
dec
movs
es
add
inc
or
pop
adc
add
in
dec
(bad)
fnstcw
xchg
xchg
test
jmp
add
adc
add
pop
push
aad
loope
xchg
fist
adc
push
or
jecxz
or
mov
inc
not
xor
adc
nop
retf
jg
imul
mov
and
push
or
inc
mov
or
pop
pop
mov
popf
fsubr
adc
adc
xor
jmp
inc
or
aad
pop
adc
mov
cmp
inc
inc
lock
clc
repnz
ret
cmp
push
pop
push
and
test
xchg
pop
loope
mov
dec
mov
imul
or
int
rcr
scas
jo
sbb
pop
push
cmp
xor
fsubr
push
and
push
shl
cmp
(bad)
mov
clc
imul
xor
sbb
jne
jo
sub
push
fnop
jns
inc
sbb
arpl
cli
daa
adc
dec
sbb
and
cmovae
pop
jmp
clc
adc
arpl
push
dec
cmp
nop
test
clc
add
jnp
push
cmp
cdq
pusha
mov
pushf
or
(bad)
in
mov
add
ficomp
add
mov
sub
push
and
adc
inc
rcr
pop
adc
leave
nop
xchg
out
and
out
retf
xchg
in
mov
ins
add
aas
sub
sub
nop
inc
add
and
cmp
inc
xor
pop
push
jne
dec
jae
mov
fsubr
or
pop
jmp
fadd
fdivr
lods
and
dec
sub
cwde
xor
sub
xor
inc
je
pop
xchg
mov
push
mov
bound
nop
sbb
and
cmp
ss
or
xchg
add
popf
jo
test
or
out
mov
iret
icebp
xor
fdivr
daa
inc
aam
cmp
push
dec
je
jmp
in
xchg
addr16
sbb
jmp
nop
jmp
add
inc
and
xchg
and
lds
std
xchg
jmp
dec
inc
inc
icebp
mov
loope
jb
and
push
inc
or
lahf
adc
aad
sbb
sbb
movs
sbb
out
add
mul
mov
push
rol
or
push
or
or
jno
out
aam
inc
(bad)
cmp
call
xchg
sbb
xchg
jbe
mov
add
sahf
adc
ins
and
cli
and
repnz
cmp
and
popf
push
or
inc
sbb
cmp
rcl
push
cmp
xchg
xchg
ins
inc
jne
sbb
sub
mov
stos
test
mov
iret
test
mov
cmp
je
dec
stos
ret
test
push
add
adc
int
out
fadd
mov
imul
fst
dec
push
test
js
mov
lds
jnp
test
test
push
mov
popa
add
lea
inc
nop
cdq
adc
xor
psubb
scas
sub
xor
clc
xchg
(bad)
std
push
or
sub
adc
call
stos
or
pop
xchg
inc
outs
add
rcl
add
dec
pushf
push
in
es
add
adc
pop
scas
cmps
popf
test
int
mov
mov
fcom
jl
out
or
jbe
sbb
dec
stos
and
pusha
push
icebp
mov
inc
push
je
daa
(bad)
mov
fsub
xlat
(bad)
seto
push
or
cmps
xor
clc
xlat
mov
cmp
inc
jl
jns
add
inc
and
ret
aas
push
adc
aam
inc
sbb
inc
xchg
xlat
cmps
mov
add
cmp
xchg
jge
push
mov
cld
inc
loop
inc
mov
out
mov
rol
mov
adc
xchg
mov
and
push
sub
leave
repz
xchg
xchg
daa
jmp
repz
jo
out
xor
mov
jo
(bad)
mov
pop
sldt
add
je
pop
daa
daa
daa
popf
setl
and
mov
mov
(bad)
or
out
and
les
(bad)
dec
push
mov
ss
xor
push
loopne
retf
loopne
pop
mov
or
mov
in
dec
xor
cmps
cmp
stc
dec
sub
ins
sub
adc
push
push
dec
lea
cmps
adc
je
sbb
ins
mov
xchg
xor
xor
aas
mov
les
add
aaa
pushf
pushf
and
cs
push
movs
sub
sub
xor
pop
outs
mov
retf
js
sbb
lahf
dec
sbb
rcr
xor
push
mov
inc
mov
pop
lods
jne
mov
push
jg
outs
mov
xchg
gs
push
nop
(bad)
sub
pop
enter
sub
je
jns
pop
cmp
cmp
mov
iret
cwde
cmp
push
sbb
mov
sub
mov
call
sub
inc
pop
cdq
pop
push
mov
in
xchg
sbb
and
mov
xchg
fdiv
ja
inc
test
adc
add
and
les
push
pop
mov
mov
rcr
adc
je
aaa
and
sbb
test
fcmovb
sub
mov
xchg
shl
push
imul
sbb
inc
(bad)
mov
cmp
sub
sub
mov
push
or
push
adc
(bad)
mov
push
scas
stc
add
jb
rol
sar
or
sub
repz
xchg
gs
mov
xor
xchg
daa
pop
dec
ss
ret
push
xor
push
mov
jmp
add
sbb
or
dec
mov
or
or
adc
out
cmp
adc
ds
push
pop
push
inc
in
add
cmp
jl
mov
jmp
repz
or
hlt
sbb
sbb
fwait
mov
add
fs
push
popa
sbb
cmp
inc
push
mov
pusha
push
pop
jne
add
and
(bad)
cmp
push
push
(bad)
adc
or
adc
xor
adc
cli
add
sbb
dec
lock
jne
inc
xor
sbb
xor
mov
push
outs
push
push
pop
daa
cs
pop
xor
push
aas
jmp
jb
push
pop
pop
jle
xchg
xchg
retf
(bad)
pop
dec
mov
and
or
movs
pop
lds
and
gs
push
adc
fadd
mov
inc
pop
cmp
sbb
and
ror
fcom
test
ja
pop
dec
push
add
push
xor
xor
div
xchg
xchg
or
adc
or
pop
pop
cmp
mov
cdq
(bad)
fmul
push
push
(bad)
iret
shl
pop
or
sbb
or
xchg
xchg
ja
test
rcr
xchg
push
cdq
cwde
ds
adc
icebp
mov
add
pop
xchg
and
sub
inc
es
xchg
xor
dec
and
ret
inc
or
or
pusha
xchg
imul
xchg
jo
dec
ins
or
pop
hlt
mov
rcl
into
jg
js
sahf
movs
or
fsubr
xor
mov
and
cs
inc
es
dec
(bad)
pop
rol
out
jmp
xchg
arpl
mov
xor
out
sub
sub
mov
push
inc
cmps
in
xchg
push
call
lock
xchg
cmp
xchg
sub
je
cmp
mov
inc
cmps
pop
nop
adc
inc
lds
xchg
xor
xor
retf
sbb
cmp
adc
pusha
add
pushf
in
sbb
fs
inc
pushf
xchg
xor
cs
jo
push
cmp
(bad)
pop
mov
xor
and
pop
inc
cmps
je
adc
cs
cmp
dec
mov
xchg
aaa
xchg
js
push
pop
je
mov
pop
mov
arpl
neg
sub
jge
loop
and
mov
inc
lods
inc
stc
repz
add
mov
loopne
pusha
sbb
adc
pop
inc
push
les
sub
je
or
inc
cmps
add
pop
push
inc
dec
stc
inc
or
mov
or
mov
xor
mov
bound
pop
aas
dec
out
rol
(bad)
or
inc
adc
(bad)
in
inc
jb
scas
sbb
mov
ror
pop
and
js
movs
sub
bound
and
(bad)
sbb
rol
inc
sub
sbb
in
int
dec
pusha
xor
inc
mov
or
sbb
mov
push
xor
sub
adc
pop
cmp
add
jbe
mov
add
outs
fisubr
outs
sar
or
fld
adc
pop
mov
mov
(bad)
repnz
sbb
cmps
call
adc
add
inc
and
sbb
push
adc
sbb
jbe
jecxz
lahf
iret
enter
cmp
enter
add
rol
cli
adc
or
jo
push
push
mov
dec
test
leave
aaa
scas
adc
and
pop
or
inc
cwde
push
loop
les
loope
jnp
cmp
enter
sub
bound
sub
fstp
imul
sub
mov
xor
mov
jg
aam
imul
mov
xor
je
mov
add
loop
loopne
jl
adc
add
dec
cmp
adc
jae
lea
jne
mov
mov
mov
je
cdq
je
cdq
jbe
movs
xchg
cs
cwde
aaa
add
nop
imul
js
add
or
or
cmp
cmp
das
and
mov
add
dec
adc
idiv
popa
and
adc
je
add
sub
int3
lods
sbb
push
and
and
mov
test
add
adc
int
xor
push
push
sbb
(bad)
lea
pop
inc
int
sub
loopne
cmp
cmp
xor
add
ds
push
sbb
sub
xor
jo
mov
out
and
popf
xor
mov
mov
sub
fsincos
scas
ss
inc
cmp
rcr
loope
pop
push
adc
loop
mov
dec
and
xor
inc
add
jb
test
outs
sub
pop
jb
dec
jb
or
xchg
cmp
dec
or
movs
rcr
pop
add
es
adc
sbb
push
in
cwde
pop
add
iret
cmp
inc
adc
imul
xor
pop
rol
push
test
pop
cmp
shr
sbb
and
call
popa
stos
mov
inc
push
iret
js
add
inc
pop
test
dec
inc
push
dec
sbb
adc
and
pop
or
pushf
cmp
jne
add
cmp
inc
add
or
inc
push
(bad)
cmp
add
inc
jne
sbb
imul
jne
push
outs
cmp
je
xor
sbb
inc
xchg
outs
cmp
push
pop
and
mov
popf
sub
adc
std
add
aas
sub
push
mov
mov
inc
mov
sbb
or
and
add
je
jl
(bad)
push
mov
movs
jnp
xchg
cwde
sar
inc
push
pop
imul
sbb
outs
push
mov
push
(bad)
int3
inc
mov
aaa
movsx
adc
adc
lds
shl
cli
test
cmp
jno
xchg
adc
movs
sub
lock
pushf
(bad)
les
js
repz
test
mov
dec
jno
push
test
push
add
sub
pop
shr
stc
enter
jne
fsub
js
gs
xchg
or
out
mov
gs
imul
pop
dec
cmp
popf
add
sbb
push
sbb
lock
sub
sub
xor
nop
jp
es
or
xchg
out
mov
pop
and
movs
scas
jo
adc
mov
out
cmp
xchg
retf
add
ins
aam
leave
xchg
jo
inc
add
fdiv
scas
je
add
jne
adc
add
fimul
mov
cdq
mov
mov
je
je
ins
cmp
or
inc
ins
test
push
inc
ins
adc
jo
out
xor
nop
lahf
mov
std
pop
call
sbb
sbb
daa
adc
xor
push
xor
mov
and
mov
jnp
push
inc
out
xchg
or
mov
xchg
mov
inc
mov
call
xchg
mov
inc
dec
sbb
add
push
pop
stos
xor
or
add
adc
iret
(bad)
and
dec
(bad)
and
scas
aaa
movs
mov
push
cmp
pop
not
addr16
mov
push
pop
pusha
and
call
xchg
das
sbb
xor
in
fs
adc
and
cdq
dec
ror
or
mov
sub
xor
push
xor
adc
nop
sbb
mov
lds
ret
enter
xlat
add
add
and
mov
cmp
ret
or
ret
test
mov
mov
add
add
ss
sub
mov
shr
xor
(bad)
pop
add
inc
cmps
add
add
lods
jmp
or
push
or
div
mul
clc
fsubr
dec
pop
xor
xor
aaa
or
and
aaa
jmp
gs
sbb
jno
sub
idiv
idiv
stc
test
push
ret
retf
call
mov
daa
dec
(bad)
jbe
push
fisttp
aad
pop
sbb
push
(bad)
call
daa
outs
ss
xchg
jmp
cmp
rcr
repnz
ja
in
mov
inc
jo
jae
inc
inc
xor
or
xor
or
mov
in
(bad)
xchg
dec
enter
sbb
sbb
mov
or
or
adc
sahf
scas
popa
add
mov
fwait
loope
repnz
movs
inc
nop
adc
dec
and
movs
rol
mov
in
mov
adc
mov
add
pop
push
out
adc
ins
sub
xlat
adc
in
dec
xchg
dec
(bad)
ficom
sub
cmps
popa
jo
dec
sub
inc
sbb
ror
add
mov
mov
pop
add
sbb
jne
sub
inc
pop
or
xor
les
or
push
cmp
pop
sbb
jb
and
push
pop
or
mov
and
jmp
dec
cmp
cs
push
cmp
sbb
fisttp
push
pop
inc
(bad)
ds
push
movs
(bad)
(bad)
addr16
xchg
inc
mov
js
cmp
pop
push
inc
add
mov
mov
dec
mov
or
(bad)
xor
frstor
out
imul
pusha
push
jne
gs
mov
dec
cmp
push
jg
adc
push
add
jmp
ret
cdq
cmps
adc
xchg
outs
bound
and
pusha
fcomp
pop
xchg
push
sbb
shl
movs
push
and
pop
aas
or
push
or
mov
xchg
mov
scas
mov
push
sbb
(bad)
add
and
aaa
mov
or
sub
pop
idiv
pop
rcl
sub
fisub
hlt
fwait
dec
add
pop
fbstp
or
add
fldcw
jo
dec
dec
rcr
out
cmp
call
fstp
xor
loop
pop
dec
call
add
or
movs
xchg
mov
iret
sub
ret
sub
imul
cmps
(bad)
call
cmp
mov
ret
fidivr
inc
mov
xchg
sbb
or
sbb
jns
mov
push
aam
in
add
mov
pop
retf
and
clc
cmp
jo
and
(bad)
mov
xor
loopne
and
stos
add
inc
lahf
fwait
add
scas
jbe
inc
sbb
xor
test
push
push
adc
and
cdq
or
mov
mov
xor
js
cmp
push
dec
pop
jecxz
push
adc
push
pop
lock
test
call
sbb
mov
xor
pop
mov
inc
adc
lea
pop
fisubr
push
inc
dec
mov
dec
pop
js
xor
push
inc
adc
mov
push
xor
cmc
inc
je
sub
or
fwait
add
jb
loop
mov
inc
or
jns
jb
jne
dec
lds
xchg
sub
adc
or
popf
add
push
in
xchg
inc
push
cdq
out
fisttp
add
sub
push
inc
xchg
push
stos
jle
adc
push
nop
pop
das
push
lock
mov
sar
loopne
test
add
xchg
sbb
push
nop
daa
add
nop
and
mov
(bad)
sbb
jns
push
cmp
push
mov
adc
push
xchg
cmp
jne
sbb
sar
inc
push
xchg
out
inc
add
das
push
in
int3
imul
fwait
pop
add
or
push
inc
not
out
sub
xchg
mov
nop
pop
jle
das
xchg
inc
cmp
and
xchg
dec
cmp
adc
test
dec
mov
fmul
ror
retf
aas
int
mov
cmp
cwde
inc
mov
loopne
xor
add
mov
add
cmp
and
add
iret
sahf
pop
dec
or
jmp
adc
push
sbb
imul
nop
pop
inc
jmp
sbb
inc
inc
mov
pop
add
add
into
adc
inc
je
sbb
je
xor
adc
and
je
adc
test
stos
mov
pop
int3
mov
ja
daa
lods
jnp
sbb
mov
and
cmp
or
push
pop
add
push
cwde
data16
sub
(bad)
(bad)
add
sbb
or
fnsave
push
jb
pop
cmp
fadd
mov
ins
mov
jmp
push
inc
jbe
xor
push
rcl
lds
jmp
clc
xor
push
jp
or
adc
cld
cmp
dec
mov
or
sbb
pop
repz
xchg
sbb
xchg
sbb
inc
dec
fild
(bad)
mov
lds
fwait
add
jb
adc
dec
dec
scas
pop
jne
test
les
inc
cmps
je
jp
mov
(bad)
outs
add
jge
push
sbb
rol
pop
cmp
daa
in
cmp
and
push
add
jo
push
ins
loopne
jae
xor
dec
loopne
dec
scas
mov
test
sbb
inc
sti
or
adc
sbb
syscall
popa
cwde
ins
jecxz
or
aam
addr16
fild
lock
inc
bound
push
cwde
shl
mov
push
add
jmp
rcl
xchg
mov
pusha
xchg
leave
mov
add
mov
sbb
sbb
push
popw
xor
mov
xchg
dec
sub
inc
cmps
outs
sbb
mov
or
xor
xchg
sti
sbb
sub
sahf
lahf
mov
scas
mov
pushf
or
enter
inc
jns
and
jne
inc
les
bound
lock
inc
je
(bad)
add
or
cdq
adc
ss
mov
mov
mov
imul
pop
call
pop
push
jo
inc
or
test
xlat
shl
repnz
jl
push
or
add
ins
repz
or
mov
out
jns
js
pop
nop
jne
inc
inc
das
adc
(bad)
jns
mul
add
enter
and
sub
adc
aaa
add
pusha
loop
test
ins
mov
arpl
push
mov
xor
push
xchg
aad
push
add
hlt
ins
dec
data16
dec
in
aas
imul
ins
dec
inc
sub
xor
cs
pop
icebp
mov
aas
rcr
add
fst
push
add
xor
imul
mov
add
cs
xchg
xor
enter
ins
push
(bad)
inc
mov
push
xor
dec
daa
add
and
or
and
adc
mov
movs
inc
pop
leave
rcr
add
xchg
lods
dec
fistp
cmp
add
enter
xchg
sub
add
fimul
pop
adc
add
scas
cmps
outs
ret
or
push
sbb
pop
sub
sbb
imul
push
inc
movs
ret
jle
inc
sub
test
xor
xor
je
fsubr
dec
mov
adc
mov
xchg
dec
xchg
add
in
jle
ss
call
and
rol
in
adc
stos
fnstenv
dec
add
int
add
inc
shl
and
aad
call
cmps
add
mov
bound
inc
sbb
arpl
cmp
inc
push
cmp
rol
out
adc
xchg
and
daa
ins
jo
sub
push
cld
int3
dec
sbb
cmps
hlt
aas
imul
movs
lahf
mov
test
mov
sbb
dec
ror
pop
jmp
mov
pop
scas
and
mov
add
lea
cmps
fs
mov
push
inc
push
inc
inc
dec
push
dec
inc
push
inc
pop
adc
or
stos
jp
jg
sbb
jnp
add
lds
jae
push
test
shl
ficom
push
inc
xor
inc
dec
sti
push
movd
addr16
jns
xor
pusha
or
and
dec
stc
in
sub
push
xchg
ja
push
adc
movs
xor
inc
add
xor
sub
push
mov
add
pop
add
dec
aas
adc
or
mov
add
mov
loopne
push
inc
add
push
sub
fcomip
lea
pusha
push
ins
inc
push
outs
jne
leave
and
xchg
mov
(bad)
or
add
adc
mov
inc
or
pusha
add
mov
or
push
mov
inc
cdq
add
xchg
push
push
dec
ds
or
popa
mov
sbb
call
sbb
xor
or
and
shr
cmp
lods
or
cwde
mov
adc
ja
imul
outs
repnz
sbb
dec
jne
jo
out
or
stos
or
outs
ins
gs
push
pop
or
xor
xchg
rep
jo
jno
pop
enter
push
jb
jl
pop
je
mov
mov
push
mov
or
retf
or
push
in
push
fiadd
sbb
lock
test
mov
imul
xchg
sub
sbb
sbb
lahf
mov
inc
ins
loopne
shl
std
rol
scas
jmp
and
jecxz
jg
movs
dec
test
test
out
ss
arpl
ret
sbb
sbb
mov
pop
sub
sbb
and
js
add
sub
sub
mov
dec
outs
mov
dec
add
add
pop
mov
jnp
sub
retf
or
aam
loopne
or
inc
fadd
pushf
or
outs
test
jae
adc
and
popf
out
ins
xor
adc
sbb
clc
movq
add
add
push
dec
je
and
pusha
adc
ss
push
add
add
xor
loopne
je
add
fidivr
jmp
int
jns
pushf
movs
dec
xchg
xchg
call
sbb
push
pop
fwait
mov
add
sub
and
add
jne
js
adc
rcl
les
mov
ins
dec
jno
push
and
add
or
or
lods
sbb
adc
test
jnp
cmp
pop
cmp
sbb
and
test
ret
pop
sbb
lods
in
add
cmp
out
(bad)
hlt
jbe
push
not
or
in
add
inc
mov
sahf
sbb
leave
add
push
add
xchg
jmp
push
xchg
out
push
jle
or
sub
mov
sub
imul
push
or
mov
mov
dec
ror
fld
(bad)
clc
popf
push
test
ret
fwait
inc
xchg
xchg
mov
adc
pop
or
and
outs
pop
out
sahf
cs
rcr
jae
popa
js
jo
sbb
dec
loopne
sbb
(bad)
dec
add
sbb
cwde
mov
inc
nop
or
sbb
push
push
test
and
stos
enter
push
pop
add
mov
test
enter
or
dec
popf
push
jb
ins
xchg
mov
dec
mov
add
pushf
pop
push
imul
inc
call
xor
dec
lock
add
cmp
bnd
jecxz
clc
clc
sub
push
add
inc
sub
adc
sub
xchg
sub
pop
push
add
add
das
and
mov
mov
mov
adc
add
xor
add
cmp
sbb
mov
ficom
in
adc
in
sub
fstp
adc
aaa
sti
add
jl
pop
jge
add
jne
fs
or
push
jl
fs
enter
fs
push
jp
jb
fs
fs
bound
fs
stc
sbb
ds
mov
fs
and
gs
in
sbb
mov
sub
jnp
sbb
fisttp
push
in
pop
or
movs
sub
xchg
xlat
aaa
push
xchg
cmp
xchg
xchg
push
pop
adc
xor
outs
jbe
mov
test
ret
lea
or
dec
push
mov
or
sbb
outs
(bad)
out
xchg
xchg
pop
jecxz
sbb
add
jg
jg
xchg
mov
sahf
jg
pop
mov
sub
test
in
cmps
pushf
jg
xchg
mov
and
or
dec
test
and
mov
punpcklbw
dec
fs
arpl
sbb
or
mov
dec
dec
fiadd
push
mov
nop
push
ins
enter
lds
mov
add
in
cmp
in
cmp
add
mov
pusha
nop
ror
cmps
pop
and
aaa
push
cmp
es
xor
aaa
aas
push
push
sbb
mov
enter
aaa
pop
cmp
das
add
push
jg
dec
sbb
pushf
popa
sbb
ret
adc
push
les
test
fisttp
sbb
ins
adc
xchg
sub
icebp
or
jo
mov
push
imul
ficomp
add
push
pushf
sti
mov
cs
mov
mov
push
(bad)
je
in
sbb
fst
pop
or
fst
imul
or
xor
bound
ds
adc
dec
adc
pop
or
adc
clc
adc
int3
and
sub
sub
and
pop
adc
fisttp
cdq
movs
in
pusha
ins
mov
jmp
and
adc
push
or
cmp
call
jle
mov
int3
sub
sbb
pop
fcom
push
leave
sbb
mov
push
push
(bad)
jnp
mov
push
jmp
xlat
mov
sub
ror
clc
push
push
push
jne
dec
aam
sbb
adc
push
rol
xor
cmp
mov
xor
out
add
push
xor
mov
pop
and
or
dec
inc
sbb
movs
and
in
dec
in
repnz
imul
mov
push
pop
fcomp
xor
or
adc
int3
add
push
or
dec
jae
mov
rcl
cwde
dec
sbb
hlt
jne
xchg
cmps
and
in
imul
rol
jmp
dec
add
mov
jno
inc
push
pop
int3
mov
lea
out
rol
imul
and
cmp
jnp
jnp
push
jmp
push
mov
sub
cmp
bound
sbb
add
lock
cmp
loope
mov
jbe
rol
jno
and
or
arpl
shl
and
pusha
mov
movs
dec
inc
add
sub
icebp
cmps
xchg
sub
cmps
fldcw
rol
std
and
jl
xchg
test
dec
clc
pop
cmp
add
scas
jp
mov
sbb
add
iret
adc
ret
dec
dec
fild
mov
or
ret
and
or
sub
iret
lods
mov
xchg
or
pop
frstor
or
mov
jo
mov
pop
loopne
sbb
pop
das
fmul
lahf
push
mov
mov
or
xchg
out
xchg
mov
fld
jae
mov
sbb
loop
add
jbe
mov
dec
push
xor
pop
test
and
sub
add
mov
aas
push
stc
enter
add
into
sub
add
jbe
or
xchg
add
and
inc
nop
rcl
(bad)
test
sub
movs
mov
stos
adc
push
push
inc
mov
shl
mov
mov
loopne
in
lea
stos
loopne
inc
mov
pushf
or
xchg
inc
pop
adc
push
xchg
mov
das
push
dec
cmps
outs
sub
aaa
add
test
xchg
lea
mov
test
or
les
mov
iret
jnp
mov
mov
arpl
jne
aad
mov
mov
mov
pop
inc
cmp
jne
xchg
xor
mov
xchg
cwde
mov
and
mov
mov
test
lods
je
sub
loope
xchg
and
or
cmp
cmp
je
cmps
repnz
mov
call
jmp
push
inc
repnz
rcl
test
inc
add
retf
mov
add
or
loopne
lods
jbe
call
ss
scas
dec
sbb
fisubr
sub
dec
push
test
dec
inc
dec
mov
enter
mov
sub
fidivr
and
call
ja
fcom
and
movs
mov
mov
sbb
call
inc
dec
add
jmp
sub
test
jae
mov
jae
popa
push
gs
and
sbb
pop
sbb
imul
push
cmp
add
inc
jle
shr
outs
mov
daa
sbb
test
or
clc
adc
mov
mov
inc
pop
stc
dec
push
int3
mov
push
xchg
sub
stc
jl
xchg
es
add
add
fmul
jo
cmp
and
sub
out
out
lock
add
loop
into
(bad)
pop
xchg
adc
jne
cli
fisttp
es
pop
push
sub
or
add
cmp
jp
xchg
sbb
push
icebp
inc
add
fadd
jge
pop
xor
ret
retf
aaa
push
imul
jmp
push
sub
aad
into
adc
dec
sti
push
add
clc
daa
nop
lock
cmp
aad
fs
add
adc
fldenv
adc
es
pop
jbe
lock
adc
fcmovb
dec
cmp
jne
add
pushf
add
push
mov
rcl
rcl
push
lock
add
ret
retf
inc
es
dec
inc
xor
mov
rcr
sar
retf
adc
fnstsw
mov
mov
hlt
int3
sbb
mov
pop
xor
shl
pop
call
xchg
fldcw
xor
and
cmp
outs
add
or
add
lods
cli
call
js
xor
sbb
lahf
das
jnp
movs
cmp
jge
lods
scas
aas
fisubr
sbb
jbe
addr16
jmp
jne
xchg
pop
add
jmp
adc
and
sti
test
jecxz
inc
mov
fwait
add
je
lea
fld
add
sti
push
inc
push
jmp
push
xchg
enter
or
fstp
inc
pop
pusha
cmps
push
ja
adc
enter
add
adc
add
dec
nop
popa
dec
pop
xor
nop
out
jbe
adc
adc
loopne
sar
and
or
adc
mov
stos
dec
int3
push
js
stos
adc
ret
push
push
or
mov
sbb
enter
adc
inc
push
inc
or
add
inc
mov
dec
cmp
jp
mov
movs
or
cmp
loopne
adc
mov
ret
push
pop
xchg
mov
sbb
adc
add
aad
in
dec
retf
dec
loop
adc
fld
or
or
inc
push
add
dec
mov
test
and
pushf
xor
inc
call
adc
imul
push
aas
push
mov
jle
and
ror
(bad)
xor
jno
(bad)
jae
add
push
pop
add
call
cmp
xor
xchg
adc
push
ins
nop
adc
dec
aas
add
popa
cmp
lods
movs
popa
sbb
shl
enter
aaa
pop
iret
lds
mov
or
mov
jmp
shl
popa
sbb
add
js
pushf
pop
stos
sub
xchg
je
pop
clc
aam
adc
jne
xor
inc
pop
inc
or
jge
jae
xchg
shr
bound
jmp
or
nop
(bad)
js
(bad)
and
jle
cmp
inc
xor
gs
cmp
and
leave
xchg
fs
into
lea
sti
xor
shl
test
add
jmp
inc
sub
jge
xchg
dec
ret
adc
push
shl
sbb
sbb
lods
loope
leave
mov
aam
mov
imul
ins
leave
jae
sbb
mov
iret
jl
xchg
test
jne
in
mov
and
fisttp
add
dec
cli
xor
movs
pop
es
popa
mov
add
imul
adc
shl
gs
sub
(bad)
(bad)
lock
not
sub
(bad)
imul
arpl
pushf
jno
cmp
idiv
mov
dec
int
adc
fild
stc
lock
(bad)
mov
ja
std
mov
(bad)
out
lea
outs
push
stos
xchg
sbb
cmp
xor
inc
push
push
mov
sbb
je
or
fcmovbe
dec
sar
sub
scas
ror
fsub
cmp
xlat
and
test
mov
push
imul
scas
add
jne
sub
jge
sar
enter
aad
rcl
and
xor
pushf
loop
bound
pusha
xchg
xchg
xor
mov
ins
dec
cmp
push
mov
adc
xchg
push
jl
xchg
ins
jg
dec
mov
inc
xchg
popa
mov
cmp
sbb
or
xchg
dec
icebp
inc
cmps
pop
pop
cli
cwde
adc
sahf
mov
dec
cmp
pop
mov
jmp
add
adc
and
pop
lods
pop
in
mov
div
xor
fld
or
jp
adc
push
mov
mov
mov
cmp
popf
ds
cmp
pcmpgtd
and
pop
pusha
movs
mov
inc
or
xchg
shr
pop
fiadd
shl
xor
not
pop
mov
add
or
add
aam
push
pop
sub
mov
sub
es
js
xor
(bad)
call
loop
adc
sub
sub
adc
mov
mov
jno
int
out
or
inc
std
inc
jne
add
cmp
cmp
mov
lock
stos
dec
repz
dec
xor
clc
fcom
push
mov
or
iret
add
test
nop
or
arpl
dec
sbb
imul
adc
mov
sbb
cld
xor
lahf
mov
add
clc
test
out
or
mov
and
not
rol
inc
dec
ss
hlt
ds
xchg
or
adc
jne
mov
iret
fwait
jmp
and
in
sbb
adc
dec
outs
push
iret
sub
jo
scas
inc
and
mov
or
(bad)
in
jo
push
retf
es
pop
fldenv
cmps
push
ret
aad
dec
cdq
or
fst
mov
sbb
sbb
(bad)
mov
lds
push
pop
popa
push
inc
or
in
ret
jae
and
add
enter
inc
dec
dec
fsubr
and
xchg
sub
out
lods
pop
xchg
iret
enter
aam
dec
add
(bad)
movs
pusha
cli
(bad)
sbb
jle
jmp
movs
pushf
push
outs
cmp
gs
inc
mov
and
add
push
dec
sbb
cld
xor
outs
ins
mov
sbb
dec
dec
inc
nop
mov
rol
popf
inc
sbb
sbb
mov
inc
inc
push
unpcklps
fisub
add
xchg
dec
inc
push
stc
std
xor
sbb
mov
dec
loope
scas
sbb
adc
sbb
xor
push
add
mov
lea
pop
mov
sub
pop
add
push
and
jg
mov
dec
rol
push
pop
xor
mov
mov
jle
inc
add
push
mov
lea
sbb
inc
xor
js
push
jne
mov
jae
mov
push
ins
mov
add
add
xor
scas
add
push
xchg
shl
mov
aas
mov
and
or
mov
outs
adc
mov
add
cmp
pop
and
mov
jnp
dec
movs
repz
cmovae
(bad)
xchg
xchg
repnz
mov
adc
sbb
push
xor
sub
mov
fst
cmc
fcom
push
je
cmovp
push
ja
mov
dec
xor
lahf
dec
mov
call
aaa
ins
call
push
aaa
clc
(bad)
and
not
and
or
xchg
push
and
and
or
pop
and
pop
xor
xor
cmp
or
repnz
in
add
xchg
or
mov
addr16
(bad)
cmp
add
mov
add
xchg
or
mov
jo
cmp
mov
inc
addr16
ja
fucomip
ins
stos
int
or
(bad)
fdivr
xor
jecxz
mov
jg
(bad)
cmp
jae
mov
push
xchg
sub
stc
out
add
pop
pop
xor
sbb
add
outs
jmp
xor
fwait
mov
mov
ins
sti
push
pop
pop
fstp
retf
jbe
call
jmp
in
or
adc
adc
dec
gs
fwait
sbb
push
ds
sub
pop
ja
lea
cdq
sub
stos
inc
jl
and
ror
pop
xor
or
cmps
push
invd
mov
in
add
mov
sbb
cs
retf
adc
and
or
push
jb
sub
push
pop
int
lds
test
gs
add
sub
sub
ror
mov
add
add
xor
sbb
enter
add
sbb
enter
xchg
add
sbb
call
and
ja
sub
in
(bad)
sbb
xor
cmp
inc
push
push
nop
add
inc
add
inc
push
sub
nop
add
dec
sbb
sub
pop
mov
cmps
cwde
div
sub
popa
js
sub
enter
inc
add
or
or
add
and
enter
push
sub
cmp
pop
adc
adc
test
pop
or
add
jbe
adc
pop
pop
push
xor
dec
daa
push
sbb
pop
mov
loopne
int3
aas
lock
cmc
add
cmp
add
inc
hlt
shr
test
mov
xchg
lea
retf
xor
sbb
lods
jmp
mov
mov
and
aas
ins
or
clc
or
sub
cmps
xchg
mov
test
ret
sbb
xor
pushf
dec
inc
(bad)
ins
jo
mov
and
push
adc
mov
xor
mov
jae
out
out
cmp
add
(bad)
cmp
push
(bad)
jmp
mov
outs
les
mov
or
je
adc
pop
and
in
adc
mov
adc
and
out
arpl
test
mov
jae
inc
pop
mov
fcom
nop
xchg
fsub
dec
jae
add
ja
fidivr
push
dec
fcomp
ror
push
arpl
xchg
adc
adc
jmp
rol
and
pop
outs
xchg
jl
jb
rcr
fmul
pop
push
lds
cmp
xchg
or
push
mov
jg
ret
add
xchg
xchg
adc
jo
and
and
push
push
mov
xor
jl
inc
repnz
sub
xchg
scas
dec
leave
sub
inc
xor
std
xchg
mov
cwde
sub
repnz
test
dec
leave
(bad)
dec
xlat
pop
mov
xchg
mov
nop
imul
inc
repnz
jno
std
push
mov
cmps
jae
scas
dec
pop
and
mov
and
push
int3
xor
push
inc
mov
ror
push
push
data16
es
sbb
push
leave
sub
xchg
int3
xor
das
(bad)
jb
scas
sbb
push
adc
add
retf
and
sti
shl
sbb
sub
out
loope
push
mov
pop
aaa
ret
sub
repnz
in
adc
inc
push
sub
push
add
sbb
out
cld
cmp
add
aas
cmp
cmp
popa
nop
inc
test
test
enter
div
push
xchg
add
push
sub
xor
pop
push
cdq
fisttp
inc
jmp
sub
iret
fimul
cmps
in
cmp
mov
mov
mov
sub
cli
daa
mov
push
cmps
in
out
aam
add
xchg
ja
inc
cmp
jns
dec
pop
in
(bad)
pop
clc
jl
pop
scas
in
sub
mov
push
and
hlt
aad
cmp
push
cmp
punpckhbw
sbb
stos
aad
xor
scas
pushf
pop
mov
cmp
ret
pop
pop
gs
mov
int3
or
sub
retf
hlt
out
jmp
rcr
scas
pop
leave
test
outs
retf
jb
loopne
sub
xor
sub
adc
add
dec
jb
scas
pop
sub
jle
test
repnz
sub
enter
xchg
rol
xchg
xchg
scas
add
loop
mov
jmp
xor
dec
clc
and
dec
inc
inc
jecxz
cmp
jmp
mov
fidivr
aam
cmp
mov
sub
add
gs
mov
push
sahf
test
mov
sub
add
outs
iret
push
dec
cwde
sub
add
jmp
dec
dec
loop
mov
dec
mov
leave
fwait
xchg
adc
js
(bad)
leave
xchg
dec
mov
push
add
cmp
loop
dec
je
ret
test
dec
dec
cld
imul
jb
and
sub
jne
jmp
or
imul
xchg
aaa
push
sar
sub
mov
lods
in
jae
mov
mov
inc
sbb
not
fadd
sbb
push
pop
ror
pop
iret
dec
fwait
adc
add
inc
dec
movs
cmp
dec
retf
cld
fcom
ja
xchg
and
lahf
pusha
ror
pop
enter
sub
jmp
aam
add
push
dec
pop
out
xchg
bound
ss
mov
xor
or
cmp
xor
xor
xor
push
cmp
xor
or
push
ja
mov
imul
imul
fsub
add
shl
and
xchg
xchg
jl
leave
fsubr
mov
cmp
add
movs
add
and
push
xchg
aas
sbb
add
mov
mov
nop
enter
loopne
xchg
xor
mov
nop
cmp
mov
pop
xchg
rol
sbb
lods
je
sbb
adc
push
adc
pop
push
push
push
pop
adc
push
xchg
or
xchg
mov
mov
or
neg
xchg
push
pop
and
xor
dec
pop
push
jbe
sbb
fwait
pop
mov
enter
sbb
in
mov
sub
fldenv
lahf
inc
mov
loopne
add
iret
xor
leave
inc
jnp
xor
xor
cmp
xchg
sbb
xor
xor
(bad)
out
push
xor
xor
pop
int
lahf
mov
inc
cmp
pushf
or
or
inc
aaa
add
rol
push
push
les
adc
mov
lods
mov
inc
ds
popf
add
div
retf
xor
es
mov
mov
jne
loope
(bad)
push
retf
sub
xor
loope
(bad)
retf
push
mov
inc
add
mov
and
adc
cmp
push
mov
ins
sbb
push
or
dec
addr16
mov
and
lea
dec
sub
jo
rcr
add
inc
aas
xchg
test
xchg
add
and
jo
add
out
xchg
xlat
fdivr
or
inc
inc
push
jg
xor
or
add
je
fnstcw
mov
add
xor
xor
inc
or
es
xor
xor
xor
xor
rol
cmp
add
out
push
cmps
test
test
scas
imul
mov
add
leave
out
scas
xchg
add
ins
dec
xchg
jbe
or
test
lods
and
mov
(bad)
adc
enter
and
push
inc
popf
push
sar
jbe
add
ret
fsubp
out
push
xchg
iret
or
aad
push
jne
rcl
iret
sbb
mov
fdivr
adc
pop
xchg
jno
sbb
rol
cdq
repz
mov
cmp
es
sbb
movs
dec
shl
push
aad
or
or
outs
sbb
clc
pushf
loopne
es
out
loope
cdq
xchg
mov
call
sbb
or
popa
js
and
add
daa
fisttp
inc
bswap
into
iret
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
daa
daa
daa
mov
and
mov
push
aaa
mov
shl
fisub
mov
sub
jns
pop
ins
(bad)
xor
mov
(bad)
mov
sub
das
jp
adc
push
xor
mov
push
inc
dec
adc
adc
mov
pusha
js
dec
cld
or
dec
push
arpl
mov
cs
test
call
xchg
movs
or
shl
mov
dec
adc
repz
(bad)
adc
add
loope
add
in
iret
repz
mov
sub
xor
sub
adc
pop
mov
add
push
je
data16
idiv
push
add
mov
jl
push
sbb
adc
push
push
inc
repnz
push
ja
sti
dec
inc
sbb
and
inc
dec
jmp
mov
inc
cmp
(bad)
aaa
xor
daa
jl
loopne
call
pop
push
add
cmps
pop
movs
jecxz
(bad)
in
call
jb
jne
ret
pop
imul
ins
scas
int3
arpl
out
mov
sbb
and
in
push
jmp
test
lock
nop
arpl
pusha
cmp
inc
push
out
call
popa
(bad)
or
in
arpl
sbb
daa
out
test
sbb
mov
cmp
sbb
daa
out
jmp
pop
xor
and
sub
in
movs
jecxz
cdq
xchg
nop
dec
sub
xor
cdq
push
and
inc
addr16
adc
xchg
mov
adc
mov
add
stc
xor
idiv
mov
out
sub
cmps
aaa
inc
dec
mov
cmp
addr16
test
cmp
lods
mov
retf
repz
repz
jmp
sahf
out
mov
mov
and
xor
push
iret
repz
addr16
add
add
sub
sub
fcomip
es
sbb
(bad)
imul
or
jmp
pop
mov
and
scas
cmc
bound
aaa
std
add
fdiv
or
aam
push
sub
push
sti
fnstsw
adc
add
sar
dec
sbb
dec
adc
test
pusha
loop
xchg
icebp
mov
mov
pushf
inc
push
push
pop
cs
mov
daa
mov
test
or
push
test
ret
mov
mov
cdq
xor
adc
add
jge
adc
mov
mov
add
adc
push
out
adc
bnd
call
pop
rol
test
pop
jb
shl
stc
fnstsw
jo
add
js
xchg
jl
scas
dec
sbb
lds
or
pushf
bound
pusha
sbb
cmp
fsub
or
cmp
and
rol
push
xchg
test
cmps
stos
lahf
pop
fwait
add
push
add
loopne
sbb
mov
ror
in
push
movs
ja
repz
hlt
and
fadd
je
mov
nop
sbb
inc
and
outs
icebp
mov
push
cmp
out
jecxz
test
loope
adc
movs
imul
inc
ret
icebp
imul
and
jns
xchg
cld
add
es
sbb
adc
inc
ret
adc
sub
and
pop
in
pop
test
add
or
bound
pop
enter
es
pop
mov
jb
ret
add
push
xchg
(bad)
sahf
cmp
das
fdivr
adc
sbb
mov
push
cmp
and
sbb
mov
sub
out
fcom
fcomp
inc
push
sbb
fadd
sbb
fcomp
fcomp
fs
inc
fcomp
fsub
push
fcomp
fcom
fcomp
xor
xchg
fsub
lahf
xlat
cmp
mul
inc
les
repz
push
pop
imul
xchg
cmp
scas
mov
call
or
adc
icebp
ret
sti
add
out
sbb
sub
imul
aam
xchg
dec
(bad)
int3
add
mov
sahf
xchg
dec
dec
xor
mov
adc
pop
mov
xor
cmp
or
pop
push
add
ffree
in
xchg
clc
std
fs
adc
pop
mov
jns
ins
add
(bad)
out
push
inc
sahf
out
sahf
adc
and
sahf
out
dec
push
popa
imul
sahf
out
mov
jns
mov
(bad)
jecxz
iret
sar
fucomip
repz
(bad)
xchg
mov
or
adc
dec
ss
inc
add
mov
sbb
push
dec
ds
stc
pop
bound
lods
std
jb
pop
inc
mov
pop
and
enter
add
or
(bad)
and
push
repnz
popa
adc
sbb
push
in
enter
inc
add
add
and
xor
in
and
lahf
sub
cmp
ins
ja
xchg
int3
daa
add
and
nop
(bad)
and
jl
(bad)
std
retf
push
adc
retf
repz
sub
pop
cmp
repz
jae
xchg
fwait
movs
scas
mov
iret
int
loope
cmc
jns
out
call
jns
out
mov
leave
rcr
jmp
icebp
sti
add
leave
or
dec
pop
cmp
out
int3
(bad)
retf
pop
int3
cs
leave
dec
ja
int3
cld
(bad)
lods
cmp
enter
mov
and
int3
jge
int3
int3
add
push
or
(bad)
aam
adc
or
aam
or
enter
aam
mov
out
sbb
push
pop
aam
aam
fs
inc
aam
aam
nop
inc
push
aam
aam
inc
push
sbb
aam
inc
push
sbb
aam
sbb
aam
aam
xchg
xchg
inc
aam
arpl
push
cmp
test
scas
into
push
or
int
daa
sahf
out
sahf
xor
inc
dec
pop
arpl
out
ins
ja
mov
lahf
test
out
sahf
rcr
in
ret
int3
int
iret
repz
loope
cmc
call
xor
test
out
fnstcw
into
sub
and
movs
into
js
and
cmp
and
es
adc
push
and
(bad)
fs
adc
mov
pop
pop
popf
ror
push
mov
iret
out
sahf
cmps
ret
int
loope
iret
sar
dec
rcl
sbb
cmp
cmp
pop
repz
repz
or
jge
dec
hlt
jns
xchg
fwait
movs
scas
iret
aas
call
mov
(bad)
outs
fwait
fs
rcr
pop
cs
(bad)
xor
adc
ud0
outs
ins
mov
and
sub
rol
rcl
ror
enter
shl
enter
rcl
enter
rcl
shl
or
rcl
or
rcl
rcl
or
enter
shl
enter
rcl
enter
rcl
rol
rcl
shl
leave
and
dec
rcr
out
call
test
cdq
mov
sahf
out
retf
aad
jmp
out
pop
rcl
sbb
das
cmp
shl
sahf
out
sahf
sub
jns
adc
shl
ins
rcl
in
je
clc
shl
aam
(bad)
cmp
in
enter
ret
adc
dec
xchg
sbb
sbb
(bad)
jg
mov
adc
je
cmp
stos
call
or
inc
lods
test
pop
aad
push
or
out
adc
sbb
jns
out
dec
pop
arpl
out
sahf
ja
mov
out
mov
(bad)
rcr
repz
out
int
xlat
loope
das
mov
daa
jmp
sub
xlat
mov
add
je
and
push
xlat
pop
cmp
das
add
sub
sbb
fidiv
xor
cmp
mov
ins
dec
or
add
pop
sub
add
jo
pop
pop
xor
inc
mov
test
test
fldcw
movaps
mov
loopne
push
rcl
fcomp
iret
jmp
fmul
iret
repz
sbb
sub
iret
repz
pop
imul
xchg
test
iret
mov
xlat
xlat
nop
adc
inc
aas
jmp
fadd
scas
loopne
inc
fnstcw
inc
pop
pop
push
cld
fchs
(bad)
fldln2
add
je
fst
inc
mov
pop
jns
pop
ficom
inc
(bad)
cwde
sbb
retf
(bad)
jmp
inc
push
adc
adc
cmp
pop
(bad)
push
jae
fiadd
cmp
mov
aad
iret
repz
jmp
jns
out
adc
and
sahf
out
dec
push
pop
fisub
or
in
sbb
leave
out
pushf
jo
hlt
fisttp
pop
cs
jbe
inc
mov
loope
mov
div
jns
pop
and
in
rcr
cmp
jne
int3
add
mov
jp
leave
fld
sahf
out
fsubr
stc
add
or
pop
and
xor
repz
pop
addr16
repz
repz
fs
mov
fnsave
fwait
iret
and
int3
ficom
nop
cld
jno
in
pop
cs
fiadd
adc
mov
jp
in
fdiv
fadd
mov
and
push
add
sub
jbe
cmp
out
aas
inc
fist
gs
repz
outs
jns
lea
cmp
mov
leave
sar
cmp
repz
icebp
sti
add
cmps
nop
sub
xor
or
out
dec
loopne
fs
adc
cmp
shl
loope
in
mov
fild
add
mov
inc
fwait
sub
inc
nop
push
add
push
repnz
loope
std
clc
and
xor
pop
std
idiv
add
repz
out
fabs
loope
cmc
jmp
jns
out
loop
sbb
jns
cmp
pop
arpl
sahf
out
ja
mov
out
mov
loop
out
mov
leave
or
loop
inc
enter
mov
dec
jecxz
cs
into
jecxz
xchg
pop
and
pop
push
cmp
add
iret
pop
cmp
xchg
loopne
nop
imul
xor
pop
or
jns
xlat
in
pushaw
in
push
je
aaa
adc
ret
out
push
in
jno
xchg
iret
and
xor
sbb
in
iret
fimul
sub
jno
jg
dec
inc
add
pop
fsub
int3
into
repz
push
lock
add
sbb
mov
push
sub
ins
jmp
add
mov
mov
or
dec
dec
or
xchg
in
ss
in
inc
loop
or
arpl
gs
adc
clc
in
pusha
xor
bound
inc
mov
movs
jecxz
pop
adc
or
mov
or
(bad)
and
in
daa
das
aam
mov
cmp
mov
push
sub
imul
add
sbb
fs
push
loopne
ret
push
cmp
sub
add
nop
xor
dec
fdiv
aaa
and
(bad)
push
cmp
fsub
les
js
jb
popa
adc
jge
inc
mov
ins
cmp
and
and
push
sbb
test
enter
pop
in
and
sbb
nop
ret
push
cmp
fsub
pop
cmp
sbb
sub
and
xor
in
js
mov
sbb
int3
int3
int3
sbb
int3
int3
int3
fs
inc
push
int3
int3
int3
nop
inc
push
sbb
int3
int3
inc
push
sbb
int3
push
sbb
int3
int3
int3
pusha
nop
xchg
inc
int3
int3
int3
cmp
adc
cmp
repz
push
push
(bad)
xor
iret
repz
pop
addr16
repz
out
out
cdq
out
lods
iret
repz
mov
retf
aad
jmp
repz
jg
jns
out
and
repz
out
popa
and
sub
cmp
gs
out
sahf
outs
jns
lea
jns
mov
leave
shl
jns
out
out
sti
add
dec
nop
out
sahf
cmps
mov
(bad)
xor
out
jecxz
test
iret
repz
add
push
ficom
mov
jmp
or
jns
repz
xor
enter
or
push
cmp
jecxz
push
mov
push
mov
ja
out
mov
pop
cmp
dec
push
(bad)
mov
inc
mov
cmp
push
out
stos
jmp
and
push
dec
xor
retf
sub
sahf
fucomi
and
pop
xor
inc
or
ja
sub
dec
push
test
xchg
push
sahf
mov
mov
push
adc
dec
jns
sub
mov
add
jo
jl
dec
aam
dec
sub
movs
or
pop
or
and
aam
push
out
adc
push
push
adc
inc
loop
arpl
in
push
push
cmp
xor
dec
cwde
inc
fisttp
xor
xchg
and
loop
dec
jmp
jbe
fwait
pop
adc
sbb
movhps
adc
das
jle
rcl
xchg
shl
jns
sub
ret
je
inc
add
imul
dec
push
nop
sbb
inc
push
jo
and
push
js
xchg
mov
test
and
movs
pop
or
das
inc
and
jb
push
add
in
(bad)
push
stc
call
inc
test
aam
ins
inc
jb
fldcw
loope
add
jmp
sub
fdivr
add
add
out
aas
pusha
dec
(bad)
outs
dec
and
adc
test
push
mov
mov
xchg
adc
sub
faddp
lds
and
out
add
xor
les
jne
repz
sbb
mov
push
mov
inc
test
mov
dec
lock
pushf
retf
cs
ins
and
sbb
cld
dec
fcomp
rcl
mov
sub
mov
fisttp
inc
or
mov
sbb
push
imul
repz
sub
lahf
push
lock
mov
push
dec
test
pop
mov
nop
sti
test
xor
rol
inc
pusha
sbb
adc
fwait
sub
mov
imul
add
icebp
dec
icebp
jo
jle
scas
call
add
push
cmp
js
mov
dec
sbb
and
push
je
push
adc
jne
and
adc
out
and
rep
mov
push
jb
fmul
mov
popf
enter
pop
add
pop
or
mov
inc
add
jmp
test
push
adc
out
cmp
repnz
imul
xlat
int
hlt
mov
hlt
push
push
loopne
xchg
sbb
mov
enter
cld
jmp
addr16
dec
inc
cmps
ja
sbb
mov
in
sbb
push
(bad)
bound
lods
call
xor
mov
in
movs
cmp
fld
sbb
xor
pop
mov
repz
add
xor
pop
repz
pop
bswap
fldenv
inc
xchg
outs
nop
adc
out
es
pushf
add
(bad)
cmp
and
lds
push
inc
push
(bad)
nop
pop
mov
sbb
aam
jmp
dec
mov
test
dec
dec
and
mov
add
jp
xor
cmp
mov
pusha
(bad)
sti
jno
ins
ret
jnp
jecxz
out
rcr
add
jb
sbb
sub
mov
sub
dec
cmp
inc
add
jmp
(bad)
mov
adc
sbb
adc
cmp
xchg
adc
clc
rcl
xor
cld
mov
dec
adc
sub
lods
jg
or
bound
sub
jne
add
bound
pop
xlat
xchg
test
cmp
mul
xlat
in
dec
and
xor
pusha
dec
(bad)
and
jae
pushf
sbb
inc
pop
test
retf
mov
push
aad
leave
adc
movs
lea
jp
and
add
mov
cmps
jg
push
xchg
in
stc
nop
fidiv
imul
jle
pop
or
leave
aam
or
pusha
add
stc
cmps
jmp
sbb
imul
rol
sbb
sbb
push
xor
loop
and
sub
cwde
push
add
adc
add
sti
mov
mov
pop
sti
push
inc
or
pop
pop
imul
push
or
lea
rol
imul
ror
nop
rcr
push
xlat
adc
hlt
add
xor
or
push
dec
and
cwde
adc
in
adc
rcl
bound
ins
push
jb
cld
jl
xchg
cld
bound
or
mov
add
ins
xor
or
inc
sub
or
aas
mov
stos
fs
cmp
adc
adc
adc
add
and
dec
lods
sbb
lods
add
das
dec
mov
cmp
mov
mov
retf
adc
and
dec
add
loopne
inc
adc
nop
pop
add
iret
xor
lods
or
jo
inc
xor
jae
lods
add
pop
and
inc
mov
ud0
out
push
in
xlat
xchg
pop
movs
xor
jmp
mov
movs
add
shl
xchg
pop
nop
add
mov
jmp
addr16
xlat
rcr
add
or
xchg
imul
sub
movs
outs
mov
mov
int
jmp
and
sbb
fdivr
out
or
dec
jb
pop
rcl
lds
sar
and
fs
cmp
call
add
call
xchg
sub
stos
daa
pop
add
add
aam
and
shl
jl
popa
cmps
sub
push
mov
pop
mov
nop
ja
add
and
pushf
add
add
add
pop
sub
or
test
adc
dec
pop
mov
adc
mov
or
popa
lahf
jbe
adc
idiv
test
push
mov
push
xchg
push
fild
mov
add
dec
pop
adc
and
push
loop
inc
cs
pop
push
push
and
sub
or
lods
adc
mov
sbb
sub
xor
lods
pop
daa
dec
or
or
ret
push
div
pop
xchg
int3
out
mov
adc
mov
arpl
cmp
lods
push
or
pop
push
js
or
mov
lods
iret
iret
or
xchg
adc
push
fcom
mov
test
out
and
jg
push
lods
test
(bad)
nop
add
xchg
or
pop
test
out
jbe
test
adc
not
adc
adc
or
jbe
adc
inc
mov
jmp
and
adc
nop
dec
jb
(bad)
int3
or
pop
aas
or
mov
nop
mov
sti
push
fwait
nop
or
std
mov
or
mov
and
lea
mov
dec
and
jno
and
mov
inc
push
add
ret
jmp
cmp
add
or
daa
call
stos
dec
nop
pop
pop
enter
into
or
je
in
in
ja
push
jb
ret
xchg
lea
sub
in
fmul
pusha
(bad)
dec
push
push
xchg
test
cmp
test
ja
push
and
inc
es
push
jae
push
xchg
pop
jb
imul
shl
call
call
cmp
shl
call
push
mov
adc
cmp
push
jb
adc
push
call
sbb
das
inc
sub
test
adc
sbb
sub
inc
int3
mov
or
push
popa
push
adc
mov
xchg
xchg
xchg
and
push
adc
addr16
xchg
clc
mov
hlt
adc
call
ror
leave
add
shl
hlt
dec
or
shl
adc
or
adc
or
jno
adc
mov
rcr
dec
xchg
aam
das
pop
mov
or
adc
ret
mov
adc
pusha
push
or
pop
inc
pop
cmp
ja
adc
adc
adc
push
inc
ss
adc
push
dec
xchg
cdq
nop
es
push
dec
sbb
ja
and
mov
pop
inc
jle
or
popa
or
push
enter
adc
cmp
adc
inc
add
adc
(bad)
addr16
pop
rol
(bad)
cmc
inc
push
cmp
adc
and
shr
adc
xchg
dec
push
adc
bnd
pop
adc
test
inc
xchg
pop
and
cmc
retf
(bad)
into
adc
jb
add
imul
in
and
sub
mov
xchg
std
outs
mov
xchg
xchg
push
mov
push
add
fldl2t
rcl
and
lock
inc
xchg
push
add
stos
ret
icebp
push
pop
sub
out
mov
cmp
adc
enter
push
sbb
inc
sub
inc
pusha
enter
sub
pop
jl
sub
loope
(bad)
adc
leave
rcr
jg
xor
cdq
mov
push
aas
and
sub
int
in
call
ret
(bad)
sub
or
repnz
imul
sbb
pop
sbb
fdiv
sub
stos
je
add
les
or
les
int
fcomp
loopne
xchg
xchg
test
push
addr16
ins
ret
cmp
add
push
pushf
call
adc
xchg
dec
adc
mov
jb
mov
push
jb
mov
inc
pop
push
(bad)
sbb
cmp
neg
or
enter
or
pop
xchg
xchg
fwait
ret
mov
jl
xchg
sbb
xor
ja
pop
ret
inc
gs
outs
adc
(bad)
cmp
aaa
inc
push
je
inc
pop
sbb
adc
dec
vprotd
rcr
mov
sub
push
repnz
inc
push
pop
push
pop
xchg
dec
xchg
or
outs
fidivr
add
dec
xchg
and
jo
dec
gs
jae
and
cmp
sbb
mov
xchg
pop
inc
sbb
bndldx
mov
push
sub
push
and
(bad)
and
nop
out
adc
cmp
dec
and
add
(bad)
xchg
and
inc
enter
adc
in
adc
mov
pop
pop
and
jnp
inc
xchg
pop
daa
dec
sub
adc
or
sbb
movs
sub
or
addr16
out
sbb
pop
adc
or
retf
push
mov
or
cmps
test
xor
and
mov
loope
and
cmp
adc
push
test
mov
inc
loopne
mov
ins
and
mov
jb
and
cdq
adc
cmp
neg
add
ja
jae
xchg
push
add
popa
test
dec
push
pop
(bad)
push
cmp
ins
fadd
inc
xchg
addr16
adc
iret
in
repnz
jns
adc
aam
es
dec
adc
(bad)
es
xor
push
int
fadd
pusha
xor
mov
add
daa
dec
inc
add
daa
movs
and
mov
aam
ins
xor
mov
nop
adc
dec
enter
sub
push
inc
test
call
daa
xor
push
fild
and
jecxz
ins
dec
push
push
pop
sub
(bad)
seto
mov
sbb
out
sub
add
sub
pop
add
out
nop
adc
jg
sub
daa
mov
fsubr
stos
sbb
adc
mul
sub
push
push
xchg
or
adc
rol
adc
mov
sub
push
les
push
inc
add
outs
call
dec
lods
xlat
mov
adc
je
shr
push
jge
mov
ret
push
xchg
xchg
mov
add
xor
cs
adc
xor
adc
and
mov
mov
mov
nop
fiadd
adc
sub
add
xchg
push
sub
inc
mov
dec
test
pop
inc
push
mov
adc
fs
xor
adc
bound
xor
je
add
push
cli
or
or
sbb
dec
push
fs
push
pop
and
ret
movs
fwait
xor
cmp
xor
test
and
and
cld
mov
pop
sub
xchg
jp
inc
or
cmp
loopne
push
loope
in
scas
pop
push
inc
or
das
fmul
leave
inc
cld
aad
push
mov
fist
popa
xor
xlat
xchg
data16
cmp
add
or
push
xchg
xor
sub
arpl
jbe
pushf
jb
xor
cld
mov
adc
add
scas
cmp
and
add
pop
leave
aad
lods
adc
mov
jg
add
and
and
jmp
pmulhuw
and
mov
daa
inc
enter
aaa
aaa
push
jo
shr
mov
and
out
add
ret
and
push
push
addr16
dec
cmps
adc
inc
das
nop
int3
in
retf
rol
rcl
test
je
enter
sub
mov
push
jmp
pop
add
and
movs
loopne
push
(bad)
in
add
arpl
and
mov
xor
cmp
inc
push
pop
or
nop
sub
xchg
cmp
dec
ret
inc
in
push
pop
push
leave
and
push
adc
in
sbb
pop
rcr
mov
xor
cdq
xchg
adc
shl
add
add
dec
add
cld
ins
inc
ud0
retf
adc
cwde
shl
test
cmp
outs
and
pop
push
jmp
pusha
fdivr
call
aam
push
or
aam
aam
jge
cs
push
push
xor
and
cmp
cmp
cs
push
repnz
jno
mul
ret
ds
inc
sub
inc
clc
push
in
and
push
sbb
mov
leave
cmp
or
les
loopne
sbb
push
add
push
cmp
xor
nop
and
inc
repnz
xor
push
or
aas
stos
jo
shl
test
jnp
dec
mov
push
jb
xchg
sub
sbb
jb
or
leave
cmc
pusha
imul
cmp
inc
push
ja
sbb
and
aam
shl
or
inc
push
adc
mov
xchg
inc
inc
push
add
push
inc
cmp
test
add
(bad)
add
push
xor
aad
imul
test
or
add
sub
sub
or
movs
mov
sbb
das
inc
inc
ja
mov
das
cld
je
add
and
inc
sub
mov
push
push
inc
xchg
xchg
add
push
push
add
ja
xor
pop
cmp
scas
or
inc
pop
fmul
pop
ja
lds
mov
pop
fisubr
push
push
pop
add
or
inc
inc
inc
inc
inc
xchg
enter
das
(bad)
push
push
add
mov
pusha
inc
xchg
and
jo
loop
xor
enter
and
push
jb
or
inc
mov
hlt
cmp
rol
jmp
ins
sbb
mov
movlps
and
and
sbb
mov
ret
daa
xor
dec
cs
enter
loope
fs
mov
rcr
loop
fmul
dec
cmps
nop
das
xor
ja
or
and
pop
fcom
dec
(bad)
test
sub
js
or
ret
into
sbb
cmps
nop
iret
rep
in
dec
mov
or
(bad)
sbb
cdq
inc
adc
or
fldcw
xchg
mov
dec
mov
xlat
add
inc
cmps
repnz
mov
mov
inc
js
and
out
push
sub
ja
cmps
cmp
and
jmp
push
mov
cdq
inc
add
mov
dec
push
adc
dec
fsubr
dec
ror
mov
dec
sbb
add
mov
inc
leave
out
mov
dec
in
push
jecxz
out
dec
mov
outs
lock
fmul
push
push
js
out
js
imul
add
dec
outs
push
dec
xlat
cmps
adc
sub
and
or
dec
cld
or
push
cmp
add
push
cmp
mov
cdq
xchg
and
push
jnp
jg
enter
add
lds
imul
mov
repnz
xchg
pop
cmp
adc
pop
dec
jnp
repz
popw
jbe
add
aam
jmp
daa
je
xlat
(bad)
cmc
xchg
sub
add
loopne
xchg
enter
dec
cmp
test
push
xor
and
js
inc
ds
and
push
sub
xchg
add
retf
ja
cmc
movq
test
or
xchg
sbb
fidiv
cld
xchg
cmp
pop
test
push
dec
push
retf
xor
das
xchg
push
imul
push
and
inc
push
jmp
sub
aaa
mov
xor
in
xor
sbb
mov
movs
les
add
push
movs
in
or
fdiv
push
gs
xchg
ins
lods
test
retf
(bad)
movs
and
ins
ror
test
xor
and
idiv
and
sub
aaa
lds
xchg
addr16
sub
jg
cld
or
adc
sti
dec
add
arpl
inc
and
loope
test
push
push
and
iret
and
sub
test
movs
(bad)
cwde
bound
nop
mov
leave
adc
add
das
adc
push
mov
jg
sbb
dec
jmp
popf
xor
add
add
pop
or
inc
gs
push
daa
xchg
sub
and
jae
adc
rcl
stc
adc
dec
inc
retf
and
jmp
mov
adc
inc
pop
or
scas
fisttp
aas
inc
xchg
and
inc
jo
popf
xchg
dec
inc
xor
cmp
mov
add
cmp
das
repz
push
sbb
jne
sahf
sub
or
push
dec
mov
sub
dec
lods
xchg
loopne
daa
sbb
or
fisub
jnp
inc
fs
ins
je
cmp
pop
movs
inc
mov
ja
repnz
push
push
outs
mov
adc
daa
dec
loopne
mov
stos
cld
push
dec
adc
jmp
fldenv
sub
inc
fmul
popa
inc
xchg
stc
xchg
cmp
xor
inc
cmp
add
fild
jg
or
cs
cmc
jo
push
mov
add
les
mov
pop
push
pop
dec
or
addr16
mov
movs
jae
dec
xor
mov
push
(bad)
push
dec
movsx
cmps
int3
add
push
inc
and
daa
inc
test
mov
xchg
jne
push
outs
dec
xchg
sub
push
inc
xchg
sub
push
xchg
adc
mov
mov
div
call
cmp
pop
in
mov
pop
sub
dec
pop
jp
push
add
push
mov
push
add
sub
loope
mov
push
mov
ja
adc
dec
cli
cmp
cmp
movs
add
fldenv
mov
les
push
pop
ins
or
jp
sub
jl
inc
pop
mov
jae
xchg
and
pusha
out
dec
jno
add
fisub
inc
dec
and
dec
add
ror
mov
push
add
leave
enter
outs
das
and
pusha
imul
add
mov
and
xchg
pop
sbb
push
jns
cwde
fist
push
push
in
pop
pop
js
push
or
jne
push
mov
test
sbb
and
or
or
sbb
ds
jno
or
leave
out
mov
mov
inc
push
out
sti
xchg
ficom
pop
or
clc
sbb
inc
mov
adc
push
mov
cmps
or
jmp
adc
sbb
mov
or
dec
dec
(bad)
lea
icebp
push
push
(bad)
dec
out
rcr
push
cmp
ds
sub
out
(bad)
pop
imul
mov
sbb
push
inc
jmp
imul
pusha
inc
(bad)
jo
rcl
pop
jle
mov
aaa
imul
and
cmp
add
movs
fldcw
mov
jb
xchg
push
xor
mov
push
jle
rol
xor
adc
push
mov
mov
sub
and
and
or
mov
aaa
pcmpgtb
and
push
aam
adc
xchg
push
shl
or
or
push
jb
push
enter
add
ds
push
mov
mov
jo
sbb
sbb
sti
imul
and
jae
jo
dec
outs
ins
sbb
cld
outs
adc
and
add
push
and
xor
pop
dec
pop
out
or
sbb
ss
push
ja
aas
xsha256
cmps
xchg
pusha
pop
js
je
jg
or
adc
inc
inc
sub
ds
inc
adc
mov
xor
xor
xor
xor
push
inc
pop
xor
(bad)
sahf
cmp
je
dec
inc
or
or
imul
dec
or
outs
aad
or
or
inc
sbb
inc
pop
pop
pop
leave
adc
das
pop
stos
add
adc
pop
or
leave
repz
or
inc
test
lock
push
inc
arpl
xchg
mov
outs
aaa
je
xlat
push
inc
mov
push
add
or
ja
ret
or
addr16
ror
iret
sub
dec
test
out
aas
inc
dec
and
jg
xchg
cmp
dec
adc
mov
scas
out
shr
iret
dec
je
jg
stc
add
push
sub
push
or
push
pop
push
xchg
adc
adc
cmp
bound
sbb
fadd
and
fs
data16
aas
retf
movs
outs
push
sub
add
das
call
das
or
pop
pop
repnz
cmp
push
and
addr16
fadd
inc
(bad)
sub
sub
mov
push
add
mov
ficom
imul
(bad)
or
push
pop
dec
lahf
shl
xlat
push
hlt
fcmovbe
dec
sbb
dec
adc
sbb
sub
push
shr
xlat
push
fwait
inc
mov
pop
mov
jnp
test
cmp
inc
outs
inc
ss
(bad)
sti
pop
adc
aas
dec
pop
inc
aas
adc
xchg
dec
sbb
ja
push
inc
fisubr
js
sub
cs
sub
shl
push
out
or
dec
inc
jg
ja
xchg
and
pop
scas
imul
out
outs
fcomp
sbb
(bad)
dec
arpl
rdpmc
popa
pop
adc
dec
jg
adc
add
mov
xchg
mov
xor
nop
xchg
mov
bound
dec
sbb
int
sbb
inc
pop
dec
aas
or
and
or
push
jg
inc
lahf
mov
lds
jo
test
dec
pop
adc
xor
sub
dec
jo
mov
inc
mov
mov
pop
daa
pop
sbb
adc
and
or
jo
(bad)
xlat
aas
popa
lahf
add
mov
inc
cmps
and
jns
mov
mov
lahf
xchg
sub
cmp
or
shl
loopne
xchg
pop
adc
jnp
or
adc
arpl
inc
jns
iret
and
sub
jl
mov
aaa
loop
daa
int3
bound
add
das
add
mov
xor
sub
mov
daa
das
aad
scas
in
call
imul
add
fbstp
xlat
mov
cmp
ja
jae
mov
and
add
or
outs
jne
xchg
xor
les
cmp
ja
xor
and
or
cmps
pushw
add
inc
sub
adc
hlt
jge
lock
dec
xchg
adc
jbe
and
rcr
sub
or
fld
push
and
and
and
shl
fwait
xor
jmp
mul
mov
or
push
jno
aaa
push
add
(bad)
jmp
cmps
(bad)
stos
add
xchg
aad
or
pop
nop
xchg
jb
shr
add
sbb
mov
outs
js
shl
rol
xor
jae
in
sbb
or
jnp
out
push
adc
and
aad
dec
or
(bad)
cmp
in
adc
xchg
mov
in
jbe
das
and
xchg
cmp
in
(bad)
outs
mov
jp
leave
(bad)
iret
mov
mov
sub
daa
addr16
mov
pandn
pop
nop
or
adc
pop
xchg
xchg
in
retf
jl
ret
mov
sbb
dec
and
xchg
cdq
mov
iret
mov
ror
fnstcw
iret
repz
jmp
jns
out
or
sbb
sub
mov
pop
aaa
xchg
mov
sub
sti
fnsave
add
nop
imul
sahf
xchg
push
adc
(bad)
hlt
xchg
push
cwde
mov
inc
dec
fist
push
inc
mov
xchg
les
xchg
or
in
push
cwde
jno
bound
es
rcl
push
fwait
or
pop
stc
xchg
imul
push
gs
xchg
sbb
mov
cs
in
loopne
js
in
or
lods
jno
xchg
in
xor
lds
js
pop
dec
pop
inc
lods
jmp
sbb
sbb
adc
mov
mov
dec
(bad)
pop
pushf
lods
movs
ins
adc
push
push
cdq
add
shl
xor
sbb
sbb
mov
xor
pusha
in
movs
mov
jae
icebp
or
pop
jl
or
jae
outs
add
jge
and
pushf
or
outs
arpl
lods
dec
cmp
sbb
popa
add
cmp
push
popa
inc
add
ret
arpl
sub
imul
or
fcomp
xlat
jg
nop
adc
movs
xchg
mov
xchg
mov
adc
inc
into
ds
push
mov
call
sbb
outs
pop
and
jbe
add
popa
test
mov
xchg
daa
shr
pop
fst
mov
pop
leave
mov
leave
stos
fcomp
punpcklbw
or
je
cwde
cmp
daa
inc
into
aas
mov
movsx
daa
daa
daa
daa
pop
jl
inc
daa
addr16
addr16
mov
or
cmp
mov
pushf
je
mov
pushf
jg
mov
mov
lahf
mov
xchg
and
lods
pop
scas
ins
fwait
cmp
in
cwde
clc
cdq
xchg
mov
mov
popa
jnp
sbb
fistp
bsf
ret
scas
arpl
push
adc
pop
popa
push
imul
pop
daa
das
aaa
jns
out
aas
inc
dec
push
pop
out
sahf
out
outs
ja
xchg
xchg
lahf
cmps
scas
mov
sahf
out
mov
out
jns
out
out
idiv
pop
dec
jns
out
push
pop
daa
das
aaa
sar
aas
inc
dec
jno
jns
repz
or
mov
idiv
repz
repnz
add
mov
ins
outs
dec
js
dec
pop
pop
rol
add
mov
mov
or
es
push
imul
pushf
jno
pop
outs
sahf
jo
dec
inc
test
retf
lock
fldcw
pop
stos
push
fdivr
mov
mov
test
mov
add
mov
test
imul
cmps
pop
or
(bad)
popa
xor
ret
push
xchg
(bad)
movs
adc
xor
jl
dec
add
pusha
lds
mov
(bad)
daa
or
leave
sahf
xor
sbb
sub
ret
sub
sub
inc
in
add
or
fdivr
inc
inc
into
or
inc
js
cmp
or
popa
sub
dec
or
pop
daa
and
jo
xor
test
jo
pop
inc
xor
pushf
daa
clc
cmps
(bad)
pop
mov
fld
dec
push
clc
pop
add
mov
add
add
sbb
cs
or
inc
dec
pop
xchg
or
adc
outs
std
mov
mov
outs
mov
sbb
lods
lods
in
adc
movs
jno
inc
lock
movs
loop
add
cs
cmps
xchg
leave
xchg
mov
retf
cmp
mov
retf
movs
xor
enter
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
and
xchg
lahf
addr16
sub
in
jno
out
xor
std
add
sahf
out
sbb
out
sahf
out
dec
push
pop
gs
out
sahf
ins
jne
test
jns
movs
lods
mov
idiv
out
int
fucom
jb
sahf
out
sahf
jb
jb
jae
repz
jns
jae
jno
jno
repnz
jno
xchg
ret
ss
js
ins
mov
mov
cmp
mov
add
outs
rcr
sub
push
je
mov
push
sbb
jns
test
push
push
fmul
ror
in
fst
bound
pop
pusha
ror
pop
push
ret
adc
sub
fbstp
push
and
mov
push
movntps
dec
mov
gs
adc
ins
es
xchg
xor
fcomp
lds
lods
mul
ja
xchg
(bad)
lahf
mov
jb
fld
or
mov
movs
sbb
inc
dec
ss
or
jp
(bad)
cmp
dec
xor
ret
or
push
movs
imul
and
push
push
pop
cli
or
pop
js
fiadd
push
push
out
sub
or
sbb
or
data16
mov
jbe
movs
pop
aas
iret
mov
neg
aas
xchg
shl
ret
jg
dec
nop
imul
shl
jp
stos
mov
push
lock
loopne
add
stc
jnp
mov
inc
sbb
adc
fsubrp
mov
inc
sbb
cmp
inc
push
in
call
enter
test
push
push
push
cmp
mov
lock
nop
sub
enter
dec
inc
jb
adc
or
jl
nop
inc
mov
xchg
in
fsub
cld
mov
cmp
popa
adc
movs
in
ins
jb
mov
nop
dec
sub
in
mov
xchg
ja
sbb
in
(bad)
adc
ja
in
or
rcl
mov
pop
sub
mov
mov
fsubr
in
das
fs
xchg
cmp
in
test
push
shl
shr
push
std
js
jns
adc
out
sahf
pop
sub
cmp
out
pop
outs
jns
out
sahf
out
xchg
mov
jns
(bad)
into
fsub
in
idiv
sar
or
sub
cmp
repz
push
pop
iret
repz
outs
js
mov
mov
push
cmp
repz
repz
dec
mov
jns
rol
cmp
aam
dec
push
shl
nop
pop
pop
cdq
cmovbe
ja
jp
les
ds
stos
bound
jle
es
cs
push
push
in
fst
push
and
cld
xchg
xchg
ficom
test
loope
push
movs
movs
sub
repz
(bad)
mov
dec
push
add
test
xchg
add
push
cmp
cmp
xor
jbe
and
push
lahf
je
fs
cdq
mov
sbb
and
push
or
pop
add
dec
jns
sbb
or
leave
sbb
leave
(bad)
xor
sbb
inc
loope
jns
xchg
icebp
lea
and
test
xchg
movs
add
(bad)
imul
sbb
ror
or
stc
add
adc
dec
and
sbb
inc
pop
push
xor
jbe
mov
js
dec
adc
push
sbb
inc
jo
in
pop
loop
jg
inc
jnp
lods
dec
pop
fidiv
jae
adc
jecxz
inc
mov
jnp
sbb
pop
ss
adc
mov
outs
sub
push
mov
mov
xor
mov
ins
cwde
xor
sub
shl
mov
aaa
push
(bad)
test
aas
add
jae
scas
or
xor
cmp
sbb
push
add
loope
stc
outs
sbb
xor
imul
mov
clc
jl
jg
(bad)
jg
and
mov
dec
inc
sahf
mov
and
dec
ret
sti
xor
daa
leave
pop
out
push
add
jmp
enter
push
test
add
int3
dec
ins
icebp
cmp
or
js
mov
mov
lods
adc
mov
and
ins
push
fcom
test
dec
je
cmp
nop
icebp
add
xchg
add
push
and
sub
dec
imul
mov
sbb
dec
xor
push
xor
jne
movs
loopne
add
add
in
xor
call
lea
sub
hlt
xchg
xchg
or
add
stc
in
sbb
mov
popa
add
or
mov
or
rcl
pop
ins
add
mov
adc
add
(bad)
outs
bound
ins
sti
mov
adc
out
rcr
ins
adc
dec
imul
cs
pop
add
jb
adc
imul
add
dec
popf
cmc
montmul
cmps
add
(bad)
jl
adc
mov
add
(bad)
out
and
or
jo
push
icebp
and
sbb
mov
pop
mov
xchg
(bad)
xor
mov
movs
cmps
or
add
inc
outs
add
or
inc
dec
jle
call
mov
lock
xchg
and
inc
or
add
or
cmp
popf
xchg
and
mov
add
addr16
imul
xor
aad
imul
and
xor
cwde
js
push
nop
pop
push
push
mov
xchg
mov
xchg
dec
xchg
inc
fstp
outs
fst
jo
mov
gs
dec
lods
dec
pop
and
mov
sbb
inc
push
push
icebp
shl
dec
add
loope
pop
push
test
jno
xor
and
inc
inc
jns
jo
cmp
cwde
lods
or
adc
and
and
and
sbb
pop
or
faddp
inc
enter
ja
xor
sahf
fdivr
dec
cmp
loopne
ds
pop
dec
and
push
outs
fnstsw
call
fld
and
test
or
sbb
add
sub
stos
je
test
or
xor
repnz
or
cs
bound
mov
sbb
adc
sahf
cvtpi2ps
xchg
sbb
rcl
inc
lock
aam
imul
mov
or
and
and
xchg
xchg
das
and
mov
sahf
xchg
and
and
in
xchg
and
and
push
je
mov
jecxz
xchg
pop
push
repnz
mov
xchg
dec
or
or
cmc
push
or
mov
ins
call
sub
stc
dec
lods
inc
xchg
adc
dec
dec
test
push
setge
hlt
push
cs
pop
push
ds
pop
adc
jmp
mov
cli
xlat
push
or
outs
aas
fbstp
push
mov
mov
sbb
or
sub
adc
pop
or
push
xor
xor
mov
lds
sbb
icebp
mov
dec
sahf
push
test
bound
nop
jl
add
inc
xchg
or
je
stc
sub
(bad)
push
xchg
add
aas
and
test
inc
(bad)
frstor
mov
mov
dec
dec
inc
movnti
sti
sahf
push
das
mov
push
xor
push
in
ds
jle
mov
cld
and
cmp
pop
sbb
(bad)
mov
sub
inc
std
js
jl
cmp
and
ins
sub
xlat
adc
rcl
movs
inc
aas
or
xchg
pop
mov
(bad)
cmp
inc
mov
in
test
mov
test
stc
adc
popf
adc
and
push
add
fild
cmp
je
sub
add
sub
jmp
ss
outs
ret
dec
add
movs
clc
mov
push
xchg
scas
in
fdivr
sti
jle
inc
xchg
movs
push
mov
imul
jo
and
pop
sbb
outs
add
or
jge
pop
xor
hlt
mov
inc
add
out
sub
dec
ja
movs
xchg
mov
pop
add
sbb
mov
add
add
(bad)
adc
sbb
xchg
in
(bad)
mov
dec
je
add
mov
pop
dec
jge
js
mov
add
push
cld
cmp
inc
sbb
sbb
push
jne
adc
ror
push
dec
xor
dec
cs
and
ins
add
push
push
in
dec
inc
xchg
or
push
ss
std
(bad)
(bad)
xor
nop
retf
das
inc
inc
xor
sahf
fild
pop
(bad)
inc
pop
pop
scas
in
add
cmp
add
or
adc
add
pop
or
mov
or
enter
sbb
or
outs
cmps
xchg
and
push
jb
addr16
mov
push
xor
xchg
pop
js
adc
adc
xchg
pop
ret
test
sbb
and
jb
adc
inc
pop
(bad)
add
cmp
in
lods
or
clc
and
mov
jmp
pop
or
and
inc
jns
add
dec
outs
jnp
fisubr
dec
jge
pusha
mov
mov
pop
sub
add
push
(bad)
push
mov
xor
push
add
cli
repz
or
and
movs
mov
add
imul
or
inc
daa
retf
call
hlt
mov
jmp
dec
sbb
jbe
or
rol
cmp
out
jmp
lock
mov
or
push
sbb
mov
push
ja
sbb
sub
jo
add
fld
inc
inc
mov
retf
push
in
scas
xchg
and
sub
jl
inc
jmp
dec
pop
nop
and
int3
ror
(bad)
movs
xchg
ror
ja
add
or
xor
cmp
rol
pop
push
mov
inc
add
adc
ss
iret
xor
ds
or
lods
inc
jg
adc
mov
dec
xchg
cmp
or
movs
push
push
mov
xchg
(bad)
xchg
popa
xlat
cmp
or
sbb
call
inc
xlat
adc
or
cmp
in
sti
jb
dec
aas
push
push
add
ss
xchg
in
mov
xor
pop
push
fwait
adc
movs
xor
add
shl
hlt
adc
adc
out
aam
push
mov
jno
sub
add
pop
rcl
xor
cmp
test
sub
sub
jl
add
push
or
mov
ror
add
jne
xchg
xchg
push
lea
stos
test
dec
ds
cmp
pop
pop
lea
add
sbb
mov
dec
pop
push
push
jnp
inc
sbb
mov
inc
fist
mov
in
mov
cld
xchg
outs
adc
xchg
add
enter
mov
in
daa
mov
jmp
ss
pop
add
ret
out
push
xchg
inc
mov
ds
stc
popw
cmp
retf
shl
jo
out
call
shl
push
jmp
loope
enterw
scas
mov
cmp
inc
lods
mov
js
jmp
sub
jle
mov
cwde
pop
sbb
jne
cmp
jg
test
shl
dec
(bad)
lock
ss
adc
fldenv
push
push
loope
fidiv
add
and
push
inc
fstp
cmp
mov
inc
mov
inc
mov
movs
cmp
push
lahf
cmp
outs
daa
mov
inc
mov
sbb
imul
inc
or
inc
adc
sub
inc
retf
xor
ja
jge
rcl
pop
or
adc
adc
or
test
add
lea
ss
ficomp
dec
inc
dec
in
nop
or
nop
xor
outs
xlat
adc
adc
mov
into
xchg
and
sbb
addr16
sbb
mov
repz
mov
or
cmps
ret
adc
xor
mov
nop
push
outs
nop
shr
jmp
daa
imul
daa
mov
adc
mov
cmp
mov
xchg
sbb
push
lock
fbstp
ds
mov
pushf
rol
jno
js
cdq
lods
stos
xor
pop
and
lea
nop
ret
cmp
(bad)
and
xchg
sbb
aam
or
inc
call
ret
pop
mov
or
push
jmp
dec
call
mul
sbb
xchg
sbb
jmp
(bad)
jecxz
or
(bad)
loope
sbb
aad
pop
mov
pop
dec
iret
or
aad
pop
mov
call
iret
xchg
inc
fwait
enter
shl
icebp
xor
cli
retf
adc
or
pop
test
sbb
inc
pop
test
inc
ror
popf
and
lock
shl
mov
cld
pusha
int3
hlt
sbb
test
popa
sub
mov
leave
push
test
test
xchg
and
mov
inc
sbb
dec
and
adc
jmp
inc
aas
repz
add
adc
cmp
or
pop
shl
inc
pop
enter
movs
jno
adc
mov
js
add
gs
or
lods
scas
sbb
jmp
pop
call
mov
adc
cmp
inc
adc
push
cld
or
(bad)
stos
add
dec
popf
and
call
jne
and
pop
pop
xchg
sbb
mov
popf
rol
xor
add
fdivr
addr16
outs
fsub
mov
rcl
sbb
pop
out
mov
pop
or
sahf
push
mov
aas
pop
push
cdq
mov
push
nop
loopne
rol
add
adc
jno
in
cs
std
jno
jmp
inc
loopne
loopne
movs
mov
int3
int3
or
nop
cmps
add
mov
cmp
push
pop
sbb
dec
cdq
dec
call
mov
mov
xchg
push
nop
sub
in
sbb
lahf
add
mov
jecxz
fisub
sub
and
and
cli
adc
loopne
out
sbb
mov
lock
sub
adc
mov
retf
mov
push
cmp
in
add
jo
xchg
shr
cdq
dec
(bad)
sub
loopne
push
and
adc
or
xchg
push
inc
rcr
and
das
mov
and
test
push
dec
add
mov
sbb
icebp
cmp
shr
mov
and
pop
inc
xchg
sub
js
aam
test
cld
pop
pushf
pop
or
mov
or
inc
inc
sar
imul
mov
lods
sbb
sub
mov
cmp
je
push
not
jmp
leave
and
int
mov
ja
mov
sub
fwait
jo
mov
loop
enter
jg
mov
outs
cld
mov
inc
ins
inc
in
sbb
aas
push
fucomip
test
jmp
or
(bad)
pop
ja
push
adc
mov
in
mov
in
mov
je
or
jp
in
test
imul
jmp
sub
retf
aad
aam
stos
push
inc
and
fld
inc
xchg
(bad)
loope
cwde
jge
adc
(bad)
leave
adc
test
adc
jp
pop
iret
mov
and
fwait
sbb
dec
xor
push
jnp
in
imul
je
adc
mov
cmps
fstp
push
shl
add
push
out
adc
jb
pusha
movs
push
push
add
push
sbb
call
call
in
popa
pop
and
ja
lods
add
mov
xchg
xor
mov
push
mov
adc
push
inc
punpcklwd
ins
sbb
and
sbb
js
add
xor
mov
dec
sbb
push
sub
add
mov
dec
mov
mov
adc
dec
outs
or
xor
mov
xlat
mov
and
lea
test
pop
add
imul
pusha
shl
dec
sbb
fwait
in
(bad)
daa
inc
mov
rcl
lahf
inc
pop
inc
fisttp
xchg
jb
inc
fisubr
ins
inc
packuswb
neg
clc
adc
adc
pop
sbb
adc
cmps
inc
sbb
jae
adc
adc
or
dec
clc
sbb
inc
inc
dec
jmp
in
cmp
or
inc
adc
(bad)
mov
out
mov
mov
mov
mov
or
imul
int3
int3
fcom
fmul
xor
add
inc
mov
jnp
sahf
clc
ret
push
out
inc
test
aas
add
lods
push
or
xchg
xchg
rcl
int
and
mov
movs
sbb
mov
dec
adc
in
push
dec
ret
pop
mov
mov
sbb
aad
add
inc
adc
xchg
in
sub
push
scas
ins
inc
js
mov
test
cdq
fcomp
and
xchg
mov
push
mov
lock
aam
sbb
cmps
test
inc
inc
mov
and
nop
adc
adc
sub
leave
fldenv
inc
nop
nop
jns
add
imul
mov
sbb
or
ja
push
mov
mov
push
sub
jecxz
push
jmp
sbb
aad
and
or
pop
dec
repnz
mov
cmp
jne
mov
sbb
fsubr
mov
ins
xor
out
(bad)
push
and
fsub
push
inc
push
(bad)
adc
sub
pop
or
cmps
adc
cmp
stos
inc
xor
or
nop
lea
dec
jae
leave
in
movs
clc
sbb
lock
inc
daa
xchg
pop
rcl
lock
dec
inc
sbb
iret
mov
fadd
test
shl
(bad)
and
je
(bad)
push
or
adc
clc
mov
add
in
in
adc
fsubr
call
mov
lea
sti
or
cmp
ins
sbb
cli
xor
(bad)
xchg
add
adc
js
adc
xchg
mov
inc
pop
ins
add
jnp
ret
ret
test
and
jg
push
and
or
push
xor
push
xor
lock
cmps
xchg
or
cmp
mov
outs
lods
mov
rcl
pop
and
add
push
or
loope
imul
lahf
dec
mov
xchg
pop
xchg
in
(bad)
fcom
cmp
popa
dec
xchg
mov
lock
or
xchg
sbb
mov
sub
mov
lds
sub
cmp
sbb
lods
mov
in
shufps
adc
mov
imul
mov
mov
or
pop
mov
lahf
fdiv
(bad)
shr
shl
mov
inc
(bad)
cmp
loopne
movs
(bad)
(bad)
push
cmp
xor
dec
and
int3
ins
enter
sub
sub
dec
imul
(bad)
les
(bad)
and
sbb
sbb
mov
mov
cmc
add
jge
popf
inc
lods
cmp
scas
jo
dec
inc
jl
(bad)
aad
inc
pusha
add
pushf
int3
xchg
(bad)
aam
stos
jno
loope
sub
or
sbb
loope
pop
jmp
repnz
sbb
xor
mov
(bad)
mov
inc
pushf
mov
sbb
jno
loope
pop
fdivr
cmp
bound
fwait
push
xchg
mov
xor
(bad)
cmp
outs
enter
pop
lock
in
mov
pop
and
call
mov
and
push
lock
popa
add
(bad)
cwde
add
imul
add
mov
xchg
add
ret
ror
imul
inc
mov
pusha
rcr
repz
push
adc
sbb
and
test
mov
enter
pop
jecxz
add
enter
rcl
and
xor
int3
mov
or
(bad)
pop
das
cmps
ins
or
inc
call
add
in
sub
popa
mov
fmul
shl
lods
or
sbb
leave
shl
xchg
cmp
ss
nop
les
fstp
sbb
or
jge
and
xchg
imul
ret
inc
mov
shl
adc
inc
daa
push
adc
shr
std
xchg
addr16
push
leave
or
jns
and
mov
call
dec
int
and
inc
jb
and
in
xor
and
repnz
bound
push
rcl
pop
mov
cmp
cmps
add
bound
in
out
movs
adc
sbb
enter
sbb
sbb
in
js
iret
scas
mov
cld
sbb
int3
or
mov
mov
nop
push
mov
in
xchg
mov
addr16
pop
and
call
and
ss
xchg
inc
movs
mov
lock
cmp
jb
add
sbb
in
pop
or
push
sahf
mov
dec
jnp
arpl
dec
push
call
imul
inc
loopne
mov
cmp
neg
cmp
or
movs
daa
adc
cmp
iret
mov
jo
lea
test
mov
inc
dec
push
add
inc
mov
add
pop
push
xchg
mov
sbb
and
into
sub
dec
cld
scas
ins
pop
and
popf
rcl
inc
push
aas
jmp
push
mov
jne
cmp
in
sbb
cmp
cmps
loope
sub
loopne
imul
xchg
push
inc
xchg
int
(bad)
sbb
pusha
mov
mov
or
ret
adc
(bad)
mov
adc
lock
jecxz
rcr
push
arpl
cmps
adc
test
add
xlat
xor
in
mov
ret
sbb
or
cs
jnp
rcl
push
lahf
inc
fs
call
push
scas
xor
push
inc
nop
sbb
test
or
or
mov
xchg
xchg
movs
lods
mov
pop
aaa
add
xchg
in
ja
int3
mov
mov
enter
mov
ret
xor
xchg
fadd
jb
fmul
mov
jnp
lock
sub
nop
add
push
and
adc
add
lock
les
sbb
and
rol
ror
xchg
pushf
mov
icebp
and
mov
test
mov
and
mov
mov
jo
cmp
push
mov
mov
int3
test
(bad)
leave
and
(bad)
sub
add
stos
mov
push
sub
mov
inc
repnz
sub
mov
add
rcl
clc
enter
sbb
into
push
push
fldcw
mov
sub
inc
add
mov
or
xchg
fidiv
xor
mov
jne
push
fdivp
inc
bound
mov
push
arpl
ins
lea
fst
or
test
or
add
add
mov
pop
jle
fdivr
das
retf
icebp
dec
sub
ins
pop
push
repnz
pop
mov
push
daa
pop
fiadd
ret
nop
aas
mov
push
and
test
mov
dec
and
pop
or
xchg
jmp
into
jae
xchg
jo
test
and
ret
(bad)
stos
mov
inc
ins
add
adc
fimul
pop
add
inc
mov
adc
iret
push
loope
imul
inc
dec
lea
aas
sbb
push
push
mov
cmps
js
add
push
mov
or
test
xor
add
movs
dec
sbb
sub
add
inc
in
(bad)
aam
push
aam
mov
rcr
mov
shr
fs
imul
movs
mov
enter
push
push
bound
sbb
push
push
addr16
push
imul
pushf
pushf
push
imul
mov
movs
sbb
inc
jno
inc
shl
mov
xchg
sub
sub
pop
sub
jb
jo
xchg
test
inc
push
pop
xor
pushf
push
mov
setl
inc
and
mov
pop
in
dec
loope
sahf
mov
lock
es
js
xor
or
daa
pop
(bad)
mov
inc
push
xor
shl
inc
ss
retf
test
or
mov
pop
imul
rcr
push
xchg
out
cld
fwait
mov
les
or
aam
sub
cmp
sar
cmp
xor
xchg
addr16
jbe
sub
mov
adc
push
mov
imul
shl
push
ret
jmp
push
mov
adc
mov
test
push
or
pop
push
les
pop
inc
mov
shl
cs
jno
lahf
pop
adc
push
ret
scas
ret
dec
(bad)
(bad)
sbb
mov
je
ds
loope
fcmovb
xchg
hlt
and
add
add
cmp
in
mov
add
cmp
shr
add
fwait
add
outs
aaa
dec
cmps
cdq
adc
aas
xor
jge
ret
sbb
jge
je
push
jne
ins
xor
push
push
fld
or
(bad)
sbb
stc
sbb
lock
iret
jge
xor
jmp
or
aam
add
push
add
mov
add
pop
and
les
mov
mov
outs
adc
(bad)
shl
inc
sbb
inc
pop
out
pop
adc
adc
enter
test
loop
out
adc
lods
(bad)
adc
cwde
cmp
bound
fcomp
movs
xchg
fisub
jb
sbb
add
or
ja
aad
fcomp
adc
and
inc
or
jb
mov
fsubr
sub
dec
aas
dec
and
xchg
sub
fmul
clc
ss
or
inc
or
cmp
jne
lea
ficomp
adc
imul
add
div
dec
push
xlat
loope
adc
dec
addr16
loop
add
(bad)
xlat
mov
leave
sub
test
jo
out
pop
js
stc
pop
lds
dec
pop
leave
cli
aad
and
sub
sar
dec
push
add
adc
iret
iret
xchg
or
sbb
xor
push
leave
adc
das
popf
pushf
lea
or
pusha
cmp
mov
cwde
nop
inc
nop
and
imul
mov
movs
scas
jmp
je
mov
jmp
add
movs
sbb
test
mov
adc
imul
jl
shl
push
sub
inc
sbb
add
clc
push
ret
arpl
das
cmp
adc
and
sbb
stos
add
push
lods
pusha
test
pop
loopne
push
js
dec
enter
ja
cdq
mov
int3
popa
out
out
add
jno
push
hlt
and
xchg
jl
xchg
add
test
and
adc
cmp
in
add
add
add
mov
adc
add
inc
or
dec
imul
jae
inc
or
sbb
sbb
inc
pop
xchg
jne
gs
cwde
mov
arpl
loop
add
pop
mov
xchg
and
push
push
in
pop
js
adc
leave
enter
and
and
jmp
not
retf
sbb
mov
nop
dec
sbb
adc
mov
sub
ins
scas
int
push
(bad)
addr16
ror
and
or
and
iret
jno
mov
(bad)
mov
push
jns
(bad)
adc
push
pop
and
adc
add
and
inc
dec
xchg
js
xchg
sbb
pop
js
adc
leave
jne
daa
pop
adc
in
test
mov
inc
pop
jmp
push
in
(bad)
mov
pop
pop
sub
es
adc
jns
sbb
sbb
mov
in
mov
ins
lock
or
jae
imul
push
and
mov
bound
idiv
cmp
sbb
shl
iret
xor
adc
xor
(bad)
jge
int3
push
and
cwde
mov
aaa
add
int
adc
cmp
outs
pop
clc
sub
and
nop
popa
mov
shr
sbb
push
test
scas
int
add
sbb
mov
cld
adc
ins
sbb
lea
shr
into
lds
ja
add
adc
xor
fcom
lahf
and
and
and
jmp
iret
mov
stos
icebp
mov
cdq
add
pusha
xchg
gs
adc
fs
lock
xchg
lock
sbb
add
mov
xchg
clc
adc
push
xor
iret
sbb
mov
std
mov
test
jo
inc
mov
dec
inc
jg
mov
cwde
or
add
test
jmp
and
and
ficom
or
dec
es
or
and
mov
xchg
and
mov
adc
cli
xchg
sub
xchg
push
xchg
add
lea
push
xchg
mov
ss
push
cmp
dec
loop
jg
cwde
push
inc
mov
xor
jmp
push
lock
cld
push
adc
aam
loopne
mov
scas
cwde
adc
or
ss
je
jno
hlt
pop
ss
lock
and
inc
hlt
mov
mov
or
push
push
mov
fstp
pop
stos
fsub
jo
es
pushf
mov
cmc
pusha
push
fst
and
nop
fsubr
or
add
mov
push
pusha
ret
inc
mov
cmp
or
sub
push
push
adc
xor
test
or
sub
sbb
sbb
sysret
or
xor
adc
cmp
sar
jbe
imul
inc
in
and
xchg
sub
mov
sbb
dec
jb
int3
mov
mov
clc
adc
lock
add
adc
iret
add
rcl
ffree
pusha
sub
mov
or
and
lods
pop
mov
jb
retf
mov
mov
mov
add
xchg
mov
jae
jae
test
cwde
pushf
pushf
lock
dec
pop
aad
and
pop
nop
and
fidiv
pushf
adc
sbb
adc
push
add
(bad)
lock
fs
rol
in
add
push
xchg
in
in
cwde
aas
pushf
mov
in
mov
cmp
sub
xchg
cmp
mov
xor
aad
ins
or
lea
sbb
mov
lea
fadd
xchg
dec
loope
es
jne
and
lods
inc
sub
and
jl
or
inc
inc
bound
xchg
ins
jmp
inc
jmp
add
(bad)
cmp
jne
(bad)
clc
cs
and
add
and
pop
push
and
or
adc
loope
psubusb
ds
mov
ret
js
inc
fdiv
lock
jmp
in
mov
add
call
std
shl
in
(bad)
ja
sub
fisub
(bad)
mov
jl
cmp
(bad)
in
adc
dec
jae
sbb
aam
imul
test
fsubr
mov
lods
lods
rcl
and
mov
mov
pop
adc
mov
cmp
jmp
jae
xchg
pushf
shl
jne
dec
add
cmp
and
in
lods
add
das
push
mov
loop
paddusb
call
call
push
and
cmps
sub
mov
out
push
mov
call
(bad)
fisub
jmp
rol
cmc
xor
inc
dec
mov
cld
(bad)
dec
pop
clc
je
ss
and
pop
xchg
jmp
push
ret
out
pop
xor
and
pushf
push
hlt
add
dec
and
rcr
inc
leave
in
xchg
data16
cli
fs
pusha
clc
je
cmps
dec
rcl
dec
push
mov
inc
mov
cmp
test
cld
in
dec
mov
in
clc
(bad)
push
xchg
mov
retf
mov
stos
es
iret
or
cmp
fstp
mov
xchg
clc
sub
cmp
push
(bad)
fidiv
out
xor
mov
lea
retf
mov
jmp
clc
cs
inc
pop
cmp
imul
test
fndisi(8087
adc
scas
ja
fcmovnb
and
pop
xchg
sub
xchg
push
push
cmp
(bad)
or
fdivr
call
and
add
mov
xchg
push
xchg
aas
dec
cmp
lea
xchg
sub
(bad)
fistp
dec
leave
pop
mov
and
sbb
xor
fsub
add
adc
pop
or
fnstsw
dec
inc
pop
xor
dec
and
in
imul
inc
cs
add
dec
ret
pop
push
es
shl
xchg
jmp
xchg
or
mov
adc
ret
push
jmp
ficomp
mov
inc
je
inc
adc
adc
dec
jmp
nop
lock
add
xor
mov
dec
mov
je
and
dec
ds
adc
or
pop
push
xor
mov
in
add
lea
adc
mov
push
sbb
shl
add
aaa
dec
out
rcr
push
jl
mov
movs
test
jo
dec
push
add
inc
je
mov
push
sbb
aas
call
jmp
daa
jo
xor
xor
ins
inc
mov
mov
xor
(bad)
jne
jg
loopne
inc
mov
jo
add
xor
and
jmp
cmp
inc
call
cdq
adc
enter
mov
aas
push
xor
movups
inc
cmp
pop
xor
push
out
push
or
enter
adc
inc
int3
loopne
or
mov
push
add
pop
aaa
outs
sbb
inc
mov
or
sbb
push
int3
fiadd
push
adc
jg
mov
imul
imul
shl
dec
rcl
pop
push
push
sbb
xor
dec
bound
xor
call
pop
test
push
xchg
imul
or
icebp
adc
inc
fild
push
adc
out
dec
push
js
idiv
aaa
or
repz
adc
mov
in
mov
jl
jmp
sbb
pusha
arpl
popa
leave
mov
out
mul
mov
enter
xor
adc
aaa
pop
aaa
out
xchg
cmps
(bad)
mov
dec
js
ds
push
mov
push
(bad)
in
mov
push
sbb
mov
loopne
loop
sub
inc
xor
ffreep
adc
ficomp
lods
lahf
ins
pusha
and
inc
adc
or
pop
xchg
loope
cmp
int3
mov
mov
jne
mov
xchg
jo
fcomi
fmul
test
in
ds
cmp
push
rcr
daa
add
rcr
aas
jg
(bad)
es
in
sub
in
pop
add
jmp
stc
dec
ret
mov
inc
ja
push
push
pushf
enter
enter
push
call
(bad)
iret
xor
or
adc
inc
je
or
and
test
inc
dec
gs
pop
and
push
nop
jo
ret
stos
mov
add
leave
sbb
lods
mov
mov
nop
cmps
ins
mov
sbb
loopne
cmp
xor
cmp
cmps
xchg
mov
in
mov
hlt
test
adc
mov
jmp
ds
mov
ss
cmps
sub
jno
outs
movs
les
pusha
dec
leave
add
xor
pop
add
or
dec
enter
and
fs
mov
enter
dec
jb
rcr
push
pop
pop
add
les
xchg
ret
pusha
fwait
hlt
and
rol
xor
mov
or
(bad)
iret
out
sub
mov
xor
add
je
xor
mov
fwait
jl
adc
mov
adc
sub
or
xor
out
mov
or
lea
and
mov
setns
fisttp
jle
adc
wrmsr
cwde
daa
(bad)
nop
imul
test
nop
or
loop
push
enter
or
dec
inc
aas
push
jmp
test
xor
push
push
xchg
in
sbb
popf
jmp
out
(bad)
pop
call
dec
pop
fcomp
retf
(bad)
mov
push
dec
xchg
fcom
push
and
loopne
in
dec
scas
dec
loope
and
xor
mov
lea
fdivr
shl
outs
dec
add
stc
aam
add
xor
(bad)
(bad)
frstor
imul
sbb
pop
das
aas
xor
xchg
xlat
jmp
loop
xor
fild
jns
dec
inc
enter
inc
jmp
mov
movs
rol
loopne
xchg
xor
daa
add
add
jnp
inc
sbb
and
xbegin
inc
cs
jg
and
jmp
rcl
inc
cmp
add
xchg
jp
test
jl
xchg
ret
xor
adc
adc
dec
sub
pop
add
stos
daa
repz
sub
adc
and
bound
and
push
inc
sti
cli
mov
ins
push
pxor
stos
in
xchg
jb
and
pop
(bad)
cmps
in
ins
cmps
push
dec
cli
sti
adc
in
sar
add
call
sub
sub
dec
mov
jne
sub
test
sbb
pop
fcmovnb
gs
mov
cmp
leave
inc
ss
or
sub
sbb
pop
add
cmp
cdq
pushf
pop
mov
inc
out
dec
test
sub
pop
nop
in
xchg
dec
in
imul
test
loopne
and
sbb
jge
test
and
out
lock
inc
nop
sbb
jle
cmp
lock
xor
repz
sub
push
add
mov
dec
sahf
add
int3
xor
mov
nop
pop
aam
add
data16
call
lods
aam
push
cld
jmp
cdq
push
inc
or
out
frstor
shr
lea
or
xchg
sub
adc
adc
repz
fs
(bad)
jg
or
jl
ret
mov
mov
dec
loope
icebp
call
xor
scas
jb
add
lahf
or
rcl
fild
push
aad
xchg
(bad)
mov
xor
and
pop
push
jmp
pop
sar
xchg
and
ds
stos
add
jg
inc
inc
add
push
inc
sbb
sub
adc
xor
add
(bad)
jecxz
jo
sbb
xor
ss
push
jb
push
jno
lock
inc
dec
sbb
mov
mul
push
hlt
pop
push
mov
dec
rol
cmp
sbb
(bad)
cmc
test
mov
jns
mov
dec
ret
test
adc
psrlw
dec
sbb
mov
std
mov
data16
and
mov
leave
fstp
je
mov
jg
ret
movzx
mov
call
jge
xchg
lods
dec
or
dec
adc
mov
mul
hlt
jl
les
pop
popf
sbb
or
test
test
add
mov
in
dec
stc
ds
mov
cmp
and
lock
inc
cs
sub
xor
jmp
mov
xlat
dec
push
sub
mov
mov
js
sub
cmp
mov
loopne
in
and
pusha
sar
les
das
push
pop
inc
push
jae
nop
xchg
inc
pop
or
jecxz
push
rol
adc
or
mov
add
mov
shr
mov
popa
cwde
inc
xchg
pop
out
or
outs
loopne
xchg
ins
adc
xchg
add
mov
pop
hlt
lock
mov
and
fdiv
retw
and
or
movs
xchg
iret
ins
add
in
xor
xchg
scas
loopne
scas
std
or
int
xchg
jge
inc
push
je
cmp
ja
mov
mov
pop
mov
loop
mov
pop
add
adc
mov
arpl
or
push
mov
jmp
inc
sub
lea
(bad)
fldenv
movs
mov
(bad)
test
mov
or
out
push
or
inc
adc
and
and
push
test
sub
and
movs
aas
inc
or
inc
ds
das
xchg
sbb
call
call
call
xchg
idiv
dec
inc
daa
pop
xchg
push
sbb
mov
sbb
ror
dec
and
not
mov
aas
das
es
es
div
sbb
js
ss
or
push
dec
cld
icebp
jo
inc
pop
(bad)
div
mov
mov
or
mov
add
xchg
jmp
aad
pop
pop
push
push
in
test
mov
mov
inc
jno
xchg
ins
sub
sub
push
dec
mov
fs
clc
jo
mov
mov
sub
pop
rcl
xor
push
in
dec
sub
and
jp
push
leave
ret
shl
pop
and
pusha
sbb
mov
out
pop
shr
ins
or
push
inc
and
fprem1
or
and
and
and
mov
scas
je
adc
movs
xchg
add
xor
cwde
outs
or
addr16
jno
scas
xchg
ss
in
in
cmps
sbb
mov
mov
sub
xchg
sbb
adc
pop
dec
push
adc
mov
inc
xor
mov
daa
sub
pop
push
xor
(bad)
pop
repnz
fs
inc
and
and
push
pop
dec
dec
shl
mov
vmread
add
cs
ret
jns
mov
push
push
mov
lea
in
pusha
pusha
pop
add
pop
sti
shr
sub
adc
ret
cs
(bad)
mov
gs
pusha
inc
nop
inc
out
movs
mov
fbld
xabort
cmp
inc
cmp
aam
xchg
dec
add
adc
dec
das
retf
dec
in
mov
adc
(bad)
or
lock
imul
jns
fmul
enter
stos
xor
les
xlat
or
and
mov
mov
mov
std
push
or
jl
jl
rcl
shr
mov
adc
movs
imul
adc
or
jmp
(bad)
dec
push
fsin
inc
sahf
push
dec
daa
(bad)
std
jl
mov
nop
sete
movs
movs
outs
sub
div
dec
adc
cmp
sbb
cld
add
repz
adc
mov
ret
mul
enter
mov
push
inc
in
add
mov
stc
pop
test
push
movs
jo
push
mov
(bad)
cld
push
sub
pop
jae
inc
test
sti
jle
ss
aam
and
and
mov
sbb
rcr
mov
mov
add
jmp
inc
outs
jg
mov
xchg
test
ret
add
sub
adc
imul
cmp
and
bound
or
or
push
cld
mov
lods
xor
xor
xchg
nop
xchg
(bad)
cmp
dec
pop
push
xchg
inc
mov
and
pop
movs
adc
das
sbb
and
xor
add
popa
inc
es
cmc
ror
loopne
retf
pop
pop
pop
inc
cs
fcomp
add
adc
ror
inc
jne
and
retf
xlat
pop
sbb
mov
ror
lock
shl
movs
cmp
int3
int3
shl
mov
movs
sbb
fcomp
mov
jae
sbb
xchg
mov
mov
leave
movs
mov
sbb
pop
outs
jne
push
pusha
cmp
arpl
lds
inc
xor
mov
or
adc
add
frstor
pop
and
inc
add
fsub
pop
es
(bad)
dec
dec
add
daa
mov
retf
je
jmp
icebp
ficom
push
jo
cs
xchg
and
sbb
adc
xor
mov
cs
push
jmp
loopne
add
or
pop
cmp
fmul
sbb
sub
inc
push
mov
mov
cmp
and
nop
sbb
add
mov
adc
sar
xchg
shr
push
pop
jno
iret
pusha
inc
push
or
fisttp
xor
sbb
cmp
cdq
icebp
xchg
jb
mov
imul
movs
add
js
or
xor
adc
and
inc
jnp
cli
(bad)
fcom
sub
ror
in
or
sbb
hlt
mov
inc
jmp
add
fcmovu
mov
xor
cs
or
jp
mov
aam
leave
enter
lock
(bad)
pop
sahf
sbb
sub
cmc
jo
pusha
imul
jnp
imul
nop
inc
in
loopne
add
dec
sbb
fstp
outs
and
fcmovbe
push
inc
scas
pop
cmp
push
and
or
mov
fs
sbb
test
adc
mov
pop
dec
daa
jmp
dec
sar
sbb
in
or
nop
sub
mov
stos
leave
enter
mov
and
ds
rcl
ret
xlat
push
jno
xor
imul
adc
inc
pushf
jno
xor
push
xor
xor
sub
fbstp
rcr
or
xor
loopne
sbb
push
mov
dec
or
and
add
xchg
adc
adc
xchg
xchg
and
inc
sub
xchg
inc
cs
sbb
jmp
sbb
mov
mov
xchg
mov
mov
aaa
(bad)
shl
dec
jl
daa
mov
push
adc
mov
pop
(bad)
call
in
push
push
clc
add
in
mov
fistp
add
mov
mov
and
fnstcw
add
push
add
jmp
test
xchg
inc
std
fs
das
neg
add
mov
sub
sub
bound
hlt
fwait
add
aam
stc
cmc
mov
bound
dec
push
push
pop
loope
jge
fwait
ja
xchg
sub
ins
call
or
adc
dec
or
pop
cld
fwait
imul
xchg
mov
jge
fmul
jae
mov
xchg
aas
fwait
add
mov
and
enter
test
clc
test
sbb
fsub
fiadd
pop
and
mov
mov
or
aaa
mov
dec
push
cli
int3
fld
jg
fld
aas
xor
add
aas
adc
cdq
and
or
in
setbe
jp
mov
inc
add
push
push
jmp
push
dec
mov
nop
cld
test
push
cdq
stc
jecxz
xchg
add
xchg
mov
sbb
pop
test
push
mov
cmp
jge
imul
cmp
or
adc
cmp
dec
add
push
(bad)
mov
adc
in
aas
je
ret
push
or
adc
xchg
mov
pop
mov
mov
xchg
sub
mov
jmp
or
jg
add
shl
add
add
mov
push
ret
popa
add
out
scas
push
add
xor
mov
add
in
(bad)
rol
or
adc
cmp
call
add
and
cli
ss
les
enter
ret
xlat
das
leave
or
xor
sbb
pop
jmp
sbb
cmp
data16
mov
cmp
mov
add
(bad)
ss
les
and
pop
add
pusha
dec
add
ret
add
xchg
xchg
xchg
std
(bad)
jmp
jg
inc
std
test
xchg
or
hlt
(bad)
adc
sub
or
hlt
aam
int3
adc
fs
test
mov
jle
adc
inc
push
jb
add
xchg
sar
pop
cli
inc
es
dec
mov
and
out
rol
outs
arpl
movs
jnp
(bad)
pop
jg
(bad)
mov
jae
ret
je
in
jne
mov
mov
push
xor
in
retf
and
vmread
xchg
or
lods
enter
leave
loopne
add
inc
add
sbb
push
sbb
mov
add
std
sahf
push
adc
out
push
sbb
(bad)
jns
out
(bad)
jecxz
jnp
jp
adc
mov
rcr
push
add
sbb
in
bound
push
jns
es
mov
pop
push
mov
and
push
or
icebp
jecxz
das
or
xor
mov
jg
jp
data16
dec
pcmpgtd
dec
jne
jo
add
clc
cdq
xchg
mov
push
jo
mov
repz
lods
push
mov
int3
dec
mov
and
inc
arpl
imul
ja
pop
mov
das
push
pop
inc
data16
mov
cmp
and
sldt
mov
push
je
aas
push
xor
adc
mov
xchg
xchg
adc
test
cmp
leave
enter
les
(bad)
xor
pushf
adc
or
bswap
push
lock
lods
dec
push
push
sub
pop
push
ins
pop
inc
rep
dec
cmp
push
pop
add
add
cmc
mov
lea
cs
les
xchg
je
scas
add
mov
add
mov
icebp
imul
outs
sbb
fadd
outs
pop
inc
(bad)
popf
sbb
add
push
adc
and
fild
or
pop
adc
popa
push
push
cdq
ins
dec
jns
jae
jns
leave
add
add
mov
popa
dec
jge
push
dec
gs
jae
cmp
in
or
in
jns
fdiv
iret
popa
ror
and
nop
out
mov
or
jae
sahf
xchg
test
or
jmp
dec
or
push
add
cmp
cmp
sub
fwait
sbb
inc
fwait
dec
mov
xor
jae
nop
movs
jb
add
lods
pop
mov
inc
inc
jne
xor
jle
aad
shr
rcl
adc
sub
dec
jo
push
lock
inc
fild
cmp
fwait
add
test
push
les
add
xchg
dec
shr
sub
lea
(bad)
mov
mov
add
ins
dec
add
add
sbb
scas
not
inc
sub
xor
mov
inc
mov
mov
(bad)
and
cmp
loopne
das
xchg
sbb
and
outs
inc
cmp
pop
xchg
dec
mov
cld
adc
adc
call
inc
test
push
rol
in
aas
xchg
or
cmp
or
xor
setle
and
or
sbb
pop
test
nop
xor
outs
push
in
(bad)
(bad)
adc
test
rol
xor
mov
push
mov
pop
das
sub
adc
les
data16
mov
fwait
adc
dec
mov
jmp
sbb
mov
icebp
outs
ror
sub
gs
sub
rcl
pushf
sti
out
add
scas
clc
dec
or
nop
call
jge
mov
add
test
inc
ret
adc
hlt
inc
adc
outs
xchg
cmp
or
cwde
sub
xchg
jg
add
ins
add
pushf
ret
push
ins
adc
mov
shr
inc
ror
or
sub
out
or
mov
adc
add
jmp
or
int
push
(bad)
xchg
int3
sbb
add
or
(bad)
or
mov
fild
dec
mov
shl
rcr
pop
cmp
inc
sub
mov
icebp
test
cli
sub
mov
pop
fcomp
cld
(bad)
fmul
fadd
fstp
fld
fsub
fstp
dec
mov
xlat
cli
in
jns
fs
dec
mov
loopne
mov
sti
mov
int3
adc
add
shl
cmps
add
and
xor
adc
arpl
inc
pop
cmps
loope
hlt
cmp
or
xchg
mov
inc
or
hlt
movsx
add
xchg
sub
jne
xchg
add
sbb
cmp
or
and
shl
sub
mov
push
pop
test
and
int3
aas
retf
or
and
and
cmp
cmpxchg
cmp
mov
mov
nop
xor
inc
retf
xchg
xchg
not
enter
outs
xchg
repz
cmp
sbb
movs
sbb
fwait
iret
jne
dec
inc
sub
add
add
fs
call
(bad)
push
add
xor
repz
sbb
fadd
les
repz
sub
mov
xor
in
pushf
xchg
sbb
sub
jmp
inc
add
clc
movs
add
mov
dec
lea
(bad)
and
ret
dec
jp
stos
(bad)
mov
adc
push
paddq
fstp
mov
pop
(bad)
mov
ins
sbb
mov
nop
mov
adc
test
movs
and
add
sahf
add
and
or
push
mov
ret
je
scas
add
inc
inc
mov
xor
dec
cmps
cmp
cs
and
mov
pop
add
adc
jns
into
mov
dec
ins
adc
mov
push
mov
dec
in
aaa
xchg
sub
ins
push
call
sub
nop
add
nop
cwde
mov
xor
and
sub
mov
or
sahf
out
sahf
jecxz
push
test
sahf
stos
mov
dec
xlat
lock
ins
cwde
and
sbb
sbb
push
fsubr
in
jge
and
inc
repnz
cmp
retf
retf
retf
cmp
and
mov
mulps
mov
clc
aaa
and
fs
es
xchg
es
int3
loope
(bad)
xchg
adc
inc
jb
aam
fwait
sbb
cmp
scas
in
sub
daa
cmp
xchg
push
leave
and
daa
inc
sub
daa
pop
xor
in
cmp
daa
push
leave
sbb
test
sbb
sbb
push
and
jb
jns
mov
or
push
shl
sbb
enter
hlt
xor
daa
leave
and
push
adc
sbb
and
xor
daa
xchg
cmp
dec
sbb
sbb
adc
add
sub
daa
nop
stos
pop
pusha
pop
in
into
inc
sub
xchg
adc
mov
das
enter
dec
daa
jo
xchg
adc
jmp
and
in
ds
aam
jb
jns
cmp
add
and
sbb
imul
dec
jb
pop
pop
add
or
push
out
stos
nop
cmps
test
push
test
adc
xchg
imul
mov
aam
jb
inc
pop
push
in
lock
add
test
aad
scas
sub
xchg
xor
xchg
xchg
inc
aad
rcr
and
adc
movs
retf
and
test
xchg
push
cmp
in
mov
inc
sar
adc
xlat
add
dec
out
nop
push
cmp
pop
aam
xchg
mov
in
mov
pop
aam
call
add
loopne
dec
xor
js
adc
push
dec
jo
and
adc
dec
movs
ja
sar
test
inc
jo
inc
shl
or
retf
leave
pop
inc
push
aaa
add
adc
or
mov
retf
jg
cmp
inc
pop
jle
push
and
mov
cmp
dec
and
dec
xor
fisubr
and
mov
movs
mov
and
movs
retf
fs
push
xchg
sbb
dec
fild
test
xchg
add
rol
jecxz
rol
imul
movs
stc
mov
fnstsw
inc
repnz
ss
repz
inc
or
ror
cmp
inc
out
add
stc
mov
and
outs
xor
ins
sbb
add
pusha
or
sub
xchg
cmp
mov
imul
or
cmc
out
shl
mov
shr
inc
(bad)
aas
pusha
dec
xchg
xor
add
outs
adc
and
dec
sub
cmp
nop
shr
aaa
cmp
inc
dec
jne
add
push
fsubr
dec
add
dec
pop
sub
sub
jl
inc
inc
dec
clc
xor
add
push
fadd
sbb
and
jl
mov
pop
inc
pop
fwait
fs
mov
cdq
enter
and
in
cs
retf
and
cmp
push
adc
sbb
in
and
xchg
add
push
movs
jb
and
rcr
and
cli
cmp
mov
pop
(bad)
or
add
fild
aas
push
test
repnz
sub
mov
add
fmul
adc
sub
add
fstp
mov
loopne
fwait
jle
pop
daa
adc
xlat
pop
ret
pop
jo
rcl
jle
xchg
inc
cmp
cmp
out
xchg
add
test
add
pushf
add
mov
and
jg
jle
and
movq
add
push
or
cmpps
bswap
call
fnstenv
add
adc
les
mov
(bad)
jae
cmp
pop
ror
sti
punpckhdq
adc
pxor
in
cmps
inc
ret
jg
adc
mov
lock
hlt
sahf
fidiv
push
cli
into
and
je
adc
ror
cli
ret
ja
imul
in
sti
pop
sbb
clc
sub
loop
jl
call
ror
sahf
and
aam
and
jns
out
(bad)
xor
mov
or
outs
fld
dec
xlat
or
movq
dec
jnp
cmps
jp
jmp
fisub
rcr
(bad)
fidiv
pop
and
push
sub
mov
call
xor
adc
push
xor
(bad)
out
hlt
repnz
or
jmp
ja
(bad)
jecxz
adc
rcl
sahf
(bad)
mov
pop
std
mov
loope
cld
in
shl
adc
in
sbb
shl
dec
test
nop
outs
inc
imul
retf
and
fwait
jbe
out
mov
cmps
cmp
stos
rcl
and
ds
mov
inc
push
pusha
or
fidiv
inc
xor
outs
jo
push
js
push
jnp
push
ficomp
xor
cmps
pop
shl
jecxz
xor
aam
stos
retf
xchg
xchg
fincstp
fimul
adc
xor
imul
loopne
dec
or
jl
(bad)
fcomip
test
xchg
cmps
imul
fadd
leave
mov
cmp
mov
rcl
inc
sbb
sub
retf
out
mov
rcr
inc
push
and
pop
js
sbb
(bad)
sbb
cmp
fldcw
test
jecxz
jo
div
jb
fdiv
js
pop
adc
cli
call
(bad)
dec
(bad)
xor
inc
sbb
mov
dec
pop
cmps
and
pop
repz
pusha
ror
(bad)
sahf
out
enter
push
pop
inc
es
pusha
jo
js
in
inc
pusha
push
jo
ds
push
sub
(bad)
fistp
cwde
rcr
add
add
lea
pop
jg
inc
leave
lea
lea
jnp
push
adc
push
loopne
dec
retf
icebp
lahf
pop
pushf
mov
jmp
ins
add
xor
ds
push
fiadd
add
mov
mov
fidivr
or
ror
xor
cmp
sahf
out
jg
(bad)
mov
(bad)
iret
ffreep
sahf
stos
pop
not
inc
shr
dec
push
or
add
xor
pop
sub
mov
mov
mov
sub
sbb
iret
rol
dec
adc
adc
adc
adc
shl
adc
inc
sbb
lock
adc
adc
sbb
xchg
cmp
sbb
sbb
in
or
jb
sbb
test
add
pop
pop
sbb
js
test
or
psllq
push
add
sub
and
or
push
adc
sbb
sub
fbld
jg
fmul
iret
mov
mov
dec
sbb
je
mov
or
fcom
or
push
ins
call
bound
adc
sbb
mov
pusha
add
jo
sub
or
adc
inc
loopne
adc
popa
or
int
loope
jnp
shl
jns
ficomp
add
mul
inc
ret
dec
fldcw
pop
inc
sbb
sub
sub
pop
adc
xor
lea
test
xor
popa
mov
sub
clc
lock
mov
clc
add
clc
push
call
cwde
sar
fnstcw
int3
(bad)
pop
or
push
repnz
call
cmp
in
addr16
sbb
retf
or
mov
push
lea
pop
loope
jmp
mov
cmp
cmps
out
bound
cmp
xor
fadd
out
loope
push
jl
adc
adc
jnp
xor
and
adc
or
int3
aad
repz
loopne
ret
mov
cld
out
adc
loope
cmp
push
ins
and
sti
fs
cmp
add
jb
cmp
sti
fidiv
ret
mov
jns
pop
(bad)
xor
sbb
pusha
dec
movs
dec
adc
into
(bad)
shr
sbb
ret
push
call
mov
jecxz
sti
pop
stos
xchg
bound
jmp
(bad)
and
push
scas
pop
lods
sub
dec
sti
sub
enter
pusha
ds
dec
add
rcr
inc
inc
push
mov
enter
out
bound
cmp
aad
pop
add
loop
in
jnp
or
mov
in
shl
rcl
retf
add
sti
push
dec
movs
sbb
dec
call
ja
sbb
inc
pushf
mov
mov
lds
(bad)
xor
pop
call
call
cld
(bad)
int
and
pop
pop
sub
inc
push
sub
pop
js
xor
push
loope
jnp
test
jecxz
scas
int
jecxz
ret
stos
mov
(bad)
sbb
rcr
cmp
movs
or
clc
jecxz
push
pop
fnstsw
mov
js
jle
popf
(bad)
cmp
add
add
lea
stc
loope
sar
(bad)
sbb
lea
xchg
pop
rol
pop
add
loop
in
popa
jae
aaa
cli
adc
sub
ret
retf
adc
repz
stc
jo
jne
pop
add
movq
cmps
jecxz
fimul
push
push
pop
loop
jmp
jecxz
mov
push
fsub
jmp
dec
rcl
fsubr
or
aam
(bad)
ja
inc
cmp
mov
cmp
push
fchs
iret
cmp
xor
xchg
push
ins
push
mov
and
ret
clc
mov
mov
out
sbb
sbb
pop
lods
ins
imul
in
inc
adc
jns
pop
push
push
adc
in
or
adc
adc
ins
sbb
pop
dec
xchg
pop
test
and
sbb
into
jae
cmp
sbb
jb
dec
xor
pop
mov
(bad)
adc
jle
in
sub
push
adc
icebp
mov
xor
mov
popf
mov
call
neg
mov
lea
mov
sbb
add
(bad)
cmp
jg
jg
bound
les
xor
cmp
push
inc
lock
das
inc
lods
test
or
aam
fwait
mov
jmp
std
add
movs
(bad)
out
adc
add
push
jmp
fdivr
or
(bad)
jmp
je
xor
fist
dec
sbb
push
push
push
(bad)
mov
inc
je
push
or
test
inc
movs
push
cmp
imul
dec
sub
icebp
lock
dec
(bad)
ficomp
add
call
jl
das
adc
lea
pusha
ror
mov
test
inc
in
jbe
adc
jns
sbb
lock
add
gs
and
(bad)
lea
hlt
adc
addr16
and
or
ftst
fld
or
and
and
push
sbb
ss
adc
add
jns
add
adc
dec
in
les
add
in
sbb
les
addr16
xchg
xchg
clc
add
rcr
aaa
clc
adc
addr16
mov
jo
sub
push
loope
lock
test
adc
push
sbb
xchg
jge
adc
loope
cld
xchg
jge
inc
lds
adc
mov
xor
or
loope
mov
jge
sbb
loope
push
addr16
test
outs
sub
xor
pop
addr16
jnp
pusha
adc
loope
aas
add
jbe
jnp
rcl
addr16
adc
loopne
push
pop
leave
dec
dec
fwait
cld
das
xor
daa
pusha
leave
dec
dec
jb
sub
cmp
sar
jb
cmp
cld
and
xor
les
and
aas
add
pushf
dec
cs
xor
add
push
inc
pand
sbb
psrld
aad
sbb
xchg
int
sbb
mov
cmp
add
cmp
pmulhuw
mov
pusha
mov
loopne
leave
mov
mov
add
inc
or
or
xor
push
push
mov
js
sti
out
xchg
stos
adc
jo
inc
and
shl
jns
mov
and
or
scas
jo
push
cmp
fstp
mov
mov
mov
or
scas
adc
add
add
nop
loop
lahf
or
sbb
and
shl
xor
or
push
and
xor
adc
add
(bad)
push
xor
mov
dec
shl
mov
ja
mov
pop
bswap
scas
mov
jno
aaa
pop
test
xor
sbb
inc
test
cmp
inc
sub
adc
xor
sbb
mov
sub
mov
push
push
and
adc
mul
inc
dec
ror
push
or
adc
mov
or
adc
mov
stc
adc
bswap
fadd
pusha
and
outs
or
xchg
rol
and
and
add
mov
inc
shr
add
sbb
adc
inc
inc
sbb
and
ret
mov
add
inc
sbb
inc
test
adc
mov
adc
jmp
or
pusha
jb
add
xor
jne
dec
cs
jb
add
inc
or
add
enter
add
inc
jle
ja
or
jl
cmp
sbb
add
inc
or
add
mov
adc
fimul
jo
inc
or
adc
or
dec
addr16
fild
jb
or
adc
addr16
add
fisttp
inc
push
push
jb
int3
push
int3
push
add
and
and
add
xor
dec
and
adc
addr16
fisttp
inc
adc
jl
int3
es
xchg
dec
shr
mov
loope
push
pushf
jbe
mov
add
jge
cmp
or
cmp
lods
xchg
jge
adc
pusha
ins
xchg
jge
adc
loope
mov
fstp
adc
sub
aam
jge
adc
loope
aam
mov
mov
mov
jge
adc
and
jge
adc
loope
jo
cmp
loope
push
cmp
cmp
cmp
enter
mov
pop
mov
inc
leave
dec
dec
jb
rcl
add
xchg
pop
jb
cmp
ins
int3
mov
xchg
add
xor
or
and
leave
and
add
enter
push
in
(bad)
int3
pop
or
or
clc
aaa
adc
in
fild
jnp
ret
pop
les
fimul
(bad)
fcom
rcr
dec
shl
cmps
push
shr
pusha
mov
mov
adc
ds
mov
popf
test
rcl
adc
rep
imul
(bad)
retf
ret
clc
push
fsqrt
push
jmp
adc
pop
jb
std
xor
mulps
cmp
out
fldcw
ins
nop
ret
popa
pop
push
stc
ins
mov
mov
sub
mov
sbb
push
inc
adc
dec
pusha
jge
xor
dec
rol
adc
pop
sub
cdq
mov
mov
mov
cmp
movs
out
pop
adc
je
dec
xchg
mov
repnz
outs
lock
jno
rcr
mov
lods
jp
pop
out
mov
dec
push
sahf
xor
xor
ins
dec
jnp
pop
inc
inc
scas
rcr
repz
(bad)
pop
int3
dec
jo
sbb
cmp
pop
js
cmp
(bad)
call
xchg
xlat
stc
and
in
repz
iret
mov
mov
mov
inc
push
ss
rol
or
jae
xor
repnz
jo
cmp
sub
jo
lods
add
cmp
sbb
dec
aad
int3
or
and
mov
xor
mov
(bad)
sub
or
ror
ror
mov
imul
jae
pushf
ins
or
mov
sub
repnz
pop
lock
adc
out
xchg
cmp
adc
push
repnz
dec
and
dec
inc
dec
nop
out
push
mov
out
in
sbb
sbb
mov
fsubr
dec
sub
addr16
ds
arpl
adc
and
or
adc
adc
call
jne
pop
push
inc
call
daa
mov
cld
push
push
call
inc
lock
dec
and
add
jne
jmp
stos
add
ss
mov
rcr
push
xchg
xor
out
ins
(bad)
lock
cmp
outs
mov
mov
pop
inc
and
or
sub
call
jno
sahf
xchg
xor
xor
fsubr
add
jg
mov
sub
jo
mov
add
sub
ds
icebp
add
into
dec
mul
jns
js
fcomp
push
call
div
js
cs
push
in
mov
jnp
jns
out
lds
int
and
sbb
cs
stos
std
jecxz
rol
inc
push
cwde
or
adc
inc
xor
mov
cmp
mov
in
push
sub
js
int
out
aad
sbb
jo
leave
lods
jns
sub
ficomp
and
mov
stc
scas
push
xor
push
xor
inc
adc
adc
cmp
repz
jmp
int
aad
retf
loopne
sahf
xlat
retf
or
les
or
and
or
push
cmps
and
aam
fmul
loopne
push
and
enter
sahf
pusha
push
data16
jbe
inc
sbb
xchg
shl
call
repz
enter
add
or
sbb
push
cmp
(bad)
(bad)
mov
test
loop
loope
(bad)
imul
jge
pop
mov
out
push
(bad)
into
mov
push
jns
int3
sbb
pop
ret
push
jo
outs
imul
push
xchg
add
pop
mov
lods
int
mov
add
mov
mov
ud2
adc
or
ret
gs
or
adc
retf
or
nop
int
or
adc
push
rcl
mov
inc
adc
add
test
adc
adc
push
adc
js
dec
test
mov
mov
push
in
sbb
sbb
and
test
je
mov
inc
mov
mov
and
sub
or
adc
clc
sbb
lea
inc
icebp
rol
jmp
mov
and
adc
pop
push
and
sbb
mov
xor
into
call
push
movs
(bad)
lds
fimul
xchg
cmp
dec
movs
sub
jb
sar
cmp
push
push
dec
fcomip
in
sar
cmp
pop
mov
imul
retf
pop
sub
repnz
adc
xchg
fist
cli
adc
push
cmp
inc
daa
(bad)
adc
xor
jb
add
add
pushf
and
xchg
aaa
jb
add
adc
enter
ja
inc
sbb
in
sbb
in
or
push
jb
nop
and
repnz
mov
ja
dec
enter
ja
dec
fmulp
xor
ja
jb
xchg
or
sub
xchg
aaa
cwde
adc
ja
lea
in
sub
aam
xchg
(bad)
adc
ja
adc
sub
mov
ror
int
cld
outs
mov
jnp
arpl
shl
cmp
movs
add
mov
imul
ja
aad
fnsave
lea
mov
xchg
aaa
lea
adc
test
aad
fnsave
lea
adc
mov
push
aaa
lea
arpl
arpl
in
mov
(bad)
rcl
ja
jae
and
or
das
pop
cmp
jb
push
shl
cmp
mov
loope
push
enter
pushf
aam
imul
and
xchg
add
in
cwde
ror
(bad)
test
add
push
inc
or
rcr
or
add
sbb
ret
imul
(bad)
add
pop
jnp
aaa
ss
fadd
pop
push
sbb
xlat
out
out
pusha
leave
fsubrp
push
adc
xor
imul
data16
or
mov
add
sbb
sbb
fadd
fadd
or
add
rcr
nop
retf
add
repnz
ss
pop
push
pop
into
sub
mov
fidivr
sbb
and
and
sbb
xor
(bad)
ds
xor
inc
xor
leave
xchg
stos
ret
push
retf
out
cmp
and
xchg
ins
sahf
outs
adc
faddp
fxch
or
fidivr
add
add
or
adc
xchg
adc
cmp
adc
(bad)
(bad)
out
loope
subps
shl
loop
(bad)
fcomp
ret
jl
fmul
cmp
mov
sub
int3
sbb
pop
cmp
jo
cmp
or
push
mov
inc
sub
pop
cmp
and
mov
jmp
and
cld
push
push
add
cmp
inc
inc
fadd
mov
rcr
pusha
dec
lds
pusha
jb
je
fs
mov
xor
and
mov
adc
mov
lock
ret
dec
ret
stc
or
dec
shr
add
sbb
imul
push
sub
rcl
movs
jl
jmp
and
mov
int3
push
sub
mov
fisubr
and
int
std
bound
test
leave
aas
imul
push
sbb
or
push
mov
push
push
inc
je
push
mov
jo
inc
jo
pop
sub
shr
jo
imul
xor
retf
and
jge
popa
(bad)
(bad)
fmulp
add
push
fcomp
xlat
sahf
push
imul
pop
or
xor
inc
pop
sbb
cmp
or
cmps
loope
cmps
cmp
js
xor
push
cmp
pop
rcr
sub
aad
inc
pop
js
cmps
shl
mov
nop
fild
sub
push
bound
fcomp
test
shl
pop
inc
dec
and
and
xor
stos
mov
xlat
push
test
iret
out
push
movs
fnstsw
(bad)
js
and
push
inc
call
fs
ins
je
jl
inc
fadd
loopne
fld
dec
arpl
inc
add
(bad)
mov
mov
fmul
pop
add
sub
or
fstp
cmp
sbb
pop
arpl
push
fstp
cmovae
jmp
adc
fstp
data16
jmp
test
fxch
cmps
sub
or
aad
or
xor
add
inc
bnd
test
int3
and
(bad)
mov
add
or
pop
push
leave
adc
es
or
test
pop
add
dec
push
adc
adc
arpl
adc
adc
dec
push
imul
pusha
shl
adc
xchg
push
fwait
sub
or
adc
int3
lock
imul
or
or
push
imul
adc
stos
pushf
arpl
je
inc
data16
dec
sti
or
pop
sbb
out
inc
sbb
je
int
ja
ret
add
cmp
sbb
retf
retf
xor
shl
mov
and
jbe
xchg
lock
dec
imul
inc
call
iret
(bad)
add
call
pop
in
out
fstp
sbb
pop
sub
cmp
sbb
mov
in
call
es
cld
(bad)
cs
cmps
jge
(bad)
or
inc
(bad)
xor
div
or
inc
pop
or
adc
pusha
jo
push
pop
mov
(bad)
sbb
jo
ds
retf
xor
sub
push
lea
ja
pop
dec
pop
fld
lods
or
cdq
loopne
inc
pop
adc
pop
mov
or
adc
mov
or
ja
adc
clc
sub
leave
xchg
ss
leave
adc
loop
jo
sbb
leave
and
pop
arpl
lods
(bad)
nop
pop
imul
ss
cwde
cmp
jl
fadd
mov
in
jl
pop
xchg
cvtps2pd
fs
out
add
loopne
xor
ror
add
in
jle
add
or
jmp
mov
xchg
adc
in
sub
adc
cmp
and
loop
sub
cmp
js
adc
add
lock
enter
push
(bad)
scas
jo
add
sub
sub
push
sbb
sbb
(bad)
or
movs
push
jecxz
push
cmp
rol
aam
xor
test
or
fsubrp
push
add
mov
dec
cmp
test
mov
push
add
retf
sbb
mov
test
outs
jo
inc
sub
inc
add
psrlq
or
xor
dec
pop
push
sub
dec
xor
inc
dec
mov
sbb
call
push
dec
push
mov
push
pop
dec
stos
push
xor
rcl
fbld
jo
sbb
xchg
inc
call
rep
test
pop
jo
xchg
xchg
dec
push
lock
je
pusha
mov
sub
int3
in
add
inc
sar
push
das
loop
and
rol
sbb
icebp
ror
xchg
xchg
or
xor
out
inc
in
dec
or
mov
mov
or
jo
shl
je
jo
mul
add
(bad)
out
and
lahf
xor
push
mov
leave
and
call
push
inc
movs
pop
ficom
dec
adc
nop
(bad)
push
pop
shr
int3
(bad)
sbb
dec
inc
out
loopne
imul
jnp
sbb
mov
dec
sub
mov
push
dec
xchg
sub
scas
arpl
xlat
jecxz
mov
fistp
sub
ins
ins
nop
pop
js
xor
xor
sub
mov
pop
pushf
(bad)
test
in
pop
sbb
cmp
sbb
add
clc
push
xchg
(bad)
fld
fadd
imul
aad
fld
inc
add
push
imul
jecxz
fsub
mov
fs
sbb
jl
or
pop
add
(bad)
cmp
nop
fisttp
xchg
inc
sbb
jns
or
sbb
cmovge
inc
fimul
int3
cmp
retf
mov
sbb
loop
movs
(bad)
cmp
gs
or
cmp
stos
pop
stc
popa
inc
addr16
xor
sbb
sbb
icebp
fld
or
adc
inc
sbb
addr16
daa
adc
sbb
fadd
sub
jo
sub
ins
adc
adc
cmp
xchg
ins
push
adc
adc
pop
inc
ds
mov
pop
inc
sbb
mov
sbb
sbb
loopne
adc
sbb
sub
sbb
xchg
push
sbb
inc
adc
dec
xchg
aad
rcr
mov
mov
test
daa
mov
(bad)
movs
pcmpgtb
data16
repnz
mov
sbb
(bad)
cdq
xor
inc
imul
push
cmp
add
xor
dec
call
jmp
and
sbb
inc
push
fidivr
dec
cmc
push
lea
jecxz
or
xor
or
and
xor
or
fldenv
xlat
gs
pusha
cmp
cmp
xchg
icebp
icebp
mov
or
sbb
movs
push
mov
or
adc
cmp
adc
jns
ins
rcr
fsubr
fcomp
out
repnz
or
or
adc
cmp
retf
mov
jno
jns
mov
jp
in
ret
dec
div
xchg
out
sbb
xchg
lock
or
mov
sbb
out
inc
inc
div
loope
pop
dec
fucomip
and
imul
(bad)
and
in
cmp
cmp
cmp
adc
arpl
add
or
inc
ret
lock
adc
cmp
iret
add
inc
or
ins
call
adc
adc
sub
add
repnz
adc
xchg
and
dec
sahf
sub
inc
and
repnz
cwde
inc
or
repz
or
mov
enter
sbb
jns
adc
cwde
mov
add
xor
ins
addr16
test
(bad)
lea
loopne
inc
test
nop
retf
mov
repnz
inc
adc
addr16
fwait
cmp
mov
adc
loope
in
test
fdiv
ins
mov
push
in
jge
adc
loope
test
xchg
test
push
adc
fisttp
adc
fisub
jge
sbb
loope
inc
addr16
bound
adc
test
pusha
adc
loope
xchg
jge
adc
shl
data16
jb
movs
push
fsub
dec
shl
daa
mov
cld
pop
jns
test
xor
ins
pop
in
cmp
cmp
test
js
lods
jbe
cmp
and
(bad)
adc
jb
in
call
mov
out
push
imul
ret
(bad)
lock
(bad)
out
adc
xchg
(bad)
outs
xchg
test
jecxz
inc
xchg
in
(bad)
lock
jb
pop
mov
hlt
xor
retf
xchg
aas
test
clc
enter
jg
pushf
cld
inc
jb
inc
cwde
mov
push
mov
nop
test
or
add
mov
or
mov
das
mov
xor
test
mov
and
inc
dec
push
cmp
sti
xchg
hlt
repz
sub
fsub
in
cld
pop
or
and
in
nop
or
or
mov
stos
pcmpgtb
and
adc
cmp
sbb
xchg
dec
dec
sbb
and
cdq
in
and
sub
cmovns
sub
int3
jecxz
enter
dec
call
and
lock
hlt
xchg
dec
dec
es
clc
cld
outs
cs
cld
add
(bad)
add
xchg
dec
dec
add
or
adc
xor
div
pop
pop
mov
adc
adc
xchg
push
and
jb
or
or
mov
loope
sub
(bad)
mov
pop
mov
bnd
xchg
sbb
test
leave
retf
xchg
dec
sbb
mov
xor
cwde
mov
and
ficom
dec
push
nop
sub
mov
sub
fsub
mov
in
leave
xor
or
add
push
mov
pop
sbb
and
or
sbb
pop
and
sub
or
or
loop
add
adc
xchg
(bad)
imul
test
mov
pusha
and
dec
xor
test
in
mov
test
shl
xor
cmp
nop
cli
adc
movups
mov
add
lods
sub
cmp
jle
sar
cmp
sti
retf
and
push
movd
movq
(bad)
mov
jg
sbb
ror
in
ss
sbb
sbb
add
mov
push
call
nop
jl
adc
add
and
mov
xchg
pusha
mov
lods
sbb
sub
call
sar
fcom
(bad)
mov
jl
or
jmp
dec
pop
(bad)
in
call
mov
adc
xor
adc
sahf
sub
cmp
mov
adc
add
cmovae
adc
popf
add
xchg
or
jle
xor
add
and
fsubr
and
gs
push
lds
test
call
movs
jb
std
mov
call
popa
pushf
inc
mov
pop
fiadd
ss
int3
push
adc
in
leave
xchg
mov
and
jb
and
cwde
cmp
sbb
enter
inc
inc
push
jb
test
add
inc
push
nop
xor
add
mov
dec
pop
shr
and
add
and
ror
add
leave
adc
push
jns
add
push
rcl
and
jns
cmp
mov
cmp
xchg
sbb
dec
mov
adc
nop
add
lods
add
dec
sub
(bad)
pusha
sub
ins
jo
pop
inc
sbb
test
ds
push
mov
mov
ins
dec
es
or
xchg
pause
dec
and
mov
dec
leave
pushf
cmp
dec
leave
nop
movs
cmp
inc
dec
leave
nop
dec
sub
and
push
mov
rcl
cmp
rcr
mov
and
cmp
adc
sbb
push
js
and
aam
jb
cmp
push
mov
cmp
inc
es
xchg
jb
push
inc
inc
or
in
ss
test
in
das
js
sbb
jle
or
add
inc
or
inc
add
add
imul
push
pop
adc
adc
nop
xor
mov
mov
cld
sbb
cmp
dec
inc
inc
mov
sar
ins
add
mov
xchg
nop
add
mov
or
add
add
das
xchg
(bad)
scas
mov
(bad)
mov
enter
mov
cld
or
test
dec
add
sahf
data16
lock
push
stc
pop
mov
addr16
push
stc
pop
sahf
nop
hlt
xchg
add
repnz
sahf
retf
or
sbb
out
xor
iret
in
mov
mov
pop
sahf
retf
jae
ins
mov
out
test
nop
enter
in
int3
test
mov
sahf
retf
jae
rcr
(bad)
pushf
out
pop
loopne
in
aaa
cld
das
cmp
ins
ret
mov
nop
push
leave
and
test
inc
push
jb
dec
pushf
dec
test
in
pop
cmp
jb
sbb
in
lock
cmp
inc
push
cld
dec
or
push
sbb
and
and
push
cmp
jb
add
pop
push
pop
cmp
inc
push
push
sbb
mov
push
in
clc
scas
ins
call
sbb
and
les
jp
jp
jb
sub
hlt
jp
jnp
cmp
inc
or
sbb
jnp
sbb
and
xor
cmp
push
jb
jnp
jnp
jnp
pop
cmp
push
jnp
jnp
jnp
sbb
jnp
jnp
jnp
inc
push
jb
jnp
jnp
jnp
and
cmp
pop
push
retf
out
pusha
mov
dec
sbb
and
mov
push
jb
and
pop
cmp
inc
mov
xchg
sbb
rcl
push
jb
xchg
call
pop
cmp
clc
xchg
add
sbb
adc
enter
sub
fsub
pop
cmp
dec
xchg
push
adc
dec
pop
pop
cmps
push
out
js
sub
dec
xchg
ins
pop
rcpps
fiadd
fs
out
bound
dec
push
add
add
add
mov
xchg
inc
jne
nop
cs
pop
cdq
and
xor
push
call
hlt
sbb
fs
push
sub
cmp
add
mov
mov
jb
and
or
dec
nop
and
outs
addr16
test
mov
pop
or
xchg
sub
rol
lock
popa
js
inc
test
jmp
dec
(bad)
push
daa
(bad)
mov
cmp
stc
adc
loopne
out
bound
mov
and
pop
cdq
mov
pop
and
mov
(bad)
adc
mov
gs
stos
pop
cs
cdq
ret
cmp
bound
out
pop
imul
xchg
push
sub
das
pop
(bad)
scas
mov
mov
sbb
cwde
pop
cmp
ins
ss
pushf
mov
aad
scas
or
cmp
mov
addr16
repnz
jmp
dec
test
test
and
and
xor
add
addr16
or
test
imul
pop
iret
shl
lods
arpl
cmp
or
xor
dec
fcomp
daa
inc
push
scas
add
jne
jo
dec
sub
push
mov
xor
leave
push
cs
add
xchg
pop
pop
in
lods
ret
loopne
mov
pop
mov
xchg
das
or
adc
movs
mov
and
sub
mov
inc
or
test
andnps
or
push
fistp
ret
add
fisttp
fs
(bad)
in
push
scas
fs
pop
mov
aad
push
sbb
add
stos
xchg
jne
xor
push
test
push
xchg
inc
dec
push
adc
or
(bad)
fs
cmp
aaa
or
xor
inc
or
inc
pop
sub
push
dec
push
inc
push
pop
ret
push
retf
fwait
push
adc
cli
mov
out
fsub
jecxz
ret
sub
pop
inc
or
mov
dec
into
sbb
xor
sub
stos
fld
and
call
ret
mov
ins
or
xchg
retf
dec
adc
je
add
ins
push
test
fs
pop
push
pcmpeqd
clc
inc
mov
and
jge
inc
mov
rol
outs
fwait
(bad)
pop
mov
mov
ins
sub
adc
sbb
sbb
or
fwait
test
push
mov
(bad)
retf
pop
shl
(bad)
xchg
mov
out
ja
mov
cmp
jge
or
ds
sub
jmp
dec
and
pop
add
push
jl
cli
pop
loope
mov
push
mov
fnsave
outs
or
pop
inc
fdivr
inc
jecxz
fsub
cmps
jns
sub
push
adc
add
imul
add
mov
and
add
pusha
imul
clc
adc
fisttp
jp
fild
mov
or
adc
fwait
xor
imul
(bad)
sub
nop
dec
xor
test
inc
ret
jecxz
cmp
fld
lods
jb
dec
mov
dec
clc
ss
nop
jmp
push
cmp
fisttp
out
push
mov
call
iret
sub
(bad)
div
out
fcom
rol
test
inc
or
jnp
or
pop
sbb
cmp
xor
das
mov
inc
rol
add
push
jg
pop
fild
movs
(bad)
out
jnp
xor
add
ins
clc
sbb
lea
add
push
in
xchg
pop
cdq
xchg
retf
clc
adc
nop
sub
xchg
cs
push
in
das
sub
mov
pop
dec
push
xchg
add
pop
and
xor
es
hlt
dec
leave
xchg
push
cs
imul
dec
push
and
(bad)
dec
(bad)
clc
or
dec
pop
push
xor
and
mov
mov
mov
adc
(bad)
icebp
and
addr16
enter
dec
or
fs
icebp
push
(bad)
ficom
xchg
or
test
add
adc
xor
add
xchg
(bad)
ins
mov
int3
cwde
in
inc
or
dec
leave
xchg
hlt
outs
sbb
das
xor
mov
mov
add
call
jo
xchg
add
sub
into
ins
les
ja
or
jl
adc
clc
xchg
inc
cmps
mov
in
cmc
iret
repz
inc
mov
xor
cmp
repz
adc
popa
adc
cld
rcr
loopne
jmp
shr
movs
cmp
and
scas
stc
int
dec
and
cdq
sbb
aas
(bad)
aam
fucomip
adc
cdq
adc
stc
mov
bound
or
sbb
cmps
mov
loopne
ret
fild
fmul
sub
lock
and
rol
fdiv
inc
sbb
or
idiv
dec
add
fld
inc
dec
xchg
jne
and
push
sub
aaa
fisttp
xor
add
jp
adc
xadd
jle
icebp
push
inc
aaa
lea
fs
push
iret
add
xlat
leave
enter
ret
inc
inc
cmp
dec
movs
dec
inc
loopne
rcl
push
movs
div
mov
xor
pop
mov
outs
cmp
or
adc
push
emms
pxor
jnp
pop
popf
fcmovu
or
iret
mov
fimul
outs
push
add
mov
ins
dec
add
push
push
pop
or
pusha
les
aam
mov
jns
paddw
ret
sbb
jb
xchg
or
lds
jg
jb
adc
jno
add
mov
jle
add
jecxz
cmp
xor
ja
jo
xlat
mov
repz
push
xchg
jbe
loopne
push
data16
data16
sbb
xchg
fxch
and
lds
adc
mov
push
adc
adc
jae
rol
(bad)
push
sbb
addr16
inc
dec
cs
jo
adc
mov
icebp
add
adc
add
mov
nop
je
add
pop
adc
or
pop
sbb
adc
add
and
sbb
push
adc
pop
add
or
adc
fcomp
icebp
mov
lea
mov
sar
adc
xadd
add
mov
(bad)
enter
add
or
xchg
add
enter
or
add
enter
or
or
add
loopne
dec
enter
adc
xor
fst
push
or
in
mov
adc
adc
mov
push
push
dec
fisub
xor
push
pop
sbb
jb
mov
adc
lahf
xor
add
scas
sbb
jo
fs
sbb
lock
dec
pop
ins
adc
adc
add
mov
xchg
mov
popf
jmp
std
inc
pop
inc
cmp
aaa
mov
inc
ficomp
(bad)
xor
dec
cwde
or
cmps
std
rol
neg
add
adc
cmp
mov
mov
int
dec
push
call
retf
popa
out
out
stos
ins
ds
mov
hlt
aaa
mov
popf
push
into
ret
and
out
das
sbb
or
into
in
addr16
mov
and
fist
add
jge
jmp
or
add
adc
add
cmp
(bad)
mov
push
pop
mov
imul
outs
jne
popa
test
add
clc
sub
outs
cmp
xchg
jbe
into
mov
sub
pop
add
test
push
ror
fcmovnb
aad
jb
add
fisub
mov
mov
rcl
rol
add
mov
ror
(bad)
jl
adc
sbb
mov
xor
and
cmps
push
bound
ds
jl
inc
sub
or
sti
mov
data16
push
aad
push
loopne
iret
fisttp
sub
and
fst
iret
out
sahf
pop
push
xlat
into
fdivrp
rcl
rcr
imul
rep
sub
adc
pushf
call
xor
or
add
ins
inc
mov
xchg
movs
and
adc
jb
mov
pop
pop
call
pusha
pusha
ja
repnz
(bad)
pop
fst
stos
in
fstp
pop
pop
and
pop
push
enter
pop
fstp
xchg
xchg
xchg
data16
pop
pop
jnp
xchg
xchg
pop
pop
test
push
sub
fdiv
mov
in
gs
test
fbstp
dec
and
call
daa
mov
test
mov
daa
cwde
xchg
nop
mov
daa
daa
daa
mov
daa
js
jo
sbb
adc
pop
enter
aas
dec
xor
add
sub
add
adc
and
adc
jnp
dec
add
cdq
je
pop
add
arpl
xchg
and
add
leave
aas
and
daa
sbb
das
popa
push
push
sub
adc
addr16
mov
lahf
push
bound
in
sub
and
and
jb
ja
xor
dec
add
iret
xchg
outs
ror
sbb
jae
aas
sub
dec
jecxz
je
ins
jp
inc
sbb
push
data16
ja
adc
xor
ins
cmp
jae
gs
test
mov
outs
(bad)
sbb
add
imul
sbb
ins
test
retf
retf
bswap
xchg
xchg
xchg
ins
movs
fst
test
popf
sbb
push
mov
int
and
(bad)
sub
test
add
inc
sbb
icebp
inc
inc
push
nop
ucomiss
int
and
inc
into
mov
mov
and
mov
popf
pop
bound
fiadd
and
inc
or
inc
sbb
sbb
nop
js
cmp
js
ss
popa
mov
xchg
and
mov
xchg
outs
inc
mov
leave
fldcw
iret
and
pop
inc
imul
int3
jbe
xchg
retf
int
cmp
push
or
imul
popa
fs
test
adc
mov
lods
ret
xchg
pop
ds
xor
inc
and
sub
push
imul
jecxz
cwde
inc
sbb
fstp
cmc
and
ret
movs
dec
mov
and
loope
push
sbb
loopne
or
sbb
js
addr16
jecxz
and
adc
call
jecxz
inc
sub
inc
sub
jmp
xor
sbb
inc
inc
jmp
pusha
movs
cs
or
shr
sbb
or
or
adc
sbb
sub
cmc
push
push
dec
dec
or
leave
mov
sub
sbb
js
or
in
in
adc
push
retf
sub
add
pop
dec
or
dec
fs
outs
idiv
bound
push
mov
cmp
nop
(bad)
outs
push
fcmovnbe
sub
mov
dec
fstp
fwait
push
xor
outs
add
push
mov
divps
loopne
cmp
mov
or
cmp
push
or
mov
xchg
fs
sub
fs
js
ins
fdiv
sub
sti
push
ret
jne
add
or
push
mov
or
jmp
sbb
add
mov
dec
or
bound
dec
arpl
push
shl
cmps
out
enter
ins
adc
jns
bound
mov
lea
mov
mov
inc
push
mov
push
sub
stc
add
sbb
add
or
outs
or
add
outs
mov
imul
shr
xchg
loop
mov
rol
bound
pop
mov
pushw
or
mov
cmp
stc
daa
fwait
push
test
outs
gs
pop
imul
or
daa
or
sti
xchg
pop
je
je
jne
daa
jne
sub
pop
hlt
ja
or
xor
mov
adc
sub
sbb
into
addr16
out
loope
push
xor
inc
and
mov
jp
arpl
data16
int
(bad)
sub
pushf
fs
shl
sub
pop
je
mov
outs
popa
nop
test
fwait
std
and
jl
pop
js
imul
fcmovnb
pop
out
ins
es
lock
mov
jp
pop
mov
mov
fs
pusha
retf
sub
jl
aaa
dec
cmc
nop
ins
(bad)
push
mov
sbb
adc
inc
mov
out
test
(bad)
xchg
pop
or
cmp
lds
jl
push
mov
push
cld
cld
sti
add
pop
sar
xor
inc
neg
jmp
push
add
jle
repnz
ins
sbb
add
or
loopne
mov
or
jg
xchg
clc
call
or
adc
or
cmc
mov
sub
pop
fistp
or
inc
mov
push
cmp
adc
sbb
ins
stos
in
inc
repz
mov
fnstcw
fisub
cmp
sbb
leave
ja
and
sub
cmp
dec
adc
rol
in
nop
ins
out
ins
arpl
rcl
daa
inc
jns
adc
not
xchg
js
sbb
jno
cld
adc
(bad)
mov
mov
xchg
(bad)
xor
and
sbb
adc
push
mov
cmp
xor
push
sub
(bad)
mov
and
sbb
add
mov
add
or
icebp
lods
mov
aaa
psadbw
xlat
in
iret
mov
push
inc
sar
cmp
cmp
jb
cmp
xor
dec
sbb
push
bound
ins
ret
ret
add
es
ins
ins
adc
fist
mov
cmp
clc
add
mov
jp
and
mov
mov
(bad)
xor
fcomp
push
inc
ins
and
sub
aas
mov
shl
lea
mov
or
jnp
push
and
jns
test
sti
(bad)
xchg
imul
dec
jge
sub
data16
mov
je
pop
sar
mov
je
cli
add
je
add
loopne
ficomp
pop
pop
mov
sub
cmp
add
adc
push
sbb
xchg
test
scas
aam
stos
and
leave
ss
inc
mov
fld
add
pop
vcvtss2si
jmp
sbb
inc
pusha
sbb
sub
xchg
aam
aas
aad
cwde
leave
or
adc
sub
cmp
cwde
sbb
dec
add
cmp
les
xor
shr
mov
ss
cdq
sbb
or
inc
test
push
fst
fs
and
jb
xchg
out
lds
bound
adc
jbe
sti
dec
mov
inc
sub
call
ror
data16
add
call
xor
add
test
push
sar
sub
imul
fs
pop
fimul
adc
add
leave
add
sbb
fld
mov
in
(bad)
push
add
cmp
pop
mov
add
xor
sti
fadd
adc
add
fld
jns
es
and
sub
jae
in
pop
jecxz
push
push
inc
ret
cs
or
adc
outs
lea
mov
inc
lea
shr
lea
xchg
ins
jecxz
js
add
push
jp
mov
in
rcl
mov
push
add
or
dec
cmps
xchg
jo
jo
lahf
push
mov
sbb
call
fsub
jmp
sub
shl
pop
iret
gs
gs
ja
pusha
jl
jno
pop
pop
cmp
cmp
jbe
dec
cmp
push
sbb
popa
test
mov
scas
mov
pop
adc
pop
adc
pop
popf
push
mov
sub
adc
in
repnz
ins
or
addr16
mov
dec
sbb
inc
pop
mov
and
ins
arpl
sub
enter
dec
adc
sti
test
adc
mov
jb
inc
adc
xor
cmp
xchg
ins
pop
mov
leave
cmp
mov
rol
sbb
mov
cwde
and
lea
pop
fwait
sbb
mov
pushf
mov
outs
cdq
imul
in
dec
punpcklwd
cmp
jae
std
jnp
xor
aad
cli
mov
bound
pop
xchg
mov
data16
pop
jb
ja
ficom
and
mov
loopne
mov
adc
and
ja
gs
sbb
mov
pop
fs
rcr
adc
mov
dec
jne
dec
jmp
sbb
call
sbb
mov
jp
aaa
(bad)
jno
mov
ds
and
rcl
push
adc
ins
lds
loopne
xchg
cmps
or
nop
xchg
and
or
cmp
sbb
or
inc
and
imul
pop
mov
xor
ins
and
je
std
mov
add
mov
mov
or
xchg
ins
lods
std
xchg
ins
mov
mov
ret
pop
mov
imul
cmp
adc
mov
adc
sub
mov
rcr
ror
sti
push
and
cwde
in
(bad)
rol
inc
in
add
fbld
adc
add
nop
fldpi
sub
add
sbb
push
cld
adc
sub
mov
cmp
aad
(bad)
pusha
movs
or
in
add
xchg
ins
jmp
cld
xor
jne
jmp
xor
xchg
lds
or
lds
push
fsubr
cmp
mov
mov
pop
adc
(bad)
and
stc
and
adc
ins
adc
ins
add
or
repz
pop
es
sti
pop
mov
cmps
jnp
and
out
sahf
sub
sbb
inc
addr16
lahf
and
pop
xchg
sbb
and
inc
das
and
jb
cmp
fs
adc
into
mov
imul
push
dec
stos
pcmpgtb
outs
cwde
ss
test
jp
es
pop
ror
sub
loop
(bad)
cmps
mov
xchg
shl
xchg
cli
iret
and
fld
adc
ins
sbb
dec
imul
mov
sub
sbb
ins
inc
push
sub
inc
inc
and
mov
or
icebp
xor
sub
inc
or
mov
jns
retf
aas
jmp
dec
and
(bad)
adc
pop
sahf
and
xor
xor
lock
lock
jae
mov
mov
adc
dec
sub
push
mov
push
push
xor
cmp
add
retf
into
dec
or
ja
jmp
xor
jne
and
aad
fldenv
add
iret
stos
and
xchg
push
and
in
ret
pop
and
cmp
sub
add
inc
outs
mov
int
ret
js
or
inc
and
hlt
nop
(bad)
in
jl
sub
add
mov
sub
xor
cmp
jae
sbb
ficom
out
ficom
inc
push
cmp
adc
(bad)
(bad)
mov
inc
pop
mov
sbb
add
sbb
in
or
cwde
mov
fcomp
and
es
loopne
outs
or
cmp
xor
fs
int
adc
xchg
call
sbb
imul
inc
adc
pop
jl
fdivr
sbb
cmp
jne
sysenter
sub
pushf
pushf
pushf
and
adc
xor
shl
mov
sub
push
mov
mov
adc
sbb
loop
jo
sti
cmp
jge
rol
xor
and
cmp
or
adc
sbb
mov
loop
sbb
or
or
lock
iret
shl
(bad)
aaa
fcomp
push
outs
jg
jnp
sub
add
jmp
test
cmp
ins
jnp
(bad)
jmp
lea
add
sub
cdq
(bad)
cmp
ja
out
add
adc
test
pop
leave
and
and
xor
or
mov
dec
jne
adc
fwait
hlt
in
pop
jmp
iret
push
clc
aad
add
sub
or
ret
add
add
add
ins
sbb
and
mov
mov
jmp
jecxz
fstp
in
push
ins
sbb
fisub
jnp
sbb
dec
dec
sbb
repz
mov
jb
adc
mov
iret
repz
mov
and
clc
jae
cmp
pop
cli
ins
push
repnz
mov
add
rcl
in
push
sbb
and
pop
cmp
adc
jmp
xchg
mov
fwait
adc
in
cmovo
adc
retf
inc
fcomip
and
dec
sbb
sub
scas
fisub
repnz
or
jne
dec
pop
sbb
popa
mov
sub
pushf
add
sbb
inc
cli
xor
push
xor
aaa
inc
pop
sbb
stc
pop
mov
test
ja
or
fwait
sbb
enter
or
sbb
stc
adc
loopne
xor
movs
jns
and
dec
outs
dec
ins
dec
outs
add
or
adc
sbb
add
scas
(bad)
std
sbb
popf
jbe
daa
clc
call
pop
inc
xor
push
pop
cmp
enter
cmp
fcom
scas
pusha
call
inc
scas
sbb
into
mov
inc
jge
fld
xchg
ss
push
dec
stos
xchg
ins
cld
gs
pop
in
cmp
mov
and
(bad)
mov
icebp
jb
jns
sub
xchg
out
dec
jnp
mov
mov
jmp
xor
repz
repnz
or
xor
and
std
push
and
fld
inc
std
sub
xchg
daa
adc
sbb
jae
ret
fst
dec
mov
mov
repnz
ja
and
or
jle
nop
out
in
jmp
cmp
jne
pushf
pushf
pushf
fmul
xor
and
fistp
sbb
mov
jns
mov
jno
push
xchg
or
loope
popf
ja
dec
add
enter
jae
mov
(bad)
sbb
sbb
scas
adc
cmp
xchg
and
add
jns
inc
jmp
cmp
fist
fild
ret
movs
inc
push
sbb
cmp
xchg
pop
adc
or
sbb
ss
loope
pop
mov
pop
retf
pop
mov
(bad)
dec
or
inc
sbb
sub
and
adc
sub
add
or
ins
jecxz
mov
sub
sub
xchg
ss
xor
pop
jb
leave
inc
arpl
cs
enter
sub
pop
cmovb
int
out
push
and
mov
or
popa
test
mov
loope
xor
leave
ss
add
add
fs
or
std
inc
and
jl
push
in
int3
sbb
pop
shr
and
in
fs
daa
les
in
or
pop
iret
pushf
sbb
icebp
xor
in
nop
push
mov
out
xchg
push
call
push
add
inc
jno
jle
adc
dec
mov
pop
lea
fld
dec
ret
call
push
rcr
sbb
icebp
dec
mov
dec
adc
add
sub
lea
xor
add
jmp
in
popa
sub
les
fyl2x
and
ins
pop
(bad)
add
sub
mov
ins
mov
pop
(bad)
pop
and
test
jmp
xchg
ins
arpl
into
push
xchg
in
pop
mov
cmp
leave
ss
sub
inc
in
mov
int3
inc
xchg
ins
cmp
xchg
inc
mov
or
add
xchg
nop
aas
and
and
retf
fist
ja
loope
dec
push
or
sub
dec
pop
call
shl
xchg
arpl
pop
call
das
push
leave
ss
in
sti
sar
sub
xor
out
test
out
(bad)
out
jp
push
repz
add
ins
ds
mov
add
imul
add
sar
int
repz
or
outs
or
xchg
nop
push
jmp
jmp
andnps
(bad)
fild
loopne
or
pop
dec
adc
sbb
jl
mov
inc
int3
add
jmp
push
xor
mov
dec
xchg
scas
and
pop
inc
sbb
add
mov
xor
sub
xor
pop
fs
test
sub
inc
out
xchg
ins
jecxz
and
sbb
cmp
bound
dec
mov
inc
stos
and
ins
test
mov
and
int
adc
or
rcr
ss
push
clc
sub
adc
rcl
(bad)
sub
xchg
ins
lods
dec
adc
cli
adc
jle
bound
or
std
stos
jmp
xchg
jb
adc
sti
sbb
sti
lock
mov
xor
sbb
mov
mov
loope
std
jae
cmps
loop
mov
outs
inc
cmp
xor
movs
shl
and
adc
fwait
jnp
add
(bad)
cwde
sub
jo
mov
inc
sbb
or
mov
adc
or
or
aaa
adc
(bad)
jo
mov
pop
mov
push
pop
dec
and
jb
pop
jecxz
outs
sub
inc
adc
lea
adc
pop
sbb
jl
jae
add
or
mov
iret
push
xchg
and
in
mov
outs
sub
neg
sub
pop
adc
push
fdivr
adc
mov
add
sub
iret
pop
mov
sti
ror
loop
push
pop
mov
xor
inc
sbb
cld
xchg
ins
and
or
xchg
xor
pop
mov
mov
and
xchg
push
outs
cmp
push
xchg
sub
mov
in
leave
and
mov
push
(bad)
xchg
ins
arpl
add
or
sbb
and
push
add
scas
and
adc
imul
stos
xor
and
push
ret
rol
loope
add
es
ss
call
je
sbb
adc
and
ds
inc
adc
jmp
dec
sbb
stos
or
inc
xchg
fld
mov
adc
push
dec
or
sbb
sub
sbb
nop
mov
or
xor
add
mov
dec
das
add
mov
dec
je
dec
je
jmp
daa
add
jmp
dec
mov
ret
push
mov
xchg
cld
sbb
pop
arpl
xchg
dec
xor
fild
pop
es
inc
jbe
sub
retf
loopne
das
inc
pop
push
test
sbb
ret
pop
mov
inc
(bad)
xor
jo
push
add
fs
or
inc
or
sub
pop
jbe
or
or
iret
enter
jbe
sub
out
jl
dec
outs
sub
push
inc
je
mul
add
lds
aaa
or
je
ficomp
pop
xchg
cmps
push
add
dec
lahf
arpl
loopne
(bad)
dec
test
enter
push
push
aaa
leave
ss
dec
cmp
jns
ja
dec
popa
jmp
xchg
ins
jecxz
pop
push
fsub
repz
loop
inc
push
icebp
stc
jnp
ss
push
push
mov
push
stc
movs
dec
add
push
(bad)
lea
mov
lea
fld
cdq
mov
pop
mov
icebp
push
repz
mov
add
xchg
or
jae
sub
fwait
pop
mov
adc
fmul
ss
dec
mov
pop
pop
jl
xchg
and
and
lock
(bad)
mov
(bad)
or
shl
push
sub
push
out
jge
data16
xchg
jmp
mov
sub
mov
repnz
fist
inc
mov
jmp
lods
movs
jg
dec
xor
jb
mov
or
or
or
adc
out
sbb
and
add
mov
in
or
adc
and
add
add
daa
mov
inc
sub
pushf
sbb
lods
leave
pop
and
push
xor
jg
leave
ss
mov
popf
pop
lods
add
mov
je
cmps
fistp
jmp
jbe
fld1
jecxz
jl
and
dec
sub
(bad)
sbb
sub
and
xor
dec
lea
hlt
pushf
xor
push
push
xchg
or
jge
dec
or
mov
scas
outs
test
inc
dec
mov
movs
scas
sub
mov
xchg
shr
imul
push
enter
rcl
mov
ins
arpl
out
push
fs
sub
push
add
inc
jb
fisttp
xor
and
sbb
enter
push
ja
jge
or
imul
mov
loop
pop
leave
adc
daa
int
jmp
jmp
sbb
dec
icebp
mov
cmp
inc
pop
mov
sbb
mov
outs
and
and
pop
sbb
shr
movs
dec
mov
mul
dec
mov
and
ins
popa
and
or
push
xor
pop
inc
mov
call
and
cmc
and
and
push
cwde
cmps
in
sar
shl
push
fstp
inc
jl
jns
sti
in
mov
ins
arpl
xchg
pushf
test
mov
fistp
in
pop
push
or
and
pop
nop
push
rol
cmp
push
stos
pop
push
pop
add
sub
in
fs
jb
lods
jb
pop
int
nop
sub
xchg
ins
lea
movs
jp
sbb
nop
arpl
dec
inc
cmp
les
sub
and
xchg
bound
cmp
or
or
pop
ins
pop
mov
adc
aam
pop
adc
ss
shl
lock
or
mov
mov
jnp
fld
mov
inc
aas
call
in
rcl
jns
mov
add
pop
fwait
jge
lds
dec
jecxz
adc
push
pop
ins
add
push
fisubr
inc
adc
or
dec
or
jne
call
sbb
push
jnp
xchg
jmp
sub
add
xchg
dec
retf
sbb
test
dec
fcomi
(bad)
jmp
(bad)
xor
and
cmp
add
je
sbb
mov
jmp
sbb
icebp
in
lds
jb
out
dec
mov
jno
iret
rol
ins
mov
jecxz
sbb
rcl
mov
dec
pop
dec
ins
ret
push
or
(bad)
(bad)
xchg
rcr
or
cmp
sbb
fild
pop
ss
sub
xor
dec
adc
jecxz
pop
or
stc
pop
call
add
pop
sbb
adc
arpl
cld
jle
clc
ficom
inc
adc
dec
sbb
xchg
sub
pop
inc
sar
loope
iret
inc
jns
push
ja
mov
sub
das
fptan
dec
mov
idiv
leave
add
rol
retf
je
mov
retf
loopne
push
daa
dec
pusha
mov
jne
or
fmul
jnp
or
sti
shr
scas
cmp
(bad)
bound
fcmovnu
or
and
mov
test
add
dec
sub
shr
sub
push
add
and
jle
push
push
sbb
xor
cmp
add
add
sub
into
add
call
jecxz
fcmovb
jle
mov
outs
out
popf
or
dec
push
jne
adc
inc
pop
lods
xor
xchg
or
jmp
aad
(bad)
sti
or
inc
movs
sbb
mov
fdivr
loopne
and
repz
ins
inc
fsub
cmp
stc
in
jmp
mov
fucomi
or
adc
inc
inc
cmp
jbe
sbb
mov
ins
dec
add
int
add
adc
and
inc
mov
xchg
ror
retf
lea
xchg
aam
jae
sbb
push
add
cmp
ror
inc
sbb
sbb
leave
out
mov
mov
push
jecxz
jge
addr16
ss
cdq
or
out
xchg
mov
xchg
and
xor
pop
mov
btr
inc
call
es
push
mov
jecxz
adc
sbb
push
push
fs
pop
push
dec
movs
and
mov
leave
ss
pop
cmp
and
xchg
outs
loope
test
repnz
mov
adc
push
repnz
pop
shl
fimul
fld
adc
dec
es
push
and
cs
sub
js
xchg
test
lock
ss
add
ins
ret
mov
(bad)
mov
sub
and
arpl
ins
and
jb
ins
jecxz
add
mov
mov
sbb
jbe
jno
mov
dec
rcr
mov
enter
ins
js
gs
mov
adc
mov
sbb
repz
sbb
inc
in
lea
xchg
mov
mov
pop
xor
clc
mov
mov
add
in
jb
(bad)
outs
dec
jns
jae
inc
ss
push
ret
ss
call
retf
push
into
aam
pop
cld
jp
mov
mov
jmp
clc
push
mov
add
and
add
mov
nop
mov
ins
jb
sub
and
push
(bad)
sbb
jo
adc
dec
cmc
call
jmp
enter
stos
pop
rcl
push
and
sbb
shr
pop
ret
ss
push
shl
mov
test
cmp
adc
or
mov
and
aaa
sbb
xchg
inc
dec
fcom
push
push
les
loopne
in
jns
fld
in
push
fmul
fstp
mov
sub
push
repnz
out
push
fcom
add
fcom
add
jbe
clc
shl
lea
mov
sub
mov
or
ror
sahf
out
pop
sbb
mov
enter
xor
pusha
and
outs
adc
sub
jns
retf
int
push
and
mov
mov
inc
adc
lea
shr
add
les
push
mov
jecxz
mov
stc
sbb
sbb
sar
dec
and
add
fcomp
push
xchg
dec
or
or
and
sbb
add
jbe
clc
ins
jl
popa
and
xor
pop
shr
int3
nop
ror
pop
cmp
jne
or
loop
ss
dec
lock
add
sbb
sub
call
cwde
inc
push
sbb
ret
call
dec
and
adc
push
adc
enterw
ret
pop
pushf
push
push
ror
mov
push
ins
mov
mov
les
xchg
pop
aaa
fsub
sub
inc
cmp
jl
add
cmps
push
add
enter
loope
add
stos
in
stos
mov
add
dec
or
dec
add
(bad)
les
cmp
sbb
or
or
daa
push
jmp
iret
pop
fcmovbe
ins
je
dec
sbb
shr
fdivrp
add
push
pushf
mov
loope
jo
dec
sub
dec
jecxz
es
sub
and
and
enter
cmp
dec
in
mov
push
push
dec
xor
fidiv
call
cmp
(bad)
cwde
and
ss
push
jp
addr16
push
test
dec
pusha
vmovaps
shr
mov
xor
repnz
loopne
movs
hlt
adc
inc
(bad)
ins
xor
je
cmps
mov
sbb
pusha
inc
dec
mov
mov
or
add
add
sti
sahf
pusha
jecxz
out
stos
cmp
sbb
push
dec
sbb
xor
sti
sub
mov
push
ins
xor
test
xchg
mov
rol
add
jns
push
jl
cmp
add
stos
leave
nop
ret
je
xchg
add
and
loop
cld
jle
fs
call
sub
jae
ret
or
shr
ret
and
outs
je
dec
and
into
add
cmp
jbe
cli
mov
jecxz
mov
dec
jne
idiv
imul
and
inc
dec
ficom
add
and
ret
fwait
in
push
retf
pushf
mov
and
(bad)
sub
and
dec
pusha
sbb
mov
clc
xor
scas
ret
inc
mov
scas
sbb
ins
shr
test
push
adc
rcr
mov
lods
js
(bad)
and
adc
push
loop
test
ret
lahf
push
aam
xor
xchg
pop
or
jmp
mov
scas
jmp
jmp
(bad)
jecxz
mov
ret
addr16
sub
inc
xchg
pop
mov
inc
push
mov
sub
shl
nop
outs
mov
mov
ror
jae
push
push
hlt
or
push
mov
add
outs
jae
ror
out
sub
and
xor
or
or
into
adc
mov
push
xchg
or
fsubr
xor
rol
mov
pop
sub
dec
dec
add
sub
jae
adc
retf
mov
jmp
sub
mov
jp
adc
shr
cld
adc
add
addr16
dec
mov
inc
mov
mov
ret
in
cld
and
ins
out
adc
pop
cmp
shl
cmp
xor
dec
gs
mov
mov
int
int
cmp
sub
dec
mov
lods
mov
pushf
retf
mov
mov
pop
xor
bound
test
loope
cld
es
or
cmp
pop
mov
xchg
mov
call
ins
sub
shr
pop
jbe
jmp
pop
cmp
pop
add
ja
jg
push
jne
enter
and
add
inc
mov
mov
pop
mov
push
jns
push
cmp
inc
lea
pop
fcomp
add
xor
inc
xchg
and
outs
ror
lods
cmp
rcr
adc
pop
mov
push
inc
(bad)
fisttp
iret
cli
adc
xchg
push
in
xchg
xchg
repnz
pop
mov
xchg
sub
push
movs
inc
test
in
or
scas
xor
mov
lea
scas
push
sahf
add
outs
inc
fst
call
(bad)
mov
jo
jg
jb
jo
jl
push
std
(bad)
out
shr
adc
sti
sub
femms
inc
ins
pop
jl
add
push
sahf
cmps
nop
and
js
mov
inc
add
cdq
sbb
mov
call
ror
sbb
mov
dec
sar
outs
pop
cdq
mov
pusha
mov
adc
dec
cmp
push
sub
movs
pop
or
push
adc
inc
sub
imul
call
jmp
je
clc
and
mov
adc
test
fdivr
into
push
push
push
sbb
stc
daa
push
cli
xchg
adc
rcr
mov
out
mov
jbe
dec
xor
inc
mov
lods
and
mov
inc
out
int
sbb
cmps
and
stos
or
jmp
movs
cmc
mul
jmp
dec
mov
pop
lods
stc
stc
xchg
ins
ret
cmp
sub
mov
popa
aam
mov
daa
mov
out
mov
sub
ja
mov
fcomp
(bad)
push
sbb
pop
ins
jecxz
sub
xchg
jae
(bad)
mov
jnp
push
sub
adc
frstor
pop
mov
jns
aaa
xchg
(bad)
ins
jl
jmp
mov
jp
nop
stc
mov
(bad)
push
cmp
test
and
cmp
pcmpeqb
lods
jmp
and
cmps
or
sub
push
mov
cdq
repz
xchg
ins
jecxz
jg
xchg
ins
ret
push
sub
jecxz
xor
mov
popa
add
xor
mov
add
cli
xchg
mov
xchg
mov
pusha
stos
pushf
mov
mov
dec
jl
fs
mov
popf
loope
ins
arpl
fcom
lods
out
cmp
cmp
sub
mov
cmp
dec
sti
adc
pop
xor
sub
or
stos
pop
add
sbb
push
pop
jmp
sub
dec
ret
sbb
cld
cs
push
pop
push
sbb
sahf
or
(bad)
div
cs
xchg
sbb
into
jle
fidiv
jmp
jmp
cmp
paddb
(bad)
jle
fisub
mov
dec
jmp
scas
push
popf
xor
dec
or
xchg
ins
in
pop
xchg
sub
xchg
dec
cmp
daa
cmp
or
sbb
push
or
push
add
add
mov
add
fidiv
adc
fild
daa
jge
xchg
ins
jecxz
sahf
data16
or
push
push
ja
and
push
and
jno
dec
out
(bad)
jb
jge
leave
ss
adc
adc
sti
add
or
dec
ficom
iret
or
cmps
jl
(bad)
ja
sbb
push
xor
in
or
daa
push
fmul
sub
fsubr
dec
xor
sub
ror
sar
rcr
(bad)
lock
loop
lods
nop
adc
das
(bad)
mov
mov
sub
adc
add
cmp
mov
dec
adc
pop
sbb
sbb
or
sbb
pop
add
mov
and
inc
jmp
mov
mov
jge
ss
cmp
adc
aas
dec
ret
jmp
ret
and
rcr
cs
or
bts
cdq
add
les
and
(bad)
leave
(bad)
or
outs
add
add
add
sbb
rol
xor
repnz
out
sbb
sub
add
push
repz
imul
cmp
and
ins
jecxz
add
sbb
sub
add
xchg
mov
or
pop
and
push
and
cld
xchg
ins
sbb
ror
adc
push
xor
mov
sbb
outs
cmp
mov
or
push
sar
jge
sbb
into
jns
hlt
loopne
mov
xchg
ins
mov
rol
inc
inc
inc
jno
inc
leave
dec
fld
cld
dec
dec
call
push
rcl
push
lods
xlat
jne
loop
repnz
sar
nop
imul
inc
mov
rol
retf
ret
adc
lea
cld
das
push
pop
adc
nop
add
loop
in
ins
lods
jo
in
mov
xchg
out
ret
mov
clc
or
mov
sbb
cmp
inc
mov
inc
push
test
in
xchg
dec
xchg
sub
xor
sbb
xor
sub
ins
in
rol
jg
ins
cdq
sub
mov
mov
fs
dec
or
dec
sub
popa
dec
xchg
mov
mov
sub
inc
push
push
fstp
js
or
push
cmp
and
push
mov
jle
mov
and
pop
add
test
test
xchg
xchg
ins
mov
mov
xchg
add
mov
push
dec
jmp
xor
mov
dec
jle
ss
cwde
movs
pop
jns
das
dec
outs
dec
ins
dec
outs
or
dec
and
or
xchg
pop
into
cmp
jnp
pop
into
xor
sbb
movs
inc
adc
cmps
outs
pop
enter
mov
stos
fidiv
jne
mov
leave
dec
fadd
inc
not
xor
cli
xchg
sbb
out
cmp
sahf
cmp
dec
fisttp
add
cmp
dec
addr16
add
xchg
or
inc
push
or
cmps
xchg
lods
gs
mov
ins
jecxz
jnp
in
dec
cld
mov
loopne
cdq
cmp
adc
inc
rcr
or
std
adc
mov
push
out
shl
pop
enter
ins
cdq
cmp
jbe
adc
push
add
add
sub
mov
and
popf
fwait
xchg
pop
sbb
repnz
data16
xor
test
shr
sub
add
fcomp
in
ins
loope
call
jo
xchg
add
mov
(bad)
mov
push
dec
push
fisttp
inc
cmp
pop
cs
scas
sti
inc
sub
inc
push
sub
pop
push
inc
push
retf
and
ins
mov
popa
cwde
pop
jle
sub
mov
mov
(bad)
js
call
push
rcr
pop
xor
or
mov
mov
hlt
sub
loop
pop
imul
arpl
ins
daa
clc
jg
sbb
adc
adc
lea
test
ret
push
sbb
dec
adc
push
ja
mov
ins
push
pop
add
das
mov
cld
adc
push
std
stos
repnz
inc
and
imul
adc
mov
scas
inc
addr16
(bad)
and
cmp
popa
retf
push
adc
pop
pushf
add
xor
test
scas
aad
pop
sar
cmp
sub
add
sub
bound
fld
(bad)
aad
dec
xor
lds
or
iret
fs
inc
sub
loope
adc
xchg
adc
adc
ret
imul
(bad)
test
scas
and
push
call
add
xor
push
shr
inc
adc
test
not
cli
dec
jo
add
adc
loopne
xchg
xchg
inc
adc
mov
sub
push
sub
mov
addr16
and
mov
data16
xor
inc
sub
imul
jne
enter
xchg
(bad)
aas
div
mov
inc
ds
stc
xchg
xlat
mov
mov
mov
mov
pop
mov
inc
enter
push
in
daa
stc
add
dec
mov
call
inc
sti
xchg
sbb
(bad)
outs
shr
out
enter
jmp
imul
stc
or
sub
mov
mov
lea
daa
ins
mov
stc
test
es
leave
rol
or
or
xchg
fcom
aaa
dec
jo
or
jmp
add
clc
adc
xor
ret
(bad)
jmp
fdivr
push
pop
in
add
xlat
ins
inc
add
in
test
(bad)
jmp
mov
(bad)
jnp
imul
fiadd
or
pop
bound
adc
and
pop
outs
mov
aam
mov
retf
ins
mov
es
pop
pop
int
jecxz
nop
push
cld
dec
test
or
sub
xchg
mov
pop
enter
xor
inc
pop
iret
mov
sub
ins
frndint
pop
pop
repnz
out
or
or
inc
push
pop
ins
and
ret
push
mov
retf
les
jp
pop
pop
xor
or
dec
test
pop
je
xchg
add
adc
adc
or
xor
or
enter
cmp
and
push
pop
repnz
jle
and
push
or
adc
sar
add
xor
sub
dec
jae
adc
out
jle
gs
data16
popa
outs
add
xor
js
movs
add
or
pusha
pop
cmp
sub
sub
or
or
push
popa
inc
mov
push
and
cmp
sbb
jb
cmp
push
xor
loope
dec
mov
sub
and
jnp
push
pushf
or
adc
sbb
aam
ins
fs
xchg
xchg
add
add
push
or
aad
jns
je
jge
rcl
movs
fnstenv
mov
xchg
xchg
pop
icebp
sbb
(bad)
jmp
arpl
pop
daa
daa
pushf
jge
inc
dec
ret
dec
(bad)
fucomi
cmp
das
pop
cmp
dec
push
les
cmps
and
(bad)
push
clc
push
inc
dec
ret
push
pop
push
add
scas
push
adc
in
pusha
pminsw
cs
js
dec
(bad)
out
add
cwde
add
loopne
jno
dec
sub
cmps
cmps
inc
jb
push
add
xchg
add
adc
aad
and
arpl
stc
bound
(bad)
sub
fwait
sbb
push
add
in
adc
mov
and
ja
je
inc
test
ins
fisub
or
jae
push
jb
push
out
push
push
push
paddusw
or
sahf
sbb
mov
inc
es
arpl
rcr
mov
stos
push
scas
add
mov
push
outs
outs
add
es
mov
cmp
adc
sbb
dec
sub
dec
push
or
inc
jl
push
push
jmp
movs
mov
adc
dec
or
dec
loopne
enter
push
dec
dec
pop
daa
fldcw
pop
dec
pop
test
sub
in
xchg
and
lods
dec
ror
push
cmp
dec
pop
dec
adc
dec
arpl
cmps
mov
push
mov
jno
test
in
inc
xor
ins
xchg
nop
or
or
mov
dec
cmp
mov
or
xor
and
sbb
pushf
mov
jl
jp
push
nop
dec
sub
fstp
and
sub
pusha
es
xchg
push
jne
ret
adc
xchg
lahf
dec
sub
psllw
add
dec
add
pop
add
push
lea
inc
mov
es
repz
mov
test
add
mov
das
pop
xor
adc
push
outs
mov
and
xchg
pop
pop
push
fcomp
pop
add
pop
fmul
loop
adc
pcmpeqd
rol
xlat
pop
xor
daa
xor
cmps
test
lods
push
mov
add
inc
sar
pop
xor
sub
adc
xor
pop
rol
inc
aas
jl
push
adc
xchg
in
and
inc
sti
ror
je
or
mov
jecxz
test
lods
nop
pop
pop
ret
add
and
or
lock
sbb
and
inc
adc
push
push
inc
or
(bad)
and
push
jb
rcl
enter
push
test
xor
imul
xlat
mov
pop
fisub
mov
xchg
(bad)
and
retf
push
stos
and
push
dec
dec
mov
ins
push
out
add
push
fbstp
adc
xchg
and
xchg
and
fist
les
fmul
ror
jecxz
push
add
or
(bad)
and
(bad)
fiadd
rcl
sub
adc
mov
lods
dec
push
adc
inc
push
and
inc
aaa
pop
add
mov
push
das
cs
inc
sub
std
dec
shr
cdq
push
fiadd
add
adc
addr16
sbb
std
sbb
add
sub
xlat
cmp
add
aas
and
fsubr
fwait
enter
outs
pushf
cmp
xchg
and
jns
pop
in
arpl
sbb
outs
push
dec
xor
xor
sbb
pop
adc
jae
pop
xchg
mov
ret
enter
dec
lods
jae
aam
and
lods
jns
sbb
inc
movs
lea
xchg
push
jne
test
jmp
out
push
lock
xchg
cmp
lea
push
lods
sbb
int3
pusha
or
and
je
into
and
sub
inc
sub
pop
inc
je
scas
push
fistp
adc
retf
popa
fwait
xor
addr16
(bad)
rol
sbb
mov
add
and
push
sbb
ret
add
addr16
fld
push
push
and
xchg
ss
lds
je
into
sub
aam
sbb
or
sub
xchg
js
js
fmul
loope
sub
pop
push
mov
dec
inc
dec
jnp
mov
popa
adc
(bad)
sbb
aad
clc
inc
nop
(bad)
jl
sub
dec
(bad)
call
xchg
data16
pop
jne
cmp
jae
add
rcr
cwde
ja
lock
cmp
jmp
sbb
lea
or
test
mov
sub
inc
sub
je
cmp
adc
sbb
mov
mov
jmp
rcr
sti
adc
dec
jne
mov
pop
push
mov
ret
dec
inc
sub
or
mov
enter
push
hlt
inc
or
loop
add
xchg
ins
mov
lods
mov
dec
push
pushf
mov
fs
ja
jmp
pop
or
dec
or
ins
add
jmp
add
fadd
dec
fst
mov
fbstp
je
mov
and
dec
or
je
inc
cmp
xor
jne
ret
ret
loope
inc
mov
repnz
jmp
mov
jo
gs
int3
push
and
push
into
shl
cwde
xlat
cmps
sub
inc
or
or
je
nop
ret
add
push
or
nop
mov
xchg
pop
adc
push
lock
rcl
leave
xchg
ja
inc
lods
(bad)
mov
adc
or
xor
cwde
dec
lods
dec
push
inc
mov
push
outs
iret
pop
mov
sub
lea
jb
mov
xchg
bound
add
icebp
jp
sbb
mov
adc
test
xchg
mov
inc
jb
xor
push
cdq
or
mov
mov
pop
lods
dec
arpl
int3
push
movs
mov
add
lock
imul
aaa
stos
or
inc
or
test
xchg
ja
sbb
mov
imul
rol
pop
fwait
mov
fadd
icebp
inc
mov
pop
or
rcl
gs
sub
sbb
popf
jle
mov
or
sub
jb
ss
fldenv
fiadd
mov
aaa
dec
inc
inc
jns
mov
es
sbb
push
mov
sub
ret
mov
push
aam
dec
adc
add
mov
and
adc
inc
jg
jns
push
out
inc
es
js
sbb
sbb
dec
or
jb
add
xor
mov
ss
or
push
mov
iret
in
pop
adc
(bad)
or
mov
mov
popa
or
and
cmp
rol
push
gs
adc
or
pop
mov
les
jne
outs
mov
mov
sbb
(bad)
dec
xchg
push
cmp
push
stos
xor
pop
imul
pop
xor
fimul
push
inc
inc
pop
adc
xor
push
inc
jnp
cmp
imul
xor
pop
packuswb
data16
push
adc
adc
and
push
sub
mov
stos
fcmovu
dec
iret
or
or
and
xor
fcomp
ret
inc
add
(bad)
test
call
fiadd
ja
mov
cmp
inc
sbb
int3
cmp
pcmpeqd
pushf
pushf
mov
xor
in
add
push
sar
push
or
adc
daa
adc
pop
ret
inc
cld
push
adc
dec
push
lods
mov
daa
pop
jb
or
push
dec
ins
shl
xchg
and
inc
dec
sahf
add
fadd
stc
inc
add
addr16
jp
pusha
push
push
push
adc
pop
test
ins
push
lods
push
rol
movs
loopne
push
movups
sub
or
add
enter
movs
xchg
add
dec
cmc
ins
jo
imul
dec
aaa
add
imul
adc
repnz
mov
outs
mov
add
mov
mov
sbb
les
add
fist
imul
pusha
inc
or
inc
lock
add
bound
sub
mov
push
mov
scas
xor
add
xor
sub
and
xor
int
sbb
stos
push
add
and
clc
or
add
push
or
jnp
add
push
enter
into
add
pop
in
das
repnz
add
aad
inc
mov
inc
mov
pop
sub
sbb
pop
add
enter
or
adc
add
ja
fs
mov
push
sbb
ins
mov
test
push
add
and
cmp
scas
or
mov
inc
xchg
cs
dec
out
mov
push
call
sbb
jns
addr16
push
fsub
lea
sub
sub
push
add
xor
std
xlat
mov
adc
sbb
push
sub
ins
pop
ins
cmp
xor
add
dec
sbb
sbb
or
cmc
leave
mov
add
sbb
sbb
mov
out
add
mov
(bad)
cld
or
movs
add
retf
or
dec
leave
adc
sbb
cmp
add
push
dec
cmp
and
fwait
nop
mov
sub
mov
cmp
add
stos
cs
cdq
xchg
add
or
ret
xchg
ss
adc
test
pop
fidiv
mov
xor
or
mov
adc
sbb
inc
ret
mov
test
inc
adc
or
cld
sbb
push
or
pusha
mov
mov
mov
add
push
or
enter
call
mov
nop
sub
sbb
dec
adc
nop
adc
out
scas
cmps
adc
mov
adc
xchg
fld
inc
in
in
inc
xor
xor
in
imul
push
arpl
add
repz
and
sub
sbb
adc
dec
sbb
jl
inc
inc
sbb
es
inc
sub
push
adc
nop
pusha
mov
or
push
mov
sub
add
out
sbb
in
jne
xor
adc
or
or
xor
adc
movs
in
or
cs
in
out
push
xor
push
dec
push
imul
int3
stos
xchg
xor
add
fiadd
sbb
cmp
bound
mov
outs
fs
or
and
enter
imul
dec
and
push
mov
ins
test
pop
pop
ins
nop
sahf
xchg
mov
dec
pusha
cld
jmp
test
dec
xor
xor
sbb
mov
adc
addr16
xor
fs
adc
xor
ficomp
xor
mov
pop
add
pop
mov
or
ins
retf
dec
ds
xchg
push
fiadd
ds
mov
push
nop
ins
push
jnp
push
dec
sbb
cs
cmc
or
pop
sbb
or
mov
sub
pop
movs
je
sub
gs
std
pop
push
mov
inc
pop
push
je
push
or
les
fist
xor
loope
call
xlat
add
mov
push
je
and
or
(bad)
pusha
out
or
mov
sub
dec
dec
cmp
gs
pusha
push
adc
xchg
fisubr
sbb
arpl
data16
rol
push
mov
or
mov
test
xor
imul
dec
pop
pusha
dec
(bad)
call
jno
sub
dec
xchg
scas
clc
push
jno
push
test
jmp
push
pusha
in
pop
dec
ret
nop
xchg
test
lock
bound
mov
test
rcl
in
inc
add
outs
push
dec
add
xchg
adc
jns
inc
es
push
xor
add
push
aaa
jno
mov
and
dec
test
and
fcmovb
cmp
xchg
xchg
nop
sub
push
fild
pop
fsubr
mov
add
pop
jo
dec
inc
test
(bad)
fsubr
jo
cmp
popa
add
test
pop
jnp
xchg
xchg
adc
jae
jo
push
sub
test
mov
sbb
xchg
sub
and
retf
rcr
sbb
add
adc
sub
mov
and
mov
(bad)
movs
pop
sbb
cs
pop
and
or
xlat
add
arpl
lea
and
and
and
mov
jno
jns
add
cmp
ror
fist
xchg
and
das
or
push
out
fsubr
popa
lea
inc
aam
or
imul
pop
push
dec
les
(bad)
(bad)
or
(bad)
push
mov
inc
mov
xchg
retf
inc
dec
push
inc
inc
dec
movs
sbb
inc
push
jo
or
mov
inc
mov
dec
push
xor
sbb
dec
xor
inc
add
jo
ror
cld
pop
cs
pusha
inc
inc
inc
mov
or
inc
sbb
push
test
push
adc
xor
mov
xchg
mov
movs
xchg
in
push
add
jne
loopne
(bad)
leave
or
arpl
ins
and
push
call
sub
push
xchg
adc
add
pop
nop
sub
push
xchg
imul
aad
or
mov
enter
push
gs
or
aas
or
or
or
push
push
inc
out
adc
das
pop
or
xor
or
mov
nop
pop
fs
adc
movs
mov
mov
bound
mov
daa
es
daa
mov
mov
mov
movs
movs
cmps
cmps
daa
daa
daa
daa
test
stos
stos
daa
daa
daa
daa
lods
lods
scas
scas
daa
daa
daa
daa
nop
xchg
xchg
xchg
add
(bad)
fbld
add
sbb
imul
int
nop
scas
adc
pop
xor
xor
push
nop
ja
xor
pop
pop
mov
pcmpgtb
xchg
or
xor
dec
jo
out
xor
and
pop
mov
(bad)
push
mov
and
add
xor
xchg
sbb
mov
inc
loop
jp
out
outs
test
imul
ja
mov
inc
pop
mov
pushf
cpuid
pop
aad
ret
dec
inc
sub
add
mov
add
adc
popa
pop
sti
dec
adc
daa
in
dec
gs
inc
js
js
enter
js
js
sahf
xor
or
cmp
sbb
xchg
xchg
pop
adc
cli
adc
in
adc
popf
leave
outs
fs
pop
sub
adc
jns
add
cmp
jns
jns
adc
push
mov
sub
adc
jp
jl
add
xchg
and
data16
mov
xor
dec
dec
inc
push
iret
pop
sub
sbb
jnp
in
mov
jnp
jnp
jnp
cmp
imul
push
pop
mov
pop
stos
shl
cmp
cs
lock
jnp
jle
pop
ja
dec
dec
inc
add
adc
mov
dec
enter
jl
jl
jl
add
dec
retf
and
shl
xlat
pop
xor
js
cmp
ja
jge
sbb
jge
jge
fstp
pop
and
xor
and
add
sub
jle
out
xchg
mov
addr16
pop
inc
jo
pop
sub
test
mov
fdivr
rcpps
aam
ins
out
sbb
sub
adc
xchg
jg
and
jo
jbe
dec
inc
or
sbb
pop
fmul
sbb
fsub
add
das
pusha
sbb
div
or
cmp
xor
push
or
fild
cmp
or
add
add
adc
pop
xor
sub
add
add
(bad)
sub
and
add
xor
add
jmp
fild
cmp
cmp
mov
pusha
or
sbb
adc
or
pop
call
xor
mov
inc
dec
popf
sbb
xor
test
or
inc
mov
test
(bad)
loope
jmp
pop
xor
push
and
mov
lock
retf
pop
outs
or
jae
add
pusha
mov
xor
mov
pushf
test
sbb
test
and
iret
pop
sub
sbb
dec
dec
jmp
push
mov
pop
(bad)
popa
sub
xchg
into
add
imul
xor
ds
test
and
femms
loopne
or
or
gs
add
push
test
add
mov
adc
jo
push
add
xlat
loope
das
or
xchg
das
xor
push
and
in
aaa
mov
in
call
mov
xchg
das
adc
add
mov
adc
mov
lock
or
inc
cmps
data16
mov
mov
pop
test
and
int
adc
pop
inc
pop
add
fcomp
pusha
(bad)
ins
push
cli
inc
push
mov
mov
test
in
adc
and
hlt
mov
movs
ins
mov
and
push
lea
or
or
mov
aam
mov
lods
mov
mov
and
bound
js
mov
or
adc
add
pop
jmp
push
nop
mov
or
cmp
repz
fwait
mov
mov
enter
mov
push
leave
cmp
lea
sahf
pushf
int3
cmp
(bad)
mov
inc
pop
gs
or
cmp
add
inc
jo
enter
stc
cmps
das
adc
add
out
inc
xchg
or
fstp
and
sbb
in
cmp
jl
scas
sbb
and
jae
nop
loope
mov
adc
cmp
in
fimul
sbb
xchg
inc
mov
movs
shl
and
push
cmovg
add
arpl
add
add
pop
fwait
ret
xchg
xor
cmp
outs
loopne
push
movs
cdq
cmp
push
imul
pop
or
popa
ins
aaa
mov
xchg
jl
adc
push
ficomp
or
fisub
out
sub
add
jo
add
or
jne
add
push
jo
or
jb
pop
jne
ins
mov
push
popa
xor
clc
or
ror
mov
das
mov
call
mov
cmp
add
les
push
add
pop
push
add
push
lods
push
ins
mov
add
adc
fsubr
mov
into
mov
cmps
push
cmp
fild
jbe
sub
xor
lock
fcomp
cmps
sahf
imul
enter
les
jl
test
sub
daa
push
dec
mov
mov
xchg
or
adc
loop
inc
xor
add
daa
mov
cmp
hlt
sbb
or
jns
fstp
adc
jp
les
xor
or
cwde
popa
sbb
dec
adc
push
pop
rcl
cmps
stc
ss
mov
sub
xchg
cmp
gs
bound
dec
aas
xor
(bad)
sub
dec
cwde
mov
(bad)
sidtd
xor
dec
pop
in
imul
es
nop
(bad)
nop
das
fisttp
adc
push
fisub
inc
xchg
(bad)
ds
das
test
dec
mov
stc
or
adc
add
cmp
and
pop
xchg
cvtps2pd
mov
fistp
xchg
sub
fs
jp
xsha1
cmps
dec
xor
jmp
push
and
(bad)
push
(bad)
ror
jecxz
ins
js
test
fstp
lock
sub
push
xchg
aam
xchg
test
pop
mov
adc
sbb
les
mov
inc
lock
jecxz
je
pop
je
pop
adc
xor
imul
mov
dec
sahf
jp
addr16
popf
lods
xchg
push
inc
dec
pop
and
sbb
cmp
mov
clc
or
mov
add
mov
cmp
scas
imul
nop
add
adc
inc
sub
scas
cmp
mov
loopne
xor
add
xor
push
shr
jno
sbb
and
mov
add
xchg
push
cld
pop
push
lods
xchg
sar
les
push
sub
imul
add
or
sbb
adc
gs
inc
dec
out
inc
xchg
push
xor
push
add
les
sub
sar
fcom
adc
push
push
jo
mov
enter
adc
add
inc
add
inc
popf
(bad)
pop
or
push
add
inc
dec
sbb
(bad)
hlt
sbb
pop
inc
std
les
inc
jg
push
ja
add
and
adc
cmps
add
adc
inc
bnd
push
lods
xchg
push
adc
add
loop
or
lods
adc
mov
test
push
cwde
dec
push
add
enter
xchg
or
ins
call
test
inc
pop
rcl
add
jl
sbb
push
and
or
stc
mov
pop
inc
pop
inc
jno
stos
cld
adc
mov
cmp
loop
xchg
and
xor
xor
outs
nop
mov
cmp
cwde
and
cs
mov
nop
add
push
icebp
pop
sbb
outs
icebp
lods
inc
stc
sub
adc
sbb
push
mov
cmp
pusha
call
push
sub
fsub
fs
push
add
sub
cwde
pusha
sub
xchg
(bad)
(bad)
cmp
aaa
and
sub
fldenv
dec
sub
mov
and
inc
pop
and
ins
xchg
xor
xchg
cld
xor
mov
mov
cmp
lds
sbb
or
pop
imul
mov
into
sub
int3
sbb
xor
shl
test
adc
xchg
pop
xchg
push
out
cwde
daa
pop
cmp
rcl
add
xor
or
jmp
and
add
and
(bad)
scas
push
sbb
int
jno
ret
mov
jo
mov
xchg
(bad)
pop
pop
test
jnp
or
movs
push
jecxz
jmp
or
add
push
nop
cwde
nop
outs
xlat
jg
(bad)
das
(bad)
mov
mov
cdq
add
daa
call
call
in
loop
dec
sbb
jno
xor
cmp
add
nop
jl
push
add
ss
and
cmps
push
add
or
cmp
mov
imul
mov
inc
lea
cmp
xchg
sub
fdiv
mov
pop
pop
jo
fwait
pusha
loope
add
or
push
adc
scas
mov
lds
ja
pop
pop
aas
sub
push
add
fwait
aad
not
inc
inc
pop
gs
sub
push
loope
movs
nop
sbb
xor
and
xchg
sub
add
xlat
shl
adc
jnp
in
leave
mov
ins
cli
ret
dec
sub
neg
cmp
xchg
push
je
dec
inc
dec
inc
fild
or
test
(bad)
push
jne
xor
push
or
jne
and
mov
or
movs
fnsave
inc
daa
or
jne
xchg
or
xchg
outs
inc
push
cmp
or
mov
or
cwde
sbb
mov
inc
sahf
out
fstp
out
out
mov
pushf
or
dec
push
fmul
or
int3
push
into
iret
sbb
arpl
or
inc
mov
mov
push
cmp
inc
inc
sbb
sbb
or
sub
or
sub
test
and
ss
cmp
ret
test
sti
or
mov
or
push
lds
(bad)
repnz
sub
(bad)
repz
ficomp
or
push
add
or
ds
add
and
xchg
pop
pop
mov
add
bound
pop
enter
jnp
lock
pop
mov
mov
jg
out
mov
pop
sbb
push
cli
pop
mov
push
dec
mov
(bad)
sbb
mov
and
retf
or
jns
retf
imul
sub
dec
dec
retf
dec
mov
lahf
pop
jns
cmps
into
fidivr
jbe
or
mov
outs
call
mov
shr
and
fadd
jge
inc
sub
inc
inc
sub
push
inc
pusha
leave
ror
popa
sahf
cs
bound
ror
arpl
xchg
cmp
jmp
xor
mov
add
add
add
in
jno
sub
pop
pop
mov
mov
push
mov
mov
mov
es
dec
and
mov
sub
sub
push
adc
scas
jae
loopne
jge
push
sbb
cmp
test
and
jns
movs
cmc
sti
mov
enter
movs
aad
dec
pop
jae
out
in
aad
fsub
aad
push
aad
xchg
sbb
sbb
xchg
movs
das
pop
ret
cmps
mov
hlt
adc
movs
or
adc
mov
sbb
bound
inc
sbb
inc
cld
add
jmp
das
xchg
mov
cld
movs
sbb
pop
sti
push
fmul
cld
das
cld
and
test
js
jno
addr16
dec
inc
pop
gs
lock
xchg
sti
loopne
cmp
leave
mov
cmps
hlt
mov
mov
movs
daa
lsl
cmps
sbb
fsub
ins
cmp
test
sbb
mov
es
das
cld
push
sbb
xchg
dec
jnp
call
adc
mov
pushf
jmp
jmp
inc
mov
mov
push
dec
push
inc
pop
test
inc
pop
xchg
pushf
sbb
mov
mov
jl
mov
xor
jb
pop
movs
inc
sbb
or
out
mov
or
inc
test
push
(bad)
scas
dec
bound
jo
cmp
daa
mov
out
fsubr
mov
test
add
lea
and
loope
jecxz
or
mov
push
or
popa
ret
or
pop
inc
into
icebp
push
stos
lods
mov
icebp
stos
popa
pop
jno
pop
je
dec
push
pop
ficomp
xchg
aam
pop
leave
scas
inc
outs
dec
aam
stos
sub
pushf
dec
sub
ret
mov
pop
push
data16
jno
enter
lar
imul
inc
ror
rcl
jle
imul
lods
mov
xor
repnz
ja
es
mov
jbe
push
add
pop
addr16
out
rol
mov
fwait
sub
jne
setae
xchg
cmp
pop
xor
and
(bad)
or
mov
sub
cmp
stos
add
pop
rcr
jle
lahf
pop
sub
lods
mov
dec
adc
int3
cmps
add
adc
jns
inc
dec
and
inc
and
jmp
mov
sub
pop
imul
lds
les
inc
(bad)
mov
inc
push
sbb
mov
push
sbb
popa
pushf
rol
mov
test
push
xor
and
mov
and
stc
mov
outs
jne
data16
jp
sbb
sbb
inc
mov
scas
mov
dec
dec
inc
in
lds
cmp
scas
cwde
(bad)
scas
in
repnz
mov
and
pop
shl
(bad)
xchg
xchg
pop
and
inc
cs
xchg
popf
mov
mov
mov
pop
sbb
lds
pop
pop
and
sbb
loopne
and
mov
cmp
mov
sbb
sbb
add
mov
dec
push
xchg
mov
inc
ss
data16
mov
mov
mov
pushf
push
xor
lods
mov
(bad)
es
adc
sbb
sbb
movs
dec
in
cmp
cdq
mov
adc
leave
sub
pop
pop
repnz
nop
mov
and
inc
xor
nop
mov
pushf
xchg
adc
nop
mov
sub
add
pop
(bad)
jle
fst
iret
aad
or
adc
push
and
or
fs
mov
test
cmp
das
call
loope
add
sub
push
and
outs
and
cmp
push
xchg
mov
sub
jns
popa
loope
add
outs
retf
pop
adc
test
movs
dec
ins
sbb
push
inc
cwde
std
pusha
add
push
push
sub
dec
arpl
push
ror
adc
or
test
shl
adc
pop
mov
ret
lahf
sub
pop
mov
xchg
aam
xlat
mov
ror
jne
std
sbb
lock
bnd
test
fcom
inc
mov
lock
push
fcomp
(bad)
and
ss
jecxz
lea
push
mov
fld
ins
push
ss
in
adc
sbb
mov
arpl
dec
cdq
aas
fadd
(bad)
imul
and
dec
ins
sbb
in
sti
and
mov
push
cmps
mov
shl
jb
inc
pushf
(bad)
fadd
dec
mov
adc
aam
dec
add
push
or
lock
loope
jmp
sub
xlat
shr
xor
xor
add
mov
inc
xor
fisubr
jne
mov
(bad)
cmp
test
and
push
xor
shl
jmp
call
and
ret
out
movs
mov
mov
pop
clc
add
add
sar
out
dec
sbb
cmp
jl
pop
mov
or
(bad)
jl
jecxz
or
mov
enter
push
pushf
or
ins
push
call
retf
mov
out
in
lods
stc
push
cmp
mov
adc
ror
pushw
xor
inc
cmps
sub
add
sub
add
mov
sbb
inc
sub
sbb
add
or
fld
enter
lock
and
lods
sbb
ja
dec
sbb
and
inc
out
ins
ret
int3
inc
jne
xor
ror
push
push
fcomp
push
scas
sub
test
das
dec
mov
jle
xchg
fild
adc
stos
push
cmps
nop
movs
enter
test
xchg
es
cmp
mov
mov
rcl
adc
push
fistp
or
in
mov
push
mov
cli
xor
pop
clc
movs
or
es
leave
adc
cmp
les
jecxz
shl
push
or
or
mov
adc
out
dec
and
mov
xlat
add
sub
retf
add
clc
push
mov
stc
inc
xor
mov
mov
lea
mov
adc
push
repz
retf
dec
adc
fisttp
sbb
add
mov
push
fbstp
jle
mov
call
mov
shl
inc
idiv
cmove
ror
scas
mov
push
mov
fsubr
push
shr
add
imul
and
(bad)
in
sbb
icebp
pop
add
mov
into
sub
stos
ds
xchg
call
mov
cmp
arpl
sbb
mov
push
fsub
mov
mov
adc
add
rcl
and
add
and
mov
dec
xchg
or
aaa
movs
sub
adc
popa
xchg
int
pushf
dec
mov
inc
push
pop
mov
and
bound
mov
pop
adc
ret
jge
test
add
push
sbb
arpl
and
add
mov
dec
fadd
int3
sub
enter
sbb
mov
push
sub
rcl
ss
cmc
xchg
jmp
ret
div
popf
sub
push
or
mov
push
or
sbb
mov
inc
cdq
ins
dec
push
outs
stc
cmc
push
pop
pop
xchg
mov
cli
pop
xor
add
imul
xchg
aad
push
jnp
outs
add
push
nop
stos
mov
or
fimul
dec
test
dec
ja
mov
(bad)
push
jno
inc
push
xchg
es
sbb
fwait
sbb
cdq
add
xor
or
mov
nop
ror
ja
std
and
jb
aaa
mov
imul
adc
push
and
rol
in
mov
sahf
sub
rol
push
cmc
cmp
ja
or
ret
sbb
push
push
aam
add
push
push
daa
aas
in
push
es
sbb
jmp
sub
mov
movs
or
fist
jg
sub
or
lea
add
or
push
xor
adc
and
jg
pop
repnz
push
cmp
push
je
push
les
jp
repz
or
and
leave
mov
sub
inc
sbb
inc
loopne
fnstcw
repnz
jmp
xchg
movs
adc
ucomiss
mov
xor
test
xlat
xor
xor
das
xor
and
rcr
push
aam
in
(bad)
das
sbb
pushf
push
arpl
dec
inc
cmp
jnp
fs
aaa
cmc
es
add
call
push
push
inc
xor
data16
or
adc
js
(bad)
mov
jl
dec
xor
sbb
xor
or
les
push
mov
data16
add
inc
cmp
bound
inc
and
aaa
sub
xor
mov
adc
mov
mov
xor
jmp
add
mov
test
add
adc
scas
xor
xor
mov
pop
inc
mov
rcr
xor
(bad)
pusha
mov
fsub
(bad)
repnz
jne
aam
scas
add
jmp
cld
add
or
mov
pop
jmp
retf
div
popa
or
int
ins
adc
adc
cmp
adc
xchg
add
jmp
push
pop
sti
mov
imul
fist
movs
scas
xchg
push
add
adc
addr16
int3
xor
jae
sbb
out
push
xor
add
fldcw
ja
push
and
xor
int3
imul
adc
(bad)
xchg
inc
aaa
or
jo
xor
add
push
rol
aad
pop
imul
push
adc
add
jmp
mov
retf
xchg
and
shl
jge
je
add
in
daa
jle
push
mov
push
add
rcl
sbb
push
jmp
enter
add
loope
xchg
sbb
(bad)
sub
adc
enter
ins
add
shl
xor
mov
mov
and
add
xlat
(bad)
lahf
and
jge
jle
lea
sahf
ins
inc
sbb
dec
mov
add
retf
cmc
push
cwde
push
pop
and
js
jbe
dec
push
adc
fs
out
dec
jle
jne
push
lock
dec
jns
jo
jns
or
faddp
rcl
sahf
lock
aas
mov
mov
or
or
mov
inc
push
cmp
jne
or
(bad)
sub
or
add
mov
out
cmps
mov
es
push
mov
pop
mov
pop
add
add
sbb
sbb
call
pop
adc
pop
adc
pop
push
mov
or
pop
outs
call
push
sbb
movs
sbb
xor
mov
retf
jle
adc
retf
mov
push
sbb
dec
dec
dec
jnp
xchg
inc
push
sahf
scas
imul
out
jns
add
inc
bound
sub
aaa
rcl
retf
inc
nop
enter
cwde
sub
pop
mov
inc
push
ror
loope
sub
push
out
add
xchg
fnstenv
add
xor
neg
in
(bad)
sub
nop
rcr
ret
cmps
sti
in
mov
jmp
push
cs
mov
and
in
mov
les
jns
scas
ja
andps
enter
push
cld
neg
pop
add
jmp
pop
leave
xchg
dec
pop
and
mov
je
movs
call
jae
in
and
aam
sub
add
xchg
cmc
outs
add
and
add
xor
imul
and
jmp
rcr
add
ret
jp
cmp
or
(bad)
push
cmp
xor
popa
mov
ja
ficomp
shl
imul
xor
sbb
xchg
inc
or
mov
sub
dec
sbb
push
add
nop
aad
push
and
push
outs
add
das
or
je
or
or
jl
or
push
ror
sub
dec
adc
mov
retf
add
xchg
ja
popa
test
jne
or
dec
or
fs
dec
xor
icebp
nop
jl
sbb
xlat
inc
dec
(bad)
popf
add
push
lods
fucomip
dec
adc
or
cmp
pushf
dec
stc
push
cmp
adc
dec
dec
das
and
sbb
add
jle
mov
lea
loopne
mov
jns
outs
loop
mov
scas
mov
push
xchg
out
mov
cmp
inc
add
ja
imul
fisub
hlt
ins
test
movs
cmps
inc
sbb
and
loope
outs
or
push
xor
daa
xor
sbb
fwait
sub
sub
imul
idiv
push
dec
dec
xor
js
mov
or
dec
dec
sub
mov
push
outs
add
bswap
push
fwait
add
cmps
cdq
inc
pusha
xchg
aaa
aam
and
stos
mov
jae
ins
ins
dec
je
dec
sbb
mov
out
and
lea
or
sbb
cs
jnp
and
pop
ja
fisub
ja
push
pop
jbe
fcomip
mov
and
pop
jle
jae
mov
fwait
je
les
stos
imul
jg
dec
add
xchg
jp
cmp
popa
in
mov
data16
pushf
adc
dec
fwait
fs
mov
push
adc
cmps
test
add
in
lds
cmp
cld
jne
add
or
popa
push
push
mov
push
(bad)
punpckldq
cmp
jle
pop
inc
add
dec
loop
(bad)
add
sbb
mov
test
div
je
pop
test
push
cmps
inc
repnz
add
xor
hlt
mov
mov
fs
sub
and
and
(bad)
dec
(bad)
dec
and
fst
jnp
fsubr
out
test
cmp
inc
add
call
jg
loopne
mov
jmp
iret
or
push
pop
sbb
xor
js
xchg
mov
ret
test
or
cmp
(bad)
xchg
dec
or
dec
dec
push
data16
aad
dec
sub
jmp
arpl
out
mov
push
cld
add
mov
addr16
mov
pop
outs
sbb
and
les
in
ror
jg
pop
dec
add
and
sub
or
and
or
popa
add
or
addr16
cli
lock
push
adc
jl
xor
jl
pusha
or
ja
pusha
mov
sub
pop
cmp
loop
jge
out
sbb
test
dec
push
pop
push
pop
test
push
pop
shr
jl
jmp
push
xchg
das
adc
push
or
(bad)
and
push
xor
mov
xor
mov
add
and
and
jp
ins
cmp
ror
gs
jne
rcl
sub
aas
sub
in
ds
mov
cmp
pop
outs
scas
nop
aas
ins
inc
jecxz
or
fs
inc
(bad)
(bad)
adc
xchg
dec
push
and
xchg
mov
cli
mov
mov
and
sahf
mov
fisub
dec
dec
sbb
pop
and
aam
sbb
test
sub
mov
arpl
imul
aas
lods
xor
(bad)
xor
adc
cmp
jo
xchg
push
call
test
add
imul
out
nop
or
pop
jg
and
sbb
inc
fist
pop
test
popa
pop
sbb
or
sub
data16
aaa
mov
(bad)
fcomp
mov
push
adc
stos
add
enter
shl
xchg
pop
adc
jmp
pusha
dec
cdq
cwde
jle
ss
add
add
inc
inc
clc
jb
stos
imul
inc
es
mov
dec
mov
mov
pop
inc
dec
movs
inc
push
push
shl
sub
scas
fsubr
jae
jo
fistp
adc
clc
xor
pusha
push
(bad)
push
shl
inc
ror
jmp
add
fs
lods
xlat
pop
outs
sbb
test
loopne
call
nop
sbb
jmp
xor
aad
(bad)
mov
jecxz
inc
fidiv
test
es
int
xor
call
data16
or
cs
fwait
or
pop
inc
cmps
iret
adc
pusha
movs
cmp
push
shl
movs
lea
xchg
xchg
lea
test
cmp
popa
bound
jg
mov
pop
mov
xchg
sub
pop
or
leave
xor
cmc
xor
cmp
fld
xchg
jns
pop
ja
push
(bad)
push
sub
and
sub
inc
jae
add
movs
sub
inc
arpl
mov
aam
mov
mov
push
arpl
dec
ss
dec
rol
push
inc
cmp
dec
fstp
adc
sbb
aad
xchg
mov
and
xor
ret
popf
or
inc
fcom
and
xor
imul
push
retf
and
or
sub
dec
inc
test
mov
inc
adc
mov
add
test
push
push
xor
fbld
loop
or
push
adc
jmp
shr
imul
mov
inc
imul
xor
into
mov
test
add
scas
pop
push
cdq
lds
add
jmp
push
mov
ficom
mov
push
sub
fist
in
inc
cmp
cmp
cmp
loopne
mulps
sub
pop
das
sbb
cwde
sbb
fdiv
in
aad
leave
adc
xor
dec
shl
dec
add
fild
ss
push
arpl
sbb
je
or
cmp
into
adc
mov
adc
ret
xchg
xor
inc
lds
sub
jmp
pop
add
fwait
imul
loope
ret
fsub
push
in
adc
loopne
sahf
sbb
stc
pop
outs
adc
js
jmp
loope
sub
int
leave
jae
std
(bad)
fcomp
dec
and
fwait
add
xchg
mov
xchg
add
add
jmp
sar
or
or
int3
push
sbb
cmp
sbb
pushf
pop
push
inc
and
lea
cmps
sbb
xchg
pop
sbb
inc
icebp
fwait
inc
jl
pop
sub
pushf
sar
push
sbb
popa
or
cmp
imul
push
or
xchg
dec
scas
movs
add
dec
scas
movs
mov
add
pop
dec
ror
add
jne
push
sub
(bad)
mov
adc
sub
imul
popf
xchg
mov
or
sbb
repnz
imul
xor
sar
dec
adc
shr
inc
enter
and
jbe
je
push
repnz
nop
jns
or
inc
sub
shr
inc
jle
fmul
sbb
dec
inc
adc
inc
sub
jge
(bad)
jle
adc
fstp
add
pop
mov
adc
(bad)
or
pop
fidivr
mov
add
push
dec
enter
(bad)
xchg
hlt
and
xchg
and
adc
leave
clc
inc
push
inc
pop
sub
push
or
add
repz
clc
sti
add
pop
gs
add
xchg
dec
push
sbb
clc
movs
lahf
inc
add
adc
sub
dec
or
(bad)
movd
ret
add
lock
jecxz
or
jecxz
cmp
fisubr
ret
fisub
mov
cmps
inc
ja
fbld
movs
xor
or
add
call
ret
mov
fisttp
fmul
jg
sub
fisttp
cmp
enter
add
inc
jb
pop
or
pop
lock
sub
mov
sbb
mov
and
sti
adc
sub
sub
sbb
xor
jae
push
shr
scas
(bad)
dec
sbb
cmp
inc
sbb
mov
pop
sar
aam
js
shl
jp
(bad)
nop
popa
xchg
xchg
xchg
mov
sti
push
out
ficom
rol
fisttp
je
fistp
xor
je
push
push
xchg
iret
or
xchg
xlat
sbb
sbb
lea
add
in
jge
add
(bad)
test
fidiv
xlat
movs
rol
push
or
fwait
jge
shl
jmp
xchg
or
out
neg
fist
pop
mov
push
dec
push
push
jmp
cmp
sub
pop
mov
iret
fst
cmp
in
mov
inc
adc
inc
or
inc
lods
int
repz
xchg
mov
xor
push
add
and
or
ror
sbb
xchg
leave
mov
mov
cmps
mov
push
inc
dec
jae
add
in
push
std
mov
fs
mov
fs
dec
sbb
sub
test
in
mov
pop
mov
scas
inc
mov
nop
dec
xor
loopne
mov
mov
int3
cmp
fisttp
dec
inc
loope
dec
xor
adc
cmp
mov
or
fmul
mov
call
add
aas
push
mov
call
pop
mov
push
outs
jbe
add
xor
sub
imul
inc
add
sub
loope
sub
scas
sbb
(bad)
cmp
sbb
shl
push
je
jb
ds
call
or
aas
lea
nop
ss
jbe
inc
add
sbb
xor
mov
in
cmps
aaa
or
dec
add
dec
xor
popa
mov
add
sub
add
inc
add
nop
sub
xor
or
xchg
clc
js
out
and
pop
xor
ret
retf
repz
and
or
jg
and
and
or
mov
inc
and
sbb
inc
in
loop
mov
shr
mov
shr
add
jecxz
or
mov
sbb
shl
cmp
sbb
shl
jae
inc
jno
xchg
pop
adc
ret
add
inc
addr16
add
adc
sub
lea
or
lds
sbb
mov
pusha
or
mov
fs
enter
jg
movs
loope
adc
push
inc
inc
inc
jbe
adc
and
(bad)
fcmovnu
cmp
jne
pop
ja
and
call
adc
mov
int
in
pop
inc
in
pop
push
js
not
fld
or
aad
leave
imul
in
loopne
sbb
pop
or
ret
sub
mov
shl
aad
sub
out
xor
push
or
fwait
loopne
ret
fpatan
pop
and
loop
cmp
pusha
into
adc
push
dec
pop
addr16
pop
add
xor
fst
or
sbb
pop
in
fild
push
jle
repnz
adc
add
lock
mov
push
xchg
clc
mov
push
add
mov
push
call
aaa
jge
adc
cmps
clc
add
or
(bad)
int3
imul
sar
out
push
add
scas
and
xor
sub
jb
mov
retf
js
dec
mov
xchg
inc
das
sub
sub
add
ins
clc
xchg
mov
mov
fs
push
xchg
jnp
cdq
test
jns
xchg
mov
adc
add
adc
add
push
and
retf
loope
ss
dec
aam
dec
mov
sahf
sbb
ret
sub
add
and
sbb
add
jp
loope
sbb
pop
mov
(bad)
dec
cmp
or
movs
sar
dec
and
dec
xchg
nop
lahf
mov
lods
outs
fld
fisttp
nop
adc
shl
push
sbb
push
push
dec
ror
xor
lods
lods
inc
jmp
cmovno
shl
add
pop
inc
lds
in
js
sub
pop
sbb
fistp
pop
fmul
push
and
or
ss
sbb
test
rcl
data16
mov
pop
pusha
jb
push
add
es
inc
sbb
test
cmp
sub
sub
cli
dec
sbb
cmp
gs
inc
push
sti
aam
jmp
sub
out
sbb
inc
jecxz
bound
adc
dec
into
adc
mov
nop
dec
lods
inc
jmp
test
shl
(bad)
jl
xchg
xchg
js
pop
cmp
ins
test
mov
xor
sub
fadd
call
mov
mov
sub
or
or
call
push
dec
rol
jo
in
push
cld
mov
xchg
js
stos
sub
setl
arpl
inc
cwde
iret
ficomp
sbb
xor
jecxz
mov
popa
or
cmp
repnz
and
adc
jne
sub
and
adc
or
adc
adc
sbb
adc
pop
mov
jecxz
data16
lahf
int
pushf
hlt
and
hlt
inc
pop
icebp
mov
adc
xlat
dec
arpl
ret
mov
call
aaa
add
cmp
jne
scas
movs
xor
bound
mov
cmps
(bad)
mov
or
xchg
mov
inc
sbb
outs
mov
sub
fdivr
imul
std
dec
jne
xor
(bad)
and
ret
loop
js
mov
loop
les
adc
sub
mov
and
sbb
rcl
xchg
retf
sbb
idiv
jb
movs
add
je
mov
dec
sub
add
xor
mov
dec
add
mov
adc
popf
ss
push
adc
and
inc
sub
mov
cmp
mov
cmp
xchg
(bad)
pop
(bad)
dec
jne
rcl
or
dec
cmps
in
les
dec
pop
pop
xchg
jbe
in
retf
adc
pop
jmp
push
stc
pushf
cmp
aam
inc
inc
mov
dec
arpl
out
add
push
out
mov
outs
pop
jae
loop
or
std
push
push
pop
jnp
mov
scas
inc
in
inc
and
xchg
adc
test
(bad)
sbb
js
lods
xor
xor
jmp
sbb
pop
fistp
dec
inc
adc
cmp
ins
sub
loop
retf
sbb
in
pushf
mov
sbb
imul
and
and
mov
sub
cmp
adc
adc
in
add
les
inc
or
(bad)
(bad)
ss
mov
sbb
jae
ins
adc
lods
jecxz
scas
cmps
cmp
in
lahf
das
or
mov
or
and
sbb
add
bound
cmp
(bad)
xlat
sahf
push
fisubr
and
fsub
jecxz
cmp
and
mov
fimul
sbb
dec
cmp
call
and
sbb
adc
test
push
mov
or
jge
xor
rcl
push
pop
icebp
es
cmc
clc
inc
add
les
mov
jnp
sbb
pushf
iret
movs
or
inc
stos
icebp
sub
mov
mov
add
pusha
sbb
mov
jl
xor
ror
mov
cdq
or
pop
sbb
das
xor
mov
out
push
je
adc
ficom
xchg
add
inc
adc
add
sbb
pop
loopne
dec
scas
sahf
test
mov
cmp
ret
xchg
cmp
add
and
push
add
jmp
mov
adc
ret
add
arpl
xchg
xor
lock
(bad)
jp
sbb
mov
lods
hlt
rcr
imul
pop
cmp
fwait
addps
mov
in
adc
stos
int3
or
cmp
push
dec
fld
or
fwait
inc
sahf
or
pop
mov
mov
cld
je
mov
sbb
mov
jl
pop
aad
inc
cmp
mov
sub
sbb
sbb
repz
and
shl
mov
and
xor
cmovl
nop
sbb
call
dec
lds
rol
add
(bad)
add
fisub
or
loopne
and
ins
sbb
add
jbe
jmp
or
imul
or
push
cmp
push
or
mov
or
add
mov
mov
and
sar
add
ror
(bad)
and
adc
repz
fist
push
ret
and
rcr
rcl
sbb
and
fmul
test
cmp
mov
mov
adc
clc
push
mov
push
sub
add
pushf
jl
sub
and
xchg
data16
push
dec
sub
pop
xor
mov
in
or
loope
jno
sub
cmp
sti
sti
fldenv
lods
push
adc
sub
mov
mov
mov
ins
jns
push
add
xchg
rcr
rcr
pushf
iret
add
in
dec
lahf
repnz
and
stc
or
icebp
daa
out
ds
test
dec
and
scas
and
clc
push
push
cdq
ins
pusha
sbb
sub
jp
adc
jecxz
call
mov
shr
je
pop
sub
jae
fisttp
ror
aas
test
push
cmp
or
cmp
popa
mov
jmp
aad
jb
clc
leave
shl
inc
mov
adc
and
push
cmp
adc
lea
adc
mov
jnp
inc
and
push
cmp
jbe
xchg
lea
je
sbb
cwde
sbb
cmp
cld
(bad)
adc
dec
sbb
mov
cwde
jl
mov
dec
adc
sub
and
sar
inc
or
out
sti
rcl
inc
inc
fdiv
nop
dec
jge
push
dec
xchg
je
jge
cld
cmp
repnz
adc
(bad)
stc
or
out
adc
mov
or
jp
rcr
xor
sbb
mov
arpl
sbb
in
je
jmp
push
or
pop
mov
fisub
pusha
and
mov
sbb
add
loopne
mov
jle
mov
or
add
xchg
in
pop
add
add
adc
xchg
push
adc
call
test
add
add
retf
in
add
shl
dec
shl
or
movs
mov
fst
and
mov
mov
sub
jmp
data16
ja
adc
ins
shl
ficomp
and
fcmovne
push
pop
mov
imul
sbb
pusha
or
sub
int
mov
dec
add
rol
adc
push
push
ror
or
daa
or
dec
sti
retf
push
cmp
xchg
jno
xchg
push
or
and
push
sti
leave
and
sbb
adc
inc
test
mov
in
fdivr
shr
add
ja
dec
inc
push
dec
jo
xchg
loop
arpl
adc
adc
mov
dec
(bad)
mov
stc
nop
or
push
out
push
push
(bad)
repnz
cmps
and
push
mov
idiv
jmp
inc
adc
arpl
data16
jmp
pop
pop
sbb
inc
sbb
inc
inc
mov
mov
test
or
sub
add
xor
outs
dec
sbb
pop
je
xor
rcl
retf
jnp
cmps
add
or
cli
fdiv
or
cmc
mov
mov
out
cmps
cs
or
fdivr
mov
or
clc
sub
cmp
xor
jb
pop
add
add
inc
int
mov
adc
add
cmc
bound
in
cmp
pop
outs
push
push
dec
or
out
js
pusha
or
push
mov
fimul
push
or
inc
fild
and
ror
fnstcw
cli
and
sub
xchg
fmul
jo
push
or
xor
mov
stos
stos
mov
cs
sbb
and
dec
fucomp
mov
scas
mov
scas
fist
sub
push
js
imul
sub
and
mov
or
add
pop
ss
fiadd
sbb
jmp
or
mov
add
jmp
jae
dec
inc
jle
cli
nop
xchg
fstp
pop
jbe
and
and
add
adc
xor
js
and
call
add
je
xchg
push
add
ins
cmp
mov
sub
jle
in
push
imul
adc
cmp
les
adc
xchg
add
and
mov
and
push
xchg
mov
adc
test
retf
(bad)
stos
and
xor
xchg
aad
js
outs
into
mov
loopne
xor
inc
or
mov
dec
imul
out
fsub
test
pop
pop
push
adc
mov
sbb
and
fsubr
pop
dec
pop
ret
retf
xchg
add
add
daa
out
imul
jmp
arpl
sbb
mov
clc
push
add
push
sub
popa
xor
call
ds
add
sub
test
in
or
pusha
or
das
add
adc
jne
dec
sub
(bad)
jo
nop
dec
(bad)
cmovae
adc
std
mov
or
pushf
lods
push
test
pusha
call
push
nop
add
arpl
and
jge
mov
test
mov
out
enter
das
push
(bad)
xchg
sahf
fcomip
fsubr
push
movs
adc
pop
sub
cmp
cld
xchg
push
mov
cmp
and
arpl
aad
xor
add
and
add
je
xlat
vmwrite
imul
and
dec
pop
jbe
(bad)
pusha
aam
jmp
cmp
fild
test
add
shl
mov
in
sbb
js
jb
fdivrp
or
dec
push
cmp
sub
int
das
test
popa
xor
xor
test
pop
jns
cmp
fadd
adc
sub
arpl
mov
imul
push
push
xchg
je
pop
and
lock
sbb
and
leave
rcr
outs
sub
xor
pop
mov
arpl
dec
jnp
ror
or
push
sqrtps
and
pop
dec
and
sub
mov
dec
xor
xor
mov
lods
movs
dec
fwait
mov
mov
push
push
imul
inc
dec
mov
or
jnp
sahf
jmp
sub
mov
push
js
jge
adc
jmp
fbstp
cmp
sbb
aam
push
fldcw
inc
or
popf
mov
(bad)
cs
imul
inc
fild
cli
and
pop
mov
into
pop
ret
mov
mov
test
pop
cwde
cmp
loop
(bad)
or
ror
pop
(bad)
push
fadd
neg
mov
test
mov
push
inc
or
popa
sar
iret
inc
push
bound
dec
nop
bnd
cld
dec
sub
inc
out
or
sti
add
dec
rcr
sbb
inc
mov
xchg
xchg
or
enter
and
xor
add
lds
nop
and
mov
mov
mov
adc
movzx
add
adc
imul
pop
inc
cmp
sub
inc
push
push
in
pusha
sub
push
sbb
cmps
jo
inc
mov
mov
xchg
dec
imul
push
mov
xor
jo
mov
shl
rol
mov
add
and
mov
ins
mov
cmc
lods
or
or
mov
mov
inc
popf
mov
inc
mov
scas
mov
mov
push
cmp
inc
adc
sub
mov
xor
adc
imul
sub
add
in
mov
add
mov
daa
add
aaa
cmc
mov
mov
aas
add
cmc
or
div
add
ret
js
mov
push
inc
out
add
adc
outs
add
ins
imul
adc
inc
add
shl
jg
dec
inc
clc
ins
ss
and
outs
pop
pop
add
test
or
mov
fidivr
cs
shl
mov
mov
dec
stos
sub
(bad)
inc
mov
jo
xchg
push
jno
jmp
inc
pop
xor
mov
lods
outs
movs
test
(bad)
into
push
sub
je
cli
outs
or
mov
pop
xchg
clc
or
add
push
data16
mov
jmp
inc
add
(bad)
(bad)
lahf
and
pop
xchg
add
xor
sbb
adc
jnp
sub
lahf
je
add
sub
call
test
nop
push
fisttp
popa
add
add
pop
mov
pop
jbe
and
sbb
enter
mov
test
(bad)
sub
out
cmp
mov
add
dec
dec
std
cmp
movs
inc
mov
aad
xchg
xor
sbb
adc
cmps
mov
pop
add
arpl
fldcw
je
add
outs
adc
push
inc
pop
ret
jp
inc
inc
add
or
and
nop
dec
add
xor
mov
popa
push
push
jns
cmp
cmp
shr
push
sbb
inc
xchg
fwait
in
adc
popa
dec
mov
and
int
push
xor
daa
fcomp
push
enter
pop
(bad)
inc
or
inc
(bad)
dec
mov
cmp
and
and
out
mov
sbb
xor
jge
inc
std
push
int3
push
dec
sysenter
jg
lea
xchg
push
sbb
movs
je
push
push
xor
xor
iret
in
and
xchg
pop
pop
xor
cmp
(bad)
popa
adc
add
jnp
push
mov
lods
or
lds
and
and
nop
xchg
adc
rcl
push
mov
mov
xchg
cdq
adc
xchg
mov
and
frstor
and
xor
push
push
jns
xor
in
inc
cld
push
add
repz
mov
test
dec
sub
call
jae
or
push
jge
stos
dec
add
icebp
mov
cs
mov
mov
dec
fsub
xchg
js
test
push
inc
loop
je
sub
mov
ret
test
fdivr
in
adc
fst
mov
ins
mov
aam
jge
jge
cld
inc
fidiv
rcl
mov
nop
das
movs
int3
int3
mov
mov
aam
in
pop
mov
movs
jne
arpl
pop
lods
enter
or
adc
dec
pusha
ds
test
sbb
dec
shl
cmp
inc
in
imul
les
or
das
jge
nop
fbstp
sub
mov
shl
leave
adc
cmp
xor
test
pop
sub
int
or
les
and
movs
adc
repz
nop
das
movs
popa
xor
inc
push
je
enter
dec
pop
push
adc
mov
popa
leave
out
pop
or
xlat
adc
mov
inc
xchg
pushf
rcr
jae
add
pop
arpl
dec
add
outs
xchg
rol
push
mov
mov
addr16
lods
mov
out
(bad)
aaa
mov
bnd
and
aas
(bad)
mov
clc
and
shr
dec
shl
ins
sub
push
push
lea
push
add
inc
repnz
ja
popf
pop
loopne
sub
fs
xor
push
add
daa
pusha
add
out
icebp
movs
pop
xor
ror
push
cmps
test
mov
arpl
clc
or
mov
xor
add
and
ret
cmps
mov
add
push
ja
push
or
inc
cli
cmp
aam
mov
cmp
jb
invd
lods
fstp
out
inc
adc
push
addr16
push
adc
repz
or
add
xchg
push
(bad)
jge
lock
cmps
jp
add
cmp
pushf
or
pop
inc
adc
xor
adc
fs
sbb
adc
ret
sub
pop
mov
xor
mov
or
or
dec
jae
cmp
or
xchg
pop
mov
push
cmp
sbb
jne
jb
pop
inc
cmps
ds
ret
push
in
leave
adc
enter
inc
pop
and
add
fild
adc
sbb
adc
mov
push
mov
pop
dec
add
bound
pushf
ret
cmp
scas
sub
xlat
inc
dec
out
lods
push
mov
mov
mov
dec
mov
inc
test
add
sub
add
sub
adc
adc
jne
xor
pop
and
pcmpeqw
jl
shl
jmp
inc
fidiv
xchg
add
pop
aad
pop
add
adc
or
push
pop
rcl
js
mov
or
and
mov
xchg
popf
or
sbb
dec
adc
sub
fwait
mov
dec
fcmovbe
mov
xor
push
mov
or
cmp
or
pop
icebp
fnstsw
in
xlat
pop
adc
in
jp
inc
cmp
nop
adc
cmc
aam
lea
push
ret
xchg
ins
dec
in
mov
pop
and
sub
push
out
mov
inc
add
lds
fwait
mov
inc
and
enter
and
mov
or
outs
dec
or
xor
pop
pop
xchg
inc
fcom
add
xor
adc
pop
(bad)
sub
mov
cmp
add
test
les
clc
and
hlt
iret
push
rcl
shl
int
imul
mov
daa
mov
hlt
test
mov
jmp
cmp
xor
sbb
push
std
movs
inc
ret
out
test
and
cmps
mov
and
(bad)
or
cmovl
inc
in
push
enter
mov
ret
loopne
aas
push
sbb
pop
outs
ret
dec
mov
call
xor
xor
sub
or
sub
inc
bound
test
dec
or
xor
mov
(bad)
pop
mov
repz
dec
retf
or
jl
(bad)
mov
test
push
mov
scas
lea
sub
loopne
ins
aaa
jecxz
and
push
je
dec
mov
scas
cwde
sahf
add
push
sbb
(bad)
xor
push
ret
mov
mov
pop
pop
xchg
mov
call
mov
and
push
jg
xchg
dec
cmp
sete
retf
adc
dec
adc
inc
movs
mov
sbb
jne
(bad)
mov
cmps
jmp
ss
mov
sar
pop
ja
and
outs
scas
sbb
push
je
fs
pop
mov
push
pop
xor
fcom
adc
inc
fsubr
jp
adc
sub
psubusb
mov
sbb
les
(bad)
sub
scas
movs
cmp
mov
and
test
inc
xchg
jns
nop
or
push
pop
xor
movs
and
imul
pop
neg
and
test
hlt
mov
xchg
jecxz
sahf
xchg
and
fwait
sbb
lock
dec
mov
(bad)
push
xchg
add
arpl
stos
lods
(bad)
cmp
xchg
push
aas
or
call
cmps
xchg
mov
daa
ret
push
push
sbb
dec
sub
xor
dec
push
sahf
mov
dec
fwait
or
(bad)
enter
pop
cmp
aas
cmp
and
out
call
jne
jne
sbb
retf
shl
inc
data16
nop
lahf
inc
adc
jo
inc
sbb
and
pop
cmp
sub
lods
rcl
dec
int
hlt
dec
push
push
shl
and
xchg
add
inc
lods
adc
fisub
or
out
add
arpl
ins
sub
daa
mov
pop
neg
cmp
jbe
mov
push
ror
pop
or
push
cwde
mov
push
das
imul
cdq
pop
and
das
xor
dec
pop
mov
dec
lods
pop
aaa
mov
aam
sub
ja
sar
das
mov
or
cmps
test
jmp
add
or
mov
pop
lds
xchg
out
push
xor
data16
push
cmp
js
outs
mov
in
adc
ret
cmp
in
jl
in
sar
cmp
iret
test
sti
or
jmp
mov
mov
ins
out
cmp
mov
out
fucomip
dec
mov
add
sub
daa
das
or
les
mov
arpl
out
xor
mov
push
arpl
fadd
add
not
lock
lea
ds
movs
fdivr
or
and
dec
dec
movs
xchg
fsubp
cwde
mov
add
dec
sub
js
loope
pop
repnz
adc
cmps
lock
(bad)
add
iret
lock
shr
add
adc
nop
aaa
sub
push
cld
fist
(bad)
hlt
or
ins
sub
sbb
mov
and
aam
shr
push
adc
add
sub
stos
mov
call
jp
push
jle
adc
adc
mov
pop
inc
sub
int3
inc
jns
jl
inc
sub
adc
fcom
test
popf
test
rcl
push
stos
lea
xor
xor
imul
imul
sbb
pop
lods
dec
test
dec
push
and
push
xchg
and
icebp
mov
loop
push
fs
lock
dec
ret
push
or
enter
add
xor
enter
push
sbb
fmul
xor
ret
or
out
xchg
jbe
arpl
adc
add
xor
xor
add
and
add
mov
retf
pop
rcr
inc
dec
and
test
xchg
popa
inc
jae
or
dec
pop
clc
fmul
xor
dec
(bad)
sar
mov
fsub
gs
adc
aam
sbb
mov
mov
cdq
fs
dec
aam
sbb
adc
(bad)
jl
xchg
mov
retf
in
clc
pop
pop
hlt
pop
fdivr
test
loopne
adc
sbb
pop
mov
je
xor
lfs
push
adc
sbb
test
pop
dec
in
jl
aaa
adc
iret
lods
jno
and
jl
ja
fcom
adc
adc
or
adc
scas
(bad)
adc
add
lods
push
inc
adc
and
test
sbb
dec
xor
in
adc
in
pusha
cmp
adc
inc
inc
aas
test
sbb
inc
pop
mov
pop
pop
pop
mov
cld
pop
adc
dec
sub
imul
inc
das
mov
inc
ret
or
cmp
out
fild
dec
movs
and
inc
push
sbb
mov
fisttp
or
loope
or
mov
inc
(bad)
imul
sbb
xchg
and
ret
and
add
xchg
popa
or
and
aam
aam
pop
fstp
and
push
adc
add
movs
and
add
xchg
add
pminub
xchg
dec
movs
add
mov
inc
pop
inc
dec
jecxz
out
mov
aam
push
leave
and
xor
movs
out
xor
add
sub
add
mov
sub
push
clc
push
pop
mov
mov
nop
inc
test
sub
push
ss
or
fdiv
add
stos
xchg
jne
xchg
add
shr
mov
fimul
add
mov
popa
adc
cs
movs
push
mov
mov
mov
sub
cmp
xchg
adc
call
dec
in
push
sub
jno
push
popf
inc
fcomp
and
mov
mov
pusha
push
and
or
icebp
frstor
in
and
push
ss
xchg
js
sub
xchg
mov
mov
push
add
xor
sbb
pusha
mov
mov
ret
mov
lahf
mov
(bad)
xor
push
mov
fld
xor
cmp
rcr
sub
popa
push
push
fcomp
sbb
iret
iret
sub
ret
fldcw
dec
add
jmp
imul
nop
(bad)
sub
sub
loop
sub
add
mov
lods
mov
push
shl
test
adc
mov
shr
push
sbb
push
shl
and
shr
sbb
xchg
push
loope
and
hlt
cmp
dec
adc
fld
cvtps2pi
dec
sbb
std
inc
inc
jnp
or
xchg
pop
and
mov
lock
das
clc
stos
fmul
and
clc
dec
inc
push
bnd
ins
pop
mov
xor
lods
ins
mov
repz
fisubr
adc
add
xlat
cmp
adc
outs
mov
mov
data16
or
or
fild
mov
popaw
inc
xchg
add
fcomip
enter
and
xchg
outs
xchg
mov
sub
cmp
xchg
bound
icebp
jns
ret
outs
xor
cmc
push
inc
jae
mov
xchg
popa
xchg
fucomi
cmps
pop
cmp
js
inc
jbe
loopne
nop
outs
inc
adc
mul
dec
aad
je
or
xchg
outs
fdiv
push
add
push
sbb
inc
inc
lahf
pop
or
leave
or
xor
add
gs
div
add
jb
jo
and
je
add
push
rcl
lds
adc
or
js
jo
cmp
cs
inc
xlat
fdiv
mov
mov
sub
outs
arpl
xor
das
adc
add
pop
or
into
add
call
pop
add
mov
add
aam
aad
push
mov
adc
sub
cmp
les
fisub
inc
daa
pop
lds
int
mov
sbb
and
push
adc
push
inc
sub
or
aaa
or
mov
push
cmp
add
jnp
inc
dec
shl
inc
add
inc
and
pop
push
xchg
dec
sbb
mov
ret
xor
fwait
(bad)
in
cmp
or
adc
inc
inc
or
or
jb
sahf
cs
(bad)
fs
cwde
in
adc
cmc
inc
and
mov
jns
adc
shr
inc
inc
sub
je
sbb
dec
dec
sub
mov
add
fs
int3
test
fistp
je
or
aam
js
cmp
repnz
imul
fcomp
add
jmp
call
xor
sbb
add
pop
sbb
fst
pop
sub
add
dec
add
jl
sbb
sbb
sbb
sbb
sbb
sbb
movs
(bad)
in
adc
push
pop
add
inc
out
mov
jo
adc
or
push
mov
push
add
inc
add
mov
add
stc
sbb
xchg
ret
xchg
repnz
sub
mov
mov
ror
daa
add
cdq
adc
test
sub
mov
dec
cdq
retf
fs
xchg
xor
lods
add
ins
movs
outs
add
adc
dec
repz
inc
test
mov
mov
jmp
sti
fistp
loopne
sub
mov
mov
jo
push
sti
and
xchg
rol
mov
adc
mov
push
or
push
push
bound
sub
push
popa
adc
or
xor
jnp
add
mov
adc
and
cmp
fidiv
lock
add
pop
pusha
or
and
cmp
adc
fcom
dec
mov
popa
test
or
xchg
xor
jo
cmp
xchg
lods
mov
inc
inc
dec
dec
add
pop
push
scas
adc
push
push
jae
sbb
clc
cli
js
sar
xor
mov
je
pop
dec
mov
and
(bad)
mov
add
jmp
jecxz
hlt
jbe
je
scas
adc
push
pop
push
dec
push
cmp
shl
cmp
push
add
push
and
outs
out
mov
pop
fwait
sbb
pop
or
(bad)
cdq
test
jg
loop
lds
push
dec
dec
das
push
adc
pop
ret
icebp
push
daa
enter
pop
out
sbb
or
daa
cmps
adc
in
inc
push
sub
sbb
cs
or
and
les
mov
cmp
push
inc
cmp
or
icebp
inc
mov
and
add
jle
mov
movs
push
dec
test
push
or
cmp
rcl
in
or
mov
pinsrw
lods
sub
daa
fld
dec
dec
cmp
push
fisub
inc
push
fstp
sub
add
cmc
or
mov
push
xor
adc
clc
xor
inc
jb
and
jae
inc
and
adc
call
dec
cs
ins
adc
xchg
dec
es
sbb
dec
es
fs
sub
inc
(bad)
mov
in
es
or
push
lock
or
cmps
das
fimul
hlt
push
sub
test
xchg
xchg
outs
mov
xchg
sbb
inc
add
mov
add
and
add
or
push
inc
add
test
and
outs
(bad)
sub
add
add
lods
arpl
inc
xchg
xchg
outs
xchg
lock
sbb
or
dec
call
inc
jge
push
imul
lock
adc
jb
in
lea
adc
jle
xor
dec
idiv
push
and
clc
pop
and
in
adc
stos
and
ret
or
inc
mov
dec
mov
add
push
inc
jecxz
push
pushf
mov
not
mov
jge
jl
xor
jbe
popa
adc
add
push
xor
jge
xchg
pop
rol
adc
cmc
imul
test
and
push
push
add
inc
mov
jns
adc
les
scas
sbb
jp
addr16
cmp
(bad)
data16
cs
xor
sbb
in
sub
into
ins
xor
rol
dec
sub
ins
call
popf
stc
push
xchg
mov
xchg
scas
dec
xor
inc
es
lock
in
xchg
in
ds
xor
enter
lods
xchg
out
jle
pop
cwde
test
push
mov
mov
addr16
nop
gs
jbe
fist
movs
xchg
jno
mov
test
jne
aas
mov
or
xor
fstp
fwait
(bad)
loopne
sbb
inc
cmp
fnstcw
aaa
call
xor
push
dec
xchg
xor
enter
pusha
xor
ror
sbb
cmp
lahf
nop
and
pop
push
pop
sub
cmp
(bad)
mov
add
ss
sti
ins
rcr
leave
push
mov
fsubrp
pop
call
loopne
jo
pushf
rol
enter
xchg
jge
xchg
enter
jle
xchg
cmps
sub
ret
int3
sahf
add
ja
and
pop
sbb
pop
push
cmc
mov
pop
or
mov
lods
adc
adc
pushf
movs
mov
fiadd
dec
dec
adc
ins
push
sbb
inc
movs
pop
cmps
adc
dec
adc
dec
push
adc
mov
cmp
call
adc
mov
(bad)
dec
mov
push
add
cs
aad
cdq
loop
js
ret
mov
ins
xchg
or
in
and
xchg
mov
ror
add
adc
mov
out
push
das
sar
shl
lahf
rol
sbb
dec
nop
pop
in
pusha
pop
fimul
rcl
repz
dec
test
addr16
sub
adc
dec
sbb
and
pop
push
push
inc
fisubr
fisttp
pop
push
push
in
out
push
dec
cmp
add
loop
and
(bad)
lods
or
push
and
jae
je
out
and
mov
jbe
push
or
retf
jo
pop
add
push
or
jnp
mov
test
push
pop
inc
arpl
push
pop
or
and
pop
(bad)
pop
test
inc
adc
push
lds
jno
sub
pop
xor
dec
adc
test
adc
xchg
adc
xor
xchg
adc
pop
mov
inc
nop
cdq
jns
mov
xchg
adc
mov
mov
sbb
jnp
inc
xor
xchg
adc
push
sub
cmp
ja
aad
test
movs
bound
ror
add
aad
je
enter
add
aaa
je
inc
cs
add
add
add
aas
je
jb
jb
adc
adc
add
je
inc
enter
or
add
jbe
(bad)
push
or
xchg
push
mov
test
pushf
shl
and
push
fs
cmps
movs
mov
in
adc
mov
iret
and
adc
dec
sbb
and
movs
xchg
je
jbe
fwait
add
call
adc
jno
pop
mov
push
xchg
cmc
inc
ja
push
js
adc
add
push
(bad)
cmps
and
pop
pop
ss
int3
cld
aas
add
outs
ins
neg
sti
stos
stos
add
pop
inc
lahf
jne
push
pop
sti
add
repnz
pop
cld
add
push
adc
lahf
rcr
sbb
push
and
cmp
mov
lea
sbb
and
cmp
sub
scas
repnz
adc
xor
xor
mov
data16
sbb
xchg
xor
pop
mov
sbb
cmps
mov
les
and
xor
js
and
or
mov
sbb
jg
fwait
in
sar
xchg
pop
push
das
fs
movs
sbb
mov
xchg
and
mov
leave
sbb
mov
test
sub
dec
sti
or
mov
xchg
push
inc
and
in
movs
pusha
cmps
jb
add
stos
jnp
push
rol
enter
bsf
push
adc
dec
inc
fidiv
int
and
cs
xchg
gs
push
mov
xchg
sub
outs
jns
jmp
cmp
sti
ins
mov
pop
push
push
mov
sbb
enter
mov
jle
jae
dec
push
cmp
jge
mov
push
xor
retf
xchg
sub
add
mov
je
mov
or
xor
jmp
mov
arpl
ss
mov
push
adc
movs
sub
sbb
cmp
shl
imul
jge
or
fs
ret
call
or
push
mov
sub
cs
push
movs
and
xor
sub
or
mov
sbb
dec
add
and
sbb
cmp
xchg
adc
xor
mov
mov
inc
add
dec
imul
mov
inc
push
push
xchg
sar
stos
es
push
push
imul
or
xchg
adc
test
and
push
add
push
cmp
loope
mov
xchg
or
xchg
add
rol
mov
add
xor
mov
or
xor
sub
fmul
loopne
test
sub
cmp
push
push
les
in
popf
add
lock
daa
hlt
push
lea
pusha
mov
push
mov
adc
icebp
push
and
jmp
ret
loopne
jmp
add
inc
or
push
in
dec
leave
adc
dec
sub
sub
push
jecxz
push
dec
xchg
mov
shl
push
stos
push
add
test
jbe
mov
push
xor
mov
out
pop
inc
push
loopne
push
pop
push
adc
pushf
and
pop
iret
in
push
or
pop
pop
adc
inc
push
ins
and
test
arpl
test
or
(bad)
fistp
dec
cmps
pop
jl
dec
sub
data16
or
ja
pop
or
or
out
jmp
test
lock
cmp
adc
sub
sbb
test
dec
sub
stc
adc
sbb
inc
push
fst
enter
dec
aaa
dec
rcl
adc
sbb
loopne
adc
inc
cld
or
addr16
and
inc
adc
es
sbb
dec
xor
push
and
push
push
add
pop
sbb
dec
inc
sbb
sbb
xchg
sbb
add
pop
test
rol
push
add
scas
rol
inc
inc
lock
push
cmp
inc
mov
inc
xorps
pop
jle
pop
inc
inc
mov
bound
inc
cmp
cdq
das
cmp
sbb
popa
sub
adc
cmp
cmps
mov
es
dec
loop
adc
out
stos
cmp
add
dec
adc
inc
push
(bad)
dec
shr
ret
mov
mov
pop
in
pop
cmp
add
loope
dec
std
gs
add
or
add
inc
pop
push
adc
jg
lock
jmp
mov
or
leave
aaa
and
sbb
call
dec
scas
push
sbb
rcr
in
xor
sbb
pop
es
ret
sub
popa
pop
sbb
push
xor
dec
or
jmp
add
push
pop
add
push
add
aaa
gs
arpl
mov
xchg
fild
pusha
xor
mov
xchg
jo
add
push
repz
sub
or
mov
pop
push
inc
dec
push
push
dec
inc
mov
sub
mov
fcom
dec
inc
sar
xchg
inc
rcl
cli
arpl
push
adc
cmp
jo
cmp
inc
sub
pop
adc
and
add
mov
sub
push
xor
cmps
inc
jne
and
cmp
cmp
or
sbb
pop
mov
mov
dec
pop
pop
cmp
mov
rcl
pop
popf
inc
mov
fwait
pusha
or
adc
sub
adc
clc
add
dec
lock
and
or
add
or
mov
sbb
lock
dec
and
mov
xchg
jp
adc
or
lods
test
(bad)
mov
push
(bad)
mov
cmp
(bad)
xchg
rcl
in
inc
cmp
ja
add
add
das
dec
fwait
or
xor
mov
inc
inc
mov
fisub
push
fst
(bad)
sbb
xor
xor
aaa
in
bound
push
adc
push
(bad)
(bad)
xchg
push
xor
xchg
in
add
aas
lock
ror
das
daa
pop
cmp
sbb
xlat
pop
nop
mov
out
xor
xor
add
or
fsub
inc
mov
(bad)
cld
hlt
dec
dec
dec
inc
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
ror
dec
dec
dec
dec
enter
add
xchg
rol
push
adc
add
push
xor
inc
movs
jnp
mov
add
jae
sbb
pop
outs
xlat
mov
push
add
push
adc
fstp
das
jno
inc
mov
push
(bad)
mov
push
and
pop
and
xor
inc
call
xor
repnz
sub
or
shl
sbb
inc
lods
in
xor
add
or
outs
inc
pop
outs
sbb
pop
push
retf
mov
mov
int3
push
pusha
ret
push
xchg
sahf
jmp
ds
pop
aam
in
popa
push
data16
jne
inc
xor
add
leave
pop
add
bound
pop
call
pop
pusha
push
fldenv
inc
jne
push
js
dec
mov
xor
ins
sbb
outs
push
or
xor
sbb
shl
push
arpl
aad
xor
pop
push
mov
invd
arpl
mov
test
jno
adc
outs
das
xchg
push
pop
xor
pusha
push
into
shr
push
clc
addr16
pop
repz
je
xor
popa
arpl
clc
sbb
out
mov
pop
iret
inc
dec
and
xor
jns
mov
pop
aam
nop
xor
shr
call
fsub
cmp
sbb
push
sub
push
and
enter
xor
push
daa
xchg
inc
test
ins
ror
jns
fs
or
sub
mov
inc
xor
adc
cdq
dec
add
mov
inc
adc
test
mov
cmp
pushf
cmp
and
cmps
cmp
jl
bound
ins
dec
imul
or
ret
in
call
dec
out
daa
jo
arpl
stc
or
jo
xor
ins
mov
inc
or
inc
and
rcl
gs
push
pusha
xlat
sub
mov
and
and
pop
sbb
imul
and
pop
aam
or
adc
sub
pop
mov
inc
add
ins
add
adc
add
dec
mov
mov
dec
and
adc
call
loopne
mov
pusha
xchg
(bad)
dec
mov
push
rol
xchg
mov
xor
or
ins
(bad)
jne
mov
add
add
das
movs
mov
imul
cs
push
or
imul
jle
push
inc
xor
mov
enter
and
pop
xchg
add
inc
inc
jnp
or
jne
jnp
add
sub
or
std
push
loope
or
add
push
xor
push
push
push
dec
jo
xor
jl
int
dec
push
inc
push
push
pop
jae
mov
jg
enter
or
lods
ret
lods
aas
pop
loopne
or
add
push
mov
push
jg
xchg
fwait
leave
sub
fild
int
pop
repz
call
pop
loope
and
push
sub
push
and
dec
push
cmp
and
rcr
cwde
jnp
movs
movs
push
and
inc
or
ret
nop
or
inc
sub
pop
fs
mov
xlat
out
adc
xor
and
and
sub
push
ror
outs
adc
test
add
daa
nop
push
adc
add
je
adc
push
imul
add
rcr
xchg
jno
pop
test
rcl
xchg
and
inc
add
sub
or
jnp
aas
push
inc
sub
add
cmps
fild
xchg
adc
retf
inc
add
fisttp
and
mov
jge
sub
sub
cdq
dec
cmp
(bad)
out
or
pop
fs
sbb
add
add
not
mov
shr
pop
(bad)
jmp
hlt
shr
ins
jecxz
sub
pop
ror
and
add
cs
cmp
mov
rcr
outs
call
jg
call
cmp
inc
pusha
and
popf
add
add
mov
sub
sub
add
popa
cmp
cmp
sbb
fld
mov
dec
bound
mov
inc
or
and
xchg
add
pop
pop
je
sub
neg
ins
push
and
or
int3
jmp
sub
xlat
push
ret
xchg
mov
add
push
pop
out
push
mov
test
mov
pop
mov
pusha
adc
sahf
jno
cs
push
pop
add
data16
sub
mov
jae
mov
fwait
mov
adc
popa
retf
pop
rol
ja
mov
jo
add
add
cmp
push
scas
push
cld
outs
movs
ds
fild
dec
jbe
or
add
dec
or
dec
sub
mov
inc
adc
out
dec
dec
xchg
ins
cmp
adc
and
and
mov
in
adc
sbb
bnd
xchg
mov
sbb
pusha
data16
(bad)
and
and
cmp
addr16
and
sti
mov
scas
cdq
jo
fcomp
test
sub
pop
pop
dec
adc
mov
add
loope
loop
adc
jbe
jl
outs
pop
icebp
pop
dec
outs
lahf
mov
in
and
das
push
xchg
mov
stc
in
push
imul
jae
dec
jns
adc
add
in
jno
push
adc
mov
xchg
push
sub
or
js
adc
mov
(bad)
sub
dec
aad
les
add
(bad)
aad
stos
nop
outs
xor
mov
int3
or
cmp
jns
out
jl
dec
and
inc
add
inc
les
test
jl
add
dec
clc
mov
pushf
mov
add
daa
fcom
(bad)
lods
or
push
scas
and
fdivr
inc
or
jmp
and
inc
icebp
mov
(bad)
cmc
xchg
aaa
sbb
push
and
jb
push
jle
and
and
(bad)
push
jb
and
push
pop
adc
test
(bad)
stos
adc
xor
push
movs
dec
pop
push
push
sqrtps
add
jmp
push
and
pop
mov
enter
sbb
push
or
stc
mov
mov
dec
dec
xchg
jmp
pop
sub
sub
mov
nop
shl
fstp
and
std
push
arpl
gs
das
add
mov
sbb
daa
outs
sbb
inc
pop
mov
add
cmp
adc
ret
mov
ja
dec
sbb
sbb
xor
or
pop
dec
callw
and
jo
stos
inc
xchg
cmps
je
clc
inc
add
xchg
cmp
inc
cmp
inc
in
mul
sbb
call
sbb
fistp
add
stos
add
cmp
retf
add
ins
push
pop
sbb
xor
jne
clc
clc
push
dec
and
jg
push
in
int3
sbb
or
icebp
inc
mov
mov
push
dec
mov
je
dec
into
js
ret
add
add
jb
movs
aam
imul
sbb
push
outs
add
ja
inc
das
ror
pop
aas
pop
push
retf
(bad)
pop
and
test
inc
mov
mov
dec
cmp
cmps
(bad)
fidiv
mov
ja
ins
xor
mov
push
aaa
sub
adc
imul
mov
jg
mov
(bad)
sub
inc
xor
push
inc
js
push
leave
mov
xor
push
mov
mov
inc
add
nop
push
pop
xchg
inc
outs
jl
dec
sbb
xlat
cmp
sub
sbb
pop
xor
mov
pop
jnp
jl
push
pop
adc
inc
lods
xchg
or
push
and
or
xchg
js
xor
add
pop
lea
inc
push
mov
shl
pop
cmp
and
nop
cmp
xor
cli
dec
cs
inc
xor
adc
cmp
retf
and
dec
fist
sbb
sbb
add
dec
jo
mov
imul
stos
mov
sbb
xchg
movs
push
repnz
js
repnz
cmp
adc
adc
inc
loope
mov
adc
xor
sub
scas
sbb
and
xor
mov
aas
push
lar
push
sub
rcr
popa
dec
xchg
and
pop
inc
mov
(bad)
adc
ret
(bad)
xor
sbb
retf
or
sub
adc
das
setp
cwde
add
aaa
push
and
mov
or
loopne
add
pop
and
mov
mov
xchg
pop
jmp
dec
retf
mov
dec
pop
mov
push
ja
lods
xchg
es
xor
sbb
(bad)
xor
jmp
add
ins
cmp
rol
adc
cmps
mov
ss
shr
and
adc
ret
or
fucom
mov
or
or
clc
shl
dec
jecxz
ds
push
sbb
sbb
adc
add
push
jp
add
pop
gs
movzx
test
loopne
xchg
mov
jl
addr16
and
sbb
sti
inc
jle
adc
call
fdiv
lods
cmp
ret
push
jnp
jmp
ja
in
xor
push
mov
push
dec
mov
sub
ret
jmp
(bad)
jnp
and
in
cwde
ror
inc
dec
ins
fs
mov
sbb
mov
cmp
add
hlt
mov
clc
(bad)
(bad)
mov
mov
popa
add
loopne
inc
and
mov
test
sub
xchg
adc
cmps
test
jge
push
arpl
je
sbb
dec
outs
jae
sbb
cmp
jnp
(bad)
mov
adc
jnp
xor
das
push
mov
mov
les
ins
outs
ins
aaa
stc
imul
loopne
inc
add
popf
and
je
fdiv
jg
adc
lea
mov
mov
daa
or
push
jecxz
adc
pop
(bad)
stc
or
cmp
loopne
sti
add
inc
jg
jbe
cmp
jle
pop
and
not
mov
ins
int
lock
jae
xchg
and
leave
dec
or
xchg
out
or
nop
fcom
xor
sub
jne
xchg
mov
or
lds
xor
xchg
xlat
adc
sbb
sub
push
je
push
out
call
adc
pop
dec
jne
mov
add
fnstenv
cmp
xor
and
inc
test
ror
(bad)
sub
xor
add
in
cmp
mov
mov
ja
jbe
aaa
xor
aam
add
fild
push
fimul
fs
enter
jecxz
call
aad
pop
and
and
or
pop
and
inc
jne
gs
jo
sub
jl
or
add
ret
out
pop
add
in
test
mov
nop
(bad)
cmp
add
ret
adc
or
loope
cdq
div
xchg
push
add
lea
pop
or
in
add
and
jge
mov
repnz
movs
sbb
test
lods
add
pop
inc
cwde
xchg
mov
add
and
mov
dec
jnp
les
mov
jnp
shl
sbb
enter
fidiv
addr16
in
dec
test
int
jbe
sub
mov
pushf
xchg
shr
cwde
adc
sub
cmp
movs
lahf
inc
dec
push
aaa
test
adc
test
xor
(bad)
inc
inc
dec
add
sbb
movs
cs
xchg
and
mov
cmps
dec
imul
and
jbe
leave
and
enter
push
add
pop
xchg
add
add
xchg
adc
lods
loope
sbb
pop
add
adc
shl
cld
sub
pop
sub
add
pushf
sbb
js
paddq
jno
cmp
adc
(bad)
add
retf
adc
dec
cmp
movs
je
dec
fs
add
push
pushf
pop
jbe
mov
data16
mov
xchg
sub
mov
ds
cwde
sub
sbb
push
(bad)
and
outs
pusha
adc
and
xchg
pop
mov
mov
shl
push
add
je
or
loop
ja
push
(bad)
shr
enter
outs
xor
cmps
and
cwde
xor
popf
fsub
jne
and
dec
mov
lock
push
jp
xor
add
push
sbb
in
jae
daa
(bad)
lds
cld
outs
inc
sub
pop
pop
retf
imul
adc
clc
clc
call
clc
clc
call
clc
clc
outs
aaa
mov
push
inc
cdq
push
mov
xor
push
sub
shl
test
daa
das
pop
jb
mov
fdivr
outs
cmp
mov
int3
push
in
mov
sar
es
shr
(bad)
push
in
lock
mov
fld
pop
enter
cmp
jge
enter
in
out
sbb
mov
add
movd
sub
faddp
ror
das
xchg
push
push
pop
call
inc
push
pop
add
add
sbb
mov
mov
lea
sub
jns
adc
adc
cmp
mov
mov
adc
sbb
or
and
cmp
test
sub
test
push
loopne
movs
dec
and
push
sub
and
add
test
outs
mov
stos
bound
fsubr
shl
cs
xor
mov
mov
add
repnz
(bad)
leave
push
jb
and
mov
xchg
xor
push
jl
sub
aam
sar
push
inc
jg
rol
fbstp
mov
dec
sbb
ja
std
or
imul
sti
pop
push
push
push
cmp
push
rol
add
in
push
adc
in
xor
dec
clc
pushf
pop
cdq
pop
adc
adc
(bad)
scas
out
push
mov
jmp
movs
add
adc
ins
mov
sbb
(bad)
and
dec
pop
inc
jns
or
jmp
xchg
loopne
or
cs
sub
add
cmps
das
lahf
add
cs
push
mov
inc
push
ja
mov
inc
sbb
sub
or
sahf
inc
scas
pop
mov
out
rol
arpl
jnp
push
add
add
cdq
and
push
or
and
movs
adc
push
add
xlat
(bad)
cmps
inc
push
jo
inc
data16
and
inc
or
adc
dec
rol
jns
and
imul
mov
dec
loopne
and
or
mov
aas
adc
daa
fstp
and
adc
mov
pop
fidiv
cmp
aaa
jns
push
or
jae
jno
mov
adc
fdivr
and
xchg
push
jmp
push
xchg
fwait
fs
add
retf
mov
adc
lods
add
aad
xor
jge
nop
or
mov
test
add
push
(bad)
leave
xor
mov
xchg
imul
inc
add
ror
adc
fadd
sub
mov
jnp
jmp
nop
xchg
xlat
cld
push
mov
add
xlat
dec
lea
dec
mov
dec
or
lock
sbb
xor
mov
xor
jno
fild
add
inc
popa
out
je
and
pop
pop
movs
nop
xor
xchg
xchg
adc
(bad)
punpcklbw
mov
inc
sub
test
sub
xchg
sbb
jo
xchg
and
cmp
xchg
daa
or
xchg
push
xor
add
sbb
add
rcl
and
adc
xchg
add
push
movs
push
cmp
movs
pop
jns
xchg
mov
loope
or
repz
and
cmp
and
push
leave
sub
test
xchg
mov
push
add
not
push
cmps
adc
retf
pop
dec
pop
jae
imul
mov
xchg
xchg
cli
or
sbb
and
jmp
ret
mov
push
push
jp
cmp
and
push
pop
fs
jae
es
ret
xor
js
add
int
retf
call
in
out
cwde
pusha
push
push
verr
push
lods
add
cwde
xor
popf
mov
cmc
xchg
xor
arpl
pusha
into
retf
(bad)
cmp
xor
jp
xchg
inc
mov
and
sbb
enter
jbe
inc
xor
xchg
nop
cmp
xor
xor
dec
loope
xchg
sub
and
xor
xchg
adc
inc
mov
mov
imul
jne
ins
and
xchg
rol
ins
jo
enter
sbb
and
pushf
fwait
xor
test
mov
mov
inc
popf
jmp
adc
pop
pushf
pusha
jns
xor
inc
and
imul
or
dec
inc
ficomp
or
jno
(bad)
dec
dec
out
call
mov
pop
mov
dec
clc
cmp
shl
sbb
pusha
fs
cmp
ja
xchg
sbb
pusha
mov
cmp
or
sbb
jae
mov
and
add
and
lods
cmps
rcl
(bad)
mov
sub
cmp
or
adc
dec
stc
pop
adc
dec
fwait
mov
sbb
xor
inc
fadd
add
cmp
mov
adc
push
mov
pop
inc
pop
xchg
pop
or
xor
fwait
cmp
sub
cwde
inc
pop
dec
dec
sub
mov
push
push
sbb
adc
xor
pop
mov
adc
pop
mov
and
cmp
aas
rcr
es
push
daa
dec
sbb
cdq
bound
sub
retf
add
push
out
push
inc
push
dec
call
jnp
mov
js
or
addr16
nop
xor
test
xor
xor
jnp
mov
lahf
mov
dec
push
movs
mov
pop
lods
sub
out
sbb
dec
push
push
inc
add
jmp
cld
fisttp
std
or
out
sti
popa
jb
pop
sbb
enter
dec
jmp
mov
add
xchg
leave
imul
pop
adc
test
xchg
fimul
or
idiv
mov
arpl
bound
arpl
arpl
xor
xor
mov
or
xor
xor
aaa
cmp
xor
mov
aaa
xor
bound
or
sbb
xor
cmp
cmp
jge
fdivrp
bound
gs
xor
xor
aaa
sbb
cmp
gs
mov
arpl
xor
cmp
popa
xor
xor
fistp
call
movs
xor
arpl
xor
mov
xor
cmp
push
mov
ss
ins
xlat
push
fwait
push
adc
xor
xor
mov
cmp
out
lods
or
sub
cmp
dec
in
sub
xor
xor
xor
fwait
mov
xor
mov
mov
push
bound
xor
add
scas
xor
mov
inc
xchg
cmp
sbb
arpl
inc
xor
cwde
in
add
mov
push
addr16
call
add
mov
or
add
cmp
xor
pushw
xor
pop
xor
pop
rol
xor
in
aaa
lock
fs
mov
xor
add
or
retf
mov
add
popa
pushf
add
in
sar
xor
xchg
xor
xor
mov
xor
push
cmp
scas
sbb
sbb
adc
jl
cmp
add
mov
push
js
les
popa
je
cld
fcom
add
mov
ret
and
push
jb
xchg
test
pop
ds
int
and
mov
jle
push
jbe
sub
sub
mov
inc
lods
pop
xor
mov
arpl
loopne
cmp
mov
mov
inc
bound
jl
jbe
cwde
cdq
cmps
or
push
mov
mov
pop
sub
fmul
and
cmp
bound
ror
xor
xor
xor
loop
pusha
(bad)
(bad)
arpl
cmps
push
mov
lds
mov
loope
dec
adc
cmp
popa
xor
ret
or
add
bound
and
(bad)
pusha
or
push
enter
xor
ror
sbb
(bad)
fcomp
popa
and
test
gs
cwde
les
(bad)
dec
mov
into
xor
add
mov
xor
mov
adc
xor
xor
cmp
mov
(bad)
ss
add
je
imul
clc
add
push
pusha
data16
inc
dec
arpl
add
cmp
xchg
adc
out
in
bound
or
fs
test
or
jmp
xor
pusha
jo
push
sub
ss
sub
jo
push
adc
in
sbb
fs
jle
cwde
shl
ret
into
sbb
pop
out
add
outs
ror
xor
out
mov
pop
pop
out
xor
bnd
pop
pop
or
xor
hlt
cmp
test
int3
je
xor
cmp
xor
inc
retf
dec
movs
adc
push
cmp
mov
pop
call
cmp
adc
xor
fsub
jbe
add
sar
fs
jo
pusha
xor
adc
xor
add
add
inc
add
pop
movs
shl
call
les
ret
(bad)
ret
cmp
xor
test
sbb
retf
push
iret
ins
loop
push
dec
aaa
add
mov
retf
ss
int3
or
sub
pop
pusha
mov
xor
adc
js
int
int3
into
mov
jp
cmc
popa
(bad)
push
mov
and
jp
dec
ds
arpl
cmp
xor
push
xor
fisub
or
gs
push
js
test
and
or
add
fldenv
pushf
fs
scas
cli
data16
lock
int3
in
or
cwde
sub
inc
nop
or
mov
push
aam
xchg
loop
sbb
adc
sub
dec
mov
int3
call
clc
ret
aaa
inc
loopne
jbe
enter
fisubr
or
sbb
mov
inc
lock
enterw
jo
and
(bad)
fild
ret
test
sub
jmp
(bad)
(bad)
xor
js
addr16
jae
or
mov
call
and
or
add
div
movs
mov
push
cmps
or
les
enter
movs
retf
push
cmps
sbb
test
sub
stos
pop
cmp
gs
sahf
fsub
arpl
dec
pusha
xchg
add
dec
xchg
xor
cwde
ror
xor
mov
or
imul
pop
mov
mov
cwde
popa
push
add
and
pusha
jnp
cli
test
or
and
inc
push
pop
xchg
test
fsubrp
ss
add
js
rcl
retf
push
rcr
pop
and
jge
mov
add
data16
mov
push
shl
into
xor
rol
xor
fidiv
nop
int3
pop
stos
shr
nop
xor
call
test
inc
cwde
sbb
adc
mov
adc
retf
retf
cmp
inc
retf
mov
and
scas
ss
or
shl
dec
pusha
in
(bad)
ss
lods
jle
xor
cld
and
adc
add
xor
xor
xchg
mov
clc
int3
pusha
mov
inc
(bad)
cmc
sbb
hlt
les
ss
jns
cmp
pop
cmp
loopne
sahf
adc
adc
mov
push
bound
xor
loope
or
push
sbb
adc
add
sub
mov
add
push
fs
xor
xor
ins
add
sub
popa
test
cwde
mov
xor
int3
xor
inc
adc
push
inc
popa
imul
data16
add
js
xchg
mov
add
loope
sbb
or
cmp
rcr
or
mov
into
clc
xor
lods
mov
popw
cmp
add
enter
cmp
dec
(bad)
ror
xor
mov
mov
ret
(bad)
aam
dec
mov
fmul
add
pop
or
ss
xchg
ficomp
and
ret
sub
test
add
cmp
push
cmp
fcomp
ret
jle
jl
or
fsubr
pop
and
mov
mov
stos
xchg
mov
call
inc
xchg
popa
push
or
mov
lods
add
add
fidiv
adc
mov
in
sub
es
push
dec
cmps
loop
mov
push
or
sbb
cdq
cdq
add
add
pusha
jbe
fs
pop
(bad)
push
add
jbe
or
js
hlt
add
sub
push
xchg
mov
dec
mov
mov
add
mov
stos
rcr
mov
add
cmps
jl
mov
xor
ins
fdiv
fadd
adc
xor
xor
cs
mov
rcl
loopne
(bad)
mov
xor
cmp
xor
inc
xor
inc
mov
(bad)
xor
in
xor
das
pop
in
(bad)
gs
push
xor
data16
(bad)
mov
pusha
pop
mov
cmp
and
dec
xchg
push
(bad)
les
and
arpl
xor
sbb
nop
ror
mov
into
dec
inc
push
sub
push
sbb
sbb
mov
je
ss
xchg
adc
add
sbb
cmps
(bad)
data16
mov
xchg
jge
fld
push
jb
xchg
ret
sbb
shl
xor
cli
push
or
jo
push
cmp
cli
loop
pop
pop
push
into
retf
sub
enter
mov
xor
and
jo
pusha
adc
push
je
adc
push
int3
or
rol
mov
ret
mov
push
shl
test
mov
mov
push
mov
add
ror
add
add
(bad)
adc
in
cmp
xor
sar
cmp
inc
popa
sbb
adc
int3
test
sbb
or
sbb
enter
sar
push
inc
mov
push
cmp
cmp
(bad)
adc
fs
fsubr
xor
xor
xor
mov
bound
test
or
adc
sbb
inc
xor
data16
dec
inc
fisub
in
test
retf
sub
sbb
pop
loope
push
fadd
cmp
xor
xor
aaa
and
ins
jo
cwde
pop
arpl
mov
pushf
push
push
sub
mov
stos
(bad)
ja
inc
ret
adc
sbb
push
out
idiv
pop
push
or
mov
jne
mov
cmp
sgdtd
add
pop
mov
stos
dec
jns
dec
or
mov
add
clc
pusha
ja
push
adc
stos
mov
adc
add
jae
movs
sbb
xor
adc
mov
outs
sbb
rol
mov
xchg
ins
popa
imul
sbb
sbb
fs
push
dec
dec
push
xor
(bad)
adc
(bad)
xchg
pcmpgtb
mov
xor
push
or
jne
les
das
movs
cmp
and
push
or
aaa
ins
push
xor
and
dec
or
or
retf
and
dec
add
sbb
and
push
sub
outs
sub
and
jo
imul
mov
push
jae
(bad)
shr
pop
jae
pop
adc
jbe
ins
stos
adc
adc
fmulp
jmp
jns
sahf
dec
jne
int
cmp
jg
cmp
shr
ds
bound
push
inc
push
adc
inc
mov
add
std
int3
mov
push
mov
dec
pop
je
lea
add
popa
mov
and
sub
movs
or
push
xchg
sbb
pop
mov
add
loope
add
sbb
or
sbb
sbb
xor
inc
inc
or
stc
scas
or
push
push
pop
push
jg
add
fwait
sbb
pushw
loopne
pusha
mov
sbb
lods
cs
jmp
or
sbb
jl
push
xchg
in
jle
sbb
pop
dec
outs
unpcklps
mov
daa
xor
mov
xchg
cmp
mov
adc
mov
pop
mov
pop
adc
lock
lahf
pop
cmp
xchg
jbe
add
movs
xor
(bad)
pushf
inc
ins
popa
fs
xor
and
aad
je
ins
or
mov
(bad)
and
mov
dec
lods
xchg
loope
pop
pop
in
sbb
je
sub
leave
and
dec
jae
sub
into
shl
pop
retf
(bad)
aam
(bad)
xchg
mov
iret
mov
loop
aam
mov
or
cmp
dec
inc
mov
mov
jb
pop
pop
mov
mov
and
mov
mov
or
or
mov
(bad)
cmp
scas
mov
nop
das
cld
adc
push
(bad)
in
mov
inc
sbb
adc
mov
or
es
sbb
mov
inc
ins
add
inc
mov
dec
mov
je
or
ins
mov
and
(bad)
cmp
aam
or
adc
sbb
jp
test
adc
sar
pxor
mov
adc
sbb
sbb
and
dec
adc
or
cli
mov
sub
pop
retf
dec
push
sub
xor
popf
lods
push
test
dec
add
cmp
push
adc
pop
mov
sbb
xchg
ror
pushf
and
mov
sbb
dec
sbb
mov
and
loop
inc
xor
adc
dec
aaa
lahf
leave
pop
(bad)
lea
jp
lahf
jo
adc
and
and
mov
int3
shl
xor
or
push
add
iret
fiadd
push
or
add
pop
mov
stos
mov
adc
xchg
mov
sbb
arpl
inc
push
leave
fmul
imul
dec
into
jmp
pop
push
push
ss
push
xlat
sbb
inc
pop
push
adc
sbb
data16
inc
push
push
mov
sbb
dec
fimul
inc
fdivr
or
dec
cmp
je
movs
mov
call
lods
mov
mov
(bad)
dec
fiadd
out
nop
xchg
shl
outs
inc
inc
or
dec
sub
sub
add
dec
dec
dec
je
mov
mov
cmp
lahf
push
inc
inc
dec
xchg
outs
ins
lods
leave
aam
mov
xor
test
mov
sbb
xchg
xchg
(bad)
shr
outs
sbb
xchg
scas
mov
dec
mov
push
call
mov
adc
pop
or
jno
in
xor
cmp
pusha
push
fwait
mov
sbb
xor
fistp
cs
fmul
sbb
fist
and
js
jge
and
call
pop
mov
ret
mov
mov
mov
loope
mov
sbb
mov
lods
push
push
or
pusha
mov
push
or
mov
mov
dec
jl
pop
push
shl
cmp
mov
xchg
and
fcom
sub
and
mov
imul
in
dec
or
in
dec
mov
sti
mov
mov
retf
inc
push
inc
add
mov
sub
push
nop
pushf
xchg
ret
push
test
sub
pusha
mov
es
pusha
popa
pop
push
pusha
ret
ja
jbe
push
in
pop
and
sar
outs
jb
push
dec
sub
add
or
mov
cdq
sub
loope
adc
jno
adc
jnp
outs
add
sbb
fst
dec
sbb
mov
test
pushf
lods
movs
imul
mov
es
pop
callw
sbb
push
add
cmp
repz
or
and
mov
dec
imul
in
xor
and
and
loopne
sbb
jp
push
adc
push
or
jne
ret
mov
test
call
mov
ins
je
sbb
push
add
fidivr
sub
or
pop
pop
mov
mov
xlat
fdivr
and
addr16
pop
add
add
daa
call
xor
frstor
xchg
add
cwde
movs
xor
xchg
pushf
test
loopne
dec
push
push
movs
add
test
push
movs
xor
lods
push
mov
retf
je
mov
mov
fs
ror
inc
sub
push
pop
enter
dec
gs
loopne
add
gs
sub
test
and
ror
adc
in
push
movs
jb
sub
lock
hlt
nop
retf
test
mov
add
cld
fadd
(bad)
in
xchg
and
add
push
or
adc
retf
push
sbb
sbb
movs
jb
sub
and
retf
sub
sub
push
sbb
xor
retf
inc
xor
lds
cmp
cmp
mov
mov
jo
imul
cmps
xchg
call
jo
xor
inc
push
ins
cmp
mov
test
ja
sbb
jg
and
ja
dec
xor
shl
data16
or
popw
push
ins
mov
rol
sub
mov
aas
jne
xor
push
jns
mov
dec
jbe
pop
dec
js
rcr
or
aas
jecxz
and
pop
xor
xchg
jnp
jmp
lods
arpl
adc
pop
das
imul
sub
mov
sbb
fdiv
stos
(bad)
mov
xchg
push
jne
mov
add
outs
in
sub
bound
and
push
pop
inc
lds
cmp
mov
mov
(bad)
popa
(bad)
addr16
pusha
ins
push
mov
xchg
push
sub
fisubr
sub
aam
in
pop
fwait
ins
push
jb
mov
xchg
jecxz
push
or
rcl
iret
addr16
or
dec
sub
in
add
dec
es
mul
push
outs
frstor
jbe
mov
pop
jne
or
imul
inc
in
jmp
or
xchg
das
jae
adc
jns
stos
ja
sub
push
push
fld
sbb
pop
test
adc
xor
inc
xchg
(bad)
sbb
loopne
lahf
mov
neg
push
or
stos
(bad)
das
rcl
cmp
ror
leave
cmps
js
nop
sbb
dec
push
jmp
sub
jecxz
repz
add
mov
dec
jns
mov
jb
dec
push
iret
nop
mov
inc
pop
add
mov
sub
(bad)
mov
xchg
std
and
add
cmp
mov
cmp
xchg
dec
sbb
sbb
jae
jb
add
je
add
aam
ret
or
xchg
sub
xchg
vpaddusw
das
addr16
fadd
ret
enter
outs
pop
sub
stc
or
or
xlat
push
mov
(bad)
hlt
or
mov
add
pop
jne
dec
cmp
not
loopne
lahf
add
xchg
fisubr
push
mov
push
ffreep
inc
adc
adc
test
mov
adc
jp
mov
fsubr
out
mov
test
adc
inc
sub
sub
mov
outs
retf
sar
and
mov
and
movs
xchg
push
or
inc
sbb
push
or
repnz
push
inc
mov
push
dec
xchg
cld
stos
inc
push
mov
adc
xchg
shl
(bad)
daa
lea
sbb
xchg
fstp
cld
mov
fiadd
xor
nop
cwde
gs
jb
adc
sahf
push
mov
pop
movs
cmc
lock
mov
ret
and
aas
sbb
pusha
sbb
dec
mov
retf
push
loopne
call
dec
lea
cmp
xor
jmp
xor
repnz
mov
mov
mov
ins
ror
verr
sbb
dec
xor
lahf
(bad)
cs
and
jmp
dec
or
xor
inc
out
inc
add
add
call
cmp
loopne
movs
sbb
call
shr
jge
push
sub
inc
dec
inc
pop
mov
add
outs
add
or
jne
aam
(bad)
aad
or
add
mov
pop
in
in
call
sub
retf
fcom
in
pmaxub
dec
rcl
and
add
loop
sbb
dec
adc
fs
or
gs
jl
arpl
cs
mov
xor
add
cli
adc
(bad)
pop
test
iret
sti
sub
xor
pop
adc
lods
aad
or
pop
imul
jnp
lea
test
sbb
fdivr
fcomp
mov
(bad)
sub
mov
dec
inc
fisub
cld
dec
mov
jne
iret
enter
fisub
sbb
ror
mul
test
add
mul
jle
push
sub
inc
fadd
xor
fwait
cmp
ins
jmp
loopne
ins
xchg
xor
mov
or
daa
data16
sbb
pop
test
mul
mov
pop
push
sbb
jmp
ret
jmp
ret
hlt
dec
aam
mov
mov
loopne
popa
rcl
ror
not
mov
fidivr
add
aaa
fadd
and
cwde
pop
retf
add
dec
xor
jmp
nop
and
jne
lea
pusha
shl
fcmovnbe
lea
or
xchg
and
mov
or
xor
push
jb
or
push
adc
and
nop
lds
fidivr
int3
push
iret
add
fs
add
or
pushf
iret
pop
fldcw
shr
rol
(bad)
ror
mov
xlat
push
enter
dec
rcr
xor
xor
ror
push
imul
add
or
xor
and
rol
inc
xlat
outs
xor
div
add
pop
dec
push
adc
mov
xor
add
mov
cli
adc
adc
or
cmps
jnp
sub
es
mov
or
adc
hlt
sbb
outs
adc
or
fiadd
or
jp
inc
outs
sbb
aad
or
jmp
jo
data16
mov
dec
fsub
dec
dec
push
and
xor
aad
ror
xchg
and
cmp
sub
fsub
cmp
jmp
dec
sbb
inc
or
(bad)
pusha
add
aaa
add
jns
xchg
test
jmp
sbb
pop
pop
add
adc
mov
nop
sbb
(bad)
scas
add
and
dec
arpl
push
mov
mov
add
(bad)
fsub
aam
push
add
sbb
cmp
jge
mov
inc
cmp
sub
mov
jle
jl
loope
call
jle
in
test
out
sub
add
pop
push
mov
fstp
pop
add
jo
outs
mov
mov
movs
adc
sbb
jecxz
dec
es
pop
jmp
or
and
outs
dec
shl
mov
or
aad
xchg
cmps
xor
in
xchg
daa
loope
push
push
add
dec
dec
pop
loopne
mov
repnz
scas
pop
mov
dec
push
ins
dec
arpl
ss
mov
leave
ret
test
add
adc
jmp
stc
push
push
adc
inc
xchg
inc
mov
fs
push
out
das
add
lock
dec
or
ins
add
ret
mov
push
inc
push
dec
push
sub
ins
shr
jb
(bad)
call
shl
mov
inc
mul
mov
dec
iret
mov
cmp
cmp
(bad)
icebp
(bad)
daa
scas
pop
or
cmps
xlat
fcos
hlt
ret
dec
sti
adc
sbb
cmp
shl
mov
fidivr
add
jns
in
pushf
and
cs
cmp
scas
xlat
call
imul
or
adc
dec
inc
dec
add
sub
loopne
test
push
outs
jecxz
jmp
jbe
fisttp
jbe
ja
jp
dec
js
adc
cmp
ins
push
xor
push
jbe
fwait
add
loop
test
jnp
dec
or
or
inc
popf
inc
push
push
hlt
arpl
pop
dec
fwait
adc
pop
and
ret
mov
push
and
or
lea
pop
push
inc
sbb
loope
stos
add
xor
or
dec
jle
adc
test
and
push
outs
(bad)
das
dec
loopne
mov
(bad)
xlat
or
(bad)
imul
(bad)
iret
and
sub
jo
hlt
sub
jo
mov
in
fld
stos
dec
xchg
repnz
mov
jmp
lods
out
int
inc
push
inc
xlat
jae
bound
ja
mov
xchg
out
enter
xor
push
pop
and
xchg
fmul
int
test
mov
jo
mov
pushf
inc
out
mov
das
and
movs
cdq
movs
lods
lods
mov
sbb
es
add
es
cwde
cwde
pushf
mov
enter
ja
aam
or
mov
inc
sbb
sbb
leave
ins
lods
das
mov
lods
adc
adc
retf
mov
cmp
push
pop
inc
add
and
pop
inc
xchg
mov
pop
mov
sub
nop
mov
fucom
fisub
das
dec
pop
clc
ficom
fisttp
test
xchg
fmulp
or
or
shl
cmp
xor
push
mov
inc
loope
loope
pop
and
and
loope
add
(bad)
dec
and
loope
popa
in
in
or
sub
push
fisubr
enter
mov
and
shl
pop
dec
adc
lods
ret
jae
inc
xor
shl
call
mov
in
mov
addr16
fs
rcl
in
jb
in
in
jns
jb
in
in
or
push
shl
mul
int3
pop
xor
sbb
jb
aaa
add
push
xor
pushf
fs
add
call
sbb
fs
jge
fcomp
pop
push
movs
cmp
sub
dec
push
cld
jmp
call
sub
xchg
xor
adc
xchg
dec
xor
fs
xor
in
nop
sbb
add
cmp
sub
mov
stos
test
outs
inc
jbe
push
push
ja
aas
lods
sbb
push
cmp
pop
(bad)
les
repnz
add
and
dec
nop
pushf
and
call
daa
dec
fs
mov
push
clc
movs
pop
sbb
sbb
sub
arpl
mov
pop
or
cmps
fldcw
and
fld
adc
push
cmp
pop
ss
scas
inc
aad
and
aaa
clc
mov
and
push
cmps
ficomp
sbb
xor
fwait
shr
or
adc
popf
inc
jmp
sahf
inc
push
push
fs
add
push
popf
out
add
add
loope
or
push
daa
inc
sbb
inc
ror
adc
out
je
fsubr
adc
xchg
les
jmp
and
adc
mov
shl
sbb
mov
cmp
add
dec
xor
inc
inc
dec
cmp
ss
movs
push
adc
sbb
inc
(bad)
push
mov
sub
ja
and
xor
test
jmp
out
iret
sub
and
adc
dec
or
je
retf
enter
cmp
push
push
or
test
retf
inc
adc
mov
push
add
cmp
jne
add
push
sub
xchg
xchg
sbb
nop
pop
jg
jmp
jmp
call
push
push
arpl
xchg
add
sbb
test
add
je
xchg
mov
jb
imul
data16
test
push
jb
aaa
mov
leave
test
jne
movs
(bad)
sub
jbe
sub
mov
dec
add
fstp
ds
push
push
js
push
and
inc
add
add
stc
inc
and
test
dec
jl
mov
jmp
aad
dec
adc
inc
inc
adc
pushf
dec
add
sub
xor
or
add
movs
mov
ret
add
fnstenv
add
xor
xchg
xor
test
pop
or
gs
adc
sbb
or
adc
fdivr
pop
add
cmc
shl
inc
enter
les
loope
arpl
xchg
fld
hlt
and
xchg
xchg
mov
popa
jbe
shr
pop
sub
sub
aam
or
push
fadd
fstp
fadd
cmp
and
in
cdq
call
mov
call
fs
ins
add
lock
mov
out
das
and
or
addr16
sub
push
imul
or
sbb
mov
or
and
in
mov
jnp
adc
or
leave
jl
xchg
das
and
or
pop
aaa
test
scas
add
mov
addr16
push
xchg
cmp
inc
push
sbb
push
pop
ss
cmp
dec
push
pushf
imul
mov
mov
xchg
jne
jge
loope
xor
test
and
es
mov
lods
xchg
jns
cmp
ins
sbb
daa
mov
icebp
pop
enter
mov
imul
mov
sub
ret
sub
int
enter
(bad)
xlat
sub
loope
jecxz
mov
shr
jae
(bad)
mov
fsub
in
mov
std
fmul
fcmovbe
shl
retf
in
sbb
imul
in
xor
cmp
hlt
inc
sub
mov
imul
mov
arpl
retf
ins
inc
out
ins
push
or
sub
mov
loope
in
mov
sub
and
add
es
(bad)
sbb
imul
dec
je
loop
fbld
es
inc
add
add
test
inc
cmp
inc
dec
push
daa
sub
fs
repz
cmp
pop
sbb
repz
nop
imul
shr
sub
dec
inc
push
gs
imul
add
xchg
test
sub
mov
mov
push
pop
test
xor
mov
jmp
or
outs
jns
xchg
or
es
xchg
in
and
fs
mov
mov
out
push
adc
je
mov
xchg
xor
sbb
push
mov
xchg
add
and
or
pop
or
mov
sub
xor
inc
xchg
and
jge
push
punpckldq
jecxz
cmps
mov
test
sub
leave
stos
mov
add
cwde
push
push
or
cmps
sbb
mov
adc
jns
add
push
or
adc
scas
iret
cli
mov
pop
clc
and
add
mov
mov
in
paddsw
dec
out
cmp
push
xchg
pop
data16
jne
add
sbb
rol
ficom
aam
push
jnp
mov
or
mov
out
sub
sub
fcomp
pop
fidiv
push
add
out
or
sub
lods
mov
inc
pop
imul
cld
sub
mov
std
add
push
in
retf
and
stos
loopne
and
sub
and
xor
and
nop
mov
xchg
or
clc
sub
add
sub
cmp
es
or
cwde
inc
je
out
adc
mov
or
inc
imul
add
outs
inc
rcr
addr16
adc
arpl
jae
retf
xor
xchg
or
sub
(bad)
adc
jae
mov
loopne
test
or
add
xchg
jae
add
in
fs
stc
jno
in
jns
xor
es
sahf
(bad)
psubq
cmp
dec
xchg
ror
cld
sahf
pushf
pushf
mov
push
std
and
inc
inc
fild
inc
daa
daa
daa
daa
cmp
xchg
call
dec
add
ss
fcmovnb
pop
clc
push
add
push
(bad)
jp
or
pop
jns
cmp
inc
packssdw
add
mov
out
dec
pushf
pop
xor
call
daa
mov
mov
or
lods
add
fsubr
adc
push
inc
adc
pushf
stos
lock
adc
and
adc
push
push
punpckldq
mov
call
dec
add
ins
adc
mov
rol
adc
cmp
jne
ss
rol
adc
cmp
sar
push
ins
(bad)
test
adc
popf
or
push
cmp
or
and
adc
cmp
mov
stc
cmp
add
dec
jne
inc
pop
mov
aas
fsubr
ror
jge
push
test
ds
jnp
push
adc
jnp
dec
inc
pop
in
sub
dec
dec
cmp
xor
mov
ret
mov
push
mov
sub
sub
adc
adc
or
or
rcl
add
pop
or
add
add
push
daa
or
mov
pop
hlt
jnp
add
mov
stos
cdq
movs
gs
mov
and
jl
loop
jmp
mov
icebp
scas
cmp
sub
lods
adc
push
mov
ja
mov
adc
outs
xor
rol
in
in
cs
jle
sub
minps
cmps
mov
add
adc
push
cmp
sub
mov
es
push
leave
sbb
aaa
or
add
jle
adc
dec
add
mov
add
sbb
add
dec
adc
adc
mov
and
stos
or
sbb
xchg
inc
je
fcomp
sti
ror
xchg
jb
inc
lea
inc
adc
js
pop
test
sar
ret
sub
mov
dec
add
push
add
aad
sbb
adc
adc
nop
pop
daa
enter
clc
jo
pusha
cmp
push
add
sbb
xor
test
adc
sub
out
lea
mov
xchg
cmp
ror
adc
aaa
leave
sar
jne
or
loope
inc
pop
add
adc
add
mov
adc
pop
pop
mov
push
xchg
js
ret
scas
cmc
pusha
test
cmp
xchg
mov
cld
clc
pop
ret
(bad)
inc
cmps
and
cmp
mov
mov
cmp
and
pusha
aaa
jo
and
jp
scas
lea
add
js
push
add
pop
fidiv
adc
punpckhbw
ror
cmp
and
fs
xchg
xor
mov
pop
adc
adc
push
dec
mov
pusha
dec
ret
ret
nop
rcl
pextrw
fwait
mov
dec
add
cdq
out
test
imul
callw
adc
test
enter
iret
or
imul
mov
shl
fsubr
ins
or
retf
and
and
test
mov
xor
inc
sbb
inc
cmp
cmp
jne
dec
lock
scas
add
xor
ins
or
adc
popf
xor
in
or
(bad)
mov
call
mov
lock
sbb
clc
imul
(bad)
cmp
mov
outs
adc
ror
or
mov
lea
or
repz
sar
dec
push
dec
or
loopne
push
movs
inc
add
inc
xchg
sar
and
adc
mov
jne
pop
call
xor
les
add
and
pusha
loop
add
sub
jnp
pusha
in
cmp
xchg
ins
add
mov
in
and
dec
sub
dec
scas
in
xor
pop
inc
scas
in
sub
and
dec
ja
nop
daa
adc
or
push
or
push
sub
call
mov
sub
mov
inc
imul
sub
test
pop
add
and
jne
add
add
xchg
lea
pop
movs
shl
fwait
xchg
or
xor
daa
xor
push
or
push
jecxz
sub
addr16
or
sub
jl
in
and
daa
mov
sbb
and
loope
stc
retf
or
and
mov
pop
adc
ins
lods
aam
push
add
stos
jns
mov
and
adc
in
in
add
repnz
test
mov
cmc
push
sub
les
or
clc
loope
lods
and
shl
cld
rcr
or
ss
xchg
js
mov
shl
sub
int
xor
mov
cmp
add
xchg
xchg
xchg
mov
imul
repnz
inc
hlt
ins
ror
xchg
dec
and
mov
sub
adc
mov
xor
jno
adc
fstp
add
(bad)
movs
pop
dec
pop
pop
adc
btr
sbb
mov
test
sbb
cmp
imul
or
movs
and
jbe
adc
shr
jle
psubusw
mov
inc
lods
(bad)
mov
mov
aaa
mov
pushf
and
sbb
dec
dec
jl
enter
(bad)
xchg
add
adc
mov
xchg
retf
dec
mov
fsubr
gs
or
lds
xchg
inc
rcl
adc
adc
push
dec
loope
xchg
and
add
in
aas
outs
push
ror
sub
xlat
mov
add
push
fs
inc
push
pop
fdiv
sbb
sbb
add
aas
cmp
mov
xor
imul
enter
lock
pavgb
movs
(bad)
sbb
cmp
clc
cmp
stc
sbb
daa
fwait
in
fimul
xchg
or
sub
outs
mov
pop
rcl
jp
in
or
or
imul
and
dec
mov
lock
fisttp
cdq
leave
dec
(bad)
loope
push
sub
clc
pop
push
rol
mov
in
in
rol
add
push
cmc
rol
inc
xchg
mov
jne
gs
add
and
sub
jmp
adc
add
cmp
mov
mov
pop
dec
and
sub
and
scas
adc
in
or
cmp
pop
jno
sbb
dec
pop
popa
add
mov
dec
sbb
mov
out
mov
mov
in
les
xchg
retf
enter
sub
mov
inc
xchg
test
inc
scas
ret
pop
js
cld
mov
popa
aas
lea
jne
ds
xor
loopne
les
mov
loopne
and
jmp
cmp
sub
push
hlt
mov
jne
mov
add
and
lock
in
not
add
add
in
xchg
in
inc
cwde
lods
xor
cwde
stos
cld
xchg
push
scas
lock
adc
dec
push
pop
adc
je
es
or
ror
mov
iret
or
add
sub
inc
loop
pop
int3
push
lea
push
or
or
shl
sbb
mov
inc
xor
cs
push
imul
sub
and
xor
movs
sbb
imul
movs
test
cdq
(bad)
xchg
mov
lods
dec
aam
cmp
sub
call
cmps
sbb
cmp
sub
sbb
aam
mov
lea
call
(bad)
mov
sbb
call
xchg
mov
adc
aam
mov
adc
push
int3
push
or
push
inc
xchg
rcr
int3
push
sti
or
jl
sbb
call
jecxz
xchg
and
gs
cmp
xchg
cs
(bad)
movs
add
pop
rcr
mov
inc
push
enter
ret
int
sub
xor
xor
jo
add
dec
add
popa
jmp
not
sbb
bound
jg
push
sub
out
rol
inc
xchg
push
add
(bad)
push
push
mov
dec
sbb
push
dec
inc
das
arpl
pop
(bad)
imul
loope
inc
add
shl
and
cmp
daa
push
je
sub
out
scas
sbb
inc
sbb
pop
rcr
jg
pop
push
outs
pop
fcomp
adc
js
and
fidiv
inc
adc
xor
or
pop
outs
and
mov
mov
scas
pop
mov
shl
les
rol
push
sbb
popa
dec
les
mov
add
fild
xor
jmp
rcr
(bad)
sbb
pusha
pop
mov
inc
or
push
(bad)
xlat
jecxz
jo
das
mov
outs
inc
push
push
dec
aam
xchg
mov
(bad)
ficomp
and
sub
dec
inc
add
aam
jb
sbb
ror
pushf
dec
int3
fcom
rol
fnsetpm(287
xor
int3
push
sar
cmp
ins
rol
sbb
inc
and
ret
dec
push
sbb
jno
adc
mov
mov
cmp
outs
mov
lods
xchg
push
xrelease
fcom
push
or
mov
and
pop
hlt
fdiv
scas
ret
aaa
jne
fmul
ror
call
push
enter
jbe
sbb
inc
sbb
add
push
sbb
push
mov
xchg
push
sbb
repnz
dec
mov
sbb
sub
pop
sbb
imul
inc
inc
push
lds
(bad)
ficomp
xor
sub
jb
pop
jle
pop
mov
or
cmps
cmp
sbb
aam
or
bound
xchg
or
sbb
rcr
xor
lods
sbb
xor
or
scas
dec
cmp
loopne
les
in
popf
lahf
sbb
xor
sub
push
sub
stc
or
cld
mov
or
popf
fisttp
(bad)
mov
mov
mov
faddp
neg
xor
stos
lods
mov
cli
hlt
xlat
leave
test
mov
xor
pushf
or
xor
fs
leave
adc
adc
or
push
cmps
push
xor
sbb
call
retf
stc
and
clc
loopne
dec
in
dec
leave
daa
nop
(bad)
mov
ins
add
loop
popa
movs
sub
adc
xor
pop
or
xor
les
push
in
das
nop
xchg
cld
ss
test
adc
aad
add
loopne
fcom
sbb
out
movs
loopne
pop
test
aam
retf
xchg
xchg
bound
pop
out
jmp
inc
rcl
add
inc
sub
add
push
pop
test
cmp
and
add
add
mov
jo
pop
call
popf
inc
pushf
add
pusha
jl
adc
sbb
mov
mov
mov
cwde
xchg
inc
shl
and
mov
add
push
or
rol
fs
pop
in
aaa
or
jo
movs
dec
in
fmul
sub
xchg
cmps
adc
dec
fstp
mov
ins
inc
pop
addr16
xchg
push
icebp
xchg
pop
cdq
xlat
add
or
or
mov
dec
imul
int3
aam
dec
daa
rcr
fcomp
dec
pop
jmp
loope
push
dec
sbb
daa
arpl
add
add
iret
add
outs
inc
lea
push
idiv
aaa
pop
xchg
data16
push
push
jp
fwait
ins
mov
mov
dec
out
jb
push
pop
popw
daa
aaa
pop
add
cmp
(bad)
sub
dec
fs
cs
test
push
push
out
(bad)
dec
(bad)
and
mov
and
es
adc
lods
(bad)
pop
or
dec
(bad)
xchg
mov
or
arpl
ins
mul
adc
adc
test
and
sbb
or
inc
sub
mov
out
or
or
or
xor
bound
or
loopne
push
dec
inc
or
inc
popa
fst
iret
mov
mov
(bad)
sbb
sub
imul
pop
sub
mov
daa
ret
adc
or
sbb
adc
stos
pop
cmp
add
pop
sub
pop
sub
or
not
sub
sbb
and
mov
ret
out
in
sub
push
cwde
into
ja
xchg
js
call
sbb
pop
sub
imul
enter
add
mov
nop
pop
adc
sbb
jne
add
or
adc
xchg
sbb
jp
sahf
or
in
pop
jmp
add
add
jbe
cmp
xor
movs
hlt
sub
or
jecxz
call
adc
or
lahf
mov
add
add
xor
dec
sub
add
(bad)
push
dec
daa
push
jle
pop
xchg
adc
adc
cmc
jbe
icebp
pop
add
in
aaa
in
test
jge
xchg
pushf
or
ins
popa
pop
cmp
add
sbb
cld
fild
and
or
pop
cmps
and
push
outs
xchg
or
mov
dec
jne
jno
das
add
inc
imul
xchg
mov
xchg
xchg
ret
jne
push
pop
sbb
mov
pop
add
pop
sub
and
movs
and
je
add
xchg
ret
pop
lods
inc
(bad)
mov
push
add
fsubr
fs
ins
inc
cld
cmp
jge
push
mov
clc
loope
adc
jg
sbb
inc
push
mov
push
cmc
ret
test
(bad)
or
sub
dec
mul
sbb
and
inc
jmp
outs
repz
retf
sub
add
add
test
cmp
or
ins
or
sar
xchg
cs
add
and
push
and
push
or
rol
adc
cmps
or
sub
jne
mov
and
xchg
add
adc
mov
xor
pop
xor
inc
retf
add
mov
mov
sbb
repz
and
xor
fs
jo
ret
add
fst
add
aas
and
int3
jmp
or
add
mov
push
xor
or
fdivp
jp
push
cdq
fsub
gs
push
call
xchg
mov
push
adc
xor
cwde
(bad)
movs
aam
and
ss
rcr
cbw
rcl
inc
stos
push
add
mov
xchg
adc
fsubr
daa
loopne
in
frstor
stc
test
inc
not
sub
imul
push
dec
test
sub
sub
add
and
push
xlat
cld
inc
jmp
inc
sub
mov
in
xor
mov
mov
cmc
imul
jge
inc
fs
or
push
pusha
aam
and
lods
test
add
xchg
aaa
rcr
mov
test
inc
inc
fwait
inc
pop
add
adc
cmp
xchg
mov
jne
dec
xor
or
neg
and
dec
push
or
mov
sub
and
sub
push
sub
out
shl
retf
dec
sbb
mov
inc
stc
xor
sbb
pop
push
(bad)
aaa
dec
sub
cmp
inc
push
xor
add
pop
cmp
xchg
xor
cmp
mov
ss
jmp
xor
mov
mov
das
lock
xchg
mov
pop
lods
pop
test
imul
sbb
cmp
jb
and
fs
enter
pushf
dec
call
push
push
jmp
repnz
lea
mov
cmp
fcomp
hlt
xor
sub
clc
or
mov
cwde
pusha
push
xor
loopne
pop
adc
xor
push
xchg
mov
add
xor
xchg
(bad)
loopne
popa
push
add
fisttp
int3
xor
sub
add
jae
sbb
loope
dec
push
fs
jno
(bad)
add
dec
mov
je
pop
out
xchg
ins
(bad)
xor
enter
test
cmp
fsqrt
xchg
pop
lods
(bad)
or
cs
sbb
pop
adc
bound
adc
mov
nop
xchg
mov
(bad)
retf
mov
add
inc
mov
inc
push
nop
and
rol
in
mov
cs
aam
fsub
fs
mov
xchg
add
movs
std
push
mov
shl
xchg
sub
mov
retf
test
push
add
push
add
and
cmc
sub
mov
push
sbb
int3
mov
movs
xchg
daa
or
rcr
sbb
je
dec
test
inc
and
sbb
jmp
pusha
mov
and
stos
gs
ret
in
jg
mov
daa
jae
fdiv
test
js
imul
bound
in
or
jns
and
add
rol
movs
mov
xchg
js
ss
je
or
and
pop
fidiv
or
nop
add
add
jne
rcr
cmc
add
add
(bad)
test
out
imul
bound
cmp
nop
mov
daa
dec
push
mov
push
sub
xchg
ins
pusha
lods
jb
push
inc
or
xlat
push
ss
mov
fimul
scas
xchg
and
mov
push
jmp
retf
pop
pop
les
cdq
pusha
movs
sbb
in
aaa
push
mov
jne
xor
mov
inc
test
aaa
fisub
xor
pop
jl
(bad)
sti
xor
pop
push
lods
cmp
jl
popa
(bad)
push
cld
lods
out
call
cs
push
inc
outs
xchg
cmc
aam
sbb
add
jle
mov
cdq
inc
sar
add
mov
neg
int
adc
lock
rol
xchg
mov
ins
or
cwde
loopne
push
or
inc
xchg
mov
mov
pop
add
fs
pop
or
jge
push
mov
inc
rcl
xchg
ds
ss
cmps
sbb
add
lods
fild
pop
loope
lahf
data16
mov
pushf
out
inc
jmp
cs
iret
and
adc
inc
lahf
nop
mov
dec
mov
cwde
mov
aas
inc
dec
leave
lods
xchg
dec
hlt
pushf
and
sahf
outs
sbb
sbb
cld
js
mov
jle
xor
cmp
dec
outs
repnz
push
jl
and
pushf
outs
inc
mov
xor
(bad)
iret
fdivr
sub
or
sar
mov
in
and
xor
out
xor
and
xchg
mov
in
xlat
cmp
and
and
(bad)
cld
imul
ja
push
inc
bound
sub
dec
lahf
mov
pusha
call
jnp
mov
outs
and
pop
inc
push
pusha
pusha
jl
add
mov
push
aas
and
push
ret
inc
push
cmps
stc
xor
push
rcl
pop
mov
imul
pushf
shl
push
add
leave
ja
jle
andps
std
cmps
cmp
ret
pop
rol
cs
push
inc
shr
mov
push
mov
add
jle
jg
push
nop
or
test
mov
inc
sub
adc
popa
add
and
sahf
pop
or
pusha
daa
or
inc
add
test
mov
mov
cwde
push
mov
adc
imul
cmp
pop
test
mov
enter
das
push
cmp
inc
cmps
ficom
or
nop
mov
or
pop
and
bound
fadd
mov
in
sub
inc
stc
xchg
inc
push
sub
mov
and
push
fsubr
jns
sub
ins
in
pop
inc
rol
mov
jo
add
mov
dec
add
inc
iret
push
pop
jge
and
mov
mov
jns
cmps
push
xor
fdivr
dec
sar
mov
mov
jns
out
fsub
rcr
jns
sbb
ds
test
adc
ds
fucom
push
in
cmp
push
push
mov
mov
inc
aam
and
iret
repz
dec
push
dec
sbb
in
adc
xor
(bad)
jns
jo
adc
pushf
push
mov
xchg
neg
movhlps
cmp
int
sub
pop
push
mov
iret
rcl
outs
es
fcompp
frstor
adc
mov
adc
inc
fistp
imul
test
inc
lahf
xlat
cmp
add
sbb
xor
and
js
pusha
dec
push
mov
aad
xchg
push
test
pop
nop
(bad)
cmps
mov
and
jbe
cmp
and
aaa
inc
and
jmp
and
push
lock
out
mov
inc
sub
inc
fisub
data16
movs
or
out
shrd
aad
jl
mov
dec
dec
pop
push
push
bound
mov
call
push
les
mov
dec
(bad)
mov
mov
add
sub
popf
cmps
push
pop
jo
or
add
das
fild
push
pop
mov
jle
xchg
xchg
dec
jo
mov
aaa
mov
push
dec
(bad)
outs
stc
xor
aaa
mov
adc
push
or
mov
dec
mov
retf
hlt
mov
lock
cwde
into
inc
iret
call
int
fisub
rol
mov
cmp
in
jge
aad
mov
xlat
mul
push
fwait
popf
or
xchg
fdiv
pop
mov
jno
call
shl
mov
push
cld
xchg
mov
loop
pop
jl
call
pop
in
jl
stc
mov
ins
push
cmps
inc
cli
ins
inc
mov
sti
ret
push
push
jo
or
fdivr
mov
lahf
mov
inc
mov
and
ds
push
adc
sbb
or
scas
dec
or
arpl
xchg
clc
push
lahf
test
sub
nop
ins
sahf
cmps
stc
xor
rol
mov
add
push
fcomp
push
add
jl
jbe
mov
jp
add
test
jg
xor
mov
imul
data16
fwait
int
xchg
push
xchg
or
clc
ds
sahf
mov
lahf
movs
dec
div
fsubrp
in
stos
dec
xchg
ds
aam
adc
xor
xchg
aas
idiv
inc
icebp
mov
pop
lock
inc
add
push
and
pushf
dec
xchg
inc
addr16
adc
pop
or
jp
test
jns
or
and
cmp
mov
call
lahf
push
lahf
jns
data16
push
xor
mov
in
xchg
movs
push
int3
shld
fnstenv
pop
aam
cmps
push
shr
repz
sub
fdivr
scas
and
cmps
fstp
mov
push
lods
and
pusha
ret
ret
test
idiv
retf
pop
mov
inc
int3
push
int
jge
in
enter
fisubr
fild
sub
cmp
call
jo
repnz
int
mov
dec
cmc
dec
imul
inc
test
inc
add
add
imul
pop
ins
mov
das
fcmovbe
fmul
iret
stc
xor
addr16
movs
or
xor
pushf
or
call
adc
mov
cmc
enter
inc
sbb
je
inc
int
ffree
mov
adc
push
out
jge
sub
xor
leave
(bad)
frstor
fiadd
ror
xchg
and
cmp
pushf
pop
loopne
(bad)
and
sahf
in
mov
jo
js
das
test
inc
dec
dec
mov
push
wrmsr
push
mov
mov
in
inc
push
xchg
js
pop
jo
out
cmp
(bad)
push
int3
mov
dec
inc
push
jae
pop
add
out
icebp
mov
push
lods
pop
push
adc
iret
in
adc
add
inc
idiv
sti
add
push
fs
addr16
mov
fadd
cwde
call
aam
rcr
fst
in
push
int3
mov
sahf
dec
shl
xchg
out
or
push
pop
mov
test
into
aaa
pop
dec
jnp
inc
dec
aad
(bad)
push
mov
push
push
cmps
scas
(bad)
test
out
(bad)
xlat
inc
pop
fild
sbb
dec
lahf
jl
jl
sbb
push
inc
sbb
lds
in
rcl
lea
pop
ins
adc
push
pop
ja
fcmovu
ins
lahf
and
push
inc
jg
and
data16
enter
cwde
mov
fldcw
lea
rcl
ins
mov
mov
jbe
push
lods
sahf
add
sahf
int
movs
clc
cmps
and
imul
je
pushf
mov
mov
(bad)
mov
cwde
mov
ins
mov
sar
(bad)
cmp
retf
outs
int3
imul
fdiv
test
loopne
xchg
(bad)
fimul
out
ficom
nop
push
fsub
jl
fmul
push
add
push
or
pushf
out
fimul
push
mov
clc
leave
test
iret
enter
nop
sbb
xor
out
rep
push
and
push
cmps
sub
push
adc
mov
out
sahf
int
aaa
enter
mov
mov
sbb
js
mov
inc
fcomip
mov
in
iret
cs
iret
sar
dec
addr16
call
dec
mov
jbe
pop
pop
ficomp
pop
pop
push
in
fstp
jo
arpl
mov
ins
push
cmp
push
pop
outs
enter
in
fld
jae
xlat
mov
jg
imul
sbb
mov
and
test
fmul
mov
ss
nop
outs
je
cwde
cdq
pushf
scas
popf
jnp
test
fisubr
into
mov
mov
xchg
cdq
fwait
int
pushf
shl
mov
mov
inc
mov
pusha
dec
cmp
sahf
mov
outs
xchg
int
add
movs
cs
sbb
pop
and
ds
aaa
xchg
cmp
cmp
and
dec
out
push
inc
sub
push
das
pop
mov
arpl
lock
inc
pop
pop
pop
inc
(bad)
cmp
test
dec
push
adc
dec
mov
sbb
enter
and
add
inc
in
orps
pushf
pusha
xchg
push
movs
inc
les
add
add
fs
ds
test
inc
lds
or
(bad)
dec
jge
cmps
cmp
push
adc
sbb
jl
push
push
sbb
pusha
mov
push
call
lods
push
push
lahf
cmps
mov
jle
push
sub
ins
scas
jl
cld
ret
jbe
int3
mov
movs
fild
inc
loope
ins
ds
pop
lods
push
jl
out
xor
aam
or
jo
sbb
sub
xor
js
repz
loopne
push
add
js
push
adc
inc
sbb
push
call
cld
es
daa
lods
enter
fcmovu
nop
sub
js
cmps
mov
dec
pop
jbe
mov
push
aam
push
xchg
push
push
pop
inc
mov
and
push
mov
or
cmp
ss
jbe
add
rcl
int3
js
iret
sub
scas
imul
push
cld
sub
ja
fxch
daa
hlt
jp
cmp
rol
mov
stos
cmp
xor
out
push
pusha
enter
mov
aam
pop
mov
mov
pop
mov
rcl
ins
fld
push
push
xor
xor
mov
fs
mov
outs
pusha
cmps
push
nop
cmps
clc
push
adc
push
cmp
ss
sbb
neg
inc
add
mov
das
fnstsw
cmp
push
(bad)
push
or
in
in
rol
and
inc
daa
jo
(bad)
dec
pop
mov
inc
ss
dec
sbb
push
and
pop
ja
imul
pop
push
clc
sbb
push
push
mov
fcomp
pop
push
in
test
pusha
xor
dec
mov
or
sar
arpl
sti
into
data16
int3
outs
lods
gs
mov
sub
push
or
mov
stc
cmp
add
jge
jns
add
inc
je
cs
fwait
int
ret
movs
addr16
scas
fdiv
mov
lock
bound
sahf
mov
fnstenv
cmps
rcl
or
dec
repz
aas
push
mov
je
cld
mov
inc
and
and
cmp
cli
ins
fdivrp
inc
dec
inc
xor
dec
inc
in
sbb
and
out
fidivr
push
cld
dec
dec
test
das
(bad)
jle
push
jl
int3
inc
jno
dec
jae
mov
cmp
out
xchg
jl
sbb
nop
in
mov
mov
ins
xchg
rcr
inc
mov
out
pshufw
mov
call
add
mov
sbb
jns
pusha
mov
and
inc
mov
inc
and
sub
out
pusha
and
cld
dec
outs
push
xor
test
lahf
shl
push
in
add
adc
or
jp
or
cmp
std
mov
push
mov
push
test
pop
pop
test
mov
xor
pop
in
lds
and
mov
mov
ds
(bad)
das
data16
sub
pop
fld
dec
xlat
mov
pop
jnp
jmp
dec
iret
mov
sbb
fcomp
jmp
add
pop
or
shl
fsubr
pop
dec
in
inc
or
dec
dec
mov
rol
es
daa
and
loopne
retf
fistp
mov
push
(bad)
std
xor
and
lahf
push
push
inc
add
mov
sub
or
dec
add
loopne
dec
or
inc
mov
push
lahf
mov
aas
aas
adc
or
dec
inc
mov
or
mov
sub
inc
pop
pop
inc
inc
outs
test
test
cmp
cmps
mov
aaa
pusha
and
push
dec
add
les
pop
cld
fs
out
add
push
aaa
les
inc
push
mov
xchg
dec
fmul
dec
cdq
mov
mov
push
test
push
jne
imul
push
push
outs
fcomi
mov
mov
jle
js
or
dec
mov
xor
js
xor
in
movs
mov
(bad)
pusha
jge
jle
seto
lahf
data16
push
sbb
add
add
loopne
test
add
and
sti
cmp
push
mov
mov
popf
out
ss
js
hlt
mov
sbb
ficomp
push
mov
popf
push
dec
mov
data16
fstp
lock
sbb
lods
arpl
iret
shr
sbb
mov
ret
inc
push
pop
xor
call
jo
push
test
push
mov
(bad)
dec
push
push
jl
lock
xor
call
pusha
imul
retf
pop
push
js
mov
inc
cmps
stc
cmp
push
cwde
aam
inc
dec
dec
repz
xor
cmps
stc
cmp
adc
pop
pushf
aam
mov
aam
aaa
push
les
fwait
in
xchg
mov
dec
imul
adc
push
cmp
mov
je
ret
aam
add
push
push
int3
fld
jg
rol
nop
aam
xlat
inc
fidiv
fdiv
push
pusha
loope
es
cmp
(bad)
jmp
push
pop
test
xor
(bad)
fbld
jl
pop
mov
lahf
jl
inc
out
add
sub
(bad)
sbb
jmp
in
(bad)
pop
shr
addr16
push
sahf
jl
in
mov
inc
ret
or
aaa
mov
xlat
ins
xlat
enter
push
scas
mov
mov
addr16
mov
loop
(bad)
ja
pop
mov
push
lods
jl
xchg
push
adc
mov
ss
mov
fdiv
pop
psubw
outs
daa
push
dec
gs
push
mov
xor
cmps
mov
adc
ins
mov
jl
out
mov
sub
jbe
push
popa
fst
les
popa
or
(bad)
xchg
jl
mov
dec
pop
pop
cmp
mov
adc
cmp
adc
mov
jnp
jno
pop
sbb
push
sub
or
aaa
or
popf
xchg
sub
and
sub
push
sub
mov
adc
cld
push
push
inc
(bad)
and
dec
xchg
jae
jmp
test
push
push
jae
nop
ret
js
dec
nop
xchg
xchg
cmc
ins
jo
mov
or
gs
mov
xchg
mov
stos
test
push
push
jno
inc
nop
mov
mov
sub
call
sbb
outs
je
(bad)
cs
ret
sbb
sub
mov
push
fnstenv
and
adc
ja
or
push
js
popa
mov
pop
sub
cmp
push
outs
outs
adc
inc
mov
add
add
xchg
dec
and
pop
jbe
and
fsubr
test
pop
push
mov
stos
movs
and
(bad)
or
bound
rcl
adc
dec
ds
jge
pop
dec
imul
pop
add
xchg
or
sub
and
(bad)
inc
adc
push
or
popa
sbb
int
imul
cmp
xchg
test
mov
jae
popa
pop
dec
(bad)
call
cmps
and
or
xchg
inc
arpl
cmp
add
ins
mov
and
jl
ins
scas
add
xchg
mov
sub
imul
gs
lods
sub
inc
push
ss
xchg
ret
fbld
fcmovu
mov
adc
or
retf
mov
xchg
and
jecxz
js
mov
jae
add
or
shr
jmp
add
add
xchg
push
sbb
ret
dec
cmp
fldcw
push
(bad)
push
inc
or
fwait
adc
cmp
add
rcl
and
enter
or
test
add
or
push
add
out
jecxz
mov
ins
or
adc
(bad)
push
fdiv
push
jne
test
pop
dec
lods
inc
pop
or
lahf
dec
xchg
shr
outs
mov
jne
pop
or
or
ss
das
and
fs
popa
sub
sbb
sbb
or
pop
loopne
sbb
add
arpl
fild
lods
add
cmc
ja
adc
adc
nop
mov
adc
sub
or
(bad)
adc
arpl
sbb
jmp
aas
enter
or
pop
add
fwait
shl
pop
push
(bad)
(bad)
push
push
pusha
test
dec
inc
push
rol
rol
sub
add
mov
or
push
or
add
add
mov
inc
pop
xor
adc
dec
popf
outs
not
out
pusha
mov
fmul
or
jge
cmp
push
mov
out
dec
sbb
enter
sbb
mov
cld
test
add
inc
cmp
out
sub
popf
je
pushaw
int3
push
ins
jae
je
and
shr
in
or
iret
cs
xlat
push
mov
add
lock
nop
push
sub
adc
add
jbe
fwait
jge
mov
in
xor
lahf
jo
wrmsr
add
jbe
out
jg
ins
enter
xor
inc
rcl
mov
clc
add
and
sbb
mov
fdivr
mov
aas
sar
sub
mov
jns
mov
and
mov
dec
mov
mov
add
imul
or
aas
test
lds
or
sti
push
dec
mov
or
sbb
mov
cmp
cwde
cmc
mov
or
sar
cmp
mov
xchg
xor
jne
call
pop
pushf
arpl
imul
enter
mov
push
cmp
jmp
and
push
fiadd
shl
inc
sub
adc
mov
ret
aaa
xor
cmp
push
jne
push
cmp
pop
pushf
adc
cmp
outs
inc
pop
add
mov
push
ret
and
jp
jo
(bad)
jno
jg
mov
cmc
(bad)
and
js
gs
mov
jb
push
pop
(bad)
clc
adc
leave
and
jl
push
mov
adc
cmp
test
aaa
lahf
int
adc
icebp
add
mov
not
push
js
pop
mov
clc
dec
lock
inc
sbb
pop
add
fwait
hlt
xor
sub
sub
popf
push
ds
push
test
movs
inc
retf
or
and
(bad)
loopne
mov
cmp
dec
sbb
and
adc
ds
or
mov
pop
stos
aaa
cmp
pop
xchg
mov
aaa
out
and
jge
pop
test
mov
add
dec
aam
push
hlt
xchg
fild
stos
cld
arpl
mov
mov
test
dec
inc
and
inc
cdq
daa
mov
imul
adc
rcr
or
add
ins
shr
xor
xchg
sti
xor
mov
and
movs
sbb
ret
retf
mov
mov
(bad)
cmp
data16
adc
mov
mov
xchg
clc
out
out
adc
bound
inc
add
ins
push
or
sub
jns
scas
pop
or
enter
pushf
enter
clc
jns
fmul
add
leave
pop
in
add
add
push
add
add
add
leave
xchg
daa
dec
adc
adc
adc
cmp
repnz
or
or
or
dec
sahf
push
mov
and
jns
in
and
adc
adc
adc
sub
cs
xor
xor
in
xchg
sbb
sbb
sbb
sahf
cmp
cmp
inc
and
leave
xchg
daa
inc
cmp
ds
jl
or
mov
pop
or
sub
div
hlt
or
enter
hlt
xor
and
and
and
hlt
or
hlt
hlt
hlt
hlt
or
enter
hlt
xor
and
and
and
hlt
fwait
or
enter
adc
sub
cmp
leave
xchg
daa
dec
dec
ds
aas
dec
pop
nop
and
mov
stos
sbb
daa
outs
xchg
lock
adc
push
aas
or
enter
das
add
jge
sbb
sub
xlat
ins
push
je
mov
mov
mov
add
push
ja
xor
test
or
arpl
adc
dec
pushf
or
add
mov
sub
lea
or
add
and
mov
enter
int3
fdivr
scas
inc
imul
sbb
out
out
in
push
pop
or
cld
mov
xor
pop
in
call
dec
mov
data16
stc
mov
test
inc
xor
mov
cmps
in
adc
sub
and
fwait
loopne
fistp
sub
cmp
xchg
inc
inc
mov
cmp
pop
and
js
pop
jno
adc
mov
mov
mov
mov
add
popa
sub
in
mov
mov
sbb
push
fnstenv
or
xor
mov
sahf
inc
add
fcom
sub
mov
dec
mov
outs
aaa
or
and
call
xchg
sbb
push
outs
sbb
sub
jb
cmp
gs
add
dec
xchg
retf
cmp
ret
dec
and
and
call
and
add
repnz
xor
or
nop
mul
lods
addr16
(bad)
push
pop
lahf
inc
mov
pop
inc
push
aas
cli
mov
mov
in
push
retf
out
data16
sbb
push
dec
mov
idiv
ds
jb
jl
jne
xor
nop
xchg
or
sbb
fs
or
gs
and
sbb
test
fmul
sbb
adc
cmps
in
icebp
movs
nop
inc
sbb
repz
(bad)
jmp
xchg
pop
dec
call
mul
mov
ds
xchg
not
repnz
mov
das
nop
mov
mov
pop
mov
sub
das
movs
scas
mov
clc
in
lods
daa
push
xor
mov
pop
test
mov
mov
xchg
mov
mov
aas
xchg
ret
xor
iret
xor
push
mov
das
dec
fadd
dec
jmp
jecxz
nop
imul
es
sub
imul
mov
fsin
jb
enter
inc
and
lods
jno
pop
mov
cmp
iret
inc
mov
std
pop
dec
push
enter
mov
push
ret
shr
mov
xlat
or
sar
cmp
dec
test
inc
ret
ret
or
sub
ror
adc
and
test
mov
fadd
add
maskmovq
div
repz
pop
sar
fisub
push
pop
lea
jbe
fistp
adc
inc
subps
xor
(bad)
jnp
test
adc
imul
inc
add
pop
or
jae
adc
pop
push
xor
mov
int
sahf
iret
mov
mov
cwde
and
xor
inc
sub
cmc
call
fild
sahf
cld
jl
cwde
adc
cmp
push
les
enter
aas
nop
(bad)
ins
aas
cmp
xor
push
outs
jne
les
loopne
lahf
or
das
mov
loopne
add
push
mov
or
idiv
jl
xchg
es
aaa
mov
dec
out
pusha
cmp
ja
lock
mov
push
push
push
cs
add
dec
sub
mov
pushf
stc
stc
push
sub
push
jle
ret
jmp
and
xchg
xchg
push
pop
mov
inc
scas
fdivr
sbb
shr
push
fdiv
arpl
ror
mov
sahf
ret
cs
add
ret
mov
dec
call
jb
hlt
clc
add
outs
dec
cld
movs
or
ret
inc
xchg
dec
in
jae
jecxz
or
mov
test
xor
inc
dec
add
lahf
cmps
clc
sub
enter
fs
cmp
pop
or
cmp
pop
test
fcomp
mov
loope
mov
adc
pop
adc
or
cmc
jmp
mov
or
std
push
or
das
out
cli
jmp
les
push
das
mov
dec
or
ja
imul
push
dec
jg
mov
mov
frstor
inc
add
lahf
test
adc
outs
xchg
mov
xchg
cs
mov
dec
cld
js
adc
inc
aaa
mov
jmp
cmps
popa
call
and
out
adc
xor
cli
or
in
push
aam
in
push
and
and
sahf
and
iret
lods
or
ret
xchg
xchg
and
call
les
fild
adc
sub
or
inc
xor
adc
nop
stos
add
adc
clc
(bad)
aas
sbb
cmp
jne
xchg
sub
xor
push
test
clc
add
or
and
fist
jb
jle
inc
aas
sbb
mov
cs
enter
mov
inc
sar
(bad)
nop
retf
in
adc
sub
inc
inc
push
mov
shl
pop
aas
pusha
pop
and
leave
push
jb
or
cwde
pop
leave
inc
jb
mov
jb
pop
and
loopne
pop
leave
inc
lock
and
cs
mov
xor
in
mov
cs
mov
loopne
xor
pop
and
leave
jo
loopne
inc
repnz
and
pop
shl
das
xchg
mov
pusha
add
loopne
push
leave
inc
jb
adc
shl
pop
or
or
add
call
add
sbb
and
fs
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
and
jmp
in
cmp
inc
adc
cmp
enter
inc
pushf
or
ret
(bad)
jl
xchg
mov
adc
mov
xchg
sbb
imul
stc
add
sub
retf
mov
call
xchg
sub
repnz
mov
mov
xor
leave
sbb
mov
mov
inc
jbe
imul
cmp
mov
(bad)
mov
fwait
jg
aas
bound
cmp
xlat
fadd
jmp
(bad)
outs
xor
xchg
push
or
push
push
int3
into
sbb
ror
(bad)
(bad)
inc
test
popa
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
retf
into
pop
inc
test
(bad)
(bad)
dec
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
repnz
bound
and
inc
inc
jl
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
(bad)
inc
push
stos
mov
cmp
or
mov
pop
out
sub
imul
(bad)
(bad)
(bad)
(bad)
push
jo
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
es
(bad)
(bad)
call
mov
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
(bad)
inc
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
out
push
xor
sbb
mov
add
(bad)
jmp
mov
pop
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
(bad)
(bad)
(bad)
(bad)
fsub
addr16
repz
mov
sub
and
and
outs
(bad)
lock
jnp
push
jne
out
mov
sbb
add
and
mov
mov
dec
xor
xor
rol
jp
cmp
inc
nop
inc
inc
imul
xchg
push
or
jns
out
adc
sub
dec
repz
sub
inc
add
repz
and
add
cmp
inc
add
push
repz
repz
sbb
repz
sub
inc
pushf
scas
or
cmps
xor
push
mov
rcr
or
or
fmul
lock
cmps
jne
adc
cld
cmp
xchg
push
adc
xchg
out
dec
and
xor
cmp
dec
movs
test
sbb
dec
push
imul
cmps
rcl
xchg
and
and
push
imul
test
fisubr
retf
in
movs
dec
ins
jo
jo
je
xchg
js
xor
xchg
js
jg
js
dec
ret
push
cs
js
fild
xchg
push
outs
push
and
jl
jl
adc
pop
jl
push
mov
scas
jl
jl
outs
jb
dec
jl
mov
add
stos
scas
and
xor
ror
test
xor
inc
enter
test
div
mov
mov
out
sub
push
cmp
enter
pusha
aad
add
bound
add
pop
rcl
enter
outs
inc
dec
adc
nop
sbb
fwait
int
ss
jl
int3
iret
je
sbb
jnp
imul
sbb
push
ins
aam
cs
push
int
popf
dec
les
xlat
push
ror
push
and
nop
cs
(bad)
(bad)
pushf
fadd
add
push
pop
or
test
pushf
pushf
pushf
pop
or
fs
adc
adc
dec
sahf
popa
add
sub
push
push
sbb
add
cld
lahf
loope
loop
and
add
mov
add
mov
(bad)
(bad)
(bad)
in
call
mov
add
sbb
cmp
int3
add
jb
dec
bound
sti
bound
(bad)
aas
push
lahf
stos
jmp
cmc
es
ss
push
dec
push
lods
jnp
jns
jg
jmp
dec
cs
addr16
jle
jecxz
enter
inc
out
pop
(bad)
push
fld
test
mov
jmp
enter
xchg
inc
mov
sahf
repnz
aas
test
retf
sbb
leave
sbb
arpl
xchg
xchg
ss
int
std
aas
pop
push
or
pop
cli
call
jbe
imul
jg
ds
repnz
pop
push
in
pop
mov
ret
push
into
mov
pop
xchg
pop
cs
jns
repz
into
cld
(bad)
pop
mov
out
out
es
iret
repz
push
scas
dec
adc
dec
sti
cmps
push
or
dec
clc
in
outs
cs
in
adc
arpl
push
mov
jnp
jg
push
push
fmul
imul
xor
push
jg
ins
pusha
stos
add
cmp
movs
in
in
pop
inc
cmp
shl
std
inc
pop
fimul
adc
mov
jmp
(bad)
mov
adc
mov
xlat
scas
cli
icebp
xor
push
stos
push
push
mov
and
add
inc
xor
in
adc
fld
scas
sbb
or
iret
repz
fistp
repnz
sbb
or
mov
push
sbb
iret
repz
ret
cwde
and
add
arpl
inc
(bad)
mov
aas
pop
mov
rcl
pushf
js
mov
(bad)
(bad)
cmp
mov
push
je
jns
fsubr
push
xor
pop
sar
pop
int
es
lods
add
pusha
int
lods
mov
add
fnstenv
pop
and
inc
and
pop
loopne
(bad)
jg
jmp
pop
pusha
or
and
cwde
loope
retf
push
sar
retf
test
cmp
dec
sbb
repz
shl
adc
dec
add
sbb
inc
jge
test
pop
xor
inc
pop
les
push
pusha
push
mov
mov
loopne
ds
repz
loopne
bound
rcl
add
mov
lahf
outs
iret
(bad)
push
cmp
pop
shl
cmp
idiv
inc
inc
inc
pop
in
sbb
ds
adc
sahf
out
out
mov
and
imul
iret
repz
xchg
adc
(bad)
mov
jge
(bad)
jg
mov
mov
sbb
lds
scas
mov
bound
inc
ja
mov
rcr
push
cmp
inc
mov
shl
aaa
into
cmp
(bad)
(bad)
(bad)
jmp
and
sub
int3
jo
adc
mov
jmp
call
popf
and
jne
fpatan
outs
(bad)
(bad)
jle
retf
shl
mov
or
lahf
dec
push
push
bswap
aas
(bad)
cld
pop
add
std
sbb
xor
add
iret
repz
pop
gs
iret
repz
mov
mov
xchg
mov
cmp
aas
rol
mov
fsubrp
repz
sahf
out
out
add
add
inc
out
(bad)
jns
popa
add
jns
jns
mov
outs
mov
out
fsub
icebp
cld
cmp
repz
add
sub
repz
pop
push
mov
jno
xchg
iret
repz
pushf
lods
mov
cld
repz
rcr
call
outs
adc
cmp
repz
xor
add
(bad)
cmp
jb
mov
cmp
repz
mov
mov
int
out
ds
jmp
or
jg
out
sub
outs
xor
add
add
out
sahf
outs
js
xchg
sahf
out
out
stos
mov
mov
mov
out
aad
repz
out
sahf
or
xor
mov
cmp
push
add
loop
(bad)
out
jg
outs
add
add
add
jg
stc
stos
add
add
add
add
jmp
jmp
push
push
push
enter
cld
aas
iret
sub
inc
push
push
dec
push
sub
push
bound
xor
outs
cld
repz
aas
jp
xor
xchg
fmul
lea
scas
aas
iret
aas
push
push
out
retf
(bad)
push
enter
dec
loope
cwde
(bad)
jmp
repz
or
loope
adc
repz
repz
pop
add
push
sub
push
add
ss
push
pop
push
add
bound
push
add
aas
iret
repz
push
add
or
iret
repz
cmp
movs
pop
pop
add
mov
repz
aas
lds
pop
add
iret
aad
repz
repz
in
pop
add
out
test
pop
add
adc
and
pusha
add
xor
or
(bad)
cmp
add
bound
push
pop
iret
repz
rep
or
jno
jge
repz
aas
lea
push
xchg
lahf
stos
mov
repz
mov
or
repz
(bad)
stc
or
daa
std
pop
or
or
sbb
adc
daa
(bad)
(bad)
(bad)
jmp
or
daa
inc
or
daa
dec
or
daa
push
or
jle
bound
out
mov
jmp
arpl
add
sub
je
sub
mov
xor
aaa
or
or
arpl
jge
mov
ins
or
xor
imul
mov
mov
jae
cmp
lds
nop
dec
cmps
cmp
xor
or
mov
xor
and
xor
xor
aaa
ficom
leave
and
xor
xor
test
ficom
xor
ins
pop
lahf
retf
and
cdq
xor
push
fisubr
lahf
fidiv
or
xor
ins
popa
in
ror
inc
xor
xor
push
adc
pop
mov
cmp
cmps
movs
mov
aaa
adc
fwait
pop
xor
sahf
push
push
rcl
adc
sub
or
xchg
cmp
pop
ror
xor
jge
(bad)
xor
pop
ins
pop
pop
xchg
cmp
fisub
xor
fisttp
cmp
pop
xor
xor
xor
cmp
fidiv
pop
dec
cmp
add
shr
rcl
pop
pop
jge
push
pop
es
ss
mov
xor
xor
int3
in
mov
adc
sub
test
xor
addr16
push
popf
add
iret
adc
sub
mov
jecxz
imul
or
ficomp
je
xor
adc
adc
and
jnp
cwde
xor
jnp
ins
jne
pushw
adc
sbb
fsincos
arpl
pop
outs
or
push
sbb
xor
or
bound
push
mov
repnz
xor
xor
and
xor
xor
and
add
xor
and
add
xor
xor
ss
aaa
cmp
(bad)
xor
cmp
xor
ret
xor
and
pop
jecxz
cmp
test
xor
test
sbb
addr16
into
gs
ret
movs
pop
push
inc
sbb
dec
jb
(bad)
das
imul
arpl
pushf
inc
add
ins
or
loopne
mov
push
jo
fs
push
jo
stc
outs
fucomi
adc
dec
pop
sbb
jb
test
push
push
cmc
mov
mov
aaa
ret
dec
xor
jecxz
push
pop
xor
les
cmp
or
xor
bound
ja
fadd
cmp
push
sti
cmps
or
add
jbe
mov
xor
jae
retf
sbb
ds
inc
cs
xor
aaa
aaa
xchg
xchg
dec
mov
ss
dec
fist
xor
sub
rcr
xor
daa
ss
pop
fs
xchg
sbb
dec
inc
mov
sub
imul
xor
xor
pop
jns
sbb
cmp
aas
test
cmp
and
mov
js
mov
into
in
pusha
sub
adc
imul
jecxz
lahf
fcomp
shl
sbb
push
and
popa
arpl
cwde
outs
or
jb
or
dec
mov
xor
stos
jo
add
popa
adc
mov
push
imul
and
aad
pop
fs
mov
inc
sub
in
mov
repnz
retf
and
add
push
xor
idiv
repz
ss
cmp
dec
jnp
cmp
add
xor
dec
cmp
repz
xor
mov
xor
xor
fnstsw
xor
xor
mov
dec
repz
mov
xor
mov
cmp
mov
pushf
out
fiadd
dec
xor
xor
idiv
ror
add
xor
cmp
bound
ror
dec
sar
repnz
arpl
ror
and
cmp
cmp
stos
jge
push
pop
arpl
ror
xchg
add
mov
sti
cmp
(bad)
imul
cmp
sahf
out
or
inc
inc
inc
lds
in
inc
inc
jle
repz
inc
inc
inc
inc
inc
inc
jns
inc
and
sahf
out
inc
inc
inc
cmp
push
xor
inc
inc
inc
inc
mov
enter
push
sahf
out
sahf
inc
inc
inc
inc
inc
inc
repz
inc
ds
inc
add
cmp
inc
inc
inc
inc
jns
cmps
arpl
inc
inc
inc
sbb
inc
sahf
inc
cmp
repz
inc
inc
inc
inc
out
sbb
in
sahf
inc
inc
inc
inc
sahf
out
fiadd
inc
inc
inc
inc
inc
jno
pop
ds
inc
xor
inc
retf
push
(bad)
jns
mov
jle
inc
jecxz
je
inc
inc
and
xor
sti
push
pop
(bad)
inc
jnp
mov
popf
out
inc
inc
call
stos
xor
xchg
push
(bad)
out
sti
jmp
jnp
jle
adc
cmp
sub
loope
icebp
xor
mov
jmp
cmps
inc
mov
call
xor
inc
retf
arpl
jae
add
out
mov
inc
sub
inc
mov
inc
pop
inc
imul
xchg
jo
cld
sbb
sbb
inc
pop
and
push
add
mov
mov
or
add
mov
dec
pop
(bad)
mov
adc
inc
lahf
mov
xchg
jns
xlat
push
jp
and
push
sub
cmp
jns
out
dec
push
pop
pusha
sahf
out
sahf
push
nop
jns
out
cwde
mov
jns
out
enter
dec
repz
call
or
cmp
repz
and
xor
sbb
dec
inc
cmps
adc
int
movs
push
push
adc
lods
loope
inc
and
rcl
in
cmp
add
sub
xchg
adc
xchg
ror
dec
sbb
mov
and
jnp
idiv
add
adc
jb
fs
loopne
xchg
add
les
push
add
mov
fldcw
add
add
fiadd
push
ins
mov
xchg
add
out
mov
cs
push
pop
pop
pop
std
cmp
or
jbe
add
or
or
or
and
stc
push
or
or
add
sahf
out
popf
out
push
jo
lods
enter
jns
add
sbb
pop
repz
repz
test
loopne
jns
iret
hlt
adc
sub
fs
dec
popf
jl
ins
out
in
sbb
adc
inc
mov
push
cld
add
xor
out
loope
out
add
inc
rcl
inc
setb
inc
in
movs
jnp
(bad)
call
(bad)
retf
xchg
adc
push
cmp
dec
or
icebp
or
cld
mov
(bad)
(bad)
(bad)
(bad)
jmp
nop
fs
jecxz
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movs
in
bound
dec
mov
rcl
add
cmp
jmp
sbb
mov
dec
jge
dec
pushf
(bad)
(bad)
(bad)
inc
mov
push
jp
inc
inc
xchg
imul
lds
cmp
ret
(bad)
dec
dec
add
jbe
leave
push
pop
jl
mov
fild
pop
pushf
push
test
retf
add
pop
mov
pop
jb
pop
xchg
push
mov
sub
cmp
dec
pop
addr16
out
push
nop
ja
adc
xor
cmp
das
in
out
mov
retf
cmp
xor
daa
int3
cld
test
pop
je
adc
fidiv
in
inc
int3
sub
cmp
mov
inc
in
jg
int
faddp
fiadd
push
in
test
xor
lods
inc
fidiv
fs
rcr
and
xchg
es
loopne
in
push
div
dec
rol
ror
inc
pop
fdiv
mov
jnp
daa
je
pop
mov
clc
daa
out
ror
mov
pusha
add
sahf
daa
jge
in
mov
fcomp
das
fdiv
mov
push
or
in
fadd
xor
daa
ss
js
call
mov
cld
(bad)
cld
or
les
iret
rol
sbb
cmp
add
enter
mov
pusha
shr
dec
je
(bad)
test
jbe
aad
enter
xlat
loopne
shl
pop
repnz
out
sahf
ja
mov
pushf
mov
fdivr
jg
test
jb
sbb
sbb
cmp
pop
jle
pop
bound
fs
push
xchg
(bad)
jg
add
jbe
push
cmp
outs
ins
pop
maxps
rcr
add
and
push
iret
mov
aam
pop
sbb
das
dec
outs
daa
add
or
adc
ins
pusha
dec
add
and
xor
das
in
dec
in
fs
(bad)
loope
cmps
stc
cmp
push
xor
out
jns
out
cwde
or
inc
add
mov
out
xor
push
dec
add
mov
out
aam
std
lock
call
stc
sahf
out
sahf
dec
clc
ins
not
jns
cmc
shl
hlt
repz
out
adc
repnz
iret
repz
push
lock
xchg
out
je
repz
in
int3
in
call
mov
sbb
(bad)
call
sub
ficom
in
adc
push
push
sbb
iret
jae
xor
push
pop
rol
fcom
dec
pop
push
rcl
iret
cmp
call
sbb
mov
inc
jle
pop
cs
push
stc
cmps
retf
test
push
movs
mov
cmp
out
or
push
add
or
repz
repz
adc
repz
lods
adc
adc
or
mov
iret
and
outs
push
sbb
cmp
cmp
adc
out
sahf
cmps
push
sub
push
or
jns
js
test
mov
dec
repz
pop
xor
push
push
ds
repz
sbb
out
mov
push
and
push
adc
and
push
dec
add
repz
or
popf
repnz
mov
jmp
inc
push
aam
jg
mov
out
pop
ds
fdiv
cmc
call
(bad)
in
loopne
fcmovnu
and
adc
push
int
xor
(bad)
(bad)
cld
repz
out
push
loop
mov
sub
movs
jmp
enter
aas
mov
add
imul
add
sbb
and
xchg
fs
dec
repz
fdivr
mov
fsub
pop
xor
shl
mov
xchg
cmp
jmp
cs
ret
iret
int
push
outs
pop
loopne
mov
fiadd
fistp
outs
mov
sub
das
imul
sbb
sahf
xor
add
cdq
pop
fsub
jp
jmp
(bad)
jmp
outs
cmp
xchg
jg
dec
dec
das
inc
fwait
lods
inc
hlt
push
rcr
ds
sahf
xchg
adc
daa
int
xor
push
imul
out
lods
das
nop
push
call
and
mov
pop
lock
jae
cli
and
push
mov
sub
scas
mov
(bad)
call
(bad)
sar
xlat
in
and
pop
push
int3
dec
aad
sub
sub
jmp
das
cwde
lock
push
mov
out
mov
pop
int
add
std
rep
stos
sub
lock
out
test
mov
lock
jl
push
int
ins
mov
add
mov
inc
fpatan
iret
mov
loopne
jl
cli
cli
jmp
lahf
and
nop
out
nop
dec
sub
push
shl
dec
repz
sub
into
xchg
fsub
lahf
xchg
call
sub
jmp
jne
mov
push
and
push
xor
xor
loopne
xor
pusha
or
dec
sub
pop
pushf
sahf
jg
dec
stos
int
jmp
ret
iret
aas
dec
rcl
dec
(bad)
push
jno
cmp
iret
aas
jae
das
mov
push
add
test
xor
cld
repz
mov
lock
sbb
xor
inc
pop
outs
mov
push
add
mov
lods
faddp
xor
push
aam
pop
push
out
or
push
ja
std
xchg
add
and
outs
cmpxchg8b
(bad)
iret
aas
dec
inc
cwde
(bad)
jo
inc
stos
call
int
xor
out
out
scas
xor
out
xor
xchg
jo
push
aad
pop
push
mov
addr16
push
aas
test
(bad)
call
or
fisttp
out
dec
cmp
cmp
jle
add
test
pusha
(bad)
xor
imul
jg
sahf
lock
jb
cli
call
pusha
movs
hlt
xor
call
cs
out
cmc
dec
sub
adc
dec
push
jmp
dec
shr
in
push
int
push
xor
(bad)
fmul
pusha
in
outs
push
jg
jmp
add
mov
lock
push
ss
(bad)
cld
repz
call
inc
push
out
call
movs
add
push
push
cmc
cmc
mov
and
out
call
(bad)
wbinvd
add
cld
push
and
outs
jae
jo
sbb
sahf
cmps
cmp
hlt
dec
out
xchg
inc
(bad)
and
dec
push
imul
repz
mov
mov
cmp
repz
test
aam
dec
repz
push
push
fisubr
adc
iret
repz
dec
mov
daa
clc
or
cli
lea
mul
sbb
and
add
adc
push
push
or
(bad)
mov
out
outs
or
fld
mov
add
adc
sbb
adc
or
jbe
sbb
fsubr
sbb
mov
mov
pop
xor
mov
popa
jnp
and
or
aam
or
xchg
inc
es
push
pusha
inc
or
sub
add
xchg
mov
js
xor
dec
fisubr
scas
push
and
push
jns
add
icebp
and
inc
mov
jnp
xor
mov
or
cmp
pop
add
test
idiv
adc
pop
inc
pop
pop
cmps
fidivr
adc
pop
push
sbb
iret
add
adc
pusha
pop
(bad)
fist
push
jle
or
adc
pop
push
jo
jns
rol
or
stos
or
pusha
repz
out
mov
scas
out
iret
loopne
push
pop
sbb
fiadd
cmp
cmp
add
pop
adc
jns
out
mov
mov
(bad)
jns
lock
adc
adc
jns
out
xor
or
sahf
and
add
inc
call
lahf
pop
push
sbb
add
push
jl
out
loopne
cmp
sahf
pop
(bad)
ins
sub
cmp
repz
iret
repz
add
mov
repz
les
bound
repz
rep
add
cmp
pop
pop
sbb
cmp
aam
push
repz
repz
mov
cmp
aas
iret
add
or
xor
cmp
repz
pcmpgtd
iret
repz
lods
push
xchg
or
repz
push
pushf
arpl
jns
repz
push
outs
sub
push
push
mov
call
(bad)
adc
out
jns
popa
and
jns
inc
loop
sbb
jns
rcr
sub
in
cmp
push
adc
jns
sub
jne
retf
jns
out
stos
add
mov
sbb
iret
leave
repz
pushf
cmp
repz
cmp
leave
repz
jae
(bad)
cmp
repz
arpl
cmps
add
inc
out
sbb
jnp
(bad)
imul
iret
repz
or
repnz
push
pop
ja
repz
leave
into
addr16
scas
pop
repz
cmp
xchg
pop
pop
popf
cmp
leave
sahf
jg
fisubr
scas
mov
push
lahf
(bad)
push
dec
dec
test
shl
xchg
rcl
icebp
jb
pop
jb
test
pop
cdq
fnstcw
stc
lds
pop
movs
in
test
aad
jb
pop
leave
cmc
int
pop
jb
pop
in
popf
frstor
jb
mov
pop
ret
mov
test
enter
pop
jb
pop
stos
jmp
and
jb
fstp
sti
(bad)
cmps
test
out
leave
test
mov
pop
jb
pop
iret
scas
out
and
jb
lahf
fild
(bad)
jle
sahf
pop
push
out
mov
out
add
adc
add
add
ficomp
push
add
int
sbb
adc
add
pop
inc
push
jle
sbb
rol
push
popa
pusha
add
dec
movs
test
or
daa
adc
out
add
cdq
outs
mov
sub
cmps
adc
test
add
cvtdq2ps
daa
cwde
js
jb
and
add
or
inc
les
lods
add
and
cmps
mov
cdq
and
mov
dec
imul
and
dec
bound
or
int
mov
add
jb
push
imul
repnz
pop
push
push
(bad)
xchg
xor
xor
outs
int
jmp
popa
outs
jns
and
nop
aam
mov
dec
or
xchg
cmp
hlt
sbb
popa
cmps
fldcw
jg
loop
xor
cmp
sub
mov
fs
dec
push
add
push
add
das
jmp
dec
sub
add
sub
popaw
(bad)
mov
pop
ins
cmps
inc
ins
mov
sub
and
jmp
cmp
inc
xor
push
mov
stos
inc
inc
dec
jbe
test
into
cmp
adc
imul
mov
ficomp
sahf
add
leave
leave
leave
leave
adc
adc
dec
arpl
mov
dec
mov
push
aam
push
and
popa
inc
movs
xor
es
mov
push
cdq
or
rcl
gs
call
pusha
sti
jecxz
jns
mov
ret
push
add
sbb
movs
out
sahf
sbb
sbb
inc
pop
jb
mov
pop
add
and
jb
add
(bad)
cmps
dec
outs
inc
or
dec
dec
dec
dec
or
or
dec
xchg
dec
or
fild
adc
or
or
add
(bad)
sbb
repz
lods
ins
in
sbb
cmp
repz
pop
fdivr
iret
repz
jl
add
repz
mov
cmp
repz
push
shl
mov
repz
jb
or
repz
stos
push
sbb
cmp
repz
cmp
jp
push
xchg
cmp
repz
cmps
data16
repz
repz
push
(bad)
ss
repz
jbe
push
mov
cmp
repz
scas
outs
out
push
repz
repz
pop
fidivr
mov
jle
add
repz
mov
cmp
repz
push
shl
mov
repz
jno
or
repz
test
cmp
repz
pop
fnstcw
mov
jns
add
iret
repz
movs
gs
repz
repz
push
aad
mov
repz
jne
or
iret
repz
lods
ins
in
sbb
popf
pop
fnstsw
iret
jge
adc
or
xchg
push
sahf
out
sahf
xchg
push
push
rcl
xor
out
xor
jns
out
repz
mov
dec
dec
retf
retf
sub
out
sub
jns
out
jmp
sbb
fwait
pop
pop
fcmovnu
cmp
out
cmp
jns
out
sti
pop
pop
xchg
inc
inc
mov
jns
cmps
cmps
addr16
sahf
out
out
pop
xchg
sahf
out
sahf
xchg
push
push
xlat
xlat
aaa
jns
out
aaa
mov
ja
out
sahf
out
test
jns
(bad)
dec
dec
iret
iret
das
jns
out
das
scas
scas
outs
outs
out
sahf
out
out
pop
pop
lahf
sahf
out
sahf
lahf
pop
pop
(bad)
aas
jns
out
aas
mov
jp
out
push
inc
push
and
repz
pusha
adc
jo
cmp
repz
sub
pop
repz
repz
inc
and
repz
fs
xor
add
cmp
jnp
add
ret
and
arpl
jecxz
push
sahf
out
sahf
or
add
or
jns
out
add
or
push
out
sahf
out
push
push
add
sahf
out
sahf
or
add
sahf
out
add
or
pop
adc
pop
out
xchg
cdq
lods
push
adc
or
and
mov
rol
mov
lods
inc
adc
add
sub
or
sbb
pop
leave
inc
repnz
sbb
and
inc
in
add
pop
pop
leave
leave
dec
aaa
add
adc
enter
adc
push
pop
leave
test
sbb
push
and
sbb
les
and
addr16
pusha
inc
dec
and
pop
push
dec
add
add
jns
dec
add
mov
pusha
sub
jo
mov
stos
out
xlat
or
sbb
mov
jns
add
loopne
pop
dec
inc
les
push
add
or
dec
es
sbb
push
dec
mov
xchg
lahf
int3
daa
adc
(bad)
push
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
(bad)
(bad)
jmp
xor
fdivr
jmp
rcl
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
(bad)
(bad)
(bad)
push
mov
imul
std
in
leave
mov
add
ins
push
arpl
ud0
(bad)
(bad)
cli
cmc
or
outs
cmp
imul
addr16
add
aam
dec
std
test
shr
or
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
(bad)
fcomp
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
iret
shld
sub
mov
(bad)
and
or
adc
stos
sbb
inc
cmp
inc
fdiv
jno
add
aad
mov
mov
movs
in
(bad)
mov
aam
call
xor
jl
test
xchg
sbb
push
sub
jmp
xchg
ins
fs
add
hlt
push
imul
fdiv
gs
(bad)
mov
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fcos
(bad)
(bad)
push
adc
mov
mov
bound
ficom
gs
aam
pop
popa
(bad)
mov
pop
cmp
mov
inc
movs
fisttp
xchg
fadd
(bad)
sar
(bad)
(bad)
jmp
jmp
outs
xor
mov
sar
add
in
add
pop
dec
or
scas
cli
jmp
cmp
add
daa
xchg
or
and
test
fbld
outs
and
push
in
into
push
stc
ficomp
leave
fldcw
and
cmc
(bad)
call
xlat
(bad)
pop
cmp
mov
cmp
lods
dec
mov
mov
add
shl
jmp
fild
push
fdiv
or
test
fs
ds
or
call
jp
iret
push
in
dec
xchg
daa
scas
jl
sahf
pop
jge
xchg
(bad)
shl
(bad)
jmp
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
pop
jp
adc
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
(bad)
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
(bad)
(bad)
(bad)
push
dec
add
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
(bad)
(bad)
jmp
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
call
push
pop
cmps
call
ret
shl
scas
ficomp
ret
(bad)
(bad)
call
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
(bad)
mov
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
(bad)
(bad)
(bad)
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
(bad)
(bad)
fcomip
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
(bad)
mov
mov
loop
mov
push
add
mov
cmp
cmps
(bad)
(bad)
(bad)
push
push
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
inc
sahf
mov
inc
jmp
repnz
retf
mov
cmps
mov
sar
xchg
push
xlat
int
push
ficom
fldenv
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
hlt
jmp
fild
sub
sbb
mov
push
sub
dec
jge
cmps
pop
push
(bad)
xchg
inc
dec
or
ret
call
(bad)
(bad)
(bad)
push
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
and
push
shl
js
inc
(bad)
(bad)
(bad)
(bad)
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbb
add
call
test
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
idiv
jmp
icebp
out
repz
gs
fisubr
inc
inc
sub
(bad)
call
lods
std
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
add
hlt
div
sub
(bad)
(bad)
push
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
(bad)
jge
lds
sub
pop
add
jle
jmp
(bad)
sbb
adc
lock
inc
mov
ret
mov
(bad)
(bad)
(bad)
cmp
and
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
jmp
mov
mov
lea
push
cwde
xlat
ficom
test
inc
xchg
retf
les
jb
out
imul
push
inc
lahf
test
pop
mov
push
push
sbb
adc
and
inc
and
inc
out
and
push
fs
dec
mov
mov
and
cmps
xor
mov
lods
out
sar
(bad)
(bad)
inc
ins
mov
xchg
adc
jle
push
jns
(bad)
(bad)
(bad)
aas
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
(bad)
(bad)
jmp
out
ret
jl
rcl
cmp
mov
js
mov
test
cwde
(bad)
fisttp
or
mov
mov
scas
adc
(bad)
(bad)
(bad)
(bad)
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
(bad)
(bad)
(bad)
push
xchg
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
mov
adc
pushf
sub
add
push
push
(bad)
(bad)
(bad)
push
and
push
mov
push
(bad)
push
hlt
out
les
fdecstp
jmp
inc
mov
xor
push
retf
jo
outs
sbb
dec
inc
loope
fisub
lds
push
call
dec
in
mov
movs
ret
(bad)
jmp
xor
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
cmp
(bad)
(bad)
(bad)
push
mov
cmp
icebp
adc
sub
jae
xor
mov
jo
cmc
shl
pop
hlt
jmp
add
mov
arpl
lods
(bad)
loope
int3
mov
stc
(bad)
(bad)
(bad)
mov
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
les
adc
inc
cwde
dec
add
sar
push
or
cmp
popf
cmps
push
mov
(bad)
(bad)
(bad)
fcom
push
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
(bad)
call
sbb
bound
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
sub
clc
jmp
mov
adc
test
enter
clc
gs
adc
jns
movs
dec
mov
movs
daa
sub
repnz
(bad)
inc
out
out
mov
shl
es
xchg
aas
mov
cmp
clc
adc
out
sar
mov
gs
pop
jle
aaa
or
jbe
mov
div
lahf
adc
jb
and
push
push
add
(bad)
dec
test
pop
mov
mov
ret
mov
lea
push
adc
(bad)
std
fild
ret
xchg
or
fs
sbb
pop
loopne
xchg
xchg
fmul
or
mov
inc
leave
in
push
ja
(bad)
(bad)
(bad)
call
sub
das
sbb
fild
sbb
repnz
adc
(bad)
call
xchg
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
(bad)
(bad)
cmp
out
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
(bad)
(bad)
(bad)
push
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
(bad)
(bad)
mov
daa
leave
pop
sub
and
mov
and
(bad)
(bad)
(bad)
push
sub
cld
sub
ds
sbb
sub
call
das
sar
mov
lea
jno
pop
cmp
xor
jb
and
push
jbe
icebp
pop
je
(bad)
(bad)
inc
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
scas
(bad)
std
retf
mov
mov
fdivrp
cmp
nop
es
xchg
(bad)
dec
push
push
xor
cmp
imul
ins
arpl
(bad)
(bad)
jmp
sub
shr
aam
cmps
gs
fs
imul
dec
pop
mov
inc
aad
pop
outs
jns
dec
cld
arpl
dec
retf
or
xchg
mov
(bad)
(bad)
(bad)
dec
cwde
dec
cwde
call
test
shl
inc
xor
inc
jae
cmovo
out
(bad)
mov
mov
push
xor
mov
call
(bad)
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
data16
(bad)
out
clc
pop
mov
movs
pop
lock
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
(bad)
(bad)
push
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
(bad)
(bad)
jmp
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
(bad)
inc
fcom
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
(bad)
(bad)
call
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
dec
pusha
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
(bad)
(bad)
(bad)
push
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
(bad)
(bad)
(bad)
jmp
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
adc
test
dec
retf
lahf
lds
adc
leave
je
inc
int3
inc
ins
xchg
sbb
(bad)
jmp
mov
xchg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
(bad)
(bad)
(bad)
call
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
(bad)
(bad)
inc
xor
xor
dec
mov
or
(bad)
in
popf
or
test
mov
(bad)
mov
push
pop
and
push
adc
fadd
arpl
(bad)
(bad)
jmp
pop
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
(bad)
(bad)
(bad)
call
sub
and
xor
cmps
jbe
jne
inc
aas
mov
les
clc
mov
inc
mov
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
std
(bad)
(bad)
push
dec
mov
mov
pop
dec
adc
mov
mov
fsubrp
jg
inc
retf
ficomp
mov
loope
jg
aaa
addr16
stos
out
scas
mov
push
xchg
bound
fwait
push
mov
mov
lds
loopne
(bad)
mov
xlat
mov
fsubr
xor
loopne
adc
lahf
push
sbb
(bad)
(bad)
call
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
(bad)
(bad)
(bad)
call
sti
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
(bad)
(bad)
jmp
mov
cmp
rol
xchg
or
in
xchg
loop
pop
test
xchg
gs
cmp
pop
dec
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
mov
(bad)
(bad)
clc
sub
les
and
loop
outs
dec
jg
or
(bad)
jge
(bad)
call
aad
shl
mov
(bad)
lds
xchg
lahf
mov
inc
std
mov
jmp
inc
add
call
fwait
pop
aas
test
mov
sbb
mov
(bad)
(bad)
jmp
jbe
push
retf
pop
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
inc
cmp
das
retf
jnp
dec
ja
prefetchw
or
jae
mov
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
(bad)
(bad)
jmp
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
(bad)
(bad)
(bad)
mov
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
outs
cli
jmp
inc
addr16
fwait
push
add
in
mov
dec
leave
xor
inc
arpl
aas
imul
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwde
call
cli
dec
aaa
push
clc
inc
add
and
push
cdq
scas
xlat
clc
jg
push
cmp
in
mov
(bad)
jmp
pusha
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
(bad)
call
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
jg
add
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
pop
icebp
(bad)
jmp
std
shl
pop
xchg
idiv
sub
sbb
repnz
and
(bad)
(bad)
mov
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
mov
mov
mov
sub
stc
(bad)
and
push
mov
rol
outs
mov
(bad)
(bad)
jmp
call
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
(bad)
(bad)
(bad)
cmp
jbe
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
(bad)
(bad)
std
int3
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
mov
jmp
mov
lock
imul
ss
(bad)
(bad)
jmp
test
(bad)
cs
mov
call
mov
loope
into
cs
push
add
add
pop
std
pop
jmp
icebp
and
cmp
(bad)
mov
iret
test
jg
(bad)
(bad)
(bad)
call
ret
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
(bad)
(bad)
push
mov
jle
cmp
pushf
in
adc
add
sbb
(bad)
(bad)
dec
ret
ds
outs
sub
mov
add
xchg
out
mov
dec
or
(bad)
(bad)
(bad)
call
dec
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
(bad)
(bad)
jg
fdivrp
ja
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
(bad)
(bad)
(bad)
push
push
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
pop
nop
mov
adc
and
repz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
(bad)
(bad)
jmp
adc
imul
mov
in
adc
pop
dec
arpl
(bad)
(bad)
(bad)
jmp
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
in
dec
add
(bad)
(bad)
call
inc
ror
mov
xor
mov
ins
fstp
stc
inc
xor
ins
jecxz
(bad)
or
call
(bad)
or
pop
fnstenv
lods
push
mov
enter
mov
(bad)
(bad)
(bad)
push
and
mov
movs
movaps
mov
or
or
mov
or
and
(bad)
(bad)
(bad)
jmp
xchg
dec
adc
popa
sbb
cmp
add
jno
cwde
shl
mov
jno
das
sar
test
lahf
mov
xor
leave
(bad)
(bad)
(bad)
jg
add
or
sbb
or
sub
out
pop
(bad)
(bad)
(bad)
inc
imul
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
(bad)
fcomip
(bad)
call
mov
(bad)
adc
mov
jl
fstp
mov
(bad)
or
sti
aam
gs
mov
test
into
mov
fstp
loop
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
(bad)
(bad)
(bad)
frndint
lods
mov
pusha
mov
jae
add
pop
fisttp
jno
daa
add
(bad)
inc
mov
or
xchg
mov
and
mov
aam
into
popa
in
pop
(bad)
(bad)
(bad)
(bad)
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
(bad)
jg
(bad)
mov
mov
add
call
ja
add
es
jae
push
and
or
xchg
cmp
pop
test
push
iret
or
(bad)
call
jge
sahf
mov
setae
mov
push
mul
pop
and
(bad)
(bad)
dec
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
out
dec
(bad)
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fadd
les
repnz
sar
addr16
mov
fisttp
ss
fmul
sbb
sar
cmc
dec
test
fbld
ret
test
fist
outs
mov
inc
imul
sbb
outs
shl
int3
or
xchg
mov
(bad)
(bad)
jmp
add
mov
lds
or
sub
add
xlat
jmp
(bad)
(bad)
(bad)
jmp
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
(bad)
(bad)
(bad)
push
test
add
xchg
mov
jp
jnp
sub
xchg
ror
(bad)
(bad)
call
repnz
mov
fcmovnu
and
aam
inc
push
fiadd
(bad)
out
clc
dec
idiv
ja
sbb
out
punpckhdq
push
cmp
adc
(bad)
(bad)
(bad)
dec
pop
(bad)
gs
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
adc
(bad)
(bad)
push
popa
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
(bad)
(bad)
(bad)
cmp
test
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
dec
mov
xlat
push
xchg
push
ficom
and
addr16
jp
les
mov
jmp
add
outs
sub
or
mov
sub
sbb
mov
inc
xor
bound
lods
lds
pop
cmps
xchg
xchg
(bad)
(bad)
(bad)
(bad)
dec
(bad)
dec
cli
out
call
retf
lods
mov
or
scas
jle
sahf
sub
(bad)
(bad)
(bad)
dec
adc
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
(bad)
(bad)
inc
add
fld
ja
pop
jmp
aam
aas
(bad)
pop
push
sahf
(bad)
(bad)
(bad)
call
lahf
adc
and
call
shl
ret
fiadd
gs
(bad)
jmp
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
push
(bad)
(bad)
cmp
inc
ss
pop
pop
mov
jo
jno
imul
sub
mul
cld
(bad)
(bad)
call
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
dec
(bad)
(bad)
inc
push
lds
jge
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
(bad)
(bad)
(bad)
call
mov
cmp
lds
or
xchg
into
pop
loop
xchg
mov
pop
xlat
xor
cli
bound
ret
mov
ins
adc
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
adc
loope
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
jmp
std
call
and
jo
cmp
std
imul
and
ret
(bad)
(bad)
inc
xchg
scas
mov
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
(bad)
(bad)
(bad)
jg
or
stos
rcl
jmp
ja
das
aas
jns
ss
mov
or
(bad)
dec
je
adc
xor
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
(bad)
(bad)
(bad)
inc
mov
int3
retf
mov
cli
call
js
cmps
cmp
sbb
(bad)
jmp
leave
adc
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
(bad)
(bad)
(bad)
jmp
add
ins
jo
fdiv
adc
out
movs
add
test
mov
push
(bad)
mov
cwde
pop
ins
(bad)
adc
ss
daa
mov
fnstsw
cwde
add
mov
scas
bound
(bad)
lds
(bad)
out
hlt
push
out
rcl
fst
jmp
pushf
xor
imul
fistp
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
cld
arpl
lods
mov
in
test
xchg
sub
(bad)
(bad)
jmp
in
scas
mov
(bad)
repz
cmp
call
imul
or
stos
test
(bad)
(bad)
(bad)
(bad)
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xor
pop
mov
in
sar
ja
cli
xlat
dec
shl
out
stc
add
xlat
push
scas
xchg
adc
idiv
dec
lea
or
mov
pop
inc
sbb
ins
je
aas
les
push
push
test
(bad)
(bad)
dec
inc
jle
test
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
pop
add
cld
dec
xor
bound
into
jns
fmul
das
cli
jmp
dec
pop
push
cli
jle
jnp
sub
sub
xchg
mov
xchg
(bad)
(bad)
(bad)
inc
mov
repz
inc
gs
dec
xchg
outs
jne
mov
call
or
push
(bad)
fcomip
adc
gs
jns
(bad)
mov
sbb
mov
daa
repnz
mov
(bad)
(bad)
jg
mov
out
and
loope
or
mov
jle
sar
mov
jmp
imul
inc
cmp
ja
fsub
push
jle
hlt
out
push
or
imul
loopne
dec
jbe
or
lock
int3
xor
movs
fcomip
jg
push
add
pop
lods
test
push
retf
ret
jmp
dec
push
test
adc
psrlw
(bad)
or
push
out
inc
sbb
fs
xchg
push
or
cmp
sbb
(bad)
inc
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
(bad)
(bad)
(bad)
(bad)
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
(bad)
(bad)
call
cmp
xchg
mov
or
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
(bad)
(bad)
jmp
fcmovb
ss
test
test
xchg
aad
xor
imul
adc
frstor
in
(bad)
dec
daa
aam
es
dec
dec
and
cdq
and
(bad)
(bad)
(bad)
jmp
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
(bad)
(bad)
push
mov
shl
div
pop
scas
jb
xor
jbe
dec
sub
jb
(bad)
(bad)
(bad)
call
fwait
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
pop
inc
retf
mov
xchg
cli
fisub
nop
jmp
fiadd
pop
push
repz
call
or
js
sub
push
cmps
xlat
aam
fs
(bad)
jmp
add
dec
xlat
retf
and
mov
dec
(bad)
call
inc
fs
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
(bad)
(bad)
(bad)
inc
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
(bad)
(bad)
(bad)
call
add
jne
ds
mov
or
ror
adc
push
mov
cmp
(bad)
(bad)
(bad)
call
push
fistp
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loopne
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
jmp
in
or
cmp
xchg
in
mov
sahf
push
in
pusha
hlt
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
(bad)
(bad)
(bad)
jmp
push
push
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
(bad)
(bad)
(bad)
cmp
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
(bad)
(bad)
(bad)
dec
cmp
jno
mov
(bad)
and
fdiv
dec
in
imul
test
(bad)
(bad)
(bad)
(bad)
fdiv
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
ficom
test
jmp
jle
sbb
ret
int3
ret
xchg
cmp
rcl
pop
jmp
retf
dec
scas
test
pop
lahf
enter
or
icebp
int3
inc
pop
je
xchg
(bad)
jmp
sbb
add
nop
ins
cld
ja
sub
xchg
jmp
ds
push
call
and
repnz
loopne
jo
xbegin
pushf
cmp
xchg
popf
cli
jns
cwde
(bad)
(bad)
mov
dec
add
dec
call
xor
loope
pop
rol
dec
sbb
or
and
sbb
sbb
out
(bad)
rol
cmps
arpl
(bad)
(bad)
(bad)
call
jb
test
and
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
(bad)
and
cmps
xor
das
movs
jne
jbe
mov
inc
mov
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
mov
mov
adc
test
xchg
pushf
xor
loopne
mov
(bad)
fistp
mov
or
mov
mov
out
(bad)
dec
jmp
push
aaa
fdivp
xor
xlat
cmp
or
outs
mov
fbld
mov
fucom
fbstp
pop
arpl
push
(bad)
call
xor
call
adc
jno
jnp
enter
lods
call
or
into
outs
es
lods
jg
sub
mov
xchg
rcr
(bad)
(bad)
jmp
mov
(bad)
and
xor
pop
or
addr16
xchg
shr
push
cmp
xchg
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
aas
jmp
xchg
ja
inc
in
fmul
lock
xchg
lahf
les
xor
loop
push
dec
jg
outs
test
or
(bad)
call
lahf
ror
and
lds
sub
mov
inc
and
(bad)
(bad)
(bad)
jl
hlt
(bad)
xchg
test
call
cmp
xor
not
adc
iret
push
retf
(bad)
(bad)
dec
mov
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
imul
jnp
das
push
ret
ja
imul
setl
(bad)
sub
(bad)
mov
mov
nop
out
push
jle
fidiv
sbb
(bad)
(bad)
dec
mov
inc
sub
mov
cmp
jg
sar
xchg
outs
pop
hlt
(bad)
(bad)
fcomip
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
(bad)
(bad)
(bad)
fbld
xchg
fucomip
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
cmp
(bad)
push
arpl
push
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
scas
dec
push
(bad)
cli
scas
(bad)
inc
call
mov
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
add
push
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
pop
mov
mov
sbb
bound
and
inc
sbb
jmp
sub
sahf
aam
push
stc
(bad)
push
cld
mov
in
pop
cmp
cmps
(bad)
xor
or
cmp
add
mul
movs
add
sub
scas
cmc
test
and
mov
(bad)
call
xchg
fstp
ror
sar
add
push
movs
not
cmp
(bad)
dec
and
repnz
imul
cmc
xlat
jle
out
ror
ret
(bad)
out
sar
push
jp
jmp
fnop
add
arpl
and
stc
popa
or
mov
add
mov
mov
ss
(bad)
(bad)
(bad)
dec
movs
into
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
(bad)
(bad)
jmp
pusha
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
hlt
(bad)
(bad)
(bad)
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
(bad)
(bad)
call
mov
(bad)
jmp
sbb
push
bound
fwait
push
mov
xchg
xchg
cdq
xor
jmp
(bad)
push
es
mov
cld
mov
adc
push
ja
ss
adc
out
mov
add
pop
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
(bad)
(bad)
push
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
jmp
jns
adc
imul
mov
jle
cmp
cdq
in
(bad)
call
or
pushw
cmps
fidiv
sub
fisubr
sar
lock
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
out
icebp
dec
jp
mov
push
icebp
je
inc
push
sahf
out
sahf
(bad)
nop
fwait
test
(bad)
imul
jns
jmp
(bad)
or
add
add
shl
into
and
mov
mov
sub
mov
and
or
imul
add
sbb
bound
scas
add
out
pop
adc
(bad)
mov
push
lock
scas
jns
stc
lock
add
or
cmc
out
xor
call
mov
add
cli
jmp
add
iret
sar
neg
mov
cld
push
lock
inc
and
clc
dec
out
scas
cld
repz
add
cmc
out
add
out
aad
cld
stc
retf
fisubr
mov
push
fidivr
inc
jl
mov
test
cmc
and
lock
cmp
mov
sbb
add
je
les
test
jae
push
fidivr
mov
push
call
mov
repz
shr
mov
cld
int
pop
add
cli
sbb
cdq
iret
(bad)
cdq
push
(bad)
outs
dec
packsswb
mov
adc
add
dec
shr
add
hlt
mov
pusha
add
mov
dec
push
jg
pop
xlat
int3
mov
inc
into
push
mov
and
fmul
cld
repz
adc
int
aas
add
jp
jl
ror
mov
out
call
ja
adc
repnz
add
and
dec
pushf
add
(bad)
out
aas
fisttp
ds
aam
adc
mov
push
fisub
iret
add
out
add
popf
lods
loope
add
push
call
cld
(bad)
sbb
push
push
scas
push
data16
add
cmp
jno
fdivr
adc
inc
imul
(bad)
ins
adc
xor
pop
push
clc
movq
sbb
cli
call
jbe
push
and
cld
repz
add
loopne
sbb
(bad)
dec
dec
jae
fsub
pop
xchg
cli
push
fs
in
add
dec
dec
jg
sub
mov
inc
loopne
add
pop
pushf
pop
ror
test
adc
aas
inc
jmp
ds
imul
cmp
xor
sbb
sbb
jo
add
rol
test
sub
add
imul
ror
mov
stc
out
mov
jo
rol
enter
(bad)
cdq
xor
add
cmp
sbb
add
(bad)
adc
mov
push
mov
loop
in
push
outs
adc
sbb
ror
push
clc
mov
push
call
add
adc
fidiv
push
sbb
je
scas
push
jbe
jg
xchg
jg
jmp
add
retf
out
ds
fiadd
loope
out
sar
add
ja
cdq
add
dec
loopne
out
cs
push
neg
push
(bad)
cld
sti
xchg
mov
inc
xor
cld
push
push
cmp
jo
outs
sub
scas
out
push
sub
xor
test
mov
cmps
div
cmp
dec
dec
mov
jne
cmps
je
cmps
into
push
aaa
dec
fwait
add
(bad)
sub
or
mov
pop
add
or
test
adc
add
or
nop
push
xchg
mov
and
add
lea
push
fistp
cdq
push
(bad)
test
(bad)
inc
fsubr
rol
lods
pusha
in
(bad)
xor
jmp
dec
pop
in
cmp
add
icebp
push
(bad)
mov
mov
sti
pushf
dec
xchg
add
xchg
add
adc
std
and
aad
ja
imul
pop
dec
mov
cs
ja
adc
pushf
stos
not
or
sbb
add
popf
out
sbb
pusha
in
dec
push
cwde
mov
out
clc
fild
adc
fdecstp
jae
rcl
mov
aam
cdq
or
(bad)
(bad)
mov
mov
xor
shr
xchg
icebp
aam
daa
in
adc
xor
add
fmul
mov
pusha
clc
sub
scas
div
loop
shl
jae
lea
jmp
fucomip
push
mov
dec
rdtsc
sub
pushf
clc
leave
sbb
sbb
inc
push
add
xor
mov
jno
in
or
pop
pop
cmp
adc
fidiv
push
mov
lahf
dec
lds
mov
clc
cmp
push
(bad)
std
cld
call
inc
cmp
dec
lahf
aas
cwde
jmp
dec
imul
jns
mov
add
ss
out
fisubr
push
xor
dec
push
pop
jnp
out
pusha
push
jns
fadd
sahf
out
sbb
sahf
loopne
sbb
xor
xlat
mov
mov
outs
push
ins
or
dec
xchg
ins
push
xor
shr
mov
rol
sub
sahf
out
cmp
mov
jns
out
test
enter
jl
call
xor
cmp
repz
pusha
js
nop
repz
rep
mov
loopne
cmp
repz
add
jbe
sub
push
jo
cmp
repz
mov
in
clc
inc
jo
out
aam
and
and
or
adc
adc
sbb
jmp
jbe
push
or
in
mov
push
push
mov
add
sub
aas
les
gs
ret
mov
pop
hlt
and
adc
scas
sbb
pop
inc
fcom
push
pop
push
daa
and
jns
inc
add
push
loope
add
sbb
test
in
push
add
or
pop
sbb
adc
and
adc
or
push
dec
dec
dec
outs
rol
daa
dec
pop
or
das
imul
jo
inc
pop
add
pop
shr
inc
outs
dec
or
sub
(bad)
ins
leave
in
xchg
push
pop
pop
add
out
into
mov
pop
xchg
mov
mov
sti
cld
std
iret
cmp
idiv
inc
test
test
std
cld
repz
push
add
sub
push
(bad)
stos
push
add
fmul
data16
inc
jnp
inc
xor
xchg
or
repz
push
xchg
movs
xor
add
js
arpl
mov
(bad)
jl
cmp
lock
adc
add
mov
dec
or
fwait
push
cmp
aam
(bad)
(bad)
jmp
push
addr16
outs
sbb
dec
(bad)
(bad)
ficomp
cmc
mov
push
(bad)
cmp
retf
pop
and
nop
(bad)
(bad)
(bad)
push
daa
xor
not
mov
movs
mov
xlat
pop
xchg
sub
cmp
xchg
movs
(bad)
(bad)
(bad)
(bad)
jge
jbe
imul
je
icebp
inc
popf
jo
fs
and
sub
and
(bad)
(bad)
(bad)
mov
imul
mov
cmp
pop
stc
into
mov
push
or
clc
(bad)
inc
inc
or
ins
shr
mov
(bad)
(bad)
dec
call
(bad)
cmp
sbb
push
pop
shl
cmps
ja
clc
jmp
dec
or
inc
push
(bad)
inc
(bad)
in
pop
sbb
cdq
lea
lahf
adc
imul
out
push
daa
inc
int3
push
leave
push
and
adc
int3
fidiv
push
addr16
maskmovq
push
cmps
rcr
jo
xlat
push
iret
xchg
jno
add
mov
iret
imul
(bad)
fadd
and
jns
out
ins
mov
int
pop
push
sahf
cmps
stc
cmp
adc
pusha
jns
out
test
dec
repz
push
ins
mov
hlt
pop
xchg
dec
repz
rep
test
mov
xchg
fs
imul
hlt
sbb
inc
repz
out
nop
mov
repz
sub
mov
cmp
adc
fcomp
fidivr
arpl
push
and
add
push
lock
iret
repz
adc
mov
test
or
push
add
cmp
fcom
cld
sbb
push
push
push
xchg
aas
add
adc
es
push
in
out
mov
xor
aas
adc
mov
mov
mov
ret
aas
dec
pop
outs
push
or
jmp
push
xor
add
add
out
mov
push
dec
repz
test
loopne
shr
cmp
lods
add
push
cmp
inc
dec
fcomip
jmp
hlt
jmp
repnz
push
pop
fist
push
push
imul
dec
mov
pop
arpl
bound
cmp
ror
xchg
xor
dec
push
adc
and
test
push
and
and
sbb
inc
ror
xchg
mov
push
add
test
xlat
sbb
cmps
movs
jns
cwde
imul
lds
aas
push
mov
add
mov
adc
test
(bad)
iret
mov
std
cld
sti
or
shr
jne
xor
inc
dec
push
or
dec
js
icebp
cmp
test
call
adc
mov
pop
add
add
test
mov
js
(bad)
add
push
test
mov
or
add
mov
push
rol
sbb
fistp
loop
out
cmp
push
fwait
cmp
fwait
call
cmp
mov
xchg
test
ror
mov
shl
cli
push
push
cmp
lock
js
add
sub
add
add
and
sahf
out
fs
push
push
jns
lods
(bad)
fsubr
ins
jnp
clc
add
push
fist
and
mov
mov
loopne
push
sbb
xlat
aam
or
div
mov
cmp
outs
(bad)
mov
or
mov
pop
dec
aam
iret
inc
ss
mov
adc
iret
jnp
rcl
jle
ss
enter
mov
dec
fisub
js
fs
lock
push
mov
pop
call
out
sahf
push
out
pop
cmps
jnp
cmp
cs
push
add
ins
fild
ss
and
fcomi
out
loopne
add
mov
pop
sbb
jnp
test
mov
nop
jbe
pop
pop
aam
mov
sar
in
cli
and
push
mov
sub
adc
push
cld
test
out
ret
cmps
and
jo
push
xor
out
faddp
xchg
mov
and
cmp
and
jnp
jae
mov
(bad)
sub
push
int
fidivr
push
rol
mov
push
out
dec
mov
imul
js
lock
fstp
les
pop
adc
out
shl
outs
clc
es
into
imul
jnp
fmul
cs
mov
push
push
inc
push
aaa
movs
push
fidivr
push
out
mov
mov
call
into
add
dec
inc
sub
cwde
xlat
mov
out
dec
mov
push
mov
mov
cwde
outs
int3
push
clc
cmp
addr16
push
pushf
in
pop
push
mov
iret
imul
mov
ds
dec
ror
iret
(bad)
and
loop
jns
fsub
(bad)
dec
out
dec
js
pop
push
pushaw
jg
and
sub
sbb
(bad)
adc
push
pop
out
loopne
pop
mov
scas
sbb
cmp
cmp
jle
js
xchg
mov
push
cmp
out
fidivr
dec
and
call
sub
mov
(bad)
enter
loopne
outs
mov
mov
aas
je
out
cmp
push
fdivr
into
ffree
mov
pushf
cs
fadd
dec
inc
loopne
push
dec
mov
psrad
out
dec
jo
mov
mov
push
fisubr
adc
push
(bad)
nop
ss
push
out
out
mov
inc
ss
cmp
mov
inc
(bad)
jo
clc
pop
nop
scas
call
outs
scas
outs
push
xchg
cmps
cmp
mov
out
cwde
jb
push
cmp
xchg
test
addr16
out
xchg
push
data16
shl
and
lock
and
out
pop
test
mov
dec
fmulp
test
ds
xchg
dec
bswap
scas
dec
mov
pop
cmps
enter
mul
ja
fnsave
call
mov
pop
sbb
xchg
es
nop
into
shl
icebp
push
shl
mov
cmp
adc
out
sar
jb
cmps
ss
sbb
and
(bad)
ds
jbe
push
enter
or
cmps
(bad)
sub
enter
js
sbb
push
ror
ss
cmp
out
cld
adc
(bad)
inc
cmp
jnp
jns
xchg
dec
xchg
pusha
shl
xor
shl
fldenv
js
jge
into
fs
mov
inc
out
push
xor
enter
jnp
lock
outs
mov
and
mov
and
xlat
(bad)
mov
das
mov
push
xor
cmc
push
hlt
adc
pop
jle
out
xor
xchg
xchg
pusha
cs
push
xor
cmps
mov
mov
loope
call
jnp
cmps
(bad)
ds
mov
dec
shl
div
pop
fisubr
pop
cmovle
xchg
push
cmp
dec
(bad)
(bad)
ror
push
pop
xor
fidivr
adc
cmp
lea
out
mov
xchg
jecxz
cmp
loopne
push
pop
mov
dec
sahf
xlat
add
mov
push
mov
lock
neg
xor
jo
movs
xchg
xchg
pusha
test
inc
cmp
in
enter
cmp
and
ds
js
sbb
out
adc
int
sahf
out
pop
sbb
xchg
add
sbb
vmread
push
inc
lock
out
jecxz
sub
(bad)
push
movs
jle
xchg
movs
adc
pop
cmp
mov
out
or
fild
out
cmp
call
push
out
loopne
dec
outs
lods
inc
pop
xlat
or
(bad)
lods
push
xor
ins
jecxz
out
inc
mov
mov
push
enter
inc
inc
add
mov
add
and
add
nop
inc
add
add
mov
sbb
and
int
shl
call
or
test
repnz
or
mov
push
hlt
jb
xchg
jl
out
movs
fs
mov
nop
fadd
ds
repz
pop
fcom
cmps
jns
adc
es
loopne
out
in
js
xchg
pushf
not
ds
xor
daa
ss
adc
lods
ds
iret
repz
jo
sbb
mov
repz
and
inc
shl
mov
int
stc
sub
fdiv
shr
sar
push
icebp
push
push
cmc
out
mov
jg
xchg
inc
add
pop
inc
jns
out
sub
jl
out
sub
fcom
lock
dec
outs
add
outs
out
xchg
pop
sbb
sub
sbb
push
inc
and
xchg
cmps
ja
outs
daa
retf
adc
pushw
idiv
inc
push
ins
and
pushf
fwait
iret
repz
cli
push
daa
push
daa
jae
jns
ss
push
jl
call
pop
sub
mov
xor
dec
add
cs
inc
cmp
mov
je
pop
sbb
push
push
add
(bad)
sbb
adc
push
add
mov
jge
fwait
mov
mov
and
sbb
pop
pop
das
and
jns
jg
outs
jo
mov
inc
push
sub
jo
ja
pop
add
xor
cmc
jbe
dec
inc
mov
out
add
idiv
leave
popa
fs
mov
xchg
inc
js
push
les
push
fldenv
inc
fistp
int
dec
push
dec
inc
or
cdq
pop
xchg
cmp
js
cld
xchg
nop
mov
sub
inc
mov
sub
int3
mov
xor
test
and
xchg
sub
xor
ins
add
ins
cdq
xor
mov
jle
rcl
sbb
push
or
test
inc
inc
test
add
mov
mov
sub
pop
rol
inc
scas
fstp
inc
jmp
dec
mov
mov
xchg
rol
invd
ja
xor
or
cdq
or
sbb
dec
push
ja
jae
fmul
dec
and
movs
cmp
push
push
mov
shl
std
or
xor
inc
push
or
int3
mov
inc
push
add
les
je
xchg
push
or
and
sbb
add
and
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
fsub
ja
push
add
aaa
push
push
pop
or
mov
ficom
dec
es
ds
ficomp
or
pop
pop
aas
sbb
test
lds
jmp
(bad)
pop
mov
ss
out
pop
push
sub
or
jnp
jnp
inc
sbb
pop
dec
inc
inc
dec
(bad)
fsubrp
(bad)
fwait
sbb
push
sbb
mov
or
inc
ss
inc
or
outs
imul
(bad)
inc
add
or
jae
rcl
aaa
or
inc
les
(bad)
and
inc
dec
mov
xchg
movs
fwait
add
add
repnz
or
clc
add
pop
fst
cld
nop
xor
or
scas
dec
push
add
add
push
xor
lock
rol
cs
cmovbe
cld
inc
sbb
push
add
punpckldq
add
test
or
ins
ror
mov
shl
sbb
add
pop
bound
add
shr
out
push
out
ficomp
nop
or
out
mov
out
add
lock
clc
paddb
(bad)
aas
(bad)
fidivr
pop
fimul
pop
lock
out
mov
mov
push
pop
std
cmp
push
fld
ins
jl
inc
add
jbe
jg
cmp
jbe
jl
js
pushaw
repnz
repnz
pop
rol
add
jl
xor
aas
push
cmp
adc
add
nop
sahf
out
in
jg
into
add
mov
out
pop
aas
push
add
leave
push
xchg
jno
out
adc
shl
and
cmp
add
mov
das
aas
dec
pop
outs
daa
scas
pop
and
iret
pop
std
enter
clc
lock
aas
rcr
inc
jmp
es
add
push
inc
je
jmp
pop
outs
clc
pop
adc
inc
adc
pusha
lahf
add
loopne
pop
sbb
fisubr
mov
pop
adc
out
ds
jg
mov
pop
int
fwait
int
adc
adc
nop
fcmovu
jae
pop
cs
lahf
add
pop
cmp
fmul
aad
cs
pop
popf
or
jno
add
cs
ret
sub
jle
fwait
int
sbb
push
sub
inc
add
mov
sahf
in
inc
add
pusha
xor
sbb
stos
ja
xor
push
sbb
js
push
inc
cmc
(bad)
ins
ret
jbe
lock
int
mov
sbb
push
sbb
or
test
repz
inc
xchg
sbb
inc
add
rcl
inc
add
add
repz
add
rol
sbb
xor
add
xor
repnz
les
cld
jg
clc
aas
push
xchg
out
stc
pop
jmp
rol
add
div
aas
(bad)
jg
outs
or
imul
ror
sar
out
and
add
adc
out
ret
adc
add
iret
outs
pop
fdiv
xor
xor
das
sub
or
sbb
cmp
dec
or
test
out
sbb
in
iret
add
fild
test
pop
repnz
or
sbb
push
pop
add
cvtps2pi
cmp
xor
(bad)
outs
sbb
lahf
add
imul
xor
xor
clc
add
in
jl
ja
div
add
push
test
sbb
lock
cmp
rol
ffree
push
mov
fld
or
dec
out
or
das
adc
jbe
es
out
repnz
pop
jns
lods
neg
pop
outs
adc
pop
inc
cs
add
jl
mov
pop
imul
aas
jg
pop
data16
pop
dec
ja
div
mov
lock
adc
xor
inc
sub
xlat
xlat
or
push
mov
cmps
sbb
mov
aas
ror
neg
xor
cdq
loop
and
daa
pop
lods
add
dec
test
cmp
xchg
pushf
add
dec
add
stos
lock
cmp
xchg
add
nop
add
add
adc
add
and
push
adc
adc
add
nop
push
add
inc
inc
add
add
adc
or
inc
add
push
add
stc
mov
cmp
adc
and
inc
repz
loopne
mov
and
push
in
nop
test
mov
test
fiadd
sub
cmp
add
add
jo
push
cli
mov
add
jge
inc
sbb
add
push
aaa
cdq
push
out
and
mov
jecxz
xchg
imul
fisub
imul
test
fwait
mov
jp
out
adc
arpl
dec
and
mov
jl
gs
nop
or
mov
xor
(bad)
jbe
retf
sti
inc
adc
movs
push
cmp
adc
mov
nop
rol
fidiv
sbb
jbe
and
or
dec
mov
ja
inc
pop
pop
aaa
js
xchg
or
out
mul
repz
cs
out
dec
adc
push
jae
ins
retf
mov
inc
repz
jbe
jne
xchg
jecxz
add
stos
or
push
push
call
aaa
ja
inc
pop
mov
inc
dec
add
imul
dec
inc
push
fdiv
inc
push
inc
arpl
inc
shr
repz
push
mov
pop
mov
pop
pop
dec
imul
xor
mov
cmp
jp
push
pop
lds
jbe
adc
sub
mul
fcmovu
sbb
shr
rcl
aas
and
add
popa
ja
data16
jg
sbb
mov
dec
fsubr
aad
loopne
fild
pusha
cmp
add
inc
outs
mov
das
xchg
imul
bound
and
imul
aaa
jp
sub
push
or
retf
lods
call
jecxz
cmp
jmp
cmp
inc
ret
je
mov
push
mov
xchg
and
shl
ret
mov
mov
lods
add
or
inc
push
outs
and
mov
popa
or
push
and
int3
add
scas
pop
popa
cmp
imul
dec
dec
out
or
inc
ins
inc
push
add
mov
and
adc
daa
and
xlat
jns
sub
dec
adc
aaa
and
xor
cmp
imul
add
push
aas
stos
jmp
adc
or
push
or
jecxz
jne
add
jno
imul
or
inc
rcl
push
test
add
xor
ss
mov
fcomi
inc
pop
imul
push
cmp
aad
adc
jne
xor
sub
mov
jmp
jae
pop
jb
xor
adc
stos
mov
(bad)
pusha
or
cs
mov
ins
xchg
(bad)
xor
out
sbb
mov
mov
ins
inc
pop
pop
cmp
daa
push
retf
and
test
push
bound
not
inc
shl
mov
ret
cmp
jb
xchg
or
pusha
mov
ins
outs
(bad)
popa
push
mov
sub
xor
scas
jne
arpl
and
push
outs
inc
pop
out
popa
(bad)
addr16
aas
push
lock
shl
data16
(bad)
ins
mov
push
mov
popa
stos
(bad)
xor
mov
outs
mov
addr16
lods
mov
mov
ror
pop
mov
stos
xchg
ret
imul
mov
cmp
sar
push
xlat
mov
jbe
add
daa
inc
rol
xor
mov
fwait
arpl
aas
adc
and
outs
inc
outs
ja
mov
rol
mul
xor
test
inc
add
shl
add
call
inc
aas
pop
push
mov
nop
fwait
stos
outs
adc
imul
pop
out
xor
push
mov
add
sbb
mov
outs
pusha
or
jae
push
jmp
sar
or
ret
imul
inc
rol
add
add
xor
rcl
imul
sbb
dec
ja
pop
shl
sbb
xchg
(bad)
(bad)
xchg
xchg
fistp
jle
push
pop
jb
lods
jnp
test
mov
and
add
mov
mov
shr
push
adc
adc
pop
pop
adc
mov
loopne
push
cmc
pop
pop
aas
adc
test
arpl
adc
imul
jnp
sbb
sbb
cmp
rcr
sub
mov
scas
jae
push
arpl
test
and
retf
ins
xchg
mov
or
inc
jne
lods
pop
adc
ja
push
stos
jbe
jecxz
adc
(bad)
mov
jmp
mov
and
sub
sbb
add
jecxz
inc
sti
aaa
mov
inc
mov
(bad)
imul
stos
mov
imul
xor
add
fidivr
inc
mov
and
mov
test
iret
wrmsr
or
pusha
sbb
xor
jmp
add
inc
sub
ins
mov
test
xor
jae
adc
hlt
push
loope
pop
out
xor
add
pop
sub
adc
adc
pop
sub
fneni(8087
cmp
cmp
cmp
ins
jne
rcl
and
pop
jae
pop
in
mov
inc
scas
cmp
push
dec
dec
cwde
xchg
and
add
(bad)
imul
sbb
(bad)
stos
xchg
sar
xor
dec
dec
add
lods
call
pusha
mov
shl
sub
push
jecxz
ss
aaa
xchg
push
xor
out
inc
lea
pop
xlat
retf
dec
ret
sar
add
add
adc
inc
push
dec
add
sbb
sar
je
push
ja
add
div
mov
or
add
dec
ret
popa
enter
cmp
add
sub
mov
scas
pop
es
mov
fcomp
add
adc
jmp
xchg
xchg
adc
fld
mov
mov
xor
add
ror
and
jo
mov
push
out
loop
adc
pop
mov
or
pop
sub
das
or
fwait
inc
outs
aaa
pop
or
nop
cwde
or
sbb
pop
inc
pop
mov
pop
imul
push
(bad)
addr16
aad
out
daa
imul
or
xchg
out
(bad)
add
push
inc
clts
stos
rol
aaa
mov
inc
or
je
fisubr
sub
push
sub
iret
and
(bad)
call
daa
sub
fbstp
add
icebp
add
pop
stos
bound
loop
sbb
pop
inc
mov
jle
xchg
call
add
int3
call
rcl
inc
outs
into
pop
sbb
addr16
inc
push
rcl
das
test
test
scas
aas
jecxz
bound
pop
ss
inc
mov
ins
shl
(bad)
pop
or
bound
lahf
retf
shl
das
mov
and
jecxz
setg
or
sub
jecxz
imul
ja
lea
cs
or
scas
or
or
xor
stos
sub
inc
ret
adc
mov
daa
inc
add
mov
bound
inc
cmps
add
mov
bound
mov
push
adc
daa
adc
sub
dec
scas
ins
and
adc
aaa
sbb
cmps
scas
aam
inc
cmps
and
jae
test
mov
xor
jae
push
cmp
cmp
(bad)
stos
stos
mov
or
or
ror
sbb
outs
sub
imul
add
jb
imul
pop
inc
xchg
das
cmps
aam
mov
jg
cmp
mov
(bad)
jmp
ins
aaa
sbb
or
mov
fcom
adc
pop
add
sti
js
add
out
pop
cmp
imul
lds
cli
lahf
mov
scas
xchg
push
vphaddwq
dec
repz
jmp
(bad)
cmps
pop
(bad)
adc
and
sub
pop
ins
sbb
addr16
inc
out
arpl
(bad)
lds
loopne
aam
inc
sti
(bad)
cmp
xor
jmp
fstp
scas
mov
mov
dec
outs
ret
(bad)
mov
and
pop
ins
pop
arpl
sti
add
xor
push
and
push
pop
mov
or
ins
rcl
data16
sti
adc
push
xchg
push
pushf
scas
jmp
xor
jnp
pop
daa
sbb
pop
mov
loope
clc
mov
push
add
cli
imul
sbb
mov
push
sbb
out
or
(bad)
jmp
inc
(bad)
outs
loope
scas
ficom
cmps
and
add
mov
cmps
jnp
fidiv
inc
jmp
sub
jecxz
mov
stos
pop
mov
push
sbb
arpl
xchg
mov
(bad)
mov
(bad)
push
push
sub
pop
jle
cmc
push
xor
mov
mov
and
xor
adc
and
sbb
cmp
addr16
push
popa
pop
dec
sbb
sbb
and
(bad)
push
push
cmp
shr
sub
jmp
mov
cs
pop
(bad)
dec
in
xor
daa
sub
fisttp
and
sbb
scas
push
inc
cmps
hlt
cmps
nop
push
mov
dec
add
jg
lea
and
pop
and
ja
iret
pusha
in
sub
add
outs
fwait
and
xchg
test
pusha
das
dec
sub
adc
sbb
or
arpl
jmp
push
xor
test
ret
pop
daa
cs
dec
sbb
lds
inc
mov
adc
bound
scas
add
jae
or
mov
sub
aaa
fidivr
fwait
and
test
and
adc
fsub
scas
dec
jbe
adc
int3
nop
cmp
pop
arpl
inc
sbb
jae
pusha
add
hlt
scas
and
cmps
sbb
xor
mov
mov
stos
call
mov
dec
aaa
jae
ja
adc
retf
push
mov
dec
sbb
and
out
xchg
stos
jg
xchg
mov
xchg
push
jmp
jae
fsubr
sbb
aad
cs
inc
daa
xchg
mov
mov
mov
sahf
outs
movs
pop
(bad)
jp
xor
idiv
aaa
(bad)
adc
fimul
jmp
sub
add
(bad)
or
stos
cmp
mov
pop
pop
or
jnp
aaa
push
fwait
les
xor
aaa
mov
mov
fidivr
pop
aas
add
xor
dec
inc
jo
xor
or
es
xor
adc
cmps
pop
push
inc
add
(bad)
push
and
add
jae
adc
jmp
les
xor
jno
sub
add
add
dec
movs
sub
dec
push
test
fld
mov
mov
outs
mov
sbb
gs
js
add
outs
pop
jae
daa
jno
xchg
cs
daa
pop
xchg
mov
push
or
pop
push
movs
(bad)
adc
mul
loopne
inc
out
daa
and
lahf
es
sub
in
adc
jg
sbb
push
xor
shr
adc
dec
je
out
stos
push
dec
mov
push
(bad)
sti
fwait
push
fcom
outs
and
(bad)
mov
inc
sub
mov
ret
cmp
sub
add
shl
js
push
retf
push
mov
div
cmps
inc
adc
sub
(bad)
shl
(bad)
push
in
dec
(bad)
dec
fmul
scas
inc
pop
cmp
adc
inc
fwait
inc
inc
mov
int
cmp
push
jmp
shr
jnp
cmp
jns
imul
je
sub
xchg
sub
mov
xor
mov
sub
sub
pusha
sbb
or
popa
int
mov
jae
in
sub
retf
cmp
test
stos
adc
out
mov
cmp
inc
mov
mov
adc
and
jmp
stos
inc
mov
stos
or
test
jo
sbb
mov
ffreep
rcl
cmp
adc
scas
outs
arpl
dec
cmp
loop
cmp
fisub
mov
and
jbe
ja
adc
test
push
(bad)
pop
aaa
test
or
mov
push
mov
test
or
mov
ret
xor
imul
ret
mov
adc
xchg
sbb
pop
test
push
adc
repnz
(bad)
loop
daa
je
mov
mov
arpl
push
jb
lods
imul
pop
adc
(bad)
(bad)
(bad)
adc
ja
mov
xchg
ja
cwde
mov
add
or
push
sti
fisubr
loope
jnp
pop
mov
stos
xor
arpl
mov
or
push
xor
pop
cmp
sbb
inc
xor
mov
pop
pop
jg
mov
addr16
adc
pop
fild
or
jo
add
lods
inc
adc
adc
jns
sbb
or
jmp
leave
add
outs
jae
push
ja
imul
cs
and
and
test
rol
dec
jmp
retf
(bad)
dec
sub
sub
and
pop
sbb
fmul
fst
lds
ja
daa
lds
inc
arpl
sub
inc
xchg
add
push
mov
fwait
mov
fild
outs
mov
lods
arpl
adc
sub
mov
inc
fwait
imul
sbb
rcl
stos
cmps
cmps
pop
push
or
mov
ret
mov
das
ja
jo
and
arpl
pop
push
jne
shl
xlat
(bad)
and
add
sbb
sub
mov
sbb
push
xor
adc
ret
addr16
fisttp
dec
mul
jo
or
adc
inc
adc
stos
sbb
and
sbb
movs
add
div
and
js
sbb
jo
jns
js
aam
add
adc
das
mov
or
and
push
jb
mov
xor
and
sub
lods
and
rcr
aad
jmp
inc
call
pop
or
adc
inc
nop
mov
dec
(bad)
mov
inc
adc
addr16
shr
sbb
inc
aaa
add
sub
sub
sti
sbb
pop
add
pop
pop
add
pusha
shl
lods
or
sub
cmp
mov
or
ds
dec
dec
mov
ds
or
jae
adc
xchg
mov
add
or
mov
mov
(bad)
and
mov
dec
add
ror
mov
ja
arpl
mov
je
push
push
outs
lahf
jnp
dec
fld
xchg
mov
ins
(bad)
cli
xlat
inc
imul
dec
div
add
add
pop
lahf
add
xchg
popa
cmc
shl
jg
push
fadd
add
popa
or
repz
mov
or
fild
sahf
cmp
mov
arpl
pop
fmul
mov
mov
bound
adc
ficomp
or
sbb
add
inc
jbe
add
cli
xlat
je
inc
movs
pop
jae
data16
(bad)
test
scas
adc
xor
fisubr
mov
sub
adc
stos
imul
push
sbb
mov
add
adc
add
sub
sbb
push
les
idiv
leave
xlat
adc
mov
adc
sub
adc
dec
je
or
cmps
add
pop
dec
jne
pusha
sar
lods
pop
outs
add
mov
mov
outs
xchg
adc
jne
(bad)
push
push
jmp
xor
mov
xchg
popa
mov
aas
mov
test
dec
fwait
pusha
(bad)
ret
push
push
in
add
mov
rol
ja
adc
push
adc
xor
add
inc
outs
mov
sbb
push
dec
mov
add
jecxz
ss
mov
inc
cmp
cmp
movs
or
pop
mul
xchg
pop
cmps
jg
ja
mov
mov
aaa
mov
pop
das
mov
sub
jne
xor
add
cmps
jmp
or
stos
iret
or
xor
arpl
lods
and
inc
outs
cmp
jmp
aam
jmp
stos
jmp
or
add
adc
sbb
adc
inc
cmc
ror
stos
aaa
jecxz
mov
sbb
dec
pop
push
imul
dec
push
adc
push
or
pop
xchg
jg
adc
out
jno
scas
cmp
ret
add
dec
and
adc
adc
sbb
push
cmp
sub
and
sub
dec
pop
test
jle
cmp
ror
out
or
fbld
es
arpl
test
mov
cmps
xchg
aas
push
inc
lods
bound
add
cmp
out
mov
das
aas
popw
sub
call
mov
pop
outs
sbb
cmp
push
cmp
fcmovnb
sub
test
jnp
daa
push
ret
xchg
ja
mov
and
dec
add
fwait
and
cs
lds
(bad)
ds
movs
or
out
ret
and
sbb
test
and
jns
mov
scas
or
pop
mov
out
outs
pop
jg
icebp
push
add
mov
xlat
das
jp
xchg
or
jmp
xor
adc
fwait
inc
sub
push
shl
ret
sbb
xor
neg
push
add
(bad)
pop
adc
cmp
(bad)
cmp
xor
repz
add
fwait
cmp
sahf
int3
mov
scas
jb
push
fiadd
inc
or
or
cmp
add
inc
lds
mov
or
lea
sbb
cwde
inc
add
add
sub
push
sahf
sbb
jbe
adc
aaa
push
fs
and
push
add
dec
ret
loop
or
jno
push
fisub
retf
aaa
push
iret
outs
rol
inc
int
or
and
gs
jp
test
movs
xlat
call
out
push
or
adc
push
push
lods
sbb
adc
add
jmp
inc
add
imul
mov
add
pushf
dec
jmp
in
push
xor
inc
inc
les
inc
push
mov
and
dec
and
pop
and
or
xor
push
scas
cwde
adc
xchg
jns
adc
add
popaw
sbb
mov
and
rol
add
pusha
mov
pop
adc
mov
fadd
fisubr
adc
sub
add
mov
adc
mov
adc
add
sbb
wrmsr
sbb
sbb
rcl
or
imul
or
daa
fld
mov
shr
sahf
movs
and
ins
frstor
es
inc
add
adc
fs
imul
sub
inc
xor
sub
push
push
mov
push
push
adc
mov
popf
inc
and
cmp
mov
and
xor
pop
mov
adc
setl
ins
push
lods
enter
inc
and
leave
pop
adc
adc
push
and
shl
rol
xor
inc
dec
adc
fld
mov
and
loope
push
in
mov
jmp
inc
xor
pushf
xchg
xor
sbb
test
inc
mov
dec
sbb
lea
push
es
ret
jbe
(bad)
call
inc
add
sbb
push
rcr
adc
adc
mov
or
aaa
add
push
or
in
push
cmp
or
add
jmp
retf
sub
inc
dec
pop
sub
cli
mov
and
add
xor
ins
adc
fiadd
inc
cmp
adc
inc
xor
sbb
adc
adc
lds
sbb
adc
sbb
repnz
(bad)
or
jno
jae
rcr
test
mov
xor
frstor
fild
mov
inc
daa
pop
test
fadd
cmps
sbb
les
adc
(bad)
adc
movs
stos
ins
or
mov
dec
xor
in
sti
adc
xor
jne
mov
out
push
adc
xchg
jne
imul
prefetch
jo
jne
sbb
adc
inc
xchg
adc
sbb
pop
ret
loopne
add
and
inc
mov
ficomp
inc
add
mov
imul
push
jge
enter
add
lds
nop
dec
xor
inc
rcl
test
mov
cmp
inc
xor
push
ret
and
adc
sbb
and
add
add
add
add
and
push
and
call
ins
dec
or
inc
mov
retf
cmp
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
jno
sbb
or
ret
imul
xor
add
or
dec
into
push
push
rol
push
popa
jno
or
mov
pop
or
push
cdq
sbb
ret
dec
pop
mov
push
push
mov
enter
popf
jne
rol
pusha
or
or
sbb
jecxz
add
add
add
and
add
ds
inc
aaa
add
xchg
aaa
into
bound
jae
rcr
in
and
sbb
sbb
int
add
test
ja
and
cmps
imul
jae
sti
sbb
push
sub
inc
mov
mov
sub
xor
arpl
fidiv
daa
xchg
sub
adc
and
pop
push
fucomi
sub
ins
jne
jecxz
mov
or
or
or
or
pop
or
dec
inc
popf
fisttp
inc
add
pushf
push
adc
and
jae
add
or
pop
push
adc
cwde
or
fbld
in
add
dec
push
cmp
in
mov
and
ror
bts
sub
add
add
cmp
daa
sub
dec
sbb
cmp
xor
xor
mov
jb
cmp
shl
mov
inc
cmp
and
push
or
scas
adc
pop
push
or
lods
sbb
adc
or
dec
pop
xor
repnz
and
test
or
int
retf
or
pop
repz
mov
or
adc
add
sub
pushf
sbb
add
fwait
add
mov
sti
push
xchg
add
call
dec
dec
adc
sbb
lock
in
scas
scas
gs
outs
(bad)
sbb
xchg
mov
push
repnz
(bad)
(bad)
jmp
or
add
xchg
pop
out
inc
inc
pop
adc
ret
mov
add
(bad)
push
or
push
or
jmp
ins
xlat
popf
add
repz
(bad)
(bad)
(bad)
call
repz
jns
lea
movs
inc
mov
hlt
lds
xor
or
mov
scas
scas
(bad)
(bad)
(bad)
(bad)
jns
fstp
jp
ss
call
sub
int3
mov
mov
jmp
jmp
loopne
adc
inc
mov
adc
cmps
adc
mov
or
(bad)
(bad)
dec
les
push
adc
out
sub
cmp
or
cli
das
push
(bad)
stos
cmp
add
call
sub
popa
xor
es
and
out
dec
or
fld
jne
xor
shl
(bad)
(bad)
jmp
jns
pusha
test
xchg
cmp
xor
sbb
xchg
lea
cwde
gs
sbb
pop
dec
cmp
(bad)
(bad)
jg
fdiv
ds
mov
dec
add
stos
jb
popf
mov
or
(bad)
inc
test
loopne
enter
aas
push
sbb
sti
std
loopne
mov
cmps
lods
adc
mov
(bad)
(bad)
jmp
jmp
adc
xchg
fcmovne
fnstsw
and
inc
mov
mov
and
or
or
imul
loop
je
sub
(bad)
(bad)
(bad)
inc
cli
mov
mov
mov
mov
mov
or
mov
mov
push
(bad)
(bad)
(bad)
call
push
and
into
ins
(bad)
cmp
sub
xchg
rcl
fisub
(bad)
(bad)
(bad)
call
scas
xchg
test
and
adc
jecxz
scas
je
sar
sbb
stos
inc
and
in
(bad)
in
(bad)
inc
movs
sub
push
retf
test
xor
xchg
popa
pushw
dec
jmp
pop
cmp
(bad)
(bad)
inc
loope
pop
jmp
xchg
mov
movs
push
jne
movs
sub
pop
js
adc
(bad)
(bad)
(bad)
js
xor
lock
into
jp
mov
mov
or
cmps
push
(bad)
(bad)
(bad)
(bad)
mov
iret
adc
xor
hlt
mov
call
cmps
sahf
or
std
sbb
pop
pop
(bad)
(bad)
mov
lock
add
ss
clc
repz
lods
jne
lea
or
inc
cld
lods
clc
xor
call
cmp
inc
pusha
sbb
in
xor
add
(bad)
cmp
dec
xchg
rcr
push
inc
sbb
cmp
sub
sub
(bad)
jmp
jbe
mov
loop
loop
imul
inc
rcl
es
sbb
pusha
push
sbb
pop
jmp
js
xor
or
sub
adc
pop
pop
(bad)
(bad)
(bad)
(bad)
jmp
adc
fnstcw
nop
pop
push
call
retf
jl
(bad)
(bad)
(bad)
push
xchg
push
sub
xor
lea
repnz
mov
loope
jb
cs
or
pop
out
(bad)
(bad)
dec
mov
add
js
out
xchg
movs
out
scas
pop
xchg
pop
xchg
outs
mov
xor
(bad)
(bad)
mov
stc
jge
aam
test
rcr
pop
inc
jecxz
out
pop
dec
push
(bad)
(bad)
(bad)
dec
xchg
retf
push
shr
dec
sbb
and
shl
sbb
and
pusha
and
add
(bad)
mov
cmc
fcomp
stos
int3
pusha
ror
jmp
int3
push
jno
ror
add
add
std
xor
and
out
(bad)
jg
jmp
adc
arpl
jg
(bad)
int
sbb
xchg
cmps
xchg
cmps
ja
popa
cld
inc
pop
add
xor
bound
in
cmc
push
mov
push
(bad)
(bad)
push
stc
pop
pop
rcr
out
(bad)
int
addr16
clc
cmps
fldcw
lock
add
call
dec
stc
mov
xchg
add
jmp
std
add
imul
jle
(bad)
(bad)
call
sbb
faddp
xlat
addr16
pop
int3
(bad)
ins
cld
and
lods
popf
shl
ins
mov
push
pusha
lods
jne
pop
sub
loopne
jle
adc
mov
mov
imul
mov
pop
sbb
call
cld
(bad)
fld
jge
jnp
ret
mov
repz
loop
test
(bad)
ds
and
add
and
aad
xlat
loopne
ror
lods
imul
cmps
iret
pop
mov
dec
xor
mov
in
cmp
add
repnz
cmp
add
inc
mov
(bad)
(bad)
push
adc
repz
in
dec
inc
out
js
(bad)
les
xchg
sbb
push
or
call
or
(bad)
(bad)
(bad)
(bad)
jge
push
cdq
sbb
mov
test
xor
ins
mov
mov
(bad)
(bad)
(bad)
jmp
dec
lods
push
push
xchg
mov
sub
inc
es
push
fisubr
sub
hlt
xor
(bad)
call
shl
stc
dec
cmp
sbb
xor
loop
mov
push
push
pop
cld
jg
into
cli
rcl
retf
scas
ja
ins
mov
inc
and
inc
les
ins
cmp
arpl
pop
xlat
jo
jno
xchg
imul
outs
lods
push
inc
icebp
std
or
(bad)
(bad)
jmp
popfw
adc
call
adc
inc
test
xchg
addr16
sti
inc
(bad)
(bad)
(bad)
call
lea
in
int3
pop
aas
shr
lahf
xchg
stos
mov
xchg
dec
push
imul
(bad)
(bad)
(bad)
jmp
(bad)
jnp
sbb
jl
int3
mov
out
adc
aaa
loopne
(bad)
out
ss
into
aam
mov
(bad)
(bad)
(bad)
jmp
cld
inc
add
cmp
sub
or
add
icebp
push
stos
cdq
in
jmp
das
xchg
mov
aad
or
inc
es
pusha
loop
dec
xchg
jns
xchg
pop
sbb
ja
test
mov
and
(bad)
(bad)
dec
adc
cmp
repz
outs
dec
mov
lahf
mov
adc
movs
(bad)
(bad)
(bad)
(bad)
fdiv
push
mov
mov
inc
inc
pop
push
sub
jg
jae
addr16
dec
addr16
fadd
les
jmp
cmp
repnz
xchg
cmp
clc
lahf
xchg
inc
mov
pusha
lods
lock
cmp
int3
iret
bound
(bad)
dec
cmp
js
sbb
icebp
scas
sbb
jp
(bad)
(bad)
(bad)
call
int3
push
imul
push
and
dec
mov
push
add
xchg
int3
in
add
mov
iret
not
(bad)
(bad)
(bad)
jl
cli
push
jo
sbb
ret
xchg
mov
aam
push
(bad)
mov
mov
pop
push
(bad)
push
call
xlat
repz
ins
pop
sbb
hlt
fidiv
loop
jmp
int3
add
cmp
xchg
jp
idiv
dec
call
sub
call
adc
out
sbb
out
js
(bad)
mov
mov
cmp
hlt
mov
bound
push
(bad)
(bad)
(bad)
(bad)
cli
adc
pop
test
loop
sub
sbb
push
adc
pushf
or
bound
mov
sti
std
jmp
into
inc
xor
fmul
rol
sbb
and
dec
pop
stos
stc
(bad)
(bad)
(bad)
mov
fmul
aas
mov
in
mov
mov
cwde
loop
xchg
mov
pop
cmc
sub
inc
xrelease
mov
fst
mov
mov
sar
jg
(bad)
out
shl
aad
test
dec
inc
repnz
ret
add
call
fwait
or
(bad)
add
out
pop
stos
jmp
push
pop
push
(bad)
push
or
pop
ret
push
cld
fiadd
mov
mov
jecxz
orps
call
ja
adc
mov
pop
adc
std
loope
dec
push
jbe
loope
movs
xor
out
mov
outs
cli
inc
lock
imul
bound
push
jmp
or
call
push
pop
add
sub
out
dec
mov
push
adc
shr
aas
psadbw
mov
mov
pushf
mov
ret
retf
inc
cmp
out
scas
sub
push
test
lock
call
and
and
sub
jne
add
jg
and
dec
fisubr
nop
inc
sub
std
cdq
lock
sub
adc
rol
pop
xchg
aaa
test
xchg
lock
popa
aaa
sbb
sbb
(bad)
ss
add
or
inc
jge
mov
or
xor
ins
xchg
push
add
lock
pop
cwde
pop
xchg
or
push
imul
aam
jp
inc
add
xchg
inc
push
(bad)
lods
add
ins
cmc
or
mov
fmul
or
inc
xchg
and
pop
dec
push
and
jmp
pusha
inc
fimul
dec
imul
fild
in
and
and
mov
pushf
xchg
cmp
push
ja
(bad)
(bad)
cmp
xchg
not
ds
lods
inc
fdiv
mov
ins
add
enter
adc
add
adc
inc
lds
adc
les
mov
mov
(bad)
(bad)
mov
cmp
pop
fsub
in
in
sti
xlat
sti
mov
into
jns
ud0
(bad)
inc
out
push
cmp
cmp
fcomp
(bad)
dec
dec
(bad)
leave
mov
loopne
and
out
call
es
ret
lds
js
je
aas
(bad)
inc
jmp
add
and
(bad)
loope
cmp
xchg
add
adc
or
nop
fmul
mov
push
enter
mov
mov
or
ins
jns
inc
and
ds
fcom
or
mov
clc
cdq
sub
repnz
push
in
(bad)
fbstp
inc
and
add
scas
add
add
mov
dec
pusha
add
fidivr
inc
adc
add
dec
add
outs
(bad)
mov
test
xchg
int
dec
shl
adc
xchg
rcr
ja
lock
and
lock
mov
push
pop
sub
or
and
out
dec
into
or
(bad)
call
sbb
rol
(bad)
cmp
nop
out
in
out
out
out
hlt
lds
and
and
fild
mov
iret
out
ficomp
hlt
add
mov
mov
mov
ficom
(bad)
pop
xor
or
stc
mov
(bad)
(bad)
(bad)
cmp
inc
push
sahf
mov
sbb
or
in
and
jecxz
push
loope
loopne
jle
fwait
(bad)
aaa
std
cmp
fstp
jno
inc
cdq
lods
shl
scas
(bad)
jmp
retf
add
xor
jmp
sub
loop
mov
sub
mov
loope
(bad)
call
mov
jns
push
xchg
inc
and
xchg
loop
jmp
xchg
std
or
mov
ror
mov
ins
sar
mov
pop
shl
mov
repz
mov
mov
sbb
mov
and
movs
jecxz
jle
outs
or
sbb
pop
dec
(bad)
or
inc
mov
cmp
adc
jmp
pushf
rcr
inc
or
sar
push
in
(bad)
dec
xchg
inc
sbb
add
mov
sbb
mov
xor
or
jmp
adc
jo
push
pusha
sbb
or
enter
and
mov
bound
(bad)
(bad)
(bad)
call
cdq
mov
popa
dec
xor
and
(bad)
movs
add
dec
and
sub
call
lea
nop
fcmovne
and
mov
mov
push
add
add
mov
mov
(bad)
jmp
minps
sbb
cmps
ror
(bad)
(bad)
jmp
jge
mov
shl
push
mov
popa
pop
mov
sbb
(bad)
push
arpl
pop
xor
dec
aaa
jbe
sbb
sahf
popa
out
or
pop
(bad)
(bad)
jg
sbb
adc
inc
test
in
and
add
jmp
xchg
test
mov
jp
stc
les
cmp
es
and
and
adc
dec
(bad)
(bad)
(bad)
jmp
leave
xchg
in
or
and
dec
imul
sub
rcl
imul
leave
fsubp
or
xchg
mov
nop
dec
xchg
sti
leave
ret
in
adc
(bad)
jmp
dec
or
adc
gs
in
movs
lahf
xor
mov
sahf
aam
stos
(bad)
(bad)
fcomip
mov
lahf
pop
mov
xchg
and
retf
movs
sub
jg
rcr
das
jmp
sbb
xchg
rcl
jmp
(bad)
(bad)
push
ja
or
dec
bound
sbb
jnp
cmps
sbb
cmps
add
push
xor
(bad)
(bad)
(bad)
push
sbb
outs
push
pop
sub
sub
retf
cmp
out
push
push
jae
aas
(bad)
(bad)
(bad)
call
jns
or
bts
jge
inc
push
mov
jecxz
or
push
stos
aad
sbb
scas
into
(bad)
(bad)
(bad)
call
push
(bad)
push
iret
push
pop
mov
cli
arpl
mov
arpl
push
(bad)
(bad)
mov
push
inc
(bad)
jb
add
sub
cwde
dec
bound
stc
in
dec
jbe
sti
sbb
(bad)
(bad)
(bad)
(bad)
jnp
push
inc
jae
data16
xchg
popfw
out
int
push
(bad)
mov
lock
pushf
dec
into
and
or
(bad)
(bad)
inc
sub
push
lods
jle
aaa
fidivr
mov
in
push
in
jmp
out
jne
popf
inc
popf
(bad)
(bad)
(bad)
jmp
div
mov
test
shl
jns
or
retf
jmp
fst
inc
cmc
ins
hlt
mov
(bad)
out
rcr
aaa
xor
ss
sbb
lock
call
int3
nop
arpl
sbb
shl
test
test
retf
push
mov
mov
xchg
xchg
xor
outs
sbb
lods
xor
fsubr
popa
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
sub
xchg
imul
je
int3
enter
fsubr
(bad)
mov
js
fnstcw
inc
pushf
lds
ss
xchg
ficom
ret
(bad)
call
cwde
push
ds
jns
cmc
push
xlat
lods
dec
(bad)
pop
adc
ins
(bad)
push
ins
push
sbb
(bad)
(bad)
call
or
cmp
fwait
lods
les
ins
fist
adc
sub
sub
push
outs
fidiv
in
cld
in
(bad)
(bad)
(bad)
dec
in
call
mul
sbb
(bad)
cmp
jb
jne
jbe
jo
(bad)
(bad)
(bad)
mov
ret
test
push
sbb
jae
repz
retf
adc
ins
(bad)
inc
cld
cmps
mov
in
out
mov
mov
lods
fldcw
(bad)
(bad)
call
(bad)
cmp
dec
cs
sbb
pop
ret
cmp
neg
jno
jecxz
cmps
fwait
cmps
ret
(bad)
mov
jbe
pop
pop
sti
mov
es
(bad)
xor
fcmovnb
pop
loopne
outs
(bad)
(bad)
mov
ds
add
(bad)
add
mov
and
(bad)
(bad)
(bad)
(bad)
jle
jle
cld
sahf
sti
cmp
retf
std
(bad)
clc
mov
icebp
dec
add
in
mov
(bad)
call
std
add
pop
add
stos
pop
xor
push
das
or
adc
pop
pop
jb
(bad)
(bad)
jmp
stc
arpl
fsub
call
pop
sbb
xor
es
push
(bad)
(bad)
(bad)
(bad)
call
mov
jle
cmps
stc
dec
jmp
loopne
ins
mov
pop
stc
jge
sub
(bad)
(bad)
(bad)
push
stos
cs
imul
lods
in
sti
addr16
mov
jb
addr16
(bad)
(bad)
jmp
in
fwait
mov
cmp
adc
or
mov
(bad)
fadd
cmp
mov
jae
out
call
je
scas
in
mov
into
retf
sahf
ja
pop
xor
aad
jl
test
and
sbb
cli
(bad)
dec
repnz
mov
mov
dec
cmp
out
(bad)
(bad)
jmp
idiv
fnstsw
jge
cli
push
(bad)
xor
dec
push
sub
sbb
push
inc
(bad)
(bad)
in
call
fisubr
cmp
imul
sub
xchg
(bad)
(bad)
(bad)
dec
retf
xchg
mul
and
jae
fist
mov
push
push
dec
das
test
(bad)
(bad)
jmp
js
sbb
mov
aam
fbld
jmp
mov
mov
fdivr
js
icebp
loopne
mov
mov
ja
xor
mov
sar
(bad)
(bad)
(bad)
dec
mov
std
push
loop
push
push
repnz
fdiv
mov
shl
push
xor
test
scas
(bad)
(bad)
(bad)
push
pop
mov
fs
out
push
aad
push
jg
pop
xchg
pop
lods
jo
test
clc
mov
mov
push
aad
cmc
jns
fcmovu
fimul
retf
in
outs
lods
idiv
(bad)
mov
dec
mov
lock
in
pop
ins
dec
fidiv
push
call
dec
int
xor
pop
lods
fcomi
mov
popf
jg
retf
push
cld
(bad)
fcomip
std
lods
stos
mov
es
mov
push
sbb
in
mov
pop
mov
jge
outs
shr
sbb
sbb
mov
mov
sahf
(bad)
(bad)
(bad)
(bad)
(bad)
jnp
jnp
test
push
outs
ins
fsubr
ins
push
lea
dec
cmp
fwait
sub
(bad)
(bad)
(bad)
(bad)
in
call
ret
shl
cmps
jl
jecxz
call
ret
int
cdq
jg
cmc
or
(bad)
inc
cmp
ins
mov
call
pop
sbb
(bad)
(bad)
(bad)
(bad)
jle
xor
arpl
xor
popf
sub
xchg
jecxz
cmps
sahf
popf
dec
aas
cmp
(bad)
(bad)
fdivr
dec
cld
cdq
imul
mov
aas
pop
je
dec
mov
test
pop
lock
push
and
(bad)
(bad)
scas
cmp
loope
scas
pop
outs
jmp
test
je
dec
(bad)
(bad)
(bad)
jmp
shr
sar
push
aad
xlat
clc
xlat
cs
lahf
jns
(bad)
in
sbb
mov
cld
mov
in
pop
or
js
cld
(bad)
(bad)
call
std
jmp
(bad)
mov
shr
pusha
shl
pop
pxor
or
(bad)
(bad)
(bad)
call
xchg
rol
inc
aad
inc
and
sbb
into
xchg
loope
mov
adc
retf
(bad)
(bad)
jle
(bad)
jns
jae
out
std
loop
dec
iret
pop
cld
fdiv
or
mov
mov
jb
stos
test
(bad)
cmp
and
pop
mov
cld
lods
into
fstp
mov
mov
sar
(bad)
inc
push
repz
arpl
cmps
ror
ds
(bad)
cld
das
test
call
pop
pop
je
aad
cmp
push
xchg
(bad)
(bad)
inc
adc
and
and
repnz
stos
mov
dec
adc
rcl
sar
outs
inc
nop
or
xor
imul
and
leave
(bad)
es
loop
adc
(bad)
mov
mov
into
fldenv
out
mov
(bad)
call
repnz
and
inc
repnz
das
push
scas
pop
xchg
mov
xor
(bad)
call
xchg
movs
movs
movs
dec
jp
mov
loop
mov
outs
mov
in
dec
imul
jo
inc
js
add
push
pop
mov
mov
cwde
(bad)
call
jmp
sub
fwait
outs
mov
(bad)
(bad)
push
shl
mov
sti
sti
or
jae
adc
and
fisttp
jg
xlat
ins
xchg
jmp
add
add
jg
mov
adc
xlat
scas
pop
(bad)
(bad)
(bad)
(bad)
mov
ret
retf
xchg
mov
lahf
lahf
pop
test
mov
jg
pop
cld
cmp
lock
es
fidiv
imul
push
and
add
dec
add
out
ja
jg
sbb
push
(bad)
sbb
test
rcr
(bad)
(bad)
(bad)
push
ds
cmp
sbb
mov
jecxz
sbb
rcl
cli
hlt
cmps
(bad)
fcomip
leave
add
or
outs
retf
pop
mov
mov
(bad)
(bad)
call
ss
mov
push
sbb
icebp
pop
xor
mov
cmc
mov
imul
out
leave
ds
mov
dec
xchg
dec
ds
mov
ret
imul
cmp
fdivrp
mov
pusha
test
xchg
or
lods
pop
repz
out
fnstsw
add
shr
jecxz
pop
jo
fmulp
xlat
dec
arpl
out
mov
sbb
cmps
jg
pushf
cmp
or
outs
clc
mov
inc
jnp
test
push
and
(bad)
(bad)
(bad)
(bad)
call
mov
dec
retf
adc
inc
mov
jo
icebp
xchg
mov
xor
js
pop
rol
fsub
add
cmp
retf
sbb
ins
clc
sahf
lahf
icebp
std
mov
retf
aaa
std
fcomip
outs
mov
pop
jge
nop
pop
jae
lea
inc
sub
push
ret
call
and
jo
sub
dec
push
repz
repz
jns
pop
clc
(bad)
(bad)
jmp
rcl
sub
jg
repz
pusha
lock
retf
sbb
xchg
xlat
pop
mov
ret
(bad)
jmp
adc
out
popf
cmp
dec
cmp
push
add
pop
jp
movs
imul
inc
das
fstp
dec
call
repnz
aas
retf
jg
call
pop
(bad)
fbld
push
movs
mov
or
mov
les
(bad)
(bad)
(bad)
dec
and
ss
fistp
cld
in
and
imul
loope
or
add
lds
test
dec
(bad)
ins
fnstenv
sahf
jb
add
jg
shr
mov
aas
cld
scas
pop
mov
mov
cmp
ret
ins
icebp
push
in
clc
cdq
popf
push
add
jecxz
lea
pop
push
mov
mov
mov
or
or
(bad)
(bad)
dec
push
cmps
dec
xchg
inc
mov
cdq
shl
mov
xchg
or
sub
(bad)
(bad)
(bad)
jmp
iret
ds
lods
cmp
lods
and
rol
movs
push
test
jmp
imul
stc
(bad)
ds
outs
sub
(bad)
push
cmp
test
lea
and
(bad)
(bad)
(bad)
jmp
sbb
or
iret
mov
sahf
imul
mov
push
xor
shl
lds
(bad)
cmp
rcl
push
(bad)
(bad)
(bad)
push
push
xor
sub
sub
jle
stc
add
repz
(bad)
fcomip
jg
call
mov
sbb
xchg
xchg
pusha
push
sbb
dec
dec
cmc
mov
mov
paddusw
push
dec
mov
add
(bad)
loop
int
out
cli
in
push
cmovp
cwde
mov
jmp
sub
in
or
in
lods
xchg
add
ret
jmp
(bad)
out
mov
scas
adc
icebp
fstp
cmp
or
in
mov
inc
pop
mul
or
(bad)
(bad)
(bad)
call
sar
std
pop
rol
dec
xor
cmp
jb
adc
adc
enterw
(bad)
jmp
mov
mov
fsub
imul
sbb
add
mov
pop
push
jle
loope
jns
mov
pop
jg
mov
outs
sub
in
fcomp
add
fnstenv
out
mov
sbb
adc
cmps
and
fwait
pusha
aaa
pop
scas
jo
fwait
sub
loopne
mov
repz
mov
pop
dec
mov
xchg
aaa
out
mov
sub
div
int3
(bad)
(bad)
call
cld
pop
leave
mov
dec
ret
je
cmps
les
int3
jns
pop
stos
(bad)
cmp
(bad)
fcomip
(bad)
lods
fwait
int3
sub
lock
inc
movs
jae
inc
enter
inc
mov
(bad)
(bad)
(bad)
dec
sbb
out
xchg
xchg
mov
jo
repnz
movs
inc
pusha
pop
push
fcomip
aaa
push
int3
jae
hlt
je
out
clc
or
lds
(bad)
(bad)
jmp
int3
sbb
mov
sbb
in
movs
pop
mov
cmps
(bad)
mov
mov
dec
sub
(bad)
(bad)
inc
cmp
mov
dec
jnp
inc
mov
hlt
ror
add
adc
cdq
mov
(bad)
push
fwait
mov
pop
xchg
(bad)
std
sti
retf
mov
xor
mov
cld
out
cli
retf
in
call
inc
lahf
jns
pop
jle
call
lock
push
aaa
pusha
div
jns
cmp
jge
jbe
(bad)
jmp
nop
push
mul
jae
dec
sbb
imul
adc
loopne
adc
(bad)
(bad)
(bad)
dec
mov
repnz
fidivr
bound
mov
fidiv
les
(bad)
cmc
(bad)
fidiv
aaa
and
repz
shr
dec
add
xor
cld
jno
call
loopne
pop
mov
(bad)
std
mul
add
xor
xor
mov
aaa
and
lea
fidiv
(bad)
push
fimul
jb
dec
scas
ins
movs
clc
aaa
mov
das
push
jge
lods
mov
in
push
push
fnstcw
(bad)
(bad)
(bad)
jmp
mov
test
(bad)
xor
je
arpl
stos
push
dec
push
jge
push
jae
int3
int3
dec
add
(bad)
(bad)
(bad)
jmp
cmp
es
push
rcr
icebp
pop
dec
nop
sbb
add
sbb
sar
out
xor
ja
jge
cli
hlt
jmp
sbb
(bad)
(bad)
(bad)
inc
xor
push
div
ins
mov
out
addr16
jge
cld
xor
xor
(bad)
(bad)
(bad)
inc
jne
pop
es
pop
sbb
shl
xor
fwait
sub
call
pop
mov
mov
movs
mov
add
sub
lock
dec
mov
add
push
loopne
xchg
data16
ror
adc
add
jecxz
das
mov
data16
jbe
or
fcom
dec
pop
xor
mov
sub
push
push
push
test
dec
dec
dec
nop
fnstenv
xor
add
(bad)
(bad)
inc
data16
pop
xchg
rcl
push
push
scas
fs
ret
fnstcw
dec
or
(bad)
(bad)
push
inc
add
imul
mov
or
xchg
adc
add
dec
mov
retf
inc
inc
js
test
outs
cmp
push
leave
(bad)
push
(bad)
jmp
jg
movs
push
cwde
out
mov
in
lock
shl
sbb
push
mov
mov
in
stos
and
pop
add
sub
push
add
and
icebp
rcr
loopne
mov
or
pop
and
mov
(bad)
(bad)
(bad)
call
add
ret
pop
and
pop
inc
lahf
call
xor
sub
sub
(bad)
jg
sbb
pusha
es
mov
sub
dec
ror
(bad)
dec
and
jle
jmp
cmc
sti
and
shl
inc
pop
idiv
inc
adc
or
mov
dec
call
(bad)
call
add
or
les
leave
test
mov
ud0
(bad)
jmp
and
push
cwde
test
add
jp
push
cs
sub
hlt
sub
inc
test
sar
(bad)
call
and
cmp
sbb
and
add
fucom
xchg
add
loope
stos
call
jg
inc
jnp
out
ss
gs
xchg
dec
rol
(bad)
(bad)
(bad)
inc
xchg
movs
daa
fstp
loope
dec
and
std
cmc
push
and
cwde
sub
gs
(bad)
(bad)
call
aaa
popa
adc
inc
retf
pushf
sub
push
or
pop
or
add
(bad)
(bad)
(bad)
(bad)
mov
dec
hlt
xchg
ins
or
ja
mov
outs
add
lea
addr16
push
xchg
(bad)
(bad)
(bad)
inc
lds
aaa
outs
sub
outs
(bad)
dec
fisubr
xor
fdiv
dec
mov
cmc
aad
or
icebp
ret
inc
mov
aas
jns
and
aas
mov
(bad)
(bad)
jmp
nop
loopne
test
mov
mov
imul
cs
sbb
xchg
ins
(bad)
(bad)
(bad)
jmp
jb
lahf
add
aaa
add
add
ret
pusha
adc
cmps
outs
adc
jo
jle
add
push
stos
push
jne
clc
jae
sub
dec
push
pushf
pop
rcr
sbb
pushf
in
rcl
into
sti
ins
loope
ins
sbb
popf
cmp
dec
push
(bad)
(bad)
jmp
test
add
push
pop
shr
ret
popf
stos
std
nop
retf
sti
mov
cwde
adc
into
dec
push
sub
push
(bad)
inc
xor
inc
lea
in
jns
or
cmps
enter
push
ja
inc
mov
(bad)
xor
cmp
push
out
push
cld
push
cmp
shl
(bad)
push
outs
add
add
cmp
inc
data16
xchg
xchg
popa
xor
(bad)
xchg
outs
(bad)
inc
daa
or
or
mov
xchg
xchg
sahf
aaa
std
(bad)
jmp
pop
push
ror
or
arpl
mov
call
mov
jmp
adc
pop
pop
push
fs
dec
cdq
xor
cmp
pavgb
push
mov
retf
leave
sbb
push
ror
mov
cli
add
hlt
dec
(bad)
aad
adc
xor
repz
mov
in
jg
xchg
(bad)
(bad)
(bad)
call
xor
pop
shl
adc
dec
adc
repz
fs
rcl
mov
iret
aas
outs
rol
and
pop
pop
clc
jo
mov
adc
add
(bad)
(bad)
(bad)
cmp
inc
jp
mov
daa
fcomp
fstp
sbb
shl
and
push
push
sub
pop
push
pop
call
(bad)
jg
sti
call
rcr
loope
jecxz
mov
mov
leave
xchg
(bad)
(bad)
(bad)
(bad)
fnsetpm(287
iret
fstp
and
dec
jecxz
sbb
add
sub
fs
repz
data16
test
mov
xchg
jl
xchg
hlt
call
rcr
sbb
ret
or
lahf
add
mov
jmp
sbb
xchg
loopne
xor
out
push
pop
test
mov
mov
xor
(bad)
(bad)
push
ins
cmp
push
les
int3
mov
movs
pop
je
mul
sbb
scas
push
dec
(bad)
(bad)
(bad)
(bad)
mov
pop
into
nop
es
in
(bad)
mov
dec
mov
or
xor
mov
sbb
fwait
jbe
call
sub
ds
hlt
push
in
mov
(bad)
(bad)
inc
xor
xor
(bad)
(bad)
push
adc
push
or
or
adc
push
cmp
and
cmc
mov
in
repz
and
and
das
cli
dec
out
lahf
pop
div
ss
mov
sbb
cmp
mov
cld
(bad)
call
push
push
jp
setne
sub
cld
fs
shl
jmp
xchg
iret
jae
fnstsw
add
sub
je
xchg
inc
pop
sbb
sbb
(bad)
call
in
mov
cmp
xor
xchg
add
and
std
(bad)
(bad)
in
call
and
inc
xor
pop
sub
add
ret
sbb
call
inc
int3
stos
xor
xchg
or
cmp
cmp
(bad)
(bad)
jmp
xchg
sub
das
cmp
and
mov
adc
cmp
mov
arpl
add
inc
and
stc
in
pusha
leave
or
pushf
dec
cmp
fnstcw
(bad)
(bad)
inc
repz
and
inc
(bad)
jne
nop
xchg
add
call
jle
pop
ss
rcr
dec
(bad)
cmp
pusha
add
jb
loop
mov
ins
lock
dec
xchg
pop
(bad)
mov
cmc
add
inc
std
cli
test
or
lock
xchg
aam
mov
das
or
jl
pop
repnz
jg
push
std
mov
int3
adc
test
mov
and
(bad)
(bad)
sti
add
and
cmp
or
mov
jne
cmp
sbb
add
cmps
add
(bad)
(bad)
(bad)
dec
js
nop
cdq
cmp
xchg
out
mov
and
inc
mov
std
push
ret
mov
clc
call
and
add
retf
daa
add
xor
sbb
cmp
(bad)
(bad)
jmp
dec
fwait
es
pop
mov
or
scas
scas
icebp
push
xchg
mov
adc
(bad)
(bad)
(bad)
mov
fisub
adc
jmp
imul
dec
adc
ss
(bad)
inc
jl
push
adc
je
and
sub
lahf
jae
sub
mov
cli
test
pushf
xor
mov
add
adc
(bad)
aam
cli
inc
dec
adc
mov
dec
jno
cmps
test
cmp
or
(bad)
add
call
in
jae
cmp
push
mov
cmp
mov
dec
retf
push
pop
test
lock
pop
aam
inc
fdiv
xchg
enter
fstp
mov
sar
(bad)
(bad)
jmp
into
inc
sub
loopne
(bad)
retf
pop
dec
add
loop
js
stc
mov
jmp
push
call
xchg
test
inc
test
cmp
clc
sbb
dec
mov
or
sbb
cmp
adc
add
xor
mov
xchg
push
(bad)
(bad)
(bad)
call
cmps
xchg
sub
in
pushf
in
cs
inc
cmps
or
xlat
aad
push
push
and
(bad)
call
cmp
pusha
inc
test
std
ret
xchg
xor
cld
idiv
mov
test
sbb
cs
ds
scas
add
add
or
jmp
or
es
out
shl
dec
push
ins
and
repz
aad
(bad)
(bad)
jmp
pop
adc
test
outs
sub
sub
mov
inc
xlat
addr16
mov
lock
jle
pop
add
add
repz
or
pop
xchg
adc
das
pop
shl
in
ret
(bad)
jmp
je
pushf
sti
jns
popf
out
xchg
call
cmp
loopne
pcmpgtd
(bad)
(bad)
inc
mov
data16
mov
fisubr
cdq
xlat
ss
(bad)
fild
(bad)
push
leave
rol
test
pop
sbb
dec
inc
lods
pop
mov
out
xor
(bad)
(bad)
(bad)
mov
and
push
mov
leave
add
arpl
call
or
cmps
not
in
dec
arpl
sbb
xor
adc
mov
cld
(bad)
dec
aam
mov
xor
mov
loopne
out
cmps
mov
(bad)
out
clc
pop
and
push
push
(bad)
jne
or
xchg
cdq
cmp
js
pop
imul
jmp
cli
and
repz
jns
dec
add
in
xchg
inc
int3
fnstcw
into
mov
(bad)
jmp
cld
jmp
and
mov
pop
push
pop
and
(bad)
std
jne
inc
test
mov
into
jl
(bad)
(bad)
jmp
mov
xchg
add
push
inc
mov
inc
or
sub
jge
fs
lock
(bad)
push
push
xchg
fld
(bad)
inc
jge
dec
sbb
stc
movs
mov
fimul
ja
pop
or
(bad)
fistp
xchg
sbb
pop
out
and
sbb
fst
scas
js
(bad)
mov
dec
dec
add
dec
xchg
xor
jg
out
(bad)
or
aam
outs
repnz
je
ret
jg
xchg
and
dec
in
(bad)
jmp
xor
movs
dec
xchg
retf
xchg
push
xchg
add
(bad)
sbb
xor
or
jg
outs
ficom
or
add
(bad)
out
jae
xchg
iret
xor
mov
dec
pop
inc
js
cdq
inc
cmp
xchg
and
dec
lds
(bad)
(bad)
(bad)
inc
les
int
cmp
or
pop
fs
punpckhbw
scas
pop
pop
pop
mov
imul
jg
(bad)
fidivr
shl
cmp
xchg
(bad)
pop
add
scas
dec
xor
push
clc
(bad)
(bad)
frstor
and
ss
outs
mov
xchg
cwde
(bad)
call
hlt
cmp
sahf
nop
nop
adc
dec
pop
dec
cmp
sbb
inc
mov
lock
cmp
push
into
sbb
add
mov
mov
mov
push
sub
call
mov
sbb
cmp
mov
fdivr
mov
(bad)
inc
mov
bound
nop
push
add
mov
mov
fnstenv
(bad)
call
jns
mov
out
inc
mov
mov
jmp
and
out
shl
scas
movs
and
mov
data16
(bad)
(bad)
mov
imul
into
cld
in
ins
jns
aas
inc
(bad)
loopne
pop
jmp
call
xchg
sub
cmp
(bad)
call
xor
push
pop
pushf
jae
add
repz
int
jbe
(bad)
mov
and
shr
imul
outs
loopne
xchg
pop
jmp
cs
(bad)
jg
and
repz
fist
sub
pop
out
sar
mov
mov
cmps
int3
xor
pushf
(bad)
je
mov
pop
jmp
(bad)
(bad)
xchg
jl
cmp
or
mov
jnp
jge
xchg
fdivr
fsub
mov
scas
das
sar
stc
xlat
push
sbb
mov
inc
fs
std
xor
sar
pop
movs
movs
enter
jae
push
aas
in
pop
daa
jns
mov
mov
or
cmps
sbb
js
(bad)
sub
shr
in
outs
cld
dec
add
dec
repz
add
or
xchg
mov
std
dec
pop
add
and
dec
cmp
add
add
xor
ins
sti
(bad)
(bad)
jns
hlt
xchg
icebp
cmc
xchg
and
mov
and
mov
add
(bad)
(bad)
std
cmc
xlat
retf
imul
pop
fstp
cmp
fnsave
mov
adc
mov
shr
(bad)
(bad)
(bad)
inc
addr16
repz
and
rol
pop
mov
fiadd
or
sbb
repz
stos
(bad)
call
scas
mov
or
ds
inc
cmc
sub
jl
mov
aad
out
inc
mov
shr
(bad)
sti
into
fisttp
loop
mov
call
adc
jo
pop
nop
jle
sub
pop
neg
jmpw
(bad)
(bad)
fild
ficom
inc
jns
mov
aas
mov
jno
sub
fstp
pop
(bad)
(bad)
fcomip
dec
(bad)
mov
pusha
push
test
xchg
mov
nop
icebp
push
push
adc
test
mov
sbb
mov
pop
push
xchg
push
adc
inc
adc
ins
push
mov
xor
(bad)
(bad)
jmp
pop
and
cs
add
xchg
loopne
dec
mov
aaa
jmp
cmp
sbb
cmp
mov
out
add
push
je
xchg
out
sbb
ss
inc
cdq
pushf
mov
je
(bad)
(bad)
(bad)
ds
rcr
fs
fs
sbb
imul
push
add
nop
xor
add
mov
(bad)
js
sbb
shl
test
das
aam
push
stos
xor
add
jge
xchg
xlat
fsqrt
inc
inc
jmp
add
(bad)
mov
repnz
icebp
in
(bad)
(bad)
(bad)
cli
push
cmp
jle
aas
xchg
arpl
outs
sub
inc
ret
xor
jno
ret
(bad)
(bad)
(bad)
call
fild
xchg
scas
cli
sbb
int3
in
nop
jo
xor
popf
xor
mov
cmp
xchg
xchg
fdivr
(bad)
(bad)
(bad)
fdiv
jbe
cmp
outs
xor
test
stos
pusha
cld
cmp
push
add
(bad)
(bad)
(bad)
call
sbb
adc
cld
fs
enter
or
lea
mov
cmp
mov
push
jle
xchg
in
mov
es
lahf
loope
pop
lods
call
clc
pop
push
add
outs
push
(bad)
mov
jb
or
cmp
push
xlat
imul
xor
and
cmp
fcos
(bad)
(bad)
push
div
movs
outs
cwde
cli
mov
sub
(bad)
ins
sbb
push
inc
sbb
and
or
jmp
(bad)
push
ja
xchg
aas
mov
jge
sub
hlt
dec
(bad)
(bad)
mov
cmp
cmp
retf
je
pop
mov
or
fstp
enter
(bad)
(bad)
dec
inc
jmp
mov
stos
loope
cmp
je
sbb
jge
jecxz
or
int
jmp
call
ret
mov
ins
or
and
pusha
in
addr16
xlat
adc
(bad)
(bad)
(bad)
jmp
add
inc
or
frstor
inc
adc
in
add
and
dec
xchg
xor
iret
out
(bad)
int3
(bad)
(bad)
(bad)
push
or
aas
lahf
inc
fisttp
(bad)
lods
cmp
jp
pop
dec
mov
adc
mov
sub
(bad)
mov
add
jns
jp
or
sbb
shl
push
jmp
data16
in
or
das
or
aaa
push
lock
or
imul
jmp
xor
mov
mov
adc
mov
jae
add
xor
leave
xchg
mov
enter
mov
movs
or
dec
push
dec
or
stos
xor
push
push
mov
inc
es
arpl
inc
mov
imul
cmc
or
and
push
add
sbb
pop
add
xor
lahf
fistp
and
or
test
jnp
add
inc
mov
push
mov
fbld
sub
xchg
adc
mov
(bad)
or
repz
or
sbb
push
fild
xor
stos
and
mov
sbb
mov
mov
add
ss
add
mov
jnp
sbb
cmps
sbb
std
pop
sub
stos
nop
push
sub
std
imul
xor
xor
imul
popa
fidiv
xor
stc
shl
sbb
addr16
push
std
pop
push
xor
and
adc
dec
dec
add
repnz
xor
xor
and
fcomp
xor
es
adc
cmp
mov
shl
add
stos
nop
cmp
pusha
pop
pop
xchg
push
das
xor
xor
bound
sbb
das
sub
add
stos
das
and
ins
and
stos
mov
mov
push
movs
das
adc
stos
dec
inc
push
mov
push
mov
or
rol
sub
add
push
lds
cmp
add
adc
pop
push
das
push
aad
add
(bad)
jmp
mov
lock
loopne
pusha
fnstenv
push
push
sbb
inc
adc
mov
add
inc
push
dec
mov
add
pop
in
jae
or
add
aaa
sub
mov
popf
mov
adc
mov
ja
mov
(bad)
mov
mov
inc
inc
mov
in
jo
jno
scas
sbb
mov
lods
iret
iret
rol
frstor
test
add
inc
dec
int
or
in
push
and
push
mov
add
mov
add
clc
cmps
adc
inc
xor
mov
mov
xchg
adc
shl
rol
pop
das
push
ins
fild
pop
jne
test
aaa
in
dec
jne
and
aaa
mov
das
pop
sub
mov
mov
cmp
loopne
shl
sar
mov
jo
inc
push
jno
inc
mov
or
mov
inc
ja
das
push
inc
mov
pop
dec
mov
sbb
dec
jmp
(bad)
add
adc
das
push
(bad)
fnstsw
inc
and
sbb
das
mov
das
xor
push
in
js
(bad)
xchg
cmp
jae
push
cwde
mov
or
das
aad
cmp
das
add
sar
das
movs
sbb
ror
xor
dec
xchg
les
add
lea
das
cmp
xor
sub
pop
pop
adc
mov
les
mov
xor
dec
pushf
pop
push
imul
xchg
das
jno
adc
pop
fs
add
(bad)
push
add
adc
jle
add
sbb
mov
pusha
sbb
in
gs
outs
pop
cmp
mov
mov
cmps
shl
mov
xchg
push
add
jmp
loopne
or
adc
or
and
sbb
adc
movs
add
vfrczpd
pop
ja
push
add
pop
add
out
pop
mov
inc
jge
(bad)
lea
mov
xchg
adc
inc
pop
sub
push
or
jae
push
mov
lds
sub
test
push
and
push
popa
cmps
(bad)
movs
and
out
(bad)
or
test
inc
out
and
lea
in
loope
stos
push
out
mov
scas
jno
adc
jno
cmps
inc
icebp
add
sub
xor
mov
inc
push
ins
add
sbb
inc
das
pop
loopne
and
jbe
push
add
add
icebp
push
mov
add
inc
add
xor
xchg
mov
dec
push
inc
mov
rol
push
inc
pop
push
pop
add
sub
pusha
add
stos
fcomp
add
call
adc
add
pop
add
inc
adc
and
push
enter
or
push
and
adc
adc
add
adc
add
or
add
add
pusha
add
stos
sub
inc
push
add
mov
add
push
das
and
ins
add
pop
push
push
add
push
int3
push
sbb
xor
das
add
push
adc
add
pop
pop
add
das
or
add
das
add
add
or
add
push
int3
push
sbb
xor
das
add
dec
push
adc
jg
or
scas
or
mov
adc
or
add
das
enter
or
or
pop
stos
bound
or
pusha
add
das
push
push
mov
or
cmp
or
add
das
inc
test
fmul
push
loopne
push
or
and
lds
cmp
or
inc
das
femms
or
sub
pop
push
shl
add
das
test
cwde
or
add
femms
pop
inc
push
lds
add
add
das
adc
syscall
add
inc
push
das
inc
test
fcom
add
das
adc
adc
pop
inc
inc
pop
das
adc
adc
mov
jnp
pop
adc
adc
das
adc
das
or
jnp
adc
add
das
or
inc
test
cwde
xor
das
push
adc
push
push
das
sub
or
adc
adc
xchg
inc
sub
add
push
adc
stos
fist
mov
push
adc
sub
sbb
push
das
sbb
sub
pop
push
add
das
and
sbb
add
das
sbb
pop
add
das
sbb
add
das
push
push
mov
sbb
sbb
das
sbb
add
das
sbb
mov
fcomp
sbb
das
stos
bound
inc
sbb
add
das
and
push
mov
sbb
add
das
pop
sbb
sbb
add
mov
and
and
sbb
rol
adc
mov
and
sbb
sub
adc
adc
push
add
das
adc
mov
pop
add
das
and
das
test
and
das
and
das
and
test
add
das
and
test
push
in
add
and
add
das
adc
and
das
test
push
sub
and
adc
rol
fadd
sub
and
inc
iret
daa
and
add
add
daa
es
das
sub
add
das
fs
add
add
das
test
add
das
sub
sub
das
sub
pop
inc
push
lds
add
(bad)
das
sub
add
das
fs
add
add
das
test
add
das
das
sub
add
das
sub
lds
add
sub
cmp
das
cs
inc
sbb
inc
iret
cs
shr
loopne
das
sub
test
xor
sub
push
das
inc
push
lds
xor
pop
das
xor
cs
das
xor
add
add
xor
add
in
or
xor
das
sub
or
push
in
add
xor
add
das
mov
xor
add
stos
bound
add
das
cmp
push
adc
adc
add
das
cmp
xor
das
xor
mov
add
ss
shr
loopne
aaa
xor
in
add
test
cmp
xor
push
das
inc
push
lds
cmp
pop
das
ss
das
cmp
ss
inc
push
lds
adc
add
cmp
inc
test
das
test
add
das
cmp
add
das
cmp
pop
inc
push
lds
add
cmp
add
stos
sub
shr
add
das
cmp
add
das
or
jnp
cmp
add
das
cmp
adc
test
push
mov
cmp
das
test
fadd
cmp
das
inc
cmp
das
and
aas
cmp
stos
bound
jo
inc
aas
cmp
and
push
mov
inc
cmp
stos
dec
pop
push
adc
add
das
test
ds
das
adc
fadd
inc
inc
aas
add
das
mov
adc
and
inc
push
test
push
and
add
nop
cwde
dec
and
sub
inc
inc
add
das
and
adc
dec
inc
inc
add
(bad)
and
dec
inc
inc
add
das
inc
inc
push
je
inc
push
lds
dec
inc
inc
add
das
and
inc
aaa
pop
push
adc
add
das
inc
inc
add
das
ror
add
push
dec
cs
inc
push
lds
add
add
das
inc
add
das
push
adc
push
nop
dec
cs
das
add
(bad)
outs
sub
pop
mov
mov
add
das
cli
cli
push
mov
mov
add
add
fiadd
inc
(bad)
das
sub
add
adc
or
xor
das
inc
test
sub
cmc
idiv
test
(bad)
das
(bad)
lea
add
add
rol
sub
inc
jle
mov
add
hlt
add
hlt
repz
test
test
clc
das
xor
rcr
add
add
call
xor
or
push
lods
jge
add
add
imul
shr
icebp
add
repnz
inc
xor
loope
hlt
push
add
add
loope
sbb
gs
sub
fiadd
int
add
sub
out
add
inc
pop
adc
xor
(bad)
das
fild
out
pop
dec
sub
out
add
sub
cmp
sub
test
lods
pop
icebp
push
dec
out
push
in
add
(bad)
add
sub
(bad)
das
mov
hlt
(bad)
pop
icebp
push
in
add
fs
push
cmp
in
cmp
add
add
(bad)
add
fwait
(bad)
das
sti
push
mov
in
jmp
sbb
inc
adc
pop
(bad)
das
div
lea
add
xor
push
sub
mov
out
push
sub
jmp
sub
add
sub
mov
out
pop
sub
sub
in
jmp
add
cmps
fmul
jo
xchg
adc
sub
outs
sbb
inc
xor
cmp
loopne
out
in
das
fs
rol
add
xor
jo
sbb
sbb
pop
sub
add
test
add
fisubr
jmp
dec
jmp
add
test
add
sub
repz
das
mov
out
push
shr
call
xor
mov
das
mov
jo
out
pop
adc
loop
jo
outs
cmp
gs
das
xor
sbb
in
sub
loope
mov
out
push
add
sub
das
stos
fdivr
(bad)
mov
loope
loop
add
(bad)
loopne
add
repnz
das
jle
cmp
mov
loop
in
loopne
inc
adc
mov
gs
ja
sbb
out
sub
loopne
add
or
fisubr
lock
loopne
inc
inc
push
das
jmp
sub
pusha
mov
(bad)
add
(bad)
adc
inc
sbb
inc
pop
das
jmp
loop
push
push
in
(bad)
sub
fs
fadd
xor
xor
das
in
sti
add
mov
(bad)
sub
fild
fstp
ficom
inc
add
repnz
js
add
das
call
outs
outs
pop
pop
loope
fndisi(8087
fcmovnu
add
clc
fstp
out
cmp
push
xchg
in
das
out
rcr
mov
loopne
(bad)
(bad)
stos
test
fcmovu
add
clc
(bad)
fs
(bad)
sbb
cmp
xchg
test
cmp
(bad)
add
into
fidiv
sub
jecxz
out
loope
(bad)
pop
sub
fcom
add
xor
shr
xchg
test
sub
xlat
(bad)
add
xor
sub
paddusb
fldcw
(bad)
aad
cmp
add
repnz
mov
fistp
(bad)
aad
(bad)
aam
aad
add
and
mov
and
fild
loopne
mov
add
repnz
or
inc
(bad)
das
in
xchg
ja
adc
(bad)
fcom
pop
jbe
push
and
jnp
cmps
fchs
jbe
fndisi(8087
fstp
add
xchg
sahf
jl
retf
mov
aam
jl
add
add
out
dec
jecxz
fsub
dec
inc
add
push
xchg
add
adc
loop
call
push
jmp
push
add
add
int3
add
call
jecxz
loopne
(bad)
fmul
mov
cmc
(bad)
fcmovbe
rol
xor
inc
add
das
loop
fld
adc
push
lods
cmp
fdivr
add
test
sbb
xchg
sar
mov
repz
sbb
xor
cmc
icebp
repz
in
pop
bound
loope
add
fld
mov
rol
add
int
lds
dec
in
inc
mov
stos
mov
scas
cmp
outs
and
das
mov
vmovss
add
add
inc
repnz
das
push
popa
and
pop
xor
jb
test
std
(bad)
mov
mov
pop
ret
call
ins
xlat
stos
ins
dec
lods
jo
lods
jae
mov
(bad)
jp
cmc
retf
in
xchg
out
fstp
out
adc
iret
add
loopne
or
sbb
xchg
and
mov
and
ins
push
adc
shrd
int3
das
fsubr
fcmovnu
cli
adc
fldcw
aam
std
(bad)
(bad)
call
xchg
addr16
aas
int
dec
fldenv
loope
(bad)
test
loop
(bad)
fisubr
ins
(bad)
lods
jo
(bad)
test
mov
ror
add
shl
or
mov
or
ins
mov
les
add
and
out
mov
das
jge
add
call
popf
pop
(bad)
aam
rcl
push
jnp
and
arpl
mov
aaa
loopne
or
pushf
cmp
mov
add
mov
in
push
fld
in
out
out
in
loope
clc
and
push
xlat
iret
int
xchg
fiadd
cs
push
les
push
pop
cmp
jge
imul
push
loopne
fcom
into
(bad)
jo
add
out
pavgb
fcomp
mov
(bad)
(bad)
fld
push
into
int3
retf
retf
int
outs
dec
adc
pop
xlat
mov
in
sub
pushf
sub
popf
jmp
sub
mov
cld
fisub
adc
in
out
cwde
stos
add
(bad)
out
add
xchg
xchg
or
pop
pusha
in
cs
adc
sti
bound
ss
adc
fld
add
pop
pop
xor
mov
fwait
jo
hlt
mov
das
push
out
pop
cmp
retf
leave
(bad)
leave
enter
xchg
add
jp
xlat
mov
out
es
fwait
daa
add
sub
popf
sub
sahf
ficomp
jbe
push
fcomp
aad
retf
add
pop
ret
test
lahf
fstp
mov
mov
or
fcmovu
push
pop
cmp
cmp
ins
sub
lods
mov
ds
xor
add
(bad)
das
adc
fcmovnbe
rcr
cld
inc
cmp
(bad)
aad
enter
(bad)
ins
inc
adc
(bad)
xchg
cld
aas
adc
add
xor
pushf
aas
int
inc
pop
nop/reserved
cs
rol
sti
iret
into
aam
retf
push
push
adc
jle
mov
or
pop
sbb
in
push
pop
cmp
outs
push
jp
jae
test
jbe
add
xor
sbb
add
das
(bad)
dec
sar
adc
(bad)
aam
mov
and
das
pushf
sub
popf
xor
fwait
aas
jb
or
int
inc
(bad)
mov
or
jmp
aad
int
retf
leave
add
xchg
cmp
jge
mov
jbe
dec
das
pop
pop
push
fadd
sbb
mov
mov
sub
xor
pop
sbb
inc
repnz
das
xlat
pop
jbe
test
int3
mov
pop
sbb
int
das
and
or
jbe
retf
sahf
fdiv
mov
adc
fwait
xchg
xchg
pop
inc
outs
imul
adc
imul
mov
pop
sub
add
retf
leave
(bad)
sbb
inc
add
(bad)
das
cmp
(bad)
fild
outs
lods
mov
(bad)
rol
mov
adc
aaa
pop
jg
add
loop
aam
retf
in
pop
push
in
ror
mov
jo
add
fcmovbe
rol
ss
(bad)
das
jbe
mov
mov
mov
mov
vpsubd
push
sub
lock
loope
add
out
dec
ss
int3
ret
shl
pop
adc
mov
inc
sbb
repnz
pop
adc
das
mov
fcom
iret
lods
rol
add
xlat
rcl
mov
rol
sub
loop
loope
sar
das
mov
lds
arpl
xchg
xchg
jg
push
shl
shl
add
gs
add
sub
xor
enter
aas
loopne
(bad)
das
aam
fmul
leave
enter
retf
lds
add
mov
mov
shr
add
mov
push
je
pop
inc
sti
dec
dec
retf
sti
and
ret
mov
adc
adc
das
cs
xchg
xchg
jns
mov
das
iret
iret
fcmovnbe
test
js
rcl
xlat
dec
retf
add
pop
push
mov
cmp
shr
rol
push
shr
loop
loopne
adc
cld
out
leave
enter
(bad)
sub
sbb
lea
lahf
(bad)
jg
xlat
call
adc
mov
pop
or
bnd
mov
inc
add
fild
pop
das
fisubr
(bad)
iret
xor
dec
jge
shl
retf
outs
jo
sub
inc
shr
(bad)
push
jmp
out
loope
ror
(bad)
into
(bad)
xchg
lods
jg
int
ret
mov
dec
dec
dec
xchg
dec
dec
sar
fild
jp
sbb
sbb
mov
mov
ret
scas
lods
ffree
inc
mov
adc
pusha
and
rcl
(bad)
mov
dec
jns
out
cmp
shr
ret
rol
ror
lock
out
out
loope
loopne
dec
into
sbb
inc
add
pushf
fwait
int
shl
in
cld
call
inc
jns
jb
mov
add
mov
jle
(bad)
mov
mov
loopne
inc
(bad)
lahf
pusha
pop
pop
test
iret
(bad)
add
repnz
inc
(bad)
das
std
add
mov
aad
push
shr
outs
(bad)
pop
mov
out
loopne
out
dec
jle
dec
add
js
adc
neg
add
inc
mov
shr
sar
mov
stos
add
mov
stos
pop
pop
pop
pop
adc
call
sub
push
(bad)
das
js
sub
dec
mov
cmp
into
int
ret
ret
add
cli
lahf
and
mov
pop
pop
jae
or
push
rol
cmp
mov
mov
sbb
and
push
ins
push
leave
mov
mov
daa
(bad)
jo
add
cli
adc
ror
call
add
sub
sub
adc
(bad)
int3
rol
lock
pop
ds
mov
es
cwde
nop
pop
cmp
or
pusha
pop
pop
and
pop
bound
lods
mov
mov
add
ret
out
push
inc
add
(bad)
das
test
ror
int3
inc
adc
loopne
ret
shr
push
mov
fsubp
jl
jmp
pop
mov
test
popa
pop
pop
pop
pop
pop
mov
test
add
jmp
cmps
lahf
popf
test
shr
(bad)
dec
lods
cmp
dec
inc
ror
adc
retf
ret
ret
adc
cmp
fsubp
loop
fcomp
or
cli
add
test
into
pop
mov
mov
dec
mov
stos
ins
push
inc
sub
fiadd
add
dec
inc
sub
das
jp
pop
sbb
xor
mov
push
shr
ror
retf
jb
xchg
cli
adc
out
out
(bad)
fucom
add
cmp
in
mov
ja
out
push
pop
ds
push
push
xor
mov
inc
mov
and
daa
and
(bad)
(bad)
dec
xor
rol
enter
movs
scas
mov
push
lock
add
add
push
push
push
cmps
popf
pushf
call
test
das
mov
lods
pusha
pop
pop
sbb
sbb
nop
call
push
mov
mov
and
les
or
rcr
pop
mov
sahf
or
dec
and
mov
stos
sti
add
sbb
pop
rol
mov
mov
ret
arpl
xor
das
lods
add
mov
(bad)
xchg
rol
add
repnz
adc
(bad)
das
adc
fisttp
jns
jno
pop
pop
lods
mov
neg
call
(bad)
mov
mov
and
xchg
nop
push
mov
add
rol
mov
xlat
daa
in
(bad)
fsub
retf
call
mov
mov
mov
out
sbb
(bad)
mov
adc
add
repnz
pop
jo
(bad)
das
int3
retf
rcl
add
cs
add
out
ins
add
sub
movs
test
stos
test
clc
inc
mov
ja
outs
pop
push
push
stos
xor
cld
xchg
add
mov
(bad)
add
(bad)
das
pop
jp
lds
push
mov
movs
rcr
fld
retf
ret
nop
mov
pop
push
mov
in
adc
call
xor
cwde
and
and
sbb
retf
in
jne
outs
and
js
push
das
inc
(bad)
(bad)
aas
mov
ret
mov
ror
enter
mov
sub
in
fstp
fcmovnbe
leave
mov
aam
mov
stos
pop
push
push
push
or
mov
movs
sbb
sbb
stos
cmps
and
and
dec
mov
add
mov
jb
add
retf
pop
inc
add
call
dec
inc
add
mov
pop
mov
mov
inc
add
lods
stos
jge
je
cmp
stos
jnp
jb
paddd
rol
dec
dec
shl
call
xchg
cmp
out
retf
or
je
clc
adc
jg
leave
(bad)
mov
mov
loope
xchg
mov
adc
leave
sar
add
pop
test
popf
fwait
mov
call
or
mov
jo
movs
inc
int
loopne
sub
and
or
pop
retf
leave
imul
(bad)
mov
add
fcmovnu
adc
mov
mov
mov
xchg
add
mov
adc
inc
add
out
inc
rol
(bad)
das
mov
stc
inc
mov
test
cmps
movs
add
test
mov
outs
imul
dec
dec
mov
ret
ret
mov
and
push
jge
push
push
push
xor
cs
fs
shl
faddp
mov
sahf
(bad)
mov
out
out
aas
inc
jae
cs
cmp
adc
es
xchg
mov
add
shl
sub
sub
or
sar
pop
push
push
mov
push
test
(bad)
fcmove
das
rcr
push
mov
ins
into
(bad)
das
push
enter
add
inc
cmp
dec
dec
sub
sub
push
pop
pop
push
cmp
in
push
dec
push
inc
cmp
pop
push
push
fcomp
mov
push
ror
mov
out
das
mov
sub
cld
jg
cmps
movs
xchg
lea
movs
das
mov
sbb
movs
mov
and
sub
rol
mov
faddp
lea
push
cmp
sub
shl
push
sub
adc
stos
sub
jo
lods
stos
das
and
in
cmps
pushf
call
add
rol
xchg
mov
das
push
dec
dec
dec
dec
dec
jno
push
inc
sub
xchg
nop
mov
pop
inc
inc
mov
xor
xor
dec
popa
loopne
or
sub
sub
sbb
jne
popa
pop
sub
cs
sub
ja
mov
and
sub
cmp
loopne
xchg
das
mov
js
arpl
aas
mov
dec
inc
inc
inc
mov
call
bound
cmp
lea
clc
adc
jmp
mov
sahf
popf
sbb
fwait
or
adc
mov
inc
and
dec
pop
sub
inc
inc
and
dec
mov
in
or
sbb
outs
add
lods
mov
add
sbb
mov
scas
lods
inc
mov
popf
dec
push
xchg
mov
clc
adc
mov
(bad)
jg
pop
pop
pop
pusha
pop
pop
jno
push
js
mov
movs
data16
cmps
popf
fwait
out
dec
aad
dec
dec
dec
inc
inc
push
push
push
das
push
adc
sbb
pop
add
daa
sub
push
push
and
and
pop
mov
mov
xchg
xchg
daa
add
clc
es
pop
test
xor
sub
dec
or
or
mov
xor
or
jne
ins
aam
adc
je
ins
data16
test
mov
dec
test
sub
and
jne
outs
jl
jne
mov
retf
mov
sub
cmp
shl
mov
cmp
push
dec
or
cld
pop
rcl
cmp
adc
das
enter
jg
pushf
push
push
add
pushf
fild
in
inc
add
push
adc
adc
jge
xchg
adc
sbb
mov
(bad)
cs
sub
xchg
adc
fdivr
fs
pop
sbb
and
xchg
and
cmps
shr
mov
mov
rol
push
adc
push
lock
bound
test
pop
jmp
aas
icebp
inc
dec
add
mov
and
adc
cld
aad
loope
or
add
call
fs
adc
nop
stos
cwde
aas
das
adc
int
dec
scas
and
or
ja
fcom
or
xor
inc
or
push
mov
adc
lods
pushf
add
call
sub
pop
fdiv
loopne
xchg
cmps
das
mov
cld
(bad)
ins
data16
imul
add
xchg
inc
and
push
push
adc
shr
das
adc
add
inc
lea
inc
sub
xadd
adc
fstp
mov
xor
sub
adc
outs
rol
dec
jno
dec
(bad)
or
das
das
and
and
stos
popf
jmp
es
popf
add
movs
popf
fwait
cs
and
mov
sbb
std
std
xor
and
in
jno
adc
jbe
add
aaa
push
in
lds
sbb
add
dec
push
aaa
adc
arpl
push
leave
call
push
test
mov
stos
pop
(bad)
pop
fcomp
jo
push
pop
pop
arpl
das
ror
push
mov
mov
sbb
add
outs
cmp
retf
push
sub
push
out
lods
das
rcr
add
stos
stc
jecxz
call
stc
push
and
mov
mov
dec
push
ins
add
cmp
fcom
cmp
dec
adc
adc
pop
rol
and
cs
or
push
test
jl
jo
sub
(bad)
rol
out
or
jmp
mov
adc
adc
inc
add
out
inc
test
add
and
mov
adc
or
jmp
push
stc
das
mov
xchg
mov
pop
add
or
push
and
add
enter
and
push
inc
or
(bad)
repnz
or
(bad)
add
jno
pop
(bad)
xor
dec
add
sbb
and
loopne
das
nop
pop
sbb
les
dec
dec
dec
mov
rol
inc
ret
cmps
jns
push
mov
adc
mov
movs
arpl
call
scas
inc
repnz
rol
(bad)
into
int3
les
add
jo
xor
sbb
imul
(bad)
fild
mov
in
sbb
pop
jge
adc
push
push
and
dec
inc
xor
js
pusha
das
out
inc
xor
mov
mov
ins
pusha
pop
pop
push
dec
dec
test
mov
sahf
popf
push
push
push
fs
pusha
add
mov
push
ret
shr
or
dec
dec
outs
in
cld
call
mov
cmp
and
dec
dec
dec
pushf
xchg
xchg
add
xchg
lea
das
xor
inc
inc
inc
cmp
retf
mov
and
cmp
popf
(bad)
jmp
outs
imul
jns
cdq
xchg
mov
test
mov
xchg
xchg
jne
jo
jo
cli
push
pusha
iret
xor
xor
cs
test
sub
rol
das
(bad)
retf
ds
out
out
loopne
out
inc
adc
out
pop
mov
lods
mov
aam
mov
test
sub
sub
xchg
add
repnz
add
adc
add
dec
dec
pop
xor
pop
(bad)
out
int
jp
movs
call
out
or
and
xchg
mov
add
xor
jae
xor
or
xchg
movs
add
repnz
aam
add
mov
(bad)
ror
leave
(bad)
shl
in
out
push
inc
xor
loop
aam
(bad)
fisttp
lods
stos
xchg
(bad)
lea
mov
add
enter
lods
mov
xchg
loope
movs
enter
push
loopne
test
add
or
mov
jne
pop
pop
add
into
call
inc
inc
ds
add
xchg
dec
dec
dec
add
xchg
xchg
mov
ror
add
mov
cmp
int3
(bad)
leave
aam
mov
rol
fistp
cmove
loop
out
call
xor
xchg
add
dec
dec
sub
sub
sub
ins
push
ret
jg
xor
xchg
pop
push
push
cmp
add
in
cmp
xor
xor
add
(bad)
fimul
inc
add
mov
(bad)
add
rcl
retf
int3
mov
push
mov
xor
rol
data16
mov
mov
ret
rol
sti
call
test
jg
jp
push
push
jg
jp
add
out
push
inc
add
dec
or
add
sub
ret
mov
xchg
shr
xchg
adc
lahf
pop
and
pusha
inc
add
push
add
adc
add
inc
add
popf
call
retf
lods
cmps
movs
fwait
xchg
xchg
mov
inc
leave
sar
ret
in
pop
int
les
mov
adc
mov
xor
adc
(bad)
inc
lds
pusha
pop
pop
inc
inc
inc
xchg
xchg
xchg
add
mov
jnp
ja
mov
enter
mov
enter
mov
pop
(bad)
leave
leave
sbb
pop
das
xchg
shr
out
in
(bad)
inc
adc
ret
ins
push
aas
cmp
pop
pop
pop
or
fwait
rol
mov
cmp
inc
cmp
cmp
pop
(bad)
mov
es
movs
add
or
leave
enter
out
add
repnz
in
call
inc
add
jge
js
cmp
outs
push
movups
cld
test
mov
ret
mov
dec
xor
xor
jle
jg
and
fcmovnu
sbb
in
ret
xor
push
(bad)
xlat
retf
ret
enter
sbb
cli
add
repnz
out
adc
add
sar
sar
inc
cmp
fwait
cdq
jle
jp
adc
add
xacquire
xlat
(bad)
mov
test
xchg
fcmovbe
push
(bad)
or
pop
das
sub
push
enter
into
int
ret
ret
push
vcmpnltss
or
adc
adc
int3
fisub
sbb
add
sub
hlt
shl
mov
pop
mov
fcmovu
fcmove
(bad)
enter
or
out
inc
mov
add
add
mov
mov
adc
into
aas
sar
push
inc
sbb
repnz
add
in
xor
fcmovu
sub
loopne
int3
retf
das
add
aam
call
add
scas
mov
jle
dec
dec
inc
inc
inc
or
into
mov
push
inc
test
jb
mov
dec
call
inc
add
call
dec
jo
fsubr
fstp
cmp
inc
or
fcom
fcmove
push
xlat
push
push
rcr
out
sub
(bad)
(bad)
add
retf
jg
jl
ds
add
ins
mov
scas
xlat
dec
pop
dec
push
in
mov
aaa
xchg
call
add
fs
or
xor
fwait
cmp
sub
dec
add
and
fst
adc
jmp
(bad)
bound
jmp
jg
fadd
pop
add
inc
inc
sub
cld
jb
outs
mov
mov
mov
(bad)
fisttp
test
dec
ds
cmps
fimul
aam
add
adc
cs
add
jb
(bad)
xlat
lods
(bad)
fmul
int
inc
push
jo
loope
xchg
sub
out
(bad)
push
xor
add
mov
(bad)
sbb
aad
into
retf
xor
mov
sub
mov
(bad)
cdq
xchg
xchg
lods
pop
adc
xor
fidiv
add
dec
out
or
les
add
loope
(bad)
int
(bad)
leave
das
jne
dec
or
jmp
out
add
or
test
leave
ret
mov
ret
mov
mov
push
leave
add
rcl
or
pop
loopne
fcomi
pusha
popa
shr
fwait
adc
sbb
loop
fmulp
into
cs
mov
hlt
hlt
jmp
sub
add
or
mov
dec
dec
dec
cmps
mov
cmps
adc
add
xchg
aas
aas
inc
jne
jb
(bad)
add
sub
jecxz
sub
cmovs
mov
cs
loope
adc
mov
dec
adc
int
xchg
mov
ss
jne
jae
mov
adc
(bad)
aad
rcl
test
movs
push
push
push
ds
cmp
mov
fcmovnbe
aam
pusha
popa
xchg
outs
add
fisttp
jecxz
(bad)
iret
into
(bad)
retf
xor
adc
out
sub
inc
pop
add
xchg
mov
mov
or
aaa
add
retf
add
fcmovnbe
aad
rcl
test
inc
inc
inc
test
and
iret
jo
neg
(bad)
in
loopne
add
retf
add
mov
jmp
inc
stc
push
lds
mov
(bad)
inc
add
mov
jp
cdq
cdq
mov
mov
adc
call
retf
iret
mov
pushf
cwde
cwde
or
(bad)
fs
push
in
dec
mov
js
inc
push
repz
out
leave
push
les
das
(bad)
jg
(bad)
ror
int
(bad)
mov
imul
sar
mov
movs
mov
bound
retf
add
xchg
(bad)
ror
int3
sbb
and
add
loop
loop
jo
ret
loop
je
retf
das
les
add
cmc
in
in
in
out
test
fcom
or
mov
push
dec
mov
push
aas
add
sar
push
mov
fsubr
adc
data16
stos
inc
ret
pop
and
cmp
mov
add
(bad)
data16
hlt
pop
jmp
aaa
outs
mov
loop
add
retf
retf
pop
inc
mov
push
(bad)
rcr
and
pushf
xor
xchg
jge
imul
add
loop
add
iret
retf
ss
std
data16
sti
mov
fwait
cwde
cwde
ror
into
xor
aas
inc
leave
(bad)
les
mov
sub
test
inc
inc
stos
cmps
cmps
xchg
and
adc
sti
inc
add
mov
dec
inc
ja
add
in
rcl
cs
adc
pop
sbb
and
xchg
and
add
in
fwait
sub
fwait
xor
call
and
clc
clc
aas
mov
cmp
mov
pop
call
movs
movs
push
push
push
push
push
push
mov
add
int3
scas
scas
out
fcmovbe
aad
cmp
and
mov
mov
push
push
cmp
mov
movs
xchg
inc
mov
add
in
jmp
sbb
gs
adc
sbb
test
cs
jo
fisttp
test
fsub
xchg
add
jg
xchg
daa
fst
ret
xchg
xchg
mov
jmp
in
in
out
push
jmp
pop
pop
add
leave
jg
jge
push
fs
loop
sub
mov
popf
mov
mov
ins
mov
mov
and
cli
xor
push
ror
retf
mov
scas
jmp
out
shl
cmp
out
clc
jg
jnp
ror
iret
ret
es
cmp
jns
adc
sbb
neg
aad
add
xchg
and
xchg
jle
repnz
in
in
test
test
out
ss
gs
stos
stos
push
push
push
cmp
cmp
enter
fcom
push
mov
iret
into
sub
ja
xchg
dec
mov
ror
ror
int
mov
mov
mov
push
push
sub
into
int
xor
add
sub
loopne
push
loopne
inc
out
(bad)
cmps
push
or
outs
cs
jg
popa
out
loope
add
push
push
mov
sbb
push
clc
inc
adc
adc
mov
push
mov
xchg
mov
cmp
or
or
stos
or
pop
add
retf
mov
imul
retf
retf
jbe
add
mov
mov
jg
dec
dec
dec
push
xchg
xchg
pop
imul
dec
jb
cmp
cmp
add
rol
pusha
sub
push
push
push
or
shr
jo
mov
loopne
loop
adc
repnz
jmp
out
jecxz
ror
enter
mov
pop
push
xor
pusha
aas
adc
adc
adc
pop
push
mov
xor
pop
xchg
sub
sub
cwde
js
(bad)
(bad)
mov
mov
call
fcom
rcl
rcl
jecxz
fst
mov
jg
push
inc
inc
mov
leave
ja
jne
inc
inc
xchg
xchg
xchg
cmp
fimul
retf
js
jl
mov
xor
sub
xchg
loope
fisttp
dec
(bad)
and
ret
ror
dec
xchg
sbb
add
mov
mov
mov
push
push
cmp
pop
cmp
pop
cmp
pusha
aas
outs
push
clc
dec
popa
aas
adc
and
xlat
fsub
dec
or
and
out
and
fsubp
clc
cmp
(bad)
mov
outs
pop
push
pop
mov
lods
retf
ins
ins
ins
cdq
add
mov
(bad)
mov
bnd
rcl
add
and
dec
xor
sub
pushf
jmp
adc
inc
pop
or
mov
and
shl
ret
mov
mov
mov
mov
mov
add
pusha
add
mov
es
fcmovnu
(bad)
add
ret
inc
loop
pop
inc
push
(bad)
loope
(bad)
out
rcr
jne
dec
dec
dec
cwde
xchg
xchg
fstp
xlat
inc
cwde
jo
call
mov
lods
add
mov
ret
ror
inc
sub
xchg
inc
outs
adc
mov
into
into
int3
enter
(bad)
(bad)
(bad)
clc
add
and
mov
(bad)
fcom
loopne
xor
loope
push
les
mov
pop
cmps
mov
push
jmp
jmp
inc
cmp
and
cmp
xchg
xor
sbb
mov
cmps
lods
clc
inc
(bad)
dec
in
add
repnz
jmp
stos
or
div
xor
jmp
mov
cmp
call
pop
gs
(bad)
repnz
ins
sbb
(bad)
aas
dec
xor
adc
or
xor
retf
pop
out
in
in
or
jmp
xchg
imul
in
daa
jmp
add
mov
iret
outs
xchg
(bad)
sbb
iret
push
and
loopne
inc
push
jns
mov
pop
mov
das
jle
(bad)
aad
sahf
frstor
mov
adc
mov
jle
pop
shl
add
(bad)
push
push
push
mov
adc
xor
sub
mov
push
ja
push
shr
scas
mov
fimul
adc
add
pop
add
add
fcmovbe
pop
xor
out
out
or
inc
jecxz
in
in
lds
jmp
call
out
jle
sbb
les
dec
aam
pusha
loop
add
test
add
lods
adc
pop
loopne
fbstp
pop
dec
and
repz
add
jg
fstp
dec
or
mov
jecxz
add
sbb
dec
sub
es
inc
xchg
pop
gs
sub
lods
pop
cmp
push
xor
or
xor
jnp
aas
adc
lahf
mov
xchg
pop
arpl
dec
or
clc
lahf
loopne
sbb
fldcw
ins
in
mul
inc
jo
sbb
jae
cs
in
xor
push
and
fiadd
add
add
mov
imul
dec
aam
pop
loop
pop
fistp
(bad)
std
out
add
inc
(bad)
add
out
fcom
sbb
sbb
in
jmp
(bad)
not
add
push
pop
fist
add
nop
aaa
jbe
gs
gs
adc
pop
adc
gs
in
outs
sbb
sbb
push
rcr
scas
shl
push
fsub
out
jae
mov
xor
or
lds
icebp
mov
sub
or
cmp
bound
pop
out
push
fadd
jle
outs
jbe
sbb
fsubr
pop
out
(bad)
out
out
aas
inc
(bad)
stos
loopne
push
fadd
sbb
adc
pusha
mov
push
or
add
ror
xlat
call
push
fiadd
adc
or
mov
jbe
jbe
inc
push
dec
or
lods
xor
or
sub
adc
or
dec
fsub
push
dec
or
lahf
or
sbb
cmp
out
or
dec
inc
push
inc
sub
dec
mov
dec
ud0
clc
push
pusha
mov
or
jo
jo
fisttp
push
dec
(bad)
fild
dec
rcl
fsubr
inc
je
push
pop
in
cs
stos
loope
push
mov
mov
sbb
fs
out
push
sti
mov
and
add
cs
gs
add
rcl
add
or
jbe
sbb
lea
outs
sar
add
jg
dec
add
jmp
dec
shr
jmp
or
xchg
rdtsc
add
outs
fadd
fild
shl
in
xor
push
loopne
add
adc
push
pop
push
in
out
out
mov
nop
lods
loope
dec
fiadd
sbb
mov
mov
add
rcr
jmp
rcl
add
gs
mov
or
mov
in
gs
adc
mov
sbb
adc
enter
or
dec
and
dec
(bad)
imul
jae
add
add
je
ret
push
fsubr
pop
and
add
inc
mov
jg
lods
loop
push
fmul
dec
(bad)
ror
mov
out
imul
cs
and
mov
add
jl
mov
pusha
jecxz
and
or
push
dec
rcl
fldl2e
and
add
gs
mov
pop
fucomp
or
movs
in
or
fcos
fs
ficom
pop
loope
pop
xor
add
retf
out
pop
mov
dec
mov
xor
xor
rcr
std
sub
adc
adc
mov
push
dec
dec
mov
out
push
fsub
addr16
push
(bad)
fs
jae
jge
leave
adc
loope
in
movs
or
jle
push
pop
push
arpl
pop
and
add
pop
out
dec
push
push
fmul
push
fcom
and
pop
loopne
and
pusha
mov
cmps
fsubr
ins
jmp
stc
cmp
fld
lock
add
fstp
dec
aam
fldpi
mov
sbb
pop
pop
add
and
mov
shl
cmp
(bad)
sbb
sbb
add
fcmovnu
std
push
and
dec
inc
mov
pusha
mov
xor
outs
adc
pop
gs
gs
cmp
and
sbb
es
jo
push
jmp
es
sbb
or
add
jb
dec
or
das
mov
inc
(bad)
std
add
jg
out
add
rcr
pop
fst
arpl
and
xor
push
push
xor
add
sbb
sbb
sub
in
mov
or
or
or
jge
ficomp
jo
pop
add
sub
mov
ss
and
pop
and
or
push
xor
jmp
mov
and
ins
pop
xor
imul
sti
add
gs
lock
add
adc
sbb
out
xchg
movhps
fisttp
data16
cmp
and
or
mov
jl
gs
addr16
pop
(bad)
mov
jmp
lock
or
add
movs
jbe
pop
add
xor
jb
(bad)
das
inc
jp
sub
sub
loopne
das
cmp
(bad)
pop
xor
and
leave
xor
fild
push
enter
jo
push
das
sub
fldenv
(bad)
fidivr
jae
sub
cmp
icebp
dec
sub
das
jg
add
(bad)
cmp
stc
jmp
popa
mov
cmp
adc
ret
inc
jne
inc
jle
and
cmp
scas
jecxz
fiadd
sbb
cmp
arpl
into
pop
push
push
or
pop
inc
in
and
add
cmp
mov
inc
or
sub
jbe
pop
sub
lods
fisttp
push
dec
fs
pop
stos
mov
cmp
fcmovnu
add
sub
lock
xor
call
out
es
cmp
jae
jg
push
fwait
lock
jecxz
out
ficom
lock
xchg
cmc
inc
push
rol
adc
cmc
jmp
in
addr16
repz
sbb
jle
aas
jns
imul
mov
push
dec
test
fstp
std
jbe
xchg
scas
in
push
inc
mov
sub
or
mov
and
xor
push
push
js
ret
fcomp
fstp
xor
je
sbb
adc
mov
arpl
fdivr
jge
outs
sub
dec
aad
inc
fld
or
lds
bound
out
or
sbb
lds
or
jmp
mov
jmp
jae
popf
push
add
inc
movs
add
loope
not
add
dec
fbstp
and
mov
jbe
or
rcr
pop
aam
das
aaa
sub
fld
sbb
bound
adc
scas
sbb
jbe
movs
push
sbb
xchg
mov
sbb
xor
and
lods
or
adc
or
push
daa
cmc
mov
lds
div
test
xor
in
lock
add
popa
xor
stos
fadd
loope
inc
outs
pop
fs
push
imul
test
push
stc
clc
int3
push
inc
pop
test
test
mov
xor
push
and
add
or
mov
pop
mov
inc
jb
adc
sub
inc
iret
sub
inc
cmp
fs
sbb
int3
aad
push
dec
dec
xor
add
pop
add
popf
cdq
cwde
and
add
call
movs
movs
mov
scas
push
push
add
mov
add
sbb
pop
or
pop
push
push
cwde
data16
pop
sub
dec
fwait
mov
std
add
scas
nop
add
or
and
jnp
jmp
add
ins
and
dec
dec
xchg
movs
pop
cmp
sub
or
stc
dec
loope
add
add
inc
xchg
movs
push
outs
jnp
xchg
out
add
push
outs
push
add
into
outs
sbb
in
push
push
push
mov
mov
add
aas
jne
push
or
push
and
ss
push
enter
(bad)
(bad)
call
jge
cwde
adc
push
addr16
outs
mov
outs
adc
enter
add
(bad)
(bad)
jmp
and
sbb
out
mov
arpl
cwde
sbb
fs
dec
aam
(bad)
(bad)
out
jmp
push
adc
call
stos
call
retf
mov
(bad)
push
sub
jmp
jg
hlt
xlat
stc
call
pop
fwait
sub
xor
addr16
jg
push
retf
jno
mov
mov
cld
test
mov
mov
xor
out
and
pop
stc
or
mov
adc
mov
(bad)
call
add
sub
das
es
cli
popa
pop
fld
push
ret
(bad)
sbb
loop
(bad)
mov
pop
pop
(bad)
(bad)
(bad)
(bad)
jnp
ret
dec
sbb
ins
sub
jmp
sub
mov
shl
sbb
fsubp
ret
jmp
ss
add
pop
int
lock
sbb
xor
xlat
cmc
cmp
mov
jg
mov
fnstenv
outs
xor
ror
dec
es
push
sahf
(bad)
(bad)
(bad)
inc
push
xchg
test
inc
xchg
jmp
mov
es
cmp
(bad)
(bad)
call
mov
lds
add
out
pop
xor
mov
mov
jno
mov
(bad)
jmp
xor
add
xor
or
pop
mov
cli
(bad)
(bad)
dec
scas
imul
int3
(bad)
pop
pusha
ret
fisubr
mov
mov
inc
push
push
mov
pop
cmp
pop
in
clc
scas
sahf
sub
mov
arpl
dec
es
inc
sub
inc
(bad)
and
mov
mov
inc
ins
mov
std
fcomip
dec
pop
es
inc
mov
ret
mov
pop
loopne
dec
ror
or
in
pop
cld
xor
out
xor
and
retf
jecxz
bnd
(bad)
jmp
sar
dec
(bad)
(bad)
call
movs
mov
repnz
fild
and
sub
xor
rcl
(bad)
(bad)
push
mov
leave
add
cs
int
xchg
jae
jbe
dec
in
fdivr
outs
(bad)
(bad)
(bad)
(bad)
jnp
sti
mov
pop
mov
mov
push
cmp
mov
pop
fisubr
jmp
sbb
xor
jecxz
repnz
repnz
add
sbb
es
outs
sbb
mov
add
ret
js
pusha
repnz
or
push
test
jmp
fild
loope
xor
push
fistp
(bad)
call
addr16
xor
aad
cmp
dec
cmp
pop
jl
pop
std
fisubr
xchg
add
std
rcr
lods
mov
or
das
(bad)
ins
sub
xor
(bad)
adc
and
jle
(bad)
(bad)
(bad)
inc
and
inc
add
and
retf
cmps
sub
mov
cmp
call
dec
cwde
push
cmp
xor
mov
imul
cdq
dec
cli
pop
dec
imul
in
(bad)
add
data16
(bad)
mov
iret
pop
jg
adc
test
cli
dec
pop
jmp
shr
and
call
sub
xchg
push
cld
(bad)
jmp
repnz
fwait
add
sbb
xchg
add
sar
inc
sar
test
lea
sub
fiadd
cwde
jmp
repz
add
loope
fidivr
cmp
mov
mov
fidivr
dec
add
(bad)
(bad)
(bad)
call
lock
scas
add
call
xchg
lock
mov
sahf
sahf
inc
in
(bad)
lods
sbb
(bad)
(bad)
(bad)
aas
mov
fdiv
push
cmp
aam
sar
xchg
data16
inc
jmp
sbb
fld
(bad)
(bad)
inc
es
fdivr
cmp
repnz
fnstenv
lods
and
dec
and
sub
(bad)
(bad)
jnp
clc
sahf
add
jo
fcomp
or
mov
pop
sub
aas
clc
(bad)
sbb
popf
push
dec
xor
(bad)
(bad)
(bad)
inc
mov
jno
cli
scas
jo
cmps
out
js
aad
das
sub
jecxz
stos
pop
hlt
jmp
mov
imul
dec
add
add
(bad)
ja
rcl
cld
mov
in
imul
add
push
sbb
call
or
mov
test
data16
stos
pop
or
(bad)
mov
imul
cmp
mov
mov
mov
retf
mov
mov
push
sahf
inc
add
in
xlat
pop
js
(bad)
mov
mov
ud0
aad
jbe
das
sbb
mov
das
pop
mov
add
adc
call
jnp
push
jmp
and
data16
push
les
arpl
pop
mov
add
(bad)
(bad)
(bad)
push
and
aaa
jbe
sub
cdq
xor
in
mov
ss
rol
jmp
pop
cld
pop
ret
call
fstp
(bad)
dec
lock
sti
(bad)
adc
inc
fwait
mov
jecxz
inc
mov
aaa
adc
jl
mov
fptan
gs
out
jg
mov
in
xchg
outs
call
adc
lock
adc
test
xor
(bad)
(bad)
push
or
test
jae
enter
test
inc
je
cld
push
xor
aam
push
mov
(bad)
(bad)
(bad)
push
mov
jle
jae
ror
or
dec
scas
xlat
inc
fsubr
xor
ss
inc
pop
dec
fild
int
call
(bad)
fucomip
jmp
(bad)
jmp
vsqrtss
out
push
loop
mov
outs
add
(bad)
jmp
cmp
sti
push
aam
dec
fistp
cmps
jl
ds
(bad)
(bad)
push
lds
xchg
lds
xchg
inc
sbb
(bad)
inc
cs
or
enter
add
add
test
sbb
popf
(bad)
pop
or
add
ins
jbe
(bad)
mov
dec
cmp
in
sub
jbe
in
cmp
dec
sahf
cmp
lock
rcr
scas
mov
dec
jb
int
call
repz
(bad)
(bad)
dec
out
jmp
sti
test
stc
(bad)
xor
sub
cs
(bad)
(bad)
(bad)
fisttp
mov
sldt
aaa
jmp
dec
arpl
in
(bad)
(bad)
(bad)
jmp
lods
adc
fbstp
adc
pop
mov
cdq
inc
lods
dec
push
cmps
sub
data16
clc
jmp
icebp
pusha
pushw
mov
add
(bad)
sar
(bad)
(bad)
(bad)
call
cld
ins
sti
mov
shl
fsubr
mov
aaa
jle
jg
jmp
xor
mov
sub
jmp
fwait
lock
(bad)
(bad)
mov
cmp
inc
or
pop
push
adc
in
xchg
mov
(bad)
(bad)
call
jp
mov
xor
and
lock
retf
mov
xchg
(bad)
shl
repz
mov
int3
les
sub
adc
inc
cmp
jb
addr16
outs
pop
(bad)
(bad)
(bad)
(bad)
fcomip
data16
call
jmp
out
sar
cli
div
in
(bad)
mov
(bad)
inc
ret
sti
mov
pusha
js
mov
push
nop
aas
and
(bad)
(bad)
(bad)
call
jnp
icebp
add
xchg
or
sbb
popa
pop
test
xor
call
(bad)
(bad)
call
dec
inc
mov
push
data16
jge
lds
fwait
mov
std
fld
jmp
sub
add
cld
retf
xor
jecxz
ret
cmp
pop
xor
mov
push
fwait
cs
mov
(bad)
jg
dec
or
push
sahf
mov
add
retf
pop
fdivr
jp
call
test
add
inc
xor
inc
cmp
inc
add
pop
mov
(bad)
mov
mov
loope
lods
imul
and
(bad)
jg
xor
and
call
sub
dec
arpl
punpcklbw
mov
sar
(bad)
(bad)
push
xchg
jecxz
idiv
mov
outs
pop
in
pusha
jecxz
pop
lods
mov
jnp
(bad)
fcomip
sti
or
lahf
push
in
stc
test
xor
daa
sub
push
test
out
dec
add
ror
push
fdivr
lahf
or
cwde
test
mov
dec
add
add
js
dec
inc
inc
xchg
mov
push
cwde
mov
dec
cmps
outs
(bad)
(bad)
(bad)
fcom
mov
stos
int3
mov
xor
ret
pop
data16
xor
scas
cmp
cmp
(bad)
(bad)
jmp
dec
out
lahf
push
push
inc
sbb
pop
(bad)
add
sub
push
adc
add
out
loope
jmp
mov
mov
into
cmp
jecxz
fdivr
(bad)
(bad)
(bad)
cmp
cld
fwait
ret
pop
adc
jmp
mov
inc
test
sbb
and
data16
push
and
sar
fcmovu
ins
loope
jle
jl
(bad)
(bad)
(bad)
mov
or
mov
mov
add
loopne
push
xor
pop
or
or
mov
leave
adc
(bad)
(bad)
dec
ds
shl
inc
rol
inc
dec
in
xchg
(bad)
jg
(bad)
repz
sbb
outs
jnp
jp
xchg
jb
jecxz
fwait
es
in
jle
xchg
call
dec
fst
cwde
jne
int3
ret
xchg
sub
xchg
or
or
btc
call
cwde
call
mov
and
mov
loop
je
and
push
or
popf
int3
dec
in
(bad)
(bad)
dec
add
mov
jb
addr16
cmp
xor
pop
xor
jle
mov
xchg
lock
(bad)
(bad)
inc
mov
jno
(bad)
pop
ja
rdmsr
ss
clc
mov
lock
(bad)
(bad)
(bad)
inc
mov
jmp
sahf
jnp
mov
pop
mov
fxch
inc
retf
(bad)
(bad)
(bad)
jmp
(bad)
int3
or
or
add
xor
inc
jo
mov
inc
inc
xchg
add
adc
pop
clc
add
pop
hlt
xor
inc
push
shr
adc
lea
aaa
xchg
and
adc
outs
ds
(bad)
jmp
sbb
cmps
enter
or
or
ret
adc
mov
test
fist
add
mov
pop
aas
jg
outs
idiv
cld
cmps
sbb
loope
ss
addr16
mov
(bad)
(bad)
(bad)
in
sub
xchg
(bad)
cld
mov
lods
xor
dec
lahf
push
cmp
xchg
inc
mov
jge
sbb
clc
cmp
and
cmp
cmp
push
lock
(bad)
(bad)
(bad)
call
dec
add
xlat
loopne
xchg
pop
push
mov
mov
scas
or
ins
and
and
(bad)
(bad)
(bad)
call
and
dec
jno
or
ret
push
sbb
int3
int3
leave
(bad)
xchg
out
(bad)
(bad)
mov
popw
mov
push
xor
popf
cmc
clc
sub
(bad)
(bad)
(bad)
jmp
cmc
xor
aaa
push
mov
mov
jmp
test
arpl
(bad)
(bad)
(bad)
inc
cwde
test
mov
or
test
or
cmp
sub
dec
mov
xchg
fucompp
aaa
(bad)
jmp
pop
push
test
push
std
retf
mov
in
push
leave
jne
xchg
(bad)
jg
mov
fiadd
fsubr
loopne
cmp
cmp
test
aaa
xor
fdivr
(bad)
jmp
push
mov
xor
test
sbb
jp
test
(bad)
jmp
mov
das
mov
dec
movs
bswap
sahf
jge
(bad)
sub
(bad)
adc
adc
(bad)
(bad)
mov
inc
xchg
xor
gs
mov
push
xlat
adc
(bad)
cmp
cmps
jmp
jmp
div
pop
adc
loope
shl
shl
sbb
sub
or
(bad)
(bad)
inc
call
mov
mov
nop
je
sub
loop
(bad)
push
(bad)
(bad)
call
sti
jg
(bad)
sub
jge
mov
inc
and
add
(bad)
jmp
and
or
movs
in
stos
or
mov
pop
inc
inc
xchg
sub
pushf
outs
test
popa
imul
adc
bound
out
(bad)
(bad)
(bad)
dec
inc
push
adc
aam
xor
js
mov
cmp
pop
jge
sbb
and
call
loopne
jp
mov
xchg
mov
(bad)
inc
cmps
imul
fist
cwde
jb
xor
inc
loop
shufps
ret
sub
into
mov
mov
xchg
and
out
push
sbb
enter
iret
pusha
sbb
jmp
cmp
(bad)
jmp
bound
scas
sub
pusha
popa
test
int
adc
xor
xchg
test
popa
and
fnsave
mov
mov
pop
or
push
push
jecxz
mov
call
sub
lea
mov
clc
(bad)
(bad)
(bad)
fisubr
inc
mov
cmc
(bad)
or
xor
scas
dec
cmc
aaa
outs
cmp
jo
xlat
call
adc
sub
mov
call
(bad)
(bad)
jg
add
add
sbb
push
rcl
xchg
pop
mov
and
ja
cmp
(bad)
fld
inc
pop
mov
xor
imul
cmps
int
lods
leave
sahf
(bad)
(bad)
(bad)
call
bound
out
sahf
out
mov
rcr
xlat
lods
mov
sub
ja
dec
lods
shr
call
scas
cwde
mov
mov
gs
loope
add
cmp
(bad)
dec
xchg
xchg
call
je
or
mov
mov
(bad)
clc
mov
xor
cmps
aad
mov
push
add
mov
mov
shl
jb
(bad)
(bad)
jmp
fcmovne
mov
neg
pop
shl
jmp
fistp
sbb
xor
cmp
(bad)
(bad)
inc
aad
mul
outs
fdiv
clc
mov
call
test
mov
(bad)
(bad)
(bad)
dec
mov
cmps
inc
sub
into
outs
stos
aaa
xor
les
(bad)
(bad)
(bad)
inc
push
push
inc
cmp
sbb
aad
mov
xchg
mov
(bad)
ffree
adc
fcomip
sbb
sti
aas
cld
rcr
inc
outs
sar
(bad)
cmp
pop
and
jle
cwde
jmp
cli
and
and
sub
inc
call
add
nop
jmp
call
ret
cmc
(bad)
(bad)
(bad)
push
and
cmp
and
outs
aad
repz
fnstenv
inc
movs
mov
or
jb
test
mov
retf
dec
and
mov
(bad)
jg
pusha
mov
pop
div
test
and
jno
and
jae
xor
pop
cld
(bad)
(bad)
fdivr
out
xchg
and
cwde
jle
enter
sbb
les
(bad)
push
int
inc
ins
inc
sbb
xor
xor
inc
cmc
or
sahf
adc
pop
sub
stos
dec
jae
(bad)
(bad)
jmp
leave
fcomp
je
not
and
dec
push
pop
inc
fild
(bad)
(bad)
dec
(bad)
jl
mov
(bad)
mov
cdq
jmp
cdq
mov
pop
test
call
std
inc
sub
mov
xor
inc
adc
iret
xchg
mov
(bad)
(bad)
jmp
test
mov
push
ss
lods
mov
add
pop
out
arpl
(bad)
jmp
mov
add
cmc
fwait
dec
cmp
cmp
dec
mov
pushf
fstp
(bad)
(bad)
(bad)
jmp
cs
data16
jne
repnz
lea
cmps
dec
test
cli
xor
mov
adc
(bad)
jmp
leave
sbb
call
sahf
sbb
daa
or
sbb
(bad)
(bad)
(bad)
mov
int3
fimul
sbb
and
leave
inc
jmp
clc
jbe
test
cmp
(bad)
(bad)
(bad)
jg
int3
mov
ror
js
adc
cmc
fist
pushf
mov
(bad)
sbb
or
jg
mov
jle
or
adc
lds
(bad)
(bad)
jmp
fisub
mov
jle
sub
sti
cmp
retf
push
aas
rcr
(bad)
fcomip
jg
jp
mov
lahf
mov
jbe
out
stos
stc
dec
push
inc
push
(bad)
(bad)
(bad)
inc
or
xor
popaw
adc
cli
sti
bound
(bad)
mov
rol
outs
sbb
jno
mov
(bad)
mov
stos
xchg
pop
jnp
and
or
inc
cmp
(bad)
dec
sub
dec
fimul
jb
pop
je
scas
arpl
ffreep
test
adc
(bad)
(bad)
(bad)
jmp
cdq
xor
popa
mov
mov
rcl
(bad)
mov
dec
mov
push
add
(bad)
jmp
outs
push
loopne
stos
(bad)
and
xchg
mov
cmp
les
(bad)
call
out
loope
movs
outs
xor
int3
sub
pop
ja
mov
mov
dec
movs
mov
push
stos
in
les
pop
ja
push
ror
mov
dec
sbb
sub
dec
ret
ins
xor
(bad)
shl
jl
arpl
(bad)
(bad)
mov
cmps
cld
dec
and
cld
fwait
dec
arpl
cmp
cld
mov
dec
popf
in
jmp
out
fwait
outs
mov
sahf
mov
mov
sub
xchg
cmp
cli
(bad)
dec
mov
pushf
or
add
xor
pop
xchg
and
in
fcos
jg
(bad)
cmp
dec
add
aas
or
push
js
inc
aad
into
test
lea
daa
and
enter
jg
jmp
mov
jmp
xor
pop
into
xlat
jg
outs
iret
jae
cmp
lock
inc
xor
sbb
cld
sbb
mov
inc
enter
(bad)
inc
adc
push
in
lods
mov
adc
mov
and
mov
and
jecxz
or
fcmove
xor
mov
scas
dec
ror
sahf
add
mov
jmp
adc
ficomp
add
xor
adc
dec
sahf
je
pop
sbb
jle
cmps
data16
(bad)
push
inc
jmp
xchg
mov
pusha
mov
es
xor
inc
fstp
and
(bad)
(bad)
call
aas
out
pushf
jae
stc
inc
retf
ret
(bad)
arpl
cmp
push
retf
mov
(bad)
(bad)
push
popa
aam
(bad)
mov
ret
pop
iret
mov
je
and
outs
mov
jmp
imul
imul
mov
adc
jno
leave
inc
ret
add
scas
cmp
loopne
cmps
mov
test
mov
sbb
(bad)
(bad)
(bad)
mov
sub
jae
or
fmul
pop
arpl
and
adc
inc
xchg
pop
jg
mov
loopne
mov
mov
pop
aas
or
ins
daa
jmp
pop
or
fidivr
jne
hlt
xor
inc
sub
cmp
mov
pop
mov
(bad)
jmp
cmp
add
adc
or
inc
cmp
lods
fdivr
(bad)
jg
push
cmp
inc
cmp
inc
out
sti
mov
mov
(bad)
(bad)
jmp
dec
cmp
mov
adc
xchg
inc
xor
loope
pop
fcmovnu
cmp
pop
xor
(bad)
(bad)
fstp
xor
es
xchg
cli
retf
pop
into
in
mov
ins
xor
ds
or
(bad)
(bad)
inc
mov
xor
or
add
pop
les
je
mov
fs
cld
in
xor
(bad)
jmp
ret
dec
jle
and
cmp
sub
inc
inc
sub
scas
xchg
cmp
pop
pop
push
(bad)
(bad)
(bad)
(bad)
mov
pop
fwait
push
xor
imul
mov
inc
and
xor
mov
mov
lock
xchg
and
outs
ja
retf
leave
jne
out
xchg
(bad)
inc
ins
ss
jne
pop
cmp
(bad)
mov
push
lds
adc
popa
inc
cwde
sahf
mov
fptan
or
add
test
push
pop
push
in
and
ja
jnp
iret
pop
pop
ins
cmp
pop
jge
(bad)
mov
fcomip
aas
cmps
mov
mov
rcr
add
xor
(bad)
(bad)
call
sbb
rcr
jb
out
mov
xchg
mov
pop
sub
inc
cmp
aad
inc
xchg
(bad)
push
sbb
pop
stos
mov
(bad)
adc
xchg
outs
ins
loope
cmps
push
(bad)
jmp
cmp
inc
jbe
inc
jnp
in
jp
mov
in
stos
call
(bad)
(bad)
(bad)
mov
rep
mov
lea
shr
(bad)
repz
mov
add
pop
in
(bad)
(bad)
(bad)
fucomip
inc
in
pop
(bad)
int3
add
mov
ret
or
leave
jp
inc
jo
iret
xchg
jecxz
(bad)
dec
jae
add
xor
js
mov
xchg
fisub
push
addr16
test
(bad)
mov
call
jle
std
xlat
mov
sahf
call
movs
push
sub
stos
sahf
and
xchg
test
xchg
mov
in
fmul
cmp
jmp
ret
cmp
sub
jno
or
(bad)
(bad)
(bad)
call
imul
push
cmps
jecxz
stos
test
sbb
jno
push
jge
dec
push
mov
cs
cli
mov
xchg
aas
mov
or
scas
fcomi
dec
mov
lock
push
and
aad
bswap
call
loopne
push
fmul
add
imul
dec
(bad)
(bad)
(bad)
inc
outs
mov
xor
jae
(bad)
push
arpl
(bad)
mov
adc
push
fs
test
or
xlat
mov
lods
xchg
inc
into
popf
(bad)
bound
daa
mov
imul
fs
jmp
sbb
cmp
add
xchg
aas
jmp
pop
jl
(bad)
cs
out
in
loopne
cmps
shr
mov
xor
cmp
(bad)
(bad)
jmp
cmp
daa
xchg
je
xor
pop
int
sbb
aam
popa
mov
test
(bad)
(bad)
inc
xlat
adc
cmp
repnz
fcomp
pop
sub
into
sub
pusha
or
jg
mov
fsubr
std
popf
inc
idiv
jg
xor
cmp
push
fwait
das
pop
je
clc
(bad)
(bad)
dec
out
push
nop
mov
sbb
xlat
call
iret
xchg
push
jo
jbe
adc
mov
push
cs
mov
int
repnz
adc
xor
(bad)
(bad)
(bad)
inc
push
popa
xchg
or
test
int3
mov
dec
sub
jns
ins
(bad)
(bad)
(bad)
call
adc
shl
jmp
in
outs
cmp
repnz
ret
aas
(bad)
(bad)
rol
(bad)
(bad)
mov
sbb
inc
popf
adc
xchg
push
mov
cwde
cs
push
shl
or
(bad)
jg
sti
(bad)
dec
pop
push
imul
rol
inc
pushf
ins
inc
(bad)
(bad)
(bad)
inc
push
mov
jle
cli
sbb
adc
repnz
and
push
dec
(bad)
jg
(bad)
inc
mov
inc
or
jecxz
leave
daa
cli
(bad)
scas
pop
call
jle
(bad)
(bad)
(bad)
stc
xchg
cmps
(bad)
aam
cmc
cli
mov
dec
push
cli
sub
pop
jge
push
mov
ins
scas
std
xor
jmp
scas
push
adc
mov
dec
iret
jb
cmp
xchg
or
mov
push
arpl
sar
pop
popa
cmps
cmp
mov
shr
or
aas
push
mov
out
mov
(bad)
std
out
push
gs
adc
out
xor
mov
aas
or
lds
and
xchg
into
cmps
mov
mov
cmp
inc
pop
and
cmp
jno
jo
hlt
adc
pop
mov
sar
fisub
mov
test
stos
adc
ins
and
(bad)
(bad)
dec
add
nop
push
aad
cmp
mov
or
rol
and
jmp
xchg
(bad)
(bad)
ds
cmp
pop
cld
aad
mov
pop
(bad)
mov
mov
adc
(bad)
(bad)
(bad)
call
das
test
or
test
cmp
les
rcl
push
call
clc
pop
mov
add
jle
loop
pop
out
cwde
loop
cmp
mov
mov
xchg
and
push
sbb
arpl
sub
in
cmp
movs
xor
das
pop
pop
test
jbe
js
out
hlt
xchg
(bad)
stc
mov
pop
sti
pusha
in
stos
repz
(bad)
cmp
(bad)
(bad)
jmp
jae
inc
imul
xchg
dec
lods
mov
(bad)
lods
scas
retf
(bad)
(bad)
(bad)
(bad)
call
int3
out
sbb
cmps
lods
je
and
lods
scas
xchg
ret
mov
add
or
loop
mov
inc
inc
push
repz
js
or
hlt
jne
jmp
sti
sbb
imul
push
mov
loop
call
icebp
xchg
dec
cs
(bad)
(bad)
dec
in
xchg
jmp
lock
cs
mov
jb
dec
push
mov
(bad)
dec
lahf
rcl
fwait
(bad)
(bad)
(bad)
inc
lods
mov
mov
push
mov
sbb
mov
test
in
stos
mov
mov
(bad)
inc
adc
dec
lods
pop
idiv
data16
add
jg
pop
mov
inc
cs
mov
inc
jno
mov
out
adc
inc
add
mov
push
aaa
mov
mov
fild
and
enter
outs
dec
popa
or
mov
sub
mov
xor
(bad)
(bad)
call
pop
stos
dec
or
leave
int3
fxch
sub
adc
push
or
std
inc
ja
icebp
xchg
pop
pop
hlt
(bad)
jmp
cdq
mov
and
sbb
adc
(bad)
hlt
xchg
push
dec
adc
icebp
fiadd
es
(bad)
(bad)
call
std
add
jns
xor
and
das
fisub
movs
cmp
push
jae
mov
(bad)
(bad)
(bad)
push
cs
xchg
sub
xor
cld
or
inc
js
or
pop
loopne
popa
loope
and
adc
jmp
dec
ja
out
ret
sbb
push
(bad)
(bad)
jg
inc
dec
das
push
adc
or
pop
mov
out
jmp
jle
mov
(bad)
(bad)
(bad)
push
pusha
pushf
jmp
aad
jne
or
or
or
cmp
mov
sub
shl
scas
dec
add
ss
pop
sub
shr
mov
sbb
loope
sbb
ret
(bad)
(bad)
push
sahf
ins
push
fstp
fisttp
xor
mov
clc
aam
inc
xchg
jbe
push
push
shl
in
xchg
jne
sub
(bad)
(bad)
cmp
enter
pop
outs
inc
sbb
push
mov
mov
sub
(bad)
(bad)
inc
movs
mov
mov
sbb
repnz
popa
test
aad
jp
aam
(bad)
jmp
mov
push
push
cmp
inc
cmp
jnp
mov
mov
fwait
inc
sbb
and
std
xor
je
(bad)
(bad)
dec
and
neg
sub
mov
dec
in
mov
aad
sbb
sub
dec
cmp
mov
cwde
mov
sub
and
pop
data16
(bad)
(bad)
mov
and
xchg
mov
push
lods
ss
xor
(bad)
into
cmc
rcl
mov
loop
dec
repz
pop
lock
jmp
mov
scas
mov
retf
dec
in
xchg
pop
loopne
xlat
inc
push
pop
pop
fnstenv
(bad)
in
xlat
fcom
cmp
push
mov
and
adc
push
aad
call
stos
adc
(bad)
(bad)
push
adc
loope
dec
pop
mov
mov
daa
sbb
daa
mov
(bad)
dec
xchg
in
pop
jbe
ja
lahf
stos
(bad)
call
xor
mul
outs
mov
fld1
popf
mov
out
push
sub
sbb
xchg
(bad)
(bad)
call
push
in
dec
int
xchg
pop
je
(bad)
xor
dec
clc
test
fst
sbb
mov
mov
rol
push
dec
mov
cmps
out
test
retf
repz
cmc
(bad)
dec
or
imul
stos
aas
cld
out
shl
aas
cmp
enter
adc
rol
arpl
pop
call
mov
adc
pop
push
jne
(bad)
(bad)
(bad)
inc
daa
dec
fwait
push
ror
jnp
xor
repz
and
jns
and
push
shl
(bad)
(bad)
push
test
cmp
jo
int
cmps
je
and
pop
xchg
xor
xchg
xchg
jmp
inc
std
(bad)
jmp
mov
push
push
xchg
xor
adc
lods
xor
cli
fidiv
addr16
sti
iret
push
sbb
dec
fild
push
push
and
test
(bad)
(bad)
(bad)
call
jmp
sbb
cli
movs
shr
in
mov
pop
outs
xchg
inc
(bad)
(bad)
(bad)
dec
test
jmp
pushf
mov
inc
popa
cdq
adc
addr16
sahf
imul
jg
add
cwde
rcr
mov
and
mov
(bad)
call
aam
fist
jmp
into
mov
popf
xor
inc
push
mov
jnp
(bad)
(bad)
jmp
cld
push
loop
mov
xchg
sub
pop
mov
jle
ins
pop
pop
mov
mov
call
ror
mov
es
mov
mov
mov
mov
cmp
rcr
cmp
or
push
sub
mov
push
std
(bad)
(bad)
pop
inc
jg
or
push
xchg
shl
icebp
imul
mov
xor
pop
mov
outs
out
xchg
add
inc
inc
gs
and
jecxz
das
fsub
hlt
cmp
stc
jns
aas
loopne
repz
and
repz
retf
cmp
cli
sbb
mov
inc
iret
imul
(bad)
(bad)
(bad)
call
outs
dec
popf
push
inc
inc
ja
xor
loop
data16
sbb
dec
les
sbb
inc
mov
(bad)
(bad)
jmp
mov
jnp
adc
cmp
retf
inc
prefetch
mov
or
and
sub
inc
arpl
int
daa
dec
fwait
cdq
lahf
lahf
dec
out
and
imul
or
mov
(bad)
dec
loop
and
push
not
dec
xchg
mov
cmp
call
jno
lods
data16
push
push
mov
movs
mov
pusha
and
repnz
pop
jae
(bad)
dec
outs
pop
dec
fld
jb
fistp
mov
es
neg
fcomip
(bad)
(bad)
(bad)
imul
das
xor
imul
mov
dec
call
mov
(bad)
jmp
pop
lea
adc
xchg
xor
xchg
cmp
cmp
(bad)
(bad)
(bad)
inc
adc
enter
jl
in
or
adc
or
or
cdq
dec
loope
dec
nop
into
xchg
push
mov
movs
movs
lods
inc
scas
lahf
jmp
call
in
jecxz
nop
add
sbb
sub
ss
mov
xchg
mov
or
imul
(bad)
dec
ret
outs
stos
stos
scas
call
jge
jl
mov
cmps
pop
mov
scas
call
mov
test
(bad)
(bad)
fldcw
inc
lods
sbb
das
addr16
out
inc
fist
mov
popf
inc
fucomp
sar
(bad)
aaa
test
fnstsw
cmps
push
xchg
push
fcomp
and
jmp
dec
(bad)
(bad)
call
sbb
aas
retf
cmp
pop
cmp
dec
pop
cs
arpl
(bad)
cmp
inc
out
and
js
mov
enter
inc
jne
clc
inc
mov
(bad)
jmp
cmc
mov
dec
sub
fld
and
es
and
sbb
call
rol
sub
rol
fst
rol
mov
ror
inc
aad
fisttp
and
cmp
inc
sbb
xor
jp
in
stos
scas
mov
push
std
(bad)
push
or
inc
mov
ins
adc
sar
imul
arpl
fcomip
(bad)
inc
test
sub
mov
push
mov
push
sub
and
sub
dec
(bad)
(bad)
(bad)
jmp
leave
ror
or
and
mov
jne
in
mov
jle
jmp
(bad)
(bad)
mov
cmps
jg
int
jg
mov
and
jge
int3
cmc
stos
push
xchg
xchg
(bad)
mov
(bad)
jmp
(bad)
into
cwde
push
push
push
nop
pop
shl
adc
stc
loopne
loop
loop
test
(bad)
(bad)
dec
or
mov
mov
(bad)
or
xchg
adc
and
or
dec
add
add
inc
mov
test
sti
idiv
(bad)
call
(bad)
xor
push
push
jle
add
xchg
mul
adc
cdq
push
add
adc
xchg
adc
dec
ret
mov
ret
into
pushf
jns
cmp
rcl
ret
(bad)
(bad)
jmp
sbb
sub
cmps
rcl
dec
inc
cmp
inc
xor
mov
test
adc
mov
loop
add
rol
out
mov
(bad)
call
mov
jecxz
(bad)
mov
test
call
adc
or
mov
jnp
push
mov
and
xor
push
xchg
jmp
aas
(bad)
(bad)
icebp
aad
es
mov
push
fsubr
cmc
jmp
jnp
aaa
or
js
mov
mul
jmp
add
pop
aaa
ret
(bad)
fld
push
ins
cmp
push
mov
call
clts
add
pop
jle
mov
aaa
mov
(bad)
lds
sbb
sar
push
jo
jno
clc
pop
cld
call
outs
loopne
(bad)
retf
add
pop
mov
jns
ins
in
sar
out
clc
scas
ret
add
cmps
fld
pop
jmp
(bad)
(bad)
jmp
xchg
ret
sar
and
loope
daa
xor
nop
sbb
mov
cmps
xchg
movs
ror
rol
(bad)
push
cmps
xor
xchg
mov
ja
jge
icebp
ja
out
arpl
test
int
cmc
xor
fadd
(bad)
jmp
inc
movs
or
repz
xor
push
call
(bad)
jmp
js
fdivr
mov
sub
push
fdivrp
(bad)
(bad)
inc
int3
retf
inc
push
ret
cdq
fist
push
cs
xchg
xor
mov
ins
jmp
outs
or
(bad)
push
or
mov
imul
lea
add
loope
mov
jg
sbb
mov
jb
arpl
nop
dec
cmc
daa
repnz
outs
ret
pop
inc
add
cmp
loope
add
jne
(bad)
fucomip
retf
fwait
aaa
jg
jne
cmc
pushf
xchg
add
mov
cmp
add
(bad)
(bad)
(bad)
inc
pop
pop
push
add
(bad)
xchg
dec
adc
mov
leave
xchg
sub
xor
sub
(bad)
(bad)
jmp
xchg
mov
cmp
push
push
test
sub
(bad)
fild
(bad)
out
or
std
clc
(bad)
(bad)
call
mov
imul
mov
pop
mov
mov
adc
xchg
dec
imul
pushf
pop
or
imul
data16
jg
stc
jae
push
std
(bad)
(bad)
call
pop
push
mov
cvtdq2ps
mov
ins
daa
inc
aam
bound
int3
int
and
push
sub
or
setae
ror
adc
icebp
je
adc
inc
loope
jae
jmp
push
arpl
in
sub
cmp
xchg
shl
(bad)
jbe
adc
inc
jg
adc
add
sub
sar
(bad)
(bad)
(bad)
cmp
pop
pop
cmp
and
mov
clc
cmp
xor
(bad)
(bad)
(bad)
push
xchg
enter
push
add
push
sbb
das
sbb
mov
stos
dec
loopne
mov
(bad)
fsubr
lods
out
dec
arpl
(bad)
(bad)
call
addr16
cmp
arpl
int
sub
or
ret
push
setb
idiv
das
(bad)
pusha
xchg
arpl
push
popa
cmps
mov
fdivr
(bad)
popa
mov
or
(bad)
(bad)
inc
icebp
fisttp
dec
mov
popf
jp
nop
inc
aam
sar
pop
fldenv
aam
icebp
outs
sub
(bad)
jmp
push
jnp
mov
pop
mov
in
ret
shl
push
push
xchg
test
(bad)
jmp
jecxz
addr16
ins
cli
pop
add
int
adc
jg
popa
jno
xchg
xchg
pusha
icebp
add
movs
sbb
dec
ficomp
pusha
mov
ret
push
loopne
adc
(bad)
dec
sbb
sbb
add
lea
js
fcom
lahf
and
(bad)
addr16
(bad)
(bad)
jmp
out
loope
in
into
popf
jne
repnz
sub
test
repnz
lea
lds
inc
add
std
cld
or
jbe
pop
aaa
clc
in
jle
inc
pop
xor
inc
cmps
sar
xchg
mov
fs
and
in
(bad)
dec
dec
adc
call
and
mov
adc
pop
sbb
xor
inc
xor
jne
inc
(bad)
(bad)
jmp
xchg
ret
mov
pop
inc
sbb
push
hlt
add
xchg
dec
cmp
call
loop
adc
popa
test
xor
xchg
popa
sti
stos
adc
mov
inc
aad
and
nop
mov
add
xchg
and
fwait
pop
sbb
in
inc
mov
cdq
pop
retf
mov
mov
test
add
in
call
(bad)
jg
dec
push
ins
in
je
cmc
cmps
popf
lods
mov
jmp
call
(bad)
(bad)
(bad)
jmp
cmp
cmp
cld
inc
push
les
jl
aaa
out
popf
dec
enter
dec
push
(bad)
(bad)
(bad)
fild
pop
scas
dec
dec
inc
div
mov
xor
les
(bad)
(bad)
(bad)
(bad)
(bad)
fld
mul
fs
and
mov
hlt
icebp
ret
sar
push
(bad)
lahf
inc
sbb
xchg
mov
(bad)
(bad)
jmp
js
out
ror
jns
addr16
mov
pop
ds
and
jecxz
mov
loop
mov
(bad)
(bad)
call
cld
shl
icebp
mov
aad
mov
es
dec
ins
adc
mov
mov
push
in
(bad)
push
clc
pop
sar
adc
or
imul
aas
jecxz
jnp
scas
repz
cld
pop
repz
shl
xchg
xor
add
sbb
push
test
mov
ins
popa
jo
mov
xchg
cmp
(bad)
(bad)
(bad)
call
xchg
mov
xor
sbb
xor
add
sbb
sbb
add
or
ins
(bad)
(bad)
(bad)
dec
adc
inc
nop
mov
dec
lods
mov
sub
push
bound
mov
(bad)
inc
dec
jl
jns
in
test
out
jae
fnstcw
mov
add
pop
cs
add
(bad)
jmp
cdq
daa
loopne
jp
rcl
inc
shl
mov
test
jmp
inc
and
aaa
pop
jp
enter
fimul
dec
cld
mov
cmps
cmp
shr
mov
out
dec
cmp
stc
and
adc
mov
xor
cmps
(bad)
and
sbb
(bad)
(bad)
inc
cdq
das
dec
push
les
mov
movs
lahf
jge
fst
in
fs
pop
(bad)
fxch
ins
xor
(bad)
(bad)
(bad)
dec
and
inc
les
mov
pop
xor
int3
adc
xor
(bad)
inc
mov
or
lods
js
fwait
mov
adc
jb
jo
mov
push
jo
add
(bad)
(bad)
(bad)
inc
movs
movs
repz
add
push
int
jnp
xor
aas
xchg
xchg
enter
or
sub
test
addr16
sub
jno
jmp
pop
pop
pop
sbb
sbb
mov
in
and
mov
test
mov
clc
xchg
mov
cvtdq2ps
jle
cmp
fwait
out
and
jge
(bad)
(bad)
(bad)
mov
loop
mov
or
mov
sbb
xchg
mov
cmp
or
jge
cmp
xchg
xchg
retf
or
pop
sub
inc
mov
xchg
leave
loop
or
cmp
into
pop
sbb
mov
lock
(bad)
(bad)
(bad)
cmp
inc
test
retf
cmp
jns
scas
sbb
test
dec
pop
pushf
imul
cmc
lahf
add
mov
and
fdiv
(bad)
out
ud0
(bad)
fild
mov
neg
jo
clc
xchg
into
(bad)
sti
sbb
adc
dec
addr16
sbb
imul
or
and
enter
add
xor
push
rcl
(bad)
(bad)
fild
aaa
mov
clc
and
mov
leave
or
inc
fmul
inc
adc
add
jmp
push
add
inc
and
daa
inc
pop
cmp
cmp
pusha
add
and
(bad)
(bad)
jmp
mov
popa
and
inc
and
xor
ud1
push
and
inc
dec
(bad)
(bad)
inc
adc
adc
rcl
test
sub
adc
push
cmp
mov
cmp
jle
faddp
or
mov
lods
or
test
push
out
stc
lock
mov
shr
add
push
sbb
(bad)
dec
push
loop
clc
and
dec
sub
inc
and
mov
pop
dec
das
jb
sbb
(bad)
(bad)
(bad)
call
and
dec
push
or
inc
adc
push
in
test
aam
das
clc
(bad)
call
sub
cmc
or
sub
das
hlt
sub
adc
cs
aaa
mov
fcmovnbe
xchg
shl
jecxz
aaa
sbb
xchg
rcr
xor
cwde
add
cmp
add
and
int3
bound
(bad)
push
jmp
inc
jmp
fadd
in
jle
xor
cmp
and
sti
push
bound
mov
(bad)
call
loope
loop
jno
mov
or
idiv
(bad)
(bad)
push
fprem
adc
or
aas
mov
or
pusha
inc
add
mov
inc
js
(bad)
(bad)
dec
inc
and
aad
(bad)
les
and
cmp
mov
and
nop
hlt
dec
movs
dec
xchg
(bad)
(bad)
(bad)
call
je
je
hlt
mov
xchg
sbb
jns
mov
cwde
cld
push
and
(bad)
(bad)
jmp
loope
rcl
xor
icebp
inc
adc
test
push
xor
pop
repnz
in
(bad)
(bad)
(bad)
dec
imul
mov
push
push
xchg
aam
test
mov
je
je
(bad)
(bad)
(bad)
push
push
jmp
mov
fwait
or
es
out
int3
inc
cdq
xor
inc
shl
sub
das
and
mov
inc
aam
test
aam
pop
sbb
jmp
push
push
mov
fs
push
dec
mov
xchg
xchg
sub
push
das
jno
ret
dec
retf
xchg
shl
jb
mov
(bad)
(bad)
jmp
outs
repnz
mov
sub
adc
adc
(bad)
(bad)
(bad)
call
sub
sub
push
adc
sub
push
push
push
not
(bad)
(bad)
dec
fisubr
test
push
cmps
jb
gs
xchg
mov
sub
mov
clc
call
ja
daa
shr
call
and
lods
pop
mov
(bad)
mov
jp
jp
cli
and
push
mov
inc
push
push
(bad)
(bad)
call
xor
pop
repz
adc
push
imul
cmp
jbe
mul
pushf
mov
into
inc
pop
mov
outs
call
push
inc
das
push
out
cmp
(bad)
(bad)
fimul
pop
fild
pop
mov
ins
pusha
imul
mov
mov
imul
mov
xchg
popa
xchg
loope
int
(bad)
sub
test
call
test
outs
jecxz
(bad)
(bad)
call
dec
es
es
es
cmovl
push
cwde
out
jbe
(bad)
push
outs
(bad)
xor
ss
(bad)
push
fild
imul
into
mov
retf
out
pop
push
sub
sub
jl
sub
mov
dec
outs
pop
inc
pop
push
pop
or
(bad)
(bad)
(bad)
inc
jecxz
xor
mov
ss
add
sbb
fidiv
(bad)
xlat
inc
pop
dec
jl
dec
fisttp
dec
mov
mov
fs
(bad)
dec
shl
mov
enter
pushf
jo
jae
jo
out
ret
(bad)
(bad)
(bad)
call
out
jecxz
fsubp
mov
pop
call
push
loop
jmp
cmp
(bad)
mov
ret
(bad)
jns
mov
mov
outs
iret
popa
das
gs
xchg
push
mov
adc
(bad)
push
js
mov
clc
call
jl
fist
scas
aam
leave
pop
fabs
pop
add
(bad)
(bad)
cld
mov
repnz
icebp
dec
repz
add
loopne
push
adc
xor
call
adc
cmp
outs
mov
movs
cmp
xor
dec
(bad)
push
lods
xor
fs
icebp
stos
cmc
stos
scas
mov
and
(bad)
(bad)
dec
push
out
pop
cmp
adc
mov
addr16
(bad)
call
cmp
(bad)
(bad)
(bad)
dec
mov
inc
hlt
arpl
xor
mov
pop
lods
jge
out
inc
jbe
(bad)
(bad)
(bad)
(bad)
jnp
arpl
sub
dec
(bad)
fcmovb
xchg
(bad)
dec
(bad)
fld
in
mov
(bad)
lahf
out
jo
mov
(bad)
(bad)
cmp
push
out
std
adc
and
xchg
dec
icebp
fs
mov
call
push
adc
aam
xor
mov
imul
cmp
mov
dec
push
test
mov
sbb
inc
xor
(bad)
(bad)
jmp
addr16
mov
mov
mov
fs
in
out
mov
scas
cmp
ja
out
call
clc
(bad)
push
sbb
fistp
mov
int
int
jg
xor
lock
(bad)
jmp
int
mov
mov
mov
push
pop
fwait
or
clc
add
aad
call
mov
out
fbld
arpl
mov
in
ret
es
in
pop
mov
out
clc
(bad)
call
mov
stos
test
sub
push
out
ret
in
cs
mov
push
test
fcomp
fistp
ret
jnp
neg
pop
push
pop
mov
mov
mov
(bad)
(bad)
jmp
(bad)
pop
sti
aas
push
(bad)
push
fisubr
push
stos
ficom
ja
jge
lock
ja
sbb
call
out
(bad)
jp
mov
imul
into
cmp
mov
mov
(bad)
(bad)
(bad)
mov
lea
pop
(bad)
lock
push
aam
ror
or
(bad)
(bad)
call
mov
popf
sub
mov
mov
clc
mov
mov
jge
(bad)
(bad)
jmp
retf
ja
fist
push
fimul
(bad)
mov
mov
push
sub
fcomip
(bad)
push
jbe
jge
hlt
std
xchg
shr
stos
into
enter
dec
cmp
loope
into
mov
fpatan
test
pop
sbb
mov
jle
jno
(bad)
add
pop
mov
scas
(bad)
mov
mov
mov
pop
(bad)
jne
jmp
jge
(bad)
(bad)
(bad)
(bad)
jge
aas
pop
cld
rcl
outs
(bad)
jle
jmp
add
pop
into
push
cmp
mov
call
jmp
fcmovnbe
out
lods
mov
ja
jb
in
sti
out
in
movs
jnp
(bad)
(bad)
jmp
out
fcomp
jmp
and
push
xlat
std
test
arpl
mov
enter
sar
(bad)
(bad)
(bad)
mov
mov
(bad)
rol
cmps
in
stos
adc
cmps
fsub
(bad)
ds
std
ins
cld
jns
repz
jmp
scas
jle
sti
loop
pop
sbb
jmp
(bad)
xchg
push
(bad)
(bad)
jmp
xlat
loop
repnz
mov
jg
icebp
fwait
in
repz
outs
in
push
jge
js
sti
ds
les
in
xchg
ds
jp
nop
mov
dec
and
leave
loop
retf
fstp
fistp
lods
mov
(bad)
(bad)
out
mov
pop
adc
push
pop
and
push
mov
adc
in
cld
(bad)
(bad)
(bad)
(bad)
push
push
loop
push
iret
xor
lods
hlt
push
retf
test
or
adc
sti
hlt
test
mov
(bad)
(bad)
cli
repz
inc
mov
out
push
aas
cmps
cli
inc
mov
fs
sar
(bad)
(bad)
(bad)
dec
push
fstp
in
jae
fimul
ror
jne
imul
mov
daa
xlat
xchg
repz
clc
(bad)
(bad)
(bad)
(bad)
fsubr
fbstp
into
icebp
cwde
add
in
(bad)
mov
xchg
xor
cwde
cli
mov
jg
hlt
dec
int
dec
inc
popa
jl
cmp
mov
in
mov
(bad)
call
sbb
test
cmp
cmp
xor
sti
push
jbe
mov
mov
(bad)
call
dec
adc
cmps
inc
in
xchg
outs
mov
add
add
pop
loopne
call
mul
pop
add
daa
push
(bad)
push
ret
je
(bad)
(bad)
call
pop
add
gs
cmp
adc
fiadd
mov
push
fldcw
dec
dec
repnz
in
sub
cli
arpl
inc
cdq
xchg
popf
or
mov
(bad)
gs
cdq
xchg
int
sbb
(bad)
dec
add
xlat
mov
inc
cmp
into
cmps
in
sub
xchg
inc
jg
shl
lods
sub
stos
sub
mov
(bad)
(bad)
dec
cwde
dec
jg
xchg
adc
or
into
test
int3
test
pop
add
(bad)
jg
mov
xchg
nop
lds
pop
scas
int3
retf
arpl
rcl
inc
(bad)
(bad)
(bad)
(bad)
jnp
fistp
dec
add
nop
pop
xlat
(bad)
jge
stc
out
mov
int
pop
sbb
xor
xchg
(bad)
(bad)
(bad)
push
popa
out
jmp
out
or
and
pop
sub
jae
jns
loop
and
(bad)
(bad)
(bad)
jmp
adc
jb
les
xchg
cmps
mov
mov
adc
out
dec
fadd
and
aad
cli
mul
and
sub
mov
sub
call
(bad)
fcmovnb
mov
xchg
or
adc
push
test
outs
mov
jle
jbe
imul
mov
(bad)
(bad)
push
pop
sub
mov
outs
shr
inc
out
xchg
or
mov
je
addr16
nop
dec
aas
sti
xchg
inc
(bad)
(bad)
(bad)
call
cmp
movs
and
xchg
jge
sbb
out
or
pop
mov
es
xchg
jmp
(bad)
(bad)
jmp
mov
pop
jge
call
dec
jnp
jno
inc
inc
aad
test
stc
adc
xchg
lock
arpl
mov
js
cld
pop
mov
ror
stos
stc
movs
xor
add
xor
(bad)
push
pushf
adc
daa
imul
sub
inc
mov
or
xor
add
push
inc
and
jns
ret
(bad)
push
cmp
sub
add
outs
sub
xor
mov
sub
or
(bad)
(bad)
(bad)
dec
xor
sub
repnz
add
xchg
imul
jb
out
cmp
inc
xchg
mov
mov
xor
(bad)
cld
push
inc
iret
push
jnp
(bad)
(bad)
inc
jns
jae
inc
adc
mov
ret
cdq
lea
call
imul
(bad)
(bad)
push
dec
push
mov
pop
adc
mov
push
das
sub
add
fucomp
adc
arpl
inc
bound
pushf
in
mov
enter
jbe
sub
mov
dec
mov
dec
adc
add
inc
mov
ja
fsub
pusha
cmps
mov
imul
(bad)
call
sub
xchg
into
mov
mov
sub
sti
cmp
(bad)
(bad)
mov
mov
cmp
mov
cmp
(bad)
es
repz
jmp
enter
(bad)
(bad)
(bad)
(bad)
cmp
clc
pop
and
mov
push
(bad)
dec
push
xor
add
sub
popa
test
outs
call
rcr
or
ror
cdq
test
push
dec
push
bound
mov
sbb
inc
lods
push
dec
icebp
out
sbb
xchg
push
jo
(bad)
(bad)
(bad)
(bad)
(bad)
aas
(bad)
clc
arpl
shl
data16
lea
ret
add
or
in
dec
add
pushf
(bad)
(bad)
(bad)
inc
out
lds
sub
add
nop
outs
(bad)
mov
adc
pop
dec
sti
add
mov
xchg
jecxz
(bad)
fst
lock
gs
mov
inc
pop
jge
jg
(bad)
jmp
fistp
aaa
sub
xchg
mov
shl
pushf
dec
xor
out
mov
aam
scas
mov
ror
mov
sbb
mov
out
aad
adc
in
(bad)
(bad)
(bad)
jmp
pop
pop
ds
jmp
jne
push
sub
dec
and
or
jmp
jno
mov
(bad)
(bad)
(bad)
js
cmp
pop
sbb
xchg
fwait
or
adc
lahf
push
test
(bad)
mov
rcl
rcl
shl
mov
xor
pop
xor
shl
cmp
movs
inc
or
or
cli
jb
in
or
dec
or
fucomi
call
dec
stc
pusha
out
pushf
inc
imul
(bad)
inc
sub
aam
mov
sar
add
add
loop
mov
push
ret
(bad)
dec
imul
push
inc
jmp
mov
nop
pop
dec
push
shl
push
int3
mov
adc
sub
push
push
xor
stos
neg
add
pop
inc
rol
(bad)
inc
mov
push
pop
(bad)
dec
add
lock
or
(bad)
jmp
adc
or
or
rcr
push
mov
(bad)
(bad)
jg
pop
sbb
and
out
mov
in
movs
add
push
sub
jg
lock
rcr
outs
test
cmc
repz
out
mov
sti
sub
xor
or
pcmpgtd
pop
jmp
(bad)
dec
stos
adc
inc
or
add
(bad)
mov
or
cmps
xor
test
(bad)
(bad)
call
fldcw
mov
aas
jmp
mov
ret
push
adc
mov
and
(bad)
(bad)
dec
sbb
and
mov
lods
jne
mov
adc
fiadd
(bad)
(bad)
(bad)
push
(bad)
fcmovnu
mov
pusha
pop
arpl
out
jnp
ret
pop
or
lods
enter
(bad)
(bad)
(bad)
mov
jno
mov
iret
push
xchg
xchg
xor
mov
lea
call
push
test
out
pop
repz
sbb
daa
sbb
test
inc
jp
inc
clc
lock
(bad)
mov
jg
ins
ins
out
retf
shr
jno
adc
dec
mov
(bad)
fucomip
xor
ror
cmps
cmp
mov
push
std
xlat
fistp
inc
test
(bad)
cmp
inc
mov
in
mov
inc
sar
aad
mov
push
pusha
(bad)
(bad)
(bad)
push
movs
inc
test
retf
jns
add
jne
or
pop
sti
stos
in
sub
push
jo
(bad)
(bad)
(bad)
js
add
dec
jnp
xchg
mov
xchg
out
pop
push
push
mov
out
mov
push
push
push
dec
(bad)
call
xor
adc
pop
jnp
or
cmp
jp
mov
(bad)
(bad)
(bad)
call
jbe
popf
imul
sub
push
or
inc
leave
xor
int
(bad)
(bad)
(bad)
(bad)
cmp
addr16
push
pop
xor
fistp
sbb
fcomp
mov
cmp
jae
cmp
jne
sbb
sub
push
shr
jb
dec
mov
call
pop
mov
test
cmp
(bad)
(bad)
(bad)
jmp
out
add
retf
sub
mul
popa
scas
mov
jmp
cli
call
mov
dec
je
xor
add
lods
int
push
retf
xchg
ret
and
cld
(bad)
jmp
push
sbb
push
mov
dec
mov
mov
or
adc
push
pop
cs
cld
(bad)
inc
inc
or
lea
nop
aas
mov
shl
pop
sbb
hlt
mov
(bad)
mov
dec
js
test
dec
aad
adc
(bad)
(bad)
call
xchg
out
in
inc
bound
jns
repnz
push
push
popa
call
push
pop
(bad)
(bad)
(bad)
call
mov
dec
mov
mov
mov
loop
cmp
imul
rcr
jg
cli
inc
fwait
outs
mov
pusha
sub
sbb
call
mov
add
movs
ja
inc
xor
sbb
adc
dec
add
fisub
outs
ins
pop
pushf
(bad)
(bad)
(bad)
jmp
aaa
mov
loopne
sub
sub
imul
repnz
sbb
dec
(bad)
(bad)
(bad)
fsubr
dec
xor
arpl
or
mov
cmp
out
cld
idiv
sbb
lock
cmp
add
clc
in
cmp
mov
mov
fucomi
mov
repnz
xchg
rcr
loop
inc
push
outs
out
test
(bad)
(bad)
(bad)
jg
in
cli
sbb
cli
push
repnz
sbb
hlt
push
adc
cmp
adc
dec
fadd
cmps
ss
ins
fistp
mov
mov
pop
mov
push
outs
loop
sti
fwait
test
lods
and
mov
gs
nop
out
(bad)
(bad)
(bad)
jmp
mov
dec
pushw
ins
mov
push
pushf
or
cwde
in
dec
cld
(bad)
(bad)
(bad)
dec
add
gs
xor
sub
retf
cmps
inc
cwde
push
imul
call
cmp
dec
(bad)
iret
xchg
add
mov
aam
jmp
jl
test
std
stos
call
pop
push
add
xor
je
jmp
and
(bad)
(bad)
dec
xchg
mov
sbb
pop
imul
into
pop
add
sub
dec
cmp
dec
xor
(bad)
jmp
push
(bad)
inc
ins
lahf
mov
sbb
std
dec
pop
dec
fnsave
pop
xchg
cs
adc
call
jp
out
icebp
daa
call
mov
jl
sbb
(bad)
pusha
adc
aad
push
into
popf
pop
loope
popf
pop
pushf
push
retf
fwait
and
(bad)
dec
lock
add
push
jbe
mov
xchg
inc
jne
add
(bad)
(bad)
call
jne
adc
lods
movs
out
adc
mov
jb
ss
mov
movs
cmp
std
xor
cwde
or
push
(bad)
xor
xchg
in
xor
add
push
rol
and
jne
dec
jmp
jg
add
push
or
or
ds
fld
nop
fisttp
data16
(bad)
(bad)
jmp
inc
leave
cdq
retf
bound
pusha
mov
mov
(bad)
push
test
loop
dec
cdq
loopne
jmp
(bad)
not
fldcw
imul
xchg
pop
mov
leave
scas
es
(bad)
nop
shr
xchg
fdiv
dec
(bad)
jg
inc
push
inc
push
in
rol
(bad)
or
inc
(bad)
je
fisttp
(bad)
(bad)
call
fcmovne
rcr
imul
pop
mov
imul
mov
xor
adc
shl
xchg
(bad)
(bad)
(bad)
dec
mov
icebp
xchg
sub
sub
mov
inc
gs
div
(bad)
(bad)
call
xchg
cmps
jl
inc
das
lds
lea
pop
arpl
(bad)
(bad)
(bad)
(bad)
scas
and
mov
pop
test
mov
pusha
mov
sbb
cmp
call
out
in
inc
mov
sahf
xchg
leave
popa
vpmulhw
add
leave
(bad)
call
mov
adc
pop
punpcklwd
push
jbe
retf
and
jle
xlat
cdq
and
adc
mov
ficom
jmp
dec
jmp
dec
sub
add
jecxz
test
mov
call
enter
call
xchg
mov
clc
(bad)
(bad)
mov
or
mov
jb
leave
or
pop
mov
(bad)
(bad)
jmp
or
sbb
or
lods
xchg
pop
and
xchg
loopne
(bad)
mov
(bad)
or
push
pusha
add
(bad)
inc
sub
cmp
lods
int3
cmp
dec
fisttp
inc
xchg
xor
push
push
bound
(bad)
mov
jle
retf
cmp
sbb
add
shr
retf
mov
sbb
push
xchg
jle
pop
inc
pop
imul
push
jno
pop
(bad)
adc
(bad)
in
(bad)
dec
xor
in
xor
in
test
pop
mov
cmps
retf
or
iret
pop
sub
dec
call
into
pop
xor
int
xchg
dec
xchg
push
fisub
(bad)
stos
push
pop
sbb
(bad)
dec
xor
mov
das
mov
mov
aaa
pop
and
fistp
mov
xor
ret
sub
fs
in
push
into
(bad)
push
inc
sbb
scas
pop
mov
das
cli
in
mov
push
scas
pop
in
mov
fwait
mov
scas
mov
sbb
jmp
cli
call
stos
push
into
fild
or
cmp
or
xchg
jl
lds
jns
mov
js
adc
add
push
repnz
xlat
pop
loop
dec
ret
or
bound
cmp
rcl
icebp
inc
jle
mov
mov
add
push
lea
in
xchg
mov
and
(bad)
(bad)
inc
mov
inc
push
pop
mov
push
mov
mov
cmp
xor
dec
sub
cmp
mov
fsub
xlat
(bad)
(bad)
(bad)
push
mov
(bad)
int
sbb
das
mov
cli
out
call
inc
jae
inc
mov
clc
dec
pushf
jmp
push
xor
pop
lea
int3
call
fistp
jne
test
mov
in
(bad)
push
retf
mov
jg
inc
adc
xchg
cmp
jbe
jecxz
xchg
imul
mov
icebp
cli
stc
scas
jmp
and
inc
ins
adc
fmul
cmp
mov
xchg
aad
pop
sub
jg
inc
pushf
xchg
pop
or
(bad)
(bad)
(bad)
(bad)
jg
or
and
loopne
div
lods
std
aas
fstp
jnp
jnp
cs
aad
je
(bad)
(bad)
(bad)
(bad)
cli
jne
jmp
std
xchg
pop
jge
adc
lea
mov
out
out
fisub
imul
(bad)
(bad)
push
xor
sub
and
jno
ret
shl
jbe
or
mov
sub
(bad)
(bad)
(bad)
dec
jne
cmc
mov
and
dec
and
popf
sbb
sbb
add
(bad)
(bad)
(bad)
(bad)
jge
cmp
cmps
mov
retf
neg
pop
jle
outs
fdivr
mov
je
idiv
(bad)
push
scas
mov
add
retf
int3
jle
add
jecxz
arpl
mov
js
(bad)
(bad)
call
scas
ins
jg
fstp
mov
pop
not
aad
cld
mov
inc
shl
add
call
cmp
std
fiadd
ja
repnz
stc
out
mov
pusha
sub
pop
push
adc
adc
sahf
push
add
(bad)
(bad)
(bad)
out
fisubr
push
rcr
sti
xor
push
outs
sbb
push
test
xchg
(bad)
(bad)
call
call
dec
iret
cmp
or
shl
push
jo
out
add
movs
bound
jmp
(bad)
call
out
mov
ret
into
es
cmp
or
jne
and
in
imul
(bad)
mov
jae
mov
std
mov
pop
(bad)
stos
sbb
xor
dec
xor
(bad)
fnstenv
movntq
fdiv
iret
(bad)
icebp
cld
nop
pop
adc
mov
jg
dec
(bad)
mov
sbb
jb
pusha
sahf
out
in
sbb
inc
inc
(bad)
(bad)
(bad)
mov
loop
jb
mov
mov
sbb
movs
movs
adc
rol
jmp
frstor
arpl
jbe
sub
sbb
sub
jmp
call
adc
cmp
loope
mov
fadd
ficomp
(bad)
out
mov
inc
sbb
jo
pop
fimul
sbb
(bad)
leave
adc
jmp
mov
and
jns
dec
mov
cwde
ins
int3
cmp
mov
inc
add
(bad)
(bad)
jmp
ror
out
jmp
add
mov
mov
inc
(bad)
(bad)
inc
ins
or
neg
(bad)
lds
push
inc
mov
shl
(bad)
(bad)
call
dec
push
pop
movs
push
ror
jmp
add
inc
jle
mov
in
and
adc
sbb
cwde
cmp
arpl
packssdw
pop
push
(bad)
(bad)
(bad)
inc
inc
(bad)
shl
icebp
nop
xchg
fwait
test
mov
test
sti
(bad)
xor
or
xor
cmp
std
(bad)
push
sub
clc
mov
dec
test
jnp
mov
adc
ret
mov
add
inc
inc
mov
mov
hlt
pop
inc
in
mov
dec
std
push
repnz
add
imul
dec
and
inc
lods
inc
push
xor
fadd
stc
cmp
stos
add
(bad)
(bad)
jg
adc
or
call
test
lea
call
adc
(bad)
(bad)
(bad)
(bad)
cmp
aas
sbb
retf
ss
mov
clc
les
dec
cmp
xchg
jo
inc
leave
sbb
(bad)
(bad)
(bad)
mov
mov
into
inc
inc
adc
sbb
into
ret
mov
pop
iret
adc
jp
add
mov
ror
inc
push
pop
mov
ja
push
adc
mov
(bad)
mov
mov
loope
jmp
mov
sbb
jp
cmp
rcl
pop
inc
(bad)
cmp
call
cmps
jae
and
outs
push
inc
rcr
lods
fs
xchg
ror
(bad)
jmp
xor
or
jecxz
xor
pop
mov
pop
push
and
(bad)
(bad)
jns
xor
cmp
adc
pusha
mov
fstp
xchg
sbb
jp
inc
daa
xchg
xchg
jno
jmp
shr
popa
push
inc
jne
xchg
cmp
pop
cli
inc
adc
adc
addr16
xchg
sub
out
mov
popa
pusha
dec
inc
les
stos
inc
push
push
mov
rcr
jmp
cli
call
je
and
push
mov
adc
mov
jl
(bad)
(bad)
(bad)
clc
jle
cmc
mov
and
cs
retf
out
sub
mov
cmp
ds
(bad)
inc
inc
cmc
jmp
jno
test
push
xor
ins
add
xchg
mov
je
repnz
std
inc
mov
sahf
or
adc
popf
cmc
push
push
pushf
inc
adc
aaa
inc
lods
clc
jmp
daa
mov
cs
inc
movs
frstor
iret
outs
scas
sti
mov
inc
loopne
mov
(bad)
jmp
xchg
div
cmp
(bad)
jp
add
mov
push
scas
pop
mov
outs
rcl
xor
xor
push
dec
popf
lea
shl
inc
push
xor
add
add
and
arpl
jp
jmp
(bad)
jmp
ins
jne
fwait
in
in
lock
jg
mov
jae
clc
(bad)
(bad)
inc
out
and
dec
xchg
mov
push
(bad)
sbb
add
lock
pop
cmp
xor
fdiv
adc
mov
jl
mov
xchg
push
inc
(bad)
(bad)
(bad)
push
cmp
stos
push
out
fst
xchg
sbb
cmp
leave
pop
add
pusha
scas
push
idiv
(bad)
(bad)
jmp
fdiv
pop
jo
(bad)
stos
imul
cmp
enter
jmp
mov
test
jl
mov
sti
add
inc
inc
mov
mov
ss
xchg
sbb
dec
add
sbb
(bad)
call
fisttp
bound
movs
cmp
push
scas
mov
cmp
mov
sti
rcr
push
fwait
(bad)
pop
ins
(bad)
les
std
jnp
adc
push
push
sub
(bad)
dec
jecxz
mov
(bad)
stc
push
lods
cs
push
adc
dec
js
pop
mov
(bad)
mov
inc
jge
inc
mov
mov
xor
cwde
push
pusha
jecxz
(bad)
call
popa
adc
pop
fnstcw
rol
xor
pop
mov
iret
xchg
(bad)
fstp
or
out
push
mov
sbb
in
pop
(bad)
(bad)
(bad)
jmp
or
add
cs
xchg
gs
sub
mov
xor
xor
xchg
test
mov
sbb
inc
stos
or
add
jp
cld
ja
(bad)
fistp
jae
sbb
pop
inc
push
cld
xor
sub
add
call
or
inc
ror
in
add
ins
retf
dec
push
xlat
(bad)
mov
out
dec
sbb
cwde
sti
mov
xor
push
sbb
je
into
dec
iret
sbb
(bad)
(bad)
(bad)
inc
mov
mov
fimul
into
pusha
mov
aas
push
mov
inc
retf
imul
(bad)
cmp
ret
jg
add
mov
int
or
sbb
pop
cmp
bnd
pop
or
fs
das
jge
(bad)
jmp
push
leave
fcomp
lods
push
jno
(bad)
jg
fcmove
mov
js
arpl
cmp
or
mov
outs
(bad)
cmp
add
in
les
dec
daa
add
loop
fadd
mov
(bad)
(bad)
(bad)
jg
call
jg
push
mov
cld
(bad)
fimul
jmp
retf
lahf
std
mov
(bad)
(bad)
(bad)
push
lea
xchg
xchg
sub
fistp
icebp
adc
call
(bad)
(bad)
call
mov
mov
mov
lock
imul
lods
xor
mov
stos
mov
mov
or
arpl
and
popa
xchg
pop
enter
jg
jg
pmaxub
adc
xlat
(bad)
pop
xchg
lods
test
dec
test
jge
pop
std
call
mov
aam
cmp
neg
push
in
jecxz
pop
mov
cmp
(bad)
(bad)
dec
adc
addr16
shl
add
sbb
xchg
dec
sbb
rcr
mov
(bad)
(bad)
(bad)
dec
pop
add
das
ins
mov
(bad)
mov
xor
push
test
aad
sub
sub
inc
inc
pusha
(bad)
in
lock
cmp
test
jmp
aaa
loope
fstp
mov
mov
add
or
and
cmp
or
mov
ss
xlat
xchg
sbb
mov
xchg
sub
dec
push
cld
add
daa
sub
sahf
movs
into
sbb
(bad)
lahf
add
add
pop
xchg
xor
inc
cmc
pop
xor
push
shl
out
pop
and
dec
dec
add
push
iret
xchg
mov
retf
leave
popa
sbb
ins
and
adc
mov
imul
dec
push
popa
adc
and
ud0
inc
add
inc
adc
(bad)
jnp
fsub
(bad)
push
or
push
sub
add
inc
aam
loopne
sub
pop
pop
fld
(bad)
(bad)
(bad)
call
inc
xlat
and
rol
pop
test
jne
dec
pop
push
cmps
mov
cwde
in
or
pop
(bad)
(bad)
(bad)
jmp
dec
cwde
pop
arpl
jle
mov
pushf
outs
into
cmp
int3
push
or
add
clc
mov
(bad)
call
or
dec
xlat
and
mov
cmc
mov
(bad)
add
mov
and
cwde
(bad)
(bad)
(bad)
call
push
test
fisubr
je
jg
or
push
mov
sub
(bad)
jmp
fwait
lea
xor
data16
cmp
dec
ins
push
mov
cmp
(bad)
(bad)
(bad)
push
js
pop
xor
ins
sub
push
and
mov
lods
push
out
movs
imul
adc
push
add
iret
and
sbb
daa
push
(bad)
loope
(bad)
(bad)
call
fmul
cmp
mov
push
movs
mov
fldenv
ret
or
add
sbb
jmp
xchg
(bad)
push
(bad)
sbb
(bad)
(bad)
(bad)
inc
shl
test
jb
cmp
sbb
jb
(bad)
(bad)
(bad)
dec
add
xor
inc
nop
add
cs
jno
shr
test
jmp
(bad)
dec
out
or
adc
lods
sub
(bad)
mov
pop
(bad)
ds
iret
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
in
dec
push
add
aas
and
test
jecxz
jecxz
(bad)
xchg
mov
push
das
bound
add
outs
nop
pop
xchg
(bad)
in
jg
aaa
adc
test
pop
fadd
lock
(bad)
fucomi
fdivr
(bad)
mov
daa
fidivr
pop
es
(bad)
std
(bad)
jmp
(bad)
or
es
pop
jns
(bad)
fstp
add
xlat
and
mov
(bad)
(bad)
(bad)
call
jmp
js
gs
dec
arpl
mov
(bad)
lods
pop
mov
and
(bad)
(bad)
call
mov
rol
mov
test
mov
adc
pop
xlat
nop
jl
cmc
or
xchg
(bad)
(bad)
call
and
pusha
push
int
(bad)
jecxz
add
mov
and
jmp
mov
ins
and
fld
ins
gs
stos
movs
aam
and
(bad)
(bad)
(bad)
inc
aas
sub
pusha
les
inc
dec
push
xor
inc
sbb
sbb
inc
into
(bad)
(bad)
jmp
call
and
mov
rcl
jbe
dec
adc
inc
xchg
call
cld
dec
das
fimul
pop
aam
mov
dec
rcl
rol
imul
cli
es
sahf
daa
fs
ds
test
out
ret
int
not
pop
fprem1
sub
sub
or
out
pop
lods
daa
sub
adc
mov
cld
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
call
xor
std
js
cld
add
je
int3
push
jmp
(bad)
(bad)
jmp
mov
int3
inc
inc
xchg
xchg
push
cdq
xchg
js
test
jae
sbb
jnp
pop
inc
xchg
sub
pop
sub
(bad)
(bad)
(bad)
(bad)
mov
popa
mov
ret
clc
or
sub
lods
cmp
dec
call
xchg
xchg
adc
and
leave
mov
or
push
mov
jp
jns
mov
sub
(bad)
call
xor
call
in
cmp
jecxz
push
mov
add
stc
mov
movs
pop
add
(bad)
(bad)
fisttp
push
sbb
retf
std
jo
popa
lds
push
push
push
mov
(bad)
(bad)
dec
enter
or
enter
dec
xor
mov
jg
fwait
add
cld
or
jmp
(bad)
dec
pop
aaa
fstp
mov
adc
fcos
(bad)
(bad)
call
xor
fincstp
cdq
repz
ret
cmp
cmp
and
out
ds
out
repz
mov
pop
(bad)
(bad)
(bad)
call
fdivr
iret
call
push
scas
repz
xchg
dec
test
mov
mov
fist
push
fwait
int
xchg
mov
adc
jp
pop
sbb
(bad)
(bad)
(bad)
fild
sar
stos
aad
(bad)
cwde
cmp
ret
bound
xor
(bad)
(bad)
(bad)
dec
add
inc
pop
pop
arpl
(bad)
lea
rol
lock
js
jb
pusha
xor
cmp
jmp
int3
xchg
in
jbe
and
je
shl
mov
adc
call
(bad)
out
clc
movs
data16
inc
imul
es
sub
scas
and
imul
sbb
dec
dec
sbb
push
ret
cmp
inc
add
and
(bad)
call
adc
cmps
loope
push
mov
fs
jbe
push
dec
clc
(bad)
fisttp
xchg
add
sbb
retf
loopne
inc
(bad)
adc
adc
jbe
(bad)
(bad)
(bad)
dec
lods
pop
ja
(bad)
stc
dec
inc
inc
inc
add
xchg
in
imul
push
xchg
data16
das
retf
(bad)
(bad)
(bad)
out
imul
loope
loopne
call
cmp
cdq
in
out
(bad)
mov
xchg
stos
icebp
jmp
cwde
sub
out
push
out
fistp
and
push
sbb
sub
dec
mov
push
sbb
fdiv
pop
xchg
push
cmp
(bad)
retf
mov
pop
(bad)
mov
adc
(bad)
(bad)
jmp
adc
mov
fucomip
shl
and
leave
test
adc
dec
nop
test
dec
cmp
(bad)
(bad)
jmp
xor
mov
and
mov
mov
sbb
sbb
jl
test
mov
fiadd
dec
pushf
mov
cmc
call
in
jne
cmc
or
scas
bound
inc
sbb
test
aaa
jmp
aad
(bad)
(bad)
call
test
leave
and
push
push
mov
sbb
dec
push
test
stc
jg
pop
stc
(bad)
(bad)
call
jg
bound
mov
dec
cmp
rcl
lods
dec
push
push
call
into
mov
mov
call
dec
and
ss
or
adc
mov
clc
and
nop
imul
mov
or
and
clc
std
inc
bound
in
ss
adc
inc
xchg
and
mov
ds
xor
(bad)
(bad)
dec
in
daa
(bad)
aad
xchg
mov
bound
mov
dec
push
inc
jl
jp
cmps
jmp
(bad)
out
mov
adc
and
aam
push
cmc
sub
adc
nop
(bad)
(bad)
(bad)
(bad)
in
loope
loope
add
cld
test
pop
or
test
push
push
out
pop
addr16
icebp
ins
outs
push
scas
inc
(bad)
or
jge
leave
scas
sub
dec
mov
pop
sub
imul
pop
out
mov
adc
jmp
clc
jg
(bad)
inc
fsub
idiv
jl
je
lahf
xor
fwait
mov
test
inc
mov
adc
inc
push
pop
mov
adc
sbb
mov
(bad)
(bad)
(bad)
fisubr
add
or
inc
scas
pop
jp
movs
jg
and
mov
(bad)
(bad)
in
call
inc
adc
and
stos
cmp
loopne
inc
les
jl
arpl
(bad)
(bad)
(bad)
(bad)
ja
mov
mov
imul
xchg
pop
xchg
leave
out
xor
out
(bad)
(bad)
(bad)
inc
fistp
les
push
sbb
sti
fwait
ja
mov
pop
fdivr
(bad)
(bad)
push
test
or
jp
gs
repz
xor
jbe
clc
imul
xchg
icebp
adc
out
popa
jge
and
sbb
adc
jmp
or
int
mov
(bad)
(bad)
(bad)
js
call
test
lods
add
(bad)
sti
cdq
mov
lea
xchg
scas
imul
(bad)
call
xchg
jl
cmp
cmp
or
rcl
popf
cwde
pop
cmp
mov
(bad)
push
pop
sbb
pushf
mov
dec
add
push
movs
jle
jno
adc
xlat
outs
mov
xor
fcom
xchg
mov
adc
(bad)
(bad)
(bad)
call
ins
(bad)
in
jp
dec
and
lods
repz
das
clc
add
sub
xor
lock
jmp
adc
or
jne
loope
out
int3
pop
mov
addr16
adc
shl
mov
(bad)
(bad)
cmp
dec
pop
or
ds
jne
push
ins
push
xor
mov
pop
sbb
or
(bad)
stos
jo
stc
cld
or
pop
mov
push
mov
es
enter
sar
xchg
rol
or
pop
sub
test
jo
push
(bad)
(bad)
(bad)
jg
sbb
pop
lea
gs
mov
jle
repnz
popf
(bad)
mov
call
push
jns
std
ins
dec
fisubr
xor
call
(bad)
mov
popf
sbb
mov
mov
ret
mov
dec
inc
sub
mov
xchg
mov
shl
mov
adc
(bad)
(bad)
(bad)
call
pushf
mov
fs
lds
fild
add
or
(bad)
(bad)
inc
in
sar
dec
and
add
or
lahf
inc
ret
out
xchg
cld
aas
pop
dec
and
out
and
(bad)
(bad)
jmp
add
jecxz
out
std
retf
xor
es
scas
iret
lea
sub
retf
ret
push
fcomip
push
mov
ret
xor
stos
cdq
sbb
xor
and
fmul
jp
scas
in
xchg
xor
xor
cli
in
ficom
ins
popa
pop
out
push
xchg
ss
and
push
(bad)
(bad)
(bad)
mov
add
loopne
jb
outs
mov
shl
adc
out
xchg
and
cmp
(bad)
(bad)
(bad)
dec
xchg
jmp
in
out
mov
outs
ffree
imul
ins
cmp
push
(bad)
(bad)
(bad)
jmp
mov
push
shl
dec
jecxz
shl
cmps
dec
mov
sbb
iret
(bad)
(bad)
(bad)
call
addr16
ret
sub
cmp
sub
push
ret
lock
(bad)
push
loopne
push
dec
cmp
xchg
pop
(bad)
jb
push
fs
sub
imul
(bad)
call
push
cmps
inc
xor
push
addr16
adc
jno
aaa
pop
pop
loope
jbe
cmps
pop
not
xor
jmp
(bad)
push
fbld
repnz
aaa
mov
in
je
jmp
jno
sub
mov
movs
pop
pop
push
aam
jmp
or
sub
adc
dec
push
pop
dec
sbb
or
ins
or
add
ret
test
add
push
(bad)
(bad)
push
cdq
leave
dec
inc
test
outs
mov
jl
aam
test
and
mov
push
mov
sti
xor
scas
inc
aaa
pop
inc
inc
and
pop
je
call
gs
mov
(bad)
(bad)
(bad)
jmp
repnz
mov
dec
int
and
xor
mov
into
cdq
cmp
xor
inc
pop
pop
mov
xchg
mov
dec
inc
and
sub
dec
and
push
and
push
adc
jmp
scas
fnstsw
inc
jnp
sbb
jne
bound
pop
xor
mov
retf
(bad)
(bad)
(bad)
(bad)
inc
test
arpl
add
fwait
lahf
dec
loope
dec
aaa
push
scas
pop
and
xchg
out
sbb
mov
(bad)
(bad)
(bad)
call
loope
sbb
test
sbb
push
mov
mov
adc
xchg
xchg
xchg
shl
jns
(bad)
(bad)
inc
push
mov
jmp
pop
mov
test
addr16
out
xchg
sub
dec
jp
(bad)
(bad)
(bad)
dec
adc
xchg
inc
stos
lods
dec
repnz
jns
push
(bad)
cmp
data16
test
sub
call
lahf
nop
int
in
fsub
bnd
loop
jmp
sbb
ins
fadd
repz
add
ja
repz
and
pop
fidivr
or
mov
cmps
inc
ins
iret
inc
mov
cmp
(bad)
(bad)
(bad)
in
fs
xor
fistp
xchg
je
leave
push
addr16
js
inc
fisub
mov
clc
(bad)
(bad)
inc
stos
leave
mov
dec
cmp
mov
jge
mov
mov
popf
(bad)
fxch
mov
(bad)
(bad)
jmp
(bad)
jnp
cmp
aas
jo
xchg
imul
test
cmp
ror
mov
lds
(bad)
(bad)
(bad)
jmp
sub
adc
and
cwde
cmp
adc
pop
dec
pop
stc
fcomp
cmp
div
(bad)
(bad)
(bad)
call
retf
jno
repz
jp
sub
gs
cmp
imul
(bad)
(bad)
dec
test
aaa
repz
int3
pop
pop
pop
jge
mov
push
addr16
ja
push
aad
fs
iret
mov
xchg
xchg
xlat
ins
dec
jns
rcr
arpl
fmul
add
push
(bad)
std
outs
ror
mov
push
lds
push
pop
sti
les
or
int
cli
test
(bad)
inc
push
adc
jecxz
mov
stos
fadd
stos
retf
in
(bad)
(bad)
(bad)
call
xchg
cmp
mov
cmc
and
adc
ins
(bad)
(bad)
arpl
(bad)
(bad)
(bad)
dec
mov
or
outs
mov
sbb
(bad)
outs
fisub
(bad)
es
iret
out
dec
xor
(bad)
dec
add
push
rol
pusha
into
mov
aas
dec
push
idiv
pop
rcr
(bad)
(bad)
inc
and
pusha
mov
mov
adc
xor
xor
(bad)
call
or
fwait
fwait
sbb
adc
pop
arpl
arpl
(bad)
(bad)
(bad)
(bad)
aad
adc
mov
mov
ja
fsubp
fisub
idiv
(bad)
dec
ret
xchg
mov
xor
push
inc
repnz
pop
mov
clc
cmp
mov
(bad)
(bad)
push
ds
adc
mov
mov
std
pop
popa
aad
push
pop
xchg
aad
test
(bad)
(bad)
(bad)
jmp
dec
leave
clc
arpl
inc
iret
mov
mov
lods
pusha
cmp
call
fmul
inc
push
adc
(bad)
(bad)
(bad)
push
xor
stc
sub
fsubr
jno
rol
loopne
jp
mov
(bad)
push
fwait
or
inc
cmp
retf
sbb
xchg
xchg
data16
std
lea
(bad)
inc
int3
mov
pop
repnz
inc
jae
ficomp
or
in
jb
aad
jo
pop
inc
and
lock
lea
add
push
push
xor
jecxz
in
leave
jnp
inc
shr
inc
scas
lahf
lock
inc
stc
lock
(bad)
(bad)
(bad)
jmp
mul
mov
bound
loopne
cmps
movs
mov
cmp
sar
pop
(bad)
(bad)
(bad)
(bad)
push
dec
(bad)
in
sar
addr16
or
pop
pop
test
xchg
(bad)
cmc
ds
mov
inc
test
(bad)
(bad)
(bad)
fisttp
jl
popf
es
int
movs
ja
ss
rcl
(bad)
bound
jno
repz
or
daa
(bad)
or
cmps
imul
mov
sbb
xchg
(bad)
(bad)
(bad)
dec
sahf
pop
xchg
push
in
inc
dec
test
stc
aaa
call
jp
retf
mov
sti
(bad)
in
(bad)
(bad)
call
push
test
push
and
add
inc
xchg
inc
xor
cmps
xchg
cli
dec
popf
(bad)
(bad)
(bad)
dec
or
inc
(bad)
fmul
retf
cmp
in
pop
(bad)
bnd
mov
test
mov
nop
xchg
xchg
popf
mov
(bad)
cmp
lods
push
loop
xchg
and
xchg
movs
mov
xchg
push
es
mov
or
ds
push
js
cmp
aaa
cld
(bad)
push
xchg
aam
xchg
popa
sbb
cmp
iret
xchg
pop
enter
test
mov
(bad)
(bad)
(bad)
cld
fist
imul
jo
mov
loop
ret
mov
gs
inc
pop
fnstsw
push
(bad)
(bad)
(bad)
call
test
repnz
ror
cld
inc
jnp
mov
(bad)
in
xchg
scas
lock
mov
shr
sub
adc
ret
outs
repnz
lahf
call
mov
es
gs
sub
and
adc
test
(bad)
dec
push
push
push
sub
jmp
mov
loop
in
shl
mov
cli
cmp
adc
(bad)
and
pop
and
icebp
(bad)
(bad)
call
in
rol
cld
imul
aas
out
pop
mov
inc
lock
ds
out
out
mov
shl
or
(bad)
jg
pop
ds
bound
in
or
int3
dec
mov
gs
cmps
imul
(bad)
std
(bad)
jge
mov
mov
mov
jmp
xchg
mov
push
ins
cmp
mov
or
sbb
(bad)
(bad)
(bad)
push
shl
jle
stos
call
add
out
and
pop
xlat
jne
inc
and
(bad)
(bad)
call
xlat
xchg
push
jmp
bound
sar
mov
repnz
sbb
mov
(bad)
dec
sbb
push
fidivr
dec
cmps
frstpm(287
shr
imul
(bad)
push
dec
mov
mov
aas
cmp
mov
lds
mov
jbe
outs
push
inc
int
(bad)
(bad)
mov
mov
jle
fbstp
xchg
xchg
inc
fsubp
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
iret
(bad)
sbb
dec
and
ret
leave
pop
xor
into
mov
and
mov
(bad)
(bad)
(bad)
push
(bad)
pop
dec
mul
addr16
inc
ficom
lahf
movs
mov
repnz
jecxz
cwde
and
das
clc
movs
cmp
fiadd
xor
sub
add
in
mov
clc
addr16
movs
das
inc
jae
jge
lahf
cmp
push
fwait
jmp
aas
jns
mov
inc
cwde
(bad)
(bad)
(bad)
jmp
sbb
adc
and
jne
loop
sub
pop
or
rol
adc
mov
fld
add
dec
movs
push
(bad)
mov
inc
jg
(bad)
(bad)
mov
sub
fcomp
not
repnz
dec
aam
scas
sub
(bad)
jns
(bad)
ins
dec
jns
xchg
dec
adc
sbb
push
dec
rol
push
(bad)
(bad)
(bad)
inc
or
and
dec
mov
mov
xor
sar
or
fisub
js
push
cld
(bad)
call
aam
inc
adc
ret
not
push
and
hlt
add
retf
xchg
(bad)
(bad)
fdivr
sbb
pop
inc
mov
sub
call
(bad)
(bad)
push
or
or
mov
inc
outs
jmp
add
adc
fndisi(8087
(bad)
stc
cld
lahf
clc
add
nop
adc
xor
mov
sbb
rol
ror
in
and
in
adc
ins
and
add
inc
mov
inc
pop
sub
(bad)
(bad)
(bad)
mov
(bad)
scas
adc
shl
movs
cs
(bad)
call
jp
(bad)
sbb
inc
sbb
call
je
pop
pusha
adc
(bad)
cmc
(bad)
fcomip
or
fnsave
stc
push
fisub
imul
(bad)
call
fsubp
cmc
stos
lods
outs
in
xor
xchg
sub
fist
cwde
or
lea
and
(bad)
inc
(bad)
cwde
shr
inc
call
dec
scas
inc
or
push
jmp
outs
push
sbb
fsubr
mov
and
dec
bound
cmps
jne
pop
mov
(bad)
(bad)
call
pop
movs
ja
sbb
jecxz
jecxz
loope
aam
xor
sti
cli
or
push
dec
jmp
retf
data16
mov
inc
jno
and
hlt
in
and
(bad)
(bad)
jmp
cmp
rol
sbb
out
sahf
mov
or
pop
pop
movs
pop
inc
sbb
xchg
loope
sar
inc
push
xchg
dec
mov
stc
mov
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
out
cld
fidivr
in
jp
popf
add
cmp
(bad)
xlat
inc
into
dec
dec
test
ss
icebp
jg
(bad)
(bad)
inc
cwde
pop
xchg
jp
aas
mov
mov
out
pop
sbb
test
add
adc
cdq
iret
in
fbld
sti
mov
repnz
test
fs
push
js
out
int
neg
lods
jb
retf
ins
add
or
(bad)
(bad)
call
or
pop
imul
xor
cdq
and
xbegin
mov
(bad)
(bad)
dec
sub
cmp
outs
int
lds
cmp
ret
ds
mov
xchg
out
fcomip
call
add
add
sub
jp
add
les
xor
loope
dec
pusha
lds
loop
fcomip
js
dec
icebp
dec
pop
sahf
mov
ret
loope
cmp
test
push
outs
cli
(bad)
dec
push
adc
pop
or
xchg
and
sahf
jle
pop
cmp
push
sbb
sbb
xor
pop
enter
xchg
add
(bad)
(bad)
(bad)
call
je
add
fcomp
cs
inc
jno
ret
mov
mov
mov
bound
xor
jl
fdivr
dec
call
fwait
adc
fcmovne
mov
fdivr
mov
test
das
(bad)
(bad)
(bad)
jmp
retf
jbe
push
jne
push
pop
sub
or
shl
sub
in
sbb
adc
pop
dec
xchg
adc
hlt
pop
mov
add
push
(bad)
(bad)
(bad)
dec
test
sub
mov
sub
dec
pop
and
mov
(bad)
push
out
bound
cdq
cld
aam
push
outs
call
imul
cmps
ds
xor
ss
sbb
or
outs
xchg
add
or
or
cmp
push
not
cld
(bad)
call
jmp
adc
mov
ja
call
repnz
bound
and
push
(bad)
fnstsw
mov
fistp
(bad)
and
push
ins
fadd
(bad)
dec
ret
xchg
mov
(bad)
mov
jnp
sti
mov
mov
call
add
xor
sub
sbb
rcl
lahf
cld
aas
cli
(bad)
jmp
sub
das
test
in
lods
pop
retf
jb
fistp
test
aaa
pop
call
lahf
add
retf
push
jmp
sub
loop
mov
int3
sbb
test
call
ret
add
or
mov
jmp
cmp
jg
cmps
xchg
iret
es
xor
mov
push
pusha
sub
pop
xor
dec
aad
(bad)
(bad)
fisttp
imul
push
lods
pop
pop
adc
or
xlat
push
js
push
fsub
add
jmp
loope
sahf
fadd
mov
fidiv
sbb
popa
aas
dec
aam
cmp
mov
xchg
jo
(bad)
jmp
sbb
imul
mov
js
fistp
sbb
into
jbe
mov
iret
inc
push
cmp
jmp
cli
std
mov
call
inc
pop
inc
pop
xlat
(bad)
push
xor
outs
dec
mov
or
cmp
pop
mov
ds
xor
stos
add
jbe
sub
jmp
dec
and
fs
loope
push
cli
repnz
sbb
ds
idiv
jb
(bad)
mov
cmp
sbb
repz
dec
hlt
mov
(bad)
(bad)
(bad)
call
mov
xchg
push
and
dec
add
iret
lds
retf
cmp
sub
(bad)
(bad)
inc
xchg
test
test
in
int3
mov
test
and
xor
clc
(bad)
(bad)
fsub
cmp
mov
cmps
mov
mov
ud1
call
cli
mov
dec
add
fs
in
pop
pusha
or
fsub
push
loopne
paddw
rcl
sar
push
dec
popa
cmps
cmps
mov
imul
cld
sbb
movs
leave
pusha
in
(bad)
(bad)
(bad)
cmp
sbb
or
in
mov
add
push
sub
div
mov
(bad)
(bad)
jmp
not
xchg
in
rol
test
push
neg
call
clc
mov
in
cmp
and
cmp
dec
aad
add
(bad)
(bad)
(bad)
(bad)
js
mov
popf
fidivr
mov
mov
mov
data16
cwde
bound
sub
(bad)
jg
inc
mov
and
cmp
and
ds
(bad)
(bad)
aaa
(bad)
(bad)
(bad)
dec
aas
push
outs
inc
scas
sbb
sbb
(bad)
mov
add
inc
xor
(bad)
push
(bad)
repz
popf
jl
mov
xor
inc
rol
ror
stos
mov
jmp
(bad)
movs
jge
cmp
mov
inc
sti
xor
mov
cmp
mov
inc
mov
xchg
mov
daa
lds
dec
sub
jmp
xor
xchg
dec
iret
inc
cmp
cmp
dec
adc
pop
pop
clc
call
or
clc
mov
add
arpl
aas
ret
popf
xor
pop
or
add
mov
add
and
push
jns
add
leave
retf
dec
(bad)
(bad)
(bad)
mov
lods
xchg
shr
jmp
push
mov
ins
aam
mov
dec
pop
pop
jecxz
and
popa
(bad)
(bad)
(bad)
jmp
mov
adc
rol
sbb
sub
sub
mov
dec
ror
or
test
(bad)
jmp
sbb
pop
cwde
xor
int3
int3
mov
scas
out
jnp
xchg
(bad)
(bad)
(bad)
(bad)
out
in
adc
or
aam
jno
jl
inc
ins
out
pop
iret
add
add
popf
cmc
jne
(bad)
(bad)
(bad)
call
mov
jl
cmp
inc
jmp
xchg
add
dec
pop
leave
(bad)
es
gs
(bad)
(bad)
(bad)
call
add
xchg
sahf
addr16
dec
and
add
mov
and
dec
les
jno
sti
add
(bad)
(bad)
(bad)
jmp
pop
xchg
icebp
je
cmp
add
xor
push
ret
popf
add
sub
jbe
lock
(bad)
(bad)
dec
mov
lock
sti
nop
mov
push
pop
mov
xor
mov
fs
(bad)
(bad)
call
mov
mov
xchg
push
ss
inc
and
faddp
ret
inc
(bad)
(bad)
(bad)
jmp
jbe
ja
mov
call
push
cmps
sbb
sub
ss
fdiv
(bad)
(bad)
(bad)
inc
pxor
test
fwait
sbb
rcr
sbb
and
inc
mov
(bad)
(bad)
(bad)
in
mov
ds
jge
xchg
(bad)
fnstsw
jmp
loope
xchg
(bad)
inc
loope
inc
pop
fwait
xor
ret
adc
lgs
mov
dec
loope
shl
(bad)
call
and
pusha
mov
cmps
aad
or
stos
lock
sub
mov
and
js
ja
(bad)
(bad)
call
data16
pop
adc
dec
xchg
ret
(bad)
movs
sbb
mov
cwde
jg
push
or
test
cmps
xchg
(bad)
(bad)
(bad)
mov
jl
inc
scas
pop
(bad)
out
xor
add
sub
(bad)
call
fstp
jmp
or
sub
ret
and
pop
cmp
mov
(bad)
jg
call
in
jne
aad
fistp
push
pop
pop
adc
xchg
test
mov
push
dec
(bad)
(bad)
(bad)
(bad)
stc
xchg
aam
sub
inc
mov
jns
outs
mov
pop
push
and
popf
dec
arpl
retf
movs
mov
lea
(bad)
(bad)
push
dec
mov
lods
hlt
cld
stos
pop
fldenv
pusha
jnp
sub
pop
fisttp
mov
sahf
cli
cmc
ins
or
or
rol
mov
ins
int
(bad)
(bad)
jmp
cmp
mov
mov
stos
mov
in
jp
xor
mov
jp
lea
sub
and
div
mov
in
rcl
dec
adc
sub
mov
cld
add
out
shl
dec
(bad)
(bad)
(bad)
inc
inc
pop
xor
mov
loopne
pop
rcr
dec
pop
lds
bound
movs
mov
inc
inc
(bad)
(bad)
(bad)
mov
or
mov
add
dec
xchg
push
cmp
dec
or
jae
mov
(bad)
(bad)
js
xor
fistp
fmul
fbstp
mov
or
test
xchg
inc
(bad)
(bad)
(bad)
jmp
fwait
ret
lea
mov
jmp
ret
inc
xor
ins
xchg
xchg
mov
(bad)
(bad)
(bad)
(bad)
jnp
repnz
mov
sub
ffree
push
ins
std
sub
nop
mov
mov
fcom
aas
add
(bad)
(bad)
dec
outs
jo
push
aam
mov
inc
and
bound
div
cmp
bound
(bad)
(bad)
jmp
into
add
cmp
mov
dec
movs
xchg
push
out
das
(bad)
xchg
loope
lock
jmp
cmps
sub
jne
add
ret
pop
mov
aas
das
scas
xchg
ins
lock
jno
(bad)
(bad)
push
push
xor
imul
push
push
mov
and
and
(bad)
push
fimul
loope
push
pop
mov
out
ja
xor
(bad)
ds
xor
imul
sub
loope
call
scas
or
add
(bad)
(bad)
(bad)
jmp
mov
cmp
mov
pop
sbb
loop
mov
mov
fcom
inc
push
add
dec
call
stc
and
(bad)
(bad)
(bad)
inc
leave
nop
and
in
xchg
or
into
jns
sbb
adc
add
call
repz
retf
(bad)
sbb
pop
fld
mov
loopne
call
or
xor
pusha
test
in
or
std
ja
pop
xor
mov
sub
mov
or
call
shl
cli
neg
(bad)
(bad)
dec
repnz
mov
adc
and
xchg
int3
jg
jbe
mov
(bad)
(bad)
(bad)
call
ficom
sahf
sub
push
fcmovnb
sub
mov
jecxz
xchg
jnp
mov
jns
mov
(bad)
(bad)
(bad)
inc
mov
cmp
jecxz
cmps
data16
(bad)
sbb
mov
pop
cmp
xchg
das
and
xchg
test
dec
mov
fwait
retf
stos
push
mov
(bad)
sti
push
lahf
xchg
xchg
sar
nop
pop
mov
jp
and
repz
iret
and
mov
ja
push
clc
(bad)
dec
adc
in
cwde
sbb
xchg
cmps
cld
or
(bad)
cli
clc
and
dec
jo
mov
dec
add
mov
adc
mov
xchg
pop
or
call
xor
add
js
mov
inc
dec
nop
les
adc
js
mov
(bad)
jmp
push
mov
loope
ret
pop
aam
add
dec
cmp
add
mov
out
fwait
mov
lock
(bad)
call
ins
xor
fstp
dec
fistp
jns
jp
imul
(bad)
mov
scas
pop
jmp
fdiv
push
mov
(bad)
(bad)
(bad)
(bad)
cmp
loopne
arpl
(bad)
mov
pusha
dec
cmp
ss
(bad)
xchg
(bad)
(bad)
(bad)
dec
mov
aaa
cmp
lods
sub
jb
xor
xchg
push
ins
(bad)
(bad)
(bad)
push
in
sub
or
dec
dec
aad
dec
xchg
test
adc
mov
ret
stos
(bad)
(bad)
(bad)
jmp
push
mov
mov
push
ds
jg
inc
pand
sub
leave
xchg
int3
inc
mul
(bad)
(bad)
(bad)
inc
add
push
loopne
or
cmp
sub
fidiv
cdq
loope
mov
(bad)
call
push
icebp
rol
sbb
mov
sub
pop
test
mov
shl
or
stc
dec
mov
outs
cmps
les
(bad)
push
push
in
jle
jge
xchg
sub
add
mov
adc
mov
shl
(bad)
(bad)
(bad)
jmp
es
jo
and
add
mov
cld
jb
fwait
rcr
or
fnsave
mov
and
add
loop
adc
dec
minps
pop
add
jle
(bad)
jmp
clc
inc
pop
xlat
jbe
jnp
pop
shl
mov
out
pusha
aad
dec
(bad)
(bad)
jg
xchg
icebp
psubusb
(bad)
stos
scas
(bad)
cld
test
mov
jns
ds
xlat
sbb
(bad)
jmp
jmp
in
push
enter
jb
std
xor
scas
cmp
jns
mov
(bad)
(bad)
inc
(bad)
cld
inc
rol
test
ins
jmp
fdivrp
sub
ficomp
push
js
popa
mov
(bad)
(bad)
(bad)
(bad)
in
xchg
push
and
out
xor
push
adc
sub
adc
fldcw
aas
into
(bad)
(bad)
dec
fpatan
push
cmp
in
stc
pop
pop
jb
pop
lds
sar
jmp
push
cld
sar
mov
sub
push
add
pushaw
or
jge
fcmovb
ret
f2xm1
stos
mov
stos
xchg
cmp
jge
fcomp
mov
mov
fcomp
outs
hlt
div
push
adc
inc
mov
xchg
fisttp
adc
and
ret
pop
popa
jbe
or
and
push
mov
mov
bound
sub
or
jae
adc
inc
inc
mov
adc
add
mov
or
outs
adc
mov
(bad)
inc
inc
add
mov
int3
(bad)
loop
adc
xchg
adc
(bad)
xor
ret
adc
clc
addr16
(bad)
call
test
add
pop
(bad)
cmp
das
loop
lods
fnsave
(bad)
pop
mov
outs
xlat
repz
(bad)
push
shl
jle
fwait
jnp
jmp
out
out
iret
mov
or
loopne
adc
(bad)
cmp
gs
loop
shl
(bad)
cmp
mov
mov
ins
gs
sub
mov
call
xor
xchg
cwd
popf
popf
xchg
addr16
adc
mov
cmps
imul
adc
(bad)
(bad)
(bad)
push
loop
dec
fwait
mov
gs
outs
mov
fnstcw
lods
sbb
js
xchg
sti
cli
xchg
sbb
(bad)
(bad)
(bad)
dec
imul
pop
fldcw
cmp
adc
xchg
or
mov
inc
test
(bad)
(bad)
(bad)
inc
ret
cmp
ror
xchg
cmp
imul
imul
mov
push
sti
ja
popa
(bad)
(bad)
(bad)
jmp
inc
inc
inc
popf
popa
inc
xlat
sbb
jg
push
nop
add
jecxz
pushf
cli
clc
xor
mov
(bad)
(bad)
push
cmc
je
jo
stos
stos
adc
cs
pushf
je
ds
test
pop
mov
sbb
(bad)
(bad)
(bad)
dec
loop
out
out
ss
call
or
cmp
jns
in
push
jbe
adc
(bad)
(bad)
(bad)
dec
or
mov
inc
loopne
enter
sub
pop
les
fdivrp
and
sub
jne
retf
xor
adc
mov
sbb
sbb
aas
inc
mov
fisttp
ss
cmp
jo
hlt
cmp
(bad)
outs
stos
inc
add
lock
xor
cmp
(bad)
(bad)
(bad)
dec
pop
mov
jae
test
and
sahf
jle
pop
mov
jmp
inc
js
mov
outs
xchg
xchg
push
lea
hlt
pushw
fwait
mov
and
pop
mov
leave
xor
movs
js
idiv
pop
lock
div
inc
fisubr
inc
mov
jmp
mov
ja
(bad)
call
mov
and
test
adc
cmp
(bad)
(bad)
call
ficom
jmp
mov
aaa
movs
imul
cmp
clc
pop
cs
mov
mov
push
pop
mov
(bad)
cmp
cmp
fs
push
and
mov
(bad)
(bad)
(bad)
mov
dec
and
xchg
(bad)
enter
jle
sub
mov
add
outs
fs
add
iret
(bad)
(bad)
(bad)
jmp
or
fwait
int3
imul
out
mov
sub
mov
loope
mov
adc
(bad)
(bad)
(bad)
inc
jl
(bad)
(bad)
push
or
or
data16
sub
fs
popw
push
adc
mov
(bad)
(bad)
inc
std
xchg
jo
fisubr
xchg
mov
dec
pusha
mov
ret
ret
repnz
inc
in
test
test
jg
aas
mov
in
sbb
sbb
dec
xchg
adc
(bad)
(bad)
(bad)
jmp
or
cmp
xchg
pop
out
movs
jb
jne
hlt
aaa
or
or
enter
in
ret
xor
fcomip
(bad)
push
into
test
or
icebp
push
pushf
std
fidivr
(bad)
mov
cmp
retf
fild
nop
iret
pop
loopne
imul
sar
enter
inc
push
mov
es
outs
lea
popf
dec
mov
inc
or
sub
aam
movs
add
call
(bad)
(bad)
push
arpl
popa
popa
into
data16
push
sbb
call
mov
pop
(bad)
(bad)
(bad)
call
xor
pushf
adc
cmp
cmps
sub
push
push
addr16
lea
mov
pop
inc
push
cld
(bad)
mov
inc
loope
(bad)
sub
bound
test
(bad)
dec
loop
inc
pop
jge
fsubrp
fisub
xchg
mov
ret
pop
test
mov
add
add
std
dec
push
scas
fnstcw
(bad)
inc
jbe
lea
je
sbb
mov
fidiv
sub
mov
sub
imul
dec
ins
jb
jmp
and
add
push
dec
or
aas
pop
shl
mov
mov
cmp
jns
and
push
aam
mov
cmp
outs
jns
jge
repz
or
xor
movs
xchg
and
pop
ret
add
popf
inc
jp
push
sti
inc
test
dec
mov
cld
sub
in
lds
pop
lods
ret
dec
pop
or
call
mov
dec
es
(bad)
(bad)
call
sub
jecxz
mov
dec
int
and
rol
fucomp
jmp
(bad)
call
xor
dec
pop
sub
dec
and
jo
retf
mul
and
(bad)
(bad)
push
lea
js
loope
enter
in
into
and
or
imul
jl
(bad)
(bad)
push
sahf
push
inc
fdivr
inc
int
mov
lds
jns
in
sbb
js
sbb
add
mov
xchg
shr
loope
push
jmp
push
mov
jnp
and
cmp
mov
lods
mov
inc
mov
(bad)
(bad)
(bad)
fldcw
mov
(bad)
into
jb
stos
aad
sub
(bad)
daa
mov
mov
and
xchg
inc
pop
dec
add
loopne
(bad)
jmp
shl
mov
lods
cmp
push
in
cmp
popa
jo
adc
(bad)
(bad)
mov
(bad)
loope
aam
jge
data16
add
or
ror
pushf
xchg
lods
push
cli
popa
sub
(bad)
push
nop
xchg
jmp
loop
jo
cmps
(bad)
(bad)
leave
dec
sub
mov
fiadd
(bad)
jg
mov
fsub
ds
(bad)
icebp
jnp
std
pop
call
scas
(bad)
(bad)
(bad)
(bad)
mov
mov
jmp
int
outs
push
pop
cmc
sbb
jmp
imul
(bad)
(bad)
jmp
int
out
sbb
iret
rcr
fcmove
fs
mov
adc
lds
jno
mov
inc
and
mov
sub
int3
lock
pop
mov
jmp
mov
adc
pusha
fwait
jg
sub
xor
mov
push
jl
rcl
and
shr
sub
inc
push
sub
les
retf
pop
push
call
jmp
pop
pop
adc
call
mov
cdq
cdq
aam
mov
or
(bad)
pop
pop
fild
cmp
stos
gs
lahf
adc
mov
pushf
or
add
ficom
inc
mov
push
fsub
adc
pusha
sub
cmp
cmc
daa
(bad)
(bad)
mov
adc
inc
add
cwde
lds
aam
mov
not
mov
sar
adc
(bad)
aas
push
inc
pushf
xor
loop
ds
rcl
(bad)
pop
mov
ficom
(bad)
dec
movs
xchg
jmp
push
xchg
imul
pop
mov
outs
sub
ja
(bad)
(bad)
push
pop
(bad)
cmp
loop
and
stc
pop
mov
js
add
je
mov
(bad)
jmp
ficom
inc
push
inc
pop
mov
dec
mov
retf
imul
(bad)
jg
call
mov
test
sub
mov
cli
push
cs
mov
(bad)
inc
mov
jbe
ret
mov
inc
and
xchg
loope
test
scas
(bad)
cli
mov
(bad)
(bad)
jns
sub
leave
mov
repz
out
std
icebp
popa
fs
loopne
xor
popa
rcr
push
inc
cld
(bad)
(bad)
(bad)
(bad)
jp
sbb
cmp
cmp
out
rcl
xor
ficomp
repnz
sbb
js
mov
(bad)
(bad)
(bad)
cmp
aad
mov
xchg
xchg
dec
retf
retf
imul
arpl
xor
(bad)
(bad)
cmp
test
leave
cmp
and
and
xchg
inc
cld
pop
iret
outs
sbb
jge
ficomp
mov
lds
xchg
ss
(bad)
(bad)
jmp
push
movs
pop
dec
(bad)
add
sbb
mov
add
mov
test
adc
sub
(bad)
(bad)
jg
repnz
sbb
sub
add
sub
dec
sbb
add
mov
mov
(bad)
(bad)
inc
fldcw
aaa
stos
lods
inc
inc
and
rcl
(bad)
imul
outs
(bad)
(bad)
(bad)
push
adc
jnp
mov
xchg
mov
fisttp
mov
mov
in
adc
(bad)
(bad)
jmp
in
pusha
xor
stc
add
mov
test
pop
mov
jnp
daa
xchg
(bad)
call
loop
icebp
push
ret
das
fdiv
mov
(bad)
(bad)
(bad)
jg
scas
stos
inc
popa
shl
jecxz
mov
stc
in
sbb
test
call
aas
pop
(bad)
(bad)
(bad)
dec
jne
jecxz
cmp
pop
cmps
push
cdq
cmps
add
dec
iret
mov
stos
jecxz
push
jle
(bad)
(bad)
jmp
fidivr
sbb
sbb
push
dec
mov
enter
sub
and
mov
push
stos
js
aam
call
ret
or
inc
push
ret
(bad)
(bad)
(bad)
cli
inc
push
ss
ret
mov
inc
mov
pop
pusha
repz
pop
inc
clc
(bad)
jg
push
and
enter
inc
cwde
xor
jbe
adc
pusha
or
(bad)
mov
aas
ret
ja
xchg
add
mov
nop
(bad)
fucom
sti
repnz
push
jmp
or
in
(bad)
or
ins
clc
outs
pop
xchg
push
push
fdiv
test
pop
push
std
pop
loopne
mov
aaa
add
mov
ins
shr
sbb
dec
rcl
mov
(bad)
(bad)
(bad)
(bad)
call
daa
ja
jmp
add
push
fsub
arpl
stc
lods
and
jmp
scas
(bad)
(bad)
(bad)
jmp
icebp
in
mov
retf
fisub
jnp
call
frndint
out
sbb
stc
inc
cli
call
(bad)
ins
data16
imul
enter
mov
mov
(bad)
(bad)
mov
lea
cld
sbb
sbb
sub
jnp
cs
in
pop
mov
(bad)
(bad)
push
xchg
std
xor
ins
repz
shr
mov
mov
test
movs
pop
mov
aam
pop
add
(bad)
(bad)
(bad)
jns
and
es
push
cmp
xor
lods
xchg
mov
(bad)
(bad)
(bad)
(bad)
call
retf
cdq
loope
adc
adc
das
pop
in
out
test
pop
mov
icebp
sahf
pop
aam
mov
push
sub
es
std
div
inc
add
cld
mov
cli
(bad)
inc
bound
push
iret
retf
sub
and
cmp
(bad)
fild
mov
jne
nop
cs
jmp
inc
in
(bad)
push
dec
aam
cmp
sub
xor
hlt
mov
pop
and
call
jnp
jg
mov
jmp
mov
not
push
mov
jo
test
test
jae
push
test
xchg
enter
stos
popa
cmps
imul
cmp
clc
(bad)
(bad)
(bad)
(bad)
jns
push
aad
sbb
cld
clc
dec
mov
cmp
mov
sahf
and
mov
sub
cmp
adc
sub
mov
(bad)
(bad)
(bad)
jmp
xor
dec
sub
mov
push
jmp
push
xor
jne
test
xor
inc
jnp
jmp
inc
pop
scas
xlat
icebp
arpl
fcmovnu
and
mov
pop
pop
pop
add
call
(bad)
(bad)
out
clc
push
push
push
xchg
fcom
loopne
adc
test
(bad)
(bad)
(bad)
jmp
das
das
ret
repz
adc
ficomp
popf
jl
jmp
mov
lods
xor
sbb
lea
xor
inc
cmps
add
inc
sbb
push
and
add
sbb
nop
and
out
adc
adc
add
xchg
outs
xchg
movs
mov
test
inc
pop
aam
and
(bad)
(bad)
inc
leave
and
pop
mov
call
adc
adc
adc
or
sbb
(bad)
(bad)
push
call
and
(bad)
sub
(bad)
in
sub
cmc
jl
mov
(bad)
inc
lahf
in
out
sahf
jae
repnz
sahf
fucomip
ja
into
aad
retf
add
(bad)
(bad)
jg
outs
sub
cmps
or
pop
jmp
rcl
mov
(bad)
(bad)
call
in
shl
mov
out
mov
call
mov
pop
pop
pop
nop
lahf
out
mov
(bad)
(bad)
jmp
jle
pop
sar
jmp
jmp
mov
pushf
dec
cmps
ins
fs
mov
(bad)
(bad)
inc
mov
xchg
or
add
adc
fisub
(bad)
(bad)
(bad)
(bad)
(bad)
enter
cmp
pop
inc
pop
pop
adc
cdq
dec
loop
and
jo
mov
(bad)
mov
lods
scas
test
mov
arpl
pop
jp
xchg
xchg
add
xchg
call
shl
cmp
gs
call
dec
push
push
xchg
enter
(bad)
dec
div
adc
mov
xor
stos
stos
into
adc
cmp
(bad)
in
or
dec
cmp
inc
adc
ret
call
test
dec
rcr
xor
adc
test
add
(bad)
(bad)
in
sti
push
data16
sub
mov
std
cmp
ss
aam
adc
xchg
call
mov
sti
push
clc
jl
jg
mov
hlt
jae
ins
inc
mov
fidivr
dec
cld
jmp
cld
hlt
jecxz
test
je
repnz
jmp
add
jle
(bad)
std
cli
retf
xor
movs
jmp
idiv
(bad)
(bad)
(bad)
(bad)
ds
mov
pop
es
pop
dec
aas
(bad)
out
(bad)
jmp
mov
xlat
pop
sbb
pop
push
icebp
call
lock
jecxz
xor
(bad)
dec
retf
in
and
(bad)
(bad)
sti
xchg
data16
rcl
mov
xchg
xor
or
fadd
(bad)
(bad)
jnp
(bad)
sub
and
hlt
repnz
or
retf
ret
shr
mov
(bad)
(bad)
call
in
dec
mov
and
dec
pop
inc
adc
mov
daa
lods
adc
xchg
jg
(bad)
jmp
test
jge
jmp
xchg
cmp
bound
std
sub
jle
(bad)
(bad)
(bad)
push
xchg
mov
xchg
xor
pop
sti
jae
cdq
sub
xchg
(bad)
clc
pop
sbb
(bad)
mov
adc
icebp
cmp
or
sub
(bad)
mov
int
add
in
out
stos
shl
sti
jo
xchg
mov
xor
(bad)
jg
ror
pop
jle
and
sbb
out
cmp
call
xchg
adc
mov
lds
lea
lock
and
push
dec
and
inc
xor
mov
jb
push
ja
popa
and
xchg
ja
inc
push
stos
call
mov
(bad)
(bad)
call
push
inc
icebp
js
or
mov
std
push
or
jae
push
(bad)
(bad)
call
call
ss
pop
jl
mov
pop
rep
cmp
scas
push
push
sub
lock
fs
retf
mov
fbstp
sub
ins
test
lahf
push
mov
jmp
jl
mov
jno
or
dec
dec
push
jno
mov
(bad)
adc
int
or
jmp
sbb
add
mov
ins
mov
(bad)
(bad)
(bad)
inc
push
in
jp
xchg
ins
mov
mov
and
loop
adc
adc
(bad)
(bad)
mov
inc
lods
push
shr
adc
pop
pop
or
sbb
adc
add
arpl
jmp
sti
xor
cdq
imul
jbe
jno
in
ss
xchg
dec
out
fstp
int3
(bad)
push
cmp
fs
(bad)
(bad)
jmp
out
(bad)
icebp
shl
jns
jmp
mov
xchg
mov
adc
cdq
push
push
mov
fs
int3
enter
(bad)
call
psllw
inc
inc
clc
sahf
dec
shl
mov
(bad)
jmp
sub
pop
xor
xor
jae
lea
aad
out
sub
(bad)
(bad)
push
sub
retw
jmp
xor
pop
mov
loope
js
repz
pusha
mov
in
or
sbb
push
popa
mov
lods
jno
xchg
js
xchg
retf
xchg
shl
adc
or
sbb
cwde
cmps
fdiv
sahf
inc
(bad)
(bad)
(bad)
push
loop
fistp
shl
jp
pop
sbb
xchg
mov
imul
push
adc
jg
jmp
sub
dec
xchg
pop
sbb
adc
(bad)
dec
jbe
sub
xchg
xor
out
(bad)
(bad)
(bad)
dec
imul
pop
sub
push
es
icebp
(bad)
iret
jp
loope
jbe
mov
je
mov
mov
lods
mov
push
add
popa
xchg
mov
push
in
pop
bound
(bad)
(bad)
(bad)
jmp
mov
sahf
xchg
sbb
mov
stc
dec
imul
into
aam
loope
mov
inc
jmp
xor
sahf
rol
or
or
loope
daa
dec
dec
jg
dec
xchg
(bad)
cmp
bound
dec
clc
js
js
xchg
(bad)
push
xchg
add
mul
stos
(bad)
(bad)
(bad)
(bad)
sti
sub
jno
or
(bad)
mov
sbb
mov
test
(bad)
(bad)
(bad)
in
aas
and
hlt
cmps
cdq
sbb
arpl
inc
outs
and
fist
xor
or
(bad)
(bad)
dec
dec
mov
test
sar
in
mov
push
push
adc
(bad)
data16
(bad)
(bad)
call
lea
mov
xchg
pop
call
inc
add
sub
fdiv
push
xchg
sub
fdivrp
(bad)
(bad)
call
inc
inc
jo
ficom
or
in
cld
sahf
mov
retf
xor
fiadd
(bad)
adc
and
dec
cwde
or
or
or
pop
test
aad
stos
out
mov
(bad)
std
push
mov
push
outs
and
push
jbe
outs
mov
fild
lahf
enter
cdq
lock
(bad)
(bad)
(bad)
call
cmps
loop
stos
cld
mov
sti
mov
aad
or
jno
scas
inc
cld
mov
pop
inc
push
pop
mov
ja
sub
adc
jg
mov
mov
sub
repz
out
(bad)
jmp
push
push
in
(bad)
and
call
jmp
sub
loopne
(bad)
call
fiadd
and
mov
stc
xchg
adc
cmps
and
popa
(bad)
(bad)
(bad)
push
in
pushf
(bad)
cld
sub
shr
imul
icebp
or
adc
into
pop
nop
test
pop
cli
fbld
pop
sbb
or
(bad)
inc
pop
push
dec
retf
jb
test
pop
xchg
mov
push
std
hlt
(bad)
(bad)
push
cld
out
pop
repnz
jmp
ins
dec
push
call
cmp
xchg
out
sub
fld
xchg
and
xor
or
or
ins
frstor
add
pop
fidiv
loope
fwait
clc
mov
int
mov
and
or
enter
push
jmp
dec
pop
sti
das
popf
retf
cmp
ds
das
cli
mov
inc
adc
(bad)
(bad)
(bad)
dec
fisttp
es
and
outs
mov
pop
test
jmp
sar
(bad)
(bad)
jmp
jmp
es
fsubp
js
daa
fidiv
xor
jnp
(bad)
jg
dec
in
idiv
add
jge
sbb
(bad)
(bad)
(bad)
dec
test
jp
mov
add
xor
mov
xchg
shl
(bad)
jmp
xchg
pusha
push
adc
sbb
in
jae
clc
(bad)
outs
call
mov
ds
inc
popa
sbb
xchg
add
imul
(bad)
xor
(bad)
(bad)
(bad)
push
(bad)
js
xchg
(bad)
outs
and
or
fwait
sub
test
mov
adc
mov
jno
pop
jg
xor
loop
and
mov
cmc
(bad)
(bad)
dec
(bad)
xor
inc
push
sub
pop
add
or
adc
sbb
(bad)
jg
push
jl
jmp
mov
ret
mov
and
repnz
leave
ins
push
(bad)
(bad)
(bad)
(bad)
cmp
pop
dec
mov
mov
sar
fild
add
and
xor
(bad)
(bad)
(bad)
dec
scas
adc
cmp
lea
cld
push
pop
sti
lahf
test
sub
(bad)
dec
repz
inc
mov
jecxz
push
test
jnp
push
ss
in
xchg
pop
mov
mov
adc
(bad)
fcomip
call
cld
hlt
mov
dec
mov
mov
add
mov
imul
(bad)
call
ja
add
mov
stos
(bad)
out
jg
ret
dec
sbb
pop
movs
mov
outs
cwde
ret
(bad)
(bad)
call
ret
mov
pushf
aaa
popa
jnp
std
pop
mov
jmp
jmp
movs
icebp
std
ss
(bad)
(bad)
push
sub
cmps
aaa
pop
les
mov
pushf
or
lahf
or
pop
sub
(bad)
(bad)
(bad)
dec
sbb
outs
adc
adc
pop
out
ss
add
sub
(bad)
(bad)
(bad)
inc
push
repnz
push
fcomip
fs
outs
sbb
pop
jge
mov
jl
popf
js
adc
ss
(bad)
(bad)
jmp
popf
in
icebp
movs
mov
adc
jbe
pop
pop
sar
adc
or
and
ret
mov
pushf
mov
clc
push
es
gs
cmps
pushf
jo
pop
bound
(bad)
jg
sbb
dec
mov
sub
pop
cld
addr16
cmc
shl
ja
stos
inc
clc
(bad)
push
(bad)
push
push
cmps
in
inc
push
sti
bswap
fwait
adc
sub
dec
sbb
enter
(bad)
(bad)
sti
sub
jmp
shl
mov
jnp
mov
jge
ins
inc
mov
(bad)
(bad)
mov
stos
xor
ds
adc
in
adc
mov
pop
push
or
(bad)
(bad)
call
out
xor
xchg
(bad)
scas
ja
and
jmp
pop
mov
pop
hlt
mov
imul
jecxz
xlat
sbb
js
add
mov
(bad)
push
dec
push
xor
iret
and
adc
pop
call
out
sbb
(bad)
call
dec
stc
xor
sbb
xor
jb
fmul
aam
rcr
jg
(bad)
call
add
ss
xlat
inc
addr16
icebp
icebp
cmp
fst
fs
xchg
popf
dec
rol
(bad)
jmp
mov
adc
les
fiadd
jmp
cmc
sahf
push
dec
clc
(bad)
jmp
push
inc
loope
into
mov
xchg
icebp
(bad)
das
push
addr16
sar
jecxz
adc
aaa
mov
int
pop
add
add
inc
cwde
popa
imul
and
dec
loopne
(bad)
aas
and
mov
call
(bad)
(bad)
inc
jmp
mov
mov
push
in
fidivr
jmp
call
call
retf
mov
ins
out
shr
psrlq
jmp
dec
inc
xchg
mov
dec
arpl
test
out
out
sahf
fwait
cwde
cli
out
es
pushf
fistp
sbb
mov
mov
fs
aam
ins
inc
or
(bad)
(bad)
(bad)
inc
(bad)
or
jae
not
jbe
iretw
aad
pop
pop
pop
xchg
jg
fwait
std
(bad)
(bad)
inc
xchg
lock
movs
push
adc
dec
cmp
imul
outs
out
xchg
out
xchg
sbb
inc
loop
push
or
push
aas
pushf
sbb
out
adc
outs
sub
in
pop
or
clc
(bad)
(bad)
push
and
pop
add
jge
and
fnstenv
xchg
sbb
mov
popf
(bad)
push
adc
(bad)
lahf
(bad)
loopne
mov
mov
add
ret
jecxz
mov
jmp
enter
sub
cmps
pop
mov
adc
adc
xchg
rol
sub
ret
inc
sbb
ins
mov
xchg
mov
daa
push
popa
or
(bad)
(bad)
mov
clc
add
sbb
adc
out
sbb
pusha
mov
add
(bad)
dec
(bad)
and
mov
xchg
or
test
icebp
jno
ss
pop
cmp
inc
add
(bad)
jmp
xor
or
js
mov
xchg
leave
repnz
ins
mov
and
pusha
es
aaa
cld
(bad)
inc
clc
out
mov
sub
das
jecxz
scas
out
in
cli
cwde
adc
jmp
sti
xor
and
sahf
out
int
js
jp
jg
sub
iret
loop
stos
xor
cmp
and
pop
shr
pop
int
add
je
out
sbb
cmc
jmp
mov
(bad)
cli
push
test
sub
out
je
add
(bad)
(bad)
push
add
std
test
loop
dec
in
xchg
popf
arpl
addr16
sti
(bad)
(bad)
jmp
cmp
arpl
stc
das
imul
sub
repz
mov
aas
scas
adc
(bad)
(bad)
jg
jge
(bad)
sahf
stos
cmp
out
iret
jmp
int
and
out
in
in
adc
cmp
jecxz
(bad)
(bad)
(bad)
dec
iret
jno
xor
mov
adc
cmp
or
fidiv
scas
push
sub
(bad)
call
adc
rcr
mov
adc
inc
adc
imul
aad
jmp
not
cmove
jmp
leave
cmc
adc
movs
pop
loope
out
inc
pop
jnp
push
(bad)
pop
xchg
mov
mov
rcr
dec
xchg
stos
inc
inc
in
or
aad
hlt
shr
(bad)
call
push
sbb
add
in
mov
jmp
sub
std
jl
inc
loopne
addr16
(bad)
call
sub
mov
or
fisttp
push
xchg
xlat
js
xor
dec
retf
mov
xchg
sub
rcl
hlt
clc
(bad)
in
idiv
aam
mov
jmp
or
jnp
lea
mov
sbb
xchg
adc
out
inc
cmc
sbb
pop
fmul
clc
(bad)
jmp
cs
lods
and
fs
fiadd
cmp
mov
jmp
movs
inc
(bad)
(bad)
leave
out
clc
jecxz
sbb
clc
jmp
(bad)
(bad)
fscale
ret
xor
fwait
int
test
lahf
adc
xchg
lock
jmp
pop
jnp
xlat
in
jns
dec
push
dec
add
imul
mov
(bad)
jg
cmps
dec
mov
xor
mov
into
pop
outs
inc
ds
scas
xchg
call
out
xchg
icebp
or
(bad)
push
add
fisubr
sub
mov
loop
sub
adc
stos
jae
(bad)
(bad)
jmp
loopne
adc
mov
fdiv
adc
fcomp
adc
bound
add
pop
cld
inc
or
mov
out
jg
daa
adc
or
mov
adc
sub
and
push
push
cdq
dec
ins
ds
mov
(bad)
(bad)
call
xor
or
mov
pop
sub
ret
lds
(bad)
(bad)
jmp
mov
or
push
adc
lds
inc
jge
lds
inc
inc
mov
imul
inc
lods
pop
fnsave
xor
(bad)
(bad)
call
ja
mov
call
inc
out
popf
cdq
fwait
repz
(bad)
(bad)
jg
scas
popf
cld
repz
std
xor
out
inc
add
retf
call
push
push
loope
es
icebp
cmp
cmps
add
sub
aad
adc
mov
push
cli
jl
idiv
mov
sbb
lock
pop
(bad)
mov
psllw
daa
arpl
ins
sub
sbb
ret
push
xor
cmova
xchg
retf
in
(bad)
jecxz
and
out
shl
js
inc
call
or
inc
loop
(bad)
lods
pop
lea
add
aas
(bad)
(bad)
(bad)
call
add
dec
idiv
ret
xor
inc
cs
adc
mov
inc
movq
jmp
fwait
aaa
jbe
mov
mov
xchg
call
xchg
icebp
inc
push
cmp
or
sahf
and
pop
pop
mov
imul
(bad)
inc
bound
mov
and
mov
mov
add
(bad)
mov
mov
call
sub
loopne
xor
or
pop
dec
(bad)
(bad)
(bad)
dec
mov
or
xor
add
test
call
ja
pop
loop
push
pop
(bad)
(bad)
(bad)
inc
push
add
xchg
leave
scas
or
ficom
jb
dec
inc
cs
adc
sbb
fcmovnu
inc
adc
jl
imul
(bad)
mov
addr16
and
outs
mov
loopne
dec
mov
mov
(bad)
xchg
in
jmp
(bad)
call
jge
pop
or
cwde
xchg
inc
loope
in
stos
aas
and
paddq
push
je
mov
cmp
xchg
arpl
bound
jle
xor
scas
xchg
aas
sti
(bad)
call
cli
sbb
loop
test
jbe
arpl
fxch
fdecstp
lea
hlt
out
cld
jmp
adc
cld
sti
stos
xor
cld
cmp
fld
fsubr
jp
std
inc
std
std
mov
or
jmp
(bad)
(bad)
call
push
adc
push
sub
jl
enter
sbb
std
dec
test
lock
adc
(bad)
(bad)
call
mov
mov
sub
xor
xchg
or
in
retf
mov
dec
and
leave
jbe
dec
or
cmps
mov
cmp
jmp
and
mov
test
or
add
out
(bad)
pop
test
es
dec
sub
mov
call
sahf
js
cmp
test
dec
cwde
fldenv
sbb
in
push
jg
test
(bad)
(bad)
jmp
xchg
adc
or
fstp
dec
mov
in
push
adc
retf
jmp
pop
cmp
std
(bad)
(bad)
(bad)
ds
pop
ss
push
add
(bad)
ficom
cmp
add
cmc
xor
test
and
leave
jb
mov
dec
push
sub
adc
sub
daa
daa
fmul
call
jmp
or
pop
cmp
mov
pop
adc
inc
and
and
sbb
mov
or
sbb
add
mov
sti
push
inc
mov
ins
fst
jmp
(bad)
(bad)
mov
jmp
adc
pop
inc
ds
xchg
out
fisub
xlat
data16
call
and
push
inc
add
xchg
test
sub
js
inc
xchg
jp
(bad)
jmp
out
jle
mov
or
leave
xchg
mov
daa
inc
mov
jg
mov
push
xor
cld
dec
mov
adc
(bad)
(bad)
dec
xor
pop
jb
pop
je
ds
mov
cmp
call
retf
add
out
repz
jg
push
std
adc
xchg
xchg
push
(bad)
sub
push
cmc
and
or
scas
inc
pusha
cld
jmp
pushf
and
add
push
sub
sar
or
(bad)
aas
sbb
(bad)
lahf
fprem1
scas
dec
sbb
dec
and
inc
enter
inc
inc
push
movs
stos
pop
pop
test
add
xchg
(bad)
(bad)
push
push
mov
push
rol
fild
test
ins
or
test
pop
sbb
popf
into
cmp
jp
scas
jecxz
xchg
and
ds
nop
(bad)
(bad)
(bad)
jg
in
sti
fwait
test
dec
lahf
inc
xor
pop
pop
mov
jecxz
scas
outs
(bad)
(bad)
(bad)
(bad)
push
sbb
cmp
into
add
rcl
imul
(bad)
(bad)
jmp
lock
adc
xor
shl
cmp
jge
mov
adc
(bad)
(bad)
jmp
push
mov
add
cli
in
mov
add
sbb
lock
into
ret
(bad)
(bad)
inc
dec
adc
xlat
adc
inc
xor
jno
and
fadd
sbb
(bad)
out
scas
dec
loopne
mov
cmp
sub
mov
or
add
pop
adc
(bad)
(bad)
(bad)
dec
mov
add
pop
mov
jbe
adc
lea
mov
and
xchg
fsub
or
cmc
(bad)
(bad)
(bad)
in
xchg
xchg
popa
inc
and
int3
and
pop
mov
ja
add
call
jmp
sbb
rol
pop
movs
add
ds
les
(bad)
(bad)
(bad)
dec
imul
push
push
movs
adc
xor
and
leave
mov
inc
adc
cs
(bad)
(bad)
jmp
or
jecxz
ret
int
aas
pop
mov
ret
sub
jo
cmp
mov
inc
or
xlat
daa
or
push
inc
(bad)
(bad)
(bad)
call
pop
out
adc
sahf
lea
mov
ins
fpatan
stos
mov
arpl
or
sar
sbb
jmp
ds
ds
sbb
(bad)
(bad)
jg
sub
js
lea
add
popf
test
hlt
fstp
xchg
dec
sti
div
fisubr
dec
push
aam
(bad)
push
ds
cmps
xchg
jg
pop
xchg
(bad)
mov
add
jg
outs
imul
xlat
adc
fnstsw
repnz
jl
jge
xor
int3
jnp
sub
mov
adc
mov
test
xor
test
(bad)
(bad)
(bad)
inc
sub
mov
movs
jle
or
adc
and
cmp
cmp
cmp
aam
in
(bad)
(bad)
(bad)
call
inc
push
inc
cmp
adc
dec
mov
add
aam
rcr
jmp
(bad)
call
mov
mov
mov
inc
and
jg
sti
sar
mov
bnd
cwde
or
inc
or
sbb
mov
xchg
fdivr
mov
cmc
xchg
and
out
dec
outs
cmp
js
adc
test
jmp
ja
xor
imul
push
add
and
rcl
movs
sub
pop
or
(bad)
(bad)
(bad)
cmp
xchg
mov
daa
daa
add
aam
adc
mov
mov
daa
mov
dec
scas
inc
aam
inc
std
xor
push
push
data16
xchg
dec
cmps
sub
(bad)
(bad)
jmp
or
stc
in
enter
jmp
and
sub
push
dec
dec
and
jg
(bad)
jmp
xchg
mov
(bad)
adc
mov
in
(bad)
call
or
stos
retf
ss
add
out
clc
cmp
lods
cwde
cmps
mov
(bad)
repz
pop
jmp
and
(bad)
pop
les
imul
add
sbb
(bad)
ds
aad
mov
xchg
retf
loope
or
adc
cmc
xchg
(bad)
ins
xor
mov
mov
pushf
(bad)
(bad)
(bad)
call
xchg
push
imul
dec
sub
out
lds
pop
out
call
xor
adc
(bad)
(bad)
(bad)
(bad)
(bad)
adc
fcomi
pop
mov
cmps
and
fimul
fdivrp
or
test
add
push
sbb
dec
adc
pop
add
call
dec
shl
inc
gs
je
and
or
xor
stos
sub
sbb
xlat
(bad)
and
adc
or
sub
adc
jbe
pop
adc
or
(bad)
inc
add
pop
add
les
lock
and
(bad)
lds
cwde
test
sar
dec
add
mov
push
rcl
icebp
add
ins
xor
(bad)
call
push
in
lahf
in
jp
addr16
jp
and
mov
dec
outs
jp
loopne
inc
mov
sahf
cld
sub
sti
popf
pushf
push
int
sar
mov
push
pop
jl
enter
xor
jo
pop
sub
jecxz
out
(bad)
call
ficomp
mov
out
mov
(bad)
jg
sub
std
mov
clc
clc
std
jge
imul
cmp
imul
outs
ret
push
lods
pop
ror
scas
xlat
sub
les
lods
mul
enter
jnp
mov
sub
movs
shl
cli
imul
jg
(bad)
ror
xor
inc
inc
push
inc
mov
daa
mov
and
lea
(bad)
call
inc
add
xor
mov
(bad)
(bad)
mov
inc
push
shl
jne
inc
mov
aam
das
adc
xor
pop
jg
inc
dec
ret
pop
sbb
dec
add
sar
lea
test
shl
jl
lock
(bad)
in
sub
cli
fiadd
leave
aaa
sub
inc
aad
xchg
push
and
mov
pop
pop
jno
loopne
(bad)
(bad)
(bad)
(bad)
ficom
sub
adc
lds
adc
inc
xor
lods
aas
test
mov
adc
jle
push
cld
clc
xchg
inc
sbb
dec
lods
loope
dec
icebp
mov
in
iret
ret
mov
push
cld
(bad)
mov
test
lds
call
(bad)
(bad)
(bad)
jle
out
and
(bad)
cmp
inc
cmp
ret
(bad)
cmps
dec
and
xor
push
add
(bad)
call
xchg
in
call
mov
aas
stos
je
out
sbb
mov
pop
mul
neg
sub
push
mov
mov
shl
adc
push
cmp
sub
scas
rcl
jbe
retf
adc
jmp
call
popf
pop
imul
mov
push
rcl
ss
push
xchg
sti
inc
cmp
mov
rol
test
nop
lock
jg
div
in
cmp
ret
(bad)
(bad)
aas
cwde
test
cmp
fs
sbb
sbb
(bad)
in
fistp
test
adc
stos
push
cmp
add
sub
(bad)
(bad)
(bad)
dec
fmul
jmp
in
push
push
adc
jmp
fld
bound
or
add
add
(bad)
(bad)
jmp
sbb
or
cmp
mov
retf
rol
in
(bad)
(bad)
(bad)
jmp
adc
sub
and
cs
lahf
repz
sub
mov
xor
jmp
jmp
jg
cdq
push
retf
pusha
mov
fnstsw
stos
lods
outs
(bad)
inc
sub
adc
cdq
fwait
test
sub
cmp
call
ret
(bad)
(bad)
jmp
adc
repz
(bad)
xor
or
pop
(bad)
out
sahf
daa
aam
int3
cmp
dec
push
jg
lea
pop
lock
call
sbb
test
ja
inc
lods
je
lea
pop
adc
ds
add
hlt
(bad)
jmp
stos
idiv
add
mov
out
mov
enter
lds
lock
out
add
jl
(bad)
(bad)
aas
push
ficom
movs
(bad)
aad
jo
cmp
bswap
(bad)
(bad)
pop
pop
jl
sub
sub
test
call
push
push
popf
jge
das
push
fucom
(bad)
(bad)
add
cmp
cdq
push
push
sub
cmc
push
clc
pop
(bad)
jmp
retf
out
adc
(bad)
jnp
jnp
mov
int
not
shl
pop
push
mov
fimul
pop
mov
dec
(bad)
inc
jno
or
cmp
movs
(bad)
(bad)
(bad)
call
push
sar
push
dec
mov
(bad)
rcr
adc
xchg
inc
or
dec
or
hlt
jg
ds
(bad)
mul
lea
ja
clc
out
sub
(bad)
cmp
cmp
(bad)
in
xchg
fdivr
xchg
mov
sbb
jno
inc
cmp
pop
sahf
jnp
mov
sbb
sar
add
push
mov
sbb
push
adc
div
mov
(bad)
(bad)
(bad)
mov
dec
out
fist
mov
mov
scas
jmp
inc
mov
bound
sbb
cmp
xchg
xor
jne
or
sbb
jmp
add
scas
movs
xor
daa
dec
rcl
in
idiv
dec
xchg
mov
xlat
in
fdivr
dec
mov
inc
pop
cli
cli
sbb
or
jg
pusha
cld
dec
mov
mov
add
je
pusha
lods
shr
mov
jg
dec
ret
pushf
std
loope
inc
add
pop
aaa
scas
arpl
mov
(bad)
mov
aaa
mov
test
jb
pop
mov
mov
dec
jl
xchg
(bad)
frstor
dec
jmp
mov
pusha
pop
sbb
jmp
in
les
(bad)
inc
dec
sub
jo
mov
xchg
push
movs
aam
test
xlat
xlat
xchg
push
mov
xor
scas
inc
retf
xchg
adc
cmps
add
outs
das
cmp
sub
cli
jge
mov
mov
outs
jecxz
dec
out
fild
aad
pop
dec
pop
jno
enter
pop
out
cmp
(bad)
(bad)
(bad)
inc
dec
mov
loop
ins
add
lds
fisttp
xchg
(bad)
rcr
popf
jb
sti
cld
pop
test
sar
push
adc
js
int
mov
sahf
sub
addr16
jbe
add
test
push
xchg
xlat
leave
xlat
cmp
ss
cwde
sub
in
stc
shr
fstp
fcmovb
(bad)
call
outs
or
(bad)
cmps
pop
fwait
sub
ins
cmp
(bad)
(bad)
aam
or
jbe
ins
dec
movs
sar
sti
(bad)
mov
dec
std
das
and
dec
sar
mov
mov
ins
adc
scas
fcmovbe
pop
sti
jmp
ds
(bad)
push
adc
mov
adc
shr
nop
mov
(bad)
(bad)
(bad)
mov
mov
mov
mov
call
retf
adc
inc
std
sub
(bad)
(bad)
(bad)
call
sub
sub
push
jp
cmp
push
movs
and
hlt
in
lock
mov
mov
fiadd
mov
(bad)
jne
jmp
das
lods
fidiv
(bad)
jmp
jp
add
xchg
jbe
and
and
jmp
jb
das
bound
(bad)
add
fwait
mov
push
mov
inc
sahf
push
jb
add
(bad)
xchg
xchg
mov
(bad)
(bad)
fbld
rcl
push
aam
clc
or
sub
xchg
adc
xor
movs
sti
jg
(bad)
jmp
cld
mov
sbb
dec
retf
lock
or
outs
clc
(bad)
(bad)
fdivr
stos
scas
pop
mov
pop
or
xchg
test
sbb
pop
(bad)
cld
fbld
or
(bad)
dec
xor
lea
push
icebp
scas
xchg
jle
clc
leave
fs
inc
or
push
sar
pop
les
pop
mov
inc
inc
mov
adc
push
ds
(bad)
(bad)
(bad)
dec
push
test
mov
fimul
or
(bad)
repnz
out
jns
int3
(bad)
(bad)
(bad)
push
out
rcr
pop
mov
inc
sbb
sub
adc
push
sub
(bad)
(bad)
(bad)
jmp
fdivr
mov
mov
hlt
imul
(bad)
pop
dec
mov
mov
(bad)
(bad)
(bad)
jmp
int
or
cli
fst
je
out
pop
gs
inc
sbb
(bad)
icebp
mov
add
inc
sahf
add
shr
jge
inc
inc
loope
inc
pop
adc
aas
and
mov
push
sbb
xchg
sub
adc
mov
xchg
add
or
mov
mov
add
jo
adc
dec
push
arpl
xor
(bad)
(bad)
call
xchg
(bad)
dec
out
xor
fisubr
xor
mov
mov
mov
mov
mov
mov
icebp
lods
jbe
xlat
das
mov
(bad)
(bad)
(bad)
(bad)
(bad)
adc
xor
mov
gs
add
and
arpl
inc
(bad)
xor
lock
inc
sbb
hlt
pop
mov
div
outs
sahf
cmp
fsubr
loop
dec
mov
dec
out
add
xor
xchg
lea
push
fild
pop
pop
fstp
aaa
outs
cld
mov
mov
(bad)
call
shr
lea
js
loop
cld
lds
nop
dec
cmps
movs
xchg
gs
xor
dec
stos
(bad)
(bad)
(bad)
jg
mov
cmp
sbb
xor
popf
sbb
sar
dec
mov
dec
pop
push
xor
add
push
jmp
(bad)
mov
cmps
call
test
push
adc
pop
push
test
fsub
test
push
adc
jg
jl
popa
adc
xchg
cmp
es
inc
adc
enter
add
jmp
ins
cld
push
adc
push
sub
sahf
stc
sbb
idiv
aam
(bad)
(bad)
(bad)
inc
dec
aam
stc
mov
lahf
iret
ja
inc
shl
(bad)
mov
cmp
pop
inc
inc
ins
(bad)
in
(bad)
dec
dec
jg
pop
pop
fldcw
bound
or
pop
out
das
call
(bad)
(bad)
jmp
cmp
retf
jp
(bad)
xor
dec
outs
shl
ins
fcom
jns
mov
pop
or
lods
icebp
(bad)
(bad)
jmp
std
lds
cmp
shl
dec
(bad)
cld
nop
(bad)
out
retf
loope
call
(bad)
mov
push
inc
lahf
and
scas
cmp
mov
xchg
ret
sub
mov
mov
push
test
dec
lods
(bad)
(bad)
(bad)
(bad)
fisub
xchg
jecxz
sbb
add
push
fist
movs
inc
cmp
loopne
sub
pusha
(bad)
xor
inc
add
out
pop
cmp
inc
cmp
adc
(bad)
(bad)
(bad)
dec
cmc
xchg
jbe
push
mov
mov
ins
or
xor
call
std
push
push
and
push
push
cmps
cmp
inc
mov
push
xchg
cmc
sub
add
in
sar
xchg
inc
mov
dec
inc
inc
cmps
(bad)
(bad)
in
outs
cmp
adc
mov
nop
push
inc
in
(bad)
adc
rcl
mov
sub
jmp
call
sbb
and
aam
mov
out
cld
(bad)
(bad)
dec
loope
rol
inc
or
movs
out
jl
inc
repz
xchg
(bad)
dec
(bad)
call
mov
stc
rol
call
ins
and
scas
mov
test
cli
xlat
(bad)
(bad)
(bad)
push
xor
sub
das
cmp
push
aam
test
and
in
mov
inc
in
xchg
(bad)
movs
cdq
gs
retf
sahf
enter
sub
ss
(bad)
(bad)
in
(bad)
jmp
add
gs
dec
in
jecxz
cmp
in
xor
scas
pop
pop
addr16
pop
loop
(bad)
push
pop
ja
mov
pop
adc
retf
retf
scas
jge
sbb
jp
(bad)
jmp
lock
sub
jg
popf
test
push
(bad)
(bad)
aas
sub
pop
test
add
ret
loope
sub
std
push
scas
lods
sbb
and
jb
test
cmps
imul
cmc
call
fcomp
fisttp
dec
adc
or
mov
push
loope
outs
cmps
xchg
(bad)
or
call
cmp
cdq
ins
push
addr16
pop
xchg
stc
(bad)
ss
xor
cmps
(bad)
fs
nop
push
or
jno
xor
dec
in
dec
xchg
and
leave
imul
xchg
mov
inc
and
sub
xchg
jno
mov
sbb
mov
outs
add
cmp
fnstenv
mov
xchg
shr
push
add
mov
xor
(bad)
(bad)
(bad)
call
dec
rcl
jo
push
xchg
cmps
or
sub
and
test
push
mov
add
dec
inc
jo
sbb
fistp
idiv
lahf
mov
(bad)
(bad)
(bad)
out
jge
mov
add
or
adc
out
mov
add
add
jl
cmps
jmp
jo
mov
push
clc
push
cdq
add
mov
clc
cmp
loopne
fs
sub
add
(bad)
(bad)
(bad)
call
xor
push
cwde
mov
repnz
fstp
leave
cmp
dec
leave
cwde
mov
dec
into
(bad)
cmp
push
dec
into
and
xor
jae
sub
jl
lock
repz
(bad)
mov
lock
daa
jecxz
cmp
mov
out
clc
mov
xor
mov
(bad)
jmp
mov
jl
add
xchg
fsubr
out
push
fs
sub
sub
(bad)
jg
leave
pop
lock
pop
int3
iret
adc
pextrw
mov
and
add
push
xchg
(bad)
jmp
(bad)
push
aaa
lea
loop
fcomp
jb
iretw
cld
pop
adc
ins
sbb
(bad)
(bad)
push
cmp
xor
ins
mov
cld
fwait
xchg
div
pop
test
push
dec
ret
not
cdq
or
mov
cli
xchg
add
std
(bad)
(bad)
(bad)
inc
mov
jno
mov
loop
sub
pop
dec
add
jg
(bad)
cli
lahf
push
jg
pop
jl
push
mov
js
xchg
cmp
inc
data16
inc
(bad)
enter
or
lahf
xchg
pop
pop
(bad)
jne
push
adc
and
lock
(bad)
mov
inc
retf
cmps
dec
and
pop
enter
cdq
inc
lock
lahf
call
ret
(bad)
movs
fnstcw
adc
push
add
push
(bad)
mov
adc
or
sub
push
stc
int
rcr
cmp
(bad)
(bad)
(bad)
jge
mov
and
mov
inc
xor
cld
pop
add
add
xor
jmp
rcl
add
call
loopne
loopne
push
pusha
xor
adc
inc
and
adc
mov
sbb
(bad)
(bad)
call
push
jne
adc
ss
je
arpl
xor
pop
cs
push
(bad)
(bad)
push
xchg
sahf
sub
or
inc
adc
xchg
enter
pop
nop
sbb
add
(bad)
(bad)
inc
xchg
or
adc
test
stos
xchg
mov
sub
(bad)
push
or
push
pop
and
or
ins
add
or
test
ror
xor
pop
xor
adc
test
xchg
loopne
pop
or
and
cmp
ret
xchg
js
or
and
imul
mov
pop
clc
cmps
enter
inc
inc
xor
xchg
or
pop
adc
mov
push
push
push
pop
push
push
ds
(bad)
(bad)
fisttp
dec
inc
imul
je
cmp
popf
mov
inc
push
(bad)
jg
jmp
mov
adc
cmp
and
jg
sbb
adc
(bad)
push
mov
test
(bad)
mov
mov
lods
cmp
sbb
mov
(bad)
out
clc
push
mov
jnp
jnp
jnp
cmp
jo
cmp
cmp
mov
les
inc
(bad)
jmp
pop
jo
jo
jo
mov
adc
mov
lock
icebp
gs
jl
jle
adc
sub
mov
scas
(bad)
(bad)
(bad)
inc
mov
dec
mov
adc
mov
jo
cmp
cmp
(bad)
call
data16
sub
in
daa
popf
and
and
fs
cmp
(bad)
cmp
dec
fiadd
es
fbld
mov
sub
lock
sub
(bad)
(bad)
(bad)
push
push
js
mov
push
hlt
push
pop
lods
cwde
scas
pop
mov
icebp
test
mov
(bad)
call
push
mov
shl
push
cmp
mov
mov
add
clc
(bad)
call
loop
loope
mov
sti
sub
arpl
dec
gs
mov
jmp
scas
jb
cmps
add
mov
push
mov
sahf
dec
(bad)
retf
sub
mov
jmp
cmp
push
dec
push
(bad)
(bad)
(bad)
(bad)
mov
aad
stos
scas
aad
test
test
aad
aam
aad
aam
test
rcl
mov
(bad)
(bad)
(bad)
push
(bad)
inc
imul
stos
icebp
je
ins
mov
sbb
pushf
xchg
cmp
inc
add
push
push
push
pushf
(bad)
rcl
repnz
(bad)
(bad)
(bad)
stos
sar
mov
in
mov
sti
test
movs
push
push
(bad)
dec
inc
mov
into
pop
mov
jmp
or
xchg
xchg
into
test
hlt
xor
jne
mov
(bad)
(bad)
(bad)
inc
jp
jp
jp
jp
hlt
or
sub
and
sbb
push
cmp
and
add
or
icebp
xchg
adc
pop
xchg
xchg
mov
sbb
cmp
mov
pop
xor
jno
pop
data16
int
arpl
xor
(bad)
(bad)
mov
ss
dec
xor
sbb
int
sub
inc
mov
(bad)
(bad)
inc
mov
dec
adc
xchg
cdq
ret
ins
mov
sub
mov
pop
lds
mov
mov
(bad)
(bad)
(bad)
jmp
outs
popf
outs
(bad)
mov
stos
lods
cdq
sub
ficomp
fistp
stos
out
iret
jge
outs
(bad)
mov
arpl
sahf
push
bound
add
popa
rol
(bad)
(bad)
rol
xor
mov
icebp
int3
(bad)
or
popfw
ja
cmp
lods
jbe
call
mov
fld
pop
in
jl
stc
pop
pop
cmps
dec
call
repz
cmp
push
sbb
lea
jmp
movs
outs
or
inc
mov
outs
push
ja
ja
jnp
inc
xor
setle
mov
inc
cld
addr16
(bad)
pop
and
dec
imul
outs
(bad)
fcmovne
mov
add
rol
movs
push
iret
aaa
fnstenv
(bad)
dec
iret
fisubr
fild
jg
jg
push
call
add
fadd
(bad)
data16
(bad)
(bad)
inc
add
or
inc
sar
not
or
ja
cmp
mov
jo
ret
xchg
test
mov
ud2
scas
or
popa
adc
sar
cmp
scas
mov
inc
cdq
inc
dec
mov
adc
(bad)
call
js
xchg
(bad)
dec
arpl
mov
mov
les
arpl
mov
pop
jmp
mov
mov
jecxz
jns
sub
pop
pushf
mov
sbb
inc
and
shl
mov
inc
into
hlt
rol
mov
adc
out
retf
dec
and
es
(bad)
(bad)
(bad)
jmp
cmp
sahf
cmp
loop
push
xchg
repnz
rcl
or
movs
mov
lahf
mov
call
sbb
xchg
xchg
cwde
jno
dec
adc
xor
lock
(bad)
(bad)
push
movs
retf
pushf
xchg
in
pop
ss
inc
(bad)
fxch
aam
les
(bad)
(bad)
(bad)
push
call
aaa
cmp
dec
sahf
jb
xor
mov
daa
bnd
mov
(bad)
(bad)
(bad)
call
pop
mov
je
out
cli
push
shr
jmp
cs
cmp
xor
jg
mov
jl
cs
dec
xchg
push
rcr
mov
pop
mov
inc
lds
ss
test
mov
sub
cmp
imul
xchg
sub
outs
out
or
(bad)
(bad)
call
jge
xchg
mov
mov
mov
push
loope
jmp
fdiv
iret
das
pop
(bad)
(bad)
(bad)
call
mov
jae
arpl
mov
push
popa
push
push
mov
mov
mov
pop
sbb
gs
mov
(bad)
(bad)
push
cmc
dec
lea
jnp
in
cmps
fcmovbe
mov
icebp
fcom
push
cmps
push
push
pop
imul
(bad)
(bad)
jmp
mov
xchg
sti
push
ss
aaa
idiv
cli
mov
mov
(bad)
(bad)
(bad)
inc
jle
jle
or
sub
movs
jne
pusha
ret
fistp
rcr
(bad)
(bad)
(bad)
inc
ins
stos
outs
cmps
mov
push
add
fwait
clc
in
cmc
ret
inc
xchg
mov
mov
addr16
pop
ins
pop
(bad)
(bad)
(bad)
push
pop
fidivr
aad
shl
sbb
mov
movs
cmps
jecxz
retf
out
neg
sar
push
jae
in
(bad)
ret
adc
ds
jne
call
mov
mov
outs
lock
rcr
repz
(bad)
(bad)
(bad)
jl
popf
jmp
fdivp
cld
mov
into
pop
mov
pop
in
mov
sar
pop
sti
pop
(bad)
(bad)
call
sbb
xchg
sbb
sti
xchg
rcl
scas
sahf
mov
push
jo
ror
cld
xchg
loope
push
xlat
outs
fimul
and
push
cli
lods
out
jae
iret
fcomp
(bad)
(bad)
(bad)
pop
jge
in
sar
jle
std
mov
jmp
lock
rol
(bad)
fdiv
hlt
jle
call
test
inc
repz
inc
(bad)
es
das
aas
pop
clc
js
dec
push
jmp
aas
sub
pop
sti
int3
in
ja
and
xor
hlt
(bad)
(bad)
(bad)
(bad)
cld
shr
fdivr
shr
gs
je
hlt
std
push
sbb
push
jg
loopne
jmp
inc
cwde
ja
xor
aas
cwde
jle
stc
sbb
icebp
out
cmps
mov
jle
and
and
test
idiv
push
xchg
cwde
int
inc
sbb
lock
mov
test
enter
mov
cmc
(bad)
(bad)
cmp
add
je
push
es
mov
fisub
or
(bad)
call
adc
mov
xchg
sub
mov
scas
aam
cmp
jbe
push
jle
addr16
std
(bad)
(bad)
inc
or
test
adc
sahf
inc
xchg
aas
pop
jnp
push
stos
xchg
mov
mov
(bad)
jg
sub
sub
cmp
and
test
ss
push
(bad)
(bad)
(bad)
jmp
repnz
xlat
ror
rep
cmp
sbb
shl
cwde
push
sub
adc
pop
cmc
adc
mov
sub
aam
and
(bad)
(bad)
out
push
idiv
das
scas
ror
inc
ret
pop
jno
jo
and
(bad)
(bad)
call
dec
mov
mov
mov
int3
fild
imul
dec
arpl
xchg
ja
mov
mov
cmp
cmp
in
dec
sbb
(bad)
(bad)
(bad)
jmp
popf
pop
inc
push
adc
fadd
cmp
or
add
dec
push
xchg
mov
ret
(bad)
(bad)
inc
pushf
cmp
popf
mov
pop
and
lods
fnsave
(bad)
(bad)
(bad)
jmp
cli
jp
xchg
jno
push
or
mov
and
(bad)
(bad)
(bad)
(bad)
mov
sbb
leave
int
mov
or
jecxz
dec
(bad)
mov
(bad)
outs
cli
(bad)
jmp
pop
sub
test
(bad)
std
mov
pop
sbb
adc
int3
sub
int3
out
cs
stos
and
sahf
(bad)
(bad)
dec
dec
add
push
loopne
int3
call
and
push
mov
(bad)
(bad)
inc
mov
gs
mov
push
mov
inc
stos
and
xchg
inc
pusha
pusha
mov
fcmovu
(bad)
(bad)
(bad)
dec
out
cmps
lea
pop
pushf
(bad)
jns
pop
out
cmp
js
add
data16
outs
(bad)
(bad)
(bad)
(bad)
clc
aaa
xadd
inc
outs
in
add
mov
jmp
loopne
and
inc
xchg
stos
pop
dec
adc
dec
(bad)
(bad)
(bad)
dec
hlt
and
das
int3
into
leave
pop
fisttp
add
sbb
jmp
(bad)
dec
sbb
xchg
and
(bad)
scas
jg
cwde
test
and
sahf
push
mov
(bad)
push
pmullw
(bad)
xchg
jne
scas
test
(bad)
mov
xor
(bad)
(bad)
(bad)
cmp
mov
cmp
mov
or
push
add
jp
or
sbb
(bad)
(bad)
(bad)
call
mov
or
xor
repnz
xchg
pusha
not
mov
loopne
stc
cwde
leave
xchg
(bad)
(bad)
(bad)
dec
inc
pop
jb
mov
mov
(bad)
dec
inc
jae
jmp
sub
sub
ins
scas
or
(bad)
(bad)
(bad)
call
xchg
out
idiv
xor
pop
sahf
out
mov
test
(bad)
sbb
sub
(bad)
(bad)
jmp
or
sbb
mov
add
or
sar
jo
cmp
push
push
xlat
(bad)
(bad)
(bad)
jmp
ins
jbe
(bad)
cld
mov
xor
ins
sar
dec
xor
lods
pop
jmp
pop
add
mov
dec
jnp
(bad)
jmp
arpl
and
(bad)
mov
pop
dec
popa
pusha
repz
(bad)
cli
jmp
fld
push
mov
stos
lds
add
pop
mov
(bad)
jg
call
test
das
ds
sbb
push
out
cmp
jmp
sti
push
call
jmp
or
or
add
out
ret
fcomp
test
call
mov
(bad)
(bad)
(bad)
fcmovu
imul
ja
cmp
mov
rcl
and
push
icebp
mov
mov
(bad)
(bad)
dec
sub
adc
fistp
mov
and
push
das
sbb
jmp
(bad)
(bad)
(bad)
(bad)
call
call
jmp
lahf
pop
mov
(bad)
inc
mov
add
push
ror
pop
ins
inc
(bad)
(bad)
(bad)
dec
daa
jecxz
lds
jg
push
mov
sbb
mov
dec
push
sbb
outs
(bad)
(bad)
(bad)
inc
fnsave
mov
aaa
lar
aam
(bad)
adc
xor
xor
mov
(bad)
(bad)
dec
cs
nop
(bad)
jge
loope
jecxz
or
mov
stc
xchg
and
iret
mov
(bad)
(bad)
(bad)
call
pop
xor
addr16
repnz
popf
pop
sbb
jg
pusha
adc
bound
push
sti
cld
jecxz
(bad)
(bad)
dec
jmp
movs
adc
je
adc
or
add
cmc
xchg
xor
mov
fdiv
or
mov
and
mov
imul
(bad)
pop
movs
std
inc
add
bound
lahf
popa
jo
(bad)
std
sti
(bad)
(bad)
fcmovnu
mov
cmc
dec
push
(bad)
mov
and
inc
mov
std
retf
sar
(bad)
mov
fistp
rol
pop
aas
sbb
cmps
iret
cwde
push
ret
xchg
add
(bad)
inc
retf
cmps
int
movs
movs
(bad)
and
es
jmp
xchg
scas
fbstp
(bad)
(bad)
inc
int
xchg
cmp
push
aas
nop
lods
pop
sbb
adc
test
fcmove
inc
push
std
cmc
adc
test
rol
and
sub
(bad)
mov
jno
jl
mov
mov
(bad)
(bad)
(bad)
sti
(bad)
call
xchg
call
xchg
push
aas
xor
adc
stos
(bad)
ins
mov
push
sbb
(bad)
jg
add
out
jbe
ds
xchg
fnstcw
pushf
xor
ss
mov
add
jg
(bad)
jmp
add
mov
inc
push
les
jmp
(bad)
(bad)
mov
pop
pusha
jo
(bad)
(bad)
call
dec
push
sub
lock
pop
cmps
enter
xchg
or
cmps
jne
stc
dec
sahf
inc
ret
jle
adc
data16
(bad)
dec
adc
pop
xchg
cmp
cmp
int3
(bad)
icebp
jecxz
add
aas
ret
out
pop
enter
sub
push
retf
sub
or
and
xlat
adc
pop
sbb
or
outs
frstor
mov
or
jg
inc
inc
movs
(bad)
std
push
js
cmp
or
cmp
pusha
inc
cmp
or
push
(bad)
(bad)
(bad)
jmp
data16
shl
mov
aas
jge
mov
inc
dec
dec
mov
or
or
(bad)
mov
or
jle
cld
call
add
nop
push
in
std
pop
icebp
fld
sar
pop
enter
add
push
cmp
stc
add
mov
data16
mov
add
xor
in
cmp
xchg
not
cwde
es
stos
and
or
pop
pop
es
mov
jg
dec
or
mov
mov
sbb
movs
dec
outs
push
popf
add
mov
mov
mov
jmp
std
cmp
mov
lods
sub
test
in
jmp
into
in
into
mov
mov
cmc
ja
(bad)
stc
icebp
jns
mul
mov
jecxz
(bad)
(bad)
inc
call
pop
mov
push
and
cwde
aad
js
pop
mov
aas
sbb
gs
(bad)
(bad)
call
ins
icebp
and
retf
inc
push
cli
jmp
repnz
inc
rcl
adc
mov
sub
(bad)
(bad)
(bad)
fmul
pop
and
mov
(bad)
jle
aam
and
push
jmp
(bad)
(bad)
(bad)
mov
rcr
sahf
xor
jle
test
dec
xchg
mov
jl
ds
idiv
repz
std
and
movs
pop
(bad)
xchg
sbb
cmp
inc
mov
daa
lods
ja
test
add
ja
(bad)
(bad)
(bad)
push
xchg
pop
cmps
mov
call
ins
mov
loope
push
cld
add
(bad)
(bad)
(bad)
jge
out
popf
inc
test
adc
mov
cmp
cmovo
sbb
and
(bad)
(bad)
jmp
pop
add
pop
inc
jecxz
mov
stos
aad
sub
push
pusha
sub
pop
arpl
fidiv
mov
inc
push
or
jle
xor
lahf
(bad)
(bad)
call
inc
std
mov
sbb
cmp
sar
lods
lds
push
mov
push
sbb
jo
push
push
cmc
mov
fnstsw
shr
dec
sti
outs
mov
(bad)
std
mov
push
sub
sub
add
(bad)
call
call
std
call
in
dec
test
jge
sti
inc
dec
addr16
cmp
dec
pop
xchg
jb
sub
inc
in
test
cmp
std
add
in
in
push
push
push
push
jmp
fist
adc
aas
inc
adc
lock
(bad)
(bad)
stc
aad
dec
sbb
fdivr
and
les
sub
mov
sbb
sub
cwde
shl
(bad)
(bad)
(bad)
dec
add
les
rol
dec
adc
and
add
loope
pusha
inc
(bad)
(bad)
(bad)
inc
rcl
idiv
jno
adc
sbb
mov
push
(bad)
(bad)
(bad)
dec
xor
pop
pop
out
push
dec
jge
xor
rcl
push
retf
outs
or
inc
(bad)
(bad)
call
cmc
aaa
sub
out
mov
jp
inc
ss
pop
and
sbb
retf
push
loopne
je
push
(bad)
(bad)
(bad)
push
scas
imul
adc
cmps
(bad)
je
and
into
fnsetpm(287
inc
(bad)
(bad)
(bad)
(bad)
mov
loop
sbb
and
sbb
add
fild
cli
xor
push
lods
arpl
push
adc
(bad)
jmp
das
popa
aam
and
ret
(bad)
and
adc
repz
sbb
(bad)
call
jmp
arpl
out
ret
xor
call
mov
add
push
xchg
das
push
aas
add
sub
lds
imul
sub
out
sbb
jg
mov
(bad)
cmp
cmp
mov
stos
repz
push
xchg
xchg
lods
sub
js
jmp
mov
pop
imul
(bad)
(bad)
dec
and
icebp
sub
icebp
imul
jge
jnp
or
enter
adc
jns
ficomp
push
(bad)
(bad)
(bad)
fmul
int3
push
sub
fwait
xor
fisubr
add
mov
jl
es
(bad)
(bad)
mov
in
inc
mov
mov
xchg
inc
mov
lods
mov
or
rcr
(bad)
push
lahf
or
adc
in
mov
sub
mov
cld
(bad)
inc
sti
pop
ins
adc
inc
repz
dec
outs
add
loope
xor
sbb
out
jg
popa
push
pop
out
rol
or
repnz
aad
js
je
or
test
scas
jl
add
jnp
push
fld
jmp
jae
stc
out
mov
(bad)
(bad)
jmp
inc
or
mov
pop
mov
aad
rol
repnz
hlt
lahf
cwde
(bad)
(bad)
(bad)
call
test
dec
sub
jl
ds
(bad)
push
cmps
(bad)
je
popf
fist
fwait
mov
add
(bad)
(bad)
(bad)
fmul
jle
out
cmp
mov
jae
xchg
dec
and
add
sbb
or
adc
(bad)
(bad)
jg
pop
mov
lods
mov
in
add
outs
jmp
inc
addr16
call
call
push
adc
outs
aam
cmp
in
fcom
sbb
pushf
xchg
pop
(bad)
(bad)
(bad)
inc
das
jne
rcr
sub
adc
inc
je
adc
adc
cwde
in
outs
shl
add
(bad)
(bad)
(bad)
call
cmp
mov
rcl
stos
push
mov
xor
lods
mov
pop
cmp
and
(bad)
(bad)
call
xchg
pop
sub
mov
xchg
pusha
sbb
or
xchg
daa
pop
rol
es
jecxz
push
(bad)
sub
(bad)
(bad)
call
inc
adc
in
push
pop
mov
leave
and
in
adc
sub
cmp
int3
cmp
sar
(bad)
jmp
clc
add
sti
add
repnz
(bad)
fimul
xor
or
pop
inc
mov
(bad)
(bad)
(bad)
mov
popa
mov
push
xchg
retf
mov
(bad)
inc
push
xchg
push
jmp
(bad)
(bad)
(bad)
(bad)
inc
(bad)
inc
adc
ror
int3
sbb
inc
aad
xor
push
call
(bad)
(bad)
(bad)
dec
outs
push
stos
ins
xor
test
mov
push
mov
mov
adc
fld
push
cwde
push
test
sub
shl
pop
inc
mov
lods
lock
int
push
test
pop
xor
call
cs
pop
dec
retf
lods
mov
loope
jecxz
mov
fmul
inc
sahf
add
(bad)
dec
popa
sbb
mov
push
sti
or
mov
movs
out
(bad)
(bad)
push
xor
or
fnsave
mov
jae
cwde
loope
(bad)
(bad)
push
inc
lahf
push
scas
pop
push
es
and
mov
scas
dec
nop
das
test
aaa
or
pop
xchg
adc
(bad)
(bad)
jmp
inc
jmp
mov
jbe
mov
outs
xlat
call
and
inc
(bad)
fsubr
icebp
sub
mov
sbb
dec
adc
das
nop
lock
outs
(bad)
(bad)
(bad)
mov
jmp
daa
xchg
mov
aad
mov
xor
adc
xor
(bad)
jmp
inc
xor
and
cmp
sbb
lea
ja
push
fs
(bad)
(bad)
jmp
sbb
in
jg
inc
push
mov
adc
pushf
loope
test
dec
cwde
(bad)
rcl
jecxz
jmp
mov
jmp
mov
pop
(bad)
mov
loop
push
(bad)
ja
pop
mov
cmc
out
fidivr
leave
mov
sub
jns
(bad)
(bad)
stc
(bad)
pop
dec
push
popa
jnp
ss
out
sub
mov
dec
inc
xchg
and
adc
call
cdq
adc
pusha
ja
dec
inc
xchg
inc
adc
adc
pop
test
xchg
cli
(bad)
(bad)
call
gs
lods
push
int
gs
fld
add
and
pop
fimul
aaa
nop
cmp
mov
addr16
push
cmp
cmp
sbb
(bad)
(bad)
inc
add
xchg
push
push
or
rcr
out
mov
cwde
cmp
xchg
mov
(bad)
jmp
scas
das
in
in
rol
inc
inc
or
retf
sbb
ds
mov
jg
mov
scas
xchg
or
jne
or
add
mov
jns
ror
mov
out
sub
mov
shl
jo
ret
idiv
xchg
or
(bad)
call
mov
sbb
loopne
mov
mov
mov
cmp
push
adc
(bad)
(bad)
call
lds
int
add
add
(bad)
pop
jo
mov
(bad)
(bad)
(bad)
call
pusha
out
sub
add
ins
pop
adc
das
pop
add
jl
cwde
or
(bad)
(bad)
out
sub
das
cmp
sub
mov
sbb
pop
and
aad
mov
repnz
(bad)
inc
call
icebp
lods
mov
in
mov
pusha
(bad)
jmp
xchg
and
push
in
cmps
inc
cmp
inc
xchg
push
add
inc
sub
mov
icebp
(bad)
(bad)
(bad)
dec
shl
or
push
gs
(bad)
inc
inc
cmp
or
(bad)
inc
dec
test
xlat
out
sub
outs
sbb
jns
dec
(bad)
rcr
jmp
ret
in
cli
fwait
(bad)
jg
dec
test
mov
mov
add
inc
ins
fadd
jae
or
ret
(bad)
inc
rcr
cmp
inc
mov
sbb
(bad)
xor
popa
test
jae
mov
(bad)
(bad)
(bad)
push
cwde
pop
dec
mov
jne
xchg
mov
mov
aas
mov
push
pop
push
lods
or
(bad)
(bad)
(bad)
inc
xor
mov
lahf
mov
xchg
mov
ins
and
shl
push
pop
push
push
into
push
hlt
push
and
fstp
(bad)
jae
and
mov
(bad)
adc
sti
xor
(bad)
(bad)
jmp
fdivr
outs
stc
out
mov
jle
clc
loop
push
loopne
clc
push
fisttp
in
(bad)
dec
idiv
inc
jl
jp
xlat
rcl
xchg
mov
push
mov
dec
xor
out
adc
jmp
in
js
addr16
mov
scas
adc
adc
(bad)
loop
int
test
imul
push
lock
mov
inc
jle
xor
ins
popf
add
(bad)
(bad)
(bad)
jmp
ja
jp
stc
and
lds
mov
mov
lds
sbb
(bad)
dec
or
out
pop
loopne
fnstcw
cmp
mov
loop
push
push
add
(bad)
inc
std
sub
inc
call
mov
test
xchg
inc
or
(bad)
(bad)
jmp
mov
adc
and
enter
and
sub
mov
and
pop
xlat
push
mov
inc
and
(bad)
mov
push
mov
jle
addr16
xor
mov
int3
ret
int3
sbb
(bad)
cmp
pop
(bad)
(bad)
(bad)
call
pop
enter
xor
xchg
push
fst
cmp
js
adc
add
int3
test
(bad)
(bad)
(bad)
dec
push
cdq
and
push
push
jno
sub
movs
mov
xlat
inc
sbb
ins
or
(bad)
(bad)
(bad)
inc
cmp
mov
push
shl
add
pop
(bad)
(bad)
cmp
adc
(bad)
(bad)
push
nop
cld
push
xor
jae
lods
and
in
inc
inc
lods
mov
(bad)
(bad)
(bad)
call
neg
mov
inc
test
cmp
add
in
cmp
mov
imul
sar
cmp
cld
push
fwait
or
in
pop
add
loopne
(bad)
(bad)
jg
inc
test
and
iret
movntq
out
cmp
jecxz
or
jae
inc
jp
push
dec
push
inc
and
outs
(bad)
or
adc
mov
movs
or
inc
add
or
cs
push
pop
push
(bad)
out
retf
(bad)
(bad)
(bad)
(bad)
in
arpl
jmp
sahf
adc
jle
out
in
mov
into
mov
jo
lods
aaa
push
dec
add
(bad)
call
pop
lahf
mov
lock
stc
retf
sbb
sub
mov
movs
jnp
sbb
cld
(bad)
(bad)
call
or
inc
mov
adc
repz
sub
add
and
add
test
pop
lock
pop
dec
test
xor
call
mov
(bad)
(bad)
(bad)
and
sahf
xor
fld
or
or
ficom
xlat
ret
(bad)
(bad)
(bad)
call
add
or
add
inc
and
movs
dec
(bad)
stc
inc
mov
leave
loop
call
ins
push
ret
xchg
xchg
pop
add
gs
ror
imul
sar
adc
dec
(bad)
js
jecxz
and
fadd
test
ss
dec
stc
xchg
sbb
popa
mov
stos
xchg
(bad)
(bad)
fld
sub
call
outs
add
sub
repz
scas
inc
push
xchg
dec
mov
(bad)
(bad)
(bad)
(bad)
mov
(bad)
cmp
jns
and
xor
aam
stc
in
(bad)
cli
cs
cmc
(bad)
jg
(bad)
jns
mov
xor
push
mov
adc
mov
mov
push
jb
xchg
jg
test
push
enter
xor
sub
mov
or
rol
sub
push
mov
or
jmp
test
push
imul
cs
and
pop
pusha
cdq
mov
fimul
xor
cmp
(bad)
call
cmovns
popa
arpl
and
adc
xlat
add
jg
daa
and
or
dec
and
dec
pop
inc
iret
adc
sub
inc
xor
push
and
mov
lds
adc
add
and
sub
sub
dec
sub
pop
jae
jo
dec
xor
jmp
cmc
mov
jne
ror
add
and
jns
and
js
xchg
xchg
cld
add
inc
rcl
add
jb
jae
inc
add
dec
mov
push
test
imul
add
add
sub
xor
je
adc
mov
add
or
sbb
add
or
pusha
idiv
bswap
add
xchg
pop
xor
das
add
xor
das
xor
cs
cmp
dec
inc
addr16
inc
scas
stos
(bad)
aad
rcl
rcl
into
rcl
int
iret
into
add
fbld
lds
cmp
pop
and
hlt
repz
iret
fisub
in
out
add
jecxz
lea
enter
ror
inc
inc
add
jg
int3
div
icebp
cmc
hlt
lock
repnz
in
repz
add
lock
ins
pusha
push
push
(bad)
out
sbb
sbb
jmp
pop
cmp
cmp
add
and
sbb
inc
fcmovnb
(bad)
push
aam
sbb
and
call
add
inc
stc
scas
push
inc
jp
(bad)
sbb
cmps
inc
push
push
push
(bad)
jle
jbe
xchg
inc
pop
pop
pop
dec
sahf
test
scas
inc
cmp
xor
outs
sub
inc
bound
push
add
cmp
fs
add
div
jg
cmp
in
add
ds
mov
fdivr
inc
xchg
add
retf
div
push
sub
lds
pop
push
dec
dec
inc
inc
cmps
mov
jge
js
js
pusha
inc
mov
ja
add
jno
add
mov
sbb
gs
xchg
mov
cmps
dec
movs
or
cli
cs
push
imul
imul
jmp
cs
mov
inc
jle
or
cmp
test
mov
adc
cmp
fsubr
xor
mov
icebp
lock
aad
icebp
shl
pop
out
add
retf
popf
xor
mov
bound
pop
inc
dec
add
add
dec
dec
push
push
dec
push
push
add
xor
push
dec
dec
dec
pop
bound
call
or
cmp
inc
aas
cs
inc
or
dec
dec
inc
dec
dec
inc
dec
add
xor
dec
inc
inc
inc
push
inc
add
enter
inc
(bad)
pop
fnstsw
test
cmp
inc
cmp
inc
add
ds
je
hlt
sbb
out
mov
movs
movs
xchg
lahf
jmp
sahf
sahf
add
scas
scas
mov
(bad)
call
in
test
add
jle
or
inc
inc
(bad)
jmp
data16
or
adc
shl
jle
and
jmp
adc
xchg
sub
inc
dec
dec
lds
add
and
adc
aad
inc
dec
dec
mov
popf
inc
mov
adc
xor
mov
jle
push
sub
mov
add
sbb
add
jo
dec
mov
xchg
add
and
or
cmps
add
push
add
sbb
inc
inc
popa
inc
inc
xor
outs
fcmovbe
pop
dec
cmps
push
dec
or
adc
fcom
or
test
add
dec
lahf
dec
push
cwde
add
je
add
add
jnp
cdq
sbb
sbb
and
imul
clc
arpl
or
sub
das
pop
mov
sub
push
in
dec
dec
add
add
out
jmp
cmps
movs
mov
aam
aam
int
aad
into
mov
fcom
ror
dec
or
neg
push
(bad)
mov
xlat
(bad)
rol
xlat
rcr
(bad)
fmul
(bad)
aam
enter
shr
(bad)
mov
or
aam
ss
ds
fcom
int
into
add
sti
ins
(bad)
pop
fcmovbe
iret
leave
mov
or
(bad)
aad
aad
xlat
inc
or
mov
ds
add
test
mov
retf
jge
ins
xchg
(bad)
mov
fild
loopne
fcom
js
dec
mov
xlat
inc
fstp
fdiv
(bad)
ret
ret
call
push
mov
add
ror
jge
xchg
jle
inc
mov
add
(bad)
out
or
mov
sahf
movs
pusha
mov
jge
cld
ret
or
add
iret
int
cli
clc
test
(bad)
jge
adc
(bad)
aad
std
inc
enter
sti
cli
add
std
sti
(bad)
cld
push
mov
xlat
cmp
or
add
push
imul
add
adc
inc
std
inc
(bad)
jmp
fisub
add
ins
fisubr
out
add
pop
aam
(bad)
fild
call
xor
add
adc
(bad)
xlat
aad
jmp
fadd
in
push
or
cmp
jmp
push
pop
mov
jge
xchg
push
shr
ret
sub
push
sub
sbb
mov
rol
push
push
add
cs
pop
pop
pop
jnp
xchg
add
jnp
xchg
sar
push
add
mov
fmul
fadd
out
mov
add
int3
into
xor
and
shl
mov
add
pop
rol
mov
rcl
mov
inc
sar
mov
add
into
mov
mov
add
test
fst
rcl
ror
in
test
jae
xchg
iret
iret
ror
mov
stc
test
test
test
add
or
mov
add
das
iret
add
pop
mov
inc
mov
add
push
das
rol
push
or
mov
add
das
rol
sub
pop
mov
inc
mov
or
das
rol
ins
mov
xor
xchg
or
push
out
xchg
es
shr
add
mov
xchg
push
mov
inc
das
xchg
xor
add
ins
mov
pop
xchg
out
or
push
xchg
das
dec
es
aad
out
mov
das
or
push
xchg
das
push
xor
push
ins
mov
xchg
call
push
xchg
das
push
dec
es
add
pop
inc
ins
mov
dec
es
mov
das
or
push
xchg
das
push
xor
push
ins
mov
xchg
jmp
fiadd
jp
ins
mov
pop
xchg
mov
lea
das
xchg
xchg
mov
jmp
push
jnp
mov
add
test
ins
push
adc
xchg
dec
in
mov
jl
pop
sub
pop
xchg
ins
mov
xchg
fiadd
pop
sub
dec
jl
xchg
pusha
mov
bound
adc
fisub
fs
pop
xchg
add
xchg
loopne
mov
pop
sub
jle
xchg
mov
add
adc
xchg
das
test
add
and
jg
mov
out
add
cmc
inc
pop
ins
push
das
pop
xchg
sbb
sub
in
push
or
mov
add
das
ins
mov
ins
push
adc
das
xchg
mov
add
aam
fisub
xchg
add
xchg
out
repnz
fisub
pop
xchg
add
das
inc
and
mov
mov
pop
xchg
ins
mov
jmp
dec
sbb
test
inc
repz
mov
or
ins
mov
xchg
das
push
mov
lea
sbb
sbb
pop
xchg
test
dec
mov
mov
mov
das
pop
xchg
or
xchg
in
mov
pop
mov
sbb
test
xchg
or
inc
add
sub
mov
das
xchg
mov
or
rcl
or
test
lods
pusha
mov
bound
lock
aam
fisub
xchg
xchg
adc
push
pop
xchg
adc
xchg
dec
in
mov
mov
sub
pop
xchg
inc
mov
xchg
mov
inc
loop
das
pop
lea
add
das
sbb
das
hlt
mov
pop
mov
add
xchg
cmp
das
pop
xchg
lods
pusha
mov
bound
adc
push
fisub
pop
xchg
cli
adc
xchg
dec
in
mov
inc
pop
sub
xchg
mov
push
mov
test
sbb
or
ins
mov
xchg
das
push
mov
lea
sbb
sbb
pop
xchg
mov
or
mov
das
sub
inc
das
pop
push
inc
mov
or
xchg
das
mov
xor
push
enter
lea
add
das
inc
scas
add
pusha
push
dec
das
pop
add
mov
inc
jo
inc
xchg
and
push
dec
mov
in
inc
pop
aam
nop
fst
add
sub
inc
das
lea
mov
xchg
test
xchg
outs
jo
inc
add
pusha
push
inc
das
inc
xchg
out
xchg
lahf
fisub
into
mov
cmps
idiv
dec
cld
cdq
data16
retf
mov
jb
or
ror
sbb
scas
vshufpd
pushf
pushf
popf
push
imul
push
(bad)
sub
ja
mov
idiv
mov
add
nop
(bad)
out
jle
push
dec
xchg
xchg
xchg
fs
mov
sub
xor
mov
stos
push
or
jb
jo
add
mov
mov
sti
movs
ret
pop
popf
psrld
jmp
pop
hlt
jo
jmp
call
jo
add
adc
in
adc
or
mov
pop
xchg
and
in
das
sub
mov
pop
xchg
in
add
xchg
(bad)
and
or
xchg
add
jp
lahf
mov
mov
shr
adc
leave
mov
sub
inc
mov
add
sub
jge
popf
push
push
enter
add
ins
add
mov
stos
mov
inc
and
mov
pop
je
adc
push
sbb
push
cdq
push
lahf
add
aaa
xchg
mov
and
outs
jae
inc
push
mov
inc
add
push
and
or
daa
add
or
loop
sub
adc
or
mov
lods
sbb
sar
in
sbb
cwde
cmp
ret
push
loope
push
mov
gs
and
adc
inc
push
aam
mov
mov
test
(bad)
popf
arpl
and
jae
sub
ins
jo
cmp
ja
jbe
popa
data16
fisubr
or
data16
retf
or
xor
dec
push
xor
mov
leave
div
inc
push
pop
xchg
push
dec
inc
clc
mov
mov
inc
inc
and
jl
inc
inc
and
(bad)
fld
or
jae
jecxz
inc
dec
inc
inc
and
(bad)
sar
loopne
mov
or
sub
mov
and
mov
sbb
pop
push
add
inc
fisttp
add
add
xlat
mov
dec
sbb
mov
enter
dec
adc
cdq
push
add
add
xchg
pop
or
call
ror
loope
dec
adc
push
xchg
and
xlat
mov
add
add
rcl
push
shl
and
shl
lea
scas
pop
or
int3
lahf
jne
push
pusha
pop
or
push
int3
add
push
cmp
xchg
or
call
mov
and
xlat
sbb
or
or
or
add
sahf
add
rcr
or
(bad)
cmp
daa
adc
and
nop
jge
and
nop
mov
test
or
and
adc
and
imul
(bad)
push
or
mov
xchg
add
cmps
adc
cmps
test
add
inc
xchg
add
sbb
xchg
adc
add
xor
mov
xor
cwde
(bad)
cmp
adc
dec
inc
xor
sub
pushf
out
mov
or
mov
add
mov
xor
dec
mov
or
push
add
and
ins
ins
or
xlat
mov
mov
and
cwde
gs
stos
pop
mov
pop
psllq
sbb
pop
test
fwait
or
popa
sbb
and
sbb
wrmsr
call
and
pop
sbb
sub
jecxz
(bad)
push
arpl
xchg
and
inc
(bad)
push
push
push
push
dec
inc
dec
push
sub
xchg
and
pop
repz
shl
ret
add
mov
xor
leave
adc
or
mov
or
mov
add
movs
movs
test
xor
test
push
div
mov
and
add
xor
mov
cmps
ror
popa
add
xor
scas
mov
retf
(bad)
fmul
fnsave
fwait
int
pop
ret
add
mov
test
mov
imul
or
and
push
or
data16
sbb
call
ss
out
in
(bad)
jmp
data16
in
loop
loopne
(bad)
xlat
mov
ins
ss
(bad)
out
mov
cdq
movs
gs
daa
pop
pop
xchg
push
xlat
mov
mov
iret
adc
add
fwait
int
shl
icebp
(bad)
out
(bad)
out
(bad)
in
stc
sbb
jmp
fldcw
fiadd
(bad)
fdivr
fcos
(bad)
jns
data16
aad
(bad)
cmc
stos
int3
(bad)
jo
or
pop
iret
repz
add
push
ss
xchg
add
pusha
inc
ja
add
fld
(bad)
(bad)
fadd
xchg
add
rcr
ins
dec
sti
cmps
retf
pop
pop
xlat
adc
push
loopne
push
fld
sbb
mov
(bad)
and
shr
idiv
hlt
(bad)
jg
lds
ret
pusha
je
cmps
(bad)
(bad)
shrd
mov
jg
add
ins
add
mov
and
adc
pop
jg
cmp
xor
ja
xor
rol
std
ja
add
fnstcw
fadd
scas
mov
dec
int
call
call
push
call
mov
ins
push
(bad)
mov
push
pop
pop
jg
rcl
iret
add
retf
stos
fldcw
enter
cmp
mov
adc
pop
ja
test
jno
xor
dec
ja
jg
int3
jbe
outs
pop
int
dec
fldcw
jmp
jmp
jmp
addr16
int3
jmp
pop
and
jmp
jno
jmp
jo
jle
push
xchg
add
mov
and
int
push
dec
xchg
dec
or
add
(bad)
(bad)
fbld
or
(bad)
fistp
sbb
jmp
addr16
ins
fild
and
and
push
int3
data16
call
sbb
sbb
sbb
xor
das
dec
push
add
cwde
xchg
pop
jno
xor
mov
xchg
dec
out
push
jb
or
add
aam
ja
fist
addr16
add
inc
repnz
jmp
jg
sub
jbe
jo
idiv
add
push
cwde
int
push
call
es
pop
add
pop
ja
and
pop
retf
mov
xor
jle
sbb
iret
cmps
es
fld
pop
jbe
push
(bad)
and
ja
sub
sub
jg
cmp
jg
pop
pop
adc
call
cmp
(bad)
jnp
ss
mov
js
ja
daa
adc
int3
pop
sub
outs
pusha
rol
push
into
xchg
data16
jg
mov
mov
bound
ja
add
pop
jg
add
jg
call
shl
ja
popa
fld
lahf
(bad)
xchg
add
dec
aaa
inc
dec
cmp
mov
shr
add
adc
rol
jg
jg
sbb
push
(bad)
jg
(bad)
stc
and
adc
or
(bad)
push
stos
add
scas
cmps
inc
cmps
aam
or
adc
pop
dec
out
pop
outs
jo
ja
xor
cvtdq2ps
pop
jg
inc
lock
fld
add
lock
add
cmp
jg
add
or
mov
ror
inc
test
add
(bad)
pop
add
jne
lods
mov
ja
popf
fild
pop
jg
add
(bad)
fld
add
mov
jbe
inc
add
dec
mov
xor
in
and
jg
add
sub
pop
inc
add
in
push
pop
sti
outs
add
out
pop
xchg
inc
jnp
les
ret
ss
xchg
pop
add
jbe
jg
add
shl
ss
and
jg
add
mov
jg
pop
pop
push
sar
add
mov
retf
add
data16
repnz
pop
rol
ja
pop
push
jmp
in
cmp
add
shl
sar
in
clc
pop
jo
jg
ja
mov
out
inc
push
mov
outs
adc
add
(bad)
cmc
xor
pop
push
hlt
xchg
push
shr
cmps
add
cli
mov
ja
into
add
pop
loopne
mov
cmp
jmp
jo
jg
jg
add
idiv
jg
adc
jg
or
xchg
js
cmp
scas
(bad)
inc
and
push
push
(bad)
scas
lahf
in
push
push
ja
add
leave
retf
xlat
add
out
mov
cmp
shr
cmp
(bad)
jle
test
mov
and
ja
adc
mov
sbb
pusha
ss
aas
pop
in
rcr
mov
xchg
mov
xor
dec
es
scas
pop
pop
add
jmp
xor
push
push
jns
jg
xor
(bad)
sub
jg
lea
ja
ja
out
push
jbe
push
jle
emms
or
mov
lods
xor
xchg
add
xchg
push
fwait
pop
dec
xchg
sbb
out
out
pop
xchg
(bad)
mov
inc
push
push
jmp
sub
imul
lock
inc
out
dec
clc
pop
xlat
add
(bad)
jg
loop
sub
scas
xor
dec
xor
popa
pop
mul
movs
jg
inc
div
push
fild
sti
xchg
xchg
ja
rsm
mov
jo
sahf
das
pop
aas
push
ror
aaa
jg
ja
sub
or
sbb
and
sahf
(bad)
jmp
push
xor
dec
sahf
jbe
xchg
scas
push
cmp
shl
ja
push
movs
sub
pop
add
lods
aaa
ss
cmps
scas
add
pop
or
shl
pop
mov
push
mov
fild
test
dec
adc
mov
test
xchg
cmp
aaa
xchg
js
lods
nop
add
push
lea
aad
pop
push
push
rcr
xchg
(bad)
daa
push
leave
xchg
daa
pop
inc
(bad)
mov
out
es
outs
pop
rcl
stos
jg
out
sbb
inc
jbe
and
imul
adc
jg
imul
dec
mov
mov
inc
div
clc
js
pcmpeqd
out
jge
jo
jle
xor
out
loope
mov
sub
out
push
inc
dec
sub
xor
cwde
jle
xchg
xchg
pop
add
les
dec
jnp
add
lahf
div
and
inc
ss
and
mov
pusha
lock
ja
ja
clc
(bad)
pop
and
dec
cmp
ins
cmps
arpl
inc
bound
pop
mov
xchg
sbb
mov
or
sbb
sub
test
adc
inc
mov
add
ja
push
add
inc
mov
add
jbe
into
add
retf
pop
outs
dec
push
out
out
(bad)
push
pop
inc
mov
sub
jno
cmp
out
or
out
cli
and
xor
dec
imul
bound
pop
push
sub
bnd
(bad)
sub
imul
ss
rcl
add
pop
fs
ror
cmp
dec
add
xor
pop
pop
jecxz
inc
xchg
neg
mov
xchg
cmp
jmp
sub
sbb
pop
xor
or
or
mov
and
imul
jnp
inc
add
inc
in
addr16
mov
movs
pop
cmps
fist
push
inc
pop
in
jecxz
pop
pop
push
cmp
mov
(bad)
in
ins
out
ss
jmp
jge
sub
inc
mov
xlat
mov
cmps
xchg
call
jg
jg
mov
test
add
mov
scas
xchg
cmp
ins
ss
sti
out
popa
rol
das
sbb
shl
(bad)
iret
pop
mov
dec
or
mov
or
outs
out
sub
jno
push
xor
ret
jmp
jle
scas
neg
push
or
pop
sbb
inc
dec
cli
pusha
mov
in
neg
dec
shr
push
in
icebp
ret
outs
addr16
or
pop
pop
jnp
jp
(bad)
cmps
pop
cmp
and
and
outs
xor
in
repnz
pop
pop
add
add
ds
ja
sar
dec
outs
and
shr
in
pusha
jo
add
xchg
and
mov
pop
popa
mov
adc
pop
mov
jg
outs
sub
jmp
ja
loop
das
inc
test
add
ins
mov
dec
mov
adc
aaa
(bad)
push
movs
jnp
ror
mov
sub
je
cmp
xchg
daa
aas
pop
outs
mov
pop
outs
xchg
mov
loopne
outs
push
out
mov
js
jle
ja
sub
pop
inc
ds
push
lds
push
jle
ds
out
jl
mov
pop
ss
iret
jecxz
rcl
pop
mov
jne
jg
pop
mov
pop
sub
and
popa
adc
sub
out
ja
loope
shl
neg
pop
sbb
call
repnz
stos
sbb
retf
push
retf
(bad)
mov
arpl
mov
in
rcr
mov
xchg
(bad)
cli
and
mov
mov
arpl
call
outs
ja
pop
cmp
push
jg
pop
or
jbe
outs
ret
push
fidivr
jo
push
sti
cmp
push
add
push
ds
cmp
push
loopne
push
(bad)
sbb
mov
aas
fcomp
or
mov
pop
sub
mov
or
cmps
ds
call
xchg
(bad)
fs
mov
addr16
add
(bad)
add
popa
out
mov
imul
add
pop
pop
(bad)
mov
jb
inc
jecxz
add
lahf
xlat
or
(bad)
jl
push
nop
xor
xchg
dec
shr
cmps
cmps
mov
push
jg
pop
add
leave
hlt
aam
rol
mov
cmps
outs
xchg
lea
lea
(bad)
push
xor
mov
add
(bad)
out
sbb
(bad)
jle
lds
fwait
in
xchg
add
mov
push
pusha
adc
inc
addr16
outs
adc
ja
ja
xor
or
fcomi
add
mov
push
add
stos
add
iret
scas
pop
shl
mov
ret
and
push
addr16
mov
sbb
xchg
jno
mov
cmp
mov
mov
jg
pop
push
(bad)
sbb
mov
cs
adc
outs
sar
sub
test
ds
mov
aaa
ja
(bad)
and
push
cmp
mov
pusha
add
add
retf
mov
mov
or
add
add
(bad)
movs
das
dec
add
mov
mov
sub
add
xchg
jg
add
or
mov
adc
data16
mov
mov
adc
outs
(bad)
cmp
pop
outs
pop
pop
not
mov
stos
pop
push
aad
add
dec
jbe
or
aaa
add
or
(bad)
inc
pusha
fld
ss
aas
pop
xchg
add
xor
add
mov
cmp
jbe
push
mov
out
pop
push
jg
mov
adc
jbe
jg
adc
xor
mov
hlt
ja
lds
outs
lock
jle
into
into
int
test
call
jbe
and
add
(bad)
cmp
xchg
cmp
ss
or
jmp
jle
into
xchg
data16
jg
xchg
adc
pop
jg
add
(bad)
sti
xchg
xchg
jg
je
shl
push
inc
push
ins
rcr
mov
or
push
ja
div
stc
mov
add
jbe
pop
jg
jbe
dec
pop
(bad)
test
(bad)
repnz
(bad)
sbb
xchg
pusha
aaa
scas
xchg
xchg
loope
icebp
mov
lock
int
dec
adc
xlat
data16
movs
sbb
ss
mov
(bad)
out
aam
jno
lds
jg
ss
int
bound
pavgw
sti
(bad)
in
(bad)
into
mov
call
iret
add
mov
mov
aaa
pop
and
push
mov
out
ins
mov
(bad)
fcompp
ins
ss
enter
mov
xor
bound
or
(bad)
cld
sub
xor
lock
sub
sub
push
cld
aas
clc
pop
lock
test
pop
shr
sgdtd
or
or
inc
ss
das
dec
outs
(bad)
sbb
mov
scas
iret
out
cmp
push
adc
xor
xor
bound
push
cmp
sub
pop
mov
cmp
xchg
fld
call
cmp
mov
and
jns
inc
gs
fs
loop
or
rcl
add
mov
rcr
dec
leave
or
aam
sub
shl
and
mov
jecxz
xchg
movs
push
mov
aaa
push
xor
cwde
xchg
sbb
pop
adc
mov
lds
jae
pop
adc
push
cmc
cs
add
xchg
mov
or
adc
sbb
ror
lds
enter
arpl
nop
sbb
pusha
xchg
nop
test
mov
ja
add
adc
mov
and
nop
xor
pop
je
add
loope
mov
dec
xor
or
xchg
cmp
xchg
add
cmp
dec
add
mov
shl
xchg
dec
mov
rol
and
add
add
push
jb
push
add
add
push
jb
add
jo
xchg
sub
or
mov
mov
or
les
add
outs
test
push
popa
imul
add
dec
imul
and
mov
or
sub
add
in
sbb
inc
cwde
cmp
dec
add
test
jge
or
add
xor
inc
mov
cwde
add
jae
ins
jl
sbb
jo
and
jns
sub
or
or
xor
sbb
sub
sub
dec
xchg
xor
jb
xor
jmp
(bad)
sbb
mov
push
stos
add
add
xor
push
or
jle
mov
outs
inc
jl
nop
cmc
push
gs
sbb
push
cmp
dec
inc
ret
sbb
adc
mov
adc
add
push
sahf
imul
or
sbb
and
scas
sbb
mov
inc
pop
aas
push
and
or
or
add
out
mov
jbe
imul
inc
or
imul
ja
push
pop
xor
add
sbb
adc
xor
test
sub
push
fbstp
cdq
ret
mov
pop
sbb
pop
sub
push
inc
loop
push
and
fadd
rol
sub
sbb
pusha
and
dec
adc
pop
aaa
nop
dec
adc
cmps
outs
inc
mov
stc
sbb
push
mov
lea
mov
bound
inc
daa
dec
sbb
ss
mov
inc
aad
pop
fimul
sbb
ins
mov
adc
jno
mov
scas
or
mov
ret
adc
fs
fwait
xchg
sbb
mov
adc
pop
pop
sub
shl
dec
fs
and
or
and
popa
mov
push
sub
adc
lahf
add
adc
rol
mov
mov
sub
aaa
and
add
xor
jo
push
sbb
push
jne
push
mov
sub
push
xchg
aaa
fadd
test
daa
jnp
daa
pop
and
inc
xor
jg
lea
sbb
mov
cmp
rcr
arpl
fcomp
pop
aaa
sbb
sbb
pop
push
xor
rol
imul
imul
jbe
adc
jns
out
adc
jl
push
test
xchg
add
leave
stc
pop
push
scas
es
(bad)
pop
xchg
icebp
shr
inc
outs
dec
mov
in
enter
or
sbb
sub
and
ret
scas
lds
add
and
in
xor
test
sub
outs
push
loope
mov
jle
lods
inc
add
and
in
sbb
(bad)
shl
add
sub
test
push
dec
fisttp
repz
loop
xchg
cmps
sub
adc
sub
jns
test
loop
inc
inc
into
out
test
loop
or
inc
int
fsub
pusha
mov
cmp
add
les
pop
add
popa
arpl
arpl
sub
jns
mov
jns
sti
mov
xchg
push
sbb
pop
push
aas
and
lods
popa
or
test
or
ins
in
pop
sub
jo
push
dec
ja
data16
(bad)
pop
jo
and
sbb
mov
dec
gs
(bad)
jbe
or
xor
push
or
in
pop
fmul
pop
ja
pop
inc
add
aam
fild
and
imul
push
inc
test
or
sbb
jbe
pop
adc
adc
mul
lds
jo
sbb
mov
sub
xor
sbb
sub
test
pop
push
pop
out
cmc
push
sub
sub
(bad)
jecxz
xor
ins
jmp
bound
test
fisubr
or
xor
sub
in
es
xor
xor
ror
retf
bound
clc
and
fs
sub
cmps
mov
pop
and
jge
or
xchg
and
sub
push
and
frstor
mov
adc
jne
cmp
outs
xor
jecxz
shr
adc
push
add
hlt
imul
sub
sub
sub
test
mov
inc
inc
add
rcr
arpl
add
neg
sbb
in
(bad)
ret
mov
mov
push
or
pop
arpl
outs
aaa
fsubr
leave
push
dec
sub
adc
inc
xor
mov
fs
mov
sub
sub
mov
jl
or
adc
xor
pusha
xor
movs
push
sbb
call
pop
popa
sub
dec
ins
mov
sub
mov
jno
or
xor
dec
arpl
and
dec
movs
push
push
add
mov
rol
inc
in
arpl
or
mov
and
pop
clc
imul
movs
ficom
ss
aaa
in
fs
jge
movs
mov
inc
ins
xor
dec
loopne
inc
mov
out
push
xor
scas
xlat
outs
pop
dec
or
mov
imul
clc
dec
in
test
xor
sbb
(bad)
sti
adc
std
push
dec
push
xor
cmps
dec
jg
cmps
adc
jo
push
retf
ins
adc
mov
pop
ins
push
push
(bad)
call
xchg
stos
xchg
bound
add
cmp
sbb
ss
mov
and
sbb
push
lock
inc
push
mov
inc
or
sub
xchg
add
dec
fisubr
adc
sti
sbb
sub
or
ficom
cmp
adc
rol
push
nop
jo
mov
daa
and
pusha
or
popf
(bad)
cmc
cmp
and
ror
loop
mov
inc
inc
sbb
stc
retf
setnp
xor
pop
mov
add
movs
sbb
movs
inc
pop
adc
jecxz
fisttp
outs
or
adc
jnp
outs
gs
mov
mov
dec
ret
cmp
and
stos
fwait
cmp
sub
out
xor
jo
retf
(bad)
in
int
sbb
nop
xor
out
push
rol
mov
std
adc
inc
push
cmp
imul
ins
or
add
test
xchg
or
jecxz
cmp
pop
inc
nop
push
jge
xor
pop
sub
add
ins
sub
loop
jmp
mov
cmove
push
inc
in
(bad)
dec
push
fwait
push
popa
pop
sahf
loope
and
pop
sbb
jne
push
sbb
mov
arpl
mov
aaa
sbb
movs
inc
out
mov
dec
jnp
xchg
mov
jo
push
push
pcmpeqd
call
inc
mov
rol
sub
fwait
addr16
and
pop
inc
loopne
sub
jmp
push
xchg
loop
popa
jne
fnstenv
jo
out
adc
std
add
(bad)
int
test
in
gs
xchg
sbb
sbb
push
add
add
sbb
cmp
dec
pop
dec
add
pushf
and
sar
popf
add
popf
xor
ins
jnp
cmp
sub
dec
(bad)
or
rcr
and
leave
ds
inc
bndstx
xchg
rcr
adc
inc
and
in
lods
lahf
pop
popf
or
cdq
dec
or
scas
or
sbb
lods
imul
dec
data16
bound
jl
inc
xor
dec
pop
les
test
mov
sub
imul
xor
and
dec
nop
imul
xlat
sbb
inc
cmp
mov
pusha
das
sbb
movq
push
sub
push
xor
int
fst
pop
dec
fmul
sub
and
mov
pop
cmps
jne
mov
cmp
lahf
mov
adc
mov
sbb
outs
push
inc
sbb
daa
cmp
pop
pop
and
popf
ss
rep
enter
pop
push
jo
sbb
jbe
xchg
sar
nop
rol
jae
adc
sub
cmp
outs
lea
sbb
mov
mov
lea
sub
scas
cmps
push
inc
cwde
inc
xchg
ret
pop
cmp
lock
fistp
sbb
jae
inc
xor
pop
sar
add
inc
push
pop
cmps
mov
addr16
sbb
mov
cwde
or
xor
fsub
sbb
adc
xlat
into
test
rcl
mov
loope
popa
fld
sub
push
enter
add
sbb
sbb
mov
shl
pop
sub
inc
shl
push
xor
push
inc
sbb
push
test
add
sbb
fisub
std
nop
xchg
ins
cmp
mov
xor
push
adc
jmp
movs
daa
push
cli
push
fs
mov
in
ss
rcr
imul
lea
xor
pextrw
data16
dec
jae
sbb
mov
mov
add
imul
xlat
std
jae
mov
push
ss
add
dec
dec
jb
pop
fld
movs
adc
fcomp
add
dec
mov
jns
pop
push
adc
inc
cmps
test
mov
add
rcr
dec
adc
mov
add
add
in
xor
rol
sbb
das
mov
and
data16
jae
pop
xor
mov
and
sbb
retf
pop
fisttp
mov
int
jge
int
icebp
mov
jns
mov
xor
and
sbb
mov
pop
xlat
jbe
bound
inc
jb
adc
inc
jne
(bad)
xlat
jnp
in
ficomp
mov
outs
repz
pop
mov
sbb
and
add
mov
sbb
xchg
push
mov
movs
mul
fsubr
loop
and
aaa
xchg
pop
fnstenv
inc
cwde
rcr
ins
addr16
pop
lea
mov
adc
and
xor
and
adc
pop
mov
loopne
icebp
sbb
sub
test
push
loope
mov
fdivr
jmp
retf
and
imul
mov
dec
icebp
adc
sub
sbb
test
sbb
add
xchg
push
retf
sub
jae
ficom
adc
sub
sub
dec
pop
adc
shl
or
mov
dec
lea
adc
or
outs
mov
jecxz
ins
dec
mov
xchg
sbb
inc
sub
mov
sub
data16
cmps
in
and
inc
fiadd
or
adc
pop
pusha
pop
jmp
dec
rol
adc
ret
inc
sub
imul
ret
rcr
gs
lods
push
pop
pop
dec
daa
dec
dec
sub
pop
pop
popa
loopne
loope
adc
adc
add
jns
add
jo
aas
mov
frstor
lods
rcr
out
push
xchg
pop
adc
sub
pop
pop
sbb
(bad)
mov
and
fwait
mov
dec
sbb
or
js
bound
stos
adc
cmps
pop
stos
inc
fiadd
mov
cdq
leave
xadd
or
pop
mov
push
mov
xor
outs
inc
jae
push
and
and
jb
xor
imul
xchg
aaa
ret
dec
ins
mov
sbb
pop
jecxz
and
xor
push
or
dec
xchg
fs
or
add
inc
(bad)
test
add
dec
add
mov
psubw
mov
pop
pop
lods
pop
sbb
int3
jo
std
daa
xor
push
adc
ror
popw
out
fs
sub
mov
inc
packuswb
or
sbb
in
movs
sbb
push
packsswb
adc
fsubr
add
mov
inc
dec
push
sbb
int
ins
scas
mov
and
pushf
cmp
pushf
cs
scas
mov
test
push
pusha
cs
repz
mov
call
add
mov
mov
(bad)
cs
mul
xor
nop
add
ret
ret
imul
inc
lock
lahf
fs
xchg
cmp
jo
(bad)
dec
or
je
jae
out
xor
enter
jb
daa
pop
dec
add
inc
dec
gs
movs
stc
dec
out
add
inc
jae
rcr
(bad)
mov
mov
sbb
cmc
sbb
mov
add
add
inc
inc
add
add
add
bound
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
imul
fldcw
or
push
