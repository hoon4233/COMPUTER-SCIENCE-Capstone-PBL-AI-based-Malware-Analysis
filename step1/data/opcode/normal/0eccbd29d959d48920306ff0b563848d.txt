sub
add
add
add
add
add
add
add
add
add
jbe
add
xchg
add
sub
movs
add
push
sub
add
add
sub
add
or
add
add
add
add
push
add
sbb
add
sub
jle
add
add
add
sub
add
pop
add
push
sub
add
or
add
add
add
add
push
add
sbb
add
sub
jle
add
add
add
sub
jle
add
or
add
add
add
add
push
jge
add
add
add
jnp
add
add
pop
add
or
add
or
inc
sub
add
sbb
add
sbb
add
add
add
sub
add
or
push
or
push
sub
add
or
or
and
add
fiadd
pop
sub
add
adc
add
add
add
or
push
dec
add
add
xor
add
add
adc
outs
and
add
or
sub
add
or
outs
add
or
ror
shl
push
outs
daa
add
or
add
sbb
or
add
add
adc
outs
sub
add
sub
sub
push
outs
sub
add
fadd
outs
or
add
cmp
add
add
add
add
sub
add
sub
add
sub
add
add
sub
add
sub
sub
add
or
add
or
xor
add
or
(bad)
retf
sub
xor
add
or
add
or
xor
add
adc
add
xor
add
outs
xor
or
test
mov
scas
add
push
sub
add
push
outs
add
or
add
or
sub
add
outs
add
or
add
or
sub
add
outs
add
or
add
or
cmp
add
outs
xor
or
in
shl
push
outs
xor
or
xchg
retf
sub
lea
add
adc
outs
cmp
add
mov
outs
cmp
add
mov
add
mov
outs
cmp
push
add
add
outs
add
or
adc
or
add
or
or
or
add
push
outs
xor
add
add
or
(bad)
lea
add
push
push
outs
inc
add
or
mov
scas
add
push
adc
sub
add
adc
add
or
adc
cmp
or
or
adc
adc
outs
and
add
push
test
add
adc
and
add
push
outs
inc
add
or
or
or
xor
adc
adc
and
add
push
outs
inc
add
or
pop
sub
or
or
add
or
fidiv
pop
adc
adc
and
shl
push
outs
inc
add
or
pop
sub
adc
adc
adc
and
shl
push
outs
inc
add
or
pop
sub
and
mov
scas
add
push
outs
inc
add
or
pop
adc
pop
(bad)
adc
adc
adc
mov
dec
adc
outs
xor
or
jle
shl
push
outs
xor
sub
add
push
outs
inc
add
or
jnp
add
add
outs
inc
add
or
outs
inc
add
or
(bad)
sub
add
or
or
and
add
fiadd
sub
inc
xor
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
or
or
pop
add
add
add
add
outs
pop
add
or
add
or
xor
sub
jnp
add
add
or
push
add
dec
add
or
outs
or
add
sub
sub
add
push
outs
inc
add
or
jnp
add
add
sub
add
sub
add
pop
outs
inc
add
or
or
and
add
sub
add
or
add
add
add
add
and
sub
or
add
add
xor
add
add
add
add
add
add
or
add
or
xor
sub
jnp
add
add
or
push
add
dec
add
or
outs
or
add
sub
sub
add
push
outs
inc
add
or
jnp
add
add
pop
outs
inc
add
or
or
and
add
sub
add
or
add
add
add
add
add
and
and
or
add
add
add
sbb
adc
pop
add
add
add
add
adc
add
adc
add
add
or
adc
push
mov
add
add
dec
add
or
add
adc
add
adc
jnp
add
add
dec
add
or
dec
add
or
add
add
or
add
add
add
add
push
add
push
sub
sub
shl
push
adc
add
cmp
outs
push
add
or
or
or
push
add
or
add
or
add
or
or
push
add
or
push
add
or
or
push
add
or
push
add
or
dec
add
or
mov
scas
add
push
outs
inc
add
or
or
push
add
or
push
add
or
mov
scas
add
push
outs
inc
add
or
xor
jle
add
or
adc
add
add
xor
add
add
add
add
add
add
or
lea
push
push
pop
and
add
or
jle
add
or
cmp
shl
push
outs
push
add
or
add
adc
add
add
jecxz
add
adc
add
add
pop
jle
add
or
repnz
shl
push
adc
sub
add
outs
push
add
or
and
scas
add
push
outs
push
add
or
mov
adc
pop
adc
push
adc
sub
adc
adc
mov
adc
or
mov
shl
push
outs
push
add
or
add
or
add
or
or
add
or
das
add
push
adc
pop
(bad)
adc
adc
adc
mov
sub
jle
add
or
sub
add
push
xor
and
scas
add
push
outs
push
add
or
shl
push
outs
push
add
or
add
or
push
sub
add
push
xor
or
add
or
outs
pop
add
or
sub
push
pop
(bad)
adc
adc
adc
(bad)
(bad)
dec
sub
or
add
or
outs
pop
add
or
sub
sbb
add
sbb
add
add
add
sub
add
or
push
or
push
sub
add
or
or
and
add
fiadd
pop
sub
add
add
add
add
or
add
dec
add
add
xor
add
add
add
push
add
push
sub
sub
add
outs
das
add
or
sub
add
and
shl
push
sub
or
push
sub
add
sub
shl
push
adc
push
sub
add
push
push
sub
add
or
add
or
add
or
sub
add
sub
and
retf
shl
push
add
popa
add
or
push
sub
add
push
sub
add
adc
or
push
add
adc
push
add
push
sub
and
retf
shl
push
or
sbb
add
sub
and
enter
scas
add
push
or
pop
add
or
add
or
sub
add
outs
add
or
outs
add
or
add
or
shl
push
and
scas
add
push
push
sub
add
adc
push
sub
add
push
sub
xor
pop
add
add
add
adc
add
or
add
or
xor
add
or
outs
add
or
add
or
push
enter
scas
add
push
push
sub
add
push
add
sub
and
shl
push
outs
daa
add
or
add
or
add
sub
add
push
outs
pop
add
or
add
add
add
xor
add
add
add
add
adc
outs
and
add
pop
(bad)
lea
add
or
lea
add
or
lea
add
or
push
pop
adc
or
pop
push
pushf
or
pop
js
or
and
or
and
or
int
add
pushf
or
add
add
and
shl
push
push
push
outs
add
or
add
or
jae
add
or
add
sub
add
or
add
or
add
pop
or
add
or
jae
add
or
push
adc
push
push
push
mov
or
push
outs
outs
add
or
data16
or
pop
adc
adc
or
add
or
or
sbb
or
or
or
add
or
or
and
add
fiadd
adc
sub
or
add
add
add
push
add
add
dec
add
add
xor
add
add
add
add
sub
add
or
add
or
pop
add
or
add
or
add
or
xor
add
outs
jae
add
outs
add
or
push
shl
push
outs
je
add
sub
xor
mov
add
or
add
add
sub
jne
add
sub
add
push
or
outs
jbe
add
outs
pop
add
or
add
or
adc
shl
push
push
sub
add
push
cs
push
outs
jbe
add
outs
pop
add
or
add
or
add
scas
add
push
push
sub
add
push
cs
enter
scas
add
push
sub
add
sub
add
push
sub
add
and
leave
shl
push
sub
add
sub
add
es
sub
add
sub
xor
add
add
add
outs
jb
add
or
add
add
push
add
push
sub
add
adc
or
test
add
adc
sbb
add
or
add
or
sub
add
push
adc
pop
or
jp
add
push
sub
add
add
push
or
add
add
push
sub
add
add
jmp
shl
push
push
outs
or
add
outs
or
and
scas
add
push
pop
or
popa
add
or
outs
or
sub
add
sub
add
sub
add
push
sub
add
and
leave
shl
push
sub
add
sub
add
es
sub
or
pop
pop
or
jns
add
sub
add
dec
verw
jge
add
add
add
push
sub
add
or
fadd
add
add
add
add
cs
add
cs
or
push
add
push
sub
add
push
sub
sub
add
push
adc
sub
add
push
sub
and
scas
add
push
push
add
push
sub
add
push
cmp
inc
add
add
add
add
or
add
sub
pop
or
jp
add
sub
pop
push
sub
add
push
add
dec
push
add
pop
leave
shl
push
push
outs
or
add
dec
leave
shl
push
add
sub
add
push
outs
or
add
popf
leave
shl
push
add
cmp
add
sub
add
push
outs
or
dec
leave
shl
push
add
sub
add
sub
add
sub
add
add
jl
add
sub
add
jns
add
sub
xor
add
add
or
add
add
and
add
or
outs
jle
add
mov
(bad)
lea
add
or
pop
push
pop
mov
or
add
jae
add
or
add
or
pop
outs
add
or
outs
add
or
pop
or
add
or
sub
add
adc
add
add
add
add
add
add
adc
or
pop
add
add
add
adc
add
or
add
or
xor
add
or
push
outs
cmp
add
outs
daa
add
or
add
or
mov
scas
add
push
jle
add
or
add
or
jl
shl
push
add
test
add
adc
sub
add
or
pop
add
add
or
sub
add
xor
add
add
sub
or
add
or
xor
add
or
sub
add
outs
inc
add
or
add
or
add
or
outs
add
or
pop
add
or
pop
sub
add
sub
add
or
pop
and
mov
scas
add
push
push
outs
cmp
add
add
arpl
add
sub
or
pop
sub
add
add
dec
add
or
or
inc
add
or
and
add
sbb
das
add
add
add
push
add
push
sub
and
leave
shl
push
add
lea
push
push
pop
pop
popf
push
outs
push
add
or
mov
sub
add
add
push
sub
add
push
cmp
adc
add
es
add
or
jae
add
or
outs
mov
add
or
add
add
mov
add
adc
add
push
add
or
sub
add
push
xor
pop
outs
xor
add
or
add
or
cmp
add
adc
or
shl
push
outs
inc
add
or
add
pop
adc
adc
or
add
or
jl
shl
push
push
sub
add
push
xor
pop
outs
xor
add
sub
pop
adc
adc
or
add
or
add
or
or
add
add
or
add
or
add
or
sub
or
add
xor
adc
sub
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
add
add
outs
sub
add
fsubr
add
or
add
or
xor
add
adc
jae
add
push
adc
adc
and
leave
shl
push
sbb
adc
adc
push
adc
outs
cmp
add
mov
push
outs
cmp
add
mov
add
mov
push
outs
cmp
push
add
add
push
outs
add
or
adc
sub
add
or
add
push
adc
and
into
shl
push
adc
outs
cmp
add
add
arpl
add
outs
pop
add
push
adc
pop
outs
inc
add
or
add
push
adc
or
add
or
add
push
adc
add
push
adc
outs
lea
add
es
or
shl
add
add
mov
add
add
push
sub
mov
add
add
add
or
pop
add
sub
shl
push
adc
push
sub
add
push
sub
adc
add
sbb
add
add
mov
add
add
add
or
pop
add
or
sub
add
or
sub
xor
add
add
add
add
adc
pop
lea
push
push
pop
cs
push
outs
push
add
or
pop
lea
add
or
push
add
mov
shl
push
jle
add
or
add
or
nop
add
or
or
pop
add
xchg
add
or
xchg
add
or
xchg
add
or
adc
adc
add
push
adc
sub
add
push
or
or
adc
sub
adc
adc
mov
adc
adc
adc
outs
xchg
add
or
xor
or
(bad)
adc
adc
adc
mov
pop
(bad)
adc
mov
and
or
or
adc
sub
add
or
add
sub
pop
sub
adc
add
add
add
add
add
add
xchg
add
or
cmps
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
add
jle
add
add
call
push
add
add
fwait
add
or
cs
add
add
pushf
add
or
cs
add
add
popf
add
or
push
add
sahf
add
or
sbb
add
add
sub
adc
add
cmp
add
sldt
adc
add
add
sub
and
mov
scas
add
push
ror
add
add
mov
mov
mov
push
or
add
or
add
sbb
add
add
add
add
sub
xor
add
add
add
adc
xor
add
and
mov
scas
add
push
jle
add
add
mov
movs
add
or
push
je
add
add
add
adc
add
add
add
add
adc
xor
add
and
shl
push
jle
add
add
mov
movs
add
or
push
je
add
add
add
cs
add
push
or
add
sbb
add
call
adc
add
or
or
add
sub
mov
pop
sub
add
push
sub
jle
add
add
adc
sub
or
add
xchg
add
push
or
push
push
dec
add
add
pop
add
or
jae
add
or
outs
cmps
add
or
outs
test
add
jae
add
or
stos
add
or
add
add
or
add
imul
or
add
stos
add
or
sub
lods
add
or
add
or
add
or
or
add
sub
cmp
add
adc
push
adc
or
add
outs
scas
add
or
adc
pop
adc
outs
scas
add
or
adc
scas
add
or
adc
shr
add
or
adc
outs
scas
add
or
adc
push
arpl
outs
scas
add
or
adc
add
or
push
pop
sbb
outs
scas
add
or
outs
scas
add
or
pop
push
push
or
adc
sub
adc
or
or
add
or
adc
adc
adc
pop
adc
pop
adc
adc
adc
pop
or
popa
adc
or
or
outs
mov
add
adc
pop
pop
adc
adc
adc
xor
adc
adc
sbb
pop
adc
adc
adc
pop
push
fs
adc
adc
adc
pop
push
bound
or
or
push
and
cmp
ffreep
into
fiadd
add
add
outs
xchg
add
push
push
adc
fimul
adc
sub
adc
sub
push
inc
xor
add
add
add
add
add
add
add
sldt
add
add
add
add
sub
add
add
add
add
add
add
xor
add
add
adc
add
or
or
add
sub
mov
pop
sub
add
push
sub
add
push
or
lea
add
or
push
push
rcr
arpl
pushf
pop
sbb
pop
cmp
pushf
pop
sbb
pop
xor
pushf
pop
sbb
pop
and
pushf
pop
sbb
pop
sbb
pushf
pop
sbb
pop
adc
pushf
pop
sbb
pushf
add
sub
add
(bad)
sbb
add
and
add
or
shl
sbb
pop
or
sub
sub
add
push
sub
sub
xor
add
add
adc
add
jae
add
or
push
sbb
add
or
pop
sub
pop
outs
mov
add
sub
adc
or
or
add
or
add
add
sub
add
sub
sub
outs
mov
or
add
sub
mov
add
sub
sub
push
add
add
or
sahf
add
mov
add
add
jae
add
or
mov
push
jge
add
add
outs
add
push
sub
xor
and
add
add
add
add
add
add
add
or
jnp
add
add
sub
add
fimul
add
sub
sub
add
adc
add
add
add
sbb
or
add
add
xor
ins
or
add
add
ror
mov
mov
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
push
outs
ret
or
outs
push
add
push
outs
ret
add
or
outs
dec
add
push
outs
ret
add
or
outs
ret
or
outs
aas
add
push
pop
outs
les
add
add
add
push
adc
pop
ss
sbb
or
outs
mov
or
outs
aas
add
push
and
into
shl
push
outs
mov
aas
add
push
adc
pop
sub
or
or
outs
leave
add
or
outs
aas
add
push
push
outs
retf
or
outs
aas
add
push
and
into
shl
push
outs
retf
add
or
outs
inc
add
push
pop
or
or
outs
inc
add
push
adc
pop
ss
das
sub
add
or
outs
mov
or
outs
inc
add
push
and
into
shl
push
outs
mov
inc
add
push
adc
and
add
add
or
or
outs
leave
add
or
outs
inc
add
push
push
outs
retf
or
outs
inc
add
push
and
into
shl
push
outs
retf
add
or
outs
inc
add
push
pop
outs
les
add
add
add
push
adc
pop
ss
inc
sub
add
or
outs
mov
or
outs
inc
add
push
and
iret
shl
push
outs
mov
inc
add
push
adc
pop
push
pop
sbb
enter
or
add
or
outs
inc
add
push
push
outs
retf
or
outs
inc
add
push
and
iret
shl
push
outs
retf
add
or
outs
inc
add
push
pop
outs
les
add
add
add
push
adc
pop
push
pop
inc
sub
add
or
outs
mov
or
outs
inc
add
push
and
iret
shl
push
outs
mov
inc
add
push
adc
pop
aaa
pop
sbb
enter
or
add
or
outs
inc
add
push
push
outs
retf
or
outs
inc
add
push
and
scas
add
push
outs
retf
add
or
outs
inc
add
push
pop
outs
les
add
add
add
push
adc
pop
and
lds
add
pop
outs
mov
or
outs
inc
add
push
and
scas
add
push
outs
mov
inc
add
push
adc
pop
das
pop
or
or
outs
leave
add
or
outs
inc
add
push
push
outs
retf
or
outs
inc
add
push
and
shl
push
outs
retf
add
or
outs
dec
add
push
pop
or
or
outs
dec
add
push
adc
pop
and
lds
add
pop
outs
mov
or
outs
dec
add
push
and
shl
push
outs
mov
dec
add
push
adc
and
add
add
or
or
outs
leave
add
or
outs
dec
add
push
push
outs
retf
or
outs
dec
add
push
and
shl
push
outs
retf
add
or
outs
dec
add
push
pop
or
add
or
outs
dec
add
push
adc
and
or
lds
add
pop
outs
mov
or
outs
dec
add
push
and
iret
shl
push
outs
mov
dec
add
push
adc
pop
dec
pop
pop
sub
add
or
outs
leave
add
or
outs
dec
add
push
pop
outs
retf
or
outs
dec
add
push
and
iret
shl
push
outs
int
add
add
add
push
pop
outs
into
add
or
outs
dec
add
push
sub
add
or
add
or
outs
dec
add
push
outs
rol
add
add
add
push
outs
rol
add
add
add
push
sbb
add
or
outs
dec
add
push
adc
push
and
add
add
lds
add
pop
outs
mov
or
outs
dec
add
push
and
iret
shl
push
outs
mov
dec
add
push
adc
and
add
add
sub
enter
or
add
or
outs
dec
add
push
sbb
add
or
outs
push
add
push
pop
outs
les
add
add
add
push
adc
pop
pusha
and
lds
add
pop
outs
mov
or
outs
push
add
push
and
iret
shl
push
outs
mov
push
add
push
adc
pop
dec
pop
or
or
outs
leave
add
or
outs
push
add
push
sbb
add
or
outs
push
add
push
pop
outs
aam
add
add
add
push
and
iret
shl
push
outs
aad
add
add
add
push
pop
outs
les
add
add
add
push
adc
pop
ss
jbe
lds
add
pop
outs
mov
or
outs
push
add
push
and
int3
shl
push
outs
mov
push
add
push
adc
and
or
or
outs
leave
add
or
outs
push
add
push
push
outs
retf
or
outs
push
add
push
and
int3
shl
push
outs
retf
add
or
outs
push
add
push
pop
outs
les
add
add
add
push
adc
pop
and
lds
add
pop
outs
mov
or
outs
push
add
push
and
scas
add
push
outs
mov
push
add
push
adc
pop
sub
or
or
outs
leave
add
or
outs
push
add
push
push
outs
retf
or
outs
push
add
push
and
scas
add
push
outs
retf
add
or
outs
push
add
push
pop
or
add
or
outs
push
add
push
push
and
scas
add
push
outs
(bad)
add
or
add
outs
xlat
add
or
outs
push
add
push
push
outs
fadd
add
add
add
push
adc
and
add
add
sub
add
or
outs
mov
or
outs
push
add
push
and
shl
push
outs
mov
push
add
push
adc
pop
cmp
es
add
or
outs
leave
add
or
outs
push
add
push
sbb
add
or
outs
push
add
push
push
outs
fiadd
add
add
add
push
sub
fild
add
add
add
push
adc
sbb
sub
add
or
outs
mov
or
outs
dec
add
push
and
shl
push
outs
mov
dec
add
push
adc
pop
es
dec
sub
add
or
outs
leave
add
or
outs
dec
add
push
sbb
add
or
outs
dec
add
push
push
outs
fiadd
add
add
add
add
rol
add
sub
add
or
outs
fld
add
add
outs
fiadd
add
add
fild
add
outs
loopne
add
add
add
adc
add
and
add
add
enter
or
add
or
outs
rol
add
add
add
push
outs
rol
add
add
add
or
outs
push
add
push
outs
rol
add
add
add
or
outs
dec
add
push
outs
rol
add
add
add
or
outs
inc
add
push
outs
rol
add
add
add
or
outs
inc
add
push
outs
rol
add
add
add
or
outs
inc
add
push
outs
rol
add
add
add
or
outs
dec
add
push
outs
rol
add
add
add
or
outs
push
add
push
outs
rol
add
add
add
or
outs
push
add
push
outs
rol
add
add
add
or
outs
inc
add
push
outs
rol
add
add
add
or
outs
aas
add
push
outs
rol
add
add
add
or
outs
dec
add
push
outs
rol
add
add
outs
loop
add
add
outs
jecxz
add
add
outs
in
add
add
addr16
shl
push
outs
mov
outs
in
add
add
outs
out
add
add
outs
out
add
add
addr16
shl
push
outs
call
pop
outs
jmp
outs
dec
add
push
push
outs
jmp
add
push
outs
jmp
add
add
add
push
outs
jmp
add
add
outs
jmp
add
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
adc
add
add
add
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
in
add
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
out
add
or
add
push
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
and
add
jae
add
or
add
add
add
or
jnp
add
add
outs
lock
or
add
add
add
jnp
add
add
or
jnp
add
add
outs
icebp
add
or
add
push
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
outs
call
add
add
add
add
push
add
add
or
add
add
add
push
add
add
or
add
add
add
push
add
add
or
add
add
add
push
add
add
or
add
adc
out
add
add
pop
add
adc
add
add
push
outs
repnz
or
adc
sub
add
or
fadd
outs
inc
add
push
outs
hlt
add
or
add
add
push
outs
repnz
or
adc
sub
add
or
outs
inc
add
push
outs
repnz
or
add
repz
or
add
add
push
outs
hlt
add
or
(bad)
outs
cmc
add
or
outs
inc
add
push
add
add
or
outs
inc
add
push
outs
repnz
or
adc
sub
add
or
fcomp
outs
cmc
add
or
adc
add
outs
test
or
test
add
add
push
outs
clc
add
or
outs
inc
add
push
outs
stc
add
or
add
or
push
adc
sub
add
or
pop
adc
sub
add
or
add
add
add
add
push
outs
hlt
add
or
std
add
or
inc
add
mov
add
add
add
add
push
outs
inc
add
adc
add
add
add
push
outs
clc
add
or
or
push
add
or
push
add
or
add
or
add
add
push
outs
clc
add
or
lea
or
or
pop
or
push
add
or
add
or
add
add
and
shl
push
outs
retf
add
or
push
outs
push
add
push
push
outs
add
add
add
add
push
outs
test
or
test
add
add
push
outs
clc
add
or
outs
dec
add
push
outs
stc
add
or
add
or
push
adc
sub
add
or
pop
adc
sub
add
or
add
add
add
add
push
outs
hlt
add
or
std
add
or
inc
add
mov
add
add
add
add
push
outs
inc
add
adc
add
add
add
push
adc
add
add
push
outs
repnz
or
add
repz
or
outs
inc
add
push
outs
repnz
or
adc
sub
add
or
outs
inc
add
push
outs
inc
add
(bad)
pop
adc
sub
add
or
outs
mov
or
outs
inc
add
push
adc
add
add
push
outs
repnz
or
adc
sub
add
or
outs
inc
add
push
outs
hlt
add
or
add
add
push
outs
repnz
or
add
add
add
sub
add
or
outs
mov
or
outs
push
add
push
add
add
push
outs
clc
add
or
add
or
sbb
shl
push
outs
je
add
outs
add
add
add
add
push
add
add
push
outs
clc
add
or
add
or
sbb
shl
push
outs
je
add
outs
add
add
add
add
push
add
add
push
outs
clc
add
or
add
or
sbb
shl
push
outs
je
add
outs
add
add
add
add
push
outs
add
add
cmp
add
add
add
push
adc
add
add
push
outs
repnz
or
add
repz
or
outs
inc
add
push
outs
repnz
or
adc
sub
add
or
outs
inc
add
push
outs
inc
add
(bad)
pop
adc
sub
add
or
outs
mov
or
outs
push
add
push
adc
add
add
push
outs
repnz
or
add
repz
or
outs
push
add
push
outs
repnz
or
adc
sub
add
or
outs
push
add
push
outs
inc
add
(bad)
sub
add
or
outs
mov
or
outs
push
add
push
adc
add
add
push
outs
repnz
or
adc
sub
add
or
outs
push
add
push
outs
hlt
add
or
add
add
push
outs
repnz
or
add
add
add
sub
add
or
outs
mov
or
outs
inc
add
push
adc
add
add
push
outs
repnz
or
add
repz
or
outs
push
add
push
outs
repnz
or
adc
sub
add
or
outs
push
add
push
outs
inc
add
(bad)
pop
adc
sub
add
or
outs
mov
or
dec
add
add
push
adc
add
add
push
outs
repnz
or
add
repz
or
outs
inc
add
push
outs
repnz
or
adc
sub
add
or
outs
inc
add
push
outs
inc
add
(bad)
pop
adc
sub
add
or
outs
mov
or
outs
dec
add
push
adc
add
add
push
outs
repnz
or
add
repz
or
outs
inc
add
push
outs
repnz
or
adc
sub
add
or
outs
inc
add
push
outs
inc
add
(bad)
sbb
sub
add
or
outs
mov
or
outs
inc
add
push
add
add
push
outs
clc
add
or
add
or
sub
add
push
inc
push
inc
outs
add
add
add
add
push
add
add
push
outs
clc
add
or
add
or
sub
add
push
inc
push
inc
outs
add
add
add
add
push
outs
clc
add
or
add
or
sub
add
push
cs
outs
dec
add
push
outs
repnz
or
adc
sub
add
or
outs
dec
add
push
outs
inc
add
(bad)
add
add
push
outs
inc
add
(bad)
pop
sub
outs
add
add
sub
add
outs
inc
add
push
outs
repnz
or
adc
sub
add
or
outs
dec
add
push
outs
inc
add
(bad)
pop
adc
outs
add
add
sub
add
add
or
push
add
add
push
sub
or
shl
push
sub
sub
add
xor
add
add
add
add
add
sbb
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jle
add
or
add
add
add
add
add
jnp
add
add
outs
or
add
add
add
add
outs
or
add
sub
add
jnp
add
add
outs
or
add
jnp
add
add
add
jnp
add
add
outs
or
add
add
jno
add
xor
jnp
add
add
or
add
sub
add
adc
or
mov
add
adc
add
push
or
or
add
add
add
sub
pop
add
jl
shl
push
jle
add
or
add
or
test
mov
scas
add
push
jle
add
or
add
or
add
add
adc
add
sub
outs
push
add
or
add
add
add
add
push
add
je
add
push
add
add
push
push
jge
add
add
push
pop
jge
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
add
add
push
or
jge
add
push
or
add
or
jnp
add
add
outs
or
add
sub
add
and
add
add
add
add
add
xor
add
add
add
sbb
adc
add
aas
rol
add
add
jnp
add
add
or
add
pop
fidivr
jle
add
or
add
add
add
outs
or
add
jnp
add
add
xor
jnp
add
add
outs
or
add
jnp
add
add
sbb
add
outs
mov
add
or
jnp
add
add
outs
or
add
jnp
add
add
xor
add
add
add
outs
or
add
jnp
add
add
add
test
mov
scas
add
push
add
add
add
outs
or
add
jnp
add
add
jnp
add
add
outs
or
add
jnp
add
add
sub
add
or
add
or
add
add
outs
and
add
pop
xor
add
jnp
add
add
mov
scas
add
push
add
test
add
jge
add
add
adc
and
int
mov
scas
add
push
jge
add
add
sbb
push
add
add
sbb
add
add
add
add
or
add
push
xor
and
int
mov
scas
add
push
add
add
add
push
sub
add
push
add
add
add
or
adc
jnp
add
add
or
add
sub
pop
outs
push
add
or
jnp
add
add
jnp
add
add
sgdtd
or
push
outs
adc
add
push
and
scas
add
push
outs
adc
add
add
add
add
adc
add
or
sub
add
adc
add
or
and
scas
add
push
outs
adc
add
push
and
scas
add
push
outs
adc
add
push
or
add
add
adc
add
push
outs
adc
jnp
add
add
xor
and
scas
add
push
outs
adc
add
push
and
mov
scas
add
push
outs
adc
add
push
outs
adc
and
shl
push
outs
adc
add
push
or
add
add
adc
add
push
outs
adc
sub
and
scas
add
push
outs
adc
add
push
or
add
add
sbb
add
outs
mov
add
outs
adc
add
push
outs
adc
jnp
add
add
cs
and
shl
push
outs
adc
add
push
or
add
add
sbb
mov
add
outs
adc
add
push
outs
adc
jnp
add
add
cs
push
and
shl
push
outs
adc
add
push
or
add
add
pop
add
add
add
or
pop
int
mov
scas
add
push
jle
add
or
add
or
pop
int
mov
scas
add
push
jle
add
or
add
or
add
or
outs
adc
jnp
add
add
cs
and
int
mov
scas
add
push
outs
adc
add
push
or
add
add
sbb
add
outs
mov
add
outs
adc
add
push
outs
adc
jnp
add
add
cs
and
int
mov
scas
add
push
outs
adc
add
push
or
add
add
adc
mov
add
outs
adc
add
push
outs
adc
jnp
add
add
sub
and
int
mov
scas
add
push
outs
adc
add
push
or
add
add
adc
sub
add
outs
adc
add
push
outs
adc
jnp
add
add
sub
and
int
mov
scas
add
push
outs
adc
add
push
or
add
add
adc
sub
add
outs
adc
add
push
outs
adc
jnp
add
add
xor
push
and
ret
sub
adc
add
push
or
add
add
adc
sub
add
outs
adc
add
push
outs
adc
and
ret
sub
adc
add
or
add
add
adc
and
ret
sub
adc
add
sub
push
and
ret
sub
adc
add
push
outs
adc
jnp
add
add
cs
and
ret
sub
adc
add
push
or
add
add
adc
add
outs
mov
add
outs
adc
add
push
outs
adc
and
scas
add
push
outs
adc
add
or
add
add
add
mov
scas
add
push
outs
je
add
sub
or
add
add
inc
add
adc
add
push
add
or
or
add
pop
add
or
add
add
or
add
add
or
add
add
adc
add
push
outs
adc
outs
adc
add
sbb
add
cmp
cld
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
sub
add
fadd
and
scas
add
push
outs
adc
add
push
add
add
add
adc
add
push
outs
adc
outs
adc
outs
sbb
add
push
outs
sbb
add
fimul
push
sub
push
outs
sub
add
fadd
jnp
add
add
or
add
sub
add
add
add
pop
leave
shl
push
push
outs
or
jnp
add
add
jnp
add
add
inc
add
or
outs
or
or
jp
add
add
add
add
sbb
add
sub
add
push
sub
add
sub
add
add
add
add
jo
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
outs
jb
add
outs
imul
push
sub
add
xor
add
add
adc
jnp
add
add
or
adc
jnp
add
add
or
add
sub
pop
outs
push
add
or
jnp
add
add
jnp
add
add
sgdtd
or
push
outs
adc
add
push
and
scas
add
push
outs
adc
add
push
and
scas
add
push
outs
adc
add
push
and
ret
sub
adc
add
push
outs
adc
and
scas
add
push
outs
adc
add
push
add
add
or
outs
adc
outs
adc
outs
sbb
add
fimul
push
sub
push
outs
sub
add
fadd
jnp
add
add
or
add
sub
add
add
add
jmp
shl
push
push
outs
or
jnp
add
add
jnp
add
add
inc
add
or
outs
or
jnp
add
add
sbb
add
sub
adc
add
add
or
add
add
xor
add
add
add
add
add
push
and
add
push
add
or
jle
add
or
jle
add
or
and
scas
add
push
and
add
call
add
push
add
or
jle
add
or
jle
add
or
push
sub
add
sub
add
sbb
add
daa
add
add
add
adc
outs
add
push
sub
add
ficomp
and
or
push
jle
add
add
sub
and
add
fiadd
sub
adc
add
add
add
add
dec
add
add
xor
add
add
add
add
sub
add
outs
sbb
push
sub
add
push
outs
and
add
or
rol
add
outs
and
or
add
or
ds
push
sbb
add
or
shl
push
push
sub
add
push
cs
and
shl
push
push
sub
add
push
xor
or
outs
sub
add
and
add
push
and
ret
sub
sub
add
push
cs
and
ret
sub
sub
add
push
xor
or
outs
sub
add
and
add
xor
and
ret
sub
sub
add
push
cs
and
shl
push
push
sub
add
push
xor
sbb
add
or
or
add
or
ds
add
add
outs
add
or
sbb
add
or
add
add
cmp
shl
push
push
sub
add
push
cs
ret
sub
sub
add
push
xor
or
outs
sub
add
and
add
scas
add
add
add
xlat
ret
shl
push
push
sub
add
push
cs
ret
shl
push
push
sub
add
push
xor
or
outs
sub
add
and
add
je
add
adc
ret
ret
shl
push
push
sub
add
push
cs
ret
shl
push
push
sub
add
push
xor
sbb
add
or
add
add
push
add
or
sub
adc
inc
shl
push
push
sub
add
push
cs
ret
shl
push
push
sub
add
push
xor
sbb
add
or
pop
outs
sub
add
cmp
(bad)
(bad)
fimul
pop
sub
pop
outs
sub
add
fdivr
add
add
sbb
adc
daa
add
add
pushf
add
add
add
add
pushf
add
add
add
add
pushf
add
add
add
add
pushf
add
add
add
push
jle
add
add
push
add
or
sub
add
push
sub
add
add
push
add
or
sub
add
push
xor
sub
jle
add
add
push
add
or
sub
add
push
xor
push
jle
add
add
xor
sbb
jle
add
add
push
add
or
sub
add
push
cs
jle
add
add
jmp
shl
push
outs
daa
add
or
shl
push
jle
add
add
dec
add
or
jle
add
add
sbb
add
and
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
jle
add
add
inc
jo
add
jae
add
push
outs
fwait
add
push
jle
add
add
pop
jle
add
add
add
mov
scas
add
push
pop
outs
or
adc
add
mov
scas
add
push
pop
outs
or
and
and
add
daa
add
add
sub
add
and
add
and
add
and
add
popf
add
push
sub
add
xor
add
add
adc
add
add
lods
ret
shl
push
pop
outs
or
sub
jle
add
add
sub
sub
add
and
inc
jo
add
jae
add
push
outs
pushf
add
push
and
pop
add
sub
add
or
outs
add
push
sub
jle
add
add
sub
and
shl
push
outs
and
add
or
sub
push
outs
and
add
jle
add
add
push
sub
add
push
jle
add
or
jle
add
or
push
add
or
shl
push
jle
add
add
popa
add
or
add
or
add
and
shl
push
jle
add
add
popa
add
or
add
or
add
shl
push
jle
add
add
popa
add
or
add
or
push
adc
or
add
and
add
or
add
outs
and
add
or
push
sub
adc
outs
and
add
or
add
and
rcl
sub
sub
add
push
and
sti
rcl
sub
add
add
sub
add
jle
add
add
push
sub
add
push
or
jno
add
adc
adc
jle
add
add
sub
add
or
xor
add
sub
add
or
das
and
mov
scas
add
push
jle
add
add
push
add
add
popa
add
or
add
add
push
sub
add
push
or
dec
shl
push
push
push
jle
add
add
and
add
ficomp
or
or
or
add
add
sub
and
add
fiadd
sub
add
add
pusha
mov
add
adc
or
push
add
add
add
adc
add
mov
add
pop
pop
sub
add
push
push
add
add
and
sub
pop
and
(bad)
(bad)
jg
fimul
adc
and
add
(bad)
(bad)
(bad)
fild
add
or
pop
and
(bad)
(bad)
jg
xor
adc
pop
mov
sub
add
or
sub
add
or
outs
sub
add
sub
add
xor
add
add
adc
add
or
push
and
shl
push
outs
sub
add
push
and
shl
push
outs
sub
add
push
and
rcl
sub
sub
add
push
and
rcl
sub
sub
add
push
and
add
push
outs
sub
add
push
and
shl
push
outs
sub
add
push
and
rcl
sub
sub
add
push
and
(bad)
shl
push
outs
sub
add
push
and
scas
add
push
outs
sub
add
and
shl
push
push
jle
add
add
push
(bad)
shl
push
sub
add
push
add
sahf
add
or
push
add
sub
add
sub
or
jae
add
or
jae
add
or
jae
add
or
sub
add
jle
add
add
xor
add
sub
jle
add
add
xor
add
sub
jle
add
add
xor
add
sub
jle
add
add
xor
add
sub
sub
add
push
sub
push
add
sbb
add
sub
add
or
add
push
add
xor
rcr
add
add
mov
push
add
pop
add
or
inc
add
push
sub
add
sub
add
add
add
xor
add
add
add
add
adc
adc
(bad)
adc
push
adc
push
add
sbb
jb
aaa
add
or
or
add
add
xor
add
jle
add
or
add
add
xor
outs
add
add
add
add
sub
jle
add
or
add
add
jle
add
or
add
add
pop
jge
add
add
sbb
add
jle
add
or
add
add
push
jge
add
add
push
jge
add
add
push
jge
add
add
push
jge
add
add
push
jge
add
add
pop
jge
add
add
pop
jge
add
add
push
jge
add
add
add
push
add
sbb
add
add
pusha
add
add
add
add
nop
add
push
and
data16
shl
add
sub
cmp
add
sub
and
add
sub
cmp
add
shl
add
add
mov
cmp
add
popa
and
gs
xchg
add
push
sub
add
sbb
loop
xchg
add
shl
add
add
mov
cmp
add
sub
xchg
add
push
sub
and
add
sub
cmp
add
sub
add
add
add
sbb
add
add
inc
add
add
add
add
and
mov
cmp
add
shl
add
add
mov
cmp
add
shl
add
add
mov
cmp
add
sub
xchg
add
push
sub
add
push
sub
add
add
sbb
add
add
add
add
add
add
and
add
sub
cmp
add
shl
add
add
mov
cmp
add
shl
add
add
mov
cmp
add
sub
and
add
sub
cmp
add
and
adc
data16
sub
xchg
add
push
sub
xchg
add
push
sub
add
push
add
sbb
add
push
add
add
add
add
and
add
sub
cmp
add
shl
add
add
mov
cmp
add
shl
mov
cmp
add
shl
add
add
mov
cmp
add
shl
add
add
mov
cmp
add
shl
add
add
mov
cmp
add
sub
xchg
add
push
sub
xchg
add
push
sub
push
add
sbb
add
add
add
add
add
and
add
sub
cmp
add
shl
add
sub
cmp
add
shl
mov
cmp
add
shl
add
add
mov
cmp
add
sub
xchg
add
push
sub
sub
add
push
add
and
inc
ja
gs
popa
sub
add
sbb
data16
add
mov
gs
popa
sub
pop
add
and
push
xlat
lods
data16
add
pop
popa
popa
sub
add
sbb
push
push
xchg
add
push
sub
xor
add
add
add
add
adc
add
or
daa
add
add
mov
mov
pop
and
xchg
push
sub
add
push
sub
sub
push
sbb
or
sbb
pop
ins
inc
mov
gs
push
pop
and
sbb
data16
push
sbb
push
data16
push
push
and
gs
add
add
add
add
add
add
and
enter
data16
enter
gs
adc
sbb
sbb
pop
pop
adc
adc
or
pop
xchg
pop
popa
pop
or
add
pop
adc
or
bound
sbb
or
add
adc
pop
xchg
pop
popa
pop
or
add
adc
push
adc
sub
push
adc
push
sahf
adc
pop
pop
adc
adc
sbb
lock
and
pop
adc
pop
outs
pusha
adc
adc
sub
adc
push
add
add
add
add
adc
add
or
daa
add
add
mov
mov
add
sub
add
push
sub
push
add
add
push
pop
and
sbb
data16
push
push
and
in
push
pop
data16
push
sbb
push
data16
push
sbb
pop
ins
inc
mov
gs
and
enter
data16
imul
or
adc
sbb
sbb
or
add
adc
pop
xchg
pop
popa
pop
or
add
pop
adc
or
bound
sbb
or
add
adc
or
pop
xchg
pop
popa
pop
or
adc
xor
or
adc
push
sahf
adc
pop
pop
adc
adc
sbb
lock
jge
add
add
or
add
add
add
add
xor
cmp
add
sldt
adc
add
add
sub
and
mov
scas
add
push
shr
add
add
mov
mov
mov
push
add
add
add
sbb
add
add
add
add
sub
add
sbb
jle
add
or
add
add
jle
add
or
add
add
jle
add
or
add
add
jle
add
or
add
add
jle
add
or
add
add
add
add
add
add
sub
add
or
add
jge
add
add
add
add
add
add
add
sub
add
or
add
jge
add
add
add
add
xor
add
add
and
add
add
jge
add
add
add
test
add
add
add
add
add
add
xchg
add
push
push
jge
add
add
push
add
xchg
add
and
add
jae
add
or
add
or
push
outs
cmp
add
sub
sbb
and
xor
add
and
add
sbb
cmp
jae
add
or
add
add
jae
add
or
inc
add
or
jnp
add
add
inc
add
or
add
or
jnp
add
add
push
add
or
sub
add
push
cmp
add
add
jnp
add
add
jae
add
or
add
push
add
or
sub
add
push
xor
or
inc
add
or
add
or
mov
add
jle
add
or
add
jnp
add
add
lea
add
pop
popf
adc
or
add
add
add
lea
push
adc
push
pop
pop
popf
adc
outs
push
add
or
mov
adc
add
add
add
lea
push
adc
push
pop
pop
popf
adc
outs
push
add
or
mov
jge
add
add
add
add
add
jnp
add
add
add
inc
add
or
add
or
or
add
or
adc
adc
and
dec
add
outs
inc
add
or
pop
and
(bad)
shl
push
outs
dec
add
or
pop
and
(bad)
shl
push
outs
dec
add
or
pop
add
add
add
jnp
add
add
dec
add
or
add
or
pop
outs
dec
add
or
and
(bad)
shl
push
outs
dec
add
or
pop
outs
dec
add
or
xchg
(bad)
shl
push
and
add
push
outs
dec
add
or
pop
and
scas
add
push
outs
dec
add
or
pop
push
outs
push
add
or
pop
or
add
or
or
or
add
or
add
or
or
or
add
or
or
or
and
shl
push
sub
add
or
or
add
or
cmp
add
or
fidiv
adc
sub
adc
outs
sub
add
(bad)
and
add
adc
add
add
add
or
or
or
or
adc
outs
mov
add
sub
add
or
adc
add
or
or
or
or
adc
mov
add
sub
add
dec
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
sub
push
shr
add
add
mov
mov
mov
add
add
pop
sub
add
adc
push
mov
pop
add
or
add
or
adc
add
sub
add
adc
mov
adc
add
add
outs
pop
add
or
add
add
or
movs
add
push
sub
outs
mov
add
sub
add
sbb
add
int3
add
add
add
adc
adc
add
add
mov
mov
add
add
or
adc
add
add
pushf
add
add
sub
shl
push
or
pop
lea
or
or
pop
cmp
add
or
pop
mov
sbb
pop
add
or
add
or
pop
pop
adc
adc
sbb
or
jl
adc
or
push
adc
push
call
pop
adc
mov
or
adc
sub
adc
adc
call
pop
outs
pop
add
or
or
pop
adc
adc
adc
xor
adc
pop
adc
add
xor
mov
add
or
or
mov
add
fsubr
add
add
add
sbb
stos
ret
add
add
add
sbb
add
inc
add
add
add
adc
add
or
add
or
sbb
sub
push
pop
call
or
add
or
add
or
add
add
add
or
pop
or
push
mov
xlat
push
or
or
add
adc
add
add
add
add
pop
sub
add
adc
push
cmps
add
push
jae
add
or
add
or
sbb
add
add
add
add
adc
add
outs
pop
add
or
mov
add
adc
push
sub
sub
add
pop
outs
push
arpl
add
or
inc
(bad)
shl
push
or
add
add
pop
adc
push
pop
sub
adc
outs
push
add
or
add
adc
adc
push
adc
adc
or
or
adc
cmp
adc
call
or
adc
or
pop
call
sbb
adc
adc
pop
jl
add
or
or
or
xor
or
adc
add
or
or
pop
pop
outs
sub
add
adc
adc
add
or
add
add
outs
add
or
add
push
adc
add
or
add
pop
sub
adc
sbb
or
or
add
imul
adc
sub
call
(bad)
adc
sub
movups
adc
outs
add
or
adc
add
sub
add
adc
outs
test
add
adc
adc
sub
fld
add
add
adc
add
or
adc
adc
adc
adc
adc
push
adc
outs
jg
add
adc
outs
add
or
add
sub
adc
push
sub
adc
sub
adc
adc
or
push
add
adc
sub
add
adc
push
adc
mov
push
or
pop
sub
imul
fimul
pop
adc
fiadd
es
adc
fiadd
adc
sub
sub
add
adc
sub
or
adc
adc
sub
adc
or
pop
add
or
adc
add
or
imul
or
adc
adc
adc
adc
outs
ins
add
or
adc
add
or
adc
add
push
adc
sbb
stos
add
push
fiadd
fiadd
adc
or
push
fiadd
fiadd
adc
adc
adc
outs
outs
add
or
or
sbb
mov
add
fcom
push
sub
push
sub
add
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
add
and
add
add
add
ja
add
add
add
or
add
add
add
add
add
add
add
add
add
add
xchg
pop
sbb
add
sbb
push
bound
add
pop
xchg
pop
adc
sub
adc
add
dec
add
add
add
adc
push
sub
push
and
mov
cs
jae
add
or
sbb
cmps
add
push
or
push
jae
add
or
push
push
jno
add
or
jae
add
or
lea
add
adc
or
push
pop
outs
jg
add
add
add
adc
push
add
add
add
add
adc
sub
shl
push
or
sub
add
or
sub
add
push
pop
jae
add
push
or
mov
push
adc
jns
add
add
adc
adc
push
and
push
pop
pop
inc
pushf
adc
sbb
rol
add
pushf
adc
sbb
xor
adc
sbb
icebp
add
add
pushf
adc
sbb
ret
add
add
add
add
adc
add
push
adc
rcl
add
add
and
add
adc
adc
(bad)
sbb
add
and
add
add
sbb
pop
xchg
popa
adc
adc
pop
xchg
popa
shl
sbb
pop
pop
adc
adc
or
scas
add
add
add
sub
add
sub
adc
add
push
add
adc
and
repnz
adc
and
add
pop
or
pop
and
pop
add
jae
add
push
adc
push
adc
push
jae
add
or
add
adc
adc
add
or
dec
sbb
adc
pop
push
popa
data16
and
lock
pop
data16
adc
sub
or
add
or
add
add
mov
pop
pop
push
pop
data16
adc
sub
or
add
or
add
pop
rcl
mov
and
add
imul
pop
adc
pop
popa
adc
pop
add
pusha
or
add
add
sub
add
pusha
or
and
aaa
cli
in
adc
popa
push
popa
data16
adc
pop
pop
outs
mov
sub
mov
mov
sbb
sar
adc
pop
push
pop
popa
adc
jle
add
add
or
pop
adc
add
add
or
and
stos
sub
pop
pop
push
pop
data16
pop
popa
adc
mov
add
add
or
xor
add
add
adc
or
or
add
add
mov
cmp
add
or
bound
add
xor
pop
or
add
xchg
or
or
dec
add
xchg
sbb
pop
adc
add
pop
pop
xchg
pusha
and
add
add
add
add
adc
push
push
das
adc
add
and
adc
and
xchg
pushf
adc
pop
and
adc
sub
add
and
add
xchg
pushf
push
or
test
sbb
push
add
push
add
sub
pop
cmc
repz
or
setno
pop
or
add
add
adc
sub
xchg
add
add
outs
rol
push
adc
adc
sub
adc
adc
ffree
push
add
jle
add
add
add
add
pop
add
or
sub
or
or
add
add
and
push
popa
pusha
or
add
or
pop
or
adc
pop
adc
adc
adc
shr
je
add
adc
pop
adc
sub
or
and
fwait
pop
int
pop
push
popa
adc
adc
adc
shr
je
add
adc
pop
adc
sub
or
and
push
xor
popa
push
pop
adc
adc
adc
shr
je
add
adc
pop
adc
sub
or
and
fwait
popa
int
pop
push
popa
adc
adc
adc
shr
je
add
adc
pop
adc
sub
or
or
sub
xchg
popa
push
pop
adc
adc
adc
pop
adc
sub
or
shr
je
add
adc
sub
add
outs
test
add
adc
pop
adc
adc
push
jae
add
or
or
add
xchg
popa
adc
pusha
popa
or
pop
adc
adc
add
or
push
adc
sub
adc
outs
mov
add
sub
adc
sbb
add
add
sbb
mov
popf
adc
pop
push
pop
pop
popa
or
or
sbb
add
or
add
or
push
sub
add
jle
adc
popa
push
pop
popa
or
xchg
add
add
mov
add
push
jle
add
add
xchg
outs
test
or
pop
popa
or
pop
adc
inc
adc
adc
sub
jle
add
add
and
push
popa
popa
or
or
inc
xor
add
add
or
add
and
push
pop
adc
pop
pop
pusha
popa
or
ret
push
adc
add
add
les
add
and
mov
push
pop
data16
adc
adc
sub
add
les
add
and
les
pop
data16
or
jle
add
add
and
add
push
adc
or
or
add
or
adc
adc
adc
outs
test
add
jae
add
or
adc
add
adc
add
or
jle
add
add
movd
imul
mov
add
adc
or
and
repnz
pop
push
pop
popa
adc
sub
add
push
adc
adc
add
popa
adc
adc
or
push
inc
mov
pop
push
popa
popa
adc
adc
and
lods
jno
or
pop
data16
adc
adc
adc
add
add
and
push
pop
pop
and
pop
push
popa
popa
or
add
loope
test
or
pop
data16
sub
popf
adc
popa
push
popa
or
xchg
add
add
adc
add
add
xchg
arpl
or
pop
xor
sbb
adc
adc
push
or
xlat
nop
jp
pop
push
popa
popf
adc
pop
pop
xor
and
pop
push
pop
popf
adc
jae
add
or
and
and
sbb
inc
add
add
or
(bad)
out
dec
pop
push
popa
popa
adc
popa
adc
retf
or
pop
popa
adc
add
ret
add
push
adc
add
jle
add
add
or
xchg
add
add
or
jnp
add
jle
add
add
xor
nop
add
add
les
add
and
pop
push
pop
popa
adc
sub
jle
add
add
and
and
sub
nop
add
add
and
add
push
adc
push
adc
adc
add
add
add
add
sbb
pop
pop
pop
arpl
popa
rol
pop
adc
sbb
xor
jle
add
add
lds
add
adc
cld
fmul
popa
push
pop
data16
adc
popa
adc
adc
out
outs
test
or
pusha
xor
add
add
outs
leave
add
push
adc
and
dec
popa
push
popa
adc
popa
dec
add
adc
sbb
pop
adc
adc
push
xchg
push
bound
sbb
xchg
pop
sbb
add
dec
add
cmp
sti
(bad)
call
adc
int
bound
pop
push
inc
push
inc
adc
adc
and
test
pop
push
inc
push
inc
adc
adc
int
bound
pop
push
inc
push
inc
adc
adc
xor
popa
pop
adc
or
add
add
adc
leave
add
push
sub
movd
inc
push
inc
jle
add
add
push
add
in
or
pop
inc
push
inc
cs
push
adc
sub
mov
add
adc
adc
adc
adc
adc
xchg
adc
adc
pop
adc
adc
adc
into
jle
add
add
or
adc
adc
adc
pop
sub
adc
sbb
pop
adc
adc
sbb
movhps
adc
adc
lea
add
or
sub
push
sub
adc
or
mov
sub
push
popa
xor
adc
lea
pop
push
adc
adc
popf
adc
adc
adc
jae
add
or
and
adc
lods
add
or
push
or
add
adc
adc
and
in
or
pop
adc
sbb
sbb
adc
adc
and
pop
push
popa
cs
add
adc
or
push
xor
push
pop
popa
adc
and
and
pop
push
pop
pop
popa
adc
adc
jae
add
or
pop
and
pop
push
pop
adc
adc
adc
shr
je
add
adc
sub
add
sub
add
adc
adc
ja
add
adc
jle
add
add
adc
outs
rol
push
jle
add
add
mov
outs
jl
in
or
pop
xor
nop
add
add
enter
adc
nop
add
add
and
add
xchg
add
add
and
sbb
or
or
mov
add
fcom
sbb
fild
add
add
add
test
add
or
add
nop
add
add
add
add
add
add
add
sbb
add
fld
add
hlt
push
add
or
add
add
add
adc
add
add
add
adc
pop
xchg
or
mov
pop
pop
or
sbb
add
xchg
add
xchg
push
bound
sbb
or
adc
pop
pop
sub
inc
add
pop
and
sahf
add
or
adc
add
add
adc
adc
arpl
adc
adc
adc
or
pop
popa
adc
popa
rcr
pop
pop
adc
mov
sub
add
cmp
sub
add
add
add
add
xor
add
add
and
(bad)
adc
add
add
add
add
add
adc
add
add
adc
add
add
add
js
add
(bad)
adc
add
add
pop
push
sub
add
adc
add
add
adc
add
add
add
adc
pop
xor
pop
add
add
adc
add
cmp
add
das
add
adc
jae
add
or
add
add
jle
add
or
add
add
adc
cwde
add
add
adc
cdq
add
add
pop
lea
or
pop
sub
or
add
or
in
add
add
adc
or
outs
pop
add
or
pop
and
(bad)
shl
push
sbb
add
or
(bad)
shl
push
outs
and
add
outs
sub
add
jae
add
or
add
add
mov
and
(bad)
shl
push
sbb
add
or
add
and
(bad)
shl
push
outs
and
add
outs
sub
add
jge
add
add
jnp
add
add
inc
shl
push
sub
add
sub
add
sub
and
(bad)
shl
push
sbb
add
or
add
and
(bad)
shl
push
outs
and
add
outs
sub
add
jge
add
add
jnp
add
add
call
add
sub
add
sub
add
sub
add
jge
add
add
add
pop
adc
add
mov
or
(bad)
jmp
adc
add
mov
add
xor
add
jae
add
or
push
add
add
add
jl
add
add
push
and
scas
add
push
outs
jl
add
add
add
add
jge
add
es
and
scas
add
push
outs
jl
add
add
add
add
sub
(bad)
shl
push
outs
jl
add
and
scas
add
push
outs
jl
add
add
add
add
sub
(bad)
shl
push
outs
jl
add
es
outs
pop
add
or
add
pop
add
or
add
or
sub
add
adc
add
add
add
adc
and
add
add
jge
add
add
sub
mov
add
jge
add
add
and
jnp
add
add
jnp
add
add
jnp
add
add
pushf
add
add
pop
jge
add
add
jnp
add
add
add
add
xor
add
push
and
add
jge
add
add
dec
add
jnp
add
add
add
add
add
pop
xchg
pop
add
add
add
jnp
add
add
pop
and
add
add
popf
add
add
add
add
add
jnp
add
add
mov
and
add
pop
jge
add
add
jnp
add
add
add
add
xor
adc
add
and
add
xor
add
add
add
add
xchg
or
jnp
add
add
add
add
add
xchg
pushf
add
add
add
push
pushf
sub
add
add
push
add
add
add
add
jnp
add
add
pop
and
add
add
pushf
add
add
add
add
add
jnp
add
add
jnp
add
add
pop
and
add
add
popf
add
add
add
add
add
jnp
add
add
mov
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
jnp
add
add
pop
rcl
add
sbb
pop
adc
jge
add
add
add
add
xor
add
add
add
add
adc
sub
adc
add
bound
add
add
pop
bound
push
add
add
push
xor
push
push
das
add
adc
add
lea
add
add
add
add
push
add
add
add
adc
add
lods
add
add
add
add
add
add
push
mov
pop
sbb
or
xor
sub
lea
add
add
adc
add
add
add
add
push
adc
sub
push
adc
add
add
add
pop
adc
or
pop
pop
adc
or
or
jnp
add
add
or
or
adc
jge
add
add
adc
(bad)
add
add
pop
jge
add
add
add
pop
adc
adc
or
pop
adc
adc
or
rcl
or
mov
adc
xchg
or
add
add
adc
sub
add
adc
add
dec
add
add
jnp
add
add
push
mov
add
pop
pop
pop
or
or
add
add
add
add
xor
push
or
jnp
add
add
sub
push
or
jnp
add
add
or
pop
pop
or
pop
xor
push
or
enter
add
adc
add
test
add
add
adc
jnp
add
add
push
mov
pop
pop
arpl
pop
pop
pop
pop
or
add
add
add
add
add
or
jnp
add
add
inc
adc
add
add
(bad)
add
add
adc
(bad)
add
add
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
xor
add
mov
or
pop
or
push
or
add
sub
add
add
add
sbb
jge
add
add
add
add
add
add
jb
sbb
mov
movs
add
add
xchg
add
add
add
xchg
push
bound
sub
add
into
add
sub
add
push
add
add
add
xchg
add
add
add
xchg
push
bound
jnp
add
add
xchg
pop
adc
add
add
add
xchg
pop
sbb
sub
jae
add
or
adc
add
add
add
adc
or
or
pop
xor
add
add
add
add
or
pop
adc
mov
push
add
add
add
pop
rcr
add
jnp
add
add
add
pop
outs
jg
add
or
sub
add
push
push
pop
pop
or
add
fldcw
add
add
xor
add
add
add
add
adc
jnp
add
add
add
push
sub
push
outs
add
jge
add
add
add
xor
add
add
adc
push
das
push
jae
add
or
lea
add
or
or
jnp
add
add
pop
add
add
or
sub
pop
or
add
pop
adc
add
xor
pop
push
mov
adc
lea
add
or
pop
sub
or
sub
add
push
add
sbb
add
sub
add
or
add
push
add
xor
sar
add
add
mov
push
add
pop
add
or
inc
add
push
sub
add
sub
add
add
add
xor
add
add
add
add
adc
adc
(bad)
adc
push
adc
dec
add
sbb
jae
add
or
add
or
add
xor
sub
add
cmp
add
add
add
or
add
or
push
mov
add
sbb
add
or
jnp
add
or
outs
xchg
add
push
sub
add
add
in
dec
or
xchg
popf
popf
or
dec
dec
popf
jns
in
jns
cmp
inc
shl
xchg
rol
add
mov
out
inc
shl
xchg
rol
add
add
push
pop
jg
inc
jmp
xchg
out
fild
sub
xor
nop
fistp
mov
ror
cmc
sbb
sub
ret
sbb
add
setnp
xchg
cmps
pop
dec
xchg
jne
sbb
push
adc
pop
cmps
xlat
inc
cmps
pop
out
push
neg
leave
pop
cmps
mov
cld
sbb
sbb
push
cld
dec
mov
mov
and
xchg
not
mov
adc
push
daa
xor
mul
daa
arpl
adc
adc
push
aam
add
movs
adc
movs
push
lock
inc
les
add
mov
and
sbb
push
pop
push
pop
mov
enter
pop
push
into
dec
jmp
push
scas
call
jmp
push
scas
call
mov
sub
mov
mov
sub
mov
jle
jmp
inc
call
jle
push
scas
les
inc
call
xor
aad
inc
xlat
xor
xor
aad
popa
aad
icebp
(bad)
paddb
into
dec
jmp
dec
mov
cdq
cmp
or
dec
fnstsw
cdq
cmc
popa
test
mov
shl
and
and
mov
shl
and
jns
in
or
or
fnstcw
in
or
or
(bad)
jbe
loop
cmps
stos
jbe
xor
jae
not
(bad)
jbe
loope
cmps
jecxz
xchg
xor
xchg
jbe
sbb
movs
lds
icebp
adc
adc
adc
add
jne
movs
inc
loope
inc
movs
add
movs
xor
jne
movs
inc
loope
inc
movs
add
xor
pop
std
mov
(bad)
pop
mov
out
push
lods
fs
pop
add
sbb
icebp
adc
push
in
shl
xchg
jb
fiadd
add
gs
push
xor
jb
xor
jne
cmps
push
in
movs
jne
xor
xchg
jne
and
aad
push
mov
xchg
xor
int
mov
mov
stc
xchg
mov
pop
fld
mov
mov
clc
ins
mov
or
jns
fmul
or
popf
test
fnstcw
popf
jns
(bad)
or
popf
test
sub
(bad)
mov
inc
lea
imul
lea
mov
fidivr
sahf
fisttp
or
stos
dec
out
(bad)
dec
fisub
sahf
xor
mov
out
sbb
mov
sub
push
scas
adc
xchg
and
dec
adc
cmp
cmp
dec
in
sahf
or
dec
dec
fnstcw
or
test
xchg
xor
mov
push
shl
xor
xchg
xor
jno
shl
and
mov
hlt
mov
shl
popa
test
mov
hlt
mov
mov
loop
mov
sahf
add
dec
or
pushf
xor
cmp
retf
sbb
fwait
jp
fnstenv
data16
ins
lds
iret
mov
lea
inc
mov
adc
les
or
jg
sti
js
sub
in
cmp
add
fs
mov
inc
retf
cmps
pop
jecxz
sbb
movs
sub
mov
mov
iret
idiv
xor
movs
inc
std
iret
outs
mov
in
pop
mov
xor
xchg
xor
push
mov
jp
aas
stos
stos
cmp
ins
aas
stos
pop
call
sbb
jae
or
inc
mov
iret
popa
outs
neg
in
outs
shl
adc
(bad)
fsub
jle
push
add
cmp
rol
sbb
sbb
aaa
push
out
add
push
mov
mov
mov
mov
mov
fdiv
mov
(bad)
enter
jl
xor
out
jmp
xchg
push
inc
shr
add
mov
mov
xchg
aam
mov
ins
movs
push
loope
or
pop
pop
fisttp
fisttp
adc
lea
cdq
adc
dec
adc
das
cdq
ror
das
lods
adc
push
shr
xchg
xchg
adc
inc
jae
push
in
add
adc
mov
in
xchg
xor
mov
jb
pop
hlt
cmp
and
cmp
xor
enter
je
jbe
into
adc
dec
call
jl
adc
and
int
or
xchg
dec
fld
fwait
or
push
mov
sar
inc
jmp
inc
mov
xchg
mov
mov
ret
bound
or
les
inc
push
shl
mov
mov
ret
(bad)
popa
shl
pop
les
mov
(bad)
xchg
mov
repnz
cmp
popa
retf
popf
sbb
pop
sbb
mov
mov
mov
dec
fimul
pop
inc
fbstp
in
je
xor
jae
test
nop
jne
mov
mov
iret
jbe
mov
scas
pop
outs
cld
or
cmp
inc
in
icebp
dec
mov
jne
shld
lea
mov
repz
cs
bnd
arpl
jl
sbb
cwde
jnp
int3
dec
imul
dec
(bad)
cmp
cmp
mov
stos
dec
in
(bad)
or
cmps
inc
jecxz
daa
shl
mov
jecxz
jnp
inc
jecxz
mov
pop
cmps
add
jecxz
jecxz
xchg
scas
inc
mov
pop
leave
cmp
cld
xor
pop
std
test
jmp
lea
pushf
fistp
out
mov
dec
test
cdq
ret
dec
mov
aaa
rcl
inc
shl
xchg
sbb
inc
add
mov
push
retf
sub
sbb
aam
xor
inc
mov
and
bound
in
std
enter
and
xchg
and
pop
cmps
xchg
push
scas
jae
jmp
daa
scas
push
not
inc
xchg
add
rcl
push
shl
dec
xchg
sbb
pop
scas
push
inc
mov
loope
xor
dec
mov
enter
add
or
sub
lds
fwait
popa
ffreep
pop
fmul
fwait
jle
cli
sub
test
push
sti
inc
lea
ins
ret
and
dec
mov
retf
fnstcw
xor
fs
adc
inc
and
xlat
cmp
add
inc
daa
shl
jmp
test
or
jns
popf
push
or
fldcw
test
mov
jns
or
sar
gs
pusha
movs
test
cmp
adc
shl
adc
test
test
hlt
push
pusha
or
dec
pop
shl
out
mov
add
cmps
push
push
leave
inc
rol
mov
cmp
push
(bad)
lahf
mov
(bad)
imul
lahf
sahf
or
jp
jmp
push
xchg
and
cmp
push
shr
repz
push
mul
jo
xor
les
loop
xchg
aaa
aaa
mov
sahf
rol
push
imul
cs
into
push
mov
xchg
add
in
add
xchg
cmp
ss
aam
out
add
and
not
mov
outs
mov
jne
push
idiv
push
mov
inc
call
mov
daa
fldcw
ret
push
rol
pop
or
ds
cmps
inc
test
push
mov
cmps
dec
xchg
lahf
sbb
pop
inc
fdiv
xchg
xchg
or
inc
mov
jb
das
xor
xor
test
pop
and
adc
fistp
cmp
mov
lock
cmp
pop
ret
mov
retf
fst
jmp
xor
xor
cmp
inc
jmp
cmp
mov
adc
push
mov
pusha
loop
pop
mov
fisttp
std
sbb
xor
aaa
xor
or
cmp
sar
xor
fs
sahf
pop
sbb
mov
mov
sbb
(bad)
jmp
fdiv
lahf
scas
pushf
sbb
rcl
sbb
xor
neg
dec
jmp
adc
aaa
sub
test
inc
dec
int3
test
stos
dec
sbb
ret
xor
movs
jno
imul
mov
jnp
xchg
jge
cmp
mov
hlt
jg
xchg
mov
mov
jo
add
jmp
test
fld
xchg
adc
arpl
mov
call
or
add
add
cmps
adc
mov
(bad)
cld
mov
arpl
and
cwde
mov
repz
pop
cmc
pop
dec
fs
iret
xchg
movs
cmp
push
pop
ja
cmp
nop
pop
cwde
movs
ss
push
mov
push
xchg
cdq
mov
xchg
adc
in
and
lds
mov
scas
rcl
cmp
jnp
mov
mov
test
in
mov
pop
mov
jg
cmc
jl
loope
cmc
daa
mov
dec
fcomp
jmp
push
ja
repz
mov
sbb
xor
push
fld
mov
and
inc
or
push
lea
das
cdq
data16
or
ins
cmp
cmp
clc
pop
ficomp
jno
cmp
cmp
repnz
sub
fwait
cmp
add
les
loopne
enter
add
sbb
fld
les
xchg
mov
test
inc
jne
adc
pop
push
mov
je
in
lds
adc
sbb
lds
lock
lea
push
push
xchg
pop
fst
fs
je
loope
jle
add
in
lods
mov
pusha
pushf
xchg
sub
inc
inc
bound
lar
cli
nop
cmp
jbe
in
pop
xor
sbb
inc
ret
daa
mov
cmps
ds
inc
imul
mov
pop
jno
repz
pop
inc
sbb
ret
rcr
inc
mov
(bad)
jle
cmp
aad
dec
in
push
stc
call
addr16
dec
sbb
enter
xchg
mov
jo
xor
cmp
and
test
adc
pop
jnp
sbb
pushf
adc
das
mov
fild
jno
xchg
int
inc
test
fidivr
das
xchg
jl
add
inc
in
push
or
xchg
fwait
mov
inc
or
xchg
lea
fsubrp
mov
inc
(bad)
rcr
ins
sbb
mov
xchg
les
cli
ret
jge
add
pminsw
mov
mov
xchg
fwait
lods
push
call
dec
jnp
add
pop
sbb
push
and
add
jnp
jl
mov
ins
inc
imul
mov
mov
outs
push
retf
aas
ret
in
and
xor
sbb
mov
call
add
es
aaa
jns
call
mov
mov
lea
pop
cdq
loopne
popa
lock
mov
stos
sbb
xor
push
jns
daa
xor
sar
out
and
or
shr
and
mov
sar
mov
mov
sub
(bad)
pop
mov
add
imul
or
ret
mov
scas
jno
sub
mov
mov
or
jne
adc
dec
sub
sti
push
cmp
sbb
jmp
adc
arpl
fisttp
xchg
fs
out
stc
shl
test
adc
mov
lds
jb
test
mov
xchg
jnp
aas
push
ror
sbb
std
js
inc
aaa
xchg
inc
sub
out
(bad)
sahf
dec
xor
jmp
dec
add
out
jg
xchg
gs
mov
movs
gs
cmc
outs
sbb
out
nop
sub
dec
pop
icebp
test
mov
adc
cmp
cmps
js
jp
xchg
dec
ss
imul
pop
sub
in
cmc
lea
sbb
iret
bnd
add
ins
xchg
clc
push
in
pop
xchg
xchg
cmp
sub
mov
(bad)
xor
je
jmp
(bad)
(bad)
and
aad
ffreep
clc
jmp
dec
es
xchg
sub
shl
mov
movs
addr16
pop
ror
jae
add
sar
mov
bound
inc
lock
test
push
lods
pop
push
test
xchg
aas
push
in
mov
sbb
push
std
or
call
push
xchg
ret
adc
pusha
sub
or
mov
mov
adc
cmp
mov
mov
pop
shl
fwait
outs
pop
imul
inc
sbb
(bad)
xlat
push
mov
in
(bad)
sbb
out
inc
fstp
scas
jo
gs
xor
cs
les
cdq
pop
cld
pop
fdivp
jmp
mov
xor
or
fild
mov
xlat
pop
adc
adc
mov
push
in
add
cs
adc
fisubr
jecxz
jnp
jl
adc
adc
xchg
jae
pusha
bound
daa
mov
or
push
mov
add
mov
sar
add
adc
push
push
lahf
mov
xchg
jge
jl
scas
(bad)
fsubr
cdq
aad
test
call
lods
push
cmp
sbb
mov
ds
outs
adc
scas
les
(bad)
out
and
add
repnz
and
cld
jbe
data16
sahf
loopne
xor
jae
sahf
call
or
or
lds
inc
xchg
xchg
cmps
out
in
dec
adc
dec
mov
or
cmp
and
cmc
jp
imul
jecxz
adc
push
sub
mov
or
test
shl
clc
xor
adc
aas
pop
cmp
(bad)
fdivr
mov
adc
xor
movs
stos
cmps
fnsetpm(287
(bad)
test
mov
sub
dec
xor
mov
test
imul
loopne
pop
jns
push
leave
mov
not
cmp
jo
mov
pop
mov
xchg
or
jmp
mov
dec
add
jnp
or
in
movs
cwde
ret
and
out
stos
popa
mov
cmp
inc
pusha
inc
push
sbb
add
inc
cwde
mov
pop
inc
test
cmp
cli
cdq
aas
or
(bad)
push
repnz
cmps
mov
push
xor
stos
shl
and
dec
idiv
in
xchg
hlt
xor
jecxz
push
adc
int
and
iret
mov
push
mov
test
aad
mov
mul
pushf
ins
ss
jb
xor
daa
add
fldcw
pop
inc
fldenv
inc
pop
push
(bad)
or
xchg
aad
cmp
dec
push
mov
xor
xor
cmp
push
gs
mov
push
(bad)
lods
mov
cli
shl
outs
aaa
add
cdq
and
jns
int
fisubr
adc
fsubr
mov
jmp
sub
pop
add
adc
mov
jno
ins
or
int
sub
jnp
lahf
sbb
or
cmp
push
dec
sub
ror
jmp
test
push
cmps
test
mov
jmp
addr16
test
gs
and
pop
xlat
dec
(bad)
rcr
jg
jns
stos
in
in
aas
pop
cmps
sti
(bad)
xchg
stos
clc
inc
cmp
or
push
pop
add
lock
mov
outs
mul
push
pop
add
std
sbb
jns
mov
ja
and
and
pop
mov
icebp
je
mov
out
sub
mov
add
fnsave
into
cdq
dec
clc
jbe
ret
sub
xchg
(bad)
mov
cmp
pop
pop
mov
sub
and
push
repz
ja
push
and
or
push
js
xchg
imul
retf
push
call
dec
test
jle
xchg
adc
jge
sub
adc
(bad)
in
in
mov
sbb
sbb
std
bound
enter
mov
inc
loope
mov
add
inc
pop
idiv
xchg
xchg
adc
pop
daa
test
in
and
adc
inc
adc
xor
sbb
pop
sbb
xchg
xor
push
mov
dec
(bad)
cmp
adc
(bad)
inc
xchg
popf
psubb
mov
cld
push
jle
cmp
into
pop
mov
js
add
add
loope
jl
data16
das
mov
cdq
das
ja
sbb
sub
scas
cmp
sbb
dec
xchg
jne
xor
movs
inc
jecxz
xor
ja
mov
neg
jecxz
adc
mov
out
hlt
add
icebp
push
fdiv
mov
mov
push
adc
jae
mov
inc
or
dec
push
int3
dec
fld
mov
stos
sbb
sub
cdq
sbb
push
imul
mov
mov
retf
mov
jmp
mov
or
dec
mov
out
sub
xor
push
cmps
adc
loop
sub
inc
xchg
add
lds
dec
cmc
push
push
movs
and
jle
ret
push
cmc
test
cmc
addr16
push
out
adc
cmp
cld
je
fwait
mov
(bad)
cmovg
cdq
dec
fistp
mov
retf
scas
aas
jmp
inc
leave
push
push
push
mov
cmps
sub
jbe
xchg
push
loop
jp
push
cmps
add
xor
inc
lock
adc
mov
mov
xor
push
call
in
add
cmps
xchg
sbb
inc
add
nop
ss
int3
push
pop
sbb
mov
aas
mov
pushf
outs
js
or
retf
or
(bad)
mov
cli
pop
or
pop
mov
sbb
jae
ja
loopne
mov
pop
int
int
imul
sub
jmp
xchg
xor
jle
push
mov
push
call
repnz
mov
outs
loopne
mov
sub
or
jb
push
mov
mov
cmp
or
and
arpl
push
iret
scas
adc
idiv
mov
icebp
ror
jle
adc
and
icebp
aas
mov
repnz
nop
push
popf
retf
jmp
cmp
movs
inc
test
and
shr
cmp
cmp
cmps
dec
sbb
xor
push
ins
ret
sbb
push
mov
sbb
push
inc
jmp
pop
jmp
push
or
cwde
sbb
std
in
loopne
push
icebp
imul
in
xchg
mov
aam
movs
fs
popa
sahf
cs
call
repz
sbb
dec
loop
ret
in
aaa
sbb
outs
shl
aas
pop
mov
inc
movs
fsub
pop
dec
mov
mov
clc
test
fcmovnbe
push
mov
pop
scas
imul
pop
lods
sbb
lock
jle
pop
ja
sar
pusha
jno
inc
stos
(bad)
jmp
mov
retf
loop
loopne
in
dec
inc
adc
or
mov
idiv
mov
push
sbb
sub
mov
pop
xor
enter
sti
adc
add
xor
fsub
add
adc
je
gs
cmp
imul
mov
push
mov
test
lahf
in
shl
push
fbstp
jo
imul
cmp
out
pop
and
inc
or
fdiv
pop
ins
xor
stos
lock
jae
xchg
pop
jmp
pushf
cli
scas
arpl
cmc
xchg
hlt
punpckhdq
(bad)
mov
pop
out
cmp
sub
and
sbb
rcl
ror
adc
test
push
repz
mov
in
mov
aad
push
jbe
test
push
loopne
mov
xchg
adc
xchg
retf
icebp
stc
mov
push
jns
leave
test
xchg
pop
sbb
or
xchg
jge
cdq
lods
je
xchg
push
cwde
(bad)
not
cmp
cmp
jbe
jge
test
jo
mov
sbb
das
inc
fldenv
movs
pop
in
outs
(bad)
push
popf
and
sbb
push
xchg
mov
test
xchg
outs
icebp
push
and
xchg
iret
call
sbb
cmc
imul
cmp
xchg
inc
fstp
icebp
aaa
push
lea
ins
mov
mov
icebp
jne
icebp
adc
xchg
jns
push
cld
sti
test
es
xchg
repnz
pop
fstp
iret
push
adc
sar
repnz
xor
pop
and
cmp
push
repnz
out
push
data16
lds
mov
lahf
sahf
jnp
js
add
cmc
mov
sbb
xchg
dec
pop
test
retf
ret
or
add
jo
jmp
adc
cmp
fcmovbe
jmp
popf
jne
jl
dec
sbb
pop
jne
lds
cmp
adc
mov
jp
mov
jp
inc
mov
xor
sbb
cld
fcomp
xor
xchg
movs
call
aas
add
cmp
xor
jbe
jmp
lea
in
mov
iret
mov
ins
scas
ds
add
and
es
adc
outs
jge
sub
das
addr16
and
das
fnsave
out
adc
les
(bad)
mov
repz
inc
addr16
leave
cmp
or
push
imul
mov
retf
xchg
fld
add
or
pop
gs
jmp
sar
sti
cmp
ret
push
mov
or
xchg
mov
dec
push
pop
cmp
ins
mov
leave
or
stc
dec
dec
retf
pop
std
jmp
pop
mov
sar
pop
sbb
fstp
fadd
loop
rcl
xchg
idiv
push
int
sbb
hlt
dec
lods
rcr
cmc
pop
inc
dec
cmp
xlat
xor
scas
inc
sub
add
inc
or
shl
xlat
push
mov
and
xor
in
mov
fisttp
daa
cmp
imul
sahf
inc
mov
outs
push
js
push
push
pop
inc
push
je
push
into
mov
inc
add
dec
call
fwait
out
ja
jg
sub
sahf
out
fwait
js
ret
bound
dec
in
inc
mov
in
je
sbb
jmp
out
adc
out
ret
adc
pop
in
clc
sbb
cmp
xor
adc
inc
movs
out
dec
popa
cmp
leave
xor
jg
lods
jbe
cwde
ss
fcomp
push
mov
xchg
test
lods
ret
xor
mov
or
aaa
adc
push
jmp
dec
jge
mov
adc
call
dec
sbb
mov
push
jmp
adc
inc
adc
test
mov
(bad)
(bad)
mov
pop
test
imul
inc
(bad)
inc
mov
loopne
dec
lea
cmp
inc
xor
push
dec
pop
mov
xchg
cmp
test
cs
mov
or
jp
adc
aaa
push
addr16
sbb
int
sub
jne
push
scas
call
push
outs
lock
fwait
aaa
jne
mov
cmps
icebp
cmp
mov
(bad)
jmp
xchg
(bad)
(bad)
jno
sub
leave
dec
outs
popa
adc
imul
sub
xor
xor
pop
stos
fisub
inc
addr16
xor
cmp
shr
imul
jge
lahf
aas
cmp
mov
sbb
mov
repz
mov
xor
xchg
cmc
mov
push
lods
stos
and
mov
dec
movs
push
stc
mul
pop
sub
sub
mov
mov
shl
in
jb
cwde
jno
mov
xor
sub
enter
inc
gs
push
loopne
out
call
and
sub
fdiv
std
push
ficom
mov
xor
sahf
xchg
in
ret
les
stos
pop
sub
add
cmp
hlt
(bad)
fistp
cmp
cmp
std
dec
xchg
mov
inc
pop
mov
cmp
inc
dec
lods
rcl
(bad)
pop
cmps
pop
xor
fadd
and
xor
jmp
scas
sub
push
jl
and
xchg
in
retf
sub
cmc
mov
adc
ins
shl
push
xor
xchg
das
arpl
fdivr
mov
pop
jns
cmps
test
jb
stc
lock
push
dec
adc
nop
fsubr
xchg
cs
(bad)
sti
outs
sahf
push
popa
xchg
es
loopne
loopne
cmp
shl
cli
push
add
aas
sub
pusha
das
dec
xchg
adc
sbb
inc
push
mov
or
dec
call
mov
popa
or
inc
scas
and
sti
inc
mov
jge
div
push
jl
pushf
mov
mov
push
out
mov
dec
or
pop
dec
scas
(bad)
sbb
jle
cmp
hlt
pusha
aas
movs
sbb
and
jl
xchg
cmp
test
inc
cmp
dec
mov
ins
mov
data16
bound
in
(bad)
sbb
(bad)
in
inc
jae
cdq
shr
cmps
imul
(bad)
out
or
in
xchg
daa
cmp
cmp
mov
pop
sti
push
(bad)
push
cvttps2pi
not
xlat
adc
mov
out
adc
xchg
arpl
cmps
aad
or
cmovae
popa
xor
dec
(bad)
fisttp
aaa
xchg
dec
shl
mov
sub
adc
inc
test
scas
jmp
cmp
adc
sbb
pop
xchg
mov
and
push
cmc
or
mov
mov
mov
sbb
mov
xchg
and
out
sub
jge
sbb
inc
xchg
shr
aaa
xor
push
lds
or
(bad)
mov
and
ret
adc
(bad)
imul
xchg
jp
daa
(bad)
cmp
sbb
cdq
imul
retf
imul
in
and
inc
daa
ins
mov
adc
into
or
bound
jecxz
push
cmp
out
push
scas
lods
cmp
adc
inc
xchg
xchg
fst
mov
dec
ret
cmc
retf
out
sbb
lods
mov
bound
pop
inc
sti
shl
pusha
ds
test
lahf
fisttp
lock
mov
shl
add
dec
cmp
cmp
fs
lahf
mov
jb
outs
pushf
imul
inc
cmp
xor
push
enter
jne
sbb
jb
ds
ss
pusha
inc
mov
mov
sub
jb
shl
push
adc
jns
jmp
mov
cmp
pop
in
int
and
fsub
cmp
aad
dec
lea
mov
mov
pop
push
sbb
retf
pop
mov
xor
sbb
pop
imul
mov
int
in
dec
and
mov
jl
add
stos
jne
dec
cmp
pop
loopne
inc
lock
movs
pop
loopne
je
and
movs
pop
loopne
inc
mov
outs
icebp
add
sub
add
pop
mov
das
cmps
outs
cmc
icebp
imul
sbb
scas
stos
outs
fldcw
or
leave
inc
xor
nop
and
sbb
das
mov
xchg
xchg
push
loop
inc
repz
rol
add
xchg
jae
xchg
add
inc
or
add
inc
call
jle
dec
out
jl
cmp
lods
dec
call
dec
fsub
cmc
je
cmp
lods
cmp
xchg
rcr
adc
cmp
fst
push
icebp
adc
ja
and
sub
std
adc
into
fcom
inc
fisub
jnp
test
lods
test
mov
test
adc
jno
adc
mov
leave
popa
cld
push
repnz
into
or
das
cli
inc
leave
shr
popa
ret
push
push
jmp
add
fisttp
rdmsr
mov
ins
outs
ficom
jno
mov
sbb
scas
xchg
and
dec
les
mov
mov
push
ss
(bad)
mov
pop
mov
pushf
out
in
retf
imul
and
add
mov
pushf
jg
push
rol
cmp
outs
push
push
fisttp
cmp
fild
enter
les
inc
inc
addr16
out
jg
imul
shr
jnp
addr16
xchg
loope
(bad)
cwde
rcr
push
shl
ins
push
mov
cld
sti
cmc
shl
test
xlat
das
cmp
inc
bound
mov
mov
daa
xor
add
stos
call
cmp
ffree
push
mov
jo
ds
fisubr
cdq
js
movs
push
mov
adc
sbb
pop
test
push
test
and
pop
scas
xchg
ret
(bad)
dec
stos
and
pop
cli
into
mov
fwait
stos
xor
dec
sbb
gs
jns
call
sbb
ja
pop
mov
(bad)
push
(bad)
mov
clc
popa
shl
test
mov
sbb
dec
mov
and
mov
cmps
or
cmp
out
jno
adc
das
out
mov
sbb
arpl
mov
jge
pushf
jge
dec
or
jns
nop
test
in
je
sahf
add
mov
or
movs
movq
ss
loopne
adc
out
mov
adc
nop
test
push
xchg
pop
adc
xor
bound
adc
fld
(bad)
cmp
pop
xor
mov
adc
loopne
inc
mov
in
arpl
inc
inc
mov
xchg
shr
sub
(bad)
push
jmp
outs
les
inc
shl
loopne
scas
aam
mov
stc
adc
add
lods
cmp
ds
xchg
xchg
in
in
imul
(bad)
loopne
(bad)
sub
lea
push
loopne
sbb
push
mov
call
cmp
cmc
inc
ss
enter
mov
cld
mov
xor
mov
neg
adc
mov
push
jmp
js
cmp
mov
pusha
xor
adc
mov
fucomip
lods
cdq
sub
dec
inc
in
out
and
js
xor
in
sub
daa
lods
retf
into
shl
mov
push
mov
mov
jg
jmp
inc
aam
aas
mov
sub
cmps
cdq
daa
mov
jb
xchg
(bad)
jnp
mov
mov
or
cmp
pop
(bad)
in
mov
adc
sub
mov
stc
scas
repnz
shr
dec
xchg
push
add
hlt
mov
(bad)
mul
cmps
xchg
out
mov
mov
or
fwait
push
jmp
mov
rcl
push
cmps
fdiv
mov
cdq
stos
idiv
push
jp
mov
jp
cli
into
push
mov
nop
mov
test
dec
adc
aad
inc
aad
cmp
mov
adc
mov
test
jns
retf
pop
cmp
jns
addr16
push
movs
jno
pusha
jle
les
xchg
call
(bad)
or
pop
call
iret
loope
sub
or
jb
sub
icebp
(bad)
fisubr
icebp
bound
outs
es
mov
mov
mov
iret
inc
push
inc
lea
jp
jecxz
mov
jg
cmps
jbe
xchg
cmp
scas
sbb
pop
lea
lahf
and
jb
jl
sub
iret
inc
repz
adc
mov
out
ins
call
cwde
fimul
cmp
out
mov
pop
(bad)
mov
das
or
(bad)
push
mov
add
in
mov
and
aas
xor
or
jg
adc
mov
addr16
pushf
shr
push
mov
popf
cmp
xchg
add
int3
(bad)
xchg
ret
inc
xlat
out
movs
push
pop
es
and
je
not
sahf
icebp
push
jne
stos
enter
sub
ss
xchg
mov
inc
xor
scas
cmps
mov
and
in
adc
fisub
fdiv
add
or
push
fistp
or
cmp
repnz
and
mov
fimul
and
in
pop
or
and
xchg
outs
fdivr
mov
hlt
mov
cmps
pop
fucomip
cli
mov
mov
xchg
push
in
xchg
popf
sbb
std
cmp
xchg
sbb
out
add
xchg
xchg
in
inc
mov
mov
xor
movs
outs
shl
test
mov
dec
ins
les
stos
adc
cdq
clc
sub
sbb
call
fdivp
jl
stos
mov
inc
mov
movs
div
xlat
push
or
repnz
jb
stos
(bad)
sub
js
test
or
push
fild
push
in
inc
dec
rcl
add
out
repnz
xchg
pop
jge
outs
je
mov
cmps
jl
push
cmp
call
dec
cwde
das
div
hlt
lahf
test
jo
ficom
mov
jmp
mov
stos
(bad)
push
call
inc
push
shr
xor
jno
sub
fcom
retf
xchg
pop
repz
adc
dec
data16
push
stc
pop
loope
sub
cs
test
jge
jle
pop
rcr
icebp
jge
cwde
and
ja
test
jl
pop
pop
mov
jg
inc
cmp
cs
mov
inc
inc
retf
lds
popf
jbe
add
dec
inc
jge
test
sahf
xchg
dec
aaa
jecxz
rcr
cmp
add
cmp
cdq
lea
ficomp
sbb
fimul
or
divps
and
sbb
mov
out
push
cmc
std
sub
sub
ret
ss
pop
dec
or
lods
or
mov
popa
pop
out
cld
dec
les
pop
arpl
arpl
jg
pushf
or
pop
popa
sbb
cmp
xor
popa
inc
xchg
retfw
retf
cli
dec
mov
dec
jl
sbb
inc
fdivr
mov
add
js
push
std
shr
lahf
rol
mov
icebp
je
adc
adc
sbb
fdivr
aas
ficomp
loop
adc
leave
and
mov
jbe
jns
mov
push
push
cmp
inc
fs
repz
das
mov
inc
clc
jecxz
or
rcl
jg
push
jmp
push
in
mov
cdq
lods
repz
test
inc
xchg
dec
and
mov
jnp
add
hlt
jg
fs
or
stos
out
jae
dec
jae
ds
outs
fwait
imul
inc
dec
mov
imul
push
mov
mov
outs
sbb
data16
adc
cs
jbe
cmp
punpckhwd
cmp
test
mov
in
out
repz
hlt
jg
and
icebp
xor
mov
das
or
xchg
dec
in
test
in
push
paddw
add
popa
aas
push
mov
mov
cmps
push
sbb
cs
into
retf
pop
sbb
popa
mov
aam
cmp
adc
jns
aas
xchg
nop
dec
push
mov
push
pop
test
jnp
pop
les
mov
aas
mov
pop
jecxz
mov
js
mov
fistp
popf
adc
lods
mov
test
push
leave
xchg
and
adc
ins
and
inc
xchg
daa
sub
scas
scas
hlt
dec
and
and
ss
nop
iret
mov
mov
dec
(bad)
adc
mov
fstp
in
aas
nop
sbb
mov
(bad)
test
adc
pushf
jecxz
loopne
mov
mov
iret
iret
xchg
add
retf
xchg
dec
test
push
sar
push
adc
int3
inc
scas
mov
shl
(bad)
(bad)
mov
imul
jae
retf
cmp
ds
scas
adc
mov
test
data16
cmp
int3
adc
fcmovnbe
jne
sub
sbb
movs
aad
icebp
movs
dec
fdivr
pushf
jns
ins
retf
ins
lods
mov
call
mov
into
pop
adc
and
and
movs
into
mov
add
mov
ror
inc
mov
xchg
movs
mov
(bad)
mov
aad
mov
push
pop
cmp
fwait
dec
mul
mov
inc
stos
outs
stos
cmps
cli
fdivr
mov
mov
cmp
cdq
sar
aad
or
adc
push
adc
mov
jae
or
sub
loopne
movs
repnz
push
in
mul
shl
cmps
mov
cwde
mov
pushf
nop
and
add
bound
ins
out
xchg
daa
cmp
inc
push
xor
push
mov
repnz
xchg
and
pusha
jb
loopne
dec
add
jbe
cdq
dec
mov
mov
add
mov
adc
mov
fcmovnbe
sar
mov
jmp
push
iret
out
mov
aas
out
cdq
xchg
std
inc
scas
jge
outs
ins
fwait
sub
gs
pop
sub
out
js
pop
out
cmp
cmc
mov
mov
cli
in
add
inc
and
stc
ss
int
push
sbb
aam
add
pushf
popa
sub
test
push
push
mov
or
nop
jge
add
call
movs
sbb
ins
pop
push
adc
sbb
push
fidiv
inc
scas
into
add
call
mov
adc
(bad)
loopne
pop
mov
and
push
push
les
add
mov
xchg
std
push
lock
adc
daa
mov
test
not
mov
daa
ret
arpl
push
mov
daa
mov
div
arpl
fs
push
fucomip
pop
xchg
ds
mov
test
ja
jmp
not
in
test
mov
mov
mov
xor
inc
mov
pop
pop
xchg
ja
xchg
pop
jecxz
ja
pop
cmps
xlat
inc
cmps
pop
pop
xchg
ja
xchg
pop
jecxz
ja
pop
cmps
ins
mov
int
in
test
int
mov
mov
sub
mov
xor
cmps
inc
loop
xor
jbe
(bad)
xor
xor
(bad)
jbe
(bad)
xor
outs
sti
pop
mov
pop
mov
mov
sti
pop
mov
pop
mov
mov
cld
pop
pop
enter
pop
mov
cld
mov
cld
pop
pop
enter
pop
mov
cld
fmul
or
cwde
jl
cwde
or
dec
jl
or
fmul
or
cwde
jl
cwde
or
dec
jl
or
jge
or
jge
lods
dec
jmp
jge
or
jge
lods
dec
jmp
loop
xchg
xor
cmps
inc
loop
xor
jbe
(bad)
xor
xor
(bad)
jbe
(bad)
xor
je
add
loopne
nop
xor
je
movs
xor
je
loopne
movs
loopne
nop
xor
je
ja
pop
cmps
cmps
xor
ja
cmps
inc
jecxz
inc
cmps
pop
ja
pop
cmps
cmps
xor
ja
cmps
inc
jecxz
inc
cmps
pop
in
js
cmp
test
in
test
fdivr
fdivr
in
js
cmp
test
in
test
fdivr
fdivr
call
lods
dec
call
dec
fdivr
cwde
call
lods
dec
call
dec
fdivr
cwde
push
ret
daa
xchg
xchg
mul
daa
push
ret
daa
xchg
xchg
mul
daa
dec
fnstsw
cdq
cdq
or
jge
jmp
fnstsw
cdq
cdq
or
jge
jmp
and
fs
lock
and
les
adc
lock
and
(bad)
ret
adc
xchg
xchg
ret
adc
xchg
fidivr
call
jle
jmp
call
jle
jmp
add
or
dec
movs
sar
cmp
ret
and
mov
cld
call
or
inc
fucomip
or
push
ds
out
sub
inc
cmp
dec
data16
push
mov
jno
out
jb
adc
test
fimul
cwde
sub
push
ja
mov
shl
les
shl
add
cmp
test
cmp
mov
push
sub
ret
adc
popa
xchg
outs
out
dec
test
popa
mov
(bad)
xlat
mov
out
bound
call
out
imul
push
adc
add
pop
bound
xor
inc
xchg
inc
add
push
dec
jae
ss
call
dec
rcr
sub
sub
jns
or
sub
iret
or
xor
pop
push
pop
leave
push
push
pop
xchg
loope
(bad)
cs
mov
out
aaa
mov
je
mov
in
loopne
dec
ficom
sub
mov
stos
dec
scas
xchg
and
imul
adc
add
int
stc
or
mov
jle
(bad)
aas
push
pop
out
jl
xchg
lea
ins
mov
mov
mov
js
ja
hlt
inc
scas
pop
mov
repnz
pop
inc
mov
fsubr
outs
mov
ret
(bad)
stos
cs
fcmovne
mov
mov
dec
xchg
mov
sub
xchg
popf
in
inc
xor
jo
mov
cli
rol
jl
scas
lahf
fiadd
ds
ret
popf
jno
jg
xchg
js
jecxz
or
pmovmskb
xlat
mov
pop
cmp
arpl
mov
in
cmp
xchg
or
das
sub
jbe
jle
add
cmps
xor
push
dec
test
loopne
das
mov
xchg
outs
xchg
es
xchg
test
pop
add
sbb
dec
lods
in
das
pop
adc
aam
stos
sub
dec
test
ror
pop
out
leave
outs
inc
pop
mov
fild
mul
cdq
lds
jl
and
icebp
xor
rcl
xchg
mov
shr
and
adc
cmp
sbb
outs
or
dec
cmp
inc
inc
(bad)
imul
add
sbb
xchg
mov
adc
xor
push
and
aaa
lea
aaa
push
xchg
and
mov
ret
pop
pop
cmp
push
and
(bad)
cmp
shr
push
arpl
add
in
jge
je
mov
repz
push
pop
je
fadd
je
cmp
aad
leave
mov
jo
ror
aaa
js
imul
xor
or
pop
push
enter
pop
pop
xchg
sub
push
xchg
frstorw
jbe
mov
clc
loope
adc
pusha
inc
xchg
pop
xlat
sub
sub
cli
icebp
mov
mov
lods
add
dec
in
push
sbb
call
adc
adc
outs
and
pop
mov
outs
cdq
sub
out
hlt
jns
or
out
xchg
mov
(bad)
call
dec
cmp
mov
mov
shl
nop
ret
dec
mov
sti
add
mov
ss
fwait
xlat
jno
js
push
xchg
fcomp
pop
push
sub
aad
(bad)
scas
frstor
fcmovbe
in
sahf
xchg
push
dec
push
sbb
dec
push
fst
mov
xor
js
sti
mov
adc
imul
mov
jg
call
push
and
pop
add
fsub
retf
cs
push
mov
xor
outs
cld
sub
(bad)
cli
in
xchg
jecxz
dec
das
add
popa
rep
nop
loop
xor
retf
cmc
mov
push
sub
jle
daa
or
les
leave
(bad)
out
sti
dec
add
push
jb
and
mov
loop
push
jp
and
xchg
nop
push
mov
pop
fcmovbe
iret
movs
in
retf
adc
push
xchg
jae
sahf
mov
jp
out
into
popa
gs
pop
mov
hlt
add
mov
cmp
mov
retf
and
lahf
cmps
stos
xchg
ret
pop
jmp
iret
scas
addr16
fcomp
jmp
fimul
jae
inc
mov
js
les
sbb
sub
inc
sbb
repz
sbb
fisub
xchg
fwait
mov
dec
mov
pop
cmc
pop
mov
jns
arpl
ror
or
jecxz
jge
jmp
jbe
and
push
mov
cmps
jle
sbb
lods
and
add
jmp
mov
sub
xchg
call
cmp
adc
nop
cmc
adc
inc
mov
sbb
xlat
hlt
popa
imul
mov
fwait
sti
mov
mov
mov
sub
jne
rol
jmp
jb
xor
jo
icebp
mov
jle
pop
mov
xchg
mov
xchg
push
xor
shl
push
pop
stos
jne
cmps
xchg
inc
xlat
aaa
iret
jl
daa
or
cmp
clc
inc
jg
push
mov
xchg
xor
pmullw
jne
sub
mov
cmps
inc
inc
xor
cmp
enter
push
ss
xchg
lock
adc
sbb
push
aad
mov
cld
nop
inc
das
cmp
jmp
jnp
repz
pop
and
push
ds
cli
jl
test
mov
mov
jmp
loopne
inc
(bad)
outs
test
lds
je
sahf
(bad)
retf
rcl
sbb
pop
nop
leave
pusha
gs
test
sub
cwde
mov
into
pop
rcr
cmp
sub
stc
inc
aaa
cld
xor
jno
lock
mov
in
neg
xchg
call
jno
jmp
stc
adc
push
mov
loop
sbb
inc
jecxz
sbb
add
or
hlt
xchg
xchg
call
iret
sub
push
push
cld
mov
ds
scas
mov
adc
outs
(bad)
sbb
push
sub
stos
jno
sub
and
jle
nop
ret
aaa
jmp
xchg
jp
dec
ret
mov
cmp
or
mov
xchg
cli
xor
adc
les
adc
enter
scas
jmp
dec
sbb
popf
sbb
mov
jne
sub
inc
sbb
arpl
sti
mov
inc
test
mov
pop
mov
lds
in
mov
sub
mov
pop
xor
movs
imul
sub
jbe
cmc
ret
popf
cmp
inc
gs
pop
adc
pop
add
xchg
xchg
mov
imul
adc
mov
cmp
sbb
cmc
dec
movs
xchg
iret
or
data16
push
fadd
push
mov
gs
xor
cmp
(bad)
sub
out
test
inc
cmp
dec
dec
xchg
hlt
mov
mov
xor
push
aad
shl
in
pop
adc
scas
mov
js
xor
xchg
(bad)
aad
fisttp
and
cmc
mov
ins
dec
lea
ins
aas
les
shl
mov
loop
xor
fld
cdq
stos
adc
jns
mov
cmp
cmp
add
push
sub
inc
cli
sub
aaa
cmp
in
movs
jno
sub
pop
push
sub
bound
mov
rcr
test
push
cli
push
scas
and
push
push
mov
mov
cli
fmul
cli
pop
ja
loopne
fiadd
xchg
ss
call
movs
xor
push
movs
sbb
fsubrp
and
in
in
mov
mov
push
mov
lock
movs
int
repnz
out
pop
jbe
or
pusha
sub
retf
in
mov
add
repz
out
cdq
gs
test
jge
sbb
loop
sbb
adc
(bad)
sbb
arpl
cmps
stos
inc
daa
repnz
sub
out
lds
add
or
enter
mov
lock
push
lea
stos
mov
cli
push
mov
cld
neg
loopne
rol
iret
mov
fidivr
clc
adc
xor
xor
mov
pop
sbb
mov
and
push
sub
jo
aad
xchg
stos
or
xchg
in
and
sub
xchg
lahf
jecxz
add
or
aam
fdiv
sar
gs
lahf
xchg
fimul
jne
jmp
data16
xchg
loope
faddp
and
jp
xor
sub
mov
push
retf
ret
pop
add
xor
mov
or
push
inc
inc
cmps
dec
jge
inc
mov
call
dec
pop
jle
mov
pop
enter
adc
push
mov
nop
jmp
push
lods
push
add
mov
jl
int
push
xchg
fisttp
cmp
jmp
out
inc
int3
int3
sar
mov
mov
sti
aaa
jle
xor
scas
rcr
or
(bad)
push
fimul
mov
or
mov
into
loopne
push
jno
call
sbb
(bad)
out
retf
in
das
inc
imul
into
cdq
mov
aaa
xchg
retf
es
ja
mov
jp
pop
mov
or
pop
add
jb
movs
shl
sub
xchg
mov
icebp
sbb
mov
push
(bad)
inc
aaa
aas
rcl
rcr
les
into
das
dec
inc
lods
jmp
(bad)
pop
dec
adc
movs
or
fst
cwde
xor
in
cdq
in
ss
daa
jne
xchg
shr
xor
movs
inc
push
sub
inc
ret
add
jno
xchg
adc
(bad)
std
call
mov
sahf
or
mov
jmp
pop
sbb
mov
jecxz
inc
outs
inc
or
in
shr
lock
call
and
retf
jmp
repnz
jnp
adc
xchg
ins
jae
mov
xor
dec
(bad)
int3
mov
outs
scas
jge
add
out
and
iret
sub
call
lds
pushf
das
pop
int
push
sub
and
inc
enter
(bad)
mov
mov
add
xchg
push
pop
movs
pop
push
mov
dec
loopne
xchg
aaa
rcl
(bad)
ins
cmc
clc
inc
adc
cmp
pop
in
push
bound
movs
test
movs
mov
sub
pushf
xchg
(bad)
fsub
add
mov
ja
sub
test
fild
mov
dec
dec
xchg
in
inc
stos
movs
scas
mov
jl
outs
retf
xor
(bad)
or
xor
or
call
cwde
xchg
out
ins
sub
outs
stos
jo
aam
jns
sbb
das
or
push
ss
ins
xor
out
mov
cli
push
xchg
or
xor
mov
shl
xlat
jmp
fsub
stos
inc
(bad)
pushf
xor
nop
out
or
or
call
mov
bound
ins
das
imul
add
pop
test
jmp
fbstp
fcomp
fsub
jmp
(bad)
(bad)
add
inc
xchg
scas
movs
mov
int
loopne
mov
mov
(bad)
pop
sub
rcl
or
adc
test
lods
push
adc
cmp
dec
push
ins
sbb
adc
es
mov
inc
bound
pop
daa
jecxz
imul
xor
cmp
(bad)
sbb
enter
mov
sub
and
inc
out
mov
sub
popa
out
pop
pop
das
jmp
in
hlt
test
dec
or
or
mov
or
pushf
mov
in
add
lods
mov
push
test
(bad)
mov
mov
js
sbb
lea
xor
retf
add
mov
and
jmp
mov
int3
mov
mov
fsub
fnstcw
pop
div
lods
das
loopne
mov
jo
jne
ret
push
das
pop
imul
pop
xchg
int3
push
mov
es
push
mov
imul
xor
test
push
ja
or
mov
push
adc
aam
jo
add
sub
js
push
pop
mov
or
push
adc
test
push
sub
lahf
pushf
mov
sbb
jbe
jge
stos
in
rcr
push
nop
pusha
xchg
mov
cs
lds
aas
popf
aad
nop
mov
add
push
lods
push
es
rcl
and
sbb
ret
call
dec
xlat
out
and
fisub
inc
add
clc
cld
(bad)
stos
out
adc
call
fld
jnp
and
aaa
loopne
mov
movs
loop
jns
push
(bad)
xor
pop
push
mov
lods
inc
ja
pop
retf
lods
scas
arpl
and
lea
loope
cmp
pop
mov
jge
fcomi
xchg
jno
in
arpl
test
stos
xchg
xchg
ror
jbe
pop
cmp
adc
add
iret
push
cld
jne
cmp
js
sahf
ja
fbld
int3
mov
outs
inc
pusha
in
fs
dec
jmp
xor
out
loope
dec
je
xor
cli
pusha
jge
dec
imul
mov
mov
cmps
fdivr
xchg
adc
and
mov
or
pop
ins
out
mov
cli
mov
xor
ror
jns
or
sbb
mov
push
jecxz
pop
mov
cmp
stos
xor
mov
outs
rep
mov
aas
arpl
pusha
scas
fs
int
icebp
test
rol
mov
xor
xchg
pop
out
jno
fbstp
gs
xor
shl
xor
lds
add
jns
shl
in
push
jmp
sbb
mov
jo
pop
xchg
push
jbe
cs
fnstenv
dec
or
pop
jae
stos
(bad)
lods
mov
mov
cmp
add
and
loopne
retf
test
lods
cmp
arpl
(bad)
sbb
test
(bad)
ins
jmp
adc
aam
mov
loope
or
mov
cmp
jno
xor
adc
out
aam
inc
cmp
cdq
outs
in
leave
pushf
in
sbb
xchg
into
jno
cmp
cmp
mov
and
push
sub
add
cmp
cmp
inc
imul
je
xchg
jbe
sub
jbe
xchg
in
mov
mov
cmp
jecxz
test
push
push
push
push
add
push
dec
fcmovbe
movs
inc
pop
mov
jnp
jmp
jns
lea
pop
stc
add
ret
std
lods
int3
pop
mov
call
js
xchg
pop
out
aas
in
mov
ss
ror
mov
inc
movs
xchg
pop
test
and
add
arpl
add
mov
xlat
and
sbb
les
pop
daa
add
jne
les
in
iret
add
cmp
call
jb
xor
inc
enter
test
inc
sub
and
sar
call
add
jecxz
lds
adc
adc
or
jl
inc
or
(bad)
mov
arpl
mov
jne
push
dec
test
dec
mov
inc
xchg
mov
(bad)
mov
mov
lock
std
out
inc
data16
imul
add
aam
and
mov
dec
test
mul
xor
push
jl
iret
dec
test
add
cmps
addr16
in
test
jno
push
sub
addr16
add
xchg
jbe
push
arpl
es
pusha
push
xor
arpl
mov
mov
xor
(bad)
(bad)
push
mov
and
push
retf
adc
or
cmp
jns
sub
xchg
xor
jo
mov
jo
jae
mov
mov
dec
and
outs
mov
cwde
inc
sahf
jmp
sub
jmp
add
cdq
scas
fbld
repz
loopne
shl
push
cmp
ret
aam
(bad)
xchg
adc
cmp
sub
lock
xchg
out
sbb
adc
push
enter
xor
shl
mov
dec
call
sub
cs
push
ds
push
fs
adc
push
js
hlt
lahf
cmps
jp
out
hlt
retf
outs
mov
or
lahf
inc
or
les
out
xchg
ss
add
sti
adc
jne
into
ret
pop
(bad)
int3
ds
fistp
mov
jecxz
adc
imul
pop
or
inc
cmps
fst
jle
mov
shl
repnz
inc
cmp
cmovbe
mov
lods
in
and
add
shl
add
xchg
cdq
sub
dec
push
add
test
pop
or
inc
sbb
add
imul
sbb
call
std
call
daa
dec
mov
lock
cld
inc
cmps
(bad)
int
hlt
xchg
jns
retf
lds
cmp
repnz
mov
dec
test
repnz
(bad)
sub
add
aad
stc
mov
or
rcl
pop
outs
inc
mov
inc
shl
add
mov
xlat
stos
push
mov
test
mov
mov
retf
mov
jmp
add
mov
adc
sbb
mov
fisttp
push
out
and
cmp
test
mov
clc
bound
xchg
sbb
mov
adc
test
add
push
stos
dec
pop
shr
das
and
dec
ja
scas
dec
jecxz
and
clc
cmp
cs
fidivr
mov
into
mov
int
xor
xchg
mov
mov
sub
retf
cmps
pop
mov
leave
dec
xlat
inc
mov
mov
dec
pop
outs
lods
xor
mov
in
jmp
(bad)
dec
ror
jmp
sub
sahf
mov
jnp
and
(bad)
lea
cwde
out
and
sub
call
push
rcl
cmc
push
xor
pop
fimul
outs
jmp
js
lds
rcl
add
bound
xchg
popa
je
sbb
mov
cmps
cmp
sbb
push
pop
test
sbb
shl
es
add
hlt
xor
(bad)
push
mov
scas
test
aas
inc
fsubr
enter
cld
inc
adc
loope
imul
loope
jmp
nop
mov
test
loope
jo
aas
call
inc
pop
inc
adc
movs
or
push
or
add
ins
(bad)
mov
fnstenv
mov
adc
rol
inc
sub
jmp
mov
sbb
loop
ficom
cmp
lods
cmps
ret
sar
enter
unpckhps
jecxz
in
mov
nop
jge
popa
scas
dec
sub
in
push
dec
in
es
pop
(bad)
jge
pop
nop
nop
adc
lea
loopne
mov
sub
pushf
aam
sbb
(bad)
ds
(bad)
mov
int3
aam
sub
push
or
je
push
into
lock
inc
pop
pop
xchg
cmp
leave
push
mov
xor
xor
inc
jns
shr
retf
cmp
jns
pop
xor
cmp
sbb
adc
cmp
inc
dec
and
movs
mov
hlt
mov
pop
ja
scas
pop
ins
inc
cmp
loopne
cmc
xor
mov
push
jmp
dec
hlt
rcl
pop
cmp
sub
add
push
sbb
mov
loope
repnz
dec
cdq
push
xor
mov
fistp
dec
das
push
not
int3
inc
cmp
push
not
rcl
movzx
int3
dec
dec
mov
fs
enter
and
aad
dec
jecxz
adc
jge
xor
add
imul
fsubp
push
bound
in
pop
shl
into
ss
shl
jne
and
push
xor
adc
jmp
xor
outs
loopne
mov
cmp
rcr
pop
fmul
cmp
pop
test
hlt
cmp
repz
sbb
mov
(bad)
xlat
pop
mov
sbb
bound
push
popa
add
sbb
jnp
clc
xor
xor
jle
mov
pop
pandn
jb
push
aas
dec
dec
cmp
lock
pop
push
push
push
push
inc
movs
adc
push
push
ins
push
ins
dec
call
scas
pop
fucom
push
rcl
aaa
lds
addr16
lods
xchg
push
es
push
adc
call
fstp
and
mov
int
lea
jle
adc
xor
dec
daa
cmps
mov
fnstsw
aas
dec
push
(bad)
fidiv
and
cmp
cmps
mov
or
push
out
test
jp
ffree
push
test
mov
test
clc
pop
mov
rcl
dec
cmps
pop
dec
lods
cmps
sbb
cmp
shr
adc
hlt
pushw
push
and
xor
adc
xchg
ds
cmp
(bad)
cld
add
loope
into
lods
lahf
int
fistp
adc
and
jne
jo
leave
out
int3
jmp
push
stc
in
or
cmp
fs
nop
fbld
push
sub
dec
fsub
mov
mov
add
mov
daa
mov
add
pop
pop
std
xchg
pushw
ins
mov
xor
pushf
cmp
ds
cli
in
in
les
sbb
addr16
push
add
scas
mov
xchg
jae
pop
int3
or
cmp
mov
data16
out
adc
jmp
fcomp
mov
lock
jbe
leave
mov
mov
test
mov
xchg
jo
fisttp
adc
je
outs
cmp
stos
iret
lea
shl
inc
or
jmp
stc
jno
fsubp
int3
sar
xchg
jbe
inc
pop
sbb
out
repz
cmp
mov
or
jb
jae
sbb
inc
dec
mov
inc
(bad)
(bad)
pop
sar
inc
retf
fisttp
xchg
push
femms
or
shl
or
(bad)
call
and
push
xchg
jae
pop
bswap
lahf
xor
pop
adc
fisub
mul
shl
pop
sbb
mov
ds
sub
fs
ds
xor
xor
or
imul
jmp
call
inc
inc
and
push
cmps
mov
repnz
pop
dec
mov
jl
mov
movs
out
push
sub
sbb
movs
ret
jae
(bad)
mul
(bad)
out
mov
popf
or
aas
mov
mov
xchg
push
retf
test
xchg
jmp
adc
sbb
jmp
call
xchg
rcr
add
cmp
sub
pop
and
div
mov
adc
fisub
adc
mov
push
repnz
hlt
mov
iret
fs
mov
dec
cli
cmp
or
movs
sti
xor
xchg
ja
popa
pop
test
(bad)
adc
cwde
inc
fidiv
push
mov
xchg
and
test
adc
mov
pop
lock
mov
mov
jle
and
aaa
lea
aam
leave
or
xlat
stos
push
ds
fwait
push
dec
(bad)
xor
inc
xchg
jo
xchg
mov
ficom
fisttp
and
push
mov
hlt
mov
sbb
cmc
cmp
out
aaa
push
dec
xchg
xor
mov
dec
imul
lods
or
dec
jo
fbld
lods
push
nop
jne
inc
mov
call
jge
xchg
iret
xchg
jnp
cli
aad
sub
jae
mov
fild
sbb
cs
sti
mov
sub
add
icebp
or
sbb
mov
shl
es
mov
push
add
cmp
push
(bad)
cmp
sub
pop
sbb
and
jae
test
sbb
(bad)
mov
test
jae
push
or
and
mov
aam
call
inc
push
imul
aam
(bad)
dec
push
int
mov
ins
jno
iret
mov
test
leave
repnz
mov
push
xchg
addr16
cmp
sti
iret
adc
sub
cdq
or
pop
jbe
stos
hlt
div
jp
and
hlt
adc
ja
in
idiv
mov
leave
movs
inc
xor
cdq
ror
mov
add
ins
sahf
test
dec
mov
in
popf
mov
lahf
pop
push
pushf
icebp
test
movs
cdq
cdq
aam
pop
movs
cmp
mov
(bad)
movs
dec
push
test
jecxz
push
adc
js
(bad)
shr
imul
out
and
add
push
aad
push
pop
xor
inc
fdivr
in
xor
mov
sub
pop
stos
dec
test
lahf
mov
movs
mov
data16
push
neg
jecxz
xor
je
push
cmp
aam
xchg
sub
rol
fmul
bound
dec
xor
dec
xchg
dec
imul
pop
sub
mov
popf
out
stos
xor
enter
pop
call
cli
mov
icebp
mov
sbb
inc
gs
sub
push
mov
outs
fs
sar
in
scas
iret
pmaxub
loope
or
jg
push
repz
repnz
mov
mov
cs
cmp
pop
mov
clc
jecxz
cmps
dec
push
dec
lock
cmc
(bad)
pop
xor
push
(bad)
cmc
inc
push
adc
test
hlt
mov
retf
idiv
xor
int
jmp
gs
xchg
sahf
das
jmp
jne
dec
test
adc
inc
sub
jle
or
popa
jno
or
mov
popf
lods
pop
fdiv
mov
and
rol
fwait
xchg
add
mov
sub
pop
dec
mov
or
jne
out
stc
pop
scas
mov
cmp
shl
loopne
adc
sub
mov
sbb
(bad)
mov
sub
hlt
jns
mov
mov
ret
aas
cmp
popa
das
mov
push
aas
pop
xlat
xchg
out
add
or
mov
popa
xor
hlt
loop
adc
bound
xchg
out
or
pop
addr16
outs
lea
or
mov
repnz
movs
ins
xor
sahf
in
jmp
outs
sub
adc
loope
dec
imul
movs
idiv
stos
aad
and
movs
(bad)
lods
add
mov
stos
push
push
jl
mov
cmps
mov
retf
shl
sahf
dec
ret
xor
retf
cmps
jmp
aam
retf
pop
add
inc
sbb
xor
std
sub
inc
push
fld
aaa
xchg
ss
mov
jns
shr
push
or
mov
xchg
mov
dec
mov
dec
(bad)
out
jge
(bad)
add
xlat
push
add
push
inc
iret
push
pop
pop
movs
add
lea
movs
mov
rcr
jle
int
loope
jne
or
mov
aam
setb
shl
lock
or
adc
xchg
mov
popa
or
call
mov
xor
push
les
pusha
hlt
fstp
iret
push
jl
mov
mov
daa
in
fsub
lahf
movs
add
sar
xchg
pop
popa
or
push
add
imul
(bad)
sub
pop
fimul
mov
dec
xchg
shr
push
sbb
push
lock
push
imul
jo
adc
ds
pop
push
jle
xor
sbb
and
cdq
inc
sbb
aaa
xchg
cmp
repnz
and
movs
jb
and
lahf
mov
inc
sub
sti
cmps
sbb
pushf
xor
inc
sbb
jmp
daa
in
cmc
mov
pop
aaa
les
test
dec
jecxz
jg
movs
cmp
inc
int3
push
mov
movs
jae
mov
sbb
and
xchg
test
pop
int3
scas
icebp
ds
cmp
lock
sbb
xor
(bad)
aaa
test
jecxz
or
outs
adc
jl
aam
in
gs
mov
std
xchg
dec
sbb
push
mov
repnz
rcl
mul
in
push
dec
in
(bad)
fsubr
adc
push
data16
fwait
rcl
mov
push
cmp
and
xchg
push
mov
loopne
adc
or
mov
push
sub
js
cli
mov
cmp
test
push
jp
sbb
cmp
js
xor
jmp
and
shl
jge
mov
into
stos
cmp
xor
ror
jne
cmp
(bad)
push
xor
xor
xchg
fisttp
and
xor
loopne
add
arpl
addr16
lds
xchg
sub
movs
and
sbb
aam
aam
add
mov
cdq
and
sub
lahf
xor
cmc
sbb
dec
add
sbb
scas
inc
jge
mov
add
dec
adc
in
lock
mov
dec
jecxz
or
mov
(bad)
ficom
jne
xchg
dec
addr16
lods
aaa
sar
scas
fs
int3
cmc
pop
pop
lahf
cs
imul
or
xchg
(bad)
stos
xchg
mov
cmp
jae
jmp
xchg
or
sbb
xchg
lahf
shl
mov
repnz
xchg
add
sti
pusha
pusha
jp
push
add
add
mov
dec
test
lds
mov
popf
aam
ror
mov
ret
cmp
div
pushf
mov
fstp
sub
lock
jmp
xor
or
into
cmp
fisttp
xchg
dec
jecxz
fstp
pop
(bad)
pop
sahf
ret
and
mov
test
in
pop
xor
lods
adc
sub
cmp
enter
loop
lods
mov
gs
jmp
in
push
cmp
cmps
in
inc
(bad)
retf
mov
push
ja
stos
aaa
cmp
inc
mov
push
mov
cmp
xchg
xchg
push
outs
mov
jno
inc
sub
fisttp
int3
sbb
(bad)
mov
popf
dec
inc
push
jge
and
into
fstp
popf
mov
(bad)
aad
cmc
push
lahf
and
inc
mov
sbb
mov
add
pop
in
test
loopne
mov
cmc
sbb
jne
and
cwde
pop
dec
jns
stos
sbb
dec
push
jnp
test
xor
jns
sti
dec
test
lds
or
in
jg
xor
dec
lahf
scas
dec
jl
jecxz
ret
and
add
test
data16
repnz
xchg
dec
out
retf
ja
leave
jmp
(bad)
mov
rol
adc
addr16
jno
xor
cdq
and
adc
ins
cmps
pop
loopne
cli
jns
pop
test
pop
outs
cmp
push
pop
aam
sbb
aas
fldenv
cld
sub
ror
mov
mov
dec
inc
xlat
jae
pop
sti
pusha
into
es
out
inc
sub
daa
push
mov
push
jmp
cmp
dec
sub
je
mov
sbb
outs
sahf
inc
sbb
int
outs
mov
cwde
jo
sub
xchg
or
clc
pop
out
cld
pop
push
mov
push
rol
ins
cmps
sub
in
sub
xchg
test
pop
or
leave
cmp
inc
mov
inc
adc
imul
inc
jmp
inc
add
cwde
aam
pop
or
adc
and
mov
cdq
aaa
shr
adc
repz
loope
aam
popa
xor
dec
int
sub
cs
mov
adc
mov
popf
repnz
imul
rcl
(bad)
mov
das
test
inc
xchg
jno
jno
ds
xlat
push
dec
sbb
cld
adc
fisttp
retf
mov
xchg
lock
cmp
arpl
mov
jno
and
call
mov
outs
outs
pop
scas
shr
out
dec
pop
push
mov
ss
mov
(bad)
out
pop
xor
jmp
data16
adc
adc
fadd
sub
mov
xchg
jno
pop
pop
mov
fcom
out
fnstenv
call
pop
sahf
pop
dec
xor
mov
lds
ret
sub
pop
jmp
sbb
pusha
fsubr
bound
iret
(bad)
pop
jg
sub
aad
ins
neg
sbb
sbb
mov
pop
sub
jno
ror
pop
cmp
js
add
call
sub
pop
mov
aam
cmp
in
retf
jg
push
stc
je
cmp
rcr
mov
test
popa
sbb
pop
test
nop
bound
ret
je
int
repnz
push
xchg
push
mov
and
fcom
push
addr16
xchg
es
(bad)
adc
pushf
sub
test
outs
leave
xchg
pop
nop
or
or
in
jge
or
nop
push
xchg
daa
test
in
ret
adc
lock
push
push
inc
xchg
(bad)
push
push
mov
and
xor
add
push
hlt
es
cli
mov
(bad)
jnp
xchg
adc
xor
xor
mov
ror
(bad)
mov
mov
test
add
mov
in
mov
xchg
inc
shl
popf
push
pop
dec
pop
ficom
add
jne
fdiv
sbb
into
xchg
cmp
jbe
imul
mov
sub
rcl
sar
push
sbb
in
repz
lods
into
push
popa
rcr
cmp
adc
jl
xor
inc
(bad)
xor
inc
mov
xlat
adc
or
int
or
fwait
push
mov
inc
popa
mov
push
mov
sub
into
add
xlat
fisubr
sbb
leave
pop
call
mov
or
mov
cld
imul
aam
clc
cwde
call
mov
fmulp
push
add
and
inc
pop
jg
stc
sub
mov
adc
cmp
inc
jb
push
gs
ror
pop
pop
mov
cmp
(bad)
jl
xchg
jno
cs
repnz
in
inc
mov
mov
pushf
sub
push
data16
lock
fbld
mov
push
jnp
call
jle
mov
mov
es
jb
pop
inc
mov
inc
cwde
add
mov
push
retf
or
sbb
retf
add
out
jae
adc
sub
mov
jmp
aam
jge
sub
in
sbb
mov
xor
lds
sub
mov
pop
push
and
pop
adc
mov
jns
xor
sub
nop
push
and
das
sub
int3
jecxz
bound
push
imul
pop
sbb
pop
sbb
js
sti
icebp
mov
das
(bad)
setb
cli
imul
loop
popf
add
mov
sbb
out
mov
cmp
xor
adc
jmp
xchg
mov
popf
xchg
pop
xchg
cmp
push
out
cmp
icebp
add
jns
push
les
fst
test
ja
pop
std
div
test
inc
dec
je
test
lds
adc
mov
jo
jge
dec
pop
mov
mov
mov
adc
sbb
xor
mov
and
or
push
pop
pop
mov
retf
outs
(bad)
ins
mov
sbb
pusha
adc
frstor
mov
fucomp
cld
ficomp
add
xchg
inc
jbe
push
pop
sub
cmp
out
push
aad
ds
out
leave
(bad)
cmc
fsubr
arpl
(bad)
fidiv
pop
fdiv
retf
xchg
adc
xchg
std
aaa
or
jb
xor
adc
add
in
movs
jmp
jmp
jg
mov
pusha
cdq
cmp
pop
jecxz
xchg
xchg
dec
pop
add
or
inc
mov
mov
fisttp
(bad)
or
push
ja
add
data16
ins
ins
sbb
jl
inc
sbb
pushf
pop
xchg
cmc
outs
lock
xchg
push
in
div
cmp
lods
inc
imul
aad
out
sbb
push
cmp
rcr
jmp
fdivr
and
jecxz
icebp
mov
mov
and
lods
ins
mov
cmp
pop
loope
sahf
in
neg
ret
jnp
shr
mov
shl
lods
sbb
out
mov
xchg
fsubr
adc
push
pop
adc
lods
js
pop
faddp
pop
mov
nop
fnstenv
pop
test
jno
mov
inc
push
and
xchg
lds
popa
mov
mov
cwde
(bad)
in
or
or
and
jo
jns
inc
ret
or
into
push
inc
inc
xchg
pusha
aad
movs
mov
push
push
mov
out
(bad)
popf
(bad)
pop
mov
dec
stc
or
xor
data16
dec
sub
inc
push
lahf
ds
push
test
sub
mov
inc
fwait
repz
(bad)
pop
xchg
ins
out
loopne
retf
outs
mov
out
mov
mov
jnp
cmp
mov
js
xor
jmp
retf
mov
loope
xor
xor
jne
ss
cmp
mov
repnz
div
or
int
add
xor
dec
inc
out
mov
mov
jl
cmc
or
mov
fistp
xor
xchg
ret
ret
mov
adc
inc
fldcw
fld
cwde
and
push
jle
dec
and
cs
xlat
dec
dec
sbb
scas
mov
sub
imul
bswap
mov
cmp
sbb
sbb
or
sbb
mov
mov
or
nop
push
adc
cwde
adc
icebp
ret
mov
test
push
cli
stos
dec
shr
test
retf
loope
pop
stos
cmps
dec
dec
jge
or
rcr
out
sub
sbb
sar
enter
fstp
lods
push
add
mov
or
data16
call
iret
push
dec
pop
push
mov
jmp
cmp
shl
mov
sub
inc
(bad)
out
mov
mov
movs
test
cmp
xchg
ret
inc
cdq
jb
inc
jmp
sub
xchg
in
push
hlt
inc
aad
inc
xchg
call
cmp
icebp
addr16
fild
cs
inc
shr
addr16
repnz
dec
sbb
and
retf
ror
js
movs
jle
and
movs
mov
cmps
mov
add
popf
pop
test
repz
sbb
arpl
inc
test
sbb
xchg
push
scas
fwait
pop
dec
push
jg
push
and
mov
icebp
xchg
inc
jmp
scas
adc
add
inc
test
ds
ror
sub
dec
mov
xor
fwait
xor
iret
stos
(bad)
clc
sub
inc
sub
add
mov
xor
inc
loopne
jne
cmp
inc
and
jmp
dec
jo
jge
arpl
adc
(bad)
cdq
jp
movs
in
into
mov
scas
sti
cmc
test
outs
loope
sub
cmp
xor
addr16
mov
movs
mov
add
(bad)
jo
mov
fisubr
jle
bnd
mov
xor
in
and
movs
hlt
test
cmps
inc
pop
sub
(bad)
inc
aam
(bad)
ins
in
dec
dec
or
imul
nop
mov
icebp
cdq
fsub
cli
mov
inc
adc
mov
outs
icebp
pop
sti
and
imul
arpl
popa
push
or
push
repz
sbb
nop
popa
js
add
test
rcpps
lahf
push
jno
push
inc
out
retf
popa
movsx
or
icebp
mov
adc
add
xchg
test
aad
rcr
xor
and
add
xchg
repz
(bad)
adc
xor
sbb
movs
shl
xchg
fwait
jnp
leave
es
add
data16
fwait
sbb
nop
in
ds
sbb
dec
popa
(bad)
call
leave
dec
(bad)
shl
mov
arpl
lods
push
cmp
and
(bad)
mov
xor
or
mov
jbe
loop
es
mov
add
sub
shl
dec
sub
retf
dec
call
in
seto
pop
outs
jne
sti
icebp
dec
add
in
push
fnsave
dec
xchg
jns
lods
fild
scas
mov
push
jmp
dec
ins
xor
movs
addr16
push
(bad)
repz
dec
out
popa
and
aaa
xor
or
(bad)
jns
xlat
jb
sbb
and
cmp
xor
add
inc
lods
arpl
cmp
cmp
test
mov
fmul
xor
add
jge
cld
into
movs
dec
stos
data16
cli
xchg
xchg
sbb
push
mov
fld
repnz
int3
ret
ret
pop
retf
inc
fadd
icebp
lods
test
and
cmps
mov
dec
fs
pop
xor
push
popa
xchg
sbb
scas
mov
and
or
fwait
dec
cmp
out
mov
add
xchg
add
mov
sub
aad
mov
add
push
push
mov
sbb
jb
inc
aam
add
dec
lods
ja
lods
outs
sbb
push
and
cmp
mov
xor
pop
gs
adc
pop
fisubr
and
jb
jge
mov
mov
mov
add
pusha
or
mov
test
lock
jnp
stc
push
fdivr
js
jb
fidivr
cs
lds
sub
imul
push
jg
mov
hlt
sbb
shl
add
or
(bad)
aad
and
out
call
xor
mov
lahf
pop
jmp
push
jmp
sbb
std
push
xor
mov
and
mov
jecxz
dec
cmp
fld
ja
jne
cmp
out
pop
add
jecxz
out
loope
lock
scas
fld
mov
rcl
mov
repz
rol
dec
mov
clc
mov
xchg
sub
lea
bound
fistp
mov
or
push
add
test
adc
pop
mul
mov
es
mov
fisttp
mov
cs
jmp
dec
scas
fstp
jnp
outs
mov
fimul
imul
and
and
adc
mov
mov
out
jns
stos
ror
inc
dec
xchg
vpextrw
xlat
jns
jl
cwde
rol
add
jb
xchg
push
into
push
mov
movs
mov
sti
gs
pop
pop
add
rol
pop
sub
add
in
(bad)
sub
daa
adc
data16
js
movs
test
test
out
aam
mov
xchg
scas
and
ret
inc
mov
push
xchg
fiadd
ss
mov
push
cmp
and
addr16
xchg
add
and
or
sub
xchg
xor
mov
rcr
gs
xchg
pop
adc
cwde
outs
retf
arpl
test
lea
fsub
iret
in
test
dec
mov
popa
pop
push
mov
mov
das
rcr
stos
int3
imul
fldcw
pop
and
out
popa
pop
and
and
and
enter
into
int
mov
cld
in
sub
adc
cmp
xchg
jle
scas
sar
popa
inc
pop
and
out
pusha
add
xor
jne
mov
inc
cmp
outs
outs
xchg
dec
imul
sbb
aam
mov
pop
repz
jns
mov
xor
test
mov
(bad)
in
xchg
ficom
sub
pusha
jg
je
pusha
sbb
pushf
pop
sar
icebp
inc
cs
in
mov
jecxz
and
push
pop
scas
dec
push
fs
inc
pop
ret
pushf
pusha
imul
jbe
sbb
jo
gs
inc
xchg
ret
jno
cmp
out
das
cmp
leave
ins
fistp
mov
mov
xor
push
dec
pop
jg
add
sub
xchg
retf
or
adc
(bad)
out
mov
dec
mov
mov
inc
lods
ins
mov
pop
jg
cld
cdq
adc
mov
shl
adc
out
jmp
mov
mov
fcom
and
push
jns
outs
xlat
xor
arpl
stos
mov
loop
pop
sbb
clc
lods
outs
jle
jae
repnz
cmp
add
mov
push
add
and
iret
fld
fstp
mov
push
daa
inc
sbb
test
mov
adc
pop
ret
push
fwait
cld
xor
das
cmp
(bad)
pop
mov
inc
and
int3
xor
movs
lea
mov
or
adc
mov
xchg
jp
js
stc
add
jno
lods
xchg
repnz
pop
sti
pop
pushf
push
inc
cs
nop
pop
pop
fisttp
sahf
fistp
ds
pop
pushf
retf
test
aas
pop
(bad)
dec
jo
neg
stos
leave
repz
sbb
(bad)
inc
mov
adc
cmp
cmps
mov
bnd
adc
cmp
xor
jmp
add
or
stos
xchg
xchg
pop
dec
(bad)
jl
daa
dec
sbb
hlt
cdq
loope
mov
pop
ss
jae
push
ret
sbb
xchg
cli
and
jae
mov
clc
and
and
mov
add
mov
mov
xor
or
mov
mov
in
scas
aas
pop
push
jl
jecxz
jo
or
call
stos
sbb
test
(bad)
(bad)
fcomp
ret
push
pop
push
dec
(bad)
mov
mov
popa
mov
data16
call
dec
test
pusha
xor
or
fs
sub
and
sub
js
jbe
daa
or
lea
sub
xchg
cli
in
cmp
les
and
enter
dec
sbb
aam
lods
pop
inc
jb
ds
push
mov
fisubr
mov
loop
and
sbb
mov
daa
ret
lahf
(bad)
fadd
pop
test
xor
add
lods
lea
dec
outs
lods
div
mov
outs
jg
mov
outs
add
popfw
jmp
mov
retf
aad
(bad)
loopne
inc
and
xchg
cmp
call
jbe
ret
(bad)
fnstsw
(bad)
push
stc
push
mov
and
into
mov
test
or
push
mov
add
cld
hlt
and
jge
xlat
mov
mov
or
jl
dec
adc
and
jne
jb
ins
fwait
and
fcomip
push
add
jbe
mov
cmc
sub
jle
mov
into
clc
push
jo
xchg
inc
out
push
ja
jns
cmp
mov
and
or
out
pop
jns
test
jne
inc
mov
addr16
xchg
setb
movs
mov
push
lods
ror
jns
retf
test
xor
mov
cmp
pop
and
inc
adc
push
pop
ja
rol
xchg
cli
in
fisubr
jmp
cs
movs
(bad)
test
(bad)
sub
lea
jnp
clc
outs
cwde
das
nop
or
je
fldz
mov
mov
mov
mov
aad
aad
jmp
lods
les
adc
push
push
mov
mov
enter
ror
inc
mov
test
inc
add
pop
nop
pop
jae
add
or
rol
ret
popf
aam
mov
cmp
cli
cmp
and
jns
fimul
xor
out
call
lea
sbb
fcomp
cmp
mov
mov
sbb
div
test
lahf
lock
fdiv
mov
(bad)
loop
mov
jae
test
add
adc
cmc
aas
in
leave
ja
scas
popa
cmps
inc
mov
popf
fwait
dec
sub
cmps
mov
xchg
and
(bad)
imul
dec
sar
xchg
sbb
outs
stos
in
lahf
push
sbb
cmp
push
popf
test
xchg
fldl2t
mov
sub
das
cmp
mov
sahf
mov
push
cs
cmps
call
jnp
lds
ret
div
rcl
pop
cwde
inc
test
mov
and
leave
sub
stos
enter
pusha
jle
aaa
push
mov
jl
mov
mov
mov
test
pop
stos
or
inc
(bad)
(bad)
repnz
add
js
mov
or
pextrw
inc
(bad)
xor
lods
mov
shl
jns
inc
and
pop
mov
push
sbb
pop
rol
je
sbb
dec
in
pop
and
loopne
lahf
dec
sbb
fcmovne
jl
rcl
ja
outs
into
mov
jg
pop
xchg
mov
jmp
test
pop
out
pop
sbb
push
in
inc
push
sub
dec
les
push
xchg
addr16
cli
sbb
fisttp
mov
popa
retf
neg
xor
ins
mov
es
inc
mov
hlt
pop
dec
pop
dec
mov
xorps
mov
jmp
sahf
xchg
cmp
add
cdq
push
sar
inc
pmulhw
test
pop
adc
lea
js
push
push
xchg
ret
and
sub
mov
or
xor
jg
ds
mov
push
shr
xor
imul
rcr
aad
retf
pop
mov
inc
ret
dec
int3
ud1
mov
and
lods
mov
pop
mov
or
mov
ds
cmps
dec
dec
mov
sbb
test
sub
mov
scas
daa
rcr
lock
stos
cs
loope
jecxz
jge
into
aam
pop
xor
jge
les
add
xor
lock
add
mov
push
mov
jnp
xor
sar
scas
sub
ficomp
dec
iret
pop
inc
jg
repnz
enter
cdq
inc
push
fild
inc
shr
(bad)
fild
fistp
addr16
dec
xlat
mov
inc
sub
outs
adc
xor
lahf
mov
sti
lock
std
sahf
aam
pop
mov
push
xchg
or
movs
aad
(bad)
(bad)
div
clc
mov
xchg
shr
lahf
adc
or
outs
mov
cmps
jle
lock
mov
xor
outs
mov
outs
mov
and
les
aaa
stos
sbb
sub
fild
push
popf
fld
not
cmp
in
dec
in
xor
push
push
jb
push
adc
out
push
daa
cli
(bad)
fisttp
je
or
jl
cmp
mov
or
(bad)
jecxz
jns
gs
push
jp
(bad)
pop
into
xchg
in
sub
mov
js
xchg
pop
test
adc
lods
ins
retf
iret
aaa
(bad)
int3
push
adc
int
xor
jnp
inc
out
inc
or
dec
int
pop
push
mov
(bad)
cmp
cmps
xchg
test
jnp
fmul
jb
mov
or
imul
scas
and
sti
add
dec
gs
add
or
out
xchg
and
fmul
dec
hlt
repnz
int3
mov
push
push
js
xor
stos
sbb
fisub
fisub
div
rcl
xchg
bnd
jbe
or
fwait
test
xchg
push
mov
adc
(bad)
fxch
loope
shr
test
sbb
fadd
mov
jl
das
mov
dec
jno
repnz
rcr
iret
pop
loop
inc
pop
mov
addr16
or
inc
sub
dec
bound
(bad)
jmp
lods
xchg
pop
dec
and
cmp
mov
pop
adc
inc
add
add
test
(bad)
repnz
sahf
or
dec
inc
fisttp
xchg
push
add
sbb
neg
and
das
sti
xchg
cli
pop
mov
pusha
jle
cmp
fbstp
mov
pop
push
test
mov
hlt
popf
jg
xor
ins
xchg
dec
cmp
inc
xchg
pop
mov
or
test
inc
or
or
cmp
(bad)
outs
xor
ror
stos
push
loop
xlat
push
mov
mov
pop
mov
push
(bad)
mov
xchg
das
fimul
sbb
sti
add
clc
lds
jp
adc
imul
jbe
cmp
xor
outs
pop
test
mov
sahf
dec
loop
mov
adc
push
in
imul
xchg
pop
mov
xchg
jl
lods
repnz
jge
fiadd
or
out
es
outs
xor
dec
add
adc
daa
mov
jle
retf
xor
es
lea
inc
ss
inc
mov
(bad)
mov
mov
aam
xchg
aas
push
push
out
pushf
leave
sbb
shl
mov
pop
add
pop
aam
xchg
lahf
stos
leave
push
bound
dec
push
mov
fsub
ret
(bad)
cld
leave
and
and
outs
jae
aad
adc
loop
sbb
cmp
dec
das
adc
lods
jg
(bad)
out
sub
push
cmps
fst
addr16
and
dec
mov
sbb
inc
pop
cmps
cld
pop
sahf
dec
mov
xlat
rol
sub
sbb
jmp
es
mov
fstp
std
pop
ins
int
gs
loop
cdq
add
jo
inc
cdq
fld
(bad)
xchg
(bad)
pop
dec
xchg
xchg
fisubr
nop
(bad)
data16
scas
and
fucom
movs
adc
dec
or
pop
(bad)
or
cmc
dec
cli
xor
lea
fcomp
mov
test
ins
sub
ja
adc
test
test
dec
scas
rcl
cs
cmc
sub
repz
es
add
or
push
(bad)
fdivr
inc
or
scas
pusha
mov
jae
sbb
inc
pop
or
es
sbb
popf
fild
and
aam
cmps
sbb
xchg
jae
xchg
pop
imul
mov
xchg
mov
xchg
inc
cs
jg
stc
fs
hlt
fcom
mov
lods
sbb
scas
shl
or
cdq
aas
jmp
aam
jno
aas
mov
je
pop
test
xchg
fimul
cmp
jns
lock
imul
cli
out
stc
ret
cli
rol
sar
cmps
hlt
xchg
jmp
in
mov
pop
(bad)
shl
movs
call
hlt
add
repz
aam
push
imul
js
sub
sar
cmc
xor
dec
sbb
(bad)
xor
ret
inc
jne
daa
not
adc
outs
dec
jmp
test
(bad)
iret
daa
add
push
sub
mov
mov
shl
sbb
out
outs
mul
mov
mov
stos
mov
jns
sahf
and
out
movs
cmps
in
sbb
jl
and
int3
ret
push
popf
mov
imul
imul
push
das
out
xor
iret
xchg
cli
iret
cmps
pop
mov
sbb
out
ret
pop
daa
scas
sar
cmp
outs
cmp
push
mov
xor
xchg
mov
ss
loop
or
dec
mov
mov
and
dec
pop
das
std
bswap
xchg
xchg
add
inc
enter
lahf
sbb
lods
xchg
scas
mov
pop
icebp
sub
sbb
add
mov
(bad)
rcl
pop
outs
out
mov
daa
pop
ror
mov
mov
cmps
(bad)
dec
or
sbb
jp
or
push
push
mov
loop
rcr
push
and
jo
push
imul
arpl
push
or
jmp
add
out
jmp
movs
arpl
adc
mov
push
int3
out
inc
xor
or
cmps
jecxz
and
outs
movs
or
es
xchg
add
dec
sar
mov
dec
add
scas
mov
add
push
sub
fsubr
xor
ret
inc
nop
mov
sub
ss
imul
dec
fcomip
icebp
inc
dec
pop
pop
push
push
(bad)
dec
xchg
call
sub
ins
add
ret
mov
int
jmp
add
and
ror
icebp
xor
inc
mov
retf
or
stos
mov
inc
(bad)
pop
aaa
dec
jae
aas
sub
xchg
movs
and
jb
mov
inc
pusha
jo
hlt
outs
mov
int
sar
sbb
and
cmp
into
mov
mov
cmp
sbb
mov
aas
dec
or
jae
cli
push
mov
push
or
std
jb
rep
retf
jg
stos
jle
imul
popa
inc
push
ins
inc
sbb
mov
fs
jb
xor
addr16
xchg
pop
xchg
or
(bad)
call
sub
or
ret
ret
cmp
mov
mov
jle
(bad)
iret
adc
(bad)
xor
fisttp
pushf
mov
inc
popa
jecxz
cmps
mov
je
icebp
mov
arpl
sbb
and
xchg
push
add
pusha
adc
and
jecxz
sar
mov
sbb
xchg
in
add
outs
clc
daa
push
mov
bound
mov
pop
xchg
hlt
jmp
push
mov
xchg
jle
daa
retf
scas
mov
sti
push
pop
pop
mov
adc
sbb
pop
add
mov
and
ins
xchg
arpl
ins
xor
xor
mov
dec
mov
pop
mov
push
inc
(bad)
ficom
jnp
mov
sbb
daa
rcr
add
mov
or
in
out
loope
pop
inc
test
cmp
pusha
in
pushf
out
mov
mov
sbb
mov
loopne
sti
pop
stc
jmp
push
test
push
(bad)
mov
fwait
mov
out
inc
fs
inc
imul
or
jge
in
jns
ins
and
push
or
popf
xor
mov
pop
addr16
mov
shr
push
jae
in
jo
inc
and
bound
out
xchg
ins
into
inc
xor
bound
add
mov
xchg
add
cmp
xchg
pop
sub
sbb
xchg
call
test
and
xor
add
pop
and
mov
div
retf
sbb
ins
sub
cmp
jl
daa
mov
pop
xchg
or
mov
add
pop
movs
mov
adc
or
adc
retf
cld
or
sbb
adc
sbb
push
movs
add
ins
inc
out
sbb
leave
imul
mov
inc
add
cmp
sti
test
rol
mov
push
dec
aaa
dec
push
jle
das
jp
ins
pop
ss
dec
shl
push
fcomp
cmp
or
outs
mov
ret
pop
ins
inc
cld
popf
aaa
ja
shl
data16
inc
pushf
lods
adc
gs
jg
jle
frstor
out
ja
xchg
push
xchg
ret
mov
sub
into
inc
mov
js
or
(bad)
push
cdq
lahf
repz
add
(bad)
pop
out
adc
rcr
icebp
pop
test
sub
and
xor
dec
sbb
and
(bad)
out
rcr
or
or
mov
movs
sbb
bnd
inc
stc
sbb
cmps
mov
xchg
(bad)
cld
jae
jbe
sub
in
loope
imul
cmps
mov
jg
sbb
test
pop
es
sbb
shl
dec
and
bound
push
pop
jmp
push
push
rcl
and
aaa
cmps
cwde
mov
movs
push
stc
fs
mov
push
hlt
movs
jns
std
mov
jp
call
fsubr
ss
add
inc
sbb
icebp
adc
pushf
fdiv
jae
or
or
ficom
(bad)
and
(bad)
fwait
or
imul
rcl
adc
sti
fst
fistp
fnstenv
fild
mov
or
ds
mov
xchg
cmp
mov
int
aam
xchg
movs
xchg
cmps
sbb
or
(bad)
es
lods
lock
icebp
bound
ja
int
fmul
fdiv
inc
movs
jae
pop
adc
jnp
add
jp
cmp
arpl
pop
ss
push
adc
out
pop
mov
mov
movs
xchg
cmp
cmp
mov
or
jle
je
mov
call
cmp
ss
shl
fmul
xor
mov
cmps
xor
test
lods
push
mov
jne
cdq
mov
xchg
mov
or
cli
mov
mov
jns
inc
inc
(bad)
cdq
dec
pop
mov
jo
mov
leave
sub
cld
mov
in
mov
inc
mov
(bad)
movs
mov
sar
xor
jge
movs
jle
mov
cmp
mov
cmps
push
aaa
(bad)
out
loope
mov
test
and
sahf
mov
xor
add
fdivr
jmp
mov
pop
xor
mov
and
mov
mov
sbb
xchg
rcr
adc
mov
mov
jbe
mov
cmp
inc
inc
fimul
mov
xor
leave
and
repz
jb
iret
push
and
push
(bad)
enter
xor
mov
mov
pop
(bad)
xlat
out
lds
mov
ss
cmc
shr
sahf
lea
sbb
fld
nop
pop
cld
stc
sbb
out
dec
cwde
je
cmp
shr
cs
push
jl
lods
push
and
mov
jns
and
pushf
aas
pusha
mov
mov
bound
mov
jl
pop
cwde
jno
pop
int
popa
mov
cmp
dec
mov
add
dec
or
int3
and
ins
int
(bad)
push
popa
out
add
adc
jb
push
jecxz
push
je
loope
pop
dec
mov
mov
inc
mov
push
pop
cs
xor
loope
leave
mov
into
out
mov
xchg
or
out
push
dec
dec
and
mov
dec
or
cmp
(bad)
mov
stos
pop
and
and
sbb
pushf
fcomip
clc
addr16
sbb
dec
ficom
aaa
sub
ror
inc
and
push
xchg
cs
sub
and
sar
mov
retf
fisub
movs
sti
mov
popf
and
(bad)
aaa
nop
mov
rcr
fs
sub
and
js
mov
inc
stc
mov
mov
inc
adc
out
ins
cmps
xchg
out
in
sbb
inc
das
in
movs
aad
jp
jp
push
(bad)
and
loop
aaa
repz
shl
test
and
sub
inc
cdq
enter
sbb
cmp
cmc
xchg
sar
shl
pop
cdq
(bad)
pop
push
ror
pop
xor
xor
loope
push
jmp
addr16
loopne
scas
adc
test
jmp
sbb
fadd
mov
imul
xor
push
and
daa
and
movs
jbe
xor
adc
xchg
sbb
mov
xor
mov
ret
out
fwait
aaa
jg
pop
scas
or
xor
xchg
push
rcl
repz
ss
mov
jmp
sub
push
movs
arpl
les
jae
xchg
adc
and
call
dec
jne
xor
pop
adc
les
nop
push
fistp
jmp
cmps
pxor
(bad)
(bad)
or
pop
fndisi(8087
(bad)
movs
dec
cmp
outs
xchg
das
imul
add
cmp
and
int
popf
or
push
test
movs
cmp
fs
arpl
(bad)
lods
lahf
loope
inc
mov
cmps
into
dec
xlat
sub
ret
dec
sbb
jae
xor
outs
out
loop
push
or
es
lods
mov
pop
clc
mov
dec
aaa
addr16
in
clc
xchg
jnp
xchg
add
pusha
in
mov
mov
out
(bad)
ins
js
pop
jmp
adc
rcr
lock
xchg
or
dec
and
mov
and
cmp
jb
lods
add
ins
data16
data16
inc
nop
jns
es
cli
mov
out
(bad)
mov
sbb
jmp
cmp
and
xor
cmp
adc
fsub
int3
gs
data16
repnz
sbb
aaa
cs
les
mov
cwde
adc
pop
mov
jno
movs
sahf
test
fld
hlt
xchg
(bad)
push
add
mov
lods
cmp
loop
add
into
inc
mov
mov
adc
in
mov
pop
imul
jae
shl
fistp
inc
sbb
enter
enter
jae
out
cmp
and
cmp
pusha
mov
int
nop
mov
aam
mov
lea
loope
lds
fidiv
stos
cmps
ds
xchg
push
stos
and
adc
loopne
addr16
stos
shl
mov
int3
jp
or
(bad)
scas
mov
mov
imul
dec
xchg
and
xor
mov
mov
add
loop
or
jle
js
imul
test
or
pop
cmps
test
stos
mov
add
arpl
and
outs
inc
in
mov
cdq
add
out
jne
pop
jbe
adc
sub
(bad)
aas
mov
mov
imul
cmps
(bad)
lods
fst
rcr
or
dec
jmp
iret
fsubr
jg
jno
clc
sbb
and
je
outs
ret
push
scas
push
jl
dec
ins
cmps
pop
sbb
xchg
mov
jmp
inc
sub
jbe
pop
aas
popf
sub
int
cmps
jnp
and
repz
adc
mov
popa
les
inc
loopne
inc
mov
xor
cmp
imul
xchg
sub
cmp
push
nop
pop
adc
pushf
xchg
cwde
xchg
dec
in
cmp
mov
add
push
jnp
dec
(bad)
pop
ficomp
xchg
repz
retf
mov
out
and
and
or
in
push
fs
or
inc
inc
pop
mov
bound
inc
inc
gs
imul
dec
mov
iret
sub
dec
call
mov
outs
mov
and
movs
pop
sbb
cwde
int3
pop
sbb
out
lods
pop
enter
dec
jl
mov
push
mov
push
movs
push
push
sti
(bad)
int
ins
std
(bad)
dec
nop
fld
div
pusha
not
pop
inc
jmp
inc
jb
scas
aaa
pop
dec
aad
cwde
stc
jg
call
rep
loopne
sbb
int3
shr
fist
xchg
pop
popa
(bad)
pushf
xchg
dec
xchg
adc
sub
test
retf
mov
arpl
and
ins
dec
out
xchg
push
and
(bad)
dec
out
movs
adc
repnz
sub
jno
out
lahf
pop
scas
mov
xor
push
or
rcl
stc
dec
cmp
add
dec
pop
xor
jecxz
and
jg
jns
cmps
std
dec
pop
xchg
inc
movs
sahf
mov
in
add
jl
test
jmp
dec
pop
cmps
add
mov
xchg
call
imul
pop
imul
push
rol
mov
jle
stc
xor
std
mov
outs
xor
sbb
mov
jne
cld
cmp
shl
icebp
sti
outs
repz
cli
mov
rcr
(bad)
xchg
fs
imul
jmp
sub
aas
int3
ss
shr
push
mov
aam
movs
hlt
inc
loopne
and
mov
cmp
ficom
cmp
cmovo
mov
fstp
xor
outs
out
push
test
adc
scas
ins
push
xchg
mov
inc
call
je
adc
lock
xchg
in
jmp
jo
pusha
xlat
in
out
xchg
test
push
call
inc
in
pop
jmp
and
mov
cs
inc
(bad)
iret
adc
icebp
pop
mov
mov
inc
in
pusha
sub
jle
in
xchg
sub
fisttp
pushf
outs
jecxz
add
jmp
adc
lea
add
leave
mov
inc
lds
fcmovnb
sti
test
or
push
js
xor
push
cmps
push
or
mov
push
jnp
shl
jns
dec
dec
adc
shl
pop
mov
add
sub
jg
cmps
xchg
add
or
leave
jl
aad
inc
mov
fwait
xor
leave
or
mov
mov
je
dec
fisub
ds
adc
ins
add
pop
and
js
jmp
enter
shl
adc
outs
adc
fwait
adc
pop
adc
mov
sbb
dec
or
aas
call
or
ss
outs
retf
ja
outs
xor
jns
inc
in
mov
mov
fsubr
lds
add
adc
in
fdivr
repz
sub
and
jne
scas
movs
jle
rcl
fdiv
out
sbb
mov
mov
in
outs
mov
sub
shr
and
add
push
cmp
xchg
sbb
test
mov
ret
lds
mov
fstp
push
jge
gs
sbb
loope
popa
ret
inc
scas
sbb
mov
lea
sbb
cmp
loop
out
retf
jge
out
xchg
adc
inc
data16
push
adc
fsincos
mov
inc
or
pop
lahf
inc
aas
or
das
xor
ficomp
loopne
or
inc
jge
lahf
repnz
add
imul
ja
push
add
test
lods
mov
inc
adc
test
dec
pop
cwde
jmp
repz
xor
js
push
push
jp
pop
xchg
imul
or
jmp
sbb
dec
daa
ss
push
hlt
lods
in
and
adc
cmp
ds
mov
out
cmp
fsub
ins
hlt
out
(bad)
jbe
ds
jnp
push
mov
je
push
cmp
in
in
mov
rcr
cmp
xor
sar
(bad)
mov
das
add
dec
jmp
or
jl
lods
nop
and
mov
mov
jg
inc
dec
mov
fisubr
adc
nop
lahf
sar
push
pop
ss
retf
xor
je
dec
xor
mul
addr16
pop
movs
sbb
mov
sti
idiv
fstp
jg
xor
mov
in
pop
shl
lds
mov
mov
push
ins
add
(bad)
lds
pop
pop
xor
push
or
out
mov
frstor
aas
mov
xor
mov
inc
mov
xor
mov
pop
mov
push
iret
inc
and
adc
aaa
jge
pop
fwait
imul
dec
mov
lea
arpl
jl
mov
push
push
sub
add
jge
stc
xor
sbb
jno
mov
arpl
pop
jno
add
mov
bound
fnstcw
imul
test
cmps
mov
out
dec
push
xchg
adc
pop
mov
adc
mov
lea
rcr
jl
ja
mov
jo
fs
mov
lods
out
leave
gs
dec
into
mov
mov
mov
arpl
or
xchg
pop
les
mov
pop
cli
mov
add
sbb
stos
pop
std
shl
pop
sub
(bad)
inc
xchg
sub
test
addr16
pop
in
mulps
fwait
out
sub
push
lds
aas
retf
loop
lahf
mov
shl
retf
adc
scas
sar
loope
movs
sub
int3
fcmovu
ret
outs
cwde
sahf
jmp
stos
lahf
xchg
sub
call
mov
ds
aas
das
icebp
out
inc
popf
and
pop
pop
sub
in
and
je
ss
imul
sub
ds
lahf
or
pop
cld
in
nop
sub
pop
and
ficomp
aaa
je
jmp
in
mov
or
shr
out
push
sbb
out
lds
and
dec
xor
and
pop
sbb
retf
or
xor
neg
mov
push
aaa
mov
retf
clc
fidiv
lods
fld
out
cdq
mov
jmp
cli
sub
es
aaa
inc
(bad)
mov
xor
and
xor
cmp
test
jle
repnz
pop
mov
gs
push
cmp
sub
xchg
xor
mov
pop
xchg
xchg
sahf
push
jp
imul
push
adc
test
test
add
mov
jns
les
jle
jno
push
add
pop
ds
aad
into
xchg
push
test
inc
inc
sub
pop
int
cmps
cdq
neg
push
add
(bad)
data16
(bad)
sar
or
movs
out
add
xchg
(bad)
popf
imul
clc
aam
sbb
mov
jecxz
cs
shr
sbb
xor
adc
lods
stos
inc
in
mov
jle
cmp
in
and
lahf
inc
lock
in
push
fmulp
call
cmps
adc
mov
sbb
clc
lods
dec
add
je
nop
retf
mov
mov
loopne
add
arpl
adc
div
push
sub
ja
sub
mov
je
stos
mov
mov
push
ret
stos
aad
mov
(bad)
cmp
jg
mov
out
sbb
mov
xlat
scas
add
jmp
and
outs
dec
sahf
and
push
into
pop
enter
adc
xchg
(bad)
push
push
ficom
out
stos
jecxz
or
adc
or
out
push
aad
imul
(bad)
rep
lahf
dec
call
xor
nop
push
int3
and
sub
retf
mov
add
pop
aad
push
pop
push
pop
mov
cmp
stc
(bad)
retf
loope
sub
mov
jge
ds
mov
mov
xor
icebp
mov
cmc
xor
inc
sar
xor
mov
cmp
loopne
xchg
jns
mov
inc
sub
stos
in
aad
sbb
ja
cmp
pop
aam
orps
xor
out
sub
cdq
(bad)
and
sbb
mov
add
sub
xor
push
stos
fstp
or
inc
daa
in
adc
sub
jnp
ret
movs
ss
pop
fwait
sbb
je
sbb
cmc
(bad)
aaa
pop
mov
js
stc
mov
inc
lea
out
sub
int
mov
xchg
push
pop
inc
loopne
into
pop
shr
fst
das
retf
popf
mov
jmp
dec
mov
adc
or
sub
and
cs
test
sbb
or
jo
fsub
outs
jo
push
mov
push
inc
sub
adc
call
mov
retf
loope
cmp
and
mov
and
sub
lahf
(bad)
ins
inc
fimul
mov
out
(bad)
cmc
cmp
mov
cli
dec
adc
fwait
aam
les
push
stos
jbe
mov
jno
(bad)
fld
leave
sti
cmp
xchg
adc
js
bound
xor
sar
mov
sahf
jo
mov
xchg
les
cdq
enter
xchg
das
inc
loope
ds
iret
call
ret
clc
mov
xchg
dec
or
xor
movs
xor
in
or
loopne
fisttp
jl
(bad)
loop
sahf
or
in
into
icebp
add
xchg
and
add
(bad)
fisttp
adc
into
out
aaa
push
lods
ss
dec
sti
jl
adc
or
add
mov
sub
xor
mov
(bad)
out
jo
mov
push
adc
int
cwde
and
outs
jmp
xor
or
add
xor
sbb
xor
call
or
and
sub
or
or
and
push
cmp
sub
mov
and
xor
and
sub
aam
dec
jmp
pop
pop
mov
ins
shl
mov
out
je
int
(bad)
push
mov
leave
mov
jge
dec
cmp
push
cmp
and
fsubrp
fiadd
adc
pop
icebp
out
xlat
sub
cld
dec
setbe
mov
das
test
pop
cmp
cdq
jmp
aad
sbb
mov
sbb
fisub
xchg
mov
enter
es
mov
sub
cmps
xor
inc
jp
jg
cmp
xor
jno
adc
rol
cmp
xchg
or
test
cdq
mov
fwait
mov
(bad)
leave
inc
pop
xor
ret
movs
pop
scas
adc
jnp
push
adc
fwait
retf
mov
xor
xchg
repz
dec
cs
adc
loop
call
inc
jl
fwait
cdq
repz
push
sar
shr
pop
popf
in
stos
jmp
(bad)
and
adc
sub
aas
mov
push
cmp
cmp
ret
test
xor
mov
pushf
sub
mov
mov
sbb
aas
push
push
not
fld
call
mov
lea
add
scas
mov
adc
jne
sar
sahf
adc
xor
pop
std
push
xchg
mov
aas
xchg
or
int3
add
mov
stos
fimul
(bad)
xchg
sahf
push
cmc
jns
mov
(bad)
lea
xor
mov
jmp
push
push
mov
les
mov
jl
jae
fwait
jmp
pop
lds
shr
sub
xor
and
or
les
int
dec
pop
mov
test
and
(bad)
out
fsub
adc
xchg
fdivr
jp
sub
ret
pushf
xchg
dec
mov
movs
out
sub
ins
sub
lock
mov
mov
mov
mov
adc
cmp
or
out
jg
lods
pop
xchg
or
retf
sahf
mov
xor
jnp
and
out
pusha
inc
fadd
sbb
adc
(bad)
jmp
sub
xor
sbb
inc
jbe
push
call
mov
mov
inc
inc
or
inc
sub
or
ins
sub
mov
add
sbb
(bad)
adc
loope
outs
dec
pop
mov
sbb
dec
add
sbb
cdq
ficomp
repnz
sbb
iret
mov
rol
sbb
xchg
sub
cld
xor
adc
inc
cwde
sub
pop
xchg
fild
dec
adc
and
ret
retf
mov
xchg
scas
mov
xchg
test
test
mov
or
pop
push
je
ret
arpl
test
push
cmp
outs
jmp
clc
ror
or
setp
pop
cmp
xchg
or
mov
mov
popf
dec
xor
push
stos
pop
cwde
(bad)
cs
mov
aas
xlat
push
mov
add
push
mov
jbe
push
cs
dec
fsubr
pop
dec
xor
scas
adc
pop
cmp
and
data16
sub
add
xchg
imul
das
mov
add
or
div
add
dec
mov
mov
push
xchg
fdivr
sub
jnp
push
push
jmp
pop
jmp
lds
jno
cld
call
lea
aad
sbb
addr16
movs
arpl
out
loopne
pop
lods
pop
data16
cli
dec
ficom
lock
push
mov
mov
add
mov
nop
xchg
ja
ret
pushf
push
psraw
xchg
and
lock
shr
and
test
pusha
out
pop
stc
lea
imul
outs
std
dec
hlt
aaa
jae
js
movs
xchg
sbb
lea
(bad)
retf
or
movs
add
dec
inc
sub
dec
fistp
mov
retf
pop
cmp
fidiv
jge
jo
mov
push
js
mov
push
jge
mov
cs
mov
or
leave
xchg
pop
je
out
mov
sub
sub
cwde
add
adc
sbb
adc
int
sbb
repz
test
push
stc
lods
lods
imul
cmp
cmp
pop
test
mov
or
sub
xchg
or
pusha
dec
ins
xchg
std
repnz
xchg
popf
mov
retf
cs
rcl
pop
xchg
jge
idiv
je
mov
adc
call
stc
out
fild
fs
(bad)
std
sbb
inc
lahf
lods
push
inc
lds
(bad)
or
pop
cmps
fidiv
lahf
dec
push
std
ss
scas
(bad)
clc
adc
out
stos
inc
jno
popf
fs
je
sti
mov
in
adc
push
or
jne
js
mov
fs
sbb
and
cmp
rcr
inc
dec
stos
sahf
popa
xchg
loope
cmp
pop
mov
and
push
jae
inc
(bad)
imul
adc
push
inc
dec
adc
push
mov
mov
js
xor
aad
enter
lahf
and
(bad)
fwait
dec
sbb
dec
js
fsubr
and
jmp
lods
sbb
sbb
fadd
mov
(bad)
adc
mov
and
mov
pop
mov
xor
cmps
(bad)
repnz
and
push
mov
xchg
mov
push
sbb
dec
xchg
and
xchg
clc
push
js
iret
push
div
lahf
pushf
outs
mov
jo
mov
lods
lock
(bad)
adc
xchg
cld
dec
inc
inc
bound
in
(bad)
jbe
cmp
std
dec
jno
mov
repz
pause
mov
pop
sub
mov
cdq
ret
mov
addr16
out
or
sub
or
ret
sbb
jge
mov
mov
sub
sub
jnp
xor
popa
xor
and
xchg
or
je
test
ins
xchg
test
fdivr
push
popf
add
jmp
lds
sub
addr16
mov
pop
sub
pop
xchg
cmp
add
fsub
jmp
ror
mov
jp
push
lods
mov
cmps
sub
nop
xchg
lods
jnp
fadd
inc
and
fs
jp
dec
sahf
cmp
arpl
add
fistp
imul
into
jl
push
push
mov
and
inc
cmp
popa
out
mov
clc
lds
add
mov
push
test
add
ror
sbb
push
repz
js
lahf
fild
aad
call
movs
outs
cmp
xor
and
jnp
xor
lds
add
fs
pop
cmp
daa
add
pop
jecxz
ret
sub
push
push
es
jp
inc
add
outs
sbb
mov
inc
std
(bad)
jle
mov
cmp
push
test
inc
mov
ror
xchg
adc
push
popa
pop
loopne
test
and
cmp
fistp
adc
shl
inc
sub
pushw
xor
jecxz
fnsave
push
jmp
push
or
sub
inc
mov
adc
pop
retf
call
mov
popa
or
rol
es
jnp
popa
loope
xor
bound
outs
adc
stos
outs
icebp
lods
mov
jo
jne
outs
jecxz
jmp
mov
imul
retf
sub
push
test
mov
stos
rcr
test
call
repnz
cmp
push
(bad)
fcom
and
test
push
retf
mov
jl
inc
sbb
sbb
scas
xor
pop
xchg
and
sbb
sbb
fnstcw
call
xchg
sub
addr16
or
xlat
xchg
push
retf
add
cmps
cli
loope
sub
in
adc
fwait
mov
ja
push
xchg
jae
xchg
inc
ret
shl
xchg
lods
xchg
mov
inc
loopne
call
mov
jne
xchg
in
jno
xchg
mov
xor
or
jnp
out
jle
ftst
pop
shl
sbb
ret
loope
iret
mov
dec
(bad)
retf
cdq
test
mov
xlat
ret
adc
mov
sbb
inc
lock
dec
dec
jg
fnop
nop
pop
and
repnz
dec
push
or
xchg
mov
popf
leave
jae
sub
dec
push
jnp
lods
std
iret
arpl
xor
pop
out
jmp
retf
cmp
or
stos
rcr
(bad)
sbb
xchg
hlt
(bad)
into
and
and
cmp
fidivr
adc
outs
ret
pop
popf
es
cli
scas
scas
mov
push
pop
in
rcl
add
push
add
lock
stc
arpl
popf
fwait
jo
xchg
movs
movs
fisttp
pop
or
shl
cli
push
retf
or
aaa
mov
xchg
cmp
(bad)
popf
retf
popf
in
scas
aad
jge
xchg
jl
jns
jle
dec
fcomp
mov
mov
cmp
cmp
out
gs
and
jnp
push
test
mov
sub
adc
and
repz
and
pop
xchg
push
pop
fwait
loop
or
cli
dec
aaa
repz
or
outs
dec
fidiv
mov
dec
xchg
jbe
push
xor
in
jle
dec
sbb
pop
dec
call
imul
lock
xor
js
sub
clc
fdivr
adc
in
xor
or
retf
(bad)
jmp
sti
das
pop
jecxz
dec
xchg
pop
pushf
shl
mov
(bad)
jle
(bad)
mov
dec
rcl
pop
lods
sbb
adc
aaa
mov
arpl
cmp
sbb
sub
pop
adc
pop
das
icebp
js
xchg
dec
mov
retf
fisubr
fldcw
jbe
sub
push
popa
int3
push
push
rcl
and
ret
movs
repnz
push
pushf
ffreep
clc
fist
mov
clc
cmc
xor
ret
push
jbe
std
and
loopne
push
xor
into
jbe
cmp
pop
pop
push
jmp
jno
pop
sbb
jno
outs
mov
cmp
cmp
adc
dec
outs
sub
mov
test
fmul
rcr
push
shl
cmp
sbb
(bad)
std
add
les
push
xchg
xchg
outs
cld
mul
jnp
jecxz
push
imul
movs
ficom
aaa
pusha
loopne
sbb
sbb
stos
xchg
sub
mov
mov
and
cmps
sub
sbb
aas
xor
jg
mov
jmp
inc
sub
lahf
aaa
sub
pushf
fcom
adc
shl
jecxz
lea
jecxz
jb
mov
xchg
das
stos
push
outs
test
daa
add
out
lods
fistp
xor
je
dec
and
xor
xchg
dec
loop
js
jo
scas
clc
fwait
dec
xchg
stos
clc
mul
mov
pop
cld
inc
lock
fiadd
popf
dec
retf
sbb
scas
imul
mov
xchg
loope
ffree
fisttp
(bad)
data16
xchg
jle
add
out
cmp
mov
dec
repz
xor
inc
inc
hlt
out
or
loop
inc
pop
int3
fsubr
lods
icebp
dec
cmp
leave
in
lahf
sub
lds
jae
pop
lods
std
dec
lods
ret
xor
or
add
xor
pop
cwde
sbb
fist
iret
lock
test
and
nop
(bad)
cld
ror
ror
cmp
bound
xchg
push
push
xchg
adc
mul
cmp
pop
pop
xchg
movs
push
sbb
cdq
outs
push
xchg
idiv
inc
les
iret
icebp
into
pop
or
jge
xor
neg
xor
add
test
dec
shl
data16
cmp
jbe
inc
imul
jmp
repnz
ret
les
and
push
dec
test
push
shr
cmc
loope
push
mov
add
rcl
repnz
jno
fs
push
inc
dec
hlt
jmp
pop
fwait
pop
sub
ins
push
retf
adc
xlat
out
dec
or
icebp
fwait
pop
inc
ret
pop
out
push
pop
aam
or
aam
mov
ins
mov
pushf
pushf
pop
xchg
outs
push
jno
jl
pusha
test
ins
enter
pop
mov
adc
push
fs
mov
sar
jp
jecxz
push
push
cld
ins
xchg
pop
loope
das
nop
sbb
out
shl
and
sub
mul
arpl
fwait
mov
mov
or
in
leave
mov
xor
or
xor
hlt
int
xor
dec
out
and
arpl
or
pop
mov
adc
cmps
xor
push
cmp
mov
mov
mov
and
pop
not
push
dec
ror
add
cdq
inc
adc
inc
adc
loope
sbb
jbe
lea
push
and
gs
push
out
fstp
retf
jg
test
xlat
inc
outs
lahf
jne
inc
mov
mov
add
test
lds
mov
inc
jmp
mov
out
inc
out
setno
sub
mov
loop
out
mov
xchg
jb
cs
loop
sub
mov
arpl
arpl
sub
mov
div
popf
aam
lods
jmp
ins
cmp
cmps
cs
movs
call
push
leave
mov
xor
xchg
add
jmp
jmp
xchg
or
ret
js
xor
cmp
cmc
jmp
xor
in
pop
ret
sbb
sti
add
in
sbb
xor
loopne
aaa
push
sub
inc
outs
sub
mov
fs
daa
push
mov
scas
dec
adc
fisubr
dec
or
int3
jnp
aas
sbb
cs
add
xchg
jns
cmp
cmc
cmp
adc
bound
retf
push
mov
and
xchg
sahf
xor
(bad)
test
cmp
mov
outs
lea
mov
xor
xor
out
loope
inc
dec
cmp
jae
sbb
mul
xor
std
ret
loop
inc
jb
mov
and
lahf
xor
pop
clc
mov
xor
fbstp
aaa
jmp
and
push
push
call
ficomp
add
mov
(bad)
jbe
mov
cwde
(bad)
push
mov
or
push
cli
or
out
and
test
pop
push
enter
stc
fld
jb
pop
ds
rcl
fcmovu
and
jg
(bad)
pop
dec
adc
cmp
push
sahf
stos
mov
int
push
pop
xlat
mov
in
inc
mov
shr
in
push
(bad)
adc
cmp
jb
ficomp
cmp
and
adc
fisttp
and
xchg
cmc
mov
jecxz
scas
iret
jle
fsubr
imul
sub
xchg
aam
push
out
cmps
push
sub
pop
inc
shl
(bad)
push
shr
sub
mov
mov
or
dec
pop
stc
sbb
push
xlat
fnstcw
pop
call
mov
cmp
or
clc
test
test
sbb
hlt
xchg
dec
push
jmp
cmp
scas
pop
sahf
shl
mov
inc
jmp
(bad)
jae
mov
jno
jb
or
pop
sub
xchg
mov
aad
add
jb
mov
push
(bad)
jno
jne
aaa
mov
mov
(bad)
div
in
sbb
or
mov
sahf
stos
or
sbb
ss
and
push
dec
sbb
ins
loop
dec
scas
pop
inc
mov
dec
pop
inc
mov
fidiv
fsub
inc
cmps
push
push
mov
aas
cmp
dec
outs
into
sbb
cmp
dec
jae
inc
xchg
pop
ret
loope
and
dec
xchg
mov
adc
xchg
pusha
dec
xchg
sbb
pop
inc
mov
sub
cdq
(bad)
das
stos
pop
dec
ret
xor
push
and
fwait
xor
ins
xor
cld
cmp
jp
inc
mov
pop
fidiv
imul
mov
cmp
imul
dec
cmp
fdiv
int3
pop
fld
movs
jl
shl
sub
ds
in
aad
(bad)
ret
jg
loope
ret
rcl
shr
xor
std
sti
push
and
xor
(bad)
sbb
sub
cmp
cli
inc
inc
cli
add
jo
in
fldcw
je
(bad)
push
arpl
xor
pop
or
sub
push
sbb
adc
mov
push
mov
call
(bad)
or
inc
shr
adc
pop
lock
xchg
ins
xor
and
jnp
out
cmps
ds
cmp
mov
outs
and
mov
(bad)
sub
fistp
jbe
(bad)
fbld
mov
lods
ja
push
mov
xor
and
dec
or
dec
xchg
mov
nop
and
mov
or
or
push
mov
fild
loopne
xchg
jno
push
fwait
mov
dec
lods
mov
outs
adc
movs
sub
mov
push
push
xor
pop
movs
pop
in
sbb
enter
fimul
inc
movs
repnz
push
(bad)
mov
cld
fistp
jmp
cli
mov
outs
dec
repnz
jecxz
jmp
comiss
mov
scas
outs
nop
test
cmp
dec
loopne
push
mov
adc
ret
push
or
aaa
lahf
test
imul
xor
push
push
repz
jb
cs
retf
mov
pop
mov
mov
mov
jnp
adc
pop
xchg
bound
sub
xchg
sub
push
in
inc
xor
aas
imul
arpl
je
cmc
jnp
and
mov
nop
xchg
inc
jmp
xor
je
jb
outs
mov
pushf
cmp
pop
lahf
out
push
cld
mov
and
int3
out
sbb
sub
jo
sahf
enter
jnp
loop
ret
sti
xor
iret
or
mov
sub
in
add
adc
ficom
aaa
and
push
xchg
retf
js
adc
mov
(bad)
nop
aad
in
adc
mov
inc
fs
and
mov
retf
test
sub
sub
lds
test
scas
push
xchg
outs
dec
push
shr
mov
inc
scas
adc
add
mov
sbb
mov
mov
fimul
(bad)
push
push
gs
std
js
sub
push
data16
mov
ins
daa
imul
xchg
push
pop
(bad)
jge
push
outs
enter
or
mov
inc
addr16
inc
repnz
and
mov
push
popf
sub
or
or
push
mov
xchg
inc
shl
xor
call
test
stc
sbb
lahf
push
(bad)
mov
dec
push
push
stc
push
add
retf
mov
leave
push
add
mov
outs
jno
xchg
and
scas
jp
cmp
rol
mov
push
sbb
cmp
scas
sbb
add
xchg
bswap
adc
inc
fbld
movs
daa
(bad)
xchg
out
jge
movs
sub
push
jl
pusha
out
mov
xchg
push
xchg
jle
mov
and
out
std
lods
adc
out
push
es
mov
dec
adc
add
pop
dec
int
mov
inc
loop
xor
and
mov
push
cmp
into
cmp
xchg
aam
test
add
jp
mov
stos
xor
das
pop
cmp
iret
fdivrp
ret
sbb
cmp
outs
ret
iret
xor
cmps
mov
aad
cdq
int
stc
daa
mov
sbb
push
xchg
push
adc
xchg
mov
xchg
xchg
pop
mov
nop
lds
call
fwait
adc
retf
enter
call
fs
cmp
lock
dec
repz
data16
mov
dec
sub
or
fadd
scas
popa
fld
inc
xchg
(bad)
mov
call
push
mov
push
fist
sbb
and
fnsave
sbb
xor
mov
movs
mov
xchg
pop
cmp
jl
adc
mov
lods
(bad)
shl
aas
retf
dec
movs
xchg
sub
leave
mov
leave
cld
in
fst
inc
jg
pusha
hlt
je
jne
fcomi
sbb
(bad)
nop
loop
inc
fcmove
dec
or
add
test
pop
icebp
pop
mov
cdq
jae
dec
iret
xor
test
sbb
(bad)
aad
pushf
xlat
dec
sub
test
lock
das
leave
jle
sub
xchg
jne
xor
pop
fwait
mov
xchg
sbb
mov
imul
fild
inc
mov
stos
xor
cmp
hlt
mov
cli
(bad)
fisubr
or
jns
xchg
sub
sbb
or
add
je
and
bound
pushf
sahf
and
adc
outs
bound
fsub
sub
mov
mov
sub
repz
daa
je
test
or
loopne
addr16
ja
std
sbb
cmp
nop
sub
mov
call
cld
int
cwde
(bad)
mov
xchg
pop
xor
imul
cmc
and
xor
push
je
aad
test
pop
mov
pop
fst
daa
retf
add
movs
add
sbb
adc
and
in
xlat
add
hlt
and
mov
scas
js
pop
mov
cdq
das
sti
adc
jno
add
sub
ins
mov
aam
ja
bound
xor
loope
imul
dec
mov
fsub
add
in
loopne
gs
and
push
arpl
inc
call
pop
pop
test
cmp
mov
xor
addr16
test
das
jmp
lea
mov
and
xchg
aam
sahf
mov
lahf
adc
cmp
lock
shl
movs
nop
popf
jo
jp
in
dec
xchg
imul
dec
rcr
ja
cmp
ins
jbe
hlt
sub
add
popa
cs
stos
nop
cld
adc
das
push
fsub
adc
arpl
sti
int
pop
mov
xchg
adc
add
xor
add
sbb
xlat
push
fldpi
cmp
repnz
out
retf
rcl
stc
xor
jnp
aaa
sub
cld
pop
sub
scas
push
jne
daa
jo
mov
mov
(bad)
jg
inc
aam
test
mov
mov
mov
mov
test
adc
addr16
retf
pop
mov
or
mov
fisubr
loope
rcl
dec
push
imul
xor
aam
push
push
retf
sub
leave
cdq
into
jge
xor
pop
(bad)
cld
jno
xchg
mov
call
and
adc
fld
xchg
fbstp
ficomp
adc
aad
cmps
es
push
not
jle
cmp
(bad)
std
retf
pop
int
(bad)
mov
fdivrp
loopne
inc
mov
jo
(bad)
outs
(bad)
addr16
popf
or
stos
sbb
aaa
ret
pusha
and
out
sbb
out
mov
(bad)
mov
dec
loopne
je
xor
faddp
dec
hlt
ds
cmp
pushf
or
mov
jge
pop
dec
scas
jne
hlt
scas
std
jecxz
bound
jbe
cld
or
xchg
ret
cld
cmc
add
add
pop
dec
mov
(bad)
cmps
adc
rcr
mov
sub
cmps
mov
cwde
dec
sti
movs
fidiv
mov
push
adc
and
repnz
shl
outs
fwait
push
ins
cmp
or
and
push
mov
mov
cmp
jae
add
sub
xor
cmps
cmp
hlt
(bad)
out
and
cmc
pop
cmp
mov
iret
call
dec
data16
jmp
xor
sbb
rol
into
mov
test
outs
sbb
jmp
inc
and
int
test
sbb
stc
fcomip
(bad)
out
pop
mov
aad
in
(bad)
xchg
mov
inc
push
imul
adc
mov
je
pop
adc
xor
push
lock
std
mov
and
loopne
imul
icebp
sub
mov
sub
das
pop
adc
jg
ja
into
repz
scas
cmp
push
into
cwde
dec
mov
mov
sbb
mov
mov
adc
(bad)
dec
mov
fdiv
or
fstp
mov
cmps
mov
ss
jo
pop
cmp
xchg
add
stos
mov
mov
xor
rol
loopne
sub
pop
sbb
retf
add
js
xstore-rng
cmps
sub
or
inc
dec
repnz
inc
sbb
inc
lds
call
mov
mov
cs
sbb
adc
add
mov
pushf
lock
push
mov
xor
shl
xchg
je
cmp
cmp
pop
and
sbb
fmulp
mov
mov
shr
fnstenv
sbb
add
ja
shl
or
push
pop
adc
mov
jne
sbb
inc
adc
rol
loope
outs
arpl
pop
add
loop
sub
jb
(bad)
mov
outs
popa
arpl
sbb
loopne
xchg
pushf
or
jp
scas
push
hlt
pop
mov
sti
out
jle
dec
mov
or
icebp
xchg
loopne
xor
in
mov
xchg
jmp
jle
call
xchg
mov
imul
fstp
data16
add
(bad)
cwde
pop
sar
repz
inc
jbe
cld
lods
gs
adc
fbld
arpl
jnp
lods
pop
xchg
xchg
mov
neg
out
mov
xor
iret
sub
ss
push
inc
pop
shr
and
sbb
jmp
cmp
sub
xchg
adc
arpl
cvtdq2ps
cs
shl
shl
adc
mov
dec
enter
push
push
mov
stos
and
shl
aaa
in
(bad)
xchg
lods
sub
in
scas
(bad)
std
sub
arpl
push
mov
jns
pop
ss
popf
retf
sahf
push
mov
sub
icebp
adc
jnp
sbb
call
pop
xor
and
(bad)
sub
pop
xor
hlt
movs
imul
loop
cmp
jmp
loopne
fidivr
xchg
xchg
xlat
mov
pop
xchg
jbe
push
movs
mov
sub
fwait
jno
jb
jp
push
cld
pop
sar
arpl
push
imul
sub
jae
(bad)
stc
aad
popa
sub
clc
fimul
scas
dec
outs
jle
sub
lods
push
test
add
mov
cld
pop
popf
inc
pop
mov
sbb
mov
into
fnstcw
inc
mov
sub
push
dec
pop
cmp
ror
lds
(bad)
retf
push
push
pop
cmp
into
rcl
ret
adc
gs
inc
jae
xor
and
inc
div
push
dec
jae
ss
and
jnp
inc
xor
mov
cli
leave
iret
fst
gs
and
arpl
cli
push
xor
mov
lods
scas
dec
mov
jge
mov
mov
test
icebp
and
adc
arpl
mov
fnstcw
mov
mov
fsubr
cs
inc
inc
pushf
sbb
lods
jg
shl
fwait
push
in
pop
pop
cmps
mov
repnz
aaa
fisub
cmp
into
push
push
out
jg
sbb
ret
cmp
ins
les
jmp
cmp
jno
outs
sub
outs
je
mov
aad
add
cmp
pop
xchg
push
pop
vpaddusb
or
jmp
imul
sub
jmp
mov
inc
cmp
jmp
push
cmp
test
cmp
out
ja
lock
adc
jg
call
mov
sub
ins
iret
inc
jno
add
add
inc
cmps
push
sbb
movs
fsubr
xchg
repz
call
or
jmp
lods
push
add
lds
dec
push
dec
outs
jl
mov
fs
outs
add
nop
fs
inc
mov
clc
xor
and
icebp
and
call
retf
iret
mov
je
dec
gs
(bad)
rcl
pushf
jle
out
fsubr
mul
imul
lds
dec
ds
add
fs
call
sbb
data16
xor
es
pop
pop
cmp
mov
into
dec
mov
push
jle
mov
mov
fnstsw
stos
inc
cwde
and
push
xchg
call
push
nop
push
ds
(bad)
icebp
ror
loopne
cmc
jb
mov
mov
les
jl
sub
leave
call
mov
pop
je
mov
in
daa
jnp
mov
test
jnp
loop
pusha
(bad)
jle
ret
imul
lods
mov
fcomi
ss
call
pop
cmps
outs
test
xchg
icebp
mov
aaa
sub
data16
mov
adc
pop
mov
mov
shl
ds
jge
and
ret
jbe
clc
sar
lahf
mov
xor
mov
dec
sub
push
fcomp
pop
out
xor
clc
out
mov
ds
inc
inc
pop
mov
or
push
and
ror
call
jnp
adc
push
ins
mov
mov
sbb
mov
rcr
mov
lods
sub
clc
pop
loope
fst
pop
push
out
xor
ins
xor
dec
fxch
jl
call
vsqrtps
lods
inc
daa
jmp
sbb
frstor
adc
addr16
adc
loop
test
mov
jecxz
xchg
xor
setae
jae
mov
add
outs
push
sti
fdiv
xor
push
(bad)
ja
add
mov
jge
pop
out
int3
fucom
dec
push
mov
push
in
mov
into
addr16
mov
into
outs
pop
or
mov
jle
mov
mov
adc
call
popa
xchg
mov
cmp
loope
lods
adc
xor
addr16
pop
in
pop
add
and
pusha
mov
push
jns
pop
mov
and
in
(bad)
js
or
mov
js
mov
inc
add
inc
xchg
int
cmps
push
pop
or
xor
mov
mov
std
cmp
pop
xchg
je
shl
and
push
xchg
test
sbb
mov
test
jle
jl
jo
div
and
fwait
push
mov
adc
inc
dec
xor
aas
sbb
sbb
aad
or
mov
sbb
mov
repnz
sbb
je
ss
enter
call
push
cmp
sub
test
push
fmul
or
dec
out
pmuludq
mov
test
lahf
push
cmp
add
xor
push
inc
out
lahf
cmc
shr
test
jae
loopne
jae
xor
pop
aad
adc
retf
or
lods
mov
jl
ins
dec
xor
mov
ins
mov
push
sub
lea
out
inc
les
call
aad
and
or
xor
not
sub
xchg
pop
inc
mov
call
call
adc
xchg
je
mov
int
sub
nop
(bad)
repz
fwait
pop
test
add
retf
mov
pop
jmp
dec
mov
dec
or
lods
aad
adc
mov
rcr
aas
call
clc
jle
int
jmp
jmp
loop
out
daa
test
xchg
jp
xchg
jb
mov
bnd
stos
inc
jns
or
cmps
and
in
jg
jae
push
xchg
mov
xor
int
mov
js
retf
jl
inc
popf
or
sub
inc
mov
scas
or
push
fld
pop
push
mov
mov
mov
pop
sub
sub
(bad)
cs
je
and
sub
scas
nop
into
xor
or
idiv
das
rol
mov
lahf
pop
xor
sbb
imul
icebp
push
push
push
pop
movs
xchg
jae
xchg
cdq
movs
inc
into
jmp
(bad)
xchg
mov
nop
arpl
mov
mov
scas
xchg
pop
(bad)
mov
das
aam
pop
into
lods
hlt
and
mov
sub
jmp
mov
xchg
cdq
popf
mov
xor
sbb
or
or
movs
sar
add
add
push
push
nop
mov
add
pop
retf
(bad)
stos
test
pop
cmp
pop
cli
push
cli
mov
xor
test
add
or
js
mov
cdq
lds
push
mov
imul
push
jae
stos
xlat
xchg
sbb
mov
pop
cld
loopne
mov
push
dec
xchg
ins
pop
rep
xor
in
movs
and
xor
xor
jmp
jecxz
xor
daa
stc
imul
or
push
ins
movs
add
fldcw
jo
sbb
mov
xchg
dec
cmps
jmp
shr
les
mov
pushf
hlt
pop
mov
clc
(bad)
popa
add
inc
jg
sbb
sbb
ret
mov
imul
jns
adc
xchg
add
sub
sbb
(bad)
xchg
and
xor
push
cs
push
xchg
and
or
mov
jmp
stos
outs
xchg
sub
pusha
push
sbb
dec
mov
add
adc
cmp
dec
mov
mov
dec
sub
jno
scas
fadd
jmp
sbb
lds
es
movs
dec
movs
popf
sbb
cmps
fisttp
sar
mov
sahf
add
test
pop
xor
loope
ror
xor
imul
repnz
outs
(bad)
movs
inc
ins
ud0
sbb
fs
adc
adc
cmps
dec
popa
iret
mov
push
test
or
aas
jb
jb
jno
mov
mov
push
dec
lock
pop
out
inc
fdivr
mov
repz
je
fisttp
adc
jo
(bad)
inc
push
ins
push
mov
jp
into
and
loopne
lods
xor
cmps
scas
adc
or
push
inc
sar
and
and
xchg
xchg
xchg
cli
fsubr
popf
sbb
ss
(bad)
fsubr
mov
and
jl
pop
cmp
jae
xor
pop
xor
popa
outs
rol
clc
sub
outs
pop
cmp
fisubr
or
push
pusha
pop
call
lods
div
xchg
mov
mov
les
mul
push
sub
mov
int3
xor
sub
enter
lods
dec
fwait
push
sub
pop
cmp
xchg
push
push
clc
aas
pop
pop
jle
xor
aas
mov
add
pop
imul
or
xor
fimul
push
imul
std
in
popa
repz
xor
out
repz
push
ds
lock
dec
sar
dec
test
pop
hlt
pop
mov
sub
cmps
std
inc
xor
movs
lods
out
jmp
shl
jnp
movs
mov
or
gs
div
adc
popa
call
sub
call
and
dec
out
cmps
loop
xlat
mov
enter
call
jns
xchg
sar
(bad)
mov
cmp
lock
xor
dec
pop
sub
test
popf
fwait
dec
cmps
adc
sti
ror
push
pop
neg
xchg
adc
out
(bad)
lahf
mov
loope
je
inc
dec
gs
cli
dec
or
push
mov
xor
and
adc
jne
and
and
inc
mov
sub
test
jae
push
mov
push
sub
inc
mov
inc
dec
pop
das
pop
aam
clc
cmp
xor
mov
aad
or
aam
adc
dec
jbe
pusha
mov
or
sub
idiv
std
mov
call
adc
xchg
mov
std
cdq
and
je
cmp
add
xor
adc
ret
dec
movs
(bad)
fidiv
xchg
adc
mov
in
adc
jbe
pusha
popa
out
mov
jo
ds
imul
push
nop
lds
loopne
inc
cmp
mov
add
inc
jmp
lods
mov
push
int3
adc
xor
and
push
sti
dec
imul
dec
fdiv
cmp
shr
ins
inc
into
bound
outs
arpl
mov
dec
push
mov
nop
cmp
push
and
sbb
dec
sbb
popa
mov
add
arpl
add
outs
dec
dec
mov
sbb
fistp
jg
mov
inc
in
mov
push
cli
addr16
inc
ja
fwait
(bad)
sti
outs
sub
push
pop
push
or
movs
popa
pop
pop
or
fld
rol
sub
jle
hlt
sbb
rcr
idiv
pop
pop
xor
push
(bad)
shl
jo
xchg
cmps
mov
cmps
(bad)
sbb
and
popa
jmp
sub
add
pop
add
fiadd
jecxz
pop
cmp
push
repnz
jbe
repnz
iret
adc
(bad)
lods
inc
push
pusha
je
fxam
dec
ins
sbb
jecxz
test
inc
ret
pushf
test
adc
adc
cmp
(bad)
jnp
int
and
mov
movs
out
mov
dec
sub
xlat
out
daa
push
je
xchg
stos
int
inc
pop
aas
fimul
push
test
mov
scas
cli
adc
xor
mov
sub
mov
adc
fiadd
cmp
push
cmp
out
js
nop
jecxz
shl
xor
aad
call
or
inc
cld
push
int
jns
and
add
sub
leave
add
jg
jecxz
jne
mov
cmp
call
retf
aas
pop
ins
ficomp
fist
daa
xor
push
add
(bad)
pusha
xor
into
frstor
jns
or
fcomp
aas
add
jne
int3
adc
cmp
dec
cmp
add
cmp
cmp
jecxz
test
rol
push
and
mov
call
mov
int
es
xchg
leave
jmp
jno
out
xchg
inc
xor
sub
in
fprem
jno
adc
ja
add
sub
and
xchg
es
lahf
das
pop
jg
pop
pop
mov
mov
lahf
sbb
daa
xchg
pop
call
jg
in
pop
clc
iret
sub
mov
adc
and
repnz
sub
mov
cli
xchg
(bad)
pop
retf
or
mov
add
pop
(bad)
popf
add
ror
add
loope
arpl
ins
mov
mov
cld
jo
push
cmp
rcr
xchg
mov
add
cmp
out
(bad)
pop
xor
push
dec
repnz
adc
push
shl
adc
cwde
or
or
jmp
pop
pop
cmp
mov
push
mov
and
push
and
pop
in
movs
rol
test
imul
mov
aam
push
or
outs
xchg
addr16
aaa
aas
xor
aam
int3
jge
icebp
shl
hlt
or
outs
movs
loope
sub
jmp
or
pop
push
mov
and
jbe
mov
repnz
aam
sbb
out
fisub
xchg
cwde
stos
out
push
mov
call
(bad)
(bad)
(bad)
fisttp
mov
sub
xor
outs
push
movs
mov
pusha
add
lods
sbb
xor
enter
jae
push
jl
xchg
ds
out
and
cli
popf
jbe
repz
call
sahf
sbb
call
in
mov
call
push
ror
push
inc
(bad)
dec
enter
nop
sti
adc
(bad)
int3
(bad)
cld
xchg
mov
sar
ficom
mov
dec
addr16
mov
loopne
fstp
loopne
sar
xchg
fist
iret
loope
xor
push
(bad)
inc
mov
ret
push
loopne
fs
fwait
rcr
aas
(bad)
std
aas
cmp
xor
or
inc
push
(bad)
mov
push
or
gs
hlt
movs
pop
mov
cmps
mov
cmp
add
push
scas
fisttp
inc
arpl
sbb
mov
jge
test
ins
data16
cmp
cmp
lock
retf
xchg
lods
jo
and
bnd
xor
push
jns
pop
inc
cmp
sub
or
inc
or
or
lods
push
daa
and
lock
mov
push
mov
bound
cmp
dec
shr
mov
cmc
add
dec
adc
stos
dec
mov
std
cmps
shl
jae
shr
push
das
stos
test
xchg
aas
je
lock
xor
(bad)
div
adc
pop
mov
push
and
test
gs
dec
enter
and
(bad)
mov
fucomp
mov
mov
enter
cmp
mov
in
or
xor
popa
jecxz
cmps
mov
mov
js
je
in
cmps
push
aam
les
test
or
xor
sbb
sar
mov
int
mov
dec
ins
mov
mov
fcomp
push
loopne
pop
xor
lea
out
sbb
xchg
ret
mov
das
xlat
(bad)
jecxz
daa
cmps
xchg
and
aad
and
dec
mov
and
jo
adc
mov
jmp
cmps
pop
jb
sub
jmp
mov
push
retf
mov
cmp
je
sahf
fs
or
ins
test
in
add
ss
pop
daa
in
pop
out
jle
push
add
jnp
xchg
inc
ss
in
or
loope
ja
fs
arpl
out
stos
das
clc
leave
sbb
je
lea
push
nop
cmp
add
mov
jmp
cmp
ret
xchg
and
dec
jle
mov
icebp
leave
cli
jg
xor
jg
data16
pop
cdq
pop
in
sub
sbb
and
push
aaa
mov
fdiv
addr16
lds
jns
popf
sub
add
sub
ds
xchg
or
cmp
out
dec
(bad)
nop
or
mov
inc
and
jb
xlat
hlt
adc
mov
icebp
mov
js
sub
pushf
(bad)
shl
mov
sub
enter
fwait
ror
xchg
mov
in
sub
shr
aad
aad
in
pop
pop
frstor
inc
sub
(bad)
iret
aam
fidiv
or
jmp
lahf
xlat
push
js
xor
call
shl
pop
outs
xchg
jo
jecxz
stos
push
imul
xchg
mov
xor
stos
fisub
inc
push
inc
xor
mov
es
push
sbb
mov
or
push
and
jb
inc
mov
jg
lock
or
push
(bad)
leave
movs
mov
sub
cmp
inc
(bad)
adc
stos
rol
bound
mov
pop
out
xchg
mov
test
pop
enter
adc
push
mov
aas
lods
movs
test
loop
(bad)
mov
push
adc
xchg
sub
mov
stos
stc
and
fld
shl
adc
in
pop
push
stos
pop
loope
je
push
fidiv
cmp
clc
jnp
gs
or
xchg
arpl
movs
call
dec
jnp
rol
cmp
pop
mov
retf
js
jl
scas
aas
pop
add
ins
pop
push
cmp
frstor
jmp
shl
push
add
popa
jae
(bad)
push
cmp
adc
cmp
cs
cld
sti
shr
aad
out
adc
mov
add
mov
jb
dec
inc
fnstsw
loopne
pop
inc
jge
jp
mov
shl
and
dec
jmp
fcmovnb
lahf
icebp
xor
mul
out
jmp
jbe
enter
stos
xchg
dec
pop
fcom
scas
sub
push
gs
add
push
inc
mov
test
arpl
mov
add
test
mov
sbb
out
sbb
xchg
mov
stc
sub
out
cli
adc
das
aas
shl
and
in
test
pusha
inc
cmp
pop
mov
in
cmc
ins
lock
ds
sub
mov
dec
dec
mov
inc
cmp
push
ja
jmp
sub
out
repz
aad
xor
es
push
mov
mov
in
inc
sti
arpl
sti
addr16
enter
in
xor
std
int
pop
or
inc
sub
pop
mov
xor
push
push
repz
or
adc
ds
popa
in
test
jl
inc
jp
outs
or
and
daa
dec
call
lds
or
xchg
mov
jno
and
pushf
sbb
dec
inc
mov
mov
push
cmp
push
rol
aas
imul
jl
fild
(bad)
mov
jne
fld
add
adc
adc
jb
adc
and
inc
mov
add
ror
das
stos
pop
push
int3
sub
sub
pop
enter
push
cmp
or
and
iret
test
or
test
push
repnz
mov
push
(bad)
mov
push
mov
inc
das
in
jns
pop
stos
(bad)
repnz
ror
pop
jmp
jnp
inc
in
jnp
lods
jecxz
mov
call
addr16
mov
leave
sti
pop
jl
leave
jecxz
or
xor
and
movs
cmp
inc
push
jns
add
daa
or
dec
or
xchg
jo
sub
mov
setnp
and
xchg
push
dec
mov
movs
dec
inc
lahf
push
mov
xor
jmp
sbb
int
aas
xchg
iret
je
popa
and
cmc
sbb
mov
inc
adc
rcr
stos
inc
jge
call
pop
repz
inc
sbb
mov
jae
lds
mov
in
push
lds
pop
jb
sub
adc
repz
adc
sub
mov
pop
sub
mov
push
std
mov
dec
cmp
fs
mov
icebp
and
test
jp
xor
cmp
xor
lahf
or
pop
shr
xchg
jno
out
sub
and
sub
lods
movs
mov
test
xchg
cmp
push
push
cli
sbb
or
mov
sbb
sti
call
sbb
cdq
mov
jmp
mov
sbb
cmc
mov
mov
cdq
shl
mov
fcom
sbb
test
fidivr
inc
xor
(bad)
jmp
mov
sub
push
or
adc
inc
mov
and
outs
out
mov
inc
sub
adc
loop
dec
sbb
sbb
imul
or
aam
xchg
cmovbe
aas
sbb
lods
xchg
sub
lea
dec
(bad)
lahf
ret
sub
xor
fcom
stc
(bad)
scas
out
pop
in
scas
in
or
(bad)
and
in
hlt
pop
cmps
cmp
adc
(bad)
cdq
fidivr
adc
loopne
mov
push
iret
hlt
scas
or
jns
sub
inc
adc
push
leave
cli
dec
pop
bound
fnsave
fincstp
dec
mov
cld
stos
and
push
inc
pop
add
cmp
in
sbb
int
push
cmps
jl
cld
push
(bad)
(bad)
jge
cs
pop
sbb
cmp
clc
inc
jmp
movs
inc
pop
es
jne
mov
xchg
jne
inc
sub
cmp
sbb
jno
sub
arpl
je
lock
mov
mov
fisttp
jmp
aas
in
bnd
adc
daa
ins
jl
pop
pop
push
es
or
sbb
repz
sar
push
cmps
pushf
pop
xchg
or
das
add
jo
dec
mov
sub
cld
std
mov
mov
(bad)
fnstenv
or
std
(bad)
lods
push
xchg
std
sbb
pop
jnp
add
dec
jno
cli
cmc
jns
and
inc
sub
push
jne
push
jmp
adc
push
popf
inc
dec
adc
loope
mov
and
sbb
mov
dec
rcl
test
sti
inc
shl
lea
or
sbb
ret
pop
inc
jmp
dec
pop
or
lds
frndint
cmp
jno
push
outs
fistp
out
xchg
ss
(bad)
imul
xchg
dec
(bad)
push
jl
movs
push
clc
inc
dec
sbb
add
test
(bad)
(bad)
or
pop
xchg
jnp
test
in
xchg
popa
mov
bound
imul
jo
dec
mov
sti
stos
jge
xor
sub
add
daa
retf
push
adc
push
sub
inc
ins
idiv
outs
std
fistp
push
push
push
iret
pop
mov
sahf
push
and
(bad)
mov
(bad)
pop
inc
dec
shr
outs
sti
test
in
push
sub
movs
mov
and
fidivr
in
jmp
adc
inc
cmps
sar
sub
outs
sub
xchg
pushf
xchg
and
test
xchg
in
fucomp
jmp
lods
ffree
xchg
ud0
arpl
rcr
mov
loopne
out
cs
and
cmp
aas
je
mov
xchg
cmp
mov
adc
sub
(bad)
and
cmp
ret
sub
sub
mov
jmp
push
xor
or
jbe
jbe
pusha
xchg
xor
sub
aad
repnz
or
and
adc
in
xchg
in
rcr
mov
mov
jmp
cmp
es
repz
jmp
(bad)
(bad)
test
inc
sti
jle
mov
pop
mov
int
mov
inc
add
ins
jne
ins
gs
clc
or
jmp
push
inc
xchg
daa
push
jae
mov
ins
outs
jg
inc
or
or
aad
fist
mov
test
xchg
mov
or
rol
cld
jg
out
jmp
das
int3
mov
xchg
mov
std
jns
jmp
mov
(bad)
mov
xchg
cmp
mov
xchg
fidiv
les
sub
(bad)
retw
xor
retf
ins
cmp
pop
mov
test
push
add
es
push
in
cli
cwde
push
out
cmp
ficomp
inc
cmp
xor
(bad)
pop
or
xchg
mov
ins
jbe
and
ror
ins
adc
std
jp
dec
icebp
push
lods
or
xchg
jbe
add
cmps
rcr
int3
(bad)
loope
mov
lds
pop
addr16
sbb
and
pushf
jno
movs
push
add
ins
or
and
lods
dec
repz
pusha
sbb
shl
ins
repz
adc
dec
jge
dec
add
push
dec
dec
pusha
add
mov
cs
fisttp
add
xchg
outs
xchg
sub
mov
and
movs
lods
fdiv
add
fimul
mov
outs
xchg
and
jmp
xchg
fisubr
lock
and
je
pop
sbb
das
mov
xchg
js
mov
call
test
add
pop
mov
ins
jb
dec
ins
mov
mov
add
or
jne
call
add
jmp
jns
xchg
les
mov
ins
pop
jmp
lods
in
adc
fs
gs
mov
(bad)
jp
jbe
into
out
adc
leave
icebp
clc
leave
enter
jno
loopne
imul
test
loop
inc
fadd
add
das
cs
(bad)
sbb
and
mov
xor
int
bound
dec
pop
sub
dec
pusha
in
outs
fs
and
xchg
sbb
mov
pop
ds
mov
inc
sbb
sbb
sar
cld
(bad)
fidivr
and
jle
arpl
stos
ins
ins
cld
cmp
(bad)
addr16
push
add
or
mov
div
jne
mov
addr16
shr
and
neg
pop
loopne
push
js
outs
es
ins
arpl
dec
xlat
int
out
xor
sahf
or
add
dec
div
mov
repnz
inc
xor
mov
add
jl
fadd
mov
push
ror
and
mov
int3
push
dec
mov
cwde
dec
dec
int
mov
movzx
sub
mov
btr
jno
movs
stos
std
es
xchg
sbb
inc
cmp
in
xchg
shl
mov
sbb
sti
repz
pop
push
addr16
(bad)
ins
jmp
mov
enter
int
pop
js
jae
sub
clc
add
mov
fdivr
ss
in
iret
mov
(bad)
imul
jmp
mov
sbb
arpl
or
cs
pop
or
neg
sar
retf
lods
ret
enter
cwde
mov
pop
xor
loopne
outs
sbb
pop
or
sbb
push
jae
int
test
mov
pop
jno
inc
scas
loop
cmp
aaa
stc
test
jmp
ficom
mov
add
scas
imul
int
cmp
mov
mov
push
pop
mov
mov
mov
pop
inc
jne
cwde
push
dec
hlt
jmp
xor
inc
shr
add
dec
fld
imul
std
mov
loope
clc
fistp
cmps
push
(bad)
xchg
mov
adc
mov
pop
shr
enter
div
or
fcmovnb
inc
gs
xor
mov
mov
mov
push
pop
sub
call
xchg
pushf
and
dec
shr
xchg
and
jmp
mov
fs
and
loope
icebp
popf
lods
pop
fwait
out
xlat
inc
push
rcr
dec
aas
loope
pop
mov
(bad)
sub
(bad)
pop
out
fisubr
(bad)
xchg
sub
into
gs
push
addr16
(bad)
sbb
add
sub
in
add
stc
jg
or
outs
mov
dec
sbb
popf
sbb
fisubr
cmp
jae
pop
(bad)
dec
mov
mov
or
mov
popa
loop
push
popa
std
push
retf
pop
pop
inc
icebp
int3
loope
lea
(bad)
xlat
add
xor
sahf
call
sub
adc
out
mov
dec
cmp
push
js
popa
xchg
loop
lods
lds
push
(bad)
nop
jne
cld
mov
sub
jo
gs
push
jmp
mov
std
in
adc
adc
in
mov
popf
or
adc
dec
pop
aam
in
or
ds
lahf
int
test
push
dec
mov
call
cmps
or
mov
push
cdq
nop
daa
imul
push
or
movs
loop
xor
xchg
fnstsw
cld
cli
adc
lahf
xor
pop
inc
push
aam
ins
test
adc
mov
stc
ficom
ret
add
repz
fwait
(bad)
mov
and
cmp
cmp
sub
or
add
pop
cmp
dec
jb
popa
in
popa
jle
push
add
pusha
inc
xchg
jbe
and
xchg
and
in
in
sbb
stc
in
xchg
(bad)
dec
loop
sub
push
popf
xchg
push
xor
add
out
mov
fstp
push
je
test
mov
cmp
pop
lods
iret
movs
mov
xor
dec
sub
push
jg
mov
mov
fwait
add
push
mov
ins
call
cmp
mov
js
cmp
dec
(bad)
cmp
mov
push
push
out
mov
pop
pop
xchg
cmp
or
pop
mov
adc
hlt
retf
pop
xor
popa
and
mov
ja
popf
shr
sti
(bad)
loope
inc
fild
mov
xchg
test
das
ins
mov
jmp
retf
jecxz
inc
cdq
push
imul
push
(bad)
inc
push
aaa
push
lea
cmps
pop
mov
fmulp
mov
ds
mov
and
mov
test
or
sub
popa
sbb
(bad)
dec
jno
stc
lea
ret
xlat
push
dec
test
in
sbb
into
jnp
ins
lahf
cmps
lahf
cmps
inc
and
shr
les
(bad)
comiss
pop
pop
add
repz
xchg
cwde
sbb
mov
push
jnp
loop
call
int3
sub
add
jmp
mov
ins
out
xor
push
js
push
ins
mov
lahf
or
mov
mov
(bad)
gs
(bad)
adc
ret
cmp
or
sti
imul
or
mov
rol
bound
clc
pop
(bad)
or
sub
mov
jmp
leave
and
xchg
(bad)
xchg
xor
push
es
stos
jo
imul
dec
cs
enter
cmp
ror
and
inc
out
in
pusha
mov
mov
add
adc
inc
shr
mov
and
adc
push
add
(bad)
inc
jmp
push
mov
clc
js
lahf
xchg
stc
jo
inc
dec
daa
adc
mov
dec
jle
mov
nop
mov
jno
jo
daa
add
mov
jecxz
test
inc
or
sbb
sub
inc
or
xor
nop
jae
fmul
mov
popa
cmp
mov
into
inc
mov
std
std
adc
sub
stos
jp
rcr
(bad)
inc
movs
clc
mov
inc
aas
fbld
sbb
je
loope
push
inc
sti
lods
xor
mov
fdiv
pushf
pop
leave
and
mov
loope
aad
jge
or
push
xchg
retf
jmp
jle
jo
dec
test
sti
mov
addr16
cmc
ret
push
es
mov
or
and
jmp
aad
adc
lea
(bad)
leave
ss
cmp
add
and
dec
stos
pusha
jbe
iret
out
mov
inc
mov
outs
mov
cwde
push
inc
(bad)
xor
mov
call
xor
cmps
(bad)
clc
mov
inc
pop
jbe
sub
dec
in
(bad)
mov
mov
popa
adc
or
int
push
xchg
shl
int
xor
mov
mov
jg
inc
fdiv
call
pop
jmp
inc
xchg
adc
mov
imul
mov
call
icebp
fsub
gs
stos
das
sahf
jmp
mov
adc
loopne
mov
call
jbe
dec
inc
shr
xchg
int
idiv
and
or
retf
xchg
push
out
mov
cmp
in
push
push
into
rcl
xchg
cmp
mov
je
(bad)
fisub
mov
int
ins
jb
lods
inc
jns
or
jmp
lea
fcomp
jmp
mov
and
fdiv
add
imul
in
rcl
push
call
fiadd
js
out
cmp
lods
jl
ret
mov
out
mov
(bad)
jmp
add
pushf
dec
jae
ret
loopne
call
popa
mov
das
push
adc
retf
xchg
out
adc
stos
dec
aad
mov
pop
div
cdq
leave
dec
shl
fneni(8087
xor
out
fstp
sahf
cmp
xchg
sbb
sar
(bad)
jnp
daa
sub
loope
adc
pop
xchg
and
xchg
rol
fisub
cmp
xchg
popf
push
inc
sub
add
inc
stos
repz
out
addr16
xor
inc
mov
test
scas
fstp
retf
push
dec
in
loop
ss
cmp
cmps
mov
test
cmp
iret
lock
retf
adc
mov
aad
and
shr
aaa
mov
pusha
mov
mov
stc
fbstp
stc
push
(bad)
push
sti
ror
je
push
movs
(bad)
push
adc
xchg
xor
int3
mov
mov
or
inc
je
mov
out
stos
mov
mov
and
jmpw
push
aaa
sahf
pop
je
outs
dec
sbb
ficom
add
leave
adc
inc
(bad)
lods
loopne
push
hlt
and
xor
mov
stos
cmc
sbb
mov
aam
mov
jg
(bad)
mov
ret
in
jmp
push
jmp
pushf
lods
cli
repnz
ja
pushf
and
repz
or
jae
test
mov
dec
out
pop
xchg
loopne
mov
pop
jle
xchg
xchg
inc
mov
mov
bound
xchg
movs
jmp
push
dec
nop
ja
xor
mov
out
cld
cmp
mov
cmp
stc
jecxz
xchg
push
nop
sbb
sub
js
rcl
icebp
jecxz
aaa
outs
clc
aas
ds
out
push
mov
add
dec
in
(bad)
mov
xchg
xor
pop
ret
ss
outs
jnp
test
jbe
jl
sbb
fdivr
sub
das
loop
nop
jno
dec
idiv
shl
mov
add
in
in
and
(bad)
outs
lods
xor
jne
(bad)
mov
push
push
loopne
sti
sbb
fdiv
fadd
aad
mov
imul
test
fs
ret
inc
(bad)
xchg
stos
dec
mov
inc
mov
aas
xlat
sbb
jno
jbe
call
mov
jns
cli
inc
mov
add
es
mov
jg
es
ja
js
mov
rcl
push
push
mov
mov
retf
mov
mov
jl
(bad)
mov
(bad)
arpl
xchg
in
rcl
lea
mov
ins
pop
mov
and
pop
ss
(bad)
arpl
clc
ja
into
xor
mov
pop
mov
pusha
ret
push
or
xor
mov
ss
xchg
out
int
clc
push
jg
mov
adc
ins
pop
inc
cmc
xchg
inc
cmp
call
sub
add
lods
push
sbb
cmc
mov
fs
xchg
movs
inc
ja
pop
jmp
xor
cs
aaa
std
cs
mov
rcr
sti
mov
jb
fwait
push
xor
or
jl
movs
gs
jns
push
outs
(bad)
out
sti
inc
jmp
cmp
mov
stos
jmp
fldcw
es
cs
inc
cmp
push
cmp
cld
inc
add
adc
pop
adc
add
jp
ret
xor
sbb
push
pop
adc
shr
or
pop
rcr
mov
shl
mov
push
inc
cdq
xor
loopne
xor
jmp
add
sbb
add
xchg
sbb
fiadd
popa
aad
inc
leave
stos
outs
dec
test
dec
ja
pop
loopne
ds
loop
clc
popf
fld
(bad)
mov
sub
mov
jns
jecxz
xor
cmp
(bad)
into
mov
retf
out
pop
push
cmc
es
inc
add
je
sbb
aaa
sbb
xchg
sbb
fs
xchg
imul
sub
pop
jnp
call
add
xchg
jecxz
lahf
jae
adc
imul
(bad)
scas
aam
in
into
pusha
inc
push
outs
mov
mul
ret
icebp
dec
mov
dec
pop
retf
in
ins
gs
lea
adc
mov
push
sub
sub
std
imul
pop
cdq
jp
adc
and
rcl
cld
cmp
dec
mov
fnop
or
nop
bound
ins
mov
test
pop
push
xchg
sbb
sbb
rep
xor
into
mov
cmovg
lock
call
adc
add
jnp
js
movs
inc
out
and
(bad)
out
les
nop
inc
sbb
setle
and
cmp
mov
sahf
or
lods
cmc
pop
mov
xchg
enter
enter
jae
inc
clc
dec
nop
jg
and
std
cwde
in
gs
jbe
adc
sbb
out
dec
sub
xchg
jb
(bad)
sub
pop
enter
or
jno
adc
lods
jge
mov
jg
iret
and
daa
adc
call
test
aas
sbb
jo
into
xchg
adc
xor
fsubr
jg
push
dec
dec
push
jbe
push
test
test
mov
outs
test
test
(bad)
sbb
jecxz
lea
(bad)
sub
js
mov
enter
in
lds
pop
mov
pop
mov
pop
sbb
xor
inc
inc
rcl
add
and
cmp
ja
in
out
test
movs
mov
add
xor
fld
and
xchg
add
pop
loop
cld
icebp
jl
fidiv
adc
inc
out
fmul
jno
or
inc
xor
dec
retf
push
rcl
fimul
inc
out
repnz
xchg
xchg
je
fist
bound
mov
sub
loopne
ret
xor
pop
add
nop
test
xor
fild
xchg
inc
mov
std
lahf
push
sub
outs
sub
enter
lods
pop
call
push
fld
cmovle
arpl
psubusw
ret
jo
daa
stos
lea
test
push
push
or
cwde
cmps
mov
int3
es
xchg
xchg
add
push
add
xchg
rcr
adc
sbb
aad
or
push
fadd
cdq
nop
mov
fimul
popf
fs
dec
xor
sbb
sub
dec
popf
xchg
add
jge
inc
xchg
or
cmps
pop
rol
mov
push
or
adc
cmp
fsubr
or
(bad)
sub
ret
mov
test
sbb
mov
movs
sub
rol
ror
movs
jns
pop
pusha
enter
(bad)
mov
cmps
push
xor
mov
jl
aas
pop
or
lahf
comiss
and
sbb
(bad)
popf
and
push
mov
add
jmp
pushf
sbb
ror
sub
jge
xchg
add
or
fwait
adc
add
pop
pusha
jl
mov
jmp
fsubr
and
adc
sbb
lahf
ficom
inc
lods
call
dec
sti
fstp
xor
gs
retf
cmp
dec
aam
push
gs
ret
jmp
hlt
lds
or
sahf
clc
fwait
call
loope
daa
cwde
(bad)
cmp
pop
xor
ins
jmp
(bad)
dec
aaa
push
xchg
and
dec
jns
les
imul
and
add
push
adc
cmps
sahf
inc
sub
repnz
or
ds
mov
cmp
lahf
lods
test
inc
and
rcl
xor
cmp
mov
inc
mov
mov
sub
mov
pop
sbb
jae
retf
cmc
cwde
js
popf
arpl
jbe
dec
xchg
arpl
fsubp
mov
xor
addr16
data16
(bad)
cs
sub
fnstsw
stos
int
xchg
dec
jbe
mov
fucomp
mov
fcom
mov
mov
dec
mov
push
jmp
rol
inc
sbb
cld
das
mov
or
aaa
(bad)
mov
push
shl
(bad)
dec
imul
imul
xor
mov
imul
xchg
mov
repnz
xor
sbb
or
int
mov
add
push
jns
xor
jp
cmp
fadd
jnp
into
into
fild
jb
imul
adc
into
jb
and
jp
cmp
add
test
cmp
loopne
push
ins
xor
out
adc
mov
sbb
fwait
adc
jno
and
add
popf
lods
adc
sub
out
or
jmp
(bad)
arpl
and
pop
or
nop
cmp
rol
bound
inc
add
aam
push
sub
imul
pop
add
adc
std
jne
pop
loop
add
and
add
movs
dec
data16
mov
jne
xchg
add
lahf
js
in
mov
cmc
jns
xlat
ret
xlat
mov
fwait
sbb
adc
add
shl
push
jecxz
push
sbb
addr16
pushf
or
aas
scas
adc
out
sub
daa
out
loopne
xchg
mov
pop
mov
mov
push
cmc
and
or
mov
and
jmp
ds
ja
and
or
pusha
sbb
adc
in
(bad)
pop
aad
in
push
les
dec
jmp
fdivr
jnp
ja
inc
(bad)
imul
sahf
jle
sbb
mov
out
lods
and
in
jbe
mov
je
push
jns
stos
movs
push
push
xlat
shl
push
xor
out
lds
ja
push
add
inc
cmp
pop
jecxz
lds
inc
inc
push
sahf
inc
(bad)
gs
pusha
sub
stos
out
int
inc
sbb
retf
jl
mov
mov
cs
inc
or
outs
fdivr
movs
mov
push
inc
in
imul
mov
sub
ret
cs
ins
aas
and
inc
push
mov
cwde
jge
iret
addr16
repnz
or
mov
and
(bad)
iret
cmp
popf
pop
sti
lea
pop
sahf
scas
xchg
cmp
movs
dec
loop
add
add
mov
dec
sar
stc
inc
dec
cmp
add
int
mov
test
and
fistp
and
adc
cwde
dec
repz
jge
xor
push
sub
test
call
das
pop
jle
and
iret
cs
push
push
adc
adc
xor
icebp
cmp
add
in
shr
ja
xchg
add
test
icebp
sbb
icebp
fsub
pop
cmp
das
jmp
and
les
push
xchg
jb
add
fs
inc
inc
or
idiv
sbb
stos
xor
lds
scas
mov
mov
mov
retf
fadd
into
inc
mov
ja
mov
pop
fcmovbe
aad
mov
daa
push
out
xor
lock
out
pop
jne
adc
mov
push
sbb
outs
in
cs
shl
test
arpl
pop
paddb
mov
pop
hlt
cmp
push
cmps
inc
mov
pop
mov
add
mov
dec
inc
sbb
inc
pop
(bad)
cmps
das
out
or
sbb
int3
popf
adc
jno
gs
cmp
and
retf
inc
cmc
dec
mov
mov
cld
mov
addr16
xlat
jmp
hlt
adc
sub
jb
push
sbb
add
push
shl
(bad)
and
add
mov
sahf
xchg
fisttp
clc
jp
and
add
push
jbe
sbb
xor
fistp
je
push
inc
cmp
out
stos
and
jecxz
pushf
das
xchg
push
lods
cmp
pop
(bad)
sbb
dec
mov
jge
(bad)
shl
fsub
cdq
cmp
icebp
adc
les
pop
and
mov
out
fld
jle
stos
jp
or
je
push
hlt
cmp
rcl
add
out
add
scas
xor
and
add
mov
dec
cmp
sti
out
xor
sbb
mov
mov
sti
push
and
popf
call
scas
push
ds
neg
loop
xchg
leave
xchg
xor
cld
and
sbb
jbe
push
jae
add
jg
jbe
add
icebp
or
fcom
xor
out
dec
or
shr
jb
movs
(bad)
adc
jnp
cmp
rol
or
repz
mov
add
push
ja
loope
repz
ja
mov
and
dec
dec
xchg
hlt
pop
cmp
or
in
push
arpl
jno
ins
test
es
loope
jae
arpl
jns
pop
xchg
jmp
mov
and
cdq
sbb
lock
sti
mov
leave
mov
mov
outs
and
mov
jns
xchg
push
cmp
movs
adc
dec
jle
ins
or
jecxz
sub
repnz
loopne
stos
cmc
jle
call
sbb
ins
inc
adc
mov
cmp
mov
cmp
push
outs
jne
jne
sbb
mov
cmp
jl
inc
retf
into
adc
pusha
fdiv
and
aas
mov
inc
ret
retf
mov
ds
pop
psllw
movs
clc
(bad)
into
and
sbb
aad
not
test
mov
lods
push
loop
add
adc
sti
rcr
jno
aad
pop
jo
cmp
cmps
aas
stos
jo
daa
jl
push
out
loope
int
fs
xchg
jb
or
pop
mov
sahf
xchg
arpl
fld
add
loopne
xor
push
push
ins
not
mov
and
push
hlt
or
loop
lds
inc
or
dec
pop
stos
xor
mov
out
loopne
mov
pop
xor
sbb
gs
xchg
int
icebp
adc
pop
cli
adc
jmp
and
jae
movs
jmp
das
mov
dec
push
jmp
popa
xchg
cwde
push
jp
jmp
aaa
dec
push
and
cmps
push
jb
(bad)
jo
jle
inc
out
psubsb
fwait
aam
ret
inc
je
add
dec
aad
cmp
into
inc
jg
fmul
movs
and
addr16
adc
xor
out
outs
push
mov
in
pop
fild
adc
(bad)
sbb
aad
inc
lods
jecxz
ss
lods
xor
ror
xchg
dec
repnz
lods
mov
or
xchg
(bad)
xor
pop
push
and
mov
dec
shl
mov
inc
jmp
fdiv
adc
xchg
mov
lds
test
cmps
pop
mov
es
aaa
inc
mov
pop
fild
fisub
inc
xor
jecxz
pop
scas
mov
stc
or
jle
imul
icebp
push
imul
dec
sahf
and
pop
xor
aas
inc
jmp
(bad)
mov
movs
(bad)
mov
dec
sbb
stos
std
jne
lock
leave
mov
mov
mov
inc
iret
fiadd
dec
out
xchg
mov
and
mov
or
ficomp
div
xchg
and
stos
xchg
in
xchg
retf
push
mov
cmps
jb
dec
std
adc
cmp
push
cmp
nop
loope
push
mov
dec
mov
add
and
xchg
in
bound
mov
or
test
test
into
push
(bad)
repnz
jl
mov
fldcw
or
shl
or
add
xchg
int
fidivr
test
sti
adc
hlt
jo
test
lock
push
pusha
stos
loopne
popf
mov
fisub
mov
sub
mov
or
ret
mov
push
cmc
enter
mov
cmp
push
rcl
enter
mov
mov
lea
nop
nop
test
sbb
sbb
xor
scas
les
push
shl
mov
xor
daa
dec
sahf
jo
fdiv
scas
aad
or
inc
or
ins
fmul
lods
mov
add
push
scas
ja
arpl
retf
inc
push
data16
outs
mov
(bad)
hlt
push
mov
std
iret
retf
inc
sbb
push
scas
fs
int3
jae
cdq
push
and
jmp
jns
cli
cli
xchg
lea
xchg
mov
sub
xchg
xchg
test
not
or
push
dec
(bad)
addr16
xor
inc
pop
sub
xor
imul
sbb
mov
adc
adc
adc
retfw
adc
(bad)
dec
inc
loope
pop
sub
aad
jb
push
es
(bad)
repz
jp
lods
mov
retf
add
mov
pop
xchg
icebp
jle
pop
sbb
scas
daa
or
test
xor
jp
gs
adc
inc
loopne
mov
xchg
jne
fstp
loopne
xor
aam
(bad)
sahf
stc
pavgw
add
jne
gs
nop
push
in
inc
push
mov
in
mov
js
mov
mov
mov
mov
loope
std
mov
cmp
rcr
jmp
or
(bad)
mov
sar
loopne
mov
aas
cmp
push
imul
jns
enterw
call
mov
dec
into
cmp
jl
mov
jle
call
xor
sub
icebp
clc
loopne
(bad)
(bad)
popf
mov
rep
cmp
sbb
aaa
inc
cmp
mov
add
jmp
cs
stos
mov
adc
cdq
(bad)
fs
add
data16
push
sbb
sub
ret
lods
rol
or
mov
psraw
dec
aas
icebp
clc
xchg
popa
pop
fstp
das
or
adc
cmp
sbb
scas
sub
call
mov
iret
push
out
mov
or
mov
call
movs
pop
ror
jge
cmp
pushf
ins
sbb
test
fisttp
xor
or
(bad)
pop
fdiv
mov
dec
lea
pop
mov
xlat
adc
aaa
xchg
scas
mov
ss
jae
fnsave
push
cmps
inc
test
(bad)
in
jmp
(bad)
stc
imul
pop
sti
jno
ficomp
xchg
dec
adc
cs
cmp
adc
inc
mov
scas
dec
shr
in
jb
jno
(bad)
std
into
cmp
xor
pop
mov
push
imul
(bad)
dec
stc
xchg
push
adc
jle
ret
dec
out
cli
sahf
dec
or
mov
in
mov
mov
xchg
out
rcr
mov
sbb
mov
in
adc
or
cdq
jp
(bad)
xor
fwait
cmp
dec
jne
sub
addr16
rcr
enter
cmp
adc
fist
js
daa
lock
iret
cwde
les
xchg
movs
cwde
inc
retf
dec
sub
addr16
cdq
adc
push
push
jbe
cwde
sbb
fsubr
mov
cld
mov
xchg
fisttp
into
les
cmp
sbb
jns
imul
out
mov
outs
mov
les
inc
(bad)
xchg
jg
jecxz
(bad)
xlat
addr16
sahf
mov
pop
sub
retf
aam
push
dec
or
ds
lods
xchg
jno
pop
push
push
pop
jmp
ja
dec
jecxz
fdivr
in
sbb
xchg
xor
push
fild
int3
dec
mov
(bad)
xor
or
stc
lods
xor
cld
out
sub
push
pop
push
mov
out
dec
cmp
stos
add
fcom
ds
das
adc
sti
push
fnstenv
std
push
pop
dec
mov
jnp
and
dec
push
xchg
fldenv
jne
cli
sbb
push
push
js
pop
xlat
sub
sub
shl
add
jae
aas
(bad)
daa
jle
(bad)
test
(bad)
push
gs
enter
ins
push
pop
lock
outs
adc
cmp
pop
movs
xchg
and
mov
adc
jg
dec
cmp
xchg
push
mov
pop
cmp
in
push
in
rol
and
rcr
stos
fs
adc
or
xor
iret
inc
shr
outs
sbb
(bad)
shr
dec
outs
fstp
ds
loopne
les
mov
dec
push
mov
xor
js
mov
mov
pop
je
iret
add
ins
cmp
js
(bad)
or
ds
aas
push
std
and
push
lea
sbb
mul
jl
sti
test
pop
sti
daa
or
xchg
clc
(bad)
clc
push
cdq
std
ret
mov
and
out
ins
pop
push
dec
cmp
jb
pop
sub
mov
std
and
outs
imul
sbb
push
sbb
add
cs
js
push
popf
ror
sub
das
and
cmp
test
fbld
xchg
and
xchg
push
arpl
rcl
sub
cmp
add
sti
dec
push
add
sbb
in
and
cmc
inc
retf
xchg
not
sbb
mov
es
and
stc
sbb
mov
test
movs
push
js
mov
pop
jg
outs
dec
outs
pop
pop
clc
add
mov
cs
dec
cmps
lahf
adc
rcl
shr
mov
push
push
fisub
mov
and
fstp
xor
or
cld
jp
push
das
mov
cmps
ins
cmove
inc
out
icebp
add
mov
fcomp
pop
jnp
arpl
sbb
ss
xor
pop
mov
ret
(bad)
mov
pop
loope
inc
inc
cli
call
mov
and
sbb
movs
dec
pop
out
cmps
inc
ins
addr16
mov
or
inc
enter
inc
into
test
lods
aad
pop
div
jle
sub
(bad)
mov
loope
(bad)
out
hlt
clc
in
cmp
lods
sahf
cmp
aad
outs
mov
lahf
(bad)
rcl
js
test
jno
sbb
loopne
ss
mov
xor
mov
jmp
mov
cmp
adc
aam
stos
hlt
push
ja
xor
pop
mov
or
fild
push
inc
xchg
mov
sbb
gs
fs
movs
xor
add
nop
lds
sbb
not
pop
xchg
int3
cmp
dec
xor
test
cmp
je
(bad)
sub
or
dec
dec
adc
xor
dec
pop
nop
push
lods
lock
cli
xlat
adc
inc
mov
std
bound
jns
popa
dec
stc
push
adc
dec
loop
jnp
sub
lods
sbb
fiadd
inc
dec
idiv
je
pop
push
mov
or
popf
movs
cdq
cmp
(bad)
jb
or
mov
jae
jnp
push
imul
pop
imul
mov
add
out
bound
fprem1
cmp
jne
lods
or
and
pop
aas
push
pop
mov
loope
movs
shr
jno
jl
enter
shl
stos
gs
lods
sub
pop
jbe
aam
pmaxub
pop
clc
movs
inc
ins
mov
into
cmp
shl
and
sub
dec
inc
ret
mov
xor
mov
sar
div
inc
cmc
pop
in
iret
mov
mov
and
push
mov
dec
push
cld
ja
out
les
js
iret
sub
loopne
nop
ret
push
and
test
shl
int3
sbb
(bad)
sub
or
or
aad
pop
into
push
add
sbb
jp
fcom
mov
test
mov
mov
(bad)
(bad)
mov
or
mov
xchg
jmp
inc
out
ins
sahf
cs
cs
call
movs
leave
add
mov
je
sub
shl
add
daa
add
mov
mov
sub
cmps
or
arpl
xchg
icebp
jg
(bad)
lea
xor
cwde
lea
xor
inc
jmp
shr
ja
dec
fst
add
mov
sbb
push
outs
add
(bad)
test
outs
add
stos
pop
push
lods
inc
jne
mov
mov
mov
cmp
sbb
and
xchg
shl
jmp
rcr
jb
imul
ds
std
or
scas
popf
sub
in
pop
sub
xlat
gs
rcl
cdq
pop
loopne
pop
sbb
dec
and
mov
fstp
mov
jge
popa
sbb
test
lea
call
xchg
adc
xor
fdivp
adc
or
mov
cmp
push
imul
aam
jg
enter
or
inc
dec
push
arpl
sub
push
icebp
repnz
cmc
(bad)
int
repnz
pushf
and
test
aad
mov
xchg
mov
clc
ja
cdq
cmp
mov
movs
das
sar
pop
sub
push
sbb
vpcomub
(bad)
xor
push
mov
and
and
out
sbb
arpl
stc
mov
push
push
icebp
fisubr
and
test
daa
push
jl
jecxz
sub
dec
pop
scas
dec
addr16
sbb
mov
mov
push
js
or
iret
popa
movs
outs
ret
and
ret
out
and
add
mov
pusha
dec
repnz
push
ja
and
cmps
push
mov
ds
xor
mov
pop
dec
pushf
cmp
fisubr
mov
fs
shl
cmp
cli
xlat
das
idiv
jmp
(bad)
cmc
imul
mov
stc
or
mov
or
es
mov
sub
mov
jns
stos
adc
scas
mov
mov
sahf
aas
retf
xor
xchg
add
lahf
and
sub
jo
jo
test
and
pop
push
cdq
xchg
mov
pop
or
stc
movs
jl
ss
jge
xchg
pop
rol
or
adc
pop
shl
mov
in
nop
ds
pop
adc
mov
pop
stos
cmp
ds
(bad)
call
repnz
aad
daa
mov
dec
sub
mov
jge
xor
out
sbb
mov
sar
push
mov
mov
test
mov
outs
loop
mov
or
inc
or
add
aas
push
mov
cmp
icebp
push
push
lahf
fimul
inc
fnsave
adc
rcr
aad
sti
div
jmp
mov
stos
push
nop
out
pushf
scas
sub
and
push
out
out
pusha
sub
inc
push
mov
xchg
cmc
xchg
test
je
xor
test
out
test
jle
mov
dec
add
xor
or
inc
and
ds
js
jl
jle
mov
push
rcr
js
retf
sbb
push
mov
jmp
sbb
sub
test
movs
fistp
jbe
jne
push
aas
idiv
pushf
cmc
jmp
push
push
xchg
call
cld
xchg
mov
ficomp
(bad)
mov
jl
int3
mov
push
loope
adc
jmp
inc
int3
movd
call
inc
aaa
stos
jb
lea
jb
dec
dec
sar
push
push
jp
cld
and
fmulp
out
shr
lock
jb
mov
sbb
mov
fild
xlat
inc
frstor
cmc
sar
fild
mov
lods
test
aaa
pop
popa
push
or
fs
(bad)
icebp
retf
mov
push
adc
mov
loop
inc
ins
cmc
cmp
push
xchg
(bad)
jb
mov
ja
pop
and
mov
test
sahf
and
jl
outs
dec
sbb
xchg
ss
(bad)
mov
mov
not
fisttp
(bad)
popf
or
mov
push
lods
icebp
(bad)
js
pop
or
lods
sbb
sub
iret
inc
es
sahf
xchg
adc
cld
inc
and
pop
mov
mov
in
loopne
inc
shl
fadd
mov
imul
mov
cmp
push
xchg
pop
into
aam
mov
add
add
xchg
scas
mov
jb
lods
fldcw
dec
add
adc
fmul
cwde
adc
cmp
(bad)
inc
push
repnz
jae
cmc
inc
push
(bad)
test
sti
pop
mov
and
test
fwait
pop
push
(bad)
add
xchg
int
movs
inc
loopne
push
into
fdivr
stos
and
sar
pop
rol
mov
cdq
(bad)
xor
loop
cdq
dec
sub
mov
fiadd
xchg
push
jg
loopne
jg
xor
lods
mov
ds
pop
dec
or
test
enter
stc
push
push
mov
xchg
jle
aaa
xchg
jp
push
stc
aad
pop
sub
push
mov
or
mov
aam
xchg
in
pop
sar
stos
(bad)
mov
mov
jnp
ins
cmps
aaa
pop
shl
mov
cs
fldenv
dec
push
(bad)
mov
inc
mov
lods
(bad)
repnz
pop
loope
jo
or
mov
pop
xchg
adc
xchg
imul
fsubr
pop
xor
inc
xlat
cmps
rcr
fwait
rcl
and
fmul
(bad)
aam
mov
cdq
jmp
mov
data16
jne
adc
ss
jle
cmp
es
jne
sub
loope
cs
cmp
mov
sub
mov
xchg
or
out
fdiv
lds
push
test
into
push
test
out
imul
es
test
in
adc
jmp
fisttp
or
push
sub
cmc
sub
dec
and
out
dec
and
adc
loop
out
nop
ja
cli
sti
out
lds
jo
test
gs
retf
hlt
mov
call
or
xchg
stc
lods
iret
stos
pusha
dec
mov
imul
or
inc
in
sbb
loope
sbb
add
adc
dec
nop
add
ins
mov
iret
idiv
mov
mov
iret
push
mov
sti
dec
and
(bad)
sbb
clc
aad
nop
cmp
push
test
pop
scas
call
push
ins
and
loope
dec
push
fwait
in
(bad)
cld
(bad)
and
adc
xchg
pop
pop
or
mov
pop
les
lock
cwde
mov
sbb
inc
sbb
enter
xor
mov
adc
sti
lock
mov
push
xor
sbb
int3
mov
sbb
sbb
jae
not
cmp
mov
call
mov
inc
ja
and
pop
and
outs
push
jb
arpl
ret
mov
cmc
push
lea
stc
hlt
cmp
pop
iret
(bad)
jbe
inc
add
out
lock
cmp
lea
fcomi
xchg
mov
adc
pop
(bad)
outs
mov
fcom
push
js
jle
push
lea
adc
inc
and
cmp
in
jmp
daa
fmul
stc
cmp
cld
out
adc
rcl
ficom
retf
cli
adc
scas
xlat
mov
add
loope
ret
and
mov
xor
cmp
addr16
sub
leave
mov
mov
out
call
mov
fistp
cmp
ret
and
aas
cmp
(bad)
mov
sub
test
push
push
xchg
das
cmc
retf
push
and
das
ins
das
mov
std
mov
xor
jo
outs
dec
dec
sub
dec
mov
clc
bound
cs
rol
js
xchg
lahf
sub
mov
pushf
popf
arpl
dec
outs
repz
mov
int
mov
sbb
xchg
call
ins
scas
sti
or
sahf
cmps
test
push
and
lea
aaa
adc
test
xchg
mov
sbb
stos
ret
add
lahf
jne
jnp
sbb
out
iret
ret
mov
mov
push
ret
aas
fadd
xchg
xchg
pop
push
ins
cwde
dec
nop
and
jno
mov
(bad)
cmp
repz
imul
pushf
or
xchg
imul
jb
addr16
jmp
mov
cmps
mov
rcr
(bad)
pop
add
stos
in
sub
daa
inc
and
inc
pop
pop
scas
pop
jno
sub
gs
adc
(bad)
pop
int
mov
or
je
xchg
lahf
and
and
(bad)
fisttp
test
cmc
dec
jecxz
adc
dec
iret
inc
dec
cmps
adc
jecxz
cmp
push
outs
inc
jno
loopne
in
frstor
sub
int3
cmp
leave
fmul
xor
ret
out
sub
clc
sahf
retf
sub
adc
adc
pop
lahf
test
xchg
lds
pop
mov
mov
mov
int
inc
retf
je
jbe
cs
mov
cmp
dec
push
nop
(bad)
enter
icebp
out
les
adc
and
(bad)
xchg
mov
inc
fiadd
mov
call
sbb
pop
cld
xor
ins
xchg
icebp
lock
push
popf
fsub
cs
xchg
in
int
jle
adc
push
cdq
sub
(bad)
sbb
out
cmp
inc
mov
xor
add
or
ret
xchg
ins
mov
das
pop
pop
popf
sub
ret
inc
ins
cs
ins
cmc
es
mov
scas
data16
push
jae
cmps
add
lahf
add
hlt
aaa
jecxz
(bad)
out
outs
shl
sbb
and
ins
mov
jg
add
jge
das
add
cmp
in
movs
cmps
fild
mov
sub
sbb
adc
inc
std
jo
adc
mov
add
out
retf
and
cdq
mov
mov
mov
fs
ja
pusha
jl
pusha
hlt
pop
shl
lds
push
aam
or
movs
mov
xchg
in
push
cmc
cld
mov
lds
xor
pop
pop
or
fisub
inc
mov
in
sar
adc
and
jge
sub
or
(bad)
test
int3
add
gs
scas
or
dec
push
addr16
cmp
or
adc
pop
dec
mov
jp
leave
mov
pop
jno
test
lea
les
pop
clc
je
int
imul
dec
sub
push
ret
ins
int3
jge
sti
into
mov
sbb
jne
in
and
jae
stos
out
mov
cmp
lods
dec
mov
push
mov
adc
ins
test
cmps
inc
repz
jb
sub
inc
jns
stc
cmp
push
test
imul
test
int
data16
add
push
xchg
add
sub
out
pop
(bad)
push
addr16
push
push
ds
pop
cvtdq2ps
dec
sbb
outs
clc
mov
add
ss
sahf
clc
cli
mov
mov
and
adc
ja
icebp
rcr
lock
jmp
(bad)
xchg
jl
xor
inc
sub
ret
lea
js
outs
xor
stos
fistp
cdq
into
hlt
jne
cmps
and
pop
fldenv
stos
mov
add
hlt
dec
int
das
mov
nop
push
add
fcom
or
jno
call
nop
outs
sub
push
xor
nop
add
dec
popa
xchg
dec
dec
xor
jmp
sub
pusha
mov
jns
adc
mov
and
cmc
xor
aaa
xor
aad
xchg
fwait
mov
es
xor
jo
inc
fiadd
xchg
sub
cwde
mov
scas
pop
xchg
fcom
sbb
or
pop
scas
ds
lea
and
add
gs
push
(bad)
cli
fist
push
loope
inc
xor
jo
cmp
fidivr
retf
jno
pop
outs
xchg
sub
pushf
sub
mov
adc
cmp
out
sti
aam
loopne
js
mov
or
xchg
jne
lods
inc
or
out
and
mov
in
(bad)
outs
dec
in
xchg
xchg
adc
sbb
dec
mov
adc
in
nop
xchg
adc
inc
adc
push
dec
push
cli
xor
xchg
xor
dec
jb
inc
xor
inc
lods
xchg
xchg
sub
mov
cmp
dec
shl
pop
psubd
mov
loopne
in
(bad)
outs
jo
add
xlat
stc
cdq
hlt
retf
pop
xor
xchg
adc
icebp
cmp
mov
cdq
imul
rol
jo
inc
mov
xchg
clc
dec
sub
mov
(bad)
pop
fidivr
test
jmp
popa
rol
stos
adc
lea
das
imul
pop
sbb
popf
inc
adc
sti
xchg
jge
(bad)
pop
mov
push
fs
mov
pop
or
mov
push
call
cdq
inc
mov
in
mov
push
jecxz
sub
cmps
mov
xor
mov
inc
jae
ret
xchg
rol
or
fisttp
add
ds
or
mov
je
rol
mov
inc
dec
pop
add
sbb
pop
gs
add
inc
cmp
repz
jns
xor
imul
(bad)
cmps
push
jo
inc
and
imul
jle
sbb
xchg
pushf
pop
cmp
mov
test
mov
adc
adc
dec
or
mov
pop
fisttp
and
popf
xchg
das
ret
cmp
lea
fisttp
or
jbe
rcr
fsubr
xor
jecxz
inc
xor
sub
xchg
test
jmp
pop
adc
es
lds
push
mov
retf
dec
mov
test
mov
lock
movs
mov
add
sub
jnp
mov
call
clc
push
aad
adc
xor
xor
call
dec
test
pop
dec
push
imul
std
inc
in
jae
inc
push
push
fdiv
mov
jmp
push
les
fnop
inc
mov
xchg
call
cld
mov
and
dec
int
xor
in
xchg
adc
addr16
mov
ss
into
jle
enter
icebp
cmps
mov
jne
ss
pop
rcl
jne
mov
arpl
fwait
in
pop
sub
test
push
pop
add
jecxz
xor
or
xchg
or
sub
adc
scas
and
push
les
scas
fst
test
cmps
jge
inc
sub
and
or
mov
push
fs
xchg
stc
je
mov
mov
inc
sub
pushw
adc
outs
rol
(bad)
and
scas
xchg
std
pop
inc
test
imul
inc
pop
cmp
fs
sub
popa
and
js
pop
retf
pop
pop
xlat
mov
aam
pop
lock
arpl
movs
jnp
sbb
shl
dec
dec
push
popw
sub
fadd
adc
nop
hlt
aad
mov
inc
scas
mov
jb
and
outs
sub
in
repnz
xor
pop
aad
xlat
(bad)
or
push
xchg
repnz
adc
sbb
mov
scas
lea
or
bnd
fldcw
popf
add
int3
mov
dec
iret
cdq
ja
mov
rol
retf
push
iret
lods
aam
jne
gs
mov
(bad)
jle
push
pop
mov
dec
push
stc
lods
ror
jno
pop
push
jecxz
push
scas
in
hlt
movs
jp
(bad)
push
scas
or
mov
jle
jns
and
xchg
sub
js
clc
test
psubusw
xor
or
cmc
lods
cmp
inc
rcr
push
jns
add
ja
je
pop
cdq
sahf
adc
inc
mov
mov
shl
retf
pusha
add
push
dec
jg
cmp
adc
push
push
enter
enter
mov
jnp
loop
xor
cld
add
test
add
mov
adc
arpl
gs
cld
push
add
mov
lea
sbb
loop
mov
fistp
push
into
inc
xchg
dec
jp
jmp
cld
clc
mov
pop
sti
ret
stos
inc
(bad)
cdq
sbb
fs
sbb
push
adc
push
jp
pop
xlat
test
sub
cwde
pop
jae
fld
xchg
jae
das
dec
rcr
lahf
pusha
int3
loop
outs
icebp
rcl
or
and
bound
fcmovu
movs
repz
pop
push
test
push
dec
or
push
dec
mov
pop
jo
mov
dec
xchg
shr
jns
aaa
jae
fs
out
bound
cmps
movs
or
std
or
xchg
inc
movs
daa
jnp
sar
(bad)
stc
mov
loop
push
or
ret
inc
iret
jg
fwait
jmp
sub
pop
jne
lea
div
xor
(bad)
enter
dec
jno
sub
or
jge
sbb
dec
sub
les
enter
mov
leave
mov
xor
movs
fisub
out
arpl
ds
pop
(bad)
in
fcomp
xchg
inc
jg
out
out
or
mov
dec
dec
jbe
imul
or
(bad)
adc
scas
loopne
mov
push
shl
adc
and
retf
scas
sar
pop
ins
mov
or
push
fcom
sub
(bad)
sbb
dec
ror
sub
out
popf
push
jecxz
jge
shl
icebp
sub
mov
outs
xor
daa
out
fcmovnbe
sbb
shl
xor
mov
fstp
nop
xor
pop
lods
ins
ja
mov
mov
lahf
mov
cli
dec
xor
mov
xor
iret
ficom
das
and
push
das
or
and
cs
addr16
push
dec
retf
ret
jbe
popf
stos
ret
mov
dec
pop
dec
inc
add
dec
and
aaa
cli
repnz
(bad)
out
mov
jbe
fiadd
inc
xor
and
xchg
pop
push
loopne
arpl
mov
test
jne
xchg
outs
int
sub
adc
loope
repz
das
sub
push
icebp
pop
sbb
jno
es
jp
outs
daa
and
sub
pop
aam
add
mov
loop
out
(bad)
ficom
popf
cwde
xor
daa
leave
aad
sbb
adc
lods
ss
rcr
in
mov
jg
out
out
or
xor
mov
lods
jae
fld
call
rol
xchg
call
adc
inc
dec
add
inc
sub
pop
aas
push
rcl
in
call
scas
xchg
or
cmp
out
jno
sub
add
pop
jbe
lds
dec
jp
sub
sbb
xchg
ja
mov
arpl
outs
rol
mov
imul
sub
dec
sbb
pusha
dec
fs
pop
fld
adc
adc
out
call
mov
dec
cmp
and
add
mov
xor
add
or
pavgb
js
or
mov
adc
mov
xchg
lahf
fistp
(bad)
jmp
lds
xchg
pop
and
inc
sub
test
jmp
dec
rcl
sbb
dec
icebp
xchg
cmp
mov
jmp
dec
rol
outs
mov
jno
cmp
add
adc
xchg
sbb
int
aad
into
cmp
(bad)
or
cmp
in
push
(bad)
push
std
xor
mov
add
or
adc
dec
mov
mov
sub
repz
mov
cmc
les
xchg
call
sub
cmp
fdivr
int3
push
out
inc
fmul
mov
mov
bound
dec
in
aam
xchg
arpl
pop
lock
and
jns
mov
repnz
fadd
cmp
retf
inc
xor
je
add
mov
mov
xchg
(bad)
lods
lods
push
push
out
inc
dec
fdiv
push
inc
jmp
cmc
mov
push
sbb
pop
movs
sub
sbb
and
sub
dec
ss
mov
shr
pop
pop
pop
shr
loope
sub
int
nop
add
add
mov
mov
push
popf
push
dec
(bad)
cdq
aaa
pop
add
arpl
jno
(bad)
mov
fiadd
retf
cdq
cmp
dec
ds
cmp
imul
and
push
mov
retf
ret
dec
ret
fwait
dec
fdiv
or
jb
test
fwait
(bad)
push
and
mov
repnz
mov
xchg
dec
jae
inc
mov
cmc
aaa
(bad)
fmul
jge
or
mov
(bad)
dec
xor
inc
pop
adc
leave
in
jnp
push
in
ror
lods
test
imul
mov
(bad)
inc
out
cwde
test
rcr
repnz
or
and
imul
push
adc
cmp
mov
fcomp
push
sub
sbb
fwait
call
stos
dec
setb
dec
lea
idiv
mov
ins
jg
mov
inc
(bad)
aad
mov
and
pop
xchg
add
lahf
jns
and
out
mov
imul
ins
mov
mov
xchg
sub
in
retf
sub
add
retf
cmp
inc
push
pop
(bad)
ja
int
pop
adc
mov
push
jno
(bad)
imul
jp
stc
retf
stos
mov
add
test
push
fsubr
lock
adc
ret
shl
and
pop
fisub
rcr
inc
(bad)
mov
mov
jl
in
mov
mov
pop
cmp
stc
mov
inc
jne
inc
xchg
das
mov
jnp
dec
cmp
addr16
adc
addr16
pop
or
shl
lahf
test
xor
in
push
pop
sbb
and
dec
xchg
jne
(bad)
add
fimul
mov
popa
cmps
clc
int3
mov
mov
pop
pop
sbb
xor
js
push
loope
dec
rol
loope
test
js
push
sbb
pop
or
adc
sub
ficomp
inc
das
or
xchg
and
inc
dec
inc
ins
sahf
mov
mov
sbb
loop
mov
push
sbb
in
jecxz
xchg
mov
inc
fbstp
mov
add
inc
mov
adc
pop
addr16
inc
jbe
out
mov
inc
hlt
loop
cs
repz
or
jge
jge
pop
sub
and
cs
ret
in
dec
dec
adc
inc
push
bound
hlt
or
and
push
mov
dec
popf
popf
push
icebp
ror
mov
mov
xor
int3
lock
movs
hlt
xor
xor
xchg
inc
inc
icebp
adc
xor
fninit
loope
addr16
push
and
loope
push
fidivr
jno
jne
pop
xor
lods
mov
jns
cmp
push
push
lea
repz
stos
scas
and
mov
ja
lods
repnz
cwde
jo
test
jmp
cmp
loop
jge
pop
pop
aad
and
fimul
call
mov
ret
jge
aaa
inc
in
xor
jae
cld
aam
inc
pop
sbb
pop
ret
add
push
xchg
or
sub
mov
mov
shl
inc
lea
cli
frstor
test
in
adc
pop
xchg
cmps
ror
bound
xchg
fmul
fs
lahf
cmp
pop
xor
fwait
add
ffreep
jae
scas
dec
jmp
jmp
and
hlt
jge
shl
push
aas
dec
test
xlat
cli
sub
sub
neg
xchg
add
pop
xchg
fld
jns
nop
mov
cmp
stos
dec
mov
xchg
jmp
xor
pmaxub
bound
ret
inc
and
mov
imul
(bad)
mov
das
xchg
pop
dec
fs
add
ss
inc
mov
mov
je
and
sub
sub
fidiv
lods
mov
shr
in
into
sub
dec
cmp
fsubr
xor
push
(bad)
scas
jp
mov
jge
ins
or
push
fsub
jmp
(bad)
cwde
xor
jl
popa
icebp
sbb
mov
cdq
sbb
dec
pop
cli
inc
mov
fistp
cmps
movs
sti
mov
or
lds
iret
dec
cmovne
jge
aad
pop
aad
movs
mov
jp
jbe
cmps
or
ins
sub
mov
mov
jp
xor
or
mov
adc
mov
jns
movs
icebp
mov
cwde
dec
jp
jecxz
lea
fild
and
xchg
(bad)
aaa
xlat
adc
jbe
xchg
cld
int
xor
sbb
icebp
dec
mov
adc
pop
dec
es
clc
xor
and
xchg
dec
imul
sub
adc
call
sti
sbb
pop
mov
addr16
push
jg
push
pop
mov
jbe
mov
adc
mov
push
stos
cmp
jne
jmp
and
ins
cmp
fmul
xor
sbb
shl
pop
sar
adc
sbb
push
and
out
dec
xchg
xchg
out
repnz
hlt
mov
mov
push
inc
imul
std
pop
aas
fbstp
cli
sub
mov
sub
repnz
test
test
int3
sub
fistp
out
cs
not
repz
popf
movs
sub
icebp
movs
call
sar
fwait
ins
aam
hlt
inc
daa
fwait
add
pop
pop
cdq
jge
es
mov
sub
xchg
inc
test
in
popa
push
jecxz
mov
pusha
mov
aaa
aaa
loope
sub
sbb
jle
mov
mov
retf
call
cmp
jle
cmp
shl
in
shl
xchg
movs
fcomp
mov
call
out
dec
pushf
sub
xchg
mov
jo
add
push
rcr
sbb
scas
call
popa
xor
lods
or
fiadd
xor
xor
push
dec
iret
adc
out
arpl
clc
aam
out
popf
fbstp
mov
jmp
mov
mov
aad
inc
xlat
fimul
test
jbe
push
int
cdq
xchg
xchg
xchg
leave
jmp
fld
loop
fld
add
rcl
xor
jo
push
bound
out
lds
xchg
add
jecxz
mov
mov
mov
fadd
push
stos
mov
xlat
bound
xchg
jbe
sbb
mov
mov
or
fs
jb
fs
cmps
and
push
dec
dec
push
cmc
out
bound
movs
cmps
(bad)
cmp
xor
xor
sub
mov
adc
inc
dec
mov
fisubr
push
sub
cmp
sub
adc
mov
ror
js
mov
mov
sahf
scas
popa
loopne
cld
mov
in
retf
fisub
mov
adc
dec
jmp
add
nop
xor
ss
push
push
fist
aam
mov
cmc
push
pop
xor
mov
xor
add
push
sub
loopne
sar
sub
jmp
repnz
aam
push
jge
dec
lahf
pop
fwait
in
mov
add
adc
fnstcw
daa
jmp
adc
pop
add
inc
add
mov
pusha
xchg
xchg
jb
push
push
stc
lods
iret
pop
addr16
ds
dec
mov
dec
lds
sub
mov
out
xor
sbb
mov
popa
mov
dec
xchg
cmp
or
fmul
ins
inc
mov
xor
add
pop
jnp
call
and
mov
add
mov
call
xchg
loope
inc
jno
dec
push
shr
push
jmp
mov
or
sub
pusha
cdq
loope
push
mov
scas
inc
xchg
push
fnstenv
cmps
out
das
loopne
add
push
jp
mov
dec
(bad)
mov
sbb
in
pop
call
dec
rol
lds
addr16
or
jmp
mov
ret
jbe
pusha
xchg
sbb
inc
shl
shl
xchg
imul
dec
hlt
add
mov
fisub
xchg
push
aad
or
pushf
mov
jno
int
jp
push
pop
sub
mov
xchg
and
xor
jl
push
in
inc
or
cmp
jne
fidiv
push
aam
enter
mov
jne
cli
add
data16
test
loop
lods
imul
test
adc
movs
dec
or
inc
xchg
out
sub
lods
push
xor
bound
ror
ds
cmp
aad
jle
cmp
repnz
into
aad
(bad)
pop
loop
or
out
das
adc
aaa
sub
cmp
repz
aas
sysenter
or
lds
adc
(bad)
sub
add
test
aas
rcr
clc
add
xor
addr16
scas
xchg
(bad)
stos
ret
gs
push
mov
dec
mov
addr16
push
inc
(bad)
stc
push
mov
test
test
repz
daa
cld
cld
sub
sbb
in
in
ret
xchg
vpunpckhbw
push
mov
cdq
int3
fiadd
rcr
mov
popf
xor
shl
xchg
loope
mov
jmp
repnz
xor
mov
pop
outs
jle
sub
mov
xor
test
mov
jne
in
punpckhbw
sub
push
xchg
mov
call
int3
fwait
pusha
mov
mov
pop
pop
(bad)
stos
leave
ins
bound
sar
fisubr
loope
enter
xor
mov
adc
mov
in
outs
pop
retf
pushf
ror
jmp
popf
adc
out
inc
dec
stos
mov
sub
sbb
leave
fistp
mov
test
jb
xchg
cmps
call
jecxz
or
addr16
ret
and
repz
xchg
or
mov
lods
outs
or
outs
sub
mov
mov
sub
mov
test
aam
aam
or
rcr
div
std
std
mov
pop
or
call
jns
test
es
movs
mov
fsub
aaa
rcl
aad
push
pusha
aam
lahf
hlt
fucomi
gs
cdq
loopne
sub
add
std
hlt
sub
(bad)
push
push
xor
cmps
and
cmp
call
or
in
pop
icebp
push
xchg
jmp
mov
push
mov
push
jg
data16
sbb
pop
inc
and
nop
ds
sti
in
fimul
mov
sub
jnp
out
pushf
test
(bad)
ds
icebp
mov
xor
jno
adc
leave
mov
mov
loop
retf
cmp
adc
movs
push
pushf
xor
bnd
leave
jle
stos
add
xchg
sbb
scas
mov
push
cmp
es
xor
js
daa
xchg
jns
test
int3
pop
pop
and
fild
test
sbb
or
xchg
rcr
(bad)
xor
aaa
mov
mov
jmp
adc
inc
int3
in
cli
call
ja
aad
(bad)
call
cdq
stos
fimul
jmp
stos
adc
mov
cld
cwde
pop
test
clc
adc
aaa
sub
movs
out
sub
xchg
or
mov
outs
push
xor
icebp
add
dec
mov
jae
std
mov
out
and
jnp
and
push
and
dec
loope
jmp
mov
sub
mov
sbb
shl
jmp
stos
fldcw
pushf
shl
loop
sar
xor
stos
daa
cli
dec
in
xchg
int3
xchg
lea
ins
nop
mov
adc
jnp
mov
dec
inc
pop
jl
outs
and
and
fild
std
test
or
mov
xchg
pop
aaa
mov
sub
mov
out
stc
xchg
daa
test
jae
sub
gs
and
pop
in
push
mov
push
sub
pop
lods
arpl
inc
add
jbe
ret
clc
jmp
(bad)
and
mov
ficomp
xlat
lock
inc
stc
and
pop
sahf
xor
adc
fwait
lahf
sbb
std
addr16
call
(bad)
mov
aas
and
adc
fimul
loope
xchg
pop
xchg
cmp
push
sbb
call
dec
ss
(bad)
jl
leave
adc
aam
mov
adc
stos
and
scas
xchg
ror
sar
mov
mov
mov
lock
cmc
pushf
jns
and
mov
mov
test
das
ret
std
dec
shl
push
mov
arpl
push
fs
push
jne
fs
jl
lock
bound
inc
cmps
inc
inc
movs
lods
pop
pop
mov
push
fcomi
in
push
fsubr
and
xor
dec
in
dec
xchg
mov
enter
inc
sbb
mov
mov
pop
hlt
sbb
and
pop
add
mov
cmp
inc
add
cli
arpl
repz
pop
dec
jecxz
xchg
call
pusha
dec
mov
lahf
add
je
arpl
mov
inc
loopne
adc
ficomp
test
push
retf
add
fstp
jecxz
pop
rcr
cs
pop
cmp
and
xchg
sbb
pop
int3
cmp
xor
push
push
xor
les
cmp
and
jns
push
and
mov
push
loopne
outs
cmp
into
adc
dec
push
sbb
jecxz
in
xor
shr
(bad)
and
and
adc
or
pop
cmp
mov
loopne
das
dec
stos
and
in
or
dec
and
mov
xchg
int3
popa
cmc
pop
outs
out
xchg
out
popa
loopne
mov
out
push
pop
jecxz
push
or
adc
fidiv
aaa
pop
nop
das
lods
loopne
xor
cmps
xor
mov
stc
push
jmp
xor
inc
stc
sbb
cmps
sbb
iret
dec
aam
sti
aaa
cmps
inc
pop
movs
or
mov
xor
fidivr
(bad)
fistp
popf
mov
aas
xor
sbb
dec
test
pop
out
pop
xor
cmp
sahf
test
push
or
jno
sub
sar
shr
jae
push
sub
lods
dec
jbe
jl
stos
sbb
dec
nop
jns
fistp
hlt
pusha
mov
cmp
sbb
mov
jno
out
sbb
fisub
jbe
cld
mov
ret
addr16
add
data16
in
les
add
push
cmp
imul
cmps
daa
outs
mov
mov
(bad)
pop
mov
sti
std
add
xchg
outs
sub
(bad)
sbb
adc
or
inc
dec
sbb
pop
ds
(bad)
rol
enter
jae
rol
ffreep
jmp
lahf
lahf
adc
jmp
jle
popa
mov
pushf
retf
adc
popa
retf
inc
push
adc
sub
ss
push
mov
adc
mov
dec
push
push
mov
enter
and
imul
retf
call
dec
arpl
mov
ins
int
adc
pop
adc
cmp
pop
rol
scas
repz
std
arpl
jo
lods
pop
mov
xor
dec
pop
or
dec
pop
(bad)
jmp
pop
pop
(bad)
pushf
mov
mov
adc
test
push
xchg
test
jns
mov
xlat
and
mov
and
repz
or
lock
pop
fisub
jo
mov
in
sub
jp
sbb
sub
or
push
or
jl
les
movs
lods
lods
jnp
sbb
dec
adc
popf
ss
push
adc
cmp
cmp
xor
cwde
cmp
jge
movs
mov
and
fwait
fs
push
mov
dec
add
ins
cmps
rcr
aaa
push
inc
mov
dec
sub
pop
push
xchg
jbe
inc
push
es
xchg
scas
lea
mov
xchg
mov
or
cmps
ret
int
and
and
mov
push
xchg
mov
lods
scas
sub
int
call
push
sbb
mov
aas
arpl
pop
sbb
mov
or
mov
mov
ror
neg
stos
or
dec
gs
and
sbb
sahf
mov
les
xor
sbb
jae
mov
mov
mov
aas
lahf
sub
jmp
aaa
es
aam
sbb
xor
xchg
push
sub
and
(bad)
repz
(bad)
rcr
ins
mov
cld
xlat
xchg
fldcw
aaa
push
cmp
push
dec
not
vxorps
mov
lea
pop
or
(bad)
xor
fisub
or
and
pop
sub
std
cmp
or
bound
lahf
cs
repnz
xlat
popa
pop
mov
jecxz
fiadd
popf
out
jb
cmp
pop
mov
jnp
mov
jmp
mov
lock
add
aas
mov
dec
(bad)
adc
imul
inc
cwde
xchg
addr16
mul
xchg
adc
idiv
ret
xor
add
pop
and
neg
test
fist
sbb
pop
mov
stos
adc
les
mov
aas
cmp
mov
clc
loopne
add
fs
jmp
or
inc
mov
pop
cwde
jg
xor
fst
fmul
pop
movs
pop
adc
clc
and
mov
inc
adc
inc
das
cmp
retf
popa
pop
in
scas
test
sti
mov
ja
jle
cmp
jmp
add
xor
mov
retf
ds
push
repnz
fdiv
mov
shr
push
jnp
ins
xor
movs
repz
xchg
adc
cmp
icebp
out
mov
or
sub
mov
(bad)
cmc
loopne
(bad)
sbb
xchg
fwait
mov
add
mov
aas
fstp
ja
xchg
and
ins
xchg
cmp
jecxz
xadd
push
mov
loop
xchg
or
inc
cwde
jns
mov
mov
movs
test
(bad)
or
inc
pop
in
cwde
sbb
pop
push
and
push
jo
push
loope
mov
shl
lahf
in
gs
sbb
xor
loope
jl
fwait
(bad)
jmp
retf
je
lds
cmp
(bad)
or
(bad)
test
(bad)
jle
inc
dec
adc
imul
aaa
(bad)
fwait
inc
dec
fs
cwde
outs
adc
push
sbb
push
or
int3
jle
call
dec
ret
movs
enter
adc
add
lock
inc
imul
je
xchg
popa
mov
stos
je
retf
push
ins
cmp
cdq
clc
inc
ror
jo
out
mov
and
ins
pusha
rcl
cdq
(bad)
adc
shr
or
jne
fadd
loop
ins
cmp
pop
fadd
bound
mov
fstp
add
sub
jecxz
or
ins
(bad)
jp
sub
(bad)
ror
dec
inc
sti
fwait
mov
rol
push
mov
aad
or
push
jnp
jb
xchg
daa
call
xchg
mov
pop
and
cs
fsub
sahf
movs
arpl
in
es
jno
call
xchg
je
sub
cmps
add
shr
xor
aad
popa
rcr
into
ret
mov
dec
rcl
pop
out
jno
jl
aaa
ret
adc
inc
adc
stos
sar
jmp
or
push
div
sbb
and
in
lock
jp
lods
add
nop
jnp
push
gs
pop
repz
shl
jno
cmp
aaa
out
sbb
maxps
fild
stos
shl
stc
pop
in
dec
jae
cmp
aas
bound
movs
jno
in
imul
aad
xchg
js
pop
cwde
jge
out
pop
mov
push
push
jg
(bad)
int3
fidiv
cmps
pminsw
pop
xchg
je
inc
(bad)
and
mov
or
pop
and
retf
jo
sub
dec
jo
mov
movq
mov
mov
fsubr
imul
out
lock
and
cmps
and
std
mov
retf
lds
cmp
jo
test
adc
(bad)
xor
xchg
mov
addr16
aam
xchg
fbld
es
cld
mov
scas
popa
pusha
sbb
jle
inc
sbb
xchg
jo
pop
shr
pop
xchg
cld
stc
and
add
dec
sbb
int
cmps
cli
je
fwait
mov
out
mov
aaa
mov
popa
fs
and
jnp
jae
loopne
cmp
sar
ret
dec
int3
aam
add
jnp
mov
sub
sub
sbb
jle
inc
push
mov
cmp
adc
add
mov
cdq
fmul
out
outs
les
mov
stos
pop
xchg
mov
enter
(bad)
lods
push
adc
ret
hlt
stos
xchg
movs
sbb
xlat
xchg
jp
(bad)
popf
in
jmp
lods
daa
jbe
adc
movs
jecxz
aad
add
cmp
fs
shl
stos
xor
inc
in
out
push
(bad)
fs
xchg
mov
test
movs
sbb
jnp
jnp
mov
sbb
dec
call
out
jnp
pop
mov
push
mov
sub
imul
or
dec
dec
pop
adc
mov
xchg
enter
add
das
dec
pop
or
pop
aas
xchg
movs
es
mov
and
mov
dec
jbe
das
inc
popa
lock
aas
or
int3
cwde
test
loop
cwde
jg
dec
push
or
and
and
xor
imul
out
adc
add
imul
invd
push
pop
mov
mov
xchg
cmp
sar
outs
(bad)
stos
inc
dec
adc
bswap
and
xchg
pop
inc
push
jb
lds
jnp
lods
cmps
test
sar
push
fst
pop
pop
add
bswap
cmp
out
pop
les
jl
pop
and
jecxz
enter
(bad)
stos
ss
jp
jle
retf
jmp
jo
cmp
lahf
jp
loope
cmc
rcl
or
push
je
or
jecxz
pushf
mov
push
pop
push
bound
hlt
or
push
xchg
adc
cmps
bound
add
retf
scas
shl
mov
jno
xchg
and
mov
std
ret
jecxz
rcl
mov
dec
aam
lods
(bad)
xchg
cmps
mov
jmp
sbb
jns
or
enter
div
sub
inc
mov
in
cs
inc
imul
dec
mov
mov
adc
or
fxch
pop
xchg
push
fmulp
lods
in
mov
xor
mov
daa
add
jo
jmp
pop
aam
imul
cmp
fcmovnu
fstp
ins
data16
xor
stos
push
add
in
mov
ins
shr
jmp
push
aad
lods
mov
int
or
xor
pushf
jne
mov
or
adc
test
jne
xchg
or
mov
ret
add
jmp
outs
jae
jl
jl
jmp
jne
cmp
jmp
dec
mov
ret
scas
imul
sbb
(bad)
ss
int
movs
jmp
dec
stos
cmc
and
in
push
sub
jnp
pop
dec
push
pop
cmp
or
clc
ja
dec
adc
sub
adc
push
les
push
fisttp
outs
stos
bound
pop
adc
mov
out
ja
push
jnp
cmove
xchg
fcomip
out
xchg
popa
sbb
or
dec
or
or
or
(bad)
cmp
xchg
ror
ss
cdq
data16
iret
inc
ds
mov
mov
popa
cmp
cmp
pop
repnz
loop
scas
ja
scas
jge
pop
(bad)
mov
dec
cmc
mov
mov
push
test
mov
mov
inc
call
neg
dec
push
(bad)
ds
or
push
movs
mov
inc
fstp
pop
ss
lock
or
inc
xchg
sbb
jecxz
mov
outs
rcl
mov
and
cs
sub
stc
adc
dec
or
pop
(bad)
cli
pop
into
mov
and
push
out
sbb
popa
movhps
retf
push
pop
sahf
aam
fldcw
cli
lods
sbb
test
in
mov
push
outs
es
aaa
test
add
adc
cmp
(bad)
xchg
xor
lods
jne
add
cwde
xor
fstp
out
jno
push
inc
stos
arpl
sbb
xor
enter
cmc
or
jbe
setg
fdiv
mov
js
pop
imul
fs
mov
lods
pushf
cmp
inc
cmp
mov
out
mov
xchg
daa
add
out
xchg
and
stos
shl
sar
mov
mov
ja
popf
adc
in
call
pop
sub
aas
sbb
cmp
sub
xor
retf
rcr
adc
dec
mov
jns
in
lahf
mov
pusha
mov
sub
mov
or
push
mov
dec
iret
mov
aaa
sti
(bad)
js
dec
les
push
mov
pop
push
out
ins
jle
xor
cmp
add
repnz
or
sar
rol
adc
jmp
pop
jmp
sub
(bad)
out
and
cli
cmp
mov
pop
test
cmp
xchg
inc
sar
xor
sub
cmps
mov
xchg
div
ds
xchg
aas
adc
inc
sbb
aam
icebp
cmc
jnp
cmp
mov
pop
mov
xor
lahf
add
and
sub
adc
pop
cdq
aam
shl
std
sbb
mov
mov
or
xor
imul
or
out
dec
and
mov
push
cdq
mov
les
js
fistp
retf
xor
cmp
push
jle
imul
ret
test
std
iret
jnp
out
stos
jns
je
fst
test
add
mov
pop
div
sub
ror
imul
mov
mov
cmc
sub
xchg
mov
mov
in
in
add
add
sbb
loope
cs
sar
lock
mov
and
mov
mov
or
stos
pushf
mov
(bad)
jb
nop
push
mov
lods
cmp
mov
int
pop
ins
pop
scas
sub
movzx
jp
inc
push
scas
adc
lahf
mov
cmp
inc
(bad)
mov
and
mov
mov
cmp
and
or
push
inc
shr
sub
mov
pop
push
sub
jns
rol
sbb
sub
xor
fs
push
in
add
lds
inc
aad
ret
mov
cli
or
sbb
pop
rol
mov
xor
arpl
sub
scas
xchg
(bad)
jae
xchg
xchg
sub
repz
or
inc
int3
stc
add
ret
aad
lock
cmp
pop
ins
loope
push
pop
test
jnp
lock
cmp
scas
into
pop
inc
pop
mov
cmp
int3
(bad)
dec
mov
jo
bound
fld
mov
push
call
pop
stos
xor
dec
adc
inc
dec
imul
imul
lea
leave
sbb
rcl
push
mov
xchg
add
dec
push
xor
pop
cmp
out
rol
cdq
pusha
inc
mov
jle
mov
sti
fstp
cmp
or
mov
inc
pop
jne
aam
xchg
and
movs
jbe
aam
inc
mov
mov
mov
pop
ror
sub
pop
lods
scas
sub
mov
sbb
pop
fwait
and
adc
enter
push
mov
ds
(bad)
ss
xchg
inc
out
fwait
retf
lea
out
pop
sub
jmp
mov
retf
ja
add
lock
and
or
loope
and
xchg
imul
retf
pop
mov
rcl
or
push
mov
mov
mov
inc
jno
mov
or
test
neg
popa
cdq
add
mov
fisub
out
popa
ficom
adc
pop
imul
jnp
xchg
pop
nop
dec
pushf
sub
lahf
jmp
(bad)
aas
cmps
ret
cmps
fs
adc
out
add
dec
arpl
xchg
mov
loope
pop
mov
enter
xor
mov
ds
mov
lock
mov
out
mov
add
les
or
mov
pop
hlt
aam
mov
or
je
das
mov
mov
jno
sbb
stos
loope
jmp
xlat
cs
loop
es
ret
xor
pop
xchg
lods
add
movs
dec
stc
pop
in
xor
push
sbb
sbb
leave
push
adc
pop
fadd
mov
xchg
das
out
cmp
stos
pop
adc
cmp
mov
data16
fstp
cwde
jns
xchg
enter
inc
add
sbb
outs
daa
push
mov
fnsave
cmps
js
adc
loopne
jbe
jno
cmc
pop
mov
or
fwait
xchg
jno
lods
pop
shr
add
mov
cmps
jae
or
add
lods
add
jno
push
jp
mov
test
mov
movs
sub
lods
je
cmps
xor
cmp
in
dec
sbb
fidivr
sbb
push
lods
ret
jg
sbb
mov
mov
cmp
jnp
popf
dec
adc
cmp
(bad)
cmp
jle
adc
dec
lods
fidiv
sub
int3
sar
std
mov
ins
aaa
mov
pop
adc
out
jo
jae
stos
div
cli
sub
cmps
mov
stc
dec
(bad)
or
ins
mov
push
inc
mov
fld
and
sbb
data16
add
adc
xchg
push
pop
pop
xor
pop
pop
push
xor
les
imul
int
bound
jno
xchg
jle
sbb
mov
mov
daa
or
mov
das
nop
fwait
movs
and
dec
out
adc
jo
fcmovnb
addr16
in
test
movs
ror
in
jae
or
add
test
xchg
aam
cli
or
ja
push
in
je
enter
in
or
test
fs
frstor
mov
push
jecxz
imul
mov
jg
sub
bound
enter
jg
nop
adc
shl
add
popf
jne
adc
adc
lods
xor
pop
sub
add
mov
mul
jge
mov
mov
mov
or
add
sub
ror
call
ins
sbb
fcomp
xor
pop
arpl
and
sbb
ret
(bad)
cdq
scas
outs
mov
lea
sbb
mov
hlt
repz
and
mov
repz
mov
aam
pop
fidivr
push
movs
mov
xor
outs
add
inc
xchg
jns
aam
adc
out
shl
push
or
mov
dec
mov
xlat
(bad)
mov
stos
add
fild
sbb
push
call
mov
dec
(bad)
jo
leave
mov
ss
or
pop
sbb
pusha
jnp
xor
adc
dec
dec
in
lds
in
cmps
mov
xor
and
sbb
leave
sar
hlt
jae
fbstp
jns
out
xor
mov
push
pushf
loopne
dec
mov
or
jo
mov
add
movs
inc
nop
jo
push
das
xchg
addr16
ficomp
retf
bswap
inc
add
push
or
jecxz
fistp
test
std
into
or
xchg
sub
mov
clc
mov
push
rcr
inc
leave
out
int
dec
std
xor
movs
push
push
ficomp
in
pop
(bad)
icebp
sbb
inc
rol
cmps
cmc
inc
add
loop
mov
cwde
sub
xchg
xchg
cmp
popa
and
dec
out
sbb
dec
mov
punpckhwd
lea
ins
push
fiadd
cld
add
fcmovnbe
test
xor
ror
inc
mov
inc
mov
push
jnp
mov
(bad)
mov
mov
aaa
or
clc
fst
push
xchg
dec
xchg
call
sbb
std
inc
cdq
out
fld
cli
and
jae
popf
cmps
inc
sub
cmp
inc
pushf
sbb
xor
inc
jp
movs
pop
fmulp
cmp
mov
jg
mov
mov
xor
lods
adc
shl
fidivr
mov
test
in
movs
ds
lds
int3
jb
cmp
outs
push
pop
mov
pop
dec
loop
mov
les
shr
sbb
jno
imul
xor
adc
into
das
sbb
repnz
stc
push
push
ja
jmp
cli
aas
cmps
(bad)
xlat
mov
jo
pusha
idiv
push
imul
sbb
adc
les
or
push
ins
inc
dec
mov
mov
rol
adc
mov
dec
ja
sti
cmp
scas
pop
out
xlat
out
aaa
mov
shr
sub
int3
add
mov
xor
ins
jmp
sbb
sbb
int
push
jbe
sbb
test
mov
xchg
pop
jp
or
mov
test
fwait
imul
mov
mov
xchg
rcr
hlt
int
(bad)
jg
push
bound
dec
jge
retf
(bad)
int3
hlt
pushf
mov
cmp
xor
push
sti
pusha
xor
push
ret
jmp
sbb
add
(bad)
imul
fwait
test
mov
int3
fwait
sub
std
cdq
fwait
pop
pusha
outs
je
dec
xor
mov
sti
cmp
push
fdivr
outs
xchg
test
cmps
add
cmp
mov
popa
or
ds
inc
jo
and
aaa
add
cmc
sub
popa
stc
ins
arpl
ins
push
mov
imul
jmp
jp
stos
jmp
and
or
push
jle
out
sub
scas
pop
cwde
loopne
cmps
ret
cmp
pop
xchg
movs
push
mov
mov
fs
sbb
pop
cwde
xchg
fld
(bad)
nop
sub
inc
js
rol
xchg
rol
shl
add
push
push
jb
aas
xchg
xor
xor
out
rcr
ret
enter
mov
sahf
outs
rcl
rcr
popa
test
dec
push
xchg
fstp
sub
rcr
fisub
mov
(bad)
mov
js
or
fwait
or
pop
retf
or
jmp
push
shl
out
sub
inc
popa
or
push
fldenv
sbb
cwde
das
ins
xchg
pushf
push
or
push
jae
push
setbe
mov
dec
sbb
mov
inc
sub
cmps
sbb
mov
and
cmp
jb
pushf
sbb
(bad)
popf
push
call
xor
mov
fisub
je
inc
in
ror
loope
(bad)
cli
shl
cmp
jg
adc
shl
loop
nop
or
jbe
cmp
fcom
data16
lock
cmps
xor
push
movs
das
out
enter
xor
andps
fucomi
pop
mov
pop
daa
adc
test
jecxz
jg
inc
mov
ds
cld
leave
mov
fmul
lock
cmp
sbb
repnz
cmp
dec
daa
cmps
mov
ins
in
jl
or
inc
(bad)
xor
aam
(bad)
stos
ret
jp
(bad)
hlt
vcvttss2si
push
mov
js
mov
dec
dec
repnz
lods
ins
push
sbb
jmp
and
cmp
cs
mov
bound
xor
or
inc
cmp
mov
sub
mov
test
aam
arpl
arpl
(bad)
jae
cmp
mov
or
dec
loopne
xor
sub
mov
in
inc
fwait
cmp
jmp
add
ins
outs
cwde
push
xchg
into
or
retf
pop
push
dec
dec
cdq
or
or
dec
aaa
adc
adc
adc
push
push
mov
in
ins
inc
mov
cmp
cs
mov
aas
lock
mov
jp
mov
in
cmp
and
mov
xor
xlat
daa
in
out
sub
(bad)
adc
mov
iret
push
xchg
cld
push
enter
sbb
loope
outs
sub
test
enter
ret
jbe
arpl
addr16
xchg
sub
cmc
xchg
cmps
pop
shr
cmc
push
test
ds
jo
sub
dec
inc
fistp
cmp
scas
cmp
adc
test
lds
bndmov
mov
xchg
mov
pop
xchg
hlt
inc
lods
and
xor
int
xor
bound
jne
(bad)
mov
inc
dec
mov
loope
adc
mov
sar
inc
sar
jle
in
adc
sub
mov
int3
ror
aam
mov
or
stc
shl
sbb
or
jne
fild
cmps
xor
and
das
mov
test
fmul
scas
push
mov
clc
lock
int3
ja
cli
std
pop
cld
cmp
mov
movs
and
jne
retf
dec
(bad)
(bad)
jno
xchg
out
outs
mov
cmps
addr16
sub
jg
mov
pushf
or
add
and
int
mov
adc
dec
(bad)
fsubr
dec
stc
sbb
cld
imul
inc
jg
add
cs
cmp
add
push
cs
push
push
sub
addr16
cmp
add
and
test
jbe
sub
mov
dec
data16
mov
xchg
inc
jp
(bad)
icebp
out
mov
das
dec
pop
or
jo
test
mov
push
push
xlat
sbb
mov
pop
ss
push
add
add
jmp
or
add
mov
xchg
dec
pop
cmps
mov
mov
xchg
pop
add
fdivr
add
sbb
(bad)
retf
xchg
fidiv
mov
lods
es
add
sti
inc
test
fstp
jne
mov
sub
mul
test
out
xor
dec
dec
xchg
or
xchg
test
dec
inc
jge
popa
sti
push
dec
(bad)
popf
sbb
ficom
or
jmp
jb
sti
icebp
test
push
xor
jmp
popf
xor
mov
ror
add
sub
out
outs
jge
cli
mov
xchg
pop
or
popf
mov
push
out
push
push
pop
push
ins
hlt
sub
cmps
and
mov
test
jo
xchg
pop
sahf
adc
cmc
xchg
bnd
cmps
call
(bad)
pop
sbb
pop
lods
cmp
stos
mov
(bad)
movs
mov
ret
loop
mov
xchg
jns
xor
mov
mov
jbe
ror
mov
sbb
xor
div
dec
jge
push
imul
xor
and
data16
ja
ss
mov
test
xor
stc
or
scas
lea
cmp
bound
xchg
aas
sbb
das
fsubr
push
push
into
outs
ret
pop
fisub
push
mov
push
aaa
out
adc
cmps
mov
fdiv
fcmovne
std
dec
mov
add
dec
cdq
nop
mov
inc
gs
repz
mov
icebp
gs
inc
js
cmc
enter
adc
mov
scas
stos
retf
retf
popa
test
jmp
mov
and
xor
ins
pop
shl
mov
leave
mov
mov
ss
mov
xor
loopne
adc
(bad)
mov
test
in
sub
pop
add
imul
sar
dec
stos
mov
(bad)
pop
xor
bound
repz
push
mov
pop
jge
pop
pop
cmp
fcomp
add
fprem
mov
push
jp
dec
mov
add
(bad)
xor
lahf
push
fdiv
mov
add
or
pmulhuw
loope
pusha
mov
cmps
call
fistp
int
adc
jp
adc
pop
push
add
add
jae
xchg
and
cld
ss
jne
mov
lods
les
call
out
out
loopne
add
in
lea
mov
inc
lahf
jb
aad
sub
loop
loope
and
cmp
adc
dec
and
pop
iret
xchg
(bad)
xor
loopne
xchg
push
xchg
or
jl
mov
bound
jp
lock
cmp
fisub
fisttp
pop
mov
repz
xchg
inc
cmps
cld
mov
in
stc
arpl
inc
ds
add
std
jbe
mov
int
push
sub
xchg
iret
mov
cmps
cmps
mov
add
mov
jge
repz
fstp
call
add
pop
mov
cs
inc
imul
dec
and
add
sar
test
popf
in
xor
cmp
cmp
in
inc
iret
rcr
and
inc
push
dec
pop
mov
xchg
adc
stos
inc
xchg
push
jmp
cmp
jge
xor
imul
mov
lea
add
fldcw
mov
cli
iret
enter
out
jmp
lds
test
jg
mov
in
jno
inc
cmp
mov
mov
adc
jecxz
mov
jmp
cmp
mov
dec
es
cmp
loop
sahf
les
adc
jecxz
in
push
ss
pusha
jg
lods
pop
push
xchg
ror
clc
data16
jmp
or
pusha
dec
int
or
jmp
mov
pop
jmp
shr
or
jnp
mov
mov
add
mov
std
ds
fwait
icebp
and
out
mov
or
scas
js
out
xchg
adc
pop
pop
inc
repz
scas
imul
ins
aad
retf
mov
xchg
inc
imul
in
cmc
add
inc
add
jnp
in
adc
jno
xlat
cdq
and
imul
mov
fisttp
lea
sbb
adc
xchg
dec
sbb
hlt
inc
xor
ins
in
xlat
das
inc
inc
pop
ret
je
sub
xchg
cdq
in
or
and
mov
xchg
cmp
jbe
cmp
lahf
ins
out
lea
inc
push
cdq
hlt
sub
es
loop
dec
arpl
add
fbstp
jo
adc
nop
dec
sbb
xor
retf
leave
pop
aas
mov
mov
push
and
push
xchg
jge
mov
ret
icebp
pop
sub
mov
shl
sub
inc
mov
pop
mov
mov
das
or
ins
clc
test
ror
mov
sti
dec
and
repz
les
mov
rcl
push
aaa
push
out
jne
add
idiv
jnp
mov
fadd
mov
or
call
mov
mov
inc
not
mov
icebp
arpl
jb
imul
pop
dec
inc
or
test
icebp
dec
iret
add
xor
repz
pop
jp
or
sti
pop
xor
dec
adc
cwde
das
jge
jae
mov
add
sbb
push
jo
pop
xchg
aas
mov
in
xor
push
leave
jecxz
pop
ss
and
popa
pop
push
mov
dec
or
xor
test
dec
loop
add
loop
xor
push
dec
(bad)
in
icebp
mov
jl
add
sbb
mov
push
pop
imul
jmp
imul
cmps
add
popa
push
pop
lods
ins
mov
cmps
xor
push
out
inc
mov
icebp
stos
mov
movs
adc
les
test
add
pop
push
dec
dec
enter
pop
xor
mov
aam
or
lods
mov
stc
leave
mov
adc
mov
mov
loop
adc
leave
aas
mov
xlat
aaa
jo
scas
xchg
gs
sub
push
inc
loop
cdq
mov
or
pop
xor
jae
je
jno
xor
jecxz
mov
pop
icebp
pop
sbb
xchg
cmovg
dec
in
xchg
ret
pop
push
xor
push
and
pop
leave
sub
adc
aas
outs
sub
cmp
xchg
(bad)
pop
push
push
jecxz
mov
test
loope
hlt
mov
sub
cmp
add
jmp
lods
adc
jle
movs
mov
cmp
sub
out
cmps
test
mov
and
add
dec
sti
cli
ja
xchg
jmp
pusha
xor
popa
ins
aad
(bad)
cli
addr16
repnz
(bad)
jnp
div
pushf
jnp
mov
dec
cmp
and
outs
jo
xchg
jg
into
push
xchg
(bad)
popf
pop
mov
add
cmp
fisttp
xor
sbb
sub
add
fadd
imul
mov
lahf
xchg
cmp
fwait
(bad)
sub
mov
and
int3
dec
or
xchg
mov
adc
das
mov
scas
add
jg
bnd
loope
push
fs
nop
pop
or
xchg
pop
mov
adc
fcmovne
fmul
movs
jp
or
and
mov
dec
and
xchg
outs
in
stos
cld
daa
dec
sub
jbe
not
and
das
call
stos
mov
add
jp
int3
neg
mov
rol
xor
leave
cmp
dec
mov
xchg
and
loop
shr
mov
iret
std
hlt
mov
or
sahf
ds
mov
push
enter
mov
jae
cmps
nop
dec
popa
push
fstp
cs
gs
mov
adc
addr16
jge
out
sbb
cmps
iret
pop
test
sub
inc
cmp
mov
adc
inc
outs
ins
jbe
(bad)
jmp
sub
outs
pop
xchg
xor
dec
cwde
call
sub
hlt
adc
lea
xchg
mov
dec
jge
ret
jae
push
mov
mov
and
dec
out
inc
icebp
sqrtps
mov
nop
inc
arpl
sub
mov
jae
pop
sub
push
iret
pop
mov
ss
ins
cdq
rcr
and
jns
dec
lds
mov
mov
jecxz
or
into
aas
nop
out
int
xchg
out
fadd
xor
sbb
fwait
jle
xchg
xchg
pop
sub
mov
jne
in
pop
push
ja
adc
pop
sti
ss
mov
daa
punpckhdq
add
mov
push
xor
fmul
je
addr16
fidiv
call
mov
popf
cs
and
lds
xor
in
sbb
repnz
ret
scas
jg
add
aad
jl
aad
daa
aad
repnz
mov
movs
mov
jg
xor
fisttp
es
jae
jecxz
in
aam
dec
movs
pop
inc
in
shr
xor
jbe
fisub
popa
add
cmp
inc
into
imul
add
push
cld
dec
and
imul
add
cmp
pop
lea
fst
mov
mov
pop
inc
scas
loopne
daa
call
mov
add
je
and
fidivr
dec
call
fwait
or
add
cmp
xchg
loop
repnz
jle
mov
aad
push
sbb
mov
std
int3
call
push
jbe
shr
lods
ret
cdq
stc
dec
or
dec
adc
xchg
mov
or
mov
std
xor
mov
mov
adc
arpl
and
jl
outs
fsub
jns
std
add
aaa
out
cmps
mov
push
mov
sti
inc
mov
cmp
fcmove
mov
jp
and
cmps
mov
mov
ret
aad
and
jg
in
cmp
cs
and
das
adc
test
mov
(bad)
int3
pop
xor
pusha
adc
mov
xchg
cmp
pop
cmp
loop
push
lock
and
leave
loopne
rcr
lds
jge
xchg
adc
xor
mov
es
xchg
pop
mov
fcom
mov
mov
in
pop
sbb
aas
pop
push
push
or
in
jb
test
mov
push
mov
adc
stos
inc
pop
lea
dec
xor
xor
fsub
stos
fild
jge
(bad)
(bad)
das
scas
jge
ret
mov
clc
dec
sbb
scas
sub
mov
cmp
std
mov
in
inc
push
cli
cmp
push
cmc
inc
pushf
and
das
rep
or
ins
push
jo
(bad)
ja
and
popa
xor
cmp
add
shl
fistp
mov
imul
xor
pop
sub
inc
sbb
test
stos
pop
ret
ds
and
les
ret
lahf
xor
test
mov
jg
mov
adc
mov
adc
xchg
and
xor
sub
dec
arpl
imul
sub
lods
inc
pop
ror
iret
js
fcomp
in
inc
das
push
stc
out
jno
cwde
mov
mov
xchg
lea
sbb
aad
and
sub
inc
pushf
(bad)
mov
sbb
(bad)
sbb
pop
xchg
xchg
shl
fistp
(bad)
mov
xchg
jp
movs
push
aam
inc
add
inc
sbb
push
jno
dec
cmp
je
pop
and
sti
cli
out
dec
fisub
iret
sbb
push
push
inc
in
dec
sub
inc
cwde
int3
imul
xchg
out
add
xor
inc
mov
adc
ret
test
retf
leave
pop
add
dec
mov
mov
inc
adc
push
movs
dec
cdq
jg
xor
jl
fnstsw
int3
aas
(bad)
jecxz
add
mov
sbb
add
jl
rcr
or
push
sbb
cmps
mov
push
and
sub
mov
(bad)
loopne
imul
mov
mov
cmps
mov
adc
mov
mov
shr
add
js
inc
das
pop
sub
ja
pushf
sub
ss
int3
jnp
loope
jle
push
or
xchg
adc
sub
sti
in
arpl
shl
lods
sub
mov
pop
sar
mov
sti
inc
sub
mov
mov
cwde
arpl
retf
out
test
jnp
sbb
mov
shl
push
pop
xor
ins
xor
add
inc
ret
clc
in
jp
sub
jne
cmp
shl
jecxz
aad
sahf
call
add
pop
push
push
adc
push
pop
je
sub
movs
jmp
iret
fsubp
rcl
sahf
js
cmp
xchg
dec
pop
pop
and
xor
das
dec
nop
cmp
and
jmp
jmp
in
mov
jo
jne
stos
add
dec
mov
call
imul
nop
or
enter
xor
lds
scas
das
mov
xchg
int3
xor
iret
mov
fisttp
aad
or
add
adc
ror
jmp
outs
hlt
adc
out
repz
xchg
lock
dec
add
sahf
dec
cmp
cmp
scas
cmp
cmp
imul
(bad)
das
adc
sbb
adc
imul
jg
dec
popf
mov
push
ds
rol
ja
in
pop
mov
jno
arpl
ins
enter
das
mov
cmc
pop
cli
or
pushf
aaa
clc
add
in
mov
mov
jo
mov
std
lahf
shl
in
test
fs
jg
sub
mov
add
pop
lock
imul
mov
inc
mov
sbb
cmp
jnp
xor
push
add
fcompp
inc
mov
xor
cmps
cmps
push
xchg
jmp
add
xor
lea
fmulp
mov
sub
jns
mov
mov
aad
add
jnp
in
mov
jle
xor
mov
jno
dec
iret
cdq
cmp
out
shr
cmp
enter
adc
outs
add
ss
dec
cmp
ins
xor
jo
xor
ret
cs
movs
push
lods
fwait
in
xchg
sub
cmp
xor
scas
fs
push
aas
ins
dec
or
push
jmp
loop
inc
adc
adc
dec
je
xor
cmp
cli
loope
loopne
pop
push
inc
lahf
push
cmps
xor
xchg
push
xor
adc
stos
inc
adc
xchg
rcr
mov
nop
call
call
rol
push
loop
imul
xor
jbe
inc
xor
sbb
mov
sub
dec
mov
xchg
xor
xchg
mov
repnz
jno
pushf
ja
sbb
(bad)
mov
dec
and
shl
xor
je
pusha
mov
push
and
push
in
mov
xchg
jmp
jno
xchg
xchg
ret
mov
(bad)
or
push
call
or
enter
push
icebp
call
xor
adc
cmc
lock
jl
jmp
ins
pop
cmp
or
cmps
scas
xchg
sbb
mov
std
pop
scas
in
std
test
push
or
call
add
lea
jae
xchg
pop
repnz
fst
xchg
jmp
and
sbb
popf
aaa
in
aam
fstp
or
iret
push
mov
and
push
js
into
jno
scas
jae
aam
xlat
inc
cmp
fwait
out
cmp
sbb
(bad)
out
jp
pop
dec
inc
xchg
xchg
inc
(bad)
mov
xor
cmp
retf
leave
(bad)
int
mov
lahf
mov
pop
xchg
or
or
mov
sub
sub
pop
adc
cmp
cs
cmps
pop
ja
sub
add
(bad)
aad
adc
xor
lock
bound
inc
mov
push
cli
mov
inc
jo
xchg
adc
pop
jg
sub
imul
mov
pop
dec
or
stos
jp
div
jp
mov
leave
mov
dec
leave
inc
cdq
loope
gs
mov
add
adc
mov
add
mov
ins
rcl
xor
nop
imul
retf
aaa
or
sahf
dec
ja
jecxz
add
jns
xchg
add
in
dec
call
scas
sti
imul
dec
sub
stc
sbb
sub
pop
rcr
xchg
stos
adc
cmp
test
xor
aad
mov
ror
cmps
je
dec
cs
mov
shr
sub
sbb
adc
lds
je
neg
add
adc
and
scas
adc
pop
mov
int
ret
mov
call
xor
sbb
retf
xchg
cmp
xchg
lods
stos
mov
in
sahf
xchg
sahf
cmc
adc
jno
cmp
mov
stos
bound
adc
gs
lea
xor
xchg
jp
mov
jmp
lods
inc
sub
repnz
push
push
outs
rcl
test
mov
mov
les
fs
jae
(bad)
dec
mov
pop
pop
sbb
adc
sahf
test
xlat
shl
nop
mov
cmp
add
push
ins
push
lds
imul
call
jo
cli
push
sub
outs
mov
inc
cwde
ja
pop
fsubr
stc
cmp
sub
loope
int
mov
adc
rcl
scas
sbb
hlt
push
shl
neg
icebp
jp
or
inc
dec
lea
sar
scas
jmp
mov
repz
mov
xchg
xor
ds
mov
jl
cmp
sub
jge
popf
popa
sub
test
mov
cmp
test
xor
aam
jae
cmp
sti
in
movs
arpl
fdiv
xchg
jmp
scas
or
je
push
and
sub
sbb
pop
add
dec
push
ins
dec
fbstp
repz
jmp
fisttp
div
xor
adc
push
mov
sti
push
out
lods
lock
(bad)
sahf
or
dec
out
stc
mov
lock
cmp
int
(bad)
imul
lea
pop
xor
push
gs
scas
sahf
ins
gs
test
lock
and
xor
add
and
push
lahf
pop
inc
mov
mov
icebp
lea
inc
mov
(bad)
pop
loope
add
out
xchg
push
inc
xor
and
repnz
std
imul
or
(bad)
in
fwait
sti
xor
mov
mov
adc
add
mov
clc
adc
es
fcmovnb
int3
sahf
add
or
fs
xchg
mov
or
cmc
adc
rol
and
jbe
jae
xor
pop
inc
add
inc
repnz
jl
pushf
adc
pop
out
fwait
outs
mov
movs
arpl
retf
imul
add
stos
hlt
(bad)
das
jnp
jmp
mov
jecxz
sub
xchg
mov
or
std
add
cmp
jne
daa
mul
(bad)
mov
sub
xor
adc
loop
iret
les
sbb
sub
sbb
fild
aad
mov
mov
mov
inc
test
outs
fcom
pop
add
sbb
shl
sbb
pop
loope
shl
sub
adc
movs
mov
mov
pop
(bad)
mov
add
cli
leave
pop
push
lods
lods
das
(bad)
fucomip
adc
loopne
sub
xchg
jmp
jns
inc
jns
mov
mov
call
or
rcl
ins
ds
in
sbb
mov
mov
mov
mov
fild
rcr
loope
idiv
mov
inc
jmp
dec
inc
pop
ffreep
or
aad
xchg
lods
clc
outs
vunpcklps
pusha
imul
call
adc
loop
inc
int
push
mov
loopne
inc
xchg
rcl
pop
sbb
sub
push
jbe
ret
sbb
cmp
shl
enter
pop
mov
dec
das
es
jmp
inc
sbb
test
dec
or
inc
and
xchg
or
adc
out
loopne
or
in
xchg
add
rcr
cmp
pop
pop
mov
es
mov
in
sbb
mov
outs
xor
fs
jne
sub
popf
jo
fnstcw
push
js
jl
cs
imul
inc
pop
imul
mov
test
pop
add
es
xchg
sbb
adc
ficomp
xor
xlat
push
into
(bad)
movs
addr16
fidiv
int3
pop
push
sub
pop
adc
jae
ret
test
inc
enter
jno
and
fstp
mov
movs
mov
ins
ins
pop
pop
outs
hlt
les
mov
jne
adc
push
jae
mov
das
aaa
(bad)
push
sbb
jmp
outs
cmp
jo
je
pop
cld
jge
and
and
ja
test
sbb
das
es
ins
mov
or
inc
adc
je
add
xchg
jecxz
ret
ret
jb
mov
and
clc
push
ins
xchg
pushf
or
cmp
push
cmp
and
pusha
mov
mov
test
adc
adc
and
xor
idiv
aam
push
in
fwait
adc
adc
fdiv
cmp
sbb
repz
es
add
cld
sbb
(bad)
ror
pop
xor
daa
push
rol
sub
(bad)
fild
mov
out
adc
sub
add
(bad)
mov
sbb
out
push
in
mov
popa
inc
mov
nop
lahf
clc
and
xchg
rcl
jmp
gs
mov
je
jne
punpckhwd
addr16
arpl
pop
push
clc
sbb
iret
xchg
fdivr
retf
sbb
repz
add
retf
enter
mov
pop
cld
dec
iret
add
adc
jae
dec
mov
lock
dec
stc
dec
imul
push
dec
xor
pusha
jle
mov
sar
repz
std
or
daa
inc
out
or
dec
aaa
dec
mov
xor
push
cwde
adc
xor
dec
and
test
xor
loop
icebp
cld
inc
xchg
or
jp
das
(bad)
jle
out
outs
aam
cmp
ja
adc
xchg
sti
cmps
sahf
sbb
mov
mov
es
mov
arpl
and
mov
push
dec
mov
sbb
push
cmps
jle
cmps
jns
xchg
cmc
cmp
inc
jns
pop
bnd
pop
inc
mov
fimul
and
xor
lea
shr
call
mov
inc
dec
or
stc
xchg
dec
cld
add
jbe
and
js
in
and
call
dec
cmp
xchg
xor
dec
out
loopne
sub
or
xor
xor
mov
enter
movs
(bad)
or
sbb
outs
adc
push
jbe
cmp
push
ss
jns
outs
ret
sbb
fdivrp
dec
addr16
pop
push
mov
jo
mov
fiadd
mov
into
(bad)
jns
scas
test
fidivr
cmp
std
xor
rcl
(bad)
mov
imul
push
pop
mov
and
cmc
(bad)
jns
cmp
xlat
int
addr16
sti
dec
pop
xor
(bad)
mov
pop
jg
imul
cmp
outs
lock
sub
jle
ret
or
mov
movs
aas
enter
mov
push
jge
cmp
and
lahf
jbe
into
mov
xor
std
imul
jl
sbb
cdq
jecxz
mov
addr16
fcmovnu
add
lea
dec
xchg
(bad)
outs
xchg
sbb
sub
xchg
mov
mov
push
ds
inc
data16
add
fimul
pop
mov
cmps
sub
mov
jge
aaa
pop
adc
mov
add
inc
adc
xchg
(bad)
jp
out
cmc
pop
outs
pop
scas
mov
cmps
sub
mov
(bad)
or
adc
aas
cmps
mov
adc
in
xchg
add
into
retf
aam
add
sbb
cmp
mov
cli
in
mov
sbb
ins
(bad)
clc
in
jp
jmp
loope
popa
popa
fmulp
hlt
sahf
push
lahf
inc
sub
popf
or
icebp
out
cmp
sets
xchg
lods
xor
mov
pop
pop
movs
dec
fld
sbb
mov
xor
xchg
mov
sub
hlt
popa
(bad)
aam
jmp
test
dec
test
adc
mov
xor
xchg
cmp
loop
mov
sahf
cwde
jge
movs
xor
inc
lock
addr16
mov
out
lds
lea
aam
ins
dec
mov
mov
ja
sub
lods
jns
add
inc
cmps
in
fst
arpl
enter
stos
mov
cdq
sub
and
stos
test
dec
mov
cmc
scas
sbb
into
mov
test
popf
push
cmp
dec
test
fsubrp
jbe
daa
out
(bad)
add
xlat
shrd
jl
fild
pop
aas
xchg
test
ja
sub
push
outs
mov
cs
ja
dec
push
mov
pop
pop
adc
sub
sbb
push
cmp
rol
fucomp
pop
pop
sub
jmp
jg
dec
and
idiv
pop
aam
adc
aas
adc
fisttp
pop
test
jne
mov
and
mov
addr16
(bad)
scas
jecxz
loope
std
dec
test
ss
cwde
inc
or
push
jmp
repz
dec
rcr
dec
mov
and
scas
mov
jno
xchg
sbb
ins
inc
test
adc
push
cmp
or
or
jecxz
fdivr
fnstenv
mov
inc
out
mov
aas
add
push
out
push
fdiv
lock
shl
jae
mov
mov
(bad)
fmul
mov
sbb
rcl
fadd
addr16
in
popa
sub
push
sub
call
ror
aam
fdivr
das
mov
loop
cld
adc
rcl
mov
push
xor
pop
imul
cmp
mov
ret
imul
push
xchg
jo
and
cld
cmps
mov
in
add
inc
xor
sub
addr16
and
sahf
xor
pop
clc
shr
icebp
retf
lock
shl
stos
adc
mov
mov
out
loop
(bad)
or
mov
cdq
je
pop
push
dec
push
mov
(bad)
inc
jne
arpl
add
fiadd
mov
fdivr
xchg
jbe
add
arpl
mov
xchg
movs
cmp
dec
pusha
push
fidiv
mov
pop
aam
fld
loope
dec
out
xchg
adc
pushf
mov
jmp
push
fstp
or
adc
idiv
mov
pushf
(bad)
cwde
pop
push
les
mov
div
outs
ds
sbb
sbb
inc
cmp
pushf
add
sbb
pop
push
das
dec
fnsave
(bad)
mov
push
(bad)
popa
jmp
ret
and
add
pop
ret
loope
ret
inc
das
gs
jb
sub
xchg
sub
push
out
repnz
adc
addr16
cs
and
js
fcmovnu
repz
repz
mov
cmps
or
sbb
stos
xor
in
jl
and
not
and
into
fild
cmp
jbe
sub
ins
mov
pop
adc
nop
cmp
xor
xlat
fstp
sbb
pop
out
aaa
mov
lea
fisubr
or
aam
push
and
int
mov
shl
aam
(bad)
inc
shl
lea
adc
adc
pop
adc
das
mov
pop
and
xchg
loopne
jno
pop
jl
sbb
push
stos
jecxz
sbb
(bad)
loopne
bound
loopne
xor
out
mov
adc
jno
test
sbb
cmps
push
outs
into
inc
popa
xor
sbb
fs
stos
add
jnp
push
stos
jmp
out
or
mov
push
scas
test
mov
call
add
adc
into
shl
pop
jl
or
and
in
into
mov
cmp
and
lds
outs
sub
inc
jb
stc
sbb
popf
mov
out
ret
jle
jne
and
std
stc
adc
add
dec
not
pusha
lock
push
push
mov
aaa
inc
cmp
add
(bad)
fdiv
and
push
imul
in
mov
dec
pop
shl
ret
jae
stos
mov
sbb
ror
leave
fisttp
les
sbb
rcl
mov
add
xchg
(bad)
sbb
mov
sbb
push
and
dec
hlt
retf
sub
daa
leave
add
mov
(bad)
loope
jae
shl
retf
arpl
mov
mov
ret
loopne
jp
test
mov
lea
hlt
pop
xchg
and
inc
jg
pushf
orps
mov
retf
aaa
add
out
mov
inc
mov
adc
mov
out
mov
cmps
xchg
add
jge
pop
test
enter
arpl
pusha
in
jb
in
ins
test
add
test
sub
daa
pop
jo
and
fcomp
jg
int
push
aaa
scas
stos
movs
inc
fwait
mov
push
add
mov
ins
push
dec
or
test
adc
pushf
(bad)
jmp
sbb
into
cmps
bound
dec
cmp
mov
xor
pop
jae
cli
retf
mov
dec
mov
pop
fimul
nop
ret
xor
aaa
xchg
out
int3
jo
lock
jae
mov
xchg
jle
ja
stos
sub
push
jg
add
mov
test
je
cmp
(bad)
into
sub
push
jo
pushf
xchg
sub
fisttp
jb
jno
cmp
push
das
mov
mov
pop
loopne
popf
xchg
int
adc
(bad)
ror
rcr
sbb
adc
sbb
into
sar
xchg
mov
nop
repnz
push
icebp
adc
xchg
and
and
fnstsw
test
bound
xchg
fistp
fwait
test
sar
(bad)
mov
adc
mov
pop
inc
mov
inc
push
aas
mov
popa
into
fistp
into
push
mov
mov
lods
or
std
arpl
xchg
lea
lods
out
mov
xchg
jo
fwait
in
xchg
movs
cld
aaa
loopne
jp
repnz
loope
lods
jmp
pop
movs
sbb
aas
xchg
fld
fist
push
and
and
and
loopne
add
retf
sub
sbb
and
cmp
movs
adc
daa
(bad)
out
jg
lea
ins
(bad)
push
xchg
loopne
xchg
addr16
rcl
and
gs
lea
dec
dec
xchg
push
js
sub
mov
jne
push
sbb
les
fdivr
sahf
lds
cwde
bound
push
in
adc
int
cmps
ins
scas
mov
inc
dec
xor
jle
fidivr
(bad)
rep
int
lock
push
stc
sub
lock
jb
adc
sub
inc
and
adc
xchg
movs
push
adc
jmp
mov
pop
aam
cld
pop
pop
inc
mov
or
cmps
adc
pop
adc
mov
dec
out
jg
push
push
enter
push
push
dec
or
dec
mov
and
fs
mov
lods
xchg
sbb
jmp
cld
shl
dec
call
jns
pusha
cmp
aaa
add
pop
xchg
push
aad
test
ret
fild
adc
cli
inc
jmp
xor
pop
adc
dec
out
adc
addr16
ror
push
xor
jns
out
aad
adc
ins
aam
stc
aad
xchg
retf
add
adc
retf
jbe
xchg
xor
add
outs
pop
sbb
pusha
jl
mov
dec
push
(bad)
jno
inc
das
pop
out
sub
mov
push
pop
mov
mov
pop
lds
in
sbb
adc
mov
cmc
sub
mov
iret
sti
arpl
out
pop
jne
sbb
cmp
jns
adc
aad
cmp
fdivr
mov
(bad)
mov
adc
push
and
mov
dec
cmp
mov
jnp
inc
fisub
push
(bad)
adc
cmp
outs
and
xchg
cli
xchg
jns
jae
sub
mov
sahf
xchg
xor
inc
ret
dec
push
and
mov
jl
mov
cmp
repz
data16
jns
mov
sub
loopne
int
mov
cmp
sub
inc
push
push
push
out
cdq
leave
js
lods
das
out
cmc
push
pop
shl
dec
shr
xor
stos
jno
rol
cli
mov
sub
es
or
push
adc
and
xor
or
enter
cmp
sub
mov
aam
jb
aaa
cmps
rol
mov
scas
jo
scas
add
pop
or
pop
sbb
bound
adc
xor
and
dec
xor
cli
sub
lds
mov
pop
mov
xchg
ret
push
cli
cmc
mov
sub
test
sbb
adc
cmc
lahf
imul
dec
das
push
inc
das
mov
mov
and
add
jo
sahf
cdq
pop
mov
inc
mov
mov
xor
aam
adc
mov
sub
push
ja
dec
jae
in
int3
into
(bad)
aam
loop
inc
cld
mov
outs
dec
lahf
push
test
inc
push
lods
test
data16
pop
mov
xlat
mov
ss
neg
test
mov
xor
inc
cmp
jl
push
push
mov
mov
mov
adc
push
(bad)
push
pushf
ret
add
push
add
jle
cs
pop
pop
daa
adc
test
mov
inc
cmp
jl
add
movs
and
pop
popf
lods
adc
repnz
inc
mov
adc
or
fistp
div
mov
test
fadd
push
imul
mov
sahf
fnsave
sbb
or
adc
sub
out
cmp
cmp
mov
xchg
mov
neg
jbe
xchg
xchg
stos
stc
retf
mov
mov
dec
sub
push
mov
pop
jns
pop
mov
in
adc
shl
cmp
sub
or
je
jp
mov
cdq
xor
inc
add
pop
mov
fistp
dec
pushf
mov
mov
mov
fsub
push
shl
and
dec
int3
mov
(bad)
std
sar
out
je
xor
cmp
(bad)
push
push
sahf
add
in
dec
sub
ds
stc
cdq
loop
or
into
adc
adc
rcl
xchg
jb
stc
mov
imul
push
jg
sbb
jmp
(bad)
pop
and
and
cli
sbb
add
dec
movs
(bad)
jb
cpuid
sbb
loopne
mov
push
jp
shl
xlat
bound
jne
in
in
imul
xchg
cmc
repnz
xchg
xchg
pop
inc
(bad)
push
lods
pop
iret
ficom
mov
add
pop
(bad)
sbb
add
xchg
mov
adc
iret
pop
dec
scas
add
lods
jmp
jecxz
repnz
popa
gs
lods
in
mov
loope
gs
clc
and
fsub
mov
jae
outs
clc
xchg
in
int
in
sub
xchg
(bad)
push
push
xor
or
(bad)
div
sahf
dec
mov
es
in
int
(bad)
cmp
cmp
xchg
cwde
fidivr
xchg
mov
sub
call
inc
jb
test
xchg
jns
lea
dec
sbb
pop
(bad)
bound
ret
neg
lods
xchg
stc
jbe
int
adc
jbe
das
dec
pop
add
enter
xor
adc
cmp
mov
push
cmp
or
or
(bad)
xchg
jl
pop
adc
(bad)
mov
lods
call
or
data16
xchg
mov
push
inc
pop
cld
mov
loope
lock
ins
jl
aad
push
xor
in
test
jle
test
sahf
and
sbb
stc
jge
adc
sbb
mov
test
clc
xchg
push
fisttp
(bad)
xchg
int3
inc
push
ss
cmp
cld
pusha
cmp
ror
iret
je
loope
push
adc
cli
xchg
dec
inc
push
(bad)
ret
mov
mov
popa
cli
xchg
mov
adc
cmc
sbb
adc
mov
or
and
mov
stos
xor
cmps
pop
lea
sbb
(bad)
mov
in
mov
push
push
sbb
cld
les
imul
sbb
dec
cli
push
nop
scas
and
fbstp
retf
inc
sbb
(bad)
stos
and
std
clc
mov
lods
cmc
dec
loopne
dec
cli
rcr
mov
stos
test
cmp
arpl
and
inc
xchg
xchg
jge
lods
jle
repz
sub
fimul
xchg
nop
xchg
add
jne
ds
xchg
les
dec
and
test
aad
sub
sub
sub
cs
sbb
gs
mov
sahf
xlat
pushf
retf
aad
cmp
call
int3
xlat
(bad)
cmc
sub
mov
outs
cmp
ds
sbb
jns
adc
fsub
jnp
sub
add
lahf
scas
add
pop
lock
scas
into
and
repz
mov
fdivr
jne
inc
push
inc
jnp
cld
aam
cmp
arpl
rcl
mov
out
xor
xchg
dec
inc
(bad)
(bad)
mov
fs
mov
sub
sub
(bad)
icebp
and
call
inc
clc
and
shl
mov
mov
cmp
(bad)
pushw
push
pop
sar
push
jge
mov
cwde
gs
xor
sub
fcmovbe
sete
xchg
mov
cmp
cmp
push
shl
xchg
lods
rol
fsubrp
jp
lock
inc
ja
xor
dec
dec
aas
addr16
repnz
loop
mov
push
mov
cmp
ds
jle
mov
out
mov
and
retf
lock
sub
xchg
jo
cmc
jmp
in
xchg
push
xor
jb
xor
jnp
call
cpuid
push
or
mov
push
out
retf
mov
dec
cmp
ret
xchg
cdq
out
push
xchg
hlt
popf
lds
pop
mov
and
hlt
pop
push
(bad)
into
mov
stos
mov
mov
ror
mov
clc
in
stc
scas
pop
into
xchg
(bad)
push
pop
icebp
sbb
jl
cmp
pop
sti
add
mov
int
test
das
mov
jg
aam
gs
push
scas
fbld
aad
pop
push
pop
ror
or
ins
fld
xor
mov
sahf
std
movs
push
mov
push
loope
out
jbe
in
nop
stos
xor
fbld
mov
fld
xchg
xchg
aam
mov
mov
and
cmp
push
aaa
mov
lods
ds
out
mul
popa
(bad)
push
fnsave
push
jb
jb
repnz
adc
mov
fidivr
cmps
in
jg
loope
(bad)
cld
dec
jnp
das
adc
adc
xor
repnz
xchg
idiv
push
mov
shr
pop
fnstsw
xor
movs
pop
push
push
es
cdq
aas
nop
jl
cmp
div
mov
and
inc
(bad)
sbb
scas
push
adc
dec
into
inc
repnz
fwait
or
jmp
sub
fld
jge
dec
hlt
in
xor
jmp
and
stc
sbb
push
loop
mov
xor
push
inc
arpl
push
(bad)
mov
xor
ja
(bad)
or
inc
into
aaa
stos
jge
mov
pushf
cmps
call
(bad)
fwait
dec
push
pop
fwait
popf
mov
cmps
xchg
mov
mov
dec
sub
into
pop
mov
loope
jb
xchg
cld
test
sbb
pop
mov
cmp
mov
adc
jno
sahf
mov
or
adc
call
inc
stc
xchg
icebp
mov
push
jle
or
pushf
in
ins
add
scas
lods
jno
lahf
pusha
mov
mov
ffreep
hlt
mov
cmp
or
out
xor
mov
sbb
das
(bad)
mov
pop
mov
data16
sub
xor
je
pop
adc
adc
push
mov
jb
dec
push
sahf
sbb
mov
add
dec
aad
retf
enter
push
adc
ds
pop
cs
call
dec
mov
xchg
mov
js
(bad)
mov
add
ret
imul
ret
pop
fisttp
mov
dec
in
iret
sbb
scas
out
popa
ds
je
arpl
ds
movs
imul
add
test
sub
leave
mov
cmps
dec
xchg
enter
in
in
lods
dec
enter
push
dec
xchg
aam
test
aas
push
inc
sbb
shr
dec
fcomp
dec
aam
push
pop
cmp
sbb
nop
xor
xor
add
jmp
scas
(bad)
shl
jno
dec
adc
shl
inc
jl
mov
add
jge
push
enter
stos
mov
pop
movs
mov
add
add
jae
in
imul
cmp
cmp
sar
stos
sub
and
fisttp
cwde
pop
loope
cs
mov
inc
jmp
rsm
mov
and
mov
pop
pop
sar
dec
lods
inc
mov
lods
ror
bound
aad
ins
cmp
std
in
test
pop
push
loop
ror
int
and
sub
pusha
sub
mov
js
stc
ret
mov
ins
iret
mov
repnz
enter
jge
inc
cmc
xchg
es
arpl
lds
sbb
mov
xor
sbb
push
pop
inc
ins
pop
xlat
xchg
mov
mov
(bad)
pop
and
dec
ror
cli
dec
inc
loop
js
adc
out
push
cmp
push
ins
xlat
movs
push
clc
(bad)
push
out
xchg
and
popf
jbe
nop
cs
or
pop
fcmovnb
sub
mov
jge
dec
pop
mov
or
pop
or
pop
jne
aad
pop
add
and
imul
scas
popf
rcr
add
and
ror
add
lock
loopne
and
jle
ror
(bad)
mov
sti
push
pop
push
sar
pop
inc
sub
push
test
cmp
sub
push
pop
jg
xlat
xchg
stos
movs
or
or
xchg
fwait
in
not
add
cs
pop
out
dec
mov
mov
push
rcr
cmp
dec
cmc
pop
xchg
mov
cli
sbb
mov
inc
mov
adc
arpl
mov
fs
(bad)
sbb
add
adc
pushf
cmp
aad
pop
ja
jecxz
dec
test
rcl
adc
adc
loope
push
cli
ret
dec
cwde
xchg
retf
mov
rol
repnz
cmp
jne
stos
jmp
dec
adc
call
das
(bad)
sub
int
jle
jge
int
cmps
mov
fs
push
or
pop
push
pop
pop
or
and
xchg
cmp
jae
gs
jmp
sbb
lods
push
push
sbb
pop
int3
shl
fyl2xp1
pop
inc
sbb
xor
lea
cmp
loopne
cmp
mov
cmps
or
inc
cmovbe
add
call
inc
fsubr
movs
sub
xor
movs
xchg
repz
mov
push
jb
lods
mov
jmp
mov
cld
popf
inc
pop
push
and
test
push
push
in
xor
ror
cmps
pop
sub
sbb
jle
push
sbb
sub
sti
xchg
rcr
lods
dec
loopne
pop
or
dec
pop
adc
dec
ins
mov
jnp
pop
xchg
shr
adc
imul
cmp
adc
xchg
nop
mov
add
fdiv
mov
xor
test
mov
sbb
add
(bad)
test
ins
mov
nop
inc
dec
enter
pop
mov
mov
les
jp
dec
cmc
out
shl
mov
into
out
pop
pop
stos
in
cwde
pop
mov
leave
lea
cmp
or
in
mov
pusha
imul
jb
test
stc
mov
add
jno
sub
xchg
add
mov
cmp
xor
nop
inc
addr16
rcl
in
push
mov
test
sahf
xchg
mov
test
fisttp
inc
mov
xor
arpl
lock
in
lods
add
dec
ins
pusha
mov
lock
push
dec
ficomp
scas
mov
xchg
ins
mov
rol
xor
and
push
cwde
aaa
lahf
xor
cmp
test
xor
out
ja
mov
outs
ss
xchg
in
cs
xchg
loop
rcl
dec
pop
test
outs
xor
and
mov
div
push
inc
(bad)
fcomip
adc
stos
mov
outs
xlat
std
push
pop
mov
mov
dec
test
mov
or
xchg
push
aad
ror
cdq
loop
xchg
mov
adc
scas
xchg
pop
inc
jo
jae
sbb
fs
add
ds
inc
fs
out
in
lds
xor
pop
mov
mov
out
jns
cmp
in
lea
and
jne
cmp
mov
cmp
xor
cmp
gs
test
push
cmps
mov
dec
fstp
cld
rcl
sbb
outs
out
xchg
and
fild
and
neg
add
xchg
dec
sbb
mov
mov
inc
sbb
mov
and
push
into
popa
lea
push
or
es
cmp
ja
pop
cwde
mov
mov
xchg
or
outs
xor
mov
rcr
lods
test
popf
push
and
jb
lods
in
jno
inc
in
je
adc
mov
repnz
nop
inc
ds
mov
in
jg
and
xchg
ffree
outs
mov
pop
cmps
jnp
lahf
mov
mov
inc
int3
rcl
ins
xchg
cmp
mov
push
mov
pop
mov
jmp
xlat
mov
xchg
sbb
ss
ins
xor
push
sbb
mov
xchg
xor
cmp
inc
pop
add
or
cmp
adc
adc
mov
mov
sbb
mov
rol
sbb
imul
aad
mov
xrelease
jle
dec
leave
stc
xlat
pop
mov
dec
or
sbb
push
out
add
jae
add
aas
and
nop
ins
mov
pushf
aad
xchg
push
call
hlt
stc
cmp
rcl
(bad)
jb
jo
inc
push
add
push
sub
adc
mov
ja
pop
in
test
ja
jns
stos
aas
xchg
arpl
pusha
lds
cmp
and
push
adc
pop
mov
dec
std
cdq
retf
ss
xchg
lea
or
mov
cmp
div
ss
add
mov
inc
pop
add
jno
sub
dec
inc
(bad)
pop
mov
push
mov
push
cld
sub
inc
mov
add
outs
ins
cmovnp
(bad)
sbb
and
pop
pop
inc
sub
and
jmp
fcomp
cmp
and
inc
lds
push
fstp
dec
dec
mov
dec
sub
cmc
mov
adc
sbb
ss
out
jmp
pop
mov
push
in
inc
and
popa
push
test
mov
retf
(bad)
scas
xor
xchg
(bad)
push
mov
and
pop
aad
cmp
fst
sub
xlat
push
mov
cld
push
int
jno
xchg
ret
in
call
mov
jne
pmullw
lods
es
cld
ins
retf
les
adc
mov
xor
mov
out
mov
loopne
pop
arpl
xchg
in
sub
mov
and
adc
push
xchg
hlt
ret
adc
js
out
cmp
inc
mov
xchg
shr
mov
(bad)
fdiv
inc
or
xor
mov
xchg
out
sub
cmps
test
inc
scas
and
outs
movs
retf
in
loop
pop
dec
xor
pop
or
jecxz
sahf
inc
lods
dec
ret
into
jg
inc
jno
jmp
in
aas
xor
out
sub
inc
mov
xchg
lock
rcr
inc
xchg
inc
cld
push
(bad)
cmps
(bad)
repz
and
jno
mov
push
outs
xor
je
add
cmp
sbb
dec
mov
call
mov
mov
dec
into
lods
mov
mov
test
in
jnp
enter
xchg
into
jmp
addr16
adc
mov
rcl
in
clc
ins
inc
xor
mov
in
ins
pop
xor
fwait
pusha
aad
jno
or
mov
inc
loop
pop
scas
loopne
cmp
push
pop
sar
je
pop
pop
rol
mov
sbb
adc
jmp
jl
adc
inc
xlat
fst
xchg
movs
add
and
sbb
aaa
and
call
push
into
cmp
(bad)
(bad)
add
dec
ds
adc
jmp
stos
sbb
add
stos
mov
aas
inc
mov
hlt
and
test
or
adc
aam
lods
pop
pusha
lock
pop
fld
data16
mov
lds
or
adc
repnz
test
bnd
ret
mov
mov
sub
lods
cdq
js
out
movs
bts
xchg
lock
sar
(bad)
mov
js
test
enter
out
sbb
lahf
add
ja
arpl
test
int
div
ret
ret
imul
push
icebp
mov
and
adc
stos
pop
push
dec
mov
into
mov
pop
(bad)
jno
das
dec
jmp
mov
in
mov
cli
add
jne
call
repnz
push
sbb
das
cmp
ss
cld
inc
cld
sbb
cmp
lods
push
fs
pop
cmp
sahf
xor
cmp
mov
in
mov
(bad)
fcomp
sub
jg
inc
xchg
jns
not
lea
jmp
push
inc
out
mov
add
and
pop
cmp
xchg
repnz
je
add
sub
inc
movs
movs
addr16
fstp
sub
cmp
frstor
mov
inc
sbb
pop
lea
pop
arpl
xor
push
scas
stc
cmp
sub
movs
out
sbb
sub
add
loop
sahf
popf
sub
dec
popa
ins
aas
fbld
retf
jmp
pop
push
aad
mov
xchg
aad
cmps
mov
pop
mov
cwde
fcmovbe
inc
outs
and
lds
cs
dec
and
repz
jmp
push
ins
test
jbe
mov
xor
mov
movs
test
ja
fs
(bad)
inc
imul
mov
jae
data16
pop
adc
add
gs
call
cwde
add
mov
in
xor
push
and
sbb
mov
popf
jle
cmps
int3
mov
xor
add
dec
and
hlt
add
sbb
nop
(bad)
loopne
movs
sahf
xor
mov
push
aad
push
movs
cmp
pop
pop
jge
sub
retf
fimul
in
sbb
aam
push
out
add
adc
dec
fwait
loop
xchg
mov
push
add
test
cmps
push
jmp
fiadd
ds
aad
hlt
shl
xor
sbb
xchg
xor
xchg
in
inc
xchg
int3
in
xchg
(bad)
out
jbe
rcl
add
cmc
cmp
call
push
icebp
gs
xchg
dec
lock
rcl
sbb
ror
cmp
dec
or
adc
add
out
xchg
xchg
and
(bad)
mov
push
aad
sysenter
push
in
sub
jmp
and
test
(bad)
push
pop
jb
test
xor
loop
in
xchg
scas
pop
mov
scas
movs
pop
not
mov
test
sub
hlt
clc
pusha
jge
or
int
outs
push
test
call
push
(bad)
or
ds
das
sar
push
and
arpl
cmp
sub
sbb
fcom
pop
push
aam
push
call
cmp
imul
dec
push
or
dec
ins
mov
repnz
mov
xchg
jp
iret
enter
retf
inc
dec
add
inc
dec
out
hlt
xchg
and
xchg
ins
mov
xlat
jo
mov
dec
(bad)
sti
xchg
cwde
mov
pop
js
sbb
rcr
gs
call
aaa
or
pop
adc
aas
pop
fldenv
push
cmp
xchg
adc
adc
add
or
clc
sbb
aad
fcmovnbe
cmp
mov
out
mov
or
ja
test
sub
xchg
call
jae
adc
xchg
stos
call
pusha
outs
aas
movd
mov
pop
icebp
cmps
ja
retf
ret
mov
pop
lods
fwait
push
cmp
mov
push
dec
iret
and
mov
repnz
popa
push
mov
fiadd
test
pop
sub
mov
pop
lea
or
dec
(bad)
(bad)
mov
mov
inc
les
int
add
mov
or
pop
sti
fstp
clc
xor
xor
inc
(bad)
push
jmp
xor
add
fcomi
scas
test
stc
test
iret
push
fwait
(bad)
iret
xor
(bad)
xor
mov
(bad)
in
icebp
and
xor
dec
cwde
leave
sub
add
ins
add
xor
cmc
jns
jmp
mov
enter
xor
stos
xchg
sub
and
add
inc
xchg
and
pushf
xchg
aam
fstp
retf
movs
into
push
je
mov
cdq
push
out
in
pop
(bad)
stc
sahf
fnsave
in
pop
inc
call
imul
pop
retf
cmp
add
(bad)
(bad)
sub
sbb
xchg
jle
scas
fwait
jno
outs
std
ja
jmp
daa
push
or
(bad)
dec
sbb
outs
fimul
push
jns
ins
jl
jne
inc
fmul
stos
out
jmp
mov
xor
push
jmp
jmp
dec
push
(bad)
cli
or
into
cmp
fnstsw
xor
sub
fsubp
xchg
call
outs
xor
xchg
pop
jns
in
adc
ins
push
pop
add
cmps
mov
clc
jb
and
sub
push
pop
in
inc
data16
mov
ret
data16
dec
push
loopne
ins
ds
jns
mov
scas
lods
mov
repnz
retf
mov
je
xchg
push
add
push
test
jecxz
pop
mov
fucomip
test
fist
fild
or
cli
add
jne
stc
inc
jl
cmp
xchg
fdivr
inc
lea
xor
push
aad
lds
(bad)
pop
movs
inc
mov
mov
sub
out
sbb
jmp
jp
jmp
ret
inc
sahf
cli
jl
bound
mov
xchg
mov
loop
daa
(bad)
cmp
pop
pop
fnsave
pushf
jg
arpl
lods
pop
or
and
stos
xor
xchg
data16
cdq
fistp
and
mov
test
scas
ja
mov
shr
dec
retf
ins
add
stc
fs
sbb
lods
dec
sub
adc
faddp
pop
ds
adc
gs
push
jb
mov
pop
mov
adc
jb
pop
push
mov
ja
xchg
sti
ja
lock
(bad)
les
mov
dec
jp
mov
sbb
lea
or
add
in
ret
add
push
cmp
fs
add
or
push
dec
retf
pop
jae
in
dec
jle
xchg
stos
push
and
jecxz
xchg
cmp
cmc
(bad)
in
pop
cmps
inc
out
dec
mov
fisttp
cld
and
ret
dec
retf
arpl
pop
add
inc
add
scas
mov
out
xlat
xor
mov
mov
add
jg
popa
lds
and
scas
pop
inc
outs
cmp
aas
xchg
mov
ret
aam
xchg
(bad)
mov
xor
hlt
sbb
mov
enter
jle
lahf
mov
jmp
sub
dec
daa
mov
push
jnp
inc
dec
and
inc
add
xor
pop
jne
jno
jl
ficom
shl
cmp
mov
adc
xchg
cwde
cmp
push
out
adc
stos
dec
push
mov
xchg
xor
jb
call
and
fcmovnb
outs
push
call
imul
dec
push
rcl
pop
das
rcr
inc
and
sub
lods
xchg
sub
mov
pop
and
mov
in
sbb
jbe
push
push
jns
movs
cmps
mov
lds
mov
jmp
movs
xchg
mov
adc
neg
icebp
adc
inc
(bad)
int
int
stos
mov
call
dec
retf
into
sub
(bad)
fs
lds
cli
pop
dec
pop
call
mov
dec
out
fbstp
cmps
in
ror
lds
aaa
repnz
pop
xlat
jne
sub
aam
xchg
push
push
mul
test
into
arpl
pop
or
cmp
pop
sti
mov
ins
jno
rol
mov
dec
push
sub
or
sub
popa
(bad)
pop
cmps
shr
icebp
jle
add
(bad)
sub
mov
in
sbb
add
push
xchg
test
xchg
inc
push
loop
fwait
mul
aas
mov
dec
xchg
xor
outs
or
mov
push
xchg
pop
ja
stos
jmp
sar
lock
cmp
out
retf
rcl
imul
dec
loope
push
out
jp
ret
pop
jo
aam
xchg
inc
aam
ror
inc
fsubr
cmp
mov
xor
(bad)
jle
iret
push
int3
mov
shl
ja
and
jae
mov
test
or
pop
jae
repz
sbb
cmp
rcr
int3
es
jp
cmovbe
(bad)
cld
cmp
or
cmp
stos
push
cmps
mov
xchg
push
cmp
test
adc
aas
test
in
push
(bad)
jl
or
ja
sbb
dec
inc
jbe
mov
xor
jmp
adc
js
xchg
pop
fiadd
xchg
out
xchg
xchg
fisubr
pop
xor
cdq
retf
dec
fst
sbb
xlat
outs
jecxz
scas
cmp
shl
std
push
leave
repz
cmp
inc
mov
inc
pusha
aaa
sub
pop
imul
cdq
pop
cmp
les
outs
inc
and
sub
repz
movs
mov
mov
or
fstp
stos
in
ror
popf
cmp
sar
mov
xchg
pop
xlat
cmp
or
push
mov
iret
out
mov
or
repz
and
(bad)
fisttp
scas
jns
dec
dec
mov
cmp
pusha
mov
gs
xor
ret
(bad)
fisttp
lods
inc
jecxz
cmc
mov
cmp
sbb
push
xlat
retf
test
and
pop
movs
sub
imul
and
ins
cs
inc
mov
int
test
aad
or
adc
fcmovu
sbb
cmp
inc
push
xor
cmp
jbe
(bad)
out
into
out
xor
fild
js
pop
pop
mov
aam
fild
mov
into
movs
mov
push
fild
imul
dec
pushf
jns
js
jb
(bad)
pop
mov
dec
push
jmp
(bad)
lock
pop
lods
mov
inc
add
mov
out
inc
jle
jg
aad
and
cmovno
imul
(bad)
jge
xchg
outs
inc
aas
dec
icebp
jp
mov
add
and
repz
adc
sar
hlt
out
pop
cmp
push
cmps
or
push
sbb
imul
or
sti
pop
(bad)
mov
push
inc
(bad)
pop
lock
push
fwait
cmp
movs
(bad)
dec
adc
xchg
test
cmp
outs
in
ins
das
lods
push
aas
adc
sub
inc
pop
or
adc
std
inc
sbb
std
fnstcw
cmp
cmp
nop
mov
stc
mov
outs
ret
adc
sub
add
call
sbb
aaa
jl
in
pop
call
or
adc
or
mov
hlt
pop
sub
es
cmp
jo
jl
push
or
xchg
push
jmp
push
xor
stc
repnz
push
ret
cmps
out
inc
shl
xor
mov
add
xor
inc
jne
jne
ja
cmp
jge
adc
loop
xor
fwait
aam
add
xchg
ret
out
mov
ja
ss
dec
out
mov
repz
jb
and
(bad)
shl
mov
jecxz
cmps
jmp
rcl
inc
imul
add
ficomp
add
scas
mov
xor
pop
jmp
lods
inc
sbb
outs
pop
inc
inc
scas
pushf
mul
scas
push
mov
mov
call
stos
shl
adc
stos
jns
add
arpl
movs
dec
test
xlat
mov
sbb
inc
mov
sub
cmp
and
mov
dec
jb
in
cld
mov
add
outs
loopne
lods
out
lods
cmp
ret
lods
pop
cmps
and
push
dec
sub
aad
lahf
sahf
mov
movs
inc
inc
mov
and
sbb
sub
test
cli
pop
pop
adc
in
dec
mov
or
add
cmp
push
dec
mov
push
aaa
ret
inc
pop
aad
adc
dec
(bad)
cmps
lods
pusha
sbb
inc
push
and
mov
pop
cmp
jle
and
call
outs
test
or
mov
daa
cmp
xor
pop
jmp
imul
test
or
test
push
ror
inc
stos
rcr
inc
int
and
sub
dec
stc
jb
cmps
xor
gs
adc
jl
dec
add
xchg
test
cmps
(bad)
rol
pop
push
movs
mov
sar
and
add
mov
inc
push
mov
add
lods
ficomp
shr
adc
push
and
or
jb
in
stos
add
cmp
fs
jge
sbb
mov
push
shl
mov
div
or
or
aas
jl
pop
stos
in
add
xor
dec
and
cmp
fimul
adc
arpl
sbb
test
pop
adc
test
sub
cmp
mov
pop
mov
lahf
(bad)
mov
add
in
aas
int
add
loopne
cmp
cs
rcr
pop
imul
(bad)
adc
pop
aaa
push
push
xor
jl
mov
scas
inc
add
mov
cmps
mov
int
lahf
push
adc
iret
stos
ret
aad
cmp
ins
sub
sbb
fcomp
clc
or
das
mov
clc
frstor
inc
out
ins
push
int3
(bad)
(bad)
xchg
(bad)
repz
aas
sub
or
xchg
push
popf
dec
pop
mov
retf
inc
inc
inc
outs
push
or
add
mov
mov
and
jge
sub
fistp
mov
xchg
pop
neg
ins
push
outs
mov
leave
je
dec
int
mov
int3
fcomi
(bad)
cmc
push
cmps
mov
sar
sub
int3
sub
jnp
movs
inc
jae
add
aad
imul
aas
sbb
pop
gs
push
push
mov
mov
xor
aas
sub
jb
inc
push
mov
ret
push
pop
adc
retf
lds
adc
or
cmps
jo
(bad)
es
mov
xchg
mov
mov
in
movs
pop
xor
(bad)
push
mov
adc
adc
ins
cmp
jmp
jg
into
pop
callw
or
outs
movs
dec
retf
mov
pop
mov
in
pop
xor
or
mov
sahf
test
addr16
(bad)
or
mov
(bad)
mov
call
icebp
sahf
ss
fldenv
xor
cdq
imul
in
and
popf
stc
push
mov
loopne
sbb
cli
cmp
push
jmp
sbb
jnp
push
stos
mov
dec
mov
in
fcmovnu
mov
std
sub
aaa
ror
jl
scas
mov
iret
inc
lock
imul
xchg
push
dec
xor
dec
jp
ficomp
push
fldcw
movups
ins
pop
adc
cmp
jbe
(bad)
fstp
xor
fcom
imul
sti
ins
xchg
hlt
sbb
out
cmp
and
loopne
lds
fcomp
xchg
lock
jl
cmp
jmp
(bad)
call
pop
(bad)
fnsave
sbb
push
iret
cmp
pop
fwait
outs
xor
push
inc
and
adc
sub
enter
out
push
sbb
jmp
test
repnz
push
xchg
lods
lods
jns
rol
xchg
jge
int
dec
aad
rol
push
push
sti
mov
pop
mov
push
in
pop
inc
scas
es
mov
(bad)
jns
xchg
dec
les
stos
cs
pop
push
cwde
mov
loop
mov
popf
jg
cmp
and
test
in
call
enter
mov
loope
sub
push
inc
sbb
and
dec
dec
xchg
inc
dec
aad
ret
inc
shl
sahf
test
mov
cmp
invlpg
or
sub
aas
add
sub
inc
jae
jp
rcr
mov
dec
(bad)
popa
or
outs
gs
lods
jg
enter
sub
push
and
dec
adc
stos
mov
out
icebp
xchg
mov
dec
mov
push
dec
stc
jmp
sbb
enter
add
fst
or
icebp
xor
aaa
pop
jae
(bad)
jb
retf
div
sub
je
(bad)
pop
(bad)
imul
mov
mov
or
mov
dec
inc
(bad)
inc
inc
sub
cmp
fisttp
loope
push
dec
adc
sbb
adc
imul
call
lds
and
mov
stos
das
mov
call
in
mov
xchg
pop
bound
fdivp
movs
fwait
push
mov
xlat
ret
mov
inc
mov
jmp
loop
xor
sub
sub
cs
pop
scas
jmp
cmp
and
outs
cmps
push
sahf
ja
lea
mov
(bad)
xchg
push
push
call
mov
shr
lods
fistp
dec
mov
pushf
add
push
jl
mov
push
repz
xor
and
mov
mov
pop
data16
rcl
movs
mov
dec
mov
dec
add
and
xchg
or
push
inc
cld
sbb
or
nop
test
aaa
mov
dec
push
and
fisubr
and
ret
pop
push
jo
aam
mov
xchg
jne
(bad)
pop
inc
call
sar
dec
mov
les
ja
test
pop
jbe
les
ins
rol
mov
int3
xor
xchg
sub
jecxz
add
push
jl
mov
fsub
add
sti
and
ins
into
mov
fcmovb
sub
pop
sbb
dec
xchg
push
inc
pop
movs
(bad)
inc
jge
movs
sbb
int3
cmova
mov
sub
jnp
jne
ja
sahf
mov
es
sub
jecxz
enter
call
xor
pop
sbb
adc
add
xor
(bad)
int
lock
cmps
icebp
adc
lods
stos
mov
popa
xor
mov
jmp
jl
mov
add
jb
pop
aas
test
adc
sub
loopne
mov
xchg
pusha
leave
dec
jns
mov
mov
jl
cmc
cli
out
push
xchg
(bad)
cmps
adc
shr
(bad)
xor
mov
push
sub
or
bound
aaa
pop
enter
aad
mov
stos
add
push
jns
push
and
int3
aad
mov
sbb
and
(bad)
jae
fs
gs
retf
(bad)
and
inc
cmp
popa
scas
in
cdq
jmp
(bad)
ret
add
ins
ins
cs
sub
jl
out
es
jl
dec
lahf
mov
stos
out
mov
adc
into
clc
inc
jge
push
push
or
xchg
out
shr
jecxz
push
dec
add
ins
imul
loope
pusha
xchg
lods
adc
jmp
pop
add
sub
dec
mov
dec
mov
adc
dec
sar
xchg
ret
push
pop
and
xchg
pop
inc
xchg
mov
inc
lahf
inc
sub
adc
pop
mov
in
ins
fwait
outs
sar
sbb
sbb
push
adc
pop
sbb
inc
adc
outs
test
outs
or
mov
jmp
sbb
and
dec
lods
mov
ja
add
sbb
and
icebp
inc
imul
pop
mov
outs
mov
cmp
xor
imul
lds
arpl
inc
(bad)
sti
add
aas
jno
cmps
push
loop
sbb
fwait
cmp
lock
stc
adc
inc
out
retf
js
xor
iret
xchg
sbb
sub
mov
es
xchg
mov
jg
push
cmps
icebp
jns
retf
sub
cmps
mov
sbb
test
arpl
lock
and
mov
pop
fwait
inc
or
movs
add
add
ja
mov
ins
cmc
sbb
or
scas
stc
mov
jae
outs
inc
hlt
fisub
xor
das
dec
dec
push
fisubr
mov
dec
or
(bad)
(bad)
fs
pusha
adc
xchg
or
cmc
cmp
inc
xlat
mov
(bad)
dec
jbe
loope
inc
jo
lock
(bad)
iret
xor
mov
mov
pop
fst
ss
pop
retf
out
shr
adc
xchg
imul
jnp
mov
jmp
in
mov
loop
adc
(bad)
mov
mov
jne
pop
jbe
fisttp
sbb
cmp
cmp
in
xor
push
mov
popa
xchg
pop
jno
cwde
fnstsw
xlat
mov
(bad)
popf
jb
add
adc
xchg
xchg
adc
jp
mov
cmc
stc
data16
aam
dec
inc
jmp
mov
inc
add
pop
xor
test
mov
iret
push
hlt
int
inc
cmps
fs
or
ins
push
shl
js
and
aaa
and
adc
xlat
in
inc
lea
jne
std
jecxz
pop
or
lahf
sbb
push
xchg
in
jecxz
pop
sub
push
lahf
call
neg
inc
mov
dec
fisttp
imul
cmps
rol
inc
inc
out
xor
repnz
loopne
pushf
add
jno
push
jl
loopne
pusha
cli
out
cs
cmc
hlt
test
jl
je
dec
stos
xchg
test
cmp
in
dec
xchg
xchg
push
xchg
lock
lods
sub
int3
pop
sub
call
loopne
arpl
jg
mov
out
sub
arpl
and
adc
pop
inc
icebp
popf
xchg
xchg
and
es
lahf
or
mov
and
sbb
push
mov
push
jne
mov
scas
popf
sub
xchg
and
imul
adc
inc
xor
in
lods
adc
inc
sub
cmp
mov
pop
call
jmp
ret
sti
(bad)
fcomi
shl
sti
jg
jle
and
shl
push
or
ins
cdq
inc
int
mov
call
mov
aaa
or
jecxz
push
adc
out
sbb
cmp
or
call
test
hlt
test
mov
mov
ins
fdivp
jo
dec
fs
test
movs
jmp
outs
adc
xchg
push
cld
movs
in
daa
add
arpl
or
mov
xor
cmp
jmp
sub
sub
inc
or
loopne
mov
pop
movs
jl
push
add
jge
push
les
xor
cdq
mov
sub
hlt
sub
adc
sahf
mov
adc
idiv
in
pushf
inc
ret
jle
retf
nop
jnp
jmp
fcomp
xor
jb
sbb
test
sub
repnz
mov
mov
xor
add
dec
and
dec
pop
cmp
scas
cmc
or
(bad)
pop
(bad)
lods
sbb
sbb
lods
mov
pusha
out
in
sub
out
stos
sbb
or
sub
mov
adc
push
xchg
(bad)
data16
push
push
adc
or
inc
or
(bad)
xor
sub
daa
mov
(bad)
mov
mov
or
push
mov
into
scas
das
test
popf
xor
ja
dec
inc
inc
fiadd
arpl
test
mov
int
pop
cs
and
daa
or
cmps
iret
and
xchg
(bad)
add
xchg
push
mov
xchg
mov
inc
(bad)
mov
cld
leave
or
mov
mov
repnz
mov
mov
std
addr16
push
imul
cmp
aas
dec
int
pop
cmp
popf
test
pop
mov
pop
sbb
imul
sub
mov
pop
cmp
retf
push
call
adc
jns
enter
fsub
xchg
stos
shl
std
inc
push
out
rol
xor
jns
mov
inc
sbb
(bad)
jmp
movs
test
adc
dec
xchg
not
jno
jecxz
mov
adc
ins
dec
sub
iret
sub
push
cmp
adc
jle
not
int3
ror
pop
sahf
cmp
dec
xor
pop
mov
add
cmp
pop
ret
(bad)
out
push
cdq
xchg
adc
ret
xor
inc
mov
test
mov
push
lods
mov
jno
pop
arpl
mov
mov
imul
dec
pop
mov
jo
jmp
xor
pop
and
inc
cmp
and
jae
add
push
popa
push
inc
or
iret
jb
pop
lds
adc
into
or
push
rep
mov
repnz
iret
std
aam
clc
pop
push
mov
inc
repz
shl
xor
stos
ret
mov
inc
cmc
ja
jp
cld
fiadd
ins
pop
mov
inc
ins
mov
fiadd
push
add
imul
or
dec
(bad)
out
lods
dec
in
jle
ss
sbb
inc
pop
into
jecxz
adc
xor
movs
das
adc
iret
dec
pop
mov
pop
fwait
dec
or
js
xchg
push
into
lods
sub
adc
test
adc
mov
(bad)
repz
pushf
and
icebp
dec
cmp
out
cwde
dec
push
add
test
mov
cmps
sub
sub
mov
mov
push
sub
or
jg
cs
cmp
sbb
push
mov
or
xchg
test
jno
pop
dec
aad
sub
push
push
imul
xor
shr
popf
mov
mov
inc
lods
adc
inc
mov
in
mov
loopne
or
ret
out
mov
idiv
cld
dec
jnp
dec
jl
push
hlt
jp
mov
call
push
arpl
dec
adc
adc
xchg
lods
clc
xchg
push
or
outs
pop
pop
xchg
mov
and
(bad)
mov
bound
lods
jg
cmps
cmp
loope
adc
push
or
cmps
xchg
scas
lahf
imul
mov
dec
test
pop
pop
jne
and
xchg
push
lods
cli
pop
lock
mov
dec
mov
mov
or
fst
and
in
and
push
xor
stos
sbb
jbe
mov
mov
mov
mov
call
mov
dec
jle
in
dec
outs
fcmovb
ret
sub
outs
rcr
push
sti
push
cmp
fs
fimul
add
dec
and
inc
ret
cmp
mov
adc
daa
ret
sti
test
push
xor
adc
xlat
mov
mov
xlat
mov
aaa
ja
sahf
inc
sub
jb
(bad)
jb
xchg
addr16
(bad)
inc
bound
dec
mov
push
ret
and
pusha
xor
shl
and
sti
adc
push
sbb
mov
xor
inc
(bad)
pop
mov
loope
je
xor
mov
aad
push
mov
cs
adc
pop
outs
sbb
shl
sbb
adc
xor
mov
mov
xacquire
xchg
xchg
stos
mov
call
aas
cmp
mov
(bad)
addr16
and
mov
js
pop
jg
xchg
adc
dec
pop
or
ins
jmp
daa
lea
or
inc
int3
push
fistp
stos
mov
jne
push
dec
(bad)
ss
xchg
add
or
jmp
xchg
mov
mov
fwait
pusha
cdq
jge
sub
out
xor
mov
fwait
mov
sub
adc
push
push
shl
xchg
cld
dec
nop
jl
jnp
xchg
(bad)
fmul
sub
dec
in
cdq
dec
ja
inc
rcl
mov
pop
and
jno
dec
mov
mov
push
jae
outs
mov
shr
dec
xor
hlt
loop
loopne
jecxz
mov
popa
jo
xor
pushf
pop
mov
jbe
push
jl
dec
cs
dec
js
xchg
jecxz
sub
in
sbb
call
and
sahf
pop
aam
pop
fstp
lahf
sbb
adc
xor
jge
dec
mov
push
xchg
xchg
clc
xor
push
scas
mov
push
xor
cmp
int
fisttp
(bad)
icebp
adc
sub
inc
sbb
xchg
and
in
xchg
cmp
bswap
clc
jbe
les
sbb
add
pop
lods
lods
pusha
cli
sub
sub
aaa
fnstcw
and
out
jmp
rcl
(bad)
mov
aad
mov
jns
adc
xchg
gs
gs
shl
xchg
iret
mov
aaa
lods
fldenv
(bad)
js
push
sbb
lods
scas
cmp
mov
scas
mov
sub
xchg
xor
fstp
xchg
fcmovnb
mov
dec
add
or
cmps
or
add
add
cli
jb
in
js
loopne
xchg
mov
sbb
xlat
outs
mov
cmp
cdq
jge
sbb
push
fisttp
call
jns
cmps
lock
ficomp
lea
ret
or
fcomp
scas
popf
mov
xchg
into
pop
pop
clc
icebp
add
mov
fmul
add
sar
in
jnp
xor
pop
arpl
(bad)
inc
push
arpl
push
mov
or
bnd
mov
jmp
jae
cwde
and
adc
daa
mov
or
inc
stos
pop
dec
and
lea
and
sbb
int
adc
test
fstp
ins
scas
dec
leave
push
outs
pop
xchg
jns
sub
loope
lahf
push
inc
lock
pop
mov
mov
ret
jns
ja
mov
mov
ins
xor
adc
sbb
fs
add
cmp
jne
je
out
outs
add
push
mov
pop
arpl
and
push
inc
cmp
test
xor
xchg
loope
(bad)
jb
adc
das
cli
jge
pop
push
test
dec
push
movs
cwde
int3
adc
and
stos
outs
in
mov
bound
cmp
neg
dec
test
mov
jmp
std
sub
or
dec
mov
sbb
push
or
dec
xchg
shr
jo
or
cwde
or
cdq
cmp
mov
cs
test
jmp
fwait
(bad)
scas
mov
jge
int3
push
cmps
pushf
sub
call
adc
ja
pop
sub
call
loopne
rcl
pop
(bad)
sbb
int
sti
or
shl
xchg
adc
imul
cmc
neg
stos
sbb
pop
cmp
jmp
inc
fcom
in
int3
jnp
repz
jp
imul
icebp
mov
adc
rcl
out
mov
cmps
loop
push
ja
sbb
jge
cmp
int
push
popw
mov
fcom
fimul
jb
cmp
aaa
test
xor
mov
xor
mov
pop
pop
enter
jbe
cmps
rol
jno
clc
dec
add
popa
jmp
scas
retf
ror
inc
sbb
pusha
mov
mov
int3
inc
cmp
sub
mov
dec
adc
ja
xlat
in
adc
scas
sub
retf
lock
pusha
push
(bad)
xchg
add
sub
pop
nop
repz
sub
mov
pop
adc
sbb
cmp
push
mov
xor
hlt
pop
ffreep
jae
mov
(bad)
ror
xor
jne
push
and
xchg
repnz
xchg
add
(bad)
call
or
mov
retf
(bad)
fnsave
mov
push
out
mov
mov
dec
push
fiadd
jg
cmp
aad
ret
sbb
or
sub
cmps
or
add
jns
(bad)
sub
jmp
fsub
sbb
jle
cmps
adc
jle
cmps
fmul
push
jno
call
fcom
pop
iret
xchg
aas
call
and
jbe
call
(bad)
inc
test
arpl
sbb
pop
addr16
add
xlat
sti
retf
lods
or
dec
xor
mov
fsubr
cmp
cs
out
test
inc
or
mov
call
imul
dec
sub
jge
cmp
shl
lds
gs
xchg
into
push
mov
imul
popf
loope
inc
xor
mov
bound
mov
sub
or
xchg
test
dec
iret
mov
pushf
mov
cmps
pop
xor
add
pop
imul
jbe
loopne
mov
(bad)
adc
adc
pop
mul
test
jmp
and
push
(bad)
div
mov
addr16
pop
out
xor
push
inc
clc
jnp
out
movs
in
pop
push
xor
mov
pop
mov
sub
test
add
ret
add
xchg
aaa
addr16
lods
mov
movs
pop
push
mov
add
shr
test
jmp
pop
inc
mov
scas
mov
pop
sbb
fst
fdivr
into
ret
jo
cli
xchg
push
outs
inc
sbb
jmp
push
pop
inc
test
jmp
repnz
data16
outs
pusha
xchg
jb
shl
ins
pop
int3
in
out
pop
jns
inc
leave
xchg
mov
or
jmp
mov
je
adc
adc
mov
aaa
frstor
pop
inc
sbb
loop
inc
in
dec
xor
into
cs
mov
mov
jmp
stc
xchg
jmp
push
cli
mov
(bad)
call
pop
loopne
out
jae
sbb
in
push
xchg
mov
call
(bad)
sbb
test
pop
cmps
push
sbb
ins
fadd
out
int3
mov
ucomiss
inc
inc
call
and
pusha
mov
or
lahf
dec
add
data16
(bad)
pop
ss
test
mov
pop
outs
push
xchg
pop
call
sbb
pop
fild
sub
jno
mov
mov
sbb
mov
mov
mov
test
sbb
loope
loop
imul
(bad)
add
jl
inc
xor
shr
pop
clc
lahf
out
test
pushf
fstp
lods
pushf
add
push
inc
ret
out
xchg
aaa
fbld
fld
mov
inc
dec
xchg
sbb
ja
fdiv
mov
enter
pop
retf
mov
pop
les
mov
test
or
xchg
xchg
or
and
cmps
xchg
adc
cmps
rcl
scas
retf
inc
cmp
xor
mov
daa
sbb
push
push
xchg
or
movs
adc
xor
dec
and
popf
out
pop
jae
mov
cmc
dec
jbe
adc
mov
retf
adc
cli
sbb
sbb
cmp
jle
shr
xor
add
das
xchg
mov
add
ret
dec
pop
mov
and
add
sub
ror
add
dec
out
fdiv
mov
mov
aad
scas
cmps
xor
mov
pop
jge
fstp
mov
popf
loop
dec
fldcw
stos
lea
and
enter
xor
xchg
mov
lea
adc
xchg
test
icebp
stos
add
cmp
jmp
(bad)
jecxz
pop
stos
div
fcmovnu
push
loope
mov
pop
or
inc
push
(bad)
(bad)
jle
sub
sub
iret
sbb
mov
ror
push
mov
sbb
fprem1
dec
scas
repz
add
jg
pusha
inc
(bad)
xchg
lods
loop
mov
jp
cmp
cmp
stos
mov
call
aas
cli
cld
pop
in
xchg
cmp
push
mov
test
push
pop
neg
add
push
add
xlat
push
inc
dec
std
mov
sbb
jg
dec
aaa
jg
loope
lea
mov
push
ins
in
xor
out
lods
aaa
(bad)
ror
push
les
lods
inc
xchg
fst
(bad)
lds
es
mov
jmp
sar
test
dec
sahf
(bad)
ins
and
jl
pop
push
loop
adc
mov
add
data16
test
ror
xlat
cmps
fld
pop
inc
iret
repnz
push
retf
mov
xlat
push
sbb
fild
pop
sbb
push
adc
enter
xchg
imul
push
mov
jle
test
outs
adc
mov
dec
jp
dec
movs
hlt
and
out
jae
sbb
and
les
ja
adc
fbld
imul
and
and
inc
movs
call
scas
aaa
cli
ds
adc
xchg
sub
test
cmp
push
js
jle
hlt
loope
fisub
aaa
fld
and
push
mov
pop
or
adc
call
xadd
xchg
or
mov
loope
dec
iret
push
jl
adc
int
sahf
xor
add
jge
pop
(bad)
imul
into
sbb
out
pop
(bad)
and
pop
lock
ins
rcr
mov
pop
pop
int
mov
scas
sahf
cld
nop
mov
dec
stc
ins
adc
fidiv
call
in
mov
pminsw
and
mov
dec
(bad)
mov
leave
add
dec
ja
lea
sbb
cmp
mov
dec
sahf
jae
xchg
sub
clc
xor
scas
fwait
sbb
sbb
pop
cwde
in
jmp
push
pop
rcr
sub
movs
sub
dec
xor
sbb
mov
rcr
fadd
or
and
jmp
xlat
mov
in
fwait
scas
pop
stos
jbe
jmp
cmp
popa
arpl
xlat
out
movhps
jbe
or
arpl
dec
je
push
adc
mov
cli
push
loop
sub
mov
push
push
or
jl
jns
or
push
je
lea
popf
add
in
pop
repnz
outs
add
sahf
popa
shl
xor
cli
mov
loop
sbb
push
hlt
cmp
pop
mov
xchg
or
and
dec
mov
cmp
bound
retf
jo
jl
in
add
scas
enter
sub
mov
push
sub
pop
dec
or
scas
pop
popa
outs
daa
mov
push
sub
cld
mov
xchg
(bad)
jecxz
imul
jnp
xor
jle
jle
icebp
(bad)
push
fimul
ss
and
jae
ror
jle
dec
js
jp
retf
dec
(bad)
repnz
out
ins
mov
and
leave
xor
xor
inc
fsub
xor
cli
xchg
cld
adc
push
xchg
call
pop
cmp
cmps
cmps
enter
inc
jmp
cld
movs
test
stos
pop
xor
mov
scas
pop
inc
xor
ficom
jo
(bad)
xchg
fstp
inc
shr
arpl
dec
or
sbb
jle
outs
adc
jmp
push
inc
daa
add
rcr
adc
dec
cmp
shl
hlt
xchg
aam
sub
pop
xor
sahf
fldcw
call
sbb
jmp
shr
mov
inc
jae
cmps
mov
fstp
push
ret
jbe
in
ss
dec
add
mov
jmp
inc
pop
mov
jl
mov
cmp
lahf
ja
mov
mov
movs
push
push
jecxz
pushf
push
pop
out
pushf
xchg
retf
mov
mov
loop
enter
xor
mov
in
cwde
jp
pop
sbb
retf
scas
xor
xchg
and
mov
out
popf
nop
shl
cld
xchg
push
ins
int3
stc
jecxz
pushf
add
mov
aad
pop
mov
aaa
push
cdq
aas
je
aam
call
dec
cmp
push
xor
out
inc
ins
in
int
sahf
xchg
mov
addr16
dec
sbb
sar
call
pusha
pop
retf
xor
pushf
and
xchg
into
mov
lods
dec
dec
ficom
sub
add
push
jno
pop
(bad)
loope
cmp
push
sar
test
add
bound
sbb
nop
dec
push
push
scas
mov
and
sti
xor
jmp
or
das
dec
jno
ins
sub
mov
prefetch
cwde
jnp
xchg
push
cmp
dec
(bad)
addr16
test
pop
fs
push
nop
outs
into
or
aam
xchg
into
mov
fild
lea
(bad)
cmp
sbb
xchg
cmp
adc
sbb
push
dec
cwde
sbb
call
dec
push
nop
test
shr
add
cmp
adc
mov
sbb
sar
inc
ds
cmps
gs
stos
pop
add
and
repnz
sub
fst
pop
pop
repz
cmp
pusha
cwde
mov
xor
aad
mov
in
or
je
popa
dec
js
xchg
mov
rcl
mov
es
xlat
mov
call
es
mov
push
xor
(bad)
test
fisttp
loop
std
mov
jo
rcl
in
add
dec
xchg
popf
mov
mov
lods
and
cld
mov
enter
into
cmp
pop
(bad)
jmp
or
fisttp
std
in
sti
jmp
dec
lods
imul
into
sub
xchg
dec
enter
inc
pop
mov
pop
pop
outs
ficomp
loope
xchg
xchg
push
push
leave
xchg
cwde
lea
cmps
(bad)
mov
add
movs
jecxz
int
sub
pop
test
mov
stos
push
lea
mov
push
jne
das
in
or
shl
push
add
lahf
push
pop
repnz
imul
mov
cli
cmp
repz
dec
loopne
mov
pop
jae
mov
in
fistp
adc
icebp
sub
cmp
jae
xor
(bad)
lds
(bad)
les
fsubr
xchg
(bad)
ss
adc
or
or
push
cld
rcr
jo
rcl
ins
mov
adc
cmp
outs
push
mov
scas
loopne
push
sbb
les
popa
sbb
int
cmp
add
addr16
mov
fisub
iret
xchg
jecxz
cld
aad
xchg
int
push
add
out
in
lods
std
test
lea
xor
sub
in
sub
lods
mov
mov
in
je
iretw
inc
aam
xlat
mov
scas
aam
push
js
add
or
cdq
sahf
fstp
je
sahf
mov
js
std
sbb
mov
stos
jns
retf
xor
cmps
loopne
or
mov
inc
pop
fmul
in
hlt
jno
daa
shr
add
sbb
pop
imul
aam
pop
xor
(bad)
push
adc
mov
into
addr16
cmp
pop
daa
jp
iret
push
gs
icebp
inc
ins
pushf
sub
push
jb
pop
jle
call
mov
cwde
or
push
movs
test
and
add
fnstsw
jg
stos
push
pop
adc
stos
xchg
pop
repz
pop
adc
jecxz
movs
mov
add
dec
or
movsx
mov
mov
out
repz
enter
(bad)
push
xor
pusha
cmc
neg
xchg
inc
mov
(bad)
xor
(bad)
mul
adc
pop
inc
in
in
ret
xchg
jg
aas
lods
test
mov
mov
mov
sbb
inc
or
mov
add
pop
mov
inc
in
fist
mov
dec
popa
xchg
fmul
mov
mov
add
not
fisub
inc
adc
rol
mov
arpl
inc
ins
int3
in
xor
dec
dec
shl
sub
mov
int3
ror
lds
sbb
push
rep
cmp
bnd
mov
jno
outs
sbb
(bad)
xchg
test
pop
push
lods
enter
xchg
cmp
ficomp
inc
push
sub
pop
dec
sub
cwde
es
out
jle
add
clc
shl
sub
shr
cli
sbb
cmp
pusha
scas
lock
dec
(bad)
sub
xor
inc
mov
mov
outs
in
fcmovnu
and
jne
stos
add
mov
xchg
stc
pop
les
mov
aad
and
stos
adc
fs
xchg
pop
call
pop
pop
add
idiv
and
inc
ret
mov
jbe
scas
cli
mov
arpl
xchg
push
call
test
lock
sbb
xor
or
fldpi
fsubr
sbb
cld
mov
out
xor
dec
lds
rcl
loopne
cmp
test
fild
loop
push
cmp
sbb
cmp
daa
div
in
nop
xchg
or
sbb
xchg
in
add
gs
cmps
dec
pusha
test
or
lock
mov
je
xchg
stos
lods
mov
test
add
ins
mov
ret
jge
jnp
mov
lahf
mov
or
shl
test
pop
popa
adc
enter
pop
mov
das
xlat
call
cmps
out
pop
push
or
jmp
adc
iret
mov
add
inc
push
je
dec
xchg
mov
jns
aaa
stc
movs
or
inc
jnp
lods
das
mov
in
sbb
inc
xor
and
jle
scas
inc
arpl
jge
or
add
xchg
and
test
popa
test
add
ror
mov
mov
jmp
jge
mov
popf
or
push
sbb
cmp
loop
sbb
pop
das
pop
into
(bad)
jno
mov
mov
jb
pop
rol
xor
(bad)
scas
pop
push
fs
sbb
cmp
cmp
mov
mov
inc
jg
push
mov
aaa
or
inc
retf
mov
loope
jo
out
xchg
cld
sub
and
sub
addr16
(bad)
popf
stos
adc
mov
xor
je
cld
pushf
test
inc
cs
std
or
popf
sti
sbb
or
bound
jp
pop
cmp
out
pop
rol
out
int3
cld
push
sbb
sub
aas
mov
pop
add
in
sbb
js
mov
push
add
ss
mov
push
mov
xor
cs
jmp
test
scas
loop
adc
stc
push
lods
dec
cmp
out
sbb
jns
out
cmp
imul
mov
or
push
sub
or
sub
icebp
cdq
es
sub
aam
mov
mov
jne
adc
lds
fs
inc
push
pop
mov
(bad)
scas
or
lods
push
sbb
out
push
push
in
fisub
jmp
fisub
daa
cmps
cmp
jp
out
jecxz
aam
pop
scas
xchg
shl
or
dec
pop
out
test
pop
fdiv
test
jmp
dec
sbb
mov
daa
jo
out
inc
sbb
hlt
es
push
movs
aaa
in
std
mov
inc
es
mov
jno
sbb
cmp
jp
mov
sahf
dec
xchg
clc
sub
cmp
in
add
jmp
jmp
push
sbb
cmp
sbb
pop
xchg
fimul
pop
test
add
inc
mov
jae
test
cmp
(bad)
and
(bad)
enter
lds
ret
dec
data16
or
cli
mov
rcr
dec
test
dec
cmp
call
hlt
repz
push
call
dec
je
push
test
ins
dec
and
or
jnp
add
dec
in
and
xchg
mov
(bad)
lahf
xchg
call
push
test
jb
movs
mov
std
stos
or
jne
jmp
xchg
js
scas
addr16
xor
xor
mov
inc
(bad)
rol
outs
fscale
xor
leave
fxch
mul
jp
ja
mov
lahf
mov
(bad)
shl
sub
in
test
std
adc
cwde
shl
jne
or
push
or
scas
mov
neg
jmp
cmp
stos
cmp
xchg
sub
test
adc
jns
ret
inc
cmps
sub
data16
xchg
and
int
sahf
aam
sbb
jmp
dec
xor
popf
inc
pop
in
mov
dec
jge
repnz
jne
push
fidiv
or
mov
add
movs
test
fs
inc
jmp
call
mov
push
pop
ss
stc
jecxz
ret
jmp
jg
xchg
jg
sbb
cdq
mov
cmps
push
xchg
jge
cli
xor
jno
dec
pop
mov
repnz
mov
adc
jb
out
or
dec
add
mov
sbb
lahf
xor
mov
mov
int3
push
imul
int3
cmp
loope
push
push
push
jo
fist
xlat
push
jle
out
les
into
jl
adc
inc
mov
nop
adc
jbe
xchg
pop
mov
pop
cmc
rcr
mov
lock
push
pusha
ret
(bad)
mov
out
ins
jnp
inc
stos
mov
pop
aas
fcom
or
mov
or
gs
idiv
or
xchg
outs
and
pop
ins
loope
popa
jbe
cmp
push
jne
jbe
add
into
lahf
and
(bad)
idiv
(bad)
xchg
or
mov
mov
je
add
and
mov
mov
push
push
pop
mov
mov
mov
mov
xchg
jne
xchg
pop
xchg
call
les
icebp
cmovnp
and
sbb
test
or
or
add
push
mov
in
lea
dec
push
sub
fisub
xchg
and
cmps
sbb
dec
icebp
js
add
mov
and
fwait
hlt
cmp
ret
loop
push
outs
pop
(bad)
fmul
ins
rol
jb
ret
test
inc
mov
jg
or
xchg
ins
mov
jb
dec
mov
addr16
cmp
scas
pusha
(bad)
mov
lods
fwait
cmp
cdq
ds
push
sahf
shl
jns
dec
cmp
aas
jno
mov
jg
fwait
xor
lahf
inc
cmps
call
inc
sbb
cs
arpl
ss
inc
cmc
sbb
lods
xchg
jecxz
and
sbb
mov
mov
scas
dec
dec
sub
std
mov
shr
add
push
push
xchg
push
pop
pop
popa
test
push
dec
js
adc
lods
sub
and
sub
outs
push
sub
jae
cdq
outs
jmp
inc
xchg
fs
gs
shr
int
xchg
enter
pop
in
fimul
dec
lods
xchg
test
icebp
mov
pop
xchg
(bad)
pop
mov
pop
sbb
stc
sub
mov
xchg
loopne
mov
xor
xchg
push
clc
(bad)
jmp
sti
out
pop
sbb
sbb
ds
ins
dec
cmp
xchg
pusha
nop
xchg
cmp
pop
stc
jecxz
jp
push
(bad)
loope
cmc
mul
mov
nop
sti
push
dec
clc
movs
dec
cmp
sti
add
mov
jge
mul
hlt
jle
jbe
ds
mov
into
hlt
test
test
xor
adc
xor
cwde
(bad)
dec
xlat
stos
lock
xlat
mov
mov
das
rol
cdq
sbb
sti
sahf
pause
jge
rol
xchg
inc
hlt
movs
ins
(bad)
pop
ss
xor
adc
pop
jnp
(bad)
into
fdivp
sbb
bound
mov
xor
adc
je
out
xchg
dec
(bad)
out
nop
mov
sub
fiadd
jmp
or
xlat
leave
(bad)
pop
mov
mov
stos
mov
mov
or
shr
mov
pop
xchg
sar
mov
outs
dec
popf
jl
pushf
sub
pop
xchg
push
test
aam
fcmovb
mov
call
test
sub
cmp
shr
cld
sbb
scas
lea
in
and
std
idiv
jbe
hlt
lahf
not
xchg
cmp
(bad)
jno
imul
test
ja
aaa
push
jl
mov
out
daa
dec
pusha
cmc
gs
xor
pop
std
mov
loop
cmp
push
add
cmp
xor
or
loope
xchg
add
xchg
ret
or
leave
addr16
adc
stos
push
scas
sub
pop
push
adc
(bad)
and
inc
push
jns
sbb
retf
xchg
xchg
test
test
cmps
popa
and
push
dec
ss
mov
daa
rol
addr16
popa
jmp
mov
xchg
loop
ror
add
jae
adc
retf
mov
aas
mov
and
popa
sub
enter
and
or
dec
int
fxch
inc
dec
les
xchg
enter
ror
or
dec
push
cmp
pop
mov
shl
mov
in
ret
sar
inc
jmp
or
xor
outs
inc
rol
fs
mov
cmps
xchg
and
push
mov
call
gs
out
cmp
jg
mov
mov
fmul
rcl
sbb
(bad)
pushf
inc
out
ds
jbe
mov
mov
sahf
xor
in
psadbw
retf
inc
lea
pop
fdivrp
ficomp
out
test
mov
inc
adc
popf
(bad)
scas
add
inc
std
dec
push
mov
lock
popf
xchg
in
lahf
std
pushf
xor
xchg
es
(bad)
xchg
test
ins
jo
lahf
and
icebp
jbe
je
cmp
jecxz
mov
jb
inc
(bad)
adc
or
xor
mov
lahf
pop
add
hlt
(bad)
push
push
dec
jo
jne
xchg
test
leave
push
stos
jecxz
movs
cmp
mov
aam
retf
lock
mov
lds
lods
test
dec
pop
ins
mov
addr16
fidivr
push
jp
pop
enter
adc
je
inc
mov
cdq
aad
xchg
and
fmul
mov
out
sbb
ins
jns
xchg
cmps
jmp
mov
mov
es
lods
mov
or
xor
gs
sar
fst
sub
or
adc
push
push
mov
adc
mov
fadd
mul
stos
add
loope
push
in
add
arpl
push
jne
ret
fmul
ret
pop
and
(bad)
std
xor
or
mov
adc
cs
fwait
ret
cwde
and
sar
push
lea
cmps
xchg
inc
sbb
jp
psubw
fwait
das
imul
push
js
cmp
pop
jecxz
adc
popa
and
add
in
add
dec
imul
retf
cmp
mov
or
mov
outs
test
aaa
adc
iret
not
push
push
mov
mov
ror
jno
imul
lea
cmc
adc
mov
lods
shl
add
int
sub
shl
dec
sub
sub
(bad)
lahf
test
or
push
sbb
mov
fwait
addr16
mov
lds
push
test
es
jmp
pop
cs
jmp
mov
xchg
sbb
mov
push
xor
add
sbb
jno
cmps
xor
or
xor
push
pop
call
aaa
out
psubq
into
inc
je
mov
inc
int3
int
and
stc
or
sbb
sub
xor
loopne
inc
jle
into
or
fsub
fild
mov
and
mov
pop
cmp
sbb
adc
aam
loop
sub
add
push
in
ins
xchg
xchg
dec
sub
jo
xchg
pop
mov
dec
inc
sbb
rcl
stos
xor
mov
push
cmp
mov
xor
jg
stos
mov
je
push
inc
jle
icebp
inc
add
test
sbb
sbb
(bad)
repz
aam
lods
mov
ds
add
push
(bad)
add
in
pop
inc
add
cmp
sbb
xchg
in
cdq
lahf
and
sub
pusha
ins
(bad)
movs
data16
jnp
inc
adc
sbb
stos
jnp
pop
pop
test
int
push
pushf
dec
pushf
or
mov
mov
in
clc
xchg
out
push
pop
repnz
pop
call
es
out
mov
xor
ins
mov
cmps
shl
push
rcl
cs
and
mov
mov
dec
(bad)
cmp
cmp
and
invd
fcomp
mov
push
mov
or
mov
mov
mov
lea
loope
or
adc
push
sub
arpl
out
je
ins
xor
mov
inc
in
(bad)
div
cmps
adc
adc
jp
sbb
jmp
xchg
xchg
outs
mov
dec
push
(bad)
xchg
lods
pushf
mov
mov
jne
jecxz
cld
inc
xchg
aad
jle
aas
int3
push
fbstp
xor
mov
fwait
cwde
xchg
adc
mov
dec
jmp
(bad)
mov
push
or
adc
(bad)
cmps
ja
pushf
mov
cs
mov
mov
xor
loope
or
and
push
sub
dec
inc
inc
push
sbb
mov
jmp
dec
mov
(bad)
fisub
push
push
sub
jge
and
in
data16
inc
adc
ins
retf
mov
jns
mov
out
inc
(bad)
adc
dec
cwde
stos
sahf
repz
imul
adc
test
repz
aas
or
push
cli
inc
dec
cmps
mov
cmove
rcr
ins
retf
loop
add
inc
in
pop
ret
and
xchg
(bad)
retf
pushf
fsubr
xchg
int3
or
fsubr
inc
bnd
dec
sti
mov
mov
or
inc
inc
cmp
inc
inc
idiv
or
adc
repz
cmp
jae
cmps
push
inc
ja
mov
rep
ds
jnp
mov
cwde
imul
adc
out
mov
dec
enter
add
pop
jmp
xor
cmp
or
das
leave
cmc
mov
stc
(bad)
leave
sub
and
movups
stos
fcomp
mov
shr
add
push
cmp
mov
repnz
loopne
push
sub
pop
out
add
pushf
xchg
test
pop
gs
jl
or
cld
jnp
mov
repnz
mov
vmaxsd
dec
jecxz
xchg
ins
lds
add
jae
push
xchg
ficom
mul
leave
sub
xchg
mov
addr16
lods
cdq
cdq
push
mov
cdq
repz
push
xchg
ja
pop
xchg
jbe
popf
mov
xor
ins
pop
lock
xchg
es
mov
loop
movs
js
rol
in
mov
mov
sub
ror
dec
sub
push
mov
inc
int
pop
(bad)
popf
cmps
add
repnz
sub
outs
mov
ds
mov
es
lods
das
push
stc
inc
cdq
movs
test
add
hlt
in
pushf
xchg
sub
mov
les
(bad)
lock
loopne
push
pop
mov
cmp
test
cmp
mov
lock
sub
mov
cmp
inc
lods
hlt
inc
dec
ret
pop
sbb
xchg
test
imul
mov
push
jno
sar
push
sub
loope
test
mov
outs
int3
dec
mov
data16
shl
jmp
test
pop
mov
mov
outs
adc
jg
retf
fidivr
sub
sti
cli
and
jns
xor
xchg
push
dec
xchg
ret
adc
lds
loopne
fiadd
loop
mov
outs
sbb
xor
pop
xlat
xchg
push
scas
add
jg
daa
or
cdq
fld
fld
pusha
push
rcr
adc
jg
xor
add
sbb
adc
sbb
es
push
ss
mov
mov
jnp
loop
add
adc
mov
or
jg
ror
pop
bound
icebp
addr16
push
popf
mov
enter
pop
and
fwait
xor
dec
cmp
sub
and
hlt
pop
mov
add
gs
push
les
aas
pop
add
xor
and
cmp
push
jge
outs
push
xchg
(bad)
cmp
jae
mov
fmul
fbld
mov
dec
enter
jmp
mov
dec
xchg
loope
fstp
test
jmp
lock
mov
mov
nop
push
je
sub
lea
out
dec
test
cli
repnz
cmp
adc
rol
ret
(bad)
mov
shl
dec
jmp
loopne
lahf
mov
lea
mov
(bad)
int
in
and
(bad)
popf
ds
les
push
jge
mov
xor
mov
aam
fnstcw
inc
adc
mov
dec
ja
and
popa
out
repnz
push
aam
cmp
xchg
ficom
imul
mov
inc
or
pusha
out
push
shl
imul
shr
leave
nop
adc
ins
push
add
std
ins
dec
adc
cld
xchg
mov
jecxz
aad
xlat
mov
xchg
fadd
xor
lock
lahf
icebp
je
pop
mov
ja
mov
cmc
mov
ds
(bad)
mov
cdq
pushf
xor
mov
jb
je
movs
cmp
adc
dec
ficom
push
out
cmps
dec
rol
mov
mov
jp
call
and
retf
jne
sbb
mov
lods
aad
mov
cmc
jae
fsub
je
sbb
cmp
aad
xor
cmp
scas
xchg
cmp
(bad)
adc
mov
jg
and
shl
stc
test
pop
fild
pop
out
push
push
jge
sub
pop
or
mov
or
and
fistp
push
push
fcomp
clc
pop
push
xlat
jns
div
cmp
pushf
jnp
mov
out
xlat
pop
dec
data16
cdq
outs
xchg
imul
sar
jae
push
pop
sbb
cmp
popf
scas
fneni(8087
scas
sar
ja
movs
pop
mov
stc
dec
xchg
arpl
push
dec
int
(bad)
scas
cli
call
and
or
and
addr16
repnz
add
mov
inc
bound
fs
sub
(bad)
bswap
stc
std
ja
icebp
add
xchg
jbe
rcl
sub
out
and
pop
sub
shl
and
out
fdivr
mov
push
cmp
inc
pop
pusha
inc
les
out
sahf
lods
cld
nop
test
xchg
sbb
std
pop
mov
(bad)
cli
daa
dec
xor
shl
fimul
jmp
stos
pop
xor
repnz
xor
and
xor
jne
xchg
hlt
jecxz
setb
call
mov
dec
addr16
jbe
js
xor
mov
or
movs
in
mov
pusha
dec
xchg
ror
aad
mov
xchg
xor
cwde
fdivr
dec
xchg
aaa
inc
push
loop
fldenv
int
fidivr
lahf
mov
in
clc
push
jmp
sub
jb
fwait
cmp
mov
ss
cli
inc
push
imul
sbb
loope
jae
test
jno
icebp
je
bound
fistp
xor
jl
popa
lahf
jmp
call
sub
and
popf
scas
adc
cs
ins
mov
imul
ror
mov
cmp
in
cdq
not
and
adc
or
add
pop
adc
or
jae
adc
outs
std
mov
add
bound
fcomi
(bad)
clc
and
cmp
stc
mov
or
xchg
xchg
cmps
xchg
and
jge
cmps
(bad)
push
addr16
das
sbb
or
pusha
ja
ja
adc
popf
push
pop
adc
xchg
xchg
inc
cld
pop
and
repz
loopne
xlat
fmul
ins
dec
push
ss
fsubr
and
cmp
or
mov
pop
and
int3
cmps
sub
(bad)
sub
dec
aaa
jo
pop
xchg
jnp
xchg
push
jae
loope
push
sbb
cli
and
pop
inc
add
sti
imul
sub
inc
xchg
lods
mov
jge
out
sub
push
mov
pop
data16
mov
pop
test
xchg
movs
pop
inc
sub
cmp
in
pop
js
test
xor
inc
loopne
push
js
cmp
dec
xchg
xchg
sub
jge
test
icebp
add
lods
dec
into
mov
sub
dec
mov
adc
aad
ja
sub
jl
aas
cmp
mov
mov
mov
pushf
sub
dec
add
or
pop
sahf
mov
imul
call
loopne
cmp
es
push
or
loope
pop
mov
or
stos
xor
inc
pop
cs
cmp
(bad)
cmp
imul
enter
xchg
add
cld
inc
std
repnz
pop
mov
cmc
inc
test
push
pop
out
push
jle
cmp
jno
xchg
push
xor
pop
add
and
jmp
cdq
inc
or
jne
pop
xor
loope
push
cmp
pop
inc
ror
div
jg
call
repz
and
nop
adc
test
or
xchg
fist
push
pop
sub
push
cmp
cmp
xchg
shr
pusha
inc
jmp
mov
lea
in
pop
imul
push
or
adc
adc
push
addr16
jbe
mov
ins
mov
fsub
cmp
fcom
std
add
mov
std
lahf
cmp
leave
or
int3
push
into
jb
sbb
(bad)
mov
xchg
xor
call
sar
xor
cmp
pop
dec
pop
jb
mov
in
retf
data16
sbb
lods
rcl
xchg
int
fbstp
jg
loopne
xor
je
(bad)
repnz
and
jnp
sub
add
pop
lods
stos
add
scas
test
sti
inc
push
add
add
into
neg
mov
jecxz
loopne
lods
outs
(bad)
mov
pop
jnp
out
inc
mov
mov
jl
or
int3
cwde
test
xchg
inc
lods
rcr
mov
(bad)
push
enter
sti
pop
cmp
sub
lods
xchg
fwait
daa
loopne
dec
cmps
jns
inc
inc
jmp
mov
adc
inc
sub
push
(bad)
mov
jae
jne
cmp
mov
pop
movs
cs
pop
daa
lahf
add
shr
and
mov
xchg
out
loopne
sub
sbb
(bad)
repnz
sub
mov
call
mov
push
lods
sar
fisub
mov
xor
jg
int
xchg
sub
push
mov
enter
mov
outs
shl
mov
or
in
fwait
pusha
bound
xchg
and
sub
call
das
in
out
popa
outs
or
push
leave
popa
fidiv
mov
imul
and
dec
and
movs
or
popf
shr
and
dec
mov
inc
cmp
ret
out
dec
aam
outs
pop
dec
iret
int3
aas
rcl
rcr
pop
inc
(bad)
sub
ins
rcl
and
sub
sbb
stos
ins
adc
(bad)
int3
test
dec
lds
pop
shl
mov
pop
or
jge
or
cmp
pop
sti
mov
fwait
movs
jnp
jl
outs
les
in
fidiv
scas
sbb
adc
loopne
sub
jmp
add
lds
sub
mov
inc
or
pop
stos
lods
aam
mov
inc
jecxz
adc
or
imul
int3
add
jae
add
push
pop
sbb
or
test
lods
fwait
mov
daa
jge
xchg
mov
xor
test
jnp
mov
stos
clc
cmps
mov
xor
sbb
scas
int
jns
xchg
icebp
adc
or
dec
(bad)
dec
(bad)
aas
xor
dec
jecxz
cli
bound
and
icebp
sub
pop
stos
cmp
push
retf
shl
jecxz
shr
mov
pop
and
(bad)
and
iret
out
pop
mov
jp
or
mov
fwait
test
xor
mov
clc
or
ror
add
pusha
retf
adc
mov
pop
lea
pop
jmp
sbb
pop
pop
fbld
pop
arpl
push
fmul
mov
push
nop
mov
xchg
add
or
rcr
scas
cs
sub
outs
inc
movs
mov
cmp
dec
pop
sbb
stos
mov
mov
cmp
out
push
add
loope
repnz
dec
movs
lods
scas
sub
lock
adc
sti
or
ss
cli
mov
push
mov
aas
repz
sub
retf
xor
sub
js
xor
mov
fild
mov
out
outs
adc
aaa
pop
mov
or
fld
dec
fisttp
test
je
jmp
inc
fld
test
sub
mov
jecxz
push
xchg
cmpps
dec
out
out
addr16
jmp
mul
stos
shl
scas
adc
mov
aam
xchg
retf
ror
jae
clc
int3
sti
adc
rcr
sbb
call
adc
push
repz
mov
lahf
push
cmps
mov
lahf
int
inc
dec
push
fnstenv
add
sar
pusha
push
aas
ja
mov
inc
and
mov
clc
xor
mov
and
pusha
jns
mov
xchg
mov
cmp
fwait
or
jmp
sbb
pop
fdivr
nop
in
loopne
dec
sub
jb
call
cmp
cwde
and
dec
(bad)
cli
cmp
std
movs
les
ret
jl
icebp
test
in
in
and
sbb
inc
repz
inc
loopne
gs
movs
jecxz
cmovnp
sahf
arpl
sar
add
enter
mov
cwde
and
sti
pop
jb
into
jo
repnz
dec
repz
mov
movs
daa
jae
(bad)
xor
shr
pop
push
lahf
mov
(bad)
stos
pop
ficomp
or
int3
pop
push
sbb
adc
jae
jo
sbb
sbb
adc
adc
repz
or
xor
mov
xlat
xchg
jb
or
inc
into
cmp
cmp
cmp
xchg
mov
lock
xchg
fstp
jmp
dec
retf
xchg
adc
into
loop
aaa
inc
repz
sbb
je
pushf
fnstenv
mov
jecxz
push
xchg
push
data16
jo
lods
inc
clc
push
xor
idiv
sub
fimul
outs
test
mov
mov
push
fdivp
in
iret
mov
inc
ins
cli
push
icebp
adc
ins
jb
add
inc
adc
mov
scas
xchg
popa
aas
or
ds
das
xor
jge
out
leave
in
cmp
xchg
lea
outs
cmp
sub
dec
imul
push
inc
mov
js
jno
retf
loop
xchg
sbb
inc
out
fwait
rcl
sub
cs
push
mov
push
inc
add
sbb
mov
mov
sbb
cmp
push
in
xchg
jne
cmc
push
inc
push
shl
add
mov
test
jae
ror
adc
fwait
pushf
clc
scas
imul
dec
ins
in
loop
add
out
neg
stc
mov
pop
cmp
or
add
in
pop
scas
loop
jge
das
imul
inc
inc
sbb
daa
sti
sbb
(bad)
call
and
cmc
cs
mov
sub
sti
loop
cmp
inc
dec
icebp
xchg
hlt
call
stos
sub
inc
arpl
xor
ss
pop
mov
jbe
and
std
in
dec
push
in
jle
aaa
cmp
xor
pop
loopne
sub
bound
xor
call
leave
mov
pop
js
xor
ror
ds
jge
scas
dec
je
xchg
jne
adc
outs
xchg
jnp
sub
je
leave
test
fs
xor
push
inc
loop
sbb
repnz
and
in
mov
int3
out
aam
fstp
adc
and
mov
adc
dec
cwde
push
mov
and
push
mov
add
dec
xor
adc
popa
std
inc
cdq
fadd
jmp
cmps
mov
lods
cmp
and
lock
mov
daa
jne
ins
ss
int3
test
mov
pop
ins
gs
jnp
pushf
fucomp
in
add
fnsave
retf
pop
xor
jnp
dec
pop
jmp
cmp
adc
mov
xchg
test
jns
jne
fs
daa
outs
xor
and
xor
fcmovnu
outs
rcr
out
add
retf
in
mov
inc
push
pop
test
xor
cmp
dec
push
jp
cmp
dec
(bad)
arpl
dec
xor
test
fs
mov
neg
outs
jns
xchg
and
in
add
rol
cdq
sub
jl
mov
and
push
fwait
and
mov
cmp
mov
sbb
arpl
sbb
pop
fstp
jno
mov
bound
push
int
adc
stos
and
push
adc
lds
test
cs
push
or
jno
add
leave
ins
xor
ss
xchg
rcl
cdq
icebp
dec
pop
push
lea
sub
out
push
js
out
lock
into
mov
push
cmps
in
pop
push
popa
pop
test
rcr
out
or
jmp
cmp
pop
aaa
sub
icebp
jg
ror
or
or
sub
test
ss
loop
loop
pusha
sub
sub
ins
inc
shr
mov
cmp
lods
test
pushf
pop
jae
test
add
xor
jno
inc
imul
sub
es
adc
fadd
mov
mov
mov
add
test
std
fldenv
inc
in
loop
sbb
mov
sbb
(bad)
ror
jbe
shr
dec
fcom
cmc
sahf
test
jbe
adc
cmp
jl
rol
mov
jl
xchg
fs
adc
xchg
inc
adc
pop
pop
retf
cmps
iret
push
out
bound
mov
mov
int
mov
fs
(bad)
into
in
lods
mov
(bad)
int3
retf
sub
mov
out
int3
jnp
dec
sbb
ret
sub
adc
add
data16
inc
mov
call
inc
test
push
inc
jmp
in
addr16
adc
fiadd
sbb
pop
imul
inc
out
jecxz
jb
loop
add
pop
sbb
mov
inc
push
cmp
dec
popa
std
sbb
adc
adc
les
icebp
std
int
pop
and
test
sub
push
test
push
data16
adc
aaa
or
out
pop
sub
(bad)
and
xor
cld
push
and
movs
int
cmp
or
jne
mov
mov
fcmovu
mov
test
xchg
ins
sbb
xchg
repnz
mov
sub
mov
jb
cmp
shl
push
cmc
jmp
enter
inc
arpl
push
sub
lock
mov
push
mov
xor
inc
retf
cmps
jl
or
pop
jmp
sahf
ret
mov
sub
ficom
push
push
clc
jmp
pop
jle
mov
pop
and
jp
aam
in
xchg
inc
jnp
cmp
push
xchg
dec
sbb
in
fidiv
cli
push
ins
push
cmps
dec
arpl
mov
push
sbb
mov
mov
sbb
fucomp
push
sbb
(bad)
arpl
jp
aad
mov
mov
xchg
aas
pand
xchg
inc
jmp
jno
cmps
idiv
fcomp
and
int
add
push
pop
aad
stc
aad
mov
adc
or
int
or
lock
and
jp
adc
retf
mov
mov
inc
pop
jmp
or
jbe
hlt
adc
inc
data16
hlt
sbb
loop
cmp
cmp
inc
sbb
leave
jmp
inc
pop
fcomip
jp
jnp
pop
inc
retf
popf
dec
movs
pop
dec
jp
pusha
out
jne
inc
in
sahf
mov
jns
xlat
cdq
adc
mov
cmp
loopne
jp
test
shl
xlat
nop
and
xchg
iret
mov
sbb
cmc
popf
pop
add
push
fxch
adc
loope
ss
ret
cmp
add
mov
cli
pusha
add
sub
and
pop
scas
jg
adc
push
fwait
xor
xchg
ins
sub
stc
push
minps
xor
jg
xchg
sbb
push
jge
and
sbb
add
dec
ja
pop
dec
je
jmp
pop
sub
cmp
xlat
stos
xor
mov
or
inc
adc
ret
fwait
jo
loopne
retf
mov
loop
clc
cmp
add
iret
es
ret
outs
jae
or
pop
push
and
xor
jb
sti
push
int
repnz
mov
mov
inc
outs
dec
out
(bad)
jp
js
mov
in
xchg
imul
xchg
jmp
into
dec
es
mov
adc
sbb
push
mov
lock
xchg
mov
popa
imul
adc
sub
or
push
inc
dec
movs
push
or
adc
xlat
out
xchg
xchg
and
mov
pop
xor
test
pop
retf
shr
xor
test
and
sti
cmp
sub
adc
outs
sar
enter
adc
scas
loop
aaa
clc
jae
dec
pushf
sub
xchg
lods
adc
pushf
and
aas
data16
xchg
and
in
jl
pop
not
xor
test
into
in
mov
jecxz
test
in
sbb
push
or
push
in
and
loop
and
adc
or
xlat
fwait
call
mov
xor
dec
push
gs
out
xchg
in
fisubr
push
and
or
mov
push
inc
adc
arpl
test
pop
push
push
ror
mov
pop
sar
movs
inc
std
movs
ins
les
mov
cmp
dec
xor
ret
data16
inc
push
xchg
mov
inc
xchg
sbb
push
int
cmps
retf
xchg
jbe
or
out
push
test
inc
sub
inc
inc
cmp
adc
jae
inc
scas
pushf
fs
sub
stos
xchg
outs
sti
(bad)
je
sbb
aaa
xchg
fyl2xp1
fnstenv
sub
nop
xor
jmp
pop
cdq
sub
retf
mov
jecxz
ret
in
hlt
pop
neg
(bad)
mov
inc
arpl
shl
lods
inc
and
push
xchg
cdq
dec
adc
fwait
les
add
test
inc
outs
jmp
add
xor
adc
jne
cmp
aam
je
out
je
inc
xor
dec
cmps
mov
in
cmp
imul
pop
and
ss
xlat
repnz
test
movs
add
push
lods
push
lea
out
xor
xchg
(bad)
(bad)
push
dec
repnz
rol
hlt
shl
mov
jo
jae
mov
arpl
mov
inc
mov
xlat
mov
out
int3
fnstenv
lahf
adc
push
pop
mov
les
fisub
jmp
loop
outs
mov
pop
mov
out
xlat
cmp
test
push
fisubr
sbb
pop
out
int
xchg
xor
jns
xor
sub
push
dec
aad
(bad)
or
or
pushf
mov
sbb
mov
jmp
xchg
mov
cmp
leave
or
jg
(bad)
mov
popf
or
rcl
stos
add
lea
(bad)
sbb
fwait
(bad)
addr16
jae
std
sub
mov
sub
push
(bad)
jge
clc
and
xor
or
add
inc
xor
mov
mov
fidivr
xor
jecxz
mov
fild
jb
add
shl
xlat
xor
fwait
cld
mov
adc
add
dec
mov
in
sbb
sub
gs
shl
mov
adc
add
repz
xor
sbb
mov
addr16
sub
add
jbe
inc
repnz
idiv
fild
cld
push
mov
adc
cmp
jb
mov
(bad)
mov
push
imul
loope
jge
movs
sbb
ret
mov
add
lds
enter
add
or
and
jl
pop
mov
js
pusha
test
sbb
inc
fld
daa
xlat
jo
adc
jae
mov
pop
dec
sbb
ror
scas
lock
sub
or
cld
dec
jb
lea
dec
or
lea
cli
add
sti
inc
xor
or
and
sub
cmp
(bad)
fstp
int3
inc
dec
retf
push
dec
mov
movs
mov
je
pop
dec
sti
call
push
jmp
mov
gs
popa
jecxz
ja
sub
xchg
(bad)
dec
inc
imul
into
lods
inc
aad
sbb
int
aad
iret
xchg
jae
ins
pop
sub
loop
or
leave
sbb
add
hlt
cmc
sbb
mov
enter
cmps
cmp
inc
neg
xor
je
xchg
cli
adc
scas
dec
(bad)
ins
add
mov
cmp
push
mov
xchg
(bad)
mov
das
push
adc
mov
outs
mov
and
leave
test
xchg
mov
push
cli
in
sbb
icebp
ret
lds
sub
adc
adc
iret
fidivr
mov
jnp
sub
les
(bad)
pop
dec
adc
xor
inc
inc
cmp
sbb
enter
in
push
retf
fistp
das
cmp
loope
int
jg
data16
vmread
sub
or
sbb
das
xor
out
cmp
sti
stc
and
mov
sbb
fiadd
mov
in
gs
neg
dec
in
jns
cmp
jbe
out
popa
nop
dec
xchg
cs
loopne
pop
mov
(bad)
jns
or
shl
push
(bad)
loope
call
fwait
movs
pop
mov
and
xchg
lods
and
dec
adc
fs
jns
add
mov
inc
fmul
data16
dec
push
pop
loopne
(bad)
fwait
push
inc
dec
xor
call
icebp
sahf
aam
jmp
pop
add
sbb
pop
fmul
cmp
fsubr
fist
adc
mov
cmp
hlt
push
sti
ja
retf
adc
adc
xchg
test
mov
pop
push
repz
jge
add
popf
cmps
aad
sti
mov
es
or
aam
inc
sbb
fwait
(bad)
cli
clc
mov
enter
dec
add
leave
jl
pop
mov
fwait
push
stc
or
addr16
repnz
loop
xchg
out
mov
imul
outs
icebp
sbb
push
xor
pop
leave
sub
scas
(bad)
jmp
imul
lods
out
repz
das
cmps
dec
cld
lods
mov
cmp
xchg
imul
cmp
and
or
push
lds
pop
mov
push
or
xchg
rcr
cmp
mov
cld
pop
cmps
idiv
jae
test
and
in
ja
add
(bad)
and
out
into
cmp
cmp
xchg
mul
mov
sub
sub
mov
test
sbb
push
sbb
(bad)
stc
mov
dec
ret
icebp
les
sti
lahf
inc
test
add
outs
push
dec
loopne
test
(bad)
fcomp
xor
nop
push
mov
pop
icebp
addr16
addr16
in
sqrtps
push
mov
std
in
xor
inc
loopne
push
in
xchg
add
inc
stc
ins
xchg
test
mov
dec
mov
pusha
or
(bad)
pushf
jbe
dec
jns
adc
fimul
lahf
jns
sahf
or
fiadd
sbb
cmp
movs
jp
ins
neg
(bad)
fldl2t
pusha
mov
popa
fisub
call
aaa
in
cli
or
out
jp
adc
lods
push
sbb
jno
mov
sub
inc
in
push
mov
test
mov
aad
shl
mov
add
mov
sub
mov
call
sub
lds
mov
ss
loopne
pop
lds
mov
rcl
je
shl
push
push
jbe
adc
(bad)
dec
push
and
add
lods
repnz
and
dec
lock
retf
and
popf
sub
cmp
push
push
js
nop
nop
sub
out
push
jne
push
mov
mov
sub
mov
push
jo
sbb
jb
neg
adc
jmp
adc
out
or
into
sar
sub
mov
in
popa
cmp
and
or
test
leave
out
jmp
fdivr
add
pop
aam
jmp
sti
pusha
imul
aad
cld
hlt
enter
jge
cdq
scas
xor
adc
popa
xchg
pop
jg
movs
pushf
dec
push
mov
or
jp
aad
movs
pop
cmp
int
ret
xor
jb
sbb
cmp
mov
in
adc
ret
pusha
fcomp
pusha
mov
popa
es
fld
retf
mov
dec
ds
push
pop
adc
stos
iret
mov
iret
ror
stos
out
hlt
sub
adc
dec
xchg
sub
dec
add
mov
adc
push
int
jne
aam
scas
mov
xor
mov
cmps
outs
sbb
mov
test
sub
sub
frstor
pop
into
adc
lds
scas
xchg
inc
mov
int
mov
xor
jecxz
clc
adc
ins
xor
aaa
sbb
call
out
out
mov
sbb
mov
lock
pop
aam
pop
jg
add
mov
test
adc
repnz
sbb
ror
ins
stos
test
test
and
ror
daa
int3
mov
(bad)
pop
fmul
or
stos
gs
dec
std
inc
nop
jmp
mov
(bad)
fadd
cdq
cmp
in
mov
mov
rcr
cs
mov
add
sbb
pushf
mov
or
bound
add
jb
popf
mov
repz
inc
dec
pop
bound
or
stos
dec
xchg
sub
(bad)
imul
sti
pop
jle
dec
cmp
call
in
loope
add
add
push
ret
jns
adc
push
out
mov
int
push
mov
leave
xchg
pop
mov
jge
sub
loope
dec
and
jge
(bad)
jns
arpl
xor
jae
je
fs
sbb
jo
sbb
cdq
adc
xchg
inc
ss
mov
sahf
jae
pop
ja
mov
call
lahf
push
jg
stos
loopne
sub
sub
int3
sbb
dec
push
je
inc
xchg
push
jmp
dec
shr
mov
in
(bad)
xchg
sub
in
out
and
data16
lea
xor
dec
xor
es
mov
xor
add
xor
and
js
mov
repz
jnp
jmp
popa
es
sub
jns
mov
in
dec
hlt
ret
fadd
dec
scas
xor
push
pop
pop
mov
push
dec
push
call
inc
fdivr
aam
aas
and
xchg
loop
data16
call
or
sub
call
jb
test
pop
xchg
test
fcom
and
push
xchg
loop
(bad)
adc
loopne
test
and
sbb
jl
xor
(bad)
iret
pop
xor
lea
imul
sub
adc
sbb
(bad)
(bad)
(bad)
pop
dec
mov
dec
test
popf
in
add
mov
push
and
test
mov
and
(bad)
lods
cmps
das
repz
mov
inc
sub
fldenv
pop
fcmovne
pop
sahf
addr16
leave
shr
push
mov
jl
dec
clc
add
sub
inc
cmp
test
(bad)
out
sub
adc
push
(bad)
pop
or
push
js
push
jmp
mov
push
inc
jle
or
jo
mov
add
or
nop
mov
bound
(bad)
xor
push
cli
pop
popa
repnz
int3
rol
ret
adc
aaa
mov
adc
xlat
mov
or
inc
xor
(bad)
or
fwait
std
das
mov
out
xchg
or
xchg
mov
pop
ffree
pop
sti
std
xchg
mov
fist
int3
cmp
mov
out
loope
test
inc
fcom
jae
pop
or
xor
pop
loop
xchg
jbe
out
leave
imul
pop
xor
and
and
cdq
dec
ins
sub
out
sahf
idiv
aad
sub
sahf
test
inc
mov
int
addr16
bt
jo
jno
cmp
aad
cld
ds
xlat
or
xchg
in
lods
dec
pop
mov
mov
xor
pop
ret
retf
stos
xchg
test
ret
jb
es
jmp
mov
movs
daa
ds
cmps
pushf
loope
popa
in
dec
xor
add
jp
fimul
xor
xor
ds
(bad)
mov
jno
cmp
jbe
into
inc
sar
fiadd
sub
cmp
sbb
shl
test
std
add
push
mov
push
repnz
addr16
add
push
ja
sbb
lds
adc
and
push
test
test
mov
mov
or
sub
mov
cmp
test
ins
mov
imul
xor
cli
jecxz
imul
fwait
ins
fmulp
or
aad
test
dec
push
js
call
pop
das
sub
enter
test
popa
adc
mov
ror
mov
inc
out
sub
popa
outs
adc
in
cmps
sahf
xor
fimul
xchg
das
jge
ficom
inc
fnstcw
adc
leave
or
repnz
mov
mov
(bad)
mov
mov
xchg
xor
push
test
dec
dec
out
cmps
popa
cmp
sbb
cmp
or
dec
jp
retf
pop
loope
and
cs
push
jmp
adc
shl
pop
xchg
fbld
call
or
mov
sar
dec
int3
pop
arpl
xor
repz
test
(bad)
adc
retf
aaa
std
mov
jge
mov
dec
imul
xchg
push
xchg
ret
and
fidivr
mov
pop
inc
outs
and
or
and
sbb
cmp
mov
push
jmp
mov
push
dec
leave
mov
mov
sbb
jg
std
arpl
popf
inc
pushf
sub
add
sbb
int3
pop
mov
aas
addr16
rol
mov
rcl
bound
dec
mov
fldenv
mov
jns
cmc
xchg
fwait
arpl
dec
pop
div
pusha
mov
stos
repz
loopne
jae
xchg
not
xchg
push
xlat
xchg
push
aas
loop
mov
(bad)
ins
mov
jmp
lds
das
lock
aas
and
dec
ja
xor
pop
dec
scas
mov
mov
leave
test
je
imul
cdq
push
dec
mov
sub
push
fbstp
stos
pop
imul
adc
fdiv
and
lods
ja
daa
shr
and
out
scas
repnz
out
xor
in
into
(bad)
adc
cmps
push
lds
mov
add
jb
adc
cwde
push
or
mov
cld
call
retf
int3
add
aad
push
dec
xchg
xchg
pop
dec
je
jecxz
sub
mov
xchg
xchg
not
jnp
rol
ss
in
dec
and
fst
leave
test
add
std
sbb
sbb
dec
jo
test
jg
push
add
arpl
mov
stos
(bad)
loopne
xor
ror
out
lods
xor
lock
xchg
jno
inc
xlat
mov
jo
cmp
(bad)
call
mov
adc
push
push
loop
iret
int
inc
mov
js
jae
mov
nop
adc
cmp
cld
adc
aam
jmp
(bad)
out
pop
fiadd
fwait
out
sub
lds
pushf
(bad)
mov
stos
dec
jo
jnp
dec
inc
test
mov
inc
test
jns
or
out
xchg
ret
scas
daa
jno
clc
mov
cmp
mov
inc
xor
mov
inc
enter
mov
mov
mov
sub
add
or
(bad)
lds
pop
adc
cmps
test
mov
out
ret
cdq
push
lea
mov
pop
dec
jge
bound
push
cmp
xchg
jmp
push
jp
push
xchg
aaa
rol
fld
and
test
sbb
(bad)
dec
popa
or
jge
adc
out
mov
sub
ss
scas
xchg
mov
outs
add
js
xor
ficom
es
ins
or
shl
inc
jecxz
pop
sbb
xchg
push
int
adc
xor
icebp
enter
inc
aam
inc
fisub
retf
dec
enter
test
pop
sub
test
push
jne
lea
xchg
inc
and
or
or
rol
nop
and
call
and
fadd
imul
test
js
mov
sbb
mov
movs
inc
ins
test
addr16
lods
xchg
repnz
int3
cmps
in
sti
sahf
xlat
aam
add
sub
div
cmps
mul
mov
mov
sbb
aaa
lahf
(bad)
sbb
mov
ins
jmp
lea
inc
xchg
out
sbb
and
cmp
sahf
fisttp
jns
into
cs
jmp
xchg
std
lea
mov
leave
clc
and
adc
je
mov
retf
ret
imul
jno
test
daa
lock
pop
jecxz
inc
pushf
mov
mov
xchg
jns
sar
sbb
sbb
scas
mov
or
or
xor
gs
adc
xchg
sub
and
cmp
or
int
stos
in
lea
adc
xchg
mov
lgs
sub
rcr
dec
movs
mov
jo
mov
stc
data16
and
add
movs
(bad)
mov
sahf
mov
sub
dec
je
mov
jge
mov
ss
adc
mov
adc
mov
mov
repz
push
data16
xlat
jno
or
push
loopne
push
ds
cmps
mov
xor
jmp
or
gs
callw
xor
adc
jmp
mov
dec
jl
movs
add
xchg
sub
cmp
(bad)
xor
retf
pop
pop
cmc
push
retf
mov
lods
in
cmc
das
imul
ins
mov
cmp
mov
fwait
xchg
mov
fisubr
sub
and
or
cmps
mov
dec
mov
mov
das
cwde
cli
mov
popa
cmp
jb
jmp
aad
and
push
add
adc
mov
rcr
xchg
xor
pop
sub
xor
cmps
rcr
dec
lock
mov
push
out
jne
adc
popa
pop
shr
jecxz
out
cmps
lods
daa
sub
ins
(bad)
cmp
outs
xchg
imul
adc
jns
out
test
add
inc
enter
retf
mov
pushf
xor
out
(bad)
repz
xchg
jl
add
xor
sar
jecxz
mov
mov
sbb
lods
movs
xchg
idiv
sub
jnp
dec
mov
(bad)
xchg
fnstcw
mov
into
test
mov
idiv
sbb
mov
mov
arpl
out
popf
mov
scas
repz
inc
out
and
jno
retf
jbe
push
add
jne
popa
or
xchg
mov
shr
mov
push
dec
mov
mov
mov
shl
or
mov
push
fld
push
aam
movs
mov
jo
arpl
test
push
icebp
cld
jno
pop
shl
pop
imul
das
pop
enter
inc
mov
cmp
pop
jl
(bad)
or
cdq
xor
and
repnz
push
loope
mov
mov
enter
mov
push
and
jbe
test
movs
mov
mov
sahf
push
in
ss
xchg
jge
mov
cli
mov
call
add
lock
inc
jl
(bad)
mov
sbb
call
fsub
sub
ret
adc
aas
dec
sbb
test
mov
enter
mov
and
loopne
xchg
add
push
push
retf
fwait
jne
xchg
pop
dec
dec
adc
stos
inc
jns
nop
jg
sub
fiadd
inc
mov
mov
or
dec
daa
xchg
(bad)
sub
xchg
or
cmp
push
jp
sbb
pushf
inc
jns
ret
mov
inc
pop
shl
mov
imul
push
lods
mov
std
dec
sub
fimul
pop
div
(bad)
mov
jnp
adc
in
fiadd
mov
fistp
mov
aam
sbb
movs
pop
les
out
jns
inc
mov
lds
pop
(bad)
stc
adc
dec
sub
dec
cld
push
push
fucomi
out
mov
or
daa
pop
push
(bad)
retf
fabs
sbb
retf
jnp
adc
ss
outs
sahf
test
das
cmp
jecxz
mov
int
push
das
mov
jo
lock
push
ret
sahf
xchg
(bad)
and
push
xchg
jmp
jecxz
jbe
nop
enter
xchg
lahf
ss
aas
add
lock
dec
adc
or
add
and
ins
pop
ret
adc
mov
inc
pushf
or
in
mov
and
(bad)
jg
test
mov
lods
pop
sub
(bad)
scas
mov
jae
ss
jp
je
xor
pop
inc
pop
jp
popf
adc
and
sbb
and
test
sub
or
sbb
mov
iret
nop
mov
mov
xor
xor
sar
daa
js
adc
mov
rcl
lea
mov
push
xor
hlt
scas
lea
mov
inc
lahf
mov
test
pop
and
mov
test
int3
in
test
mov
mov
(bad)
cmp
ror
je
jo
push
mov
dec
or
inc
scas
gs
lds
test
inc
ror
fimul
inc
mov
mov
fs
into
mov
pop
dec
lods
pslld
aad
fcomp
or
inc
and
sti
ins
das
lods
mov
xor
dec
scas
mov
data16
mov
outs
dec
xchg
out
repnz
xchg
outs
pcmpeqd
dec
hlt
jmp
mov
mov
mov
aam
int
out
(bad)
lods
popa
pop
push
mov
bound
xchg
sub
fcom
mov
dec
sub
mov
push
cmps
shl
cmp
pop
lods
fdiv
in
jmp
fs
jmp
xchg
retf
dec
rol
fistp
xchg
lds
cld
pusha
fdivr
cmp
mov
cmp
adc
int
leave
mov
popa
je
dec
push
cmps
test
xor
dec
dec
sahf
adc
push
je
sub
repnz
inc
dec
mov
fbld
iret
cld
sbb
adc
pop
int
jp
in
cwde
stos
pop
in
and
call
in
and
jmp
xchg
cdq
adc
loope
out
ds
lahf
push
or
je
inc
push
stc
mov
dec
idiv
push
adc
jg
mov
mov
fadd
jbe
je
xchg
adc
mov
inc
gs
xchg
sbb
add
push
jl
mov
leave
dec
(bad)
sbb
lea
ret
test
mov
aam
mov
repz
je
aam
xchg
test
mul
xor
lods
mov
xchg
push
mov
jo
xor
add
push
jne
cmps
dec
sbb
in
cdq
popf
jg
inc
inc
jp
or
imul
xchg
fild
ror
xor
lahf
mov
mov
mov
and
aaa
cmp
or
(bad)
jo
ret
icebp
call
ret
fst
mov
movs
cmp
mov
sub
pop
imul
(bad)
xchg
cld
push
sub
pop
dec
movs
hlt
in
idiv
jmp
jnp
sbb
cli
outs
pminsw
dec
or
or
mov
sbb
mov
pop
inc
ret
xchg
adc
repnz
test
dec
lods
mov
jb
movaps
jb
pop
mov
inc
jnp
pop
sub
push
mov
test
aad
stc
and
movs
mov
jp
lds
mov
push
and
push
adc
push
jge
or
rol
addr16
stos
jp
push
sahf
mov
xor
jne
(bad)
(bad)
xchg
mov
mov
add
sbb
sbb
loop
add
aaa
xchg
imul
adc
cmps
test
call
pop
push
adc
adc
jne
or
xchg
push
mov
aad
stos
bound
pop
inc
fst
mov
add
and
mov
rol
out
or
sti
jo
sbb
mov
pusha
mov
mov
jne
xchg
xchg
mov
xchg
push
retf
pop
mov
push
or
sub
je
add
cmc
jge
or
leave
pop
js
push
pop
pusha
repnz
clc
outs
mov
pop
push
hlt
scas
test
sub
dec
movs
loopne
fisubr
fwait
add
pop
mov
in
jno
mov
nop
lods
cmp
jle
fild
aaa
loope
scas
in
into
ins
dec
adc
pop
xchg
and
idiv
and
jbe
dec
sbb
lea
jae
ret
shl
(bad)
mov
ss
imul
push
test
jae
js
stc
hlt
xor
scas
mov
cmp
xor
inc
pop
xor
movs
adc
out
push
ins
mov
jg
daa
cli
loopne
or
lds
in
aam
call
mov
ds
pop
je
or
loope
imul
cdq
retf
cmp
sub
lds
arpl
inc
in
add
sub
std
outs
gs
xchg
sub
cs
stos
mov
jg
sub
hlt
mov
and
jp
cmp
call
fmul
dec
ja
int3
mov
xchg
jge
scas
sahf
mov
pop
in
cmp
lds
pop
shr
add
mov
clc
mov
pop
xchg
loope
out
hlt
cs
pop
mov
xor
fisubr
xchg
mov
test
(bad)
fs
and
iret
xchg
add
cmp
mov
lahf
mov
jecxz
repnz
sbb
cmp
jp
lods
aaa
inc
movs
sub
and
dec
pop
xor
retf
popf
arpl
cmps
clc
xchg
(bad)
ins
mov
dec
mov
jb
mov
sub
(bad)
retf
jmp
hlt
repz
xlat
stos
popf
xchg
mov
clc
test
push
cmp
aaa
cmp
pop
gs
adc
adc
fsub
mov
fld
into
xlat
jne
icebp
scas
xor
mov
sbb
mov
cmp
cld
dec
jne
pop
or
adc
in
xchg
jp
mov
cmp
cdq
adc
clc
add
je
das
sub
lods
ss
adc
loopne
mov
in
pop
cmp
pop
test
add
pop
(bad)
sbb
sbb
(bad)
and
movs
mov
adc
repnz
push
add
add
or
mov
push
or
cmp
lods
jmp
mov
push
pop
stos
or
test
cmp
fprem
cmp
jo
test
daa
mov
in
inc
cmps
rcr
pop
rep
enter
xor
push
bound
pop
mov
inc
jmp
inc
repnz
les
push
mov
xchg
jne
gs
in
imul
or
cdq
or
add
mov
scas
or
and
hlt
test
ss
mov
inc
and
or
mov
push
sbb
jns
xor
fidivr
add
(bad)
xchg
(bad)
or
xor
lahf
sub
xor
cmp
xor
retf
mov
mov
out
inc
or
stos
dec
aas
ins
cmp
push
stos
clc
adc
xchg
les
les
mov
push
mov
xor
(bad)
mov
sub
fild
mov
fisttp
fisub
adc
and
pop
int3
out
test
pushf
push
pop
test
gs
mov
fisttp
jmp
punpcklwd
mov
out
cmp
lock
cmp
jmp
add
ret
jns
cld
push
fisttp
sar
sbb
lahf
and
(bad)
sahf
ss
cmp
jne
(bad)
mov
fsub
push
out
les
push
add
dec
mov
sub
cld
or
test
pop
jbe
div
inc
jbe
xchg
pop
in
test
mov
adc
inc
sub
mov
jnp
neg
jmp
push
and
xor
dec
(bad)
jo
shl
or
xor
pop
lds
sar
loope
loop
xchg
ficom
popa
scas
add
aam
jno
shl
fstp
mov
and
ins
inc
outs
push
adc
neg
pop
gs
cmp
adc
push
ins
and
call
pop
aad
bnd
fwait
push
inc
in
lahf
sub
xor
or
test
(bad)
jecxz
jo
push
mov
movs
leave
sar
xor
mov
popa
in
fadd
inc
hlt
lods
inc
jl
push
in
push
popf
mov
jge
fmul
mov
aad
sbb
cmp
or
xlat
inc
call
and
sahf
outs
scas
jne
call
aaa
mov
ror
or
pusha
push
gs
(bad)
(bad)
nop
data16
in
lock
int3
sub
mov
scas
shl
cmp
xchg
sbb
jmp
inc
inc
cmp
mov
jl
add
mov
jle
jmp
adc
mov
je
out
jbe
jo
sub
scas
add
outs
xchg
hlt
mov
add
jg
stc
addr16
add
nop
dec
pop
jmp
ins
xchg
rcr
dec
xchg
pusha
mov
cld
xchg
xchg
pop
cld
jns
sub
dec
mov
into
popf
adc
(bad)
mov
fidiv
ja
rcl
pop
cdq
xchg
dec
lahf
mov
mov
pop
fs
adc
push
stc
or
pop
push
sbb
test
das
mov
mov
adc
repz
imul
lds
jns
jmp
add
sub
test
xlat
shl
(bad)
aaa
sbb
jl
hlt
aas
and
xchg
or
and
retf
aaa
loopne
and
inc
mov
sub
xchg
sbb
mov
xchg
or
jbe
sbb
int3
(bad)
int
cmp
repnz
xor
mov
pop
inc
sbb
mov
jb
retf
push
lahf
arpl
adc
jne
sbb
mov
mov
fidiv
mov
aad
mov
into
icebp
js
cmp
jmp
cs
jb
add
jecxz
stos
test
js
(bad)
imul
ret
jae
ss
sub
daa
cdq
fbstp
add
stos
mov
mov
jmp
pusha
aad
repnz
pop
dec
sub
mov
xchg
jg
mov
imul
stos
cmp
rcr
cmps
call
addr16
sub
movs
(bad)
xchg
dec
xor
pop
or
call
xchg
out
loop
add
xor
xor
mov
jo
in
loopne
add
retf
(bad)
cmps
ret
pop
mov
lods
xchg
cmp
rcr
(bad)
adc
mov
pop
shr
test
adc
pop
pop
jo
inc
repz
popf
pop
push
cld
es
jp
scas
aas
outs
or
clc
pinsrw
jmp
pop
add
fbstp
int
sti
inc
inc
and
jmp
movs
scas
mov
(bad)
aad
ja
sbb
gs
inc
mov
mov
retf
cli
cwde
outs
push
or
nop
push
in
das
and
mov
outs
aaa
add
pop
add
mov
jp
loop
fdiv
fidiv
popf
pop
sub
fdivr
adc
push
dec
mov
push
inc
sub
xchg
scas
push
jne
pop
mov
dec
pop
(bad)
(bad)
mov
ds
push
push
inc
sti
pusha
sub
add
xchg
xor
js
push
iret
lea
adc
cdq
mov
outs
sar
mov
cmps
adc
and
pop
or
std
lahf
in
es
mov
je
pop
pmaddwd
ret
int3
mov
(bad)
fsubp
nop
outs
adc
loop
inc
jbe
or
jno
out
or
es
mov
lock
jmp
cld
ss
pop
adc
jge
add
call
cmp
or
lea
repz
dec
jne
loopne
cmp
cmp
inc
adc
mov
mov
ins
xchg
add
dec
cmc
enter
imul
in
repz
hlt
inc
arpl
pushf
xchg
enter
cli
sar
bound
in
ds
jbe
lods
mov
in
xchg
mov
popf
in
pop
inc
jns
push
repnz
inc
pop
scas
in
out
stos
push
pop
push
mov
inc
mov
mov
cdq
inc
xor
dec
push
jmp
push
push
outs
mov
test
jo
jne
pop
cdq
xor
lds
(bad)
inc
jno
pushf
in
jmp
dec
fwait
add
lahf
fs
mov
and
mov
inc
cmp
fisttp
data16
add
mov
sbb
jns
push
repnz
sub
jno
push
mov
dec
add
dec
mov
in
mov
inc
imul
fnsave
and
cmp
sub
nop
and
sub
mov
in
stos
mov
jp
leave
sbb
scas
mov
or
les
inc
retf
test
pop
and
or
mov
jb
loopne
jecxz
shl
xor
fcomp
scas
push
dec
adc
loopne
adc
jp
inc
movs
push
ss
leave
stc
loope
icebp
mov
xchg
jle
gs
in
cld
sub
shl
sbb
test
or
mov
add
popf
imul
inc
in
push
sbb
ret
cmp
and
dec
sahf
sbb
cs
jns
add
mov
std
in
jp
ja
push
in
adc
and
push
mov
in
lods
bound
clc
in
icebp
cmps
shl
inc
fadd
sbb
inc
add
mov
sbb
lods
cmp
inc
push
aam
leave
fldcw
scas
sar
div
add
jp
out
xchg
xchg
xchg
push
loop
xor
gs
sbb
mov
add
ret
ss
arpl
(bad)
outs
xchg
ficomp
(bad)
fld
fwait
push
inc
xor
pop
dec
int3
adc
xchg
rcr
and
clc
sbb
cmp
in
push
std
leave
or
xchg
fstp
arpl
mov
dec
mov
dec
push
das
ds
test
sub
mov
shl
cmps
push
push
or
or
hlt
and
cmps
jo
push
popf
add
mov
scas
neg
ins
pop
pop
or
jb
sub
loopne
(bad)
std
jecxz
jmp
pop
push
xchg
xor
fbld
lea
push
add
sar
das
lahf
mov
enter
stc
test
in
push
pop
hlt
mul
sub
mov
cld
jecxz
ins
outs
into
rcl
mov
(bad)
stos
xor
loopne
jp
push
jmp
or
dec
xor
add
icebp
add
push
dec
mov
loopne
popf
adc
mov
xchg
std
jnp
dec
int3
add
jl
je
imul
jp
add
push
xchg
push
pop
(bad)
gs
inc
push
mov
adc
stos
mov
sar
cmp
cdq
pop
lods
jno
and
mov
movs
jl
push
push
cmp
ds
call
jp
aas
push
rcr
xor
fwait
arpl
popa
fs
sub
lods
leave
repnz
lahf
sbb
movs
shl
mov
or
push
cs
add
(bad)
outs
cli
call
mov
pop
fcomp
cdq
in
cmp
in
inc
mov
and
sbb
mov
mov
movs
imul
dec
sub
fadd
outs
push
mov
stc
pop
aad
xchg
push
sbb
arpl
test
fisubr
inc
(bad)
mov
jbe
(bad)
jge
cvtdq2ps
stos
sub
fsubr
dec
mov
lods
ret
cmp
adc
cmc
cmp
mov
sub
mov
sub
dec
or
popf
in
cmp
cmp
dec
int
(bad)
push
pop
sub
push
or
mov
fdiv
jmp
cmp
push
ins
mov
sub
call
sbb
cmp
xlat
mov
mov
test
dec
adc
jae
cli
(bad)
sub
nop
mov
xor
or
mov
pop
fild
je
fcom
jbe
sub
sub
xchg
push
adc
pop
cli
rol
push
pop
inc
ret
mov
test
ins
xor
shl
repnz
sbb
pop
mov
adc
push
daa
loope
push
sbb
mov
push
mov
cld
ror
xor
mov
adc
mov
(bad)
retf
pop
addr16
(bad)
mov
push
pcmpgtw
or
jnp
jmp
imul
aas
jno
into
nop
jae
xchg
retf
cld
add
ins
xchg
sbb
leave
fstp
cld
aam
xor
call
cdq
imul
mov
jnp
pop
leave
imul
dec
mov
int
dec
cmp
fild
call
retf
sub
xchg
(bad)
stc
mov
test
ja
lahf
push
push
pop
leave
mov
cmps
xor
shr
inc
test
sbb
fisub
(bad)
into
push
(bad)
xchg
popa
(bad)
frstor
fidiv
inc
cmp
pop
xchg
push
xor
mov
sub
cmp
cmp
dec
je
dec
fs
out
xchg
jbe
push
push
jecxz
xor
jb
sar
push
je
jae
cdq
repz
dec
xor
jle
mov
dec
sub
inc
aas
mov
mov
mov
mov
rcr
pop
icebp
and
pop
push
jl
nop
or
js
xchg
int
jns
(bad)
fsubp
loope
pusha
cmp
lock
add
cmc
xor
pop
in
stos
cmp
push
fldenv
xchg
sub
xchg
adc
jmp
xor
ror
xchg
adc
das
mov
dec
push
adc
fbld
in
xchg
jg
cdq
sub
mov
ja
xchg
retf
sti
mov
mov
shr
mov
les
(bad)
and
sub
movs
jp
jb
out
or
inc
inc
iret
inc
lds
xchg
fist
jnp
pop
add
jl
and
sbb
and
es
cmp
fst
fnstcw
int
push
out
(bad)
ror
dec
stc
lods
jo
retf
xchg
outs
inc
sar
adc
mov
ror
push
xchg
data16
and
mov
xchg
fist
dec
cmp
(bad)
cdq
xchg
adc
cmp
test
cmp
jae
mov
pushf
aaa
add
out
add
mov
ror
rcr
out
inc
cli
xchg
imul
and
or
fldenv
cmc
jno
cld
arpl
mov
aaa
in
sub
mov
or
inc
out
add
xor
call
pop
add
xor
jb
push
ja
push
and
jg
xor
and
fimul
dec
ror
scas
enter
sub
pop
in
jns
inc
jp
mov
not
jo
xchg
dec
inc
sbb
sbb
cmp
or
ret
pushf
cmp
push
daa
std
sub
add
repnz
jmp
jecxz
mov
imul
pop
inc
pop
xchg
sub
jecxz
add
jns
lods
rcl
aam
jbe
jae
(bad)
addr16
pop
jae
push
push
data16
lea
mov
iret
sub
xchg
mov
out
xchg
and
ficomp
push
adc
in
test
or
push
pop
adc
or
or
mov
loop
pop
jmp
dec
or
jmp
mov
rcr
mov
xor
and
lahf
inc
sti
xchg
push
xor
add
(bad)
outs
and
movs
cli
sbb
cmp
scas
call
lods
out
(bad)
daa
(bad)
fst
dec
xlat
ins
jp
aam
mov
into
xor
jne
loop
les
xor
cmp
mov
xchg
outs
ret
enter
cmp
pop
mov
cmc
inc
cmps
sbb
xchg
dec
adc
add
cmps
cld
adc
(bad)
shl
dec
leave
inc
ret
jb
xlat
cmps
pop
(bad)
or
sahf
out
push
ins
add
fxch
jle
adc
aas
xlat
shl
push
cmp
or
ror
(bad)
jns
add
add
cld
imul
adc
sti
pop
pop
call
pop
lods
sbb
sub
sub
aad
jbe
jmp
pop
call
repnz
and
adc
fisub
mov
sub
fistp
lods
pop
and
out
add
xor
pop
sub
push
stos
dec
push
xchg
jbe
and
cmp
pop
cmp
dec
sub
aam
outs
rol
add
mov
lahf
add
push
inc
jb
xor
movs
push
add
inc
sbb
in
and
adc
je
mov
cs
lea
pop
loopne
sub
mov
xchg
ja
adc
hlt
(bad)
repnz
and
outs
imul
add
(bad)
rcl
je
jno
sti
bound
jns
inc
or
mov
mov
adc
cwde
out
sbb
cmp
ret
cmp
pushf
jecxz
jge
scas
es
mov
rol
inc
sti
inc
mov
mov
jle
sar
pop
(bad)
jp
ins
cwde
clc
mov
mov
in
add
icebp
dec
push
jmp
jo
leave
mov
fild
add
or
pop
mov
xor
aaa
fwait
or
retf
jbe
inc
fsub
jnp
or
fisubr
rep
loop
(bad)
(bad)
cmp
gs
jmp
add
sub
push
sahf
xor
int
dec
mov
pop
xor
fidivr
jnp
dec
sbb
cmp
ins
xchg
gs
test
mov
call
popa
iret
add
aam
mov
mov
(bad)
mov
dec
mov
cwde
add
add
cmp
and
fucom
mov
sbb
sbb
ds
imul
adc
xchg
add
pcmpeqw
(bad)
jae
std
cwde
push
push
push
push
imul
dec
psubb
and
add
sbb
jmp
jo
movs
push
dec
push
mov
push
(bad)
ret
in
jl
xor
rcl
push
fisubr
mov
out
mov
sbb
sub
and
mov
retf
push
add
push
cs
bound
iret
push
test
pop
shr
retf
nop
fcomp
or
jl
js
imul
movs
repz
mov
iret
xchg
add
stos
enter
lock
retf
adc
in
popa
sub
mov
xchg
dec
and
adc
(bad)
pusha
scas
sar
popa
mov
jmp
(bad)
jae
dec
mov
test
inc
stos
and
pushf
adc
sub
xor
cmc
jp
pusha
add
(bad)
out
mov
fbld
imul
or
or
mov
push
jge
outs
mov
mov
gs
or
imul
lea
xchg
jle
addr16
bound
pop
cmp
or
pop
fild
inc
push
adc
lea
sbb
cmp
(bad)
imul
scas
mov
and
jmp
bt
pop
repnz
jae
push
mov
pop
dec
(bad)
sbb
in
adc
int3
add
inc
pop
popa
inc
das
jo
(bad)
jae
stos
mov
arpl
mov
push
fnstsw
shl
adc
sbb
xchg
fdivr
adc
cli
aas
mov
dec
mov
repnz
jecxz
xor
xchg
movs
dec
mov
add
xor
pop
retf
int3
(bad)
pop
add
or
imul
lods
dec
xchg
in
inc
pushf
test
stos
pop
ds
cwde
rcl
es
cdq
mov
jbe
sub
movs
imul
fisubr
call
adc
sub
test
xchg
fwait
inc
ret
in
and
gs
push
or
pop
rol
add
inc
mov
mov
arpl
push
push
retf
test
jge
add
push
arpl
(bad)
stc
daa
adc
lea
js
push
sbb
jbe
js
shr
dec
test
pop
cmc
retf
push
shr
push
sub
(bad)
sbb
sub
sbb
pop
or
pop
dec
movs
cs
inc
enter
shl
xor
mov
sar
fld
js
add
loope
sbb
mov
sub
out
daa
std
mov
ret
mov
call
cdq
fs
adc
xchg
adc
popa
pop
xchg
cmp
and
test
push
int
jmp
mov
xchg
ret
mov
push
enter
mov
dec
cdq
xchg
rol
and
add
test
inc
addr16
adc
jb
mov
mov
and
neg
dec
imul
sub
mov
xchg
push
js
mov
out
fstp
fwait
pop
int
sub
inc
call
xlat
sub
aad
adc
add
scas
scas
mov
test
sbb
jge
aam
push
std
mov
mov
cmps
push
sbb
push
pop
xchg
js
xlat
call
cmp
pop
shl
in
pop
je
stc
cmp
mov
jb
mov
(bad)
cld
sub
dec
loopne
push
movs
xor
push
mov
push
cmp
bound
xchg
in
jno
(bad)
popf
fild
dec
xchg
cmp
mov
inc
push
hlt
jns
mul
inc
rol
jl
cs
sub
lods
lea
out
clc
and
mov
lea
sub
jmp
dec
call
test
inc
cmp
push
test
mov
or
jae
out
loope
(bad)
xchg
cdq
(bad)
jge
movs
pop
loopne
test
call
ret
jne
iret
jbe
out
cli
sbb
imul
adc
lock
aad
push
gs
or
jne
xchg
mov
lahf
xchg
push
retf
jp
dec
out
push
pop
es
mov
inc
mov
inc
cld
ficomp
mov
and
retf
ja
pop
inc
arpl
push
inc
out
out
lahf
cwde
and
adc
xor
push
jne
xchg
adc
and
mov
(bad)
in
scas
lock
daa
scas
sbb
sahf
fbstp
aas
movs
pushf
(bad)
and
rol
sub
sbb
xchg
out
imul
sub
gs
push
es
int3
std
push
dec
ins
adc
mov
enter
je
jo
aaa
adc
adc
push
sbb
mov
inc
cmp
call
int
das
mov
and
outs
(bad)
mov
jb
es
shr
ss
add
push
mov
call
sub
jo
aaa
outs
add
jg
int3
idiv
sub
(bad)
mov
fbstp
add
rol
stos
scas
out
shl
aas
dec
inc
dec
mov
aad
sbb
neg
lahf
test
out
test
shl
cdq
mov
fsubr
xchg
icebp
cmp
pop
inc
mov
sbb
push
aaa
pop
sub
pop
jecxz
inc
in
aad
and
mov
sub
adc
xlat
jo
nop
push
repz
jae
jge
fist
and
mul
fiadd
inc
jmp
jno
or
dec
pop
xchg
movs
push
push
mov
cmp
scas
xchg
std
cmp
lock
pop
push
xchg
leave
dec
mov
popf
pusha
adc
stc
jno
cmp
jp
adc
mov
fs
call
and
xchg
fmul
test
in
xchg
icebp
es
xchg
jo
mov
xor
es
std
loop
pop
ror
jg
sub
pop
(bad)
(bad)
jecxz
or
cmp
aad
jb
arpl
push
jle
xor
jge
lock
dec
pop
mov
push
mov
(bad)
mov
cmps
sahf
cmp
out
push
or
xor
dec
push
xlat
daa
jmp
inc
repnz
pop
mov
dec
push
les
push
mov
ret
lea
test
stos
retf
jno
inc
or
push
inc
test
xor
ja
nop
cld
lock
xlat
sbb
push
call
scas
inc
popf
jmp
jmp
or
lods
lods
xchg
(bad)
pop
sub
imul
mov
paddusw
lods
xor
adc
xchg
dec
es
push
and
and
movlps
nop
rcr
inc
out
cmp
mov
or
dec
les
(bad)
cs
test
jmp
cmp
adc
enter
and
inc
dec
loope
ins
dec
sti
fsub
(bad)
sbb
outs
adc
xor
es
je
call
jle
sbb
call
dec
lds
jb
jne
sbb
pop
push
jns
xchg
inc
jnp
adc
push
(bad)
in
stc
xchg
cli
pushf
push
add
push
aas
sbb
out
cdq
cmp
test
gs
clc
xchg
out
movs
inc
mov
inc
mov
leave
sub
xchg
les
fild
dec
push
xor
xchg
sbb
pop
into
retf
mov
fimul
fs
test
mov
aas
loop
jo
or
xchg
push
mov
cmps
pop
imul
call
call
call
sbb
and
and
in
and
adc
cld
xchg
cmp
movs
xchg
int
cld
repnz
in
retf
jo
lds
test
and
adc
(bad)
and
shr
cmp
jp
pop
rcr
test
sbb
int
stc
ds
mov
out
pushf
mov
pop
lock
test
dec
test
mov
rcr
jmp
in
xlat
rcl
and
in
or
cmp
cli
cwde
cmp
pushf
lock
pop
in
mov
ja
aam
or
dec
lds
sbb
je
cmp
jle
mov
imul
fild
movs
cmp
jb
sub
cmp
xor
mov
int3
xchg
add
dec
rol
(bad)
sub
and
push
inc
pop
sub
cli
lods
sbb
fst
pop
ins
mov
inc
stos
push
pop
popa
dec
sahf
(bad)
ret
fidivr
mov
dec
mov
stc
inc
sub
out
pop
or
repnz
pop
xchg
pop
xchg
ds
sbb
or
mov
int
add
jg
sub
scas
dec
movs
dec
push
jmp
dec
and
mov
inc
ds
xchg
jmp
bnd
pop
jge
add
or
lea
jno
add
xchg
imul
cs
out
sar
fsub
stos
ds
daa
cmp
add
push
mov
add
xor
or
(bad)
mov
pop
pop
inc
mov
push
cmovb
outs
push
cmp
add
aad
sbb
or
or
repz
xor
repnz
pop
sar
pushf
mov
push
pop
loop
adc
imul
dec
push
stos
lods
cmp
cmp
mov
push
dec
fcomp
fdiv
jmp
movs
or
(bad)
out
push
mov
imul
or
mov
mov
xchg
loop
sbb
popa
adc
cli
mov
pop
mov
jle
xchg
and
pop
das
push
mov
call
cdq
adc
enter
fsubr
jns
xor
pop
pop
in
fidiv
xlat
test
(bad)
or
sahf
in
pop
sahf
cmps
mov
adc
call
pop
imul
xchg
adc
fdivp
ffreep
inc
enter
and
sbb
cli
imul
xor
dec
lock
cmp
daa
repnz
dec
jne
nop
jle
iret
xchg
push
fistp
call
ds
test
add
stos
sub
out
pushf
xlat
scas
jge
push
cwde
inc
inc
dec
mov
in
jb
movs
and
jae
pusha
cmps
sbb
mov
sub
arpl
dec
add
mov
cmp
in
shr
mov
lock
stos
shr
aaa
nop
std
std
(bad)
daa
adc
and
or
xchg
inc
les
add
mov
outs
popfw
cmps
xor
aam
adc
mov
xchg
lea
jl
lods
mov
cmc
add
jle
or
cmps
icebp
pop
mov
cmc
mov
or
xchg
dec
lahf
pop
mov
pop
lock
mov
add
(bad)
mov
xor
mov
out
in
or
test
das
or
scas
hlt
stos
call
mov
mov
loope
in
cmps
mov
loope
mov
fbld
popf
push
jae
idiv
cmps
push
lods
pcmpgtb
stos
scas
in
or
mov
scas
pusha
xchg
lods
ins
int3
mov
inc
nop
fsubr
pusha
fwait
in
pop
cmp
push
or
adc
out
xchg
sbb
xchg
xchg
dec
ins
sub
jge
stc
dec
call
sbb
cs
sar
or
lds
mov
shr
test
rol
cmp
es
(bad)
mov
in
in
imul
adc
jl
push
jmp
outs
into
jecxz
or
outs
ja
rcl
rdtsc
mov
xchg
inc
rcl
mov
arpl
imul
pop
push
in
jo
and
ret
ficom
pushf
lea
jl
cld
pop
retf
push
in
ds
push
push
fnstcw
nop
js
pop
and
xchg
dec
lds
sub
(bad)
dec
rcr
lods
rol
std
inc
sub
shl
dec
jne
je
push
scas
shl
adc
movs
in
mov
jg
inc
int
sbb
mul
out
inc
ret
jno
test
sar
dec
push
shl
fisub
xor
mov
mov
cmps
adc
mov
outs
cli
or
xchg
push
fwait
mov
mov
clc
stos
sbb
cmp
(bad)
in
add
repnz
les
sbb
aas
sbb
and
std
cwde
push
mov
ret
mov
dec
sbb
mov
movs
jle
mov
sub
mov
pop
sub
(bad)
daa
enter
nop
inc
dec
sbb
enter
mov
data16
cmp
jno
gs
test
repz
movs
inc
jg
or
(bad)
lea
jmp
dec
mov
pop
jae
xor
retf
rcr
mov
repnz
sahf
sbb
loope
mov
dec
stos
not
cdq
ins
mov
aas
mov
sbb
pop
xor
mov
imul
xchg
sbb
jle
dec
(bad)
in
add
fidiv
mov
jnp
or
mov
imul
inc
dec
jae
movs
sbb
push
or
call
jno
rol
add
mov
jns
mov
cmp
fstp
jmp
push
jp
pop
mov
mov
xchg
jb
xor
xor
mov
add
loopne
inc
in
mov
(bad)
xchg
mov
fisub
xchg
loop
fidivr
jmp
jne
mov
sub
xchg
mov
(bad)
pushf
aas
pop
js
aas
out
out
dec
sbb
mov
push
and
mov
retf
in
mov
mov
int
call
push
(bad)
push
imul
push
ins
mov
mov
ret
imul
mov
sahf
and
sti
outs
and
bound
outs
xchg
pop
jp
loope
dec
xchg
(bad)
pop
stc
cwde
mov
ret
pop
and
xchg
xchg
and
cmc
mov
lock
push
out
sub
std
in
pushf
out
pop
pop
adc
loope
hlt
inc
push
pop
xchg
ins
pop
cmp
stos
imul
cwde
sar
(bad)
cmc
das
jmp
cli
lock
pop
pop
(bad)
outs
pop
fnstenv
cli
pop
pop
xlat
jmp
imul
test
push
pop
add
and
out
xchg
sbb
mov
cmps
in
jns
push
ss
adc
hlt
and
mov
push
mov
mov
dec
pop
dec
mov
out
les
outs
mov
shr
mov
pushf
call
stos
mov
scas
fcmovne
mov
in
lds
mov
pop
mov
or
call
jmp
aad
mov
psubq
pop
push
int
mov
push
stc
or
in
and
mov
les
dec
push
into
into
gs
and
sahf
ins
mov
mov
jp
call
fbld
test
push
push
loop
xchg
pop
jbe
sub
sbb
push
cdq
push
cmp
or
call
hlt
pop
daa
sti
jae
test
inc
outs
and
xor
mov
ins
xchg
xchg
jmp
fcmovnb
in
dec
(bad)
hlt
jmp
test
aas
mov
retf
sbb
mov
outs
aas
or
daa
sbb
les
jle
xor
and
sbb
adc
mov
and
shr
jnp
stos
je
push
cwde
out
hlt
mov
sub
les
push
sub
cmp
push
fs
iret
leave
dec
das
sbb
push
iret
jo
xor
std
push
lods
xchg
ins
ja
pop
hlt
retf
cmp
add
adc
dec
retf
cmp
aaa
cmp
jo
les
xor
inc
jo
xor
and
addr16
data16
and
and
in
scas
int
je
hlt
sub
mov
add
adc
add
mov
or
inc
fimul
arpl
push
rol
test
cmps
mov
xchg
jns
aaa
cmp
adc
(bad)
sar
imul
test
inc
pusha
fisub
jg
test
inc
ror
das
retf
mov
int3
fs
jns
sbb
pop
mov
lods
xchg
sub
cmc
pop
jae
loop
je
pushf
xor
mov
pop
dec
enter
sub
sub
in
test
and
add
lahf
xchg
inc
loopne
mov
ret
das
mov
fs
mov
popa
scas
stc
pop
rcl
outs
adc
int
mov
mov
push
fld
jb
hlt
out
mov
inc
jnp
jmp
test
add
xchg
test
or
je
and
imul
pop
mov
pop
call
and
lods
into
mov
adc
mov
push
ror
mov
mov
test
ins
loope
sbb
xchg
dec
es
pop
xchg
sbb
push
jb
mov
int3
mov
test
pop
in
rcr
cmps
jecxz
loop
icebp
out
sbb
lahf
or
int3
mov
xchg
rol
jl
jl
sub
test
repz
arpl
cwde
push
leave
sbb
test
push
ret
push
cmp
mov
movs
fstp
dec
loopne
das
imul
xor
std
neg
sbb
pop
(bad)
and
dec
jbe
and
inc
or
bound
in
outs
mov
lock
nop
add
mov
cmp
movs
cdq
xor
mov
add
hlt
push
mov
cmp
fisub
push
clc
xchg
xchg
push
pop
in
push
loope
xor
xor
push
lods
scas
sub
das
jmp
mov
jecxz
push
daa
(bad)
dec
retf
inc
je
adc
sbb
mov
jno
pop
stc
add
push
sub
mov
jo
in
xor
mov
xchg
sub
xor
es
mov
push
push
mov
jns
mov
push
mov
in
mov
and
push
mov
push
ja
arpl
or
mov
jmp
cmp
lea
fucom
div
movs
mov
lds
jne
jo
loopne
xor
add
fmulp
jb
jae
jmp
mov
push
(bad)
bound
push
test
prefetchw
lea
(bad)
clc
pop
or
push
mov
ficom
inc
mov
rcl
test
dec
or
or
dec
mov
fld
xor
sub
push
cmp
xchg
cli
xchg
(bad)
dec
add
and
jno
iret
push
cmp
push
pop
in
imul
add
adc
jne
xchg
jg
mov
and
fwait
in
adc
rcl
out
mov
lea
idiv
(bad)
inc
repz
aad
repnz
xor
dec
lock
cmps
sub
sbb
push
fs
call
pop
add
mov
ror
mov
test
fldenv
ins
jns
adc
test
push
add
(bad)
scas
out
(bad)
das
cmps
add
mov
in
mov
inc
fisubr
aam
xor
dec
pop
adc
shr
lods
inc
push
push
mov
mov
or
int3
cmp
in
into
inc
arpl
sub
cmps
aaa
fcmovb
or
and
fisttp
xor
sub
jae
in
xlat
fisttp
cmps
ins
aas
gs
dec
repz
push
jge
dec
pop
ror
dec
jp
push
repz
or
rcr
stc
mov
dec
shl
mov
sub
mov
add
mov
cmps
mov
call
lahf
loop
mov
push
cdq
jnp
add
or
push
and
pop
addr16
inc
mov
js
mov
(bad)
movs
std
addr16
xor
cmp
data16
adc
xor
movs
pop
das
xchg
cmp
cmp
fcmovu
(bad)
sbb
loopne
pop
ret
xchg
int3
adc
imul
faddp
mov
pop
retf
jno
sub
pop
and
xor
test
jns
jbe
pusha
int
loope
adc
push
pop
jae
or
shr
cmps
and
std
das
mov
mov
(bad)
push
call
adc
xchg
mov
das
and
bound
retf
hlt
fsub
push
imul
mov
mov
in
inc
xor
jo
dec
sbb
dec
cs
adc
in
dec
add
pop
out
xor
adc
(bad)
pop
mov
pop
rol
setbe
mov
mov
or
pop
jle
imul
iret
gs
loopne
push
mov
(bad)
fwait
call
addr16
sar
add
push
cmp
adc
out
or
mov
movs
bound
movs
imul
dec
(bad)
fimul
test
and
mov
ins
ja
les
xchg
fdiv
sub
xchg
addr16
aas
cdq
inc
mov
aaa
repnz
jge
pop
(bad)
and
cs
fisub
mov
sahf
jbe
ds
xor
push
shl
cmp
outs
mov
mov
dec
in
loope
loope
jno
(bad)
cmp
adc
sbb
aad
ffree
adc
js
loope
lods
or
hlt
imul
cmc
adc
sub
data16
icebp
out
jle
and
xor
xchg
adc
push
add
sbb
icebp
xchg
in
push
jne
lock
shl
imul
fiadd
retf
jbe
cmps
out
xor
inc
pop
xlat
dec
jns
adc
mov
daa
pusha
jg
sbb
pushf
mov
inc
aad
popa
sbb
dec
aaa
push
test
movs
mov
fwait
xchg
mov
popf
inc
jbe
sti
adc
jo
pusha
out
retf
cmp
or
xor
les
mov
push
jns
push
jg
adc
(bad)
and
and
cld
and
(bad)
jg
retf
leave
mov
in
lahf
xor
jp
push
rcl
adc
gs
cs
dec
fild
xchg
stos
push
inc
sti
in
push
or
xor
shr
inc
out
shr
dec
jnp
leave
or
inc
out
gs
nop
mov
punpcklbw
inc
fadd
mov
sub
fidiv
jl
cdq
mov
in
mov
mov
aad
loope
bt
mov
pop
xchg
int3
adc
jl
dec
dec
icebp
jmp
dec
(bad)
xchg
clc
cmp
jle
adc
jmp
mov
mov
sti
sbb
add
jo
push
push
and
(bad)
std
sub
imul
test
pop
jecxz
movs
loopne
mov
cmp
stos
pushf
enter
test
xchg
(bad)
adc
dec
xor
push
pop
adc
xchg
retf
push
jae
neg
push
std
pop
pop
cmp
adc
inc
xlat
cli
add
xchg
aad
out
mov
add
scas
jmp
sub
push
add
stc
inc
test
xchg
add
fimul
iret
inc
add
cmp
lods
inc
inc
stc
cs
das
xchg
add
mov
adc
(bad)
loop
push
imul
cmp
outs
mov
dec
fwait
ins
xor
pop
xchg
mov
inc
ret
sub
mov
ins
or
jl
dec
out
xchg
push
aas
lds
add
mov
das
mov
in
into
push
and
push
inc
retf
push
cdq
retf
ret
push
fwait
mov
sbb
es
xchg
mov
pop
test
pop
push
sub
jmp
mov
les
push
mov
fwait
push
in
xchg
int
jle
mov
fisub
pop
das
dec
jp
jo
pop
push
cmc
or
mov
mov
outs
aad
retf
shr
mov
pcmpeqw
sub
sub
nop
xchg
sahf
cwde
sub
add
test
sar
xor
fwait
mov
fstp
cmp
scas
ins
mov
mov
rcl
ror
or
pop
shl
jbe
push
jecxz
add
or
bound
adc
jno
push
popf
shl
cmps
cmp
jecxz
jmp
push
inc
cmc
arpl
inc
mov
dec
ds
mov
or
das
call
imul
std
cwde
xchg
pop
push
mov
cwde
sub
lahf
and
add
dec
ffree
lahf
imul
push
aaa
jp
ds
sbb
xchg
retf
cmc
cmc
js
sub
jo
rcr
aaa
js
aas
and
pop
mov
call
and
adc
pusha
pop
aad
fidivr
mov
(bad)
xchg
push
sub
out
scas
pop
leave
adc
push
push
outs
(bad)
repz
sub
mov
clc
or
lods
adc
jns
rcr
sub
or
adc
jo
ds
mov
sbb
mov
push
push
sub
nop
(bad)
stos
push
ins
lock
je
(bad)
retf
inc
cld
xchg
jmp
je
push
xor
hlt
dec
xor
adc
(bad)
pop
das
(bad)
push
fwait
nop
test
data16
in
popa
pop
cs
mov
jmp
lds
in
mov
push
gs
test
xor
xchg
jg
mov
rcr
cvtdq2ps
into
xor
pop
push
cmps
jmp
push
pushf
les
inc
inc
mov
ficom
hlt
scas
xlat
cmp
lods
add
pop
cmps
cmp
mov
fsubr
jl
push
out
cli
sub
and
dec
pop
or
int3
std
lock
or
sbb
std
xchg
mov
xlat
pop
(bad)
dec
xchg
mov
rol
xchg
je
push
push
jle
popa
pop
hlt
loopne
push
ret
push
mov
loop
or
mov
push
add
dec
and
dec
and
dec
pop
cld
fnstsw
sbb
ds
cmp
xacquire
leave
pop
call
bound
pushf
fcom
call
cmp
sub
fst
jno
jmp
mov
fcomp
xchg
pop
sub
jbe
sub
cmps
sti
and
cmc
(bad)
xchg
sbb
bound
and
mov
push
in
push
fnsave
push
pop
push
push
pusha
cld
mov
cmp
aad
push
sar
dec
mov
jno
mov
(bad)
adc
out
pop
and
and
or
sahf
cmps
push
sbb
loopne
in
push
sbb
xor
ja
ds
cmps
cmp
xchg
inc
mov
xchg
ja
mov
add
adc
xchg
push
inc
cmp
in
bound
(bad)
daa
mov
out
cmc
pop
in
mov
int3
fistp
adc
add
push
xchg
into
mov
cli
mov
outs
sbb
xor
push
or
gs
fcom
sbb
and
repnz
pop
dec
push
hlt
pop
sahf
cmp
inc
pop
jle
jo
pushf
push
addr16
xor
lods
dec
pop
push
sahf
fadd
cmp
in
inc
xchg
cmps
xchg
repz
test
and
adc
adc
inc
xor
(bad)
out
stc
jl
cmp
fimul
inc
rcl
mov
in
sbb
fldcw
sub
ds
jae
call
or
mov
pop
into
xchg
out
mov
scas
in
sbb
or
hlt
aas
mov
sub
mov
sub
xchg
sbb
sub
out
stos
mov
bound
mov
add
je
shr
popa
ret
stos
aam
pop
sahf
sbb
xchg
out
jle
push
mov
push
mov
sar
ret
fcomp
jle
jmp
in
lds
jecxz
inc
mov
jns
xchg
stos
mov
nop
or
rcr
stc
les
pop
enter
jb
push
pop
adc
hlt
jae
pop
push
lds
or
jl
xor
stos
fimul
jecxz
(bad)
sub
(bad)
pop
add
repnz
retf
repz
mov
mov
mov
int3
test
mov
sbb
imul
das
add
ds
out
xchg
jae
ret
sub
jns
fcomip
push
js
sub
inc
jno
push
mov
aas
cmp
call
or
sbb
pop
xchg
add
xor
adc
and
jns
or
fisubr
and
push
cli
sub
ror
sbb
(bad)
rcr
arpl
iret
cmp
mov
adc
or
sar
push
push
push
sbb
mov
jl
adc
rol
adc
shl
add
push
pop
push
loope
ins
in
mov
mov
das
mov
mov
pop
fstp
scas
jbe
fnstcw
cmp
scas
lds
push
or
xor
popf
hlt
inc
xchg
in
out
push
frstor
pop
adc
es
push
sbb
push
xor
xchg
jno
mov
mov
jmp
ret
mov
test
sar
mov
not
(bad)
in
adc
sub
pop
adc
cmps
shr
pop
adc
push
ret
sahf
loope
mov
mov
ror
jle
js
push
call
in
xchg
ja
cwde
std
push
pushf
test
push
dec
out
retf
mov
inc
ins
jg
xchg
push
mov
js
pop
stos
xchg
imul
jbe
pop
aas
jns
daa
daa
mov
out
cmp
call
sub
retf
ins
xchg
sbb
(bad)
mov
fimul
add
push
xchg
pop
in
fadd
pop
es
sbb
xchg
push
adc
and
js
pop
fcom
jmp
push
dec
arpl
adc
sbb
pop
dec
sbb
push
retf
out
jns
cli
leave
hlt
and
iret
lods
enter
sti
fnsave
push
inc
jmp
mov
mov
pushf
in
inc
xchg
inc
(bad)
xchg
in
(bad)
xor
jns
addr16
mov
dec
xor
daa
icebp
xlat
loopne
push
lock
movs
je
ror
mov
pop
mov
sbb
rcr
adc
fsub
cmps
pop
dec
mov
cmp
sub
das
cmp
mov
aad
pop
addr16
dec
xor
dec
sbb
jl
icebp
popf
sbb
jmp
adc
(bad)
dec
lds
dec
scas
sub
jb
inc
mov
scas
jne
clc
cmp
test
aaa
dec
mov
dec
xadd
gs
(bad)
outs
mov
sbb
mov
pop
idiv
mov
push
add
mov
dec
in
ss
xchg
cmp
xor
addr16
ds
ins
jge
add
and
fstp
in
ins
out
push
xor
cmp
pushf
jp
cmps
ins
dec
adc
lods
(bad)
push
jge
sub
scas
retf
loope
jnp
aaa
stos
leave
(bad)
out
imul
mov
shr
lea
push
loop
mov
shl
add
arpl
add
pop
icebp
mov
or
inc
xlat
sahf
xchg
mov
scas
addr16
outs
psubd
jno
test
fisub
xlat
xlat
ins
jmp
push
icebp
pop
sbb
add
jg
xchg
push
and
jbe
sbb
xadd
aaa
daa
inc
dec
dec
stos
jno
xchg
sbb
or
inc
sbb
adc
ja
cmp
scas
jmp
mov
pop
loopne
xchg
outs
fdivr
pop
loopne
aad
dec
lahf
xchg
jbe
pop
ror
sbb
jne
push
test
mov
shl
add
cmp
xchg
nop
not
cli
test
xchg
cs
jl
(bad)
sahf
mov
inc
add
jne
cmps
dec
xor
jmp
sti
jne
loop
push
icebp
shr
lahf
mov
push
stos
aad
inc
in
cmp
cmp
fwait
mov
lds
mov
pop
or
pop
repz
ins
loopne
inc
jl
mov
inc
ja
(bad)
(bad)
test
shr
fst
mov
les
popa
int3
out
in
call
pop
shl
in
fwait
add
push
movs
jo
push
fbstp
loopne
mov
adc
fs
aas
nop
mov
nop
pop
mov
or
xchg
and
lea
setae
push
pop
xchg
xor
jl
sbb
cdq
out
js
fidivr
jb
jae
sahf
mov
cmp
mov
js
adc
push
ins
xlat
and
xchg
lock
inc
sti
pop
out
jge
cmp
addr16
pop
mov
cdq
ss
and
cmp
and
add
imul
mov
loope
test
xor
imul
cdq
jl
out
cmp
push
cmps
sahf
mov
jns
cli
xor
(bad)
div
fninit
jg
les
mov
jnp
in
ret
sub
addr16
xchg
rcr
test
jae
test
sub
push
out
mov
int3
add
out
(bad)
push
pop
div
sahf
mov
scas
aam
or
lods
rol
push
repnz
pop
xchg
dec
ror
test
push
hlt
retf
inc
popf
rol
fwait
test
daa
movs
push
imul
movs
adc
inc
bound
out
sti
imul
push
gs
mov
sbb
xchg
add
mov
div
pop
cmp
xor
push
(bad)
push
mov
lds
xchg
test
pop
dec
in
test
and
fs
fcmovbe
arpl
cmp
cmp
out
mov
mov
out
add
fwait
sub
push
xchg
and
sti
jns
add
(bad)
sub
cmp
mov
pop
sbb
fdiv
mov
jne
jge
lds
mov
sahf
retf
push
cmp
mov
loopne
fadd
push
fwait
gs
sbb
sub
arpl
jns
mov
add
in
lds
and
hlt
inc
movs
inc
sub
(bad)
test
jno
gs
(bad)
inc
out
cmps
(bad)
pop
popf
sbb
xor
jmp
pop
jb
cmp
pusha
dec
dec
dec
ret
imul
jb
cmp
xchg
aad
inc
push
ins
jo
jle
leave
add
and
push
repnz
rcr
or
rcr
cwde
or
sti
add
mov
and
dec
sar
jmp
push
ror
bound
jmp
sub
push
das
and
mov
ficom
xchg
cmps
icebp
jmp
outs
loope
inc
(bad)
imul
mov
aas
jmp
sub
sub
movs
lock
and
aam
and
hlt
jle
fistp
bound
lods
add
test
mov
sti
push
pop
xchg
jg
jne
cmp
fwait
jae
jno
repnz
in
in
and
cdq
pushf
inc
mov
fsubr
mov
fnstsw
mov
test
scas
dec
pop
imul
dec
mov
sub
cmp
jmp
xchg
or
dec
adc
ror
(bad)
xlat
or
out
(bad)
ror
out
sub
xor
pop
xor
xor
ss
mov
lahf
sbb
ret
ins
add
push
pop
data16
push
and
dec
add
ja
xchg
mov
scas
dec
sahf
out
out
ret
icebp
retf
and
xchg
dec
mov
inc
adc
cmps
mov
mov
out
push
mov
mov
jmp
sbb
ds
jns
out
fisub
push
or
sahf
sbb
xor
fcomp
js
mov
jecxz
sub
mov
mov
push
popa
adc
push
sub
sbb
imul
xor
add
or
test
mov
inc
scas
xchg
les
sbb
scas
out
repz
lahf
xchg
stos
mov
push
je
(bad)
mov
inc
out
inc
std
mov
mov
jno
out
jmp
sbb
jge
popa
fldenv
jne
aad
sbb
adc
jp
cs
movs
fisub
repnz
or
mov
pop
loop
fcom
push
sbb
pushf
xor
add
cmovno
pop
enter
(bad)
pop
inc
or
mov
mov
and
mov
push
pushf
aad
add
xor
fistp
loopne
ins
cwde
sbb
stc
and
pop
mov
ret
add
sbb
retf
out
or
cwde
lea
mov
ss
(bad)
std
test
jno
loop
sub
pushf
add
jne
mov
inc
push
cmp
push
pop
push
jg
cs
leave
xchg
(bad)
(bad)
push
xchg
mov
inc
sbb
dec
push
fwait
cmp
xchg
stc
jge
(bad)
dec
lock
mov
xlat
and
ror
or
dec
inc
fstp
idiv
cli
ins
xlat
sbb
xchg
loope
sar
popf
add
rcr
xor
inc
adc
xor
mov
xlat
sbb
outs
cs
(bad)
ficomp
pop
fsub
mov
imul
loopne
push
in
rcl
inc
cmp
gs
imul
pop
jge
ficom
lahf
call
adc
xchg
leave
push
ja
cmps
mul
xor
xor
or
and
outs
xor
xlat
pop
fnstsw
mov
daa
pop
pop
xchg
ret
inc
movsx
shr
pop
fs
scas
iret
scas
cmps
std
(bad)
jnp
fiadd
movs
mov
xchg
mov
sub
jne
sub
and
mov
and
outs
sub
ret
push
or
xor
xor
xlat
sbb
cmp
inc
mov
imul
jno
or
push
fadd
pop
iret
clc
ja
mov
stos
dec
lods
xchg
xor
(bad)
and
bound
and
jae
lahf
push
jbe
jmp
xor
repnz
push
mov
and
xchg
xchg
push
jle
or
jns
ret
sub
fild
outs
sub
mov
outs
out
shr
xchg
aas
jmp
test
sbb
clc
jae
(bad)
jmp
mov
fwait
inc
pusha
ins
adc
cmp
pop
rol
movs
xchg
cmp
add
jmp
pop
fbld
mov
cld
jo
iret
add
call
ja
fnstcw
ret
xchg
xchg
outs
inc
dec
sbb
inc
inc
fcom
and
call
ficom
sbb
lea
lea
add
in
fnstsw
daa
xor
aaa
in
xchg
fst
add
pushf
sub
jmp
push
jmp
daa
adc
into
jmp
push
fs
xchg
jb
fld
dec
push
cmp
jno
inc
cmps
in
(bad)
or
outs
rcl
(bad)
je
dec
mov
pusha
adc
(bad)
mov
mov
mov
scas
add
pop
(bad)
cmp
imul
pop
in
retf
gs
jne
sbb
outs
add
cmps
rcl
pop
sub
lods
inc
sbb
mov
mov
adc
jmp
repnz
cmp
xchg
mov
mov
dec
mov
push
mov
sub
mov
dec
cmps
lahf
imul
inc
or
repz
xchg
(bad)
jmp
sahf
jge
int
outs
das
hlt
mov
and
repnz
add
test
push
mov
fmul
jg
mov
icebp
cli
jle
xchg
mov
in
mov
pop
dec
test
fcomip
inc
sub
stos
cli
or
neg
(bad)
pop
in
jnp
stos
ss
push
fucomi
inc
pop
dec
push
scas
sbb
xchg
xlat
fdiv
xor
ins
add
mov
lods
sub
dec
xchg
leave
or
mov
in
push
rcl
add
enter
dec
scas
cli
sbb
fdiv
movs
ret
inc
mov
inc
adc
pop
aam
pop
cld
push
repz
icebp
sub
add
icebp
out
jmp
xchg
int
retf
jmp
mov
nop
(bad)
stos
lods
int3
push
push
cmps
fdivr
sub
push
enter
mov
xchg
das
and
in
(bad)
jmp
cmps
(bad)
mov
mov
dec
adc
mov
shr
cwde
jmp
pop
xor
inc
mov
jmp
out
dec
jns
aaa
test
call
sub
movs
xlat
cmps
jae
ret
sbb
mov
mov
sbb
jo
inc
xor
pop
pop
test
push
mov
mov
mov
scas
push
ins
stos
loope
lock
xchg
cmp
inc
pushf
loope
lods
in
test
xor
call
stos
jne
sbb
test
mov
in
js
retf
add
mov
sub
loopne
dec
xchg
mov
outs
in
adc
adc
push
mov
and
push
in
dec
mov
mov
in
and
mov
(bad)
sbb
retf
jns
pusha
mov
clc
es
mov
sub
push
fdivr
jge
xchg
cld
inc
stc
jecxz
ins
repz
repz
cmps
and
jl
adc
xchg
dec
fadd
movs
fmul
iret
sbb
icebp
(bad)
xchg
cmps
(bad)
rcr
jmp
add
movs
mov
and
xchg
hlt
outs
cld
pop
clc
retf
ins
nop
mov
cmp
and
ret
repz
and
or
dec
mov
xchg
xchg
pop
adc
and
mov
cmp
mov
cs
movs
fnstenv
rcr
pop
and
adc
clc
es
stc
mov
cmp
sbb
and
iret
jmp
or
mov
jno
or
rcr
dec
dec
add
xchg
in
xor
push
inc
clc
sbb
lods
jge
mov
mov
int
in
shr
cmp
pop
add
cmp
cmps
sbb
dec
out
cmc
xchg
test
sbb
cmp
cwde
xor
pop
lods
pop
shr
stos
iret
cs
mov
push
enter
imul
and
dec
out
sbb
shr
and
sub
and
sbb
push
in
xor
mov
jecxz
inc
jo
jae
jg
xor
jbe
mov
popa
jo
adc
ror
mov
add
iret
sti
xor
mov
adc
inc
dec
and
add
repnz
mov
dec
fistp
and
jle
pop
jne
sbb
pop
mov
pop
stos
dec
test
test
std
or
sub
xor
jb
add
dec
aas
mov
push
jp
in
aas
cwde
in
mov
adc
fst
repz
sbb
add
mov
fst
jbe
inc
pop
pop
jl
leave
shr
sbb
push
add
mov
retf
sub
rol
push
or
mov
lahf
mov
jmp
sub
jle
loope
dec
mov
aad
pop
cs
adc
outs
lea
or
push
ret
jecxz
ret
mov
adc
in
mov
mov
stos
movnti
aad
clc
loop
rcr
(bad)
jns
imul
cmps
inc
inc
dec
push
xchg
and
adc
ss
xor
std
call
mov
add
mov
out
or
xchg
(bad)
xor
xlat
xor
adc
xchg
sub
inc
in
neg
cmp
inc
ror
mov
mov
cmp
pop
es
call
dec
mov
jnp
cmp
dec
cmp
jmp
cdq
iret
mov
test
adc
fidivr
in
dec
popa
inc
(bad)
sbb
fs
cwde
test
and
ret
out
loope
and
cli
inc
arpl
cmps
add
out
ret
sub
div
outs
push
dec
test
sbb
pop
dec
xchg
push
ins
jno
jne
mov
outs
sbb
xchg
push
sub
mov
js
inc
push
call
pop
push
loop
fs
sbb
and
lods
jo
or
(bad)
aaa
imul
sub
outs
(bad)
test
jns
std
aam
dec
cmp
add
shl
test
mov
push
retf
mov
add
inc
dec
push
lods
lea
cld
call
push
clc
jmp
cli
mov
cwde
add
or
enter
dec
dec
sub
mov
retf
repnz
popa
ins
enter
cwde
or
mov
jl
and
repz
pop
(bad)
cmp
push
jle
sbb
and
imul
or
dec
mov
(bad)
mov
test
ror
shl
test
imul
or
test
jg
call
xchg
test
ds
ss
stos
enter
fdivr
push
int3
stos
test
enter
or
jle
(bad)
aad
mov
in
or
mov
int
add
sbb
push
sub
cwde
mov
mov
jnp
call
aas
jg
int
adc
lahf
enter
mov
ss
addr16
jmp
aaa
xor
push
or
add
sub
std
cwde
lock
fwait
lods
repnz
sub
mov
ins
pop
pop
or
push
sub
cmp
sub
data16
psrld
and
xchg
bound
clc
and
xchg
rcl
repz
loopne
dec
movs
inc
sbb
hlt
sbb
call
ror
sub
push
jmp
xchg
into
mov
out
fucomp
push
or
push
out
jbe
(bad)
js
pop
inc
adc
popf
aam
cwde
cdq
out
ret
push
mov
in
jl
int3
pop
push
pop
(bad)
xor
cld
das
cmp
bound
push
hlt
push
test
int
xchg
sub
stc
cmc
div
sar
and
cmps
push
mov
stos
das
jnp
sub
pop
(bad)
mov
test
(bad)
pop
jl
dec
xlat
fisttp
push
add
dec
aam
adc
pop
jno
cwde
enter
inc
mov
xchg
std
mov
pop
push
es
jnp
xchg
retf
data16
dec
fcomp
fld
mov
sub
stos
lahf
dec
test
or
ins
es
push
mov
xor
mov
shl
add
in
xchg
jae
mov
ss
(bad)
adc
push
push
daa
mov
loop
fst
sahf
aas
(bad)
push
cmp
mov
sub
or
cmp
ret
add
adc
sbb
dec
jecxz
arpl
fidiv
(bad)
and
dec
movs
outs
movs
fstp
mov
sar
pusha
cdq
push
adc
sub
aad
movs
sbb
call
jg
daa
fst
fcom
inc
push
jae
push
inc
cmps
aaa
fsub
shl
icebp
pop
sub
and
imul
enter
pop
pop
xchg
(bad)
xor
dec
imul
adc
in
fisub
jo
push
nop
idiv
fs
aad
xor
adc
gs
mov
dec
jo
aaa
sbb
ins
(bad)
mov
mov
inc
pusha
aaa
mov
xchg
shr
adc
fsub
xchg
aaa
pushf
clc
fcomp
cmp
jle
pop
fidiv
les
call
jg
sub
cli
(bad)
pushf
push
sbb
sti
popa
fcmove
jbe
push
imul
jle
pop
inc
fmul
and
xchg
loop
cmp
jp
cmp
out
dec
xor
outs
push
xlat
test
inc
or
xchg
aaa
aam
mov
dec
sbb
cvttps2pi
add
add
mov
mov
mov
or
jb
mov
call
xor
in
cmp
inc
ins
sub
adc
xchg
rol
sub
cmc
mov
xchg
mov
add
mov
outs
arpl
fidiv
or
out
dec
dec
mov
(bad)
in
xchg
std
lods
xor
jnp
shl
imul
mov
retf
push
into
or
shr
xchg
dec
dec
sub
adc
(bad)
enter
in
add
cmc
jmp
add
mov
mov
mov
aad
test
or
shr
or
adc
lods
and
cmps
mov
xor
xor
mov
imul
mov
imul
mov
xchg
xchg
std
stc
mov
fsub
lock
imul
sub
and
sub
xchg
pop
das
es
and
js
test
xchg
jle
pop
xchg
sbb
inc
in
pop
sbb
movs
inc
adc
cmp
hlt
mov
inc
ror
inc
xor
(bad)
outs
int
add
pop
add
inc
in
jns
push
cmps
js
adc
leave
fldcw
add
in
mov
in
retf
xchg
push
xlat
sbb
xchg
jae
cmp
ja
xor
ss
aas
sbb
loopne
fimul
mov
dec
jo
add
xor
inc
dec
loope
fidiv
into
xchg
jg
rcl
stc
push
dec
xchg
shl
stc
cs
ins
cmps
ret
add
mov
es
adc
cmp
and
pop
ja
xor
retf
(bad)
and
xchg
icebp
or
mov
sbb
shl
scas
pop
dec
adc
jno
(bad)
fidivr
adc
jbe
cmp
cmp
push
test
(bad)
cmp
sbb
rcr
push
and
adc
ds
in
packssdw
call
push
retf
ror
dec
mov
outs
jo
popa
push
push
sbb
jmp
cld
cmp
icebp
cmp
imul
dec
movs
inc
pop
and
ins
iret
pop
pusha
adc
adc
sbb
(bad)
in
retf
js
pop
mov
jno
dec
daa
outs
ss
iret
mov
push
push
(bad)
(bad)
aas
add
and
xor
add
fiadd
jnp
(bad)
cmp
in
xchg
mov
imul
and
xor
loop
hlt
sahf
sbb
push
js
lods
mov
mov
add
xrelease
movs
sahf
addr16
ret
push
mov
add
retf
mov
ins
iret
jno
sahf
jle
fisttp
push
cmps
xchg
stc
pushf
sbb
mov
lds
(bad)
mov
inc
inc
int
cmp
xor
mov
add
ret
mov
xor
div
sar
retf
mov
ds
ret
sub
(bad)
fistp
jl
imul
jb
shl
push
inc
pop
(bad)
loope
lods
mov
jmp
push
mov
mov
les
pop
(bad)
fdivrp
scas
push
mov
lock
cmp
dec
std
call
or
lods
inc
cmp
(bad)
dec
add
inc
ins
clc
(bad)
(bad)
and
push
push
mov
mov
std
push
add
in
fistp
pop
or
test
jmp
dec
cmps
popf
int
inc
jbe
jl
fcomp
sbb
push
hlt
push
adc
pusha
jmp
(bad)
push
push
call
mov
ins
iret
fidivr
mov
sahf
xchg
sub
add
sbb
mov
sub
and
leave
cdq
shl
jg
mov
xchg
stos
cmp
movs
jns
scas
scas
cld
push
in
fisttp
cmp
fcmovnbe
ret
pop
test
leave
push
(bad)
into
mov
push
add
in
cdq
loop
adc
jl
xor
imul
out
mov
retf
mov
movs
in
ins
pop
dec
ret
lahf
mov
clc
lea
dec
lds
test
pop
jmp
cdq
xor
and
xchg
outs
mov
sub
and
out
mov
xor
rep
sbb
imul
mov
sub
inc
fwait
jge
or
hlt
sub
ret
outs
daa
test
aas
xchg
mov
scas
jmp
xchg
test
test
jle
imul
and
mov
and
mov
js
pop
in
and
add
add
pop
mov
mov
mov
std
mov
push
mov
push
and
lock
add
int3
jl
ds
xor
cdq
retf
std
push
daa
add
das
push
call
rol
or
loope
rcr
and
jno
shr
mov
sti
jecxz
adc
scas
test
push
(bad)
stc
idiv
xchg
dec
xor
xchg
iret
dec
or
fst
jne
adc
dec
or
push
or
add
ret
call
inc
iret
pusha
imul
lds
inc
inc
dec
addr16
loopne
push
sahf
mov
test
mov
sahf
cmc
jp
(bad)
icebp
imul
cmp
inc
cdq
cs
push
inc
sub
jecxz
enter
out
imul
xchg
pop
pusha
xor
jmp
mov
add
inc
jno
pop
mov
outs
pop
mov
inc
add
cmp
dec
mov
add
pop
sbb
adc
neg
cmp
mov
int3
es
push
and
movsx
cmp
scas
sbb
adc
test
rol
xor
or
mov
cs
lods
sub
aam
push
push
inc
pop
or
mov
jl
fnstenv
mov
and
mov
out
shl
into
jp
rcr
cdq
mov
mov
and
mov
mov
jmp
scas
cld
ficom
enter
push
or
enter
or
arpl
cmp
and
pop
arpl
push
fs
pop
fldcw
dec
cmp
repnz
int3
and
pop
mov
pop
mov
cdq
mov
pop
or
pop
push
mov
test
outs
cmp
dec
inc
push
and
aad
mov
inc
mov
mov
mov
push
cmp
mov
cmp
push
push
mov
dec
lock
mov
call
xor
pop
lods
push
jl
nop
dec
cwde
mov
sbb
pop
push
ins
add
push
pop
mov
lds
and
inc
jb
pop
(bad)
fistp
fwait
inc
xor
sbb
cmp
cmps
cwde
xor
or
mov
mov
iret
mov
sahf
jg
cmps
push
inc
pop
xor
push
repz
mov
jno
sbb
imul
js
xchg
sti
(bad)
daa
mov
sbb
aas
ss
dec
push
outs
adc
push
std
ins
mov
(bad)
in
or
and
jae
dec
hlt
nop
repz
pusha
push
jmp
and
xchg
jl
ja
int3
sahf
out
mov
cmps
sahf
jb
into
lods
(bad)
xchg
dec
inc
cmps
mov
dec
sub
xor
push
retf
add
jns
mov
push
shr
adc
shr
mov
push
inc
call
cmps
stc
xchg
jnp
push
lea
ret
(bad)
push
dec
and
inc
dec
inc
int3
and
leave
into
xor
mov
popaw
imul
push
jg
enter
rcl
lods
(bad)
popa
out
sbb
(bad)
xor
icebp
and
call
jmp
jo
push
out
in
mov
and
test
pop
pop
pop
pushf
cmp
dec
retf
dec
mov
xchg
adc
pusha
leave
loope
cmp
mov
enter
jns
inc
mov
(bad)
fnstsw
outs
dec
clc
scas
ja
sbb
pop
sub
rcr
jge
cli
mov
pop
gs
push
popf
mov
pop
or
dec
sub
xor
retf
mov
or
cmps
fimul
jbe
mov
mov
sbb
rcl
cmp
cmp
movs
retf
(bad)
jne
enter
pmuludq
ss
shr
push
mov
shl
icebp
jno
push
out
sub
test
icebp
or
(bad)
push
mov
mov
push
popf
dec
pop
ret
sbb
jbe
adc
push
cmps
outs
in
out
and
or
or
sbb
pop
lods
xor
add
call
sub
sub
push
mov
inc
test
shl
aas
sub
mov
fcmove
adc
js
xchg
xchg
mov
pop
rol
sub
mov
movs
cdq
add
data16
leave
adc
test
arpl
lock
jecxz
sbb
sti
mov
fnstcw
add
scas
mov
outs
outs
aad
jnp
mov
loope
cmp
push
shr
push
enter
jecxz
cmp
stos
ja
out
cmps
jns
inc
cmp
aaa
push
cmps
pushf
mov
dec
shr
pop
mov
int
jno
cdq
xor
lods
or
cmp
leave
fwait
mov
jecxz
ret
cmp
jge
jno
and
inc
aad
dec
int
jp
xchg
out
mov
inc
push
mov
push
iret
mov
jp
xchg
mov
jge
add
loopne
inc
fucomip
ret
inc
es
cld
das
xchg
mov
lds
dec
psubsw
ja
and
sub
inc
int
mov
pop
pop
out
pop
inc
hlt
mov
dec
or
cld
inc
dec
sub
cmp
push
push
mov
dec
and
retf
and
or
mov
lods
and
nop
mov
cld
cmp
push
xchg
mov
jae
xchg
dec
outs
cld
xchg
movs
enter
cmp
iret
ins
push
in
and
jbe
clc
rcr
jnp
mov
bound
icebp
neg
sub
les
cdq
nop
mov
sub
jp
cmp
adc
ror
(bad)
mov
cmps
cmps
inc
jp
cmc
shl
sub
arpl
scas
xchg
fisub
shr
ss
add
jge
popf
fs
push
cwde
out
(bad)
cmp
clc
xchg
fisub
js
cmp
add
push
xor
mov
fwait
lea
aad
sub
push
inc
mov
fcmovne
clc
(bad)
cmp
sbb
cmp
dec
mov
mov
sahf
mov
cmp
in
and
gs
fstp
adc
cs
sti
adc
cmp
jmp
jmp
fmul
arpl
and
out
faddp
dec
cmps
add
pop
hlt
out
lods
ja
or
and
les
mov
pushf
nop
jg
mov
cmp
call
sub
jne
add
adc
les
out
test
lea
mov
mov
mov
stos
daa
mov
add
jno
cmps
retf
sbb
push
mov
xor
into
or
test
scas
xchg
retf
cmps
stc
sbb
cmp
xchg
sbb
jo
push
pop
retf
cmps
clc
fcomp
mov
les
mov
xlat
jmp
pusha
mov
pusha
and
mov
xor
mov
xchg
(bad)
and
xchg
cmc
cmp
sbb
scas
pop
das
dec
jnp
jl
popf
call
push
and
stos
outs
jg
dec
add
xchg
pushf
leave
stos
(bad)
scas
push
int3
push
add
cwde
pop
je
xchg
mov
in
push
sbb
ins
cmp
adc
mov
mov
pop
scas
inc
pusha
add
jo
pop
sbb
push
cmp
lds
xchg
sub
push
call
fistp
stos
mov
sub
xor
dec
adc
mov
xchg
scas
inc
stc
sbb
sahf
push
pop
and
jbe
pop
popa
out
out
cli
jnp
mov
(bad)
dec
mov
push
xchg
call
jp
fucomp
data16
test
dec
jge
adc
inc
jo
adc
(bad)
movs
add
inc
or
out
cs
mov
jle
cmp
movs
pop
das
int
into
lahf
add
dec
and
mov
jecxz
jnp
push
mov
lea
dec
ins
jo
push
sbb
sub
aad
imul
jle
js
pop
or
mov
jns
cmp
ret
daa
push
fldenv
mov
add
jo
pop
nop
push
stos
ret
sub
mov
pushw
adc
push
cdq
es
lahf
dec
sbb
mov
cwde
push
movs
mov
mov
push
clc
and
cmps
int
imul
xor
(bad)
push
das
(bad)
cmp
mov
repnz
je
repnz
mov
ds
mov
ret
rcr
jle
popf
lea
stos
movs
sbb
or
lods
mov
cmp
jle
fs
dec
dec
push
je
shl
jnp
ins
mov
jae
jl
mov
mov
xchg
arpl
lods
xchg
mov
xchg
repnz
cwde
or
or
xchg
mov
or
sbb
pop
xor
jmp
sub
mov
mov
cmp
xor
jle
xlat
xchg
jmp
add
(bad)
stos
fucomi
out
(bad)
outs
mov
stos
mov
cs
jo
aad
inc
mov
push
inc
addr16
das
(bad)
loop
call
sub
mov
call
push
xor
sbb
dec
movs
and
push
cmp
xlat
mov
xor
inc
je
jmp
aad
xchg
into
mov
add
pop
or
cs
jb
daa
(bad)
pusha
repnz
dec
cmp
xor
jl
dec
add
mov
shl
dec
jecxz
dec
ins
inc
pop
fwait
and
xor
(bad)
mov
stos
cmp
out
xchg
dec
inc
repz
imul
dec
adc
mov
nop
sbb
inc
xchg
push
idiv
clc
out
push
mov
pushf
fdiv
dec
jb
ror
jmp
xchg
gs
jno
xchg
stos
fisub
fcmovnb
push
test
movs
jmp
mov
je
or
repz
xchg
movd
arpl
out
fild
push
cmps
clc
mov
push
stos
push
jecxz
mov
push
shl
bound
imul
rcl
xor
lods
mov
inc
xchg
cdq
mov
mov
imul
ins
loop
mov
mov
pop
out
inc
cs
ins
mov
sbb
push
call
push
adc
mov
and
ins
mov
movs
imul
ror
xor
gs
add
mov
in
sub
inc
push
loopne
test
iret
call
sbb
cmp
mov
cmp
xchg
nop
loop
vandpd
dec
hlt
pop
loope
in
sub
push
jmp
push
jns
mov
outs
mov
scas
out
mov
das
dec
repnz
mov
mov
push
loopne
gs
adc
dec
push
xchg
int
cmp
ret
fst
(bad)
or
jmp
in
ret
mov
mov
shr
sub
mov
lods
mov
pushf
sub
test
out
mov
repnz
xchg
ss
iret
std
das
pop
push
cs
jl
cmc
lahf
sbb
dec
jnp
(bad)
mov
scas
add
xchg
fwait
push
mov
inc
les
mov
jecxz
ret
je
pop
mov
iret
jbe
push
je
and
pop
pop
rol
add
mov
xlat
ror
mov
clc
cmps
packuswb
clc
sbb
add
pop
fld
sub
ror
push
cmps
mov
imul
fst
out
mov
lods
push
sub
xor
fsubr
test
rcr
pusha
stos
mov
ds
adc
and
(bad)
pop
jbe
add
mov
pop
cmps
pop
ret
cmp
jno
pop
pop
das
push
cmps
pop
jmp
xor
add
mov
jns
in
xor
push
adc
mov
es
and
outs
inc
inc
test
mov
pop
hlt
push
cs
inc
add
mov
out
mov
shr
fsubrp
cmp
mov
cli
push
sub
xchg
lock
fimul
pop
mov
xchg
add
jge
mov
pop
(bad)
adc
rcr
and
int
arpl
int3
shr
mov
inc
ss
out
inc
cmp
mov
scas
push
loopne
lods
aaa
jns
jle
sbb
inc
les
fistp
fisubr
mov
jae
in
movs
and
add
xlat
mov
loop
sub
rcr
repz
jns
mov
sahf
mov
fisttp
ret
add
cmp
dec
shl
or
idiv
pop
aaa
and
xchg
push
sbb
movs
inc
test
xor
icebp
mov
add
adc
adc
loopne
jle
mov
lahf
pop
mov
fst
retf
test
mov
add
mov
ret
xlat
adc
push
fcmovbe
(bad)
cld
xor
inc
add
sbb
adc
mov
push
addr16
cmps
cmp
xchg
mov
mov
mov
imul
leave
xchg
retf
cdq
fcom
pop
(bad)
loopne
pop
rcr
dec
lods
cli
jg
mov
scas
mov
or
fwait
mov
or
lds
pusha
pop
adc
aas
sbb
adc
rcl
mov
jnp
mov
aaa
mov
xor
mov
sub
int3
jb
adc
cmp
push
pop
test
jnp
jmp
clc
loop
popf
push
fcmovnu
push
rcr
sub
aas
cdq
jecxz
arpl
or
sub
call
xor
and
mov
retf
imul
pop
shl
jae
cs
(bad)
cmp
test
or
stos
mov
mov
xchg
xchg
mov
pop
jg
ins
scas
xor
repz
xchg
jl
je
xor
gs
fldcw
inc
cmp
adc
les
mov
scas
out
enter
les
sbb
and
(bad)
jo
jnp
jmp
loope
inc
cmp
push
mov
adc
add
gs
adc
cmp
retf
inc
mov
je
jbe
imul
add
repnz
pop
dec
jnp
dec
pop
xchg
je
xchg
pop
inc
dec
mov
aaa
gs
gs
in
push
out
daa
daa
cmps
sbb
push
dec
push
jg
mov
or
mov
xor
sti
ds
bound
test
mov
push
repnz
push
call
xchg
test
arpl
or
dec
pop
jne
loope
hlt
adc
ret
jb
(bad)
arpl
push
fimul
mov
loop
mov
xor
mov
sbb
movs
mov
or
sbb
mov
stos
xor
mov
es
out
je
mov
test
js
js
jl
retf
hlt
(bad)
mov
add
imul
enter
push
mov
inc
or
xchg
cmp
ficom
lods
xor
movs
sub
dec
fwait
(bad)
ror
lock
fwait
pop
std
sbb
movs
adc
imul
test
cli
aam
xchg
add
jp
xchg
imul
jmp
mov
fcomp
into
mov
jl
cmp
dec
lods
loope
cwde
in
es
int3
ins
mov
cmp
add
xor
rcl
cmc
ret
inc
ins
lods
mov
push
adc
add
sbb
(bad)
sub
aas
xchg
in
or
das
fstp
in
imul
jp
xor
jl
dec
aas
xor
mov
loop
xchg
(bad)
pusha
inc
push
into
pop
or
addr16
out
mov
xchg
popa
int3
sub
outs
push
mov
xlat
in
iret
aam
iret
pop
imul
mov
add
(bad)
xor
add
leave
mov
(bad)
add
xor
inc
jmp
or
jge
lods
in
stos
or
and
push
cld
pusha
jb
outs
in
adc
shl
mov
sbb
xor
or
lods
(bad)
pop
ret
cmc
pop
mov
mov
xchg
xor
mov
cmp
cmp
scas
or
xor
int
cli
dec
cmp
repnz
lea
adc
or
rcr
pop
and
jp
xchg
ins
pop
call
mov
sub
(bad)
(bad)
and
or
cmp
push
ds
push
push
push
sahf
sar
and
mov
aas
ror
dec
or
add
movs
mov
xor
dec
movs
rcr
fld
int
test
mov
arpl
ret
inc
test
jno
(bad)
push
pop
sbb
out
lods
xchg
dec
stc
jae
stc
cmp
mov
or
cld
cmp
lods
stos
cli
cmc
adc
(bad)
imul
xchg
dec
in
ret
mov
into
mov
(bad)
xchg
inc
pop
xor
and
xor
ret
push
sbb
(bad)
aas
leave
mov
inc
jne
dec
mov
rep
sbb
mov
or
jo
mov
inc
dec
repz
push
(bad)
daa
dec
push
add
pop
and
pop
lock
mov
jns
out
sub
ins
xor
out
mov
lock
out
jnp
push
scas
dec
js
arpl
or
jmp
inc
pop
idiv
sub
bound
dec
in
test
inc
std
inc
lea
sbb
inc
pop
imul
sub
scas
sub
push
loop
xor
jge
shr
ins
bound
mov
push
(bad)
cwde
ror
xchg
jmp
lods
test
cld
mov
in
test
inc
mov
mov
in
in
xor
popa
std
xor
ret
adc
jl
pushf
pop
sbb
inc
or
je
(bad)
mov
cld
add
shl
jl
push
inc
(bad)
into
icebp
ins
add
inc
cdq
pop
sti
into
push
cmp
aam
cmc
mov
mov
fist
bound
inc
or
mov
dec
js
adc
add
imul
popf
ds
jno
push
dec
and
mov
or
cmc
xchg
lods
jmp
sbb
mov
sbb
cli
in
leave
sub
jae
and
push
push
int
jnp
adc
pop
bound
into
adc
inc
xchg
retf
div
or
push
add
dec
bound
fist
es
mov
mov
dec
xchg
imul
sar
jbe
cmc
inc
dec
inc
je
fchs
xor
test
cmps
sbb
and
sar
xchg
data16
xor
xchg
adc
dec
shl
in
mov
les
retf
add
jle
xchg
xchg
inc
lods
or
push
or
add
movs
rcl
cdq
mov
mov
push
push
outs
sub
cmps
mov
jmp
inc
lock
mov
into
adc
aad
inc
dec
sbb
xchg
lods
sub
daa
sbb
lods
loop
cmp
rcr
test
bound
xchg
jge
mov
adc
xor
sub
mov
push
push
enter
ror
test
stos
mov
lea
retf
dec
mov
pop
ror
xor
pop
cld
in
push
aaa
std
aaa
lods
push
sbb
lods
push
cmp
xchg
or
dec
stos
mov
and
xchg
jmp
cli
jp
daa
pop
or
pop
(bad)
(bad)
mov
out
sub
jne
sub
mov
fcomp
int3
jb
bound
or
out
leave
clc
addr16
loope
bound
leave
adc
fimul
inc
stos
(bad)
pop
iret
out
ja
cmps
shl
les
imul
sti
call
movs
mov
cdq
mov
ja
pop
in
inc
sbb
dec
or
jne
(bad)
cmps
sub
push
adc
dec
into
cmp
jle
mov
stos
adc
dec
jl
xor
fsub
out
dec
je
cwde
cmp
mov
bound
hlt
xchg
jmp
mov
in
pop
pushf
ins
dec
push
out
jb
mov
lods
fld
inc
ficomp
push
pminsw
lods
adc
popf
mov
add
fmul
lock
outs
test
fld1
setae
pop
sar
pop
sti
fldenv
sti
mov
mov
push
aaa
mov
adc
xor
pop
addr16
adc
adc
hlt
fsubrp
les
and
inc
mov
cdq
jg
gs
les
(bad)
cli
cwde
adc
adc
jb
ins
push
xchg
adc
add
xor
push
add
out
sahf
adc
dec
sbb
imul
ds
or
scas
ins
jmp
and
sbb
(bad)
(bad)
sub
imul
aad
or
push
cs
or
pushf
(bad)
call
(bad)
mov
les
push
stos
aam
cmps
adc
add
xlat
lock
add
pop
or
sbb
imul
xchg
out
and
dec
repnz
lahf
or
mov
and
out
repz
call
ror
adc
out
inc
cmp
push
aam
cdq
ret
or
loop
cmp
xor
mov
dec
das
aam
mov
mov
and
(bad)
cmp
lds
xor
fmul
mov
sub
cmp
xor
hlt
mov
adc
mov
push
xor
dec
(bad)
rcl
rcr
push
fst
iret
cdq
fucomp
rcl
mov
sub
add
fild
call
jmp
mov
cwde
rol
jae
retf
jns
sub
or
and
in
xlat
loopne
out
push
jae
mov
(bad)
movs
es
adc
clc
xor
xor
fisubr
mov
pushf
jge
dec
dec
bound
fs
ret
push
push
inc
add
das
cmp
in
neg
cdq
xchg
sar
loopne
cmps
mov
(bad)
retf
int3
sbb
pop
jns
sub
cmp
leave
mov
jne
rcr
push
nop
(bad)
int3
sub
mov
out
mov
and
mov
sub
(bad)
stos
inc
out
imul
xor
paddusb
sub
mov
lds
xchg
dec
lds
repnz
jmp
retf
sbb
push
adc
push
and
fmul
xor
push
inc
mov
sahf
push
mov
dec
cmp
and
daa
pop
in
dec
mov
cmp
rcl
or
(bad)
or
inc
stos
sub
xchg
scas
push
sub
jb
shl
movs
or
imul
pop
out
out
fdiv
jne
dec
mov
daa
xor
retf
xor
cmp
sub
out
xchg
pop
fwait
jnp
pop
(bad)
pushf
sti
mov
push
dec
and
mov
jbe
imul
cdq
or
sbb
cmps
outs
add
adc
shr
pusha
add
cmp
mov
test
sbb
mov
sbb
pushf
sub
add
cmps
pop
mov
xchg
call
neg
sbb
xor
cmps
js
mov
ror
popa
jo
dec
jns
add
hlt
sbb
imul
jp
sub
aam
pusha
push
movs
or
outs
sub
sbb
add
or
lods
xor
cld
movs
popa
adc
cs
bound
jae
shl
not
cmc
xchg
or
test
gs
cmps
xchg
sub
(bad)
xor
jns
sbb
scas
in
adc
imul
pop
mov
sahf
add
and
int
inc
pusha
sbb
test
cmp
or
test
adc
cwde
fwait
mov
mov
adc
shl
inc
and
sbb
xchg
(bad)
pop
add
out
jmp
add
mov
sbb
test
stos
mov
add
dec
rcr
jmp
(bad)
sbb
and
dec
inc
xor
and
test
xchg
push
inc
push
xor
xor
test
xchg
mov
gs
mov
dec
cmp
fnstsw
hlt
ins
sbb
dec
push
mov
leave
cmps
mov
cs
(bad)
data16
cmp
shl
mov
adc
dec
dec
push
add
mov
fistp
lds
cmp
rcl
xlat
dec
pop
aas
mov
fadd
dec
mov
inc
aas
mov
inc
dec
cmc
and
ja
popa
inc
add
mov
(bad)
test
xchg
mov
stos
(bad)
shl
sbb
ja
clc
cmps
(bad)
in
nop
cmp
in
sahf
cli
mov
sbb
sbb
sbb
mov
mov
pop
mov
jecxz
out
ret
push
inc
ffreep
and
fwait
(bad)
aad
idiv
test
sub
stos
(bad)
jmp
dec
iret
out
pop
sub
cmp
or
into
(bad)
clc
cmps
pushf
add
sbb
call
cmp
mov
inc
xor
out
loope
sahf
fiadd
cmp
xor
dec
test
fst
and
fwait
and
push
sub
in
adc
lds
stos
call
in
cli
dec
cld
mov
xchg
daa
dec
push
pop
test
out
mov
in
loopne
nop
jns
(bad)
jnp
jae
(bad)
jmp
fnop
sbb
ja
xlat
cmp
std
bound
adc
inc
lods
or
push
xchg
gs
pop
je
adc
repz
mov
push
inc
or
pop
push
rol
ja
sbb
enter
das
mov
mov
or
mov
in
xor
add
imul
sub
xor
fcom
xlat
sub
mov
test
and
push
add
sbb
push
fsubr
jno
mov
add
imul
add
scas
add
rcr
sub
in
enter
push
fistp
retf
mov
adc
sbb
lds
push
jle
xor
scas
bound
cmc
pop
bound
mov
leave
fcomp
int3
lea
sub
es
ja
push
je
repnz
cwde
mov
aas
sbb
add
adc
inc
xor
xchg
adc
push
mov
lds
(bad)
xor
cmp
in
prefetch
test
sbb
sbb
or
xor
cmps
retf
mov
dec
cwde
xor
retf
mov
sbb
and
loop
leave
cmc
mov
jg
mov
jne
xor
sbb
(bad)
into
repz
scas
and
mov
dec
shl
int
jl
add
sbb
adc
mov
enter
fisttp
loopne
pop
jmp
mov
mov
sbb
sub
icebp
jmp
rol
sbb
sub
mov
dec
xchg
push
push
ds
loop
push
addr16
outs
movs
mov
inc
mov
ret
adc
xchg
in
inc
xor
inc
inc
rol
mov
adc
pop
cmps
sti
mov
fwait
(bad)
mov
mov
dec
leave
xchg
jmp
rcl
add
enter
mov
repnz
pop
fnstsw
and
sub
sub
sbb
in
jmp
mov
mov
inc
hlt
neg
iret
out
jecxz
pop
inc
aam
scas
push
leave
stc
or
mov
out
xchg
inc
vpsrlq
jmp
sub
xor
aam
mov
inc
cmps
adc
jg
mov
adc
shl
dec
dec
adc
arpl
mov
enter
mov
gs
out
pmaddwd
retf
enter
mov
mov
push
pop
push
jle
cli
xor
dec
mov
or
sbb
and
mov
adc
pop
cmp
jg
sbb
push
mov
sub
adc
jnp
movs
mov
aam
mov
mov
lods
arpl
mov
xor
lods
(bad)
pusha
mov
pusha
retf
aam
mov
scas
popa
fwait
adc
sbb
movs
mov
test
mov
aam
or
comiss
mov
mov
inc
stc
lods
ja
and
shr
or
mov
xchg
imul
dec
iret
dec
jnp
loopne
ficomp
cmps
inc
jbe
popa
loop
xor
(bad)
je
pushf
push
fisubr
mov
xchg
jns
mov
adc
fisub
jae
mov
push
push
rol
mov
add
mov
mov
sub
mov
lods
xor
dec
neg
sub
or
in
mov
shr
cmp
aad
xor
je
std
out
sbb
retf
xchg
imul
and
sub
xor
(bad)
ret
cmps
jp
adc
or
jne
sbb
fimul
pop
sub
daa
jl
dec
mov
(bad)
retf
sti
mov
or
fcmovb
sahf
mov
pop
mov
cmp
mov
adc
inc
cs
xor
rcr
push
(bad)
stos
mov
xchg
cmp
or
sub
cld
dec
fsubr
lods
add
mov
gs
push
pop
xchg
test
adc
adc
and
rcr
mov
loopne
out
idiv
addr16
mov
pop
cmp
jmp
pop
push
pop
loope
xchg
sbb
(bad)
pop
jo
mov
cld
cmps
ins
mov
xchg
mov
cmp
mov
xchg
gs
arpl
(bad)
out
cs
sahf
push
jmp
arpl
lds
pop
mov
bound
dec
inc
xor
sbb
pusha
push
add
xor
or
cld
push
or
loop
movs
loopne
stos
jg
fstp
rol
mov
cld
stos
xor
es
icebp
mov
iret
ja
(bad)
xchg
xlat
iret
data16
pop
cmp
in
gs
jb
lea
sahf
xchg
cld
inc
sub
fwait
inc
in
adc
pop
pop
inc
(bad)
fldenv
add
push
es
or
sbb
and
jmp
sub
arpl
je
push
(bad)
sub
jp
xchg
call
stc
jg
jne
fistp
xor
mov
cmp
rol
lock
icebp
div
pushf
test
mov
add
ins
xor
out
pop
mov
mov
jb
das
stos
stc
nop
fisubr
xor
pushf
mov
xchg
sbb
into
mul
inc
bound
mov
icebp
push
lahf
neg
mov
adc
fmulp
cmp
dec
dec
fisttp
out
icebp
imul
fldenv
outs
jnp
xchg
jns
into
cwde
adc
pop
stos
mov
sub
inc
mov
mov
(bad)
inc
xchg
xchg
push
dec
cmps
and
cmc
jmp
mov
jp
jmp
push
fidivr
in
inc
pop
enter
adc
outs
sti
ins
fwait
popa
sahf
in
retf
jb
mov
or
or
(bad)
mov
cld
call
scas
mov
rcl
adc
cmp
inc
dec
push
sar
leave
inc
xor
pop
push
mov
pop
cmp
inc
sub
or
cs
jmp
pusha
jmp
leave
and
std
add
clc
(bad)
cs
or
adc
repnz
iret
cmp
mov
push
(bad)
lock
ret
pop
lods
ror
rcl
or
sar
mov
jae
dec
psrld
int3
fbstp
push
jmp
in
push
sub
jg
or
out
add
add
push
adc
xchg
shl
mov
mov
mov
cmp
pop
imul
sub
std
xchg
jae
jecxz
sbb
movs
imul
lods
fld
pop
pushf
push
cmp
repnz
cmps
sbb
pusha
lods
jg
dec
loope
aas
int3
dec
in
inc
or
stc
push
push
test
dec
xchg
imul
(bad)
scas
push
outs
push
add
xchg
shl
pop
dec
std
pop
xor
dec
xor
leave
or
stos
dec
out
mov
inc
sbb
jle
fisubr
and
ret
fld
cmp
sbb
scas
mov
jl
adc
push
sub
cmp
add
hlt
mov
or
cmc
mov
dec
leave
pop
push
loop
movs
ficomp
adc
jp
jbe
cmp
enter
mov
ficomp
jno
retf
push
imul
xchg
push
mov
mov
call
mov
out
pop
fidiv
sub
movs
sub
xor
xor
jmp
xchg
scas
xchg
gs
fsubr
or
mov
fimul
pop
call
fidiv
dec
push
mov
out
stos
cmp
or
inc
movs
jmp
bound
lds
or
loop
clc
xor
in
sqrtps
pop
add
sbb
lods
frstor
or
rol
fcmovnb
cmp
es
lahf
sbb
sti
ffreep
stc
or
fstp
aaa
aad
adc
test
jp
sub
nop
repz
cdq
out
push
mov
or
(bad)
sub
call
in
cmp
leavew
mov
cmp
mov
or
scas
fcomp
popa
cld
sub
popa
rcl
hlt
pop
icebp
or
mov
fisubr
dec
fisttp
call
aam
cmp
inc
xchg
stc
sub
xor
pop
mov
push
mov
jmp
(bad)
pop
and
dec
aaa
lods
addr16
push
(bad)
aam
mov
fbld
and
js
movs
push
into
xor
mov
and
inc
xchg
push
cdq
sahf
mov
or
ficom
jb
lahf
js
pop
add
mov
or
xchg
inc
aaa
push
cli
inc
cmp
shl
xchg
push
bound
mov
shl
div
(bad)
rcl
mov
xchg
jb
aam
ret
add
retf
mov
push
fdivp
mov
mov
into
adc
xor
fld
push
lock
sub
div
push
mov
mov
xchg
and
pop
mov
xor
scas
xchg
inc
jb
jl
pop
inc
push
mov
cwde
mov
xor
mov
jge
xchg
mov
and
repnz
jp
and
sub
iret
xchg
cmps
mov
add
sbb
pop
ja
add
int3
das
cwde
scas
mov
nop
mov
sub
(bad)
pop
push
sbb
pop
inc
xor
or
pop
clc
ret
adc
arpl
jl
scas
xchg
popf
jmp
mov
pusha
dec
aaa
mov
xchg
mov
cmp
int3
js
sbb
or
mov
std
push
mov
or
enter
dec
inc
mov
ds
pop
or
xchg
(bad)
mov
push
das
mov
mov
popa
and
pcmpgtd
jmp
jae
in
xor
das
ds
inc
mov
repnz
or
ins
cmps
mov
pop
cmps
fst
in
mov
sbb
pop
pop
jecxz
fnstsw
add
jecxz
test
add
jle
mov
mov
cwde
(bad)
mov
ds
pop
ja
not
push
inc
xor
fldcw
out
or
cmp
cmp
out
fwait
xchg
out
jge
xchg
xchg
and
fbld
test
test
pop
repnz
ss
nop
je
sbb
fild
(bad)
mov
int3
inc
js
das
cs
(bad)
jb
idiv
aad
inc
js
add
inc
mov
(bad)
jmp
inc
xor
xor
test
mov
mov
jmp
mov
pop
push
dec
es
push
iret
(bad)
xchg
imul
movs
xchg
in
sub
and
pop
adc
pusha
add
test
test
pop
rcr
adc
xor
xchg
dec
xor
cmp
retf
push
or
mov
cmp
mov
iret
movs
imul
sub
stos
out
and
adc
xchg
jb
loopne
dec
xor
test
push
pop
(bad)
out
and
lods
aas
sbb
cmp
popa
inc
cmp
shl
test
popf
lock
jge
dec
cwde
cwde
jge
xor
jmp
fisub
jb
mov
jae
jmp
pop
adc
pop
ins
xchg
pop
loop
push
not
pop
mov
sub
and
in
push
inc
and
dec
int
xchg
push
mov
jle
rcr
add
aas
pop
mov
je
nop
ja
(bad)
lahf
xor
(bad)
mov
rcl
rcl
ds
xchg
adc
inc
ja
cmp
and
jl
mov
jecxz
sar
inc
dec
sbb
(bad)
xor
fcom
mov
xchg
mov
xchg
pop
fcom
stos
and
mov
mov
test
pop
inc
dec
test
mov
inc
aam
daa
sbb
mov
iret
je
ins
ss
pop
pop
pop
cmps
push
push
and
jo
pop
mov
cs
test
fucomp
fcmovnbe
clc
cld
and
jp
pop
or
cmove
or
cmp
adc
cmp
or
push
retf
clc
iret
push
pushf
sub
dec
popf
push
add
test
cmp
call
mov
adc
call
aaa
sub
sub
ret
push
shl
and
dec
mov
cmp
jno
arpl
outs
into
in
shl
xchg
sub
fst
mov
xor
out
cmp
xor
test
mov
inc
aad
or
sti
jl
mov
or
fimul
popf
jge
mov
shl
div
sbb
sti
xchg
test
mov
push
push
sub
fwait
xlat
jg
push
xor
hlt
dec
jns
jmp
lods
scas
pop
push
aam
in
inc
in
sub
retf
adc
xor
mov
scas
mov
or
ss
aaa
stos
movs
das
inc
leave
adc
add
cs
lock
xor
mov
sbb
shr
imul
jge
dec
and
push
or
shl
and
fimul
jae
mov
loop
xchg
dec
sbb
(bad)
rcr
mov
and
icebp
xchg
push
lahf
(bad)
test
jne
mov
push
fcmovu
mov
mov
imul
loope
mov
mov
outs
cmp
(bad)
sbb
hlt
cwde
add
push
cmps
or
jbe
inc
or
icebp
fcomp
out
push
xchg
popa
push
loope
inc
push
xchg
or
add
dec
jbe
cs
cld
fidivr
pop
push
cmp
out
xor
pop
fdiv
pusha
aas
repnz
jnp
jg
sbb
ror
mov
pop
es
in
mov
sbb
cmp
xchg
inc
sub
jne
retf
inc
mov
out
lea
push
outs
or
mov
dec
xchg
sbb
and
add
gs
(bad)
dec
out
ret
fadd
fwait
push
jne
fcmovnb
jnp
jmp
fnsave
add
mov
lods
fadd
(bad)
fld
pop
sub
into
(bad)
dec
push
mov
and
arpl
lds
inc
shr
inc
pop
fmul
jmp
loope
push
ss
nop
outs
push
cmp
sub
mov
add
in
nop
push
and
addr16
cwde
repz
arpl
shr
shr
xor
mov
and
repnz
div
dec
mov
mov
jns
jnp
or
xor
(bad)
fbld
and
cmps
mov
dec
xchg
jecxz
bound
fiadd
push
sub
xchg
mov
xor
mov
cmp
mov
out
fadd
push
adc
sub
ja
movs
popf
(bad)
xor
push
in
mov
rcr
mov
cmp
leave
or
jle
push
sub
jnp
sbb
pop
repz
jecxz
mov
pop
push
(bad)
fcmovu
and
addr16
icebp
jae
imul
sub
lods
and
cld
sti
aam
xchg
or
retf
in
psubb
lock
sti
cmp
add
sbb
shl
(bad)
xor
push
add
mov
xchg
enter
sub
test
ds
jns
dec
inc
xlat
mov
cli
or
cmp
bound
test
and
ja
and
(bad)
sar
sbb
out
loopne
in
push
xor
(bad)
in
fldcw
push
pop
pop
cmp
shr
cmc
shl
ret
jp
clc
iret
cmp
lea
and
jae
imul
js
out
xchg
push
mov
in
mov
sahf
adc
pusha
xchg
ret
test
scas
ror
mov
(bad)
or
cmps
loope
pop
pop
xor
xchg
adc
pop
scas
repnz
mov
loope
not
and
or
and
into
mov
mov
rol
loope
cmp
js
xchg
mov
xlat
inc
fidivr
cmp
call
lds
retf
(bad)
in
loop
int
nop
shr
or
cmps
mov
mov
aas
test
mov
fsubr
aam
aad
lea
dec
push
push
pop
and
cld
push
shr
mov
cli
xor
test
shr
mov
scas
push
test
pop
ficomp
arpl
cwde
or
mov
jg
dec
jne
xchg
stc
out
dec
dec
xchg
js
dec
popa
es
lds
jno
pop
ret
fstp
je
mov
scas
std
add
inc
and
rcl
sub
sti
pop
aam
out
std
adc
popa
cs
xchg
imul
iret
pop
mov
mov
fidiv
mov
mov
cmp
mov
sbb
sbb
lahf
jbe
jbe
mov
xor
aam
pop
adc
movs
add
jp
sub
retf
ss
push
imul
test
loop
cmp
(bad)
es
push
int
shl
adc
fimul
(bad)
jnp
pop
push
mov
sub
bound
movs
sbb
jnp
xchg
inc
gs
or
xor
js
adc
or
jl
mov
add
cmp
sbb
or
popf
inc
in
xlat
jecxz
xchg
(bad)
cld
stc
xchg
lods
imul
arpl
add
(bad)
lds
add
data16
aam
arpl
and
imul
(bad)
nop
mov
faddp
jns
sub
sahf
jecxz
xchg
sar
jecxz
mov
inc
sub
xor
add
daa
popf
sar
bound
inc
dec
cdq
push
es
mov
add
push
lods
movs
int3
ficomp
shr
dec
test
sar
xchg
adc
and
sar
inc
retf
adc
adc
cld
xchg
(bad)
call
add
pop
dec
sub
out
mov
mov
xchg
pop
nop
rdtsc
lods
or
mov
inc
fild
dec
xor
repz
loop
mov
mov
pop
mov
ret
jnp
jb
in
lods
or
inc
adc
sbb
mov
jb
jmp
cmp
add
and
inc
test
xor
jmp
cmps
add
xor
pop
xor
sub
test
jmp
cmp
mov
jo
jnp
pop
push
scas
ror
out
test
cli
cli
ins
inc
(bad)
push
out
lods
sub
scas
xor
sbb
cmp
daa
and
mov
or
test
ins
lds
ret
push
les
mov
push
and
push
push
mov
lds
fist
scas
sub
in
mov
movs
sbb
popa
(bad)
pop
push
mov
lods
lds
iret
(bad)
aam
xchg
pop
jno
lods
cmp
js
dec
mov
dec
adc
retf
cli
and
mov
fcom
loope
push
into
lods
ds
dec
jae
pusha
popf
mov
out
dec
test
std
or
mov
mov
mov
daa
dec
setb
xchg
jmp
or
sub
cli
and
xchg
jle
xor
retf
and
cmp
lods
pop
mov
cwde
ins
jmp
enter
add
xor
iret
(bad)
cs
jmp
imul
inc
xchg
in
inc
lahf
xchg
test
mov
xchg
test
or
mov
mov
sub
lea
cld
lock
push
lods
pusha
xor
add
mov
mov
(bad)
xor
nop
ja
lock
pusha
nop
shr
adc
mov
idiv
(bad)
lock
outs
fidivr
lahf
repnz
xor
xor
arpl
loop
(bad)
retf
jg
stc
sub
pop
xchg
add
push
sub
icebp
mov
xor
jl
lock
and
xchg
add
jnp
dec
mov
pop
les
ret
xor
and
cmps
call
rcl
jg
stos
cmps
push
ret
add
(bad)
sub
iret
fistp
les
imul
pop
jmp
clc
fadd
inc
add
push
sbb
push
xor
mov
loopne
addr16
ds
dec
xchg
mov
(bad)
mov
cld
and
mov
sub
test
(bad)
repnz
add
xlat
test
inc
xchg
repnz
jmp
and
pop
jle
movs
pop
push
adc
test
mov
or
movs
pop
sub
call
aaa
cmp
loop
cmps
into
dec
and
jns
shl
lock
fnstenv
(bad)
cwde
repz
hlt
mov
(bad)
mov
cld
(bad)
ror
(bad)
test
imul
f2xm1
mov
jb
fldcw
and
mov
sub
repz
pop
adc
mov
jle
(bad)
aas
lods
push
ja
and
loop
mov
mov
sub
mov
cmp
stos
adc
xchg
pop
or
ss
stos
call
stc
rol
push
pop
and
in
rcr
mov
mov
into
scas
push
cmp
sub
js
aam
mov
mov
adc
ins
les
xor
aaa
xor
jae
sbb
dec
xchg
iret
mov
push
sub
xor
repnz
xorps
add
dec
js
clc
out
iret
icebp
(bad)
cmps
js
(bad)
mov
pop
das
jae
imul
sub
mov
cmp
aad
mov
in
icebp
xor
or
xor
bound
inc
dec
jge
aaa
addr16
sbb
cmp
and
lods
push
jb
lahf
xchg
adc
xchg
out
cmp
repz
ds
adc
push
scas
inc
xlat
fsub
fwait
xchg
pop
mov
scas
push
imul
scas
mov
fcmovnbe
int
cwde
ficom
jne
dec
push
fld
cmps
mov
inc
inc
jnp
movs
mov
jbe
push
mov
jecxz
lock
add
pop
retf
push
mov
push
lds
push
(bad)
mov
cld
fdivp
arpl
pop
cdq
dec
fsubr
or
out
mov
out
sub
sub
jb
cdq
cmp
jno
and
(bad)
out
push
jmp
mov
inc
xlat
adc
jo
mov
and
sbb
shl
pop
xor
jbe
es
pop
jmp
cwde
aam
xchg
call
xor
dec
ss
in
inc
jecxz
pop
jl
xchg
les
ret
adc
pusha
push
mov
mov
dec
add
shr
sbb
dec
lds
pop
fld
mov
cmps
cvtps2pi
jb
or
ret
loope
pop
inc
inc
mov
xchg
mov
(bad)
xor
jg
mov
rcr
sbb
int3
out
lods
pop
dec
add
mov
movs
bound
inc
outs
mov
imul
fcomp
call
dec
xchg
cwde
or
ficomp
fdecstp
xor
std
cmp
adc
sbb
das
sbb
dec
mov
(bad)
hlt
push
push
popa
call
fstp
adc
sub
pop
mov
jmp
test
ficom
xchg
cmp
movs
mov
daa
add
xchg
mov
add
xlat
mov
scas
push
xchg
and
pop
adc
push
mov
mov
mov
gs
(bad)
push
cmps
adc
mov
push
cs
test
push
or
int3
sub
into
pusha
(bad)
mov
not
cs
int3
fisubr
inc
aaa
test
in
mov
nop
fisub
mov
retf
mov
clc
push
inc
rcr
test
and
out
cli
sti
out
mov
cs
jne
cmp
adc
and
popa
stos
and
fisubr
push
or
inc
gs
arpl
push
jns
call
lea
push
aad
ja
(bad)
rcr
js
std
dec
jp
pop
push
jle
adc
rcr
clc
(bad)
call
pop
(bad)
in
ins
dec
repnz
push
cmp
jbe
(bad)
fcmovbe
jns
push
sbb
mov
jle
xor
out
cmp
jb
test
shl
pop
(bad)
int3
pop
mov
add
popf
dec
pop
iret
adc
and
stc
(bad)
div
jge
dec
into
out
and
(bad)
in
and
sub
jb
ret
jecxz
mov
add
and
or
and
sbb
dec
sahf
pop
idiv
sbb
test
neg
mov
add
ss
repnz
hlt
(bad)
push
jmp
xor
xchg
out
shl
adc
mov
test
stc
dec
jno
sbb
inc
call
(bad)
clc
or
adc
fwait
test
pusha
mov
jb
ins
div
cmp
xor
xor
repnz
aad
neg
daa
movs
push
outs
(bad)
aaa
sub
jmp
sti
push
lock
pop
pop
or
pop
or
gs
fs
psubusb
icebp
jno
mov
xor
push
or
(bad)
xchg
mov
push
sahf
ja
dec
arpl
ret
inc
fsubr
stos
das
add
icebp
sub
fild
int3
scas
fidiv
ds
jae
movs
pushf
sbb
adc
cli
fisubr
xchg
pop
iret
jmp
aad
sbb
stos
sbb
pusha
xchg
xchg
cmp
data16
data16
and
mov
sub
icebp
push
xor
popf
mov
jge
sahf
das
mov
ins
push
lods
aas
or
les
push
(bad)
cmp
inc
idiv
mov
ja
sub
or
mov
mov
movs
mov
push
mov
jl
in
mov
jecxz
loopne
jno
ss
add
jne
arpl
push
fisttp
pop
mov
mov
fstp
and
xor
inc
pop
xor
sti
dec
pop
sbb
into
dec
mov
outs
cmp
mov
not
xor
(bad)
mov
retf
inc
sbb
bound
lods
in
and
mov
test
or
imul
push
lea
xor
call
and
jnp
cmp
je
mov
jp
loopne
gs
stos
cmp
movs
xor
adc
xchg
out
jecxz
repnz
repz
add
push
xor
test
hlt
ins
jmp
ret
lds
and
mov
xchg
icebp
fild
mov
dec
mov
adc
int3
mov
out
sti
xchg
scas
in
cmps
call
cdq
enter
pop
push
jl
mov
dec
ficom
jbe
test
jbe
inc
push
out
add
jg
enter
sub
mov
pop
sbb
sbb
push
adc
in
ret
sti
push
inc
or
ret
inc
mov
ret
dec
mov
fwait
mov
mov
mov
test
sub
or
repz
lahf
mov
xor
pop
push
js
jge
popf
cmp
sti
inc
movs
fiadd
adc
mov
outs
inc
or
add
retf
ins
sbb
pop
nop
sahf
pop
sbb
stos
es
mov
retf
and
(bad)
push
jmp
dec
mov
add
mov
inc
adc
repnz
ret
mov
add
and
aas
adc
xor
inc
add
test
jnp
ret
sti
sbb
data16
inc
ds
inc
fxch
dec
pop
adc
jae
jns
pop
ins
xor
cmc
pop
xor
xor
dec
sub
or
mov
dec
pop
test
mov
jmp
xchg
(bad)
das
pop
push
mov
cmp
xchg
hlt
push
xchg
and
pop
sar
cli
pusha
das
sub
in
mov
mov
or
fld
xlat
and
movs
mov
lods
mov
adc
ror
imul
mov
and
jle
inc
push
data16
push
inc
ins
jae
add
sbb
call
retf
inc
je
push
sub
(bad)
cmp
mov
repnz
or
fidiv
push
retf
test
sar
jb
adc
inc
daa
js
sub
inc
ror
cwde
inc
mov
push
xchg
mov
xlat
(bad)
mov
or
adc
out
pop
cs
cmc
mov
inc
jbe
and
rol
cmp
sti
or
inc
std
push
rcr
cwde
mov
jno
mov
mov
mov
adc
and
test
aam
and
xchg
xor
fwait
mov
pop
jmp
out
int3
xor
jmp
adc
jb
fsubr
out
ja
jbe
cmp
and
pushf
mov
iret
add
shr
jae
sub
inc
inc
rcr
push
sbb
mov
fsub
pusha
das
add
mov
sbb
int3
xor
dec
pop
cwde
sbb
xchg
sbb
(bad)
in
mov
dec
nop
dec
mov
sub
in
jl
jle
fmul
fidiv
test
pop
sahf
jb
pop
or
push
test
lahf
cmp
fsubrp
lods
inc
push
cmp
popf
stc
ds
pop
push
push
dec
fidiv
(bad)
test
out
mov
out
int
push
cld
dec
test
cmc
movs
and
push
(bad)
pop
mov
mov
test
es
cmp
in
leave
jnp
movs
xor
rcl
add
dec
pusha
mov
clc
push
dec
sub
xchg
arpl
das
push
mov
aaa
xchg
jne
loop
lea
add
jge
fidiv
daa
popa
mov
ret
movs
js
add
mov
lahf
fs
pop
push
fsubr
in
out
(bad)
out
xor
call
lods
push
pop
mov
aad
pop
fcmovbe
adc
mov
ds
adc
imul
add
sbb
inc
jb
imul
xlat
xor
inc
sbb
add
mov
aaa
in
adc
loope
shr
pop
scas
add
sti
pop
(bad)
and
or
or
sub
mov
jle
mov
int3
daa
inc
inc
sbb
dec
(bad)
out
xor
cli
mov
call
and
cld
cmps
out
dec
out
imul
and
into
sub
test
mov
fdecstp
dec
sub
or
xchg
fidiv
and
stos
aas
sub
jno
daa
loopne
push
rol
sub
mov
add
fisub
dec
leave
mov
or
xor
pop
mov
fld
jae
inc
in
inc
es
push
add
mov
add
sub
push
xchg
add
mov
(bad)
fs
adc
pusha
push
adc
les
loope
scas
sbb
ret
and
add
mov
nop
pop
add
ss
push
sbb
xor
dec
fwait
test
cli
in
sub
add
pop
sbb
pop
push
push
fcomp
enter
test
cmps
mov
lock
jl
cmp
mov
sub
mov
(bad)
std
outs
lods
aas
(bad)
aaa
jmp
sub
and
jns
in
xor
jmp
mov
mov
mov
fnstcw
ins
fcmovb
push
mov
lock
out
aaa
pop
add
aas
inc
mov
(bad)
adc
fbstp
div
addr16
leave
fstp
rcr
and
mov
(bad)
sbb
adc
and
push
xchg
xor
fsubr
je
gs
ror
mov
js
cmp
mov
mov
imul
push
rep
or
xchg
jmp
pushf
test
fwait
shr
iret
jbe
xchg
or
std
(bad)
cdq
and
xchg
push
iret
(bad)
fcmovbe
fdiv
xchg
fsub
cdq
push
mov
sub
push
inc
stos
add
dec
jo
(bad)
xchg
enter
out
xchg
or
ret
fldcw
(bad)
or
loop
mov
or
xor
adc
dec
pop
cli
mov
retf
mov
jge
stos
outs
dec
fwait
retf
sbb
loopne
ret
mov
jmp
aaa
outs
xchg
leave
push
ins
loopne
and
ss
adc
mov
xor
adc
(bad)
xchg
jg
jge
sub
jl
sub
retf
loop
mov
jecxz
cmp
dec
ror
pop
les
repnz
ret
xor
in
es
test
pusha
gs
ja
dec
or
adc
jno
lahf
xor
adc
xor
into
cmp
xor
scas
in
gs
dec
leave
xchg
stos
or
and
jg
jp
cmp
cmc
xlat
push
dec
fwait
pop
and
ret
push
sbb
pop
sbb
inc
pop
jp
sbb
stc
gs
or
sbb
mov
jge
xor
add
jmp
ds
loop
aad
cmps
in
dec
push
jae
mov
icebp
inc
mov
push
je
push
out
gs
inc
add
dec
in
inc
ret
enter
push
sub
adc
lahf
add
xchg
jmp
jp
movs
cmp
jno
lods
scas
cdq
inc
popf
stos
pushf
push
mov
repnz
dec
jnp
rol
jnp
inc
scas
xchg
and
cdq
sbb
icebp
imul
aas
jl
shl
add
adc
icebp
pop
xchg
cmp
mov
cmp
xchg
cdq
and
add
popa
push
ror
(bad)
fdivr
rcl
rol
ins
jge
cmp
stos
sub
cdq
imul
mov
adc
adc
pop
call
mov
mov
outs
pusha
and
aaa
cmp
arpl
jno
ficomp
xchg
xchg
test
sbb
dec
neg
sbb
in
or
pxor
sbb
and
inc
std
cmp
loope
sbb
lods
inc
cli
bound
(bad)
jmp
fs
mov
int
cmp
fimul
ja
inc
in
add
pop
mov
ficom
push
sbb
sbb
into
bnd
les
shl
fdivr
imul
add
dec
add
or
push
sbb
cmps
mov
scas
dec
outs
sub
test
add
lds
xor
sub
fucom
xchg
addr16
shl
(bad)
in
out
sbb
outs
loope
and
ret
sbb
pop
or
sub
jecxz
push
fdivr
in
dec
mov
inc
cld
jmp
xor
dec
and
mov
xor
bound
cli
push
popa
mov
cdq
xor
jae
xchg
add
shr
cmps
aad
jb
loop
ss
adc
nop
gs
call
fs
stc
inc
fild
inc
imul
pop
rcr
lahf
in
inc
cmps
jne
mov
cmp
das
loop
mov
fnstsw
daa
jmp
cli
lds
sti
mov
test
in
hlt
add
inc
or
fs
add
inc
cdq
push
test
or
xor
in
cmps
jno
std
add
ins
or
xor
js
mov
dec
pop
xchg
push
gs
mov
lds
jb
out
int3
sub
mov
or
aam
loope
push
mov
push
ret
mov
enter
sub
test
add
push
shl
inc
out
ss
mov
fxam
pop
aad
sbb
movs
cmp
ret
fdiv
outs
jae
fwait
das
in
cmps
movs
loop
mov
mov
mov
or
sub
inc
jecxz
ja
fnsave
addr16
xor
rcr
pop
pusha
pop
loope
sahf
cld
mov
addr16
jae
xchg
mov
or
call
pop
sub
test
jg
clc
jb
fs
das
fcomp
dec
mov
cdq
mov
mov
pop
inc
push
jmp
sbb
push
ss
stc
ss
icebp
and
inc
jo
gs
mov
mov
pop
xor
or
fisubr
mov
fwait
pop
(bad)
imul
cmp
cmps
pop
fisttp
mov
test
in
xlat
repz
ffree
mov
xor
sbb
fs
idiv
dec
mov
jnp
sbb
pushw
adc
jbe
add
xor
in
ss
lds
push
xchg
imul
jg
fstp
push
add
loop
aaa
nop
ds
les
adc
mov
adc
mov
xchg
dec
cmp
ins
or
cmps
idiv
jbe
push
ins
xchg
or
enter
lock
loope
sahf
dec
push
dec
pop
aam
mov
push
mov
pop
inc
lods
ret
mov
xor
pop
mov
xchg
sahf
repnz
fimul
push
clc
imul
repnz
fisttp
jae
inc
or
inc
push
cmc
test
push
push
dec
inc
stos
and
xchg
int3
je
sub
or
adc
cmp
lea
sub
add
mov
mov
iret
test
in
xchg
icebp
cmps
jns
ficom
sbb
pop
mov
mov
addr16
mov
inc
inc
nop
inc
adc
and
pusha
push
mov
inc
lock
jp
and
jecxz
repz
push
(bad)
std
jno
push
test
imul
add
call
jmp
fs
pop
jge
mov
push
add
sub
push
fisttp
aam
xchg
ror
dec
xchg
mov
pop
dec
sbb
mov
in
jns
aaa
(bad)
pop
mov
ds
imul
xlat
or
xor
pushf
imul
shl
scas
inc
(bad)
stc
inc
sub
das
(bad)
or
adc
in
jbe
fcomp
or
shr
mov
jmp
dec
outs
movs
mov
aas
mov
xor
jo
push
pop
sub
jle
inc
jmp
outs
add
ds
push
fwait
inc
sub
jp
mov
xchg
ins
mov
in
call
pusha
lea
xchg
or
dec
cs
or
fcomp
mov
mov
cmp
adc
or
xor
pusha
mov
adc
mov
repz
sbb
add
jae
lods
scas
stc
shl
sub
(bad)
cmc
sub
(bad)
das
test
je
sub
retf
add
jl
mov
mov
imul
mov
inc
push
mov
xor
jb
jle
daa
nop
stos
mov
jnp
lods
xchg
arpl
dec
cs
aas
dec
push
mov
mov
stc
cmp
fs
scas
lock
scas
add
xchg
aas
xlat
or
clc
inc
lahf
mov
xchg
pop
(bad)
sahf
aas
sub
int
mov
cmp
cmp
sub
and
mov
sbb
ret
and
push
pop
out
rcl
test
jb
sub
dec
cmps
cld
xor
jp
pop
sar
hlt
movs
fld
cmp
imul
jmp
adc
fsub
mov
mov
lods
imul
rcr
mov
dec
adc
pop
jnp
and
(bad)
repnz
sbb
mov
lods
loop
popa
pop
(bad)
out
mov
cwde
xchg
into
sbb
xchg
and
in
push
popa
adc
ror
mov
cmp
loop
jns
scas
in
es
lahf
std
mov
shl
jp
xor
(bad)
shl
cmc
jo
or
js
push
xlat
loopne
jge
test
cdq
mov
cmps
gs
hlt
pop
in
mov
imul
xchg
addr16
jb
sub
test
push
push
repz
mov
push
inc
fistp
fs
mov
xor
push
cmp
ret
pop
out
jne
jle
enter
xor
jns
lods
mov
test
sbb
ins
jmp
retf
push
jg
rcr
jbe
nop
xlat
popa
jmp
mov
(bad)
cli
shl
daa
out
or
cmp
imul
retf
ins
adc
push
(bad)
or
and
xchg
repnz
adc
test
pusha
mov
sub
adc
pop
push
clc
in
push
lea
fstp
mov
sub
jmp
ret
xchg
mov
xlat
pop
push
int
int3
les
sub
push
cwde
or
or
cmps
cdq
call
xchg
outs
stos
aaa
pop
mov
and
out
arpl
jbe
pop
mov
fs
sbb
lock
enter
cli
call
addr16
fdivr
sbb
(bad)
and
xchg
mov
das
stos
adc
mov
imul
out
fnstenv
sahf
or
cld
int3
imul
sbb
cmc
pop
pop
dec
or
add
push
pop
loope
fistp
add
int3
cld
pop
hlt
fscale
in
retf
xor
je
dec
mov
mov
xor
mov
dec
adc
iret
jne
sub
sub
popf
mov
jno
js
mov
loopne
inc
call
push
das
add
pop
aas
push
and
out
bound
mov
ss
mov
jle
push
cmp
sbb
jl
sbb
(bad)
mov
mov
sbb
adc
dec
cwde
repz
outs
sbb
nop
jmp
jns
jmp
jae
rcr
add
call
lahf
loop
add
sub
xor
xchg
(bad)
push
xchg
cld
(bad)
jns
xchg
push
imul
gs
cmp
ds
add
adc
and
cmp
cmps
sub
call
or
int3
rcl
mov
push
in
popf
pop
ror
xchg
push
out
xchg
add
mov
adc
mov
mov
fisttp
test
nop
sar
ins
retf
sbb
inc
sub
xor
and
into
pop
jo
(bad)
xlat
or
jmp
mov
not
cli
(bad)
jns
cmp
and
pop
enter
imul
adc
aam
add
iret
loopne
(bad)
mov
ins
inc
in
sbb
sbb
inc
jl
das
adc
(bad)
aad
test
out
ret
jno
xor
les
mov
iret
cmp
add
pop
dec
imul
retf
cld
pop
add
dec
and
jl
inc
(bad)
(bad)
sub
bnd
movs
sbb
mov
mov
ret
xchg
inc
fcmovnu
push
sbb
inc
fnstcw
push
sub
adc
push
xchg
shr
outs
cmp
lock
loop
cwde
xchg
inc
mov
call
repz
enter
mov
adc
mov
fnstsw
or
xor
arpl
or
stos
add
cmp
push
and
and
pop
outs
sbb
mov
mov
cdq
dec
ja
or
pop
dec
mov
add
fwait
push
push
sbb
stos
lds
push
mov
cdq
adc
xor
mov
lock
outs
xor
jge
push
push
jbe
lods
push
sub
out
icebp
movs
fist
mov
lods
mov
cmp
loop
pop
mov
cmp
sub
lods
bound
test
mov
pop
outs
hlt
mov
mov
mov
in
adc
pop
out
(bad)
stc
je
add
sbb
aaa
ins
std
aam
push
rcr
add
data16
inc
jae
sub
repnz
pop
retf
cwde
call
mov
dec
xchg
lahf
pop
xchg
mov
jmp
and
addr16
cmp
sti
push
dec
mov
lock
ins
mov
cmp
and
outs
adc
sbb
aaa
les
sbb
sub
rcl
imul
scas
or
jno
mov
sbb
jge
cmp
mov
or
arpl
outs
mov
data16
xchg
or
dec
shr
push
fwait
lea
jnp
push
mov
jecxz
aam
mov
fs
cmps
add
cmp
adc
mov
inc
dec
xor
out
xchg
mov
outs
cmp
jno
or
stos
jne
icebp
jae
retf
js
or
xchg
outs
dec
in
or
and
cli
add
mov
ins
lahf
cmps
cmp
(bad)
jge
ins
pop
imul
pop
xor
inc
sbb
sbb
sbb
jp
rol
(bad)
xchg
pusha
test
jmp
mov
add
add
pop
push
xchg
adc
(bad)
mov
mov
neg
leave
inc
or
sub
or
aam
dec
dec
ret
es
pop
cs
addr16
mov
fcom
xchg
jbe
jns
std
dec
inc
add
enter
push
inc
stc
inc
dec
adc
repnz
mov
out
xor
push
adc
cmp
aaa
outs
popf
(bad)
movs
mov
pop
pusha
(bad)
xor
mov
sub
in
ret
mov
xchg
mov
into
iret
pop
fild
jge
lods
and
pop
call
and
jg
scas
faddp
jae
jmp
sbb
cld
stos
loope
sbb
call
test
cld
scas
adc
outs
xchg
stc
popf
in
std
jnp
in
nop
push
popf
and
xchg
or
out
sub
lock
jl
cmp
js
jp
xchg
call
cmp
sub
adc
or
daa
inc
mov
jmp
or
push
xlat
imul
jno
pop
rcl
mov
loope
sub
mov
cld
and
xor
inc
push
xor
dec
(bad)
lock
adc
(bad)
(bad)
jmp
push
sbb
cmp
mov
jae
out
push
mov
sub
hlt
int
lock
inc
push
dec
inc
pop
sahf
retf
in
sbb
ror
jns
xchg
push
xchg
or
inc
jg
iret
inc
cmp
push
xchg
cdq
fmul
add
inc
xor
add
or
mov
dec
add
push
xchg
stc
add
fsub
out
lds
sbb
inc
(bad)
jo
mov
xor
aam
mov
(bad)
fcom
inc
je
push
inc
pop
and
add
lods
and
clc
pop
js
or
lods
test
ror
xchg
mov
add
xchg
mov
add
popf
add
xor
in
fld
shr
in
cwde
mov
sahf
add
scas
jge
or
and
out
mov
icebp
(bad)
jo
lds
dec
pushw
sti
es
or
scas
pop
stc
sub
mov
mov
cmovle
sub
inc
mov
aas
mov
push
(bad)
cdq
add
dec
inc
cmp
mov
outs
(bad)
adc
fwait
or
daa
ret
pushf
addr16
sub
nop
dec
xchg
xchg
push
and
rcl
cmp
xchg
cmp
or
sub
into
out
push
add
fistp
adc
pop
shl
popa
xchg
and
xchg
mov
sahf
sub
fs
hlt
lods
mov
cmp
mov
aad
test
pusha
and
clc
movs
icebp
cmp
leave
test
ret
je
cmc
ucomiss
jmp
popa
xchg
movs
hlt
jnp
push
inc
mov
jae
nop
(bad)
sub
pop
icebp
xor
sti
ss
cdq
test
stc
push
inc
adc
xor
mov
sbb
inc
outs
out
cmps
(bad)
out
or
inc
xchg
and
add
mov
xlat
enter
jmp
and
pop
jns
shl
cmps
call
adc
xchg
cwde
and
addr16
mov
sbb
cld
ja
repz
mov
mov
loopne
nop
xchg
test
and
ror
cmp
pop
xor
stos
cmps
adc
pop
sahf
inc
in
inc
or
lods
xchg
neg
push
movs
add
and
xchg
clc
mov
(bad)
pop
dec
scas
push
xchg
and
mov
push
fidiv
xlat
and
cmp
addr16
test
neg
jb
inc
sbb
test
add
push
or
out
fstp
dec
in
out
xchg
es
inc
inc
pushf
jno
(bad)
loopne
stos
cmp
iret
adc
stc
repnz
inc
dec
adc
stos
aad
push
fcom
cmp
adc
std
add
mov
in
hlt
popa
pushf
cmp
mov
ja
xchg
mov
mov
cmp
pop
cmp
push
xchg
imul
cmp
aas
stos
and
jp
pop
mov
jge
test
mov
xchg
test
jb
mov
icebp
je
f2xm1
sbb
sbb
les
out
mov
cmc
pop
or
push
add
mov
aam
icebp
xchg
jg
xor
pop
(bad)
cld
les
mov
push
fwait
inc
sub
hlt
je
addr16
mov
cmp
dec
push
jns
test
sub
sub
(bad)
jg
iret
jbe
mov
call
inc
out
cmc
cmp
clc
pop
mov
xlat
mov
call
push
xchg
xchg
pop
push
add
mov
and
sar
arpl
or
sti
cmps
pop
rcr
loop
loope
mov
repz
and
movs
push
fwait
movs
inc
test
cdq
and
pop
int
fwait
jb
jmp
out
loop
shr
sti
mov
push
mov
sahf
retf
cmps
and
or
adc
inc
dec
shl
fmulp
int3
xor
mov
push
imul
xor
xchg
nop
add
(bad)
pop
mov
bound
mov
push
xor
(bad)
cmp
fidiv
or
add
scas
addr16
mov
jbe
or
jnp
cmc
or
xchg
mov
jle
ins
jge
pop
dec
jg
mov
push
mov
mov
lea
call
lods
mov
mov
xchg
out
jnp
xchg
push
lods
cld
int3
xor
loopne
inc
xor
sub
or
mov
pop
xor
or
cmp
test
cmps
xor
icebp
push
dec
jecxz
adc
cs
idiv
mov
lock
cmp
jmp
and
js
imul
(bad)
jmp
shl
ins
movs
(bad)
sbb
cmp
mov
aad
or
jae
mov
lds
mov
mov
and
or
or
xchg
mov
pop
lahf
dec
popa
sub
aaa
add
aas
mov
adc
cmps
enter
sub
inc
xchg
jle
sbb
add
outs
pop
sbb
std
fs
cmp
jne
mov
dec
rcl
add
aad
aad
push
stos
enter
pop
push
cmps
int3
shl
add
xor
mov
push
pushf
imul
mov
cmp
into
mov
inc
outs
push
jge
mov
icebp
sbb
add
mov
fstp
(bad)
push
aam
out
xchg
pop
pop
(bad)
daa
xlat
push
sub
test
stos
lock
dec
in
push
lods
into
inc
or
data16
outs
addr16
ffreep
dec
in
inc
imul
cdq
jp
or
sbb
nop
pop
xchg
dec
cmp
and
cmp
and
dec
cmovne
push
jl
jae
cmp
pop
inc
fcmovbe
mov
lods
adc
adc
repz
loopne
scas
into
cdq
push
cdq
movs
mov
loope
push
xchg
shr
xchg
or
nop
add
mov
leave
lods
xchg
cmp
loope
xchg
shl
add
lea
lods
dec
xchg
loope
push
in
int
jecxz
ja
cmp
hlt
sbb
lahf
mov
push
mov
push
scas
xor
xchg
sub
jle
js
jns
jmp
loope
aam
pop
icebp
and
(bad)
mov
pop
mov
mov
addr16
push
xor
call
arpl
cmp
jmp
push
add
lock
nop
sbb
mov
jmp
push
push
sbb
outs
or
mov
jnp
xor
push
mov
xlat
pushf
jmp
add
je
mov
xchg
xor
xor
aad
(bad)
or
dec
dec
jmp
mov
pushf
addr16
(bad)
movs
xchg
pop
sub
pusha
sbb
mov
(bad)
hlt
sub
push
jo
ror
jnp
inc
mov
push
xchg
sub
push
inc
in
push
xor
inc
ficom
data16
dec
sub
or
push
hlt
test
mov
retf
dec
sbb
ins
inc
mov
loopne
test
out
movs
imul
jbe
in
jb
shr
shr
mov
rcr
rcr
mov
push
mov
cmps
xor
sbb
xchg
cmp
jae
push
push
sahf
mov
mov
xchg
xchg
cs
or
test
test
fcomp
jb
cmp
mov
out
push
int3
outs
mov
sbb
dec
and
push
sbb
inc
mov
es
adc
outs
add
lea
outs
mov
push
mov
les
sbb
loop
in
ds
mov
xchg
adc
xor
pop
inc
inc
fdiv
mov
sub
push
(bad)
push
mov
sub
inc
inc
mov
jmp
(bad)
mov
ins
xlat
cmp
or
outs
sub
es
(bad)
fstp
in
(bad)
iret
rcl
mov
lahf
mov
xchg
clc
jnp
cld
push
mov
loopne
cs
mov
in
sub
imul
fs
repz
rol
ret
or
push
sub
bound
and
xor
shl
xchg
cmps
mov
mov
out
pop
movs
fwait
add
sub
test
outs
aas
push
imul
call
ret
sbb
cmp
mov
sub
js
pop
add
or
dec
inc
imul
es
cwde
popa
fdivr
movs
sti
scas
jmp
movs
daa
fld1
xor
cs
retf
int
xlat
pop
nop
cli
dec
stos
hlt
(bad)
bound
jle
dec
es
cwde
jae
ret
stos
xor
popa
js
push
or
xchg
imul
xchg
inc
jne
push
sbb
xchg
pop
sti
mov
jg
movs
or
cmp
xor
adc
mov
xchg
xchg
test
xor
dec
test
mov
inc
mov
inc
or
rcl
mov
push
dec
push
sub
jl
not
xchg
sbb
add
add
cwde
das
inc
fild
dec
mov
int3
jmp
add
js
sub
arpl
sub
mov
cli
cmps
pop
(bad)
sahf
jg
jp
es
js
in
adc
mov
jae
out
cmp
xchg
pop
jp
ds
cmp
inc
mov
push
int3
call
sbb
(bad)
or
push
popf
mov
adc
lea
js
aaa
jb
push
mov
xor
cmps
push
std
sar
lods
push
inc
out
pop
stc
xchg
and
fsubr
mov
stos
sbb
push
jl
call
les
in
out
mov
es
push
das
adc
repz
pusha
(bad)
es
or
sub
(bad)
jbe
mov
push
xchg
jge
scas
push
dec
hlt
push
jo
mov
sbb
sbb
adc
ret
popa
jle
lock
popa
mov
dec
sub
lds
add
cmp
add
addr16
cmp
or
popf
out
imul
push
inc
cmp
push
mov
mov
cmps
lea
loopne
mov
(bad)
jb
cmp
lods
push
out
div
jnp
dec
pop
add
xchg
mov
in
ret
je
jle
inc
je
test
cld
pop
out
outs
mov
and
(bad)
push
lods
xchg
dec
add
xchg
pop
push
(bad)
aad
call
add
ret
pop
or
data16
sub
mov
fisubr
retf
pop
jp
das
sbb
aaa
retf
cs
adc
mov
out
retf
adc
mov
aad
cld
inc
dec
xor
daa
retf
in
push
sbb
mov
inc
repnz
mov
xor
call
ret
inc
out
xchg
mov
inc
scas
int
push
icebp
adc
xchg
shl
movs
sti
xor
fs
(bad)
mov
mov
add
push
(bad)
xchg
sub
rcl
jno
sti
(bad)
cld
fcomp
imul
adc
jo
sub
mov
pop
and
pop
outs
or
cli
cmp
add
out
xchg
in
dec
sar
mov
add
les
nop
or
int3
sub
add
cmp
pop
gs
test
enter
mov
jle
ins
enter
fld
cmps
cld
xchg
mov
or
test
(bad)
(bad)
aad
sahf
aad
out
mov
shl
xor
in
lods
mov
mul
pop
push
xchg
mov
push
add
(bad)
cmc
rsqrtps
cmp
adc
pop
sbb
pop
enter
(bad)
mov
pop
rcr
push
add
sbb
lods
mov
les
ret
and
cmp
test
push
mov
fwait
sub
rcr
jle
std
call
cdq
aaa
ror
jle
js
fsubr
jmp
ins
jge
retf
cmp
xor
sti
cmp
loop
cmp
add
or
fcomp
xor
xor
mov
jns
imul
cmp
pop
outs
push
pop
jb
fscale
mov
pop
in
out
gs
jg
xchg
aas
out
xor
cmp
mov
fcomip
popf
mov
or
les
push
add
and
fstp
sub
(bad)
in
pop
lods
aam
pop
xor
sbb
in
std
sub
sub
dec
sub
mov
adc
test
lds
aas
ret
push
pop
cmp
out
es
sub
clc
repz
sbb
xchg
jmp
xor
xchg
dec
loopne
cdq
xor
xor
hlt
das
int
add
pop
aaa
(bad)
hlt
pop
call
(bad)
mov
cmp
sbb
hlt
jo
push
or
sub
push
fdivr
dec
test
mov
dec
or
dec
add
xchg
xor
jmp
enter
or
pop
adc
xchg
mov
(bad)
das
jle
js
cmp
das
fidivr
sbb
sbb
enter
(bad)
cmp
retf
fs
rol
sar
sub
pop
mov
lds
add
call
rcr
push
fidivr
sbb
(bad)
fs
mov
mov
nop
push
popa
adc
xor
xor
retf
add
pop
cmp
loop
add
stc
fadd
pop
push
xchg
arpl
test
sbb
jbe
cmovns
jp
jle
sub
or
pop
add
test
xchg
loop
or
push
xchg
mov
sar
aas
cmps
mov
or
pop
jg
adc
pop
ficomp
pushf
pusha
inc
xchg
fcom
or
shl
test
outs
sbb
cmc
push
jecxz
inc
rol
cdq
stos
sub
lods
pop
mov
into
inc
test
ja
cmps
mov
sub
cmp
hlt
cli
xchg
inc
sub
or
inc
sbb
jp
push
xor
cmps
ret
aad
sbb
push
aas
xchg
xor
inc
(bad)
ja
lods
(bad)
sbb
dec
sub
popf
imul
mov
jns
xchg
shl
je
popf
dec
inc
jno
enter
rol
add
mov
push
cmp
mov
jo
mov
pop
push
pusha
mov
push
aas
outs
mov
pop
add
out
jecxz
sub
cmps
jp
xor
adc
cmp
and
pop
sbb
mov
add
cmps
pop
jp
sub
sub
push
push
les
mov
jmp
stos
jne
inc
pop
test
pushf
push
cwde
call
jbe
pop
xor
loopne
test
inc
add
sbb
retf
push
inc
cdq
aad
(bad)
scas
das
and
add
and
fwait
inc
sub
(bad)
fild
inc
(bad)
jo
aas
es
repnz
sub
test
push
rcr
dec
and
xor
imul
std
stc
jmp
pop
ja
and
and
dec
mov
gs
aaa
dec
aas
mov
outs
fcom
aad
sub
or
adc
mov
sub
push
sbb
psraw
cwde
mov
and
inc
sub
or
cmp
(bad)
hlt
fisub
jmp
mov
sbb
jmp
aaa
pop
mov
in
add
pusha
jns
add
inc
es
gs
out
(bad)
add
mov
xchg
sub
inc
jecxz
mov
repz
jo
sub
mov
ror
not
mov
dec
sub
call
(bad)
or
add
nop
fldenv
test
dec
add
aaa
aam
in
bound
xchg
mov
push
ins
mov
adc
ja
stos
mov
and
in
dec
lock
cs
jl
and
mul
add
cmp
xchg
and
sub
mov
sub
call
movs
(bad)
jg
xchg
out
in
ror
and
mov
mov
lock
adc
push
test
(bad)
pusha
sbb
mov
and
(bad)
or
ins
(bad)
push
jbe
push
mov
imul
sbb
pusha
push
inc
bound
mul
imul
pop
or
int
aaa
into
mov
lds
add
inc
or
jns
in
push
fwait
or
add
pop
retf
and
lods
ffreep
pop
pop
xor
jb
jg
fist
enter
out
test
lods
fcom
push
sub
adc
sub
xchg
jl
pop
fldcw
sbb
bound
jae
add
pusha
push
fcomp
mov
cmp
pop
(bad)
mov
loopne
repz
mov
pop
and
test
push
ja
xor
xchg
xchg
cmps
mul
push
out
pop
xor
rol
push
inc
or
cmps
cmp
lock
push
lahf
aad
xchg
ss
xor
imul
sub
inc
scas
jecxz
xor
icebp
adc
or
inc
push
and
in
ds
pop
inc
and
and
push
pop
gs
add
pushf
out
ror
or
or
fcmovu
lods
dec
xchg
and
mov
jb
retf
jecxz
mov
nop
sbb
inc
dec
xchg
add
xlat
test
iret
retf
sub
and
fs
scas
jecxz
mov
inc
dec
(bad)
sti
fwait
test
cwde
mov
xchg
div
fmul
lea
cmp
mov
jmp
push
xchg
fwait
add
sbb
ja
mov
rcr
inc
xchg
hlt
hlt
repz
inc
mov
jns
call
mov
jno
hlt
std
hlt
jno
scas
pop
add
mov
je
popa
stos
xchg
pusha
arpl
and
push
jg
cmp
mov
jl
mov
jecxz
sahf
pusha
ret
mov
(bad)
push
(bad)
dec
cdq
mov
jns
cmps
xor
bound
adc
leave
adc
mov
pop
ins
or
jmp
dec
shr
add
fwait
cmp
xor
out
xchg
jecxz
jmp
dec
mov
and
inc
icebp
mov
leave
xlat
mov
and
mov
out
in
xchg
push
dec
hlt
cmc
jle
push
xor
popa
fwait
movs
leave
jne
pop
xor
(bad)
xchg
jp
call
out
push
jge
jmp
cmps
mov
rcr
icebp
xor
inc
xchg
in
jae
mov
lods
call
repnz
adc
pop
add
push
lods
mov
(bad)
aas
pop
rol
popa
pop
mov
test
sbb
cmc
mov
sub
idiv
mov
mov
(bad)
out
cs
adc
loop
pop
adc
mov
out
xor
adc
rol
mov
add
fwait
lods
cmps
(bad)
jge
mov
xchg
sub
mov
loope
jo
jecxz
(bad)
xchg
aam
xor
and
add
cmp
pop
cmp
inc
inc
jmp
(bad)
(bad)
cwde
add
and
pop
push
add
out
inc
setge
bound
mov
mov
pop
ins
sbb
sbb
jo
sbb
pushf
adc
xchg
aas
push
test
outs
popa
sub
iret
adc
stc
jne
adc
iret
in
stos
dec
outs
xchg
sbb
xlat
ja
sbb
inc
mov
out
lods
and
dec
fidiv
loope
pusha
mov
out
pusha
mov
adc
dec
sub
sbb
(bad)
loopne
fs
cmp
mov
stos
aam
push
sub
push
adc
cmp
xchg
jmp
dec
push
and
in
add
pusha
faddp
mov
outs
pop
mov
ret
mov
mov
jg
jl
fwait
mov
lods
ret
rcl
call
and
cmp
xor
xchg
sub
dec
mov
ffree
and
mov
imul
(bad)
(bad)
les
sar
inc
rcl
push
fsubp
and
xchg
push
and
dec
dec
stc
xor
and
outs
enter
adc
xlat
sbb
adc
call
jl
xchg
push
adc
jae
outs
push
push
mov
(bad)
(bad)
sub
leave
inc
jg
ds
call
add
loop
out
push
cs
push
xchg
add
fwait
movs
lea
jp
xchg
add
fs
push
add
sbb
xor
ja
xchg
add
pusha
out
ficom
push
setno
and
fidivr
jmp
add
in
sbb
sbb
adc
jo
mov
fild
sub
add
xchg
add
aas
xchg
add
ror
sbb
mov
rcl
fs
ja
xchg
add
enter
ds
xchg
add
pop
hlt
(bad)
into
push
dec
ficom
sbb
adc
lods
xchg
mov
jmp
add
mov
pop
inc
in
clc
mov
push
cmp
mov
cmp
add
mov
add
lock
push
add
jle
and
aam
test
ja
jge
xchg
ret
enter
add
out
pop
sub
push
nop
add
cmc
cdq
(bad)
in
xor
out
and
movs
push
mov
daa
test
inc
mov
test
push
shl
test
jns
jmp
xor
out
sub
adc
and
xlat
cmps
push
push
out
lds
ds
add
ret
scas
or
push
or
test
rcl
(bad)
sbb
jnp
loopne
sbb
sbb
jp
movs
aad
xchg
add
or
out
push
ret
cmc
jle
dec
test
inc
movs
sbb
test
ffree
sbb
xchg
xor
mov
fmul
mov
cmp
jmp
rcr
and
xor
daa
(bad)
mov
xor
jmp
aam
lock
pop
push
inc
shr
jb
pop
xchg
add
je
pop
sbb
loope
jbe
in
shr
mov
push
sti
adc
xchg
add
outs
fsubr
mul
aad
cmc
sub
adc
xor
dec
sbb
call
mov
repnz
fcmovne
aam
pushf
cld
xchg
fwait
and
mov
fstp
xlat
or
push
pop
pop
xchg
int3
aad
add
js
push
je
jns
inc
push
int3
sub
ret
mov
xchg
add
stos
call
jb
and
je
mov
mov
jg
mov
(bad)
xchg
add
dec
icebp
adc
into
jg
cwde
xchg
add
xor
jmp
fcmovnbe
mov
add
cmc
adc
test
pushf
ins
mov
retf
jnp
xor
inc
cmps
in
in
dec
lods
bound
mov
stc
pop
mov
push
loope
out
add
push
inc
sub
lock
or
and
out
and
mov
stos
pushf
push
test
xchg
add
sahf
or
sahf
add
push
xchg
add
xor
add
xchg
(bad)
mov
aaa
xchg
add
test
fimul
xchg
jbe
hlt
in
adc
adc
cmp
xor
iret
xchg
ret
es
rcl
test
xchg
add
stos
imul
jne
ficom
test
and
hlt
pcmpeqb
jmp
push
clc
xchg
add
call
mov
jle
xchg
xchg
add
sbb
(bad)
xor
shl
scas
add
add
ins
sbb
push
jg
xchg
add
xchg
icebp
(bad)
lods
jl
push
xor
ss
nop
or
xchg
add
xor
adc
je
sbb
mov
ficom
jge
je
in
jno
sbb
pusha
popf
push
sbb
pushf
cmps
cmp
xor
mov
jmp
sub
loop
push
or
pop
imul
push
cdq
lods
sbb
mov
add
push
cmp
xchg
je
int
lods
push
jns
iret
push
gs
mov
out
pop
push
pop
or
add
add
int
inc
and
int
clc
xchg
add
ffreep
mov
jge
repnz
aad
dec
js
sahf
mov
dec
mov
mov
sub
jno
pop
mov
fdiv
inc
aaa
je
xchg
xchg
add
sbb
pop
das
into
mov
lods
xchg
xchg
add
jmp
test
repz
xchg
ss
mov
sub
ss
ret
push
sbb
daa
retf
in
and
pop
push
xchg
add
mov
xchg
fst
loopne
cmps
mov
add
inc
fisubr
push
add
xor
xor
lods
call
mov
cmp
or
and
lahf
rcl
jle
xor
adc
cmp
add
mov
add
add
mov
mov
adc
mov
xchg
push
dec
pop
sub
jmp
xor
mov
dec
fst
js
or
or
jp
in
xchg
add
adc
enter
add
mov
mov
pop
fist
pop
add
xchg
add
in
inc
pop
cmp
xor
mov
add
outs
sbb
fsubr
or
add
inc
jmp
xchg
xchg
pop
push
jns
add
ret
push
ja
sub
test
mov
(bad)
xchg
jle
mov
add
add
cmp
mov
mov
adc
out
dec
push
xor
enter
add
dec
es
imul
cmps
imul
out
sub
dec
movs
inc
or
cmps
jmp
(bad)
ret
xchg
add
ret
mov
cmp
sub
xchg
add
in
mov
xchg
add
mov
xchg
add
std
pushf
sub
xchg
test
mov
clc
jmp
mov
(bad)
jbe
push
jae
mov
inc
cmc
cmp
jns
aam
jl
cld
ret
fsub
pop
push
in
gs
pop
jno
push
adc
sti
and
retf
xchg
cmc
inc
adc
pop
add
div
or
add
jmp
add
shl
mov
push
or
mov
mov
sbb
test
xor
cmp
push
repz
lds
sbb
cmp
mov
shl
sbb
and
adc
push
mov
xchg
add
sbb
mov
add
rol
fidiv
mov
or
xchg
dec
dec
jmp
add
push
and
xor
addr16
sbb
jbe
mov
mov
js
xchg
add
mov
sub
cdq
xchg
add
and
sub
xchg
add
pop
dec
sub
cli
popa
stos
imul
jo
push
das
data16
add
fnstcw
(bad)
pop
dec
cdq
add
jmp
cmp
(bad)
cdq
add
inc
aad
cmp
add
outs
cdq
add
jl
add
mov
shr
add
jle
or
add
es
add
sbb
cmp
call
das
loope
pop
inc
lods
push
push
ss
add
jbe
dec
sbb
js
out
dec
adc
add
sub
es
sub
(bad)
aam
xchg
xchg
stos
add
xchg
out
xchg
xchg
mov
cdq
add
add
dec
repz
add
xor
add
jmp
repnz
data16
pop
jle
cdq
add
mov
mov
sbb
cmp
add
add
dec
mov
inc
cwde
add
add
dec
cwde
add
leave
pop
push
cwde
add
jns
pop
cwde
add
(bad)
repz
pop
mov
sub
cwde
add
mov
push
cwde
add
xchg
and
add
cwde
add
stos
pop
or
addr16
fimul
and
jecxz
sub
mov
pop
xor
add
out
out
push
sbb
push
cwde
add
ins
jb
imul
ret
xchg
cmp
cmp
sbb
out
pop
das
aad
dec
mov
and
daa
adc
outs
cmp
out
cmp
mov
test
jo
call
sub
dec
(bad)
(bad)
push
mov
mov
div
or
mul
pushf
cwde
add
aas
adc
jns
adc
retf
sub
loop
aad
inc
xchg
fwait
stos
es
enter
addr16
add
(bad)
dec
fwait
add
daa
fild
sub
jmp
xchg
dec
das
mov
push
invd
cmp
mov
mov
adc
stos
sub
stos
lahf
or
xchg
adc
push
mov
push
clc
popa
pusha
mov
dec
rcr
mov
hlt
push
(bad)
dec
aam
dec
mov
mov
fwait
add
jmp
sub
lods
add
rcl
fyl2xp1
data16
inc
or
dec
cmp
add
into
(bad)
pop
xor
je
fwait
add
jbe
stos
lds
mov
rol
xchg
(bad)
cld
dec
mov
and
inc
jns
daa
jbe
mov
sbb
jp
xchg
add
lds
jno
ret
cld
fisttp
mov
test
dec
fdiv
xchg
add
mov
adc
adc
inc
or
sub
mov
loopne
repz
aaa
pop
xchg
push
sub
sbb
rcr
add
jbe
inc
mov
dec
dec
xchg
mov
loopne
cmp
inc
cmc
mov
adc
loopne
pusha
call
mov
dec
out
xor
mov
cli
js
jg
cmp
mov
mov
lock
iret
mov
(bad)
cmp
xchg
adc
scas
adc
into
sub
add
push
dec
add
add
(bad)
ss
mov
clc
lock
inc
scas
inc
stc
jmp
(bad)
(bad)
mov
(bad)
popa
xor
mov
sub
cmp
dec
into
xchg
xchg
dec
sbb
push
cmp
rcl
xor
daa
mov
pop
loop
or
adc
pop
sar
loopne
jne
jmp
pop
imul
ret
pop
retf
call
push
into
(bad)
outs
cmps
add
cmp
add
mov
xchg
jae
sti
adc
or
addr16
push
loopne
in
xchg
inc
push
popf
add
fisttp
and
xchg
pop
call
clc
lock
mov
int
loopne
adc
pop
inc
lahf
mov
jno
in
dec
mov
add
pop
sub
lock
jo
aad
popf
add
(bad)
fmul
inc
data16
mov
sbb
repnz
sub
(bad)
test
sbb
or
fs
repnz
(bad)
leave
jmp
jmp
xor
aaa
inc
repz
mov
xor
rcr
jno
mov
ret
mov
in
mov
ret
jmp
mov
mov
xor
add
(bad)
out
inc
movs
dec
std
inc
repz
mov
cs
pushf
add
add
ins
pushf
add
mov
add
fild
jl
add
and
call
add
xor
pop
inc
sub
fidivr
or
jl
stc
add
mov
or
les
add
inc
nop
jge
cmps
mov
adc
imul
mov
mov
pop
adc
outs
and
jmp
dec
push
or
bound
cli
pop
adc
adc
aad
sbb
aam
mov
jmp
inc
mov
pop
(bad)
int
enter
sub
jae
outs
jecxz
mov
pop
ss
push
mov
popf
in
push
sub
ror
xchg
jmp
std
hlt
jno
xor
sub
pushf
add
cmps
or
inc
arpl
pop
mov
add
mov
daa
inc
lahf
add
and
adc
add
out
inc
jg
cmps
retf
mov
faddp
and
lods
enter
lahf
add
movs
outs
or
jge
inc
retf
addr16
call
xchg
sub
mov
jmp
xchg
and
jmp
xchg
pushf
lea
lahf
add
lds
mov
dec
fld
lahf
add
xchg
pop
(bad)
pop
dec
(bad)
cld
arpl
pusha
aam
bound
cmp
xchg
and
xchg
pop
cmp
pop
adc
adc
cmp
xor
push
pop
pop
mov
and
jmp
pushf
(bad)
mov
sbb
ffree
shl
cmp
add
dec
adc
pop
pop
xchg
(bad)
xchg
in
xchg
jns
or
xor
test
popa
std
cmps
sahf
sub
push
gs
pop
aam
imul
lock
movs
cli
mov
dec
mov
inc
mov
mov
mov
xchg
call
push
mov
push
retf
js
ret
add
in
push
cmp
mov
(bad)
(bad)
cli
xchg
fxch
mov
xchg
fsubp
dec
xchg
in
xchg
in
stos
dec
lahf
stos
or
mov
sbb
data16
mov
sub
out
push
sub
loop
and
mov
ins
push
add
mov
pop
fs
stos
lds
jp
lods
ficomp
int
sbb
inc
je
repnz
sub
loope
cmps
ds
cld
adc
pop
add
jg
repz
ja
pop
jae
dec
dec
sti
add
mov
mov
or
ds
(bad)
dec
sbb
push
inc
shl
outs
fisttp
and
or
xchg
pop
into
adc
call
jno
nop
fistp
jmp
das
nop
jge
ss
call
inc
icebp
mov
pop
sub
fimul
(bad)
or
or
sub
mov
mov
dec
(bad)
mov
daa
cwde
or
jne
push
pop
dec
cmp
dec
mov
in
push
pop
repz
jp
pop
jle
imul
(bad)
mov
xor
add
mov
call
inc
call
jne
test
inc
in
ja
ror
std
jmp
push
pushf
test
and
mov
dec
cwde
ins
xchg
fwait
rol
in
std
hlt
ret
xchg
jmp
push
cmps
jb
jge
adc
pop
dec
(bad)
mov
outs
fidivr
inc
scas
jmp
sar
ret
pop
scas
popf
lds
aas
and
or
push
inc
xor
es
clc
retf
xchg
mov
shl
jmp
(bad)
ja
stos
sub
les
mov
ins
and
shl
ror
outs
es
test
sti
pop
out
in
fst
or
jle
xchg
pop
stos
or
les
or
test
push
test
dec
ja
aas
xchg
mov
sbb
cdq
js
pop
inc
and
stc
movs
ret
xlat
jns
inc
mov
shl
or
scas
mov
scas
test
jmp
dec
mov
lods
movs
popf
xchg
add
fidivr
add
add
add
add
mov
lock
push
push
inc
push
fimul
enter
dec
pushf
jmp
loop
add
add
inc
cmp
jae
popa
ins
and
jne
imul
pop
inc
jne
je
ins
and
outs
jae
jb
pop
push
imul
bound
pop
push
gs
gs
jae
pop
push
imul
jo
bound
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
pusha
add
add
add
hlt
sub
add
and
add
push
je
imul
add
dec
add
adc
add
and
dec
inc
add
add
dec
add
inc
sldt
and
outs
bound
add
add
add
add
add
push
popf
mov
add
cli
add
add
add
add
add
ret
add
add
add
les
add
rol
add
test
add
add
add
jbe
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
pop
add
add
add
cmps
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
aas
add
add
aas
add
add
aas
add
add
aas
add
add
pop
or
cmps
add
mov
or
fld
mov
or
jmp
mov
or
inc
mov
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
rol
jge
adc
fild
add
add
sbb
and
cs
cmp
add
aas
add
add
aas
add
add
aas
add
add
push
add
xchg
add
mov
push
add
fld
in
push
add
sti
add
add
jno
push
add
push
jno
push
add
push
jno
push
add
jno
push
add
add
push
jno
push
add
push
jno
push
add
push
jno
push
add
jno
or
inc
push
aas
add
add
aas
add
add
aas
add
add
add
add
aas
add
add
jg
or
xchg
push
jg
or
mov
add
add
add
push
aas
add
add
push
aas
add
add
push
aas
add
add
push
aas
add
add
push
lock
adc
cli
push
or
adc
and
or
or
cs
lock
or
cmp
lock
or
inc
pop
lock
or
pop
pop
lock
or
pusha
pop
lock
or
jb
lock
or
jnp
lock
or
xchg
lock
or
xchg
pop
lock
or
cwde
pop
lock
or
lahf
pop
lock
or
lods
pop
aas
add
add
add
pop
fld
adc
jmp
or
pop
adc
adc
and
adc
das
or
adc
xor
and
adc
inc
or
adc
push
or
adc
popa
or
adc
imul
or
add
and
adc
xchg
stos
or
add
add
or
adc
jecxz
and
adc
test
add
and
adc
or
and
or
pop
or
add
add
or
or
add
or
or
add
daa
or
add
daa
or
add
add
add
int
daa
or
add
or
or
add
or
or
add
or
or
add
or
or
add
daa
or
add
or
add
add
add
add
push
or
or
or
or
or
or
or
or
or
js
pop
or
add
add
add
add
fimul
ror
add
or
or
add
or
or
add
or
or
add
sub
add
aas
add
add
aas
add
add
aas
add
add
add
add
add
add
or
or
add
or
or
add
or
or
add
or
add
add
or
adc
adc
add
and
sub
xor
aas
add
add
inc
or
dec
or
pop
or
arpl
outs
or
jg
pop
add
add
add
add
add
add
add
or
xlat
or
jecxz
pop
add
add
or
repz
adc
pop
add
add
push
pop
add
add
push
pop
add
add
xor
push
add
xor
push
add
xor
push
add
xor
add
add
jae
add
add
add
add
add
adc
jl
xchg
mov
add
add
add
add
add
add
add
push
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
add
add
add
push
mov
add
add
add
add
push
mov
add
add
add
add
push
mov
add
add
add
add
push
mov
add
add
push
mov
add
add
add
add
push
mov
add
add
add
aad
mov
add
add
adc
fimul
mov
add
add
add
push
mov
add
add
add
in
mov
add
add
add
push
mov
add
add
add
out
push
mov
add
add
add
mov
add
add
add
add
mov
add
add
add
add
ror
add
add
add
add
push
add
sbb
add
add
add
push
add
sbb
add
add
add
push
add
sbb
add
add
add
push
add
sbb
add
push
add
fld
pop
add
add
push
add
fld
pop
add
add
push
add
sbb
add
add
add
push
add
sbb
add
add
add
push
add
fld
jno
test
add
adc
repz
add
fld
jle
test
add
adc
and
add
xchg
add
adc
jb
add
fld
jle
mov
add
adc
sahf
sldt
fld
jle
mov
add
adc
mov
add
lea
add
adc
cld
sldt
fld
jle
pop
add
add
add
fld
jle
xchg
add
add
add
add
fld
jle
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
lods
add
adc
add
add
add
adc
mov
add
adc
mov
add
add
add
add
add
add
push
add
fld
fwait
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
fld
mov
add
add
add
add
add
add
add
add
push
add
test
add
push
add
fld
les
retf
add
add
add
add
add
add
adc
add
add
adc
push
add
add
add
add
add
push
cli
add
add
push
add
adc
mov
add
add
add
add
add
push
pusha
add
add
push
pusha
add
add
push
pusha
add
add
push
pusha
add
add
push
pusha
add
add
push
add
add
push
push
add
fimul
outs
add
add
push
je
add
fisttp
pusha
add
add
push
pusha
add
add
push
outs
add
add
add
add
add
push
loopne
add
lds
in
add
ret
push
add
add
add
add
push
add
add
push
add
add
push
add
add
push
and
adc
leave
push
add
add
push
add
add
push
add
add
push
jns
adc
in
cmp
xor
mov
add
add
push
dec
add
add
push
push
add
push
dec
adc
push
adc
add
pop
adc
push
and
add
push
dec
adc
push
and
add
outs
adc
push
dec
adc
push
push
dec
adc
push
cmp
add
adc
test
add
or
(bad)
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
dec
adc
push
cmp
add
loope
lds
push
sub
lds
push
sub
lds
push
xor
lds
push
push
dec
adc
push
cmp
leave
add
pop
adc
add
adc
add
sbb
sub
leave
add
xor
add
ds
add
dec
adc
add
push
adc
add
push
adc
add
pop
adc
add
gs
add
outs
adc
add
js
leave
add
add
push
dec
adc
push
cmp
add
adc
test
cmc
add
mov
cmc
add
(bad)
adc
add
xchg
adc
add
outs
add
add
cdq
adc
add
mov
sub
mov
cmc
add
mov
add
cmc
add
leave
adc
add
rcl
cmc
add
fst
cmc
add
push
dec
adc
push
add
add
add
push
cmp
push
add
push
leave
add
add
push
add
add
push
cmc
add
add
push
add
add
push
lds
push
add
push
imul
jl
push
add
push
stc
add
add
push
std
add
add
push
add
add
mov
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
push
ins
add
add
push
jns
adc
lds
jno
adc
ror
jns
adc
aad
je
adc
mov
add
push
ins
add
add
push
jns
adc
mov
add
add
add
add
add
push
add
add
push
add
add
add
add
add
push
jns
push
push
dec
adc
add
mov
add
add
add
add
add
push
dec
adc
push
cmp
(bad)
adc
add
adc
sbb
and
sbb
sub
sbb
cmp
sbb
or
sbb
sbb
sbb
sub
adc
inc
adc
push
adc
gs
outs
adc
jnp
sbb
or
mov
push
dec
adc
push
xor
adc
mov
or
and
sbb
and
sub
and
add
add
add
push
sub
add
push
sub
add
push
sub
add
push
sub
add
and
add
add
sbb
adc
add
pop
and
add
add
sbb
adc
add
je
add
add
push
sbb
adc
add
jl
add
add
push
or
adc
add
add
xchg
add
adc
add
mov
add
add
adc
rcl
add
add
add
sbb
adc
add
test
add
add
push
or
adc
add
add
add
sbb
adc
add
shl
add
add
push
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
push
add
add
and
add
add
sbb
adc
pop
add
add
add
push
push
add
add
and
add
add
add
add
add
add
push
push
and
push
add
add
push
add
add
and
push
add
add
add
add
push
add
add
add
add
add
add
daa
add
add
push
add
add
add
add
push
add
add
add
add
push
ins
add
add
adc
ror
add
in
sub
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
push
add
add
push
add
push
ins
add
add
add
add
add
push
add
add
add
add
add
das
add
add
push
add
add
xor
add
add
add
add
xor
add
add
sbb
adc
xor
hlt
xor
add
add
sbb
adc
xor
and
add
add
adc
mov
add
add
add
adc
mov
add
xor
add
add
add
add
add
add
add
add
add
add
push
sbb
adc
xor
pop
xor
add
add
add
add
add
add
adc
mov
add
adc
mov
add
adc
mov
add
adc
mov
add
xor
add
add
add
add
add
add
xchg
sbb
adc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
push
sbb
adc
aaa
add
add
add
adc
add
add
mov
add
add
add
inc
add
adc
add
and
inc
add
adc
add
add
inc
add
adc
add
and
inc
add
adc
add
add
inc
add
add
add
and
inc
add
xchg
cmp
cmp
add
add
inc
add
add
add
add
add
je
xchg
cmp
push
add
add
inc
add
add
add
and
inc
add
add
add
add
retf
add
add
add
retf
add
add
add
repz
add
and
inc
add
adc
add
add
inc
add
adc
add
and
inc
add
adc
add
add
inc
add
adc
add
and
inc
add
adc
add
add
inc
add
adc
add
and
inc
add
adc
aas
add
add
inc
add
adc
aas
add
and
inc
add
adc
aas
add
add
inc
add
adc
aas
add
and
inc
add
adc
aas
add
add
inc
add
adc
aas
add
and
inc
add
adc
aas
add
add
push
add
add
add
add
add
add
add
push
ret
add
add
add
push
ret
add
aas
add
add
push
add
push
ret
add
aas
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
adc
add
rol
add
add
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
inc
add
add
push
add
add
add
add
add
add
push
add
add
adc
rcl
add
or
add
add
push
add
add
add
add
adc
mov
add
add
add
adc
ror
add
fcom
add
add
add
add
adc
mov
add
push
add
add
adc
lds
sbb
imul
add
push
sbb
adc
imul
add
push
sbb
adc
imul
add
adc
rcl
add
sbb
add
add
add
add
adc
mov
add
push
add
add
adc
mov
add
adc
mov
add
add
add
adc
mov
add
add
add
push
sbb
adc
imul
add
inc
add
add
add
add
inc
add
add
add
add
add
push
rol
push
jl
add
add
inc
add
add
adc
mov
add
add
add
add
push
sbb
adc
ins
add
add
mov
add
push
add
add
push
sbb
adc
ins
add
add
add
xchg
xlat
adc
ins
add
add
or
xchg
add
add
push
add
add
xchg
xlat
adc
ins
add
push
add
or
xchg
add
add
push
add
add
xchg
xlat
adc
ins
add
push
add
or
xchg
add
add
add
add
xchg
xlat
adc
ins
add
add
or
xchg
add
add
push
add
add
xchg
xlat
adc
ins
add
push
add
or
xchg
add
add
add
add
add
pop
add
or
xchg
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
add
add
xchg
add
push
or
jo
sub
add
add
sbb
adc
jb
cmp
add
or
add
push
lsl
pop
pop
add
or
add
push
adc
jb
pusha
pop
add
add
adc
mov
add
adc
mov
add
adc
mov
add
push
sbb
adc
je
hlt
pop
add
and
push
add
add
pop
add
and
push
add
add
add
add
push
add
add
add
mov
add
pop
add
add
add
mov
add
add
add
xchg
sbb
adc
add
pop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
or
xchg
add
add
add
add
push
add
add
add
add
add
add
or
xchg
sbb
adc
mov
je
add
add
xchg
add
add
add
or
xchg
add
add
add
add
xchg
add
add
add
add
add
sbb
adc
add
add
add
sahf
adc
add
add
add
stos
adc
add
add
add
mov
mov
cwde
add
outs
add
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
adc
popf
add
add
add
xchg
xlat
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
add
add
add
je
add
add
add
add
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
sbb
adc
cmps
add
jbe
add
add
adc
add
add
inc
add
add
jbe
add
add
add
add
add
xchg
adc
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
adc
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
add
add
push
add
add
lds
add
add
mov
add
add
push
add
add
lds
add
add
add
add
add
add
push
add
add
lds
add
add
add
add
add
add
add
add
add
add
push
add
add
lds
add
add
mov
add
add
push
add
add
lds
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
lds
add
add
add
add
push
add
pop
add
push
add
or
ror
add
or
aad
add
or
fimul
add
or
in
add
or
fisttp
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
lds
add
add
add
add
push
add
add
mov
add
add
push
add
add
lds
add
add
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
add
add
push
add
add
mov
add
add
add
add
add
add
add
push
add
add
lds
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
inc
add
adc
add
and
mov
add
add
adc
fld
adc
icebp
add
adc
adc
popa
add
adc
inc
add
adc
sub
xlat
adc
imul
jns
xlat
adc
add
adc
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
xlat
adc
add
xlat
adc
stc
add
adc
add
add
adc
add
add
adc
add
xlat
adc
imul
popa
add
adc
mov
add
add
push
ss
add
push
fadd
loope
dec
push
inc
jno
push
push
push
push
pop
pop
cmp
jbe
sbb
or
mov
add
lock
add
push
fadd
loope
stos
push
cdq
pop
loope
mov
hlt
add
add
add
adc
add
enter
rol
push
jno
rol
push
sahf
pop
rol
push
movs
pop
rol
pop
fadd
leave
add
pop
stos
pop
add
add
xchg
add
pop
mov
adc
add
add
pop
add
pop
lds
push
add
pop
fadd
push
add
fadd
push
add
retf
add
pop
rol
leave
add
add
add
cdq
pop
inc
leave
add
add
pop
fadd
or
ret
pop
inc
or
int
fild
loope
aam
out
loope
fst
out
pop
loope
loope
repz
pop
add
pop
stc
pop
add
jno
clc
pop
inc
jno
add
add
sbb
or
add
sbb
or
and
add
sbb
or
or
or
add
sub
loope
loope
xor
mov
push
sbb
or
add
add
sbb
mov
bound
pop
or
or
or
or
add
add
add
add
add
add
push
jno
leave
add
sbb
add
xlat
adc
add
rcr
jl
loope
ins
pop
xchg
loope
fistp
cdq
pop
loope
ins
pop
mov
rol
sbb
sbb
add
add
sbb
mov
sbb
or
add
or
add
adc
mov
cs
or
or
or
add
add
jmp
stc
add
sbb
or
pusha
sbb
add
add
add
add
sbb
sbb
or
add
add
add
add
add
add
sbb
inc
add
sbb
or
add
add
lsl
add
sbb
adc
adc
add
add
sbb
add
add
add
sbb
rol
sbb
jno
add
push
or
add
dec
sbb
add
sbb
mov
or
add
add
add
cmp
xchg
adc
add
sbb
add
mov
sbb
or
pop
sbb
or
push
add
add
adc
sub
xlat
adc
xor
xlat
adc
cmp
xlat
adc
inc
add
adc
sub
mov
add
add
add
add
adc
mov
or
add
xor
cmp
adc
or
add
sbb
or
lods
sbb
or
add
dec
add
adc
rol
sbb
rol
sbb
add
add
adc
add
add
sbb
or
sbb
stc
add
sbb
fadd
dec
add
sbb
dec
add
pop
inc
dec
add
sbb
dec
add
sbb
or
loope
xlat
adc
loope
sbb
test
fld
and
add
sbb
add
add
sbb
add
add
xlat
adc
sbb
adc
add
adc
adc
jns
xlat
adc
icebp
add
fld
stc
add
xchg
add
pop
add
and
rol
sbb
xlat
adc
add
or
add
add
adc
add
or
add
add
xchg
add
add
jl
xor
ficomp
les
xchg
add
xchg
add
cdq
add
xchg
add
rol
fld
cmp
sbb
add
xchg
add
stc
add
stc
add
stc
add
sub
xlat
adc
or
or
or
add
or
or
or
or
add
add
add
add
or
add
add
add
adc
sbb
sub
ss
xlat
adc
sbb
push
sbb
add
inc
or
add
inc
xchg
add
xchg
add
xchg
add
or
jge
inc
or
add
xchg
add
or
cwde
sbb
cmps
sbb
imul
sbb
mov
or
add
add
add
add
sbb
jecxz
cmp
mov
mov
add
sbb
xlat
adc
push
add
adc
sbb
cmc
sbb
or
add
sbb
push
add
pop
inc
push
add
sbb
test
add
push
xor
jl
adc
ds
xchg
or
push
inc
push
and
adc
pop
push
ret
add
add
push
push
ret
push
jne
and
jmp
or
or
add
push
cmp
adc
mov
and
adc
lahf
push
and
jno
add
add
add
add
or
mov
push
rcr
fadd
xchg
add
push
or
add
push
(bad)
xchg
add
adc
or
add
add
push
or
add
sub
sbb
xlat
adc
sbb
push
sbb
adc
xlat
adc
fs
adc
ins
add
adc
je
xlat
adc
jl
xlat
adc
add
add
add
add
add
add
add
push
mov
mov
add
add
pop
fwait
or
add
adc
adc
xor
xlat
adc
or
push
xlat
adc
add
xchg
add
pop
fisttp
add
push
out
mov
add
pop
pop
in
or
add
repz
add
adc
or
add
add
add
add
add
adc
pop
repz
add
add
sbb
or
xchg
ret
add
pop
push
or
sbb
pop
or
add
adc
add
add
and
add
or
and
test
or
call
or
fadd
pushf
add
or
outs
or
jne
pushf
add
sbb
and
and
enter
jno
xor
fmul
fimul
out
movs
add
or
and
stc
add
sbb
or
cld
or
or
fld
ds
add
or
and
jecxz
rol
and
push
movs
add
sbb
adc
stc
add
adc
push
or
scas
and
add
push
loope
xlat
adc
add
loope
xlat
adc
adc
push
loope
ret
add
add
xlat
adc
loope
stos
push
fimul
jbe
add
add
movs
add
adc
push
rol
xlat
adc
or
aad
inc
or
mov
add
adc
fld
fisub
and
lods
add
adc
mov
mov
add
and
add
or
rol
add
add
add
or
enter
or
rol
ins
add
add
add
or
loopne
ins
add
add
add
or
call
add
add
mov
or
hlt
add
add
add
add
add
add
add
mov
or
adc
mov
or
sbb
mov
add
add
add
add
or
sub
jb
or
xor
ja
or
xor
test
or
cmp
mov
or
inc
add
or
inc
add
or
dec
add
or
dec
add
mov
or
push
add
add
add
add
add
add
add
mov
or
je
mov
or
add
add
add
mov
ja
or
mov
test
or
nop
add
add
add
add
add
add
add
add
mov
or
mov
mov
or
mov
add
cwde
add
or
pushf
add
or
mov
add
test
mov
or
lods
add
add
add
add
add
add
add
mov
or
int3
add
add
add
add
add
add
add
add
add
or
in
jb
or
call
add
add
mov
or
hlt
add
add
iret
push
add
add
pop
push
add
add
add
add
pop
cs
add
add
add
add
add
add
jb
inc
add
add
sub
add
add
add
add
mov
call
add
jb
add
push
add
add
inc
add
add
add
add
jb
inc
add
jb
inc
add
add
arpl
push
add
arpl
pop
add
arpl
sub
jb
arpl
inc
add
add
add
add
jb
rol
add
loope
or
push
add
add
jb
add
or
push
add
add
add
xchg
add
add
add
call
add
add
call
add
push
add
popa
add
add
add
arpl
push
add
arpl
sub
jb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
imul
add
pop
add
pop
push
add
add
add
mov
add
add
add
pusha
add
add
add
rol
add
loopne
and
jb
mov
push
arpl
imul
add
pop
add
pop
add
pop
push
mov
add
pop
xor
jb
ror
add
mov
add
and
jb
pusha
push
sbb
pop
add
jb
loopne
and
jb
add
and
jb
and
and
jb
pusha
bndstx
pop
add
jb
or
add
add
jb
mov
add
jb
ror
add
ror
add
add
jb
loopne
sbb
pop
add
jb
and
and
jb
inc
adc
add
add
jb
pusha
adc
add
pusha
adc
inc
sbb
add
inc
sbb
add
add
pop
add
jb
sbb
add
sbb
add
add
pop
add
jb
rcr
add
rcr
add
add
jb
add
and
jb
and
sbb
pop
add
jb
inc
sbb
add
add
add
add
cmp
push
pop
popa
pop
adc
inc
or
xchg
or
or
or
or
or
or
jbe
cdq
or
or
jg
mov
or
or
or
or
or
or
or
or
or
or
mov
push
cmp
push
push
pop
push
mov
mov
push
in
jmp
push
or
adc
lar
add
add
add
add
daa
push
daa
add
xchg
add
add
add
or
add
add
or
in
in
or
jo
lahf
or
dec
or
or
or
or
or
or
or
sldt
and
not
and
add
add
sbb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
aas
add
add
add
add
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
mov
xchg
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
add
add
add
add
add
and
or
and
or
and
or
and
or
and
add
daa
add
das
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
cmp
mov
add
mov
add
add
push
add
add
add
das
push
add
adc
lahf
add
push
add
add
mov
add
ins
add
add
add
outs
outs
ins
add
outs
outs
ins
cs
add
arpl
jae
data16
push
imul
jae
arpl
ins
jae
outs
jb
imul
gs
cs
ins
ins
add
jae
gs
add
ja
outs
outs
jae
data16
dec
jae
outs
cs
gs
xor
push
jns
je
ins
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
jb
ja
outs
add
fs
ins
cs
ins
add
jb
gs
xor
cs
ins
add
xor
aaa
xor
fs
arpl
cmp
xor
cmp
xor
xor
xor
xor
fs
xor
xor
fs
popa
arpl
arpl
xor
xor
popa
aaa
add
add
loop
test
add
test
add
test
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
jae
ins
gs
jo
ins
imul
inc
popa
jae
add
gs
inc
outs
outs
jbe
jb
imul
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
jae
outs
gs
outs
gs
je
fs
je
jb
bound
add
gs
je
jb
add
outs
push
arpl
je
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
outs
outs
add
jb
gs
outs
ins
jo
je
jb
dec
imul
gs
popa
ins
gs
je
jb
bound
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
ins
gs
jns
je
ins
push
jb
js
add
arpl
jae
data16
push
imul
jae
arpl
dec
jns
gs
imul
outs
je
js
push
popa
ins
jne
pusha
xor
dec
imul
je
push
imul
jae
arpl
dec
jns
gs
imul
je
jb
popa
ins
add
arpl
ins
inc
imul
imul
jns
push
imul
imul
je
push
imul
imul
jns
dec
jae
outs
inc
outs
outs
jbe
jb
add
ja
outs
outs
jae
data16
dec
jae
outs
add
je
jbe
je
jb
inc
jo
inc
outs
ins
popa
imul
ins
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
popa
jns
inc
jae
outs
arpl
ins
ins
bound
imul
popa
fs
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
ins
gs
outs
add
data16
inc
jns
add
popa
jb
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
outs
jne
gs
bound
xor
dec
inc
outs
jne
gs
je
jb
xor
dec
inc
jno
popa
ins
imul
jb
jb
xor
dec
imul
outs
jne
gs
je
jb
dec
inc
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
outs
je
imul
jne
jo
jb
dec
outs
imul
add
jo
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
je
imul
add
outs
jae
ins
add
outs
jae
ins
gs
outs
ins
outs
jb
inc
outs
outs
jae
ins
gs
gs
outs
outs
add
outs
jbe
jb
add
gs
imul
imul
ins
gs
je
add
jne
addr16
push
jns
je
ins
cs
imul
imul
jne
addr16
imul
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
imul
outs
outs
dec
outs
outs
add
outs
arpl
jae
push
je
arpl
jb
ins
add
popa
arpl
jb
arpl
inc
outs
jne
ins
add
je
popa
jo
inc
outs
ins
outs
jb
inc
outs
outs
je
inc
jb
jo
imul
add
imul
add
jp
inc
add
jae
gs
inc
outs
ins
outs
jb
add
jne
add
jbe
jb
outs
ins
outs
je
inc
jbe
outs
je
jb
jae
inc
jbe
outs
je
popa
outs
fs
gs
inc
js
gs
imul
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
bound
push
je
ins
gs
dec
inc
jae
outs
arpl
jae
ins
je
dec
inc
imul
ins
add
outs
jb
popa
je
jb
jbe
fs
dec
outs
je
add
je
xor
dec
outs
je
xor
dec
outs
je
je
add
outs
popa
jb
push
jb
je
jb
push
jns
je
ins
cs
dec
add
ins
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
arpl
jns
inc
imul
jns
outs
outs
add
fs
push
je
gs
ins
inc
js
gs
imul
add
ins
gs
outs
popa
fs
js
gs
imul
gs
outs
fs
ins
gs
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
je
add
jb
popa
ins
add
jb
popa
ins
push
gs
fs
dec
popa
je
add
ins
je
arpl
je
gs
gs
je
add
je
push
gs
gs
inc
popa
arpl
dec
gs
ins
add
jae
gs
cs
gs
inc
popa
arpl
add
je
push
gs
gs
inc
popa
arpl
push
outs
ins
imul
jne
jae
inc
popa
arpl
push
outs
ins
imul
fs
je
popa
ins
inc
popa
arpl
add
jae
gs
cs
gs
inc
outs
jae
dec
je
jo
gs
gs
dec
gs
fs
dec
je
jo
bound
jno
gs
add
jb
fs
je
popa
ins
jae
dec
push
inc
fs
jae
add
bound
outs
js
add
je
outs
jb
inc
jb
fs
je
popa
ins
add
ins
outs
je
inc
gs
imul
push
popa
ins
imul
popa
ins
ins
bound
imul
jns
je
ins
cs
gs
push
arpl
imul
outs
ins
imul
jb
add
jb
imul
je
popa
outs
popa
addr16
push
bound
popa
fs
outs
ins
ins
arpl
outs
add
bound
outs
js
add
bound
jno
gs
add
bound
jae
outs
outs
jae
add
push
arpl
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
popa
ins
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
popa
jne
je
gs
bound
inc
je
jb
bound
add
ins
bound
dec
outs
outs
add
je
outs
fs
popa
jae
add
fs
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
push
outs
ins
popa
je
ins
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
outs
je
ins
gs
gs
jo
jb
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
jb
push
jne
je
ins
gs
gs
outs
fs
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jns
je
push
je
gs
ins
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
inc
jb
jo
outs
push
je
gs
ins
dec
outs
fs
inc
jb
jo
outs
push
gs
imul
imul
jns
je
push
jb
outs
jae
outs
jb
add
xor
inc
gs
imul
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
pop
xor
jb
imul
jae
pop
xor
popa
imul
ins
add
inc
push
push
inc
je
jb
bound
add
jb
outs
add
jb
outs
addr16
outs
ins
jo
jb
jb
push
je
imul
popa
jb
jae
outs
add
arpl
imul
je
ins
cs
gs
add
jb
outs
addr16
jne
ins
fs
dec
outs
outs
imul
je
ins
cs
push
imul
gs
add
gs
fs
je
jb
add
gs
fs
je
je
arpl
je
imul
imul
add
add
outs
je
add
outs
je
xor
push
dec
outs
je
xor
push
popa
ins
jne
push
jns
add
jb
imul
add
arpl
jb
je
ins
gs
inc
jne
outs
push
arpl
gs
outs
fs
je
outs
outs
add
je
outs
outs
inc
popa
jae
add
outs
je
imul
je
outs
ins
add
outs
je
outs
ins
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
ins
outs
addr16
gs
ins
je
inc
outs
arpl
je
ins
add
jb
add
jb
inc
outs
jb
gs
je
ins
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
popa
addr16
popa
jns
jne
add
gs
add
imul
ins
add
imul
ins
dec
imul
imul
jbe
outs
je
jb
jae
dec
imul
ins
dec
imul
imul
jbe
outs
je
popa
outs
fs
gs
push
popa
outs
gs
add
arpl
gs
outs
js
pop
ins
ins
inc
outs
arpl
outs
je
pop
ins
ins
dec
outs
fs
ins
push
jb
je
jb
pop
ins
ins
push
jb
je
jb
gs
imul
outs
fs
gs
push
gs
imul
jae
outs
ins
push
outs
jae
jb
cs
jns
jo
xor
js
push
dec
push
push
xor
xor
cmp
push
imul
dec
jns
add
push
push
inc
add
add
add
add
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
and
xchg
add
mov
or
test
add
mov
add
mov
add
loop
mov
add
and
mov
or
and
and
and
test
or
and
test
or
and
test
add
add
and
and
and
test
add
mov
or
mov
or
loop
and
and
and
mov
add
mov
add
loop
and
and
xchg
add
and
xchg
add
and
mov
add
and
test
or
mov
add
add
test
add
and
mov
or
and
xchg
add
xchg
add
xchg
or
mov
add
loop
mov
or
mov
or
and
xchg
or
mov
add
loop
mov
add
and
mov
add
and
and
and
and
test
or
add
loop
add
add
loop
add
add
loop
add
add
loop
and
mov
add
and
mov
or
mov
add
test
add
test
add
and
mov
add
mov
add
mov
add
add
mov
add
and
and
and
and
mov
or
test
or
and
mov
add
xchg
add
and
mov
add
mov
or
loop
and
xchg
or
xchg
add
and
and
mov
or
mov
or
and
and
mov
add
and
mov
add
mov
arpl
outs
jb
fs
jne
je
outs
jae
popa
outs
arpl
arpl
add
je
inc
gs
jne
je
popa
add
jo
jae
add
xor
arpl
bound
jno
jns
xor
jae
xor
js
jae
bound
ins
jne
popa
popa
loop
mov
add
push
arpl
bound
jno
jns
xor
jae
xor
js
jae
bound
ins
jne
popa
popa
loop
mov
add
push
arpl
bound
jno
jns
xor
jae
xor
js
jae
bound
ins
jne
popa
popa
loop
mov
add
push
arpl
bound
jno
jns
xor
jae
xor
js
jae
bound
ins
jne
popa
popa
loop
mov
add
push
arpl
bound
jno
jns
xor
jae
xor
js
jae
bound
ins
jne
popa
popa
loop
mov
add
push
arpl
bound
jno
jns
xor
jae
xor
js
jae
bound
ins
jne
popa
popa
loop
mov
add
push
arpl
bound
jno
jns
xor
jae
xor
js
jae
bound
ins
jne
popa
popa
loop
mov
add
push
arpl
bound
jno
jns
xor
jae
xor
js
jae
bound
ins
jne
popa
popa
loop
mov
add
add
popa
ins
jne
pop
pop
add
je
gs
inc
jne
outs
add
ins
add
jae
ins
jne
add
data16
outs
arpl
outs
outs
je
gs
dec
outs
add
ins
outs
add
addr16
add
addr16
add
popa
add
ins
outs
inc
jns
add
addr16
inc
jns
add
addr16
inc
jns
add
popa
inc
jns
add
je
dec
imul
gs
inc
imul
imul
imul
add
outs
jne
add
jne
add
add
je
jae
popa
outs
fs
fs
add
je
jae
gs
outs
jb
add
je
jae
imul
jo
jb
je
jb
add
jb
outs
je
push
imul
outs
outs
jae
add
gs
arpl
fs
inc
jne
je
ins
add
jne
je
inc
push
push
add
je
jae
imul
fs
imul
gs
gs
push
imul
jae
inc
jno
popa
ins
jae
inc
gs
popa
jae
inc
outs
fs
je
imul
imul
add
fs
outs
jbe
imul
outs
jbe
imul
jb
addr16
fs
arpl
jo
je
pop
fs
arpl
add
je
pop
addr16
jne
imul
push
jo
je
pop
ins
imul
jae
outs
jb
add
je
pop
ins
imul
jb
jo
je
pop
outs
popa
ins
add
je
pop
jo
imul
popa
outs
outs
gs
add
je
pop
jo
outs
bound
jo
je
pop
jo
outs
bound
add
je
pop
jae
outs
jae
jb
add
je
pop
jae
ins
jo
outs
ins
ins
jne
imul
pop
jne
ins
add
je
pop
jbe
jb
imul
addr16
ja
outs
outs
ja
outs
ins
popa
imul
pop
ja
outs
outs
ja
jo
jae
ja
jb
add
je
pop
ja
outs
outs
ja
jne
gs
outs
imul
popa
jb
imul
je
ins
pop
gs
outs
jb
jo
outs
je
arpl
pop
gs
outs
jb
arpl
je
outs
je
gs
outs
jb
arpl
je
ins
pop
gs
outs
jb
dec
je
jne
jb
dec
outs
outs
jb
popa
je
outs
outs
push
jb
arpl
jae
inc
jb
gs
outs
outs
jae
ins
add
jbe
inc
imul
popaw
jne
je
push
add
outs
arpl
outs
outs
imul
jo
jns
push
jb
ins
add
je
dec
outs
addr16
add
je
inc
jne
jae
jb
imul
push
gs
jb
push
arpl
jb
jb
inc
ins
gs
jb
jb
push
arpl
jb
jb
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
push
outs
dec
outs
ja
jb
push
je
jb
jae
imul
je
imul
gs
gs
add
je
imul
jns
popa
ins
add
imul
gs
je
inc
imul
jns
inc
gs
outs
je
jns
jae
gs
bound
addr16
dec
outs
arpl
imul
push
gs
imul
add
jo
outs
fs
imul
pop
dec
outs
ja
addr16
dec
outs
outs
add
je
dec
push
inc
jne
ins
dec
popa
ins
add
je
dec
push
push
gs
imul
pop
dec
outs
jae
popa
ins
ins
gs
dec
inc
jne
je
jb
add
jb
popa
je
addr16
push
jb
fs
je
popa
ins
add
je
push
jb
fs
je
popa
push
jb
popa
jb
add
je
push
jb
fs
je
imul
je
addr16
push
jb
fs
je
jne
ins
fs
popa
jb
add
je
inc
outs
jne
je
inc
outs
jo
push
outs
add
imul
js
data16
jo
popa
arpl
addr16
inc
imul
ins
add
imul
js
add
imul
addr16
dec
gs
imul
arpl
add
imul
dec
popa
outs
fs
add
jp
dec
data16
pop
inc
js
ins
imul
je
jb
arpl
jae
jns
add
push
jo
imul
dec
popa
arpl
outs
add
outs
push
jne
dec
gs
inc
gs
jne
dec
gs
popa
ins
gs
inc
gs
popa
ins
jne
add
ins
jo
jb
push
je
imul
jae
add
je
js
arpl
imul
ins
bound
inc
outs
ins
bound
add
je
inc
imul
outs
outs
add
pop
dec
gs
push
push
outs
fs
imul
popa
ins
ins
imul
ins
bound
addr16
inc
outs
ins
jo
outs
jns
popa
ins
add
je
push
push
inc
cmp
inc
gs
jns
gs
inc
jb
ins
inc
popa
jae
ss
je
imul
popa
je
inc
arpl
jo
outs
jb
inc
ins
jne
push
ins
inc
ins
outs
arpl
push
outs
inc
jb
popa
jns
inc
gs
je
imul
pop
dec
gs
popa
add
je
inc
imul
imul
inc
outs
outs
je
imul
inc
jne
jb
outs
je
jb
arpl
jae
addr16
push
jb
arpl
jae
popa
ins
add
popa
fs
gs
inc
js
je
jae
je
inc
outs
jb
addr16
jne
fs
outs
ins
outs
jb
push
gs
je
outs
ins
outs
jb
jae
je
inc
js
je
outs
fs
popa
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
push
jo
arpl
ins
inc
imul
imul
pop
push
gs
jo
push
push
popa
ins
outs
add
je
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
push
popa
jb
add
je
outs
jae
inc
fs
jae
gs
inc
gs
outs
jae
dec
popa
ins
add
dec
outs
outs
jo
popa
arpl
push
gs
outs
arpl
jno
popa
ins
jae
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
gs
bound
arpl
ins
jne
add
je
jb
inc
gs
popa
ins
add
je
inc
jne
ins
dec
popa
ins
add
je
jne
ins
imul
imul
inc
fs
popa
outs
add
je
push
outs
imul
gs
dec
popa
ins
add
add
je
dec
je
ins
add
je
dec
je
ins
add
je
jb
ins
add
je
gs
outs
add
je
inc
arpl
imul
add
je
dec
gs
fs
je
push
outs
imul
popa
fs
push
push
push
jne
jo
outs
fs
popa
jns
jne
add
imul
jae
je
inc
jne
outs
push
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
push
imul
pop
push
popa
bound
fs
jae
je
push
gs
add
je
inc
outs
arpl
jb
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
addr16
inc
outs
outs
je
outs
ins
add
je
inc
popa
arpl
outs
ins
outs
jb
addr16
inc
outs
outs
je
outs
ins
jae
jae
je
inc
outs
arpl
jae
je
push
popa
bound
outs
jo
jae
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
je
dec
ins
popa
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
push
jae
je
inc
ins
imul
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
jae
je
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
outs
jo
outs
jae
add
jae
ins
gs
popa
jns
jne
add
fs
outs
imul
jb
dec
popa
jns
jne
add
ins
outs
jbe
pop
inc
ins
imul
pop
inc
ins
imul
outs
jbe
pop
dec
imul
imul
popa
fs
dec
imul
imul
addr16
pop
add
je
push
imul
pop
push
imul
ins
dec
ja
add
je
push
gs
add
je
inc
outs
outs
je
dec
gs
jae
jb
push
je
imul
imul
ins
imul
outs
add
je
dec
imul
je
dec
imul
je
push
imul
addr16
pop
add
je
push
imul
push
je
jb
add
je
dec
gs
imul
je
imul
jae
je
dec
ins
imul
ins
popa
jb
je
outs
outs
add
je
dec
jae
je
popa
arpl
add
je
dec
outs
fs
je
inc
jb
popa
je
add
imul
inc
outs
arpl
outs
je
push
jb
je
push
je
jb
inc
ins
gs
outs
je
push
jb
je
push
popa
ins
jne
add
imul
gs
outs
je
push
jb
push
popa
jb
add
imul
arpl
outs
je
inc
ins
jne
push
pop
inc
outs
ins
ins
popa
outs
fs
imul
add
gs
push
gs
arpl
outs
ins
gs
outs
fs
je
dec
outs
outs
gs
gs
add
fs
imul
inc
outs
ins
jo
jb
add
fs
arpl
fs
addr16
inc
jne
jb
outs
je
imul
add
outs
arpl
push
imul
popa
je
dec
outs
jae
popa
outs
arpl
push
gs
outs
jbe
add
je
push
gs
gs
gs
imul
push
popa
ins
imul
popa
ins
ins
bound
imul
gs
inc
gs
jne
je
gs
outs
jb
inc
jb
fs
je
popa
ins
jae
jae
je
inc
jb
fs
je
popa
ins
jae
jae
je
push
jb
js
add
je
push
imul
jae
je
dec
gs
outs
add
je
inc
outs
outs
je
outs
je
jns
add
je
dec
gs
fs
add
je
push
jae
jb
outs
je
jae
je
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
je
gs
outs
outs
jae
push
je
gs
ins
add
popa
fs
outs
inc
outs
add
gs
popa
ins
imul
outs
fs
je
inc
jne
jb
outs
je
outs
ins
popa
imul
push
gs
jne
arpl
gs
ins
jbe
add
inc
gs
popa
ins
jne
add
je
dec
jb
imul
je
jb
ins
gs
addr16
dec
outs
fs
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
popa
jae
ss
je
imul
add
je
gs
jo
popa
je
add
fs
jb
ins
add
je
push
outs
jae
je
outs
outs
add
jo
outs
add
je
jb
add
pop
inc
jno
popa
ins
imul
inc
jns
add
outs
arpl
outs
jo
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
cmp
cwde
retf
jg
inc
call
pop
add
mov
pop
jg
aad
cmp
mov
pop
push
sbb
mov
xor
scas
in
add
add
add
adc
add
add
add
add
or
push
adc
add
add
adc
push
push
add
add
and
add
and
add
push
sbb
add
add
add
adc
or
add
sub
sub
add
add
add
push
add
add
push
add
push
push
add
add
sub
or
add
adc
or
add
push
adc
add
add
and
adc
add
and
adc
push
push
add
adc
add
push
adc
push
adc
push
or
adc
push
adc
push
add
push
adc
adc
or
adc
adc
push
adc
adc
xor
adc
adc
add
adc
add
adc
sub
push
adc
xor
sbb
xor
add
add
xor
cmp
push
adc
or
add
adc
sub
add
adc
cmp
push
adc
sub
push
or
add
add
jmp
adc
adc
add
cmp
stc
push
and
add
cmp
and
adc
add
cmp
and
adc
add
sub
and
add
pop
and
add
and
add
adc
push
adc
add
lea
adc
add
adc
and
push
or
push
add
add
sbb
or
adc
adc
adc
adc
pusha
adc
push
push
and
add
sub
add
add
sub
push
adc
inc
pop
push
adc
inc
pop
push
adc
or
jo
adc
add
inc
add
add
inc
add
add
ins
add
adc
add
add
add
add
add
add
add
push
adc
adc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
adc
adc
and
add
cdq
add
add
pop
adc
add
add
add
xor
add
adc
add
push
adc
add
add
add
push
adc
adc
push
adc
push
adc
add
or
or
and
or
add
or
adc
add
cmp
push
push
push
push
or
adc
adc
and
sub
push
adc
adc
adc
sbb
add
add
add
push
or
push
sbb
add
adc
sbb
push
adc
add
add
add
or
add
sbb
add
sbb
push
and
cmp
sub
cmp
adc
pop
push
pop
sub
add
and
lods
add
add
add
push
adc
adc
add
add
or
and
add
sbb
and
add
add
adc
add
add
add
add
or
adc
add
add
adc
pop
push
adc
add
bound
popa
add
adc
add
ins
bound
jo
popa
outs
popa
je
outs
outs
add
adc
add
popa
jb
ins
gs
jb
add
sbb
bound
jb
ins
gs
jb
inc
js
ins
popa
outs
popa
je
outs
outs
add
sgdtd
or
push
gs
jb
jae
add
add
push
ins
bound
je
jb
push
popa
ins
jne
add
or
add
imul
push
add
or
ins
inc
outs
je
outs
ins
add
or
add
jo
dec
ins
popa
add
sgdtd
or
popa
jae
dec
popa
jae
add
adc
add
ins
bound
jae
dec
popa
jae
add
adc
add
bound
jae
dec
popa
jae
xor
add
add
or
dec
inc
fs
outs
arpl
add
or
add
add
add
add
and
add
and
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
push
or
add
add
add
add
add
adc
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
and
push
push
push
push
add
add
add
add
je
ins
add
sub
add
cmp
xor
xor
xor
sub
xor
aaa
aaa
xor
add
or
add
push
imul
add
add
and
and
and
popa
je
jae
data16
ins
and
push
imul
jae
outs
jae
jb
add
add
adc
jo
jb
addr16
and
xor
xor
add
pop
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
inc
and
outs
jae
jb
add
xor
xor
xor
xor
add
add
adc
push
inc
and
ins
jae
inc
popa
ins
imul
adc
add
add
add
add
add
sub
push
push
adc
adc
push
push
sbb
adc
adc
adc
push
adc
push
push
adc
push
add
add
push
push
add
adc
add
and
and
add
add
adc
add
sub
xor
add
push
sbb
sbb
add
push
push
sbb
add
add
push
push
sbb
or
add
push
add
add
cmp
and
add
push
add
add
push
add
add
add
push
push
pop
add
sub
add
add
add
add
sbb
add
or
push
add
adc
add
add
add
add
or
add
add
sbb
dec
sbb
push
add
and
sbb
push
adc
and
adc
add
add
sbb
push
add
or
push
add
pop
add
or
add
adc
add
sbb
add
push
push
sbb
add
in
pop
or
add
pop
adc
adc
sub
cmp
add
or
add
push
add
push
or
add
sbb
sbb
add
add
add
sbb
and
sbb
push
sbb
adc
adc
adc
add
add
cmp
add
add
cmp
test
pop
and
or
and
add
adc
adc
adc
push
push
push
push
push
and
adc
add
and
add
add
inc
add
add
adc
push
sbb
or
adc
xchg
add
push
or
and
xor
sbb
and
adc
adc
push
adc
push
add
shl
or
add
adc
mov
adc
mov
sbb
adc
push
add
adc
add
push
add
add
xor
pop
adc
adc
adc
adc
lock
sub
pop
add
sbb
sbb
add
adc
pop
and
add
adc
sbb
and
sbb
adc
sbb
sbb
or
adc
lea
add
add
or
adc
add
adc
add
xor
adc
adc
add
add
or
and
add
adc
pop
pop
add
sbb
pop
add
xor
sub
or
add
sub
add
or
adc
adc
adc
push
and
add
sbb
or
and
add
xor
std
push
and
add
cmp
and
adc
add
or
and
add
adc
and
add
or
adc
add
push
and
add
adc
and
add
sbb
and
add
and
pop
add
sub
xor
and
add
xor
pop
or
or
add
adc
add
or
add
and
adc
add
adc
add
adc
adc
push
pop
add
jl
jl
pop
push
adc
xchg
add
jl
jl
or
add
adc
adc
adc
add
push
adc
adc
or
or
pop
add
sub
push
adc
push
push
push
push
sbb
adc
push
push
add
add
adc
pop
pop
or
add
add
add
sub
add
or
or
add
adc
push
pop
add
or
push
and
add
or
push
add
add
adc
add
xchg
or
add
or
or
pop
add
push
push
adc
inc
push
adc
inc
push
adc
or
add
ins
add
add
add
add
add
add
add
adc
add
adc
add
add
add
pop
or
or
or
or
pop
sbb
or
or
add
adc
adc
adc
add
or
cdq
adc
adc
sbb
adc
push
adc
push
and
add
adc
add
adc
add
cmp
and
add
push
push
push
and
add
cmp
add
adc
add
adc
adc
adc
add
adc
and
add
sbb
pop
add
add
and
add
add
adc
or
adc
push
sbb
jge
push
adc
push
adc
adc
add
jne
and
add
adc
adc
pop
and
add
add
add
pop
add
adc
in
add
and
sbb
and
adc
adc
sbb
add
push
or
push
adc
add
adc
or
push
adc
adc
push
adc
push
sbb
add
adc
or
or
adc
push
sbb
add
adc
add
adc
add
and
or
adc
add
add
adc
push
pop
or
sbb
or
adc
or
adc
adc
icebp
or
add
add
pop
pop
or
or
or
or
daa
or
and
or
sub
adc
sbb
sbb
test
cmc
or
or
add
add
or
sbb
or
add
adc
add
sbb
push
push
or
or
or
push
push
sbb
add
add
sbb
adc
add
add
or
pop
add
adc
or
or
or
or
or
add
adc
or
push
sbb
or
or
add
test
pop
add
add
or
add
adc
or
adc
add
adc
adc
add
add
add
ins
ins
add
mov
add
add
sub
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
