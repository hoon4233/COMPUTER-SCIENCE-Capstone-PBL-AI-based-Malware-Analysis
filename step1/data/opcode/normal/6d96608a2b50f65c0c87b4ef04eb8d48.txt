icebp
dec
adc
add
add
dec
add
add
add
add
add
add
add
lds
add
pop
out
add
enter
adc
add
inc
add
add
add
add
jae
add
or
add
add
push
jge
add
add
sub
add
or
add
add
pop
add
push
add
add
add
or
and
add
sub
add
outs
and
add
outs
and
add
sub
add
push
add
push
add
add
add
and
add
add
add
push
add
add
add
and
add
add
add
push
add
add
add
and
add
add
add
add
sbb
add
je
add
add
add
add
sub
add
push
sub
add
push
or
push
outs
and
add
or
inc
pop
outs
and
add
jnp
add
add
outs
add
or
add
or
or
add
or
sbb
sub
add
sub
add
or
or
add
add
add
add
or
add
add
pop
outs
sub
add
sub
sub
pop
outs
sub
add
add
sub
adc
add
add
or
add
add
xor
add
add
adc
add
push
add
push
outs
and
add
adc
add
sub
add
add
add
adc
add
or
add
push
add
push
outs
and
add
adc
add
das
add
or
add
add
adc
add
or
add
push
add
push
sub
add
push
or
or
add
or
push
cmp
add
add
push
outs
and
pop
add
jnp
add
add
pop
outs
add
or
add
or
or
pop
or
add
add
outs
xor
add
adc
adc
sub
add
or
imul
add
outs
xor
add
adc
adc
sub
add
or
imul
adc
add
add
add
outs
xor
add
adc
adc
sub
push
pop
imul
add
outs
xor
add
adc
adc
sub
add
or
imul
adc
adc
adc
jae
add
or
add
or
adc
outs
sub
add
rcr
sub
add
sub
add
or
or
or
adc
adc
je
add
add
jnp
add
add
or
add
add
pop
outs
and
add
outs
cmp
add
adc
push
and
add
add
add
add
add
or
add
call
aas
or
pop
and
add
add
add
add
add
push
adc
sub
add
call
aas
or
adc
adc
adc
sub
add
pop
add
push
add
push
outs
and
add
outs
cmp
add
add
add
add
sub
add
push
pop
and
add
add
add
inc
pop
add
add
add
sub
add
pop
pop
and
add
add
add
inc
pop
pop
imul
cmp
add
or
add
push
add
pop
add
push
add
push
outs
and
add
outs
cmp
add
add
add
add
sub
add
push
pop
and
add
add
add
inc
pop
add
add
add
sub
add
pop
pop
and
add
add
add
inc
pop
pop
imul
cmp
add
or
add
adc
outs
sub
add
cmp
(bad)
(bad)
(bad)
fimul
adc
outs
sub
add
add
sub
add
add
add
data16
add
add
add
add
or
add
add
xor
add
add
adc
push
or
pop
sub
add
add
or
sub
add
outs
inc
add
or
push
or
pop
add
outs
inc
add
or
inc
or
outs
inc
add
or
outs
inc
add
or
outs
inc
add
or
pop
add
add
or
inc
add
or
sub
add
add
or
outs
inc
add
or
outs
inc
add
or
pop
sbb
outs
inc
add
or
inc
add
or
add
adc
add
pop
or
add
add
or
add
add
sub
add
xor
add
add
add
add
add
or
add
add
jle
add
add
sub
add
add
push
fiadd
add
jae
add
or
add
add
add
add
add
or
add
add
sub
add
sub
add
add
sub
add
add
push
fild
add
jae
add
or
add
add
add
or
add
sub
add
sbb
add
jns
add
push
add
adc
add
lea
push
jb
add
jo
and
add
or
add
or
add
jo
and
sbb
dec
add
or
add
jo
and
add
or
add
or
or
push
jb
add
jo
sub
add
es
sub
or
add
adc
add
add
jo
sub
add
add
sbb
add
add
adc
add
add
add
add
pop
add
add
xor
add
add
add
add
adc
push
or
add
adc
push
or
add
adc
add
add
add
or
add
or
adc
fild
add
or
adc
add
sub
or
add
pop
jle
add
or
add
add
add
fiadd
add
adc
adc
push
inc
adc
adc
sub
add
or
cmp
pop
adc
jle
add
or
adc
jle
add
or
loopne
add
es
sub
add
adc
sub
add
sbb
add
or
or
add
or
or
sub
add
or
or
pop
add
or
pop
adc
adc
push
adc
jle
add
or
loopne
add
adc
adc
sub
add
sbb
sub
or
adc
or
pop
add
or
add
or
pop
add
or
or
or
or
adc
sub
add
add
pop
adc
pop
adc
or
inc
adc
(bad)
(bad)
call
add
add
jle
add
or
pop
add
or
movups
sub
add
sub
add
push
add
fcom
push
sub
add
add
add
adc
add
add
add
add
add
add
add
pop
add
or
sub
add
sbb
add
add
add
adc
and
test
add
or
add
jo
add
push
jge
add
add
sub
add
push
add
add
add
jl
add
add
das
add
push
add
jnp
add
add
mov
jb
add
jo
add
add
add
adc
outs
or
add
add
add
add
add
push
adc
add
add
add
add
adc
call
jge
add
add
mov
add
add
add
pusha
add
or
inc
adc
adc
cmp
add
add
add
outs
add
add
jnp
add
add
outs
add
add
push
add
sub
add
add
jnp
add
add
jnp
add
add
jnp
add
add
outs
add
add
mov
add
adc
adc
adc
adc
sub
add
add
add
outs
add
add
adc
add
jnp
add
add
sbb
jnp
add
add
outs
add
add
adc
add
jnp
add
add
add
add
adc
adc
sub
add
pop
jge
add
add
adc
call
push
jge
add
add
jnp
add
add
popa
add
or
add
adc
pop
pop
adc
add
jnp
add
add
or
push
push
mov
add
inc
sub
push
adc
adc
cmp
(bad)
(bad)
inc
add
add
add
or
or
repnz
add
add
add
add
jnp
add
add
jnp
add
add
mov
add
jge
add
add
add
add
add
jnp
add
add
outs
add
add
mov
sbb
add
sub
add
push
add
jnp
add
add
popa
add
or
add
jnp
add
add
pop
outs
mov
sbb
add
jnp
add
add
pusha
add
or
or
add
sub
add
add
add
outs
add
add
sbb
add
inc
adc
adc
sub
add
jnp
add
add
outs
add
add
sbb
add
adc
add
jnp
add
add
adc
mov
jae
add
or
add
add
add
add
add
outs
add
add
sbb
add
inc
adc
adc
sub
add
adc
add
add
add
jnp
add
add
mov
add
add
sub
add
add
add
add
adc
add
sbb
adc
add
inc
sbb
add
add
add
add
add
add
jb
add
add
add
add
xor
push
add
add
add
adc
sub
add
add
add
or
push
sub
add
push
or
mov
pop
lea
push
or
outs
add
or
or
mov
pop
pop
push
arpl
inc
add
pop
rcr
pop
pop
and
add
add
pushf
or
mov
pop
pop
or
add
sub
adc
add
add
add
adc
add
adc
and
add
data16
or
push
push
or
adc
sub
adc
xchg
or
push
arpl
sbb
or
sbb
or
adc
pop
or
arpl
popa
ror
push
push
arpl
sbb
or
sbb
or
adc
pop
or
maxps
popa
ror
add
pop
adc
adc
pop
pop
adc
adc
adc
adc
sub
add
add
adc
push
arpl
or
cs
adc
or
pop
or
add
add
adc
adc
sub
add
add
or
or
pop
rcl
add
or
sub
or
pop
or
or
add
add
adc
or
or
or
or
or
pop
ror
ror
push
adc
ror
push
adc
sub
add
xor
add
add
or
add
add
jne
add
add
push
sub
jle
add
add
inc
sub
push
or
sub
add
sub
push
outs
add
or
or
or
outs
push
or
or
sub
add
or
add
adc
push
outs
imul
add
add
add
leave
add
add
adc
add
ins
add
add
add
add
add
push
sub
jle
add
add
inc
sub
push
or
sub
add
xor
push
outs
imul
add
add
or
or
add
or
add
arpl
add
or
add
or
add
or
add
add
add
ins
add
or
or
add
inc
add
add
mov
add
sub
xor
add
add
add
add
adc
pop
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jl
add
add
adc
add
jge
add
add
jl
add
add
adc
add
jge
add
add
pop
jge
add
add
pop
jge
add
add
adc
dec
add
add
sub
add
add
add
add
push
add
jae
add
push
jge
add
add
add
push
pop
add
push
jae
add
or
je
add
add
add
add
push
jge
add
add
add
push
and
add
jae
add
or
jne
add
add
add
push
and
add
jae
add
or
jbe
add
add
add
jo
jb
add
jo
jae
add
or
jae
add
or
add
or
pop
or
add
or
add
adc
jp
add
adc
outs
jnp
add
es
or
adc
or
fadd
fimul
adc
sub
add
add
add
or
sub
or
add
or
fmul
outs
jl
add
push
outs
jge
add
jb
add
jo
jle
add
sub
add
jb
add
jo
add
or
push
adc
sub
add
outs
jl
add
push
outs
jge
add
jb
add
jo
jle
add
sub
add
adc
add
add
add
pop
jae
add
or
add
or
add
jb
add
jo
add
or
add
add
add
outs
test
add
add
add
add
add
pop
add
add
add
add
daa
jbe
or
add
add
add
add
add
sbb
add
dec
add
add
add
adc
sub
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
jo
jb
add
jo
pop
jae
add
or
or
adc
outs
js
add
add
adc
jae
add
or
or
adc
jae
add
or
or
adc
jnp
add
add
jnp
add
es
or
adc
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
add
jo
jb
add
jo
add
jae
add
or
or
js
add
add
add
or
or
push
add
push
jae
add
or
lldt
lar
add
add
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
or
fdiv
add
jo
add
jo
push
adc
or
adc
adc
outs
js
add
add
push
adc
jae
add
or
adc
adc
jae
add
or
adc
adc
add
add
add
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
add
jo
pop
jb
add
jae
add
or
or
pop
jae
add
or
adc
adc
outs
js
add
add
or
adc
add
or
adc
adc
jp
add
adc
or
add
or
add
or
adc
or
fadd
fimul
adc
sub
add
add
add
or
adc
outs
sub
add
add
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
push
adc
sub
add
jnp
add
add
mov
add
add
add
inc
inc
add
push
jae
add
or
mov
add
sub
xchg
add
add
add
jbe
or
add
pop
add
add
add
inc
add
add
add
(bad)
add
call
add
add
int3
add
add
add
mov
or
add
dec
add
pop
add
add
inc
add
add
add
sub
push
jl
or
add
lds
push
rol
or
add
mov
or
add
cmps
add
or
adc
add
push
add
add
add
adc
pop
add
pop
add
inc
or
sub
add
jnp
add
add
outs
nop
add
or
add
add
add
enter
outs
xchg
add
or
add
xchg
add
or
add
sbb
add
pop
add
inc
or
sub
add
jnp
add
add
outs
nop
add
or
add
adc
add
out
add
add
add
add
and
add
add
inc
jg
jae
add
or
add
add
jnp
add
add
inc
sbb
add
jae
add
or
add
or
add
add
add
outs
xchg
add
or
add
add
add
add
add
or
add
add
jnp
add
add
inc
sbb
add
jae
add
or
add
or
add
add
add
outs
xchg
add
or
add
add
add
or
jae
add
or
add
add
jnp
add
add
inc
sbb
add
jae
add
or
add
or
add
add
add
outs
xchg
add
or
add
add
add
inc
ja
inc
jae
add
or
add
add
jnp
add
add
inc
sbb
xchg
add
or
add
or
add
add
add
outs
xchg
add
or
sub
add
xor
add
add
adc
add
add
jnp
add
add
outs
xchg
add
or
sub
add
add
add
push
cmp
jnp
add
add
cwde
add
or
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
pop
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
pop
or
add
jge
add
add
add
inc
inc
add
push
jae
add
or
mov
add
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
add
add
push
add
sub
add
push
add
sub
add
push
add
pop
jge
add
add
sub
add
push
add
call
call
jge
add
add
sub
and
add
add
call
add
sbb
cmp
jae
add
or
push
adc
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
adc
add
jae
add
or
add
or
add
push
outs
mov
add
adc
(bad)
jb
push
add
mov
add
add
push
add
adc
add
adc
adc
outs
movs
add
or
adc
adc
push
adc
mov
movs
add
or
and
add
add
or
cmps
add
or
or
or
pop
adc
call
push
add
add
sbb
cmps
add
or
or
cmps
add
or
adc
adc
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
or
add
add
stos
add
or
or
or
add
add
add
add
stos
add
or
add
add
test
push
aam
adc
jle
add
add
stos
add
or
add
add
test
push
aam
adc
or
adc
add
adc
adc
rcl
push
push
or
add
sub
add
adc
outs
imul
or
add
add
or
push
lods
add
or
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
adc
adc
add
add
jge
add
add
sub
add
push
add
call
call
jge
add
add
sub
add
push
add
call
call
add
sbb
cmp
jae
add
or
adc
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
pusha
or
add
add
or
adc
outs
popf
add
or
adc
outs
sahf
add
or
adc
outs
lahf
add
or
adc
inc
adc
add
jae
add
or
add
or
add
adc
mov
add
adc
sbb
add
mov
add
add
push
add
adc
add
adc
add
or
adc
adc
imul
and
add
add
push
sub
pop
sub
add
adc
call
push
add
add
sbb
cmps
add
or
pop
sub
adc
adc
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
add
add
stos
add
or
sbb
sbb
add
add
add
add
stos
add
or
add
add
test
push
aam
adc
jle
add
add
stos
add
or
add
add
test
push
aam
adc
adc
sub
add
push
adc
adc
push
bound
sbb
adc
or
add
sub
add
adc
outs
imul
or
add
add
or
push
lods
add
or
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
pop
adc
cmp
add
add
jae
add
or
and
and
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
dec
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
adc
mov
mov
add
and
add
or
add
adc
xor
add
mov
add
add
or
pop
adc
call
sldt
add
ins
add
or
or
add
inc
adc
sub
cwde
add
or
push
or
add
sldt
add
lods
add
or
and
add
add
scas
add
or
adc
jb
pop
add
scas
add
or
and
and
pop
add
mov
add
adc
adc
adc
adc
adc
pop
outs
mov
add
adc
and
lea
push
jb
pop
add
pop
outs
mov
add
jae
add
or
and
add
add
sub
add
add
push
in
add
jae
add
or
add
mov
add
adc
adc
add
sub
add
add
push
out
add
jae
add
or
add
mov
add
adc
adc
add
sub
add
add
push
out
add
jae
add
or
add
mov
add
adc
adc
add
sub
add
add
push
call
mov
add
and
add
mov
add
adc
adc
add
sub
add
add
push
jmp
mov
add
and
add
mov
add
adc
adc
add
sub
add
add
push
jmp
add
and
add
mov
add
adc
adc
add
sub
add
add
push
jmp
add
jae
add
or
add
mov
add
adc
and
add
sub
add
add
push
in
add
push
jae
add
or
add
mov
add
adc
outs
mov
add
push
sbb
add
or
adc
add
or
sbb
add
or
das
adc
add
or
sbb
add
or
xor
and
add
or
sbb
add
or
xor
and
add
or
sbb
add
or
xor
sub
adc
sub
add
jb
pop
add
cmp
add
sub
add
adc
add
or
sbb
add
or
add
add
adc
adc
sub
add
jb
pop
add
cmp
add
sub
add
adc
add
or
sbb
add
or
add
add
add
and
add
or
sbb
add
or
add
add
adc
sub
add
add
adc
sub
cmp
xor
mov
xor
adc
sub
inc
add
add
xor
mov
xor
add
add
add
mov
inc
add
add
add
add
add
mov
inc
add
add
add
add
add
mov
inc
add
add
add
add
add
call
mov
mov
inc
add
add
add
add
add
call
mov
mov
add
add
add
add
add
or
add
or
mov
cmp
add
add
add
call
mov
mov
inc
add
add
add
add
add
or
add
or
mov
inc
add
add
add
add
add
pop
sub
add
add
add
add
add
pop
sub
add
add
add
add
add
pop
sub
add
add
jl
add
add
adc
adc
adc
adc
sub
add
and
add
add
add
add
mov
aas
add
add
sub
add
adc
ins
sub
aas
add
add
add
jnp
add
add
call
mov
mov
inc
add
add
adc
sub
inc
add
add
cmp
add
add
adc
add
add
adc
add
sub
aas
add
add
jl
add
add
adc
add
sub
inc
add
add
jl
add
add
adc
add
add
adc
add
add
adc
add
pop
add
cmp
add
jb
pop
add
cmp
add
add
add
add
mov
imul
adc
adc
sub
add
jnp
add
add
mov
imul
add
jnp
add
add
imul
outs
mov
add
jge
add
add
add
add
add
mov
inc
adc
cmp
and
add
add
mov
pop
adc
add
add
adc
or
add
add
add
add
add
jl
add
add
or
add
add
add
mov
imul
add
add
add
jl
add
add
or
add
add
add
mov
inc
sub
push
adc
adc
cmp
add
add
add
push
adc
adc
add
add
add
add
add
add
pop
outs
mov
add
adc
jnp
add
add
pop
outs
mov
add
adc
adc
lea
push
pop
and
or
pop
add
sub
add
add
adc
lea
push
pop
and
or
pop
add
sub
add
add
add
add
add
inc
mov
ret
or
or
add
sub
add
sub
add
add
aas
sub
mov
add
adc
inc
loop
add
jae
add
or
mov
add
adc
adc
adc
adc
add
add
add
outs
mov
add
jb
pop
add
cdq
add
or
inc
adc
add
jnp
add
add
outs
les
add
adc
inc
(bad)
adc
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
inc
adc
sbb
add
add
add
outs
les
add
adc
inc
(bad)
adc
add
add
add
add
inc
adc
or
add
add
jnp
add
add
inc
adc
sbb
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
dec
adc
data16
jnp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
or
mov
or
dec
adc
xor
add
add
add
outs
mov
add
jb
pop
add
cdq
add
or
dec
adc
adc
push
inc
add
push
jae
add
or
mov
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
dec
adc
data16
jnp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
or
mov
adc
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
dec
adc
adc
push
inc
add
push
jae
add
or
mov
add
add
add
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
dec
adc
mov
add
add
cmps
add
or
dec
adc
sahf
pop
add
enter
adc
cmps
add
or
push
adc
leave
add
or
push
adc
test
add
cdq
add
or
push
adc
and
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
push
adc
add
add
add
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
int3
add
or
add
adc
push
sub
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
push
adc
adc
push
inc
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
push
sub
add
add
push
inc
add
push
jae
add
or
mov
add
add
add
in
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
inc
sub
pop
adc
pop
sub
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
pop
adc
adc
push
inc
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
pop
sub
add
add
push
inc
add
push
jae
add
or
mov
add
add
add
adc
mov
add
cdq
add
or
pop
adc
and
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
pop
adc
add
add
add
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
int3
add
or
add
adc
pop
sub
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
pop
adc
adc
push
dec
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
pop
sub
add
add
push
dec
add
push
jae
add
or
mov
add
add
add
in
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
inc
sub
pop
adc
pusha
sub
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
popa
adc
adc
push
dec
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
bound
push
dec
add
push
jae
add
or
mov
add
add
add
adc
les
add
cdq
add
or
arpl
arpl
and
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
adc
add
add
add
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
int3
add
or
add
adc
gs
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
adc
adc
push
dec
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
addr16
add
add
push
dec
add
push
jae
add
or
mov
add
add
add
in
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
inc
sub
pop
adc
push
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
imul
add
inc
dec
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
push
adc
push
dec
add
push
jae
add
or
mov
add
add
add
adc
aam
add
cdq
add
or
imul
cmp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
ins
adc
add
add
add
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
int3
add
or
add
adc
ins
sub
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
outs
adc
adc
push
push
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
outs
sub
add
add
push
push
add
push
jae
add
or
mov
add
add
add
in
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
inc
sub
pop
adc
jo
xor
add
add
outs
mov
add
jb
pop
add
cdq
add
or
jno
jno
adc
push
push
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
jb
adc
push
push
add
push
jae
add
or
mov
add
add
add
adc
call
cdq
add
or
jae
jae
and
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
je
je
out
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
int3
add
or
add
adc
jne
xor
add
add
outs
mov
add
jb
pop
add
cdq
add
or
jbe
jbe
adc
push
push
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
ja
adc
push
push
add
push
jae
add
or
mov
add
add
add
in
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
inc
sub
pop
adc
js
xor
add
add
outs
mov
add
jb
pop
add
cdq
add
or
jns
jns
adc
push
push
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
jp
adc
push
push
add
push
jae
add
or
mov
add
add
add
adc
cli
pop
add
cdq
add
or
jnp
jnp
and
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
jl
jl
out
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
int3
add
or
add
adc
jge
xor
add
add
outs
mov
add
jb
pop
add
cdq
add
or
jle
jle
adc
push
pop
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
jg
adc
push
pop
add
push
jae
add
or
mov
add
add
add
in
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
sub
add
or
retf
add
or
inc
sub
pop
adc
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
adc
add
inc
pop
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
add
add
push
pop
add
push
jae
add
or
mov
add
add
add
adc
or
add
cdq
add
or
adc
cmp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
or
jo
jle
add
sub
add
sub
add
or
jnp
add
add
jl
add
push
outs
jge
add
jb
or
jo
jle
add
sub
add
sub
add
or
retf
add
or
test
test
out
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
or
jo
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
or
jo
jle
add
sub
add
sub
add
or
int3
add
or
add
adc
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
xchg
xchg
push
pop
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
add
add
push
pop
add
push
jae
add
or
mov
add
add
add
in
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
or
jo
jle
add
sub
add
sub
add
or
push
sub
add
or
adc
jnp
add
add
jl
add
push
outs
jge
add
jb
or
jo
jle
add
sub
add
sub
add
or
retf
add
or
inc
sub
pop
adc
add
jnp
add
add
outs
mov
add
jb
pop
add
cdq
add
or
mov
mov
push
pop
add
push
jae
add
or
mov
add
add
sub
add
jge
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
inc
adc
add
add
push
pop
add
push
jae
add
or
mov
add
add
add
add
add
ficom
add
jnp
add
add
outs
xchg
add
or
add
sub
add
inc
xchg
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
je
add
adc
add
pop
add
add
add
add
add
xor
add
dec
sbb
add
add
add
sbb
add
add
add
adc
add
add
add
outs
xchg
add
or
add
add
jo
jb
or
jo
jae
add
or
jae
add
or
lldt
movq
add
add
adc
jae
add
or
adc
adc
jae
add
or
adc
adc
or
add
or
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
or
jo
jae
add
or
add
jae
add
or
adc
adc
outs
js
add
add
adc
jae
add
or
adc
adc
outs
int
add
jb
or
jo
outs
jl
add
push
outs
jge
add
jb
or
jo
jle
add
outs
into
add
or
adc
jae
add
or
adc
adc
add
jnp
add
es
or
adc
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
or
jo
add
or
push
push
jae
add
or
adc
js
add
add
add
add
or
push
add
push
jae
add
or
pop
add
pop
adc
outs
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
or
fdiv
or
jae
add
or
or
jae
add
or
sbb
adc
outs
js
add
add
pop
adc
jae
add
or
sbb
adc
jae
add
or
sbb
adc
adc
outs
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
or
add
or
outs
jge
add
jb
(bad)
jo
jle
add
movs
test
add
adc
adc
outs
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
movs
test
add
adc
adc
outs
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
movs
test
add
adc
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
jb
push
add
cdq
add
or
sbb
sbb
add
push
jge
add
add
sub
add
sbb
add
add
adc
push
inc
adc
sbb
imul
add
push
adc
xchg
add
add
or
add
or
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
push
or
add
or
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
pop
add
outs
jl
add
push
outs
jge
add
jb
or
jo
jle
add
sub
add
or
add
add
adc
adc
sub
call
mov
mov
pop
add
add
add
iret
add
or
rol
add
and
push
add
jae
add
or
mov
rol
add
jge
add
add
add
add
add
pop
sub
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
and
and
add
or
rol
add
adc
adc
sub
add
add
add
add
and
mov
fs
add
or
rol
add
jge
add
add
add
add
add
pop
sub
add
add
adc
add
or
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
sub
add
or
add
add
adc
add
jae
add
or
mov
add
add
sub
add
add
adc
add
add
adc
add
inc
pusha
add
push
jae
add
or
mov
add
add
or
inc
adc
adc
cmp
adc
outs
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
and
or
add
or
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
and
adc
adc
mov
call
mov
mov
and
jnp
add
add
iret
add
or
rol
add
and
push
add
jae
add
or
mov
rol
add
jge
add
add
add
add
add
pop
sub
add
add
add
push
popa
add
push
jae
add
or
mov
add
add
and
add
add
adc
add
inc
bound
add
jae
add
or
mov
add
add
or
inc
adc
add
add
adc
outs
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
adc
outs
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
daa
add
adc
sub
call
mov
mov
daa
add
add
add
iret
add
or
rol
add
and
push
add
jae
add
or
mov
rol
add
jge
add
add
add
add
add
pop
sub
add
add
add
push
arpl
add
jae
add
or
mov
add
add
and
add
add
adc
add
inc
add
push
jae
add
or
mov
add
add
jnp
add
add
call
mov
mov
or
cmps
add
or
or
(bad)
jo
enter
adc
adc
jb
adc
jo
cdq
add
or
add
add
add
add
adc
adc
cmp
jb
add
jo
sub
adc
jo
sub
add
or
sub
sub
add
or
xor
adc
outs
js
add
add
sub
xor
add
or
xor
adc
jp
add
adc
sub
add
or
add
or
adc
or
fadd
fimul
adc
sub
add
add
add
or
adc
outs
sub
add
add
adc
outs
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
jnp
add
add
rol
add
adc
sub
add
or
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
jnp
add
add
rol
add
adc
sub
add
or
or
or
or
or
xlat
add
or
adc
jo
das
jb
adc
jo
lea
add
add
cmp
add
mov
xor
add
add
add
xor
add
add
add
xor
add
add
add
mov
add
add
mov
add
add
mov
add
add
or
xor
adc
jo
das
adc
sub
add
or
xor
adc
push
jae
add
or
add
outs
js
add
add
xor
ss
add
or
aaa
add
aaa
and
add
add
add
or
adc
outs
fild
add
adc
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
jge
add
add
adc
jb
adc
jo
cdq
add
or
cmp
cmp
add
pop
jge
add
add
add
adc
add
add
add
outs
xchg
add
or
add
sub
add
add
add
inc
add
add
add
add
add
add
add
add
add
daa
add
add
add
or
add
add
add
add
add
add
add
jae
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
or
add
add
add
add
add
sub
add
lea
add
or
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
xor
add
add
adc
add
add
add
outs
xchg
add
or
jb
add
jo
jb
adc
jo
jae
add
or
jae
add
or
add
or
pop
or
add
or
add
adc
jp
add
adc
outs
jnp
add
es
or
adc
or
fadd
fimul
adc
sub
add
add
add
or
sub
or
add
or
fadd
add
outs
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
push
adc
cmp
out
add
push
adc
adc
add
add
add
jb
adc
jo
or
add
or
or
jae
add
or
sbb
adc
outs
js
add
add
or
sbb
add
or
sbb
adc
jae
add
or
sbb
adc
adc
outs
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
adc
outs
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
or
or
adc
jo
enter
adc
adc
jb
(bad)
jo
enter
adc
or
add
or
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
or
add
or
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
push
adc
outs
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
movups
outs
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
adc
or
add
or
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
or
add
or
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
adc
outs
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
adc
or
add
or
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
adc
or
add
or
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
adc
outs
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
adc
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
adc
adc
outs
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
pop
adc
or
adc
(bad)
adc
jo
or
add
and
and
test
add
mov
mov
and
add
add
mov
add
add
mov
add
add
mov
and
add
add
adc
and
mov
and
mov
push
mov
or
sbb
pop
sub
sbb
sbb
cli
(bad)
jo
enter
jge
add
add
adc
inc
lock
push
jae
add
or
mov
add
es
add
or
sbb
fild
add
sub
add
or
adc
add
or
add
or
adc
or
outs
jecxz
add
add
sbb
or
sbb
add
or
adc
or
outs
in
add
add
sbb
or
outs
out
add
add
sbb
or
adc
add
push
jae
add
or
add
or
adc
add
push
jae
add
or
add
or
adc
or
adc
or
adc
or
add
or
adc
or
fadd
add
adc
add
add
add
outs
xchg
add
or
add
sub
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
xor
add
add
add
jnp
add
add
outs
xchg
add
or
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
jb
push
add
cdq
add
or
add
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
sub
add
xor
add
out
add
or
add
ficom
add
jnp
add
add
outs
xchg
add
or
add
sub
adc
add
add
add
add
add
add
adc
add
inc
add
add
add
adc
add
out
add
or
lock
or
inc
or
sub
add
jnp
add
add
inc
or
sub
add
add
out
add
or
add
add
sub
add
jnp
add
add
rcl
add
or
add
sub
add
xor
add
add
adc
add
add
out
add
or
lock
or
inc
or
sub
add
jnp
add
add
inc
or
sub
add
add
out
add
or
add
add
sub
add
jnp
add
add
add
add
add
or
add
sub
add
jnp
add
add
or
add
add
cmp
add
add
add
or
add
add
sbb
add
das
add
add
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
sub
add
call
call
add
push
add
add
jge
add
add
sub
add
push
add
fiadd
add
sbb
call
call
mov
add
add
jnp
add
add
cwde
add
or
add
add
add
cwde
add
or
and
add
add
call
add
or
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
or
pusha
or
add
add
or
or
outs
popf
add
or
or
outs
sahf
add
or
or
outs
lahf
add
or
or
add
or
jb
push
add
adc
add
adc
outs
movs
add
or
or
add
adc
imul
or
add
or
or
add
or
and
add
add
call
xor
add
add
adc
add
add
adc
pop
add
add
xor
das
add
add
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
sub
add
call
call
add
push
add
add
jge
add
add
sub
add
push
add
fiadd
add
sbb
call
call
mov
add
add
jnp
add
add
cwde
add
or
add
add
add
cwde
add
or
and
add
add
call
add
or
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
or
pusha
or
add
add
or
or
outs
popf
add
or
or
outs
sahf
add
or
or
outs
lahf
add
or
or
add
or
jb
push
add
adc
add
adc
outs
movs
add
or
or
add
adc
imul
or
add
or
or
add
or
and
add
add
call
xor
add
add
adc
add
add
adc
pop
add
add
xor
add
add
adc
push
or
push
or
cmp
add
pop
outs
repnz
or
outs
repz
or
push
add
cdq
add
or
or
outs
hlt
add
or
or
add
or
pop
or
add
adc
add
pop
or
sub
add
or
add
or
add
add
push
push
inc
adc
adc
sub
add
add
push
adc
adc
jb
push
add
test
pop
outs
clc
add
or
add
fiadd
add
add
add
adc
add
add
add
add
add
xor
add
add
adc
push
or
push
or
cmp
add
pop
outs
repnz
or
outs
repz
or
push
add
cdq
add
or
or
outs
hlt
add
or
or
add
or
pop
or
add
adc
add
pop
or
sub
add
or
add
or
add
add
push
push
inc
adc
adc
sub
add
add
push
adc
adc
jb
push
add
test
pop
outs
clc
add
or
add
fiadd
add
add
add
adc
add
add
add
add
add
xor
add
add
adc
push
or
push
or
cmp
add
pop
outs
repnz
or
outs
repz
or
push
add
cdq
add
or
or
outs
hlt
add
or
or
add
or
pop
or
add
adc
add
pop
or
sub
add
or
add
or
add
add
push
push
inc
adc
adc
sub
add
add
push
adc
adc
jb
push
add
test
pop
outs
clc
add
or
add
fiadd
add
add
add
adc
add
add
add
add
add
add
clc
add
or
add
sub
add
or
sub
add
xor
add
add
adc
push
or
push
or
cmp
add
pop
outs
repnz
or
outs
repz
or
push
add
cdq
add
or
or
outs
hlt
add
or
or
add
or
pop
or
add
adc
add
pop
or
sub
add
or
add
or
add
add
push
push
inc
adc
adc
sub
add
add
push
adc
adc
jb
push
add
test
pop
outs
clc
add
or
add
fiadd
add
add
add
adc
add
add
add
add
add
add
stc
add
or
sub
add
sbb
add
mov
add
sbb
add
add
or
push
or
cmp
add
pop
outs
repnz
or
outs
repz
or
push
add
cdq
add
or
or
outs
hlt
add
or
or
add
or
pop
or
add
adc
add
pop
or
sub
add
or
add
or
add
add
push
push
inc
adc
adc
sub
add
add
push
adc
adc
jb
push
add
test
pop
outs
clc
add
or
add
fiadd
add
add
add
adc
add
add
add
add
add
xor
add
add
adc
push
or
push
or
cmp
add
pop
outs
repnz
or
outs
repz
or
push
add
cdq
add
or
or
outs
hlt
add
or
or
add
or
pop
or
add
adc
add
pop
or
sub
add
or
add
or
add
add
push
push
inc
adc
adc
sub
add
add
push
adc
adc
jb
push
add
test
pop
outs
clc
add
or
add
fiadd
add
add
add
adc
add
add
add
add
add
xor
add
add
adc
add
jnp
add
add
jnp
add
add
cli
add
or
add
or
add
add
add
cld
add
or
push
or
sub
sub
pop
pop
add
arpl
jb
push
add
jnp
add
add
std
add
or
loope
add
outs
add
or
add
add
add
outs
test
add
add
jnp
add
add
outs
inc
add
add
sub
jb
push
add
jnp
add
add
std
add
or
loope
add
outs
add
or
add
add
add
outs
inc
add
add
add
ficom
add
jnp
add
add
inc
add
es
add
add
add
add
add
add
xchg
cwde
add
adc
add
adc
add
test
add
adc
add
add
jnp
add
add
push
sub
add
jnp
add
add
cmp
add
add
or
add
jge
add
add
push
jge
add
add
jnp
add
add
outs
test
add
add
jnp
add
add
outs
test
add
add
sub
add
jnp
add
add
outs
pop
add
add
or
add
jge
add
add
pop
jge
add
add
jnp
add
add
outs
test
add
add
jnp
add
add
outs
test
add
add
sub
xor
add
add
adc
add
add
jnp
add
add
inc
or
sub
add
jnp
add
add
add
add
add
add
add
add
adc
jnp
add
add
pusha
add
or
inc
sub
push
or
sub
add
jnp
add
add
popa
add
or
add
push
jge
add
add
add
xor
add
add
sbb
add
add
add
pop
add
add
add
sub
add
or
mov
add
add
add
sub
add
or
add
add
sbb
add
add
add
add
es
add
add
add
xor
add
add
add
push
or
add
add
add
jnp
add
add
add
add
push
es
add
add
sbb
add
add
add
add
sbb
add
add
add
xor
add
add
add
add
add
add
add
push
add
push
jge
add
add
pop
jge
add
add
fiadd
add
sbb
add
adc
add
add
add
sbb
add
add
add
xor
add
add
add
add
add
add
add
push
add
push
jge
add
add
push
jge
add
add
fiadd
add
sbb
add
adc
add
add
add
sbb
add
add
add
xor
add
add
push
add
adc
add
or
dec
add
add
xchg
sub
add
or
mov
pop
push
inc
or
sub
add
sub
add
or
add
add
sub
add
sub
add
or
add
add
add
add
sbb
push
adc
or
add
add
inc
adc
adc
sub
adc
add
sbb
add
add
sbb
add
add
add
inc
add
add
add
bound
add
sbb
add
imul
add
add
pop
or
dec
add
add
xchg
sub
add
or
mov
pop
push
inc
or
sub
add
sub
add
or
add
add
sub
add
sub
add
or
add
add
add
add
sbb
push
adc
or
add
add
inc
adc
adc
sub
adc
add
sbb
add
add
sbb
add
add
add
inc
add
add
add
bound
add
adc
add
xor
add
pop
add
adc
add
push
or
add
add
add
sub
cwde
add
add
adc
add
jnp
add
add
adc
adc
sub
add
sub
adc
add
xor
add
and
add
jae
add
push
or
add
add
add
sub
movs
add
add
adc
add
jnp
add
add
adc
adc
sub
add
sub
adc
add
xor
add
and
add
jae
add
push
or
add
add
add
sub
mov
add
adc
add
jnp
add
add
adc
adc
sub
add
sub
xor
add
add
add
add
adc
add
push
or
add
add
add
sub
mov
adc
add
jnp
add
add
adc
adc
sub
adc
add
xor
add
and
add
jae
add
push
or
add
add
add
sub
retf
add
adc
add
jnp
add
add
adc
adc
sub
add
sub
adc
add
xor
add
and
add
jae
add
push
or
add
add
add
sub
xlat
add
add
adc
add
jnp
add
add
adc
adc
sub
add
sub
adc
add
add
add
add
adc
jle
add
add
push
sub
add
pop
add
or
add
sub
add
sbb
sub
add
outs
pop
add
or
add
sub
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
or
dec
add
and
add
add
or
add
add
add
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
add
sgdtd
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
add
adc
add
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
sub
add
add
jnp
add
add
outs
test
add
add
jnp
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
add
add
pop
or
aaa
add
or
add
or
add
add
add
and
add
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
sbb
add
jae
add
or
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
popa
pop
data16
add
or
add
or
add
add
add
inc
sbb
jo
test
jnp
add
add
mov
add
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
push
outs
sbb
add
add
jnp
add
add
push
sbb
jo
add
or
add
add
add
and
add
or
add
add
add
outs
test
add
add
jnp
add
add
adc
add
fadd
sbb
jae
add
or
add
or
add
add
add
cmps
add
add
or
aaa
add
or
add
or
add
add
add
jge
add
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
lea
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
and
add
jae
add
or
add
or
add
add
add
outs
test
add
add
jnp
add
add
adc
add
fadd
sbb
jae
add
or
add
or
add
add
add
cmps
add
add
es
add
or
add
or
add
add
add
popf
sbb
jo
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
lods
sbb
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
and
add
jae
add
or
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
push
add
add
or
aaa
add
or
add
or
add
add
add
mov
test
jnp
add
add
push
add
add
jl
xor
add
outs
sbb
add
add
jnp
add
add
sub
or
add
add
add
sbb
add
or
add
or
add
add
add
int
add
test
jnp
add
add
dec
add
add
je
xor
add
outs
sbb
add
add
jnp
add
add
outs
and
add
add
jnp
add
add
sub
and
add
add
jnp
add
add
outs
and
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
add
add
pop
es
add
or
add
or
add
add
add
in
add
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
cmc
sbb
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
and
add
jae
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
add
add
pop
inc
jae
add
or
add
or
add
add
add
pop
sbb
jo
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
das
outs
sbb
add
add
jnp
add
add
pop
sbb
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
and
jae
add
outs
sbb
add
add
jnp
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
add
add
pop
je
aaa
add
or
add
or
add
add
add
and
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
xor
add
or
add
add
add
xor
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
push
jae
add
or
add
or
add
add
add
outs
add
or
add
add
add
dec
sbb
jo
daa
add
or
add
add
add
ins
sbb
jo
sub
add
add
jnp
add
add
jb
sbb
jo
sub
add
je
add
add
add
or
add
add
add
ins
sbb
jo
sub
add
add
jnp
add
add
inc
daa
add
push
jae
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
cmps
add
add
pop
jae
add
or
add
or
add
add
add
mov
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
xor
add
or
add
add
add
mov
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
sub
add
jae
add
or
add
or
add
add
add
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
and
add
add
add
or
add
or
add
add
add
mov
test
jnp
add
add
out
add
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
xor
add
or
add
add
add
outs
das
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
stos
add
add
jae
add
or
add
or
add
add
add
xchg
add
add
(bad)
xor
add
outs
xor
add
add
jnp
add
add
retf
sbb
jo
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
adc
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
push
jae
add
or
add
or
add
add
add
fistp
add
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
adc
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
add
add
jae
add
or
add
or
add
add
add
jmp
add
test
jnp
add
add
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
adc
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
add
add
jae
add
or
add
or
add
add
add
sti
sbb
jo
test
jnp
add
add
hlt
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
adc
add
or
add
add
add
outs
test
add
add
jnp
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
or
add
jae
add
or
add
or
add
add
add
or
add
test
jnp
add
add
mov
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
pop
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
sub
jae
add
outs
sbb
add
add
jnp
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
cmps
add
add
je
aaa
add
or
add
or
add
add
add
sbb
add
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
xor
add
or
add
add
add
or
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
sub
add
jae
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
add
add
pop
pop
jae
add
or
add
or
add
add
add
sub
add
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
xor
sbb
add
add
jnp
add
add
cmp
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
sub
add
jae
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
cmps
add
add
inc
jae
add
or
add
or
add
add
add
push
sbb
jo
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
xor
or
add
add
add
sbb
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
sub
add
jae
add
or
add
or
add
add
add
outs
xor
add
add
jnp
add
add
outs
xor
add
add
jnp
add
add
mov
add
xor
add
add
jnp
add
add
mov
add
xor
add
add
jnp
add
add
outs
xor
add
add
add
outs
add
or
add
add
add
outs
aaa
add
or
add
add
add
pop
pop
push
push
push
push
push
jae
add
or
add
or
add
add
add
mov
add
cmp
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
add
or
add
or
add
add
add
jae
add
test
jnp
add
add
fs
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
push
pop
sub
add
or
add
or
add
add
add
test
add
test
jnp
add
add
inc
pop
adc
xor
add
outs
sbb
add
add
jnp
add
add
xor
sbb
add
add
jnp
add
add
xchg
sbb
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
sub
add
jae
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
repnz
add
or
aaa
add
or
add
or
add
add
add
test
test
jnp
add
add
jno
inc
jae
add
or
add
or
add
add
add
aaa
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
mov
add
or
add
add
add
outs
inc
add
add
jnp
add
add
and
add
outs
sbb
add
add
add
rol
add
outs
add
or
add
add
add
rol
add
outs
cmp
add
add
add
pop
or
aaa
add
or
add
or
add
add
add
fstp
add
test
jnp
add
add
rol
add
pop
jns
xor
add
outs
sbb
add
add
jnp
add
add
outs
and
add
add
jnp
add
add
cmp
add
or
add
add
add
outs
and
add
add
add
and
add
outs
sbb
add
add
add
jbe
add
pop
or
aaa
add
or
add
or
add
add
add
outs
pop
outs
jae
add
or
add
or
add
add
add
icebp
sbb
jo
test
jnp
add
add
outs
pop
outs
jae
add
or
add
or
add
add
add
outs
and
add
add
jnp
add
add
outs
and
add
add
jnp
add
add
outs
and
add
add
add
and
add
outs
sbb
add
add
add
int3
add
push
outs
add
or
add
add
add
outs
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
aaa
add
or
add
or
add
add
add
or
add
test
jnp
add
add
call
jl
add
jae
add
or
add
or
add
add
add
sub
add
or
add
add
add
add
or
add
or
add
add
add
outs
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
add
or
add
or
add
add
add
pop
sbb
jo
test
jnp
add
add
lahf
add
add
mov
xor
add
outs
sbb
add
add
jnp
add
add
cmp
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
cmps
add
add
add
or
add
or
add
add
add
and
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
push
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
add
or
add
or
add
add
add
xor
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
inc
sbb
jo
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
add
add
add
or
add
or
add
add
add
pop
sbb
jo
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
adc
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
jo
aaa
add
or
add
or
add
add
add
outs
sbb
jo
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
jge
add
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
pop
jae
add
or
add
or
add
add
add
mov
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
adc
sbb
add
add
jnp
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
dec
jae
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
mov
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
cmp
add
or
add
or
add
add
add
fistp
add
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
adc
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
sub
add
or
add
or
add
add
add
out
sbb
jo
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
std
sbb
jo
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
pop
jae
add
or
add
or
add
add
add
sbb
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
adc
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
sbb
add
or
add
or
add
add
add
sub
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
cmp
jo
add
or
add
add
add
and
add
or
add
add
add
add
or
add
or
add
add
add
outs
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
rol
add
and
add
add
add
or
add
or
add
add
add
push
sbb
jo
test
jnp
add
add
aas
pop
inc
jae
add
or
add
or
add
add
add
cmp
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
sbb
add
or
add
or
add
add
add
gs
jo
test
jnp
add
add
xor
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
jne
add
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
sbb
aaa
add
or
add
or
add
add
add
sbb
add
add
jnp
add
add
cmp
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
xchg
sbb
jo
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
or
sub
aaa
add
or
add
or
add
add
add
mov
test
jnp
add
add
sub
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
sbb
or
add
add
add
and
add
or
add
add
add
add
or
add
or
add
add
add
outs
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
sbb
or
add
or
add
add
add
mov
add
test
jnp
add
add
lahf
add
add
mov
xor
add
outs
sbb
add
add
jnp
add
add
aaa
outs
sbb
add
add
jnp
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
aaa
add
or
add
or
add
add
add
rcr
outs
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
and
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
aaa
add
or
add
or
add
add
add
rcr
jo
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
sub
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
and
add
or
add
or
add
add
add
loope
add
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
and
sbb
add
add
jnp
add
add
icebp
sbb
jo
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
sub
add
or
add
or
add
add
add
or
add
or
add
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
pop
sbb
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
jo
aaa
add
or
add
or
add
add
add
cmp
add
or
add
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
sub
add
or
add
add
add
dec
sbb
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
sbb
add
or
add
or
add
add
add
jns
add
test
jnp
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
mov
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
es
pop
jae
add
or
add
or
add
add
add
stos
sbb
add
or
add
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
daa
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
es
pop
jae
add
or
add
or
add
add
add
mov
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
sbb
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
dec
jae
add
or
add
or
add
add
add
retf
sbb
add
or
add
add
add
xchg
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
fistp
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
es
cmp
add
or
add
or
add
add
add
pop
push
add
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
and
add
or
add
add
add
add
or
add
or
add
add
add
outs
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
lods
add
add
cmp
aaa
add
or
add
or
add
add
add
pop
push
add
test
jnp
add
add
mov
add
pop
aaa
jae
add
or
add
or
add
add
add
cmp
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
out
add
add
and
add
or
add
or
add
add
add
and
test
jnp
add
add
xchg
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
push
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
pop
sbb
jae
add
or
add
or
add
add
add
sbb
add
or
add
or
add
add
add
xor
test
jnp
add
add
xchg
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
inc
push
add
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
push
add
add
and
add
or
add
or
add
add
add
arpl
add
test
jnp
add
add
xchg
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
push
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
pop
sbb
jae
add
or
add
or
add
add
add
out
add
add
jae
add
or
add
or
add
add
add
jae
add
test
jnp
add
add
xchg
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
sbb
jo
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
and
add
or
add
or
add
add
add
lahf
push
add
test
jnp
add
add
xchg
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
pop
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
pop
sbb
jae
add
or
add
or
add
add
add
push
add
add
jae
add
or
add
or
add
add
add
scas
push
add
test
jnp
add
add
xchg
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
mov
add
or
add
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
pop
sbb
jae
add
or
add
or
add
add
add
popf
add
add
jae
add
or
add
or
add
add
add
fistp
add
test
jnp
add
add
xchg
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
jmp
add
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
popf
add
add
and
add
or
add
or
add
add
add
or
test
jnp
add
add
xchg
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
sbb
add
or
add
add
add
and
add
or
add
add
add
add
or
add
or
add
add
add
outs
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
iret
add
add
or
add
or
add
add
add
sbb
test
jnp
add
add
inc
pop
push
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
sub
add
or
add
or
add
add
add
sub
add
test
jnp
add
add
cmp
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
cmp
add
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
cmp
aaa
add
or
add
or
add
add
add
dec
pop
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
push
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
sbb
add
or
add
or
add
add
add
pop
pop
add
test
jnp
add
add
cmp
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
imul
jo
add
or
add
add
add
and
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
pop
adc
or
add
or
add
add
add
jge
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
pop
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
jne
add
and
add
add
add
or
add
or
add
add
add
lea
add
test
jnp
add
add
aaa
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
xor
or
add
add
add
and
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
pop
sbb
jae
add
or
add
or
add
add
add
push
add
add
out
add
add
add
or
add
or
add
add
add
fwait
pop
add
test
jnp
add
add
js
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
xor
sbb
add
add
jnp
add
add
test
add
or
add
add
add
and
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
imul
add
add
add
or
add
or
add
add
add
rcr
add
test
jnp
add
add
js
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
xor
add
or
add
add
add
and
add
or
add
add
add
or
add
or
add
add
add
inc
add
or
xchg
add
add
add
or
add
add
add
inc
add
or
pop
add
add
add
or
add
add
add
inc
add
or
sbb
jo
inc
add
or
add
add
add
inc
add
or
add
adc
inc
add
or
add
add
add
inc
add
or
add
add
inc
add
or
add
add
add
inc
add
or
cmp
inc
add
or
add
add
add
inc
add
or
outs
dec
add
or
add
add
add
inc
add
or
add
cmp
dec
add
or
add
add
add
inc
add
or
les
add
or
add
add
add
inc
add
or
data16
outs
dec
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
dec
add
or
add
or
add
add
add
dec
add
or
add
or
add
add
add
push
add
or
add
or
add
add
add
inc
add
add
retf
add
add
add
or
add
or
add
add
add
loope
add
test
jnp
add
add
push
add
or
add
add
add
jo
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
lahf
add
add
lahf
add
add
add
or
add
or
add
add
add
xor
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
pop
sbb
jae
add
or
add
or
add
add
add
imul
add
add
add
or
add
or
add
add
add
stc
pop
add
test
jnp
add
add
js
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
xor
add
or
add
add
add
or
add
add
or
add
add
add
and
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
add
add
and
add
add
add
or
add
or
add
add
add
das
and
jo
test
jnp
add
add
js
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
das
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
pop
sbb
jae
add
or
add
or
add
add
add
add
add
and
add
add
add
or
add
or
add
add
add
aas
and
jo
test
jnp
add
add
js
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
dec
and
jo
add
or
add
add
add
and
add
or
add
add
add
or
add
or
add
add
add
inc
add
or
sbb
add
outs
inc
add
or
add
add
add
inc
add
or
out
add
outs
inc
add
or
add
add
add
inc
add
or
add
and
inc
add
or
add
add
add
inc
add
or
add
lock
outs
pop
add
or
add
add
add
inc
add
or
cli
add
add
add
or
add
add
add
inc
add
or
mov
add
outs
inc
add
or
add
add
add
inc
add
or
jge
dec
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
rol
push
jae
add
or
add
or
add
add
add
push
add
or
add
or
add
add
add
stos
add
add
or
add
or
add
add
add
sbb
sbb
add
or
add
or
add
add
add
jno
add
test
jnp
add
add
push
add
or
add
add
add
ins
inc
outs
push
add
or
add
add
add
push
add
or
sub
outs
pop
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
sub
add
and
add
jae
add
or
add
or
add
add
add
sub
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
pop
sbb
jae
add
or
add
or
add
add
add
push
and
add
add
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
add
add
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
sub
sbb
add
add
jnp
add
add
cdq
and
jo
add
or
add
add
add
and
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
cmp
inc
add
jae
add
or
add
or
add
add
add
ret
and
jo
test
jnp
add
add
aaa
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
sub
add
or
add
add
add
and
add
or
add
add
add
or
add
or
add
add
add
inc
add
or
xchg
add
add
add
or
add
add
add
inc
add
or
pop
add
add
add
or
add
add
add
inc
add
or
sbb
jo
inc
add
or
add
add
add
inc
add
or
add
adc
inc
add
or
add
add
add
inc
add
or
add
add
inc
add
or
add
add
add
inc
add
or
outs
dec
add
or
add
add
add
inc
add
or
add
cmp
dec
add
or
add
add
add
inc
add
or
data16
outs
dec
add
or
add
add
add
aas
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
dec
add
or
add
or
add
add
add
dec
add
or
add
or
add
add
add
push
add
or
add
or
add
add
add
and
add
add
add
or
add
or
add
add
add
shl
add
test
jnp
add
add
push
add
or
add
add
add
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
lahf
add
add
lahf
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
inc
add
or
sbb
add
outs
inc
add
or
add
add
add
inc
add
or
out
add
outs
inc
add
or
add
add
add
inc
add
or
add
and
inc
add
or
add
add
add
inc
add
or
add
lock
outs
pop
add
or
add
add
add
inc
add
or
cli
add
add
add
or
add
add
add
inc
add
or
mov
inc
add
or
add
add
add
inc
add
or
jge
dec
add
or
add
add
add
aas
add
or
add
or
add
add
add
push
add
or
add
or
add
add
add
lar
add
or
add
or
add
add
add
jmp
add
test
jnp
add
add
push
add
or
add
add
add
ins
inc
outs
push
add
or
add
add
add
push
add
or
sub
outs
pop
add
or
add
add
add
outs
push
add
or
add
add
add
outs
push
add
or
add
add
add
sub
add
and
add
jae
add
or
add
or
add
add
add
xor
add
or
add
add
rol
add
jae
add
or
pop
add
or
add
sub
add
add
sub
add
outs
sbb
add
lock
add
xor
add
jae
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
push
jb
and
jo
sub
add
je
add
add
bound
add
add
and
add
add
pop
add
add
add
or
add
or
add
and
jo
test
pop
sub
add
add
sbb
hlt
add
or
add
inc
cmp
add
jae
add
or
add
or
add
inc
cmp
add
jae
add
or
add
or
add
inc
sbb
add
jae
add
or
jbe
add
add
jnp
add
add
outs
push
add
add
add
imul
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
imul
jnp
add
add
imul
jnp
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
sub
add
add
outs
jae
add
or
push
or
add
ins
add
or
sub
add
add
add
push
jge
add
add
add
push
and
add
jae
add
or
jne
add
add
add
push
and
add
jae
add
or
jbe
add
add
add
add
adc
add
bound
add
adc
add
add
jnp
add
add
outs
test
add
add
jnp
add
add
outs
test
add
add
jnp
add
add
push
sub
add
jnp
add
add
outs
test
add
add
jnp
add
add
outs
test
add
add
sub
add
add
add
outs
test
add
add
jnp
add
add
outs
test
add
add
sub
sub
add
add
outs
test
add
add
jnp
add
add
mov
add
add
jnp
add
add
outs
test
add
add
add
stos
add
jnp
add
add
outs
test
add
add
jnp
add
add
mov
add
add
jnp
add
add
outs
test
add
add
add
mov
jnp
add
add
outs
test
add
add
jnp
add
add
mov
add
add
jnp
add
add
outs
test
add
add
push
jge
add
add
add
call
add
and
add
or
add
add
add
xor
add
add
or
sub
sub
add
add
jl
add
add
ins
add
or
and
jo
loope
add
outs
add
or
sub
sub
add
add
add
and
add
or
sub
sub
add
add
jl
add
add
ins
add
or
and
jo
loope
add
outs
add
or
sub
sub
add
add
add
and
add
or
sub
sub
add
adc
add
dec
add
add
add
adc
adc
cwde
add
add
sub
add
add
add
push
add
add
test
add
outs
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
add
xor
add
add
adc
add
add
jo
jb
and
jo
jae
add
or
jae
add
or
push
add
push
outs
js
add
add
adc
jae
add
or
pop
add
pop
outs
int
add
jb
and
outs
add
or
jnp
add
add
outs
add
or
add
or
jno
add
add
pop
outs
int
add
jb
and
outs
add
or
jnp
add
add
outs
add
or
add
or
jno
add
add
pop
jae
add
or
or
adc
or
add
or
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jae
add
or
add
sub
add
sub
add
add
sub
add
add
push
add
jae
add
and
add
adc
add
adc
jb
and
sub
or
add
or
add
outs
jl
add
outs
jbe
add
adc
sub
or
add
or
add
adc
add
or
add
or
add
add
sub
add
add
push
push
add
push
jae
add
or
add
adc
add
adc
or
and
sub
or
add
or
add
or
add
or
or
add
add
or
or
or
or
sub
add
add
sbb
test
add
and
add
add
cli
add
or
and
sbb
cmps
add
or
or
adc
jo
enter
mov
and
sbb
cmps
add
or
or
and
add
or
and
push
add
or
add
lods
add
or
jp
add
add
and
sub
add
or
mov
add
add
or
add
adc
push
add
add
mov
add
add
ficom
adc
add
add
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
sub
add
xor
add
add
adc
add
add
add
jge
add
pop
inc
or
sub
add
jnp
add
add
jnp
add
add
jle
add
outs
add
or
add
add
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
push
add
add
add
add
push
add
add
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
sub
add
add
jnp
add
add
outs
das
add
or
add
add
add
outs
push
add
or
add
add
add
or
adc
add
or
add
or
add
add
add
or
add
or
add
add
add
pop
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
xchg
add
add
or
add
add
add
fwait
add
add
adc
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
outs
add
or
add
add
add
mov
test
jnp
add
add
outs
sbb
add
add
jnp
add
add
outs
das
add
or
add
add
add
outs
push
add
or
add
add
add
or
rol
add
jae
add
or
add
or
add
add
add
sub
test
jnp
add
add
push
pop
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
(bad)
add
add
or
add
add
add
fwait
add
add
rol
add
jae
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
outs
add
or
add
add
add
mul
add
test
jnp
add
add
or
add
or
add
add
add
pop
add
add
add
add
or
add
or
add
add
add
and
add
test
jnp
add
add
pop
pop
pop
jae
add
or
add
or
add
add
add
or
add
or
add
add
add
adc
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
data16
push
jae
add
or
add
or
add
add
add
pop
add
add
mov
aaa
add
or
add
or
add
add
add
jge
add
test
jnp
add
add
pop
pop
pop
jae
add
or
add
or
add
add
add
or
sbb
add
add
jnp
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
push
jae
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
or
add
add
add
or
add
or
add
add
add
inc
daa
add
test
jnp
add
add
push
add
add
xor
add
or
add
or
add
add
add
or
or
add
add
add
outs
cmp
add
add
jnp
add
add
push
daa
add
add
or
add
add
add
scas
add
add
adc
aaa
add
or
add
or
add
add
add
in
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
daa
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
push
jae
add
outs
sbb
add
add
jnp
add
add
pop
adc
or
add
or
add
add
add
and
jo
test
jnp
add
add
mov
adc
or
add
or
add
add
add
outs
sbb
add
add
and
add
inc
and
add
jae
add
or
pop
add
or
add
sub
add
add
sub
add
push
outs
add
or
add
xchg
add
add
ret
add
add
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
add
jb
and
jo
sub
add
je
add
add
bound
add
add
jb
push
add
test
sbb
add
or
add
daa
add
add
or
add
add
add
outs
push
add
add
add
push
add
add
push
sub
add
add
sub
add
add
add
xor
push
add
add
add
adc
sub
add
add
add
or
push
sub
push
or
mov
pop
lea
push
or
outs
add
or
or
mov
pop
pop
push
arpl
inc
add
pop
rcr
pop
pop
and
add
add
pushf
or
mov
pop
pop
or
add
sub
adc
add
add
add
adc
add
adc
and
add
data16
or
push
push
or
adc
sub
adc
xchg
or
push
arpl
sbb
or
sbb
or
adc
pop
or
arpl
popa
ror
push
push
arpl
sbb
or
sbb
or
adc
pop
or
maxps
popa
ror
add
pop
adc
adc
pop
pop
adc
adc
adc
adc
sub
add
add
adc
push
arpl
or
cs
adc
or
pop
or
add
add
adc
adc
sub
add
add
or
or
pop
rcl
add
or
sub
or
pop
or
or
add
add
adc
or
or
or
or
or
pop
ror
ror
push
adc
ror
push
adc
sub
add
xor
add
add
or
add
add
jne
add
add
push
sub
jle
add
add
inc
sub
push
or
sub
add
sub
push
outs
add
or
or
movs
add
add
outs
push
or
or
sub
add
and
add
outs
imul
add
add
add
leave
add
add
sbb
add
in
add
sub
add
add
add
or
add
add
jae
add
or
add
add
adc
stos
add
add
sub
add
add
add
jle
add
add
test
add
outs
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
jo
jb
daa
add
pop
jae
add
or
or
adc
outs
js
add
add
adc
jae
add
or
or
adc
jae
add
or
or
adc
jnp
add
add
jnp
add
es
or
adc
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
add
jo
jb
add
jo
add
jno
add
adc
add
adc
js
add
add
add
or
or
push
add
push
jae
add
or
lldt
movups
or
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
or
fdiv
add
jo
push
jb
add
jae
add
or
or
push
jae
add
or
adc
adc
outs
js
add
add
pop
adc
jae
add
or
adc
adc
jae
add
or
adc
adc
adc
outs
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
add
add
jl
add
push
outs
jge
add
jb
sub
jo
jle
add
sub
add
or
or
jnp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
test
add
add
jnp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
test
add
add
jnp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
test
add
add
jnp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
sub
jo
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
add
jo
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
test
add
add
jnp
add
add
or
sub
jo
enter
outs
add
or
add
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
test
add
add
jnp
add
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
test
add
add
jnp
add
add
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
add
or
outs
jge
add
jb
or
jo
jle
add
sub
add
outs
add
or
add
add
add
or
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
or
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
or
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
or
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
or
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
or
add
or
outs
jge
add
jb
pop
add
jle
add
sub
add
outs
add
or
add
add
add
or
add
or
outs
jge
add
jb
or
jo
jle
add
sub
add
outs
add
or
sub
add
add
add
add
or
add
test
sub
add
add
jb
dec
rol
add
add
add
or
push
push
add
add
inc
sub
add
add
jmp
add
add
add
push
lea
or
add
jne
sub
add
add
popa
add
or
cmp
push
xor
add
out
add
or
sub
sbb
add
popf
add
add
add
add
jo
jb
sub
jo
push
or
jae
add
or
pop
add
pop
outs
js
add
add
adc
jae
add
or
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
test
add
sub
add
outs
into
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
test
add
sub
add
outs
into
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
test
add
sub
xlat
add
add
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
test
add
sub
xlat
add
add
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
xchg
add
mov
add
add
mov
add
mov
add
add
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
xchg
add
mov
add
add
mov
add
mov
add
add
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
cli
add
or
mov
add
mov
add
add
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
xchg
add
mov
add
add
mov
add
mov
add
add
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
sub
jo
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
sub
mov
add
cli
add
or
mov
add
mov
add
add
add
or
adc
outs
int
add
jb
sub
retf
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
sub
leave
add
add
cli
add
or
mov
add
mov
add
add
add
or
adc
outs
int
add
jb
sub
into
add
add
xchg
add
mov
add
add
mov
add
mov
add
add
add
or
adc
outs
int
add
jb
sub
rol
add
cli
add
or
mov
add
mov
add
outs
into
add
or
adc
outs
int
add
jb
sub
rol
add
xchg
add
mov
add
add
mov
add
mov
add
add
add
or
adc
outs
int
add
jb
sub
jmp
add
mov
add
add
mov
add
mov
add
add
add
or
adc
and
add
add
add
or
adc
outs
fild
add
or
fimul
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
add
jo
jb
sub
push
or
jae
add
or
or
adc
outs
js
add
add
add
or
add
or
or
adc
outs
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
das
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
outs
int
add
jb
das
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
and
add
add
add
or
adc
outs
fild
add
or
fimul
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
add
jo
add
jo
push
push
or
add
or
or
adc
outs
js
add
add
push
adc
jae
add
or
or
adc
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
int
add
jb
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
int
add
jb
das
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
int
add
jb
das
add
jnp
add
add
cli
add
or
mov
add
outs
into
add
or
adc
lock
add
add
or
adc
fild
add
or
fimul
adc
sub
add
add
add
or
adc
outs
sub
add
add
sub
add
inc
xchg
add
add
add
sub
add
mov
add
fild
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
jae
add
push
or
outs
clc
add
or
sub
adc
add
dec
add
add
add
adc
jae
add
or
push
jb
xor
jo
lea
add
add
jb
xor
jo
mov
add
add
pop
outs
pop
add
add
outs
jge
add
pop
inc
or
sub
add
jnp
add
add
outs
nop
add
or
add
or
add
add
add
xor
add
add
adc
add
add
jo
jb
xor
jo
push
jae
add
or
or
add
or
pop
or
add
or
add
or
add
or
add
or
add
or
adc
sub
add
add
add
or
sub
or
add
or
fadd
fimul
or
or
add
or
fdiv
xor
jo
mov
add
adc
add
add
mov
add
add
add
add
add
add
add
cmp
or
add
and
or
add
add
add
or
add
add
add
add
add
pop
add
add
xor
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
add
add
call
call
add
or
add
add
gs
add
jae
add
or
popa
push
add
jae
add
or
or
adc
adc
adc
xchg
add
or
add
outs
xchg
add
or
inc
adc
adc
sub
add
xor
jo
mov
add
add
or
adc
pop
lea
or
or
push
pushf
jb
xor
jo
imul
push
adc
adc
push
adc
push
pop
sub
adc
push
adc
pop
adc
mov
xchg
add
or
adc
adc
adc
adc
push
adc
mov
xchg
add
or
push
adc
add
adc
or
adc
add
push
adc
push
adc
mov
cdq
add
or
ltr
pop
es
fwait
add
add
movlhps
add
adc
adc
mov
add
add
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
adc
sub
add
jb
xor
jo
add
or
adc
adc
sbb
add
jnp
add
add
adc
add
add
sub
add
or
add
add
add
adc
adc
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
adc
adc
sub
add
or
add
adc
cmp
(bad)
(bad)
inc
fimul
adc
sub
add
add
and
add
add
call
popf
add
add
and
add
add
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
xor
jo
imul
push
adc
adc
outs
movs
add
or
adc
adc
push
adc
mov
movs
add
or
and
add
add
sbb
cmps
add
or
sbb
or
pop
adc
call
mov
sbb
cmps
add
or
sbb
cmps
add
or
and
and
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
add
stos
add
or
sbb
sub
jle
add
add
stos
add
or
add
add
test
push
aam
adc
jle
add
add
stos
add
or
add
add
test
push
aam
adc
adc
push
adc
adc
push
bound
pop
pusha
rcl
and
and
arpl
add
adc
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
add
add
add
pop
outs
mov
add
jge
add
add
add
add
add
lea
push
pop
and
or
pop
add
sub
add
add
jnp
add
add
adc
add
or
add
or
pop
jb
pop
add
cdq
add
or
and
add
jnp
add
add
adc
add
add
or
add
jb
xor
jo
cdq
add
or
adc
sub
add
jnp
add
add
xor
add
add
or
add
jb
xor
jo
cdq
add
or
daa
adc
sub
add
jnp
add
add
dec
xor
jo
add
or
add
jb
xor
jo
cdq
add
or
sub
sub
add
jnp
add
add
jae
add
add
or
add
jnp
add
add
push
outs
mov
add
sub
add
add
add
add
ins
add
or
add
or
add
add
add
jnp
add
add
or
or
add
or
add
or
add
add
add
jnp
add
add
or
add
or
mov
add
outs
call
lock
add
jnp
add
add
or
add
or
mov
add
outs
call
inc
add
jnp
add
add
outs
mov
add
outs
lods
add
or
add
or
add
add
add
push
outs
mov
add
outs
lods
add
or
xor
jo
cdq
add
or
sub
sub
add
add
xchg
xor
jo
add
or
add
and
add
add
add
jnp
add
add
push
outs
mov
add
outs
lods
add
or
add
or
add
jnp
add
add
jnp
add
add
or
add
or
mov
add
outs
call
mov
add
cmps
add
add
adc
cmps
add
add
add
add
sub
add
add
add
add
pop
add
add
add
add
les
or
add
pop
add
add
sbb
add
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
cmp
add
add
call
call
add
or
and
add
jae
add
or
popa
push
add
jae
add
or
pop
(bad)
adc
adc
adc
xchg
add
or
xchg
add
or
inc
adc
adc
sub
add
xor
jo
mov
add
outs
xchg
add
or
adc
add
adc
adc
push
push
pushf
add
add
add
cli
add
or
xor
jo
cdq
add
or
or
or
add
jb
xor
jo
imul
push
jge
add
add
add
add
add
cli
add
or
xor
jo
cdq
add
or
or
or
add
jb
xor
jo
imul
push
jge
add
add
add
add
add
cli
add
or
xor
jo
cdq
add
or
or
or
add
jb
xor
jo
imul
push
jge
add
add
add
add
add
cli
add
or
xor
jo
cdq
add
or
or
or
adc
add
xor
jo
imul
push
jge
add
add
adc
push
adc
add
or
add
add
add
adc
add
add
imul
add
add
or
add
imul
push
adc
cmp
add
add
or
add
or
adc
add
add
movhps
jle
add
adc
add
pop
es
call
inc
adc
adc
cmp
push
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
adc
add
add
jb
xor
jo
add
or
adc
add
add
add
add
adc
add
add
sub
add
or
add
add
add
adc
push
adc
pop
pop
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
adc
adc
pop
inc
adc
adc
sub
add
or
add
adc
cmp
fimul
adc
or
fadd
cmp
add
add
call
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
jnp
add
add
cli
add
or
xor
jo
cdq
add
or
and
and
add
jb
xor
jo
imul
push
jge
add
add
add
add
add
cli
add
or
xor
jo
cdq
add
or
and
and
adc
add
xor
jo
imul
push
jge
add
add
add
add
add
cli
add
or
xor
jo
cdq
add
or
and
add
jb
xor
jo
imul
push
jge
add
add
add
add
add
cli
add
or
xor
jo
cdq
add
or
adc
sub
add
jb
xor
jo
imul
push
jge
add
add
adc
outs
movs
add
or
adc
add
add
add
add
add
add
imul
and
add
add
sbb
cmps
add
or
sbb
or
pop
adc
call
mov
sbb
cmps
add
or
sbb
cmps
add
or
sub
sub
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
add
stos
add
or
sbb
sub
jle
add
add
stos
add
or
add
add
test
push
aam
adc
jle
add
add
stos
add
or
add
add
test
push
aam
adc
adc
push
adc
adc
push
bound
pop
pusha
rcl
and
and
arpl
add
adc
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
jnp
add
add
mov
inc
adc
adc
sub
add
jnp
add
add
mov
pop
adc
add
jnp
add
add
adc
outs
mov
add
jge
add
add
add
add
add
jl
add
cdq
add
or
sub
sub
add
mov
add
jnp
add
add
div
add
cdq
add
or
sub
sub
or
add
mov
add
jb
add
jo
cmps
add
add
add
add
add
add
lods
add
add
pop
add
add
add
or
add
test
pop
add
add
xor
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
cmp
add
add
and
add
add
call
add
or
and
add
jae
add
or
popa
push
add
jae
add
or
or
adc
adc
adc
xchg
add
or
xchg
add
or
inc
adc
adc
sub
add
xor
jo
mov
add
outs
xchg
add
or
adc
add
lea
push
pop
lea
pop
adc
push
push
pushf
pop
lea
or
or
pop
pushf
jb
xor
jo
jnp
add
add
cli
add
or
loope
add
sub
add
adc
adc
push
adc
add
or
adc
push
adc
add
or
adc
push
adc
push
pop
sub
adc
push
adc
pop
sbb
xchg
add
or
adc
or
adc
add
imul
adc
push
push
adc
mov
xchg
add
or
push
adc
add
or
add
or
adc
add
add
push
push
adc
mov
cdq
add
or
ltr
pop
es
call
inc
adc
adc
cmp
push
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
adc
sub
add
jb
xor
jo
add
or
adc
adc
sbb
add
jnp
add
add
adc
add
add
sub
add
or
add
add
add
adc
adc
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
pop
adc
sub
add
or
add
adc
cmp
fimul
adc
sub
add
add
and
add
add
call
mov
and
add
add
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
jb
xor
jo
jnp
add
add
cli
add
or
loope
add
sub
add
jge
add
add
sbb
add
or
adc
add
add
add
add
add
add
imul
and
add
add
sbb
cmps
add
or
sbb
or
pop
adc
call
mov
sbb
cmps
add
or
sbb
cmps
add
or
and
and
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
movs
add
add
stos
add
or
sbb
sbb
imul
add
add
add
stos
add
or
add
add
test
push
aam
adc
add
stos
add
or
add
add
test
push
aam
adc
adc
ins
add
push
adc
adc
pusha
rcl
and
and
arpl
add
adc
imul
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
jnp
add
add
mov
inc
adc
and
and
add
add
mov
pop
adc
add
add
adc
or
add
add
add
add
add
jl
add
cdq
add
or
adc
sub
add
xor
jo
mov
add
jnp
add
add
div
add
cdq
add
or
daa
adc
sub
add
xor
jo
mov
add
jb
add
jo
cmps
add
add
add
add
sub
add
add
adc
add
pop
add
add
add
add
or
add
add
mov
adc
add
add
xor
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
cmp
add
add
and
add
add
call
add
or
and
add
jae
add
or
popa
push
add
jae
add
or
or
adc
adc
adc
xchg
add
or
xchg
add
or
inc
adc
adc
sub
add
xor
jo
mov
add
outs
xchg
add
or
adc
add
lea
push
pop
lea
pop
adc
push
push
pushf
pop
lea
or
or
pop
pushf
jb
xor
jo
jnp
add
add
cli
add
or
loope
add
sub
add
adc
adc
push
adc
add
or
adc
push
adc
add
or
adc
push
adc
push
pop
sub
adc
push
adc
pop
sbb
xchg
add
or
adc
or
adc
add
imul
adc
push
push
adc
mov
xchg
add
or
push
adc
add
or
add
or
adc
add
add
push
push
adc
mov
cdq
add
or
ltr
pop
es
call
inc
adc
adc
cmp
push
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
adc
sub
add
jb
xor
jo
add
or
adc
adc
sbb
add
jnp
add
add
adc
add
add
sub
add
or
add
add
add
adc
adc
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
pop
adc
sub
add
or
add
adc
cmp
fimul
adc
sub
add
add
and
add
add
call
mov
and
add
add
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
jb
xor
jo
jnp
add
add
cli
add
or
loope
add
sub
add
jge
add
add
sbb
add
or
adc
add
add
add
add
add
add
imul
and
add
add
sbb
cmps
add
or
sbb
or
pop
adc
call
mov
sbb
cmps
add
or
sbb
cmps
add
or
and
and
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
movs
add
add
stos
add
or
sbb
sbb
imul
add
add
add
stos
add
or
add
add
test
push
aam
adc
add
stos
add
or
add
add
test
push
aam
adc
adc
ins
add
push
adc
adc
pusha
rcl
and
and
arpl
add
adc
imul
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
jnp
add
add
mov
inc
adc
and
and
add
add
mov
pop
adc
add
add
adc
or
add
add
add
add
add
jl
add
cdq
add
or
adc
sub
add
xor
jo
mov
add
jnp
add
add
div
add
cdq
add
or
daa
adc
sub
add
xor
jo
mov
add
jb
add
jo
cmps
add
add
add
add
sub
add
add
adc
add
pop
add
add
add
add
or
add
add
mov
adc
add
add
xor
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
cmp
add
add
and
add
add
call
add
or
and
add
jae
add
or
popa
push
add
jae
add
or
or
adc
adc
adc
xchg
add
or
xchg
add
or
inc
adc
adc
sub
add
xor
jo
mov
add
outs
xchg
add
or
adc
add
lea
push
pop
lea
pop
adc
push
push
pushf
pop
lea
or
or
pop
pushf
jb
xor
jo
jnp
add
add
fwait
add
or
pushf
add
or
imul
push
adc
adc
push
adc
add
or
adc
push
adc
add
or
adc
push
adc
push
pop
sub
adc
push
adc
pop
sbb
xchg
add
or
adc
or
adc
add
imul
adc
push
push
adc
mov
xchg
add
or
push
adc
add
or
add
or
adc
add
add
push
push
adc
mov
cdq
add
or
ltr
pop
es
call
inc
adc
adc
cmp
push
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
adc
sub
add
jb
xor
jo
add
or
adc
adc
sbb
add
jnp
add
add
adc
add
add
sub
add
or
add
add
add
adc
adc
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
pop
adc
sub
add
or
add
adc
cmp
fimul
adc
sub
add
add
and
add
add
call
mov
and
add
add
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
jb
xor
jo
jnp
add
add
fwait
add
or
pushf
add
or
imul
push
jge
add
add
sbb
add
or
adc
add
add
add
add
add
add
imul
and
add
add
sbb
cmps
add
or
sbb
or
pop
adc
call
mov
sbb
cmps
add
or
sbb
cmps
add
or
and
and
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
movs
add
add
stos
add
or
sbb
sbb
imul
add
add
add
stos
add
or
add
add
test
push
aam
adc
add
stos
add
or
add
add
test
push
aam
adc
adc
ins
add
push
adc
adc
pusha
rcl
and
and
arpl
add
adc
imul
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
jnp
add
add
mov
inc
adc
and
and
add
add
mov
pop
adc
add
add
adc
or
add
add
add
add
add
jl
add
cdq
add
or
adc
sub
add
xor
jo
mov
add
jnp
add
add
div
add
cdq
add
or
daa
adc
sub
add
xor
jo
mov
add
jb
add
jo
cmps
add
add
add
sub
add
add
adc
add
pop
add
add
add
or
add
cmps
add
add
pop
add
add
xor
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
cmp
add
add
and
add
add
call
add
or
and
add
jae
add
or
popa
push
add
jae
add
or
or
adc
adc
adc
xchg
add
or
xchg
add
or
inc
adc
adc
sub
add
xor
jo
mov
add
outs
xchg
add
or
adc
add
lea
push
pop
lea
pop
adc
push
push
pushf
pop
lea
or
or
pop
pushf
jb
xor
jo
jnp
add
add
fwait
add
or
pushf
add
or
imul
push
adc
adc
push
adc
add
or
adc
push
adc
add
or
adc
push
adc
push
pop
sub
adc
push
adc
pop
sbb
xchg
add
or
adc
or
adc
add
imul
adc
push
push
adc
mov
xchg
add
or
push
adc
add
or
add
or
adc
add
add
push
push
adc
mov
cdq
add
or
ltr
pop
es
call
inc
adc
adc
cmp
push
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
adc
sub
add
jb
xor
jo
add
or
adc
adc
sbb
add
jnp
add
add
adc
add
add
sub
add
or
add
add
add
adc
adc
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
pop
adc
sub
add
or
add
adc
cmp
fimul
adc
sub
add
add
and
add
add
call
mov
and
add
add
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
jb
xor
jo
jnp
add
add
fwait
add
or
pushf
add
or
imul
push
jge
add
add
sbb
add
or
adc
add
add
add
add
add
add
imul
and
add
add
sbb
cmps
add
or
sbb
or
pop
adc
call
mov
sbb
cmps
add
or
sbb
cmps
add
or
and
and
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
movs
add
add
stos
add
or
sbb
sbb
imul
add
add
add
stos
add
or
add
add
test
push
aam
adc
add
stos
add
or
add
add
test
push
aam
adc
adc
ins
add
push
adc
adc
pusha
rcl
and
and
arpl
add
adc
imul
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
jnp
add
add
mov
inc
adc
and
and
add
add
mov
pop
adc
add
add
adc
or
add
add
add
add
add
jl
add
cdq
add
or
adc
sub
add
xor
jo
mov
add
jnp
add
add
div
add
cdq
add
or
daa
adc
sub
add
xor
jo
mov
add
jb
add
jo
cmps
add
add
add
sub
add
add
adc
add
pop
add
add
add
or
add
cmps
add
add
pop
add
add
xor
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
cmp
add
add
and
add
add
call
add
or
and
add
jae
add
or
popa
push
add
jae
add
or
or
adc
adc
adc
xchg
add
or
xchg
add
or
inc
adc
adc
sub
add
xor
jo
mov
add
outs
xchg
add
or
adc
add
lea
push
pop
lea
pop
adc
push
push
pushf
pop
lea
or
or
pop
pushf
jb
xor
jo
jnp
add
add
cli
add
or
loope
add
sub
add
adc
adc
push
adc
add
or
adc
push
adc
add
or
adc
push
adc
push
pop
sub
adc
push
adc
pop
sbb
xchg
add
or
adc
or
adc
add
imul
adc
push
push
adc
mov
xchg
add
or
push
adc
add
or
add
or
adc
add
add
push
push
adc
mov
cdq
add
or
ltr
pop
es
call
inc
adc
adc
cmp
push
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
adc
sub
add
jb
xor
jo
add
or
adc
adc
sbb
add
jnp
add
add
adc
add
add
sub
add
or
add
add
add
adc
adc
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
pop
adc
sub
add
or
add
adc
cmp
fimul
adc
sub
add
add
and
add
add
call
mov
and
add
add
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
jb
xor
jo
jnp
add
add
cli
add
or
loope
add
sub
add
jge
add
add
sbb
add
or
adc
add
add
add
add
add
add
imul
and
add
add
sbb
cmps
add
or
sbb
or
pop
adc
call
mov
sbb
cmps
add
or
sbb
cmps
add
or
and
and
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
movs
add
add
stos
add
or
sbb
sbb
imul
add
add
add
stos
add
or
add
add
test
push
aam
adc
add
stos
add
or
add
add
test
push
aam
adc
adc
ins
add
push
adc
adc
pusha
rcl
and
and
arpl
add
adc
imul
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
jnp
add
add
mov
inc
adc
and
and
add
add
mov
pop
adc
add
add
adc
or
add
add
add
add
add
jl
add
cdq
add
or
adc
sub
add
xor
jo
mov
add
jnp
add
add
div
add
cdq
add
or
daa
adc
sub
add
xor
jo
mov
add
jb
add
jo
cmps
add
add
add
add
sub
add
add
adc
add
pop
add
add
add
add
or
add
add
mov
adc
add
add
xor
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
cmp
add
add
and
add
add
call
add
or
and
add
jae
add
or
popa
push
add
jae
add
or
or
adc
adc
adc
xchg
add
or
xchg
add
or
inc
adc
or
or
add
mov
add
outs
xchg
add
or
adc
add
lea
push
pop
lea
pop
adc
push
push
pushf
pop
lea
or
or
pop
pushf
add
add
add
cli
add
or
or
or
xor
jo
cdq
add
or
or
add
xor
jo
or
jb
xor
jo
or
loope
add
sub
add
adc
adc
push
adc
add
or
adc
push
adc
add
or
adc
push
adc
push
pop
sub
adc
push
adc
pop
sbb
xchg
add
or
adc
push
add
add
add
imul
adc
push
push
adc
mov
xchg
add
or
push
adc
cmp
add
add
or
add
or
adc
add
add
adc
adc
mov
cdq
add
or
adc
fiadd
es
call
inc
adc
adc
cmp
push
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
add
or
xor
jo
add
or
push
adc
sub
add
add
add
add
adc
or
loope
add
jge
add
add
add
adc
pop
adc
pop
pop
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
adc
adc
pop
inc
adc
adc
sub
add
or
add
adc
cmp
fimul
adc
outs
sub
add
add
and
add
add
call
fadd
add
add
call
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
jnp
add
add
cli
add
or
sbb
sbb
xchg
xor
jo
cdq
add
or
and
add
xor
jo
sbb
add
xor
jo
sbb
loope
add
sub
add
jge
add
add
sbb
add
or
adc
add
add
add
add
add
add
imul
and
add
add
sbb
or
push
sub
add
adc
call
mov
sbb
cmps
add
or
push
sub
daa
adc
sub
sbb
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
pop
jle
add
add
stos
add
or
pop
adc
mov
stos
add
or
jle
add
add
stos
add
or
add
add
test
push
aam
adc
jle
add
add
stos
add
or
add
add
test
push
aam
adc
adc
sub
push
adc
adc
push
bound
and
adc
push
and
arpl
add
adc
outs
imul
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
jnp
add
add
mov
inc
adc
adc
sub
add
jnp
add
add
mov
pop
adc
add
jnp
add
add
adc
outs
mov
add
jge
add
add
add
add
add
jl
add
cdq
add
or
sub
sub
add
mov
add
jnp
add
add
div
add
cdq
add
or
sub
sub
add
mov
add
jb
add
jo
cmps
add
add
add
sub
add
add
add
pop
add
add
add
add
sub
or
add
rol
int
adc
add
add
xor
add
add
adc
push
xor
add
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jb
push
add
cdq
add
or
pop
cmp
add
add
and
add
add
call
add
or
and
add
jae
add
or
popa
push
add
jae
add
or
or
adc
adc
adc
xchg
add
or
xchg
add
or
inc
adc
adc
sub
add
xor
jo
mov
add
outs
xchg
add
or
adc
add
lea
push
pop
lea
pop
adc
push
push
pushf
pop
lea
or
or
pop
pushf
jb
xor
jo
jnp
add
add
fwait
add
or
pushf
add
or
imul
push
adc
adc
push
adc
add
or
adc
push
adc
add
or
adc
push
adc
push
pop
sub
adc
push
adc
pop
sbb
xchg
add
or
adc
or
adc
add
imul
adc
push
push
adc
mov
xchg
add
or
push
adc
add
or
add
or
adc
add
add
push
push
adc
mov
cdq
add
or
ltr
pop
es
call
inc
adc
adc
cmp
push
adc
sub
adc
adc
xchg
sub
add
or
mov
adc
adc
add
add
adc
adc
sub
add
jb
xor
jo
add
or
adc
adc
sbb
add
jnp
add
add
adc
add
add
sub
add
or
add
add
add
adc
adc
adc
adc
adc
das
or
adc
or
add
add
adc
adc
sub
pop
adc
adc
pop
adc
sub
add
or
add
adc
cmp
fimul
adc
sub
add
add
and
add
add
call
mov
and
add
add
call
add
or
sbb
sbb
jnp
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
outs
fwait
add
or
adc
and
add
outs
pushf
add
or
adc
push
outs
popf
add
or
adc
push
outs
sahf
add
or
adc
pop
outs
lahf
add
or
adc
adc
push
ins
add
push
jae
add
or
add
or
add
sbb
add
or
add
adc
and
jb
push
add
mov
add
add
jb
xor
jo
jnp
add
add
fwait
add
or
pushf
add
or
imul
push
jge
add
add
sbb
add
or
adc
add
add
add
add
add
add
imul
and
add
add
sbb
cmps
add
or
sbb
or
pop
adc
call
mov
sbb
cmps
add
or
sbb
cmps
add
or
and
and
test
add
adc
ins
inc
add
adc
adc
sub
cwde
add
or
jle
add
add
test
push
aam
nop
add
add
sbb
movs
add
add
stos
add
or
sbb
sbb
imul
add
add
add
stos
add
or
add
add
test
push
aam
adc
add
stos
add
or
add
add
test
push
aam
adc
adc
ins
add
push
adc
adc
pusha
rcl
and
and
arpl
add
adc
imul
or
add
add
movs
add
add
push
lods
add
or
add
xor
add
jnp
add
add
mov
inc
adc
and
and
add
add
mov
pop
adc
add
add
adc
or
add
add
add
add
add
jl
add
cdq
add
or
adc
sub
add
xor
jo
mov
add
jnp
add
add
div
add
cdq
add
or
daa
adc
sub
add
xor
jo
mov
add
jb
add
jo
cmps
add
add
add
sub
add
add
adc
add
pop
add
add
add
or
add
cmps
add
add
pop
add
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
push
add
add
adc
rol
add
add
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
add
adc
add
add
jnp
add
add
adc
add
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
sub
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
jae
add
or
add
or
add
add
add
jae
add
test
jnp
add
add
outs
mov
add
add
add
dec
add
add
lods
add
add
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
jae
add
or
add
or
add
add
add
inc
add
add
xchg
add
add
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
popf
xor
jo
add
or
add
add
add
outs
cmps
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
stos
add
add
dec
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
retf
xor
jo
add
or
add
add
add
outs
das
add
or
add
add
add
pop
adc
aaa
add
or
add
or
add
add
add
push
add
test
jnp
add
add
xchg
add
pop
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
adc
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
xor
jo
and
xor
jo
outs
test
add
add
add
pop
sub
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
jns
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
add
or
add
or
add
add
add
test
test
jnp
add
add
stos
add
add
cmp
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
lds
jo
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
xor
jo
and
xor
jo
outs
test
add
add
add
pop
adc
add
or
add
or
add
add
add
icebp
xor
jo
test
jnp
add
add
jns
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
add
test
jnp
add
add
jae
add
or
add
or
add
add
add
inc
add
add
xchg
add
add
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
pop
xor
add
or
add
add
add
outs
cmps
add
or
add
add
add
outs
das
add
or
add
add
add
pusha
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
adc
aaa
add
or
add
or
add
add
add
sbb
add
add
jnp
add
add
mov
jae
add
or
add
or
add
add
add
or
sbb
add
add
jnp
add
add
push
xor
add
or
add
add
add
and
add
or
add
add
add
outs
das
add
or
add
add
add
outs
test
add
add
jnp
add
add
adc
jbe
aaa
add
or
add
or
add
add
add
retf
jo
test
jnp
add
add
mov
adc
add
or
add
or
add
add
add
or
add
or
add
add
add
fidiv
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
mov
add
jae
add
or
add
or
add
add
add
push
aaa
add
test
jnp
add
add
and
add
and
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
sub
add
add
or
add
add
add
mov
add
push
jae
add
or
add
or
add
add
add
pop
aaa
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
pop
outs
sbb
add
add
jnp
add
add
mov
add
das
jae
add
or
add
or
add
add
add
ins
aaa
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
push
outs
sbb
add
add
jnp
add
add
mov
add
pop
push
jae
add
or
add
or
add
add
add
xor
jo
test
jnp
add
add
xor
add
or
add
or
add
add
add
adc
or
add
add
add
mov
add
pop
das
jae
add
or
add
or
add
add
add
xchg
aaa
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
adc
sbb
add
add
jnp
add
add
push
add
add
push
jae
add
or
add
or
add
add
add
test
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
adc
add
or
add
add
add
push
add
add
das
jae
add
or
add
or
add
add
add
mov
test
jnp
add
add
xor
add
or
add
or
add
add
add
adc
add
or
add
add
add
adc
push
jae
add
or
add
or
add
add
add
shl
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
adc
add
or
add
add
add
adc
das
jae
add
or
add
or
add
add
add
in
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
adc
add
or
add
add
add
fiadd
add
pop
push
jae
add
or
add
or
add
add
add
clc
aaa
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
movq
add
or
add
add
add
fiadd
add
pop
das
jae
add
or
add
or
add
add
add
or
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
push
outs
sbb
add
add
jnp
add
add
lahf
add
add
push
jae
add
or
add
or
add
add
add
and
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
or
or
add
add
add
lahf
add
add
das
jae
add
or
add
or
add
add
add
xor
add
test
jnp
add
add
xor
add
or
add
or
add
add
add
or
sbb
add
add
jnp
add
add
fs
push
jae
add
or
add
or
add
add
add
dec
cmp
jo
test
jnp
add
add
xor
add
or
add
or
add
add
add
or
add
or
add
add
add
fs
das
jae
add
or
add
or
add
add
add
pop
cmp
jo
test
jnp
add
add
xor
add
or
add
or
add
add
add
or
add
or
add
add
add
outs
das
add
or
add
add
add
pop
push
jae
add
or
add
or
add
add
add
sub
add
test
jnp
add
add
pop
pop
or
or
add
or
add
add
add
or
add
or
add
add
add
ins
cmp
jo
add
or
add
add
add
outs
das
add
or
add
add
add
pop
xor
add
or
add
or
add
add
add
pop
pop
add
test
jnp
add
add
pop
pop
or
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
nop
cmp
jo
add
or
add
add
add
outs
das
add
or
add
add
add
mov
jae
add
or
add
or
add
add
add
sti
sbb
jo
test
jnp
add
add
xor
or
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
or
add
add
or
add
add
add
outs
das
add
or
add
add
add
mov
add
pop
sbb
add
or
add
or
add
add
add
lea
add
test
jnp
add
add
and
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
cli
pop
add
add
or
add
add
add
outs
das
add
or
add
add
add
push
add
add
sbb
add
or
add
or
add
add
add
fwait
pop
add
test
jnp
add
add
xor
or
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
call
add
or
add
add
add
outs
das
add
or
add
add
add
adc
add
pop
sbb
add
or
add
or
add
add
add
xor
test
jnp
add
add
inc
pop
or
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
aam
add
add
or
add
add
add
outs
das
add
or
add
add
add
fiadd
add
pop
sbb
add
or
add
or
add
add
add
outs
sbb
jo
test
jnp
add
add
xor
or
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
les
add
add
or
add
add
add
outs
das
add
or
add
add
add
lahf
add
add
sbb
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
sub
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
mov
add
add
or
add
add
add
outs
das
add
or
add
add
add
popw
sbb
add
or
add
or
add
add
add
out
sbb
jo
test
jnp
add
add
sub
or
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
test
add
add
or
add
add
add
outs
das
add
or
add
add
add
outs
test
add
add
jnp
add
add
sub
add
pop
adc
aaa
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
(bad)
cmp
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
das
add
or
add
add
add
outs
test
add
add
jnp
add
add
adc
adc
aaa
add
or
add
or
add
add
add
hlt
cmp
jo
test
jnp
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
or
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
sub
add
pop
sub
add
or
add
or
add
add
add
cmp
jo
test
jnp
add
add
or
cmp
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
dec
cmp
jo
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
cmp
jo
outs
test
add
add
add
pop
adc
add
or
add
or
add
add
add
loopne
add
test
jnp
add
add
jns
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
sub
add
or
add
or
add
add
add
hlt
cmp
jo
test
jnp
add
add
or
cmp
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
or
add
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
cmp
jo
outs
test
add
add
add
pop
adc
add
or
add
or
add
add
add
cmp
jo
test
jnp
add
add
jns
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
js
add
test
jnp
add
add
inc
add
add
xchg
add
add
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
xor
add
or
add
add
add
outs
cmps
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
bound
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
stos
add
add
inc
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
mov
add
or
add
add
add
pop
and
or
add
or
add
add
add
in
add
test
jnp
add
add
jb
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
stos
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
adc
add
or
add
or
add
add
add
idiv
add
test
jnp
add
add
stos
add
add
inc
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
or
add
add
or
add
add
add
pop
adc
aaa
add
or
add
or
add
add
add
cmp
add
test
jnp
add
add
jb
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
stos
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
mov
aaa
add
or
add
or
add
add
add
dec
cmp
jo
test
jnp
add
add
stos
add
add
inc
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
bound
add
add
or
add
add
add
pop
adc
aaa
add
or
add
or
add
add
add
jae
add
test
jnp
add
add
jb
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
stos
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
xchg
cmp
jo
test
jnp
add
add
jae
add
or
add
or
add
add
add
inc
add
add
xchg
add
add
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
cmps
cmp
jo
add
or
add
add
add
outs
cmps
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
mov
add
jae
add
or
add
or
add
add
add
mov
test
jnp
add
add
iret
add
add
cmp
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
int3
cmp
jo
add
or
add
add
add
pop
adc
or
add
or
add
add
add
fdivr
add
test
jnp
add
add
ret
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
ss
add
or
add
or
add
add
add
out
cmp
jo
test
jnp
add
add
enter
pop
cmp
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
add
jo
add
or
add
add
add
pop
adc
or
add
or
add
add
add
push
cmp
jo
test
jnp
add
add
mov
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
das
add
or
add
add
add
adc
adc
add
or
add
or
add
add
add
sub
jo
test
jnp
add
add
jno
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
cmp
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
pop
cmp
jo
test
jnp
add
add
inc
add
add
xchg
add
add
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
jo
add
add
or
add
add
add
outs
cmps
add
or
add
add
add
outs
das
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
adc
sbb
jae
add
or
add
or
add
add
add
adc
rol
add
jae
add
or
add
or
add
add
add
fistp
add
test
jnp
add
add
or
add
pop
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
mov
jo
add
or
add
add
add
outs
das
add
or
add
add
add
adc
scas
add
add
add
or
add
or
add
add
add
sub
add
or
add
add
add
inc
add
add
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
cmp
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
pop
jae
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
stos
add
add
inc
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
retf
cmp
add
or
add
add
add
pop
adc
aaa
add
or
add
or
add
add
add
(bad)
cmp
add
or
add
add
add
jb
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
stos
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
push
jae
add
or
add
or
add
add
add
inc
daa
add
test
jnp
add
add
iret
add
add
cmp
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
adc
add
add
or
add
add
add
jp
add
pop
adc
aaa
add
or
add
or
add
add
add
in
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
daa
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jb
add
jae
add
or
add
or
add
add
add
pop
adc
or
add
or
add
add
add
and
jo
test
jnp
add
add
ins
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
sub
add
test
jnp
add
add
inc
add
add
xchg
add
add
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
cmp
add
or
add
add
add
outs
cmps
add
or
add
add
add
jmp
add
jae
add
or
add
or
add
add
add
and
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
or
sbb
add
add
jnp
add
add
popa
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
je
add
jae
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
xor
add
pop
jle
aaa
add
or
add
or
add
add
add
jno
add
test
jnp
add
add
add
add
pop
xor
add
or
add
or
add
add
add
or
add
or
add
add
add
outs
cmp
add
add
jnp
add
add
xchg
add
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
iret
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
or
or
add
add
add
loope
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jl
add
jae
add
or
add
or
add
add
add
outs
stos
add
or
add
add
add
lea
push
pop
sahf
and
add
sahf
jae
add
or
add
or
add
add
add
pop
adc
aaa
add
or
add
or
add
add
add
lea
push
and
add
add
add
add
or
add
or
add
add
add
lea
push
and
add
add
add
add
or
add
or
add
add
add
in
add
test
jnp
add
add
stos
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
lea
push
and
add
add
add
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
xor
add
pop
dec
jae
add
or
add
or
add
add
add
or
add
test
jnp
add
add
add
add
pop
xor
add
or
add
or
add
add
add
or
add
or
add
add
add
outs
cmp
add
add
jnp
add
add
and
add
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
pop
aas
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
or
sbb
add
add
jnp
add
add
loope
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jnp
add
jae
add
or
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
aas
add
and
aas
add
and
aas
add
outs
test
add
add
add
pop
adc
add
or
add
or
add
add
add
fistp
add
test
jnp
add
add
stos
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
xor
add
pop
adc
add
or
add
or
add
add
add
repz
add
test
jnp
add
add
add
add
pop
xor
add
or
add
or
add
add
add
or
add
or
add
add
add
outs
cmp
add
add
jnp
add
add
or
jo
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
or
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
or
add
or
add
add
add
loope
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jp
add
jae
add
or
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
push
lea
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
outs
test
add
add
add
pop
adc
add
or
add
or
add
add
add
ins
inc
add
test
jnp
add
add
stos
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
and
add
add
add
or
add
or
add
add
add
add
add
add
jnp
add
add
add
add
pop
xor
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
xchg
inc
add
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
test
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
or
add
or
add
add
add
loope
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jns
add
jae
add
or
add
or
add
add
add
outs
stos
add
or
add
add
add
lea
push
pop
sahf
and
add
sahf
jae
add
or
add
or
add
add
add
pop
adc
aaa
add
or
add
or
add
add
add
lea
push
and
add
sahf
and
add
sahf
jae
add
or
add
or
add
add
add
lea
push
pop
sbb
or
add
or
add
add
add
fild
jo
test
jnp
add
add
stos
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
lea
push
pop
sbb
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
and
add
or
add
or
add
add
add
stc
inc
add
test
jnp
add
add
add
add
pop
xor
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
cmovno
jo
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
push
sbb
jo
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
or
add
or
add
add
add
loope
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
js
add
jae
add
or
add
or
add
add
add
outs
stos
add
or
add
add
add
lea
push
pop
sahf
and
add
sahf
jae
add
or
add
or
add
add
add
pop
adc
aaa
add
or
add
or
add
add
add
lea
push
and
add
sahf
and
add
sahf
jae
add
or
add
or
add
add
add
lea
push
pop
sbb
or
add
or
add
add
add
push
inc
add
test
jnp
add
add
stos
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
lea
push
pop
sbb
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
jle
aaa
add
or
add
or
add
add
add
outs
inc
add
test
jnp
add
add
add
add
pop
xor
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
test
jo
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
sub
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
loope
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
ja
add
jae
add
or
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
sbb
add
add
and
add
and
add
and
add
and
add
and
add
and
add
outs
test
add
add
add
pop
adc
add
or
add
or
add
add
add
in
add
test
jnp
add
add
stos
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
dec
jae
add
or
add
or
add
add
add
stc
inc
add
test
jnp
add
add
add
add
pop
xor
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
cmovb
jo
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
sbb
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
loope
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jbe
add
jae
add
or
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
cmp
jo
and
inc
add
and
inc
add
outs
test
add
add
add
pop
adc
add
or
add
or
add
add
add
pop
inc
add
test
jnp
add
add
stos
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
adc
add
or
add
or
add
add
add
outs
inc
add
test
jnp
add
add
add
add
pop
xor
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
test
jo
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
mov
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
loope
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jne
add
jae
add
or
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
sbb
and
add
and
add
and
add
and
add
outs
test
add
add
add
pop
adc
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
stos
add
add
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
leave
inc
add
test
jnp
add
add
jae
add
or
add
or
add
add
add
inc
add
add
xchg
add
add
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
fild
jo
add
or
add
add
add
outs
cmps
add
or
add
add
add
sbb
adc
add
or
add
or
add
add
add
pop
sbb
jo
test
jnp
add
add
mov
add
pop
cmp
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
in
inc
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jae
add
jae
add
or
add
or
add
add
add
sbb
fs
add
or
add
or
add
add
add
popf
sbb
jo
test
jnp
add
add
mov
add
pop
cmp
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jno
add
jae
add
or
add
or
add
add
add
xchg
add
add
mov
add
jae
add
or
add
or
add
add
add
and
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
sub
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
jo
add
jae
add
or
add
or
add
add
add
icebp
add
add
mov
add
jae
add
or
add
or
add
add
add
jge
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
outs
add
push
jae
add
or
add
or
add
add
add
xor
mov
add
add
and
add
inc
and
add
jae
add
or
pop
add
or
add
sub
add
add
and
add
and
add
add
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
add
jb
and
jo
sub
add
je
add
add
bound
add
add
jb
push
add
test
jb
sbb
jo
add
or
add
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
outs
push
add
add
add
imul
jnp
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
add
add
imul
jnp
add
add
outs
push
add
add
add
imul
jnp
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
add
add
outs
push
add
sub
add
add
inc
push
and
add
or
sub
add
adc
add
mov
add
add
adc
adc
or
add
sub
add
add
add
mov
add
add
test
add
outs
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
add
push
jge
add
add
add
push
add
push
jae
add
or
jne
add
add
add
push
add
push
jae
add
or
jbe
add
add
and
add
add
inc
pop
xchg
add
or
add
add
jnp
add
add
inc
add
add
or
add
or
add
add
add
outs
xchg
add
or
sub
xor
add
add
xor
add
add
jnp
add
add
outs
xchg
add
or
jae
add
push
or
add
add
add
jb
add
jo
jb
inc
add
jae
add
or
add
adc
add
push
outs
js
add
add
adc
jae
add
or
pop
add
pop
jae
add
or
or
adc
or
add
or
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
push
jae
add
or
add
add
jnp
add
add
mov
add
or
add
or
add
inc
or
add
jae
add
or
mov
add
es
inc
add
add
jno
add
adc
add
adc
add
or
add
or
adc
or
add
or
or
adc
jae
add
or
or
adc
adc
or
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
push
jae
add
or
add
add
jnp
add
add
mov
add
adc
or
add
inc
or
add
jae
add
or
mov
add
es
adc
add
add
add
outs
xchg
add
or
add
sub
add
inc
lods
add
add
add
push
add
add
add
add
add
add
add
add
add
daa
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jnp
add
add
or
add
add
cmp
add
add
add
or
add
add
add
sbb
add
mov
add
xor
add
add
or
push
or
cmp
add
pop
outs
repnz
or
outs
repz
or
inc
add
cdq
add
or
or
outs
hlt
add
or
or
add
or
pop
or
add
adc
add
pop
or
sub
add
or
add
or
add
add
push
push
inc
adc
adc
sub
add
add
push
adc
adc
jb
inc
add
test
pop
outs
clc
add
or
add
fiadd
add
add
add
adc
add
add
add
add
add
xor
add
add
adc
push
or
push
or
cmp
add
pop
outs
repnz
or
outs
repz
or
inc
add
cdq
add
or
or
outs
hlt
add
or
or
add
or
pop
or
add
adc
add
pop
or
sub
add
or
add
or
add
add
push
push
inc
adc
adc
sub
add
add
push
adc
adc
jb
inc
add
test
pop
outs
clc
add
or
add
fiadd
add
add
add
adc
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
push
outs
mov
add
add
add
mov
add
push
outs
mov
add
outs
mov
mov
add
push
outs
mov
sub
add
xor
add
add
add
add
add
jnp
add
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
push
outs
mov
add
add
add
mov
add
push
outs
mov
add
outs
mov
mov
add
push
outs
mov
sub
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
push
add
add
add
add
add
or
jae
add
or
jae
add
or
mov
ror
add
add
sub
add
jae
add
or
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
add
adc
add
adc
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
mov
mov
add
add
add
outs
mov
push
sub
add
outs
rol
or
push
jb
inc
add
rol
or
add
add
add
mov
add
push
outs
ret
or
pop
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
pop
push
outs
les
add
add
jb
inc
add
rol
or
pop
jb
inc
add
lds
add
add
jnp
add
add
mov
or
outs
mov
jnp
add
add
or
add
or
add
or
add
add
add
jae
add
test
jnp
add
add
fld
add
and
add
add
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
add
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
mov
mov
add
add
add
outs
mov
or
sbb
add
outs
rol
or
or
inc
add
rol
or
add
add
add
mov
add
or
add
or
or
sbb
jo
add
add
push
sbb
jae
add
or
add
or
or
outs
les
add
add
jb
inc
add
rol
or
or
inc
add
lds
add
add
jnp
add
add
mov
or
outs
mov
jnp
add
add
or
add
add
or
add
or
add
add
add
popf
inc
add
test
jnp
add
add
fld
add
and
add
add
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
stos
inc
add
add
or
add
add
add
mov
add
and
add
add
add
or
add
or
add
add
add
and
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
rol
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
test
add
jae
add
or
add
or
add
add
add
mov
add
and
add
add
add
or
add
or
add
add
add
jge
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
rol
jo
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
xchg
add
jae
add
or
add
or
add
add
add
mov
add
and
add
add
add
or
add
or
add
add
add
popf
sbb
jo
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
test
add
jae
add
or
add
or
add
add
add
mov
add
and
add
add
add
or
add
or
add
add
add
in
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
jecxz
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
xchg
add
jae
add
or
add
or
add
add
rol
add
jae
add
or
pop
add
or
add
sub
add
add
sub
add
push
outs
add
or
add
lock
add
xor
add
jae
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
add
add
add
add
sub
add
je
add
add
bound
add
add
and
add
add
pop
add
add
add
or
add
or
add
push
add
test
sbb
add
or
add
inc
add
add
or
add
sub
add
or
add
add
add
imul
jnp
add
add
imul
push
sub
add
add
adc
add
jnp
add
add
adc
adc
adc
add
sub
add
add
add
xchg
add
push
add
test
add
outs
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
add
push
jge
add
add
add
push
lea
add
jae
add
or
jne
add
add
add
push
mov
add
jae
add
or
jbe
add
add
add
xor
add
add
add
or
add
or
add
add
add
jb
add
jo
jb
dec
add
jae
add
or
add
adc
adc
js
add
add
adc
jns
add
adc
int
add
jb
dec
add
outs
outs
add
or
jnp
add
add
outs
add
or
add
or
jno
add
add
add
or
push
add
push
or
add
or
add
or
adc
outs
sub
add
add
add
or
adc
or
fadd
fimul
adc
sub
add
add
push
jae
add
or
add
add
jnp
add
add
mov
add
or
add
or
add
inc
or
add
jae
add
or
mov
add
sub
add
add
add
add
jb
or
add
add
add
add
or
add
sub
ja
add
cmp
add
add
add
or
add
add
cmp
add
add
add
or
add
add
add
adc
add
inc
add
add
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
push
outs
mov
add
add
add
mov
add
push
outs
mov
add
outs
mov
mov
add
push
outs
mov
sub
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
push
add
add
add
adc
jae
add
or
jae
add
or
ror
add
add
sub
add
jae
add
or
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
adc
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
mov
mov
add
add
add
outs
mov
push
sub
add
outs
rol
or
push
jb
inc
add
rol
or
add
add
add
mov
add
push
outs
ret
or
pop
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
pop
push
outs
les
add
add
jb
inc
add
rol
or
pop
jb
inc
add
lds
add
add
jnp
add
add
mov
or
outs
mov
jnp
add
add
or
mov
aaa
add
or
add
or
add
add
add
cli
dec
add
test
jnp
add
add
fld
add
and
add
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
or
jo
add
or
add
add
add
leave
add
or
add
or
add
add
add
sahf
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
outs
add
or
add
add
add
mov
test
jnp
add
add
outs
sbb
add
add
jnp
add
add
inc
mov
add
jae
add
or
add
or
add
add
add
nop
add
add
add
add
or
add
or
add
add
add
and
add
test
jnp
add
add
push
pop
sbb
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
or
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
pop
add
jae
add
or
add
or
add
add
add
outs
das
add
or
add
add
add
outs
push
add
or
add
add
add
push
pop
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
sub
jo
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
nop
add
add
push
add
add
add
or
add
or
add
add
add
popf
sbb
jo
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
nop
add
push
jae
add
or
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
nop
add
add
icebp
add
add
add
or
add
or
add
add
add
jge
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
jecxz
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
xchg
add
push
jae
add
or
add
or
add
add
loopne
and
add
jae
add
or
pop
add
or
add
sub
add
add
sub
add
push
outs
add
or
add
lock
add
xor
add
jae
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
jb
sbb
jo
add
adc
sbb
jae
add
or
add
or
add
jb
and
jo
sub
add
je
add
add
bound
add
add
and
add
add
pop
add
add
add
or
add
or
add
inc
add
test
sbb
add
or
add
dec
add
add
or
add
sub
add
or
add
add
add
imul
push
sub
add
add
sub
add
add
add
xor
add
add
adc
adc
sbb
add
sub
add
add
add
fwait
add
push
add
test
add
outs
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
add
push
jge
add
add
add
push
xchg
add
push
jae
add
or
jne
add
add
add
push
xchg
add
push
jae
add
or
jbe
add
add
cmps
add
or
add
add
add
add
aam
add
sub
add
or
add
or
sub
add
sbb
add
stc
add
add
add
adc
add
push
or
add
add
add
sub
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
add
add
pop
jge
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
push
adc
sub
add
sbb
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
pop
adc
sub
add
sbb
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
sbb
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
sbb
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
sbb
sbb
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
sbb
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
or
add
jge
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
add
pop
or
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
push
adc
sub
add
pop
or
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
movups
sub
add
pop
or
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
adc
adc
add
pop
or
sbb
add
add
jnp
add
add
test
add
sub
sbb
add
mov
jb
dec
add
jae
add
or
add
jae
add
or
adc
adc
outs
js
add
add
adc
jae
add
or
adc
adc
outs
int
add
jb
dec
add
jnp
add
add
test
add
outs
into
add
or
adc
outs
int
add
jb
dec
add
jnp
add
add
test
add
outs
into
add
or
adc
jae
add
or
adc
adc
adc
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
push
jae
add
or
add
add
jnp
add
add
mov
add
adc
mov
add
add
push
inc
or
lea
add
sub
sub
add
add
add
add
mov
push
call
add
dec
add
add
add
xor
or
cmp
add
add
add
or
add
add
cmp
add
add
add
or
add
add
add
adc
add
inc
add
add
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
push
outs
mov
add
add
add
mov
add
push
outs
mov
add
outs
mov
mov
add
push
outs
mov
sub
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
push
add
add
adc
jae
add
or
jae
add
or
ror
add
add
sub
add
jae
add
or
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
adc
add
add
jnp
add
add
sbb
add
outs
sbb
add
add
add
mov
mov
add
add
add
outs
mov
push
sub
add
outs
rol
or
push
jb
inc
add
rol
or
add
add
add
mov
add
push
outs
ret
or
pop
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
pop
push
outs
les
add
add
jb
inc
add
rol
or
pop
jb
inc
add
lds
add
add
jnp
add
add
mov
or
outs
mov
jnp
add
add
or
push
jae
add
or
add
or
add
add
add
jg
add
test
jnp
add
add
fld
add
and
add
add
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
(bad)
dec
add
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
dec
add
and
dec
add
and
dec
add
outs
test
add
add
add
pop
pop
and
add
or
add
or
add
add
add
icebp
xor
jo
test
jnp
add
add
mov
add
pop
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
xchg
add
push
jae
add
or
add
or
add
add
add
outs
das
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
adc
sbb
jae
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
int
add
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
adc
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
outs
test
add
add
add
or
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
inc
pop
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
nop
add
add
push
add
add
add
or
add
or
add
add
add
popf
sbb
jo
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
cwde
add
push
jae
add
or
add
or
add
add
rol
add
jae
add
or
pop
add
or
add
sub
add
add
sub
add
push
outs
add
or
add
lock
add
xor
add
jae
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
add
jb
and
jo
sub
add
je
add
add
bound
add
add
and
add
add
pop
add
add
add
or
add
or
add
inc
add
test
sbb
add
or
add
dec
add
add
or
add
sub
add
or
add
add
add
imul
push
sub
add
add
sub
add
add
add
add
xor
add
add
adc
adc
sub
add
sub
add
add
add
mov
sub
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
cmps
add
or
add
add
add
add
aam
add
sub
add
or
add
or
jb
add
jo
jb
dec
add
jae
add
or
add
jae
add
or
adc
adc
outs
js
add
add
adc
jae
add
or
adc
adc
jae
add
or
adc
adc
adc
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
adc
jl
add
push
outs
jge
add
jb
sub
jo
jle
add
sub
add
or
add
add
xchg
jo
add
jl
add
push
outs
jge
add
jb
sub
jo
jle
add
sub
add
sub
add
or
add
or
add
add
add
xchg
jo
add
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
sub
add
or
add
or
add
add
add
add
jo
enter
outs
add
or
jb
dec
add
push
jae
add
or
pop
or
add
or
adc
adc
outs
js
add
add
push
adc
jae
add
or
adc
adc
jp
add
adc
pop
outs
jnp
add
es
or
adc
or
fadd
fimul
adc
sub
add
add
add
or
adc
outs
sub
add
add
jb
push
add
or
add
or
or
jae
add
or
push
add
push
outs
js
add
add
or
push
jae
add
or
pop
add
pop
jae
add
or
sbb
adc
adc
outs
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
push
add
or
add
or
or
or
add
or
sbb
adc
outs
js
add
add
or
sbb
add
or
sbb
adc
jp
add
adc
or
add
or
add
or
adc
or
fadd
fimul
adc
sub
add
add
add
or
adc
outs
sub
add
add
adc
outs
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
sbb
sbb
add
or
push
adc
sub
add
or
sbb
sbb
rol
add
sub
add
sub
add
pop
sub
add
add
ficom
adc
add
push
add
mov
add
add
add
add
rol
add
sub
add
or
and
and
add
add
or
add
add
add
jl
add
push
outs
jge
add
jb
sub
jo
jle
add
sub
add
or
and
pop
outs
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
and
or
add
or
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
and
and
and
mov
and
sub
add
and
rol
add
adc
sub
adc
adc
sub
add
or
and
or
adc
adc
mov
daa
adc
pop
push
sub
daa
adc
sub
sub
daa
and
add
jae
add
or
mov
sub
sub
pop
sub
adc
sbb
sub
adc
outs
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
sub
and
pop
sub
add
add
add
xchg
jo
pop
outs
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
sub
add
or
add
or
add
add
add
xchg
jo
pop
outs
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
sub
add
or
add
or
add
add
add
xchg
jo
es
add
or
loope
add
outs
add
or
add
add
add
xchg
jo
and
aam
add
sub
add
or
add
or
add
add
add
jno
add
sub
aam
add
jb
push
add
sub
aam
add
sub
add
or
add
or
add
add
add
jnp
add
sub
aam
add
sub
add
or
add
or
add
add
add
jnp
add
and
or
loope
add
outs
add
or
add
adc
sub
jb
push
add
mov
add
add
push
add
or
jno
add
adc
add
adc
js
add
add
or
sub
or
add
outs
int
add
jb
dec
add
add
aam
add
mov
into
add
or
adc
jae
add
or
das
add
das
adc
or
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
or
fadd
add
or
or
outs
jge
add
jb
push
add
jle
add
sub
add
or
add
or
(bad)
add
or
xor
xor
add
or
or
outs
jge
add
jb
push
add
jle
add
sub
add
or
jle
add
add
pop
sub
add
add
sub
add
add
add
adc
jle
add
add
pop
sub
add
add
adc
or
outs
jge
add
jb
push
add
jle
add
sub
add
or
add
or
(bad)
add
or
xor
xor
add
or
or
outs
jge
add
jb
push
add
jle
add
sub
add
or
jle
add
add
pop
sub
add
add
sub
add
add
add
adc
jle
add
add
pop
sub
add
add
add
add
add
jnp
add
and
aam
add
sub
add
or
add
or
add
add
add
jnp
add
add
add
aam
add
sub
add
or
add
or
add
adc
xor
jb
push
add
mov
add
add
push
add
push
jae
add
or
invd
jae
add
or
xor
adc
outs
js
add
add
push
adc
jae
add
or
xor
adc
int
add
jb
dec
add
add
aam
add
mov
into
add
or
adc
int
add
jb
push
add
add
(bad)
add
or
pop
mov
into
add
or
adc
jp
add
adc
movq
add
es
or
adc
or
fadd
fimul
adc
sub
add
add
add
or
adc
outs
sub
add
add
add
adc
outs
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
add
or
(bad)
add
or
adc
sub
add
movq
or
outs
jge
add
jb
push
add
jle
add
sub
add
or
jle
add
add
pop
sub
add
add
sub
add
add
add
adc
jle
add
add
pop
sub
add
add
adc
outs
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
add
or
(bad)
add
or
aaa
adc
sub
add
movq
or
outs
jge
add
jb
push
add
jle
add
sub
add
or
jle
add
add
pop
sub
add
add
sub
add
add
add
adc
jle
add
add
pop
sub
add
add
add
add
add
jnp
add
daa
add
add
aam
add
sub
add
or
add
or
add
add
add
jnp
add
sub
add
aam
add
sub
add
or
add
or
add
adc
cmp
jb
push
add
mov
add
add
inc
adc
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
sub
add
xor
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
sub
add
movs
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
adc
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
push
add
fld
add
jmp
add
inc
add
add
pop
add
adc
add
pop
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
data16
add
pop
add
or
add
add
add
add
add
mov
add
loopne
add
or
add
add
add
add
pop
add
inc
add
add
or
add
add
add
add
add
xor
add
add
cmp
add
jae
add
push
or
add
add
add
sub
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
push
adc
sub
add
and
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
pop
adc
sub
add
and
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
and
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
and
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
and
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
and
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
or
sbb
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
add
and
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
push
adc
sub
add
or
add
jnp
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
movups
sub
add
or
add
jnp
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
adc
adc
add
or
add
jnp
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
adc
adc
add
or
and
add
add
jnp
add
add
test
add
sub
sub
add
mov
jb
push
add
jae
add
or
add
jae
add
or
adc
adc
outs
js
add
add
adc
jae
add
or
adc
adc
outs
int
add
jb
dec
add
and
add
test
add
outs
into
add
or
adc
outs
int
add
jb
dec
add
jnp
add
add
test
add
outs
into
add
or
adc
jae
add
or
adc
adc
add
jnp
add
es
or
adc
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
jb
push
add
add
add
jge
add
add
jae
add
or
adc
js
add
add
add
add
or
push
add
push
jae
add
or
pop
add
pop
push
jnp
add
add
jnp
add
es
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
or
fadd
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
add
or
(bad)
add
or
sbb
sbb
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jle
add
add
pop
sub
add
add
sub
add
add
add
adc
jle
add
add
pop
sub
add
add
adc
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
add
or
(bad)
add
or
sbb
sbb
add
add
jl
add
push
outs
jge
add
jb
push
add
jle
add
sub
add
or
jle
add
add
pop
sub
add
add
sub
add
add
add
adc
jle
add
add
pop
sub
add
add
add
inc
sgdtd
push
jae
add
or
mov
add
es
adc
sbb
jb
push
add
mov
add
add
add
add
add
add
jg
add
push
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
and
add
or
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
push
add
add
and
ror
add
add
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
sub
add
add
jnp
add
add
outs
cmps
add
or
add
add
add
test
add
pop
adc
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
outs
test
add
add
add
mov
add
and
add
add
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
inc
pop
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
das
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
adc
sbb
jae
add
or
add
or
add
add
add
mov
add
and
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
int
add
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
dec
add
and
dec
add
and
dec
add
outs
test
add
add
add
aad
add
and
add
add
add
or
add
or
add
add
add
icebp
xor
jo
test
jnp
add
add
mov
add
pop
adc
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
popf
add
push
jae
add
or
add
or
add
add
add
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
add
inc
inc
push
sbb
jae
add
or
add
or
add
add
add
or
sbb
add
or
add
or
add
add
add
test
test
jnp
add
add
aas
add
add
hlt
add
add
add
or
add
or
add
add
add
push
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
and
jo
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
inc
jae
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
push
push
add
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
sub
add
or
add
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
inc
jae
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
mov
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
sub
add
or
add
add
add
push
add
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
push
jae
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
jns
add
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
sub
add
or
add
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
push
jae
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
das
and
jo
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
daa
outs
sbb
add
add
jnp
add
add
mov
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
and
aaa
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
fistp
add
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
leave
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
and
aaa
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
sbb
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
or
add
add
add
(bad)
push
add
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
and
aaa
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
cld
push
add
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
and
aaa
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
retf
sbb
jo
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
or
add
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
and
aaa
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
sbb
add
add
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
leave
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
and
aaa
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
fistp
add
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
inc
pop
add
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
outs
jae
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
gs
jo
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
outs
jae
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
jmp
add
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
pop
outs
sbb
add
add
jnp
add
add
js
add
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
pop
jae
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
sub
add
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
push
outs
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
leave
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
pop
jae
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
pop
pop
add
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
sbb
or
add
add
add
pushf
pop
add
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
xor
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
sti
sbb
jo
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
sbb
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
leave
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
xor
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
lea
add
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
rcr
jo
add
or
add
add
add
adc
add
or
add
add
add
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
add
inc
inc
push
sbb
jae
add
or
add
or
add
add
add
mov
add
pop
sbb
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
aas
add
add
ins
jae
add
or
add
or
add
add
add
pop
outs
sbb
add
add
jnp
add
add
outs
cmp
add
add
jnp
add
add
cli
pop
add
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
inc
jae
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
and
jo
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
inc
jae
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
ret
and
jo
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
pop
outs
sbb
add
add
jnp
add
add
xor
jo
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
xor
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
mov
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
push
outs
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
leave
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
xor
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
dec
pop
add
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
sbb
or
add
add
add
dec
pop
add
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
sbb
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
jge
add
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
sbb
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
sbb
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
push
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
js
add
add
or
add
add
add
adc
add
or
add
add
add
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
add
inc
inc
push
sbb
jae
add
or
add
or
add
add
add
or
inc
add
add
add
or
add
or
add
add
add
hlt
cmp
jo
test
jnp
add
add
aas
add
add
push
jae
add
or
add
or
add
add
add
and
add
or
add
add
add
outs
cmp
add
add
jnp
add
add
pushf
pop
add
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
sub
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
mov
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
sub
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
pop
sbb
jo
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
pop
outs
sbb
add
add
jnp
add
add
xor
jo
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
pop
jae
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
and
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
push
outs
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
leave
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
pop
jae
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
(bad)
pop
add
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
sbb
or
add
add
add
dec
pop
add
add
or
add
add
add
adc
add
or
add
add
add
movq
add
or
add
add
add
add
or
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
adc
add
inc
inc
push
sbb
jae
add
or
add
or
add
add
add
mov
add
and
add
add
add
or
add
or
add
add
add
cmp
jo
test
jnp
add
add
aas
add
add
ins
jae
add
or
add
or
add
add
add
and
add
or
add
add
add
outs
cmp
add
add
jnp
add
add
(bad)
pop
add
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
inc
jae
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
sub
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
and
add
or
add
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
inc
jae
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
out
sbb
jo
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
pop
outs
sbb
add
add
jnp
add
add
xor
jo
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
xor
add
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
mov
add
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
push
outs
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
leave
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
xor
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
outs
sbb
jo
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
sbb
or
add
add
add
dec
pop
add
add
or
add
add
add
adc
add
or
add
add
add
outs
das
add
or
add
add
add
and
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
sbb
push
sbb
jae
add
or
add
or
add
add
add
aam
add
pop
sbb
or
add
or
add
add
add
aaa
pop
adc
xor
add
outs
xlat
add
or
add
add
add
fs
adc
xor
add
outs
xor
add
add
jnp
add
add
xor
test
jnp
add
add
fs
adc
xor
add
outs
sbb
add
add
jnp
add
add
sbb
sbb
add
add
jnp
add
add
inc
outs
pop
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
pop
sbb
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
into
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
fwait
pop
add
test
jnp
add
add
into
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
js
add
add
or
add
add
add
adc
add
or
add
add
add
adc
add
add
push
sbb
jae
add
or
add
or
add
add
add
jge
add
and
aaa
add
or
add
or
add
add
add
and
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
and
add
or
add
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
sahf
add
push
jae
add
or
add
or
add
add
rol
add
jae
add
or
pop
add
or
add
sub
add
add
sub
add
push
outs
add
or
add
repnz
add
fiadd
add
jae
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
push
jb
and
jo
sub
add
je
add
add
bound
add
add
and
add
add
add
add
jae
add
or
add
or
add
push
add
test
sbb
add
or
add
pop
add
add
or
add
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
outs
push
add
add
add
push
add
add
push
sub
add
add
sub
add
add
adc
add
push
add
add
add
add
and
add
and
add
adc
jg
add
add
adc
jg
add
add
adc
jg
add
add
adc
jg
add
add
adc
jg
add
add
adc
jg
add
add
adc
sub
xor
add
add
add
adc
adc
push
add
add
sub
add
add
add
movs
add
push
add
test
add
outs
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
push
add
add
adc
ror
add
sub
add
or
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
sub
add
add
jnp
add
add
add
or
add
or
add
add
add
outs
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
or
push
jae
add
or
add
or
add
add
add
or
add
test
jnp
add
add
and
add
and
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
outs
das
add
or
add
add
add
sbb
add
outs
sbb
add
add
add
outs
push
add
or
add
add
add
adc
add
xor
push
sbb
jae
add
or
add
or
add
add
add
push
pop
or
aaa
add
or
add
or
add
add
add
mov
adc
xor
add
outs
xlat
add
or
add
add
add
cli
add
add
adc
xor
add
outs
xor
add
add
jnp
add
add
jns
add
test
jnp
add
add
cli
add
add
adc
xor
add
outs
sbb
add
add
jnp
add
add
or
add
or
add
add
add
mov
add
add
or
add
add
add
and
add
or
add
add
add
loope
add
and
add
add
add
or
add
or
add
add
add
and
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
or
add
or
add
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
mov
jae
add
outs
sbb
add
add
jnp
add
add
outs
fiadd
add
add
jnp
add
add
push
pop
xor
add
or
add
or
add
add
add
ss
add
test
jnp
add
add
outs
fild
add
add
jnp
add
add
cli
add
add
mov
xor
add
outs
sbb
add
add
jnp
add
add
or
sbb
add
add
jnp
add
add
jb
pop
add
fadd
add
outs
add
or
add
add
rol
add
jae
add
or
pop
add
or
add
sub
add
add
sub
add
push
outs
add
or
add
cmp
add
and
add
jae
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
add
jb
and
jo
sub
add
je
add
add
bound
add
add
and
add
and
add
jae
add
or
add
or
add
push
add
test
jb
pop
add
add
or
add
add
add
outs
push
add
add
add
push
add
add
push
sub
add
add
adc
add
dec
add
add
add
adc
adc
pop
add
add
sub
add
add
add
stos
add
push
add
test
add
outs
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
add
xor
add
add
cmp
add
add
add
jo
jb
pop
add
jae
add
or
jae
add
or
add
or
pop
or
add
or
add
adc
fild
add
es
or
adc
sub
add
add
add
or
sub
or
add
or
fdiv
pop
add
mov
add
jl
add
add
add
add
sbb
add
add
add
add
add
sbb
sub
add
add
xor
add
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
add
ins
add
add
ror
sub
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
sub
add
add
jnp
add
add
outs
das
add
or
add
add
add
outs
push
add
or
add
add
add
or
or
add
or
add
or
add
add
add
or
add
or
add
add
add
fld
add
pop
ss
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
test
add
or
add
add
add
dec
add
add
daa
jae
add
or
add
or
add
add
add
and
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
push
pop
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
test
add
jae
add
or
add
or
add
add
add
call
aaa
add
or
add
or
add
add
add
jge
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
pop
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
cmps
add
push
jae
add
or
add
or
add
add
rol
add
jae
add
or
pop
add
or
add
sub
add
add
and
add
add
pop
jae
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
sub
add
add
add
add
and
add
add
sub
add
add
add
add
and
add
add
push
jb
and
jo
sub
add
je
add
add
bound
add
add
and
add
add
add
or
add
or
add
pop
add
test
jb
pop
add
add
or
add
sub
add
add
sub
add
add
add
add
xor
add
add
adc
adc
pusha
add
add
sub
add
add
add
mov
add
add
test
add
outs
xchg
add
outs
xchg
add
je
add
add
push
outs
mov
add
jb
add
jo
mov
add
add
test
add
push
outs
mov
add
add
add
add
push
jge
add
add
add
push
scas
add
push
jae
add
or
jne
add
add
add
push
scas
add
push
jae
add
or
jbe
add
add
cmps
add
or
add
add
add
add
aam
add
sub
add
or
add
or
sub
add
sbb
add
enter
cmp
add
add
add
jo
jb
pop
add
jae
add
or
jae
add
or
add
or
pop
or
add
or
add
adc
int
add
jb
dec
add
outs
outs
add
or
jnp
add
add
outs
add
or
add
or
jno
add
add
add
jp
add
adc
outs
jnp
add
es
or
adc
or
fadd
fimul
adc
sub
add
add
add
or
sub
or
add
or
fadd
jnp
add
add
outs
fld
add
add
jnp
add
add
fiadd
add
sub
add
outs
fild
add
add
jnp
add
add
loopne
add
sub
add
outs
fild
add
add
jnp
add
add
outs
loope
add
add
adc
sub
add
add
inc
add
or
push
outs
inc
add
or
loop
add
add
adc
adc
adc
pop
pop
adc
adc
add
add
add
inc
add
or
add
or
pop
inc
or
or
add
add
inc
add
or
jnp
add
add
inc
add
or
add
or
pop
outs
inc
add
or
adc
add
or
push
adc
sub
add
add
add
inc
add
or
or
add
or
add
or
or
jnp
add
add
inc
add
or
or
add
or
outs
loop
add
add
jnp
add
add
inc
add
or
or
add
or
or
add
or
add
or
pop
adc
pop
pop
adc
adc
add
add
add
inc
add
or
add
or
add
or
or
add
add
bound
or
add
add
add
add
or
add
sbb
jne
add
add
add
sbb
add
out
add
cmp
sub
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
add
add
or
add
jge
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
add
add
sbb
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
push
adc
sub
add
sbb
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
pop
adc
sub
add
sbb
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
sbb
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
sbb
pop
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
sbb
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
add
push
jge
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
or
or
add
or
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
or
add
pop
or
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
push
adc
sub
add
pop
or
add
add
add
add
add
test
add
outs
lods
add
or
dec
add
cdq
add
or
movups
sub
add
pop
or
pop
add
add
add
jnp
add
add
test
add
sub
pop
add
add
mov
jb
popa
add
jae
add
or
add
adc
add
adc
add
or
or
adc
add
or
adc
adc
outs
int
add
jb
dec
add
jnp
add
add
test
add
outs
into
add
or
adc
outs
int
add
jb
dec
add
jnp
add
add
test
add
outs
into
add
or
adc
jae
add
or
adc
adc
or
add
or
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
or
adc
outs
sub
add
add
add
add
add
outs
fld
add
add
jnp
add
add
fiadd
add
sub
add
outs
fild
add
add
jnp
add
add
loopne
add
sub
add
outs
fild
add
add
jnp
add
add
outs
loope
add
add
adc
sub
add
add
inc
add
or
adc
add
or
loop
add
add
adc
adc
adc
pop
adc
adc
add
add
add
inc
add
or
add
or
pop
inc
adc
add
add
add
inc
add
or
jnp
add
add
inc
add
or
add
or
pop
outs
inc
add
or
adc
add
or
push
adc
sub
add
add
add
inc
add
or
push
outs
inc
add
or
add
or
pop
add
add
add
inc
add
or
push
outs
inc
add
or
outs
loop
add
add
jnp
add
add
inc
add
or
push
outs
inc
add
or
pop
outs
inc
add
or
add
push
adc
adc
pop
adc
adc
add
add
add
inc
add
or
add
or
add
sbb
sbb
add
add
add
jle
or
add
add
add
add
add
add
daa
add
add
cmp
add
add
add
or
add
add
cmp
add
add
add
or
add
add
add
adc
add
sub
add
adc
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
sub
add
add
add
sub
add
or
sub
adc
push
add
or
add
add
add
or
jae
add
or
jae
add
or
in
add
or
or
add
in
add
adc
or
push
jae
add
or
pop
ror
add
add
sub
add
jae
add
or
or
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
jnp
add
add
adc
add
add
add
adc
add
add
jnp
add
add
adc
add
adc
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
push
jae
add
or
add
or
add
add
add
jae
add
test
jnp
add
add
outs
mov
add
add
add
repnz
add
das
add
add
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
int3
add
push
outs
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
jae
add
or
add
or
add
add
add
jmp
add
jae
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
push
arpl
jo
add
or
add
add
add
outs
cmps
add
or
add
add
add
popf
add
add
cld
add
add
add
or
add
or
add
add
add
and
add
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
xor
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
mov
add
jae
add
or
add
or
add
add
add
outs
out
add
add
jnp
add
add
outs
call
add
add
add
outs
jmp
add
add
add
outs
jmp
leave
add
or
add
or
add
add
add
outs
jmp
add
add
jnp
add
add
sbb
add
outs
in
add
or
pop
pop
and
add
or
pop
sub
add
outs
fild
add
add
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
pop
sub
add
or
add
or
pop
sub
add
or
add
or
pop
sub
add
or
add
or
pop
pop
outs
cmc
add
or
add
add
add
outs
test
or
add
add
add
outs
test
pop
adc
add
or
or
clc
add
or
add
or
or
sbb
jo
add
add
push
sbb
jae
add
or
add
or
or
dec
add
or
add
or
or
icebp
add
or
add
or
or
repz
or
add
or
or
outs
cmc
add
or
add
add
add
outs
stc
add
or
add
add
add
and
aaa
add
or
add
or
add
add
add
outs
arpl
jo
test
jnp
add
add
outs
cli
add
or
or
adc
add
or
or
sti
add
or
add
or
or
sbb
jo
add
add
push
sbb
jae
add
or
add
or
or
out
add
or
add
or
or
icebp
add
or
add
or
or
repz
or
add
or
or
outs
cmc
add
or
add
add
add
outs
cld
add
or
add
add
add
xchg
add
add
arpl
add
jae
add
or
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
outs
das
add
or
add
add
add
outs
push
add
or
add
add
add
pop
or
add
or
add
or
add
add
add
or
add
or
add
add
add
je
(bad)
xor
add
outs
sbb
add
add
jnp
add
add
outs
sbb
add
add
jnp
add
add
sub
jo
add
or
add
add
add
cwde
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
outs
add
or
add
add
add
mov
test
jnp
add
add
outs
sbb
add
add
jnp
add
add
inc
lods
add
push
jae
add
or
add
or
add
add
add
int3
add
push
outs
add
or
add
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
inc
add
or
jnp
add
add
and
add
add
jnp
add
add
pop
push
jae
add
or
add
or
add
add
add
add
test
jnp
add
add
jae
add
or
add
or
add
add
add
jmp
add
jae
add
or
add
or
add
add
add
outs
movs
add
or
add
add
add
mov
jo
add
or
add
add
add
outs
cmps
add
or
add
add
add
cdq
add
add
clc
add
add
add
or
add
or
add
add
add
popf
sbb
jo
test
jnp
add
add
dec
pop
pop
jae
add
or
add
or
add
add
add
or
sbb
add
add
jnp
add
add
or
add
add
or
add
add
add
outs
sbb
add
add
jnp
add
add
inc
mov
add
jae
add
or
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
adc
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
and
dec
add
outs
test
add
add
add
pop
and
add
or
add
or
add
add
add
mov
add
test
jnp
add
add
inc
pop
adc
or
add
or
add
add
add
or
add
or
add
add
add
outs
das
add
or
add
add
add
pusha
add
or
add
or
add
add
add
outs
push
add
or
add
add
add
adc
add
adc
sbb
jae
add
or
add
or
add
add
add
pop
or
or
add
or
add
add
add
sub
test
jnp
add
add
mov
add
pop
adc
add
or
add
or
add
add
add
or
add
or
add
add
add
int
add
add
or
add
add
add
outs
cmps
add
or
add
add
add
test
add
pop
or
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
dec
add
and
dec
add
and
dec
add
outs
test
add
add
add
push
pop
and
add
or
add
or
add
add
add
icebp
xor
jo
test
jnp
add
add
mov
add
pop
adc
or
add
or
add
add
add
or
add
or
add
add
add
inc
lods
add
push
jae
add
or
add
or
add
add
add
outs
out
add
add
jnp
add
add
outs
call
add
add
add
outs
jmp
add
add
add
outs
jmp
sub
add
or
add
or
add
add
add
add
jmp
add
add
jnp
add
add
sbb
add
outs
in
add
or
adc
add
or
adc
or
add
or
adc
jo
add
add
push
sbb
jae
add
or
add
or
adc
or
add
or
adc
or
add
or
adc
or
add
or
adc
add
add
jnp
add
add
add
or
add
add
add
outs
test
push
pop
adc
add
or
adc
sub
add
or
add
or
adc
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
adc
sub
add
outs
lock
or
adc
sub
add
or
add
or
adc
sub
add
or
add
or
adc
sbb
add
or
add
add
add
push
outs
stc
add
or
add
add
add
pop
dec
jae
add
or
add
or
add
add
add
lods
arpl
jo
test
jnp
add
add
outs
cli
add
or
adc
pop
adc
add
or
adc
sub
add
or
add
or
adc
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
adc
sub
add
or
add
or
adc
sub
add
or
add
or
adc
sub
add
or
add
or
adc
pop
outs
cmc
add
or
add
add
add
pop
outs
cld
add
or
add
add
add
test
add
and
add
add
add
or
add
or
add
add
add
outs
sbb
add
add
and
add
inc
and
add
jae
add
or
pop
add
or
add
sub
add
add
sub
add
outs
sbb
add
lock
add
xor
add
jae
add
or
popa
add
or
add
inc
add
or
jnp
add
add
and
add
add
jb
sbb
jo
add
add
push
sbb
jae
add
or
add
or
add
or
and
jo
sub
add
je
add
add
bound
add
add
and
add
add
pop
add
add
add
or
add
or
add
push
add
test
sbb
add
or
add
arpl
jo
add
or
add
sub
add
or
add
add
add
outs
push
add
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
imul
jnp
add
add
outs
push
add
add
add
push
add
add
jnp
add
add
imul
push
sub
add
add
add
xor
add
add
add
lea
push
jb
add
jo
and
add
or
add
or
add
jo
and
sbb
dec
add
or
add
jo
and
add
or
add
or
or
push
jb
add
jo
sub
add
es
sub
or
sub
add
or
jb
arpl
jo
mov
pushf
add
or
inc
add
add
add
add
xor
add
add
add
add
add
add
adc
add
or
or
adc
jb
add
sub
sbb
sub
add
add
add
add
or
add
pop
add
add
xor
add
add
add
add
add
add
adc
add
or
ficom
or
jb
add
sub
sbb
or
add
sub
add
add
add
add
or
add
pop
add
add
xor
jge
add
inc
add
adc
adc
(bad)
adc
add
adc
sub
add
push
es
add
add
sbb
add
or
push
inc
or
cmp
add
add
jb
add
jo
inc
add
add
add
jl
add
add
push
add
add
adc
inc
add
sub
add
or
inc
add
add
add
jl
add
add
pop
add
add
adc
inc
add
sub
add
or
inc
add
add
add
jl
add
add
sbb
add
xlat
add
add
pushf
add
or
inc
add
add
add
jl
add
add
sbb
add
xlat
add
add
pushf
add
or
inc
add
add
add
jl
add
add
sbb
add
xlat
add
add
pushf
add
or
inc
add
add
add
jl
add
add
sbb
add
xlat
add
add
pushf
add
or
inc
add
add
add
jl
add
add
sbb
xlat
add
add
pushf
add
or
inc
add
add
add
jl
add
add
push
add
add
xlat
add
add
pushf
add
or
inc
add
add
add
jl
add
add
pop
add
add
xlat
add
add
pushf
add
or
inc
add
add
data16
jl
add
add
and
add
xlat
add
add
pushf
add
or
inc
add
add
data16
jl
add
add
and
add
xlat
add
add
pushf
add
or
inc
add
add
data16
jl
add
add
and
add
xlat
add
add
pushf
add
or
inc
add
add
data16
jl
add
add
and
add
xlat
add
add
pushf
add
or
inc
add
add
add
jl
add
add
and
add
xlat
add
add
pushf
add
or
inc
add
add
add
jl
add
add
and
xlat
add
add
pushf
add
or
inc
add
add
jl
add
add
push
add
add
or
adc
adc
add
sub
add
add
ficom
adc
add
add
push
add
sbb
sbb
add
or
pop
add
or
push
adc
sub
add
sub
add
push
add
fadd
jnp
add
add
pop
sub
adc
sub
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
xor
add
add
inc
add
adc
add
or
outs
pusha
add
or
add
or
inc
sub
push
or
sub
add
add
add
mov
adc
add
or
add
add
push
fld
add
outs
lods
add
or
loope
add
sub
add
or
add
or
adc
add
sub
sbb
sub
add
adc
add
add
add
add
pop
add
add
xor
add
add
add
adc
jle
add
or
add
add
adc
add
adc
add
add
sub
sbb
or
add
sub
add
add
add
add
pop
add
add
pop
add
add
xor
add
add
inc
add
adc
jb
add
jo
add
jnp
add
add
add
add
pop
add
add
add
or
and
add
add
add
add
inc
or
sub
add
add
add
and
add
add
add
add
inc
or
jb
add
add
ficom
adc
jb
add
add
mov
add
add
sbb
adc
sub
add
add
add
pop
add
add
pop
add
add
xor
pusha
add
add
add
add
or
add
add
or
add
or
inc
sub
push
or
sub
add
add
add
mov
pop
sub
add
or
push
(bad)
push
fld
add
outs
lods
add
or
loope
add
sub
add
or
add
or
adc
add
sub
sbb
sub
adc
add
add
add
add
pop
add
add
xor
add
add
inc
add
adc
add
push
or
add
add
add
add
add
add
add
cmc
add
add
add
add
sub
add
jge
add
add
adc
add
jnp
add
add
adc
adc
sub
add
sub
jl
add
add
push
add
or
sbb
add
and
add
inc
add
adc
add
add
push
add
push
or
or
adc
jb
add
sub
sbb
sub
adc
add
add
add
add
add
xor
add
add
add
add
add
jb
push
add
or
add
adc
add
add
sub
sbb
add
add
adc
add
add
add
adc
adc
add
add
xor
add
add
add
add
add
pop
sub
add
and
add
rcr
push
add
or
push
jle
add
or
sldt
push
or
sub
add
push
sbb
add
or
push
jle
add
or
sldt
push
or
add
adc
jb
add
sub
sbb
or
add
add
add
add
cmp
add
add
xor
add
add
inc
add
adc
add
add
mov
sbb
add
or
push
(bad)
push
fld
add
outs
lods
add
or
loope
add
sub
add
or
push
or
adc
jb
add
sub
sbb
sub
adc
add
add
add
add
add
xor
inc
add
add
add
add
add
mov
pop
sub
add
push
or
push
(bad)
push
fld
add
outs
lods
add
or
loope
add
sub
add
or
push
or
adc
jb
add
sub
sbb
sub
add
adc
add
add
add
xor
adc
add
add
xor
add
add
dec
add
adc
add
push
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sub
add
or
add
add
adc
add
jnp
add
add
adc
adc
sub
add
push
jl
add
add
or
add
sub
xor
add
add
add
add
add
add
sbb
add
es
or
adc
add
add
sub
sbb
sub
adc
add
add
add
add
add
xor
add
add
dec
add
adc
and
call
sbb
jo
or
add
or
mov
inc
or
sub
add
push
imul
add
es
sub
add
add
sub
add
or
push
sub
add
or
jae
add
push
sub
add
or
add
ss
xor
add
xor
add
add
pop
add
or
add
add
xor
add
add
add
add
add
add
add
inc
or
sub
add
imul
add
sub
add
or
add
or
add
or
pop
xor
add
jle
add
add
sub
or
add
add
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
add
xor
add
adc
add
and
add
dec
add
adc
sub
add
push
jb
imul
add
adc
add
or
je
add
add
sub
pop
sub
add
adc
add
and
add
dec
add
adc
sub
add
push
jb
imul
add
adc
add
or
je
add
add
sub
pop
sub
add
adc
add
and
add
dec
add
adc
sub
add
push
jb
imul
add
adc
add
or
je
add
add
sub
pop
sub
add
adc
add
and
add
dec
add
adc
sub
add
push
jb
imul
add
adc
add
or
je
add
add
sub
pop
sub
add
adc
add
and
add
dec
add
adc
sub
add
push
jb
imul
add
adc
add
or
je
add
add
sub
pop
sub
add
adc
add
and
add
dec
add
adc
sub
add
push
jb
imul
add
adc
add
or
je
add
add
sub
pop
sub
add
adc
add
or
add
dec
add
adc
jle
add
add
sub
push
sub
adc
add
push
add
add
add
add
jb
imul
add
movs
icebp
add
add
sub
push
sub
add
imul
add
add
add
or
sub
adc
add
push
add
add
add
add
jb
imul
add
je
add
add
sub
push
sub
add
adc
sub
(bad)
add
push
sub
add
or
add
xor
sub
jae
add
push
xor
add
push
add
or
add
sub
outs
repz
or
add
or
add
or
add
xor
add
pop
add
push
add
adc
add
add
add
lea
add
add
add
add
or
add
add
add
mov
add
jnp
add
add
sbb
add
outs
add
or
add
add
add
push
add
add
jnp
add
add
push
add
add
outs
les
add
adc
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
push
add
add
jnp
add
add
push
add
add
outs
les
add
adc
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
push
add
add
jnp
add
add
push
add
add
outs
les
add
adc
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
push
add
add
jnp
add
add
push
add
add
outs
les
add
adc
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
push
add
add
jnp
add
add
push
add
add
outs
les
add
adc
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
jo
add
jnp
add
add
push
add
add
outs
les
add
sub
add
or
outs
sbb
add
add
jnp
add
add
outs
add
add
jnp
add
add
push
add
add
outs
les
add
adc
add
ins
add
or
push
jo
jnp
add
add
push
add
add
outs
les
add
adc
add
ins
add
or
push
jo
aad
add
outs
add
or
add
add
add
push
add
add
jnp
add
add
push
add
add
outs
les
add
adc
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
jb
add
jnp
add
add
cmp
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
ins
add
add
jnp
add
add
cmp
sbb
add
imul
add
add
jnp
add
add
jnp
add
add
push
add
add
or
add
or
sbb
add
pop
or
add
or
mov
sub
add
jnp
add
add
jnp
add
add
sub
add
pop
sub
add
add
jnp
add
add
push
add
add
jnp
add
add
sub
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
pop
add
add
jnp
add
add
push
add
add
or
les
add
adc
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
push
add
add
jnp
add
add
push
add
add
or
or
add
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
push
add
add
or
add
or
jnp
add
add
push
add
add
movq
add
or
add
or
rol
add
sub
add
add
add
js
add
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
jbe
add
sub
add
or
outs
sbb
add
add
jnp
add
add
add
add
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
jb
add
jo
cdq
add
or
add
add
jnp
add
add
rol
add
jge
add
add
cmp
add
add
add
jnp
add
add
add
add
jl
add
push
outs
jge
add
jb
(bad)
jo
jle
add
sub
add
or
add
add
jnp
add
add
push
add
add
adc
add
or
sbb
add
adc
add
add
add
cmp
add
rol
add
sub
add
or
pop
adc
sub
add
jnp
add
add
rol
add
jge
add
add
sub
add
jnp
add
add
push
add
add
add
cmp
add
mov
fs
add
or
rol
add
jge
add
add
add
jnp
add
add
jnp
add
add
cmp
add
pop
sub
add
add
jnp
add
add
jae
add
lea
add
add
add
add
push
add
add
adc
add
or
add
add
ins
add
or
push
jo
and
add
add
cmp
add
add
add
push
jo
sub
add
or
add
or
add
add
add
jne
add
jnp
add
add
push
add
add
adc
add
or
sbb
add
imul
add
add
jnp
add
add
pop
add
add
outs
mov
add
jb
pop
add
add
or
add
pop
add
add
outs
mov
add
jb
pop
add
add
or
add
adc
adc
sub
add
jnp
add
add
pop
add
add
jb
pop
add
pop
add
or
add
jnp
add
add
pop
add
add
outs
mov
add
jb
pop
add
cdq
add
or
or
or
add
add
add
loopne
add
jb
push
jo
loope
add
jae
add
or
add
or
add
add
add
pop
add
add
outs
mov
add
jb
pop
add
cdq
add
or
jnp
add
add
push
add
add
or
or
add
or
rol
add
pop
adc
adc
sub
add
add
add
add
add
loopne
add
jb
push
jo
loope
add
jae
add
or
add
or
add
add
add
pop
add
add
outs
mov
add
jb
pop
add
cdq
add
or
jnp
add
add
push
add
add
or
or
add
or
(bad)
add
or
or
or
add
add
add
loopne
add
jb
push
jo
loope
add
jae
add
or
add
or
add
add
add
bound
add
jnp
add
add
add
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
pusha
add
add
jnp
add
add
aas
add
add
ret
jo
and
add
outs
add
or
add
add
add
pop
add
add
jnp
add
add
inc
add
add
ins
add
or
push
jo
loope
add
outs
add
or
add
add
add
pop
add
add
jnp
add
add
inc
add
add
ret
jo
and
add
outs
add
or
add
add
add
inc
add
add
ins
add
or
add
add
add
inc
add
add
jnp
add
add
inc
add
add
rol
add
adc
add
ins
add
or
jnp
add
add
inc
add
add
ins
add
or
add
cmp
add
js
add
add
or
or
or
dec
add
jnp
add
add
mov
add
add
add
and
sbb
imul
mov
and
add
and
sbb
and
jo
sub
add
outs
add
or
add
add
cs
add
push
or
add
imul
outs
and
add
sub
add
imul
outs
and
add
sub
add
imul
outs
and
add
sub
add
imul
outs
and
add
sub
add
imul
outs
and
add
sub
add
imul
outs
and
add
sub
add
adc
jo
and
add
sub
add
push
jo
and
add
sub
add
adc
push
add
add
add
jnp
add
add
add
add
jnp
add
add
xor
add
ins
add
or
and
jo
loope
add
outs
add
or
add
add
add
push
add
lea
push
add
add
add
xor
ins
add
or
push
jo
and
add
add
sub
add
ins
add
or
imul
mov
xchg
add
add
cli
(bad)
jo
enter
mov
imul
mov
or
add
or
sub
sub
add
add
mov
add
pop
imul
add
add
add
loope
add
outs
add
or
sub
sub
add
xor
jp
add
push
add
adc
jnp
add
add
push
sub
sub
sub
add
adc
call
fwait
add
add
push
sub
sub
add
add
jge
add
add
jnp
add
add
sbb
add
inc
or
sub
add
jnp
add
add
jnp
add
add
adc
add
jge
add
add
add
add
add
sbb
add
or
int
add
add
jnp
add
add
sbb
add
pusha
add
or
inc
or
add
add
jnp
add
add
and
add
outs
add
add
sbb
add
inc
adc
add
dec
add
add
add
add
add
jge
add
add
jnp
add
add
jge
add
add
add
add
add
push
xor
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
mov
add
outs
and
add
add
jnp
add
add
and
add
popf
add
add
add
or
add
add
add
and
add
jnp
add
add
sbb
add
jnp
add
add
jnp
add
add
mov
daa
add
or
push
adc
sub
add
or
or
add
add
adc
jge
add
add
adc
add
add
push
adc
sub
fld
jnp
add
add
push
add
add
adc
add
add
add
push
sub
add
or
pop
adc
(bad)
adc
add
pop
jge
add
add
add
add
add
lahf
add
add
jnp
add
add
sub
add
add
jnp
add
add
jge
add
add
jnp
add
add
inc
adc
adc
sub
add
pop
jge
add
add
add
adc
popf
add
add
adc
sahf
add
add
jnp
add
add
or
or
add
jnp
add
add
mov
add
adc
add
jnp
add
add
jnp
add
add
push
outs
xor
add
add
sub
add
jnp
add
add
add
push
add
add
add
or
or
add
add
(bad)
sbb
sbb
or
pop
(bad)
jge
add
add
jl
add
add
or
sub
add
add
adc
pop
(bad)
jge
add
add
jl
add
add
sub
sub
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
sub
add
xor
jp
add
push
add
adc
jnp
add
add
push
sub
sub
sub
add
adc
cmps
add
add
adc
cmps
add
add
push
sub
sub
add
add
jge
add
add
jnp
add
add
sbb
add
inc
or
sub
add
jnp
add
add
jnp
add
add
adc
add
jge
add
add
add
add
add
sbb
add
or
int
add
add
jnp
add
add
sbb
add
pusha
add
or
inc
or
add
add
jnp
add
add
and
add
outs
add
add
sbb
add
inc
adc
add
dec
add
add
add
add
add
jge
add
add
jnp
add
add
jge
add
add
add
add
add
push
xor
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
mov
add
outs
and
add
add
jnp
add
add
and
add
test
add
or
add
add
add
and
add
jnp
add
add
sbb
add
jnp
add
add
jnp
add
add
mov
daa
add
or
push
adc
sub
add
or
or
add
add
adc
jge
add
add
adc
add
add
push
adc
sub
add
sub
fld
jnp
add
add
push
add
add
adc
add
add
add
push
sub
add
or
pop
adc
(bad)
adc
add
pop
jge
add
add
add
add
add
stos
add
add
jnp
add
add
sub
add
add
jnp
add
add
jge
add
add
jnp
add
add
inc
adc
adc
sub
add
pop
jge
add
add
add
adc
test
adc
stos
add
add
jnp
add
add
or
or
add
jnp
add
add
mov
add
adc
jnp
add
add
jnp
add
add
push
outs
xor
add
add
sub
add
jnp
add
add
add
push
add
add
add
or
or
add
add
(bad)
sbb
sbb
or
pop
(bad)
jge
add
add
jl
add
add
or
sub
add
add
adc
pop
(bad)
jge
add
add
jl
add
add
sub
sub
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
xor
add
adc
jnp
add
add
push
sub
sub
sub
add
adc
mov
add
push
sub
sub
add
add
add
add
sbb
add
inc
or
sub
add
jnp
add
add
jnp
add
add
adc
add
jge
add
add
add
add
add
sbb
add
pusha
add
or
inc
or
cmp
add
add
add
add
add
and
add
outs
add
add
sbb
add
inc
or
add
add
add
add
add
and
add
outs
add
add
sbb
add
jge
add
add
pop
lea
mov
add
jnp
add
add
push
pushf
add
push
add
adc
add
jge
add
add
jnp
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
imul
add
jnp
add
add
jge
add
add
jae
add
or
add
add
add
add
add
push
xor
add
jae
add
or
add
add
jnp
add
add
mov
add
outs
and
add
add
jnp
add
add
and
add
add
jnp
add
add
add
or
add
add
add
and
add
jnp
add
add
sbb
add
jnp
add
add
sbb
add
jnp
add
add
jnp
add
add
ret
push
outs
add
or
add
add
or
or
add
add
adc
add
adc
add
add
add
add
sub
fnstsw
jnp
add
add
add
add
adc
add
add
add
add
or
push
adc
add
add
push
jge
add
add
add
add
add
mov
add
jnp
add
add
jge
add
add
jnp
add
add
sub
add
add
add
add
add
add
add
add
fimul
or
add
add
(bad)
sbb
sbb
or
pop
(bad)
jge
add
add
jl
add
add
or
sub
add
add
adc
pop
(bad)
jge
add
add
jl
add
add
sub
sub
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
xor
add
add
add
add
add
push
sub
sub
sub
add
adc
mov
push
sub
sub
add
add
add
add
sbb
add
inc
or
sub
add
jnp
add
add
jnp
add
add
adc
add
jge
add
add
add
add
add
sbb
add
pusha
add
or
inc
or
cmp
add
add
add
add
add
and
add
outs
add
add
sbb
add
inc
or
add
add
add
add
add
and
add
outs
add
add
sbb
add
jge
add
add
pop
lea
rol
add
jnp
add
add
push
pushf
add
push
add
adc
add
jge
add
add
jnp
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
imul
add
jnp
add
add
jge
add
add
jae
add
or
add
add
add
add
add
push
xor
add
jae
add
or
add
add
jnp
add
add
mov
add
outs
and
add
add
jnp
add
add
and
add
add
jnp
add
add
add
or
add
add
add
and
add
jnp
add
add
sbb
add
jnp
add
add
sbb
add
jnp
add
add
jnp
add
add
ret
push
outs
add
or
add
add
or
or
add
add
adc
add
adc
add
add
add
add
sub
fnstsw
jnp
add
add
add
add
adc
add
add
add
add
or
push
adc
add
add
push
jge
add
add
add
add
add
ret
add
add
jnp
add
add
jge
add
add
jnp
add
add
sub
add
add
add
add
add
add
add
add
fimul
or
add
add
(bad)
sbb
sbb
or
pop
(bad)
jge
add
add
jl
add
add
or
sub
add
add
adc
pop
(bad)
jge
add
add
jl
add
add
sub
sub
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
xor
add
add
add
add
add
push
sub
sub
sub
add
adc
int3
add
add
push
sub
sub
add
add
add
add
sbb
add
inc
or
sub
add
jnp
add
add
jnp
add
add
adc
add
jge
add
add
add
add
add
sbb
add
pusha
add
or
inc
or
cmp
add
add
add
add
add
and
add
outs
add
add
sbb
add
inc
or
add
add
add
add
add
and
add
outs
add
add
sbb
add
jge
add
add
pop
lea
into
add
add
jnp
add
add
push
pushf
add
push
add
adc
add
jge
add
add
jnp
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
imul
add
jnp
add
add
jge
add
add
jae
add
or
add
add
add
add
add
push
xor
add
jae
add
or
add
add
jnp
add
add
mov
add
outs
and
add
add
jnp
add
add
and
add
add
jnp
add
add
add
or
add
add
add
and
add
jnp
add
add
sbb
add
jnp
add
add
sbb
add
jnp
add
add
jnp
add
add
ret
push
outs
add
or
add
add
or
or
add
add
adc
add
adc
add
add
add
add
sub
fnstsw
jnp
add
add
add
add
adc
add
add
add
add
or
push
adc
add
add
push
jge
add
add
add
add
add
rol
add
jnp
add
add
jge
add
add
jnp
add
add
sub
add
add
add
add
add
add
add
add
fimul
or
add
add
(bad)
sbb
sbb
or
pop
(bad)
jge
add
add
jl
add
add
or
sub
add
add
adc
pop
(bad)
jge
add
add
jl
add
add
sub
sub
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
xor
add
add
add
add
add
push
sub
sub
sub
add
adc
fld
add
push
sub
sub
add
add
add
add
sbb
add
inc
or
sub
add
jnp
add
add
jnp
add
add
adc
add
jge
add
add
add
add
add
sbb
add
pusha
add
or
inc
or
cmp
add
add
add
add
add
and
add
outs
add
add
sbb
add
inc
or
add
add
add
add
add
and
add
outs
add
add
sbb
add
jge
add
add
pop
lea
fild
add
jnp
add
add
push
pushf
add
push
add
adc
add
jge
add
add
jnp
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
imul
add
jnp
add
add
jge
add
add
jae
add
or
add
add
add
add
add
push
xor
add
jae
add
or
add
add
jnp
add
add
mov
add
outs
and
add
add
jnp
add
add
and
add
add
jnp
add
add
add
or
add
add
add
and
add
jnp
add
add
sbb
add
jnp
add
add
sbb
add
jnp
add
add
jnp
add
add
ret
push
outs
add
or
add
add
or
or
add
add
adc
add
adc
add
add
add
add
sub
fnstsw
jnp
add
add
add
add
adc
add
add
add
add
or
push
adc
add
add
push
jge
add
add
add
add
add
fld
add
jnp
add
add
jge
add
add
jnp
add
add
sub
add
add
add
add
add
add
add
add
fimul
or
add
add
(bad)
sbb
sbb
or
pop
(bad)
jge
add
add
jl
add
add
or
sub
add
add
adc
pop
(bad)
jge
add
add
jl
add
add
sub
sub
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
jae
add
push
and
add
push
add
add
or
push
add
add
or
adc
add
pushf
add
add
add
jnp
add
add
or
add
jnp
add
add
xor
add
add
jnp
add
add
or
add
xor
add
outs
xor
add
add
add
or
push
jb
inc
add
add
or
push
jb
inc
add
aaa
add
or
push
sbb
add
or
push
jb
imul
outs
rol
or
push
sub
add
or
add
or
add
add
add
or
add
xor
add
push
outs
cmp
add
add
jb
imul
outs
cmp
add
add
jb
imul
outs
cmp
jae
add
or
pop
jb
inc
add
add
or
pop
jb
inc
add
aaa
add
or
pop
sbb
add
or
pop
jb
imul
outs
rol
or
pop
sub
add
or
add
or
add
add
add
or
add
xor
add
pop
outs
cmp
add
add
jb
imul
outs
cmp
add
add
jb
adc
jo
cmp
jae
add
or
jb
inc
add
add
or
or
inc
add
aaa
add
or
or
outs
cmp
add
add
jb
imul
outs
rol
or
or
aas
add
or
add
or
add
add
add
or
add
xor
add
or
add
or
or
imul
outs
cmp
add
add
jb
adc
jo
cmp
add
add
add
or
add
mov
add
push
outs
mov
add
sub
add
or
add
or
add
add
add
or
add
xor
add
push
outs
inc
add
or
outs
inc
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
outs
inc
add
or
(bad)
jo
inc
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
inc
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
sbb
inc
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
and
add
add
add
add
add
or
sub
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
adc
sub
add
adc
add
dec
add
or
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
adc
and
add
add
add
aas
sub
add
adc
add
inc
add
or
add
add
dec
add
or
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
add
add
inc
outs
inc
add
or
add
add
add
or
add
xor
add
push
outs
inc
add
or
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
jb
imul
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
rcl
jo
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
dec
add
or
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
dec
add
or
outs
push
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
dec
add
or
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
dec
add
or
add
add
add
lock
outs
push
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
sbb
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
push
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
pop
outs
push
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
sbb
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
push
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
sbb
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
pop
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
pop
add
or
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
pop
add
or
outs
push
add
or
add
add
add
or
add
pop
add
or
sub
sub
xor
sbb
add
add
add
jnp
add
add
or
add
jnp
add
add
xor
add
add
jnp
add
add
or
add
xor
add
outs
xor
add
add
add
or
push
jb
inc
add
add
or
push
jb
inc
add
aaa
add
or
push
pop
or
add
or
push
jb
ins
add
rol
or
push
sub
add
or
add
or
add
add
add
or
add
xor
add
push
outs
cmp
add
add
jb
imul
outs
cmp
add
add
jb
ins
add
cmp
jae
add
or
pop
jb
inc
add
add
or
pop
jb
inc
add
aaa
add
or
pop
pop
or
add
or
pop
jb
ins
add
rol
or
pop
sub
add
or
add
or
add
add
add
or
add
xor
add
pop
outs
cmp
add
add
jb
imul
outs
cmp
add
add
jb
ins
add
cmp
jae
add
or
jb
inc
add
add
or
or
inc
add
aaa
add
or
or
or
add
or
or
ins
add
rol
or
or
cmp
add
outs
cmp
add
add
jnp
add
add
or
add
xor
add
or
add
or
or
imul
outs
cmp
add
add
jb
ins
add
cmp
jae
add
or
add
add
or
or
inc
add
aaa
add
or
or
or
add
or
or
ins
add
rol
or
or
pop
add
or
add
or
add
add
add
or
add
xor
add
or
add
or
or
imul
outs
cmp
add
add
jb
ins
add
cmp
add
add
add
or
add
mov
add
push
outs
mov
add
sub
add
or
add
or
add
add
add
or
add
xor
add
push
outs
inc
add
or
outs
inc
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
inc
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
sbb
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
inc
add
or
sub
add
add
add
or
add
aad
add
pop
sub
add
or
add
add
adc
adc
and
add
add
add
mov
or
push
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
adc
or
pop
adc
sub
add
and
add
add
add
aas
pop
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
adc
sub
add
adc
adc
sub
add
and
add
add
add
aas
pop
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
add
add
lock
outs
inc
add
or
add
add
add
or
add
xor
add
push
outs
inc
add
or
outs
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
add
jb
push
add
dec
add
or
add
add
add
or
add
mov
add
push
outs
mov
add
outs
mov
into
ins
add
dec
add
or
add
add
add
or
add
pop
add
or
sub
sub
add
xor
add
add
add
jnp
add
add
adc
add
jnp
add
add
xor
add
add
jnp
add
add
adc
add
xor
add
outs
xor
add
add
add
or
push
jb
inc
add
add
or
push
jb
inc
add
aaa
add
or
push
sbb
add
or
push
jb
imul
outs
rol
or
push
sub
add
or
add
or
add
add
add
adc
add
xor
add
push
outs
cmp
add
add
jb
imul
outs
cmp
add
add
jb
imul
outs
cmp
jae
add
or
pop
jb
inc
add
add
or
pop
jb
inc
add
aaa
add
or
pop
sbb
add
or
pop
jb
imul
outs
rol
or
pop
sub
add
or
add
or
add
add
add
adc
add
xor
add
pop
outs
cmp
add
add
jb
imul
outs
cmp
add
add
jb
adc
jo
cmp
jae
add
or
jb
inc
add
add
or
or
inc
add
aaa
add
or
or
outs
cmp
add
add
jb
imul
outs
rol
or
or
aas
add
or
add
or
add
add
add
adc
add
xor
add
or
add
or
or
imul
outs
cmp
add
add
jb
adc
jo
cmp
add
add
add
adc
add
mov
add
push
outs
mov
add
sub
add
or
add
or
add
add
add
adc
add
xor
add
push
outs
inc
add
or
outs
inc
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
outs
inc
add
or
(bad)
jo
inc
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
inc
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
sbb
inc
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
and
add
add
add
add
add
or
add
add
add
adc
add
outs
add
or
add
or
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
adc
sub
add
adc
add
dec
add
or
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
adc
and
add
add
add
aas
sub
add
adc
add
inc
add
or
add
add
dec
add
or
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
outs
dec
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
add
add
inc
outs
inc
add
or
add
add
add
adc
add
xor
add
push
outs
inc
add
or
outs
dec
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
jb
imul
outs
dec
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
rcl
jo
dec
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
dec
add
or
outs
dec
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
dec
add
or
outs
push
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
dec
add
or
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
dec
add
or
add
add
add
lock
outs
push
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
sbb
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
push
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
pop
outs
push
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
sbb
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
push
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
sbb
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
pop
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
pop
add
or
outs
dec
add
or
add
add
add
adc
add
mov
add
push
outs
mov
add
outs
pop
add
or
outs
push
add
or
add
add
add
adc
add
pop
add
or
sub
sub
xor
pop
add
add
add
add
jnp
add
add
sbb
jnp
add
add
xor
add
add
jnp
add
add
sbb
xor
add
outs
xor
add
add
add
or
push
jb
inc
add
add
or
push
jb
inc
add
aaa
add
or
push
pop
or
add
or
push
jb
ins
add
rol
or
push
sub
add
or
add
or
add
add
add
sbb
xor
add
push
outs
cmp
add
add
jb
imul
outs
cmp
add
add
jb
ins
add
cmp
jae
add
or
pop
jb
inc
add
add
or
pop
jb
inc
add
aaa
add
or
pop
pop
or
add
or
pop
jb
ins
add
rol
or
pop
sub
add
or
add
or
add
add
add
sbb
xor
add
pop
outs
cmp
add
add
jb
imul
outs
cmp
add
add
jb
ins
add
cmp
jae
add
or
jb
inc
add
add
or
or
inc
add
aaa
add
or
or
or
add
or
or
ins
add
rol
or
or
cmp
add
outs
cmp
add
add
jnp
add
add
sbb
xor
add
or
add
or
or
imul
outs
cmp
add
add
jb
ins
add
cmp
jae
add
or
add
add
or
or
inc
add
aaa
add
or
or
or
add
or
or
ins
add
rol
or
or
pop
add
or
add
or
add
add
add
sbb
xor
add
or
add
or
or
imul
outs
cmp
add
add
jb
ins
add
cmp
add
add
add
sbb
mov
add
push
outs
mov
add
sub
add
or
add
or
add
add
add
sbb
xor
add
push
outs
inc
add
or
outs
inc
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
add
outs
inc
add
or
ins
add
inc
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
add
and
add
add
add
aas
outs
inc
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
add
sbb
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
add
and
add
add
add
add
add
or
adc
jnp
add
add
sbb
add
jnp
add
add
sbb
add
sub
add
or
add
add
or
add
aad
add
pop
sub
add
or
add
add
adc
adc
and
add
add
add
mov
or
push
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
add
adc
or
pop
adc
sub
add
and
add
add
add
aas
pop
outs
dec
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
add
adc
sub
add
adc
adc
sub
add
and
add
add
add
aas
pop
outs
dec
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
outs
dec
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
add
add
add
lock
outs
inc
add
or
add
add
add
sbb
xor
add
push
outs
inc
add
or
outs
dec
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
add
jb
push
add
dec
add
or
add
add
add
sbb
mov
add
push
outs
mov
add
outs
mov
into
ins
add
dec
add
or
add
add
add
sbb
pop
add
or
sub
sub
xor
test
add
add
add
add
jnp
add
add
dec
add
add
jnp
add
and
add
aam
add
sub
add
or
add
or
add
add
add
dec
add
add
jnp
add
and
add
aam
add
sub
add
or
add
or
add
add
add
dec
add
add
jnp
add
jnp
add
add
jl
add
push
outs
jge
add
jb
adc
jo
jle
add
sub
add
or
sub
sub
xor
add
add
adc
jnp
add
add
push
sub
sub
sub
add
push
sub
sub
sub
add
jge
add
add
add
add
add
jnp
add
add
add
add
add
imul
add
and
pop
add
or
add
add
jnp
add
add
daa
add
or
add
sub
add
sub
or
add
add
or
add
add
adc
jl
add
add
add
add
sbb
add
add
sti
add
add
jnp
add
add
add
add
adc
add
add
add
add
sub
add
or
adc
add
add
jge
add
add
add
add
add
clc
add
add
imul
add
add
add
int3
add
or
loope
add
sub
add
or
add
add
add
pusha
add
or
add
inc
add
add
add
add
sldt
add
add
sub
jb
ins
add
add
add
add
sbb
ins
add
add
add
add
or
jo
add
add
add
add
jnp
add
add
fidivr
adc
add
push
jge
add
add
jb
add
jnp
add
add
mov
add
add
sbb
push
add
(bad)
jge
add
add
jl
add
add
push
sub
add
add
adc
repnz
add
jl
add
add
sub
add
add
add
add
add
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
xor
add
add
pop
add
adc
jnp
add
add
push
sub
sub
sub
add
add
arpl
add
add
push
sub
sub
sub
add
jge
add
add
add
add
add
jnp
add
add
add
add
add
imul
add
and
add
or
add
add
jnp
add
add
add
or
add
data16
or
or
add
add
or
add
add
or
add
add
add
sbb
add
add
fild
add
add
add
add
add
add
adc
add
add
add
add
push
adc
(bad)
adc
jb
ins
add
add
add
add
jnp
add
add
pusha
add
or
add
add
pop
inc
add
add
add
add
push
add
add
add
add
add
jge
add
add
push
outs
add
add
add
add
sbb
ins
add
add
add
add
or
jo
add
add
add
add
jnp
add
add
fidivr
adc
push
add
add
jb
add
jnp
add
add
mov
add
add
sbb
add
std
add
add
jl
add
add
add
or
ficom
std
add
add
jl
add
add
sub
add
add
add
inc
xor
add
add
add
add
or
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
inc
add
dec
inc
add
and
jb
outs
addr16
add
add
add
push
outs
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
sbb
add
inc
ins
outs
bound
add
add
add
add
add
push
mov
add
add
add
add
add
add
add
stc
add
add
add
add
add
and
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
ss
add
and
xor
add
push
add
and
push
add
jnp
push
add
cs
add
and
push
add
add
and
push
add
and
push
add
and
ss
add
das
and
push
add
and
es
add
aas
mov
add
adc
add
sbb
es
add
in
ss
add
add
and
xor
xlat
es
add
sub
push
add
adc
add
pop
cmp
add
add
and
jge
xlat
es
add
inc
pop
cmp
add
pop
mov
xor
mov
sbb
ficomp
sbb
push
add
cmp
push
add
xor
adc
push
inc
cmp
push
add
sub
cmp
push
add
sbb
adc
sbb
cmp
mov
xor
sub
add
pop
cmp
add
pop
cmp
add
sbb
sub
push
add
inc
pop
cmp
add
cmp
add
sub
sub
add
add
inc
pop
cmp
add
(bad)
das
lods
inc
push
add
xor
add
add
jl
push
add
add
cmp
xchg
cmp
xor
pop
cmp
add
add
and
ss
add
and
xor
in
ss
add
add
pop
cmp
add
xor
sub
mov
sbb
ss
add
int3
and
in
ss
add
mov
push
int3
and
repz
pop
cmp
add
daa
pop
cmp
add
sbb
push
add
sbb
dec
adc
add
sub
push
add
pop
pop
cmp
add
inc
pop
cmp
add
inc
pop
cmp
add
es
cmp
add
pop
cmp
add
xor
xor
add
push
cmp
and
pop
sub
xor
add
mov
xor
jle
add
jle
add
add
dec
adc
add
add
inc
pop
cmp
add
add
push
cmp
add
in
ss
add
cmp
add
ss
add
sub
cmp
add
mov
and
xor
add
add
or
xor
or
jb
xlat
adc
mov
add
and
pop
add
adc
xchg
and
adc
push
and
adc
jno
add
adc
enter
adc
scas
and
or
xchg
inc
xlat
es
add
sbb
xlat
es
add
inc
mov
sbb
es
add
add
das
pop
cmp
add
sub
in
add
sub
sbb
push
add
add
es
inc
mov
push
jnp
push
add
add
inc
pop
cmp
add
pop
cmp
add
cmp
cmp
add
daa
repz
mov
sub
ss
add
sbb
ss
add
mov
cmp
cli
and
push
inc
mov
or
in
ss
add
je
cmp
push
add
xor
pop
xor
add
pop
xor
add
dec
adc
add
sbb
es
add
add
xor
cs
add
pop
cmp
add
add
pop
pop
cmp
add
add
mov
inc
cmp
adc
pop
cmp
adc
movs
xor
ds
add
cmp
mov
and
jnp
mov
das
lods
inc
push
add
lods
inc
push
add
add
xor
xor
pop
cmp
add
sbb
xor
repz
pop
cmp
add
push
sar
push
add
sub
adc
int3
cmp
xor
sub
add
add
add
pop
cmp
add
add
xlat
es
add
add
add
add
pop
cmp
add
xor
push
add
shr
push
add
add
cmp
sub
add
cmp
sbb
adc
sbb
sbb
push
add
add
sbb
and
sub
pop
cmp
add
pop
pop
cmp
add
add
xor
push
add
pop
cmp
add
dec
adc
add
add
xor
xor
add
add
push
dec
adc
add
cmp
push
add
es
cmp
add
add
or
pop
cmp
add
sub
sub
add
es
cmp
add
add
add
add
push
add
add
add
add
mov
add
cmp
add
inc
jle
add
add
inc
jle
add
add
xor
push
add
pop
cmp
add
pop
pop
cmp
add
pop
pop
cmp
add
cs
cmp
add
inc
pop
cmp
add
add
pop
cmp
add
jnp
adc
sbb
add
push
add
sbb
int3
and
jle
add
jle
es
cmp
add
jle
add
add
sbb
xor
add
sldt
add
add
add
add
adc
xchg
add
add
add
adc
mov
inc
add
add
add
adc
pushf
xor
sub
sldt
add
add
add
add
add
sub
add
add
add
pop
cmp
imul
add
add
or
sub
add
add
add
cmp
mov
add
adc
jg
cmp
xchg
add
add
add
add
add
fisttp
push
add
add
push
cmp
cmps
add
add
add
add
stos
add
add
add
adc
ins
add
jnp
cmp
lds
add
adc
(bad)
cmp
mov
add
add
(bad)
cmp
jb
enter
adc
push
cmp
cmp
add
add
add
add
sldt
inc
add
fadd
add
adc
(bad)
adc
add
jbe
fadd
test
adc
dec
add
inc
add
fadd
add
add
cmp
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
inc
add
and
add
adc
add
mov
jecxz
add
adc
jns
add
inc
add
add
add
xchg
add
add
add
add
add
inc
add
add
add
add
add
mov
add
add
add
inc
add
add
add
add
adc
fwait
pop
add
inc
add
add
add
add
add
add
add
add
and
add
adc
add
jecxz
add
add
adc
aaa
add
add
out
pop
add
add
add
add
add
add
add
add
add
add
add
adc
retf
add
in
add
add
add
inc
add
add
add
add
add
add
add
add
or
add
std
add
add
add
add
push
add
test
or
and
or
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
cmp
add
add
add
sbb
adc
add
add
inc
adc
add
push
inc
adc
add
adc
inc
sbb
add
imul
inc
and
add
pop
adc
sub
fwait
and
add
mov
add
add
pop
adc
add
adc
add
sub
adc
add
pop
adc
add
sub
add
in
pop
pop
adc
add
call
sub
add
add
pop
adc
add
pop
adc
add
adc
add
add
add
call
adc
adc
add
das
add
add
add
add
add
push
jl
add
pop
aas
adc
add
cmp
call
add
adc
ret
inc
mov
add
pop
sbb
sbb
sbb
adc
xor
push
add
les
daa
xor
push
add
nop
and
es
adc
add
cdq
adc
add
cdq
adc
add
add
adc
push
add
loope
pop
push
add
dec
sub
push
add
inc
inc
pop
push
add
push
inc
call
xor
xor
call
adc
add
add
adc
add
add
adc
push
add
int
pop
push
add
adc
adc
pop
push
add
sbb
add
add
add
adc
push
add
fist
pop
push
add
sub
add
xor
adc
add
sub
adc
add
inc
adc
add
mov
add
(bad)
or
pop
lods
adc
add
lods
adc
add
lods
adc
add
adc
add
add
add
add
add
or
sbb
lods
adc
add
push
lods
adc
add
add
lods
adc
add
add
or
adc
add
pop
test
add
fimul
test
add
mov
lods
adc
add
lods
adc
add
lods
adc
add
lods
adc
add
add
shrd
add
jae
lods
adc
add
add
adc
add
or
or
adc
add
lods
adc
add
lods
adc
add
lods
adc
add
add
push
lods
adc
add
lods
adc
add
sbb
add
adc
add
or
or
sbb
or
shrd
add
cmc
or
or
sbb
sbb
or
mov
lods
adc
add
pop
mov
add
xlat
add
add
dec
or
or
or
or
or
or
adc
add
mov
or
pop
or
or
or
adc
add
add
loope
test
add
mov
add
pop
lods
adc
add
add
push
test
add
mov
add
mov
add
test
add
push
add
add
adc
add
add
add
add
loop
mov
add
cs
add
adc
add
add
sbb
lods
adc
add
aad
add
pop
add
cs
test
add
into
(bad)
adc
add
test
add
mov
add
add
adc
add
pop
adc
add
add
nop
adc
add
call
aas
adc
add
add
fist
add
cs
add
adc
add
add
pop
call
add
cs
test
add
mov
rcl
add
jle
in
adc
add
rcl
add
popa
add
add
rcl
add
jne
rcl
add
imul
adc
add
or
adc
add
adc
add
repnz
add
add
add
add
call
or
or
adc
add
or
or
retf
adc
add
or
adc
add
add
or
adc
add
push
rcl
add
jg
retf
adc
add
je
rcl
add
xlat
or
adc
add
(bad)
adc
add
add
add
test
add
popa
or
adc
add
add
adc
add
or
pushf
or
adc
add
add
sbb
add
sbb
retf
adc
add
push
retf
adc
add
or
std
or
adc
add
add
retf
adc
add
pop
retf
adc
add
retf
adc
add
add
adc
add
retf
adc
add
bswap
adc
add
push
retf
adc
add
add
xlat
add
shrd
add
mov
lods
adc
add
or
popf
or
adc
add
lods
adc
add
lods
adc
add
or
or
adc
add
add
add
or
or
sub
rcl
add
ss
cld
adc
add
or
adc
add
add
test
rcl
add
jmp
add
rcl
add
ret
or
adc
add
pop
rcl
add
cmps
or
adc
add
add
add
add
push
in
adc
add
push
rcl
add
les
in
adc
add
add
adc
add
pop
test
add
lock
fild
test
add
imul
adc
add
enter
add
loope
test
add
and
adc
add
add
mov
adc
adc
add
adc
add
add
cs
test
add
fimul
test
add
pop
or
and
cs
adc
adc
add
add
pop
add
jmp
lods
adc
add
or
pop
test
add
nop
and
fnstenv
retf
add
add
mov
adc
adc
add
in
adc
add
add
adc
add
in
adc
add
or
adc
add
add
adc
push
adc
jmp
pop
push
adc
(bad)
adc
push
adc
jmp
adc
push
adc
jecxz
pop
push
adc
pop
pop
pop
push
add
fnstenv
cs
pop
in
adc
add
add
adc
add
in
adc
add
rcl
add
scas
shrd
add
mov
lods
adc
add
push
lods
adc
add
fisttp
lods
adc
add
add
adc
add
pop
lods
adc
add
add
xlat
add
add
shrd
add
mov
rcl
add
push
push
lods
adc
add
shrd
add
(bad)
add
add
push
lods
adc
add
or
or
adc
add
add
push
lods
adc
add
or
or
or
adc
add
pop
lods
adc
add
or
or
or
or
adc
add
or
pop
add
pop
or
adc
add
lods
adc
add
adc
add
or
mov
add
adc
add
adc
add
add
jne
push
adc
add
mov
add
adc
add
add
cs
test
add
nop
and
retf
add
add
xor
cs
add
adc
add
add
pop
call
add
jmp
lods
adc
add
add
pop
pop
or
add
jle
in
adc
add
pop
lods
adc
add
in
adc
add
or
add
inc
sbb
add
add
cmp
adc
add
add
adc
add
inc
adc
add
sbb
adc
xchg
push
push
adc
add
push
and
xor
push
adc
adc
add
add
add
cmp
adc
add
push
xor
das
add
inc
sub
test
push
push
xor
das
add
cmps
push
adc
and
push
push
xor
das
add
inc
inc
jl
push
and
adc
jno
jl
push
push
xor
das
add
adc
adc
mov
add
inc
adc
add
cmp
add
add
push
adc
add
add
push
adc
add
or
add
add
push
adc
add
add
add
add
cmp
add
add
add
cmp
add
and
add
add
xor
add
cmp
add
add
add
add
push
fist
add
xchg
or
adc
add
or
add
push
or
add
jo
das
add
add
add
sbb
adc
add
and
add
add
xor
add
cmp
add
add
add
add
push
fist
add
xchg
or
adc
add
or
add
push
or
add
jo
das
add
add
add
sbb
adc
add
and
add
add
xor
add
cmp
add
add
add
add
push
fist
add
mov
fist
add
add
fist
add
inc
or
adc
add
add
add
add
add
add
adc
add
and
add
add
xor
add
cmp
add
add
add
add
push
fist
add
mov
fist
add
add
fist
add
inc
or
adc
add
add
add
add
add
add
adc
add
and
add
add
xor
add
cmp
add
add
add
add
push
fist
add
mov
fist
add
add
fist
add
inc
or
adc
add
add
add
add
add
add
adc
add
and
add
add
xor
add
cmp
add
add
add
add
push
fist
add
mov
fist
add
add
fist
add
inc
or
adc
add
add
add
add
add
add
adc
add
add
add
mov
push
add
adc
add
adc
cmp
adc
cmp
adc
cmp
sbb
cmp
inc
stos
adc
inc
inc
stos
adc
dec
push
stos
adc
add
and
add
add
xor
adc
push
add
fist
push
add
data16
add
cmp
add
add
add
push
mov
add
lods
or
add
add
or
add
sbb
adc
add
and
add
add
xor
adc
push
add
add
fist
push
add
data16
add
cmp
add
adc
add
push
(bad)
adc
add
add
add
adc
add
das
add
add
(bad)
or
das
add
add
add
das
add
add
daa
call
and
add
add
add
add
add
and
xchg
rcl
add
(bad)
adc
adc
add
add
stos
adc
add
sbb
sub
sub
daa
stos
adc
adc
add
stos
adc
add
add
adc
add
add
add
stos
adc
add
add
add
cmp
adc
add
add
sbb
adc
adc
add
xor
jp
stos
adc
add
cs
adc
add
adc
add
pop
stos
adc
add
add
add
daa
and
add
add
das
add
add
add
add
inc
stos
adc
add
pop
stos
adc
add
add
or
or
or
adc
add
sub
add
add
das
add
add
sub
add
add
das
add
add
add
stos
adc
add
sub
adc
add
stos
adc
add
sub
adc
add
adc
add
sub
adc
add
and
add
add
adc
add
add
add
add
add
or
add
or
add
mov
add
or
add
and
add
add
adc
int
add
add
or
add
fsub
add
add
xchg
push
and
push
add
add
add
add
adc
add
add
adc
add
and
add
add
adc
add
add
adc
add
add
add
xchg
mov
add
add
add
sbb
add
add
xchg
mov
add
add
add
add
adc
cwde
sub
add
add
adc
add
sub
add
add
adc
call
add
adc
add
add
adc
add
sub
add
add
add
add
add
add
add
sbb
call
add
adc
add
add
add
add
sbb
add
add
adc
add
push
add
add
add
and
sbb
add
add
adc
add
add
add
add
and
add
add
adc
add
pusha
add
add
add
sub
jb
add
add
add
sub
and
add
adc
add
add
adc
add
popa
add
add
add
xor
sub
add
add
adc
add
arpl
add
add
adc
add
add
adc
add
add
add
add
cmp
xor
add
add
add
cmp
fsub
add
add
adc
add
add
adc
add
add
adc
cmp
add
add
adc
add
add
add
adc
nop
push
add
inc
add
push
add
inc
add
add
add
add
dec
add
add
add
add
dec
add
add
dec
add
imul
add
push
adc
jl
add
add
add
dec
add
imul
add
add
dec
add
add
add
add
mov
add
add
add
les
add
add
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
push
add
les
inc
pop
adc
ins
add
add
add
push
add
add
add
xchg
sbb
xor
arpl
add
push
add
add
push
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
add
add
lods
add
add
add
push
add
lods
add
add
add
push
add
lods
add
add
add
push
add
xchg
mov
add
add
push
add
add
add
add
push
add
add
pop
add
mov
add
add
add
adc
mov
add
add
add
fdiv
xchg
add
cmp
adc
cmp
add
add
xchg
add
adc
adc
mov
xchg
add
adc
mov
xchg
mov
add
mov
add
pop
add
rol
add
add
popa
add
add
add
add
arpl
pop
mov
add
add
add
add
add
add
add
add
imul
add
add
imul
rol
add
add
adc
jo
add
add
add
outs
add
add
add
add
jno
shl
add
add
add
jae
test
add
add
add
jne
xor
add
add
add
ja
sbb
add
add
add
jns
int3
repz
add
les
inc
pop
adc
hlt
add
add
add
jl
ret
add
add
xchg
sbb
xor
fsubr
add
add
xchg
mov
add
add
adc
xor
add
add
adc
shl
add
add
add
add
mov
add
add
adc
add
add
adc
add
add
xchg
xor
add
add
add
mov
mov
add
add
add
mov
fdiv
add
add
les
inc
pop
adc
xor
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
adc
cmp
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
sahf
add
add
add
add
mov
add
add
adc
add
add
add
adc
inc
add
add
add
movs
add
dec
add
add
xchg
mov
add
add
add
add
movs
add
add
add
add
cmps
add
add
add
les
inc
pop
adc
pop
add
add
add
stos
add
add
add
xchg
sbb
xor
and
sbb
add
add
add
add
stos
add
add
add
les
inc
pop
adc
test
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
add
adc
mov
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
mov
fist
add
mov
add
add
adc
add
add
adc
add
les
inc
pop
adc
xchg
add
add
add
mov
add
add
adc
add
add
adc
add
mov
add
cmp
ret
mov
add
cmp
movs
add
add
add
inc
mov
lds
pushf
movs
add
add
add
adc
in
add
add
add
sbb
movs
add
add
add
xor
movs
add
add
add
xor
cmps
add
add
add
cmp
and
add
inc
push
add
add
cmps
add
add
add
sbb
add
add
add
inc
les
rol
mov
add
xor
adc
add
cmps
add
add
add
xor
adc
add
add
add
add
cmp
call
add
add
add
xchg
add
sub
add
add
add
add
xchg
mov
add
test
add
add
add
add
test
add
add
add
add
test
xchg
or
xor
adc
add
add
add
xchg
or
out
adc
add
add
add
xchg
or
add
add
add
xchg
or
and
adc
add
add
adc
add
test
xchg
or
add
add
stos
add
add
xchg
or
xor
xchg
or
add
add
add
xchg
or
sub
adc
add
add
adc
add
add
add
add
stos
add
add
xchg
cdq
inc
inc
or
add
stos
add
add
xchg
sbb
add
stos
add
add
xchg
mov
add
stos
add
add
xchg
sbb
xor
and
xchg
sbb
xor
call
add
add
add
add
adc
add
add
adc
add
add
add
inc
push
adc
add
add
add
inc
daa
adc
add
add
add
ss
loop
add
add
add
and
cmp
add
add
add
sub
jmp
call
add
add
add
add
add
add
clts
add
add
add
add
add
add
add
xchg
mov
add
mov
add
add
pop
icebp
add
add
add
add
push
push
pop
repnz
add
add
add
or
pop
repz
add
add
add
or
pop
hlt
add
add
add
add
or
pop
cmc
add
add
add
add
or
pop
test
mov
add
add
pop
test
add
add
push
push
pop
clc
add
add
add
xchg
mov
add
add
add
add
add
add
add
xchg
mov
add
add
add
add
add
add
add
xchg
mov
add
add
add
add
push
add
add
mov
add
add
add
sbb
call
add
add
add
add
add
loope
addr16
push
add
add
mov
add
add
add
sbb
call
add
add
add
mov
loope
addr16
push
add
add
mov
add
add
add
sbb
call
add
add
add
loope
addr16
push
add
add
mov
add
add
add
sbb
call
add
add
add
add
add
loope
addr16
push
add
add
mov
add
add
add
sbb
call
add
add
add
add
add
loope
addr16
push
add
add
mov
add
add
add
sbb
add
add
add
xchg
sbb
xor
call
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
xchg
mov
add
into
add
add
add
add
add
add
add
add
xchg
mov
add
add
add
add
add
add
add
xchg
mov
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
addr16
add
add
add
cmp
add
add
add
push
ja
add
add
inc
ja
or
add
add
add
and
adc
add
add
add
and
adc
add
add
add
adc
add
add
push
ja
adc
add
add
add
and
adc
add
add
add
inc
ja
adc
add
cmp
adc
add
add
add
cmp
adc
add
add
add
xchg
mov
add
loope
addr16
push
add
add
mov
add
add
add
sbb
call
add
add
add
add
add
loope
addr16
push
add
add
mov
add
add
add
sbb
add
add
cmp
add
add
aad
add
add
aad
add
add
aad
add
add
in
add
add
mov
add
add
add
fwait
sbb
add
add
add
push
add
add
pop
sbb
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
fild
add
add
sub
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
inc
adc
add
add
add
add
xchg
xor
add
add
add
add
jb
add
add
xchg
xor
add
add
add
add
jb
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
fild
add
add
sub
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
or
add
add
mov
add
add
je
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
or
add
add
mov
add
add
je
add
add
push
sbb
add
add
add
add
add
cmp
add
add
add
add
add
add
(bad)
cmp
add
add
add
add
add
mov
add
add
add
add
add
add
daa
aas
add
add
aaa
cmp
pop
sbb
add
add
and
add
add
add
add
add
mov
add
add
jp
add
add
mov
add
add
add
add
add
add
add
daa
aas
add
add
stc
cmp
add
add
and
add
add
and
add
add
add
add
add
sbb
add
add
add
jo
add
add
jo
add
add
ficom
add
add
adc
add
add
int3
inc
add
add
add
add
add
add
add
add
dec
cmp
add
add
add
add
(bad)
adc
add
add
adc
add
and
add
add
add
add
adc
add
add
inc
add
add
adc
add
add
inc
add
add
adc
add
add
inc
add
add
adc
add
add
inc
add
add
adc
add
add
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
xor
add
add
adc
add
add
aas
add
add
adc
pop
aas
add
add
out
cmp
add
add
aas
add
add
pop
xor
add
add
add
add
aas
add
add
pop
xor
add
add
add
add
adc
pop
aas
add
add
jmp
add
add
pop
aas
add
add
adc
pop
aas
add
add
pop
xor
add
add
add
add
aas
add
add
jmp
add
add
pop
aas
add
add
pop
xor
add
add
add
add
add
cmp
add
add
push
add
add
jge
add
add
pop
sub
add
adc
pop
sbb
pop
sbb
and
and
add
add
add
and
add
and
xor
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
nop
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
aas
dec
add
add
add
and
add
mov
js
sbb
jno
mov
leave
add
lea
or
mov
add
sbb
sti
sbb
inc
cmps
add
add
add
add
fadd
mov
js
pop
add
add
aas
fadd
mov
ret
add
sub
add
add
add
add
add
adc
add
add
add
add
add
ss
add
add
add
add
add
add
add
daa
fadd
jmp
add
add
sub
jmp
add
add
sub
add
add
fadd
jmp
add
add
daa
add
leave
add
cmp
add
add
inc
inc
add
mov
add
inc
add
add
mov
sub
mov
add
push
cmps
add
add
les
xor
sbb
add
add
int3
add
jmp
rol
dec
add
inc
fadd
popa
add
and
add
icebp
xor
add
mov
add
sub
add
adc
and
add
imul
add
ret
add
mov
add
xor
add
pop
inc
sub
sub
add
aad
mov
jns
inc
pop
push
add
add
add
adc
xchg
add
cmp
cdq
add
xor
test
add
add
and
add
add
add
fadd
sub
adc
add
add
add
add
daa
fadd
sub
mov
add
add
add
add
add
xor
xchg
xor
add
add
add
icebp
add
add
add
sub
add
add
add
add
sub
add
jae
push
add
add
sub
xchg
add
add
and
sub
inc
and
xor
or
sub
leave
add
add
add
adc
jmp
add
add
sbb
push
aas
js
icebp
add
xor
mov
jle
jmp
add
mov
add
xor
pop
sbb
pop
xchg
add
add
add
add
pop
push
add
mov
add
dec
add
add
mov
add
sub
inc
pop
push
add
add
inc
and
xor
sub
jnp
adc
sub
ins
pop
add
sub
push
add
sub
adc
add
ds
add
add
sub
cs
ins
sub
add
xor
jp
sub
scas
les
sub
push
and
inc
mov
add
add
add
ss
add
add
daa
pop
add
add
xor
inc
movs
add
add
sub
add
add
add
scas
add
add
and
shl
es
inc
rol
mov
add
add
inc
fild
add
add
and
pop
out
inc
add
xor
mov
add
add
push
inc
add
cmp
add
or
fadd
sub
add
inc
sbb
pusha
add
add
aas
ss
fadd
jmp
add
bound
bound
ins
add
jno
push
add
ja
push
add
sub
add
jle
mov
push
pop
add
xor
in
aas
sbb
xor
xchg
inc
repnz
add
xor
push
xor
sbb
add
and
loope
push
fadd
loope
mov
fadd
loope
adc
add
add
aas
xor
sub
aas
cmp
imul
fadd
jmp
push
jmp
push
jmp
add
add
xor
daa
enter
hlt
ds
push
jno
or
add
adc
adc
adc
jno
(bad)
sbb
inc
adc
inc
mov
mov
jmp
push
jmp
push
jmp
add
add
sbb
add
add
inc
push
add
inc
add
add
les
sub
inc
lods
push
jns
outs
cmp
push
xchg
add
leave
add
sbb
add
push
leave
add
add
leave
add
sbb
add
add
push
add
xor
add
add
add
pop
xchg
add
sub
fwait
xor
add
add
adc
aas
mov
mov
add
dec
pop
sub
jmp
pop
jmp
pop
jmp
pop
sbb
jns
pop
pop
sbb
clc
inc
pusha
pop
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
add
add
add
add
sub
sbb
pop
leave
add
add
leave
add
add
leave
add
xor
pop
imul
imul
fld
jns
lods
sbb
pop
adc
adc
pop
add
add
add
mov
pop
sub
stos
inc
adc
mov
jbe
adc
jns
aaa
aas
sbb
mov
inc
sub
test
add
push
mov
add
add
leave
add
and
add
add
add
and
daa
add
xchg
add
sbb
add
add
add
or
or
push
mov
add
cmp
sbb
add
add
add
add
add
sub
fld
jno
arpl
add
jno
lock
and
push
add
and
cmp
add
push
jae
adc
and
sub
mov
inc
or
push
enter
and
movs
sub
lahf
daa
inc
or
push
mov
push
fwait
inc
inc
or
push
scas
xor
pop
rol
leave
add
xor
pop
fld
sub
cmp
in
fld
sub
dec
xor
cmps
sbb
xor
sbb
pushf
add
add
push
inc
sbb
hlt
cmp
fwait
aas
inc
or
push
(bad)
sub
mov
add
sub
fwait
inc
inc
or
or
movs
cmp
push
push
adc
jbe
fld
mov
pop
mov
or
or
mov
add
or
mov
add
adc
or
add
inc
adc
inc
push
add
add
inc
push
add
add
add
add
les
pop
add
jns
xchg
sbb
or
or
or
jl
loop
push
add
add
sub
fistp
add
or
add
or
xor
mov
or
add
inc
and
pop
push
add
or
add
mov
add
push
mov
add
inc
add
mov
or
add
add
add
or
pop
mov
jmp
add
add
nop
or
add
or
sbb
push
leave
add
push
ins
sbb
add
push
out
adc
rol
rol
add
push
cld
sbb
add
add
add
add
or
add
pop
or
add
push
stos
inc
daa
or
add
add
fadd
mov
add
add
add
add
ds
or
add
add
add
add
add
add
add
sub
frstor
mov
add
xor
(bad)
adc
cmp
or
push
jp
and
sub
or
add
add
add
add
inc
xor
rol
repz
rol
out
xor
rol
or
add
add
add
pop
or
push
mov
add
xor
sub
add
add
adc
inc
xchg
or
pop
jle
add
or
adc
xor
mov
add
add
add
ret
pop
add
mov
lods
or
add
xor
pop
sub
repz
add
adc
inc
or
adc
fstp
adc
sbb
add
add
ss
je
mov
add
and
pop
rol
cmp
mov
add
add
repz
or
add
iret
ds
add
add
add
inc
bound
pop
push
xor
ins
cs
add
mov
sub
ds
inc
bound
fadd
leave
add
add
pop
lods
sbb
pop
dec
pop
xchg
add
xor
add
push
fisttp
jmp
or
in
jmp
or
adc
pop
and
inc
fadd
or
daa
fadd
xor
mov
add
add
add
add
add
add
add
jo
jmp
pop
xor
test
inc
or
rol
xor
(bad)
xor
pop
rol
xor
and
add
xor
in
in
xor
loopne
jle
jmp
or
test
fiadd
jmp
or
adc
xor
pop
jmp
or
adc
sbb
add
add
scas
or
mov
popa
add
inc
jecxz
add
inc
inc
(bad)
or
(bad)
or
out
or
pusha
pop
jl
jecxz
dec
out
or
pusha
pop
test
jecxz
dec
cmp
dec
add
inc
inc
push
xor
inc
pusha
add
add
jns
inc
inc
dec
push
jns
je
push
push
add
push
inc
pusha
push
jns
mov
add
aas
jne
add
add
mov
add
push
sub
inc
call
es
xor
stc
aas
mov
and
les
xor
stos
sbb
push
xor
popf
das
repnz
add
ds
cmp
mov
ror
push
add
ins
add
push
pop
popa
add
add
add
add
imul
push
add
add
or
xchg
add
adc
add
add
adc
sete
test
add
inc
pop
push
add
add
xor
nop
mov
add
movs
add
adc
add
mov
add
add
push
fisttp
add
cmps
cmp
adc
and
mov
add
adc
add
add
(bad)
sbb
mov
pop
movs
xor
pop
lods
add
add
add
cmp
add
add
fld
lods
add
add
sbb
adc
mov
pop
sti
adc
adc
push
sub
and
aas
pushf
add
add
xlat
or
add
add
pop
out
pushf
add
add
ds
adc
repz
add
adc
ins
sbb
add
add
adc
adc
pop
not
adc
adc
sbb
push
sub
and
and
add
pop
sbb
adc
sbb
cmps
and
add
pop
cmps
sbb
mov
pushf
add
add
adc
adc
add
add
loope
fdivr
push
adc
adc
adc
mulps
dec
mov
jl
sub
das
(bad)
add
add
daa
push
add
adc
push
add
adc
add
push
add
sub
das
je
add
add
add
adc
add
sti
adc
add
add
adc
add
add
add
adc
add
movups
add
add
push
add
in
add
or
call
add
add
hlt
add
cld
add
add
sti
adc
add
push
and
push
sti
adc
add
push
add
or
sbb
and
push
sti
adc
add
rol
adc
add
pop
xor
add
add
adc
add
add
adc
add
add
add
adc
and
add
add
add
add
adc
push
adc
dec
adc
inc
adc
inc
adc
popa
adc
mov
cwde
adc
sti
adc
jnp
sti
adc
jnp
sti
adc
add
pop
add
add
adc
adc
pop
mov
retf
add
mov
adc
adc
pop
test
sbb
add
sti
adc
add
sti
adc
adc
adc
sbb
add
add
adc
add
add
adc
add
add
add
inc
add
add
add
adc
jnp
sti
adc
jnp
sti
adc
mov
add
sti
adc
adc
jnp
sti
adc
adc
adc
add
sti
adc
add
sti
adc
add
add
adc
add
add
adc
jnp
sti
adc
jnp
sti
adc
adc
adc
add
add
adc
add
add
adc
add
and
arpl
add
push
mov
out
mov
adc
push
mov
push
push
rol
add
adc
push
mov
push
push
loopne
xchg
add
adc
pop
mov
xchg
push
add
xchg
add
adc
pop
mov
retf
push
and
xchg
add
adc
mov
push
pop
inc
pop
xchg
add
adc
or
sti
adc
or
sti
adc
jnp
sti
adc
jnp
sti
adc
adc
adc
or
sti
adc
or
sti
adc
or
sti
adc
or
sti
adc
jnp
sti
adc
jnp
sti
adc
adc
adc
or
sti
adc
or
sti
adc
or
sti
adc
or
sti
adc
jnp
sti
adc
jnp
sti
adc
adc
adc
or
sti
adc
or
sti
adc
or
sti
adc
or
sti
adc
jnp
sti
adc
jnp
sti
adc
adc
adc
or
sti
adc
or
sti
adc
or
add
adc
or
add
adc
jnp
sti
adc
jnp
sti
adc
adc
pop
adc
add
adc
mov
jge
inc
sbb
sbb
push
stos
add
adc
push
stos
add
adc
pop
stos
add
adc
adc
pop
stos
add
adc
stos
add
adc
and
and
add
adc
add
adc
add
add
add
add
add
add
add
add
add
test
mov
add
add
add
mov
mov
push
test
and
xor
ss
push
pop
ins
pop
jl
mov
call
or
or
or
or
or
or
jae
fwait
or
or
or
or
or
or
or
or
or
mov
lahf
or
int3
or
adc
sub
push
outs
push
jge
test
mov
xchg
push
mov
cvtps2pd
mov
lods
bswap
(bad)
(bad)
adc
xchg
adc
add
add
add
adc
or
add
scas
and
jl
mov
sub
xor
adc
add
add
and
adc
add
add
(bad)
adc
add
sbb
test
rcl
add
sub
adc
add
fcom
add
add
es
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
sub
sub
cmp
daa
add
add
add
add
inc
add
add
inc
add
add
sub
sub
sub
jno
add
jecxz
jmp
aam
sub
or
or
or
adc
jo
ja
or
inc
add
add
sbb
add
mov
add
mov
add
mov
add
mov
add
rol
sub
add
and
inc
and
add
and
bound
add
inc
add
add
daa
add
add
inc
add
add
add
sub
icebp
adc
sub
add
das
add
add
inc
add
add
add
inc
add
add
add
xor
add
aaa
add
cmp
add
cmp
dec
cmp
add
dec
adc
jne
add
add
add
cmp
add
mov
add
add
add
(bad)
adc
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
sub
add
add
add
add
add
add
add
xor
add
add
add
iret
adc
add
add
add
add
mov
add
add
add
add
add
add
aaa
add
call
add
add
aaa
add
pusha
adc
add
add
add
add
fcomp
add
add
add
push
add
push
pop
add
add
add
xor
add
and
add
pushf
aaa
add
inc
sub
add
add
add
xor
add
add
add
aaa
add
js
add
add
add
out
add
lock
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
verw
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
or
add
or
add
or
add
or
push
add
rcpps
rcpps
rcpps
rcpps
rcpps
movsx
adc
add
adc
add
add
cmp
gs
gs
push
outs
inc
gs
outs
jo
je
gs
jb
push
dec
dec
inc
ds
pop
xor
xor
push
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
push
xor
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
jb
xor
add
je
outs
outs
xor
add
outs
jne
inc
outs
js
xor
je
js
inc
outs
js
xor
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
outs
jne
inc
outs
js
xor
je
js
inc
outs
js
xor
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
gs
xor
add
gs
xor
cmp
xor
add
jne
je
outs
xor
ins
imul
xor
add
arpl
inc
imul
ins
popa
jae
xor
add
outs
jb
xor
push
bound
xor
pop
xor
cmp
arpl
inc
imul
ins
popa
jae
xor
add
imul
popa
jo
gs
xor
pop
xor
cmp
arpl
inc
imul
ins
popa
jae
xor
pop
xor
cmp
arpl
inc
imul
ins
popa
jae
xor
pop
xor
cmp
cmp
xor
pop
xor
cmp
addr16
popa
ins
ins
pop
arpl
je
outs
ins
jae
bound
xor
pop
xor
cmp
arpl
inc
imul
ins
popa
jae
xor
pop
xor
cmp
arpl
inc
imul
ins
popa
jae
cmp
add
imul
inc
ins
popa
jo
gs
xor
cmp
imul
ins
popa
jo
gs
xor
cmp
jb
jo
je
ins
gs
inc
ins
popa
jo
gs
xor
cmp
outs
outs
je
inc
popa
ins
outs
fs
jb
pop
inc
popa
je
push
gs
arpl
bound
xor
cmp
outs
ins
bound
outs
js
pop
push
gs
arpl
outs
inc
push
inc
outs
ins
ins
imul
pop
xor
cmp
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
push
dec
inc
push
ds
pop
xor
xor
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
outs
jo
je
gs
jb
push
imul
jb
jo
push
jb
outs
jae
gs
fs
pop
xor
add
gs
xor
add
je
outs
outs
xor
add
outs
jne
inc
outs
js
xor
je
js
inc
outs
js
xor
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
je
outs
js
xor
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
gs
xor
add
gs
xor
cmp
xor
add
jne
je
outs
xor
ins
imul
xor
add
cmp
xor
pop
xor
cmp
imul
popa
jo
gs
xor
pop
xor
cmp
imul
ins
popa
jo
gs
xor
pop
xor
cmp
cmp
xor
pop
xor
cmp
addr16
popa
ins
ins
pop
arpl
je
outs
ins
jae
bound
xor
pop
xor
cmp
jns
gs
gs
fs
cmp
jns
gs
popa
ins
jne
ds
cmp
jne
arpl
jae
xor
cmp
jb
jo
je
ins
gs
inc
ins
popa
jo
gs
xor
cmp
jne
pop
xor
outs
outs
je
data16
arpl
xor
outs
jne
gs
outs
jne
ins
gs
ins
imul
jne
ins
popa
bound
xor
dec
inc
outs
jne
gs
bound
xor
push
jb
imul
add
imul
inc
outs
ins
ins
arpl
outs
pusha
xor
inc
jae
outs
arpl
imul
push
imul
push
popa
jae
inc
ja
imul
inc
outs
jne
gs
je
jb
xor
dec
imul
popa
bound
xor
outs
jo
outs
inc
imul
xor
outs
ins
fs
jb
ja
gs
imul
je
outs
arpl
add
gs
xor
jo
outs
gs
xor
je
bound
outs
je
outs
ins
xor
inc
outs
jb
xor
outs
outs
je
data16
arpl
xor
bound
je
outs
xor
outs
jne
gs
arpl
inc
outs
ja
xor
ins
outs
outs
je
inc
popa
ins
outs
fs
jb
add
popa
inc
jb
fs
imul
arpl
gs
outs
js
add
arpl
outs
js
add
ins
bound
outs
js
add
outs
jne
inc
outs
js
add
arpl
gs
inc
outs
js
add
je
outs
js
add
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
dec
inc
ds
pop
xor
xor
push
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
push
xor
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
je
outs
outs
xor
add
outs
jne
inc
outs
js
xor
je
js
inc
outs
js
xor
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
je
ins
gs
inc
ins
popa
jo
gs
xor
pop
xor
add
gs
xor
add
imul
add
outs
je
xor
ins
popa
bound
xor
add
gs
xor
cmp
xor
pop
xor
cmp
imul
popa
jo
gs
xor
pop
xor
cmp
imul
ins
popa
jo
gs
xor
pop
xor
cmp
outs
jo
je
gs
jb
inc
jne
data16
xor
cmp
jne
jo
je
gs
jb
inc
jne
data16
xor
cmp
ds
inc
jne
arpl
add
jae
jb
gs
je
bound
xor
ins
popa
bound
xor
jo
outs
gs
xor
inc
outs
jb
xor
bound
je
outs
xor
outs
jne
gs
arpl
inc
outs
ja
xor
je
ins
jo
add
outs
je
inc
popa
ins
outs
fs
jb
add
popa
inc
jb
fs
imul
arpl
gs
outs
js
add
arpl
outs
js
add
ins
bound
outs
js
add
outs
jne
inc
outs
js
add
je
outs
js
add
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
push
xor
ds
pop
xor
xor
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
je
outs
outs
xor
add
outs
jne
inc
outs
js
xor
je
js
inc
outs
js
xor
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
gs
xor
add
gs
xor
cmp
xor
pop
xor
cmp
imul
popa
jo
gs
xor
pop
xor
cmp
imul
ins
popa
jo
gs
xor
pop
xor
cmp
gs
jo
ds
cmp
jne
arpl
jae
xor
cmp
js
xor
cmp
jae
pop
xor
push
gs
jb
gs
je
bound
xor
ins
popa
bound
xor
jo
outs
gs
xor
inc
outs
jb
xor
bound
je
outs
xor
jo
arpl
gs
outs
js
add
arpl
outs
js
add
ins
bound
outs
js
add
outs
jne
inc
outs
js
add
je
outs
js
add
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
push
xor
ds
pop
xor
xor
cmp
imul
popa
jo
gs
xor
pop
xor
ins
popa
bound
xor
bound
je
outs
xor
addr16
jne
inc
outs
js
xor
je
js
inc
outs
js
xor
cmp
imul
popa
jo
gs
xor
pop
xor
ins
popa
bound
xor
cmp
imul
popa
jo
gs
xor
pop
xor
ins
popa
bound
xor
add
gs
xor
dec
outs
je
xor
cmp
cmp
xor
pop
xor
cmp
imul
popa
jo
gs
xor
pop
xor
cmp
imul
ins
popa
jo
gs
xor
pop
xor
cmp
gs
jo
ds
cmp
outs
push
gs
fs
imul
arpl
outs
ds
cmp
js
xor
push
gs
jb
gs
je
bound
addr16
ins
popa
bound
xor
jo
outs
gs
xor
inc
outs
jb
xor
bound
je
outs
xor
arpl
arpl
outs
js
add
ins
bound
outs
js
add
outs
jne
inc
outs
js
add
je
outs
js
add
imul
popa
jo
gs
xor
pop
xor
gs
xor
jne
inc
outs
js
xor
je
outs
js
xor
ins
gs
inc
ins
popa
jo
gs
xor
pop
xor
gs
xor
ins
gs
inc
ins
popa
jo
gs
xor
pop
xor
gs
xor
gs
xor
add
gs
xor
cmp
xor
pop
xor
ins
gs
inc
ins
popa
jo
gs
xor
pop
xor
ins
gs
pop
inc
ins
popa
jo
gs
xor
pop
xor
arpl
jae
ds
cmp
je
ds
push
gs
jb
gs
push
popa
addr16
gs
xor
gs
xor
ins
xor
je
outs
xor
gs
arpl
inc
outs
ja
xor
arpl
outs
js
add
ins
bound
outs
js
add
outs
jne
inc
outs
js
add
je
outs
js
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
outs
je
add
outs
je
add
outs
jne
inc
outs
js
add
je
outs
js
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
gs
xor
add
cmp
xor
pop
add
imul
popa
jo
gs
xor
pop
add
jns
gs
gs
fs
cmp
je
ds
push
gs
jb
gs
push
popa
gs
bound
add
outs
gs
add
jb
add
je
outs
outs
add
arpl
outs
js
add
ins
bound
outs
js
add
outs
jne
inc
outs
js
add
je
outs
js
add
imul
popa
jo
gs
xor
pop
xor
add
outs
fs
jne
jo
je
gs
jb
push
imul
jb
jo
push
jb
outs
jae
gs
fs
pop
xor
add
gs
xor
add
outs
jne
inc
outs
js
aaa
add
je
outs
js
aaa
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
cmp
xor
pop
aaa
add
imul
popa
jo
gs
xor
pop
aaa
add
outs
push
jb
je
push
imul
arpl
outs
ds
cmp
jae
pop
aaa
add
push
popa
addr16
add
gs
aaa
add
outs
gs
aaa
add
jb
aaa
add
je
outs
outs
aaa
add
ins
bound
outs
js
add
outs
jne
inc
outs
js
add
je
outs
js
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
outs
jne
inc
outs
js
cmp
je
js
inc
outs
js
cmp
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
gs
xor
add
cmp
xor
pop
cmp
cmp
imul
popa
jo
gs
xor
pop
cmp
cmp
js
xor
cmp
jae
pop
cmp
ins
popa
bound
cmp
jo
outs
gs
cmp
inc
outs
jb
cmp
bound
je
outs
cmp
arpl
bound
outs
js
add
outs
jne
inc
outs
js
add
je
outs
js
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
outs
jne
inc
outs
js
cmp
je
js
inc
outs
js
cmp
cmp
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
imul
popa
jo
gs
xor
pop
xor
add
gs
xor
add
gs
xor
add
gs
gs
push
outs
inc
gs
outs
jo
je
gs
jb
push
push
dec
inc
push
ds
pop
cmp
add
cmp
cmp
js
xor
cmp
imul
popa
jo
gs
cmp
ins
popa
bound
cmp
inc
outs
jb
cmp
bound
je
outs
cmp
arpl
bound
outs
js
add
outs
jne
inc
outs
js
add
je
outs
js
add
gs
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
inc
push
dec
inc
inc
pop
dec
dec
push
inc
push
inc
inc
inc
inc
pop
inc
inc
push
inc
add
pop
inc
inc
push
dec
inc
inc
pop
dec
dec
push
inc
push
inc
inc
inc
inc
pop
inc
inc
push
inc
dec
dec
pop
inc
inc
push
inc
add
pop
inc
inc
push
dec
dec
inc
dec
pop
inc
inc
push
inc
add
inc
inc
ss
inc
aaa
cmp
xor
inc
xor
inc
inc
aaa
inc
inc
xor
inc
aaa
inc
inc
inc
aaa
inc
inc
xor
inc
ss
inc
cmp
inc
add
add
add
inc
add
outs
outs
jb
inc
add
outs
fs
je
inc
add
jo
jb
dec
inc
add
inc
add
dec
inc
add
jo
popa
jns
gs
jb
inc
popa
je
push
dec
dec
inc
add
jno
gs
push
outs
inc
gs
outs
jo
je
gs
jb
push
dec
dec
inc
add
jno
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
dec
inc
add
inc
inc
pop
inc
inc
push
dec
inc
inc
dec
dec
push
inc
push
inc
inc
inc
inc
add
add
jp
inc
add
push
inc
add
je
inc
push
inc
dec
dec
add
add
add
dec
add
jae
gs
cs
dec
add
push
add
push
add
inc
inc
pop
inc
push
push
push
dec
inc
push
push
inc
push
add
jo
popa
jns
gs
jb
inc
popa
je
push
push
dec
inc
push
add
jno
gs
push
outs
inc
gs
outs
jo
je
gs
jb
push
push
dec
inc
push
add
jno
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
push
dec
inc
push
add
inc
push
pop
inc
inc
push
push
add
inc
inc
pop
push
push
inc
push
inc
dec
push
add
add
push
add
push
add
push
push
add
je
add
push
add
popa
jb
dec
push
add
push
add
popa
jb
push
add
je
pop
add
je
inc
jne
jae
jb
add
je
inc
js
jae
add
je
pop
add
je
inc
jne
jae
jb
add
je
inc
js
jae
add
ins
jne
pop
pop
add
outs
jb
pop
add
je
inc
push
jb
popa
add
jae
gs
cs
popa
je
add
je
inc
popa
je
add
fs
pop
inc
jb
gs
jb
jo
jb
gs
popa
je
add
fs
pop
inc
gs
jb
jo
jb
gs
popa
je
add
imul
jb
popa
arpl
popa
je
add
ins
gs
je
gs
ins
inc
gs
arpl
popa
je
add
gs
arpl
popa
je
add
imul
jb
popa
arpl
gs
imul
gs
arpl
outs
outs
inc
popa
je
add
jb
outs
bound
ins
jae
outs
jb
imul
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
gs
fs
jae
outs
arpl
push
jb
je
inc
jae
outs
arpl
inc
popa
ins
arpl
popa
je
inc
jb
add
jb
add
jns
outs
outs
jb
add
jns
jb
fs
je
add
outs
gs
arpl
popa
add
ins
gs
push
gs
add
je
inc
jns
gs
outs
push
gs
add
je
inc
jne
jb
outs
je
push
add
fs
dec
outs
popa
add
add
je
push
gs
je
inc
push
add
je
inc
outs
popa
bound
add
je
inc
outs
jb
popa
je
imul
ins
gs
je
dec
jae
jae
jb
gs
arpl
outs
inc
outs
popa
bound
add
je
dec
jae
jae
jb
outs
popa
bound
add
gs
arpl
popa
outs
fs
gs
bound
outs
gs
jb
xor
outs
jb
inc
ins
outs
jae
add
fs
inc
outs
jb
inc
ins
outs
jae
add
je
dec
jae
ins
outs
jae
add
fs
inc
ins
popa
jo
gs
gs
ins
pop
inc
ins
popa
jo
gs
gs
pop
inc
ins
popa
jo
gs
popa
jo
je
ins
gs
inc
ins
popa
jo
gs
gs
jae
inc
ins
popa
jo
gs
outs
je
inc
popa
ins
outs
fs
jb
pop
inc
popa
je
push
gs
arpl
add
fs
inc
popa
je
push
gs
arpl
add
popa
imul
dec
outs
inc
outs
ins
jo
gs
add
je
dec
jae
outs
ins
jo
gs
add
ins
bound
outs
js
pop
push
gs
arpl
outs
inc
push
inc
outs
ins
ins
imul
fs
push
gs
arpl
outs
inc
push
inc
outs
ins
ins
imul
fs
inc
popa
je
push
arpl
jbe
add
fs
inc
jb
outs
jb
popa
je
push
arpl
jbe
add
ins
outs
popa
fs
jb
arpl
jae
inc
jb
outs
jb
popa
je
push
arpl
jbe
add
fs
dec
jne
jo
je
popa
je
push
arpl
jbe
add
ins
outs
popa
fs
jb
arpl
jae
dec
jne
jo
je
popa
je
push
arpl
jbe
add
jae
jb
gs
outs
arpl
outs
outs
imul
outs
fs
push
add
jns
imul
jae
outs
jbe
ins
imul
add
inc
jb
add
fs
pop
inc
gs
imul
imul
arpl
jb
ins
inc
jne
add
je
jb
popa
arpl
ins
popa
jae
inc
jne
add
inc
jne
add
outs
jb
push
imul
inc
popa
arpl
outs
addr16
imul
outs
outs
je
imul
inc
popa
arpl
outs
addr16
imul
outs
jb
imul
popa
arpl
outs
addr16
imul
je
imul
gs
add
je
inc
outs
ins
add
outs
ins
ins
popa
outs
add
ins
inc
outs
ins
ins
popa
outs
add
outs
add
je
dec
gs
add
jo
outs
add
popa
inc
imul
outs
add
fs
gs
arpl
fs
jne
je
outs
jae
popa
outs
arpl
jae
je
inc
popa
je
push
outs
jne
arpl
inc
popa
outs
arpl
ins
popa
je
outs
outs
push
outs
imul
outs
jne
arpl
dec
imul
inc
jne
outs
push
arpl
gs
outs
fs
push
outs
fs
je
push
imul
add
je
inc
jne
outs
push
imul
add
je
inc
outs
ins
jne
outs
dec
gs
fs
dec
imul
gs
outs
fs
popa
inc
jb
fs
imul
ins
outs
dec
gs
fs
dec
imul
gs
outs
fs
arpl
gs
outs
js
imul
add
arpl
outs
fs
je
dec
outs
arpl
outs
fs
popa
inc
jb
fs
imul
push
imul
ins
outs
dec
outs
fs
je
push
jb
jo
outs
fs
ins
outs
fs
push
popa
add
outs
imul
addr16
popa
add
je
dec
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
je
dec
outs
imul
add
jb
pop
arpl
je
outs
ins
pop
jae
outs
jb
add
je
imul
pop
push
popa
add
outs
imul
add
je
dec
gs
popa
add
fs
popa
outs
add
push
je
imul
add
je
push
gs
arpl
outs
push
popa
outs
add
inc
gs
outs
popa
je
jb
popa
outs
add
push
popa
outs
add
je
dec
jb
outs
add
je
popa
jo
popa
jne
add
jb
jne
popa
jb
popa
jne
add
je
jne
inc
popa
jne
add
ins
push
popa
je
popa
jne
add
je
outs
ja
popa
jne
add
jbe
imul
popa
je
push
popa
bound
jae
je
pop
outs
outs
ins
popa
bound
dec
inc
outs
jne
gs
bound
dec
inc
imul
ins
add
inc
push
push
push
je
bound
inc
push
push
push
push
push
je
bound
jb
je
je
bound
jae
je
popa
bound
push
inc
outs
outs
je
outs
ins
jae
inc
jb
ja
bound
jae
je
push
imul
jae
je
push
outs
ja
gs
fs
push
imul
push
outs
inc
outs
jne
ins
add
je
dec
gs
add
imul
add
outs
je
ins
gs
imul
fs
add
gs
popa
outs
fs
add
gs
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
dec
popa
outs
fs
add
arpl
ins
add
outs
ins
add
gs
je
inc
imul
jo
popa
je
inc
imul
dec
imul
imul
add
jae
jb
inc
arpl
gs
outs
fs
outs
inc
imul
push
imul
pop
inc
popa
ins
ins
outs
outs
outs
push
imul
add
je
inc
outs
jb
gs
imul
push
je
ins
add
popa
jb
inc
popa
jae
push
je
ins
add
imul
ins
add
je
dec
popa
bound
push
je
ins
add
je
inc
gs
jne
je
gs
ins
push
je
ins
add
je
inc
outs
ins
jne
outs
dec
gs
fs
inc
gs
jne
je
gs
ins
push
je
ins
add
je
inc
outs
ins
jne
outs
dec
gs
fs
inc
gs
jne
je
gs
ins
push
je
ins
add
je
push
outs
ja
gs
fs
inc
gs
jne
je
gs
ins
push
je
ins
add
je
push
outs
ja
gs
fs
inc
gs
jne
je
gs
ins
push
je
ins
add
je
inc
ins
je
jb
popa
je
outs
addr16
outs
ja
inc
gs
jne
je
gs
ins
push
je
ins
add
popa
inc
jb
fs
imul
push
je
ins
add
je
push
imul
push
je
ins
add
je
inc
outs
jb
gs
je
ins
add
outs
je
je
ins
add
je
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
dec
popa
ins
add
je
dec
popa
ins
add
je
inc
imul
jae
je
inc
imul
jae
je
inc
arpl
gs
imul
jae
je
push
gs
popa
ins
inc
imul
ins
jo
imul
dec
outs
fs
gs
popa
ins
add
fs
gs
popa
ins
add
imul
dec
popa
ins
add
je
inc
outs
ins
jne
outs
dec
popa
ins
add
je
push
outs
jb
dec
popa
ins
add
je
jb
arpl
jae
jae
jns
popa
ins
add
ins
add
popa
je
push
imul
jne
dec
outs
add
imul
push
gs
fs
imul
imul
je
gs
fs
imul
outs
fs
imul
je
dec
imul
pop
dec
gs
imul
jns
arpl
popa
je
dec
popa
arpl
outs
add
je
je
je
dec
popa
arpl
outs
add
popa
je
dec
popa
arpl
outs
add
je
jo
ja
jb
imul
outs
add
je
push
push
inc
outs
outs
je
outs
ins
push
push
push
jno
inc
bound
add
je
pop
push
popa
ins
jne
push
jns
add
popa
jb
push
popa
ins
jne
push
jns
add
je
push
ins
popa
ins
ins
push
arpl
ins
ins
push
imul
add
je
dec
imul
jns
add
je
push
ins
popa
ins
ins
push
arpl
ins
ins
dec
imul
jns
add
je
dec
outs
je
jb
popa
ins
push
jns
add
gs
imul
jb
popa
ins
push
jns
add
jb
outs
jae
gs
jns
add
je
jns
add
je
inc
push
jns
add
jb
gs
push
jns
add
jb
outs
je
gs
jb
push
jns
add
gs
jb
push
jns
add
gs
add
jae
gs
cs
outs
jb
add
fs
pop
inc
gs
je
jb
add
fs
pop
inc
gs
gs
je
jb
add
fs
pop
push
gs
gs
je
jb
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
je
inc
jne
jb
outs
je
jne
je
jb
add
je
inc
jne
jb
outs
je
jne
je
jb
add
je
outs
fs
popa
jae
add
je
jb
popa
ins
inc
popa
je
inc
outs
ins
ins
arpl
outs
inc
popa
jae
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
outs
outs
inc
popa
jae
add
jo
imul
push
gs
imul
add
je
outs
js
popa
jae
add
outs
je
gs
outs
outs
jae
add
outs
jae
add
jo
jae
add
jb
add
inc
inc
popa
je
add
popa
je
add
je
inc
popa
je
add
je
inc
popa
jne
push
popa
je
add
gs
je
add
gs
je
add
jne
addr16
jb
ja
popa
bound
je
je
add
imul
jae
bound
je
je
add
popa
inc
jb
fs
imul
je
je
add
je
inc
push
je
je
add
je
push
imul
popa
je
add
je
push
imul
popa
je
add
jb
push
imul
popa
je
add
xor
jae
popa
je
add
je
push
popa
jb
gs
imul
push
push
inc
outs
gs
arpl
imul
inc
outs
fs
jb
je
add
ins
gs
push
jb
je
add
inc
push
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
jne
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jne
addr16
jb
ja
popa
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
jae
outs
arpl
popa
je
dec
popa
arpl
outs
gs
je
jb
bound
add
popa
jne
je
gs
imul
gs
je
jb
bound
add
jo
imul
push
arpl
gs
gs
imul
imul
jae
jb
arpl
gs
gs
imul
imul
jo
arpl
ins
push
gs
imul
imul
bound
addr16
je
jo
push
push
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jne
addr16
imul
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
push
jae
push
push
js
arpl
add
inc
bound
ins
jne
add
popa
fs
jns
add
imul
dec
imul
push
add
je
push
outs
jns
ins
inc
ins
jne
add
je
inc
outs
jb
data16
outs
ja
jb
ins
jne
add
je
dec
imul
inc
ins
jne
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
jbe
ins
imul
push
popa
ins
jne
add
fs
imul
add
je
dec
imul
add
je
dec
popa
js
popa
ins
jne
add
ins
jne
add
je
bound
imul
jne
fs
jae
jns
bound
add
je
inc
arpl
add
ins
outs
jbe
add
ins
popa
jb
outs
outs
cs
add
je
push
imul
pop
push
imul
imul
jb
popa
arpl
gs
imul
jp
add
push
imul
jne
jb
fs
imul
pop
push
ins
popa
ins
ins
push
arpl
ins
ins
push
imul
pop
pop
outs
jb
push
imul
pop
pop
outs
jb
push
imul
pop
dec
imul
imul
pop
dec
popa
js
ins
jne
push
imul
pop
dec
imul
jae
je
push
ins
popa
ins
ins
push
arpl
ins
ins
dec
imul
jae
je
inc
jne
outs
push
imul
je
ins
inc
gs
jne
je
push
jp
add
je
outs
jo
je
gs
jb
inc
jne
data16
imul
push
imul
pop
inc
ins
imul
add
je
inc
ins
imul
add
je
dec
popa
bound
inc
outs
outs
je
imul
jo
outs
jb
dec
outs
imul
add
gs
imul
pop
jae
jp
add
fs
push
gs
jp
add
jns
imul
jb
outs
jb
pop
push
gs
jp
add
jae
gs
jp
add
outs
jb
pop
jb
jae
jp
add
je
pop
outs
outs
je
imul
pop
pop
outs
outs
je
imul
gs
data16
je
outs
fs
data16
jae
gs
cs
push
imul
pop
push
popa
fs
jo
imul
imul
outs
imul
je
ins
cs
jne
je
ins
gs
gs
imul
addr16
arpl
outs
push
je
imul
je
imul
push
je
imul
jae
jb
outs
add
jae
jb
outs
add
jb
xor
outs
jb
inc
ins
outs
jae
outs
add
fs
inc
outs
jb
inc
ins
outs
jae
outs
add
jae
outs
jae
outs
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
popa
je
push
imul
popa
je
outs
outs
cs
push
outs
add
popa
fs
js
jae
imul
outs
inc
js
jae
imul
arpl
ins
push
gs
imul
je
ins
cs
jb
ja
outs
add
outs
inc
imul
add
ins
ins
outs
outs
inc
imul
outs
ins
fs
jb
ja
gs
imul
push
popa
ins
outs
add
bound
add
jne
push
pop
push
gs
arpl
push
popa
je
add
imul
add
arpl
imul
jae
je
dec
outs
arpl
imul
addr16
push
je
jb
jne
push
popa
je
add
je
push
imul
pop
push
imul
pop
dec
popa
push
jb
imul
push
pop
dec
imul
imul
je
add
je
inc
outs
jb
gs
imul
pop
push
outs
ja
gs
fs
push
imul
pop
dec
outs
addr16
add
je
inc
arpl
gs
outs
fs
outs
addr16
add
popa
je
jb
push
gs
jb
inc
jns
gs
outs
addr16
add
jo
je
gs
jb
inc
jns
gs
outs
addr16
add
je
jne
push
gs
jb
inc
jns
gs
outs
addr16
add
je
push
gs
popa
ins
dec
outs
addr16
add
jo
jb
inc
jne
data16
outs
addr16
add
ins
jne
inc
popa
jo
dec
outs
addr16
add
je
outs
addr16
add
je
dec
popa
js
outs
jo
je
gs
jb
dec
outs
addr16
add
je
dec
popa
js
jne
jo
je
gs
jb
dec
outs
addr16
add
popa
jb
jae
imul
dec
outs
outs
je
add
je
inc
ins
popa
arpl
push
push
push
arpl
arpl
bound
je
outs
xor
pop
inc
ins
imul
je
outs
xor
pop
inc
ins
imul
je
outs
xor
ins
imul
je
outs
xor
pop
inc
ins
imul
je
outs
xor
ins
imul
je
outs
xor
pop
inc
ins
imul
je
outs
xor
ins
imul
je
outs
xor
inc
ins
imul
je
outs
xor
inc
ins
imul
je
outs
xor
arpl
bound
je
outs
ss
inc
ins
imul
je
outs
aaa
pop
inc
ins
imul
je
outs
cmp
ins
imul
je
outs
cmp
ins
imul
pop
inc
ins
imul
pop
dec
outs
jne
gs
outs
jne
ins
gs
ins
imul
outs
jb
inc
ins
imul
pop
inc
outs
arpl
push
inc
dec
outs
arpl
push
dec
outs
arpl
arpl
add
je
push
popa
jae
add
ins
outs
arpl
ins
outs
bound
add
gs
inc
ins
outs
bound
add
jb
push
outs
inc
arpl
popa
ins
add
je
push
outs
ins
popa
jb
outs
outs
dec
outs
outs
inc
imul
pop
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
pop
dec
gs
push
push
inc
jno
popa
ins
add
je
dec
outs
je
jb
popa
ins
add
je
inc
outs
imul
dec
outs
je
jb
popa
ins
add
gs
add
je
inc
popa
outs
arpl
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
gs
add
je
jo
imul
imul
jb
popa
arpl
gs
imul
ins
xor
cs
ins
add
fs
ins
add
je
jo
jo
cs
ins
add
ins
ins
add
jae
jne
ins
add
jae
push
inc
outs
outs
je
outs
ins
add
inc
outs
outs
je
outs
ins
add
outs
je
imul
je
outs
ins
add
je
outs
outs
je
outs
ins
add
outs
je
outs
ins
add
gs
ins
add
fs
je
gs
ins
add
ins
gs
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
outs
addr16
ins
add
je
dec
je
ins
add
je
dec
je
ins
add
je
push
gs
arpl
dec
je
ins
add
je
push
gs
arpl
dec
je
ins
add
gs
add
jae
gs
add
jb
outs
ins
add
jb
add
je
outs
jb
add
je
outs
jb
add
je
add
je
dec
imul
jae
je
dec
popa
js
ins
jne
add
jne
add
jae
jne
arpl
popa
outs
add
outs
outs
ins
gs
outs
add
pop
inc
jb
popa
je
jb
push
jo
dec
gs
push
push
imul
add
je
inc
jb
outs
add
outs
add
je
push
outs
imul
inc
popa
outs
arpl
ins
popa
je
outs
outs
push
outs
imul
push
jb
dec
jo
outs
add
jb
outs
je
gs
fs
jb
jb
je
outs
add
jo
jb
push
gs
fs
jb
jb
je
outs
add
gs
fs
jb
jb
je
outs
add
je
push
gs
inc
ins
imul
addr16
imul
outs
addr16
imul
arpl
dec
imul
imul
add
imul
dec
imul
dec
outs
fs
imul
add
je
dec
popa
jb
imul
add
outs
add
popa
inc
outs
ins
jne
outs
add
popa
inc
jb
fs
imul
ins
outs
add
ins
jne
outs
add
ins
popa
jb
outs
outs
add
je
dec
arpl
add
ins
push
imul
jae
je
inc
popa
ins
ins
outs
outs
outs
push
imul
dec
outs
je
data16
arpl
add
je
popaw
jbe
arpl
add
pop
inc
imul
add
je
dec
popa
push
jb
imul
jae
outs
outs
add
je
dec
imul
imul
jae
outs
outs
add
jo
imul
add
je
dec
outs
arpl
imul
arpl
imul
outs
outs
add
outs
arpl
ins
popa
je
outs
outs
push
outs
imul
imul
outs
outs
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
je
dec
jb
outs
je
je
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
popa
je
push
imul
popa
je
outs
outs
add
je
outs
outs
add
pop
push
jne
je
popa
arpl
outs
add
jae
gs
cs
gs
arpl
outs
add
popa
jb
inc
jb
popa
inc
outs
ins
ins
arpl
outs
add
outs
fs
outs
ins
ins
arpl
outs
add
popa
push
popa
bound
outs
ins
ins
arpl
outs
add
jae
inc
outs
ins
ins
arpl
outs
add
imul
ins
arpl
outs
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
jb
inc
outs
ins
ins
arpl
outs
add
popa
inc
outs
ins
jne
outs
inc
outs
ins
ins
arpl
outs
add
popa
inc
jb
fs
imul
ins
outs
inc
outs
ins
ins
arpl
outs
add
ins
push
popa
jb
ins
gs
jb
outs
ins
ins
arpl
outs
add
jb
gs
outs
ins
ins
arpl
outs
add
push
arpl
ins
ins
arpl
outs
add
popa
push
outs
ja
outs
ins
ins
arpl
outs
add
outs
outs
outs
arpl
outs
add
ins
inc
outs
outs
outs
arpl
outs
add
pop
inc
fs
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
jb
popa
je
outs
outs
inc
imul
imul
pop
inc
arpl
gs
popa
jo
imul
pop
inc
jb
imul
imul
imul
pop
inc
jb
imul
arpl
gs
popa
jo
imul
inc
js
gs
imul
outs
jne
inc
js
gs
imul
jo
popa
jns
js
gs
imul
je
ins
cs
popa
je
cs
outs
ins
ins
outs
outs
add
je
outs
outs
add
outs
add
ins
gs
arpl
inc
outs
ja
add
jb
xor
push
popa
fs
push
push
inc
imul
jo
push
outs
add
ins
je
jb
dec
outs
outs
add
ins
bound
dec
outs
outs
add
ins
bound
inc
outs
jb
popa
je
outs
outs
add
je
push
je
jb
dec
outs
outs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
jb
add
jb
outs
push
je
imul
add
je
add
je
popa
jo
push
ins
gs
push
push
ins
ins
outs
outs
outs
push
imul
add
je
push
popa
bound
outs
jo
dec
imul
jae
add
js
add
jae
gs
cs
imul
gs
add
outs
je
inc
popa
ins
outs
fs
jb
addr16
pop
gs
jb
inc
ins
gs
jb
push
outs
inc
push
gs
jae
ins
popa
jb
jae
je
pop
push
popa
ins
jne
dec
gs
bound
add
je
gs
popa
ins
dec
jne
bound
add
jb
imul
gs
pop
jae
outs
ja
outs
ja
gs
fs
dec
imul
dec
outs
popa
fs
inc
jae
outs
arpl
imul
inc
jne
ins
fs
push
je
imul
fs
cmp
je
pop
bound
ins
fs
jae
outs
fs
addr16
inc
arpl
gs
outs
jb
gs
inc
gs
jne
data16
imul
jb
push
gs
jb
inc
jne
data16
outs
jne
inc
gs
je
jb
push
gs
jb
inc
jne
data16
ins
jo
gs
jb
inc
jne
data16
imul
jo
jb
inc
jne
data16
outs
jne
jo
je
gs
jb
inc
jne
data16
pop
jb
inc
jne
data16
bound
data16
inc
gs
outs
jo
je
gs
jb
push
imul
outs
ins
push
jb
outs
jae
gs
push
outs
fs
jne
jo
je
gs
jb
push
imul
outs
ins
push
jb
outs
jae
gs
inc
gs
outs
jo
je
gs
jb
push
imul
jb
jo
push
jb
outs
jae
gs
push
outs
fs
jne
jo
je
gs
jb
push
imul
jb
jo
push
jb
outs
jae
gs
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
dec
gs
outs
fs
outs
jbe
imul
inc
popa
je
push
arpl
jbe
fs
popa
outs
fs
gs
inc
outs
jb
inc
ins
outs
jae
fs
jbe
outs
je
popa
outs
fs
gs
inc
ins
popa
jo
gs
jbe
outs
je
popa
outs
fs
gs
push
gs
popa
ins
inc
popa
je
push
arpl
jbe
fs
jbe
outs
je
popa
outs
fs
gs
inc
popa
je
push
popa
outs
addr16
jbe
outs
je
popa
outs
fs
gs
dec
outs
jne
gs
jbe
outs
je
popa
outs
fs
gs
inc
outs
jb
inc
ins
outs
jae
outs
addr16
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
push
imul
popa
jo
je
ins
gs
dec
inc
outs
outs
je
imul
push
popa
jb
ins
gs
jb
push
jno
push
popa
jb
ins
gs
jb
inc
popa
outs
arpl
inc
data16
jb
push
popa
jae
inc
ja
imul
inc
ja
imul
popa
je
inc
fs
jo
gs
push
jno
inc
popa
je
inc
fs
jo
gs
push
imul
gs
inc
outs
arpl
jb
jae
je
inc
outs
ins
outs
jb
jae
je
inc
popa
arpl
jb
jne
fs
outs
ins
outs
jb
jae
je
inc
outs
jb
gs
imul
jb
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
push
gs
arpl
outs
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
jae
je
push
gs
arpl
outs
inc
popa
arpl
outs
ins
outs
jb
jae
je
inc
ins
outs
jae
inc
outs
ins
outs
jb
jae
je
inc
jb
imul
outs
jb
inc
gs
popa
jae
push
imul
outs
jb
jne
ins
outs
popa
fs
jb
arpl
jae
jb
outs
jb
inc
jne
jae
jb
jae
je
dec
jne
bound
inc
arpl
popa
ins
push
gs
jb
je
jb
dec
inc
outs
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
arpl
add
arpl
add
arpl
outs
jb
dec
outs
je
je
add
add
je
inc
push
jb
popa
jae
dec
jae
ins
imul
je
ins
cs
imul
imul
pop
dec
gs
fs
inc
jb
ins
push
arpl
fs
addr16
push
outs
je
ins
dec
imul
outs
fs
addr16
inc
outs
jne
fs
jae
je
inc
outs
jne
fs
dec
popa
je
jbe
dec
gs
outs
fs
push
gs
jo
imul
jbe
arpl
outs
je
jb
popa
arpl
add
je
inc
arpl
popa
ins
push
ins
popa
arpl
add
ins
bound
inc
gs
je
jb
inc
popa
je
dec
outs
imul
ins
bound
dec
outs
jo
je
popa
je
dec
outs
imul
ins
bound
dec
jne
jo
je
popa
je
dec
outs
imul
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
gs
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
xor
cs
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
xor
jb
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
xor
jb
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
xor
jb
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
xor
jb
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
xor
outs
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
ss
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
aaa
cs
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
cmp
jb
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
outs
jb
cmp
jb
jae
jne
arpl
add
ins
popa
jb
outs
outs
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jae
dec
jne
bound
dec
imul
arpl
outs
dec
outs
fs
jae
je
inc
js
jae
outs
addr16
inc
gs
gs
jae
je
inc
js
jae
je
jb
inc
gs
gs
push
inc
outs
outs
je
outs
ins
jae
inc
popa
jne
gs
addr16
push
gs
gs
inc
gs
gs
arpl
popa
jo
bound
imul
inc
popa
jo
bound
imul
ins
popa
jb
outs
outs
cs
jb
jo
jb
imul
popa
push
outs
imul
outs
ins
push
jb
jo
jb
imul
pop
push
popa
bound
add
jb
popa
bound
add
arpl
jae
data16
push
imul
gs
popa
outs
fs
gs
inc
outs
popa
bound
imul
jns
gs
jae
je
inc
outs
popa
bound
gs
fs
push
imul
jns
gs
dec
jne
bound
push
je
ins
gs
inc
outs
arpl
jb
je
ins
gs
push
jb
outs
jae
gs
jns
gs
push
gs
jb
push
jns
gs
fs
ins
popa
addr16
outs
fs
je
jb
bound
gs
inc
gs
arpl
je
jb
bound
gs
fs
arpl
je
jb
bound
gs
dec
imul
je
jb
bound
gs
ins
jo
arpl
imul
bound
gs
inc
jb
ins
dec
imul
arpl
ins
popa
outs
fs
jns
gs
inc
gs
gs
popa
addr16
jns
gs
inc
gs
jns
gs
inc
gs
outs
outs
jb
outs
fs
jb
fs
je
inc
jae
jb
ins
push
gs
inc
outs
js
jae
inc
ins
popa
addr16
push
gs
imul
je
imul
jb
inc
ins
outs
jae
fs
jbe
outs
je
jb
jae
inc
ins
popa
jo
gs
jbe
outs
je
jb
jae
push
gs
popa
ins
inc
popa
je
push
arpl
jbe
fs
jbe
outs
je
jb
jae
dec
outs
jne
gs
jbe
outs
je
jb
jae
inc
outs
jb
inc
ins
outs
jae
outs
addr16
jbe
outs
je
jb
jae
inc
popa
outs
arpl
inc
jbe
outs
je
jb
jae
inc
fs
outs
outs
je
jae
cmp
xor
pop
je
imul
inc
js
jae
inc
imul
inc
js
jae
push
jns
je
ins
cs
push
imul
imul
inc
outs
outs
je
outs
ins
jae
addr16
inc
outs
outs
je
outs
ins
jae
pop
addr16
popa
ins
ins
pop
arpl
je
outs
ins
jae
addr16
dec
je
ins
jae
jo
imul
jae
gs
cs
imul
inc
outs
jb
jae
addr16
dec
jo
outs
inc
outs
jb
jae
addr16
inc
outs
ins
jne
outs
jae
jae
je
inc
ins
ins
outs
ja
jae
jb
outs
dec
jb
gs
outs
ins
jne
outs
jae
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
ins
outs
jae
inc
outs
ins
ins
jne
imul
jae
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
jae
je
dec
jo
imul
imul
je
outs
outs
jae
push
je
imul
je
jo
imul
jae
popa
addr16
outs
js
jne
je
outs
jae
dec
imul
gs
inc
popa
jo
add
ins
bound
inc
gs
je
jb
push
popa
ins
jne
inc
popa
jo
add
fs
pop
inc
gs
popa
ins
jne
inc
popa
jo
add
ins
bound
dec
outs
jo
je
popa
ins
jne
inc
popa
jo
add
ins
bound
dec
jne
jo
je
popa
ins
jne
inc
popa
jo
add
ins
bound
inc
gs
je
jb
inc
jne
je
outs
inc
popa
jo
add
ins
bound
dec
outs
jo
je
jne
je
outs
inc
popa
jo
add
ins
bound
dec
jne
jo
je
jne
je
outs
inc
popa
jo
add
fs
pop
inc
gs
popa
jo
add
je
pop
push
popa
ins
jne
dec
gs
bound
jae
dec
jne
bound
inc
jne
data16
add
ins
bound
inc
jne
data16
add
je
jne
bound
dec
dec
outs
jo
je
jne
data16
add
je
jne
bound
dec
dec
outs
jo
je
jne
data16
add
ins
bound
dec
dec
outs
jo
je
jne
data16
add
fs
pop
inc
gs
jne
dec
outs
jo
je
jne
data16
add
fs
pop
push
gs
jne
dec
outs
jo
je
jne
data16
add
jae
gs
cs
imul
jne
je
ins
gs
gs
jo
jb
add
je
push
popa
jb
ins
gs
jb
add
jae
gs
inc
outs
ins
outs
jb
add
gs
jae
fs
gs
jb
fs
arpl
jae
add
ins
gs
arpl
jae
add
outs
arpl
jae
pop
je
popa
outs
jae
gs
outs
push
jb
addr16
jae
add
je
push
push
outs
jae
add
jae
jae
je
inc
popa
je
inc
imul
push
je
jo
imul
inc
jb
jne
outs
je
add
ins
jo
outs
outs
je
add
jae
gs
cs
dec
cs
outs
jb
jae
addr16
push
je
je
jae
push
popa
jae
push
je
je
jae
push
gs
jo
imul
jae
inc
gs
add
je
push
outs
ja
add
je
inc
ins
ins
outs
ja
jae
jb
outs
inc
fs
outs
ja
add
je
inc
ins
ins
outs
ja
jae
jb
outs
inc
gs
gs
push
outs
ja
add
je
inc
ins
ins
outs
ja
jae
jb
outs
push
gs
jp
push
outs
ja
add
fs
popa
jns
add
je
push
outs
je
ins
inc
popa
jns
add
popa
push
arpl
jbe
fs
popa
outs
fs
gs
popa
je
inc
outs
outs
arpl
add
je
inc
outs
jb
popa
je
addr16
dec
jne
bound
inc
outs
jb
popa
je
dec
imul
dec
bound
arpl
imul
dec
bound
arpl
gs
bound
arpl
gs
arpl
outs
ins
ins
arpl
je
push
outs
fs
jb
gs
pop
jae
outs
fs
jb
gs
inc
popa
je
push
gs
inc
gs
arpl
outs
outs
push
gs
pop
outs
outs
ins
push
gs
je
jae
je
dec
outs
je
jb
popa
ins
dec
data16
je
jae
je
dec
popa
bound
dec
data16
je
imul
jae
je
push
imul
gs
addr16
dec
imul
je
dec
imul
je
jae
je
dec
jae
gs
inc
jne
outs
inc
imul
jo
imul
pop
inc
js
ins
imul
ins
imul
imul
dec
outs
imul
imul
add
imul
je
addr16
inc
gs
jne
je
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
inc
gs
gs
arpl
jb
gs
jne
je
inc
imul
jae
ins
je
inc
gs
gs
ins
je
push
gs
gs
ins
je
ins
je
jae
je
push
popa
imul
outs
je
push
jns
je
ins
cs
popa
je
cs
jno
inc
ins
imul
jns
gs
arpl
popa
outs
popa
gs
outs
je
inc
push
popa
ins
gs
ins
gs
outs
je
jae
je
dec
outs
arpl
ins
outs
je
jae
je
inc
ins
imul
add
jb
jp
outs
je
ins
inc
ins
imul
add
popa
inc
jb
fs
imul
outs
je
ins
imul
add
jbe
jb
outs
ins
outs
je
dec
outs
imul
inc
outs
ins
jo
outs
outs
je
push
popa
jb
outs
je
addr16
push
jb
outs
jae
popa
jb
outs
je
addr16
inc
jne
jb
outs
je
push
outs
imul
outs
je
addr16
inc
outs
outs
je
jae
je
inc
outs
outs
je
inc
jb
outs
addr16
outs
inc
jb
outs
je
addr16
inc
outs
jne
je
addr16
inc
outs
ins
jne
outs
inc
outs
jne
je
jae
je
dec
popa
js
gs
arpl
outs
inc
outs
jne
je
push
gs
jb
inc
outs
jne
je
dec
outs
je
jb
jne
je
inc
push
addr16
push
je
jb
add
jae
popa
jb
add
jae
popa
jb
add
outs
jbe
jb
add
jb
popa
ins
push
outs
jb
add
outs
fs
gs
je
jb
push
gs
jb
add
je
gs
je
jb
push
gs
jb
add
fs
pop
inc
gs
outs
jo
je
gs
jb
add
fs
pop
push
gs
jne
jo
je
gs
jb
add
jae
add
outs
je
jae
add
imul
jne
inc
imul
inc
gs
arpl
outs
outs
dec
imul
jne
inc
imul
inc
gs
arpl
outs
outs
dec
imul
dec
outs
jae
add
addr16
inc
outs
ins
jne
outs
pop
inc
fs
jae
add
je
dec
outs
push
gs
fs
imul
jae
je
inc
outs
ins
ins
popa
outs
fs
imul
dec
outs
push
jb
je
push
imul
dec
outs
push
imul
push
jne
jo
outs
fs
popa
jns
jne
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
fs
pop
dec
outs
jo
je
dec
imul
jne
add
ins
outs
popa
fs
jb
arpl
jae
jne
jo
je
dec
outs
jbe
dec
gs
add
jae
gs
cs
gs
add
je
push
gs
add
je
push
gs
add
imul
js
add
je
inc
outs
outs
je
outs
ins
push
gs
add
je
inc
popa
ins
ins
outs
outs
outs
push
imul
addr16
dec
imul
je
gs
add
je
push
imul
js
add
je
fs
inc
popa
je
inc
jb
fs
imul
pop
push
arpl
gs
imul
jae
arpl
gs
imul
pop
dec
outs
ja
inc
popa
je
push
outs
ja
jae
je
inc
jb
popa
je
dec
outs
push
imul
push
gs
pop
gs
ins
outs
ja
push
push
dec
popa
js
push
jae
addr16
popa
js
push
je
imul
dec
outs
imul
add
jns
imul
add
imul
dec
popa
js
inc
popa
je
dec
outs
fs
popa
js
addr16
jo
ins
popa
js
jae
je
jo
ins
popa
js
jae
je
push
popa
bound
fs
jae
je
push
gs
arpl
dec
outs
fs
inc
imul
js
dec
gs
bound
dec
outs
fs
dec
gs
popa
addr16
outs
js
push
imul
outs
js
inc
push
outs
js
inc
outs
ins
bound
outs
js
inc
jb
jne
inc
outs
js
push
imul
inc
outs
js
addr16
inc
popa
jns
addr16
push
imul
jns
addr16
push
ins
popa
je
inc
jb
jns
dec
outs
imul
inc
jb
popa
jns
addr16
dec
je
ins
inc
jb
popa
jns
addr16
inc
jae
gs
bound
addr16
inc
outs
outs
je
popa
ins
imul
dec
popa
bound
inc
outs
outs
je
popa
ins
imul
push
gs
fs
outs
ins
jns
outs
jo
dec
jne
je
jo
jns
push
gs
arpl
outs
jns
inc
ins
outs
arpl
outs
jo
add
je
inc
popa
je
gs
add
arpl
gs
outs
outs
push
jne
jb
add
je
push
gs
outs
jb
inc
imul
jns
jae
je
dec
outs
imul
arpl
jns
outs
jo
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
push
popa
jb
je
add
je
inc
jo
ins
imul
dec
fs
je
je
add
dec
jne
ins
dec
jb
ins
jo
jns
add
add
inc
add
arpl
add
je
imul
cmp
and
add
dec
add
add
ins
add
cmp
and
add
dec
add
je
push
add
add
add
sub
outs
add
js
jo
add
je
add
add
js
arpl
add
je
imul
add
inc
add
jbe
imul
and
dec
add
outs
add
add
ins
add
outs
add
add
adc
je
dec
add
add
jne
imul
inc
add
add
je
add
imul
add
add
add
add
outs
add
jb
arpl
add
add
popa
add
add
jae
je
pop
add
push
add
add
push
add
inc
add
push
add
add
outs
add
je
imul
and
inc
add
je
popa
add
add
cmp
add
add
dec
add
outs
add
add
add
add
jae
imul
and
jae
add
jne
jb
imul
and
imul
outs
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
jne
jb
imul
cmp
add
dec
add
add
jne
ins
add
add
ins
add
inc
add
je
imul
push
add
jae
jne
ins
add
add
je
jae
cmp
add
add
arpl
inc
add
add
push
add
add
ins
add
add
and
popa
add
and
dec
add
popa
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
add
dec
add
push
add
and
dec
add
add
add
or
ins
add
add
add
push
add
ins
add
jb
dec
add
outs
add
add
add
push
add
add
add
add
and
push
add
jb
jae
imul
and
xor
add
add
add
add
add
add
inc
add
add
outs
add
inc
add
ins
add
add
jae
and
dec
add
jbe
inc
add
ins
add
and
push
add
add
arpl
and
popa
add
and
push
add
add
inc
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
add
dec
add
push
add
and
dec
add
add
add
and
add
inc
add
add
outs
add
inc
add
ins
add
add
jae
and
dec
add
jbe
inc
add
ins
add
and
inc
add
jbe
inc
add
ins
add
add
jae
and
inc
add
jbe
inc
add
ins
add
and
inc
add
add
add
jae
and
inc
add
add
and
inc
add
add
add
jae
and
inc
add
add
and
push
add
add
push
add
and
popa
add
and
push
add
add
push
add
sub
and
push
add
add
push
add
and
popa
add
and
push
add
add
push
add
sub
and
dec
add
push
add
add
jae
and
dec
add
push
add
and
push
add
add
ins
add
and
popa
add
and
push
add
add
ins
add
sub
and
push
add
add
add
and
popa
add
and
push
add
add
add
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
add
add
dec
add
push
add
and
dec
add
add
add
add
add
dec
add
inc
add
add
jne
outs
add
add
sub
and
dec
add
outs
add
add
sub
and
push
add
add
add
jns
sub
and
push
add
add
add
add
jns
sub
and
push
add
jne
jb
jae
add
jns
sub
and
inc
add
imul
jns
sub
and
push
add
je
jne
jb
add
jns
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
add
and
push
add
inc
add
inc
add
add
add
add
add
add
add
dec
add
inc
add
add
jne
outs
add
add
sub
and
dec
add
outs
add
add
sub
and
push
add
add
add
jns
sub
and
push
add
add
add
add
jns
sub
and
push
add
jne
jb
jae
add
jns
sub
and
inc
add
imul
jns
sub
and
push
add
je
jne
jb
add
jns
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
add
and
push
add
inc
add
inc
add
add
add
add
add
or
jae
add
inc
add
or
add
push
add
add
add
push
add
add
add
add
add
jbe
inc
add
ins
add
pop
push
add
inc
add
imul
popa
add
add
add
push
add
and
inc
add
dec
add
add
outs
add
je
and
push
add
je
je
imul
jae
and
popa
add
add
add
outs
add
outs
add
arpl
je
and
dec
add
jbe
add
je
add
add
or
push
add
inc
add
add
push
add
dec
add
or
add
ins
add
add
jbe
inc
add
ins
add
ja
add
add
jae
add
add
push
add
and
inc
add
dec
add
add
outs
add
je
and
push
add
je
je
imul
jae
and
popa
add
add
add
outs
add
outs
add
arpl
je
and
inc
add
je
je
add
jns
and
dec
add
outs
add
je
outs
add
add
pop
push
add
inc
add
pop
dec
add
add
add
add
add
xor
add
sub
dec
add
dec
add
add
add
dec
add
pop
inc
add
add
pop
inc
add
add
or
add
add
or
outs
add
add
add
outs
add
add
add
push
add
add
add
jns
add
push
add
add
add
add
jns
add
push
add
jne
jb
jae
add
jns
add
imul
jns
add
push
add
je
jne
jb
add
jns
add
add
add
push
add
add
push
add
sub
push
add
je
je
jae
sub
and
popa
add
and
push
add
push
add
je
popa
add
add
add
inc
add
sub
push
add
je
je
jae
sub
and
popa
add
and
push
add
dec
add
js
sub
and
inc
add
jne
outs
add
add
add
add
add
add
add
add
jae
and
inc
add
jne
outs
add
add
push
add
dec
add
add
add
ins
add
pop
add
push
add
add
dec
add
push
add
and
add
jns
sub
inc
add
je
add
add
add
add
add
add
jns
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
add
add
outs
add
add
add
push
add
push
add
dec
add
add
add
inc
add
push
add
dec
add
sub
and
popa
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
add
popa
add
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
add
popa
add
add
sub
and
and
cmp
add
or
inc
add
add
add
add
add
add
add
jae
and
ins
add
js
jo
jbe
je
imul
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
push
add
add
dec
add
push
add
and
add
jns
sub
inc
add
je
add
add
add
add
add
add
jns
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
add
add
outs
add
add
add
push
add
push
add
dec
add
add
add
inc
add
push
add
dec
add
sub
and
popa
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
add
popa
add
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
add
popa
add
add
sub
and
cmp
add
push
add
pop
inc
add
push
add
or
push
add
popa
add
add
add
add
push
add
add
push
add
sub
push
add
inc
add
sub
and
popa
add
and
push
add
push
add
je
popa
add
add
and
inc
add
jne
outs
add
add
add
add
add
add
add
add
jae
and
inc
add
jne
outs
add
add
push
add
dec
add
add
add
ins
add
pop
add
push
add
add
dec
add
push
add
and
add
jns
sub
inc
add
je
add
add
add
add
add
add
jns
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
add
add
outs
add
add
add
push
add
push
add
dec
add
add
add
inc
add
push
add
dec
add
sub
and
popa
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
add
popa
add
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
dec
add
push
add
push
add
add
inc
add
inc
add
inc
add
sub
and
dec
add
add
sub
and
cmp
add
daa
add
add
outs
add
add
add
dec
add
push
add
add
add
add
add
cmp
dec
add
inc
add
add
push
add
sub
inc
add
inc
add
sub
and
popa
add
and
inc
add
add
add
add
and
inc
add
jne
outs
add
add
add
add
add
add
add
add
jae
and
inc
add
jne
outs
add
add
push
add
dec
add
add
add
ins
add
pop
add
push
add
add
dec
add
push
add
and
add
jns
sub
inc
add
je
add
add
add
add
add
add
jns
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
add
add
outs
add
add
add
push
add
push
add
dec
add
add
add
inc
add
push
add
dec
add
sub
and
popa
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
add
popa
add
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
dec
add
push
add
push
add
add
inc
add
inc
add
inc
add
sub
and
dec
add
add
sub
and
cmp
add
add
add
outs
add
add
add
dec
add
push
add
add
add
add
add
or
outs
add
outs
add
(bad)
add
push
add
je
popa
add
pop
dec
add
push
add
adc
popa
add
jo
jbe
je
imul
add
inc
add
add
add
add
adc
push
add
add
add
add
or
dec
add
add
ins
add
or
add
add
add
dec
push
add
dec
add
inc
add
add
popa
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
add
dec
add
push
add
and
dec
add
add
add
or
popa
add
add
add
add
add
sub
pop
add
push
add
jae
add
add
pop
add
jb
imul
jae
add
add
pop
add
push
add
add
pop
add
pop
add
popa
add
push
add
pop
add
pop
add
push
add
jo
add
add
sub
pop
add
jb
imul
jo
add
add
add
daa
add
xor
jge
daa
add
jnp
xor
jge
sub
jnp
xor
jge
sub
jnp
xor
jge
sub
jnp
xor
jge
sub
jnp
xor
add
add
add
add
push
add
push
add
add
dec
add
add
add
push
add
bound
ins
add
pop
add
add
je
pop
add
add
add
xor
jge
sub
and
push
add
dec
add
inc
add
sub
jnp
xor
jge
sub
add
xor
xor
cmp
xor
xor
add
add
add
push
add
add
push
add
dec
add
add
jae
and
push
add
push
add
sub
and
push
add
dec
add
dec
add
add
jae
and
push
add
dec
add
dec
add
add
add
push
add
push
add
dec
add
add
jae
and
push
add
dec
add
inc
add
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
add
add
dec
add
push
add
and
dec
add
add
add
or
push
add
dec
add
pop
push
add
dec
add
inc
add
add
add
and
xor
and
sub
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
push
add
add
push
add
add
and
inc
add
and
dec
add
add
add
inc
add
adc
add
add
add
add
adc
jns
jns
jns
dec
add
add
or
popa
add
add
add
push
add
inc
add
add
inc
add
dec
add
je
jo
jne
je
push
add
ins
add
add
add
sbb
je
je
add
jns
push
add
ins
add
add
add
sub
je
je
add
jns
inc
add
popa
add
add
outs
add
inc
add
jb
jb
add
je
add
inc
add
je
je
add
jns
inc
add
jae
arpl
push
add
add
jne
jb
jb
add
je
add
inc
add
je
je
add
jns
inc
add
jo
popa
add
imul
add
push
add
ins
add
add
popa
add
add
add
or
dec
add
push
add
or
dec
add
inc
add
add
dec
add
dec
add
add
add
add
add
add
add
xor
jge
and
and
sub
add
add
add
xor
jge
and
and
sub
add
add
xor
cmp
add
and
and
sub
add
add
xor
cmp
add
and
and
sub
add
add
add
add
and
and
sub
add
add
aaa
add
add
and
and
sub
add
add
cmp
cmp
add
and
and
sub
add
add
cmp
cmp
add
and
and
sub
add
add
xor
xor
cmp
add
and
and
sub
add
add
xor
xor
cmp
add
and
and
sub
add
add
xor
xor
cmp
add
add
and
and
sub
add
add
sub
add
jne
je
jo
jne
je
sub
add
imul
add
cmp
and
jnp
xor
xor
jge
and
and
sub
add
add
sub
add
jne
je
jo
jne
je
sub
add
je
add
dec
add
add
add
xor
xor
jge
and
and
push
add
cmp
das
add
add
jbe
outs
add
je
jo
jne
je
add
jb
add
add
add
jbe
imul
das
add
xor
das
add
add
add
add
add
add
jae
jo
add
push
add
dec
add
add
jb
ins
add
add
js
add
das
push
add
dec
add
je
jo
jne
je
and
jne
jo
ins
add
popa
add
add
jne
arpl
arpl
add
jae
add
push
add
dec
add
je
jo
jne
je
and
jne
jo
ins
add
popa
add
add
popa
add
ins
add
jb
add
or
dec
add
xor
xor
add
push
add
push
add
add
add
or
outs
add
ins
add
add
or
outs
add
ins
add
add
or
outs
add
ins
add
add
or
outs
add
ins
add
add
or
outs
add
ins
add
add
or
jb
ins
add
add
add
dec
push
add
ins
add
jb
dec
add
outs
add
add
add
jb
jae
imul
and
xor
add
add
add
add
inc
add
push
add
add
inc
add
add
push
push
add
ins
add
jb
dec
add
outs
add
add
add
jb
jae
imul
and
xor
add
add
add
add
push
add
add
inc
add
dec
add
push
add
push
add
inc
add
add
xor
popa
add
ins
add
and
inc
add
je
outs
add
popa
add
add
add
ja
imul
push
add
add
inc
add
jae
popa
add
ins
add
and
inc
add
je
outs
add
popa
add
add
add
ja
imul
push
add
add
xor
add
add
add
add
add
add
dec
inc
add
add
add
outs
add
and
jae
jne
jb
add
add
outs
add
and
ja
popa
add
je
and
je
outs
add
add
js
imul
push
add
ins
add
jb
dec
add
outs
add
add
or
js
imul
push
add
push
add
add
bound
jne
je
je
outs
add
xor
add
inc
add
outs
add
add
je
add
ins
add
bound
add
add
add
sub
jne
jb
jb
add
je
and
push
add
ja
add
and
push
add
jne
jb
arpl
add
punpckldq
jne
je
je
outs
add
xor
add
push
add
and
inc
add
imul
bound
jne
je
je
outs
add
xor
add
push
add
and
inc
add
je
je
add
or
outs
add
ins
add
add
pop
jo
imul
jne
jb
add
outs
add
xor
add
bound
jne
je
je
outs
add
xor
add
push
add
je
je
imul
jae
add
bound
jne
je
je
outs
add
xor
add
popa
add
push
punpckldq
jne
je
je
outs
add
add
adc
imul
outs
add
imul
add
dec
add
outs
add
ins
add
jp
add
add
add
add
add
jns
add
push
add
ins
add
jb
dec
add
outs
add
and
outs
add
add
jns
dec
add
outs
add
xor
add
arpl
outs
add
add
bound
jne
je
je
outs
add
aaa
add
or
bound
outs
add
je
add
outs
add
ins
add
add
(bad)
add
bound
add
add
add
(bad)
add
bound
add
add
add
bound
add
add
add
or
bound
add
add
adc
jne
je
je
outs
add
xor
xor
add
bound
jne
je
je
outs
add
cmp
add
bound
jne
je
je
outs
add
cmp
add
inc
add
je
popa
add
add
add
ins
add
jae
add
bound
jne
je
je
outs
add
xor
xor
add
jo
outs
add
je
add
je
add
je
inc
add
js
xor
add
bound
jne
je
je
outs
add
xor
xor
add
push
add
add
jae
je
add
add
add
outs
add
jo
inc
add
js
xor
add
push
add
add
jae
je
jb
popa
add
add
outs
add
add
pop
jo
imul
jne
jb
add
outs
add
xor
add
jo
imul
jne
jb
add
outs
add
xor
add
outs
add
ins
add
add
or
outs
add
ins
add
add
ins
add
bound
add
add
add
or
bound
add
add
sbb
jne
je
jo
jne
je
and
push
add
ja
add
cmp
add
ins
add
bound
add
add
add
or
bound
add
add
and
jne
je
jo
jne
je
and
inc
add
add
jne
add
arpl
jns
cmp
add
ins
add
bound
add
add
add
or
bound
add
add
pop
dec
add
je
jo
jne
je
and
push
add
ins
add
add
add
add
(bad)
add
bound
add
add
add
or
bound
add
add
pop
inc
add
imul
inc
add
add
jne
add
arpl
jns
cmp
add
ins
add
bound
add
add
add
or
bound
add
add
sbb
jb
imul
push
add
ins
add
add
add
add
or
outs
add
ins
add
add
bound
add
add
add
push
add
ins
add
cmp
add
ins
add
bound
add
add
add
adc
outs
add
add
je
add
add
ins
add
bound
add
add
add
or
outs
add
ins
add
add
(bad)
add
bound
add
add
add
(bad)
add
bound
add
add
add
ins
add
bound
add
add
add
pop
push
add
ins
add
and
je
outs
add
add
outs
add
add
or
bound
add
add
and
outs
add
jae
jne
ins
add
add
add
outs
add
jb
add
cmp
add
ins
add
bound
add
add
add
das
push
add
ins
add
and
jae
imul
add
add
jne
ins
add
add
push
add
add
add
(bad)
add
bound
add
add
add
and
popa
add
add
jb
jns
and
push
add
ins
add
add
add
add
(bad)
add
bound
add
add
add
(bad)
add
bound
add
add
add
(bad)
add
bound
add
add
add
sub
add
je
push
add
jae
je
and
inc
add
jae
arpl
push
add
add
add
(bad)
add
bound
add
add
add
or
outs
add
ins
add
add
(bad)
add
bound
add
add
add
(bad)
add
bound
add
add
add
sbb
and
push
add
ja
add
and
push
add
add
add
(bad)
add
bound
add
add
add
(bad)
add
bound
add
add
add
sbb
popa
add
and
push
add
and
push
add
add
jns
cmp
add
ins
add
bound
add
add
add
(bad)
add
bound
add
add
add
je
popa
add
add
push
add
add
add
cmp
add
ins
add
bound
add
add
add
and
jb
imul
push
add
ja
add
and
push
add
add
add
(bad)
add
bound
add
add
add
or
outs
add
ins
add
add
(bad)
add
bound
add
add
add
(bad)
add
and
inc
add
jo
jae
add
ins
add
bound
add
add
add
(bad)
add
bound
add
add
add
adc
push
add
add
outs
add
add
add
ins
add
bound
add
add
add
or
bound
add
add
or
bound
add
add
daa
inc
add
je
je
add
jns
and
inc
add
jb
jb
add
je
and
sub
inc
add
add
(bad)
add
bound
add
add
add
je
inc
add
jb
inc
add
jne
add
add
ins
add
bound
add
add
add
ins
add
jb
and
push
add
and
dec
add
jo
jne
je
and
sub
push
add
add
(bad)
add
bound
add
add
add
bound
add
add
add
inc
add
je
imul
and
push
add
ja
add
and
sub
push
add
add
pop
inc
add
je
push
add
ja
inc
add
jne
add
add
ins
add
bound
add
add
add
sub
popa
add
add
jb
jns
and
inc
add
jo
popa
add
imul
and
sub
and
(bad)
add
bound
add
add
add
pop
inc
add
je
inc
add
jo
inc
add
jne
add
add
push
add
ins
add
popa
add
add
jne
add
add
push
add
add
arpl
outs
add
add
inc
add
jb
ins
add
add
or
xor
imul
add
add
add
imul
add
add
dec
add
inc
add
add
add
add
add
add
add
add
add
jae
and
inc
add
je
add
add
add
and
sub
inc
add
imul
outs
add
add
add
sub
and
popa
add
and
inc
add
dec
add
jo
jne
je
sub
and
sub
inc
add
dec
add
je
jo
jne
je
push
add
ins
add
add
add
add
add
jae
and
inc
add
dec
add
je
jo
jne
je
sub
and
sub
inc
add
dec
add
je
jo
jne
je
inc
add
add
jne
add
arpl
jns
sub
and
popa
add
and
inc
add
dec
add
jb
je
jp
sub
and
sub
push
add
inc
add
sub
sub
sub
inc
add
inc
add
sub
and
popa
add
and
inc
add
je
imul
push
add
ja
add
sub
and
sub
dec
add
add
sub
and
popa
add
and
dec
add
jbe
dec
add
add
sub
and
sub
push
add
dec
add
jo
jne
je
inc
add
jb
jb
add
je
sub
and
popa
add
and
push
add
ins
add
jb
inc
add
jo
jae
sub
and
sub
push
add
dec
add
jo
jne
je
push
add
ins
add
add
add
add
add
jae
and
push
add
ins
add
jb
push
add
ins
add
add
and
sub
push
add
je
je
jae
sub
and
popa
add
and
push
add
ins
add
jb
push
add
ja
add
sub
and
sub
push
add
ins
add
add
popa
add
add
add
add
add
jae
and
dec
add
jbe
add
je
add
push
add
ins
add
sub
and
sub
inc
add
je
je
add
jns
push
add
ins
add
add
add
add
add
jae
and
inc
add
je
je
add
jns
push
add
ins
add
add
and
sub
push
add
sub
and
popa
add
and
dec
add
add
outs
add
outs
add
add
ins
add
add
and
sub
inc
add
sub
and
popa
add
and
dec
add
add
outs
add
outs
add
add
jbe
sub
and
sub
inc
add
je
je
add
jns
inc
add
popa
add
add
outs
add
inc
add
jb
jb
add
je
sub
sub
sub
sub
inc
add
je
je
add
jns
inc
add
jae
arpl
push
add
add
jne
jb
jb
add
je
sub
sub
sub
add
add
jae
and
inc
add
je
je
add
jns
inc
add
jo
jae
sub
and
sub
inc
add
je
je
add
jns
inc
add
jo
popa
add
imul
sub
and
popa
add
and
inc
add
je
je
push
add
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
push
add
add
dec
add
push
add
and
inc
add
je
add
add
add
add
add
add
add
and
sub
inc
add
je
popa
add
je
add
je
add
add
add
outs
add
add
add
add
add
add
add
add
add
push
add
add
and
inc
add
and
inc
add
je
add
add
add
add
push
add
add
je
popa
add
je
add
je
add
adc
add
add
add
add
add
add
outs
add
add
dec
add
outs
add
add
add
add
pop
add
or
dec
add
ins
add
or
add
jae
jbe
add
imul
and
jae
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jb
add
je
add
add
jae
and
add
inc
add
arpl
add
add
jb
jb
outs
add
add
add
jae
je
jb
imul
add
add
arpl
arpl
add
jae
and
inc
add
ins
add
add
and
push
add
ins
add
arpl
je
add
add
and
add
add
je
and
data16
outs
add
and
add
je
add
add
sbb
outs
add
add
popa
add
add
add
jb
xor
add
push
add
ins
add
arpl
je
and
je
outs
add
add
add
add
add
sbb
outs
add
add
popa
add
add
add
jb
xor
add
inc
add
jo
outs
add
je
and
je
outs
add
add
js
arpl
add
or
ins
add
jae
add
adc
jb
outs
add
jo
inc
add
js
cmp
add
inc
add
jo
outs
add
je
and
push
add
je
push
adc
jb
outs
add
jae
add
add
add
add
adc
add
je
inc
add
js
xor
add
ins
add
jb
dec
add
outs
add
add
add
jo
outs
add
je
and
je
outs
add
add
js
arpl
add
and
inc
add
add
push
add
add
outs
add
inc
add
ins
add
add
jae
and
dec
add
jbe
inc
add
ins
add
and
inc
add
jbe
inc
add
ins
add
add
jae
and
inc
add
jbe
inc
add
ins
add
and
inc
add
add
add
jae
and
inc
add
add
and
inc
add
add
add
jae
and
inc
add
add
and
push
add
add
push
add
and
popa
add
and
push
add
add
push
add
sub
and
push
add
add
push
add
and
popa
add
and
push
add
add
push
add
sub
and
push
add
je
add
add
jae
and
push
add
je
add
and
push
add
push
add
and
popa
add
and
push
add
push
add
sub
and
push
add
dec
add
dec
add
add
jae
and
push
add
dec
add
dec
add
add
add
push
add
push
add
dec
add
add
jae
and
push
add
dec
add
inc
add
sub
and
dec
add
outs
add
je
and
popa
add
and
dec
add
outs
add
je
sub
and
dec
add
popa
add
add
add
jae
and
dec
add
popa
add
add
and
dec
add
push
add
add
jae
and
dec
add
push
add
and
push
add
add
ins
add
and
popa
add
and
push
add
add
ins
add
sub
and
push
add
add
add
add
jae
and
push
add
add
add
and
push
add
add
add
and
popa
add
and
push
add
add
add
sub
and
push
add
add
inc
add
add
jae
and
push
add
add
inc
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
add
dec
add
push
add
and
dec
add
add
add
or
inc
add
je
add
or
inc
add
jae
je
add
jns
jns
sub
add
add
and
add
inc
add
push
add
and
pop
add
add
ins
add
pop
add
add
add
add
inc
add
add
outs
add
inc
add
ins
add
add
jbe
inc
add
ins
add
and
inc
add
jbe
inc
add
ins
add
add
jbe
inc
add
ins
add
and
inc
add
add
add
add
and
inc
add
add
add
add
and
push
add
add
push
add
cmp
add
add
push
add
sub
and
push
add
add
push
add
cmp
add
add
push
add
sub
and
push
add
je
add
add
je
add
and
push
add
push
add
cmp
add
push
add
sub
and
push
add
dec
add
dec
add
add
push
add
dec
add
dec
add
add
add
push
add
push
add
dec
add
add
dec
add
inc
add
sub
and
dec
add
outs
add
je
cmp
add
outs
add
je
sub
and
dec
add
popa
add
add
add
popa
add
add
and
dec
add
push
add
add
push
add
and
push
add
add
ins
add
cmp
add
add
ins
add
sub
and
push
add
add
add
add
add
add
and
push
add
add
add
cmp
add
add
add
sub
and
push
add
add
inc
add
add
add
inc
add
add
dec
add
push
add
and
dec
add
add
add
cmovo
dec
add
jbe
inc
add
ins
add
cmovo
inc
add
jbe
inc
add
ins
add
or
inc
add
add
or
inc
add
add
cmovo
push
add
add
push
add
add
inc
add
jae
add
push
add
add
inc
add
popa
add
add
or
push
add
push
add
add
inc
add
push
add
push
add
inc
add
cmovo
push
add
dec
add
inc
add
add
inc
add
jae
je
add
ins
add
add
add
inc
add
push
add
add
inc
add
jae
add
ins
add
add
inc
add
je
add
cmovo
push
add
add
add
add
jae
add
inc
add
add
add
push
add
and
pop
add
add
ins
add
pop
add
add
pop
add
add
inc
add
add
jne
outs
add
add
cmp
add
outs
add
add
sub
and
dec
add
outs
add
add
cmp
add
outs
add
add
sub
and
push
add
add
add
jns
cmp
add
add
add
jns
sub
and
push
add
add
add
add
jns
cmp
add
add
add
add
jns
sub
and
push
add
jne
jb
jae
add
jns
cmp
add
jne
jb
jae
add
jns
sub
and
inc
add
imul
jns
cmp
add
imul
jns
sub
and
push
add
je
jne
jb
add
jns
cmp
add
je
jne
jb
add
jns
and
push
add
inc
add
inc
add
add
add
add
add
cmovo
push
add
outs
add
add
add
inc
add
outs
add
add
jns
add
inc
add
add
jae
add
jns
add
add
add
jae
add
jns
add
inc
add
add
jb
jae
add
jns
add
inc
add
jb
imul
jns
add
inc
add
popa
add
add
add
jns
add
add
add
add
add
push
add
bound
ins
add
pop
add
add
pop
add
add
inc
add
add
jne
outs
add
add
cmp
add
outs
add
add
sub
and
dec
add
outs
add
add
cmp
add
outs
add
add
sub
and
push
add
add
add
jns
cmp
add
add
add
jns
sub
and
push
add
add
add
add
jns
cmp
add
add
add
add
jns
sub
and
push
add
jne
jb
jae
add
jns
cmp
add
jne
jb
jae
add
jns
sub
and
inc
add
imul
jns
cmp
add
imul
jns
sub
and
push
add
je
jne
jb
add
jns
cmp
add
je
jne
jb
add
jns
and
push
add
inc
add
inc
add
add
add
add
add
dec
push
add
ins
add
arpl
je
and
dec
add
popa
add
add
add
add
add
add
jo
ins
add
jns
and
outs
add
and
inc
add
jae
push
add
jb
add
add
pop
inc
add
add
or
add
push
add
and
inc
add
push
add
inc
add
push
add
and
pop
add
outs
add
add
dec
add
outs
add
add
and
push
add
and
and
inc
add
push
add
and
cmp
add
cmp
pop
add
outs
add
add
dec
add
outs
add
add
ins
add
jb
dec
add
outs
add
add
add
popa
add
daa
add
pop
inc
add
arpl
imul
add
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
cmp
pop
add
outs
add
add
dec
add
outs
add
add
ins
add
jb
dec
add
outs
add
add
add
popa
add
add
inc
add
arpl
imul
add
and
inc
add
imul
add
sub
imul
add
add
add
add
jo
add
and
add
jbe
imul
add
or
push
add
push
add
add
add
add
push
add
add
add
add
add
imul
je
add
xor
add
push
add
ins
add
jb
and
inc
add
jb
jae
je
add
xor
add
push
add
ins
add
jb
and
add
add
je
imul
je
jns
add
xor
add
ins
add
jb
and
dec
add
ins
add
add
xor
xor
add
add
or
push
add
add
or
inc
add
xor
xor
add
push
add
push
add
add
add
or
inc
add
xor
xor
add
push
add
push
add
add
add
sub
add
add
outs
add
and
outs
add
je
and
popa
add
jo
ins
add
add
add
or
add
inc
add
add
push
add
je
je
imul
and
popa
add
jo
ins
add
add
add
or
dec
add
inc
add
add
cmovge
push
add
dec
add
inc
add
add
or
inc
add
push
add
or
inc
add
push
add
or
inc
add
push
add
or
inc
add
add
or
push
add
add
pop
je
popa
add
inc
add
outs
add
add
ins
add
add
adc
add
push
add
add
xor
add
inc
add
dec
add
add
add
add
outs
add
jae
add
add
outs
add
jo
inc
add
js
xor
add
push
add
arpl
je
jb
outs
add
and
inc
add
push
add
add
add
add
dec
add
and
push
add
jb
je
cmp
add
arpl
push
add
inc
add
js
xor
add
push
add
add
add
imul
jb
outs
add
and
inc
add
push
add
add
add
add
add
add
add
or
dec
add
xor
add
inc
add
dec
add
add
or
dec
add
xor
add
inc
add
dec
add
add
inc
add
dec
add
add
dec
add
add
or
dec
add
aaa
add
or
dec
add
cmp
add
inc
add
dec
add
add
or
dec
add
xor
xor
add
inc
add
dec
add
add
add
adc
outs
add
bound
outs
add
outs
add
xor
add
inc
add
jo
add
je
and
dec
add
jbe
add
je
add
and
push
add
jb
je
cmp
add
arpl
outs
add
bound
outs
add
outs
add
xor
add
je
popa
add
push
add
add
xor
add
inc
add
imul
add
add
outs
add
add
and
push
add
imul
push
add
and
push
add
je
je
imul
jae
add
add
add
add
add
outs
add
add
add
add
je
and
jae
je
popa
add
add
add
data16
add
push
add
add
add
add
dec
add
sub
or
add
je
je
imul
jae
and
sub
imul
imul
jne
jae
add
add
add
imul
and
popa
add
add
jns
jae
and
je
popa
add
add
add
imul
imul
and
outs
add
add
and
je
imul
and
jae
arpl
push
add
ins
add
jae
and
sub
imul
imul
jne
jae
add
add
add
and
outs
add
add
jb
and
je
outs
add
add
jb
outs
add
add
je
and
je
push
add
jns
jae
je
add
and
bound
popa
add
add
jb
imul
or
add
outs
add
and
outs
add
add
and
add
jae
arpl
push
add
add
add
add
adc
push
add
inc
add
js
xor
add
add
add
add
add
add
arpl
push
add
ins
add
and
push
add
imul
push
add
add
outs
add
jo
inc
add
js
xor
xor
add
push
add
ins
add
and
push
add
imul
push
add
push
add
ins
add
cmp
add
je
add
je
inc
add
js
xor
xor
add
je
add
je
inc
add
js
xor
xor
add
je
add
je
inc
add
js
xor
cmp
add
je
add
je
inc
add
js
xor
cmp
add
je
add
je
inc
add
js
xor
aaa
add
adc
add
je
inc
add
js
xor
add
adc
add
je
inc
add
js
xor
xor
add
js
je
inc
add
js
xor
xor
add
je
add
je
inc
add
js
xor
xor
add
je
add
je
inc
add
js
xor
xor
add
je
add
je
inc
add
js
xor
xor
add
je
add
je
inc
add
js
xor
xor
add
je
add
je
inc
add
js
cmp
add
je
add
je
inc
add
js
cmp
add
push
add
and
push
add
ins
add
jb
and
sub
push
add
ins
add
add
add
and
add
add
jb
imul
sub
push
add
ins
add
add
add
adc
push
add
inc
add
js
xor
add
add
add
popa
add
imul
add
add
add
outs
add
add
sub
push
add
inc
add
add
adc
push
add
inc
add
js
xor
add
add
add
popa
add
imul
add
add
add
jb
imul
sub
push
add
inc
add
add
adc
jb
outs
add
jo
inc
add
js
xor
add
add
arpl
imul
add
add
add
outs
add
add
and
ja
push
add
add
popa
add
add
jb
jns
and
ins
add
jbe
add
add
jae
and
popa
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
outs
add
bound
outs
add
outs
add
xor
add
add
outs
add
jo
inc
add
js
xor
add
add
arpl
imul
add
add
add
jb
imul
ja
push
add
add
popa
add
add
jb
jns
and
ins
add
jbe
add
add
jae
and
bound
add
add
and
and
add
add
adc
outs
add
bound
outs
add
outs
add
xor
add
je
popa
add
push
add
add
xor
add
outs
add
jo
inc
add
js
xor
xor
add
add
jae
je
add
and
push
add
add
je
jne
jo
and
inc
add
je
add
add
add
add
jns
jns
jns
sub
add
add
add
adc
add
je
inc
add
js
aaa
add
adc
jb
outs
add
jo
inc
add
js
cmp
add
dec
add
imul
popa
add
add
jns
jae
je
add
and
inc
add
jae
je
and
sub
push
add
add
add
adc
add
je
inc
add
js
xor
add
add
outs
add
jo
inc
add
js
xor
add
and
push
add
je
add
add
outs
add
add
popa
add
add
and
sub
js
add
js
sub
cmp
add
je
popa
add
push
add
add
xor
add
dec
add
je
jo
jne
je
add
add
outs
add
jo
inc
add
js
aaa
add
cmovno
push
add
and
dec
add
jns
add
je
add
je
inc
add
js
xor
add
add
outs
add
jo
inc
add
js
add
adc
jns
jae
je
add
and
dec
add
adc
add
je
inc
add
js
xor
add
arpl
push
add
inc
add
js
xor
add
push
add
add
add
push
add
jne
je
jo
jne
je
add
jb
add
adc
add
push
add
add
add
sbb
jne
jae
je
outs
add
imul
je
imul
add
add
popa
add
add
add
add
add
outs
add
add
dec
add
outs
add
add
add
add
add
and
push
add
outs
add
add
jae
and
push
add
add
je
jne
jo
and
dec
add
outs
add
and
je
outs
add
add
je
popa
add
je
and
ja
push
add
add
imul
outs
add
jae
and
jae
je
popa
add
je
jae
add
adc
push
add
inc
add
js
add
ja
add
add
add
jne
je
outs
add
add
outs
add
outs
add
arpl
je
and
sub
inc
add
outs
add
add
je
and
je
outs
add
add
outs
add
add
je
add
and
ja
push
add
add
outs
add
add
dec
add
outs
add
add
je
popa
add
je
jae
sub
add
outs
add
jo
inc
add
js
xor
xor
add
dec
add
jae
je
popa
add
add
add
add
popa
add
add
add
imul
and
sub
push
add
add
add
adc
add
je
inc
add
js
add
sbb
jne
jae
je
outs
add
and
dec
add
popa
add
add
adc
add
push
add
add
aaa
add
and
outs
add
add
je
add
and
push
add
je
je
imul
jae
add
push
add
data16
add
push
add
outs
add
jo
inc
add
js
xor
xor
add
add
outs
add
ins
add
add
push
add
add
outs
add
add
popa
add
add
jb
jns
and
push
add
ins
add
add
add
add
add
sub
cmp
add
bound
jne
je
je
outs
add
xor
xor
add
inc
add
jo
ins
add
add
ins
add
jb
imul
jo
inc
add
ja
outs
add
add
outs
add
jo
inc
add
js
xor
cmp
add
arpl
imul
add
add
add
add
arpl
push
add
add
add
outs
add
add
add
and
sub
push
add
add
add
adc
jne
je
je
outs
add
xor
xor
add
xor
cmp
add
add
or
cmp
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
adc
outs
add
bound
outs
add
outs
add
cmp
add
outs
add
jo
inc
add
js
xor
cmp
add
inc
add
arpl
imul
add
add
add
add
push
add
add
add
outs
add
add
add
and
sub
push
add
add
add
or
xor
add
add
or
xor
add
or
add
add
add
or
aaa
add
add
add
adc
outs
add
bound
outs
add
outs
add
cmp
add
outs
add
jo
inc
add
js
xor
aaa
add
inc
inc
add
je
je
add
jns
and
inc
add
add
je
and
inc
add
popa
add
add
and
push
add
ins
add
add
add
add
add
sub
cmp
add
ins
add
jb
imul
jo
inc
add
ja
outs
add
add
adc
outs
add
jo
inc
add
js
xor
add
inc
inc
add
je
je
add
jns
and
inc
add
ins
add
and
inc
add
popa
add
add
and
push
add
ins
add
add
add
add
add
sub
cmp
add
ins
add
jb
imul
jo
inc
add
ja
outs
add
add
adc
outs
add
jo
inc
add
js
xor
xor
add
je
popa
add
add
popa
add
and
inc
add
and
inc
add
popa
add
add
and
inc
add
jb
jb
add
je
and
sub
inc
add
add
add
add
add
add
add
add
add
arpl
outs
add
bound
outs
add
outs
add
aaa
add
adc
outs
add
jo
inc
add
js
xor
xor
add
push
add
je
popa
add
add
popa
add
and
inc
add
popa
add
add
and
inc
add
jb
jb
add
je
and
sub
inc
add
add
add
pop
xor
xor
xor
add
xor
xor
xor
add
arpl
outs
add
bound
outs
add
outs
add
add
adc
outs
add
jo
inc
add
js
xor
xor
add
inc
add
popa
add
add
and
push
add
jne
jb
arpl
add
add
jb
imul
imul
cmp
add
arpl
outs
add
bound
outs
add
outs
add
xor
add
bound
push
add
add
xor
add
inc
add
je
popa
add
popa
add
add
pop
inc
add
arpl
imul
add
and
inc
add
je
popa
add
popa
add
add
sbb
add
jb
and
inc
add
je
popa
add
popa
add
add
or
popa
add
add
pop
outs
add
add
inc
add
ins
add
inc
add
popa
add
add
xor
add
add
add
push
add
add
add
add
add
add
add
add
add
jae
and
inc
add
add
add
add
popa
add
add
sub
and
popa
add
and
push
add
inc
add
outs
add
sub
and
sub
push
add
inc
add
sub
and
popa
add
and
push
add
inc
add
sub
and
sub
inc
add
inc
add
sub
and
popa
add
and
inc
add
inc
add
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
push
add
add
dec
add
push
add
and
add
jns
sub
inc
add
je
add
add
add
add
add
add
jns
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
add
add
outs
add
add
add
push
add
push
add
dec
add
add
add
inc
add
push
add
dec
add
sub
and
popa
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
add
popa
add
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
push
add
add
and
inc
add
and
inc
add
je
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
jae
and
inc
add
add
add
add
push
add
jae
add
add
add
jae
and
push
add
push
add
add
add
add
add
jb
imul
jae
add
add
add
jae
and
inc
add
imul
jae
add
add
add
add
push
add
add
sub
and
popa
add
and
push
add
inc
add
outs
add
and
sub
dec
add
js
push
add
sub
and
popa
add
and
dec
add
js
push
add
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
add
je
and
push
add
inc
add
inc
add
add
add
sub
inc
add
je
add
add
add
add
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
outs
add
add
add
push
add
push
add
dec
add
add
add
inc
add
push
add
dec
add
sub
and
popa
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
popa
add
sub
inc
add
push
add
inc
add
push
add
push
add
dec
add
push
add
add
push
add
add
add
push
add
add
and
inc
add
and
inc
add
je
add
add
push
add
add
inc
add
jb
ins
add
add
inc
add
jb
ins
add
add
popa
add
je
inc
add
add
xor
add
dec
add
add
outs
add
add
or
add
outs
add
or
popa
add
je
push
add
sbb
popa
add
add
add
outs
add
ins
add
jae
imul
inc
add
popa
add
je
push
add
daa
push
add
outs
add
add
je
imul
and
inc
add
popa
add
add
imul
dec
add
jae
je
outs
add
jns
add
jae
add
add
outs
add
ins
add
xor
outs
add
add
dec
add
outs
add
add
add
jb
jb
add
je
and
inc
add
popa
add
push
cmp
inc
add
add
add
add
add
add
add
add
add
jae
and
inc
add
add
add
add
popa
add
add
sub
and
popa
add
and
push
add
inc
add
outs
add
sub
and
sub
push
add
inc
add
sub
and
popa
add
and
push
add
inc
add
sub
and
sub
inc
add
inc
add
sub
and
popa
add
and
inc
add
inc
add
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
push
add
add
dec
add
push
add
and
add
jns
sub
inc
add
je
add
add
add
add
add
add
jns
sub
inc
add
add
add
je
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
outs
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
add
popa
add
sub
inc
add
add
add
je
add
add
add
push
add
add
and
inc
add
and
inc
add
je
add
add
add
add
push
add
add
inc
add
add
add
je
add
cmovae
push
add
add
add
popa
add
add
add
outs
add
ins
add
jae
imul
push
add
ins
add
arpl
je
and
add
je
add
add
add
add
add
jo
ins
add
jns
cmp
add
add
ins
add
jb
ins
add
outs
add
add
add
outs
add
add
je
imul
and
dec
add
jae
je
outs
add
imul
ins
add
add
jb
popa
add
push
sbb
add
add
add
add
outs
add
popa
add
jns
add
xor
xor
and
sub
add
bound
jb
jne
popa
add
jns
add
and
sub
add
jb
arpl
push
add
and
sub
add
jb
imul
xor
xor
add
add
popa
add
add
xor
add
add
add
outs
add
add
xor
aaa
add
add
add
ins
add
add
xor
cmp
and
sub
add
add
jae
je
add
and
sub
add
jo
je
add
bound
add
add
xor
xor
and
sub
add
je
outs
add
add
add
xor
xor
and
sub
add
jbe
add
bound
add
add
xor
xor
and
sub
add
arpl
add
bound
add
add
add
add
push
add
add
add
add
add
add
add
jae
and
inc
add
add
add
add
push
add
jae
add
add
add
jae
and
push
add
push
add
add
add
add
add
jb
imul
jae
add
add
add
jae
and
inc
add
imul
jae
add
add
add
add
push
add
add
sub
and
popa
add
and
push
add
inc
add
outs
add
and
sub
dec
add
js
push
add
sub
and
popa
add
and
dec
add
js
push
add
and
inc
add
dec
add
and
push
add
bound
ins
add
pop
add
add
je
and
push
add
inc
add
inc
add
add
add
sub
inc
add
je
add
add
add
add
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
outs
add
je
push
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
jb
and
dec
add
inc
add
push
add
add
pop
add
add
add
add
add
push
add
add
outs
add
je
push
add
add
jb
add
dec
add
push
add
add
cmp
jae
je
outs
add
imul
ins
add
add
jb
outs
add
add
je
imul
and
inc
add
popa
add
add
imul
push
add
ins
add
arpl
je
and
dec
add
outs
add
add
add
add
add
add
jo
ins
add
jns
cmp
add
xor
xor
xor
xor
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
xor
xor
xor
xor
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
inc
push
add
ins
add
jb
ins
add
outs
add
add
imul
outs
add
imul
ins
add
add
jb
popa
add
push
add
add
popa
add
add
sbb
add
inc
add
add
popa
add
add
add
jae
and
push
add
je
add
and
dec
add
outs
add
je
and
popa
add
and
dec
add
outs
add
je
sub
and
push
add
add
add
add
jae
and
push
add
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
add
dec
add
push
add
and
dec
add
add
add
add
add
add
add
push
add
add
push
add
sub
push
add
push
add
add
add
add
add
jae
and
push
add
push
add
add
add
and
push
add
dec
add
add
jb
imul
jo
add
add
add
add
jae
and
inc
add
imul
jo
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
je
add
add
dec
add
inc
add
add
dec
add
dec
add
add
push
add
jo
add
add
add
add
jae
and
inc
add
jne
outs
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
je
add
add
dec
add
inc
add
add
add
and
xor
and
inc
add
je
add
add
jae
and
inc
add
je
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
je
and
dec
add
inc
add
push
add
add
pop
add
add
add
add
push
add
add
inc
add
je
add
dec
dec
add
and
jb
add
outs
add
add
add
add
add
add
add
add
add
jae
add
add
popa
add
je
and
xor
and
add
jns
add
(bad)
add
push
add
add
add
adc
jb
imul
jo
add
add
add
add
add
add
push
add
add
add
jae
add
add
outs
add
data16
jb
ins
add
add
imul
outs
add
imul
and
push
add
je
je
imul
jae
and
popa
add
add
add
jb
and
outs
add
and
jb
add
outs
add
add
add
add
add
add
add
outs
add
add
imul
add
or
add
dec
add
inc
add
add
push
add
sub
push
add
push
add
add
add
add
add
jae
and
pop
add
push
add
jo
add
add
and
push
add
dec
add
add
jb
imul
jo
add
add
add
add
jae
and
pop
add
jb
imul
jo
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
je
and
push
add
inc
add
inc
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
jb
add
pop
add
push
add
jo
add
add
adc
jb
imul
jo
add
add
push
dec
add
and
jbe
popa
add
add
jae
and
jb
add
outs
add
add
add
add
add
add
jae
add
add
push
add
and
push
add
je
je
imul
jae
add
and
add
dec
add
inc
add
add
push
add
jo
add
add
add
jae
and
inc
add
push
add
jo
add
add
and
inc
add
imul
jo
add
add
add
jae
and
inc
add
jb
imul
jo
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
je
and
push
add
inc
add
inc
add
add
add
sub
inc
add
je
add
add
add
add
add
and
popa
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
jb
add
inc
add
add
add
inc
add
push
add
jo
add
add
adc
jb
imul
jo
add
add
add
add
add
add
jns
daa
add
and
jbe
popa
add
add
jae
and
popa
add
add
add
outs
add
add
add
add
jbe
popa
add
ins
add
bound
ins
add
and
popa
add
and
outs
add
outs
add
and
push
add
add
add
outs
add
add
add
outs
add
add
add
add
and
dec
add
inc
add
add
push
add
sub
push
add
push
add
add
add
add
add
jae
and
dec
add
push
add
jo
add
add
and
push
add
dec
add
add
jb
imul
jo
add
add
add
add
jae
and
dec
add
jb
imul
jo
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
je
and
push
add
inc
add
inc
add
add
add
sub
inc
add
je
add
add
add
add
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
outs
add
je
push
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
jb
add
add
dec
add
inc
add
add
popa
add
add
add
jae
and
push
add
je
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
add
dec
add
push
add
and
dec
add
add
add
adc
push
add
push
add
add
add
adc
jb
imul
jo
add
add
jnp
add
and
jbe
popa
add
add
jae
and
outs
add
and
jb
add
outs
add
add
add
outs
add
and
je
push
add
add
add
je
add
add
outs
add
je
push
add
add
ins
add
popa
add
add
add
add
add
add
je
aas
add
xor
outs
add
je
and
push
add
arpl
outs
add
add
jns
and
push
add
outs
add
add
je
imul
cmp
add
ins
add
bound
add
add
add
cmp
add
je
imul
je
add
add
jbe
add
popa
add
add
add
popa
add
imul
jae
cmp
add
jae
je
add
and
push
add
add
je
and
inc
add
je
add
add
xor
je
jne
popa
add
add
jb
imul
push
add
add
add
add
add
add
add
add
add
(bad)
add
bound
add
add
add
xor
sub
pop
add
jae
sub
dec
add
outs
add
add
and
je
outs
add
add
add
outs
add
add
jns
cmp
add
inc
add
add
popa
add
add
add
popa
add
imul
jae
and
jo
add
and
inc
add
jns
cmp
add
cmp
add
ins
add
imul
outs
add
and
inc
add
jae
je
cmp
add
sub
add
je
jne
popa
add
add
popa
add
imul
jae
and
push
add
and
inc
add
je
add
add
sub
outs
add
je
imul
and
push
add
jae
je
add
and
inc
add
jae
je
cmp
add
pop
add
jae
je
add
add
jns
daa
add
and
push
add
ins
add
add
cmp
add
ins
add
bound
add
add
add
pop
inc
add
imul
push
add
add
add
add
sbb
ins
add
jb
and
push
add
jbe
imul
jae
cmp
add
ins
add
bound
add
add
add
and
jne
jb
jb
add
je
and
imul
add
and
push
add
je
add
add
sub
add
jb
and
je
outs
add
add
add
add
add
popa
add
add
jae
cmp
add
ins
add
bound
add
add
add
dec
add
outs
add
add
add
add
add
add
add
add
popa
add
add
jae
cmp
add
push
add
ins
add
jb
ins
add
outs
add
add
add
outs
add
outs
add
imul
and
inc
add
je
popa
add
sbb
imul
push
add
js
je
inc
add
js
xor
add
jb
imul
push
add
js
je
inc
add
js
xor
add
add
je
add
push
add
ins
add
jb
ins
add
outs
add
add
add
outs
add
je
add
add
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
push
add
add
add
inc
add
add
dec
add
inc
add
dec
add
add
push
add
add
add
add
ins
add
pop
add
push
add
and
push
add
push
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
je
and
inc
add
inc
add
and
inc
add
inc
add
dec
add
inc
add
dec
add
add
add
ins
add
pop
add
push
add
and
push
add
push
add
inc
add
add
add
add
add
and
add
add
popa
add
add
add
ins
add
popa
add
add
add
sub
add
dec
add
inc
add
add
add
add
add
imul
ja
imul
and
add
ins
add
je
add
add
dec
add
add
add
add
add
jb
outs
add
and
je
push
add
add
add
popa
add
add
add
add
add
add
add
outs
add
and
ja
popa
add
je
and
je
outs
add
add
outs
add
je
imul
add
add
adc
outs
add
je
imul
add
or
outs
add
add
or
outs
add
ins
add
add
daa
push
add
ins
add
jb
dec
add
outs
add
add
add
push
add
dec
add
inc
add
add
test
add
dec
add
inc
add
add
add
add
add
add
add
add
add
jae
and
inc
add
je
add
add
add
and
sub
inc
add
imul
outs
add
add
add
sub
and
popa
add
and
inc
add
dec
add
jo
jne
je
sub
and
sub
inc
add
dec
add
je
jo
jne
je
push
add
ins
add
add
add
add
add
jae
and
inc
add
dec
add
je
jo
jne
je
sub
and
sub
inc
add
dec
add
je
jo
jne
je
inc
add
add
jne
add
arpl
jns
sub
and
popa
add
and
inc
add
dec
add
sub
and
sub
push
add
inc
add
sub
sub
sub
inc
add
inc
add
sub
and
popa
add
and
inc
add
je
push
add
and
sub
dec
add
add
sub
and
popa
add
and
dec
add
add
sub
and
sub
push
add
dec
add
jo
jne
je
inc
add
jb
jb
add
je
sub
and
popa
add
and
push
add
inc
add
jo
jae
sub
and
sub
push
add
dec
add
jo
jne
je
push
add
ins
add
add
add
add
add
jae
and
push
add
push
add
ins
add
add
and
sub
push
add
je
je
jae
sub
and
popa
add
and
push
add
push
add
ja
add
sub
and
sub
push
add
ins
add
add
popa
add
add
add
add
add
jae
and
dec
add
jbe
push
add
ins
add
sub
and
sub
inc
add
je
je
add
jns
push
add
ins
add
add
add
add
add
jae
and
inc
add
je
je
push
add
and
sub
push
add
sub
and
popa
add
and
dec
add
add
push
add
ins
add
add
and
sub
inc
add
sub
and
popa
add
and
dec
add
add
inc
add
jbe
sub
and
sub
inc
add
je
je
add
jns
inc
add
popa
add
add
outs
add
inc
add
jb
jb
add
je
sub
sub
sub
sub
inc
add
je
je
add
jns
inc
add
jae
arpl
push
add
add
jne
jb
jb
add
je
sub
sub
sub
add
add
jae
and
inc
add
je
je
inc
add
jo
jae
sub
and
sub
inc
add
je
je
add
jns
inc
add
jo
popa
add
imul
sub
and
popa
add
and
push
add
inc
add
add
push
add
dec
add
add
add
ins
add
pop
add
push
add
add
dec
add
push
add
and
add
jns
sub
inc
add
je
add
add
add
add
add
add
jns
sub
inc
add
add
add
je
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
outs
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
add
popa
add
sub
inc
add
add
add
je
add
add
add
push
add
add
and
inc
add
and
inc
add
je
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
jae
and
inc
add
je
add
add
add
and
sub
push
add
push
add
add
add
add
jae
and
push
add
push
add
ja
add
push
add
add
add
add
add
jb
imul
jae
add
add
add
jae
and
inc
add
imul
outs
add
add
push
add
add
add
add
add
push
add
add
sub
and
popa
add
and
push
add
ins
add
jb
inc
add
outs
add
jb
popa
add
add
add
add
add
popa
add
push
add
sub
and
popa
add
and
dec
add
js
imul
ins
add
push
add
outs
add
add
sub
and
sub
push
add
push
add
add
add
add
add
jae
and
push
add
ins
add
jb
push
add
jbe
imul
sub
and
sub
inc
add
imul
jo
add
add
add
add
jae
and
inc
add
imul
jo
add
add
add
push
add
dec
add
add
add
ins
add
pop
add
add
je
and
push
add
inc
add
inc
add
add
add
sub
inc
add
je
add
add
add
add
add
add
add
outs
add
add
outs
add
je
push
add
je
add
add
add
add
outs
add
je
push
add
add
add
add
jb
sub
inc
add
je
add
add
add
add
add
jb
and
dec
add
inc
add
push
add
add
pop
add
add
add
add
add
push
add
add
push
add
popa
add
add
ins
add
and
inc
add
je
popa
add
sbb
add
add
jb
imul
imul
xor
add
inc
add
imul
and
push
add
je
popa
add
add
add
add
sbb
add
add
jb
imul
imul
xor
add
push
add
ins
add
jb
dec
add
outs
add
add
add
bound
ins
add
and
push
add
add
add
add
add
add
je
and
push
add
outs
add
add
add
add
jb
jb
outs
add
and
ja
popa
add
cmp
and
add
dec
add
add
adc
add
add
jae
popa
add
add
add
add
sbb
push
add
popa
add
add
add
popa
add
add
add
add
cmp
add
add
outs
add
jne
je
and
push
add
jo
outs
add
je
and
inc
add
je
add
add
add
add
push
add
cmp
add
add
jne
je
jo
jne
je
and
push
add
jo
outs
add
je
and
inc
add
je
add
add
add
add
push
add
cmp
inc
add
popa
add
add
add
add
add
outs
add
je
and
inc
add
je
add
add
add
add
push
add
inc
and
and
dec
add
ins
add
add
and
outs
add
and
dec
add
outs
add
and
inc
add
ins
add
add
je
imul
and
dec
add
add
jae
cmp
and
add
and
and
dec
add
ins
add
add
and
outs
add
and
dec
add
jo
jne
je
and
inc
add
je
je
outs
add
and
inc
add
jo
jae
cmp
and
add
dec
add
ins
add
add
and
outs
add
and
dec
add
jo
jne
je
and
push
add
ins
add
add
add
popa
add
jae
cmp
and
add
add
add
jne
ins
add
add
and
outs
add
and
dec
add
jo
jne
je
and
inc
add
je
popa
add
add
outs
add
add
add
cmp
and
add
add
add
jne
ins
add
add
and
outs
add
and
dec
add
je
jo
jne
je
and
inc
add
je
je
outs
add
and
inc
add
jo
jae
cmp
and
add
and
and
dec
add
ins
add
add
and
outs
add
and
dec
add
je
jo
jne
je
and
push
add
ins
add
add
add
popa
add
jae
cmp
and
add
add
add
jne
ins
add
add
and
outs
add
and
dec
add
je
jo
jne
je
and
inc
add
je
popa
add
add
outs
add
add
add
cmp
and
add
add
add
jne
ins
add
add
and
outs
add
and
inc
add
popa
add
add
add
add
jne
je
je
outs
add
and
inc
add
jo
jae
cmp
and
add
add
add
jne
ins
add
add
and
outs
add
and
inc
add
popa
add
add
add
add
popa
add
add
and
inc
add
jo
jae
cmp
and
add
add
add
jne
ins
add
add
and
outs
add
and
inc
add
popa
add
add
add
add
add
add
add
outs
add
add
add
cmp
and
add
add
add
add
add
popa
add
add
add
add
jne
arpl
arpl
add
jae
and
cmp
or
outs
add
jae
add
adc
add
bound
outs
add
jb
add
cmp
add
add
add
add
jo
jne
je
push
add
jo
outs
add
je
and
jae
jne
arpl
arpl
add
jae
and
cmp
pcmpeqb
imul
outs
add
je
add
add
add
add
add
popa
add
add
add
add
jne
arpl
arpl
add
jae
and
cmp
aas
dec
add
add
add
add
add
je
jo
jne
je
push
add
jo
outs
add
je
and
jae
jne
arpl
arpl
add
jae
and
cmp
aaa
push
add
ins
add
jb
dec
add
outs
add
add
jae
and
popa
add
add
popa
add
add
add
jne
outs
add
imul
add
dec
add
data16
jb
ins
add
je
imul
add
push
add
ins
add
jb
dec
add
outs
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
bound
popa
add
imul
add
outs
add
outs
add
add
imul
add
add
add
cmovb
popa
add
add
jb
jns
add
data16
jbe
imul
outs
add
adc
outs
add
add
ins
add
outs
add
add
jae
outs
add
add
add
push
add
ins
add
jb
dec
add
outs
add
add
outs
add
imul
ins
add
or
jbe
ins
add
js
add
outs
add
push
add
add
outs
add
add
inc
add
outs
add
add
je
add
add
add
add
add
push
add
add
add
add
add
and
add
add
inc
add
sub
add
popa
add
add
pop
add
outs
add
add
ins
add
outs
add
add
jo
add
daa
pop
add
ins
add
add
jae
pop
add
popa
add
add
jb
jns
add
jo
add
and
add
popa
add
add
pop
add
outs
add
add
add
jo
add
add
add
add
add
push
add
ins
add
aaa
inc
add
je
je
add
jns
and
dec
add
add
outs
add
outs
add
add
add
add
outs
add
jae
cmp
and
add
and
add
or
sub
and
sub
add
add
add
push
add
inc
add
pop
push
add
add
add
add
add
add
add
sub
add
push
add
dec
add
je
jo
jne
je
and
jne
jo
ins
add
popa
add
add
add
and
add
and
push
add
je
je
jae
and
inc
add
outs
add
jb
popa
add
add
add
add
inc
add
outs
add
add
inc
add
imul
push
add
je
je
jae
and
push
add
add
and
outs
add
add
and
push
add
je
je
jae
and
push
add
add
or
add
add
and
outs
add
add
and
push
add
ja
add
and
push
add
add
or
push
add
add
pop
inc
add
imul
push
add
ja
add
and
push
add
add
adc
jb
imul
jae
add
sub
outs
add
add
and
push
add
ja
add
and
inc
add
outs
add
jb
popa
add
add
or
push
add
add
add
push
add
ins
add
jb
and
push
add
ja
add
and
dec
add
js
add
dec
add
js
push
add
add
imul
add
and
add
add
push
add
adc
jns
jns
das
add
dec
add
add
add
push
inc
add
jns
outs
add
push
add
outs
add
jae
and
jb
add
add
add
outs
add
jo
ins
add
je
add
add
add
jns
je
add
and
jb
add
add
add
inc
dec
add
jo
jne
je
and
jb
add
outs
add
je
and
jb
add
add
jbe
add
add
jb
outs
add
and
add
jbe
imul
add
push
add
jae
imul
add
popa
add
arpl
add
add
daa
push
add
push
add
add
add
add
js
arpl
add
je
imul
add
inc
add
jns
outs
add
push
add
outs
add
jae
and
ja
jb
imul
and
arpl
outs
add
jo
ins
add
je
add
aas
dec
add
je
jo
jne
je
and
jb
add
outs
add
je
and
ja
jb
imul
add
and
je
outs
add
add
add
imul
add
add
sar
test
das
imul
or
and
add
adc
add
push
add
add
add
push
push
and
add
add
adc
add
push
push
and
add
or
adc
inc
add
dec
add
add
ins
push
add
adc
ins
add
jmp
adc
add
adc
adc
adc
adc
add
adc
or
add
add
adc
gs
add
add
add
dec
add
add
add
add
adc
or
add
adc
add
add
and
adc
add
or
ins
adc
adc
adc
adc
jno
adc
add
add
and
or
or
or
and
add
jno
ins
add
dec
add
icebp
add
add
add
xor
push
and
add
sub
add
add
add
std
add
add
and
adc
or
pop
add
gs
or
add
adc
add
adc
or
adc
adc
gs
gs
sbb
adc
add
add
add
add
add
or
adc
gs
adc
push
add
add
add
adc
add
adc
add
add
add
add
add
jge
and
push
add
add
add
sbb
sbb
adc
sub
add
push
adc
adc
sbb
adc
add
or
add
add
add
push
sbb
adc
add
push
add
mov
or
add
or
or
and
or
add
or
add
sbb
sbb
add
sbb
adc
push
push
adc
or
add
add
add
add
add
jge
or
adc
add
or
or
add
add
add
or
add
add
adc
push
pop
add
sbb
add
add
adc
or
add
add
add
add
adc
pop
and
or
and
push
sbb
adc
or
push
adc
adc
add
pop
adc
sbb
push
push
and
add
and
add
push
adc
add
sbb
and
or
and
ins
push
and
adc
add
add
add
sbb
add
add
push
push
and
add
xor
pop
adc
push
push
push
push
push
adc
adc
adc
adc
adc
adc
adc
add
xor
add
sub
and
sbb
and
adc
add
sub
add
add
and
sbb
add
add
test
add
or
adc
or
adc
adc
icebp
sbb
pop
adc
adc
adc
adc
pop
pop
pop
adc
add
adc
adc
push
or
or
or
or
push
push
push
push
push
or
adc
add
add
or
or
adc
adc
add
add
add
add
add
add
xor
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
and
add
adc
adc
sbb
sub
pop
and
add
add
adc
adc
adc
or
add
adc
or
xchg
add
add
push
add
or
and
sbb
sbb
adc
adc
push
adc
push
or
add
adc
adc
push
add
adc
add
push
or
add
sbb
cdq
or
add
sbb
and
test
sbb
adc
add
add
add
or
push
or
adc
add
add
add
add
add
or
push
adc
adc
adc
add
adc
add
add
push
add
test
sub
adc
add
and
adc
mov
sbb
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
sbb
sbb
and
add
je
sbb
cdq
add
adc
add
sbb
push
adc
adc
push
push
push
or
sbb
sbb
and
sbb
sbb
add
lods
pop
and
adc
add
adc
adc
adc
add
or
or
add
push
push
sbb
push
push
sbb
inc
pop
push
push
push
adc
adc
add
js
adc
push
push
or
adc
or
sbb
push
adc
fst
sbb
and
xor
xor
add
adc
add
sbb
and
adc
push
push
push
push
and
add
add
and
add
add
pop
add
add
add
push
or
add
adc
pop
or
or
pop
add
add
adc
leave
add
or
and
add
add
adc
or
add
and
or
or
pop
add
add
adc
pop
or
or
pop
add
add
adc
or
or
or
pop
add
add
adc
or
or
or
pop
add
add
adc
add
add
push
add
add
jge
add
or
adc
or
jge
pop
or
or
add
jge
add
jge
add
push
add
or
add
add
pop
add
jl
or
add
add
push
add
add
jl
pop
add
add
add
add
test
or
add
or
add
or
mov
or
add
adc
add
adc
sbb
and
add
sub
or
cmp
add
jno
and
add
ins
add
in
push
and
add
sub
and
add
xor
and
add
xor
and
add
gs
and
add
cmp
and
add
cmp
and
add
add
adc
add
add
or
and
add
add
add
add
add
and
add
or
adc
add
or
and
adc
add
sbb
and
and
or
or
push
and
add
and
or
and
add
pop
push
and
add
sub
xor
and
add
xor
cmp
pop
add
sub
pop
adc
push
adc
adc
push
adc
adc
adc
add
adc
adc
jge
and
adc
cmp
add
add
xor
and
add
dec
add
push
or
adc
adc
push
adc
add
inc
add
add
jns
sbb
add
add
add
push
push
add
adc
add
sub
and
add
sbb
adc
sub
push
push
push
adc
and
fst
sbb
and
sbb
sbb
and
sbb
sbb
and
pop
or
push
push
push
adc
adc
adc
add
add
sbb
and
adc
push
push
add
add
push
add
add
xor
pop
add
and
push
adc
adc
pop
sub
push
adc
ins
adc
sbb
add
add
add
xor
or
add
or
add
adc
adc
pop
pop
pop
adc
adc
add
push
adc
or
and
xor
or
or
or
pop
and
add
adc
add
or
or
push
and
add
sbb
adc
adc
add
add
add
add
add
xor
or
add
or
add
adc
icebp
sbb
pop
adc
add
add
adc
add
sub
add
sub
jne
add
sbb
adc
adc
or
or
add
or
add
adc
icebp
sbb
pop
adc
adc
add
cdq
add
sbb
pop
sub
add
sub
jne
add
sbb
adc
or
add
xor
or
add
or
add
adc
xor
add
adc
add
sub
and
adc
add
add
cmp
add
sbb
adc
and
sbb
sbb
and
sbb
sbb
and
and
adc
add
and
adc
or
add
and
pop
or
or
pop
add
add
adc
add
or
add
add
add
or
test
or
sbb
and
add
adc
cdq
or
adc
adc
and
fst
and
pop
add
add
add
adc
adc
add
add
or
pop
adc
and
adc
add
add
add
add
add
sbb
sbb
and
pop
cmp
sub
xor
push
adc
push
adc
mov
push
adc
mov
sbb
and
sbb
sbb
and
sbb
sbb
and
xor
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
sbb
and
add
jge
sbb
sbb
and
add
jge
add
adc
add
adc
push
push
push
push
push
xor
sbb
and
and
add
add
add
add
adc
adc
adc
add
adc
and
add
and
adc
adc
push
push
adc
adc
or
add
or
add
cdq
push
and
add
sub
icebp
push
push
adc
add
add
add
add
add
sbb
sbb
and
or
or
add
cdq
adc
adc
adc
adc
push
and
add
sbb
and
add
xor
cmp
push
pop
add
add
jge
pop
add
adc
push
pop
or
or
or
adc
push
push
or
pop
add
add
adc
pop
add
add
add
adc
push
or
add
jge
add
add
or
pop
add
sub
push
adc
or
add
adc
adc
add
lods
or
add
adc
or
add
or
mov
pop
add
xor
add
adc
add
mov
pop
add
adc
pop
add
pop
add
sbb
pop
add
adc
add
add
add
pop
or
add
adc
add
mov
push
adc
sbb
add
push
adc
sbb
add
dec
add
add
sbb
pop
add
or
add
add
add
pop
or
push
push
adc
cdq
add
add
add
push
add
push
adc
or
sbb
cdq
adc
push
sbb
add
adc
pop
pop
or
add
add
adc
sub
jl
add
jge
and
adc
adc
push
adc
or
and
adc
adc
push
adc
or
xor
add
adc
add
push
add
or
adc
or
jl
and
add
jge
pop
or
add
add
adc
sub
add
or
adc
or
add
add
adc
sub
add
popf
add
push
adc
add
or
adc
add
add
add
sub
add
add
or
adc
add
or
add
adc
sub
or
adc
or
add
sub
add
add
adc
adc
add
adc
xchg
adc
adc
add
int
adc
adc
add
adc
and
add
sbb
and
adc
add
and
and
adc
add
and
pop
or
adc
xchg
adc
adc
push
and
adc
pop
or
adc
or
adc
adc
and
or
sub
adc
sub
sysret
push
or
adc
adc
and
sub
and
adc
adc
or
xor
mov
mov
pop
jg
aad
cmp
xor
dec
xor
add
imul
and
dec
add
outs
add
add
ins
add
outs
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
adc
push
adc
dec
add
add
push
or
push
adc
push
adc
push
or
adc
adc
or
adc
sbb
add
add
adc
or
push
adc
adc
push
adc
adc
push
adc
push
adc
or
adc
sub
add
adc
xor
add
adc
add
push
adc
or
push
adc
adc
push
adc
add
push
adc
sbb
add
adc
and
add
adc
adc
enter
add
push
adc
sub
push
adc
adc
push
or
add
gs
or
adc
add
adc
adc
push
adc
push
adc
push
add
adc
xor
xor
pop
push
adc
or
push
adc
add
adc
adc
adc
adc
push
add
adc
and
push
adc
push
adc
add
adc
push
push
pop
push
adc
or
push
adc
or
push
adc
add
adc
sub
push
add
adc
and
adc
and
adc
and
add
jne
or
add
adc
add
add
adc
and
add
add
pop
adc
sbb
or
add
push
add
add
sbb
adc
and
add
and
and
add
sub
and
add
cmp
and
add
cmp
and
add
or
or
and
add
push
sbb
adc
sbb
adc
and
add
or
and
adc
or
add
adc
add
add
or
and
adc
or
sbb
or
add
adc
and
adc
and
add
or
adc
add
sbb
adc
add
or
cmp
add
adc
adc
adc
adc
add
adc
and
add
or
add
adc
add
sbb
add
adc
cmp
adc
or
adc
cmp
push
and
push
adc
push
sbb
add
add
or
or
add
adc
les
add
add
or
add
adc
add
or
add
or
add
or
sbb
adc
or
sbb
add
add
sub
adc
sub
adc
or
adc
adc
adc
adc
adc
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
pop
add
add
add
outs
ins
popa
jb
outs
outs
add
push
add
sbb
ins
popa
jb
dec
outs
outs
imul
push
outs
data16
popa
jb
add
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
cmp
cmp
aaa
xor
sub
sub
sub
sub
fs
xor
add
or
add
xor
xor
xor
xor
add
add
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
push
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
dec
inc
push
and
popa
ins
gs
jb
and
xor
add
push
outs
ins
popa
jb
outs
outs
cs
outs
jb
xor
cmp
gs
gs
push
outs
inc
gs
outs
jo
je
gs
jb
push
push
dec
inc
push
ds
pop
cmp
add
aaa
add
xor
ins
popa
jb
outs
outs
cs
outs
jb
xor
cmp
gs
gs
push
outs
inc
gs
outs
jo
je
gs
jb
push
dec
dec
inc
ds
pop
xor
xor
add
add
xor
jb
outs
outs
cs
outs
jb
xor
cmp
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
push
dec
inc
push
ds
pop
xor
xor
add
add
xor
outs
ins
popa
jb
outs
outs
cs
outs
jb
xor
cmp
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
dec
inc
ds
pop
xor
xor
add
add
xor
jb
outs
outs
cs
outs
jb
xor
cmp
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
push
xor
ds
pop
xor
xor
add
add
xor
jb
outs
outs
cs
outs
jb
xor
cmp
gs
gs
push
outs
push
outs
fs
jne
jo
je
gs
jb
push
dec
push
xor
ds
pop
xor
xor
add
add
ss
outs
ins
popa
jb
outs
outs
cs
imul
outs
jo
je
gs
jb
push
imul
jb
jo
push
jb
outs
jae
gs
fs
pop
xor
add
cmp
outs
ins
popa
jb
outs
outs
cs
imul
dec
jne
jo
je
gs
jb
push
imul
jb
jo
push
jb
outs
jae
gs
fs
pop
xor
add
or
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
add
add
add
pop
add
add
xor
add
add
je
and
jne
arpl
dec
dec
inc
inc
dec
dec
dec
push
push
pop
push
push
dec
inc
pop
push
push
inc
push
push
cmp
imul
je
ins
outs
addr16
jb
outs
outs
inc
bound
dec
outs
je
addr16
je
and
arpl
imul
add
add
loopne
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
jns
enter
fwait
call
add
bound
add
adc
add
add
jae
add
arpl
outs
add
add
add
and
outs
add
add
jns
dec
add
outs
add
xor
add
arpl
outs
add
aas
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
sbb
add
add
add
add
add
jae
add
arpl
outs
add
add
add
and
imul
push
add
js
je
inc
add
js
xor
add
add
je
aas
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
xchg
add
ins
popa
jb
outs
outs
and
ins
popa
jb
dec
outs
outs
imul
push
jns
je
ins
or
arpl
imul
inc
jb
popa
je
and
jb
or
ins
je
outs
outs
imul
jb
gs
or
jo
jb
das
dec
arpl
and
dec
outs
jbe
jb
gs
dec
push
push
and
ins
popa
jb
push
dec
push
and
xor
or
popa
outs
je
push
outs
ja
jb
dec
inc
push
and
xor
or
arpl
outs
and
push
sub
xor
inc
popa
je
gs
and
outs
imul
popa
je
and
and
ins
jne
and
push
outs
push
jo
jb
addr16
dec
and
push
xor
outs
inc
jae
ins
popa
jb
outs
outs
imul
jp
or
ja
jae
ins
popa
jb
outs
outs
imul
jp
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
str
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
enter
ins
dec
arpl
xchg
pusha
inc
jg
inc
pop
add
add
adc
add
js
add
pop
add
cmp
add
add
add
add
push
inc
add
je
je
add
jns
add
add
and
outs
add
add
dec
add
outs
add
add
outs
add
imul
ins
add
add
bound
popa
add
imul
add
outs
add
outs
add
add
imul
add
add
gs
inc
add
data16
jbe
imul
outs
add
in
add
adc
outs
add
add
ins
add
outs
add
xor
add
or
outs
add
add
ja
or
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
out
add
inc
outs
bound
add
add
add
fild
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
pop
push
or
or
or
or
or
or
or
or
or
or
or
fild
inc
add
add
add
push
or
femms
push
push
push
pi2fw
or
pi2fw
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
add
or
mov
add
adc
add
add
adc
inc
add
add
add
add
add
add
add
pop
or
add
inc
add
add
add
add
push
or
add
add
add
add
inc
adc
and
or
jno
rcl
xchg
rcl
adc
and
push
or
push
adc
push
pop
sbb
mov
and
mov
ss
push
pop
loope
mov
jecxz
movs
test
ret
mov
mov
je
jne
les
sbb
add
add
add
add
add
add
add
pop
add
dec
adc
add
add
add
push
or
add
add
add
add
add
and
push
inc
popa
jno
and
push
adc
mov
jb
shl
push
adc
xor
mov
inc
xor
jae
xor
fiadd
or
add
add
add
add
add
loop
inc
or
add
add
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
sbb
pop
mov
mov
push
xor
js
movs
ror
mov
push
dec
movs
outs
xchg
outs
cmc
ss
in
test
mov
movs
inc
inc
cmps
pop
inc
pop
aam
div
ss
repnz
jle
fistp
inc
(bad)
movs
inc
pop
cmps
xchg
inc
pop
aam
inc
mov
icebp
mov
fdiv
test
hlt
test
cli
xchg
jg
hlt
mov
xchg
or
push
xor
mov
icebp
mov
hlt
test
hlt
std
enter
cwde
cmp
or
push
es
sbb
aas
test
sbb
js
hlt
ins
jp
push
jle
dec
pop
mov
ss
sar
cli
dec
sbb
hlt
test
sti
or
dec
or
push
push
jle
mov
(bad)
div
sahf
xor
adc
xchg
cmp
loope
cmp
pusha
arpl
and
jg
mov
mov
icebp
test
iret
retf
mov
inc
int3
jle
xchg
(bad)
cmps
push
cmp
(bad)
push
xchg
pop
xor
dec
dec
sbb
cld
mov
or
loope
cld
push
arpl
and
or
daa
stc
xchg
ret
aam
retf
jmp
mov
daa
test
dec
mov
retf
jno
jge
cmp
pop
lea
and
jl
out
or
push
add
xchg
adc
xchg
scas
xchg
loopne
xor
dec
aas
sbb
retf
popa
lock
jl
pop
lea
inc
aas
movs
ret
xchg
push
clc
aam
(bad)
movs
inc
pop
in
loope
and
dec
repz
test
sbb
aas
sub
lock
jle
xor
lea
xchg
jecxz
arpl
jmp
clc
dec
das
sbb
repnz
lock
jl
out
or
push
add
ror
dec
clc
fs
jae
test
sbb
std
daa
fdiv
clc
mov
(bad)
cmps
push
xor
das
mov
push
sbb
aas
sub
or
sar
xor
(bad)
loop
xor
pop
das
sbb
xchg
pop
sbb
pop
data16
or
push
add
xor
cli
push
mov
cmp
pop
lea
inc
xchg
inc
loope
clc
ss
push
mov
cmps
adc
pop
cld
pop
out
or
push
add
xor
in
loope
clc
xor
(bad)
cmps
push
xor
inc
mov
push
sbb
rcr
pop
shl
push
ror
push
js
ds
icebp
test
hlt
cmps
jo
loop
xor
pop
das
sbb
push
clc
pop
icebp
imul
std
sub
clc
mov
ds
mov
cmps
adc
ja
cmps
imul
mov
dec
(bad)
or
mov
inc
aas
movs
dec
test
sar
aam
(bad)
xor
movs
dec
test
sar
aam
(bad)
xor
movs
dec
test
sar
aam
(bad)
xor
movs
dec
test
sar
aam
(bad)
xor
ds
push
pop
pop
cmp
push
sbb
outs
retf
idiv
lahf
or
push
or
test
fild
fldenv
ret
cs
xchg
pop
xchg
cmp
sbb
xor
sbb
mov
sbb
(bad)
aas
cli
xchg
pop
xor
enter
sbb
xchg
icebp
test
mov
sbb
aam
mov
arpl
movs
icebp
test
mov
daa
mov
retf
pop
mov
(bad)
lds
movs
test
mov
cmp
fidiv
push
imul
aad
dec
mov
mov
xor
add
and
adc
add
add
and
adc
call
sub
pop
push
fwait
jmp
retf
jmp
mov
pop
sub
xchg
xchg
(bad)
rcl
inc
inc
xchg
xchg
ins
in
lods
cmps
sbb
in
ss
or
xchg
inc
push
inc
rcr
add
dec
and
add
pusha
pop
clc
cdq
ret
retf
pop
sahf
retf
xchg
sbb
mov
into
jle
mov
ds
ficom
ret
icebp
mov
pop
xor
mov
inc
pop
sub
jo
adc
inc
out
sbb
xor
adc
fst
jp
enter
jp
pusha
push
inc
lds
adc
fyl2x
lds
push
pop
leave
in
inc
dec
sbb
or
les
add
rol
sbb
jbe
sbb
mov
inc
fist
fsqrt
ror
aas
push
push
and
mov
jae
mov
int3
shr
jns
and
pop
pop
mov
mov
lds
(bad)
mov
mov
in
xchg
hlt
mov
mov
pushf
cvtpi2ps
pop
ds
inc
rol
mov
inc
outs
or
mov
adc
sbb
dec
cs
push
(bad)
or
mov
out
inc
fs
stos
mov
xchg
jne
(bad)
mov
mov
xchg
xchg
(bad)
leave
and
(bad)
cli
pop
not
cmps
and
mov
add
fiadd
test
loop
xchg
out
sbb
les
(bad)
or
test
push
ins
mov
loop
dec
push
dec
imul
add
push
movs
rol
mov
sub
jno
outs
push
(bad)
xor
jmp
les
jecxz
iret
mov
mov
(bad)
add
and
or
or
xor
call
xchg
daa
pop
mov
or
enter
cmp
movs
jmp
adc
cmp
outs
aaa
sub
inc
pop
push
fs
div
enter
nop
dec
into
stc
push
movs
in
gs
cmps
inc
xor
pop
and
not
mov
pop
(bad)
repz
(bad)
sbb
xor
sub
cmp
xchg
movs
nop
les
mov
xor
gs
stc
xor
mov
push
xchg
mov
push
icebp
jae
xor
fsub
(bad)
cmc
pop
dec
push
mov
and
sub
add
push
push
mov
fcomp
jmp
xchg
push
mov
pop
jmp
retf
xor
add
clc
call
cmp
jl
or
loope
icebp
sub
xchg
adc
cmps
out
scas
mov
mov
pushf
xor
cld
repz
adc
imul
into
xchg
loopne
jmp
xor
xchg
push
into
loope
mov
jge
or
jmp
and
fadd
dec
inc
iret
cmp
shr
cmp
cmps
lods
xchg
es
or
mov
sahf
mov
mov
retf
call
cli
sub
push
pop
push
jl
aam
aam
dec
mov
mov
jmp
movs
adc
or
add
add
adc
add
add
and
and
js
js
cmps
xchg
pushf
mov
sbb
out
and
popf
out
outs
cmp
mov
fnsave
mov
mov
mov
sbb
test
and
jno
shl
mov
xchg
dec
aam
movs
xor
mul
and
cdq
fdivr
data16
test
xor
add
mov
sbb
(bad)
and
sub
mov
jl
push
out
cdq
sbb
movs
iret
jg
jge
dec
std
ins
xor
movs
(bad)
pop
stc
mov
outs
xchg
popa
je
in
mov
mov
rol
add
cmp
ins
shr
add
sub
xor
mov
ret
ss
cmp
aam
lea
inc
add
xchg
push
in
jae
add
retf
sub
mov
nop
arpl
rol
xchg
repz
mov
jae
(bad)
lea
fwait
repz
loope
pop
adc
imul
fwait
jne
jecxz
call
jno
sub
jb
std
jl
pop
test
push
push
dec
jne
jns
loop
rcr
push
dec
ins
into
mov
xor
data16
call
leave
ja
or
jae
and
mov
(bad)
imul
and
stos
scas
int3
push
retf
or
or
fisttp
stc
sub
sub
imul
cmps
arpl
sbb
fcmovb
pushf
pop
mov
jns
daa
shrd
lods
(bad)
jb
data16
enter
stos
or
cmps
adc
dec
push
xor
dec
or
ss
pop
jp
imul
iret
inc
outs
outs
(bad)
push
rcr
lea
xor
push
stos
xchg
or
mov
lods
repnz
les
and
popa
adc
sub
aad
adc
test
or
jmp
jns
xchg
jne
sub
mov
int3
push
xchg
call
push
fucom
in
dec
and
sub
push
xor
into
jne
pop
xchg
jnp
dec
rcr
inc
sbb
mov
jne
xor
push
jl
jl
(bad)
xor
dec
push
shl
xor
inc
ss
mov
daa
jno
jbe
call
mov
movs
xchg
mov
push
(bad)
fldcw
popa
fisubr
lock
xor
pusha
or
or
push
pop
(bad)
mov
dec
inc
pop
mov
or
mov
popa
loopne
mov
push
dec
pop
ja
ins
rol
dec
pop
sub
fdivrp
sbb
and
movs
adc
or
xchg
sar
mov
dec
mov
push
mov
and
pop
lods
pop
popa
cmps
xchg
call
outs
and
(bad)
push
test
adc
cmp
and
add
jo
pop
push
dec
int3
outs
lods
mov
out
jae
pushf
dec
into
jp
xchg
dec
or
movs
mov
imul
not
and
aas
lahf
mov
mov
dec
or
std
cmp
xor
mov
or
push
popa
mov
imul
stos
sbb
leave
por
jmp
sub
mov
movs
sbb
mov
xchg
mov
imul
pop
push
push
lds
dec
aam
sub
push
push
push
push
mov
test
jae
aam
mov
sub
movs
adc
add
pop
inc
ret
mov
sbb
es
aad
data16
pop
ins
outs
jne
and
pusha
out
out
jge
je
dec
(bad)
test
imul
fldcw
pusha
es
cwde
std
xor
add
fnclex
cmp
cmp
rol
or
fwait
fwait
and
pop
mov
ret
popf
fdiv
(bad)
in
fdiv
mov
fmul
lods
jnp
pop
add
loope
call
stos
retf
lods
cld
repz
xor
aam
outs
jns
or
xor
lds
loop
gs
fisubr
xlat
je
xchg
sbb
rcr
jge
jg
sub
mov
cmp
cmps
cdq
cld
aad
or
or
xchg
add
adc
and
inc
shl
push
xor
inc
xor
test
jg
inc
inc
add
dec
rcr
cmp
push
in
mov
xor
push
cdq
outs
jb
(bad)
cld
or
ja
pop
mov
mov
cmp
jmp
jae
mov
or
daa
or
jle
cs
xor
sub
dec
mov
or
xchg
ins
repnz
sbb
mov
loopne
pop
pop
or
test
xor
mov
cmp
inc
out
es
xchg
in
rol
sub
lds
aaa
cwde
into
jns
xor
std
fdiv
fild
push
xchg
mov
leave
(bad)
call
inc
add
shl
mov
lds
pop
dec
or
lahf
xor
fldcw
or
into
lods
movs
jo
sbb
(bad)
pop
fs
xchg
dec
xchg
adc
cmps
gs
cmp
js
imul
out
mov
jno
dec
add
add
or
push
outs
cmps
xor
inc
dec
movs
fsubr
push
(bad)
out
das
inc
sbb
clc
in
pop
or
retf
daa
dec
and
into
out
add
cmps
or
sub
sbb
in
aad
inc
mov
add
adc
add
add
and
adc
add
iret
sbb
leave
call
cmc
jno
cld
jo
push
xor
push
call
mov
je
or
push
scas
stos
stos
lods
stos
xchg
int
pop
sub
test
mov
jae
pop
xchg
mov
pushf
ss
leave
mov
mov
stos
pusha
sahf
mov
sbb
loop
push
mov
dec
inc
xchg
stc
mov
and
movs
je
xchg
push
rcl
jle
inc
mov
cmp
or
add
popa
mov
xchg
dec
dec
loope
xchg
mov
or
sub
sub
mov
and
stc
lds
rcr
shl
xor
int3
shl
sbb
add
dec
out
aam
jbe
xchg
(bad)
retf
cmp
jmp
in
inc
(bad)
mov
ret
jmp
imul
loopne
movs
or
push
lea
aad
sahf
mov
pop
xchg
jmp
into
ins
xor
xor
push
mov
lahf
adc
pop
mov
ds
icebp
dec
push
neg
sti
cwde
push
sub
sbb
outs
push
cmp
test
mov
and
(bad)
sbb
(bad)
loop
mov
xor
out
ror
scas
adc
fs
daa
push
js
loopne
out
add
and
cwde
popa
bnd
jp
repz
xchg
in
rol
daa
push
scas
or
add
mov
mov
pop
pop
or
je
gs
arpl
in
(bad)
sbb
cmp
gs
pop
xchg
(bad)
pop
xor
int
out
or
or
pop
call
mov
adc
dec
fisub
cdq
psubb
sub
nop
(bad)
fistp
outs
xchg
pusha
rcr
push
push
cmps
adc
arpl
int
movs
sbb
pop
jae
stos
cs
aad
loopne
jecxz
aam
and
shr
inc
xchg
xchg
xchg
inc
push
pop
jge
push
inc
sub
int3
sbb
jns
jno
bound
add
xor
pop
dec
and
or
pop
dec
jmp
jne
xchg
sub
iret
pop
jl
test
les
fidiv
xor
cmc
adc
je
je
fmul
mov
mov
mov
sahf
inc
ror
out
outs
fsubp
mov
xchg
js
mov
cmp
mov
aam
push
sti
imul
or
popa
into
sub
enter
inc
adc
(bad)
push
add
(bad)
push
add
mov
cmp
fsubrp
sbb
mov
jp
popa
mov
rol
mov
mov
xchg
pop
push
out
lods
outs
jns
mov
jae
mov
(bad)
outs
pusha
loopne
inc
(bad)
leave
stos
or
push
retf
icebp
xor
sahf
sub
xchg
stos
mov
xchg
mov
ins
aam
inc
push
or
xor
mov
sbb
mov
push
xlat
push
mov
sub
push
shl
mov
mov
dec
sub
dec
aaa
dec
ja
dec
pushf
(bad)
lea
cmp
xor
pushf
pop
fcmovnu
repnz
mov
rol
mov
lahf
call
ret
addr16
mov
js
xor
cs
sbb
dec
push
aaa
push
mov
imul
mov
(bad)
jno
cwde
out
push
pop
mov
pushf
(bad)
popa
xchg
les
jo
xchg
push
push
test
push
push
mov
xchg
mov
jae
push
mov
or
dec
aam
sub
mov
ret
push
add
retf
jns
clflush
push
jmp
cmp
dec
cmp
ficom
lds
scas
cmc
ss
in
jae
leave
outs
adc
push
push
add
aam
jmp
rol
xor
push
ins
sbb
inc
sbb
cmps
jl
imul
loopne
mov
xor
push
push
lods
inc
in
inc
cmp
dec
aaa
std
icebp
jb
inc
popa
sub
xor
ss
sar
xor
push
jmp
inc
call
pop
repnz
pop
nop
pop
pop
ja
popa
jmp
je
aas
in
push
mov
xchg
jmp
gs
mov
jmp
xor
sub
movs
add
pop
loopne
scas
xchg
xchg
ficom
sahf
xor
ja
ror
les
xor
xor
mov
es
cli
mov
mov
icebp
lods
int3
popa
jae
psrld
and
adc
fnstcw
mov
out
adc
retf
dec
fidivr
cwde
mov
mov
push
rcr
bound
sbb
pop
repz
fwait
pop
outs
inc
pop
je
clc
pusha
pop
(bad)
(bad)
xchg
mov
inc
movs
inc
retf
data16
dec
jmp
or
xchg
pop
dec
push
add
test
(bad)
or
jmp
test
popf
add
fcomip
mov
(bad)
retf
mov
fst
lds
mul
push
mov
fistp
jbe
sbb
cmc
dec
cmp
sub
dec
dec
fwait
jno
rcl
lods
add
or
add
or
xchg
inc
sbb
cmp
idiv
in
ror
push
rcl
enter
call
jb
cs
cmps
jp
jb
cmp
int3
mov
jns
add
inc
mov
outs
xor
sbb
aaa
inc
sub
enter
cmp
add
and
dec
mov
pop
inc
lds
hlt
adc
push
leave
lahf
out
sbb
cmps
pop
fidivr
inc
into
push
mov
xchg
sbb
fiadd
add
imul
fild
imul
add
inc
or
add
add
adc
add
das
push
cli
pop
pop
mov
fs
dec
ins
leave
push
ins
add
sub
ins
xor
jbe
jns
ror
out
mov
and
lods
loope
test
pop
inc
pop
clc
mov
leave
jne
fst
push
int
stos
jge
test
adc
or
idiv
mov
mov
push
fidiv
in
test
mov
mov
aam
sub
fidivr
test
pop
stos
sub
(bad)
pop
sub
push
lods
inc
sbb
aaa
loope
inc
adc
fcmovnb
(bad)
mov
sbb
(bad)
int
cmp
fwait
dec
fcomp
adc
lds
jb
rol
mov
pusha
dec
(bad)
call
ss
mov
mov
mov
sub
retf
xchg
and
push
xchg
ret
jecxz
inc
xchg
pop
lahf
fldenv
ror
bound
icebp
stos
in
sbb
stos
cmc
cmps
cs
je
sub
sti
lods
push
mov
lods
mov
jb
shl
lahf
retf
int3
pop
stos
mov
sub
pop
pop
mov
ins
inc
in
ins
ins
push
ins
(bad)
mov
and
jb
(bad)
mul
dec
cmp
ret
not
add
movs
adc
jae
sub
inc
pop
xchg
fsubr
jecxz
dec
cli
dec
les
mov
(bad)
mov
jns
dec
pop
out
cmps
jno
mov
mov
pop
fs
jbe
inc
scas
cmp
test
inc
xor
pusha
add
mov
push
cdq
push
jo
dec
push
(bad)
rcl
sbb
mov
test
push
xchg
mov
loope
dec
mov
and
pop
in
pop
das
inc
and
inc
ins
jns
jno
push
push
dec
lds
out
xchg
(bad)
jne
je
call
xor
aad
jbe
imul
xor
pop
cwde
outs
aad
cli
test
into
inc
cli
xlat
rep
(bad)
clc
jecxz
sbb
xor
fdiv
cmp
(bad)
loopne
push
(bad)
jmp
sbb
(bad)
mov
mov
sbb
push
and
xchg
add
(bad)
push
add
(bad)
fucomi
jno
xchg
mov
ret
sbb
test
xchg
jecxz
jnp
std
imul
imul
outs
stos
xor
sbb
jne
jmp
xor
cmps
cwde
cmc
xor
push
mov
popf
lahf
mov
test
push
dec
dec
(bad)
aam
ret
fldcw
mov
inc
into
lahf
cmp
and
arpl
fadd
dec
fimul
jl
test
call
push
add
cld
inc
fidivr
and
out
lods
fnsave
mov
jno
test
fld
fsub
ja
ret
xchg
adc
jmp
xchg
or
inc
sbb
add
cmc
adc
aam
and
adc
dec
and
imul
scas
mov
idiv
and
push
pop
mov
test
inc
int3
pop
adc
icebp
push
fwait
push
gs
mov
in
outs
shl
std
aad
sbb
sbb
jae
clc
inc
push
popa
mov
push
inc
in
xor
test
jp
ss
ins
jmp
xchg
aam
jmp
pop
pushf
inc
xchg
push
pop
jnp
cmp
jecxz
stos
jo
push
cs
stc
mov
stos
add
mov
retf
stos
jo
hlt
xchg
xchg
inc
dec
loopne
sbb
fnsave
pop
out
jb
cmp
or
push
arpl
js
in
push
inc
rol
xor
add
sub
add
pop
cmps
mov
ror
pop
or
sbb
fwait
mov
mov
mov
(bad)
adc
inc
pop
dec
retf
mov
sub
lods
(bad)
cs
adc
ss
jae
cmp
jae
push
dec
pop
pop
adc
shl
call
gs
or
dec
pop
push
bound
shl
fiadd
inc
or
repnz
ss
loopne
mov
inc
mov
arpl
jo
mov
push
push
int3
adc
push
or
xchg
(bad)
rol
fcomp
hlt
fstp
inc
in
mov
jnp
scas
push
ret
dec
dec
(bad)
inc
mov
sbb
lods
iret
cmp
movs
les
inc
mov
mov
lods
sbb
cs
mov
movs
fsubr
lods
leave
cdq
stos
cs
js
stos
retf
cmc
lock
inc
adc
mov
sbb
rcl
sub
call
xor
aaa
push
mov
sbb
push
lods
push
inc
dec
(bad)
mul
mov
sub
xchg
aas
(bad)
popf
imul
adc
ficomp
sub
call
pusha
jbe
mov
add
sbb
inc
or
add
add
adc
add
mov
cs
mov
ins
je
aad
into
jne
sbb
fs
popa
lods
and
cwde
jmp
mov
sub
movs
popa
cmp
jae
pop
xor
inc
pop
cs
push
inc
adc
mov
jbe
scas
dec
push
in
jmp
inc
xor
xor
movs
sbb
pop
test
mov
or
in
stos
sbb
cmp
mov
ss
or
push
and
cmc
mov
inc
ja
push
or
dec
add
test
jle
or
add
imul
adc
sbb
adc
xchg
xor
adc
xor
test
inc
sub
dec
and
ret
or
push
push
sub
and
arpl
test
inc
test
(bad)
adc
hlt
mov
and
mov
xlat
inc
mov
inc
arpl
mov
mov
iret
cmps
jbe
inc
mov
in
lods
pop
xchg
cmp
outs
icebp
or
mov
xchg
mov
add
fsub
jo
nop
pop
sar
outs
nop
jmp
and
adc
add
fisttp
in
clc
test
cmp
xchg
sub
push
retf
dec
or
stos
aad
or
cli
jo
sub
fld
scas
mov
test
hlt
cmc
jae
sub
mov
fwait
dec
dec
dec
(bad)
mov
and
into
sub
lods
inc
dec
leave
shr
outs
loope
or
ds
ficom
loopne
sbb
js
ret
out
das
mov
repnz
enter
sbb
adc
pop
sub
or
clc
xor
addr16
icebp
(bad)
mov
adc
aam
shl
jmp
pop
mov
add
dec
cmp
fwait
or
in
xchg
inc
push
jb
mov
fwait
push
fimul
and
loop
push
ja
out
dec
jecxz
test
clc
xor
sub
pushf
jp
push
sbb
jge
add
imul
add
pop
add
mov
(bad)
cs
cmp
sub
pop
xor
(bad)
mov
movs
aaa
jle
daa
shr
adc
mov
movs
xchg
mov
and
pop
not
add
push
mov
push
sbb
pop
add
jmp
mov
sub
out
aam
inc
enter
or
(bad)
adc
retf
lods
mov
adc
push
or
or
add
test
or
sbb
push
mov
sbb
popf
dec
and
add
adc
inc
push
test
adc
lea
pop
pop
ds
neg
out
rcr
add
fnstsw
add
xchg
xchg
mov
icebp
push
shl
mov
lds
mov
je
aas
es
into
xor
imul
int3
(bad)
arpl
arpl
cmp
cmp
pop
xchg
test
int3
(bad)
xchg
in
mov
aaa
mov
mov
cmp
clc
xor
cmp
sub
retf
inc
outs
data16
jmp
sbb
dec
xchg
mov
cmp
pop
data16
pop
jne
jae
dec
and
jb
push
sar
add
jl
aaa
mov
jl
jae
fsub
repz
cmp
jne
dec
dec
sub
cmp
xchg
mov
ins
loope
inc
jle
fst
push
pop
hlt
sbb
sub
psubd
ret
sbb
pop
daa
rcl
sub
in
pushf
dec
leave
cdq
stos
mov
push
enter
frstor
mov
into
or
sbb
mov
xor
mov
jno
and
fldenv
sub
ficomp
or
mov
add
dec
test
pop
inc
jge
sub
add
and
adc
add
icebp
sub
inc
xchg
call
mov
ss
ret
inc
dec
call
or
das
call
jmp
lods
fnsave
outs
mov
sub
push
in
aad
inc
dec
lods
mov
js
adc
add
ret
sub
mov
pop
mov
dec
ja
inc
inc
add
mov
add
outs
sahf
(bad)
pop
sub
jmp
push
mov
std
inc
inc
xchg
aam
adc
add
ficom
std
inc
add
mov
and
xchg
add
(bad)
push
add
push
pop
ins
push
xor
or
and
addr16
daa
and
push
test
push
xchg
test
cmp
mov
xchg
add
stos
or
cmps
test
retf
and
mov
call
pop
sahf
mov
sub
mov
or
or
enter
add
mov
adc
push
sti
adc
fsubr
out
jecxz
movs
gs
mov
jge
hlt
fs
out
cld
adc
test
mov
mov
add
or
xchg
std
aas
imul
inc
jnp
mov
inc
or
add
lods
pop
dec
ffree
out
or
or
jmp
xor
sar
int
mov
cdq
cs
push
sbb
pop
cmp
mov
push
push
push
out
call
cli
mov
cmc
mov
fist
lds
mov
icebp
mov
cwde
in
js
push
pusha
(bad)
sahf
mov
xchg
xchg
enter
pop
adc
data16
or
push
push
hlt
aam
ja
push
idiv
test
fisubr
and
(bad)
(bad)
call
outs
push
(bad)
dec
sti
mov
or
fsub
cs
in
and
push
mov
xchg
sbb
mov
in
call
arpl
mov
sub
(bad)
xchg
repz
jmp
icebp
adc
inc
sbb
and
enter
xor
lds
cmc
lock
addr16
and
pop
mov
mov
and
xor
lods
(bad)
xchg
int3
xchg
sbb
repz
jecxz
jle
enter
mov
sub
pop
pushf
jno
sti
test
add
lea
adc
mov
ja
inc
and
sub
in
and
inc
xchg
(bad)
push
or
test
pop
mov
(bad)
retf
in
mov
mov
popf
test
pushf
mov
push
xor
or
adc
in
inc
add
inc
retf
push
fisubr
and
inc
add
test
inc
or
mov
aaa
test
jp
inc
mov
inc
jb
fs
push
sbb
push
jmp
stos
or
push
pop
outs
mov
cmp
sbb
xchg
dec
pushf
out
xor
(bad)
mov
xchg
leave
lock
cmp
cs
enter
int
mov
stos
sbb
cmc
mov
inc
jecxz
scas
cwde
cmc
int3
mov
sub
(bad)
scas
xlat
fs
cmp
(bad)
xchg
inc
outs
and
scas
push
pop
push
xchg
popf
fdivr
sahf
jg
and
shl
fcomip
imul
push
stc
bound
ss
xor
mov
pop
int
jb
jmp
out
sub
stos
clc
pop
xchg
shl
push
cmp
popf
jne
mov
div
bound
and
movs
jl
mov
fdiv
test
cmp
mov
lock
cmp
in
cmp
iret
arpl
sahf
(bad)
adc
outs
nop
jmp
adc
add
or
(bad)
pop
loope
inc
xchg
or
cmp
out
mov
aas
push
icebp
mov
sbb
iret
shr
adc
leave
xor
inc
mov
aas
mov
jmp
in
lods
or
pop
ins
fwait
sub
movs
adc
mov
cmp
xlat
aad
leave
xchg
mov
gs
(bad)
sub
aad
sub
cmp
mov
fistp
or
loopne
cmp
sbb
inc
fcomp
jp
outs
sub
das
ficom
ss
mov
outs
jo
jbe
add
xchg
or
pop
adc
pop
adc
sub
cmp
pop
fs
cs
mov
pop
jmp
stos
ret
jno
pop
and
xor
lods
mov
in
int3
mov
push
push
mov
jge
dec
or
cmp
xchg
mov
test
add
lea
adc
mov
ja
inc
and
sub
in
and
inc
xchg
(bad)
push
or
test
pop
mov
(bad)
retf
in
mov
mov
popf
test
pushf
mov
push
xor
or
adc
in
inc
add
inc
retf
push
fisubr
and
inc
add
test
inc
or
xchg
shl
xchg
jne
xlat
enter
cmps
out
inc
xchg
inc
inc
and
xchg
or
enter
add
daa
in
enter
or
xchg
push
add
cmp
(bad)
xchg
sbb
jns
mov
inc
dec
arpl
outs
mov
pop
lds
cmp
adc
xchg
fisubr
hlt
sub
fstp
loopne
cmp
stc
push
outs
xor
jbe
retf
arpl
lods
pop
scas
sbb
lods
push
dec
popf
lahf
retf
(bad)
aad
test
enter
xor
sub
jno
adc
(bad)
xor
pusha
push
pop
xor
mov
jl
xchg
jmp
sub
dec
loop
enter
iret
cld
ins
pop
dec
jmp
and
shr
add
mov
mov
pop
or
mov
dec
loop
fild
mov
and
dec
jae
xor
nop
inc
ficom
xchg
nop
jp
adc
add
add
retf
sbb
icebp
xchg
jns
sbb
inc
retf
jno
xchg
aam
cmp
dec
ins
cmp
ret
(bad)
jne
rcl
sub
sub
mov
and
scas
xlat
jmp
ins
pusha
ins
inc
fisub
lea
ror
dec
push
pop
stos
jg
fdivr
iret
jecxz
inc
ins
sahf
push
clc
mov
cmp
pop
add
cdq
into
rcl
dec
fsub
call
sbb
out
aad
in
cmp
adc
test
mov
dec
repz
in
fcomip
int3
xor
add
xor
cmp
out
pop
mov
(bad)
xor
pop
sahf
int
inc
jecxz
cli
test
push
add
add
add
ins
inc
inc
or
jae
sbb
lods
mov
dec
inc
leave
pusha
test
add
xchg
add
sbb
ins
jmp
repnz
push
inc
call
fdiv
inc
stos
dec
fisub
std
out
and
mov
std
cmps
stc
adc
push
outs
sti
add
(bad)
ins
das
jp
test
neg
out
pop
sub
es
stc
xchg
push
aaa
xchg
mov
mov
xchg
push
aaa
xchg
mov
sbb
fisubr
jp
mov
out
repz
aam
inc
pop
arpl
jl
dec
cmc
or
mov
jp
push
adc
cmc
out
inc
outs
fwait
leave
fisub
pushf
dec
repnz
outs
fwait
leave
fisub
pushf
dec
repnz
outs
adc
pop
(bad)
lahf
in
iret
add
jp
mov
jg
(bad)
js
cmp
add
js
cmps
mov
dec
fisub
out
push
adc
push
int
imul
mov
sar
xchg
pop
loopne
out
push
or
int
imul
mov
(bad)
cmc
(bad)
js
cmp
add
xchg
mov
test
hlt
cmp
pop
adc
mov
and
push
adc
shl
jg
jmp
add
jmp
stc
cs
ror
inc
push
mov
lock
push
jns
mov
dec
cmc
inc
es
fisttp
gs
adc
pop
adc
cs
cmp
and
hlt
inc
xlat
fmulp
mov
cmove
jge
stos
lock
push
sbb
fmulp
mov
daa
call
jle
dec
loop
cmp
scas
ror
inc
js
pop
inc
or
retf
cmp
cmp
jmp
pop
and
je
xor
add
add
dec
xor
xor
in
sbb
or
add
sar
add
pop
mov
sbb
(bad)
inc
dec
mov
mov
jae
xchg
int3
jno
mov
sti
mov
ds
ins
test
in
repnz
adc
sub
sub
movs
and
aas
sbb
cdq
stc
jmp
addr16
inc
je
loop
jmp
mov
pop
iret
dec
(bad)
xchg
jmp
fiadd
inc
popa
pop
std
mov
add
sub
(bad)
mov
(bad)
xchg
bound
mov
ja
mov
jo
daa
pop
out
popf
mov
jns
loop
sub
push
dec
mov
adc
cs
jmp
add
jg
push
in
adc
mov
mov
dec
sbb
adc
push
out
frstor
mov
fcomi
xlat
mov
cmp
movs
repnz
(bad)
add
pop
and
jmp
test
xor
sbb
adc
stos
add
repnz
xchg
mov
repnz
push
pop
jl
(bad)
(bad)
inc
sub
(bad)
cmc
add
mov
jge
icebp
and
mov
cld
stos
lahf
pop
cld
mov
jecxz
std
xor
push
out
pushf
std
daa
mov
pop
imul
cmp
movs
cwde
int3
sahf
mov
dec
repz
in
fcomip
int
jg
nop
adc
ss
pop
jp
jnp
mov
push
jne
aaa
jmp
mov
scas
add
js
movs
xchg
lods
fsubr
cmp
push
fwait
xchg
or
mov
cwde
in
popf
ret
or
dec
dec
repnz
ret
inc
in
aam
adc
xchg
inc
adc
ja
xor
aad
loope
cmc
leave
mov
mov
jo
xchg
pop
xchg
lods
aaa
or
mov
sub
inc
inc
pop
outs
adc
push
outs
and
rcl
push
out
outs
jno
xor
pop
stos
xchg
fcom
sub
pop
cmc
frstor
mov
sub
out
sub
call
cmp
xchg
(bad)
ds
or
popf
jl
int3
addr16
scas
lock
and
xlat
lds
add
inc
push
or
jne
xor
rcl
cmp
icebp
pop
xor
mov
hlt
jno
push
jp
icebp
in
loop
cld
std
sar
add
push
mov
inc
cmp
cmp
mov
hlt
jno
jnp
(bad)
jno
jmp
jge
std
sar
add
push
mov
pop
shl
(bad)
in
loop
lock
lahf
cld
or
sbb
or
nop
pushf
ins
cmp
xchg
jnp
inc
add
rol
sub
xor
and
jle
cmp
or
loop
in
cwde
ja
lods
cwde
and
push
mov
les
sar
out
es
mov
mov
inc
jno
mov
jo
outs
sbb
outs
(bad)
in
mov
jo
sbb
cmps
cmp
jno
(bad)
or
push
sbb
loop
xlat
sahf
cs
mov
mov
daa
sbb
enter
xchg
add
sub
mov
into
in
pop
jno
(bad)
adc
loop
mov
or
pop
ret
sbb
dec
and
cmp
lds
and
mov
mov
ret
adc
(bad)
pop
sar
mov
mov
(bad)
aad
jnp
fmul
loope
push
loop
jg
cli
push
pop
in
(bad)
jno
xor
inc
push
mov
xor
inc
push
mov
ret
loop
adc
add
jne
fdiv
lods
mov
loop
div
push
mov
data16
sub
arpl
sbb
xor
clc
mov
inc
fwait
out
push
fdiv
lods
mov
jno
arpl
mov
push
mov
lea
mov
les
ja
push
pop
sub
xor
mov
cli
imul
mov
push
clc
xchg
repnz
repz
rcr
mov
push
xchg
or
mov
xor
int
into
in
mov
sub
retf
data16
ja
push
xor
sahf
mov
(bad)
lahf
test
mov
pushf
jo
leave
sub
es
fwait
inc
mov
movs
outs
stos
out
jmp
cmp
fucomi
mov
or
xor
leave
fst
mov
nop
jmp
addr16
jl
adc
sub
jp
test
mov
mov
xchg
push
cs
lds
mov
jle
div
inc
shr
mov
sar
mov
push
cs
mov
cmp
in
jle
out
pop
jecxz
imul
jle
loopne
out
xor
add
xchg
sub
mov
add
aad
(bad)
lahf
call
cdq
cmp
inc
fistp
dec
mov
outs
aaa
ja
cmc
push
mov
adc
adc
xchg
cld
lahf
mov
mov
dec
outs
cmp
push
dec
inc
xor
(bad)
neg
les
shl
mov
add
aam
cwde
jns
icebp
ja
mov
pop
popf
sub
mov
jb
test
jmp
and
cmp
push
call
into
xor
dec
scas
aad
test
jne
sbb
dec
and
fdivr
mov
out
xchg
ins
pop
mov
clc
and
in
(bad)
adc
shl
or
xchg
shl
rcl
jp
xchg
in
ss
outs
or
push
pop
adc
ficom
ins
cld
mov
jecxz
std
xor
push
out
lahf
inc
dec
out
adc
(bad)
vsubss
cmp
jmp
ja
cld
in
aaa
std
xor
cli
movs
xchg
call
push
inc
push
adc
sbb
fiadd
fld
jno
dec
dec
cmp
mov
and
and
push
int
in
dec
(bad)
mov
and
jne
jg
inc
sti
mov
add
retf
or
jge
ins
bound
mov
jmp
inc
or
push
inc
inc
test
push
jbe
adc
mov
inc
fadd
pop
lea
sbb
lods
add
imul
bound
jb
mov
ins
fadd
push
pop
push
add
jb
inc
fist
lods
ins
std
mov
mov
movs
aam
adc
popf
or
add
push
mov
das
imul
lds
movs
dec
pop
ret
jbe
test
adc
add
imul
dec
dec
sub
scas
dec
inc
sub
mov
rcl
add
ds
pop
ja
cmp
jle
cmc
(bad)
mov
nop
lods
fiadd
sub
(bad)
and
pop
inc
sahf
lahf
fadd
add
jg
xchg
sahf
dec
idiv
dec
repz
cs
lock
repnz
lock
jae
cmp
fcomi
das
call
jne
lods
repnz
inc
retf
cmp
or
push
and
dec
mov
imul
repz
mov
movs
pushf
push
arpl
loopne
xchg
imul
shr
or
push
jp
shr
inc
pop
push
mov
push
mov
mov
into
or
fwait
add
mov
fild
xor
xor
or
pop
pop
inc
stos
mov
inc
jge
xor
xchg
mov
push
xlat
xor
inc
add
and
add
adc
pushf
jmp
loop
xchg
cmp
xchg
in
xchg
dec
retf
ror
push
out
enter
jmp
jecxz
jne
xor
sbb
aad
test
scas
popf
aam
xchg
adc
mov
push
cmp
pop
mov
ret
imul
dec
in
sub
mov
mov
loope
iret
jbe
(bad)
push
xchg
enter
inc
adc
xor
fdiv
xlat
in
mov
mov
inc
and
inc
mov
pop
and
mov
lods
call
out
jmp
sti
pop
loop
and
mov
iret
mov
ror
gs
test
mov
sub
fwait
mov
cmp
retf
cs
sbb
outs
test
ins
sbb
cmp
jle
lahf
cwde
mov
jmp
outs
pop
dec
mov
bound
fld
dec
push
mov
ss
adc
rcl
add
pop
push
aam
push
mov
or
call
out
sub
ins
lea
xchg
pop
ins
cmp
aam
(bad)
fdivr
cmp
jb
lods
call
xor
xor
sub
inc
jno
in
inc
push
popa
fwait
scas
mov
lods
dec
xchg
pusha
xlat
jmp
sbb
popf
dec
mov
dec
pop
add
stos
adc
or
and
aam
mov
and
in
push
xor
arpl
push
push
pop
mov
in
fwait
adc
jecxz
or
add
inc
push
test
cmp
cmp
lea
and
call
xchg
push
mov
mov
pushf
mov
ins
imul
cwde
mov
pop
jne
mov
mov
pop
aas
mov
jle
out
aad
xor
add
cmp
cmp
inc
jmp
mov
fild
push
js
ret
jmp
ret
adc
mov
das
sub
mov
xchg
xor
or
adc
pop
ja
fidiv
test
enter
out
mov
fnsave
fisttp
in
pop
xor
fdivr
stos
jmp
push
addr16
icebp
push
mov
jge
mov
scas
push
xor
cmps
scas
movs
mov
in
mov
mov
dec
int3
(bad)
addr16
or
pop
sub
mov
sbb
pop
mov
(bad)
pop
imul
mov
mov
or
rol
out
cmps
cmps
jns
rol
sub
or
xchg
jnp
ins
leave
jl
int
sbb
pushf
stc
jle
jae
or
popf
cmp
addr16
mov
movs
cmp
mov
imul
fnstcw
out
sub
fadd
aaa
inc
xchg
out
shr
(bad)
xchg
pop
push
mov
dec
mov
mov
iret
add
repz
adc
lds
xchg
add
xor
call
push
cdq
sub
xchg
pop
push
ins
add
enter
sbb
fild
repnz
cmc
cwde
scas
frstor
push
movs
add
or
inc
cmp
add
loope
repnz
pop
jle
(bad)
xchg
sbb
imul
pop
fisub
pop
push
sub
add
xchg
pop
stos
mov
jmp
xor
mov
mov
retf
jecxz
cmp
cmp
push
data16
rcr
pop
push
or
push
mov
test
xchg
movs
fisttp
push
ja
jae
cld
daa
pop
(bad)
fcomp
out
xor
movs
nop
inc
fwait
cdq
test
aam
jnp
pop
les
xchg
imul
xchg
scas
or
movs
shl
add
(bad)
mov
stos
mov
popf
out
sahf
push
push
xchg
(bad)
sar
mov
cmp
cmp
push
mov
mov
outs
movs
jns
aad
jecxz
inc
cmp
fidiv
pop
push
int
sahf
mov
pop
hlt
pop
dec
into
dec
in
sub
ins
pop
dec
retf
ss
cli
imul
stc
xor
inc
rol
sbb
imul
das
cmc
stos
mov
adc
mov
add
in
inc
push
popa
fwait
scas
mov
lods
dec
xchg
pusha
xlat
jmp
sbb
popf
dec
mov
dec
pop
add
stos
adc
or
and
aam
mov
and
in
push
xor
arpl
push
push
pop
mov
in
fwait
adc
jecxz
or
add
inc
push
test
cmp
cmp
lea
and
call
xchg
push
mov
mov
pushf
mov
ins
imul
cwde
mov
pop
jne
mov
mov
pop
aas
mov
jle
out
aad
xor
add
shl
mov
pop
inc
dec
(bad)
push
rcr
pop
dec
(bad)
cmps
pop
scas
mov
shl
dec
sbb
(bad)
mov
das
call
cld
lea
sub
cmp
rcl
es
adc
rol
retf
test
mov
push
(bad)
call
xor
mov
fmul
ds
push
outs
ins
xchg
fisubr
pop
fsubr
cmp
out
enter
outs
add
inc
(bad)
into
pop
arpl
mov
mov
jg
pop
push
pop
jae
pusha
jnp
cmps
lds
outs
ret
or
ficomp
es
mov
push
lods
xchg
sahf
repz
out
dec
xor
jl
lods
fdivr
jo
in
aam
out
xor
(bad)
int3
mov
mov
sub
cmp
adc
les
(bad)
sub
addr16
aam
cmp
ffree
ins
movs
fdivr
pop
popa
push
pop
sbb
dec
sbb
push
data16
rcl
xor
mov
ins
imul
arpl
ror
mov
push
or
sbb
adc
(bad)
rcr
cmp
aad
movs
xchg
cdq
into
mov
call
push
jmp
in
in
mov
call
into
xor
mov
aam
bound
pop
push
test
dec
mov
add
dec
sahf
mov
sub
call
mov
scas
jmp
pop
push
jo
mov
sti
sbb
or
in
jns
mov
dec
out
mov
(bad)
scas
push
shl
repz
lods
imul
sbb
dec
push
push
ins
call
loop
lds
push
(bad)
mov
sub
je
ret
stc
pop
cwde
xchg
movs
movs
mov
mov
fild
dec
(bad)
xor
push
call
or
dec
and
push
jmp
push
outs
(bad)
in
mov
out
ret
ja
inc
xor
cli
aam
adc
out
sahf
test
retf
imul
popf
imul
jns
sar
retf
jo
cdq
xchg
ins
out
outs
fstp
and
pop
movs
or
sub
fdiv
iret
xchg
dec
sbb
mov
mov
mov
test
or
or
loopne
(bad)
inc
push
icebp
leave
inc
xor
xchg
ret
aas
cwde
mov
push
mov
repnz
sahf
xchg
pop
sti
dec
das
lea
adc
cld
cdq
out
jns
fisubr
push
cs
stc
xor
add
mov
add
cmp
fisubr
mov
xchg
les
imul
les
push
fwait
dec
out
hlt
(bad)
xor
pop
dec
push
fs
xor
(bad)
sub
inc
inc
and
xor
pop
out
lock
mov
mov
jne
jo
xor
cli
mov
inc
sbb
std
cli
push
std
dec
or
mov
jmp
xor
jle
and
cdq
push
shl
fbld
mov
enter
pop
gs
out
sar
into
stc
sub
sub
pop
add
mov
inc
push
pop
mov
shr
inc
push
jbe
push
or
jmp
int
aad
dec
movs
lahf
mulps
inc
jne
out
iret
cmc
mov
mov
repz
jne
and
sub
mov
inc
jne
and
sbb
fld
jmp
not
fld
mov
add
push
cmp
add
dec
mov
enter
mov
stc
sub
fs
div
test
aas
fs
mov
cs
mov
neg
hlt
mov
cld
sbb
fdivr
imul
jge
push
push
mov
loope
inc
mov
push
stos
bound
cli
mov
jns
out
popa
scas
inc
aas
test
cmps
and
leave
sbb
out
in
fidiv
nop
mov
popa
cmps
inc
rol
ins
cmp
xor
lock
fwait
and
xchg
stos
and
movs
mov
dec
jmp
js
in
cwde
pop
mov
mov
movs
mov
push
push
xchg
cmps
inc
cmp
ins
mov
fisubr
popf
cmp
and
cdq
pop
pop
xor
or
sbb
xor
mov
(bad)
(bad)
fmul
and
daa
push
dec
jbe
leave
dec
test
push
ss
or
arpl
jmp
push
mov
pop
gs
imul
mov
jl
and
xchg
xor
arpl
add
inc
loopne
jmp
cwde
loop
jmp
jns
push
cli
mov
mov
inc
fcmovu
push
(bad)
hlt
leave
dec
jge
jb
mov
in
inc
pop
push
mov
dec
mov
jo
cmp
jae
push
int
mov
sub
sbb
iret
movs
jns
jmp
aaa
push
aam
test
rcr
popa
xchg
inc
sbb
xor
xlat
mov
push
mov
pop
jae
sub
imul
sahf
dec
cli
or
dec
retf
push
js
xor
(bad)
jle
cli
inc
mov
pop
pop
stos
cs
or
movs
call
mov
push
aad
pop
mov
aam
push
cmp
cs
ret
dec
pusha
sbb
fdiv
inc
xor
mov
mov
xchg
mov
mov
mov
repz
sub
jns
movs
mov
sub
sar
pop
pushf
inc
in
and
add
test
dec
push
das
xor
xchg
cli
pop
or
(bad)
mov
lahf
adc
fcmovne
add
bound
and
pop
iret
into
addr16
addr16
jne
movs
inc
mov
adc
retf
gs
pop
aas
sbb
ret
ja
inc
xor
cli
aam
adc
out
sahf
test
cmp
aas
pop
add
ins
inc
and
call
dec
aam
add
add
mov
es
or
push
leave
or
retf
jmp
or
add
nop
movs
test
es
push
mov
or
adc
sub
mov
inc
jmp
sbb
sub
ret
adc
popf
dec
adc
sub
sub
mov
adc
or
jns
int3
push
daa
pop
(bad)
jmp
ss
fwait
ins
outs
out
inc
(bad)
sbb
sub
xor
int3
pop
les
scas
scas
mov
sub
cmp
divps
out
sbb
fdivr
out
inc
xor
fwait
ins
push
or
iret
pop
(bad)
sahf
dec
jns
cmovnp
push
dec
pop
sbb
sbb
dec
mov
pop
jb
cli
inc
test
dec
dec
outs
xor
(bad)
jge
repz
cmp
mov
ja
(bad)
xchg
in
sub
mov
out
xor
loop
daa
dec
outs
adc
cwde
loope
jmp
xchg
aad
cld
stos
and
out
dec
gs
in
fs
ds
lahf
xor
movs
fadd
dec
pop
je
adc
nop
in
ja
sub
clc
in
in
mov
movs
out
sbb
mov
or
pushf
push
dec
push
mov
pushf
cwde
cmp
gs
jne
jnp
ins
hlt
push
xlat
push
mov
mov
je
mov
daa
push
call
inc
sar
pop
cs
sti
push
mov
stos
cmp
mov
das
rcl
test
das
xor
xchg
mov
xchg
cmps
add
stos
xchg
jns
aas
cmp
int3
jo
in
aaa
mov
lea
and
jns
jecxz
push
xchg
and
lock
iret
sub
aad
pop
loop
(bad)
fs
sub
out
add
xchg
pop
cmp
icebp
mov
and
jg
mov
repz
xchg
and
inc
mov
jle
xchg
jmp
in
scas
loopne
adc
xor
ja
jecxz
mov
jo
mov
mov
rol
or
adc
js
out
lahf
mov
(bad)
push
loop
lahf
in
mov
pop
jb
pavgb
adc
rcl
jns
sbb
adc
repz
pop
jne
jle
arpl
sbb
cmps
das
cmp
dec
(bad)
ffree
mov
dec
mov
mov
dec
mov
cmp
push
std
sub
xor
ja
repz
lahf
in
mov
(bad)
xor
ja
repz
aas
and
push
xchg
or
test
repz
sub
cmps
test
push
pop
jae
jle
arpl
adc
repz
cs
cmp
rol
jge
pop
pushf
ret
fbld
jo
cmp
repz
jnp
ret
and
sahf
xchg
pop
pop
jae
jle
push
xor
loop
xchg
loop
cwde
jnp
xor
es
lock
pop
jae
jle
pop
mov
jns
cmp
or
mov
out
imul
test
clc
dec
into
popa
out
ror
cs
out
adc
jg
and
cwde
jnp
ret
es
popf
std
in
mov
popa
out
ror
sbb
mov
ss
int
jns
cmp
mov
or
mov
cmp
test
or
mov
cwde
jnp
jo
mov
sahf
adc
jg
and
cwde
jnp
ret
push
stc
daa
into
(bad)
test
imul
push
xchg
js
popf
hlt
inc
es
out
imul
inc
sbb
xchg
in
cmp
fist
pushf
ret
fbld
lock
cmp
clc
xor
cmp
or
enter
std
sub
and
push
mov
mov
daa
test
fdivr
add
inc
out
imul
inc
xor
and
ins
icebp
mov
dec
mov
popa
out
xchg
mov
stc
daa
into
clc
jle
mov
popa
out
ror
lock
fwait
and
cwde
jnp
mov
dec
sahf
cmp
out
aam
leave
mov
jle
mov
mov
cli
popa
arpl
sub
xchg
addr16
cld
fst
pushf
ret
fild
sar
in
push
mov
sub
lea
stos
aad
popf
inc
fbld
cmp
les
ror
popf
rcr
push
xor
out
aad
xchg
jmp
movs
inc
mov
stos
sub
out
retf
cwde
pop
hlt
mov
push
shl
fidiv
pop
sub
xchg
adc
cmp
push
or
xchg
and
stos
rol
push
clc
(bad)
inc
and
pop
lahf
push
clc
aam
(bad)
movs
mov
push
aam
jg
jecxz
ret
and
cmp
jno
fidiv
js
js
ret
(bad)
adc
jp
icebp
xchg
mov
push
clc
aad
mov
pop
icebp
sbb
out
stc
push
(bad)
and
xchg
or
movs
(bad)
adc
jge
cmp
std
cdq
cmps
inc
mov
in
leave
jmp
inc
into
xor
(bad)
loop
aas
cld
inc
pop
sub
lods
cmp
inc
xchg
imul
cmp
mov
arpl
cwde
cmps
call
cld
mov
inc
adc
rol
mov
dec
ror
fnstsw
cld
inc
pop
movs
sbb
mov
dec
shl
jcxz
ret
sbb
pop
lahf
sar
mov
hlt
fstp
js
fdiv
retf
sar
daa
lea
hlt
mov
or
jl
outs
sbb
clc
pop
fst
mov
fwait
(bad)
shl
retf
xor
fadd
jb
fild
hlt
sub
mov
enter
sub
mov
add
adc
jp
mov
int3
dec
movs
mov
push
pop
adc
in
out
inc
cmc
(bad)
push
repnz
imul
scas
xchg
and
inc
push
int3
clc
fisttp
jb
ret
dec
(bad)
ja
leave
cwde
xchg
pop
sti
mov
stos
stos
outs
stc
bound
scas
cdq
mov
adc
pop
fwait
mov
jno
jns
pop
popa
cdq
mov
cli
test
aam
ret
xor
fnsave
fsubr
xchg
stc
in
std
cli
test
mov
(bad)
jge
jle
mov
(bad)
aam
cld
cli
jle
or
outs
int
fimul
mov
ins
(bad)
rcr
mov
add
mov
out
fidivr
jle
xchg
jmp
out
shl
ficomp
sahf
iret
fbld
lahf
in
sub
rcl
icebp
scas
xor
add
mov
mov
ret
cli
dec
je
leave
sti
hlt
and
aas
test
dec
adc
jg
push
aas
cmp
clc
rcr
cmp
addr16
mov
jle
aaa
jle
sbb
fst
mov
xchg
jg
or
mov
pop
jmp
out
nop
push
scas
icebp
xchg
xor
add
test
sbb
repz
push
arpl
ds
fdivr
stc
or
pop
int3
pop
sbb
xchg
test
aaa
cld
aas
push
pop
cmp
pop
stc
push
push
lods
mov
in
into
gs
nop
push
scas
icebp
cmp
loope
inc
cmp
pop
out
mov
add
xchg
mov
sti
out
mov
jl
push
fistp
push
push
push
shl
loop
stc
add
jecxz
bound
xchg
pop
pop
retf
(bad)
(bad)
in
fistp
xchg
mov
ja
pop
retf
jno
jl
sbb
loope
out
nop
sub
lock
push
push
jns
sti
jmp
loope
out
nop
or
pop
std
cmc
lods
lock
add
jmp
nop
adc
popf
pop
xchg
out
mov
cmp
add
jnp
mov
stc
add
out
fdivrp
push
clc
jns
in
add
imul
jmp
cmp
jbe
lock
pop
xchg
out
jbe
shr
sub
int
fistp
(bad)
jl
sub
stos
into
pop
test
add
pop
mov
and
nop
mov
aaa
fcmovnu
pop
xchg
mov
push
outs
xlat
iret
jle
mov
and
sti
fistp
mov
sbb
aas
xchg
push
jae
jl
or
pop
sbb
(bad)
popf
dec
fbld
push
adc
mov
adc
ss
inc
xor
outs
stc
or
repz
add
fdivr
out
outs
std
inc
movs
ss
int3
cli
jg
cmp
push
aas
mov
pop
cmp
mov
fistp
cmp
fs
fistp
fidivr
jle
mov
xor
repz
fcmovne
addr16
rcl
movs
int
lods
xchg
inc
xor
idiv
or
jbe
data16
shl
int3
mov
mul
cmps
xor
fwait
jbe
int3
in
sbb
je
mov
mov
dec
jno
pop
and
stos
fwait
mov
inc
iret
cwde
mov
fadd
sti
jo
mov
dec
fild
mov
aaa
inc
mov
dec
xor
sub
call
pop
cmp
retf
push
arpl
popf
popf
out
push
xchg
nop
pop
jl
inc
mov
idiv
add
outs
lahf
cld
dec
push
pop
enter
xlat
lods
outs
in
scas
inc
cmp
in
lods
dec
xchg
mov
call
sbb
pop
jne
retf
mov
push
adc
add
jmp
sub
call
inc
cmp
add
push
fadd
add
sub
push
popa
test
inc
mov
hlt
add
push
mov
mov
outs
mov
mov
jbe
adc
adc
or
movs
inc
and
in
push
push
or
sub
adc
push
pop
jmp
aaa
jp
mov
test
iret
fisub
push
xor
add
(bad)
xor
cmp
fimul
bound
aaa
mov
xor
(bad)
retf
popa
ficom
mov
pop
add
add
add
sub
fwait
mov
outs
cmp
push
push
push
sub
pushf
ins
aam
mov
jo
mov
sub
shl
lea
(bad)
jno
in
jle
loop
push
aaa
push
leave
sbb
or
pop
and
not
es
(bad)
pop
dec
outs
in
test
arpl
mov
mov
lds
sub
add
add
jmp
mov
inc
sub
dec
inc
mov
arpl
push
stos
push
shr
ins
inc
adc
add
xchg
mov
mov
adc
add
push
push
push
inc
sub
nop
or
pop
sbb
pop
mov
push
test
mov
xor
add
xchg
sub
adc
and
mov
mov
adc
xor
sbb
or
in
push
test
std
test
sbb
mov
sbb
adc
ret
ins
pop
mov
les
inc
sbb
shr
pop
aaa
mov
sub
fcmovu
xor
push
mov
xlat
rcl
push
loopne
sbb
xor
and
aaa
aaa
sbb
pop
dec
mov
sbb
std
sar
pop
inc
shrd
push
fisubr
jb
adc
mov
into
cmp
jno
lods
pop
xor
xor
cmps
xor
dec
pop
fldcw
out
dec
add
cmp
jbe
sbb
and
mov
imul
dec
data16
jl
adc
push
scas
hlt
out
jo
out
push
sbb
aam
or
ins
push
xor
scas
xlat
(bad)
pushf
pop
jns
jbe
pop
mov
in
lods
fld
(bad)
jne
mov
popf
repnz
arpl
sub
popf
retf
pop
movs
sub
push
not
and
jno
mov
ins
into
sbb
jno
and
shl
pop
push
in
xor
push
dec
inc
sub
ret
pop
xchg
fldcw
sbb
mov
jecxz
rcr
adc
xor
push
add
sahf
mov
jl
mov
test
inc
and
cmc
adc
push
mov
test
cmp
jge
cmc
adc
rol
or
push
arpl
mov
into
jno
add
adc
mov
sbb
cwde
push
ret
mov
cmps
retf
jmp
push
sub
jmp
cmc
push
xchg
sub
(bad)
test
test
test
arpl
sahf
fsub
dec
ins
push
push
cli
inc
mov
lods
dec
in
mov
fisttp
jge
das
mov
(bad)
and
fsub
in
leave
jge
inc
push
not
mov
mov
test
inc
fisttp
mov
adc
hlt
mov
in
retf
cmps
cs
outs
iret
in
retf
pop
call
inc
inc
fisttp
std
icebp
test
in
or
jnp
lahf
out
(bad)
outs
push
push
stos
rcl
jl
cmp
jmp
push
fsub
scas
pop
test
mul
inc
push
hlt
pop
cs
xchg
adc
hlt
mov
iret
in
retf
push
outs
mov
scas
mov
push
mov
test
inc
mov
pop
ins
push
and
cs
in
mov
adc
fs
or
retf
lock
movs
inc
push
sub
mov
out
aas
out
jmp
ja
add
cmps
fstp
call
xor
out
push
or
push
push
xor
nop
mov
aad
sbb
fs
mov
push
test
ja
in
mov
push
mov
cs
cmp
xlat
dec
xor
xchg
ret
cmc
or
shl
xor
not
mov
and
mov
sbb
sahf
inc
inc
cdq
dec
mov
punpckhwd
popa
mov
out
jne
pop
add
out
inc
sub
sbb
daa
fucomp
aad
xlat
aas
jo
pop
jo
jns
lods
xchg
sbb
clc
mov
xchg
sub
mov
inc
push
into
jb
mov
imul
mov
(bad)
xor
push
mov
(bad)
int
push
add
mov
mov
mov
icebp
inc
inc
add
mov
pop
sbb
dec
test
add
or
sar
cmp
sub
test
je
add
les
retf
daa
frstor
ds
fisttp
xchg
sbb
xlat
(bad)
gs
lds
xchg
lds
lahf
mov
je
lahf
cld
stos
push
ins
dec
les
cmp
or
into
pop
ror
xor
fld
adc
jnp
ret
sbb
in
rcr
xchg
and
retf
data16
mov
push
xchg
lods
push
mov
ins
movs
pop
popa
(bad)
mov
xlat
ins
sbb
pop
fadd
hlt
jbe
jo
add
pop
bound
push
push
je
jge
ficom
mov
shr
inc
pop
sub
sub
shl
fcom
inc
inc
neg
jns
pop
ficom
push
jns
pminub
not
push
jns
pminub
not
pop
mov
lock
out
and
add
clc
es
push
cmp
fwait
shl
and
dec
loopne
fadd
iret
inc
pop
jge
cmps
lock
out
and
jne
and
iret
jnp
jl
cmp
pop
mov
les
in
movs
lock
and
in
movs
lock
and
fmulp
dec
add
loop
xchg
js
ja
push
cmp
xchg
shl
push
mov
les
in
movs
lock
and
gs
and
scas
jnp
cmp
cmp
jnp
dec
loopne
fadd
hlt
dec
stos
fmulp
dec
add
loop
xchg
js
ja
push
cmp
xchg
shl
push
mov
les
in
movs
lock
and
gs
and
push
mov
shl
pop
mov
les
mov
les
jnp
dec
loopne
fadd
hlt
pop
mov
jmp
mov
js
ja
push
not
xchg
fistp
mov
push
lea
cdq
fadd
fild
mov
out
and
lea
and
dec
jge
inc
test
out
nop
push
std
movs
pop
sub
jns
pop
fidiv
not
push
stc
adc
not
adc
sbb
mov
lock
out
and
mov
push
or
mov
push
js
not
fdecstp
sti
jns
clc
or
or
fldcw
jecxz
cmps
aas
bound
add
sub
imul
mov
push
cmp
sub
int3
xor
rol
(bad)
mov
lods
push
mov
fadd
enter
repz
jp
fwait
push
cmps
xor
loop
sub
jbe
mov
nop
jne
sahf
xor
add
js
xchg
pop
dec
pop
push
in
scas
xchg
mov
stc
push
inc
or
cmovae
add
outs
loope
mov
pop
cmp
sub
and
fdiv
dec
outs
and
(bad)
je
xchg
nop
or
add
add
sub
popf
sbb
ins
jl
xor
cmp
(bad)
in
jno
mov
sbb
stos
sbb
popf
mov
(bad)
div
lods
(bad)
or
sbb
cmp
int
xchg
cli
shl
push
sub
mov
icebp
fwait
adc
jb
add
push
or
adc
add
add
and
adc
add
add
and
adc
leave
and
(bad)
repnz
adc
das
xchg
inc
sbb
(bad)
or
rol
sub
sub
outs
nop
aad
fisubr
dec
xchg
scas
dec
fs
jb
int3
aam
push
je
mov
jae
arpl
sbb
ins
fwait
out
jno
jle
loop
jns
(bad)
(bad)
mov
pop
xlat
or
cmc
ins
cmp
mov
mov
aad
shr
hlt
shl
pushf
enter
inc
push
xor
scas
sub
retf
push
into
ins
mov
rcr
xchg
mov
or
or
loopne
pop
mov
fs
(bad)
dec
pop
icebp
scas
xchg
iret
inc
into
lds
pop
and
mov
stc
adc
ficomp
les
push
dec
int
sub
icebp
out
cmp
clc
pop
pushf
scas
sbb
cmp
or
jne
outs
sbb
cmp
mov
call
xor
popa
pop
jmp
in
jg
scas
fs
retf
mov
(bad)
dec
jl
into
mov
jne
out
jns
mov
inc
mov
add
adc
add
add
and
adc
add
add
and
test
sub
or
fist
ins
inc
lea
add
inc
sub
movs
add
sti
push
sub
sub
mov
mov
push
movs
repz
and
cs
sbb
cmps
cmp
xor
and
(bad)
push
test
mov
sub
add
jb
add
add
xor
cmp
mov
pushf
loope
retf
xchg
dec
inc
js
mov
(bad)
adc
out
ds
fwait
xor
fistp
mov
inc
repnz
in
lods
sbb
pushf
mov
dec
or
test
or
push
retf
loop
fadd
(bad)
bound
jmp
and
sub
push
add
adc
add
inc
or
add
add
adc
add
add
and
adc
add
sub
repnz
pop
outs
aam
test
xor
sbb
jne
out
xchg
inc
outs
cmp
leave
sub
or
mov
pop
ins
out
cmp
pop
mov
dec
imul
jl
mov
aas
(bad)
rcr
inc
jge
adc
jmp
mov
mov
pushw
cwde
mov
sub
add
in
dec
push
push
inc
jecxz
aad
pop
dec
cdq
out
ret
xlat
or
cmps
fdiv
jl
add
fwait
out
cmps
ret
jb
cmp
(bad)
jns
push
jl
cld
aad
mov
imul
in
(bad)
loope
mov
xor
dec
xchg
mov
pop
sbb
mov
cwde
in
pop
enter
mov
or
adc
pop
(bad)
popa
jp
adc
xchg
mov
dec
jo
sbb
loop
mov
outs
push
pop
ins
lock
fwait
call
sahf
call
mov
push
push
xor
imul
(bad)
mov
daa
push
xor
rol
cmp
xor
retf
ret
dec
sar
inc
ins
cli
sahf
cmps
ins
mov
fisubr
(bad)
sbb
pop
shr
mov
pop
xor
(bad)
pop
cmp
mov
(bad)
mov
sub
mov
push
mov
add
inc
or
add
add
adc
add
add
and
test
adc
or
fist
in
inc
lea
or
inc
xchg
shl
and
fisub
adc
push
std
mov
push
adc
(bad)
in
ficom
xor
(bad)
sub
data16
repnz
push
ss
sbb
outs
push
push
lds
cmp
sti
(bad)
pop
(bad)
mov
adc
ja
xor
pop
sub
jne
inc
cmp
outs
data16
cmp
jl
addr16
imul
ficom
mov
and
xor
inc
jmp
or
or
test
dec
aas
(bad)
bound
jmp
les
sbb
adc
and
add
add
adc
add
add
and
adc
add
add
pop
push
aad
dec
dec
dec
inc
dec
sub
push
fld
mov
(bad)
sbb
or
in
jecxz
xor
mul
mov
or
leave
inc
outs
addr16
stos
pop
inc
shr
mov
sahf
or
xchg
fwait
or
stos
mov
stos
lea
cwde
call
inc
cmps
inc
sbb
inc
jle
shr
(bad)
jmp
jno
mov
jb
mov
xchg
xchg
push
(bad)
jge
jl
leave
out
ins
out
out
jae
loop
mov
xchg
dec
xchg
dec
sub
retf
popa
dec
add
xor
lock
aam
mov
push
mov
out
adc
fcom
les
pop
cmc
fnsave
push
mov
jp
outs
mov
pop
ins
ins
cli
retf
cmps
xchg
popf
cmc
imul
fldcw
daa
lds
jmp
fist
jmp
ins
push
pushf
mov
xchg
repz
faddp
jns
mov
xor
dec
and
call
dec
lds
out
aas
lods
jmp
push
lahf
pop
hlt
not
dec
inc
pop
enter
(bad)
mov
mov
and
adc
add
add
and
adc
add
add
and
adc
fisub
inc
xchg
ins
inc
xor
dec
or
daa
cmp
and
and
jbe
xor
retf
(bad)
mov
pop
mov
mov
les
add
xchg
into
push
inc
in
jno
adc
test
or
add
add
int
adc
xchg
jecxz
movs
fsub
cld
call
fdivr
sbb
aad
in
mov
outs
sub
pop
mov
popa
imul
push
test
popa
cmp
test
mov
sub
and
add
or
or
add
add
adc
add
add
and
adc
add
lahf
inc
sahf
adc
int3
xlat
push
xor
pop
pop
push
pop
enter
sub
fadd
inc
push
pop
and
mov
out
in
and
das
adc
mov
sbb
jbe
je
jo
mov
pushf
mov
fwait
call
outs
pmulhuw
mov
sbb
loop
adc
pop
push
pop
jb
lahf
jp
xchg
test
mov
dec
in
pop
jno
xchg
jge
pop
jmp
mov
ret
mov
aad
cld
ins
outs
call
in
int
repz
xor
vpsubq
adc
xchg
repz
sub
pop
dec
outs
mov
sbb
cmps
or
sbb
jo
fwait
cwde
arpl
sbb
xor
sar
aad
(bad)
and
sbb
int3
cmp
outs
mov
arpl
ficomp
push
inc
pop
clc
outs
stc
cmp
enter
call
jne
sar
or
sub
pushf
pop
sub
mov
imul
dec
pop
shl
in
outs
ror
mov
imul
inc
push
xchg
pop
pop
dec
jp
pop
nop
adc
add
add
and
adc
add
add
and
xor
push
fwait
mov
sbb
fist
inc
lea
push
and
rcl
jae
push
push
mov
shl
ins
or
in
mov
mov
or
xor
lods
popf
xchg
stc
ds
in
loopne
sahf
sahf
aad
out
dec
cmp
cmps
arpl
in
mov
je
imul
add
add
and
jne
fild
stc
jecxz
sar
xor
test
xchg
sbb
cmp
jmp
inc
mov
mov
jae
jns
test
rol
call
xor
adc
push
and
mov
and
(bad)
inc
cmp
or
test
jno
sub
test
and
adc
add
add
and
adc
add
cdq
cmp
fistp
sbb
call
(bad)
dec
ror
out
xchg
aaa
dec
aaa
dec
adc
lock
push
xchg
pop
retf
(bad)
cmc
jnp
dec
dec
out
div
scas
dec
in
out
mov
jb
int3
pop
lea
inc
out
pop
add
aas
xchg
clc
or
pop
fwait
dec
push
std
loope
or
xor
or
scas
cwde
mov
xchg
popf
and
or
jno
fdivp
push
lods
ja
into
sub
mul
jo
jo
imul
adc
pop
mov
idiv
xor
call
inc
or
mov
ret
and
movs
out
mov
loopne
push
jbe
outs
xchg
jecxz
shl
ins
imul
dec
lahf
cmp
rcr
icebp
push
pop
cmps
sub
mov
push
sub
enter
fistp
popa
mov
adc
lock
push
ficomp
cmp
jo
sbb
inc
mov
sar
jmp
pop
mov
idiv
cmp
mov
dec
mov
push
sti
mov
sar
(bad)
xor
sbb
inc
or
add
add
adc
add
add
and
xor
push
fwait
nop
mov
dec
add
dec
inc
add
pop
test
cmp
or
aam
sub
ficom
xchg
ins
sub
ins
es
sub
sbb
fistp
xchg
(bad)
lahf
jae
icebp
push
cmps
adc
aad
call
jno
jno
imul
xchg
pop
cmps
inc
push
mov
and
adc
add
aaa
push
mov
(bad)
bound
pop
ja
(bad)
outs
jnp
mov
int
int
in
fist
and
fiadd
push
jb
int
mov
les
adc
les
dec
inc
cmp
mov
or
xor
and
add
add
adc
add
add
and
adc
add
push
fwait
hlt
aaa
loope
stos
xchg
pop
xor
jno
pop
pop
sub
pop
cmp
sub
xchg
enter
mov
xchg
lea
retf
pop
jge
scas
into
(bad)
repz
imul
dec
xor
fsubr
mov
xlat
adc
js
mov
mov
fcom
hlt
(bad)
repz
cmp
into
ja
jecxz
jno
aaa
jp
call
dec
dec
fimul
inc
rcr
add
loope
loop
xchg
push
mov
cmp
sub
add
xchg
lahf
cmp
pop
sar
pop
pop
leave
jb
sbb
fs
xlat
test
mov
pop
imul
scas
xchg
imul
int3
fcmovne
pop
xchg
jmp
or
pushf
movs
fbld
dec
lods
cmc
sbb
sbb
cmp
je
or
neg
jne
and
cld
rcl
jae
jbe
das
je
les
and
mov
cld
or
call
xor
sbb
pop
pop
ins
outs
push
(bad)
push
(bad)
lea
jns
ret
movs
pop
(bad)
repz
shr
jl
shl
xchg
dec
sub
inc
aaa
hlt
imul
call
dec
dec
and
cmc
dec
imul
pop
sub
pop
dec
mov
stc
xor
mov
dec
lock
jecxz
mov
xlat
jecxz
mov
movs
int
ins
std
mov
sbb
arpl
sub
pop
lods
xchg
fbstp
add
sub
out
sbb
fsub
xchg
jmp
push
cmps
addr16
retf
pop
jne
loop
stc
push
out
arpl
into
mov
mov
pop
sbb
cli
push
nop
inc
or
add
add
adc
add
add
and
adc
popf
push
and
movs
sub
dec
dec
push
xor
inc
xchg
mov
inc
inc
int3
mov
push
and
arpl
loop
jbe
inc
or
jl
into
push
pop
movs
xchg
xor
cli
push
push
repz
int3
mov
ret
or
cmp
pop
popf
pop
out
outs
ss
outs
or
fmul
add
and
and
dec
ficom
inc
(bad)
sahf
and
xor
daa
sbb
mov
jnp
lods
rcr
jno
fisub
mov
jns
not
test
enter
mov
and
pop
push
sub
popf
or
js
push
ret
inc
test
inc
inc
xor
out
pop
dec
stc
enter
or
fisttp
lods
push
xor
add
or
add
add
adc
add
add
xchg
mov
xor
sub
xchg
pop
and
(bad)
shr
sar
inc
cmp
imul
ins
xchg
push
jae
pop
mov
xor
outs
pop
inc
(bad)
(bad)
and
inc
std
leave
jbe
scas
xor
inc
jbe
hlt
push
jnp
xchg
xchg
xchg
jns
jmp
(bad)
sbb
mov
xchg
inc
xor
mov
dec
cwde
test
mov
mov
jns
ror
out
fst
xchg
cmp
xchg
push
lds
jnp
faddp
not
dec
in
push
xlat
mov
stos
das
or
sahf
outs
push
sub
mov
enter
sub
das
aas
push
push
lds
cdq
push
xchg
gs
push
jno
add
push
std
lods
or
jge
js
rcr
mov
jae
cmp
(bad)
sti
dec
cdq
inc
xchg
inc
push
out
inc
lods
fist
in
aaa
sar
in
dec
jle
ja
mov
jl
je
js
call
data16
push
outs
or
test
mov
into
fcmovne
fnstcw
cmp
lods
ror
dec
int
addr16
in
jle
lods
retf
jae
or
xchg
in
iret
jnp
ja
jns
popf
mov
mov
arpl
cmps
test
std
mov
push
jne
lods
mov
mov
dec
popf
cmp
cwde
mov
pop
sbb
mov
retf
call
jge
gs
xor
addr16
pop
sub
mov
inc
in
loopne
xor
mov
jo
xor
mov
popf
mov
mov
pop
pop
out
mov
push
retf
push
gs
jno
popf
dec
mov
push
xchg
lods
pop
push
loope
push
jmp
data16
outs
xchg
inc
pop
cmp
jns
rol
jne
out
jo
ret
and
xor
add
js
push
mov
mov
push
jne
retf
mov
xchg
mov
or
(bad)
jbe
pop
int3
jae
js
in
out
dec
mov
outs
pavgb
idiv
adc
add
add
and
adc
add
add
and
cmp
mov
test
imul
adc
xchg
pop
inc
inc
int3
jne
push
sbb
xchg
dec
mov
gs
push
ins
pop
dec
outs
sub
ror
sbb
mov
mov
mov
cmc
mov
sbb
mov
out
fld
mov
add
add
adc
add
sahf
ss
jl
xchg
fld
daa
fldenv
or
(bad)
or
cdq
mov
push
jb
mov
inc
xchg
jle
xchg
adc
ret
test
inc
inc
xor
out
pop
dec
aam
push
sbb
xchg
adc
or
add
add
adc
add
add
and
and
inc
and
jae
add
sbb
movs
sbb
inc
xchg
test
mov
and
es
xor
jbe
aad
(bad)
mov
ret
sbb
movs
arpl
stc
inc
cmp
jmp
stc
fwait
pop
mov
xchg
inc
jecxz
stos
dec
jge
xlat
movs
mov
mov
ja
mov
jmp
ffreep
enter
push
pushf
mov
xchg
ret
mov
lods
mov
scas
stos
nop
loop
es
(bad)
cmp
mov
ficomp
ins
pop
dec
xor
sub
test
popf
pop
fiadd
xchg
mov
xchg
outs
pushf
inc
into
push
cmp
push
mov
add
pop
dec
dec
into
push
sar
lods
mov
out
mov
jge
pop
mov
in
data16
out
sbb
movs
mov
loope
cmp
mov
arpl
mov
repnz
aad
ins
push
pushf
mov
push
xchg
call
sbb
pop
sbb
mov
dec
pop
mov
xor
jns
jae
xchg
repnz
(bad)
arpl
adc
xchg
or
es
inc
jp
lock
pop
ins
aam
push
mov
jecxz
mov
mov
cdq
xchg
mov
aam
ja
dec
inc
(bad)
popa
jnp
daa
call
out
push
out
push
call
cs
jmp
jne
lahf
into
pop
cld
dec
repnz
enter
adc
jl
pop
inc
int3
in
sar
dec
add
sub
adc
push
pop
js
fwait
fwait
adc
dec
mov
inc
sub
mov
int
cmps
inc
in
addr16
jo
dec
(bad)
xor
out
dec
ret
xchg
int
arpl
(bad)
jle
ds
(bad)
mov
mov
sti
xchg
fxam
std
sti
mov
or
sbb
loop
pusha
enter
call
lods
jb
xchg
cmp
xchg
mov
mov
xchg
aaa
nop
aaa
dec
jno
fimul
icebp
sbb
in
cmp
gs
lahf
jbe
call
hlt
jg
scas
push
out
jns
xchg
mov
sbb
jbe
out
add
add
and
adc
add
add
and
fcmove
adc
xchg
add
inc
jb
sbb
shl
adc
push
sbb
xor
sub
xchg
(bad)
sub
jae
vmulss
push
jge
hlt
inc
mov
xor
stos
add
add
lods
call
neg
pop
cdq
add
or
add
cmp
ror
mov
icebp
addr16
sub
add
jno
loopne
dec
push
and
fsubr
pop
fidiv
xor
push
inc
pusha
imul
cmp
fist
and
jmp
daa
push
movs
dec
dec
inc
cmp
shl
sbb
bound
pop
mov
addr16
add
add
adc
add
add
and
adc
pop
ror
sbb
(bad)
and
mov
mov
jno
scas
jmp
dec
or
or
inc
inc
and
jo
xchg
jns
mov
nop
cmc
imul
cmps
xchg
aaa
(bad)
pop
cmp
in
jp
pop
shl
mov
xchg
dec
mov
test
jns
adc
fchs
in
dec
dec
cmp
or
popf
ficomp
sbb
(bad)
pop
add
push
std
and
not
pop
movs
popf
ja
pop
xor
outs
sub
ds
lods
pop
rcl
xchg
xchg
retf
clc
call
or
mov
adc
clc
mov
push
outs
inc
pushf
loope
mov
mov
pop
adc
cmp
inc
cli
(bad)
mov
lds
test
push
inc
retf
lods
stos
(bad)
cld
push
ja
in
(bad)
(bad)
jb
cmp
xchg
inc
imul
jbe
mov
push
mov
adc
push
rcl
push
xor
jmp
movs
sbb
fsub
mov
movs
xor
jb
movs
mov
test
test
dec
mov
mov
mov
out
sub
aad
ror
push
dec
jecxz
xchg
jbe
test
cmp
int
pop
in
inc
or
fidivr
cwde
sti
mov
inc
imul
in
shl
pop
xchg
dec
in
mov
sub
cli
retf
mov
add
pop
sahf
call
dec
ret
mov
inc
sbb
inc
xchg
push
jnp
je
jae
(bad)
mov
push
jne
inc
in
pop
loope
gs
jp
jo
call
adc
sahf
xor
cdq
mov
loopne
sbb
add
xchg
in
mov
call
xchg
dec
add
fcom
lds
sbb
cli
mov
repz
lds
fdiv
sub
sub
test
xchg
sub
mov
jo
adc
inc
test
add
or
add
add
adc
add
test
jle
and
inc
jb
sbb
and
dec
or
aam
inc
mov
sub
xor
mov
data16
sbb
call
xchg
jo
xchg
push
cmc
or
call
imul
mov
jmp
and
add
and
daa
mov
out
stos
fnstsw
dec
xchg
cdq
push
inc
int
push
mov
fsubr
pop
fidiv
xor
push
inc
pusha
cmp
in
bound
or
not
enter
test
adc
jo
inc
inc
xor
call
fwait
adc
sbb
test
adc
aam
adc
add
add
and
adc
add
mov
in
test
lds
jnp
addr16
push
push
aam
fsub
repz
jno
ror
cmp
dec
jecxz
repz
repnz
addr16
ret
or
sub
or
mov
stos
push
mov
call
ins
call
xchg
xor
push
and
mov
ins
sub
inc
(bad)
mov
rol
(bad)
mov
(bad)
out
movs
xor
lock
push
out
lea
add
or
imul
lahf
and
into
cmp
pop
xchg
repnz
jmp
dec
xor
je
lods
scas
shl
inc
push
ins
add
jno
rcl
ret
retf
ss
jle
xchg
dec
push
push
cmp
leave
shl
fisub
(bad)
scas
xchg
jecxz
adc
mov
(bad)
daa
repz
pop
sub
je
xchg
mov
sbb
cmps
bound
mov
sbb
add
sbb
add
xchg
pushf
fwait
ins
aad
in
hlt
lds
push
jle
loop
dec
enter
ins
int3
push
mov
fadd
xor
mov
enter
outs
lea
imul
daa
xchg
mov
sub
cmps
retf
(bad)
jno
cmp
cmp
dec
sub
jno
jle
pop
sbb
(bad)
mov
aas
inc
cmp
inc
sub
mov
into
dec
sti
mov
das
cld
mov
repnz
jae
ds
xchg
out
mov
sub
lods
test
xor
mov
aam
imul
stos
into
outs
fild
jmp
repz
repz
ins
aad
xor
and
pop
imul
bound
inc
jmp
xchg
js
(bad)
mov
mov
int
push
push
inc
sar
scas
shl
mov
mov
inc
mov
mov
xchg
scas
jmp
pop
mov
in
retf
fwait
pop
lods
(bad)
cmp
ins
add
pop
fidivr
fisubr
jbe
xor
(bad)
and
fisttp
ss
xchg
jecxz
or
jnp
xchg
mov
(bad)
and
mov
stc
bts
outs
mov
mov
push
jo
ds
sub
inc
iret
cld
cmc
out
ds
push
repz
pop
push
push
xor
add
sbb
or
add
and
out
stc
(bad)
in
jl
sub
lahf
jecxz
in
dec
mov
in
movs
mov
jg
cmc
imul
fcomp
ins
pop
mov
or
add
add
adc
add
add
and
inc
or
sub
inc
sub
and
ss
jmp
adc
push
nop
aad
pop
adc
outs
sbb
mov
in
push
pusha
int
leave
lods
rcl
imul
sbb
and
cmps
lds
xchg
jp
mov
mov
inc
push
push
enter
inc
or
add
aas
xchg
and
std
mov
adc
pusha
xchg
daa
pusha
cmp
popf
rcr
pop
ins
call
shl
aad
sub
pop
ror
lds
pop
ficomp
pavgb
nop
mov
push
adc
mov
jge
les
in
lahf
cmp
sub
test
add
add
add
adc
add
add
and
(bad)
hlt
and
dec
cmp
xlat
outs
cmp
js
adc
fist
test
pop
retf
(bad)
(bad)
adc
mov
push
cmp
icebp
sbb
cmp
push
int
xor
mov
sti
dec
jge
inc
ja
or
jmp
retf
mov
icebp
lahf
mov
dec
iret
push
sub
cs
cmps
fwait
clc
push
pop
movs
jbe
outs
mov
sbb
adc
mov
jl
loope
push
mov
idiv
pop
jne
and
jmp
ja
(bad)
fistp
aam
shl
sbb
je
dec
loopne
jecxz
les
xchg
mov
push
scas
cmp
loope
cmp
sub
sub
(bad)
lds
rol
and
nop
mov
aam
fisub
pop
cld
and
add
(bad)
mov
sub
popf
jb
in
mov
shl
ins
cmp
in
and
iret
imul
or
mov
inc
xchg
pop
sub
sbb
sbb
jmp
mov
loopne
dec
jnp
retf
xchg
jle
not
jp
mov
lea
dec
push
bnd
in
imul
jmp
cdq
(bad)
in
dec
in
sbb
cmc
push
aam
jo
mov
dec
dec
ror
pop
cmp
arpl
jae
mov
shr
dec
outs
addr16
push
dec
retf
mov
mov
xor
mov
arpl
jmp
sbb
dec
lods
retf
pop
aam
in
jb
scas
adc
mov
sahf
mov
retf
mov
pop
mov
das
ret
retf
loope
in
in
dec
jle
or
popf
in
pop
jmp
popf
and
push
aad
lea
lea
(bad)
in
test
cmp
pop
push
jmp
jbe
sub
arpl
scas
mov
mov
xchg
(bad)
and
mov
push
mov
stos
cdq
repnz
xchg
jle
pop
stc
mov
pop
mov
iret
push
add
xchg
sbb
mov
sbb
jmp
xor
xchg
aam
ja
cmps
push
gs
and
outs
aaa
jge
mov
xor
movs
ror
sub
jl
xchg
xchg
test
inc
das
ins
xlat
fisub
xlat
popa
fdiv
mov
outs
sub
stc
mov
add
adc
(bad)
fistp
xchg
cmp
fstp
inc
cmp
mov
jle
push
push
mov
pop
(bad)
fld
adc
mov
mul
fsubr
cmp
xor
add
add
and
adc
add
or
fiadd
sub
dec
pushf
test
in
inc
retf
mov
adc
test
in
mov
mov
push
sbb
repnz
xchg
js
dec
in
cmp
loopne
jbe
pop
daa
inc
jns
xchg
aaa
inc
pop
inc
shl
pushf
xchg
mov
add
adc
add
jge
xchg
pop
scas
cmp
imul
xchg
sub
ins
aad
nop
loop
ins
outs
sub
int
shr
ins
bound
test
daa
ins
inc
and
les
and
inc
lods
push
adc
inc
ds
push
inc
xor
ds
jbe
inc
push
sbb
jp
adc
add
add
and
adc
add
mov
xchg
popf
xor
inc
mov
adc
push
xlat
push
xchg
sub
cmp
lock
adc
or
out
fisttp
inc
lods
fcmovbe
mov
xor
inc
ins
pop
dec
dec
fs
jl
mov
mov
xchg
xchg
jb
ins
inc
xchg
jg
in
dec
mov
or
jnp
cmp
lea
and
fs
mov
sbb
and
je
pop
xchg
jp
loop
in
hlt
pop
mov
into
jbe
daa
xchg
or
cmp
mov
jmp
mov
jb
mov
ins
out
out
repz
xor
fwait
sbb
loope
mov
lock
(bad)
in
cdq
dec
inc
mov
fdivr
arpl
cli
in
int
adc
push
cli
jle
aam
aas
lds
je
lahf
mov
jbe
or
cmps
xchg
in
ret
ja
mov
fcmovne
repz
scas
mov
sbb
ficomp
ds
push
cmps
mov
xchg
cmp
sbb
out
in
rcl
and
fimul
cmp
jbe
xor
sub
popa
stos
add
pop
jmp
sub
je
mov
fdivr
outs
dec
sbb
loope
scas
mov
cmp
xor
mov
jge
shl
mov
scas
or
push
(bad)
in
dec
lods
xchg
push
shl
lods
rcl
pop
cmp
fisub
cs
js
ret
cs
out
js
and
scas
int3
ss
jns
inc
fwait
retf
repnz
inc
mov
jne
dec
xchg
pushf
xchg
jne
jne
mov
inc
repz
cmp
pop
dec
in
mov
sub
pop
jbe
jmp
repnz
loopne
jns
pushf
mov
outs
jle
int3
stc
push
inc
xlat
fld
in
jne
xchg
fild
repz
dec
pop
dec
and
icebp
retf
adc
and
pop
mov
mov
xchg
fs
dec
outs
imul
cs
xchg
mov
inc
xor
(bad)
push
ins
xor
dec
pop
or
jne
xor
mov
in
repnz
dec
sbb
es
or
sbb
(bad)
inc
mov
xor
inc
dec
ins
gs
imul
enter
mov
into
mov
loope
mov
jb
ins
stc
dec
mov
adc
inc
jae
add
out
ja
cmps
or
pop
retf
jnp
(bad)
scas
in
ja
into
ins
mov
mov
scas
cmp
cmp
sub
adc
mov
mov
sub
aas
xchg
repz
adc
add
add
and
adc
add
test
jb
inc
jmp
mov
xchg
and
and
imul
pop
adc
mov
push
push
mov
cmp
cmps
jbe
inc
or
pushf
cwde
int
jbe
push
stos
xor
fld
jae
sbb
iret
aaa
mov
dec
shl
inc
hlt
add
or
fs
dec
scas
fdivr
xlat
mov
or
sar
add
cmp
mov
pop
sub
jo
aaa
xor
push
dec
in
lods
dec
mov
aad
push
in
test
cmp
test
or
dec
jne
inc
inc
sub
or
jbe
sbb
push
adc
inc
adc
push
jp
add
adc
add
add
and
or
adc
imul
fwait
hlt
dec
enter
loope
test
cmp
test
mov
cmp
scas
xchg
jbe
add
xor
xlat
add
adc
popf
out
adc
push
mov
mov
into
out
xchg
out
sbb
test
out
(bad)
aad
iret
and
xchg
cwde
(bad)
int3
fistp
(bad)
xor
imul
lea
mov
xor
mov
in
in
stos
inc
or
jmp
cmp
fstp
inc
gs
fisubr
and
stc
sub
mov
loope
pop
or
jnp
sbb
sbb
cmp
cmp
pop
and
fbstp
std
mov
ins
pop
popf
jmp
mov
movs
mov
pop
mov
call
inc
sbb
jns
retf
jne
loop
pop
pusha
xor
cmp
frstor
jae
jae
sahf
(bad)
mov
ds
(bad)
jmp
xchg
mov
push
in
outs
xchg
xchg
outs
cmp
ret
jl
int3
jg
cld
sub
out
fs
xchg
aaa
js
push
pop
inc
push
in
shr
shr
ds
xor
pop
xlat
sub
stos
sbb
jg
mov
xlat
out
cli
or
fild
sub
mov
imul
add
mov
iret
adc
mov
or
fmul
push
stc
daa
fisub
mov
(bad)
scas
ret
(bad)
fnstcw
in
jbe
(bad)
or
call
mov
jmp
jge
and
adc
and
fwait
xchg
xchg
loope
les
sbb
pushf
retf
sbb
mov
out
xchg
xor
cmp
adc
pop
mov
aas
cmps
mov
retf
iret
mov
retf
popa
repz
sub
sub
xor
pusha
mov
xchg
jmp
icebp
xor
call
sbb
sti
movs
xchg
ds
aad
cmp
pop
cmp
ins
outs
(bad)
or
jae
rol
jecxz
in
xchg
cmp
mov
xlat
xor
jns
dec
fadd
push
popf
mov
into
jne
xor
jb
pushf
js
mov
ja
or
in
mov
push
sti
xchg
xchg
out
ins
retf
mov
dec
or
rcl
retf
(bad)
cmp
xchg
cmp
ins
lods
jmp
inc
aad
push
cmp
pop
fldcw
js
cmps
jne
not
dec
shl
jle
ficomp
loop
add
add
and
adc
add
or
push
aam
or
and
ins
inc
mov
dec
test
push
adc
push
adc
lahf
dec
sbb
sbb
mov
jns
test
fwait
pop
ret
dec
pop
sub
ret
loop
imul
dec
enter
pusha
pop
push
dec
and
adc
add
scas
dec
jp
sub
mov
dec
cdq
sub
and
sbb
push
(bad)
mov
jb
jo
imul
sub
fmul
dec
xlat
jnp
jns
pop
mov
arpl
ror
xchg
or
test
sub
sub
bound
hlt
jp
xor
pop
mov
lods
or
add
or
add
add
or
or
jae
mov
mov
ret
outs
cdq
fisubr
mov
jno
sbb
mov
int
scas
sbb
outs
mov
cs
sub
jg
ds
cmp
jge
mov
mov
jg
xchg
pop
mov
xchg
enter
jbe
inc
jno
xor
xchg
push
mov
addr16
retf
arpl
cmps
dec
cli
and
add
sbb
jmp
cs
test
push
ins
mov
stos
repz
mov
mov
sbb
lahf
pop
inc
stos
pushf
iret
pop
jnp
rol
inc
mov
xor
test
add
cdq
jno
div
cli
(bad)
add
(bad)
nop
rcl
push
jmp
mov
sub
mov
bnd
(bad)
cmp
test
mov
mov
sub
cmp
shl
xchg
out
fadd
dec
or
fwait
je
mov
icebp
mov
enter
add
xchg
scas
jns
xor
in
(bad)
jbe
icebp
shr
xor
ins
mov
jae
cld
dec
in
aaa
pop
repnz
jecxz
jl
(bad)
cmp
pop
mov
xor
in
ret
(bad)
xchg
in
std
xchg
hlt
outs
sbb
mov
inc
shl
xchg
or
jb
xchg
pop
jge
scas
push
inc
btr
push
cmps
mov
nop
push
inc
sub
push
inc
sar
jmp
cs
inc
add
cld
mov
out
int
or
dec
shl
fneni(8087
xchg
fidivr
call
les
xchg
(bad)
stos
dec
aas
ins
enter
pop
sbb
push
inc
jbe
fidiv
je
jne
aaa
push
xor
xchg
xor
fdiv
loopne
(bad)
(bad)
mov
mov
into
mov
stos
ret
cs
movs
sti
mov
lahf
xor
in
mov
mov
stos
sub
pop
jns
(bad)
cmp
out
mov
mov
xor
mov
(bad)
clc
in
xchg
data16
pop
in
xchg
jne
adc
pop
cmp
shr
in
clc
aaa
pop
aas
cmp
and
add
out
sub
dec
outs
mov
fiadd
mov
cmps
arpl
add
push
mov
ins
mov
jl
ins
jl
xor
jb
int3
pop
xchg
mov
push
fwait
jb
jle
int3
push
pop
mov
(bad)
pop
iret
sub
pop
(bad)
jnp
and
shl
pop
scas
dec
fisubr
jbe
mov
stc
(bad)
stc
loop
cdq
jecxz
fsub
shr
loopne
movs
mov
cmp
dec
mov
push
push
dec
test
xor
and
sbb
aad
or
fcmovne
pop
popf
fwait
stos
mov
jno
mov
mov
leave
fistp
mov
mov
retf
mov
jne
stc
jle
ins
iret
xchg
shl
cmp
lahf
mov
xchg
add
push
xrelease
icebp
scas
push
pop
mov
(bad)
cdq
jg
jno
sar
std
mov
sub
retf
and
mov
outs
pop
in
jle
test
or
add
add
adc
add
add
adc
or
ins
inc
inc
pop
imul
ror
fiadd
adc
sti
push
adc
jp
fld
xchg
mov
lahf
sub
mov
mov
push
and
test
push
jecxz
sbb
sub
imul
mov
and
or
add
push
add
repz
cmp
test
outs
cmps
cmp
vmovdqa
or
int3
cs
lahf
cld
loopne
push
mov
scas
mov
push
sub
sbb
gs
adc
xor
and
fadd
fadd
ret
adc
test
and
adc
add
or
lea
xor
ss
mov
sbb
sbb
jnp
arpl
daa
inc
mov
pop
adc
loop
dec
adc
inc
jmp
dec
out
out
int
outs
adc
pusha
mov
mov
push
fst
sti
jle
icebp
cmps
mov
ffreep
outs
das
mov
mov
mov
stos
stos
test
dec
stos
(bad)
lods
mov
push
(bad)
clc
pushf
push
lods
mov
ja
retf
cs
adc
pop
pop
repz
dec
cmp
cs
inc
aas
pop
cs
push
call
sub
push
mov
dec
outs
inc
call
jns
fstp
lods
mov
mov
mov
sbb
clc
push
mov
fwait
and
dec
fld
jle
jno
das
fs
call
repnz
retf
(bad)
and
daa
cmp
mov
and
(bad)
mov
in
addr16
gs
mov
push
jl
aaa
dec
rcr
jnp
sbb
fdivrp
inc
xchg
(bad)
fsub
pop
test
in
mov
jno
rcl
enter
and
(bad)
sub
mov
mov
sub
in
(bad)
repnz
mov
or
adc
out
fbld
xchg
fcomp
jl
jmp
(bad)
sbb
fnstcw
cmps
dec
sbb
pop
lds
push
push
pop
mov
jne
fwait
mov
mov
xor
out
cmp
jnp
cmc
xchg
xor
mov
(bad)
hlt
iret
mov
mov
les
pop
cld
cmc
(bad)
leave
pop
test
lahf
sbb
sub
movs
sub
out
ins
int
iret
mov
dec
add
pop
adc
in
out
(bad)
out
out
xchg
ror
daa
scas
clc
mov
out
(bad)
retf
pop
pop
idiv
xchg
or
sbb
(bad)
mov
int3
mov
enter
push
leave
push
push
mov
jno
jae
dec
fwait
ss
jle
js
inc
ins
(bad)
or
cmp
loopne
outs
icebp
fbstp
pop
leave
and
xor
push
adc
ret
mov
cmp
repnz
popf
inc
push
int
lahf
loop
iret
rcr
sti
cld
mov
and
fisub
in
xchg
ins
mov
push
cmp
mov
idiv
into
jbe
rol
mov
cmp
das
mov
and
mov
adc
push
mov
sub
(bad)
cmps
fisub
outs
(bad)
xchg
dec
mov
jmp
mov
jle
cld
addr16
retf
jnp
dec
in
mov
into
gs
ins
ins
sbb
mov
mov
je
retf
pop
sar
dec
mov
fidiv
cs
push
lock
lds
jmp
mov
(bad)
pusha
pop
dec
movs
jmp
jmp
inc
sbb
popa
in
mov
xchg
out
mov
jge
xchg
sub
cmp
mov
or
add
icebp
push
add
pop
jl
(bad)
xor
loope
test
xor
lock
int
aaa
out
rcl
and
dec
cmp
cmp
icebp
xchg
lahf
and
clc
jne
in
pop
(bad)
(bad)
rcr
sbb
stos
imul
pop
mov
sub
rdmsr
lock
pop
push
pop
push
mov
mov
sub
in
jbe
pop
fdiv
sub
bound
mov
pop
push
pop
imul
out
out
ins
jne
pop
dec
mov
pop
loope
inc
or
in
fild
push
enter
mov
mov
mov
into
and
mov
and
pushf
or
clc
inc
les
(bad)
mov
pop
jg
(bad)
imul
das
inc
mov
(bad)
icebp
push
xchg
hlt
cld
aam
mov
jns
sbb
jbe
loop
add
add
and
adc
add
or
mov
or
pop
test
cmp
push
ds
stos
add
pop
dec
push
inc
dec
push
adc
push
pop
inc
xchg
adc
inc
xor
test
pop
movs
repnz
das
lock
cmp
ja
or
jecxz
gs
loop
jns
sbb
add
add
adc
xchg
adc
push
shr
inc
sbb
sar
mov
add
pop
gs
cmp
lds
pop
movs
sbb
cwde
sbb
jp
int
scas
mov
xor
cmps
cmp
add
mov
sub
sub
inc
jecxz
push
sbb
push
sub
adc
add
add
and
sbb
mov
cmp
imul
into
stos
idiv
pop
movs
imul
xor
add
and
cmp
test
jbe
lods
repnz
aas
ja
adc
cld
pop
mov
call
out
jmp
mov
fs
retf
cmp
sub
out
push
mov
inc
adc
sbb
mov
pop
or
loop
imul
pop
inc
mov
cwde
shl
dec
push
xlat
mov
inc
mul
mov
icebp
xchg
xchg
xchg
cdq
and
jns
call
xchg
cmp
sbb
fnstsw
out
xchg
arpl
jmp
push
jmp
popf
jg
lods
cmp
cmp
icebp
pop
jmp
or
imul
stc
iret
in
not
loop
scas
test
push
retf
cli
pop
scas
(bad)
mov
out
leave
rcr
out
mov
push
scas
cmp
stc
and
sbb
ss
dec
or
shl
pop
inc
dec
enter
(bad)
pop
push
mov
(bad)
and
repnz
lods
dec
jmp
mov
test
cs
idiv
push
data16
ja
in
enter
ror
mov
jnp
pop
push
add
mov
inc
fidivr
leave
fcmovb
jb
adc
xchg
mov
cld
lock
repnz
ds
ret
xor
loope
xor
xchg
leave
je
ja
imul
push
inc
jle
mov
pop
mov
jmp
sti
xchg
pop
les
gs
lods
out
sbb
pop
movs
repz
lahf
ret
inc
popa
(bad)
sahf
je
ja
out
xchg
(bad)
(bad)
retf
cmp
mov
mov
push
cmps
push
and
push
pop
cmp
out
jno
jbe
jbe
repz
jae
xlat
mov
mov
arpl
ins
pop
mov
sahf
sub
push
ins
and
sbb
mov
daa
mov
fnsave
rcl
ds
inc
xor
mov
cmp
test
mov
aam
cli
or
int
mov
sar
add
pop
lahf
xor
cmp
cmp
sub
into
je
dec
cmp
and
adc
rcr
cmps
call
scas
arpl
loopne
add
retf
mov
push
(bad)
(bad)
call
in
dec
stc
out
jmp
sub
or
sub
icebp
mov
in
push
cmp
jo
popf
movs
add
fs
jmp
inc
pop
lahf
cmc
pop
imul
das
inc
mov
mov
call
jnp
sar
mov
clc
mov
test
or
rol
test
fbld
mov
pop
xchg
pusha
xlat
icebp
mov
jmp
jge
add
lea
inc
cmp
jnp
scas
lock
mov
daa
in
mov
jnp
cmps
sti
idiv
xor
sub
xor
retf
sbb
jbe
inc
sbb
out
push
lods
add
add
adc
add
add
sbb
test
jb
adc
sub
mov
xchg
sub
cs
sbb
scas
shl
mov
imul
ins
retf
or
or
mov
(bad)
push
push
inc
add
mov
jg
mov
cmps
xchg
mov
and
inc
js
xchg
nop
or
add
add
adc
jnp
or
adc
or
imul
cmp
xor
inc
shl
xor
sbb
into
push
jno
push
pop
fcmovu
int
(bad)
cld
ret
(bad)
sub
sbb
xor
ins
mov
test
and
sub
mov
inc
dec
and
clc
rol
or
int
adc
inc
or
add
add
cmp
(bad)
mov
gs
dec
in
mov
mov
adc
sar
cmp
cmp
loop
mov
mov
daa
jle
movs
and
cmp
retf
cdq
mov
daa
inc
outs
lahf
dec
pop
in
call
or
test
mov
sbb
ins
pushf
mov
pop
jmp
test
popf
adc
lock
or
lahf
pop
sahf
mov
pop
cmp
add
test
mov
push
push
scas
sub
xchg
sar
add
mov
adc
js
(bad)
cli
pop
out
mov
ins
xchg
xchg
or
cmp
pop
shl
loope
leave
test
ret
pcmpeqd
jo
jecxz
mul
mov
cli
ds
loopne
mov
hlt
cmps
not
pushf
dec
shl
sub
repz
in
inc
ins
mov
popf
out
xor
mov
mov
push
mov
add
test
jns
add
or
lds
inc
lds
enter
mov
mov
aam
dec
add
popf
lock
out
fmul
xchg
or
jno
addr16
aad
add
(bad)
xor
cmps
sub
ror
ss
or
sbb
pop
outs
mov
mov
test
iret
xchg
jb
xor
mov
push
jb
test
mov
pushf
or
push
les
mov
jmp
pop
mov
cmps
jnp
ins
mov
xchg
xor
in
das
neg
mov
rcr
(bad)
fdivrp
inc
out
adc
loopne
mov
ins
mov
xlat
add
test
cmp
out
sti
sub
push
push
(bad)
imul
mov
cs
jb
jmp
xor
lock
fwait
daa
test
jne
movs
popa
mov
push
pop
outs
adc
jp
xchg
fldcw
jns
cmp
out
push
or
cli
cmp
scas
mov
jb
and
repnz
xchg
xor
adc
xchg
cld
pop
outs
sbb
movs
adc
sub
into
pop
xor
xor
push
aaa
add
mov
popf
add
add
hlt
jl
(bad)
jmp
or
retf
in
mov
jne
add
jmp
push
outs
sbb
(bad)
retf
icebp
shl
push
fsubr
fsub
cmp
jnp
xor
lea
push
jmp
je
jecxz
inc
add
xor
repz
outs
mov
inc
cmp
push
cmp
inc
rol
and
dec
add
loop
add
(bad)
inc
jbe
out
cs
or
imul
lea
push
jp
data16
ds
stos
cld
fcmovne
mov
and
stos
pop
xchg
popf
mov
mov
jmp
add
out
sbb
pop
or
xchg
mov
cmps
dec
hlt
lea
lea
call
pop
dec
arpl
outs
sahf
cmp
jns
icebp
jle
mov
(bad)
(bad)
xlat
hlt
out
ins
fnstcw
repnz
add
and
adc
add
add
inc
push
jne
sub
mov
inc
iret
inc
xor
adc
mov
adc
cli
mov
(bad)
out
sbb
jbe
dec
rcr
jecxz
pop
xchg
push
lahf
and
mov
(bad)
xchg
mov
and
in
aaa
add
or
add
add
mov
sub
loope
adc
pop
mov
cmp
push
mov
mov
popf
cmp
xor
in
lods
int3
jecxz
pop
xor
jns
pop
mov
xor
cwde
(bad)
fwait
bound
sbb
dec
les
movs
and
inc
dec
inc
cmp
inc
ret
adc
inc
xchg
and
add
add
adc
add
or
lods
(bad)
jnp
sti
mov
fucompp
push
mov
dec
inc
rcl
loop
add
dec
data16
shr
pop
aaa
fwait
sub
out
daa
pop
mov
sub
retf
daa
fadd
jo
fmul
dec
lock
sbb
cdq
scas
ins
push
js
leave
adc
pop
daa
xor
(bad)
sbb
jle
xchg
jnp
pop
in
xchg
gs
jnp
add
ins
rcl
and
xchg
mov
mov
dec
jp
inc
sbb
imul
enter
push
aad
sbb
adc
mov
mov
sti
cmps
int
rcl
aad
sub
push
pop
pop
xor
call
xchg
pop
pop
sbb
xor
add
retf
ins
outs
cwde
retf
imul
rcr
repnz
repnz
pushw
out
adc
sub
aaa
jnp
mov
lods
loop
jle
(bad)
jle
xchg
hlt
jecxz
cmp
retf
shl
fidivr
in
cmps
inc
rcl
lahf
xchg
push
fistp
xchg
dec
out
(bad)
repnz
sar
jp
bound
in
mov
jns
sub
leave
inc
inc
out
mov
les
cmp
je
xchg
imul
or
cmps
inc
add
jge
gs
pop
dec
mov
out
lea
lock
adc
stos
mov
mov
clc
pop
fild
push
pop
fs
int
cmps
mov
imul
faddp
sub
xchg
stc
outs
les
add
xor
sub
cli
push
cmp
mov
(bad)
jnp
ret
push
and
das
mov
push
aaa
xchg
add
mov
push
sub
fnstsw
cmps
in
mov
cmp
dec
mov
leave
cmp
mov
cmc
adc
or
jmp
call
std
inc
and
(bad)
retf
stc
cmp
jg
imul
pop
mov
mov
jmp
dec
test
push
mov
pop
jg
mov
call
fisttp
ins
retf
lods
enter
jae
add
push
xchg
inc
cmp
inc
and
inc
lock
test
lods
iret
pminsw
cmp
repz
push
cmp
out
cmp
xchg
mov
jns
scas
mov
pop
outs
dec
in
jmp
xchg
mov
mov
push
xchg
mov
inc
std
and
add
shl
add
ss
xchg
dec
cdq
in
cmp
xor
cs
(bad)
and
pop
int
adc
add
add
and
nop
and
pop
test
mov
inc
xor
mov
or
and
xchg
and
int3
cmp
cmp
data16
popf
pop
call
sub
or
lods
test
jbe
xchg
push
sub
mov
fcmovnu
jbe
push
add
or
add
add
es
aaa
or
cwde
sub
pop
repz
ins
stos
cmps
or
(bad)
shl
cmp
into
dec
shr
ins
jb
lds
out
repnz
fistp
bound
adc
call
mov
lds
and
stc
enter
push
pop
test
outs
lds
adc
or
add
and
adc
add
enter
les
leave
push
(bad)
mov
xchg
pop
xor
je
sbb
(bad)
bound
out
shl
mov
test
sbb
out
mov
mov
addr16
je
push
test
pop
mov
lock
out
out
jmp
dec
retf
mov
sar
sbb
xor
mov
retf
mov
and
adc
fwait
sub
lods
cmp
xor
imul
cdq
fcmovu
js
in
out
iret
leave
fstp
adc
cmp
test
lds
pop
test
retf
dec
push
scas
push
lock
push
cdq
mov
dec
push
scas
aam
(bad)
pop
lahf
xor
mov
ror
add
xor
(bad)
xlat
mov
mov
dec
mov
fidivr
stos
mov
outs
xchg
jnp
stos
xchg
fnstsw
cli
jnp
xor
jg
clc
call
pop
test
sub
adc
mov
lds
bound
retf
aam
cmp
fxam
ins
hlt
fimul
mov
into
fldcw
fdiv
fisttp
(bad)
cmp
mov
pusha
jne
jle
lea
std
lds
in
pop
sahf
add
and
xchg
dec
sbb
lds
jmp
pop
jb
in
pop
mov
mov
jae
sbb
push
push
fwait
mov
sbb
das
sbb
lods
test
fs
sbb
fprem1
cmps
jmp
sbb
jg
shl
call
mov
(bad)
add
mov
fadd
add
xor
arpl
xor
rol
into
push
out
lea
mov
loopne
mov
mov
in
into
xor
leave
jle
popa
movs
mov
mov
mov
dec
into
ret
xor
inc
not
enter
dec
mov
sub
in
clc
dec
outs
jle
push
out
xor
fst
ja
ja
inc
push
fisubr
sbb
mov
adc
arpl
(bad)
fld
xchg
dec
ds
inc
mov
cmp
jo
movs
mov
xchg
repz
jge
xlat
aas
pop
mov
js
mov
gs
and
mov
xchg
packsswb
sbb
cmp
sub
imul
cs
xor
repnz
in
inc
hlt
aaa
vpsllw
mov
pop
dec
lods
mov
stos
rcl
and
push
xchg
mov
xor
add
jmp
adc
ins
jnp
outs
mov
aam
in
fst
mov
daa
ins
mov
jne
movs
int3
sti
icebp
loop
cmp
mov
int3
fiadd
mov
(bad)
hlt
ja
cmp
scas
pop
cmp
adc
add
add
and
test
sub
sub
jbe
or
jbe
test
mov
pop
mov
push
test
lahf
push
inc
rsm
mov
push
adc
cdq
xlat
sub
pusha
into
mov
out
fistp
fsub
retf
sbb
xchg
push
dec
in
pop
pop
fdiv
test
popf
imul
add
add
and
arpl
sub
ret
leave
cmps
xchg
cs
rcr
push
jmp
into
sub
(bad)
fcmovb
cdq
mov
retf
xor
inc
or
test
inc
dec
xor
clc
mul
push
xor
mov
pop
stos
xor
inc
or
add
cmp
fistp
pop
idiv
jnp
add
movs
xchg
dec
add
outs
mov
jle
mov
jecxz
jbe
out
push
jmp
mov
(bad)
stc
mov
cwde
jmp
dec
lock
das
or
fisubr
into
pop
icebp
ds
aas
sub
add
or
add
push
cmp
mov
(bad)
adc
jbe
stos
dec
pop
loope
xchg
jnp
ja
jg
sbb
div
out
(bad)
or
sub
movs
add
xchg
arpl
(bad)
mov
xor
jb
in
fs
inc
lds
pop
retf
(bad)
pushf
rep
into
bound
xchg
mov
xchg
(bad)
sbb
mov
in
xlat
adc
jle
leave
jns
push
jp
cwde
push
dec
dec
dec
and
imul
out
std
or
test
repz
pop
je
adc
mov
pushf
pushf
cmps
push
jns
shl
out
call
ret
cld
xchg
gs
dec
retf
fldenv
rcl
ins
retf
aam
cmps
mov
repz
movs
ror
daa
xchg
sub
jae
mov
mov
jmp
fdivp
fnstsw
and
xor
adc
jns
xchg
xor
sbb
ficomp
scas
fwait
inc
xchg
inc
lds
sub
movs
add
bound
sub
jns
das
stc
sub
jmp
jne
test
ja
fimul
sbb
and
into
jae
jbe
aam
call
je
sub
scas
daa
fwait
clc
into
push
xor
test
and
stos
jmp
jno
xor
cmp
cmps
dec
retf
mov
sub
jns
jge
sub
push
xlat
retf
scas
xchg
ss
rol
and
add
and
push
les
movs
in
sbb
mov
fwait
test
pop
(bad)
ins
sbb
retf
outs
inc
push
shl
jb
icebp
pop
mov
ins
mov
pop
scas
xchg
je
fsubp
lea
inc
int3
stc
cdq
addr16
into
in
mov
push
mov
retf
cmp
mov
or
out
xchg
out
ja
xchg
int3
out
stos
fist
(bad)
mov
xchg
(bad)
xchg
into
fwait
jnp
movs
mov
pcmpgtb
jb
lods
fstp
outs
push
push
fnstcw
inc
clc
inc
outs
dec
jae
fisub
(bad)
mov
add
bound
mov
in
dec
mov
shl
cmc
(bad)
sub
arpl
call
jno
iret
scas
push
mov
lods
icebp
push
sub
dec
mov
inc
stc
inc
std
retf
in
jo
popf
js
dec
mov
daa
(bad)
fnstcw
jb
jnp
out
sub
inc
mov
(bad)
stos
retf
sbb
or
rcr
dec
(bad)
sbb
and
repnz
cmps
outs
push
retf
lods
push
scas
fcom
arpl
das
fs
mov
mov
sti
popa
jno
je
scas
cs
into
mov
gs
fwait
mov
xlat
and
fwait
out
dec
mov
push
jae
lods
sub
sbb
aad
or
loop
and
scas
cmc
mov
popf
mov
scas
mov
ds
jmp
xchg
and
clc
scas
inc
pop
stos
jmp
cmp
add
inc
or
add
cmp
adc
and
fisub
push
test
xor
dec
fnstenv
mov
mov
test
fwait
sub
xor
mov
(bad)
push
outs
cs
sbb
mov
daa
ins
or
adc
cmp
pop
lahf
pop
or
push
aas
add
cmp
sahf
rol
push
mov
loopne
or
add
add
adc
ss
jmp
xor
stos
test
cmp
out
jae
xchg
mov
dec
(bad)
jno
repz
xor
jns
jbe
sub
sbb
cmp
int
lock
popa
aam
test
jno
in
and
(bad)
mov
cmc
fwait
adc
jne
cmp
add
add
adc
xchg
sbb
pop
sub
cmp
test
fcomp
aaa
jl
and
inc
adc
inc
push
es
rol
fisttp
fstp
jbe
(bad)
aaa
rcl
mov
loope
sbb
or
sub
stc
and
in
dec
sub
or
pop
or
push
inc
stc
jnp
dec
out
sbb
enter
pop
not
sar
dec
ss
ja
mov
mov
(bad)
mov
jg
jnp
or
cmp
stos
jp
inc
push
sub
(bad)
ds
in
rcl
xchg
cmps
sbb
call
mov
icebp
jle
add
(bad)
inc
cli
cmp
sbb
in
outs
imul
mov
outs
and
repnz
mov
jge
jbe
iret
das
fwait
pop
mov
mov
addr16
inc
pop
call
sub
out
call
pop
inc
inc
mov
adc
and
xor
inc
jae
in
mov
stos
xchg
or
ss
mov
mov
into
xchg
adc
add
sbb
pop
retf
std
lahf
movs
add
add
cmp
data16
pop
loope
mov
inc
inc
fimul
sbb
in
outs
inc
mov
xor
dec
lock
cli
out
jmp
(bad)
in
cmp
and
in
in
mov
retf
in
cs
xchg
dec
aad
std
(bad)
cmc
mov
outs
movs
in
out
retf
loop
mov
hlt
add
and
xor
inc
sbb
and
or
mov
mov
sub
pop
addr16
movs
js
cmp
call
les
xchg
outs
out
dec
cld
das
fidiv
imul
pop
or
pop
xchg
mov
stc
loope
out
scas
mov
and
inc
in
fs
retf
add
daa
sub
pop
sbb
lods
outs
push
leave
fcmovne
fcmovnu
and
call
int
and
bound
enter
xchg
stc
dec
push
mov
and
push
dec
test
stos
movs
mov
stos
mov
inc
jo
push
inc
loopne
cmp
pop
out
pop
test
cmp
xor
stc
push
fimul
pop
inc
popf
push
out
mov
jmp
jno
das
rcr
outs
dec
cmps
jge
jle
inc
or
inc
sub
out
and
dec
pop
sub
(bad)
jl
jbe
sbb
cmps
cmps
(bad)
pop
jne
fist
fnstsw
in
leave
cs
mov
jmp
mov
xchg
xor
das
daa
jns
aaa
retf
and
jnp
out
adc
add
add
loope
test
test
add
sti
push
mov
sbb
movs
je
or
mov
push
push
mov
cmps
pop
ficom
sub
xchg
lds
xor
inc
or
iret
leave
jecxz
int
out
and
out
mov
jmp
inc
push
in
addps
push
aaa
or
sbb
adc
add
add
and
js
dec
sar
pop
js
int3
sbb
repz
sti
lods
push
xchg
jp
lods
sbb
iret
jns
mov
and
jne
cmps
sub
rol
clflush
les
sub
pop
adc
add
and
in
push
add
inc
add
inc
or
add
cmp
loope
xor
push
xor
adc
xchg
imul
mov
daa
add
pop
cmp
and
fnsetpm(287
dec
retf
pop
xchg
mov
je
fsubrp
retf
ja
call
mov
(bad)
and
xchg
mov
or
sbb
cmp
sbb
push
inc
rol
pushf
cmp
(bad)
repnz
xor
pop
in
stos
ret
inc
(bad)
pop
mov
fdivr
sub
ja
add
repz
pop
dec
xor
cmp
push
int
push
sub
sahf
addr16
out
out
cmp
pushf
dec
mul
xchg
push
pop
(bad)
sub
test
adc
icebp
xchg
mov
ins
test
pop
jns
imul
cmp
and
iret
xlat
cmp
ins
jb
ds
jns
(bad)
add
repz
sbb
cdq
lea
lods
(bad)
gs
iret
mov
pop
or
sub
sub
dec
sbb
xchg
inc
or
arpl
(bad)
add
stos
jp
out
dec
push
es
ss
(bad)
iret
jb
outs
ss
adc
inc
mov
arpl
inc
sbb
rol
cmp
add
inc
sbb
rcr
out
fdiv
retf
fcom
shl
rcr
sub
jne
cdq
lahf
out
xchg
(bad)
sbb
or
cmps
add
addr16
(bad)
out
imul
ret
fsubr
xchg
aam
fstp
push
into
jmp
inc
xchg
imul
inc
dec
add
sbb
inc
add
xor
(bad)
mov
add
add
add
adc
mov
mov
stos
and
lods
dec
sbb
rol
cmp
add
inc
sbb
rol
cmp
add
inc
nop
fwait
lahf
sub
mov
xor
(bad)
jp
fwait
dec
scas
test
add
inc
adc
lods
shr
mov
mov
pop
loope
jnp
xchg
in
fstp
pushf
cmp
cmp
xor
pop
mov
loopne
jbe
repz
xchg
stc
ja
push
loop
std
or
and
mul
and
jb
jg
fld
sahf
mov
ficomp
sbb
nop
jmp
mov
fisttp
cmp
das
(bad)
mov
lea
mov
mov
jb
mov
pop
push
cmc
sub
or
ds
repnz
outs
xor
(bad)
sub
jne
jp
daa
aaa
sub
dec
xchg
mov
sub
cmp
iret
aaa
aad
out
je
jb
sbb
add
aas
lds
sti
dec
outs
dec
push
and
jl
mov
sub
in
aas
sub
jl
xor
cmps
pop
add
adc
add
push
and
ins
inc
les
iret
inc
lea
or
(bad)
mov
mov
popa
push
cdq
jnp
push
and
fcmovne
bound
mov
push
ja
in
mov
xchg
or
pop
daa
adc
pop
dec
adc
cmp
(bad)
sbb
ret
mov
pop
aaa
fwait
sub
ins
add
adc
add
add
rcr
into
and
retf
mov
mov
retf
jmp
cmp
out
sbb
int3
int
dec
fldcw
retf
jbe
cmps
jbe
es
test
popa
sub
sub
lds
inc
mov
icebp
mov
jne
pop
push
and
inc
xchg
test
and
adc
add
sub
fidivr
cdq
jmp
and
bound
in
arpl
je
jnp
imul
push
ror
hlt
inc
jns
mov
push
inc
shr
(bad)
sub
xchg
jge
lock
(bad)
hlt
pop
add
in
(bad)
pushf
mov
lods
retf
clc
pop
xor
out
xor
xor
retf
jle
xchg
sbb
sub
ss
imul
ds
cli
shl
adc
sahf
dec
std
xchg
mov
scas
xchg
stc
jle
aad
push
int
inc
mov
div
fdivr
aad
mov
loope
sahf
sti
les
sbb
aaa
cmp
lahf
dec
sbb
adc
jnp
test
pop
pop
in
cmp
or
jg
imul
jnp
mov
cmps
sti
rcr
retf
mov
sar
popf
shl
xchg
jnp
mov
pop
xchg
fucom
jl
cwde
fimul
sbb
(bad)
fistp
aas
xchg
xchg
pop
jl
data16
jle
cld
call
push
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
icebp
mov
cmps
mov
iret
in
xlat
pop
cmp
fwait
dec
(bad)
repnz
cld
idiv
in
js
jnp
iret
adc
inc
push
and
jmp
les
mov
sbb
cdq
push
leave
les
js
jg
int3
sbb
in
add
mov
dec
pop
mov
movs
jo
add
cs
stos
int
scas
adc
repz
push
jns
cmp
xchg
dec
fwait
pop
stc
(bad)
jbe
repz
jnp
cdq
jp
xchg
lods
mov
js
push
xor
sti
inc
int
pop
push
xor
clc
jmp
mov
mov
or
retf
pop
sbb
fmul
in
cmp
dec
add
dec
cmps
test
cmp
aas
or
mov
sbb
cs
std
das
in
adc
push
loop
inc
mov
mov
pop
xlat
mov
lahf
xchg
cs
out
stos
inc
sub
xchg
mov
lods
js
jne
sub
fcom
inc
mov
xor
pop
(bad)
das
xchg
pop
pop
push
icebp
inc
dec
or
add
add
test
adc
or
in
stos
add
cld
hlt
sub
dec
inc
add
retf
mov
test
data16
or
push
and
push
and
xchg
popf
movs
dec
pop
mov
dec
pushf
test
dec
and
into
cli
je
movs
xor
adc
int3
jne
add
mov
cwde
sub
mov
and
adc
add
push
sbb
out
jmp
in
cld
sub
pop
mov
icebp
call
sbb
fidivr
mov
sbb
mov
push
or
or
stos
mov
xor
mov
add
mov
jne
(bad)
in
inc
or
dec
inc
inc
or
add
and
mov
mov
mov
es
int3
xor
loopne
xor
nop
add
aaa
or
jl
ret
dec
jecxz
xchg
pop
jle
jns
scas
xchg
sub
mov
mov
sti
sar
pop
inc
pop
dec
scas
jmp
add
mov
sbb
ja
jbe
aam
sar
fisttp
loope
mov
enter
adc
dec
rol
int
push
mov
or
iret
out
mov
(bad)
jae
rcl
mov
nop
xchg
(bad)
and
hlt
leave
inc
mov
retf
rol
add
adc
add
add
and
adc
add
add
and
adc
add
add
cdq
clc
or
call
loop
(bad)
mov
loope
call
jae
fimul
call
int
push
lock
mov
cs
fneni(8087
clc
dec
outs
jmp
stc
fwait
ds
test
jmp
add
out
jmp
xchg
enter
xor
sbb
dec
loop
repnz
push
rol
dec
mov
icebp
test
mov
push
mov
mov
cmp
pusha
sti
das
fwait
or
mov
push
jb
(bad)
shl
cmc
sti
dec
outs
dec
dec
je
nop
je
inc
or
add
cmp
push
es
mov
jbe
add
fist
mov
or
dec
jmp
cmp
test
jmp
dec
ficom
push
push
repnz
ficom
or
inc
mov
or
xor
add
repz
push
or
pop
adc
fidivr
mov
mov
jmp
xor
add
and
adc
pop
jmp
adc
fldcw
shl
sbb
push
popa
mov
sbb
ficom
pop
inc
adc
sub
dec
mov
and
push
mov
test
pop
mov
loope
inc
jno
sub
test
and
int
dec
mov
ret
ret
out
gs
(bad)
push
xchg
sbb
pop
xor
(bad)
mov
jno
dec
repz
jp
addr16
sub
clc
jbe
push
sti
out
cli
fsub
mov
xchg
mov
jae
(bad)
xchg
xlat
mov
xchg
sbb
xor
cmp
popf
push
iret
mov
jnp
lea
sub
cli
aad
sti
cmp
clc
int
jmp
dec
mov
cmp
adc
add
add
and
adc
add
add
and
adc
add
add
and
imul
gs
call
cmp
pop
adc
ja
and
push
mov
ret
pop
xor
mov
stc
sahf
int3
(bad)
lahf
loop
cmp
adc
pop
(bad)
sbb
cs
repnz
jne
rcl
inc
ins
rcr
enter
push
(bad)
mov
mov
call
add
inc
or
dec
mov
fwait
mov
add
mov
imul
mov
and
push
movs
xor
mov
fild
jns
push
sbb
popa
repnz
xchg
dec
rcr
xchg
sbb
mov
jp
stos
ins
pop
(bad)
mov
inc
mov
movs
mov
sub
add
adc
add
arpl
loop
ja
inc
das
cmp
push
int3
jno
outs
xor
cmps
cmp
nop
jge
fst
into
jle
xchg
in
mov
retf
bound
xor
push
movs
mov
les
and
sbb
sbb
sets
outs
mov
mov
test
add
or
xchg
fsubp
ret
mov
push
push
test
arpl
fwait
and
int
retf
fidivr
jg
popf
out
inc
adc
mov
les
mov
fstp
clc
mov
(bad)
cdq
mov
call
sar
mov
push
into
(bad)
ret
ds
and
jmp
dec
jb
gs
out
dec
mov
cmps
fsub
push
(bad)
(bad)
icebp
fcom
mov
sbb
xchg
ja
retf
lahf
mov
aas
jmp
(bad)
imul
cmps
jb
mov
mov
inc
push
xor
push
popf
xor
movs
jmp
ds
mov
cdq
push
rcl
jae
xor
mul
pop
dec
mov
int
gs
lock
ins
ss
cmp
inc
repz
loopne
not
out
test
jmp
fldcw
repz
jmp
fimul
int
sbb
(bad)
jbe
mov
cld
je
cmps
test
and
pop
mov
mov
in
pop
jl
mov
mov
out
pcmpgtw
js
xor
add
or
fidivr
jg
shr
lahf
fcomp
retf
imul
lock
mov
fistp
mov
lock
fucomp
inc
jecxz
aad
mov
cmp
mov
js
std
in
mov
cmp
(bad)
dec
stos
jg
jnp
cmps
jle
cmp
mov
pop
jl
aad
ret
stos
inc
mov
pop
dec
cld
in
jecxz
xor
loopne
not
out
test
out
push
inc
sbb
in
mov
stc
enter
pop
out
shr
and
mov
fisubr
sti
sbb
cmp
xchg
jmp
fimul
int
sbb
(bad)
jbe
mov
cld
je
cmps
test
and
pop
mov
mov
in
pop
jl
mov
mov
out
pcmpgtw
js
xor
add
or
fidivr
jg
shr
lahf
fcomp
retf
imul
lock
mov
fistp
mov
lock
fucomp
inc
jecxz
aad
mov
cmp
mov
js
std
in
mov
cmp
(bad)
dec
stos
jg
jnp
cmps
jle
cmp
mov
pop
jl
aad
ret
stos
inc
mov
pop
dec
cld
in
jecxz
xor
loopne
not
out
test
out
push
inc
sbb
in
mov
stc
enter
pop
out
shr
and
mov
fisubr
sti
sbb
cmp
xchg
jmp
fimul
int
sbb
(bad)
jbe
mov
cld
je
cmps
test
and
pop
mov
mov
in
pop
jl
mov
mov
out
pcmpgtw
js
xor
add
or
fidivr
jg
shr
lahf
fcomp
retf
imul
lock
mov
fistp
mov
lock
fucomp
inc
jecxz
aad
mov
cmp
mov
js
std
in
mov
cmp
(bad)
dec
stos
jg
jnp
cmps
jle
cmp
mov
pop
jl
aad
ret
stos
inc
mov
pop
dec
cld
in
jecxz
mov
mov
xor
mov
or
cmp
sub
dec
(bad)
sbb
frstor
xor
rcl
in
cmp
test
lds
jge
mov
iret
clc
fistp
addr16
cld
in
cmp
test
sub
mov
fistp
loopne
ins
lods
xchg
mov
jmp
push
addr16
jno
xchg
popf
mov
xchg
out
dec
cmp
loope
sbb
stos
jae
sbb
arpl
sbb
frstor
xor
push
push
or
adc
out
xor
cwde
lods
aam
ret
mov
cmp
jp
ret
mov
and
arpl
jbe
jbe
fdivr
ret
sar
mov
in
jnp
inc
push
mov
xchg
mov
jns
mov
ja
sbb
cmp
pop
test
rol
add
and
jbe
add
call
ret
push
ss
push
or
adc
xchg
adc
xor
fs
mov
cmp
repnz
jno
cld
dec
loope
adc
or
js
sahf
cs
push
iret
pop
push
sub
inc
and
push
sub
call
add
add
and
lahf
sbb
test
out
or
sahf
ins
ins
sub
gs
fsubr
jge
inc
xchg
(bad)
push
sub
loope
test
shl
scas
fisttp
jno
(bad)
dec
cmp
mov
xchg
cmp
mov
push
retf
lahf
mov
lods
dec
shl
dec
scas
ja
mov
jge
mov
dec
push
xor
sahf
inc
sti
add
inc
xor
daa
sbb
std
test
xchg
add
jecxz
lahf
inc
out
push
mov
leave
mov
push
sbb
push
test
and
out
and
add
jne
add
jne
add
jne
add
jne
add
outs
ror
push
add
call
fwait
hlt
inc
aad
sbb
cli
and
mov
cmc
push
push
outs
mov
xchg
ins
cmc
push
push
sti
lea
lea
inc
hlt
ins
cmc
inc
add
arpl
jecxz
push
cmp
(bad)
mov
jbe
scas
aaa
aad
(bad)
fdivr
pop
cmp
add
mov
inc
sbb
aas
pop
addr16
(bad)
clc
ds
aas
pop
xlat
mov
inc
aas
xlat
jecxz
ret
mov
(bad)
mov
add
xor
add
(bad)
jne
jns
aaa
fist
jnp
fld
in
mov
fld
push
dec
test
fnstsw
mov
fld
in
lahf
ins
inc
in
fcmovnu
inc
push
pop
inc
not
fnstsw
inc
neg
adc
jg
ret
loope
fld
in
pop
outs
inc
loope
fld
pop
inc
mul
push
adc
hlt
cmp
add
ret
test
jne
push
lahf
loope
js
not
outs
jmp
sbb
push
push
outs
cli
cli
pop
mov
lock
out
mov
pop
mov
lock
out
test
or
scas
mov
pop
outs
jne
inc
retf
pop
inc
mov
sbb
scas
scas
aaa
mov
jge
lahf
loope
js
not
and
xchg
loope
fld
adc
or
xor
jne
aam
xor
cdq
mov
data16
ins
jmp
sub
outs
mov
xchg
call
jnp
inc
jbe
and
jnp
sbb
ror
sub
mov
inc
and
jp
pop
in
pop
sub
mov
imul
xchg
sub
idiv
mov
xor
gs
ins
push
int
test
and
adc
add
xchg
idiv
nop
jmp
rcr
lods
add
sbb
fwait
mov
pop
jmp
mov
in
pop
jl
and
int
data16
bound
bound
mov
add
inc
or
add
(bad)
add
and
test
add
inc
push
push
lods
icebp
or
dec
sbb
gs
test
fwait
mov
push
test
movs
add
pop
add
lods
mov
add
and
push
movs
daa
push
inc
in
push
or
add
or
add
pause
mov
inc
mov
inc
mov
add
push
(bad)
iret
push
or
pop
mov
popf
inc
inc
ss
ret
daa
iret
inc
ss
push
adc
mov
dec
adc
add
or
add
and
or
cdq
scas
sbb
xor
lods
in
push
push
pusha
retf
cmp
mov
or
push
add
jle
inc
add
sbb
cmp
lahf
in
jo
dec
ins
into
neg
jne
adc
cmps
mov
cmp
lods
lea
add
inc
or
add
cmp
pop
js
jbe
out
mov
xchg
pop
and
popa
xchg
pop
outs
mov
jb
ss
mov
pop
inc
ret
jae
sbb
paddw
pop
dec
loopne
gs
adc
mov
dec
sub
pop
cli
adc
inc
in
pop
loop
test
push
sbb
cmp
cmp
mov
test
and
jecxz
or
mov
test
(bad)
mov
ds
push
loopne
ins
inc
js
add
clc
lea
pop
ror
lock
inc
cwde
nop
sar
mov
mov
std
adc
add
and
cmp
jmp
es
das
mov
jo
sub
loop
test
jl
jg
mov
shl
icebp
dec
push
test
cmp
mov
jecxz
xchg
sahf
jp
push
push
or
mov
in
xchg
adc
repz
xchg
test
pop
adc
inc
mov
pop
jbe
adc
es
jnp
gs
lds
idiv
adc
pop
adc
mov
in
cld
adc
and
cld
mov
repz
sahf
js
push
push
or
mov
jnp
mov
lds
mov
push
mov
inc
shr
stc
push
loope
clc
xor
scas
std
sbb
adc
push
dec
pop
jne
add
inc
repnz
cmp
std
sbb
das
mov
in
and
mov
das
mov
loop
inc
aas
push
icebp
(bad)
mov
ret
lea
out
scas
fisub
xchg
jae
inc
fsubr
shl
mov
jecxz
lahf
fisubr
push
inc
les
jnp
into
cmp
jns
sti
cmps
test
repnz
aas
mov
sti
inc
sub
rcr
mov
inc
jp
dec
aas
aam
mov
mov
pushfw
xchg
jg
xchg
imul
push
or
and
jmp
inc
inc
push
sahf
leave
inc
cli
(bad)
adc
aaa
in
push
stos
adc
sahf
call
std
stos
push
push
sahf
cli
push
and
in
mov
hlt
xchg
enter
rol
cmps
ret
jnp
xchg
pop
or
mov
sub
leave
cmps
cli
mov
sbb
loop
(bad)
test
in
iret
jno
shl
xor
inc
movd
pop
movs
push
cmp
jg
xor
fadd
inc
shl
fucomip
mov
fdiv
adc
xor
fnstsw
push
jnp
fadd
test
mov
cmp
ss
pop
adc
mov
xor
ins
loop
pop
ret
mov
loope
sub
ss
sub
clc
push
pop
neg
test
in
cs
mov
xor
push
pusha
fcmovnb
hlt
pop
cmp
ja
push
stos
mov
js
mov
sbb
jge
sti
inc
fdiv
icebp
sub
mov
stos
daa
std
sar
inc
ss
cmp
fisttp
loopne
or
push
fisub
clc
retf
rcl
out
add
hlt
push
loopne
pop
dec
aas
sbb
or
pop
rcr
jge
xchg
fisubr
xlat
adc
jae
add
jnp
ja
movs
jg
cmps
into
add
jno
lahf
cmp
pop
jge
loope
add
les
xchg
je
mov
sub
jo
scas
and
(bad)
xor
lahf
not
pop
xlat
adc
out
shl
inc
inc
adc
sub
and
ss
aad
sbb
imul
push
pop
xchg
xchg
cmp
mov
add
int
movs
pop
add
iret
rcl
mov
jecxz
add
dec
fmul
loope
(bad)
cs
sbb
test
jle
mov
xchg
in
xchg
nop
aad
dec
push
or
nop
cmp
shl
je
cmp
sub
or
cmp
call
or
daa
or
add
pusha
pop
out
fisttp
and
add
and
and
inc
fisubr
cmps
inc
out
jg
push
clc
outs
cmp
jnp
test
mov
out
cli
fdiv
pop
nop
enter
xchg
mov
stos
pop
inc
nop
shr
push
movs
or
add
add
ins
aam
adc
jne
adc
mov
xchg
sub
(bad)
sbb
and
fld
push
or
and
les
imul
push
bound
int
sbb
je
(bad)
(bad)
adc
sbb
or
mov
sub
add
cmp
push
js
mov
jmp
inc
mov
inc
pop
test
jbe
or
sub
add
cli
aad
ja
push
outs
(bad)
xchg
mov
sbb
add
or
in
inc
xor
mov
push
(bad)
enter
test
rcl
retf
es
xchg
sti
sbb
inc
mov
push
jmp
add
add
enter
add
mov
inc
stc
mov
(bad)
adc
fdivp
mov
stos
bound
mov
jno
(bad)
in
sub
in
bound
stos
(bad)
push
movs
xor
std
push
sub
inc
or
add
and
push
inc
push
(bad)
push
test
and
movs
dec
jp
mov
mov
jmp
xchg
lea
adc
or
add
fadd
sub
adc
mov
mov
push
and
aam
pop
test
jbe
pop
or
adc
les
adc
nop
adc
add
add
in
dec
push
pop
and
movs
sbb
xor
mov
fucomp
add
dec
test
xor
inc
cmp
jnp
mov
add
fs
aaa
mov
lds
push
cmp
rcr
ret
clc
xor
jne
jnp
dec
cmp
inc
or
add
add
add
cmova
dec
call
ins
xlat
mov
div
xor
pop
add
mov
movs
pusha
inc
cmp
shl
push
xor
loope
pop
cmp
out
xor
push
mov
(bad)
bnd
stos
sbb
jecxz
mov
add
push
dec
ficom
push
arpl
jp
push
js
(bad)
retf
adc
sub
in
inc
inc
loop
adc
mov
ds
push
adc
cmp
int
push
movs
xor
and
cmp
jbe
adc
loopne
cmp
bound
lahf
mov
cmp
rcr
dec
push
push
pop
call
into
jo
inc
adc
js
icebp
mov
cmp
mov
jle
pop
adc
ins
out
add
sub
push
ds
jle
jne
cmp
bound
adc
inc
add
push
les
xor
lock
addr16
clc
sbb
adc
push
cmp
xor
mov
adc
cld
ins
inc
add
push
test
test
cld
or
mov
and
xlat
int
push
add
and
repz
stc
mov
les
mov
add
add
ds
icebp
dec
push
push
push
dec
inc
add
push
adc
push
call
ds
icebp
sub
push
cli
and
dec
icebp
lods
fwait
mov
inc
mov
jl
out
add
xchg
les
mov
outs
lea
push
adc
ds
sahf
adc
test
push
push
push
call
cmps
ins
lock
sub
sub
adc
push
add
xor
pushf
jl
out
add
xchg
adc
mov
xor
outs
and
loope
clc
push
int
push
xchg
and
adc
push
loop
adc
mov
lock
mov
push
pop
stc
daa
cmp
xor
mov
inc
arpl
lahf
loope
clc
dec
int
push
xchg
and
adc
add
ret
leave
dec
ret
popf
call
or
pop
and
outs
push
push
sub
or
lods
jl
pop
sub
rcl
(bad)
mov
sub
icebp
cdq
call
pusha
inc
cli
sub
icebp
cdq
call
pusha
inc
cli
sub
icebp
cdq
call
pusha
inc
lahf
mov
cdq
stos
rcl
(bad)
mov
mov
mov
push
clc
movs
(bad)
(bad)
adc
jle
scas
push
lahf
test
aad
test
push
bound
sub
and
outs
push
push
sub
xor
push
cld
data16
add
ror
lock
call
add
and
jbe
lock
sub
or
movs
cld
xchg
cmp
aas
or
scas
rcl
les
and
cld
daa
out
add
ret
leave
cmp
mov
or
ret
leave
xor
xchg
lock
mov
push
cdq
stc
and
mov
and
cmp
test
loopne
cmp
bound
adc
jle
ficom
lahf
test
loopne
cmp
bound
push
xchg
mov
test
push
adc
in
jl
int
push
add
mov
dec
stc
pop
js
out
test
push
adc
cmp
stc
pop
into
push
push
add
and
xchg
jmp
ins
aad
mov
jle
inc
loop
adc
lock
or
or
push
push
sbb
xor
sub
mov
outs
xchg
out
xchg
outs
icebp
daa
xor
push
lods
push
pop
sub
or
mov
sbb
popa
mov
cmp
mov
xor
neg
push
ror
push
fwait
repz
xchg
fwait
clc
sub
loopne
(bad)
jl
dec
pop
outs
or
sbb
data16
fild
lds
gs
sub
sbb
jne
adc
je
or
or
add
add
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
and
adc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
adc
add
or
or
add
or
add
add
add
add
add
aad
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
dec
inc
inc
push
js
in
popf
pop
js
push
fcmovb
iret
jmp
mov
aam
mov
inc
cmp
es
xor
or
inc
add
inc
dec
movs
pop
jmp
add
out
std
lahf
cdq
mov
neg
or
jae
out
dec
jb
cmp
into
fdivr
idiv
mov
icebp
push
dec
push
inc
cli
icebp
jecxz
jbe
mov
jecxz
dec
in
inc
sbb
(bad)
(bad)
lahf
fiadd
aas
mov
movs
pop
aas
jle
pop
retf
jle
aam
xchg
xchg
jle
clc
test
clc
icebp
push
cmp
cli
icebp
jecxz
jbe
mov
adc
fsub
push
retf
mov
mov
pop
outs
cli
call
data16
sub
retf
sbb
in
fld
gs
jnp
lds
into
pop
ror
fisttp
cmp
mov
xor
(bad)
(bad)
sbb
push
inc
aas
sahf
test
dec
dec
xor
aad
dec
xor
sub
ins
pop
xchg
sbb
cwde
jmp
push
sub
pop
inc
scas
add
retf
dec
call
cli
cmp
leave
push
pop
lahf
xor
das
shr
mov
idiv
xor
mov
int3
pushf
mov
inc
inc
push
stc
das
pop
outs
addr16
aam
mov
cwde
cmp
fist
adc
retf
push
adc
sub
mov
add
(bad)
in
adc
shr
dec
in
cmp
cmp
mov
cwde
jmp
or
cld
inc
jl
lock
xchg
fsubr
mov
ss
cmp
pop
movs
mov
lods
addr16
dec
arpl
dec
jmp
mov
pop
dec
jecxz
call
add
or
mov
jl
inc
dec
sbb
mov
jno
cmp
jmp
mul
push
push
jge
xor
test
sub
jl
mov
mov
cmp
mov
sub
out
aas
cld
mov
scas
std
pop
clc
add
mov
ret
(bad)
add
ss
mov
mov
in
push
cmp
hlt
or
shr
fild
popa
ins
inc
cmps
mov
push
push
add
test
add
ds
loop
push
jne
mov
nop
sar
add
mov
movs
adc
pop
push
stos
add
shl
fnstcw
cmp
fnstenv
call
pusha
icebp
out
(bad)
push
fwait
jmp
sbb
mov
mov
call
fimul
mov
pop
jo
pushf
fcom
jge
(bad)
ror
iret
dec
shr
clc
clc
sub
(bad)
in
ja
mov
pop
(bad)
dec
jne
retf
add
and
pop
push
mov
mov
push
sbb
mov
ins
sub
cmps
sbb
jbe
xchg
stc
sbb
push
aas
push
test
mov
push
add
lods
and
stos
stos
or
push
sub
call
int
movs
jmp
jp
mov
and
jmp
in
inc
retf
inc
sti
clc
outs
and
xchg
clc
add
mov
popfw
push
mov
mov
pop
and
fsubr
sub
out
cli
loope
pop
mov
xchg
dec
cmps
dec
call
add
sbb
out
stc
xor
push
fmul
daa
cmc
movs
rcl
aas
loopne
loope
pushf
loopne
sub
sahf
lahf
pushf
clc
mov
cmp
mov
mov
xor
lds
push
or
sub
test
pop
inc
(bad)
adc
mov
mov
adc
xchg
ds
sub
add
call
jl
mov
sub
inc
pop
test
xchg
into
add
loopne
imul
jle
or
cld
fst
scas
stos
inc
mov
sub
cmp
sbb
mov
fbld
loop
sbb
fidivr
jb
(bad)
fisubr
add
cmps
inc
push
imul
mov
inc
ins
mov
ret
test
xchg
aam
sub
leave
cld
push
add
mov
cs
add
lock
pop
dec
cmps
in
xor
out
xchg
aam
or
lods
dec
and
jl
dec
cwde
and
(bad)
out
dec
mov
cmp
pop
daa
xchg
lods
adc
test
ins
mov
sahf
stos
cmp
or
cmc
xchg
fnstenv
cli
lea
ss
lea
rcl
shr
adc
sub
les
outs
push
dec
shl
arpl
jne
retf
sub
jae
jno
sub
push
in
push
imul
ins
mov
imul
pop
mov
mov
test
sub
sar
repz
sahf
and
sbb
into
xor
mov
cmp
js
cmp
cwde
cmp
sub
or
sbb
(bad)
addr16
mov
mov
sbb
movs
jecxz
(bad)
jae
jno
in
in
movs
inc
aad
pop
ss
mov
fisub
mov
(bad)
adc
stos
adc
dec
rcl
mov
div
jg
lds
jo
les
addr16
inc
stc
push
mov
int3
not
push
mov
in
cmp
mov
pop
lds
cmp
sbb
inc
loope
inc
aam
dec
and
lds
test
je
adc
jns
adc
loope
push
or
cmp
ret
or
or
push
ret
mov
fistp
cmps
or
mov
push
bound
aad
sub
xchg
adc
gs
push
mov
or
push
rcl
imul
cwde
mov
push
movs
and
in
jbe
cmp
or
push
push
call
inc
cmc
jmp
jp
ds
dec
jnp
jbe
mov
lods
mov
sub
sub
adc
sub
sbb
int
bound
daa
inc
pushf
daa
dec
xor
dec
hlt
std
ret
cmps
ds
adc
inc
int
mov
sub
in
jno
mov
dec
int
aaa
mov
retf
call
sub
jmp
popa
cld
js
ins
fisttp
fcmovb
mov
enter
cmp
cdq
inc
push
xchg
lock
push
mov
cwde
mov
into
sbb
fidivr
lahf
xlat
lds
in
call
and
sbb
adc
mov
call
mov
jp
push
or
sub
cmp
cmps
aam
adc
call
hlt
sahf
cli
dec
mov
cli
int3
pop
pop
jno
push
pop
push
adc
mov
xlat
lds
(bad)
rol
test
inc
jne
or
sub
adc
mov
gs
mov
push
mov
fld
xchg
sub
call
mov
dec
test
scas
mov
ja
sbb
pop
pushf
dec
pop
mov
out
lahf
pop
lods
push
mov
push
cmp
jae
add
(bad)
in
popa
mov
mov
sbb
rol
in
out
xor
cdq
cs
lds
jmp
inc
pushf
(bad)
retf
or
adc
ret
xchg
(bad)
sbb
dec
push
push
xor
adc
sti
push
mov
or
stos
inc
(bad)
fistp
fs
ss
push
pusha
mov
pop
push
popf
cmps
mov
(bad)
repz
fdivr
arpl
mov
dec
sub
rol
aam
ins
pop
outs
xchg
jl
pop
pop
pop
int3
sub
call
iret
adc
mov
rcr
jne
lds
fmul
jle
in
adc
es
add
shl
nop
xchg
sub
ret
imul
sbb
movs
aam
cmp
jle
clc
out
outs
call
std
addr16
(bad)
test
stos
push
xchg
fsub
mov
dec
pop
mov
xchg
ins
lahf
and
mov
icebp
sbb
pop
lahf
mov
lea
shl
xor
jae
out
popf
je
loopne
fidiv
pop
inc
jmp
push
and
int
jecxz
xchg
loop
add
and
cmps
cmp
and
xor
adc
cmp
repz
jecxz
call
mov
jmp
or
push
outs
jmp
leave
cmp
add
sar
xor
int3
jge
outs
jg
lock
sar
retf
mov
mov
lods
mov
cmp
aad
pop
sti
pop
pop
or
(bad)
movs
fadd
push
dec
in
ins
jb
loope
ja
out
movs
xchg
xlat
xchg
out
sub
xlat
(bad)
mul
call
mov
xchg
leave
ret
jbe
jmp
cwde
ret
lds
pop
push
add
jle
outs
mov
add
es
adc
dec
idiv
sbb
es
jg
loop
cmp
push
xchg
pavgb
push
dec
pop
jno
and
loope
(bad)
hlt
dec
mov
mov
fld
mov
xlat
ror
xchg
push
mov
sub
or
mov
push
and
aas
loop
pop
ss
je
xchg
in
push
jmp
clc
cmps
je
fdiv
fidiv
std
imul
pop
jge
arpl
mov
pop
lods
xchg
fidiv
jmp
sub
jo
jmp
pop
adc
loope
push
jl
and
mov
dec
mov
fs
jl
cmp
dec
out
or
xor
sbb
push
jecxz
or
hlt
repz
aas
mov
icebp
(bad)
pop
push
dec
je
dec
mov
sbb
adc
in
clc
adc
int3
xchg
mov
adc
int
mov
sub
adc
add
xchg
jns
rcr
xchg
add
cmp
mov
test
jno
shr
lods
pop
jl
cmp
or
addr16
fadd
or
mov
retf
test
jmp
inc
sub
in
jecxz
dec
mov
adc
mov
addr16
dec
out
inc
sub
jecxz
xor
push
or
xchg
mov
std
cli
lock
fidiv
inc
and
jbe
aaa
sti
icebp
xchg
sub
and
call
out
mov
fild
addr16
push
inc
xor
sbb
cmps
mov
pop
push
xchg
lds
test
lock
ret
out
dec
ss
dec
push
js
add
add
test
mov
adc
mov
sub
mov
jne
(bad)
jo
and
test
fisub
mov
xlat
mov
ds
xlat
aaa
xor
repnz
mov
shr
dec
loope
dec
cwde
and
or
mov
dec
and
adc
jb
lods
rcl
retfw
xchg
test
cwde
fwait
or
push
stos
je
jae
adc
mov
pop
cwde
sub
cmp
cmp
out
call
cld
fst
dec
pop
int
mov
xor
cs
mov
test
adc
adc
xor
push
and
or
inc
jb
punpcklwd
sbb
add
jge
fwait
test
jecxz
lods
cmp
mov
mov
xor
add
(bad)
nop
movs
(bad)
cmp
jmp
popf
inc
jnp
dec
icebp
cmp
ds
adc
push
inc
sub
lock
icebp
in
das
sbb
jb
jle
sub
cmp
ins
fdiv
jp
cdq
addr16
aas
and
das
pop
inc
pop
mov
push
js
or
mov
and
mov
lds
xchg
adc
mov
and
and
inc
les
les
pushf
dec
sub
in
xchg
mov
imul
test
int3
outs
jbe
pop
outs
dec
pop
inc
sbb
and
pop
push
xor
retf
pop
shr
sbb
cmps
cmp
inc
je
mov
dec
push
movs
enter
ds
dec
or
gs
into
imul
scas
ds
sti
cdq
add
jg
cmp
pop
xor
aas
sub
idiv
and
scas
add
push
adc
mov
rol
dec
or
and
dec
int3
loope
lahf
shr
mov
mov
jmp
loop
mov
sti
addr16
dec
pop
in
fsub
(bad)
cwde
sub
sub
mov
(bad)
outs
loop
test
pop
ds
mov
mov
mov
out
dec
pop
dec
jne
inc
cld
jg
std
xchg
jecxz
push
loopne
iret
cmps
sti
gs
or
std
cmp
cpuid
pop
pop
add
inc
xchg
(bad)
sub
rol
adc
pop
dec
dec
dec
call
jbe
xor
neg
jae
lods
imul
outs
ret
cmps
mov
cmps
cmovne
push
dec
push
sbb
adc
or
inc
mov
(bad)
pop
pushf
outs
das
mov
sti
hlt
jmp
dec
cdq
xchg
(bad)
jmp
mov
add
mov
dec
fstp
sbb
sbb
dec
movs
mov
sbb
inc
push
(bad)
shl
shl
jle
pop
movs
xchg
or
xor
xor
pop
jb
rcr
and
cmp
adc
outs
jecxz
sbb
cwde
push
jo
or
std
mov
clc
xor
push
xor
mov
data16
xor
retf
jl
push
movs
rol
sub
sbb
mov
and
or
inc
out
push
rcr
push
arpl
movq
jns
mov
pop
lods
sbb
packuswb
xchg
lods
and
frstor
ds
adc
gs
movs
sbb
push
mov
pop
add
lds
fcmovnu
jp
or
sahf
mov
fwait
mov
sub
push
(bad)
shl
leave
stc
int3
jb
ret
loopne
(bad)
aas
rol
dec
(bad)
movs
lods
movs
cmps
xchg
mov
jg
or
xchg
dec
neg
sbb
call
pop
leave
ja
jns
push
push
cmp
mov
jge
adc
movs
mov
call
je
fdivr
xlat
shr
xchg
scas
repnz
arpl
push
sub
mov
iret
popa
jmp
add
adc
sbb
sub
dec
retf
out
mov
push
push
lods
mov
xor
xor
push
pop
push
repnz
in
jbe
push
imul
stc
and
ss
fdiv
xor
or
fcompp
mov
mov
not
iret
mov
das
push
sbb
pop
adc
inc
sbb
(bad)
push
(bad)
call
jge
mov
out
inc
test
push
imul
sbb
jge
(bad)
aam
push
jmp
icebp
mov
das
in
and
stc
loope
jp
scas
xor
mov
jb
outs
sub
imul
mov
pop
enter
shr
mov
adc
jge
addr16
push
push
scas
sub
mov
pop
stc
loopne
mov
in
jp
pop
pop
pop
jmp
pop
cld
xchg
popa
shr
pop
sar
fdiv
inc
xchg
mov
test
sar
test
aam
pushf
out
dec
pop
sub
dec
mov
mov
pop
dec
mov
and
repz
rcr
fnstenv
enter
clc
adc
aad
je
ret
ins
cmc
test
xlat
pop
xchg
mul
cmp
jnp
out
aam
jg
sbb
jl
adc
mov
shr
mov
dec
pop
mov
xchg
sbb
jbe
and
mov
xchg
and
jae
jnp
or
jge
aam
push
stos
pop
ret
pop
xchg
mov
mov
popa
popa
mov
cwde
and
pusha
inc
call
ds
lds
call
lds
mov
push
popf
jnp
sbb
popf
mov
mov
inc
mov
pop
sub
jb
loope
mov
inc
shl
cmps
dec
stos
xchg
xchg
xchg
inc
int
mov
in
and
inc
retf
loopne
and
imul
inc
lea
cmp
xchg
jmp
xchg
dec
ds
jo
mov
push
bound
adc
popf
(bad)
xchg
mov
hlt
scas
movs
cmp
sub
pop
fld
dec
push
xor
sbb
test
push
popa
mov
and
mov
mov
shl
fnstsw
call
imul
aad
add
nop
ins
addr16
push
xor
lds
test
sahf
rol
out
mov
lods
dec
xor
jo
cli
and
ins
mov
fidiv
popa
mov
sahf
mov
mov
mov
sbb
jb
sbb
and
stos
popa
icebp
repnz
and
pop
adc
aas
xor
push
cld
mov
cli
les
test
mov
pop
cwde
jmp
adc
neg
jg
(bad)
mov
jl
outs
mov
sbb
data16
leave
out
test
aas
sar
rol
push
inc
retf
ss
(bad)
xchg
rcl
sub
pop
jle
mov
cmp
jns
into
sahf
std
xchg
xor
fisttp
repnz
lock
sar
repz
sub
jmp
cli
mov
addr16
cli
clc
call
iret
jmp
out
jge
sar
jne
mov
dec
cmc
xchg
iret
ds
loope
loope
test
in
rcr
push
pop
ds
shr
or
imul
mov
inc
in
fwait
push
das
sbb
dec
jmp
dec
addr16
and
cmc
mov
push
mov
sub
cmps
dec
jecxz
pop
jle
(bad)
jmp
or
cmp
push
imul
loop
mov
int
cmps
mov
pop
push
jbe
fwait
mov
in
enter
add
enter
daa
mov
cli
in
repz
jmp
push
scas
nop
mov
cli
leave
repz
fimul
aaa
scas
cmps
out
inc
daa
push
mov
dec
xchg
popf
pop
enter
mov
data16
mov
sub
push
shr
in
in
pushw
ds
dec
add
xor
dec
mov
out
xor
pop
sbb
js
mov
rol
aas
pop
sub
out
push
mov
dec
mov
test
inc
push
mov
fld
scas
mov
stc
cmp
rcl
jmp
popa
call
or
inc
inc
xchg
sbb
mov
in
jmp
fistp
sbb
aad
cmc
jp
int
shr
outs
data16
pop
je
addr16
cmp
(bad)
pop
data16
or
call
jae
ins
pop
dec
xor
cwde
nop
and
adc
shr
adc
ds
xchg
sbb
rcl
ins
movs
mov
mov
inc
sub
jecxz
call
fwait
push
inc
call
addr16
stc
outs
movs
push
ret
jns
fdiv
ins
fadd
inc
dec
popa
popa
push
and
inc
scas
lea
ja
lds
lock
push
push
push
lods
movlhps
mul
into
lods
fwait
call
mov
imul
cmp
cdq
inc
shl
arpl
sub
xor
sub
sbb
add
(bad)
push
sub
inc
imul
push
or
dec
adc
xchg
push
xchg
mov
jecxz
sub
(bad)
and
stos
outs
outs
arpl
int3
dec
into
cmp
xor
jne
mov
(bad)
mov
add
sar
xchg
add
dec
mov
add
sub
cmc
xchg
fdiv
jp
sbb
mov
pushf
mov
cwde
sbb
mov
(bad)
cli
jge
push
pop
sbb
out
aam
jl
leave
sub
movs
cmp
ds
xchg
cmp
fwait
lods
pop
inc
test
sub
cwde
(bad)
xchg
xor
push
test
add
xor
das
inc
repz
lods
in
fsubr
cdq
sub
adc
jb
aas
lea
inc
xor
inc
xchg
and
lods
add
cmp
xchg
ret
xor
sbb
aas
outs
loopne
mov
hlt
jmp
dec
pop
pop
cmp
lds
xchg
div
jns
aas
and
lods
pop
inc
lahf
repnz
retf
pop
mov
mov
sbb
gs
dec
cwde
and
add
mov
mov
repnz
test
and
sti
ror
ins
cld
mov
mov
jns
data16
push
ins
or
inc
bound
pop
push
adc
retf
fstp
add
imul
push
adc
icebp
mov
fstp
jmp
xchg
in
sbb
jmp
or
(bad)
rol
sti
mov
pop
daa
mov
mov
jp
(bad)
cmp
push
inc
retf
repnz
pushaw
and
imul
shr
mov
hlt
js
xor
jne
aad
pop
inc
mov
in
mov
xor
inc
xchg
iret
pop
jle
mov
cmp
push
cmp
jmp
outs
dec
rol
cmps
cmc
fwait
xor
xchg
fiadd
push
dec
bound
and
not
jmp
xchg
in
pop
jmp
mov
sub
stos
lock
push
aaa
sbb
pop
mov
xchg
jo
clc
popf
fpatan
push
add
adc
fdivrp
and
jg
ret
clc
into
push
call
cmp
fiadd
lock
push
dec
pusha
jmp
mov
adc
aad
rcl
push
ins
and
call
pop
and
xor
dec
imul
fwait
xor
int
into
mov
jne
cld
jo
fwait
mov
cmp
inc
imul
imul
push
pop
sar
pop
dec
dec
mov
jg
mov
push
adc
rol
add
cmp
cmp
or
pop
mov
sub
bound
push
cmps
dec
pop
push
int
ss
outs
sti
cli
jmp
sub
mov
ins
sbb
mov
lods
retf
cwde
aam
cmc
popf
imul
mov
outs
cli
ins
sbb
jno
or
or
lea
mov
adc
fucom
imul
repz
cdq
sub
jmp
xchg
cmp
adc
adc
dec
pusha
push
test
ret
adc
cli
sbb
loope
in
mov
je
adc
aaa
mov
dec
adc
or
mov
(bad)
outs
sti
imul
jne
xor
mov
dec
mov
stos
adc
fdiv
iret
movs
mov
imul
pop
jecxz
ror
std
xchg
lods
cmp
mov
rol
gs
mov
dec
sub
pop
(bad)
jnp
rep
sub
inc
leave
sub
push
iret
cmps
mov
dec
pop
pop
mov
fidiv
xchg
hlt
add
sub
dec
pop
mov
in
out
mov
or
xor
fidivr
push
pop
xor
push
pop
push
in
js
pushf
adc
mov
mov
mov
ds
mov
std
fidiv
lock
mov
clc
jecxz
shl
cmp
pop
fisubr
mov
jbe
xor
adc
jno
sbb
call
xchg
jp
iret
(bad)
test
push
das
mov
mov
add
(bad)
push
jb
cmp
dec
dec
dec
pop
pop
push
aam
inc
xor
sti
jnp
fwait
jmp
jae
jecxz
ins
mov
sbb
adc
std
lock
cmc
mov
shl
xlat
push
cli
call
mov
mov
test
mov
fist
push
inc
xchg
mov
inc
jne
adc
ficom
sub
outs
ret
mov
dec
retf
or
test
mov
out
adc
addr16
adc
outs
adc
or
xchg
pop
into
pop
mov
into
jb
adc
pop
mov
dec
imul
jnp
and
retf
test
ret
pop
push
inc
add
mov
mov
(bad)
mov
cmp
fistp
jne
jb
jle
cli
repz
lahf
sar
addr16
sbb
in
adc
out
dec
(bad)
cmp
mov
std
add
pop
jle
cmp
icebp
jecxz
mov
xchg
sar
pop
adc
lods
push
ds
xor
xchg
sbb
lods
movs
dec
jl
push
pop
add
xor
rol
sub
sti
xor
cmp
fs
cs
sbb
rcl
pop
push
sbb
or
cwde
push
sub
sub
int
gs
jns
xchg
push
xlat
sub
or
dec
pop
mov
sub
clc
pop
mov
mov
fs
mov
gs
push
jb
dec
loop
addr16
cmps
iret
loop
call
out
add
and
inc
not
ss
push
mov
pop
ss
fsub
pop
lahf
jb
mov
ror
mov
mov
repnz
aad
jno
xor
js
sub
pop
push
inc
das
jne
cmps
cmp
call
mov
daa
shl
mov
dec
mov
xchg
nop
inc
(bad)
push
lods
xor
sbb
ficom
out
mov
or
xor
jnp
gs
in
cmps
sub
sbb
sbb
push
push
xor
jnp
rcr
in
(bad)
aad
mov
push
(bad)
jns
dec
adc
stc
or
mov
dec
daa
jno
popf
mov
xor
inc
push
sti
fsubr
mov
pop
inc
cmp
(bad)
cld
popf
rol
in
cmps
loopne
mov
iret
loop
dec
dec
lahf
mov
jle
jb
ss
xor
jnp
mov
out
jmp
push
idiv
cmp
into
test
not
int3
push
repnz
hlt
jmp
rcl
scas
cwde
rol
jb
dec
jb
retf
call
invd
ja
test
in
daa
retf
shl
fndisi(8087
push
adc
mov
sub
stc
outs
movs
imul
dec
movs
xchg
mov
out
fidiv
cdq
dec
das
fldenv
push
inc
(bad)
dec
fstp
in
cmp
mov
scas
adc
scas
pop
stos
jg
xchg
repnz
xor
mov
retf
push
test
mov
mov
icebp
ror
push
into
int
popf
cli
xchg
add
rcl
mov
aas
jg
(bad)
(bad)
xlat
rcr
jmp
outs
scas
jo
mov
scas
cmp
pop
not
out
int3
lea
sub
stos
scas
popa
mov
mov
ins
fdiv
aam
lahf
outs
mov
push
or
inc
xchg
pop
dec
ja
xchg
push
lea
cmp
xchg
adc
aaa
(bad)
mov
mov
pop
loope
out
cmp
imul
cli
jae
hlt
fsub
cli
clc
mov
or
push
inc
scas
ja
dec
xlat
test
rcr
push
pop
cmps
not
loope
or
push
and
imul
sbb
stos
lds
lock
retf
push
(bad)
fld
cdq
pop
inc
push
mov
out
cli
gs
pop
push
stos
add
je
icebp
sbb
xchg
jae
mov
loop
jecxz
push
js
sbb
ret
pop
hlt
out
or
sbb
iret
imul
pop
hlt
jle
enter
cmp
jnp
mov
mov
sti
push
mov
popf
inc
xchg
dec
cmp
add
(bad)
in
pop
sub
adc
pushw
int
pop
dec
sub
push
jae
sub
retf
mov
daa
cs
push
xadd
cmps
pop
mov
loop
les
jge
mov
imul
cld
lock
ror
push
sub
cmp
loope
or
mov
ffree
les
add
imul
xchg
dec
in
ror
clc
xlat
fiadd
inc
sub
ja
or
addr16
push
ror
rcr
cmp
outs
into
sahf
cmps
jge
aaa
rol
iret
add
pop
pop
(bad)
jmp
or
xchg
(bad)
(bad)
fwait
cdq
dec
lods
pop
adc
leave
adc
je
dec
psrad
scas
sbb
jp
ja
mov
and
fsub
ss
scas
adc
cmp
pop
stos
push
stos
out
xchg
scas
pusha
iret
dec
or
(bad)
std
(bad)
std
cli
cmc
sbb
test
mov
test
inc
movs
jo
rep
dec
movs
mov
add
xlat
sbb
(bad)
jle
mov
shl
fadd
mov
ja
ror
push
outs
scas
(bad)
arpl
mov
cmp
out
mov
into
rol
inc
xchg
cmps
xchg
hlt
xor
hlt
sti
lock
jp
outs
loopne
mov
jg
into
xchg
pusha
xchg
adc
jno
pop
push
push
(bad)
adc
pusha
ror
xchg
mov
scas
pop
sti
mov
stos
push
xchg
ret
mov
(bad)
(bad)
in
fnstenv
mov
cwde
and
push
xor
pop
and
in
fld
lahf
mov
cmp
mov
mov
(bad)
push
push
hlt
loope
jns
or
fsubrp
fnstsw
xlat
arpl
movs
gs
xchg
pop
inc
pop
rcr
cmps
mov
mov
fdivr
jle
fdivr
repz
xchg
sbb
mov
xor
mov
fisubr
mov
sti
sbb
mov
pop
inc
mov
add
inc
outs
lods
cmp
adc
loopne
pop
retf
scas
outs
fild
loop
cmp
adc
lods
out
movs
dec
inc
push
push
xchg
push
or
adc
push
es
dec
aad
sub
mov
es
cmp
pop
scas
sbb
outs
in
gs
push
outs
add
pop
movs
jecxz
add
cs
mov
xchg
pop
int
int3
inc
push
and
sub
adc
imul
mov
loop
mov
out
mov
adc
jge
mov
jae
pushw
jb
lods
nop
repnz
pop
shl
scas
xchg
xor
xchg
rcl
cmp
pop
and
inc
(bad)
pop
adc
cs
mov
idiv
pop
movs
fcomp
fs
test
jge
imul
sbb
retf
push
adc
pop
push
dec
mov
xor
mov
movs
out
icebp
cwde
out
icebp
call
xor
add
vpsubw
sub
or
jns
or
xchg
inc
and
cmps
cdq
push
fbstp
(bad)
stos
add
mov
stc
dec
jno
cmp
push
xchg
mov
in
not
dec
sar
jae
mov
push
xchg
mov
sbb
(bad)
cmp
dec
pop
mov
add
cmp
mov
aaa
ins
rol
push
push
push
mov
fxch
push
push
test
inc
dec
and
repz
fiadd
shl
movs
xchg
or
and
dec
pusha
or
dec
inc
imul
pushf
int3
loopne
dec
stos
xor
or
cmp
jae
mov
int
sub
addr16
ficom
lahf
daa
out
gs
push
nop
imul
stc
push
jbe
mov
test
in
push
mov
push
movs
cld
or
pop
(bad)
in
push
ror
xchg
js
outs
pop
inc
push
sbb
nop
push
xor
aam
dec
rcl
test
push
stc
stc
or
cwde
lods
inc
jo
jno
(bad)
ret
fcom
lods
daa
sub
or
xlat
mov
jnp
ror
xor
push
and
scas
push
mov
push
dec
mov
mov
in
stos
dec
push
mov
push
jle
sbb
frstor
stos
movs
pop
repz
mov
ret
(bad)
or
nop
jnp
add
stos
mov
sub
loope
xor
fldenv
pop
mov
jle
push
sub
ret
out
inc
inc
ins
fnstsw
test
ror
mov
(bad)
push
jno
lock
mov
sub
bound
and
jle
fcomp
mov
and
movs
stos
push
scas
push
sub
fimul
jnp
loop
xor
js
in
aam
loop
mov
adc
xor
pop
mov
push
adc
retf
sub
ror
adc
mov
sbb
fldenv
add
inc
and
and
mov
test
in
push
push
push
xchg
adc
mov
jnp
clc
sbb
lahf
loop
les
(bad)
push
nop
sbb
push
push
and
nop
and
xchg
adc
and
lods
mov
icebp
dec
jb
mov
and
(bad)
pop
test
aaa
cmp
mov
mov
add
in
push
inc
mov
xor
neg
cmp
lea
aam
mov
int
pop
movs
inc
mov
mov
out
lds
clc
mov
xor
xor
push
rol
mov
fcom
repz
inc
je
mov
clc
jb
fisttp
loop
adc
and
outs
xor
icebp
or
(bad)
mov
jg
jl
retf
mov
loop
pop
xchg
pop
(bad)
(bad)
(bad)
enter
rol
sbb
xor
int3
cdq
xor
call
dec
pushf
cmp
ins
xlat
scas
pop
push
jo
mov
das
add
dec
or
outs
hlt
xchg
sub
mov
pushf
mov
call
push
ds
fistp
fwait
mov
popf
push
lahf
jo
mov
les
mov
sbb
sub
jg
leave
adc
push
push
call
movs
mov
(bad)
icebp
push
loop
icebp
push
and
aaa
jno
in
mov
push
adc
mov
sbb
in
mov
gs
adc
inc
xchg
or
mov
cmps
mov
cmp
sub
sub
std
push
xchg
mov
(bad)
pop
ds
mov
retf
in
push
cmps
and
xchg
mov
sub
inc
movs
mov
push
pop
rcl
rcl
js
xchg
(bad)
std
lods
mov
push
jb
or
in
shl
mov
and
inc
lea
and
jge
inc
mov
pop
mov
adc
stos
fcomp
in
out
pop
fidivr
aam
push
aas
in
pop
sub
push
pop
mov
movs
mov
stc
retf
sbb
outs
mov
push
ins
inc
inc
out
xchg
adc
cld
add
les
out
dec
pop
das
pop
les
xchg
div
aad
and
(bad)
adc
mov
mov
fcomp
mov
loopne
push
adc
retf
shl
push
cmp
das
and
inc
jae
sub
ror
les
dec
fcom
int3
jbe
pop
scas
cmps
bound
and
mov
add
bound
aaa
movs
(bad)
cmp
inc
xchg
cmp
pop
mov
or
int
fist
adc
cmps
jbe
xchg
icebp
mov
and
retf
gs
jns
call
adc
and
push
jb
retf
cmp
push
inc
jnp
push
mov
push
les
dec
sar
mov
pop
cdq
xor
dec
pop
call
jo
mov
out
adc
pop
idiv
mov
stos
mov
xor
arpl
(bad)
mov
inc
sbb
xchg
in
mov
push
test
and
sbb
sub
sbb
add
and
mov
imul
call
arpl
icebp
(bad)
aam
push
test
xchg
cmp
stos
mov
push
sub
js
mov
pop
fadd
push
or
cli
or
cmp
out
movs
pop
loop
fist
pop
bound
or
retf
pop
mov
jge
imul
sub
jbe
pushf
into
imul
test
stos
aaa
lock
hlt
jecxz
mov
pop
jnp
stos
pop
pop
test
xchg
adc
xchg
(bad)
mov
mov
into
in
rcr
or
inc
je
or
adc
mov
clc
jl
loop
dec
fimul
jmp
pop
mov
xchg
xlat
push
movzx
fst
mov
stos
mov
psllq
adc
inc
xor
out
inc
xchg
cmps
xor
mov
jp
rcr
adc
push
stc
cmp
adc
and
sbb
shl
(bad)
xchg
aad
and
xchg
add
xor
into
into
add
adc
(bad)
xor
stos
push
adc
mov
mov
and
cs
jl
in
lods
pop
xor
retf
push
mov
cmp
ins
daa
loop
and
rcl
rol
mov
sbb
ds
and
mov
sbb
cld
fwait
push
xchg
push
push
or
dec
xor
cdq
inc
sbb
out
cwde
enter
daa
inc
xchg
cmps
stos
jl
test
cmps
icebp
ja
jo
mov
popf
pop
mov
loop
mov
mov
and
rol
sub
cmps
scas
jl
add
je
xor
jnp
mov
pop
xchg
cmp
adc
pop
mov
test
vfnmsubss
shl
cmps
push
pop
push
adc
movs
xor
sbb
ret
int
fsubr
sbb
jp
addr16
stos
jb
mov
lds
push
push
inc
in
in
or
push
out
xor
mov
enter
mov
pop
popf
(bad)
retf
js
stos
jb
ret
jp
inc
les
dec
lahf
cmp
cmc
loop
cmps
int3
sbb
imul
sbb
mov
repnz
jno
mov
stos
mov
jle
xor
xchg
stos
into
mov
push
test
jl
dec
sbb
xor
push
inc
jne
cmp
mov
push
fld
adc
push
push
mov
imul
(bad)
bound
test
dec
mov
outs
adc
mov
call
ret
sub
and
gs
jns
ret
or
push
cmp
inc
jne
cmp
push
sti
dec
mov
pop
mov
xor
pop
out
xor
or
mov
mov
call
or
sub
imul
pop
adc
das
stos
or
sub
fwait
pop
dec
inc
test
xor
sub
cwde
int3
test
movs
push
rol
std
xchg
push
popf
retf
or
push
push
jle
ds
(bad)
mov
pop
xor
call
cmp
mov
or
jl
sbb
test
jns
mov
test
and
cmps
jp
daa
shl
(bad)
adc
retf
imul
cmp
cmp
mov
cmp
lea
daa
xchg
jmp
mov
inc
jne
adc
clc
pop
mov
inc
inc
lahf
or
mov
xchg
jne
cld
mov
mov
sub
jg
out
(bad)
jb
ret
scas
jne
ja
and
jns
scas
test
mov
adc
neg
mov
dec
adc
retf
bound
shl
mov
leave
sbb
mov
add
sbb
sbb
jns
ret
jle
push
jmp
jae
test
test
mov
xor
sub
out
xor
dec
pop
mov
leave
push
movs
mov
mov
jmp
neg
jae
pop
inc
(bad)
ds
js
xchg
lods
in
sub
aam
mov
loopne
movs
and
push
jmp
(bad)
sbb
cmp
sub
cmp
mov
cs
bound
mov
xchg
rol
mov
es
stc
cdq
shl
std
xchg
xor
ins
add
retf
cwde
inc
jecxz
out
mov
mov
call
ja
scas
xchg
or
jge
push
in
adc
push
push
lea
imul
shr
sub
xor
fiadd
(bad)
stc
pusha
jb
cld
mov
imul
mov
xchg
popa
and
mov
mov
adc
retf
mov
jmp
push
stc
push
cld
xchg
fld
and
sub
aas
outs
cmp
push
test
stos
mov
push
in
sub
xchg
imul
push
gs
and
test
sub
sub
lods
and
inc
fwait
mov
fwait
cs
or
jmp
jb
cmp
sbb
cmpxchg
lahf
jo
sti
cmps
pop
cli
lods
push
inc
cdq
rcr
jb
push
fs
sub
scas
push
dec
sbb
adc
out
push
jge
adc
mov
dec
adc
jne
add
dec
push
push
dec
cld
xchg
jo
push
out
js
shl
retf
call
push
out
les
push
xchg
xchg
stos
or
push
xchg
(bad)
test
pop
mov
in
mov
mov
js
push
repnz
popf
aas
push
push
mov
jle
lods
dec
mov
in
test
fcomp
nop
sub
push
out
stc
std
inc
sbb
inc
inc
bound
imul
pop
inc
inc
inc
xchg
mov
xor
pusha
stos
outs
jno
mov
xchg
xchg
or
aaa
dec
jecxz
inc
xchg
scas
and
daa
sbb
loopne
inc
xchg
dec
inc
xor
xchg
(bad)
cwde
cmps
cmps
add
mov
add
inc
xchg
or
stos
repnz
push
inc
mov
mov
xchg
jmp
ss
mov
jg
mov
pushf
and
or
jmp
cmp
sub
(bad)
cmp
retf
shl
and
inc
xor
cmp
nop
push
jns
dec
cs
call
call
inc
imul
xor
dec
pushf
adc
pushf
shr
fs
xor
jae
mov
xchg
push
imul
repnz
lods
imul
jne
inc
lea
mov
push
jns
stos
and
inc
mov
pop
enter
je
and
pop
dec
stos
sar
mov
loop
hlt
pop
mov
push
out
add
xchg
pop
in
or
scas
fcomp
add
loop
addr16
in
cmp
jg
stc
aas
data16
push
xchg
xchg
mov
cmp
pop
ins
push
fist
or
mov
adc
mov
dec
adc
sub
push
inc
scas
loopne
or
test
add
inc
test
mov
cmp
inc
cmps
es
into
push
push
stc
mov
arpl
fwait
imul
dec
imul
dec
adc
fmul
fsub
push
arpl
jecxz
and
dec
shl
cs
inc
lds
rcl
push
xchg
pop
cwde
pop
pop
stc
mov
jns
rcl
push
out
retf
jno
mov
mov
fwait
retf
fisub
add
out
xchg
cli
int3
jne
sub
push
cs
dec
pop
dec
push
mov
adc
rcr
(bad)
xor
jl
(bad)
xor
push
mov
adc
retf
lds
jno
lahf
rcl
push
cdq
inc
retf
out
addr16
stc
(bad)
xchg
push
xchg
add
dec
sbb
xlat
test
xor
dec
jne
pusha
push
mov
adc
pop
cmps
dec
sahf
cmp
mov
sub
gs
retf
add
and
cmp
icebp
adc
ja
retf
fst
mov
lahf
jo
dec
jno
and
adc
clc
sahf
mov
in
xchg
mov
xchg
rcr
pop
sub
jne
cmp
fcomp
add
psrld
add
imul
dec
adc
aad
sub
je
test
jns
js
push
dec
inc
xor
dec
mov
jge
or
sub
xor
xor
sub
iret
mov
add
(bad)
mov
mov
jo
rol
or
jb
sub
mov
loop
fisttp
jae
lds
ret
jns
push
or
inc
in
mov
ret
arpl
div
fcmovbe
data16
call
ret
and
outs
cwde
mov
test
cmp
mov
add
and
aas
hlt
jns
add
ror
lea
jne
push
mov
repz
test
pusha
mov
test
ror
fnstsw
mov
mov
mov
push
imul
adc
fmul
cmp
add
xchg
imul
pop
inc
push
add
jbe
cmp
ret
aad
push
loopne
mov
mov
test
xchg
mov
iret
xchg
xchg
cmps
leave
mov
push
add
mov
adc
jo
cmp
fdivr
scas
xchg
push
fild
and
aam
xor
inc
dec
js
mov
pop
not
xchg
push
xchg
xor
hlt
in
call
cmps
scas
outs
and
cmps
adc
pop
push
and
cmc
hlt
mov
scas
dec
jmp
ret
jp
int
aad
dec
add
(bad)
stc
bound
daa
ret
and
fdivr
scas
sbb
dec
adc
jg
hlt
gs
inc
call
sbb
sub
xor
rcl
or
sub
(bad)
and
cmp
call
data16
mov
push
popa
hlt
jmp
movs
push
xchg
or
sub
pop
pop
xchg
push
icebp
aaa
xor
jb
clc
pop
mov
inc
xor
imul
int
mov
test
add
pop
stos
adc
in
cmp
jl
mov
and
mov
mov
adc
in
(bad)
out
outs
aam
xor
ret
add
js
loope
add
fcom
inc
xchg
push
lods
fs
ffreep
sbb
xor
hlt
jmp
fidivr
inc
imul
sbb
imul
mov
push
dec
mov
pop
jp
arpl
pop
out
scas
sub
es
shl
inc
jnp
cmovno
test
popa
push
push
dec
mov
inc
push
mov
arpl
push
fwait
inc
xor
cmp
pop
jns
adc
hlt
out
xchg
sahf
movs
fadd
lahf
mov
mov
push
loopne
sbb
imul
mov
nop
xchg
xchg
fcomp
add
push
js
pop
jnp
test
mov
add
cmp
imul
push
jbe
aas
cmp
push
stc
hlt
push
mov
imul
add
aam
mov
add
xchg
pusha
test
js
dec
les
stos
mov
pop
inc
mov
inc
rcr
push
mov
outs
inc
xchg
push
ins
arpl
retf
xor
add
sub
int3
jnp
inc
inc
fild
(bad)
fsubr
push
inc
jns
push
xor
adc
and
cli
mov
dec
dec
lea
push
pminub
or
arpl
jmp
aas
mov
mov
xor
jae
bound
mov
(bad)
xor
or
rcl
je
mov
imul
into
jecxz
mov
out
cmps
adc
shl
call
mov
shl
inc
movs
xor
test
ret
popf
inc
mov
sbb
cmp
stos
rcr
pop
fsub
sbb
pmulhw
sbb
cmp
xchg
push
mov
cs
inc
inc
(bad)
js
dec
js
add
arpl
add
xor
push
pop
lock
xchg
inc
pop
xor
in
movs
rcl
mov
inc
das
push
or
rol
sub
stc
xor
retf
call
sbb
xlat
push
add
or
(bad)
mov
out
test
sub
jecxz
push
(bad)
push
in
clc
aad
stos
or
test
cmp
mov
out
mov
xor
mov
dec
mov
rcr
cmp
rol
xchg
push
movs
rcl
mov
or
mov
push
das
hlt
sbb
ret
dec
and
mov
xor
lock
cwde
(bad)
sub
mov
push
add
push
mov
push
sbb
jns
sub
add
mov
mov
or
push
pop
loope
and
retf
jo
push
fwait
mov
test
stos
pop
xchg
fsubr
hlt
jns
ret
sub
mov
ds
mov
nop
rcl
imul
popa
sub
cs
mov
xor
cmps
cwd
dec
add
int3
mov
cmp
push
(bad)
das
fidiv
shr
xlat
sbb
(bad)
pop
mov
pop
rcr
adc
sub
push
sbb
stos
mov
call
and
sub
(bad)
jl
nop
lods
add
test
js
inc
icebp
mov
ins
mov
jns
and
mov
outs
fsubr
push
sbb
push
mov
dec
mov
sbb
sub
sbb
inc
imul
stos
jno
xor
sahf
add
dec
scas
pushf
mov
fcomp
push
push
add
sbb
sub
inc
ins
hlt
push
sbb
jmp
add
cmp
jns
jbe
add
outs
std
ror
cli
jl
cmc
fucomi
pusha
dec
push
mov
pushw
push
clc
push
mov
pop
sbb
test
sbb
scas
jnp
mov
xchg
cmps
sbb
add
cwde
lock
jmp
push
loope
std
icebp
and
dec
mov
add
and
sbb
sub
retf
sub
in
loope
or
sbb
shl
push
arpl
(bad)
retf
mov
push
jg
cs
(bad)
js
rol
(bad)
es
daa
sbb
dec
lahf
push
mov
nop
rcl
call
sbb
pop
add
ja
test
imul
add
test
and
xchg
out
mul
add
ret
adc
mov
sub
mov
adc
in
clc
adc
add
push
jns
call
popf
inc
cmp
lahf
dec
aas
out
or
movs
aas
push
sahf
inc
mov
push
jg
xor
hlt
(bad)
sub
scas
xchg
mov
js
sub
ds
add
pop
cmc
jns
push
mov
mov
jl
aad
adc
imul
push
sbb
imul
int
sahf
imul
adc
imul
stos
jl
cmp
aam
cdq
fwait
jle
pushf
jle
lahf
icebp
and
inc
rcr
stos
aas
mov
call
mov
sbb
push
ror
test
mov
sub
ret
xlat
pop
inc
fmul
mov
test
add
push
jbe
mov
xchg
xchg
lahf
sahf
xor
sub
cmp
es
push
mov
aad
stc
inc
jns
mov
aam
sbb
sub
mov
(bad)
pop
in
mov
aas
pop
mov
ss
mov
push
xchg
cdq
nop
jae
mov
in
pop
jne
adc
sbb
lahf
inc
mov
(bad)
hlt
mov
mov
jbe
mov
sub
sbb
adc
cmp
mov
in
cmp
adc
or
adc
xor
ret
push
pop
cmp
add
(bad)
add
data16
xchg
shl
mov
cmc
(bad)
sub
cmps
scas
jmp
repnz
mov
jb
or
(bad)
pop
sub
mov
or
sub
fsubrp
ins
or
pop
and
xchg
in
xchg
lods
sbb
jo
shr
movs
sub
pop
xchg
jno
cld
push
xchg
lea
cmc
jno
adc
(bad)
mov
cdq
inc
jne
enter
pop
hlt
inc
dec
jno
(bad)
inc
mov
or
jg
repnz
adc
icebp
jo
frstor
pop
fistp
sbb
xchg
daa
push
hlt
pop
call
scas
inc
sti
pop
aad
jle
or
clc
pop
lea
mov
test
push
mov
loopne
jns
rcr
and
mov
or
dec
popa
popa
inc
lock
loopne
(bad)
jmp
push
aas
xchg
out
lahf
xor
(bad)
jle
pop
inc
xor
lods
mov
mov
iret
neg
dec
cwde
adc
dec
(bad)
cmp
in
inc
xchg
jmp
sub
push
push
adc
mov
push
iret
pop
add
or
cmp
jg
dec
or
fsub
shl
xor
mov
mov
in
sbb
sbb
ret
fnstenv
(bad)
out
leave
repz
push
sti
push
stc
jmp
push
fimul
mov
shr
push
cs
add
retf
dec
fist
pop
sub
sahf
inc
(bad)
ret
inc
mov
fisttp
call
(bad)
mov
or
cmp
xor
sub
loop
mov
jnp
xor
fwait
mov
call
std
mov
test
cmp
mov
push
jbe
jnp
jno
fcom
pop
out
adc
fdivrp
mov
xor
jb
mov
lods
sbb
xor
in
add
ret
sub
mov
push
fimul
retf
popa
cmp
sti
clc
mul
(bad)
and
push
in
inc
enter
mov
sub
(bad)
rcl
add
frstor
cli
sbb
cwde
test
neg
test
pushf
adc
adc
or
adc
daa
out
scas
retf
popf
jnp
cmp
dec
mov
retf
mov
(bad)
jmp
rep
retf
(bad)
xlat
leave
rcr
xlat
call
imul
jo
inc
ins
jmp
fbstp
imul
ror
xlat
dec
push
adc
addr16
arpl
mov
inc
dec
pop
mov
adc
sub
fsubr
push
sahf
inc
lea
xor
or
fcomp
sbb
shr
push
cmp
inc
mov
dec
inc
xor
sbb
fcmovb
not
rcr
test
lea
icebp
ja
icebp
stos
push
leave
loopne
xchg
cmp
outs
scas
nop
adc
retf
push
jo
pop
sbb
pop
sti
call
(bad)
gs
push
xor
sub
xchg
jge
lahf
jecxz
(bad)
pop
loope
mov
pop
add
dec
je
gs
test
dec
jae
and
stc
js
cmp
push
sub
dec
pop
and
daa
shr
pop
stc
fld
lock
ins
repnz
push
dec
jne
sub
mov
std
mov
xlat
mov
xchg
outs
push
mov
data16
jmp
icebp
jge
add
jmp
shld
data16
ds
fst
push
push
mov
pop
add
mov
stc
nop
(bad)
pop
mov
sbb
mov
enter
xor
xor
or
or
dec
adc
or
call
push
add
fnstsw
jnp
cmc
pop
retf
inc
adc
outs
es
retf
inc
lahf
dec
pop
sub
cld
scas
es
adc
fadd
fs
popa
add
sar
inc
mov
xchg
loope
cwde
test
(bad)
loope
mov
inc
inc
cli
addr16
loop
mov
in
mov
repz
in
pop
pushf
btc
cmp
iret
mov
inc
pop
ds
push
cmp
xchg
hlt
push
mov
js
repz
jae
sahf
and
je
xchg
lahf
adc
ins
stc
jo
out
ret
stos
jmp
cld
outs
stc
repnz
fcom
adc
pop
jo
out
dec
(bad)
jns
in
aaa
cmps
shl
retf
pop
arpl
pop
pop
mov
mov
xlat
add
out
lahf
dec
add
mov
sub
and
add
cwde
shl
pop
retf
mov
fcmovnbe
xor
mov
lea
fimul
adc
xor
mov
nop
or
or
jno
sahf
call
pushf
push
push
(bad)
sub
mov
pop
iret
lods
push
mov
push
addr16
push
pop
and
test
add
pushf
stos
cmp
rcr
xchg
icebp
inc
movs
push
push
inc
cmp
jb
mov
in
adc
div
int3
push
std
lds
pop
or
cld
outs
pop
pop
push
jns
inc
sbb
jmp
xlat
jns
pushf
not
ds
into
fist
(bad)
mov
rcr
fs
jge
mov
fstp
push
xchg
daa
push
or
jmp
jmp
(bad)
(bad)
mov
inc
inc
add
pop
movs
test
dec
les
aaa
sub
pop
mov
mov
xchg
lds
frstor
adc
push
xor
or
jmp
xchg
daa
push
int3
not
pop
scas
int3
idiv
jp
push
xchg
mov
rcl
sar
adc
jno
or
ins
ret
(bad)
lock
inc
es
(bad)
out
jl
dec
inc
add
mov
sub
add
push
dec
dec
jns
add
adc
jne
cmp
adc
jmp
or
aad
and
clc
push
xchg
pop
inc
cmp
mov
xor
pop
dec
adc
xor
add
(bad)
mov
das
push
aas
movs
ss
cmp
fldcw
mov
push
das
add
push
inc
xchg
cli
in
pop
cld
add
jecxz
push
inc
xor
je
xor
dec
jo
mov
gs
aaa
(bad)
aam
mov
fisub
push
mov
or
(bad)
(bad)
retf
pusha
push
mov
lahf
push
scas
add
cld
clc
push
xor
lds
add
repnz
loopne
daa
inc
jecxz
mov
mov
push
jmp
outs
out
loopne
inc
jecxz
cmp
xchg
inc
or
les
pop
or
ret
ins
xlat
sub
mov
xchg
loop
scas
jle
mov
add
mov
(bad)
lahf
jb
fcom
int3
push
jae
leave
xchg
sar
jle
add
pop
in
push
sub
xor
lods
pop
xchg
fcmovu
ins
test
sbb
lock
or
(bad)
out
rcl
(bad)
fcomp
jbe
cmove
push
mov
pop
sbb
out
push
jge
(bad)
mov
test
add
bound
xor
sbb
add
pop
add
or
int
jecxz
or
xchg
repz
jb
pusha
pop
pop
jge
shl
stos
or
xor
sti
inc
fld
ja
pop
jmp
and
cmps
mov
pop
sbb
cvtps2pd
jmp
dec
adc
push
sub
inc
sti
xor
dec
mov
outs
data16
pop
ret
fwait
mov
xchg
pop
ss
xchg
pop
xchg
sub
arpl
add
pop
loopne
fld
add
movs
add
cmp
cmp
es
or
mov
sbb
sbb
cld
clc
test
clc
icebp
push
cmp
cli
icebp
jecxz
jbe
mov
jecxz
dec
in
inc
sbb
(bad)
(bad)
lahf
fiadd
aas
mov
movs
pop
aas
jle
pop
retf
jle
aam
xchg
xchg
jle
clc
test
clc
icebp
push
cmp
cli
icebp
jecxz
jbe
mov
jecxz
dec
in
inc
sbb
(bad)
(bad)
lahf
fiadd
aas
mov
adc
pop
dec
enter
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
pop
in
add
add
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
jmp
add
js
data16
dec
dec
add
add
add
add
xchg
add
add
add
add
sbb
add
add
add
add
sub
add
sub
add
add
dec
inc
dec
inc
inc
add
inc
add
add
je
add
add
imul
and
inc
add
dec
add
fild
inc
add
add
add
or
pop
pop
pop
ud2
or
or
movlps
adc
adc
adc
sbb
adc
adc
sbb
sbb
adc
and
push
and
push
pop
push
(bad)
fild
inc
add
pop
push
or
push
push
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
add
or
push
inc
add
and
add
add
adc
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
or
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
or
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
add
mov
xchg
xchg
cwde
cdq
call
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
fcomp
(bad)
jecxz
in
out
jmp
cmc
div
clc
stc
cli
(bad)
fiadd
or
add
add
add
add
add
test
scas
aad
jle
and
xchg
add
nop
sti
push
call
sub
add
imul
call
mov
adc
imul
inc
adc
push
xchg
dec
inc
cmp
inc
xor
nop
mov
pushf
push
mov
push
test
dec
cmc
movs
out
or
dec
sub
popf
test
movs
add
push
add
mov
dec
inc
add
mov
movs
mov
push
ret
inc
jp
imul
movs
add
xor
call
add
mov
cwde
or
mov
and
xchg
push
adc
sub
xor
xchg
nop
add
dec
bound
mov
movs
adc
test
sub
movs
in
inc
jp
adc
call
mov
adc
jo
dec
ficomp
sub
adc
test
or
inc
cmp
inc
out
inc
sbb
arpl
push
or
add
inc
cmp
mov
jnp
inc
or
jns
call
pusha
rol
cmp
pop
outs
sub
mov
imul
add
mov
sub
dec
arpl
imul
cs
push
or
push
sub
pop
jno
mov
call
and
mov
add
jno
adc
dec
add
inc
daa
xor
movs
das
in
inc
add
add
xchg
xchg
jge
mov
cli
push
mov
dec
sbb
or
mov
dec
cmps
or
movs
add
ror
cmps
lods
cmp
push
in
inc
sbb
sub
imul
movs
movs
movs
add
mov
add
xchg
dec
int
xchg
push
xchg
shl
xor
add
cmps
xchg
dec
push
dec
add
sub
mov
movs
and
call
or
xor
jns
xchg
dec
add
dec
jp
mov
test
nop
cli
or
addr16
push
lea
dec
arpl
dec
push
push
sbb
fidiv
dec
dec
pop
popa
cmp
xchg
jbe
hlt
cmps
and
dec
inc
(bad)
xchg
rcr
add
dec
hlt
cmps
lods
and
rol
jp
shl
dec
sub
jp
jns
out
dec
jae
add
fwait
inc
xor
mov
push
cbw
add
inc
mul
inc
adc
sbb
jmp
xor
sbb
dec
cmps
sahf
mov
lea
imul
pusha
inc
push
mov
cmps
ja
push
sbb
dec
and
push
out
dec
add
mov
push
sub
lds
push
push
xchg
xor
jge
ss
cmp
mov
inc
sbb
sub
adc
push
inc
adc
push
ja
mov
movs
and
adc
inc
sub
and
jns
adc
push
ficomp
out
inc
sub
fsub
lds
mov
mov
add
mov
int
sub
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
push
mov
mov
sub
sub
push
jge
jo
jnp
inc
push
sub
inc
adc
sub
xchg
add
in
dec
pop
push
dec
cmp
out
push
mov
xor
add
dec
dec
jp
ror
cmp
cmp
cmp
shl
imul
sub
shr
out
mov
sbb
das
pop
inc
dec
sub
sbb
(bad)
hlt
ror
add
retf
inc
rcl
push
mov
mov
jecxz
pusha
das
push
hlt
mov
xor
outs
sub
lds
jo
mov
mov
dec
push
arpl
popf
add
push
bound
sbb
and
mov
sub
shl
push
add
push
add
lds
xor
out
pop
dec
push
test
dec
ret
xchg
mov
and
adc
inc
xor
sub
push
loop
push
inc
ret
push
dec
pop
push
push
xor
adc
push
dec
sbb
movs
pop
inc
cmp
mov
push
adc
imul
pushf
mov
arpl
or
pop
add
add
or
or
add
xchg
push
inc
or
call
inc
sub
cmps
movs
xor
ror
sar
adc
push
ficomp
test
mov
adc
movs
xor
dec
loop
outs
mov
test
and
dec
xor
sbb
add
aaa
sbb
push
adc
call
popa
cmps
call
xor
in
dec
push
or
push
push
xchg
jecxz
cmp
shl
add
push
dec
dec
pop
pop
dec
pusha
les
add
mov
jno
sahf
hlt
and
push
add
cmps
std
sub
xor
dec
icebp
int
push
es
rcl
sub
test
dec
movs
es
rcl
pushf
rol
call
daa
xor
inc
movs
jmp
jmp
imul
inc
lds
mov
sbb
add
popf
dec
int
sbb
mov
int3
inc
jecxz
push
mov
push
sub
cmp
xchg
mov
and
dec
sub
cmps
rol
mov
and
xchg
add
mov
arpl
xchg
movs
cmp
lahf
dec
imul
icebp
inc
or
push
pusha
adc
stc
push
jns
sbb
bound
xchg
mov
test
mov
push
add
dec
pop
sbb
or
mov
push
add
inc
and
aam
mov
inc
jmp
xor
add
sub
(bad)
xchg
mov
add
jecxz
adc
adc
inc
and
shl
movs
pop
pop
hlt
cwde
(bad)
imul
mov
inc
jp
sbb
ret
mov
push
mov
mov
lahf
loope
mov
mov
rol
dec
cmp
push
add
ror
jp
sbb
(bad)
gs
mov
add
add
add
add
mov
xchg
ins
cmp
bound
jae
and
test
popf
sub
xchg
xor
call
hlt
xchg
cs
shr
lds
mov
sub
or
sbb
cmps
push
adc
movs
lds
jecxz
adc
pop
dec
sub
sub
xchg
push
loop
adc
sub
mov
cmp
mov
shl
mov
dec
call
sbb
sub
jp
xchg
nop
test
lods
and
adc
dec
adc
rcl
stos
dec
adc
pusha
int
movs
sar
pop
js
xor
xchg
xchg
mov
shl
push
cmp
mov
jp
mov
pop
add
clc
push
inc
pop
add
push
push
test
dec
and
adc
or
enter
test
xor
cmp
dec
sub
ror
call
push
sbb
inc
lds
sahf
jns
call
cmc
cmps
xchg
inc
or
xor
add
dec
in
dec
xor
test
imul
jmp
dec
jp
push
add
sahf
xchg
sbb
or
imul
call
xchg
mov
dec
frstor
jmp
jmp
fldenv
add
xor
sbb
add
xor
cmps
rcr
es
mov
sbb
nop
cmc
movs
xor
inc
les
dec
jno
arpl
adc
cwde
sub
ror
cmps
jbe
push
shl
cmp
adc
arpl
mov
and
add
lds
cli
rcl
mov
das
jp
sub
push
push
arpl
popf
ror
xchg
or
(bad)
mov
adc
xor
inc
loope
imul
dec
mov
jbe
xor
xor
mov
out
inc
adc
bound
dec
push
rol
dec
dec
mov
inc
add
mov
popf
adc
inc
add
push
sub
movs
cmps
push
xchg
add
push
add
jbe
add
pop
adc
inc
movs
movs
add
push
push
rcl
push
pusha
es
pop
jp
aaa
mov
mov
inc
inc
jp
xchg
mov
fcom
push
out
add
pop
inc
imul
mov
jmp
pop
sbb
cmp
test
and
or
adc
xchg
xchg
cmc
movs
adc
dec
adc
jo
mul
es
dec
cmps
rol
jp
dec
inc
add
mov
push
add
test
inc
(bad)
pusha
out
sbb
sub
fisubr
dec
movs
and
jge
pop
or
push
out
add
lds
xchg
push
loop
call
ret
xchg
call
or
mov
loop
xor
inc
movs
lds
sub
cwde
movs
mov
adc
push
dec
ret
mov
rol
push
jno
sbb
dec
push
inc
xor
jb
imul
mov
xchg
jne
sbb
inc
and
dec
inc
(bad)
sub
sub
cmps
mov
cmps
push
imul
cwde
mov
push
xor
imul
inc
sub
sub
pop
push
(bad)
adc
lock
mov
or
dec
test
add
adc
adc
bound
and
inc
cmps
jo
and
push
lods
add
inc
push
call
and
adc
sub
adc
cwde
imul
dec
popa
cmps
pushf
rcr
push
call
or
cmps
adc
dec
xor
out
dec
cmps
mov
pusha
xor
imul
(bad)
xchg
mov
dec
ins
inc
dec
imul
dec
xor
dec
xor
(bad)
cmc
cmps
mov
(bad)
call
cmp
pop
movs
add
push
push
push
push
arpl
imul
test
mov
cmps
adc
shr
dec
push
int
test
shr
add
shr
sub
sub
inc
imul
sbb
xchg
call
xor
int
push
int
mov
movs
and
rcl
dec
add
adc
add
sub
call
shl
call
xchg
call
add
dec
cmc
mov
pop
sub
fwait
dec
ret
mov
xchg
adc
inc
out
inc
sub
sbb
dec
inc
dec
adc
movs
and
cwde
ret
xchg
nop
add
xor
dec
inc
or
adc
lea
lea
adc
imul
push
dec
add
test
mov
and
sub
mov
sbb
mov
adc
add
or
test
jp
inc
adc
sub
ret
sub
push
repz
add
in
inc
jp
push
movs
movs
pop
pop
nop
or
mov
cmc
mov
sbb
mov
movs
add
push
add
push
rcr
loopne
and
mov
add
pushf
sub
xor
xor
jo
xor
xor
rcr
loopne
clc
push
inc
ret
adc
rcl
shl
movs
cmps
bound
and
xor
xchg
movs
movs
and
dec
hlt
mov
sbb
rcl
add
add
or
push
jo
int
in
push
inc
pop
add
cwde
cmps
add
push
add
cmp
jno
jp
mov
xor
or
push
inc
sub
pop
inc
sub
jnp
add
and
dec
cmp
sub
push
add
movs
and
mov
sbb
or
mov
shl
cwde
mov
aam
cmp
movs
pop
mov
mov
push
sub
mov
movs
add
push
add
push
int
xor
mov
(bad)
mov
sbb
dec
inc
movs
pop
add
cmp
adc
adc
xor
xor
cmps
adc
cmps
xor
push
cmps
cwde
ret
xor
sub
test
nop
mov
push
or
xchg
xchg
dec
xor
push
inc
xor
push
or
cmp
fisubr
pop
jno
rcr
xor
inc
ss
imul
xor
sbb
push
mul
add
xor
stos
add
push
js
cmps
movs
and
or
mov
cmps
push
mov
dec
cmp
dec
out
dec
cmp
dec
xor
push
(bad)
call
nop
shl
cmp
imul
movs
push
fwait
dec
cmp
(bad)
into
in
mov
cmps
xchg
in
dec
and
mov
push
icebp
dec
mov
push
push
(bad)
pushf
inc
jnp
dec
lds
adc
rcl
jns
push
rcr
sub
dec
add
xchg
adc
adc
add
add
adc
jmp
inc
add
add
add
int
sub
shl
xor
push
sbb
push
adc
push
dec
ficom
mov
mov
out
dec
inc
or
lahf
inc
imul
sub
inc
pop
inc
add
xor
outs
sub
sub
inc
adc
shr
mov
xchg
add
adc
mov
rol
mov
popa
add
add
dec
push
adc
stos
rcl
dec
sub
cmps
push
mov
(bad)
pushf
jp
add
dec
dec
dec
mov
push
or
sbb
cmp
div
jmp
add
sbb
pop
or
into
push
push
imul
imul
add
cmp
adc
cmps
mov
jb
lds
jge
ret
push
mov
inc
push
add
mov
push
lds
icebp
inc
sub
xchg
bound
bound
inc
push
inc
sub
xchg
push
inc
lods
xor
bound
mov
cmp
jns
fwait
push
dec
fild
add
xor
cwde
or
pop
push
add
mov
add
dec
lds
movs
jo
(bad)
pop
push
mov
dec
add
lods
das
mov
or
push
rcl
add
movs
pop
inc
add
dec
pop
mov
push
rcl
inc
cmps
test
xor
lods
cmp
add
dec
mov
xchg
or
push
rcr
pushf
pop
lods
and
rcl
sub
push
fimul
push
movs
lds
pop
cs
and
ror
test
xchg
add
pop
imul
xor
test
or
mov
bound
ss
adc
or
cdq
test
lods
or
adc
add
sahf
sub
fcom
inc
dec
inc
imul
xor
hlt
cmps
or
add
cmps
mov
xor
cmps
xchg
dec
cmps
sbb
lods
cmp
movs
out
dec
arpl
adc
jmp
call
or
(bad)
call
and
inc
or
cmovp
call
dec
imul
sbb
aaa
cmp
imul
cmp
add
ror
out
test
(bad)
xchg
cmc
cmps
xchg
dec
dec
xor
or
inc
xor
test
cmp
jo
shl
and
mov
and
or
xchg
movs
cmps
xchg
inc
xchg
dec
(bad)
lods
dec
inc
sub
cmps
lahf
mov
cmps
jo
dec
inc
sub
sbb
cmp
jmp
inc
xor
cmc
movs
jmp
mov
xchg
loop
add
add
sbb
pop
sbb
nop
or
dec
loopne
adc
xchg
add
inc
cmps
push
inc
or
movs
shl
pusha
ror
adc
push
test
xchg
mov
xor
add
call
inc
(bad)
adc
push
call
rcl
push
sub
imul
adc
or
push
dec
inc
les
mov
mov
arpl
mov
jno
dec
dec
dec
imul
imul
or
shr
inc
add
es
clc
push
inc
movs
add
dec
inc
mov
adc
add
inc
add
mov
adc
push
imul
pop
out
jo
ror
and
pushf
or
inc
dec
sub
mov
add
mov
and
dec
ficom
push
(bad)
mov
xchg
xchg
xor
sar
dec
push
test
jae
movs
cmps
jo
inc
cmp
movs
xor
inc
add
mov
shl
inc
cmp
sub
inc
pop
add
mov
sbb
sbb
sub
push
jo
shr
mov
shl
dec
movs
cld
sub
fcom
lahf
inc
add
adc
lahf
clc
push
inc
or
xor
cmps
bound
xchg
movs
sub
mov
inc
pop
inc
dec
movs
movs
adc
das
ins
push
mov
movs
shl
sub
mov
adc
movs
and
dec
pop
push
sahf
sub
mov
inc
mov
sub
inc
cmps
add
add
push
push
sub
add
mov
sub
inc
ror
or
push
sbb
cmp
jbe
arpl
popf
test
xchg
test
ins
sub
aad
or
ss
test
test
popa
push
cdq
and
dec
test
add
inc
xor
pusha
xor
dec
and
enter
repnz
cmps
movs
cmp
sbb
push
adc
xor
sbb
daa
jp
cmps
call
mov
pop
push
add
push
dec
add
cmps
xor
xor
xchg
lds
sbb
call
cmps
add
call
call
test
sbb
ja
mov
sbb
cmps
and
imul
rcr
add
rol
movs
sbb
cmp
cs
dec
jp
test
adc
cwde
movs
(bad)
sub
jmp
nop
mov
dec
inc
add
sahf
imul
arpl
lahf
dec
imul
dec
lds
mov
xchg
sbb
xchg
xchg
mov
pop
add
mov
fcomp
js
mov
shl
push
mov
inc
inc
cs
sar
push
rol
and
sbb
mov
mov
imul
or
movs
xor
pusha
cld
sub
sub
sbb
lds
cmp
add
or
add
dec
mov
sub
mov
movs
adc
movs
or
sub
pop
dec
movs
sub
pop
pop
inc
int
xor
mov
rol
call
sub
rcr
nop
add
sbb
xchg
and
inc
sub
nop
jne
push
add
mov
inc
xor
int
sbb
adc
rol
jecxz
xchg
push
add
call
imul
inc
rcl
test
repz
push
xchg
sbb
inc
xor
push
dec
mov
inc
or
or
in
dec
in
inc
add
sub
cmps
pusha
adc
push
mov
ret
adc
sub
aas
sub
add
shl
sbb
add
int
test
test
sub
test
addr16
aas
adc
mov
in
push
pusha
shl
adc
xchg
push
mov
add
ret
sub
aas
or
xchg
add
sub
add
dec
adc
xchg
or
pop
rol
add
pop
sub
ret
and
or
cmps
or
pushf
cmp
push
rcr
sbb
or
or
inc
adc
push
fsub
lds
cmps
add
dec
loopne
imul
mov
push
push
adc
inc
inc
xor
call
push
sub
push
sub
sub
adc
test
lods
mov
add
dec
test
dec
popa
push
test
xor
sub
push
sbb
dec
inc
inc
call
mov
mov
or
add
ror
xor
push
add
(bad)
nop
rol
in
dec
push
popa
xchg
fistp
cmps
cli
rcr
(bad)
cmps
call
call
pusha
xor
cmps
mov
ficom
xor
cmps
sbb
dec
push
sbb
dec
sub
dec
cmp
xchg
dec
imul
xor
call
or
xor
dec
fs
sub
push
inc
adc
test
adc
adc
popa
adc
repnz
cmps
jno
xchg
dec
inc
aas
adc
push
add
dec
mov
xor
and
mov
xor
clc
push
dec
loop
mov
mov
imul
ror
movs
sub
cmps
jno
add
mov
sub
shr
dec
dec
dec
add
mov
mov
lds
xor
inc
add
cwde
mov
push
test
shl
mov
inc
push
or
jle
sbb
sbb
push
clc
push
icebp
out
dec
mov
lea
mov
sbb
or
(bad)
and
mov
mov
push
mov
mov
adc
add
and
mov
imul
cmp
rcl
add
sub
movs
enter
xchg
ds
mov
pop
add
shl
nop
add
add
mov
xor
cmc
mov
push
cmp
jnp
call
sbb
add
rol
test
xor
dec
ja
push
sahf
lods
push
or
adc
dec
push
mov
or
mov
adc
xchg
mov
push
push
push
add
xchg
add
adc
adc
rol
dec
push
add
add
dec
loopne
or
push
mov
mov
bound
and
adc
popf
mov
or
jle
pop
push
pusha
shl
dec
shl
loope
loope
shl
add
lea
addr16
loope
shl
add
lea
outs
sub
cmp
mov
inc
sub
add
outs
xor
sub
movs
add
add
xchg
or
add
lock
mov
sub
jno
rol
sub
adc
dec
add
lds
popf
(bad)
sbb
popf
mov
xor
es
sub
push
push
jno
popa
cli
push
mov
enter
out
push
and
lds
cmps
cwde
mov
push
outs
sub
sub
adc
sub
mov
pop
jnp
xchg
adc
leave
gs
adc
adc
fld
lea
dec
cmp
or
sub
xor
mov
je
xchg
dec
and
sub
push
add
call
push
jmp
xor
hlt
shl
jp
jmp
and
and
cmps
call
push
dec
cmp
ficomp
dec
(bad)
sbb
lea
or
addr16
push
sub
(bad)
cmps
xchg
imul
ja
xor
call
xor
movs
and
mov
or
lods
adc
pop
add
jbe
movs
in
dec
dec
hlt
mov
xor
xchg
lods
sbb
dec
xor
adc
add
call
enter
and
xor
dec
and
push
cmp
mov
adc
push
dec
push
adc
cmps
out
mov
or
pushf
inc
sub
mov
mov
cmp
ret
bound
and
push
inc
add
pusha
push
add
cmp
or
sub
hlt
test
or
fimul
adc
xchg
push
sub
xor
add
or
push
lds
movs
jecxz
push
or
movs
enter
(bad)
pusha
int
and
or
cdq
xor
mov
call
and
inc
cmp
push
add
xor
push
add
(bad)
xchg
bound
jmp
cld
imul
rol
dec
xchg
dec
inc
sub
out
mov
push
sub
push
sub
dec
lods
add
sbb
jp
pop
pop
mul
cmp
imul
inc
or
cmps
sahf
or
inc
dec
or
dec
lods
imul
inc
rol
(bad)
cmps
lds
push
push
sub
sub
or
mov
add
inc
fidiv
xor
aaa
ins
sbb
push
adc
rol
jno
adc
mov
pusha
push
mov
mov
outs
loope
xor
movs
shl
shl
inc
add
mov
aas
ins
sbb
xor
jnp
jo
mov
lea
xor
mov
adc
mov
movs
add
pop
push
add
adc
fcom
dec
fisttp
push
or
jno
inc
adc
sub
adc
cs
push
sbb
or
jo
or
aaa
sbb
js
add
adc
sbb
dec
adc
sub
push
fsub
aas
add
popa
inc
out
push
xor
push
xchg
add
ficom
loop
or
ins
xor
jbe
and
dec
test
mov
mov
xor
es
inc
pop
lea
stos
dec
xchg
mov
sub
push
aad
test
dec
xchg
push
jno
mov
dec
sub
stos
inc
sub
test
push
out
sub
adc
cwde
push
adc
push
jmp
or
(bad)
cmps
call
adc
or
popa
adc
dec
add
adc
push
lea
jnp
lea
add
popa
cmps
call
sub
rcr
rol
mov
aad
lea
popa
cmps
cmp
sbb
sub
rcr
test
or
dec
mov
cmp
aam
popa
jmp
(bad)
cwde
ret
cmp
sub
pop
ja
inc
dec
sub
cmp
pop
aam
push
rcr
mov
mov
or
movs
mov
mov
pop
aam
cwde
cmps
loop
inc
add
test
icebp
call
mov
(bad)
pop
inc
sub
aaa
adc
ret
xor
jns
test
fcom
pushf
inc
and
and
hlt
out
add
adc
or
sub
aam
popf
shr
adc
push
add
inc
push
add
adc
inc
add
loope
(bad)
mov
push
adc
xchg
xchg
cwde
or
hlt
test
shr
movs
cmps
add
pop
xchg
add
and
rcr
inc
or
dec
push
adc
inc
add
inc
add
imul
jmp
punpckhdq
movs
sbb
dec
xor
popf
shl
cdq
xor
call
movs
enter
push
rcl
jae
xchg
fwait
dec
pushf
push
pusha
sbb
pop
dec
inc
inc
dec
inc
cmp
rcl
ss
push
mov
inc
dec
pushf
rol
add
into
cld
push
repz
bswap
mov
inc
add
push
call
cmps
mul
add
dec
or
add
dec
push
nop
push
adc
aam
or
test
dec
int
cmps
sahf
or
jge
adc
mov
inc
xor
sbb
scas
add
mov
mov
cmps
or
dec
push
jecxz
xchg
mov
cwde
movs
lds
sub
mov
mov
sub
add
adc
lahf
inc
sub
add
lock
lds
loope
loope
or
push
mov
add
out
inc
add
push
in
mul
loop
or
hlt
ins
xor
push
jle
pop
add
shl
xchg
adc
movs
jo
pushf
add
mov
int
mov
nop
les
pushf
add
jo
push
add
sub
jp
mov
cmps
add
jo
mov
out
or
sub
mov
add
test
nop
or
push
push
sbb
sbb
xchg
push
and
inc
test
push
lahf
hlt
movs
add
mov
cwde
movs
sub
mov
imul
dec
sub
push
push
cdq
sub
adc
stos
dec
xchg
push
popa
push
mov
jmp
es
push
lds
lods
cmp
cs
and
mov
mov
cwde
push
or
or
call
loopne
imul
popa
int
ficomp
cmp
call
imul
sbb
jno
imul
xchg
repz
push
enter
iret
dec
xor
or
arpl
call
gs
aam
sub
adc
sub
fucomp
cvtps2pd
xor
or
xor
imul
inc
sub
movs
sbb
push
xor
test
ret
fiadd
inc
jo
loop
mov
cmps
add
add
jbe
lds
sub
jbe
inc
es
add
dec
lds
sub
xor
mov
add
test
mov
push
enter
ss
mov
shr
test
xor
imul
ror
mov
mov
cmps
add
push
mov
mov
xor
mov
dec
add
sub
mov
jp
mov
sbb
inc
sub
and
movs
xor
rol
mov
aaa
push
hlt
xchg
sub
push
inc
add
xchg
xchg
add
mov
sub
add
movs
mov
shr
add
xor
pop
pop
add
adc
push
add
xor
ror
inc
mul
xchg
mov
xchg
mov
xchg
xor
movs
movs
add
and
bound
pushf
cmp
lds
xor
push
xchg
sbb
and
or
mov
push
push
sbb
and
push
adc
push
xor
cmp
sbb
add
aad
xor
xor
adc
movs
add
(bad)
dec
in
inc
xchg
mov
cmp
mov
sahf
mov
xor
ja
add
loopne
fwait
sbb
loop
mov
dec
push
loopne
ror
inc
(bad)
shl
add
or
sub
dec
sbb
mov
sub
mov
(bad)
mov
pushf
sub
pop
inc
add
push
mov
inc
sub
xchg
pusha
add
add
xor
pushf
xor
mov
loopne
add
sub
cmp
sub
add
or
add
pop
xor
dec
sbb
loopne
pop
jo
arpl
sub
push
add
or
push
imul
xor
mov
xchg
cmps
mov
les
rcl
add
lds
mov
dec
sub
inc
jmp
cdq
push
pop
shl
pop
sub
popf
push
pop
mov
push
push
cmps
pop
movs
inc
jmp
mov
test
shr
test
es
inc
and
call
xor
arpl
adc
dec
push
stos
xor
and
call
sbb
dec
xor
cmps
sbb
xor
hlt
jecxz
out
dec
push
call
inc
hlt
ret
rcr
push
or
sub
sahf
xchg
ror
push
inc
or
mov
dec
popa
dec
xor
xor
cmps
sbb
imul
cmps
adc
and
repnz
add
jnp
push
test
dec
inc
int
mov
pusha
and
sbb
push
hlt
mov
adc
adc
inc
add
xchg
xchg
mov
add
dec
cmps
add
push
fiadd
nop
(bad)
xchg
add
and
adc
dec
mov
adc
xor
push
add
sub
or
mov
imul
bound
bound
add
cwde
pop
xor
sar
sar
shl
sub
mov
mov
xor
push
xchg
or
cmps
xchg
movs
cmp
dec
pusha
sbb
add
inc
xchg
push
in
mov
push
inc
mov
add
xor
mov
inc
add
dec
call
cmp
mov
sub
add
adc
fwait
inc
add
add
xor
jne
mov
mov
xor
sub
cld
mov
dec
mov
sub
es
movs
add
push
mov
mov
xor
push
add
test
movs
push
xchg
cwde
or
sbb
or
movs
movs
pop
mov
je
int
sbb
add
cmps
test
inc
sbb
mov
sbb
ins
add
push
push
lods
dec
push
movs
mov
enter
sub
cmps
or
add
adc
mov
xchg
cmc
mov
sub
or
mov
inc
mov
add
xchg
xchg
cwde
or
push
or
sbb
inc
sub
cwde
adc
add
(bad)
push
jo
adc
rol
mov
ret
push
sub
adc
add
movs
add
add
call
sub
sbb
push
sbb
xor
sub
mov
dec
adc
push
xor
push
loop
push
(bad)
lods
dec
sbb
dec
push
inc
cmps
add
sub
pushf
mov
pushf
pop
adc
dec
or
jno
mov
mov
bound
mov
pop
xchg
mov
rcr
xchg
mov
inc
ret
pop
sub
lods
inc
and
cmps
inc
sub
inc
push
in
mov
mov
add
mov
jno
mov
adc
test
push
cmps
dec
and
test
adc
sbb
xchg
stos
xor
lods
or
push
mov
push
ins
dec
push
mov
fcom
push
inc
dec
ficom
dec
xor
or
cli
push
dec
dec
jae
cmps
sahf
xchg
inc
sbb
jnp
mov
cmps
mul
outs
xchg
and
cmps
sahf
push
sub
nop
imul
imul
xchg
dec
movs
xor
sbb
outs
sub
xor
inc
add
arpl
xchg
je
sbb
xchg
data16
push
push
loop
mov
xchg
push
mov
push
pop
shld
rol
and
push
inc
adc
xor
mov
shr
inc
clc
mov
dec
inc
dec
movs
shl
arpl
sub
cmps
xchg
dec
cmc
cmps
add
push
dec
test
rol
loope
test
dec
xor
int
or
lds
mov
ins
sbb
inc
sub
push
xchg
dec
mov
dec
jo
fadd
ror
fwait
or
push
adc
movs
adc
call
sub
dec
pop
sub
fisubr
(bad)
dec
imul
mov
add
mov
or
imul
rol
mov
imul
xor
dec
mov
mov
pusha
pop
ds
ficom
shr
movs
movs
mov
sub
mov
mov
ds
push
jae
dec
jo
sbb
sub
test
and
pop
icebp
dec
cli
push
ficom
and
call
mov
out
inc
imul
ror
sbb
imul
out
or
or
es
aam
push
dec
cmp
push
sbb
push
push
xor
dec
or
cmp
sub
xor
movs
push
sbb
dec
adc
imul
movs
pop
xor
nop
ror
ja
dec
hlt
out
pop
add
movs
add
inc
sub
sub
adc
movs
xor
jmp
rcl
mov
loop
mov
inc
inc
or
add
adc
movs
add
mov
loopne
sbb
jp
jno
pushf
cmp
sub
push
push
sahf
mov
rol
dec
adc
hlt
loope
movs
mov
and
or
pop
jo
xor
dec
add
add
push
int
push
push
dec
add
add
mov
add
mov
mov
add
imul
dec
gs
or
inc
cmc
imul
pop
pop
mov
push
and
imul
rcl
stos
repnz
aad
retf
pop
adc
mov
mov
push
dec
push
mov
cmc
mov
dec
push
test
inc
sbb
sbb
mov
add
test
pop
movs
xor
outs
xchg
inc
xor
ror
imul
test
ror
jnp
cmovp
hlt
cmps
mul
imul
mov
imul
xchg
mov
cmps
xor
or
adc
aam
movs
or
or
jmp
sub
rol
mov
or
dec
xor
push
mov
add
adc
or
mov
mov
add
jp
xchg
inc
dec
js
adc
inc
push
mov
inc
cwde
push
dec
int
xchg
cdq
inc
jno
inc
dec
cmp
test
cmps
lahf
dec
dec
push
or
mov
add
sub
cmps
loop
mov
pop
mov
cmp
bound
xchg
loop
or
cmp
add
movs
mul
add
push
mov
dec
inc
adc
add
ficom
add
sbb
inc
dec
push
push
dec
lds
loop
or
dec
and
push
push
sbb
hlt
popf
jmp
add
jmp
pop
into
mov
add
inc
test
pop
xchg
mov
pop
rcl
push
inc
adc
xor
adc
sub
sub
out
sbb
mov
aaa
xor
imul
dec
mov
sub
add
or
mov
add
out
sbb
xor
add
inc
xor
dec
call
sub
rol
sbb
or
dec
or
adc
cmp
push
or
inc
cmps
adc
dec
sbb
push
add
jo
loopne
or
push
jb
imul
dec
adc
sbb
mov
push
xchg
add
call
xchg
imul
push
cmp
and
inc
and
dec
mov
inc
adc
mov
out
dec
in
inc
pop
dec
push
imul
xor
xchg
popf
sub
add
cmps
push
imul
dec
push
xchg
xor
pushf
cmp
mov
dec
adc
cmps
or
pushf
sub
mov
dec
adc
(bad)
xchg
xchg
mov
xchg
sbb
sub
adc
cmps
sub
xchg
cmp
sub
push
sbb
mov
or
or
push
xor
xor
test
push
adc
aad
add
jp
and
stos
data16
stos
loop
enter
pop
dec
aad
sbb
sub
test
inc
xchg
xor
test
test
or
aad
push
call
and
test
push
lods
push
call
int
rol
xchg
rol
or
imul
dec
push
sahf
xchg
(bad)
jecxz
daa
mov
test
push
sbb
jmp
rcr
jmp
xor
(bad)
xchg
or
shl
(bad)
daa
push
cmp
cmps
call
sub
movs
xor
mov
jmp
inc
dec
imul
adc
push
xor
push
inc
add
pop
dec
sub
imul
cmps
sub
xchg
or
int
mov
adc
call
loope
lds
xor
popa
fisttp
xor
mov
cmp
and
push
test
out
add
jnp
add
dec
rcr
imul
add
call
imul
adc
imul
inc
add
sub
data16
sbb
mov
add
xchg
ror
cmp
pop
dec
push
mov
and
xor
lods
daa
jp
inc
sub
push
push
rcl
mov
inc
and
sub
adc
sub
mov
mov
sub
loope
inc
add
pop
(bad)
mov
add
lods
sub
mov
rcl
mov
adc
pop
call
sar
dec
int
xchg
sbb
aam
ficomp
pop
movs
sub
dec
cmp
push
sbb
xchg
es
push
cli
push
or
mov
fisttp
rol
shl
inc
and
pushf
or
add
ds
loopne
adc
aam
add
rol
dec
fs
xor
test
adc
movs
pusha
daa
or
push
ret
push
mov
dec
sbb
inc
movs
pusha
daa
add
adc
fisttp
and
push
or
xchg
sub
push
add
xchg
push
imul
xor
sub
dec
in
dec
pop
ficom
jmp
nop
xor
adc
xchg
adc
loope
dec
or
pushf
cmp
push
sahf
xor
cmp
cmps
or
xchg
inc
test
es
sahf
sub
mov
mov
jo
dec
or
test
cmps
test
xor
push
lods
cmp
mov
cmp
adc
movs
mov
ret
add
imul
inc
and
mov
xor
cmp
cmp
xchg
and
xchg
dec
cmps
stos
dec
pop
and
inc
and
push
movs
lods
adc
dec
cmp
mov
mov
inc
(bad)
test
(bad)
lds
and
fld
dec
xor
cmc
dec
push
sbb
or
ficomp
imul
xor
imul
xchg
out
sahf
aam
imul
(bad)
cmps
sbb
(bad)
and
pop
jns
push
mov
sbb
mov
dec
cmc
cmps
xchg
jp
push
mov
xor
sbb
nop
rcr
popf
test
sbb
in
dec
cmp
mov
cmps
jbe
mul
sub
cwde
loop
test
shr
int3
ins
add
mov
mov
xor
js
mov
or
mov
dec
inc
add
adc
mov
push
pop
or
inc
push
cmp
jo
adc
inc
pop
sub
push
or
pop
dec
rcr
rcl
popf
call
xchg
mov
mov
in
dec
xor
and
imul
retf
cmp
add
xor
dec
dec
out
dec
out
dec
add
adc
add
inc
and
dec
inc
push
add
xor
jle
ret
sbb
dec
add
imul
push
sahf
mov
(bad)
lahf
(bad)
nop
rol
mov
xchg
add
sbb
dec
inc
add
add
imul
xor
and
mov
fld
jbe
sub
or
icebp
dec
add
xchg
mov
shr
lods
and
add
or
push
inc
push
cld
imul
push
sbb
adc
pop
or
movs
int
sbb
adc
pop
xchg
mov
pop
out
xor
xchg
cmp
and
push
rcl
sbb
push
xchg
sbb
jns
push
cwde
sub
loop
and
xchg
sbb
and
push
sub
xchg
mov
pushf
or
add
jmp
rcl
or
cmps
add
xchg
pop
jp
xor
mov
push
movs
pop
fisub
sbb
xor
aad
push
xor
pop
es
shl
(bad)
xchg
xchg
push
push
imul
push
push
movs
push
nop
adc
dec
sbb
push
sbb
xor
push
sbb
xor
push
aam
test
cmp
sbb
sahf
sbb
ret
push
and
es
pushf
or
dec
ret
daa
push
pushf
or
movs
ja
or
cmps
push
mov
jp
mov
or
push
imul
cmc
or
rcr
sbb
mov
xor
xor
xor
adc
cwde
call
(bad)
mov
out
mov
ja
adc
fidiv
sub
xchg
add
stos
and
xchg
stos
mov
test
movs
jp
mov
sbb
push
mov
inc
cmps
pushf
aad
lea
cmps
sahf
mov
or
cdq
fisub
or
mov
dec
outs
mov
dec
push
mov
rcr
cwde
aad
and
cmps
mov
cwde
inc
pop
add
ror
mov
cmps
lods
xor
imul
dec
in
dec
cmp
cmc
movs
push
adc
push
inc
sbb
test
dec
jae
sbb
aam
in
sbb
jno
adc
cmp
cmps
xchg
dec
mov
adc
push
add
movs
in
inc
sub
and
or
sub
add
lds
rcl
xor
jbe
das
ins
shr
inc
lods
das
push
int
and
or
mov
or
xchg
mov
or
jae
add
fimul
add
add
rol
mov
push
add
dec
xor
rcr
pusha
xchg
ror
and
test
out
dec
add
aaa
mov
push
dec
dec
push
mov
xor
call
sub
pop
push
pop
lods
and
mov
sub
repz
mov
mov
dec
dec
inc
xor
sub
push
jmp
xor
movs
mov
inc
and
mov
sbb
ror
add
pop
pop
ror
movs
daa
loope
pop
xchg
and
xchg
rcl
xchg
xchg
mov
push
call
(bad)
out
dec
xor
dec
sar
push
imul
dec
pop
fiadd
retf
pusha
push
sub
lods
xor
mov
sub
loope
test
dec
push
xchg
cmp
rol
mov
enter
sbb
imul
or
movs
push
call
sbb
rol
jo
push
imul
jo
shr
ret
inc
adc
inc
call
mov
cmp
push
xor
push
add
xchg
sbb
fs
cwde
or
adc
mov
or
dec
call
pop
aad
xor
movs
pusha
pop
call
or
cmps
push
imul
sbb
imul
push
sbb
push
outs
jp
sbb
aam
cmc
pop
xor
in
aam
ficom
sub
in
(bad)
adc
loopne
cmp
mov
sbb
shr
pop
or
rol
cmovle
push
adc
mov
xchg
add
jp
add
and
sub
(bad)
xor
dec
test
out
adc
fs
cmp
inc
and
cmc
pop
dec
xchg
stos
and
push
test
lods
push
fs
push
fisubr
adc
aam
shl
and
mov
call
call
inc
dec
cmp
or
lea
loop
imul
adc
sysenter
ror
pop
cwde
enter
nop
ror
add
push
dec
cmps
call
push
sbb
test
jae
sbb
xor
shr
sbb
movs
xor
sub
cmps
or
and
dec
and
mov
xchg
inc
xchg
cmps
or
movs
add
add
and
sub
sub
call
push
std
sub
or
push
sub
jne
cmps
xor
add
adc
add
mov
inc
and
ret
ror
xor
mov
pop
inc
inc
imul
out
inc
or
fdivp
out
mul
sar
dec
dec
ficomp
sub
cmps
add
xchg
hlt
cmps
ror
movs
mov
ds
xchg
ficomp
push
push
and
xor
shr
(bad)
in
mov
jb
sub
push
sbb
add
movs
movs
mov
sub
dec
adc
(bad)
cwde
or
ror
dec
inc
or
dec
dec
imul
ss
push
push
xor
mov
or
mov
mov
inc
hlt
mov
dec
clc
rcr
cwde
or
cs
and
pop
sub
add
imul
pop
inc
cmp
sub
mov
push
mov
repz
dec
iret
push
movs
pusha
sbb
dec
cmp
add
xchg
push
add
xchg
cwde
or
xor
rol
fs
mov
sbb
or
push
xchg
mov
or
movs
adc
rcr
cmp
(bad)
es
push
sbb
add
mov
dec
sub
pop
adc
add
rcl
add
cmp
pusha
repz
dec
sar
aas
sbb
xor
pop
repz
dec
lods
xor
test
pop
xor
rol
repz
push
sub
lahf
jp
dec
call
test
push
in
rol
movs
popa
fcomp
xor
shr
jp
mov
in
(bad)
hlt
lock
cmc
pop
xor
retf
inc
test
js
sahf
push
fdiv
pusha
hlt
lock
pushf
dec
mov
stos
loope
inc
jnp
fdiv
enter
inc
call
sbb
sub
push
dec
cmps
popa
pop
inc
xor
inc
int
mov
sbb
push
scas
int
out
inc
xor
test
lods
dec
(bad)
jmp
and
test
lods
xor
adc
sub
adc
sbb
ss
adc
dec
loop
jp
dec
push
or
xchg
cmps
lods
sbb
call
adc
adc
sub
xchg
sub
ret
push
enter
push
xor
sub
mov
cwde
push
dec
cmp
shr
inc
rcr
ror
test
sbb
dec
and
push
int
popf
and
pop
sub
sahf
jp
adc
xor
and
dec
cmp
sbb
mov
cmp
sub
data16
mov
mov
xor
mov
sub
cld
sub
imul
cld
ror
shl
hlt
push
inc
cmps
add
add
mov
inc
adc
push
push
hlt
add
add
dec
jp
call
sub
and
xor
test
rcr
or
mov
push
xchg
inc
push
int
imul
sar
or
outs
jp
mov
rcl
cmp
xor
fdivp
push
sub
adc
sbb
cmps
xor
add
nop
add
pushf
push
xchg
dec
inc
cmp
mov
mov
xor
mov
sub
adc
mov
ja
add
and
push
push
ja
xor
inc
and
(bad)
mov
push
aam
xor
add
sub
inc
daa
jp
add
inc
adc
jmp
pop
outs
xor
inc
cmp
mov
pop
pop
call
pop
pop
ins
sub
xchg
sub
xchg
mov
push
imul
xchg
dec
or
cdq
call
lds
lods
imul
xchg
xor
out
hlt
in
shl
imul
mov
xor
add
shl
mov
and
xchg
dec
ja
iret
lods
sub
or
add
dec
push
xchg
adc
mov
dec
or
and
sub
repz
out
sbb
xchg
sbb
xor
dec
and
xor
mov
ficom
or
fst
xchg
xor
xchg
sbb
push
jns
movs
or
sbb
jmp
push
push
mov
inc
jge
add
xchg
xor
mov
mov
mov
jnp
or
fimul
fst
mul
enter
stos
push
pushf
sbb
or
jmp
test
jo
fwait
push
in
jp
jp
push
pushf
push
cmps
ret
mov
stos
loope
fstp
fsubr
or
jmp
out
sbb
push
aam
xor
test
inc
xor
es
lods
dec
aad
cmc
lods
or
push
stos
push
test
push
and
xor
mov
push
ins
sub
mov
scas
add
lods
aaa
mov
nop
xchg
cmps
bound
dec
and
cmps
sahf
xchg
and
popa
test
add
push
pop
push
test
cmps
add
sbb
nop
ror
xchg
call
add
adc
(bad)
movs
and
adc
sub
ret
dec
fs
loop
adc
push
xor
fwait
mov
ret
push
enter
rol
push
xchg
xor
adc
sbb
leave
scas
inc
xor
mov
adc
xchg
nop
test
xchg
pusha
push
inc
add
push
in
inc
pop
adc
mov
inc
cmp
mov
xchg
xchg
mov
xchg
mov
adc
adc
jne
cmp
push
push
and
xchg
cwde
cwde
adc
call
test
push
sub
imul
adc
nop
call
dec
call
clc
rol
or
leave
movs
int
sub
or
sub
mov
dec
and
add
add
movs
mov
dec
fimul
pop
mov
or
push
mov
push
xor
test
jmp
pop
(bad)
xchg
lock
or
mov
push
shl
rol
adc
push
push
rcl
ja
out
dec
ficomp
cmp
push
inc
push
mov
lds
sbb
dec
lds
jmp
out
(bad)
mov
mov
stc
mov
rol
mov
mov
add
leave
movs
loop
rol
fldenv
add
jmp
rol
test
inc
xor
cs
int
sbb
lods
add
movs
push
cwde
or
test
xor
adc
pushf
sbb
hlt
test
dec
push
mov
and
stos
cmp
sub
xor
stos
sub
out
sbb
cmp
ja
inc
test
dec
sbb
pop
rol
rol
test
xchg
push
add
mov
shl
or
or
out
dec
or
dec
mov
test
ja
pusha
mov
mov
or
jne
stos
sub
and
xor
popf
adc
sbb
mov
push
outs
mov
dec
(bad)
(bad)
mov
pop
and
push
cmp
fild
in
test
jmp
out
iret
jp
(bad)
(bad)
mov
sbb
or
dec
pxor
rol
pop
cmovle
mov
xor
jp
jl
pusha
hlt
loopne
pushf
inc
cdq
fs
hlt
mov
leave
dec
push
dec
push
aaa
sbb
in
pop
adc
mov
mov
inc
adc
aam
(bad)
pushf
dec
xor
cmps
mov
stos
nop
mov
mov
stos
inc
fs
push
call
inc
cwde
jp
lods
push
call
lea
mov
fidiv
xor
lods
xor
xchg
imul
xor
movs
cmp
dec
push
adc
xor
sub
cmps
and
mov
sub
sub
push
sub
sub
and
push
enter
or
es
push
jo
mov
shr
out
mov
add
jne
add
dec
inc
ins
inc
and
scas
sub
call
mov
push
data16
dec
adc
mov
push
dec
rcr
xchg
fs
sbb
pusha
adc
inc
imul
and
int
xchg
nop
cmc
movs
int
inc
push
sbb
sbb
dec
inc
inc
loopne
cmp
inc
adc
mov
add
hlt
xor
add
rcr
mov
sub
movs
mov
nop
rcl
mov
mov
(bad)
into
xchg
popf
sbb
cli
rcr
mov
xchg
push
ja
and
call
movs
out
dec
ret
call
inc
xor
pop
sub
aaa
ds
rol
mov
sub
mov
call
inc
aaa
mov
aam
rol
clc
aam
movs
mov
mov
push
xchg
popf
jmp
add
push
imul
dec
aam
mov
push
push
sub
out
shl
and
xchg
adc
sub
add
es
push
call
push
es
cdq
xchg
inc
es
cmp
aaa
xor
inc
bswap
sbb
inc
pop
xchg
xor
test
inc
repz
dec
call
xor
jns
int
dec
or
imul
shl
fisttp
mov
shr
push
add
mov
rol
test
shr
jmp
dec
ror
mov
add
out
sub
jmp
sub
movs
or
imul
lods
pop
sub
movs
push
push
hlt
mov
push
mul
out
mov
mov
test
pop
out
fisttp
mov
ds
aaa
aam
test
jmp
xor
sub
fldenv
ja
push
or
mov
sbb
mov
test
add
(bad)
xchg
jo
test
push
dec
ror
rcr
mov
or
xor
test
adc
out
test
imul
push
test
popfw
mov
push
adc
lea
jb
imul
xchg
sahf
sbb
pusha
mov
stos
shr
outs
movs
sub
das
dec
ror
dec
xor
xor
loop
xor
dec
ret
inc
imul
sbb
stos
inc
sbb
sbb
xchg
test
sub
rcl
xor
adc
xchg
mov
dec
push
mul
out
dec
push
ja
lds
xor
int3
jp
xor
rcl
movs
push
mov
test
test
push
mov
lea
push
sbb
dec
arpl
and
mov
add
sub
xchg
xchg
dec
xor
mov
cmps
adc
stos
add
adc
movs
and
cmp
adc
shl
add
movs
cld
sub
scas
inc
inc
movs
cld
imul
sub
mov
clc
shl
inc
add
xchg
inc
inc
add
test
movs
and
cwde
test
sub
sbb
mov
data16
adc
add
sbb
or
sub
add
jbe
nop
call
xchg
xor
imul
dec
mov
call
movs
daa
mov
or
lock
cmps
add
dec
call
or
and
iret
push
inc
movs
in
dec
add
jb
and
cbw
push
push
push
xchg
push
dec
dec
xor
sub
movs
sbb
push
xor
sub
leave
movs
add
add
dec
add
fs
push
gs
xchg
xor
jmp
or
inc
adc
test
inc
sub
dec
out
dec
add
(bad)
hlt
adc
push
imul
adc
mov
push
dec
inc
sar
rcl
movs
add
lds
in
shl
lock
xor
sbb
mov
fimul
add
loop
xor
add
push
xchg
pop
xchg
and
shl
pop
ficomp
test
cs
inc
mov
add
outs
mov
xor
sub
test
mov
jo
mov
push
aam
add
test
ja
add
jne
jecxz
sbb
jp
add
mov
test
adc
mov
test
rcr
mov
add
mov
mov
movs
fst
movs
fisttp
jb
aam
test
push
mov
jp
sti
aam
test
inc
adc
jmp
(bad)
mov
pop
and
jp
jne
jge
pop
or
or
push
add
fst
movs
fisttp
mov
aam
rol
cmps
push
test
push
xchg
jmp
add
dec
ret
daa
or
dec
or
aam
aad
push
push
or
push
movs
or
out
dec
mov
call
xor
out
sbb
xor
inc
imul
(bad)
movs
es
cmps
adc
dec
push
mov
imul
mov
shrd
dec
xor
xchg
adc
ficomp
call
adc
test
cmps
sahf
inc
sub
in
dec
mov
inc
dec
inc
xor
imul
sbb
adc
sub
and
movs
and
rcr
sbb
int
test
unpcklps
push
push
xchg
xor
xchg
adc
push
add
xor
sub
xchg
push
and
inc
jge
sub
inc
shl
sub
sub
sub
mov
das
(bad)
pop
mov
add
bound
xchg
xchg
movs
mov
ins
sub
inc
add
xchg
test
imul
mov
xor
add
and
call
sub
imul
sub
cmp
and
and
js
int
jmp
cmp
rcl
and
int
fiadd
int
outs
imul
add
mov
sbb
movs
int
cwde
add
adc
xor
sub
rcr
pop
xor
shl
jbe
add
push
add
jp
call
shr
imul
inc
mov
call
or
int
xor
jno
xchg
mov
(bad)
pusha
xor
inc
xor
xchg
add
adc
or
sub
mov
rcr
mov
jne
sub
xor
fwait
call
mov
xchg
xor
cmp
dec
int
mov
mov
movs
enter
ds
mul
sbb
sbb
pop
out
shl
push
xor
xchg
jne
xchg
dec
or
aad
jns
fld
js
pop
aad
jmp
push
xchg
xor
cs
mov
imul
and
xchg
cs
sub
xchg
test
push
jne
push
add
test
inc
push
mov
xchg
push
mov
jne
mov
xor
aad
jmp
mov
add
mov
xor
dec
or
jecxz
sbb
pusha
fld
xchg
jmp
stos
sub
dec
lahf
push
push
outs
movs
fld
xchg
xor
mov
add
(bad)
aad
jmp
sbb
adc
shl
or
cmps
push
movs
pusha
daa
push
xchg
xor
sub
push
add
dec
sbb
and
or
dec
mov
jge
stos
adc
mov
movs
sub
mov
aam
test
push
movs
int
xor
add
dec
push
daa
cmp
or
popa
cmps
call
and
mov
call
shr
sub
daa
xor
xchg
nop
shl
in
dec
in
dec
in
dec
cmp
sbb
push
bound
ror
call
test
cmps
cmp
and
adc
popa
adc
dec
lds
add
xchg
dec
fs
dec
test
and
sub
xchg
push
add
pushf
add
aam
mov
push
pop
ret
adc
sbb
es
or
xor
inc
jge
add
mov
mov
jle
push
adc
popa
jno
sub
dec
inc
add
add
nop
call
movs
mov
or
xor
cmp
and
sbb
inc
dec
add
add
push
add
dec
call
cmps
and
or
add
(bad)
xchg
add
cmp
push
or
sub
imul
adc
push
call
sub
pop
add
shl
cmps
xor
and
outs
jp
jbe
xor
mov
adc
sub
imul
or
mov
sub
movs
int
mov
iret
mov
jecxz
push
mov
aam
pop
out
mov
das
adc
pop
adc
mov
xor
add
xor
push
adc
dec
aaa
xor
add
aam
adc
mov
adc
mov
mov
lea
jbe
xor
xchg
mov
adc
(bad)
data16
call
sti
push
xchg
dec
sar
xchg
jne
call
loope
dec
iret
mov
mul
aam
mov
loope
jmp
jmp
inc
adc
push
cwde
or
rcr
cdq
call
xor
test
inc
aam
stos
sub
or
in
aam
movs
push
cwde
mov
or
adc
cs
xor
aam
add
shl
mov
or
(bad)
call
push
mov
jmp
sbb
inc
call
mov
hlt
pop
or
mov
test
adc
mov
pop
and
mov
sub
jne
popa
inc
adc
aam
aam
es
or
cs
inc
test
sbb
out
xchg
sbb
lahf
pop
jo
push
add
inc
bound
sbb
mov
fld
inc
mov
and
aad
imul
shl
dec
pop
adc
es
cmp
pop
or
rcr
push
dec
sub
fimul
aad
sbb
sbb
add
(bad)
call
adc
push
dec
popa
ficom
mov
cwde
aam
aam
inc
xchg
sub
lods
dec
cmps
xor
pop
imul
cmps
sbb
inc
or
test
sub
cmps
call
and
jbe
out
dec
in
dec
inc
dec
stc
push
push
rcr
sub
mov
movs
mov
mov
call
movs
int
mov
xchg
call
imul
rol
out
shl
push
dec
and
cmp
cmps
out
xchg
icebp
mov
sub
cmps
add
push
add
xor
call
cmps
pusha
or
sti
push
outs
mov
movs
mov
sbb
push
(bad)
adc
push
or
shld
sbb
movs
sbb
sahf
xchg
xchg
cmp
dec
push
imul
ret
mov
fimul
push
rcr
dec
or
call
inc
imul
xor
adc
inc
add
xchg
xor
rol
enter
dec
xchg
inc
push
enter
shl
sbb
movs
fisttp
call
mul
aaa
xor
lea
add
cdq
cmps
add
inc
and
lods
daa
adc
rcr
xchg
and
jecxz
int
inc
and
add
mov
dec
call
leave
mov
or
call
push
inc
jecxz
mov
xchg
lahf
pop
cmp
movs
add
rol
pusha
pop
call
stc
xor
cmps
add
sub
xor
fwait
mov
rcr
pop
out
xor
cmp
cmps
data16
sar
inc
xchg
movs
int
call
(bad)
xor
int
add
mov
push
adc
jae
or
mov
or
xor
aam
test
pop
rcr
mov
dec
mov
movs
fld
les
push
mov
mov
fisttp
mov
rcl
adc
cld
call
pop
xchg
cmp
or
mov
lods
add
movs
or
and
sbb
add
mov
push
mov
or
mov
push
push
mov
add
movs
or
loop
nop
adc
dec
into
sub
jnp
jae
sar
adc
xor
in
rcl
dec
call
icebp
inc
xor
push
add
shl
aam
movs
and
test
div
cmps
jbe
mov
add
aam
punpckhdq
dec
dec
add
dec
dec
ficom
dec
cmp
push
jnp
call
es
rcr
mov
xor
cmps
call
xor
jg
inc
inc
or
mul
xor
adc
call
sub
cmp
out
aam
jmp
mov
dec
pop
sub
jmp
inc
or
aam
inc
add
loope
adc
add
jae
ds
cmps
pusha
adc
mov
push
push
es
fadd
call
adc
rcr
inc
sub
call
out
rol
in
add
ror
push
movs
out
out
pop
es
xor
movs
into
push
mov
mov
adc
shl
push
xor
or
sti
push
adc
rcr
unpcklps
mov
movs
xor
xchg
xor
popa
inc
dec
outs
imul
jns
or
mov
imul
inc
and
pop
dec
inc
push
xchg
call
dec
shl
dec
xor
dec
add
push
je
and
add
call
xor
dec
add
rol
rcl
xor
test
mov
xchg
add
cmp
sbb
push
inc
rcl
or
or
xor
and
push
add
ror
lods
and
mov
add
inc
in
aas
icebp
mov
mov
aam
movs
lds
cmps
icebp
dec
lds
or
add
cmp
ror
addr16
cmps
or
sbb
cmps
out
movs
enter
push
lds
and
add
movs
add
int
add
call
movs
leave
cmps
ror
add
dec
int
xor
cld
mov
sub
and
cs
movs
cs
sub
mov
jmp
repz
call
jmp
lds
mov
dec
int
rol
cli
sbb
adc
inc
adc
sub
int
and
movs
fisttp
rol
test
inc
shrd
xchg
int
or
mov
dec
or
loopne
xor
call
pusha
rol
xchg
and
dec
xchg
inc
adc
jne
mov
push
xchg
jne
or
stc
movs
push
mov
push
add
outs
test
push
out
push
fisttp
imul
cli
push
push
call
dec
imul
or
lods
inc
xor
shl
nop
call
push
or
or
imul
mov
aaa
pop
inc
cmps
or
sbb
imul
call
pusha
and
dec
push
push
dec
dec
arpl
push
sub
inc
es
nop
jp
mov
arpl
mov
cmps
mov
into
xor
dec
ficom
in
dec
dec
dec
sbb
dec
imul
push
sbb
mov
xor
jmp
call
xor
movs
and
mov
ja
fs
xchg
add
imul
imul
dec
jp
adc
into
imul
xchg
inc
es
adc
fs
xor
sub
inc
or
xchg
and
and
and
add
xchg
xchg
lahf
jp
and
test
push
inc
dec
dec
xor
sbb
push
xchg
dec
dec
add
dec
add
inc
adc
mov
adc
mov
movs
add
jmp
dec
add
mov
sub
dec
lahf
dec
sub
push
dec
dec
inc
or
ror
push
and
xchg
icebp
movs
movs
out
mov
xchg
mov
add
pop
dec
outs
push
dec
jp
adc
sar
data16
mov
inc
imul
and
jne
push
add
sbb
pop
mov
rcl
sbb
fisubr
mov
push
xchg
dec
pushf
aad
push
adc
jp
inc
adc
sub
dec
pusha
add
xchg
mov
push
add
lds
and
mul
mov
sub
adc
xchg
mov
jb
aas
sbb
mov
mov
lds
or
sbb
xor
inc
daa
adc
adc
mov
or
push
pusha
adc
cmps
add
pusha
pop
mov
in
inc
pop
xchg
icebp
mov
xor
or
ror
push
in
jb
leave
movs
pusha
sbb
cli
rcl
sti
shr
inc
cmp
dec
leave
movs
leave
mov
imul
xor
mov
sti
rol
sbb
imul
mov
jae
inc
bswap
cs
rol
add
jae
mov
mov
pop
inc
dec
xchg
inc
inc
xor
pushf
or
xor
or
add
rol
dec
sub
sahf
sub
cmp
and
movs
add
sar
aam
shl
and
bswap
mov
sub
xor
test
and
xchg
xor
pop
cmp
push
in
call
cmp
aaa
sbb
jle
xor
mov
push
dec
aaa
and
inc
inc
es
adc
add
inc
and
rcl
loop
aas
sbb
adc
add
push
dec
das
push
loop
inc
js
cmp
call
fdivp
mov
jp
dec
pop
jno
sahf
mov
and
call
dec
ficom
push
ja
ss
ret
xchg
ror
daa
jp
add
iret
pop
dec
hlt
lods
dec
sar
movs
iret
jp
cmp
add
dec
push
inc
or
in
dec
xor
and
cmp
inc
aaa
xor
add
sub
push
jo
cli
push
call
cmp
dec
xchg
dec
dec
cmps
add
dec
shr
add
call
push
call
push
dec
movs
int
out
pusha
sbb
xor
xor
adc
rcl
out
mov
cmp
add
aam
or
or
push
dec
dec
dec
add
movs
lds
sbb
push
sub
out
inc
adc
add
cmp
dec
push
sbb
xor
dec
dec
sub
push
inc
adc
sub
sbb
push
adc
mov
or
and
push
add
sub
test
ror
push
sub
dec
ficom
movs
mov
add
sub
xchg
fiadd
add
xchg
and
sub
push
inc
add
add
arpl
test
xchg
ror
cdq
cmp
movs
mov
movs
push
add
inc
dec
dec
jp
xor
movs
xor
ror
mov
add
mov
push
lods
pop
add
adc
cdq
int
mov
in
and
int
sbb
pusha
sbb
movs
sbb
sahf
aam
cmps
ror
fwait
call
mov
mov
inc
cs
mov
fnstcw
mov
rol
sbb
movs
and
test
inc
pop
jge
fcomp
leave
mov
xchg
sbb
ret
mov
call
sbb
dec
call
lds
(bad)
mov
pusha
push
or
call
shl
jecxz
mov
pop
xchg
push
imul
mov
lock
cmp
rol
loop
nop
clts
xchg
and
cmp
imul
test
cmps
add
push
or
dec
imul
int3
rol
mov
jns
and
xchg
ds
aam
mul
mul
jp
cmp
lea
ds
test
add
lea
lea
xor
es
push
or
es
xchg
inc
add
mul
mov
shl
shl
int
adc
xor
rol
imul
dec
xor
xchg
jns
daa
call
inc
inc
(bad)
nop
call
dec
add
loop
xor
dec
pusha
sub
push
push
sbb
movs
and
dec
in
pop
shl
dec
xor
aam
ror
cmp
sbb
rcr
jbe
adc
sub
xor
push
push
add
add
dec
fiadd
mov
xor
cwde
add
push
call
lahf
jp
pop
rcl
movs
daa
xor
xor
inc
and
adc
mul
movs
iret
cmp
add
mov
movs
aaa
(bad)
or
sub
jp
add
cmp
mov
mov
lds
and
add
aaa
ficomp
add
dec
hlt
sbb
rcr
lods
and
cmp
inc
jp
mov
mov
dec
ja
outs
lods
xor
ficom
pusha
sub
and
push
jge
jo
and
dec
dec
push
pop
sub
cwde
loop
pop
dec
hlt
sub
dec
sub
stos
add
mov
pushf
push
dec
add
nop
ret
rcr
mov
cdq
movs
out
inc
jp
sbb
and
rcl
jge
xchg
cmc
mov
push
call
dec
inc
pop
push
cmp
xchg
mov
sbb
xchg
(bad)
ror
push
sub
cmp
or
dec
add
push
inc
add
imul
hlt
cmp
add
imul
inc
push
fimul
add
dec
movs
int
sbb
int
sbb
imul
xor
int
push
push
cmps
shl
shl
mov
mov
or
ds
add
push
imul
aaa
lods
adc
jmp
sar
pop
shr
mov
shr
movs
and
test
sbb
inc
inc
cmps
or
cmp
push
jge
mov
js
movs
adc
jnp
or
xchg
jae
movs
push
nop
nop
mov
ror
xchg
cdq
fimul
pop
push
xor
lea
mov
sti
push
call
cmp
int
ds
mov
xor
xor
inc
push
dec
sub
and
cmp
pushf
ror
adc
xchg
sahf
sub
test
shl
imul
in
mov
push
mov
push
mov
ficom
sbb
and
cdq
mov
xor
inc
(bad)
nop
sahf
push
add
movs
movs
mov
pop
sub
fwait
inc
xor
xor
xchg
call
rcl
add
mov
movs
and
mov
lea
test
lahf
mov
cmps
sahf
mov
sbb
cmp
rcl
daa
call
inc
and
add
inc
and
inc
push
cwde
add
movs
jo
sti
shr
push
dec
aam
call
push
mul
sub
push
sbb
cmovp
xor
ins
push
xchg
ror
pusha
adc
cmp
add
cmp
xor
clc
rol
or
or
dec
inc
dec
push
or
inc
adc
arpl
inc
(bad)
xchg
ror
arpl
ror
xchg
cwde
out
and
mov
mov
cmp
fisubr
jo
sub
mov
call
loop
pusha
xor
mov
or
cwde
movs
movs
(bad)
mov
shl
push
add
loope
loopne
add
sbb
dec
dec
add
outs
jp
xor
xor
and
mov
dec
sub
inc
xor
or
push
inc
push
push
xchg
or
inc
cmp
mov
or
push
mov
int
or
hlt
mov
adc
(bad)
in
dec
jge
fucomp
or
mov
adc
push
loop
mov
jmp
inc
test
sub
adc
das
jecxz
imul
bound
pop
xchg
sub
push
call
mov
pop
xchg
ds
sub
cli
sub
sbb
and
add
sbb
call
pop
(bad)
mov
mov
hlt
movs
pusha
and
dec
xchg
push
cmp
(bad)
lods
add
add
aam
ret
or
mov
xor
aam
rol
hlt
mov
imul
cwde
sub
and
cdq
movs
adc
and
out
xchg
pushf
or
add
xor
dec
pusha
xor
add
movs
sub
mov
nop
(bad)
push
lds
sbb
and
inc
sub
popa
aam
xor
adc
mov
mov
inc
jno
jp
pop
sub
rol
fdivp
push
imul
add
sbb
mov
pop
pop
xchg
adc
fimul
lods
sbb
pop
shl
imul
shl
jns
add
sub
push
xchg
inc
imul
cmps
out
rol
imul
call
sbb
adc
adc
hlt
mov
pop
ror
jno
cmps
call
test
sub
xor
aam
mov
add
push
push
cmp
push
add
rcl
dec
add
dec
add
cmp
inc
push
sbb
hlt
xchg
inc
mov
test
adc
aam
mov
(bad)
sub
add
inc
add
jmp
lds
movs
movs
add
inc
inc
sbb
or
push
inc
push
adc
dec
inc
adc
sub
xchg
icebp
cmps
jno
imul
inc
and
mov
mov
push
mov
push
add
mov
sub
test
push
mov
mov
sub
adc
sbb
inc
add
mov
adc
out
add
sub
bound
dec
(bad)
xchg
sub
imul
(bad)
and
jmp
cmp
xor
jp
(bad)
imul
mov
bound
adc
ror
inc
sbb
shl
dec
movs
and
push
add
mov
movs
xchg
rol
ficom
push
adc
loop
inc
add
inc
sbb
hlt
mov
out
cwde
mul
sub
pop
push
call
lea
xchg
mov
push
add
hlt
movs
cmps
push
inc
or
and
mov
inc
call
mov
xchg
xchg
xor
adc
adc
pop
mov
sub
pop
sub
or
or
adc
pop
add
mov
mov
dec
fimul
cdq
dec
call
icebp
dec
lahf
push
push
dec
lds
mov
lds
xchg
sbb
or
or
cli
push
inc
movs
adc
jo
loope
or
adc
xor
imul
pop
jp
dec
push
imul
inc
shl
sub
add
adc
inc
cmps
add
xchg
and
mov
pusha
sbb
hlt
movs
int
xor
add
add
shl
mov
ret
es
rcr
push
aaa
(bad)
nop
jne
cmc
cmps
cli
rol
sbb
add
xor
rcr
call
imul
out
inc
push
fwait
call
int
ds
add
xor
mov
push
xchg
dec
dec
lds
cs
sbb
mul
push
jbe
nop
rcr
aaa
xor
rcr
xor
mov
movs
ds
in
add
inc
movs
es
xor
cvtps2pd
and
adc
xchg
call
cwde
add
add
movs
or
movs
das
push
inc
add
hlt
xchg
adc
call
shr
popf
mov
dec
jecxz
push
pop
pusha
and
rcl
sub
rol
xchg
push
mov
sub
inc
add
in
inc
adc
rol
adc
cmps
mov
add
jo
shl
push
rcr
sbb
sub
add
inc
add
test
xor
popf
inc
xor
or
sar
mov
dec
inc
add
mov
push
sbb
shl
push
add
and
popf
shr
mov
nop
rol
mov
push
mov
dec
(bad)
jp
ins
adc
sub
cmps
add
imul
ins
adc
adc
add
dec
pop
sub
fcom
mov
inc
cmps
push
sbb
mov
mov
movs
adc
cmps
add
in
jnp
mov
ins
adc
jp
jle
add
inc
or
cwde
mov
cmps
push
jns
ja
dec
inc
cmps
xchg
cmps
loop
adc
jle
mov
dec
add
lods
sub
add
mov
sahf
imul
test
jno
mov
mov
das
adc
mov
xchg
call
add
xor
dec
rol
dec
sub
mov
push
inc
lds
mov
mov
push
inc
or
add
sub
cli
ror
dec
aaa
xor
add
pushf
repz
dec
int
nop
or
mov
(bad)
pushf
sysenter
rol
inc
aas
xor
imul
inc
xor
jp
and
fs
dec
cmp
repnz
and
ficomp
int
xor
pop
rol
repz
xchg
dec
pop
xor
in
imul
inc
sub
movs
add
jmp
or
add
mov
mov
xor
pusha
mov
inc
xor
dec
pusha
push
mov
xor
in
and
call
lods
cmp
lods
dec
jp
mov
mov
dec
cmps
call
ror
clc
rcl
sbb
dec
dec
cmp
xor
fwait
call
dec
aaa
call
call
add
add
inc
inc
es
lods
es
push
enter
fst
outs
mov
sub
xor
mov
imul
movs
xor
cmps
jbe
rol
dec
daa
adc
pushf
popfw
xor
imul
cmp
jmp
movs
movs
test
push
sbb
inc
adc
and
sub
mov
dec
sub
add
xchg
(bad)
nop
shr
psrld
dec
mov
jne
add
mov
add
into
nop
jecxz
xchg
add
mov
test
inc
adc
push
inc
adc
push
rcl
add
fmul
xor
sub
fcom
dec
inc
mov
push
hlt
movs
jp
jno
pop
dec
sub
xor
dec
sub
mov
add
jmp
sbb
jp
int
shr
lds
(bad)
mov
jno
rcr
push
mov
inc
xor
mov
mov
sbb
add
int
xor
sbb
popa
int
push
test
pop
push
loopne
arpl
or
add
mov
jae
shl
cmp
mov
mov
arpl
inc
cmp
jno
inc
dec
pop
sub
movs
ja
xchg
loop
sub
add
int
adc
out
xor
movs
mov
movs
xor
add
xor
xor
push
add
dec
jns
fwait
mov
dec
or
cs
push
push
inc
or
or
mov
adc
add
movs
cmps
push
or
adc
out
mov
jo
sub
mov
mov
aaa
adc
xchg
sub
dec
sub
push
dec
inc
add
sub
sub
push
mov
dec
sub
add
test
imul
dec
movs
pop
pop
add
mov
push
mov
push
cmp
dec
sub
dec
sub
(bad)
aam
inc
cmp
mov
sub
loopne
push
mov
in
rol
rcr
rcl
push
rol
cmps
(bad)
jbe
add
lds
push
das
xor
cli
sub
loop
xor
adc
inc
push
mov
movs
add
ficom
sub
dec
call
les
call
call
mov
outs
push
push
adc
mov
aaa
or
adc
test
inc
inc
es
mov
pop
imul
pop
add
push
dec
shr
jno
inc
and
arpl
fwait
dec
cmp
adc
push
pop
pushf
jp
pop
nop
test
ss
xor
es
pushf
inc
and
xchg
nop
mov
or
add
dec
push
mov
fimul
add
dec
dec
push
adc
push
inc
adc
mov
mov
and
aas
pop
add
adc
dec
mov
push
ficom
adc
push
pop
adc
mov
xchg
mov
lgs
mov
call
inc
adc
add
sub
add
rol
or
sub
adc
mov
outs
jp
rcl
pusha
push
add
(bad)
sub
xchg
adc
push
add
test
loope
mov
test
inc
sub
shl
or
mov
movs
add
or
fdiv
mov
out
inc
sub
add
nop
mov
cmp
dec
(bad)
lods
sub
cwde
mov
jp
add
sbb
movs
shr
mov
jno
cmp
xchg
push
hlt
mov
bound
adc
push
xor
sub
cmps
mov
ds
popa
call
mov
xor
xchg
adc
fimul
rcl
jnp
dec
dec
cmc
mov
sub
cmp
int
sbb
rol
and
cmp
add
push
sub
es
(bad)
movs
and
jmp
add
sub
or
inc
adc
push
rcl
or
push
add
movs
movs
mov
add
mov
ss
adc
inc
in
dec
add
imul
adc
out
push
mov
add
and
mov
sbb
jge
jmp
sbb
jo
xchg
xor
jle
rcl
inc
test
jmp
movs
push
sbb
cmps
mul
xor
call
add
xor
sub
rol
or
mov
leave
movs
cmps
add
cmps
call
rcr
or
xchg
lods
cmp
inc
inc
push
dec
xor
mov
adc
movs
mov
leave
movs
leave
cmps
jo
mov
cdq
xor
movs
xor
data16
call
mul
sub
call
push
pusha
cmp
call
cmp
aam
dec
and
mov
out
dec
and
test
inc
add
xor
sub
(bad)
xchg
call
dec
hlt
shr
popf
or
xchg
xchg
dec
inc
ret
ds
rcr
imul
and
push
inc
adc
mov
inc
add
push
pop
dec
hlt
or
unpcklps
xor
pusha
xor
add
xchg
xchg
adc
add
movs
lds
mov
and
lds
int
sbb
adc
adc
add
mov
jecxz
cmps
add
cmp
inc
adc
add
or
push
mov
xor
mov
push
mov
or
push
adc
lock
mov
cmps
push
ja
add
add
pop
xor
es
dec
(bad)
sub
sbb
push
push
(bad)
adc
push
jo
fidiv
dec
pusha
daa
xor
out
dec
dec
push
call
sbb
xchg
push
lahf
dec
mov
in
push
(bad)
or
mov
cmovp
adc
sub
out
inc
or
mov
jmp
adc
out
adc
sub
bound
push
add
rcl
dec
add
cmps
sbb
pop
push
ss
adc
add
sub
xchg
mov
cmps
or
or
mov
dec
sbb
add
movs
movs
xor
jo
xchg
push
hlt
in
jno
inc
or
xor
(bad)
xchg
hlt
mov
inc
loope
call
adc
add
adc
add
js
movs
mov
ds
xchg
push
std
imul
xor
xor
dec
pop
xor
dec
pusha
sub
push
adc
mov
ja
adc
sub
or
lods
daa
jp
nop
adc
push
(bad)
call
dec
dec
fimul
dec
in
dec
call
adc
nop
xchg
mov
inc
bswap
push
or
in
inc
xchg
mov
shl
mov
mov
push
pushf
or
add
push
add
call
dec
pop
dec
sbb
imul
in
dec
xor
or
(bad)
call
dec
cmps
call
and
shl
call
cld
imul
rcl
in
inc
jge
mov
out
(bad)
xchg
ds
fdiv
inc
push
cmps
in
add
out
mov
fs
jnp
icebp
dec
inc
xor
push
jno
dec
bound
imul
dec
jne
rol
sbb
sbb
jecxz
ja
dec
pusha
daa
jp
dec
ficom
cwde
movs
and
mov
push
mov
xchg
add
pusha
sar
adc
sbb
or
pop
sub
movs
cli
push
inc
add
pop
dec
or
pop
add
pop
dec
hlt
mov
inc
or
call
mov
dec
sub
cs
push
clc
rol
pusha
es
ret
shl
cmp
sbb
xor
add
movs
mov
xchg
pop
jp
add
pop
push
cmp
dec
call
mov
add
sub
add
adc
test
or
push
rol
mov
xor
or
cmps
xchg
dec
cmp
shl
hlt
rol
xor
xchg
mov
test
or
sub
loop
unpcklps
adc
addr16
ficom
add
push
push
mov
jp
or
inc
or
adc
add
or
mov
jecxz
add
jmp
jae
bound
popf
dec
or
inc
or
shr
in
dec
sar
mov
nop
rcl
inc
shr
sub
xchg
xchg
rol
mov
mov
adc
cwde
mov
cmp
(bad)
lds
cmps
loop
inc
test
mov
hlt
push
adc
adc
sub
mov
mov
lahf
dec
push
adc
inc
adc
push
inc
jecxz
add
inc
out
or
adc
inc
or
xchg
xor
hlt
mov
cmp
push
adc
xchg
mov
jne
movs
leave
movs
jmp
xchg
dec
or
push
inc
xchg
sbb
loopne
mov
mov
pop
xor
shl
call
jmp
in
dec
int
sub
add
xchg
sbb
jle
movs
cmps
add
pusha
cs
push
inc
or
out
dec
xor
loop
rol
dec
inc
aam
imul
cmps
xor
xchg
inc
inc
dec
es
pop
cmp
adc
inc
out
test
jge
loop
add
jge
or
mov
fisubr
cmps
add
bound
mov
sbb
hlt
push
jae
movs
or
or
movs
fsubr
xor
push
add
shr
stc
movs
cmp
pusha
xor
sub
movs
push
adc
nop
mov
shl
nop
rol
xor
imul
sub
or
xchg
cmps
movs
and
xor
xchg
sbb
inc
mov
sub
test
sub
xchg
popf
inc
adc
and
sbb
inc
and
mov
add
mov
sub
pop
adc
dec
call
xchg
adc
dec
dec
push
xor
pop
jp
out
inc
add
inc
jp
xor
dec
jge
jg
or
fdiv
movs
and
xor
inc
shl
mov
add
mov
pop
cmp
fimul
add
add
cmp
mov
outs
cmp
rol
inc
mov
sub
cmp
push
add
xor
push
rol
push
mov
mov
sub
mov
xor
cmps
push
bound
add
dec
in
dec
cmp
imul
(bad)
adc
sub
sub
sbb
sbb
lds
adc
push
adc
xchg
ja
sbb
cmp
add
and
test
cmp
mul
inc
xor
xor
jp
ror
adc
sub
pusha
push
xor
or
sub
inc
inc
test
adc
dec
add
inc
cmp
adc
mov
and
sub
pusha
rcl
lods
and
imul
push
add
adc
inc
add
xchg
daa
rol
xor
mov
push
xchg
jle
push
inc
add
add
imul
add
inc
push
add
xor
adc
jge
cld
imul
pop
adc
inc
push
push
xchg
adc
cmp
add
adc
mov
jae
movs
pop
cmp
dec
int
push
mul
sub
movs
push
nop
xchg
dec
int
push
inc
or
add
mov
dec
sub
bound
hlt
movs
add
and
dec
(bad)
punpckhdq
int
mov
xchg
xchg
jmp
ds
dec
xor
test
add
push
inc
cmps
call
mov
jae
imul
cmc
cmps
mov
ret
mov
pop
test
and
sbb
jns
mov
or
mov
jne
fdiv
xchg
fwait
test
inc
pop
or
add
cmps
sbb
or
shr
sbb
imul
inc
xor
cmp
jno
dec
inc
jp
pusha
adc
lds
mov
sbb
shr
inc
mov
inc
add
inc
add
arpl
xchg
mov
xor
cmps
jno
cld
test
add
add
mov
dec
hlt
mov
add
sub
cwde
ret
call
xchg
xor
xchg
push
out
or
mov
or
or
add
lds
adc
add
mov
mov
rol
push
inc
mov
mov
or
xor
adc
mov
add
int
test
test
dec
loopne
or
mov
pushf
push
lea
test
push
cmps
mov
mov
dec
add
daa
push
add
and
dec
arpl
sub
movs
mov
test
adc
dec
dec
jns
add
sub
dec
dec
add
push
jae
inc
and
xchg
dec
xchg
dec
mov
loop
mov
rcl
sbb
mov
adc
dec
push
jae
jbe
and
lds
sub
sub
hlt
movs
mov
and
inc
mov
xchg
lock
add
rcl
imul
inc
cmp
jmp
fsubr
cmp
sbb
dec
push
mov
inc
cmp
movs
xor
add
mov
sub
test
int
sbb
dec
add
xchg
mov
add
adc
push
sbb
sub
mov
ins
sbb
mov
ss
xchg
xchg
add
mov
adc
test
test
and
hlt
add
dec
lahf
dec
cmp
push
(bad)
xchg
mov
sar
add
mov
jb
inc
cmps
or
mov
fucomp
jns
out
dec
mov
sub
add
loope
dec
out
dec
sbb
movs
adc
add
dec
mov
mov
push
rcl
and
dec
jns
rcl
test
xchg
jecxz
cmp
lea
pusha
inc
aam
or
xchg
imul
bound
sub
inc
push
add
lods
adc
pusha
add
jbe
(bad)
movs
and
and
(bad)
cwde
les
add
pushf
cmp
mov
movs
int
mov
mov
inc
push
xor
mov
cld
mov
push
xor
mov
xchg
daa
(bad)
xchg
adc
out
inc
dec
add
(bad)
xchg
dec
int
mul
fwait
call
adc
inc
adc
test
push
out
mov
imul
sub
xchg
mov
cmps
cwde
adc
jge
dec
push
adc
and
push
xor
adc
xchg
or
movs
movs
mov
inc
inc
adc
add
push
xor
inc
mov
and
jno
ins
sbb
hlt
mov
mov
add
cwde
or
adc
cmps
add
mov
sub
movs
mul
mov
imul
dec
dec
int
add
add
movs
movs
movs
and
jno
or
push
hlt
ror
cwde
add
or
imul
rol
cmc
movs
out
dec
dec
jno
or
xor
shl
sbb
fiadd
fimul
mov
xchg
and
push
mov
popa
jb
sub
jp
add
mov
add
pusha
adc
sbb
pushf
jp
push
xor
xchg
in
dec
add
adc
add
push
test
mov
nop
les
xor
rol
pop
mov
mov
mov
push
push
cmps
push
add
dec
or
cmp
push
push
inc
jecxz
add
cmp
loopne
adc
ror
cmp
pusha
and
nop
or
test
push
cmp
sub
loope
push
inc
sub
push
mov
cmps
push
inc
or
adc
bound
sub
popf
ror
int
add
out
out
inc
pop
add
mov
adc
jo
mov
sbb
add
push
int
cmp
adc
loop
or
sub
add
mov
mov
dec
imul
inc
inc
movs
lds
adc
push
mov
lds
sub
ja
add
xchg
mov
add
xchg
push
loop
add
mov
in
inc
cmc
mov
and
nop
mov
xchg
(bad)
xor
cmp
lea
push
dec
imul
fs
dec
cmps
call
mul
or
sbb
push
(bad)
or
adc
cwde
movs
shl
adc
movs
cmp
and
sti
push
jb
leave
cmps
add
xchg
sbb
jbe
sbb
mov
das
xor
cmps
xchg
sbb
xor
pop
fs
call
push
push
add
push
xchg
ficom
sub
inc
sub
popf
jmp
xor
sbb
add
xchg
push
fimul
push
add
inc
add
adc
inc
add
push
imul
or
inc
sub
push
loop
jne
sub
sub
mov
mov
dec
sub
dec
inc
add
push
inc
adc
push
dec
dec
inc
or
popf
dec
mov
ror
jp
pop
lods
and
xor
ror
adc
add
push
push
mov
sub
cmc
movs
out
inc
inc
sbb
pop
sub
or
inc
adc
or
in
dec
dec
xor
add
loop
adc
pop
lods
adc
sub
pop
movs
and
movs
loop
add
shl
dec
jno
and
xor
pushf
push
jbe
add
dec
xor
add
rcr
mov
fdivr
out
dec
cmps
loopne
sbb
inc
add
adc
adc
adc
add
jle
mov
add
push
inc
adc
cwde
adc
xchg
mov
xor
or
call
xchg
call
dec
inc
adc
arpl
mov
sbb
imul
(bad)
sahf
inc
and
add
rcl
jno
dec
inc
cmp
cmp
mov
inc
out
aaa
push
or
sbb
dec
aam
bound
mov
out
shr
mov
add
(bad)
loop
popf
inc
add
xchg
xchg
hlt
mov
int
movs
mov
rol
xor
push
dec
inc
test
mov
inc
les
and
adc
dec
add
add
dec
rcl
adc
xchg
mov
sbb
cmp
add
add
pop
hlt
push
fiadd
sub
xor
sbb
int
jae
inc
add
inc
and
mov
cmp
mov
push
push
push
adc
cwde
adc
ror
dec
dec
aam
dec
arpl
adc
(bad)
lds
movs
cmp
sub
cmps
push
lds
sbb
cmps
adc
lds
sbb
jno
inc
or
push
mov
ins
sub
sub
sbb
xchg
dec
dec
inc
add
or
xor
add
dec
inc
add
clc
rol
add
cmps
jo
xor
cmps
rol
jbe
inc
adc
aas
cmp
add
adc
jo
fwait
stc
rol
xor
or
mov
add
movs
jo
push
xchg
popf
inc
mov
cs
push
inc
ret
sbb
mov
sub
sub
adc
popf
inc
cmp
clc
adc
add
or
add
mov
mov
adc
inc
stc
rcl
sub
add
ror
lock
movs
cmp
sub
jo
cmp
add
push
rol
or
and
imul
inc
adc
push
or
dec
push
daa
sbb
adc
sbb
inc
sbb
add
rcl
push
sub
mov
adc
jae
inc
sub
xor
rcl
movs
int
add
xchg
xor
xor
or
add
out
sbb
rcl
icebp
jmp
lock
(bad)
nop
or
dec
push
out
mov
sub
push
test
adc
aaa
push
popf
inc
add
dec
inc
cmp
jnp
xor
and
jno
pop
ins
adc
movs
out
test
imul
cld
jno
mov
add
cmps
adc
shr
mov
sub
mov
pop
add
dec
and
xchg
arpl
icebp
call
inc
sub
add
xchg
inc
sub
mov
rol
push
dec
mov
push
cs
int
mul
cwde
out
mov
mov
dec
fisubr
shl
add
add
add
xor
xchg
lods
sub
add
jne
adc
add
add
mov
add
inc
int
mov
sub
ror
add
test
push
mov
mov
push
push
inc
or
sub
movs
aaa
mov
sbb
sbb
xchg
cmps
mul
in
aaa
(bad)
nop
mov
fwait
mov
add
sub
push
(bad)
pop
imul
dec
imul
mov
add
push
loop
mov
lahf
test
sub
dec
mov
adc
inc
scas
push
adc
or
mov
mov
in
inc
adc
add
jae
add
add
sub
or
movs
mov
mov
add
mov
inc
add
mul
loop
ficom
sub
mov
jp
jle
out
imul
push
dec
dec
inc
ret
push
hlt
push
dec
inc
or
mov
add
cld
push
mov
mov
push
inc
or
push
jo
xchg
adc
push
adc
xor
push
dec
movs
shl
jbe
ds
fisubr
imul
add
call
mov
add
fiadd
add
inc
mov
dec
add
adc
dec
lods
add
dec
and
nop
or
out
adc
int
add
rcl
mov
push
dec
cmp
rol
and
dec
dec
push
lds
and
rol
mov
cmp
out
(bad)
cwde
add
add
mov
mov
ret
add
sub
sub
ret
mov
sub
xor
inc
loop
sub
or
push
dec
cmps
jae
inc
sub
mov
xchg
call
add
mov
push
add
out
inc
movs
mov
bound
mov
sub
push
bound
call
nop
icebp
dec
and
mov
cmp
sub
mov
jo
add
nop
or
mov
fmul
inc
sub
push
mov
dec
jge
ret
imul
mul
mov
inc
or
movs
shl
mov
pop
add
sub
aaa
adc
movs
(bad)
lods
sbb
dec
mov
add
arpl
xchg
mov
add
sub
sub
xor
cmps
or
sub
add
add
add
sub
out
sbb
js
mov
xor
sub
adc
sub
loop
adc
and
popa
push
mul
dec
and
dec
ss
inc
and
cmp
cwde
int
adc
xor
add
movs
lds
add
or
ficomp
xchg
xchg
sbb
push
push
test
mov
scas
inc
and
mov
add
mov
or
mov
int
add
add
adc
cwde
mov
add
push
add
push
add
inc
add
inc
add
call
adc
jle
add
es
xchg
mov
mov
mov
mov
pop
dec
pusha
adc
inc
add
rcl
or
mov
inc
add
pop
movs
adc
add
(bad)
or
sub
lds
fidiv
xor
mov
cli
xor
add
bound
lds
xor
mov
dec
movs
mov
enter
mov
jle
add
xor
lgs
add
push
popf
mov
inc
or
push
mov
inc
cmp
push
inc
(bad)
fisttp
mov
data16
sbb
movs
cmp
mov
add
shl
dec
sub
out
dec
loopne
ror
mov
push
clc
push
add
sub
aam
xor
inc
or
push
mov
xor
mov
sub
push
add
adc
adc
mov
arpl
xchg
or
add
sub
mov
dec
ja
dec
inc
cmp
push
aam
jne
or
test
inc
add
lods
aaa
mov
inc
les
mul
dec
cmp
aam
shr
or
xchg
inc
xor
ficom
loop
push
aam
movs
adc
data16
or
pushf
sar
cli
push
clc
push
test
sub
mov
movs
xor
push
add
out
mov
dec
imul
sbb
int
movs
and
jmp
mov
push
jo
mov
movs
shl
adc
sbb
rol
pop
lods
add
jbe
jg
xor
cwde
xor
test
sub
mov
cmp
xor
add
inc
sub
mov
push
xchg
push
mov
push
rol
std
mov
inc
adc
repnz
dec
push
loop
dec
lds
inc
daa
xor
popf
dec
rcr
cmp
adc
arpl
push
sbb
dec
push
adc
adc
dec
push
sbb
dec
test
nop
imul
rol
jp
sbb
ds
xor
or
ds
jmp
cmp
push
pop
push
or
fimul
aam
shl
cmps
xor
sub
inc
add
fiadd
add
rcl
inc
or
adc
adc
mov
adc
sub
xchg
mov
adc
out
pop
mov
jne
out
add
dec
add
jnp
add
sar
mov
in
inc
cs
inc
daa
jmp
sbb
leave
in
inc
xor
push
dec
inc
add
adc
push
inc
add
add
inc
or
mov
mov
lds
sbb
rcl
mov
adc
inc
or
xchg
mov
dec
lods
and
mov
xchg
rcr
inc
add
mov
add
adc
inc
test
call
(bad)
nop
aam
adc
in
dec
push
rol
mov
sbb
sub
add
dec
xchg
add
jnp
add
push
xchg
cwde
cmps
push
push
or
push
mov
or
adc
add
dec
inc
cmps
push
inc
ret
sub
cmps
adc
arpl
test
cmps
add
push
mov
mul
sub
call
sbb
out
dec
inc
sbb
cmps
add
bound
xor
bound
jbe
xor
inc
sbb
movs
xor
movs
loopne
push
and
adc
mov
or
sub
push
add
adc
sub
adc
test
pusha
and
popf
inc
sub
xchg
popf
sub
mov
ins
daa
xor
xor
sbb
dec
jge
xor
outs
jl
ficom
sbb
add
push
dec
add
test
dec
add
dec
inc
and
push
jno
jae
dec
sub
push
ror
add
sub
jo
mov
pop
mov
push
jo
or
inc
cmc
movs
add
jg
xor
je
jae
push
imul
adc
call
movs
add
loope
inc
add
push
sub
lahf
dec
arpl
dec
add
or
mov
xor
cmps
add
loopne
sar
jmp
inc
xor
inc
cmp
(bad)
adc
cmps
bound
dec
mov
lds
adc
adc
adc
test
dec
xor
push
add
lahf
jp
mov
shr
sbb
add
sbb
adc
cmp
dec
ds
or
cmps
xchg
push
adc
cwde
adc
mov
js
lds
and
xor
mov
push
jae
push
in
and
or
mov
icebp
dec
int
jno
inc
sub
shl
inc
add
jbe
pop
push
dec
push
mov
mov
mov
add
xchg
push
and
iret
mov
mul
inc
add
mov
movs
jno
adc
inc
add
add
sub
mov
or
xor
sub
bound
cmp
adc
ror
adc
dec
enter
ins
sbb
pusha
or
inc
sbb
add
mov
scas
push
imul
xchg
mov
or
add
add
jo
(bad)
mov
dec
(bad)
mov
dec
inc
sub
xor
dec
sub
adc
jnp
inc
add
movs
cli
rol
or
inc
push
pop
adc
mov
cmp
and
add
inc
jp
sub
ins
shl
dec
das
push
jecxz
imul
mov
push
rol
mov
push
jmp
mov
and
lahf
pop
lgs
add
or
pusha
adc
xor
dec
sub
push
add
add
jle
test
out
and
adc
mov
sub
(bad)
mov
frstor
xor
aaa
movs
adc
push
mov
(bad)
push
cmp
or
adc
ret
cwde
or
or
out
inc
or
call
sbb
cmp
add
clc
push
sub
cmp
add
sub
dec
lds
movs
add
mov
sbb
lds
add
inc
sub
mov
pushf
inc
mov
mov
push
lock
pop
sbb
sub
cmps
loop
adc
aaa
mov
sub
sub
fcom
mov
add
clc
push
clc
push
add
inc
aas
push
aam
and
sub
xor
lds
or
adc
(bad)
pop
pop
or
adc
adc
or
shld
push
add
lds
add
adc
push
add
fcom
movs
mov
sbb
push
add
dec
pop
lods
xor
or
push
shl
lds
je
sub
inc
sub
xchg
jno
add
lock
add
push
mov
imul
int3
push
arpl
push
bound
aas
adc
inc
adc
dec
inc
dec
inc
xor
pusha
inc
inc
and
dec
or
imul
mov
push
mov
(bad)
nop
mov
add
dec
inc
adc
ret
movs
push
jmp
adc
jp
cwde
cmps
xchg
dec
push
shl
push
mov
push
xor
cmps
pusha
push
sub
xor
aam
adc
push
add
xor
lock
push
div
mov
and
sub
xor
add
rcl
jmp
xchg
data16
dec
mov
inc
pop
jbe
add
data16
push
or
imul
adc
add
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
lds
add
push
add
push
add
add
push
inc
jmp
sub
add
je
push
inc
sub
loop
jnp
mov
ficom
sub
mov
push
(bad)
xchg
mov
add
xchg
out
add
mov
sub
lds
cmp
xor
mov
pop
cmp
adc
mov
pop
push
inc
lods
es
movs
mov
xchg
popf
shr
dec
lds
sub
or
imul
pusha
aaa
adc
sub
push
adc
inc
(bad)
rol
mov
push
iret
xor
adc
push
push
dec
fucomi
dec
mov
push
rcl
cwde
pop
dec
push
sub
add
mov
adc
cwde
cmps
jno
xor
shr
lds
adc
mov
dec
sub
sbb
push
(bad)
adc
(bad)
pusha
ror
add
xor
dec
or
shl
cld
sbb
inc
(bad)
bound
add
in
push
inc
ret
xor
mov
xor
pop
sbb
icebp
inc
shr
aam
adc
fiadd
dec
pop
ret
sbb
sub
sub
xchg
sub
ror
lock
icebp
dec
add
cmc
movs
rcl
jno
or
shl
dec
inc
pop
sbb
sbb
hlt
pushf
jp
jno
out
imul
xchg
jmp
bound
adc
lahf
mov
inc
ror
fwait
mov
mov
sub
mov
loop
mov
bound
jmp
sbb
outs
sub
test
push
mov
or
sub
add
dec
push
lds
adc
xchg
or
or
movs
mov
dec
add
adc
mov
adc
adc
bound
cmp
sub
scas
push
or
cmc
movs
(bad)
mov
sbb
mov
movs
push
dec
test
pop
add
mov
cmp
push
add
add
shr
or
or
inc
sub
les
adc
rol
es
xchg
adc
ins
and
pushf
imul
xchg
adc
dec
push
mov
cmp
mov
pusha
push
mov
add
dec
jne
mov
(bad)
imul
mov
sbb
ror
xor
lds
cmc
mov
pusha
es
sub
call
inc
sub
daa
adc
add
push
lahf
push
sub
movs
add
mov
xor
add
inc
adc
sbb
fimul
sub
add
sub
shl
adc
xchg
push
test
adc
push
add
xor
add
retf
push
or
mov
adc
adc
adc
inc
or
test
push
dec
add
shl
fimul
cmc
movs
add
(bad)
ja
inc
cmp
inc
cs
mov
add
or
mov
pop
test
add
xchg
add
lds
mov
dec
lds
adc
add
shl
mov
in
inc
ror
mov
mov
push
pusha
rcl
push
popf
mov
bound
shl
dec
inc
or
sub
and
mov
add
mov
ds
add
dec
(bad)
jp
shl
inc
or
sub
add
jnp
icebp
inc
add
loope
inc
movs
cmp
cmp
mov
jno
push
lds
add
movs
shl
inc
fidivr
xor
in
push
dec
mov
cmps
bound
xchg
adc
mov
push
jo
rcr
jne
rol
push
out
inc
or
mov
dec
sub
cmp
dec
push
in
movs
lds
mov
adc
popf
inc
add
dec
loop
add
inc
cmps
loop
push
add
fisttp
sbb
sbb
rol
mul
push
sbb
inc
cmp
inc
rol
jo
inc
movs
add
or
dec
adc
mov
push
mov
sub
sub
sub
loopne
sub
xchg
adc
push
mov
adc
call
mov
inc
bound
(bad)
xchg
jmp
ja
add
imul
movs
pusha
mov
outs
mov
sbb
mov
push
mov
mov
xor
pop
add
adc
bound
jnp
dec
test
ror
popa
adc
mov
push
jno
or
cmps
xchg
jmp
xchg
dec
and
adc
sbb
xchg
ins
add
imul
mov
lds
sbb
cmps
pusha
push
bound
pop
mov
inc
or
push
icebp
inc
add
call
cwde
sbb
imul
mov
(bad)
jp
int
add
sbb
inc
ror
mov
sub
mov
mov
add
add
adc
inc
add
adc
inc
add
mov
add
(bad)
xchg
push
add
push
clc
push
dec
inc
or
push
add
mov
xchg
sbb
add
pop
or
dec
dec
ficom
mul
dec
hlt
add
push
inc
push
rol
sub
cmps
push
push
add
or
jmp
push
inc
or
or
add
in
push
bound
lds
xchg
lock
pop
xchg
icebp
mov
loope
in
stc
push
lds
add
movs
sbb
dec
sub
call
inc
sub
add
sub
sub
or
mov
loop
push
lock
shl
add
push
mov
cwde
mul
inc
ror
push
mov
push
icebp
dec
mov
add
cmps
bound
mov
lds
loope
mov
sbb
sub
dec
(bad)
pop
sub
mov
xor
test
xor
sar
push
add
mov
push
mul
add
push
inc
or
push
inc
sub
jp
xchg
jge
adc
sub
xchg
adc
sub
adc
add
lahf
lds
add
shl
push
mov
inc
movs
sbb
dec
mov
push
sub
sub
adc
ds
cli
aas
or
gs
test
sbb
mov
aam
addr16
mov
adc
sbb
sbb
adc
or
in
dec
lds
dec
mov
push
shl
mov
add
dec
mov
adc
fcomp
xor
dec
or
mov
rcl
cs
adc
add
bound
inc
sub
push
or
dec
adc
movs
movs
jo
sub
mov
rcl
xchg
add
cmps
push
sub
(bad)
in
add
add
mov
imul
jnp
xchg
(bad)
add
pop
lods
adc
add
sub
test
mul
sub
ret
push
int
cmps
add
push
dec
test
dec
or
sub
push
push
jno
cs
inc
movs
(bad)
mov
dec
jecxz
and
push
add
imul
add
movs
(bad)
xor
add
push
cmc
cmps
arpl
aam
ficomp
add
cs
mov
jle
push
inc
dec
jae
mov
mov
dec
pop
sub
add
sub
add
mov
push
add
rol
shl
jp
add
jo
loop
add
push
add
mov
sub
pop
lods
sub
adc
add
adc
add
sub
dec
fimul
mov
movs
jo
xchg
adc
mov
dec
cmc
mov
movs
loop
add
jmp
mov
sub
dec
hlt
mov
push
mov
shl
loop
inc
cs
pop
add
out
inc
sub
xor
jae
or
push
jno
mov
js
push
hlt
out
cmp
add
mov
sbb
dec
add
sbb
or
cmp
pop
add
mov
sub
add
movs
fisttp
mov
in
movs
and
rol
push
ins
test
mov
ins
add
adc
ficomp
add
loope
shl
adc
xor
ret
js
add
push
jecxz
mov
inc
sub
mov
hlt
mov
push
sbb
jle
pop
push
pusha
ror
mov
lahf
mov
dec
push
bound
inc
or
sub
movs
add
xor
cli
push
fwait
dec
sbb
(bad)
push
aam
mul
adc
fimul
add
dec
pop
dec
add
lds
push
mov
or
dec
lds
sub
bound
xor
push
xchg
push
hlt
in
mov
cmps
add
inc
adc
dec
sub
fcom
add
test
cmp
bound
add
mov
add
dec
sbb
inc
xor
push
loopne
mov
(bad)
sbb
dec
sub
add
sub
push
ror
add
cs
mov
push
sub
cmc
mov
popf
inc
xor
xor
sbb
dec
pop
movs
or
cs
dec
dec
lods
and
sub
mov
adc
inc
and
movs
movs
mov
or
call
xchg
mov
add
push
ror
imul
mov
test
dec
sbb
test
bound
add
dec
inc
movs
aas
adc
cmps
jo
inc
movs
lds
shl
add
fisttp
nop
mov
imul
(bad)
test
inc
and
cmps
jo
aam
imul
movs
add
movs
lds
das
call
sub
ficomp
dec
push
add
lds
es
add
add
es
adc
cwde
xor
shl
mov
dec
sbb
out
dec
mov
add
out
inc
cmp
(bad)
jp
movs
mov
mov
adc
pop
dec
add
sub
xchg
add
adc
push
push
dec
mov
dec
loopne
sub
ficom
or
mov
pop
or
xor
inc
add
mov
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
mov
sbb
sub
aas
or
mov
mov
aas
or
mov
push
lds
es
mov
arpl
mov
dec
loopne
sbb
push
jo
push
mov
pop
xor
dec
push
(bad)
jp
xor
mov
mov
adc
adc
inc
pop
loope
sub
sub
mov
push
inc
or
inc
add
adc
inc
aas
adc
cmps
jo
inc
and
jnp
or
mov
mov
jge
add
rol
sbb
jp
mov
(bad)
adc
test
add
inc
sub
mov
mov
inc
adc
fimul
inc
adc
ficom
xor
xchg
inc
sub
ins
adc
push
sub
dec
mov
ins
xor
lds
test
ror
xor
lea
adc
fisub
inc
mov
push
bound
sub
aas
ins
rol
fild
sti
dec
sbb
cwde
adc
push
icebp
dec
mov
add
xor
clc
xor
fimul
or
mov
fwait
inc
cmp
adc
fmul
pop
ss
dec
add
and
imul
adc
add
cwde
xor
push
loop
mov
or
sub
mov
push
mov
add
jo
fsub
das
adc
add
pusha
shl
add
dec
add
aaa
call
call
xchg
adc
add
pop
push
int
push
mov
inc
adc
dec
inc
or
push
add
jge
add
adc
jbe
aaa
movs
xor
inc
in
dec
dec
imul
cmps
cmp
push
mul
sub
xchg
sub
add
mov
dec
movs
es
jmp
les
xchg
inc
sbb
xchg
xchg
call
push
in
push
mov
cmovp
shr
add
shr
jne
int3
rol
mul
adc
dec
push
and
mov
movs
mov
add
movs
mov
mov
add
pop
push
loop
shr
jnp
(bad)
jp
add
(bad)
mov
xchg
xchg
lock
loope
mov
ret
add
and
sub
inc
es
or
sub
test
add
aam
rol
es
sub
repnz
adc
push
inc
adc
push
inc
adc
push
inc
sbb
mov
(bad)
lods
add
pop
add
rcl
xchg
add
or
sub
mov
pop
add
sbb
mov
sar
rcl
inc
or
rcl
inc
sbb
or
sub
dec
clc
push
inc
mov
ja
shl
add
sbb
add
inc
adc
or
sub
sub
adc
adc
pushf
push
or
sbb
test
test
adc
sar
adc
pop
adc
xchg
popf
inc
loope
or
cmp
mov
aas
sbb
dec
mov
dec
(bad)
pop
pop
pop
or
add
push
(bad)
push
push
add
or
dec
add
sbb
lds
movs
mov
xor
movs
cld
push
inc
sub
sbb
cs
loopne
push
aam
ficomp
outs
cmp
push
clc
shl
sub
icebp
mov
add
mov
dec
ja
inc
jecxz
shr
(bad)
mov
icebp
mov
dec
movs
and
jmp
or
dec
loopne
adc
test
sub
or
int
ficom
xor
movs
out
clc
push
add
nop
mov
push
add
xor
mul
aas
push
aam
adc
xor
dec
fisubr
dec
xor
add
fcom
cwde
mul
loope
xchg
adc
mul
popf
dec
lds
adc
push
sbb
bound
dec
push
add
push
sub
sbb
and
sub
or
movs
mov
shr
dec
dec
or
xor
imul
push
inc
sbb
shl
nop
rol
inc
ret
mov
xchg
xor
cmps
test
sbb
adc
xor
push
push
push
lea
cwde
add
lea
adc
lea
push
xchg
xor
rol
or
dec
xor
push
or
xor
pop
out
and
movs
sub
mov
add
movs
movs
mov
sub
loop
inc
sbb
mov
pop
jecxz
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
fimul
add
mov
icebp
mov
mov
pop
test
add
test
test
adc
clc
push
add
(bad)
mov
movs
(bad)
mov
ins
sbb
cmps
jle
jle
pop
push
jecxz
mov
mov
ins
sbb
jo
xchg
push
lds
pop
push
mov
movs
add
or
sub
add
sub
ficomp
inc
xor
push
xchg
mov
jle
add
dec
clc
push
add
sbb
mov
add
pop
xchg
adc
test
add
ret
ffreep
pop
popf
clc
push
clc
push
jo
(bad)
jp
jnp
ror
jno
mov
ret
(bad)
(bad)
mov
mov
jecxz
mov
pop
popf
inc
cmp
push
inc
shr
mov
push
add
out
inc
xor
mov
mov
ja
aas
or
jo
xor
and
outs
sub
cmc
mov
adc
and
fisubr
shl
mov
mov
add
xor
inc
add
adc
clc
push
clc
push
add
test
push
inc
sbb
inc
add
xor
adc
inc
loope
add
push
inc
sub
pop
dec
cmp
shl
sbb
sub
sar
jge
pop
or
dec
dec
lds
push
bound
or
(bad)
mov
adc
mov
dec
sub
jmp
(bad)
lods
cmp
dec
mov
add
sub
push
mov
dec
sbb
or
mov
dec
cmp
mov
jo
mov
inc
ror
mov
add
sub
xor
push
test
(bad)
popf
shr
loop
or
mov
push
adc
inc
push
inc
or
dec
sub
xchg
rcr
mov
mov
sbb
mov
je
jbe
mov
jecxz
fwait
inc
sbb
adc
cmovp
jbe
hlt
movs
cmp
adc
es
movs
cmps
call
hlt
movs
cmp
imul
adc
dec
(bad)
xchg
cmp
dec
add
ja
cdq
cmc
mov
xor
adc
mov
sbb
das
outs
mov
jge
jae
pop
add
xor
inc
data16
movs
mov
sub
movs
push
xchg
xchg
xchg
add
push
mov
mov
sub
inc
adc
push
inc
adc
push
inc
push
or
mov
jmp
pop
adc
xchg
punpckhdq
inc
or
mov
add
mov
sub
sub
add
mov
jno
add
loope
loope
(bad)
jp
push
add
cmp
pop
add
sub
sub
sub
cli
push
mov
clc
push
clc
push
rol
outs
loope
dec
clc
push
clc
push
add
adc
ret
xchg
sub
movs
movs
(bad)
mov
add
xor
sub
push
test
add
jecxz
add
mov
add
lock
arpl
mov
jo
clc
push
or
add
jno
add
(bad)
sub
jno
xor
dec
dec
add
mov
add
mov
mov
add
xor
xor
xchg
push
or
add
popf
mov
out
inc
push
jge
add
jnp
(bad)
pop
push
push
mov
inc
mov
bound
aaa
adc
popf
mov
mov
cmps
loopne
int
add
mov
fidiv
inc
in
xor
les
mov
test
add
lock
shl
ret
add
psrld
jle
xchg
cld
push
arpl
cwde
or
push
movs
loop
cli
or
dec
ret
lahf
dec
xor
outs
sub
cmps
ins
mov
jp
or
and
push
loop
cvtps2pd
aas
or
or
jmp
xchg
adc
mul
fisubr
lds
add
hlt
mov
cmpps
ror
mov
dec
push
dec
(bad)
movs
es
or
mov
sub
mov
push
add
adc
push
mov
sbb
sub
mov
fidiv
xchg
xor
sbb
arpl
loop
xor
adc
movs
mov
rcl
xchg
mov
add
dec
sbb
or
inc
or
and
ror
sub
adc
or
lds
mov
xchg
shl
jmp
add
movs
sub
aam
push
rcl
sbb
xor
adc
push
push
ror
sub
dec
xor
jnp
add
xchg
sub
add
rcl
add
aaa
xor
rol
xchg
dec
iret
adc
inc
inc
or
xchg
xor
movs
int
mov
adc
jbe
inc
test
dec
or
lods
cmp
aaa
dec
add
mov
movs
int
add
sub
push
push
sub
in
inc
push
mov
push
inc
add
sub
lea
adc
mov
mov
sub
inc
or
mov
fwait
dec
sbb
mov
sbb
mov
ret
push
add
sub
push
pop
sub
sub
jle
push
inc
pop
loope
loope
adc
jle
jle
push
int
cmpps
inc
in
daa
loope
adc
xor
mov
mov
or
dec
(bad)
sub
mov
ret
push
ret
push
add
jmp
add
loop
inc
loope
or
mov
aas
or
add
imul
dec
mov
sbb
pop
lea
or
push
pop
sub
(bad)
cwde
pop
dec
sub
dec
dec
int
xor
dec
push
mov
inc
or
xchg
add
cmp
pop
lods
add
add
mov
mov
cwde
mov
add
adc
xchg
call
jmp
out
sub
rol
jno
adc
iret
ret
popf
inc
or
mov
dec
mov
ret
xor
clc
mov
bound
adc
fimul
and
xor
mov
nop
pop
cmp
mov
sbb
sbb
and
push
add
lock
lds
add
call
cmps
push
dec
loopne
xchg
xchg
adc
jo
inc
jecxz
mov
dec
add
lds
sbb
sub
sbb
rol
inc
sbb
inc
add
add
cmp
or
add
bound
mov
mov
add
or
lds
mov
or
(bad)
nop
les
xchg
sahf
imul
pusha
shl
mov
push
jecxz
nop
(bad)
mov
xchg
xchg
xchg
shr
mov
and
add
movs
push
nop
push
imul
cwde
add
outs
imul
rcl
imul
imul
call
pop
or
ror
dec
xor
cvtps2pd
or
cmps
xchg
dec
(bad)
out
dec
imul
cdq
xor
jno
hlt
cdq
movs
int
call
xchg
xchg
jne
add
loopne
adc
rol
inc
inc
cs
or
lds
add
mov
dec
lds
or
inc
and
sub
push
add
push
add
add
mov
mov
add
call
ds
jae
dec
fiadd
into
mov
push
inc
or
sub
or
rcr
addr16
mov
or
loop
adc
mov
and
sub
mov
lds
dec
add
xor
inc
or
add
pop
push
int
add
clc
mov
in
dec
mov
gs
xor
ret
sbb
push
(bad)
popf
inc
sub
fdivr
mov
sbb
fcom
xchg
adc
nop
or
inc
shr
xor
push
mov
mov
jo
add
push
dec
loop
mov
mov
imul
ficom
movs
lds
movs
add
push
test
push
repz
add
add
mov
push
hlt
arpl
popf
mov
inc
rol
xchg
imul
ins
add
lds
xor
add
or
loope
adc
or
cmp
sub
sub
push
xchg
mov
push
aam
lahf
stc
ror
cmps
loopne
push
pusha
jp
add
cmp
ror
sub
xor
add
shl
test
mov
push
jnp
(bad)
dec
mov
sub
or
add
lds
adc
sbb
inc
mov
sbb
inc
xchg
jnp
icebp
jmp
sbb
mov
cli
cmp
push
inc
mov
sbb
ins
sbb
nop
mov
adc
mov
mov
ret
mov
add
add
popa
sub
xchg
push
cmc
movs
cli
push
or
or
inc
xor
and
cmps
call
push
sub
mov
or
ror
nop
mov
dec
dec
push
inc
add
sbb
cmps
add
push
xor
add
ins
xor
imul
push
fcomp
or
rcl
dec
call
test
mul
call
ret
mov
aam
ror
ja
pusha
cmp
test
ror
dec
cmps
add
call
movs
test
mov
(bad)
fwait
call
dec
xor
jp
imul
arpl
cmp
lahf
lea
sub
sub
mov
sub
inc
sbb
add
sub
add
call
pop
dec
add
int
mov
jae
cmp
inc
adc
add
push
lds
xchg
push
add
inc
add
ror
mov
push
mov
fimul
fimul
inc
mov
inc
aaa
es
adc
ficom
(bad)
lods
adc
call
mov
pop
dec
add
or
inc
add
sub
push
sub
sub
or
loop
sbb
push
adc
popf
mov
shl
lahf
mov
push
add
dec
push
adc
add
mov
shl
inc
dec
add
mov
cmp
mov
sub
rcl
add
mov
inc
ficom
fisttp
jle
sbb
push
bound
push
jo
lds
adc
push
mov
add
inc
or
sbb
mov
icebp
inc
fisubr
add
ror
jo
mov
dec
lds
movs
jo
mov
sub
mov
adc
push
test
xor
mov
shr
dec
jbe
clc
push
loop
(bad)
inc
lods
xor
aam
movs
lds
mov
push
arpl
mov
mov
sub
push
bound
adc
mov
test
(bad)
inc
sub
aam
push
jo
lds
ficom
ins
cmps
xchg
test
loopne
mov
push
les
ins
cmps
jo
lds
sub
test
inc
mov
dec
fild
shl
adc
mov
sbb
xor
ins
es
mov
mov
cwde
movs
cmps
bound
jno
push
push
test
adc
xchg
adc
mov
sbb
push
dec
imul
mov
jle
jge
jno
inc
or
sub
xchg
push
inc
add
inc
add
mov
inc
add
dec
or
add
and
rcr
test
dec
add
sub
cmps
add
popa
cmps
sbb
add
dec
ror
call
mul
dec
sub
adc
es
lea
arpl
jae
or
int
xor
imul
arpl
dec
pop
cwde
lds
call
out
or
call
push
imul
outs
imul
jle
add
sbb
xchg
sbb
or
cmps
add
popf
adc
pop
xchg
inc
adc
add
push
add
push
add
push
add
push
add
push
add
daa
lods
adc
push
jge
push
adc
movs
movs
jo
int
sub
xor
dec
pop
sub
push
cwde
or
add
xchg
add
adc
inc
or
imul
xchg
push
add
pop
pop
sub
dec
loopne
rcl
bound
aas
sbb
add
inc
adc
add
push
push
mov
or
aam
test
dec
dec
push
cwde
or
movs
iret
mov
sbb
loope
in
inc
test
add
adc
xchg
push
call
inc
dec
in
inc
ror
pop
push
dec
adc
push
loop
push
xchg
punpckhdq
add
cmp
push
icebp
dec
push
popf
mov
inc
(bad)
fisubr
(bad)
mov
mov
mov
imul
ret
jno
push
aam
push
loopne
jno
loopne
loop
mov
mov
push
sbb
aas
ins
sbb
lods
xor
test
pop
jbe
shl
add
movs
fdivr
mov
inc
pop
movs
dec
mov
rol
(bad)
push
in
adc
adc
push
and
mov
test
cs
mov
mov
push
sub
dec
mov
mov
ss
push
fwait
inc
sbb
adc
rol
inc
ror
es
js
pusha
aam
sub
jo
(bad)
mov
push
mov
push
ins
adc
loopne
mov
mov
mov
add
inc
sbb
mov
sub
fisubr
push
mov
inc
mov
(bad)
lods
dec
mov
mov
pop
xor
xchg
ins
cmp
push
push
ins
mov
sub
test
pop
mov
dec
mov
inc
sbb
or
pop
mov
nop
mov
push
fimul
adc
inc
pop
add
inc
hlt
test
pop
or
bound
mov
fidiv
inc
adc
mov
adc
mov
jg
xchg
fwait
push
lahf
mov
sti
rol
xor
in
push
or
push
mov
movs
add
cmps
loop
push
aam
fdivr
clc
push
test
xchg
push
jns
or
jp
rcr
sbb
adc
rol
add
adc
sub
dec
push
xor
add
mov
or
cmps
add
sbb
add
ror
call
sub
imul
add
cwde
dec
sub
imul
bound
dec
xor
cmps
xchg
inc
les
call
or
xor
rcl
dec
ret
adc
inc
imul
dec
sub
push
xor
and
cmps
out
cmps
xchg
dec
ret
mov
aam
imul
sub
dec
mov
imul
test
xchg
sbb
mov
call
jae
adc
adc
clc
push
inc
add
adc
clc
push
add
test
dec
mov
out
inc
add
sbb
dec
inc
adc
sub
push
inc
adc
add
cmp
shl
push
stc
push
inc
push
add
add
mov
inc
add
or
push
xor
sub
mov
sub
sub
cld
push
or
pop
push
nop
cwde
movs
lds
jmp
pop
sub
mov
in
inc
sub
add
inc
push
jmp
lods
and
mov
sub
fwait
dec
adc
or
sub
or
jae
xchg
sbb
imul
movs
sbb
int
xchg
sbb
mov
out
imul
adc
mov
dec
push
push
add
inc
mov
or
shr
pusha
jp
mov
or
push
jno
ins
mov
fiadd
ficomp
sbb
retf
clc
mov
xchg
ins
stos
sbb
fld
lds
ins
stos
sbb
fld
lds
lea
mov
lea
cmp
imul
inc
shr
push
ss
mov
ret
cmps
ror
mov
add
mov
jbe
mov
fld
add
cmp
push
mov
or
ins
movs
fist
movs
fsubr
pop
xchg
retf
sbb
mov
dec
mov
xchg
ficomp
and
mov
mov
adc
or
add
inc
xor
xchg
adc
sub
jns
test
int3
push
sbb
push
push
jo
add
movs
and
cmps
bound
sbb
xor
fadd
call
push
add
test
enter
or
movs
shl
ins
adc
imul
arpl
test
mov
sbb
es
push
adc
nop
mov
ror
inc
add
push
nop
mov
movs
(bad)
mov
ss
mov
xor
movs
xor
movs
cmps
add
cmp
push
es
dec
dec
add
push
outs
dec
lods
adc
movs
xchg
inc
in
xchg
rol
xor
dec
pushf
push
push
cmps
pusha
add
xor
xor
add
call
test
push
cmps
xchg
dec
sub
arpl
push
xor
push
imul
ret
dec
es
rcr
dec
add
es
lds
push
mov
call
in
sub
shl
call
mov
fwait
inc
in
sub
jbe
call
rcr
push
sbb
adc
dec
call
mov
add
fist
mov
sub
bound
sub
fimul
adc
ret
sbb
sub
push
push
ror
mov
add
sbb
or
add
mov
shl
or
push
rol
dec
push
dec
inc
add
xchg
or
mov
mov
inc
adc
push
lds
pusha
adc
loop
push
push
adc
loop
sub
and
pop
sub
loop
sub
jge
cli
push
dec
sub
sub
dec
or
pusha
mov
rol
sub
dec
sbb
add
push
inc
add
adc
add
and
mov
dec
inc
or
movs
movs
lds
sub
mov
push
aam
push
imul
add
call
mul
push
dec
sub
pop
inc
pop
call
unpcklps
cmps
xchg
push
add
in
mov
dec
pop
ror
(bad)
bound
xor
adc
movs
sbb
imul
jo
mov
sahf
add
shl
push
sbb
sub
loopne
sub
or
(bad)
bound
fisubr
jbe
push
int3
push
sub
adc
jge
mov
mov
popf
sahf
aam
mul
inc
rcl
push
mov
mov
rcl
push
mov
push
jo
pop
pusha
mov
test
in
inc
xor
mov
mov
in
ss
push
xchg
ins
mov
lea
mov
movs
and
pop
imul
cmp
push
sub
shr
push
sub
adc
add
push
adc
inc
les
aam
push
jno
loopne
adc
mov
add
mov
pushf
inc
movs
shl
repz
mov
ins
xor
xor
push
xchg
dec
mov
lds
add
pop
test
adc
dec
or
push
mov
shl
sub
inc
ret
inc
sub
push
mov
data16
popf
mov
inc
mov
dec
mov
add
adc
add
cmps
xchg
int
inc
and
and
xchg
adc
xor
dec
add
sub
cmp
or
xchg
in
dec
dec
aaa
cmp
or
add
inc
and
adc
ror
xor
imul
xchg
call
movs
es
xor
dec
ret
adc
or
add
cwde
dec
sub
cmps
xor
cwde
dec
add
dec
cmps
xor
xor
xor
dec
push
inc
dec
aaa
xor
call
imul
sbb
adc
push
test
adc
cdq
mov
rcl
pusha
pop
call
add
jmp
mov
jp
pop
push
cmp
jecxz
push
jecxz
xor
ret
jp
or
cmp
xor
add
xchg
adc
shl
lock
add
movs
out
push
mov
add
mov
mov
add
xor
xchg
shr
cmp
mov
adc
xchg
mov
mov
adc
push
inc
add
adc
clc
rol
mov
popa
sub
sub
push
dec
mov
jno
adc
inc
pop
loope
adc
sub
sub
imul
sbb
sub
movs
jmp
ret
push
xchg
add
sub
push
inc
adc
jbe
movs
cli
rol
jbe
mov
mov
jmp
movs
shl
bound
xor
mov
inc
movs
mov
or
cs
adc
test
add
pop
(bad)
sbb
jo
add
and
call
add
rol
fimul
test
loop
or
js
add
or
dec
sbb
mov
push
adc
xchg
sub
inc
pop
adc
mov
add
inc
rcl
imul
popa
mov
jmp
rol
mov
or
in
mul
xor
inc
ret
push
sbb
cmp
in
mov
ins
pop
or
xchg
movs
fist
xor
adc
sub
ins
movs
fist
cmps
xchg
xor
sub
xchg
dec
sub
cmps
xchg
int
or
adc
dec
push
stos
loopne
sub
lods
adc
xor
lods
inc
inc
xor
pushf
cmps
sub
in
adc
cmps
xchg
cmps
jo
or
sub
shl
dec
mov
fisubr
bound
lds
mov
push
sub
jmp
in
movs
fisubr
adc
ins
dec
push
xchg
adc
add
mov
xor
ror
aas
adc
movs
add
mov
dec
push
pusha
push
arpl
add
pop
push
in
xor
rol
jbe
pusha
shr
sub
(bad)
adc
call
lds
adc
inc
imul
inc
sub
mov
jae
sbb
dec
sbb
sub
repz
cmp
push
adc
mov
rcr
push
call
add
jbe
cmp
adc
imul
movs
jmp
push
cmps
sbb
xor
jmp
adc
dec
cmp
and
aad
arpl
call
adc
cwde
rol
imul
es
imul
dec
and
adc
xchg
in
dec
dec
sub
sbb
shr
sbb
movs
int
test
adc
cmp
bound
jb
shl
inc
shl
lds
adc
ror
test
adc
lods
dec
mov
mov
push
fiadd
aam
imul
push
ins
add
mov
aam
dec
sbb
pop
mov
movs
fprem1
mov
bound
adc
mov
mov
xor
inc
sub
or
sbb
aas
adc
or
dec
(bad)
mov
mov
adc
bound
or
add
mov
mov
sub
shl
push
mov
and
or
sub
add
inc
lds
cmp
add
aas
or
jns
cvtps2pd
push
(bad)
xchg
punpckhdq
sub
popf
mov
add
rol
ins
sbb
add
rcl
loopne
inc
rol
or
imul
dec
inc
adc
push
mov
dec
push
iret
pop
push
sbb
jp
push
inc
cmps
mul
fimul
mov
sbb
inc
mov
inc
cmp
aam
movs
int
and
dec
or
sub
xor
stos
and
rol
test
test
or
xor
cmp
push
in
test
mov
xor
jno
adc
mov
pop
or
ret
sbb
fwait
or
outs
pop
lods
push
sahf
push
xchg
xchg
xor
mov
inc
mov
dec
or
push
xor
aam
pusha
jp
(bad)
pop
push
es
arpl
xchg
mov
mov
push
sub
sub
aam
adc
jp
mov
ficomp
loop
adc
pop
pushf
scas
push
dec
sub
adc
add
push
sub
imul
stos
inc
imul
mov
test
pop
inc
mov
xchg
cwde
push
call
push
in
cmps
xchg
cmps
jo
or
sub
test
push
and
dec
push
cmps
sub
dec
loopne
mov
movs
dec
mov
cmps
mov
fisub
rol
call
dec
mov
add
xor
dec
aas
ins
sbb
or
in
dec
sub
dec
loopne
inc
push
dec
push
add
loop
push
jmp
push
adc
call
dec
and
sub
les
xor
xchg
or
bound
popa
dec
popa
push
mov
mov
cmps
cmp
xchg
dec
popa
push
xchg
dec
and
jp
lods
add
iret
dec
imul
xor
dec
daa
pop
push
dec
imul
ror
out
jp
xchg
jmp
outs
mov
jmp
outs
mov
(bad)
cmp
or
push
enter
(bad)
cwde
dec
lods
push
add
jmp
ret
rcr
out
imul
add
jle
rcl
pushf
jns
outs
xchg
adc
shr
nop
ror
popa
jmp
movs
and
retf
push
xor
push
dec
mov
aaa
movs
adc
sub
adc
hlt
mov
hlt
std
mov
push
push
mov
out
jb
loop
push
cwde
mov
xor
push
bound
push
push
mov
xchg
jle
cld
push
mov
cwde
movs
lds
ins
fisubr
add
push
dec
sub
push
not
in
xor
or
shr
call
dec
xchg
cs
or
shl
mov
fild
cs
dec
movs
sbb
mov
xchg
pop
or
imul
ds
rol
sbb
mov
fiadd
add
sub
dec
push
lea
sti
dec
sbb
inc
add
mov
dec
add
mov
mov
outs
add
mov
mov
mov
outs
or
jo
add
inc
sub
xor
loop
imul
(bad)
mov
mov
scas
add
or
mov
mov
mov
mov
inc
dec
sbb
adc
push
xor
xchg
xor
shl
rcl
inc
ret
mov
dec
sub
push
pusha
or
sbb
mov
sbb
push
mov
or
in
add
sub
ret
test
or
and
or
mov
shr
add
imul
push
add
loopne
push
jge
inc
mov
adc
pop
or
ret
push
add
xchg
test
push
adc
push
and
dec
fisttp
daa
or
push
aam
mov
pop
cmovle
loope
shr
pop
stos
shr
add
jo
push
sbb
push
or
lock
or
and
out
dec
ret
mov
inc
mov
push
inc
cmp
inc
sbb
mov
in
bound
movs
push
dec
xor
adc
pop
xchg
add
push
dec
sub
cmps
xchg
stos
mov
movs
dec
mov
mov
sub
adc
xchg
test
loope
mov
scas
mov
fidiv
mov
imul
sub
or
push
ins
xor
mov
push
mov
mov
add
imul
sar
push
pusha
rcl
dec
loop
sub
push
nop
sub
mov
test
adc
adc
sub
cmp
add
push
add
pop
sbb
cmps
pushf
jp
cmp
inc
and
imul
xchg
ret
dec
or
ror
inc
ret
dec
inc
xor
cwde
inc
dec
ret
test
and
rol
xor
(bad)
xchg
ror
shr
cmps
mov
xor
jmp
push
dec
jp
add
cmps
sbb
cmps
sbb
cmps
mov
hlt
cmps
mul
and
jp
sbb
xor
pushf
jp
dec
int
adc
rcl
add
or
movs
cmp
mov
dec
jp
mul
mov
and
stc
aad
inc
cmp
push
add
nop
(bad)
push
lds
test
push
outs
jae
bound
ret
mov
shl
push
sub
dec
mov
mov
push
and
sbb
cs
and
sbb
xor
mov
mov
add
ss
fisubr
mov
loopne
add
(bad)
jo
add
mov
or
mov
fsubr
push
sbb
xchg
pop
dec
xchg
arpl
addr16
shl
jmp
in
ds
test
out
mov
push
mov
mov
outs
mov
push
xchg
adc
mov
push
xchg
fwait
sub
add
xor
inc
xor
imul
jbe
push
sub
bound
inc
sub
(bad)
adc
lea
cmp
loopne
adc
push
add
push
mov
xchg
pop
fimul
mov
jnp
add
inc
or
or
cwde
xor
imul
sub
push
sub
cmp
ret
dec
add
ja
mov
push
adc
cmps
pusha
push
lds
sbb
shl
xchg
add
jmp
xchg
(bad)
push
xchg
inc
sub
push
jo
push
mov
push
add
imul
add
sub
out
movs
out
inc
push
enter
pushf
jp
rol
inc
sub
add
leave
cmps
rol
inc
xor
push
xor
jo
add
and
or
inc
cmp
push
ficom
push
bound
aam
aad
int
sbb
cmps
push
test
cmps
add
dec
sbb
ret
push
sbb
cwde
xor
adc
es
dec
or
aam
test
sub
xor
(bad)
xor
mov
xchg
sub
js
jecxz
or
add
cdq
adc
aaa
adc
sub
mul
xor
call
cwde
cmps
xchg
test
sub
dec
mov
mov
ficom
mov
jnp
adc
adc
imul
xor
inc
cmp
inc
sub
and
and
mov
pop
popa
push
aam
ret
or
push
inc
aam
call
and
test
dec
push
int
inc
add
nop
rol
xchg
dec
xor
or
cmps
xchg
xor
shl
xchg
call
pushf
pop
cwde
dec
mov
movs
sub
imul
aam
test
sbb
dec
aam
sub
adc
arpl
xchg
test
cwde
jp
iret
adc
(bad)
cwde
or
(bad)
test
inc
and
jp
mov
(bad)
loop
or
mov
dec
cmp
ret
dec
outs
mov
push
mov
(bad)
mov
ror
movs
xor
int
rol
imul
inc
cmps
loop
lea
imul
ror
sbb
dec
imul
mov
adc
pushf
jg
dec
imul
pop
jp
mov
lea
retf
mov
sub
push
fild
sti
push
jo
in
xor
stos
sbb
inc
(bad)
push
fld
mov
shl
imul
mov
push
mov
mov
shl
sti
push
jo
in
es
gs
repnz
test
mov
imul
ret
xchg
ins
stos
sbb
mov
xchg
addr16
pop
mov
sbb
fidiv
mul
movs
or
jnp
ins
mul
inc
retf
fimul
fsubr
retf
mul
sub
fld
mov
mul
sub
sub
lahf
dec
mov
jle
stc
test
retf
pop
xor
push
jns
aam
add
push
ret
pop
mov
(bad)
ficomp
lea
repnz
test
pop
test
xchg
gs
repnz
test
add
jle
mov
xchg
in
inc
shr
std
test
push
sub
std
test
or
ins
cmps
loopne
(bad)
das
fimul
sub
shl
or
dec
mov
cmps
mov
dec
ja
or
fstp
rol
jnp
mov
mov
sti
cmp
rol
lahf
ins
fild
add
push
hlt
arpl
movs
(bad)
mov
mul
xor
fimul
mov
rcl
mov
mov
push
push
aam
push
mov
ror
imul
dec
push
ins
movs
(bad)
mov
add
imul
mov
mul
or
add
movs
out
push
add
push
pushf
pop
lods
pop
test
adc
push
rol
push
add
sub
mov
xor
popf
hlt
mov
sub
add
or
mov
adc
push
rol
xchg
cmp
push
mov
cmp
lea
cmp
sub
mov
xchg
adc
sub
ficom
mov
nop
clts
xchg
push
sub
imul
leave
xor
inc
clc
sar
enter
jmp
in
adc
push
pop
test
mov
mov
mov
inc
inc
inc
mov
or
xor
fimul
ja
aaa
push
pusha
sbb
mov
inc
adc
adc
cmps
add
adc
mov
fwait
mov
xchg
dec
dec
cmps
add
xchg
dec
es
call
or
shr
xor
call
xor
inc
push
jmp
xor
xor
mov
es
sub
imul
cdq
cmps
xchg
dec
(bad)
cwde
dec
xor
sub
popa
xor
imul
xor
add
cwde
dec
push
inc
sbb
fwait
call
imul
add
mov
lds
add
push
aam
mov
adc
sub
bound
movs
rol
sbb
arpl
cdq
test
cwde
enter
test
xchg
call
mov
fs
or
ja
push
sub
push
enter
shl
xor
imul
mov
push
cmp
mov
push
sbb
adc
dec
push
aam
jecxz
dec
shl
ins
sbb
push
mov
sub
cmps
loop
push
sub
push
in
cmps
add
not
dec
or
or
dec
call
mov
or
inc
dec
xchg
ins
cmps
xchg
adc
sbb
xchg
adc
in
xor
xor
add
fisubr
push
ror
sub
mov
xchg
ds
adc
loop
xchg
cmp
adc
xchg
(bad)
bound
retf
xchg
xor
in
mov
mov
or
in
push
adc
stc
jne
pusha
movs
(bad)
cmp
pop
add
push
les
out
push
test
call
xchg
inc
jge
jae
xchg
cmps
in
in
mov
push
into
ds
(bad)
xchg
push
std
test
mov
mov
fidiv
aam
ret
xchg
into
xor
sbb
mul
sub
inc
and
cdq
xchg
cmp
shl
jnp
sbb
into
xor
jne
pusha
mul
sub
pop
es
leave
cmps
into
sbb
jno
nop
(bad)
pop
ds
xor
inc
cmp
mov
push
loope
addr16
je
pop
push
lahf
cmp
scas
cwde
dec
movs
and
mov
rcl
mov
gs
push
sbb
pop
sub
push
cmp
push
push
jae
mov
cmp
mov
int3
push
sub
jp
in
push
int3
push
sub
mov
mov
pusha
sub
xor
stos
jle
daa
xchg
sub
or
jns
sahf
pop
mov
shl
dec
fsubr
retf
popf
lds
ror
lods
in
movs
sub
lds
pop
sub
dec
(bad)
inc
mov
ins
xor
pop
adc
mov
mov
(bad)
bound
fidiv
shl
xchg
fist
cli
push
mov
mov
js
ins
dec
mov
mov
les
shr
inc
mov
add
mov
fidivr
sbb
call
cmps
or
movs
xor
xor
inc
shr
sub
movs
add
push
add
sub
mov
add
adc
rcl
rcl
add
xchg
push
sbb
push
sub
jne
sbb
ror
out
add
xor
test
add
sbb
and
sub
xor
mov
xor
xchg
push
add
dec
clc
shl
push
jns
mov
xchg
xchg
xor
sub
lahf
jp
jno
fisubr
pop
fwait
xor
lds
(bad)
hlt
pop
push
and
inc
jmp
pop
nop
mov
jp
mov
mov
or
movs
jmp
(bad)
jp
push
pop
xchg
cwde
push
sbb
(bad)
hlt
aam
jb
loop
into
sub
hlt
shl
push
add
rol
mov
xchg
mov
mov
pop
call
mov
pop
xchg
jge
or
(bad)
sub
out
dec
shl
shr
fdivp
test
movs
and
ror
xchg
dec
call
xor
cmps
and
cmps
call
xor
popf
ficomp
cmps
pushf
imul
nop
xor
or
inc
add
xor
movs
push
iret
xor
out
add
mov
movs
pop
xor
inc
push
pusha
push
sub
aad
xchg
sbb
retf
push
xchg
stos
mov
push
(bad)
jb
adc
pop
mov
dec
sub
adc
mov
xchg
out
cmp
push
call
mov
fadd
imul
aam
imul
mov
lods
fiadd
jb
push
mov
jb
push
mov
lea
mov
shl
cmp
ficom
jnp
inc
sti
aad
out
xor
mov
scas
jmp
movs
fist
rol
cmp
ficom
jnp
fst
xchg
mov
in
(bad)
hlt
loopne
push
cmp
push
fdivr
repz
mov
loopne
test
mov
hlt
loopne
dec
dec
out
dec
adc
sbb
push
sub
call
js
xchg
sub
pop
add
test
cmps
lods
mov
sub
test
sahf
and
cmp
mov
ficomp
xchg
sub
sub
scas
and
cmc
movs
cmp
stos
and
xor
and
movs
cmp
jns
repnz
sub
and
push
hlt
mov
dec
sbb
mov
cmp
dec
sbb
mov
outs
es
enter
pop
pop
lods
sbb
jbe
xor
mov
fld
cs
iret
ss
xchg
fidiv
jbe
inc
data16
ficom
xchg
sub
test
push
jg
dec
mov
push
mov
jp
in
add
call
push
sbb
movs
xor
xor
jns
aad
in
dec
inc
add
cmps
in
add
mov
shr
out
sahf
xchg
shr
sti
inc
jnp
and
in
dec
repnz
aam
(bad)
lahf
mov
adc
ror
mov
push
fimul
iret
in
dec
ss
ror
enter
sti
push
mov
cmp
retf
repnz
push
push
mov
cwde
cmp
into
sbb
imul
imul
jnp
xchg
cmp
sbb
xrelease
fwait
in
push
jns
aad
popa
cmps
cwde
jge
repz
aad
popa
mul
pop
sub
jmp
ret
dec
xor
daa
xchg
iret
xor
sbb
stos
stc
xchg
nop
ret
lds
pusha
in
jns
aam
jmp
aam
test
(bad)
ficom
push
jl
push
xchg
retf
push
mov
xor
mov
jnp
in
push
out
adc
jns
rcl
jge
xchg
ins
pop
xor
jns
pop
sub
sub
mov
in
mov
mov
ins
sahf
aam
xor
sub
mov
mov
fidiv
sar
(bad)
movs
fild
les
movs
lds
xchg
adc
rol
movs
cmps
ins
movs
or
add
in
push
bound
push
dec
add
mov
jp
xchg
add
mov
sbb
out
cmps
mov
xor
inc
test
push
outs
xor
or
inc
jmp
shl
add
cmp
pop
xchg
hlt
cmps
pop
push
jp
hlt
in
pop
and
shl
push
xchg
adc
adc
and
xchg
cwde
pop
xchg
jne
mov
aaa
jo
das
jmp
pop
lods
xor
loope
cwde
bswap
mov
mov
imul
hlt
pop
push
and
and
nop
mov
push
dec
jnp
inc
jmp
and
xchg
cmps
xchg
stos
mov
xchg
sahf
cwde
pop
mov
test
cwde
pop
cwde
pop
cwde
pop
popf
cmp
push
imul
jne
mov
xchg
jmp
xor
and
jmp
xchg
inc
adc
movs
test
outs
test
adc
call
mov
pop
xchg
jno
ror
mov
call
int
call
movs
xor
xor
mov
or
and
mov
arpl
xchg
xchg
mov
test
add
mov
push
push
sub
movs
mov
pop
arpl
adc
stos
imul
mov
fsubr
lods
adc
jno
lods
push
cwde
push
aad
mov
mov
dec
call
dec
shl
pop
adc
jge
jb
shl
push
mov
imul
fist
movs
fild
sub
jmp
sbb
push
test
mov
loop
or
sbb
jle
fs
xlat
popf
bound
mov
mov
cs
mov
ror
mov
pop
or
push
mov
push
add
(bad)
xchg
jns
stos
stc
movs
fisttp
pop
push
imul
jne
add
jp
out
push
movs
or
pop
or
dec
ja
push
push
aam
add
aas
mov
inc
xchg
cli
push
daa
mov
cmovnp
loop
jp
mov
sub
cmps
or
jp
jg
pop
mov
dec
adc
aad
(bad)
hlt
loopne
hlt
mov
sti
rol
(bad)
test
movs
adc
repnz
cwde
rcl
push
(bad)
fdivp
pushf
and
movs
adc
jo
xchg
movs
mul
dec
out
dec
adc
pop
pop
and
(bad)
(bad)
hlt
loope
mov
cmp
push
enter
pop
jnp
test
mov
sub
and
sahf
daa
imul
dec
nop
jl
mov
adc
jno
and
jo
cli
aam
xor
call
fidiv
daa
ds
cwde
stc
int
cmp
imul
loope
das
data16
into
adc
push
dec
out
dec
(bad)
cmc
mov
pop
pop
push
jae
dec
fnstenv
(bad)
retf
pop
mov
(bad)
jp
mov
shl
lods
inc
mov
shl
xchg
jmp
xchg
xchg
xor
pop
dec
inc
adc
stos
and
fimul
mov
xchg
ja
inc
push
test
mov
ror
ret
test
cmc
mov
pop
pop
push
dec
or
fisubr
jecxz
mov
inc
out
dec
in
xchg
push
mov
jge
bound
xor
push
jns
hlt
jns
mov
mov
adc
imul
xor
sub
inc
fwait
dec
push
push
cmps
adc
push
sbb
push
jns
ficomp
in
dec
xor
in
and
in
push
inc
jae
xor
push
dec
mov
dec
in
push
inc
jae
and
adc
push
pop
mov
cmp
mov
jns
lods
icebp
inc
adc
add
sub
cmp
jmp
fwait
inc
sbb
mov
(bad)
cmp
mov
movs
and
adc
dec
sub
push
pushf
cmovp
mov
mov
push
int3
imul
dec
cs
sub
jle
fwait
pop
movs
pop
and
dec
cwde
push
sub
adc
adc
ret
jge
fist
nop
test
jno
mov
sub
mov
pop
push
bound
dec
xor
adc
push
(bad)
adc
ficomp
dec
aam
mov
movs
mov
(bad)
pop
cdq
(bad)
mov
xor
cmps
adc
add
jne
stos
and
or
and
inc
jmp
jb
hlt
test
adc
hlt
fwait
xchg
call
jp
add
jae
dec
out
pop
mov
movs
fsubr
mov
cwde
enter
xor
and
adc
xchg
xchg
jns
ja
or
fidivr
mov
mul
call
jbe
leave
retf
ror
pop
movs
sub
cmc
cmps
xchg
xor
jnp
pusha
dec
mov
shr
paddusw
dec
leave
movs
es
and
movs
es
ror
es
inc
xor
imul
rol
dec
add
jmp
popa
or
call
out
xor
cmps
in
mov
jmp
call
xor
xor
hlt
movs
and
mov
fistp
mov
push
add
inc
add
push
add
push
inc
add
pop
inc
int
push
push
add
adc
imul
mov
jbe
sbb
test
sbb
and
xchg
call
movs
movs
es
enter
push
mov
push
shr
xor
ja
adc
lds
add
dec
aam
sub
ficomp
fwait
imul
pop
xchg
sbb
stos
dec
push
lahf
mov
push
cmp
mov
jbe
cs
pushf
cli
ror
lods
xor
xlat
adc
xor
call
xor
rcr
pop
aam
push
xor
stos
cmp
pop
inc
aas
xor
sar
mov
cs
aam
xor
shl
mov
int
or
rcl
dec
mov
xor
add
test
xchg
mov
xor
jp
xor
sti
int
cmp
push
sbb
push
dec
lods
sub
or
loope
fld
mul
aam
lea
mov
inc
push
inc
sbb
xchg
sub
cmps
or
aam
inc
in
and
outs
xor
(bad)
xchg
sub
pop
repz
int3
xor
push
xchg
xchg
dec
inc
push
push
jge
inc
sti
shl
sbb
and
lods
sub
xchg
cs
repz
jns
fucomip
dec
xchg
jl
shr
mul
xor
mul
int
iret
lods
sbb
int3
pop
adc
push
retf
lahf
pop
push
out
sub
add
hlt
mov
int
repz
and
call
aaa
call
(bad)
xor
dec
out
(bad)
out
push
out
stc
xchg
cli
sar
iret
xor
sar
cmps
(bad)
test
std
call
fwait
(bad)
aad
addr16
repz
sub
cmp
jp
ret
jmp
neg
cmp
repz
jge
repz
cdq
cmp
mov
pop
inc
in
cmps
retf
iret
call
aaa
call
jns
stos
outs
xor
xor
test
addr16
ds
std
jmp
hlt
jb
xor
cmc
mov
iret
lods
sbb
pop
fild
push
mov
pop
out
mov
addr16
cs
jecxz
dec
sbb
mov
ds
cli
xchg
test
pop
xchg
jne
jmp
pop
cwde
mov
movs
enter
aaa
push
pusha
mov
out
xchg
xor
cmp
or
xchg
add
lods
push
cwde
pop
inc
imul
or
adc
loop
test
and
xchg
mov
cmp
push
imul
add
test
and
call
or
imul
imul
mul
cmp
test
ror
mov
xchg
dec
dec
push
adc
fdivp
fwait
lea
jecxz
cmp
cmps
adc
inc
xor
loop
or
xchg
fcomp
jns
cmps
in
dec
adc
or
push
outs
out
int
pop
sub
retf
push
data16
call
xor
dec
jae
popf
lods
add
jmp
push
adc
dec
add
cmps
call
pushf
push
dec
push
mov
mov
adc
dec
pop
add
dec
arpl
cmps
xchg
call
xor
stos
inc
sbb
cmps
call
daa
dec
push
movs
xor
or
fwait
inc
xor
pusha
imul
sub
sub
mov
mov
mov
adc
into
mov
add
add
nop
push
add
dec
dec
adc
rol
pop
dec
aam
popa
sub
int
sub
rcr
dec
xor
imul
xor
inc
mov
mov
call
dec
enter
pushf
push
add
xchg
mov
shr
out
sub
cmps
out
rcl
sbb
inc
cmps
pusha
and
sbb
add
fld
dec
int
retf
mov
xor
sbb
add
(bad)
nop
or
fsubr
xor
int
sbb
xchg
sbb
cmps
rcl
call
sbb
and
clc
rcl
cdq
call
mov
add
imul
int
dec
inc
dec
or
mov
sub
adc
mov
or
movs
iret
movs
inc
sub
lods
add
test
inc
movs
pusha
mov
sbb
push
out
or
or
push
imul
jne
mov
fisttp
mov
sbb
jmp
sub
ss
xor
cs
mov
sar
lea
stos
and
mov
inc
push
mov
push
or
adc
lods
rcl
aam
mul
cs
std
(bad)
(bad)
(bad)
cdq
mov
inc
jb
imul
sbb
inc
sub
xchg
dec
lahf
jp
push
out
cmp
out
movs
int
adc
mov
push
sbb
movs
loop
xor
pop
outs
mov
add
sbb
pusha
pop
xor
ficom
jb
xor
push
cmp
mul
add
imul
mov
outs
adc
fwait
mov
add
push
rcr
mov
sub
push
(bad)
add
hlt
mov
sbb
jbe
shl
int3
push
hlt
sbb
inc
mov
push
sbb
movs
sbb
adc
fisubr
inc
imul
xchg
xor
stos
inc
sub
imul
stos
mov
push
add
sbb
adc
gs
lea
adc
or
mov
push
push
add
movs
sbb
movs
and
sub
mov
dec
and
add
xchg
loop
add
nop
out
movs
adc
and
adc
imul
ja
mov
xor
cwde
imul
xor
test
mov
loopne
sahf
inc
xor
adc
imul
rcl
xchg
nop
push
cmp
movs
int
and
xor
ins
push
adc
movs
mov
add
xchg
or
mov
adc
sub
sub
inc
rcl
dec
dec
ror
pop
sub
movs
mov
jmp
jns
cmps
xor
sub
jnp
outs
push
push
sbb
push
jae
push
xchg
ror
unpcklps
inc
dec
or
xchg
rcr
push
aaa
or
inc
dec
jp
lds
and
adc
mov
adc
pop
pop
xchg
inc
jge
xor
pop
jbe
jbe
call
mov
in
sti
shl
cdq
call
xor
mov
mul
lea
xor
sbb
aam
jae
push
(bad)
call
xchg
xor
jmp
add
test
and
bswap
sub
cdq
call
out
fld
add
ja
or
inc
mov
popa
fdivr
mov
pop
cs
call
push
in
lea
aam
movs
push
mov
and
jmp
aaa
sbb
push
jmp
fsubr
aam
test
xchg
push
xchg
xor
mov
fsubr
pushf
xor
movs
or
cs
fwait
jno
xor
lods
add
movs
cld
push
aam
test
adc
aam
test
xchg
and
imul
aam
movs
pusha
and
push
outs
mov
aam
test
cdq
movs
test
pop
jp
aam
or
jae
out
movs
or
mov
xor
sbb
sub
add
sub
add
cmp
mov
ror
adc
mov
mov
nop
or
dec
pop
xor
ja
or
dec
shl
push
sub
in
push
test
and
mov
or
ins
adc
push
mov
inc
pop
sbb
mov
cmp
adc
fidiv
push
mov
push
movs
fisttp
mov
push
in
mov
mov
movs
fild
les
and
movs
fisttp
mov
adc
shl
add
sub
movs
sub
push
sub
xor
cmp
push
adc
pop
test
dec
sub
and
inc
xor
mov
adc
sub
test
and
add
imul
test
les
dec
inc
dec
or
or
nop
lods
cmp
and
add
adc
ficomp
xor
dec
mov
sbb
mov
(bad)
nop
lods
cmp
inc
dec
inc
mov
movs
and
xchg
mov
push
mov
pushf
dec
mov
rol
xchg
(bad)
rcl
sbb
dec
sub
xchg
xchg
call
icebp
dec
out
dec
add
xchg
popf
call
dec
pushf
rol
and
mov
push
rcl
mov
mov
add
mov
add
sub
add
mov
xchg
mov
jae
add
cmps
or
jecxz
mov
sbb
jp
adc
hlt
mov
dec
mov
dec
jae
sbb
push
dec
xor
pusha
imul
add
xchg
cmps
add
xchg
inc
xchg
adc
adc
xor
in
imul
pop
cs
or
test
pop
or
sub
int3
cmovp
int
mov
mov
movs
int
shl
imul
imul
out
aam
out
mov
cmps
add
add
mov
sub
in
rcr
add
and
rol
sub
int
jno
or
ds
rol
leave
movs
fisttp
mov
int
lahf
push
sti
rcl
pop
dec
call
int
cmps
data16
add
aam
movs
iret
mov
ja
push
je
lea
add
adc
test
jnp
call
test
mov
int
iret
lods
sbb
xor
mov
mov
sub
aam
mov
aam
aam
movs
fld
fwait
xor
test
imul
pop
xor
mov
out
jno
mov
rol
xchg
xor
rol
pop
shr
xor
rcl
out
fdivp
xchg
aam
test
push
mov
pop
(bad)
mov
sbb
sbb
add
push
cmc
or
aam
add
test
shr
mov
shl
mov
push
or
xchg
xor
jmp
leave
adc
or
jb
imul
aam
add
shl
xor
pop
xchg
sbb
dec
ret
push
cmp
test
sbb
pushf
sub
xchg
or
fisub
add
aam
xor
mov
inc
ficomp
pop
xchg
sub
mov
sub
mov
inc
fild
sbb
lods
push
xchg
ins
pop
fstp
mov
sub
pop
mov
shl
gs
movs
pop
xor
dec
je
sub
mov
ret
sbb
push
dec
sub
push
or
dec
inc
inc
pop
popa
pop
mov
dec
fs
dec
dec
adc
imul
sub
sub
lds
ins
pop
sub
jno
xchg
cmps
in
test
mov
dec
aam
movs
fisttp
push
call
and
sub
test
jo
mov
push
inc
sub
hlt
cmps
xchg
call
xchg
mov
out
imul
xor
ficomp
push
int
rcl
ror
dec
xor
dec
imul
add
push
dec
cmps
adc
les
inc
sub
rol
and
test
or
lahf
push
add
cmp
mov
call
lea
push
inc
adc
push
inc
sbb
mov
dec
sub
sub
cld
push
adc
add
cmpps
push
inc
add
adc
popf
inc
add
jno
jno
ret
sbb
mov
sub
mov
test
jno
not
mov
and
jge
rcl
cmp
sbb
imul
(bad)
jb
cmps
nop
adc
xchg
xor
shr
aam
pushf
rol
or
call
aad
mov
sub
mov
sub
adc
add
inc
daa
xor
or
xor
inc
shr
rcl
imul
or
popa
jno
push
add
adc
sub
mov
sub
mov
pop
adc
adc
mov
call
mov
push
dec
dec
call
call
sub
sub
add
xor
cmps
in
pushf
rol
(bad)
xor
cwde
or
call
repnz
movs
add
jmp
cmps
sbb
hlt
cmps
xchg
xor
pop
sbb
sub
push
rcl
or
dec
xor
aas
daa
ror
pusha
push
sbb
inc
push
add
adc
cdq
call
sbb
dec
int
rol
test
mov
xchg
xchg
and
aaa
bound
movs
push
cdq
(bad)
xor
xor
xor
shl
dec
call
push
cmp
push
imul
push
imul
or
sbb
jge
push
bound
test
sbb
xor
inc
dec
push
mov
and
pushf
sub
lds
push
mov
sub
fwait
or
cli
push
lds
jge
loopne
xor
push
and
add
loopne
movs
popa
mov
mov
imul
ficom
and
push
sbb
test
pop
jbe
repnz
pop
pop
shl
(bad)
dec
push
xchg
stc
adc
je
movs
sub
push
sub
cmp
mov
shr
pop
xchg
sub
push
(bad)
dec
lea
fwait
das
mov
leave
push
sbb
xor
leave
dec
sub
je
xchg
push
adc
push
daa
mov
movs
xor
bound
(bad)
ficom
pop
lods
mov
scas
xor
lods
ds
mov
ins
and
push
call
pop
cwde
lods
and
add
mov
sub
shl
push
lds
push
jo
shl
adc
and
dec
mov
sbb
movs
and
xor
push
call
and
ret
push
into
imul
call
call
shl
xchg
adc
rcl
(bad)
cld
test
sub
mov
cmps
pusha
rol
loop
sbb
or
dec
dec
add
mov
mov
add
mov
mov
sub
mov
sub
push
inc
add
adc
inc
push
add
or
add
adc
cmovp
inc
cmp
add
imul
cmp
out
xor
adc
nop
mov
inc
cmp
sub
ins
cmps
add
retf
aam
xchg
dec
push
and
movs
mov
rol
dec
sub
add
movs
lds
mov
adc
movs
cmp
xor
rcl
sbb
sub
xchg
push
loop
jp
sub
cld
sub
pushf
cli
ror
cs
out
dec
or
dec
mov
inc
ror
cli
shl
adc
rcl
and
add
inc
sub
push
add
adc
rol
sub
sub
jno
and
dec
sub
imul
fldenv
mov
imul
lods
add
xchg
xor
jbe
sbb
add
adc
add
ror
add
iret
xor
imul
xor
mov
jno
nop
push
pusha
rcl
mov
or
xor
movs
xor
push
add
add
pushf
or
xchg
push
mov
add
call
sbb
cmps
or
mov
dec
or
cmp
sub
mov
lock
popa
fcom
jp
mov
mov
cmp
push
sbb
xor
aad
xor
mov
xor
push
dec
push
push
sub
cmp
push
(bad)
sahf
or
(bad)
movs
sbb
mov
rol
xchg
aam
dec
adc
sub
dec
or
mov
gs
pop
sub
xchg
jae
and
and
xchg
mov
cbw
ret
fisub
push
fs
add
inc
inc
loop
xor
xchg
mov
mov
dec
xchg
mov
mov
or
sub
add
xchg
add
push
and
mov
lds
push
jno
test
dec
cmps
sbb
inc
push
call
test
fs
dec
test
add
aam
xor
xor
xor
call
dec
push
xor
or
dec
cmp
imul
or
adc
nop
xchg
call
dec
add
jecxz
nop
loop
or
movs
cmp
sub
sub
mov
shl
ror
cld
sub
add
dec
rcl
dec
push
mul
push
push
mov
shl
ror
adc
dec
pop
dec
cmp
add
mov
add
jp
inc
add
inc
add
mov
adc
push
inc
adc
push
inc
adc
push
mul
mov
cmp
inc
adc
shr
lds
nop
mov
or
push
cwde
(bad)
adc
movs
and
pushf
add
xchg
push
adc
inc
jb
add
cmp
jno
(bad)
mov
cmp
pop
test
adc
sbb
mov
cmps
in
movs
add
push
retf
pop
add
xor
lds
adc
jnp
mov
mov
mov
xor
mov
rcl
and
sub
enter
clc
mov
push
test
mov
jmp
dec
lds
fcomp
xor
sbb
xor
imul
push
mov
adc
mov
push
mov
push
cmp
mov
push
adc
jle
mov
sub
push
xchg
or
mov
mov
inc
add
ds
rcl
pusha
pop
lahf
pop
cmp
sbb
movs
xor
pop
mov
jbe
nop
or
lods
add
pop
shl
movs
movs
adc
or
imul
imul
adc
call
push
imul
sbb
mov
push
push
imul
push
or
icebp
dec
arpl
dec
adc
es
or
rcl
jmp
mov
pushfw
or
inc
call
rcl
pushf
sub
or
loop
sbb
xor
aad
cmps
mov
sbb
sub
push
pushf
cmp
aam
rol
out
call
push
sub
adc
loop
call
adc
lea
mov
mov
(bad)
mov
cwde
(bad)
pop
aam
aad
mov
cmps
xor
mov
int
test
dec
stos
dec
nop
bound
movs
rcr
ss
cmps
adc
cmps
popa
pop
jns
push
dec
mov
dec
push
and
mov
shl
sahf
cwde
iret
push
xchg
cmps
pop
cmps
pusha
mov
push
dec
cmc
sbb
push
mov
inc
jmp
xchg
pop
cmps
pop
test
ror
shl
imul
jbe
xor
bound
ror
pop
fisub
fmul
mov
outs
adc
dec
ret
sub
outs
mov
mov
add
mov
xor
jle
call
nop
push
ins
adc
jecxz
push
dec
cmps
sar
xor
loope
loop
add
dec
call
lods
add
add
push
xchg
xchg
mov
sub
sbb
or
mov
or
mov
adc
jbe
mov
inc
add
sub
mov
adc
sub
add
or
dec
push
lea
sub
add
xchg
or
add
inc
adc
pop
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
ds
add
add
add
add
movups
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
sub
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
bndldx
cli
add
cmps
cli
add
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cmps
cli
sbb
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
jnp
cmps
cli
sbb
cli
test
cmps
cli
sub
cmps
cli
adc
cmps
cli
jl
cmps
cli
pop
sbb
add
add
add
sbb
cli
or
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
cmp
cmps
sti
rcr
cmps
sti
dec
sbb
cli
lea
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
xor
cmps
cli
jbe
cmps
cli
inc
sbb
cld
mov
push
cdq
loop
sbb
cld
retf
sbb
cli
adc
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
dec
sbb
cld
mov
cmp
sbb
sar
sbb
cmps
cli
int3
sbb
cli
push
sbb
add
sbb
cli
add
test
dec
sbb
lock
push
xchg
inc
sub
jmp
inc
dec
and
aas
push
or
and
std
jae
cmps
cli
push
sbb
add
sbb
cli
pusha
sbb
cld
mov
jae
dec
cmp
jnp
(bad)
clc
div
push
and
cmc
xor
outs
sbb
cli
sbb
sbb
cli
pop
sbb
cli
sbb
cwde
dec
cmp
test
(bad)
(bad)
(bad)
(bad)
mov
and
cmc
xor
je
stos
push
sbb
cli
daa
add
add
sbb
cli
push
sbb
bnd
push
or
dec
das
pop
push
push
call
sub
ret
and
dec
cmps
cli
add
cmps
cli
add
add
add
cmps
cli
add
cmps
cli
or
sbb
std
jge
js
inc
cmp
sbb
ret
cmp
adc
sbb
cli
rcr
cmps
cli
push
sbb
cli
add
cmps
cli
add
cmps
cli
cmp
cmps
cli
push
sbb
cli
inc
sbb
cmc
push
push
cwde
loope
sbb
std
mov
sbb
cli
jne
cmps
cli
xor
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
mov
cmps
cli
mov
cmps
cli
dec
sbb
sti
cmp
cmps
cli
mov
cmps
cli
pop
sbb
cli
add
cmps
cli
or
cmps
cli
add
add
add
add
add
cmps
cli
add
cmps
cli
push
sbb
cli
adc
cmps
cli
sub
cmps
cli
test
sbb
cli
jl
cmps
cli
add
sbb
cli
pop
sbb
cli
add
cmps
cli
adc
cmps
cli
ins
sbb
cli
add
cmps
cli
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
pop
sbb
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
cmps
cli
add
dec
add
loopne
add
loopne
add
adc
add
add
add
push
add
rol
add
add
add
adc
add
push
add
in
add
in
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
mov
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
sub
add
loope
or
js
data16
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sub
add
add
add
add
add
xor
add
add
sbb
add
jle
xor
add
add
adc
add
call
add
add
add
xchg
add
add
add
add
scas
add
add
add
add
add
add
add
sub
add
add
outs
bound
push
push
push
push
xor
push
imul
xor
xor
cmp
cmp
xor
and
xor
xor
cmp
xor
add
nop
add
pop
add
add
xor
xor
add
adc
add
or
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
pusha
add
mov
add
add
or
add
add
add
xor
cmp
xor
cmp
cmp
xor
cmp
cmp
xor
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
add
add
add
mov
add
add
add
dec
add
add
add
add
add
add
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
in
add
outs
bound
inc
dec
add
(bad)
out
add
inc
outs
bound
add
add
(bad)
fild
test
or
or
or
or
or
or
or
adc
adc
adc
sbb
or
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
adc
push
push
adc
push
push
push
push
adc
or
or
or
adc
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
add
or
js
mov
add
add
adc
(bad)
fld
add
or
les
aas
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
adc
add
and
xor
adc
mov
adc
xor
adc
pop
and
icebp
arpl
push
mov
xchg
push
fs
ret
ss
rcl
gs
ret
shl
repz
daa
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
adc
add
add
add
add
add
adc
and
adc
push
popa
jno
adc
mov
push
shl
xor
loope
adc
xor
and
add
xor
push
mov
ss
loop
mov
ret
shl
repz
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
daa
aaa
inc
push
addr16
xchg
cmps
mov
(bad)
fiadd
or
add
add
add
add
add
xor
aad
sub
pop
dec
in
lods
adc
adc
fld
sub
out
mov
idiv
mov
mov
lods
inc
cmp
add
ins
inc
cmc
movs
jno
sbb
cmps
test
aas
mov
xor
xchg
or
ds
inc
stc
mov
dec
icebp
or
jmp
push
out
pop
ins
aas
pop
or
cwde
scas
push
push
loop
or
jns
btc
cld
adc
iret
and
push
jmp
or
int
mov
xchg
test
push
std
loop
jge
jno
shl
scas
mov
mov
mov
adc
ss
push
lahf
and
push
add
push
movs
clc
add
pop
push
lods
push
mov
mov
inc
test
jne
out
sub
add
dec
fnstcw
inc
test
push
jg
mov
xchg
out
mov
dec
aam
jne
dec
fs
and
add
sub
cwde
sbb
mov
and
cmp
cs
(bad)
inc
test
sahf
retf
sub
add
rcr
mov
pop
jecxz
xchg
inc
or
add
fcmovbe
mov
add
adc
mov
jmp
inc
cld
addr16
xchg
inc
mov
cld
dec
adc
imul
lea
xchg
add
fs
scas
fs
mov
pop
neg
xlat
push
inc
pop
(bad)
pop
mov
rcl
jecxz
aad
into
stos
dec
fsubrp
popa
(bad)
jbe
cld
scas
imul
cmps
es
cs
mov
cli
pop
dec
and
sub
or
mov
rcr
mov
ror
inc
shr
rol
mov
add
push
(bad)
jnp
push
cmp
cmp
push
icebp
xchg
pop
push
aaa
jg
mov
inc
add
or
sbb
jo
(bad)
or
clc
and
inc
jle
mov
mov
sti
repnz
inc
aaa
ud2
pop
clc
xchg
pop
pop
xor
xor
ins
js
iret
push
(bad)
cld
not
popf
(bad)
mov
jae
push
mov
imul
jbe
adc
in
lea
push
cwde
cmp
or
dec
add
lods
jo
fild
mov
sbb
shl
xlat
sub
test
jmp
test
add
jmp
rol
scas
mov
mov
(bad)
mov
push
sar
mov
sub
imul
(bad)
xchg
or
jecxz
xchg
add
add
fwait
or
jo
pop
fcomip
jne
mov
pushf
pop
pop
cli
xchg
enter
daa
sbb
out
aad
imul
arpl
fbld
aas
loope
in
mov
test
ficomp
out
aas
mov
scas
cld
daa
cld
daa
call
xchg
xor
stos
mov
aaa
idiv
retf
idiv
bound
stos
imul
push
mov
inc
fadd
bound
mov
sar
fld
icebp
and
jg
call
jg
jg
jb
or
or
inc
mov
ret
mov
je
rep
outs
out
add
jg
aas
call
leave
xchg
push
inc
ss
add
push
call
(bad)
int
fistp
dec
add
push
(bad)
int
jmp
call
mov
stos
icebp
lahf
mov
pop
stos
inc
dec
aam
or
pop
fimul
adc
ins
shr
cwde
push
loop
jo
lea
add
pop
cwde
sbb
or
ds
icebp
fsubr
inc
pop
popf
ss
pop
sti
mov
add
push
int
stos
cwde
cmp
es
jmp
xor
(bad)
xchg
add
call
leave
inc
dec
push
std
jns
loopne
or
gs
je
push
jnp
mov
inc
sub
mov
imul
mov
pop
cmp
cwde
jmp
mov
in
mov
mov
jbe
xchg
aaa
adc
mov
mov
inc
scas
lods
jecxz
in
lea
sbb
jo
jmp
lods
scas
fld
idiv
xchg
outs
push
mov
(bad)
stos
fadd
fistp
push
out
iret
push
mov
xor
push
cmp
mov
sbb
sbb
loope
sar
in
adc
jae
sub
in
or
jge
mov
mov
lahf
movs
mov
cmc
out
(bad)
addr16
dec
xchg
add
cli
xchg
xor
lods
popa
enter
sbb
aam
scas
sti
imul
pop
(bad)
enter
cmp
fnstenv
dec
cli
das
jg
mov
fwait
lods
(bad)
ja
shl
xchg
sbb
ins
std
stos
outs
dec
outs
inc
jmp
pop
or
ret
ins
sahf
mov
cmps
aad
aas
movs
jmp
inc
int3
sub
loop
pop
jmp
aaa
cmp
xor
out
push
mov
pop
cmp
addr16
jge
lods
inc
mov
pop
ja
pop
xor
cmc
(bad)
pop
enter
ja
push
mov
jmp
jmp
jne
mov
iret
push
cs
cs
push
mov
imul
shr
fst
mov
repnz
jne
int
xchg
sar
push
arpl
out
add
mov
out
adc
xchg
aas
mov
push
das
pusha
xchg
xor
mov
inc
pop
push
cld
and
add
add
add
add
pop
cdq
stc
cs
test
mov
das
add
mov
je
mov
push
inc
lock
xchg
xchg
dec
pop
enter
comiss
cmp
add
cwde
arpl
cmp
stos
mov
int
ins
mov
clc
push
test
aaa
push
jmp
fimul
shr
mov
and
(bad)
cli
mov
pop
mov
pop
jge
sbb
hlt
pop
aas
xor
jbe
jo
add
add
or
xchg
call
daa
add
loopne
shr
pop
(bad)
js
aas
cmc
int
sbb
sbb
stos
fsubr
fwait
jmp
lock
pop
outs
dec
imul
jecxz
xchg
iretw
hlt
push
int3
or
jge
retf
neg
mov
sub
mov
sub
dec
div
fisttp
std
stos
mov
pop
mov
daa
mov
cdq
aaa
cmc
and
mov
mov
in
scas
pop
arpl
scas
retf
sub
sbb
hlt
stos
(bad)
push
(bad)
or
arpl
mov
pushf
lea
cmps
movs
imul
test
and
pop
pop
popf
mov
pop
mov
mov
lods
cmps
cmc
pop
punpckhwd
fcmovbe
popa
fisubr
movs
out
sub
loop
or
mov
ss
push
pop
not
ds
je
mov
fstp
pop
mov
stos
fdivrp
lods
imul
loope
fnstenv
xor
jmp
sar
inc
inc
movs
pop
jmp
sti
xor
mov
push
cmp
(bad)
inc
xor
aas
lock
lds
sub
xlat
xor
sti
pop
jnp
sbb
frstor
mov
gs
add
test
pop
push
mov
leave
jbe
aaa
cli
jns
xchg
aaa
jp
fnstcw
lock
(bad)
fidivr
loopne
es
add
pushf
aam
adc
mov
mov
jae
xchg
retf
movs
popf
push
sbb
outs
push
xor
cmp
jnp
dec
jnp
std
gs
lock
pop
ss
(bad)
pop
outs
hlt
shl
in
ins
pop
add
mov
cmp
cli
nop
mov
mov
test
push
dec
xchg
mov
cmps
mov
inc
and
inc
loope
jecxz
mov
jmp
jbe
push
(bad)
int
jbe
mov
sbb
push
dec
inc
ss
js
outs
movs
sub
xchg
fist
mov
not
iret
call
outs
mov
test
pusha
jmp
aaa
xlat
fild
jno
imul
mov
(bad)
push
fild
mov
cmps
nop
inc
jb
sbb
outs
shl
mov
jp
icebp
pop
jg
push
mov
ficomp
(bad)
cmc
push
pop
jae
test
sub
cmc
jp
mov
jbe
mov
cmp
ss
jg
xchg
mov
sbb
shl
outs
jmp
pushf
jno
or
mov
xor
pop
jle
xor
idiv
fist
mov
adc
sbb
je
and
fcom
rcl
add
adc
inc
add
xor
lahf
cmp
movs
xor
aas
test
pop
pop
div
mov
pop
pop
pop
lods
mov
imul
out
inc
lods
xlat
(bad)
in
mov
es
bound
loop
pop
rcr
push
jnp
jmp
pop
xor
dec
(bad)
icebp
icebp
call
cmp
xlat
test
ins
adc
retf
pop
out
arpl
std
pop
arpl
or
and
lods
push
cmp
jae
mov
mov
cmp
fldl2t
fstp
ss
aas
dec
mov
pop
jmp
enter
pusha
jmp
out
cs
pop
mov
fstp
std
pop
jmp
dec
mov
in
push
mov
mov
mov
div
fisubr
lahf
movs
idiv
add
cli
xor
pop
mov
test
lea
sbb
xchg
stc
aad
hlt
pop
aas
lea
in
or
push
(bad)
pop
pop
add
arpl
out
ss
out
idiv
push
in
push
inc
push
test
inc
cmp
sub
jbe
(bad)
xor
rol
cmp
add
add
inc
jle
pop
outs
push
sbb
std
and
gs
pop
sub
add
imul
mov
inc
sbb
add
lods
xor
sub
rcl
mov
push
gs
sbb
aaa
jmp
je
call
sub
enter
inc
lods
cli
das
jmp
mov
aaa
shr
sar
adc
cmp
gs
(bad)
cmp
add
jnp
ja
mov
pop
fdivr
sbb
jmp
addr16
push
fistp
test
(bad)
hlt
call
push
or
scas
lahf
sar
ret
outs
jne
cmps
out
push
mov
mov
fnstenv
cmps
inc
out
ins
fldcw
mov
jne
arpl
xor
ins
jne
addr16
out
clc
ins
jne
and
div
pop
ret
mov
stos
adc
sub
cmp
dec
(bad)
addr16
add
xor
je
cmp
rol
sti
mov
xchg
mov
push
jmp
call
inc
push
retf
aaa
das
xor
sahf
sub
inc
mov
sbb
dec
pop
jmp
(bad)
xor
push
int
std
add
lahf
movs
push
mov
xlat
out
in
retf
std
sbb
inc
ds
lea
test
movs
jle
cld
cli
cmp
gs
leave
hlt
test
add
jmp
fwait
push
jle
add
test
ds
mov
popa
fcmovu
dec
(bad)
shl
add
stos
scas
jg
std
mov
and
fdivrp
add
mov
cmps
mov
test
(bad)
mov
imul
xchg
retf
sub
jmp
cmp
(bad)
icebp
inc
bound
(bad)
sub
mov
jbe
mov
inc
lock
sub
push
in
cli
imul
cmc
ins
cmp
sub
movs
aad
loop
lds
push
jmp
pop
in
gs
out
std
daa
movs
retf
aas
inc
mov
mov
cmp
retf
mov
sbb
dec
add
stos
je
mov
pop
adc
pop
das
retf
jge
popa
jae
aas
in
jbe
(bad)
in
imul
mov
jnp
mul
jecxz
sbb
js
hlt
push
repz
xlat
dec
fdiv
mov
mov
mov
cmp
into
dec
mov
(bad)
pop
sti
iret
test
add
es
pop
ds
imul
aad
das
dec
mov
fistp
outs
dec
stos
mov
sti
sub
(bad)
fwait
sub
xchg
cli
sub
das
jnp
out
std
idiv
jae
push
jmp
jecxz
jne
scas
imul
xor
aas
lahf
movs
lods
js
jmp
mov
fisubr
and
mov
lock
stos
and
sub
gs
xchg
out
sbb
xchg
dec
xchg
mov
arpl
iret
jg
dec
push
dec
xchg
xor
ja
mov
aam
lock
(bad)
sub
dec
jge
movs
mov
mov
mov
popa
scas
retf
mov
mov
jno
jmp
in
stos
ja
(bad)
pop
sub
stos
hlt
cs
push
or
cmp
pop
pop
pop
test
inc
loopne
inc
mov
push
inc
fstp
push
imul
dec
xchg
add
mov
xchg
inc
loopne
mov
push
mov
std
mov
add
call
out
mov
xlat
pop
frstor
xlat
loope
loope
aam
fld
fadd
ficomp
in
std
xor
scas
lods
test
mov
cmps
jae
mov
inc
push
shr
leave
arpl
aaa
aaa
addr16
jp
dec
rol
xor
jecxz
push
lods
jnp
push
xchg
stc
jmp
xor
cmp
fdiv
sbb
popa
imul
scas
in
pop
(bad)
mov
push
push
jecxz
pusha
jo
mov
fs
cdq
push
lods
shl
jle
repz
iret
gs
cli
dec
je
scas
or
imul
add
sahf
daa
shl
jne
mov
pop
(bad)
push
(bad)
stos
js
pop
push
pushf
popa
lea
push
mov
mov
jae
enter
arpl
mov
scas
jge
fucomi
hlt
aad
xchg
sbb
pop
mov
mov
inc
cmp
std
sub
adc
(bad)
fadd
xor
xchg
mov
jle
rcr
retf
mov
sub
jne
pop
cld
fnsave
and
lods
pop
mov
aaa
push
ror
mov
sbb
inc
add
daa
add
add
jg
aam
xor
out
cs
mov
ins
add
(bad)
loopne
push
dec
sub
(bad)
cmp
cdq
jns
in
fwait
sbb
push
movs
pop
outs
arpl
nop
jmp
outs
inc
hlt
pop
movs
inc
mov
lea
cmp
mov
fcom
mov
pop
mov
(bad)
neg
cmp
cmp
inc
jbe
pop
cwde
aaa
cmp
jnp
cdq
cmp
jne
(bad)
aam
pop
(bad)
leave
mov
pop
xchg
sub
mov
dec
mov
outs
mov
pop
add
mov
fisttp
stc
stc
psubsb
aam
(bad)
(bad)
in
pusha
push
mov
aas
cmp
adc
pop
cli
inc
or
cmp
(bad)
mov
lods
mov
out
jns
inc
cmp
mov
mov
sbb
es
pop
popf
f2xm1
retf
adc
outs
addr16
ficomp
lods
mov
nop
sub
push
(bad)
xchg
cli
jbe
cmp
and
dec
jmp
add
xor
push
scas
out
mov
das
(bad)
jbe
div
in
outs
push
(bad)
pop
pop
mov
add
add
jnp
in
(bad)
ins
push
fcomip
push
es
in
(bad)
sti
pop
(bad)
mov
push
fimul
dec
clc
cmp
mov
inc
shld
mov
and
(bad)
clc
fstp
jne
retf
xchg
fistp
xchg
out
push
data16
ss
push
imul
jg
jg
aad
repz
retf
into
jmp
inc
dec
cmps
xchg
push
fist
mov
mov
stos
mov
daa
and
shr
fcomip
fs
mov
dec
fist
scas
adc
add
aas
aas
shl
imul
xor
adc
outs
jmp
fiadd
pop
jae
xchg
xchg
arpl
mov
aas
stc
stos
push
adc
dec
push
addr16
(bad)
pop
ror
mov
icebp
xchg
lock
leave
lods
aad
adc
imul
retf
sub
xchg
xchg
sbb
cmc
ds
mov
addr16
mov
stos
test
or
push
retf
jle
icebp
(bad)
(bad)
mov
dec
mov
fistp
ja
call
(bad)
enter
mov
or
or
inc
cld
das
test
shl
cmp
xchg
(bad)
(bad)
into
mov
or
cmp
mov
loope
cwde
pop
iret
addr16
xor
mov
arpl
mov
rcr
(bad)
mov
lods
mov
loopne
imul
pop
or
(bad)
ja
inc
mov
(bad)
(bad)
jno
test
sub
(bad)
mov
je
cmps
mov
sbb
iret
hlt
mov
jnp
add
dec
mov
inc
loopne
pop
pop
xlat
jp
ds
out
addr16
sub
inc
mov
mov
jecxz
cmps
std
mov
pop
pop
push
push
pop
sbb
ins
xor
cmps
gs
fmul
mov
inc
push
mov
sbb
xor
dec
sahf
idiv
jp
xlat
repz
icebp
mov
mov
cmps
push
sti
push
fwait
stos
ja
in
std
adc
jbe
push
push
xlat
mov
test
inc
sahf
in
lods
scas
inc
mov
xchg
int
lods
jbe
mov
neg
lahf
dec
sbb
ds
stc
xchg
and
outs
mov
jmp
arpl
push
cdq
lahf
addr16
fdiv
xchg
outs
shl
sbb
ins
hlt
mov
mov
dec
ins
or
not
(bad)
cwde
div
push
cli
jmp
shl
push
fwait
push
rcl
pop
sti
lods
cld
stos
inc
jmp
out
sbb
add
mov
test
bnd
pop
xchg
cmp
cmp
pop
cwde
adc
jnp
call
repz
fidivr
inc
dec
jmp
mov
dec
mov
jp
imul
jno
in
or
pop
iret
mov
add
xor
xchg
ins
imul
stos
addr16
xor
outs
js
dec
in
mov
pop
mov
sub
out
pop
mov
mov
pop
(bad)
stc
stos
je
pusha
jmp
adc
loope
lahf
in
hlt
xchg
xor
sbb
and
nop
scas
shr
mov
es
sbb
(bad)
outs
xchg
mov
sbb
mov
pop
cld
loopne
jg
cmp
(bad)
mov
mov
mov
fistp
ss
pop
jge
ss
cmc
pop
push
div
push
test
leave
mov
aam
mov
fpatan
inc
ja
iret
jge
mov
add
push
sub
adc
sub
aas
push
call
xchg
idiv
jle
out
sbb
shr
or
div
jmp
in
mov
pop
jmp
jnp
(bad)
mov
outs
outs
repnz
adc
mov
fdiv
pushf
fcomip
inc
mov
mov
sbb
inc
rcr
inc
sub
out
add
cmp
ficom
out
inc
call
repnz
xchg
dec
and
push
xchg
cmps
dec
and
push
jmp
xchg
fs
push
jmp
and
dec
dec
dec
and
push
xchg
dec
and
inc
(bad)
fcos
fild
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
push
push
pop
or
push
pop
or
push
push
or
or
or
or
or
or
or
or
or
or
fild
inc
add
add
add
add
pop
push
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
add
or
push
cmp
add
add
adc
add
add
les
push
add
add
add
add
add
add
push
pop
or
or
les
adc
add
add
or
add
add
add
add
push
adc
and
adc
inc
or
push
adc
popa
jno
and
inc
xchg
mov
xor
rcl
sbb
push
jb
and
xchg
mov
mov
rcl
aam
icebp
daa
xor
test
sub
push
push
xchg
test
aad
inc
dec
push
pop
je
xchg
mov
pop
jne
movs
mov
jecxz
inc
add
add
add
add
add
add
add
add
push
pop
or
les
pop
adc
add
add
push
add
add
add
adc
push
adc
and
jno
xchg
mov
rcl
pop
adc
xor
push
mov
xor
push
arpl
and
inc
xchg
shl
mov
repnz
fiadd
or
add
add
add
add
add
jmp
out
inc
dec
xor
mov
ret
jae
fisub
lds
sub
pop
jne
or
cdq
stc
mov
fnstcw
enter
rcl
inc
add
or
xlat
add
mov
sub
dec
pop
fsub
xor
mov
cmc
mov
pop
adc
and
cmp
repz
je
sbb
jle
sub
or
bound
and
bswap
dec
fdivr
and
stc
inc
ins
(bad)
sbb
xchg
add
je
or
xor
xchg
in
inc
ror
dec
sbb
inc
fdiv
or
fild
add
lds
addr16
inc
imul
xchg
das
push
and
fdiv
and
dec
stos
mov
ds
cmps
adc
cmp
rcr
cwde
xchg
sub
dec
push
push
mov
scas
xchg
es
add
and
mov
and
enter
imul
es
xchg
ds
adc
fcom
adc
mov
push
jecxz
cmp
sbb
inc
adc
ret
mov
ror
xor
or
adc
enter
sub
mov
enter
pop
pop
xchg
sbb
adc
fcom
ret
pop
sbb
ins
jmp
add
repnz
adc
xor
mov
push
outs
dec
retf
or
cmc
mov
xor
xchg
aas
call
mov
clc
sub
cmp
adc
xlat
cmps
mov
add
jmp
or
xchg
cs
mov
mov
add
and
inc
add
mov
push
dec
ret
xchg
bound
push
data16
push
jmp
mov
pop
jg
cmp
mov
(bad)
adc
pop
iret
ins
cli
sbb
out
pop
aas
xchg
sbb
retf
add
or
mov
pop
push
xchg
mov
add
inc
fst
or
push
shl
adc
and
adc
xchg
pop
cmp
iret
retf
inc
mov
add
ja
or
cmps
adc
mov
mov
cmp
shl
xor
xchg
adc
cwde
popa
mov
mov
mov
mov
or
mov
fsub
aam
cmps
adc
add
mov
inc
inc
movs
mov
add
leave
mov
xor
loope
(bad)
inc
aaa
or
repnz
inc
mov
imul
pop
inc
lods
ret
inc
iret
dec
out
cwde
test
gs
fcom
loopne
je
js
arpl
retf
and
adc
adc
dec
add
inc
fstp
jne
pop
je
bound
mov
leave
and
push
xchg
pusha
dec
sub
lods
sub
add
je
bound
xchg
out
jp
test
dec
mov
or
and
pushf
(bad)
data16
call
sub
mov
mov
mov
retf
jp
movs
mov
inc
add
push
daa
sbb
loope
sub
retf
push
nop
imul
mov
pop
popa
jns
cmp
nop
in
ror
cmp
or
cmp
pop
pop
xchg
imul
repz
dec
clc
(bad)
sub
mov
bound
movs
ss
fisttp
in
(bad)
neg
dec
cli
inc
daa
add
xchg
jp
ss
idiv
add
jmp
and
cmp
cmp
adc
mov
imul
and
aad
adc
adc
push
sbb
mov
aas
pop
adc
and
push
(bad)
xchg
push
xchg
xlat
mov
add
sar
dec
jecxz
sbb
pop
xor
jo
into
adc
pop
sbb
jecxz
fst
mov
add
addps
inc
or
xchg
sahf
shr
jne
leave
sbb
xchg
je
xor
inc
leave
fldlg2
or
lahf
cmp
mov
stc
sbb
sub
hlt
add
jnp
std
xor
mov
out
clc
pop
xor
lahf
mov
push
push
jo
daa
rcl
(bad)
xor
xlat
daa
jnp
outs
pop
cmp
std
jo
cmp
leave
ret
repz
jmp
ror
jo
popf
(bad)
pop
loop
xchg
call
dec
dec
rcr
xor
ja
add
or
and
push
rcl
mov
add
ja
add
pop
push
in
xor
dec
sahf
dec
fidivr
sbb
push
pop
add
retf
les
xchg
cmp
or
cli
loope
in
inc
xchg
push
or
pusha
jp
mov
aaa
xchg
adc
sbb
inc
sub
dec
inc
in
push
jecxz
rol
xor
cwde
cmp
sbb
cwde
xchg
leave
or
jns
je
and
enter
gs
out
outs
jle
add
pushf
nop
inc
jecxz
xchg
(bad)
rcr
add
hlt
cmc
test
fild
stc
pop
xchg
push
popa
dec
loopne
pop
jp
push
inc
mov
mov
jmp
sub
pop
xchg
dec
inc
(bad)
aad
inc
and
jp
mov
clc
inc
pop
add
imul
push
push
dec
(bad)
sbb
(bad)
add
mov
pop
popa
outs
jno
pop
mov
xchg
cwde
retf
dec
push
jge
inc
bound
xchg
push
scas
xchg
xchg
inc
and
xlat
mov
inc
frstor
fcmovnbe
adc
or
add
and
test
(bad)
rol
retf
popf
pop
add
cmp
fadd
out
jo
mov
cmc
xchg
sub
add
mov
ret
lds
les
sub
adc
arpl
sbb
and
push
and
pop
fs
mov
xchg
mov
out
sbb
push
sbb
xchg
(bad)
sub
scas
inc
movs
and
jg
pop
push
sub
xor
jl
jmp
into
fcomp
fisttp
mov
sub
sbb
mul
pop
sbb
sbb
mov
mov
dec
pop
dec
add
cmp
sub
cmp
mov
pop
sar
pop
jmp
ss
popa
sahf
icebp
and
add
and
arpl
xchg
push
rol
loop
imul
mov
jg
xor
dec
clc
leave
pop
xchg
sub
cmps
add
push
int3
test
js
xor
inc
ss
mov
pushf
sbb
mov
mov
loop
daa
mov
in
int
xchg
pop
popf
mov
repnz
xchg
mov
je
mov
es
aaa
std
inc
xor
out
cld
mov
or
addr16
pop
repz
enter
pop
dec
inc
inc
sub
add
and
pushf
or
movs
inc
out
push
and
data16
inc
sub
mov
not
into
add
or
pmaxub
and
mov
xor
repz
movs
xor
inc
and
mov
mov
cmp
lods
mov
lods
(bad)
adc
js
inc
sbb
and
sbb
dec
gs
xor
dec
aam
push
cmp
dec
popf
nop
retf
cmp
or
dec
add
inc
sti
or
and
add
out
or
dec
ds
sbb
(bad)
push
or
fild
xchg
and
sub
add
xchg
in
cs
pop
das
sub
ficom
lods
shl
push
test
fild
retf
fild
rcr
adc
jmp
cs
or
and
mov
mov
inc
adc
std
fcom
dec
test
aam
dec
mov
xchg
or
mov
lods
outs
and
popa
ins
rcr
sbb
adc
in
adc
mov
outs
inc
sub
or
cmp
outs
adc
add
mov
sbb
outs
mov
cmp
xor
arpl
and
jmp
popf
mov
shl
mov
add
mov
in
xlat
adc
xchg
pop
inc
push
ret
xor
push
xor
fcomp
or
push
xor
cmp
adc
add
sbb
ret
mov
jae
mov
and
out
bound
adc
leave
dec
icebp
cmp
xchg
test
jae
(bad)
dec
xor
fadd
jge
push
jl
mov
jg
sbb
xchg
(bad)
pop
mov
pop
in
fwait
and
movs
cmc
mov
inc
lods
dec
sbb
ja
and
mov
xor
push
jns
cli
inc
jmp
or
mov
int3
cmps
push
ins
test
nop
xor
jae
test
and
add
clc
(bad)
les
or
popf
bound
and
mov
adc
push
sbb
add
xchg
mov
and
and
or
sbb
or
mov
out
xchg
mov
or
sahf
shr
pop
into
cld
mov
xor
pop
fcomp
cmp
jmp
xchg
fsub
lods
sti
mov
mov
cmp
inc
xchg
mov
fdivr
inc
inc
loopne
ss
jge
mov
and
ucomiss
pop
hlt
sub
dec
jo
(bad)
ins
pop
mov
das
ja
aad
shr
ret
push
cdq
mov
pop
push
cmp
adc
mov
(bad)
xor
cld
jg
shl
mov
mov
jns
dec
cmp
pop
xchg
fdiv
(bad)
dec
dec
dec
mov
and
pop
gs
jecxz
mov
movs
les
add
cli
(bad)
cmps
lea
aad
bound
dec
dec
xor
cmp
adc
adc
or
add
call
xor
icebp
sub
pop
pop
paddsb
sbb
aad
adc
cmp
sbb
sbb
cmp
mov
into
sbb
xor
pop
enter
js
jnp
sub
je
dec
aaa
pop
xor
stc
jbe
ds
pop
cwde
jmp
and
xor
xchg
lods
pushf
in
retf
inc
sub
leave
daa
popa
rcl
movs
push
fsubr
pop
adc
mov
xchg
out
cmp
(bad)
cmps
dec
pop
push
repnz
mov
push
enter
dec
lods
std
in
mov
mov
mov
test
add
xlat
shr
ja
adc
pusha
out
repnz
sbb
inc
or
mov
in
and
iret
inc
or
pop
jnp
sbb
fnstcw
xchg
or
ja
sub
jmp
popa
adc
adc
pop
cmp
dec
push
mov
jno
shl
bound
popa
push
mov
inc
add
fmul
in
and
leave
or
mov
call
lods
test
iret
push
lahf
in
mov
sub
in
aam
mov
popa
mov
and
imul
push
dec
cmp
and
fbstp
fdivr
lods
cmp
aad
lea
dec
cld
dec
je
clc
dec
push
xchg
das
fwait
dec
mov
dec
jns
mov
and
pop
idiv
mov
je
scas
repz
(bad)
sar
push
fld
inc
or
lods
jbe
cmp
(bad)
push
xchg
pop
bound
dec
ins
nop
test
fldenv
jae
add
mov
inc
push
dec
arpl
sbb
leave
sbb
xchg
pop
xchg
add
jecxz
and
cmps
popa
ret
cmc
adc
data16
cmp
cs
xchg
aam
cdq
retf
jmp
mov
ss
fadd
pop
nop
mov
cs
and
sbb
push
mov
clc
inc
xchg
mov
jecxz
mov
ss
cmp
jmp
xchg
test
lahf
sbb
or
rcl
xchg
adc
cmps
fadd
retf
pop
not
out
iret
inc
aaa
scas
pop
outs
fidiv
sbb
neg
ja
dec
ret
mov
mov
lds
mov
in
in
mov
add
dec
add
jbe
mov
(bad)
or
fsubp
jns
loopne
sbb
daa
mov
arpl
scas
lahf
cmp
mov
xor
movs
inc
sbb
in
(bad)
dec
enter
jns
iret
movs
or
lods
mov
sbb
sbb
fadd
jns
cmp
cmp
nop
movaps
(bad)
lods
push
jmp
je
and
mov
ficom
pop
xchg
jns
jg
js
out
xchg
fisub
dec
push
loopne
test
push
fsub
fisub
shl
retf
xchg
xor
adc
leave
or
add
(bad)
mov
cmp
fist
jb
cmp
xchg
push
je
call
jle
or
sbb
imul
mul
(bad)
fist
sahf
dec
adc
inc
stc
cmp
mov
pushf
sahf
inc
push
pop
out
add
test
dec
in
in
aam
fsubr
pusha
dec
or
add
adc
icebp
add
ret
push
mov
cmp
mov
xchg
xchg
retf
add
mov
ins
inc
outs
pop
(bad)
sbb
and
rcr
or
cwde
xchg
push
push
sbb
rol
inc
cmp
adc
les
mov
shl
dec
retf
pop
cli
cmovs
ins
sbb
add
aas
mov
xchg
popf
rcl
repnz
mov
in
inc
pop
push
fild
inc
ja
fs
mov
arpl
push
lock
xchg
sar
repnz
imul
mul
mov
jmp
ins
pop
sbb
data16
out
add
test
mov
fadd
jno
sar
push
sbb
shl
mov
or
pushf
push
in
sbb
cld
daa
adc
adc
or
aaa
mov
arpl
or
loopne
(bad)
push
popa
cmp
(bad)
dec
test
mov
dec
and
mov
fcmovnbe
rcr
dec
mov
xchg
add
mov
and
aaa
xchg
dec
fistp
jp
xor
cmp
pop
fucomi
or
xchg
into
scas
(bad)
lods
and
aad
cmp
cmp
sub
mov
pop
dec
jle
cwde
mov
loope
push
pop
adc
sub
mov
iret
jle
cli
outs
push
jle
mov
pop
stos
pop
aad
adc
sti
xor
sub
std
ja
pop
test
cmp
jo
and
(bad)
addr16
cmp
les
in
add
cmp
dec
inc
push
mov
call
xor
dec
add
push
ins
mov
cld
or
push
and
test
jb
out
or
in
mov
in
jmp
adc
ds
mov
mov
mov
loope
aaa
inc
jns
stos
add
les
xor
nop
push
inc
dec
xchg
sub
(bad)
jno
ficom
fwait
dec
sbb
sbb
xor
fistp
enter
mov
push
push
mov
mov
add
mov
nop
or
sbb
push
arpl
cmp
add
adc
or
mov
mov
cmp
sti
inc
lock
mov
push
nop
pop
add
in
jmp
jo
movs
xor
jmp
retf
jno
or
fs
ret
and
hlt
jmp
sbb
fldl2e
inc
jbe
push
inc
jbe
inc
inc
mov
xor
fld
sub
inc
push
into
inc
sbb
push
push
push
not
jp
xchg
repnz
in
icebp
mov
test
or
cmp
mov
mov
mov
out
and
mov
sub
dec
add
adc
adc
and
inc
sbb
cmp
pop
imul
xchg
or
jmp
out
aas
xchg
add
sbb
pusha
and
add
popf
mov
mov
xchg
push
cmps
and
ins
mov
iret
popa
adc
test
cld
nop
dec
sub
inc
stos
mov
mov
rol
xchg
sbb
mov
and
inc
sbb
stc
inc
shr
inc
xor
pop
pop
es
xchg
add
mov
inc
pop
cmp
and
out
inc
out
ret
dec
mov
data16
sbb
imul
fdiv
pusha
fs
ret
bound
in
lea
adc
rcr
repnz
jno
fmul
ja
clc
inc
pop
or
pop
cmp
or
xchg
or
jl
pop
ins
mov
stc
add
xchg
add
and
jle
les
sub
push
fwait
(bad)
push
fxch
fadd
jno
pop
xchg
mov
cmp
push
add
sbb
jnp
cmp
cmp
data16
rcl
dec
jo
das
inc
les
and
pop
repnz
scas
push
ret
inc
in
adc
inc
xor
jbe
dec
and
sbb
pop
scas
xor
adc
cmp
and
pop
add
cmp
or
das
outs
mov
popa
push
ins
outs
dec
adc
jb
adc
xchg
xor
dec
jno
mov
or
retf
add
addr16
sub
lock
pop
jmp
retf
mov
in
cmps
test
sub
loope
aas
mov
jl
xor
xlat
xor
jmp
imul
movs
leave
and
push
sar
add
mov
and
cmp
outs
jmp
jo
into
mov
mov
mov
inc
lods
into
mov
out
sbb
xchg
fnstcw
(bad)
pusha
mov
and
inc
xor
inc
lods
jbe
and
adc
sbb
inc
rcl
xchg
leave
push
sbb
push
ret
lods
adc
mov
xchg
add
dec
push
jns
repnz
sahf
gs
shl
data16
loope
paddusw
(bad)
daa
mov
addr16
adc
xor
(bad)
and
push
or
and
adc
jnp
and
xor
inc
fsub
add
jl
adc
inc
mov
std
jo
in
and
xor
out
shl
and
inc
sar
push
fld
adc
movs
mov
outs
cli
push
inc
or
lods
dec
lods
mov
arpl
cmp
out
jae
inc
xchg
jns
and
mov
jbe
inc
rol
sbb
jge
adc
xor
push
loop
and
inc
ret
and
and
xchg
pushf
jle
bswap
jmp
or
add
lods
pop
or
inc
sbb
push
adc
jo
cmp
pop
dec
stc
(bad)
dec
test
push
int
cmps
jge
xchg
stc
ret
cmps
and
mov
fidiv
daa
aas
ja
sub
ss
xchg
out
out
xor
ret
dec
xchg
in
and
mov
mov
mov
jne
jae
mov
retf
xor
lahf
push
xor
fcomp
call
stc
mov
jmp
popf
dec
push
sti
push
push
retf
and
inc
mov
or
cmp
nop
jg
and
in
and
and
push
mov
mov
movs
add
cmps
xor
les
test
xor
mov
xchg
adc
shl
cmp
sub
ror
add
and
mov
mov
popf
not
ret
lds
popf
icebp
popf
sti
inc
or
std
ficom
gs
xor
mov
rcr
mov
or
add
pushf
push
shl
xchg
add
enter
inc
push
xlat
dec
popf
jo
fistp
out
mov
jg
ja
ds
dec
dec
sti
aas
adc
aad
nop
loopne
test
dec
inc
pop
daa
out
and
(bad)
fiadd
fld
sbb
ja
sub
xchg
popa
gs
mov
add
shl
push
outs
jle
xchg
sbb
sahf
pop
enter
push
and
ror
and
pop
and
and
hlt
mov
dec
push
add
movs
cdq
and
add
jmp
pop
ror
bound
dec
jns
dec
push
in
mov
ja
or
test
inc
fimul
ss
xchg
sub
test
cmp
jmp
stc
cmp
fsubr
div
xor
leave
rol
ins
jp
rcl
push
hlt
mov
xchg
or
arpl
pop
arpl
or
jbe
inc
cmp
cmp
lock
mov
test
adc
xchg
dec
pop
push
sub
xchg
sub
pop
sbb
ret
mov
push
adc
rcr
in
and
aam
into
cmp
add
out
shr
rol
(bad)
daa
inc
movs
mov
cmp
jae
pop
xor
fucom
jmp
xchg
lods
sar
ror
push
retf
(bad)
add
jno
scas
lock
rcl
dec
fadd
cmp
xor
pusha
xchg
add
cmp
cwde
jne
nop
cmp
push
mov
fcom
retf
inc
test
pop
jo
into
jb
mov
sti
mov
dec
inc
add
lahf
ret
adc
jb
es
dec
sbb
add
in
xor
popa
cs
or
inc
movs
fs
xor
push
mov
faddp
mov
cmp
jp
xchg
lods
mov
pop
cmp
xchg
and
mov
fwait
clc
jle
ss
ffree
repnz
fs
adc
push
push
mov
ds
fild
add
lahf
retf
sub
in
pusha
push
enter
mov
(bad)
shl
sbb
xor
xor
int3
and
leave
push
and
pop
mov
out
scas
js
shl
push
fs
adc
inc
sub
pop
test
cmp
or
sub
add
arpl
xor
ins
inc
nop
sub
loope
std
and
inc
sbb
or
push
inc
test
add
out
pop
(bad)
pop
loopne
cmp
jmp
test
lds
push
mov
adc
cmovb
(bad)
pushf
into
jmp
inc
fsubr
fs
jecxz
cmp
clc
dec
(bad)
out
fdiv
sbb
dec
test
adc
inc
cmps
mov
mov
or
mov
stos
cmp
and
mov
jne
cmp
movs
push
pop
mov
or
out
lea
or
pop
xchg
dec
aaa
gs
xchg
fcom
xor
add
test
jno
in
push
movs
inc
dec
call
pusha
inc
pop
into
dec
(bad)
mov
test
shr
lea
jns
pop
sbb
hlt
adc
mov
jne
scas
push
outs
ret
jns
add
dec
ins
mov
and
add
add
push
push
jno
shl
retf
outs
ds
mov
adc
mov
jnp
xor
and
sub
xchg
push
and
pop
(bad)
and
jg
adc
dec
iret
pusha
cmp
sbb
js
jb
push
sbb
mov
shr
fwait
in
inc
xchg
mov
mov
xor
shl
xchg
mov
pop
adc
mov
lods
xor
sub
xor
ret
cmp
bound
jp
outs
push
sbb
shr
add
inc
push
and
scas
push
sbb
test
pop
pop
mov
movs
pop
fwait
pop
inc
and
xor
push
pop
mov
pop
inc
add
cmc
mov
sbb
ins
nop
fiadd
pusha
inc
or
and
sub
sbb
sub
repnz
and
repnz
mov
mov
add
dec
jae
jo
adc
adc
jge
inc
adc
in
push
nop
test
xchg
mov
int
pop
xchg
popf
mov
mov
jl
ss
jns
jle
sub
adc
pop
mov
call
mov
dec
xchg
sub
add
je
sub
add
test
or
xchg
rol
jg
add
cmp
icebp
bound
frstor
push
lods
mov
fild
pop
and
fs
mov
sub
push
or
cmc
or
adc
retf
adc
cmp
scas
not
pop
dec
jno
ret
lds
xchg
xlat
mov
pop
ret
and
popa
jns
stos
add
mov
call
mov
mov
push
inc
pop
xchg
das
jno
(bad)
push
cmp
les
jmp
fcom
arpl
mov
sub
dec
jmp
mov
xor
xor
setle
pop
sub
movs
sbb
test
mov
inc
add
std
push
pop
mov
cli
inc
cmp
xchg
xchg
je
movs
inc
or
movs
div
add
inc
mov
pop
pop
and
adc
mov
mov
inc
mov
push
mov
icebp
adc
sub
pop
and
mov
mov
movs
dec
add
(bad)
sub
cmp
retf
xor
movs
stc
cld
jg
shl
mov
jns
mov
jle
ja
cmps
cmps
sbb
enter
push
fld
enter
adc
cmp
iret
ja
xor
pop
mov
xchg
or
cmp
jl
mov
call
sar
jmp
ins
popf
stc
icebp
shl
movs
test
test
hlt
sub
inc
inc
sub
inc
js
out
dec
inc
stc
sub
and
mov
mov
(bad)
ret
repnz
push
repnz
inc
fnstcw
add
dec
dec
shl
jno
mov
xchg
xor
or
popa
xchg
add
adc
js
or
adc
pusha
rcl
popf
std
(bad)
(bad)
inc
dec
fs
loope
sbb
mov
sbb
sbb
inc
cmp
popa
sbb
cwde
loope
sar
lds
int
in
add
lods
cwde
mov
and
rcr
dec
adc
or
ret
inc
inc
add
add
or
add
es
xchg
xchg
add
pop
sub
loop
loopne
fidiv
sahf
mov
pop
dec
pop
inc
shl
cmp
mov
inc
cdq
push
and
mov
(bad)
leave
pop
fs
call
sbb
mov
ja
mov
cmps
fwait
adc
inc
sbb
push
in
(bad)
or
stos
push
jb
repz
dec
in
(bad)
sub
popa
fadd
mov
mov
xchg
or
bound
and
cmp
pop
jno
cmps
mov
cs
cmp
out
mov
mov
(bad)
xor
arpl
stos
pusha
stos
inc
leave
cld
mov
pusha
stos
sub
retf
iret
out
es
sti
sbb
scas
pusha
sub
adc
out
jbe
in
mov
adc
in
ins
es
mov
ins
scas
addr16
dec
inc
and
bound
xchg
sbb
je
mul
div
lock
in
dec
xchg
and
mov
aam
(bad)
sub
fisub
pcmpeqb
les
jmp
test
fild
push
leave
dec
(bad)
sahf
mov
dec
and
dec
pop
xor
xchg
push
xor
(bad)
jb
pop
dec
dec
jmp
push
lods
adc
dec
xchg
in
mov
retf
push
mov
dec
(bad)
dec
jecxz
je
pusha
add
sbb
rcl
add
push
xlat
push
add
inc
retf
push
jbe
outs
xchg
(bad)
retf
repz
or
mov
inc
shl
fnstcw
jae
or
lds
retf
pushf
jae
sar
les
loopne
js
in
sbb
jecxz
jae
sub
sbb
aaa
xchg
xor
adc
add
rcl
add
js
dec
xor
fbstp
idiv
sahf
fwait
cld
jnp
fldenv
pop
lods
test
test
fs
dec
cmp
test
inc
jo
inc
push
or
push
sub
pop
sti
test
fdivr
add
xchg
or
add
adc
push
pusha
pop
sub
pushf
xor
and
or
pushf
lds
imul
ffree
push
ins
pop
inc
dec
xor
sahf
mov
fstp
dec
fdivr
xor
mov
mov
jle
dec
sub
in
aaa
xor
adc
test
ret
push
(bad)
cmp
mov
sub
dec
jno
cmps
jmp
xchg
out
xchg
lods
call
movs
je
(bad)
cmp
adc
mov
or
mov
xchg
sub
jno
xchg
sbb
inc
pop
fsubr
and
and
fisub
add
jae
sbb
lea
xchg
daa
scas
pop
scas
std
bound
nop
and
dec
movs
scas
mov
cmp
xor
ins
mov
push
int3
push
mov
mov
mov
stc
inc
cmps
pusha
push
pop
xchg
test
and
inc
inc
dec
int3
sub
jo
rcl
retf
mov
push
adc
pop
push
ja
sub
inc
clc
lds
aad
push
leave
dec
fadd
popf
(bad)
sub
and
imul
and
and
stc
inc
imul
mov
mov
add
or
pusha
and
add
inc
push
adc
add
jbe
cli
inc
pop
sbb
sbb
pop
mov
sub
dec
in
pusha
inc
mov
add
jecxz
leave
aam
ins
and
jmp
inc
gs
push
jnp
clc
inc
xor
aam
add
outs
push
push
pop
inc
add
push
adc
sub
mov
xchg
add
stos
jno
test
sub
rcl
cwde
cmps
lods
add
lods
cdq
dec
stc
xchg
xchg
popa
leave
cdq
cmps
xchg
fisttp
push
jmp
cmp
dec
add
inc
loopne
daa
jmp
(bad)
push
aam
jno
pop
rcl
jns
push
push
xchg
sub
jae
movs
dec
add
pop
dec
xchg
jg
call
jecxz
sbb
pop
or
or
adc
(bad)
xchg
iret
jecxz
cmp
retf
(bad)
adc
(bad)
mov
add
mov
xchg
sbb
das
popa
je
outs
das
and
ja
sbb
enter
xchg
movs
add
add
in
adc
mov
inc
mov
nop
adc
movs
mov
xor
cmp
xor
jg
dec
xchg
sub
mov
xor
popa
test
adc
xor
mov
mov
sbb
inc
adc
mov
xor
mov
dec
add
hlt
clc
les
push
jl
out
mul
repnz
push
or
clc
adc
add
jbe
add
shl
and
and
cwde
pop
add
mov
js
ror
shl
leave
sbb
loop
xchg
and
fs
(bad)
shl
xor
jp
mov
cld
fidivr
mov
daa
out
div
jmp
shl
mov
xchg
pop
sar
inc
fcom
add
lods
add
adc
cmp
mov
inc
mov
fld
push
or
les
test
or
sub
dec
xchg
mov
aaa
sbb
and
and
mov
push
shl
call
add
shl
scas
inc
push
push
push
add
mov
imul
mov
lds
dec
cmp
(bad)
jge
sbb
xor
pop
into
shl
adc
mov
les
or
ja
sub
test
and
xor
bound
call
jno
(bad)
js
ins
push
cdq
and
push
loop
pop
inc
enter
add
lock
sbb
sbb
add
nop
dec
arpl
mov
fdiv
(bad)
push
retf
xor
and
inc
push
xor
ficom
ins
std
loopne
jmp
or
pop
inc
test
mov
ficom
adc
es
and
jns
pcmpeqd
imul
test
add
ror
fadd
xor
pop
xchg
popf
mov
nop
jmp
fsubr
mov
add
mov
adc
cli
inc
movs
add
dec
mov
dec
pop
in
clc
inc
int3
ret
mov
xlat
cwde
pushf
xchg
mov
push
mov
mov
inc
pop
mov
pop
into
in
jl
add
pusha
and
inc
pop
mov
mov
loop
test
push
mov
dec
test
and
test
xor
inc
lea
cmps
inc
or
(bad)
lods
add
pop
in
rol
pop
pop
or
cmp
dec
(bad)
scas
sbb
mov
cmps
repnz
mov
dec
mov
dec
jae
cmp
test
sbb
int
jbe
call
addr16
std
outs
imul
out
and
outs
je
scas
stc
dec
popa
mov
lahf
mov
cmps
loop
fs
jle
(bad)
pop
int
loop
jl
ja
pop
sbb
jle
(bad)
paddusb
xor
(bad)
cmps
dec
mov
sub
push
mov
(bad)
mov
jo
cmp
mov
imul
loope
fwait
push
pop
push
leave
pop
pop
pop
movs
cmps
popa
rol
sar
pop
outs
sbb
adc
pushf
jp
or
inc
fmul
test
fs
mov
and
inc
fsubr
and
ins
cwde
sub
sub
jmp
pop
xchg
inc
fidivr
dec
loop
inc
outs
mov
fsubp
pop
xchg
rcr
(bad)
adc
daa
nop
loopne
or
ins
pop
ret
jbe
stc
ret
jns
cmp
(bad)
fwait
inc
jbe
sbb
adc
(bad)
retf
adc
(bad)
dec
xor
sar
adc
rol
sbb
cwde
in
retf
test
sbb
push
lahf
add
xchg
stos
or
xor
test
sub
pop
fwait
movs
enter
or
jecxz
adc
pusha
ffree
xchg
dec
add
mov
aas
addr16
mov
inc
inc
mov
in
jecxz
dec
pop
inc
test
inc
jmp
cmc
adc
inc
jp
pusha
dec
xchg
adc
popa
(bad)
and
sub
ins
xor
adc
pop
pop
pop
(bad)
pop
shl
in
mov
sbb
add
push
movs
sub
add
frstor
ins
jp
xchg
shl
dec
sbb
pushf
pushf
push
popf
les
xchg
adc
jns
push
ja
ret
test
adc
mov
out
aam
cmp
jle
and
pushf
shl
and
push
imul
mov
pushf
rcr
mov
jecxz
xchg
cmp
dec
xor
mov
popf
pop
push
sti
push
dec
jmp
mov
xchg
sahf
cwde
shr
mov
push
sbb
ja
mov
xor
sbb
and
imul
ins
push
ds
addr16
xchg
ror
cmp
inc
shl
push
adc
pop
popf
daa
cmp
adc
and
inc
cli
ret
or
adc
mov
cwde
push
push
into
xor
add
pop
cwde
or
les
jb
adc
adc
call
push
movs
cmp
push
repnz
fdivr
jo
ret
(bad)
dec
xchg
popf
sar
(bad)
xlat
add
call
cmp
aas
adc
dec
cld
lahf
loop
jb
cmp
sub
push
(bad)
xor
(bad)
cmp
adc
bound
retf
mov
(bad)
shl
test
add
push
outs
cmp
hlt
hlt
int3
pop
mov
and
jmp
inc
pop
test
mov
mov
es
ss
movs
dec
gs
jo
(bad)
push
jecxz
js
mov
sbb
mov
call
push
xor
pop
inc
xchg
dec
and
pusha
repz
pop
xchg
mov
outs
push
scas
adc
dec
leave
(bad)
push
adc
mov
push
mov
movs
inc
addr16
test
dec
ret
scas
jmp
dec
sub
jecxz
ficom
inc
retf
push
pop
and
inc
lock
jge
and
stos
sub
and
cli
pop
pop
aad
adc
push
shl
and
and
in
hlt
leave
jae
or
pop
xchg
and
adc
call
lds
xlat
mov
lahf
xchg
imul
movs
test
pop
lahf
pop
test
daa
xlat
gs
xchg
ret
mov
jg
aaa
arpl
movs
(bad)
fwait
idiv
add
sbb
fidiv
cwde
fimul
fmul
dec
xchg
adc
mov
mov
mov
inc
dec
hlt
adc
xchg
stc
ret
push
sub
jbe
mov
or
sub
shr
and
lods
or
inc
pop
(bad)
and
dec
loopne
rcr
mov
mov
sbb
jp
xchg
jbe
sub
fld
xor
mov
mov
and
mov
mov
inc
push
and
push
sub
and
(bad)
jo
pop
xchg
xchg
mov
faddp
scas
add
add
inc
retf
push
sete
mov
adc
mov
sbb
pusha
push
lock
loop
sbb
shl
and
movs
inc
nop
jecxz
adc
les
adc
fcom
(bad)
frstor
add
das
sbb
add
sbb
daa
xor
mov
ja
and
mov
pop
mov
or
sub
and
xchg
cmp
push
push
movs
push
rcl
push
pop
and
nop
ds
adc
pusha
add
dec
sbb
enter
fdivr
jnp
(bad)
test
xor
adc
popf
loop
or
rcr
push
(bad)
cli
ret
xchg
cli
push
ss
sti
stos
inc
and
shl
outs
(bad)
stos
cmp
(bad)
sub
sar
repnz
cld
mov
add
pushf
cmp
sub
mov
(bad)
ficom
jl
adc
std
add
and
mov
xchg
loope
lea
sbb
xchg
loope
mov
sbb
pop
dec
call
dec
and
mov
sub
shl
lods
test
ins
fs
dec
mov
jb
shr
and
ja
mov
and
add
mov
jmp
xchg
imul
jb
mov
or
jp
(bad)
pop
jne
xchg
dec
movs
mov
cli
in
mov
mov
lods
add
retf
repnz
or
fdiv
cmp
inc
push
inc
not
xchg
sbb
les
add
fcom
rcr
jecxz
xor
dec
stos
stos
add
xchg
or
mov
stc
out
mov
sub
push
retf
imul
xchg
mov
mov
pop
in
addr16
mov
popf
mov
adc
nop
xlat
imul
adc
lods
mov
clc
in
or
mov
jns
inc
add
pop
daa
dec
sbb
aad
scas
js
inc
sub
rcr
xchg
jle
xchg
ins
add
dec
mov
dec
rol
add
inc
imul
and
fisttp
mov
bound
add
jbe
mov
fcom
ins
pop
add
fnstenv
ret
push
mov
add
cmps
into
dec
and
xchg
mov
cmp
pop
nop
int
xchg
and
arpl
ret
fwait
pop
arpl
jecxz
dec
repnz
jne
rcl
dec
loopne
mov
cdq
push
push
sbb
retf
xchg
xchg
push
or
add
jle
aaa
ja
pop
xor
dec
fsub
dec
ins
adc
repnz
lods
or
mov
push
retf
add
(bad)
pop
jbe
xor
shr
or
test
ins
dec
nop
imul
out
loopne
xor
jp
jb
add
pop
cmp
fbld
stc
inc
xor
ins
xchg
push
mov
add
out
cwde
push
or
call
xchg
adc
(bad)
mov
or
inc
daa
mov
enter
rol
in
leave
push
mov
and
shr
daa
movs
inc
loop
inc
or
add
loop
int3
jnp
adc
test
inc
xor
(bad)
or
fnstcw
mov
and
jns
jmp
mov
retf
mov
sar
inc
or
dec
ror
jae
clc
and
mov
mov
fimul
dec
stc
jmp
mov
push
in
jb
jp
pop
mov
adc
jg
loop
jb
in
sar
sar
jmp
call
or
cdq
(bad)
cmp
dec
add
and
gs
pop
inc
mov
xchg
cmp
aas
and
int
xchg
movs
imul
or
and
add
push
xchg
outs
jns
fwait
jnp
retf
push
sti
sbb
xchg
push
add
jg
add
out
dec
out
cmp
scas
std
add
ror
add
pusha
loop
xchg
or
or
pop
dec
pop
pop
xchg
adc
jp
cmps
ret
push
and
push
xchg
xchg
rcr
das
dec
and
inc
or
lea
pop
fdivr
out
repz
cmp
cdq
gs
push
xlat
sbb
add
cmp
(bad)
sar
adc
xor
fsub
cwde
dec
fist
fisttp
leave
or
and
xor
pop
or
stc
inc
cmps
enter
inc
ds
sbb
and
retf
push
dec
js
mov
add
sti
test
mov
inc
stc
or
pop
or
push
lock
xchg
pushf
mov
xor
dec
jo
jo
xchg
mov
aas
add
rcl
xchg
(bad)
int3
inc
mov
das
cmp
add
out
cmp
loopne
push
aam
push
fadd
out
or
jmp
scas
jbe
or
mov
push
xchg
add
fadd
push
(bad)
and
or
fadd
push
aam
lods
add
pop
inc
mov
adc
mov
pop
xchg
xor
cmp
jo
fsub
movaps
push
bound
stos
ins
push
cmps
and
iret
mov
dec
mov
shl
xchg
mov
and
fldenv
push
jmp
sub
pop
nop
sti
dec
aas
int3
jmp
dec
jge
fidivr
fs
add
jne
int3
or
jns
pop
retf
test
xchg
cmp
pop
cs
adc
enter
push
push
inc
jo
and
and
mov
ret
push
inc
jns
les
push
xchg
nop
test
mov
push
aas
pop
xchg
inc
or
and
scas
pop
ins
dec
pop
repnz
jmp
and
and
sub
je
into
ret
retf
xlat
adc
mov
arpl
mov
mov
adc
into
sti
lods
pop
jge
jb
loopne
jle
mul
(bad)
(bad)
xchg
dec
pushf
add
retf
and
push
out
push
mov
stc
das
(bad)
in
push
xchg
lods
call
sbb
pop
sbb
pop
add
in
dec
and
and
xchg
call
ins
xchg
jle
pop
lea
cmc
cmp
gs
cmp
out
mov
push
and
rol
pop
inc
mov
sbb
ret
fs
push
test
test
pop
pop
mov
mov
fild
je
sub
add
daa
and
mov
scas
dec
rcr
cmp
sub
pop
shr
and
mov
or
adc
(bad)
je
xchg
cmp
xchg
sbb
mov
dec
jo
xchg
nop
pop
sub
pop
loop
inc
jae
aad
repnz
mov
jp
jb
mov
(bad)
pop
jae
push
inc
pop
sbb
and
(bad)
mov
cmc
push
cmps
sahf
push
dec
sar
popa
(bad)
fld
in
sbb
call
fist
pop
pop
xchg
icebp
rcr
clc
sbb
mov
enter
shl
retf
bound
movs
push
test
call
ret
inc
push
ret
ret
jge
xor
icebp
ins
enter
div
xor
xor
sbb
fbstp
and
jno
out
and
pusha
sub
adc
or
inc
aaa
popa
mov
retf
imul
stc
les
xor
fs
or
adc
inc
ss
or
out
test
mov
stc
and
lds
xchg
ins
les
push
cs
sar
pop
movs
dec
cwde
lods
mov
adc
adc
xchg
mov
jb
cmp
mov
add
scas
jecxz
mov
ror
cmp
push
mov
lea
sbb
js
push
and
add
out
hlt
hlt
mov
sub
cwde
or
mov
push
cmp
add
and
add
pop
sbb
inc
rol
test
nop
jp
sub
loopne
pusha
mov
rol
mov
and
inc
int3
sub
adc
test
push
and
aas
xor
or
repnz
xchg
sbb
and
add
stos
fsubr
aas
dec
imul
loopne
inc
and
and
test
pop
(bad)
and
inc
stc
dec
scas
cmps
lods
pop
push
sbb
jecxz
sub
mov
inc
or
stos
fucomip
stc
ret
popa
iret
mov
movs
inc
icebp
out
jecxz
mov
enter
xchg
xor
jmp
hlt
int3
pop
jge
mov
or
mov
out
mov
fs
xor
xchg
mov
jmp
sti
les
or
fs
mov
push
mov
mov
test
push
leave
or
fs
and
dec
sbb
add
jnp
enter
xor
dec
jle
adc
pop
or
enter
adc
jno
retf
xchg
ds
mov
pusha
test
arpl
and
les
shl
and
stc
ja
loop
jnp
mov
enter
inc
fld
add
dec
add
xor
mov
adc
pop
xchg
adc
jnp
push
inc
stc
inc
mov
dec
mov
xchg
sub
inc
jle
inc
inc
jle
bnd
bound
cdq
inc
sub
fstp
dec
or
jb
cli
les
xchg
xchg
aam
les
push
or
push
xchg
call
(bad)
ss
cmp
mov
ret
imul
xchg
cmp
sub
sti
out
clc
inc
fnsave
call
xchg
inc
sub
xor
adc
jg
imul
aam
sub
scas
call
int
mov
sub
inc
cld
push
int3
(bad)
aam
jp
or
jmp
add
xor
ins
mov
mov
rol
outs
fmul
retf
retf
addr16
jmp
inc
mov
mov
xchg
test
loope
dec
and
ins
dec
add
mov
or
pop
retf
push
movs
cli
mov
pop
mov
sub
shr
inc
xchg
test
or
mov
push
xchg
cwde
xchg
in
sub
xchg
cmp
jmp
adc
rcl
jmp
in
mov
adc
push
pop
pop
stc
xchg
jno
xchg
enter
(bad)
cmp
and
int
test
nop
mov
adc
loopne
ins
cmp
push
xchg
sub
in
cmp
fadd
push
out
leave
adc
mov
cmp
sub
push
lods
and
add
or
mov
mov
xchg
(bad)
mov
jnp
les
dec
cmp
pop
loope
mov
xchg
popf
retf
pop
xchg
bound
adc
mov
lds
in
cwde
test
xor
xchg
adc
arpl
ficomp
push
sbb
cmp
and
lods
adc
out
not
or
ja
xchg
xchg
inc
push
lock
adc
bound
out
adc
shl
test
pop
jbe
or
dec
lds
inc
jle
sub
push
sbb
add
jecxz
xchg
mov
leave
dec
mov
icebp
mov
and
lea
fdivr
inc
scas
punpckhbw
cdq
popa
push
xor
loopne
gs
movs
xchg
xlat
cli
and
mul
loope
les
jecxz
mov
gs
xor
pop
mov
mov
stos
in
ds
jmp
out
int3
(bad)
std
arpl
dec
mov
mov
fsincos
cmp
fnstenv
(bad)
adc
repz
repz
das
sub
sahf
nop
rcl
mov
add
addr16
outs
in
and
cmps
pushf
or
mov
(bad)
lods
pop
inc
in
jb
retf
mov
mov
or
cmp
cmp
imul
popa
adc
call
js
mov
outs
adc
lock
dec
bound
add
add
or
cmp
pop
dec
xchg
sub
add
call
popf
les
cmp
push
dec
cmp
inc
icebp
mov
or
xlat
outs
inc
add
jns
cld
cmp
jge
sbb
jns
jmp
add
icebp
adc
fsubr
mov
cmp
(bad)
idiv
ret
bound
and
jbe
sbb
neg
or
pop
mov
or
pusha
sti
mov
leave
push
pop
fild
ins
jge
and
fadd
bound
or
jmp
inc
xor
jge
and
sub
mov
imul
jno
repnz
xor
fsubp
out
xchg
adc
faddp
jns
stos
pop
hlt
xchg
fisttp
mov
mov
sbb
pop
xchg
jno
popf
xchg
sbb
ins
mov
ficomp
(bad)
ins
jae
adc
es
push
xchg
movs
push
aad
lods
out
xor
pop
out
add
add
icebp
imul
das
fidiv
mov
imul
test
jle
das
je
sub
mov
pop
or
ficom
aaa
xchg
pushf
cld
cli
out
jmp
dec
clc
cwde
lea
xchg
(bad)
jno
test
xor
jle
pop
fcom
sbb
and
dec
sbb
fcomp
out
jb
bound
sub
mov
push
lds
outs
repz
and
fsubr
cmp
add
jbe
pop
leave
ret
jl
mov
in
mov
div
outs
push
lods
xor
jg
jecxz
hlt
clc
(bad)
jmp
retf
sub
jns
add
es
jge
lods
test
cld
jo
into
fnstcw
mov
stos
fcomi
sbb
dec
pop
arpl
cmp
mov
add
jo
mov
add
adc
sub
ucomiss
sub
or
jp
fst
retf
popa
push
(bad)
adc
dec
mov
mov
add
mov
aad
xor
out
cld
loopne
dec
mov
pusha
mov
out
push
xor
inc
cdq
xor
movs
mov
out
cld
pop
bound
and
jo
inc
inc
xor
repnz
fld
shl
push
xchg
cmps
outs
add
jnp
mov
cmp
test
(bad)
push
push
inc
xor
lods
loop
inc
add
sti
mov
adc
sbb
dec
shl
jne
add
je
cwde
inc
mov
adc
mov
jl
push
fstp
lods
popf
xor
push
push
js
pop
adc
out
lds
cli
sub
sar
push
dec
call
dec
outs
jmp
lods
mov
fs
push
ret
and
lods
mov
and
fstp
lds
imul
adc
loopne
add
xor
mov
stos
jbe
pop
cmp
mov
push
xchg
mov
loope
(bad)
push
add
mov
jecxz
and
ins
inc
sub
fsubr
mov
dec
inc
inc
sub
mov
outs
and
xchg
sbb
(bad)
fld
dec
scas
jno
ss
add
loope
pop
adc
xlat
dec
dec
add
in
arpl
pushf
add
mov
cmp
mov
bound
fiadd
rcl
xor
pop
adc
fcom
in
adc
shl
shr
add
popa
push
lock
add
mov
cmp
bound
mov
cmp
hlt
stc
inc
repnz
ins
adc
pop
mov
or
loopne
xchg
shl
mov
and
fwait
les
ins
sub
cmp
bound
arpl
mov
dec
add
ror
sbb
aas
mov
sar
scas
pop
sahf
add
mov
call
and
jo
fsub
xchg
jle
add
mov
cmp
ret
aad
or
push
cmps
aam
push
cmp
push
ins
retf
push
cmc
jno
cli
add
icebp
jne
sbb
hlt
xor
sub
out
cmps
xchg
lock
cmp
outs
inc
stos
sbb
jne
dec
push
scas
mov
(bad)
push
test
or
loope
jg
retf
sbb
xchg
push
loope
jne
int3
(bad)
out
sti
fwait
repz
mov
nop
ss
inc
sub
mov
pop
add
jno
fistp
cmp
cwde
test
pop
mov
repz
or
push
(bad)
sti
inc
xchg
fsubr
adc
enter
jmp
nop
or
bound
xchg
push
lods
rol
jle
add
and
xor
fisub
out
aaa
and
add
je
popf
mov
mov
inc
jp
pop
int3
jne
pusha
jl
lock
cmp
and
mov
push
movs
cmp
mov
in
mov
pushf
mov
in
add
adc
in
adc
or
sbb
or
or
and
inc
lea
iret
aaa
pop
xchg
push
jbe
(bad)
iret
ss
push
fldenv
inc
sbb
in
push
mov
bound
push
sub
xor
adc
jno
popf
leave
pop
xor
or
and
pushf
add
in
mov
add
fist
(bad)
adc
imul
rol
in
clc
mov
and
mov
push
aaa
les
(bad)
mov
cmp
xchg
mov
imul
popa
cmp
push
js
mov
fcomp
xlat
jge
cmps
push
in
mov
push
cmps
pushf
dec
movs
push
xchg
(bad)
xlat
cmp
add
stos
sbb
sbb
jl
loop
mov
ja
stos
cmps
cmps
sub
scas
mov
je
fistp
cmp
(bad)
sti
ins
int
push
out
cmp
popa
daa
clc
sbb
sbb
addr16
popf
or
dec
jns
jbe
add
jo
int3
inc
lods
xor
xchg
loop
cwde
dec
dec
ror
jmp
or
(bad)
mov
or
ins
and
and
jnp
mov
dec
inc
out
sbb
clc
or
push
inc
xchg
test
nop
(bad)
mov
repnz
mov
popa
aaa
inc
and
adc
fadd
mov
push
xchg
dec
and
jl
(bad)
push
push
push
ret
or
lods
and
dec
inc
sbb
xlat
lods
add
bound
xor
inc
fcmove
push
xchg
dec
sbb
xor
movs
pushf
cmc
in
adc
inc
stos
mov
push
add
add
pop
in
out
and
xchg
sub
xchg
jle
lods
pop
dec
add
xor
and
sar
adc
push
jle
push
les
xchg
jg
mov
add
mov
sbb
inc
mov
xchg
inc
inc
adc
bnd
dec
add
or
or
sbb
add
inc
daa
sub
mov
sub
inc
pop
mov
aas
inc
cs
adc
movs
inc
rol
xchg
retf
cmps
dec
neg
retf
or
into
and
mov
fdivr
(bad)
icebp
mov
and
xchg
cmp
jo
iret
(bad)
mov
mov
inc
fadd
push
add
dec
and
dec
fdivr
pusha
mov
add
mov
or
inc
sub
or
cmp
xchg
mov
fsub
pop
push
ins
clc
jp
xchg
shl
push
mov
cmps
cli
stos
into
aad
sub
xchg
jns
movs
ds
push
fisubr
shr
push
inc
jp
push
push
jp
out
stc
out
ja
xor
xor
mov
sub
adc
inc
cmps
push
push
cmp
jnp
enter
cld
icebp
adc
outs
enter
jmp
and
adc
les
adc
ins
add
add
cmp
mov
add
inc
sbb
cmps
retf
pop
mov
adc
inc
fs
popa
test
pushf
jl
dec
mov
int
and
repnz
mov
out
aad
dec
cmp
add
leave
add
or
nop
jbe
packuswb
fs
mov
mov
sbb
xor
adc
fs
fld
dec
out
jmp
in
and
sbb
leave
or
daa
jmp
es
mov
rol
jno
jecxz
mov
les
cmp
xor
arpl
jno
push
adc
add
sbb
daa
outs
scas
rcl
fstp
imul
cmp
ins
pop
or
(bad)
repz
dec
loop
adc
add
jp
cmp
loope
sahf
nop
daa
jno
mov
mov
into
and
jg
cli
xor
aaa
xchg
xor
lods
add
addr16
cmp
dec
adc
popf
(bad)
cmc
inc
fisttp
fdivr
ret
xchg
and
es
and
jp
cmp
xor
out
adc
adc
pop
test
aaa
and
loopne
retf
int3
movs
sub
std
xchg
cli
inc
xor
lds
xchg
lds
mov
or
movs
outs
mov
jo
pop
cmps
and
jecxz
dec
fsub
call
adc
pop
int3
ror
vmovntps
fld
out
shl
mov
push
jecxz
rcr
dec
call
nop
jnp
push
pop
or
mov
inc
xchg
adc
jb
rcl
in
push
loop
mov
add
mov
ret
add
xor
pop
jge
sbb
xor
add
retf
popa
xchg
ret
add
xchg
(bad)
push
inc
pop
adc
jbe
jle
xchg
xor
js
adc
push
loop
pop
(bad)
fimul
and
sbb
sti
std
(bad)
icebp
add
mov
rol
xchg
mov
dec
mov
(bad)
mov
inc
scas
pop
xlat
pop
jl
xlat
sub
aas
cmp
cmp
sti
fdivr
fcom
mov
add
push
mov
imul
or
xor
adc
sahf
mov
fldenv
adc
jb
ret
scas
shl
xor
outs
mov
mov
into
nop
jo
dec
scas
popa
and
inc
cwde
or
outs
jecxz
adc
push
mov
sub
in
xadd
mov
jmp
xor
xchg
movs
rcl
cmps
or
leave
jno
arpl
test
xchg
fiadd
ret
outs
test
ja
pop
shl
inc
enter
popa
and
jecxz
cld
dec
cmp
fadd
or
int
and
xor
pop
test
jae
(bad)
fucomi
adc
cs
jle
aas
pushf
jb
ficomp
clc
sbb
(bad)
lahf
xchg
pop
adc
leave
fsub
cmp
sbb
add
xor
add
sub
mov
xor
dec
(bad)
test
daa
add
jmp
movs
enter
sbb
popa
xchg
sbb
or
call
pop
rol
add
or
push
ror
and
fidivr
repz
cmps
mov
pop
retf
hlt
and
in
and
adc
dec
fs
out
aaa
mov
fstp
daa
daa
mov
xor
rol
xchg
xor
mov
pop
daa
inc
lds
pop
adc
and
inc
test
test
add
cli
inc
pop
mov
xor
shl
rol
out
popf
mov
inc
adc
lds
adc
inc
inc
mov
sbb
xlat
out
mov
rcr
or
jmp
fucomi
adc
cmp
icebp
pushf
je
sbb
cmp
xor
ins
add
cmp
ror
inc
xor
addr16
adc
push
and
add
jp
or
dec
fsub
jnp
not
add
(bad)
repz
xchg
dec
(bad)
jmp
add
xor
add
cmp
fsub
outs
adc
arpl
data16
retf
mov
stos
sub
iret
xchg
test
xchg
stc
mov
pop
jmp
scas
dec
or
scas
out
cmc
in
mov
xchg
das
xlat
lahf
pop
pop
(bad)
shl
push
xor
dec
xchg
push
dec
xchg
cmps
add
jl
ja
or
test
push
push
xchg
dec
mov
jge
dec
or
mov
in
or
jg
(bad)
fld
dec
mov
loop
stos
emms
pusha
push
add
loop
mov
pusha
jae
jae
xchg
enter
adc
mul
add
push
mov
mov
push
inc
push
mov
jae
ret
adc
add
dec
jp
std
and
or
ja
popa
add
add
out
cmc
sbb
add
lods
adc
mov
push
(bad)
fld
pop
pop
xchg
ins
cmps
mov
and
je
in
add
push
xchg
rcl
popa
cmc
cmc
mov
leave
add
adc
pop
pop
les
fsub
inc
cmp
dec
enter
jl
pusha
mov
push
xchg
rol
dec
add
(bad)
jge
das
jb
sub
jo
jbe
(bad)
and
cs
sbb
add
add
stos
xor
(bad)
mov
mov
xchg
shl
add
fadd
frstor
add
sar
push
mov
add
sbb
mov
enter
in
and
mov
fimul
nop
fld
and
jp
xchg
sub
add
cld
and
scas
nop
or
test
sbb
xchg
lods
cmp
stos
(bad)
daa
pop
xchg
xchg
xchg
gs
dec
mov
dec
and
cwde
pop
into
adc
xor
push
push
inc
jmp
or
retf
xor
dec
cld
dec
and
lock
jecxz
std
es
cmc
push
loop
stos
fisttp
inc
call
lock
ja
mov
add
xchg
inc
aaa
inc
ss
jae
sbb
xchg
leave
and
sbb
in
push
sub
xchg
out
icebp
mov
out
and
sbb
pushf
dec
inc
outs
pusha
nop
ficom
or
jno
push
add
cmp
outs
or
push
les
or
dec
les
and
inc
mov
push
push
dec
rol
pop
mov
adc
jmp
and
in
and
and
push
jmp
dec
jnp
and
dec
fild
xor
loope
lods
dec
ins
test
and
jle
lea
in
dec
pop
daa
cmps
fadd
push
xor
xchg
lahf
je
outs
mov
pusha
xor
adc
mov
ror
pop
inc
jnp
lds
fstp
cmp
pop
xchg
mov
adc
add
mov
sbb
add
inc
sub
or
mov
mov
xchg
push
inc
sub
mov
mov
js
imul
adc
ficom
xchg
je
sub
mov
lea
(bad)
cld
mov
cmp
cmp
test
rol
loop
and
dec
lods
xor
mov
into
inc
ret
pop
inc
movs
mov
iret
(bad)
and
inc
out
mov
push
add
retf
repnz
test
nop
aaa
mov
cdq
sub
add
adc
ss
das
and
cmps
hlt
xor
outs
imul
pop
xchg
dec
jmp
aam
repz
push
out
jnp
dec
daa
retf
jne
ins
cld
aam
fidiv
pop
outs
movs
popa
pop
push
sub
(bad)
out
mov
xchg
loope
std
lahf
fadd
cmp
cmp
and
imul
inc
(bad)
stc
scas
xor
inc
xchg
cmp
out
xchg
test
bound
xor
mov
pop
xor
bound
adc
out
dec
jne
sbb
mov
xlat
mov
and
(bad)
dec
or
xchg
retf
rcl
out
mov
ret
cmp
mov
movs
xchg
adc
js
ficom
mov
add
xchg
xor
aad
or
mov
in
or
mov
inc
jbe
mov
dec
fcomp
xchg
adc
pop
jo
cmp
xchg
push
jo
and
rcr
and
sbb
fcom
ins
pop
xchg
or
push
nop
es
dec
ja
xor
into
jle
es
mov
push
xchg
(bad)
cs
outs
push
adc
xor
bound
out
and
in
movs
(bad)
in
xchg
(bad)
adc
dec
fs
mov
pop
in
ror
pop
sbb
mov
sbb
ret
ret
jmp
cmps
push
dec
push
xor
dec
aaa
or
outs
mov
stc
or
push
or
(bad)
dec
dec
imul
bound
pop
sub
jp
mov
loope
inc
fild
mov
ror
into
xor
scas
mov
ss
xchg
jp
jno
mov
xchg
jg
cmp
xor
dec
inc
fmul
movs
push
fisttp
push
inc
test
enter
xor
scas
std
or
lods
fdiv
loope
pop
mov
push
aad
pop
pop
hlt
loop
push
hlt
data16
sar
(bad)
stc
xchg
jo
mov
add
pushf
sub
push
xchg
pop
mov
scas
push
test
mov
pop
clc
push
jae
pop
sub
or
sub
jge
cmp
push
(bad)
xchg
or
pop
retf
xchg
aam
xor
cmps
fild
jbe
call
jmp
and
cmp
imul
shl
pop
pop
sbb
xchg
xchg
daa
mov
dec
pop
mov
jp
shl
lds
cld
xchg
int
jno
enter
imul
jp
movs
add
dec
sti
fmul
outs
test
in
xor
mov
(bad)
xor
mov
aas
cs
test
pop
and
push
inc
push
or
adc
push
mov
jg
loop
adc
push
jo
pop
shl
loopne
sbb
xchg
mov
or
outs
pop
mov
adc
mov
sub
gs
lods
pop
das
rcr
pop
jecxz
pop
(bad)
cmp
sub
fiadd
leave
in
rcr
fisttp
lock
test
leave
sbb
call
sub
call
ret
pop
jecxz
sbb
std
and
and
or
jg
mov
inc
sbb
dec
popf
push
and
stc
imul
in
test
daa
and
jg
add
push
inc
jle
push
std
into
jae
mov
xchg
(bad)
ror
inc
stc
out
xor
jo
test
or
mov
out
into
pop
or
fdivr
les
mov
xchg
pusha
sub
shr
ret
inc
sub
test
ss
push
mov
(bad)
mov
xor
jbe
stos
mov
dec
int3
push
inc
jle
add
push
int3
xchg
cmps
fwait
lds
mov
cmp
scas
dec
in
dec
das
adc
pop
jmp
daa
daa
and
add
push
xchg
in
dec
and
cld
fcomp
dec
adc
(bad)
repnz
sbb
lods
or
jle
pop
sbb
or
xchg
mov
and
inc
aaa
popa
xor
ret
inc
stos
int
cmp
je
xchg
loope
push
sbb
cmps
jb
jbe
retf
jb
mov
push
sar
mov
xchg
mov
and
repz
xchg
and
inc
aas
dec
sub
pop
sbb
xchg
int3
jb
push
mov
sub
and
outs
lock
in
add
and
mov
mov
adc
add
dec
mov
pop
and
je
in
cwde
lods
sahf
add
loopne
fstp
sub
adc
sar
loope
sbb
mov
cmp
mov
js
fwait
out
add
sbb
dec
ret
dec
adc
add
aaa
das
popa
xchg
mov
add
test
mov
gs
out
arpl
imul
add
cmps
js
scas
add
in
fisttp
push
pop
mov
pop
inc
xor
shl
xchg
cdq
xchg
xor
and
aam
sbb
sub
enter
and
ror
jecxz
punpckhdq
mov
lea
push
jle
repz
push
ins
les
repnz
and
cmps
imul
loop
into
in
xchg
sub
push
pop
das
(bad)
std
jns
mov
mov
mov
mov
dec
iret
dec
movs
jp
in
push
rcl
fadd
shr
ret
call
adc
dec
retf
cwde
sbb
loope
jle
repnz
fsub
pushf
jb
(bad)
bound
pushf
sahf
fisttp
and
xchg
mov
fadd
mov
sahf
std
les
ror
adc
pushf
jne
xor
xor
jns
fisttp
lahf
or
pop
sub
sti
cmps
cmp
or
popa
jo
sub
inc
leave
(bad)
sub
jbe
(bad)
add
inc
mov
inc
ja
adc
push
outs
add
cmp
loopne
add
xor
test
xchg
popf
sbb
add
inc
pop
cmovb
add
or
pop
jo
adc
xchg
lods
pop
sbb
movs
add
mov
cmp
or
xchg
xchg
xor
(bad)
pop
cmp
ret
hlt
test
lods
nop
and
sahf
rcr
add
arpl
mov
or
adc
cmps
test
fmul
ins
xchg
cwd
pop
xchg
(bad)
stc
mov
ins
mov
sub
cmp
or
add
retf
mov
ins
bound
dec
cmp
ss
jne
mov
(bad)
fcom
mov
ins
pop
mov
sub
inc
ins
fmul
sub
je
scas
stos
inc
lock
jae
imul
or
mov
lods
fcomi
xchg
(bad)
mov
ja
outs
sahf
xchg
shufps
mov
mov
stos
not
cmc
push
lods
inc
add
out
pop
fbld
xor
lea
push
pop
push
xchg
mov
cs
fwait
dec
add
add
cmp
and
xor
fwait
mov
mov
stos
inc
ss
(bad)
jo
jno
in
clc
test
ror
or
daa
dec
dec
fild
pop
mov
or
fidiv
or
mov
fbstp
popf
or
fisub
fdiv
rcl
pop
mov
into
sbb
xor
inc
mov
mov
fcomp
mov
popf
enter
add
dec
and
fadd
xchg
pushf
cli
ret
sub
jno
jle
lea
sbb
imul
add
and
outs
jge
and
out
pop
xchg
xor
sbb
nop
dec
adc
(bad)
add
adc
scas
adc
add
fdiv
inc
mov
out
jnp
xchg
in
ins
or
cwde
shr
dec
and
pop
xchg
mov
mov
jp
and
or
(bad)
aas
pop
xchg
dec
and
pop
xor
mov
xor
aas
daa
scas
shl
or
xchg
adc
mov
or
add
jmp
sub
stc
mov
daa
jnp
sbb
(bad)
and
sub
ins
popa
xchg
or
mov
mov
nop
add
or
lods
pop
jg
sub
mov
mov
fs
xchg
out
cs
mov
push
or
inc
bound
fadd
aas
sbb
push
bound
in
inc
arpl
fisub
mov
sti
sbb
es
sbb
cmp
popa
cdq
inc
fdiv
mov
lock
jg
mov
std
jl
out
xchg
add
pop
jmp
cmc
repz
push
add
xor
aaa
push
cmp
shr
(bad)
or
and
sbb
add
cld
and
fsubr
rol
xchg
mov
pop
and
and
jmp
int3
xor
dec
mov
push
loop
mov
inc
add
pop
leave
and
xor
add
xchg
or
in
cmp
loop
mov
and
movs
sub
enter
leave
(bad)
pop
test
add
(bad)
inc
or
mov
outs
clc
mov
fsub
aad
jb
dec
enter
mov
jge
jnp
mov
shl
and
push
mov
mov
adc
push
sbb
add
mov
dec
sbb
or
sbb
loop
sub
mov
cmc
test
mov
jo
sbb
fs
loop
mov
movs
in
and
daa
rol
pop
xchg
test
mov
ins
mov
and
(bad)
sar
or
add
mov
dec
fs
gs
push
dec
jle
adc
dec
daa
push
inc
push
cmp
sar
mov
jae
sbb
lahf
retf
ins
mov
(bad)
push
dec
inc
add
sbb
scas
cmp
pop
outs
shl
rcr
xor
add
mov
popf
jmp
es
(bad)
lods
xchg
jecxz
dec
movs
sar
dec
mov
dec
ret
xor
repz
dec
scas
mov
inc
dec
test
inc
jne
sbb
int
dec
gs
xchg
arpl
cmps
dec
cmps
dec
fdiv
mov
inc
sbb
ret
arpl
popa
loop
or
push
ja
pop
push
xchg
xchg
fdivr
leave
adc
mov
add
int
loopne
jmp
add
test
push
xchg
rol
and
mov
jnp
ja
test
frstor
mov
jnp
mov
rol
adc
retf
(bad)
aam
adc
push
adc
bound
cmp
mov
ja
into
cmp
das
inc
add
cdq
(bad)
shl
push
cmc
pop
xchg
fisubr
or
movs
xchg
push
cmp
cmp
adc
adc
and
sub
and
lds
(bad)
icebp
add
sbb
cwde
out
sub
daa
lahf
popa
cli
inc
mov
mov
xchg
xchg
jno
nop
dec
or
(bad)
add
inc
test
and
fld
adc
mov
sbb
xor
(bad)
dec
dec
enter
rol
cmps
xabort
ficomp
dec
adc
xchg
add
fiadd
add
aam
xchg
in
inc
retf
sbb
into
jecxz
setl
sub
call
lea
push
inc
add
in
cdq
int
add
in
js
add
sbb
fmulp
push
xchg
out
xchg
cmc
dec
jae
iret
pop
gs
pop
or
test
sub
mov
xchg
repnz
push
fist
sar
push
pusha
lods
mov
adc
cmp
mov
aas
fisttp
imul
mov
sbb
and
xor
rcl
test
sub
aad
pop
inc
pushf
add
sbb
cmps
mov
mov
cmp
mov
pusha
ret
lods
add
cwde
cli
ja
dec
call
cmp
pop
pop
sbb
mov
mov
dec
mov
aas
pop
test
mov
pop
imul
leave
and
jo
mov
mov
dec
in
outs
jo
and
ins
sbb
(bad)
ficomp
mov
dec
(bad)
shl
jmp
fst
adc
pusha
(bad)
inc
xor
lods
fcom
jmp
ret
push
mov
and
(bad)
ror
adc
rcr
mov
jmp
repnz
inc
outs
cmps
and
inc
add
add
xor
in
cmps
dec
ffree
pop
mov
mov
cmps
(bad)
pop
(bad)
arpl
movs
jno
sbb
hlt
(bad)
movs
or
xchg
sbb
lea
daa
pop
xor
xor
cmps
jge
sbb
mov
cwde
leave
push
bound
popf
rcr
test
shl
popa
icebp
dec
(bad)
cmp
test
addr16
ss
xchg
loop
hlt
mov
pop
xor
arpl
das
jne
addr16
scas
in
jb
sbb
adc
(bad)
repz
or
sub
mov
imul
dec
enter
movs
jg
cmp
mov
xchg
lock
lea
arpl
pop
sti
jp
xor
mov
retf
addr16
cmp
hlt
sbb
in
sbb
dec
bound
cmps
add
dec
and
lahf
pop
ret
sub
repz
mov
add
jb
popa
pop
mov
shr
and
add
rcr
xchg
cdq
cs
adc
add
pop
dec
mov
xchg
mov
mov
adc
pop
and
popa
mov
inc
cmp
jno
xchg
cmp
inc
fbstp
xchg
xor
(bad)
loope
fmul
pushw
in
shr
call
fistp
stc
les
idiv
les
push
jmp
sub
out
hlt
cmc
test
cmp
mov
jle
sbb
mov
add
popf
cmp
fadd
popf
loope
or
loop
shl
lods
add
xor
jne
add
in
adc
add
adc
push
sub
pop
mov
mov
and
adc
sbb
fldenv
xchg
idiv
and
fwait
add
jmp
dec
iret
jge
pop
jne
movs
fbld
scas
jnp
mov
ins
and
clc
out
or
add
dec
sbb
pop
xchg
xor
push
sar
jb
fnstenv
je
sbb
pop
pushf
aaa
ds
fdivr
and
pushf
jbe
cmp
arpl
ds
cmps
push
mov
popf
add
imul
mov
cmps
sbb
xchg
jmp
ja
push
cmp
aam
ret
add
popf
dec
inc
stos
mov
cmp
int3
stos
movs
add
jecxz
repz
jae
mov
outs
xchg
jnp
lods
jbe
mov
sbb
jg
mov
sbb
(bad)
lods
add
mov
mov
and
and
sbb
addr16
test
and
pushf
push
mov
or
(bad)
cli
jecxz
add
pop
loop
xchg
js
fsub
loopne
mov
outs
fwait
ins
ins
pusha
dec
pop
xor
dec
pop
mov
fild
cmps
das
sub
inc
lods
retf
adc
pusha
nop
shr
hlt
fiadd
out
dec
xchg
mov
enter
loop
xchg
adc
and
daa
jl
movs
add
ret
or
or
repnz
pop
dec
rcr
or
or
push
push
dec
xchg
sub
ins
cld
test
adc
arpl
ds
aaa
imul
jno
imul
sub
add
add
inc
mov
dec
xor
and
aaa
out
mov
sbb
aaa
jnp
sbb
arpl
push
mov
mov
push
fcom
enter
daa
push
mov
pusha
outs
ja
inc
jmp
je
mov
and
add
mov
mov
push
xchg
loopne
push
(bad)
adc
ret
inc
xor
jbe
mov
out
retf
adc
test
xchg
pop
dec
xchg
inc
dec
jnp
add
and
inc
mov
jae
stc
mov
fld
sbb
mov
sub
mov
dec
xchg
dec
jmp
movs
call
movs
pushf
mov
mov
sub
cli
dec
adc
scas
xor
mov
cs
add
mov
lea
jecxz
push
xchg
cmp
test
pop
push
push
lahf
bnd
push
(bad)
repz
pop
mov
xor
cmp
shl
(bad)
gs
(bad)
cli
jecxz
lods
xchg
retf
arpl
outs
sub
or
sub
xchg
jmp
std
bound
mov
mov
jnp
out
pop
cs
cmp
cmp
add
push
jae
dec
ins
adc
sar
or
and
inc
(bad)
pop
pop
sbb
push
inc
fcomp
fadd
or
mov
cmp
nop
dec
dec
dec
sub
or
dec
dec
daa
xchg
cmp
and
push
mov
inc
repnz
ja
outs
pop
mov
sbb
jmp
int3
and
neg
stos
mov
sub
test
int3
jb
cmp
mov
outs
ins
loopne
inc
pop
add
adc
sahf
fld
hlt
mov
xchg
xchg
mov
out
cmp
mov
adc
inc
mov
pop
add
sbb
nop
retf
xor
mov
add
cmp
cs
fnstenv
pop
and
movs
add
sub
jmp
loopne
inc
mov
ret
add
sub
jl
xchg
or
je
or
fimul
jae
mov
mov
cld
aaa
fisub
in
xchg
push
aaa
fbld
push
pusha
xchg
or
dec
scas
push
fsub
sbb
sti
je
mov
ins
pop
ret
adc
add
xor
out
call
push
push
je
ins
sbb
jns
hlt
xlat
sbb
mov
jne
inc
push
jle
fsubp
fisub
jmp
jl
shl
fistp
sub
add
in
fdiv
pop
into
dec
adc
and
mov
(bad)
(bad)
lock
movs
and
mov
fadd
inc
ss
mov
jb
aaa
ficomp
xor
popa
sub
cmp
adc
push
dec
pop
fwait
xchg
sbb
xlat
lods
dec
mov
pusha
nop
jg
pop
test
jmp
xor
dec
push
adc
sbb
inc
aaa
fdiv
clc
(bad)
jmp
idiv
cmps
(bad)
daa
mov
push
adc
cli
cmps
sub
pop
sub
jmp
out
jae
add
cmp
ret
mov
jmp
loopne
sbb
in
dec
fwait
mov
jne
jl
dec
(bad)
fsubr
ret
xor
sub
jno
sub
mov
por
daa
push
lods
add
and
(bad)
lods
inc
nop
call
pusha
jbe
adc
push
inc
add
lea
add
adc
scas
push
std
cmp
dec
in
push
in
and
dec
inc
mov
adc
mov
xor
cmp
xchg
sbb
dec
popa
dec
enter
rcl
add
xchg
repnz
rol
cmp
rcr
dec
ficomp
popf
add
shr
sub
mov
adc
je
add
pushf
nop
jg
je
shl
lods
sub
aas
pop
nop
leave
fst
cmp
pop
cwde
add
retf
das
clc
movs
in
xchg
(bad)
mov
jne
js
cld
mov
xlat
dec
scas
cdq
ror
popf
mov
movs
je
xchg
sbb
lods
(bad)
(bad)
or
imul
mov
push
shr
aaa
arpl
sub
loopne
push
es
xlat
cmps
lock
fs
add
mov
sbb
in
or
aam
in
xchg
dec
jmp
fmul
std
rcr
mov
lea
test
add
xor
(bad)
xchg
add
pusha
jl
aaa
sar
inc
or
push
test
pop
inc
pop
imul
and
and
enter
sub
(bad)
sbb
xchg
rcl
and
aas
lods
dec
add
inc
add
ret
sub
inc
icebp
and
inc
cmp
es
fs
pop
and
jl
bound
xchg
mov
mov
cwde
adc
shl
pop
mov
ins
add
pop
popa
or
sbb
arpl
bound
inc
fcomp
popa
xchg
mov
sbb
sub
jae
ja
add
out
test
xor
xor
fcomp
arpl
and
mov
xor
js
(bad)
dec
fmul
cwde
add
leave
fdivr
push
dec
loop
sbb
sub
repnz
xor
or
mov
inc
dec
cmp
and
push
jb
test
cmp
xor
fsubr
jne
adc
xor
push
adc
scas
loop
aad
add
ins
inc
call
push
jno
inc
fst
jo
fstp
inc
mov
or
jecxz
jp
mov
fs
pop
adc
and
das
and
(bad)
lock
(bad)
push
ja
fadd
mov
pusha
test
pushf
push
sahf
cmps
adc
xor
pop
adc
push
ja
shl
mov
xchg
inc
movs
nop
dec
(bad)
ds
pop
popa
fs
xchg
and
(bad)
cmc
inc
push
arpl
into
jnp
xchg
test
dec
test
add
fadd
sbb
jb
out
shl
jae
fmul
adc
mov
pop
dec
dec
jmp
inc
add
pop
dec
push
enter
cmp
scas
pop
push
in
fcomp
sub
loop
in
nop
push
nop
lahf
jns
cmps
push
adc
xor
ret
pusha
aas
sub
inc
and
and
ds
ss
and
jecxz
jae
xchg
repnz
outs
xchg
cmp
cwde
popf
push
daa
(bad)
inc
push
sbb
cmps
and
add
xchg
pushf
jb
idiv
mov
or
sub
in
lahf
pop
pop
adc
cmp
and
jae
xor
ss
scas
fwait
mov
mov
sub
stc
cmps
push
xlat
add
or
mov
mov
ins
movs
inc
into
dec
cs
stos
clc
push
cs
(bad)
in
loop
push
sub
scas
pop
arpl
mov
pmaxsw
aam
stc
add
jp
mul
and
hlt
and
xchg
jne
jb
repnz
cli
mov
sub
push
loope
out
fcom
xor
dec
or
ins
addr16
pushf
out
jmp
(bad)
stos
jmp
jp
adc
dec
imul
in
jmp
fdiv
mov
add
popa
call
sbb
mov
ja
int
sahf
test
aas
and
(bad)
push
test
(bad)
(bad)
and
add
loop
inc
xchg
test
dec
sub
jmp
fsub
push
jo
mov
or
cmp
or
xor
sbb
outs
int3
xor
xchg
add
fmul
cmc
test
or
int3
pop
cdq
je
mov
ins
and
(bad)
jle
jb
and
inc
push
aas
stos
push
mov
clc
adc
retf
pop
cs
test
mov
or
je
mov
pop
std
cmp
jnp
sbb
shl
rcl
adc
and
sub
push
xor
and
mov
ret
and
or
cld
and
ret
sub
test
les
xchg
fsub
daa
push
sub
mov
cmp
cmp
inc
cmp
fild
fs
cmp
and
adc
mov
scas
ret
jle
ret
inc
in
adc
rol
or
test
cmp
cmp
test
and
sbb
in
push
out
add
or
push
fadd
enter
cmp
pop
sbb
sub
mov
and
cmp
mov
adc
cmp
test
cmp
stos
and
or
int3
mov
repnz
adc
inc
mov
lahf
inc
jnp
and
leave
popf
fsubr
ficomp
outs
xchg
ret
cmc
neg
test
(bad)
(bad)
mov
xchg
faddp
sbb
pusha
xchg
add
push
mov
mov
jne
sub
mov
mov
and
pop
fstp
push
(bad)
imul
push
mov
fs
dec
push
push
movs
ret
pop
dec
lock
sbb
test
leave
in
frstor
mov
daa
in
pop
sbb
mov
popa
cmp
push
popf
inc
inc
push
xor
cli
in
pusha
jb
stos
mov
jae
mov
jne
loope
rcr
jbe
outs
in
sbb
xchg
addr16
xor
push
int
movs
inc
int3
xchg
fwait
sbb
sbb
js
or
mov
adc
add
and
shr
loop
inc
jb
push
adc
mov
and
push
lds
cmp
or
fwait
mov
mov
add
mov
pop
jecxz
push
cdq
cmp
cmp
fcomp
adc
add
movs
mov
mov
stc
inc
pop
test
lods
stos
xor
and
sub
add
(bad)
js
cmc
cmp
inc
outs
and
pop
daa
cmp
arpl
test
sub
les
inc
dec
jecxz
stos
sbb
sbb
repnz
mov
jle
push
outs
adc
imul
movs
in
pop
cld
fadd
jle
or
jecxz
mov
daa
dec
scas
test
lea
sub
cmp
pop
inc
aas
jne
iret
retf
ret
imul
xor
fsubr
sbb
dec
call
inc
out
mov
mov
vunpckhpd
fdiv
sub
and
inc
dec
adc
mov
movs
fdiv
mov
mov
adc
mov
sub
dec
sbb
loope
sbb
adc
pop
dec
adc
jns
inc
mov
ret
pop
loop
adc
xor
movs
stos
or
xchg
sub
fwait
rcr
push
xchg
mov
mov
(bad)
cmp
imul
xlat
mov
movs
sub
(bad)
fsubr
sar
(bad)
fwait
push
pop
lods
xchg
fwait
xor
cmps
popa
xchg
(bad)
sbb
scas
mov
out
push
xlat
inc
xor
pop
jge
enter
pusha
adc
and
ss
(bad)
sbb
cmp
xchg
mov
and
adc
mov
call
shr
rcl
sub
mov
adc
push
adc
pop
and
cli
ret
rcr
sub
mov
aaa
adc
push
fist
sbb
xor
sub
mov
sbb
lods
pop
or
adc
mov
rol
dec
jmp
inc
jb
add
ret
test
and
pop
jb
adc
mov
sahf
mov
mov
aam
sub
mov
or
mov
jp
fucomi
inc
cmps
scas
dec
sbb
ret
cmp
jbe
lods
aam
mov
xor
push
adc
dec
(bad)
retf
push
mov
xor
jecxz
xchg
dec
das
cmp
ss
mov
enter
sar
rcl
shl
xor
nop
pop
ret
xchg
ret
xor
cwde
test
outs
mov
nop
or
jnp
sub
xchg
and
pop
and
and
pop
pushf
dec
xchg
ins
push
adc
dec
ja
test
sbb
push
pop
retf
lods
add
mov
add
dec
leave
cmp
popa
ins
pusha
push
(bad)
push
and
test
pusha
sbb
and
inc
and
outs
mov
cmps
pusha
jns
push
stc
stc
inc
inc
mov
mov
dec
data16
sub
mov
bound
enter
add
sbb
inc
into
sbb
or
add
enter
xchg
push
fsub
or
ins
ins
rol
xor
in
mov
sahf
mov
nop
nop
sbb
jbe
ins
or
(bad)
fadd
jb
and
fadd
sbb
inc
jb
loopne
bound
in
in
jp
inc
or
mov
pop
rcl
mov
dec
outs
sub
lea
aas
cmp
fs
and
es
ret
iret
push
xchg
cmps
aaa
xor
leave
daa
out
dec
mov
mov
icebp
clc
xchg
test
retf
pop
mov
xor
movs
loop
pop
(bad)
pop
addr16
pop
js
call
cmp
xlat
pop
xchg
pop
lods
fidiv
ja
stc
sub
movs
inc
out
test
fnstenv
sbb
ret
xor
fst
mov
mov
popf
sbb
nop
sahf
mov
ins
in
and
mov
or
lods
sub
cmp
mov
es
repnz
add
out
push
mul
sbb
xor
cmp
ds
stos
fisttp
adc
adc
and
push
(bad)
daa
mov
ja
and
push
jnp
inc
adc
popf
sub
loopne
rol
call
or
test
sub
push
or
ss
mov
lds
out
inc
push
test
inc
sbb
pusha
mov
xchg
outs
xchg
mov
inc
nop
retf
std
jp
data16
xchg
mov
add
add
fisub
or
in
and
add
dec
stc
cmp
call
jns
mov
lods
loopne
rol
(bad)
push
inc
push
inc
nop
movs
neg
inc
in
pop
mov
daa
outs
lods
sub
je
ret
sub
jecxz
cmc
test
or
test
add
and
push
cmps
mov
cmp
xor
inc
clc
jmp
les
adc
mov
jae
fmul
cmp
mov
pop
inc
or
adc
fidiv
dec
push
data16
push
out
and
mov
mov
push
pop
xchg
je
shr
mov
push
sar
pop
out
fsubr
cld
dec
and
mov
push
movs
fadd
add
mov
push
nop
push
xor
xchg
ficomp
jne
or
test
jle
dec
cmp
pop
push
cmovle
punpckldq
xchg
cmp
cdq
sar
or
pop
xchg
mov
hlt
(bad)
leave
pop
sbb
adc
sbb
inc
cmps
cmp
pop
xchg
xchg
je
and
jae
jl
int
xchg
add
sub
lods
mov
loope
daa
mov
push
or
mov
loop
mov
out
adc
or
cmp
jmp
daa
fs
jns
and
test
in
add
in
stc
(bad)
dec
mov
inc
dec
data16
mov
fdivrp
bswap
adc
or
inc
sub
cmp
cmc
mov
add
xchg
xor
or
cmp
stc
shl
in
popa
out
test
push
mov
mov
dec
jbe
and
pop
out
adc
mov
mov
mov
ds
scas
movs
jbe
loop
cwde
push
push
mov
inc
lods
dec
fimul
cmp
fisttp
cmovge
mov
dec
jecxz
outs
jmp
push
inc
fistp
or
cmp
lods
dec
push
and
and
xchg
mov
lahf
dec
push
and
test
dec
sub
lahf
mov
cs
sub
dec
retf
xor
les
mov
dec
dec
(bad)
popf
popa
xchg
add
ins
xchg
retf
pushf
ja
call
and
test
outs
add
and
(bad)
mov
and
mov
pop
mov
aaa
popa
and
adc
enter
dec
icebp
sub
mov
dec
dec
jmp
or
cld
mov
dec
fistp
outs
adc
xor
enter
or
inc
js
imul
cs
cs
and
lods
test
(bad)
imul
daa
mov
int3
jo
dec
ret
xor
jmp
outs
retf
icebp
aas
inc
les
loope
(bad)
cli
clc
xchg
loope
pushf
ffree
cmp
mov
mov
aad
repnz
add
add
pop
or
scas
test
mov
jne
popf
and
sti
cmc
mov
je
jae
xlat
adc
retf
sbb
pusha
and
xor
jae
jbe
adc
add
in
les
dec
and
nop
nop
xor
cwde
gs
shl
and
cld
or
lods
pop
mov
mov
je
in
adc
std
rol
or
adc
ret
movs
add
mov
jmp
mov
ficom
inc
xchg
outs
jb
push
sbb
cmp
dec
out
setbe
mov
mov
mov
fisttp
(bad)
sbb
sub
adc
and
test
xchg
shl
mov
imul
push
arpl
and
adc
and
inc
xor
jnp
nop
cmc
std
and
movs
pop
mov
and
mov
push
inc
test
in
cmp
push
push
inc
stc
pop
stc
xor
bound
jbe
sti
ret
and
popa
rol
pop
scas
popa
scas
mov
xchg
fiadd
bound
cmp
and
and
ins
repz
cmp
sbb
shr
xchg
repnz
out
mov
rcl
or
cmp
mov
(bad)
arpl
in
pop
sub
in
pop
and
adc
mov
xchg
mov
(bad)
js
movs
int3
movs
cmps
jecxz
dec
(bad)
into
xor
mov
scas
lock
test
and
(bad)
xor
push
mov
int3
aad
cmp
adc
cmp
add
mov
push
ds
jl
das
mov
clc
movs
push
push
sbb
cdq
mov
pop
cmps
lods
pop
retf
inc
movs
adc
adc
inc
dec
daa
jo
ror
pop
dec
dec
shl
jbe
push
fadd
xchg
fprem1
jmp
movs
mov
add
in
xchg
cs
(bad)
test
outs
adc
mov
pusha
xsave
retf
and
mov
lahf
mov
xchg
or
sbb
(bad)
and
or
ror
ins
jecxz
shl
out
jo
test
cmp
sbb
sbb
inc
mov
(bad)
jecxz
dec
neg
inc
dec
lods
leave
dec
ja
jmp
jle
mov
push
mov
xchg
sti
(bad)
xor
xor
mov
sub
lahf
popa
rcl
dec
xlat
test
ret
fmul
mov
add
sub
or
stos
daa
ror
test
xor
aaa
mov
push
jecxz
mov
push
shl
jno
mov
scas
ins
xchg
xchg
sbb
sbb
dec
push
dec
push
shr
mov
sbb
or
add
fadd
pop
xor
aad
xor
fisub
mov
test
pusha
jne
loopne
outs
aam
inc
xor
sbb
jp
dec
mov
daa
pop
add
in
mov
sub
mov
and
nop
dec
out
jbe
inc
push
and
add
call
mov
jecxz
add
mov
mov
stc
or
jmp
leave
(bad)
fstp
inc
sbb
add
cmp
ds
sbb
es
pop
mov
adc
lahf
lock
push
sahf
fldcw
inc
adc
mov
call
sbb
mov
mov
out
xor
xchg
fwait
xor
adc
mov
dec
xchg
into
jnp
rol
pushf
outs
lahf
test
mov
sbb
test
ins
add
arpl
mov
sbb
bound
ja
in
fmul
xchg
jo
mov
outs
adc
rcl
cwde
nop
xchg
dec
add
mov
inc
clc
cmp
lea
add
add
ins
inc
add
sbb
sbb
push
add
(bad)
lods
add
enter
shl
dec
push
sbb
daa
jo
and
call
or
fild
ret
and
jno
mov
pushf
hlt
xor
or
cmp
xchg
fsubr
popa
xchg
fld
ficom
xor
add
jne
add
pusha
inc
push
inc
push
pshufw
mov
xor
sub
cdq
sbb
mov
and
inc
pop
aaa
mov
loop
inc
jp
xchg
pop
in
pusha
stc
arpl
jmp
in
fmul
cmp
repnz
adc
dec
frstor
jb
mov
add
mov
push
dec
test
icebp
dec
(bad)
jo
outs
int3
test
push
push
fdiv
adc
jae
call
das
mov
stc
xchg
icebp
cwde
jmp
popa
fmulp
in
test
iret
adc
jnp
xlat
mov
mul
jmp
in
retf
sub
xchg
fsub
shr
test
cli
inc
mov
lahf
test
stc
gs
outs
mov
or
push
ja
mov
fld1
jp
nop
pop
and
lds
push
inc
into
ret
jl
push
xchg
mov
ja
and
and
adc
adc
mov
push
jno
sar
mov
nop
or
mov
pop
sub
cmps
hlt
in
or
push
add
mov
pop
mov
dec
outs
mov
mov
mov
push
pop
dec
add
mov
and
dec
fmul
popa
mov
int3
or
cmp
jmp
ss
cld
bound
mov
nop
mov
sbb
shr
jo
fmul
mov
movs
inc
nop
mov
adc
xor
inc
adc
jnp
aad
sbb
ret
xor
pop
inc
fcom
jb
nop
push
pop
xchg
mov
fisttp
pop
retf
sub
sbb
and
or
outs
adc
retf
push
jnp
movs
jo
cmps
mov
inc
jbe
sub
pop
ja
xchg
push
inc
xor
sbb
xor
push
daa
jne
jmp
xchg
popa
aaa
(bad)
(bad)
xor
into
sub
fimul
xchg
int3
xchg
jl
inc
cld
mov
and
dec
(bad)
jmp
loope
cmp
rcr
mov
or
ja
dec
push
movs
imul
jmp
sbb
add
je
call
jae
push
mov
cdq
int
sub
adc
loop
movs
add
inc
sbb
or
mov
push
or
sbb
js
sbb
pop
int
outs
or
shl
xor
add
and
jbe
mov
mov
ja
cmp
movups
add
mov
jge
lahf
sub
and
push
ins
bound
or
in
pushf
test
outs
popa
sahf
(bad)
dec
pop
dec
pop
inc
ficom
xchg
push
retf
dec
xabort
rcr
scas
dec
rol
jb
sahf
ret
mov
cmp
dec
or
cmp
loopne
ret
test
add
movs
and
pop
pop
or
inc
push
sbb
ret
lods
or
add
sbb
leave
and
lahf
xchg
push
out
adc
jbe
mov
pop
repz
lods
test
adc
jns
jmp
cdq
push
ja
and
sbb
sbb
fdiv
mov
fsub
rcl
xor
or
jp
stc
mov
dec
loope
mov
inc
shl
sbb
mov
int3
je
mov
mov
jl
or
sbb
sbb
adc
fisttp
adc
jno
inc
mov
jmp
jl
cmp
rol
pop
sbb
push
cmp
inc
outs
popa
pop
and
add
ror
lods
out
xor
outs
cwde
loope
xchg
mov
fbld
and
xor
xchg
mov
cmps
sub
cmps
vmread
in
arpl
fwait
xchg
sub
loopne
inc
xchg
mov
xlat
pop
sub
ss
cmp
push
push
ret
sar
call
jg
mov
cs
loope
sti
pop
dec
pop
add
pop
jno
rol
cmp
gs
pop
xor
jnp
jl
adc
push
je
retf
and
add
cmp
mov
lock
jbe
mov
push
push
or
enter
mov
sub
shld
cmp
inc
and
adc
xor
bound
dec
stc
or
test
add
test
jne
imul
retf
cwde
xchg
dec
xchg
jecxz
sub
int
fsubr
inc
movs
or
in
adc
imul
inc
mov
jp
adc
adc
int3
jge
jo
out
inc
mov
cwde
je
(bad)
(bad)
or
retf
jnp
rol
jae
int3
shr
cmp
lods
pop
inc
xor
pushf
inc
dec
dec
gs
cmp
scas
jo
rol
push
ins
je
adc
test
inc
ds
mov
xchg
jae
outs
adc
add
dec
pop
add
nop
jg
mov
lea
cdq
fdivr
shr
or
xchg
fld
xor
xchg
fmul
add
les
jnp
add
hlt
sbb
in
(bad)
push
dec
aaa
mov
mov
aas
aad
shl
push
movs
retf
repz
mov
movs
out
pop
mov
mov
sub
and
push
outs
sbb
lahf
call
out
sub
push
ins
mov
push
jecxz
inc
popa
rol
ror
xchg
iret
dec
pop
pop
cmc
pop
inc
pushf
je
lods
lods
jge
cdq
rcr
dec
(bad)
cmps
(bad)
aaa
imul
mov
in
inc
pusha
fidivr
sub
movs
push
fisttp
push
call
gs
cmps
daa
add
push
mov
xchg
scas
or
xor
cmp
(bad)
fmul
sub
fdiv
mov
xor
cmc
clc
les
sbb
or
fsubr
arpl
cmp
xor
and
sub
sbb
xor
(bad)
pushf
clc
add
in
fs
mov
jg
in
sti
int
jle
mov
lock
lahf
push
push
or
inc
xchg
icebp
inc
dec
aas
lock
int3
push
clc
pop
jnp
mov
imul
pop
ror
sbb
mov
pop
or
dec
sbb
hlt
mov
or
cwde
cmp
mov
dec
mov
and
lea
dec
and
cmp
mov
add
sbb
mov
sbb
adc
and
cmp
add
and
out
adc
(bad)
adc
(bad)
jge
mov
pop
dec
push
shl
outs
rcl
mov
ret
fdiv
les
push
pop
int
and
xor
and
xchg
xchg
(bad)
sbb
imul
sbb
xor
jmp
fdivr
test
(bad)
push
arpl
push
call
dec
dec
stc
movs
mov
xor
(bad)
jmp
mov
jno
(bad)
dec
cld
mov
fadd
pop
mov
dec
ss
pop
add
or
imul
inc
sti
mov
pop
or
jnp
push
pop
cmp
nop
dec
add
xchg
fstp
lods
mov
pop
pusha
movs
and
inc
popf
mov
imul
nop
scas
int3
(bad)
leave
push
iret
push
mov
mov
and
jl
pushf
pop
jnp
adc
push
outs
or
xchg
jnp
pop
mov
pop
pop
add
or
cli
hlt
and
movs
arpl
stc
inc
daa
jb
lods
setbe
mov
mov
xchg
sahf
xchg
and
rol
inc
fisttp
mov
out
xor
mov
rol
mov
inc
fnstenv
fcom
or
ds
mov
(bad)
repz
popf
cmp
setbe
scas
cmp
and
enter
dec
nop
and
and
test
sbb
pop
daa
repnz
sub
mov
pop
adc
out
pop
icebp
adc
sub
dec
jl
jne
mov
and
mov
ret
hlt
mov
add
inc
in
ficomp
mov
call
outs
retf
mov
rcr
popf
sahf
jno
cld
fld
aas
push
mov
mov
mov
(bad)
xchg
aaa
cmp
(bad)
movs
sbb
and
jb
test
xchg
jecxz
(bad)
xchg
push
stos
ja
gs
pop
cmp
mov
dec
cmps
aaa
xchg
sar
xor
js
lods
jmp
in
xor
mov
push
inc
sbb
lahf
xchg
push
fmul
mov
adc
dec
les
popa
push
aam
nop
nop
jbe
mov
add
and
pop
cmp
sub
push
aaa
or
mov
sub
add
shr
movs
dec
ins
outs
dec
and
push
xor
xor
pop
and
cli
inc
push
in
inc
mov
or
inc
mov
xchg
inc
xchg
adc
add
pop
and
push
dec
je
ins
jl
inc
cmp
(bad)
or
dec
mov
sahf
stos
sbb
(bad)
enter
mov
and
test
ins
xor
or
sub
and
pusha
fadd
jge
jne
cdq
pop
xchg
fadd
inc
test
sbb
and
in
or
and
mov
xor
div
mov
cmps
aam
nop
xchg
mov
xor
xchg
xchg
add
pushf
jp
stos
lds
in
mov
or
into
jb
shl
adc
loopne
sbb
and
enter
daa
sbb
cmc
cmc
mov
jnp
nop
and
js
inc
nop
or
movs
jge
xchg
and
xor
sti
(bad)
cmps
jae
(bad)
mov
dec
out
sti
lea
jnp
add
cmp
add
mov
inc
sbb
jg
mov
pop
mov
je
in
movs
sub
mov
or
fbstp
mov
adc
pop
xchg
outs
clc
push
fidiv
aas
adc
cld
mov
xor
repnz
enter
inc
leave
inc
lahf
stos
push
cmp
int
fistp
loopne
push
dec
mov
and
push
and
sub
mov
aam
(bad)
dec
jb
jno
xchg
adc
cli
push
jno
xchg
aad
arpl
dec
mov
sub
inc
sub
mov
stc
aas
xor
mov
mov
test
(bad)
es
pop
sub
jl
adc
sub
nop
jle
inc
das
and
jmp
mov
sbb
(bad)
pop
data16
mov
mov
cmp
mov
push
movs
cmps
bound
ficom
lds
adc
push
in
inc
in
mov
inc
stos
jle
je
(bad)
inc
sub
push
or
mov
add
xchg
adc
mov
les
(bad)
cmp
or
popa
and
mov
and
dec
fisttp
xchg
pusha
in
popf
mov
xor
jecxz
mov
out
shl
pushf
daa
out
out
add
mov
inc
jmp
mov
inc
test
rcr
cmp
xchg
mov
push
jle
stos
cmp
xchg
mov
push
rol
push
cmp
and
into
push
push
pushf
jp
mov
pop
jbe
dec
dec
enter
shr
inc
adc
fild
ror
jo
repnz
retf
arpl
inc
ins
xor
ret
inc
loop
in
jno
cmc
std
and
dec
and
push
fild
add
sbb
or
mov
rcl
add
mov
or
push
push
call
dec
pop
fadd
(bad)
adc
dec
xchg
jecxz
loope
arpl
test
or
daa
push
xchg
imul
add
push
push
jbe
popf
and
scas
or
dec
lea
sbb
or
std
and
mov
or
int
dec
xchg
push
pop
push
push
push
ret
sbb
rcl
stc
xchg
(bad)
mov
in
sbb
hlt
ds
xchg
mov
inc
add
mov
mov
pop
cld
sub
fsubr
rcr
addr16
dec
dec
mov
(bad)
(bad)
fidivr
cmc
addr16
rcr
aas
mov
add
scas
retf
cwde
loope
or
scas
push
call
pushf
retf
out
sbb
cmc
inc
sub
in
mov
repnz
jge
mov
lds
enter
inc
and
fistp
xchg
and
dec
inc
into
jnp
mov
jbe
in
adc
in
(bad)
or
and
and
xor
inc
mov
iret
xor
dec
ins
in
mov
and
daa
(bad)
lds
and
xchg
shr
or
ds
pop
(bad)
jmp
mov
aaa
sbb
scas
fld
sub
push
inc
add
sahf
lahf
pop
add
movs
sub
jbe
inc
jbe
cmp
dec
out
bound
ret
xchg
addps
test
or
lods
pop
call
in
adc
mov
movs
addr16
test
dec
out
jno
add
mov
xchg
es
fadd
xchg
sub
std
and
cmps
adc
add
jbe
dec
loope
cmp
movs
inc
neg
retf
retf
and
imul
xor
retf
test
sub
out
or
in
neg
ss
ins
cmp
xor
and
ja
pushf
shl
pusha
sub
mov
xchg
push
in
inc
fisub
push
pop
xchg
test
xlat
adc
cmp
(bad)
xor
out
xchg
imul
mov
inc
icebp
dec
sbb
push
xchg
fwait
and
in
add
in
imul
ss
push
adc
fsubr
mov
mov
(bad)
in
ja
(bad)
mov
jno
dec
enter
pop
inc
mov
outs
cmp
mov
ror
rcr
push
fwait
or
or
xor
push
and
add
inc
sbb
pop
sbb
xchg
int3
and
pop
gs
xchg
mov
ret
stos
icebp
add
and
pop
and
in
bound
push
cmps
int3
jb
jo
sahf
nop
enter
push
mov
aas
dec
ror
push
mov
test
jmp
jl
jo
maxps
out
pop
test
clc
dec
sti
or
adc
cmps
add
lahf
or
or
dec
cmps
ror
test
std
cs
ffreep
add
add
xor
cld
cdq
fist
adc
sbb
loop
in
push
mov
add
xchg
mov
push
fcomp
daa
je
fimul
mov
sbb
and
test
mov
jo
inc
jns
jmp
fld
sbb
outs
xchg
dec
out
enter
xchg
cmc
clc
inc
mul
jge
or
fisub
mul
out
rol
fcomp
test
xor
cwde
jbe
les
mov
or
and
mov
dec
xchg
or
sbb
xchg
mov
inc
sub
and
shr
or
lds
sbb
sbb
(bad)
pop
dec
and
int3
mov
imul
dec
movs
add
pop
scas
sti
(bad)
iret
inc
xor
jle
push
jmp
pop
mov
call
mov
jmp
dec
cmp
lahf
lods
je
out
idiv
jb
ret
jb
jb
dec
ja
lods
sub
mov
xchg
pop
nop
cmc
into
aas
mov
mov
cmc
inc
int3
adc
inc
inc
iret
push
jp
or
add
(bad)
dec
cmp
test
imul
pop
shl
push
push
outs
popa
sahf
mov
add
inc
iret
out
stos
in
mov
mov
jmp
cmp
into
cmp
aam
xchg
pop
adc
cmps
push
adc
arpl
inc
movs
jbe
sbb
pop
sbb
mov
or
movs
sete
xchg
fs
and
leave
cmp
mov
pop
sbb
ins
ss
rcr
lea
cli
jne
mov
and
add
lods
inc
adc
sbb
sar
inc
push
cmp
and
fist
push
sbb
jno
mov
call
(bad)
(bad)
stc
xchg
pop
lods
sub
or
sbb
sub
sub
dec
into
aaa
fdivr
movs
ror
enter
xchg
ja
sbb
lahf
push
jmp
dec
in
scas
push
in
outs
or
cwde
push
test
repnz
sbb
ins
push
vmovntps
lea
repz
repnz
mov
push
xchg
jns
adc
mov
jge
mov
mov
sub
jns
dec
retf
mov
(bad)
mov
call
imul
retf
adc
pop
push
and
into
dec
sbb
add
pop
faddp
popa
scas
in
or
movs
repnz
add
mov
dec
enter
push
hlt
add
add
les
dec
jae
mov
cli
nop
jmp
ds
test
and
pop
adc
pop
iret
xor
xchg
mov
lea
pop
adc
or
push
mov
push
lock
jne
outs
jb
cmp
cmp
fsub
arpl
push
ror
add
xchg
popa
mov
fisub
enter
xchg
mov
jmp
mov
mov
mov
pop
fwait
cmp
mov
ror
pop
adc
int3
push
popa
(bad)
les
jno
ret
movs
(bad)
les
mov
adc
push
add
mov
(bad)
sub
dec
fistp
outs
cmps
sub
fld
movs
sub
les
and
jge
dec
test
dec
mov
or
inc
(bad)
jb
fisub
push
xchg
retf
pushf
outs
movntq
enter
sbb
pushf
sahf
mov
jo
dec
fstp
mov
inc
mov
das
daa
sub
in
ret
movs
adc
dec
push
call
and
shr
cmps
xor
pop
push
xor
pop
mul
jl
call
movs
cmc
add
jae
movs
jl
jle
pop
movs
jge
aaa
loop
stos
mov
mov
mov
lock
jmp
mov
out
rol
(bad)
leave
mov
(bad)
or
aam
dec
(bad)
int
jmp
and
xchg
bound
loope
xor
fild
(bad)
sub
mov
pop
adc
add
push
mov
pop
mov
push
icebp
or
cmp
int3
and
and
stc
inc
pop
ret
inc
rol
or
pop
nop
jmp
retf
movs
and
aad
dec
fsub
xchg
jp
mov
rcl
scas
xor
mov
js
pop
xchg
xor
les
mov
and
loopne
jge
mov
ss
cwde
xchg
pop
lods
adc
cdq
(bad)
clc
outs
test
or
ds
pop
fwait
mov
jb
inc
xor
sbb
jmp
fsub
sbb
les
daa
push
or
push
in
xchg
out
dec
test
clc
(bad)
shl
inc
jg
(bad)
sbb
les
dec
test
adc
gs
and
xchg
sbb
jae
cmp
jbe
test
and
out
rcl
scas
dec
loope
outs
adc
fnstsw
jp
js
fldcw
dec
fld
sub
dec
test
xor
ds
mov
or
(bad)
and
xor
sbb
dec
pop
out
ds
ret
inc
and
mov
imul
ds
pop
pop
out
jno
in
(bad)
push
xor
daa
daa
cmp
or
mov
mov
xchg
dec
shl
imul
cmc
xchg
int3
xor
xchg
mov
pop
sub
popa
mov
and
lods
dec
sbb
jmp
xchg
dec
and
inc
xchg
cwde
dec
mov
sti
mov
fild
daa
cwde
add
adc
fstp
les
mov
retf
cmp
aaa
inc
adc
mov
fcomp
rol
cmp
scas
adc
jnp
or
sub
popf
or
mov
lds
cs
dec
pop
sar
add
inc
pop
es
pop
cmps
pusha
xor
push
sub
mov
or
add
(bad)
rcl
fucom
ins
adc
inc
jmp
add
mov
stc
ucomiss
frstor
fwait
adc
bound
ffree
jno
adc
fucomi
push
pop
les
ins
or
psrlq
adc
cmp
test
mov
in
fs
sub
shufps
and
xor
mov
jmp
rol
add
xor
sub
cmps
or
retf
mov
fdiv
xor
jo
jbe
les
mov
inc
cmp
in
add
inc
sub
dec
pop
ficom
sub
mov
cmp
pop
rcr
mov
xchg
pop
movs
dec
push
imul
in
out
ss
popa
cld
mov
aam
mov
leave
sub
(bad)
into
not
repnz
sub
adc
(bad)
push
and
cmp
add
dec
push
and
xchg
test
adc
mov
aas
xchg
xchg
adc
std
test
and
lods
sub
sbb
inc
jmp
sbb
jge
jno
add
cld
mov
pushf
leave
les
ins
add
movs
outs
jbe
div
out
int3
mov
add
rcr
aad
pushf
jl
cmp
repz
jmp
jno
stos
sbb
aas
xchg
mov
push
pop
pop
jb
daa
jae
test
outs
shl
pop
test
mov
stos
jge
and
add
std
and
lods
ret
inc
(bad)
call
fadd
jl
fs
sub
cwde
in
ins
or
pop
and
cmc
xchg
movs
and
inc
add
fcmovnbe
and
jo
inc
addr16
add
jge
xchg
dec
dec
and
inc
in
xchg
mov
xor
pushf
push
int3
movs
fdiv
jl
inc
mov
xor
xchg
jle
push
les
imul
mov
add
sahf
sbb
sbb
sti
(bad)
xchg
sbb
lock
cmp
lock
arpl
sti
mov
jns
outs
shr
int3
outs
dec
retf
sub
inc
ja
mov
add
sbb
test
sub
or
jns
pusha
dec
inc
cmp
pusha
cmc
push
and
les
push
jb
cli
mov
cdq
(bad)
dec
into
clc
enter
mov
arpl
enter
push
lahf
mov
cmps
and
sbb
lds
pop
lds
or
pop
popa
adc
movs
xor
out
sbb
jnp
in
ins
pushf
jecxz
and
cmovge
and
cwde
pop
cmp
sbb
add
aam
xor
cmps
imul
loop
sbb
loope
cmp
adc
lods
jmp
outs
jecxz
mov
dec
pop
aaa
jecxz
mov
in
cmp
mov
mov
movs
hlt
fld
sahf
pop
xchg
mov
into
or
fcom
and
sbb
(bad)
fsubr
repnz
or
and
pop
sti
ret
add
movs
daa
(bad)
cmp
mov
test
adc
adc
out
je
jb
push
loopne
in
jl
lds
fwait
test
xlat
xchg
xor
out
sub
cmps
push
push
push
nop
lods
(bad)
adc
mov
xor
fs
xchg
adc
sahf
cmp
sub
xor
pop
adc
adc
inc
sub
les
add
hlt
xchg
cmp
pushf
pusha
or
mov
dec
inc
int3
xor
inc
fadd
inc
pusha
test
ret
mov
sbb
sub
sbb
ficomp
movs
out
inc
mov
jbe
(bad)
push
setbe
adc
and
movs
add
loopne
aad
push
daa
xlat
add
mov
mov
xchg
movs
jbe
ins
jb
repnz
sbb
retf
(bad)
in
call
in
mov
mov
and
rcl
xchg
cmps
test
sub
shr
mov
pop
in
xor
cmp
das
mov
scas
jno
or
push
sbb
push
imul
out
stos
push
dec
push
loop
sbb
mov
test
idiv
push
clc
in
retf
lods
jbe
xchg
into
out
std
iret
lea
inc
test
adc
shl
rol
ins
pushf
ins
jmp
cs
adc
fld
mov
xchg
mov
dec
add
fisttp
imul
js
outs
leave
push
sub
pop
pop
xchg
sub
cmc
fadd
mov
mov
jae
jno
test
adc
or
inc
mov
jbe
lods
add
cmp
sbb
adc
leave
mov
int3
mov
xchg
adc
jmp
pusha
or
leave
add
data16
movs
adc
fstp
pop
xlat
or
pop
add
leave
fist
jmp
cmp
mov
and
shl
dec
inc
cmp
and
dec
xor
xchg
lahf
jnp
or
and
ja
dec
xor
arpl
add
cmp
in
adc
in
cwde
int
adc
movs
xor
popf
xchg
test
pop
adc
retf
sti
mov
ja
dec
push
pop
xchg
cli
lea
xchg
mov
and
jb
(bad)
sar
or
adc
add
pusha
leave
and
inc
xor
adc
and
cmp
pop
pop
xor
scas
mov
into
mov
imul
fisub
cmc
cs
lods
in
mov
add
neg
sbb
out
cmps
icebp
xor
mov
pop
push
rep
or
cmovg
adc
jmp
jbe
push
aad
leave
fist
cmp
and
adc
dec
sbb
dec
pop
das
out
(bad)
icebp
mov
sbb
sub
adc
mov
xor
cmp
sub
in
repnz
mov
or
pop
outs
std
and
add
stos
fldcw
dec
fstp
(bad)
rcl
mov
fist
mov
jnp
xchg
sbb
fwait
out
sub
and
enter
rcr
sub
mov
repnz
leave
and
mov
dec
dec
push
mov
push
neg
sub
add
sub
cmp
push
fsub
push
rcr
or
or
cmp
call
ins
cmp
jg
mul
ret
in
mov
into
jp
sbb
cwde
imul
jge
jno
sub
add
or
and
inc
dec
retf
mov
mov
fcom
xchg
mov
sub
xor
dec
adc
cmp
pop
inc
scas
enter
mov
add
mov
sub
sub
jp
inc
ret
inc
or
(bad)
sbb
add
sbb
mov
loop
mov
inc
xor
mov
inc
push
cmp
bound
data16
sbb
test
and
cmp
ja
mov
or
add
mov
push
rol
into
shl
xor
nop
sub
xchg
add
rcl
xor
sar
add
xrelease
imul
pusha
or
dec
jb
hlt
sbb
out
or
ret
mov
or
pop
adc
test
jo
loop
sbb
cmp
das
and
add
push
shl
and
cs
sbb
cmp
cdq
mov
js
adc
xchg
test
mov
push
addr16
fs
xchg
sbb
out
out
imul
inc
hlt
jne
inc
(bad)
sub
shr
xor
pop
mov
pop
ds
pop
jl
js
pop
adc
sub
scas
sub
in
imul
xor
sbb
icebp
mov
inc
jg
pop
xchg
mov
jo
lea
push
call
je
inc
dec
arpl
retf
aaa
jb
pop
jno
dec
aas
aam
or
push
in
or
sbb
shr
cmp
add
ret
cmps
xchg
push
fmul
loop
and
push
sbb
or
(bad)
in
cmp
fistp
sub
push
adc
cli
jbe
xchg
test
scas
push
inc
mov
sbb
scas
lods
sub
daa
jae
loope
jb
sbb
movs
sub
mov
mov
or
push
or
and
in
cmp
pop
push
call
mov
jae
jl
and
adc
in
push
push
ret
movs
nop
inc
mov
bound
in
or
ja
ins
cmp
mov
ja
sbb
jne
arpl
inc
mov
jp
fisttp
mov
mov
pop
sub
mov
mov
inc
mov
ja
adc
ffree
outs
loop
pusha
out
ret
jo
dec
(bad)
enter
ror
xchg
movs
inc
and
jg
dec
mov
test
push
push
xor
and
rep
xor
sub
xchg
leave
cmp
add
and
mov
nop
popa
and
fnsave
jb
mov
inc
in
test
ret
dec
xchg
xchg
or
icebp
dec
sbb
adc
adc
mov
mov
mov
xchg
cmps
sub
jne
cs
add
and
inc
pop
lock
cs
scas
fsubr
lds
fidivr
inc
push
stos
jb
or
mov
push
pop
imul
movs
inc
leave
push
lea
xchg
xchg
rcl
mov
xchg
out
or
loopne
ins
dec
mov
jbe
add
rcl
ins
adc
or
ins
add
xchg
add
add
popa
pop
gs
sbb
cmp
or
pop
in
xchg
shl
pop
inc
mov
aas
sub
sub
and
xchg
dec
inc
dec
ds
mov
mov
fcomp
cmp
sub
std
mov
jb
push
int3
or
sbb
xchg
xor
shl
jae
xchg
ja
scas
and
stos
rcl
out
(bad)
cld
ror
mov
loope
inc
xchg
daa
es
in
xor
clc
jno
das
ja
das
imul
scas
not
mov
js
pop
enter
push
xchg
pushf
sbb
inc
test
xor
aas
cmc
les
cmp
xchg
add
and
mov
mov
lds
imul
stc
jmp
and
or
cld
nop
jno
jecxz
(bad)
push
inc
jns
loopne
hlt
mov
mov
adc
nop
jns
inc
jge
outs
jb
inc
jecxz
adc
sub
rcl
(bad)
js
fwait
and
and
aas
fisttp
mov
call
bound
sub
mov
mov
stc
cmp
test
enter
lods
pop
push
adc
mov
scas
mov
fs
aam
in
jmp
xchg
pop
mov
cmps
pushf
dec
int3
push
mov
repz
inc
mov
sub
push
cmp
cmp
add
mov
jl
aad
cmp
xchg
xchg
or
mov
shr
fsub
in
adc
or
add
sub
xchg
sbb
jno
in
adc
test
lds
in
fwait
ror
mov
mov
cld
bound
mov
icebp
jmp
xchg
pop
enter
or
mov
test
xchg
mov
inc
in
lds
mov
stc
mov
pop
mov
mov
sub
push
xchg
dec
push
rcl
add
xchg
sbb
dec
or
and
sub
xchg
xchg
mov
hlt
or
and
add
mov
push
es
fs
push
xor
mov
mov
xchg
icebp
xchg
dec
ficom
ror
add
push
es
mov
test
xchg
pusha
test
ja
inc
xchg
in
inc
jmp
and
and
shl
push
add
shl
dec
jns
ins
dec
mov
movs
fs
or
xor
iret
icebp
jl
pop
mov
xor
test
daa
or
mov
mov
push
sub
mov
pop
inc
ret
jnp
jle
inc
jmp
jbe
xchg
movntq
dec
mov
mov
ret
movs
inc
mov
test
ins
pop
xor
mov
push
pop
mov
mov
mov
jecxz
stc
jl
test
arpl
or
retf
and
and
add
js
cmp
jo
inc
in
jmp
xchg
sbb
test
arpl
xor
stos
jecxz
xor
inc
pusha
jnp
ret
fld
xchg
mov
and
mov
inc
xor
aas
stos
and
or
xchg
add
gs
fstp
(bad)
lods
daa
push
scas
sbb
sahf
mov
inc
mov
mov
fs
inc
mov
jle
mov
jbe
cmp
xchg
add
xchg
add
sub
int3
push
push
and
es
sub
stc
ret
pop
xor
jne
or
xchg
mov
popa
cmp
int3
jb
mov
test
and
ds
js
dec
xchg
sub
mov
add
test
and
dec
xor
adc
mov
ret
xor
lea
add
in
inc
outs
jo
xchg
cmp
ds
adc
inc
sub
inc
jmp
mov
out
fisub
and
adc
int
les
cmps
sub
sub
movs
jns
mov
popf
push
ror
int
inc
inc
fdivr
daa
outs
sbb
push
mov
xchg
fldcw
xlat
sub
push
lock
mov
mov
movs
xor
retf
xchg
repz
(bad)
scas
sub
sub
iret
push
popa
mov
push
push
popf
sahf
in
out
fisttp
test
add
dec
add
push
pushw
repnz
or
xchg
or
nop
aaa
cli
jl
sub
jb
pop
xchg
aaa
inc
call
inc
sub
mov
push
push
(bad)
push
inc
test
adc
mov
push
fscale
arpl
jnp
ret
adc
pop
repnz
mov
imul
mov
adc
mov
inc
retf
scas
movs
or
dec
cmp
(bad)
movs
dec
cmp
dec
add
xor
add
xchg
arpl
or
outs
jmp
jb
adc
leave
push
cmp
adc
test
sub
nop
fld
in
or
dec
inc
xchg
mov
das
ins
hlt
cmp
adc
fcomp
loopne
ret
jo
test
dec
dec
and
nop
cmp
mov
imul
and
sub
sbb
xor
and
cmp
test
cwde
in
or
push
xor
ins
hlt
xchg
or
jnp
sbb
ret
xor
(bad)
xor
or
in
inc
and
mov
mov
nop
and
outs
dec
sbb
dec
and
in
in
cmps
push
cmp
test
mov
mov
sbb
inc
cmp
add
inc
das
sub
and
hlt
jmp
mov
ret
jmp
aam
pushf
inc
lods
sub
outs
bound
sub
retf
jbe
and
mov
pop
pusha
fld
jp
ins
in
xor
je
pop
test
in
cmp
leave
push
test
inc
cmps
fisttp
pusha
inc
gs
or
aam
adc
les
js
clc
cmps
retf
(bad)
scas
imul
mov
ucomiss
pop
sar
add
jne
test
mov
aaa
and
pop
bnd
outs
aas
xchg
movs
arpl
rcl
div
in
sbb
ret
dec
xchg
movs
nop
add
inc
ror
retf
cli
mov
add
(bad)
sub
mov
cmp
shr
dec
xor
jae
adc
and
or
mov
pop
je
in
ss
(bad)
in
add
xchg
aaa
sub
mov
sbb
in
mov
and
push
jg
mov
outs
sub
cld
mov
test
and
dec
add
push
mov
mov
std
pop
arpl
fld
inc
stc
arpl
mov
push
lea
push
ror
adc
jbe
xchg
xor
imul
addps
pop
and
stc
inc
pop
adc
xor
adc
ror
jmp
dec
push
and
iret
test
push
sar
outs
push
mov
mov
shl
adc
mov
pop
mov
mov
fmul
xchg
mov
adc
test
ficomp
cmps
rcr
push
push
adc
jne
jno
push
and
popa
fs
hlt
fdivr
inc
or
pop
das
xor
dec
dec
js
inc
lock
pop
shr
mov
retf
fcom
aas
lock
lods
add
push
pop
out
push
je
pop
push
imul
lods
lock
aam
in
inc
loopne
dec
out
jmp
sbb
cdq
pop
push
sub
std
inc
addr16
sbb
pop
jl
icebp
xor
mov
xchg
ss
cmc
inc
in
test
sahf
push
aaa
out
or
cwde
movs
pusha
pop
movs
dec
gs
aaa
in
mov
mov
adc
and
pushf
ins
cmc
sub
lds
nop
lods
push
ret
fcom
xrelease
out
or
jl
mov
inc
ror
ja
rcl
test
xchg
cmp
cmp
or
mov
test
push
mov
jecxz
sub
jns
popf
jns
pushf
pop
fist
xchg
inc
fimul
lahf
add
out
outs
loopne
dec
scas
std
jmp
hlt
or
pop
fisub
pop
inc
sub
neg
mov
faddp
push
in
xchg
nop
xchg
fisub
push
inc
inc
adc
jns
cld
cmp
ss
test
inc
push
bound
push
jecxz
push
rol
aaa
cmp
xor
push
outs
les
mov
dec
sbb
mov
sub
cmp
push
cbw
and
stos
cwde
lahf
vmovsd
fstp
sbb
and
les
repz
lods
loopne
xchg
xchg
xchg
adc
xchg
jno
mov
add
sbb
cmp
jl
dec
pop
xchg
cs
xchg
leave
dec
dec
add
scas
js
xor
push
ss
lds
pop
mov
inc
repnz
jge
repnz
lods
arpl
shl
pop
jmp
loop
push
and
xorps
mov
mov
cld
pushf
stos
xor
enter
aas
push
test
xor
push
jle
sti
(bad)
fsub
cmps
adc
loope
mov
mov
pop
cmp
loopne
add
loop
ins
adc
and
add
bound
in
pop
add
daa
or
xchg
dec
dec
shr
aam
dec
fldz
xor
pop
sar
in
dec
inc
push
or
add
jnp
(bad)
sbb
out
popa
push
xor
fbld
dec
sbb
bound
sub
mov
inc
adc
add
cmps
fwait
gs
rcr
inc
or
clc
popa
aam
xchg
lods
adc
xchg
ja
mov
repnz
lods
setae
dec
in
xchg
pop
inc
(bad)
cmp
in
inc
mov
movs
xor
and
scas
add
push
inc
test
shl
adc
pop
xlat
mov
push
jae
loopne
adc
outs
mov
pusha
adc
adc
inc
sbb
and
adc
sbb
adc
loopne
adc
arpl
cmp
xor
adc
and
outs
lods
sub
mov
mov
nop
aam
js
in
cmp
leave
sbb
ficom
jns
sub
fstp
adc
inc
add
mov
mov
xchg
(bad)
sti
inc
push
sub
or
aaa
les
test
xor
ins
jae
mov
xchg
in
in
std
push
icebp
mov
daa
std
sti
xor
pop
stos
or
jo
call
imul
jge
xor
sbb
adc
lods
and
in
mov
inc
sub
push
jbe
inc
ins
pop
jnp
dec
push
aaa
sar
and
push
inc
scas
xchg
cmp
sbb
adc
add
xchg
icebp
xchg
fnstenv
enter
imul
xchg
adc
inc
xchg
inc
jecxz
pop
cmc
test
lods
(bad)
loopne
xchg
ja
ja
pop
in
pop
adc
(bad)
adc
ins
xor
xor
jae
mov
inc
mov
loopne
xchg
and
push
popf
xor
loopne
lods
ror
cmp
les
rol
fsub
in
sub
stc
sbb
jecxz
and
rol
mov
and
mul
adc
sbb
sub
dec
(bad)
lock
and
inc
adc
add
add
and
mov
mov
add
xchg
fcom
and
sbb
fadd
fdiv
xor
pop
push
adc
inc
inc
jmp
in
fs
jno
or
fsubr
imul
sbb
data16
lea
mov
push
push
mov
clc
mov
push
(bad)
inc
popf
xor
xchg
add
pusha
cmp
inc
out
or
stos
jno
xchg
leave
adc
sbb
int
ret
gs
jae
fnsave
sbb
test
xchg
inc
cwde
fcomip
and
mov
add
mov
sbb
mov
dec
std
and
div
mov
int
retf
(bad)
xor
(bad)
std
dec
retf
pop
enter
mov
jl
add
movs
adc
rol
cmc
mov
mov
sub
cmp
sbb
pop
mov
pushf
(bad)
(bad)
nop
jmp
arpl
popa
jb
sahf
push
popf
iret
dec
stos
jmp
dec
aaa
std
and
cld
dec
jae
ss
or
pop
push
push
mov
sbb
adc
mov
inc
jmp
xchg
adc
mov
cmovae
sub
or
mov
cwde
ins
inc
outs
adc
adc
fiadd
and
cmp
dec
xchg
sbb
(bad)
cli
cli
inc
in
pop
popa
xchg
add
fucomp
fimul
sbb
pop
test
rcl
lods
and
loopne
out
push
and
add
inc
sbb
xlat
(bad)
and
jl
aas
or
mov
out
cmp
xchg
aad
or
lods
dec
and
and
sbb
daa
jbe
push
test
pusha
sbb
test
and
test
in
pushf
sbb
int3
jb
add
inc
(bad)
sbb
ins
and
addr16
push
sbb
mov
fadd
out
pusha
cld
mov
jl
shr
or
sbb
xchg
loope
nop
scas
bound
jl
sbb
xchg
dec
ret
pop
mov
mov
cmp
in
(bad)
and
or
push
(bad)
xchg
das
sub
stc
xchg
and
es
push
fstp
test
mov
aaa
inc
rcr
xchg
xor
popa
push
ror
jno
popa
mov
or
sbb
jb
outs
add
inc
rcr
sbb
mov
and
in
leave
inc
jl
mov
xor
xor
jo
rcr
inc
mov
fbstp
add
je
xor
cmc
mov
dec
push
xor
adc
mov
add
cmp
jbe
imul
add
test
push
in
(bad)
(bad)
and
clc
xchg
lock
fist
cld
sub
lods
mov
jb
adc
mov
dec
and
popf
mov
mov
cmp
or
test
mul
ret
ja
movs
loope
fwait
xor
pop
cmps
movs
shr
xchg
fmulp
call
ja
lea
dec
add
(bad)
push
in
vsqrtsd
sub
and
ins
jb
leave
jnp
test
fisttp
ficom
loop
jmp
dec
fild
cwde
xchg
out
inc
fwait
in
xor
sbb
adc
in
xor
enter
and
mov
pushf
nop
pop
shl
out
adc
std
jle
lea
loope
dec
inc
adc
mov
lea
add
pop
and
leave
cmc
out
add
push
xchg
mov
adc
mov
or
test
xchg
fs
dec
push
add
(bad)
aaa
xor
mov
adc
jmp
les
mov
das
and
add
and
cmp
stc
rcr
and
outs
adc
adc
and
in
ins
add
jnp
retf
and
jnp
adc
cmp
lahf
xchg
or
sub
stc
xchg
jno
mov
lods
neg
mov
(bad)
nop
push
dec
cmp
enter
(bad)
xor
sub
cwde
mov
push
add
cmp
inc
xor
lods
inc
mov
cmp
jecxz
nop
imul
jb
or
inc
mov
mov
(bad)
in
inc
or
xchg
adc
ror
loop
xchg
push
xchg
mov
xchg
xchg
lods
xor
sbb
ror
mov
ret
mov
cld
dec
js
retf
xchg
mov
push
dec
outs
shl
gs
shr
jmp
xor
push
push
les
movs
dec
retf
push
sbb
xchg
inc
in
inc
xchg
mov
inc
mov
dec
or
fld
out
repnz
into
shl
jnp
and
in
xor
retf
cmp
dec
sub
pusha
je
and
fnstcw
inc
or
mov
ja
fst
xor
push
sbb
pop
mov
mov
mov
jnp
pop
fadd
jae
inc
and
jmp
movs
adc
mov
ins
pop
lods
mov
std
lahf
cmps
mov
or
fisttp
add
adc
iret
retf
jg
xchg
repz
out
and
mov
or
xor
xchg
stos
and
inc
les
cmp
dec
(bad)
pop
cli
mov
sub
jmp
dec
add
mov
xchg
pop
fadd
mov
into
xor
sbb
pusha
push
jo
test
out
cmp
fbld
repnz
xchg
push
cmp
imul
mov
shl
mov
in
xchg
add
xor
adc
les
shl
lahf
sub
leave
fadd
adc
push
fmul
xchg
(bad)
pop
stc
pop
and
ret
xor
jno
daa
jo
or
pusha
inc
or
adc
mov
jb
xor
cdq
pop
pop
inc
pop
aas
xchg
bound
fwait
mov
dec
jl
cmps
mov
push
adc
pushf
test
jmp
jns
inc
gs
loop
mov
jecxz
repz
hlt
sahf
sub
sub
ds
mov
jae
lods
add
adc
sahf
ret
jb
dec
add
js
mov
adc
pop
dec
jecxz
movs
and
sub
or
pushf
arpl
or
gs
outs
pop
ins
(bad)
mov
dec
jmp
or
cmp
add
add
jmp
js
mov
push
fidiv
retf
mov
xchg
loopne
mov
adc
xchg
imul
push
xchg
or
cld
loope
or
fwait
add
arpl
cs
sub
or
mov
loopne
test
dec
adc
and
and
ss
jmp
(bad)
inc
stos
add
pop
pop
push
and
push
adc
mov
test
add
rol
inc
push
jno
fiadd
mov
add
fsubr
cwde
mov
push
mov
lods
dec
cwde
jmp
jne
adc
pusha
mov
stc
cmp
dec
push
scas
shr
call
cwde
lods
pop
arpl
xlat
ins
push
mov
pop
mov
imul
sar
pop
push
jle
push
es
hlt
and
cmp
scas
cmps
cmp
jmp
xor
xchg
in
test
cdq
jns
icebp
xchg
dec
mov
cmp
scas
loop
ds
leave
call
int3
(bad)
call
test
mov
out
adc
and
movs
adc
ret
nop
mov
rcr
push
jno
or
xor
fistp
stos
add
jmp
dec
leave
(bad)
adc
or
outs
dec
popa
call
and
lds
into
jge
xchg
mov
pushf
outs
aam
or
bound
ins
mov
(bad)
enter
cmp
jns
fucomp
ja
mov
or
iret
outs
shr
jbe
test
in
jno
js
dec
ret
ds
fisub
arpl
inc
scas
ror
jae
fimul
or
nop
aad
xchg
mov
aas
pushf
sub
mov
fisub
push
sbb
inc
pop
fcom
mov
dec
push
dec
xchg
xor
hlt
sbb
movs
dec
pusha
xchg
sbb
in
mov
mov
call
jno
test
inc
in
popa
inc
fiadd
out
aas
sub
jns
in
mov
scas
dec
xchg
lds
push
xchg
push
xor
cmp
xchg
cs
mov
xor
or
xchg
adc
jge
retf
das
jb
mov
pop
daa
xlat
shr
fcom
sub
jp
icebp
jl
xchg
xchg
push
sbb
xlat
inc
jecxz
pop
aad
dec
xchg
out
cwde
jmp
mov
pop
inc
jmp
xor
pop
xchg
jle
and
pop
movs
jns
jg
xor
pop
pop
pop
jns
adc
adc
in
sbb
push
xchg
mov
push
fld
test
push
loopne
and
add
cwde
xchg
test
pop
push
dec
lods
dec
stos
mov
adc
dec
dec
bound
xchg
mov
lds
(bad)
sahf
rcr
xchg
int
cmps
mov
addr16
fnstcw
push
std
xchg
aaa
jne
mov
push
adc
cmc
pushf
loopne
aam
add
adc
movs
popa
pop
sub
int
sub
sahf
and
aam
int
add
jno
(bad)
jmp
or
fisttp
ret
fdiv
and
les
or
add
rol
bound
add
xchg
mov
bound
mov
cmp
inc
fwait
adc
jmp
jnp
xor
pop
and
enter
sub
xchg
sub
xchg
push
and
je
and
and
sti
mov
jnp
xchg
test
out
cdq
sub
add
ret
sub
ret
mov
ror
push
(bad)
jnp
inc
mov
sbb
xor
sub
sbb
push
jo
jp
ins
mov
add
(bad)
adc
adc
pop
in
cmp
mov
or
les
cmp
mov
adc
cmp
retf
sbb
ror
push
dec
xor
inc
or
loope
sub
or
or
lods
sub
ret
dec
or
sub
mov
jge
sbb
retf
stc
sbb
cmp
scas
pop
or
push
mov
mov
out
adc
inc
ja
nop
add
sub
bound
test
and
test
and
and
pop
nop
jle
sbb
cli
sar
in
mov
and
sub
sar
pop
mov
into
jge
sti
les
mov
mov
add
sti
nop
add
push
fsubp
push
add
ds
es
inc
cmp
inc
ds
in
mov
imul
xchg
add
or
jecxz
hlt
mov
mov
mov
xchg
add
dec
sub
sbb
iret
pop
mov
sub
push
xchg
jmp
pop
stos
jb
push
sub
adc
xor
mov
mov
icebp
mov
adc
cwde
sub
sahf
xchg
pop
pop
cmp
mov
mov
mov
leave
fcom
cmp
push
xchg
add
(bad)
pop
enter
mov
xor
jmp
xchg
pop
mov
dec
mov
in
push
bound
aaa
xchg
into
pushf
pop
retf
xor
or
inc
fmul
fwait
mov
push
or
iret
into
adc
inc
mov
scas
pop
lods
leave
adc
dec
dec
sbb
push
xchg
xlat
cmp
push
mov
je
jb
dec
shr
and
add
pop
gs
or
cli
(bad)
lock
sub
(bad)
out
jmp
mov
cmp
jno
sbb
adc
mov
mov
and
cmp
and
shl
jp
add
shr
add
push
mov
xchg
sub
adc
rcr
sub
leave
add
push
adc
loopne
mov
(bad)
rol
or
in
or
xchg
icebp
mov
sub
(bad)
and
imul
(bad)
cmp
in
adc
add
adc
sub
push
or
add
icebp
lahf
jmp
test
cmps
and
fdivr
push
dec
into
dec
sti
(bad)
faddp
jmp
pusha
jecxz
or
aad
jo
int3
idiv
xchg
js
(bad)
adc
dec
push
hlt
mov
xchg
or
pop
test
fimul
std
outs
and
mov
lds
adc
xchg
std
out
popa
and
shl
and
adc
ret
or
adc
or
mov
pusha
ins
xchg
and
inc
movs
push
out
or
push
add
into
xor
sub
mov
ins
lahf
je
or
(bad)
add
loopne
mov
xor
or
mov
pushf
stos
sbb
repnz
in
mov
repnz
or
sti
loopne
call
stos
jle
xchg
movs
hlt
mov
inc
pop
sbb
mov
lea
stc
sbb
ja
jne
mov
bound
push
hlt
xor
lods
retf
add
dec
les
push
retf
xchg
lahf
dec
sbb
jmp
stos
ffree
or
loopne
scas
inc
repnz
cmp
(bad)
adc
imul
or
ret
mov
or
add
mov
mov
daa
cmc
mov
push
sub
mov
and
enter
ret
enter
cmp
ds
rol
jne
sahf
outs
push
mov
(bad)
add
adc
or
fs
(bad)
dec
loop
pushf
lock
sub
adc
jns
cmp
inc
xchg
jg
jo
pop
push
mov
out
lea
pop
ja
cwde
jnp
(bad)
mov
xchg
shl
(bad)
and
aam
repz
adc
cld
jns
mov
mov
shl
sub
xor
push
or
push
xchg
ja
cmp
(bad)
xor
movs
cli
ret
aaa
bound
add
js
out
xchg
or
mov
jno
cmp
mov
fwait
mov
adc
dec
sbb
jmp
hlt
out
stc
add
xchg
xchg
test
into
(bad)
nop
adc
lds
push
push
adc
and
mov
into
sti
ret
out
nop
ficom
jo
or
fiadd
in
xchg
adc
xchg
add
cmp
add
movs
xor
dec
xor
hlt
mov
imul
inc
daa
jno
mov
mov
mov
loopne
xor
dec
les
mov
push
add
es
xchg
test
repnz
mov
push
push
shr
test
dec
popa
xlat
scas
popa
test
mov
mov
and
cmp
fs
xor
out
mov
and
mov
arpl
enter
fcomp
and
fs
jmp
and
xchg
ss
(bad)
rcl
xchg
pushf
jp
inc
mov
adc
fs
cli
inc
and
dec
sbb
mov
add
jmp
dec
sub
dec
mov
cli
jae
dec
xchg
in
fistp
mov
es
or
mov
call
mul
sbb
test
push
xchg
pop
pop
ja
stc
popf
mov
js
je
sbb
imul
cmps
pop
(bad)
les
cdq
xchg
nop
popa
sub
ins
xchg
rcl
xor
mov
and
cmp
inc
jmp
jb
bound
pop
sub
add
popf
inc
scas
dec
enter
out
push
inc
mov
daa
add
(bad)
mov
rcr
or
xor
(bad)
lds
sub
dec
loop
mov
push
les
and
pop
lock
cdq
add
cdq
adc
pushf
setbe
ret
xchg
into
int3
movs
pop
js
pop
push
sub
xchg
or
addr16
mov
leave
sbb
popf
loope
bound
adc
iret
nop
xchg
cmc
mov
sub
mov
ret
std
and
mov
inc
divps
inc
lods
test
xor
mov
sub
sbb
cmp
pop
xor
or
stc
dec
into
inc
jmp
add
(bad)
iret
dec
ret
pop
call
and
xchg
xor
aaa
sub
add
add
(bad)
rcl
ja
cmps
ror
mov
adc
jb
dec
lods
addr16
inc
stos
cmps
ret
frstor
push
pop
xchg
jle
les
movs
out
pop
mov
mov
aam
scas
scas
pop
cmps
lock
loope
mov
aam
sub
loope
out
jmp
xor
mov
fwait
push
aas
pop
cld
xchg
mov
aad
push
rol
clc
sbb
dec
mov
rcl
jmp
cdq
cmps
push
cmp
xchg
dec
movs
mov
fs
ja
aad
lods
(bad)
and
push
jmp
sbb
inc
test
push
movs
jp
jb
xchg
rcl
rcr
adc
dec
sbb
in
and
and
mov
inc
dec
add
cmp
icebp
xchg
dec
adc
mov
arpl
push
ins
shl
mov
scas
pop
dec
retf
les
push
(bad)
dec
mov
push
cmps
cmp
xor
push
outs
jb
scas
push
imul
js
mov
dec
mov
mov
rcr
jmp
mov
addr16
dec
mov
or
sahf
jne
dec
mov
cmp
outs
jmp
jo
pop
pop
jecxz
xchg
loopne
rcl
pop
sahf
push
es
push
mov
pop
adc
mov
add
add
popf
loop
shr
fwait
ins
adc
ins
je
mov
xchg
ds
jo
or
push
(bad)
pusha
add
inc
test
nop
adc
sbb
jle
or
xchg
mov
mov
sbb
jmp
or
movs
dec
sbb
inc
aaa
ja
mov
sub
cli
les
es
leave
and
add
sub
pop
(bad)
xor
push
stos
je
or
lods
xchg
mov
ret
pop
les
daa
ins
cmc
or
repz
or
push
add
pop
mov
dec
push
ja
bound
and
pop
(bad)
and
loopne
xor
jecxz
mov
fsub
or
jmp
inc
test
adc
or
enter
movs
pushf
inc
pcmpgtd
push
inc
mov
and
inc
add
push
lock
pusha
fild
leave
ds
fisub
test
xchg
sub
loope
fisub
retf
xor
fstp
jae
and
jb
and
xchg
ins
movs
or
mov
adc
rcr
ins
pop
adc
or
mov
les
addr16
ud1
dec
xchg
sub
les
retf
jo
xor
and
sbb
add
and
mov
mov
mov
fsub
ror
add
ss
push
jp
cmc
ds
xchg
iret
iret
push
ret
dec
shl
jmp
mov
leave
stos
push
add
test
add
pop
dec
fadd
and
sar
and
or
inc
out
sbb
push
sar
es
xchg
sbb
push
mov
cmp
jg
fnstsw
lock
mov
sub
stos
cwde
loop
test
mov
int
mov
cmp
sbb
jge
out
xchg
sbb
daa
clc
sar
mov
mov
mov
mov
ficom
mov
cmp
daa
cmps
and
retf
retf
in
adc
in
outs
or
add
mov
and
jb
dec
fisub
push
data16
in
cwde
push
sbb
aas
js
jbe
dec
les
arpl
(bad)
or
xor
and
xor
rcr
inc
enter
push
cwde
pop
lea
sbb
inc
stos
adc
mov
pop
outs
xchg
or
call
and
pop
or
and
in
and
jbe
ret
imul
pop
mov
out
mov
sbb
dec
dec
mov
add
mov
pop
xchg
icebp
test
shl
jp
adc
mov
jp
out
pop
shl
bnd
stos
adc
xchg
lods
(bad)
repnz
jbe
inc
mov
popa
add
mov
nop
cld
mov
ins
xor
iret
push
test
int3
jno
inc
pop
inc
loopne
rol
daa
repnz
mov
add
xlat
out
cmp
hlt
dec
jge
xchg
imul
mov
inc
dec
inc
arpl
sbb
arpl
stc
inc
pop
rcl
jnp
(bad)
and
dec
dec
out
adc
mov
es
and
mov
out
jb
cmp
lds
xchg
jnp
xchg
push
dec
cli
mov
mov
sbb
loopne
jns
push
inc
jbe
jbe
mov
mov
and
push
dec
cmp
pop
mov
add
pop
jle
mov
stc
or
and
xor
ret
rcr
mov
xchg
popf
xchg
pop
xchg
inc
cwde
ficomp
cmp
jge
cmp
scas
and
push
xor
fcomp
or
sbb
daa
rol
and
movs
(bad)
pop
nop
push
xchg
adc
xchg
jae
frstor
test
or
dec
jle
sbb
adc
push
(bad)
lds
mov
sub
adc
add
idiv
jbe
push
jns
addr16
pop
ja
fwait
repnz
mov
add
mov
adc
icebp
or
xchg
jo
sbb
push
sbb
sub
out
jmp
dec
or
inc
add
les
mov
(bad)
(bad)
sbb
push
sbb
dec
jo
aas
dec
xchg
and
retf
aas
pop
adc
push
in
inc
arpl
loope
push
cmp
or
jmp
int3
add
lock
pusha
aaa
sbb
add
sbb
sbb
and
xor
add
mov
push
mov
cdq
dec
in
jae
mov
aad
loope
cld
sbb
cli
adc
rep
fcmovne
dec
jp
das
iret
mov
movs
jl
shl
inc
dec
mov
ins
retf
jecxz
mov
shl
repnz
fcomp
add
add
add
ins
repnz
mov
adc
cmp
addps
and
xchg
cs
adc
pop
ret
shl
leave
(bad)
cmp
jmp
fistp
push
test
aaa
std
popa
nop
in
ins
cs
fsubr
fadd
pop
mov
aaa
lahf
js
pop
cli
jp
aaa
(bad)
call
ja
adc
mov
movs
or
dec
xor
sub
cmp
ins
mov
or
mov
mov
ja
pop
jp
jle
cmp
dec
stc
ror
fistp
mov
mov
mov
add
(bad)
sbb
enter
sti
popa
ror
push
daa
pusha
adc
lods
xor
xchg
dec
faddp
mov
and
(bad)
push
stc
inc
mov
inc
push
ret
pop
outs
movs
add
sub
(bad)
movs
add
dec
jmp
mov
(bad)
pop
test
shr
or
daa
daa
daa
lods
add
adc
and
jge
movs
nop
push
or
jl
mov
movs
scas
sub
mov
dec
xchg
mov
xor
shl
or
or
dec
movs
rcr
stos
aad
shr
sub
retf
jge
sbb
dec
push
aam
mov
jnp
fdiv
adc
jb
addr16
cwde
loop
push
mov
in
mov
retf
mov
xor
add
nop
jp
mov
xchg
xchg
ffree
ds
shl
mov
in
cmp
test
mov
mov
adc
out
mov
test
add
sbb
(bad)
int
cmps
jns
sub
pop
or
add
push
adc
dec
leave
enter
(bad)
fst
bound
push
lock
xchg
dec
pop
mov
(bad)
adc
or
adc
adc
sub
jecxz
loop
pop
adc
xchg
mov
inc
sub
adc
fwait
jno
push
dec
dec
xchg
and
test
mul
aas
xor
inc
bound
jb
jo
jmp
pusha
outs
les
push
and
push
cmp
je
or
pop
pop
xchg
push
ss
popf
leave
fild
push
jecxz
or
in
fdiv
xor
mov
mov
ins
aam
inc
out
leave
test
movs
test
sbb
rcr
jns
ss
hlt
and
sub
and
jmp
cmp
mov
lods
lods
les
or
push
mov
dec
gs
(bad)
mov
loopne
push
inc
gs
stos
add
js
jbe
outs
or
rol
(bad)
adc
xchg
mov
retf
dec
fdivr
mov
lds
jecxz
xchg
scas
sub
sub
call
sar
sbb
dec
out
xor
mov
fwait
cmc
sbb
push
dec
mov
imul
push
sub
out
push
xchg
push
(bad)
mov
xchg
in
dec
jns
call
and
icebp
adc
pop
inc
cvtpi2ps
rcl
scas
xchg
xor
sbb
inc
mov
mov
mov
fdivrp
popf
mov
aas
out
call
les
movs
jmp
pop
(bad)
pop
loop
xor
mov
arpl
sbb
mov
movs
add
jp
pop
in
shr
out
mov
inc
sbb
mov
and
mov
inc
jae
test
fistp
and
and
pop
pushf
sub
sbb
or
jle
inc
shl
mov
popa
sar
xor
popa
adc
pop
sahf
movs
jae
sbb
out
jne
into
enter
and
fbstp
xor
pop
or
cmps
dec
lods
push
gs
or
cld
sub
es
lahf
fsubr
push
mov
std
push
ins
scas
sbb
iret
dec
in
jmp
stos
push
cmp
mov
jmp
leave
add
push
push
mov
addr16
mov
frstor
lods
test
push
test
data16
xor
or
jo
dec
push
add
test
ins
enter
cmp
and
loope
inc
push
or
jno
add
inc
mov
adc
or
mov
loop
xchg
and
or
jns
les
and
and
clc
inc
adc
inc
ds
xchg
mov
test
lahf
sahf
rcl
fadd
mov
ins
ins
adc
(bad)
frstor
or
movs
ret
jae
int
jle
xchg
pop
(bad)
dec
mov
in
dec
dec
and
pusha
nop
pushf
mov
repnz
movs
mov
test
ret
fnstsw
or
lods
mov
push
inc
cmp
setno
dec
imul
stos
nop
cwde
in
or
or
daa
cmp
mov
mov
adc
(bad)
rcl
cmp
mov
rcl
fild
or
adc
or
out
jo
xlat
fs
inc
push
daa
loop
push
mov
add
push
adc
sbb
add
fadd
adc
arpl
js
xor
fcomp
mov
cld
xor
fldenv
pop
mov
xchg
or
xchg
cmps
pusha
stc
inc
xchg
lods
xor
pop
jle
xlat
add
out
and
cmp
dec
rcl
xor
mov
in
push
fsub
test
aaa
xchg
mov
xchg
and
dec
xor
and
jmp
sbb
xchg
popa
jb
pop
and
ror
mov
cmp
pop
fst
xor
loope
xchg
pushf
sbb
lock
mov
gs
mov
inc
or
sbb
mov
xchg
dec
enter
inc
js
in
xchg
and
jb
bound
jb
push
jp
lea
ret
inc
lds
push
pop
ins
dec
jmp
mov
pushf
xor
test
ret
pop
sbb
cmp
mov
sbb
imul
hlt
cmp
pop
(bad)
mov
arpl
sub
cwde
pop
add
retf
mov
gs
mov
hlt
stc
inc
cmp
add
jp
add
push
fdivr
mov
inc
jo
repnz
(bad)
addr16
sbb
and
scas
lock
sbb
inc
in
cs
lea
(bad)
xor
dec
das
das
cmp
pop
pop
push
jmp
and
add
sbb
popf
and
nop
xchg
sbb
in
nop
xor
dec
aas
jmp
ret
(bad)
pop
dec
inc
movs
popa
retf
lahf
retf
xlat
sbb
rol
ja
enter
(bad)
push
in
cs
cmp
jbe
bound
inc
fild
sbb
sbb
add
call
(bad)
fxch
jae
sub
jp
add
and
mov
jmp
js
pop
adc
push
or
and
jl
jb
or
(bad)
in
jle
cli
inc
mov
cld
test
sub
and
push
mov
sbb
jmp
jnp
mov
mov
add
scas
or
test
mov
into
es
shl
hlt
jne
mov
and
push
mov
ds
stos
pop
js
shr
stos
imul
call
rol
xchg
stos
or
inc
into
inc
dec
dec
mov
xchg
(bad)
cwde
in
dec
sbb
jle
int
stc
or
xor
stc
adc
enter
lea
jecxz
iret
int3
inc
in
fnstcw
ucomiss
test
xchg
(bad)
sbb
test
shl
ret
and
hlt
dec
popa
test
pop
daa
bound
jmp
and
ins
sar
cmp
lds
repz
dec
sbb
xchg
mov
ins
dec
inc
outs
les
loope
mov
aam
daa
jmp
fild
xor
or
cld
mov
pop
adc
or
rcl
lea
push
(bad)
popa
outs
cmp
cld
leave
sbb
mov
mov
ret
and
xchg
xchg
adc
dec
shr
adc
test
test
mov
movs
and
pop
ficomp
movs
add
mov
push
lock
shr
bound
sbb
movs
ja
and
push
ja
sub
pop
test
dec
sbb
sub
or
jne
jnp
mov
sbb
cmps
int3
xlat
cmps
sbb
cld
aad
inc
(bad)
jb
add
pop
leave
pop
jp
mov
or
push
sub
out
inc
or
mov
mov
(bad)
sbb
dec
sar
cmp
mov
je
mov
mov
mov
sub
je
pop
movs
push
(bad)
sub
inc
xchg
xchg
repz
jb
bound
stc
pusha
pushf
and
add
and
retf
and
add
adc
sbb
add
das
dec
les
xor
ja
imul
aaa
jbe
in
aam
cmp
dec
cmc
mov
jb
xor
in
add
adc
test
xchg
adc
in
jne
arpl
add
pop
add
movs
pop
push
or
lods
inc
jbe
inc
les
jecxz
(bad)
lock
mov
mov
mov
lods
pop
bound
ss
or
jmp
ds
xlat
push
sub
sub
inc
push
mov
or
int3
inc
ja
int
mov
es
pusha
dec
xchg
add
push
xor
ins
add
pop
sub
inc
mov
loope
xor
mov
(bad)
sahf
and
aaa
mov
pop
jmp
inc
aad
jb
inc
cli
sub
jg
push
or
test
repz
cdq
popf
jns
xchg
gs
retf
push
and
mov
ins
call
shr
leave
dec
sti
test
repz
in
sub
pop
movs
push
loope
push
test
neg
scas
jle
jp
mov
imul
imul
in
ins
xchg
into
ss
push
out
jge
sub
mov
aam
daa
pusha
xor
nop
mov
pop
jb
push
jno
leave
push
push
dec
xor
sbb
and
fild
cmps
cmp
mov
or
cld
bound
mov
loope
fadd
imul
and
mov
cs
nop
jle
cld
and
pop
and
cmp
rcl
mov
js
inc
mov
pop
and
sub
mov
xor
add
sub
lods
stos
xchg
or
ret
add
leave
inc
or
xchg
adc
inc
lods
mov
pushf
jle
pop
inc
out
or
dec
push
inc
cmp
lods
or
out
shl
xchg
bound
cmp
jl
jnp
fadd
jno
add
cwde
add
sbb
and
(bad)
shl
stos
mov
push
mov
jecxz
inc
mov
xchg
cmp
arpl
add
mov
cwde
loopne
xchg
fisubr
aaa
xchg
xor
inc
jmp
test
mov
pop
fmulp
lea
pushf
mov
outs
sete
aam
inc
outs
imul
lods
aas
dec
mov
test
in
cld
(bad)
jmp
inc
sub
sahf
add
inc
jnp
mov
sbb
inc
call
dec
mov
fnstenv
xchg
push
call
in
les
out
movs
fs
in
sti
cli
mov
les
aam
jl
shr
retf
sbb
mov
push
rcl
add
test
xchg
jno
add
inc
imul
xlat
or
(bad)
sbb
ss
pop
(bad)
es
movs
xor
test
and
dec
jle
sub
imul
xchg
fdivr
dec
(bad)
fcom
or
xchg
aaa
mov
mov
push
cmps
dec
xchg
mov
fnstenv
and
(bad)
popa
adc
or
mov
fstp
sar
into
in
sub
cmc
lods
inc
push
jp
jns
data16
lahf
cs
push
sbb
inc
je
sub
xchg
call
pop
xchg
bound
sbb
xchg
pushf
adc
jge
mov
push
xchg
jmp
loope
mov
jmp
sbb
iret
and
adc
aam
ds
ds
adc
xchg
mov
jbe
arpl
popa
cmps
test
ja
push
pop
ds
int3
iret
pop
test
sbb
shl
repz
inc
inc
repnz
aad
and
or
mov
mov
push
mov
push
bswap
retf
pop
mov
sub
sbb
or
and
add
pop
sbb
or
sbb
xchg
xor
imul
and
or
mov
pop
xchg
mov
and
xchg
bound
dec
xchg
or
mov
mov
or
ret
je
(bad)
dec
inc
cmp
shl
xor
or
push
idiv
int
adc
or
xchg
jmp
and
jp
sahf
mov
inc
in
mov
or
rcr
xchg
push
popa
mov
or
add
sub
test
(bad)
jnp
mov
inc
pop
xchg
sar
out
inc
inc
mov
push
add
in
jnp
outs
in
cs
sub
addr16
test
outs
test
xor
aam
sti
dec
sub
dec
xchg
jnp
fcomp
je
mov
or
fwait
and
pop
sub
jge
adc
and
test
and
xchg
sub
mov
aaa
lea
(bad)
rcl
add
push
fsubr
sar
or
or
cli
inc
test
or
sbb
in
stos
adc
dec
pop
out
sub
and
pushf
idiv
add
xchg
and
pushf
loopne
mov
xchg
cli
push
xchg
xchg
icebp
call
in
and
add
cmps
shr
xor
pop
ins
adc
cli
in
cmp
dec
inc
mov
int3
sbb
push
stc
fadd
pop
in
inc
lea
mov
cdq
ins
scas
dec
xchg
test
or
mov
lods
sbb
adc
dec
test
ja
lea
lods
mov
rcr
rcr
and
es
icebp
xchg
fnstsw
movs
sbb
mov
push
add
mov
jg
pop
mov
mov
push
mov
pop
jmp
mov
mov
xchg
mov
pop
into
mov
retf
ret
xor
pop
jl
mov
inc
clc
(bad)
or
movs
addr16
cs
movs
pop
outs
push
call
xchg
rol
movs
pusha
xchg
pop
(bad)
dec
adc
sbb
push
sbb
xchg
xlat
xlat
rcl
in
push
xchg
mov
scas
xchg
ret
or
and
sbb
out
add
or
repnz
repz
or
dec
lods
ret
push
sbb
mov
push
mov
adc
mov
iret
xor
fs
lods
jo
or
daa
fwait
loope
and
push
popf
xchg
bnd
and
adc
mov
sbb
je
xor
ds
jo
outs
sbb
rol
xor
push
mov
dec
mov
pop
dec
popf
or
stc
jns
sbb
int3
dec
sar
add
add
in
fadd
sbb
push
sar
mov
fiadd
push
inc
sbb
xor
pop
lea
mov
rcr
adc
dec
in
mov
push
adc
dec
cs
jmp
rcr
mov
ret
test
push
ins
pop
jge
sbb
mov
push
scas
enter
dec
dec
outs
jge
pop
adc
dec
jo
repnz
lahf
push
or
xchg
scas
dec
push
jns
stos
pushf
das
int3
jb
jmp
dec
pusha
jne
mov
ret
push
mov
pop
mov
dec
dec
mov
cmp
pop
xor
inc
cmp
mov
inc
(bad)
shl
fldenv
jae
jl
xor
fld
jl
repz
mov
mov
dec
add
push
lods
push
and
xchg
nop
adc
(bad)
sub
cmp
cwde
fcomp
call
(bad)
mov
mov
mov
xor
mov
add
or
icebp
das
inc
in
popf
mov
ja
pop
jle
into
sbb
inc
ins
ins
sar
mov
pop
outs
ins
sbb
retf
je
adc
mov
push
retf
bound
sub
xabort
cs
push
add
repnz
and
push
add
push
lods
cmp
sbb
fadd
loope
lods
push
addr16
or
sbb
fdiv
sbb
das
pop
cmp
bound
jbe
dec
inc
jmp
xchg
pop
xchg
pop
and
add
rol
dec
stc
out
cs
pop
and
stos
cmp
mov
add
or
pop
sbb
je
pop
mov
and
outs
ret
shr
dec
addr16
jno
mov
and
arpl
hlt
icebp
stos
retf
imul
(bad)
dec
and
lea
leave
imul
sahf
pop
shl
mov
iret
sub
xor
pusha
push
fsub
dec
mov
and
pop
cmps
push
sbb
xchg
inc
imul
xor
cmps
xchg
pop
ret
fdiv
mov
xchg
retf
push
push
adc
adc
cmps
adc
and
jp
sbb
mov
xor
push
cmps
mov
in
adc
scas
lods
or
add
popa
jmp
push
add
inc
inc
outs
xor
fwait
sbb
cmp
inc
jecxz
enter
stc
ret
jb
cs
popa
mov
adc
lock
ror
add
loopne
jns
or
add
mov
pop
adc
jle
aaa
outs
cmp
and
fs
cli
les
add
jp
push
int3
mov
stos
mov
xchg
inc
push
lahf
ret
adc
and
stc
shl
add
enter
out
cli
or
cmp
adc
adc
push
mov
rcr
call
bts
ins
test
sub
(bad)
and
push
push
mov
cmp
icebp
dec
test
das
inc
gs
shl
ds
ins
or
(bad)
push
call
xor
das
stos
movsx
out
outs
call
lahf
(bad)
add
jns
inc
pop
fistp
sbb
sar
in
dec
push
jns
fild
scas
push
adc
add
imul
out
or
cmps
and
and
daa
mov
jmp
repz
push
dec
jg
ret
mov
xchg
or
ds
xor
dec
jb
sbb
adc
push
mov
cld
loope
movs
std
and
and
retf
sahf
mov
pop
dec
in
inc
mov
mov
xchg
mov
lods
(bad)
nop
test
sbb
cmps
mov
mov
test
cmp
mov
cmp
xor
jae
cmp
outs
pushf
inc
(bad)
out
add
popa
pop
add
int3
dec
push
and
sub
(bad)
movs
and
push
push
in
out
inc
movs
retf
adc
and
inc
(bad)
retf
jno
cmp
sub
(bad)
lds
(bad)
adc
nop
dec
adc
and
push
cmp
dec
jae
inc
pop
ror
and
xchg
pop
scas
retf
add
and
daa
shr
jbe
bound
je
or
bound
cmps
jno
out
xchg
std
jno
inc
dec
ds
iret
sub
and
fnstcw
stos
mov
pushf
pop
jmp
mov
(bad)
sub
push
xchg
mov
shl
nop
fcmovb
pop
xchg
int3
jmp
in
and
lahf
enter
adc
lahf
das
and
dec
shr
jb
dec
retf
mov
pop
xchg
popa
xchg
add
movs
and
sub
add
add
test
sub
add
stc
cli
mov
and
inc
dec
out
jp
mov
retf
adc
push
retf
push
push
sub
icebp
fst
nop
and
loopne
gs
fstp
ins
jae
sbb
fistp
xchg
dec
retf
stc
mov
fcmovbe
movs
jbe
ror
jnp
dec
ins
jp
jmp
movs
shl
push
cld
hlt
fstp
ja
pusha
add
xchg
add
pop
(bad)
stos
push
aam
mov
mov
mov
in
dec
pop
xchg
(bad)
push
lods
rcr
data16
ds
xchg
adc
sub
sbb
hlt
push
lahf
shr
inc
das
adc
lahf
or
(bad)
xchg
leave
aad
and
aam
(bad)
dec
cs
ja
add
sti
sbb
dec
lods
pop
push
push
call
sbb
int
gs
neg
inc
je
cmp
push
aad
or
jo
fadd
or
je
pop
and
sbb
xchg
out
xchg
and
mov
cmps
pop
xor
mov
mov
mov
adc
push
xchg
inc
dec
icebp
bnd
stos
xchg
loope
cmps
fist
sti
push
lock
inc
dec
enter
(bad)
js
cmp
mov
out
mov
in
pop
push
xor
or
and
sub
cmps
mov
mov
mov
push
inc
pop
and
cmp
into
jp
adc
jno
add
pusha
mov
int
xchg
adc
nop
jnp
adc
jnp
fbld
pop
xchg
or
pop
aam
cmp
test
sub
stc
lds
(bad)
rcl
sbb
imul
fwait
inc
mov
mov
and
cmp
jmp
adc
pop
add
jb
sar
xchg
ins
ret
dec
dec
add
or
add
sub
and
in
fild
add
or
lahf
(bad)
movs
add
and
inc
jnp
jb
pushf
sbb
fcmovb
and
or
jns
fbld
movs
and
inc
dec
push
popf
xor
cmp
sbb
bound
push
mov
cmp
loop
in
ss
cmp
(bad)
ds
mov
mov
push
mov
jbe
xchg
mov
fild
fstp
xlat
adc
cmp
dec
xor
test
test
dec
test
or
adc
movs
and
adc
xor
sub
jbe
enter
and
daa
or
xor
pop
loope
add
inc
sub
jg
mov
sub
rcl
ror
in
loope
in
push
dec
cmp
rcl
dec
lea
xor
pop
out
hlt
jmp
xchg
sbb
pop
xchg
enter
daa
push
lahf
cmp
sub
cmp
shl
dec
movs
jmp
mov
xchg
dec
mov
cdq
or
push
dec
out
xor
inc
xor
fsubr
xchg
(bad)
adc
sar
push
add
push
xchg
add
jg
mov
jecxz
mov
mov
adc
(bad)
std
dec
mov
les
and
add
or
iret
retf
mov
das
cs
rcr
sub
sbb
ror
xchg
leave
fcomip
adc
add
and
repnz
jecxz
inc
sahf
lds
repz
ins
adc
and
adc
test
jne
and
xor
dec
mov
cmp
retf
fistp
pop
sub
jne
add
mov
jl
cmps
loope
inc
cmp
fstp
or
mov
sub
and
outs
into
add
rol
aas
pushf
dec
nop
retf
pop
add
mov
ror
inc
test
push
jbe
jmp
lea
repnz
shl
outs
test
dec
ins
cmc
and
sbb
shrd
in
or
xchg
push
neg
mov
sbb
and
repnz
add
mov
xchg
dec
ficomp
retf
and
bound
arpl
mov
adc
pusha
adc
dec
lock
mov
xor
daa
icebp
pop
popf
xchg
in
push
std
popa
rcl
push
dec
fisub
lea
enter
xchg
icebp
hlt
adc
cmp
dec
hlt
jge
out
cmp
add
in
out
push
imul
adc
pop
or
sbb
add
fst
in
fadd
test
out
sahf
xchg
and
mov
test
mov
into
dec
and
push
add
mov
mov
sti
cwde
adc
pop
mov
popa
mov
mov
shl
call
add
fist
add
push
loop
loopne
sbb
add
pop
mov
cmp
add
xor
iret
enter
jno
popf
out
cmps
mov
sbb
int3
stos
ret
and
push
sbb
xor
enter
les
mov
and
jb
add
add
dec
mov
cmps
enter
cmp
inc
sub
and
shl
and
xchg
dec
aas
xchg
dec
nop
cmp
mov
inc
dec
sub
hlt
out
or
sbb
pop
xchg
aam
ret
inc
in
dec
test
adc
pusha
adc
jno
cmp
cld
inc
mov
int3
lds
push
(bad)
xchg
movs
push
xor
pop
std
ja
cwde
int
fist
push
pop
les
popa
imul
jl
push
int3
ficom
(bad)
mov
popa
xchg
inc
(bad)
into
and
jl
xchg
push
rcl
sti
test
push
pop
nop
jmp
sub
test
and
add
push
and
lods
nop
shl
or
xchg
stos
fwait
jo
popf
sti
shl
and
cmp
dec
inc
dec
adc
sahf
fadd
movs
in
inc
iret
enter
push
cmps
jo
and
div
xchg
mov
adc
jmp
sub
sbb
test
push
lock
xchg
sub
cmps
sub
imul
ja
inc
and
movs
out
dec
jmp
or
inc
retf
mov
dec
bound
jmp
and
mov
scas
dec
loop
and
or
rcr
fs
push
fistp
sbb
mov
pop
pop
sbb
push
xor
adc
fmul
add
inc
fdivr
adc
and
mov
cmps
movs
inc
imul
mov
repnz
jg
fsub
fwait
xchg
cmps
push
fstp
test
dec
push
loop
jg
push
jo
sbb
lahf
sbb
pop
pop
mov
test
out
mul
push
lock
add
dec
mov
in
push
scas
xlat
(bad)
test
sbb
out
xchg
mov
lahf
jmp
dec
push
ret
sub
mul
cli
(bad)
and
or
jns
cmp
jmp
(bad)
les
inc
fxch
push
sub
shl
loope
xlat
xor
cdq
fs
push
cmp
jb
mov
pushf
inc
sub
dec
retf
retf
cmps
add
test
enter
xor
fist
push
push
sub
inc
stc
test
sub
mov
add
or
popf
ret
sbb
mov
sub
push
cmp
sbb
mov
test
xchg
inc
jecxz
mov
inc
movs
hlt
sub
dec
cmp
xor
sub
mov
out
stos
pusha
ja
and
pop
fcomp
daa
out
cmp
ja
sub
push
push
jmp
(bad)
out
cwde
gs
sbb
push
fnstsw
cwde
popf
dec
pop
and
push
repz
adc
sub
rcr
push
push
and
inc
ffree
push
test
or
mov
adc
movs
jo
sbb
sub
les
inc
or
cmps
ins
outs
adc
sub
aas
scas
pop
pop
outs
loop
mov
pop
cdq
cs
ins
mov
xchg
jle
rcr
mul
mov
mov
pushf
sub
aam
xchg
xchg
cmp
pop
sub
les
movs
arpl
inc
lods
ja
mov
jp
mov
fiadd
sub
mov
ret
sahf
pop
std
in
into
xor
jmp
push
mov
jmp
xchg
cdq
scas
test
pushf
std
push
cli
mov
call
or
xchg
mov
test
sbb
aas
xor
fstp
lods
inc
add
inc
adc
lods
sub
push
xlat
jl
hlt
mov
adc
ror
in
fmul
xchg
lods
adc
mov
sub
jae
inc
jmp
add
mov
xchg
sub
(bad)
adc
add
inc
ins
ss
or
or
pop
daa
ins
mov
dec
adc
jne
mov
fcomip
js
push
xor
es
push
stos
lock
bsf
or
or
push
sbb
pop
mov
je
hlt
inc
push
mov
adc
pop
test
outs
fist
rol
xchg
movs
mov
or
or
add
pop
and
test
sub
sbb
arpl
sar
loope
adc
mov
adc
dec
(bad)
aas
stos
mov
mov
inc
std
cs
sub
push
call
jno
je
outs
xadd
add
test
sbb
push
cmc
mov
sbb
xlat
adc
cmp
push
and
xor
call
dec
ret
mov
hlt
push
mov
sbb
cli
gs
cld
int
test
mov
xchg
loope
mov
fadd
or
je
into
ss
and
hlt
adc
push
pop
cmp
adc
inc
push
jo
inc
sbb
dec
xchg
add
scas
(bad)
and
and
push
push
pop
pop
mov
xchg
or
dec
sbb
enter
loopne
mov
xor
fsub
sub
stc
cmp
sbb
adc
xchg
ins
lock
push
out
sbb
test
mov
cli
loop
(bad)
and
pop
scas
dec
fwait
mov
sub
and
bound
ss
shl
sti
add
xor
jecxz
div
test
mov
leave
leave
fild
fsub
out
cmp
adc
inc
sahf
test
out
pop
pop
pop
pop
adc
stos
xchg
test
add
sbb
sbb
sub
add
cmps
ret
movs
inc
jmp
sub
add
retf
adc
fcom
rol
dec
xchg
inc
adc
mov
adc
xchg
arpl
dec
loope
enter
xchg
or
and
ins
pop
mov
pop
enter
outs
cwde
mov
dec
mov
inc
jmp
scas
js
pop
popf
test
add
inc
je
add
xor
push
mov
into
adc
enter
push
add
add
fld
push
(bad)
rcr
xchg
retf
outs
lock
and
shl
cmp
sbb
iret
pop
push
xchg
push
xlat
popa
pushf
or
or
sub
dec
mov
cmp
cmp
and
xchg
ret
retf
mov
fmul
mov
mov
xor
sahf
mov
jmp
xchg
and
aas
clc
push
cmps
jno
ret
mov
push
push
(bad)
test
mov
xor
cdq
fbstp
mov
jmp
jo
popf
or
pop
cmp
adc
xchg
mov
fld
loop
mov
push
imul
jns
out
xchg
add
stos
mov
push
jecxz
ja
outs
mov
ss
scas
lods
push
test
mov
ror
dec
mov
adc
cmp
cmp
lock
jb
pushf
jecxz
int3
add
adc
sar
adc
mov
je
mov
or
mov
adc
jl
or
arpl
shl
xlat
das
or
and
cmp
pop
pop
dec
xchg
sub
mov
(bad)
out
out
outs
lds
fadd
fs
and
jp
neg
pop
and
sti
cli
lds
pop
and
in
imul
pop
test
push
pop
retf
sbb
sub
ror
fistp
test
mov
dec
adc
jle
sub
fistp
je
jl
in
jne
ins
inc
dec
jo
into
ja
inc
mov
pop
cmp
push
mov
test
outs
sbb
(bad)
in
jmp
sbb
loopne
daa
scas
xor
les
sub
pop
scas
ror
mov
push
sbb
popa
xchg
adc
leave
pop
movs
xor
(bad)
and
pushf
pop
cmp
lds
dec
dec
inc
sub
jno
dec
stos
and
dec
addr16
and
pop
cli
push
icebp
dec
addr16
jmp
pop
pop
test
pop
in
aas
inc
mov
xchg
cmp
popa
lods
shl
inc
aas
push
push
jp
xchg
movs
xchg
mov
xchg
xchg
retf
adc
push
fild
loopne
xchg
mov
mov
cmp
adc
and
mov
es
and
add
fisub
sbb
mov
jle
outs
arpl
xchg
mov
(bad)
rcl
in
xor
push
push
jno
cmps
icebp
das
jb
mov
dec
inc
(bad)
sti
inc
retf
sub
lods
mov
dec
add
(bad)
push
jno
neg
(bad)
clc
aas
jns
in
adc
aaa
mov
sti
mov
xlat
sbb
mov
cmp
pushf
xchg
add
rcl
sahf
sahf
cmps
add
or
scas
rcl
test
out
cwde
xchg
inc
push
add
fsubrp
mov
xchg
push
inc
jb
pushf
cmovge
and
sub
sub
les
ja
sub
test
adc
adc
adc
adc
cmps
repz
sub
mov
in
mov
jno
sub
inc
cmp
sub
(bad)
addr16
inc
cs
loop
popa
fsub
call
sub
gs
push
retf
mov
mov
xchg
pop
pop
pusha
jecxz
shl
mov
mov
pop
in
fwait
clc
mov
shr
shr
mov
mov
cli
adc
imul
stc
push
jge
inc
daa
jb
adc
shl
inc
out
mov
add
and
adc
retf
inc
fst
jl
repnz
popf
pushf
inc
and
xor
adc
cmps
rcr
fild
xchg
mov
jmp
inc
dec
icebp
aaa
fsub
aam
dec
push
cli
outs
push
adc
push
(bad)
ror
and
push
jo
xor
mov
or
or
lods
xchg
and
mov
inc
jnp
movs
and
add
push
cmp
pusha
stc
jns
stc
or
cmovs
cmp
cmp
adc
mov
mov
push
and
jno
rol
and
leave
sbb
sub
xor
ficomp
dec
jle
xor
sbb
cdq
cmp
mov
lahf
(bad)
js
and
sub
add
gs
aaa
and
mov
cmc
mov
nop
mov
mov
call
cmp
jno
cmps
cld
sbb
cmp
fsubr
sub
in
ins
cld
out
jb
pop
out
pop
enter
fucomip
cmc
leave
aam
inc
mov
fstp
adc
rol
pop
add
cmp
enter
repnz
out
repnz
mov
or
in
and
sub
(bad)
cmp
call
jae
push
nop
sub
punpcklbw
mov
mov
mov
mov
add
in
dec
mov
xchg
dec
inc
sub
mov
imul
jp
adc
mov
lea
fnstsw
(bad)
(bad)
mov
movs
inc
inc
add
stc
imul
bound
sbb
jo
gs
fld
push
or
cwde
xor
sub
test
xchg
test
out
adc
mov
and
loop
bound
add
jecxz
js
call
cmps
xor
or
gs
xchg
rcr
push
jmp
pop
cmp
inc
mov
pusha
fsubr
jae
out
cmp
jae
cwde
cmp
jb
retf
mov
jo
dec
pop
inc
and
inc
dec
dec
out
stos
mov
dec
cmp
not
mov
mov
popa
mov
sbb
xchg
and
xchg
jmp
adc
shl
popa
jmp
out
popa
jecxz
dec
and
daa
jle
mov
xor
mov
fimul
jne
sbb
xor
popa
xchg
jmp
aaa
push
(bad)
lods
mov
dec
mov
dec
leave
xchg
inc
xchg
test
pop
sar
(bad)
push
cmc
or
in
lods
xor
cdq
(bad)
adc
pushf
jae
out
das
scas
jno
dec
adc
adc
push
cmc
lahf
retf
enter
rol
fstp
aaa
test
(bad)
mov
arpl
pop
fbld
(bad)
pushf
xor
retf
jbe
dec
sbb
fistp
rcl
jbe
jmp
cwde
lods
pop
lea
ja
jne
and
mov
cmc
sbb
repz
jbe
test
les
mov
cld
and
or
cmp
retf
mov
dec
pop
jno
inc
xor
push
mov
push
lods
scas
(bad)
cmc
lahf
leave
sbb
mov
data16
loope
inc
sub
lahf
cmps
mov
adc
inc
dec
loope
jmp
mov
dec
add
xchg
push
xor
movs
add
dec
into
push
mov
mov
shl
mov
movs
pop
adc
jno
add
adc
ja
mov
fimul
sbb
jbe
nop
daa
daa
jmp
arpl
mov
mov
jno
aam
dec
shl
rol
ror
mov
outs
fisttp
jge
and
or
inc
mov
rcr
mov
push
test
imul
jmp
(bad)
mov
into
movs
pusha
add
sbb
into
or
dec
mov
mov
cdq
scas
movs
sbb
jmp
push
icebp
pop
mov
mov
mov
aas
fstp
xor
xchg
out
fnsave
mov
mov
cdq
sub
xchg
lods
sbb
shl
sub
ins
mov
fmul
in
sbb
mov
fwait
outs
in
fsub
fld
in
jo
lock
mov
mul
pop
dec
dec
ja
mov
mov
test
cwde
daa
out
or
add
ret
pusha
ins
add
ja
dec
xor
jb
out
jmp
(bad)
mov
ja
int
cwde
ins
and
sbb
push
or
dec
inc
push
xor
and
pop
and
cmp
nop
leave
in
dec
loopne
mov
stc
sbb
loope
inc
fadd
or
and
out
sbb
sub
mov
sub
push
mov
mov
mov
xacquire
mov
out
jne
mov
fisttp
and
outs
xchg
test
and
and
popf
sub
jp
xchg
out
xchg
mov
jge
add
test
jecxz
add
or
fidiv
ds
and
pop
pop
mov
ret
dec
in
outs
fwait
jae
int3
inc
arpl
pop
xchg
movs
add
icebp
test
test
repnz
ins
dec
(bad)
adc
pop
and
leave
push
ret
sar
adc
sub
or
cs
adc
mov
xchg
sbb
adc
mov
dec
fwait
mov
mov
add
retf
in
inc
push
sbb
cld
les
ins
or
fstp
adc
mov
call
(bad)
or
dec
lea
fwait
pop
scas
or
je
es
fild
scas
and
mov
mov
jb
mov
dec
mov
lahf
adc
jno
loop
sahf
(bad)
rcr
jmp
test
xchg
cmps
enter
dec
cmp
inc
cmps
sti
mov
push
cli
mov
call
mov
xchg
push
cmp
sbb
arpl
inc
cmp
pop
loopne
pusha
xor
sub
retw
aas
lods
pcmpgtb
cld
test
mov
loopne
pop
push
adc
mov
mov
sub
xchg
mov
sub
mov
rol
adc
jo
movs
sub
sbb
out
sahf
xchg
or
inc
ins
aas
xchg
mov
aaa
(bad)
clc
sbb
ret
(bad)
adc
mul
or
popa
mov
pusha
mov
addr16
xchg
add
icebp
test
and
xchg
adc
enter
stc
add
pop
sbb
mov
jnp
mov
fstp
and
cli
rol
lock
dec
mov
push
call
adc
dec
sbb
rcr
or
dec
pop
lds
das
cmp
ficomp
sar
xor
cmp
ins
fs
jbe
xchg
adc
leave
bswap
jp
adc
por
inc
in
push
pop
pop
rcr
int3
adc
les
or
cmps
add
stc
and
sbb
add
shr
or
adc
xchg
retf
cmps
mov
test
imul
pop
and
mov
cmps
fisub
imul
shr
aaa
sbb
pop
mov
fild
pop
xor
imul
(bad)
pushf
ja
movs
pusha
cld
inc
mov
lea
sub
inc
mov
or
jmp
mov
and
mov
or
cld
mov
adc
enter
pop
or
repnz
js
xchg
ret
adc
mov
fs
fbld
push
iret
nop
aas
sub
in
add
cmps
dec
mov
xor
and
pop
loop
sub
inc
cmps
(bad)
mov
in
mov
sbb
add
loop
inc
enter
in
cmp
xchg
pop
ds
xor
inc
in
jmp
inc
mov
sub
adc
cmp
mov
and
fwait
pusha
mov
mov
fild
sub
sbb
bound
ret
dec
sbb
push
inc
mov
cdq
sbb
mov
neg
retf
pop
jmp
xchg
push
adc
xchg
movs
add
xor
adc
mov
xor
dec
pop
or
and
adc
mov
cwde
mov
or
dec
in
xchg
shr
xor
sbb
pop
mov
xor
add
push
mov
sbb
aad
mov
mov
sbb
cdq
popf
mov
stos
dec
jae
aam
jecxz
call
or
xchg
and
lock
mov
fmul
mov
xchg
lock
cs
retf
adc
sbb
jne
movs
je
mov
mov
fbstp
and
(bad)
test
and
movs
jecxz
jne
pop
mov
pusha
shl
movs
sub
out
fmul
dec
mov
inc
or
and
aaa
fs
je
pop
pop
push
adc
sti
cmp
xchg
les
daa
fucomp
push
push
xchg
enter
mov
add
mov
cmp
mov
aas
or
ret
daa
es
shr
sbb
icebp
mov
add
dec
sub
test
jecxz
and
enter
cmp
jbe
sub
xchg
cmp
out
adc
mov
outs
daa
test
movs
(bad)
mov
pop
lea
aas
sub
add
pop
jo
mov
mov
xor
test
ja
sahf
fwait
dec
fcomp
pop
inc
bound
pushf
ret
es
or
push
cmp
cmps
pop
outs
and
jmp
xchg
daa
and
cli
dec
cmp
test
push
pushf
imul
inc
push
call
mov
(bad)
mov
jb
xchg
jno
xchg
(bad)
call
aad
movs
cmp
and
sub
outs
xor
int3
jge
sbb
daa
pop
es
xor
aaa
sbb
inc
fadd
sbb
jecxz
push
jmp
mov
inc
mov
push
add
and
mov
and
add
aaa
fsub
in
sub
and
test
loopne
inc
jno
mov
and
pop
(bad)
pop
or
cmp
and
hlt
idiv
mov
cmc
push
fimul
dec
and
jo
(bad)
in
pop
out
pop
fiadd
sub
mul
sbb
push
stos
gs
and
loope
pop
addr16
push
mov
loop
lods
sub
push
loopne
es
push
or
rol
pop
es
retf
and
push
in
mov
fsub
lahf
out
xor
nop
fisubr
sar
imul
xchg
push
mov
cmp
mov
sbb
jle
daa
push
es
(bad)
jb
ds
jl
xor
cmps
cmp
out
mov
aaa
bound
adc
add
pushf
inc
xchg
xchg
push
ins
xor
cmps
fld
cmp
cmp
jnp
sub
hlt
jmp
ret
cmps
bound
sbb
ficomp
bound
and
ja
jbe
dec
jp
push
push
shl
iret
push
adc
retf
mov
sub
push
inc
xor
and
push
call
push
cdq
dec
cmp
in
aam
ret
gs
gs
xchg
popa
cs
in
rcr
(bad)
nop
shr
sbb
jmp
ret
ss
mov
push
ins
mov
push
jns
lods
mov
sbb
out
movs
addr16
adc
les
or
mov
cld
mov
add
pusha
xchg
adc
and
dec
outs
in
dec
dec
les
popf
les
dec
fistp
jo
inc
jno
mov
push
call
pop
xchg
xor
lea
daa
popa
lock
imul
jmp
je
outs
ss
cmp
jno
inc
loope
dec
pop
mov
bound
push
(bad)
mov
inc
xchg
inc
ins
add
adc
xor
jo
adc
jecxz
mov
cmp
loope
mov
mov
and
sti
push
jb
fs
sub
es
aas
ret
xor
cmp
cmc
lahf
and
xor
aaa
shl
push
xchg
test
sahf
mov
ins
mov
or
rol
ins
(bad)
add
les
pop
cmps
rcr
lods
sahf
push
dec
cmp
push
adc
add
lds
sub
sar
mov
sbb
jns
sahf
push
mov
mov
fmul
sub
xor
push
pop
jno
pop
sbb
mov
mov
imul
jnp
xchg
popf
ret
ja
xor
fmulp
cmps
cmp
add
push
out
sar
in
call
push
xchg
je
jg
repz
cmp
enter
mov
and
jo
mov
sbb
ret
imul
inc
test
push
push
xchg
mov
sub
aad
adc
fcmovnu
and
shl
add
sub
cmpps
push
out
sbb
in
cmp
sub
jno
sti
mov
test
mov
or
xchg
push
xchg
leave
sbb
or
adc
push
inc
test
xchg
mov
(bad)
pop
xor
nop
repnz
lds
push
jmp
stos
sub
outs
adc
or
aam
dec
test
and
ins
mov
(bad)
fsub
inc
pushf
jbe
jmp
pop
dec
dec
and
inc
test
sub
in
pop
mov
add
fdiv
mov
mov
add
jbe
mov
cmp
mov
fstp
daa
gs
bound
out
sbb
mov
mov
sub
daa
mov
fsub
jbe
xchg
movs
add
shr
add
add
dec
push
aad
shl
xlat
add
or
adc
mov
enter
test
popa
fistp
inc
in
pop
or
je
and
mov
aam
adc
scas
(bad)
dec
(bad)
xor
shr
cmp
mov
enter
push
in
xchg
mov
mov
mov
push
in
dec
mov
or
or
cmp
cmps
jge
sbb
jge
fiadd
sbb
inc
dec
shl
or
sbb
push
sbb
(bad)
aaa
jg
adc
jl
and
adc
mov
or
inc
cmps
jno
sub
sbb
ret
cmc
jmp
cmp
iret
push
scas
cs
sahf
pop
cld
jp
mov
dec
(bad)
cld
jo
mov
jecxz
xchg
inc
stos
ins
xor
leave
jmp
cmp
add
ja
fcom
mov
loopne
inc
mov
(bad)
adc
(bad)
cmc
retf
xchg
xor
push
(bad)
jecxz
not
jns
mov
mov
out
sub
push
(bad)
es
cld
inc
sub
aad
sub
xchg
sub
xchg
push
sub
cmp
jae
xor
test
xor
jp
daa
bound
cmp
fiadd
leave
dec
in
jb
mov
inc
mov
or
outs
pop
nop
xor
jge
cmp
or
std
mov
and
inc
stos
sub
and
icebp
xchg
and
sbb
cmp
adc
pop
shl
int3
sub
outs
ins
bound
mov
fistp
and
aam
or
mov
in
pushf
pushf
sub
jno
mov
inc
jo
xchg
cmc
pop
xor
mov
inc
imul
inc
dec
movs
xchg
jbe
mov
das
fs
inc
ror
mov
sbb
outs
or
jmp
in
push
test
cmp
sbb
scas
and
adc
adc
(bad)
jp
ficomp
add
add
lock
dec
loopne
shr
pushw
mov
or
ins
leave
mov
xchg
sbb
jle
ins
inc
jb
es
xchg
or
adc
and
mov
(bad)
les
(bad)
leave
fadd
fsubr
test
add
jp
jbe
mov
test
call
or
pop
xchg
jmp
sub
adc
ficom
dec
inc
push
(bad)
jp
pop
ds
xchg
ins
dec
(bad)
jmp
add
pop
fadd
jo
stos
and
dec
sbb
and
cmc
jmp
and
inc
std
jnp
and
mov
add
add
rcr
sub
mov
mov
sbb
cmp
xchg
mov
or
sbb
xchg
jbe
mov
sub
fadd
mov
jecxz
movs
push
cld
outs
cmp
mov
popf
xchg
cmp
sbb
jg
inc
sbb
cmp
imul
adc
add
dec
out
sbb
stc
add
jmp
mov
push
sub
xchg
loopne
popf
mov
shr
test
sbb
pop
pop
das
add
cmp
sbb
jmp
inc
mov
test
int
adc
int3
xor
xlat
add
or
or
dec
lods
or
jecxz
cmc
mov
xchg
and
shl
pop
mov
adc
mov
sar
push
nop
and
or
mov
shr
fsubrp
(bad)
test
xor
mov
retf
cmp
sbb
mov
inc
outs
xchg
xor
cld
ret
push
mov
stc
movs
inc
jl
fisub
adc
fwait
xchg
leave
mov
in
jnp
(bad)
rcr
and
jne
mov
xchg
in
xor
add
xchg
pop
push
adc
fdivr
jo
jbe
pop
adc
sub
out
and
fsub
js
mov
pusha
in
or
les
add
sbb
movs
mov
std
and
mov
aaa
sbb
outs
in
movs
out
nop
and
push
into
push
mov
jge
rcl
test
sub
xchg
fstp
jno
mov
int3
sub
adc
add
pop
pushf
xor
dec
sbb
lods
iret
scas
ja
leave
test
(bad)
aad
pushf
ret
xchg
or
dec
push
fs
adc
jnp
cmc
and
add
and
or
mov
imul
xor
xor
test
xor
(bad)
(bad)
retf
cmp
jns
xchg
mov
xor
xor
adc
cmp
loope
push
inc
mov
cdq
retf
sti
or
gs
cli
fild
sbb
jnp
or
pop
fisubr
addr16
jbe
fisttp
(bad)
adc
iret
adc
adc
mov
xchg
dec
shr
add
stos
jmp
cmp
hlt
not
dec
fdivr
push
ds
int3
daa
sub
jmp
push
hlt
cmp
mov
jbe
stos
dec
mov
test
and
xchg
nop
gs
and
and
jl
dec
(bad)
(bad)
enter
pop
sbb
popf
inc
jbe
and
popf
xchg
cmps
mov
pop
sub
retf
ficom
push
push
enter
push
stc
dec
(bad)
jge
push
and
ins
mov
xor
bound
pop
adc
sub
pushw
cli
sete
sbb
sti
ds
xchg
stc
and
cmps
xchg
xchg
mov
cdq
push
lock
bound
mov
sbb
sub
sub
push
outs
pushf
movs
mov
dec
pop
ss
xchg
and
xor
sub
retf
enter
pop
je
sub
ins
mov
ins
mov
icebp
pusha
dec
pop
loopne
xor
out
aas
scas
adc
xchg
gs
pushf
cmp
das
mov
gs
movs
mov
out
fist
lods
mov
and
sbb
sbb
cmps
xchg
cld
iret
dec
and
jnp
sub
xchg
leave
pop
cvtps2pi
jmp
push
xchg
sub
mov
mov
jecxz
push
mov
push
cmp
shr
ja
mov
popf
cli
or
nop
dec
popa
fs
jae
mov
loop
sbb
arpl
inc
(bad)
push
xor
scas
sti
inc
mov
dec
aaa
pop
retf
cmp
and
add
and
dec
mov
mov
(bad)
call
push
bound
inc
fldenv
jge
jne
ins
nop/reserved
jae
test
dec
icebp
(bad)
stos
adc
fidiv
out
mov
aad
jne
inc
or
push
cdq
pop
jmp
mov
mov
enter
adc
mov
xchg
movs
leave
shl
sbb
xchg
xchg
imul
adc
ss
inc
sbb
jmp
xor
out
sub
shr
mov
mov
pop
popa
(bad)
sub
fs
ss
std
loop
inc
jno
adc
js
and
add
add
pop
retf
fld
int
ins
jmp
out
cmp
mov
daa
pushfw
call
adc
and
and
daa
mov
push
popf
pop
mov
pop
mov
cmp
scas
jle
xor
and
xor
mov
inc
(bad)
stc
push
xchg
rcl
xchg
ror
mov
js
adc
adc
scas
sub
sub
push
lahf
aas
pop
popf
pop
dec
push
jns
rcl
adc
mov
enter
xchg
lock
mov
inc
std
jle
test
xchg
hlt
int3
dec
in
mov
and
push
xchg
and
add
mov
and
inc
into
and
adc
cmp
mov
imul
pushf
jmp
addr16
fwait
xchg
jnp
fwait
movs
push
(bad)
dec
jmp
mov
call
sub
xor
mov
js
push
cmc
jnp
mov
xor
jg
cmp
jne
into
adc
stos
cmp
xchg
cmp
mov
test
mov
mov
push
xchg
mov
ret
xchg
mov
sbb
push
pop
loope
add
add
cmp
ds
ds
mov
in
lahf
dec
mov
adc
iret
inc
mov
rol
and
jb
jne
ficomp
cmp
jle
adc
sub
add
dec
mov
pop
sbb
fcomp
sbb
ret
(bad)
lods
pop
lods
enter
cmp
push
cmp
or
xchg
fbstp
pop
call
push
test
xlat
lods
sbb
add
jg
sub
pop
es
jg
add
cmp
inc
push
dec
ret
or
fnstsw
ins
adc
into
aas
pop
push
loop
fs
xchg
or
call
inc
test
loopne
xchg
in
cmp
adc
mov
mov
or
retf
push
or
xchg
inc
sbb
movs
pop
sub
pop
test
std
and
mov
out
in
sub
pushf
adc
jmp
sub
adc
and
fild
dec
rcr
cmp
pop
mov
leave
mov
into
ret
mov
dec
lds
jp
mov
xchg
or
jb
xchg
mov
aam
in
sahf
popa
lock
and
sub
(bad)
std
les
and
std
and
dec
jle
xchg
std
adc
into
icebp
cmp
addr16
adc
out
stos
adc
outs
cwde
mov
adc
sbb
xor
mov
cld
cmps
daa
(bad)
bound
in
inc
pop
pushf
fsubp
pop
xchg
or
sbb
repz
adc
dec
xor
cmc
cmp
int
and
dec
sbb
pop
clc
cwde
je
cmp
push
std
fist
stos
scas
push
int3
fild
out
jmp
and
dec
xor
imul
mov
push
mov
nop
mov
out
or
jb
out
and
daa
jecxz
out
dec
or
jae
fisttp
popa
inc
add
movups
and
out
cwde
and
fdivr
sahf
cmps
adc
mov
sub
rcr
lods
cmp
fisttp
js
xchg
mov
daa
cmp
mov
ss
push
sbb
sub
dec
xlat
pop
je
xchg
daa
sbb
retw
dec
add
add
fsubr
push
aaa
add
push
in
mov
xchg
xchg
idiv
adc
sbb
cmp
fdivr
sub
cmp
fsubp
jmp
jecxz
or
sbb
shr
js
jo
xchg
fstp
xchg
hlt
cmp
dec
pop
sbb
lds
call
fisubr
icebp
sub
jl
shr
loopne
mov
jg
cmp
cmp
xchg
push
imul
dec
(bad)
out
xor
arpl
enter
add
mov
dec
nop
mov
dec
sub
ins
dec
and
sbb
adc
cdq
pop
mov
mov
mov
fnstcw
adc
loopne
pop
daa
xchg
or
or
and
ja
sbb
fsub
push
push
daa
imul
out
mov
adc
and
xchg
movs
rcr
push
mov
xor
jecxz
sbb
(bad)
pop
xchg
mov
sub
movs
adc
fs
bound
arpl
sbb
frstpm(287
adc
in
and
push
mov
repnz
and
outs
shl
add
jmp
cmps
lock
push
and
enter
fs
mov
imul
push
div
mov
inc
fcomp
es
adc
dec
loopne
adc
mov
mov
mov
inc
and
call
jno
std
jl
cmp
mov
lock
bnd
nop
jo
lea
outs
push
retf
nop
sahf
popf
jbe
mov
retf
dec
loop
mov
mov
js
and
outs
sar
add
dec
jb
or
scas
ror
and
mov
bound
rol
xchg
jge
ret
sbb
sbb
xor
inc
movs
addr16
in
and
movs
mov
daa
push
adc
sub
or
mov
cmp
adc
cmp
mov
mov
inc
sbb
loop
fisubr
ficom
repnz
pop
call
cld
movs
mov
ja
lss
xchg
call
inc
imul
pop
push
scas
sub
dec
daa
jae
jae
cs
popf
mov
jp
mov
xor
inc
jb
pop
movs
in
outs
pushf
dec
imul
jno
pop
lea
test
jnp
pop
pop
shl
and
cmps
shl
mov
ret
cmps
jo
pop
jno
bound
retf
jp
cmps
lock
adc
cmp
daa
mov
popf
mov
bound
xor
and
xor
mov
test
jbe
mov
add
mov
and
out
je
in
bound
jno
mov
pop
xchg
pop
xchg
in
gs
add
and
sub
xchg
xchg
daa
cmps
retf
fcmovb
cmp
adc
xchg
sahf
fwait
in
adc
lds
leave
(bad)
in
inc
jnp
test
mov
inc
add
xor
add
inc
rcr
push
mov
xor
hlt
add
or
and
sbb
pop
jo
nop
mov
aad
repnz
mov
push
push
dec
push
leave
jmp
sub
pusha
test
dec
retf
outs
inc
mov
jecxz
add
push
cmp
mov
fwait
push
mov
jb
add
or
(bad)
daa
pushf
mov
clc
aad
pop
sti
adc
xchg
div
jmp
f2xm1
addr16
lds
mov
or
xchg
jmp
cmp
push
out
mov
jmp
das
and
lea
push
loopne
les
ja
push
imul
(bad)
dec
stos
xchg
push
test
test
out
sbb
push
push
inc
jp
hlt
mov
loopne
inc
imul
fidiv
call
fwait
cmps
and
nop
into
fwait
mov
(bad)
adc
adc
or
jmp
push
dec
stc
ret
(bad)
outs
lds
pop
int3
retf
repz
xchg
pop
adc
fist
jl
adc
fsubr
in
mov
push
cmp
sahf
(bad)
sub
movs
popf
cdq
pusha
xchg
call
call
xchg
sbb
adc
popa
push
mov
test
push
movs
std
icebp
hlt
or
into
daa
int
cmp
pop
sbb
mov
push
movs
fsub
pop
out
mov
test
mul
or
movs
push
in
jno
lods
retf
xchg
or
mov
lods
mov
mov
and
sbb
mov
mov
scas
enter
stc
mov
or
retf
ins
mov
or
leave
(bad)
loopne
lods
int
js
dec
outs
dec
fiadd
push
fsubr
addr16
(bad)
xor
fmul
cmp
cmps
(bad)
xor
cmp
mov
dec
cld
mov
xor
inc
dec
lods
push
sub
movs
outs
add
lds
aad
into
jp
xchg
loope
inc
daa
push
fwait
out
xchg
repz
pusha
sahf
fs
xor
mov
into
arpl
test
test
retf
stc
sbb
ror
call
mov
ret
xchg
sub
mov
retf
fst
jno
retf
cmp
add
gs
or
xchg
scas
int3
mov
fmul
dec
mov
cmovle
xchg
push
inc
sub
lods
add
clc
lds
mov
shr
sub
xchg
fs
add
pushf
(bad)
add
aas
xlat
adc
pop
mov
jg
add
movs
sub
mov
adc
jae
cmc
push
movs
push
icebp
adc
jecxz
ss
enter
jns
pop
xchg
pop
push
xchg
cmps
mov
xchg
jo
push
jns
sub
hlt
sbb
jg
jae
fidiv
mov
mov
popa
adc
out
(bad)
and
cdq
das
inc
mov
xchg
gs
retf
sub
ins
or
sub
add
add
xchg
sub
jb
and
cwde
sub
punpcklwd
and
dec
imul
test
add
nop
push
xchg
popf
mov
xor
inc
daa
jnp
scas
ins
mov
int
jno
push
mov
cmp
mov
sub
cs
pop
es
mov
push
add
jo
imul
in
jmp
pop
add
sub
sbb
push
sub
mov
nop
jmp
inc
add
dec
mov
inc
imul
jmp
xchg
shr
data16
into
xlat
je
jb
xor
xchg
push
rcl
aam
inc
mov
(bad)
movs
test
mov
stc
fwait
sbb
mov
js
scas
enter
cwde
call
mov
popa
dec
pop
dec
enter
or
add
arpl
xchg
and
fs
bound
inc
xchg
and
daa
popa
lahf
pop
pop
out
cmp
and
arpl
es
push
adc
sbb
sbb
mov
cmc
xchg
jo
xlat
aaa
dec
pop
dec
adc
jle
daa
jno
pop
(bad)
dec
jns
xchg
mov
pop
mov
jns
or
imul
adc
imul
cdq
sbb
dec
xor
arpl
push
push
and
cmp
mov
mov
imul
sub
cmp
mov
movs
and
pop
rol
fistp
dec
and
push
inc
inc
stc
or
nop
in
xlat
mov
pop
push
mov
and
and
out
cs
(bad)
fld
xchg
sbb
js
sub
mov
cmp
jmp
dec
dec
sbb
inc
mov
mov
adc
add
gs
stos
add
loope
inc
aaa
mov
and
cmc
into
in
ins
test
inc
sbb
fwait
and
fidiv
add
aam
cmp
xchg
add
adc
inc
mov
cmps
cmp
loope
mov
sub
in
cmp
push
adc
inc
es
out
add
mov
mov
push
sub
jmp
ror
mul
inc
and
mov
scas
and
inc
cmp
out
push
mov
ins
jb
and
sbb
and
and
mov
daa
aam
and
mov
popa
add
cmp
call
add
movs
jno
dec
xor
fs
ret
push
scas
lds
fstp
(bad)
mov
mov
cld
mov
or
movs
test
mov
or
sbb
pushf
inc
fnstsw
mov
nop
mov
cmp
xor
xor
xchg
je
jne
jb
xchg
jnp
and
sub
xchg
sbb
je
cmps
scas
cmp
jae
push
ss
out
sbb
mov
retf
ret
jbe
pop
jecxz
movs
pop
ret
and
fbld
push
xchg
mov
dec
(bad)
dec
sub
xor
faddp
ror
mov
pop
dec
add
jae
(bad)
dec
jno
xlat
aaa
inc
xchg
and
push
sub
in
rol
clc
mov
push
fimul
mov
adc
sbb
mov
jle
xchg
and
(bad)
std
mov
xchg
je
sbb
cmps
inc
xor
jo
je
xchg
adc
(bad)
and
dec
loope
in
repz
jle
ins
add
les
loop
sub
dec
ja
icebp
dec
mov
lds
jno
push
gs
and
jbe
sbb
sub
add
mov
and
sbb
mov
add
nop
dec
fild
xor
sbb
jmp
add
fwait
(bad)
into
and
inc
cwde
in
ja
xor
xor
in
sub
fadd
popa
mov
ds
dec
dec
ret
movs
add
shl
cld
xor
cmp
mov
cdq
push
nop
jmp
pop
dec
push
xor
mov
iret
adc
cld
out
popf
cs
pop
add
ror
push
cmps
dec
aad
sbb
ja
add
and
jg
cmps
mov
adc
js
sub
adc
xchg
and
jp
test
and
loop
(bad)
mov
pop
and
inc
mov
test
call
xchg
sar
or
cmc
inc
pusha
jnp
mov
es
or
dec
or
dec
inc
jbe
test
mov
and
int3
xor
outs
sbb
test
jmp
mov
ss
dec
aas
xor
lock
mov
jns
ds
or
push
(bad)
ss
fmulp
ret
push
pop
push
push
adc
fnstcw
out
lods
dec
pushf
add
dec
xor
or
or
add
cmps
lods
and
xchg
mov
add
mov
jecxz
mov
mov
pop
dec
xchg
fwait
cmp
push
bnd
fsub
adc
test
ss
test
mov
test
add
addr16
sub
in
mov
cmp
enter
mov
repnz
jbe
cmps
jp
and
ds
push
jae
dec
cmp
pop
(bad)
and
pop
sbb
cwde
outs
clc
sbb
push
hlt
sti
iret
loop
retf
in
sub
sar
fcmovnu
pop
sub
movs
mov
jl
movs
xchg
cmc
add
cmps
push
sub
add
add
xchg
pop
add
(bad)
inc
add
popf
dec
sbb
js
fs
jno
push
call
or
sbb
or
fisub
das
jno
jo
jecxz
sti
inc
cli
(bad)
xchg
aad
jo
dec
and
aaa
inc
popa
pop
std
fsub
out
and
push
leave
mov
je
or
add
mov
icebp
mov
je
or
ret
push
jmp
adc
in
dec
jecxz
popf
inc
aaa
mov
jge
ins
fwait
pop
adc
and
cmp
jb
and
push
push
daa
cmp
add
mov
test
sbb
sbb
adc
sbb
add
iret
xor
dec
icebp
add
xchg
mov
gs
ret
ja
pop
inc
mov
add
les
rcl
push
and
fs
jbe
leave
pop
test
dec
add
cmps
pop
gs
jb
fistp
test
xor
fsub
enter
pop
in
dec
jecxz
push
scas
adc
lahf
push
leave
ror
sbb
xor
mov
shr
and
or
mov
hlt
data16
aad
movs
mov
dec
imul
cli
and
fild
lods
sbb
mov
fsub
enter
xor
jge
aas
fidiv
cli
add
cmovp
call
stos
and
mov
call
fsubr
aam
dec
stos
or
mov
imul
pop
daa
shl
movs
stos
push
fisub
in
sar
and
xchg
aaa
rcr
push
dec
retf
test
jnp
pop
mov
jb
mov
cwde
jae
aaa
fadd
or
cwde
or
mov
jno
es
push
xchg
imul
ret
sub
paddusb
xor
popf
push
iret
sub
out
or
adc
add
test
call
loope
bound
mov
xchg
push
mov
jb
imul
xor
and
cmp
push
cdq
(bad)
cli
retf
pop
mov
sahf
mov
jne
test
fwait
mov
mov
cmp
in
jbe
sti
call
xchg
jp
out
mov
xchg
stos
and
add
jmp
inc
fnstsw
stos
data16
xchg
adc
retf
push
inc
in
scas
dec
push
loopne
and
and
cmp
stos
iret
shl
mov
dec
leave
push
mov
je
sbb
fcmovnbe
push
sub
inc
dec
dec
sub
sbb
sbb
rcl
std
jbe
xor
in
push
fisttp
aaa
jmp
cwde
lods
push
fild
divps
dec
div
into
xchg
mov
ss
xlat
das
sub
ins
xor
sar
pop
mov
ret
pusha
repz
leave
mov
mov
xor
lock
loope
jp
cmc
in
lods
cmps
mov
fst
inc
jle
mov
rcr
xor
lock
cmp
mov
in
hlt
(bad)
lahf
push
or
js
dec
mov
push
sar
dec
shr
dec
sbb
sbb
xchg
mov
dec
push
or
xchg
mov
mov
dec
mov
mov
dec
jnp
inc
sub
inc
sbb
popa
scas
lds
dec
push
fdiv
clc
inc
outs
jmp
lea
sahf
inc
sub
lods
mov
push
pop
and
aam
loop
mov
in
xor
sub
out
das
lahf
popa
mov
dec
xor
fwait
aaa
push
sub
xchg
ret
mov
(bad)
xchg
inc
es
outs
xor
dec
and
daa
adc
div
aad
and
and
push
mov
(bad)
xchg
imul
int
push
pop
sbb
(bad)
fidivr
and
mov
mov
(bad)
enter
mov
ins
or
pusha
cmp
pop
popf
leave
dec
and
jmp
inc
xor
sub
adc
shl
jo
xchg
jae
pusha
loopne
sar
(bad)
ja
sub
das
push
cli
jbe
test
jecxz
cli
mov
and
dec
dec
or
inc
mov
int
xchg
lahf
cmps
iret
retf
lods
mov
sbb
xchg
push
fs
mov
ror
(bad)
inc
sub
push
push
mov
icebp
out
test
mov
sahf
or
test
sbb
stc
ret
out
mov
dec
sbb
loope
in
out
je
mov
cmp
fld
shl
and
ficom
push
test
dec
dec
sub
push
push
gs
out
jecxz
in
adc
mov
mov
adc
and
and
cmp
pop
rcr
adc
or
add
and
sub
lods
out
pop
adc
cmp
nop
xor
dec
lods
cmp
or
outs
call
shl
jo
jecxz
mov
dec
inc
fisttp
cmps
or
xchg
jnp
cmp
mov
sub
xchg
adc
sbb
nop
xlat
fcom
push
xchg
mov
push
cdq
and
repnz
cmps
pop
pop
mov
adc
or
out
mov
leave
mov
xchg
cmp
fdivr
or
out
cmp
dec
push
pop
pusha
test
jp
mov
inc
xchg
and
test
adc
cmp
jg
push
sub
cdq
xor
xor
test
sbb
mov
and
xchg
pop
inc
fiadd
inc
and
out
mov
mov
clc
iret
jl
rcl
mov
int3
dec
or
push
cmps
call
or
or
sbb
ffree
mov
jo
cmp
mov
mov
dec
fisttp
sbb
bound
dec
mov
call
adc
lds
ret
(bad)
jmp
mov
jbe
mov
pop
xchg
pusha
mov
cmp
cli
cmp
mov
retf
jno
mov
test
(bad)
and
sub
in
ss
fwait
test
push
dec
in
into
(bad)
and
fcom
or
mov
lds
pushf
jg
jl
adc
dec
add
or
(bad)
mov
pop
mov
adc
add
arpl
xchg
fst
mov
cwde
inc
mov
mov
enter
ror
add
lds
inc
sbb
jmp
xchg
gs
jno
cmp
stos
shl
je
std
cs
pop
cmps
dec
(bad)
test
int
dec
int
mov
adc
in
sub
jo
inc
pop
rol
fmul
imul
repz
inc
cmps
test
movs
add
jecxz
pop
xchg
fdivr
mov
pop
sbb
mov
ja
or
dec
jno
test
adc
xor
int
ss
push
test
add
and
mov
and
nop
inc
ret
sub
xor
add
(bad)
aas
dec
test
and
inc
fs
inc
cmp
sub
mov
nop
cld
mov
nop
(bad)
xchg
cmc
shl
and
loopne
inc
scas
mov
inc
stc
addr16
in
xor
jno
pusha
loopne
mov
ror
ds
pop
gs
lea
mov
jle
mov
xchg
cmp
popa
or
sub
pop
aad
mov
pushf
inc
and
sahf
nop
pop
rcl
sub
(bad)
lods
inc
xchg
and
nop
and
sub
sbb
dec
aaa
jmp
icebp
sub
jb
in
ds
pop
cmp
xchg
jmp
sub
xchg
or
mov
mov
add
sub
bound
xor
sub
enter
and
xor
retf
sbb
push
scas
or
clc
fwait
rcr
mov
cs
pop
jbe
retf
retf
jge
pop
and
ins
inc
cli
cmps
and
fstp
out
add
pop
jmp
(bad)
jmp
push
dec
xor
inc
gs
jae
inc
int3
scas
repz
mov
popf
jecxz
fs
sbb
mov
call
les
in
dec
and
sti
mov
cwde
mov
and
adc
fisub
outs
mov
outs
xchg
sub
rcr
xchg
xor
or
rol
jns
popf
cli
or
add
aas
movzx
mov
cdq
pop
or
loop
jno
data16
xor
ret
cmp
dec
out
push
fistp
(bad)
clc
xor
inc
add
int3
and
sub
or
sbb
(bad)
retf
lahf
scas
and
add
adc
xchg
pop
add
test
out
bnd
add
xchg
and
sbb
mov
add
mov
adc
retf
test
dec
daa
add
cwde
ror
xchg
mov
pop
dec
cmp
jno
iret
push
leave
lods
mov
dec
mov
inc
es
cmps
and
mov
jge
xchg
dec
shl
lea
jno
cs
(bad)
xor
add
retf
cmc
imul
rcl
shl
inc
popa
aas
fwait
lea
and
cmp
xchg
neg
mov
call
leave
les
jae
mov
adc
mov
jmp
pop
mov
ss
ror
adc
js
xchg
adc
movs
mov
ss
xor
sub
or
scas
rol
popf
mov
shr
sub
dec
and
and
push
jae
(bad)
dec
mov
xchg
push
xchg
mov
fistp
push
sub
inc
cs
dec
dec
add
inc
pop
(bad)
das
dec
les
bound
nop
jb
mov
movs
adc
dec
dec
add
mov
lods
push
mov
es
jae
nop
or
sahf
outs
sti
out
ss
fs
or
dec
mov
inc
hlt
retf
adc
pop
std
jno
in
mov
out
or
jg
xchg
sahf
xchg
xor
dec
in
repnz
or
ss
push
lods
(bad)
mov
xchg
movs
add
and
scas
dec
mov
les
dec
adc
shl
sub
and
lahf
jne
mov
pop
sub
bound
imul
fdiv
test
arpl
fs
jnp
xchg
jnp
dec
sbb
mov
cmps
leave
and
jo
ja
push
rol
jmp
test
popa
xrelease
fnsave
jno
loop
push
aad
inc
retf
adc
std
fld
frstor
jo
and
out
in
inc
sar
jmp
jecxz
in
aas
jns
inc
add
xchg
push
jbe
je
mov
xor
lods
imul
jbe
lahf
jo
into
dec
cmp
xchg
daa
bound
cmp
mov
inc
push
inc
cmp
or
push
into
fild
sbb
mov
mov
(bad)
xchg
push
test
push
test
imul
sub
daa
xchg
add
sub
inc
ja
sub
ror
in
cmp
xor
adc
fbld
sar
xor
sbb
add
push
mov
or
push
es
mov
xchg
adc
inc
cmps
rcr
mov
mov
mov
shl
ins
cmp
mov
call
(bad)
movs
sub
pop
out
push
aas
dec
mov
cmps
mov
adc
retf
call
(bad)
sub
ss
push
adc
pop
jns
into
or
loope
stos
xor
mov
lahf
xchg
mov
mov
pop
sub
(bad)
adc
dec
repz
shl
into
adc
xchg
inc
adc
add
push
sar
(bad)
fild
js
sub
adc
stos
xchg
movs
daa
adc
sbb
out
fs
cmp
add
jbe
fisubr
push
call
xchg
mov
(bad)
clc
mov
iret
stos
(bad)
test
mul
xchg
inc
pop
xchg
xchg
dec
xor
mov
cmp
xchg
(bad)
aaa
push
lods
and
sbb
xor
fstp
pop
or
pop
repz
dec
icebp
or
mov
lahf
inc
or
push
movs
popf
shl
(bad)
jg
test
addr16
aam
xchg
jmp
adc
das
in
fisubr
cli
sub
jge
(bad)
push
cwde
cwde
shr
sub
arpl
jns
and
mov
xchg
mov
sub
sbb
ret
movs
push
and
mov
cmp
clc
mov
mov
pop
inc
mov
pop
jg
pop
mov
xchg
xor
or
inc
mov
push
sbb
sbb
dec
sub
pushf
pusha
jno
dec
loope
dec
jg
dec
retf
mov
cmps
inc
dec
or
cmp
lods
add
in
adc
inc
jmp
pop
test
dec
xchg
leave
rcl
ins
adc
es
aam
leave
iret
ins
mov
ins
xchg
push
jno
xchg
fsub
stos
sbb
jo
mov
ds
les
mov
lds
cdq
xchg
push
mov
adc
push
mov
in
add
add
push
stc
ret
mov
cmp
inc
sti
movs
loopne
jle
mov
xchg
popf
enter
xchg
ret
imul
popa
mov
sbb
bound
ins
int
xchg
xchg
mov
jb
inc
leave
inc
push
xor
jno
js
sbb
les
neg
inc
fsubp
xor
in
rol
push
xchg
lock
xor
dec
je
or
outs
popa
xor
popa
xchg
das
xor
pop
inc
rcl
outs
movs
adc
daa
bound
cmp
inc
les
mov
rol
pushf
stos
jp
jg
cmp
aam
add
pushf
jge
push
push
fwait
dec
gs
xor
sub
hlt
fcom
dec
or
inc
pop
cmp
xor
call
outs
lea
aam
adc
cdq
or
pop
scas
inc
test
retf
sub
test
mov
mov
xor
jno
adc
inc
push
movs
jecxz
fs
mov
es
in
or
sbb
xchg
xchg
push
mov
xchg
sbb
fisttp
inc
jb
lea
in
adc
jge
mov
out
jb
shl
add
enter
call
in
pushf
shl
les
add
push
xor
into
push
jp
adc
movs
inc
jbe
rcr
push
fcomp
aaa
mov
and
jno
xchg
ss
clc
inc
xchg
ins
nop
dec
ins
inc
in
cmp
push
sub
sub
adc
mov
cmp
ins
test
xor
or
adc
es
and
pop
and
add
(bad)
cmp
loope
xchg
add
(bad)
out
js
fsubr
jns
mov
mov
adc
movs
(bad)
and
cmp
and
mov
or
test
jge
aas
cmp
adc
and
(bad)
dec
jns
out
sbb
loope
call
mov
inc
ja
mov
ror
jnp
rol
mov
out
or
xor
fsub
add
cmc
int3
inc
sub
leave
jmp
xchg
test
lahf
cmp
lods
fdivr
dec
jmp
inc
loopne
outs
add
fadd
jmp
ds
ret
fbld
out
dec
xchg
stc
inc
idiv
mov
in
sub
adc
sbb
or
fild
aas
xchg
dec
xchg
mov
mov
pop
daa
ins
arpl
mov
jbe
inc
jmp
pop
(bad)
dec
pop
ss
gs
es
pop
test
dec
push
aam
push
ss
cmp
mov
jns
sub
push
lahf
dec
hlt
fwait
jo
arpl
pop
mov
stos
inc
(bad)
xchg
popf
sub
jecxz
ja
lea
retf
sub
mov
or
xor
not
rep
xor
cmp
cmp
sbb
les
popa
cmc
mov
repnz
xor
fcmovnbe
sbb
or
xchg
xor
sub
inc
popa
daa
xchg
cmp
scas
jp
fistp
xchg
bound
lods
xor
mov
test
cmp
xor
jnp
pop
adc
mov
sub
daa
jno
jns
sbb
push
push
adc
mov
cmp
mov
pop
sbb
xor
adc
add
pop
or
test
dec
loope
sbb
aas
pushf
push
ret
das
pop
xchg
and
enter
pop
mov
mov
jecxz
and
adc
add
(bad)
or
mov
pushf
inc
and
dec
and
adc
cdq
add
pop
in
xor
ss
push
pop
push
bound
mov
add
inc
and
stc
ret
pop
xchg
adc
or
mov
(bad)
xchg
cs
jae
cmc
xor
adc
jecxz
jb
xchg
mov
and
push
push
icebp
sub
dec
push
adc
xchg
push
cmps
(bad)
rcl
add
jo
xchg
shl
imul
push
xchg
lahf
mov
sbb
out
or
icebp
ret
sub
pop
push
ret
sub
sti
scas
mov
call
in
mov
adc
fnstenv
jb
push
fwait
inc
cmps
or
lock
lock
(bad)
jnp
adc
fstp
sbb
(bad)
call
ins
hlt
push
fwait
cwde
mov
fsubr
sbb
jge
les
mov
shl
push
xchg
xchg
arpl
mov
cld
add
ins
cmc
adc
sti
inc
dec
cs
test
push
in
dec
imul
jle
pop
jl
loope
adc
push
xchg
aas
in
push
int
xchg
mov
movs
iret
lahf
xor
sti
arpl
xchg
daa
sub
cld
loop
mov
adc
test
outs
rcl
or
mov
sar
xlat
inc
jnp
retf
mov
jl
adc
ja
mov
in
bound
mov
pop
adc
cli
ret
(bad)
popf
adc
mov
jno
mov
movs
or
xchg
out
inc
stos
xor
cmp
jecxz
bound
jae
in
popa
pop
adc
inc
xor
popf
push
pop
or
xor
into
jge
inc
test
jl
cmp
ret
lods
outs
push
ret
xchg
call
push
movs
stos
leave
cmps
retf
std
add
mov
and
retf
xchg
rcr
inc
outs
mov
fs
cld
mov
popf
in
xchg
mov
adc
pop
mov
enter
jge
xchg
dec
inc
fild
leave
sbb
(bad)
sbb
push
into
dec
and
neg
sub
inc
cmps
mov
es
push
and
mov
imul
cdq
dec
rol
sbb
inc
bound
(bad)
stc
add
jns
and
sub
jl
cmp
and
pop
xor
mov
adc
mov
and
scas
and
push
retf
enter
inc
fisttp
xor
jmp
test
test
sub
fidivr
gs
adc
xchg
popa
push
int
dec
push
mov
add
or
mov
stos
jns
fs
bound
into
adc
xchg
aas
inc
pop
lods
cli
popw
push
xchg
mov
and
lods
push
cmp
xor
xchg
adc
fldenv
push
imul
xlat
mov
push
jbe
fucomi
xor
pop
sbb
fsubp
jmp
mov
xor
cdq
adc
mov
bound
xchg
int3
xor
or
push
xor
xchg
inc
ins
and
fsub
mov
les
(bad)
ficom
inc
(bad)
pop
and
inc
loop
xor
xchg
hlt
push
sub
sbb
mov
push
inc
cmps
jecxz
pop
adc
pop
or
mov
(bad)
repnz
inc
out
enter
add
aad
xlat
cmp
and
cmp
sbb
jbe
popa
test
in
popa
aas
mov
int3
fneni(8087
sub
in
int
cmc
mov
inc
push
mov
lods
cmc
into
out
shl
cli
mov
push
test
xor
rol
ds
cmp
out
or
dec
push
ss
mov
ret
sbb
push
int
cmps
add
jae
mov
ret
xchg
xchg
lods
stc
cwde
aas
sub
(bad)
jb
mov
xor
(bad)
retf
retf
adc
or
aad
(bad)
jmp
fimul
popa
fmul
cdq
inc
cwde
std
dec
sbb
cmp
mov
das
push
arpl
mov
push
test
aam
push
int3
sub
in
push
call
imul
ds
xchg
dec
push
xlat
xor
cmp
rcl
adc
jae
into
adc
push
das
ins
test
and
scas
les
aam
retf
pushf
add
fstp
xor
pop
jmp
mul
jb
push
dec
repz
mov
jmp
sub
fistp
inc
stos
test
mov
add
dec
fcomi
xchg
jbe
loope
shr
pop
stos
sub
jns
mov
jmp
mov
cdq
pop
(bad)
sbb
sub
mov
mov
scas
adc
mov
mov
outs
xchg
mov
dec
sub
xchg
(bad)
(bad)
cmp
jmp
mov
or
mov
pop
je
movs
sbb
cmps
rcl
mov
bound
(bad)
retf
mov
jb
mov
out
sbb
mov
cmp
inc
jbe
jl
popa
mov
xchg
adc
add
pushf
add
in
iret
sub
fstp
xor
cmp
loop
push
push
mov
movs
push
jl
jo
ins
pop
cld
cwde
call
dec
(bad)
ins
sbb
stos
cs
je
mov
push
je
sahf
cmps
(bad)
push
and
inc
and
jle
mov
enter
outs
dec
cmps
and
enter
mov
mov
push
or
xrelease
adc
or
call
inc
nop
and
xchg
cmp
sbb
popf
int3
jnp
cmc
adc
sar
push
cmps
test
push
stos
inc
mov
jno
mov
clc
xchg
movs
adc
inc
pushf
sbb
inc
mov
test
int
(bad)
(bad)
stos
cmp
jbe
push
xchg
ret
cs
cdq
pop
scas
pushf
mov
push
push
fld
je
(bad)
sub
xchg
push
hlt
std
enter
mov
popf
push
mov
pushf
sbb
(bad)
int
pop
fmul
lods
xor
lea
pop
push
ffree
cmp
jp
jp
fst
push
mov
xchg
sbb
js
enter
push
push
nop
nop
jle
sbb
mov
fmul
loopne
lods
ins
ss
mov
nop
repnz
pop
pusha
sbb
movs
or
test
push
mov
adc
fcomp
pop
ror
jecxz
adc
sbb
push
adc
xchg
popf
(bad)
cmp
stc
inc
dec
and
fiadd
adc
mov
adc
out
ins
(bad)
xor
mov
pop
jmp
fisubr
int3
push
pop
neg
push
jecxz
ficomp
fsubr
mov
xchg
out
gs
sub
test
mov
mov
outs
xchg
mov
sbb
jecxz
mov
stc
arpl
js
push
jmp
imul
mov
jns
adc
arpl
imul
aad
aam
sub
in
movs
movs
loope
add
lods
pop
ret
jge
fwait
inc
aaa
inc
xor
ja
xchg
lods
cmp
push
or
and
mov
(bad)
cmp
fadd
fnsetpm(287
test
inc
ss
out
jge
sbb
sub
loope
test
jecxz
shl
and
adc
xchg
or
cmp
in
jnp
movs
ds
int3
or
and
inc
adc
or
jb
dec
dec
cmps
xor
bound
xchg
adc
inc
(bad)
fild
add
sub
mov
or
cdq
test
sub
sbb
stos
pop
mov
sar
addr16
adc
and
in
add
cmp
add
gs
push
popa
repnz
iret
jmp
imul
pop
outs
sbb
pmaddwd
adc
xor
aas
ja
stc
or
ss
ficomp
cmp
adc
xor
shl
in
cwde
push
fldenv
pusha
loopne
jp
mov
mov
lods
mov
test
mov
sbb
stc
ret
xchg
ja
xlat
pop
sub
push
cmps
push
sub
sar
jno
and
add
rcl
mov
and
pop
(bad)
push
push
mov
jb
jge
lahf
pop
xor
dec
dec
cmps
(bad)
clc
out
mov
ret
mov
out
bound
xor
cmp
xchg
enter
xchg
jp
or
xchg
jb
aas
(bad)
add
sub
xor
inc
lods
arpl
pop
push
sbb
and
aas
or
out
rcr
popa
add
jge
fistp
mov
sub
adc
pop
mov
push
daa
sbb
jg
ret
repnz
shr
xchg
shl
mov
call
call
mov
mov
(bad)
sub
(bad)
sbb
iret
push
cmps
pop
cmp
out
mov
dec
sbb
test
xor
xor
mov
sub
dec
shl
pushf
jl
dec
nop
mov
and
xor
adc
adc
dec
aas
pop
imul
pop
pop
push
mov
xlat
adc
inc
jle
xchg
or
popf
(bad)
or
and
and
push
dec
(bad)
xor
ret
imul
es
lea
cs
xor
enter
mov
or
lock
dec
xchg
pusha
ins
xor
mov
cli
ret
bound
das
ret
and
xor
sahf
xchg
pop
dec
gs
leave
adc
cmp
es
repnz
(bad)
test
inc
imul
xchg
aas
dec
dec
dec
mov
out
adc
inc
push
je
pop
dec
add
mov
dec
lea
jb
ss
add
mov
and
mov
xchg
mov
mov
ins
adc
lods
mov
int3
and
(bad)
sub
mov
and
sub
sub
adc
cwde
ror
fs
test
pushf
repnz
and
out
and
and
mov
mov
popa
test
repnz
ins
xchg
cmps
ds
arpl
push
and
(bad)
jae
mov
dec
sbb
(bad)
add
lods
jne
and
jmp
cmp
(bad)
ficom
cwde
ins
cmps
cdq
mov
div
cmp
xchg
dec
sbb
sub
fdiv
xor
out
cli
ret
imul
sti
mov
adc
repnz
sub
sbb
mov
fstp
in
(bad)
mov
bound
movs
inc
outs
pop
nop
rol
sbb
ss
lods
(bad)
adc
sub
mov
ds
jno
inc
lock
out
dec
mov
pop
adc
mov
and
shl
or
mov
jg
push
jmp
daa
jno
dec
aaa
cmp
fsubr
pop
fsub
mov
xor
xor
arpl
and
fwait
mov
adc
shl
nop
push
pop
jge
or
sub
sbb
popf
rcr
das
mov
mov
out
jle
cmc
shl
jecxz
inc
adc
sub
jmp
test
xchg
add
(bad)
jp
rol
jecxz
gs
inc
outs
in
dec
fwait
push
sub
sahf
stc
pop
outs
daa
jmp
mov
aaa
xor
fisub
mov
xchg
cmp
lahf
sub
push
repz
adc
push
in
cs
sahf
cld
out
sbb
pusha
cmps
xchg
adc
jp
mov
xor
sbb
push
push
cmps
outs
or
popa
sub
mov
es
fs
je
mov
bound
push
add
lods
les
mov
jno
or
mov
dec
adc
cmp
loope
cli
add
outs
jle
movs
mov
jae
and
xchg
scas
and
jmp
fstp
push
adc
ss
fsub
(bad)
push
dec
mov
sub
mov
mov
sti
imul
arpl
call
xor
push
sub
loopne
jbe
mov
mov
mov
cwde
push
sbb
mov
xchg
cli
out
or
inc
and
cmp
cmp
popa
aad
fisttp
inc
int
pop
cmp
mov
xchg
js
add
mov
test
sbb
pop
or
cli
shl
frstor
jns
cmc
xchg
dec
inc
cmps
jb
jge
test
aas
sbb
int3
(bad)
pop
cdq
jne
sub
out
jmp
cmps
loopne
or
or
retf
cmp
imul
push
jle
or
xchg
ror
cs
in
dec
cmp
mov
and
mov
test
and
add
in
fs
cdq
es
dec
xor
cli
(bad)
jns
jno
ja
or
in
jno
loop
ins
jo
sub
aad
mov
cs
pop
fidivr
mov
dec
ds
js
add
mov
push
mov
dec
shl
call
mov
sub
imul
jmp
push
sub
fwait
lahf
jno
mov
or
adc
retf
sbb
sub
sbb
cmps
jo
sbb
adc
and
adc
push
scas
sub
repz
int
inc
and
(bad)
sbb
dec
and
fwait
mov
or
push
pop
xchg
push
jecxz
dec
gs
aam
pop
out
pop
pop
jns
(bad)
fist
sub
retf
cmp
adc
in
xor
add
adc
mov
out
add
xchg
sbb
sub
mov
mov
int
cmp
push
faddp
cli
inc
jb
sbb
mov
outs
ss
out
mov
jmp
dec
cmovb
lahf
jne
(bad)
inc
jmp
dec
xor
(bad)
fs
dec
inc
cmps
arpl
movs
adc
mov
out
add
(bad)
ret
push
adc
(bad)
add
pop
push
movs
pop
push
fsubr
inc
mov
shl
cmps
sbb
dec
outs
popa
lods
jmp
push
cld
rol
sar
xchg
gs
mov
(bad)
and
test
dec
push
aaa
and
les
repz
neg
sub
mov
call
ret
lahf
lahf
movs
push
xor
cmps
adc
xor
arpl
xchg
xor
jae
pop
nop
xchg
fsub
(bad)
std
jns
test
sbb
sub
cmp
iret
sub
out
pop
pop
aam
test
cmps
xchg
push
jmp
sub
sub
sub
add
jbe
ss
sub
cmp
mov
xchg
jg
jnp
stos
mov
adc
xchg
sub
mov
pop
aas
jp
xchg
(bad)
jno
addr16
xor
adc
pop
xor
movs
mov
in
push
inc
dec
and
sbb
add
je
dec
push
pushf
addr16
arpl
jge
pop
adc
or
pusha
push
xor
scas
clc
sbb
aaa
jb
mov
sbb
sahf
pop
nop
cmp
test
ins
test
enter
dec
add
cmp
enter
push
dec
push
or
push
add
and
and
pop
ret
imul
sub
or
push
mov
test
jb
xchg
shl
mov
fisubr
movs
xchg
stos
mov
scas
std
addr16
pop
dec
push
inc
pop
mov
ret
sub
add
ins
or
and
add
fmul
ficom
(bad)
jne
inc
add
movs
dec
adc
pushf
and
jmp
(bad)
repnz
retf
icebp
hlt
ds
data16
jb
addr16
or
push
sub
xchg
mov
inc
in
jecxz
sbb
sbb
loope
jno
mov
mov
cmps
shr
inc
adc
jge
cli
out
and
mov
jmp
bound
jge
xchg
mov
push
shr
cmp
je
ficom
pushf
jecxz
fmul
or
test
xor
add
inc
dec
cmp
outs
test
arpl
mov
rcr
xchg
sub
ins
ins
lock
mov
int
scas
jl
pop
xor
mov
sub
mov
mov
ins
int3
ret
xchg
push
shl
mov
jg
push
xor
jae
dec
ficomp
in
xor
out
jmp
jle
ror
aas
imul
cmc
outs
nop
mov
push
cmp
lods
test
xor
mov
addr16
lods
mov
sub
js
xor
jg
mov
mov
mov
sub
xor
nop
rcr
aaa
dec
jmp
mov
add
enter
cmp
fimul
mov
rol
or
mov
or
adc
mov
fninit
or
xor
or
xchg
add
into
inc
shr
popa
fwait
dec
xor
jno
dec
xor
add
dec
inc
jnp
ja
push
xchg
and
inc
and
mov
ds
sub
dec
ds
mov
xchg
lods
xchg
jb
cmps
daa
cmps
pop
fs
leave
adc
mov
or
cmp
mov
push
xor
(bad)
cwde
inc
pop
lods
int
cmp
sbb
mov
dec
(bad)
push
pop
rcl
cmps
push
loopne
dec
mov
in
outs
fadd
stos
shr
jge
outs
adc
loope
and
pushf
inc
ja
push
xor
repz
mov
cmp
cld
loop
out
xor
cwde
jmp
push
push
and
add
cmp
and
cmp
and
out
dec
test
stos
call
xlat
pop
inc
fsub
mov
aaa
sub
add
ins
addr16
pushf
ins
add
fwait
dec
sbb
clc
lds
xchg
inc
inc
sbb
pop
jne
dec
push
jo
dec
mov
pop
test
dec
xchg
push
adc
les
push
or
jno
cmp
test
movs
pminsw
and
cmps
dec
dec
test
push
adc
fistp
xor
retf
out
in
cld
and
push
arpl
movs
cwde
das
mov
pop
add
into
(bad)
sbb
inc
dec
dec
in
loope
mov
sti
in
mov
mov
and
mov
and
daa
sbb
push
jecxz
out
mov
in
cs
xor
jno
sti
push
jge
adc
xlat
xchg
popf
cmp
aad
cld
(bad)
je
push
sbb
inc
inc
jbe
sbb
xchg
stos
add
mov
or
enter
cmp
and
sub
adc
jmp
adc
or
xchg
loopne
mov
xchg
push
dec
nop
inc
arpl
and
jl
inc
cmp
fidiv
enter
and
div
sti
inc
es
or
cmp
adc
xchg
outs
retf
dec
mov
pop
cmp
fsub
xchg
aaa
add
or
fs
mov
lea
popa
push
shl
push
es
lods
leave
rcl
or
adc
rol
jl
cmps
fstp
imul
adc
and
mov
add
test
cmp
xor
jmp
mov
sub
outs
push
jne
daa
loope
jmp
test
pop
pop
leave
push
mov
push
pushf
pop
enter
loope
and
sub
mov
push
xor
stc
lds
cdq
jl
jmp
leave
sbb
sbb
sub
push
dec
xor
and
cs
(bad)
into
jne
sbb
mov
lods
pop
sub
inc
inc
add
mov
xchg
push
jmp
jl
ficom
adc
ret
jmp
jb
cmp
(bad)
fmul
out
inc
cmps
dec
adc
add
lea
dec
xchg
dec
js
jmp
and
ins
fsubr
xchg
mov
loop
dec
jns
lods
test
push
in
mov
(bad)
out
xor
mov
push
mov
jge
lods
cli
dec
ins
imul
stos
add
push
dec
pop
xchg
dec
pushf
mov
cmp
mov
(bad)
jmp
sbb
cmp
les
movs
lds
mov
xor
gs
and
or
push
clc
add
jle
sbb
enter
jo
pop
mov
fld
cmps
sbb
and
popa
adc
sbb
pusha
bound
(bad)
and
out
js
push
inc
addr16
add
leave
xchg
and
sbb
cld
xchg
adc
mov
or
add
js
rcr
rcl
lds
cdq
mov
out
add
mov
pushf
in
lock
jnp
mov
push
xchg
xchg
jmp
mov
sbb
inc
or
fsub
lods
or
repz
and
popf
repz
add
cmp
mov
sbb
loope
stos
cli
int3
and
shr
xor
fs
cmp
xor
jb
nop
aaa
jmp
nop
test
xor
movs
cmp
add
xchg
inc
inc
pop
out
adc
stos
(bad)
or
call
jb
lods
sbb
retf
cmps
call
shl
dec
ins
outs
adc
fidiv
aad
or
sbb
sbb
or
add
and
lds
inc
xchg
out
adc
mov
fsubr
repz
int
adc
and
push
dec
mov
mov
mov
adc
and
and
outs
mov
push
jl
inc
inc
push
adc
inc
out
dec
xchg
int3
jbe
loopne
pop
repnz
ror
mov
adc
js
cmp
mov
jo
cs
mov
push
mov
mov
stc
test
loop
test
fs
sar
mov
cmp
in
xor
sub
sub
mov
jecxz
xchg
in
fcom
mov
mov
fwait
sub
sbb
pusha
cmps
sbb
mov
pop
imul
jmp
mov
rol
bound
cmps
retf
je
dec
pop
adc
and
ret
mov
out
retf
mov
push
out
(bad)
test
push
scas
addr16
(bad)
fld
in
xchg
fisub
jbe
test
jne
imul
sub
aad
mov
inc
push
jnp
je
dec
stos
push
fistp
jns
push
mov
xchg
and
inc
les
and
pop
das
xor
adc
mov
dec
in
inc
int
inc
ficom
mov
jp
jnp
dec
sti
bound
fwait
mov
push
hlt
daa
fwait
nop
lds
xchg
push
lahf
inc
cwde
imul
cs
test
mov
add
sbb
xlat
jno
xchg
call
ret
imul
retf
daa
mov
stos
push
inc
aaa
sbb
mov
stos
mov
mov
dec
push
out
sbb
scas
dec
cmp
mov
mov
out
xor
arpl
cs
out
retf
mov
push
sub
scas
js
fldcw
mov
out
in
test
xchg
jecxz
cwde
shr
inc
cs
pop
rcl
inc
mov
dec
sub
adc
sbb
daa
lods
adc
ds
mov
jo
jle
pop
pop
sub
mov
movs
jmp
(bad)
bound
sub
mov
push
lahf
or
ss
ror
pop
push
in
jle
inc
mov
and
sub
sbb
bound
sar
in
sahf
loopne
sub
lds
xor
sub
packsswb
push
shl
test
inc
iret
dec
mov
xchg
dec
rol
out
push
pop
inc
stos
xor
cmps
in
xchg
in
test
popf
adc
dec
push
jecxz
and
(bad)
mov
sub
fidivr
cli
xchg
xor
pop
outs
call
jg
jbe
cdq
push
rcr
add
test
outs
sub
retf
retf
pushf
cli
lds
cmp
xchg
adc
add
movs
jae
bound
inc
inc
or
and
push
push
jbe
inc
sbb
mov
inc
sbb
sbb
ja
push
mov
mov
xor
adc
inc
cmp
xchg
pop
fld
or
fcmovb
lock
cmps
ins
fsubr
cmp
mov
mov
int3
imul
mov
cmp
leave
mov
dec
xor
jns
scas
shr
test
mov
add
pusha
xor
test
inc
fxch
fimul
jle
call
xchg
sar
jle
enter
dec
rcl
mov
cmps
sahf
loop
pshufw
mov
lahf
xchg
inc
test
stc
aaa
in
sbb
mov
mov
xchg
xchg
inc
mov
or
push
test
jge
push
inc
ja
out
push
sub
mov
popf
or
jmp
mov
push
jge
hlt
mov
ror
mov
in
pop
sub
inc
mov
mov
inc
sub
int3
or
push
cwde
mov
ret
ins
ret
push
or
mov
push
mov
fdiv
xor
not
dec
inc
xchg
loopne
xchg
xchg
pop
lods
mov
jle
call
ficom
jne
xchg
cmp
sahf
cmps
mov
mov
sar
or
push
xchg
imul
cmps
cmp
out
int3
jge
jne
loope
jns
stos
sub
call
pushf
imul
data16
lea
aas
fist
movs
jb
mov
fcmovne
mov
bound
add
mov
xchg
jb
inc
popa
sahf
call
dec
cli
data16
and
pop
add
pop
ss
fadd
mul
in
or
cmc
rcr
jns
push
stc
bound
loop
pop
xchg
addr16
pop
cmp
xchg
sub
mov
mov
dec
inc
inc
add
ret
mov
xchg
and
push
pop
mov
pushf
add
dec
xor
ffree
or
fdiv
ins
or
xor
or
sbb
and
pop
add
sub
sbb
cmp
mov
jno
dec
cmps
jo
adc
sbb
xor
in
imul
popa
mov
les
or
jbe
push
push
adc
(bad)
stc
les
ins
scas
and
push
push
aaa
dec
rcr
or
mov
push
jmp
(bad)
rcr
aad
cmp
cmp
mov
sub
pop
std
fnstenv
mov
out
test
or
push
mov
das
mov
push
jnp
dec
icebp
stc
scas
imul
fcomp
cwde
dec
xor
addr16
test
js
mov
pushf
mov
and
and
test
mov
xor
and
and
sbb
jno
and
inc
adc
add
inc
and
push
in
sbb
add
mov
xchg
add
push
nop
bound
ret
out
add
pop
enter
iret
retf
xchg
inc
in
xchg
sub
push
dec
add
loopne
bound
repnz
inc
or
rcl
cmp
pusha
pusha
pusha
arpl
adc
mov
popa
enter
icebp
les
mov
(bad)
sbb
mov
dec
adc
arpl
mov
scas
adc
out
std
pusha
mov
out
cwde
xchg
and
imul
rcl
xchg
mov
sahf
sti
ret
stc
sub
ret
lods
dec
(bad)
lods
je
push
ins
ins
adc
shl
jl
fmulp
mov
and
or
or
xor
mov
into
shr
mov
(bad)
and
mov
push
(bad)
cmps
cmp
jmp
fdivr
cld
movs
ins
jo
cmp
push
mov
add
repnz
mov
cmps
jb
push
or
mov
sub
or
sub
inc
enter
sbb
cmp
and
add
ins
jno
out
and
dec
mov
adc
pushf
add
mov
push
stc
xchg
dec
sub
mov
cmc
mov
mov
dec
cmp
inc
mov
sbb
fisub
outs
arpl
and
or
jge
les
lods
xor
mov
and
sahf
and
(bad)
in
cmp
xor
dec
xchg
ins
jecxz
hlt
pop
imul
xchg
inc
xor
sub
int
loopne
mov
or
sub
dec
ret
ins
mov
mov
dec
bound
rcr
pushf
sub
xor
cmps
fwait
aas
cwde
adc
mov
add
inc
xchg
mov
push
pop
bound
sbb
jl
and
xor
cmp
mov
inc
fdiv
rcl
sub
jl
sbb
out
movs
fld
or
cmp
pop
icebp
pop
mov
and
add
ja
(bad)
fstp
bound
dec
pop
lods
and
or
mov
jb
and
imul
cld
mov
leave
pop
imul
inc
jo
or
jbe
fnstenv
pop
and
in
xchg
ja
cld
and
xchg
pop
mov
xchg
pusha
je
sub
xor
add
repnz
jbe
mov
jae
loopne
rcr
pop
ds
fnstenv
push
sub
xlat
sub
aad
mov
sbb
mov
jno
jmp
xchg
or
dec
out
inc
in
lods
xchg
or
call
aaa
shr
push
cmp
inc
rcr
hlt
pop
dec
mov
rep
xor
cmps
and
pop
jmp
pushf
call
mov
xlat
adc
push
pop
shr
add
mov
pop
out
ror
out
clc
jg
je
test
mov
or
fnstcw
pop
xor
pushf
cmc
dec
outs
sub
loopne
add
push
inc
mov
gs
loope
push
lock
pop
pop
inc
add
inc
xchg
sahf
popf
inc
ret
popa
pushf
adc
pop
stc
ret
pop
out
(bad)
enter
(bad)
ins
mov
sub
int3
pop
sbb
frstor
dec
dec
movs
setbe
call
dec
ret
jns
pop
outs
mov
mov
adc
hlt
xchg
enter
sub
(bad)
sti
inc
xor
xchg
or
xor
iret
jmp
cmp
ds
aad
jno
das
mov
popf
movs
adc
adc
dec
dec
aad
fwait
ss
inc
mov
inc
xchg
add
add
push
pop
push
lahf
mov
jo
mov
rep
adc
cmp
adc
jmp
xchg
ja
add
mov
fsubr
add
adc
lods
adc
nop
pop
out
jnp
ror
int3
lahf
js
scas
ret
sub
bound
xchg
mov
cwde
and
jp
xor
dec
jl
xor
sbb
fcmove
neg
pusha
test
push
jmp
daa
aad
adc
xchg
pop
shr
dec
xor
inc
jle
out
push
fstp
fsubp
mov
or
aam
loopne
icebp
and
inc
dec
push
mul
rcr
in
push
leave
pop
enter
mov
or
inc
push
fwait
push
mov
test
mov
scas
out
jmp
es
sub
ret
inc
cmps
mov
push
xchg
xchg
jns
jae
adc
jno
sub
add
cdq
push
ss
jecxz
fstp
pop
mov
das
push
jae
ja
clc
inc
and
fs
dec
xchg
mov
aas
sub
in
sub
rcr
jecxz
jecxz
xchg
ficomp
aaa
sub
pop
xchg
inc
retf
pushf
bound
shl
mov
adc
fcmovb
out
mov
or
and
sbb
dec
aad
add
pop
cli
mov
lods
cli
mov
dec
in
pop
stc
ret
stos
adc
mov
adc
xor
ds
dec
push
dec
mov
push
lahf
repnz
jns
shl
jno
inc
xor
sti
add
dec
xchg
push
out
or
and
adc
cmc
int
into
movs
xchg
jge
mov
add
mov
int
inc
mov
test
adc
cmp
push
push
nop
push
ficom
mov
repnz
out
sbb
push
pop
sub
mov
pop
push
push
ja
inc
retf
cmp
adc
fwait
cs
xchg
push
xchg
jno
out
adc
xchg
enter
and
jno
popf
les
ss
movs
xor
xor
cdq
(bad)
cmp
mov
push
or
test
sbb
xchg
push
sbb
push
jp
lds
sbb
aad
mov
cmp
and
xor
xchg
cmp
push
add
add
add
imul
mov
push
nop
inc
mov
mov
mov
sub
dec
dec
clc
addr16
cwde
pop
sub
sub
cmps
fisttp
cmp
int3
cs
xchg
test
add
adc
add
cmp
or
dec
mov
lea
push
mov
aaa
cmp
push
push
pop
inc
cld
mov
and
daa
fild
mov
mov
or
cmp
jns
jp
adc
loope
dec
mov
loop
ins
out
or
fdiv
sub
popf
sub
and
repnz
test
and
and
adc
jno
dec
(bad)
jge
jnp
clc
and
add
retf
adc
fs
fs
dec
cdq
inc
push
nop
aaa
jmp
mov
int
popa
test
xchg
sub
shr
into
movs
rcr
dec
imul
sbb
pushf
mov
dec
call
inc
xor
popf
les
mov
aam
xor
out
push
jae
jmp
dec
(bad)
fsub
jnp
mov
push
gs
dec
mov
dec
das
jle
push
data16
imul
sub
ret
imul
sbb
sbb
iret
or
jmp
dec
clc
dec
mov
cld
call
iret
daa
and
repz
and
cmps
mov
aam
lods
cmps
cmp
call
ins
cmp
xor
adc
ins
outs
retf
dec
cmp
dec
cmp
push
push
xchg
call
sbb
setno
and
pop
adc
jne
cmp
push
and
and
cmp
add
mov
or
loopne
add
daa
(bad)
mov
jbe
movs
cld
test
aam
mov
sbb
xchg
and
sar
mov
or
lahf
cmp
or
jp
adc
pop
mov
jecxz
loope
clts
jl
daa
xchg
or
jmp
or
neg
stc
xchg
adc
and
movs
ja
pop
xchg
leave
pop
and
sbb
icebp
xor
xchg
jb
loopne
cmps
ret
jecxz
push
lods
dec
mov
pop
add
add
rcl
dec
int3
inc
and
loop
push
sbb
std
mov
mov
or
push
jmp
lahf
inc
xchg
leave
sbb
adc
(bad)
mov
xor
mov
and
and
inc
push
sub
jecxz
test
jb
dec
(bad)
mov
dec
repnz
cmp
sub
ret
mov
adc
sete
jle
xor
cwde
repnz
adc
jmp
leave
mov
into
cmp
(bad)
jmp
out
inc
test
adc
add
test
sub
cmps
ja
popa
outs
lds
daa
cmp
add
xchg
jmp
aas
test
data16
pop
je
dec
js
mov
xchg
test
dec
cmps
data16
push
xchg
je
cmp
dec
call
rep
add
pusha
xor
movs
and
gs
push
movs
sub
xor
mov
mov
add
aad
mov
xchg
test
cwde
push
in
movs
out
cmp
out
xor
je
mov
xor
xor
repnz
inc
inc
add
adc
mov
add
or
and
and
mov
cld
mov
dec
xchg
leave
fadd
loopne
imul
enter
and
adc
xchg
lea
mov
sbb
ins
and
imul
cs
jle
xchg
jb
push
inc
sub
sbb
xchg
mov
std
mov
out
dec
cdq
daa
daa
sub
pop
pushf
or
xchg
and
mov
sbb
jmp
fisub
push
rol
and
sub
mov
inc
repnz
xor
dec
xchg
sbb
inc
sub
sub
and
xor
popa
movs
and
mov
add
or
retf
(bad)
adc
repnz
jcxz
dec
push
sub
or
pop
ret
xchg
add
adc
fcomp
sbb
adc
pop
push
jae
jl
adc
pop
mov
push
adc
sahf
lahf
pop
dec
and
stc
lds
lods
jo
xchg
sahf
mov
ret
dec
and
shr
cmp
and
lods
and
add
xchg
sub
sub
sub
arpl
idiv
dec
into
adc
movs
bound
cmp
dec
in
mov
loope
cwde
lea
and
test
test
sbb
mov
mov
ds
aaa
and
push
and
jge
pop
gs
push
sbb
adc
xchg
dec
sbb
mov
xor
adc
mov
outs
pop
ins
dec
retf
data16
sub
cmp
aam
mov
stos
sahf
push
pushf
imul
sbb
lds
outs
jle
inc
movs
mov
and
xor
sub
inc
dec
enter
stos
fwait
sar
mov
js
mov
sbb
rol
hlt
clc
les
inc
push
push
call
je
or
(bad)
and
lods
repz
sar
js
sub
mov
test
(bad)
loop
mov
movs
add
push
sbb
popa
xchg
push
cmp
popf
retf
mov
cmp
mov
bound
ss
in
movs
je
add
adc
jmp
mov
add
out
ds
xchg
or
ret
daa
bound
ret
mov
add
test
imul
xor
test
sbb
pusha
mov
jno
in
cmp
mov
xchg
adc
push
aad
and
jae
adc
loop
mov
fsub
mov
cmp
cmp
sbb
mov
pop
inc
push
xchg
dec
or
test
movs
adc
inc
xchg
push
inc
xchg
push
dec
daa
in
sub
lock
adc
lods
addr16
sysret
sar
xchg
push
jne
jo
pop
das
sub
sub
xchg
adc
inc
sub
inc
adc
push
aaa
clc
ret
sub
add
lock
es
icebp
ror
retf
adc
je
and
push
les
jmp
rcl
call
ret
inc
cmp
stos
cmc
test
dec
icebp
adc
out
lods
sbb
std
icebp
xor
popf
popa
imul
jns
mov
outs
mov
into
rcl
aaa
out
push
inc
pop
mov
(bad)
sub
mov
push
retf
out
dec
mov
adc
ins
jae
mov
xchg
mov
mov
lock
sub
inc
fwait
and
lods
cmp
imul
xchg
mov
adc
push
push
pop
scas
or
fwait
out
cld
loop
sub
out
push
(bad)
fld
jg
xor
daa
jno
push
jbe
inc
fisttp
sbb
mov
adc
xchg
out
add
inc
js
mov
dec
aam
jl
ins
call
and
lock
cmp
jmp
call
fwait
ds
imul
sbb
or
ss
popa
scas
lods
pop
sbb
add
ja
jmp
fld
lods
xor
nop
mov
rcr
xor
ret
add
xchg
push
sbb
arpl
lahf
js
cli
or
xchg
cmp
jo
xchg
cmp
pop
inc
or
inc
pop
sahf
sbb
mov
fstp
(bad)
mov
jb
inc
mov
xor
sub
mov
pop
add
mov
push
out
xchg
cmp
xchg
jae
or
push
call
xor
xchg
mov
mov
push
or
xchg
jbe
or
push
int3
cli
xchg
ficom
test
in
rol
test
fs
ins
test
pushf
mov
push
mov
sbb
jae
sbb
xchg
daa
and
mov
cmps
div
or
ret
ins
jno
xchg
jo
ss
or
mov
mov
mov
sub
stos
xor
mov
jno
ss
sub
push
pop
ins
sub
mov
ss
addr16
xchg
sbb
or
push
pop
rcl
arpl
xor
inc
mov
or
jb
sub
sbb
cmp
adc
cmp
inc
push
pop
adc
pop
data16
cld
loop
leave
mov
dec
fnsave
nop
adc
pop
xchg
sub
sbb
bound
in
cmp
shr
pusha
pop
xchg
and
sub
mov
xchg
push
mov
push
fadd
stos
shr
inc
add
es
push
imul
hlt
mov
pop
cmp
shr
out
lods
cmp
lea
xchg
and
les
bound
gs
xchg
push
jbe
scas
sub
xor
sub
clc
push
dec
(bad)
sub
bound
mov
fdivr
retf
cs
daa
js
push
sbb
dec
das
push
outs
lods
add
inc
dec
mov
xchg
push
scas
ss
in
fidivr
adc
test
sub
les
std
xchg
pop
test
or
ins
cdq
mov
mov
mov
and
ds
pop
retf
sub
pushf
arpl
mov
cld
sub
mov
fwait
mov
dec
xor
pop
aaa
xchg
dec
(bad)
pop
call
push
jb
aas
sub
aam
test
adc
sub
in
les
mov
mov
xor
call
cdq
bound
add
xor
xchg
xor
jb
xor
sbb
and
jns
pushf
in
mov
pop
fwait
es
lds
xor
and
leave
jmp
pop
movs
pop
sbb
xlat
sbb
cmp
daa
movs
daa
shr
xor
mov
push
out
(bad)
push
mov
push
mov
test
and
mov
mov
movs
retf
mov
std
inc
sub
mov
neg
sub
mov
sub
pop
pop
mov
jae
dec
push
fnstcw
fld
adc
ins
lea
adc
sub
mov
outs
pop
shl
adc
imul
(bad)
jb
dec
cmps
mov
and
mov
mov
xchg
fmul
sub
pop
and
mov
ret
arpl
shl
arpl
fidiv
xchg
fs
jle
(bad)
push
xor
scas
xchg
xlat
cmps
out
xor
pushf
sub
sbb
mov
cmp
(bad)
sbb
daa
add
add
mov
imul
mov
pop
sub
test
mov
test
sbb
push
push
xlat
sbb
mov
cmp
mov
jns
ins
daa
add
fistp
ret
cdq
and
dec
repnz
sahf
pop
cmp
(bad)
xor
nop
jo
mov
dec
mov
fcmovnu
mov
push
rdmsr
mov
stos
push
sbb
cmps
test
push
out
adc
jmp
xchg
hlt
scas
inc
dec
and
mov
jns
cmps
sub
push
sbb
iret
aam
push
pop
call
ret
xchg
jno
xchg
jp
push
rol
push
pop
adc
xchg
mov
pusha
jne
xchg
pop
cdq
sahf
sti
xchg
xchg
adc
ss
mov
mov
pop
sub
test
mov
out
xor
fcom
mov
inc
inc
in
mov
inc
and
lea
lock
repnz
fld
push
push
mov
mov
jle
and
sbb
repz
pop
int3
popf
add
test
cmp
mov
jecxz
mov
outs
xchg
jb
or
fst
adc
xor
or
mov
retf
out
loope
dec
xor
jnp
pop
push
inc
fidiv
loope
out
sahf
sub
ss
sbb
sub
sub
sub
push
ret
outs
lods
inc
adc
xchg
inc
inc
cmp
leave
add
dec
and
sub
stos
sbb
fld
out
test
pop
pop
pop
inc
enter
adc
and
xor
push
dec
lods
or
or
adc
enter
mov
ror
add
ja
sbb
push
leave
jmp
xor
rol
lods
inc
jbe
jbe
xchg
repnz
mov
jnp
das
sub
pushf
hlt
adc
icebp
push
out
(bad)
adc
push
xchg
xchg
xchg
pop
ins
or
push
ja
xchg
sbb
addr16
or
movs
out
(bad)
or
xchg
rol
cmps
xor
retf
and
(bad)
fnstenv
inc
movs
sub
add
mov
ins
cmp
jnp
fcom
sub
jecxz
mov
sub
int3
adc
popa
xchg
arpl
sub
icebp
jnp
hlt
(bad)
test
jge
fldpi
xchg
adc
mov
test
sub
arpl
dec
leave
jnp
pop
in
cmp
enter
pushf
cli
movs
xchg
(bad)
int
arpl
mov
stc
aas
out
je
lods
jae
mov
mov
leave
dec
movs
mov
xchg
and
data16
pop
adc
mov
jb
xchg
call
gs
mov
xor
ficomp
nop
xchg
pushf
xor
pop
inc
das
adc
dec
pushf
std
fsubr
mov
and
aam
dec
test
or
xchg
loopne
jnp
in
hlt
inc
push
push
and
and
xor
dec
dec
jbe
je
mov
in
mov
jb
test
adc
(bad)
or
mov
adc
pop
or
or
or
enter
or
lods
dec
pop
xchg
fadd
fld
pop
or
lea
adc
and
xor
out
jnp
push
mov
mov
imul
rcl
and
cs
leave
imul
(bad)
mov
jmp
fucomip
xor
jbe
nop
fwait
inc
pop
(bad)
jno
cwde
sbb
push
inc
add
xor
xchg
jge
adc
ins
xchg
mov
adc
add
(bad)
adc
fistp
xor
add
or
js
out
push
bound
inc
jno
into
and
push
xchg
loopne
lock
aaa
ins
jle
pushf
outs
adc
jecxz
xchg
xor
lahf
xchg
push
daa
arpl
outs
inc
in
retf
sbb
outs
sbb
push
and
hlt
adc
rol
rcl
or
lods
daa
adc
push
arpl
ja
aam
test
xchg
ret
lahf
ja
inc
mov
test
add
movs
sub
add
es
cwde
hlt
test
xor
jae
cmp
push
pop
or
or
dec
inc
pop
sub
cmps
jb
test
faddp
pop
or
add
adc
sub
add
(bad)
adc
out
adc
or
cld
fwait
mov
dec
ror
iret
in
test
(bad)
xor
push
in
push
inc
or
(bad)
xor
sub
ret
sti
mov
aas
sbb
or
pop
jne
sbb
inc
test
add
adc
dec
push
nop
loop
clc
push
pop
arpl
dec
sub
lock
push
and
jge
mov
shr
cmps
pop
sub
and
(bad)
push
neg
dec
sub
imul
fcomp
fcom
(bad)
ss
and
push
sub
es
mov
popf
mov
cmps
call
out
mov
mov
daa
dec
xchg
cmp
sbb
pop
push
fist
jne
dec
test
mov
in
dec
add
cmps
jbe
ins
adc
inc
xchg
xchg
xchg
mov
mov
pop
inc
stc
push
in
adc
and
daa
jb
daa
test
adc
cmp
add
pushf
(bad)
pop
or
xor
jmp
nop
or
or
(bad)
xchg
in
movlps
outs
loope
loop
je
mov
fild
enter
pop
fstp
in
push
gs
push
ret
sbb
fdiv
hlt
xor
mov
cmp
adc
imul
pop
mov
daa
(bad)
xlat
mov
jge
aad
sub
nop
pop
movs
inc
lds
adc
inc
into
and
mov
push
sub
stos
add
push
lea
jbe
lods
dec
pushf
outs
popf
test
jecxz
sbb
aam
and
(bad)
test
pop
sti
jp
mov
lods
xchg
in
pop
dec
shr
xchg
sbb
imul
fsubp
and
xchg
fisttp
inc
add
mov
test
mov
sub
pop
imul
xchg
adc
cmp
aad
mov
pusha
popf
add
add
xchg
repnz
add
addr16
jle
cli
inc
mov
ret
dec
les
adc
inc
cmp
popf
xor
(bad)
lds
adc
mov
add
enter
or
adc
and
lds
fld
cmp
mov
jbe
shl
mov
test
cdq
sub
push
test
push
push
cwde
inc
mov
jbe
jp
and
aad
dec
jbe
adc
cld
fld
scas
pusha
mov
add
xchg
outs
popa
xchg
mov
jbe
loope
push
pop
repnz
inc
mov
push
sar
mov
leave
cmp
icebp
sub
neg
pshufw
(bad)
movs
push
xor
adc
addr16
sub
out
push
dec
mov
test
shl
inc
push
mov
movs
xor
sbb
fmulp
jge
call
test
ds
pop
cmps
ds
mov
push
in
pop
dec
xchg
xor
inc
xchg
xchg
mov
or
mov
fist
xchg
movs
es
push
(bad)
sti
mov
outs
out
daa
fnstsw
stos
mov
into
ret
sbb
lds
dec
nop
jae
inc
int
arpl
retf
arpl
das
cmps
jl
jbe
xchg
dec
adc
xor
push
and
jbe
push
and
inc
in
fiadd
jae
dec
and
icebp
lea
sbb
dec
and
add
aam
mov
xchg
push
mul
fnstenv
repz
adc
sub
jbe
data16
popa
lahf
jns
into
jp
inc
cmp
push
sub
(bad)
outs
xchg
pop
inc
xchg
(bad)
fmul
scas
cld
cwde
dec
jle
mov
popa
jge
adc
pop
inc
sbb
mov
and
int3
cmp
and
xchg
data16
adc
mov
lds
mov
aas
sbb
pop
sbb
ds
xor
and
les
in
sbb
ins
add
xor
mov
aad
movs
mov
pop
and
jmp
rcr
dec
xchg
mov
xchg
inc
dec
and
dec
pop
scas
ds
push
mov
das
out
inc
cmp
mov
pop
and
sbb
mov
push
and
xchg
add
inc
mov
rol
mov
lds
mov
fs
rol
mov
xchg
in
mov
pop
in
dec
stos
dec
jno
adc
std
bound
and
lock
jns
movs
nop
push
push
(bad)
sub
das
dec
jae
and
repz
das
test
addr16
out
cmp
lods
(bad)
pand
(bad)
retf
push
pop
aam
fcom
hlt
out
in
lods
je
add
cmps
out
pop
loop
and
mov
xor
dec
xchg
inc
mov
pushf
mov
pushf
and
and
inc
nop
pop
rcr
jmp
xchg
in
mov
lods
mov
cmp
cmp
arpl
adc
jb
popa
scas
enter
and
jno
cwde
test
sbb
int
out
push
jae
push
sub
movs
loopne
iret
dec
sub
inc
fimul
and
fs
mov
or
imul
adc
jo
xchg
test
arpl
pop
cmp
arpl
or
mov
add
je
pop
ins
dec
pop
out
fbld
fldenv
or
in
out
rol
adc
cdq
xchg
das
adc
cli
loop
pop
rcr
mov
inc
call
xchg
shl
js
int3
xor
dec
jae
or
push
cs
in
nop
cmp
jae
pop
stos
cmps
mov
popf
sbb
ret
xchg
sbb
xchg
sub
call
fild
and
and
xchg
jb
xchg
(bad)
sub
sbb
push
push
sbb
and
nop
ds
movs
jle
popf
(bad)
mov
gs
jns
in
ins
push
cmps
in
clc
adc
pop
inc
fimul
inc
cmps
pop
mov
and
sbb
ins
test
push
add
in
jle
sbb
(bad)
cs
out
sbb
adc
aaa
stc
or
in
mov
jb
or
adc
jle
mov
xchg
sbb
xor
pop
xchg
das
pop
aam
test
ds
xchg
cmps
retf
add
mov
loop
inc
jnp
retf
mov
loopne
lock
mov
pop
cmps
mov
sub
inc
jp
mov
int3
repnz
add
mov
sbb
mov
outs
ins
iret
push
xchg
mov
mov
es
pop
cmp
jno
xchg
or
out
cmp
sub
dec
rol
inc
data16
add
mov
push
xor
adc
(bad)
fmul
cwde
cmc
sbb
enter
pusha
out
mov
ror
xor
dec
xchg
jp
push
pushf
push
pop
xchg
iret
das
xchg
or
inc
in
add
xchg
jle
cmp
mov
jae
and
lods
retf
dec
dec
sub
mov
jae
shl
lahf
pop
dec
push
xchg
mov
xchg
retf
pop
xor
stos
stc
call
stc
sbb
xchg
cmp
and
mov
cmp
in
bound
movs
jb
adc
leave
cld
icebp
adc
test
xchg
cmp
xchg
xchg
pushf
jecxz
out
bound
mov
cmp
or
dec
in
ds
xor
mov
mov
sub
dec
dec
sar
sub
popf
in
mov
cmp
mov
dec
pop
add
add
jbe
call
pop
fld
xchg
test
fbld
es
popa
push
fdiv
leave
sbb
dec
shl
sbb
pushf
test
add
jmp
mov
jmp
xchg
and
ret
inc
fld
(bad)
test
push
loop
xor
sub
icebp
adc
mov
sub
mov
(bad)
adc
adc
and
cmps
and
cmp
mov
fcomi
les
mov
sub
ds
fdiv
cwde
ficom
adc
or
push
les
jnp
mov
xchg
cmp
jecxz
lods
push
loope
in
aad
punpckhbw
lods
jns
xchg
dec
pop
cli
cmp
fidivr
cmp
mov
inc
fwait
ja
rol
out
adc
mov
enter
cmp
(bad)
repz
push
xchg
xchg
icebp
adc
cli
ror
out
mov
and
cdq
ins
mov
dec
call
repz
push
scas
mov
aam
push
mov
and
dec
push
xor
and
push
sub
push
mov
sbb
and
adc
into
or
loopne
xchg
sub
adc
cmp
jo
repnz
pop
xchg
inc
push
lock
pop
cmps
icebp
cmp
shl
adc
imul
add
sbb
mov
mov
movs
and
pop
dec
or
dec
adc
cmp
pop
rcl
into
cmp
dec
xchg
sti
(bad)
jl
push
loop
add
aas
cmp
fs
xor
mov
fcomip
adc
dec
and
mov
in
and
push
ins
jl
outs
xor
fld
push
mov
in
mov
iret
pop
stos
pop
or
into
clc
jmp
dec
call
push
inc
fs
ds
inc
test
movs
pusha
mov
xchg
out
adc
(bad)
shr
dec
pop
fild
sbb
fucomi
xchg
cmc
sbb
cmp
outs
mov
jnp
cmp
jo
fs
push
adc
(bad)
out
jecxz
or
mov
dec
or
inc
mov
jmp
popa
cld
mov
jmp
leave
dec
in
sbb
add
xor
mov
or
adc
adc
xchg
xor
arpl
and
aaa
retf
repnz
fwait
sub
jle
pop
mov
add
and
adc
sahf
jp
xlat
test
sub
mov
daa
fdiv
dec
mov
and
hlt
or
sbb
sub
cdq
inc
pop
pop
out
push
std
or
das
mov
imul
inc
popf
pop
dec
sbb
(bad)
js
cmp
or
test
mov
adc
jnp
aaa
dec
sbb
or
jmp
sbb
arpl
sub
and
das
gs
pop
fadd
push
fucom
sbb
sar
and
(bad)
xchg
sub
fbstp
shl
std
cmp
pop
mov
hlt
out
push
jo
mov
inc
pop
inc
inc
push
and
ret
and
fucomi
jl
adc
daa
and
adc
fcom
sbb
fiadd
mov
xchg
popf
les
jmp
adc
xor
xchg
scas
xchg
pop
or
adc
popf
mov
out
mov
xchg
mov
and
dec
mov
dec
cwde
inc
push
lods
lods
test
mov
fild
and
pop
xchg
leave
cmp
ds
fisttp
shr
add
pop
enter
fwait
push
cmp
pop
mov
mov
pushf
addr16
pop
lds
das
and
and
loopne
imul
dec
xor
daa
or
jbe
lea
ds
addr16
cs
pop
dec
xchg
sar
adc
call
std
mov
xchg
ins
mov
sub
(bad)
mov
sahf
call
int3
mov
gs
cdq
dec
push
enter
sbb
jmp
out
jb
test
xchg
dec
pop
xor
fidiv
mov
leave
into
sbb
ins
mov
loop
xchg
push
adc
movs
adc
inc
inc
xchg
xchg
lods
mov
mov
push
jne
aad
cdq
push
pop
leave
cmp
enter
push
add
xchg
xor
jnp
add
dec
les
cwde
mov
xchg
(bad)
jo
jno
outs
pop
outs
jmp
mov
fs
pop
jbe
lahf
in
cmp
sar
out
jle
fdiv
inc
frstor
push
outs
push
inc
ror
xchg
cmp
addr16
sub
add
xor
fs
rol
xchg
mov
aaa
mov
mov
ret
add
and
cmp
mov
jmp
jbe
mov
and
mov
mov
daa
xchg
and
(bad)
and
or
inc
jo
push
in
adc
pushf
outs
int
ins
or
sbb
cmp
ins
(bad)
sub
loope
push
in
es
dec
mov
adc
fimul
mov
jns
pop
ins
dec
out
arpl
jl
push
(bad)
push
xchg
bound
dec
xor
mov
std
mov
pop
test
push
out
(bad)
sub
cwde
test
stc
(bad)
fsubrp
xlat
xor
sub
je
xor
add
cmps
adc
or
jmp
pusha
xchg
xchg
div
paddusw
icebp
arpl
out
arpl
pop
aas
sub
add
jnp
aad
jl
adc
gs
(bad)
js
sbb
jbe
mov
and
xor
push
or
test
add
jl
aad
xor
and
shr
js
es
sub
xor
out
movs
xchg
add
(bad)
push
in
jmp
ret
lods
adc
inc
mov
dec
in
push
int3
push
daa
push
xchg
retf
mov
inc
sahf
movs
cmp
xchg
scas
ja
dec
adc
stos
mov
std
loope
call
stos
pop
pop
cmp
cld
loop
mov
in
sub
jp
mov
fst
nop
jo
xor
inc
cmp
push
push
adc
sbb
fcmovb
fidiv
bound
push
stos
gs
dec
xor
cmps
out
sbb
xchg
stos
add
cld
loopne
dec
dec
in
lahf
xor
mov
adc
lahf
shr
push
bswap
jns
std
loope
mov
add
cwde
stos
inc
sub
int3
shl
test
jp
test
(bad)
test
push
sub
dec
outs
dec
int
movs
cmp
fldenv
xchg
cdq
int
(bad)
and
xchg
mov
pop
cmps
xchg
call
pusha
cmp
stos
jae
xchg
dec
xchg
fisub
aad
fisub
dec
mov
outs
dec
dec
das
pusha
dec
adc
inc
sbb
(bad)
push
push
mov
out
dec
scas
imul
je
ret
stos
jb
mov
lods
aad
aaa
and
and
nop
test
mov
test
test
jne
arpl
or
rcl
pop
mov
add
inc
pop
pop
call
dec
push
popf
add
idiv
inc
outs
mov
push
stc
add
sbb
jge
push
jae
inc
retf
mov
pusha
fstp
cmp
xchg
test
add
cwde
scas
cmp
cs
in
push
dec
dec
xor
not
push
xor
(bad)
lock
sti
mov
int
jbe
pop
dec
mov
jmp
repnz
cmp
inc
aam
push
ins
leave
fs
cmps
sbb
sub
mov
in
mov
push
and
loop
in
retf
xchg
out
push
mov
push
push
adc
jbe
sub
mul
mov
mov
push
inc
fs
icebp
shl
dec
sub
sbb
int
add
ret
movs
je
out
(bad)
xor
rol
mov
in
push
cmps
je
ret
loop
jnp
mov
pop
ror
mov
stos
xchg
popa
mov
ins
out
sbb
or
imul
push
aam
aam
repz
add
or
lahf
shl
inc
xchg
jl
push
test
sub
add
stos
cmp
inc
fistp
and
inc
xor
or
arpl
push
dec
in
adc
push
cmp
js
lds
stos
sub
cmp
jmp
cmp
icebp
xor
add
sbb
pop
dec
jecxz
mov
mov
adc
pop
lea
pusha
cli
(bad)
jmp
jno
scas
in
push
mov
jecxz
fbstp
retf
sub
cmp
mov
stos
inc
repz
rol
outs
jbe
hlt
scas
xor
cli
jnp
adc
push
mov
jne
mov
ja
shr
outs
or
pop
mov
dec
xor
mov
fsubr
ins
cmp
repnz
or
stos
or
pop
out
pop
loop
fadd
jno
loope
dec
add
mov
pop
mov
add
push
pop
sbb
cdq
adc
jns
(bad)
imul
xchg
test
repz
je
(bad)
pop
ins
and
fs
das
and
loopne
jae
add
jecxz
sbb
inc
ins
adc
inc
xor
icebp
push
jge
fcomp
adc
xor
cs
mov
xchg
cmp
push
ds
mov
adc
xchg
sahf
lods
movs
pop
pop
aam
jmp
sbb
aas
jno
push
or
xchg
dec
ror
push
mov
test
(bad)
sbb
add
fcomp
sub
dec
daa
mov
push
loopne
es
(bad)
inc
push
bound
add
in
push
rol
aaa
adc
js
mov
addr16
popf
and
mov
sub
add
and
push
sbb
mov
xchg
nop
inc
dec
fsubr
and
cli
mov
jecxz
aas
pop
mov
jno
and
and
in
sbb
fwait
mov
jno
int3
ret
push
dec
shl
test
movs
je
push
test
rcr
ds
out
xor
inc
mov
add
loope
aam
jge
mov
sbb
(bad)
sbb
imul
pop
add
inc
push
popa
(bad)
pop
mov
outs
sub
or
nop
(bad)
inc
mov
jecxz
and
es
leave
sbb
arpl
pop
lods
fdiv
jl
(bad)
push
pop
xchg
jecxz
cmc
and
inc
adc
mov
shl
pop
xchg
mov
push
jmp
inc
xchg
fisttp
sub
fisub
in
adc
popf
cli
sbb
cld
and
bound
fsub
mov
ret
mov
sbb
pop
popa
sub
gs
retf
push
(bad)
xor
ret
mov
xor
fucomip
ss
popf
mov
not
outs
pop
cmp
ja
outs
fwait
popa
sti
xor
dec
test
ss
mov
in
ja
test
add
inc
push
mov
mov
cdq
xor
dec
mov
xor
mov
inc
mov
inc
push
mov
dec
in
ss
push
xor
aad
push
popf
mov
mov
xchg
test
dec
sbb
add
shl
push
sbb
jbe
les
aaa
or
mov
and
(bad)
or
inc
mov
lea
jecxz
dec
pop
inc
std
cmp
mov
fs
mov
(bad)
mov
mov
dec
inc
gs
mov
add
pop
inc
xor
sub
fwait
sar
(bad)
jmp
xchg
clc
les
mov
mov
mov
mov
inc
xor
xchg
shl
dec
and
sbb
sub
out
repz
or
mov
ins
pop
xor
pop
dec
inc
lock
inc
sub
jg
ret
movs
xor
shl
cdq
inc
mov
out
gs
cmp
jecxz
push
cmp
mov
xchg
(bad)
xchg
inc
mov
inc
xchg
jge
mov
fcmovnu
repnz
mov
in
xchg
test
imul
pop
(bad)
std
dec
ins
pop
mov
jb
jno
ja
pop
pop
add
mov
and
icebp
jmp
cmp
cmp
push
add
out
popf
loop
rcl
fscale
bound
push
pop
nop
add
inc
and
daa
cmps
push
nop
xchg
int
xchg
jnp
adc
cwde
pusha
push
test
ret
(bad)
jl
lock
mov
add
lahf
sub
jmp
out
icebp
inc
icebp
xchg
frstor
mov
mov
dec
out
lock
loop
cli
mov
(bad)
adc
sbb
pop
push
int3
scas
mov
pushf
dec
cmp
jns
inc
cmp
or
sbb
in
adc
adc
test
sbb
or
cwde
loope
xchg
xor
add
leave
pop
dec
inc
and
jmp
sub
sar
mov
mov
imul
hlt
xchg
fadd
pusha
pop
xchg
xchg
loopne
loop
mov
pop
movs
push
sub
pop
mov
xchg
fs
cmp
clc
cwde
add
pusha
add
into
and
mov
or
xchg
clc
or
inc
adc
mov
dec
mov
ror
ret
ror
add
shl
and
mov
jmp
arpl
loop
test
adc
or
fisubr
jnp
and
mov
or
outs
add
push
out
push
mov
rcr
adc
in
bound
dec
add
xlat
loope
jmp
dec
xor
sbb
or
jno
(bad)
dec
and
je
mov
and
xlat
mov
not
sub
call
loopne
adc
mov
jae
jae
or
push
push
outs
clc
test
inc
jl
aam
dec
shl
ins
jnp
les
add
(bad)
pop
add
out
cmps
cmp
xor
xor
jp
xchg
fs
mov
cli
lds
cmp
jne
adc
std
mov
inc
dec
pop
loope
add
das
or
movs
cmps
inc
adc
stos
fwait
daa
je
leave
mov
sub
add
xchg
adc
je
xchg
jno
inc
sbb
pusha
jl
cmps
inc
jge
xlat
js
das
adc
sub
jmp
movs
jo
push
push
push
or
sbb
fbld
adc
mov
bound
(bad)
xlat
hlt
mov
dec
loopne
or
adc
mov
inc
dec
sbb
fadd
ss
sub
push
pushf
add
xor
and
mov
lds
mov
inc
push
xchg
in
outs
std
dec
jp
ds
jno
mul
ret
es
mov
enter
leave
xchg
jl
inc
or
pop
sar
xor
jle
pop
mov
loope
test
xor
cmps
bound
lds
imul
add
out
pusha
rcr
push
cmps
inc
gs
mov
pusha
push
mov
(bad)
push
and
cli
ret
movs
jb
push
sub
int3
xchg
dec
cmp
push
(bad)
xchg
and
push
xchg
cs
pop
mov
sub
push
inc
adc
aaa
sub
bound
outs
ins
fsub
jnp
retf
in
or
mov
and
push
sub
inc
jbe
in
or
cmp
leave
jmp
xor
push
cmp
dec
(bad)
aam
fidivr
pop
sub
sbb
dec
cmp
movs
jp
inc
mov
mov
push
cmp
stc
jmp
adc
xchg
lods
sbb
jmp
lds
mov
div
push
enter
jp
mov
in
pushf
leave
add
push
mov
nop
dec
fmul
push
sub
sbb
pop
aam
jecxz
nop
and
fwait
push
jp
and
push
push
push
fidiv
dec
movs
mov
addr16
mov
mov
jae
inc
imul
js
and
aam
dec
and
push
loop
jbe
or
inc
jmp
pop
test
sbb
icebp
inc
scas
(bad)
jbe
mov
push
cmps
dec
retf
sub
dec
pop
popf
or
sub
icebp
push
jge
mov
cmp
sbb
(bad)
push
les
push
push
sub
pop
mov
add
or
inc
add
or
jge
xchg
pop
push
mov
call
add
cmc
and
mov
push
xchg
daa
jbe
retf
mov
push
(bad)
add
inc
lahf
inc
cmp
sbb
lock
lods
inc
xchg
ss
rol
inc
inc
inc
jo
outs
fist
int3
mov
mov
mov
fldl2e
push
pop
in
loopne
(bad)
dec
mov
cmps
fimul
popf
cs
inc
pop
dec
inc
mov
push
outs
push
mov
(bad)
mov
lea
dec
pop
mov
xlat
es
sub
dec
jl
cmp
in
imul
aam
pusha
popf
pop
and
aam
(bad)
arpl
call
in
pop
jmp
cli
jecxz
cmp
(bad)
cmps
mov
out
push
push
push
inc
cmp
movs
je
shl
cmp
and
mov
cmps
add
push
cmp
mov
xchg
imul
lods
xor
xchg
test
fsub
ja
or
jo
dec
clc
ret
nop
icebp
dec
cs
xchg
movs
push
jecxz
adc
sbb
(bad)
into
push
jae
mov
adc
(bad)
dec
(bad)
adc
mov
scas
inc
or
mov
mov
jge
inc
bound
dec
jb
pop
ret
cli
adc
mov
sbb
popa
hlt
adc
jmp
adc
call
ret
dec
or
add
dec
cmps
dec
xor
fimul
(bad)
jmp
mov
dec
xlat
pushf
inc
imul
mov
test
mov
in
push
test
cmps
push
cmp
adc
pushf
je
lods
mov
daa
movs
adc
ret
mov
pop
push
cmp
fstp
scas
push
ror
adc
movs
cdq
push
mov
pop
movs
enter
mov
iret
push
push
xchg
stos
cmp
mov
xchg
stos
xchg
adc
arpl
mov
pushf
pop
test
in
xchg
test
cli
inc
daa
jb
fs
pop
inc
jmp
nop
xchg
nop
add
push
cwd
push
xchg
retf
adc
pop
mov
clc
fdivr
ret
daa
addr16
mov
cmp
hlt
les
mov
push
out
jae
mov
add
push
adc
sub
adc
xchg
push
test
mov
xchg
xchg
and
mov
add
push
jbe
mov
jmp
jmp
sbb
pop
das
fstp
imul
test
pop
test
adc
xchg
add
and
movs
inc
shl
movs
push
test
gs
xor
xor
inc
movs
adc
mov
lods
adc
(bad)
adc
cwde
sbb
mov
or
or
or
sbb
popf
int3
inc
movs
dec
and
in
mov
lock
xchg
sbb
pop
jecxz
es
mov
sbb
sub
jp
jle
aaa
ins
adc
pop
jno
dec
daa
mov
sbb
rcl
fcmovne
rol
adc
fadd
fwait
pop
mov
popf
mov
and
mov
xchg
scas
mov
nop
xor
or
loope
sub
movs
pop
arpl
mov
and
inc
iret
js
out
inc
mov
adc
out
popa
js
dec
jmp
add
mul
leave
and
xor
lds
stos
mov
rol
(bad)
fcom
jmp
test
and
cmp
cmc
xchg
fwait
and
sti
mov
fs
cli
cli
jp
and
inc
loop
xor
push
fild
cmp
adc
mov
mov
cwde
das
push
jge
add
cmp
mov
xor
sbb
shl
push
pop
jb
(bad)
jo
fbstp
push
mov
inc
ja
test
retf
mov
pop
inc
mov
or
xchg
repz
stos
cmps
cld
mov
dec
clc
xchg
mov
loope
add
stos
mov
iret
push
dec
push
jmp
test
cmp
lods
repnz
mov
add
push
sbb
cmps
pop
jecxz
(bad)
push
ds
pop
fsubr
inc
call
(bad)
mov
xchg
jnp
add
and
sub
cwde
push
and
out
retf
shl
imul
xchg
jo
ja
popf
pop
and
mov
mov
adc
ins
mov
mov
adc
fild
enter
aam
imul
fs
aas
sub
and
pusha
cli
hlt
sbb
and
dec
ss
lea
retf
or
push
sbb
inc
nop
(bad)
les
pop
jb
pop
pusha
(bad)
loopne
cld
loope
and
dec
test
shld
jne
or
push
and
mov
rol
cmp
dec
dec
out
adc
jo
cld
arpl
ss
and
mov
lods
mov
ins
sub
jb
(bad)
bound
dec
and
jecxz
pop
xchg
push
xor
xchg
mov
ja
mov
push
mov
jl
or
pop
push
push
or
and
add
and
and
pushf
push
mov
xrelease
cs
adc
idiv
jle
inc
in
pop
adc
cmp
repz
mov
aas
test
mov
leave
daa
add
les
inc
call
mov
popa
ret
cmps
cmp
push
sub
mov
stos
adc
ins
ins
jb
cmp
outs
or
jno
sbb
xchg
and
pop
lock
movs
jo
mov
(bad)
xor
cmps
loop
ret
cmc
adc
call
mov
or
cmc
outs
cmp
mov
bound
add
mov
(bad)
push
addr16
pop
iret
cmps
adc
push
rcr
xchg
mov
jecxz
daa
and
mov
jmp
ficomp
not
cmps
mov
test
das
je
ret
cli
mov
out
dec
pop
popa
cwde
sbb
loopne
ja
sahf
in
je
and
xlat
adc
and
daa
daa
cmp
adc
push
mov
stc
ret
daa
pusha
and
and
sbb
jo
sub
jne
inc
pusha
or
lds
xchg
jl
and
shrd
and
add
inc
push
and
or
xor
jecxz
xor
sbb
push
(bad)
repnz
and
rol
daa
cmp
retf
(bad)
sti
in
add
xor
push
cmp
dec
and
adc
inc
scas
or
mov
mov
hlt
jecxz
xor
mov
addr16
and
mov
xchg
shr
and
jmp
jnp
and
mov
fs
pop
xchg
xchg
rep
inc
push
and
jnp
mov
pop
jg
mov
fistp
push
adc
and
xor
mov
fisubr
popa
sub
popa
cmp
cmc
mov
cmc
mov
pop
pop
popa
jne
push
cmp
mov
movs
movs
es
inc
or
pop
jns
daa
jne
into
arpl
inc
push
movs
pushf
cmps
fstp
and
cmp
xlat
inc
or
movs
push
xchg
jno
cwde
dec
mov
cli
sbb
sub
jo
rcl
add
in
jnp
pop
cmp
inc
dec
push
xor
sbb
jo
out
cdq
push
xchg
xor
push
add
mov
mov
add
movs
arpl
cmps
lods
dec
jbe
stos
or
mov
push
or
test
xchg
les
sar
pop
sbb
scas
add
dec
dec
or
jno
inc
dec
sbb
mov
jae
pop
sub
adc
xchg
or
jo
mov
xchg
add
add
or
push
inc
push
pop
adc
ficomp
dec
or
pusha
aam
jecxz
popf
jmp
mov
xchg
mov
cmc
cmp
xchg
adc
or
call
ret
cmc
jmp
or
dec
sub
cmp
movs
xlat
mov
xchg
imul
dec
shl
fcom
cwde
ins
test
(bad)
add
add
mov
adc
arpl
xchg
mov
ret
sub
push
popf
jbe
mov
jge
xchg
mov
test
sub
cmp
in
inc
mov
xchg
cmp
inc
jl
or
cmps
pop
sbb
fs
or
pushf
xchg
fcomp
outs
mov
scas
mov
dec
adc
or
jnp
jnp
pop
call
mov
fmul
inc
aad
adc
mov
sub
pop
inc
ret
test
mov
pusha
ins
popf
loope
and
xor
lods
push
popa
mov
push
inc
push
das
mov
xor
jmp
popa
aam
les
jmp
mov
mov
mov
pushf
shl
mov
or
ins
scas
cdq
or
icebp
data16
lds
iret
aam
je
xchg
sbb
mov
loopne
out
adc
sbb
shl
mov
call
addr16
cmp
xchg
nop
movs
test
mov
or
sub
inc
add
jb
inc
and
lahf
dec
xchg
xchg
inc
test
pop
xor
gs
jge
nop
retf
mov
cdq
push
inc
dec
frstpm(287
adc
and
cli
inc
mov
push
cmp
sub
into
inc
add
xor
add
xchg
jb
cmps
xor
xchg
test
lods
jecxz
out
dec
dec
jne
pop
fistp
addr16
bswap
sub
pop
sbb
cli
mov
popf
cli
loop
mov
sbb
dec
mov
cmp
mov
inc
mov
pop
dec
imul
dec
jns
fwait
jle
in
hlt
repnz
or
push
into
adc
xchg
lods
mov
inc
test
fwait
pop
xor
push
mov
xchg
pop
cli
mov
sbb
xor
adc
cmps
cmp
push
fist
dec
sub
lock
retf
test
cmps
push
pop
retf
out
cmp
mov
sbb
je
jl
mov
(bad)
cmp
adc
cmp
leave
push
fnstsw
xchg
arpl
imul
test
pop
xchg
js
lods
sub
sbb
push
sub
sub
xor
mov
out
movs
(bad)
push
adc
maxps
popa
imul
xor
rcl
dec
mov
xor
pop
ins
mov
or
shl
add
arpl
cmp
dec
xchg
inc
and
sahf
popf
loope
cmp
sub
loope
hlt
jmp
add
xchg
xchg
mov
jo
dec
xor
jp
adc
imul
push
test
sub
shr
dec
in
shl
fsub
sub
sar
dec
jo
arpl
cmp
test
inc
push
jg
jge
adc
enter
sbb
inc
sub
fild
add
cmc
es
ja
sub
dec
pop
sbb
ss
jl
les
into
jns
jnp
xchg
push
sub
pop
leave
xor
add
fisub
jno
pusha
inc
jge
push
ja
dec
add
inc
fdiv
and
aas
fsub
in
mov
pushf
call
out
(bad)
cmps
xlat
mov
xchg
call
dec
fld
push
mov
adc
in
xchg
pop
es
cli
add
xor
outs
adc
dec
iret
push
push
enter
jl
jbe
cmp
jno
xlat
mov
mov
xchg
push
sahf
fisub
mov
adc
mov
sbb
popf
outs
adc
dec
inc
fadd
outs
(bad)
push
dec
jb
daa
test
dec
jno
mov
(bad)
xor
push
out
mov
and
iret
les
frstor
inc
loopne
lea
aam
loop
xor
push
mov
dec
mov
(bad)
out
adc
aaa
or
push
aad
ffree
out
div
arpl
mov
lds
in
mov
dec
fld
movs
adc
inc
cs
imul
or
jno
sub
or
dec
push
hlt
(bad)
xor
test
in
pop
xchg
ins
daa
stc
mov
test
add
add
scas
xor
lahf
sub
mov
stos
out
cmp
sbb
dec
movs
cmp
pop
and
nop
and
sub
dec
fild
into
call
pushf
std
popa
pop
in
sbb
out
adc
and
ss
sub
sbb
dec
dec
mov
cmp
jge
push
bound
adc
lahf
xchg
ins
inc
faddp
and
loopne
arpl
cwde
push
inc
mov
xor
inc
imul
ss
bound
outs
int3
lea
jb
add
movs
inc
fldcw
cwde
out
cmps
jmp
mov
sbb
add
dec
frstor
rcl
and
jae
add
jne
push
or
push
out
test
mov
xchg
leave
popa
push
shr
lock
or
mov
adc
fidiv
out
mov
fbld
mov
adc
pop
mov
fld
jle
mov
push
xchg
out
push
jge
pop
ins
lods
fsubp
and
cmp
push
and
pusha
outs
or
scas
push
fisub
mov
mov
outs
hlt
xchg
xor
(bad)
fbld
inc
xchg
mov
fs
sbb
or
fild
sbb
dec
in
dec
and
jbe
jg
or
push
or
push
test
inc
daa
xchg
and
in
popa
jne
(bad)
call
scas
mov
mov
imul
rcl
stc
push
aam
test
jbe
test
and
and
xor
sub
dec
ror
dec
adc
fsubr
imul
mov
aad
pop
mov
into
add
add
cld
mov
clc
push
imul
push
add
mov
shl
push
fldcw
xchg
(bad)
out
ficom
mov
xchg
xchg
jo
push
imul
mov
mov
daa
or
aad
out
push
pop
jmp
xchg
in
jecxz
or
icebp
jnp
xchg
retf
aam
pushf
mov
cmp
cwde
xchg
fs
inc
dec
jl
pop
sub
sub
adc
daa
fs
mov
clc
test
repz
add
fcom
sbb
mov
dec
xchg
ror
inc
into
aas
dec
push
das
adc
or
icebp
aam
mov
or
dec
and
mov
lea
out
pusha
ret
and
lds
and
and
jmp
adc
or
movs
out
push
mov
mov
lea
mov
cmp
scas
pop
push
xor
ins
jo
hlt
mov
mov
fwait
xlat
mov
pop
and
lods
and
adc
sbb
cmps
movs
pop
dec
jge
test
mov
inc
add
retf
retf
repnz
push
jmp
or
cmp
(bad)
sub
mov
loopne
imul
adc
jle
int3
ss
xchg
fs
or
outs
mov
mov
inc
or
div
adc
outs
mov
xchg
dec
arpl
cmp
bound
or
arpl
inc
shl
xchg
mov
inc
or
retf
adc
aam
in
in
test
iret
movs
xor
sub
inc
(bad)
hlt
fimul
cmp
sbb
sub
push
in
stos
cmp
and
jo
out
fwait
sahf
call
lods
cld
mov
jns
cwde
les
sub
cld
loopne
sbb
mov
ucomiss
(bad)
sbb
xchg
jp
mov
retf
cdq
push
push
test
pusha
test
sbb
out
adc
into
not
(bad)
scas
out
ficom
dec
in
adc
cmps
jno
in
push
and
retf
div
mov
outs
daa
ins
pop
xchg
icebp
pop
jbe
and
and
(bad)
inc
add
pop
push
test
pop
add
cwde
pop
ja
in
pop
adc
adc
and
mov
test
or
adc
xor
and
add
xor
ror
ret
rol
loope
mov
and
mov
add
arpl
mov
add
adc
dec
cmp
and
dec
jo
stc
ret
les
int3
stos
ficomp
jo
cs
xchg
and
sbb
cmp
and
fwait
or
and
xchg
imul
lods
or
shl
dec
inc
in
(bad)
xor
ins
dec
jno
cmp
xchg
cmp
mov
push
cmps
fsubr
xor
enter
adc
adc
ins
jg
cwde
jb
cmp
setl
xchg
addr16
sub
add
loopne
cs
popf
pop
mov
mov
stos
imul
pop
ins
test
mov
repz
sahf
movs
cwde
in
sbb
sub
jl
int3
sar
sbb
imul
movups
adc
loope
cmp
pop
xchg
retf
dec
jmp
je
dec
cmp
ret
sub
test
sbb
jmp
mov
sub
add
xor
sub
cmp
add
iret
inc
fiadd
sbb
bound
xor
or
fld
push
and
jo
test
mov
push
cdq
lahf
dec
arpl
aas
nop
adc
xchg
inc
(bad)
sar
or
popa
rcl
ret
sub
in
mov
jmp
movs
sub
mov
xor
mov
arpl
jbe
aad
imul
aas
retf
shl
int3
stc
in
pop
(bad)
test
xchg
or
imul
push
push
jmp
inc
sbb
cmp
int3
push
xchg
mov
inc
pop
jmp
shl
shr
adc
or
mov
out
call
sub
lock
push
sbb
retf
mov
xor
sbb
mov
and
cmp
pushf
ja
test
paddb
hlt
mov
retf
adc
jnp
js
mov
push
ror
lods
xlat
sub
mov
push
daa
movs
inc
mov
shl
or
cdq
sub
adc
dec
fcomp
jae
sti
xchg
ret
(bad)
xor
fild
test
mov
(bad)
push
adc
xor
test
cmp
out
and
idiv
adc
jae
mov
mov
mov
mov
jbe
xchg
dec
sub
bound
mov
sub
push
sbb
xchg
xor
mov
(bad)
or
fnstcw
popf
and
enter
lods
lahf
jo
jecxz
sbb
imul
or
fs
arpl
cmp
push
out
dec
push
sar
and
push
outs
int3
cwde
mov
sub
aam
push
movs
or
fisubr
mov
pop
leave
dec
aam
push
loop
mul
inc
lds
sub
add
adc
mov
out
lock
mov
sbb
push
sbb
dec
ins
sbb
fdiv
cmp
dec
push
in
pop
movs
push
fistp
aas
cmc
inc
aaa
jb
xchg
bound
fsubr
mov
xor
add
sbb
(bad)
hlt
cld
loope
shr
jns
jmp
movs
pop
imul
cdq
ins
sbb
(bad)
cmp
call
sub
sbb
pop
pop
or
or
push
sub
fist
fiadd
mov
fdiv
movs
mov
jns
adc
sub
sbb
mov
(bad)
lock
daa
pushf
adc
pop
outs
out
pop
test
mov
call
(bad)
loop
xchg
or
jne
shr
inc
nop
jle
mov
sub
pop
(bad)
pop
push
push
test
sub
xor
test
mov
out
mov
jmp
add
push
mov
fstp
rcl
push
and
mov
nop
(bad)
fdivp
out
inc
or
sub
bsr
inc
cmp
mov
or
xchg
push
xchg
inc
jp
stc
lds
cmc
sbb
sub
cmps
in
push
imul
push
mov
mov
sub
popa
dec
push
push
(bad)
in
sub
jmp
mov
xlat
sbb
mov
jb
dec
adc
or
inc
dec
ret
rcr
mov
pop
push
adc
jae
cmps
leave
xlat
mov
push
rol
repz
push
sbb
inc
xlat
and
daa
cwde
lahf
je
(bad)
ror
fmul
inc
leave
pop
mov
xchg
jp
popf
enter
ss
out
fisubr
adc
sahf
test
adc
jmp
xchg
dec
icebp
leave
(bad)
scas
loopne
ror
push
jnp
sub
xor
mov
mov
mov
ror
arpl
push
fcomp
mov
bound
jne
ds
aam
icebp
fs
dec
jb
shl
rcr
aaa
and
xlat
arpl
std
cmps
out
fcomip
fmul
jmp
pushf
mov
xor
ss
cmp
ret
push
xchg
int
fnstsw
ins
add
xor
xchg
push
arpl
leave
fstp
sub
pop
mov
xor
xchg
aam
stos
fldenv
dec
fnstenv
mov
push
xor
int3
jne
mov
mov
repnz
loopne
inc
sbb
adc
add
cmps
loopne
in
add
pop
mov
(bad)
jp
add
imul
stc
sbb
into
(bad)
add
xrelease
sbb
add
lock
dec
and
mov
les
stos
add
nop
mov
daa
mov
xor
repz
pop
xor
je
ss
xchg
outs
dec
(bad)
ins
popa
mov
cdq
sub
stc
pop
popa
xchg
or
push
cmp
outs
popa
pop
xchg
push
sub
push
inc
and
sbb
scas
lods
icebp
xchg
stos
aam
in
repnz
cdq
pop
cmp
dec
and
ins
les
mov
in
xor
out
push
dec
cmp
xlat
cs
push
mov
push
in
into
mov
ins
dec
dec
test
mov
dec
jl
(bad)
inc
dec
fmul
fistp
inc
mov
and
push
inc
outs
dec
mov
out
cmp
movs
sub
sub
inc
xor
add
fs
push
(bad)
mov
adc
dec
fstp
mov
adc
adc
or
lods
or
outs
test
popa
pop
mov
jnp
test
inc
stc
cmp
pop
pop
adc
sbb
dec
inc
imul
push
(bad)
mov
(bad)
jo
movs
mov
pop
xchg
lods
repz
push
test
push
mov
data16
mov
mov
push
push
mov
push
mov
js
inc
push
cdq
lock
jbe
lods
cli
cmc
jno
jbe
or
outs
movs
xchg
mov
daa
stos
xor
adc
pop
jno
into
inc
jno
sub
stos
jnp
jmp
jg
iret
mov
loop
dec
jp
mov
mov
xchg
frstor
push
cld
stos
mov
push
lods
jae
jecxz
jecxz
stos
jb
mov
dec
stos
adc
adc
imul
or
loopne
jo
inc
push
xor
out
adc
xchg
(bad)
dec
push
jb
rol
test
shl
mov
cmp
test
cmp
les
cdq
sbb
test
jo
jle
inc
aaa
jb
retf
sub
jmp
mov
jbe
cmp
inc
cmps
fs
ror
xor
outs
jecxz
pop
retf
in
jmp
call
cmp
cmps
dec
adc
sbb
aaa
bound
ins
add
push
sub
and
pop
and
mov
fs
fcom
mov
lods
mov
rcl
pop
retf
adc
outs
jmp
lock
fdiv
xchg
mov
mov
stc
out
xor
enter
pop
fnsave
xlat
push
aam
ret
cld
and
sbb
adc
sub
outs
paddb
xchg
adc
fmul
(bad)
lds
fdivp
pop
mov
lods
dec
sbb
adc
out
in
out
lods
hlt
push
call
gs
mov
mov
cmps
adc
or
xor
dec
(bad)
std
loope
mov
sbb
dec
push
test
ins
aam
xchg
and
popa
add
fiadd
cmp
dec
nop
mov
sub
xchg
xchg
outs
mov
or
test
pop
je
add
sbb
lods
dec
in
add
cmp
popa
mov
jae
jecxz
sub
fs
pusha
xchg
fmul
or
lea
ins
sbb
test
out
adc
mov
mov
jl
retf
fnstcw
or
in
sti
sti
stos
test
dec
sub
cmp
sub
lea
daa
xchg
adc
icebp
push
dec
aad
pop
fwait
xchg
arpl
jmp
test
mov
(bad)
push
popa
pop
jbe
or
adc
mov
and
xor
arpl
sahf
popf
mov
pop
aas
xor
push
push
sbb
pop
push
cmc
mov
sub
push
ins
loope
and
cmps
jge
iret
fist
dec
rcl
cmp
jg
(bad)
ss
popa
or
enter
mul
xor
adc
cmc
cmps
scas
ja
jno
jmp
sbb
fimul
jp
pop
(bad)
ja
add
push
fisub
xchg
push
adc
jmp
fs
jecxz
inc
or
dec
cdq
push
int3
fnsave
push
mov
pop
xchg
fnstenv
ins
xor
jmp
xor
push
pusha
fstp
fstp
xor
ja
mov
push
jmp
jmp
je
in
or
out
scas
and
mov
or
shr
xchg
scas
pop
test
add
lds
dec
pop
xchg
loopne
(bad)
xlat
dec
xor
movs
adc
cs
cmps
rol
and
push
add
test
push
pop
sbb
xchg
jp
repnz
sbb
call
push
pop
(bad)
dec
inc
scas
dec
int3
jb
jns
sbb
cmp
sub
add
repz
mov
jnp
xchg
push
mov
adc
pop
push
test
and
repz
daa
mov
nop
inc
jno
add
call
push
fs
popf
(bad)
lods
add
cmp
lods
add
add
or
and
inc
jg
or
mov
push
je
rol
jecxz
iret
into
add
add
add
xor
aaa
stc
cli
inc
and
leave
xchg
test
out
outs
xchg
mov
sub
cld
mov
hlt
ds
adc
cmp
nop
or
daa
or
ins
sub
out
xlat
mov
call
mov
cdq
dec
out
rol
sub
cmp
xchg
add
bound
mov
cmps
adc
sub
cmps
test
push
bound
xchg
mov
push
cmp
retf
dec
pushf
and
out
jg
adc
pop
test
clc
iret
pop
mov
dec
cmps
fst
push
xor
in
in
in
aam
lea
xor
and
call
and
mov
mov
sub
scas
int
enter
outs
or
dec
and
pop
sub
aas
xor
inc
jne
jecxz
and
scas
or
cs
fucom
cmps
into
(bad)
mov
cdq
aas
fnsave
dec
push
in
push
and
in
sbb
(bad)
jae
sub
jp
or
and
fisttp
das
test
mov
imul
mov
cmp
imul
cmp
inc
rcl
in
push
(bad)
jmp
les
and
cmp
inc
adc
loop
cmps
add
inc
icebp
jg
push
xlat
jno
sub
int
ror
fnsave
sub
nop
inc
xchg
test
movs
or
int
pop
or
xchg
repnz
inc
jg
popf
inc
cmp
jno
test
out
or
frstor
push
cs
mov
xchg
popf
leave
mov
inc
jecxz
jne
scas
sub
mov
dec
jnp
stos
imul
retf
inc
mov
repz
xchg
rcr
bound
(bad)
push
push
sbb
or
mov
test
test
out
sbb
xchg
aaa
bound
adc
xchg
pop
dec
push
inc
push
jbe
loope
mov
int3
outs
and
ds
xchg
mov
sbb
ins
xor
xchg
test
push
add
add
pop
idiv
adc
jno
imul
fld
xchg
gs
dec
inc
pop
or
in
jbe
push
(bad)
jne
add
aas
jnp
mov
adc
inc
push
mov
retf
cmp
movs
clc
sub
test
bound
test
(bad)
imul
and
mov
leave
mov
mov
xor
push
or
mov
and
push
push
mov
shr
hlt
call
scas
push
jg
push
xor
sbb
cmpps
cmps
pop
pop
iret
ss
jecxz
push
stc
les
sbb
mov
stos
cmp
inc
mov
cli
inc
mov
inc
and
into
popa
jne
bound
cld
and
dec
mov
popf
inc
imul
and
rcl
cmc
test
sub
gs
mov
xchg
sbb
push
inc
test
adc
test
stos
mov
mov
cdq
bound
inc
and
push
and
cmc
mov
adc
sub
add
cwde
imul
cmp
jnp
mov
sub
sbb
movs
test
mov
add
sbb
dec
mov
in
dec
mov
jo
addr16
push
loop
sub
dec
aaa
daa
js
dec
and
jbe
xor
push
je
loope
stos
cmc
out
dec
push
mov
cmp
push
jmp
mov
jp
fs
inc
fwait
fwait
loope
add
inc
scas
fstp
scas
jno
lods
jb
mov
push
sahf
push
xor
xor
xchg
cmps
xchg
repz
dec
pusha
std
fmul
adc
mov
sbb
(bad)
pop
cmps
mov
inc
cmp
xor
loopne
fldenv
cmp
jge
jecxz
xchg
dec
leave
mov
mov
pop
push
ror
push
fsubr
arpl
or
cmp
xor
mov
inc
jmp
mov
les
mov
pop
cmovp
or
cli
cwde
rol
xor
stos
xchg
jmp
iret
push
or
mov
lahf
pop
pop
sbb
ror
cmp
out
je
xchg
popa
add
mov
mov
sbb
cmp
dec
add
(bad)
xor
iret
les
pop
shl
push
xor
in
pusha
cmp
or
sbb
or
(bad)
mov
cmp
ss
mov
fisubr
push
inc
cs
xchg
and
in
jae
lods
inc
mov
in
or
cmps
jb
enter
mov
mov
ins
add
les
and
popf
retf
es
cmp
movs
sahf
push
hlt
mov
mov
xor
les
mov
or
pop
cmc
xchg
ret
sar
push
addr16
jne
mov
xchg
int
es
cmp
retf
cmp
dec
push
add
adc
loop
rol
xlat
pop
sub
mov
pop
adc
(bad)
fwait
mov
movs
shr
lods
xchg
es
inc
dec
(bad)
not
(bad)
cmp
add
cld
fidiv
nop
dec
push
jbe
xor
dec
imul
inc
test
ss
call
test
mov
(bad)
mul
jne
dec
jge
arpl
movs
and
pop
push
inc
frstor
lods
sbb
and
ficomp
add
xchg
out
enter
mov
aam
mov
mov
fst
dec
loop
push
nop
xor
cmp
out
jge
push
and
mov
call
jne
popf
into
xor
les
sahf
loope
dec
jmp
outs
jmp
dec
mov
push
retf
cmp
cmp
aas
jecxz
dec
loope
ins
or
push
mov
shr
fnsave
enter
dec
dec
pop
add
xchg
and
add
dec
cs
jge
cmps
fst
rol
add
aaa
sub
push
xchg
cmp
pop
fwait
sub
outs
mov
out
xchg
lahf
push
and
xchg
and
jns
iret
ins
lds
inc
sbb
xor
scas
cmp
add
sbb
cmp
sub
repz
or
dec
inc
les
mov
leave
les
pop
(bad)
jb
and
and
mov
push
inc
push
leave
leave
(bad)
fld
pop
sub
pop
or
add
sbb
retf
inc
jg
jne
mov
ins
sahf
sbb
jae
int
cmps
push
movs
aaa
sub
xchg
mov
sub
imul
(bad)
adc
icebp
cld
mov
mov
ret
repz
and
call
and
std
push
test
cmps
xor
xor
mov
jo
add
and
push
push
push
fist
push
inc
xchg
imul
popf
push
outs
stos
pop
inc
fstp
sub
push
outs
add
pop
push
jmp
xor
outs
mov
aam
push
ror
mov
loope
loope
mov
gs
scas
fld
test
in
mov
sbb
mov
cmp
sub
dec
loope
push
mov
mov
mov
inc
rol
mov
mov
adc
inc
add
mov
add
fsubp
mov
jo
mov
sub
ins
push
rcl
mov
lods
mov
dec
dec
daa
add
ins
test
(bad)
fcomi
hlt
xchg
mov
bound
movs
mov
daa
test
pop
aad
or
adc
jns
jge
arpl
inc
jbe
or
push
or
add
cmp
loope
dec
in
xor
je
and
inc
fdiv
xchg
popf
xchg
(bad)
(bad)
pop
lods
leave
mov
aaa
and
fld
sub
cmp
sub
jmp
nop
cmp
and
inc
ror
jmp
je
ins
cmps
push
and
fs
pop
and
ins
adc
pop
adc
ins
jp
ds
stos
push
and
mov
(bad)
fdivr
mov
xchg
jnp
fmul
xor
or
not
xchg
mov
sub
push
aad
mov
xchg
rcl
aam
lea
mov
sub
cmp
jmp
or
mov
outs
in
and
and
sub
pop
not
enter
jp
imul
sbb
add
pop
xchg
and
loope
das
add
sti
(bad)
cmc
clc
inc
add
jbe
dec
jb
mov
sub
adc
dec
test
and
dec
sbb
hlt
test
test
(bad)
lock
rol
cmp
rol
xchg
daa
mov
sbb
and
inc
jae
popf
mov
sbb
add
push
push
push
cmp
retf
cmp
cwde
push
dec
jmp
je
adc
scas
sti
ja
mov
mov
(bad)
pop
test
add
test
pusha
dec
les
sbb
inc
cld
loope
gs
or
cli
ins
adc
aam
ins
and
aaa
mov
rcr
xor
pop
sbb
cmp
cmc
adc
pushf
mov
push
and
pop
adc
js
and
out
jmp
adc
repnz
add
sub
xor
lock
jge
add
jne
lods
mov
popf
(bad)
lods
dec
fimul
pop
adc
jl
in
dec
add
mov
or
(bad)
gs
adc
xchg
push
ss
cmp
daa
out
inc
cmp
inc
mov
mov
dec
sbb
mov
movs
scas
push
shl
lods
adc
mov
and
xchg
mov
bound
and
out
add
adc
inc
test
inc
js
dec
jmp
mov
fwait
cmp
inc
out
jno
imul
cmp
mov
jecxz
(bad)
arpl
pop
push
pop
mov
shl
jle
movs
retf
jb
jnp
xor
adc
jmp
test
push
lea
sub
or
cmc
ins
mov
dec
cwde
lock
popa
mov
ret
in
das
cdq
push
mov
sub
or
adc
push
xchg
jge
(bad)
jmp
or
shl
xor
add
push
dec
fistp
fistp
and
mov
js
in
fisub
dec
les
ds
mov
ins
pop
push
fisub
push
call
ret
lea
or
es
jg
pop
test
fwait
ret
in
ins
adc
movs
inc
test
cmc
sub
jns
or
test
xchg
push
adc
xchg
sbb
mov
cmp
sub
mov
mov
or
std
mov
xor
or
dec
dec
lahf
or
dec
inc
push
add
int3
add
(bad)
nop
adc
mov
pushf
std
and
mov
and
pusha
or
mov
pop
cmp
pop
and
dec
movs
cs
mov
add
imul
jbe
push
xchg
xor
ret
loope
xchg
(bad)
jecxz
cmps
cld
push
test
pop
xchg
inc
dec
ins
dec
call
mov
adc
in
into
cdq
jo
test
mov
test
lods
cmp
mov
jmp
adc
lock
cwde
(bad)
dec
idiv
ror
je
dec
push
jbe
mov
in
xor
jmp
adc
gs
mov
ret
or
cmp
xchg
arpl
ja
cmp
mov
push
push
mov
mov
mov
xor
popf
xchg
jl
cmp
cmp
imul
add
in
int
mov
sti
cmp
push
dec
call
add
movs
outs
fist
gs
ds
cmc
pop
dec
lods
xor
pop
rcr
xchg
adc
and
sbb
sar
cmp
retf
jl
lea
xor
xchg
pop
cmps
mov
push
push
lods
outs
mov
ds
mov
in
addr16
dec
test
jp
push
xor
data16
(bad)
lods
mov
xor
push
mov
mov
xchg
(bad)
pushf
sub
ins
mov
jmp
scas
mov
icebp
loopne
cmp
dec
out
mov
jle
fst
sbb
cmp
leave
movs
test
xchg
out
mov
aam
adc
inc
xor
fld
push
not
call
mov
sbb
xchg
retf
cmps
repnz
jge
inc
xor
inc
(bad)
jecxz
out
jns
jno
adc
ds
xchg
dec
xchg
adc
push
pushf
inc
xor
adc
rcl
les
add
mov
pushf
xchg
dec
and
jno
xor
shl
or
pop
xchg
test
test
outs
pop
xchg
pop
mov
imul
jno
(bad)
cs
pop
xchg
cvttps2pi
fnstsw
xor
std
adc
aas
dec
mov
push
adc
loopne
adc
mov
ds
jb
test
jmp
pushf
icebp
mov
scas
cmp
inc
mov
push
outs
int
int
jle
jge
push
mov
ins
mov
xor
jl
xor
leave
dec
test
gs
add
aam
in
sti
fld
jg
xchg
jge
shr
(bad)
in
push
addr16
xchg
mov
jae
inc
or
push
popf
popa
inc
and
mov
scas
sub
dec
inc
cwde
(bad)
ss
out
jecxz
jo
adc
xchg
pop
add
(bad)
pop
enter
add
stos
mov
(bad)
jbe
lods
dec
pop
mov
data16
push
xchg
push
mov
cmp
lock
(bad)
retf
sbb
mov
sti
sbb
pop
xchg
sub
pop
cmps
gs
das
push
xchg
jmp
les
pop
movs
pop
dec
xchg
jmp
and
or
push
cs
pop
fbstp
mov
fs
(bad)
dec
inc
push
jno
pop
sub
add
add
bound
sbb
sub
and
je
clc
adc
fidivr
xchg
movs
add
cmp
inc
push
lock
arpl
ret
popa
mov
in
adc
dec
rcl
and
and
movs
sub
sub
retf
std
xor
or
sub
das
cmp
jmp
retf
popa
inc
retf
and
aam
arpl
xor
loop
xchg
lea
mov
stos
sbb
inc
inc
movs
lods
imul
loopne
and
push
and
dec
xchg
into
dec
jecxz
dec
mov
in
out
ud2
ins
lds
in
(bad)
pop
xchg
mov
sahf
mov
jb
(bad)
jg
cwde
scas
xor
in
scas
dec
jmp
or
inc
jne
rcr
xchg
xchg
outs
push
push
pop
mov
imul
push
test
add
jp
out
mov
in
ja
dec
enter
mov
inc
ss
fwait
ins
ror
cmp
xchg
lds
pop
sbb
sbb
sahf
ret
mov
dec
popa
loope
push
jnp
outs
xor
jne
push
test
scas
pop
xor
pop
rcr
out
mov
jo
mov
dec
fsub
mov
es
ins
add
mov
iret
bound
jge
pop
mov
adc
repnz
popf
xchg
jmp
and
ret
jmp
sub
mov
push
add
leave
add
cwde
mov
cdq
add
in
pop
retf
push
sub
es
pop
xchg
into
mov
dec
inc
out
pop
sub
sub
push
jo
or
in
cwde
push
lds
lea
mov
sahf
add
mov
dec
pop
add
fimul
or
icebp
or
imul
cli
mov
inc
cs
mov
inc
scas
rcl
lods
sbb
popa
push
fimul
jmp
dec
xor
jbe
jp
addr16
test
cmp
mov
push
test
dec
out
adc
retf
mov
call
mov
jno
lds
and
mov
loopne
mov
sub
rcl
pop
test
pushf
jns
hlt
ins
jge
xor
es
and
xor
imul
add
icebp
or
movs
sahf
outs
xchg
leave
shl
xchg
mov
mov
les
sub
xchg
xchg
sub
xchg
or
lods
dec
fdiv
add
xor
cmp
mov
or
(bad)
(bad)
mov
mov
icebp
mov
je
mov
sbb
stos
xchg
jbe
jns
call
fdiv
daa
xchg
mov
rcl
jns
push
movs
adc
leave
lock
inc
je
add
push
pushf
enter
call
rol
xor
cmp
dec
fmul
mov
push
push
inc
jne
stos
int
cdq
cdq
or
mov
cmps
into
in
inc
imul
xchg
cmp
(bad)
jmp
fisub
xchg
dec
adc
and
out
xor
(bad)
push
inc
into
and
pusha
jge
or
ins
aaa
fild
imul
pushf
sqrtps
aad
mov
lea
fnstsw
add
push
mov
popf
loop
in
cs
cwde
xchg
xchg
add
jno
into
cmp
or
aad
xor
xchg
popa
ds
daa
sbb
fisubr
xchg
inc
mov
xchg
lods
fcom
std
dec
loop
ins
mov
push
in
inc
mov
and
in
push
lahf
inc
sti
jne
ds
(bad)
mov
inc
adc
cmps
scas
mov
xchg
mov
jmp
ins
mov
shr
sbb
or
dec
inc
or
ins
add
inc
leave
(bad)
test
adc
pop
ss
jmp
ficom
fisttp
fadd
mov
xlat
push
idiv
adc
out
aaa
lods
mov
pop
div
out
jns
or
mov
push
adc
lds
movs
xchg
push
xchg
mov
repnz
test
xor
and
mov
or
push
inc
or
int3
dec
das
add
imul
pushf
add
shr
dec
push
dec
imul
sbb
cmps
add
sub
xor
and
ds
jge
sub
sbb
inc
pop
cmp
sub
inc
mov
fs
inc
pop
inc
fistp
mov
xchg
stc
les
add
loope
add
aas
adc
dec
inc
(bad)
mov
pop
iret
fisttp
adc
cmps
mov
int3
mov
sub
test
cld
bound
mov
and
mov
xor
mov
daa
mov
(bad)
arpl
jmp
xchg
cli
jp
adc
xor
pop
cmps
cmp
sbb
lds
and
add
test
and
(bad)
sub
mov
xor
push
in
es
cmps
aam
inc
push
dec
sbb
neg
popf
shl
or
(bad)
ror
ja
xchg
arpl
mov
in
(bad)
les
movs
jle
push
dec
or
mov
jns
loope
(bad)
cdq
ins
not
cmp
aad
lods
or
out
(bad)
sbb
aad
popf
sbb
sub
push
push
out
jmp
xchg
sub
pop
xchg
test
int3
and
retf
movs
xchg
test
lds
inc
jp
dec
cmp
ins
or
cdq
jb
mov
mov
ins
adc
add
retf
jmp
inc
dec
std
mov
or
inc
ins
cmp
xor
mov
pop
xchg
pusha
push
mov
in
dec
mov
jmp
xchg
mov
push
pop
jl
jne
pop
fnstenv
pop
outs
mov
jmp
add
hlt
mov
mov
jecxz
add
cs
mov
and
pop
or
dec
cmp
test
or
sub
inc
mov
and
fcomp
cmc
cmc
mov
dec
xchg
pusha
dec
push
jb
jb
dec
push
in
movs
repz
mov
and
or
dec
dec
pop
mov
push
xchg
bnd
mov
xchg
lods
popa
pop
in
add
inc
add
mov
jmp
retf
sar
add
push
cs
add
daa
and
or
adc
cmp
add
dec
add
fiadd
and
dec
cmp
outs
cmp
xchg
sbb
mov
mov
dec
mov
cdq
or
out
or
push
add
movs
add
adc
sbb
push
sub
mov
in
mov
dec
push
mov
fwait
jns
adc
test
data16
sub
lods
mov
lea
cmc
mov
push
sbb
ss
psraw
adc
dec
cmp
outs
adc
xor
iret
inc
mov
out
scas
loop
test
leave
call
mov
dec
gs
out
sub
out
in
(bad)
aam
cmps
jmp
test
(bad)
push
ret
mov
lods
sbb
jl
mov
sub
in
jg
adc
pop
add
and
pop
pop
mov
push
jns
add
mov
and
push
push
hlt
cmc
dec
push
sub
add
hlt
xor
xor
pusha
mov
push
mov
mov
ins
hlt
xchg
mov
adc
push
mov
stos
pushf
outs
sbb
pop
in
les
adc
add
ins
int3
xor
enter
lods
fdiv
scas
inc
add
and
add
jb
jl
add
adc
add
adc
pop
xchg
test
pusha
and
rcl
cmp
ja
mov
(bad)
jmp
jmp
nop
or
hlt
adc
gs
cmp
mov
inc
cmp
aas
push
adc
loope
into
ds
add
ins
loop
dec
fwait
mov
sbb
add
mov
int3
ds
mov
arpl
imul
out
pusha
(bad)
adc
iret
dec
fld
loopne
xchg
hlt
xchg
push
scas
out
and
and
mov
shr
mov
lock
or
out
imul
or
cmps
icebp
sbb
out
adc
fidivr
dec
shr
xor
call
mov
mov
xor
mov
cdq
push
gs
mov
dec
test
aas
adc
push
sar
(bad)
ud2
pop
in
mov
sub
sub
mov
push
mov
dec
cdq
push
push
sub
cmps
(bad)
jmp
add
ja
imul
push
loopne
fild
js
mov
xchg
mov
fcom
dec
retf
and
dec
(bad)
in
xor
sbb
in
out
push
and
test
js
inc
retf
icebp
mov
inc
xor
shr
and
out
xor
mov
aam
xchg
sub
pushf
(bad)
xchg
shl
push
rcl
mov
retf
aas
pop
jmp
in
xor
imul
push
std
xor
mov
aad
sbb
in
xchg
cmps
cmp
cwde
aam
ret
push
lea
into
jae
push
(bad)
das
and
icebp
cmp
mov
iret
fiadd
jne
ror
js
dec
xor
pop
xor
add
adc
stos
pop
in
imul
pop
retf
stos
xor
test
and
dec
ss
repnz
inc
sub
mov
push
xchg
push
push
mov
out
xchg
inc
xor
sbb
sbb
bound
int
cmps
adc
imul
xor
xor
out
ja
mov
cmps
dec
mov
mov
or
xchg
inc
xchg
ss
jbe
push
mov
push
jecxz
lods
push
outs
sbb
push
ficom
test
aad
and
daa
cdq
mov
shr
and
pop
cmp
and
or
mov
mov
pop
and
inc
test
call
pop
sbb
mov
add
dec
es
stos
mov
sub
outs
mov
xchg
stos
cmps
or
xchg
push
test
dec
xor
cmps
shl
adc
inc
outs
pop
or
test
xchg
mov
push
xchg
(bad)
xchg
bound
retf
jbe
lahf
xor
fsub
dec
sub
push
mov
inc
aaa
bound
(bad)
cmp
jle
dec
fcomp
fidivr
ss
cmp
lods
add
jbe
ins
movs
arpl
add
les
sub
fxch
lea
jle
push
popf
lea
adc
cli
lds
mov
xchg
cdq
jmp
outs
or
ds
jmp
neg
jo
(bad)
jo
rcr
inc
aam
sub
or
and
xchg
rcl
mov
(bad)
aas
push
xchg
sbb
and
in
les
call
jmp
xor
sub
hlt
(bad)
push
xchg
mov
xor
jb
mov
mov
cdq
pop
call
enter
jp
xchg
xchg
movs
jl
add
push
fsub
jo
ret
jae
daa
pop
push
je
jb
fld
test
aaa
jb
stos
jno
lahf
sub
retf
arpl
ins
movs
test
mov
bound
aam
jl
scas
in
push
mov
imul
adc
dec
cdq
adc
and
iret
pmulhuw
fwait
mov
inc
xor
jnp
mov
popa
and
xchg
mov
dec
ds
pop
rcl
int3
outs
loop
or
lahf
mov
mov
dec
fsubr
(bad)
push
aam
mov
lds
cmps
sub
mov
lods
cli
adc
xor
xor
sub
mov
stos
lea
test
pop
xchg
retf
push
in
retf
das
adc
fbld
xchg
lods
int
adc
jle
push
daa
movs
and
out
dec
retf
daa
loop
dec
inc
hlt
dec
xor
sbb
test
push
or
and
or
sbb
int
sar
imul
(bad)
mul
not
fstp
push
jmp
cmp
mov
icebp
sbb
call
rcr
inc
sub
sub
pop
pop
scas
xor
ins
or
mov
push
mov
mov
je
and
adc
push
sbb
cmp
mov
ret
sub
cdq
stos
push
xchg
adc
test
and
outs
or
xchg
cld
loope
dec
xor
bound
pop
mov
sub
pop
sub
push
inc
lahf
movs
dec
dec
jb
mov
jp
(bad)
add
adc
and
enter
cmc
inc
xchg
inc
outs
xor
in
dec
pop
xchg
and
dec
leave
in
xlat
jae
xchg
imul
pop
pusha
aas
dec
sub
push
rcr
mov
ss
and
push
jno
mov
fmul
sub
mov
adc
jno
(bad)
dec
sbb
push
out
mov
cmp
pop
mov
cmp
sbb
nop
lods
pop
cmp
(bad)
push
sbb
gs
and
dec
push
mov
cmp
bound
xlat
lods
(bad)
push
sbb
test
imul
leave
jp
mov
xchg
int3
cmps
fidivr
adc
pushf
add
movs
leave
or
mov
adc
gs
loop
call
mov
int
pop
rcl
pop
test
lahf
out
call
add
and
inc
xchg
inc
fcomp
je
and
popf
fstp
and
into
pop
retf
mov
out
mov
mov
rcr
mov
mov
pop
jecxz
xchg
retf
xlat
scas
icebp
or
or
dec
mov
xchg
mov
xlat
mov
dec
ret
inc
movs
sub
cmp
inc
sar
loop
mov
add
pushf
pop
sub
repnz
cmps
jae
jno
lds
test
xor
call
mov
cmps
push
into
in
jge
dec
dec
sub
retf
inc
push
sub
or
movs
sbb
push
(bad)
(bad)
repnz
das
or
push
out
stos
push
inc
imul
cmp
cmp
push
jns
sub
in
sar
fist
sbb
sahf
mov
adc
dec
jb
inc
mov
fs
mov
or
ror
jmp
or
push
enter
cmps
ror
fcom
push
xor
sub
and
dec
and
nop
xor
mov
addr16
fwait
aas
push
and
adc
adc
or
(bad)
iret
pop
adc
rol
fucomi
adc
sbb
mov
jle
and
jge
adc
jp
ret
xor
xor
xchg
push
fild
scas
mov
int
addr16
adc
pop
push
dec
jmp
xor
pop
cmps
mov
mov
movs
pushf
cmp
sbb
sbb
retf
sahf
mov
push
fisttp
sar
outs
jp
dec
xor
sub
cmp
sub
push
loopne
or
bound
repz
lods
and
mov
add
and
rol
(bad)
movs
push
shl
pop
sbb
(bad)
stos
pop
lea
into
xlat
cmps
add
test
dec
inc
mov
sub
xor
out
mov
mov
ret
mov
xor
pop
ins
push
scas
jge
mov
cmps
xchg
int
aas
int
das
mov
cmp
adc
and
mov
adc
(bad)
mov
js
shr
in
mov
stos
test
or
shl
mov
sbb
fbstp
push
xchg
(bad)
in
cmps
sub
rcr
lds
jo
test
jmp
push
ret
xchg
dec
pop
int3
adc
lahf
pop
mov
push
cmp
jb
scas
and
pop
data16
(bad)
jno
dec
fimul
ins
mov
push
adc
into
push
add
mov
jb
outs
cwde
xor
pusha
xchg
xchg
rol
sub
or
pusha
seta
adc
ret
inc
pop
mov
in
dec
pop
cmp
(bad)
ins
mov
and
movs
or
mov
shr
movs
mov
xchg
inc
lods
mov
int
out
dec
pop
mov
adc
xchg
pop
and
xchg
and
pop
inc
mov
test
ins
and
mov
aam
xchg
rcr
xchg
and
and
sbb
mov
inc
push
jno
cli
ret
les
adc
inc
mov
rep
cwde
push
in
ret
push
sub
mov
sub
shl
sbb
lock
mov
push
test
aam
push
cdq
xchg
jp
xor
out
sub
adc
cmc
test
cmp
sub
cmp
push
test
cmp
test
inc
cmp
push
scas
pop
repz
mov
sub
mov
inc
sub
loope
cmp
lods
outs
xchg
sbb
sbb
jnp
adc
ins
xchg
fs
jmp
lea
or
popf
mov
cmp
fsub
sahf
xchg
inc
fsub
(bad)
arpl
and
jo
mov
ja
fdiv
rcl
out
pop
test
and
mov
xor
mov
adc
xor
sbb
shl
jb
sub
jb
shr
test
in
int3
daa
sub
fsub
dec
push
jle
adc
mov
mov
or
push
(bad)
sub
dec
inc
push
popa
pop
sbb
mov
shr
add
rol
mov
dec
sbb
mov
movs
ss
dec
pop
mov
(bad)
sbb
push
xor
movs
xor
sub
sbb
inc
ins
dec
lods
add
cmp
dec
iret
scas
jae
add
ret
int3
sbb
sub
add
test
fstp
push
pop
lock
lods
add
outs
or
mov
sbb
or
xchg
inc
and
mov
mov
imul
ret
lods
inc
inc
gs
test
xchg
inc
mov
pushf
out
sahf
mov
xlat
sbb
xchg
dec
js
cmp
sbb
clc
stos
jo
test
mov
cld
pop
jo
sub
lds
in
xchg
int
push
pop
repz
mov
xlat
push
jns
(bad)
iret
shr
cmp
inc
imul
outs
pop
lea
sahf
inc
adc
sub
jle
das
mov
mov
mov
or
movs
and
mov
jo
inc
dec
sar
dec
xchg
push
scas
sar
sbb
adc
call
dec
and
cmps
push
push
push
adc
jmp
jmp
mov
fdiv
adc
shl
addr16
add
in
add
pop
cmp
xor
jo
add
ja
or
add
into
jp
add
mov
and
retf
xchg
aad
and
gs
pop
sbb
int
xchg
jmp
test
mov
repz
fcmovnb
test
sub
(bad)
xor
inc
pop
and
push
or
rol
cmp
std
movs
stos
in
push
ret
popa
jbe
jl
ja
stc
dec
xchg
dec
inc
sti
jmp
inc
scas
test
jb
test
jmp
loopne
mov
mov
lock
pop
hlt
push
cdq
xchg
xchg
jp
xor
jo
lods
sub
loopne
jnp
jle
inc
outs
addr16
or
mov
mov
xor
pop
in
jmp
jp
jne
dec
and
mov
popa
dec
or
out
adc
mov
mov
icebp
mov
mov
or
cmps
in
xlat
xchg
popf
movs
jmp
add
neg
retf
sub
outs
mov
(bad)
cwde
fisubr
stos
jbe
aad
clc
jle
push
scas
dec
ds
jp
imul
pushf
sub
sub
adc
rcr
inc
adc
xor
out
dec
fidivr
loop
lods
adc
(bad)
mov
jns
push
call
inc
xor
fmul
into
xor
retf
mov
xor
add
inc
outs
icebp
fidiv
jge
sar
mov
sahf
js
pushf
addr16
je
test
xor
xor
xor
dec
mov
adc
test
mov
dec
movs
jae
dec
shl
jno
xor
fisubr
jno
push
mov
adc
jecxz
arpl
les
mov
scas
xchg
mov
cmp
test
add
retf
push
loopne
popf
mov
test
push
cdq
xchg
pop
pop
aam
cmp
push
mov
mov
or
enter
dec
add
or
cmp
push
sbb
or
fdiv
cmp
shr
jmp
lods
push
add
jo
fwait
cwde
pop
sbb
mov
test
xor
idiv
ss
arpl
xor
pop
pushf
inc
dec
lock
(bad)
xor
jmp
jg
lds
mov
ins
push
(bad)
stc
out
mov
sub
mov
ds
cdq
lahf
mov
ret
test
jne
in
jecxz
sti
popa
leave
aam
mov
push
fsubr
cwde
jnp
outs
movs
xor
rcl
popa
push
(bad)
xchg
test
jge
mov
cmp
push
push
outs
jmp
pop
sub
dec
mov
stc
xchg
jns
push
xchg
xchg
rcr
mov
mov
or
fstp
xchg
movs
jl
jmp
fist
test
pop
jecxz
mov
in
fs
imul
sub
and
push
add
addr16
popf
aad
jae
push
push
jle
scas
(bad)
(bad)
mov
popf
jecxz
leave
mov
sbb
push
loop
imul
dec
int3
retf
xor
and
xor
fcom
jae
mov
cmp
les
pop
movs
ja
push
dec
xchg
jmp
inc
fxch
xor
and
xchg
and
retf
ds
fs
hlt
test
fs
mov
cmps
inc
cwde
ja
push
adc
mov
out
jecxz
mov
test
or
adc
add
push
test
pop
stos
xor
movs
mov
xor
xor
adc
mov
push
int
and
sub
xor
inc
shl
xchg
and
jmp
hlt
lea
xor
push
mov
idiv
adc
mov
dec
push
jle
mov
shr
sub
sbb
ss
pop
cmps
xchg
adc
popf
dec
push
dec
mov
pop
adc
mov
daa
jle
push
add
inc
cs
dec
fld
imul
jns
ja
shl
adc
push
sub
daa
xchg
mov
ss
ins
push
sub
mov
mov
inc
dec
test
xor
mov
jp
adc
and
mov
pusha
xor
jp
shl
addr16
enter
dec
xchg
imul
shr
pop
adc
cmp
sub
jb
dec
inc
fidivr
jne
xor
test
mov
mov
in
adc
xchg
popa
push
adc
push
push
add
fisubr
push
xchg
xor
xor
enter
pop
test
push
cdq
mov
scas
jmp
mov
sbb
and
xor
test
aas
lods
cs
xor
test
fild
jecxz
fs
xor
mov
or
dec
xor
arpl
xchg
inc
dec
in
icebp
paddusw
inc
push
and
xor
test
push
pop
add
xor
and
xor
jp
gs
imul
aad
dec
jmp
jno
jecxz
dec
ja
js
jbe
and
in
cmp
idiv
pop
xchg
jmp
or
dec
adc
add
mov
dec
or
rol
fadd
adc
fnstcw
out
adc
movs
push
mov
cld
test
fadd
xchg
ds
enter
std
call
jecxz
mov
pushf
je
mov
xchg
popf
mov
es
or
sahf
and
outs
cmp
in
xchg
xchg
lahf
cmps
dec
(bad)
out
or
cmp
cmp
jl
bound
jbe
int
(bad)
sti
add
test
not
ret
in
xor
leave
jp
lods
cmp
outs
repz
cmp
inc
and
(bad)
adc
outs
fcmovne
push
gs
popf
loop
push
pop
fisttp
jae
xchg
xchg
sub
jp
(bad)
loopne
xor
stc
mov
nop
dec
xchg
mov
inc
out
repnz
dec
fimul
sub
hlt
sbb
enter
std
jp
and
(bad)
cmp
mov
out
es
add
pushf
sbb
shl
call
pop
and
je
jecxz
sbb
fstp
mov
(bad)
cmovno
mov
xchg
xrelease
mov
mov
aad
outs
push
jmp
xchg
mov
das
sbb
mov
clc
pushf
pop
mov
fcomp
xor
fwait
push
inc
cmp
ins
movs
pop
(bad)
mov
mov
pop
stos
retf
xchg
je
aad
leave
dec
mov
cmp
ja
hlt
jge
xchg
jns
pushf
sub
movs
aaa
jp
imul
stos
inc
sub
shr
lds
jb
cmc
xchg
dec
mov
mov
add
jno
xchg
scas
dec
mov
push
dec
mov
jg
sub
lea
cmp
jae
clc
inc
sub
scas
bound
xchg
or
ins
or
sti
xchg
lods
mov
xchg
xchg
mov
or
out
xchg
fsubr
in
jmp
outs
mov
inc
aam
sbb
dec
fwait
jecxz
out
cdq
dec
inc
sub
fnstcw
lea
cmp
adc
dec
xor
xchg
test
push
push
push
imul
cmps
prefetch
loop
inc
movs
cmp
pop
outs
mov
in
stc
das
cwde
inc
out
mov
or
dec
ins
dec
cmp
dec
ins
jns
cmp
mov
sub
cmp
push
push
mov
cmp
mov
fstp
cs
out
pushf
addr16
mov
out
ds
sub
aam
fsub
loope
nop
or
arpl
push
mov
cmp
into
xchg
inc
and
inc
inc
sbb
jb
cmp
fwait
ret
ja
mov
(bad)
cwde
xlat
stos
sbb
sub
retf
cwde
call
es
les
sahf
ins
je
test
inc
iret
je
call
movs
jno
pusha
mov
(bad)
test
push
fcomp
lahf
cmps
stos
cmps
push
inc
fxtract
pop
adc
call
mov
cmps
xchg
call
in
jp
push
scas
jnp
mov
jbe
jle
xor
inc
push
(bad)
jb
pop
hlt
adc
loop
mov
jge
add
and
mov
adc
into
fwait
imul
ficomp
scas
imul
out
scas
ds
jge
cmp
repnz
add
dec
shl
dec
adc
pop
sub
mov
sahf
stos
repnz
xchg
out
and
cmp
dec
push
dec
enter
or
adc
mov
xchg
and
in
and
or
ins
mov
sub
(bad)
loope
add
cwde
leave
adc
push
test
cmp
sub
bound
inc
jb
and
lahf
test
or
je
dec
fidivr
rol
popa
and
mov
mov
enter
dec
dec
jge
mov
mov
inc
fld
mov
and
sbb
nop
jle
pop
or
fstp
mov
fcom
inc
jmp
test
pop
mov
leave
push
xchg
rcl
inc
pop
add
ss
(bad)
and
mov
push
imul
or
jbe
aad
mov
xor
push
jno
dec
cld
stos
jp
shld
in
mov
movs
fiadd
ja
mov
mov
pop
ja
popf
(bad)
mov
push
mov
ds
xchg
mov
call
test
aad
retf
dec
jl
lods
pusha
inc
jb
mov
mov
xor
adc
test
inc
jmp
ror
cmps
jb
mov
cmp
push
jecxz
jp
adc
add
nop
aaa
sbb
cs
xchg
adc
dec
sbb
mov
adc
inc
cmp
sbb
aaa
cmp
cld
pusha
sbb
adc
rcr
repnz
pop
mov
leave
cmp
fild
dec
push
xchg
xchg
add
push
adc
mov
dec
add
daa
xchg
pop
in
test
adc
mov
cmp
or
out
jns
cmp
mov
in
adc
xlat
aas
or
dec
mul
push
jb
adc
dec
inc
(bad)
or
xchg
inc
mov
push
fiadd
sub
mov
aas
movs
jb
mov
adc
cmp
test
xchg
fincstp
rcl
sbb
es
adc
dec
dec
and
cld
mov
jmp
lods
add
sbb
inc
push
sub
dec
cmps
mov
and
add
inc
in
mov
loope
inc
adc
imul
xchg
push
outs
add
mov
and
stos
jmp
sub
jne
movs
mov
cmp
mov
push
shr
sub
add
mov
mov
repnz
inc
mov
add
popa
and
nop
jg
stos
dec
sahf
in
xor
add
ficomp
sub
xor
mov
nop
inc
call
push
jge
xchg
jmp
sbb
stc
les
or
xchg
mov
mov
dec
mov
jnp
test
lds
cs
sbb
dec
push
xchg
inc
pop
into
or
pop
out
or
aam
jge
aam
mov
or
sar
dec
mov
jno
sbb
add
add
jg
push
add
inc
mov
sbb
add
(bad)
push
add
xchg
inc
add
call
push
mov
jno
inc
popa
add
inc
push
mov
inc
add
mov
(bad)
in
ror
call
(bad)
fstp
jmp
movs
imul
sub
clc
jg
sub
mov
pop
mov
and
adc
shl
push
cmps
out
and
cmps
push
test
mov
mov
push
mov
inc
leave
lahf
fidiv
not
jno
sub
daa
cmp
jg
xchg
adc
rcr
fidivr
cmps
cld
push
pop
fcomp
(bad)
xor
push
scas
dec
mov
xchg
mov
cwde
jns
daa
int
shl
mov
or
jne
cmp
inc
xchg
and
push
ja
add
das
loope
push
shr
outs
dec
ret
xchg
movs
iret
fist
xchg
popf
nop
test
adc
push
scas
cmp
mov
sub
stos
in
enter
ja
sahf
adc
push
test
mov
stos
int3
dec
(bad)
pop
enter
out
hlt
mov
push
mov
imul
mov
js
aam
outs
mov
lods
push
sbb
dec
int
int3
out
xchg
push
xchg
jae
push
mov
sbb
xor
sbb
les
mov
mov
int
in
xor
sub
jp
sub
stos
cmp
ret
hlt
xchg
xchg
xchg
cmp
and
mov
test
inc
mov
add
push
inc
inc
test
fsubr
sbb
les
inc
push
aam
push
dec
mov
jns
adc
xor
stos
push
xor
in
ficomp
icebp
sbb
mov
pop
jae
adc
iret
mov
jg
jl
cmp
nop
movs
repnz
es
cmp
dec
inc
cmps
arpl
xchg
movs
and
into
out
aam
pop
jmp
(bad)
fcomi
mov
jbe
push
sbb
out
cdq
mov
add
cwde
rcl
stos
inc
inc
mov
fs
push
jae
xchg
imul
pop
mov
push
jl
push
es
sub
pop
sbb
dec
sub
mov
in
imul
rcr
inc
dec
mov
mov
dec
pushf
mov
push
or
xchg
xchg
jne
jne
loope
mov
or
push
jmp
jns
popa
test
icebp
mov
xchg
cmp
fcomp
or
xchg
push
mov
push
cwde
inc
fdiv
fistp
pop
sub
(bad)
scas
pop
pop
cmp
aaa
jle
scas
jl
xor
sahf
adc
int
jnp
popf
sub
daa
cs
push
js
stos
int
int3
popa
fld
inc
arpl
sub
sub
fwait
sbb
ds
xor
jle
scas
dec
mov
loop
loope
loope
sti
pop
mov
rcr
clc
rcl
clc
push
iret
adc
xchg
cmc
loop
test
jecxz
xchg
xchg
ss
pop
push
test
mov
in
loope
gs
sub
ror
loope
add
sahf
push
adc
scas
add
mov
mul
jle
sbb
push
icebp
bound
ss
sbb
cs
pop
mov
int3
stos
pop
(bad)
gs
pushf
adc
movs
cmp
gs
je
jb
dec
leave
aad
cmp
daa
xor
jo
cmps
dec
mov
lods
jb
add
popf
in
leave
jmp
push
dec
shl
mov
fcmovnu
mov
shl
dec
sub
inc
fisttp
push
jb
push
mov
sub
sub
xor
jmp
pop
aad
dec
xchg
dec
dec
inc
sti
loop
pop
in
sbb
fiadd
sub
jl
xor
mov
mov
outs
mov
es
shl
je
jle
fs
mov
dec
pop
jb
cmp
mov
xor
sbb
cmp
aaa
pop
adc
pop
in
fsubr
je
adc
lds
outs
or
xchg
push
adc
sub
loop
js
mov
push
dec
pop
cs
add
and
pusha
and
in
sub
push
sub
xor
cs
mov
add
pop
(bad)
cli
call
jno
or
lea
xchg
xor
or
jns
xchg
adc
mov
mov
mov
sti
mov
retf
ret
inc
fdiv
lahf
cwde
adc
pushf
popf
add
cmps
jne
lea
and
fs
mov
push
dec
mov
mov
out
adc
mov
in
dec
mov
popf
shr
and
dec
or
shr
(bad)
in
mov
pushf
or
mov
inc
fisub
ror
ret
bound
jp
and
adc
pop
jl
sar
xor
mov
outs
loopne
xchg
xchg
rcl
gs
(bad)
add
inc
fld
sub
ret
les
dec
dec
push
xor
mov
fnsave
cli
hlt
sub
js
lahf
loope
xchg
int
push
inc
(bad)
or
addr16
ds
shl
mov
gs
stos
dec
enter
mov
fidiv
pop
fisub
adc
retf
(bad)
xchg
and
fadd
cmps
push
out
add
adc
outs
popa
mov
nop
push
daa
sbb
test
and
rcr
shl
nop
mov
fsubr
cmps
pop
xor
and
xchg
in
retf
pop
outs
pop
xchg
cmp
fldl2t
(bad)
and
retf
inc
ds
push
adc
pop
dec
and
int3
adc
leave
and
pusha
and
add
jmp
add
sbb
mov
and
or
retf
add
(bad)
idiv
fsubr
inc
and
adc
push
jns
fild
cmp
sbb
xlat
jnp
inc
sub
xor
dec
pop
ss
mov
scas
mov
push
jne
loope
cmps
sub
outs
pop
dec
test
lock
jp
das
mov
mov
xchg
xor
xchg
js
dec
mov
xlat
mul
cmc
movntq
push
repnz
cmp
test
jno
mov
mov
mov
mov
xor
ss
push
stc
mov
push
push
cs
ss
(bad)
add
sub
or
xchg
adc
mov
pop
or
mov
pop
add
xchg
mov
adc
iret
loope
pop
push
das
bound
pop
leave
jmp
xchg
aam
popf
jns
or
sbb
mov
cmp
les
pushf
popa
outs
dec
int3
js
jmp
jp
push
popa
fcomip
or
xchg
jns
sub
xor
fwait
call
pop
ret
outs
enter
sbb
pop
xchg
mov
xchg
sub
rol
cmp
imul
inc
dec
fcomp
or
sbb
mov
push
xor
jge
retf
movs
add
push
mov
ret
pushf
dec
inc
mov
cmp
adc
je
bound
dec
fwait
adc
cmp
and
and
scas
xor
daa
sbb
cmp
sbb
fadd
mov
xor
ja
fiadd
xchg
mov
cld
cmps
xchg
sub
sbb
mov
or
fdiv
xor
mov
shr
aam
aad
xchg
dec
cmps
fdiv
push
mov
pop
jb
push
cmp
test
fst
xchg
and
enter
xor
inc
out
repnz
mov
xchg
rol
out
and
rcr
movs
cmp
mov
or
sbb
add
mov
add
(bad)
jmp
and
dec
sbb
inc
dec
retf
or
outs
dec
lock
sub
inc
mov
popf
sar
sub
adc
jns
sbb
cli
(bad)
push
out
imul
(bad)
sahf
shl
pop
inc
imul
popa
inc
and
pop
aam
and
mov
cdq
movs
out
push
push
pop
mov
xchg
pop
add
scas
int
pop
lahf
movs
dec
retf
jp
out
jge
pushf
dec
dec
adc
mov
mul
push
mov
(bad)
bnd
ja
lods
stos
aas
outs
int3
call
dec
(bad)
push
(bad)
std
lea
push
test
leave
repnz
or
shr
cmp
int3
pop
mov
push
aaa
stc
call
(bad)
stos
daa
ins
jmp
push
jge
mov
idiv
add
cmps
ins
fbstp
sbb
movs
or
jmp
mov
not
mov
sub
fild
movs
iret
ins
push
movs
push
fiadd
lahf
push
xor
mov
ins
movs
xchg
fadd
pop
inc
fmulp
mov
aam
mov
aaa
ins
dec
inc
les
(bad)
sub
shl
dec
xor
push
jb
mov
rol
or
sub
cli
sbb
aam
mov
sub
iret
pop
fadd
or
sbb
and
and
popf
inc
call
and
jb
ret
sbb
cwde
dec
inc
sub
test
mov
out
popf
dec
mov
xchg
or
sbb
jno
movs
ds
cmp
push
sub
or
jns
pop
inc
test
cmp
xor
sbb
push
mov
xchg
sub
test
test
dec
and
cdq
mov
mov
mov
push
in
cmp
mov
pop
scas
lea
mov
cmp
sahf
mov
push
aad
scas
push
sub
stos
pop
bound
mov
enter
ja
sbb
outs
or
dec
add
int
or
stos
jmp
adc
inc
(bad)
out
fstp
cli
inc
xrelease
into
nop
cli
adc
test
int
fstp
lods
cmp
idiv
sbb
outs
xchg
repnz
push
adc
ret
out
mov
dec
add
ja
jbe
dec
add
ja
adc
inc
test
pop
and
add
adc
cmc
xor
add
jnp
inc
push
pusha
lods
aam
sbb
jns
cmp
(bad)
xor
add
pusha
sbb
add
sub
fs
dec
inc
add
push
mov
xchg
jns
or
adc
jp
dec
dec
push
sahf
fs
add
inc
jecxz
loopne
mov
mov
push
jno
rol
push
add
call
scas
dec
xchg
out
sahf
xchg
ins
sbb
and
daa
cmp
enter
mov
ins
jb
mov
daa
daa
xchg
bswap
and
add
adc
dec
add
shl
inc
in
push
push
(bad)
mov
mov
bnd
not
sbb
jnp
adc
(bad)
ret
fs
inc
pusha
adc
inc
bound
pop
cmp
cld
shl
jno
scas
inc
(bad)
xchg
and
stos
jl
mov
jl
sbb
test
and
or
sub
xchg
sbb
jle
movs
sub
dec
add
out
and
sbb
into
and
imul
mov
or
xlat
sbb
adc
lar
pushf
mov
and
sub
imul
sahf
in
mov
sub
(bad)
add
popf
xchg
iret
aaa
test
xor
mov
mov
adc
xchg
sahf
fist
or
xchg
mov
(bad)
pushf
or
stos
jno
cwde
and
(bad)
dec
pushf
jecxz
jae
test
mov
jl
js
test
mov
adc
add
out
push
mov
and
push
dec
enter
imul
adc
mov
mov
fist
test
rol
xor
movs
int3
mov
sar
inc
jge
inc
stos
inc
pop
ror
retf
adc
popa
xchg
lds
lea
mov
popa
sar
add
push
mov
mov
lods
add
inc
fadd
add
into
add
sub
cmps
jmp
repz
cmc
les
movaps
add
adc
sbb
add
leave
stc
rol
ss
out
add
fwait
outs
mov
dec
mov
rcl
xchg
rcl
test
xor
pop
jmp
mov
movs
mov
(bad)
dec
mov
jnp
jp
sbb
jl
pop
xchg
and
inc
repnz
aas
push
imul
lds
jmp
pop
or
dec
dec
mov
repnz
gs
sbb
xor
mov
jl
xchg
rcl
sub
push
xchg
push
push
xchg
cwde
jno
adc
sub
and
addr16
outs
rcr
in
les
in
cmc
pop
cmp
mov
push
mov
xor
cmp
cmp
imul
push
sti
xor
aam
or
pop
jge
mov
test
cmp
test
pop
or
(bad)
or
mov
ins
dec
adc
pop
in
repz
lock
push
ja
push
sbb
adc
xor
lods
stos
ds
inc
popa
push
jne
or
mov
daa
xor
or
(bad)
mov
mov
dec
dec
popa
and
int3
icebp
mov
cmp
mul
into
dec
mov
vxorpd
stos
pop
(bad)
call
dec
cdq
jae
pop
dec
dec
dec
pushaw
out
cdq
sbb
push
fdiv
sub
(bad)
xchg
cld
loope
addps
cmp
shr
mov
mov
retf
ror
or
pushf
cli
out
push
sub
movs
mov
test
xchg
les
arpl
movs
sub
fwait
xchg
ret
ret
(bad)
and
push
fistp
adc
sbb
arpl
popa
mov
scas
or
mov
stos
pop
push
ja
fs
jns
xchg
push
loop
inc
inc
mov
dec
outs
dec
jmp
fs
xor
mov
imul
nop
jecxz
(bad)
mov
jge
pop
jae
ds
cmc
and
push
sbb
add
mov
jbe
pop
push
or
(bad)
cli
push
leave
test
movs
cmp
push
mov
mov
sub
and
xchg
mov
out
sbb
dec
and
bound
cmp
cmp
rcl
lods
fcomp
xor
xlat
scas
xlat
fisttp
mov
add
nop
ds
inc
dec
(bad)
or
add
bound
sub
pop
mov
retf
mov
fwait
test
mov
or
dec
push
jle
gs
jle
call
pop
xchg
jns
and
inc
sub
cmp
or
popa
inc
push
dec
retf
xchg
dec
dec
lods
and
out
mov
mov
add
inc
add
retf
call
ins
or
rcl
imul
xchg
cmps
and
dec
and
jne
outs
(bad)
push
daa
stos
movs
cdq
in
pop
shl
mov
aas
(bad)
test
loope
paddw
int
(bad)
mov
inc
add
adc
clc
jns
jno
and
lock
cld
mov
jl
dec
mov
push
ficomp
or
push
sbb
jmp
jecxz
pop
sbb
mov
fucomip
jns
pop
and
xchg
xor
in
jmp
clc
jnp
sahf
jae
test
ds
mul
(bad)
aad
lods
fld
pop
lods
push
call
xor
jl
jo
(bad)
cwde
ins
fst
cs
mov
xchg
mov
push
imul
aad
xor
mov
aad
mov
mov
dec
out
popf
ror
sar
inc
mov
fisttp
dec
sbb
test
jg
push
or
xor
mov
jle
in
pop
hlt
pop
clc
adc
mov
stc
leave
cmp
and
push
imul
iret
jmp
mov
mov
rcl
mov
outs
nop
icebp
(bad)
pop
cmp
outs
pop
mov
mov
cwde
sub
jp
fwait
jnp
push
or
add
mov
test
push
iret
fisub
shl
ss
adc
das
lea
or
nop
enter
adc
loop
mov
sub
xor
fdivr
fild
fist
mov
mov
pop
add
(bad)
dec
icebp
mov
test
push
in
add
adc
lods
mov
hlt
test
in
imul
shr
out
sbb
arpl
xchg
and
stc
adc
adc
aam
loope
add
push
push
int
in
push
(bad)
mov
ins
retf
and
pop
and
sub
cmp
cli
push
aad
mov
(bad)
lds
bound
in
sub
fmul
push
movs
push
mov
fs
rcr
adc
ds
in
shr
xchg
call
jae
in
movs
push
jbe
and
(bad)
dec
jb
daa
dec
or
push
sub
jae
and
xchg
repnz
add
mov
movs
out
adc
pop
and
pushf
add
pop
cmp
jnp
sub
js
dec
jmp
daa
adc
cmc
mov
aaa
ret
retf
mov
fld
fbstp
jp
mov
(bad)
out
push
mov
mov
(bad)
lds
add
jno
js
or
popa
aam
les
add
test
rol
rcl
adc
popf
rcl
das
sbb
rcl
mov
dec
dec
cmp
jp
inc
movs
jne
nop
mov
movs
xchg
mul
push
dec
push
out
pop
jns
push
or
sbb
mov
cmp
aas
cmp
adc
pop
add
add
in
inc
pop
add
add
out
aaa
inc
sub
xlat
xor
dec
les
mov
outs
test
fcmovb
adc
dec
adc
jecxz
sbb
jp
ret
inc
movs
adc
sbb
push
jns
sbb
mov
or
shr
cli
add
int
fmul
sub
xlat
push
js
jns
inc
imul
jno
cli
stos
or
ror
mov
test
jo
xlat
push
cli
stc
les
gs
push
dec
cs
or
jp
inc
aas
mov
mov
repz
aas
push
sbb
xor
mov
jae
cmp
and
dec
in
xor
or
or
(bad)
or
mov
jg
js
out
sub
fild
movs
daa
daa
jge
xchg
or
sub
lods
sahf
add
das
sub
or
ins
test
push
rol
dec
shr
or
mov
pop
add
fisub
loop
mov
cdq
fistp
lahf
(bad)
js
fisttp
inc
sbb
lds
jbe
fwait
lods
pshufw
cli
js
fcmovbe
js
sbb
sub
out
xchg
or
psadbw
jo
outs
daa
(bad)
enter
mov
inc
cmps
in
ins
cmp
movs
jmp
cdq
inc
mov
and
neg
and
pushf
xchg
mov
(bad)
lds
jb
adc
sbb
imul
test
mov
aad
cld
mov
mov
nop
sub
cmps
jae
xchg
push
fmul
lock
push
fidivr
pcmpgtb
cmp
das
dec
ja
xchg
mov
dec
pop
xchg
mov
and
fimul
xor
inc
shl
inc
movs
dec
jecxz
pushf
popf
jae
adc
xchg
cmp
inc
pusha
or
xchg
popf
fdivr
and
ins
xlat
(bad)
sub
fsincos
fisttp
cmc
out
mov
retf
pop
inc
mov
mov
cmp
repz
addr16
stc
jg
gs
mov
fnstcw
imul
sub
dec
out
ret
neg
loope
cmps
push
dec
(bad)
lods
pop
adc
lods
sbb
loope
(bad)
jle
nop
jmp
loopne
mov
les
mov
arpl
adc
mov
out
adc
retf
pusha
cld
inc
dec
xor
inc
or
xchg
sbb
jb
push
adc
sbb
sbb
shr
jno
movs
shl
scas
ret
or
inc
add
in
or
fdiv
adc
cmp
push
test
scas
add
shl
mov
test
jmp
and
test
ins
jo
pusha
sar
pop
std
mov
imul
aam
loop
cli
arpl
sub
neg
adc
stc
xchg
sbb
mov
jb
xchg
fld
scas
jmp
jp
fwait
inc
loop
push
jl
mov
push
cmp
jnp
mov
popf
xor
cmp
movs
lahf
jno
jne
dec
xchg
js
call
shl
sbb
xor
stos
pop
pop
lods
push
movs
jmp
mov
aam
xlat
xchg
cmp
cmp
or
dec
and
xchg
mov
and
add
out
and
sbb
in
pop
ds
cmp
in
adc
daa
and
inc
pop
or
cmp
and
rol
mov
lea
enter
cmps
mov
sbb
jnp
add
pop
adc
xchg
or
mov
push
movs
stc
and
jmp
ror
dec
daa
cmp
xchg
xor
aad
dec
jnp
pusha
jb
in
adc
ins
mov
ffree
push
mov
dec
mov
fisub
arpl
xchg
mov
jp
pop
sub
pusha
stc
inc
push
add
inc
jp
mov
mov
rcr
mov
cmc
xchg
mov
dec
jne
ins
movs
xor
or
test
jmp
inc
jecxz
pusha
cmp
pop
inc
push
scas
ins
inc
dec
sub
fiadd
cmp
cli
ins
stc
je
sub
mov
sahf
push
or
push
sub
and
jmp
outs
shl
mov
(bad)
fcom
pusha
out
cwde
xor
pop
ret
xchg
pop
jae
sub
(bad)
or
retf
cmp
push
fisubr
repz
out
shl
mov
push
dec
sub
add
cli
sbb
sub
int3
sbb
mov
dec
push
aaa
xor
pop
dec
test
add
push
ins
mov
mov
mov
cmp
fwait
mov
hlt
repnz
dec
loope
fadd
mov
inc
mov
jle
(bad)
mov
ss
daa
(bad)
jle
jae
mov
pusha
or
jp
dec
ins
inc
pop
enter
add
cli
jnp
cmps
popa
pop
mov
fs
pushf
pop
cmp
pop
je
adc
and
daa
bound
idiv
sbb
scas
ins
add
loope
ins
outs
mov
xor
xchg
inc
(bad)
gs
div
ins
ror
push
cmps
mov
movs
pop
es
mov
cwde
dec
cmp
sub
mov
mov
pop
sbb
nop
dec
lds
mov
(bad)
xchg
retf
popa
aad
int3
sbb
sub
dec
cmps
jecxz
stos
dec
cdq
stos
push
jno
jb
dec
in
and
movs
sub
mov
mov
movs
dec
cld
mov
mov
sbb
jbe
test
mov
pop
cmps
scas
mov
jb
in
retf
mov
out
mov
cwde
push
push
out
adc
sahf
in
xchg
idiv
mov
in
adc
pop
mov
mov
outs
jno
ret
cs
retf
and
aas
test
fst
cmps
push
popf
fadd
and
les
rcl
xchg
jns
push
mov
dec
cmp
loope
fsub
and
jns
jne
ds
mov
imul
ja
sbb
jns
cmc
sbb
sbb
inc
adc
in
inc
dec
sbb
cmp
loop
sub
out
push
ds
imul
push
frstor
push
mov
ds
pop
push
mov
and
cwde
or
loop
int3
mov
sub
add
dec
adc
or
add
sbb
add
xchg
sbb
fcomp
add
add
xlat
mov
cs
sbb
add
jno
jnp
cli
ror
sbb
cmps
and
dec
pop
add
sub
add
dec
cmp
cmps
jle
jae
add
or
push
ror
sbb
sbb
dec
dec
inc
add
add
jno
lods
add
shl
(bad)
mov
aam
ret
movs
push
test
add
inc
(bad)
pop
jmp
gs
inc
sbb
xchg
inc
xchg
xchg
pop
bound
jmp
imul
mov
addr16
xor
sub
push
test
sbb
jns
(bad)
push
mov
movs
sub
push
cmp
cwde
push
mov
or
push
in
mov
data16
gs
aad
aad
popf
push
idiv
inc
dec
xchg
out
cmps
fisub
sahf
test
and
pop
push
into
shr
cld
leave
dec
jmp
or
clc
xchg
dec
stos
test
or
cmp
cmp
xchg
out
push
(bad)
push
dec
mov
push
jmp
sbb
mov
jge
out
fisttp
js
clc
leave
retf
dec
rcl
cld
mov
xchg
cmp
(bad)
push
cmps
rcl
div
sbb
and
mov
xchg
scas
push
push
int
dec
retf
aaa
xor
xor
mov
fstp
shl
jno
lock
imul
fucomi
in
xchg
pop
xchg
xor
mov
lods
shr
inc
ss
jbe
(bad)
repz
je
pop
mov
mov
jo
jl
popa
inc
pushf
sbb
sbb
jecxz
pop
movs
shl
add
xchg
add
mov
mov
push
lahf
xchg
mov
cdq
cmp
lea
les
cmp
jae
adc
cmps
xor
cdq
jge
cmp
xchg
dec
or
mov
add
add
(bad)
pop
mov
addr16
mov
push
fucom
(bad)
addr16
mov
mov
je
int3
into
(bad)
stos
sti
popa
dec
mov
addr16
cmp
pop
clc
sub
mov
push
pushf
fs
inc
pop
mov
jne
in
mov
sub
or
sub
sub
pushf
movs
dec
movs
sub
mov
push
jns
sti
push
pushf
arpl
xchg
jl
pop
xor
inc
lds
movs
std
leave
data16
leave
xor
and
or
inc
sbb
retf
adc
movs
jg
stos
ret
add
pop
je
or
mov
mov
outs
iret
xlat
mov
xchg
test
jp
imul
xchg
mov
xchg
sbb
cmp
dec
leave
mov
push
xchg
push
dec
mov
mov
popf
adc
repnz
call
data16
dec
sub
pop
cmp
rcl
sti
and
es
inc
je
outs
pushf
add
test
or
and
push
sbb
pusha
xchg
cdq
cli
je
cli
fcmovnb
popf
and
(bad)
jp
sti
mov
mov
xchg
push
push
out
mov
mov
cmps
cli
out
addr16
rol
push
sub
adc
xchg
or
jle
add
sub
or
fisubr
fld
out
rcl
icebp
repz
ror
mov
adc
popf
dec
retf
push
sub
push
nop
mov
sub
sbb
les
add
push
fdivr
jb
stos
aas
or
jl
addr16
jg
pop
addr16
jle
sub
rcr
dec
daa
stc
cdq
xchg
popf
dec
jg
and
in
in
cmc
push
test
fdiv
(bad)
leave
scas
lahf
idiv
mov
mov
scas
int3
jb
dec
jmp
std
mov
push
mov
jge
sbb
mov
cld
iret
inc
xchg
bound
outs
test
push
pushf
outs
lock
inc
cmp
fld
cmp
cwde
stos
push
mov
cwde
cmp
in
jle
mov
mov
stos
sub
dec
sub
xor
loope
sbb
adc
push
push
(bad)
in
bound
int
xchg
fistp
shl
pop
push
pop
fimul
mov
mov
das
test
jns
cld
xchg
sbb
pop
jge
aad
mov
ins
fs
lahf
or
adc
adc
push
(bad)
push
dec
movs
pop
adc
in
pop
int
push
div
ins
addr16
and
and
jmp
inc
inc
(bad)
les
dec
mov
dec
cmp
cmp
ins
sub
in
jmp
int
stos
(bad)
cmp
push
mov
cmps
idiv
inc
jno
push
in
test
mov
pop
or
sbb
lahf
push
mov
test
cld
popf
sub
ds
test
dec
out
jae
bound
popf
stos
adc
shl
es
gs
xor
sahf
(bad)
in
fisubr
rcl
jae
jnp
(bad)
out
stos
popa
and
les
test
inc
imul
xor
js
mov
push
sub
push
(bad)
mov
cmp
cmps
mov
sub
shl
retf
and
nop
xchg
sbb
cmp
ja
xchg
lds
mov
mov
xor
push
dec
xor
or
xlat
sar
cwde
jg
jp
ins
repnz
xchg
xlat
sahf
bound
push
mov
mov
aad
xchg
jle
or
ss
push
fsubr
pop
pop
sbb
(bad)
or
mov
or
stos
xor
movs
push
movs
lods
int3
jecxz
adc
in
test
(bad)
int3
push
push
jo
rcr
scas
jae
push
and
daa
pop
dec
je
jbe
push
xor
repnz
ja
mov
sti
jecxz
pop
xchg
and
push
mov
adc
push
sti
mov
dec
test
mov
xor
pushf
lahf
test
or
out
aas
cmp
bound
xor
jmp
bswap
outs
or
inc
adc
inc
popf
shr
push
push
repnz
test
sbb
mov
mov
dec
ss
jecxz
mov
mov
xchg
test
jmp
add
jle
cs
mov
in
jbe
fisttp
retf
mov
dec
xchg
daa
xchg
test
pushf
je
inc
ror
inc
cmps
bound
loope
push
dec
cmps
sub
xchg
jl
out
pop
mov
fdiv
xchg
jmp
or
mov
dec
dec
ss
adc
jp
cdq
gs
cmp
lea
clc
inc
mov
pop
adc
sbb
rcpps
ror
stos
cwde
addr16
adc
pop
out
inc
mov
stos
mov
mov
or
inc
mov
out
sahf
sti
ret
inc
adc
jb
hlt
sbb
adc
retf
jecxz
dec
ss
rol
out
rcl
sub
or
add
hlt
mov
mov
sub
xchg
push
dec
cmp
inc
and
dec
dec
mov
jo
out
and
pop
lods
mov
dec
sub
mov
retf
mov
jmp
out
cmp
cmp
fwait
and
arpl
arpl
fs
loop
stos
nop
jecxz
xor
jbe
pcmpgtb
popf
enter
in
mov
pop
add
push
icebp
and
xchg
call
xchg
xor
add
xor
sbb
mov
push
dec
cmp
aaa
add
xlat
mov
xor
mov
outs
mov
addr16
xchg
inc
cmps
mov
add
mov
sbb
ins
imul
pusha
jo
das
sub
jmp
imul
popf
inc
iret
push
push
movs
repnz
das
jmp
ja
jmp
in
jnp
sub
push
xchg
jp
les
dec
mov
mov
mov
mov
pushf
outs
ficomp
add
movs
(bad)
movs
xor
xor
fild
push
arpl
mov
outs
retf
xlat
fadd
sub
mov
sub
sub
ins
add
div
adc
adc
pusha
pusha
es
ja
add
arpl
and
pop
les
rcl
retf
xlat
xlat
and
in
pop
outs
dec
test
mov
or
add
xchg
mov
jmp
mov
cmp
fnstsw
jle
das
xor
or
sub
xor
ja
adc
fsub
pop
imul
pop
cld
aas
daa
stos
mov
sbb
scas
pop
sbb
dec
(bad)
xchg
dec
enter
mov
out
or
or
mov
add
cs
add
jmp
fwait
dec
mov
cmps
mov
addr16
call
bound
sub
hlt
jge
outs
cmp
add
or
mov
jno
jmp
imul
or
inc
or
sub
cdq
push
add
pop
lahf
js
mov
and
sar
sbb
xor
dec
in
adc
rol
outs
cwde
sahf
cmp
push
inc
dec
pop
out
xor
cld
bound
inc
or
add
inc
lea
xchg
mov
lea
pop
call
or
les
xor
xor
jl
scas
jge
shl
adc
out
mov
jo
or
popa
movs
and
pop
jl
and
or
sbb
add
inc
and
xchg
out
add
loopne
or
loope
in
add
inc
adc
das
and
in
into
or
leave
push
sub
(bad)
mov
ja
xor
adc
add
push
and
mov
lods
and
and
adc
ficomp
push
jo
fst
imul
cmps
adc
inc
inc
leave
leave
xchg
mov
rcl
adc
xor
dec
rol
pop
fwait
or
int
mov
inc
pop
ret
sbb
pop
scas
and
movs
cdq
(bad)
rcl
ds
mov
mov
cmp
ja
ret
xor
mov
push
repnz
movs
xchg
fcmove
mov
mov
push
dec
add
dec
push
mov
sub
pop
inc
es
push
(bad)
lea
inc
inc
in
dec
stos
jp
outs
push
stos
retf
or
cmp
imul
ins
mov
xor
ins
retf
jp
mov
or
mov
pop
pop
dec
dec
scas
xor
sbb
add
fist
icebp
popf
retf
aam
mov
lods
(bad)
int3
and
and
xor
mov
xchg
cmp
add
test
call
imul
pop
mov
rcl
test
add
(bad)
imul
mov
int
lahf
dec
dec
add
or
dec
add
inc
aaa
mov
pop
sub
daa
ins
mov
push
push
and
inc
add
cmp
dec
xchg
inc
mov
jl
mov
pop
pop
xchg
inc
or
pop
add
add
jg
push
in
sbb
adc
jbe
nop
mov
fnsave
and
xchg
stos
push
and
jae
retf
dec
loopne
out
adc
pop
dec
vmread
gs
xchg
into
xor
mov
je
inc
cmp
sbb
(bad)
pop
out
pop
mov
cmc
test
pop
mov
test
push
mov
adc
jae
(bad)
jae
vsqrtss
and
cmps
mov
retf
fidiv
push
movs
(bad)
aam
pop
jns
retf
mov
sbb
pop
mov
dec
xchg
fisubr
mov
push
aad
cmp
scas
xchg
jb
ins
jno
sub
data16
sub
xor
add
hlt
je
nop
stos
add
daa
dec
fst
std
xor
sub
inc
fs
cmps
cmp
ss
popa
and
retf
or
or
fs
cli
(bad)
push
call
and
sbb
retf
les
inc
jno
gs
stos
iret
and
push
int
dec
out
sahf
shl
and
imul
out
xchg
pop
push
cli
xchg
stc
xor
jbe
xchg
test
inc
push
inc
out
or
ror
sbb
das
cmps
mov
fld
push
mov
lods
ins
cmps
push
xor
push
xchg
cmp
dec
in
cmps
cs
sbb
in
sub
in
or
fsub
sbb
sbb
cmp
mov
add
add
daa
mov
mov
or
inc
xor
add
mov
xchg
rol
fdiv
sbb
adc
xchg
ret
and
and
xchg
fiadd
inc
retf
add
dec
cmp
or
add
dec
ja
dec
in
xor
dec
add
ins
jp
jo
popf
(bad)
or
push
inc
sbb
in
add
int3
scas
adc
and
outs
lea
fld
lock
fisubr
sub
outs
add
xchg
mov
sub
xchg
xor
ss
mov
repz
fwait
add
jne
xchg
cmp
xchg
adc
shl
stos
push
js
mov
sahf
jb
ins
fidiv
push
push
mov
push
jbe
or
push
lods
lods
pop
dec
aam
cs
aam
and
inc
xchg
add
cdq
cmps
pop
xchg
loop
and
jne
jl
outs
jo
inc
aad
and
lods
jle
leave
in
mov
push
dec
add
movs
je
push
daa
add
iret
dec
ins
sbb
shl
and
push
and
push
gs
dec
dec
mov
test
xchg
xchg
dec
and
scas
int
scas
(bad)
cmp
imul
mov
gs
ss
neg
cdq
inc
sub
xor
xchg
push
mov
adc
loope
mov
or
(bad)
sub
jo
fimul
rol
mov
out
mov
lahf
clc
adc
les
dec
aaa
cmp
push
sub
cmp
jb
push
sub
sub
and
xor
mov
(bad)
cdq
out
add
xchg
mov
push
ins
adc
es
arpl
ret
jle
movsx
ret
loope
pop
stc
in
or
sbb
cmps
mov
add
movs
and
bound
mov
out
fnsave
adc
mov
cmp
es
push
push
xlat
xchg
xor
cmps
adc
mov
mov
mov
in
test
push
jnp
ja
scas
(bad)
retf
out
shl
into
jecxz
adc
push
fdiv
mov
jo
xor
out
sbb
push
retf
mov
mov
idiv
mov
mov
push
add
retf
jp
push
and
lahf
stos
dec
cmp
xchg
gs
loop
jge
xchg
cmc
mov
daa
push
dec
jmp
inc
jl
jmp
popf
icebp
jne
movs
jae
imul
fcmovnb
in
pop
inc
scas
fldenv
ins
mov
idiv
fwait
inc
and
inc
in
xchg
push
dec
pop
mov
scas
fdivr
push
movs
movs
sub
dec
retf
dec
retf
mov
movs
gs
inc
sbb
mov
scas
iret
inc
hlt
cmps
dec
pop
sbb
(bad)
inc
add
dec
push
sub
mov
pop
ins
test
int
cmps
mov
inc
or
retf
and
loopne
xchg
and
pop
jmp
icebp
pop
arpl
pop
mov
ret
cld
pop
xchg
movs
sub
cs
clc
sahf
dec
dec
lock
dec
xchg
movs
pushf
dec
jmp
hlt
mov
cmp
lods
push
data16
repnz
aam
push
sbb
cmps
pop
clc
mov
stos
jb
pop
inc
test
pop
imul
loop
mov
call
xor
jbe
jmp
cmp
sbb
imul
outs
mov
fstp
xchg
mov
xchg
nop
push
clc
lods
and
cmp
mov
scas
(bad)
in
test
jecxz
test
dec
sahf
and
in
mov
jbe
das
outs
out
sti
push
(bad)
cmp
sbb
retf
(bad)
xchg
mov
xchg
int3
dec
repz
fstp
push
lods
xor
repnz
xor
in
repz
push
push
bound
jmp
out
add
sub
cmps
xor
xor
(bad)
leave
clc
movs
int
sbb
push
xlat
int3
in
gs
pusha
in
sub
xchg
in
test
inc
adc
fwait
call
cdq
or
test
bound
gs
fiadd
inc
hlt
cmp
hlt
fst
xor
or
cmp
lds
sbb
cdq
pop
mov
sbb
adc
outs
or
leave
pop
imul
dec
scas
jne
aaa
shr
imul
sub
mov
mov
aam
cmp
arpl
lods
push
xchg
sub
mov
push
jnp
sbb
(bad)
push
jne
ds
fdivr
mov
test
xchg
add
imul
stos
test
or
pop
mov
or
mov
add
cld
bound
(bad)
xor
sub
rcr
and
pop
adc
push
std
push
mov
push
dec
popa
mov
adc
push
mov
inc
cmp
dec
cdq
add
cmp
loop
inc
movs
push
mov
rcl
inc
xor
movs
mov
pusha
add
icebp
xor
fstp
add
mov
and
leave
mov
(bad)
gs
inc
pop
popa
lods
xchg
dec
push
mov
push
mov
jmp
sub
sub
mov
dec
sub
dec
shl
dec
in
add
cs
aaa
pop
mov
rcr
jae
dec
das
scas
scas
adc
mov
xchg
sar
movs
pusha
sbb
push
cmp
aas
mov
adc
jmp
add
and
scas
outs
jge
sbb
loop
and
jae
movs
xchg
ss
xor
pusha
inc
inc
mov
mov
fidiv
mov
lea
into
xor
adc
loop
cmp
sub
jbe
mov
mov
int3
data16
inc
fmul
add
sbb
mov
nop
sbb
or
fsubr
jmp
and
add
xchg
and
jl
dec
xor
or
add
jmp
xchg
adc
push
adc
xchg
fadd
jno
leave
push
cmp
xchg
xchg
jbe
mov
adc
jl
adc
(bad)
mov
xor
mov
fisubr
fbstp
fdivr
jo
aam
std
shl
aad
jp
xor
push
in
aam
outs
sbb
outs
fcomp
mov
cdq
xchg
test
sti
fs
add
enter
aam
cmc
cdq
mov
je
jne
mov
sbb
adc
idiv
imul
aaa
jae
jo
mov
push
jb
ds
sub
nop
inc
mov
inc
aad
test
jo
(bad)
stc
mov
inc
inc
xor
shr
in
mov
mov
fs
push
adc
jl
push
arpl
jne
jno
sub
cmp
inc
ja
dec
and
sbb
sbb
mov
ds
push
cmp
sbb
jno
add
cmc
xor
mov
pop
sbb
out
adc
inc
mov
out
dec
lea
push
sub
ins
aam
imul
cmp
xchg
xchg
ret
cmps
call
push
jmp
jb
test
call
push
test
add
jmp
and
mov
jns
add
(bad)
ins
loope
adc
sbb
stc
xchg
ja
adc
cmp
lods
add
ja
mov
pop
add
add
in
xchg
fild
pop
gs
mov
jmp
adc
fcmovb
scas
call
jne
(bad)
mov
xchg
push
fst
mov
sub
or
sub
xor
lock
dec
rcr
loop
sbb
push
arpl
div
(bad)
iret
push
sti
inc
in
rol
imul
push
fnsetpm(287
lea
jmp
test
ss
xor
inc
cmp
jmp
retf
inc
mov
cmp
shl
inc
cmc
dec
in
scas
jno
cmps
daa
xchg
sbb
enter
add
mov
jl
cmp
out
inc
cli
adc
push
retf
pop
lds
sub
enter
sub
mov
mov
in
pusha
jae
mov
shl
adc
cmc
daa
jmp
mov
loop
mov
fld
jmp
adc
in
cmp
test
mov
(bad)
sub
(bad)
leave
cmp
jp
sub
mov
popa
cs
movs
pusha
ins
cli
or
(bad)
and
inc
sbb
xchg
xchg
(bad)
and
xchg
dec
sbb
add
(bad)
lods
dec
enter
out
or
jge
mov
pop
outs
push
cmps
stos
mov
iret
clc
inc
rcr
mov
imul
add
mul
enter
xchg
xor
dec
ret
jae
ins
push
scas
scas
bsr
pop
adc
mov
aaa
inc
mov
mov
add
in
sub
or
fldenv
iret
cli
cmp
xchg
sub
adc
cmps
imul
mov
fidiv
jae
sbb
movs
test
(bad)
xor
mov
xor
shl
into
xor
mov
das
mov
movs
dec
lods
shl
jmp
dec
mov
pop
leave
aaa
shl
das
and
push
push
xchg
push
mov
pop
sub
fild
mov
dec
outs
aam
add
jge
int3
add
pusha
push
pop
sbb
adc
push
mov
adc
mov
inc
add
fsubr
inc
movs
out
sahf
nop
adc
(bad)
dec
pusha
push
mov
mov
inc
iret
add
mov
repnz
add
repz
add
and
add
imul
fcomp
sub
or
jmp
sbb
call
sbb
xchg
repz
jnp
sub
pop
ret
mov
sub
jmp
in
dec
ins
nop
(bad)
aad
xchg
pop
xchg
cmp
push
xchg
pop
repnz
jbe
js
add
push
cmp
ja
xor
call
jecxz
into
xchg
mov
repz
add
xchg
pop
push
repnz
cmc
jg
cwde
sti
and
cmps
movs
sub
dec
inc
xlat
clc
hlt
inc
cli
xchg
push
jne
cmps
in
imul
int3
lods
sub
and
and
push
mov
cmp
ins
sub
adc
fld
stc
ins
nop
punpckhbw
push
mov
mov
jne
aaa
xchg
mov
jge
ret
test
dec
push
in
es
mov
cmp
popf
push
push
dec
fwait
outs
inc
cmp
cmp
adc
dec
xchg
inc
(bad)
sub
mov
xor
(bad)
jns
dec
test
pop
addr16
ret
inc
ds
sbb
imul
out
add
jo
inc
add
inc
cmc
int3
xor
jnp
xor
dec
xchg
int3
jo
sbb
sbb
push
ror
jb
and
loope
loopne
xchg
ror
add
add
dec
jbe
sbb
aaa
int
push
push
(bad)
lds
mov
push
mov
cmps
adc
and
lods
push
sar
xchg
jno
jmp
xchg
retf
adc
or
adc
jp
ficom
cmp
pusha
shr
arpl
xchg
push
repnz
adc
repnz
push
mov
inc
adc
daa
xor
jbe
call
movs
(bad)
push
xor
ret
out
sub
test
loope
jmp
push
cmp
ja
push
xor
xor
fdiv
out
adc
sub
jp
cmp
ror
ins
stc
or
xor
ror
push
add
xor
sbb
sub
pushf
jbe
mov
fsub
jge
dec
aaa
inc
mov
sbb
dec
mov
jo
movs
mov
xor
xor
xchg
xchg
mov
mov
pop
or
div
mov
sahf
lods
mov
(bad)
adc
adc
or
sub
sub
xor
pop
or
jl
lods
aaa
mov
sub
pop
shr
sub
pop
div
stos
jne
sar
jo
inc
jno
dec
push
pusha
(bad)
xlat
jns
pop
leave
xchg
sub
stc
mov
cwde
mov
rcr
pop
leave
add
xor
cmp
int3
and
jns
loop
(bad)
pop
mov
popf
sti
pusha
inc
pop
adc
fadd
int3
mov
sub
sbb
xor
pop
sbb
cwde
mov
adc
or
shl
sbb
mov
mov
sbb
add
push
sub
and
pop
mov
cmp
data16
lahf
cli
loopne
mov
jmp
imul
xchg
pushf
or
inc
mov
ret
clc
in
add
pop
pop
mov
pusha
adc
xchg
inc
fbld
lea
std
push
inc
sub
adc
or
daa
repnz
add
xchg
jle
sbb
aad
xor
mov
xlat
pop
mov
int
jae
jno
shl
ret
or
push
out
imul
dec
stos
clc
xchg
js
imul
cmp
cmp
sub
and
jno
mov
inc
dec
add
sub
sbb
mov
push
mov
into
sbb
mov
bound
jno
retf
push
sub
mov
fstp
sub
mov
lods
cs
test
or
push
in
jp
xor
xchg
mov
sub
push
push
sub
mov
jb
add
add
in
adc
(bad)
push
push
dec
fdivr
or
cmps
test
scas
fidivr
je
xchg
(bad)
xor
dec
sub
cs
test
cli
sub
enter
hlt
aam
stos
ret
loop
inc
xor
and
push
jns
jb
not
mov
jmp
loopne
add
xchg
jmp
and
xchg
out
inc
in
push
xchg
fbstp
daa
cmp
pop
adc
test
inc
das
xchg
ret
push
xchg
cdq
xchg
jae
xchg
jge
(bad)
jle
ja
call
pop
xor
cmc
pop
(bad)
adc
xchg
(bad)
cmps
dec
push
mov
mov
cli
sbb
push
fidivr
adc
ret
call
dec
jbe
cmp
mov
dec
in
xlat
sub
sub
neg
(bad)
in
mov
sub
fwait
cmps
dec
or
mov
lods
(bad)
mov
mov
movs
adc
daa
lods
(bad)
rcr
xchg
pop
dec
xchg
mov
arpl
jns
xor
sub
cmp
mov
fs
mov
or
xchg
jns
dec
xor
sbb
adc
mov
outs
dec
xchg
sar
stos
inc
jge
mov
mov
icebp
mov
mov
push
push
les
movs
cmps
lock
mov
stos
cmp
daa
not
dec
cmps
jo
addr16
jl
(bad)
test
mov
sub
push
jnp
outs
cli
dec
inc
mov
popf
jle
pop
ds
call
in
sbb
fwait
pop
inc
outs
sahf
xor
hlt
call
mov
cmps
sbb
and
ins
(bad)
push
outs
mov
jmp
mov
adc
mov
xchg
aam
pop
in
ja
mov
in
dec
dec
fcom
sbb
lock
cmc
aam
xor
repz
mov
aaa
dec
nop
mov
cmp
daa
or
mov
ret
call
sub
retf
imul
mov
mov
or
pop
mov
xor
mov
cmp
xchg
out
enter
imul
xchg
shr
push
xor
daa
retf
pushf
addr16
stc
push
push
mov
sahf
dec
ret
(bad)
mov
fldenv
and
mov
jnp
outs
xor
shr
mov
pop
out
mul
popf
xlat
dec
sahf
mov
adc
inc
jne
dec
test
xchg
jns
jg
rcl
xchg
nop
fdivr
ja
rcl
xor
push
jle
cli
push
mov
jmp
jb
rcl
imul
mov
add
jae
dec
inc
loope
test
sahf
rcl
cmps
fsqrt
xchg
push
and
test
mov
jno
jp
inc
cmps
out
and
leave
push
sub
add
sbb
inc
push
and
mov
outs
icebp
out
push
sub
sub
loop
dec
sub
and
(bad)
pop
enter
movs
lahf
mov
xor
cmc
adc
retf
outs
out
jmp
mov
fsub
sub
adc
jno
les
gs
fcomp
inc
xor
xchg
dec
fild
dec
dec
mov
adc
dec
cmp
mov
sub
inc
test
cmps
cmps
int
dec
movs
sti
sub
sbb
ins
jecxz
sbb
cmp
das
sbb
add
or
and
fs
push
and
outs
pushf
std
bound
sub
and
test
lods
pop
cmp
scas
fild
xchg
mov
movs
jg
cld
jecxz
sbb
adc
push
push
cmp
jp
cs
cmp
dec
inc
int
dec
sub
adc
push
inc
xor
out
loop
push
pop
outs
pop
rcl
push
icebp
sbb
xchg
mov
sbb
dec
mov
push
cmp
push
inc
cmps
and
mov
xchg
movs
jmp
ret
cmp
jmp
push
dec
pop
in
sub
movs
loopne
push
call
out
pop
iret
mov
hlt
cdq
inc
dec
mov
sar
arpl
mov
dec
test
nop
mov
hlt
cdq
inc
inc
pop
dec
dec
iret
stos
mov
push
out
movs
adc
sbb
lds
and
xchg
xchg
sub
mov
and
mov
pushf
or
xor
dec
add
adc
inc
fst
shr
btc
xchg
rcr
nop
scas
(bad)
pop
sbb
jae
movs
xor
mov
ss
test
in
cmp
and
cmp
add
ins
dec
not
lea
mov
int3
add
push
jae
adc
ss
or
or
rcl
cmps
daa
sbb
stos
xchg
xchg
sub
jge
inc
cli
lods
pop
jne
pop
pop
push
hlt
aam
retf
shl
(bad)
mov
xchg
inc
add
xchg
lahf
es
adc
fdiv
test
movs
sahf
imul
test
push
and
dec
stos
or
mov
or
fild
and
pop
xor
mov
dec
dec
hlt
mov
sub
and
push
daa
sbb
cmp
push
mov
sub
sub
test
add
add
out
ins
inc
jmp
push
enter
cmps
sbb
mov
pop
ins
xor
mov
adc
push
add
jle
inc
dec
jbe
sub
or
xchg
xchg
fadd
or
add
ret
cmp
repnz
loop
sbb
fisub
rcl
cmp
or
mov
mov
out
lea
push
int3
sar
adc
push
inc
mov
cmp
fnstenv
mov
movs
adc
out
in
xchg
jae
or
jno
jno
stos
in
js
jno
outs
cmp
dec
popa
mov
mov
xchg
and
xchg
jbe
(bad)
vmwrite
sbb
int3
ss
dec
pop
push
xchg
jne
xchg
mov
xor
popa
jecxz
mov
pusha
adc
daa
add
mov
fadd
test
pop
scas
inc
loopne
enter
(bad)
fld
loopne
mov
sub
fild
call
dec
in
imul
fisub
movs
test
retf
pushf
test
push
and
scas
inc
outs
enter
pop
adc
fdivr
mov
sti
xlat
cmc
loope
fistp
frndint
je
arpl
pop
mov
in
lods
xchg
jbe
lock
cmps
cli
xor
fnsave
xchg
call
pop
mov
mov
inc
adc
mov
add
sub
add
sbb
mov
mov
fs
or
dec
test
mov
and
xchg
addr16
or
dec
inc
push
ror
ja
push
push
mov
cmp
xchg
adc
inc
cli
xor
xor
push
mov
fst
xchg
out
and
adc
hlt
test
and
mov
shr
(bad)
cmovl
rol
inc
and
dec
ret
movs
sub
inc
ins
pusha
jl
ret
mov
mov
into
stc
sbb
les
(bad)
push
cmp
and
mov
pop
mov
lea
add
shl
add
inc
divps
jecxz
bound
jp
out
push
and
xor
cmp
(bad)
mov
mov
mov
and
pop
shl
pop
ret
das
data16
sub
pop
in
add
add
sbb
and
inc
dec
mov
(bad)
and
fld
xchg
imul
sbb
add
mov
pushf
test
sub
adc
sbb
mov
cmp
jmp
pop
jle
test
pushw
push
repz
(bad)
xchg
mov
(bad)
and
sbb
jmp
mov
pop
sahf
movs
mov
out
in
sub
ficomp
jns
fldcw
cmp
inc
push
sub
fistp
inc
dec
mov
dec
mov
fdivrp
push
jmp
sub
scas
dec
push
daa
push
not
fisubr
mov
cmp
movs
daa
and
mov
(bad)
jb
pushf
std
inc
pop
fs
add
xor
or
rol
inc
adc
cmp
xlat
mov
ret
push
dec
cmp
in
cmp
add
loopne
outs
add
mov
outs
cdq
and
mov
out
or
cmps
add
adc
or
or
les
shr
ins
inc
inc
dec
sbb
inc
adc
in
sbb
sbb
xchg
nop
xor
loop
mov
push
xchg
lea
push
jb
xor
push
gs
out
push
push
jb
ins
movs
(bad)
lahf
ins
mov
or
dec
rol
and
arpl
test
adc
adc
fcomp
bnd
jno
dec
into
jmp
pop
jae
out
scas
bound
cmp
mov
(bad)
sub
cmc
das
dec
ret
mov
xchg
icebp
xchg
fs
aaa
mov
cmp
add
cdq
mov
add
stos
jmp
mov
sar
imul
mov
pop
push
inc
mov
out
xchg
or
jmp
xchg
mov
mov
xchg
test
push
add
in
mov
aad
mov
dec
(bad)
mov
adc
adc
in
sub
fdivr
cmp
test
les
pushf
jbe
mov
xchg
cmp
lds
out
jne
test
mov
push
sub
cmp
fstp
leave
fst
xor
xchg
jge
cmps
bound
push
sub
adc
sbb
push
dec
fild
not
cwde
pop
and
dec
xchg
xor
cmp
jmp
fwait
or
jmp
and
xor
stos
xchg
fwait
inc
sub
test
inc
inc
or
adc
mov
mov
fbld
outs
ins
mov
jae
enter
fcomp
jmp
inc
xchg
dec
cmp
imul
cdq
ins
pop
int3
movs
jl
mov
cmp
scas
fnstenv
sar
out
sahf
xor
jmp
in
or
dec
out
adc
and
inc
inc
dec
pop
test
inc
jge
mov
je
dec
xor
inc
cs
dec
cmc
adc
or
sahf
in
js
xor
jb
adc
add
sub
pushf
adc
push
(bad)
aam
jo
and
dec
cli
(bad)
jmp
(bad)
push
xchg
xchg
shl
push
mov
nop
xchg
(bad)
jmp
mov
inc
xor
(bad)
cmp
rol
push
mov
test
aas
push
pop
(bad)
fsubr
jmp
jne
sbb
(bad)
das
sub
aaa
js
mov
test
mov
adc
stos
ds
int3
xchg
test
pop
movs
nop
cmp
push
test
jne
sbb
inc
arpl
cwde
cmps
and
cmp
cmps
mov
xor
sub
dec
sti
fldl2t
shl
data16
push
and
pop
inc
loopne
repz
cld
mov
add
jno
and
in
mov
fdiv
mov
into
shl
cs
sbb
and
lahf
cmp
push
adc
ror
call
popf
mov
jb
add
stc
push
loopne
add
adc
sbb
add
xor
clc
inc
dec
mov
add
dec
mov
add
ficom
clc
sbb
mov
push
out
fistp
push
fwait
hlt
repnz
jns
aas
(bad)
mov
(bad)
cmp
mov
mov
mov
mov
scas
mov
cmp
test
pop
sub
xchg
outs
retf
or
and
sbb
lods
mov
aas
(bad)
mov
jbe
mov
ficomp
je
rcl
lahf
and
mov
out
sub
xchg
inc
and
mov
sbb
jle
mov
push
sbb
aad
push
icebp
mov
stos
push
int3
xchg
shl
xchg
imul
movs
loopne
and
adc
fldl2t
mov
imul
jb
out
adc
xor
stos
pop
rol
add
mov
xor
jno
retf
adc
adc
loop
mov
cdq
outs
pop
xchg
mov
sub
mov
sbb
or
push
xchg
add
test
mov
mov
mov
out
mov
or
paddd
rcl
pop
(bad)
sbb
xchg
xor
adc
push
mov
sub
inc
lods
jp
jmp
int3
dec
push
fdivr
test
imul
pushf
jnp
push
dec
xchg
aaa
in
jp
push
es
dec
call
sbb
movs
sbb
mov
int
ss
rep
xchg
shl
push
test
fdivp
fisubr
fwait
ret
cmps
jmp
sub
(bad)
fisubr
(bad)
mov
vcomiss
retf
adc
lods
fnstenv
(bad)
pop
inc
xchg
xchg
bound
jg
cs
cmp
pop
sbb
(bad)
aad
cmp
(bad)
ins
dec
fwait
mov
xor
push
jnp
jb
mov
xchg
xchg
ins
outs
sub
xchg
xlat
enter
inc
add
adc
pop
ret
(bad)
mov
and
aam
sub
push
scas
cmps
jmp
inc
lods
sub
shl
repz
int3
sub
pushf
sub
adc
aaa
fsub
push
retf
mov
push
(bad)
dec
inc
movs
in
loope
popa
xlat
inc
adc
push
aas
adc
dec
shl
fwait
mov
or
xlat
movs
fxam
jno
xor
add
mov
mov
rcl
push
mov
int3
pop
bound
sbb
sbb
push
fnstenv
dec
cld
push
out
fdiv
push
jp
outs
pop
ss
test
mov
dec
movs
mov
movs
test
mov
fsubr
cmp
sbb
xor
(bad)
dec
pop
cmp
pop
ror
gs
movs
ins
xlat
sbb
(bad)
shl
fild
pop
inc
dec
retf
pop
nop
movs
mov
punpckhdq
sbb
out
mov
xchg
pop
xlat
push
and
popf
pop
aam
sub
push
cli
test
mov
cwde
call
mov
nop
push
xchg
rcl
pop
scas
xchg
out
scas
(bad)
rcl
pop
xchg
inc
stos
fnsave
stos
push
pop
mov
jle
stos
jo
ss
dec
xchg
xchg
sub
mov
add
fwait
jge
mov
mov
jl
mov
jns
xor
fcmovne
xor
push
pop
cmp
popf
fistp
push
movs
imul
add
fstp
stos
outs
jge
test
fs
ret
xor
(bad)
in
stos
(bad)
fidivr
pop
mov
ror
iret
xchg
mov
cmp
mov
cmp
xlat
gs
dec
bound
aaa
pushf
push
mov
daa
loope
sar
sub
(bad)
loope
loop
dec
mov
out
sub
sbb
test
gs
xchg
push
inc
(bad)
dec
rcl
sub
loopne
dec
shl
lea
and
or
cld
push
(bad)
jl
push
add
lds
xchg
sub
adc
mov
jmp
repnz
xor
pop
mov
fimul
sbb
ja
mov
xchg
in
out
movs
push
shl
popa
jmp
lods
movs
div
push
push
dec
jle
sub
movs
push
(bad)
nop
dec
or
neg
and
arpl
loopne
jns
(bad)
cwde
push
(bad)
jmp
lock
std
test
pushf
scas
pop
out
and
cmc
dec
dec
jg
loop
pop
add
test
xor
fcom
lods
pop
pop
pop
je
sub
pop
mov
xor
dec
mov
pop
xor
test
dec
xchg
mov
push
dec
push
xchg
mov
mov
pop
mov
fnstenv
(bad)
shr
push
cmp
xlat
sbb
stos
pop
cmc
fidiv
stos
push
sbb
cmp
push
push
outs
and
adc
mov
cmp
xchg
aam
sbb
clc
(bad)
icebp
jge
xor
outs
in
ins
in
cmc
pop
mov
xchg
dec
call
jmp
retf
stos
jge
xchg
loop
out
or
mov
or
call
les
xchg
sbb
xchg
ins
pop
push
mov
cdq
popf
movs
aad
mov
mov
test
and
ret
jnp
xchg
jo
jmp
shl
mov
jl
mov
les
imul
int
loopne
inc
mov
xchg
jle
movs
leave
push
inc
inc
inc
(bad)
push
pop
dec
or
ds
jg
cmp
scas
dec
test
fcomp
jp
mov
or
jg
jge
pop
movs
xchg
(bad)
out
fmul
push
pop
push
jb
mov
cdq
push
sar
mov
rcr
xchg
xor
or
daa
mov
lahf
enter
mov
outs
cmp
call
in
test
push
imul
xchg
mov
(bad)
jno
adc
pop
call
sub
jp
jecxz
sub
push
mov
clc
shr
cli
push
sub
shl
xchg
sub
(bad)
dec
cwde
fdivrp
les
jle
and
fiadd
into
cld
nop
cmp
cmp
test
int3
pop
rcr
rol
cmc
add
pop
or
sbb
stc
and
into
loop
xchg
and
dec
or
sub
inc
xor
sbb
push
jecxz
push
jmp
push
mov
mov
call
frstpm(287
sbb
fisttp
cmp
aas
pop
jne
pop
mov
mov
dec
cwde
sub
pop
or
add
xor
sub
and
stos
xchg
or
ficomp
in
jne
or
int3
pop
pop
cmc
outs
(bad)
sar
push
sub
dec
sub
stos
dec
adc
jns
dec
jns
cmp
fisttp
mov
cs
cmp
retf
mov
adc
test
movs
push
lahf
add
jle
inc
push
shl
jle
xor
sbb
xor
in
call
popf
jb
in
rcr
mov
ins
test
pop
adc
lock
pushf
in
and
add
add
pop
jnp
retf
adc
xchg
pop
push
mov
sub
in
or
stc
jge
aam
jo
or
mov
cli
je
dec
push
in
sbb
and
cmp
jo
pop
push
aad
ins
xlat
xor
fadd
rol
ins
add
add
and
jmp
sub
leave
clc
inc
mov
cwde
cmp
jl
xor
and
jbe
or
cld
fisttp
outs
dec
mov
test
mov
fwait
retf
xchg
push
lahf
inc
mov
stos
sub
cwde
fmul
mov
fwait
mov
retf
(bad)
mov
dec
xchg
dec
out
aad
fstp
outs
add
fsincos
in
or
fst
dec
mov
fwait
ins
or
mov
xchg
mov
ins
add
add
and
cmp
inc
leave
adc
sbb
xor
imul
mov
add
dec
mov
dec
jl
add
mov
fs
sbb
fdivr
add
and
pop
jb
inc
jl
xor
loop
test
mov
xor
movs
out
inc
inc
(bad)
adc
inc
or
adc
add
cmps
cmps
and
xchg
mov
mov
jns
repz
setp
cmp
add
stc
lods
mov
jbe
xchg
fs
xchg
mov
mov
dec
stc
popf
mov
movs
mov
and
mov
add
fadd
add
push
add
push
jno
add
mov
add
sub
jecxz
add
adc
std
jo
and
fdiv
data16
outs
imul
rcl
push
test
and
mov
lahf
into
sbb
cmp
loope
dec
push
cmp
in
mov
push
nop
aas
mov
bound
inc
std
and
scas
pop
adc
push
cmc
mov
pop
xlat
cmps
(bad)
ficomp
mov
push
mov
ss
cmps
stos
mov
dec
pop
sub
push
or
ror
test
mov
cmp
movs
mov
xchg
cmp
xor
mov
lock
push
xor
xor
movs
inc
push
enter
sub
(bad)
and
or
sub
and
mov
push
sub
xlat
rol
mov
or
mov
test
shl
adc
rcl
pushf
inc
cmp
loop
mov
mov
into
xor
pop
mov
inc
jo
fstp
sbb
inc
mov
rcr
rcr
mov
sar
lods
dec
xor
xor
inc
inc
jnp
test
lahf
lahf
push
ja
repz
fs
shr
mov
fcomp
aaa
dec
(bad)
leave
push
xchg
in
cld
icebp
add
push
push
cmp
ins
fnstenv
inc
dec
push
bound
inc
jb
lahf
js
sbb
mov
call
dec
test
addr16
(bad)
add
xor
repz
pop
and
dec
push
leave
xor
ret
test
push
pop
mov
fsincos
dec
jg
and
inc
cmp
push
pop
xor
push
mov
gs
jecxz
ror
or
dec
mov
ror
sub
in
xor
xor
test
daa
xlat
dec
stos
cmps
std
addr16
jl
inc
in
xchg
jmp
sub
call
call
sti
mov
movs
mov
mov
ss
fidiv
loop
ja
pop
sub
data16
popf
stos
fistp
pop
(bad)
shl
call
and
sub
imul
jae
sub
cmps
push
adc
test
test
mov
pop
(bad)
adc
xchg
sbb
or
and
movs
add
push
mov
shr
es
inc
addr16
ins
xlat
ins
inc
add
mov
retf
mov
fsub
rcr
xchg
xchg
adc
in
(bad)
jnp
push
jbe
jecxz
mov
or
lahf
dec
add
or
or
fadd
xchg
pushf
inc
mov
xor
(bad)
dec
loop
call
ins
pop
push
or
inc
stos
mov
popf
sar
test
rcl
out
cli
mov
mov
(bad)
lahf
push
xchg
test
daa
cdq
fidiv
push
cmp
jbe
sbb
popf
rcl
fmul
out
push
push
sub
test
pusha
jg
ss
stos
int3
in
arpl
push
stos
pop
push
mov
fldcw
push
bound
mov
and
cdq
ss
icebp
test
(bad)
xchg
fist
pop
fnstenv
push
mov
pusha
div
(bad)
jae
jns
cli
sub
out
inc
cmp
xchg
fwait
loopne
stos
or
push
adc
and
mov
sysexit
pop
ds
sub
imul
sbb
mov
mov
arpl
jo
out
in
pop
stos
aas
xchg
push
sbb
mov
movs
dec
pop
es
push
sub
mov
call
mov
push
push
mov
mov
movs
loope
xlat
xchg
adc
mov
test
into
mov
mov
shr
fisub
xor
adc
pop
sbb
in
ds
ret
xchg
pushf
cli
lds
mov
and
jmp
cmp
out
or
xor
ins
add
adc
in
mov
fadd
dec
and
mov
mov
add
or
jne
outs
pop
sbb
cmp
in
xor
dec
call
movs
push
cmp
popa
jo
cdq
pusha
daa
xchg
pop
daa
cli
mov
test
cmp
sub
mov
or
xchg
mov
test
ss
mov
repnz
xor
adc
mov
rcr
(bad)
(bad)
or
das
popf
lods
in
(bad)
js
sub
outs
xor
lods
mov
mov
stos
es
push
sti
lods
(bad)
test
lds
jne
ja
mov
imul
push
out
ds
and
fadd
dec
fwait
mov
ja
dec
int
pop
mov
xchg
xor
push
fwait
inc
(bad)
sbb
ret
pop
mov
clc
sar
ins
ret
push
out
in
jmp
or
mov
sub
fsub
mov
jmp
loopne
push
lahf
jae
aam
setg
out
mov
dec
push
test
push
daa
and
gs
cld
movs
fsubr
rcl
adc
mov
push
lahf
and
(bad)
shr
daa
add
ror
scas
sbb
sub
mov
pop
xchg
hlt
xor
adc
call
or
add
jo
add
xor
push
pushf
inc
cmps
mov
loop
rcr
jo
outs
and
pop
push
adc
(bad)
fcom
inc
dec
add
dec
xchg
or
dec
fistp
mov
inc
cmp
push
rcl
les
fstp
rcr
ror
sub
jno
jae
pop
hlt
pop
dec
push
cmps
punpcklwd
and
mov
(bad)
jmp
arpl
push
and
push
cs
sub
sbb
shr
jnp
es
cmp
outs
movs
cdq
jb
pop
jle
xor
popa
inc
mov
rol
rcr
or
mov
push
push
push
cs
or
in
movs
xchg
repz
add
mov
add
jmp
xchg
inc
add
dec
std
mov
xchg
jl
movs
sub
outs
loop
dec
rcr
stos
push
fwait
popa
into
dec
xchg
jge
dec
and
idiv
dec
pop
jns
and
add
cmp
mov
add
(bad)
adc
xlat
lods
es
cli
and
push
hlt
(bad)
push
lods
xor
push
jns
or
and
add
push
mov
in
pop
cmp
cmp
daa
inc
dec
aas
call
jecxz
jecxz
cmps
out
dec
mov
(bad)
in
or
daa
je
(bad)
sbb
(bad)
gs
mov
or
jl
push
int3
push
dec
mov
push
mov
js
aad
sbb
mov
pop
jmp
fdiv
inc
and
xor
push
cwde
pop
enter
jmp
shl
cmp
xchg
nop
fld
sub
mov
push
ret
outs
imul
jno
jnp
retf
retf
iret
xor
dec
test
pop
mov
xor
and
ret
jg
pushf
pop
test
dec
sar
and
or
sbb
imul
push
aaa
hlt
loopne
xchg
fadd
push
out
ds
mov
sub
pop
add
es
je
mov
push
fcomi
test
cmp
push
cmc
or
xchg
dec
mov
push
dec
mov
fld
(bad)
xor
out
push
movs
lahf
ja
cmp
xchg
pop
je
inc
jl
mov
loopne
stc
ds
sbb
push
je
ss
mov
popa
push
test
cmp
pop
out
ja
xchg
movs
xor
sub
int3
xchg
mov
das
cld
ins
js
mov
pop
adc
fwait
xchg
mov
nop
stos
fidiv
jge
dec
xchg
sub
ins
xchg
xchg
test
pop
mov
and
loope
cmp
adc
xchg
test
jl
cmp
mov
pop
xchg
(bad)
data16
pop
mov
fcom
push
movs
outs
fsubr
out
push
xor
pop
sub
sbb
daa
push
loopne
mov
jmp
(bad)
dec
sbb
xchg
js
xor
dec
xor
sbb
movs
fst
dec
ficomp
loop
sbb
std
scas
pop
jne
jns
add
pop
pop
push
add
xchg
xchg
add
(bad)
cmps
outs
sub
xlat
mov
jnp
icebp
rcl
lea
fwait
imul
imul
mov
retf
shr
adc
gs
pop
es
jg
mov
sub
xchg
pop
adc
cmps
lods
mov
icebp
mov
xor
push
call
(bad)
lds
sbb
jns
jae
jg
push
sbb
stc
xor
scas
out
fnstenv
call
mov
dec
pop
dec
aaa
mov
add
ja
jle
popa
das
jle
aam
cmp
sahf
pushf
cmps
jo
and
xor
push
pop
cmp
dec
fbstp
cmps
push
sbb
outs
aaa
xchg
mov
inc
jno
jecxz
les
stos
jp
cmp
xchg
mov
xchg
scas
pop
(bad)
lds
(bad)
xchg
xchg
test
pop
jge
dec
jns
push
movs
into
adc
fild
xor
retf
repnz
mov
(bad)
xlat
mov
xor
inc
jle
mov
and
pop
ss
push
sub
stos
xchg
cmp
imul
mov
fsub
dec
xor
cmps
leave
add
sar
add
call
fist
repnz
neg
pop
pop
or
dec
jp
jle
push
shr
mov
jle
test
movs
xchg
aaa
dec
test
imul
je
cdq
and
push
or
aam
inc
mov
xchg
push
sahf
xchg
mov
data16
fisubr
or
call
aaa
xchg
pop
stos
mov
pop
or
jae
and
std
fcomp
dec
push
in
sbb
xchg
xor
pop
test
mov
sub
stos
sahf
sub
jle
mov
adc
ss
dec
retf
dec
es
xchg
cmp
dec
sub
pushf
or
in
mov
aad
jge
xchg
mov
scas
imul
push
push
sub
add
jg
bound
out
das
outs
sbb
mov
mov
call
sub
pop
daa
push
pop
xchg
pop
mov
mov
and
push
popf
mov
(bad)
xor
jmp
fdivr
inc
push
clc
mov
pop
pop
xchg
mov
jb
cmp
ds
mov
mov
inc
movs
mov
push
pop
test
popf
dec
pop
lahf
and
icebp
mov
or
sbb
jp
scas
push
push
movs
cmp
xor
jae
dec
sub
cdq
mov
or
sbb
adc
push
jno
fcomp
imul
shl
dec
sub
(bad)
xor
mov
scas
mov
dec
test
jmp
leave
cmc
hlt
mov
push
sub
outs
les
mov
sub
dec
dec
dec
dec
fdiv
stc
add
fmul
fnstenv
adc
or
out
add
(bad)
jae
and
(bad)
mov
clc
push
imul
adc
jmp
ss
lahf
cs
mov
dec
pop
not
mov
stos
dec
xor
cmp
in
fst
add
pop
ficomp
jle
into
sbb
retf
pop
rcl
hlt
adc
xor
adc
daa
push
repz
inc
push
test
outs
mov
push
push
sti
xor
test
shr
fwait
push
stos
int3
test
retf
push
je
in
pop
mov
stc
test
je
adc
fild
sbb
lods
push
stos
mov
dec
push
cmps
mul
jo
sti
dec
call
outs
ret
pop
cdq
push
push
sub
mov
jb
xchg
jmp
rcr
cmp
ret
adc
xchg
push
retf
xchg
sar
(bad)
jnp
pop
push
je
std
movs
fdiv
inc
lahf
inc
ret
or
jae
sahf
push
std
adc
fcom
les
std
popa
ins
mov
enter
adc
inc
push
icebp
mov
fsubr
push
xchg
add
pop
xor
sbb
push
xchg
repz
pusha
mov
ret
inc
pop
adc
dec
(bad)
mov
jmp
sti
cmp
out
ins
cmps
mov
push
jge
popa
jecxz
xchg
test
or
outs
pushf
dec
xchg
sub
fs
retf
mov
(bad)
in
push
shl
adc
pop
test
dec
inc
hlt
mov
xchg
fmul
fsub
popf
pusha
pop
mov
adc
mov
sbb
neg
ss
dec
into
add
dec
mov
in
sbb
popa
sahf
test
push
daa
test
push
movs
mov
sub
and
mov
inc
dec
push
nop
xor
add
and
ins
add
lds
pop
into
in
or
inc
iret
push
add
add
pusha
add
add
ror
loop
inc
enter
std
and
rcr
repnz
sar
test
clc
inc
add
sbb
xchg
in
xor
mov
in
fisub
in
cmp
in
inc
and
pop
push
jo
(bad)
loope
mov
inc
shr
je
add
jnp
outs
cmp
xchg
cmp
in
push
(bad)
retf
test
mov
push
jmp
push
dec
push
nop
xor
add
movs
hlt
mov
xor
rcl
sub
pop
pushf
adc
push
dec
int3
mov
pop
cs
mov
push
test
pop
pop
call
or
push
and
xor
test
cmc
push
repz
test
stc
xor
push
rcl
gs
addr16
xchg
pop
mov
push
into
lock
pusha
ss
fwait
sbb
jmp
scas
jno
add
mov
rol
add
sar
inc
sub
stos
mov
fcom
sub
sub
mov
or
hlt
aas
sub
dec
les
sbb
jecxz
adc
jo
or
lahf
test
inc
dec
inc
xchg
lahf
je
mov
dec
enter
aaa
sahf
outs
fisttp
ret
dec
loop
push
out
sahf
sub
scas
sbb
cwde
ins
packssdw
and
jg
fcmove
mov
push
into
ret
fnstsw
jns
pop
dec
retf
in
aaa
rcr
dec
ins
cmp
imul
mov
cdq
pop
ins
fwait
and
dec
jb
adc
xchg
dec
jmp
add
gs
fdivr
(bad)
loop
ret
dec
shr
mov
(bad)
jl
jbe
dec
(bad)
mov
add
sbb
push
dec
cli
movs
shl
cmp
scas
cmps
ss
aam
mov
push
jnp
or
inc
push
test
imul
push
pop
xchg
jbe
dec
ja
fistp
cdq
sub
xchg
mov
push
push
mov
inc
cmc
xor
sbb
jne
mov
xlat
movs
scas
popf
jle
stos
sbb
xchg
cdq
mov
jp
sub
inc
gs
out
loop
mov
(bad)
retf
arpl
and
ds
or
dec
fcomi
mov
adc
retf
mov
rol
rcl
fnsave
cmp
push
inc
movs
xchg
sbb
cmps
js
mov
sbb
ins
nop
clc
and
fdiv
cmp
xlat
adc
mov
pop
inc
mov
jecxz
xchg
pop
fmul
int3
mov
and
mov
daa
scas
push
cmp
add
or
jnp
xchg
xchg
les
arpl
inc
jle
adc
adc
js
jle
mov
je
or
add
adc
or
outs
aam
and
cwde
jmp
mov
pop
mov
rcr
inc
arpl
movs
add
mov
rcr
out
ret
inc
or
pop
sahf
mov
dec
push
out
add
jno
les
add
inc
jno
jbe
adc
mov
fcomp
icebp
and
(bad)
add
xchg
js
xchg
ret
or
inc
out
nop
cmps
scas
loop
test
data16
push
sahf
imul
retf
cmps
push
or
rol
sub
mov
add
mov
enter
add
mov
fwait
pop
push
fld
dec
mov
push
ret
jp
and
push
mov
scas
mov
or
sub
add
inc
repnz
mov
mov
or
mov
ins
add
dec
cdq
inc
sub
ss
inc
mov
jmp
lods
pop
cmp
iret
jo
test
outs
xchg
int3
test
stos
stc
aam
sub
push
leave
shr
ds
add
ss
pushf
jbe
stos
dec
sub
(bad)
popf
cmps
call
stos
dec
(bad)
pop
addr16
jno
jmp
xor
movs
(bad)
fst
call
inc
repnz
jge
inc
icebp
dec
hlt
mov
push
inc
jecxz
subps
xchg
gs
jp
cmps
sbb
test
rcr
and
popa
mov
ds
add
xor
and
iret
sub
push
cpuid
rol
cmp
nop
inc
add
pushf
add
and
addr16
inc
jbe
call
pop
out
pop
imul
and
cmps
push
out
gs
sub
mov
xor
or
test
add
pop
ins
loope
push
int
int3
xor
iret
mov
dec
loop
test
dec
dec
aad
shl
and
es
pusha
push
pop
xchg
push
mov
xor
cmp
jnp
adc
and
rcl
in
je
push
xor
dec
sub
rcl
add
lock
push
ror
adc
sahf
sti
ror
call
mov
sbb
addr16
iret
lds
in
adc
(bad)
cmps
inc
mov
push
mov
iret
pop
out
and
xchg
mov
add
jp
cmps
call
or
iret
pushf
scas
fwait
pop
nop
inc
ret
inc
pop
(bad)
nop
mov
dec
push
in
inc
or
jo
lods
call
push
xchg
mov
jle
sub
mov
hlt
nop
in
add
pavgb
jno
jg
mov
push
ret
dec
inc
cmp
lods
sub
mov
stos
add
mov
not
jecxz
icebp
ja
mov
pop
iret
hlt
ret
pop
je
pop
and
jle
mov
push
pop
mov
ins
test
loopne
adc
es
mov
mov
retf
and
movs
cmp
lods
pop
cmp
and
movs
shl
ret
movs
cli
cdq
stos
push
jb
fwait
les
mov
and
mov
mov
sub
les
xor
cmps
and
in
test
lock
dec
fstp
pop
xor
in
or
push
movs
xor
jbe
push
gs
push
popa
inc
sub
cmps
nop
loop
inc
cmp
jecxz
data16
cvtdq2ps
cmps
push
cmp
cmp
out
add
fwait
ds
xor
retf
sbb
les
pop
dec
jge
in
add
in
adc
in
das
sub
movs
arpl
inc
xor
ins
mov
sub
xlat
mov
or
add
les
add
inc
sbb
jecxz
add
ja
and
sbb
add
leave
fcomp
add
ret
or
inc
inc
or
inc
dec
dec
sub
pop
xor
retf
jecxz
add
(bad)
cmp
call
mov
into
adc
push
xor
stos
jb
sub
or
sar
movs
dec
push
mov
mov
cdq
stos
adc
xor
adc
pushf
nop
retf
dec
jae
out
rcl
fwait
pusha
test
pop
mov
cmps
in
call
sub
outs
mov
mov
sub
push
mov
mov
xor
pusha
adc
mov
mov
mov
inc
clc
mov
push
pop
inc
mov
call
cmp
cmp
jno
data16
movs
fisttp
fist
and
mov
test
out
jnp
cmp
loope
scas
aad
mov
pop
cmp
pop
dec
xor
rcr
pop
fcmovnu
mov
ds
add
push
(bad)
outs
push
(bad)
je
scas
je
daa
jecxz
and
rol
popa
aam
cmps
pop
pop
dec
leave
cmps
pop
push
xor
xor
nop
rol
and
(bad)
mov
cmp
(bad)
cmc
xchg
mov
xor
xchg
popa
or
xor
xor
cmp
in
hlt
enter
inc
cmp
ds
pop
push
or
outs
std
mov
pusha
sbb
lods
hlt
mov
adc
xchg
xchg
enter
popf
sbb
adc
sbb
sub
adc
sbb
push
xor
xor
es
pushf
test
and
or
ds
or
mov
(bad)
test
movs
clc
pop
loopne
pop
xchg
movs
push
cli
jmp
repnz
(bad)
imul
movs
and
jo
in
inc
sub
sbb
push
test
pop
aad
stc
(bad)
adc
pop
rcl
sbb
shl
xor
push
fs
inc
cmp
jo
inc
sbb
adc
or
in
test
jno
and
mov
neg
inc
pop
mov
fisttp
aas
mov
test
and
aaa
outs
sbb
sub
mov
aad
test
int
xchg
xchg
xchg
int
add
iret
or
outs
or
xor
cmp
or
test
mov
lock
retf
cld
lds
inc
pop
fmul
sbb
xchg
outs
lock
scas
cmp
stc
xor
cmp
mov
in
(bad)
sub
mov
int3
and
xor
push
cmp
ror
loop
std
icebp
fs
mov
xchg
rcr
pop
and
xor
and
push
rep
or
jmp
movs
std
in
pop
popa
xchg
or
pop
add
xchg
pop
sbb
test
test
aas
pusha
clc
mov
fnstsw
lods
aam
js
aam
push
mov
movs
leave
push
or
pop
inc
retf
dec
cmp
cmp
aaa
call
ficom
push
inc
inc
std
dec
jnp
and
jmp
xchg
aaa
and
cmps
xchg
mov
mov
xchg
xchg
mov
xchg
daa
sbb
add
mov
inc
(bad)
mov
outs
movs
inc
scas
push
pop
test
sub
out
adc
iret
and
(bad)
shl
std
movs
adc
dec
pop
add
inc
call
std
cmp
aam
jno
lods
adc
or
std
mov
and
out
inc
mov
hlt
fnstenv
fiadd
in
mov
outs
sbb
dec
and
pop
push
cmp
(bad)
in
adc
pop
repz
sub
test
add
or
adc
cmps
call
xor
pop
sub
and
pop
scas
jno
lds
jmp
mov
outs
rcl
test
nop
and
leave
sub
add
popf
xor
pop
jae
mov
xchg
outs
scas
adc
shr
xor
xchg
dec
mov
popa
nop
push
jb
dec
aaa
in
rcr
rol
aam
cmp
add
inc
mov
retf
jmp
shr
jno
sbb
cmps
cmps
pop
mov
jb
jne
pop
shr
retf
pop
mov
adc
pop
jne
adc
mov
mov
sahf
popa
retf
add
retf
daa
lods
repz
popf
pop
lds
je
aaa
or
nop
mov
mov
and
dec
fst
repz
xchg
adc
mov
shl
adc
add
(bad)
sbb
fsubr
loop
outs
imul
mov
mov
loop
imul
sbb
inc
sti
dec
movs
inc
iret
jb
dec
mov
test
adc
rcl
movs
or
jbe
cmc
movs
cmp
cmp
cld
push
ins
in
(bad)
adc
pop
inc
mov
ins
adc
repz
call
movs
adc
mov
sahf
mov
in
loope
pop
xchg
mov
jo
pop
mov
inc
mov
jp
inc
outs
fcom
or
and
mov
retf
sbb
test
sbb
cs
dec
adc
shl
sub
push
ja
mov
pushf
or
(bad)
aam
lahf
push
test
xlat
mov
cwde
add
retf
out
pop
out
push
popf
into
add
loope
pop
cmp
sub
pop
adc
hlt
pop
call
sbb
addps
fadd
es
pushf
mov
xchg
sti
push
push
rcl
std
neg
pop
outs
xlat
es
scas
addps
out
aas
pop
je
xor
sub
iret
cmp
pop
mov
into
(bad)
pop
push
outs
cmp
sar
ja
adc
inc
loopne
arpl
dec
in
dec
and
jecxz
pop
in
aas
push
dec
mov
push
jmp
hlt
pop
mov
clc
pop
lock
lods
jmp
adc
mov
xlat
fxch
xor
push
aaa
in
test
ins
inc
jb
and
fs
xor
jo
imul
test
pop
fidivr
pop
iret
loopne
les
popf
ins
aam
sbb
dec
dec
dec
dec
movs
fldenv
mov
and
sub
sub
lods
mov
sahf
or
dec
sar
and
lods
out
ja
call
call
movs
mov
add
std
loopne
fxam
jo
clc
mov
ja
jo
mov
mov
repz
inc
dec
pushf
mov
ja
icebp
scas
not
push
fwait
sub
mov
xchg
call
xchg
inc
int3
mov
sub
dec
xchg
or
jne
shl
fsqrt
lock
fisubr
mov
div
inc
dec
(bad)
jo
sub
popf
repnz
jmp
sbb
sbb
mov
daa
test
or
jl
push
stos
lods
lock
push
inc
xchg
push
mov
dec
cmp
or
xchg
cdq
stos
cmp
xor
sbb
pop
mov
mov
ret
jae
xchg
cmp
icebp
aas
ret
push
in
jmp
inc
mov
xchg
cmp
(bad)
out
jmp
mov
mov
mov
add
push
fadd
mov
dec
outs
pop
les
and
pop
mov
mov
ror
push
shl
add
sbb
out
sar
xor
jmp
ja
mov
sub
jnp
or
mov
scas
push
add
mov
inc
pop
ins
push
test
jne
jmp
mov
leave
js
jg
(bad)
std
not
jp
ins
adc
test
sub
adc
pusha
xchg
mov
pop
cdq
fsubr
sub
jb
and
push
cmps
cmps
bound
push
test
add
xor
movs
inc
fs
ins
psadbw
xchg
adc
inc
test
js
add
jmp
inc
cmp
cmp
iret
jno
inc
jg
test
out
add
and
adc
inc
sbb
test
and
jnp
dec
movs
imul
or
out
retf
imul
mov
fidiv
imul
xor
inc
aas
adc
dec
shl
adc
jl
mov
jmp
jbe
test
in
mov
out
mov
aaa
lahf
sub
adc
shl
cmp
sub
mov
cdq
or
fs
or
jmp
push
xor
and
out
and
or
inc
popf
mov
cmps
sbb
push
add
inc
add
adc
add
cmp
xchg
jno
add
dec
pop
mov
sbb
(bad)
cmc
jmp
jae
ins
xor
push
sbb
aad
mov
movs
sub
xor
push
xor
mov
xchg
xchg
nop
push
xor
dec
pop
rdmsr
mov
push
jge
adc
sbb
outs
jne
or
dec
out
mov
jecxz
sub
in
cmp
push
xchg
push
jo
arpl
mov
dec
mov
add
mov
and
sub
add
test
emms
mov
cmp
loop
mov
scas
retf
fisub
dec
and
sub
(bad)
mov
js
mov
jecxz
push
mov
jne
cmp
xor
dec
in
repz
cld
mov
mov
mov
or
gs
movs
sbb
jb
ins
and
aam
or
sub
add
or
xor
xchg
call
pusha
mov
and
push
add
hlt
add
or
mov
inc
mov
out
lock
pop
loopne
and
(bad)
rol
sbb
or
pop
cmps
dec
pop
out
inc
loopne
mov
inc
scas
shr
mov
xchg
inc
jmp
stos
sbb
xchg
fmul
hlt
les
aaa
xor
dec
iret
js
ins
jb
mov
xchg
mov
loopne
inc
adc
aas
stos
mov
cmp
sub
rcr
inc
pop
inc
xchg
outs
sub
repnz
out
xor
test
inc
pushf
loope
and
fstp
ss
adc
fstp
es
ins
cmp
jle
xchg
test
dec
into
xor
movs
gs
adc
mov
pusha
sbb
sbb
or
mov
adc
sbb
or
mov
icebp
mov
leave
mov
je
mov
xor
jne
shl
push
push
adc
or
es
sbb
(bad)
pop
out
gs
mov
xor
inc
leave
aad
mov
add
jle
adc
pop
ins
ds
leave
inc
mov
stos
sti
hlt
lods
cmp
(bad)
adc
jl
pusha
pop
inc
add
repz
clc
pop
rcr
mov
mov
jp
mov
pop
inc
test
jl
in
ret
jge
cmc
lock
dec
cmp
popf
int3
add
into
inc
(bad)
fiadd
sub
push
cmp
xor
sbb
or
ror
and
dec
sbb
sbb
outs
sbb
mov
dec
cs
pusha
lahf
pop
je
nop
sbb
mov
mov
out
or
imul
fcomp
mov
mov
sti
hlt
iret
js
scas
push
sar
cmp
xchg
popf
cdq
adc
ror
sub
cmp
inc
cli
mov
push
mov
add
repnz
adc
jno
pop
and
mov
sbb
adc
nop
cmovae
mov
loopne
jp
jne
xchg
jno
nop
adc
jbe
clc
and
fadd
addr16
std
nop
mov
add
push
pop
in
mov
jg
dec
(bad)
and
or
and
ja
xchg
daa
jno
xchg
lock
add
test
or
mov
imul
inc
xchg
sahf
les
out
sar
fimul
(bad)
cdq
iret
jmp
aad
shr
iret
and
xlat
movs
popf
add
jge
pop
mov
(bad)
xchg
enter
jne
pop
xor
push
sbb
gs
inc
cmp
mov
test
cmps
dec
rcl
test
test
arpl
in
sbb
jl
inc
leave
and
into
enter
jb
mov
gs
jecxz
mov
movs
mov
inc
add
and
or
add
adc
and
call
sub
or
push
inc
gs
test
dec
into
(bad)
out
les
jo
ret
iret
stos
mov
jo
imul
mov
cmps
mov
out
repnz
fsubp
xchg
sahf
or
test
je
push
jne
aam
pop
in
movs
call
sbb
add
movs
cmp
repnz
pop
xor
mov
ss
pop
jg
pop
ret
test
xlat
push
gs
xchg
inc
inc
sbb
(bad)
jmp
iret
pop
ins
pusha
stc
lods
mov
retf
rcr
out
cmpxchg
mov
xchg
sub
push
loope
add
push
aam
sahf
rcl
and
fist
scas
aam
aad
fwait
mov
and
jnp
leave
or
lock
xor
test
fdivr
add
test
ret
out
mov
pop
inc
mov
xor
lods
push
imul
jge
sub
push
retf
sub
daa
or
addr16
sub
push
or
loopne
fadd
test
and
cmp
fld
inc
sbb
mov
inc
fld
je
adc
mov
lods
push
or
xchg
and
inc
(bad)
jmp
lods
fnsave
les
dec
loopne
push
add
push
frstor
and
mov
popf
neg
mov
adc
xor
adc
mov
and
stc
mov
(bad)
retf
inc
or
adc
lahf
ficomp
mov
sbb
outs
mov
addr16
mov
or
inc
repnz
hlt
and
ret
rol
scas
call
stos
not
jne
mov
sbb
or
scas
xor
and
xchg
in
mul
adc
sbb
dec
and
aad
retf
dec
pop
stc
push
leave
mov
ins
shr
shr
cwde
shl
push
scas
xchg
sub
dec
es
mov
cld
(bad)
out
jmp
gs
xchg
adc
jge
js
mov
mov
mov
push
jge
add
scas
rcl
and
jmp
dec
adc
sbb
sbb
js
call
mov
add
cwde
xchg
scas
sub
mov
dec
mov
dec
movs
mov
imul
pushf
rol
xchg
sbb
adc
sub
jmp
adc
cmp
aaa
daa
cmp
iret
hlt
xchg
push
mov
inc
cmp
mov
pop
nop
and
leave
les
pusha
mov
sar
xor
loope
iret
aam
imul
jle
mov
xchg
(bad)
es
push
adc
jge
jg
sub
cmp
sbb
mov
dec
jns
add
in
mov
aad
aam
xor
test
mov
fisub
aaa
and
hlt
int3
pop
adc
mov
ficom
adc
je
xor
aad
dec
lds
ins
push
mov
xor
mov
ret
mov
je
adc
mov
outs
(bad)
scas
xor
cdq
lods
sub
push
mov
stc
jo
lds
imul
or
stos
rsm
push
xchg
xchg
ret
stos
mov
mov
push
mov
(bad)
dec
sub
fistp
xor
pop
gs
dec
xchg
movs
(bad)
inc
inc
mov
xor
cdq
scas
popf
bound
sub
inc
xchg
mov
dec
dec
in
push
cmps
outs
sub
loopne
test
dec
xchg
ds
pop
dec
jne
pop
dec
adc
xor
out
ret
push
mov
ins
or
cmp
movs
repnz
or
rcl
add
popa
inc
or
addr16
or
bnd
inc
add
sub
mov
pusha
cmp
fistp
push
push
js
outs
push
jg
bound
cmp
inc
push
add
mov
dec
mov
iret
mov
mov
add
ja
mov
dec
aaa
push
jp
cmp
fist
cmp
push
jg
retf
ins
inc
jg
xchg
imul
aaa
mov
cwde
hlt
fsubp
loopne
dec
fnstcw
mov
sub
dec
int3
repz
iret
pop
adc
adc
and
dec
xor
mov
outs
mov
imul
dec
inc
clc
inc
loop
mov
arpl
mov
(bad)
lahf
call
sti
mov
fldenv
sub
and
in
(bad)
mov
ja
pop
dec
or
dec
push
retf
sbb
mov
add
lea
pop
mov
mov
mov
adc
pusha
sbb
dec
inc
mov
xchg
mov
xor
inc
push
mov
xlat
test
fisubr
xchg
push
ror
das
sub
bound
daa
mov
movs
and
ror
add
push
bound
sbb
lea
sub
dec
stos
(bad)
add
sbb
dec
inc
lds
pop
jo
inc
mov
pop
inc
pop
int3
(bad)
enter
pop
(bad)
ins
inc
scas
shr
stos
jmp
aam
jne
jb
std
inc
pop
stos
call
daa
or
repnz
enter
in
test
push
mov
or
xlat
lea
outs
ror
push
ror
cli
fdiv
popa
je
sub
cdq
jl
iret
cmp
sbb
sti
scas
or
fisttp
or
neg
sbb
pop
dec
test
in
(bad)
adc
push
xor
inc
(bad)
mov
outs
push
jle
outs
ins
outs
ror
sbb
mov
repz
sti
xor
xor
neg
call
add
mov
sub
inc
test
dec
loop
shl
sbb
and
out
sub
push
push
out
sub
sahf
mov
adc
repnz
xchg
lods
js
push
pusha
call
shl
jno
cmp
mov
adc
repz
out
add
lock
dec
xchg
movs
test
sub
mov
pop
jne
mov
aas
test
pop
test
pop
icebp
mov
aad
daa
xchg
push
adc
xor
mov
dec
ds
test
fadd
out
test
push
mov
jge
lock
push
push
mov
cmp
je
inc
mov
pop
and
sub
mov
aaa
xor
add
int3
mov
jmp
mov
(bad)
adc
mov
push
mov
and
sbb
push
and
in
jns
fwait
push
outs
xor
inc
nop
loop
or
cmp
ret
dec
mov
nop
xchg
popa
test
dec
movs
push
push
mov
lods
jo
pop
cwde
cld
jl
mov
rep
imul
add
into
inc
movs
pop
push
push
inc
(bad)
adc
sbb
jae
jg
je
in
repnz
dec
fdivr
sbb
loop
in
sub
popf
jecxz
mov
mov
test
out
cmp
out
push
and
mov
dec
dec
or
cmps
jns
ret
popf
mov
aas
or
push
push
cmp
mov
(bad)
stos
mov
cs
ins
aad
aam
jo
add
rcl
and
jbe
jmp
sbb
mov
in
mov
je
pop
jmp
in
dec
aaa
lea
pop
jae
movs
outs
shr
or
sbb
push
rcl
not
jmp
mov
std
xor
xor
in
xchg
mov
retf
jns
push
cwde
mov
xchg
mov
call
sub
pop
xchg
popf
xchg
cwde
inc
xor
loop
push
fiadd
inc
mov
es
xchg
mov
or
mov
pop
push
scas
or
or
ds
or
push
xchg
data16
sbb
leave
enter
dec
adc
in
int3
into
or
cmp
or
mov
div
in
inc
in
mov
lods
dec
sahf
dec
mov
in
mov
sbb
sbb
repz
repz
xchg
pop
std
stos
jmp
lods
mov
add
js
cli
call
adc
xor
lods
or
push
aaa
jb
push
je
dec
leave
mov
addr16
dec
sub
addr16
sbb
lock
jno
scas
xchg
sbb
push
retf
xor
out
mov
xor
div
in
(bad)
iret
xor
jb
push
cs
add
sti
pop
out
mov
test
sbb
call
test
popf
into
cmp
retf
xchg
lods
jl
fdivr
dec
scas
mov
lahf
xor
jl
out
sub
cmp
sub
pushf
rcr
fs
mov
shr
jmp
xchg
movs
adc
sar
sar
(bad)
daa
adc
adc
xchg
xchg
xor
sub
push
jns
sbb
in
xchg
mov
(bad)
call
loop
push
movs
cmps
jne
jmp
in
xchg
repz
sub
mov
gs
lods
and
push
push
inc
pop
mov
jecxz
in
fwait
sti
mov
aam
sub
add
test
and
sub
fdiv
cmps
gs
jb
imul
cmp
stos
or
push
dec
mov
add
in
test
pop
inc
iret
(bad)
xor
sar
test
mov
stos
dec
sub
aam
mov
in
fnstsw
jge
or
fs
inc
push
jne
ret
(bad)
lea
call
xlat
outs
sti
call
out
xor
inc
pop
pop
xchg
jns
dec
cmp
push
add
or
add
fsub
addr16
clc
movs
cmps
push
pop
aam
rol
(bad)
and
pop
repz
push
push
cmps
jp
push
retf
cmp
pop
push
jmp
dec
cmps
pop
mov
push
loopne
mov
scas
inc
das
add
adc
mov
retf
cmp
mov
jns
mov
lahf
loop
sbb
jge
mov
movs
cmc
sub
xchg
cmp
int3
ins
mov
in
adc
cwde
dec
jb
mov
cmp
cmp
outs
sbb
cmc
ret
mov
push
scas
test
dec
cdq
inc
sub
sbb
jge
sbb
add
xchg
loop
mov
or
out
or
adc
mov
sbb
adc
test
ins
test
sbb
push
or
fdiv
sbb
add
fadd
outs
lock
push
adc
add
inc
and
mov
outs
mov
cwde
jge
mov
xchg
cmp
mov
dec
adc
dec
mov
add
leave
cmp
clc
arpl
adc
jmp
pop
movs
mov
push
out
xchg
ds
mov
js
cmp
xchg
mov
pop
ins
sub
aaa
jae
into
xor
add
(bad)
(bad)
sbb
loopne
and
icebp
enter
and
iret
outs
mov
mov
daa
pusha
add
add
push
adc
add
add
into
cmp
jo
mov
sbb
lods
jbe
and
add
xchg
push
dec
xor
jo
xchg
bound
cmp
out
pop
pop
leave
mov
stos
mov
cdq
jo
pop
fwait
mov
gs
sbb
mov
jns
lods
dec
xor
dec
sub
sub
ret
scas
inc
loop
push
popf
adc
jns
cmps
push
hlt
repnz
rcr
inc
inc
pop
ins
dec
dec
mov
es
ror
sub
jge
xchg
das
and
cmp
mov
mov
push
sti
mov
inc
inc
lods
pop
int3
in
lea
aaa
cwde
movs
pop
xor
fisttp
std
bound
cmps
push
push
loop
mov
retf
adc
add
add
or
(bad)
and
ja
push
xchg
inc
jnp
xlat
push
call
jecxz
icebp
add
xor
add
adc
rol
push
jno
sbb
pusha
loope
or
aaa
retf
mov
aas
movs
dec
pop
xor
inc
push
xchg
mov
sub
push
popf
dec
xor
pop
push
add
aad
xchg
adc
adc
jbe
call
adc
mov
mov
shl
mov
fiadd
xor
xor
icebp
sub
into
dec
aad
add
pop
repz
imul
movs
scas
cli
cli
xchg
dec
test
aas
cmp
test
in
sahf
ja
movs
or
add
test
and
out
mov
inc
pop
mov
pop
jle
(bad)
sub
jbe
pop
mov
cmp
or
dec
fdivr
push
test
dec
in
inc
lds
ds
sbb
aas
in
sub
add
cmp
mov
mov
arpl
repnz
add
outs
ret
jb
or
jb
and
jmp
fild
jo
mov
inc
fmul
and
xor
xchg
mov
lods
jae
add
dec
push
mov
cwde
add
mov
sbb
fiadd
pop
push
jbe
aad
pop
and
adc
mov
fs
dec
push
mov
xor
nop
mov
stc
push
ja
jmp
pop
pop
dec
dec
rcr
and
cmp
push
out
or
pop
lds
mov
repz
bound
mov
out
and
sub
cdq
sbb
ja
mov
repz
mov
dec
pop
and
xchg
mov
mov
cmps
jle
add
addr16
movs
sub
in
dec
int3
popf
int
or
dec
adc
add
mov
add
mov
cdq
mov
mul
xor
sub
add
add
mov
ror
fdiv
cdq
mov
jp
sti
inc
cmps
(bad)
push
inc
test
adc
lock
mov
les
cdq
sbb
and
jne
or
dec
push
and
rol
les
mov
mov
into
pop
dec
loop
mov
mov
lods
or
popf
mov
push
mov
cmp
ret
addr16
mov
mov
inc
and
pop
xlat
pop
and
jmp
popa
jne
out
xchg
jmp
stos
mov
dec
int
sar
add
jb
test
jbe
mov
xor
push
push
sub
scas
mov
pop
inc
cmp
add
mov
pop
push
dec
dec
(bad)
cmp
shl
jae
mov
jo
add
shl
or
and
into
add
add
into
jb
xlat
jo
inc
popa
je
and
jne
pushf
sub
push
cmp
xlat
dec
cmp
test
push
sahf
stos
pop
rcl
in
push
sbb
stos
pop
or
push
sbb
inc
dec
pop
(bad)
sar
js
loope
push
je
pop
in
mov
inc
dec
jmp
hlt
jns
push
xchg
int3
fisttp
mov
push
stc
adc
xchg
add
xchg
mov
repz
test
lods
cmp
jne
repnz
scas
xchg
pop
call
mov
enter
cmp
fbstp
(bad)
in
or
fs
adc
jmp
ficomp
mov
cli
inc
xor
dec
or
(bad)
js
mov
mov
add
popa
add
in
inc
ins
jo
push
adc
inc
int3
adc
or
daa
xchg
or
or
and
shr
jbe
sub
lods
dec
aaa
jo
mov
and
ret
and
or
pop
pop
add
dec
xchg
or
(bad)
std
inc
xor
xchg
retf
call
sahf
test
inc
into
(bad)
adc
icebp
pop
scas
mov
test
inc
movs
imul
sub
test
fisub
div
push
stc
into
add
xor
mov
sahf
fcomip
xor
mov
dec
lea
dec
xchg
pop
mov
outs
ret
in
aad
dec
inc
mov
stos
clc
push
inc
cdq
cs
es
mov
jbe
pop
in
adc
ss
adc
ss
jb
dec
dec
push
in
mov
outs
movs
xchg
cmp
dec
movs
(bad)
xchg
aas
mov
push
(bad)
add
test
(bad)
ds
lea
mov
push
in
add
add
jnp
add
push
in
dec
or
cli
or
popf
test
in
pushf
in
add
or
call
jns
lods
ins
xchg
loopne
dec
push
sbb
xor
push
iret
dec
(bad)
inc
adc
sbb
mov
mov
loop
cmp
xor
pusha
xchg
shl
xchg
xor
int3
inc
add
pop
dec
(bad)
jecxz
jge
mov
and
sbb
add
gs
add
ins
adc
jmp
js
ret
add
cmps
cmp
inc
aas
sub
adc
bswap
mov
jnp
or
nop
bsf
ret
cs
pop
mov
outs
rcr
jo
in
cmps
mov
and
mov
mov
fsub
xor
jecxz
daa
inc
aam
xchg
fidiv
scas
push
leave
jg
hlt
cli
dec
mov
fld
test
ss
cmps
sub
dec
sub
nop
push
retf
add
call
cld
inc
imul
mov
or
sub
cmp
loopne
pop
xchg
jns
out
cmp
ret
imul
hlt
and
stos
lea
je
jb
leave
push
dec
aaa
sub
add
sbb
sub
and
test
adc
popf
xlat
add
inc
(bad)
cmc
out
adc
sbb
xchg
test
in
adc
mov
xlat
mov
push
mov
ja
or
mov
in
mov
sub
clc
add
jb
sbb
aaa
cld
or
inc
es
mov
ret
mov
jns
xchg
sbb
retf
xor
lahf
es
pop
test
push
(bad)
sbb
dec
pop
(bad)
cmp
push
xor
mov
mov
push
fmul
ret
inc
lock
into
pushf
cmp
jnp
push
pop
push
jno
popa
xchg
push
sbb
cmp
adc
sub
mov
inc
call
sub
dec
call
in
(bad)
jl
xchg
adc
push
and
ret
jg
mov
aam
cmp
cmc
jne
xchg
call
sar
div
out
and
and
cmp
jle
cmp
mov
jo
mov
push
xchg
mov
xor
mov
ret
cmps
std
gs
xchg
cmp
std
call
sar
pop
leave
sbb
mov
xor
jle
xor
popf
xor
iret
add
xchg
xchg
jmp
dec
push
inc
bound
xor
mov
sar
pop
iret
mov
dec
push
adc
mov
and
mov
push
cmp
jg
repz
cmp
xchg
xor
jl
sbb
push
jl
adc
or
and
dec
xchg
(bad)
mov
lods
js
icebp
inc
xchg
cwde
aam
jle
js
rol
sahf
scas
sub
in
stos
sar
sub
lahf
push
in
push
(bad)
sbb
adc
mov
popa
dec
loopne
push
xchg
lods
sbb
std
iret
jle
mov
pop
jne
leave
rcl
les
stos
gs
mov
adc
shl
cmps
xchg
mov
dec
push
add
push
inc
sbb
lahf
ror
xchg
(bad)
inc
adc
(bad)
cmp
inc
leave
cwde
ins
test
bnd
jns
pop
or
out
mov
(bad)
pop
sbb
and
js
loope
sub
popf
inc
aam
ss
test
jne
jae
outs
mov
out
lods
scas
outs
in
mov
sbb
out
lods
cmp
and
into
mov
push
or
xor
retf
mov
sbb
jae
popf
push
xor
out
jno
fwait
mov
ds
aam
add
xor
test
push
jns
mov
dec
iret
sub
seto
clc
xor
lds
jns
loop
jb
ror
xchg
adc
push
stos
lea
mov
mov
retf
call
sub
cmp
inc
lods
ins
aas
pop
mov
cmp
data16
mov
div
xchg
retf
rcl
jle
xchg
push
outs
je
push
rcl
mov
xchg
mov
inc
ret
fdivr
rol
push
loop
stc
shr
outs
pop
adc
mov
pop
cmps
push
mov
enter
pop
xlat
push
inc
data16
mov
sub
and
push
cmp
adc
test
mov
popa
fs
pop
sub
dec
aad
cmp
imul
or
xchg
call
les
cmp
jecxz
lods
pop
je
xor
xchg
dec
cmp
mov
pop
shl
mov
cmp
dec
dec
cdq
dec
sbb
dec
inc
push
xor
add
inc
pop
inc
sbb
adc
rol
out
cmp
lds
in
adc
mov
idiv
adc
or
imul
ja
scas
pushf
push
fidivr
retf
shl
int3
and
and
xchg
mov
dec
cmp
sub
mov
cmp
lock
xor
pop
stos
mov
push
mov
rcr
sub
mov
sahf
dec
test
cmp
add
or
sub
pop
(bad)
ret
adc
mov
cmp
daa
lock
sbb
pop
pushf
xor
mov
lods
dec
stos
and
shr
inc
imul
or
mov
(bad)
(bad)
xchg
pop
repz
push
in
jmp
int3
or
lods
neg
mov
dec
mov
push
mov
aaa
ret
(bad)
retf
cwde
xor
popa
stos
xchg
mov
push
ja
mov
loop
repz
pop
dec
cmp
sub
lds
loop
mov
cmps
xchg
sub
or
cmps
mov
cmc
ins
cmp
dec
jae
xchg
stos
dec
cli
pop
sbb
rol
int
in
xchg
add
push
out
push
jle
xchg
aad
pop
stos
inc
sub
jns
sti
repz
mov
xor
adc
fmul
sub
in
add
fld
mov
aad
retf
xchg
daa
sub
pop
loop
iret
jecxz
dec
sar
mov
cmp
push
int
pop
adc
sub
or
into
push
dec
sub
add
mov
retf
movs
loope
pop
sbb
push
stos
sub
scas
arpl
jb
iret
bnd
inc
sub
mov
dec
std
daa
push
pop
(bad)
cmps
adc
xor
pop
cmp
jge
stos
cmp
mov
push
(bad)
retf
and
jae
pop
jge
je
iret
pop
xor
push
cmps
loope
jne
jo
push
xchg
fisttp
in
mov
pop
and
das
outs
pop
xchg
inc
push
aam
cmps
mov
add
call
(bad)
inc
dec
clc
and
mul
push
lods
(bad)
cld
mov
push
sub
xor
pop
mov
loopne
loope
fldcw
repz
fstp
fmul
outs
mov
inc
repnz
xchg
mov
jns
cmp
jecxz
in
popf
dec
mov
pop
aas
xor
aas
and
dec
and
push
loop
push
xchg
cmp
xchg
xor
lds
mov
mov
jns
push
out
mov
mov
cli
fist
out
mov
repz
call
xchg
mov
out
mov
or
jecxz
fnstcw
dec
jne
pop
push
dec
xor
into
aas
cmc
sub
or
out
xlat
sub
mov
mul
push
stos
pop
(bad)
lds
jo
movs
gs
jns
xchg
adc
aad
or
rcl
icebp
sbb
cs
in
jge
pop
aam
cmp
and
xor
xchg
mov
in
push
jns
mov
(bad)
aas
hlt
push
mov
icebp
iret
push
mov
or
xchg
test
cmps
fnstenv
retf
test
xchg
fimul
pop
aaa
mov
inc
repnz
add
cmp
cmp
aas
shr
rcr
and
dec
cmps
mov
xchg
or
cmp
test
push
mov
mov
pusha
xchg
push
ret
add
shl
add
pusha
jne
adc
icebp
test
iret
jmp
push
outs
jnp
aas
mov
cmps
pop
add
jg
mov
mov
push
dec
xchg
stos
shl
jmp
lods
leave
and
sub
dec
and
and
popa
lds
test
lahf
mov
jg
mov
push
cmps
retf
pop
ja
fwait
jl
test
and
and
xchg
(bad)
ins
mov
and
or
and
jo
mov
sub
or
add
push
sub
sub
mov
mov
ins
cmps
in
lea
pushf
into
mov
xor
movs
cmps
retf
(bad)
sub
jmp
or
mov
dec
sbb
xchg
xchg
jo
mov
aaa
dec
dec
test
push
xor
js
ror
push
addr16
dec
ss
and
cmp
les
cmp
inc
add
mov
sbb
test
add
fcom
mov
xor
or
push
cwde
xchg
add
mov
loopne
pushf
(bad)
(bad)
cmp
dec
xor
mov
lock
loope
mov
repnz
cdq
mov
jbe
mov
pop
ret
or
int3
or
push
pop
test
cwde
sar
xor
jp
cmps
mov
jmp
aad
xchg
and
inc
cwde
ins
cmp
loop
fisttp
push
movs
adc
and
ss
add
movs
loop
add
add
mov
pop
adc
jmp
dec
xchg
pushf
add
pop
xor
mov
push
fmul
rol
ror
cmc
sub
add
xor
or
mov
fs
jp
add
pusha
sbb
add
fisub
cmp
aad
push
cmp
mov
test
sub
movs
in
aas
shl
xor
mov
ins
cli
inc
cmps
pop
fwait
mov
adc
push
(bad)
std
push
iret
test
pop
mov
repnz
loopne
enter
out
or
cmp
fisttp
adc
sbb
in
push
nop
adc
cmp
stos
enter
jbe
lods
sub
jmp
xchg
or
cld
bound
inc
inc
inc
and
xor
jl
xchg
adc
jge
ror
or
mov
ss
cmp
shr
adc
jl
sbb
popa
xlat
add
cmps
mov
in
mov
mov
mov
cmp
mov
mov
mov
xchg
sbb
into
pushf
and
sbb
and
das
mov
jns
jl
les
jl
mov
and
mov
outs
movs
repz
mov
cwde
imul
shr
add
sub
mov
ret
cmp
xor
push
je
mov
call
fs
sbb
scas
push
jnp
dec
mov
stos
div
sbb
fcmovbe
mov
mov
popf
pusha
jb
jae
inc
sbb
(bad)
add
adc
add
jb
shl
test
inc
jnp
add
imul
aas
xor
test
out
add
add
adc
ja
or
xchg
nop
cmp
add
ret
mov
cmp
loopne
dec
and
popf
(bad)
mov
rol
add
and
(bad)
js
retf
pushf
mov
xor
push
lods
inc
loop
dec
cmp
or
pop
dec
ins
icebp
or
jo
cli
inc
dec
dec
adc
ficom
mov
cmps
push
bound
les
pop
ss
loopne
cmp
movs
repnz
cmp
sti
sbb
dec
xchg
mov
add
or
jmp
ds
add
jmp
mov
scas
xchg
cmp
mov
mov
jne
cld
loop
xor
jno
jno
es
xor
fstp
fs
fidiv
sbb
cmps
cmc
push
mov
inc
(bad)
adc
sbb
jne
mov
push
shr
jmp
xchg
sbb
cwde
outs
jae
ret
pop
adc
test
rcr
xor
cmps
ret
les
js
outs
and
loopne
mov
xor
mov
mov
mov
xor
ja
mov
movs
popf
nop
popf
xchg
ins
out
imul
les
popa
dec
push
dec
retf
adc
push
(bad)
cmc
rcr
cmps
cmc
retf
cmp
outs
out
fldl2t
movs
dec
pop
call
jb
std
pop
cmp
push
sbb
cli
adc
add
in
out
pop
arpl
es
dec
and
imul
push
imul
fst
neg
bnd
pop
neg
add
sub
cmp
inc
mov
ret
jmp
inc
inc
fmulp
aas
or
sbb
adc
and
pushf
test
cmc
mov
push
(bad)
loope
cmp
xchg
lahf
cdq
sub
add
mov
bound
adc
push
adc
out
xlat
add
stc
stos
dec
inc
imul
pop
pushf
mov
out
sub
mov
xor
dec
je
push
sub
xor
mov
lods
inc
push
push
and
stos
mov
jbe
fisttp
or
jae
sbb
fnstsw
sbb
or
add
push
and
test
loope
fisub
pop
push
jae
stos
mov
dec
aad
popa
pop
cwde
fwait
ins
cmp
lahf
out
dec
cs
fild
jmp
aam
xor
xchg
mov
es
daa
xor
pop
imul
sahf
les
sbb
arpl
inc
or
pop
int3
rcr
sub
in
dec
mov
inc
mov
add
in
or
push
mov
jbe
or
pusha
add
iret
outs
xchg
sub
pop
sbb
add
inc
ds
add
into
fadd
add
enter
ror
je
hlt
add
ja
adc
or
sbb
push
cmp
test
retf
mov
sub
not
imul
sub
sti
lea
ror
int3
ins
fld
addr16
or
dec
mov
movs
xor
xchg
rcr
mul
iret
mov
pop
ins
cmp
loope
mov
loop
inc
lods
mov
adc
mov
sub
fmul
into
add
ins
dec
sbb
xchg
int3
ss
xor
xor
push
and
leave
jo
lds
loope
push
mov
push
jbe
inc
out
mov
test
adc
fsubr
jecxz
cmp
push
cmp
mov
frstor
lods
cmp
scas
fld
retf
mov
sub
mov
push
jnp
mov
shl
push
jno
daa
aas
ja
lea
stc
(bad)
push
mov
mov
imul
dec
sub
dec
pop
cs
and
neg
jo
jo
push
icebp
aaa
inc
fidiv
dec
sbb
test
cmp
push
loope
sbb
pop
test
(bad)
jmp
popa
or
xchg
movs
repnz
sub
test
sub
fbstp
dec
das
xchg
mov
or
out
in
fdiv
add
inc
pop
test
inc
cmps
shr
fistp
in
rol
xchg
adc
adc
mov
jecxz
inc
stos
mov
in
xchg
ja
or
mov
adc
in
jmp
out
mov
movs
sub
fistp
add
and
push
adc
je
sub
(bad)
nop
aaa
jb
leave
push
sahf
ret
in
mov
cmc
add
push
and
mov
pop
xchg
aam
out
or
and
jmp
popf
push
lods
mov
pop
mov
stos
fld
adc
cwde
dec
add
scas
dec
pop
push
fist
mov
cmps
dec
mov
sub
call
inc
xchg
mov
ins
movs
nop
inc
add
inc
push
adc
pop
inc
(bad)
(bad)
ins
ror
popa
inc
mov
ins
leave
pop
inc
pop
xor
imul
lods
dec
pushf
test
xchg
or
pusha
and
add
add
xchg
call
jle
cld
jp
adc
dec
inc
fdiv
repnz
out
mov
leave
test
int3
mov
rcl
jns
pop
ret
push
inc
sub
xlat
das
adc
push
(bad)
push
mov
push
sar
stc
retfw
rcr
or
leave
(bad)
std
mov
xchg
lock
dec
adc
outs
mov
push
fimul
or
push
mov
out
dec
mov
dec
adc
stos
loop
out
mov
jo
int3
hlt
fild
dec
add
pop
int3
sar
retf
jge
aam
ret
inc
pop
dec
gs
(bad)
mov
es
stos
xchg
fisub
cmps
mov
daa
or
aam
inc
dec
sbb
adc
sub
push
(bad)
jnp
pop
inc
stos
mov
aad
fwait
xor
jl
jo
inc
jge
stos
icebp
dec
cmps
xor
sub
xor
inc
jbe
fmul
es
addr16
mov
sbb
pop
mov
adc
test
frstor
retf
and
push
fldcw
aas
push
iret
fisttp
pop
xor
inc
jp
push
icebp
jbe
ret
fidivr
mov
pop
mov
inc
mov
add
fcomp
cmp
jmp
and
mov
push
shr
pop
test
cli
push
mov
xchg
out
shl
sub
adc
and
add
jno
inc
clc
(bad)
icebp
(bad)
test
je
addr16
xor
out
pop
push
dec
lea
adc
jmp
or
cmp
in
ret
imul
or
pop
push
jmp
imul
pop
push
test
inc
xchg
mov
mov
repz
retf
sub
in
xchg
dec
pop
leave
push
or
dec
add
call
cmps
mov
dec
push
inc
(bad)
movs
xchg
popf
xchg
aaa
test
int3
in
dec
dec
call
inc
or
jnp
movs
out
shl
sbb
xlat
pop
adc
push
xor
shr
push
mov
movs
sub
add
inc
mov
movs
or
pop
cmp
xor
aam
neg
cld
mov
adc
movs
dec
jbe
pushf
std
movs
fisttp
cmp
(bad)
cmps
data16
(bad)
leave
jmp
adc
ja
or
adc
jnp
mov
xchg
push
nop
jmp
fiadd
jo
fisub
xchg
xchg
sbb
sbb
push
pushf
xor
inc
push
popf
mov
ds
jle
pop
push
int
ror
(bad)
shr
inc
sar
mov
sub
test
sub
push
push
jb
dec
push
mov
loope
iret
cmp
les
jl
std
jge
cmc
scas
dec
cwde
inc
cmps
mov
lea
adc
ret
mov
fwait
sahf
xchg
add
dec
dec
xor
cmp
dec
sbb
xchg
ins
fmul
stos
cmp
mov
ins
jg
das
adc
stos
imul
cmp
jne
les
mov
mov
cwde
jne
xchg
out
js
add
jmp
xchg
test
push
xor
or
cmp
cmp
push
outs
sbb
pop
adc
jl
pop
push
outs
cmp
fst
in
sti
xchg
ss
push
test
pop
add
sbb
test
and
idiv
add
lahf
aaa
push
(bad)
daa
stc
sbb
int3
jne
and
into
(bad)
sbb
std
repz
add
xor
inc
cdq
cmp
outs
or
out
and
dec
ss
or
and
sbb
das
adc
outs
mov
je
(bad)
call
scas
push
es
mov
mov
loope
adc
lods
adc
inc
mov
fnsave
clc
fidiv
pusha
icebp
and
jmp
shl
xor
xchg
fs
xlat
sbb
popf
scas
int3
mov
test
push
jb
adc
scas
pop
and
mov
pop
dec
jo
jecxz
loope
sar
mov
sbb
fmul
sub
fwait
dec
mov
jl
mov
sub
inc
addr16
rcr
cwde
iret
pop
or
sar
inc
sbb
xchg
sti
push
sbb
push
retf
jg
aam
sti
mov
dec
aad
push
sahf
sbb
mov
push
inc
in
mov
sub
mov
add
jns
outs
push
and
and
adc
pop
(bad)
jne
hlt
cmp
inc
adc
push
jmp
imul
inc
mov
xchg
sti
jmp
mov
and
and
pop
jno
inc
stos
not
inc
sbb
sbb
(bad)
dec
cs
scas
mov
xchg
loope
cdq
retf
push
lahf
mov
dec
jno
xor
jne
in
js
mov
pop
push
mov
mov
xor
fmul
xchg
lea
sbb
push
cmp
pop
adc
je
pop
xor
(bad)
cmp
mov
(bad)
cmps
mov
gs
stos
in
loope
test
call
adc
movs
sub
xchg
xor
enter
pop
mov
loope
nop
inc
mov
cmp
jg
in
scas
(bad)
pop
test
movs
mov
leave
push
sti
push
sahf
sbb
aad
inc
mov
mov
inc
movs
xchg
(bad)
mov
pop
jbe
lds
sbb
lods
test
mov
sub
call
nop
popf
dec
shr
test
jp
mov
dec
or
or
pop
sbb
inc
pop
sbb
cmp
lock
call
xchg
mov
jns
cmp
sbb
lods
jecxz
dec
add
mov
dec
js
dec
lea
in
arpl
retf
pop
jl
ins
dec
push
ror
xchg
stc
ds
mov
push
sub
sub
out
fwait
stos
nop
repnz
fdiv
lods
nop
out
or
inc
mov
js
mov
mov
test
add
shr
push
inc
sahf
fwait
mov
cmps
push
jecxz
or
mov
pushf
nop
lods
loop
jo
mov
cmp
pop
sbb
and
adc
(bad)
sub
sbb
jb
cmp
fbld
dec
inc
shl
int3
push
ret
mov
es
ret
mov
xchg
movs
retf
loop
les
retf
and
out
add
jmp
dec
push
test
in
out
jae
xor
cmp
gs
mov
mov
push
add
dec
mov
mov
mov
aad
adc
fcomp
jle
ficom
arpl
dec
inc
aad
jge
retf
gs
xchg
call
jg
mov
jp
imul
adc
mov
imul
leave
dec
fsub
cdq
push
les
sti
movs
jb
and
pop
mov
popf
loop
loope
push
pop
in
outs
jmp
arpl
or
jge
mov
sahf
mov
dec
out
jmp
(bad)
outs
or
cs
pop
jb
sub
pand
cmc
xor
xor
call
cmps
(bad)
loop
inc
int3
inc
xor
dec
js
js
icebp
cmp
je
cmp
(bad)
mov
sti
adc
dec
jnp
cmps
loope
in
repz
push
cld
inc
js
mov
pop
rcl
xor
cmp
sbb
sahf
push
jge
scas
sub
mov
outs
inc
mov
xor
mov
jmp
or
cdq
jno
xorps
mov
mov
inc
(bad)
pop
js
add
inc
icebp
adc
add
jge
or
jmp
inc
xchg
push
gs
retf
add
fld
dec
(bad)
sub
out
push
out
and
add
mov
retf
mov
xchg
add
jmp
bound
xlat
jl
jno
pusha
jo
mov
inc
mov
push
cdq
mov
push
cmp
xchg
fcmove
and
fwait
and
cmp
test
add
mov
push
js
jo
test
jns
xlat
clc
sahf
loop
mov
mov
cld
loop
pop
mov
imul
xor
inc
imul
xchg
ins
movs
sub
(bad)
nop
jae
or
ja
push
xchg
sub
push
or
and
dec
std
mov
add
nop
add
sbb
add
(bad)
add
add
(bad)
or
or
rol
in
mov
add
popf
inc
dec
add
mov
xor
retf
adc
mov
inc
cmps
jno
shl
scas
xor
or
dec
mov
loop
test
dec
xchg
inc
cmps
mov
loope
retf
mov
pushf
jno
inc
and
or
icebp
sbb
jg
sbb
movs
pop
xchg
imul
lods
xlat
sbb
jl
mov
retf
retf
ja
test
ds
push
and
data16
test
fs
add
stos
and
cmp
int3
int3
and
in
inc
dec
lods
xchg
into
and
popf
add
and
iret
cs
fld
cmc
pop
and
(bad)
int3
adc
xchg
enter
adc
jge
and
or
sbb
(bad)
pop
inc
mov
mov
sbb
mov
add
test
xchg
xor
dec
hlt
adc
inc
mov
int3
jnp
mov
or
test
test
mov
add
inc
lods
inc
push
lock
pusha
(bad)
jno
nop
add
jle
dec
data16
add
push
sar
outs
adc
daa
and
sub
aad
jge
pushf
std
pop
stos
ds
lods
movs
stos
sub
push
rol
dec
pop
mov
dec
dec
and
mov
sbb
cmps
push
cld
push
jne
push
pop
cs
add
push
das
pop
mov
sar
xor
sbb
inc
scas
push
mov
daa
jmp
fwait
sar
or
sub
not
lods
cmp
call
jecxz
dec
xchg
fs
test
sbb
mov
jmp
sti
sahf
rcl
mov
div
dec
ins
sub
dec
ins
sub
and
mov
mov
test
les
enter
jle
or
cmc
jecxz
aas
lods
push
and
mov
lods
test
sub
imul
ins
xor
and
push
movs
cmp
clc
inc
aaa
popa
sbb
xor
movs
and
std
(bad)
cmp
jb
and
xchg
dec
in
lods
add
cld
push
fisttp
add
dec
cmp
cmp
adc
mov
cmp
add
sar
dec
or
cmp
nop
sub
jbe
jle
adc
das
jno
and
mov
aad
ja
inc
(bad)
jp
mov
push
rol
stos
fld
mov
lods
inc
jnp
out
inc
jmp
or
lea
xchg
lds
xchg
adc
add
cwde
xchg
(bad)
push
sub
js
scas
dec
jle
xchg
and
mov
fisub
mov
test
test
xor
pop
inc
adc
xchg
int
movs
dec
jae
pop
test
sar
xor
(bad)
mov
retf
and
das
push
adc
cdq
fcmovu
fcmovnb
test
push
mov
push
fild
in
xchg
or
mov
xchg
rcl
inc
inc
cmp
jmp
inc
inc
fmul
inc
ss
test
(bad)
jge
test
adc
fst
mov
cmp
ins
inc
mov
inc
jb
xchg
adc
(bad)
xacquire
and
xor
inc
stc
movs
cs
nop
enter
daa
jnp
imul
and
dec
enter
mov
inc
sbb
(bad)
push
mov
push
push
inc
enter
sbb
mov
mov
push
daa
js
lock
jle
xchg
jns
pop
xor
rcr
movs
jns
imul
jb
xchg
xor
daa
add
mov
push
jecxz
dec
clc
mov
es
xchg
es
mov
loop
stos
popf
push
push
cmp
inc
ss
pop
add
fisubr
mov
push
pusha
mov
jnp
outs
cdq
mov
pop
inc
rcr
or
aas
dec
mov
inc
popa
add
scas
test
and
inc
dec
inc
lods
movs
dec
cwde
out
pop
mov
pop
stos
push
sbb
pop
pop
test
xor
popf
fdiv
cmps
sar
jb
out
xor
dec
pop
sbb
ds
mov
fnsave
test
movs
adc
jl
and
mov
mov
push
retf
mov
mov
pop
push
pusha
jge
push
cmps
fs
imul
push
mov
pop
inc
rcl
or
nop
movs
lods
push
loopne
cmp
mov
clc
dec
aad
sahf
and
or
outs
or
and
out
adc
neg
and
pop
test
stc
(bad)
ins
ret
add
and
cmp
xor
inc
mov
cli
std
and
push
nop
mov
ins
dec
les
cmps
jp
add
out
add
jbe
add
xchg
mov
xor
or
test
xor
sahf
sti
inc
add
jbe
inc
inc
pop
xchg
jns
mov
pop
loopne
and
(bad)
cli
or
mov
sar
add
inc
fnstsw
sub
pop
adc
and
scas
movs
sub
js
jmp
mov
pminub
push
push
jmp
cs
fsub
ds
nop
sar
bound
jmp
(bad)
(bad)
or
mov
sub
addr16
popa
stos
push
addr16
ins
shr
mov
movs
scas
pop
mov
outs
dec
mov
test
push
mov
xchg
daa
das
sub
cmp
sbb
ins
mov
mov
cs
sub
add
xchg
jno
and
mov
push
jmp
bound
cmps
int3
aad
dec
lods
mov
lds
lods
movs
gs
mov
ret
mov
inc
loopne
adc
xchg
ins
imul
pop
cmps
dec
cdq
jg
mov
aad
fimul
js
push
adc
mov
scas
pop
sub
mov
or
xchg
clc
fwait
pop
adc
inc
dec
pop
loop
loopne
dec
adc
sub
sub
movs
or
push
imul
jmp
xchg
dec
pop
sbb
dec
cdq
sbb
rep
jb
ret
in
movs
or
push
(bad)
mov
outs
push
xlat
jo
add
rol
fdivr
addr16
mov
xchg
push
pop
pop
xchg
ins
adc
repnz
stos
xor
inc
adc
or
dec
in
fdiv
imul
retf
dec
(bad)
ja
mov
test
jbe
adc
mov
movs
add
add
push
and
popa
or
ins
sar
leave
adc
aas
add
outs
mov
test
push
fbstp
push
int
movs
and
cdq
inc
fstp
(bad)
cmp
cmp
pop
inc
outs
stos
dec
xlat
hlt
cmps
call
ins
sub
es
xor
jmp
and
jle
int
mov
dec
fcomp
add
adc
fld
out
(bad)
leave
xchg
mov
mov
and
scas
(bad)
sub
les
dec
daa
sbb
in
repnz
push
test
push
mov
add
mov
cmps
inc
push
es
leave
out
or
(bad)
pop
adc
jne
ins
push
test
jle
stos
inc
lods
dec
mov
xor
outs
pop
les
inc
xchg
cli
not
or
pop
xor
ja
xchg
mov
mov
xlat
fs
cmps
xchg
mov
cmp
mov
sbb
gs
mov
mov
das
(bad)
mov
aaa
(bad)
clc
lea
pop
adc
outs
daa
jecxz
shl
pop
sbb
jo
fiadd
fld
jp
jmp
add
jg
and
ds
xchg
xchg
cmp
loope
xchg
je
retf
int
fimul
test
div
cwde
not
out
into
pop
out
xchg
push
sahf
mov
mul
fdiv
lds
sub
in
les
fisubr
sub
pop
jno
lods
dec
dec
push
test
jp
or
mov
mov
std
and
inc
mov
leave
mov
test
jmp
pop
push
scas
dec
or
(bad)
jno
mov
pop
mov
into
sub
pop
sbb
faddp
jno
test
mov
sub
ins
push
andnps
test
es
add
lods
pop
pop
cdq
out
push
test
shr
hlt
test
add
cmps
push
inc
fist
mov
jno
aas
lods
inc
sbb
shr
daa
pop
iret
fimul
and
out
mov
add
movs
into
jo
fnsave
(bad)
sbb
xor
cld
xchg
test
repz
ds
or
retf
(bad)
outs
nop
fs
pusha
ja
add
push
addr16
push
or
inc
lock
pop
mov
scas
(bad)
inc
std
in
push
xchg
push
xor
or
rcr
cs
xchg
sahf
ins
xor
int
bound
mov
sbb
push
adc
es
test
fild
add
inc
mov
loope
mov
adc
xlat
int
lock
lahf
mov
(bad)
or
popf
sbb
data16
mov
mov
dec
iret
shr
or
bound
popa
adc
mov
or
sub
sbb
xchg
test
imul
(bad)
mov
mov
jnp
call
sub
mov
inc
sub
movs
xor
or
ss
adc
gs
shl
data16
inc
lahf
dec
pop
jle
cmp
inc
hlt
mov
cmp
movs
lods
pop
push
sub
cmp
push
pop
je
aaa
in
mov
int
jmp
xlat
dec
inc
mov
add
call
xlat
aaa
inc
xlat
lock
test
ret
sti
xor
push
xlat
and
push
pop
retf
bound
or
(bad)
push
in
push
inc
jecxz
mov
test
push
xor
and
add
dec
inc
stc
mov
mov
xchg
fsubr
jns
adc
xchg
mov
adc
pop
dec
jg
jge
int3
into
xor
aad
scas
pop
sbb
jns
sar
pop
or
call
xchg
cmp
mov
sub
retf
out
test
int
ret
imul
ja
idiv
cmps
xor
sub
(bad)
jmp
jo
mov
mov
pop
imul
dec
pop
dec
push
xor
pop
test
bnd
dec
sbb
jg
mov
mov
pop
sub
sub
and
add
movs
stc
fmul
adc
cmp
mov
and
jmp
test
lahf
cmp
xor
iret
cli
mov
jp
cmps
mov
push
popf
mov
dec
enter
jne
add
cmp
int
push
mov
sub
test
jle
outs
cmp
mov
pop
pop
scas
test
mov
or
es
push
imul
dec
jns
or
xchg
cmp
ja
outs
mov
pop
sahf
or
cmp
push
in
mov
jne
push
imul
fist
dec
mov
and
jne
and
addr16
xchg
dec
inc
mov
js
inc
mov
outs
movs
xchg
mov
cwde
scas
xchg
pop
ret
add
stc
mov
push
cmp
test
stos
imul
jmp
dec
dec
pop
and
dec
fdivr
test
lods
and
jmp
jnp
hlt
xchg
jne
jb
xlat
sbb
inc
adc
aaa
and
fcmovbe
dec
dec
pusha
test
fbld
mov
jl
pop
lock
push
sub
inc
push
test
(bad)
lds
pop
mov
ds
movs
jne
push
test
mov
cs
mov
pushw
mov
test
(bad)
data16
cmps
xor
cmps
(bad)
cmps
cmp
enter
cli
xchg
fdivr
popa
aam
ds
outs
jmp
mov
xor
dec
call
retf
leave
stos
movs
jle
xchg
add
sub
ins
repz
cli
ret
sub
lds
or
xchg
sbb
jmp
jg
cmps
(bad)
rcl
sub
je
nop
jl
xchg
sbb
imul
test
in
mov
imul
or
stos
xor
mov
mov
sbb
mov
or
dec
js
jl
fs
mov
loopne
dec
rcr
xchg
mov
test
xor
jmp
mov
xor
fdiv
jae
ds
dec
add
jb
(bad)
iret
fld
jge
fsubr
rcl
outs
inc
jg
(bad)
cwde
test
cmp
fwait
aas
sti
loope
inc
xchg
bound
clc
sub
lods
jno
sti
cmp
stos
out
es
jmp
stc
test
jbe
clc
outs
stc
adc
sub
sub
dec
ins
adc
pop
inc
cmp
or
jbe
lea
sbb
jecxz
sti
xor
sar
add
mov
xchg
inc
shl
xor
lock
lods
outs
push
push
fsubr
stc
repnz
out
jge
inc
lds
retf
lods
dec
mov
dec
push
(bad)
push
xchg
xor
dec
pop
fstp
ret
int
mov
fwait
jmp
mov
out
lea
xchg
mov
dec
mov
xchg
arpl
(bad)
xor
outs
mov
pushf
movs
and
ins
and
(bad)
mov
fxch
movs
fcom
adc
add
cli
mov
jmp
xor
push
jmp
cmp
adc
push
mov
dec
ins
(bad)
jmp
cli
pcmpgtw
lods
xor
movs
push
gs
scas
ret
cld
(bad)
scas
test
mov
or
imul
repnz
fs
in
jmp
call
cmps
loop
(bad)
scas
jmp
xchg
mov
pop
out
pop
lds
jno
(bad)
aad
add
xor
stos
leave
ja
fdiv
add
push
into
lods
leave
imul
ss
add
pushf
or
out
iret
inc
mov
ins
fwait
ror
cmp
movs
ror
mov
inc
mov
dec
jg
add
adc
lods
test
jmp
mov
or
scas
sbb
loopne
push
frstor
xor
jmp
inc
stos
and
or
xchg
loopne
push
add
(bad)
in
jecxz
neg
mov
pop
adc
stos
pop
add
loope
not
cdq
xchg
add
push
jecxz
sbb
loop
(bad)
lods
loopne
loop
pop
repz
cmp
xchg
adc
pop
cdq
test
pop
jne
mov
fiadd
mov
cmp
xchg
sbb
pop
sub
jbe
mov
imul
pop
movs
dec
dec
retf
fcom
xor
sub
inc
and
pop
rcr
cdq
jno
ret
push
inc
je
not
push
and
xor
jge
scas
adc
cmp
cmp
cwde
cmps
int3
or
mov
pusha
or
repz
inc
cs
push
sbb
jecxz
loop
shl
sbb
cwde
xor
inc
je
mov
(bad)
xchg
mov
stos
jnp
in
mov
fsubr
test
jns
fld
aad
cwde
sbb
dec
and
and
pop
or
add
mov
adc
dec
aaa
clc
rol
rol
add
enter
cmp
xchg
repnz
ficom
dec
add
fadd
popf
add
cli
mov
lods
cmp
or
enter
cmp
adc
dec
sahf
adc
and
stc
inc
cmps
dec
sbb
push
fmul
shr
jo
xchg
retf
push
mov
mov
scas
push
test
outs
(bad)
scas
inc
xor
xchg
xchg
push
mov
fisttp
push
lock
(bad)
mov
adc
push
inc
hlt
sti
adc
push
cmp
push
lods
lea
fimul
(bad)
jg
push
cmc
dec
inc
and
xchg
in
xchg
add
add
mov
hlt
push
shr
(bad)
cmps
jo
cmp
cmps
movs
aam
jmp
inc
out
inc
sahf
push
fmul
cmps
imul
and
sub
movs
xchg
popf
shr
sub
adc
push
push
mov
add
les
and
jo
into
stc
clc
inc
jmp
jge
add
rol
fwait
sbb
frstor
outs
jbe
stc
inc
fsubp
or
push
in
shl
ds
xor
xor
xchg
cli
rcr
and
loopne
xor
mov
(bad)
jmp
mov
aaa
lods
mov
adc
xor
movs
mov
repnz
fbstp
dec
and
sub
jbe
and
lods
and
sbb
add
test
mov
fnstsw
fnsave
jbe
(bad)
in
sti
push
aam
adc
adc
dec
aaa
not
fldcw
sbb
sbb
and
pop
add
std
jecxz
mov
pop
movs
imul
stos
mov
xchg
dec
sub
xor
jae
add
ret
mov
js
ror
mov
pop
js
jecxz
push
call
sub
jno
aaa
ss
fldenv
sub
inc
mov
fiadd
lahf
mov
jle
pop
push
mov
xchg
shr
pop
pop
inc
aas
jns
fidiv
lahf
sub
lds
inc
leave
push
scas
add
ret
and
dec
jge
std
xchg
bound
adc
jge
mov
nop
and
(bad)
aas
xchg
add
aam
cmp
push
mov
fadd
add
add
xor
faddp
cmp
add
sahf
mov
jb
dec
dec
nop
adc
aas
adc
add
(bad)
adc
xchg
fistp
mov
aad
pop
xchg
iret
dec
sar
mov
xor
add
sub
outs
jae
and
movs
and
adc
dec
ja
adc
(bad)
sbb
mov
lods
push
dec
push
pop
imul
xlat
adc
aaa
inc
popa
add
aaa
push
sub
dec
lds
push
js
retf
push
sbb
dec
mov
jle
dec
cmp
sbb
inc
dec
cld
stos
push
fst
jbe
mov
push
and
lods
adc
mov
leave
sahf
and
mov
dec
sub
sbb
mov
ret
inc
cmp
cmps
xor
and
xchg
fs
dec
xor
ins
out
sbb
sbb
or
loop
add
xchg
out
or
sahf
jecxz
sub
add
inc
push
sub
jo
scas
pop
mov
and
test
add
dec
jg
and
dec
adc
lahf
push
scas
cli
loop
dec
inc
add
(bad)
or
rcl
sti
cmps
dec
mov
cli
leave
inc
imul
push
jecxz
jecxz
push
ins
xchg
or
popf
push
fld
lods
push
mov
and
inc
pop
cli
retf
inc
addr16
ret
and
test
adc
push
sub
xor
ins
xlat
add
popf
or
push
rol
pushf
pusha
ret
sub
jmp
fwait
pusha
lahf
retf
dec
push
inc
jmp
and
repz
(bad)
int
dec
aam
repz
jecxz
popf
pop
movs
pop
je
jne
and
xor
mov
into
dec
pop
mov
or
add
loope
fdivr
jp
mov
(bad)
fnsave
xchg
inc
xchg
shr
test
sub
out
push
fst
test
rcr
fisubr
test
sbb
add
xchg
ror
stos
pop
mov
cmps
add
adc
loope
dec
out
xchg
jmp
sub
and
stos
je
jns
dec
leave
jne
int
int3
mov
imul
mov
xchg
xchg
and
inc
fadd
mov
inc
cmp
xor
adc
(bad)
sbb
jmp
push
dec
mov
adc
mov
adc
retf
mov
jecxz
cmc
test
jmp
pop
inc
add
pop
outs
(bad)
mov
and
pop
bound
inc
dec
push
ds
pusha
dec
add
jno
int3
sub
add
or
sahf
popf
dec
or
xchg
sbb
daa
pop
and
imul
pop
add
outs
pop
xchg
out
add
popf
loope
and
jp
or
mov
jmp
jmp
cli
lea
push
xor
jae
add
and
mov
pop
(bad)
mov
shr
sub
cmp
sub
and
ins
(bad)
dec
cwde
outs
in
out
movs
loop
int3
jne
sti
stos
sub
inc
xchg
jno
out
jg
out
add
mov
sbb
out
push
in
cli
fsub
retf
push
lods
retf
xchg
leave
pop
and
ret
inc
sub
jle
or
mov
mov
push
test
int
mov
add
dec
jnp
inc
xchg
cmp
sub
add
pusha
aaa
sub
fistp
push
dec
sub
xchg
cs
push
in
fwait
mov
lods
repz
inc
push
jne
(bad)
test
xchg
jno
mov
leave
mov
ins
jmp
nop
mov
jns
div
xchg
inc
mov
xor
add
dec
push
mov
adc
or
ins
jmp
xchg
mov
sbb
adc
shr
inc
jmp
cs
(bad)
in
mov
aam
push
sti
inc
dec
mov
push
sar
sti
cmp
movs
sub
lods
(bad)
sbb
mov
rol
jbe
scas
mov
das
inc
push
sub
(bad)
test
out
adc
inc
retf
cld
mov
push
pop
xchg
xor
pushf
int
in
icebp
or
lea
es
push
xchg
mov
dec
jno
xchg
dec
and
out
push
stc
test
es
pop
loop
fistp
stc
inc
movs
bound
mov
or
rol
test
sbb
adc
mov
add
cld
test
cli
pop
test
jbe
adc
sar
sub
adc
cwde
jmp
test
out
and
mov
inc
ins
xor
sti
mov
imul
mov
xor
addr16
out
int3
pop
popf
ret
dec
int
int3
and
test
leave
or
mov
and
mov
js
dec
mov
mov
mov
lea
mov
sbb
lea
stos
push
jbe
push
dec
pop
xchg
popf
xchg
push
inc
aad
jno
int3
(bad)
in
mov
pop
jge
loope
push
clc
movs
in
mov
aad
cmp
xlat
adc
clc
add
cmc
pop
rcl
adc
test
adc
push
stos
mov
ret
pop
sbb
rcr
or
test
dec
popa
cli
inc
push
cmp
push
pop
pop
dec
inc
in
add
sub
lods
aam
xor
push
inc
jle
cdq
scas
jo
les
mov
pop
scas
jmp
in
jno
fs
mov
test
outs
cmps
cld
lds
shl
inc
push
addr16
pop
mov
cmp
or
push
dec
cmp
test
or
fs
dec
jmp
sti
mov
adc
xlat
sub
mov
push
mov
(bad)
cli
cmc
xor
rcl
(bad)
xor
mov
xchg
addr16
sbb
cdq
dec
(bad)
aam
hlt
ret
xchg
dec
mov
dec
dec
cmp
retf
daa
cli
loope
movs
dec
retf
sbb
retf
mov
(bad)
loope
cmp
lods
jmp
mov
(bad)
xor
cli
jp
or
cld
movs
sbb
or
cli
mov
push
and
aas
imul
or
out
pop
cmp
push
jns
push
test
jg
out
pop
ins
jns
lahf
std
jae
ficomp
pop
stos
ds
pop
mov
dec
dec
or
scas
stos
mov
dec
or
dec
clc
dec
clc
fs
lods
mov
repz
movs
stos
jne
inc
ficom
adc
xchg
imul
mov
jg
(bad)
pop
xor
add
loope
out
dec
xchg
pop
stos
js
clc
dec
aam
movs
cmp
sbb
xor
mov
mov
mov
ja
mov
stos
ret
movs
loope
and
mov
in
cmp
jl
cmp
stos
jge
int3
pop
movs
fnstsw
xchg
ins
iret
dec
xchg
sti
ds
adc
sar
aas
cld
mov
mov
jno
aas
adc
pop
inc
jle
lahf
(bad)
pop
mov
loop
inc
mov
adc
enterw
pop
rcr
sbb
lahf
lods
(bad)
scas
mov
int3
mov
add
push
repnz
in
ret
not
lock
loope
les
pop
jne
dec
mov
shr
lods
jp
push
stos
mov
xchg
dec
xchg
push
das
sbb
or
(bad)
popf
jo
push
push
adc
inc
scas
outs
or
pop
sahf
push
test
jl
mov
push
inc
test
jmp
fwait
inc
dec
mov
jbe
movs
test
movs
sub
out
cmp
sub
dec
in
dec
xchg
jecxz
sbb
or
sub
std
push
shr
dec
adc
test
lea
out
shl
adc
pop
lahf
push
lods
push
scas
cmp
dec
jl
and
cmp
mov
inc
jg
mov
inc
mov
mov
pop
aad
outs
sbb
sub
lods
movs
mov
xchg
std
mov
add
sub
test
ret
add
push
dec
jmp
push
aas
repnz
daa
jnp
adc
add
ret
add
sub
out
push
test
gs
add
inc
sahf
stc
mov
and
inc
pusha
addr16
outs
adc
inc
inc
xchg
jnp
clc
test
push
(bad)
push
(bad)
icebp
fbstp
ss
js
ficom
daa
sub
push
aam
(bad)
jnp
int3
sub
dec
pop
addr16
fist
and
repnz
sub
jbe
pop
call
loop
cmps
pop
lock
ins
inc
imul
enter
lods
adc
jmp
leave
mov
loopne
loope
test
pop
inc
mov
fnstsw
mov
mov
dec
mov
movs
loope
jno
lahf
add
push
into
adc
jbe
out
movs
out
mov
and
add
push
js
and
cld
dec
push
inc
lock
aas
adc
push
add
push
inc
stc
bound
mov
inc
pusha
out
cdq
sbb
inc
js
add
js
pop
mov
loopne
loope
xchg
(bad)
icebp
xor
out
cld
sahf
daa
mov
leave
mov
sar
cmc
sbb
mov
mov
cmp
push
retf
push
cmp
mov
xchg
nop
jno
mov
leave
outs
sub
push
call
push
push
imul
dec
cmps
push
gs
cmps
fistp
test
je
push
fs
movs
ins
lods
add
inc
test
or
mov
js
mov
sti
pop
pop
inc
jge
les
jmp
call
cmps
es
push
or
movs
push
fnstenv
inc
enter
dec
push
idiv
(bad)
cmp
xor
gs
and
dec
adc
dec
sar
cmps
jnp
lea
jge
dec
cmps
fild
and
mov
mov
jo
data16
shr
jbe
jmp
pop
xchg
cmp
cld
adc
retf
aaa
in
loop
mov
mov
xchg
xor
movs
out
push
push
ss
cmp
repz
icebp
sub
dec
adc
adc
jo
loope
shl
xchg
push
mov
cdq
inc
stos
leave
sub
sub
add
push
aaa
inc
imul
jp
xchg
movs
or
or
sbb
dec
xor
lods
mov
push
lods
dec
push
jmp
cmp
add
out
sub
aaa
retf
or
fisub
jae
cmps
bound
push
cmp
bound
int
dec
add
inc
jle
cs
inc
dec
loopne
or
sbb
aas
cdq
outs
and
sub
xor
sysexit
sub
mov
int
dec
inc
sub
and
and
cdq
cmps
jbe
mov
fmulp
outs
retf
add
mov
push
in
mov
dec
xchg
fs
int
mov
in
inc
push
and
jb
push
lahf
xchg
mov
test
and
inc
es
and
and
jg
and
out
push
shl
jo
repnz
jg
aas
dec
nop
xor
cli
xchg
ret
gs
lock
stos
out
dec
push
xchg
call
fs
sub
cmp
or
adc
aad
retf
xchg
mov
and
or
nop
push
xor
dec
fimul
add
xor
xor
xor
lods
push
xchg
mov
adc
xchg
ins
mov
mov
cmc
and
push
push
mov
pop
leave
cmps
push
jmp
push
xor
inc
idiv
imul
jb
lds
mov
xchg
movs
inc
or
jb
rol
cmp
std
pop
aam
pop
mov
xor
sahf
xchg
mov
fcomip
dec
xchg
mov
sub
shl
out
int3
int3
add
cmp
dec
xchg
jge
rcr
mov
in
push
lods
jmp
call
fiadd
ficom
dec
push
mov
sub
push
inc
mov
mov
sbb
pop
movs
dec
jbe
and
xchg
push
push
cmp
add
rol
outs
mov
mov
popf
(bad)
add
adc
sub
mov
movs
push
xchg
sbb
fadd
xchg
xchg
adc
pop
sbb
fisubr
in
pop
dec
pusha
dec
les
and
and
or
fadd
fiadd
test
jmp
movs
scas
test
mov
ins
fidiv
ss
iret
inc
xor
sub
ret
das
inc
(bad)
xor
adc
movs
cmp
ret
jp
dec
push
fisttp
fwait
jmp
xor
sbb
sub
jle
cmc
loop
dec
stos
jmp
or
xchg
int
retf
shl
inc
cmp
xor
sub
lds
lods
sub
push
in
jmp
mov
inc
jne
jae
int3
push
sub
inc
movs
cmp
add
jmp
cdq
xchg
test
add
cwde
mov
mov
cs
jns
nop
loop
nop
movs
cmp
mov
and
or
sbb
iret
das
out
jnp
call
(bad)
jno
push
and
popf
sar
test
inc
dec
add
add
cwde
xchg
adc
sbb
popf
ror
(bad)
add
add
cmc
cmp
mov
xchg
dec
push
add
inc
aad
dec
outs
cmp
sub
arpl
ss
xor
sbb
inc
inc
inc
inc
pop
dec
in
mov
and
or
int
loope
dec
test
and
inc
movs
xor
rcl
jb
sar
mov
idiv
sbb
add
push
xchg
lds
sbb
popa
int
aad
xlat
cmp
ds
jnp
sub
cmps
ror
aas
js
sahf
add
sbb
sti
inc
cld
push
cmp
inc
mov
cmp
xchg
rcr
inc
(bad)
dec
sub
fwait
sub
add
ja
cli
mov
aam
push
inc
int
cmp
or
mov
xchg
push
fs
xchg
xor
bound
aad
adc
mov
inc
add
mov
pop
push
lea
jecxz
dec
daa
adc
mov
push
jne
mov
adc
pop
push
sub
sbb
jne
push
dec
out
or
in
jmp
mov
sub
fld
and
dec
adc
xor
add
pop
mov
jae
daa
add
das
mov
jp
bound
mov
mov
mov
adc
and
shl
sbb
rol
cs
pusha
and
jge
xor
push
xor
adc
outs
lock
popa
ror
mov
xchg
pavgb
push
and
pop
dec
push
int3
mov
cmps
cwde
popf
dec
loopne
lahf
xchg
cmp
adc
retf
je
cli
cmp
and
pusha
mov
daa
pop
aam
xchg
mov
(bad)
xor
mov
or
fcom
push
stos
repnz
sub
sbb
sbb
loop
imul
push
out
fadd
(bad)
sub
fs
push
adc
int3
mov
aam
or
jno
pushf
pop
xchg
xchg
cmp
fild
rol
iret
dec
inc
ss
mov
dec
cmp
cmc
test
dec
sub
sbb
imul
or
cli
rcl
push
nop
sub
dec
xor
repnz
loop
mov
and
xor
add
cli
mov
jnp
inc
cmp
add
test
test
inc
out
jnp
and
adc
jmp
hlt
xchg
cmps
cmp
pusha
sbb
or
repz
push
ja
add
out
add
add
mov
(bad)
sub
aas
sar
cmp
jbe
div
iret
and
jp
sar
repnz
sbb
scas
add
pop
mov
imul
daa
and
fldlg2
pop
pop
xchg
outs
retf
sub
and
test
xor
and
dec
fs
xor
mov
shr
add
popa
popf
cli
(bad)
fmul
jge
jb
pop
div
imul
sub
in
and
xchg
popa
jns
jl
dec
jmp
pop
data16
lea
fnstsw
cmp
pushf
xchg
inc
adc
mov
or
sub
jl
hlt
and
sbb
pop
mov
iret
add
mov
jne
out
out
cmp
push
push
push
or
push
jge
jecxz
and
loope
add
pop
push
add
jecxz
shl
sahf
rcr
inc
mov
jge
cs
sahf
xchg
ja
movs
sub
pop
outs
bound
pop
dec
imul
movs
dec
add
movq
(bad)
dec
(bad)
loopne
lds
xor
sar
(bad)
mov
out
cmp
rcl
inc
test
scas
jns
jmp
pop
adc
sub
pop
dec
aam
fmulp
or
push
call
mov
xor
mul
dec
gs
pop
ds
push
xchg
pop
jae
xor
xchg
and
call
jbe
dec
div
pusha
sbb
push
nop
xchg
fadd
sti
inc
pop
add
setl
pop
ficom
push
mov
pop
xor
(bad)
test
mov
push
sbb
mov
or
cmps
(bad)
sbb
aam
in
sti
leave
jmp
jb
pop
xchg
fwait
add
popf
dec
adc
hlt
mov
push
leave
mov
mov
test
movs
xchg
jne
push
aam
mov
xchg
pop
or
popf
inc
fs
mov
mov
mov
adc
fisttp
iret
sahf
sysenter
loop
aam
adc
aaa
mov
sahf
fisub
je
jmp
je
lahf
push
cmps
pop
ins
leave
cmp
sub
dec
vcvttps2dq
fs
push
add
(bad)
sub
das
push
scas
dec
push
sar
sub
in
jbe
mov
mov
add
xchg
push
push
sar
dec
repnz
test
mov
jg
jb
sub
shl
addr16
stos
mov
push
pusha
xor
aad
int3
dec
mov
cld
aam
and
add
ins
rcl
retf
mov
es
push
mov
push
ins
dec
sahf
cwde
pop
push
retf
psrld
mov
add
jmp
inc
dec
mov
ins
mov
push
dec
jne
fs
ja
dec
aaa
sub
sub
push
cmp
cdq
cmp
das
sbb
fwait
jns
test
fiadd
mov
es
push
fcomp
shl
cmps
in
retf
push
push
test
aam
cmp
jmp
sbb
mov
addr16
dec
lods
xor
cwde
gs
ja
xor
dec
jb
gs
or
push
je
xchg
cmp
jge
jo
cli
les
stos
push
and
dec
out
ds
(bad)
sbb
out
xlat
xor
xchg
ins
and
push
or
test
and
sub
stc
push
int
cmp
adc
xchg
inc
mov
or
(bad)
movs
inc
imul
mov
and
jno
pop
mov
and
mov
leave
sub
xchg
lods
pop
scas
call
mov
jb
bound
ins
cwde
mov
cmps
push
inc
sub
movs
fadd
inc
setl
pop
pop
mov
out
jmp
sub
add
retf
or
sbb
dec
xor
sar
fistp
inc
psraw
cmp
mov
push
imul
dec
xchg
call
iret
pop
(bad)
shl
movs
pop
push
cwde
sub
popf
ds
aaa
bound
push
stos
int
mov
imul
mov
jecxz
test
aas
push
(bad)
or
out
dec
test
sbb
push
rcr
cmps
mov
movs
sub
xchg
jae
rdmsr
jge
mov
popf
cwde
lea
jg
sbb
mov
pop
in
xchg
imul
push
int
and
(bad)
jp
pusha
popa
dec
pop
jae
push
enter
xchg
popf
xlat
add
inc
pop
adc
push
popa
pop
mov
add
add
pop
xchg
lahf
mov
jno
lods
or
into
es
fldl2t
cli
push
and
outs
mov
lods
(bad)
sbb
fadd
jb
nop
dec
aam
rol
enter
jp
or
call
and
sbb
xchg
adc
dec
dec
sar
or
scas
ja
jge
loop
jmp
mov
retf
jb
test
pop
push
jmp
inc
or
mov
pop
enter
dec
push
adc
fucomip
xchg
or
jge
aas
movs
sbb
adc
fs
daa
jle
inc
test
push
(bad)
pop
in
cwde
mov
pusha
inc
add
and
nop
and
xchg
xchg
adc
ins
aas
dec
lock
daa
in
inc
imul
pop
jecxz
int
dec
aam
dec
xchg
je
mov
test
xchg
jnp
int
add
clc
vminps
inc
enter
outs
jmp
in
xlat
shr
ds
retf
fadd
jns
or
loopne
fild
das
hlt
mov
fwait
pushf
mov
stc
aam
scas
sbb
add
or
outs
jb
ficomp
and
lahf
sub
or
les
mov
mov
cwde
lea
ret
lods
fwait
xchg
inc
icebp
mov
xchg
jle
push
adc
xchg
(bad)
fwait
repz
lahf
(bad)
fidivr
xchg
push
es
aaa
sbb
std
cld
outs
xchg
cmp
jmp
add
mov
xchg
mov
das
test
fcomp
push
aad
in
push
mov
and
lods
leave
mov
push
test
xchg
adc
adc
sahf
pop
pop
loope
push
arpl
xchg
arpl
inc
mov
jl
inc
les
push
mov
imul
add
xchg
rcl
(bad)
sub
test
mov
and
mov
leave
push
sub
ss
adc
push
inc
mov
sti
ret
in
lahf
xor
sub
lahf
xor
sbb
or
pop
pop
pop
mov
jb
mov
xor
add
arpl
jecxz
add
mov
ficomp
xchg
mov
cld
loopne
pop
cmp
mov
daa
pop
lahf
test
jg
or
data16
scas
int
sub
pop
movs
test
or
add
and
inc
stos
ja
rol
ficomp
pop
mov
mov
pop
and
xor
cdq
or
cmp
push
stos
lahf
push
popf
mov
cli
push
lock
mov
lods
mov
test
dec
retf
push
xor
ficomp
popa
fucom
mov
add
adc
mov
lahf
lods
cmp
fiadd
add
jmp
cmp
dec
fadd
jmp
and
mov
std
mov
das
xchg
xchg
std
pop
dec
cmps
fdivr
or
jg
cmp
movs
sub
push
sti
xor
test
inc
add
push
outs
dec
add
inc
sbb
jno
pop
and
push
fs
mov
push
dec
xor
out
add
loopne
jne
mov
pop
mov
movs
stc
out
push
cmc
cmps
jecxz
cmc
push
stos
dec
sub
int3
xchg
pop
fisttp
pop
in
fisttp
adc
mov
mov
sahf
aad
maxps
or
dec
push
ins
lods
hlt
push
mov
out
pop
mov
cmp
shl
xor
adc
add
(bad)
mov
aad
(bad)
fild
push
or
addr16
push
xchg
adc
je
fisub
inc
xchg
cs
ds
sub
inc
dec
mov
loop
clc
loope
mov
js
mov
movs
jo
stos
xor
mov
or
jbe
in
rcr
loope
push
cmp
add
xchg
mov
es
mov
lahf
in
xor
scas
and
(bad)
jle
lods
mov
es
jns
mov
in
aad
mov
(bad)
push
cmp
sbb
xchg
out
mov
adc
push
mov
cmps
pop
aam
push
mov
or
movs
mov
jge
aas
cmp
sub
es
pop
mov
pop
fsub
xor
cmp
(bad)
fist
or
cwde
add
nop
adc
inc
add
or
stos
add
outs
cmp
and
add
and
fwait
mov
pop
xchg
js
scas
jns
jne
and
sub
push
xor
and
in
shl
push
xor
and
retf
xor
gs
vxorps
add
cmps
cmp
push
cs
in
ret
add
retf
adc
cmp
and
test
push
je
mov
test
mov
mov
aaa
mov
mov
add
xchg
dec
fiadd
retf
out
add
in
jl
jb
sbb
jnp
and
fisubr
pusha
(bad)
aaa
test
aaa
sub
ds
pop
jo
daa
sbb
push
sar
shl
pop
xchg
addr16
dec
mov
fnstenv
cdq
fwait
mov
xchg
mov
pop
jno
xchg
aam
mov
add
dec
scas
lock
push
out
frstor
xor
int
lahf
adc
sbb
test
mov
sub
les
test
adc
cmp
ret
sbb
jl
test
dec
ror
ror
sbb
lea
bound
jne
sbb
jmp
add
xchg
punpckhbw
add
inc
fadd
add
add
pop
ins
ja
push
or
adc
popa
pusha
adc
xor
dec
sbb
and
xlat
inc
push
xor
xchg
sar
test
cli
mov
test
xchg
sub
test
mov
and
(bad)
pcmpgtw
test
div
(bad)
shl
cmps
mov
dec
xchg
ins
ins
int3
mov
shr
add
mov
neg
inc
jmp
std
shl
dec
sub
movs
xor
or
xchg
push
inc
imul
jmp
inc
aad
mov
in
jns
cli
std
inc
jp
pop
xchg
xchg
xchg
dec
sbb
test
pusha
and
and
dec
call
push
es
test
push
push
cmc
dec
dec
dec
lods
movs
sbb
dec
aam
mov
retf
call
jno
cmps
cdq
push
fwait
jle
dec
push
es
jo
inc
das
aaa
mov
mov
sbb
test
adc
cmp
div
das
push
pop
test
stc
retf
imul
jl
retf
cmp
inc
sub
popa
add
add
rcl
adc
push
ror
push
fild
add
int
jle
and
inc
and
cmps
rol
push
(bad)
out
jnp
mov
and
retf
add
mov
scas
outs
dec
push
mov
adc
loopne
repnz
cmp
les
mov
call
adc
mov
inc
dec
pop
mov
nop
pop
movs
mov
jbe
cmp
retf
mov
mov
add
mov
and
mov
lock
push
xlat
outs
dec
int3
fisubr
or
jecxz
push
leave
or
test
dec
les
jne
adc
cmp
mov
nop
cmps
aaa
push
mov
sub
xor
adc
ret
or
jle
call
and
mov
shl
xchg
inc
fcom
xchg
sub
pop
rol
mov
movs
jae
dec
iret
mov
push
cmp
inc
fld
fnstsw
in
fidiv
mov
push
int
xchg
scas
mov
mov
inc
cmps
int3
adc
mov
repnz
scas
jle
push
adc
lods
sub
push
sbb
fcom
cmp
ss
sti
push
sub
stos
cmc
fld
add
cmps
xchg
aam
pop
push
test
into
loopne
xchg
out
pushf
test
pop
call
mov
inc
jmp
dec
(bad)
dec
xor
in
xchg
(bad)
sbb
jae
sub
leave
dec
cmovg
out
movq
ss
jmp
test
sub
cmps
rcr
adc
add
mov
dec
sbb
in
jmp
and
jb
and
in
mov
jb
ja
mov
(bad)
and
xor
adc
lods
dec
mov
and
or
out
jno
sbb
mov
cmp
scas
sar
shr
jnp
sahf
pusha
repz
xlat
(bad)
test
lds
ror
in
and
cmp
pop
sbb
bound
cmp
mov
push
and
jl
outs
leave
imul
mov
mov
dec
test
jg
movs
sar
cmp
mov
push
lods
mov
mov
mov
inc
mov
ret
stos
sbb
fiadd
cmp
les
xor
sub
ficomp
int3
test
xchg
fwait
pop
mov
(bad)
jl
leave
mov
movs
jge
aaa
out
and
mov
push
xchg
aad
jp
or
and
retf
add
jno
pop
sbb
shl
arpl
retf
and
dec
push
maxps
cmovs
inc
(bad)
push
(bad)
leave
and
enter
mov
jo
and
pusha
or
add
(bad)
and
movs
cmovl
inc
push
sbb
ds
leave
and
es
cmp
add
cmp
add
push
cmp
mov
or
ror
inc
les
pusha
add
jo
and
ds
fadd
repnz
sbb
in
inc
mov
adc
scas
in
punpckhbw
and
push
call
push
ror
and
mov
leave
push
in
cli
mov
(bad)
repnz
rep
and
xchg
adc
jp
xchg
in
out
mov
jbe
jg
scas
test
inc
mov
sub
lea
std
dec
movs
mov
mov
mov
dec
adc
and
popf
rol
or
mov
test
(bad)
aad
outs
enter
shl
movs
push
movs
xchg
xor
shl
adc
adc
ror
dec
test
fmulp
or
addr16
cld
cmp
out
leave
imul
jmp
pop
int3
pushf
push
and
push
rcr
inc
js
arpl
pop
lds
into
(bad)
jo
data16
dec
stc
dec
in
in
mov
jg
cdq
cdq
stos
leave
rcr
mov
and
jle
push
fnclex
das
mov
jl
aad
xor
sbb
or
xor
mov
xchg
xor
aaa
ins
push
add
dec
sub
mov
xchg
cdq
je
sbb
inc
mov
push
adc
rcr
(bad)
loope
cmps
fdiv
dec
imul
or
ja
adc
cmps
and
out
mov
cmp
into
test
sub
push
lock
lods
pop
mov
sub
fist
les
shr
mov
mov
cli
inc
jae
xchg
popf
mov
adc
shl
int
les
mov
inc
hlt
lods
rol
movs
jne
iret
inc
cmps
test
cdq
aaa
or
ins
inc
inc
inc
(bad)
add
xchg
fisttp
test
imul
stos
mov
mov
pop
mov
sub
push
pop
repnz
xor
stos
xchg
bound
mov
sub
jbe
jb
and
imul
xchg
ret
and
shl
stc
inc
jmp
popa
icebp
test
inc
leave
daa
and
outs
mov
fs
paddw
dec
inc
rcl
push
sub
pop
add
enter
es
dec
scas
pop
mov
dec
lds
xor
push
push
and
rcr
test
addr16
cmp
in
mov
jno
aas
ror
test
sub
xchg
lods
push
cmc
mov
lea
add
ja
aam
push
gs
inc
fistp
inc
cld
jno
addr16
stos
nop
lock
inc
cmp
shr
lea
out
xchg
dec
dec
aam
mov
push
cmp
push
add
ins
or
fimul
test
popf
mov
(bad)
mov
sbb
mov
lea
jnp
mov
out
dec
jl
stos
mov
stos
mov
retf
inc
mov
in
sbb
dec
xchg
dec
push
xlat
or
test
jno
lods
jp
cmp
adc
xchg
aam
jae
lods
jecxz
mov
jno
xlat
or
mov
inc
inc
push
mov
and
leave
scas
scas
push
daa
xchg
stc
pop
sbb
push
mov
imul
mov
retf
jle
inc
mov
xchg
cmp
gs
push
and
mov
int3
mov
(bad)
inc
mov
aas
lea
jne
jecxz
mov
retf
(bad)
(bad)
jp
push
xchg
push
popf
cmp
mov
and
daa
ror
(bad)
pushf
push
lods
jne
shl
adc
sahf
inc
mov
push
add
mov
fcmovbe
sub
aam
mov
jae
adc
jp
leave
sbb
mov
jo
jmp
mov
ins
dec
(bad)
adc
hlt
xor
pop
sub
lock
cmp
xchg
pop
(bad)
sub
adc
pop
sbb
sub
adc
pop
popa
xchg
pushf
or
gs
mov
sub
in
inc
stos
nop
ficomp
jecxz
cmp
or
push
dec
(bad)
mov
dec
nop
adc
xor
mov
and
fdiv
cli
inc
leave
mov
pop
dec
adc
loopne
add
and
cmps
add
icebp
sbb
int
mov
in
inc
xlat
fmul
ja
mov
addr16
stc
sub
ror
add
jle
je
and
push
xor
lods
and
(bad)
lods
xor
sahf
xchg
sub
xor
adc
aas
mov
in
adc
dec
fisub
pop
dec
dec
jp
or
ror
push
sub
xchg
jecxz
sbb
pop
add
ret
dec
fdiv
mov
mov
sti
movs
dec
cmp
or
f2xm1
and
cld
sbb
xchg
mov
stos
pop
push
push
mov
push
retf
daa
dec
push
xor
mov
jle
loope
mov
pushf
movs
imul
mov
cdq
mov
xchg
dec
add
jno
push
push
jnp
aaa
pusha
cmp
icebp
not
cmp
dec
stos
xchg
sbb
scas
loop
stos
cmp
cmp
sub
dec
jmp
bound
xchg
in
and
jb
in
and
test
xchg
pop
inc
das
ret
(bad)
jmp
mov
jne
inc
sub
pop
mov
bound
jns
xchg
test
in
inc
repz
jns
dec
outs
movs
lods
mov
stos
pop
ins
ins
pop
rcr
sub
stos
hlt
cmps
gs
xor
jp
scas
push
int
sub
xchg
xor
mov
mov
inc
and
push
dec
dec
push
iret
mov
repnz
cmc
in
adc
ds
and
pop
dec
jnp
sub
push
push
xor
xchg
mov
and
jge
add
mov
out
adc
pop
inc
xor
sub
(bad)
sahf
bound
sar
stc
rcr
push
inc
or
xchg
stos
push
aad
stos
sahf
pushf
adc
sbb
mov
push
xor
mov
in
push
sbb
icebp
add
hlt
mov
pop
and
mov
test
xchg
daa
sub
dec
mul
sub
jne
iret
jecxz
loope
rcl
mov
popa
loope
movs
sub
mov
gs
int3
arpl
addr16
inc
pushf
cli
iret
push
xor
dec
xchg
dec
retf
jmp
fcmovnb
mov
pop
cmp
cmp
stos
jmp
ror
jg
jmp
(bad)
add
cdq
jg
or
in
jae
cmp
adc
pop
sbb
dec
pop
aam
ds
lods
mov
call
out
fcomp
sub
xchg
xor
sar
sbb
cmp
adc
push
xor
mov
inc
jo
xor
mov
stos
push
scas
mov
into
fcmovbe
mov
mov
pusha
xchg
xlat
test
mov
mov
push
xchg
xor
sub
mov
leave
(bad)
or
out
sub
ds
cld
int3
mov
fdiv
fcom
push
mov
or
sbb
push
push
mov
cmps
ror
inc
jbe
sub
and
xor
adc
jno
(bad)
sahf
mov
fninit
mov
dec
adc
xor
push
test
xlat
in
aam
mov
mov
xor
inc
cs
adc
adc
ja
cmp
pop
inc
or
jo
jg
sub
js
xlat
stos
push
mov
mov
dec
sub
dec
lahf
xor
pushf
adc
fldenv
xchg
cmp
push
jmp
jb
iret
and
aad
daa
sbb
aam
test
add
mov
push
(bad)
(bad)
mov
or
seta
loopne
push
clc
adc
fisttp
xchg
adc
dec
sbb
iret
mov
enter
std
ss
cwde
cmps
aam
pop
fldcw
fwait
jo
leave
push
xor
and
jl
jo
stos
sar
mov
xor
push
lods
fstp
xchg
xchg
das
cmp
cmp
jne
xchg
mov
and
xor
cmp
fidivr
cmp
repz
xchg
xlat
inc
cmp
xchg
mov
stos
js
icebp
push
lock
popf
les
call
call
push
pushf
jmp
test
lock
jmp
mov
movs
mov
or
mov
dec
loop
dec
cmps
lods
jp
or
int
scas
call
add
inc
xlat
and
je
repnz
add
mov
aad
push
or
fwait
sbb
retf
xlat
fisttp
pop
js
aad
push
sar
jb
sar
xor
ins
aad
sbb
pop
sar
mov
dec
or
movs
je
sbb
mov
add
(bad)
jne
les
mov
loope
mov
jb
push
xchg
mov
mov
(bad)
cdq
jne
(bad)
xor
push
ss
mov
test
ds
cmp
aas
sbb
jnp
pop
inc
sub
sbb
push
dec
cmp
frstpm(287
adc
fcom
fdivr
and
adc
sub
sbb
hlt
jmp
dec
cmp
sbb
sbb
add
sub
test
sbb
cmp
cmp
jge
jg
push
rcl
jo
ficomp
mov
mov
(bad)
call
jl
jo
repz
std
jmp
fdivrp
cmp
(bad)
out
bound
leave
ds
mov
aad
aaa
inc
pop
adc
ret
cmp
and
and
cmp
retf
pushf
jp
sbb
xor
test
lahf
or
sbb
pop
adc
cmp
mov
aas
ins
cmp
out
cmps
aad
cmp
gs
xchg
cmp
jb
out
and
adc
inc
cmp
jecxz
cmp
pusha
add
fs
lods
cmps
mov
pop
aad
mov
aam
into
push
stos
push
sub
pop
imul
inc
push
cmp
or
mov
push
mov
(bad)
jno
imul
mov
jbe
or
in
sub
mov
(bad)
jno
fwait
push
inc
cmp
cmp
dec
dec
and
lds
dec
and
cli
loop
dec
add
jnp
xor
add
add
cmp
int3
xor
adc
inc
ja
add
jp
jmp
fld
rcr
dec
cwde
lds
shr
cmp
add
inc
je
jmp
add
test
adc
fadd
pop
jmp
cli
inc
add
and
cmp
push
shl
mov
xor
nop
bnd
adc
outs
adc
mov
in
mov
pop
push
jmp
mov
jnp
int3
mov
fs
(bad)
mov
inc
mov
mov
inc
push
cmp
lds
push
pop
cs
cdq
inc
mov
leave
out
or
mov
ins
or
sahf
xchg
aad
inc
test
cmp
fistp
xchg
(bad)
jmp
sub
leave
dec
inc
sbb
and
movs
movs
dec
pop
mov
xor
add
int3
out
sti
test
xchg
add
add
push
mov
xchg
adc
dec
shl
xor
sub
nop
xor
sahf
nop
icebp
xor
cmp
dec
gs
fcmovnbe
mov
hlt
xrelease
sbb
add
mov
push
clc
dec
ret
ins
aas
int3
jnp
arpl
(bad)
loopne
cdq
jmp
dec
and
add
mov
xchg
dec
imul
xchg
fs
imul
lods
add
and
push
xlat
mov
(bad)
xor
or
call
ror
xchg
inc
push
pop
arpl
mov
inc
push
xchg
out
out
sbb
push
mov
mov
sub
pushf
das
pop
mov
adc
sti
mov
jmp
test
cld
stos
mov
add
inc
pushf
jae
push
fbld
stos
mov
xchg
lds
xor
stos
xlat
ret
jns
sub
dec
mov
jg
xchg
add
fsub
add
jbe
mov
in
repz
mov
sub
ret
adc
push
xchg
mov
dec
inc
or
test
cmp
xor
aaa
sub
dec
xchg
mov
sub
jne
in
sub
cld
push
mov
push
(bad)
sub
test
push
retf
push
lods
inc
cwde
sub
and
cwde
push
push
stc
aas
pop
pop
in
icebp
push
fs
xchg
shr
pop
es
jo
sub
mov
jmp
lods
jae
fs
ins
mov
cs
push
stc
add
cmps
mov
test
cmp
loope
les
xchg
outs
dec
call
inc
out
leave
xor
int
cmp
dec
cld
xor
or
out
loopne
idiv
ret
mov
mov
mov
sahf
lds
mov
cmc
outs
pop
fld
mov
push
or
imul
cwde
mov
mov
push
pop
stos
jl
jmp
outs
push
sub
jae
add
cmp
and
push
pop
cmc
sbb
add
shl
adc
rcl
out
or
and
sbb
mov
pushf
lea
lods
sub
loop
dec
add
mov
push
adc
push
mov
mov
ins
push
lods
out
jle
daa
jle
pop
les
test
out
dec
inc
sub
or
sbb
jmp
bound
and
push
bound
ins
mov
push
ret
xor
test
clc
sbb
lock
pop
arpl
test
(bad)
sbb
dec
(bad)
push
shr
sub
test
mov
and
xor
dec
ds
xchg
or
and
cli
lds
ss
xor
ja
cmps
and
push
fstp
xor
sub
gs
into
add
dec
dec
push
(bad)
cmps
in
mov
fisubr
mov
ficomp
je
lds
xchg
cli
mov
jnp
jno
pop
sbb
fidiv
hlt
stc
mov
push
xchg
into
leave
push
adc
mov
shl
push
xor
pop
lock
popa
cmp
dec
loopne
nop
dec
retf
xchg
mov
adc
mov
push
rol
and
jmp
or
clc
inc
test
paddsw
cmp
mov
nop
adc
sbb
add
gs
pop
mov
xchg
rcr
xor
fild
fdivr
loopne
xchg
popa
sbb
popf
cli
shl
inc
jo
xor
aad
and
cmp
jecxz
je
or
jmp
mov
push
pop
jnp
mov
mov
test
xchg
jecxz
mov
test
dec
push
and
nop
inc
add
ja
dec
push
inc
mov
btc
mov
(bad)
cmps
out
or
sub
daa
adc
xor
test
xor
mov
sbb
xor
and
jge
int3
loopne
cmc
push
dec
cdq
push
cmps
dec
cmp
mov
gs
outs
ja
test
mov
jo
push
dec
div
ror
data16
out
and
out
(bad)
mov
dec
xor
and
shl
leave
push
xchg
scas
sub
ret
mov
pop
mov
or
xchg
mov
out
pushf
push
jmp
or
test
dec
les
push
push
imul
xchg
or
aas
jge
sub
in
push
sub
cmp
xor
js
mov
jmp
push
cmps
lods
out
jnp
(bad)
movs
das
not
retf
mov
sahf
inc
jge
xor
(bad)
movs
jnp
(bad)
ficom
fcom
add
scas
stos
push
dec
jbe
adc
inc
mov
cmp
cdq
retf
jecxz
dec
cdq
ins
ins
cmp
mov
fldcw
cmps
add
(bad)
mov
push
dec
or
jno
push
add
xor
inc
cmp
xchg
(bad)
pop
inc
lods
ficom
sbb
jne
push
(bad)
jmp
int3
retf
movs
mov
ja
xchg
data16
or
mov
cmp
in
mov
jb
sub
dec
mov
loopne
xor
movs
cmp
or
adc
add
mov
fisub
push
add
adc
and
and
fcomp
(bad)
and
shr
nop
xchg
pushf
loop
mov
or
fdiv
and
lods
sbb
cmp
(bad)
mov
adc
mov
in
jmp
mov
aaa
mov
pop
mov
push
lods
push
ins
pop
lock
pop
xchg
call
int3
push
sub
mov
and
jle
xchg
retf
clc
jecxz
push
das
jns
adc
or
jo
lods
jle
call
arpl
sbb
xchg
fadd
jne
push
stos
xchg
mov
mov
mov
mov
(bad)
mov
ins
(bad)
xlat
cmp
cmps
in
aas
(bad)
jae
adc
rol
dec
cmc
jmp
not
push
mov
sahf
loopne
mov
add
dec
mov
adc
push
cmps
push
scas
and
outs
jp
cmp
mov
jecxz
sub
inc
jle
inc
xchg
jle
xor
fcom
pusha
pop
add
sbb
dec
fcomi
inc
pop
push
aaa
test
push
push
pop
pop
enter
enter
dec
das
cmp
test
(bad)
mov
mov
test
cmp
xor
fist
xchg
inc
pshufw
fs
mov
scas
xchg
inc
in
jl
cmp
mov
mov
repz
cmps
push
fs
fxch
cmp
jbe
mov
outs
sub
out
retf
mov
movs
je
pop
sub
sub
inc
push
cmp
lods
cdq
cmp
push
bound
fsubr
adc
rcr
mov
jmp
mov
arpl
(bad)
jne
add
rcr
xor
xchg
cmps
out
cmp
lds
dec
sahf
pusha
cmp
inc
sub
mov
les
adc
push
add
inc
mov
aaa
int
jl
ror
sahf
std
mov
push
adc
nop
dec
push
repnz
inc
add
cld
loope
pop
adc
xor
mov
xchg
daa
jmp
push
fwait
sbb
popa
sbb
mov
js
push
dec
push
pop
cwde
push
ins
sub
xor
mov
jecxz
das
aad
xchg
lods
inc
jecxz
push
push
mov
outs
jno
mov
fstp
sbb
(bad)
ins
or
arpl
sahf
and
ror
xchg
stos
mov
pusha
xchg
cwde
fwait
out
and
sub
xor
mov
outs
fs
mov
mov
sahf
mov
(bad)
dec
lods
xchg
xchg
pop
mov
cmps
inc
ja
adc
mov
cmp
scas
fcom
and
mov
iret
xchg
pop
push
vpmulhuw
out
and
cs
(bad)
repnz
push
jns
or
sbb
shl
add
dec
daa
aam
xor
pop
push
lods
push
xchg
das
jge
stos
mov
popf
xchg
jae
in
xchg
inc
jo
add
out
mov
outs
sub
add
out
push
std
pop
nop
mov
push
cmp
outs
lds
fwait
movs
test
dec
pop
rol
sub
sub
or
push
test
test
sbb
int
dec
sar
data16
jne
icebp
scas
dec
nop
jne
dec
in
fisttp
jae
and
cmp
or
cmps
pop
cwde
arpl
idiv
mov
aaa
loop
inc
xlat
add
ficom
xor
or
push
inc
cmp
lock
add
or
stos
mov
ret
mov
sub
pusha
inc
pop
mov
add
pop
movs
xor
inc
cmp
cmp
mov
push
cmp
and
add
outs
ds
mov
and
inc
bound
loop
add
sahf
xlat
movs
ficom
retf
and
stc
sbb
(bad)
xor
retf
int
movs
cmp
mov
push
fmul
fwait
push
or
imul
loope
mov
in
mov
ja
shl
mov
aad
loopne
dec
jecxz
mov
stc
push
pop
xchg
xchg
sub
add
adc
xchg
mov
psllw
mov
sar
fsub
cmps
call
add
xlat
push
aaa
pop
aam
pop
pop
int3
jecxz
cmp
inc
mul
cwde
out
ret
add
aas
sti
sbb
out
inc
pop
adc
xor
sbb
inc
sar
jne
rcl
push
std
in
fdiv
mov
dec
ss
out
jle
mov
rcl
adc
xchg
out
cmp
scas
jno
les
imul
fst
call
shl
pop
adc
test
loop
push
jecxz
add
inc
call
cli
and
(bad)
loope
lock
loope
movs
fimul
and
lods
push
shl
mul
mov
xor
lea
std
js
fcmovb
mov
dec
fdivr
sub
push
add
lea
xrelease
mov
pop
add
in
jecxz
stos
call
mov
repz
sub
retf
stc
fistp
aam
nop
repnz
pop
dec
cdq
inc
shr
and
sub
cmp
mov
inc
jb
or
les
jge
sbb
fwait
pop
adc
lahf
jno
movs
fs
into
mov
or
xor
xchg
mov
movs
loope
jge
cmc
sub
call
ror
jl
icebp
dec
enter
or
or
mov
and
lods
cs
xchg
mov
cmp
push
and
movs
add
hlt
xor
adc
mov
or
xchg
(bad)
jo
lea
std
cmps
mov
mov
(bad)
shl
jbe
adc
popa
pushf
movs
mov
inc
jb
pop
int3
cmc
retf
lock
js
retf
xchg
cmps
cld
cmp
mov
imul
mov
xor
out
shr
jne
fisttp
lods
sub
sub
push
push
hlt
retf
imul
nop
dec
pop
adc
push
pop
call
cmps
in
mov
loop
add
add
and
inc
pop
bnd
sub
mov
pop
or
cmp
dec
xlat
lods
ins
aam
dec
or
stos
(bad)
push
scas
mov
test
cmp
pop
retf
xor
ja
enter
int3
cmp
dec
or
jmp
cs
imul
mov
cmp
push
pop
lods
xchg
dec
push
pop
xchg
pop
add
std
loopne
fsub
cdq
pusha
stos
xchg
sub
dec
pop
sub
push
push
ror
sub
cmp
mov
jp
movs
mov
movs
stc
pusha
int
sub
out
jb
sbb
cmps
or
fld
jnp
push
cmp
mov
lock
cdq
fadd
push
jns
sar
out
inc
fild
xchg
and
jmp
adc
jb
dec
in
fisub
leave
scas
add
adc
outs
rcr
outs
add
fs
icebp
sub
pop
daa
cmps
xor
shl
out
sub
push
test
aam
(bad)
retf
nop
xchg
movs
adc
and
mov
mov
cmp
fwait
inc
imul
jbe
dec
push
sub
loope
jmp
jl
icebp
push
jbe
loope
pop
dec
int
icebp
push
scas
aaa
(bad)
adc
outs
push
lods
(bad)
cmp
mov
add
xchg
mov
or
and
and
jo
sbb
cld
add
fisttp
dec
inc
loope
popf
scas
(bad)
popf
mov
jecxz
mov
xchg
pop
xchg
dec
movs
mov
cs
push
cmps
push
sub
call
cmp
adc
adc
mov
je
mov
imul
pop
test
xchg
movs
shr
stos
push
or
test
and
dec
and
or
neg
(bad)
loop
stos
push
scas
and
jo
imul
jmp
push
sub
in
stos
jno
or
xchg
pop
idiv
add
in
stos
cs
outs
in
in
xor
out
jge
xor
inc
sbb
popf
sub
push
inc
adc
and
pushf
add
adc
or
cvttps2pi
or
fwait
inc
mov
jg
adc
es
add
pop
les
(bad)
jmp
ror
dec
push
mov
and
xor
lods
mov
(bad)
mov
adc
aaa
fbld
add
push
xor
jae
mov
mov
scas
cmp
arpl
out
movs
fldcw
inc
in
add
popa
fldenv
mov
mov
mov
fs
push
movs
not
mov
xchg
or
loopne
fnsave
addr16
jge
sahf
stos
jno
xchg
mov
test
xchg
xchg
mov
arpl
loopne
cmp
sub
pop
push
push
ror
fwait
jge
mov
test
dec
dec
popf
ret
jle
push
and
dec
jmp
sub
add
mov
dec
aam
mov
cmp
cmps
push
pop
push
rcr
or
jle
xor
jo
sub
imul
lods
lds
dec
push
daa
lods
imul
sub
imul
clc
cli
jmp
adc
cmp
inc
iret
mov
ins
clc
push
jne
daa
(bad)
mov
jne
scas
xchg
scas
pop
jp
imul
rcl
aad
or
dec
inc
cmps
mov
xor
inc
ins
movs
adc
sbb
push
dec
cmp
shl
push
and
ja
dec
das
ficomp
loop
jmp
sub
mov
xchg
mov
inc
idiv
fsubr
(bad)
pop
daa
in
push
xchg
cmp
jecxz
push
test
adc
xchg
fist
push
cdq
sbb
or
test
pusha
xor
and
loopne
jb
in
mov
hlt
mov
mov
dec
outs
ficomp
loopne
fwait
(bad)
jecxz
mov
dec
icebp
das
cmps
fsubr
imul
xor
test
cdq
cmp
xor
(bad)
(bad)
loop
ret
or
push
fsubr
mov
dec
loope
push
sahf
mov
jmp
loope
repnz
adc
mov
movs
pop
mov
outs
movs
adc
mov
ss
test
push
add
or
mul
ret
add
cmps
cwde
pop
dec
sub
mov
cmp
push
push
loopne
cmps
push
or
out
fld
enter
test
dec
test
test
arpl
lods
shl
mov
adc
shl
sub
push
or
popa
xchg
cmps
imul
(bad)
enter
push
leave
jne
jae
jne
imul
ins
shr
sbb
das
das
rcr
test
rcl
add
lods
add
jl
mov
scas
clc
mov
cmp
ret
mov
jmp
push
in
sbb
shr
sti
int3
dec
ss
mov
push
lahf
les
pop
ds
sub
jbe
repnz
mov
jno
ret
push
pop
push
lock
mov
cmp
xchg
test
retf
stos
retf
push
push
or
mov
mov
jns
or
mov
js
(bad)
mov
pop
lahf
or
stos
push
imul
pop
inc
inc
xchg
lock
imul
stos
pop
jge
add
mov
mov
inc
sbb
jmp
lods
fsub
sub
add
dec
adc
call
cmp
or
pop
xchg
cmp
inc
into
jp
sub
adc
aaa
sub
gs
inc
add
retf
cli
xchg
sar
jns
sbb
sbb
call
lock
jmp
sbb
adc
imul
fmul
inc
out
stos
push
sahf
push
jmp
jp
shl
xor
dec
nop
inc
cdq
pop
sbb
loop
mov
xchg
out
xchg
adc
sbb
dec
mov
out
mov
retf
mov
cmps
xchg
in
mov
(bad)
(bad)
div
push
dec
mov
xor
les
mov
inc
rol
ret
and
sar
mov
retf
cmp
(bad)
lds
push
cmp
data16
push
inc
mov
sbb
sbb
call
mov
and
les
dec
lds
cmp
rol
sub
or
sub
repz
adc
xor
xchg
inc
cs
xchg
xor
fsubr
repz
mov
jb
xor
mov
push
push
pop
mov
cvtpi2ps
sbb
in
test
outs
mov
inc
or
shl
sub
in
(bad)
pop
fisttp
jb
(bad)
repz
jbe
xchg
movs
xchg
xor
fstp
bound
repnz
inc
in
pushf
sub
xchg
shl
les
adc
scas
push
dec
rcr
in
ret
and
xchg
dec
adc
loope
sub
or
inc
jmp
xchg
(bad)
loope
aam
adc
aam
addr16
adc
or
loop
mov
and
pusha
outs
pop
iret
movs
xor
adc
(bad)
pop
and
mov
punpckhbw
or
dec
sbb
leave
or
and
cmp
les
rcr
pop
mov
mov
cmp
inc
aam
shl
mov
sar
add
mov
cmp
icebp
(bad)
or
shr
rcr
pop
adc
mov
scas
pop
sub
xchg
dec
bound
test
sub
pop
add
test
or
sbb
hlt
repz
iret
lds
cmps
cmp
movs
pop
dec
out
fnstenv
int
imul
fidiv
push
repz
data16
xchg
inc
test
inc
sbb
or
jno
out
mov
pop
push
mov
loopne
add
dec
cld
ret
lods
push
js
mov
int3
movs
leave
(bad)
outs
adc
xlat
ret
inc
push
fsubr
jo
mov
cmp
movs
shl
repz
mov
pushf
xchg
xor
push
fldenv
lods
xor
call
adc
ret
(bad)
adc
pushf
sub
adc
cmp
dec
repz
cmps
pop
push
sub
mov
inc
mov
cmp
cmps
dec
inc
test
cmp
imul
arpl
leave
pop
add
xchg
add
dec
push
clc
(bad)
loope
into
loop
cwde
cmps
shl
leave
fs
mov
scas
mov
imul
test
dec
test
(bad)
(bad)
adc
div
or
add
movs
add
jns
loopne
(bad)
push
mov
arpl
cli
mov
mov
mov
push
push
cmc
hlt
outs
xchg
ss
data16
push
cmc
scas
xor
sub
dec
fcomp
bound
daa
and
repz
sbb
jo
bound
imul
in
jg
push
sti
mov
inc
dec
dec
add
les
add
call
sti
(bad)
jmp
hlt
(bad)
shr
mov
hlt
std
push
jne
add
gs
mov
hlt
dec
dec
test
(bad)
xchg
in
xchg
mov
loop
dec
cmc
ja
and
adc
inc
push
movs
dec
test
es
aad
and
daa
or
test
lea
mov
pusha
lock
sbb
aam
push
push
mov
pop
jge
sub
imul
xchg
inc
pusha
xor
xor
sub
mov
mov
and
addr16
hlt
ret
les
aaa
or
pusha
jne
retf
jl
sbb
repz
(bad)
clc
sbb
sbb
loopne
pop
mov
push
(bad)
adc
xor
pop
mov
cwde
dec
mov
je
or
jb
pop
(bad)
ds
lods
cdq
std
and
scas
xchg
sub
leave
and
mov
dec
scas
into
repz
test
retf
retf
mov
into
mov
mov
fdiv
mov
dec
pop
dec
xor
pop
add
rcr
mov
sub
jns
test
inc
ins
cld
jno
(bad)
dec
in
sub
dec
xchg
mov
jge
mov
jbe
xchg
lods
imul
mov
xor
fnsave
push
mov
inc
push
pop
pop
repnz
or
mov
ss
loop
retf
jp
dec
loopne
fdivr
aam
xor
stos
sbb
xchg
js
loope
call
lods
sub
jne
(bad)
ss
ins
pop
loope
call
mov
push
add
add
jb
mov
test
dec
scas
retf
call
mov
(bad)
dec
aad
dec
add
call
mov
cs
jns
pushf
and
xor
mov
mov
fcomp
adc
push
nop
(bad)
sub
fistp
jge
outs
push
ins
leave
nop
mov
test
adc
arpl
outs
sbb
cmp
mov
popf
push
sub
aas
fst
stos
bound
fistp
in
pusha
xchg
or
(bad)
into
sub
mov
mov
in
dec
jae
push
mov
xchg
mov
dec
mov
push
pop
fistp
out
and
jecxz
and
in
or
retf
lods
sub
cmp
rcl
mov
add
int3
cmp
pop
sub
inc
pop
cmps
movs
ss
and
mov
xchg
xchg
retf
jbe
pop
ins
mov
mov
add
movs
loopne
mov
cmp
push
jmp
and
out
and
adc
pop
dec
or
enter
add
lds
mov
loop
pop
xchg
je
jno
in
int
mov
cmps
lods
dec
dec
mov
sbb
or
and
leave
addr16
sar
out
or
cmps
fsub
push
xor
sti
ret
mov
and
test
sub
dec
mov
lds
mov
iret
dec
loop
retf
ret
and
adc
xchg
mov
mov
fdiv
(bad)
sahf
ins
cmp
int
sub
and
(bad)
rcr
sub
std
or
lea
mov
(bad)
cmp
fs
fcom
inc
xor
xchg
int
mov
sbb
test
push
cmp
loop
xchg
or
mov
loope
or
call
push
xchg
stos
dec
mov
jl
fcom
cmp
sub
push
dec
mul
jp
cmps
mov
outs
aaa
inc
sar
mov
mov
xchg
mov
or
mov
test
test
xchg
test
push
aaa
cmp
and
add
lods
sub
repz
bound
xchg
xchg
ins
mov
add
repnz
hlt
add
test
fiadd
jle
add
mov
rol
mov
dec
ror
popa
inc
icebp
cmps
pop
pop
inc
adc
fiadd
xor
div
inc
mov
enter
imul
lods
or
(bad)
cmps
xchg
lods
icebp
xchg
mov
sub
je
sbb
icebp
das
mov
addr16
mov
repnz
push
fisub
cdq
jmp
pop
xchg
xchg
pop
jo
push
mov
adc
or
nop
push
repz
(bad)
into
sbb
adc
stos
in
imul
push
jle
jns
sub
dec
int3
dec
mov
dec
and
or
pop
or
lea
imul
jle
out
or
(bad)
xchg
loop
inc
cwde
mov
and
xchg
cmc
jmp
mov
cdq
in
jnp
out
adc
mov
mov
je
jecxz
fisub
lahf
push
and
pop
inc
(bad)
dec
clc
add
inc
mov
cmp
mov
cmp
adc
add
sub
mov
mov
mov
cs
mov
jb
lods
push
imul
icebp
daa
sub
push
retf
gs
push
ins
mov
dec
xchg
pushf
adc
or
pop
inc
mov
and
or
popf
mov
cs
in
lahf
or
popa
inc
xchg
mov
xchg
xchg
mov
jmp
xchg
mov
mov
mov
jge
hlt
aad
sub
or
pop
cdq
adc
rcr
imul
and
cmp
fisttp
sub
push
xchg
cmp
hlt
push
and
push
xor
out
and
push
sahf
mov
mov
inc
pushf
fbstp
cmove
std
es
pop
test
dec
lods
mov
mov
xor
inc
push
sub
aas
idiv
lea
jns
push
fisub
retf
add
cmp
adc
cmp
clc
dec
jno
repz
xor
cs
aas
test
dec
movs
xchg
sub
cmp
jecxz
addr16
sahf
jbe
dec
and
push
das
stos
sbb
pop
jecxz
adc
out
or
(bad)
inc
cld
aaa
cmp
cmps
fldenv
movs
and
sub
in
and
push
mov
cli
inc
ret
mov
mov
xchg
jo
pop
loope
fdivr
and
dec
sub
adc
fcmovb
sti
in
retf
cmp
mov
in
(bad)
movs
and
jmp
pop
mov
scas
dec
ror
push
(bad)
xor
inc
jo
cmp
rcr
lock
mov
sahf
cmp
clc
jne
fmul
outs
jg
fld
cmp
dec
leave
xchg
push
cli
push
xchg
and
jbe
ret
mov
and
dec
mov
push
xchg
mov
mov
push
push
ja
lods
dec
fld
inc
shl
out
leave
mov
in
fstp
popa
rol
and
out
adc
pusha
cli
fs
enter
jp
loopne
xchg
test
jmp
sub
fucomip
cwde
push
mov
in
xchg
stos
jl
push
ins
enter
push
nop
jno
push
es
jmp
inc
cmp
repnz
inc
pop
fimul
pop
add
dec
cld
mov
mov
sbb
sub
dec
xor
or
mov
cs
xlat
and
dec
xchg
inc
loopne
les
pop
mov
jb
in
mov
sti
retf
ss
jae
or
sahf
mov
in
(bad)
and
not
pop
clc
adc
sbb
arpl
push
test
retf
in
mov
imul
leave
ins
mov
inc
test
sbb
jmp
mov
dec
aam
sub
xchg
xchg
mov
fistp
inc
push
and
dec
push
xor
in
std
xchg
mov
dec
shl
or
push
pop
jae
inc
fwait
cmp
mov
push
adc
sub
sbb
add
fisttp
dec
adc
add
or
fadd
add
popf
lds
mov
jmp
test
ror
(bad)
or
sti
popa
cmc
ins
add
sbb
in
adc
xchg
jl
add
push
ds
adc
(bad)
and
rcl
mov
ret
adc
les
pushf
jbe
or
(bad)
ss
push
mov
and
mov
imul
bound
add
les
fdivr
xchg
lahf
xchg
sbb
frstor
pop
mov
mov
push
add
outs
dec
xor
pusha
shr
cmp
dec
push
rep
int
inc
lds
int
hlt
mov
stc
or
xchg
test
push
jmp
retf
and
push
retf
push
lods
dec
stos
fisub
push
adc
repz
mov
out
adc
pop
and
pushf
push
js
shr
mov
outs
test
shr
(bad)
in
ret
xchg
push
jae
ds
pop
push
xchg
lods
and
add
pop
dec
int
stos
mov
mov
adc
add
popa
dec
inc
retf
out
ins
cmc
push
jnp
mov
stos
repz
addr16
sub
clc
cmps
jno
dec
mov
push
stos
push
outs
call
sub
jle
popa
xchg
inc
xchg
test
jno
imul
mov
sub
jp
mov
add
mov
mov
cmps
sbb
fwait
popa
xchg
mov
leave
and
test
fld
sbb
leave
mov
in
sub
(bad)
movs
jl
call
mov
push
in
frstor
dec
xchg
or
dec
xor
or
in
add
shl
xchg
adc
push
push
sete
sahf
mov
test
iret
pop
mov
mov
into
fnstcw
dec
pusha
mov
and
fstp
xor
mov
xchg
cmc
cmc
mov
mov
pop
dec
daa
shl
cwde
mov
dec
in
sub
add
es
xchg
imul
adc
inc
jmp
xor
jno
push
push
cdq
jp
test
jno
xor
xlat
xchg
jbe
sbb
shl
ret
jg
mov
iret
sbb
rcr
icebp
div
cmps
mov
aas
fwait
sub
das
jg
xchg
pop
push
or
sbb
ins
jb
pop
adc
test
inc
cmps
push
imul
mov
and
inc
jl
jne
(bad)
jmp
cmp
test
aas
test
xor
mov
xor
cmps
rcr
mov
sbb
stos
xlat
stos
jae
aad
retf
test
jb
lods
push
js
repz
adc
xchg
fild
fisubr
btc
sub
adc
jl
lock
(bad)
aaa
mov
leave
retf
ins
sub
movs
sti
inc
jmp
lock
push
cmp
lock
loope
xchg
js
lods
ins
icebp
xor
mov
cmc
fmul
xchg
arpl
and
cdq
sbb
mov
shl
aam
lea
push
or
sbb
or
aam
add
cmp
fcomp
mov
cmps
imul
mov
test
push
in
add
js
fsubr
pop
add
push
cmps
sub
xor
test
mov
ficom
push
test
inc
pop
adc
mul
xchg
cmp
sbb
inc
mov
fcomip
mov
scas
pop
ss
xchg
and
repz
in
imul
imul
fadd
repnz
jo
jb
mov
jp
out
lock
aam
push
or
mov
inc
xchg
xchg
pop
addr16
call
lea
push
dec
call
call
jp
sub
inc
(bad)
xor
inc
into
in
push
push
mov
jo
inc
jb
mov
mov
inc
call
mov
push
mov
lods
test
and
in
xor
mov
push
push
shl
and
pop
push
cdq
pusha
lods
stc
lds
cmp
mov
int
aad
aas
sub
xor
pop
push
daa
push
mov
repz
shr
mov
test
cs
fild
xchg
call
push
sbb
xor
stc
ret
lock
or
aad
add
xor
and
pushf
mov
cmps
jmp
cdq
push
gs
loope
movs
xchg
out
aad
adc
out
pop
outs
jb
js
in
iret
into
pop
mov
and
jmp
loopne
mov
enter
ror
int
jmp
push
mov
hlt
ret
and
jge
mov
test
cmp
mov
xchg
adc
jle
into
and
lods
push
mov
push
aas
add
mov
in
imul
xchg
rcl
lods
aaa
mov
mov
push
popf
sbb
jb
mov
sahf
movs
jnp
inc
and
fcom
mov
push
fnstcw
mov
enter
sar
stos
sub
jge
push
fs
in
hlt
ins
jg
out
pop
test
or
xlat
aaa
jns
faddp
(bad)
push
jmp
cmp
inc
xchg
jbe
in
or
adc
ja
mov
cmp
jp
jmp
and
dec
pop
and
(bad)
lock
xchg
scas
pop
add
or
cmps
sbb
mov
jmp
nop
inc
jecxz
sbb
sbb
jp
jmp
test
aad
push
and
xchg
aam
loop
jmp
and
sub
xor
inc
out
(bad)
sub
adc
sub
ins
in
pop
loopne
fcmovb
xchg
jb
lods
sub
cmps
cmp
and
sbb
rol
mov
add
add
inc
je
or
pop
(bad)
test
inc
jge
shl
addr16
add
add
call
lods
js
loop
in
fisub
popf
and
aad
ins
aad
pusha
mov
aam
push
mov
sar
cmp
test
inc
xor
sbb
ds
pushf
loop
xor
mov
pop
dec
mov
lods
aas
push
mul
and
into
jecxz
stos
and
enter
sbb
xlat
out
sub
sub
lea
cmp
int
push
sub
adc
pushf
aad
dec
out
jne
xor
jne
dec
(bad)
xor
mov
push
sar
jge
mov
jecxz
mov
jns
scas
mov
daa
dec
je
ret
cdq
ins
dec
push
push
clc
cmps
pop
jno
mov
sbb
jmp
push
push
pushf
push
cmps
push
xchg
jb
push
arpl
repz
icebp
sbb
xlat
in
cmp
lods
inc
inc
in
dec
nop
cmps
xor
sbb
mov
pop
push
mov
pop
dec
movs
pop
hlt
and
sbb
cmps
push
aaa
sbb
ret
sub
call
repz
mov
outs
fs
fbld
call
add
lods
cdq
sub
jne
out
mov
xor
pop
pop
je
adc
mov
mov
rol
test
push
mov
sub
lods
xchg
call
jbe
adc
inc
pop
sbb
dec
sub
push
pop
xor
mov
xchg
gs
shl
lea
ins
aad
scas
jno
shr
out
rcr
(bad)
push
int3
mov
(bad)
movs
out
cld
leave
loopne
fdivr
mov
jo
sbb
and
push
lea
pushf
in
xrelease
cmp
sbb
inc
mov
mov
mov
test
fwait
sub
out
js
pop
mul
push
hlt
test
push
(bad)
push
outs
fst
ins
dec
scas
sahf
popa
aad
out
test
popa
inc
icebp
inc
fsub
push
imul
mov
xlat
movs
pop
lods
push
ss
pop
popf
dec
dec
jne
jns
mov
clc
icebp
rcr
test
push
push
lods
cs
jns
pop
inc
sbb
add
popa
scas
xchg
add
lahf
pushf
mov
fist
lods
imul
fld
push
push
repz
sub
jb
pop
loop
sahf
xchg
popf
jns
pop
out
lahf
and
cmp
lds
push
aam
mov
sub
mov
leave
sub
xchg
jl
mov
mov
push
out
mov
out
cmps
pop
cmp
xchg
repz
xchg
fwait
cmps
loope
stos
scas
fist
xor
sbb
jb
and
pop
inc
push
dec
sub
sar
addr16
mov
into
adc
fidivr
mov
test
mov
in
push
dec
arpl
cmp
sbb
dec
sub
jbe
in
add
xchg
inc
xchg
or
aad
test
push
jbe
xor
gs
aad
data16
dec
or
and
push
and
and
cli
jl
dec
repnz
xchg
push
(bad)
test
in
sbb
xor
test
pop
dec
cs
push
xor
adc
xchg
jp
stos
sub
pop
outs
out
inc
pushf
xchg
bound
inc
out
hlt
test
pop
enter
call
vpslld
pop
stos
cmp
xchg
mov
jmp
push
leave
push
movs
and
popa
sub
adc
ss
inc
sbb
inc
loopne
int3
push
out
ss
xchg
xchg
pop
inc
mov
jae
or
fcomp
xor
ja
lods
pop
mov
xlat
cmp
bnd
lods
das
js
pop
stos
pushf
xchg
jne
enter
retf
(bad)
and
cmps
push
enter
ss
sub
xchg
push
jb
dec
inc
and
pop
cdq
xchg
push
dec
xor
xor
imul
push
icebp
add
mov
test
dec
out
add
jnp
ror
pop
mov
mov
push
jmp
lods
movs
retf
adc
repnz
nop
push
cmp
mov
(bad)
mov
ins
xchg
xchg
stc
inc
mov
xor
or
mov
retf
add
(bad)
cmp
add
add
sub
or
pop
and
mov
mov
cmp
push
jno
ret
bswap
sbb
imul
pusha
pop
sbb
dec
xchg
and
inc
dec
rol
inc
jmp
test
out
cmp
in
add
push
jmp
int
jne
fcomp
popf
pop
mov
imul
mov
out
aad
jo
cmp
lahf
or
cmps
mov
ror
and
add
cmp
mov
ret
dec
cmp
ja
cmc
xchg
leave
ror
loopne
mov
xchg
ss
mov
pop
out
jbe
inc
ror
adc
jp
sar
repz
inc
frstor
xchg
fimul
and
loop
dec
stos
ss
xchg
outs
adc
or
inc
test
fst
dec
addr16
mov
xchg
jno
cmp
mov
xchg
mov
mov
jb
cmp
ror
mov
jbe
mov
mov
in
movs
es
lods
jle
in
mov
icebp
xor
push
sub
add
(bad)
jo
cld
xor
fwait
xor
add
lock
(bad)
shr
mov
not
dec
jno
add
add
inc
push
sbb
add
xchg
enter
jmp
je
cwde
les
inc
add
fwait
cmp
std
stos
in
and
cmp
mov
pop
jne
sbb
jb
xor
shl
je
shr
retf
sub
mov
adc
sbb
sahf
test
mov
push
mov
push
lea
ins
(bad)
in
int3
sti
cmps
cdq
dec
push
int3
mov
pop
jns
sub
ins
and
jmp
cwde
(bad)
sbb
dec
ja
std
sub
mov
ins
dec
ficomp
cmp
jg
push
sub
ret
xchg
pop
cli
mov
push
out
jne
push
pop
cmc
inc
cmp
mov
shr
xchg
je
push
out
setp
cmp
sub
repz
stos
into
daa
outs
movs
in
sub
mov
or
je
mov
div
aas
in
cwde
jo
outs
cmp
imul
xchg
mov
lea
inc
xchg
xor
in
test
adc
jle
sbb
inc
inc
cwde
sub
xchg
fld
pop
in
add
out
mov
bound
fmulp
dec
fst
inc
adc
xchg
popa
adc
jge
sar
pop
xor
jmp
sbb
outs
int
sub
ficom
push
jae
xor
xchg
and
fs
xchg
push
cmp
mov
stos
dec
iret
shr
or
sbb
fwait
and
cli
fstp
mov
movs
test
sbb
sub
jae
movs
cld
push
mov
dec
in
cmp
lds
arpl
jp
jbe
pusha
add
mov
jnp
in
sub
jae
les
inc
and
xchg
sub
xor
inc
mov
or
fcomp
adc
mov
not
std
cwde
cwde
int
dec
nop
(bad)
(bad)
int
test
cmps
push
out
adc
mov
xor
scas
push
sub
xchg
pop
lds
lds
retf
cs
sbb
pop
jmp
mov
cmc
inc
cmps
in
fwait
push
mov
dec
push
mov
imul
mov
mov
xchg
not
movs
popa
hlt
adc
dec
xlat
cmps
out
inc
(bad)
ss
or
gs
pop
mov
jb
push
fs
test
lods
jmp
mov
push
add
adc
loopne
sub
adc
jge
sahf
(bad)
cmp
test
sbb
shr
dec
sbb
sar
xchg
jns
jae
(bad)
push
retf
mov
stc
pop
mov
pop
sub
imul
and
and
dec
cdq
sub
nop
xor
retf
sub
dec
adc
imul
mov
sub
push
and
and
in
adc
sbb
lahf
or
sbb
bound
and
add
daa
push
add
push
cwde
cld
loope
mov
mov
mov
enter
pop
dec
shl
and
sbb
jb
fisub
cmp
int
loop
test
sub
out
fisubr
stos
inc
dec
fst
xor
xchg
cmp
les
pop
jge
jl
test
xor
dec
rcr
mov
mov
adc
ds
das
xor
sub
fnstcw
into
mov
adc
sub
les
xchg
fstp
sub
inc
dec
xor
mov
stc
inc
loop
cli
aad
jmp
sub
daa
(bad)
xchg
nop
ja
or
xchg
push
and
push
mov
and
and
test
inc
mov
dec
js
add
ret
cmp
pop
ret
or
cli
shl
add
pop
cmp
jecxz
cwde
push
out
or
jp
and
push
push
bound
hlt
les
daa
dec
sbb
push
or
jmp
adc
(bad)
cld
int
jne
fld
popf
ror
inc
adc
in
adc
jge
sbb
arpl
aaa
stos
aad
and
pop
stos
mov
and
in
pop
fwait
bound
xor
sub
inc
iret
xor
push
int
loope
sub
mov
scas
mov
in
scas
pop
je
dec
call
cmp
xor
sbb
inc
in
fcomp
(bad)
fild
cmp
mov
in
cmp
push
shl
jp
cmps
sbb
pop
call
jne
fcom
push
std
inc
xchg
pop
sub
fidiv
mov
adc
loopne
test
lods
push
dec
fmul
rcr
jmp
sub
mov
cmc
vmwrite
xchg
xor
jb
sub
xlat
xor
in
mov
lods
or
dec
push
repz
lods
in
xchg
rcl
loop
push
pop
push
xor
leave
pop
pushf
punpckhdq
pushf
inc
js
pop
xor
mov
xchg
push
inc
iret
mov
mov
imul
es
lea
jnp
(bad)
lods
retf
gs
push
fbld
fwait
dec
imul
xchg
mov
adc
xchg
dec
jb
enter
cdq
dec
push
shl
leave
leave
leave
fidiv
push
mov
out
or
sub
sub
div
push
int
std
inc
ins
xchg
inc
mov
pop
in
nop
dec
in
js
stos
sbb
dec
mov
outs
js
sub
aas
(bad)
std
ret
les
ins
pop
pop
sahf
pop
imul
jge
movs
cmc
sub
jle
dec
dec
sti
lea
dec
jne
in
pop
or
mov
sbb
jecxz
mov
adc
push
jmp
pop
add
inc
xor
cdq
add
or
sbb
xchg
or
xlat
cmp
jno
cmps
sbb
imul
xor
cmc
data16
int
retf
jne
pushf
add
rcr
and
pop
mov
sti
ret
jle
jmp
movs
mov
mov
(bad)
sahf
mov
xchg
pop
inc
jnp
push
pop
(bad)
cwde
mul
ds
xor
int3
call
dec
out
sbb
inc
popa
dec
sbb
fild
retf
retf
cmps
es
ins
cmps
ror
xchg
mov
in
adc
gs
sbb
out
stos
pop
stos
fmulp
jno
jp
dec
dec
sbb
imul
stos
xchg
movs
sub
mov
cmp
or
mov
mov
and
rol
cmp
mov
cdq
push
push
adc
dec
loop
lds
rcpps
or
imul
retf
xchg
push
add
jl
test
jb
(bad)
cwde
push
push
fld
loopne
leave
mov
rcr
loope
stos
es
inc
mov
pop
inc
xor
stc
push
xor
sti
(bad)
ret
test
sub
jmp
adc
jb
fcomp
imul
mov
dec
mov
cdq
jnp
bnd
cdq
push
xor
push
xchg
bound
jo
mov
fst
dec
pop
cmp
into
aas
jb
stc
sub
(bad)
enter
push
je
push
in
repnz
inc
or
movs
dec
xchg
retf
xor
pop
daa
enter
into
jl
pop
jp
(bad)
xlat
adc
loop
(bad)
jo
out
cs
and
and
push
popf
xchg
fld
loopne
cwde
sbb
fidiv
adc
in
push
push
movs
popf
lds
in
bound
sub
jle
mov
pop
dec
sbb
rol
inc
rcl
je
std
inc
jp
inc
dec
push
fsubr
sbb
xchg
sub
mov
pop
lahf
dec
mov
mov
sbb
fisttp
in
pop
dec
mov
cmc
fist
sbb
loopne
jp
cmp
ret
das
mov
jae
es
and
pop
sbb
add
cdq
xlat
stc
inc
sub
adc
xchg
dec
hlt
loop
xchg
or
out
mov
jb
data16
sub
sbb
push
adc
sub
adc
call
fs
mov
nop
arpl
in
and
fst
and
inc
movs
dec
lds
add
pop
xor
les
inc
mov
xchg
jo
adc
pushf
sbb
mov
adc
mov
cs
aas
jnp
sbb
sbb
fistp
fdiv
fs
cmps
jp
stos
xchg
xchg
mov
add
lock
loop
mov
rcl
push
adc
push
mov
push
dec
pop
xor
hlt
movs
dec
mov
ret
cmp
cdq
dec
pop
cmp
ins
inc
lods
call
clc
push
push
inc
aad
pop
cmp
sub
sub
dec
push
scas
mov
sahf
in
xchg
xchg
arpl
jno
adc
mov
ins
inc
cs
mov
push
inc
mov
aas
or
retf
xchg
addr16
and
xor
test
inc
inc
dec
inc
push
and
inc
or
movs
loopne
and
xor
hlt
fadd
fld
inc
dec
ror
mov
rcr
sub
leave
clc
les
jb
inc
pop
int3
add
add
je
xor
aas
and
mov
retf
mov
pop
sub
dec
test
mov
dec
mov
mov
jmp
in
mov
int3
and
mov
addr16
dec
push
lahf
retf
add
jo
cmc
cmc
mov
nop
adc
add
ins
add
dec
or
xrelease
jae
and
popf
dec
and
(bad)
fistp
popf
fdivp
mov
adc
jbe
push
in
leave
stc
fwait
dec
aad
sahf
jae
leave
mov
sti
mov
int3
and
cmps
sbb
bound
dec
and
into
add
cmp
pop
shr
je
les
lea
dec
pop
imul
sbb
dec
mov
shr
jae
push
mov
nop
pushf
or
sbb
inc
adc
adc
sub
jae
push
push
cmps
lock
xchg
cmp
in
stos
ja
cmp
popf
cmp
mov
mov
arpl
sbb
cmps
pop
das
dec
pop
and
sbb
dec
cmp
cmc
stos
adc
aas
pop
call
sbb
adc
lods
jmp
cs
or
sub
adc
pop
jne
loopne
(bad)
addr16
shl
mov
adc
(bad)
sbb
jp
aam
push
push
xchg
mov
inc
(bad)
pop
mov
xchg
push
xchg
leave
(bad)
or
push
rol
pop
mov
cmp
xor
in
mov
and
lds
cmp
push
repz
mov
leave
jno
shl
ins
jnp
adc
add
call
lahf
dec
jge
sahf
ret
push
inc
call
adc
pop
sub
mov
in
push
lahf
jns
call
jbe
xor
mov
(bad)
(bad)
xor
shl
push
add
aad
sub
xor
jnp
inc
(bad)
test
retf
cwde
xchg
jge
add
jge
data16
jno
adc
pop
leave
(bad)
push
inc
imul
das
pop
sbb
test
in
inc
xchg
xor
ins
push
pop
mov
push
movs
ins
xchg
ror
xor
jg
je
cmps
in
fld
xchg
push
aad
ds
pop
xor
or
push
imul
cwde
xchg
shl
sub
mov
and
sbb
pushf
push
daa
loop
push
gs
pop
mov
mov
xor
inc
adc
sub
xchg
test
mov
jecxz
and
or
dec
push
jns
and
mov
add
(bad)
loop
stos
adc
in
std
cmp
cmovl
cmps
push
(bad)
fst
mov
idiv
inc
cmp
jno
adc
jp
in
and
lock
jecxz
lea
mov
rcl
sub
imul
jb
jns
mov
fst
inc
int3
les
in
dec
cmp
enter
ins
dec
add
ds
push
and
cbw
shl
xchg
icebp
ja
push
mov
fidivr
xchg
dec
lds
repz
push
mov
and
dec
mov
sbb
or
adc
push
scas
sub
sub
sbb
rcr
daa
xor
cmps
jo
(bad)
cmc
jne
fisubr
pop
and
ins
fcom
clc
fs
frstor
and
push
ds
scas
paddsb
sbb
mov
jp
sti
mov
dec
je
int
dec
jne
ficom
adc
cmp
jne
inc
fiadd
sub
pop
push
xchg
cli
ins
outs
pop
out
push
push
mov
sub
and
into
retf
mov
(bad)
adc
mov
pop
sbb
movs
mov
adc
mov
sub
mov
cmp
hlt
pop
lods
mov
test
jne
sub
sbb
xor
dec
dec
mov
sar
(bad)
jno
inc
gs
daa
cmp
jmp
out
pop
pop
mov
stos
jns
dec
xchg
dec
rcl
or
inc
cmp
or
push
and
rol
mov
ret
inc
pop
ret
popf
push
mov
ja
mov
pop
xor
jne
xor
je
test
imul
test
xchg
pop
sub
xchg
jno
pop
jmp
mov
idiv
sti
(bad)
repnz
push
test
loope
pop
jno
xor
sbb
add
push
or
test
xor
xchg
jno
xchg
sub
sbb
and
mov
test
retf
mov
fs
xchg
fsub
loopne
push
push
jbe
and
add
xchg
sub
cmp
xchg
push
nop
or
mov
xchg
mov
dec
ja
fnstenv
xchg
add
dec
push
in
add
dec
mov
or
inc
xchg
xchg
xchg
or
jmp
xor
jnp
test
xor
(bad)
and
inc
jno
push
dec
inc
in
leave
outs
pushf
test
in
cmp
xchg
add
dec
xchg
dec
mov
mov
jp
mov
push
call
enter
(bad)
inc
sub
xchg
or
retf
and
jp
mov
inc
pop
call
bound
push
fsubr
mov
mov
dec
jbe
mov
shl
je
and
mov
and
es
xor
outs
adc
inc
ret
rcl
push
dec
sbb
loopne
in
cli
ret
jg
or
jl
popf
(bad)
stc
ins
fsqrt
leave
cmp
mov
retf
mov
inc
dec
push
sti
xchg
imul
aad
inc
pop
pop
jno
shr
xor
cmps
jno
and
fsubr
(bad)
nop
add
jbe
jo
jmp
and
popf
loope
fcom
cwde
test
jecxz
mov
and
retf
jno
add
loop
retf
inc
in
(bad)
and
jbe
and
cmc
hlt
adc
pushf
(bad)
ret
stc
loop
ret
inc
push
hlt
test
push
and
movs
xlat
push
push
mov
nop
fisttp
mov
jecxz
sahf
ds
icebp
jns
in
ja
in
mov
lea
cmp
shr
jmp
dec
dec
aaa
aaa
xor
test
pop
gs
xchg
adc
ins
push
jb
fsubr
push
dec
imul
pop
dec
pop
jmp
(bad)
loop
mov
js
icebp
and
sub
sub
mov
jg
or
add
pushw
int3
add
cmp
scas
push
push
sbb
scas
imul
sub
inc
push
daa
cli
sbb
(bad)
(bad)
mov
mov
popf
std
fnsave
sub
or
cwde
inc
adc
ins
mov
in
arpl
xchg
adc
ret
xor
xchg
adc
fnstenv
ret
test
movs
pop
bound
xchg
and
movs
lock
fild
xchg
and
loop
jp
push
pop
mov
and
mov
inc
and
outs
xchg
inc
mov
ret
pop
or
ins
fimul
fcomp
mov
rol
jmp
movs
jae
xor
out
push
pop
and
retf
cmc
xor
mov
jg
xchg
mov
push
add
sbb
add
js
je
push
xchg
lahf
in
xor
jecxz
or
aad
(bad)
dec
xor
movs
xor
fadd
jmp
ficom
push
test
jne
popf
jnp
pop
inc
jns
fdiv
pop
add
or
es
push
iret
std
rol
(bad)
cmp
jle
cmp
xchg
call
bsf
mov
push
mov
inc
dec
mov
retf
xchg
ficom
ror
movs
mov
jnp
das
and
loopne
in
sbb
mov
jecxz
or
inc
test
shr
dec
retf
pop
mov
pushf
ror
sar
test
mov
xchg
cmps
adc
cwde
and
mov
cmc
in
call
push
cmp
icebp
mov
mov
mov
jbe
xor
cmp
inc
retf
aaa
push
pop
mov
sub
das
jns
add
movs
add
dec
pop
xor
popf
sbb
popa
mov
inc
add
inc
or
fld
mov
not
les
lea
sub
ret
outs
test
dec
inc
jle
pop
add
pushf
mov
push
popf
enter
test
push
movs
xchg
cmp
jle
cmp
ss
add
sbb
jno
push
xor
cwde
test
dec
fmul
jb
adc
sub
loope
add
jmp
mov
repz
cmp
cwde
xchg
ins
addr16
pop
dec
(bad)
ror
shr
cmps
push
cmps
push
cmps
(bad)
jge
sub
jmp
nop
mov
cs
mov
lds
inc
or
in
std
jo
mov
scas
inc
aad
leave
cmp
and
(bad)
pop
mov
pop
shl
mov
pushf
sbb
in
xor
mov
and
and
popf
mov
adc
cld
loopne
or
cmp
xchg
adc
les
nop
jmp
or
enter
sbb
lds
std
pop
mov
cli
adc
jb
ss
ficom
mov
pop
jne
es
fld
out
push
or
(bad)
pop
sti
mov
pop
mov
jecxz
test
xchg
cmp
test
inc
jmp
fst
xchg
mov
pop
ja
jae
mov
and
mov
shrd
mov
inc
xlat
jbe
and
inc
jne
inc
clc
push
loop
lea
jmp
pushf
cmp
ror
sub
push
jne
lods
cld
mov
daa
outs
jne
xchg
xchg
movs
adc
cmp
mov
loopne
out
jo
scas
fisubr
pop
cdq
dec
jecxz
les
nop
ja
xor
inc
jns
xchg
add
adc
cmp
xchg
or
outs
mul
imul
imul
repz
inc
xchg
jmp
push
jecxz
hlt
and
fwait
dec
xchg
push
sahf
ret
sub
retf
imul
ss
test
add
sbb
xor
mov
push
lods
shl
push
add
div
imul
sub
aam
inc
jecxz
inc
mov
xor
mov
xchg
or
lahf
xor
ret
iret
jbe
push
xchg
cmps
mov
xchg
gs
push
out
dec
inc
pop
fdivr
mov
mov
gs
mov
mov
dec
mov
adc
(bad)
popa
test
(bad)
aas
jno
pop
sub
rcr
mov
or
sub
mov
add
cdq
leave
inc
cmp
in
imul
enter
out
dec
sbb
push
dec
fwait
xor
imul
push
scas
push
cdq
idiv
push
shl
cmps
dec
leave
xchg
xchg
push
fld
cmp
jnp
mov
stos
mov
xchg
retf
or
in
mul
mov
fdivp
imul
ins
(bad)
out
mov
in
jecxz
mov
xchg
pop
popa
shl
fidivr
imul
add
mov
sbb
push
in
inc
scas
dec
popa
jb
inc
push
dec
pop
push
hlt
arpl
push
xchg
stos
xor
repnz
sahf
loop
fwait
movs
jp
pop
push
lods
jmp
and
jns
fldenv
push
pop
call
xor
pop
mov
sub
mov
push
shr
lods
(bad)
cmp
imul
add
int
sub
in
mov
(bad)
xchg
pop
jl
repz
(bad)
retf
inc
xor
fistp
xlat
jne
andnps
das
mov
ror
jbe
xor
jge
dec
loop
arpl
clc
push
inc
out
add
nop
(bad)
pop
sbb
scas
add
mov
sub
mov
fisubr
jae
adc
shr
lea
xchg
add
test
leave
mov
lds
out
mov
pusha
jmp
lock
fidivr
mov
xchg
lahf
push
inc
scas
mov
fsubr
sub
and
addr16
out
imul
ins
cli
add
jne
stos
mov
rcl
mov
pop
in
adc
mov
cmp
sub
pushf
jp
xchg
push
lods
sub
push
scas
jns
pop
inc
mov
sbb
ficomp
and
in
cs
lods
iret
pop
mov
shr
push
call
fs
movs
daa
jno
inc
stos
mov
pop
ins
mov
out
or
retf
daa
frstor
jo
sbb
ins
adc
adc
adc
jmp
dec
mov
xchg
xor
mov
pop
mov
pushf
movs
sub
jmp
sub
inc
cmp
mov
ret
ret
mov
retf
jns
pop
ds
cmps
stos
ins
outs
test
xchg
mov
sub
test
sub
hlt
rcr
pop
push
xlat
xchg
fstp
sbb
and
int3
test
shr
sahf
ins
mov
les
bound
adc
pop
or
into
(bad)
sbb
or
mov
sub
out
movs
cwde
pop
in
retf
movs
xchg
cmp
stos
or
cmp
push
xchg
push
pusha
xchg
cli
sbb
mov
dec
sub
cs
cmc
int
inc
dec
mov
mov
jle
xor
mov
push
mov
movs
lahf
cmps
adc
pop
jl
push
or
xchg
xor
lods
mov
int3
ret
shl
pop
das
cmc
mov
stos
out
lods
xchg
adc
and
aaa
into
ficom
loopne
test
sub
pusha
loopne
add
js
xchg
mov
dec
cmp
stc
out
or
push
mov
cli
inc
mov
icebp
or
dec
xchg
out
xor
and
mov
and
pop
pop
mov
fs
std
and
inc
push
mov
dec
sub
ins
mov
aaa
and
xchg
push
xchg
push
inc
sbb
cmc
xchg
and
push
xor
adc
movs
pusha
adc
mov
ins
dec
adc
loope
cmp
push
inc
mov
gs
jg
into
sbb
and
sbb
into
test
popf
(bad)
pop
shl
pop
clc
xchg
xor
pushf
les
mov
add
sbb
rcl
lods
push
pop
push
cli
or
scas
mov
xchg
xor
mov
xor
dec
inc
int3
ret
cmps
jno
mov
call
ret
cmp
ins
iret
dec
mov
je
push
adc
push
xchg
xchg
data16
inc
sub
xor
popa
aas
jg
cmps
sbb
jns
mov
js
outs
jo
lods
(bad)
movs
push
scas
push
js
addr16
outs
sbb
stos
mov
mov
adc
jmp
add
add
aad
fs
lods
and
leave
cmp
mov
stos
push
mov
xor
fidiv
lds
outs
jno
cmp
xor
retf
ins
sub
add
repnz
enter
pushf
fidiv
and
cmp
add
ja
xchg
push
dec
std
pop
dec
jne
out
repnz
push
aad
mov
dec
xchg
add
or
and
sbb
enter
lods
(bad)
clc
les
push
movs
and
xlat
xchg
int
push
test
dec
mov
push
int3
test
xchg
adc
call
pop
mov
loop
mov
push
sub
scas
clc
ds
fnstsw
fiadd
and
mov
shl
sub
add
and
rcl
leave
jp
inc
lahf
cmps
js
icebp
sub
scas
mov
addr16
clc
mov
cli
jle
lock
mov
ins
jmp
cwde
imul
cs
pop
sub
add
add
jno
mov
mov
aam
fbstp
cmps
jbe
mov
jl
mov
pop
loope
cdq
jg
data16
pop
fldenv
cmps
imul
pop
dec
xchg
not
dec
lock
call
pusha
dec
lock
retf
jp
repz
sahf
imul
push
pop
idiv
lods
mov
out
jno
retf
ror
adc
sbb
push
scas
movs
mov
dec
shl
jne
pop
mov
push
cs
fsubr
mov
dec
xchg
imul
ins
shr
push
xor
mov
fadd
sub
fbstp
data16
push
push
add
daa
push
nop
test
lods
stos
mov
cli
loop
call
cmp
xor
into
and
mov
in
pop
inc
test
test
bound
ss
mov
dec
lea
push
mov
and
sub
push
repz
(bad)
cli
stos
jne
ins
pop
jg
ins
mov
push
movs
mov
in
ds
jno
repz
lods
(bad)
push
inc
jb
test
jo
pop
pop
rcr
aas
mov
(bad)
call
push
jmp
rcl
and
repz
push
or
add
cmp
adc
pop
inc
dec
cli
cwde
cmp
mov
sub
pop
fidivr
push
sbb
mov
sti
sub
xchg
cmp
mov
xchg
add
add
adc
movhps
mov
sti
inc
jle
leave
mov
data16
sub
or
dec
stos
dec
sahf
xchg
push
test
and
mov
xchg
fdiv
loop
lods
sbb
aad
cmp
push
mov
jp
mov
sbb
out
push
mov
or
sub
and
xor
popa
jecxz
icebp
ja
out
or
jecxz
loop
scas
adc
or
imul
jbe
dec
call
retf
ds
cdq
mov
int3
mov
cwde
mov
aam
fbld
sub
shl
xchg
xor
fucom
out
mov
ficom
ins
int
stc
test
push
xor
jno
push
and
pop
pusha
xor
fsub
hlt
mov
and
(bad)
clc
mov
cmps
js
mov
scas
aaa
jb
outs
cs
sbb
cmp
sahf
ins
push
nop
mov
stos
outs
jge
(bad)
adc
mov
mov
clc
jecxz
mov
dec
sub
bound
add
inc
int3
stc
call
pop
jne
mov
mov
int
mov
popf
nop
sahf
mov
icebp
xchg
mov
push
outs
and
enter
and
or
popa
and
inc
retf
mov
push
add
aaa
call
test
add
stos
jge
push
xchg
(bad)
out
lahf
sahf
gs
int3
pop
mov
sbb
add
xchg
js
fadd
imul
mov
sbb
cmp
stc
xor
out
or
pop
js
mov
mov
icebp
mov
popf
mov
pop
pop
inc
outs
sub
sub
push
push
icebp
add
push
pushf
and
xchg
daa
outs
pop
mov
dec
in
jnp
dec
cmp
gs
xchg
xchg
adc
push
(bad)
pop
sbb
xor
mov
ret
xor
xchg
and
or
push
movs
push
and
repnz
cmp
inc
push
mov
loope
jns
hlt
cli
outs
inc
movs
cmovp
dec
pop
lds
test
cmps
push
xchg
inc
cmc
arpl
push
fldcw
push
in
aad
stos
cli
(bad)
adc
mov
jle
sbb
xchg
ret
enter
pop
jmp
dec
sub
popa
int
dec
pop
sub
call
ret
cmps
cmps
push
mov
dec
sbb
lods
enter
mov
cmp
data16
jg
dec
mov
rol
pushf
ins
shl
fnstsw
jnp
jae
cmp
inc
movs
ins
inc
fxam
fsub
push
jge
fld
lea
lods
leave
xchg
movs
and
add
dec
retf
mov
cmp
add
test
dec
iret
retf
ds
jno
and
mov
retf
or
pushf
add
mov
test
loop
mov
movs
dec
pop
jle
fistp
lods
xlat
test
cs
sub
dec
test
push
call
aaa
cmp
lods
(bad)
or
(bad)
nop
xlat
mov
xchg
int
pushf
pop
bound
xchg
mov
lock
(bad)
mov
cmp
push
call
popf
enter
fsub
jl
sub
rol
fucomip
or
cmps
rol
add
sbb
add
sub
fs
sub
rcl
and
xchg
xchg
enter
aad
xchg
add
jge
movs
in
or
jmp
mov
nop
and
adc
int3
jmp
sbb
mov
adc
jecxz
adc
sub
es
out
push
jnp
sub
cmc
mov
pop
dec
pop
fwait
mov
mov
je
cmp
test
jno
ins
test
mov
or
outs
sub
ror
and
int
sub
push
sub
rol
scas
outs
popa
xchg
xlat
adc
and
js
shr
sub
and
add
retf
jo
xor
cmp
mov
idiv
mov
mov
inc
jmp
mov
out
test
enter
fild
out
cmp
fmul
mov
sbb
jnp
adc
sbb
and
cmp
call
and
(bad)
mov
add
cmp
jmp
stos
stos
or
imul
push
xchg
lock
jl
jo
movs
mov
xor
add
outs
jne
test
out
cmp
push
mov
lods
int3
dec
int3
jb
cmps
sti
xor
xchg
pusha
mov
mov
or
pop
sbb
push
xchg
mov
cmp
movs
shr
pushf
ja
nop
and
dec
leave
pop
fnstsw
leave
daa
xchg
pop
pop
vpsrlq
pop
test
lea
(bad)
sub
sub
jle
shl
popf
push
aam
pop
jl
sbb
mov
out
add
xor
inc
pop
xchg
cwde
call
inc
dec
rcl
or
mov
mov
push
sbb
add
or
mov
in
or
je
mov
xchg
push
fld
mov
xlat
xchg
or
ins
add
sti
mov
and
fnstsw
jbe
add
xor
hlt
sub
(bad)
adc
sub
dec
xchg
inc
pop
xchg
mov
xlat
inc
adc
pop
loop
hlt
xchg
shl
inc
mov
addr16
adc
popf
loopne
in
mov
push
inc
sub
push
(bad)
sbb
rol
pop
fwait
pop
or
cmps
push
popa
pop
adc
repnz
dec
sti
ret
(bad)
lds
sahf
adc
cmps
aam
dec
ja
mov
cdq
xchg
ss
stos
xor
lods
jge
pushf
sti
loope
loop
(bad)
cmp
test
mov
mov
push
sub
pop
jmp
call
jmp
jb
cmps
int3
je
push
loope
and
and
push
sub
fwait
xchg
scas
sub
hlt
pop
(bad)
in
jecxz
pop
clc
stos
call
mov
imul
(bad)
es
ja
out
push
adc
fist
daa
int
mov
inc
push
out
sub
mov
call
int
cmp
or
(bad)
and
fdiv
repz
mov
js
cli
pop
data16
lds
movs
mov
cmc
mov
sbb
mov
leave
add
pop
and
inc
nop
sbb
ret
mov
enter
xchg
test
pop
and
pusha
sbb
and
jno
popf
test
(bad)
mov
rcl
jno
sub
fild
rcr
and
(bad)
out
mov
lahf
xchg
inc
and
popa
js
test
push
sbb
out
pop
sub
sub
fadd
lods
pop
jae
enter
pop
imul
pop
inc
(bad)
in
dec
mov
inc
xchg
add
xchg
dec
adc
adc
and
or
cmp
out
and
pop
pop
loop
mov
fs
ret
push
add
mov
cmp
and
sub
ds
ss
push
add
rol
jecxz
xor
fisub
push
sbb
mov
aas
and
fadd
push
clc
cmp
add
shl
adc
and
les
or
sahf
mov
sub
sub
xor
mov
ins
jae
icebp
xor
mov
fsubr
fistp
bound
dec
(bad)
es
retf
test
hlt
ins
sahf
fdivr
call
jle
sti
or
pop
or
xchg
push
cmovp
adc
in
test
cld
in
inc
ins
push
xchg
xor
out
cmp
fdiv
div
inc
dec
dec
lods
fcomp
enter
jbe
pusha
push
mov
scas
cmp
adc
jae
icebp
pop
stos
mov
pop
push
mov
mov
int
lock
mov
and
(bad)
enter
fisubr
loop
jo
mov
aaa
mov
aad
pop
shr
test
(bad)
cmc
or
scas
call
(bad)
adc
test
and
mov
adc
retf
popa
jo
mov
sbb
loop
dec
jmp
(bad)
sbb
scas
pop
ja
adc
jnp
fst
pop
out
cmps
test
mov
mov
dec
or
xchg
sbb
sub
cmp
or
loopne
jmp
test
das
pop
ds
sbb
jb
inc
or
jmp
inc
retf
push
ja
(bad)
push
cwde
mov
dec
je
mov
push
outs
sbb
push
movs
int
sahf
in
jmp
data16
push
and
and
or
xor
jnp
add
pop
xor
pop
jns
(bad)
call
push
mov
ds
cmc
mov
and
aam
stos
fisub
cmps
stc
mov
jns
sub
outs
mov
push
push
rcl
shl
sub
ja
adc
aam
ficomp
aas
xchg
xor
sahf
(bad)
popf
sar
pop
xchg
cmp
xor
inc
sbb
sub
or
xchg
pusha
out
sbb
adc
mov
cli
popf
les
adc
sar
int
mov
jp
mov
call
push
and
sub
inc
sub
add
lea
jno
aam
int3
int
(bad)
xlat
ss
retf
lds
adc
sti
(bad)
xor
gs
xor
xchg
rol
pop
mov
scas
je
shl
popf
inc
push
(bad)
adc
jmp
ins
or
aaa
push
mov
push
pop
xor
ss
leave
adc
dec
fnstsw
pop
push
in
push
jge
gs
push
clc
fwait
jecxz
dec
das
cmps
sub
pop
adc
outs
jns
pop
xchg
xchg
cwde
popf
mov
(bad)
pop
xchg
bswap
test
sub
imul
imul
xor
pushf
loop
stos
in
data16
xchg
les
push
inc
mov
fmul
stos
dec
xchg
jb
push
gs
stos
and
or
ret
inc
or
dec
daa
js
inc
inc
xchg
jbe
movs
stos
jns
fcmovbe
push
js
cwde
nop
std
jmp
jecxz
push
sub
push
jns
retf
jmp
xchg
aas
dec
pushw
sub
mov
movs
mov
mov
cmc
jp
cmp
int3
jnp
jmp
or
add
sub
and
mov
push
loop
rol
push
jge
ror
test
add
jns
xchg
sub
push
sbb
imul
push
js
mov
mov
mov
add
push
pushf
lds
in
push
and
lahf
jne
cli
fsub
jb
push
fstp
add
fimul
nop
loop
mov
call
stos
aas
push
js
jb
jge
sbb
(bad)
pushf
lahf
xchg
jge
xchg
int
leave
xchg
add
sbb
and
jge
push
mov
push
dec
push
sub
inc
xor
and
jmp
outs
mov
inc
nop
mov
icebp
or
ja
in
pushf
jne
add
mov
xchg
test
pop
mov
add
inc
jp
jno
fiadd
cmp
push
jmp
add
cdq
cli
mov
pop
dec
and
cmc
inc
mov
jg
es
sbb
movs
cmc
mov
test
imul
data16
mul
out
push
inc
push
ins
test
jmp
sbb
aad
inc
add
out
les
cmp
aam
pop
rcl
mov
xchg
push
add
sub
dec
xchg
and
sub
jns
xchg
and
cs
xchg
rcr
shl
jmp
out
or
sub
add
nop
push
pushf
adc
inc
xchg
mov
stos
mov
jne
bound
push
(bad)
xor
jmp
or
inc
xor
cmp
xor
or
outs
stos
ja
cmp
lock
iretw
loop
leave
pop
push
pop
lods
mov
xchg
pop
dec
fcom
and
scas
pop
mov
je
movs
test
loopne
mov
adc
aaa
bound
dec
lods
and
leave
test
lods
(bad)
jl
inc
(bad)
xor
gs
mov
push
call
and
shr
cmp
(bad)
push
test
icebp
ror
retf
test
comiss
dec
jecxz
int
pop
or
call
mul
pushf
cmp
aas
sub
push
jno
mov
and
scas
push
shl
sub
(bad)
fcmovbe
cmp
test
add
outs
push
outs
dec
test
pop
dec
bound
cld
mov
add
add
cmp
stc
fadd
int3
dec
aaa
cmp
add
sbb
jne
push
mov
dec
jp
pop
pop
jp
dec
push
in
loop
cmps
frstor
jle
inc
dec
inc
push
mov
pop
pop
or
sbb
mov
popa
pop
mov
stos
in
push
cmp
int3
mov
push
jbe
pop
fidivr
aad
jl
adc
out
in
sti
sub
sbb
jbe
les
and
push
cmp
push
ret
in
bound
adc
fadd
pusha
jp
and
repz
mov
fist
scas
mul
int3
mul
push
pop
xor
fadd
out
mov
leave
add
sbb
fst
add
and
sbb
rol
pop
mov
aaa
xchg
aaa
cmp
scas
popa
rcr
push
idiv
sub
out
add
and
xor
add
adc
pushf
outs
(bad)
loop
enter
push
(bad)
jns
xchg
fsubr
rcr
test
jg
sbb
sahf
push
mov
xchg
xchg
jp
push
and
inc
in
lock
rcl
dec
inc
dec
mov
in
lods
xor
rol
jnp
test
(bad)
and
leave
sbb
bound
mov
scas
dec
mov
push
dec
fnsave
shr
sub
movs
xor
ret
retf
jno
and
mov
out
iret
fisub
scas
iret
loope
cmp
stos
enter
cmps
aam
push
mov
jbe
sbb
jecxz
cmps
sahf
adc
xchg
lds
rol
mov
push
and
js
mov
dec
retf
cmp
(bad)
mov
lods
dec
mov
outs
fwait
and
scas
cmps
icebp
or
call
inc
push
and
sbb
jo
imul
test
push
int
mov
xor
pop
inc
lods
sub
int3
inc
push
cmp
js
sbb
popf
inc
stos
jb
movs
ret
push
xor
lds
in
add
cmp
dec
shr
jle
data16
jae
imul
jge
sub
dec
xchg
adc
xor
lock
cmp
adc
jp
sbb
and
lods
mov
ret
sub
jae
pop
data16
pop
int
outs
sbb
jp
pushf
push
xchg
sub
and
push
cmp
mov
cwde
dec
aad
(bad)
cmps
cdq
inc
loope
mov
mov
dec
clc
enter
in
les
data16
cmps
not
push
sbb
in
into
enter
rcr
and
mov
push
lea
addr16
push
add
xchg
div
dec
mov
adc
cdq
ror
pop
xor
mov
push
test
fwait
mov
sub
xchg
lods
leave
lds
retf
xchg
fs
sub
popa
pop
(bad)
loope
retf
xchg
fld
or
arpl
sar
mov
cmp
icebp
dec
icebp
push
mov
push
mov
cmp
xchg
mov
push
retf
cmp
enter
movs
cmp
hlt
in
or
add
das
movsx
ins
push
aas
xor
inc
das
movups
data16
mov
imul
xchg
add
jo
test
dec
and
jmp
dec
sbb
test
dec
dec
sub
lds
xor
icebp
and
jp
inc
mov
xchg
lahf
ins
xchg
or
and
cmp
pop
push
and
cmp
lea
mov
in
pop
ret
xor
sbb
xor
mov
adc
je
push
cmc
or
xor
adc
dec
enter
imul
out
fld
pop
inc
add
push
xchg
dec
cmp
mov
ds
ds
jg
imul
xchg
shl
and
dec
into
shl
in
cmps
fs
dec
pop
mov
ins
mov
or
fs
out
(bad)
test
push
inc
jo
push
out
push
push
mov
or
stos
xchg
or
fwait
jne
push
mov
outs
mov
(bad)
jns
pop
or
push
gs
sub
mov
sbb
dec
pop
pop
into
ins
pop
fst
or
fwait
(bad)
and
mov
and
mov
or
hlt
in
push
out
fidivr
xlat
loopne
loop
jo
mov
std
push
jns
sbb
fst
xor
inc
cmp
imul
outs
and
ins
sbb
jge
not
dec
jno
(bad)
scas
daa
outs
dec
dec
fwait
loopne
dec
mov
jle
cwde
lahf
(bad)
stos
das
out
test
push
loopne
stos
jl
push
scas
pop
(bad)
pop
pop
dec
ins
and
push
lea
(bad)
ror
push
in
xchg
xor
ss
mov
test
sub
cmp
jl
aam
outs
mov
dec
jge
and
mov
sti
cwd
inc
dec
dec
inc
xor
jle
xchg
dec
adc
fdiv
mov
jmp
cmp
shr
dec
pop
push
cld
inc
out
scas
fst
iret
mov
jmp
push
xor
sbb
cwde
jne
xchg
and
lea
xor
dec
jae
push
xor
cmp
imul
xor
cmps
sahf
jnp
movs
(bad)
gs
enter
out
mov
imul
sahf
push
push
mov
js
imul
icebp
movs
not
mov
adc
cwde
cmps
int
xchg
call
ret
or
jb
test
jmp
loope
sub
mov
jno
loope
(bad)
(bad)
or
xor
xor
xor
aad
jmp
imul
add
imul
xchg
inc
adc
inc
or
stos
dec
jp
add
mov
mov
mov
mov
retf
mov
push
ret
xor
xchg
cld
aad
sub
push
pushf
pop
mov
dec
xor
or
push
xchg
je
popa
push
aaa
jb
iret
or
mov
scas
clc
mov
(bad)
cmp
retf
push
lea
xchg
loope
call
pop
es
push
neg
push
lock
push
cmps
fwait
push
dec
(bad)
lock
or
aaa
cld
adc
shl
jg
cmc
outs
cld
mov
jle
xchg
xlat
enter
push
cmc
(bad)
repz
hlt
jg
sub
mov
idiv
or
pushf
jne
push
rcr
out
test
cmp
cmp
sub
push
jno
hlt
jae
sbb
dec
(bad)
imul
call
aad
sbb
cmps
int
dec
stos
cs
lahf
inc
popf
inc
je
aad
cli
call
sbb
push
push
mov
or
sub
sbb
xchg
mov
mov
mov
ss
or
xor
jo
jno
dec
jne
test
push
push
xlat
mov
push
pop
fadd
cmp
push
push
lahf
call
xor
push
fcmovne
pop
push
(bad)
bound
xor
leave
sahf
lods
lock
jecxz
shl
cmp
cld
pop
fnsave
add
stc
aas
jp
xchg
ret
mov
fwait
pop
leave
ja
mov
(bad)
es
mov
xchg
pop
inc
fsub
test
retf
pop
ror
imul
daa
mov
push
push
mov
in
dec
ds
dec
fbstp
lods
lds
aam
cdq
push
push
fisub
jecxz
addr16
out
(bad)
stc
push
cmp
out
icebp
mov
aam
in
fcmovb
and
dec
or
movs
and
lahf
aaa
xchg
(bad)
aaa
pop
mov
xor
mov
add
mov
sub
mov
ins
mov
xchg
nop
movs
xchg
mov
pusha
xor
mov
mov
aad
jmp
jbe
push
mov
inc
stos
mov
nop
mov
inc
ds
mov
dec
shl
pop
jecxz
data16
xchg
pop
jmp
ror
add
mov
fsub
dec
movs
push
(bad)
bound
and
inc
push
xchg
pop
enter
arpl
dec
(bad)
and
mov
or
or
mov
jnp
sub
dec
rcr
jecxz
xor
inc
sbb
mov
jecxz
das
pusha
or
add
mov
jecxz
xor
cmp
jmp
or
sahf
mov
out
adc
daa
mov
pop
je
jbe
xchg
push
sub
shl
and
xor
inc
add
push
xlat
lods
xor
popf
leave
xchg
dec
ins
daa
nop
daa
cmp
xchg
fcomp
sub
sub
xchg
xchg
sbb
jmp
sub
jo
sahf
popa
fmul
lea
fsubr
in
mov
or
shl
rcr
mov
push
es
ffree
(bad)
mov
push
dec
je
dec
in
or
in
mov
push
push
sub
xor
pop
ret
ficom
inc
clc
mov
push
movs
and
mov
sbb
xchg
ds
push
jecxz
xchg
retf
daa
movs
xor
mov
and
push
cmp
sub
sbb
xchg
or
aaa
mov
adc
sbb
mov
add
addr16
test
rcr
adc
lea
sbb
xchg
or
push
test
scas
pusha
mov
xacquire
adc
dec
xor
pusha
ret
push
xor
repnz
adc
movs
lods
and
jnp
retf
inc
stos
jae
cmps
rol
inc
aam
push
dec
fwait
sub
jge
cmps
mov
mov
xchg
retf
shr
jle
iret
or
pop
stos
stos
bnd
xchg
stos
or
xor
out
mov
inc
lds
(bad)
fdivr
add
(bad)
dec
mov
inc
sahf
cmp
out
and
scas
jno
push
cmps
pop
sub
arpl
in
stos
outs
and
cmp
xchg
xor
dec
sub
in
push
push
mov
sbb
dec
push
xchg
fcomi
xchg
iret
dec
mov
inc
xor
retf
xchg
cmc
sbb
inc
or
fld
stc
test
fcomp
dec
ret
test
mov
jbe
stos
or
inc
pop
jecxz
mov
add
out
sub
jno
ret
dec
retf
scas
fidiv
lds
sar
and
jg
aas
ja
push
mov
je
pop
sbb
out
mov
mov
mov
out
test
call
xchg
out
fld
adc
xor
and
adc
mov
mov
xor
ret
int3
xchg
movlps
mov
xchg
cmp
out
sub
mov
push
hlt
movs
mov
fdivr
shl
fwait
loop
ja
cs
push
loope
jecxz
push
nop
(bad)
or
popa
cdq
inc
or
mov
mov
imul
out
mov
push
sbb
(bad)
fwait
lock
sub
std
inc
jl
fcmovne
movs
inc
adc
das
jmp
adc
lahf
inc
retf
mov
fimul
mov
rcl
pop
ds
xchg
xor
repz
sub
sub
data16
cmp
in
lds
mov
scas
fdiv
fisub
dec
test
push
arpl
dec
ds
mov
or
pusha
ret
(bad)
mov
and
mov
sub
popa
inc
cmps
(bad)
jge
or
imul
jne
shl
jmp
xor
add
sub
leave
and
sbb
push
or
cmc
mov
mov
ret
mov
pop
pop
neg
aaa
mov
(bad)
mov
mov
jl
fdivr
jmp
ss
dec
push
test
dec
repnz
adc
sbb
inc
gs
ret
lods
pop
mov
mov
xor
pop
(bad)
rcr
mov
stos
cmp
pop
popf
mov
call
rcr
or
icebp
shl
mov
sar
cmps
mov
sbb
pop
and
push
add
mov
pusha
add
test
shr
cld
mov
dec
test
add
adc
add
shl
adc
jmp
dec
xlat
xor
ret
cld
fsub
jge
and
daa
push
fstp
rol
fldcw
les
loope
rcl
out
std
popf
aas
xor
sub
adc
pop
clc
test
mov
pop
xor
out
enter
jl
not
cmp
pop
push
arpl
es
mov
nop
jg
into
inc
cld
bound
shr
push
test
pop
in
sbb
mov
scas
jp
lods
adc
lods
or
test
push
dec
cs
loop
mov
or
stc
add
lods
sub
adc
outs
inc
jno
js
cmp
sub
cmc
loop
loop
jbe
push
and
fwait
mov
ja
icebp
cmp
adc
cwde
neg
clc
or
cmp
jp
xlat
mul
test
stos
push
(bad)
pop
pop
js
push
js
shr
pop
pop
mov
shr
lods
popf
sbb
in
and
xchg
jecxz
jno
cmp
or
(bad)
cmp
xchg
dec
(bad)
push
sub
out
xchg
ins
scas
push
mov
(bad)
cmp
lock
push
(bad)
xchg
iret
push
call
or
out
repz
pop
and
mov
add
mov
lods
jbe
sub
pop
inc
lock
push
dec
ss
xor
dec
push
fnsave
mov
movs
or
and
add
popa
mov
outs
and
(bad)
pop
adc
stos
call
call
push
and
push
inc
or
push
rol
hlt
retf
ret
nop
dec
les
je
sbb
cli
push
clc
and
mov
stos
mov
xor
sub
scas
stos
(bad)
jecxz
xchg
mov
sub
jno
inc
adc
sub
xchg
mov
js
or
push
cmps
mov
cmp
pop
dec
pop
cmp
js
clc
data16
xchg
(bad)
lds
push
in
xor
cmp
repnz
sub
jo
xchg
fisubr
sahf
cmp
(bad)
pusha
jmp
mov
adc
mov
hlt
dec
(bad)
or
je
ins
call
(bad)
push
jb
mov
(bad)
xchg
je
stc
div
lea
jmp
loopne
sar
pop
xchg
mov
xchg
popf
cdq
push
cs
xchg
xchg
sbb
bnd
push
shl
and
xor
cs
inc
jnp
lods
loop
shl
cld
cmp
xchg
(bad)
or
cmc
jge
mov
dec
bound
xchg
adc
dec
sbb
and
push
xor
stos
push
imul
movs
sbb
fwait
arpl
jne
leave
stos
fcomp
cmc
cs
mov
pop
gs
pusha
push
ja
jne
xchg
ss
into
mov
mov
mov
in
ret
mov
and
xor
repz
sub
pop
lods
push
cmps
push
dec
pushf
sti
dec
stc
addr16
mov
add
mov
popf
jns
movs
push
or
xchg
gs
or
xor
imul
add
add
dec
call
jbe
cmp
adc
iret
and
scas
bound
fisttp
add
push
xchg
add
ret
sub
outs
lds
in
dec
loopne
lds
gs
shr
and
push
int
jo
leave
dec
arpl
movs
shl
fsub
popf
adc
cmp
mov
rcr
les
mov
rcl
mov
movs
(bad)
outs
push
jle
xchg
push
xchg
sti
sub
movs
ror
inc
test
mov
xchg
pop
inc
xchg
sub
jno
inc
ret
out
cli
xchg
das
jno
push
lods
pop
mov
jge
mov
cmps
inc
call
call
xchg
jb
sbb
(bad)
out
inc
test
dec
cmp
sub
inc
loope
ret
gs
add
test
dec
jb
cmp
xchg
repnz
js
iret
int3
mov
lods
jnp
add
inc
mov
mov
pop
xchg
test
or
dec
jmp
ins
push
mov
in
push
std
lahf
movs
dec
stos
dec
mov
push
and
dec
dec
retf
mov
fs
sub
outs
pop
call
cmps
push
sbb
iret
push
scas
adc
or
out
xchg
or
retf
adc
jmp
movs
and
mov
lea
xlat
xchg
mov
aad
sub
movs
shl
pushf
cmc
addr16
daa
es
push
jmp
jns
inc
in
push
jle
rol
daa
ss
(bad)
std
(bad)
pop
les
pop
push
fdivr
fdivp
movs
in
pop
cmps
push
xchg
cmps
xchg
dec
rol
sahf
push
pop
popa
je
mov
add
jmp
and
test
aad
dec
mov
lock
ror
cmp
xor
sbb
jb
scas
mov
sahf
ja
fidiv
xchg
sub
cmps
js
mov
ins
dec
ror
jns
jae
test
sub
daa
push
fs
add
out
daa
and
cmps
sub
rcl
jl
sub
imul
sub
(bad)
gs
out
pop
retf
inc
pop
rcr
test
mov
mul
mov
ja
mov
bound
lds
xchg
inc
push
movs
test
and
mov
xor
jb
outs
adc
jp
(bad)
mov
sub
in
sahf
aad
gs
sub
jne
push
movs
in
fs
jns
pop
cmp
sbb
mov
mov
(bad)
(bad)
imul
pop
sar
pop
stc
ror
ins
mov
add
sahf
popa
icebp
mov
cwde
retf
gs
push
sub
or
sbb
jo
xchg
sub
ins
scas
sub
pop
out
mov
lea
movs
push
aas
inc
outs
xchg
add
xchg
lock
in
mov
add
arpl
dec
in
cmp
adc
inc
add
cmps
retf
adc
(bad)
into
and
in
je
frstor
retf
mov
cmc
pop
dec
push
xor
fsubr
sti
mov
cmp
and
jp
jmp
in
das
dec
dec
sahf
ror
sbb
test
pop
inc
outs
inc
xor
push
cmps
push
mov
pop
mov
or
jecxz
cmp
cmps
stos
push
cmc
mov
test
fstp
test
les
mov
dec
cmp
lea
mov
(bad)
rol
retf
lods
pop
inc
pushf
es
inc
sub
mov
inc
sub
pop
mov
sub
mov
daa
or
ja
and
pop
pop
ficom
hlt
dec
lods
or
pop
xchg
push
sbb
(bad)
movs
pop
lods
pop
mov
xor
mov
div
jbe
into
pcmpgtb
(bad)
cdq
div
jle
test
pushf
pop
into
(bad)
shr
addr16
jmp
cmps
fmul
xor
push
ins
mov
retf
popf
pop
fucomip
pop
xchg
jns
jl
cmps
push
xor
js
fist
in
adc
sub
adc
sub
sbb
repz
mov
in
sbb
icebp
push
xor
arpl
(bad)
shr
inc
jae
and
adc
out
in
sbb
mov
nop
mov
cld
inc
sbb
aam
push
add
aas
dec
xchg
in
sar
mov
pop
and
cmps
pusha
aam
xchg
inc
ror
mov
ja
inc
out
dec
push
or
(bad)
sbb
popa
sub
mov
je
enter
fstp
(bad)
sub
inc
xchg
mov
add
ret
out
imul
scas
repz
push
retf
xchg
mov
pushf
ficomp
xchg
popa
and
pop
xor
sub
jo
mov
or
call
push
mov
neg
nop
xchg
jnp
arpl
into
cmp
adc
test
cli
fs
enter
stos
scas
dec
sub
rcr
loopne
and
pop
mov
push
test
mov
test
pop
push
mov
xor
test
mov
mov
cmp
dec
aaa
xor
sub
and
into
mov
pop
xchg
loopne
loope
dec
lods
int3
leave
cmp
inc
or
dec
std
in
jecxz
add
iret
pop
popa
xchg
adc
jge
cmps
std
pop
scas
push
jno
lods
push
fadd
jge
ror
scas
js
jno
cmp
sub
pop
scas
and
and
and
arpl
xchg
imul
movs
daa
mov
lock
ret
aaa
lods
push
dec
hlt
sub
pop
inc
in
daa
test
xor
cld
sbb
add
js
aad
sub
xchg
fild
push
imul
sub
out
jae
mov
jp
fsubr
(bad)
cmps
pop
xor
loopne
inc
sub
xchg
mov
movs
jg
mov
imul
jo
popf
pop
inc
jge
xchg
mov
xchg
xchg
pop
sbb
xor
retf
mov
fimul
cmps
movs
xor
push
(bad)
lock
mov
xchg
mov
jnp
fidivr
jne
add
gs
add
(bad)
jae
pushf
movs
push
jle
mov
daa
pop
push
mov
jno
jp
in
stos
ja
int3
popf
ja
lahf
fwait
inc
psubusw
cmc
test
add
cdq
mov
xor
fdivp
lods
pop
mov
test
push
icebp
pop
stc
clc
xchg
test
sub
lods
stos
jbe
push
or
dec
push
aam
jmp
sub
push
mov
jmp
(bad)
mov
loop
xor
jo
pop
dec
lods
ja
push
repnz
clc
scas
inc
lahf
icebp
shl
push
dec
cmp
scas
mov
fs
inc
daa
(bad)
in
fadd
inc
mov
retf
(bad)
rcl
inc
sbb
aam
cli
mov
jne
fcmovbe
jmp
cmps
push
lahf
ja
retf
retf
mov
ficom
out
dec
sbb
and
icebp
inc
leave
movs
push
ss
xor
push
jnp
fstp
adc
xchg
push
mov
stos
gs
call
push
scas
imul
fcom
push
stos
jmp
stc
mov
ins
jb
or
dec
xor
mov
les
sub
pop
call
out
xor
retf
int
pushf
aad
xchg
inc
fistp
enter
xor
je
push
mov
scas
mov
frstor
adc
in
pop
mov
iret
or
push
inc
cld
loope
mov
sbb
jle
cwde
daa
test
pushf
aas
sub
rcl
(bad)
icebp
xor
pop
aas
outs
inc
inc
iret
gs
cmp
mov
fisttp
std
rcr
sahf
mov
adc
xor
pushf
repnz
adc
inc
xchg
mov
xchg
cmp
retf
mov
sub
push
push
mov
pop
mov
cdq
cmp
cli
pushf
jmp
or
mov
mov
cld
inc
test
xchg
inc
mov
mov
adc
xlat
sub
rcr
inc
pop
ret
jb
lods
xchg
dec
mov
(bad)
in
xchg
sub
repnz
jb
cmc
push
retf
retf
iret
(bad)
dec
rcl
lods
pop
or
arpl
mov
jb
movs
aam
inc
std
(bad)
movs
jbe
pop
test
(bad)
sub
aaa
xchg
in
sub
call
xor
inc
inc
jp
mov
sub
lods
imul
loopne
pop
(bad)
(bad)
mov
cdq
sbb
pop
mov
(bad)
popa
dec
mov
jecxz
dec
dec
dec
mov
add
xlat
test
scas
js
outs
adc
xor
add
mov
cdq
mov
cmp
sub
cs
in
and
add
inc
out
or
cwde
pop
cld
dec
jnp
jbe
fimul
fimul
xchg
icebp
cmp
loop
xchg
push
cs
xchg
fisttp
or
into
fdivr
fdivr
xchg
push
mov
in
mov
(bad)
fwait
cmp
ins
imul
jae
aad
sbb
(bad)
dec
mov
sub
jge
out
lock
hlt
mov
sub
lods
loope
xrelease
add
lock
sub
dec
fldcw
jge
pop
adc
mov
add
inc
ret
test
inc
js
mov
in
mov
push
push
pop
sub
loop
mov
outs
pop
push
pop
iret
push
test
cmp
fdivr
fadd
add
or
fldenv
mov
push
retf
mov
mov
movaps
hlt
addr16
lock
inc
das
mov
stc
and
out
sbb
jnp
fidivr
jp
pop
xchg
ds
retf
pop
ins
enter
push
call
cmp
adc
xchg
outs
out
jle
xchg
clc
adc
jmp
out
pop
mov
dec
pop
test
jle
pop
addr16
or
outs
xchg
and
test
xchg
cmc
pop
inc
jmp
jp
int3
pop
sti
fdivr
jmp
call
loope
mov
call
ss
int3
aam
test
fdiv
mov
pop
aas
jmp
pop
loopne
dec
push
sbb
rcl
jg
xor
push
loope
inc
das
jns
and
mov
mov
and
mov
mov
mov
cdq
xor
xor
stc
mov
pop
sbb
pop
js
mov
invd
mov
fwait
inc
mov
dec
xchg
sar
cli
scas
cmp
and
mov
fld
push
inc
jb
push
test
loop
inc
enter
lock
xchg
(bad)
xchg
cdq
jmp
pop
out
mov
leave
sbb
push
data16
aaa
inc
jge
clc
push
sahf
jbe
jecxz
adc
mov
cmp
cmp
js
jbe
or
mov
shl
xchg
test
mov
les
xchg
js
int
dec
adc
ror
enter
sti
das
mov
fbld
ret
adc
push
test
movs
nop
dec
and
inc
and
push
lea
add
mov
cmps
push
inc
jp
jmp
rcr
mul
dec
enter
ja
call
aad
test
xor
xchg
icebp
hlt
push
adc
movs
test
les
fld
test
scas
mov
inc
mov
jmp
cs
test
and
add
dec
ret
push
popa
xor
imul
mov
ds
mov
push
arpl
sbb
and
fcom
fadd
push
mov
lods
dec
add
pushf
pop
test
mov
sbb
fdivr
fsubr
bound
rol
mov
scas
jge
out
fsubp
xor
mov
or
mov
dec
cmp
scas
sbb
(bad)
xchg
pushf
jle
inc
inc
mov
push
xchg
ds
xchg
inc
and
mov
inc
daa
jno
out
adc
sbb
movs
or
std
mov
pop
outs
retf
add
cmp
idiv
and
loope
xlat
pop
movs
sbb
jb
jne
fadd
sbb
es
inc
sub
inc
lock
jl
xor
sub
scas
rep
mov
xor
in
std
cwde
sub
inc
aam
or
lds
xlat
into
adc
push
imul
aam
dec
push
jmp
lods
popa
dec
aam
rcl
xchg
inc
push
dec
adc
fwait
pop
xchg
cmp
outs
jbe
or
add
sbb
add
add
pop
jne
fstp
push
mov
ins
(bad)
or
daa
repz
adc
add
xor
int3
jle
mov
(bad)
mov
mov
rol
and
jge
inc
int3
inc
sbb
inc
xchg
jns
sti
push
mov
mov
lods
xchg
push
hlt
repnz
test
(bad)
iret
and
cmp
xor
in
arpl
mov
mov
pop
jecxz
jmp
or
or
or
add
jl
lods
xor
jmp
mov
inc
in
jo
ficom
jbe
xchg
mov
push
dec
in
lahf
fst
mov
jno
test
ins
push
cmp
mov
pop
push
lahf
loope
mov
pop
neg
lea
xchg
hlt
dec
cmps
aad
push
outs
jno
mov
inc
ret
data16
mov
inc
movs
retf
imul
(bad)
mov
jp
pop
xbegin
call
(bad)
xchg
add
(bad)
loope
push
push
ret
dec
xor
mov
jg
sub
xchg
xlat
adc
(bad)
ret
dec
dec
xchg
or
jae
or
pop
push
cld
mov
aas
out
sbb
arpl
inc
push
cmps
inc
test
(bad)
sti
lds
sbb
sub
dec
sbb
cmc
adc
pop
and
(bad)
rcl
dec
xor
sbb
inc
cmps
bound
nop
cmp
fsub
jno
cmp
xor
mov
inc
dec
clc
les
stc
sahf
icebp
inc
rol
js
clc
(bad)
aam
add
das
stos
ins
sti
inc
xchg
sub
cli
fsubr
(bad)
idiv
add
mov
or
imul
mov
into
mov
retf
cmp
mov
jge
sahf
dec
inc
mov
push
nop
cmps
sbb
dec
cmp
ficom
adc
push
jne
xchg
fucomip
ret
dec
rcr
sub
shr
dec
and
int3
stos
push
and
sbb
fbstp
mov
adc
or
pop
xchg
(bad)
dec
lods
add
out
and
xchg
nop
fdivr
mov
xor
test
jno
ret
or
sub
or
cdq
xchg
lods
xchg
add
fisttp
pop
xor
sbb
xchg
push
in
mov
(bad)
loope
stc
sub
sub
pop
mul
das
dec
and
inc
nop
jle
jns
pushf
add
ret
push
fs
cmc
push
popa
xchg
out
enter
sar
sbb
in
pop
xchg
rcl
adc
retf
xchg
dec
aad
ins
fiadd
not
repnz
xchg
dec
clc
lods
cs
jl
loop
scas
outs
ja
xor
cmp
fwait
inc
and
push
xchg
sbb
xchg
push
jo
cwde
mov
mov
bound
xchg
fadd
test
xor
and
jnp
fnsave
adc
jmp
push
push
jecxz
pusha
dec
sbb
(bad)
loopne
pop
dec
out
sti
adc
test
jp
neg
and
push
fwait
add
nop
cmp
(bad)
movs
pop
mov
les
or
add
or
icebp
pop
icebp
jl
xchg
jmp
push
test
cmp
push
cmp
movs
jmp
fisttp
ins
lahf
xor
dec
cs
stos
xchg
movs
pop
es
ret
bound
mov
xor
popf
ret
cmps
or
cmp
push
aam
imul
test
fidiv
mov
pop
retf
(bad)
adc
jb
mov
pop
dec
(bad)
mov
(bad)
das
ret
ja
cmp
pop
pop
mov
push
scas
imul
stos
pop
jbe
mov
aaa
jo
xchg
jmp
jnp
cs
fadd
push
(bad)
shr
xlat
mov
sahf
xchg
js
lock
loope
outs
push
pushf
mov
std
push
test
arpl
imul
cmps
mov
mov
pop
popa
sub
dec
xchg
loop
bound
or
(bad)
hlt
sub
cmp
xchg
or
push
nop
ss
inc
popa
fmul
or
jl
in
push
xchg
dec
or
pop
std
jbe
add
inc
in
or
in
sub
sar
gs
ins
inc
pop
pop
in
sti
loope
mov
jmp
(bad)
test
add
mov
es
sub
and
out
push
sbb
xor
bnd
ins
and
sti
mov
test
stos
adc
xor
xchg
je
add
daa
ficomp
inc
push
dec
scas
xchg
sub
(bad)
jmp
popa
push
setg
out
movs
push
mov
push
push
leave
call
aad
pop
mov
mov
push
push
mov
sbb
mov
repz
imul
jp
loop
ins
inc
push
push
pop
fst
cmp
mov
imul
repnz
pop
stos
adc
xor
push
imul
repnz
push
mov
repz
lahf
icebp
test
jmp
lahf
mov
push
xor
push
hlt
jl
cmp
add
mov
arpl
dec
cld
stc
mov
jnp
jp
xchg
fwait
cli
loopne
ret
dec
cmps
pop
sbb
(bad)
movs
cdq
data16
rcr
dec
retf
or
jae
sub
mov
test
sahf
mov
mov
test
call
shl
cli
mov
fbstp
aaa
jne
leave
fimul
imul
aad
fistp
stc
cli
mov
adc
gs
je
ins
pop
pop
in
mov
stos
xchg
rcl
into
movs
jecxz
aam
xchg
push
lea
mov
scas
push
adc
mov
jo
dec
test
out
cmp
sbb
adc
dec
cs
(bad)
in
xchg
cli
mov
dec
mov
inc
frstor
shl
cmp
and
int3
imul
iret
dec
sbb
cmp
push
xchg
mov
mov
fstp
jbe
mov
test
xchg
pusha
(bad)
sbb
dec
push
cmps
sbb
add
retf
test
jbe
test
and
and
xor
js
aad
or
fs
stos
fcmovnbe
popf
jge
fwait
sbb
hlt
sub
pushf
xchg
sub
push
inc
add
ror
jmp
mov
mov
cmp
std
fst
push
mov
push
jge
aad
jne
push
jae
mov
inc
test
popa
add
adc
jae
pop
jmp
loope
mov
dec
lahf
jmp
inc
loope
dec
je
xchg
cli
test
mov
scas
loop
aam
mov
jnp
xchg
jo
cmp
mov
(bad)
sahf
push
popf
jp
into
xchg
xor
dec
movs
dec
daa
sub
stos
rcr
mov
rol
push
dec
jp
add
jecxz
push
pop
lea
jne
inc
mov
loop
jmp
inc
popf
cmps
into
dec
stos
cdq
mov
and
sahf
loope
push
and
push
dec
mov
push
icebp
and
sbb
mov
cs
(bad)
int
ins
test
lods
scas
bound
popa
or
xchg
fist
mov
hlt
adc
aad
in
jecxz
mov
addr16
mov
dec
push
out
leave
and
call
xchg
xor
dec
xor
in
in
mov
aas
addr16
test
xchg
jmp
lods
js
shl
mov
dec
pop
mov
push
jmp
inc
movs
test
popf
push
xchg
pop
pusha
fiadd
inc
push
sbb
adc
loopne
mov
adc
pop
ror
xor
fisttp
sub
lea
in
aam
stos
mov
push
(bad)
adc
out
inc
pop
or
imul
(bad)
fild
pop
cmps
ret
aam
fstp
cmps
dec
enter
call
cmps
sbb
sbb
ins
into
mov
rol
jb
test
jns
mov
jl
xchg
jbe
fs
popa
mov
es
push
xchg
and
addr16
and
pop
iret
inc
push
les
xchg
and
js
jo
stos
jle
repz
sbb
push
mov
and
mov
push
cld
nop
jle
leave
enter
push
push
test
pop
in
out
mov
lock
dec
test
div
jno
arpl
push
out
movs
or
jae
and
push
sub
jno
ja
jmp
and
stos
xor
mov
push
mov
pop
push
push
gs
test
mov
in
int
cwde
or
lds
push
dec
idiv
ins
fldenv
pop
mov
mov
call
mov
retf
sbb
ins
jns
inc
jbe
rcr
sub
inc
pop
mov
pshufw
sbb
mov
inc
xchg
xchg
dec
shl
pop
pop
ret
mov
pop
sub
movs
shl
test
ror
pop
xchg
cmp
stc
inc
aas
pop
xchg
das
adc
mov
ja
sub
jp
frstor
adc
je
cmps
test
cld
mov
(bad)
adc
in
dec
dec
mov
dec
sub
into
loop
mov
ins
cmp
repz
push
and
or
ficom
adc
mov
nop
loop
xchg
call
cmp
ins
add
retf
adc
stos
xor
inc
in
cmps
push
jge
or
xor
je
jns
jmp
xchg
sbb
sub
in
jne
hlt
fmul
cmc
pop
mov
std
xchg
xor
push
fdivr
cmc
push
push
xchg
xchg
jae
mov
cwde
push
hlt
test
icebp
dec
dec
sub
outs
sub
add
add
mul
dec
mov
nop
adc
pop
adc
xchg
adc
dec
and
add
or
sbb
jp
adc
pop
fmul
add
xchg
cmp
push
ret
loope
in
fsub
push
out
sbb
mov
sbb
sbb
xlat
cmps
(bad)
jmp
cmps
push
fs
xor
call
xor
popa
mov
fsub
pop
cld
add
imul
mov
pop
pop
imul
push
pushf
nop
fs
lahf
push
push
pushf
jbe
lods
bound
xchg
sub
je
scas
ret
mov
ins
dec
jno
ret
xor
xor
mov
aam
sub
mov
ds
push
pop
xchg
(bad)
mov
mov
sub
pop
sbb
xchg
dec
addr16
loope
fsub
push
mov
(bad)
out
shr
mov
jecxz
imul
loop
out
pop
add
push
movs
sub
mov
lock
mov
adc
or
sub
cmp
leave
nop
pop
xchg
stc
les
mov
ds
fcom
jecxz
adc
or
adc
fcomp
mov
outs
fwait
jne
add
loopne
mov
fld
daa
popa
adc
jmp
fstp
lahf
inc
movs
enter
push
jmp
mov
aam
mov
push
pop
sub
lds
(bad)
into
xchg
pop
aad
popf
xor
mov
sub
mov
push
dec
lea
in
fcom
inc
mov
ins
push
mov
cdq
out
pop
sar
inc
push
jne
in
fist
(bad)
adc
scas
jp
movs
(bad)
pop
sub
pop
sub
repz
xor
push
inc
clc
es
test
add
pop
das
xchg
xchg
daa
daa
mov
add
sub
imul
test
popf
add
ins
cmp
pop
jne
(bad)
popa
les
push
cld
ret
inc
dec
retf
cmp
adc
sti
int
mov
movs
xchg
mov
bound
pusha
lock
(bad)
div
mov
dec
push
xor
fmul
mov
push
fmul
popa
or
unpckhps
push
xor
pop
pushf
push
leave
(bad)
adc
cmp
outs
cmp
sub
jns
push
icebp
call
jge
fcmovbe
push
stos
jl
bound
cli
pop
add
retf
fs
dec
and
push
fnstsw
inc
popf
ror
cs
data16
in
psubd
iretw
imul
pop
or
jg
dec
mov
dec
sub
mov
(bad)
js
push
add
fs
push
iret
data16
mov
push
xor
cmp
aas
lods
sub
nop
jp
movs
out
push
sub
or
mov
jno
je
add
jb
mov
cmp
push
mov
dec
in
xchg
(bad)
(bad)
jmp
pop
xor
sbb
shr
in
call
sbb
daa
mov
sar
push
fs
stc
and
imul
addr16
sti
mov
in
and
rcl
mov
inc
out
loop
inc
imul
pop
push
add
gs
mov
cmp
adc
out
sub
and
inc
push
jge
daa
push
repnz
es
xchg
mov
dec
test
mov
mov
pusha
add
inc
call
xor
(bad)
mov
mov
xor
and
sub
cmps
lahf
push
pop
mov
sub
jge
xchg
dec
jno
sub
movs
call
scas
stos
fcom
ficomp
out
pop
aam
dec
scas
clc
(bad)
call
mov
jg
or
sub
gs
pop
xchg
test
ds
ins
sub
or
jae
adc
mov
xchg
neg
cmp
pop
imul
cmp
jb
lock
dec
xchg
push
loop
push
ror
dec
cmp
adc
pop
pop
scas
retf
dec
push
mov
mov
cmp
xchg
cmp
push
and
fdivr
call
adc
push
cdq
mov
fcmovu
dec
inc
stc
jge
frstor
in
retf
sub
jge
shr
cmp
out
daa
addr16
or
cmp
or
cmp
pop
ror
dec
xchg
leave
push
push
push
test
pop
add
mov
mov
xchg
jecxz
push
cmp
adc
call
sbb
pop
sbb
mov
pop
pop
in
push
or
fldcw
in
cmp
jecxz
loope
pop
xor
or
jne
push
int3
xor
stos
les
sbb
shr
xor
add
mov
sahf
nop
jmp
aam
shl
test
in
pop
cs
sub
mov
inc
xor
mov
pushf
jno
jns
fiadd
and
aas
dec
ins
ret
imul
test
and
addr16
jbe
mov
add
push
sti
cli
iret
lods
dec
push
xor
inc
pop
cdq
movs
dec
retf
daa
jae
das
xor
xchg
or
repz
mov
movs
sahf
sbb
jg
aam
(bad)
jo
repz
repz
scas
or
retf
ja
int
scas
cmp
jns
ficomp
outs
mov
mov
pop
adc
mov
in
int3
out
jno
adc
dec
push
lea
push
stos
sbb
fild
lea
das
or
lahf
leave
stos
ins
cs
inc
repz
and
pop
outs
mov
ret
dec
sbb
inc
inc
sbb
mov
push
push
std
sbb
jge
ja
aaa
(bad)
jmp
call
in
or
das
dec
imul
mov
test
in
sub
xchg
aam
or
sub
cdq
xchg
ret
push
ror
xchg
jle
movs
mov
rcr
icebp
mov
shr
or
loope
fnstcw
xchg
fsubr
adc
cmps
(bad)
pushf
imul
sbb
cmp
ins
sbb
sbb
sub
stc
xor
call
mov
ins
pop
jecxz
test
sbb
fwait
clc
pop
xchg
or
inc
pop
cmps
inc
popf
and
repnz
ins
out
aaa
and
jl
in
xchg
or
push
jno
push
movs
movs
scas
xchg
mov
retf
fsubr
std
push
(bad)
pop
push
shl
fisub
pop
pop
gs
inc
jmp
(bad)
cwde
mov
bound
jbe
mov
movs
mov
or
push
scas
lock
mov
sub
jmp
push
jmp
js
(bad)
data16
push
xchg
dec
mov
push
push
push
ret
or
push
(bad)
movs
retf
fstp
movs
stos
test
cdq
fisub
cmps
movs
std
neg
and
push
(bad)
xchg
nop
jnp
ret
and
dec
movs
aaa
sbb
lock
lods
rol
aam
jne
push
lea
xor
dec
mov
rcr
and
dec
push
leave
mov
jge
icebp
pop
mov
push
pushf
test
inc
in
mov
pop
mov
dec
test
sbb
and
push
jg
icebp
jmp
inc
fdivr
(bad)
xchg
outs
(bad)
(bad)
es
cmp
outs
or
adc
aad
cli
fwait
outs
shr
shl
pop
stos
jne
les
add
jmp
or
xchg
pusha
scas
idiv
mov
jno
xor
pushf
mov
std
out
sub
shl
cmp
push
cs
sub
(bad)
dec
fcomip
cmp
or
add
xchg
jp
xchg
mov
add
call
mov
sub
pop
adc
je
jmp
stos
xor
sub
xchg
(bad)
leave
push
xchg
inc
out
inc
mov
and
mov
cmps
sbb
xchg
cmp
mov
jb
ins
loop
xchg
cmps
(bad)
aam
and
push
cs
sbb
mov
rcr
(bad)
sti
int3
test
in
leave
ins
add
add
pushf
test
mov
hlt
sub
test
out
hlt
(bad)
lods
outs
jge
std
lahf
scas
add
pushf
mov
mov
fwait
outs
int
popf
iret
xor
jno
cmp
(bad)
rep
test
cmps
fs
ds
leave
and
fldcw
(bad)
js
push
jmp
cld
leave
sahf
adc
pop
sub
pop
loope
pop
cwde
mov
mov
in
fsub
call
cwde
into
dec
call
xchg
and
sub
mov
addr16
cdq
popf
sbb
ja
out
loope
neg
inc
cdq
icebp
icebp
mov
pop
shr
jo
movs
fidiv
push
lea
mov
cmp
push
cs
mov
ja
cmp
fisubr
(bad)
jbe
mov
rcr
movs
aam
call
xor
(bad)
push
das
xor
xchg
and
push
pop
cwde
ror
or
test
and
rcr
and
fistp
cmc
mov
jg
push
inc
outs
mov
mov
push
das
fwait
jno
adc
movs
dec
or
inc
nop
sti
push
jle
pop
inc
jmp
loopne
fild
add
cmp
imul
xchg
sub
sbb
test
dec
dec
cmp
(bad)
jnp
xor
out
push
fdiv
add
and
and
xor
pop
dec
mov
pop
or
add
pusha
test
daa
mov
cli
in
adc
push
and
add
jbe
adc
cmp
les
fistp
and
les
and
adc
in
ja
dec
shr
retf
sbb
push
xor
sbb
mov
push
xor
loop
imul
xchg
(bad)
outs
and
and
jg
mov
mov
mov
cmp
dec
in
xor
sar
sbb
dec
mov
movs
test
jo
mov
or
std
pop
xlat
sahf
push
push
inc
ins
pop
jp
stos
stos
fist
test
push
cmp
jmp
sbb
mov
and
subps
inc
test
sbb
jne
je
mov
cmp
fwait
or
pop
inc
adc
mov
mov
sbb
movs
jno
inc
sbb
mov
daa
test
dec
les
in
xor
loop
ret
call
push
hlt
gs
inc
mov
dec
rcl
inc
dec
mov
add
(bad)
ds
mov
retf
jmp
pop
bound
mov
push
sub
sub
mov
jne
mov
pop
lods
stos
les
ins
and
mov
dec
cmp
pusha
fwait
neg
ror
dec
lods
ins
adc
retf
inc
ficom
add
cli
xchg
xchg
jl
xor
and
cmps
call
jecxz
std
ret
push
push
mov
call
(bad)
frstor
sub
add
aam
push
pop
sub
fsub
enter
dec
mul
arpl
pusha
sbb
mov
adc
mov
push
add
mov
mov
pusha
outs
les
push
xchg
loop
test
fwait
arpl
add
mov
(bad)
shr
movs
out
dec
jle
les
fidivr
ins
aad
sub
mov
dec
int3
xor
pop
fbstp
inc
in
retf
push
sub
out
jle
daa
jb
mov
and
mov
jo
retf
iret
jg
push
fcomp
xor
(bad)
out
push
push
imul
xchg
outs
xor
inc
mov
sbb
pop
or
test
ds
jecxz
je
stc
outs
sub
int3
cmc
xlat
or
pop
fldcw
adc
jle
dec
dec
aad
call
gs
inc
je
push
bnd
movs
sub
or
rcl
jne
push
push
cdq
hlt
aas
in
lea
sub
enter
jno
rcr
nop
mov
shl
mov
cmp
and
cmp
pop
and
loopne
sti
shl
xlat
loope
dec
out
dec
inc
pusha
neg
pop
adc
sbb
mov
out
lahf
rol
inc
push
sbb
add
pop
add
into
and
dec
loopne
movs
pushf
adc
adc
xor
scas
push
movs
clc
xor
dec
aad
add
or
mov
pop
in
adc
dec
cmc
dec
cs
xchg
fwait
jmp
aam
xlat
inc
mov
movs
push
inc
aam
dec
xchg
xor
adc
lock
inc
and
imul
inc
in
add
dec
les
push
repnz
jno
push
add
dec
jp
jo
dec
into
(bad)
pop
push
xor
adc
add
ins
test
cmp
and
jecxz
cli
inc
push
jmp
dec
adc
in
jb
les
sbb
mov
cmc
les
add
shl
or
or
xor
rcl
cdq
inc
pop
into
mov
aad
push
fldenv
loop
mov
sbb
(bad)
ja
push
add
mov
test
adc
inc
popa
or
out
pop
dec
or
or
fld
pop
stos
mov
ror
adc
aaa
sahf
xor
ret
fidivr
loope
dec
mov
mov
dec
mov
adc
loopne
outs
sub
es
scas
test
stos
aad
iret
cmp
inc
addr16
das
stos
(bad)
sar
adc
xor
dec
cmps
dec
pop
xor
xchg
xchg
stos
mov
or
rcr
leave
je
add
bound
xlat
mov
and
mov
call
(bad)
scas
or
xchg
jmp
or
push
rcr
(bad)
loop
daa
out
cmp
retf
mov
or
mov
ret
scas
js
loopne
rcl
fistp
cmc
jle
mov
xchg
push
and
mov
dec
fwait
ins
mov
(bad)
xchg
out
dec
retf
cwde
ja
add
xchg
xchg
jb
imul
fs
pop
adc
pusha
movs
fwait
pop
fdivr
(bad)
retf
scas
mov
aaa
mov
call
add
call
sub
jecxz
mov
inc
fs
adc
ror
or
cmp
stos
jge
stos
icebp
and
icebp
xor
xor
leave
movs
icebp
jg
pushf
aad
xor
push
iret
out
push
inc
loopne
cli
cmps
mov
mov
jge
mov
xor
push
scas
mov
idiv
shr
lods
mov
into
mov
jge
ficom
loop
push
jne
test
lea
ss
fdivr
test
add
sub
push
cmp
or
or
pop
int
imul
pop
js
aam
inc
lods
mov
mov
dec
lods
cmp
fldenv
push
movs
hlt
add
push
cs
push
pop
mov
jns
(bad)
ficom
cli
jae
icebp
int
inc
out
loop
scas
aam
sbb
jns
cs
shl
push
and
fsubr
or
push
sbb
pop
inc
ds
jnp
mov
neg
xchg
cs
sub
or
sar
mov
cmp
loope
fisub
mov
inc
(bad)
js
addr16
scas
imul
push
in
pop
mov
in
test
loopne
fld
popf
fisttp
addr16
sub
dec
pop
scas
fcomp
and
fdiv
mov
pop
sar
jbe
popa
sub
les
aad
inc
jns
imul
xchg
push
ret
loop
fnstsw
xchg
dec
pop
in
stc
cld
dec
sub
xchg
pop
clc
adc
xchg
cmc
cmps
fcom
mov
rcr
mov
xor
jp
mov
jmp
in
xchg
dec
cmp
dec
adc
mov
dec
jne
test
fistp
das
daa
push
ins
in
jge
stos
jl
pop
cli
psraw
mov
dec
cdq
and
jp
push
mov
popa
adc
pop
mov
ss
xchg
popf
(bad)
and
mov
push
lahf
cdq
xor
lods
adc
arpl
popf
xor
int3
movs
adc
movs
mov
dec
fs
test
push
push
aam
test
push
fwait
ins
mov
inc
pop
jne
fcmovu
cs
pop
mov
sub
mov
fwait
jge
movs
movs
push
dec
and
cwde
adc
mov
loope
sti
stos
lock
ds
in
test
loop
xchg
aas
ins
mov
inc
fbstp
ret
inc
inc
pop
cmp
imul
inc
cmps
mov
das
fsubr
imul
test
jl
in
fild
retf
xchg
jmp
jns
hlt
mov
int
movs
dec
xchg
inc
in
loop
pop
in
add
pop
pop
iret
xchg
xor
sub
mov
adc
jne
jg
sahf
and
(bad)
sbb
bound
push
popf
mov
scas
cdq
nop
int3
test
pop
and
outs
test
mov
dec
xor
in
add
jp
retf
sbb
ror
lods
jmp
push
mov
push
sub
cmp
ret
mov
test
cmps
pop
cmp
(bad)
jnp
fisttp
jmp
push
mov
mov
sbb
jle
in
inc
pop
mov
sbb
dec
cld
sub
xchg
mov
adc
mov
int
ret
pop
mov
jbe
ret
dec
and
rcl
imul
cli
pop
fdiv
les
push
loope
mov
adc
sbb
shl
sar
icebp
addr16
adc
and
xchg
repz
leave
sub
pop
inc
call
add
xlat
sbb
outs
mov
loop
ds
mov
cmp
addr16
cmp
stos
int3
dec
push
stos
call
scas
push
mov
xchg
retf
mov
inc
add
sub
in
in
inc
jno
cmps
push
jle
dec
out
jbe
pop
sbb
pop
push
adc
mov
out
or
imul
add
enter
xchg
fidivr
jmp
mov
lea
(bad)
pop
mov
stos
fwait
push
mov
stos
sbb
pop
inc
and
jo
xor
xchg
mov
dec
push
jl
mov
xor
fist
lods
cmp
mov
dec
repz
jge
enter
sbb
lods
imul
mov
sub
sar
mov
mov
dec
jnp
dec
dec
pushf
jle
movs
mov
xor
and
inc
xchg
je
cmp
dec
dec
pop
sbb
fimul
je
dec
ins
mov
mov
xchg
sub
les
adc
xchg
cwde
xchg
and
push
aam
mov
push
retf
xchg
ficomp
sub
sub
and
push
mov
aad
push
prefetch
fiadd
rcl
inc
push
sub
test
sahf
retf
jnp
cmps
cmps
hlt
dec
xor
adc
dec
ret
neg
ins
lahf
and
mov
mov
jo
xchg
mov
jns
adc
sar
ins
sub
mov
xlat
and
xor
xor
daa
cmp
jno
adc
test
punpckhbw
dec
cmc
inc
loope
cmps
jae
xor
mov
call
xor
mov
pop
test
stos
fstp
or
outs
jmp
xor
mov
jl
mov
cli
jge
and
mov
(bad)
mov
push
adc
inc
cs
iret
sub
cmp
div
xchg
call
mov
inc
mov
fisubr
fnstcw
jge
sbb
outs
inc
fs
push
cmps
sub
inc
lds
test
cwde
inc
push
cmp
adc
sub
push
inc
xchg
or
mov
scas
sub
sbb
jnp
cmc
xchg
push
cmp
dec
dec
shl
test
leave
clc
inc
inc
inc
rcr
leave
fcom
cmp
push
push
jne
mov
call
call
and
jae
cmps
cmp
xor
mov
lds
lea
movs
jg
outs
pop
pop
aad
jae
stc
retf
mov
pop
jns
jl
dec
cmp
or
jnp
mov
cmp
sar
ret
jb
pop
scas
test
xchg
iret
xor
cmp
shl
sbb
scas
ficomp
and
mov
dec
push
stos
push
push
ror
and
je
adc
in
jb
ret
mov
inc
outs
push
in
aas
xor
or
cli
inc
test
push
dec
sub
add
add
(bad)
sbb
mov
jecxz
dec
cmp
outs
xchg
sbb
xor
xor
test
gs
cmp
jmp
shl
cli
(bad)
push
dec
jmp
in
sbb
mov
adc
mov
call
mov
mov
cmp
loope
push
outs
and
test
aad
fcmovb
lahf
pop
push
test
cli
lods
(bad)
xor
mov
(bad)
mov
rcr
jne
test
mov
inc
les
mov
xlat
fwait
jno
xchg
cmc
add
add
ins
push
adc
(bad)
and
mov
push
fisttp
push
(bad)
psrad
cdq
xchg
imul
jne
into
popf
pop
cmc
or
push
push
pushfw
pop
jno
pop
jo
adc
cmp
ins
or
xchg
mov
sti
adc
and
sub
or
(bad)
jno
(bad)
push
repnz
das
ror
outs
xchg
lahf
sahf
icebp
pop
pusha
shl
pushf
add
movs
test
mov
sbb
scas
jae
adc
adc
gs
aaa
jns
mov
mov
imul
mov
sub
(bad)
xchg
jb
fsub
imul
cmps
fwait
sbb
fbstp
push
shr
xchg
sbb
xchg
retf
pop
inc
iret
dec
outs
inc
jae
in
push
sbb
outs
push
fnstcw
in
xor
cmp
cld
pop
sub
push
test
cmp
and
mov
mov
cmp
or
pop
fcmovnu
pusha
jo
sar
outs
retf
stos
idiv
out
xchg
scas
shr
popf
aam
int
cmp
cmps
push
cmps
jae
ret
out
sub
xor
call
fistp
ret
scas
mov
jmp
mov
hlt
xchg
aaa
inc
cmps
and
je
sbb
pop
mov
cmp
(bad)
sbb
sbb
xchg
xchg
sar
add
cmp
ins
arpl
pop
(bad)
mov
add
push
scas
nop
ret
or
retf
movs
jb
fwait
sub
mov
clc
mov
mov
mov
leave
mov
int
pop
in
sub
push
dec
or
out
jns
adc
adc
jb
aas
sub
rol
xchg
pop
jne
rcl
in
mov
mov
xchg
xchg
stos
push
es
pop
xchg
cdq
inc
mov
retf
mov
jmp
lock
stos
jae
mov
cmc
xchg
mov
loope
dec
outs
sbb
pop
lods
imul
push
mov
xchg
scas
(bad)
fbstp
aam
das
push
xchg
inc
test
xor
and
in
cmp
ret
stos
rcl
pop
pop
jnp
(bad)
mov
outs
out
sar
and
and
out
add
push
movs
adc
lahf
mov
repnz
cdq
movs
shr
jno
retf
outs
mov
pop
loop
pop
cmp
imul
and
or
les
outs
adc
test
pop
jae
popf
or
fsubrp
cmps
mov
les
or
movs
sub
xchg
stc
xchg
jbe
push
daa
orps
lea
popa
dec
(bad)
push
icebp
daa
rcl
cli
cmp
jp
(bad)
push
cdq
push
scas
retf
scas
cmps
cmc
lds
jge
mov
test
adc
shr
in
movs
hlt
or
lods
lods
dec
mov
mov
mov
ja
out
xchg
inc
pmuludq
inc
mov
cmps
arpl
add
aas
mov
mov
add
and
push
inc
outs
cmp
je
push
stos
xchg
call
int3
xchg
ja
dec
int3
mov
cmp
test
or
dec
push
movs
lods
fxam
mov
js
into
imul
jae
xchg
sbb
not
sti
cmp
sbb
jb
pop
pop
mov
inc
lods
mov
jno
outs
movs
xor
mov
xchg
call
outs
adc
dec
xor
enter
hlt
(bad)
mov
aad
inc
inc
jne
push
(bad)
fsub
sbb
retf
dec
fisttp
ins
cmp
aad
push
fs
pop
sub
leave
or
out
jmp
jmp
sbb
adc
(bad)
add
rcr
and
stos
fwait
pop
mov
xchg
xor
fs
cld
xchg
aam
adc
popf
sbb
call
ja
das
jno
or
jl
je
std
xchg
out
(bad)
aaa
jecxz
dec
jno
pop
cmp
call
add
push
loop
loope
xor
push
inc
add
int
mov
cs
dec
lds
outs
icebp
movs
(bad)
iret
or
fisub
ret
data16
xchg
jmp
cli
aas
pop
mov
cmps
pop
inc
fiadd
or
jno
repz
xchg
push
loop
add
test
stos
xor
cmp
fstp
xor
cmp
aam
cmp
jmp
lods
scas
jl
jno
sub
movs
fst
dec
movs
arpl
xchg
mov
cmp
test
pushf
jne
lods
mov
sbb
sub
mov
es
pop
sub
sbb
in
arpl
push
dec
xor
sub
stos
sbb
pop
xor
ja
cmc
cs
dec
jmp
dec
push
jmp
int
inc
shl
out
jmp
loopne
imul
add
sub
push
mov
shr
pop
sahf
cmps
out
cmp
sub
sbb
pop
cmp
fcom
jno
sti
add
push
pop
sbb
pop
rcl
push
jg
sbb
loop
rol
sbb
sti
cmps
mov
push
out
test
stos
sub
stc
mov
adc
shl
and
cmps
out
sbb
push
and
stos
(bad)
rol
dec
fcom
push
cmp
push
jp
ret
xlat
lods
lea
shr
cdq
jge
je
push
gs
sub
hlt
int
dec
pop
jno
int3
into
rcr
jno
xchg
inc
mov
(bad)
(bad)
les
lock
xor
and
mov
loopne
xchg
mov
pusha
dec
jno
mov
mov
adc
jno
mov
stos
movs
adc
xchg
imul
int3
cmp
into
outs
inc
pop
fnsave
ret
arpl
pop
not
ins
jno
push
push
inc
js
loop
mov
inc
xchg
dec
ror
adc
popf
cmp
mov
pop
sbb
pop
in
nop
xchg
cmp
nop
ret
lds
ret
bound
popa
hlt
(bad)
das
push
mov
in
pushf
stos
pop
mov
stos
clc
outs
xchg
loopne
scas
cmps
lahf
dec
loopne
add
mov
mov
call
lahf
icebp
dec
lock
mov
imul
cld
bound
push
(bad)
mov
sahf
repnz
push
js
icebp
daa
loope
test
into
loop
retf
mov
ins
fist
xor
and
sbb
xor
nop
mov
mov
test
imul
jno
lock
dec
push
hlt
imul
lds
inc
loope
lea
loope
retf
xlat
lea
test
scas
cmc
mov
add
xchg
inc
movs
shr
aas
xor
cmp
xchg
movs
mov
jno
push
dec
fxch
push
popa
stos
bound
dec
jbe
xchg
sub
popa
dec
or
pop
movs
sub
pop
cmp
jp
add
jmp
jmp
dec
sahf
xchg
shl
popa
adc
mov
pop
and
sub
push
jmp
jo
loopne
xchg
or
add
lea
xor
push
mov
js
mov
fstp
inc
mov
aaa
mov
lock
neg
or
out
jmp
xchg
imul
cmc
cmp
jmp
rcr
in
dec
mov
in
scas
add
xor
inc
dec
loopne
test
mov
sti
adc
mov
dec
inc
sbb
push
sub
out
fdivr
jmp
dec
in
mov
mov
pop
js
jl
mov
jae
int3
mov
aam
push
mov
fcomp
inc
adc
push
mov
jmp
pushf
xchg
loop
stos
pop
gs
aad
sub
mov
int3
jo
and
and
lea
aam
ds
lods
rcl
add
ins
mov
popa
dec
xor
ja
sbb
mov
sahf
sbb
cdq
cmps
dec
mov
or
push
or
es
sub
add
in
scas
inc
scas
dec
xchg
inc
out
into
add
lods
outs
dec
(bad)
sub
xor
cs
inc
pop
icebp
aaa
shl
and
mov
sbb
aaa
in
cmc
es
inc
dec
clc
inc
mov
mov
dec
jle
xchg
test
shl
add
clc
jno
ret
sbb
push
jno
pop
mov
mov
or
and
in
dec
cmps
leave
jge
sbb
and
push
outs
mov
stos
rcr
pop
popa
addr16
loop
mov
aaa
pop
mov
pop
xchg
push
fcmovbe
fld
idiv
leave
inc
sbb
gs
sbb
inc
(bad)
popf
imul
dec
ret
push
loope
shr
scas
aad
pop
imul
daa
jns
pushf
xchg
mov
mov
das
jno
ins
mov
pop
in
movs
mov
cld
mov
push
int3
cmp
int3
cmps
pop
adc
mov
sar
mov
adc
movs
gs
or
cmp
mov
and
je
loope
mov
shl
jbe
dec
mov
cwde
ds
adc
dec
retf
and
bound
mov
jmp
lods
inc
jbe
lods
(bad)
repz
dec
sar
pop
test
ins
mov
mov
dec
sar
addr16
inc
arpl
jp
jmp
and
adc
sbb
sbb
rcr
iret
cmps
pop
das
jb
sub
fmul
adc
lea
(bad)
js
xchg
sbb
test
cmps
jg
sub
jmp
iret
dec
inc
ins
inc
fnstenv
pusha
xchg
fs
and
cwde
popf
inc
jmp
lock
jo
pop
pop
fwait
mov
xchg
inc
movs
fsubr
xor
push
retf
rol
add
mov
ja
xor
fistp
addr16
mov
nop
clc
xchg
jmp
shl
push
jne
dec
test
pop
fdivp
lds
jmp
pop
mov
pop
mov
pop
jg
xchg
leave
pop
mov
push
fsub
popa
daa
bound
stc
shl
or
or
nop
xor
mov
adc
xor
nop
sbb
sbb
add
xchg
xchg
add
repnz
pop
out
xor
jbe
xchg
iret
aaa
dec
ror
and
in
mov
sub
add
out
dec
push
mov
repz
hlt
repz
daa
aam
in
or
ins
mov
mov
pop
inc
dec
jns
dec
push
out
adc
xlat
mov
cli
cmp
bound
push
jle
hlt
shr
fucomp
ins
push
out
or
mov
movs
ficomp
xchg
xchg
jno
dec
mov
movs
nop
inc
adc
ins
cmps
lea
out
mov
in
jne
jae
mov
fist
push
dec
test
cmp
lods
jl
mov
loop
jecxz
xchg
push
jp
fisttp
int3
retf
mov
mov
sar
cmp
mov
imul
imul
and
in
inc
xlat
(bad)
and
sbb
sub
sahf
lock
dec
les
test
call
ret
daa
jo
inc
cmp
jae
sbb
or
adc
add
mov
jle
mov
lds
mov
cmovs
jge
mov
push
sbb
ret
add
adc
mov
test
inc
in
dec
les
std
mov
add
dec
hlt
jmp
mov
pop
sub
inc
pop
sbb
add
mov
dec
or
mov
pop
test
stos
dec
daa
retf
mov
ds
adc
scas
mov
xchg
outs
dec
cmp
aas
loope
ss
xchg
out
push
or
push
mov
cmps
jne
push
fcmovu
sub
cwde
jo
(bad)
inc
jns
out
push
inc
shr
outs
jp
mov
xchg
movs
sub
or
push
add
inc
ja
push
cmp
lods
dec
jmp
pop
xor
adc
push
jmp
ror
cmps
shl
mov
ror
mov
adc
inc
test
mov
ret
and
xchg
arpl
xchg
(bad)
push
pminub
shl
xchg
mov
pop
push
push
fldenv
xchg
push
mov
in
pop
pop
sti
adc
movaps
sub
sbb
mov
push
test
adc
add
ins
arpl
rol
leave
adc
dec
mov
jg
or
sub
push
ins
adc
neg
cs
and
sub
xchg
add
adc
sub
pop
sub
mov
cmp
leave
ins
fnstenv
and
push
mov
sub
aad
jno
and
(bad)
bnd
mov
(bad)
cmp
(bad)
std
mov
imul
into
lods
pop
in
and
mov
movs
add
mov
int
xchg
inc
sbb
test
cmc
cmps
mov
jne
mov
pushf
mov
jle
sar
(bad)
nop
ret
cwde
fwait
rol
jns
jo
ja
xor
mov
ins
int
adc
cmp
sub
sbb
push
dec
(bad)
fisttp
jmp
and
add
cmps
xlat
aad
cs
std
stc
jle
xchg
adc
(bad)
stc
push
or
sbb
call
inc
push
icebp
cmc
mov
and
dec
loope
(bad)
mov
pop
jbe
xchg
fwait
das
inc
mov
sub
retf
xor
sub
movs
mov
mov
mov
jle
ins
retf
xor
and
call
cmps
jns
fldcw
repnz
dec
movs
mov
in
mov
sbb
icebp
xchg
popa
dec
shr
adc
movs
imul
or
push
or
sbb
dec
jmp
pop
pop
cmp
jo
mov
(bad)
addr16
stos
lock
jg
mov
push
stos
aad
sbb
shr
test
out
nop
xchg
pop
or
test
fdiv
lea
ins
and
aam
test
pop
jl
mov
rcl
retf
icebp
or
mov
xchg
test
sub
push
sub
mov
add
daa
pop
or
fmul
push
dec
inc
fsubr
mov
or
sbb
jecxz
loopne
lods
(bad)
adc
push
push
mov
xchg
mov
fisttp
mov
pop
dec
push
lods
and
daa
jo
and
js
dec
dec
sub
fidivr
lods
dec
dec
int3
rcr
jecxz
ret
mov
mov
out
mov
mov
dec
cmps
dec
pop
adc
pop
mov
cs
jnp
stos
retf
cmp
das
and
push
movs
push
lahf
in
imul
mov
mov
push
out
dec
add
das
cmp
jb
xchg
lods
pop
jbe
test
pushf
gs
in
pop
push
push
ss
adc
mov
mov
push
push
cmc
adc
and
inc
mov
dec
mov
mov
call
adc
fld
dec
push
pushf
call
cmp
sub
in
dec
mov
push
cs
mov
sahf
test
and
mov
sar
push
mov
mov
push
fisub
xchg
nop
shr
xor
lods
inc
mov
repnz
daa
es
movs
bound
lds
aad
rcr
add
add
sti
test
mov
dec
or
movs
outs
add
dec
add
inc
mov
paddusw
xchg
push
pop
dec
add
ss
xlat
lea
pop
stos
data16
or
xor
xchg
popa
sub
dec
push
iret
sub
sbb
test
or
fcomi
push
mov
jg
xchg
ja
sbb
jecxz
fwait
and
dec
add
push
pushf
inc
in
mov
mov
sub
movs
test
push
jmp
lea
scas
jl
mov
shl
popa
mov
or
fidiv
test
cmps
mov
ret
mov
sbb
imul
push
rcr
aas
push
jg
lea
call
add
xor
ins
pop
in
pop
inc
aas
cmp
add
mov
aas
dec
cmps
loopne
pop
cs
imul
test
das
ficom
stos
pop
aad
xchg
xor
xchg
adc
movs
data16
stc
int3
mov
cmp
pop
sbb
rol
aad
push
pop
mov
rcl
and
push
js
aam
pop
sub
popf
imul
loope
mov
dec
jb
xchg
test
xor
mov
cmp
add
fwait
popa
inc
mov
popa
gs
cs
js
jo
ret
sub
cli
jae
sub
stos
xor
sbb
cs
push
sub
test
jne
mov
sub
add
mov
pop
rsqrtps
sbb
out
imul
add
movs
mov
lock
in
sar
xchg
push
inc
es
add
inc
mov
loopne
add
cmp
mov
sub
inc
mov
push
stos
(bad)
jg
pop
push
cs
rcr
mov
aad
cs
cmps
cwde
xchg
dec
push
mov
sub
outs
jb
retf
sub
sbb
inc
mov
leave
inc
sar
(bad)
movs
adc
scas
pop
jnp
pop
std
(bad)
cmp
xchg
jae
stos
adc
mov
retf
enter
xchg
stos
fwait
or
out
cs
xchg
add
or
sbb
mov
jne
popf
js
stos
call
into
xchg
(bad)
lea
ins
push
or
jmp
inc
or
test
jb
sbb
dec
stos
dec
xor
cmp
scas
arpl
xchg
in
mov
xchg
call
xor
ins
jnp
inc
pop
dec
js
lock
repnz
out
ins
adc
add
not
cmp
test
cli
adc
push
xor
jbe
jmp
add
push
lds
xor
pop
push
sub
cmps
popf
fnstsw
lods
dec
stos
pop
ins
mov
test
and
mov
xor
pop
push
dec
gs
xchg
push
cdq
sahf
push
adc
popa
jl
xchg
pop
cli
xchg
shl
inc
outs
sub
cmp
adc
fnsave
nop
int3
enter
lahf
je
repz
add
dec
fadd
imul
movs
mov
xor
bound
call
movs
xor
push
nop
dec
pop
das
xchg
mov
aam
nop
inc
mov
js
sbb
push
lods
xlat
mov
out
cs
or
inc
xchg
out
inc
mov
out
sub
jb
es
adc
call
fcomp
pop
push
mov
call
in
cwde
ins
ss
or
and
movs
sub
push
ror
xor
push
xor
mov
mov
push
loope
jno
push
inc
daa
(bad)
cmc
data16
fs
inc
ins
aam
cmp
cmps
lods
sbb
stc
cli
ror
aad
test
add
fstp
cmp
jg
jnp
sbb
shl
out
out
std
ins
les
cmp
jmp
cli
jno
add
shl
popw
test
mov
lods
stos
repnz
jmp
ins
int3
and
push
push
nop
mov
ret
sub
jl
jp
pop
cmp
daa
setl
int
mov
dec
xchg
pop
push
xor
cdq
loopne
(bad)
adc
inc
push
jle
daa
out
jmp
scas
dec
out
mov
inc
addr16
mov
stos
mov
movs
mov
and
pop
xor
aad
jle
and
xchg
adc
mov
mov
dec
dec
push
lahf
arpl
jp
in
add
movs
cmps
fwait
cmp
sbb
(bad)
fsub
push
cmps
or
iret
cmc
mov
enter
xor
jne
mov
fwait
mov
std
pop
and
sar
and
and
or
jnp
fisttp
xor
jae
movs
nop
xchg
inc
xor
ss
jne
fwait
adc
xor
into
sbb
xor
fidivr
pushf
sub
mov
and
int3
xor
rol
out
inc
mov
push
or
mov
xor
cmp
add
jl
in
or
or
mov
es
movs
lods
ret
movs
adc
test
and
mul
mov
jbe
push
pop
pop
xchg
(bad)
shl
or
ds
cmp
xor
xchg
add
fild
and
push
popa
mov
mov
push
ins
pusha
mov
push
out
sbb
push
hlt
mov
jb
aad
or
pop
cmp
icebp
or
push
icebp
dec
shufps
addr16
pop
mov
pop
mov
(bad)
sub
sub
outs
adc
in
mov
mov
(bad)
call
push
shl
push
push
dec
int
inc
pop
sar
daa
inc
adc
adc
xor
jmp
loopne
mov
xchg
mov
mov
dec
addr16
loopne
into
ds
mov
pop
or
pop
adc
call
aam
shl
(bad)
lock
sbb
shr
push
mov
test
cli
outs
jmp
retf
das
adc
daa
shl
xor
ficomp
inc
mov
pop
push
jns
xor
sub
xchg
cdq
push
aam
xchg
jmp
fld
(bad)
cwde
add
call
push
cmp
stos
jl
mov
into
ficom
or
cs
mov
mov
fst
xchg
test
cmp
nop
mov
enter
imul
hlt
loop
in
jbe
push
xchg
mul
(bad)
mov
xchg
sub
pop
ja
shr
push
stos
int
aas
cld
adc
xor
in
adc
jg
fst
shl
cmps
xor
push
inc
sub
dec
inc
cmp
scas
loope
das
cs
pop
paddsb
ja
(bad)
stos
(bad)
sbb
xor
test
pop
cmp
in
popa
(bad)
xor
ror
dec
jne
rcr
dec
pusha
adc
mov
inc
jle
addr16
cmp
mov
ds
inc
div
ret
sbb
sub
xor
mul
fstp
std
add
jmp
inc
movs
push
je
push
(bad)
pop
sbb
ror
stc
ja
call
cmc
and
jge
or
mov
lock
cmp
jbe
ret
push
shl
loopne
xor
and
das
mov
mov
daa
loopne
xchg
ins
cmp
pop
pop
xchg
or
int
xlat
and
sub
sub
jno
jecxz
scas
imul
mov
xor
jae
mov
sub
cmp
das
mov
jns
pop
or
int3
jp
xchg
jge
pop
mov
leave
pop
mov
fisttp
adc
cmps
push
xor
repz
leave
rcr
mov
call
test
mov
ja
retf
nop
xchg
dec
inc
push
jmp
cmc
inc
fst
jg
push
sti
mov
sahf
cmps
dec
inc
in
iret
cmps
pop
inc
xor
jmp
pop
mov
adc
ret
add
into
call
jg
pop
pmaxsw
ret
sti
sub
xchg
aam
or
inc
ret
lahf
lahf
xchg
iret
mov
xor
mov
call
cmp
fsubr
dec
in
cld
int
cmp
fucomi
(bad)
mov
fnsave
pop
fs
bound
fwait
pop
and
stc
inc
ins
leave
xchg
mov
out
lods
sub
dec
sub
push
das
imul
arpl
xor
inc
jbe
aad
pop
push
in
ret
adc
int3
or
and
test
and
(bad)
pop
push
mov
inc
popf
int3
test
push
push
loopne
stos
ja
fcomp
mov
pop
call
in
leave
jmp
inc
jne
push
aaa
add
aas
push
xchg
inc
add
inc
aam
mov
push
sti
cs
xchg
dec
push
and
sar
push
mov
ins
jns
sbb
sti
xchg
jle
mov
imul
outs
push
push
out
jg
dec
and
lods
sub
and
jmp
repz
rcl
sub
in
add
jmp
cs
xchg
pop
xor
je
sahf
pop
mov
xor
mov
fmul
ret
enter
pop
(bad)
xor
cmps
(bad)
aad
push
repz
add
xchg
cmps
stos
pop
mov
std
inc
arpl
repnz
imul
push
cmp
cmps
xchg
fwait
add
cmps
xchg
mov
imul
cdq
jb
mov
in
movs
cmp
xor
mov
cs
retf
in
and
xchg
push
cmp
sub
sub
es
push
dec
jbe
mov
push
loope
fst
outs
xchg
fld
or
cmps
push
fwait
cmps
push
pop
in
pop
sub
push
out
adc
popf
mov
es
inc
repnz
shl
loop
out
loope
push
into
inc
sahf
cdq
js
push
mov
jmp
or
das
arpl
div
mov
fistp
(bad)
aad
push
aad
xchg
or
arpl
sahf
cdq
pop
je
xor
aam
pop
mov
out
daa
push
repnz
ficom
xchg
inc
pop
(bad)
aam
jae
cmps
retf
popa
inc
sub
xor
xchg
imul
jns
xchg
add
sbb
movs
fist
or
inc
push
push
inc
cld
movs
add
mov
aaa
mov
into
fcomp
or
fcmovbe
(bad)
clts
sbb
mov
lods
inc
stos
test
dec
adc
and
push
push
idiv
popa
xchg
jno
mov
cdq
mov
jg
pop
aas
jg
inc
dec
pop
add
lods
inc
in
dec
bound
scas
cmp
(bad)
pop
cld
cmps
icebp
(bad)
std
std
ror
push
call
add
lock
sar
pop
stc
dec
loop
push
out
std
or
and
xor
shr
inc
scas
and
xchg
rol
loopne
xchg
adc
clc
and
(bad)
adc
mov
lods
(bad)
(bad)
jmp
scas
dec
mov
imul
out
out
xlat
movs
mov
cmps
stc
dec
test
jo
xor
(bad)
and
in
xor
sar
xchg
xchg
push
pop
fadd
push
movs
push
out
enter
mov
or
ja
int3
mov
stos
(bad)
adc
or
dec
or
mov
fstp
lds
push
mov
or
lock
mov
jo
std
scas
out
xchg
push
cmp
cmc
dec
mov
test
sub
push
nop
mov
push
xchg
adc
push
jle
sbb
jnp
ins
mov
mov
push
loopne
push
addr16
push
int
ins
jmp
(bad)
fwait
xchg
and
jle
ret
cmp
push
fist
and
mov
sub
sbb
fisubr
jp
adc
xor
sub
loopne
outs
adc
mov
push
xchg
ins
js
js
ds
adc
push
mov
mov
repz
mov
shl
sbb
js
js
mov
addr16
sub
stos
jb
xchg
push
(bad)
lock
mov
lock
cwde
mov
ret
pop
xchg
mov
in
out
adc
add
dec
out
pop
psubd
es
lods
loope
loop
add
push
test
cmp
bound
repnz
call
jl
cmp
mov
stos
outs
push
cmp
ret
cmps
aad
dec
jp
pop
ins
(bad)
js
mov
push
dec
xor
and
pop
mov
jmp
mov
inc
mov
data16
sti
mov
push
mov
push
stc
dec
push
lahf
xor
xchg
push
shl
xchg
sub
or
movs
sbb
lods
aas
sbb
pop
inc
mov
inc
lds
cmc
repnz
pop
lods
sub
dec
dec
dec
push
xchg
mov
sub
add
mov
inc
popf
test
xchg
fsubr
stos
mov
std
push
outs
mov
sbb
mov
lahf
mov
aad
mov
pop
push
lods
daa
je
adc
xchg
repnz
cwde
addr16
jecxz
pusha
xchg
test
cmp
ror
aam
pop
xor
dec
dec
(bad)
popa
adc
adc
int3
into
sub
dec
dec
jae
ins
retf
sub
mov
add
adc
or
and
arpl
or
test
mov
lds
gs
fcom
adc
pop
js
mov
scas
and
loop
inc
cmp
lods
inc
push
ja
les
inc
inc
fmul
inc
fimul
out
ror
ins
ret
daa
jb
fcomp
push
dec
(bad)
and
or
sub
ss
jae
mov
cdq
gs
and
jnp
add
dec
fdivrp
pusha
in
mov
jge
add
add
xor
xor
sub
push
sbb
jno
test
pusha
das
pusha
jg
or
bound
(bad)
inc
sbb
inc
fisttp
push
rcl
mov
cmp
adc
shl
xor
mov
mov
fisubr
jg
nop
ror
(bad)
imul
stc
xchg
ins
mov
test
fsub
pop
das
scas
fistp
out
push
push
jp
lock
lds
mov
ja
mov
sub
in
inc
enter
sbb
inc
test
scas
mov
(bad)
adc
add
mov
sub
daa
cmp
sbb
sbb
jmp
pop
arpl
add
sub
inc
fadd
jnp
jmp
popa
sbb
movs
inc
shl
inc
test
and
xchg
hlt
mov
in
pop
call
mov
pop
xchg
mov
jno
inc
cmp
dec
jne
inc
pop
cmp
jl
pop
mov
ja
jl
cld
outs
push
push
(bad)
pushf
sub
inc
jno
not
push
pop
xchg
push
stos
inc
imul
call
stc
mov
jl
mov
dec
cmc
imul
pop
movs
shr
mov
push
int
rcr
mov
cmps
dec
mov
daa
jne
push
or
test
and
les
loop
xchg
test
movs
dec
push
cmp
adc
dec
dec
inc
cld
sbb
sub
aam
sbb
js
lods
bound
push
or
xchg
sar
inc
cld
inc
mov
es
dec
iret
inc
inc
pop
popa
mov
sub
pusha
and
rcl
sbb
outs
add
sub
fadd
stos
nop
dec
daa
movs
or
and
scas
mov
dec
push
loope
test
fwait
jo
cld
sbb
test
inc
test
sub
cld
lods
scas
dec
(bad)
dec
sbb
sub
fldenv
jo
dec
js
mov
(bad)
add
mov
xor
push
scas
and
fcomp
cmps
cli
sti
inc
xor
fs
jmp
jecxz
sbb
rcl
das
fnsave
jmp
stos
stc
and
dec
mov
shl
or
out
sbb
xchg
sahf
push
out
test
pop
pop
lock
xor
mov
jp
push
aad
pop
mov
jle
jae
mov
pop
push
leave
push
(bad)
popa
rol
add
add
add
mov
mov
lods
cld
sub
jmp
les
push
imul
aas
adc
out
xor
sub
inc
inc
call
mov
push
jmp
and
xor
mov
add
inc
fst
mov
movs
add
pop
movs
inc
pusha
aaa
das
cs
dec
fld
rcr
sbb
jg
inc
sbb
dec
inc
fadd
lods
or
ins
pusha
ins
jmp
inc
xchg
popf
mov
enter
es
mov
das
jbe
nop
or
nop
push
cmc
xor
pop
pop
mov
push
xchg
sbb
ret
scas
lods
push
in
test
mov
call
inc
add
adc
dec
in
and
push
ja
rol
retf
lahf
dec
inc
faddp
popa
mov
lock
inc
add
pop
movs
inc
pusha
xor
or
stc
(bad)
fcom
or
mov
add
inc
cmps
and
movs
or
mov
push
xchg
inc
fadd
xchg
aaa
mov
and
rcl
pop
push
mov
test
das
adc
jo
jp
cmc
cmc
dec
mov
xor
dec
sub
in
sub
cli
push
or
or
and
add
sbb
pop
mov
scas
inc
fdivr
sti
lods
jo
ret
inc
aam
pop
adc
dec
and
lods
sub
sub
add
jae
retf
in
pushf
rep
mov
call
call
dec
outs
aam
pop
sbb
add
cld
addr16
cmp
pop
sub
push
mov
ret
out
or
mov
cmp
shld
push
mov
jle
jb
rcl
scas
jae
fwait
std
xchg
sub
jno
ins
mov
je
aaa
clc
nop
icebp
les
int
xlat
test
(bad)
xlat
cmp
xor
adc
fwait
les
out
call
(bad)
inc
jp
xor
imul
sub
push
push
repz
les
retf
pop
(bad)
pop
ja
je
movs
inc
in
mov
jnp
dec
out
(bad)
and
in
out
bound
div
push
jle
call
test
sbb
cmp
out
lahf
into
pop
sbb
nop
lock
adc
cmp
es
pushf
sub
sub
cmp
cld
jnp
jle
ret
xor
push
mov
jle
das
mov
xor
add
sbb
add
or
jg
out
sub
or
rol
jecxz
daa
push
push
mov
mov
cwde
pop
enter
push
mov
test
xor
and
(bad)
xchg
inc
stos
loopne
fsub
js
nop
jmp
pop
mov
or
xchg
jne
jmp
adc
pop
dec
stc
cld
cmps
pop
sub
adc
dec
xchg
add
mov
or
sbb
test
adc
shr
sub
popf
cmps
push
add
mov
push
in
(bad)
outs
cdq
sub
xchg
test
clc
xchg
jne
sbb
dec
add
cmp
sub
mov
sub
push
xchg
jecxz
and
jnp
(bad)
clc
jmp
jge
dec
sbb
cli
add
clc
ror
push
xor
ins
cld
pop
stos
mov
xor
sahf
cs
jmp
loope
xchg
ret
aam
push
in
mov
dec
movs
jmp
lods
mov
stos
pushf
jno
mov
int
push
jmp
fnstsw
dec
out
pop
xchg
mov
xchg
mov
dec
dec
xchg
std
rcr
and
pop
call
shr
xchg
jle
sub
stos
push
push
mov
retf
and
adc
cmp
jne
dec
sbb
pop
cmp
(bad)
sbb
jno
(bad)
outs
xchg
mov
mov
aad
dec
jle
jbe
dec
mov
dec
dec
retf
xor
leave
inc
outs
xchg
sub
shl
fcmovne
mov
dec
cmp
sbb
gs
lds
push
sbb
xchg
sti
add
pop
push
cmc
inc
cmps
cdq
repz
dec
dec
push
xchg
ja
push
xor
je
jnp
adc
jl
xchg
lods
(bad)
push
mov
outs
lea
push
movs
mov
or
retf
sub
ins
jmp
mov
add
retf
mov
sub
into
icebp
mov
pushf
and
sar
pop
sub
mov
repz
daa
dec
test
test
add
sub
mov
cmps
(bad)
ins
iret
mov
mov
pop
not
fsubrp
fnsave
imul
fcom
movs
xchg
jecxz
cld
cwde
pushf
scas
push
hlt
mov
ins
pop
ins
cmp
mov
adc
pop
pushf
sub
add
test
fs
adc
ss
and
push
jmp
loop
jns
sub
retf
pop
dec
xor
xor
cmp
movs
and
fst
jmp
into
fdivr
inc
imul
mov
(bad)
jbe
popf
call
stos
dec
mov
inc
ss
shl
retf
dec
test
dec
push
scas
jnp
vpextrw
lds
cmp
inc
inc
jl
mov
xor
sub
mov
lods
xor
dec
mov
push
and
dec
add
sub
inc
xchg
cmc
mov
cs
clc
(bad)
push
and
xlat
xor
(bad)
xchg
pop
dec
push
mov
ins
jl
mov
(bad)
repnz
je
pop
mov
sub
ror
cmp
pop
xor
sub
mov
mov
pop
stos
cli
mov
sub
adc
fild
shr
mov
mov
cmp
mov
xchg
pop
leave
ins
(bad)
icebp
jnp
(bad)
mov
(bad)
and
sub
retf
aad
mov
aas
push
xchg
dec
cmp
pop
push
sar
sub
and
pop
or
or
dec
cs
fdiv
cs
frstor
fidivr
ficom
lods
cmp
lea
inc
push
mov
(bad)
xchg
mov
xchg
int
dec
jmp
in
push
out
clc
inc
pop
push
xchg
cdq
push
jmp
xchg
cmps
pop
mov
fst
push
stos
(bad)
jp
jecxz
call
dec
inc
mov
aad
aaa
xor
int3
jmp
pop
dec
mov
dec
retf
je
sar
adc
popf
scas
test
fldln2
cmp
je
cld
pop
js
cmps
clc
popa
cmps
xchg
loop
dec
mov
cmc
inc
pop
ins
sti
push
lahf
es
and
sti
adc
and
add
inc
es
jmp
xor
cdq
imul
shr
mov
sub
inc
daa
pop
imul
lods
mov
sub
and
cmp
jmp
pop
test
push
add
and
pop
scas
fst
inc
mov
pushf
mov
jnp
retf
les
mov
and
in
dec
movs
and
cmp
dec
je
sahf
test
ds
shl
inc
jb
out
push
stos
dec
add
dec
bound
pop
push
sub
or
inc
scas
sub
ret
inc
mov
push
xor
cdq
popf
imul
xchg
push
add
arpl
cli
into
rol
jle
and
fwait
jmp
adc
aaa
xchg
mov
mov
dec
sbb
std
push
sub
mov
stos
outs
arpl
push
sub
pushf
fs
ds
scas
fcom
or
ret
cmp
mov
mov
aaa
call
aam
leave
xchg
aad
push
mov
xchg
xchg
xchg
mov
int3
sub
jle
and
sbb
add
sub
jg
int3
push
rcl
shr
dec
inc
xchg
pop
outs
int
mov
popa
xchg
retf
test
pusha
dec
(bad)
arpl
shr
xor
cmps
xor
push
imul
xchg
xchg
xchg
jge
stos
push
mov
push
or
lock
pushf
in
fbld
jne
lea
mov
push
jmp
jnp
inc
mov
push
xchg
gs
adc
mov
pop
or
mov
ret
pop
scas
loop
dec
pop
and
fnsave
cmp
pop
push
push
jnp
xchg
sub
pop
xchg
test
add
test
mov
movs
pusha
out
xor
push
or
aam
adc
cmp
sbb
add
pushf
arpl
mov
jnp
mov
jle
cli
inc
ss
xchg
cmp
adc
dec
cmps
cs
mov
call
jae
fstp
dec
and
dec
(bad)
dec
shl
xchg
adc
push
xor
cmp
push
push
mov
jmp
push
jecxz
pop
retf
dec
dec
fdiv
push
inc
mov
mov
cmp
mov
pop
daa
movs
cs
mov
jb
and
nop
xchg
mov
jmp
push
xchg
retf
push
loop
dec
bound
imul
pushf
xor
aad
pop
mov
push
mov
mov
push
xchg
push
and
mov
(bad)
jp
mov
stos
hlt
mov
mov
in
sbb
xor
hlt
arpl
pop
les
push
test
btr
jns
pop
sub
(bad)
es
xchg
jg
mov
add
push
popa
jmp
les
xchg
cmps
or
pop
pop
js
sbb
rol
push
xchg
std
jmp
sub
lahf
clc
fs
adc
sbb
add
xchg
xchg
leave
cld
pop
loopne
movs
ins
cmps
lods
jns
loop
scas
sbb
push
scas
pop
aad
xor
in
retf
stos
popa
call
jo
push
shl
into
out
out
mov
xor
push
cmps
xchg
mov
mov
xor
mov
mov
enter
jb
cmc
inc
push
adc
mov
push
jns
mov
or
in
mov
push
mov
sbb
add
add
shl
push
outs
mov
xor
sub
add
push
and
ret
or
jecxz
push
sub
adc
xchg
cmp
inc
outs
dec
loop
dec
xchg
mov
mov
stos
repnz
sub
popa
iret
mov
popa
xchg
push
and
cdq
mov
mov
maxps
sbb
push
push
cmp
(bad)
lods
xor
test
mov
or
pop
push
lahf
sahf
inc
push
inc
dec
adc
xchg
mov
or
shl
and
xchg
lods
add
idiv
sbb
or
sbb
add
les
movs
dec
fst
lods
add
xchg
lods
dec
fdiv
mov
test
pop
dec
jl
mov
cmp
sbb
mov
sar
and
arpl
mov
dec
push
mov
xchg
cld
jmp
cdq
xchg
popa
sbb
ret
shl
mov
cld
mov
repz
fucomip
loopne
fwait
test
sahf
cmp
out
sub
dec
es
cmc
dec
mov
outs
push
or
inc
imul
add
sbb
cmp
mov
in
push
pop
jnp
scas
or
out
push
push
aad
js
push
mov
xchg
lods
out
lahf
popf
jge
add
mov
and
(bad)
iret
fcom
inc
shl
or
jecxz
push
clc
jne
fiadd
pop
push
cs
sbb
mov
sub
xchg
or
push
cmp
or
jo
test
xchg
mov
adc
pop
fst
mov
fcom
adc
loop
ds
sub
jmp
aam
je
aaa
xchg
mov
xchg
cmp
mov
pop
iret
xor
xchg
push
and
add
add
push
mov
sub
push
jl
inc
retf
xor
xchg
mov
mov
jl
cmp
es
add
push
and
xor
std
xor
in
ficom
js
test
test
es
jb
mov
outs
int
fcmovb
fst
push
jns
shl
repz
out
(bad)
mov
aam
cli
mov
dec
jl
lea
loope
jg
je
pop
mov
inc
adc
fs
test
fisttp
imul
pop
inc
hlt
repz
mov
ror
sub
push
pop
push
pop
cld
(bad)
jle
inc
xor
mov
test
jmp
mov
jo
shl
mov
test
and
jl
xchg
call
adc
adc
and
push
je
test
xor
cdq
int
scas
add
movs
jbe
data16
fistp
inc
retf
cmps
sub
stos
mov
out
jmp
cmc
add
dec
not
scas
xor
ins
mov
xchg
dec
sub
movs
mov
or
rcr
xor
dec
push
(bad)
stos
mov
shr
xor
mov
mov
lods
dec
dec
mov
fcom
inc
fist
or
xchg
mov
sbb
les
(bad)
pop
mul
push
mov
out
pop
cmps
jp
addr16
(bad)
xlat
add
lds
mov
mov
dec
(bad)
xchg
mov
add
mov
cmp
mov
(bad)
jg
in
sbb
mov
bound
ins
dec
icebp
cmp
jp
push
mov
sbb
aaa
subps
mov
push
fs
sub
jp
retf
dec
stc
jecxz
es
lds
sar
mov
jmp
(bad)
mov
inc
lds
loope
je
retf
dec
ficomp
jmp
daa
jl
jmp
fadd
or
fwait
push
inc
push
(bad)
shl
mov
std
jb
nop
lods
cmp
in
inc
pop
xchg
mov
lods
xor
fsub
aas
add
jp
out
xor
fwait
cdq
dec
rol
xor
(bad)
xor
hlt
cmps
dec
outs
mov
mov
std
stos
movs
xchg
ss
sub
jns
mov
test
sbb
(bad)
xor
xchg
repnz
adc
cmps
lea
call
jecxz
cwde
cmp
leave
js
scas
fnsave
dec
imul
lea
int3
enter
popf
es
or
retf
jmp
test
stc
outs
out
push
push
mov
repz
and
enter
in
jb
xor
adc
push
mov
inc
daa
adc
mov
pushf
retf
and
jae
popa
cmc
dec
(bad)
imul
popa
xchg
(bad)
stos
sub
or
mov
push
mov
mov
or
push
repnz
inc
xchg
sbb
jecxz
inc
call
inc
fs
into
shr
test
(bad)
cmp
leave
mov
mov
inc
xor
inc
push
lock
stos
test
retf
mov
cwde
mov
mov
popf
mov
inc
sar
jecxz
push
data16
retf
sahf
outs
inc
lock
fisub
imul
dec
sub
inc
and
sub
cmp
inc
push
xor
fs
dec
out
ja
cmp
shl
cmp
imul
les
pop
push
sub
leave
fs
fimul
dec
sbb
xor
retf
xor
mov
test
int
(bad)
dec
test
xor
or
(bad)
cmps
aam
pop
inc
hlt
xor
lea
adc
test
lods
and
stos
jmp
xor
xor
fcom
mul
adc
movs
(bad)
sbb
rol
je
gs
inc
sbb
jb
loope
test
addr16
push
xor
push
add
bound
push
jg
jmp
cmp
inc
inc
push
shr
lods
or
out
test
push
dec
sub
or
xor
cmps
pop
push
test
lods
popf
inc
movs
enter
sub
adc
mov
fwait
adc
not
push
imul
jo
ds
jo
pop
out
cdq
sbb
jl
fsubr
add
cs
and
jle
neg
xchg
out
dec
adc
jbe
xor
jnp
or
dec
retf
sub
mov
leave
ins
dec
sub
inc
or
push
fsubr
cmps
and
bound
and
mov
xchg
xchg
repnz
rcr
mov
cmp
out
mov
pop
cmp
push
and
leave
mov
retf
call
mov
xor
bound
xchg
(bad)
and
add
ret
sub
push
push
and
push
nop
lods
cmc
or
mov
mov
es
pushf
cmp
lods
shr
aaa
and
leave
and
push
xchg
jbe
mov
popa
aam
fadd
rol
into
push
in
sub
push
sbb
retf
sar
mov
call
fst
mov
cmp
xchg
jo
sahf
idiv
push
mov
cld
jg
xchg
xlat
mov
xor
xchg
push
popf
leave
jl
jno
les
pusha
xchg
rcl
jnp
xor
mov
test
mov
int3
inc
xchg
and
mov
cwde
out
adc
pop
and
inc
daa
cmp
cmps
cmp
inc
push
leave
cmc
clc
ret
push
rdmsr
jg
add
cs
pop
jecxz
xchg
(bad)
(bad)
fwait
pop
lods
cmp
pushf
bnd
int
loopne
xchg
sub
fild
cmp
dec
push
jno
inc
ins
dec
outs
or
cmp
je
add
push
into
push
lods
mov
imul
fisub
mov
ds
fist
mov
sub
cmp
pop
test
out
fscale
icebp
enter
call
pop
jge
cmp
icebp
aas
leave
xchg
push
mov
push
aam
hlt
inc
push
sub
add
mov
(bad)
pusha
mov
push
call
mov
inc
pop
push
lds
add
mov
ja
jbe
shl
test
adc
movs
pop
imul
jl
(bad)
ror
les
repnz
cmc
dec
ror
fsub
cmp
pop
and
push
and
or
sub
mov
mov
mov
test
xchg
call
in
dec
aad
xchg
cmc
jg
sub
push
xor
retf
js
pop
and
call
adc
and
ins
mov
pop
ret
push
fdiv
inc
es
adc
lock
shl
jne
test
jecxz
cmp
sbb
jns
xchg
ins
xchg
int3
lods
mov
adc
ret
dec
adc
test
adc
push
xchg
imul
aas
sub
(bad)
data16
cs
jecxz
jb
jae
and
or
jge
pop
cdq
xchg
imul
and
xchg
adc
push
data16
loop
or
cmp
mov
ret
dec
xchg
add
shr
xor
jne
jp
inc
pusha
jl
add
mov
xchg
dec
sub
call
in
fisubr
mov
inc
adc
mov
inc
add
dec
stc
add
outs
adc
sub
sbb
add
jmp
push
add
in
(bad)
fsubr
in
out
cmp
cmp
retf
cmp
lock
add
or
cwde
loopne
dec
add
pusha
and
sub
mov
enter
adc
pop
fcom
add
shl
(bad)
retf
xchg
outs
int
mov
imul
cmp
neg
push
push
std
dec
test
or
stos
xchg
stos
pop
xor
(bad)
sub
cmp
(bad)
loope
dec
stos
pop
shl
loop
out
je
ins
lock
ret
aaa
iret
push
sbb
lods
add
lahf
cli
mov
inc
ins
(bad)
mov
mov
inc
bound
sbb
movs
pushf
fs
outs
add
or
xchg
lods
adc
dec
pop
xchg
inc
mov
mov
repz
sub
push
in
push
mov
stos
mov
xrelease
ds
ffree
je
scas
push
cmps
(bad)
adc
cmps
jno
cdq
or
mov
loop
frstor
and
sub
cld
sub
sbb
mov
mov
cmps
stos
outs
pop
xor
sbb
cmp
movs
retf
push
cmp
and
fstp
arpl
jl
mov
loope
sbb
lock
sub
iret
or
leave
xlat
hlt
retf
xchg
in
push
lds
aaa
push
ret
call
cdq
imul
dec
or
pop
cmp
fldenv
dec
inc
xor
loopne
pop
shl
sub
stos
shl
inc
push
repnz
sbb
fidivr
sahf
add
aad
imul
xor
or
xchg
mov
jl
fwait
jmp
inc
jne
push
push
mov
push
dec
inc
fwait
dec
xchg
push
popf
and
xchg
in
ins
add
dec
push
xchg
repnz
popf
fsubr
and
push
xor
pop
mov
test
push
in
(bad)
jo
mov
mov
pop
dec
les
lods
mov
push
adc
cmp
cmp
adc
pop
dec
test
xchg
push
int3
cmp
int3
pop
inc
cmps
jne
xor
popa
cmp
shr
sar
xchg
loope
push
lahf
jne
sbb
jne
push
outs
dec
sub
push
xchg
xor
cmp
ds
jmp
jle
loope
mov
jle
in
lea
test
push
leave
mov
pop
cmps
push
cmp
(bad)
cmc
dec
stos
and
pop
bound
or
inc
sahf
js
bound
mov
jo
sub
jp
xchg
lock
jns
lods
jge
xchg
(bad)
in
addr16
lock
xlat
es
aam
in
movs
xor
xor
jle
addr16
js
add
push
mov
movs
pop
add
cmp
dec
scas
cdq
fstp
lock
shr
lea
push
aam
mov
mov
sti
int
xor
outs
int3
jl
xor
fistp
(bad)
sbb
push
fcomp
sbb
ins
jo
jg
pop
lods
adc
enter
and
sbb
xchg
xchg
test
ret
push
adc
sub
js
pop
jmp
test
fisub
not
pop
daa
mov
xchg
aaa
cmp
sbb
inc
sbb
shl
jae
jo
or
xchg
ds
adc
pop
xchg
lds
call
inc
je
jmp
ja
sub
iret
scas
adc
sbb
pop
aam
adc
mov
mov
xor
leave
jo
and
and
dec
pop
movs
or
push
xchg
out
or
jb
stos
add
je
jae
adc
xlat
cdq
pop
sahf
cmps
outs
xchg
xlat
stos
iret
ficom
mov
fldenv
xchg
mov
add
pop
inc
sub
cmp
pop
fwait
addr16
jp
outs
dec
xor
mov
cmp
stos
sub
mov
out
xchg
mov
jp
test
iret
enter
iret
test
xchg
ins
std
pop
cmps
and
push
xor
shr
push
dec
arpl
lods
je
cwde
push
xchg
mov
sbb
vpsllq
movs
outs
setns
aam
inc
repz
enter
or
xor
or
addps
cmp
push
inc
mov
sbb
mov
mov
icebp
mov
daa
adc
addr16
icebp
xchg
jp
cs
mov
push
xchg
cmp
xchg
inc
or
push
or
sbb
inc
or
js
push
mov
rcl
jns
dec
lahf
lock
ret
xchg
xchg
mov
leave
xchg
pop
and
mov
dec
xor
jo
inc
mov
add
mov
test
cmps
sbb
ror
call
sub
je
stos
pop
mov
stos
(bad)
push
lahf
push
inc
dec
push
jb
imul
mov
inc
dec
or
les
mov
mov
sahf
int3
mov
xor
push
sbb
jno
lea
test
cdq
test
push
sahf
out
loop
lods
sbb
jg
mov
into
and
ins
xchg
int3
dec
shr
leave
add
fidiv
mov
aam
pcmpeqw
(bad)
std
sbb
test
cmps
dec
lock
push
js
(bad)
aam
and
out
xor
aam
push
fs
lods
cld
xor
loop
pop
ins
mov
loop
idiv
fwait
mov
outs
push
sbb
xchg
test
xchg
fxch
and
test
and
sar
mov
cwde
cli
in
jp
out
pop
jne
add
sub
and
mov
cmp
je
and
int3
iret
xchg
sbb
inc
es
and
jae
xor
and
push
lahf
cmps
ror
jbe
mov
les
hlt
ins
movs
xor
out
retf
enter
add
in
fst
mov
out
jb
iret
xor
cli
mov
xchg
out
cld
or
push
sub
retf
(bad)
ins
(bad)
cmp
xchg
lea
mov
push
xchg
outs
call
lock
shr
mov
push
xor
out
int3
push
fisttp
out
pop
mov
cwde
xor
test
in
xchg
in
rcl
je
or
inc
(bad)
in
add
pusha
mov
shl
dec
(bad)
les
mov
pop
imul
imul
mov
retf
out
dec
fist
push
sub
loope
mov
adc
je
popf
je
pushf
iret
test
int3
inc
arpl
push
icebp
rol
inc
sub
and
div
(bad)
mov
loopne
outs
jmp
fsubr
xchg
xor
or
test
out
sar
jmp
fld
arpl
xor
xchg
sub
loopne
jmp
sub
lea
mov
(bad)
push
mov
(bad)
jmp
sbb
rol
les
hlt
adc
sahf
fstp
add
fsubp
mov
or
cmp
iret
pop
sbb
sub
jl
retf
pushf
ins
and
cmp
bound
dec
aam
adc
(bad)
dec
in
stos
fs
phsubsw
les
in
fst
jnp
int
push
jecxz
popf
or
ins
cmc
mov
lods
or
test
in
std
nop
dec
pop
push
mov
or
bound
mov
inc
js
and
popf
inc
sbb
ss
loop
pop
ins
imul
call
icebp
sub
rcr
mov
rcl
and
push
adc
int3
mov
retf
dec
xor
mov
popa
push
popa
aas
in
bsf
jae
mov
(bad)
push
mov
mov
aam
int
cdq
dec
sar
dec
addr16
xchg
xor
pop
push
ret
outs
xor
mov
shl
sbb
(bad)
xchg
in
scas
ss
mov
push
sub
lea
xor
cmps
icebp
jg
mov
mov
imul
inc
pop
mov
jns
jns
jge
inc
cs
pop
pop
dec
mov
dec
pop
gs
aaa
fsubr
mov
xchg
lahf
mov
sbb
jmp
jmp
jle
dec
jecxz
pop
jbe
mov
sub
and
mov
sbb
mov
cmc
mov
pop
xchg
(bad)
dec
push
inc
shr
sbb
mov
xor
inc
jmp
jle
nop
lea
aaa
mov
les
fsub
loope
je
nop
lock
fdiv
stos
test
xchg
xchg
jno
cmps
cs
sub
mov
rcl
mov
repnz
add
sbb
lods
dec
int3
jecxz
cmp
cmp
mov
daa
or
fdiv
add
pop
xchg
sahf
daa
int3
imul
fs
jmp
in
push
dec
jae
cmps
pop
js
ror
jmp
in
aaa
push
cmp
dec
outs
lds
adc
xor
add
jmp
bnd
movs
pop
sbb
lgs
sahf
sub
mov
push
aad
inc
cdq
imul
xchg
cmps
xor
shr
int3
jns
loop
push
(bad)
adc
icebp
jmp
ja
das
cmc
mov
cwde
jecxz
pop
mov
lock
cmps
xor
call
jns
stos
mov
jb
push
adc
cmovnp
mov
push
inc
gs
jge
icebp
jne
mov
inc
cs
lock
addr16
inc
mov
pop
mov
hlt
cmps
pop
int3
(bad)
xchg
xchg
cld
jecxz
pop
push
jecxz
enter
cmps
retf
repz
push
enter
cwde
sub
(bad)
fnstcw
push
imul
cwde
inc
aaa
gs
clc
xchg
push
cmps
mov
sahf
icebp
sbb
sbb
add
aaa
or
rcl
inc
push
int3
mov
sub
jecxz
sti
dec
xchg
dec
nop
pop
push
sbb
mov
mov
aaa
jg
jne
fst
jnp
mov
jmp
lock
cmps
jp
test
mov
jle
retf
dec
int3
jg
dec
xchg
bnd
lahf
xchg
add
mov
neg
mov
movs
xchg
popa
mov
pusha
ins
push
(bad)
jecxz
xchg
retf
inc
sub
in
aam
adc
imul
ss
int3
shl
mov
les
mov
ins
cli
pop
adc
in
stos
mov
pop
cmp
mov
mov
enter
cmp
out
gs
test
mov
cmc
jne
or
loop
mov
aam
cmps
push
cmp
mov
bound
in
cmp
jb
pop
cmp
ja
jg
je
cmc
das
pop
neg
pusha
repz
push
inc
daa
mov
stos
popa
(bad)
xor
cmp
mov
cdq
retf
jmp
and
lods
jns
scas
jp
imul
scas
scas
push
outs
dec
sub
xchg
cmps
push
cmp
fcomp
mov
xchg
int
xchg
xchg
mov
adc
sahf
(bad)
sar
push
imul
push
and
out
outs
or
ret
(bad)
int
rcl
loop
pop
je
dec
jmp
aam
push
es
cli
ins
dec
xchg
nop
fnsave
jmp
xchg
xor
cs
out
ins
movs
pop
test
xor
dec
scas
lock
xor
scas
or
lods
lods
clc
mov
mov
ins
lds
pop
sbb
and
sub
xchg
mov
cmp
cmp
js
mov
cli
pop
imul
jns
mov
mov
jmp
xor
jge
icebp
sbb
mov
test
jno
mov
cli
mov
push
lock
or
mov
into
ss
and
psraw
lock
xlat
jmp
xor
shl
loope
aad
mov
cmp
cmps
fidiv
sbb
jo
ret
sbb
ficomp
mov
dec
jle
rcl
xor
pop
pushf
popa
inc
sub
scas
das
mov
stos
pop
outs
mov
ss
cmc
test
js
pop
xchg
jge
icebp
adc
repnz
out
or
jecxz
ja
ret
add
vmread
add
add
scas
xchg
std
retf
pop
and
adc
imul
sbb
sbb
push
leave
jmp
pop
repnz
lods
jbe
mov
or
loope
inc
cmps
les
or
add
dec
xor
mov
lahf
movs
dec
add
dec
fs
cmps
movs
ins
sti
pop
imul
test
jne
test
xor
(bad)
lds
mov
fsubr
adc
test
in
jmp
sbb
xor
mov
or
enter
push
neg
mov
imul
push
adc
mov
dec
mov
push
cmp
jmp
aaa
jmp
aad
jns
push
pop
add
sahf
std
xchg
test
xchg
cmp
mov
jecxz
ss
mov
cmps
aad
out
inc
mov
ss
scas
inc
cmps
scas
not
jns
dec
push
data16
dec
push
dec
dec
push
fdivr
loopne
ins
imul
arpl
movs
dec
fbstp
int3
mov
sub
pop
icebp
retf
enter
cmp
inc
xchg
(bad)
mov
push
push
sbb
imul
inc
retf
add
leave
adc
mov
mov
mov
and
and
mov
jne
adc
test
adc
dec
xchg
call
xchg
sbb
mov
xor
pop
bound
sub
ret
push
mov
xchg
mov
in
cmp
imul
xchg
popf
ror
mov
or
xchg
cwde
ins
imul
add
ins
adc
dec
call
inc
jg
int
std
mov
ror
or
lods
or
ins
mov
mov
leave
aas
sahf
jl
rcr
lds
jbe
bound
jge
out
(bad)
loope
adc
xchg
push
js
xchg
mov
or
vpacksswb
(bad)
(bad)
aad
mov
push
cs
mov
lods
push
jnp
jmp
push
rcr
outs
rol
sbb
jg
sbb
dec
inc
in
inc
cld
mov
push
popa
jne
je
pushf
inc
inc
movs
dec
nop
pop
adc
out
jns
ret
jmp
pusha
mov
mov
sti
mov
xor
sbb
cmp
test
(bad)
das
push
(bad)
daa
lods
dec
nop
xor
aad
jmp
push
jl
jbe
pop
shl
xchg
sub
sub
lahf
jmp
dec
cli
test
xor
fnstenv
out
mov
cmps
aam
je
jmp
mov
fmul
and
inc
dec
sbb
sbb
jle
sbb
fisub
in
jp
and
mov
xchg
popf
mov
cli
inc
mov
inc
dec
(bad)
dec
mov
fbld
cmc
ret
or
jo
cmps
jl
mov
push
or
mov
pop
mov
or
inc
inc
sbb
cmp
retf
gs
dec
enter
into
and
xchg
scas
jne
xor
bound
mov
lahf
scas
stos
mov
jle
ds
aas
cmps
ja
stos
push
int
jb
in
stc
mov
out
cmp
mov
jle
out
sub
mov
push
aas
aam
jl
lock
stc
or
cli
lahf
mov
mov
stos
jns
push
cmp
inc
fimul
popa
inc
std
sbb
stos
scas
jmp
push
jp
jge
lock
inc
addr16
dec
rcl
pop
xchg
rol
mov
jmp
push
pop
jmp
iret
mov
sub
(bad)
adc
sub
push
sbb
jp
jp
cmp
movs
adc
and
mov
add
push
mov
ja
rol
cld
mov
cdq
hlt
test
pop
push
into
xchg
jmp
sub
sub
pop
imul
movs
mov
loope
push
shr
sub
cmc
mov
inc
fld
dec
push
dec
rcl
cmp
and
xor
and
and
pop
enter
clc
xchg
js
call
dec
push
movs
mov
sahf
pop
into
mov
cwde
or
jge
popa
sbb
jne
popa
sub
sbb
push
mov
arpl
jle
jae
imul
aam
int3
icebp
and
fwait
stos
push
scas
jns
fdivr
sub
lods
pushf
mov
add
xchg
jae
mov
xchg
jmp
pusha
jp
iret
int3
cli
cmp
shl
in
das
or
sbb
mov
in
or
cmp
xchg
retf
popf
fist
in
xor
cmp
std
cmp
mov
push
pop
clc
adc
lea
jno
pop
imul
sub
sub
cwde
xor
(bad)
aam
sahf
cmp
cmp
rcr
repnz
in
and
and
fbld
(bad)
push
dec
cmp
lea
into
adc
xchg
jbe
aam
nop
mov
and
dec
fsub
out
sub
rcr
or
adc
push
sbb
dec
sbb
repnz
dec
in
ins
inc
and
mov
arpl
add
dec
xor
mov
iret
pop
mov
ss
dec
push
scas
inc
movs
ins
jmp
mov
pop
in
mov
xchg
jmp
movs
neg
arpl
daa
pop
aaa
ret
mov
jle
mov
call
pop
sub
jp
cmp
rcr
add
retf
dec
jp
fcomp
push
push
sub
popf
mov
jle
inc
mov
and
movs
sbb
and
sbb
(bad)
enter
shr
inc
mov
push
imul
pop
add
or
and
pop
xor
gs
or
mov
add
pop
push
xchg
inc
movs
out
(bad)
sbb
rol
push
jnp
push
sbb
jp
or
inc
jbe
inc
out
adc
jo
pop
xchg
mov
and
addr16
outs
imul
movs
mov
adc
mov
push
and
stc
push
(bad)
mov
lds
fdivp
ror
lea
inc
daa
xchg
dec
or
ret
aaa
int
retf
sar
sahf
test
jb
cmc
(bad)
dec
stos
dec
popf
std
das
cmp
add
sub
xchg
ret
in
je
xchg
dec
xchg
stos
aas
xor
rcr
enter
fstp
shld
inc
(bad)
cmp
daa
stos
fidivr
(bad)
ja
fsubr
sbb
mov
(bad)
push
lds
and
mov
ins
enter
in
fldenv
xor
mov
push
mov
xchg
and
add
and
rcr
inc
mov
ret
mov
(bad)
out
pop
ja
adc
pop
pusha
ins
or
sbb
dec
dec
xor
and
and
adc
movs
cmp
outs
fisub
push
and
xchg
loop
lea
lods
cs
jae
out
int
push
movs
jmp
jo
mov
outs
sub
je
pusha
ja
ds
xor
push
mov
stos
sub
ret
les
mov
movs
lock
jp
icebp
fistp
mov
in
or
ins
retf
shl
xor
in
sub
je
popa
mov
mov
xor
push
push
xchg
test
mov
push
ss
mov
sbb
pop
cld
sub
call
dec
nop
test
push
or
lods
mov
jae
jmp
or
sbb
fisubr
stos
add
call
xchg
std
das
loope
inc
pop
cmc
add
xchg
xchg
mov
fidiv
test
cmp
push
add
aas
ror
test
arpl
dec
cmp
and
js
push
jmp
je
dec
sub
pop
mov
adc
jnp
pop
lea
xchg
aas
sub
mov
mov
mov
sub
dec
test
push
loop
xchg
lods
je
pop
inc
inc
xchg
push
(bad)
push
in
sub
dec
pop
xchg
mov
inc
add
mov
xchg
cs
movs
adc
xchg
fwait
(bad)
pop
call
jmp
stos
int3
sub
js
xchg
test
setns
push
loope
daa
rcr
je
mov
jmp
(bad)
sbb
push
popw
test
test
xchg
cmps
hlt
mov
scas
dec
dec
dec
int
pop
stos
mov
jne
hlt
mov
popa
in
sub
call
adc
dec
dec
sub
daa
ins
shr
gs
xchg
mov
mov
pop
neg
test
mov
stos
and
mov
test
dec
push
or
jge
mov
mov
ret
cwde
push
xchg
out
dec
ja
repnz
xchg
jae
bound
cmps
int
or
mov
test
push
cmp
addr16
mov
xchg
dec
hlt
cmp
ret
jp
xchg
imul
jns
aam
stc
add
xchg
jmp
add
(bad)
jno
push
sahf
outs
pop
loop
lods
mov
jae
xor
retf
and
popf
loop
lea
pop
in
push
pop
xor
dec
inc
leave
(bad)
xchg
sar
div
fdiv
dec
adc
pop
jbe
mov
pop
xor
cmp
gs
mov
pop
adc
jb
dec
push
and
movs
aas
movs
pop
ret
stc
push
movs
popa
or
sub
inc
xchg
inc
push
cmps
in
xchg
js
jbe
(bad)
xlat
xchg
xchg
(bad)
shr
outs
dec
xor
leave
push
push
stc
xchg
movs
out
or
je
cmp
js
aad
(bad)
dec
adc
popf
mov
std
cmp
mov
mov
test
je
push
xchg
mov
cmp
into
push
sar
sub
xor
ja
movs
mov
jecxz
in
dec
jne
(bad)
or
mov
sub
dec
jns
jge
inc
inc
sar
in
cmp
fdiv
(bad)
out
jo
(bad)
lods
test
cmc
(bad)
ja
and
xor
inc
shr
mov
stos
adc
aad
icebp
pop
cmps
push
pop
pop
fs
add
xor
test
dec
and
mov
and
mov
cmps
fidiv
mov
retf
imul
icebp
into
cmps
repnz
bnd
loopne
mov
stos
adc
jge
ja
and
aas
outs
lock
js
leave
xchg
aas
jbe
out
sub
pop
jns
nop
ret
pop
dec
xor
aas
(bad)
xor
lock
lods
or
shr
sub
cmp
mov
popf
mov
adc
jnp
stos
mov
push
mov
dec
test
inc
jb
out
mov
mov
mov
mov
movs
lds
mov
mov
mov
push
retf
mov
in
sub
ds
dec
pop
daa
jmp
pop
aas
add
fs
pop
sbb
ins
jb
or
pop
jns
mov
sub
mov
fcom
fist
sbb
or
dec
mov
dec
lds
repnz
xor
sub
into
sti
outs
sbb
adc
ins
dec
dec
jae
sub
push
fistp
fnsave
shl
and
mov
or
inc
xchg
xchg
mov
mov
push
dec
outs
pop
xor
sub
sub
jmp
lods
pop
push
push
fsub
retf
mov
fld
retf
sub
push
or
pop
sub
leave
sub
mov
leave
stos
hlt
sub
push
sbb
daa
fisub
dec
test
in
inc
dec
(bad)
jno
dec
jns
mov
aaa
sbb
push
ss
jmp
mov
inc
cmp
outs
push
es
sbb
out
jne
(bad)
xor
lds
cwde
mov
and
xor
ds
gs
popa
mov
mov
pop
sbb
add
mov
xchg
pop
adc
imul
ins
mov
sub
xchg
daa
in
in
push
sub
and
call
fwait
jmp
mov
mov
mov
add
push
xlat
cmp
ret
repz
test
mov
movs
pop
adc
sbb
rcr
mov
faddp
ins
lods
pop
jo
cmps
ins
outs
add
stos
and
xchg
jl
arpl
jnp
scas
aam
ins
or
jg
push
xor
mov
pop
pop
jmp
es
push
dec
fimul
mov
and
inc
cmp
mov
push
leave
adc
popa
scas
retf
xchg
mov
jbe
dec
fmul
daa
mov
sbb
call
movs
mov
div
jmp
daa
cdq
push
stc
xchg
cwde
pop
sbb
cmp
dec
cmp
enter
pop
push
clc
push
(bad)
add
(bad)
idiv
cdq
pop
test
call
mov
repz
std
inc
inc
mov
aam
jno
arpl
push
(bad)
cmp
test
jmp
jle
cmp
scas
std
pop
sub
sub
xchg
shr
jne
xchg
push
repz
mov
sub
gs
sar
mov
xchg
xlat
xchg
sub
jmp
mov
imul
jecxz
in
test
mov
cld
inc
push
cdq
cmp
mov
cld
mov
pop
rcr
adc
sbb
jge
push
cmps
lods
push
pop
push
in
push
call
pop
test
push
vhsubpd
inc
pop
sahf
test
inc
xor
aad
sti
jbe
mov
dec
adc
icebp
dec
ret
imul
cmp
test
scas
mov
ins
cmps
ins
in
xchg
adc
loope
dec
retf
pop
stc
xchg
fistp
cli
icebp
imul
inc
rcl
push
and
pop
movs
dec
inc
inc
mov
fstp
mov
(bad)
mov
cld
adc
arpl
push
sub
adc
or
pop
sub
sbb
mov
xchg
sub
fiadd
xchg
in
sbb
js
pop
mov
rol
pop
mov
movs
dec
mov
push
mov
imul
fwait
sbb
out
sbb
ret
xchg
pop
push
imul
pop
mov
xor
xor
in
retf
dec
xor
add
test
fistp
lods
xchg
clc
hlt
xor
test
mov
jle
cmc
mov
je
mov
xchg
aas
sub
loope
xchg
push
add
xchg
xchg
push
pushf
mov
nop
jno
movs
add
inc
fcom
push
mov
out
stc
push
sub
pushf
cmp
ss
inc
movs
cmp
jecxz
lea
jl
mov
into
scas
popf
pop
mov
pushf
xchg
dec
out
loopne
fisttp
jnp
and
lahf
inc
sub
cmp
int3
mov
xchg
(bad)
xchg
iret
repnz
inc
cmp
dec
mov
sub
sub
bound
jne
mov
movs
jmp
iret
sub
xchg
mov
and
and
add
jne
(bad)
xchg
push
mov
movs
loope
mov
sti
xchg
inc
movs
and
mov
test
cmp
iret
inc
js
shr
retf
fsubr
xlat
sub
ins
retf
test
mov
test
arpl
xchg
and
sub
xchg
scas
not
repnz
push
jno
push
xor
dec
mov
(bad)
push
push
jns
(bad)
push
push
jle
fwait
push
ins
add
cmp
mov
(bad)
fisubr
loope
mov
loop
inc
(bad)
adc
push
mov
mov
pop
pop
test
cld
iret
dec
dec
imul
cli
imul
test
rcl
jb
xchg
push
bound
adc
fninit
clc
sbb
ret
lods
aam
adc
jmp
and
and
dec
mov
jns
fld
sbb
sub
xchg
lods
mov
js
daa
and
mov
test
in
(bad)
sar
mov
mov
test
add
and
and
mov
jns
sti
inc
cmp
inc
push
push
addr16
push
mov
aaa
stos
adc
sahf
movs
dec
cmp
ss
(bad)
jns
mov
mov
test
or
out
cmp
push
jmp
mov
cmp
jo
or
das
or
pop
adc
mov
imul
add
push
pop
mov
pop
cli
mov
pop
aam
ficomp
gs
clc
out
inc
pusha
mov
jnp
cmps
and
cwde
rol
jbe
mov
mov
retf
out
loop
movs
int3
lock
sub
sub
jb
fidiv
cmps
in
mov
dec
iret
dec
xlat
fld
xor
repnz
dec
cdq
xchg
jne
xchg
pop
dec
xchg
mov
or
jge
stos
mov
test
clc
jge
in
push
mov
clc
adc
push
xchg
jo
imul
test
outs
jecxz
dec
sbb
xchg
dec
pop
cmc
stc
stos
jo
sbb
pop
stos
pop
imul
movs
or
loopne
mov
lods
imul
sahf
out
call
out
or
iret
jb
mov
adc
push
stos
push
jmp
outs
loop
outs
add
xchg
pop
inc
shl
iret
movs
mov
xchg
loopne
mov
sub
adc
imul
mov
xchg
(bad)
cmp
cli
dec
das
stos
rcr
(bad)
stos
and
ficom
xchg
pop
hlt
ret
xchg
loop
push
frstor
sub
test
push
cmp
aad
sub
pop
and
add
(bad)
out
dec
mov
into
cmp
loopne
jmp
retf
push
jle
cmp
lods
pop
push
xor
sbb
jecxz
and
xchg
mov
call
inc
push
mov
es
cmp
ins
pop
int
retf
ss
push
call
push
add
lahf
dec
jmp
arpl
dec
or
sbb
inc
retf
push
popa
mov
sub
mov
fadd
mov
inc
jns
jl
or
aaa
add
das
test
xchg
push
mov
loop
dec
lods
(bad)
cmp
push
dec
mov
(bad)
in
mov
add
sub
jmp
dec
mov
fidivr
mov
not
out
ins
jmp
iret
mov
cmp
test
cmc
mov
dec
dec
push
aam
cmps
cmp
out
sub
add
pop
pop
adc
sub
push
movs
inc
test
sar
aad
cmp
cmp
aad
push
jne
pop
xchg
dec
loope
jle
jp
fstp
fisttp
push
inc
mov
inc
jb
cmp
cmp
daa
pop
xor
addr16
int
push
push
xor
sbb
ins
fwait
(bad)
test
popa
xor
out
push
fwait
mov
mov
imul
and
lds
cmp
pop
cdq
sub
mov
lods
or
rcr
neg
sti
sbb
xchg
movs
aad
in
sahf
pop
hlt
int3
gs
movs
and
das
dec
out
out
stos
dec
push
daa
ror
enter
adc
sbb
sub
cli
(bad)
ror
mov
push
mov
adc
sub
pop
dec
jge
push
fstp
pop
imul
ficom
push
pusha
jecxz
js
mov
jmp
mov
lods
xchg
lahf
xchg
fwait
ins
sub
xor
mov
xchg
xchg
(bad)
adc
xor
dec
repnz
and
or
jge
outs
(bad)
mov
dec
cmps
sbb
pop
iret
xor
xchg
cdq
mov
sbb
in
add
imul
mov
sub
shl
cmp
idiv
mov
jecxz
dec
imul
and
fiadd
stc
mov
push
cmps
in
cmp
mov
cld
push
int
mov
stos
pop
pop
pmulhuw
pop
dec
push
dec
cmp
push
lods
jp
mov
pop
out
test
pop
daa
js
add
jecxz
and
xchg
ror
shl
jecxz
inc
shl
add
xor
inc
scas
add
mov
cmp
dec
mov
push
jmp
inc
in
loopne
(bad)
icebp
and
loope
(bad)
mov
shl
mov
xchg
mov
xchg
mov
stos
and
cmp
mov
in
cdq
mov
xor
jecxz
test
dec
ret
dec
clc
js
adc
ficom
int3
push
jmp
mov
movs
call
dec
dec
fistp
nop
movs
test
add
sbb
fisub
scas
add
mov
rcl
scas
fistp
repz
jmp
xlat
jmp
imul
or
cmps
aaa
inc
daa
das
sub
stc
mov
repnz
jp
mov
ds
(bad)
popf
pop
xchg
mov
fdivr
jne
mov
add
ins
adc
jp
es
lds
(bad)
ss
repz
sub
dec
fiadd
sbb
or
leave
cwde
pusha
je
lods
xor
shr
movs
add
adc
stc
in
sbb
out
imul
ret
repnz
sbb
rol
jmp
mov
inc
inc
xchg
ret
xor
fs
ret
cdq
iret
cmps
sub
mov
dec
ret
sub
cmp
aam
cmp
test
je
push
fcom
inc
xchg
and
sub
push
(bad)
push
cmp
sbb
lods
mov
enter
add
sub
and
std
(bad)
loope
pop
inc
push
jnp
cmps
or
mov
dec
xchg
lea
fstp
addr16
dec
fidiv
aam
out
test
ins
test
mov
mov
or
fsub
pusha
lahf
dec
dec
adc
aam
pop
and
jmp
ret
mov
mov
lods
push
retf
cs
xlat
dec
arpl
movs
outs
and
mov
adc
adc
shl
icebp
test
or
pop
cmp
cmc
outs
push
in
jl
imul
test
test
mov
jl
jne
stc
and
js
jge
sub
repz
es
push
std
xchg
or
push
pop
mov
pop
mul
add
movs
out
fcom
fstp
aad
push
push
lock
jns
adc
(bad)
cld
dec
push
mov
loope
stos
mov
push
adc
xor
and
xor
loopne
inc
add
mov
fwait
xor
inc
cmc
and
mov
cmp
fadd
cdq
sub
adc
outs
rcl
cmps
dec
popf
adc
cwde
fisttp
lea
sti
les
ror
mov
test
imul
bnd
int3
xor
jnp
mov
imul
(bad)
aas
and
outs
mov
lea
cwde
in
or
leave
dec
ret
adc
rcr
sub
mov
ins
jno
mov
loop
push
mov
xchg
add
bound
and
in
adc
sub
ds
retf
inc
mov
mov
test
and
jb
retf
rcl
pop
mov
into
mov
das
or
(bad)
movs
in
mov
cs
push
cdq
rol
fimul
inc
mov
push
push
jg
adc
loopne
icebp
or
(bad)
std
aas
xor
neg
mov
ins
dec
into
scas
and
mov
stos
pop
adc
sub
(bad)
out
out
adc
xchg
ss
and
movs
push
mov
adc
jmp
push
jb
les
mov
dec
mov
dec
sti
mov
jp
push
inc
add
(bad)
leave
cmps
xchg
push
xor
adc
xchg
adc
mov
sub
push
lods
pop
lock
mov
pushf
je
jg
lods
mov
cmp
adc
pop
add
inc
lock
dec
(bad)
rol
dec
clc
ret
or
and
repz
inc
fcomp
shl
mov
aad
mov
inc
or
push
mov
mov
(bad)
cld
sub
push
shr
sbb
hlt
or
push
cmp
pop
jmp
push
jbe
push
(bad)
mul
pop
mov
lds
cmp
lods
jb
sub
pop
adc
arpl
frstor
or
out
out
or
lods
ds
lahf
dec
pop
pop
push
jle
jo
jne
sub
in
sub
push
je
inc
sub
mov
cmps
aaa
cmp
jp
push
jns
int3
dec
push
es
out
and
sub
pop
sbb
div
stos
cmp
cmp
inc
rol
sahf
das
mov
adc
dec
les
aaa
aas
and
jne
ins
mov
sub
and
jne
test
sbb
jno
or
out
sbb
xchg
mov
add
pop
xor
xchg
mov
imul
add
xchg
cdq
cwde
pop
ss
(bad)
jno
bound
cmps
ficomp
pop
dec
xor
mov
shr
test
lods
sub
lock
jle
or
stos
retf
jnp
xor
add
jecxz
shr
jg
stc
sbb
inc
and
rcl
fwait
clc
cmp
cmp
pushf
inc
jmp
jl
ffree
inc
xchg
mov
sub
(bad)
cwde
push
push
out
in
out
je
mov
jns
cmp
xchg
adc
lds
out
cmp
inc
xor
fwait
jle
jecxz
pop
push
hlt
lds
fwait
js
int3
jmp
sub
jmp
dec
movs
movs
xchg
adc
not
int3
scas
cwde
std
arpl
cmp
jo
mov
mov
je
cdq
daa
and
or
push
lds
cmps
(bad)
cmp
mov
fst
in
and
mov
cmp
mov
jl
xchg
aas
scas
mov
ins
mov
or
sbb
popf
cwde
push
fnsave
repz
stos
lahf
pushf
push
sbb
jecxz
and
adc
dec
call
cdq
push
and
je
scas
sar
je
push
jl
jmp
push
push
xchg
mov
push
outs
cmp
repnz
push
aam
js
cmp
addr16
int
jmp
lahf
movs
inc
sti
or
sub
aas
jno
mov
push
mov
xchg
movs
dec
call
dec
dec
push
sbb
sub
ins
and
xor
loop
mov
stc
stc
sbb
(bad)
out
jge
inc
mov
dec
push
sub
rcl
movs
lods
and
into
xor
loopne
sbb
into
sti
fs
adc
ins
pop
mov
cld
sbb
inc
mov
fstp
ins
mov
jmp
sub
dec
rcr
dec
dec
in
lahf
inc
add
bound
mov
sbb
gs
mov
rcr
mov
xor
mov
out
sub
xor
pop
push
push
inc
scas
pop
dec
xor
xchg
and
cmps
cmp
adc
push
nop
push
jo
inc
xchg
gs
sbb
or
mov
push
test
cdq
sar
stos
out
mov
pop
bound
dec
stos
mov
pop
bound
push
xchg
retf
sbb
inc
in
cwde
or
push
dec
inc
js
fstp
jecxz
shl
dec
push
retf
es
movs
out
call
pop
adc
jo
adc
jae
neg
adc
mov
jl
pop
pop
mov
sbb
or
leave
mov
sub
movs
and
inc
pop
pushf
dec
shr
mov
push
dec
xor
ret
push
sar
gs
mov
cld
into
push
mov
(bad)
inc
test
mov
fdiv
and
xor
cmp
adc
add
in
pusha
add
or
test
dec
inc
jle
scas
mov
out
xchg
or
shr
or
jbe
sahf
les
lea
mov
mov
cwde
jecxz
(bad)
scas
push
leave
cs
movs
movs
or
pop
aam
stc
sbb
lock
cmp
dec
cmp
test
(bad)
jecxz
push
add
mov
sbb
jmp
jb
xor
cmp
fcomp
mov
ins
loop
pop
push
push
dec
(bad)
mov
dec
push
xchg
pop
out
std
(bad)
pcmpeqb
cmp
sahf
ror
std
es
dec
dec
inc
lods
or
mov
mov
imul
shl
add
(bad)
leave
repnz
sbb
aaa
xchg
push
dec
sub
sbb
pop
push
mov
pop
sub
lea
retf
lds
cmps
mov
cmps
xor
jmp
or
pop
push
repnz
fmul
sub
pop
in
rcr
or
mov
test
xchg
xchg
call
mov
cmps
dec
es
hlt
jnp
pop
ins
inc
test
mov
xchg
pop
in
out
call
push
mov
sub
retf
movs
pusha
out
adc
inc
fstp
sub
jo
dec
pop
push
push
call
pop
rcl
popa
or
cli
dec
xor
(bad)
jg
retf
jae
cmp
outs
ret
dec
mov
push
sbb
mov
lea
lods
pop
gs
stc
lds
xchg
xchg
xchg
test
hlt
test
dec
mov
mov
adc
(bad)
shl
pop
(bad)
push
jle
test
cmp
jbe
arpl
rol
jne
mov
in
scas
rcl
in
cmps
jns
sbb
xchg
aaa
jp
pop
mov
inc
lds
fisubr
adc
gs
pop
stc
mov
stc
out
mov
inc
imul
dec
or
lods
not
lods
fstp
jl
pop
popa
xchg
cmovge
sub
inc
mov
add
xor
jno
gs
sahf
jmp
rcr
gs
add
add
pmaxub
xchg
xchg
pop
xchg
cmps
jns
js
scas
and
jmp
test
cmp
retf
lds
aad
xchg
cmps
bound
adc
jno
in
test
sahf
(bad)
mov
mov
xchg
and
inc
mov
push
neg
add
cmp
mov
or
xor
test
dec
ret
imul
mov
(bad)
mov
xor
dec
jb
dec
mov
and
sub
push
popa
dec
bound
fld
dec
sub
xchg
mov
jmp
lods
cwde
push
cmps
pushf
stos
cmp
lock
mov
jns
retf
retf
icebp
gs
sbb
hlt
adc
mov
cmc
popa
cmps
in
stos
aas
xor
pop
ficomp
jmp
sbb
sub
push
sti
add
cwde
retf
cs
hlt
lods
movs
mov
and
and
(bad)
je
je
xor
aam
ss
daa
fwait
add
hlt
mov
cmp
jp
xchg
ins
leave
pop
out
pop
arpl
pop
aad
pop
hlt
mov
stos
lock
fidiv
push
pop
jb
das
daa
in
jne
iret
stos
in
outs
and
jns
inc
cmp
mov
xor
mov
and
sahf
(bad)
xchg
outs
fisubr
or
stos
jle
inc
aaa
push
xor
out
sbb
mov
cmps
push
test
xlat
mov
out
addr16
push
outs
fistp
or
jne
fidivr
ficom
sar
push
out
stos
imul
cmc
data16
dec
jmp
mov
bound
outs
les
lods
test
pop
pop
ins
fld
div
push
sbb
(bad)
fwait
push
add
arpl
gs
repnz
cdq
mov
push
mov
cmps
aam
lea
int3
mov
sub
dec
jnp
pushf
xor
(bad)
cdq
xlat
sub
pop
push
sub
shl
xchg
mov
xchg
xor
call
mov
mov
mov
retf
shr
mov
aad
push
mov
push
mov
dec
jo
cmc
pop
push
cdq
and
bnd
mov
push
jp
and
test
and
stos
je
mov
mov
push
push
push
je
mov
inc
test
adc
aas
or
in
retf
push
mov
jne
fnstcw
jns
mov
xchg
in
test
(bad)
and
sbb
fld
dec
pop
sbb
out
clc
cwde
aam
imul
mov
pop
test
pop
out
jnp
pop
xchg
out
xchg
sub
retf
cwde
push
jge
mov
outs
pop
inc
sar
out
sub
aas
mov
int
sbb
inc
pop
adc
jbe
aad
sbb
les
ss
lea
jns
push
sub
gs
jmp
dec
test
rol
pop
inc
jmp
clc
cli
xor
lods
fisttp
sbb
fwait
mov
movs
div
pop
das
enter
xor
call
pop
aaa
cmc
xor
out
push
dec
out
stos
inc
mov
mov
data16
imul
in
and
loop
popa
dec
popf
or
sub
push
add
loope
dec
push
push
std
cmovp
mov
push
xchg
out
(bad)
pusha
sub
(bad)
test
cmps
xor
adc
dec
enter
adc
adc
hlt
add
jl
jmp
mov
inc
mov
imul
or
dec
movs
xor
stos
pushf
jmp
out
into
inc
ret
mov
mov
push
sbb
jecxz
fcom
stos
ret
mov
pop
scas
jl
pop
test
cmp
pop
mov
mov
cmp
pop
jbe
ror
cmps
cdq
outs
pop
sbb
mov
cmp
test
mov
pushf
movaps
adc
cmp
mov
movs
xchg
pop
out
lahf
fidivr
cmp
mov
mov
and
outs
pop
call
ror
pop
popf
push
shr
inc
jmp
mov
js
loope
stc
shr
fwait
bound
adc
sbb
or
adc
xchg
aam
push
jbe
mov
rcl
(bad)
lods
into
pop
(bad)
jo
mov
int3
lds
push
je
out
cwde
ror
aaa
ss
xchg
ret
jge
adc
add
test
add
rcl
hlt
retf
fwait
ret
pop
cmp
add
xchg
aaa
cs
arpl
cmp
jecxz
dec
jl
xor
mov
int3
shl
test
mov
dec
or
in
and
cwde
inc
mov
into
add
push
jbe
add
out
sub
in
pop
or
stos
movs
daa
js
loop
add
xlat
daa
pop
js
pop
xchg
in
push
mov
or
xlat
je
mov
jge
xlat
test
jmp
push
push
jne
jne
stos
pop
repnz
test
test
popa
xchg
cdq
mov
je
in
stos
scas
sysexit
in
jnp
popf
pop
popa
loopne
aas
arpl
pop
lahf
fidivr
mov
and
div
cwde
lahf
pop
push
mov
loopne
inc
mov
dec
xor
(bad)
data16
pop
push
inc
dec
(bad)
dec
les
retf
loop
inc
ds
repz
or
out
icebp
cmp
test
jns
add
mov
test
in
mov
imul
movs
push
movs
popf
pushf
push
cdq
dec
jle
movs
test
repnz
add
call
(bad)
pop
jbe
iret
fwait
lods
cdq
mov
mov
addr16
pop
push
mov
fwait
mov
jp
inc
lock
retf
hlt
mov
addr16
lock
movs
pop
pop
loop
pop
pop
mov
mov
loop
and
sub
das
ins
and
rol
je
sub
push
fs
jle
popf
mov
or
dec
jns
dec
jb
xchg
mov
mov
push
enter
ja
cwde
pop
xchg
mov
test
sub
xor
in
sub
arpl
xor
repz
test
js
xchg
mov
jne
jl
pop
call
or
push
mov
icebp
xor
xchg
dec
es
dec
dec
cmp
and
mov
arpl
fs
and
sahf
fisttp
dec
push
pop
cwde
mov
xor
push
xchg
stos
push
jbe
scas
pushf
adc
adc
fwait
cmp
inc
lods
push
pop
push
imul
movs
into
imul
push
cmps
fist
fst
aad
mov
neg
sub
pop
(bad)
(bad)
mov
sbb
fsub
fsqrt
lock
mov
or
pop
xchg
sub
push
shl
fwait
push
test
sub
out
xchg
dec
imul
adc
xchg
and
fsub
push
cmc
out
xor
jge
xchg
cwde
gs
or
les
sub
bound
and
jp
popa
shl
mov
data16
mov
(bad)
sub
jbe
jmp
sub
pop
pop
xor
retf
push
jmp
mov
aad
sar
movs
sti
mov
xor
loope
pop
sahf
dec
out
dec
jns
retf
rol
bound
mov
lea
fcmovne
mov
mov
dec
ds
xchg
lods
aaa
ins
mov
outs
cmps
rcr
popa
cli
ins
rcl
ja
cmp
dec
int3
mov
in
sbb
pop
adc
sbb
jns
cmc
fild
aas
and
push
int3
cli
pop
out
push
xchg
sbb
mov
test
lea
je
adc
fbstp
fidiv
std
sbb
pop
or
xchg
cdq
sbb
pop
fbld
imul
fild
xchg
xchg
mov
cmps
cli
push
test
pop
into
fidiv
inc
dec
cmp
push
(bad)
lods
xor
aaa
in
loope
movs
push
sbb
mov
out
ret
test
dec
mov
shr
adc
test
inc
add
aam
daa
sbb
out
repz
pop
lds
inc
and
xchg
pop
dec
push
and
dec
xchg
mov
aaa
adc
adc
ror
add
jecxz
movs
adc
sar
les
popa
pop
mov
pop
leave
jae
cmp
int3
xor
mov
push
nop
pop
add
ins
and
dec
pop
dec
cmp
or
ins
(bad)
xchg
dec
ja
sub
(bad)
mov
xor
leave
ror
sar
push
mov
mov
add
loope
into
push
out
inc
jl
push
icebp
inc
retf
sub
aam
ja
adc
inc
jno
adc
lahf
add
mov
(bad)
into
adc
fwait
loop
and
dec
mov
lods
push
fcomp
push
popf
repz
mov
push
icebp
outs
sub
arpl
or
push
push
ss
adc
push
pop
add
or
jmp
test
cmp
pop
js
fadd
adc
sar
(bad)
and
test
fild
dec
mov
cmp
xchg
inc
add
das
jl
test
(bad)
(bad)
mov
mov
adc
xor
xor
sub
cdq
ins
sahf
jae
call
cmps
xor
inc
ja
imul
test
xor
or
inc
imul
test
dec
push
mov
pop
push
jns
ds
push
stos
stos
sub
jg
(bad)
xchg
xor
aaa
in
cld
shr
dec
cld
call
xor
lds
stos
fcom
in
jae
idiv
mov
sbb
gs
imul
das
dec
add
cmps
and
and
push
xor
xchg
mov
imul
push
movs
in
adc
repnz
stos
jne
or
fild
cmps
jb
xor
out
repz
jne
addr16
mov
dec
mov
xor
or
pop
loope
(bad)
ja
cmp
mov
pop
pop
mov
add
cmp
jl
jno
jne
cmp
jmp
jns
std
or
inc
jbe
jne
inc
inc
push
xchg
mov
mov
outs
arpl
aad
mov
pop
push
mov
add
and
movs
mov
cli
mov
cmp
sbb
mov
out
adc
inc
jno
add
mov
xchg
jae
aaa
jno
into
arpl
mov
out
push
aam
xor
clc
aas
jmp
arpl
vcvttss2si
mov
jae
fmul
ss
push
pop
loop
pop
cs
and
mov
xor
xchg
xchg
inc
(bad)
jno
xchg
mov
nop
or
test
or
(bad)
fpatan
dec
mov
movs
js
jno
push
loop
pop
imul
push
repnz
cmp
dec
popa
ret
test
test
sub
stos
gs
fwait
or
or
xor
mov
fdivrp
add
jb
push
jne
jbe
aas
and
clc
ins
lock
jmp
adc
add
mov
sub
iret
mov
xchg
xchg
jae
ret
sub
(bad)
ds
jnp
mov
adc
imul
push
cmps
scas
sub
stc
sbb
xchg
pop
into
pop
xchg
repnz
push
movs
adc
arpl
mov
pop
movs
jns
sti
inc
mov
jg
lea
cmp
aad
mov
cmps
add
or
adc
add
cs
push
scas
ja
jns
cmp
adc
cs
aaa
xor
push
jno
daa
test
and
and
enter
cmp
lahf
cdq
inc
cld
dec
int
int
mov
mov
int3
jb
xchg
sbb
push
jle
mov
test
sbb
cli
(bad)
pop
mov
adc
sbb
(bad)
(bad)
out
jg
and
pusha
dec
pop
mov
nop
imul
inc
test
lock
xor
stc
mov
adc
mov
adc
out
jmp
test
(bad)
out
or
outs
add
stos
add
dec
push
xor
pextrw
pop
xchg
(bad)
mov
imul
xchg
mov
pop
dec
test
out
inc
mov
push
adc
cmp
in
dec
aad
call
in
fnstcw
push
stos
xchg
jle
jle
jl
sub
retf
je
mov
and
mov
pushf
inc
fs
(bad)
dec
les
aaa
iret
shl
add
pusha
adc
mov
imul
movs
and
aam
stc
mov
xor
add
and
or
mov
sub
js
dec
or
dec
ficom
or
lahf
dec
push
cmp
and
aad
les
and
jmp
mov
je
outs
mov
jnp
into
mov
cmp
mov
imul
das
fwait
enter
lock
jb
jae
push
not
movs
call
and
hlt
push
mov
mov
mov
mov
aam
test
jmp
xchg
imul
fisttp
pop
mov
adc
push
sub
mov
xchg
xlat
xchg
aad
jno
mov
cli
ja
test
and
cmps
jg
push
cmp
xor
lds
mov
xor
mov
out
mov
popf
sub
and
in
dec
mov
mov
(bad)
ficom
jle
mov
popf
aas
pop
call
fmul
push
mov
pop
cli
sbb
scas
repz
leave
rcl
lods
mov
fsubr
jno
arpl
ret
add
pop
lahf
and
inc
and
aam
mov
mov
mov
pop
movs
push
push
aad
in
in
cli
aam
pop
in
aam
jmp
sub
hlt
push
or
mov
daa
sbb
xchg
div
xchg
shl
jle
iret
push
jae
out
dec
into
in
xor
sbb
daa
sbb
mov
jl
xor
outs
push
jl
scas
ficom
mov
and
inc
pop
pop
sub
ja
xlat
psubq
or
in
hlt
loop
lahf
pop
mov
dec
dec
push
fild
jno
jl
cld
inc
ins
dec
daa
mov
mov
mov
scas
aam
or
dec
xor
pushf
xchg
mov
inc
inc
scas
arpl
gs
ds
cmp
jp
bound
js
inc
dec
(bad)
mov
push
pushf
inc
xchg
jae
stos
mov
jno
js
or
xlat
mov
movs
dec
dec
jmp
lods
enter
fldcw
mov
fstp
dec
inc
fcomp
or
inc
cmovns
push
mov
(bad)
cld
push
and
cmc
lahf
loopne
into
sbb
ins
dec
loop
inc
hlt
cmc
xor
sbb
cmp
out
add
mov
cmp
xchg
retf
stc
repnz
pop
jmp
fisubr
icebp
cmp
pop
fisubr
in
xchg
fnstenv
gs
inc
inc
lds
inc
ffree
push
mov
or
imul
xor
loope
mov
xchg
inc
add
xor
out
pushf
lods
int
mov
push
in
adc
cdq
int
fnstsw
mov
div
out
xor
sar
das
fwait
icebp
cld
mov
cs
leave
js
pop
xor
pop
jb
aad
lods
mov
jmp
scas
leave
push
aaa
retf
arpl
movs
mov
icebp
lds
sub
pop
sbb
lds
jne
dec
push
sub
scas
aaa
xor
xchg
xor
arpl
dec
add
sub
xor
cmp
vorpd
mov
(bad)
sub
test
imul
pushf
mov
adc
xchg
int
jle
mov
pop
push
sahf
rcl
push
push
push
jae
jb
ins
inc
sub
in
movs
je
pop
call
jmp
out
rcr
or
inc
retf
aad
outs
xchg
push
inc
mov
xchg
test
sbb
cwde
pop
adc
push
fwait
push
ficom
int3
lds
cmp
(bad)
daa
inc
lods
mov
repnz
dec
xor
xor
mov
or
pop
or
xchg
adc
(bad)
fsubr
mov
in
cld
or
cmps
jo
lds
mov
mov
add
mov
adc
mov
mov
xchg
xchg
arpl
push
jb
test
xor
mov
add
cld
xchg
call
cmps
iret
es
fwait
push
xor
inc
fst
inc
xor
dec
xor
js
pop
clc
clc
(bad)
fisubr
outs
outs
or
jl
out
jmp
test
imul
mov
push
loopne
call
dec
or
jns
(bad)
sbb
push
into
in
push
or
add
or
jp
aam
loopne
pop
icebp
imul
cmp
mov
lea
inc
adc
ins
push
cli
xchg
outs
inc
push
xchg
sbb
or
mov
sbb
mov
aaa
mov
and
cmps
xchg
add
dec
mov
aaa
int
push
jge
in
jae
xchg
mov
push
jmp
mov
dec
imul
sub
sub
mov
jae
into
dec
push
sbb
add
sbb
dec
push
sub
lods
iret
jb
jmp
into
sub
sub
jae
pop
push
ins
test
xlat
xor
ret
jb
ja
mov
dec
stos
mov
xlat
gs
add
push
pop
test
push
sub
push
aad
adc
dec
in
out
inc
ja
mov
jae
push
nop
inc
ror
out
dec
cmp
xor
push
fbld
jmp
(bad)
scas
movs
loop
or
cli
(bad)
enter
xchg
scas
push
arpl
jno
and
cdq
xchg
test
mov
adc
xchg
cmp
loop
imul
cmp
cmp
das
jg
pop
fld
rol
imul
rcr
xchg
lahf
pop
inc
mov
mov
xor
adc
movs
push
xchg
push
and
xchg
mov
xchg
mov
test
aas
adc
dec
inc
pop
cmp
(bad)
xor
bound
adc
mov
push
(bad)
out
dec
xchg
repnz
(bad)
movs
arpl
cmc
dec
mov
sbb
out
xchg
push
fild
pop
sbb
je
and
jnp
fldcw
jmp
mov
fwait
mov
stc
jae
js
adc
dec
adc
pop
imul
adc
sbb
cwde
js
(bad)
mov
dec
dec
in
jmp
xchg
inc
cmp
ss
daa
jle
aad
jmp
ins
pop
in
mov
pop
xor
adc
or
and
imul
neg
loopne
cmp
mov
lahf
mov
pop
mov
test
dec
into
and
shl
jne
push
ds
test
add
lea
icebp
mov
in
push
adc
mov
lds
push
sub
cmp
lea
push
push
ret
sar
lods
sub
js
jmp
mov
dec
jle
mov
mov
stos
icebp
dec
inc
and
sahf
mov
sub
jo
sub
mov
retf
bound
retf
div
jecxz
xchg
stc
sbb
jmp
pop
les
fs
cmps
jno
dec
imul
inc
jge
fistp
mov
push
pop
sub
sti
loop
add
(bad)
pop
retf
mov
inc
cmp
push
pop
stos
ins
cmp
ja
push
test
jb
movs
into
movs
aas
das
cs
hlt
adc
lea
xlat
loopne
es
and
inc
cmps
aaa
leave
push
rcr
sbb
imul
and
out
mov
sti
retf
sub
and
pushf
and
icebp
sbb
test
fidivr
aas
pusha
push
mov
sub
adc
scas
cmc
and
imul
fwait
push
mov
lea
jb
sbb
ins
xor
out
push
xor
repz
jo
cmps
stos
xchg
fwait
inc
and
and
xchg
jecxz
fsubr
jmp
push
sbb
xor
adc
dec
jae
or
leave
std
xlat
cmp
hlt
pop
test
xchg
stos
mov
lods
das
xchg
(bad)
loopne
push
pop
dec
mov
push
sub
lahf
mov
cdq
jne
pop
xor
loope
test
jecxz
push
(bad)
mov
cmp
dec
(bad)
inc
push
not
fild
test
mov
cmps
rcr
sar
jne
imul
ja
movs
lock
pop
pop
pop
xchg
das
mov
cmp
adc
fwait
clc
jae
and
(bad)
add
sbb
je
inc
cmp
cmp
sbb
aas
rol
add
cmp
xchg
rcr
int3
mov
in
cmp
mov
mov
dec
mov
and
mov
jg
(bad)
aas
push
cmps
mov
retf
push
popf
fnstcw
sub
pop
push
lods
push
in
sub
push
das
mov
dec
lods
push
pop
repnz
xor
stos
call
xor
jns
mov
push
sub
out
repz
or
inc
push
lea
xlat
dec
jp
push
shr
push
lods
imul
xlat
or
mov
lahf
hlt
cs
jmp
cdq
ja
fwait
push
lds
push
loop
shl
in
mov
dec
push
lods
adc
xchg
iret
int
mov
call
mov
xor
pusha
test
and
fisub
add
adc
pop
and
movs
dec
xchg
dec
xchg
pop
in
push
mov
lods
popa
dec
into
retf
ja
dec
adc
add
jmp
aas
lods
inc
jp
inc
outs
push
ins
adc
dec
dec
stc
outs
xor
mov
jecxz
push
xchg
mov
lock
movs
mov
mov
outs
adc
out
xor
push
pushf
movs
retf
xlat
in
jbe
repnz
dec
pop
add
or
sbb
cmp
mov
fstp
mov
neg
inc
sbb
cmp
mov
popa
icebp
push
(bad)
jbe
pop
fsub
pop
pop
retf
imul
fsubr
bound
adc
scas
push
and
mov
inc
enter
cdq
rcl
cmp
sbb
pop
xor
dec
stos
ins
out
push
mov
stos
pop
push
call
lods
jno
les
or
jae
imul
push
sub
in
mov
bound
jle
hlt
stos
cmp
xchg
and
adc
jae
int3
es
adc
adc
jge
neg
xchg
ffreep
repnz
outs
xlat
cmp
mov
mov
push
movs
add
scas
rol
aad
inc
repz
adc
pop
arpl
out
rcr
cmps
push
add
jnp
xor
xbegin
int
mov
js
cmp
pop
outs
scas
(bad)
std
lock
mov
ss
aas
dec
movs
jnp
jp
push
dec
popf
cdq
imul
pop
push
shr
xchg
or
sbb
dec
lds
test
or
dec
mov
push
in
outs
(bad)
pop
and
mov
movs
lea
test
mov
pop
push
in
ret
std
dec
mov
dec
mov
lea
mov
pushf
adc
out
jns
dec
mov
leave
mov
cmc
test
sub
lods
push
or
(bad)
xchg
and
xchg
and
int
mov
sar
ins
ret
cmp
dec
push
pop
cwde
pop
(bad)
lock
mov
stos
mov
xor
mov
scas
clc
test
into
xor
and
mov
sub
in
mov
outs
imul
xor
lock
jmp
aam
jle
mov
sub
retf
jg
retf
out
push
loop
std
jns
ss
repnz
ins
daa
shr
shr
arpl
adc
push
das
int3
mov
shl
es
aas
jns
fst
dec
cmp
jmp
lods
pop
jp
out
retf
mov
mov
mov
cmp
push
mov
out
pop
xchg
xchg
cmp
pop
retf
mov
jmp
into
push
shr
pop
lods
pop
xchg
ja
mov
push
jmp
xor
out
and
dec
imul
ret
dec
lea
inc
adc
xchg
xchg
cmp
es
mov
out
call
arpl
mov
cmp
lea
push
cmp
iret
cwde
aam
test
mov
out
cmp
hlt
mov
push
xor
les
push
repz
jae
pushf
and
push
push
imul
les
bound
pop
xchg
enter
xor
xor
xchg
xchg
or
pop
dec
and
sar
sub
or
ret
js
fwait
hlt
adc
push
mov
das
inc
idiv
popf
stos
push
mov
popf
loope
cmc
jecxz
test
icebp
inc
loopne
loop
dec
jno
ins
fist
call
ins
aaa
cmp
mov
stc
ja
out
cdq
and
xchg
mov
jae
movs
dec
mov
push
ret
movs
ffreep
sti
cld
ds
push
outs
jb
adc
pop
xchg
rcr
sbb
les
push
int
scas
ret
dec
jmp
out
xchg
mov
dec
inc
mov
push
dec
cwde
jp
movs
mov
xchg
daa
pop
fisubr
mov
sbb
js
(bad)
pop
ficom
ins
aas
imul
cmp
sti
mov
loop
out
mov
cdq
xchg
ins
in
dec
xchg
mov
dec
inc
pop
pop
mov
and
mov
mov
mov
fbstp
sar
inc
call
sub
cmc
jne
fucomip
arpl
test
xor
(bad)
fild
jmp
dec
xchg
popfw
dec
popa
sub
movs
call
dec
stc
and
push
add
in
hlt
dec
ss
and
nop
push
(bad)
and
mov
sbb
cs
sbb
retf
jmp
ret
retf
test
mov
fld
mov
icebp
out
leave
pusha
iret
aas
inc
test
jg
jp
ins
jae
cmc
ret
xor
test
dec
stos
scas
pop
mov
fwait
mov
mov
pop
loop
dec
xchg
iret
mov
adc
iret
xchg
inc
aad
dec
dec
mov
xlat
das
in
mov
jl
xchg
jle
fisttp
aam
add
xchg
mov
xchg
inc
and
jbe
mov
or
xchg
mul
movs
dec
das
in
dec
pop
dec
pop
cli
mov
mov
ds
mov
arpl
push
idiv
jge
stos
mov
cmps
adc
loope
lods
jb
addr16
popf
mov
cdq
in
inc
enter
aas
push
mov
neg
scas
lods
cli
sar
clc
xchg
out
icebp
outs
repz
loopne
mov
sbb
xor
leave
fwait
sar
push
sub
cld
fdivr
push
stos
cld
xchg
clc
adc
jmp
adc
dec
int3
mov
clc
jl
xor
pop
jl
fld
jmp
push
movs
xchg
cmps
sahf
cli
add
jl
hlt
push
(bad)
lods
push
jnp
jg
sub
mov
xor
jne
in
cmp
sub
retf
and
mov
arpl
sub
inc
pop
mov
and
lea
pop
xchg
fninit
jno
mov
js
iret
inc
retf
mov
ins
ror
ds
sub
cmp
in
aam
jnp
adc
add
outs
and
pop
push
sub
xchg
dec
cmp
sub
pop
dec
push
popf
fldenv
stos
and
jge
loop
mov
xchg
ins
jmp
sbb
call
retf
push
xchg
dec
push
pop
jmp
std
fnstsw
xchg
mov
pop
aas
outs
dec
pop
adc
sub
push
jecxz
pop
xlat
dec
xor
scas
xor
ins
(bad)
lods
jmp
movs
hlt
mov
dec
dec
and
xor
sub
cmp
mov
push
test
neg
push
out
xchg
outs
pop
out
sub
dec
dec
outs
and
adc
xchg
or
out
(bad)
cmc
sub
dec
std
or
movaps
pop
retf
fmul
loope
dec
xor
jne
sub
popa
in
stos
inc
test
in
icebp
xchg
adc
jmp
xchg
sub
gs
adc
inc
xor
cdq
cmp
mov
cs
movs
inc
adc
or
or
leave
sub
outs
mov
icebp
sbb
and
out
enter
cwde
xchg
stos
shl
mov
jge
sub
sbb
rcr
jp
push
shr
inc
jnp
out
sbb
push
aam
push
xor
dec
jge
cmp
rcl
gs
call
cmp
mov
mov
xchg
push
push
arpl
sub
ins
fwait
add
fwait
mov
rep
lods
cmps
and
inc
loop
ret
aad
out
adc
add
(bad)
repnz
sub
mov
push
stc
lods
sub
fwait
sub
lahf
sub
jno
sub
pop
es
bound
scas
push
cmps
sahf
push
inc
ds
das
jo
je
or
mov
stc
mov
inc
movs
fs
and
pop
test
(bad)
cmp
mov
daa
movs
sbb
test
add
(bad)
sbb
and
(bad)
jle
or
in
adc
fcomp
je
mov
and
leave
jmp
mov
add
adc
mov
push
mov
mov
xor
lahf
xchg
fcom
push
(bad)
mov
jb
mov
pop
or
movs
popf
lock
and
add
(bad)
loope
or
sbb
jecxz
jmp
cmp
stc
fist
pop
mov
arpl
les
xor
out
in
aas
push
stc
lea
xchg
push
mov
ins
jbe
push
adc
daa
xor
push
jae
aas
jmp
mov
(bad)
mov
out
push
outs
dec
inc
sub
inc
loop
loop
lods
jl
imul
xchg
cmp
movs
jg
xchg
stc
adc
scas
mov
movs
adc
popf
cli
adc
loop
fmul
in
push
iret
ret
xchg
out
push
dec
inc
(bad)
repnz
les
movs
pop
jp
je
cmp
push
mov
sub
sbb
packuswb
fsub
dec
mov
inc
aaa
xor
push
push
lea
xor
push
dec
aaa
push
cmp
mov
movs
icebp
and
js
lock
mov
cmps
dec
pop
repz
lods
jmp
cwde
imul
jno
and
jns
les
loope
push
sahf
mov
shl
inc
outs
imul
lods
jo
jo
mov
shr
imul
mov
dec
jbe
push
call
inc
mov
xchg
test
add
add
pop
movs
sub
rol
mov
inc
sbb
sbb
movs
mov
pop
dec
fcom
repnz
inc
xchg
lds
movs
jmp
pop
dec
out
movs
ins
add
adc
jecxz
stc
ror
pop
jl
cmp
xchg
std
push
repnz
jmp
push
push
add
pop
in
rcl
lea
sbb
js
pop
pop
xchg
shl
push
es
jg
pop
cmps
stos
xor
(bad)
fcomip
xor
adc
mov
pop
std
icebp
mov
cmps
cmp
call
adc
mov
out
imul
aad
push
into
pushf
call
xor
scas
mov
aaa
push
adc
inc
or
mov
mov
pop
and
pop
fisub
xchg
out
clc
fnstenv
dec
jle
dec
jmp
mov
jnp
sar
int
pop
stos
cdq
js
sbb
xor
or
jno
adc
nop
adc
push
(bad)
jmp
xchg
push
(bad)
push
mov
xor
loop
inc
js
aaa
sahf
cwde
lock
jmp
not
mov
scas
popf
dec
push
fadd
cwde
xchg
dec
or
and
jns
inc
mov
int3
daa
dec
je
sub
jl
add
xchg
mov
loop
(bad)
in
and
lock
fdivr
add
pop
(bad)
aam
pop
mov
hlt
fwait
mov
ds
int3
cmps
jg
mov
loope
cmp
pop
in
cmc
mov
add
mov
in
jl
and
adc
sbb
loop
dec
in
cmp
cdq
inc
jb
push
mov
xlat
adc
(bad)
enter
xor
pop
cdq
dec
or
add
and
or
lock
movs
test
jmp
xor
test
hlt
push
mov
mov
jae
jns
movs
fidiv
and
sbb
repnz
fiadd
cmp
push
and
pop
cmp
jae
je
sbb
cmp
pop
xor
cmp
popf
ret
push
bsr
jecxz
fsubp
cmps
rcr
ss
int3
dec
cmps
add
out
push
mov
inc
test
mov
add
and
inc
mov
mov
adc
mov
xchg
aad
clc
push
inc
cmps
int3
push
push
lods
loopne
xchg
push
scas
pop
stc
sub
inc
cs
push
pop
inc
jb
outs
push
push
fistp
inc
loope
sar
pop
mov
and
mov
mov
push
xchg
push
shl
cs
fisttp
fwait
jmp
(bad)
fld
push
mov
xchg
or
add
add
cmp
mov
movs
dec
rol
push
call
sbb
push
adc
pusha
lods
int3
mov
je
pusha
sub
and
jb
leave
fistp
xor
shr
pop
push
and
arpl
sub
cmc
mov
xchg
add
mov
xor
adc
cmp
shr
sub
dec
cdq
mov
pop
xchg
adc
lods
xlat
aas
in
xchg
xchg
push
retf
inc
movs
mov
jns
push
push
pop
jl
xchg
lods
aas
mov
mov
int3
into
jae
cmp
dec
jmp
push
pop
add
sub
(bad)
lahf
push
test
fistp
pop
lods
dec
and
xchg
dec
xchg
in
scas
push
leave
and
mov
sub
mov
jg
cli
and
je
les
das
mov
lock
cmps
xlat
add
sti
jnp
popf
xchg
ins
iret
clc
test
xchg
mov
outs
cmps
xlat
mov
xchg
add
out
and
loop
jae
pop
fwait
ret
mov
pop
imul
jns
mov
leave
mov
inc
stos
add
pushf
sbb
mov
mov
div
ficom
lock
lds
movs
mov
jecxz
mov
and
sti
jnp
dec
call
ja
popf
jne
adc
repnz
inc
or
dec
fbld
jg
enter
(bad)
xchg
ret
arpl
sar
(bad)
jne
ficom
mov
(bad)
(bad)
mov
shl
fldl2t
xchg
cs
jns
scas
pop
or
imul
fisubr
iret
pop
arpl
cmp
jecxz
aaa
jb
inc
cs
and
ins
pop
dec
pop
xchg
popa
jnp
mov
xor
push
cs
add
sub
jmp
mov
pop
jmp
mov
test
ficomp
jns
movs
adc
and
cmp
je
pushf
mov
cdq
repz
push
loope
push
sub
push
(bad)
fdiv
in
adc
movs
fs
sub
inc
lods
mov
rcl
mov
mov
push
xor
in
cmp
cmp
adc
jmp
mov
cmps
loopne
sbb
push
mov
xchg
and
test
imul
xchg
sub
jmp
and
dec
cmp
pushf
out
outs
js
js
retf
jge
xchg
jecxz
cld
mov
and
scas
ret
sti
xchg
jle
push
(bad)
pushf
lock
cmps
dec
loopne
add
fist
dec
aaa
xchg
cmp
jns
in
shr
das
stos
scas
sub
cmp
adc
adc
mov
jnp
inc
rol
div
mov
lock
fidivr
(bad)
scas
icebp
inc
xchg
adc
ss
lds
inc
sub
push
xchg
mov
inc
or
shl
cmps
fldcw
test
mov
in
bound
lods
aas
jno
ss
cmp
pop
fst
inc
(bad)
mov
cmps
cmp
add
pop
jne
stos
add
inc
call
(bad)
repnz
das
mov
ds
pop
lahf
rcl
jmp
ins
jmp
imul
pop
pop
in
lds
call
inc
stos
mov
nop
aas
sub
mov
dec
mov
add
ret
fstp
pop
dec
lods
lds
adc
mov
and
or
xchg
xor
xchg
add
push
inc
dec
fs
push
hlt
es
shr
cmp
jle
jnp
xchg
sbb
sub
into
cmps
lock
movs
cmp
dec
push
test
adc
jns
xor
or
dec
iret
hlt
mov
(bad)
das
cli
dec
push
mov
pop
movs
sbb
retf
xchg
pusha
adc
sub
adc
pop
fs
frstor
push
call
inc
cmps
imul
lods
cld
(bad)
cmc
pop
adc
mov
mov
sbb
lahf
jnp
imul
bound
jo
(bad)
in
(bad)
push
cmps
adc
in
pop
loope
int3
pop
sbb
lahf
or
aad
xor
ror
add
jne
mov
mov
xchg
cmp
pop
shr
jge
jecxz
movs
adc
xchg
ror
daa
out
jns
sbb
pop
cld
xchg
inc
ins
xchg
xchg
push
stos
push
data16
lods
xor
in
addr16
aad
test
clc
rcl
mov
pop
xchg
push
pop
xor
xchg
repnz
jmp
inc
push
and
mov
dec
sbb
pop
sub
jb
pop
test
rcl
adc
xchg
test
adc
xor
fld
rcl
xor
adc
xor
sub
sahf
pop
xchg
mov
inc
movs
dec
dec
xlat
movs
xchg
lds
loopne
xchg
ins
cmps
addr16
inc
push
pop
and
cs
cmp
mov
out
inc
cwde
rcr
jmp
sub
mov
mov
movs
loop
cli
xor
xchg
push
popf
sub
iret
fst
mov
or
aad
shl
xchg
test
xor
xor
or
sub
std
adc
(bad)
es
enter
pop
inc
xchg
mov
jbe
push
or
push
push
mov
mov
jnp
lods
cld
shl
push
adc
test
pop
bound
lds
fs
repz
test
xchg
adc
pop
xchg
add
cmp
adc
pop
mov
mov
mov
imul
sbb
mov
sub
pushf
pop
mov
inc
inc
ins
not
test
inc
and
test
out
pop
retf
retf
jno
dec
dec
mov
in
in
into
sbb
clc
xchg
jnp
dec
add
movs
inc
(bad)
enter
jne
xor
lahf
test
lahf
outs
push
push
je
push
es
push
out
mov
shr
and
scas
stos
xor
(bad)
clc
adc
in
lods
dec
pop
jb
or
data16
pop
ins
sub
adc
repnz
je
lea
dec
add
mov
daa
and
dec
inc
aas
cli
movs
jl
arpl
adc
xchg
fsubr
xchg
inc
fwait
stos
push
push
mov
sub
fild
in
mov
js
xlat
mov
inc
gs
(bad)
pop
or
int
cmp
movs
jae
jg
loopne
fs
enter
sbb
jg
int
std
adc
cmps
js
jne
adc
add
bound
jle
dec
sub
jne
les
jns
xor
dec
fs
js
stos
mov
aas
xchg
and
push
mov
lods
dec
pandn
inc
push
mov
daa
mov
and
lds
fwait
pop
mov
aad
std
mov
xchg
test
push
add
or
push
test
pop
xchg
or
movs
push
repz
ins
xlat
inc
aas
cmps
loopne
mov
jmp
xchg
or
or
or
rol
mov
in
inc
fistp
cmp
and
sbb
push
mov
jne
xchg
xchg
or
shl
lods
aaa
sbb
int
add
mov
sub
sub
aaa
es
test
repz
leave
gs
pop
xchg
mov
jnp
cmp
mov
mov
adc
push
movs
pop
ret
sbb
lods
push
cmp
jnp
xor
test
je
cmp
test
outs
daa
xchg
out
pop
shl
int
(bad)
maxps
test
loope
jnp
cs
retf
xchg
xchg
xchg
cmps
xor
inc
cmp
ret
test
inc
call
mov
fcmovnbe
adc
sbb
pop
dec
jmp
push
(bad)
push
iret
arpl
cmc
or
repz
push
xchg
and
mov
stos
ins
cmc
adc
dec
fwait
xor
(bad)
and
cmp
test
into
sub
scas
cli
and
scas
shl
sub
repnz
push
cmp
shr
pop
sbb
dec
xchg
test
scas
and
outs
retf
xchg
retf
gs
js
cmp
mov
sar
mov
xchg
(bad)
sti
js
ficom
scas
retf
stos
push
gs
outs
and
mov
mov
leave
pop
jl
leave
push
pushf
sbb
loope
ins
jl
and
lods
pop
mov
in
retf
out
dec
ret
imul
stos
js
imul
lahf
inc
out
jnp
out
repnz
retf
mov
mov
fst
xchg
movs
mov
xchg
adc
ret
dec
fwait
mov
fmul
push
(bad)
cmc
xor
cmps
shl
ins
ja
dec
or
adc
xchg
ret
jo
sub
mov
xor
jnp
inc
call
adc
dec
fist
push
jne
imul
cdq
xchg
push
xor
mov
fldl2e
xlat
movs
push
(bad)
xchg
xlat
idiv
sbb
into
sahf
cdq
inc
jle
lahf
mov
mov
lahf
adc
xchg
retf
jmp
shl
mov
retf
in
or
movs
movs
test
inc
or
push
sub
inc
cmps
shl
cmp
xor
cmovns
outs
adc
ret
push
push
xchg
ror
sbb
dec
hlt
mov
pop
es
lea
or
inc
fild
aaa
int3
gs
mov
dec
inc
xchg
fwait
push
nop
adc
popf
push
sbb
movs
dec
adc
push
sub
xchg
das
mov
xlat
shr
adc
lea
stos
rcl
pop
mov
cmps
cdq
adc
popa
pop
pop
sub
lock
xchg
nop
jno
cmp
push
mov
push
jbe
scas
mov
xlat
mov
push
cmps
dec
cs
jp
out
lds
dec
ja
sbb
loopne
sub
rcl
sbb
sub
lods
enter
int
shr
pop
pop
xchg
push
dec
int3
mov
sahf
shr
dec
add
bnd
sbb
adc
and
sub
and
fnstenv
xlat
inc
mov
inc
out
(bad)
icebp
jg
adc
test
dec
push
ins
jmp
adc
shl
into
dec
repz
fidiv
mov
xchg
push
push
ds
cli
pop
xor
dec
in
cmp
mov
(bad)
movs
loop
jge
out
aaa
add
stos
sbb
int
(bad)
gs
ficom
aaa
sbb
popa
les
movs
test
fs
xchg
and
mov
rcl
adc
or
pop
dec
leave
ret
ins
les
sbb
dec
or
dec
mov
xor
lods
(bad)
dec
sbb
sub
les
out
mov
into
test
movs
es
int
mov
shr
and
sub
mov
or
sub
mov
push
cmps
mov
int
pop
popf
mov
mov
fcom
sbb
imul
fcomp
pop
cmp
xchg
push
stc
vmwrite
jge
lock
push
popf
xchg
bound
sub
iret
pop
pop
cmp
ret
push
add
ss
sbb
sbb
int
push
hlt
ins
rol
int
popf
push
xchg
sub
repnz
sbb
mov
test
sub
mov
sahf
jbe
cdq
jge
(bad)
fscale
in
xchg
pop
dec
sub
adc
xchg
adc
adc
sbb
retf
test
outs
jne
cmc
xchg
stos
mov
ffreep
jno
cmp
sbb
loop
loop
test
rep
fisubr
sub
mov
lods
dec
movs
push
xchg
xor
inc
call
sub
cmpxchg
adc
push
push
cwde
out
out
fsubr
cmp
or
dec
push
pop
das
lahf
sbb
xchg
jmp
ins
js
call
aas
xor
fsubrp
ss
shl
or
neg
push
adc
dec
mov
push
add
sbb
jmp
stc
jle
sbb
mov
clc
inc
jg
fisubr
dec
mov
add
xlat
shl
mov
out
pusha
aam
inc
and
or
inc
dec
sbb
add
sub
addr16
mov
jb
stc
inc
sub
shl
dec
lods
adc
stc
or
test
cmps
cmc
inc
jmp
aas
adc
jb
mov
mov
dec
xlat
fucompp
mov
xlat
je
in
jne
pop
int3
lahf
xchg
int3
sti
cmp
xchg
rep
push
into
xor
sbb
ja
inc
aam
mov
aad
in
sub
lods
dec
(bad)
ficomp
out
jmp
xchg
int3
movs
out
ins
push
push
mov
add
sub
hlt
dec
and
push
out
mov
andnps
mov
inc
push
outs
jo
xchg
mov
inc
jle
aad
inc
imul
daa
outs
pop
push
jne
cmp
cmps
push
push
mov
dec
scas
in
add
imul
addr16
adc
push
push
inc
sub
imul
xchg
inc
iret
repz
and
jmp
pop
gs
cmps
cmps
pop
pop
jl
mov
ficom
movs
fidiv
stos
xchg
fwait
out
fstp
fwait
push
inc
mov
and
fcmovne
mov
mov
xor
movs
retf
enter
loope
and
mov
dec
add
jbe
imul
jne
cwde
in
mov
push
scas
jno
sbb
mov
gs
call
xchg
jno
push
call
xchg
movs
es
mov
pop
push
push
cmp
in
pop
stos
push
mov
pushf
out
pop
add
shl
cmp
jbe
scas
into
dec
stc
mov
xlat
adc
(bad)
xlat
movs
sbb
jae
sub
and
mov
mov
mov
cmp
jb
mov
adc
gs
mov
push
dec
cmp
cwde
mov
mov
lds
test
mov
pop
popf
jae
daa
fs
je
popf
cmp
or
and
movs
push
data16
push
adc
addr16
pop
test
sub
sub
leave
mov
dec
xor
adc
popa
mov
xor
aam
stos
movs
data16
data16
stos
xor
scas
ins
pushf
inc
imul
mov
fisubr
test
jecxz
movs
cmps
and
not
jle
or
cs
xchg
xchg
mov
inc
sbb
xor
shl
xor
leave
test
sahf
out
or
in
push
mov
test
je
rcr
jmp
adc
lods
xor
and
pop
scas
xchg
test
jmp
movs
or
push
les
sbb
je
dec
retf
mov
xor
adc
dec
sub
inc
rol
mov
inc
mov
ss
les
mov
xchg
cmp
and
ds
rcr
daa
cmps
pop
add
les
loopne
or
lods
or
scas
xor
rol
aam
and
addr16
add
push
loope
(bad)
adc
push
clc
movs
fiadd
mov
rcr
push
(bad)
ss
pop
pop
out
js
aad
adc
xchg
push
mov
das
test
jno
xchg
xchg
add
cdq
mov
mov
mov
push
pop
xor
hlt
pop
pop
inc
shr
sub
jns
dec
loope
inc
mov
lea
cmp
push
retf
ss
pusha
sbb
int
sbb
push
lods
pop
out
pushf
outs
push
xchg
les
jl
dec
jmp
inc
cmps
cmc
sbb
push
push
js
lods
xor
sub
push
pop
fwait
push
dec
in
mov
out
mov
movs
sub
push
ins
jmp
pop
fsub
and
std
test
pushf
pop
jmp
jmp
dec
dec
icebp
das
xor
in
mov
mov
mov
addr16
ins
and
(bad)
das
cwde
adc
mov
dec
or
push
out
fcomp
dec
jae
je
pop
jecxz
sbb
daa
clc
mov
mov
aaa
sbb
stos
push
aam
imul
mov
ins
pop
mov
pop
je
sub
or
out
inc
or
loopne
sub
sar
(bad)
lock
lods
iret
dec
shl
cmps
fcom
adc
shr
sbb
or
(bad)
frstor
popf
ds
lahf
cmp
jecxz
pop
retf
enter
stos
jp
xchg
mov
add
sbb
dec
fldenv
mov
daa
aas
js
jb
ret
mov
mov
mov
jp
sar
lods
or
(bad)
inc
sbb
fidivr
ror
cwde
int3
xlat
(bad)
in
sub
cmc
jg
xor
inc
je
mov
pop
mov
stos
jle
push
jne
lods
jmp
pop
mov
dec
adc
xchg
and
inc
pop
mov
cmps
sub
and
les
push
mov
les
mov
test
stos
cmp
mov
inc
inc
aaa
xor
cmps
es
push
sub
rcl
jns
(bad)
repz
mov
ffree
jns
pop
cmp
mov
out
cli
stos
test
jbe
or
aam
add
dec
cmp
stc
inc
jo
retf
sub
xlat
in
jb
in
cmp
les
inc
sub
sti
xor
mov
fadd
xor
jle
scas
cmps
mov
push
pop
les
and
or
retf
stos
xchg
pop
test
adc
aaa
cmp
(bad)
iret
xor
push
dec
push
xchg
xlat
mov
xor
mov
outs
inc
pop
push
pop
stos
div
push
cmp
div
mov
pop
test
movs
add
fidiv
push
and
into
inc
mov
and
or
mov
and
jae
xchg
sub
ret
dec
mov
lds
sub
jge
dec
push
fs
sahf
sahf
jne
add
ficomp
movs
in
adc
iret
popf
mov
mov
sub
inc
mov
push
xchg
adc
retf
jno
lds
imul
dec
cmp
add
xor
xor
mov
sbb
sub
test
shl
add
cmp
cmp
pusha
add
mov
pushf
cmc
fimul
jb
pop
pushf
inc
arpl
fsubr
dec
mov
mov
push
mov
and
bound
and
bound
push
jg
fwait
mov
jmp
jl
out
sub
jg
retf
xchg
push
aad
cmps
xchg
arpl
stc
jg
xor
jle
xchg
push
inc
rol
and
mov
push
jg
ds
stos
mov
cmp
sbb
je
push
and
movs
test
imul
and
hlt
mov
jmp
mov
mov
sub
sub
add
fadd
outs
ins
popf
and
jno
jl
mov
cli
dec
retf
popf
mov
test
shr
aam
lods
sub
push
xor
jb
xor
push
out
(bad)
repz
dec
xchg
aaa
xor
or
jne
mov
mov
mov
sbb
pop
add
mov
mov
mov
xchg
lds
push
ss
mov
push
fwait
add
test
dec
and
enter
and
mov
stos
mov
ret
es
mov
aad
push
mov
mov
xchg
jbe
test
scas
pop
outs
dec
idiv
jp
mov
pop
mov
adc
inc
pop
pop
dec
cld
sub
pusha
add
jno
and
fdivr
mov
and
push
ins
sub
sub
sahf
ror
xchg
xchg
mov
jle
mov
mov
dec
xchg
lods
add
int3
mov
sahf
cmps
add
inc
(bad)
shl
test
sbb
lea
add
xchg
add
mov
lea
jp
int
ins
ficomp
test
push
mov
ja
sub
cli
out
or
mov
cmp
(bad)
dec
adc
mov
out
pop
sub
cs
inc
ret
jns
pop
push
adc
pop
xor
jmp
test
xchg
mov
push
sub
nop
loop
test
pop
test
popa
inc
retf
dec
xor
popa
jmp
(bad)
push
mov
push
and
stos
pop
lds
dec
lods
daa
imul
sbb
aam
xchg
xor
xor
push
inc
ret
and
nop
in
pop
pusha
jmp
mov
mov
movs
jmp
outs
adc
or
lock
arpl
fbstp
cmps
cmc
outs
jns
push
sti
jmp
test
xchg
shl
test
xchg
into
push
out
das
pop
pop
push
aad
pop
jmp
push
leave
jno
retf
loop
movs
push
loopne
shr
mov
ins
sub
test
test
mov
adc
add
add
jl
adc
or
sub
pusha
pop
popa
mov
pop
pop
gs
retf
(bad)
fcomip
xchg
adc
mov
out
(bad)
xor
sub
dec
and
mov
xchg
pusha
xchg
daa
clc
sahf
pop
or
test
xchg
fistp
pop
pop
dec
sub
gs
es
pop
jp
pusha
push
hlt
fcmove
xchg
dec
movs
and
leave
cmp
add
aas
mov
push
xchg
aad
push
mov
adc
retf
push
push
bound
mov
sbb
ret
js
sbb
fsubr
stc
out
rol
jne
icebp
xchg
pop
xor
and
mov
int3
(bad)
jmp
leave
pop
aam
fadd
lds
std
cmp
cmp
sbb
xchg
inc
jge
pop
mov
push
hlt
mov
out
push
push
mov
in
mov
sbb
jl
nop
xor
sbb
xchg
mov
fwait
aaa
push
mov
mov
fwait
outs
and
pop
mov
jl
outs
xor
or
mov
mov
sub
jp
stos
mov
inc
inc
lds
xchg
sub
jno
fsubr
add
jnp
xchg
fisub
xlat
xchg
fild
popf
mov
inc
xchg
sub
cmp
sti
cmps
sbb
dec
repnz
add
cli
(bad)
mov
hlt
cs
mov
aas
into
pop
into
cs
inc
and
pop
into
and
mov
cwde
popf
sub
mov
jnp
sub
pop
and
cmc
push
adc
xchg
mov
jge
ret
or
adc
xor
sbb
stos
and
movs
test
(bad)
dec
cmp
push
hlt
aam
jmp
push
in
add
mov
repnz
aaa
xor
dec
outs
fldenv
xchg
pop
pop
xchg
clc
pop
js
outs
lods
mov
cmc
sub
shr
fs
test
mov
mov
sbb
jge
push
and
mov
push
cmp
pminub
repnz
sub
lods
pushf
jp
cs
ins
ins
or
jb
cwde
cdq
push
sbb
fld
pop
les
rol
fldln2
fadd
or
inc
scas
xchg
xchg
hlt
test
mov
or
retf
xchg
mov
cmp
jne
mov
or
mov
(bad)
adc
jle
inc
jb
lds
movs
push
jmp
test
stos
jecxz
mov
daa
sbb
cmc
les
test
lods
xchg
(bad)
pop
test
xchg
pushf
stos
call
inc
ja
xchg
loopne
mov
ja
or
aam
xchg
inc
js
and
(bad)
push
sbb
loop
and
adc
or
ja
lea
je
aaa
and
ret
inc
mov
push
or
sub
sbb
out
fimul
xor
inc
cmp
and
xor
stos
dec
jnp
inc
outs
push
dec
outs
ret
(bad)
sub
rcr
in
dec
repnz
push
retf
pop
jb
outs
xchg
rol
xchg
push
(bad)
sub
mov
fstp
dec
xchg
shl
ror
mov
stos
loop
and
add
das
in
pop
and
pop
inc
arpl
arpl
sbb
loop
fisttp
bound
ds
push
lea
add
xor
sbb
shr
aam
push
outs
mov
jg
and
pop
mov
mov
adc
rcr
and
add
jb
sbb
movs
les
mov
pop
je
xor
mov
xchg
call
gs
xchg
pushf
pop
cmps
push
pop
loopne
push
jmp
jmp
aam
in
movs
pop
push
aad
pop
outs
out
mov
push
or
imul
xor
cwde
add
in
adc
or
inc
cs
std
push
ror
jle
jne
xor
in
mov
inc
mul
ror
clc
test
out
sbb
rcl
int3
pop
movs
mov
xchg
retf
mov
out
mov
inc
hlt
sub
cs
push
xchg
pop
stos
xor
mov
or
fisubr
cli
dec
dec
(bad)
test
je
sbb
mov
(bad)
movs
fs
daa
pop
data16
lea
fstp
sahf
mov
(bad)
xchg
sub
push
dec
mov
in
push
not
inc
jae
scas
fsub
push
lock
fistp
out
jae
sbb
lock
dec
iret
cs
loop
dec
mov
push
clc
dec
loop
mul
xchg
jge
popf
jg
sub
enter
leave
or
das
cmp
pop
pop
push
jp
es
movs
or
xor
fdivr
imul
mov
add
ret
push
push
mov
loop
test
arpl
das
shr
mov
sti
pop
push
jmp
xor
and
arpl
add
jl
sub
inc
lea
fstp
out
(bad)
out
rcl
pop
movs
dec
mov
xlat
mov
das
or
xor
dec
dec
jecxz
mov
je
dec
push
mov
xchg
push
pop
xor
cld
xchg
and
sub
mov
test
out
in
push
mov
or
mov
pop
and
aad
int3
jno
push
out
ins
je
mov
and
mov
aad
mov
and
popf
std
popa
pop
add
push
dec
and
adc
mov
add
icebp
bound
push
mov
cwde
retf
mov
mov
pop
xchg
shl
xor
push
mov
enter
mov
shl
mov
int3
add
xchg
(bad)
jl
scas
jecxz
fidiv
test
outs
inc
ins
ret
ds
test
add
(bad)
rcl
inc
adc
jg
pop
ds
lds
les
ds
xchg
(bad)
lds
sar
push
cmp
retf
add
scas
push
mov
movs
jnp
and
or
pop
jo
stc
shl
sub
push
xchg
loop
cmp
push
push
mov
in
or
shr
outs
xor
sbb
hlt
mov
mov
mov
jno
mov
arpl
(bad)
out
test
hlt
sbb
ins
fwait
mov
ins
xor
xchg
sbb
jae
or
mov
lods
or
loope
dec
fbld
stc
pushf
mov
scas
dec
movs
xchg
aam
lahf
mov
aas
inc
mov
xchg
add
xor
shr
dec
pop
xor
in
dec
jb
dec
push
(bad)
and
xchg
movs
cmp
xchg
test
out
mov
jmp
enter
mov
pop
sti
out
neg
int
push
xchg
xor
imul
(bad)
xor
jb
cmc
inc
mov
and
stos
push
(bad)
fld
gs
shr
dec
test
dec
add
push
stos
pusha
add
arpl
push
stos
adc
stc
mov
cmp
jg
popf
out
jge
data16
pop
mov
and
ss
repz
repz
(bad)
or
pushf
dec
or
(bad)
add
jmp
adc
cmps
cmp
test
pop
mov
lods
clc
xor
dec
cs
cmp
out
cmps
(bad)
cmps
lods
jnp
out
test
dec
mov
mov
inc
inc
sub
es
xchg
jmp
sub
fidiv
adc
inc
aad
mov
das
ffree
sub
out
std
(bad)
rep
and
in
icebp
mov
xchg
inc
cmp
les
dec
xchg
xchg
or
xor
into
inc
pop
xor
cmp
add
(bad)
mov
lahf
xchg
inc
enter
push
(bad)
sbb
pop
sbb
xchg
push
nop
cmp
adc
fiadd
jecxz
pop
mov
and
pop
cld
mov
push
popf
lods
stos
test
aaa
and
add
xchg
inc
lods
das
mov
jno
and
sti
xor
inc
retf
daa
push
call
inc
in
inc
icebp
pop
(bad)
loop
ss
lahf
loopne
add
jnp
fucomi
xchg
push
push
retf
xchg
inc
inc
sbb
imul
push
lods
xchg
sbb
sub
lods
sbb
aad
xor
out
xchg
mov
push
mov
mov
cmps
sub
pop
imul
sub
cs
or
mov
aas
pop
jp
cli
jg
cmp
xchg
pushf
jecxz
out
cld
int3
div
xchg
addr16
movs
mov
push
mov
mov
adc
adc
neg
pop
xchg
scas
imul
xor
dec
call
or
fwait
inc
mov
push
mov
jno
xchg
and
stos
mov
repz
stos
xchg
call
les
rcl
jne
scas
inc
push
mov
jns
jnp
test
fild
mov
out
(bad)
out
pop
out
xchg
cwde
sbb
sub
xor
adc
scas
(bad)
arpl
jns
imul
(bad)
imul
push
sub
jp
jb
sub
(bad)
scas
cmp
xchg
(bad)
push
fwait
mov
push
dec
bound
ins
sub
test
sub
pop
jge
fst
cdq
xchg
test
push
xchg
dec
mov
push
lods
mov
jmp
ret
pop
movs
ins
mov
sub
mov
sub
sbb
push
push
(bad)
jo
push
test
mov
ror
adc
cwde
loopne
dec
pop
(bad)
retf
pop
jg
out
retf
rol
xor
in
or
leave
fsubr
std
(bad)
arpl
jno
sub
mov
fs
out
or
aaa
shr
jl
in
xor
mov
ins
add
fs
xor
loop
jno
shl
jb
fst
pop
push
and
or
add
xchg
or
test
nop
or
lds
push
and
outs
mov
addr16
mov
dec
lea
clc
cmp
pusha
cmc
sbb
gs
int
iret
mov
sub
sbb
loope
pop
movups
fstp
hlt
mov
fdivr
sub
aad
add
jecxz
jbe
jae
mov
(bad)
xchg
push
cld
pop
retf
cmps
enter
adc
or
adc
jbe
push
adc
jge
jne
rcl
aaa
sub
adc
jne
add
mov
lds
cmps
bound
ret
test
bound
call
push
in
push
movs
xor
sub
sar
push
pop
and
lock
xor
into
mulps
lahf
mov
test
or
lods
fstp
inc
rcr
or
stos
sub
inc
jecxz
and
loop
shl
jl
addr16
cmp
mov
js
mov
mov
mov
dec
lods
jmp
dec
cld
dec
pop
mov
sbb
mov
dec
cmp
arpl
pop
daa
shl
dec
test
sub
add
das
sub
icebp
add
cmp
aad
imul
test
mov
fcom
rcl
fadd
jp
inc
pop
loop
mov
jl
ja
jae
(bad)
mov
in
inc
fdivr
ins
ds
inc
cmps
retf
shr
in
rol
pushf
mov
nop
nop
xchg
ss
cmp
and
mov
dec
dec
aam
jae
dec
mov
push
loope
add
cld
repnz
inc
mov
xchg
aaa
inc
sahf
or
mov
dec
jo
std
xlat
adc
mov
rol
push
xchg
les
lahf
aaa
jp
ret
pop
adc
sbb
pop
dec
jmp
fstp
xchg
imul
xor
aam
jb
sub
sbb
fisttp
rol
retf
sbb
dec
mov
fisubr
xchg
loope
(bad)
call
adc
jnp
loopne
add
(bad)
mov
xchg
test
int3
mov
lods
push
movs
mov
dec
xchg
in
inc
pop
xchg
push
repnz
(bad)
push
push
into
aaa
aad
sahf
push
out
xchg
xchg
in
sub
lock
aad
loopne
jg
std
outs
jne
mov
scas
xchg
sahf
cmp
inc
stos
and
fwait
leave
sti
jg
xchg
mov
jecxz
imul
and
lea
sbb
sbb
mov
ins
dec
std
std
imul
test
inc
mov
stos
aad
push
add
push
cmps
push
mov
add
test
dec
jp
scas
fdiv
imul
les
loop
js
scas
mov
clc
push
rcr
imul
pop
inc
mov
cmp
xor
or
sub
test
scas
(bad)
pusha
lock
sub
in
mov
pop
mov
out
les
cmc
repnz
scas
or
loop
loop
(bad)
cs
dec
shr
or
mov
dec
test
xor
cwde
push
dec
fmul
mov
pop
ror
pop
out
adc
repz
ja
cmc
movs
cli
jmp
sub
push
stos
xchg
pop
je
mov
adc
jp
repz
inc
xchg
jl
js
mov
pushf
dec
call
dec
rcr
mov
in
cdq
gs
sub
test
ficomp
mov
les
mov
aas
daa
sar
cdq
fwait
adc
xchg
mov
cmps
les
mov
test
ja
mov
push
jno
mov
xchg
cmp
cmp
dec
and
cs
sub
enter
add
retf
adc
xor
scas
pop
mov
jo
retf
arpl
out
repnz
ja
mov
jo
push
mov
mov
lahf
jo
mov
stc
dec
push
jp
xchg
lahf
sub
clc
push
loop
mov
clc
add
adc
or
loop
sahf
xchg
(bad)
out
jno
aad
cdq
dec
ret
mov
data16
inc
fst
in
sub
jmp
fs
aad
into
dec
repnz
loope
dec
clc
mov
mov
mov
loopne
pop
or
fistp
nop
xchg
inc
fbld
sbb
jne
loope
xor
and
mov
or
bound
clc
jge
test
mov
inc
sbb
fistp
(bad)
(bad)
(bad)
add
sbb
inc
jno
sbb
dec
nop
or
loopne
les
mov
lea
icebp
or
je
(bad)
test
or
cld
inc
dec
xor
mov
in
mov
imul
pop
das
add
shl
pusha
jle
call
test
push
push
jno
adc
enter
adc
sbb
(bad)
jno
sub
xor
pop
cli
pushf
inc
imul
dec
gs
sub
sbb
jl
mov
or
mov
cmps
xchg
ss
ret
pop
loopne
cwde
or
les
fs
pop
push
fdivr
pop
push
adc
bound
(bad)
push
iret
js
mov
add
pop
aam
inc
or
hlt
mov
mov
cmc
gs
scas
push
neg
fdiv
mov
pushf
popa
mov
rcr
bound
mov
adc
ror
sbb
sbb
pop
dec
cli
iret
out
jl
jb
jle
xor
div
outs
outs
mov
scas
xchg
lods
dec
jno
xchg
sub
inc
aam
mov
das
jnp
cld
adc
pushf
dec
fadd
daa
or
cwde
test
in
cmp
xor
dec
and
sub
add
inc
dec
xchg
cmp
add
adc
sbb
inc
dec
retf
lods
xor
fcom
push
mov
loopne
fs
lahf
mov
adc
in
cwde
sbb
pop
sub
xor
sbb
out
(bad)
cld
cld
out
aad
push
mov
cmps
or
xchg
jmp
repnz
pop
pop
sub
sub
(bad)
cld
aas
(bad)
cmp
jne
movs
pop
les
scas
mov
inc
add
test
jnp
inc
mov
jne
(bad)
dec
pushf
jp
loop
cmps
ret
mov
cmps
mov
jne
sahf
jecxz
lea
sbb
push
loop
test
pop
mov
(bad)
mov
xor
xor
aad
pop
jp
jb
inc
addr16
stc
sub
test
push
xor
sub
sub
(bad)
xor
cmp
fcmovnbe
pop
ss
clc
cmc
lods
loop
dec
not
ret
sbb
shl
and
je
cmp
pop
fs
movs
fs
pop
xchg
push
movs
sub
xchg
dec
and
cdq
lods
fsub
cmp
and
dec
aas
jb
cmp
push
outs
pop
dec
call
jg
sub
mov
xor
xchg
push
adc
je
inc
and
mov
push
pop
inc
lahf
dec
xchg
jb
jle
ficom
fldcw
dec
jno
mov
nop
dec
stc
inc
stos
fwait
xchg
mov
rcr
(bad)
out
add
rcr
sbb
rcl
pop
push
xchg
cmp
in
sub
(bad)
dec
sub
push
ret
scas
push
ror
repz
stos
lods
sub
jl
mul
or
cmps
cld
dec
jne
leave
jle
xor
push
cmps
fwait
sub
mov
push
ret
daa
enter
cmc
retf
lods
push
jo
lahf
cmp
push
push
xor
ret
scas
push
cwde
out
rol
cmp
push
dec
mov
dec
sub
loop
arpl
and
gs
xor
mov
xor
enter
push
mov
adc
call
cdq
sub
jbe
dec
adc
or
mov
xchg
clc
lea
pop
sub
mov
adc
pop
push
nop
inc
cld
fs
or
sbb
cmp
push
outs
imul
xor
daa
in
sbb
enter
imul
jb
jle
pop
jbe
jnp
adc
sub
pushf
test
fs
or
in
push
sub
and
or
dec
pop
rol
aas
push
or
xabort
shl
ins
mov
add
loope
dec
mov
cmp
mov
add
test
xchg
push
push
mov
xchg
mov
fwait
ja
mov
adc
cs
leave
ss
ret
fistp
dec
mul
mov
pop
pop
add
in
ins
sub
xchg
and
or
je
mov
inc
xchg
mov
lds
stos
cmp
jae
imul
in
push
xchg
ss
dec
sub
in
lds
fidiv
pop
div
mov
push
jg
test
push
cmp
cmp
inc
out
movs
imul
sbb
into
cmp
xor
pop
shr
sti
pop
stos
imul
dec
mov
adc
and
mov
adc
mov
jg
imul
and
or
scas
xchg
mov
nop
xor
cmp
mov
push
push
adc
add
ins
ja
fisub
jne
bound
fwait
retf
fdiv
retf
jmp
rcr
pusha
test
icebp
xchg
dec
sub
cmp
scas
push
movs
mov
lock
adc
popa
and
dec
xchg
xor
xchg
cwde
or
test
xchg
jo
sahf
mov
mov
mov
jge
mov
cmp
dec
fild
lea
dec
add
sar
sub
jmp
and
xchg
mov
or
aaa
gs
cmps
pop
mov
gs
jmp
dec
test
push
jp
pop
addr16
xchg
repnz
jo
mov
cmp
(bad)
call
enter
inc
lods
dec
test
stos
xor
xchg
pop
mov
mov
bound
inc
cmp
xchg
push
rcl
pop
jns
mov
sub
hlt
jbe
sbb
in
xchg
out
pushf
cli
adc
mov
cmps
inc
cmp
xchg
cwde
add
out
adc
mov
ror
xchg
ds
and
push
mov
sub
inc
push
pop
mov
pushf
push
in
push
fidiv
popf
icebp
pop
test
sbb
sub
push
cmp
xor
ret
test
pop
pop
aad
sbb
push
out
pusha
out
(bad)
cmps
lods
addr16
mov
push
mov
push
pop
dec
cwde
xchg
ins
jp
das
xchg
jmp
cdq
pop
cs
pop
(bad)
stmxcsr
push
(bad)
stos
sub
lods
jnp
(bad)
push
stos
ja
dec
xchg
pop
or
movs
pop
ror
test
mov
push
loop
mov
xor
and
sub
scas
(bad)
jecxz
leave
les
fisubr
cs
jmp
sub
push
int3
(bad)
pushf
jmp
not
mov
jb
int
call
punpckhdq
xor
xchg
or
push
jmp
lock
sahf
mov
dec
jb
adc
adc
push
adc
inc
push
movs
stos
shl
sub
movs
dec
lea
xchg
leave
aaa
cs
les
inc
push
fmulp
scas
push
cmp
cmps
mov
jmp
xor
stos
nop
pop
cmp
pushf
cli
pop
pop
rol
dec
jae
cdq
push
test
inc
sbb
lea
scas
xor
mov
call
sub
mov
xchg
cmp
cmp
movs
loop
addr16
in
inc
dec
lods
fnstsw
lods
jmp
ja
stos
xchg
nop
cmc
inc
pop
cmps
retf
dec
mov
in
xchg
mov
cmc
mov
mov
popf
pop
shr
lea
cmp
test
sbb
xor
into
push
cmc
mov
loopne
idiv
xor
cdq
lds
test
pop
jle
ins
fldenv
pop
jb
push
xchg
fist
sub
(bad)
rcr
out
xchg
dec
loope
int
lock
mov
mov
or
push
jmp
or
pop
add
xor
cmps
ficomp
cmp
inc
pop
sbb
fist
hlt
lods
ret
pop
retf
fdiv
cmp
scas
aas
adc
out
ss
dec
test
inc
imul
and
sub
fwait
aam
and
add
int
test
mov
gs
mov
jle
cmp
shl
mov
xchg
sub
pop
xchg
popf
addr16
adc
mov
bound
std
loop
and
xor
sbb
mov
pop
sbb
jmp
jle
cmps
inc
lods
leave
cs
cmps
dec
call
dec
out
cmp
adc
les
push
xchg
aam
in
rcl
loope
mov
mov
xchg
fisttp
test
into
cmp
pop
pop
iret
dec
push
mov
rcl
out
pop
dec
jb
dec
inc
mov
push
dec
movs
lods
mov
cli
pop
dec
pop
mov
call
std
pop
mov
xlat
iret
xchg
push
and
or
pop
mov
arpl
popf
es
nop
jp
shl
fdiv
adc
xchg
test
mov
ss
sahf
(bad)
(bad)
sbb
cmps
mov
cwde
imul
stos
mov
push
xchg
mov
sub
rol
dec
fistp
out
pop
fisttp
dec
push
test
fsincos
mov
iret
xor
popf
sub
(bad)
xchg
int
mov
sub
in
cmp
jo
sar
pop
lods
dec
mov
movs
cdq
leave
xchg
push
outs
pop
cmp
jp
push
jg
outs
xchg
and
iret
fisub
dec
xchg
and
fdivr
jo
cmps
mov
ds
jge
mov
aam
xchg
stos
or
cmp
mov
xchg
jno
dec
test
or
sti
in
dec
cmps
loop
pop
inc
and
test
pop
jp
adc
sub
cmps
ret
pop
xchg
jne
stos
xchg
test
mov
sbb
int3
dec
lods
push
adc
inc
call
sub
dec
push
dec
and
popf
dec
rcr
jmp
pop
fs
mov
jns
mov
std
sahf
enter
xchg
or
mov
fs
jns
dec
push
and
dec
dec
rol
sub
mov
push
xchg
mov
pop
fnstcw
lahf
mov
rep
ss
loopne
mov
cdq
movs
test
xchg
imul
adc
and
hlt
sub
cmp
push
inc
sbb
in
add
ss
pop
jno
mov
mov
adc
ss
jge
mov
adc
sbb
fdivr
mov
or
fwait
gs
mov
cld
mov
test
iret
jge
mov
push
mov
dec
movs
pushf
push
mov
sub
inc
cmp
pushf
pop
or
sbb
pop
ja
xor
ret
push
sahf
lahf
mov
sub
pop
cmp
pop
or
mov
cmps
pop
(bad)
fstp
cmp
mov
dec
cld
push
xchg
sub
sub
mov
jnp
pop
sti
mov
cmp
hlt
(bad)
lahf
inc
dec
lea
imul
pop
lods
xor
imul
dec
stos
xchg
cmps
ja
jmp
push
mov
jae
pop
xchg
mov
fist
dec
outs
adc
pop
mov
idiv
scas
(bad)
test
in
jl
mov
outs
dec
cmp
daa
jnp
hlt
push
dec
ficom
out
cmc
inc
cld
mov
or
std
rol
xchg
pop
xchg
addr16
pop
jmp
sub
call
daa
xor
push
lea
jecxz
arpl
adc
inc
mov
xchg
sti
dec
jne
or
xor
int
mov
gs
pop
mov
in
xchg
and
jno
mov
dec
rcl
mov
mov
test
cmp
or
sub
pop
imul
fsub
cmp
and
lock
push
aad
hlt
std
jmp
mov
retf
dec
into
xor
xchg
dec
sub
sbb
int3
lods
mov
adc
jno
sbb
mov
push
je
xor
dec
mov
cmps
mov
lock
repnz
leave
ss
pusha
mov
xor
pop
sub
stos
daa
movs
cmp
in
mov
inc
pop
outs
movs
xor
fucomi
movs
mov
pop
jae
mov
mov
out
rol
jp
cmp
sbb
pop
in
popf
sub
push
pushf
jae
scas
push
bound
jl
in
pop
das
cmp
loope
dec
out
jno
and
cs
popf
cmp
in
inc
jo
ss
push
sahf
test
mov
add
inc
push
dec
jecxz
stc
xor
jae
test
retf
jb
pop
into
mov
cmovg
dec
cmp
enter
repnz
jnp
push
sub
movs
dec
scas
outs
bound
das
jb
push
lock
jp
fwait
int3
mov
nop
push
lods
mov
aaa
and
das
jmp
ror
dec
shl
adc
sub
push
xchg
imul
test
mov
mov
outs
mov
xrelease
scas
adc
lahf
dec
pop
ja
push
mov
fs
mov
out
sub
lods
retf
push
pop
or
pop
ret
mov
adc
push
(bad)
and
xchg
in
(bad)
pop
sub
pop
daa
sub
outs
(bad)
sti
fwait
in
dec
movs
movs
repnz
or
in
xor
pop
cdq
mov
gs
adc
pop
dec
adc
pop
shl
jecxz
movs
inc
cwde
imul
ret
dec
loope
arpl
inc
loope
enter
add
mov
test
inc
in
mov
nop
sub
dec
adc
daa
pop
cmp
mov
enter
push
adc
pop
fimul
push
clc
(bad)
mov
push
(bad)
xlat
dec
popf
push
cmps
xor
(bad)
pop
cmps
into
and
sbb
out
out
repnz
(bad)
dec
xchg
dec
push
ret
mov
cdq
lea
pop
aam
inc
js
imul
icebp
jno
jbe
push
xor
inc
fsubr
mov
mov
add
dec
push
mov
int
mov
or
(bad)
sub
cmp
dec
mov
ss
inc
fcmovnb
jle
jmp
std
test
or
stos
cli
xchg
(bad)
cs
cmps
mov
popf
(bad)
xchg
adc
dec
mov
out
nop
xchg
cmps
jb
aam
mov
jge
mov
ret
test
inc
xchg
aaa
jne
addr16
pop
fucomip
sbb
movs
out
and
jp
int
cmp
imul
inc
push
out
mov
lea
cmp
xchg
clc
jne
test
dec
lods
enter
jne
fdivr
pushf
addr16
das
add
mov
sub
adc
jecxz
loopne
imul
or
mov
ds
aaa
mov
clc
mov
mov
loop
dec
addr16
in
push
xchg
pop
pop
mov
xchg
lods
loope
sub
test
xchg
xor
sub
jns
add
dec
jp
xchg
ds
scas
xchg
cmp
inc
sbb
cmp
push
ror
adc
push
jns
sbb
ins
fist
pop
out
je
push
xor
push
mov
or
mov
mov
add
int3
jo
xor
dec
int3
in
loope
inc
adc
push
mov
popf
mov
and
mov
adc
addr16
push
inc
jge
std
dec
out
das
les
push
pop
(bad)
js
loop
loop
pop
icebp
push
jge
arpl
xchg
or
test
xor
mov
sub
sub
jns
sbb
shr
es
in
idiv
test
std
dec
or
inc
dec
dec
push
pop
pop
retf
ret
sti
js
jb
aad
cmp
leave
fimul
lahf
xlat
fmul
jae
(bad)
push
sub
jmp
fwait
stos
aam
(bad)
dec
sbb
cmps
xchg
imul
fstp
int3
and
push
and
mov
push
push
cwde
arpl
jp
in
jle
and
mov
or
repz
nop
xchg
outs
inc
dec
pop
cmps
pop
movs
mov
sub
adc
xchg
lea
add
repnz
cmc
addr16
and
add
mov
mov
inc
sbb
pop
jb
cmp
ins
sbb
inc
adc
xor
and
or
cwde
loop
call
pop
dec
cmp
dec
lods
xchg
add
dec
push
pop
xor
adc
pop
(bad)
call
adc
std
pop
jle
sub
jne
jmp
fs
or
ja
xchg
jbe
(bad)
adc
pop
mov
sahf
push
and
lea
imul
sbb
pop
(bad)
jmp
cld
jg
xor
push
dec
inc
cs
mov
cmp
loopne
rcl
cmps
sbb
sub
sub
out
dec
dec
test
icebp
leave
(bad)
(bad)
out
adc
jnp
inc
mov
xchg
je
inc
rcr
iret
jb
push
aaa
ret
call
xor
jbe
ret
or
fwait
cmps
enter
or
jecxz
or
stc
inc
sub
sbb
xchg
jno
movs
dec
cwde
fdivr
cmp
ds
shr
pop
add
in
xchg
sbb
(bad)
xchg
or
test
push
mov
cmp
sbb
xor
and
ret
push
popf
mov
and
ret
iret
cmp
mov
and
cmp
push
ja
xchg
mov
and
div
xchg
in
adc
pop
mov
pusha
dec
(bad)
cmps
jmp
and
jmp
cs
cmp
jo
movs
test
pop
pop
push
mov
push
adc
xchg
mov
ret
in
or
fld
dec
add
or
mov
adc
or
or
pusha
push
inc
mov
mov
mov
mov
mov
sbb
leave
or
pushf
and
pop
icebp
sbb
adc
shr
in
pop
in
cmp
mov
adc
test
rol
cld
ret
addr16
js
add
pop
jno
fwait
call
push
(bad)
mov
sar
aaa
adc
and
dec
movs
push
pushf
es
shl
jl
cmp
and
fs
mov
dec
mov
mov
or
mov
imul
cmps
mov
and
dec
or
and
mov
xchg
ficom
in
inc
out
pop
pop
pop
pop
mov
or
and
and
shr
xor
or
inc
mov
jb
jp
lods
mov
sbb
xchg
jno
cli
lds
cwde
(bad)
cmps
dec
mov
sbb
jle
addr16
out
and
outs
scas
test
push
aam
cmp
popf
adc
sub
aad
xchg
jb
inc
push
movaps
jb
push
iret
frstor
sbb
shl
ja
ret
(bad)
push
addr16
shl
ret
loope
mov
or
rcl
cmp
pop
xchg
(bad)
mov
ins
ret
outs
int
data16
les
xchg
ret
in
jecxz
int3
fidivr
fimul
adc
call
(bad)
lea
(bad)
or
xchg
dec
shr
xchg
cmp
not
adc
popaw
mov
pop
jne
push
cli
inc
push
jo
dec
dec
or
imul
jmp
(bad)
dec
and
xchg
sbb
mov
(bad)
and
push
mov
mov
push
mov
sbb
hlt
xchg
outs
push
pop
pop
mov
mov
sbb
xchg
push
sub
and
push
adc
inc
mov
xor
pop
lds
xor
dec
test
in
dec
mov
inc
mov
xor
add
leave
jmp
mov
mov
and
jno
add
dec
fldcw
dec
cdq
daa
sub
movs
call
es
mov
addr16
shl
pop
sbb
pop
mov
adc
mov
mov
xor
cwde
fmul
jne
cmp
push
leave
enter
es
lods
pop
fadd
cs
loopne
mov
add
shr
ja
stos
xchg
or
(bad)
call
arpl
push
cmps
fucom
jl
in
pushf
loop
arpl
mov
mov
or
adc
in
push
xchg
or
adc
cmp
pop
cmp
sub
in
cmps
lods
pop
out
or
cwde
add
mov
mov
aad
pop
mov
sub
scas
mov
add
movs
and
movs
xchg
jg
loope
int3
test
pushf
dec
(bad)
fidivr
in
sahf
push
aad
push
mov
test
mov
pop
mov
sbb
fwait
xchg
js
xchg
pop
jmp
arpl
fcom
mov
outs
mov
test
cli
adc
repz
inc
adc
jb
jae
test
scas
pop
and
sub
add
mov
mov
mov
retf
adc
arpl
cli
daa
arpl
sbb
ret
mov
sar
push
push
enter
outs
xchg
ss
aam
or
test
push
or
mov
mov
jno
push
jb
cmp
inc
pushf
adc
xchg
in
sbb
movs
sub
add
ror
mov
pop
js
(bad)
and
test
dec
lods
cdq
xchg
pop
mov
mov
mov
push
jns
fbld
pop
imul
stos
test
mov
ja
mov
test
xor
or
push
and
add
add
popa
popf
inc
jb
or
stc
cmp
cmp
retf
mov
mov
mov
or
test
test
cli
push
sbb
push
sub
mov
xchg
fiadd
popf
icebp
fiadd
sub
mov
clc
arpl
push
push
jmp
or
and
jo
jecxz
adc
rcl
inc
inc
push
pop
pop
lock
aam
fistp
and
inc
mov
aas
sub
xchg
dec
ins
push
popa
pushf
cld
jnp
push
adc
loopne
ds
rcr
sbb
nop
jo
iret
rol
sub
push
enter
inc
mov
scas
call
dec
jbe
movs
arpl
jb
fwait
jns
inc
retf
jb
arpl
ret
inc
cs
dec
int3
lea
stos
push
push
inc
or
lods
xor
dec
test
and
je
neg
sub
popa
shr
pushf
push
cwde
test
jns
cdq
pop
clc
data16
jae
and
in
test
mov
and
mov
pop
pop
pop
xor
pop
push
xor
mov
ret
dec
dec
mov
pusha
imul
jp
scas
xchg
(bad)
pop
cmp
outs
jp
xchg
push
and
mov
ins
dec
test
mov
cmc
fst
cmps
pop
fisubr
vpand
xchg
xchg
fstp
test
jne
hlt
mov
arpl
js
retf
fs
bound
xor
cwde
ja
pushf
push
into
je
mov
pop
(bad)
cmc
test
int3
repz
and
push
sub
es
cmp
or
lahf
jno
jle
int3
adc
imul
xchg
sbb
push
aam
outs
sbb
push
dec
pop
aad
ins
dec
aad
push
loopne
adc
xor
fadd
dec
mov
test
jmp
adc
movs
loopne
mov
inc
adc
stos
test
adc
or
inc
ret
jmp
adc
push
mov
pushf
(bad)
ret
and
mov
fwait
mov
call
dec
push
in
je
aam
lods
add
add
retf
scas
sub
and
iret
(bad)
scas
pop
retf
leave
scas
lea
ins
dec
and
fcmove
rcr
repz
sub
push
lods
fmul
lea
fcmovnbe
cld
mov
push
nop
mov
adc
stos
jne
mov
retf
test
lods
adc
mov
dec
lahf
jg
jmp
jle
xchg
rcl
mov
mov
stc
dec
js
(bad)
int
mov
jp
in
scas
jae
ret
sbb
mov
pop
je
xlat
sbb
mov
js
jbe
xchg
mov
es
xchg
mov
inc
div
fs
jmp
mov
not
lahf
inc
popa
adc
push
adc
dec
sub
aad
mov
push
loopne
mov
add
xor
jp
mov
mov
xchg
cld
stos
cmps
dec
test
es
imul
adc
movs
fs
test
cld
ins
mov
adc
jnp
mov
mov
paddsw
cmp
mov
push
ret
pop
mov
nop
(bad)
imul
xchg
sub
inc
mov
xor
mov
cli
call
repnz
push
in
push
ret
das
mov
in
std
pop
cli
add
mov
mov
test
and
fucom
jmp
idiv
jb
adc
xor
loope
sbb
add
cmps
push
outs
cmp
aaa
shl
sbb
sub
mov
lods
mov
mov
adc
pusha
sbb
das
aam
mov
pop
(bad)
das
sub
test
push
and
xor
aam
movs
push
mov
ss
mov
pushf
(bad)
pop
mov
jl
aam
ret
inc
sbb
cs
xchg
jl
sub
clc
or
pop
xchg
inc
push
in
pop
int
inc
popf
ins
add
cmp
sub
loope
pop
sub
retf
inc
(bad)
jbe
jmp
xchg
ins
retf
cmp
cmp
aas
dec
cmc
mov
jle
mov
int3
shl
dec
cmc
xor
and
mov
push
jecxz
jns
outs
xor
test
pop
sbb
xlat
sbb
push
and
aaa
outs
sar
scas
mov
and
xlat
aaa
cmp
and
push
fst
leave
sub
sub
push
and
inc
pop
and
imul
int
outs
inc
sub
xor
icebp
loop
xor
xor
jmp
loop
mov
call
imul
outs
in
mov
cmc
mov
xlat
cmp
push
mov
xchg
ins
test
(bad)
scas
dec
jmp
out
fstp
mov
(bad)
mov
xchg
push
outs
pusha
into
mov
dec
shl
pop
inc
cwde
mov
test
inc
push
xchg
aad
pop
repz
out
fsubr
imul
aas
jno
cld
cmp
cmp
cmp
sar
lods
jmp
lods
xor
mov
data16
stc
mov
cmp
cmps
xor
xor
stos
jl
mov
or
lods
outs
jge
inc
arpl
jbe
and
dec
pop
in
cmp
(bad)
iret
sbb
mov
sbb
push
xchg
out
daa
scas
xor
mov
jb
xor
out
and
mov
xchg
(bad)
pop
dec
jbe
mov
push
es
leave
cmp
adc
or
adc
or
imul
mov
addr16
cdq
test
outs
mov
dec
lods
cmc
(bad)
jmp
lods
inc
sahf
push
out
je
add
dec
test
in
xchg
repnz
or
jne
sub
pop
sub
jp
imul
inc
pop
out
sti
dec
enter
retf
inc
xchg
mov
sub
lahf
jne
push
mov
mov
mov
test
outs
mov
fnstsw
sbb
inc
xchg
push
xor
push
leave
push
cli
ret
popa
aam
push
in
mov
pop
sbb
retf
adc
popf
inc
outs
cmp
fimul
scas
popa
xchg
shl
dec
sbb
push
(bad)
sbb
fisubr
jnp
mov
jp
push
mov
lea
ds
in
sahf
in
inc
xchg
std
daa
or
cdq
jl
cwde
xchg
inc
sbb
adc
fucomp
push
jbe
mov
pop
xchg
inc
js
pop
movs
push
jmp
mov
in
lahf
stos
ss
and
(bad)
mov
cmps
mov
dec
test
mul
fisttp
push
cmp
or
out
or
pushf
gs
outs
adc
data16
pushf
push
pop
xor
push
or
inc
cli
dec
mov
xchg
cmp
cmp
adc
mov
inc
mov
push
push
test
and
push
test
push
xchg
sub
add
fisub
jg
mov
call
fld
adc
in
movs
and
mov
push
sti
scas
adc
xchg
in
sahf
pop
stos
inc
adc
xchg
neg
mov
lahf
mov
hlt
dec
lahf
mov
and
inc
arpl
sbb
fld
mov
or
bound
push
in
jle
inc
dec
and
sub
adc
clc
(bad)
in
pop
out
xor
cs
sub
addr16
ins
push
int3
jmp
ds
and
div
out
xor
je
push
sti
cs
mov
mov
aad
adc
xor
mov
outs
or
pop
cmp
rcr
je
dec
mov
sbb
push
jmp
mov
in
adc
jmp
xchg
lods
adc
loop
bound
stos
sar
popa
aaa
cmp
and
or
xchg
xchg
aaa
cwde
leave
pop
dec
pushf
sbb
fsubr
cld
shr
es
jb
fisttp
or
inc
shl
fwait
cmps
(bad)
add
jmp
xor
mov
dec
enter
leave
mov
xchg
xchg
mov
ins
arpl
ficomp
sub
inc
test
xchg
push
pusha
mov
mov
cmc
mov
or
push
mov
push
ja
inc
sbb
xchg
cmp
test
cmps
(bad)
pushf
xchg
sub
jbe
sahf
or
bound
fld
cmps
into
push
push
pop
mov
ins
cmp
movs
outs
lods
pop
push
mov
inc
(bad)
xchg
xchg
stos
into
retf
xchg
or
test
jb
stos
adc
push
mov
imul
leave
cmps
push
aaa
arpl
and
sub
aam
inc
jg
ins
scas
or
inc
pop
jns
push
(bad)
loop
push
adc
mov
fimul
jge
ret
adc
push
popf
cmp
arpl
cmps
cmp
sti
retf
and
add
sbb
push
mov
fsubr
test
retf
jbe
gs
inc
add
popf
jo
aas
cmp
and
les
jne
call
adc
cmp
(bad)
xchg
out
push
jge
xchg
popf
das
xchg
test
iret
mov
and
adc
xchg
sub
cs
push
xchg
movs
inc
aas
test
lods
mov
fdivr
(bad)
cmp
or
(bad)
neg
sub
push
test
jecxz
data16
pusha
mov
xchg
mov
push
pushf
cwde
push
mov
lds
imul
ins
outs
jp
fnstsw
mov
add
scas
cli
ret
mov
and
sub
mov
mov
(bad)
out
or
pop
push
dec
ja
cmc
adc
scas
jno
loop
out
imul
xor
cmp
cmp
pop
push
adc
mov
pop
ret
ss
test
cmp
int
mov
inc
push
xchg
or
push
push
movs
adc
fidiv
sub
and
test
push
push
aas
out
shld
scas
pop
xchg
mov
sub
fnsave
fisubr
int
push
cmp
fidiv
loop
xlat
loope
pop
or
mov
fcom
xchg
sub
pop
data16
cmp
mov
loop
sub
xor
xchg
call
js
fnsave
mov
into
jb
(bad)
adc
dec
xchg
loop
popa
sbb
add
dec
sbb
(bad)
sbb
outs
stos
xchg
das
aam
cli
scas
and
xchg
xor
test
sbb
pushf
mov
jmp
dec
scas
lds
mov
cmc
push
ins
je
repnz
xchg
loope
fndisi(8087
inc
movs
pop
aam
ffree
stos
aaa
in
movs
dec
mov
aam
gs
pop
dec
inc
push
cli
inc
test
push
pop
ins
adc
mov
cwde
mov
xchg
mov
cmp
fdivrp
les
jg
retf
inc
aam
xor
or
dec
jne
popf
and
dec
push
sub
rcr
neg
outs
(bad)
cmp
xchg
nop
sar
xchg
out
in
adc
neg
add
and
dec
sub
jg
into
mov
push
push
mov
in
jmp
data16
xchg
rol
repnz
rcr
pop
inc
test
sub
jecxz
inc
je
jle
jg
mov
inc
sar
inc
mov
ror
add
ins
scas
pop
lahf
cld
inc
stos
push
scas
daa
lds
ds
inc
sar
inc
mov
rcl
rcr
pop
movs
or
jl
cli
sar
add
cmps
push
lock
xchg
jl
clc
xor
icebp
sub
test
inc
ror
imul
and
mov
retf
inc
je
mov
(bad)
out
adc
ror
test
jo
jge
mov
neg
and
dec
jo
jns
gs
inc
lods
pop
cmp
mov
pop
mov
fcmovu
lahf
ins
call
jmp
cmp
or
mov
and
sub
add
adc
adc
ja
xchg
dec
fwait
repz
clc
js
jae
dec
rcr
fist
inc
sbb
push
icebp
sbb
pop
pop
nop
imul
sbb
in
xor
fmul
mov
dec
mov
xchg
inc
pop
test
dec
add
outs
push
mov
in
cld
(bad)
jecxz
daa
sbb
pop
jne
js
rol
shr
sub
dec
dec
mov
fsub
mov
pop
mov
mov
push
ss
xchg
cmps
out
inc
push
mov
aas
(bad)
gs
and
adc
sbb
push
pop
pop
dec
retf
leave
js
sahf
das
jbe
pop
sbb
or
js
jo
cmps
mov
sub
shr
xchg
dec
dec
push
sub
and
(bad)
mov
push
leave
dec
dec
add
repz
xor
xchg
cmps
sbb
sub
mov
pop
icebp
jecxz
ret
push
push
push
push
mov
aas
jmp
or
sbb
adc
stc
(bad)
jl
retf
jmp
std
dec
lahf
cmps
push
lock
mov
aas
sti
test
jg
dec
iret
jg
dec
out
lods
inc
fimul
lahf
cmp
leave
loop
loop
mov
cmps
stos
cmp
push
scas
xchg
pop
ins
pop
push
inc
cmc
addr16
daa
pop
xchg
cwde
imul
rcl
outs
retf
cs
mov
nop
add
dec
outs
shl
pushf
mov
imul
mov
jne
(bad)
popf
cmp
jmp
jecxz
cmps
ficomp
sub
mov
adc
sbb
test
mov
mov
add
or
adc
push
or
(bad)
mov
scas
and
jge
jmp
xor
into
sahf
stos
sub
jnp
mov
add
ds
sub
or
mov
test
push
dec
fmul
fidiv
hlt
pop
dec
pop
arpl
ins
xor
sbb
fisttp
stc
push
jnp
jle
or
jae
xchg
dec
nop
retf
mov
add
pop
les
add
mov
adc
or
test
mov
inc
mov
adc
loop
push
xchg
mov
retf
cdq
mov
test
jmp
pop
pop
adc
mov
xor
jg
mov
cmps
in
or
ds
xchg
and
jae
cdq
mov
cdq
dec
dec
mov
ficomp
movs
jae
jne
cli
stos
or
jnp
inc
cmps
loop
pop
ds
inc
sbb
and
sbb
div
jbe
loopne
sub
lahf
movs
inc
adc
(bad)
push
icebp
and
bound
daa
jb
movs
inc
mov
inc
in
cmp
call
mov
inc
mov
pop
imul
and
pop
cmp
movs
outs
mov
push
mov
mov
fwait
sbb
into
or
ret
fsub
mov
(bad)
fnsave
xchg
dec
xchg
jbe
cmps
cmp
fsub
rcl
pop
add
xchg
xor
push
xchg
popf
dec
test
xchg
pop
cmp
mov
(bad)
enter
push
mov
in
pop
push
cmp
hlt
popf
dec
loop
mov
push
rcl
int
sbb
push
xor
adc
sbb
inc
jle
inc
push
je
jecxz
push
into
pop
fucomp
mov
mov
jg
repz
fisub
cmp
mov
shl
dec
movs
dec
mov
dec
xchg
gs
dec
ins
mov
ror
jmp
jb
jbe
test
movs
sar
out
xchg
or
pop
xchg
inc
push
cli
in
retf
inc
add
cmps
lods
and
mov
xlat
push
pop
inc
sub
sbb
mov
mov
mov
aaa
and
hlt
mov
push
out
retf
retf
cmp
std
rep
mov
xchg
pop
pop
or
es
pop
push
out
mov
or
(bad)
shl
inc
and
or
ret
mov
jge
sub
add
test
mov
dec
jnp
jnp
inc
adc
imul
dec
push
adc
fnsave
test
push
cmp
inc
mov
fidiv
push
aam
xchg
jae
jl
icebp
pop
loopne
xor
(bad)
xor
pushf
imul
push
xchg
push
test
dec
xchg
push
aad
sub
das
mov
jno
test
fwait
jno
xchg
jmp
xchg
push
pop
(bad)
xor
xchg
popa
pop
out
cmp
movs
test
movs
inc
pop
inc
push
jmp
loop
cmps
sub
jecxz
jl
icebp
pop
mov
popf
sti
ret
int3
(bad)
xchg
xor
push
push
cmp
jb
dec
sar
cmps
xchg
jns
cwde
retf
pop
out
xor
xchg
mov
cmp
push
test
call
dec
push
fdivp
neg
mov
cmps
dec
lock
mov
fst
push
test
stos
repz
xchg
add
xchg
adc
add
icebp
jl
retf
cmp
dec
cmp
enter
popa
test
popf
je
xchg
rol
out
mov
sbb
test
jp
inc
arpl
xor
ds
daa
enter
ins
cmp
xchg
cs
mov
leave
mov
(bad)
stos
(bad)
xor
ficom
sub
ret
dec
mov
dec
out
(bad)
mov
or
jge
jg
push
sub
sub
(bad)
push
xlat
ret
fcom
das
(bad)
xlat
sub
and
shr
jle
hlt
mov
cmp
clc
stos
aam
push
jb
jne
ffree
pop
sub
and
mov
clc
mov
in
cld
pop
inc
out
push
popf
adc
jp
pop
jg
shl
dec
xchg
and
rcr
xor
lods
xor
dec
sub
and
sbb
pop
sub
in
mov
mov
movs
movs
ins
rcl
push
stos
push
xchg
mov
adc
mov
mov
gs
mov
dec
imul
or
dec
push
sbb
clc
loopne
aaa
shr
pop
mov
lods
jno
dec
pop
sub
add
in
dec
in
cdq
push
movs
xchg
int3
xlat
pop
xchg
sub
cmp
shl
push
pop
mov
pop
stos
dec
mov
jmp
addr16
out
fsub
mov
loope
rcl
retf
and
retf
mov
and
and
retf
push
aas
div
ss
test
nop
fwait
outs
push
jne
icebp
stos
stos
pop
ins
push
and
test
aaa
sub
pushfw
jne
xchg
cmp
out
fsubr
inc
xor
sbb
push
popf
cmp
dec
pop
dec
lds
xor
mov
retf
(bad)
daa
rcr
inc
sub
jnp
int3
rol
cmp
dec
daa
scas
cmp
inc
sub
push
adc
lods
inc
icebp
pop
mov
fs
dec
adc
mul
adc
out
call
and
or
aaa
sar
dec
jb
cmps
ror
enter
cwde
(bad)
movs
and
cs
aad
mov
mov
pushf
xchg
cmp
idiv
xchg
xchg
dec
xchg
pop
dec
ins
pop
dec
mov
mov
loop
add
ror
in
xchg
and
pop
jge
mov
adc
mov
dec
popf
dec
xchg
dec
adc
int
or
sahf
mov
fimul
xchg
dec
and
sbb
dec
push
outs
xor
push
dec
inc
fild
and
mov
mov
sbb
(bad)
mov
fst
jnp
popf
loop
fcom
xchg
add
add
mov
inc
mov
call
and
pushf
mov
mov
test
aaa
and
push
shr
sub
(bad)
and
pop
sub
and
jb
icebp
sub
int3
xchg
or
in
mov
loop
push
retf
jno
rcr
mov
loopne
movs
dec
xchg
nop
lods
adc
add
ins
push
xor
lock
adc
adc
mov
cmp
ins
fldenv
dec
fstp
clc
inc
lahf
std
in
jge
js
mov
mov
in
dec
adc
mov
inc
fnstsw
pusha
into
and
and
mov
cld
retf
push
jp
and
ficom
or
not
les
jle
cdq
sub
dec
pop
bound
pop
xor
loope
pop
mov
iret
and
and
imul
imul
retf
mov
mov
ret
pop
or
sbb
mov
inc
pop
push
daa
shl
adc
lods
jne
mov
pop
cmps
jno
xchg
mov
mov
pop
jo
inc
cmp
shl
iret
xor
test
sub
sub
mov
mov
repnz
inc
mov
daa
bound
dec
xchg
repz
jne
repnz
fdivr
cmp
sub
leave
push
dec
loop
js
push
mov
jmp
sub
js
leave
dec
rcr
inc
dec
rol
fdiv
sbb
dec
das
sbb
mov
xchg
cmp
sub
jae
jns
inc
xchg
dec
lods
daa
cmps
faddp
push
xchg
and
ss
sub
xchg
cmp
ss
xchg
pop
in
fistp
js
dec
jl
(bad)
leave
movs
imul
xor
dec
int
outs
(bad)
pop
cmps
dec
xchg
daa
jmp
fsubr
dec
out
xchg
add
movs
xchg
xchg
dec
imul
push
into
lahf
pop
call
out
mov
jne
lods
cs
loop
push
call
fisttp
retf
cs
stc
jbe
xchg
jmp
fidiv
mov
bound
in
sub
inc
daa
jne
xchg
retf
fldcw
dec
push
mov
cmp
pop
aad
mov
jo
jecxz
cs
aas
pop
lds
ret
loop
addr16
jmp
jbe
fsubr
xchg
mov
sbb
cmp
jnp
jecxz
inc
mov
adc
cmp
push
sub
sbb
lea
shl
repz
movs
sub
movs
outs
lea
popf
lods
pop
xchg
aaa
pop
xchg
inc
sub
lods
pop
or
push
push
popf
push
add
leave
lods
inc
ror
test
aam
call
fsubr
loop
xor
push
push
retf
mov
movs
in
movs
test
jbe
movs
cmp
sbb
push
mov
ret
cld
vmload
mov
push
push
imul
mov
ficom
pop
pusha
call
pop
jp
test
mov
das
aaa
dec
xchg
dec
retf
push
data16
lea
mov
mov
push
nop
lods
adc
cld
dec
inc
sbb
imul
jl
xor
data16
cdq
jne
not
inc
inc
addr16
and
pop
add
xchg
mov
ror
ja
pop
mov
push
pop
bnd
adc
mov
stos
leave
mov
popa
and
lds
push
(bad)
dec
(bad)
lahf
dec
and
fstp
shl
cld
scas
xor
cli
bound
shl
arpl
fmul
jb
mov
out
mov
mov
lea
jo
inc
dec
mov
or
retf
je
je
and
sahf
mov
pop
test
data16
add
mov
addr16
push
cmp
es
mov
mov
or
scas
push
inc
sbb
ds
push
out
out
mov
lahf
ins
retf
cmp
mov
lods
loopne
jbe
loopne
sub
and
pop
rcr
and
test
and
ds
jnp
popf
pop
cmps
sub
pop
xchg
pop
mov
jo
mov
es
mov
dec
gs
dec
imul
retf
dec
(bad)
ins
jp
mov
int3
(bad)
add
cdq
aaa
xchg
xor
addr16
out
cmp
inc
daa
add
dec
dec
xchg
cmp
push
out
cmps
mov
je
pop
stc
xor
mov
cmc
inc
fidivr
dec
dec
shr
mov
fwait
jne
jns
xacquire
push
add
sub
inc
pop
dec
or
movs
dec
adc
jno
mov
inc
loope
stos
jmp
mov
loope
cmps
sar
and
addr16
jne
pop
(bad)
cmp
add
mov
nop
jns
gs
ja
push
sbb
pop
adc
and
cmp
push
cdq
inc
jno
dec
out
mov
and
sahf
xor
push
loop
dec
mov
int
popa
retf
lea
dec
movs
dec
ss
and
add
(bad)
das
fxch
push
xor
pop
inc
inc
cmp
ror
out
sub
push
idiv
outs
js
push
js
lds
mov
mov
in
je
test
imul
test
and
ins
mov
mov
pusha
mov
xchg
(bad)
mov
mov
sub
sbb
neg
jno
leave
test
mov
neg
iret
dec
in
sub
leave
xabort
loop
test
ds
dec
sbb
push
push
mov
pop
cmps
lods
and
fidivr
pop
jecxz
es
mov
jne
jmp
movs
fdiv
ins
add
sbb
dec
dec
mov
xchg
stos
xchg
jmp
push
sub
push
fdivr
adc
ror
push
ins
scas
mov
mov
aad
pop
(bad)
mov
in
mov
cmp
aas
dec
popf
fs
ret
dec
jmp
add
adc
mov
pushf
pop
call
xor
js
test
pop
mov
pop
push
push
sub
(bad)
jmp
or
push
je
in
inc
sbb
jl
repnz
rcl
ds
arpl
pop
push
cmp
pop
in
add
icebp
ss
pop
inc
inc
fild
mov
in
sbb
bound
popf
and
dec
pop
xchg
dec
retf
pop
stc
mov
push
fisub
bound
xchg
dec
aaa
xor
and
(bad)
imul
daa
push
and
jae
in
sub
and
lods
aam
(bad)
mov
scas
retf
sbb
xor
push
xchg
fsub
mov
pop
adc
sub
or
test
mov
mov
fwait
call
(bad)
cli
lahf
dec
add
movs
and
repnz
jns
imul
and
movs
popa
dec
push
jno
push
xchg
xchg
push
test
xchg
mov
imul
xor
push
out
push
out
cmp
adc
cmps
aam
je
test
iret
shl
sbb
in
add
ss
mov
outs
repnz
div
int3
int
dec
or
xchg
mov
mov
mov
loope
push
mov
xchg
jne
mov
nop
in
aad
push
scas
inc
xor
sbb
add
out
mov
in
mov
lds
dec
in
jle
xchg
bound
in
mov
sar
xchg
push
dec
dec
push
lock
shl
dec
imul
pop
(bad)
inc
cld
xor
in
call
push
lock
iret
mov
cdq
push
xchg
(bad)
out
shl
in
jmp
xchg
push
hlt
mov
inc
movs
fild
icebp
jno
iret
sub
loopne
daa
xor
out
mov
imul
call
inc
pop
out
mov
imul
cli
call
pop
mov
out
mov
out
adc
out
xchg
movs
fst
pop
xchg
and
shl
fsubr
xchg
lock
and
call
inc
movs
xor
cmp
sbb
test
and
mov
or
shl
jae
sbb
lahf
add
cwde
aam
ja
adc
aad
sbb
movs
xor
sub
not
fisttp
push
or
xor
cmp
sub
sub
rol
pop
push
mov
mov
aam
in
jmp
pusha
movs
(bad)
jmp
mov
bound
(bad)
fcomp
pop
fsubrp
mov
push
mov
(bad)
cs
xchg
std
dec
sub
inc
and
je
inc
push
mov
cmps
dec
les
xchg
xchg
es
mov
(bad)
cmp
ret
int
retf
inc
dec
and
retf
jno
xor
sub
cdq
mov
push
mov
aad
jb
xor
mov
retf
mov
es
xchg
idiv
cmp
dec
mov
sbb
sub
fldcw
outs
cmps
test
movs
xor
xchg
mov
or
(bad)
mov
int
mov
dec
test
dec
dec
sahf
xchg
cmps
jb
rol
and
push
ret
je
stos
adc
jl
out
jno
jbe
mov
cdq
pop
mov
mov
popf
inc
jb
ins
dec
dec
sbb
jae
mov
mov
push
push
mov
cwde
mov
hlt
cmp
es
xor
sbb
fs
and
pop
jo
dec
nop
mov
clc
push
mov
mov
mov
mov
mov
cmc
cmps
inc
imul
out
push
lahf
movs
cmp
call
gs
push
test
mov
iret
ret
jae
push
test
sahf
retf
lahf
popa
adc
cmp
iret
cmps
int3
(bad)
fidivr
movs
dec
imul
fcmovb
and
push
push
jb
inc
or
ror
es
push
mov
inc
bound
sub
jmp
sbb
adc
aas
pop
mov
retf
dec
movs
push
push
pop
jns
and
aad
cmp
imul
push
loopne
mov
push
fisub
pushf
jns
mov
sub
push
sbb
push
cmp
aad
pop
jo
stos
adc
mov
stos
xor
jae
test
in
lods
cmp
cwde
dec
jo
daa
jae
xchg
add
ss
aad
inc
mov
mov
arpl
dec
hlt
sub
ss
xlat
pop
lahf
jp
and
lods
inc
daa
bound
xor
push
dec
fs
push
cmp
(bad)
out
jnp
stos
stos
outs
and
push
push
fsub
push
popa
xchg
rcr
jmp
pushf
push
(bad)
sub
mov
sub
sbb
jns
cmps
sub
ffree
and
mov
test
cmps
test
jbe
mov
arpl
stos
ja
jno
sar
out
frstor
call
jmp
inc
mov
fisub
xor
add
(bad)
push
test
aas
sbb
(bad)
bnd
jl
stos
mov
sbb
add
fild
lahf
jnp
xor
mov
call
out
sub
and
sub
xchg
sub
sbb
pushf
stos
aad
(bad)
dec
scas
ja
add
pusha
popf
pop
jae
popa
or
icebp
pop
jecxz
lods
cmp
sar
inc
or
stos
jne
add
mov
nop
mov
adc
or
loope
cmps
xchg
push
test
mov
outs
in
repz
xor
je
addr16
js
js
push
add
mov
cmps
push
cdq
fstp
je
push
outs
push
xor
popf
push
mov
stos
xchg
inc
dec
mov
int
add
jo
gs
xchg
dec
dec
int
dec
dec
jae
popa
call
xchg
stc
mov
cld
ins
sbb
mov
repnz
sub
push
idiv
jl
add
adc
or
sbb
cmc
mov
in
jg
paddw
test
outs
lock
gs
clc
jecxz
fcomi
inc
mov
ins
(bad)
sahf
mov
mov
lock
shl
jge
inc
xchg
repz
cld
jno
outs
ud0
jp
xlat
cli
jmp
mov
retf
paddw
mov
leave
movlps
es
push
fstp
pop
(bad)
(bad)
jb
daa
das
dec
cli
xchg
jp
push
movs
push
xchg
cmp
pop
dec
xor
dec
fdiv
shr
mov
test
xchg
push
(bad)
cs
mov
ficom
xchg
jae
ins
pop
cmp
aad
sbb
ja
outs
test
jp
cmps
dec
push
adc
sub
or
pop
into
push
ret
fild
ins
sub
or
and
outs
xchg
mov
arpl
ins
jnp
loope
loop
(bad)
pop
scas
jo
outs
sar
lock
retf
gs
xor
pop
inc
pop
sbb
imul
push
rcr
cmp
jmp
pusha
jo
mov
xlat
lods
rcl
inc
push
test
cmps
xchg
cmp
das
xor
cmp
std
stos
imul
inc
xchg
jg
and
shl
(bad)
stc
out
std
es
pop
idiv
bound
add
mov
pop
shl
and
cwde
mov
out
in
inc
bound
lahf
jecxz
clc
nop
jge
sub
add
jns
sti
pop
xor
fdivr
pop
jge
cld
cmp
adc
jl
jg
jg
and
mov
shr
cmps
xchg
shl
sub
ins
dec
push
xchg
aam
mov
test
sub
icebp
call
pop
jo
sahf
imul
mov
fidivr
nop
imul
scas
cmp
retf
cld
ret
dec
jge
in
sahf
pop
jne
cmp
sub
cmp
test
loop
rcr
clc
xor
scas
adc
push
(bad)
test
out
aas
jne
and
es
repz
call
jbe
and
loop
xchg
ins
sub
into
mov
js
(bad)
jg
mov
jo
ret
repz
mov
dec
(bad)
xor
cmp
push
dec
dec
movs
inc
pop
mov
fadd
daa
bound
je
or
movs
sbb
test
inc
movs
popf
mov
repnz
cmps
js
mov
xlat
mov
add
and
inc
inc
jecxz
adc
and
mov
xchg
mov
pop
scas
fmul
xchg
sbb
jle
clc
lea
push
lock
pop
fldcw
pop
stos
lods
in
ret
vpand
int3
pop
and
xor
jo
adc
or
fld
add
clc
les
inc
push
(bad)
mov
test
xchg
aam
cmc
test
dec
nop
adc
sti
cli
inc
sub
loop
xchg
or
mov
cmp
scas
or
(bad)
call
daa
pop
push
mov
mov
push
scas
inc
mov
hlt
adc
xchg
inc
sbb
jmp
addr16
mov
mov
out
push
cmp
push
in
xchg
mov
dec
cld
pusha
cmc
cdq
mov
mov
das
inc
add
hlt
lea
push
sbb
mov
ss
jge
(bad)
jns
movs
mov
pop
pop
mov
out
cmps
mov
das
fcomp
pop
pop
mov
loop
cld
mov
cmp
cli
fidiv
lods
iret
mov
in
scas
jmp
jp
je
icebp
movs
aad
dec
inc
mov
sbb
lds
pop
das
(bad)
out
mov
in
enter
ficom
xchg
scas
dec
movs
sti
ficomp
adc
and
test
shr
fadd
jmp
mov
pop
jmp
lock
shl
mov
cmps
out
jp
jne
dec
inc
aam
mov
(bad)
ja
adc
pop
cdq
cmp
and
and
xchg
push
in
aam
and
iret
imul
dec
mov
outs
sbb
lock
push
push
mov
or
cmp
pop
sbb
sbb
gs
fs
bound
pop
in
mov
jge
push
hlt
mov
fdiv
pop
fidiv
imul
xor
push
inc
dec
dec
push
xchg
movs
jae
loop
push
test
and
and
push
aad
push
fnsave
lock
jp
cmps
xlat
and
(bad)
or
jmp
repnz
mov
jo
pushf
test
add
mov
cmp
pop
xchg
jne
rol
(bad)
cmps
les
sti
xchg
xchg
jge
pop
popf
mov
pop
sahf
and
adc
and
aam
cmp
dec
dec
jno
or
cwde
pop
push
jns
xchg
jge
movs
sbb
jns
movs
or
stos
clc
int3
add
cmps
sbb
repz
lea
neg
mov
mov
push
pop
mov
mov
push
push
mov
in
xor
aad
push
xchg
pop
test
push
xchg
sub
or
aad
jns
mov
push
fcmovu
cmp
aaa
aam
das
push
ins
jp
cmps
jmp
mov
dec
test
in
stos
mov
push
jo
nop
inc
add
inc
mov
or
sbb
in
fstp
stos
test
ins
cmp
(bad)
jmp
out
push
adc
cmp
popf
inc
pusha
loope
in
and
pop
cmc
shr
in
push
dec
adc
aam
dec
inc
sub
movs
sbb
psadbw
jbe
jae
push
push
or
jge
jecxz
adc
retf
outs
or
lock
sub
repnz
into
cli
xor
fst
in
mov
jp
rol
jecxz
jle
ss
(bad)
call
cwde
into
xchg
int
ins
push
aas
push
jno
test
scas
ret
movs
cmp
jne
push
ficom
mov
into
lock
fldenv
cmp
(bad)
aaa
hlt
adc
fwait
gs
in
pushf
fs
jne
or
mov
inc
xchg
data16
mov
inc
ficomp
cmp
add
in
mov
dec
test
sbb
push
mov
pop
adc
out
mov
inc
iret
sub
adc
test
aam
lods
xor
mov
mov
imul
jecxz
push
jb
sub
mov
retf
imul
and
movs
lds
scas
(bad)
dec
push
hlt
scas
xchg
mov
div
neg
les
push
xchg
cdq
dec
dec
push
sahf
mov
inc
jbe
pop
dec
inc
jl
xor
cli
daa
push
mov
sahf
bound
fwait
test
jl
xchg
iret
cld
xchg
mov
mov
cmp
test
mov
sub
movs
push
out
xor
xor
(bad)
jge
push
mov
iret
retf
in
es
jmp
push
dec
add
sub
xchg
mov
movs
jae
rcr
push
sbb
ins
enter
and
mov
inc
cwde
aaa
sub
repnz
xor
test
rcr
ins
jb
lds
dec
ret
inc
jno
in
mov
inc
xor
or
fnsave
xor
movs
or
fwait
jne
cmps
cwde
dec
mov
push
in
les
sbb
cld
mov
fidivr
adc
ds
mov
xor
(bad)
mov
fwait
aas
dec
in
stc
sub
leave
mov
imul
dec
push
xchg
mov
sub
test
sub
mov
pushf
out
daa
mov
enter
push
mov
mov
sub
jge
xor
fld
fs
adc
pop
dec
or
rol
adc
jmp
and
or
fadd
lock
stc
sub
pop
stos
ret
movs
bound
jnp
cmp
adc
sub
jo
in
or
fmul
mov
(bad)
mov
and
push
retf
into
inc
jno
loop
push
ss
movs
test
fmul
xchg
scas
je
mov
inc
xor
and
mov
sub
outs
(bad)
pop
xchg
lea
pop
inc
cmp
int
fisub
xchg
xchg
call
dec
movs
add
outs
or
jp
sub
fistp
cs
pop
in
mov
out
out
sbb
mov
xchg
push
xchg
xchg
sbb
push
bound
pop
jns
xlat
mov
xchg
or
dec
lock
into
imul
inc
push
fcomp
adc
sbb
mov
idiv
out
adc
xchg
stos
cmp
jmp
in
leave
mov
mov
loopne
xchg
mov
sub
mov
jb
xchg
movs
xchg
mov
fsub
push
sahf
in
rcr
test
repnz
jae
xor
inc
jle
dec
fst
fidivr
xor
cmp
ins
cs
out
test
dec
icebp
push
pop
xchg
int
and
icebp
jbe
pop
dec
shr
data16
cdq
xor
sahf
ins
repnz
jl
sub
push
dec
pop
mov
pushf
jno
arpl
sub
xor
mov
push
mov
cli
inc
sub
xchg
xchg
jbe
sub
hlt
jns
mov
mov
es
pop
sub
pushf
xchg
push
jbe
inc
arpl
add
shr
hlt
pop
scas
frstor
mov
and
pushf
mov
add
bound
outs
inc
pusha
push
push
push
inc
xchg
mov
inc
nop
mov
add
sub
movs
mov
xchg
movs
mov
sub
mov
push
daa
pop
shl
xlat
shl
jp
sti
jnp
lods
xor
movs
les
fistp
hlt
or
movs
test
fiadd
mov
stc
pop
out
scas
movs
fcom
xchg
sahf
sbb
(bad)
or
xchg
cmc
outs
mov
or
in
rcr
mov
aas
ret
out
mov
and
or
inc
out
sbb
je
sub
mov
retf
push
rcr
jno
xlat
out
in
test
fwait
gs
repnz
dec
lea
in
sbb
mov
sub
in
test
popf
shr
xor
push
or
add
xchg
pop
daa
loopne
shl
dec
adc
jl
call
repz
xchg
in
or
pop
cs
cli
pop
cld
aas
out
js
lds
shl
out
push
push
retf
cmps
push
(bad)
sahf
test
into
cmp
xchg
push
xchg
repnz
jmp
js
es
outs
jae
(bad)
inc
adc
imul
out
dec
jle
je
xor
push
mov
push
dec
out
jmp
int3
lods
pop
inc
retf
test
mov
shl
pop
fwait
pushf
mov
push
out
scas
(bad)
movs
clc
scas
jns
xor
aad
movs
inc
pusha
icebp
push
jmp
mov
aas
ret
loopne
lds
mov
addr16
in
mov
adc
xchg
mov
test
retf
pop
aam
ret
cmp
inc
cmp
out
ror
in
pop
mov
das
xchg
aaa
xor
mov
loope
stos
div
loop
call
mov
enter
lea
dec
inc
lds
add
inc
in
adc
rcr
sbb
imul
xor
push
cmp
mov
push
cmp
int3
jmp
mov
push
aas
jmp
ret
push
xchg
icebp
sub
int3
xor
sti
pop
mov
or
add
dec
cmc
and
lea
out
dec
mov
cmps
in
mov
jge
mov
cmps
mov
xchg
mov
and
push
or
and
into
jp
sub
sub
sub
mov
cmp
movs
mov
loopne
cmp
shl
repz
xor
(bad)
sub
ins
cmp
jmp
in
test
(bad)
and
pop
inc
out
mov
xor
inc
cs
sub
fs
sbb
jge
xor
js
scas
inc
mov
push
pop
outs
call
dec
inc
push
loope
sbb
or
neg
dec
loope
dec
iret
mov
aam
out
jecxz
push
xchg
cmp
jb
shl
addr16
sub
mov
adc
cdq
inc
ds
and
adc
jbe
mov
sbb
mov
lods
pop
jg
fidivr
sub
sub
pop
push
(bad)
push
mov
mov
pop
push
scas
retf
call
aam
sub
push
dec
xor
sahf
cmps
sti
xchg
dec
inc
adc
add
fiadd
movs
lahf
ret
inc
leave
dec
jnp
xor
push
mov
repnz
mov
lods
dec
push
cmps
in
jnp
out
push
out
shl
shr
retf
movs
ret
push
mov
in
in
cld
mov
xchg
or
retf
dec
movs
pop
int
repz
stc
jg
out
mov
cwde
retf
mov
das
mov
sub
ins
sbb
retf
lahf
rcr
ins
push
pop
mov
cmp
retf
ror
and
movs
int3
cmp
in
mov
inc
cld
mov
pop
fld
loop
fidiv
gs
sub
call
mov
jne
sbb
cmps
jne
mov
test
imul
arpl
or
dec
mov
sub
sub
adc
ins
test
lods
or
dec
shl
push
lock
stos
cmp
call
dec
mov
scas
adc
fcmove
xchg
mov
int3
std
xchg
mov
pop
fidiv
cwde
sahf
retf
xchg
sbb
xor
jno
push
or
xchg
leave
stc
ds
sahf
adc
xlat
fsubr
je
mov
pop
fwait
xchg
fwait
gs
dec
dec
int3
and
adc
test
add
xchg
ins
xor
out
outs
scas
xor
inc
mov
push
dec
push
xor
or
test
gs
push
adc
inc
dec
pop
jnp
icebp
pop
jbe
pop
or
imul
add
fdivr
push
xchg
lea
call
adc
sub
jmp
popa
mov
sub
jbe
inc
icebp
mov
rsqrtps
pop
jmp
mov
add
movs
inc
pop
xchg
xor
sbb
mov
retf
mov
pop
jae
pop
(bad)
jno
mov
inc
inc
xor
cmps
aam
adc
sub
sub
test
cmp
cmp
xor
push
loop
stos
jo
and
dec
jns
pop
push
aad
scas
xlat
dec
lea
repnz
js
inc
sbb
test
jmp
lea
fs
jmp
sti
test
aad
pop
jns
inc
mov
adc
movs
gs
push
(bad)
or
sbb
lods
lods
fstp
jge
shl
iret
mov
push
push
out
dec
jp
fisubr
out
dec
into
das
addr16
jge
inc
pop
inc
scas
movs
jmp
fimul
imul
mov
fsubr
rol
add
push
push
test
jno
xchg
xor
pop
jnp
out
and
arpl
call
jb
cmp
sahf
push
lea
add
mov
inc
popf
stos
fimul
sub
jle
lods
sub
adc
(bad)
and
mov
outs
in
mov
mov
xor
out
loope
push
aam
cmp
loop
xlat
int
jns
fmul
shl
xchg
int
aas
(bad)
(bad)
push
movs
cmp
mov
jae
das
mov
mov
or
movs
out
or
jne
(bad)
(bad)
push
mov
sub
push
xchg
ins
stos
sbb
movs
mov
sbb
inc
mov
jge
jne
add
and
imul
mov
popf
adc
dec
pop
(bad)
xor
mov
test
aam
dec
mov
inc
stos
fdiv
inc
repnz
shl
and
pusha
push
adc
je
cmp
stc
dec
sub
adc
mov
(bad)
jmp
add
retf
add
cmp
pop
push
inc
popa
inc
in
fld
test
mov
sbb
je
hlt
cdq
sbb
popf
mov
repz
mov
xlat
push
mov
cmp
and
lea
jmp
mov
push
lods
pusha
out
les
call
or
mov
jbe
hlt
jmp
sub
xchg
imul
mov
daa
sub
hlt
mov
jle
xor
imul
mov
stos
fmul
cmp
lea
mov
stos
lds
ja
popa
pop
pop
inc
jecxz
cmp
mov
xor
scas
mov
jmp
pushfw
fsub
sub
(bad)
mov
cmp
rcr
lea
fisttp
jmp
push
not
cs
inc
xchg
ja
add
inc
sub
dec
push
(bad)
out
je
adc
ja
jnp
cld
stc
and
xchg
xchg
(bad)
sub
retf
lea
push
sbb
cdq
jbe
sahf
not
sub
mov
pop
xor
pop
cwde
retf
xchg
sbb
fild
dec
jno
test
jae
inc
xchg
xchg
xchg
mov
jnp
dec
sbb
xlat
jp
lods
mov
movs
(bad)
jge
gs
test
repnz
push
ds
lods
test
adc
dec
xlat
jnp
loopne
inc
lea
mov
adc
dec
test
movs
push
push
dec
ret
call
lods
call
es
mov
sub
cmp
sbb
cmc
(bad)
clc
mov
(bad)
pop
mov
jl
outs
or
idiv
sbb
mov
inc
fild
cmp
fldcw
mov
dec
ret
pop
and
cmp
xchg
je
jge
pop
push
js
dec
xchg
inc
pop
jae
fmul
stos
imul
push
xchg
addr16
enter
xor
dec
fld
inc
jmp
sub
sbb
sub
push
outs
test
xchg
pop
hlt
ins
inc
dec
rcl
adc
push
push
repz
rcr
pop
xchg
std
or
dec
jmp
and
pop
xor
mov
ficom
ins
xchg
out
mov
inc
cmp
cmp
clc
(bad)
sbb
sub
ror
xchg
push
mov
push
in
fld
outs
jb
sti
shl
je
or
es
mov
retf
cs
dec
dec
lea
mov
arpl
loopne
(bad)
mov
push
xor
out
inc
sar
shl
inc
jmp
adc
aaa
sub
sbb
push
push
ret
addr16
jl
icebp
(bad)
out
pop
cmp
cmp
nop
dec
movs
ret
xchg
and
dec
lock
aad
stos
leave
ins
jbe
popa
hlt
stos
lods
iret
aas
inc
push
into
adc
mov
mov
in
aad
dec
aad
push
rcr
jle
push
int3
mov
pop
out
dec
push
mov
jmp
fucomp
in
loop
jp
mov
pop
lahf
xchg
clc
repz
test
xchg
fnstcw
mov
adc
and
cwde
inc
cmc
mov
lahf
shr
adc
and
imul
or
and
sub
movs
and
xchg
dec
loop
movs
jmp
ss
pushf
loopne
jne
push
mov
inc
xchg
sahf
cs
mov
iret
es
stos
jns
mov
xchg
cdq
mov
ret
sub
mov
or
shl
cdq
jne
adc
cdq
mov
push
js
cmp
mov
loop
adc
pop
jmp
jno
push
mov
jns
loope
loope
pop
jns
and
jne
pop
pop
xchg
sub
xor
mov
jne
ins
test
adc
and
jmp
and
mov
(bad)
xchg
mov
fidiv
lock
inc
imul
jmp
mov
loope
sub
add
jbe
ja
cmc
pop
ret
jp
in
popf
test
xchg
inc
ds
jle
xchg
imul
cmps
cld
mov
add
movs
xor
daa
xchg
xchg
(bad)
xchg
out
out
fdiv
dec
icebp
fwait
clc
jg
sti
call
fldcw
loopne
mov
push
mov
or
lahf
das
and
cmp
mov
dec
adc
xchg
mov
sub
leave
sbb
iret
mov
(bad)
shl
sbb
jnp
cmc
out
jmp
dec
cmps
sub
cli
inc
shr
push
mov
call
(bad)
push
ds
stc
or
cs
int3
mov
pop
mov
movs
inc
cmp
das
or
pop
shr
(bad)
mov
int
push
pop
and
xor
add
aas
push
rcl
sti
sub
pop
mov
sti
test
arpl
add
je
mov
ins
xchg
inc
jg
pop
xor
ss
xor
iret
arpl
xchg
scas
mov
mov
stos
aam
push
aaa
inc
sub
xchg
pushf
data16
xchg
mov
pop
push
xchg
test
popa
dec
ret
mov
or
mov
imul
xor
hlt
xchg
pop
enter
test
and
nop
int3
mov
xchg
inc
push
test
cmp
fstp
test
cli
inc
test
jno
and
or
adc
inc
les
mov
jge
inc
mov
inc
fdivr
jno
leave
shl
xor
jno
(bad)
lods
or
inc
add
scas
(bad)
pop
sub
pop
jl
or
cmp
nop
mov
sbb
or
jae
loope
lods
inc
lods
rcr
into
jbe
dec
sbb
sar
jo
aam
cmp
pop
push
push
out
shl
(bad)
cmps
fst
adc
and
test
mov
lock
fnstcw
push
adc
clc
sbb
into
sbb
xor
or
push
shr
and
and
jno
bswap
js
dec
xchg
popa
adc
outs
add
les
lods
or
les
sbb
in
cmp
inc
mov
push
in
add
movq
xchg
push
sub
fild
sbb
sbb
cmp
mov
push
(bad)
push
adc
mov
sbb
dec
cdq
frstor
xor
sbb
xor
popa
dec
mov
neg
dec
mov
mov
dec
lds
mov
stos
inc
jg
scas
sbb
retf
inc
stos
push
dec
pop
pop
push
dec
xor
dec
mov
outs
or
push
movs
add
daa
pushf
cmp
shl
rcr
jp
ja
xchg
inc
repnz
push
outs
xchg
sub
scas
loop
int
ror
push
inc
je
and
xchg
pop
mov
cmp
ffree
push
push
loop
jne
inc
xor
dec
mov
push
pop
mov
fidiv
add
test
cmp
(bad)
sub
mov
pop
inc
(bad)
pop
and
push
sub
sbb
xchg
(bad)
xchg
inc
push
sbb
adc
test
jp
cmps
or
cwde
rcr
int
in
cmp
jns
xchg
fsub
movs
and
push
bound
hlt
add
dec
or
repnz
pop
fiadd
mov
lea
xchg
sub
mov
retf
push
movs
popf
(bad)
int3
cld
(bad)
fist
loopne
shr
mov
mov
dec
(bad)
or
sub
jbe
out
sbb
fwait
mov
je
push
push
cld
in
ret
ret
dec
jmp
add
xchg
mov
test
mov
outs
in
nop
aad
push
cmps
aas
and
dec
sbb
sub
pop
or
ins
pop
inc
inc
xchg
xchg
jl
(bad)
sti
fisttp
and
stos
aad
cmc
sub
repnz
add
sub
mov
mov
dec
ret
das
test
mov
fcmovnb
pop
dec
(bad)
ret
or
push
push
adc
test
dec
xchg
(bad)
sbb
(bad)
stc
ret
add
lds
inc
aaa
dec
push
loopne
xchg
sti
mov
dec
clc
gs
push
jns
shl
cli
dec
ret
xchg
imul
shr
ins
xor
scas
aad
mov
retf
test
cmp
push
in
sbb
ror
loope
arpl
dec
cmp
xchg
mov
xor
aam
pop
pop
shr
fmul
test
ss
stc
xor
xchg
sub
add
push
sahf
inc
loope
movs
stos
mov
(bad)
cmps
fst
hlt
imul
cli
stc
jnp
mov
retf
pop
aaa
cmps
das
xchg
jmp
mov
push
mov
les
mov
imul
push
dec
cld
mov
sbb
add
lahf
popf
sbb
cmp
mul
stos
push
sbb
mov
das
jmp
popf
push
neg
adc
or
mov
or
xchg
sahf
adc
das
icebp
xchg
leave
jnp
fist
cld
stos
out
add
mul
nop
clc
push
push
push
cmp
cmps
pop
bound
sbb
pop
adc
or
test
dec
test
sub
int
gs
dec
iret
inc
mov
inc
mov
cdq
aam
xchg
push
xchg
dec
dec
enter
lods
mov
test
xchg
inc
adc
mov
xor
dec
mov
sbb
xchg
sub
ret
jae
xor
and
ins
jae
mov
ja
sbb
fsub
xchg
hlt
jmp
pop
sub
rcr
rcl
add
jp
call
rol
cld
pop
jmp
in
(bad)
push
mov
ret
pop
or
pop
sar
fldcw
inc
inc
retf
call
lods
adc
push
bound
push
pop
cmps
cmps
and
fild
push
rol
lds
ins
shl
sbb
fldenv
dec
and
lods
imul
mov
push
jo
popa
enter
fidivr
sub
and
hlt
movs
xchg
(bad)
cmp
retf
(bad)
cmp
xor
addr16
sub
popa
cmps
jno
or
cwde
adc
gs
pop
ja
mov
lods
push
int3
rcr
add
add
dec
xor
xor
xor
xchg
jp
fimul
int3
and
xchg
mov
jmp
xor
addr16
stos
mov
arpl
imul
call
xor
outs
adc
sbb
fisubr
out
mov
in
mov
xchg
mov
sbb
push
cmps
or
js
mov
adc
pop
arpl
jle
fmul
lods
pop
cmp
mov
pop
push
xchg
cmps
retf
test
sahf
addr16
jne
gs
mov
push
sub
and
push
mov
aaa
sub
arpl
pop
pop
sbb
sub
jp
mov
jmp
add
rol
push
sub
and
inc
movs
nop
scas
sub
xor
imul
or
push
and
cli
ret
sub
ror
cmp
xchg
mov
in
xchg
outs
xchg
nop
dec
clc
ja
enter
popf
xchg
xor
add
sbb
pop
ss
mov
sbb
mov
mov
stc
repz
sbb
add
fisttp
xor
jno
(bad)
mov
enter
adc
(bad)
sbb
out
popf
sti
data16
and
lea
jno
push
jmp
lods
xchg
or
ds
movs
sbb
jmp
pop
inc
cmovl
sbb
fs
sahf
(bad)
adc
mov
adc
mov
jb
and
and
sub
push
pop
enter
loope
ins
outs
ror
arpl
and
shrd
adc
cmp
dec
push
add
ret
daa
and
cs
leave
test
test
mov
jae
adc
push
je
fsub
xchg
iret
daa
add
xor
scas
or
lods
mov
push
xor
(bad)
cmp
stc
sub
cli
movs
cmp
sub
mov
call
cmp
inc
mov
movs
cli
call
jne
pop
movs
into
cs
add
jb
xchg
jge
and
sti
add
hlt
movs
loop
inc
push
in
inc
and
ss
jecxz
jmp
cdq
mov
loope
cs
xchg
loop
xchg
loope
mov
add
movaps
and
shr
xchg
das
sub
pusha
mov
aad
fmul
and
leave
clc
inc
lods
es
dec
fsubr
mov
lods
xor
xor
cmps
and
aam
retf
sub
push
imul
or
and
aad
sub
data16
mov
jl
test
imul
xor
jae
pop
xor
cmp
ja
xchg
leave
jne
or
add
sbb
push
inc
mov
loop
(bad)
scas
or
(bad)
sti
pushf
stos
aad
jp
je
cmp
(bad)
mov
iret
fs
xchg
mov
test
push
sub
dec
jo
cmp
xor
cld
dec
push
clc
in
inc
ror
or
cmp
shr
imul
fnstsw
movs
int
jae
mov
ins
cmps
pop
(bad)
(bad)
xor
outs
dec
out
jge
stos
mov
gs
jnp
jbe
repz
mov
xchg
je
adc
and
test
jo
cmps
xlat
sub
xchg
shr
cs
(bad)
fistp
out
sub
mov
call
xchg
jmp
jmp
xchg
stos
pop
js
mov
loop
sahf
aam
or
dec
fbstp
add
mov
lock
or
es
sub
mov
outs
push
in
call
cmps
sub
sbb
out
add
jle
test
loope
jp
sub
hlt
and
cmps
mov
push
push
mov
or
jmp
jp
js
fwait
pop
pop
jmp
add
sbb
mov
or
sub
mov
cmc
call
pusha
sti
jecxz
repnz
scas
in
fdiv
xchg
js
sbb
ds
iret
call
jnp
call
cmps
cmc
gs
cld
cld
cmp
mov
fwait
test
int3
mov
cdq
push
sbb
adc
mov
inc
mov
xchg
mov
popf
push
dec
stc
push
push
push
push
fld
(bad)
lods
dec
sbb
js
pop
dec
outs
inc
fs
es
adc
daa
sbb
jge
dec
test
xchg
pop
cmps
and
js
and
dec
and
nop
out
cmc
mov
push
ret
push
mov
rol
xlat
scas
adc
out
or
sbb
loope
push
mov
cmp
xor
jo
ins
inc
jae
sbb
frstor
test
adc
mov
cld
cmp
or
arpl
scas
sbb
jge
pop
jne
out
xchg
mov
std
inc
mov
and
push
jo
ss
test
inc
add
nop
lock
cmp
fldenv
into
popf
sbb
sub
jns
xor
test
in
mov
std
cmp
mov
adc
push
rol
imul
rcl
push
xchg
xor
cmp
pop
pushf
dec
xchg
repz
idiv
xor
push
(bad)
pop
call
aas
add
jl
mov
js
mov
fwait
xchg
mov
fwait
neg
fld
test
xchg
push
enter
push
sub
mov
(bad)
mov
cmp
call
int
(bad)
das
jge
pop
mov
out
cmps
aas
mov
mov
sub
push
xchg
pop
push
push
jmp
test
fistp
gs
cmp
call
cs
jmp
sub
dec
inc
ins
dec
movs
hlt
cmp
sbb
rcl
cmps
mov
inc
leave
leave
inc
dec
bound
push
lods
pop
adc
jmp
(bad)
(bad)
cmps
dec
sbb
retf
imul
(bad)
loopne
pop
test
pop
adc
dec
push
jno
sub
cdq
ss
cs
sub
xchg
ret
ror
adc
rcr
lea
aam
imul
dec
test
int3
xchg
jmp
push
mov
push
fidiv
sub
inc
push
lods
cdq
or
hlt
out
cmps
push
pop
inc
push
inc
jb
pop
les
pslld
cmps
rol
and
loop
mov
jbe
jnp
dec
sbb
and
hlt
test
lea
push
aam
jle
pushf
mov
mov
jbe
cmp
inc
push
mov
xchg
loopne
dec
push
cmp
retf
ret
in
push
repz
lods
cli
mov
mov
bound
mov
out
xchg
dec
dec
sub
cmp
je
jbe
loop
test
stos
lds
stos
dec
outs
stos
repnz
ss
xchg
jmp
jbe
push
mov
lods
dec
fwait
xchg
pop
mov
adc
add
mov
sbb
sub
xchg
cli
lock
dec
int
mov
jg
in
xor
in
cmp
(bad)
(bad)
xchg
push
movs
popa
lods
sub
xor
xlat
adc
adc
ret
xchg
aas
dec
inc
dec
sti
xchg
inc
jnp
dec
fcmovnbe
xchg
sub
sub
sub
imul
sbb
pop
inc
xor
sub
in
inc
fbld
jno
loop
inc
ss
dec
jae
jnp
mov
daa
pop
pushf
dec
sbb
aam
mov
dec
and
mov
sub
rcl
enter
push
leave
pop
jno
push
pop
xor
mov
iret
cwde
jmp
dec
loope
mov
push
pop
pop
mov
das
jae
jb
stos
xchg
call
repz
scas
xchg
pop
xchg
cmc
cdq
jg
push
mov
push
mov
movs
push
in
int3
aam
mov
lahf
inc
xchg
push
cmp
ins
inc
addr16
stos
cmps
xor
push
mov
loop
sahf
in
cli
push
lods
jmp
adc
in
mov
cmp
dec
(bad)
and
push
dec
xlat
mov
push
jmp
sbb
push
mov
adc
enter
fwait
iret
and
retf
cmp
xor
sub
jns
(bad)
dec
outs
movs
push
dec
xchg
or
xchg
cmp
das
(bad)
int
stos
fidiv
jns
mov
aas
jae
sbb
inc
(bad)
retf
pop
ja
xchg
push
fwait
gs
imul
sub
leave
cmp
out
fsubr
adc
shr
lea
icebp
dec
sar
add
inc
cmps
cmp
cmc
push
push
cmps
shl
shl
cmc
sbb
test
dec
sub
fldcw
pop
xchg
inc
jge
ror
lds
data16
inc
add
push
arpl
les
mov
jne
push
mov
xchg
movs
loop
stos
dec
inc
(bad)
nop
shl
push
(bad)
jmp
loopne
mov
mov
not
push
arpl
jne
mov
dec
xor
rcr
xchg
xor
push
scas
je
mul
sub
xchg
or
lds
in
js
jb
push
test
loopne
cmc
int3
es
(bad)
retf
jmp
fs
pop
jno
push
pop
push
add
leave
cmp
pop
outs
xchg
sbb
jp
mov
retf
sbb
inc
ja
sub
ds
dec
(bad)
cmc
inc
mov
mov
sub
inc
fwait
dec
jnp
adc
into
or
out
arpl
pop
mov
gs
retf
sbb
add
mov
xor
sbb
shl
sub
sub
jb
ins
cwde
call
sbb
ins
leave
je
dec
test
aad
(bad)
daa
pop
jns
sub
sbb
mov
into
movs
cld
mov
inc
stos
mov
mov
and
push
inc
dec
inc
mov
repnz
in
fistp
adc
bound
hlt
adc
cmc
xor
pop
push
pop
xchg
mov
cld
arpl
rol
shr
cld
jl
neg
idiv
xor
int
out
ja
and
dec
arpl
lods
pop
xchg
es
pop
cwde
push
mov
mov
dec
(bad)
adc
repz
pop
icebp
shl
adc
shl
mov
int
sub
mov
iret
and
xchg
mov
mov
xor
icebp
scas
mov
ins
test
pop
fwait
xchg
fcmovbe
cmp
or
inc
push
mov
ret
push
inc
loope
inc
jnp
fld
call
dec
repz
push
rcr
pop
inc
sbb
dec
int3
aad
or
push
sub
xlat
and
inc
jge
jmp
mov
imul
sbb
xor
sbb
repnz
ins
addr16
push
aas
dec
pushf
inc
inc
rcl
xor
inc
xor
push
lds
mov
jecxz
push
fdiv
add
pop
inc
xor
mov
movs
dec
push
push
pop
xchg
fisttp
pop
push
repz
dec
aam
fistp
pop
or
stos
push
dec
jne
adc
in
rcl
out
xchg
push
test
add
test
inc
xor
mov
cwde
ins
push
int3
xchg
loop
(bad)
call
das
cmp
sub
dec
ds
(bad)
pop
dec
fdivr
sar
pop
jge
push
push
movs
cli
lock
jne
dec
movs
cmp
jmp
ror
es
push
sahf
mov
test
xor
mov
and
in
and
sbb
div
add
rcr
jae
jl
xor
loop
xchg
dec
scas
sbb
push
es
aaa
fstp
mov
ret
xor
lods
movs
lods
mov
push
dec
pop
add
retf
push
xchg
xor
pop
idiv
sbb
and
(bad)
lahf
enter
fwait
xchg
scas
arpl
dec
xor
sbb
mov
call
das
popf
mov
mov
ret
push
retf
cmp
fwait
sbb
cmp
jbe
loop
clc
cli
mov
xchg
clc
outs
out
dec
dec
add
ja
(bad)
fisub
clc
cmps
clc
mov
dec
clc
push
jle
cmps
out
xchg
cwde
xor
xchg
lods
dec
js
push
sbb
in
jo
fadd
inc
xor
or
push
or
xor
sar
std
sahf
or
cmps
shr
outs
daa
iret
xchg
jmp
add
mov
ja
cmc
jbe
mov
icebp
sbb
jge
xchg
or
xor
jne
mov
sahf
jl
idiv
ja
bound
dec
pop
dec
lds
repz
cmps
inc
dec
cmp
rcr
std
addr16
jnp
repz
clc
dec
ror
je
xchg
ret
mov
mov
sti
gs
pop
es
cmp
pop
inc
or
jg
mov
aad
push
jne
jnp
xor
jb
adc
jmp
out
sub
movs
pop
ins
inc
xlat
cdq
mov
in
mov
call
pop
cld
sub
fstp
icebp
sub
or
cwde
in
jmp
mov
jns
in
xchg
popf
or
enter
test
call
pop
inc
xor
push
leave
fprem
outs
jecxz
js
mov
dec
or
inc
adc
int3
in
(bad)
retf
mov
(bad)
xlat
push
adc
cmp
jns
jne
jno
mov
push
lods
js
xchg
into
dec
mov
jae
and
cmp
mov
nop
cli
ss
pop
ret
ffreep
jne
jns
movs
push
sar
cmp
hlt
or
aas
adc
cmp
(bad)
mov
out
inc
scas
(bad)
jmp
add
leave
addr16
cmps
fwait
push
in
cmovae
bound
jmp
push
xchg
sub
cs
pushf
pushf
inc
ins
ins
mov
and
scas
ja
add
das
fcmovb
xlat
or
daa
pop
out
xchg
popf
ins
mov
retf
jmp
jb
push
mov
pop
cmp
dec
movs
ja
clc
outs
into
imul
xor
mov
jle
fdiv
push
js
jecxz
mov
sbb
sub
imul
dec
sub
or
retf
movs
and
jnp
xchg
das
das
mov
in
repnz
mov
cmp
dec
jle
push
lods
call
es
(bad)
je
std
in
clc
mov
shl
js
addr16
xchg
mov
xchg
cmps
mov
je
and
mul
jle
sub
mov
movs
dec
daa
mov
cmp
test
fistp
test
iret
shl
arpl
pop
xor
jmp
pop
repz
mov
cmp
mov
jae
ret
xchg
in
push
stc
adc
add
dec
enter
movs
in
cmp
jb
mov
push
movs
ss
pop
mov
jb
scas
dec
and
fincstp
leave
fnstcw
scas
mov
pushf
xchg
arpl
adc
add
push
cdq
jle
test
sub
into
fidiv
andnps
push
ror
out
div
xchg
imul
outs
adc
ret
rcr
fucomi
mov
sub
mov
add
ret
inc
sbb
jecxz
jb
xchg
daa
fwait
popa
add
jne
pusha
loopne
push
stc
shl
jecxz
sub
dec
(bad)
dec
sahf
or
les
movs
lea
icebp
inc
push
fst
lods
jns
cmc
mov
dec
mov
(bad)
(bad)
mov
aad
mov
xchg
in
sti
imul
cmp
leave
push
sub
stc
xchg
das
jb
test
mov
out
cmp
(bad)
push
test
nop
push
mov
sub
xchg
adc
stos
xor
inc
mov
loopne
je
retf
mov
mov
(bad)
test
cmp
pushf
sub
xchg
adc
in
retf
jo
mov
sbb
(bad)
lods
add
mov
sar
aam
push
ja
cs
leave
jle
xor
lods
scas
jmp
xor
popf
sahf
dec
retf
dec
test
(bad)
bnd
sub
cdq
add
ja
xlat
lods
pop
push
pop
inc
rol
pop
fimul
cmc
push
mov
ficom
jmp
in
ret
int3
jae
sbb
fs
cmp
ins
out
xlat
xor
xchg
push
cmp
outs
fwait
jb
aas
or
(bad)
leave
fs
test
sub
mov
adc
cmp
test
(bad)
and
push
sar
add
daa
pop
inc
cmps
retf
stos
outs
aaa
xor
dec
pop
test
stos
clc
pop
rol
push
xchg
inc
fild
jmp
ror
cmp
stos
sub
mov
pop
mov
inc
dec
mov
scas
jne
mov
and
lods
push
push
push
pusha
jmp
outs
inc
imul
jo
push
scas
pop
retf
movs
shl
adc
imul
imul
aad
or
sbb
arpl
sub
mov
pusha
loope
fnstsw
pop
xlat
fsubr
push
test
ret
in
fcom
or
daa
cmp
aaa
daa
(bad)
xor
(bad)
into
sti
mov
out
retf
pop
in
and
ins
add
and
(bad)
pushf
push
jo
into
mov
jmp
push
mov
bound
pop
and
add
push
arpl
sbb
mov
jmp
adc
jecxz
push
adc
push
sub
and
pop
les
test
arpl
shr
xchg
call
add
shl
jmp
sahf
jp
loope
push
and
std
mov
mov
ins
xchg
jecxz
adc
scas
js
and
jnp
bound
adc
lods
push
cmp
fsubr
lds
(bad)
sub
mov
aad
or
into
ja
sub
push
sahf
jg
scas
jbe
pushf
xor
outs
retf
fiadd
leave
pop
xchg
sub
mov
push
pusha
dec
pop
addr16
movs
inc
mov
sub
call
sbb
and
inc
cld
scas
jp
ret
cmc
jnp
dec
pushf
push
test
dec
and
aad
lds
into
jbe
sub
xchg
sub
cld
jns
xor
dec
sub
jb
retf
cmp
outs
jl
cmp
push
push
push
sahf
or
jp
in
mov
xacquire
inc
push
push
jb
sbb
push
pop
cmps
xchg
mov
pop
or
or
es
leave
mov
js
fiadd
mov
lods
popa
adc
das
repnz
pop
test
push
jb
adc
jmp
pusha
call
sub
daa
inc
cmp
pop
jmp
adc
push
pushf
movs
or
test
xchg
imul
fsub
jle
(bad)
in
add
jb
jnp
out
dec
stos
cmp
or
sub
sbb
push
dec
sahf
test
mov
mov
movs
mov
cmp
dec
ds
jb
pop
xchg
in
ret
push
daa
addr16
jecxz
cmp
jmp
fnstcw
adc
je
xor
cmp
aad
test
adc
mov
cmp
nop
pushf
stos
adc
push
and
je
popf
pop
mov
rcr
and
(bad)
jnp
ja
jnp
dec
xor
mov
pop
push
xchg
stos
mov
ins
in
repnz
mov
pop
stos
fsub
out
loope
pushf
int3
cmp
retf
rcr
xor
pop
pushf
cmp
arpl
retf
xchg
xchg
ss
add
leave
iret
arpl
repnz
sub
add
loope
add
sbb
inc
mov
mov
data16
inc
inc
push
xchg
sahf
xchg
pop
push
mov
fild
aaa
mov
push
push
cmc
dec
imul
xchg
pop
sbb
jno
sub
pop
pop
or
int
add
ffreep
xor
jb
mov
fdivrp
aas
mov
cmps
push
jbe
ficom
xchg
sub
sbb
gs
jmp
jge
adc
and
dec
and
leave
push
mov
dec
pop
sahf
inc
scas
xchg
fs
sbb
sub
mov
jp
sub
mov
add
movs
jb
sub
jae
add
movs
dec
js
pop
add
jno
xchg
ins
jmp
ins
test
pushf
in
mov
dec
push
loop
out
jb
cld
mov
add
sbb
adc
and
popa
pop
mov
(bad)
pusha
test
shl
sbb
inc
mov
mov
sub
lods
add
pop
aam
mov
popf
mov
mov
or
enter
inc
fcmovb
cmp
sub
ret
retf
push
enter
or
xchg
xchg
out
out
cmp
jo
scas
mov
pop
ja
mov
jge
fdivr
gs
les
test
mov
pushf
in
popf
sti
lds
shr
jge
inc
les
mov
push
xchg
vrsqrtss
mov
inc
xor
pop
leave
push
xchg
test
pop
mov
jbe
gs
popf
leave
push
nop
movs
repnz
adc
mov
scas
push
fadd
popa
pop
xchg
(bad)
mov
dec
call
pushf
cmp
cmp
shl
dec
movs
add
ins
jnp
sbb
cwde
cmps
ss
and
push
push
repz
jmp
xor
and
mov
push
xor
cli
lds
movs
cdq
cmps
sahf
ds
neg
mov
pop
retf
xor
sbb
xor
dec
jecxz
daa
mov
mov
adc
inc
push
sub
xchg
add
rol
fisttp
sbb
hlt
xor
loop
push
pusha
cmps
lods
and
pop
inc
cmp
sub
cmp
retf
jmp
imul
and
dec
push
mov
xchg
shl
(bad)
xchg
cmp
push
lahf
xchg
icebp
scas
adc
(bad)
call
(bad)
cmp
loop
and
and
cmp
push
fadd
in
push
push
push
push
enter
sbb
and
imul
addr16
fwait
test
sbb
dec
cmps
es
cs
std
jmp
jne
cmp
add
xchg
jo
jp
jno
mov
xchg
sbb
or
cdq
inc
leave
std
test
jb
stos
call
push
test
push
out
jp
leave
stc
lock
clc
cdq
mov
imul
mov
call
fldcw
scas
sub
fidiv
gs
and
xlat
(bad)
shl
mov
and
mov
call
das
adc
add
mov
or
sub
repnz
pusha
xchg
in
jo
dec
jecxz
and
dec
(bad)
mov
xchg
add
mov
mov
outs
sbb
mov
add
and
dec
jns
fdiv
cmp
(bad)
loope
mov
push
enter
ret
mov
mov
hlt
jp
(bad)
in
inc
mov
pop
mov
lods
dec
mov
sbb
inc
int
imul
mov
(bad)
retf
add
adc
push
fild
mov
outs
xor
std
gs
xlat
leave
cld
lea
test
inc
je
inc
idiv
add
out
sbb
add
xchg
jo
jns
lds
adc
mov
retf
inc
cmc
mov
inc
adc
sub
dec
xor
inc
adc
and
xor
int3
(bad)
outs
mov
imul
sbb
les
loop
mov
mov
out
lds
jnp
aad
hlt
mov
jg
(bad)
mov
mov
mov
pop
sbb
push
xor
push
hlt
cmps
sub
test
dec
ror
mov
in
pop
addr16
movs
icebp
pop
push
mov
js
jne
int3
ficomp
not
cmps
mov
jg
or
cmps
and
imul
jnp
jle
pop
test
xor
pop
pop
int
test
add
frstor
scas
int3
imul
movs
gs
(bad)
push
test
out
test
fwait
xchg
pop
pushf
mov
loopne
je
ret
stc
les
movs
adc
loopne
into
xor
out
mov
mov
jle
jmp
pop
push
xor
pop
mov
and
stos
in
xchg
jmp
push
mov
cwde
jmp
xor
daa
mov
or
js
sbb
ds
push
popf
jb
xlat
in
jb
push
sub
mov
mov
xor
out
fidivr
fnsave
inc
sub
jb
pop
jnp
mov
neg
call
scas
dec
pop
gs
ret
loop
and
rcl
xchg
movs
mov
mov
inc
mov
scas
ret
mov
mov
ins
addr16
dec
popa
xor
jae
ss
fs
or
add
pop
dec
pminub
loop
xor
adc
rcr
mov
jg
std
(bad)
pop
repz
icebp
js
cwde
retf
ret
in
adc
cli
neg
jecxz
mov
cmp
jge
out
sub
xor
dec
push
sub
mov
push
pop
mov
sub
movs
js
dec
inc
sbb
pop
cmp
adc
mov
push
jmp
dec
jns
faddp
xchg
loopne
mov
jne
imul
call
dec
push
data16
push
and
fcomi
stc
xor
sub
mov
pop
ja
dec
mov
sub
jbe
and
fwait
sub
mov
push
pop
sbb
xor
neg
pop
out
ja
mov
mov
std
arpl
dec
jns
jge
push
test
mov
dec
popf
push
retf
sbb
mov
rol
adc
pop
call
jmp
or
cdq
inc
pop
pusha
ds
xchg
movs
faddp
test
jbe
mov
push
dec
jbe
dec
cmp
ror
sub
add
pop
inc
test
out
dec
sbb
sbb
jmp
rol
xchg
mov
add
popa
test
imul
jl
dec
mov
gs
shl
xchg
js
mov
sbb
ja
int
lods
xchg
cmp
jns
pop
pushf
mov
stc
sub
popf
ja
sbb
call
ins
jp
repnz
(bad)
std
ficom
pop
ret
out
mov
push
aad
int3
pop
push
aad
aas
xor
in
out
push
outs
pop
stos
dec
jo
aas
xchg
pop
dec
rcl
sub
pushf
shr
and
addr16
movs
dec
lods
je
mov
call
and
daa
mov
cmp
aaa
sub
push
gs
jl
in
test
(bad)
rcr
fsubr
repz
jmp
fwait
cli
mov
cmp
push
popa
ins
int
mov
mov
dec
push
mov
shr
jbe
dec
pushf
jne
jnp
mov
push
fdiv
cmp
sbb
or
lahf
ftst
jb
div
pop
test
push
xchg
scas
mov
pop
ins
ins
cdq
sub
enter
mov
jmp
mov
dec
jp
imul
cli
sbb
and
push
push
(bad)
retf
je
test
xchg
xchg
xchg
mov
loope
dec
pop
sbb
cmp
outs
dec
push
adc
(bad)
xor
fcmovu
scas
fxch
arpl
ja
lds
dec
hlt
outs
pop
je
int3
dec
lea
cmp
test
aad
pusha
fst
sub
push
retf
icebp
das
sub
mov
sub
xchg
jnp
sub
scas
fs
rcl
lods
sub
ret
retf
mov
dec
cmp
inc
jge
stos
dec
dec
and
lods
int3
test
(bad)
adc
xor
and
aam
setnp
call
fs
rcl
mov
cmp
add
leave
cmp
sub
ss
xchg
push
xchg
cli
aas
xchg
jmp
addr16
xor
gs
mov
ficomp
imul
test
add
xrelease
jmp
cmc
inc
mov
lea
mov
std
sahf
sub
int
mov
rcr
mov
in
pop
xchg
inc
rol
call
out
jno
test
push
loop
add
push
ja
xchg
pop
add
xor
cmp
mov
imul
xor
js
inc
mov
xor
imul
pusha
lods
(bad)
inc
jne
popa
push
fldenv
fnstenv
push
sbb
ss
js
mov
xor
sahf
popf
push
fisttp
shr
jl
mov
aaa
xor
add
cmp
cdq
pushf
pop
pop
outs
popf
mov
sub
bound
imul
push
xor
stos
push
lds
test
xchg
retf
and
popf
push
inc
fistp
mov
or
int3
push
or
mov
push
stos
adc
sub
repz
dec
call
push
inc
mov
dec
inc
mov
sub
inc
dec
xlat
cli
mov
mov
xchg
jge
popf
iret
ror
sahf
sbb
push
scas
and
push
jb
push
dec
jne
cmps
and
test
pop
adc
or
fadd
cmc
mov
push
dec
cmc
les
cmps
mov
dec
dec
pop
cdq
stos
sbb
mov
es
movs
pop
inc
inc
xor
sub
loop
mov
retf
daa
mov
jnp
das
in
or
test
jmp
xchg
in
jae
out
cdq
dec
jl
cli
sbb
in
cmp
cmp
mov
add
(bad)
pop
jle
xchg
mov
daa
cmp
push
call
lods
jp
inc
mov
xchg
pop
sahf
cmps
mov
gs
mov
xor
sub
pop
sar
xchg
pop
(bad)
dec
fcmovnu
shl
push
dec
xchg
or
xlat
sub
fidiv
mov
and
xchg
add
jecxz
jo
jmp
pop
ins
inc
mov
outs
pop
inc
test
call
out
jae
mov
out
pop
push
mov
mov
xlat
push
sub
inc
in
mov
shl
aad
pop
outs
stos
test
mov
fild
inc
cdq
mov
movs
cmps
sbb
je
ds
xor
fwait
and
sahf
xchg
stos
into
aaa
push
outs
mov
push
in
inc
ds
(bad)
lods
scas
popf
jecxz
adc
test
xor
push
inc
call
aad
sbb
xor
xchg
pop
inc
fdivr
test
add
popf
fstp
add
jno
lods
dec
push
xchg
loop
cmp
mov
shr
xchg
mov
cmps
in
inc
inc
shl
call
xchg
inc
xlat
out
fist
cld
jne
push
mov
mov
add
sbb
jle
fisttp
pop
fst
push
scas
xchg
popa
xor
adc
push
cmp
dec
aad
nop
adc
xor
mov
mov
push
dec
add
pusha
jl
pop
mov
leave
stos
push
cmps
(bad)
mov
xor
adc
push
cmp
es
outs
in
sub
dec
out
enter
cmp
add
cmp
in
out
pop
cmp
dec
jno
inc
pop
repnz
cmps
(bad)
mov
in
pop
cmp
dec
mov
mov
sar
into
mov
adc
xchg
bswap
ss
xor
popf
sub
test
fld
lock
push
push
jl
out
outs
jns
xor
jbe
jnp
stos
sbb
lds
inc
mov
js
scas
cmps
sub
inc
(bad)
dec
push
xchg
push
xchg
cmc
retf
sub
mov
mov
test
stos
push
enter
mov
cmp
adc
pop
jmp
movs
lock
jmp
xchg
imul
jae
sbb
push
xchg
dec
ffreep
mov
outs
fstp
mov
hlt
rcl
adc
iret
push
sub
gs
push
push
gs
gs
mov
and
push
cmps
pop
pop
dec
lds
popa
mov
scas
pop
cmc
push
dec
inc
push
xchg
aas
loopne
fidiv
lahf
xchg
add
sbb
rol
ret
cmp
cmps
dec
outs
jbe
push
or
or
lods
mov
xchg
mov
inc
or
mov
dec
xor
imul
loop
inc
add
ret
mov
in
in
lods
mov
cld
shr
pop
retf
test
mov
cmp
mov
lods
mov
call
jb
loop
repz
cmp
sbb
stc
cwde
mov
sti
adc
out
add
lock
aam
movs
cmp
dec
mov
sub
xchg
repnz
in
jmp
arpl
sub
data16
sbb
popa
(bad)
fisub
pop
sub
cmp
test
add
sbb
push
mov
lock
(bad)
jmp
cmp
pop
sub
mov
sar
sar
cdq
int
xor
push
jg
mov
jg
sar
(bad)
xchg
dec
test
es
int
jns
push
(bad)
repnz
cmp
stos
mov
push
push
imul
mov
(bad)
gs
mov
mov
std
jne
push
call
push
(bad)
fimul
xchg
loopne
add
mov
xchg
jno
movs
hlt
ins
arpl
pop
rcl
outs
push
in
xor
xchg
push
cmp
in
mov
mov
add
pop
or
test
shr
imul
cdq
xchg
mov
shl
(bad)
sub
push
idiv
jnp
retf
mov
push
shr
das
jns
push
ins
retf
pop
(bad)
outs
jb
mov
cmps
rcr
rcr
mov
and
add
imul
aam
and
or
or
xchg
lods
cdq
in
scas
addr16
das
or
bound
jmp
push
mov
leave
je
xchg
cmp
popf
jge
add
shl
push
fs
adc
mov
movs
cmps
push
jecxz
aas
(bad)
daa
inc
pop
push
retf
xor
lods
dec
repz
cmp
out
sub
push
dec
mov
pop
pop
xor
sbb
jbe
sub
cli
mov
push
in
aaa
and
retf
mov
call
xchg
cwde
cs
and
lahf
push
dec
jmp
and
mov
jns
cwde
dec
shr
cwde
xchg
fdiv
aas
xchg
xor
dec
sti
shr
cmp
or
in
mov
cmp
ret
cmps
ins
ja
call
or
movs
and
inc
and
cmps
cmp
cdq
jle
mov
xor
lahf
aad
xchg
lahf
retfw
push
xchg
out
and
ret
push
cmp
inc
cdq
mov
xchg
mov
hlt
jno
stos
loop
retf
loope
into
lds
stos
mov
jecxz
retf
xchg
pop
push
jb
enter
mov
or
pop
imul
or
sete
cs
jnp
jo
es
retf
int3
dec
ror
or
mov
inc
jno
sbb
sub
les
push
dec
ret
(bad)
jmp
ja
mov
cmp
arpl
stos
daa
leave
cmp
rol
mov
push
xchg
repz
jae
movs
gs
xor
adc
in
aas
cmp
add
iret
dec
push
sbb
xchg
inc
das
jb
jl
(bad)
xchg
pushf
pop
xchg
mov
repz
data16
dec
cmps
mov
xor
dec
or
nop
push
mov
inc
and
xchg
adc
daa
push
push
push
outs
cmc
cli
lock
jecxz
sub
retf
mov
mov
adc
sub
into
arpl
push
sahf
dec
and
inc
sbb
dec
mov
dec
pop
rcl
sub
shl
dec
stc
jg
mov
mov
fdivr
sbb
jmp
cmps
dec
mov
jmp
aam
mov
cmp
ja
mov
scas
fs
xchg
inc
jb
ret
shl
sub
les
inc
mov
dec
aad
repnz
iret
test
leave
lods
aaa
sbb
das
gs
jg
xchg
mov
inc
je
test
inc
cmps
es
dec
aas
mov
cmps
pushf
cmp
jmp
jns
sub
mov
and
or
shl
adc
inc
les
fs
mov
inc
and
cmc
pop
sbb
or
fist
test
xor
out
add
stos
fmul
jno
ficomp
cmp
sub
mov
pop
popf
xchg
popa
movs
xchg
retf
mul
test
out
pop
mov
jo
das
popf
cmps
xor
icebp
push
shl
mov
sub
xchg
sub
std
leave
js
ret
fsub
cmova
pop
push
sub
xchg
shl
sub
xchg
rcr
pop
leave
jne
cmps
int3
aad
sbb
push
fild
imul
mov
dec
inc
mov
xchg
or
adc
xchg
push
inc
retf
das
lods
ins
xchg
sar
push
inc
ja
pop
cmp
or
and
xchg
mov
sahf
out
in
lahf
cdq
xchg
dec
pop
xor
stc
inc
jne
mov
ret
in
push
daa
cdq
xchg
push
cmp
shr
fcom
xchg
jmp
adc
gs
add
pop
cmp
xchg
ja
ss
(bad)
out
cmp
push
test
lahf
cld
mov
pop
push
pop
cmp
outs
std
jns
(bad)
sbb
mov
arpl
loope
fadd
jmp
push
stos
push
jmp
std
jnp
mov
xor
or
push
inc
xor
push
outs
lods
xor
in
dec
jle
mov
outs
pop
or
out
mov
movs
jbe
cmp
jmp
lods
test
mov
(bad)
ret
pop
cs
out
out
imul
push
xchg
xor
adc
jae
add
in
inc
movs
push
xor
push
adc
adc
arpl
(bad)
jne
out
mov
push
pushf
and
mov
cmp
(bad)
shl
(bad)
sub
mov
mov
jg
shl
(bad)
test
or
lds
aaa
or
fistp
mov
popf
in
mov
add
or
xchg
cmps
popf
rcl
or
xchg
jmp
ret
or
retf
jmp
inc
ins
jnp
xchg
je
in
aam
mov
xchg
pushf
xchg
je
aam
dec
add
or
dec
pop
and
test
sub
cmps
retf
mov
leave
adc
fadd
xchg
cs
sahf
and
arpl
mov
cdq
or
xchg
shr
push
sbb
les
push
and
bound
pop
inc
cmp
cmp
dec
adc
xor
or
ror
clc
inc
(bad)
sbb
add
or
pusha
jne
push
loope
xchg
jbe
retf
icebp
inc
scas
pop
aad
sahf
push
mov
push
addr16
ss
scas
push
mov
fst
aas
jne
xchg
outs
movs
adc
pop
jp
mov
mov
test
mov
shr
pop
jb
sti
(bad)
icebp
cmp
in
pop
outs
mov
mov
push
push
xor
test
test
ds
retf
out
xor
repnz
sbb
aas
push
jl
inc
das
mov
stos
pop
mov
sbb
push
lods
jge
loope
retf
inc
fild
adc
retf
retf
mov
inc
idiv
cmp
push
push
cdq
mov
rcr
mov
xchg
icebp
sub
je
int3
and
inc
nop
pop
repnz
lods
mov
imul
pop
jnp
sti
retf
dec
iret
pop
js
lds
and
int3
(bad)
fdivr
inc
popa
imul
pop
lock
iret
inc
fsub
mov
repz
jb
out
jp
xchg
and
mov
pop
div
mov
bound
outs
jae
inc
jle
pop
xor
mov
push
jle
pop
repz
rcr
nop
jl
ficom
rcl
pop
mov
cmc
inc
add
mov
dec
pushf
sub
push
stos
scas
jle
jecxz
inc
xchg
out
neg
in
push
jmp
iret
out
xor
leave
mov
mov
push
je
ins
mov
sub
sub
sub
mov
xchg
mov
pop
movs
jmp
and
fst
xor
mov
cld
and
daa
inc
mov
repnz
mov
cmp
pushf
jno
fsubr
cli
ret
cs
shl
mov
pushf
dec
ss
gs
cmp
cmc
clc
inc
mov
int3
push
pop
in
cmp
enter
mov
inc
push
and
fstp
pop
mov
adc
loopne
(bad)
jnp
inc
pop
pop
je
push
in
je
pusha
loopne
nop
shl
inc
outs
lods
add
les
push
mov
fbld
jecxz
xchg
push
xchg
sub
jne
xchg
cli
mov
push
out
mov
fbstp
push
clc
adc
adc
shl
sub
dec
xchg
sbb
sub
mov
sbb
(bad)
(bad)
dec
fist
les
jns
cmc
and
jecxz
inc
loope
mov
dec
mov
jno
(bad)
in
jge
bound
and
inc
add
jp
imul
cmp
or
sbb
jle
push
into
dec
cdq
sbb
cmp
in
mov
jno
aad
in
pusha
add
mov
mov
inc
ins
cmp
jmp
jmp
ins
cwde
pop
xor
sub
dec
pushf
or
fstp
ss
mul
add
enter
jo
retf
in
mov
or
add
popa
mov
mov
mov
cs
popf
test
pop
mov
ins
pop
add
pop
movs
push
loop
sub
xchg
fisub
popa
push
xchg
(bad)
and
push
push
ins
jbe
adc
leave
xor
adc
or
bound
mov
stc
inc
loop
dec
mov
pushf
add
test
push
pop
int3
xor
inc
imul
add
jge
inc
jp
mov
movs
jae
(bad)
push
pop
movs
xor
sbb
mov
pop
enter
xor
fistp
mov
jnp
repz
iret
dec
test
imul
mov
mov
push
jl
std
icebp
jg
pop
jge
cmps
mov
pop
imul
jmp
int
outs
fcomip
das
lods
jbe
push
mov
movs
or
movd
xor
ins
sub
fmul
sbb
xor
push
dec
loope
sar
ds
inc
ror
aam
xchg
leave
stc
cmps
xlat
fxch
cmp
shl
mov
ror
sub
shl
mov
test
push
cmps
sbb
out
mov
adc
mov
xor
push
int3
jnp
mov
push
xchg
popf
das
push
in
jnp
outs
gs
dec
or
stos
pop
(bad)
cmps
loop
pop
mov
or
xlat
call
pop
imul
jmp
inc
or
mov
xchg
pop
sub
mov
pop
daa
push
xor
(bad)
rol
mov
jmp
push
push
sar
ins
jmp
jmp
mov
push
xlat
cmc
outs
mov
rcr
pop
mov
jmp
out
stos
movs
push
sub
xor
scas
mov
push
aam
push
and
ins
lods
push
dec
or
dec
and
xchg
xchg
sub
imul
sub
daa
push
popf
or
(bad)
adc
add
in
dec
mov
lods
ds
dec
xchg
dec
mov
push
and
xor
add
jns
inc
and
cmp
inc
mov
mov
cmp
jo
js
mov
outs
pop
(bad)
fist
or
push
and
xlat
mov
movs
icebp
cmp
jecxz
xchg
mov
ds
push
mov
adc
scas
dec
test
in
push
xchg
and
cmp
lds
pop
add
scas
inc
jp
jecxz
pop
fnstcw
shr
sub
pop
hlt
cwde
div
xlat
iret
int
cwde
mov
into
cmp
shl
sbb
jl
xchg
das
and
test
or
scas
sbb
dec
lock
(bad)
xchg
or
sbb
pop
test
retf
pop
mov
pop
cmc
pop
dec
aam
mov
enter
push
test
sbb
xchg
or
push
nop
add
add
sub
push
jmp
mov
fcom
mov
ins
jae
xor
inc
mov
outs
push
xchg
in
mov
hlt
push
pushf
mov
mov
xchg
ficomp
scas
sub
adc
retf
jo
pop
pop
data16
dec
dec
push
push
test
jmp
mov
sbb
cmp
imul
cmc
rcr
pop
cmps
push
es
daa
js
loope
fcmovnbe
fld
xchg
dec
aam
in
dec
inc
xchg
test
pop
je
xor
gs
pop
adc
int
test
push
push
xchg
push
mov
icebp
xor
push
imul
in
in
es
sub
mov
add
mov
xchg
pop
test
adc
push
mov
jno
dec
imul
dec
push
cmps
retf
retf
(bad)
enter
inc
xor
rcr
(bad)
pusha
xor
push
adc
sub
fs
jle
cmp
jle
(bad)
jle
aad
out
pop
lea
lods
jno
test
sbb
dec
and
(bad)
test
and
dec
and
cs
mov
rol
shl
dec
pushf
ret
mov
stc
aam
xchg
jbe
xchg
push
fwait
mov
scas
pop
fnsave
mov
add
das
xor
shl
ss
xor
out
adc
sub
sub
mov
retf
and
inc
jb
inc
aam
inc
in
cmc
mov
mov
repnz
or
fist
in
loope
mov
xchg
pop
push
popf
hlt
not
pop
cmp
in
mov
push
mov
cwde
or
pop
mov
or
mov
sti
lods
push
sbb
mov
ja
test
cld
out
movups
call
(bad)
pop
cmc
xchg
mov
adc
jmp
cld
pop
mov
in
xchg
lods
mov
pop
in
cmp
in
jns
imul
in
ins
mov
or
cwde
cwde
imul
mov
xchg
imul
push
sub
jne
cmc
in
int3
mov
leave
mov
mov
cli
mov
inc
(bad)
pop
pushf
sub
int3
or
push
jle
sub
push
push
and
cmp
cmp
mov
push
mov
imul
push
sbb
loope
fcomip
mov
pushf
mov
dec
bound
add
inc
pop
retf
xchg
sub
and
test
sub
pop
fcom
movs
mov
dec
lods
jns
iret
xor
cmp
adc
mov
lods
lea
or
call
mov
push
cmc
xchg
fs
xor
pop
cmp
test
jne
xor
jb
push
sub
stos
sub
xchg
jnp
clc
cmp
jp
sub
stos
test
jp
and
push
and
xchg
mov
lea
or
sahf
mov
dec
lahf
and
(bad)
xchg
pop
bound
pop
pop
jmp
fsubr
in
jno
imul
jp
cdq
into
xchg
pop
mov
retf
jl
dec
dec
dec
int
call
jns
mov
repnz
imul
(bad)
ror
mov
int
add
or
jle
cmps
sub
test
pop
js
leave
push
sub
movs
nop
pop
jmp
jecxz
pushf
mov
stos
rcr
xchg
retf
mov
repz
cmp
adc
mov
pop
and
out
movs
jp
dec
jb
xchg
pop
xchg
sub
mov
mov
and
fidivr
adc
sbb
dec
pop
push
push
jmp
lods
aas
pop
jle
cld
push
pop
xor
movs
aaa
or
add
rol
clc
pusha
aam
(bad)
jle
scas
ret
(bad)
mov
mov
fs
push
scas
sub
movs
leave
xlat
sbb
push
or
mov
test
sub
arpl
xchg
popa
ins
inc
add
xchg
(bad)
das
(bad)
(bad)
ss
push
call
sar
cli
clc
xor
in
jnp
aad
push
test
and
mov
cdq
inc
jns
and
adc
jo
fstp
pop
push
test
movs
push
xchg
mov
mov
or
pop
sbb
mov
retf
arpl
jbe
jne
dec
lods
ins
pop
mov
xchg
div
add
xor
mov
xor
cmp
bnd
lea
ss
stos
push
test
shr
adc
mov
inc
xchg
pop
mov
push
ins
nop
pop
jp
fdivr
add
fld
adc
add
push
or
jno
xchg
adc
pop
adc
jle
idiv
sahf
(bad)
mov
mov
jp
scas
push
mov
and
mov
add
int3
in
aas
dec
cwde
push
mov
cmp
or
xchg
jbe
sbb
push
lea
shl
xor
xor
pop
test
xor
push
cmp
in
cdq
std
bound
push
sbb
and
ffree
dec
adc
psrlw
test
dec
and
or
out
sbb
dec
or
push
sbb
xor
sub
popa
xchg
dec
cmp
and
xchg
push
sar
dec
sbb
xchg
cmps
mov
cs
and
jmp
dec
sub
pop
and
data16
sbb
push
xor
mov
pop
inc
xchg
xchg
retf
push
or
mov
adc
xor
jmp
mov
jne
sbb
std
and
dec
rcr
or
mov
dec
push
inc
(bad)
jmp
test
jp
movs
ins
lods
test
test
mov
shl
loope
xor
cdq
push
mov
xor
mov
adc
into
push
adc
push
push
jmp
cdq
sub
push
popa
cmp
sub
mov
popf
push
lea
mov
xchg
cdq
fwait
gs
in
lods
or
cli
es
jne
cs
fbstp
and
cmps
out
xchg
dec
jns
jo
xchg
gs
cwde
loope
sub
sbb
xchg
dec
jb
test
xchg
add
lods
leave
sub
mov
dec
das
inc
jae
ficom
xchg
aam
xchg
mov
jp
movs
stos
push
adc
sub
int3
lahf
mov
dec
jb
jo
in
or
sti
mov
cwde
push
ins
or
jle
je
fst
out
iret
retf
test
sub
sbb
ja
dec
lahf
push
ins
mov
jge
shl
inc
cwde
out
int
popa
push
pop
mov
xchg
lock
mov
xor
stc
repnz
aad
inc
pop
pop
cli
jae
sub
fisubr
dec
xchg
and
fnstsw
stc
std
out
mov
ja
sub
mov
sti
movs
mov
jmp
mov
orps
push
sbb
dec
movs
xor
adc
ss
idiv
jg
repz
call
shl
sbb
imul
xor
xor
jge
push
add
mov
ret
out
cwde
inc
dec
push
fadd
in
or
push
and
add
fwait
lds
or
(bad)
hlt
out
mov
adc
mov
cmp
pop
add
jno
mov
jmp
(bad)
cmp
(bad)
repnz
pusha
fstp
xor
ins
inc
add
retf
es
stos
dec
jno
cwde
(bad)
pop
jb
and
aad
jbe
mov
cwde
pop
sar
gs
push
mov
push
pop
gs
xchg
das
sub
leave
dec
mov
lods
mov
outs
or
lods
pusha
aaa
dec
(bad)
cmps
or
inc
test
pop
dec
lds
mov
cmp
mov
neg
push
aam
(bad)
loopne
add
repz
and
ins
fdiv
pop
fsub
add
aaa
ficomp
adc
xchg
jbe
mov
scas
xor
push
dec
fnsetpm(287
mov
sub
dec
das
(bad)
int3
jb
(bad)
popf
sub
aad
sub
scas
push
data16
pop
jne
sbb
ins
sub
mov
popf
sub
in
fiadd
lds
pop
pop
and
cmp
loope
(bad)
ret
fnclex
scas
mov
mov
mov
jno
push
mov
scas
fstp
ins
mov
in
retf
lds
mov
leave
shr
sbb
sbb
or
xchg
inc
add
in
xchg
mov
sub
lahf
call
jecxz
mov
stos
mov
movs
xchg
ds
hlt
fcmovbe
jae
clc
lods
(bad)
xchg
cmps
xchg
sti
(bad)
sbb
push
movs
in
popf
sub
jae
sub
and
push
scas
aaa
mov
fstp
jg
loope
int3
push
xchg
mov
outs
ja
mov
shl
idiv
push
dec
sub
mov
popf
fwait
mov
pop
inc
lods
aad
add
jp
popa
ins
mov
ins
lods
and
loope
jno
test
mov
ss
xchg
retf
and
imul
retf
fstp
dec
mov
push
jb
mov
dec
fwait
sahf
enter
push
ins
inc
push
sub
inc
or
add
call
sbb
jmp
loop
jns
inc
xor
adc
and
in
std
mov
out
mov
test
ret
xchg
js
mov
sbb
dec
fcom
in
das
daa
cmps
sub
(bad)
lds
ror
retf
dec
sbb
inc
mov
popa
movs
loope
ins
shl
jg
sub
or
rcr
shl
fwait
js
mov
xchg
test
retf
cmp
push
outs
dec
mov
loope
sub
or
cs
sbb
push
pop
call
std
xor
jne
sub
repnz
clc
sub
call
xor
scas
push
mov
ror
fwait
mov
stc
inc
push
push
push
int
xor
sbb
inc
sub
es
sub
push
test
out
or
sub
xor
hlt
movs
icebp
dec
repz
shr
and
inc
loope
mov
int3
sahf
test
ins
cmp
aam
push
into
cdq
int3
daa
or
mov
push
(bad)
inc
push
loope
add
or
retf
ds
test
test
mov
aad
jns
loope
ret
mov
xchg
les
test
neg
mov
popa
pop
or
test
xchg
aas
retf
xor
cmp
lea
retf
rol
addr16
cwde
popa
imul
dec
stc
ins
ins
mov
dec
mov
push
pop
sub
mov
ret
xlat
push
mov
mov
jge
mov
ret
pop
push
push
stos
pop
mov
test
fmul
int3
scas
pushw
loop
pop
pop
dec
and
sub
out
pop
cmp
lock
jle
ins
icebp
pop
dec
mov
sub
es
out
jecxz
dec
push
push
in
push
xor
in
pop
mov
cs
rep
push
jae
xlat
sbb
inc
popf
or
add
lods
mov
or
iret
push
mov
jg
xchg
mov
pop
test
pop
add
sub
jb
shr
push
test
shl
out
aam
je
dec
jae
mov
call
aam
mov
sub
mov
pop
sub
lahf
add
stos
push
xchg
push
add
inc
js
je
rcl
loopne
dec
mov
xor
sahf
icebp
popf
shr
stos
xchg
lods
shl
repz
lock
bound
aam
fsubr
pop
int3
rcr
sti
xor
mov
mov
cmp
mov
jl
sub
dec
out
mov
adc
int3
jp
xor
or
aas
rol
sar
cmp
xchg
pop
fistp
fsubrp
out
(bad)
ins
jl
repnz
push
pop
gs
fdivp
sti
scas
outs
jbe
pop
dec
mov
ins
add
(bad)
(bad)
arpl
dec
fldcw
in
ss
push
bound
ret
mov
and
jae
cmp
test
dec
or
mov
or
mov
cs
cwde
hlt
jmp
rcr
inc
mov
into
push
fs
push
sub
sbb
push
inc
int
push
xchg
ja
test
adc
sbb
mov
pop
not
sahf
jecxz
mov
jecxz
pop
cmps
(bad)
int
loop
dec
stos
sbb
mov
and
(bad)
dec
adc
das
xchg
or
retf
xchg
jg
jns
jecxz
out
orps
jg
test
cmp
adc
repz
xor
or
aaa
out
in
je
add
pop
adc
push
cmps
movs
mov
retf
scas
sub
mov
mov
dec
jns
or
and
push
(bad)
pop
shl
mov
test
retf
jl
imul
shr
cmp
dec
fnsave
out
jnp
jmp
dec
arpl
cmps
fistp
add
icebp
add
dec
adc
fsub
imul
js
mov
icebp
push
xor
sub
cmp
inc
les
xor
push
fnstenv
std
(bad)
cmc
addr16
pop
ret
(bad)
(bad)
cdq
sbb
(bad)
popa
jl
mov
dec
bound
add
or
es
mov
ret
(bad)
popf
movs
das
addr16
inc
pop
loopne
cmps
mov
mov
cmc
jg
(bad)
fsubr
push
cmp
add
pop
cmp
sub
das
lods
dec
mov
ret
xchg
push
out
pop
or
sahf
stos
into
cmps
pop
mov
mov
jbe
mov
imul
leave
(bad)
or
jbe
sub
push
add
in
cdq
add
push
aad
push
inc
mov
push
xchg
xchg
mov
xor
push
sub
je
out
mov
and
mov
xor
outs
sti
scas
rcl
cmp
xlat
aad
pop
sahf
retf
into
jns
test
out
fsubr
mov
xchg
pop
test
fist
sub
mov
call
pop
xor
mov
sahf
pop
mov
shr
mov
call
xchg
cld
dec
repz
dec
push
mov
add
add
repnz
shr
jl
add
cmps
pushf
push
xor
sub
sub
pop
cwde
push
dec
xchg
in
ret
(bad)
out
cmp
stos
and
mov
inc
(bad)
sub
out
cli
jmp
xor
xchg
es
xor
mov
xor
int
lahf
gs
adc
and
mov
out
dec
xor
push
out
ficomp
dec
les
test
push
mov
ror
or
clc
sbb
popa
xchg
test
das
(bad)
rcr
mov
les
or
and
jbe
sahf
and
sbb
dec
mov
jbe
lds
aam
ins
mov
repnz
movs
fisttp
push
or
pusha
loopne
dec
xchg
ds
jb
pop
mov
or
idiv
add
pushf
jl
jecxz
mov
xchg
clc
sbb
mov
aas
inc
lods
stos
pop
enter
sbb
enter
pop
dec
fwait
das
enter
ret
or
cmp
xchg
leave
retf
js
aas
jg
shr
and
xor
icebp
jnp
xchg
jecxz
jae
push
scas
jne
xchg
xchg
or
mov
mov
cmp
jg
adc
sub
jnp
mov
sti
xchg
adc
pop
dec
aam
xor
dec
mov
lahf
shr
sub
bnd
sub
jmp
mov
rcr
(bad)
div
adc
lea
lods
fcom
scas
rcr
dec
(bad)
pop
pop
sub
ficomp
loopne
ins
push
xor
aas
mov
frstor
ds
test
sbb
sub
or
stos
aam
or
inc
test
out
scas
imul
jae
int
push
gs
pop
imul
xchg
sub
and
xchg
test
int3
xor
dec
mov
cmps
lods
mov
cmc
imul
aad
sbb
rcr
je
push
mov
pop
inc
mov
xor
test
push
xchg
daa
gs
or
and
leave
cmps
retf
mov
mov
daa
out
pop
push
cdq
sub
lds
mov
movs
cli
outs
jb
aam
ins
inc
push
pop
sub
xchg
sub
(bad)
out
mov
jb
cmps
dec
inc
stos
jae
adc
mov
pop
xor
jns
jecxz
loop
into
(bad)
shr
cmp
lock
pop
retf
or
gs
es
hlt
push
xchg
aaa
xchg
imul
out
sub
ror
mov
in
mov
call
fucomip
cmp
xchg
mov
pop
das
out
jb
xchg
push
jg
push
mov
ret
xchg
jb
mov
test
pushf
xchg
pop
pop
inc
or
xchg
sub
popf
mov
pop
jae
into
push
jg
fcmovnu
div
pusha
mov
lahf
cdq
fild
push
loop
ret
call
aad
sbb
mov
aad
scas
enter
dec
stc
sar
sbb
cld
mov
mov
jl
cmps
cmc
push
lods
cli
gs
inc
lods
xchg
imul
jl
add
repnz
push
sub
xlat
aad
repz
xor
dec
lods
push
jo
out
sbb
aas
jno
push
pop
clc
(bad)
and
cmps
(bad)
dec
js
fnstenv
cmc
(bad)
jmp
retf
pop
xchg
jae
adc
mov
jl
arpl
jo
push
and
gs
jge
stos
aas
lods
into
fcom
out
arpl
mov
push
cmp
mov
adc
or
nop
sahf
mov
push
and
pop
mov
rol
or
outs
mov
lahf
push
lods
xlat
test
or
jno
adc
ds
mov
fnstenv
int3
out
in
hlt
popa
sbb
cmps
push
pop
dec
mov
xor
lock
mov
movs
cmps
sbb
jg
cld
pop
dec
imul
cdq
gs
fsub
dec
mov
jle
and
movs
sub
xchg
dec
mov
push
push
fs
jbe
aad
shr
jno
test
sahf
loop
outs
in
jnp
mov
ja
jge
push
lods
sub
aam
pop
push
mov
ret
leave
or
sbb
loope
loopne
arpl
and
push
in
xchg
popa
inc
pushf
add
pusha
or
fs
movaps
sti
mov
mov
pop
dec
in
ret
mov
jnp
lds
fwait
xchg
outs
mov
inc
retf
outs
or
ror
xlat
sub
push
jle
sub
pop
inc
dec
iret
movs
and
and
adc
std
add
test
mov
(bad)
mov
fmul
pusha
add
xchg
push
test
cmp
hlt
test
imul
sbb
fcomp
adc
mov
scas
push
mov
lds
scas
scas
pop
js
jge
jl
shl
aaa
into
fnstenv
repnz
out
pop
in
dec
cmp
sbb
cdq
sub
dec
xchg
test
inc
test
inc
jne
imul
pusha
aam
add
add
in
mov
or
je
sub
add
jmp
ja
sbb
mov
inc
jb
xchg
ds
scas
in
in
ror
push
fild
push
test
(bad)
dec
mov
shr
dec
ja
(bad)
sbb
push
rcl
cwde
repnz
inc
shl
ret
jb
mov
sbb
out
jge
cmp
dec
retf
jl
push
pop
dec
lods
pop
and
sub
lods
add
sbb
cmp
inc
rcl
cmp
push
xchg
mov
call
pop
sbb
ja
sub
fbstp
pushf
or
std
and
mov
call
mov
xor
push
ror
add
inc
addr16
xor
xor
repz
popf
xor
out
movs
pop
ins
xchg
mov
nop
je
mov
mov
xor
test
leave
mov
cmp
sar
sti
jns
rcr
fadd
and
daa
scas
jno
(bad)
mov
push
push
test
fld
mov
sub
or
add
inc
xchg
cli
nop
xor
test
jns
mov
xchg
pop
sbb
mov
icebp
push
(bad)
or
outs
movs
in
das
iret
iret
iret
xchg
jae
mov
push
pop
adc
pop
mov
inc
jae
test
aam
scas
mov
outs
enter
dec
mov
gs
jno
and
xchg
pusha
pusha
(bad)
imul
push
shl
inc
in
sbb
div
xor
cwde
bound
scas
(bad)
sti
cmps
out
mov
lods
pop
ret
imul
and
test
mov
push
fwait
mov
and
mov
addr16
mov
mov
inc
in
fwait
pop
cmp
fiadd
mov
xchg
js
mov
retf
jecxz
push
pop
cld
and
ds
pop
and
mov
push
jbe
imul
jae
mov
inc
pop
jns
and
repnz
ret
mov
cmp
rcr
xchg
sub
or
scas
(bad)
cli
iret
mov
mov
sbb
mov
push
movs
cmp
shl
cmp
(bad)
push
sbb
js
jecxz
mov
call
xchg
jbe
in
xchg
push
shl
in
ret
loop
aas
xor
shl
out
loope
push
xchg
das
cdq
imul
xchg
sub
sub
xchg
cmp
(bad)
popf
stc
pop
sub
cli
cs
adc
in
cld
cld
sbb
inc
xchg
aad
(bad)
fistp
jp
mov
jb
inc
and
in
push
movs
repnz
je
xchg
xor
(bad)
or
repz
call
inc
jnp
pop
xor
iret
dec
add
pop
imul
ja
inc
sbb
sub
lahf
cmp
test
jecxz
inc
pop
nop
scas
mov
scas
in
mov
sub
jl
xlat
or
es
outs
test
bound
rcl
mov
push
add
sti
lock
inc
pop
mov
mov
in
fs
xor
add
adc
pop
pushf
and
lods
cmp
inc
movs
cmps
out
jmp
aam
xchg
fs
add
js
mov
push
dec
cmc
out
jle
push
cmc
xor
loop
jg
jg
xchg
arpl
stos
sbb
lock
push
mov
in
ficom
shr
sub
pop
and
leave
and
sti
mov
ret
cdq
sti
cmp
retf
sbb
fsubrp
imul
jmp
jecxz
or
mov
cmp
jnp
out
mov
pop
pop
je
mov
dec
lods
int
stos
push
mov
dec
dec
jne
push
pop
cmps
and
push
jae
test
retf
imul
ret
cmp
bound
dec
ret
push
outs
xor
cmp
clc
sbb
ja
xchg
xchg
movs
je
cmc
clc
fwait
lahf
mov
(bad)
or
adc
jg
and
int3
pop
jbe
shl
int3
dec
into
daa
sahf
jns
repnz
xor
add
(bad)
inc
fldenv
pushf
jecxz
hlt
test
into
shr
jno
cmps
and
retf
inc
xchg
pop
pop
push
cs
add
int
xchg
mov
jp
fwait
dec
aad
cmps
xlat
xor
xchg
call
fiadd
jge
(bad)
fs
push
shl
cmp
sahf
cwde
mov
xlat
mov
jns
ret
or
dec
xchg
arpl
pop
(bad)
jp
sti
cmp
and
xor
mov
test
pop
sahf
mov
cmp
fcom
repnz
add
dec
movs
(bad)
cmc
mov
hlt
mov
push
jmp
mov
sub
jg
mov
cmp
sar
repz
inc
int
xchg
push
hlt
jp
mov
xchg
(bad)
loope
push
pop
fisttp
push
xor
xchg
fimul
mov
repz
outs
mov
das
mov
cli
sar
jge
mov
out
ficom
stos
icebp
(bad)
dec
loop
pop
cmp
fist
xor
enter
dec
push
jmp
cmp
push
adc
mov
xadd
dec
xchg
mov
sub
mov
arpl
pushf
push
icebp
inc
mov
xor
dec
cmp
xor
inc
sub
and
popf
fidiv
(bad)
add
les
jb
push
mov
mov
retf
mov
cmp
je
mov
mov
push
(bad)
cmps
repnz
lds
(bad)
es
xchg
xor
add
imul
repnz
adc
sbb
and
push
jge
cwde
int
mov
loope
mov
push
into
sbb
fadd
xor
fst
xchg
(bad)
pushf
pushf
test
movs
xchg
and
out
sbb
arpl
das
and
popf
loope
retf
jmp
dec
pop
test
jae
push
in
xlat
shr
retf
int3
dec
sub
xchg
cdq
fild
xchg
loopne
clc
mov
scas
mov
(bad)
loope
stos
dec
push
pop
lahf
xchg
in
enter
(bad)
aad
sahf
pop
in
lods
inc
aam
add
mul
mov
lahf
push
dec
int3
sub
pop
sti
fwait
int
mov
je
sub
jle
xor
scas
mov
loop
int3
lea
jecxz
fsin
inc
fs
adc
inc
cdq
mov
das
dec
mov
ret
mov
mov
inc
mov
je
push
jl
jmp
rcl
inc
xor
(bad)
pop
push
jle
sub
retf
(bad)
hlt
mov
jmp
add
ss
push
jnp
ins
and
xor
rcl
ret
add
xor
sub
push
pop
pop
lea
xchg
movs
dec
test
out
mov
lock
jg
in
pop
lea
loop
sub
mov
sbb
mov
arpl
test
pop
cmp
cmps
fist
pop
pop
xchg
push
inc
or
jo
and
fnstenv
test
cmp
cmps
test
ins
clc
hlt
xchg
pop
(bad)
xchg
repnz
dec
arpl
mov
in
xchg
loope
jne
lock
out
mov
pushf
lock
(bad)
fwait
jle
aam
and
adc
dec
jp
repnz
push
sub
add
ins
mov
test
stc
inc
adc
jmp
cld
xor
mov
mov
(bad)
mov
aad
(bad)
jg
ja
fwait
enter
(bad)
out
jbe
cwde
leave
les
xchg
add
mov
mov
std
ret
jp
inc
ss
or
cmc
ins
push
out
inc
mov
ret
scas
push
sub
scas
arpl
repz
pushf
mov
clc
call
adc
clc
mov
adc
imul
dec
push
lock
(bad)
xchg
out
fcmovne
inc
inc
cmp
aas
adc
xor
cld
lahf
pop
xor
fcom
or
leave
jne
cmp
bound
mov
cs
out
mov
mov
movs
addr16
ret
jge
push
push
xlat
push
repz
xchg
std
int3
cmps
rcl
das
aad
sub
push
fbstp
daa
das
xor
xor
mov
mov
or
lods
inc
mov
(bad)
loopne
(bad)
test
push
fs
test
cmp
mov
mov
movs
test
out
push
jmp
push
xor
movs
mov
ds
or
fcmovnbe
mov
xchg
adc
imul
inc
inc
gs
sub
cs
push
stos
jae
sbb
sbb
repz
popa
test
xchg
jmp
or
inc
mov
stos
add
mov
jns
mov
pop
fcmovbe
pop
jne
in
xchg
mov
aaa
(bad)
out
fdivr
sub
push
mov
xor
mov
pop
mov
mov
push
ret
push
mov
xlat
or
push
test
aam
cmp
jl
sub
hlt
shr
retf
mov
or
mov
scas
jbe
aaa
push
test
cdq
mov
call
sub
jno
jae
add
sub
je
xor
jle
les
cmc
or
cld
mov
cmp
ins
cmp
imul
cdq
pcmpgtw
push
push
fld
and
(bad)
clc
into
push
jnp
inc
leave
mov
(bad)
scas
jbe
jbe
call
ret
xor
jne
inc
out
or
sbb
jb
push
xchg
sub
sbb
inc
sbb
inc
mov
test
mov
xchg
movs
add
or
into
cmp
xor
pop
fld
jle
daa
sub
ss
arpl
pushf
inc
push
movs
mov
in
cmps
lahf
add
mov
xor
dec
jb
sub
sub
cld
push
ins
or
push
fmul
jmp
dec
jb
aaa
xor
cmps
push
mov
push
sbb
(bad)
mov
mov
push
arpl
gs
iret
jae
(bad)
dec
in
movs
cmps
pop
mov
cwde
add
arpl
jmp
add
loop
sub
fisttp
sub
inc
dec
dec
shl
int3
clc
test
in
jnp
popf
cdq
mov
sub
push
cmp
or
daa
push
jmp
xchg
mov
push
lods
in
sahf
(bad)
aad
test
aad
out
pop
rep
test
inc
clc
add
dec
movs
or
pop
or
ret
ds
fdiv
(bad)
push
int
fidiv
push
retf
jns
ret
add
cmp
dec
ret
cmps
addr16
push
in
aaa
sub
mov
ret
cmp
mov
mov
outs
dec
mov
sbb
mov
sbb
clc
(bad)
fdivr
stos
sub
iret
aad
push
cmps
aas
cmp
inc
xchg
aaa
(bad)
push
or
arpl
gs
push
cs
xchg
cmps
mov
test
or
movs
je
or
movs
jb
cmc
xor
iret
dec
or
leave
xor
jo
lds
lahf
lods
adc
ret
mov
js
call
mov
es
jmp
sbb
cmp
pop
mov
xchg
or
int3
rcr
stos
push
jns
fcmovu
pop
fild
in
xor
repz
cmp
not
mov
popf
data16
sub
shl
into
cmp
pushf
lahf
or
jmp
jo
mov
js
aam
sbb
mov
stos
das
push
stos
hlt
xlat
movs
pushf
dec
xlat
cs
jl
cmp
in
sub
repz
fiadd
or
std
push
outs
xchg
jmp
int3
cmps
pop
or
jns
jg
push
jmp
fs
(bad)
scas
xor
mov
push
sub
dec
dec
aas
and
add
jge
dec
call
xchg
enter
popa
push
mov
movs
mov
xchg
push
xor
aas
pop
pop
outs
cmp
shr
xlat
test
pop
push
(bad)
movs
jnp
jb
adc
push
sti
dec
push
add
dec
or
pop
jns
ret
les
dec
mov
imul
jge
imul
loopne
add
shl
inc
pop
shl
jmp
push
fidivr
jo
outs
scas
dec
push
scas
mov
pop
mov
xor
int
push
dec
add
dec
dec
repnz
and
pop
xchg
mov
leave
mov
out
pop
inc
pushf
push
ja
lods
jge
xlat
dec
sti
cmp
push
int
adc
dec
push
xor
in
mov
jle
out
imul
cmp
add
(bad)
sbb
jle
daa
push
add
cdq
mov
sti
out
add
ins
cmps
lahf
arpl
test
pop
xor
gs
test
xor
sbb
pop
push
daa
jg
repz
push
ds
lock
int3
mov
(bad)
or
or
fldenv
push
mov
cdq
and
xchg
arpl
pop
loop
les
hlt
ds
out
movs
out
aam
xchg
sub
xlat
xchg
lahf
ja
jne
adc
add
or
adc
push
cmp
dec
sub
adc
not
lahf
mov
int3
icebp
xor
lahf
jns
xor
mov
cmp
mov
push
pop
sub
frstor
aam
int3
mov
inc
xchg
add
mov
arpl
loop
mov
mov
fistp
cmps
hlt
daa
fldcw
mov
pop
mov
in
mov
cdq
dec
aad
mov
pushf
push
xor
jae
pushf
add
int3
mov
test
push
jp
pop
retf
movs
rol
in
mov
(bad)
pop
in
cwde
inc
sub
jns
push
outs
fwait
add
cmp
ins
movs
and
mov
push
push
mov
ror
call
loope
lods
pop
inc
pop
ficomp
jno
mov
dec
sub
cmc
or
fmul
jno
cdq
je
movs
xchg
dec
xor
jle
fbstp
mov
cmp
dec
and
dec
mov
stos
das
adc
cmc
test
push
scas
dec
jle
push
stos
shl
fwait
ins
xor
xchg
aam
test
add
pop
jne
xor
ret
cmps
sub
outs
daa
outs
fwait
add
aad
xor
inc
ss
push
aad
(bad)
mov
into
xor
inc
int3
jmp
sub
into
xchg
pop
add
test
in
mov
sub
lods
sbb
iret
and
movs
xor
ins
pop
movs
jne
or
adc
push
adc
sti
cmps
loope
(bad)
xor
inc
mov
cdq
push
push
mov
bnd
dec
daa
cmp
cmp
scas
push
inc
movs
retf
movs
dec
mov
outs
mov
inc
pop
push
xchg
cmp
outs
inc
int3
inc
ja
sub
mov
test
push
(bad)
in
xor
pop
bound
out
aam
or
inc
dec
bound
cmp
or
cmp
out
and
cmp
cmps
xchg
jmp
jne
sbb
dec
lock
cmp
mov
jmp
ins
mov
dec
mov
out
dec
(bad)
sub
iret
xchg
inc
pop
mov
mov
mov
out
dec
scas
jno
daa
mov
dec
xor
add
iret
and
movs
sbb
sahf
icebp
xchg
ins
inc
xchg
sub
aam
sbb
loop
les
cmps
pop
mov
imul
cmp
mov
int3
ins
(bad)
iret
mov
adc
out
jns
fnstsw
pop
push
in
aas
xchg
or
ss
repnz
sbb
cs
ror
adc
cwde
ret
mov
dec
inc
and
movs
arpl
xchg
jnp
aad
push
aad
dec
add
sub
out
retf
adc
mov
sbb
push
xor
clc
push
cmp
rcr
sbb
icebp
push
mov
mov
or
push
loopne
loop
rol
pop
push
sub
aad
je
dec
cmps
add
inc
inc
stos
dec
stos
je
cmp
test
ins
fild
fs
aas
xchg
pop
jmp
sbb
mov
sub
mov
sar
mov
mov
popf
push
into
pop
fs
jne
das
sub
or
mov
movs
(bad)
movs
les
retf
lods
xchg
lods
lahf
dec
movs
ins
fild
xor
mov
xlat
imul
jp
popa
pop
ss
inc
(bad)
loopne
imul
or
bound
cmp
or
bound
sbb
cmp
(bad)
jmp
(bad)
aam
(bad)
out
imul
cmps
stos
xchg
push
loope
cld
xchg
nop
mov
dec
dec
adc
push
out
arpl
push
scas
(bad)
popf
inc
jbe
push
shr
aaa
pop
xchg
lods
dec
and
lds
sub
dec
xchg
iret
stos
mov
sbb
(bad)
jnp
xchg
iret
mov
into
in
sahf
mov
pop
mov
dec
sub
out
test
xchg
inc
mov
cs
dec
mov
add
in
add
sbb
dec
ins
dec
jmp
stc
mov
sbb
jle
scas
mov
vmread
icebp
inc
test
ins
pop
cmp
aas
xchg
aaa
movs
dec
push
std
mov
jns
sub
jp
jge
enter
aad
movs
dec
movs
ins
push
cmp
mov
scas
sub
(bad)
lods
neg
mov
xor
jp
mov
lods
leave
retf
retf
scas
repnz
mov
aas
mov
push
push
loop
aam
lds
icebp
sahf
mov
loop
retf
outs
hlt
mov
lea
sub
adc
inc
xor
les
(bad)
(bad)
adc
test
into
pop
and
xlat
mov
lods
jmp
lock
je
push
es
fidivr
ds
stos
mov
inc
jne
jae
cmp
inc
nop
shr
call
cdq
test
js
outs
stos
jbe
faddp
dec
push
scas
pop
je
cmps
dec
mov
jne
pop
mov
stc
push
int
xor
cwde
or
or
add
pop
pop
sbb
dec
sub
leave
cmp
(bad)
jmp
cs
jg
loop
sbb
or
mov
loope
fwait
sbb
stos
xchg
test
movs
mov
data16
fsubr
cmp
mov
jp
cmp
aad
push
ds
fidiv
scas
sahf
inc
xor
fild
mov
push
xchg
jecxz
mov
mov
sub
or
icebp
mov
movs
popa
imul
das
lahf
loopne
jge
test
jb
aaa
aaa
les
mov
inc
dec
test
pop
cmps
push
pop
jg
ret
dec
pop
mov
icebp
pop
ret
push
sahf
adc
aas
push
pop
mov
outs
inc
jl
in
gs
mov
pop
ror
adc
test
adc
pop
cmc
jmp
daa
stos
inc
stos
fst
std
sbb
js
sbb
mov
or
das
(bad)
neg
adc
cmp
mov
retf
and
test
test
push
test
inc
in
les
jno
push
je
test
scas
retf
pop
in
retf
stos
in
test
movs
call
rol
dec
or
mov
mov
int3
fnstcw
into
sub
push
fmul
mov
out
cli
and
mov
or
xor
push
es
pop
addr16
pop
mov
test
sbb
sub
push
xor
js
loope
arpl
mov
(bad)
in
call
sub
pop
push
xchg
mov
gs
loopne
sbb
and
repz
ret
(bad)
adc
div
icebp
jle
nop
aam
sub
mov
pop
fcmovbe
jne
sub
dec
fst
cld
mov
stc
out
test
cmps
add
xor
push
mov
out
or
push
xchg
push
push
or
out
mov
sar
push
mov
jmp
iret
ins
shl
movs
(bad)
stos
xchg
push
jbe
cmps
adc
adc
jge
jl
mov
sahf
mov
rcr
js
pop
sbb
aad
je
jbe
movs
cs
rcr
outs
pop
cdq
aaa
sub
sub
ins
sbb
xor
retf
mov
xchg
das
mov
into
scas
adc
pop
jnp
(bad)
jecxz
rol
inc
adc
fstp
lahf
in
xor
pop
cs
js
js
jmp
mov
dec
scas
pop
xlat
push
clc
cwde
gs
int
test
xchg
mov
sub
int
push
ins
jne
(bad)
dec
xlat
xchg
jnp
xor
pop
hlt
repz
(bad)
fisubr
stos
cli
movs
loopne
lods
mov
and
push
xor
in
pop
xor
push
xchg
dec
mov
xor
fadd
mov
(bad)
jo
sub
push
ret
sub
lods
pop
pop
xor
shr
(bad)
ja
clc
jle
mov
mov
(bad)
popf
inc
pop
dec
xor
movs
lods
and
sub
sbb
inc
add
mov
xor
mov
mov
ins
pushf
cmps
mov
mov
mov
fwait
sub
sub
adc
xchg
in
or
cdq
test
push
sub
pop
cmp
fs
push
mov
ror
movs
push
xor
cmp
add
in
push
push
pop
inc
sti
xor
lock
dec
mov
pop
cmp
test
xchg
cdq
arpl
push
cmp
mov
jo
jne
out
jnp
(bad)
sbb
pusha
pop
push
shl
call
cmp
jmp
nop
push
jecxz
inc
push
add
and
mov
ret
jne
cwde
pop
pop
push
push
fld
punpcklwd
ret
inc
push
scas
pop
ins
ffreep
cld
ss
sbb
test
imul
in
(bad)
retf
outs
push
xor
sub
push
(bad)
cs
enter
xor
mov
cmp
out
adc
and
cmc
cmp
sar
retf
out
icebp
xor
inc
jno
mov
cmp
int3
fst
adc
mov
jp
xor
aam
cmp
in
shl
sub
cmps
sbb
seta
push
cmp
jmp
in
retf
xor
xor
mov
lds
std
sub
shl
and
movs
test
nop
nop
adc
xchg
inc
inc
pop
inc
sahf
or
lods
xor
mov
cmp
adc
push
mov
jg
fstp
xchg
push
inc
rcl
repnz
shr
push
lahf
stc
outs
test
and
xor
(bad)
outs
jbe
hlt
mov
adc
ror
pushf
addr16
imul
ficomp
xchg
push
jo
add
jp
cmp
mov
bound
xor
std
outs
loopne
cmps
gs
call
sub
xchg
nop
pop
ret
jmp
fs
fsubr
test
add
sar
jb
lock
cmp
pop
daa
pop
push
and
int
shr
mov
push
push
fdiv
jl
mov
fmul
adc
add
dec
movs
out
sub
mov
push
push
dec
or
sahf
nop
sub
ins
repnz
push
ret
movs
cdq
lods
retf
cmp
dec
hlt
add
inc
or
pushf
cli
out
mov
(bad)
jmp
xor
xchg
fisttp
movs
inc
call
dec
dec
gs
dec
lods
lods
dec
cdq
mov
push
rcl
inc
cs
jmp
mov
pop
mov
xchg
inc
outs
aam
inc
dec
adc
cwde
xchg
push
mov
push
jmp
pop
push
icebp
jl
leave
lock
imul
xchg
in
mov
sub
test
push
movs
xor
movs
mov
outs
xchg
mov
push
push
lods
cmp
fdiv
mov
or
rol
rol
push
xchg
or
mov
mov
repz
sahf
push
lods
ds
push
push
jmp
rol
pushf
inc
dec
xor
jb
push
movs
enter
mov
dec
ja
push
cmp
push
lahf
or
push
dec
bound
inc
sub
xchg
cld
sbb
retf
jns
fsub
cmp
test
jle
add
xor
mov
jb
clc
(bad)
movs
int3
ss
xchg
pop
push
bound
js
push
dec
jb
jecxz
clc
xor
mov
(bad)
xor
sub
sub
aaa
ret
movs
mov
das
push
aam
ret
scas
mov
or
sbb
add
mov
fstp
fistp
add
jbe
cmp
ret
adc
add
aas
lahf
jge
xchg
mov
xor
jo
ss
pusha
mov
xchg
mov
or
push
xlat
and
mov
xor
xchg
out
add
test
and
adc
cmp
mov
mov
(bad)
je
cmp
movs
cwde
sub
leave
shl
leave
shl
jmp
sub
and
nop
(bad)
dec
dec
mov
ins
mov
dec
ja
aas
pop
sbb
dec
fiadd
mov
pusha
inc
inc
jbe
movs
fs
pop
movs
add
jecxz
pushf
pusha
ins
jmp
mov
aaa
pop
mov
test
push
inc
xchg
sub
jae
dec
inc
in
inc
push
and
nop
loope
mov
mov
leave
xchg
cwde
sbb
add
cld
adc
xchg
aad
test
xor
sub
out
jle
arpl
xchg
cli
imul
addr16
gs
or
js
stc
sahf
add
sbb
mov
dec
push
cmps
scas
sbb
mov
pop
push
popfw
jo
es
jne
mov
push
xchg
imul
arpl
rol
dec
sahf
sub
in
int3
lods
xchg
test
clc
sahf
xor
sub
mov
ret
fidivr
lods
iret
clc
xchg
jo
mov
cmp
dec
mov
mov
inc
out
xchg
xor
cmps
rcl
arpl
dec
jae
mov
fsub
(bad)
mov
jecxz
sbb
int3
popf
test
das
repnz
out
outs
or
mov
mov
pop
lods
in
dec
gs
sti
mov
jecxz
mov
ret
mov
push
mov
in
xchg
rcr
fcmovb
mov
sub
dec
sbb
repnz
test
mov
clc
jl
mov
mov
js
iret
test
das
xchg
nop
iret
jo
das
rcr
adc
movs
stos
mov
xchg
fs
data16
sbb
dec
sbb
cmp
test
xchg
xchg
xchg
push
fidivr
sbb
ins
adc
fldcw
retf
cmps
hlt
dec
out
mul
fnclex
jns
stos
sbb
lds
add
je
ja
movs
push
scas
cmp
inc
push
xchg
add
in
daa
xchg
xor
shl
dec
popa
ret
mov
pop
addr16
push
out
and
rol
pusha
jae
add
imul
jne
(bad)
movs
mov
scas
add
pop
rcr
jmp
pop
pop
pop
scas
ficomp
(bad)
out
mov
inc
mov
std
fs
adc
loopne
push
out
scas
or
push
push
enter
sub
xchg
and
jns
push
pop
sub
imul
scas
iret
(bad)
loop
sub
cs
ja
xor
ror
add
arpl
sub
pushf
mov
ds
dec
xchg
jb
mov
pop
xchg
and
outs
cmp
adc
add
ret
aam
scas
fmulp
js
int
stos
mov
jae
xchg
(bad)
xchg
mov
imul
or
inc
popa
and
mov
mov
xchg
int
sub
mov
jmp
pushf
xor
xchg
ret
push
xchg
sub
ror
(bad)
loope
jbe
pop
test
test
pop
(bad)
fdivr
bound
push
or
jmp
push
mov
sbb
inc
mov
mov
cmp
fsub
mov
or
pushf
mov
jne
sahf
sub
sub
repz
jmp
mov
pop
mov
jp
test
dec
xchg
gs
not
jae
pop
fidiv
cmc
dec
loop
scas
fidiv
(bad)
ror
call
jmp
repz
push
xor
mov
push
fcmovbe
xchg
mov
mov
pop
add
xchg
das
lock
mov
lock
dec
test
cmp
popa
inc
int
push
rol
int3
fsub
cmp
and
jmp
adc
xor
das
in
adc
(bad)
push
xchg
repnz
adc
hlt
popf
xlat
call
dec
mov
call
loope
(bad)
and
cmp
and
loop
sub
add
dec
sbb
fstp
dec
inc
lock
push
div
test
bound
cli
out
cmc
repz
lea
add
shr
xchg
movs
fistp
cmps
adc
ja
in
jmp
aam
(bad)
mov
ss
mov
jmp
push
out
push
fwait
mov
adc
in
inc
and
mov
stos
test
jb
inc
rol
xchg
daa
inc
mov
rcl
call
imul
daa
xchg
inc
fs
push
xchg
jle
repnz
xor
push
dec
call
pop
xchg
sub
cli
lds
dec
bound
jo
cwde
sbb
dec
out
movs
fisttp
loop
xchg
xchg
ins
mov
push
out
cmp
(bad)
in
fiadd
xchg
das
cmp
out
inc
sub
xchg
push
xchg
aas
mov
xchg
pop
loop
lahf
pop
cmc
in
push
push
xchg
xchg
mov
jecxz
call
sar
aam
jecxz
(bad)
fsubr
aam
mov
inc
inc
mov
cmp
mov
dec
dec
cmps
and
dec
push
xchg
xchg
mov
pop
jl
dec
sub
iret
jnp
call
push
jecxz
stos
sbb
repz
push
xor
lea
rol
push
or
xchg
xor
adc
pop
dec
das
inc
icebp
test
and
xor
xchg
xor
sbb
les
pop
jne
sbb
cmp
call
ss
or
pop
jmp
out
xchg
call
pop
pop
xor
adc
fbld
jl
push
call
dec
mov
inc
shr
jecxz
and
retf
mov
retf
mov
mov
(bad)
punpckldq
aam
mov
aad
pop
cmp
dec
sub
mov
outs
mov
cmp
mov
int3
xor
mov
out
dec
xor
not
ins
not
jmp
dec
adc
sbb
xchg
xor
sti
xor
adc
cmps
sahf
sbb
scas
bound
xchg
pop
stc
push
loope
pop
ret
rol
add
stos
lods
xchg
scas
stos
scas
imul
aad
fidiv
push
fadd
jl
and
movs
push
mov
adc
dec
pop
push
outs
fcmovu
cdq
dec
push
lods
fst
mov
cmps
in
jmp
xor
jmp
je
shr
xlat
xchg
and
ins
mov
retf
jae
test
or
jns
mov
fnclex
inc
jb
pop
shl
js
loope
lds
(bad)
pop
jo
sub
retf
xchg
cld
call
xor
int
inc
sub
div
clc
jns
es
movs
pop
pop
into
lock
daa
ins
sub
lods
lods
lods
jecxz
shl
jne
data16
outs
jge
scas
jg
hlt
and
push
scas
mov
retf
push
mov
shr
xor
jmp
dec
sbb
xchg
inc
dec
push
cmp
cmp
std
inc
ds
loop
mov
jp
mov
pop
aam
test
leave
in
push
aaa
push
xchg
jge
dec
sbb
cli
dec
imul
jno
or
pop
(bad)
icebp
sub
xchg
and
sub
out
jae
ja
xchg
mov
xor
dec
cmc
inc
dec
jnp
hlt
not
test
xchg
add
js
les
and
bound
pop
ja
xor
arpl
xor
mov
std
inc
mov
daa
push
stos
or
and
jecxz
jo
rol
mov
sub
dec
add
mov
xlat
or
dec
cmp
mov
cmps
enter
int
adc
lods
mov
ja
and
sti
into
mov
push
push
stc
push
pop
xor
push
in
sub
pop
jg
icebp
fild
pop
std
movs
lods
inc
pushf
cdq
mov
add
fisubr
cwde
xchg
test
xchg
cwde
cs
push
push
enter
lock
sub
push
add
hlt
cmp
push
scas
pop
mov
mov
out
scas
mov
adc
imul
stos
pop
inc
das
jno
gs
lods
aam
jb
push
mov
jb
cwde
or
pop
aas
pop
movs
aam
mov
out
mov
mov
jp
hlt
xchg
mov
shl
inc
jl
addr16
jecxz
mov
imul
jb
dec
ins
and
pop
(bad)
sub
cmps
arpl
xchg
xor
dec
xlat
or
sub
imul
sub
jae
int
(bad)
and
cmc
dec
mov
jb
pop
pop
sub
xor
je
fsubr
(bad)
lods
je
cdq
shl
fisub
mov
push
inc
imul
imul
adc
mov
cs
jbe
sbb
cmp
pop
or
movs
cmps
test
jne
adc
jmp
mov
popf
daa
mov
push
lahf
mov
jecxz
or
cmovnp
mov
push
xlat
test
dec
xor
test
rcl
movs
cmp
mov
into
cwde
retf
fistp
inc
adc
lods
xchg
cmp
lds
cmps
sub
scas
cmp
sub
nop
mov
lods
pop
pop
xchg
jmp
xrelease
cmp
and
dec
iret
cmp
int
lods
xchg
mov
aas
fst
sbb
sbb
mov
push
outs
jne
cmps
dec
xor
cmp
lea
xchg
inc
ret
mov
push
or
imul
pop
pop
movs
out
adc
ins
les
repz
jl
lea
retf
mov
imul
sub
je
xor
or
popf
enter
dec
lods
push
sahf
jp
pop
sbb
(bad)
pop
jne
std
jle
mov
gs
fnsave
cwde
xor
lods
test
fidiv
mov
sub
push
mov
mov
jp
cmp
or
push
jg
cmp
jns
jne
js
dec
cmp
push
push
aas
jb
lea
push
xor
sub
and
sahf
lahf
sub
sbb
stos
jae
mov
add
test
std
stos
cmp
sbb
push
jmp
mov
mov
push
retf
bound
jae
jns
add
clc
cmp
dec
adc
pop
jecxz
push
sar
xchg
pop
es
push
and
inc
enter
xchg
pop
imul
or
fwait
xchg
cmc
push
aam
popf
nop
sbb
and
mov
lods
dec
sbb
sub
imul
test
xchg
shl
xor
sub
fwait
xor
aad
push
xchg
dec
push
or
cmp
xor
lock
cwde
push
lods
aam
sub
stos
xchg
loopne
sub
xchg
int
inc
mov
dec
jle
in
int3
(bad)
retf
bound
sahf
in
leave
push
pushf
mov
gs
pop
and
loopne
push
data16
scas
or
in
in
scas
aam
dec
mov
xchg
inc
xor
nop
push
dec
daa
popa
cwde
hlt
jnp
and
aaa
stos
jb
fisubr
movq
sub
or
frstor
jbe
cmps
pop
xchg
rcr
repz
mov
push
add
adc
clc
pop
cs
mov
cmps
inc
sub
ja
fist
movs
cdq
loop
mov
cmps
mov
aad
movs
outs
mov
cmp
pop
nop
xchg
nop
cmps
dec
mov
inc
push
or
xchg
out
sub
jb
sub
retf
cmp
pop
dec
xchg
dec
out
mov
cld
stc
ss
push
jno
stos
out
(bad)
aas
scas
test
iret
mov
retf
cmps
(bad)
aad
cdq
cmps
push
test
push
mov
shr
or
inc
xchg
cld
loop
inc
repz
pushf
jo
sub
jb
js
loopne
mov
divps
sub
rcl
jb
dec
test
mov
cdq
in
inc
dec
fwait
mov
dec
retf
hlt
cld
int
movs
mov
mov
shr
push
sub
sub
xchg
push
push
sub
inc
dec
add
sbb
(bad)
popa
push
jne
call
jmp
fisub
shr
mov
stc
xor
shl
stos
add
sub
mov
xchg
mov
lock
mov
aam
les
sbb
add
mov
sub
hlt
pop
fisub
ds
ror
mov
pop
xor
mov
imul
and
push
imul
push
out
pushf
in
icebp
pop
dec
mov
cwde
push
in
fstp
inc
cmp
jae
(bad)
inc
mov
inc
and
lock
and
cmp
clc
jg
mov
loope
push
sub
cmp
lds
add
clc
aas
xchg
mov
sahf
xor
mov
enter
cmp
xchg
fisub
dec
pushf
loopne
inc
sub
stc
mov
xchg
mov
test
loopne
pop
push
sub
cmp
xchg
mov
popf
daa
loope
lds
xchg
xchg
jo
shr
test
lea
inc
js
aas
fsubrp
or
jns
mov
add
ss
imul
js
sar
cs
mov
fwait
jne
sub
add
and
lods
mov
mov
(bad)
add
cmovb
lods
inc
cmp
rcr
sub
pop
xchg
imul
sti
aad
and
data16
imul
sub
cmp
aaa
sub
in
xor
cdq
mov
or
popf
pop
mov
fmul
pop
mov
js
out
ins
pop
jae
stos
sub
sti
aad
mov
jb
jns
and
push
mov
adc
mov
dec
xchg
push
leave
daa
jo
lahf
pop
lahf
jns
sbb
addr16
sbb
pop
xchg
sub
jb
jb
sbb
call
rcl
add
ja
iret
mov
lock
enter
push
ret
pop
jmp
test
call
pop
inc
aas
pop
mov
mov
fld
inc
inc
mov
xchg
jl
dec
dec
int3
sub
inc
fcomip
in
push
popa
not
arpl
xchg
ins
mov
loop
cmp
and
sub
sub
mov
xchg
dec
inc
in
mov
sub
loope
loope
push
pop
jp
call
outs
sub
sbb
hlt
cmp
cmp
ins
(bad)
or
pop
push
jecxz
out
push
out
fdiv
or
inc
das
gs
jnp
push
sub
push
sbb
push
dec
mov
in
or
ret
dec
imul
xchg
sbb
stos
sub
fistp
mov
inc
dec
jno
dec
dec
add
fadd
je
pop
push
or
mov
jo
adc
xchg
(bad)
shr
xchg
mov
add
cwde
shr
(bad)
and
stos
cmps
inc
sub
ret
cmp
and
mov
xor
xchg
lods
test
mov
loope
cmp
lahf
xor
cwde
int
ja
mov
aad
jns
mov
jae
cmp
push
or
jnp
out
fidiv
cmps
sub
aas
jno
aad
inc
arpl
int
xor
(bad)
cmc
sbb
scas
cmp
pusha
in
gs
les
out
fucomip
mov
daa
push
aad
inc
out
neg
retf
cmp
(bad)
in
sbb
das
lahf
lock
push
xchg
mov
in
fwait
pop
ins
mov
ret
xor
test
ret
cmp
nop
aaa
fidivr
gs
daa
and
cld
(bad)
ins
jae
ret
jp
fwait
sub
stc
push
cmps
pop
fimul
movs
aaa
xor
int3
imul
dec
cmp
mov
pop
aas
adc
inc
sbb
dec
xchg
fidiv
jns
daa
xchg
mov
pop
test
inc
inc
adc
xchg
cmp
or
ds
into
dec
and
movs
fld
nop
popa
(bad)
xchg
pop
stos
mov
fimul
gs
ret
push
mov
and
mov
nop
movs
test
jns
les
push
rcr
imul
mov
cwde
(bad)
jo
jmp
movs
scas
sub
or
lahf
dec
mov
jle
cld
sbb
cmp
pop
loop
addr16
ins
sti
jge
stos
push
dec
or
(bad)
xchg
inc
stos
aad
inc
ja
imul
lea
loope
mov
scas
pop
push
xchg
mov
(bad)
mov
aad
jp
xchg
loop
out
outs
bound
cmp
rol
pop
pop
out
xchg
or
cmp
jl
pop
inc
aad
pop
jmp
dec
sbb
mov
jbe
in
ret
out
sbb
fisttp
push
pop
add
or
dec
push
pop
mov
mov
cmp
icebp
jb
push
inc
sbb
stos
mov
push
push
pushf
call
shr
and
and
into
jl
xchg
movs
xchg
mov
add
shl
adc
pop
pop
xchg
movs
js
push
push
repz
adc
mov
sub
mov
fcomp
fild
out
hlt
(bad)
cmps
stos
push
fbld
fdiv
mov
nop
push
ror
and
cmp
dec
stc
aam
sbb
sqrtps
jae
pushf
loope
inc
addr16
pop
fidiv
dec
dec
(bad)
aas
pushf
push
and
jae
gs
inc
std
and
bound
out
in
mov
out
push
lock
fstp
mov
jl
call
xor
leave
pop
pop
(bad)
cmps
jno
cwde
pop
(bad)
jmp
(bad)
(bad)
pop
jge
and
gs
mov
xor
imul
or
lahf
xchg
adc
inc
in
movs
aaa
daa
ja
repz
push
cmp
or
adc
popa
add
mov
xchg
xlat
push
jno
adc
cmp
or
cmp
data16
popa
mov
shr
call
lds
dec
sub
xchg
inc
dec
stc
shr
xchg
and
lds
std
dec
mov
sub
push
xchg
fs
mov
sahf
xor
test
xor
jns
adc
pop
loop
mov
push
cld
mov
inc
sub
clc
jne
push
fidiv
pop
fucomp
push
inc
jno
dec
fdivp
fimul
push
push
or
loop
cmp
add
cdq
dec
sub
sti
lea
xor
pop
stos
in
dec
jg
movs
stos
retf
xlat
jle
lock
ja
add
pop
pop
std
or
sub
jg
lahf
iret
loopne
sbb
imul
push
call
sbb
or
ror
sbb
imul
dec
iret
test
dec
mov
adc
fcomip
cs
inc
push
ret
retf
ds
mov
and
stos
iret
aaa
sub
mov
xchg
stos
push
stos
sbb
sar
das
leave
mov
pop
fistp
popf
jne
jmp
lds
clc
cmps
clc
mov
mov
pushf
inc
fild
push
fnstenv
sti
cwde
scas
fcomp
sbb
sub
or
loope
gs
stc
popf
sbb
fcomp
hlt
hlt
mov
retf
jecxz
outs
daa
mov
scas
or
or
xchg
bound
cld
mov
sub
cmp
aad
pushf
sahf
jne
pop
in
inc
out
xchg
nop
push
shl
mov
sub
loope
daa
pop
fsubr
addr16
loopne
pop
and
pop
jmpw
cs
shr
jne
outs
enter
xchg
mov
test
dec
test
cmp
mov
jmp
mov
ror
ret
push
sbb
lods
cmps
pop
pop
xchg
mov
cmp
mov
movs
out
fisubr
push
xchg
pop
fnstenv
sub
jo
sbb
pop
xor
dec
xchg
xchg
jbe
add
les
cmp
std
mov
adc
xor
fist
fidivr
jl
jno
pop
jp
cmps
adc
aam
movs
nop
and
into
rcl
fsub
std
xchg
cmp
imul
cmp
dec
lods
pop
pop
xor
push
mov
jge
std
pop
jle
cmc
mov
jmp
out
mov
lea
mov
or
pop
or
jno
movs
xchg
jmp
pop
movs
mov
mov
pop
lahf
xchg
outs
sub
lea
mov
push
call
mov
sub
fwait
out
sub
ja
cmp
xchg
dec
ins
in
in
dec
cmps
mov
and
fld
cmp
stos
aad
ds
aaa
xor
xchg
cwde
jae
sbb
loope
ret
push
mov
sahf
das
cmp
out
aad
dec
xchg
stos
xchg
loop
adc
fcompp
xor
mov
cmp
inc
(bad)
loopne
mov
jle
mov
shr
rcr
push
stos
ja
push
inc
adc
ins
dec
cmps
(bad)
inc
call
cmc
cmp
push
popa
les
jns
adc
xchg
jnp
or
xor
imul
call
mov
cmp
aam
int
mov
test
xor
iret
and
inc
int3
mov
pop
mov
daa
sbb
inc
push
std
cdq
sbb
mov
or
cs
pushf
test
lods
jo
jbe
fstp
jp
xchg
push
jge
out
in
call
mov
into
arpl
sub
clc
ins
psrld
inc
pop
leave
js
jb
out
jae
and
dec
jne
repz
repnz
jecxz
xor
dec
mov
pop
mov
add
leave
pop
xlat
sub
sbb
retf
inc
sub
mov
out
xchg
cmp
mov
lds
xchg
adc
pop
or
inc
and
mov
aad
out
jge
test
mov
adc
inc
or
ror
shl
(bad)
(bad)
imul
out
or
dec
call
adc
xchg
fisttp
xchg
sub
add
les
pushf
xchg
bound
jbe
inc
movs
jb
mov
shr
dec
rcl
push
jns
inc
retf
cmp
outs
xchg
es
jo
jp
jmp
jb
inc
pop
ror
cmp
push
idiv
iret
test
jb
sahf
sub
outs
fneni(8087
mov
mov
dec
mov
or
ins
and
dec
push
ss
add
add
add
jbe
rol
test
jb
pmuludq
add
dec
pop
mov
mov
and
push
jge
jne
sub
mov
in
cdq
sub
jmp
add
sbb
test
(bad)
hlt
lock
dec
mov
jge
cmps
into
dec
(bad)
mov
inc
ins
mov
mov
out
fnstsw
int3
gs
and
sbb
jge
in
repz
sub
retf
push
cmps
pop
xchg
retf
mov
xchg
jo
fdiv
mov
(bad)
pop
dec
add
mov
jmp
push
ret
dec
lock
jmp
xchg
mov
mov
cmc
mov
push
shl
mov
stos
test
push
xor
lods
dec
add
pop
rcr
(bad)
stos
aaa
pop
jb
xchg
cmc
pop
aad
mov
adc
bound
mov
sti
dec
movs
pushf
mul
xor
sahf
imul
push
leave
xlat
xchg
push
sbb
add
jmp
mov
xchg
pop
xchg
sub
fbstp
sub
sbb
clc
mov
fst
iret
jbe
leave
jle
(bad)
mov
test
movs
xchg
fsubr
stos
pop
les
lods
mov
cmp
lea
inc
mov
(bad)
scas
pop
(bad)
stos
push
pop
xchg
addr16
mov
push
les
cmp
mov
and
retf
mov
pop
test
jle
sub
ja
and
outs
mov
inc
cwde
call
mov
jbe
mov
test
adc
jo
pushf
cli
and
xchg
xor
xor
jno
je
icebp
cwde
lods
cmp
lock
push
pop
push
lea
xchg
(bad)
inc
outs
sar
add
out
jge
fucomp
dec
cmp
adc
cmc
inc
pop
and
(bad)
fld
pop
xchg
dec
loopne
bound
xor
dec
and
dec
fistp
bound
repnz
ins
xor
ja
ja
push
mov
push
lds
nop
in
bound
dec
pop
mov
sub
ja
or
outs
or
loopne
(bad)
mov
mov
lea
sbb
leave
add
cmp
js
jnp
xchg
push
out
cmp
and
mov
inc
cmps
or
jle
inc
nop
mov
stc
outs
add
pop
xchg
cmp
hlt
hlt
mov
cmp
jb
push
mov
in
fisubr
aam
les
sub
fwait
mov
out
ja
shr
jb
and
mov
stc
or
movs
add
scas
loop
dec
das
mov
jp
bound
dec
adc
xchg
sub
add
xchg
add
clc
ror
add
push
pushf
outs
fidivr
mov
(bad)
es
in
mov
mov
je
jb
scas
ins
push
mov
out
ss
mov
sahf
fsub
push
cmp
dec
movs
lds
in
xor
adc
dec
(bad)
repnz
adc
cmp
shl
cmps
out
lahf
mov
jecxz
iret
xlat
(bad)
rcl
pop
cdq
sub
cmps
mov
mov
gs
aaa
jl
imul
cmps
clc
ja
jle
(bad)
shl
int3
loop
xlat
mov
repnz
les
dec
push
inc
pusha
repnz
les
imul
pop
and
push
outs
pop
sti
mov
xor
pop
daa
out
jbe
mov
or
das
push
mov
aaa
xchg
xchg
mov
cmp
push
or
outs
push
arpl
cli
push
cmps
clc
loop
xchg
inc
mov
adc
test
call
xor
sbb
cmc
pop
test
push
mov
pop
scas
and
lds
pop
pop
xchg
xor
xor
jle
icebp
rol
xor
ds
leave
xor
mov
addr16
push
sbb
outs
and
dec
jns
in
clc
out
fidiv
call
in
retf
cs
sub
inc
jmp
pop
dec
ret
sub
and
fdivr
js
shr
cmp
imul
mov
mov
cmp
ficomp
pusha
pushf
add
adc
xor
push
(bad)
out
sub
(bad)
imul
xchg
repz
pop
cmovnp
out
and
lods
test
lods
repz
xor
out
jo
sub
call
ins
(bad)
retf
int3
fcompp
inc
dec
shl
repz
psubusw
loop
lods
dec
xlat
mov
add
sub
dec
pop
aam
push
je
cmps
mov
je
sbb
ret
ret
ror
or
gs
or
imul
sub
sub
retf
mov
pop
cs
icebp
jge
(bad)
retf
call
out
mov
pop
call
lock
mov
js
jmp
js
sahf
xor
cmps
out
cmp
pusha
dec
mov
push
xchg
test
fiadd
imul
xor
and
imul
add
outs
in
cli
neg
mov
stos
jb
sbb
add
sub
pop
(bad)
add
fldenv
dec
pop
xchg
shl
jg
loope
in
in
jo
movs
retf
xor
fidiv
imul
jnp
pop
jae
scas
loop
inc
cs
push
icebp
int3
pop
or
pop
repz
sub
into
loopne
movs
mov
ss
sub
dec
ds
aas
into
add
loopne
mov
fst
out
jecxz
popf
mov
sub
sub
out
test
(bad)
popa
movs
pop
add
js
push
js
sar
jno
jge
shr
push
jle
dec
xchg
adc
and
out
icebp
sub
push
cmc
xchg
(bad)
sub
arpl
push
int3
cmp
inc
cld
dec
nop
shl
xchg
jecxz
repnz
popf
adc
xor
mov
pop
sub
xchg
jb
in
arpl
xor
test
mov
out
sub
mov
scas
inc
mov
add
and
dec
fwait
mov
mov
shr
xor
cmc
sub
stos
inc
add
shr
dec
xchg
xor
pop
xchg
push
mov
ins
lods
mov
ret
(bad)
loopne
fcom
cmps
cld
cmp
xchg
mov
mov
sahf
sar
aas
daa
clc
xchg
jp
ins
imul
stc
or
mov
fwait
adc
cmps
pop
dec
push
push
mov
shld
in
ror
and
add
xor
jns
movs
scas
out
pop
mov
loop
jmp
stos
fstp
push
push
cli
stc
cdq
mov
shr
or
xchg
inc
and
rol
cmp
inc
enter
call
inc
jnp
(bad)
rol
push
add
jle
mov
xchg
sbb
fcomp
mov
imul
sub
add
inc
jo
mov
dec
call
mov
jb
out
hlt
sub
movs
and
or
push
pop
(bad)
and
inc
mov
and
add
jp
ficom
call
bound
test
and
inc
retf
gs
and
movs
dec
(bad)
push
sti
retf
out
call
push
jo
addr16
jo
loope
ret
lea
inc
call
mov
ins
and
pop
push
retf
lods
outs
cmps
pop
int3
dec
pslld
add
in
push
jbe
out
icebp
aad
js
fmul
mov
cmps
or
(bad)
shl
mov
or
das
arpl
call
push
add
retf
iret
test
in
std
inc
inc
stos
add
cmps
imul
or
xor
popf
outs
ret
pop
mov
dec
mov
jecxz
xchg
inc
or
cmps
data16
push
jge
aad
scas
(bad)
lahf
lds
jno
cmps
and
push
test
arpl
ret
test
pusha
lods
push
addr16
or
(bad)
push
cmp
mov
push
lods
or
loop
movs
repnz
test
mov
push
xchg
pop
mov
sti
(bad)
bswap
lds
adc
inc
(bad)
jmp
xchg
cmps
adc
sub
xor
push
cmp
ins
mov
das
je
sub
stos
xchg
inc
cs
sbb
cmp
push
ins
repnz
sbb
push
test
call
into
(bad)
daa
fsub
jo
rcl
xchg
ror
adc
xor
stos
bound
adc
pop
sahf
repz
int3
cwde
call
in
shl
scas
jg
jns
ins
mov
sbb
xor
add
inc
dec
js
ja
popf
pop
lock
jp
jl
in
fdiv
outs
test
std
push
mov
retf
mov
lds
sub
ins
lods
inc
rcr
pop
div
mov
add
stos
xchg
je
and
push
fimul
or
rcl
fist
ret
inc
cmp
xchg
js
aad
mov
sub
jnp
rcr
add
loopne
jle
test
mov
das
jbe
clc
sahf
sahf
lea
scas
movs
shr
std
mov
int
pop
push
mov
cmp
and
in
cmp
cmps
shl
or
retf
ins
inc
inc
imul
push
movs
mov
ins
inc
stos
push
in
in
or
pushf
mov
and
push
cmps
sub
fsubr
iret
inc
xor
cmp
ja
mov
test
dec
inc
repnz
loop
mov
jmp
add
cmps
cmp
push
or
push
fwait
xor
retf
xlat
push
ds
push
sub
test
in
pop
sbb
fsubr
ror
fimul
into
mov
jns
push
xchg
fs
outs
push
lods
cdq
mov
jmp
mov
xchg
xchg
cwde
mov
outs
mul
mov
push
lods
(bad)
push
ret
dec
mov
pop
sub
stos
mov
fst
fldenv
lea
push
mov
push
or
xor
mov
out
ror
mov
js
cmp
leave
sub
icebp
cmps
lock
das
push
adc
retf
jb
ficom
arpl
in
or
sbb
dec
pop
iret
mov
int3
add
push
lds
inc
retf
jecxz
int3
inc
sub
loop
out
xchg
sar
mov
or
adc
jo
sbb
nop
and
mov
mov
jmp
push
lahf
stos
and
pop
or
lods
jb
es
xchg
push
sub
inc
scas
push
rcr
in
push
lea
imul
lods
cmps
gs
mov
pop
movs
arpl
jle
cmps
xchg
popf
push
xchg
jnp
cld
cmps
shrd
push
loopne
out
jmp
jae
mov
xor
mov
xor
repnz
adc
test
mov
or
cmps
in
sbb
jne
fs
js
jmp
cmp
outs
outs
imul
fsub
mov
daa
or
jbe
add
loope
(bad)
jne
cmp
add
int3
lahf
dec
js
shr
sbb
dec
mov
(bad)
mov
and
fidivr
dec
push
and
dec
and
(bad)
mov
xor
retf
out
test
sbb
stc
fs
sub
sbb
shl
std
adc
sub
jmp
lea
stos
inc
rcr
outs
push
xchg
ds
mov
mov
scas
dec
dec
mov
mov
push
jne
leave
ins
cmp
mov
jne
cmp
dec
popf
or
xchg
or
or
inc
movs
dec
fstp
or
bound
push
mov
ret
sub
(bad)
cld
sub
dec
jnp
cmp
cmp
out
aad
lea
aas
cmp
push
cmc
or
jnp
scas
sub
sub
inc
mov
jg
les
int3
inc
pop
mov
cmp
aas
adc
imul
push
(bad)
xor
std
in
jns
add
fild
xor
push
mov
ror
push
push
push
mov
cmps
out
add
xor
popa
sub
or
xchg
xchg
test
push
stos
jecxz
imul
adc
lods
ja
rcl
mov
aam
push
jmp
dec
mov
leave
dec
jns
cmp
dec
sbb
outs
adc
(bad)
adc
adc
loop
retf
mov
sbb
lds
cmp
jp
and
and
dec
xchg
xchg
movs
dec
and
xchg
cmp
out
ja
outs
or
ja
out
cmp
(bad)
in
mov
cld
int3
inc
addr16
ins
adc
jl
sub
and
shl
cs
jo
fbstp
inc
das
adc
(bad)
dec
lahf
push
rol
int
ret
scas
(bad)
lock
enterw
in
jg
xor
sbb
adc
in
xchg
pop
dec
call
nop
mov
push
sbb
push
stos
push
cdq
iret
shl
cmp
lock
mov
push
shr
shr
pop
shr
push
es
dec
push
hlt
repz
and
scas
retf
stos
ficomp
inc
mov
adc
into
dec
mov
loop
stos
push
cwde
pop
mov
adc
and
jbe
lahf
pop
retf
test
cwde
stos
neg
dec
in
cwde
sahf
lea
lock
xchg
call
xor
in
dec
nop
xchg
data16
repnz
test
pop
lods
jp
adc
popa
sti
inc
test
fwait
jmp
jl
cmp
pop
xor
fidivr
adc
ins
adc
xchg
das
jge
sar
cmp
jno
cmp
pop
(bad)
cdq
dec
inc
in
das
lds
cdq
push
iret
lock
jp
stc
jle
(bad)
jecxz
lds
enter
pushf
sar
mov
dec
movs
push
cmps
jmp
mov
push
stos
jge
retf
adc
dec
cmp
sbb
mov
fsub
out
lods
sub
push
out
xchg
push
(bad)
pop
and
xchg
push
cli
pop
aad
cmp
xor
cmps
and
shr
push
pop
je
mov
xor
int
push
mov
mov
push
dec
dec
jne
lahf
jge
mov
pushf
pop
push
test
imul
aam
icebp
xchg
mov
(bad)
stc
stos
fcomp
pop
aad
fidivr
cmp
jae
in
mov
dec
mov
fld
mov
cmp
into
into
inc
in
in
and
push
push
sub
imul
cli
std
je
ja
mov
clc
outs
aad
sub
rcr
mov
imul
mov
sub
mov
lods
cli
inc
sub
or
add
(bad)
frstor
imul
dec
add
daa
add
pop
or
add
in
cmp
dec
imul
aad
(bad)
cmps
fs
in
pop
xor
out
xor
cmps
and
mov
shl
jle
push
dec
push
jge
xchg
mov
and
retf
mov
mov
push
sub
mov
xor
aas
jp
loop
mov
lds
xchg
clc
xor
jge
sar
add
in
inc
sbb
mov
mov
cmp
push
iret
jmp
jmp
inc
dec
mov
xor
(bad)
xor
cwde
inc
pop
frstor
xchg
js
xlat
jmp
(bad)
pop
dec
lea
stos
aad
and
mov
push
xchg
test
dec
sbb
push
test
fadd
push
dec
daa
push
je
mov
push
movs
mov
mov
adc
ja
int3
jge
sbb
cli
xchg
mov
fmul
movs
rcr
sub
retf
mov
add
cld
dec
fstp
push
ins
and
cmps
dec
pop
xchg
xchg
xchg
int
dec
inc
mov
pop
stos
add
ficom
mov
xor
jmp
cli
pop
cmp
in
fcom
daa
mov
dec
push
jns
cmp
pop
loop
bound
pop
data16
push
es
inc
mov
xor
xchg
cmp
clc
jae
arpl
jmp
aaa
mov
jmp
retf
xchg
inc
add
inc
sub
or
mov
pop
inc
sahf
repz
push
adc
jbe
jo
jno
dec
mov
movs
ror
push
outs
(bad)
test
data16
dec
xor
out
jb
jb
out
les
shl
loope
fdiv
dec
and
pusha
imul
(bad)
push
sub
rol
xor
push
cmp
daa
jmp
ins
push
(bad)
stos
pop
and
hlt
mov
mov
cwde
pusha
pop
mov
ret
push
arpl
test
leave
fcmovnu
mov
cmp
cmp
push
std
out
gs
push
adc
add
cmp
or
mov
xchg
call
imul
rol
xchg
cli
inc
mov
cmps
add
sub
pop
lods
das
sbb
xor
dec
adc
push
push
outs
cmp
xchg
sar
or
ret
pop
ret
sub
movs
push
stos
bound
xchg
fxch
mov
fdiv
aas
mov
mov
adc
sbb
sar
fmulp
mov
sbb
ret
pop
test
cmc
aaa
or
dec
fnstsw
aaa
jno
les
sub
sub
stos
xchg
mov
xor
cli
add
pop
ins
or
movs
xchg
cld
loopne
jbe
jne
push
call
inc
mov
sti
xchg
je
jbe
imul
nop
lahf
xchg
fnsave
mov
push
sbb
jnp
repz
mov
stc
mov
leave
xor
mov
fwait
hlt
out
repnz
pop
pop
in
push
mov
push
into
mov
cmps
xor
dec
xchg
push
and
dec
leave
cmp
mov
fbstp
sub
push
pop
mov
in
push
fstp
xchg
iret
cmp
movs
pop
add
in
cdq
stos
lea
dec
(bad)
scas
loop
lods
dec
cwde
xchg
xchg
rcr
cmc
dec
xor
test
aad
retf
xor
rcl
sub
xchg
jmp
pop
xor
retf
dec
pop
test
push
mov
sub
jecxz
(bad)
repz
jle
jp
lds
fidivr
call
imul
jne
fwait
cmp
cmp
jns
imul
movntq
les
sub
jb
imul
push
pop
adc
mov
cmps
ror
jmp
stos
fdivr
(bad)
aam
add
test
ficom
out
xor
xchg
pop
xchg
ins
inc
(bad)
mov
out
in
imul
push
fwait
push
mov
aam
sahf
in
mov
sub
loop
jecxz
mov
push
dec
cmp
inc
stc
lds
sbb
adc
mov
ret
stos
mov
(bad)
pop
or
inc
dec
movs
push
sub
fcmove
adc
dec
fdiv
repz
ret
lds
fdivr
sbb
test
xchg
dec
jge
dec
add
inc
cmp
cdq
imul
fwait
ins
cs
cmp
mov
sbb
inc
inc
rcr
pop
mov
xchg
sar
pmullw
add
mov
push
in
gs
gs
das
or
stos
xor
jl
test
not
pop
loop
js
packuswb
fdivr
stos
jl
pop
xor
clc
jl
xchg
cmps
push
ss
pop
hlt
sti
or
mov
and
enter
mov
mov
jmp
pop
aam
sbb
movs
jp
jb
outs
cmc
bnd
pusha
mov
mov
mov
sub
paddusw
mov
jle
in
movs
popf
(bad)
push
push
ret
jg
lahf
jmp
or
sub
in
pop
and
out
mov
bnd
inc
pop
add
sbb
pop
cmp
std
(bad)
addr16
pop
jp
(bad)
aam
rcr
fistp
lock
out
dec
imul
or
retf
imul
icebp
lods
mov
(bad)
and
ret
into
movs
ins
int
data16
(bad)
jo
pop
lea
retf
stc
and
pop
fimul
movs
jmp
aad
int
mov
push
add
into
dec
push
or
push
test
ror
addr16
mov
in
push
nop
mov
xchg
clc
push
mov
sub
pop
aaa
aad
sub
retf
scas
ss
jmp
inc
push
les
sbb
cmp
ds
adc
cmp
mov
(bad)
iret
and
mov
mov
les
repnz
xchg
inc
cmc
dec
xchg
packssdw
pushf
inc
or
retf
xchg
clc
pushf
cld
outs
pop
jmp
loope
push
mov
dec
dec
mov
dec
hlt
mov
loope
mov
xor
inc
mov
movs
out
jmp
mov
in
sub
push
inc
(bad)
mov
mov
mov
sub
mov
hlt
idiv
xlat
int3
int
movs
xor
popf
sbb
rcr
sbb
pop
fiadd
lock
(bad)
jne
iret
mov
dec
in
std
dec
jg
xchg
jge
ins
and
lahf
mov
ror
sbb
sahf
ss
jns
mov
sti
push
jmp
imul
std
jle
mov
cmc
loop
ret
loopne
dec
inc
int3
retf
ja
imul
clc
sbb
pop
jmp
call
or
out
xor
sub
ret
stc
lahf
or
shl
inc
push
pop
shrd
sti
push
addr16
leave
stos
dec
aad
sti
mov
sub
push
xchg
enter
cmp
inc
jb
xor
pop
add
das
iret
(bad)
out
add
push
(bad)
mov
push
std
sbb
sbb
adc
or
dec
dec
fadd
add
push
add
arpl
fsubr
mov
(bad)
in
ss
cmp
test
rol
cmps
and
ror
cmp
and
sbb
fiadd
lahf
fnsave
mov
mov
loopne
iret
pop
sbb
cld
dec
jne
hlt
ins
dec
push
xchg
mov
jno
add
or
into
(bad)
pop
imul
jmp
push
sahf
inc
mov
retf
daa
popf
mov
mov
mov
push
movs
sub
div
cmp
sahf
repnz
inc
mov
ds
ins
imul
push
push
bound
int
cmp
gs
xchg
cmp
out
adc
iret
pop
pop
neg
jne
movs
cmp
ror
mov
les
jp
jge
(bad)
scas
fwait
pop
rcl
in
pop
data16
dec
xchg
dec
jl
xchg
inc
repnz
ficom
nop
push
jecxz
push
or
add
xchg
push
cmp
adc
sbb
sahf
(bad)
mov
mov
jae
cmp
in
adc
outs
imul
inc
retf
jae
inc
or
add
daa
or
sbb
in
xor
out
daa
int3
mov
pop
dec
mov
stos
push
mov
fisubr
in
cmps
movs
inc
stc
aam
pop
fisttp
leave
daa
(bad)
xor
orps
push
aaa
push
mov
xchg
pop
push
leave
fsubr
sbb
push
ret
dec
(bad)
and
push
or
retf
in
cmp
jne
add
sbb
movs
int3
adc
mov
in
xchg
rcl
cwde
(bad)
mov
add
test
sbb
inc
les
ficomp
cdq
shl
jge
call
adc
push
xor
jp
rcr
call
into
mov
inc
xchg
(bad)
pushf
movs
pop
lods
pushf
(bad)
push
mov
fdivr
cs
inc
mov
xor
push
mov
adc
push
lea
inc
imul
loop
cmp
pop
jmp
loope
loop
test
and
mov
xchg
hlt
mov
mov
cmp
data16
mov
arpl
ret
es
es
mov
icebp
(bad)
dec
cmp
mov
out
adc
mov
lahf
out
out
pusha
je
jle
out
pop
sub
mov
iret
cmp
mov
adc
sub
push
sahf
pop
mov
sbb
test
cmp
sti
(bad)
(bad)
jnp
scas
push
jmp
inc
ins
lds
pusha
movs
scas
dec
mov
cdq
pop
ss
push
xor
mov
jno
push
or
scas
aas
sahf
ins
repnz
push
mov
push
leave
fsub
mov
xor
mov
push
inc
or
pop
addr16
and
mov
out
xchg
fwait
test
aad
lds
xchg
xor
out
loopne
aam
in
arpl
into
xchg
jle
(bad)
not
push
cmps
mov
mov
(bad)
(bad)
or
ror
jno
(bad)
fdivr
mov
jo
outs
adc
loope
adc
(bad)
fnstsw
ret
es
ret
add
fistp
xchg
and
and
or
je
ins
add
popf
mov
cs
pop
shr
ficom
pop
inc
lds
mov
push
in
sub
jle
mov
test
aaa
mov
into
pusha
xchg
dec
xchg
cdq
xor
add
arpl
pop
nop
scas
jo
xor
enter
retf
mov
dec
cmp
xchg
fmul
mov
daa
cmp
add
popa
sbb
mov
pusha
ror
sub
leave
pop
jnp
xchg
inc
ret
repz
out
rcr
les
mov
jne
mov
jo
mov
dec
mov
mov
xchg
mov
and
popa
in
jb
adc
jb
sahf
inc
icebp
out
cmps
stos
shr
push
jnp
repnz
rcr
vmovntpd
pop
enter
test
xchg
mov
xchg
movs
sbb
ficom
(bad)
lock
sbb
daa
jmp
push
inc
shr
call
ss
sub
jp
push
mov
jbe
mov
push
cmc
ffreep
scas
lds
xor
and
jp
jne
repz
dec
jb
lods
add
mov
mov
inc
jbe
cli
and
sub
fs
inc
sub
stos
pop
add
mov
jns
and
inc
cmc
cmp
aas
push
scas
cmp
jne
mov
jp
xchg
aad
adc
sti
mov
retf
mov
test
retf
scas
push
adc
test
outs
pop
pop
lods
cwde
dec
adc
or
retf
es
test
ds
cmp
xor
stos
jae
leave
mov
in
test
sub
xchg
repz
dec
dec
jno
loope
jp
jmp
test
mov
ret
add
push
or
dec
xor
rcr
ret
inc
xchg
sbb
pop
xchg
jecxz
and
mov
cdq
jae
mov
stc
inc
ja
jb
mov
push
cmps
jp
pop
pop
aaa
pop
ds
dec
sbb
dec
clc
inc
fild
mov
popa
ins
ds
stos
fld
dec
push
pop
and
rol
sbb
sti
mov
(bad)
std
adc
mov
sbb
aad
(bad)
test
cmc
loop
cmps
mov
int
imul
push
lds
not
mov
ss
sbb
xchg
mov
in
cs
xchg
sahf
pusha
push
push
sbb
dec
xchg
xchg
fcmove
xor
jbe
mov
mov
lahf
jno
(bad)
jmp
ja
jg
retf
sbb
mov
mov
in
jae
mov
lds
pop
dec
push
je
mov
push
nop
jecxz
nop
jmp
cmps
add
add
loope
inc
aam
lds
loope
pop
mov
mov
jl
cld
sbb
cmp
hlt
lods
stc
mov
iret
loop
arpl
ret
mov
out
mov
ss
dec
dec
stos
xchg
(bad)
cmps
rcl
xchg
(bad)
push
push
arpl
sub
movs
(bad)
mov
jbe
adc
movs
jmp
aas
push
fst
mov
shl
inc
test
loope
dec
cld
inc
outs
pop
sub
dec
mov
jne
out
stos
dec
mov
pushf
leave
mov
ins
pop
adc
movs
fistp
add
or
mov
mov
pop
data16
xor
add
dec
fidiv
ret
rol
retf
push
movs
in
sbb
cmps
mov
adc
mov
jl
jae
(bad)
adc
pop
clc
icebp
out
ja
out
inc
jle
cli
es
in
pop
fistp
shl
cmp
stos
mov
inc
xchg
mov
popf
jg
sar
add
inc
xor
inc
inc
push
xor
and
movs
loop
in
stos
rol
pop
ins
jmp
dec
out
pop
sbb
inc
(bad)
pop
pop
div
test
sbb
adc
mov
and
bound
xchg
dec
cmovge
mov
mov
icebp
leave
popa
cmps
jne
push
mov
cmp
pop
pop
aad
ds
or
pop
es
call
rcl
jmp
xor
push
aas
ret
call
xlat
inc
daa
das
ror
push
jne
jmp
call
out
loopne
mov
clc
xchg
icebp
or
popf
movs
retf
fisub
cmp
shr
cmps
sbb
sub
xchg
inc
dec
rol
xchg
fiadd
adc
pop
mov
out
ins
retf
arpl
loop
outs
out
jp
xor
or
inc
and
push
cmp
jbe
mov
mov
arpl
inc
jmp
pop
dec
repnz
leave
push
xchg
pop
int
sbb
xchg
mov
cs
push
in
mov
jo
and
lods
xchg
(bad)
mov
addr16
push
jo
in
lea
fwait
in
dec
in
inc
hlt
jg
ret
sub
mov
jmp
mov
ins
push
mov
test
mov
jmp
dec
aam
mov
stos
sbb
les
popa
in
cmp
ret
bnd
jne
scas
data16
mov
mov
xor
mov
aaa
xor
adc
sti
sbb
dec
and
xor
js
sub
daa
popa
adc
mov
aaa
or
inc
(bad)
cmp
mov
mov
jp
les
in
clc
stc
in
pop
push
add
jp
push
and
and
in
fs
dec
std
inc
js
adc
cmp
mov
test
lods
dec
mov
inc
mov
sbb
and
jecxz
cmp
push
aas
cmc
pop
pop
pop
dec
jge
jge
js
cld
adc
fldcw
int3
loope
xor
fndisi(8087
xor
jns
mov
sahf
jp
mov
mov
cmps
fcom
xor
and
xor
mov
outs
xchg
jmp
pop
cmp
loope
push
icebp
adc
jmp
retf
jnp
repnz
test
cmps
or
dec
outs
out
inc
in
mov
std
retf
xchg
jbe
xchg
and
les
shr
jmp
fdiv
xchg
mov
jns
jp
mov
sub
xchg
push
imul
xchg
hlt
push
pop
int
outs
idiv
or
pop
jp
push
mov
cmp
icebp
jle
sti
sti
dec
scas
add
out
lock
cmp
paddusb
or
mov
and
cmps
xchg
sub
retf
bound
jbe
pop
mov
nop
xor
cmp
(bad)
adc
xchg
mov
out
inc
cmps
icebp
icebp
dec
lods
pop
pushf
jle
jae
adc
pushf
jns
lock
mov
xchg
test
mov
sub
shl
les
out
cmps
xor
daa
pop
mov
pushf
or
cmp
xchg
or
addr16
pushf
hlt
xchg
inc
ss
mov
stos
dec
push
xchg
loop
lods
cwde
stos
aam
mov
xchg
into
(bad)
in
not
push
ja
ins
add
stos
daa
mov
mov
and
fcomp
and
dec
test
xchg
test
lods
ja
mov
popf
sar
mov
mov
sub
jbe
push
push
or
popa
imul
sbb
sub
(bad)
jnp
push
movs
fnstcw
dec
xor
pop
push
cmp
popf
scas
sub
stc
movs
sbb
sbb
shr
push
cmp
mov
pcmpeqb
dec
je
mov
jne
fnstcw
shr
call
jle
sbb
jle
sti
mov
repnz
repz
jne
add
xor
push
les
xor
xchg
sbb
test
xlat
inc
call
sub
cmps
or
mov
lahf
push
jnp
test
xor
mov
push
cwde
pop
xor
push
xchg
shl
cwde
cmp
pop
int
sbb
mov
sbb
sbb
cld
push
mov
xor
jmp
xchg
sub
mov
cmps
dec
mov
fdiv
retf
jle
enter
sbb
out
test
or
vmread
pop
pop
push
pop
call
dec
imul
xchg
and
push
dec
xchg
in
or
movs
sub
mov
push
xchg
out
loope
js
jmp
or
push
aaa
sub
daa
cmp
push
retf
push
shl
outs
xchg
sub
nop
lea
clc
mov
loop
cdq
mov
stos
ins
popa
call
outs
mov
aam
push
arpl
bound
aam
fsubr
mov
movs
in
gs
retf
iret
retf
pop
push
test
lods
push
adc
(bad)
jns
in
arpl
dec
retf
mov
int3
dec
cmp
and
mov
mov
push
test
in
mov
and
xchg
and
out
not
shr
sbb
push
dec
adc
push
jnp
jnp
sbb
scas
movs
leave
jmp
mov
arpl
xor
dec
xor
imul
aad
out
lea
pop
mov
and
add
(bad)
jns
mov
mov
fwait
outs
lds
movs
sti
mov
je
jmp
mov
push
mov
xchg
ins
les
dec
nop
pop
mov
pushf
retf
leave
or
push
bswap
cmp
addr16
cs
aaa
(bad)
pushf
and
ss
adc
neg
fimul
sub
(bad)
xchg
push
pop
mov
int3
cdq
xchg
popa
sub
sub
jmp
enter
fisttp
mov
dec
sbb
cmp
cmc
pop
mov
sub
jnp
cwde
cmp
out
sahf
rcr
push
out
retf
fdiv
and
cmp
pushf
retf
mov
rol
test
repz
xor
ret
mov
pop
or
call
test
push
jl
push
push
jnp
mov
fstp
dec
pushf
outs
ror
xor
or
add
jmp
pop
push
fadd
data16
sbb
inc
popf
ds
jb
sbb
ret
into
pop
xor
stos
(bad)
add
pop
and
jo
xchg
nop
mov
push
cmp
in
push
push
push
inc
test
loopne
and
retf
shl
(bad)
imul
ins
mov
test
icebp
add
pop
dec
pop
sub
shl
pop
call
and
ins
test
xor
sub
mov
push
xchg
(bad)
pushf
gs
jo
movs
push
push
iret
aad
push
fnsave
push
sti
xchg
in
mov
pop
repnz
aas
add
mov
cmc
jns
data16
push
movs
xchg
stos
lahf
push
stc
push
ja
lahf
gs
fs
push
mov
ret
pop
or
fwait
les
(bad)
lea
out
push
and
jnp
aam
mov
push
xchg
cld
mov
cs
push
movs
test
and
add
sahf
push
xchg
ror
call
fnsave
ins
cdq
(bad)
int
or
pop
dec
inc
cmp
lock
loope
jnp
push
adc
sub
or
scas
and
adc
(bad)
and
int3
and
sub
scas
sub
retf
push
retf
pushf
pusha
loop
jbe
(bad)
push
int3
push
sbb
xchg
mov
jle
hlt
js
int
pop
xor
mov
imul
scas
dec
js
ror
es
dec
push
call
mov
inc
mov
sti
out
mov
xchg
jp
movs
arpl
scas
dec
mov
jo
pop
mov
fistp
or
mov
sti
and
sub
fst
and
cli
cmps
xchg
imul
jp
ret
jb
xchg
push
mov
cdq
sub
or
cdq
dec
test
or
and
inc
adc
xor
clc
out
cli
repz
cmp
(bad)
fist
test
outs
mov
mov
jmp
ins
retf
push
cmp
call
fdivr
add
push
shl
ror
sbb
sbb
dec
(bad)
outs
push
out
cmp
sbb
dec
ja
fldln2
retf
jp
xchg
fidivr
mul
pop
sub
push
xchg
cmps
call
jmp
push
adc
add
xchg
push
stos
stos
ja
das
sbb
push
sub
sub
jbe
mov
icebp
outs
ret
cmc
jge
mov
inc
sar
sbb
mov
xor
xor
mov
(bad)
adc
sbb
jo
cli
repz
mov
dec
lds
icebp
nop
ret
scas
imul
inc
sti
xchg
xchg
adc
jo
outs
sub
jne
push
mov
xchg
push
push
sar
bound
mov
aaa
dec
lods
xchg
scas
push
add
jb
cli
pop
mov
xchg
mov
std
fld
sar
js
in
jg
gs
ret
xlat
and
push
stos
jmp
mov
aad
mov
ret
jge
cmp
pop
ins
(bad)
mov
sbb
or
outs
adc
es
push
sbb
aad
imul
xchg
push
sahf
sub
mov
dec
mov
arpl
(bad)
and
add
mov
in
xor
lock
daa
pop
cmp
push
in
add
dec
js
loopne
add
retf
inc
pop
mov
fcomp
pop
ss
into
mov
dec
jno
push
xchg
movaps
mov
fwait
lods
add
fild
push
xchg
push
cmp
mov
daa
clc
mov
test
je
adc
mov
sbb
or
pushf
push
cld
mov
pop
push
adc
inc
mov
inc
movs
pop
shl
mov
mov
push
mov
ja
push
sub
ins
mov
xor
aaa
push
jne
mov
jno
jne
or
loope
jle
mov
shr
push
cmc
fimul
in
cmp
adc
cmps
pushf
sahf
retf
outs
mov
add
push
popf
ret
add
push
adc
stc
test
into
jo
add
mov
leave
pop
arpl
mov
mov
loope
mov
pop
push
iret
test
sub
lds
test
arpl
mov
addr16
jmp
retf
sub
retf
loope
jns
mov
int3
cmps
xchg
fidivr
(bad)
cmp
cmp
fsubrp
neg
mov
pushf
fcom
movs
je
fisub
mov
and
cmps
mov
inc
in
fst
jae
pop
adc
lods
mov
push
ja
or
cmp
jne
shl
xor
or
cmps
jecxz
xchg
jmp
clc
push
push
adc
lahf
(bad)
movs
cmc
mov
movs
xor
xchg
and
into
fbstp
xchg
aaa
sub
out
nop
xor
jbe
lock
xchg
sbb
sub
(bad)
cmps
pop
(bad)
test
sbb
mov
aad
stos
jbe
jp
jno
gs
movs
push
call
pop
es
sbb
and
mov
cmp
sbb
cmp
dec
rcl
call
push
jle
das
pop
mov
or
add
mov
ins
mov
jl
cmps
jno
(bad)
(bad)
fcom
jp
mov
jo
and
arpl
inc
jl
adc
sub
jle
mov
inc
and
dec
enter
les
pop
pop
pop
ret
xchg
push
sbb
mov
inc
pusha
adc
push
stos
xchg
test
xchg
xor
push
sbb
hlt
sti
xchg
jbe
rcr
out
mov
and
test
call
pop
jae
dec
cmp
adc
(bad)
out
xor
xor
fwait
mov
fwait
jl
push
pop
repnz
pop
fstp
bound
pop
mov
dec
test
xchg
scas
xor
div
ja
aad
pushf
mov
or
movs
out
inc
cli
cmp
movs
aam
shl
pop
adc
jp
aad
cmp
add
mov
aam
shr
mov
adc
outs
jnp
pop
je
inc
mov
cmps
jmp
lahf
xchg
jbe
enter
in
jmp
mov
or
sbb
aaa
nop
mov
test
(bad)
aas
imul
push
jbe
dec
cmps
adc
sbb
inc
std
and
fdivr
sub
mov
inc
mov
sbb
in
jne
inc
movs
cs
cmp
lahf
je
test
fcom
jmp
jno
cmp
dec
stos
sub
sub
jae
outs
sub
push
push
pushf
fs
ins
retf
lock
sbb
cmc
jbe
xchg
retf
into
into
add
push
mov
push
sub
js
fadd
outs
into
and
xchg
repnz
or
jmp
sbb
dec
pop
enter
jne
popf
addr16
fistp
sub
sbb
shr
test
nop
movs
int3
pop
dec
xor
out
add
and
(bad)
xchg
addr16
add
std
push
sbb
push
scas
push
or
mov
int3
mov
push
sbb
mov
outs
repnz
sbb
shr
scas
dec
scas
fstp
pop
neg
pop
call
mov
xchg
sbb
neg
mov
(bad)
mov
mov
out
dec
xor
pop
sbb
jno
sub
arpl
jo
(bad)
xchg
int
aam
mov
xchg
pop
retf
repz
das
in
ins
into
add
test
pop
jl
aad
iret
mov
pop
pop
addr16
cmp
mov
xchg
and
push
ins
iret
jno
add
cmp
and
sbb
scas
dec
cmovl
loope
(bad)
mov
xor
retf
std
sbb
sbb
inc
popf
and
mov
mov
lea
xchg
rcl
xor
sub
jae
sbb
imul
mov
ror
jns
pop
retf
xchg
xchg
sub
add
mov
adc
test
xchg
(bad)
leave
push
loop
movs
sub
xchg
jb
cdq
or
pop
loope
test
call
stos
imul
mov
mov
pop
push
jns
leave
repz
mov
jns
pushf
adc
push
outs
adc
lods
mov
movs
jno
cmps
mov
lods
(bad)
mov
cdq
adc
cmp
dec
jl
jmp
pop
jo
jne
cmps
rcr
sub
xchg
je
push
push
push
xchg
jmp
es
inc
mov
stos
or
gs
sbb
test
inc
daa
in
cmp
dec
retf
xchg
push
aad
fld
pushf
jl
mov
stos
fst
or
aam
repnz
xchg
imul
xor
jb
push
call
mov
pusha
repz
and
mov
jbe
ss
or
mov
retf
js
xchg
jle
test
stc
icebp
in
leave
(bad)
mov
ficom
mov
repz
imul
pushf
xor
pop
xchg
push
sbb
ret
sub
repz
sbb
repnz
in
mov
repnz
xchg
aam
sub
jo
bound
arpl
js
push
sub
out
fimul
outs
sub
jecxz
dec
in
pop
sbb
inc
scas
push
movs
cmp
int
push
(bad)
jg
ins
out
clc
sbb
xor
stos
ret
or
jmp
mov
fwait
jle
dec
xchg
dec
push
addr16
dec
xchg
repz
push
inc
adc
(bad)
(bad)
xor
cmp
out
test
mov
cmps
imul
ja
adc
repnz
jae
jb
movs
stos
pop
cmp
cs
into
leave
jno
jg
cmp
sub
call
jge
adc
jno
arpl
inc
jae
xchg
pusha
adc
cmc
jmp
call
xchg
push
xor
or
out
push
rcl
in
and
outs
mov
fbstp
dec
pushf
push
div
scas
pusha
inc
push
cmp
push
movs
mov
aam
shl
push
test
xchg
faddp
cld
and
xchg
lea
xchg
shr
nop
aaa
daa
mov
sar
fs
outs
mov
ficomp
mov
sbb
sub
cmp
jl
cli
movs
out
push
movs
sub
popa
cmp
test
push
jge
dec
bound
int
inc
jne
xchg
mov
cmp
fst
or
jno
push
dec
sbb
loop
imul
jae
jne
mov
fwait
jmp
jp
popf
mov
loop
xchg
pop
sbb
jnp
fldenv
sub
jp
mov
pop
jge
add
inc
add
dec
adc
xchg
jmp
ins
xchg
fldcw
mov
outs
stos
fmul
mov
jle
cmc
mov
sahf
popf
and
shl
and
test
push
mov
and
pop
inc
sbb
pop
lods
rol
aaa
scas
or
imul
enter
shl
cmps
test
int3
mov
jns
retf
sub
test
xor
xor
ror
jb
fsubr
fnstenv
out
cdq
ror
sub
xor
mov
sbb
loop
cmps
ret
dec
das
stos
or
fwait
scas
push
and
fsub
arpl
pop
jno
mov
xchg
fimul
jl
neg
mov
stos
faddp
push
dec
mov
dec
daa
in
sbb
push
xlat
jmp
(bad)
mov
test
inc
ret
mov
arpl
outs
hlt
mov
mov
loop
js
jecxz
in
jmp
bnd
add
inc
mov
outs
hlt
mov
aad
loop
(bad)
fidiv
xchg
push
or
cld
fisttp
cld
cmp
sbb
sti
adc
out
icebp
lahf
push
lds
xor
loop
(bad)
scas
sbb
in
hlt
lods
in
lea
mov
push
aam
stos
retf
test
jae
cdq
sub
push
and
in
loopne
js
xor
push
je
mov
out
jmp
int3
cmp
js
or
repz
xor
aad
sub
xchg
xor
xchg
push
inc
jp
jnp
xchg
jbe
add
xchg
add
sub
lods
xchg
add
cmp
sbb
dec
aad
cwde
mov
inc
fisubr
repz
idiv
dec
test
xor
jne
sahf
ret
mov
sti
stos
dec
sti
sub
pushf
jge
gs
and
pop
push
mov
test
sbb
loop
jo
imul
jge
fld
mov
retf
sahf
mov
pop
cmps
(bad)
les
or
sub
mov
je
iret
cmp
movs
cdq
inc
ret
inc
test
xor
in
test
pushf
mov
cmp
adc
int
sub
add
jl
mov
cmp
aas
call
cli
mov
imul
sahf
popa
mov
aam
cmp
cwde
dec
xor
clc
pop
scas
dec
push
outs
cli
jo
and
cmps
jmp
push
push
stc
xchg
cmp
js
rcr
not
sub
pop
add
pop
sbb
pop
and
mov
ss
movs
not
sub
scas
sbb
jle
or
pushf
cmps
dec
iret
int
mov
cmp
jae
imul
push
xchg
pop
sub
jmp
xor
xor
fadd
frstor
mov
jg
dec
dec
inc
outs
sti
pop
sti
out
ins
inc
xor
in
mov
mov
mov
sar
or
jne
add
xchg
cs
adc
xchg
sub
push
push
inc
inc
push
int3
mov
xor
test
lahf
cmp
xor
sub
mov
aaa
(bad)
mov
test
xchg
sub
mov
dec
push
jns
cmp
pushf
sub
push
rol
push
test
sub
mov
cmc
jg
retf
loop
pop
mov
push
ja
sar
ss
retf
push
gs
xor
rcl
mov
push
push
jae
mov
inc
inc
shr
cdq
fidiv
daa
popf
and
out
gs
inc
push
or
inc
ret
jnp
push
sub
je
mov
stos
mov
sbb
and
and
sub
rol
xchg
(bad)
and
xlat
mov
int3
xchg
and
and
xchg
dec
pop
adc
outs
imul
jmp
mov
adc
push
fwait
rcl
(bad)
je
int
inc
and
mov
jle
shl
adc
sub
or
adc
jno
and
cs
loop
jmp
jno
daa
bound
xor
call
jne
mov
dec
stos
push
jno
push
jmp
add
add
pop
pop
sahf
popf
pop
push
push
dec
xor
fstp
pop
ret
mov
jbe
xchg
xor
cli
ret
pop
and
adc
dec
mov
fwait
xchg
jb
aas
push
inc
xchg
push
jge
unpckhps
sub
mov
jnp
mov
dec
xor
imul
pop
fstp
je
push
jb
cmp
test
mov
in
lea
jae
test
ret
xchg
push
mov
jo
or
and
sub
and
and
adc
adc
and
or
push
dec
xchg
test
mov
pop
fdiv
inc
nop
push
dec
mov
retf
mov
jp
adc
and
(bad)
pop
popf
repz
inc
dec
inc
jnp
test
fisttp
leave
and
xchg
mov
sbb
jl
cs
sub
mov
and
jmp
popf
shl
mov
and
loope
stos
fwait
sbb
dec
sahf
mov
sbb
xchg
outs
sbb
inc
test
cmp
hlt
jmp
popa
and
jmp
sub
sub
fmul
leave
adc
retf
inc
out
mov
or
nop
(bad)
sbb
mov
out
push
(bad)
pop
cs
mov
icebp
add
leave
cmp
add
pop
sbb
jecxz
popf
test
jmp
ins
dec
rcr
xor
or
into
adc
cmp
std
mov
imul
gs
gs
and
mov
cmp
jno
out
mov
cmps
mov
test
inc
in
add
dec
push
les
mov
(bad)
rcr
out
dec
or
jb
adc
adc
mov
ss
stos
pop
sub
scas
retf
adc
mov
sub
lods
je
sbb
cwde
sub
sar
int3
mov
xchg
jno
jmp
push
pop
retf
movs
(bad)
(bad)
lods
pop
repz
aad
xchg
popf
arpl
cwde
inc
jl
sub
jmp
or
or
pop
pop
loope
mov
outs
or
dec
cli
iret
scas
mov
loopne
gs
retf
mov
ins
dec
mov
push
mov
adc
and
in
inc
imul
xchg
adc
xor
call
out
imul
or
xor
aad
mov
sbb
cmps
int
ret
adc
pusha
add
jbe
adc
les
test
mov
mov
xor
test
xchg
aad
xlat
rcr
jle
ret
mov
sbb
dec
lock
shl
(bad)
std
sub
mov
push
outs
stos
jmp
xor
movs
es
ficom
fisubr
mov
std
cmp
cwde
mov
mov
or
sub
dec
int3
in
adc
clc
mov
or
jmp
mov
mov
add
imul
ss
ret
adc
(bad)
stos
cmps
aaa
jne
shr
outs
cmp
xchg
push
push
jns
push
and
(bad)
imul
cdq
add
pop
out
pop
test
xor
cmp
push
and
push
dec
pop
js
pop
lahf
fisubr
in
cmp
adc
(bad)
cld
stc
jnp
cmp
stos
jle
cmp
movs
adc
sbb
pop
mov
lahf
xchg
stos
dec
rcr
movs
sub
inc
out
or
nop
push
xchg
mov
xchg
out
mov
out
mov
fwait
mov
sahf
cdq
mov
aad
push
hlt
jecxz
mov
mov
or
jecxz
push
arpl
fdivr
mov
cmp
jmp
data16
sub
mov
out
(bad)
sub
pop
push
pushf
sub
ins
in
sub
jmp
xchg
jecxz
mov
test
retf
mov
mov
push
mov
or
and
out
push
mov
jmp
mov
aam
mov
bswap
jg
js
aas
cmc
aas
int3
pop
neg
mov
jmp
stc
push
std
cmps
int
xchg
inc
cs
nop
jle
ret
add
f2xm1
jge
push
push
pushf
or
or
mov
or
pushf
imul
jecxz
dec
cmp
movs
cmp
(bad)
cmp
(bad)
shr
mov
cmps
push
aam
mov
pop
dec
je
fstp
loope
mov
div
xor
lock
mov
cmp
dec
ss
cmps
dec
push
jmp
mov
dec
or
rcr
pop
pop
jb
adc
arpl
push
imul
push
mov
mov
jl
fdivr
jp
arpl
mov
inc
mov
add
inc
(bad)
jg
imul
retf
adc
mov
mov
mov
and
in
jle
mul
(bad)
xchg
and
inc
icebp
jg
aad
test
shr
int3
pop
xchg
(bad)
(bad)
cmp
fs
mov
pop
call
inc
fnstenv
add
test
test
dec
xchg
xor
add
mov
out
sub
scas
inc
and
pop
shr
mov
pop
js
mov
push
hlt
lahf
ds
lahf
ins
loope
jb
nop
add
dec
sub
pop
ja
xor
inc
pop
mov
pop
xor
dec
je
sbb
ror
pop
aas
ret
int
adc
xor
jle
dec
mov
frstor
aam
inc
lahf
mov
push
push
mov
jns
sbb
mov
inc
retf
jns
cmp
adc
push
jp
mov
xchg
dec
jl
sub
mov
imul
ja
fs
leave
fidiv
test
test
cli
mov
lea
sbb
ins
mov
fwait
and
fcmove
jge
pop
lea
and
push
loopne
bound
and
jle
mov
push
add
xor
add
push
arpl
test
mov
je
jbe
(bad)
sub
lods
sub
iret
ficomp
adc
mov
mov
rcl
not
imul
into
dec
jnp
rcl
int
push
jg
aas
jnp
loop
xchg
imul
clc
mov
mov
out
push
fnstcw
mov
xor
cmp
xchg
mov
shl
cmps
adc
aad
test
pop
and
les
out
imul
daa
mov
adc
adc
sbb
adc
mov
repz
(bad)
mov
lea
scas
cmp
scas
shr
pop
cmp
pop
xor
test
or
xchg
sub
test
and
bound
sub
outs
push
mov
jecxz
xchg
ffreep
nop
mov
push
xchg
sbb
mov
into
xor
inc
in
test
js
rol
dec
aam
or
push
sub
xchg
hlt
movs
retf
cmp
xor
adc
mov
gs
popf
dec
xchg
call
out
into
(bad)
sub
sti
mov
jecxz
icebp
pop
cmps
sub
jbe
stos
xchg
jae
mov
gs
cli
inc
cli
adc
sub
pop
sbb
mov
or
(bad)
sub
sub
test
jae
sbb
ins
ret
push
or
mov
inc
jae
pop
add
scas
pop
pop
rcl
mov
push
retf
sti
inc
adc
retf
je
mov
sub
and
mov
cmp
leave
and
popf
inc
mov
(bad)
cmovbe
in
mov
mov
enter
jno
cmp
(bad)
push
inc
inc
add
jno
scas
sbb
fisubr
imul
ss
in
inc
shl
dec
dec
and
in
popa
and
push
mov
ret
cmp
mov
repz
pop
add
and
sub
jb
and
pop
inc
mov
cmc
icebp
cmps
jp
pop
mov
dec
push
fs
mov
retf
je
dec
dec
cmp
xor
enter
stos
sub
data16
test
cmp
adc
retf
jbe
or
sbb
jl
xchg
std
fstp
mov
jne
dec
clc
test
sub
push
ins
pop
hlt
mov
adc
jmp
mov
scas
fst
xor
sub
cmp
xor
sbb
sub
dec
mov
dec
pop
pop
lea
repnz
imul
fisttp
pushf
cld
(bad)
lods
or
sbb
cmps
movs
sbb
lods
call
pop
xor
push
pop
mov
ficom
push
clc
pop
aaa
out
movs
pop
jo
int
ds
(bad)
vcmppd
shr
xchg
xchg
shl
mov
lahf
lds
hlt
in
aam
cdq
stos
repnz
mov
out
sub
out
adc
cmps
inc
ins
test
cdq
push
lahf
push
das
lahf
mov
sbb
sar
jp
cld
ret
fidivr
test
mov
jbe
sub
out
(bad)
or
inc
lods
cmp
mov
pop
in
daa
cld
xchg
add
push
retf
mov
movs
inc
jmp
pop
test
pop
idiv
call
out
sbb
xor
push
(bad)
dec
mov
mov
stos
pop
or
int
iret
adc
push
rcr
or
pop
xchg
mov
mov
hlt
adc
test
dec
mov
not
cdq
out
fidivr
adc
xchg
aam
std
and
xchg
push
mov
movs
sub
sbb
test
push
scas
dec
jnp
xchg
adc
inc
push
jge
arpl
pushf
in
cmp
cmps
out
and
jno
mov
cmps
push
adc
mov
cmp
mov
push
jecxz
pop
inc
mov
sub
lea
push
mov
xchg
xor
pop
inc
das
lods
jbe
mov
mov
lods
dec
xor
mov
outs
mov
movs
mov
dec
push
imul
mov
xchg
pop
mov
stos
cdq
sub
(bad)
xchg
mov
or
addr16
xor
mov
mov
inc
jp
cmp
stos
push
cli
outs
mov
xchg
fdiv
pusha
out
mov
sub
inc
imul
fwait
mov
imul
std
mov
(bad)
jae
les
and
cld
or
repnz
scas
dec
sti
mov
sub
push
shr
cmp
addr16
cdq
sar
retf
outs
sub
ficomp
ret
fisubr
pushf
pushf
pushf
dec
cmp
iret
icebp
dec
stos
xor
pushf
dec
jno
loop
mov
loop
out
xor
clc
pop
pop
xchg
js
mov
sbb
aam
push
dec
pop
xchg
test
lods
push
push
in
dec
sub
xor
mov
imul
pop
sbb
stos
jbe
mov
xchg
push
mov
jle
ret
loope
xchg
xor
lds
ss
pop
push
std
cmp
pop
pop
dec
pop
xchg
push
imul
rcr
dec
fcomp
sahf
ins
and
cld
rol
mov
cmp
xor
test
aaa
das
dec
push
jle
out
jo
mov
std
xor
push
scas
or
or
outs
sbb
movs
push
xchg
movs
fdiv
fild
enter
xchg
jno
inc
adc
sub
inc
jmp
test
fld
push
fistp
add
mov
mov
pop
lahf
popa
popa
ds
or
pop
pop
enter
or
cld
bound
jno
stos
push
mov
in
jnp
inc
leave
xchg
and
push
push
push
xor
sbb
inc
mov
adc
xchg
jg
push
dec
sub
repz
jge
repz
(bad)
in
sti
or
pop
js
loope
add
repz
pop
idiv
sahf
jp
dec
dec
mov
sbb
imul
inc
xchg
mov
cwde
sub
mov
(bad)
push
ins
iret
call
mov
ins
xchg
mov
out
push
xchg
pop
mov
push
fwait
xchg
inc
fild
ss
call
push
or
jnp
cwde
hlt
adc
mov
mov
pop
jmp
div
(bad)
mov
mov
daa
push
jne
xchg
pop
movs
ins
mov
pop
push
repnz
xchg
sub
mov
cmp
or
ret
fcom
xchg
inc
js
out
lahf
mov
push
jmp
pop
fld
call
push
movs
call
lea
rcl
mov
ss
test
push
pop
xchg
pop
out
and
adc
inc
ds
jl
je
into
pop
(bad)
outs
cmp
pop
cli
cwde
mov
pop
jg
dec
xlat
mov
clc
ins
jne
in
jo
mov
out
icebp
jecxz
ja
in
sub
das
push
mov
fcomp
inc
pop
das
pop
mov
or
adc
xlat
cwde
push
inc
rol
mov
hlt
je
in
gs
das
xchg
call
loope
in
cmp
arpl
inc
loop
das
(bad)
cmc
shr
out
jns
repz
jle
jl
mov
aad
inc
xchg
cdq
cmp
mov
dec
jecxz
or
xor
sbb
push
mov
jmp
dec
pop
cmps
adc
test
jmp
xchg
hlt
xlat
repnz
test
sub
mov
pop
push
push
int3
fld
cmp
ret
lods
stos
gs
dec
xchg
dec
cli
inc
or
retf
test
imul
and
or
gs
adc
loop
(bad)
fnclex
inc
rol
pop
mov
gs
mov
(bad)
cmps
int3
mov
add
adc
mov
xor
(bad)
bound
mov
aas
inc
sbb
mov
mov
lods
jmp
(bad)
cs
in
pop
xor
mov
mov
push
push
imul
push
shl
in
xchg
out
fidivr
add
dec
outs
pop
mov
sbb
rcl
imul
add
les
push
js
(bad)
push
lds
cmc
jle
mov
in
pop
jb
and
jns
or
inc
cmp
inc
and
lods
gs
lods
or
mov
cld
push
adc
aad
mov
xlat
popf
xchg
mov
lock
jmp
stos
imul
das
inc
cmp
test
(bad)
stc
mov
mov
nop
jp
xor
dec
inc
icebp
sub
out
(bad)
cmp
sub
inc
gs
mov
push
xchg
sub
xchg
inc
out
inc
vmread
jno
outs
fdiv
dec
sub
mov
outs
lods
into
jb
test
xchg
dec
jmp
xchg
cmp
dec
scas
adc
jnp
jne
repnz
mov
push
xchg
(bad)
jl
arpl
sti
inc
test
jp
xchg
imul
mov
xchg
cmps
xor
movs
and
enter
adc
lea
aas
dec
ds
xor
hlt
adc
scas
gs
aam
xor
les
mov
and
pop
rcl
dec
cmp
inc
retf
fxam
popf
test
leave
inc
mov
xchg
ror
push
leave
shl
mov
aas
mov
das
push
pop
cmp
in
test
out
mov
push
popa
repnz
aas
shr
ret
lods
adc
adc
mov
mov
popf
push
shr
mov
sub
mov
out
or
mov
cmps
pop
je
cli
add
out
inc
sub
movs
sbb
pop
xchg
dec
dec
mov
pop
dec
das
(bad)
movs
jl
jno
movs
ficomp
shl
nop
cmps
xor
and
int3
cld
retf
jns
jns
inc
not
jns
dec
mov
mov
jg
mov
(bad)
push
mov
lea
fcomp
das
loop
jmp
dec
push
idiv
xchg
push
mov
(bad)
xor
fwait
and
mov
call
xchg
pop
jns
(bad)
and
fnclex
push
push
adc
mov
ret
(bad)
jle
add
cld
push
jo
jo
adc
mov
retf
jmp
adc
xlat
addr16
push
and
cdq
pop
popf
outs
adc
adc
jb
icebp
xor
jne
bound
sahf
popf
mov
out
jle
push
sahf
or
loope
jns
scas
or
xor
xchg
jae
xor
mul
fstp
ret
xchg
aas
sbb
jg
sbb
jae
test
scas
pop
mov
mov
fnstcw
loop
inc
mov
cmp
(bad)
sbb
inc
inc
and
xchg
xor
inc
jp
push
nop
cmp
lods
push
xchg
js
movs
in
xor
push
(bad)
(bad)
mov
cmps
xchg
sti
inc
mov
call
daa
adc
dec
sub
sbb
cmp
gs
cmc
jbe
pop
mov
test
mov
cwde
pushf
repz
nop
movs
fs
and
mov
cmp
dec
push
cmp
icebp
xlat
add
sub
getsec
jnp
sbb
xchg
int3
push
out
add
xchg
retf
mov
inc
test
jp
movs
pop
frstor
pop
pop
xor
arpl
jae
gs
cmc
les
bound
outs
ret
movs
movs
xor
stc
pop
shr
ja
jmp
retf
or
adc
repz
es
and
cmp
call
xchg
scas
cmp
mov
ins
sbb
jns
jnp
retf
out
stos
dec
test
pop
mov
fs
retf
enter
xchg
and
aam
push
clc
test
push
lahf
icebp
gs
retf
ins
pushf
clc
push
lea
push
cmps
push
adc
lods
shl
push
cli
cmps
xchg
das
das
(bad)
jg
pop
jmp
je
push
icebp
arpl
gs
fisubr
push
out
loop
pushf
gs
sar
iret
pop
mov
push
outs
push
pop
lea
pop
mov
sar
idiv
sbb
jmp
mov
cld
movs
cdq
cwde
push
lods
and
mov
cmp
fistp
aaa
and
push
push
add
in
popa
xor
push
push
pop
xor
xchg
mov
push
jmp
bound
mov
adc
gs
sub
int
aas
xor
sub
div
inc
or
sub
and
mov
pop
sbb
xchg
out
sbb
repnz
inc
jmp
xchg
int
test
rol
dec
jae
outs
ja
in
mov
ss
seta
in
ror
sub
inc
div
or
enter
xchg
mov
sub
test
mov
retf
jl
fist
fist
test
xor
(bad)
movs
in
test
dec
pop
(bad)
movs
adc
sub
xor
sub
call
repz
pop
or
imul
movs
daa
mov
inc
ret
loop
shl
(bad)
in
mov
lods
xor
xlat
sub
mov
push
pop
jae
dec
xchg
mov
std
fbstp
(bad)
xor
jnp
sbb
xor
pop
jl
add
sti
sbb
sub
dec
push
popf
cmp
dec
aas
pop
sahf
mov
ja
mov
dec
ins
mov
test
dec
outs
imul
mul
test
pop
outs
movs
ins
nop
ja
or
or
xchg
movlps
adc
cs
pop
out
pop
sahf
mov
stos
push
sbb
js
jae
std
cmp
push
dec
in
stos
or
mov
lods
fdiv
scas
adc
pop
adc
test
movs
push
jbe
imul
cmp
out
mov
out
in
gs
cmp
or
cmovle
jge
mov
push
out
into
enter
cmps
mov
scas
repnz
lahf
psllq
lea
movs
push
nop
or
add
sub
movs
or
movs
push
or
ds
fldenv
sub
and
popf
mov
adc
aam
das
push
mov
sub
arpl
int
inc
std
sbb
(bad)
dec
push
(bad)
rcl
aad
mov
push
jp
xchg
aas
shl
out
icebp
or
push
cmp
pop
and
jmp
imul
sub
dec
mov
call
ret
(bad)
mov
test
daa
lods
jge
inc
sbb
sub
gs
idiv
imul
ret
addr16
sub
jb
js
push
inc
in
cmp
(bad)
stc
jle
repz
jno
jns
jmp
cmp
push
push
repnz
scas
or
mov
push
aam
es
jle
dec
add
movs
mov
pop
cdq
cmp
and
dec
jb
pop
dec
jns
push
movs
push
cdq
jl
cs
dec
jno
pop
inc
or
xor
push
or
xchg
shl
jne
popf
sahf
fdiv
mov
jne
fstp
mov
in
jg
push
fild
inc
mov
pop
push
loopne
jle
popf
sub
mov
push
repnz
ins
mov
out
adc
cmp
mov
clc
ss
push
pop
loopne
lods
lahf
into
int3
out
ja
jmp
jbe
js
cs
push
shl
imul
push
test
dec
(bad)
cmp
xchg
addr16
mov
mov
arpl
imul
cwde
lea
push
enter
mov
rcr
xchg
call
mov
bound
mov
adc
mov
xor
mov
xchg
out
fs
jecxz
scas
cmp
xor
addr16
and
ds
jnp
sub
(bad)
xor
out
addr16
sub
cmp
jmp
cmp
sar
cmps
int
vmovsd
jbe
mov
ficomp
sahf
pushf
popf
js
dec
cmps
enter
adc
pop
retf
gs
jbe
inc
xchg
lods
add
hlt
cdq
ss
pop
sbb
jo
mov
push
xchg
or
fs
xchg
push
loopne
out
pop
idiv
fnstcw
xchg
in
cmps
mov
lods
mov
ins
shr
sub
inc
loop
pushf
push
jmp
adc
jno
sahf
jge
icebp
outs
in
cmp
sbb
iret
scas
loopne
xchg
iret
xchg
cmps
lahf
mov
add
rol
sar
ret
js
mov
lods
adc
(bad)
xchg
call
movs
pusha
adc
and
loop
xor
pop
cmp
(bad)
jle
or
and
iret
(bad)
pop
ret
pop
add
out
jmp
mov
sbb
aam
cmp
xchg
dec
sub
shl
mov
fnstenv
jle
out
cmp
out
sbb
add
jns
add
push
jb
icebp
jp
out
xor
ret
cmps
lea
in
mov
(bad)
xor
adc
dec
retf
mov
test
scas
xchg
jl
fsubr
push
(bad)
cmp
inc
movs
jp
mov
ret
mov
cmp
call
fcmovnu
and
xchg
movs
push
(bad)
movs
lock
movs
stos
xchg
lods
shl
call
imul
mov
mov
(bad)
mov
cmps
sahf
or
push
(bad)
inc
inc
sar
jae
imul
adc
lods
test
loope
(bad)
lahf
lds
pushf
jle
mov
push
sbb
test
xchg
inc
and
pop
inc
cmps
or
mov
aam
addr16
cs
aam
rcl
dec
fnstsw
mov
jmp
rcr
dec
dec
pop
mov
cwde
test
xchg
out
mov
mov
cmps
and
pop
test
stos
mov
dec
aad
retf
je
in
cmp
mov
imul
das
or
xchg
dec
mov
stos
adc
sbb
gs
pop
add
xchg
add
push
scas
push
sub
xlat
xlat
dec
mov
sub
xor
loop
sub
sbb
rcr
cld
xor
mov
xchg
xor
dec
cmps
pop
push
or
lds
cdq
fcom
add
add
sbb
arpl
cmc
fist
dec
or
mov
xchg
mov
loop
inc
lods
pop
sub
push
out
pop
mov
daa
or
push
mov
not
add
(bad)
fbld
lods
adc
outs
aam
fiadd
sbb
pop
clc
mov
mov
jbe
mov
pop
adc
ret
lahf
loopne
xlat
stc
jle
arpl
add
adc
push
inc
xchg
pop
fld
fst
std
sar
test
out
outs
retf
hlt
ins
add
adc
jae
in
cs
in
outs
jmp
push
nop
cdq
xchg
xchg
mov
cmps
retf
sub
dec
sti
mov
int3
sbb
lea
test
push
ins
push
cdq
call
jne
pop
lea
fisub
es
push
or
addr16
fdivr
cmp
xor
cmp
ret
ja
pop
test
sbb
cli
test
mov
adc
cmp
adc
stos
sub
cmp
repnz
loope
stc
mov
stos
getsec
lds
stc
xor
push
sub
sub
mov
movs
and
mov
pop
mov
lea
sub
or
scas
jae
jbe
mov
ins
mov
mov
jp
add
test
mov
es
jb
sti
scas
push
sbb
cmp
xchg
cld
pop
and
mov
lods
iret
jmp
sub
scas
in
and
sub
aam
add
nop
mov
mov
jae
ror
pop
or
adc
jnp
jmp
xchg
es
ins
cmp
push
push
sbb
push
xchg
mov
xchg
xlat
scas
ret
in
mov
div
xchg
mov
pop
fld1
or
or
into
and
(bad)
dec
xor
mov
std
scas
pop
je
lahf
xchg
push
shl
add
fmul
push
repz
xchg
int
hlt
les
and
add
test
dec
mov
dec
mov
sbb
mov
and
xchg
sbb
(bad)
add
cmc
frstor
out
fidivr
xor
arpl
sub
jle
mov
or
sub
sbb
cli
cwde
data16
lods
cli
cld
repz
add
pop
mov
dec
js
mov
(bad)
pushf
les
sbb
loopne
out
rol
scas
dec
test
popf
and
and
mov
sahf
out
test
mov
and
and
add
ds
movs
test
and
jne
or
in
jg
adc
leave
xchg
in
(bad)
xor
in
and
xchg
mov
test
dec
add
and
fadd
sub
bound
lahf
scas
and
sbb
sub
(bad)
aaa
in
movs
shl
add
or
frstor
les
pop
xchg
cs
sbb
fld
test
sbb
sub
pop
sub
out
adc
fistp
or
addr16
(bad)
mov
ins
push
adc
xchg
fnstsw
and
push
pop
xchg
test
and
scas
mov
xchg
sar
add
lods
neg
out
adc
ins
mov
ret
jg
idiv
ror
(bad)
push
adc
cmp
xchg
sub
jmp
cmps
in
xchg
fnstenv
fisttp
aaa
out
cli
sub
sub
test
stc
(bad)
retf
std
xor
retf
je
hlt
movs
sub
xor
xlat
lds
jp
sti
aas
cmp
lods
pop
lock
in
call
out
jmp
xor
sti
inc
mov
test
fisttp
hlt
pop
not
push
dec
lock
ja
sbb
neg
stc
mov
inc
outs
movs
inc
in
xchg
xchg
cmp
mov
adc
xlat
imul
jno
lds
mov
cwde
jmp
inc
ret
jnp
cli
out
jbe
mov
cmc
cmps
push
in
push
mov
scas
aaa
sub
gs
dec
sti
dec
ins
sub
xchg
in
add
cdq
add
frndint
sbb
xor
fisubr
cmp
icebp
imul
mov
loop
out
sahf
pop
or
cli
sar
pop
jmp
popa
mov
sti
or
enter
jmp
jmp
or
xchg
sti
pushf
mov
adc
lock
dec
jecxz
jno
push
idiv
pop
fucomi
das
jge
rol
popa
jo
imul
sar
sbb
jl
xor
cli
test
loop
(bad)
lds
adc
loop
xchg
fcmovbe
adc
gs
test
repnz
push
mov
or
pop
in
mov
sub
(bad)
aad
int
sub
fisttp
inc
adc
repnz
pop
sub
cmp
push
repz
push
jbe
cmc
push
dec
aas
xlat
mov
jns
xor
cs
repnz
inc
mov
mov
cmp
jle
xor
(bad)
sub
sub
jbe
movs
inc
das
add
mov
dec
fwait
pop
jg
mov
stc
int
hlt
ss
jae
les
jno
test
inc
ror
scas
int3
sahf
mov
dec
imul
fld
mov
pop
xchg
push
xchg
jge
imul
imul
pop
xchg
xlat
inc
pop
or
scas
inc
cli
sar
das
lds
jl
in
push
cdq
push
mov
ret
lods
shr
mov
fwait
movs
push
and
out
popa
movs
or
or
xchg
mov
retf
jmp
xor
movs
pop
ss
pop
call
test
sbb
inc
pop
lds
ud1
das
mov
or
dec
hlt
retf
call
push
je
out
cmps
sub
mov
add
xor
ds
inc
push
stc
push
ja
inc
jp
test
xchg
sbb
xlat
mov
ja
ins
push
push
mov
test
jbe
fldenv
cmps
mov
cmp
repz
mov
sbb
push
add
jp
lods
push
ret
arpl
dec
repz
sub
scas
ins
popf
fcomi
inc
sub
ficom
stc
sub
fld
out
push
pop
repz
test
lahf
mov
mov
ins
dec
rcr
push
push
pop
popa
or
pop
lods
jl
sbb
mov
iret
gs
mov
inc
pop
xchg
aam
sbb
add
not
sbb
push
xchg
in
push
adc
arpl
sub
sub
and
popa
xchg
enter
pop
je
aam
mov
lea
jbe
push
movs
int
ins
mov
rcr
cwde
in
adc
adc
jnp
ins
inc
dec
mov
xchg
mov
xchg
aam
int
fldenv
lock
scas
push
sub
retf
dec
retf
cmc
mov
fst
mov
mov
outs
xlat
and
sub
sbb
popa
inc
stc
xor
mov
jnp
mov
pop
repnz
les
dec
mov
loope
loopne
dec
(bad)
cmp
lock
ja
push
out
jmp
icebp
inc
aam
mov
aas
adc
movs
je
mov
jge
imul
pop
xor
and
jmp
jo
bswap
in
xor
inc
xchg
inc
lods
cmc
aas
dec
add
jbe
fisub
retf
inc
stc
fwait
ins
jmp
xor
in
ret
push
add
(bad)
jb
sbb
xor
fninit
cmp
mov
leave
iret
fisub
aam
mov
adc
ds
inc
push
aas
es
enter
dec
inc
dec
sub
inc
pop
ds
stos
dec
gs
lods
inc
cli
lods
aas
hlt
lds
lahf
shr
shl
cld
pop
inc
je
sub
pop
in
mov
cmp
xchg
or
cmp
push
add
out
mov
call
pusha
jnp
leave
ds
mov
sub
mov
push
push
mov
aam
out
mov
bound
xor
xchg
repz
lods
mov
(bad)
inc
test
ja
and
jb
pop
cli
jle
(bad)
test
jne
dec
push
jmp
popa
loope
cmp
jns
(bad)
and
movs
popa
mov
repz
lods
sub
dec
shl
mov
div
xchg
int3
scas
clc
int
cs
ins
sub
jp
movs
jle
outs
stos
jge
dec
adc
inc
sbb
pop
stos
iret
jae
repnz
mov
mov
movs
ret
dec
dec
loope
daa
retf
jnp
hlt
mov
cs
aad
push
mov
cli
pop
in
ror
jno
dec
ret
xchg
mov
mov
fld
ss
lods
sbb
cwde
lahf
mov
push
mov
aaa
test
dec
xor
scas
enter
xor
and
add
xchg
imul
pop
inc
sub
dec
rcr
push
ja
aad
jmp
(bad)
fistp
add
aam
xor
push
push
mov
fsub
sub
ret
mov
push
sahf
sti
mov
adc
pop
sbb
inc
mov
mov
mov
jle
js
retf
mov
in
inc
mov
movs
test
(bad)
shl
rcr
cmps
int3
retf
out
int3
inc
loop
sub
fcmovnbe
push
pop
fcom
les
ret
sub
test
sub
push
scas
push
pop
imul
jmp
shr
dec
mov
jmp
dec
loope
jp
mov
pop
or
retf
push
adc
add
(bad)
add
push
rcr
xor
(bad)
xlat
(bad)
loop
xchg
jae
pop
(bad)
pop
cmp
or
call
cmc
mov
mov
das
xor
rcr
fwait
movs
adc
inc
adc
shl
mov
rcr
call
dec
stos
std
daa
aad
shl
xchg
pop
sbb
jp
das
inc
lods
jg
loopne
dec
fstp
(bad)
mov
mov
loopne
dec
sahf
sub
fcmovu
jp
bound
xchg
xchg
cwde
rcl
xor
inc
dec
mov
cmp
shr
ficom
cmps
pop
fisubr
icebp
dec
xor
shl
cmps
shr
cmp
out
push
ret
xor
test
je
xor
jno
jnp
sub
popf
jb
mov
mov
shl
pop
adc
mov
mov
ror
xor
lods
mov
inc
push
das
xchg
in
mov
ins
mov
xchg
fs
stos
xchg
cdq
or
pop
dec
xchg
dec
cld
sub
xchg
scas
retf
mov
mov
popf
rcl
(bad)
mov
je
jmp
sub
mov
xchg
(bad)
int3
iret
out
jmp
inc
cdq
pushf
dec
dec
xchg
sbb
push
aaa
arpl
mov
shl
daa
mov
jnp
sub
cdq
mov
ret
std
gs
std
cld
xchg
cmp
cmp
stos
data16
test
and
cmp
fdivr
ins
push
movs
out
xchg
push
clc
adc
aad
push
mov
sbb
(bad)
fdiv
adc
loop
dec
ins
dec
(bad)
js
jne
or
int
lods
xchg
jno
mov
movs
mov
or
sub
push
cdq
(bad)
dec
dec
lods
aas
mov
cmp
test
mov
sti
pop
inc
xchg
shr
dec
fisttp
inc
mov
(bad)
xchg
cmp
imul
mov
mov
and
push
mov
fsubr
cs
pop
fild
lds
mul
int
addr16
sahf
imul
mov
faddp
mov
pop
sub
adc
xor
xor
cmp
cwde
fsubr
dec
xor
mov
sub
xchg
inc
mov
xchg
or
arpl
imul
(bad)
clc
xchg
mov
in
test
bound
fsubr
inc
test
cdq
(bad)
sbb
dec
mov
sbb
push
shl
sbb
cmp
(bad)
jle
out
sub
enter
sbb
stos
call
push
ins
inc
movs
(bad)
push
jmp
xchg
sbb
out
hlt
mov
push
aam
ins
stos
lods
pusha
cmp
retf
ret
fs
fadd
xchg
int3
bnd
outs
movs
ss
inc
popf
pop
(bad)
xchg
lods
push
data16
icebp
jno
push
out
or
pop
dec
ins
sti
and
retf
cdq
test
test
or
mov
aam
std
push
mov
ret
xor
sub
fistp
popf
xlat
mov
lods
call
lea
xchg
outs
jne
cdq
(bad)
ds
mov
sub
pop
rcr
pop
mov
cmp
pop
mov
xchg
dec
mov
shr
xchg
jecxz
loope
or
ror
call
movs
push
js
loop
popa
xor
jae
push
movs
dec
aad
cdq
sbb
sub
(bad)
mov
dec
jge
call
jmp
sbb
and
push
retf
cdq
leave
pop
pop
idiv
inc
jmp
mov
sub
out
lds
push
cmp
fldcw
pop
ins
jno
sub
jno
xchg
pop
and
out
loopne
mov
(bad)
pop
jecxz
mov
shl
push
sub
mov
movs
stc
push
push
movs
dec
dec
sub
xor
push
adc
pushf
jle
or
addr16
pusha
mov
push
ret
ds
icebp
jl
cs
sti
call
push
pop
add
into
movs
rcr
cmp
icebp
loope
(bad)
pop
popf
call
inc
cmps
das
gs
scas
xchg
inc
xlat
sub
pop
mov
push
pop
(bad)
stos
fisub
rcl
cmc
pop
cmp
rol
inc
das
pop
std
retf
mov
(bad)
aaa
ret
cmp
movs
jae
enter
xchg
fsubr
out
dec
imul
icebp
push
stc
jle
inc
xor
cmp
inc
int3
loop
add
push
daa
clc
mov
cdq
dec
enterw
pop
mov
xchg
pop
aam
cmp
jno
repnz
jne
sub
inc
cli
cld
mov
push
adc
mov
mov
pop
fimul
fwait
mov
fucomp
lahf
das
enter
jno
js
xchg
stos
arpl
cmp
push
stos
mov
jp
pop
push
(bad)
mov
adc
push
or
or
popa
inc
cmp
in
sbb
ins
movs
in
cld
mov
div
shl
mov
xor
inc
mov
dec
(bad)
cmp
fs
sub
outs
retf
push
popf
mov
pop
popa
call
jne
scas
cdq
and
push
aaa
aaa
das
cmp
mov
push
xchg
cmps
xchg
jmp
mov
mov
dec
jmp
ror
xchg
imul
pop
adc
add
push
sub
fwait
movs
push
add
pushf
mov
xchg
pop
ins
test
or
ror
xlat
push
cmp
inc
(bad)
pushf
inc
add
es
in
adc
lds
cmps
or
xchg
xchg
xlat
or
div
jge
jecxz
int3
movs
pop
jp
imul
mov
cwde
jecxz
sub
mov
jmp
jb
sahf
rol
sub
gs
movs
push
xchg
jle
sub
out
lods
rcr
xchg
lahf
ffreep
pop
ret
(bad)
adc
es
pushf
push
jmp
inc
scas
push
xchg
cmp
into
aaa
in
xchg
in
inc
loope
or
xchg
loopne
aad
mov
fcmovne
jg
inc
retf
repz
pop
dec
push
test
jg
cdq
adc
sbb
jmp
(bad)
or
ds
cmps
data16
fcomp
xchg
cwde
xchg
xchg
cdq
imul
je
or
dec
dec
loope
jp
retf
sub
xlat
sub
fsubrp
es
and
rol
mov
ja
scas
add
ins
ins
imul
pop
rcr
retf
dec
fidivr
adc
xor
ins
(bad)
jns
sbb
lods
call
xor
fisttp
cdq
sti
sub
or
cdq
int
shl
je
push
movs
test
repnz
sti
lahf
cli
pop
ret
call
rcr
out
cli
dec
cs
jmp
sub
lods
stos
fs
push
and
ds
mov
popa
int
sub
mov
movs
inc
inc
aaa
imul
repz
mov
call
pop
cs
adc
fnstsw
mov
xchg
dec
cmps
cmp
adc
std
inc
aad
imul
and
push
stc
add
xor
das
shl
mov
data16
stos
jno
jnp
out
jne
jb
outs
retf
call
aas
push
popf
pop
aam
iret
test
sti
mov
retf
leave
cmp
ins
mov
sub
retf
xchg
pop
adc
push
mov
jb
retf
cvtpi2ps
lods
mov
int
test
lods
and
jmp
or
movs
mov
jno
mov
sub
pop
push
jge
les
fwait
dec
xchg
outs
push
dec
test
neg
ror
mov
fcom
cmp
sbb
data16
cwde
cwde
push
push
mov
inc
push
mov
cmps
pop
jae
push
fldcw
das
shl
push
retf
xor
out
xchg
sahf
jno
cmp
cmp
push
mov
lods
or
mov
jb
pop
jbe
out
iret
dec
adc
or
or
pop
bound
push
mov
dec
outs
arpl
xchg
outs
jno
ds
cs
push
adc
gs
adc
mov
add
retf
fwait
mov
sbb
mov
mov
into
xchg
es
xchg
sub
inc
inc
mov
add
add
shr
jno
(bad)
aaa
lods
dec
ins
imul
stc
xchg
mov
ret
loop
lods
inc
outs
push
push
loope
pop
push
(bad)
rcl
repnz
rcr
gs
add
ins
(bad)
aaa
xor
pop
bound
cmp
mov
loop
sar
js
mov
xchg
ja
xor
jg
(bad)
rol
dec
jns
inc
scas
imul
por
fs
jmp
mov
inc
jbe
pop
loopne
aam
dec
dec
daa
xchg
jmp
xor
cmp
jno
xchg
stc
inc
sub
cmps
cli
repnz
out
lea
add
fdivrp
aas
icebp
fldenv
xchg
cmp
stos
int
jne
add
xor
call
fisubr
movs
mov
aad
fld
mov
cdq
xchg
or
cmps
dec
mov
or
icebp
inc
lods
data16
mov
outs
push
ins
(bad)
outs
je
cmp
sub
outs
jnp
imul
add
xchg
movs
lahf
mov
push
push
call
and
shr
mov
out
mov
lds
mov
inc
fwait
xlat
in
adc
mov
add
jecxz
mov
lea
js
dec
aad
ror
sub
sbb
adc
xor
jne
neg
mov
inc
push
mov
push
cmp
xchg
dec
sti
imul
pusha
sbb
add
xchg
sbb
mov
int3
clc
fdivr
popa
sbb
aas
mov
adc
mov
test
jbe
inc
(bad)
cmc
inc
dec
xchg
push
inc
dec
shl
push
int3
jmp
pop
shr
sub
xchg
cmp
inc
sbb
adc
and
push
out
mov
xlat
xchg
adc
inc
sbb
jne
inc
rol
add
fs
inc
xchg
test
push
ror
sub
enter
test
pushf
push
call
mov
and
push
pop
clc
cmp
jmp
daa
jnp
xor
mov
stos
call
out
mov
dec
xor
xchg
push
xlat
call
cmp
stc
int3
adc
mov
pop
adc
xchg
push
dec
je
stc
jg
popf
movs
movs
or
inc
sbb
outs
cwde
repz
push
adc
adc
pxor
and
hlt
ret
mov
shl
xchg
mov
call
cmp
ficom
xchg
jns
jne
das
inc
jg
mov
loop
jne
pop
ds
sbb
pushf
movs
xor
inc
mov
pop
xchg
xor
xchg
jl
jg
into
inc
imul
dec
loop
xchg
push
jne
(bad)
rol
popf
sahf
stos
int3
pop
xor
jne
ins
push
push
out
push
cmps
les
inc
ret
and
mov
dec
push
sbb
fst
ins
mov
push
in
or
jns
pop
inc
dec
out
dec
sub
scas
pop
mov
icebp
jl
mov
push
out
jmp
mov
dec
cmc
cmps
dec
cdq
cmps
dec
rcr
jp
ins
enter
sahf
xchg
xchg
dec
(bad)
sbb
pop
push
jbe
inc
popf
jg
sbb
add
retf
xor
xchg
call
mov
xchg
shr
rcl
mov
mov
hlt
mov
fild
add
mov
cmc
jnp
push
push
mov
sub
ds
leave
cmp
cmp
pop
out
xor
fdivr
rcr
mov
fild
js
push
inc
inc
xor
push
call
mov
lds
jnp
movs
jle
xor
jns
int
sub
inc
jns
sahf
stos
pop
mov
xchg
(bad)
aam
and
mov
and
xor
ret
(bad)
hlt
cwde
sahf
jmp
push
sbb
jne
push
movs
add
repz
aaa
out
out
cmp
sub
adc
push
repnz
sbb
cwde
bound
stos
push
jge
sub
aas
sbb
out
in
mov
fcomp
pop
push
mov
lock
in
mov
fsubp
sbb
adc
jne
movs
cli
cmp
mov
arpl
cmp
stos
cmps
push
sbb
jb
pop
das
out
jmp
mov
jge
repnz
sub
fs
adc
cld
dec
pop
retf
fisttp
sub
dec
mov
stos
pushf
jns
lods
cld
xchg
sub
mov
ficomp
jmp
jae
push
pop
(bad)
jae
mov
mov
push
inc
bound
retf
adc
dec
sahf
call
jp
and
stos
into
jge
dec
xchg
cld
sbb
push
(bad)
cwde
out
ja
dec
ja
(bad)
aaa
call
add
(bad)
pop
lds
pop
mov
cmps
sbb
jnp
(bad)
mov
cmps
pop
sub
xchg
adc
into
mov
retf
cmc
mov
push
push
sub
sbb
push
mov
movs
fwait
mov
adc
fnstcw
idiv
jae
out
mov
std
push
cld
sbb
lods
mov
in
sub
jge
cdq
fwait
xchg
jge
mov
jns
in
xchg
sahf
pop
cmp
mov
(bad)
sub
(bad)
fstp
dec
pop
sub
push
(bad)
pusha
and
fbld
push
aad
mov
pop
sbb
sbb
mov
push
icebp
mov
pop
cmp
dec
lock
dec
cmc
jg
std
pop
test
dec
icebp
adc
dec
push
fist
shr
adc
call
inc
mov
adc
popf
out
sbb
jp
mov
scas
dec
mov
mov
dec
in
(bad)
xor
jnp
sub
adc
cmc
push
stc
mov
jl
push
jo
imul
sub
pop
xchg
mov
jecxz
mov
bound
mov
jnp
pop
mov
out
xor
adc
dec
dec
imul
fild
pop
lahf
nop
stos
mov
jbe
cmp
jl
jp
cmp
cmp
int
imul
test
stos
jae
mov
add
vphsubbw
call
jmp
jmp
pop
mov
dec
mov
dec
xchg
push
stc
sub
push
fcmovb
shl
pop
nop
jecxz
mov
fsubr
mov
sub
pushf
pop
push
sub
call
rep
in
bswap
mov
dec
xor
dec
pop
inc
cmps
call
push
mov
push
mov
pop
getsec
and
sub
addr16
dec
pop
xchg
jns
ficom
aaa
pop
aam
adc
retf
aaa
jbe
push
data16
jbe
lock
mov
leave
jno
daa
push
cmc
xor
xor
leave
add
mov
jns
add
adc
and
rcl
push
mov
aad
jne
repz
push
out
ror
jle
stos
ss
fldenv
mov
jb
or
jne
push
fdivr
repz
scas
sbb
arpl
mov
fisttp
mov
jne
lsl
js
mov
movs
push
sbb
test
leave
movs
add
push
iret
(bad)
mov
jle
xor
test
daa
movs
sub
jmp
scas
scas
push
xchg
push
pusha
mul
hlt
xlat
sbb
pop
shr
scas
inc
das
inc
call
jb
lods
mov
sub
aas
add
jle
lds
or
jbe
imul
adc
mov
inc
xchg
call
dec
dec
push
adc
inc
test
retf
(bad)
jnp
sub
repz
push
sub
ins
test
jo
jp
cmp
data16
xchg
(bad)
into
xchg
loopne
push
cmps
outs
ds
in
jns
mov
mov
jmp
int3
outs
outs
dec
sub
std
cwde
sahf
jmp
add
jmp
in
push
lock
pusha
stos
dec
les
hlt
ret
mov
xchg
xchg
dec
inc
lods
lods
in
mov
mov
es
call
pop
cdq
clc
pushf
xor
xlat
push
call
retf
or
and
dec
shl
mov
rcr
xor
xor
mov
xchg
cmps
idiv
lahf
dec
fist
sar
sub
push
pop
xor
(bad)
xor
adc
xchg
dec
sbb
rol
or
call
mov
in
stos
jnp
xchg
mov
int3
test
das
es
enter
cmp
and
jle
adc
adc
mov
mov
ins
aam
icebp
sub
adc
mov
cmps
rcr
hlt
and
xchg
in
inc
ret
adc
jmp
int3
mov
inc
and
cmp
(bad)
jl
mov
adc
push
scas
pusha
ins
jp
sbb
lock
in
in
(bad)
loopne
jmp
ds
cs
(bad)
push
push
jae
std
and
xor
jl
retf
inc
jns
lds
dec
sub
sub
adc
xchg
xchg
push
inc
in
jae
iret
movs
cmc
push
inc
dec
ret
xchg
test
mov
pop
pushf
jb
xor
inc
(bad)
loope
push
mov
and
and
test
sahf
dec
out
mov
push
xor
xchg
gs
xchg
popf
xchg
adc
inc
and
pusha
sbb
stos
cmp
and
xchg
mov
pushf
outs
add
mov
retf
scas
pop
mov
aam
jae
mov
push
ret
push
pusha
and
push
pop
fcmovnbe
rcr
mov
pop
call
sbb
or
test
and
adc
cmc
mov
mov
cmp
jo
or
popa
shl
push
nop
imul
(bad)
retf
adc
test
and
bound
gs
xor
pop
cmc
les
adc
push
or
mov
out
repnz
mov
cmp
test
pop
pop
or
cmp
mov
pop
jno
jns
add
jmp
mov
out
fnstenv
push
cmp
xor
xchg
xor
xor
and
jbe
out
adc
leave
fwait
shr
scas
add
cmp
sbb
sub
adc
rcr
fild
and
mov
popa
xchg
pop
xchg
inc
cdq
sub
pop
dec
pop
loop
pop
hlt
je
addr16
mov
or
add
push
xchg
sub
cdq
pop
lds
dec
cld
jmp
pop
jo
mov
inc
mov
dec
dec
stc
out
adc
pushf
imul
movlps
and
test
jecxz
popf
mov
dec
sub
movs
test
les
cld
and
shl
scas
movs
dec
jnp
shl
ins
pop
outs
bound
jecxz
in
xchg
and
stc
add
xchg
data16
mov
and
out
xchg
push
mov
(bad)
jo
mov
sar
inc
jl
mov
xor
mov
push
mov
es
add
cli
les
or
adc
push
cmps
pop
sbb
or
les
pop
fisttp
std
and
shr
rol
xchg
repz
fild
push
pop
jbe
xor
mov
xchg
inc
movs
mov
and
test
ficomp
dec
lods
test
lea
push
call
pop
ret
push
cmp
loope
repnz
stos
pop
push
(bad)
ror
daa
pushf
ins
(bad)
add
sub
rcl
test
or
mov
and
stc
lea
cld
cmp
sub
or
sub
fsubr
add
fcmovne
and
outs
shr
sub
pop
js
mov
sahf
jge
jnp
xor
js
add
push
mov
imul
and
lds
fistp
lds
jo
adc
lock
jno
fidiv
xchg
cmps
(bad)
stos
inc
lods
mov
addr16
(bad)
jno
lods
xchg
mov
lock
lds
mov
sub
test
lods
out
test
gs
in
nop
jg
pop
jns
inc
push
test
mov
ss
inc
and
mov
fcomp
jne
add
jmp
mov
jbe
out
loope
sbb
stos
push
mov
fsubr
aam
in
mov
sahf
fwait
ja
pushf
push
lahf
jne
add
sbb
stc
pushf
(bad)
xor
out
(bad)
mul
mov
stc
addr16
or
jge
fldcw
pop
sti
fld
xchg
lods
jmp
push
outs
stos
outs
lock
cmps
push
mov
out
fist
iret
push
fsub
sbb
lgs
cli
imul
jbe
add
fisub
xchg
(bad)
mov
mov
std
dec
cmc
lock
movs
outs
jmp
inc
clc
sub
pop
mov
jbe
mov
or
sub
and
repnz
push
shl
jecxz
sub
and
aam
mov
aaa
cmp
shl
mov
push
(bad)
mov
rol
aam
add
xor
std
or
xchg
xor
xchg
push
sbb
aaa
sbb
jg
aad
lahf
push
test
add
fcmovnb
cs
outs
popf
ins
aaa
stos
jmp
ds
fisttp
jle
cmps
mov
cmps
pop
push
jbe
cmps
and
jnp
adc
xchg
rcr
xchg
xchg
lods
dec
test
cs
ret
retf
push
mov
xor
retf
lds
sti
vorpd
mov
mov
sbb
and
cwde
pop
(bad)
(bad)
jecxz
mov
sbb
bound
pop
mov
mov
test
mov
jbe
xor
call
retf
cmp
jmp
fs
mov
jmp
mov
jl
loop
stos
repnz
cmp
stos
inc
jp
jnp
pop
pop
jmp
mov
mov
or
xor
lods
mov
xchg
loope
sbb
nop
jmp
pop
sub
int
and
shl
aas
add
rol
dec
cs
mov
xchg
imul
xor
mov
out
inc
sbb
mov
in
push
enter
je
inc
push
daa
popa
into
cli
pop
loop
scas
loop
je
cmp
sbb
mov
jge
fwait
dec
fcomp
jl
lods
dec
jle
sahf
cwde
stc
pop
scas
mov
push
mov
mov
pop
pushf
pop
dec
(bad)
cmps
rcl
sti
(bad)
jno
fprem1
or
repz
inc
add
dec
ret
lock
pusha
mov
cmps
lock
or
xchg
aaa
xchg
clc
mov
mov
sub
dec
dec
clc
(bad)
enter
fstp
push
or
xlat
out
cs
shl
jge
iret
xor
sub
inc
add
pop
jmp
movs
fadd
mov
mov
mov
dec
pop
mov
inc
add
mov
mov
pop
xchg
cmps
push
inc
mov
rcl
mov
sti
mov
(bad)
pop
ins
repz
ins
fidiv
xor
push
ins
ret
loop
popa
push
xchg
popf
call
stos
jl
aam
or
imul
repz
loop
mov
shl
std
push
jne
mov
dec
lds
and
adc
adc
sar
mov
push
mov
ret
mov
jecxz
adc
mov
push
jnp
xchg
loopne
pop
lahf
pminub
mov
cmp
mov
lock
aad
lods
mov
nop
adc
les
mov
in
sbb
add
outs
popa
add
xor
and
push
outs
jmp
lods
xchg
add
inc
retf
in
mov
cwde
add
xor
xchg
xor
xchg
lahf
mov
mov
cmc
test
ins
jne
sbb
call
(bad)
push
sar
push
jnp
add
xchg
mov
test
arpl
retf
shr
mov
test
lock
out
mov
popf
jns
(bad)
fwait
test
push
scas
imul
cmp
lods
adc
cli
push
pop
push
inc
bound
cmc
enter
push
loope
int3
mov
repnz
movs
repnz
cmc
fadd
imul
xchg
push
xchg
dec
push
mov
cmp
popa
mov
movs
imul
outs
outs
ficomp
mov
(bad)
cli
inc
ror
xor
push
ficom
jo
jb
aam
push
bound
iret
call
pop
pop
fdivr
not
popf
cmp
xchg
fld
fisttp
(bad)
dec
div
cmp
fbld
(bad)
das
xchg
in
ss
std
test
mov
dec
push
dec
add
xchg
inc
xchg
fdivr
add
jecxz
mov
xchg
inc
jmp
xchg
dec
jl
out
das
push
pop
fsubr
jo
(bad)
ss
imul
jp
inc
mov
imul
adc
ds
imul
xchg
xlat
mov
mov
popa
jmp
jp
fstp
(bad)
fld
mov
loope
cwde
mov
mov
mov
or
mov
dec
aaa
aad
fs
or
mov
xchg
and
mov
mov
lods
or
movs
dec
dec
sbb
push
jge
mov
aaa
lock
js
push
adc
mov
call
cmp
fwait
dec
inc
fwait
mov
pop
data16
jmp
out
jb
jnp
pop
das
aas
mov
lods
mov
xchg
out
retf
mov
cmp
sub
adc
dec
fucomp
pop
mov
outs
popa
les
cmp
adc
aas
ret
rcr
pop
clc
lods
cli
cmc
pop
cmp
aaa
pop
dec
dec
loope
shr
(bad)
test
dec
inc
sub
pop
jmp
(bad)
xchg
jl
push
or
sar
fisub
(bad)
stos
jge
push
pop
stc
outs
adc
add
xor
jecxz
cld
sbb
das
cmp
pushf
std
stos
(bad)
jns
imul
aad
ret
mov
and
xlat
add
adc
ss
dec
add
aas
pop
(bad)
movs
jp
mov
inc
jmp
retf
xchg
sar
lock
jecxz
rcl
jmp
cli
cmc
les
ret
jno
mov
push
iret
cmp
lods
dec
jnp
jb
repz
cmps
xchg
and
dec
dec
(bad)
enter
and
mov
jns
fs
push
or
arpl
jle
adc
cmps
das
out
adc
pushf
popa
sub
sub
mov
xchg
(bad)
daa
imul
or
push
cmps
(bad)
loopne
jp
into
jecxz
das
fxch
ja
pop
lahf
(bad)
pop
cli
dec
xchg
in
es
out
lahf
sbb
cmp
or
call
xor
mov
push
in
stos
shl
push
call
data16
int
aaa
xor
and
daa
retf
jo
fxam
dec
jnp
in
xchg
scas
dec
bound
dec
dec
sub
cli
aaa
(bad)
shrd
cdq
into
(bad)
dec
aam
frstor
movs
and
out
retf
aaa
inc
inc
jle
daa
pop
pop
xor
sbb
xor
sub
push
mov
ss
imul
ds
add
ds
mov
or
xchg
pop
lods
shr
(bad)
scas
cmp
ins
enter
mov
cs
dec
pop
outs
enter
sub
dec
pop
mov
add
call
popa
(bad)
in
ret
daa
scas
mov
test
dec
retf
mov
lds
movs
xchg
add
push
ja
retf
jmp
adc
sbb
test
test
dec
lahf
mov
(bad)
pop
int3
dec
xor
repz
sub
add
sbb
mov
jae
dec
lahf
dec
test
scas
pop
stos
adc
es
pop
out
adc
les
push
push
pop
jecxz
ins
push
jl
sahf
jmp
mov
mov
fchs
int3
in
and
sbb
leave
push
jno
mov
imul
movs
mov
dec
sub
and
xchg
push
jecxz
in
dec
ds
fs
and
add
pop
dec
pushf
fldenv
add
mov
sbb
scas
xchg
pop
out
xchg
mov
jmp
xchg
mov
sbb
cmp
mov
mov
xchg
push
mov
add
imul
push
int
push
fdivr
mov
movs
movs
scas
pop
outs
mov
movs
je
adc
push
push
xchg
xlat
jmp
and
outs
cmp
lahf
pop
mov
fwait
ret
or
test
jb
shl
jbe
pop
xchg
jmp
into
sub
mov
mov
inc
retf
add
mov
mov
bound
cdq
inc
and
ins
add
lods
jbe
cwde
lds
sbb
inc
sar
sub
ss
ins
ret
adc
jno
cld
push
pop
push
dec
jmp
mov
sar
lahf
dec
xor
mov
jns
inc
test
push
dec
je
cmps
rcl
mov
sbb
xor
inc
jne
jbe
push
aad
aad
stc
mov
sbb
mov
inc
loop
jno
mov
dec
xchg
dec
inc
not
sub
cmp
jne
jne
data16
pop
nop
mov
call
hlt
push
jbe
sub
fadd
clc
(bad)
xchg
int3
jl
lea
clc
dec
retf
mov
repnz
jbe
clc
xchg
fldcw
int3
shr
xchg
lods
mov
out
fisubr
jp
xchg
loope
dec
arpl
test
jbe
dec
hlt
in
push
lahf
or
clc
int3
mov
test
shr
cdq
je
out
aaa
sub
clc
repnz
cmc
(bad)
push
sub
xchg
cld
inc
or
dec
ret
sbb
inc
jle
jmp
and
jecxz
push
jns
add
lods
je
or
jns
jecxz
(bad)
jl
in
ja
or
sub
xchg
jmp
jge
shl
jmp
das
xchg
in
int
and
inc
sbb
push
fdivrp
inc
xor
outs
ret
(bad)
call
in
xor
stos
dec
pushf
repz
das
xchg
cs
pop
(bad)
cli
into
xchg
adc
push
xchg
or
jl
fistp
dec
int
dec
das
ror
out
js
jmp
test
outs
jno
sub
dec
test
repz
mov
pop
dec
pop
sub
test
and
sub
cmp
imul
jne
pop
push
pop
pop
dec
inc
(bad)
cmp
pop
mov
les
fstp
push
lea
iret
stc
mov
add
and
mov
shl
sahf
scas
cld
(bad)
pop
ficomp
inc
ret
ds
xchg
stos
push
(bad)
movs
dec
fcmovbe
xchg
sti
idiv
cmp
adc
push
mov
dec
xchg
sub
push
dec
xchg
adc
adc
(bad)
loope
inc
push
cmovb
dec
movs
mov
mov
add
loope
sub
retf
sub
xchg
sub
ret
jecxz
ret
mov
xchg
mov
dec
mov
int3
xor
lods
mov
jmp
test
add
sbb
add
jno
cmc
pop
sti
mov
xor
xor
sar
add
sbb
stos
gs
mov
jns
test
xchg
xchg
jmp
push
push
test
pop
pop
pushf
in
dec
arpl
test
mov
data16
retf
and
xchg
cvtps2pi
add
pop
adc
loopne
mov
(bad)
int3
repnz
imul
in
jp
loope
jb
and
lea
mov
jnp
into
push
sbb
rol
imul
into
mov
dec
cli
mov
aad
sbb
adc
retf
movs
daa
jg
add
push
dec
jecxz
ins
mov
repz
mov
adc
push
mov
test
js
shl
retf
stos
scas
test
aad
mov
sub
stos
mov
jmp
(bad)
jmp
xchg
lea
sub
scas
mov
inc
adc
xchg
mov
cmp
jmp
outs
cmps
mov
sbb
aas
int
cwde
push
mov
xlat
mov
fld
sub
xchg
mov
lahf
and
xchg
dec
inc
xchg
lahf
jp
xor
pop
retf
jnp
je
retf
pop
les
cmp
fcmovnu
cli
inc
sbb
push
cmp
and
outs
mov
(bad)
rcl
cmps
sbb
aaa
retf
out
cmp
fld
into
imul
jns
ins
sub
cli
(bad)
std
jns
outs
mov
hlt
adc
repnz
addr16
int
push
gs
xchg
xor
shl
add
out
outs
mov
dec
adc
mov
xor
cmp
xlat
loopne
xchg
pop
iret
add
jnp
xchg
jl
shl
adc
fst
xor
in
adc
fiadd
dec
dec
mov
imul
leave
ins
sti
rcl
cmps
addr16
lock
mov
xchg
mov
fnstsw
mov
loop
or
dec
mov
lea
mov
popa
jmp
xor
inc
dec
xor
movs
ss
xor
or
ss
loope
out
add
xchg
das
add
adc
retf
ret
(bad)
call
sbb
cmps
or
pop
sahf
retf
stos
pop
xchg
in
dec
int3
movs
adc
xchg
and
sub
push
push
mov
(bad)
jmp
jnp
icebp
sbb
jnp
pop
push
sbb
push
sahf
sub
int3
and
retf
dec
neg
push
clc
jns
in
cld
sbb
fild
(bad)
adc
cwde
in
stc
sbb
xchg
jmp
or
lock
mov
callw
ficom
in
mov
je
sub
call
pop
jne
push
dec
dec
rcr
pop
adc
cmp
sub
pop
sar
push
jle
movs
movs
in
dec
dec
add
dec
mov
pushf
sbb
mov
(bad)
sub
je
ss
fstp
inc
and
bt
push
xchg
icebp
mov
xchg
std
jl
pop
std
sub
aas
addr16
loopne
fidiv
xchg
int
inc
adc
push
xchg
sahf
xchg
dec
lods
mov
mov
adc
mov
jle
cs
cmp
inc
hlt
lock
xchg
in
jns
arpl
mov
pop
out
(bad)
into
cmc
(bad)
pop
push
and
stc
lahf
cmp
mov
xor
popa
aam
xor
mov
dec
movs
fistp
mov
arpl
push
cli
push
movs
ss
mov
pushf
enter
cmp
loope
mov
dec
push
test
lods
pop
jge
xchg
scas
jmp
les
popf
mov
xchg
int3
mov
xchg
inc
aam
(bad)
jb
addr16
jecxz
(bad)
stos
push
(bad)
cmps
mov
js
mov
xor
pop
inc
jecxz
std
in
movs
mov
jns
mov
jl
jne
shr
scas
dec
cdq
jbe
dec
pop
xor
div
mov
sbb
push
dec
(bad)
test
push
cmps
jb
cmp
int
inc
push
mov
mov
cmp
mov
xchg
mov
cmps
mov
jp
ins
(bad)
xchg
or
cmp
out
in
xchg
lea
mov
jns
adc
cmp
in
loopne
pop
shl
jmp
mov
cmp
icebp
js
and
push
mov
scas
sub
pusha
inc
ret
sbb
sbb
arpl
sub
int
es
mov
inc
mov
xchg
aas
popf
fwait
jne
mov
repnz
daa
cli
sub
mov
push
mul
sti
push
out
in
les
aaa
pop
pop
test
jnp
lahf
enter
movs
fcom
in
mov
push
add
sub
hlt
retf
or
loop
sbb
xchg
sbb
stc
aad
in
bnd
xchg
inc
inc
test
popa
aam
mov
std
in
std
out
jle
mov
cld
aas
dec
lock
mov
push
data16
sbb
jmp
xchg
or
xchg
mov
ret
arpl
sub
test
xchg
in
fidivr
mov
hlt
pop
adc
sub
mov
ret
hlt
das
(bad)
pop
inc
je
iret
in
sti
mov
into
push
sbb
xchg
imul
in
mov
shl
sub
popf
lds
jecxz
jno
cdq
(bad)
bound
xchg
arpl
movs
data16
dec
lods
lahf
shl
dec
add
sub
push
outs
jmp
xchg
stc
mov
push
mov
add
push
cmps
jg
arpl
cld
push
mov
in
add
pop
adc
pop
and
pop
hlt
sar
xlat
mov
mov
dec
dec
(bad)
inc
jns
mov
cld
fcomp
ds
stos
sbb
fcmovb
imul
inc
add
push
ja
cmp
mov
vpsadbw
dec
sbb
push
in
push
fninit
push
loop
stos
ror
inc
sbb
rcr
cwde
stos
lock
js
jb
push
push
push
jbe
sub
retf
repz
mov
jns
sub
inc
inc
mov
xchg
sub
call
icebp
in
jne
sbb
push
dec
mov
cmc
jge
lahf
ins
lea
or
sbb
xchg
xor
cld
xor
test
aad
cld
sbb
pop
cmp
add
xchg
lds
sbb
or
(bad)
jle
dec
dec
std
sahf
arpl
js
pop
out
jge
ret
aas
clc
push
clc
mov
inc
test
movs
mov
dec
icebp
sbb
mov
ret
push
std
lahf
arpl
sub
icebp
clc
aas
int3
rol
cwde
jp
std
aam
sub
xor
imul
data16
mov
push
(bad)
xchg
retf
mov
(bad)
cmp
in
adc
add
rcr
push
dec
imul
xlat
jecxz
jnp
les
or
sub
cmp
ret
pop
jmp
sbb
mov
call
push
sbb
or
stos
sub
in
jns
push
retf
nop
push
push
ja
cwde
jle
push
ret
jo
jmp
movs
je
jg
jno
cmp
imul
jbe
cli
fisubr
jae
dec
call
jl
or
jns
fst
hlt
(bad)
push
dec
idiv
xchg
cld
js
pop
out
jge
ret
mov
add
jge
jle
stc
push
pop
push
jle
cs
or
mov
xor
retf
xchg
retf
ins
or
push
shl
dec
in
pop
(bad)
mov
xor
imul
pop
cmp
mov
sbb
aam
xor
xchg
push
div
xor
add
xchg
sub
mov
mov
mov
test
xor
adc
addr16
popf
add
rcl
ror
pushf
mov
mov
and
xor
push
mov
shl
ins
scas
lock
ret
jecxz
daa
pop
mov
mov
idiv
fdiv
pop
dec
mov
sub
cmps
xlat
gs
xor
sbb
push
pop
shl
ret
lea
jp
and
push
sbb
stos
daa
pop
xlat
inc
shr
cwde
mov
xor
call
imul
jmp
retf
and
cdq
lea
mov
sbb
lahf
cmc
pop
push
cmp
mov
into
jae
sub
mov
push
test
xchg
cmp
jno
xor
mov
repz
dec
in
call
sbb
push
test
out
and
or
pop
adc
fmul
jl
cmp
clc
(bad)
or
movs
xchg
jmp
iret
jb
jmp
sub
or
jge
imul
cmp
sbb
fmul
js
jbe
cmps
cmps
add
push
cli
cmps
mov
loop
out
(bad)
push
outs
push
pop
sbb
and
sahf
pop
cli
push
mov
xchg
(bad)
imul
pop
mov
dec
cmp
retf
retf
fdivr
into
into
das
and
movs
push
loopne
mov
xchg
jl
jae
jecxz
mov
cs
push
in
sar
mov
and
scas
stos
cmp
inc
pop
adc
xchg
fs
pop
pop
jns
neg
mov
(bad)
fcmovnu
gs
push
inc
(bad)
dec
push
xchg
or
push
push
and
loop
loopne
sub
in
dec
lods
fist
mov
int3
retf
dec
(bad)
dec
mov
cld
mov
jo
test
pop
mov
mov
jb
or
das
ss
popf
ins
jl
cmp
or
and
dec
rcl
dec
inc
dec
mov
add
add
scas
xor
pop
std
imul
lods
mov
retf
jnp
push
cmps
enter
sub
jge
xchg
mov
dec
(bad)
cmps
jns
push
mov
int
mov
push
shr
mov
or
sahf
popf
pop
inc
jb
in
outs
mov
push
sar
test
add
(bad)
push
std
mov
lahf
pop
ja
pusha
cmc
fisub
mov
out
aaa
cmc
stos
dec
imul
jo
(bad)
jg
push
call
sbb
sbb
jbe
fwait
icebp
xor
xchg
movs
mov
sub
shl
dec
aas
xchg
push
xor
sub
fwait
pop
sbb
xchg
imul
push
in
inc
push
outs
add
jmp
cwde
cs
push
adc
sub
add
jnp
sub
push
xor
bound
xor
jge
mov
in
out
retf
lds
push
and
cmp
pushf
xchg
xchg
bound
cmp
push
lea
mov
sub
leave
cmp
shr
mov
jmp
sub
push
test
pushf
std
scas
sub
add
jg
scas
rcr
popf
mov
push
or
stc
dec
xor
and
dec
pop
sbb
jnp
xchg
xor
fs
and
gs
ret
cli
mov
pop
jmp
stos
and
add
shl
adc
jle
jns
cwde
and
dec
mov
lea
cmp
fnstsw
out
sbb
inc
or
or
hlt
adc
and
fld
outs
inc
or
cmps
cmp
push
push
and
aaa
jo
cmps
test
adc
int
dec
sti
mov
(bad)
nop
call
add
push
push
mov
ja
and
cmp
dec
shl
xor
mov
xor
mov
(bad)
nop
scas
test
aaa
adc
ins
dec
pushf
push
clc
mov
and
shl
mov
sbb
inc
fidiv
cmp
sub
imul
pop
dec
shr
or
shr
fsub
shl
inc
mov
sub
pop
dec
jecxz
mov
pop
(bad)
test
mov
call
aam
fisub
push
mov
int3
in
int
dec
retf
pushf
sahf
retf
pop
push
sub
dec
clc
adc
mov
repz
jno
inc
jnp
popf
std
sub
push
test
int
pushf
outs
(bad)
adc
xchg
inc
cli
cmp
cmp
inc
stc
ins
pop
or
out
mov
and
hlt
test
les
fadd
mov
imul
mov
and
(bad)
adc
dec
xchg
mov
jmp
adc
or
mov
and
add
adc
je
outs
int3
jge
xchg
and
push
lahf
mov
push
sbb
stc
add
enter
and
sub
inc
sub
dec
leave
cli
ror
mov
scas
rcl
adc
sub
adc
fst
mov
cmp
jle
or
fs
fist
fdiv
dec
stc
inc
daa
jb
in
sbb
scas
dec
in
mov
out
mov
shr
or
inc
daa
cmp
daa
(bad)
hlt
adc
in
inc
inc
mov
and
dec
or
cmc
adc
add
mov
and
mov
mov
inc
mov
jbe
and
jp
ret
dec
imul
fmul
mov
inc
sti
ja
(bad)
movs
jecxz
dec
pop
sti
cmps
stc
jno
mov
add
push
call
dec
adc
clc
scas
fcomp
dec
ret
shl
dec
sub
jnp
or
jp
movs
mov
sub
dec
inc
cmp
test
jmp
ss
add
sub
icebp
std
call
xor
lods
jecxz
xchg
stc
lods
sahf
out
adc
test
fnstenv
imul
xchg
out
mov
sbb
mov
ficomp
das
mov
sbb
mov
xor
dec
jle
push
jge
inc
pop
xchg
cmp
ins
add
mov
jl
ja
out
jmp
fisubr
jo
inc
mov
push
push
xchg
mov
jmp
mov
(bad)
sti
mov
scas
push
xor
jecxz
mov
fistp
pop
xor
fst
sub
sub
fiadd
pop
pop
ins
(bad)
arpl
movs
lahf
pop
test
mov
movs
icebp
push
pop
test
icebp
jg
cli
push
push
lea
dec
out
adc
shl
pop
pop
clc
stc
jle
pop
add
lea
ror
xchg
movs
call
adc
and
loope
sbb
push
adc
xchg
jb
sub
stos
loop
loop
retf
push
popf
fstp
rcl
mov
stc
movs
(bad)
mov
fst
adc
(bad)
cwde
mov
test
push
popf
jno
sub
lea
mov
retf
mov
adc
pop
test
xchg
adc
call
cld
fld
or
(bad)
mov
mov
das
in
cmps
gs
pop
cmps
pop
ds
out
lock
jl
imul
ror
popf
scas
jl
fs
pop
mov
dec
lods
jns
in
sub
stc
cs
aaa
(bad)
adc
sub
sbb
cmp
pop
xchg
jb
push
cmp
or
jp
loope
cmp
stos
jmp
in
in
jns
jne
pusha
stos
cmp
sub
jmp
jmp
push
mov
cmp
push
xchg
inc
sub
push
sub
movs
loop
ins
mov
mov
xor
(bad)
mov
mov
cwde
mov
push
adc
push
repnz
clc
cmps
shl
cmc
pop
inc
mov
jbe
mov
(bad)
das
sar
mov
jo
mov
sbb
xchg
inc
sub
fldln2
int3
mov
ja
inc
and
mov
mov
mov
sbb
xchg
hlt
pusha
rcl
scas
fwait
repnz
push
out
mov
int
clc
idiv
pop
dec
scas
lahf
push
jne
mov
loop
jmp
pop
hlt
pop
fstp
or
pop
push
inc
jmp
adc
xor
mov
push
aam
retf
sub
cmc
aaa
push
mov
idiv
jne
xchg
outs
jp
and
(bad)
es
or
frstor
aam
(bad)
leave
adc
push
jb
(bad)
adc
sub
xor
adc
or
popf
add
rcr
pop
in
dec
aaa
outs
in
mov
xor
out
adc
mov
inc
popf
enter
jnp
(bad)
jno
xchg
je
ja
mov
cmc
mov
mov
pushf
stos
in
push
fiadd
or
mov
pop
sub
sar
mul
sbb
stos
push
test
pop
data16
jb
xchg
cmp
xor
mov
js
and
jmp
pop
xchg
es
jbe
jnp
fsubr
mov
and
imul
add
arpl
dec
arpl
pop
scas
lock
xor
add
dec
movs
sahf
iret
daa
cmps
test
ficomp
cmp
jl
mov
in
xchg
or
imul
xor
movs
(bad)
fisubr
sub
inc
ror
push
or
inc
nop
inc
add
in
pop
sbb
pop
adc
ja
icebp
or
out
popa
xchg
push
div
loopne
pushf
dec
fistp
or
sbb
ja
pop
push
movs
or
xor
pop
pushf
or
xor
int
les
cmp
jo
push
popa
mov
retf
mov
xor
bound
jne
ins
ror
aas
adc
mov
into
cmps
ja
cmps
in
mov
les
loope
stos
lods
xchg
std
js
jns
lods
inc
mov
les
adc
or
lahf
stos
push
sub
jno
sub
repnz
test
or
xor
push
add
bound
sub
(bad)
shl
adc
mov
out
icebp
push
cmp
jno
sub
addr16
vunpckhps
sti
sbb
loop
(bad)
pop
dec
mul
inc
test
icebp
test
mov
xchg
xchg
add
ins
inc
mov
ins
pop
mov
push
mov
xchg
frndint
outs
sub
cmps
(bad)
pop
mov
rcl
xor
sbb
popf
retf
push
in
mov
ficom
repz
dec
mov
adc
shl
inc
push
sbb
or
pop
sub
push
jae
(bad)
adc
hlt
mov
outs
shl
push
push
push
mov
or
and
mov
je
mov
sahf
test
jp
cdq
sub
retf
mov
pop
retf
pop
(bad)
pusha
pop
xchg
ds
pop
repnz
popa
pop
xlat
ss
dec
pop
imul
cmp
pop
xchg
jge
rcr
push
daa
sbb
cmps
jmp
jecxz
cmp
xchg
xchg
jmp
jle
mov
push
pop
cmp
in
iret
lahf
mov
hlt
jae
jle
cmp
jecxz
scas
sbb
and
out
or
push
in
jle
scas
pop
test
retf
repnz
jbe
adc
mov
mov
sbb
lgs
pop
cmps
cmp
retf
dec
movs
mov
es
mov
movs
jle
test
mov
int3
mov
jae
inc
and
aad
push
shl
pop
push
fimul
xor
(bad)
lods
cdq
inc
retf
test
scas
and
rcr
xchg
pushf
popa
dec
ins
and
movs
arpl
pop
mov
xchg
inc
push
pop
mov
fist
aad
movs
mov
cmovae
mov
hlt
pop
inc
int
lods
push
ror
pop
(bad)
je
je
xchg
aas
xchg
idiv
in
arpl
jle
pop
pop
mov
xchg
jb
retf
mov
xchg
cs
push
mov
xor
push
stos
cmc
addr16
daa
jge
lock
(bad)
jnp
or
cli
mov
push
scas
cmps
pushf
push
sub
(bad)
xchg
mov
gs
pop
add
push
mov
iret
les
shr
xchg
(bad)
seta
ins
retf
mov
inc
popf
jne
adc
add
or
mov
in
stos
sbb
sbb
arpl
lods
(bad)
lods
loop
mov
shl
mov
mov
sbb
sbb
pop
jl
push
out
fidivr
and
push
mov
mov
push
cmc
stos
cmp
jg
push
cmp
xchg
sub
pop
out
stos
call
mov
daa
lds
mov
add
(bad)
jo
loope
aad
imul
sar
das
iret
in
clc
icebp
loope
jne
lock
js
mov
mov
jmp
or
push
stos
shr
div
xlat
dec
mov
movs
test
or
xchg
jmp
sub
mov
push
xchg
dec
jb
pop
leave
ss
daa
jmp
and
ins
cdq
lahf
div
inc
jno
dec
popf
lods
jmp
pop
enter
mov
ror
sbb
fwait
lock
cli
loop
imul
dec
mov
dec
call
push
lahf
mov
test
mov
jne
sub
dec
inc
(bad)
in
mov
sub
and
and
gs
dec
add
adc
dec
hlt
int3
pop
ret
jbe
loope
shl
inc
aad
xrelease
dec
in
xchg
aam
and
xchg
mov
pop
aaa
out
jae
shr
sub
cmps
sbb
loop
jbe
xor
stc
mov
xor
dec
sub
in
jmp
shr
shr
out
es
fldcw
mov
mov
(bad)
or
mov
mov
push
xchg
jb
rcl
das
pop
pop
inc
push
mov
int3
movs
push
cli
inc
retf
adc
das
mov
and
(bad)
test
daa
std
mov
test
mov
inc
jae
fidivr
lahf
aaa
imul
dec
movs
xchg
pop
cmp
fnstsw
fdivr
scas
adc
loope
xchg
push
mov
aaa
cmp
mov
add
xchg
sub
jo
retf
in
sti
sub
mov
inc
rol
pop
mov
cmp
retf
jno
popf
movs
or
repz
push
push
adc
imul
iret
add
jno
jno
or
push
xchg
mov
mov
dec
std
leave
dec
pop
or
add
and
mov
mov
aas
inc
test
mov
cmp
jae
in
mov
repnz
xchg
mov
sbb
int
fisttp
xor
ffree
or
mov
sahf
mov
scas
ins
dec
push
and
dec
loop
jge
sbb
or
add
mov
std
popf
in
and
je
dec
jmp
fnstsw
ss
push
sub
stos
push
adc
mov
ficom
jl
js
(bad)
jmp
mov
stc
inc
cmps
dec
movs
outs
pop
leave
pop
mov
popa
xor
push
cli
pop
push
cmp
xor
test
jl
push
ins
jecxz
icebp
push
das
ret
cmp
inc
pop
inc
pop
jg
mov
ins
mov
daa
and
fs
xchg
push
inc
shl
sub
jno
retf
push
fs
dec
pop
push
or
inc
cmp
cs
and
pop
pop
pop
into
call
mov
out
in
idiv
cmp
push
fcomp
xor
movs
lods
inc
mov
inc
jnp
xchg
mov
xchg
push
mov
jno
xor
cmps
adc
cmp
jp
arpl
ficomp
xor
or
mov
jb
loopne
xchg
dec
xchg
mov
adc
fidiv
inc
adc
les
cmps
pop
xor
stos
dec
or
mov
out
int3
not
test
cmps
push
pop
cmp
dec
add
mov
jae
aam
call
ins
retf
out
fidiv
jo
fs
push
ficomp
or
dec
cmps
cmps
pop
(bad)
dec
ror
test
je
cmp
nop
repz
std
mov
xchg
daa
adc
pop
pop
pop
push
mov
cli
mov
js
or
adc
adc
call
mov
(bad)
popf
pop
daa
aam
xchg
cdq
cli
jo
mov
pop
imul
xchg
jmp
or
cmc
xchg
push
mov
xchg
out
mov
fadd
jns
out
mov
xchg
scas
rol
mov
gs
rcr
mov
inc
dec
stc
aas
and
lds
scas
retf
inc
scas
sub
dec
int3
call
cmp
in
inc
(bad)
cs
dec
dec
xchg
mov
mov
out
mov
fstp
push
mov
lods
cmp
mov
fwait
popf
xchg
inc
jl
movs
repnz
(bad)
xor
add
and
ret
xor
pop
dec
in
inc
sub
cmp
jge
call
add
mov
mov
jmp
mov
iret
sti
inc
inc
xchg
pop
and
pop
cs
inc
in
retf
out
cmp
push
dec
outs
and
sbb
cli
dec
scas
xor
fist
ja
push
imul
ins
retf
clc
arpl
data16
je
pop
mov
adc
mov
js
pop
jl
das
mov
pop
xchg
cmp
rcr
enter
fdivr
and
jge
dec
xlat
cld
push
push
inc
xchg
pushf
inc
xchg
hlt
lea
sbb
outs
std
fwait
or
in
test
test
xchg
das
adc
jno
jle
dec
stc
popf
jne
in
sub
inc
mov
aaa
cmps
mov
imul
jg
and
adc
and
or
cmp
cmp
daa
loope
mov
cmps
cli
and
sbb
cwde
mov
icebp
cmp
xchg
inc
push
aam
inc
xor
pop
ss
les
ficom
adc
push
xor
mov
hlt
(bad)
mov
and
xchg
xchg
(bad)
push
pop
(bad)
pop
cmp
mov
out
sti
stos
mov
movs
push
test
iret
stc
dec
xor
jg
movs
psrlq
in
stos
push
mov
cmp
dec
push
jmp
into
push
xor
loop
fistp
aam
(bad)
clc
cmps
stos
rcr
mov
xor
xlat
ss
retf
stc
nop
xchg
repz
(bad)
dec
idiv
inc
pop
inc
sub
mov
xlat
outs
je
mov
jl
adc
lock
jo
(bad)
lea
popf
mov
ins
repz
fnstcw
inc
ins
push
push
cs
(bad)
std
mov
xchg
test
sub
test
and
arpl
sub
cwde
mov
cld
movs
hlt
(bad)
int
scas
data16
sar
cmp
mov
je
push
jge
mov
xchg
mov
(bad)
(bad)
movs
and
xchg
jno
out
push
imul
xlat
dec
xchg
xor
and
js
shl
add
(bad)
dec
add
pop
mov
in
clc
and
mov
jp
fisub
pop
pop
(bad)
into
idiv
jae
lock
movs
ret
outs
mov
scas
dec
shr
xchg
dec
stos
mov
dec
adc
pop
dec
dec
test
mov
hlt
push
dec
sti
mov
adc
jb
mov
call
sbb
or
fadd
fbld
int3
popf
inc
mov
pop
dec
test
rcl
mov
mov
or
push
jno
jg
jmp
jbe
sub
das
xor
cs
or
test
imul
nop
jb
push
lods
mov
arpl
dec
mov
(bad)
daa
cli
call
test
es
sti
aas
cmp
or
mov
adc
push
outs
popa
push
cmc
sub
fdiv
jmp
pop
pop
sbb
movs
stos
pop
or
dec
cmp
add
mov
loopne
mov
shl
push
out
fscale
into
call
test
inc
shl
imul
test
clc
in
pushf
sbb
fdivr
mov
xchg
imul
in
cmp
cmc
push
out
sub
rcr
aad
mov
add
ret
xchg
xchg
icebp
dec
test
stos
mov
iret
fcom
ds
push
mov
lahf
jp
cld
fs
add
mov
mov
scas
neg
sbb
dec
jmp
(bad)
scas
inc
in
lock
call
mov
rcr
jns
jmp
cmps
push
retf
mov
jge
cmp
int
mov
movs
sub
pushf
test
shl
xlat
mov
stos
bound
fs
mov
pop
fnstenv
div
mov
jmp
stc
cmps
cwde
bound
pop
jle
xchg
ins
(bad)
pop
push
pop
add
pop
out
imul
dec
repnz
loop
lea
pop
mov
jge
jb
push
cmp
stos
(bad)
int3
push
ins
cmp
fstp
inc
sub
dec
dec
and
push
rcr
or
inc
push
push
push
scas
gs
mov
jbe
mov
(bad)
test
vcmpsd
(bad)
scas
push
or
xchg
mov
dec
fcmovnu
fmul
mov
xchg
jns
cld
mov
clc
push
dec
pop
mov
das
call
sub
test
stos
push
xchg
into
vcvtss2sd
test
pusha
or
jmp
sub
mov
jae
addr16
int3
pop
iret
sub
bound
loop
loopne
int3
ja
push
xchg
sub
push
retf
adc
mov
jno
inc
xchg
les
mov
pop
scas
jne
mov
mov
push
in
inc
sub
jmp
push
repnz
sub
fs
retf
(bad)
xlat
test
mov
or
mov
xor
push
push
dec
inc
xlat
outs
ds
jns
sub
mov
mov
rol
out
mov
xchg
fsub
cld
mov
jge
(bad)
cmp
or
dec
cmp
mov
mov
mov
sbb
mov
mov
mov
dec
xlat
xchg
rcr
das
leave
(bad)
fdiv
gs
call
adc
sub
int3
ret
push
sahf
and
cld
(bad)
(bad)
mov
leave
loop
xchg
sub
sti
xchg
into
(bad)
push
push
xor
shl
sub
repnz
lods
dec
dec
dec
and
retf
push
dec
adc
ficomp
movs
mov
add
sbb
mov
in
xchg
inc
call
ret
jmp
stos
arpl
adc
push
xchg
mov
imul
mov
cli
jnp
cli
mov
xor
adc
ds
ret
xor
and
and
mov
jmp
xchg
in
out
pushf
cmps
js
data16
mov
adc
leave
stos
imul
xchg
popa
and
jge
push
jnp
pop
sub
mov
xor
test
push
movs
sub
jle
pop
sbb
aas
js
add
and
stos
dec
mov
imul
loopne
mov
jmp
sub
je
in
shr
mov
movs
sbb
daa
push
mov
bound
adc
xor
pop
push
call
ja
test
mov
call
jmp
cs
pop
add
pop
or
retf
and
out
in
nop
lods
sbb
cmps
lea
pushf
mov
outs
add
pop
xor
gs
mov
fwait
mov
in
mov
loopne
mov
cmp
fs
mov
xor
pop
xchg
mov
ret
dec
dec
pop
jbe
out
xor
pop
dec
and
and
movs
xchg
popa
mov
jae
sahf
mov
fdivr
sar
retf
int3
xor
push
gs
pop
les
cli
mov
retf
daa
mov
pop
cmp
ret
push
cwde
push
je
dec
push
add
and
in
cld
repz
jae
out
stos
pop
add
jbe
xor
jae
into
mov
xchg
mov
pop
and
xchg
in
and
mov
(bad)
sbb
aad
cmp
dec
push
hlt
mov
xlat
mov
adc
add
arpl
push
rol
push
in
xchg
(bad)
pop
xchg
stos
cwde
stos
out
push
out
sub
fstp
stos
mov
in
cmp
push
imul
in
test
xchg
into
adc
xchg
jne
mov
and
movs
lods
in
push
pop
mov
xchg
lahf
call
dec
dec
test
xchg
xor
arpl
mov
or
push
imul
cmp
(bad)
lea
sbb
push
xchg
(bad)
(bad)
mov
mov
jecxz
pop
rcr
mov
cmp
jle
jns
mov
cdq
xchg
ja
out
jno
nop
adc
jno
push
movs
cmp
jmp
cmp
push
movs
jge
jge
sahf
icebp
imul
pop
mov
xchg
call
dec
lahf
popa
sar
inc
cmps
lock
movs
stos
mov
push
aam
inc
call
(bad)
sbb
fimul
(bad)
adc
pop
inc
sahf
cdq
push
pop
sub
fcomp
sbb
lea
mov
xchg
movs
and
mov
mov
mov
popf
pop
inc
xchg
or
or
add
dec
in
fwait
dec
idiv
outs
fnstcw
clc
pop
mov
aad
push
stos
push
mov
pushf
gs
cmp
pop
inc
mov
pop
aas
stc
not
or
in
sbb
push
stos
mov
mov
ss
inc
add
sub
add
fst
and
into
push
fnstsw
inc
or
aam
mov
xchg
pop
not
mov
mov
retf
cmps
xor
pop
dec
xor
mov
(bad)
add
ror
movs
dec
mov
mov
adc
cmps
mov
pushf
mov
rcr
push
int
shl
xchg
in
(bad)
jmp
sub
dec
push
add
out
cmp
pop
xchg
ja
pop
icebp
mov
xlat
push
push
out
(bad)
dec
ror
inc
data16
test
retf
fs
movs
cld
in
lea
rcr
sar
pushf
shr
mov
cmp
stos
pusha
int3
dec
sub
div
pop
jne
xor
cdq
jl
mov
(bad)
jbe
mov
push
stos
jnp
push
loope
push
in
inc
lods
and
sub
out
iret
cld
jmp
jg
repz
js
pop
aam
retf
in
aad
dec
and
aaa
inc
cmp
aas
movs
sbb
cmp
arpl
inc
ins
out
test
movs
mov
fdiv
inc
xchg
push
cmp
loop
lods
inc
scas
push
fistp
shl
adc
pop
sub
loop
movs
loopne
iret
sub
ret
sbb
js
in
or
cs
out
mov
lahf
enter
jae
ret
clc
push
scas
mov
sar
push
int3
mov
popf
push
cdq
mov
adc
stos
push
pop
test
sub
pop
repnz
push
dec
sub
pop
stos
dec
mov
pop
push
aas
movs
popa
push
pop
jge
(bad)
inc
push
(bad)
xchg
jge
(bad)
sub
lock
mov
inc
pop
retf
add
xchg
and
mov
rcr
push
fsubr
xlat
xchg
inc
xchg
inc
mov
in
adc
mov
xchg
nop
inc
and
cmps
cmp
and
(bad)
into
jae
xor
es
aas
popf
cmp
dec
sub
push
push
sbb
pop
fdiv
test
jmp
jae
sub
je
es
test
dec
mov
mov
stc
jno
sub
jbe
push
test
leave
jo
loopne
inc
adc
cld
dec
cmp
movs
mov
jb
fst
jns
cmp
add
pop
imul
pop
inc
xchg
int3
test
sahf
popa
int3
inc
xor
xchg
dec
xchg
jecxz
lods
xchg
mov
jno
mov
in
pop
cmp
xor
pop
aas
xchg
aaa
outs
call
into
jmp
aaa
retf
int3
in
sub
in
mov
mov
test
add
dec
ins
adc
mov
clc
sbb
(bad)
jl
xor
ret
icebp
test
fs
pop
test
mov
retf
push
push
out
dec
and
lock
aaa
mov
stos
cmp
ret
push
fidivr
popa
or
gs
push
mov
add
dec
mov
jecxz
cs
shl
test
jns
movs
frstor
xchg
js
outs
push
pop
inc
dec
cmps
(bad)
aaa
dec
repz
cmp
adc
cli
sub
cmp
xchg
loop
lods
cli
mov
icebp
cs
pop
in
(bad)
inc
leave
and
out
push
xchg
into
adc
cdq
dec
stos
cmp
cmp
sbb
sub
popf
cmps
xchg
xchg
ror
bound
rcr
in
cmps
push
cli
add
into
and
mov
mov
fwait
mov
popf
jmp
xchg
cwde
jo
in
test
xchg
dec
dec
mov
outs
aaa
mov
inc
push
xchg
in
dec
push
ror
mov
stc
fisub
push
xchg
inc
aam
inc
into
out
(bad)
in
popa
mov
pop
aas
ror
je
xchg
movs
dec
adc
movs
adc
xchg
leave
fbld
cwde
sbb
addr16
mov
xchg
mov
push
popa
sub
pusha
jge
test
push
sub
mov
call
jb
cmps
bound
mov
es
xor
fist
out
fld
sub
stos
stos
dec
jb
jns
dec
lea
ret
push
inc
or
jmp
cmps
outs
dec
jl
pop
xchg
pop
push
mov
jl
imul
in
fcomi
retf
push
(bad)
cmp
xchg
in
adc
jge
je
or
xchg
mov
sbb
inc
lea
nop
not
pushf
mov
mov
inc
add
and
xor
movs
jbe
rol
call
xchg
mov
repz
cmp
sub
mov
sbb
sbb
xchg
mul
test
ins
sahf
adc
mov
sbb
mov
cmp
mov
stos
jno
mov
cdq
ins
or
movs
movs
sar
arpl
mov
mov
add
(bad)
ja
or
push
and
push
mov
push
xor
js
lock
xchg
dec
pop
mov
dec
pop
cmp
sub
jns
test
xchg
cmps
and
cmps
mov
enter
sub
cld
rcr
mov
ror
pop
jae
in
and
(bad)
mov
movs
lods
or
or
xchg
cs
add
push
(bad)
push
pop
dec
xor
in
sub
pushf
int3
add
(bad)
ficom
outs
arpl
movs
mov
sub
popf
adc
fisttp
aas
nop
(bad)
jb
mov
sbb
and
mov
nop
sub
cmp
xchg
fadd
std
ds
jns
mov
fs
jp
push
cdq
pop
and
dec
xor
or
xchg
je
inc
dec
cdq
les
jle
gs
inc
pop
cmp
push
jae
out
pop
mov
add
push
lock
add
sti
jmp
mov
and
cmc
push
add
fcmovne
stos
(bad)
(bad)
mov
std
icebp
push
xchg
sti
mov
mov
daa
pop
ret
shr
xchg
ins
push
xchg
(bad)
das
mov
pop
push
les
cmp
test
dec
jmp
dec
jl
lods
out
or
xor
lahf
dec
mov
adc
xchg
std
jno
mov
lea
stos
add
pop
cmps
dec
sti
mov
sbb
cmps
add
mov
inc
xchg
cmp
test
int3
adc
xor
stos
xchg
mov
dec
mov
movs
adc
shl
arpl
std
sbb
inc
adc
cmp
sub
jmp
lods
ins
in
inc
jbe
fs
fs
ficom
in
xchg
mov
pop
into
jno
hlt
int3
xor
movs
cdq
mov
scas
push
and
or
lock
dec
inc
bound
jg
inc
dec
ins
sub
mov
fcom
mov
sbb
sbb
or
sbb
mov
or
inc
mov
cmp
xor
or
pop
mov
fst
dec
in
fisub
push
mov
xchg
arpl
inc
cwde
add
xchg
std
mov
lods
push
mov
fld
cmps
dec
mov
push
dec
in
sbb
cmps
sub
inc
xchg
push
lods
sub
ds
mov
sub
dec
sbb
pusha
fwait
cmp
or
jno
ret
jae
or
pop
xor
(bad)
std
and
iret
pop
cli
inc
test
out
ficom
add
fisttp
pop
cmp
sbb
les
pop
cmp
adc
fist
adc
sbb
les
inc
xor
cs
xchg
movs
adc
rol
pop
add
mov
sub
pop
int3
shl
ins
aas
lods
rcr
fld
pushf
xlat
scas
or
push
test
(bad)
loop
jge
scas
push
ror
dec
xchg
call
sub
out
in
(bad)
or
mov
ficom
jecxz
add
adc
pop
sub
pop
mov
fwait
mov
mov
das
imul
mov
clc
popf
add
in
les
inc
(bad)
(bad)
push
imul
push
jge
das
es
retf
popa
lds
in
lahf
sahf
push
nop
sbb
dec
push
jb
push
dec
daa
xchg
leave
xor
cli
push
sbb
cmps
pop
mov
jle
push
xchg
mov
arpl
mov
ins
scas
gs
jmp
ja
mov
cmp
push
xchg
dec
cmps
int
add
dec
push
and
inc
popf
or
adc
xchg
(bad)
les
sub
lods
scas
inc
push
ret
rcl
mov
movs
retf
mov
pop
cmp
xor
ds
fdivr
sti
xchg
pop
dec
inc
out
fidivr
(bad)
(bad)
sub
hlt
mov
enter
inc
mov
cwde
dec
inc
neg
and
cmp
inc
or
inc
std
jecxz
jg
xchg
iret
inc
dec
inc
test
jno
jecxz
gs
add
inc
sti
sysret
out
sbb
inc
xchg
in
add
add
mov
add
(bad)
adc
pushf
inc
icebp
jmp
test
lahf
std
xchg
add
repnz
test
out
add
lods
test
lods
std
mov
pop
mov
dec
xchg
push
mov
fstp
sub
inc
and
fsub
and
xor
sub
stc
inc
push
stos
test
mov
add
push
js
ins
dec
cmp
call
mov
xchg
ficom
and
jnp
mov
dec
pop
dec
int
out
jbe
(bad)
xor
movs
jns
dec
xchg
out
and
jno
jmp
lods
jno
sub
mov
in
jle
fstp
inc
ja
mov
mov
into
add
loopne
dec
sbb
cmp
mov
dec
or
gs
cmps
imul
dec
daa
cmp
mov
test
nop
xchg
xchg
mov
fxch
arpl
fist
hlt
cwde
mov
lea
loop
push
mov
bound
mov
stc
pop
fcmovne
hlt
dec
imul
hlt
fidiv
jmp
es
fwait
cwde
mov
sbb
fist
jmp
and
pop
sbb
inc
push
sbb
out
loopne
imul
sti
cmp
std
add
pop
mov
mov
adc
loopne
mov
xor
add
jne
inc
cwde
loope
cmp
and
std
jp
clc
inc
jnp
popf
or
out
add
popf
leave
rcr
pop
sbb
jnp
loop
cwde
sub
xor
and
dec
loope
add
jl
sbb
les
xchg
push
div
mul
repz
ficomp
push
or
pop
cmps
or
aas
rcr
lods
pop
outs
mov
sub
xchg
mov
cwde
test
xchg
sbb
mov
pop
in
pop
cmp
xor
push
ins
stos
js
sub
jmp
mov
pop
cmp
std
cmp
pop
fwait
push
rcl
sub
sub
dec
out
sub
movs
mov
enter
inc
in
cmps
adc
push
mov
adc
adc
popf
cmp
xor
xor
lods
adc
iret
enter
dec
aas
imul
and
out
inc
jmp
fcom
icebp
ret
je
int3
imul
add
sbb
int3
aad
je
sub
mov
or
cwde
jmp
mov
std
ficomp
jnp
push
dec
push
aaa
or
xchg
loopne
popf
int
xchg
mov
inc
shl
je
int3
pushf
cmp
aam
dec
add
mov
sbb
push
jns
mov
jmp
call
(bad)
aad
jmp
cld
push
mov
cmp
jno
ins
xchg
lahf
jb
fdivp
mov
cld
or
outs
outs
in
sbb
sbb
jp
sub
aaa
aas
jbe
cmp
xor
ret
adc
sub
jbe
sbb
inc
test
or
mov
sbb
aam
lahf
pop
scas
jns
lock
ret
into
mov
pop
xchg
stos
cli
dec
cmp
jmp
dec
cmps
retf
jnp
out
in
push
stos
xchg
xchg
jne
jnp
ss
movs
idiv
fisubr
int3
mov
stos
pop
jl
gs
test
test
popf
out
call
cmp
jmp
xchg
ss
jecxz
pop
xor
data16
fist
cmc
test
repz
pushf
mov
inc
outs
inc
jp
int3
cmps
cld
mov
mov
ja
cmp
cdq
outs
inc
aam
std
xchg
mov
inc
xchg
mov
fcmovnb
hlt
aaa
sub
lahf
loop
push
sti
pop
push
cmc
and
aam
popf
push
mov
repz
jmp
cmps
(bad)
sub
imul
cmp
push
div
sub
cmp
mov
sti
ficom
(bad)
jmp
leave
xor
xchg
mov
jmp
clc
neg
loop
xchg
out
jmp
mov
mov
xor
fldcw
sub
cmp
pop
cli
fs
xor
repz
imul
jmp
stc
pop
fdiv
retf
xchg
dec
imul
jge
pop
xor
jecxz
mov
sbb
and
push
leave
out
in
mov
icebp
lahf
ret
pushf
xlat
adc
adc
xchg
mov
addr16
test
mov
mov
outs
je
stos
add
bnd
gs
in
dec
sar
js
(bad)
pop
cld
mov
sub
loop
gs
imul
jno
lds
(bad)
fst
inc
jne
xlat
movs
aad
jmp
(bad)
dec
cdq
xchg
mov
in
iret
push
inc
push
jmp
add
dec
xchg
lods
add
mov
movs
dec
inc
inc
lods
mov
aas
out
jns
iret
xor
pop
dec
push
push
mov
ja
rcl
push
or
scas
cdq
sub
lods
aam
outs
jbe
xchg
cmp
mov
out
fisttp
lods
cmps
fsub
sbb
cdq
test
mov
sbb
repz
sub
retf
(bad)
mov
xor
fisub
sar
gs
test
out
sbb
sub
cmovp
jle
push
shl
aam
ins
sub
dec
xchg
(bad)
sar
imul
icebp
xor
shr
xlat
xchg
loope
mov
popf
jp
test
fisttp
jns
sbb
retf
adc
adc
repnz
xor
xchg
leave
jo
mov
xlat
cdq
inc
aad
and
(bad)
push
movs
push
push
xchg
stos
imul
int
sub
ins
or
pop
shl
xor
shl
pop
mov
repnz
clc
dec
outs
mov
fild
out
push
cmc
xor
xchg
dec
pop
aad
cmp
jl
or
mov
pushf
je
and
shl
mov
xchg
sub
stc
mov
mov
sub
(bad)
pop
pop
and
xchg
movs
call
push
add
fild
aad
mov
shr
sbb
pop
xchg
fistp
jbe
sub
mov
fisttp
(bad)
cmp
dec
inc
lods
xor
mov
in
push
xchg
jne
mov
and
mov
push
movs
sbb
push
jae
mov
mov
push
jae
xchg
mov
(bad)
pop
xor
mov
mov
push
sub
xchg
xor
in
pushf
fst
jno
fldenv
xchg
and
xor
push
jns
rol
inc
cmp
fdiv
fdivr
mov
ror
fucompp
dec
dec
adc
inc
test
cwde
sub
test
inc
outs
dec
fcmovnu
gs
xchg
ins
mov
sub
jnp
in
call
xor
adc
call
sub
xchg
sub
sub
dec
and
leave
(bad)
call
pop
scas
repnz
ins
mov
arpl
test
arpl
add
(bad)
ffreep
and
xor
scas
in
lahf
inc
xor
ins
add
mov
test
xchg
push
xlat
es
ret
leave
dec
push
xor
(bad)
lods
xchg
test
es
loop
adc
xchg
mov
(bad)
pop
cdq
scas
cld
sub
mov
hlt
je
mov
lods
push
pop
mov
cs
cdq
dec
ins
je
push
sbb
jae
popa
sbb
add
cmps
lahf
push
in
xchg
jge
shr
ss
push
sbb
jmp
fidiv
repnz
int3
dec
push
mov
jb
outs
mov
(bad)
mov
pop
jae
jmp
push
push
add
xor
jno
pop
ror
push
lea
pop
dec
cmp
popf
retf
and
cld
mov
bound
pop
mov
pop
xchg
push
je
sub
jne
aam
out
(bad)
and
sub
fs
and
sbb
int
cmps
inc
out
pop
push
jg
cli
mov
mov
ret
outs
setp
daa
jge
gs
push
mov
cs
mov
mov
inc
gs
enter
sbb
fst
pushf
repz
leave
into
jb
pop
data16
popa
xchg
xor
inc
cmp
xchg
ja
xchg
pop
pop
js
dec
es
scas
sub
dec
push
dec
sub
mov
stos
xor
xchg
pop
or
jns
addr16
in
(bad)
cdq
jne
lods
or
mov
and
pop
je
jb
es
imul
mov
push
dec
pop
into
ds
mov
or
out
pop
push
outs
sub
in
pop
xor
lds
je
fist
dec
mov
retf
push
movs
fldcw
pop
mov
aam
inc
adc
cmps
push
test
pop
adc
nop
mov
js
adc
stos
sbb
push
sbb
xchg
mov
js
pop
imul
push
xchg
push
shr
mov
mov
cmps
cli
mov
jp
push
jmp
sub
inc
test
xor
(bad)
lock
mov
loop
jne
sub
jo
call
jmp
cmps
rcr
jb
mov
ss
pop
iret
test
inc
mov
adc
mov
inc
sbb
mov
fld
mov
push
cmp
xchg
add
adc
ins
mov
jmp
mov
inc
xor
fs
mov
ins
in
pop
sub
and
call
jne
cmp
ror
dec
add
(bad)
jp
jg
(bad)
sub
add
mov
pop
add
scas
xor
pop
mov
imul
mov
jnp
cmp
push
jl
xchg
dec
retf
sub
cmp
mov
popa
arpl
cdq
sbb
test
xor
call
inc
mov
jecxz
imul
gs
xor
mov
mov
push
push
movs
sbb
cmps
dec
dec
jno
jle
pop
icebp
mov
mov
repz
je
jmp
gs
sub
add
ins
mov
fsubr
(bad)
or
cld
sar
ds
add
cmps
xor
mov
push
cmps
xchg
aam
dec
jle
mov
outs
pop
hlt
out
leave
popa
push
xchg
xlat
addr16
dec
aad
xchg
cmp
into
icebp
in
cmp
pop
mov
imul
frstor
push
and
aas
sub
fwait
popa
(bad)
mov
int
ret
or
out
mov
sub
lods
inc
imul
movs
xchg
mov
int
movs
cdq
xchg
or
stos
cwde
addr16
scas
cdq
iret
sbb
sbb
pop
movs
stc
mul
sar
clc
mov
mov
(bad)
(bad)
repz
hlt
out
dec
mov
fadd
stc
add
stc
inc
push
mov
mov
test
ins
jns
sti
inc
call
call
shl
sub
xchg
cmps
movs
push
scas
pop
stos
into
pop
shl
cmc
ds
loopne
jecxz
adc
jg
cld
prefetch
or
cmps
test
cld
dec
jno
pop
shl
jle
sub
mov
xchg
push
dec
ficom
push
imul
xor
nop
push
xchg
jo
pushf
jle
stc
das
sar
jge
ret
stc
push
imul
fucomi
mov
int
cmps
div
je
dec
sub
push
mov
xor
inc
cdq
dec
pop
jecxz
je
xor
sbb
int
arpl
test
pop
loopne
cld
jbe
dec
xorps
gs
mov
sbb
aaa
in
sbb
(bad)
xchg
jmp
push
adc
data16
push
lahf
repnz
jmp
es
cmp
ficomp
cmps
and
js
imul
iret
repnz
test
xchg
push
sar
(bad)
cdq
scas
cmp
loop
in
loop
dec
jg
cld
xor
push
mov
mov
lods
dec
sub
pop
stc
gs
push
pop
pushf
adc
or
push
(bad)
fild
dec
jns
push
push
ror
ds
aas
aaa
int3
sub
sbb
sub
aaa
pop
jp
scas
es
imul
jbe
ins
clc
ret
push
outs
test
mov
ds
dec
mov
(bad)
enter
movs
sub
and
int
aam
push
aad
jmp
mov
out
mov
jb
cmp
aad
mov
js
mov
dec
mov
adc
xor
stos
aad
mov
cmps
out
pushf
jns
mov
fcmovbe
sbb
xchg
and
jne
in
push
xchg
cmc
sub
rol
mov
out
xor
xchg
mov
lock
(bad)
add
pop
clc
mov
aad
push
cmc
ds
pop
in
imul
dec
push
ss
and
jle
push
aas
cli
leave
pop
pop
xchg
loop
pop
jge
in
(bad)
push
shl
mov
bound
and
rcr
icebp
cmp
jno
mov
cld
fist
test
xor
jge
rcr
(bad)
cmp
mov
sbb
pushf
les
ins
std
popf
pop
jmp
cmp
mov
mov
dec
movs
cmps
fwait
dec
pop
mov
lods
and
sahf
or
and
cmps
mov
sub
aas
jno
les
dec
jno
push
mov
dec
inc
imul
sub
cli
xchg
push
movs
scas
loopne
xchg
fidivr
fdiv
retf
(bad)
dec
xchg
addr16
cwde
out
test
(bad)
jmp
in
mov
jnp
cmp
dec
push
mov
(bad)
retf
push
mov
xchg
daa
in
gs
mov
xor
mov
inc
cmp
(bad)
stos
neg
mov
pop
les
out
pop
cmp
jmp
pop
stos
sbb
ja
xchg
aam
enter
shl
lahf
cmp
pop
int
cmps
adc
stos
pop
jae
xchg
inc
scas
sahf
movs
das
xor
popa
ret
xor
inc
xchg
arpl
loope
cmp
inc
mov
sbb
sub
lahf
ja
lods
pop
test
xlat
enter
xchg
mov
mov
outs
xchg
inc
sahf
push
je
icebp
mov
xchg
mov
jb
and
daa
xor
xchg
and
push
call
cs
dec
push
push
test
pushf
pop
sub
inc
xchg
ficomp
push
lds
push
cmp
xlat
stos
sub
das
jbe
adc
(bad)
lods
dec
jmp
xor
push
push
jmp
mov
cld
movs
mov
neg
mov
add
ret
push
cmp
sub
cmps
loope
push
sub
aaa
sub
std
sbb
aaa
iret
call
lea
pop
aad
mov
push
das
push
xchg
sbb
mov
jo
push
add
dec
push
pushf
push
mov
cmp
xor
or
std
in
sbb
int3
arpl
cmp
push
test
mov
xchg
or
sub
and
mov
adc
js
sbb
pop
div
fsubr
leave
sbb
xlat
cmps
pop
adc
inc
xchg
push
dec
push
cmps
and
dec
loope
cmp
add
retf
xchg
jge
sahf
sbb
push
clc
xchg
sub
sbb
jns
in
mov
mov
dec
rol
dec
mov
jmp
movs
mov
push
xchg
scas
jbe
js
push
fwait
mov
int
push
fstp
aam
out
leave
(bad)
pop
push
mov
pop
mov
cwde
xchg
jmp
in
xchg
adc
arpl
pop
adc
pusha
fimul
push
test
push
popf
js
stos
xchg
idiv
test
arpl
and
push
ja
mov
outs
call
aaa
les
xor
pushf
ffree
sub
sahf
mov
out
and
lods
ret
in
aam
cdq
xchg
pop
sbb
sub
sbb
push
and
fwait
pop
inc
push
in
ss
movs
mov
dec
mul
cmp
repz
cmps
or
cli
sbb
pop
pop
inc
fwait
test
add
push
jg
mov
movs
shr
imul
push
in
dec
mov
daa
cld
fadd
ret
rcl
and
fsin
ins
ret
data16
cmp
stos
inc
cli
dec
mov
cmp
sbb
pop
mov
jb
mov
xor
repz
das
ret
gs
sub
scas
push
ret
rcr
nop
popf
leave
movs
(bad)
xchg
(bad)
shl
inc
dec
adc
in
mov
fwait
imul
jae
repz
sub
or
add
pop
pop
ret
test
iret
sbb
movs
retf
push
call
jne
pop
loope
cwde
adc
bound
leave
gs
fwait
call
adc
push
in
ror
cli
inc
ret
out
or
mov
mov
mov
(bad)
ins
dec
cmp
jno
(bad)
mov
add
sub
mov
xchg
out
movs
pop
sbb
dec
lods
mov
(bad)
fs
dec
add
xlat
call
out
(bad)
mov
adc
movs
in
ins
int3
sbb
push
jne
push
leave
xor
mov
int3
xchg
movs
mov
push
out
adc
(bad)
dec
dec
add
popf
jae
lock
pop
mov
(bad)
cli
cmp
cmp
imul
ins
lock
das
retf
pop
adc
imul
mov
rcr
dec
movs
test
xor
dec
push
mov
or
inc
imul
jecxz
sbb
in
scas
push
jle
jge
and
icebp
pop
xchg
in
call
ins
clc
cld
or
xchg
retfw
jecxz
inc
mov
mov
rcl
push
rcr
in
jne
dec
je
shl
repz
jnp
(bad)
and
adc
pop
add
mov
(bad)
scas
xchg
arpl
xor
out
out
gs
imul
adc
retf
aaa
fisttp
jg
jg
cld
cmp
push
sbb
data16
repnz
ret
mov
sub
call
ins
or
fcomp
data16
in
es
push
(bad)
and
rcr
aam
out
(bad)
sub
xor
shl
scas
mov
iret
retf
imul
retf
push
sub
inc
push
mov
xchg
ss
popf
movs
scas
lea
push
fs
xchg
cwde
dec
push
xchg
test
popa
cs
pop
cwde
fs
sbb
cmp
pop
push
or
jbe
call
aaa
pop
shl
movs
mov
test
mov
mov
addr16
xchg
in
and
ins
popf
pop
adc
mov
mov
fcmovbe
inc
cmp
push
lock
rcl
mov
ins
pop
jge
pop
sbb
enter
std
fild
fidiv
mov
popa
inc
(bad)
addr16
cmp
push
popa
mov
cmps
in
cli
sar
add
fnstcw
repz
fstp
outs
fidiv
mov
push
es
xchg
dec
push
popf
or
cmp
mov
add
aam
(bad)
movs
aaa
imul
sbb
retf
dec
addr16
cmp
icebp
pop
push
rcl
mov
test
outs
xchg
sbb
xchg
mov
xlat
int3
mov
ret
inc
and
rcr
cmp
iret
fptan
push
jmp
mov
out
inc
retf
ror
lahf
sub
retf
push
mov
cmps
jmp
xchg
sub
loope
inc
fcomip
cmp
test
out
sub
add
cmps
fisubr
pop
mov
inc
xchg
repz
fadd
(bad)
pushf
addr16
idiv
in
stc
dec
pop
push
jecxz
les
pop
jnp
cmp
mov
dec
xchg
dec
mov
in
dec
arpl
sbb
push
movs
ror
pop
or
in
sub
jne
popf
dec
sbb
cmp
mov
cmp
(bad)
iret
enter
dec
adc
fwait
out
lahf
inc
mov
lahf
pop
jne
or
ficom
sub
mov
or
rcl
push
je
fstp
mov
xchg
sbb
mov
jnp
in
repz
inc
sub
lea
xchg
sub
xchg
call
sub
fst
cdq
pop
pop
bnd
or
iret
push
mov
push
cld
fsincos
xchg
popaw
jle
ret
stos
sbb
pop
scas
sahf
jb
or
retf
jg
mov
data16
dec
xor
pop
ins
mov
test
inc
ret
push
out
cmp
(bad)
pop
ds
mov
jge
aam
mov
dec
jbe
shl
scas
enter
(bad)
std
adc
lods
sbb
inc
mov
aam
sub
jle
cwde
retf
inc
not
aad
loope
jno
sub
bnd
call
mov
fist
mov
out
into
pop
cmps
imul
inc
xchg
cmps
mov
push
outs
ret
push
mov
out
dec
and
mov
sub
int
test
mov
xor
daa
xchg
bound
call
scas
retf
mov
out
jecxz
das
adc
sahf
fwait
cmp
aam
das
and
xchg
or
push
mov
loop
call
push
pop
test
mov
ror
mov
push
(bad)
dec
cmc
add
data16
mov
pop
adc
and
pusha
mov
lock
mov
xchg
loop
mov
mov
xchg
test
nop
cmps
cs
out
inc
xor
pop
push
xchg
fcmovb
out
dec
hlt
mov
pop
test
push
sub
out
gs
ja
(bad)
xlat
push
test
fucom
push
cdq
push
cmps
jmp
lods
into
sahf
outs
mov
imul
pop
mov
jecxz
push
jmp
cwde
test
xor
mov
or
fiadd
pop
in
xchg
push
cmps
mov
xchg
sbb
push
cmps
aaa
addr16
aaa
mov
push
cmp
or
mov
movs
ins
push
jge
mov
movs
out
jp
jmp
dec
push
leave
mov
cmp
dec
js
pop
lods
ss
lods
daa
xor
push
aas
int
stc
jmp
dec
sbb
dec
iret
jecxz
in
sti
dec
(bad)
pushf
(bad)
jbe
adc
cmp
iret
call
mov
das
dec
in
fld
xchg
xchg
movs
mov
jge
jp
lods
mov
retf
xchg
enter
jb
dec
dec
and
xchg
jae
mov
pop
dec
aam
dec
dec
jnp
(bad)
es
or
jl
and
ja
dec
test
add
inc
out
lods
sub
dec
mov
cwde
aad
shl
push
dec
jae
cmp
pushf
test
addr16
(bad)
shl
or
mov
jo
xchg
stos
adc
das
sbb
repnz
sti
pop
les
bound
sub
pop
xchg
scas
xor
cmp
cmp
mov
adc
in
sahf
fisttp
lahf
xlat
ror
sbb
or
not
clc
dec
sti
cld
int3
out
dec
cmp
cmps
std
pop
sar
sar
lods
or
add
and
xor
mov
push
mov
hlt
xchg
ja
cs
adc
aaa
mov
repz
into
aaa
aas
xor
loop
fnstenv
xchg
mov
out
jb
xchg
push
ja
test
ficom
pop
pop
or
xchg
xchg
mov
ret
or
clc
jge
fwait
iret
cli
jl
pop
pop
(bad)
cs
xor
xchg
mov
jae
xchg
cli
(bad)
fidivr
sbb
inc
sahf
scas
adc
repnz
int3
adc
aam
mov
jecxz
pop
add
pushf
mov
dec
cmps
adc
mov
sahf
jne
jno
pop
dec
sbb
arpl
es
jne
test
mov
dec
outs
arpl
and
push
inc
xchg
adc
xchg
push
and
jnp
cmps
jp
xor
adc
adc
loope
dec
mov
pop
xor
jle
pop
pop
push
and
or
lods
pop
inc
in
addr16
div
enter
test
or
and
fs
(bad)
loope
inc
sahf
test
mov
int
in
pop
sub
xchg
dec
xchg
fidiv
jmp
sbb
into
icebp
popa
into
xchg
in
dec
lods
pop
ins
pop
push
mov
pop
mov
adc
popa
pop
xor
stc
les
add
push
mov
mov
mov
pop
cli
int
inc
sub
neg
lods
mov
(bad)
imul
pop
mov
pop
fsub
shl
out
jno
jns
jmp
(bad)
mov
mov
mov
inc
adc
mov
xor
xchg
mov
dec
cmp
mov
loopne
rol
mov
ret
sti
mov
lds
sbb
(bad)
adc
mov
cmp
push
imul
or
push
call
pushf
sub
xchg
pop
mov
scas
fcom
aaa
sub
ds
das
addr16
inc
inc
int3
cmp
mov
test
loopne
das
push
in
scas
(bad)
neg
clc
dec
outs
push
cld
aas
mov
dec
push
adc
mov
in
xor
movs
mov
xchg
jmp
mov
mov
sub
push
imul
xchg
mov
xchg
ss
dec
dec
jb
mov
xchg
mov
shr
pop
xor
jae
mov
cmps
mov
xchg
iret
push
lods
(bad)
test
cdq
out
sub
test
pop
pop
xchg
pushf
and
jmp
mov
je
popf
in
lahf
or
cmps
into
test
xchg
pop
pop
jg
mov
mov
leave
jmp
rol
pop
imul
xor
xchg
push
sub
retf
push
inc
xor
dec
mov
sbb
sub
cmp
xchg
pop
and
scas
push
jl
int
mov
enter
jmp
push
and
sar
retf
xchg
outs
fisubr
lods
popf
rol
push
jecxz
shl
mov
xchg
int3
xor
mov
xor
fstp
or
mov
fnstcw
sub
je
adc
cmp
inc
ret
std
nop
inc
rcl
xchg
mov
out
mov
in
std
push
xchg
pop
enter
push
enter
jp
into
(bad)
in
pop
or
scas
fs
or
sub
xchg
popa
sub
in
sahf
xchg
jl
xchg
xlat
push
pop
sbb
sbb
iret
idiv
cmp
mov
pop
jp
cmp
jl
dec
xor
xchg
rcl
dec
inc
add
and
jecxz
out
xchg
mov
xchg
fwait
and
mov
and
fdiv
inc
xchg
imul
fbld
jecxz
sub
push
push
call
jmp
add
sub
cmp
lods
or
push
push
rcr
dec
cmps
lahf
add
ins
cmc
sbb
mov
mov
cmp
lahf
fisubr
lock
outs
dec
fisttp
cmps
adc
mov
(bad)
into
inc
not
sub
and
(bad)
xchg
push
icebp
or
adc
sub
dec
popa
mov
inc
dec
stos
and
fistp
cmp
ret
pop
gs
bound
cmp
fs
into
sbb
dec
xchg
ins
and
loopne
jnp
xchg
inc
daa
fwait
jno
mov
retf
int
mov
push
and
and
in
adc
ds
test
ss
test
fcmovnb
jecxz
jmp
and
and
les
pop
mov
leave
sbb
and
in
mov
inc
xor
lea
jg
xchg
inc
fsub
jne
xor
sahf
(bad)
push
loopne
leave
adc
cmc
stc
cwde
xchg
inc
add
jo
addr16
cmp
xchg
jb
mov
inc
and
pop
add
xor
jge
pushf
cli
les
nop
push
sti
cli
bound
push
mov
add
add
xchg
ss
out
add
cwde
inc
sub
mov
push
iret
cmps
movs
xor
shl
not
int
adc
sbb
mov
adc
or
and
aas
xor
jnp
jecxz
dec
fisttp
and
or
(bad)
mov
jbe
pop
and
cmp
push
or
arpl
xrelease
fcmovb
mov
daa
adc
and
jbe
ins
jae
pop
pop
xchg
sbb
and
jae
cmc
jo
adc
push
xlat
enter
mov
add
int3
xor
mov
bound
ret
cmovb
ret
mov
ds
in
sahf
and
push
push
adc
jge
xchg
and
sub
sub
ins
push
sub
sub
mov
test
out
mov
lds
ror
in
gs
mov
lods
pop
scas
mov
jg
loop
mov
cmps
sahf
sbb
xchg
cmp
ss
jne
jl
adc
xor
hlt
jmp
(bad)
fld
ins
cmp
push
fidivr
stc
pop
ins
ficom
(bad)
push
fcmove
mov
pop
or
xor
dec
sub
(bad)
jecxz
sbb
pop
and
test
or
mov
mov
mov
and
(bad)
icebp
outs
ffreep
sbb
rcr
pusha
jg
adc
xor
xor
sti
cmp
rcl
aas
inc
lods
arpl
add
outs
lahf
mov
sbb
test
in
scas
add
mov
jg
jmp
fisub
cmps
outs
or
stc
and
(bad)
mul
jns
lds
mov
retf
ret
pop
aas
sti
gs
(bad)
mov
inc
leave
and
push
inc
mov
in
sub
mov
in
push
clc
imul
or
inc
fsubr
stc
and
sti
push
ficomp
cld
push
(bad)
sub
add
nop
mov
and
cld
dec
in
adc
add
xlat
aas
repnz
push
ficomp
push
lds
jle
retf
aas
in
inc
clc
push
js
je
add
mov
inc
pop
imul
leave
and
jnp
inc
mov
call
dec
clc
test
loope
sar
std
ja
jo
cmps
push
xor
movs
and
stos
cmp
and
je
push
inc
jne
or
mov
out
or
jno
push
out
jmp
scas
jp
sar
push
popa
xchg
lock
ror
mov
ds
cmp
loop
cmovae
adc
inc
jae
jb
mov
mov
movs
movs
sub
stos
bound
adc
and
cmp
jns
mov
fucomi
xor
outs
lds
movs
jns
inc
inc
pusha
out
mov
mov
lock
jne
(bad)
sbb
dec
mov
cmps
gs
xchg
sub
call
test
jns
dec
dec
cmp
push
sbb
mov
arpl
mov
xchg
cmp
pop
dec
inc
push
fnstcw
call
push
js
ja
push
into
sti
mov
loopne
scas
mov
pop
mov
inc
mov
dec
mov
pushf
shl
(bad)
xchg
dec
dec
outs
fdivr
pop
sub
fsub
fneni(8087
jno
lods
jo
mov
ror
mov
in
int
mul
hlt
sbb
ret
push
fldcw
rcr
jp
xchg
xor
add
fdivr
out
(bad)
push
movs
(bad)
add
mov
xchg
xor
mov
(bad)
jbe
retf
and
aad
rol
sub
fimul
push
imul
fstp
stc
cmp
inc
mov
fdiv
movs
inc
nop
sub
xchg
lods
inc
mov
out
xchg
stc
inc
inc
push
sbb
popf
aad
push
inc
pop
fcmovnb
push
inc
pop
je
push
xchg
mov
push
mov
scas
or
xor
xchg
mov
mov
sahf
out
stos
popf
or
or
lahf
jne
(bad)
(bad)
call
pop
or
dec
push
pop
xor
push
mov
movs
sahf
out
mov
pop
imul
jl
fst
sti
aaa
mov
out
jbe
test
cdq
mov
dec
push
sub
lods
pop
(bad)
cmps
test
pop
out
adc
xchg
ins
rcl
and
mov
xchg
jge
ds
jg
icebp
dec
je
inc
mov
aaa
sbb
xchg
stc
pop
call
(bad)
jmp
jle
and
sub
mov
dec
sub
mov
inc
repnz
push
or
push
or
es
lahf
bswap
icebp
mov
sbb
or
fidivr
repnz
xlat
test
pop
imul
aam
cs
jp
(bad)
sbb
stc
dec
or
xlat
gs
mov
dec
retf
cmp
div
sub
gs
xchg
daa
adc
repnz
scas
xchg
loope
fcomp
scas
mov
fnstcw
test
push
xor
sub
push
push
jp
retf
cli
xchg
int3
mov
icebp
in
pop
pop
xchg
inc
mov
(bad)
iret
mov
fdivr
add
fnstcw
loope
(bad)
cmp
js
push
sbb
sti
fld
adc
(bad)
in
out
xchg
push
stc
jg
adc
aas
scas
cs
scas
jns
dec
clc
psllw
test
push
popf
inc
xchg
call
sbb
pop
push
addr16
aaa
mov
aam
cwde
aam
outs
xchg
into
sub
rol
jmp
cli
jl
popf
jbe
push
fwait
jno
retf
stc
xchg
mov
add
cmps
xchg
adc
pop
fcomi
js
pop
sbb
mov
mov
jg
or
inc
clc
test
xchg
lods
lock
aad
or
(bad)
push
push
imul
dec
sti
cs
not
pop
leave
int
ds
inc
xor
test
adc
jge
pop
fidivr
outs
xchg
xlat
lds
hlt
mov
push
(bad)
or
xor
cs
sar
fucomi
ja
aam
stc
pop
fld1
jecxz
popf
sub
sub
stos
call
mov
push
inc
dec
dec
or
xchg
cmp
add
add
add
push
inc
idiv
sub
jecxz
add
mov
mov
pop
lock
loop
dec
es
mov
pop
pop
adc
pushf
mov
adc
inc
and
cmc
hlt
inc
sub
cmp
shl
aad
addr16
xor
rcl
push
push
mov
pushf
dec
es
dec
xchg
xchg
cmp
mov
repnz
push
ds
xlat
lds
adc
mov
(bad)
in
jecxz
jne
pop
mov
jmp
cmps
test
fistp
call
push
mov
lock
in
cmp
in
arpl
out
neg
retf
not
jne
stos
imul
loope
stos
clc
mov
jmp
mov
fxam
jecxz
pop
or
pop
retf
mov
sub
add
dec
in
mov
jecxz
outs
bnd
pop
pop
mov
popf
mov
add
jmp
sbb
mov
imul
stos
mov
push
imul
mov
jmp
or
mov
imul
mov
je
(bad)
xchg
fnstsw
or
icebp
popa
les
imul
outs
adc
aad
xlat
sahf
scas
rcr
lods
sub
cmp
push
iret
and
inc
push
xchg
lods
dec
inc
xchg
sbb
mov
dec
gs
vsubss
add
lds
sbb
sti
repz
cld
std
lahf
sub
push
jle
loop
jae
inc
nop
stos
cs
fnstsw
mov
sbb
loop
jecxz
and
movs
addr16
(bad)
xchg
ret
idiv
sub
sub
add
cli
push
cli
mov
lods
int
mov
movs
fisub
(bad)
movq
jle
stos
(bad)
loopne
(bad)
(bad)
lods
fcom
pop
psubd
push
xchg
add
stos
adc
add
rcr
xchg
jb
les
shr
cmps
outs
jb
and
push
mov
jmp
(bad)
aas
push
xchg
pop
jne
arpl
cmps
mov
frstor
paddusb
push
pushf
pop
jmp
jle
jg
fstp
pop
pop
inc
sar
fstp
mov
adc
cmp
sbb
add
and
adc
sub
jmp
aad
push
stos
xor
lods
cmps
pushf
xchg
jle
rcr
imul
dec
rol
ja
push
jmp
ja
fiadd
mov
xchg
loope
js
(bad)
push
dec
test
push
cwde
xchg
call
or
mov
cmp
pop
fisub
sub
jne
lds
cs
rcr
push
into
loop
inc
dec
cmp
push
adc
add
sub
mul
mov
jb
jp
pushf
icebp
push
xor
ret
ins
mov
repz
nop
jns
adc
dec
(bad)
cs
int3
je
push
fchs
mov
ficomp
push
mov
ss
pop
jns
xor
sub
xor
push
mov
jg
outs
lock
xor
and
and
cld
ja
mov
push
lods
push
fwait
stos
push
sub
sahf
(bad)
mov
mov
dec
ss
cmp
push
lods
sub
out
ret
test
aad
dec
or
pop
fstp
mov
jno
fadd
mov
loop
ficomp
das
leave
shl
mov
jmp
xchg
inc
jmp
and
pop
cld
jns
div
sub
inc
dec
inc
push
(bad)
cmc
das
lahf
out
pop
pop
add
add
sub
push
fs
xlat
fstp
cmp
dec
cmp
mov
dec
jbe
pop
rcr
cmps
outs
jo
popa
sbb
cmps
aam
dec
stos
das
addr16
in
out
adc
cdq
es
repz
cdq
test
shl
xor
repnz
jg
jne
(bad)
test
(bad)
sub
inc
mov
push
add
iret
cmc
out
sub
pop
pop
call
mov
cmp
lea
lahf
cs
inc
xor
ror
cmps
dec
jl
sub
pop
fwait
daa
adc
sbb
mov
jmp
je
in
mov
rcl
xchg
div
mov
jae
mov
adc
outs
fnstsw
mov
test
cdq
call
test
and
push
cwde
loop
test
mov
addr16
sbb
rcl
mov
push
xor
movs
mov
push
lea
inc
sub
pop
sbb
fcmovnu
jnp
jg
mov
aam
mov
lahf
mov
dec
jp
dec
outs
imul
cmp
pushf
jmp
movs
sub
movs
mov
cld
and
inc
mov
mov
sub
(bad)
iret
jno
cmps
sub
arpl
lods
jne
jle
sti
sub
xchg
xor
xor
sbb
xchg
int
ret
retf
jbe
dec
push
push
xchg
ds
ror
(bad)
iret
(bad)
pop
or
or
push
cld
and
mov
popa
sub
push
sub
sbb
(bad)
clc
ins
stos
push
push
sti
pop
rol
inc
scas
dec
ret
jmp
dec
aad
xchg
in
mov
jo
sub
adc
cmps
nop
test
movs
lahf
pop
xor
mov
test
sub
aas
sub
loope
pop
sbb
sbb
and
lahf
mov
push
adc
ficomp
mov
movs
add
(bad)
into
lock
iret
cdq
xor
or
or
cmp
cmp
inc
out
or
jne
lock
shl
xchg
jbe
out
mov
sub
imul
mov
sbb
retf
add
push
call
scas
mov
jne
icebp
jle
push
cmps
mov
mov
and
and
movs
sti
stos
ins
pop
inc
mov
push
cmp
jne
shl
xlat
inc
push
pop
or
xor
loope
dec
adc
cmps
dec
fimul
(bad)
lods
adc
fisttp
mov
call
push
addr16
lods
arpl
ffree
cmps
hlt
mov
jmp
mov
idiv
in
int
jns
pop
mov
cli
hlt
(bad)
ret
jo
mov
cdq
sysenter
ret
out
inc
push
retf
sub
les
push
xchg
add
test
cwde
cmc
cld
xchg
mov
xor
push
lods
push
movs
aaa
ret
jns
shr
in
mov
pop
and
je
clc
jp
nop
test
movs
out
fcmovnb
or
ds
lahf
cmc
mov
cmp
(bad)
mov
pop
lds
pop
sub
icebp
dec
(bad)
sub
out
scas
icebp
imul
pop
pop
test
sub
sar
adc
cmc
mov
sbb
fistp
cmc
push
and
push
outs
mov
and
stc
mov
(bad)
fnstenv
stc
lods
(bad)
xlat
xor
and
cmp
push
mov
jae
cli
jle
push
mov
neg
mov
dec
ret
test
ficom
stos
ror
push
mov
repz
xchg
dec
mov
and
mov
test
push
movs
and
repnz
movs
jl
mov
cmps
daa
ja
lods
cli
pop
ds
call
fadd
jge
cld
std
leave
pop
push
xor
mov
sti
fsub
daa
popf
js
fist
(bad)
xchg
test
and
iret
mul
dec
push
cmps
sbb
xchg
adc
dec
iret
cmc
outs
add
push
clc
jo
pop
and
fdivr
push
mov
leave
jle
movs
xor
mov
fsub
in
lahf
jne
xor
mov
jns
dec
mov
inc
mov
jo
inc
pop
sahf
mov
sti
mov
int3
movs
stos
out
inc
movs
xor
pop
aam
mov
sbb
fdivr
int
pop
mov
mov
xor
rcl
dec
mov
push
add
pop
add
sbb
jge
mov
pop
xor
pop
leave
cmps
lods
in
push
cmp
sbb
in
push
stos
dec
int3
push
stos
jne
sbb
push
es
cmp
nop
push
fidiv
push
xor
popf
nop
xchg
cmps
cmp
cwde
dec
jp
ficomp
mov
ins
test
aam
pop
and
pop
xchg
push
pop
jbe
ja
mov
mov
pop
push
pop
aam
and
imul
and
ins
retf
retf
sbb
mov
outs
in
dec
ret
mov
inc
sbb
stos
inc
adc
pop
(bad)
xor
repnz
in
ficom
adc
in
and
jp
jb
daa
cmp
enter
xchg
jo
adc
sbb
test
xchg
fidivr
xor
es
jl
(bad)
jge
pop
scas
ret
in
dec
aam
xor
mov
mov
sub
xlat
cmp
cmp
daa
push
inc
xor
jb
mov
adc
in
mov
fbld
dec
xor
test
jecxz
icebp
fdiv
fild
mov
lock
movs
loop
(bad)
retf
and
cmps
push
test
movs
mov
call
into
and
xchg
frstor
dec
aas
jge
(bad)
test
in
jnp
xlat
out
inc
ret
inc
ficom
ds
jmp
outs
pop
xchg
into
dec
lock
rcr
push
clc
(bad)
mov
dec
popf
sub
sbb
fistp
gs
mov
test
xchg
(bad)
call
outs
mov
mov
pop
sbb
arpl
cmps
(bad)
iret
imul
fcom
pop
stc
push
mov
fisub
inc
stos
mov
jno
pop
pop
arpl
in
in
popa
or
test
loope
dec
dec
dec
cdq
ficom
pop
les
mov
or
rol
cli
or
clc
lods
pop
mov
pop
in
push
cdq
cmp
outs
mov
dec
pushf
fadd
stos
add
push
fwait
mov
fwait
pop
mov
pop
imul
gs
idiv
mov
pop
ins
aad
div
mov
(bad)
and
popf
push
cmps
cmps
out
mov
push
pop
sbb
or
ds
ds
dec
mov
pushf
pop
push
inc
lock
out
jo
jnp
push
daa
sub
sub
mov
pop
shl
push
pop
sub
int3
imul
dec
out
sub
jno
lods
sub
cmp
out
mov
repz
add
jle
lock
lods
repnz
or
jb
cmps
dec
in
mov
shld
fiadd
pop
xor
dec
inc
loope
arpl
inc
xor
cmps
mov
movs
adc
cmp
sub
mov
sub
and
mov
neg
repnz
iret
adc
dec
push
mov
inc
push
sub
out
or
jno
repnz
cld
mov
addr16
jno
inc
add
mov
leave
stos
push
lods
or
push
cmp
mov
sbb
je
rcl
pop
(bad)
pop
pop
mov
mov
mov
stos
idiv
(bad)
push
mov
mov
sub
sub
(bad)
loopne
xor
scas
out
pop
aas
rcr
arpl
dec
fsubp
mov
sbb
mov
mov
mov
mov
test
cmp
pop
out
adc
add
test
imul
and
cld
mov
icebp
stos
test
adc
lahf
jg
jle
push
pop
ss
bound
mov
push
sbb
inc
aad
mov
sub
repz
adc
or
aas
or
cmp
shl
xor
inc
jne
out
xchg
xchg
xchg
or
sbb
mov
jbe
stos
push
jno
sub
jne
push
sahf
pop
xchg
xchg
push
gs
gs
test
leave
sub
(bad)
dec
ds
mov
movs
sub
lea
(bad)
jns
rcl
add
sub
mov
std
(bad)
shl
adc
jp
aad
stos
retf
call
mov
arpl
fs
xchg
repnz
pop
pusha
adc
and
xchg
int
pop
jmp
xchg
mov
mov
push
jmp
push
mov
aas
pop
aas
or
gs
mov
and
xor
push
or
cdq
ss
adc
stos
and
fcmovb
retf
sub
ror
add
loope
cmp
into
mov
mov
test
sub
imul
pop
push
clc
xchg
cld
ss
sub
rcl
sbb
xchg
xlat
push
pop
dec
xchg
pop
sbb
gs
pop
pop
push
sub
inc
out
lahf
pushf
jae
adc
popa
cmps
shl
je
minps
mov
push
retf
pop
enter
enter
sub
sbb
je
push
rol
xchg
and
or
ret
ficom
and
loop
call
psubb
loop
pop
stos
cdq
ins
dec
cmps
xlat
addr16
dec
retf
fcom
stos
mov
dec
add
fwait
ins
sub
or
inc
add
int3
outs
jle
xchg
bound
int
or
mov
loop
fisttp
retf
jno
jp
dec
mov
hlt
aas
pop
daa
ins
dec
js
shr
mov
data16
inc
mov
push
popf
mov
add
and
(bad)
mov
sbb
std
sahf
push
out
push
std
inc
(bad)
loopne
inc
mov
push
les
pop
pop
xchg
movs
leave
mov
push
cwde
fwait
mov
loop
movs
call
dec
push
or
cmp
xchg
push
mov
and
(bad)
pop
adc
in
in
push
jo
call
aas
adc
mov
jp
fistp
pop
sar
in
mov
cmp
scas
xor
stos
sub
ror
sbb
ret
xchg
jno
cmp
push
neg
fcomp
leave
push
xchg
mov
es
stos
test
jmp
mov
cmp
inc
fsub
mov
(bad)
mov
hlt
in
add
cmps
les
ret
les
js
lea
cdq
stos
push
sub
mov
test
adc
xor
in
push
xchg
mov
mov
or
popa
test
fisttp
gs
pop
adc
rcr
pop
xchg
xor
(bad)
xchg
pop
ins
into
ss
imul
lahf
inc
test
pop
rcl
ret
jge
xor
popf
mov
jo
ret
dec
stos
fistp
shl
xor
dec
dec
cmp
cs
ins
jno
rcr
mov
mov
dec
movs
retf
dec
stos
jle
lods
aad
adc
outs
pop
xchg
cdq
sub
push
call
pop
xor
adc
mov
mov
jl
lods
mov
lods
and
mov
xlat
or
lock
pushf
std
test
(bad)
movs
pop
pop
imul
mov
arpl
push
and
movs
dec
aam
dec
dec
mov
sbb
movaps
sub
xchg
and
pminub
add
sub
shr
adc
adc
gs
mov
mov
addr16
mov
push
loop
ror
push
mov
mov
dec
out
in
xor
mov
push
mov
mov
mov
sub
movs
sub
add
sbb
jbe
sbb
push
mov
inc
arpl
scas
les
bound
std
sahf
or
xchg
jae
movs
out
adc
inc
xlat
icebp
ja
add
inc
fldenv
inc
jg
hlt
xchg
inc
fisub
jno
loope
jo
(bad)
adc
or
cmps
pop
cmps
leave
iret
es
push
cmps
test
jmp
iret
inc
add
push
xchg
lods
daa
fsubr
add
pop
ss
mov
jae
js
mov
test
xlat
(bad)
push
idiv
sub
fwait
imul
scas
jbe
mov
jbe
and
jecxz
stc
imul
scas
(bad)
not
add
mov
sar
sbb
mov
pop
push
cmp
push
push
jne
mov
mov
jle
scas
(bad)
xchg
movs
mov
inc
push
ret
inc
scas
ror
pop
mov
mov
movs
mov
into
dec
loop
ret
cmp
ficomp
fld
dec
dec
in
mov
cmps
sub
xor
inc
daa
pop
inc
cs
xchg
into
xchg
(bad)
and
jnp
mov
scas
mov
js
gs
fcomp
aad
sahf
out
(bad)
fs
inc
(bad)
test
hlt
scas
mov
iret
test
daa
inc
scas
dec
or
sub
mov
cmp
xchg
sub
scas
xor
call
sub
mov
jae
cmp
je
rcl
cld
shl
mov
fmul
push
scas
loop
packuswb
in
ja
stc
pop
movs
in
out
pop
add
inc
mov
in
stos
xchg
ss
int3
xchg
ror
cmps
push
mov
pusha
mov
daa
out
(bad)
out
lock
inc
loop
mov
dec
ror
pop
pop
lods
dec
fstp
mov
mov
cld
aam
call
push
pop
cmp
cmp
push
push
jo
push
adc
daa
sahf
retf
mov
out
fcmovbe
aam
lea
imul
fild
sahf
xchg
jmp
pop
push
ror
sbb
push
push
pop
in
jb
sbb
fiadd
pop
shl
xor
or
retf
push
sbb
imul
cmp
xchg
in
cmp
outs
jns
mov
cmps
inc
dec
push
xchg
dec
mov
push
xchg
adc
adc
ror
stos
xchg
sub
(bad)
out
inc
es
pushf
pop
mov
mov
es
popf
movs
(bad)
mov
ret
inc
pop
into
xor
add
daa
mov
jno
not
retf
lahf
mov
(bad)
mov
scas
pushf
push
sub
lock
jmp
push
push
ja
xor
mov
call
jb
push
out
pop
and
repnz
and
lea
ror
dec
jne
jecxz
(bad)
daa
daa
sbb
repz
push
retf
push
popf
fistp
repz
push
je
pop
fild
outs
push
and
test
sbb
mov
pusha
or
push
test
stos
aaa
stos
(bad)
outs
sar
push
mov
push
aaa
pop
push
and
xchg
mov
jne
and
push
mov
mov
cmp
sub
cmp
sub
pop
not
push
bnd
hlt
fcomi
mov
cmp
retf
jno
jnp
shl
jp
rcl
push
sbb
dec
jb
jo
jno
sbb
mov
sti
inc
xchg
in
xchg
push
enter
jns
jno
out
push
sbb
mov
mov
loope
gs
mov
push
pop
out
mov
jnp
imul
fsubr
xchg
mov
popa
fadd
mov
fstp
or
call
pop
lods
neg
lock
push
sbb
ret
push
ins
push
cs
int
mov
leave
push
mov
stos
stc
cmp
(bad)
push
xchg
out
jns
pop
je
ins
pop
ja
fiadd
in
push
push
xchg
jl
seta
mov
cld
mov
imul
jne
(bad)
push
sub
mov
jne
dec
xchg
lds
rcl
sbb
int3
sahf
popa
test
xchg
or
scas
es
xor
int3
jno
mov
push
ficomp
mov
xchg
mov
cmp
pop
add
test
loop
pop
ins
mov
cmp
jmp
aaa
inc
inc
in
shr
xor
test
sub
in
and
enter
lahf
les
xchg
out
dec
test
popf
fdivr
sub
pop
mov
and
repz
jne
shl
mov
xchg
mov
aaa
dec
test
ss
xchg
xchg
call
pop
call
cmp
nop
retf
mov
jmp
scas
popf
xchg
xchg
sahf
pop
ins
xchg
push
adc
xchg
lea
repnz
out
leave
das
lods
pop
mov
das
jmp
test
mov
retf
push
mov
aad
repz
mov
add
daa
push
sbb
not
mov
icebp
aad
mov
dec
out
mov
pop
pop
push
es
xchg
jle
stc
das
ds
mov
pop
ss
jecxz
fnstcw
jle
in
out
pop
inc
jmp
add
shr
push
mov
fwait
add
(bad)
xchg
fbstp
add
xor
rcr
aas
clc
adc
xlat
jg
cmc
xchg
popa
pop
aam
add
or
in
or
fwait
sar
jbe
xor
and
pop
cld
pop
mov
mov
hlt
(bad)
iret
jecxz
mov
imul
or
lods
sub
push
mov
pop
mov
adc
sbb
out
lods
inc
fwait
(bad)
pop
add
retf
adc
jmp
and
or
ins
sbb
sub
mov
sbb
ret
xor
mov
xor
dec
mov
adc
mov
jno
cmp
and
mov
mov
aam
dec
hlt
stc
test
iret
retf
imul
in
mov
sbb
sbb
jnp
mov
or
and
adc
dec
pop
push
mov
ja
xchg
sbb
into
cmp
inc
and
jne
in
cli
push
ins
jl
pop
xor
aam
dec
ins
in
fistp
dec
dec
test
push
mov
dec
dec
retf
mov
xchg
pop
pop
inc
nop
mov
pop
repnz
mov
in
out
cmp
push
(bad)
or
ja
pop
pop
mov
fst
outs
jbe
out
out
mov
pop
sub
sub
out
(bad)
jp
xchg
lahf
push
adc
pop
adc
jmp
ins
xchg
inc
je
cdq
sub
sbb
leave
xchg
leave
es
shl
dec
retf
add
aam
jmp
(bad)
(bad)
jbe
cmp
inc
xor
mov
mov
mov
push
jge
rcr
xchg
adc
jb
lea
lods
or
out
inc
or
cmps
dec
or
mov
leave
xchg
dec
push
adc
pop
mov
test
les
mov
loopne
test
xchg
stos
add
inc
shr
pop
fadd
jnp
mov
test
inc
test
daa
jno
cmp
test
rol
add
inc
dec
ret
into
sub
and
sbb
cmp
inc
jb
stos
mov
or
inc
pusha
push
mov
retf
rcr
pop
pop
dec
adc
and
and
xchg
test
cdq
or
push
fisttp
pop
scas
push
push
dec
and
inc
cli
repz
rdmsr
mov
into
mov
test
mov
iret
ins
adc
jno
leave
nop
lock
jp
aaa
popa
ins
dec
xchg
ins
jb
cmp
mov
rcl
dec
nop
mov
ins
shr
sbb
mov
(bad)
inc
or
loope
add
adc
(bad)
dec
xchg
jb
rol
mov
outs
test
fst
jp
aaa
jbe
and
mov
cld
fcomp
push
and
popa
pop
mov
daa
ins
test
sbb
sbb
add
fs
popa
mov
scas
dec
fild
jno
je
jno
cmp
pop
adc
sbb
loopne
add
mov
shl
je
nop
cmp
test
aam
sbb
adc
mov
dec
mov
cmp
xlat
pushf
call
mov
ss
js
mov
into
dec
jnp
adc
icebp
(bad)
cmps
jle
xor
pop
pop
push
sbb
inc
push
out
mov
adc
ror
std
mov
add
out
xchg
sbb
xchg
mov
and
jg
xor
and
xor
iret
arpl
sbb
push
imul
cli
iret
fnstsw
jb
pop
pop
push
pop
test
ds
add
nop
shr
dec
xlat
pop
mov
jmp
mov
int3
call
and
jne
aas
or
mov
test
loop
or
outs
dec
test
daa
repnz
clc
cmp
mov
cmps
and
inc
cmp
cmp
jecxz
sub
mov
out
pop
xor
(bad)
dec
sub
repz
mov
movs
imul
arpl
std
cdq
int3
fiadd
iret
or
jl
vpaddusb
es
fild
mov
adc
push
mov
clc
jae
mov
jp
mov
sub
sti
(bad)
call
lock
adc
pop
arpl
shl
enter
fild
pop
push
pop
mov
xchg
arpl
popa
and
or
test
outs
mov
sbb
aam
pop
popa
mov
mov
dec
shl
fadd
fcomp
xor
push
add
add
xor
mov
inc
call
ficomp
pop
xchg
mov
int3
adc
sub
xchg
add
inc
jge
adc
idiv
mov
mov
adc
(bad)
neg
push
jle
cwde
mov
inc
loopne
jecxz
(bad)
mov
(bad)
out
adc
ja
mov
jg
daa
imul
dec
jb
dec
test
add
jmp
inc
pop
cli
(bad)
test
mov
mov
imul
dec
pop
test
add
ds
dec
inc
loop
xchg
sub
push
in
int
cli
test
push
test
jb
into
mov
and
mov
out
imul
(bad)
sub
or
push
cwde
in
mov
push
icebp
cmps
mov
fnsave
test
loop
jae
dec
jns
(bad)
mov
lods
pop
fsubr
js
pop
mov
xor
xlat
jmp
adc
pop
push
or
ror
adc
cmp
push
mov
fmul
push
push
dec
lds
jmp
lods
cmp
jg
retf
aam
xchg
repnz
mov
mov
push
mov
xchg
pop
sbb
xchg
sbb
inc
ja
test
sbb
leave
sti
(bad)
std
loope
gs
arpl
scas
dec
(bad)
fs
aad
push
pop
ins
cmc
pop
inc
test
in
mov
xlat
mov
imul
imul
fnstsw
ins
sti
lea
mov
sub
or
movs
daa
push
push
lahf
jp
popf
ds
mov
idiv
mov
push
dec
xchg
push
scas
dec
mov
(bad)
lahf
out
mov
inc
(bad)
ds
inc
dec
dec
push
and
sub
test
inc
je
pop
sub
and
cmc
and
mov
mov
cld
mov
and
mov
add
cmp
fild
test
lahf
or
arpl
mov
push
jmp
jp
sbb
(bad)
push
jmp
and
cmp
push
or
outs
sbb
and
jnp
ins
jp
jp
cmp
sub
(bad)
in
xor
pop
push
jle
xor
std
and
sar
adc
in
or
or
mov
pushf
sub
out
mov
imul
add
loopne
call
(bad)
ja
xchg
or
loope
outs
mov
ins
aad
mov
(bad)
push
gs
fistp
mul
xchg
and
cmp
cmp
out
jae
mov
test
jle
cmp
cdq
xor
mov
push
xchg
je
repnz
iret
movs
mov
jae
jl
movs
movs
out
lods
scas
mov
pop
jmp
addr16
ins
jns
sbb
mov
cmp
outs
cmp
mov
sti
dec
push
inc
scas
lea
add
pop
mov
push
mov
pop
jns
xor
rol
cmp
fisubr
sar
ret
bound
mov
test
add
test
dec
adc
pop
lods
sub
jle
dec
pop
pop
inc
(bad)
xor
in
xlat
cmp
jb
pusha
dec
add
mov
jg
cmp
ret
xor
outs
outs
cmp
add
das
ficomp
xor
enter
lds
push
add
xchg
lods
fcomi
push
aad
add
movs
and
cmc
mov
or
add
cmps
movs
fnstenv
sbb
aaa
sbb
xchg
mov
dec
jne
mov
mov
mov
lahf
rcr
mov
mov
xchg
(bad)
cmps
dec
imul
fnsave
push
data16
mov
(bad)
retf
mov
xchg
lods
sub
shl
mov
in
push
or
fs
pushf
loop
rol
mov
mov
ss
xchg
(bad)
pop
jae
mov
jg
cmp
or
sub
sbb
scas
xor
dec
inc
(bad)
std
pop
fistp
(bad)
in
jmp
xor
cmp
call
sbb
mov
stos
push
and
data16
stos
repnz
ja
push
fcmove
jp
sbb
mov
ficomp
(bad)
xchg
loope
pop
cmp
mov
push
int3
dec
fstp
inc
js
pop
sbb
les
cwde
rcr
into
pop
and
int3
mov
rcl
in
out
lahf
ret
aas
das
sub
cmc
dec
imul
ins
(bad)
xchg
(bad)
gs
push
fidivr
mov
pop
aas
mov
pop
sahf
cmp
test
sub
sub
aam
xchg
loope
inc
aam
mov
movs
mov
mov
sar
push
mov
xchg
enter
xlat
iret
cli
(bad)
iret
and
fcmovne
out
(bad)
lahf
enter
push
retf
inc
rol
push
pushf
test
xor
bound
in
fadd
das
cs
in
hlt
pop
sar
cmps
adc
sub
pop
(bad)
push
in
aad
neg
jle
test
mov
setne
lods
repnz
repnz
inc
or
cmp
xor
stos
inc
movs
dec
scas
lods
mov
dec
rcr
sbb
popa
pop
push
(bad)
in
mov
jle
sti
js
and
pop
cmp
sub
sub
dec
push
(bad)
retf
in
movs
(bad)
cwde
dec
pop
mov
int3
das
add
ja
fadd
dec
push
push
xchg
xor
or
out
mov
das
fistp
mov
and
fcmovbe
pop
and
push
call
pop
pop
lahf
inc
in
or
pop
rcl
mul
(bad)
sub
cmp
pop
pop
outs
or
adc
sbb
jmpw
aas
xor
mov
mov
jmp
movs
imul
push
mov
dec
push
sbb
push
jbe
sub
adc
int3
jo
stos
add
adc
gs
arpl
fisttp
sar
pop
call
loop
pop
loop
xchg
dec
test
pop
fldenv
jns
out
lods
jno
dec
scas
xor
dec
xor
sub
sbb
test
gs
dec
xchg
dec
mov
pop
data16
out
xor
xchg
stos
jp
sbb
(bad)
dec
mov
xchg
in
popf
mul
iret
mov
(bad)
rol
fstp
outs
fist
mov
mov
sbb
imul
dec
inc
dec
sti
retf
mov
inc
aas
sbb
data16
cmp
stos
mov
mov
gs
popa
loope
jge
xchg
mov
scas
retf
cmp
push
out
pushf
jecxz
sub
in
jp
and
adc
jbe
movs
addr16
push
test
push
jno
sub
sub
daa
loopne
scas
mov
push
sbb
repnz
gs
(bad)
fdiv
inc
or
ja
add
push
call
movs
cmp
retf
(bad)
inc
push
or
mov
int3
cmc
xor
frstor
stos
leave
stc
cmp
or
call
adc
push
jmp
fucomi
mov
mov
ds
rcr
pop
jg
jecxz
mov
movs
cld
cmp
xor
dec
setbe
fld
mov
dec
inc
xchg
in
in
rcl
in
(bad)
test
fwait
data16
int3
stos
leave
inc
jmp
xlat
das
out
shl
xor
or
jb
outs
mov
out
fwait
jo
pushf
stos
leave
lea
pop
push
and
sbb
out
mov
pop
out
out
adc
jne
dec
xchg
in
dec
adc
push
ja
xchg
outs
cmp
aad
into
push
pop
shl
xchg
pushf
push
add
mov
dec
jl
mov
cdq
dec
mov
popf
mov
inc
in
addr16
xlat
jno
popf
imul
(bad)
mov
adc
stos
dec
mov
jne
int3
push
fistp
push
push
sub
dec
lds
mov
add
cmp
outs
dec
push
mov
jge
jle
das
push
bound
in
lock
xchg
and
sub
je
xchg
xor
nop
mov
cmp
in
xchg
fs
push
shl
retf
xor
dec
xor
xchg
add
dec
adc
adc
mov
mov
dec
in
push
cld
fnsave
jecxz
ret
bound
in
and
push
shl
jg
std
int3
cmc
jmp
lds
imul
fsub
pop
xlat
fnsave
xchg
and
loope
push
dec
cdq
push
pusha
mov
nop
cmp
inc
mov
adc
fsub
jbe
mov
lods
cmp
fldcw
nop
mov
punpckhbw
jge
mov
mov
dec
xor
dec
imul
sub
pop
ins
mov
push
ficom
adc
push
xchg
push
xchg
ins
jne
in
in
shr
fld
jo
mov
xchg
or
jnp
lods
mov
scas
pop
hlt
sbb
xchg
rcl
xchg
dec
push
gs
outs
mov
outs
repz
(bad)
push
popf
pop
sti
fdivp
addr16
fwait
iret
inc
rol
sbb
je
jno
sbb
mov
jl
repz
ins
jne
xor
xchg
int3
fmul
jb
xchg
jle
or
sbb
adc
xchg
outs
in
inc
mov
cmc
aas
enter
sub
(bad)
xchg
xor
lods
(bad)
sub
jg
aas
fcmovne
lahf
clc
jne
cmps
stc
sbb
fcomip
inc
mov
push
lods
sub
inc
push
call
sti
xchg
bound
xor
nop
cmp
shr
push
pusha
pop
xchg
add
xor
daa
push
and
xchg
jnp
xchg
mov
lods
stos
xchg
ja
mov
hlt
pop
xchg
popf
mov
(bad)
mov
mov
jmp
leave
imul
pop
jne
retf
int3
sti
inc
ret
jl
leave
add
add
mov
iret
mov
xor
hlt
pop
ds
cmp
movs
xchg
popa
mov
dec
jmp
jbe
ja
pop
ror
dec
icebp
sar
hlt
out
push
jmp
jbe
push
aas
(bad)
or
jmp
cmp
jbe
sbb
adc
mov
sub
test
ins
enter
lods
fwait
or
inc
push
cmps
jmp
into
dec
outs
ds
cmps
xchg
jecxz
pop
push
mov
test
push
ficom
in
jae
mov
mov
push
in
mov
jae
(bad)
mov
inc
mov
pop
sar
out
sub
outs
imul
cmp
imul
es
xchg
fwait
ja
xchg
(bad)
jnp
imul
sbb
jae
push
push
dec
mov
sbb
add
rcr
sbb
pop
inc
xchg
in
add
fisttp
imul
jg
nop
mov
fwait
mov
sbb
shl
cmp
test
adc
xchg
or
ins
sbb
mov
arpl
jmp
sahf
jle
sti
outs
push
lahf
cwde
pop
and
mov
sbb
inc
jbe
sbb
iret
and
popf
dec
dec
jne
dec
(bad)
push
pop
and
sahf
mov
in
imul
inc
popf
sub
xchg
dec
push
outs
dec
push
mov
outs
mov
and
jecxz
test
nop
dec
or
fwait
push
cmc
leave
scas
cld
xchg
nop
in
xchg
sbb
out
stos
jle
xor
test
jle
lods
inc
cmps
repz
or
push
add
xchg
push
clc
into
rcl
stos
jge
scas
repnz
int3
stos
cmps
in
pop
adc
movs
popa
push
inc
xor
and
lods
jle
add
jae
fwait
ins
mov
adc
in
hlt
sub
sub
mov
xor
das
int3
ins
das
in
xor
xchg
push
lahf
stc
lahf
in
jle
cmp
scas
cs
mov
push
test
ja
sub
imul
or
dec
inc
sbb
fcomp
xchg
push
in
push
ss
int
jle
xor
(bad)
pop
cmp
mov
mov
cmps
mov
aad
jg
stos
mov
jo
push
rcr
jns
daa
sub
push
pop
dec
rcl
imul
inc
ds
in
sbb
mov
cmps
(bad)
ins
cmp
sub
sub
push
shl
push
dec
sti
mov
mov
loop
aam
loope
scas
xor
xlat
es
sbb
cmps
imul
mov
sbb
test
rcl
into
sub
dec
sahf
xor
lock
lods
call
lahf
mov
mov
iret
movs
pusha
imul
push
aam
js
js
cmps
les
sub
or
test
and
cwde
jo
dec
xchg
cmp
inc
lea
mov
fwait
in
lahf
sti
cmp
xchg
push
mov
jnp
mov
aam
iret
mov
movs
push
xchg
dec
cs
(bad)
lock
xchg
jno
js
cmps
push
imul
(bad)
bound
es
jns
jne
in
xor
jge
cmp
mov
and
dec
int
fimul
out
out
ss
xor
jmp
xchg
mov
pusha
dec
enter
inc
push
add
lods
jle
scas
mov
dec
xchg
out
or
add
add
out
pop
xor
mov
sub
int
retf
cmps
pop
out
les
test
cmc
sub
movs
mov
shr
pushf
jl
hlt
je
stos
cmp
xchg
clc
dec
out
fst
mov
aam
sub
sbb
mov
sub
lods
shl
sub
add
sub
and
adc
cmc
(bad)
push
or
gs
repz
mov
inc
scas
mov
pop
pop
mov
les
xlat
popa
fiadd
cmps
xchg
lahf
jnp
loopne
dec
les
cmp
fsubr
xchg
mov
(bad)
pushf
dec
mov
ins
adc
test
pop
xlat
or
adc
lods
in
dec
(bad)
push
loopne
(bad)
xor
sti
ret
mov
mov
sbb
jbe
dec
gs
xchg
sub
mov
adc
sar
cli
jno
pop
adc
mov
pop
jl
scas
cmc
loopne
jmp
mov
xchg
ja
ds
mov
scas
stos
xchg
push
jecxz
jb
pop
xchg
shl
fistp
push
rol
jne
sub
push
(bad)
cmp
aad
repnz
vmovhps
sbb
sub
inc
frstor
mov
imul
xchg
call
cmp
ffree
pop
inc
inc
xchg
xchg
std
push
xchg
push
loop
inc
mov
inc
aad
shl
das
(bad)
fnstcw
js
pushf
cmp
std
mov
jb
(bad)
arpl
xor
add
imul
inc
xchg
dec
inc
shr
rcl
lea
retf
rol
pop
jle
inc
adc
jg
inc
ss
shl
push
sub
addr16
push
sbb
sub
inc
(bad)
xchg
sahf
leave
into
pop
mov
jle
push
inc
jp
sahf
pop
mov
out
sbb
jp
arpl
push
(bad)
sbb
dec
ins
test
pop
pop
in
pop
gs
push
fwait
push
cmps
adc
mov
pop
fstp
js
fwait
lods
or
lea
cmps
cmp
js
jnp
loope
jbe
out
inc
sub
add
adc
les
test
es
xlat
test
popa
dec
dec
dec
stc
dec
ins
mov
movs
call
xor
and
fmul
or
cpuid
popa
test
push
push
retf
mov
cli
outs
not
ja
lahf
mov
jp
jne
out
dec
sti
aas
in
mov
icebp
mov
sar
ret
pop
(bad)
adc
(bad)
retf
dec
mov
mov
lds
xchg
test
retf
ds
cmps
fmul
pop
cwde
and
mov
xchg
pop
xchg
mov
lock
call
js
(bad)
sub
push
cmps
cdq
test
mov
mov
in
xor
fwait
and
int
xlat
inc
jbe
mov
int3
mov
imul
cdq
adc
cmp
adc
ja
fild
sahf
movs
jns
jge
mov
pop
adc
xchg
sub
iret
(bad)
das
push
std
lahf
aaa
fs
(bad)
mov
out
fmul
jge
mov
adc
scas
sub
stos
mov
sub
push
cmp
(bad)
mov
xchg
stos
fs
retf
pop
lds
pushf
ret
fisttp
aas
jg
jmp
cmps
lods
mov
fld
push
lea
enter
in
add
add
and
dec
sub
out
loop
repz
jnp
fcomp
sahf
inc
fidiv
cli
mov
dec
xor
ror
jle
cmp
scas
fist
scas
cmps
shl
push
push
(bad)
int3
out
xor
in
loope
push
sahf
push
xchg
xor
enter
xor
jnp
mov
xchg
in
std
aaa
push
pop
clc
dec
pop
add
neg
mov
lods
loop
rcl
xchg
aad
jmp
(bad)
and
ficomp
and
aaa
inc
add
mov
jns
mov
pop
fwait
sub
pop
sub
mov
jge
adc
hlt
lock
pop
mov
cmp
dec
jmp
pop
icebp
mov
cmps
jmp
push
mov
xchg
push
(bad)
jge
xchg
lods
sub
sbb
cld
push
push
cmps
pop
mov
cdq
dec
cdq
cwde
nop
xchg
jns
out
adc
movs
jecxz
sub
jl
cmp
push
cmp
jmp
cmps
pop
mov
fwait
hlt
push
out
inc
xor
call
test
mov
(bad)
test
in
xlat
test
sbb
ins
rcl
retf
sub
popf
(bad)
fwait
push
nop
xor
imul
sbb
or
cmp
(bad)
xor
in
mov
test
int3
jmp
pop
adc
dec
dec
xor
inc
cmp
sub
and
mov
mov
sub
sub
das
cmp
dec
or
imul
push
sub
and
mov
push
hlt
(bad)
ret
leave
ins
mov
dec
and
test
sbb
leave
in
outs
dec
imul
clc
dec
xchg
add
push
aad
mov
sbb
inc
lahf
ss
jmp
ret
xor
push
test
mov
add
fidivr
loopne
jmp
js
and
fbstp
test
fimul
repz
movs
shl
fwait
lock
jbe
adc
dec
movs
xor
popa
xchg
mov
dec
jno
sub
jge
or
mov
dec
hlt
data16
rol
retf
popf
clc
mov
adc
lods
pop
aad
jmp
cmp
inc
or
(bad)
pop
mov
mov
sub
out
out
cmp
xchg
adc
outs
and
clc
out
push
and
push
push
sbb
(bad)
call
push
shl
push
pop
xchg
dec
cs
ins
pop
fs
sbb
cwde
sbb
sbb
cwde
test
inc
fnstenv
adc
and
(bad)
fiadd
push
rcr
hlt
adc
jno
sub
push
nop
mov
imul
jmp
jmp
xchg
ds
jmp
dec
jbe
in
sbb
sub
hlt
or
xchg
push
in
jmp
jmp
pop
clc
rcr
ret
mov
mov
inc
dec
xchg
outs
nop
imul
je
dec
(bad)
mov
xchg
pusha
pop
or
xchg
stc
ja
sbb
icebp
cmp
stc
mov
inc
xor
loope
cmp
jno
cmps
in
int3
xor
jo
fcmove
dec
test
adc
push
xchg
aam
test
mov
pushf
cmps
icebp
bound
sbb
sbb
cld
xor
mov
cmc
dec
(bad)
xchg
fdivp
dec
add
test
xchg
aad
sub
fstp
jle
sti
pop
jg
sar
cmp
fdivp
xchg
cmps
sub
mov
push
pop
retf
aas
add
or
in
mov
vstmxcsr
mov
mov
jns
sub
pop
dec
pop
dec
shl
mov
sbb
shr
pop
pop
add
cmp
push
push
sar
stos
and
aaa
push
push
and
jno
iret
cmp
xchg
test
push
imul
sbb
jns
adc
jmp
into
in
lahf
fstp
call
aaa
dec
mov
je
sbb
test
push
mov
cwde
push
sar
(bad)
mov
inc
dec
pop
push
das
addr16
mov
rol
cmp
cmps
idiv
add
popf
int
addr16
retf
dec
ds
push
std
dec
jg
lods
mov
mov
sub
retf
sbb
sbb
xor
popa
or
pusha
and
dec
ret
add
and
outs
jae
cmps
sbb
cmps
cmp
jecxz
repnz
xchg
xchg
push
jbe
inc
dec
xchg
or
and
xlat
adc
sbb
jl
jo
pop
aad
mov
ins
loope
push
movs
xor
sti
mov
arpl
repnz
jns
sbb
aad
leave
inc
sub
jecxz
enter
in
sub
fadd
std
mov
test
jmp
mov
jge
mov
loop
es
dec
das
jb
or
movs
pop
clc
ja
push
jmp
mov
inc
inc
addr16
pop
fwait
pop
jmp
cmp
int
add
lahf
lds
jne
pop
sub
cld
enter
cmc
cs
dec
in
pop
mov
sahf
push
cmp
pop
jne
mov
test
pop
in
jmp
into
das
outs
mov
mov
cmp
popf
or
(bad)
push
mov
mov
lea
in
cmp
jmp
lea
pop
jno
retf
xor
call
lock
lahf
enter
mov
lock
scas
pop
jbe
in
out
cmp
lds
fs
mov
(bad)
mov
fistp
mov
push
cmps
add
fwait
or
addr16
mov
cdq
pop
jae
das
scas
dec
das
sub
movzx
inc
or
mov
std
outs
sahf
(bad)
repz
pushf
outs
shl
ins
out
jmp
xor
push
mov
arpl
or
and
adc
div
call
push
xchg
dec
inc
mov
aaa
xor
mov
inc
adc
or
jge
dec
fnstsw
pushf
pop
push
(bad)
mov
mov
fs
fidivr
push
fld
add
jle
mov
test
inc
mov
jecxz
daa
or
mov
xor
dec
dec
add
pushf
add
mov
sbb
cmp
adc
sub
pop
xor
enter
sub
mov
lds
xor
ror
fcom
push
out
mov
add
and
xor
loop
int
aas
sub
mov
leave
dec
(bad)
daa
push
lods
xor
ja
inc
sub
cmps
cld
xchg
mov
adc
and
push
dec
in
jmp
fwait
and
xor
out
movs
mov
xchg
pushf
jbe
in
adc
(bad)
jae
adc
mov
xchg
div
or
adc
add
fld
cwde
inc
and
or
std
popa
jne
jecxz
dec
shr
daa
and
mov
adc
mov
shl
and
ss
ret
je
pop
shl
test
fldenv
test
aad
fst
and
cmp
das
daa
and
xlat
mov
jbe
dec
and
arpl
(bad)
les
ins
test
cmp
jmp
sub
pusha
fwait
je
add
shl
daa
mov
xlat
js
and
sbb
add
fcom
or
dec
js
mov
nop
retf
jmp
cmp
adc
dec
daa
add
inc
inc
mov
movs
jne
inc
cmps
les
lea
mov
cmps
shl
and
outs
sub
xchg
and
xchg
adc
add
bound
fs
test
mov
xor
ss
das
or
stc
ins
gs
leave
retf
xchg
call
xchg
push
pop
rol
call
iret
fs
comiss
jne
in
ja
sbb
cmp
les
jecxz
cmp
xchg
mov
fild
ret
jmp
sbb
leave
inc
movs
xor
sbb
scas
addr16
imul
iret
cld
sbb
cmp
imul
xchg
jno
cld
pop
mov
arpl
jo
sub
cmps
xor
loope
je
jne
(bad)
out
jmp
hlt
jmp
movs
cdq
pop
jne
imul
jno
mov
cmp
mov
dec
aaa
inc
out
inc
sub
out
loop
cdq
mov
xor
lock
das
int3
enter
xchg
ror
pop
cmps
mov
and
fidiv
jecxz
retf
jns
movs
or
dec
cld
sbb
jnp
sub
scas
push
xchg
adc
lods
aaa
clc
jne
aad
sub
lock
shr
jmp
xchg
stos
pusha
sub
(bad)
imul
mov
fnsave
js
js
xor
xchg
xor
push
xchg
nop
inc
lods
push
mov
ins
and
cmp
repz
imul
ret
psubq
mov
jne
sti
xchg
aaa
aad
sub
enter
sub
retf
pop
out
push
sbb
lahf
in
xchg
jmp
imul
adc
leave
jno
jge
(bad)
add
imul
icebp
dec
xchg
push
ret
push
pushf
push
xchg
hlt
ret
fcomi
cmp
das
das
lock
fisttp
cmp
sbb
xchg
(bad)
cmp
mov
idiv
test
cld
dec
fwait
jnp
idiv
scas
je
add
push
jo
ins
lock
cs
xchg
out
push
xor
mov
sahf
hlt
(bad)
retf
pop
leave
pop
out
mov
pop
fisubr
cmp
cmps
mov
pop
das
iret
into
out
rcl
arpl
cmp
stos
cmp
les
jecxz
dec
jl
ins
push
adc
cmps
sbb
addr16
pop
inc
sbb
pop
repz
ins
inc
add
ds
cmp
xchg
push
cmps
and
out
in
loop
repz
sahf
pop
pop
call
ret
out
jae
xchg
cmp
aam
pop
mov
cmps
aad
mov
mov
mov
xchg
(bad)
movs
rcl
mov
rol
add
mov
outs
js
sti
xor
clc
push
out
mov
cld
push
sub
outs
adc
inc
cmps
push
or
sbb
loopne
pop
mov
scas
cdq
fucomp
dec
lods
retf
mov
sub
fimul
cmp
jo
jle
cmp
ret
and
in
mov
(bad)
cmps
scas
dec
jp
mov
das
mov
xchg
scas
push
loop
mov
shr
out
stc
cmps
(bad)
jae
xor
cdq
dec
pop
sbb
pop
sbb
xor
xchg
stos
scas
rcl
dec
mov
push
in
pop
daa
rcr
adc
(bad)
gs
sub
sub
hlt
outs
js
add
push
cmp
push
(bad)
in
jmp
stos
test
pop
cmps
cli
mov
outs
sub
pushf
pop
xchg
fcomi
dec
push
(bad)
dec
mov
push
retf
ins
dec
push
(bad)
cmp
outs
daa
pop
push
pop
sbb
jp
mov
xor
lods
inc
xchg
js
push
add
ret
mov
call
test
xor
rcl
or
xchg
test
cmp
in
jg
sub
call
(bad)
dec
push
outs
fwait
imul
xchg
xor
bound
imul
out
in
lods
cmp
push
out
pop
aam
repnz
imul
mov
pushf
stos
shr
std
and
and
or
sub
popa
xor
cmps
cmp
das
mov
js
repz
rol
inc
mov
pop
imul
ins
enter
sbb
push
sti
fstp
cmp
(bad)
outs
repnz
adc
cs
popf
mov
les
fs
cmps
sub
xchg
push
pop
push
lahf
xor
sub
pop
int3
inc
lock
and
lods
mov
pop
push
dec
call
cmp
mov
loop
stos
sbb
mov
ins
lahf
loop
add
jmp
mov
sub
arpl
mov
cmp
call
js
push
shr
test
xor
retf
into
enter
bound
sub
xchg
vphadduwq
scas
fadd
es
inc
jne
fs
mov
and
mov
inc
stos
(bad)
retf
cmp
cmps
addr16
dec
dec
outs
xor
xor
jle
sub
fdivr
push
into
lods
xchg
jecxz
mul
jo
in
mov
jno
cdq
jnp
sahf
out
dec
stc
mov
sbb
xchg
loop
int3
pop
shl
jo
pop
jmp
fdiv
push
sbb
out
mov
das
xor
in
ins
(bad)
xchg
inc
add
push
pop
add
add
or
sub
(bad)
call
adc
dec
pop
jge
(bad)
rol
jl
jmp
les
in
cld
mov
rol
push
pop
cmps
rcl
push
sahf
dec
retf
pushf
xchg
cwde
adc
push
fld
dec
and
xchg
mov
pop
(bad)
mov
mov
xchg
mov
xor
div
fist
add
push
sahf
test
cmp
cli
ss
daa
mov
scas
shl
ins
fistp
mov
int
scas
pop
xchg
dec
sub
outs
xor
push
retf
xchg
movs
sbb
repnz
into
popa
or
ins
(bad)
pop
out
cmp
sar
scas
jns
mov
lods
test
push
cwde
xchg
pop
push
or
adc
xchg
push
inc
fst
cmp
inc
push
push
and
push
test
inc
or
push
jecxz
cmp
ret
mov
gs
dec
into
shr
push
ret
sub
cmp
cmp
ins
mov
cmps
adc
xchg
(bad)
jae
cmp
sub
push
mov
ja
fimul
mov
push
jmp
jecxz
jmp
and
icebp
mov
pop
mov
dec
ret
fwait
loopne
mov
jmp
jne
sbb
loopne
jae
dec
test
scas
call
aam
stos
push
or
lahf
ficomp
inc
pop
js
cmp
int
movs
in
test
setge
or
imul
out
cmp
push
and
fidiv
sbb
lahf
push
imul
mov
inc
das
cmp
or
ss
movs
sbb
jae
dec
ds
and
cmp
popa
in
xor
push
mov
pop
int
in
inc
jp
push
pop
xor
fwait
jle
lods
xchg
movs
daa
imul
(bad)
out
jb
ret
lds
mov
jnp
dec
addr16
push
jp
dec
loop
out
push
test
xor
cdq
bound
ins
lods
jne
cmp
push
sub
jle
stc
xor
outs
adc
inc
dec
mov
xor
retf
cmps
imul
movs
sub
loopne
in
repnz
or
pushf
movs
mov
stc
fwait
and
outs
push
lods
hlt
leave
jmp
movs
xor
pop
fdivr
dec
push
scas
gs
adc
xor
imul
mov
adc
sahf
loopne
and
push
das
push
pop
cli
hlt
neg
sbb
mov
or
into
push
loopne
xchg
sbb
pop
mov
xchg
call
test
fcmovbe
and
xchg
loop
push
mov
(bad)
ds
cmp
pop
mov
xor
mov
jecxz
lahf
lods
mov
cmp
mov
stc
test
aaa
cmps
mov
ret
(bad)
sbb
inc
dec
test
inc
and
js
loope
push
in
(bad)
rcl
sub
push
in
lods
fcomp
pusha
add
movs
test
mov
push
cmps
mov
adc
ja
imul
dec
xor
pop
push
popf
pop
leave
push
pop
cdq
gs
add
neg
cmp
imul
mov
(bad)
lahf
fmul
push
scas
xchg
jno
cs
mov
ins
(bad)
mov
pop
or
mov
cli
dec
fidivr
jo
inc
loopne
pop
gs
sti
iret
inc
in
dec
jg
imul
cmp
or
dec
jno
(bad)
imul
sti
fs
fmul
popf
stc
sbb
repnz
pop
retf
dec
push
push
dec
jae
sub
ret
call
movs
xchg
bound
push
xchg
imul
push
fistp
xchg
or
jnp
(bad)
sar
dec
icebp
mov
ins
call
dec
push
adc
xchg
loop
shr
repz
cmp
fld
cli
xor
cmc
fdivr
mov
mov
popf
dec
movs
jg
jp
in
out
cmp
fdivr
and
int
arpl
aas
popf
xchg
jmp
push
push
mov
dec
cli
in
les
push
dec
outs
adc
sub
and
inc
aas
js
nop
and
adc
aas
pop
psubsw
fwait
(bad)
push
cmps
pop
and
(bad)
sbb
pop
shl
scas
popa
movs
mov
out
dec
pop
retf
jge
fld
push
xor
dec
and
sub
pop
sub
inc
dec
add
mov
push
sar
mov
mov
pop
shr
ss
ret
push
mov
cmp
nop
dec
jle
mov
std
in
dec
jecxz
xchg
pop
push
out
pop
push
test
jmp
push
leave
sbb
retf
dec
cdq
jo
xchg
retf
xchg
jno
and
sub
xchg
push
cli
xor
push
outs
scas
out
and
sub
push
fidiv
fild
lods
in
mov
out
les
mov
or
rcl
int3
sub
imul
inc
dec
and
mov
xlat
ret
xchg
in
fdivrp
add
mov
test
call
mov
pop
xchg
xor
push
push
mov
inc
(bad)
fsubp
sub
fcom
inc
mov
pop
inc
push
push
in
enter
pusha
add
out
adc
test
fmul
add
mov
inc
arpl
movs
or
lahf
mov
push
mov
and
aad
movs
popa
retf
js
mov
cmps
jne
xor
pop
xchg
call
movs
adc
jl
imul
mov
or
and
(bad)
mov
cmps
leave
imul
cmc
sub
pop
sub
sbb
pop
pusha
mov
call
addr16
cmps
into
cmp
sub
movs
ud2
aas
add
pop
and
pop
lds
js
scas
push
or
loop
mov
mov
dec
push
push
adc
cs
and
and
ds
(bad)
dec
jne
mov
jmp
movs
pop
xor
pop
movs
fisttp
pop
push
ret
sub
inc
mov
xor
and
test
pop
in
sbb
mov
mov
xchg
mov
scas
mov
aas
cs
stc
mov
jbe
pop
dec
(bad)
dec
outs
jmp
shr
sete
xchg
cli
repnz
inc
pop
out
push
scas
or
jge
ins
cdq
push
sub
mov
jb
xchg
and
ret
or
adc
jp
mov
cmc
imul
aam
mov
imul
sbb
loopne
jg
nop
xor
pushf
xor
sub
mov
xor
dec
mov
xlat
cmp
xor
xor
xor
push
jg
xchg
in
ins
lods
add
call
pop
(bad)
mov
dec
jne
add
inc
lods
test
pop
dec
push
cmps
xchg
fadd
cmps
xchg
data16
test
std
call
(bad)
pop
jne
outs
inc
sub
test
ret
mov
add
in
cmps
fsqrt
mov
xchg
inc
ins
call
jnp
xchg
mov
mov
outs
lods
sub
das
inc
stos
xchg
aas
cmc
fdiv
mov
adc
out
mov
jge
pop
push
scas
push
pop
stc
adc
and
es
mov
cmps
push
in
int
xlat
ficom
imul
outs
dec
aas
loopne
bound
std
movs
or
movs
repnz
out
jns
pusha
inc
in
mov
lock
cwde
dec
dec
sahf
mov
cld
inc
cmp
xlat
pop
fcomi
cmp
mov
mov
stos
adc
mov
inc
push
dec
js
js
mov
jl
in
jp
push
pop
mov
mov
inc
leave
mov
cmp
cli
xchg
movs
adc
xor
xor
js
jbe
mov
scas
mov
fcmove
movs
das
in
mov
jp
std
mov
ds
push
cmp
ret
repz
add
cmp
jo
sub
paddusb
pop
ja
mov
xchg
push
push
push
ficomp
aad
loop
or
repz
retf
test
sub
and
shl
sub
mov
(bad)
bound
or
outs
mov
loopne
jb
aam
repnz
sub
test
pop
lods
jne
out
aad
idiv
fdivr
lea
jmp
dec
pop
mov
xlat
cmp
lods
cmc
dec
mov
pop
and
fisub
or
jns
adc
jmp
xchg
ror
outs
pop
pushf
mov
mov
imul
lods
cmc
idiv
inc
adc
sbb
cs
jge
mov
cmp
mov
and
stos
xor
jmp
(bad)
rol
adc
retf
fisubr
xchg
repz
cmp
adc
or
aad
lock
lds
dec
mov
mov
sti
pop
sub
repz
inc
stos
repnz
aad
mov
in
(bad)
test
cmp
mov
das
fld
imul
sbb
test
xchg
mov
fdiv
inc
fwait
pop
push
jmp
out
lock
retf
cmp
(bad)
shl
outs
sahf
repz
jl
clc
loope
fisub
pop
push
or
mov
call
xor
push
inc
cmp
inc
(bad)
xor
std
sahf
in
dec
sub
(bad)
dec
adc
mov
sti
inc
iret
mov
mov
cmp
pop
adc
inc
adc
aas
jecxz
loop
cld
mov
mov
fidivr
in
mov
repnz
addr16
bound
ins
inc
clc
pop
das
mov
dec
pop
ja
pop
stc
jb
sbb
call
inc
test
jo
dec
inc
movntps
clc
(bad)
xchg
sbb
ins
push
xor
jge
sbb
outs
xchg
into
jns
frstor
das
pop
adc
(bad)
cmps
call
pop
popa
fnstcw
cmps
jmp
cmp
mov
xchg
xor
sub
push
adc
sbb
shl
mov
inc
mov
mov
sar
(bad)
loopne
jno
xchg
imul
xor
jg
lods
sub
out
les
pop
mov
scas
aam
adc
xchg
jne
(bad)
addr16
or
xchg
in
ror
test
mov
cmps
push
stos
mov
in
fistp
out
(bad)
daa
xor
push
and
mov
sub
cmp
fild
jmp
std
repz
jg
sub
add
icebp
inc
repnz
(bad)
xchg
stc
adc
jo
lds
test
inc
cwde
inc
jecxz
inc
cmps
daa
sbb
mov
push
outs
std
cmps
lahf
cli
jecxz
xchg
mov
jge
add
xchg
cli
pop
in
push
pop
sbb
(bad)
xchg
pop
push
neg
xchg
dec
popf
call
ret
rcl
push
outs
and
cmp
inc
lahf
test
dec
adc
pushf
les
test
les
jno
mov
in
(bad)
repz
add
(bad)
mov
rcl
test
or
push
push
add
retf
sub
xchg
clc
dec
ret
js
fsubr
retf
or
leave
add
scas
jge
mov
fstp
xchg
push
ror
in
xor
mov
adc
mov
xchg
mov
loop
cmp
aas
push
xor
daa
popa
fld
arpl
es
mov
lods
dec
xchg
mov
push
mov
cmc
or
jno
hlt
xchg
pusha
sahf
push
mov
pusha
pop
scas
movs
dec
ja
dec
pop
test
sbb
sbb
fs
xchg
js
ficomp
xchg
movs
imul
push
mov
xor
mov
pop
jl
xchg
jmp
inc
les
lds
jae
mov
sub
fisub
dec
pushf
mov
or
ins
and
push
enter
and
dec
mov
jae
jnp
mov
inc
addr16
ja
mov
fmul
mov
cmps
outs
add
inc
push
add
sar
dec
adc
cmps
(bad)
jns
pop
jmp
jns
inc
mov
dec
cmp
aad
add
cmp
(bad)
(bad)
loopne
neg
retf
mov
cdq
mov
rcl
les
and
clc
mov
(bad)
retf
stos
jno
cs
jae
into
and
dec
sub
mov
sub
cmp
dec
sar
(bad)
divps
adc
mov
rol
in
cmp
loopne
dec
je
mov
arpl
adc
out
int
mov
lock
and
movs
in
jno
push
adc
imul
bound
cmp
out
cmc
mov
adc
cmc
call
or
jp
fcmovne
repz
loope
fimul
jmp
(bad)
jle
pop
pop
int
xchg
(bad)
cmc
mov
push
cbw
lock
pusha
mov
(bad)
stos
xchg
mov
ror
dec
fcmovbe
xchg
nop
mov
cmps
cmp
sbb
in
pop
xchg
enter
add
in
jae
pop
mov
outs
dec
sub
cmp
dec
jmp
mov
push
cmp
movs
dec
cmp
dec
lock
pop
xchg
fld
cdq
shr
cmp
fst
mov
jmp
xor
int3
mov
adc
xchg
mov
add
adc
mov
call
orps
das
jno
mov
and
lods
push
mov
mov
aaa
sub
mov
das
sub
lahf
pop
ret
ins
xor
les
loopne
inc
mov
aas
pop
ret
cld
xchg
call
test
and
fst
outs
loop
xchg
jmp
mov
push
mov
push
clc
(bad)
movs
lods
cmc
add
mov
cmp
fs
(bad)
pop
adc
(bad)
out
pop
repz
xchg
xchg
stc
mov
loopne
dec
jne
pop
sub
mov
inc
mov
fwait
pop
dec
dec
inc
push
cli
pop
repnz
pop
stc
xchg
push
rcl
cmp
stos
retf
pop
pop
add
push
mov
push
imul
out
jle
loop
in
loope
repnz
pop
popf
lahf
lahf
dec
mov
outs
inc
(bad)
sub
out
aad
adc
sbb
xchg
lahf
sub
leave
ror
(bad)
(bad)
scas
push
jge
pushf
aad
fst
cmp
pop
pop
aad
not
aas
test
mov
(bad)
aad
lea
outs
or
ret
xchg
jmp
loope
jns
or
mov
inc
jae
ds
jge
inc
addr16
jns
gs
adc
xor
jo
dec
cdq
jae
aas
dec
rcl
jbe
hlt
stc
sahf
jo
ja
imul
mul
xchg
stos
pop
dec
cmp
les
jns
xor
aas
dec
inc
add
dec
xchg
pop
push
arpl
mov
jno
dec
xchg
hlt
xor
mov
xchg
jno
lahf
aad
rcr
cmps
mov
push
jecxz
sbb
frstor
(bad)
pushf
ins
rol
sbb
push
xchg
xor
dec
ins
xor
popf
dec
mov
aam
arpl
cwde
gs
jecxz
and
test
mov
fild
jbe
pop
xchg
jl
ret
adc
pop
xchg
xchg
xchg
ins
in
clc
mov
(bad)
je
push
hlt
or
xor
aam
es
jecxz
mov
loope
inc
gs
xchg
dec
pop
pusha
and
mov
xchg
fwait
loopne
gs
xchg
jmp
xor
xor
mov
lea
xchg
jle
in
repnz
lock
jge
movs
out
jmp
xor
movs
or
cmp
sahf
std
mov
es
imul
mov
cdq
push
jb
(bad)
cmps
fidivr
jne
sbb
ds
(bad)
cmps
aaa
mov
push
and
mov
imul
loope
outs
retf
out
sbb
ds
cmps
aaa
data16
pop
mov
dec
mov
fcom
or
cli
rol
int
movs
xchg
mov
mov
imul
mov
xchg
test
push
cmp
cs
jne
jb
scas
lods
push
xchg
cld
gs
inc
test
in
fldenv
cmp
addr16
push
scas
clc
cmps
mov
cmp
inc
push
cmp
jle
das
inc
lahf
imul
cdq
aad
retf
xchg
sub
push
cmp
pop
push
jbe
dec
in
sbb
xchg
xor
mov
int3
jmp
addr16
cmp
xchg
(bad)
loope
ret
in
jmp
test
xchg
jb
pop
pop
shl
mov
and
mov
sar
push
aam
pop
push
nop
dec
adc
dec
call
cwde
mov
mov
adc
fidiv
imul
cmps
mov
sbb
movs
test
fmulp
stos
mov
stc
neg
leave
(bad)
mov
sub
dec
lea
dec
xchg
adc
nop
jp
and
xor
iret
xlat
lods
dec
fs
xor
mov
jge
les
fwait
sbb
xchg
mov
retf
jo
das
clc
ret
add
mov
shr
iret
push
mov
inc
pushf
stos
int3
enter
loopne
sub
(bad)
push
fcomp
pxor
popf
xlat
mov
stc
fdiv
mov
sub
mov
xlat
inc
lds
call
aad
fsubrp
iret
dec
and
and
imul
clc
mov
cmps
mov
xchg
mov
inc
retf
sub
icebp
mov
xchg
loope
rcl
jmp
mov
xor
fistp
jp
iret
xor
popf
pop
cdq
leave
jmp
icebp
mov
cmp
lods
push
(bad)
test
inc
fdiv
lock
not
div
in
into
sbb
mov
test
arpl
dec
leave
ret
aad
(bad)
dec
(bad)
repnz
jno
xchg
push
cmps
aaa
repz
sub
in
inc
jnp
add
sti
inc
mov
xor
lods
add
pop
jnp
div
sub
int
test
or
clc
ins
mov
jae
js
jo
jbe
jp
das
les
scas
mov
(bad)
imul
fucom
jbe
pop
mov
aaa
xchg
ins
add
sbb
jl
sub
adc
popf
iret
test
lds
call
outs
jbe
or
jae
scas
movs
lock
inc
dec
(bad)
cmps
mov
sub
repz
jo
les
lfs
mov
imul
fidiv
(bad)
loope
or
test
retf
popa
out
fnstsw
sbb
(bad)
push
cwde
ror
lock
scas
push
jp
push
mov
xor
popa
mov
xor
and
cmp
in
and
xor
ins
xchg
dec
repnz
sub
add
and
pop
dec
out
call
sub
add
sub
out
movs
mov
or
in
mov
push
(bad)
xor
add
mov
add
push
add
repz
gs
adc
adc
mov
retf
inc
dec
mov
test
mov
add
pop
jne
jnp
inc
pop
iret
pop
jl
inc
fwait
popf
cdq
mov
mov
jnp
pop
push
mov
ficom
add
jecxz
mov
mov
test
xchg
sub
adc
inc
mov
mov
push
sti
add
cmp
(bad)
jge
cmp
pop
xor
in
cs
sbb
push
xchg
out
cmp
ret
sbb
inc
je
std
test
add
aam
and
shl
xor
test
mov
inc
mov
ins
rcr
xchg
push
(bad)
xchg
inc
or
iret
sub
clc
or
mov
jmp
imul
mov
(bad)
in
adc
jb
repnz
not
add
mov
add
push
jbe
add
push
jmp
jle
sti
test
(bad)
sub
jp
hlt
jge
ds
iret
fadd
inc
stos
add
clc
loop
ds
xchg
sbb
sbb
test
jle
and
and
mov
shr
push
and
outs
(bad)
bound
rcl
dec
push
outs
push
mov
push
and
int3
ins
and
cmp
inc
cmp
leave
(bad)
jae
mov
and
cmp
jmp
push
es
jns
adc
add
in
or
jp
sbb
sub
inc
nop
adc
dec
cmp
push
les
ror
out
or
aad
mov
xchg
bound
cs
ret
pop
jnp
shr
sub
fistp
mov
mov
xchg
mov
push
aad
push
out
mov
xchg
xchg
push
inc
and
in
jmp
loopne
xchg
sbb
mov
ins
mov
cmps
or
pop
aaa
bound
and
cmp
and
jle
jge
mov
mov
ins
scas
mov
xchg
cmp
ficomp
dec
push
lods
mov
icebp
fist
gs
fcmovu
(bad)
cwde
(bad)
adc
scas
pop
lock
mov
dec
shl
aam
push
retf
and
loope
push
int3
jae
dec
push
jmp
fcom
push
fld
and
scas
lock
adc
mov
pop
(bad)
mov
daa
dec
imul
xor
jno
fild
or
and
in
and
ss
shl
and
mov
test
and
mov
add
mov
cwde
or
push
in
dec
(bad)
adc
nop
xor
mov
jne
lods
and
pusha
jo
and
dec
jmp
jecxz
push
xchg
mov
adc
adc
or
data16
dec
pusha
in
jbe
(bad)
jmp
xchg
and
cmp
push
int3
daa
add
outs
stc
mov
dec
cmp
dec
mov
fs
jecxz
mov
jmp
push
dec
and
mov
adc
cmp
cmc
popf
mov
(bad)
imul
test
jbe
sbb
shl
fimul
sub
sub
iret
enter
dec
popa
shr
jae
jge
lods
push
hlt
sar
lods
fnstcw
scas
mov
div
pop
lahf
popf
popf
jne
jg
xchg
outs
popa
out
sbb
sbb
add
(bad)
push
retf
jne
sbb
mov
mov
push
mov
lds
gs
(bad)
push
mov
mov
test
fstp
outs
jge
jle
in
mov
xlat
sub
icebp
pop
jno
xchg
add
push
lods
cmps
int
jle
mov
dec
retf
dec
cwde
repnz
imul
mov
retf
lock
call
rol
sahf
sti
jmp
mov
cmp
stos
push
xchg
pop
stos
xchg
mov
fcmove
xchg
mov
mov
or
or
les
ficom
cmp
out
dec
add
mov
popf
inc
loop
pop
sbb
jb
cdq
xchg
adc
push
repz
jg
scas
scas
outs
popf
adc
jo
call
mov
cmp
into
push
icebp
or
pop
push
jmp
jo
stos
xchg
je
mov
mov
in
out
fs
cdq
and
mov
cmp
je
stos
lock
scas
in
ficomp
inc
push
mov
imul
push
push
hlt
mov
push
imul
(bad)
jno
mov
dec
jno
ficomp
xlat
out
mov
sub
ret
movs
aad
cmps
and
call
mov
gs
and
jns
add
lods
arpl
pop
cdq
iret
adc
mov
loop
imul
pop
in
sbb
(bad)
adc
repz
cmp
scas
test
cs
in
mov
bnd
xchg
popf
push
pop
jge
mov
gs
fcomp
inc
pop
mov
mov
cmp
lock
scas
mov
scas
imul
pop
dec
enter
gs
cmp
jecxz
(bad)
lock
imul
cmp
mov
push
mov
not
push
and
dec
aam
enter
cmp
mov
mov
sbb
cmp
mov
in
mov
cmps
adc
adc
fucomip
int3
repz
scas
pop
out
retf
sti
mov
cmp
sbb
mov
lahf
mov
dec
mov
fisttp
push
add
and
adc
je
jmp
ror
jo
call
sub
mov
scas
shl
mov
mov
leave
retf
push
push
jp
jl
mov
iret
pop
imul
(bad)
lods
test
jmp
xchg
cmps
retf
lahf
es
mov
daa
and
sub
pop
imul
fsubr
dec
cmp
add
sbb
sbb
(bad)
aad
(bad)
mov
stos
dec
fst
fcmovnb
addr16
ret
push
jne
inc
mov
jmp
popf
aad
mov
push
fld
ret
dec
xchg
test
cmc
adc
or
mov
dec
sbb
inc
inc
(bad)
dec
(bad)
sub
push
sbb
dec
mov
xchg
dec
ds
and
lods
push
or
test
inc
jmp
jl
mov
test
cwde
scas
pop
out
jle
cdq
popf
rcl
out
pop
setb
sbb
cmp
adc
dec
jno
or
test
or
push
fldcw
mov
sbb
cs
fimul
retf
ret
adc
test
test
sub
and
jns
sub
pop
push
mov
cmp
xchg
jg
xchg
mov
stc
(bad)
adc
jmp
jne
pop
fidivr
sti
xor
push
call
test
stos
or
ins
(bad)
push
scas
(bad)
ss
ficom
lahf
push
retf
sub
inc
inc
mov
test
mov
inc
xor
out
pop
popf
xlat
mov
cli
jae
mov
repnz
(bad)
popa
dec
mov
jl
push
inc
mov
push
xor
aam
fidiv
xchg
out
jmp
movs
jmp
int3
mov
retf
test
or
pop
adc
daa
jecxz
rol
bound
jae
inc
outs
das
leave
repz
pop
aas
jge
stos
popa
test
cli
clc
cwde
fwait
pop
cmp
imul
pop
pop
add
jb
and
push
jmp
inc
(bad)
cmp
(bad)
retf
xor
bound
sti
int
fisttp
inc
dec
sub
and
jbe
xchg
movs
mov
movs
jmp
lods
cmp
popf
add
pop
xchg
cmc
test
jb
jge
jae
jns
and
iret
cdq
mov
ds
push
jp
hlt
mov
inc
jmp
nop
scas
js
jle
cmp
(bad)
in
(bad)
bnd
sub
leave
movs
shr
dec
rcl
sbb
pop
lea
cli
inc
mov
inc
mov
adc
pusha
xchg
test
pop
icebp
adc
mov
inc
mov
imul
sar
and
sti
int3
ficomp
mov
sbb
arpl
cwde
xchg
jge
and
sub
stc
(bad)
or
jle
jge
xchg
imul
imul
push
mov
jp
retf
push
mov
jmp
jmp
xchg
push
mov
mov
in
sbb
mov
mov
xor
cld
cs
adc
push
call
pop
fadd
or
and
add
or
mov
clc
xor
icebp
movs
xchg
lea
out
push
ss
or
cmc
pop
fstp
jecxz
pushf
push
cmps
adc
pop
jbe
sahf
push
movs
gs
or
jno
mov
mov
lds
out
and
test
mov
mov
mov
ja
ss
mov
dec
dec
push
into
push
out
mov
pop
inc
cmp
stos
test
adc
js
arpl
mov
jmp
aad
fbstp
pop
es
stos
adc
xor
mov
repz
xor
out
pop
sbb
pop
sbb
jg
in
fcmovnu
push
push
xchg
mov
jg
stc
sti
or
movs
leave
int3
pop
in
xor
inc
mov
or
test
push
adc
test
inc
in
mov
push
loope
mov
mov
(bad)
jl
gs
cmc
mov
push
arpl
in
xchg
mov
cmp
hlt
dec
lods
les
fwait
retf
xchg
push
dec
dec
call
dec
pop
int3
pushf
xor
sbb
pop
(bad)
or
cmc
mov
add
stos
xor
mov
mov
pop
pop
adc
cs
call
jmp
imul
loopne
add
repnz
fcomi
pop
outs
out
push
repz
lods
retf
daa
shr
cmps
cdq
xchg
jg
cli
inc
mov
aad
push
test
das
pop
push
js
cdq
inc
cs
lds
xor
retf
jns
and
or
mov
sar
cmp
daa
and
pop
add
into
pop
sub
pop
xchg
mov
dec
pop
and
jb
retf
ss
xchg
cmps
fbld
nop
ror
dec
mov
inc
mov
mov
rol
movs
cli
pop
stos
lock
push
mov
fucomp
jnp
retf
xlat
pop
cs
or
or
pop
js
(bad)
mov
push
movs
mov
jb
sub
mov
push
repz
ret
mov
es
pushf
test
out
in
mov
mov
sti
and
mov
jmp
cmp
xchg
mov
jle
imul
cmp
and
cmc
xor
push
mov
adc
push
in
inc
and
cmc
and
and
inc
adc
sub
cmp
sub
push
int
jae
je
lods
repz
xchg
dec
fsubr
adc
in
repz
push
inc
dec
push
lock
push
and
mov
mov
cmps
mov
lods
mov
adc
xchg
dec
mov
fwait
pusha
sub
mov
mov
or
sbb
sahf
stos
xor
xor
fistp
retf
fsubr
movs
inc
adc
pop
stos
icebp
repz
je
push
test
sub
in
dec
int
(bad)
shl
shl
or
(bad)
lods
xchg
shr
sbb
mov
fstp
xor
repnz
stos
rcr
(bad)
fmul
adc
in
mov
add
sub
mov
push
hlt
jno
mov
mov
test
pop
xchg
aad
cli
cmps
icebp
in
into
sbb
popf
jle
jne
xchg
mov
mov
popf
mov
iret
mov
fisttp
gs
xchg
adc
sbb
ficomp
sub
(bad)
dec
push
add
loop
dec
popf
mov
xchg
fmulp
(bad)
pop
pop
xchg
push
int3
sub
ficom
stos
pop
sub
jmp
push
int
pop
cld
sub
stos
fimul
pop
xchg
cmc
mov
and
mov
data16
and
pop
rcl
xchg
adc
test
inc
inc
mov
xor
lea
jge
outs
mov
ins
mov
jmp
imul
jne
fidiv
mov
push
fstp
cld
hlt
jmp
ja
jmp
stos
mov
dec
lahf
ins
jb
lea
jmp
add
in
gs
pushf
jne
mov
fnstsw
sub
lea
mov
mov
xor
jp
dec
sbb
sbb
std
push
xchg
call
cmp
pop
mov
mov
dec
mov
jecxz
push
mov
adc
pusha
js
adc
push
mov
dec
lds
bound
lods
cmps
pusha
pop
mov
xor
xchg
int3
(bad)
sbb
rcl
push
rcl
mov
ss
retf
and
outs
fdivp
mov
sbb
xlat
icebp
daa
dec
aaa
loope
ins
das
jb
fimul
mov
(bad)
jmp
or
push
mov
jmp
jl
inc
clc
cld
dec
inc
push
in
add
int
xchg
popa
mov
xchg
aaa
cmp
add
sar
test
lea
inc
popa
sbb
retf
sbb
dec
and
(bad)
pushf
and
stos
adc
mov
or
mov
fisttp
int3
or
lods
(bad)
aad
movs
pop
dec
xor
addr16
(bad)
fcomp
or
imul
fs
enter
fwait
jns
push
fadd
cmp
xchg
int3
pop
jne
sub
test
pushf
lahf
mov
lock
pop
add
sbb
push
call
mov
pop
dec
ds
mov
in
lods
(bad)
cli
in
xchg
jle
jge
cdq
mov
(bad)
mov
in
imul
mov
jnp
adc
je
hlt
pop
jns
loop
cwde
mov
stos
mov
pop
sbb
xor
call
mov
mov
pop
push
xor
dec
mov
outs
test
jae
scas
stos
dec
(bad)
and
imul
ret
call
xor
movs
test
out
add
dec
xor
cmp
movs
fldl2t
(bad)
xchg
pop
xchg
xchg
mov
cmps
in
std
(bad)
jbe
jl
stos
(bad)
adc
std
sbb
sar
fnstcw
aam
jns
in
mov
xchg
jg
das
jbe
test
ins
retf
das
xor
adc
imul
add
sbb
sbb
mov
mov
pop
cmp
and
mov
arpl
arpl
retf
mov
push
dec
int
cli
(bad)
iret
xchg
cmps
pop
sub
test
xchg
enter
ja
xchg
jno
mov
out
pop
xor
adc
mov
xor
mov
xchg
ins
movs
and
fadd
popf
jecxz
lods
fldenv
dec
out
scas
pop
popf
loope
sub
shl
mov
push
shl
pop
repz
dec
xchg
dec
outs
pop
loope
jge
mov
sub
mov
fsub
test
inc
xchg
inc
xor
inc
xchg
inc
or
js
into
and
sar
psubsb
xchg
cmp
jne
pop
cmp
cmp
dec
mov
mov
sub
scas
gs
sub
pop
jne
retf
dec
push
cmps
and
leave
ja
pop
fsub
arpl
test
jnp
inc
aam
push
test
fist
(bad)
(bad)
sbb
test
jne
dec
xor
movs
jmp
adc
jnp
stos
cwde
jno
add
std
xchg
cmp
test
adc
repz
mov
ss
shl
inc
hlt
mov
inc
cmps
jmp
mov
sbb
test
loop
add
sub
sahf
std
pop
iret
sar
in
dec
cmp
xchg
cmps
mov
mov
inc
gs
dec
cmp
mov
ins
aas
pushf
xchg
je
add
push
pop
cli
push
inc
les
popa
sahf
cmp
mov
test
sub
rcl
add
in
xchg
mov
sbb
push
adc
and
xchg
int3
in
pushf
ret
push
cdq
add
pusha
int3
sub
jmp
fnsave
jmp
(bad)
in
movs
mov
aad
test
inc
xchg
inc
push
in
mov
dec
mov
and
jno
add
xchg
jae
push
popa
sub
xor
xchg
loope
pop
cld
adc
les
xchg
pop
pop
dec
push
popa
clc
mov
fwait
addr16
test
xchg
jbe
outs
or
adc
pop
push
iret
cwde
push
scas
push
mov
dec
or
dec
pop
(bad)
push
scas
test
adc
cmp
scas
fstp
sub
mov
jb
(bad)
cmp
out
jg
jl
mov
mov
jmp
popf
sub
daa
cmp
jmp
repz
neg
lock
stos
mov
in
movs
xor
shr
test
and
stos
bound
jno
nop
loop
test
fist
cmp
es
or
movs
or
push
dec
mov
sub
das
mov
cmp
out
out
xlat
mov
int3
daa
sub
sbb
jmp
ffree
pop
mov
fwait
push
out
adc
ins
(bad)
je
jmp
jge
jl
xchg
aaa
mov
mov
mov
outs
mov
nop
mul
mov
mov
int3
mov
push
repz
xlat
xlat
stos
pushf
in
sti
mov
push
(bad)
ror
mov
rcr
sahf
fwait
dec
sub
push
xchg
in
cmc
jmp
cmc
mov
push
ret
ds
test
push
mov
in
mov
cdq
cmps
push
push
cmps
mov
or
cmps
cmps
dec
imul
sub
mov
xor
xchg
(bad)
scas
jmp
sbb
and
fimul
pop
jl
jl
sbb
popf
out
ficomp
cld
mov
(bad)
pop
cmp
mov
lock
xchg
mov
push
rol
pop
adc
cmps
push
xchg
xchg
imul
dec
popa
xchg
mov
and
jne
lahf
push
inc
(bad)
cmp
fisubr
loop
js
pop
cmps
inc
cdq
mov
mov
pop
inc
in
es
dec
adc
dec
pop
les
xor
inc
xor
inc
bound
rcl
push
xchg
or
ins
xchg
xor
adc
dec
mov
lahf
pop
in
sub
add
movs
add
xor
jmp
pusha
daa
mov
iret
mov
push
dec
cmp
out
mov
out
(bad)
shl
dec
xchg
push
(bad)
out
dec
in
out
ins
in
cld
ins
mov
inc
or
adc
lea
mov
inc
in
xchg
mov
sbb
dec
jecxz
fist
test
mov
scas
push
lock
loopne
inc
lea
mov
repnz
mov
popf
sbb
cld
xchg
dec
out
data16
dec
(bad)
jne
pop
xchg
imul
push
or
into
inc
cmp
pop
iret
jno
cmp
aas
out
push
lahf
inc
jmp
outs
out
dec
mov
mov
add
mov
dec
fcmove
icebp
test
out
sti
sar
push
jb
call
dec
jmp
(bad)
cmps
ror
dec
xor
sub
xor
ss
(bad)
shl
dec
push
(bad)
movs
or
movs
ret
jnp
pop
push
shl
push
adc
or
fdiv
push
lea
aam
inc
sar
test
int3
popf
push
mov
push
mov
fcom
jns
adc
aam
lods
mov
sub
ss
retf
cmc
ins
xchg
push
mov
dec
adc
jmp
call
dec
repz
xor
js
pop
into
push
jne
aad
dec
repz
push
out
jle
test
sbb
push
(bad)
jnp
mov
je
mov
xor
mov
cwde
sbb
shl
jecxz
add
stc
push
int
loope
scas
ffree
out
imul
aas
movs
and
jbe
test
addr16
sub
fmulp
stos
jge
cmp
enter
jmp
mov
(bad)
fcmovnu
pop
and
dec
fild
lahf
xor
ret
cmps
mov
test
dec
mov
mov
(bad)
cmp
xchg
dec
and
xchg
es
push
jbe
sbb
sub
mov
addr16
pop
cmp
idiv
xchg
cmp
jp
mov
pop
xor
dec
lahf
push
jmp
outs
dec
mov
(bad)
sar
xor
cwde
cmp
xchg
ins
xor
xchg
xchg
jle
fnsetpm(287
jge
or
mov
stos
mov
and
inc
sub
adc
(bad)
(bad)
clc
xchg
mov
fstp
jle
loopne
rcr
ficom
(bad)
in
mov
xchg
fistp
fidiv
cmp
mov
ffreep
fcomi
data16
xchg
push
lea
jmp
push
or
sub
(bad)
scas
jae
cmps
jno
sbb
jmp
repnz
mov
cmp
sbb
ins
fst
xchg
push
movs
push
xchg
cwde
xchg
push
mov
cmp
out
push
pop
loope
stos
push
mov
or
sub
push
push
cmp
xchg
push
in
xchg
inc
lahf
cmps
mov
fbstp
mov
rol
test
jmp
add
mov
mov
in
cmps
adc
xor
ret
(bad)
dec
dec
fld
std
xchg
and
or
gs
in
mov
ja
push
inc
pop
out
test
inc
retf
aam
xor
pop
shr
retf
hlt
mov
shr
lods
sti
sbb
jns
outs
xor
dec
ret
lea
dec
sub
ja
pop
sbb
jbe
dec
pop
jb
sahf
stos
das
sub
ret
arpl
mov
mov
lahf
sub
mov
int
mov
mov
dec
mov
sub
ffree
dec
pushf
lods
dec
cld
vmwrite
pop
les
push
jl
sub
and
loopne
cwde
ja
cmc
mov
cli
clc
cmp
xchg
into
jb
fst
mov
inc
pop
and
jge
mov
fidivr
outs
mov
es
sub
dec
inc
popa
aas
(bad)
in
add
sbb
xchg
inc
in
add
mov
cdq
dec
push
scas
cld
mov
bound
jp
bnd
mov
enter
retf
into
push
mov
mov
ror
mov
push
ds
enter
int3
retf
xor
in
add
or
mov
stos
in
cdq
jno
mov
ins
ficomp
retf
rcl
lea
pop
ins
test
outs
mov
(bad)
popf
leave
out
mov
mov
mov
clc
cs
outs
imul
retf
mov
or
push
shl
movs
data16
cli
or
fcomi
sbb
inc
ja
int3
int3
push
dec
fs
fs
std
test
jae
xchg
sbb
fistp
outs
imul
pusha
xor
cmp
mov
pop
sbb
pop
dec
daa
sub
or
and
inc
lds
inc
pushf
mov
jbe
cmp
jns
cmp
pop
and
cmp
xchg
in
std
repz
jp
(bad)
adc
cmp
jbe
in
out
imul
(bad)
jecxz
out
out
movs
dec
push
pop
pop
movs
mov
ins
xchg
or
or
(bad)
ror
iret
xchg
jb
xor
sub
and
or
adc
or
outs
adc
sti
popf
mov
cdq
bound
jmp
mov
fcmovnb
stc
sub
call
dec
and
fucomi
div
push
aad
out
pop
stc
(bad)
sbb
xor
pop
push
mov
or
push
and
push
les
sahf
ins
cmc
sub
aaa
dec
(bad)
hlt
mov
pop
pop
mov
adc
pop
out
inc
sbb
ret
mov
mov
adc
mov
cwde
data16
bound
sub
out
lahf
std
loop
sbb
repz
sub
dec
mov
dec
mov
push
inc
icebp
cmp
fistp
sub
jecxz
mov
ss
int
ffree
jle
sti
retf
xor
idiv
mov
ss
in
out
test
test
mov
xchg
sub
push
dec
cmp
(bad)
(bad)
push
adc
pop
aas
(bad)
jmp
cmc
mov
std
or
jg
hlt
jg
leave
stc
js
pushf
cmp
cmps
and
inc
int3
cmp
pop
das
mov
pop
sbb
call
pop
push
xchg
sbb
dec
xor
xor
push
inc
imul
mov
sub
sbb
rcpss
outs
or
jp
js
lds
mov
aaa
cmps
cmp
sub
and
push
data16
dec
or
push
call
push
push
or
ds
test
mov
stos
inc
xor
lods
adc
push
add
pop
push
retf
mov
shr
dec
lahf
dec
ror
outs
stos
mov
js
icebp
or
jle
jmp
outs
mov
stos
lods
ss
mov
adc
cmps
int3
mov
inc
mov
call
cdq
out
sub
sbb
lahf
lds
sub
in
rol
(bad)
dec
mov
mov
(bad)
aad
jle
xchg
xor
xor
ss
movs
ins
fstp
cmc
push
(bad)
popf
aaa
mov
inc
popf
fnstcw
aaa
push
jge
push
sub
(bad)
fs
xor
jmp
unpckhps
(bad)
jl
xchg
int3
cli
and
mov
scas
loope
clc
sub
aam
in
mov
push
ins
cmp
fimul
into
adc
mov
imul
sbb
dec
cs
outs
push
jge
mov
mov
add
lahf
mov
jmp
mov
jnp
lods
lea
aaa
movs
dec
outs
jp
mov
shl
xchg
out
orps
add
adc
stc
test
sti
test
or
cmp
jg
aas
cmp
in
jmp
mov
dec
in
cmp
dec
(bad)
adc
adc
push
inc
dec
sbb
daa
cld
and
or
stc
retf
cdq
lods
sub
mov
aas
daa
pop
(bad)
push
jecxz
jg
loopne
sahf
cmps
retf
push
pop
add
xor
retf
setl
inc
fdivrp
mov
scas
call
mov
sub
lahf
xor
push
into
nop
jbe
dec
dec
dec
fist
loop
dec
mov
xchg
push
dec
imul
shl
scas
ret
lds
mov
mov
stos
jg
push
push
ret
daa
stos
ficom
pop
fcmovu
and
push
jno
repnz
test
std
rcl
mov
push
jge
addr16
add
and
xchg
cmps
push
icebp
mov
cwde
inc
lods
jge
scas
pop
push
mov
cmp
mov
inc
in
sub
repnz
and
adc
mov
push
cmc
add
inc
retf
dec
mul
xchg
and
call
push
and
shl
loopne
xchg
addr16
aam
xchg
mov
movs
nop
nop
aaa
cmp
mov
pop
scas
shr
jns
push
outs
dec
aam
xor
xchg
pop
scas
xor
xchg
test
std
ret
cmps
scas
ss
repz
mov
pop
mov
xlat
rcr
mov
inc
xchg
mov
push
xor
inc
les
sti
inc
pop
gs
push
push
push
add
xor
stc
mov
sbb
adc
imul
jle
jmp
mov
dec
fistp
(bad)
frstor
int3
stos
xchg
loope
xor
dec
js
or
push
ror
(bad)
test
push
pop
push
push
out
xor
mov
add
test
ror
ins
rcr
mov
in
inc
mov
retf
push
movs
clc
jbe
pop
lods
dec
xchg
repz
jne
lea
cdq
cdq
inc
and
and
es
rol
ds
loope
jae
sti
gs
icebp
mov
inc
mov
pop
stos
loope
aaa
cld
ror
sbb
repz
sbb
loopne
scas
imul
sub
retf
dec
call
pop
imul
xor
xchg
cmps
jle
rol
les
xor
lea
or
mov
fisttp
data16
xchg
gs
loope
pop
push
sbb
cmp
sbb
or
and
fld
cmp
popf
mov
sub
cmc
cmp
lahf
imul
out
sub
jmp
fdiv
push
push
jo
hlt
pop
sbb
popf
arpl
ja
lea
mov
repz
add
lea
sbb
lds
mov
pop
ins
mov
jbe
xchg
inc
movs
dec
push
in
jmp
sti
sub
xchg
adc
adc
ret
pusha
(bad)
movs
(bad)
loopne
jg
enter
imul
jmp
xchg
mov
xor
cmp
(bad)
push
xchg
xchg
shr
(bad)
inc
das
popa
jmp
jbe
(bad)
xchg
jmp
adc
or
(bad)
adc
push
mov
pushf
scas
vpshaq
test
lahf
xor
xchg
cmp
fsubr
ins
stc
test
xchg
fldcw
lock
cmc
cmp
(bad)
mov
pop
movs
fist
pop
movs
clc
mov
push
ds
sub
push
out
dec
int3
aad
dec
push
sub
std
or
lods
cmps
sub
sahf
pusha
adc
repz
mov
in
add
fldln2
xchg
mov
div
pop
ret
repnz
stos
idiv
mov
ja
push
and
and
idiv
loop
loope
xor
pop
push
mov
xchg
jo
in
sub
push
cmps
rcl
fcom
and
and
and
nop
mov
div
call
push
je
js
shl
repz
es
push
pop
sbb
push
jge
jno
outs
scas
loopne
sbb
in
retf
pop
lock
mov
dec
jno
jmp
push
ud1
sub
(bad)
movs
test
test
lea
shr
mov
inc
scas
and
stos
dec
ret
lods
jmp
test
lahf
test
idiv
push
dec
rcr
outs
xor
mov
jmp
push
xchg
xchg
adc
dec
call
xchg
jle
push
loopne
cmp
xchg
mov
out
mov
mov
aad
movs
loopne
jmp
mov
retf
jle
mov
push
mov
stos
das
dec
push
adc
mov
ins
dec
mov
cmp
cmps
xchg
mov
imul
jl
pop
and
sahf
outs
test
lea
inc
lahf
jns
cmp
dec
push
push
aad
mov
lods
shl
fdiv
push
mov
in
push
lea
mov
retf
push
(bad)
lock
scas
xor
and
or
(bad)
jmp
int
xchg
jg
xor
and
lahf
cmc
pop
dec
(bad)
in
adc
mov
cwde
imul
pop
push
retf
icebp
push
(bad)
loopne
pop
jge
mov
dec
into
jns
outs
mov
jb
sbb
iret
dec
in
adc
add
or
pop
push
and
xlat
adc
rcl
test
push
pop
add
sbb
mov
jl
clc
inc
sub
test
sub
cmp
lahf
sbb
jae
ss
ret
mov
fs
pushf
(bad)
mov
dec
sub
jo
cmp
fdiv
mov
xlat
inc
dec
sub
jge
mov
movs
es
loop
(bad)
test
sub
int3
push
pushf
xchg
mov
shl
shr
ja
pop
sub
lds
inc
sub
and
adc
add
xchg
inc
sub
inc
mov
loop
add
push
xchg
ss
xchg
adc
pop
adc
mov
adc
sub
js
xor
nop
les
adc
test
add
cli
or
and
mov
mov
or
lods
mov
push
mov
in
dec
(bad)
jg
sbb
jno
movs
not
cmp
popf
cmp
inc
cmp
sbb
or
or
jb
ja
test
sub
dec
mov
adc
inc
mov
and
jl
sbb
mov
xchg
sub
sbb
es
or
arpl
pop
mov
lods
cld
loop
dec
jo
in
add
push
fistp
into
dec
xor
xchg
rcl
inc
outs
(bad)
mov
(bad)
push
mov
mov
cmp
aaa
mov
inc
dec
fdivr
adc
or
test
rcr
int3
sbb
inc
jl
mov
xchg
xor
mov
test
aaa
xor
loop
pop
dec
fdiv
outs
popa
pop
inc
adc
nop
scas
test
ret
adc
ret
and
and
lods
sub
xchg
movs
loopne
mov
jecxz
pop
in
or
imul
(bad)
loope
fstp
out
ds
push
cmp
dec
mov
inc
xor
das
(bad)
loopne
sub
(bad)
retf
dec
jl
mov
das
jp
inc
mov
cld
sub
mov
mov
mov
lods
fnstenv
outs
mov
dec
repnz
sub
or
fldl2t
sub
cdq
mov
or
sub
test
sbb
adc
sub
(bad)
popa
jo
jp
pop
push
leave
lods
xor
movs
movs
das
jp
in
xchg
sahf
sbb
mov
sbb
jp
cwde
jmp
fmul
daa
inc
in
jbe
cmc
or
mov
retf
jae
push
imul
outs
xor
sub
or
into
jbe
adc
mov
pop
mov
xchg
mov
push
mov
ficom
jmp
jmp
cmps
scas
fmulp
into
xlat
jbe
jae
dec
mov
jne
sar
mov
jge
mov
cmps
cdq
cmps
rcr
lods
mov
sub
jecxz
in
in
repz
sub
mov
xchg
push
xchg
sbb
jns
xchg
dec
fstp
push
inc
pop
mov
cwde
inc
push
lods
repnz
xchg
sti
jecxz
mov
inc
mov
int
jb
inc
jbe
popa
push
test
and
pop
and
add
enter
dec
aas
outs
sub
xchg
xor
adc
or
cdq
push
sti
dec
cmp
adc
xchg
mov
mov
mov
retf
fcomp
aas
cmps
jne
dec
sub
fwait
ror
xchg
dec
mov
int3
xor
in
push
cli
sbb
imul
or
mov
and
jbe
pusha
mov
lock
sahf
adc
or
add
std
ins
dec
push
fnstcw
lea
out
sub
inc
or
rcl
dec
xchg
jne
ss
fnstsw
mov
sub
mov
cdq
(bad)
in
aaa
lds
cmp
test
sbb
popf
sub
mov
call
loope
aaa
in
jmp
push
sub
mov
popf
je
mov
mov
xchg
ins
push
(bad)
adc
add
mov
jp
dec
mov
sub
xchg
jmp
ins
mov
pop
pop
ins
push
repnz
test
jb
cmp
xor
add
jno
jbe
dec
xor
pop
hlt
stos
push
lods
sub
movs
push
rcr
jb
mov
dec
push
jmp
mov
(bad)
iret
mov
pop
xchg
lahf
pop
mov
scas
imul
addr16
outs
ss
sub
pop
fistp
sti
addr16
add
pop
inc
enter
scas
inc
cmp
mov
xchg
jle
jge
inc
dec
repz
in
out
retf
test
(bad)
push
out
cmp
retf
sub
femms
jmp
lahf
cmps
ja
inc
aas
jnp
mov
test
rcl
xchg
int3
retf
daa
jns
stc
inc
add
sub
test
xchg
push
jbe
push
stc
int3
pop
pop
je
inc
adc
lock
jg
neg
shr
mov
mov
jnp
inc
out
sbb
pop
loop
pop
cmp
xor
(bad)
mov
lods
cli
(bad)
cmps
fsub
in
dec
aam
repz
in
adc
sub
mov
xchg
test
xor
mov
mov
sub
movs
mov
pop
(bad)
dec
outs
mov
dec
sub
into
sub
adc
push
mov
cmp
ret
cmp
ins
mov
cli
shl
aas
outs
test
sub
lds
jmp
inc
inc
adc
mov
nop
mov
inc
cmp
imul
push
clc
mov
push
pushf
mov
mov
and
push
cmp
loop
push
(bad)
xchg
push
inc
int
sbb
sbb
adc
lahf
mov
jmp
out
repz
add
aam
xor
add
ins
std
xlat
mov
fdivr
adc
(bad)
adc
mov
mov
test
sbb
movs
int
ins
test
jmp
xor
or
add
je
xor
std
int3
daa
sub
mov
sub
pop
adc
xor
shr
mov
mov
ret
shl
cmp
mov
fsub
jae
sub
in
jb
mov
sub
dec
push
es
mov
adc
loop
dec
shl
imul
jmp
test
pushf
mov
mov
cwde
bound
xor
dec
xchg
jmp
stos
enter
int
stc
imul
add
and
repz
retf
xor
div
ds
mov
cs
shr
xchg
popa
jns
fadd
jmp
daa
fisttp
jae
sbb
out
inc
pop
sbb
inc
adc
mov
xor
ins
retf
adc
es
cli
dec
mov
iret
push
out
mov
or
xor
mov
mov
in
fld
aad
sbb
ja
inc
push
lock
inc
scas
add
mov
hlt
sub
movs
(bad)
jne
add
rol
es
jg
fld
push
mov
stc
lods
and
retf
xor
mov
arpl
xchg
cdq
jp
sbb
movs
jmp
mov
xchg
call
daa
pop
je
loope
sbb
into
push
imul
cli
pop
sti
xchg
scas
jge
hlt
rcl
adc
xchg
stos
daa
fwait
or
dec
dec
jmp
outs
or
inc
(bad)
fnstenv
inc
fimul
cs
fisttp
ins
push
loopne
ins
mov
pop
movs
fdivr
dec
xchg
adc
cs
push
xchg
fndisi(8087
xchg
xor
lock
push
push
mov
(bad)
inc
add
imul
pop
fs
xchg
cld
pop
jns
dec
jmp
mov
push
aas
sub
push
bound
mov
leave
pusha
xor
rcr
mov
ret
rcl
(bad)
mov
icebp
xor
rcl
push
or
stc
xchg
jae
add
(bad)
jmp
ror
xchg
mov
ret
mov
xchg
mov
lock
push
add
dec
sub
lock
push
mov
or
jno
(bad)
hlt
pusha
xchg
fisub
add
mov
fdiv
sahf
push
inc
xchg
dec
dec
push
mov
dec
int3
stos
out
test
jmp
xchg
mov
retf
(bad)
lds
xlat
loop
das
in
xlat
sub
scas
dec
cmp
cli
ss
sbb
cmps
dec
lods
jns
dec
shl
cmps
push
push
rcl
adc
in
sbb
inc
cmps
cmp
push
in
dec
fdiv
push
ror
push
push
ret
lahf
addr16
add
jne
jp
adc
sbb
out
bound
push
sub
cmps
in
jl
mov
mov
daa
push
das
inc
cli
ficomp
stc
stc
outs
sar
xchg
push
inc
inc
mov
jmp
jmp
and
push
outs
xchg
adc
push
rcl
dec
push
xor
xor
inc
cmovg
cmp
leave
aaa
mov
(bad)
aad
(bad)
lahf
pop
data16
int3
inc
out
or
(bad)
sti
xchg
pushf
fst
sub
mov
lods
add
push
jns
cmp
and
sub
add
mov
jecxz
repz
dec
cmp
imul
xchg
push
loope
(bad)
sub
pop
sub
and
in
hlt
push
sbb
pop
push
imul
fs
movs
jbe
cmp
nop
(bad)
loopne
dec
sub
imul
sahf
push
(bad)
aam
rcr
ins
popf
sar
gs
jbe
lods
fcomip
fistp
xor
sub
cmp
sti
jmp
daa
add
dec
sbb
ret
ror
ins
mov
xchg
jecxz
push
popf
mov
pop
pushf
mov
sbb
cdq
int3
mov
retf
cmp
mov
or
aas
dec
in
aaa
or
dec
sti
inc
and
addr16
arpl
(bad)
das
lock
dec
lahf
jno
fst
sub
push
ficomp
into
xchg
jmp
push
sub
adc
xchg
mov
in
xchg
(bad)
add
repnz
lock
inc
dec
aad
ins
mov
fistp
inc
inc
inc
push
pushf
add
rol
ss
sbb
xchg
or
outs
mov
lods
bound
sub
sub
inc
dec
shr
jecxz
cmp
and
xor
xlat
cmps
out
movs
mov
jge
ins
sbb
pop
xchg
stc
mov
int3
xchg
dec
sub
lea
loop
cmc
cld
pop
mov
repz
(bad)
out
sbb
out
pop
(bad)
ds
push
xchg
mov
and
xchg
loopne
pop
aas
cmp
push
scas
sbb
inc
lods
push
push
xor
ds
xchg
pop
call
cdq
test
loop
inc
(bad)
jae
fwait
sub
xchg
retf
mov
shl
jne
retf
mov
jg
out
(bad)
sbb
or
ins
imul
inc
clc
push
clc
xor
cmc
jno
sub
mov
push
or
dec
jge
jns
inc
cmp
cdq
push
mov
fndisi(8087
iret
int3
idiv
nop
in
in
inc
inc
jne
mov
fistp
and
shr
xchg
xor
int
push
mov
inc
int3
sub
xchg
jns
dec
push
mov
mov
enter
mov
retf
outs
cmp
retf
stos
scas
mov
sub
cmps
mov
xchg
xchg
dec
cs
pop
jne
xchg
ss
adc
cmps
xchg
hlt
dec
push
add
and
jmp
dec
into
in
aas
xchg
mov
xor
clc
pop
mov
jg
ja
rcr
mov
mov
pop
in
in
outs
test
loopne
jl
xor
adc
test
lock
neg
or
inc
movs
mov
xchg
xchg
mov
jno
iret
mov
inc
push
js
jp
dec
xchg
xchg
mov
sub
dec
int
dec
rcr
call
in
jns
dec
cmp
movs
movs
inc
xchg
pop
push
mov
outs
xchg
aaa
sub
outs
dec
lahf
mov
lods
stc
fldenv
ret
push
pop
movs
les
in
mov
rcl
hlt
xchg
jb
xor
loope
mov
mov
mov
mov
pop
lods
pusha
mov
mov
pop
gs
pop
push
jns
dec
idiv
fcmovnb
add
pop
mov
sbb
add
(bad)
dec
xchg
ins
mov
inc
aam
js
mov
aam
sti
push
hlt
pop
fldenv
xlat
mov
int3
ficom
in
mov
push
sub
icebp
sub
das
fist
pushf
lock
or
int
jb
aas
dec
les
add
jmp
sbb
sbb
aam
jmp
int
inc
pop
scas
psrld
lock
into
jmp
mov
shl
clc
dec
ret
dec
inc
test
sub
ficomp
adc
rcl
xchg
mov
mov
dec
adc
icebp
dec
push
cmp
into
icebp
lock
je
xlat
jecxz
loope
jecxz
inc
mov
pop
(bad)
retf
loope
retf
mov
shr
frstor
es
call
and
ds
cmp
imul
les
inc
xchg
in
(bad)
std
(bad)
fs
lock
imul
test
inc
aad
dec
movs
xchg
cmp
push
movs
outs
dec
test
movs
dec
sub
jo
popa
popf
cmp
outs
in
xlat
loope
adc
mov
(bad)
icebp
addr16
ret
pop
inc
in
jo
mov
xchg
mov
mov
nop
mov
and
or
shr
xchg
popf
pushf
or
mov
cwde
cli
outs
aas
push
lock
pop
js
out
jbe
pop
in
push
add
stos
xor
push
loop
clc
(bad)
lods
(bad)
cmp
fstp
inc
push
shl
je
call
jp
cmps
daa
push
cdq
nop
inc
es
dec
push
in
jecxz
mov
aas
inc
movs
pop
dec
inc
retf
push
imul
xlat
enter
lds
test
cmc
xor
lods
or
and
mov
mov
loop
loope
retf
pop
push
mov
pop
cmp
imul
dec
pop
xchg
cmp
repnz
adc
cmps
out
and
mov
dec
inc
push
fadd
mov
and
add
ror
test
mov
add
movs
call
mov
stos
lea
xchg
movs
cmp
cmp
popa
nop
cmp
sub
pop
pop
sbb
inc
sub
sub
dec
xchg
push
pop
ins
jmp
sub
fucomp
pusha
push
in
push
mov
and
(bad)
xchg
lahf
adc
inc
mov
mov
div
dec
dec
dec
xchg
test
addr16
mov
aas
popa
test
add
pushf
test
std
sti
fcmovnu
jnp
add
mov
pop
pushf
push
stos
mov
fdiv
xor
jns
pop
sbb
jg
push
daa
fs
fsub
out
test
adc
add
and
add
dec
mov
in
inc
push
icebp
mov
cmps
mov
mov
cmp
jg
jb
ds
fistp
sbb
pop
sar
js
mov
es
lods
cli
out
mov
push
mov
mov
push
leave
cmp
movs
lahf
jge
jbe
inc
push
daa
mov
xor
mov
int
stos
cmp
push
test
jl
jnp
loop
pop
cmp
jge
jns
scas
aas
(bad)
out
scas
les
mov
xor
stos
das
xchg
or
stos
and
adc
in
mov
iret
pushf
fsub
push
cdq
add
(bad)
fs
sahf
jg
pop
inc
in
mov
(bad)
imul
mov
movs
call
jb
mov
add
inc
sbb
xor
jne
jge
push
dec
mov
or
mul
loope
imul
pop
sahf
ins
jge
les
fdivr
cmp
mov
dec
xlat
clc
jno
push
repnz
shl
fucomp
pop
imul
aas
add
jb
out
loop
shr
ret
stos
jp
sahf
std
push
jbe
mov
jmp
pop
or
or
lea
pop
push
in
in
xchg
mov
frstor
dec
push
mov
pop
dec
outs
scas
retf
(bad)
adc
movs
xchg
sub
lods
test
imul
mov
cld
adc
jmp
xchg
mov
push
icebp
add
mov
(bad)
stos
jnp
push
aad
outs
mov
dec
push
xor
adc
dec
dec
mov
adc
(bad)
iret
(bad)
add
and
cmp
cmp
pop
jbe
mov
dec
repz
pop
daa
outs
adc
pushf
es
dec
cmp
jbe
ss
sbb
iret
inc
js
cwde
lock
loop
mov
push
je
retf
retf
fld
xchg
adc
das
retf
xchg
test
pushf
sub
sub
push
dec
pop
fldenv
popa
xchg
lods
out
xchg
jecxz
scas
aad
mov
(bad)
mov
jne
fdivr
dec
fwait
jmp
mov
pushf
cmp
pop
aaa
adc
retf
cmp
push
scas
std
dec
dec
push
or
xor
in
nop
imul
test
inc
xchg
add
ds
push
(bad)
dec
cmps
push
sahf
adc
stos
sub
pop
mov
lods
stos
(bad)
jmp
cmc
mov
in
mov
fsubp
xlat
push
retf
nop
jecxz
push
and
add
push
mov
xor
out
mov
outs
loop
ret
loope
loop
in
(bad)
movs
mov
inc
test
fwait
mov
sub
daa
cmps
pop
jge
inc
aas
adc
aaa
cmp
loop
sub
pop
inc
out
sti
outs
jl
ror
out
dec
fisubr
xor
popf
sub
jge
lods
call
sar
jmp
es
sub
xchg
inc
push
jo
adc
add
or
sub
push
cmp
cs
or
(bad)
xor
mul
into
sti
lahf
inc
mov
shr
loop
pop
ds
mov
sbb
loopne
pop
pop
(bad)
jnp
push
ficomp
push
lods
adc
xchg
and
or
adc
aaa
jle
in
mov
sbb
lods
inc
loop
pop
mov
cmps
div
jecxz
fisttp
push
mov
jmp
mov
ja
js
(bad)
ins
ret
lock
or
ins
fst
rcl
test
int3
sub
mov
mov
mov
fldcw
fbld
outs
add
out
hlt
js
sub
pop
iret
sub
pop
xchg
call
fist
pop
or
sbb
loope
mov
or
outs
mov
cmps
test
lea
imul
sub
sbb
fdiv
pop
jno
cmps
adc
jo
movs
xor
inc
push
movs
sub
cdq
gs
das
or
aas
lock
mov
fcmove
adc
xchg
push
mov
bound
sub
inc
scas
retf
xlat
mov
shr
shr
jecxz
test
sub
clc
xchg
mov
es
outs
popf
aas
ins
fst
cmps
cdq
leave
cmp
mov
into
adc
mov
shl
mov
mov
inc
sbb
inc
shl
mov
movs
in
out
imul
addr16
fisttp
sub
enter
jmp
xor
sahf
mov
loopne
inc
fisub
xchg
test
inc
mov
dec
cmc
(bad)
dec
pop
movs
stos
scas
int3
pop
test
rcr
dec
ds
inc
pop
sub
mov
add
sti
daa
lods
test
test
popf
or
aam
out
pop
fldenv
pop
(bad)
lods
clc
fs
xor
mov
pop
test
es
je
xchg
cmp
cmps
add
add
std
movs
pusha
mov
sub
pop
cld
shr
sti
sub
std
push
xlat
loop
repz
lods
js
rcr
loop
mov
sbb
pxor
jb
jmp
fcomp
stos
cmps
fdivr
sbb
jp
ret
out
pop
sub
lods
mov
cdq
mov
jae
mov
push
add
and
iret
js
cmp
sub
outs
ja
aam
dec
push
ins
je
and
inc
fcmovnbe
sbb
mov
jmp
(bad)
stos
cs
retf
xor
xchg
mov
mov
or
xchg
retf
jb
add
inc
inc
test
sub
es
stc
pop
int
imul
jg
jecxz
or
sub
popf
fs
mov
mov
shl
(bad)
stos
cmps
mov
gs
inc
jb
sub
sub
mov
xchg
and
inc
mov
pop
xor
jnp
test
lods
lods
jecxz
jmp
mov
pop
xor
call
sub
outs
outs
dec
jge
(bad)
pop
push
movs
jbe
ror
vaddpd
mov
pop
mov
retf
push
fs
int3
ret
xchg
xchg
mov
xchg
or
ins
cmp
pushf
(bad)
pop
aad
pop
adc
ja
ja
pop
mov
mov
cld
cmps
ja
adc
jbe
ins
mov
(bad)
cld
cdq
push
xchg
imul
lea
xchg
and
push
xchg
push
xor
and
jns
stos
xchg
mov
aam
jb
adc
aaa
adc
out
popf
std
mov
clc
js
call
(bad)
in
(bad)
(bad)
xchg
xchg
test
push
mov
sub
movs
add
jne
not
int3
fiadd
dec
add
ins
jne
sub
jno
lds
(bad)
jmp
es
adc
(bad)
int
mov
les
and
scas
adc
(bad)
xchg
neg
fnstcw
sbb
xchg
movs
cmps
sbb
(bad)
xchg
aas
sub
mov
pop
neg
(bad)
test
mov
sub
ja
xor
addr16
push
out
inc
pop
aam
and
xchg
push
xchg
xor
movs
mov
hlt
pop
inc
clc
shl
and
clc
int
cld
mov
leave
xchg
hlt
ins
inc
inc
les
out
stc
cwde
daa
adc
pop
or
aaa
push
in
ret
push
jb
dec
nop
cmps
retf
push
data16
xchg
ins
(bad)
mov
cmp
push
retf
and
int
dec
dec
adc
cmps
push
xchg
outs
mov
xchg
jbe
fistp
icebp
fst
add
and
mov
push
clc
pop
call
out
scas
fsub
mov
pop
mov
data16
cwde
jno
into
sti
jne
xchg
dec
cmp
retf
jae
loop
push
jo
cmps
fcmove
retf
xchg
data16
mov
fistp
inc
outs
cmp
ror
push
adc
stos
cld
pop
retf
inc
lea
loope
js
push
sub
pop
in
cmp
jae
jnp
or
mov
arpl
jne
retf
mov
add
fsubr
cmp
push
dec
clc
xchg
xor
fstp
cmp
dec
xchg
idiv
sub
lahf
or
pushf
cmp
out
adc
xlat
int
mov
aaa
xchg
loop
cmps
nop
xchg
jmp
les
and
aad
adc
addr16
cdq
popa
jecxz
mov
push
push
jno
jno
fdivrp
sbb
add
sub
daa
and
pop
pop
outs
bound
or
mul
inc
xchg
xchg
pusha
sahf
gs
sub
inc
push
mov
icebp
cmp
sbb
gs
aad
dec
push
in
repz
ins
add
test
pop
pop
pop
pop
sar
mov
pop
mov
xor
sub
pop
in
pop
retf
icebp
jl
ret
sub
push
mov
scas
ret
jns
popa
xchg
adc
fnsave
(bad)
out
push
aas
push
cmp
mov
mov
push
nop
add
or
and
add
or
mov
stos
dec
pop
add
test
push
add
adc
mov
inc
or
xchg
cmps
fstp
mov
xor
fisttp
jns
pusha
adc
test
(bad)
movs
rcl
stos
and
movs
icebp
ins
(bad)
hlt
cmp
xchg
jo
jno
ja
and
in
les
jns
jne
xchg
jbe
push
enter
xchg
push
paddb
out
xchg
mov
pushf
pop
ficomp
test
adc
xor
mov
test
test
pmullw
rol
enter
popa
test
jno
add
adc
fidivr
out
jnp
mov
stos
ret
mov
pop
addr16
std
xlat
call
icebp
xchg
gs
adc
push
fnstsw
jmp
loope
ins
pop
pop
jbe
nop
imul
adc
fist
push
dec
mov
sahf
push
call
in
sahf
push
mov
cmp
jl
jecxz
push
aaa
test
ret
xchg
jb
mov
outs
jmp
lock
xlat
lds
push
mov
(bad)
neg
jnp
(bad)
fstp
stos
movs
sub
ss
inc
ins
jns
aas
ja
and
cmp
cdq
loop
js
push
mov
(bad)
push
pop
mov
inc
lea
mov
push
mov
jnp
pop
dec
add
fdiv
dec
loop
arpl
aam
ret
nop
xchg
mov
in
in
pop
jne
aam
mov
jb
jecxz
std
adc
cmp
clc
xchg
enter
scas
or
dec
cmp
aas
or
fild
and
gs
mov
jecxz
ficom
sub
xchg
xchg
ins
(bad)
xor
mov
dec
sub
test
sahf
es
ds
sar
xchg
retf
enter
shl
sti
pop
push
mov
sbb
mov
imul
adc
aas
ret
and
bound
pop
mov
sub
or
data16
popf
stos
fimul
lds
in
xchg
icebp
xchg
push
cmp
inc
fadd
outs
pop
mov
dec
aad
test
mov
inc
and
frstpm(287
(bad)
enter
pop
and
add
and
or
push
shr
retf
cmp
jp
adc
mov
(bad)
jmp
mov
leave
(bad)
pop
sub
inc
mov
jnp
and
mov
mov
jecxz
out
std
aas
(bad)
push
adc
out
adc
dec
dec
rol
xchg
ins
(bad)
fdivr
jmp
or
test
add
sub
sbb
sahf
pop
mov
outs
mov
dec
jns
or
fidivr
cli
shl
(bad)
call
inc
jmp
aaa
out
mov
add
mov
dec
imul
fstp
(bad)
mov
xchg
dec
mov
test
int3
mov
push
arpl
dec
and
retf
and
pusha
jo
jne
push
retf
ffreep
fdivr
fsub
inc
pop
push
inc
imul
lods
adc
scas
int3
dec
and
loope
shr
fadd
hlt
dec
(bad)
rcr
push
sbb
sahf
sbb
and
clc
mov
adc
cs
cmc
fwait
jg
enter
out
add
in
jno
out
or
retf
stos
or
jge
cmc
sub
jo
hlt
iret
cmp
or
sbb
sar
outs
jae
cdq
jge
pop
pop
jno
scas
pushf
call
stc
cmp
js
jne
aam
xchg
cli
push
xchg
jecxz
neg
mov
loopne
cld
out
(bad)
sub
pop
mov
xchg
inc
inc
sub
scas
std
lds
repz
loopne
xchg
cs
jp
mov
sar
cmp
in
out
scas
nop
lahf
dec
arpl
jne
clc
cmp
sbb
(bad)
cld
xchg
enter
repnz
push
retf
movs
push
inc
jg
mov
or
jge
lods
push
jle
mov
pop
not
mov
xchg
movs
adc
leave
int3
dec
repnz
out
ror
call
or
in
xor
push
movs
adc
adc
mov
dec
pop
gs
dec
push
jae
stos
mov
loop
and
sub
iret
lahf
cmp
mov
sar
push
lock
out
loope
loope
mov
mov
cmps
mov
xor
mov
inc
fidivr
cdq
pop
pop
jns
inc
movs
jns
in
add
jno
in
inc
arpl
xchg
movs
scas
xchg
ficom
rcl
and
mov
cmp
cdq
jl
mov
fsubrp
ja
lds
js
icebp
inc
jne
jbe
aad
xlat
pop
ss
push
hlt
mov
shl
jb
test
int3
(bad)
dec
fild
in
xchg
lods
repz
icebp
(bad)
mov
mov
shr
out
xlat
mov
cmp
(bad)
sub
jge
rcr
ffreep
test
add
out
addr16
push
sub
lea
jno
adc
repnz
dec
iret
dec
mov
adc
jge
nop
dec
stc
inc
xchg
cmps
or
test
add
ins
hlt
xor
sbb
in
xchg
in
repnz
cdq
imul
and
pop
jne
push
in
or
mov
cmp
out
movs
jb
in
lods
ins
test
int3
push
retf
dec
cmp
pop
xchg
ins
packuswb
sbb
dec
sbb
jge
dec
stc
hlt
imul
pop
sub
mov
xchg
xchg
pop
mov
pop
or
cmp
out
xchg
pop
mov
mov
mov
xor
mov
push
repz
sub
cdq
push
cmp
add
jae
loop
aaa
xchg
shl
mov
sub
jns
daa
mov
lds
out
test
ds
clc
jmp
xor
push
jmp
in
addr16
popf
xor
dec
fcmovnbe
je
sub
sub
xor
out
and
je
mov
cmp
mov
mov
test
fnstcw
in
fsubr
loop
xor
je
add
stos
dec
sub
xchg
mov
scas
push
cmp
jp
jne
sub
mov
push
xchg
pop
adc
mov
test
ret
and
int3
push
adc
sar
push
movs
sbb
retf
das
in
push
test
loopne
push
out
xor
test
sbb
jl
or
mov
mov
jae
out
cmp
xor
mov
fisubr
cdq
xchg
stos
retf
imul
or
sbb
dec
inc
inc
rol
daa
iret
xor
into
aad
add
xchg
push
pop
jns
cs
pop
xchg
ror
int3
mov
ds
cmp
push
mov
cli
(bad)
out
jb
pushf
jno
push
ror
sub
lahf
jbe
dec
inc
fdivr
sbb
scas
mov
test
push
scas
adc
test
pop
test
(bad)
repz
mov
bound
imul
jmp
shl
push
clc
xor
dec
cld
test
jnp
inc
bound
in
cmp
or
shl
sub
jbe
sub
xchg
repz
(bad)
pop
jp
xor
mov
shl
xchg
scas
test
je
sub
cld
dec
bnd
sub
(bad)
cmp
out
rcr
sbb
xchg
in
jo
xor
inc
lods
inc
jmp
dec
cmp
cmovs
adc
lock
dec
adc
mul
adc
push
adc
mov
push
into
or
test
fild
sbb
and
outs
and
xor
mov
xchg
mov
inc
mov
cmp
scas
dec
and
xor
clc
adc
adc
movs
adc
cs
bswap
adc
mov
ss
outs
and
push
mov
jae
sbb
mov
out
mov
or
popf
xchg
add
and
add
les
xchg
xor
imul
jo
fcomp
and
imul
dec
test
cmc
adc
mov
movs
and
sbb
into
dec
(bad)
ficom
ins
aam
adc
xchg
xchg
mov
stos
xchg
or
mov
adc
shl
(bad)
mov
dec
push
xchg
scas
mov
cmp
xchg
xor
cmps
and
cmp
addr16
jg
push
mov
dec
mov
inc
sbb
cmp
mov
pop
push
mov
loopne
es
outs
pop
and
and
in
or
aaa
jno
mov
loopne
pop
cld
loopne
int3
jo
pop
ins
or
bound
mov
cmp
add
adc
imul
enter
(bad)
and
or
jecxz
push
es
in
fdivr
test
push
(bad)
into
jecxz
xor
or
add
jmp
xor
jbe
aas
add
xor
xor
xchg
push
xor
rol
cmc
cmp
arpl
cmp
call
das
sub
mov
aas
out
mov
mov
ror
jb
cdq
mov
dec
or
scas
and
mov
or
xor
sub
jg
icebp
cmp
rcr
jp
ffree
dec
lods
jno
test
and
test
dec
pop
sub
xor
into
les
fdivr
(bad)
mov
jnp
rcl
call
aas
ins
ficom
xchg
iret
xchg
loope
cmp
push
cmp
mov
cmps
push
adc
ins
dec
mov
fwait
push
mov
in
xchg
cmps
push
hlt
icebp
cwde
call
pop
jns
xchg
fdiv
int3
movs
cmp
je
inc
shr
ss
jge
fimul
jb
jno
jno
push
cli
xor
mov
ds
mov
push
scas
jno
test
mov
mov
dec
fsubrp
cdq
xchg
stos
shr
mov
xchg
pop
loop
ror
movs
mov
push
or
out
lods
int
std
popf
ret
popa
jb
xor
cmp
retf
dec
lods
cmp
cmp
fstp
scas
and
jmp
(bad)
adc
mov
jb
fwait
cmps
jp
cmps
jp
dec
imul
jle
dec
outs
xchg
dec
xchg
dec
xchg
or
fild
test
in
stc
push
das
sbb
adc
jmp
aam
aam
aam
cmp
push
mov
mov
mov
scas
leave
jmp
pop
cmp
cmps
push
(bad)
sub
lahf
dec
fcmovne
cwde
push
mul
add
inc
mov
mov
fwait
les
xchg
or
aad
jmp
fbld
aaa
xor
out
icebp
add
ss
add
cmp
cmps
adc
jl
(bad)
sub
sub
mov
or
cs
je
inc
xchg
push
loopne
push
mov
jb
inc
sar
xor
ins
add
retf
fwait
jbe
movs
cmc
popf
xchg
stos
mov
out
into
mov
int3
xor
inc
dec
dec
push
pop
and
outs
lods
(bad)
jg
js
loope
bound
mov
(bad)
loopne
mov
or
loope
xor
jmp
sbb
shr
pop
(bad)
xlat
lds
fisttp
sbb
shr
imul
add
mov
inc
xor
xor
xchg
pushf
test
in
call
inc
push
jne
mov
inc
xchg
xor
pop
cdq
in
ror
js
(bad)
jecxz
fnstcw
cmc
push
in
addr16
jge
ficomp
std
dec
adc
les
fmul
stos
cmc
and
add
loopne
xchg
jg
dec
jmp
dec
cmc
jae
pushfw
retf
movs
popf
iret
xchg
push
jns
ffree
mov
ins
xor
popf
out
mov
pop
dec
cs
mov
nop
outs
sub
xchg
fimul
ret
(bad)
(bad)
cld
pusha
jno
imul
jne
les
xor
sbb
pop
mov
sub
dec
dec
(bad)
cmc
pushf
sub
mov
in
pop
pop
jmp
movs
and
jbe
pop
cmp
sub
mov
rcr
bound
or
aam
test
stc
pop
xor
sub
push
in
xchg
cwde
dec
sbb
je
test
sub
cmp
bound
jns
jo
ins
mov
mov
sti
dec
scas
sbb
mov
pop
mov
xchg
mov
imul
mov
aaa
test
mov
mov
push
mov
or
mul
gs
sbb
sub
ror
test
daa
xor
xchg
xor
jp
push
clc
push
rep
daa
jmp
jo
mov
icebp
sub
pop
pop
aas
(bad)
mov
movs
pushf
jge
jp
dec
mov
inc
popf
mov
jl
mov
dec
ds
pop
or
inc
add
sub
nop
mov
pushf
bound
cmp
outs
sub
push
lahf
clc
xchg
(bad)
lahf
mov
or
ss
pop
ror
movs
jge
in
sti
das
(bad)
movs
(bad)
xor
iret
cdq
inc
and
mov
jb
or
loope
ins
cmp
adc
jle
jno
scas
push
mov
cmps
xor
movs
xchg
in
cld
call
mov
lods
std
fistp
and
mov
push
pop
arpl
adc
in
(bad)
rcl
loop
test
xchg
sbb
push
je
imul
ds
jge
push
cmp
ja
inc
mov
jecxz
outs
add
daa
aas
(bad)
das
cmp
mov
jmp
sub
retf
cmp
ins
addr16
outs
jb
fstp
sbb
cmp
dec
lods
neg
hlt
fsub
das
ffree
retf
out
cmp
xor
adc
inc
fstp
xor
leave
and
xchg
push
shr
sbb
in
cld
loop
sub
in
iret
scas
pop
xchg
and
xlat
aam
loope
dec
aam
imul
inc
push
jbe
aad
jns
adc
mov
push
aaa
rol
add
jmp
(bad)
mov
or
jno
test
ins
iret
or
je
push
lods
sti
into
mov
push
inc
inc
cmc
adc
cmp
sbb
movs
mov
sbb
and
das
pop
xchg
jo
imul
iret
ret
push
outs
inc
xor
jp
ins
int3
jns
sbb
mov
cdq
inc
or
shr
inc
push
pop
jmp
repnz
mov
xchg
push
cmps
sbb
popa
ja
outs
imul
iret
call
cmp
(bad)
inc
sbb
lds
dec
(bad)
push
gs
call
xchg
inc
hlt
dec
adc
xchg
cmp
mov
inc
mov
out
movs
jne
clc
stos
pop
ins
jae
mov
xlat
mov
ret
in
nop
jge
jmp
inc
adc
ss
mov
pop
cmp
ret
vandnps
jbe
jp
adc
lods
fbstp
(bad)
cli
push
in
es
idiv
cmp
mov
out
les
dec
fdiv
adc
fcomp
push
dec
cld
cwde
cmp
sbb
mov
pusha
and
ds
stos
mov
imul
push
pop
cmp
sbb
retf
cmps
movs
stos
ds
sub
cmc
cs
sahf
push
mov
dec
(bad)
adc
dec
in
mov
inc
sub
call
aad
and
gs
cmps
inc
aaa
rol
ret
mov
ret
in
loope
retf
mov
dec
push
xor
push
leave
cmp
inc
aaa
adc
xor
clc
jg
test
mov
add
mov
push
push
pushf
mov
push
shl
sbb
dec
mov
or
adc
in
dec
xchg
inc
scas
pop
aaa
ins
mov
add
inc
rcl
cmps
int
out
icebp
out
cmp
fimul
fwait
cmc
loop
in
mov
add
xchg
jle
mov
pop
mov
push
call
ret
test
in
dec
jmp
inc
jne
lods
cld
xchg
ret
jb
aad
clc
sbb
enter
mov
(bad)
and
outs
pop
packuswb
and
out
in
sahf
add
repnz
out
mov
jecxz
arpl
jns
sub
test
iret
inc
sub
adc
adc
pop
push
push
out
mov
jp
outs
mov
in
enter
ja
dec
cmp
add
dec
arpl
sub
fs
addr16
push
gs
sbb
test
sub
pop
sub
test
push
xor
or
xchg
cdq
inc
jns
(bad)
loop
in
dec
loop
xchg
sahf
icebp
scas
pand
push
and
scas
div
cmp
inc
sub
push
mov
movs
mov
mov
pop
aas
shr
adc
movs
jg
push
test
push
stc
stc
mov
mov
dec
dec
lea
fadd
js
shl
aad
mov
or
(bad)
cmc
imul
popa
jae
mov
sub
mov
aad
fs
xchg
fsub
inc
repz
push
mov
(bad)
movs
in
jmp
cmps
ja
sbb
mov
into
jmp
movs
(bad)
cmp
fstp
sar
jmp
and
cmp
in
jg
cld
jecxz
sti
mov
popa
jns
clc
fnstcw
(bad)
xor
inc
mov
out
pop
pop
push
cld
inc
call
lahf
jle
fdivr
bound
sub
sub
lods
cmp
push
mov
pop
inc
fiadd
aas
mov
fimul
stos
dec
mov
out
mov
mov
je
mov
adc
movs
fisttp
or
pop
(bad)
cmp
out
mov
push
fisubr
arpl
adc
xchg
addr16
js
ss
mov
pop
pop
sub
push
cmps
and
hlt
mov
cmps
xchg
call
shr
push
clc
xlat
mov
test
sub
in
mov
dec
xor
or
jge
test
push
test
xor
fistp
rol
push
xchg
xchg
call
test
xchg
ins
(bad)
xor
xor
out
push
mov
xchg
jmp
mov
xchg
lock
ror
lods
fst
je
xor
sub
imul
dec
sbb
cmps
add
mov
test
sub
jnp
inc
push
jno
imul
jecxz
cmps
cmp
push
xchg
data16
ret
mov
xor
movs
mov
out
jg
cmp
jp
ds
mov
or
in
and
(bad)
mov
push
sahf
into
fidiv
pop
(bad)
jae
push
in
(bad)
xchg
mov
cmp
out
sub
shl
gs
jne
cmps
das
(bad)
lods
ds
jge
daa
sbb
out
mov
int
push
xor
rcr
cli
dec
jne
pop
lahf
bswap
xchg
pop
add
mov
mov
sub
mov
xchg
jmp
movs
(bad)
push
cmp
(bad)
and
cmps
pop
inc
scas
pop
adc
xor
sbb
imul
mov
mov
mov
je
scas
in
ja
mov
cmp
cmc
add
pop
xchg
sar
ror
mov
mov
sbb
cmps
rcl
xor
inc
cmp
xchg
(bad)
xchg
jp
(bad)
loopne
lods
jne
retf
adc
clc
cmp
aas
out
mov
adc
push
mov
fwait
mov
mov
out
pop
cmp
ja
inc
mov
les
mov
push
aad
call
sbb
mov
fs
pop
imul
jo
fadd
sbb
scas
sub
dec
lods
mov
xchg
xor
push
popf
pop
sub
lock
sub
idiv
cmp
cmp
pop
xchg
ja
push
call
fist
imul
mov
xchg
add
push
sbb
pop
inc
int
xchg
clc
xchg
cmp
xor
popa
mov
xchg
mov
(bad)
pop
movs
fst
imul
and
and
inc
and
fadd
jge
and
sahf
mov
or
add
dec
jmp
add
mov
fild
(bad)
mov
bound
clc
shl
xchg
add
lods
inc
not
mov
mov
mov
xlat
push
jns
mov
fidiv
test
cs
jge
adc
mov
retf
int3
mov
sbb
push
jno
lds
retf
or
push
aaa
lock
enter
outs
or
push
or
out
xchg
xlat
mov
mov
sub
mov
and
sub
int
push
push
imul
jle
fsubr
fdiv
mov
(bad)
fidiv
arpl
xor
lods
xor
shr
mov
pushf
fs
inc
jle
jns
jae
in
jmp
xchg
outs
mov
mov
ds
lods
push
dec
and
lods
aad
je
mov
sub
inc
leave
cmp
loope
lods
sbb
data16
sub
push
cdq
ins
in
mov
xchg
in
adc
fisub
dec
jbe
jb
dec
mov
out
(bad)
xchg
pop
jg
mov
push
out
dec
iret
fisub
fsub
xor
pop
dec
mov
call
add
(bad)
or
fcomp
sub
cmc
es
xchg
sti
inc
das
(bad)
mov
leave
and
mov
ins
sub
mov
in
aaa
push
fs
call
imul
retf
mov
pop
mov
(bad)
mov
in
mov
pop
(bad)
xlat
mov
(bad)
mov
in
test
push
add
add
cwde
sbb
add
adc
adc
repz
push
jg
cs
fcomp
ins
mov
cmp
mul
mov
retf
xchg
pop
hlt
sti
ret
mov
icebp
add
cli
out
mov
and
in
ficomp
add
add
out
sbb
int3
lds
adc
ret
arpl
xchg
(bad)
test
fidivr
add
je
imul
ds
pop
leave
push
sub
dec
push
mov
inc
inc
mov
movs
fimul
retf
mov
shr
dec
or
jp
add
cdq
into
movs
dec
mov
leave
sti
fstp
cmp
retf
fs
pushf
jp
ret
(bad)
ficom
lods
leave
inc
mov
ins
dec
movs
test
fwait
add
mov
jne
sbb
and
sbb
repnz
sbb
pop
ret
cmp
inc
jnp
mov
lock
es
cmp
inc
dec
(bad)
icebp
pop
xchg
fild
scas
test
cmp
mov
mov
inc
outs
out
scas
aam
sub
repz
lahf
sub
(bad)
xchg
mov
pop
inc
xchg
adc
inc
dec
bound
push
dec
js
loop
mov
mov
fistp
jns
ja
cmp
test
sbb
dec
pushf
lock
aad
cmp
inc
outs
sbb
lods
das
scas
shr
data16
xlat
inc
dec
jl
push
test
dec
lds
add
shl
into
mov
ret
call
dec
fs
lds
call
ins
sahf
fisub
add
movs
(bad)
xchg
mov
addr16
push
sub
in
fcomp
sub
je
popa
sub
loop
sub
sbb
sar
imul
and
movs
(bad)
add
das
enter
fst
test
inc
sbb
inc
mov
xor
push
imul
push
popa
movs
cmp
movs
shr
push
sbb
jb
lods
out
pop
xchg
pop
(bad)
jns
ds
mov
adc
dec
sub
outs
mov
ins
xchg
data16
cmp
mov
clc
mov
cmc
loopne
jg
das
push
jnp
ret
jmp
push
gs
adc
xchg
adc
fbstp
neg
stos
dec
lahf
pop
out
(bad)
sar
sbb
mov
push
rcr
xchg
mov
neg
jae
xor
cmp
mov
neg
ficomp
mov
cmp
xchg
std
data16
push
sub
fst
xchg
cmp
xchg
pushf
adc
sbb
and
test
sti
mov
sbb
fstp
push
jb
movs
xchg
mov
mov
in
xor
mov
pop
pop
jns
stc
push
js
aad
cmp
ret
inc
aam
add
jmp
pop
mov
call
popa
(bad)
retf
mov
or
mov
lea
dec
and
pop
jno
fisttp
jecxz
or
push
sub
jb
ins
(bad)
inc
xor
dec
mov
out
sub
outs
retf
cs
push
test
push
pop
aad
cdq
jbe
push
xor
push
fldcw
mov
xor
pop
dec
jb
add
cmc
mov
sub
sbb
xchg
jbe
imul
pop
repnz
xchg
dec
push
dec
mov
mov
jecxz
ret
jae
retf
push
out
loope
les
sub
mov
mov
repnz
dec
test
mov
xchg
jmp
xchg
mov
lahf
in
dec
dec
mov
jo
cmp
mov
aaa
push
push
mov
loopne
sbb
xchg
jecxz
into
xchg
sub
xchg
fwait
push
loope
shl
mov
sbb
shl
aaa
pop
xchg
adc
pop
ss
and
dec
xor
xchg
ss
jmp
sub
lahf
in
fcomp
push
loope
movs
lods
out
cld
lock
repnz
xchg
cdq
sahf
pop
xchg
mov
jne
in
dec
jne
pop
sbb
xchg
js
imul
inc
outs
out
fisubr
mov
jg
dec
repnz
test
xchg
mov
and
cwde
mov
mov
loop
clc
ret
(bad)
pop
aad
outs
in
mov
inc
mov
addr16
pop
mov
sbb
neg
mov
mov
push
dec
mov
imul
pop
daa
cmp
fcom
mov
sub
bound
sbb
mov
in
scas
push
lock
into
jo
jns
fisttp
jo
scas
pop
sbb
cli
mov
cmp
retf
scas
pop
mov
pop
ds
int
es
inc
loop
xor
dec
sub
nop
aas
aad
(bad)
in
jae
popf
sbb
xor
sbb
std
sti
scas
mov
hlt
jmp
jle
pop
in
lahf
fimul
mov
mov
cli
push
xchg
and
retf
or
mov
repnz
xchg
mov
in
pop
jb
push
xor
and
dec
(bad)
aad
pusha
push
mov
cmp
ss
enter
xchg
dec
sbb
scas
repnz
mov
fisttp
movs
stc
xchg
ffreep
fucomip
xor
inc
(bad)
mov
xchg
pop
call
pop
xchg
(bad)
cmps
icebp
pop
cwde
xchg
and
mov
in
xchg
dec
cdq
add
jl
push
call
push
push
cmp
call
dec
test
dec
xor
xchg
out
daa
popa
test
xchg
mov
out
xor
cmc
stos
inc
dec
fcomp
in
(bad)
mov
shl
mov
fimul
mov
cmp
ret
enter
xor
aad
icebp
dec
push
pop
scas
(bad)
movs
sbb
(bad)
cmp
adc
cwde
test
sub
fstp
sub
xor
addr16
mov
xor
jb
xchg
inc
xchg
adc
movs
xchg
(bad)
repz
(bad)
div
cmp
std
pop
jne
cmps
cmc
and
pop
aad
outs
das
push
rcl
push
push
mov
cmc
xchg
push
movs
js
add
push
push
pushf
pop
cmps
(bad)
addr16
rcr
sub
sbb
aas
jb
out
inc
retf
xor
jne
cld
jecxz
(bad)
test
test
jl
adc
dec
push
mov
sub
sar
mov
xchg
dec
xor
scas
dec
data16
jne
movs
mov
push
mov
push
xlat
fwait
sub
ret
cmps
mov
(bad)
rep
add
ret
into
mov
and
push
cmp
data16
bound
fild
shr
xchg
pop
(bad)
iret
xor
(bad)
dec
mov
aad
push
icebp
pop
ss
lods
bound
les
push
xor
fcom
mov
ror
aad
addr16
stc
test
bound
retf
repz
jno
ss
add
push
xor
sub
dec
int
lods
push
scas
jnp
push
push
jbe
test
call
mov
ret
inc
jo
jecxz
sub
aas
add
test
gs
dec
scas
ss
ds
ss
call
std
and
loope
aam
push
test
push
movs
mov
push
xchg
adc
dec
das
jg
mov
je
push
mov
inc
cs
sub
int3
cmps
retf
pop
aad
inc
dec
mov
push
jmp
cmp
fsub
jle
gs
loope
cwde
mov
clc
dec
push
mov
(bad)
jecxz
shl
cmp
mov
imul
div
sahf
cmps
pop
dec
scas
jmp
and
and
sub
in
retf
ins
mov
push
neg
or
jnp
add
and
mov
mov
sbb
iret
jmp
bound
dec
pop
popa
mov
xchg
jge
push
movs
and
aas
or
leave
pop
add
xor
mov
repz
cmc
mov
xor
push
movs
jmp
outs
cs
mov
inc
pop
cmps
jb
cmp
fwait
sbb
inc
xchg
push
popf
leave
daa
adc
cmp
int3
add
add
lods
outs
ja
lock
(bad)
icebp
and
push
cmps
out
mov
cmps
mov
xchg
mov
push
push
cld
xchg
add
in
not
adc
pop
jns
mov
push
mov
sub
out
in
xor
sar
push
aaa
cmps
retf
lods
xlat
iret
arpl
pop
jmp
sub
and
jmp
mov
in
pop
int3
enter
fnstcw
iret
ficomp
aaa
mov
test
jg
cmp
dec
jp
repz
jle
mov
dec
(bad)
push
ret
cli
mov
xchg
mov
and
lahf
mov
mov
lds
cli
add
iret
jno
stc
adc
xchg
sbb
and
add
aaa
push
xchg
dec
dec
push
aaa
push
xchg
add
lds
cmps
scas
fucomip
fdivr
ret
sub
jnp
push
cmc
es
xchg
repnz
mov
pop
int
xor
iret
fidivr
neg
ss
jmp
jp
test
jl
fwait
cmp
sbb
sub
lock
pop
loop
std
xchg
ror
xor
dec
dec
inc
sub
mov
adc
cmp
inc
jecxz
daa
cmps
in
dec
mov
and
rcl
cmc
xchg
dec
xchg
sbb
mov
retf
in
add
xchg
int3
mov
dec
add
or
jae
inc
or
push
imul
stos
fnstsw
ja
stos
fist
daa
fdivp
adc
leave
movs
jl
movs
jb
inc
or
das
cli
jbe
sbb
mov
int3
div
mov
fdivr
mov
pushf
ins
jmp
iret
mov
mov
xchg
inc
mov
retf
pop
inc
mov
ret
pop
stc
scas
xacquire
mov
and
sub
dec
loopne
into
frstor
inc
push
push
xchg
xchg
in
sub
mov
leave
js
mov
or
cmps
stos
xor
aad
cli
pop
jge
adc
aas
mov
movs
imul
mov
jmp
test
sahf
popa
idiv
pop
movs
pop
je
mov
jmp
mov
lods
mov
gs
xchg
ret
pusha
test
das
cmp
retf
retf
inc
xchg
cmp
mov
jno
mov
ins
mov
mov
lods
inc
rcr
and
inc
or
push
fisubr
dec
mov
shl
sub
xlat
int
outs
sti
cmc
pop
(bad)
cli
inc
add
out
add
xor
std
mov
pop
pop
inc
retf
xlat
ja
ins
jle
xlat
or
and
cmp
dec
xchg
sti
cld
arpl
ds
retf
std
addr16
fcmovnb
sbb
les
loope
mov
pop
xchg
rol
data16
imul
(bad)
sub
arpl
arpl
xor
pop
into
mov
sti
pop
pop
jae
fnstenv
lahf
in
xor
fsub
(bad)
ror
popf
mov
loop
xchg
xor
in
out
ja
xchg
test
ds
test
test
sahf
push
inc
in
push
mov
dec
leave
repz
ror
xchg
movs
pop
arpl
out
jnp
xchg
or
retf
jecxz
pop
mov
pop
aad
repnz
mov
lds
inc
test
int
cmc
ds
cs
or
xchg
mov
cmp
cmp
xor
in
(bad)
sub
loop
lods
ja
clc
dec
outs
imul
popa
jmp
sbb
scas
das
clc
jl
pop
mov
(bad)
mov
xchg
cmp
push
push
movs
rcr
and
pop
mov
cmp
clc
xchg
ficom
cmps
movs
jl
xor
sbb
jl
out
ror
shl
imul
and
clc
sti
or
les
push
test
or
cmp
arpl
scas
cmps
sbb
test
xor
cwde
out
add
punpckhbw
fnstcw
dec
pop
mov
cmp
mov
into
jmp
es
ret
jp
hlt
arpl
out
scas
inc
push
pop
xor
ret
shr
retf
mov
push
fisub
push
outs
ins
fwait
je
(bad)
dec
into
xor
jns
imul
add
imul
sub
dec
fs
mov
aaa
jmpw
je
test
xchg
push
stc
dec
jno
hlt
mov
pop
pop
pop
fcom
adc
imul
cmp
bound
mov
imul
push
dec
mov
pushf
sahf
sahf
and
sub
cmp
inc
mov
push
pop
pop
sbb
xchg
idiv
(bad)
pop
hlt
pop
dec
mov
shl
aad
xor
dec
pop
mov
cmp
addr16
jno
pop
cs
mov
cmp
jle
das
scas
stos
loope
jecxz
mov
dec
call
ins
cs
mov
cli
aas
xor
jp
imul
sub
dec
imul
cwde
mov
retf
dec
cmp
es
fwait
retf
add
adc
in
pop
inc
in
cmps
ins
xchg
bound
inc
push
out
jmp
lods
sar
mov
outs
sbb
mov
jl
xchg
fiadd
mov
pop
jmp
aaa
in
scas
and
ins
pop
push
jne
mov
cmp
inc
mov
ror
addr16
dec
cmp
cmp
inc
mov
xchg
cmps
lods
or
xchg
clc
mov
aam
es
lods
movs
std
int
in
repz
sbb
xor
shl
(bad)
sub
xchg
movs
and
dec
iret
mov
cmp
and
int3
push
pop
aas
icebp
pusha
(bad)
mov
cld
out
jne
dec
pop
dec
popa
xchg
(bad)
cld
cmp
out
outs
jno
rcl
push
mov
and
hlt
mov
aam
and
and
adc
mov
jge
leave
(bad)
call
adc
mov
popf
inc
add
cmc
adc
dec
xor
jge
mov
aad
add
sub
cmp
pusha
dec
shl
dec
dec
mul
lods
xor
adc
inc
cmp
lea
sub
mov
mov
push
xor
fsub
jo
ins
push
sub
js
mov
fsubr
shr
arpl
sub
mov
sbb
sub
mov
scas
bound
sub
dec
push
(bad)
fisttp
adc
push
and
inc
dec
js
push
add
jmp
and
adc
add
cld
daa
cmp
fiadd
scas
pop
cmc
(bad)
dec
icebp
adc
xchg
sub
dec
push
pop
xchg
pop
js
cmps
inc
mov
mov
sub
adc
xor
xor
std
ficom
cwde
inc
fstp
adc
mov
mov
sbb
std
and
inc
xor
loopne
arpl
nop
cli
push
and
inc
lods
dec
adc
mov
(bad)
in
xor
sub
fldcw
daa
adc
scas
dec
lea
fmul
and
and
arpl
outs
addr16
lahf
iret
(bad)
and
xor
sbb
inc
(bad)
int
sti
fnsave
pop
add
xor
mov
(bad)
dec
shl
cwde
repnz
stc
les
mov
fild
enter
adc
pop
cmps
ds
imul
and
je
sbb
inc
jmp
sbb
in
popa
xchg
and
pop
sub
inc
movs
pop
in
sub
pop
daa
mov
mov
cmp
shl
arpl
cdq
mov
sbb
retf
mov
cwde
outs
inc
dec
push
jl
ficomp
jbe
fnstsw
loope
movs
xor
cmps
lds
cwde
jge
mov
mov
test
cld
ret
ret
stc
std
xor
sbb
xor
ins
repnz
mov
jns
(bad)
idiv
cmp
mov
mov
popa
into
jle
cld
inc
call
add
cmp
inc
xchg
push
xor
ja
nop
sub
jmp
retf
and
mov
retf
push
cmp
mov
jmp
stos
stc
mov
shr
push
dec
jne
jge
xchg
xchg
out
into
push
jg
rcl
gs
cmp
xchg
pop
fcmovnb
ja
clc
call
mov
cmps
mov
leave
pop
in
leave
push
jmp
cmp
mov
jge
add
mov
push
ss
test
sbb
and
arpl
pushf
push
in
pop
push
jp
xor
clc
mov
mov
inc
imul
mov
into
out
dec
lods
lods
(bad)
xchg
aas
adc
dec
or
scas
rcl
push
retf
ss
out
retf
mov
in
fdivr
cmps
push
mov
and
jo
and
popf
test
and
sub
jbe
jns
sahf
inc
and
ret
das
leave
imul
sti
std
(bad)
sub
xchg
sbb
into
fidivr
adc
sub
push
cmc
mov
rcr
pop
popf
inc
mov
add
and
sub
(bad)
mov
mov
in
mov
ret
mov
lods
retf
sbb
lahf
pop
lea
cs
js
xchg
dec
mov
hlt
neg
cmp
fcom
jne
in
ja
cmps
push
out
cmp
adc
test
adc
loop
cdq
(bad)
cmp
test
addr16
xor
(bad)
dec
outs
ds
inc
add
call
push
inc
dec
leave
jne
dec
in
in
jae
mov
dec
dec
push
scas
pop
push
rcl
mov
pop
jge
xchg
retf
retf
pop
sub
jl
sbb
inc
cli
push
imul
icebp
je
inc
cmps
adc
scas
cs
das
lock
stos
xchg
dec
or
xchg
scas
push
push
jb
ficom
sub
jno
and
add
fst
pop
mov
jnp
fneni(8087
imul
ret
adc
imul
sti
push
in
xor
fmul
test
mov
mov
ins
iret
les
fcmovb
ja
scas
push
das
inc
stos
je
imul
jle
adc
push
dec
bnd
loopne
mov
out
xchg
lahf
mov
or
cld
scas
xchg
pop
nop
pusha
test
jg
daa
fsubp
arpl
cmp
xchg
clc
pop
sub
dec
sbb
js
adc
push
fist
cmc
mov
jle
mov
(bad)
lea
or
and
test
pop
hlt
(bad)
pop
xlat
xchg
cmp
retf
mov
inc
popa
push
pop
pop
jp
jbe
scas
lea
mov
xchg
popa
test
neg
jno
sbb
push
and
(bad)
outs
add
mov
mov
pop
jle
add
retf
enter
sbb
mov
mov
pop
fld
inc
(bad)
lods
call
repnz
stc
(bad)
jns
das
(bad)
clc
je
sub
jl
(bad)
cmp
mov
imul
mov
dec
adc
push
add
adc
aaa
aaa
daa
ja
cmp
les
rcr
mov
inc
fbld
imul
xor
lds
test
sub
imul
loopne
mov
outs
cmp
xor
pusha
mov
push
int
movs
mov
imul
push
dec
bound
xchg
and
std
push
aad
push
mov
mov
(bad)
hlt
out
rcr
jg
cmp
jp
fistp
xchg
push
movs
ficom
and
cmp
imul
push
mov
jmp
out
jge
mov
sub
or
jo
popf
sbb
(bad)
sar
mov
stos
ficomp
cmp
jno
push
ins
test
(bad)
outs
push
imul
or
adc
(bad)
imul
push
scas
sub
cmp
jmp
cmps
mov
jmp
test
mov
sub
mul
je
and
xchg
scas
sub
mov
aaa
xchg
cmps
pop
jl
push
es
xor
pop
lods
out
cmp
aaa
adc
out
dec
cdq
xchg
cmp
repz
mov
icebp
repnz
sbb
xor
mov
in
gs
xchg
inc
out
pop
sub
pushf
(bad)
les
inc
mov
adc
pop
xchg
aad
inc
dec
movs
(bad)
js
mov
inc
call
dec
sti
stos
fiadd
or
fwait
mov
popa
sub
shl
xchg
stos
xchg
or
and
call
dec
mov
ret
sub
mov
mov
inc
jb
in
sub
cmp
cmp
cs
fnsave
in
push
repnz
mov
div
ret
sub
adc
inc
mov
rcl
inc
xchg
xchg
(bad)
inc
sub
gs
sti
sti
mov
cli
mov
cmp
xor
push
aam
push
enter
add
(bad)
aas
lods
mov
inc
shr
dec
and
sub
add
adc
dec
fnstenv
dec
inc
add
sbb
jnp
out
movs
mov
push
lods
xchg
mov
fild
inc
adc
enter
cmp
jno
data16
xchg
lods
xchg
adc
or
rol
imul
xor
dec
jp
jbe
fstp
mov
jmp
sbb
xchg
aam
mov
push
addr16
aad
push
dec
mov
je
jg
test
xchg
xchg
push
imul
xor
jb
sbb
pop
mov
xchg
sub
call
push
imul
cld
call
add
jo
test
jno
sbb
xchg
aad
jp
jb
cwde
cmc
xchg
aam
imul
cli
xchg
jg
xor
sti
das
scas
movd
mov
inc
dec
push
(bad)
xchg
scas
mov
adc
ins
sbb
fisttp
dec
movs
movs
leave
into
lods
(bad)
pushf
xchg
scas
cmp
rcl
js
loopne
push
mov
mov
mov
jg
movs
cmps
aas
in
mov
mov
(bad)
int3
imul
out
sub
push
pop
adc
arpl
pop
leave
sahf
pop
aas
push
(bad)
in
call
push
jl
in
adc
xchg
pop
out
mov
cmps
scas
aaa
sub
dec
xchg
xchg
push
xchg
ss
cmc
and
and
ja
mov
fs
sub
lahf
out
jge
enter
(bad)
std
push
call
adc
push
ins
mov
ja
idiv
cmps
gs
outs
dec
xchg
fwait
jb
mov
(bad)
xchg
bnd
cmp
sti
pop
mov
(bad)
hlt
test
addr16
and
xor
movs
fwait
jae
jmp
jno
dec
jno
sbb
and
inc
(bad)
into
mov
gs
mov
push
jbe
repnz
cli
push
ja
pop
aas
adc
xchg
jmp
cmc
es
and
gs
xchg
push
les
addr16
scas
retf
pop
dec
test
ins
and
mov
or
jns
pop
test
push
lods
push
gs
push
das
je
and
in
mov
gs
(bad)
xor
adc
jle
pop
fnstenv
js
std
pop
js
shl
fnstcw
pop
imul
dec
cmps
iret
(bad)
pop
sub
pop
scas
sbb
hlt
icebp
adc
dec
test
mov
push
pop
stos
jns
outs
dec
fsub
daa
fiadd
jge
push
mov
dec
cmps
enter
mov
inc
fldcw
sbb
mov
and
mov
stc
push
ret
inc
dec
into
dec
mul
inc
sbb
cli
mov
dec
retf
jle
sbb
jne
aas
mov
push
sub
xor
stos
cmp
fimul
mov
jb
push
push
dec
cs
lods
test
rcl
cmc
mov
inc
mov
fmul
pop
dec
and
fnstcw
pop
outs
lods
cmp
adc
loop
cmps
jbe
out
out
mov
cld
cmp
fnsave
out
pop
fwait
clc
ds
dec
les
pop
mov
or
sbb
fsubr
push
dec
cwde
popf
jne
mov
lahf
cli
xor
push
scas
pop
xor
(bad)
imul
sub
mov
call
ficomp
not
adc
pop
pop
mov
adc
dec
mov
sub
dec
cmp
clc
dec
imul
push
rcl
xchg
push
push
dec
jle
fcmove
je
popf
stos
test
push
push
push
adc
pop
mov
push
push
xchg
(bad)
xchg
pop
out
in
mov
out
clc
mov
and
push
push
fcom
pop
mov
dec
shl
pusha
ficomp
movs
int
lea
repz
mov
pop
jle
lfs
inc
pop
not
fst
imul
shl
outs
cmps
push
fwait
mov
xchg
jb
mov
(bad)
rol
push
jmp
mov
movs
xchg
jecxz
and
inc
jae
push
or
push
dec
jmp
add
dec
sub
dec
xchg
inc
jmp
mov
jns
aad
outs
mov
jmp
fild
aam
xor
sub
movs
retf
not
xor
pop
mov
xor
or
out
ja
lahf
movs
push
mov
jb
ror
ins
and
mov
sahf
lods
dec
test
sub
out
jmp
cwde
loope
out
mov
dec
jne
pop
push
mov
scas
arpl
xchg
xchg
dec
add
xor
ss
stc
pop
jg
clc
in
jecxz
sti
jecxz
dec
jne
jmp
fnstcw
cmp
popf
pop
mov
aam
inc
jb
aas
sub
pop
mov
stc
inc
jns
loope
and
xchg
ins
pcmpgtd
cmp
sub
(bad)
cmp
imul
rcr
sbb
(bad)
int3
repz
mov
aad
pop
in
out
dec
cmp
mov
fwait
jae
retf
pop
mov
pop
ficom
test
aad
ins
mov
push
mov
jmp
outs
inc
xchg
pop
jne
mov
test
bound
mov
test
popa
sub
jne
push
adc
fwait
hlt
sbb
xor
shr
cmps
retf
js
rol
inc
adc
mov
movs
push
jmp
call
enter
push
push
inc
repz
mov
iret
rol
xor
mov
stos
and
ja
jecxz
push
cmps
sub
in
mov
dec
mov
pop
ds
jecxz
jne
mov
pop
rol
and
and
xchg
pop
dec
stos
nop
push
pop
xor
mov
leave
mov
shl
loope
inc
ins
inc
imul
stos
or
xchg
test
jo
or
inc
adc
jecxz
ret
adc
sub
les
movs
loope
fisub
(bad)
lahf
lock
loope
jbe
and
mov
lahf
outs
dec
push
ins
adc
loopne
std
xchg
mov
das
in
mov
hlt
(bad)
push
fwait
pop
push
mov
int3
div
cs
jle
in
lahf
scas
adc
mov
ss
bound
cdq
xchg
push
lods
add
dec
xor
retf
dec
pop
ins
xor
movs
and
gs
icebp
cli
arpl
(bad)
in
imul
push
mov
jnp
mov
imul
inc
pop
mov
ins
stc
lock
sti
xchg
sub
fsub
jmp
pushf
mul
stos
fld
sahf
ins
retf
xchg
lods
adc
test
iret
pop
xor
cmps
push
sti
mov
fstp
stc
sahf
fstp
mov
fs
jle
pop
push
jg
dec
push
lahf
mov
and
mov
loope
mov
add
mov
mov
out
imul
movs
add
lods
int3
mov
mov
packuswb
push
inc
push
mov
push
test
std
movs
jg
mov
retf
inc
popa
add
in
cmp
add
arpl
stos
(bad)
aaa
xor
mov
fdivr
dec
jns
adc
das
add
sub
mov
push
popa
(bad)
out
lods
pop
test
test
push
xchg
cmps
push
fwait
(bad)
test
push
sbb
mov
push
pop
enter
adc
jb
in
push
lods
test
in
mov
pop
xchg
imul
jl
(bad)
pop
or
cmp
xchg
jg
fnstsw
inc
pop
int
mov
mov
lea
imul
out
dec
stos
cmp
bound
jmp
je
stc
(bad)
arpl
arpl
stos
mov
jnp
fxch
lods
mov
xchg
neg
mov
add
cmc
scas
mov
pop
stc
lahf
ds
ins
mov
lock
fcmovnu
sub
pop
aam
fimul
ret
jae
es
jmp
stos
jo
lods
test
adc
int3
rcl
mov
mov
xchg
xchg
jmp
cmp
ja
cmps
sub
stos
push
cmp
or
ror
movs
mov
mov
call
outs
sbb
push
mov
and
cmp
cld
ds
and
nop
shr
call
lods
fld
jecxz
jmp
jne
int3
push
lock
mov
sahf
push
and
inc
sar
and
mov
xor
mov
sbb
in
shl
fs
push
outs
cmp
sbb
xchg
cmp
mov
jo
ret
mov
lods
xchg
jmp
(bad)
pop
test
xchg
or
movs
jmp
gs
ins
jp
stos
push
mul
cld
div
xchg
sub
push
sahf
mov
(bad)
and
cmp
mov
dec
jl
outs
fst
push
call
xor
jle
jo
test
xor
jbe
or
pop
lods
test
scas
fnsave
add
push
dec
add
sub
in
fist
test
push
sbb
ret
loop
cmps
lods
jns
jg
jns
scas
cmpps
fsub
cmp
(bad)
mov
jle
frstor
das
ret
cmp
les
jl
retf
scas
sub
jge
cmp
mov
adc
push
movs
movs
rol
out
retf
jle
mov
pop
xchg
and
cmp
sub
aad
push
dec
fsubr
dec
ficomp
in
retf
cdq
inc
pop
sbb
push
mov
ficomp
mov
int
and
fist
xchg
push
stos
xchg
sub
shl
mov
sub
mov
dec
fld
cmp
dec
retf
test
int3
sbb
xchg
mov
inc
lds
xchg
int
mov
std
test
stc
cmp
wbinvd
pop
push
repnz
out
outs
jmp
mov
lock
(bad)
jbe
and
xor
fwait
jbe
push
push
gs
mov
test
inc
in
xchg
into
stc
(bad)
mov
ficomp
retf
shr
or
pop
imul
sti
inc
or
fisttp
pop
jnp
mov
adc
fisubr
mov
stos
hlt
cmp
pushf
(bad)
jecxz
mov
popf
xchg
jb
aad
movs
inc
or
imul
xchg
fstp
ds
dec
pop
sahf
and
test
retf
dec
sub
pop
fist
sub
cmps
addr16
popf
hlt
leave
jg
jmp
fwait
dec
jne
push
push
cmc
mov
cmps
in
shr
fneni(8087
push
(bad)
jns
cmp
cmp
jmp
pop
subps
jmp
jg
xor
push
add
pop
add
adc
or
stos
push
cmp
sub
xchg
push
jg
xchg
fild
fisttp
cmps
cmp
and
dec
cmp
mov
lock
fdiv
jmp
jle
mov
dec
dec
fs
retf
pop
mov
dec
xchg
xchg
jge
adc
test
sahf
(bad)
leave
jo
data16
setnp
addr16
lea
push
movs
dec
dec
es
test
in
ror
dec
stc
fcom
sub
jo
test
xor
fnstcw
test
mov
mov
scas
and
add
(bad)
(bad)
mov
mov
fld
fwait
jle
or
ja
sub
mov
nop
jge
into
push
(bad)
addr16
pop
add
sub
dec
xchg
mov
dec
xchg
imul
cmp
fnstcw
mov
sbb
jge
lock
addr16
or
inc
jno
push
jle
fsubr
sti
repz
outs
cmp
ret
movs
xchg
ss
ins
dec
lods
add
cs
cwde
jmp
xor
pop
adc
shl
cs
adc
adc
(bad)
rcl
mov
test
sub
mov
cs
clc
fcomp
aad
adc
cmp
loope
cdq
bound
jp
pop
scas
ficom
xor
mov
daa
fwait
je
bound
shr
sahf
addr16
dec
sbb
mov
ds
xlat
cld
jl
scas
cmp
push
dec
setp
push
mov
push
idiv
cmp
pop
(bad)
jg
test
cs
xchg
loopne
lea
mov
push
repz
cmp
sub
push
ss
inc
sub
sub
movs
dec
and
dec
out
add
add
addr16
pop
sub
or
leave
inc
push
push
jo
pop
hlt
jge
xchg
push
pop
out
(bad)
lea
or
jge
test
jge
out
add
jl
lods
dec
jns
(bad)
cs
out
outs
outs
fcomp
push
or
xlat
out
inc
std
mov
dec
mul
push
call
retf
adc
addr16
shl
push
pop
jle
mov
inc
and
out
shl
xor
mov
pop
push
push
fstp
scas
and
and
rcl
sub
jl
out
jle
ror
and
jecxz
jmp
std
(bad)
ins
gs
xchg
mov
cld
dec
mov
cmps
retf
shr
loopne
pop
inc
pop
mov
inc
imul
adc
jmp
xchg
(bad)
xchg
test
bound
jnp
or
scas
pop
xchg
jne
adc
enter
rol
cmp
adc
or
(bad)
push
push
nop
retf
lea
rcl
sub
aam
cmp
jbe
and
loopne
mov
add
dec
pop
(bad)
sbb
inc
xchg
in
sub
dec
cs
mov
xchg
add
or
aam
div
idiv
repz
add
pop
adc
cmp
dec
enter
(bad)
pop
fldcw
jge
mov
cmp
lea
fs
clc
sbb
jmp
mov
leave
jne
inc
lods
cmp
push
imul
gs
dec
dec
and
test
xor
jno
sub
sub
jo
xchg
imul
imul
inc
call
(bad)
movs
jmp
pop
data16
rcl
dec
lock
xchg
mov
call
out
test
pop
fcom
inc
inc
mov
lods
cmps
sub
pop
test
mov
jns
cmps
enter
mov
int3
fcomp
in
test
add
cmp
jb
xor
jl
adc
mov
test
lahf
xor
jbe
or
push
dec
out
ss
lods
cs
repnz
mov
and
fdiv
sub
add
fisub
test
int
mov
and
pop
imul
retf
jo
les
cmps
jnp
retf
dec
sub
popf
add
stos
in
jecxz
xchg
pusha
out
mov
out
(bad)
fisubr
sub
ret
dec
movs
popf
lods
lahf
idiv
repz
dec
je
push
mov
inc
cmp
scas
call
ds
loop
ret
and
dec
xor
ins
mov
cmp
imul
pop
popa
add
test
not
loop
lods
fsubr
int3
popa
lock
sub
jl
out
aam
sahf
cdq
pop
inc
jl
lods
out
xchg
mov
xchg
jns
rcr
inc
cld
push
hlt
jp
mov
inc
jmp
test
jecxz
out
sub
outs
test
fisttp
or
fbld
pop
pop
(bad)
mov
mov
adc
cmps
fisubr
popa
jmp
pushf
addr16
mov
mov
jbe
aam
jg
cmp
cmps
jp
cmp
sub
rol
sahf
cmps
pop
sahf
xor
push
xchg
pop
dec
mov
ins
fwait
in
scas
jns
adc
mov
neg
outs
popa
dec
retf
int3
jb
std
call
ds
cld
ror
pop
mov
xchg
sub
cmp
xchg
outs
imul
mov
(bad)
int
xor
mov
call
sbb
call
mov
sub
dec
in
mov
shl
stos
lds
cmps
sbb
into
retf
mov
jns
sub
retf
pop
jle
fsub
in
aas
addr16
xchg
(bad)
out
push
jl
mov
(bad)
pop
dec
jns
push
xlat
and
popa
cdq
push
out
jmp
cld
push
xor
ss
movs
lods
(bad)
or
(bad)
retf
daa
pop
inc
cmc
fidiv
jb
not
sub
std
or
add
mov
paddw
mov
mov
xchg
stc
push
inc
push
inc
dec
mov
mov
call
cdq
adc
sbb
pusha
push
scas
push
cwde
or
sbb
les
mov
cld
cmp
cmps
inc
push
out
or
in
dec
xchg
cmc
jnp
adc
mov
(bad)
int3
mov
inc
aas
xor
dec
add
ret
shr
mov
mov
cmp
in
mov
iret
adc
das
js
mov
(bad)
ficomp
inc
mov
dec
xchg
xor
jl
aas
pop
pushf
inc
fdiv
in
mov
jmp
jns
fs
mov
test
push
lahf
dec
sub
out
repnz
fisubr
and
shr
sbb
push
(bad)
pop
js
std
retf
fcomi
cmc
daa
xchg
xor
lea
xchg
ins
sub
push
enter
test
ds
aas
adc
pop
stc
cwde
stc
imul
mov
in
or
test
cs
popf
pop
mov
mov
dec
and
out
sub
dec
pop
iret
ss
pop
mov
neg
dec
xchg
loopne
out
lock
jmp
pop
inc
pop
clc
pop
mov
jg
hlt
cdq
(bad)
xor
fs
jbe
xor
inc
mov
jnp
push
cmp
add
call
lods
cld
stos
in
jnp
xlat
inc
dec
mov
test
inc
jmp
jecxz
data16
ja
xor
sbb
mov
ss
jno
or
arpl
jno
pop
and
mov
aas
mov
push
cmp
inc
pop
cld
repz
imul
mov
or
inc
jmp
adc
lds
mov
push
mov
xchg
daa
aam
stos
arpl
mul
push
xchg
pop
and
pop
gs
jecxz
fistp
add
ret
neg
(bad)
loope
or
dec
rcr
push
mov
repz
rcl
mov
xor
pop
test
jge
cs
jno
cmovl
pushf
mov
jo
cmp
fwait
imul
mov
pop
cmps
pop
out
add
mov
loop
push
js
pop
or
pop
shl
movs
xlat
arpl
inc
(bad)
jge
xchg
mov
(bad)
in
mov
pop
int
jp
inc
sar
jl
jmp
xlat
outs
mov
leave
mov
lods
push
push
test
(bad)
repnz
stos
xchg
mov
or
out
rol
lahf
popf
iret
adc
cmps
inc
ja
fcmovu
jg
cld
repnz
mov
iret
ins
or
imul
test
cmp
retf
inc
call
xchg
pop
loope
shl
shr
(bad)
xlat
dec
lds
out
cli
pop
cdq
test
out
stos
shr
dec
push
and
out
scas
cmp
jnp
xchg
ror
mov
fcomp
mov
idiv
(bad)
js
or
jno
outs
imul
mov
mov
movs
adc
mov
pop
fdiv
aad
xor
mov
out
adc
and
mov
(bad)
aam
push
(bad)
pushf
inc
pop
(bad)
sbb
movs
icebp
(bad)
cdq
loop
pop
fcomp
cld
adc
out
bnd
pop
jno
js
gs
jecxz
imul
retf
dec
add
outs
fld
cmp
daa
mov
das
sub
test
sub
push
mov
mov
cld
(bad)
push
cwde
iret
cmovae
push
js
push
daa
jne
in
call
push
mov
imul
xchg
push
sub
dec
jmp
scas
sub
int
movs
mov
test
jae
cmc
cs
adc
aad
push
mov
mov
jecxz
std
setg
inc
push
jo
xchg
stos
(bad)
dec
stos
inc
lock
ret
lea
pop
dec
sahf
and
and
daa
sbb
jmp
sbb
cdq
ror
xor
inc
push
xor
jecxz
ret
sbb
loop
mov
cwde
cmps
xchg
(bad)
push
std
sub
cs
out
(bad)
mov
std
iret
cmps
mov
mov
out
jg
mov
jno
es
out
sub
and
fcomp
push
(bad)
call
imul
sbb
mov
sub
sub
jae
stc
adc
xor
xor
in
inc
inc
and
jmp
movs
xchg
loopne
ins
or
sbb
add
inc
shl
call
and
mov
pop
xchg
std
je
dec
outs
stc
xchg
aad
int3
mov
cmp
inc
cmc
push
jmp
mov
mov
mov
(bad)
push
xchg
push
inc
inc
inc
shr
mov
dec
ds
sbb
add
enter
call
adc
das
pop
addr16
ret
dec
lds
sbb
sub
fs
imul
dec
imul
xor
lods
aam
push
in
xchg
dec
frstor
imul
xor
fstp
dec
or
jns
(bad)
push
or
in
pop
scas
jbe
xor
bound
addr16
stos
shr
and
mov
mov
mov
dec
pop
jnp
in
rcr
ins
ret
mov
pop
cmc
scas
or
cmp
jp
lods
mov
movs
rcl
sbb
es
mov
add
push
push
mov
cdq
popa
jno
ja
popa
cdq
popa
(bad)
test
sub
mov
lods
mov
xchg
pop
ins
neg
pop
int3
fld
sbb
adc
or
push
out
jmp
mov
fild
jo
pop
mov
ins
cli
ret
push
mul
jns
push
ja
int3
xchg
or
sub
mov
ja
cld
out
outs
sub
test
aas
mov
jge
sub
sti
mov
lods
arpl
cwde
pop
push
add
jbe
push
(bad)
sbb
shl
ret
push
sbb
push
into
lds
jmp
(bad)
jno
mov
inc
add
mov
aam
and
sbb
dec
daa
cli
mov
pop
push
mov
and
push
mov
jo
and
push
mov
lea
arpl
sbb
fucomi
(bad)
or
in
mov
cdq
or
add
mov
shl
push
popf
mov
lea
addr16
pop
inc
pop
adc
call
(bad)
pop
xor
pop
xchg
dec
outs
inc
and
push
push
fucomi
push
pop
retf
adc
mov
dec
add
xor
fbstp
xchg
pop
adc
adc
inc
or
je
mov
stc
in
bound
and
lds
dec
mov
dec
int3
add
pop
ficomp
ficomp
jl
xchg
jecxz
ins
mov
adc
ror
mov
(bad)
daa
dec
mov
mov
mov
dec
pop
adc
jmp
out
(bad)
mov
adc
test
popa
dec
push
sub
add
xchg
adc
and
popf
mov
test
dec
test
cmps
dec
xchg
dec
mov
js
rcl
loop
xlat
add
add
jecxz
inc
mul
pusha
jge
dec
lds
mov
cmp
outs
icebp
or
and
stos
outs
xchg
fcom
jo
mov
mov
cmp
rcr
inc
shl
adc
test
cwde
and
pop
inc
adc
add
add
add
jno
aas
xchg
xor
jle
add
push
sti
ret
mov
pop
sub
pop
mov
inc
imul
cs
sbb
or
jecxz
dec
and
iret
add
mov
cli
loop
push
je
fwait
jp
retf
sub
sub
call
xchg
cmp
cmps
int3
dec
ins
mov
gs
test
mov
xchg
retf
jb
xor
or
sbb
jne
push
sti
mov
popf
mov
movs
jne
clc
xchg
xor
lods
dec
dec
pop
stos
cmp
(bad)
in
mov
scas
aas
outs
sahf
and
dec
out
dec
ins
xchg
push
mov
popa
gs
ficomp
pop
nop
test
and
repnz
into
loope
lods
mov
aaa
push
mov
in
in
lods
jnp
xchg
shl
cmp
jmp
and
xchg
push
shl
pop
les
mov
mov
jp
fwait
inc
mov
push
dec
xor
imul
out
sbb
shl
int3
push
nop
jbe
pop
fldl2e
xor
jns
mov
stos
es
mov
pop
aaa
iret
mov
int
jb
adc
je
mov
mov
inc
popa
stos
sahf
das
pop
cmc
les
dec
cwde
aad
cmp
sub
test
repz
repnz
xchg
jecxz
ins
lds
jecxz
imul
cs
pop
imul
pushf
shr
mov
xchg
cld
int
scas
shl
aad
jmp
or
addr16
outs
fiadd
pop
xor
mov
sub
aas
test
pop
xchg
test
and
push
nop
add
repnz
sti
or
scas
sub
cs
xchg
push
fld
je
outs
xchg
add
and
push
call
add
fadd
cs
imul
ds
jg
repnz
(bad)
jmp
(bad)
adc
sbb
(bad)
pop
loopne
ficomp
or
sub
in
sbb
sbb
sar
into
mov
xlat
stc
mov
jecxz
push
clc
int
jg
push
leave
jae
pop
sub
ficom
jne
sub
test
and
add
push
neg
xor
push
cmps
pop
mov
jbe
inc
xchg
gs
fidivr
fist
call
push
mov
aas
addr16
ja
popf
or
pop
sbb
push
fisttp
xchg
aad
ret
xchg
add
lea
bound
pop
jno
aam
push
shl
mov
xor
(bad)
loop
test
and
cdq
into
repnz
sub
jecxz
sbb
dec
stos
lods
mov
lods
jbe
(bad)
xchg
js
sub
xor
in
icebp
mov
ror
cmp
lock
cmps
push
sub
push
fistp
movs
test
push
iret
es
(bad)
ins
and
dec
cmp
cmp
cmp
push
(bad)
xchg
sub
cmp
mov
lods
retf
cmp
fisubr
aam
scas
mov
jg
mov
sub
(bad)
jno
call
aam
mov
xchg
mov
jne
and
fidiv
xchg
jb
xchg
push
loopne
sbb
xchg
ret
aaa
popf
cmp
mov
mov
ins
lahf
aad
in
outs
jno
sub
push
xchg
pop
push
test
cmp
pop
int
mov
xor
int3
jg
sbb
pop
lock
fdivr
xchg
data16
jo
fldcw
dec
mov
(bad)
bound
sub
aas
std
inc
mov
inc
inc
jbe
shl
inc
popf
pop
cld
xor
test
pop
mov
xor
hlt
xchg
dec
mov
cmps
cmps
mov
stc
cwde
add
jge
xor
dec
hlt
loope
enter
test
stc
arpl
and
retf
jmp
sti
sbb
hlt
cwde
push
xlat
cmp
stc
call
jecxz
ret
scas
jl
imul
xchg
lods
iret
rcl
mov
cwde
out
lds
sub
and
out
fs
xchg
in
sahf
sti
or
jno
mov
out
call
jp
movs
push
out
adc
rcr
jnp
inc
mov
mov
dec
jo
out
or
sub
pop
ja
adc
sub
cmp
xchg
pop
fs
test
mov
jmp
dec
mov
call
stc
dec
js
push
mov
or
pop
xchg
std
sbb
fidiv
loop
lds
loopne
call
sbb
frstor
fcom
dec
es
mov
cmps
dec
inc
sub
enter
adc
shl
adc
das
or
fsub
mov
(bad)
lods
lahf
pop
stc
cmp
sbb
mov
push
sbb
mov
out
jp
test
lods
or
test
sbb
jecxz
or
pop
lods
test
jmp
sub
sbb
out
bnd
or
sub
or
fbld
addr16
and
xchg
mov
test
and
dec
movs
loopne
popf
test
mov
push
dec
xchg
add
fistp
(bad)
sahf
xchg
lods
cdq
xchg
sub
jno
ret
dec
(bad)
and
fwait
out
movs
in
mov
push
xchg
adc
adc
mov
popa
cmp
cmps
dec
pop
in
fadd
mov
cmp
idiv
retf
popa
pop
es
(bad)
or
fsub
xor
movs
cmp
dec
sub
pcmpeqb
cwde
in
out
sub
mov
imul
call
jno
xchg
and
and
shr
repz
xor
inc
pop
jmp
mov
imul
mov
test
sub
lock
adc
pop
mov
int
pop
cmps
xor
and
leave
push
push
popa
sbb
jne
stos
dec
(bad)
sar
mov
xchg
frstor
push
lods
aaa
or
and
sub
std
stos
mov
xor
cmc
int
mov
and
push
jg
(bad)
push
fistp
cmp
retf
jecxz
jmp
push
call
jge
std
pop
push
mov
mov
loop
mov
cld
pop
pop
mov
dec
or
pop
jo
nop
shl
outs
and
fs
rcr
aas
xor
lahf
or
push
cdq
mov
jo
test
hlt
lods
in
lahf
jbe
aam
dec
movs
iret
mov
sub
pop
fsubr
cmp
stos
loop
arpl
test
loop
cdq
jbe
sub
mov
(bad)
std
jno
into
cmp
pop
xchg
aam
test
jg
inc
leave
mov
fwait
mov
xchg
push
sub
sub
or
int
cmps
iret
mov
rcr
mov
fcomp
cmps
mov
enter
sti
inc
retf
sahf
adc
das
dec
sub
sub
das
out
add
movs
pop
retf
sub
inc
in
sar
jg
fwait
sahf
mov
push
gs
in
lahf
cmps
int
cld
mov
fdiv
push
mov
sbb
and
inc
sbb
inc
adc
leave
inc
ret
push
imul
in
jae
cmc
xor
mov
leave
mov
or
mov
mov
cdq
ret
ins
cmp
push
xor
sub
push
fld
int
scas
(bad)
jmp
and
sub
movs
sub
aam
imul
fs
mov
mov
pop
out
stos
loop
mov
mov
adc
fidiv
retf
jecxz
mov
arpl
xchg
xlat
mov
mov
dec
sti
jno
into
fnsave
imul
in
(bad)
stos
retf
and
xchg
xchg
add
call
imul
(bad)
dec
and
fs
dec
inc
adc
pop
das
outs
jmp
call
push
or
ror
xor
cmp
pop
xchg
sub
pop
das
mov
retf
loopne
sub
sub
mov
cs
mov
dec
retf
mov
sar
mov
(bad)
(bad)
jae
retf
mov
movs
cmp
sti
xchg
rcl
out
rcr
repnz
(bad)
popa
sub
mov
pop
dec
das
jnp
lahf
fimul
js
jmp
mov
fistp
(bad)
fisttp
or
push
dec
push
xchg
movs
sub
icebp
cmp
js
clc
shl
cmps
cmp
test
aas
imul
dec
xchg
fs
int
(bad)
jmp
fs
imul
cli
arpl
(bad)
adc
mov
mov
cmp
fld
push
push
cmp
push
pop
inc
or
fwait
mov
idiv
mov
jl
jno
jge
loope
sbb
(bad)
iret
or
imul
cli
jge
push
xchg
mov
mov
xchg
sbb
push
jns
mov
int3
(bad)
je
in
repz
vpshaq
mov
mov
cmc
fild
mov
xchg
loop
loopne
aam
pop
or
outs
es
cld
push
clc
xchg
pop
cmp
lock
pop
push
and
scas
retf
mov
mov
aam
movs
xor
js
push
fs
(bad)
cld
mov
dec
fnstcw
jge
in
add
mov
xor
pop
(bad)
int
push
(bad)
data16
mov
ja
push
sub
dec
cs
ret
xchg
aam
stos
dec
in
pop
and
loope
scas
(bad)
mov
inc
xchg
xor
cs
gs
xchg
mov
in
repz
leave
and
js
loopne
(bad)
sbb
test
rol
push
sar
mov
cmc
inc
scas
adc
sar
popa
pop
call
mov
(bad)
(bad)
div
lea
icebp
movs
mov
aam
xor
mov
push
mov
nop
stos
push
push
inc
aam
stc
push
xchg
xor
test
mov
(bad)
xchg
adc
sbb
fisttp
pop
ins
outs
add
rcl
les
sub
cmp
mov
adc
xor
jb
push
jl
clc
mov
dec
scas
iret
push
and
jmp
xchg
out
leave
in
sub
cmp
lea
bound
sbb
jl
test
scas
cmp
outs
cmp
jae
mov
aad
xchg
int
loop
(bad)
jecxz
lods
lods
lock
jbe
add
xchg
(bad)
sub
push
test
or
repz
hlt
test
pop
aad
jle
jb
sahf
push
mov
stos
cli
adc
xchg
(bad)
icebp
pop
mov
sbb
loop
jmp
fistp
clc
jbe
adc
lock
adc
and
aam
outs
and
push
bound
mov
jmp
mov
pop
pop
scas
sub
ficomp
ss
mov
dec
sahf
push
(bad)
(bad)
xor
mov
mov
xchg
push
mov
out
retf
movs
lock
dec
fwait
sub
xor
cmp
mov
pop
push
popf
jae
test
cmc
jbe
push
mov
sub
aam
jne
dec
dec
gs
inc
imul
jo
add
jne
sub
test
test
push
push
outs
jmp
jle
loope
sbb
jns
cmp
lock
and
cld
hlt
pop
push
mov
pop
adc
sbb
(bad)
cmps
push
sub
jnp
(bad)
repz
inc
data16
jnp
inc
je
mov
arpl
scas
mov
xchg
push
shl
ins
sti
mov
into
push
cmp
cmp
xlat
adc
xlat
or
sub
(bad)
fwait
xchg
call
repz
mov
sar
popf
popa
dec
dec
push
inc
sbb
push
cdq
enter
cmp
sbb
xchg
cli
inc
adc
jle
stos
inc
sti
das
fdiv
out
mov
inc
mov
es
in
add
xor
xor
test
inc
icebp
aaa
or
xor
jbe
add
cs
mov
repnz
int
(bad)
js
je
pop
or
add
mov
inc
cdq
sbb
sti
push
cli
aam
lahf
sar
push
cmps
inc
inc
sub
cmp
dec
lods
mov
(bad)
cmc
mov
add
sub
sbb
xor
dec
std
call
push
popf
sbb
fnstcw
mov
pop
jmp
cmps
int
sbb
les
add
movs
sti
ins
ret
js
dec
int3
push
ret
jg
xor
retf
xchg
and
movs
repz
inc
pop
pop
iret
mov
fdivr
rep
cmp
sbb
aam
adc
mov
jecxz
cld
cmp
mov
or
xchg
ja
dec
scas
mov
mov
call
cs
test
aad
mov
or
mov
lods
vmwrite
or
arpl
pop
les
mov
and
push
pop
sub
ja
mov
mov
add
push
test
das
push
in
mov
cmps
(bad)
inc
retf
push
rcl
icebp
xor
ret
mov
jg
mov
stc
sbb
scas
ret
pop
cwde
cld
imul
push
(bad)
add
sub
mov
cmps
scas
or
lods
sub
inc
dec
in
jae
pop
int
mov
inc
push
in
les
inc
test
jmp
mov
ins
in
ins
fbld
cdq
retf
mov
imul
jnp
scas
icebp
xor
xchg
pop
sahf
adc
push
daa
aaa
xor
aad
(bad)
adc
shl
ins
xchg
xchg
xchg
pusha
xchg
xchg
mov
inc
xchg
mov
call
mov
mov
cmp
xchg
mov
dec
inc
push
movs
retf
mul
mov
cmps
inc
xchg
mov
and
not
push
mov
cmp
mov
test
lds
aam
mov
leave
dec
or
add
cmps
xchg
jbe
dec
aaa
fwait
aas
cld
test
jg
xlat
sbb
jmp
int
push
(bad)
ins
js
push
xlat
jnp
inc
dec
xchg
outs
mov
dec
jnp
xchg
enter
inc
and
push
adc
jo
mov
cmp
dec
xor
(bad)
stos
call
cli
mov
or
ret
sub
daa
pop
pop
out
cmp
(bad)
aad
repz
shl
push
push
cs
mov
enter
int3
lds
jne
jl
int
sub
xchg
shl
out
add
pop
mov
ret
adc
pop
ficom
mov
fisubr
leave
pop
ret
fidiv
aad
mov
mov
cmp
popf
test
mov
ficomp
mov
xchg
mov
xchg
outs
mov
dec
lods
cmps
imul
cmp
jae
imul
into
arpl
sbb
xor
std
push
cmps
aas
dec
xchg
in
inc
out
push
sbb
jb
xchg
loope
sub
push
ins
jae
gs
movs
inc
or
mov
xchg
sbb
jnp
aad
pop
push
(bad)
xor
fwait
lods
(bad)
fisubr
mov
ins
in
adc
jmp
call
ret
xchg
mov
and
xor
sbb
and
aaa
fsubr
pop
push
pop
(bad)
cmp
push
mov
dec
jmp
cs
inc
pop
adc
(bad)
(bad)
mov
jg
mov
ins
addr16
sub
imul
pop
int
mov
stos
xchg
jl
int3
jmp
inc
sbb
push
inc
and
dec
dec
stc
lahf
bound
inc
dec
mov
int
retf
lock
sbb
adc
js
dec
cmc
mov
mov
ja
lds
push
add
aad
sub
gs
arpl
(bad)
inc
fiadd
push
loope
sbb
cmc
push
xchg
scas
enter
in
push
pop
dec
push
gs
loopne
jecxz
test
out
lods
movs
popa
mov
mov
in
shr
mov
loop
popa
jmp
lods
jne
push
xor
outs
neg
cld
push
imul
sub
pop
push
stos
push
sahf
stos
(bad)
outs
mov
stos
push
out
mov
adc
lods
pushf
cmp
mov
mov
nop
xchg
inc
dec
cdq
mov
and
push
xchg
push
fwait
dec
push
xor
or
stos
(bad)
adc
(bad)
dec
ja
jbe
dec
into
sti
pop
fnstcw
pop
sbb
jb
aaa
jge
loope
imul
sbb
std
xor
leave
or
xchg
jns
push
xchg
xchg
xor
cdq
cli
mov
jmp
int
cli
pop
or
mov
dec
cmp
sub
mov
mov
or
xor
dec
pop
es
inc
mov
xchg
aam
mov
sbb
sub
fdiv
push
call
retf
xchg
clc
imul
call
push
in
pop
js
movs
mov
fnstcw
ror
das
in
push
push
push
dec
cwde
fcmovne
inc
test
pop
inc
mov
out
inc
dec
dec
popa
std
fistp
(bad)
(bad)
ret
inc
mov
lea
imul
xchg
push
shl
das
or
fsubr
imul
outs
ds
js
loopne
fld
lock
mov
xor
fwait
outs
dec
les
fcmove
test
dec
sbb
sbb
or
mov
test
in
aad
loopne
call
test
popa
push
mov
outs
dec
lods
sub
xor
adc
lock
dec
test
movs
cmps
pop
call
cmps
jmp
popa
jle
pop
popa
(bad)
adc
out
movs
mov
(bad)
mov
adc
in
stos
mov
movs
js
inc
pop
mov
ins
fisttp
(bad)
out
leave
sub
cwde
and
test
imul
fmulp
and
mov
in
dec
popf
sbb
stos
xor
push
data16
push
push
or
stos
dec
out
push
pop
sbb
inc
fcmovu
xor
xchg
push
dec
scas
jmp
jns
inc
push
fwait
mov
ss
fmulp
(bad)
int
fcomp
dec
dec
dec
mov
mov
xchg
mov
push
cmp
leave
mov
leave
jnp
fwait
mov
das
cld
xchg
push
mov
inc
inc
xor
adc
sub
aas
inc
rcr
adc
stos
dec
aad
xchg
inc
sub
(bad)
push
enter
and
jae
out
jmp
pushf
stos
std
mov
push
jne
mov
mov
(bad)
(bad)
jmp
and
clc
cmp
into
ins
sar
mov
aam
inc
fisttp
dec
fidiv
test
dec
int3
and
sahf
pop
(bad)
jo
shl
mov
(bad)
pusha
daa
inc
dec
imul
cmp
push
or
pop
jnp
cmp
popf
jne
repnz
pop
sbb
dec
cdq
fld
in
cmps
fwait
dec
mov
xlat
sub
(bad)
adc
push
xchg
xor
push
aas
inc
inc
(bad)
lods
adc
ret
push
clc
out
arpl
xchg
repnz
aaa
mov
sub
cld
adc
and
jne
repz
ins
sar
or
scas
ins
fdivrp
add
cmps
les
push
repz
int3
add
lahf
je
jno
mov
ins
shl
xchg
dec
add
inc
sub
add
out
pushf
out
dec
mov
add
out
arpl
adc
ffree
mov
(bad)
cmc
dec
in
mov
jmp
and
pop
test
jmp
sub
or
(bad)
pop
and
or
cmp
test
jmp
mov
fcomi
pop
in
scas
repnz
dec
push
push
imul
pushf
sbb
inc
xlat
les
lahf
jo
cmps
aaa
dec
mov
es
loopne
mov
adc
test
xchg
pop
jge
jb
mov
inc
je
std
sahf
sbb
push
and
mov
mov
imul
and
xor
mov
dec
pop
dec
jmp
into
mov
arpl
mov
cs
pop
push
jbe
(bad)
scas
xchg
pop
repz
stos
fdiv
fsubr
shr
ficomp
mov
scas
(bad)
(bad)
aad
jno
movs
sbb
test
jae
adc
test
rcl
xchg
test
cmp
xor
movs
cmp
adc
or
and
sub
aaa
fldcw
imul
mov
push
cmp
gs
test
scas
fnstsw
or
mov
sub
xchg
xchg
mov
aaa
jne
rcl
push
push
or
ror
sub
cwde
or
push
jmp
and
(bad)
fstp
xchg
bound
cwde
fmul
icebp
cmp
out
jnp
dec
jmp
cwde
arpl
xor
test
daa
or
push
xchg
fidiv
jge
cdq
mov
pop
mov
push
dec
ja
cld
cs
xchg
aam
loope
xchg
push
int
inc
xchg
popf
dec
adc
add
or
or
call
lock
mov
mov
jno
cdq
push
xchg
dec
out
rcl
push
pop
adc
jge
imul
jl
icebp
or
fidivr
test
push
jne
fimul
mov
push
jne
adc
xor
mov
and
aam
pop
dec
inc
dec
mov
jne
leave
pop
pusha
outs
push
retf
mov
pop
scas
fwait
arpl
sbb
xor
xchg
jle
and
jecxz
les
and
add
jns
lea
add
xchg
pop
pop
xchg
aaa
sbb
hlt
retf
fwait
pop
out
(bad)
in
jnp
mov
call
aam
push
icebp
mov
jbe
fst
xchg
fstp
sbb
mov
fnsave
aad
xor
shl
es
dec
xchg
push
pop
cwde
repz
lds
(bad)
retf
and
jns
inc
xchg
gs
sub
cmps
cwde
push
outs
pushf
pop
in
push
std
mov
out
sbb
sub
es
in
mov
xchg
mov
jg
out
mov
pop
inc
scas
int
test
pop
call
in
cmps
imul
repnz
imul
or
lock
sbb
(bad)
and
fsubr
or
sub
lods
rcl
scas
(bad)
dec
adc
cmp
sub
jo
dec
dec
xchg
pop
xchg
int
inc
imul
sbb
ins
outs
cmp
mov
cmp
out
cmps
fcomi
or
xchg
mov
sub
shr
sub
sub
addr16
test
pop
push
mov
shl
push
mov
(bad)
sbb
daa
dec
daa
and
mov
mov
lahf
loope
out
cwde
pushf
nop
or
fidivr
mov
dec
(bad)
loope
les
test
cs
out
lods
sub
(bad)
pop
mov
sbb
jle
push
xchg
pop
(bad)
out
sbb
xor
jno
lods
jmp
hlt
mov
out
push
xchg
(bad)
movs
pop
out
pop
jnp
jnp
mov
test
sar
das
imul
xchg
jl
movs
push
sub
mov
mov
xchg
cmp
clc
adc
retf
xor
jg
push
xchg
or
pop
jl
mov
sti
popa
sbb
loope
icebp
out
mov
xlat
loop
pop
and
mov
or
enter
sub
xor
ss
retf
iret
enter
dec
xchg
(bad)
xchg
frstor
mov
adc
mov
rep
cmc
fld
mov
test
mov
shr
xchg
push
jmp
icebp
xchg
mov
jmp
mov
clc
lods
mov
mov
sub
test
push
push
ins
mov
cdq
data16
hlt
mov
sub
ds
or
cmp
shl
jbe
daa
lods
xchg
loop
mov
sbb
ja
jg
imul
es
(bad)
sar
vdivss
push
(bad)
pop
mov
jns
leave
hlt
(bad)
das
jae
sets
and
or
ins
std
push
icebp
or
test
scas
(bad)
sub
pop
pop
shl
jae
add
retf
dec
dec
push
xchg
mov
test
cmp
cmp
and
ins
scas
imul
loop
pop
imul
test
push
and
push
xor
jmp
div
sbb
icebp
xchg
mov
in
cmp
cmp
inc
mov
pop
repz
or
dec
mov
rcr
cmp
(bad)
xchg
cli
fisttp
mov
js
lock
les
mov
adc
dec
add
shr
dec
add
push
leave
jo
xor
in
ret
jns
fs
pushf
lahf
movs
aas
inc
ds
cmps
fild
xchg
xchg
cmp
pop
or
cs
ds
int3
jle
ds
mov
je
movs
sub
sbb
fisub
adc
push
jmp
cmp
mov
es
jnp
dec
mov
icebp
in
imul
imul
in
mul
jb
das
inc
call
test
loopne
jmp
jp
(bad)
stc
push
inc
imul
mov
dec
sub
adc
ins
movs
add
or
sbb
mov
dec
mov
push
nop
fnstcw
pop
(bad)
sbb
mov
push
sbb
int3
adc
push
sar
shl
inc
push
sbb
mov
repnz
jmp
and
mov
dec
ret
movs
inc
movs
ins
dec
dec
fist
dec
pop
and
imul
sbb
xchg
and
popa
cmc
test
pop
sahf
jmp
mov
or
cmovns
jbe
inc
aad
clc
pushf
inc
sub
push
push
stos
cmp
in
stc
in
aam
sub
(bad)
inc
stos
fisub
sbb
mov
and
cmp
push
dec
inc
ss
imul
push
aas
out
add
xchg
ret
in
call
sbb
jno
repz
push
imul
jnp
lock
jmp
stos
call
out
fist
jg
xor
aam
std
sub
or
push
cdq
cmps
or
dec
pop
je
cmp
mov
loope
pop
dec
push
adc
mov
cvtpi2ps
sub
mov
minps
jmp
mov
mov
scas
mov
mov
ficom
shl
test
cmps
shl
pop
inc
push
jbe
in
fcomp
into
fdivrp
and
test
mov
das
hlt
mov
clc
xchg
pop
or
push
jmp
cld
xchg
ss
inc
jmp
push
adc
in
push
data16
dec
fsub
(bad)
in
sub
cmps
aas
stos
std
sbb
mov
jno
add
jecxz
add
fnstsw
ja
dec
jno
cli
sbb
(bad)
xchg
and
push
inc
dec
pop
std
fsub
cmps
lahf
adc
test
mov
pop
mov
jp
(bad)
mov
popf
in
mov
add
hlt
xchg
lods
xlat
mov
inc
adc
mov
adc
mov
mov
xchg
movs
out
test
stos
inc
cmc
mov
test
cmp
push
inc
jmp
(bad)
dec
mov
lock
sub
cmps
loop
cwde
jae
cdq
out
addr16
mov
(bad)
cmps
popf
cld
mov
sbb
mov
pop
das
or
movs
movs
adc
and
fimul
stos
inc
pop
push
stc
or
push
mov
pop
xchg
dec
xchg
jbe
mov
hlt
jmp
dec
jbe
mov
mov
iret
aaa
into
test
sub
ins
(bad)
pop
sub
fisttp
aad
fwait
dec
aad
nop
popa
dec
fidiv
xchg
jb
retf
xor
jle
fist
ins
aaa
xchg
mov
rcl
ret
(bad)
cmps
cdq
outs
and
jmp
retf
mov
mov
das
pop
and
xchg
fstp
lock
lds
push
ss
xchg
cmp
call
fstp
test
push
pop
fucom
cdq
jne
lock
jno
dec
adc
cmp
lds
jecxz
and
dec
movs
movs
xor
loop
aad
dec
inc
cmp
cmp
popf
push
ret
pop
ret
jle
xor
jnp
dec
mov
adc
int
pop
xor
sub
(bad)
push
push
paddd
mov
ds
mov
dec
pop
enter
mov
call
adc
test
aas
inc
nop
push
jo
mov
add
sbb
fnstcw
(bad)
inc
dec
dec
enter
push
sbb
sbb
clc
mov
mov
cmp
movs
mov
inc
out
pop
xchg
mov
mov
ins
movs
fsubr
int3
push
loop
inc
in
(bad)
mov
addr16
add
sar
mov
push
cmp
js
ja
sbb
cli
or
cmp
int
jp
inc
push
adc
(bad)
xchg
out
dec
arpl
or
sbb
hlt
(bad)
jbe
cwde
retf
hlt
cmp
retf
sub
cmps
cli
pop
fidivr
jecxz
repz
retf
jmp
addr16
xchg
inc
test
leave
jecxz
mov
loop
mov
movs
dec
fst
jo
call
in
ror
sub
scas
dec
jae
bound
aas
xchg
loop
enter
mov
(bad)
fistp
jle
xor
neg
pop
jle
jecxz
outs
shr
scas
jnp
les
or
adc
or
adc
sub
or
mov
xchg
stos
(bad)
mov
xchg
call
dec
retf
pop
test
fwait
xor
call
imul
cmps
cmp
pop
pop
dec
jns
shl
fcomp
cdq
mov
test
pop
push
cs
jae
dec
inc
pop
jae
jmp
xor
xchg
sbb
mov
pop
(bad)
inc
arpl
mov
jbe
fdiv
std
scas
fdivr
lods
repz
jno
pop
xor
cmp
add
sbb
pusha
push
pusha
ror
push
shrd
push
or
out
inc
test
pushf
idiv
shr
out
cmp
xor
aam
nop
adc
repnz
jecxz
inc
fldcw
ss
sbb
sbb
adc
add
xchg
pusha
sbb
or
sbb
xchg
(bad)
jo
jecxz
lds
inc
cmp
out
add
jns
jae
mov
xor
mov
cdq
pop
inc
scas
lock
push
sbb
int3
inc
lods
enter
fs
inc
cli
ret
(bad)
aaa
xlat
and
sbb
cli
mov
rcr
dec
div
xchg
daa
add
js
mov
and
leave
sahf
push
loopne
sbb
outs
jge
xchg
xor
(bad)
jnp
sbb
test
in
hlt
mov
ins
push
stos
mov
mov
es
or
push
xlat
cmp
dec
jne
push
fisttp
out
mov
xchg
movs
xchg
or
nop
imul
jnp
sbb
sbb
leave
fcomp
sbb
jecxz
daa
dec
loop
add
(bad)
sub
je
and
cmp
sahf
cmp
adc
or
mov
lea
pop
or
push
loope
cmc
mov
daa
stc
jbe
out
mov
mov
retf
lods
push
and
fst
cmp
pop
lods
es
je
or
clc
out
mov
mov
lea
ins
adc
jbe
cmp
jno
xchg
and
rcl
xor
ds
inc
mov
rol
ins
iret
push
ins
les
mov
and
loopne
(bad)
pop
dec
or
jns
cmp
sbb
adc
jg
sub
mov
adc
arpl
cmps
jo
mov
int3
push
scas
ds
sub
add
out
ss
retf
mov
mov
adc
jae
sbb
in
neg
in
int3
icebp
sub
xchg
push
scas
mul
mov
rsm
lds
(bad)
adc
es
ret
push
(bad)
daa
outs
pop
mov
repnz
mov
push
xor
hlt
push
adc
cmp
iret
sti
push
pop
push
(bad)
lea
dec
jge
outs
daa
mov
(bad)
push
cmp
inc
call
mov
cmps
(bad)
sti
inc
jnp
repz
sbb
repnz
fld
les
jle
jmp
xchg
dec
xchg
(bad)
out
cmp
and
in
and
repz
fstp
jnp
test
jnp
mov
mov
es
adc
or
xchg
outs
imul
xor
leave
sar
push
adc
stos
mov
call
cmp
out
xor
sub
popf
pop
iret
cs
lods
pop
mov
outs
aas
das
in
sahf
pop
xor
(bad)
out
int
pop
cmp
shl
inc
pop
add
dec
push
cmps
sahf
sti
pop
jmp
(bad)
loope
in
lods
push
xchg
js
sti
push
int
fiadd
shr
fdecstp
pop
inc
ss
enter
pushf
sub
test
movs
adc
jg
fadd
not
jg
push
inc
stos
repz
inc
mov
ss
inc
mov
sub
cmp
xor
mov
mov
push
bound
and
xchg
cmps
popf
adc
xchg
inc
cmps
pop
aad
cmp
sti
cmp
test
imul
dec
inc
stc
loopne
push
mov
cmps
adc
inc
push
pop
leave
sti
cs
pushf
outs
push
push
outs
adc
test
in
adc
jbe
scas
jno
rol
gs
scas
std
sub
jmp
in
scas
sub
xchg
xor
mov
dec
mov
daa
cs
daa
rcr
ins
add
dec
mov
and
cmp
xchg
xchg
jae
gs
mov
test
lods
arpl
jl
not
xor
cmp
and
ja
(bad)
(bad)
jl
gs
mov
inc
adc
inc
jb
mov
leave
icebp
jnp
ins
push
pop
xor
mov
sub
retf
lahf
rcr
xchg
mov
imul
dec
movs
repz
sub
dec
fs
cs
in
jl
add
push
dec
pop
push
ins
retf
push
jnp
in
dec
data16
int3
jmp
icebp
push
and
stos
push
clc
push
pop
(bad)
ret
xor
daa
push
cmps
out
sub
test
ds
outs
pushf
in
rol
xchg
cmp
jno
retf
sbb
outs
xchg
push
movs
ins
mov
lahf
mov
outs
lods
in
hlt
retf
sbb
div
outs
fs
popw
sub
dec
test
mov
cmps
movs
retf
mov
or
pop
pop
in
movs
mov
lea
mov
mov
inc
mov
pop
dec
pop
shl
sub
xrelease
sub
pop
popa
int
repz
shl
cmc
inc
fsubr
test
mov
fwait
sub
push
repnz
fst
das
idiv
xchg
dec
ret
jle
mov
cld
div
cmp
sti
aas
pushf
push
fnsave
imul
push
out
push
dec
dec
enter
popa
in
ret
sbb
push
(bad)
jo
out
aas
imul
dec
xor
and
jae
mov
pusha
repnz
imul
add
jae
dec
cwde
jae
in
push
test
int3
daa
inc
jne
out
or
jle
mov
add
jg
enter
aaa
or
and
add
and
aas
fisubr
inc
stos
repz
add
addr16
cmp
mov
sbb
(bad)
cmp
pop
stc
or
imul
inc
jmp
(bad)
ins
(bad)
pop
xchg
retf
js
push
push
add
lea
ror
out
int3
fist
mov
xchg
dec
rep
xchg
das
jae
movs
lahf
sub
aam
inc
fbstp
in
rep
fldenv
pop
xchg
ret
sub
not
iret
mov
adc
out
retf
sti
xor
mov
dec
push
mov
mov
xchg
(bad)
aad
or
clc
mov
adc
inc
ins
push
daa
fist
xchg
mov
adc
sbb
dec
pop
xchg
lahf
sar
frstor
ret
popa
jno
mov
test
pop
stos
aas
outs
cmp
lahf
sets
xchg
pop
int
test
and
cmp
cmp
movs
jne
ret
std
xor
(bad)
shr
dec
xchg
push
retf
inc
scas
lods
mul
sbb
xchg
jg
(bad)
daa
pop
sub
(bad)
cmc
stos
inc
push
popf
leave
xor
inc
stos
dec
add
dec
mov
xchg
cwde
xor
jno
mov
popf
repnz
cs
fist
or
xchg
or
shl
dec
outs
push
hlt
add
inc
mov
ins
inc
pusha
test
dec
and
xchg
outs
cwde
stos
and
mov
add
gs
mov
mov
or
add
mov
cmp
dec
dec
jns
cli
(bad)
hlt
sub
ins
lock
mov
cdq
movzx
sbb
add
dec
xchg
retf
mov
ret
ffreep
add
push
dec
mov
dec
pusha
push
in
aaa
add
cmps
dec
into
enter
in
call
test
jmp
je
sub
sbb
cmps
leave
mov
mov
sbb
sub
rcl
je
mov
mov
inc
nop
xchg
retf
dec
lods
out
cmps
mov
mov
jae
adc
dec
into
mov
(bad)
clc
ret
fistp
test
test
ja
dec
ds
push
repnz
mov
les
test
dec
call
push
sub
loop
popa
push
xor
mov
mov
rcr
jno
int3
in
movs
inc
or
nop
mov
mov
loop
jecxz
call
jmp
rcl
mov
xor
adc
sub
scas
hlt
retf
in
jg
imul
(bad)
push
shl
stos
in
aas
push
fnstcw
xchg
outs
pop
adc
jb
push
push
push
iret
movs
stos
stc
cdq
jbe
jb
push
movs
xor
pop
push
(bad)
sbb
mov
push
push
xchg
pushf
movs
adc
repz
push
js
mov
in
push
sbb
push
ds
pop
mov
sbb
or
ja
sub
fidivr
mov
adc
ins
retf
dec
gs
inc
push
mov
inc
and
xchg
lods
xchg
mov
stos
mov
sub
and
cli
push
jmp
fdiv
xor
nop
ret
je
fbstp
in
loope
ds
test
(bad)
push
call
mov
out
hlt
xchg
and
fwait
ret
xchg
dec
jno
mov
mov
dec
(bad)
scas
fild
mov
rcr
sub
cwde
test
cmps
dec
daa
in
push
jge
sbb
retf
jp
iret
in
into
imul
outs
xor
ins
jb
out
out
mov
push
loop
pop
xlat
mov
int
sbb
aam
xchg
test
out
jge
mov
cmp
ins
retf
les
push
popf
inc
loop
pop
das
cdq
sbb
jmp
or
fimul
in
and
(bad)
mov
mov
jns
ror
call
xor
test
ficom
pop
mov
ins
aaa
sbb
mov
(bad)
mov
stos
out
movs
(bad)
cmps
mov
frstor
lahf
test
jnp
int
loop
mov
push
outs
jp
icebp
add
jmp
fld
pop
stos
xchg
dec
out
leave
in
fdivr
jno
xchg
imul
adc
jo
mov
sbb
jge
mov
mov
dec
shl
inc
(bad)
shl
movs
xchg
pusha
adc
mov
jl
scas
je
test
and
test
dec
test
scas
mov
test
xor
push
cmp
xchg
sbb
shl
or
and
mov
xchg
in
aam
cmp
jp
sbb
lock
fist
retf
sahf
out
data16
cmp
pop
mov
sahf
xchg
jle
pop
fyl2xp1
fisttp
scas
jno
ins
fiadd
jno
and
pop
out
cmps
push
retf
or
or
sub
mov
inc
xchg
je
in
ret
sti
adc
hlt
push
xor
adc
cmp
pop
aam
test
popf
rol
jne
stos
rol
jle
mov
push
push
or
xor
pop
adc
mov
inc
sub
cli
scas
shr
fld
jnp
or
lahf
movs
dec
inc
add
inc
xor
fnsave
pop
mov
(bad)
mov
ins
jp
bound
mov
pop
rcr
mov
ins
jmp
dec
int3
mov
dec
repz
imul
ins
push
xchg
sub
imul
test
out
cdq
enter
jb
sbb
retf
push
stos
dec
cmp
dec
div
ja
ficomp
fmul
xor
retf
movs
ror
out
(bad)
in
xlat
loop
xchg
scas
ficom
cs
js
jmp
mov
ins
adc
pop
mov
aad
fs
iret
popa
pop
addr16
sbb
movs
test
arpl
ja
lock
int3
stos
retf
pushf
pop
out
push
mov
push
hlt
ins
in
dec
scas
sbb
retf
jo
adc
mov
jmp
neg
inc
pop
ficomp
dec
das
int3
mov
fwait
sbb
repnz
jnp
push
cdq
xor
push
call
clc
mov
dec
inc
leave
push
inc
std
scas
hlt
jns
popa
and
call
inc
aaa
neg
pop
std
pop
inc
icebp
or
stos
imul
push
dec
int
outs
adc
push
pop
ret
add
adc
pop
rol
(bad)
sub
aaa
js
pop
dec
pop
fnstsw
dec
aas
sbb
pop
pop
fwait
movs
daa
movs
inc
and
fldenv
sbb
fst
stos
psubb
sub
dec
mov
ficomp
jecxz
inc
lock
xor
cli
test
sti
sub
out
push
inc
mov
cld
adc
(bad)
(bad)
les
jecxz
out
cld
je
les
fstp
fsub
adc
pusha
mov
pop
stos
sbb
jecxz
outs
sub
push
cmp
jno
ins
mov
push
in
inc
pop
jmp
dec
shr
mov
or
xor
cmp
jp
jmp
push
lahf
mov
fbld
jmp
and
fnstcw
shl
sub
jecxz
jle
out
sti
push
jmp
and
aam
cmp
sbb
mov
(bad)
xor
hlt
stc
ret
push
retf
cs
cdq
outs
push
or
lds
ins
in
mov
jns
dec
or
(bad)
mov
int
mov
call
pop
(bad)
mov
jmp
push
call
mov
mov
repnz
rcr
out
jae
dec
(bad)
push
jnp
(bad)
loop
addr16
(bad)
or
xchg
mov
retf
cmc
call
pop
xlat
inc
xor
pop
pop
push
outs
cmp
popa
xchg
hlt
pop
dec
aas
shr
repnz
in
aad
and
fidivr
jbe
jb
or
mov
test
sbb
cpuid
pop
aas
mov
push
xor
retf
mov
out
in
sbb
out
jecxz
pop
inc
mov
xor
(bad)
cmc
in
fidiv
pushf
dec
(bad)
and
retf
in
dec
cs
xchg
dec
push
jle
adc
movs
sub
shl
lfs
sbb
jno
enter
mov
lea
jmp
cmp
(bad)
aam
cmc
mov
pop
add
jo
mov
jae
pop
dec
enter
jae
mov
sar
and
jle
test
mov
cdq
mov
jns
ret
xchg
cmc
repz
les
push
iret
test
push
mov
or
sahf
stos
(bad)
fimul
push
hlt
xchg
hlt
fstp
ins
sub
stos
dec
lds
pop
icebp
rol
(bad)
cmp
hlt
cmps
push
daa
mov
dec
mov
fist
adc
jmp
push
fldenv
mov
jmp
pop
aam
test
mov
int3
push
cmp
xor
sbb
add
rcl
mov
pusha
out
sub
cmp
scas
neg
dec
imul
sbb
adc
ret
bound
test
mov
(bad)
loope
xor
mov
cmps
cs
mov
jle
xlat
mov
lods
xor
movs
fwait
cdq
mov
shld
ins
call
jb
jns
je
arpl
bound
daa
mov
or
fisub
xchg
mov
mov
vpsrld
scas
cli
(bad)
fistp
aas
and
push
in
push
ins
push
fs
sbb
popa
mov
mov
test
and
jb
or
push
and
dec
cmp
dec
int
lahf
daa
outs
cmp
cmps
mov
mov
sbb
test
xchg
inc
imul
sti
push
arpl
out
jno
xor
rol
cmps
jl
es
les
fwait
inc
faddp
mov
jae
inc
jmp
ja
jge
inc
xchg
or
mov
loop
jnp
retf
xchg
xchg
jl
xchg
mov
jbe
sahf
pop
cli
mov
ins
sti
xor
inc
jmp
push
ds
fmul
xor
mov
inc
loopne
stc
mov
inc
in
mov
ret
mov
shr
push
fdiv
jnp
mov
dec
loope
cmp
xchg
jns
cmp
mov
int
ret
ss
loope
aam
rol
daa
data16
bnd
jns
cmc
cmp
sub
mov
je
sub
xlat
ins
stc
lea
mov
sahf
loopne
dec
(bad)
and
stos
jp
xor
xchg
call
loopne
adc
clc
fcmovu
cmp
std
sub
sub
(bad)
movs
jp
pusha
lock
or
dec
lods
xchg
dec
lahf
loopne
aas
loopne
dec
(bad)
xor
push
mov
stc
sbb
inc
js
lods
(bad)
sub
aad
int3
xlat
hlt
sub
fcomp
jns
add
mov
ins
jmp
xchg
(bad)
aad
div
arpl
imul
loop
adc
lods
mov
js
(bad)
shl
sub
loop
ret
ficom
xor
mov
xchg
ins
leave
inc
mov
les
jle
jge
stc
rcl
push
add
in
xchg
mov
cmp
call
stos
push
hlt
out
es
movs
outs
jns
push
sahf
pop
xor
rol
lods
gs
iret
test
cmp
out
cs
inc
ret
ja
mov
mov
out
push
xor
ror
or
push
test
xchg
es
add
ret
loope
cmp
dec
call
aad
fucomp
dec
into
movs
mov
ja
or
sub
sbb
cli
movs
retf
clc
sti
sbb
scas
mov
imul
ss
inc
mov
test
shl
out
sbb
rcl
dec
and
ss
jo
ss
xchg
pop
push
in
mov
adc
mov
push
mov
movs
mov
dec
fwait
imul
push
aaa
cmp
or
mov
scas
mov
add
arpl
hlt
aad
inc
jae
sub
xchg
repz
sahf
cs
adc
movs
movs
and
rol
push
push
arpl
jbe
add
shr
jbe
call
fstp
mov
sbb
push
push
adc
push
out
out
cmp
retf
movs
fidiv
test
js
cmps
imul
cmp
mov
mov
mov
pushf
xchg
dec
test
xchg
js
push
xor
pushf
jae
arpl
shl
cmp
pop
cwde
inc
lods
imul
mov
repnz
push
lea
pop
mov
loop
push
mov
imul
movs
je
jbe
mov
(bad)
movs
fcom
jmp
mov
sar
scas
stos
push
sar
test
shr
imul
rcr
cli
nop
cmc
dec
fldcw
cmps
or
add
and
out
sbb
shl
xchg
mov
test
aad
and
push
pushf
not
fnstcw
pop
sub
out
pop
xchg
(bad)
outs
xor
jns
mov
mov
lods
dec
loope
rcr
(bad)
rcl
js
lods
iret
arpl
cmp
sbb
or
xchg
xchg
lahf
lahf
jbe
jbe
mov
xchg
ret
push
(bad)
int
outs
cmp
mov
retf
into
push
inc
xchg
popa
sbb
fidiv
mov
(bad)
pop
sub
push
mov
jge
jg
stos
xchg
sub
mov
out
fist
mov
(bad)
jae
or
enter
or
cmp
sub
pop
stc
jle
xchg
test
sti
inc
or
add
dec
xor
sub
and
jae
aad
mov
mov
jbe
mov
jge
xchg
xchg
mov
mov
hlt
push
femms
mov
stos
jo
lds
push
jecxz
out
mov
(bad)
sbb
push
ret
ror
int
push
lea
stos
clc
adc
add
dec
ds
mov
dec
mov
aad
jnp
jne
retf
addr16
mov
(bad)
push
cwde
pusha
sti
call
(bad)
sahf
ds
aas
(bad)
ins
div
push
or
xchg
or
xor
push
inc
sbb
dec
data16
lahf
fmul
sar
movs
jp
std
sbb
mov
out
js
aam
pop
mov
or
push
repnz
pop
out
mov
shl
ret
daa
mov
mov
test
(bad)
aad
sbb
jmp
adc
xor
ficom
ss
stos
addr16
jecxz
imul
add
sahf
cmps
pop
mov
data16
mov
mov
push
push
cli
push
ins
(bad)
dec
mov
imul
and
xor
out
lods
push
sub
dec
scas
push
mov
outs
push
jnp
mov
cmp
mov
mov
xor
push
mov
cmps
xlat
lods
sub
stos
ror
stos
sub
add
imul
and
(bad)
jp
cmp
sbb
jge
lods
push
add
stos
imul
push
sahf
leave
push
and
mov
cld
mov
retf
adc
in
dec
cmc
repz
xor
das
or
outs
sbb
ficom
xor
iret
push
pop
jle
je
shl
jp
fxch
xchg
mov
in
sub
ins
mov
in
mov
cdq
loope
inc
pop
pushf
cmc
ror
mov
(bad)
sub
js
mov
pop
pop
sub
jb
dec
rcl
aaa
fstp
inc
popf
pop
fisttp
mov
inc
push
outs
cmp
arpl
retf
std
push
cld
into
(bad)
mov
add
pop
in
rcr
outs
(bad)
inc
retf
sbb
dec
repz
lock
or
mov
jmp
paddw
ins
inc
inc
pop
mov
inc
int3
xchg
cli
lahf
out
shr
test
or
ds
fs
stc
sub
les
fisub
aas
pop
adc
mov
fidivr
nop
mov
fs
cmps
fcmovnb
jmp
popa
pushf
popf
fimul
mov
jmp
pop
ss
loope
lods
jg
mov
cdq
mov
sti
xchg
jns
sti
fisubr
xchg
(bad)
enter
inc
out
fsub
mov
dec
ins
movs
sub
mov
mov
push
inc
inc
jge
sar
add
mov
arpl
icebp
pop
(bad)
retf
sbb
inc
xchg
movs
mov
loope
es
inc
scas
das
mov
jmp
mov
jo
cmp
jnp
mov
push
mov
das
jnp
inc
pop
movs
test
in
mov
inc
jo
adc
cmp
iret
ds
leave
cmp
and
dec
test
inc
push
cmc
xlat
dec
mov
fisttp
lods
pop
mov
push
pop
dec
test
mov
inc
or
pop
pop
pop
in
xchg
shl
cs
push
jnp
sub
or
clc
dec
int
lds
mov
adc
jle
push
int3
imul
sbb
movs
leave
jo
mov
xchg
add
push
jne
pop
leave
jb
pop
repz
xchg
data16
adc
dec
fistp
out
jle
enter
or
in
cld
cmp
jle
push
jle
repz
pop
fnsave
aam
loope
jmp
ror
mov
mov
push
inc
lds
retf
int3
push
fmul
pop
mov
push
and
aad
or
cmp
jne
inc
aad
and
shl
add
xchg
inc
scas
lds
push
xchg
pop
xchg
retf
call
imul
xchg
push
xlat
mov
mov
pop
jb
fdiv
inc
das
and
jmp
data16
loop
push
xor
sti
mov
(bad)
loop
into
pop
ret
pop
and
dec
inc
mov
std
iret
push
retf
add
sub
enter
xchg
loope
js
pop
movs
cmp
pop
test
hlt
loope
mov
lea
loopne
push
imul
retf
loope
xor
push
imul
dec
fnstsw
mov
out
mov
ror
pop
add
xlat
es
sbb
mov
sub
add
mov
imul
fs
fist
sub
loop
sub
daa
sbb
jge
inc
xchg
loop
mov
mov
(bad)
aam
jp
call
ja
leave
(bad)
mov
inc
mov
pop
and
enter
jle
push
(bad)
daa
test
cmps
gs
pop
xor
pushw
cld
jns
fsub
out
popf
sbb
xor
test
pop
mov
lock
pop
cmps
mov
daa
adc
cmp
daa
sub
jb
xchg
je
mov
mov
pop
mov
push
pop
and
ds
(bad)
and
dec
pop
dec
fisub
outs
inc
aas
in
jg
xchg
lock
aam
and
ja
push
repnz
xchg
stc
lahf
pop
retf
push
lods
inc
nop
ror
jle
cdq
pop
dec
push
sahf
in
push
cdq
pop
call
clc
test
jns
fisttp
fwait
movs
(bad)
ret
mov
jno
sub
(bad)
std
dec
xor
sub
aad
xchg
xor
mov
dec
jmp
pushf
xlat
cmps
xor
fldcw
mov
popf
mov
or
and
xchg
jmp
and
pop
jp
outs
arpl
mov
rol
in
mov
fcomp
(bad)
arpl
push
or
push
cmps
pop
jg
mov
push
mov
or
pop
adc
xor
jmp
fdiv
fs
mov
add
data16
cmps
retf
mov
inc
xchg
dec
jns
gs
aad
icebp
movs
loope
in
(bad)
ins
(bad)
enter
(bad)
cmp
sbb
pop
lds
jle
call
lock
xlat
movs
jmp
sbb
mov
out
popa
add
imul
mov
xor
cmp
push
push
sbb
xchg
push
test
stos
hlt
pushf
lahf
clc
xchg
idiv
push
js
and
push
movs
pop
jmp
stos
fidivr
les
ret
out
pop
mov
pop
sbb
dec
ins
pop
(bad)
das
retf
jnp
ret
push
stos
sbb
jns
(bad)
sub
pop
test
inc
push
scas
sbb
cmp
sbb
ins
imul
ret
repz
jbe
xchg
(bad)
fcmovnu
pop
jo
ret
jne
in
cmp
mov
sub
dec
jb
pop
push
scas
mov
or
sub
sub
rol
leave
xor
cmps
stos
imul
popf
pop
les
scas
cli
pusha
div
loopne
pop
or
xor
pop
pop
ins
cmps
(bad)
ja
mov
sbb
fnstsw
dec
adc
pop
xchg
fs
ins
out
and
adc
out
dec
jne
pop
push
xchg
in
loope
add
retf
iret
ror
lock
mov
add
pop
call
(bad)
dec
xor
pop
dec
das
(bad)
retf
mov
mov
ficom
lods
and
push
jmp
jnp
test
mov
mov
xchg
mov
dec
mov
hlt
xchg
adc
push
daa
out
xchg
fs
adc
adc
jne
inc
mov
push
dec
mov
lods
jecxz
dec
lea
loop
iret
or
inc
dec
dec
das
movs
mov
push
mov
int3
cmps
and
push
test
xlat
les
pop
and
fs
sub
mul
jp
getsec
ss
icebp
sub
mov
test
xlat
outs
xchg
sub
test
mov
leave
push
mov
fst
pop
retf
inc
jbe
aas
push
sub
push
int
jecxz
stos
sbb
push
xor
icebp
test
std
sbb
dec
data16
push
ret
adc
or
mov
in
dec
ror
leave
call
fidivr
sub
or
outs
pop
jge
sar
pop
push
int3
int3
in
mov
lahf
jge
mov
xchg
popa
imul
ins
call
lods
(bad)
xor
pop
cmc
mov
jb
rcr
ficom
pop
retf
mov
and
into
mov
sbb
pop
rcl
add
stc
and
fistp
or
mul
(bad)
in
out
mov
adc
mov
lock
bound
cmp
call
shl
xchg
pop
movs
in
dec
out
jbe
xor
outs
dec
add
arpl
aad
ret
and
pop
cmp
cmp
inc
js
fidivr
rcl
pop
ds
cmps
inc
jmp
dec
xlat
xchg
out
in
lds
jecxz
popa
call
imul
jge
dec
mov
in
cmps
sbb
sub
fmul
xchg
jns
mov
(bad)
repnz
jecxz
ins
fisubr
pop
xchg
shr
retf
xchg
jno
cmps
div
mov
sbb
cli
imul
scas
or
xor
push
imul
cmp
sbb
xor
in
mov
dec
int3
ret
stos
pop
fiadd
jo
sti
sub
mov
xchg
mov
test
sub
fs
inc
inc
push
ins
cmp
stos
sub
lock
mov
lea
lds
out
div
xchg
cmp
and
cli
xchg
hlt
pusha
dec
cs
sbb
stos
in
push
in
lods
mov
fld
retf
cld
mov
mov
xchg
cs
push
mov
jne
push
jns
mov
and
les
mov
inc
xchg
aas
cmc
cmp
pushf
jmp
je
cmp
jle
dec
stc
lahf
std
sub
and
es
fbld
xchg
push
ret
fdiv
leave
daa
jb
and
dec
mov
cmp
sub
mov
jns
(bad)
cmps
arpl
cmp
aaa
mov
inc
cmp
pusha
jbe
xor
data16
inc
std
loop
and
add
jo
aam
pop
push
or
jmp
push
mov
xchg
das
cmp
in
cmp
ins
add
cs
add
inc
mov
clc
mov
ret
iret
push
pushf
lods
cmps
fwait
mul
fsub
aas
inc
xchg
sub
cwde
cmc
popf
mov
sbb
in
mov
int3
repz
stos
test
pop
ins
xchg
mov
jns
movs
mov
(bad)
mov
ret
aad
push
mov
stos
xchg
cmps
cmp
inc
test
test
pop
pop
dec
fldenv
pushf
push
aam
pushf
cmpxchg
mov
mov
push
je
push
(bad)
cld
outs
mov
gs
dec
mov
movs
inc
repz
outs
or
xchg
ret
xchg
pop
jp
jb
out
mov
jmp
ins
pop
mov
in
enter
adc
dec
push
mov
pushf
add
sar
(bad)
lahf
in
lahf
imul
xchg
pop
dec
jne
jmp
retf
jbe
add
lahf
lods
gs
lods
std
into
movs
inc
mov
loope
popf
lods
mov
inc
loop
(bad)
pop
mov
sar
test
cmps
sti
sahf
xchg
mul
and
(bad)
scas
in
paddw
mov
cmc
mov
adc
add
adc
loope
lds
inc
push
test
shr
(bad)
jmp
inc
les
fisubr
mov
hlt
inc
jno
fsubr
fdiv
sbb
jg
dec
pop
mov
sub
push
mov
pop
fdiv
movs
xcrypt-cbc
cmps
push
push
shr
out
mov
push
sub
xor
dec
scas
mov
cmp
mov
sti
mov
sub
push
sbb
out
cwde
ficom
mov
stos
out
fmul
mov
bound
xchg
add
xor
xchg
test
or
sbb
imul
loopne
jno
dec
dec
jns
fidivr
ss
leave
jbe
or
rol
fstcw
in
jg
imul
stos
sbb
jmp
mov
and
test
xchg
push
xchg
mov
movs
pushf
mov
mov
sub
push
mov
push
jns
stos
add
(bad)
pop
pop
mov
fistp
daa
sbb
test
(bad)
inc
cmp
ss
cmp
js
loopne
mov
push
jp
imul
fnstenv
cld
call
rcr
jecxz
pop
lods
repnz
test
cmp
add
repnz
cmps
xchg
cld
dec
and
sahf
fist
lds
mov
cld
xchg
xor
mov
test
pop
mov
cmc
xor
sbb
sbb
jns
mov
jb
xor
mov
mov
dec
cwde
pop
push
xchg
ss
xor
sahf
jle
xor
popf
fldz
(bad)
mov
adc
mov
inc
push
fisttp
push
scas
iret
dec
jge
sbb
dec
lea
call
cmps
jecxz
push
mov
loopne
ins
imul
je
stos
(bad)
pushf
retf
dec
pop
ins
jns
nop
shr
lods
and
shl
dec
xchg
cwde
retf
jne
enter
mov
ficom
adc
mov
stc
mov
pop
jle
(bad)
rcpps
jmp
in
push
jmp
call
push
mov
ins
mov
jl
inc
popf
ds
retf
rcl
sahf
mov
in
scas
adc
mov
mov
lock
daa
gs
jnp
sub
test
jbe
jle
ins
mov
adc
add
jae
popf
shr
inc
aas
call
jnp
(bad)
mov
sar
into
ret
in
dec
inc
mov
mov
or
out
jmp
add
inc
loop
cs
mov
push
xchg
inc
in
pop
jmp
jp
loope
cmp
dec
ins
jmp
pop
jb
mov
mov
dec
dec
mov
xchg
lock
(bad)
fstp
shl
fsubr
shr
retf
clc
out
arpl
neg
or
sar
xchg
jae
cmp
outs
mov
mov
leave
shl
ret
jb
pop
xchg
xor
mov
sbb
push
aam
sahf
or
daa
and
loop
inc
xchg
loop
mov
clc
fnstenv
imul
(bad)
loopne
mov
mov
mov
sub
mov
(bad)
and
and
ss
jmp
(bad)
ins
rcr
test
es
jnp
jge
(bad)
xchg
pusha
jmp
xchg
xor
stos
jp
std
and
push
(bad)
jmp
ss
std
dec
sahf
mov
lods
std
mov
in
mov
jecxz
fisub
pushf
inc
push
and
iret
inc
adc
sub
in
add
test
lds
fstp
push
ins
mov
sbb
push
(bad)
or
aaa
es
inc
into
sbb
inc
in
out
daa
lods
pop
movs
push
fwait
pusha
sti
pop
pop
and
jecxz
mov
dec
cdq
sub
sbb
mov
pop
mov
jb
mov
test
or
popf
shr
pusha
stos
mov
mov
mov
or
mov
jmp
into
fs
mov
jnp
mov
xchg
bound
into
(bad)
cmc
jmp
mov
mov
mov
out
out
nop
mov
leave
add
xchg
add
xchg
popf
(bad)
pop
ins
sub
jae
pop
mov
imul
ss
xchg
jmp
enter
into
dec
pop
mov
dec
push
cli
cdq
add
xor
pop
add
std
dec
ret
or
cwde
and
mov
dec
int3
loope
push
ja
cmp
xor
dec
xor
cmps
cmp
dec
xchg
dec
rol
inc
inc
sub
sbb
loop
lods
xor
in
mov
lods
pop
xchg
xchg
(bad)
adc
mov
mov
dec
xor
mov
push
fst
adc
adc
popa
pop
jbe
xor
lods
cmp
outs
jb
stos
mov
shr
stc
into
std
and
mov
xchg
cli
in
or
mov
out
dec
(bad)
jae
mov
jo
pop
sbb
mov
push
xchg
inc
mov
sub
cli
data16
sbb
or
jmp
pusha
mov
xchg
inc
out
ja
cmp
xchg
sbb
dec
in
int
pop
div
jecxz
and
pushf
jns
push
test
and
iret
inc
sar
shr
xchg
jns
shl
fld
xchg
shr
sub
mov
out
inc
addr16
mov
(bad)
jne
adc
xor
jb
out
mov
push
sub
fcom
mov
movs
scas
push
ins
cdq
je
adc
lods
fadd
stos
push
jb
cmp
inc
cmp
push
(bad)
lock
cmp
arpl
(bad)
les
inc
push
popf
div
into
pop
jns
repz
lods
pop
test
outs
clc
push
xor
cli
stos
pop
jg
and
jns
icebp
inc
lahf
aad
sub
dec
cmps
push
ret
or
jb
or
cmp
ret
aam
out
lods
xor
sub
div
inc
js
retf
mov
sbb
leave
fst
ds
sbb
xchg
push
popf
jge
mov
pop
arpl
add
out
mov
inc
mov
xchg
outs
xor
jb
push
pop
jnp
mov
sub
mov
push
in
out
jg
cmp
cmps
(bad)
movs
mov
cmp
cli
xchg
stos
push
call
popa
mov
xchg
push
setge
jb
mov
(bad)
and
int3
dec
or
inc
std
push
jmp
aas
int
ror
cmp
pop
dec
(bad)
xchg
ficomp
pop
fnstcw
add
fidiv
dec
pop
mov
mov
push
adc
loopne
je
fisub
add
push
adc
sub
cmp
mov
jnp
stos
(bad)
ins
(bad)
fcomp
ins
dec
(bad)
pop
das
sbb
lods
das
jge
jecxz
pop
push
push
xchg
(bad)
pop
sbb
shr
adc
ins
or
sbb
xor
scas
and
out
adc
lods
inc
sub
push
(bad)
les
dec
lods
popf
(bad)
out
loope
cwde
jl
and
loopne
(bad)
cmp
dec
clc
nop
icebp
push
mov
push
in
jle
pop
mov
sahf
imul
popf
lahf
pushf
mov
ins
xor
ret
retf
mov
and
bnd
pop
push
in
dec
retf
push
sbb
lods
mov
xchg
push
push
jmp
out
mov
popf
out
pop
retf
mov
ret
movs
inc
ffree
sub
into
jg
and
mov
xor
imul
and
jl
and
push
or
sub
mov
iret
dec
pop
stos
mov
xor
pop
shr
scas
scas
icebp
movs
lahf
mov
lahf
mov
iret
mov
pop
std
sbb
jg
pop
jne
retf
fisubr
pop
xor
aas
add
sub
(bad)
ins
push
adc
sub
jo
aad
pushf
stos
xlat
xchg
xor
cld
aad
sti
lds
sbb
out
ret
push
inc
sbb
inc
mov
dec
jae
in
push
ds
sbb
hlt
movs
xchg
and
dec
jo
(bad)
jmp
leave
jo
mov
dec
cmp
mov
mov
mov
xchg
inc
sar
sub
pop
test
outs
lods
push
imul
popf
cdq
sbb
adc
cmp
mov
loop
frstor
xchg
(bad)
lods
out
cmp
xor
push
aam
mov
neg
loop
ret
in
xchg
in
or
mov
pop
pop
xchg
call
mov
xor
pop
cwde
popa
rol
xchg
out
inc
mov
xor
retf
stos
rcl
push
popf
test
shl
mov
adc
mov
cmps
dec
stos
shl
sbb
loope
retf
dec
fwait
xor
pop
rcr
mov
mov
pushf
std
cmp
cdq
mov
je
mov
mov
push
and
sub
imul
cmps
cdq
in
cld
adc
test
scas
sub
mov
aad
in
(bad)
fwait
stos
dec
xor
aad
js
cmp
jg
sbb
fimul
pop
bound
in
and
push
cwde
sub
movs
push
pop
pop
sti
rcl
jle
jns
xchg
mov
cmp
sbb
fwait
loop
pop
inc
outs
cli
and
sub
cmp
push
dec
cmp
mov
jmp
jmp
jmp
rcr
adc
in
adc
clc
sbb
fadd
lds
cmp
into
mov
push
adc
mov
inc
push
mov
mov
fst
les
and
data16
int3
lea
repz
shr
imul
mov
sbb
stc
(bad)
aad
imul
in
ret
gs
dec
scas
jae
sti
fwait
ds
inc
jo
in
hlt
stos
adc
push
outs
imul
cmp
arpl
cmps
pop
rcl
push
push
dec
mov
mov
mov
ins
lods
(bad)
cld
enter
jb
jns
addr16
add
or
es
sar
int
out
dec
(bad)
js
in
(bad)
xlat
dec
mov
shr
fimul
mov
xor
jle
cmp
push
push
std
cs
ja
jae
retf
inc
mov
imul
add
movs
(bad)
ds
fcmovnu
push
lds
or
dec
shl
xchg
cmc
inc
sti
test
mov
inc
fisubr
dec
push
idiv
in
movs
out
in
xchg
pop
aaa
pop
icebp
repz
jae
imul
pop
mov
pop
cmp
ret
cmp
pop
pop
or
nop
in
mov
retf
scas
fistp
sub
sahf
enter
test
out
stos
ins
push
xchg
push
push
pusha
stos
mov
inc
scas
aad
mov
loope
ds
mov
fimul
xchg
push
mov
xor
push
dec
and
pop
xchg
cdq
cmp
sub
test
cmp
or
inc
movs
jns
inc
jmp
fistp
je
mov
sbb
xchg
out
jae
jne
mov
and
and
pop
retf
or
mov
cmps
das
add
mov
jno
mov
rcr
repnz
jle
rcl
push
jae
clc
mov
stos
adc
popa
sbb
fstp
arpl
and
jne
stc
ret
movs
mov
test
dec
mov
int
fldcw
popf
inc
push
push
xor
movs
popf
mov
loopne
mov
pop
xchg
mov
stos
xor
fild
es
push
push
sub
add
add
adc
jns
cmp
outs
xchg
imul
mov
mov
pop
cmp
mov
(bad)
mov
ds
(bad)
movs
xlat
sbb
sti
inc
fidiv
push
(bad)
mov
xor
push
hlt
(bad)
pop
push
jmp
hlt
test
in
mov
pushf
adc
pushf
sbb
sub
or
stc
(bad)
daa
or
shr
loopne
mov
fsubp
gs
test
sub
sub
js
(bad)
call
jno
pusha
pop
ja
mov
jbe
or
test
movs
pop
push
nop
push
call
in
das
arpl
fwait
mov
push
in
(bad)
daa
adc
test
mov
call
xchg
pop
push
or
test
fnsave
sar
cli
adc
aam
inc
lock
inc
xchg
mov
and
xchg
xchg
xchg
xchg
dec
push
mov
cmp
jge
lea
cmp
mov
clc
jl
cmp
jb
into
cmp
cmp
add
ja
xchg
mov
cmp
mov
sub
in
sbb
imul
stos
sbb
jmp
pop
cmps
movs
out
inc
mov
pushf
(bad)
push
lds
cmp
enter
out
mov
cmp
fimul
test
xchg
push
icebp
jmp
dec
shl
push
movs
mov
fcom
mov
fs
lahf
clc
push
cmp
mov
cmp
fiadd
push
jno
lds
xchg
pop
dec
call
ror
mov
test
daa
inc
dec
xchg
int3
mov
mov
int3
das
or
xchg
dec
dec
pop
les
dec
fidiv
stos
xchg
jnp
(bad)
leave
jne
mov
mov
test
jbe
push
sub
test
push
js
scas
icebp
mov
push
xor
(bad)
jl
inc
mov
xchg
sbb
test
jae
shl
scas
jns
pop
inc
shr
outs
outs
jge
xlat
cmp
popf
push
in
ficom
sbb
mov
ror
mov
mov
mov
mov
sub
pop
jmp
loop
lock
mov
js
shr
shl
cmp
in
ret
push
in
inc
mov
icebp
test
dec
test
icebp
pop
call
pop
mov
ja
jle
data16
push
movs
aam
jns
pop
hlt
mov
ja
out
push
imul
loop
lods
xchg
out
mov
pop
loope
xchg
jmp
call
mov
xchg
push
xor
xchg
push
test
inc
loopne
inc
jge
mov
jbe
mov
xor
ficomp
je
mov
push
mov
loop
addr16
fsubr
aad
lods
mul
scas
es
out
popf
(bad)
ss
xchg
cmp
xchg
dec
dec
dec
mov
retf
sbb
retf
ja
les
dec
pop
ja
xchg
or
mov
ins
stc
fist
xchg
jge
loope
ja
int
adc
clc
jno
inc
xchg
cmp
icebp
adc
ja
push
scas
xchg
push
adc
push
dec
fwait
inc
jb
sti
pop
fwait
jg
cld
mov
mov
fwait
cmps
mov
ret
or
cmp
sahf
pop
mov
push
cmp
push
sbb
loop
and
jmp
jmp
sbb
hlt
dec
scas
pop
sar
add
ret
rol
out
mov
xor
push
mov
loop
jle
fs
loop
dec
xchg
xchg
inc
icebp
sbb
adc
enter
adc
popa
and
mov
aam
mov
dec
outs
push
retf
push
stc
outs
adc
(bad)
cmp
push
sbb
aas
mov
mov
add
sbb
pushf
dec
push
inc
push
test
sub
xor
cs
xchg
xchg
jno
sbb
push
(bad)
inc
push
push
stos
retf
push
shr
rol
sub
jp
daa
and
cmp
sti
xchg
aas
mov
(bad)
pop
enter
lock
sub
scas
cdq
scas
mov
icebp
xor
popf
and
pop
neg
pushf
dec
xchg
movs
jmp
pushf
mov
test
loop
pop
sub
xchg
xchg
pusha
or
(bad)
enter
cld
push
cmp
mov
stos
xchg
(bad)
(bad)
retf
(bad)
or
and
stos
loope
sub
arpl
xchg
loop
ss
sub
push
cmp
loop
jns
jns
push
xchg
mov
ss
jno
sbb
pop
cmc
dec
jns
xchg
cwde
xor
xchg
add
jne
daa
push
imul
leave
push
iret
jmp
mov
je
push
adc
repz
mov
idiv
je
leave
jo
in
mov
ins
sub
mov
xlat
mov
and
cmp
ss
test
xor
aam
mov
in
in
inc
mov
fcomp
adc
je
xor
sahf
pop
sub
ja
jp
mov
cmc
pop
setne
loope
out
das
ss
or
mov
dec
jge
das
sbb
inc
jmp
ins
and
sub
popa
clc
sbb
dec
sub
(bad)
(bad)
xchg
push
(bad)
cmp
xchg
xor
push
dec
repz
mov
stc
movs
inc
pop
das
popf
inc
sbb
out
call
jne
inc
scas
xchg
fs
mov
bound
movs
in
mov
shr
xor
adc
sbb
xor
js
mov
retf
push
in
mov
adc
dec
sub
loopne
cmps
call
ins
sub
test
rol
out
(bad)
out
mov
addr16
or
dec
imul
xchg
sbb
in
push
jg
sub
mov
aaa
dec
mov
xchg
clc
stos
fnstsw
clc
mov
in
popf
dec
inc
jae
test
fwait
pop
retf
call
lods
xchg
or
xchg
movs
mov
cmp
jnp
into
movs
mov
lods
mov
je
jecxz
jmp
fsubr
dec
cmp
adc
rcl
popf
cld
ja
jb
loop
loope
loop
scas
pushf
sub
xchg
cmp
(bad)
gs
jnp
fidiv
stos
std
or
jmp
ret
or
add
scas
or
or
fldcw
(bad)
test
jmp
daa
push
test
cmp
push
lods
mov
retf
jns
inc
sahf
loop
stc
retf
dec
inc
cmp
dec
gs
repz
aas
push
rcr
aas
dec
fs
jmp
mov
sub
repz
adc
repnz
pop
dec
xchg
sahf
add
imul
dec
mov
pushf
push
aad
shl
shr
fcmovnbe
push
push
dec
jp
mov
out
movs
dec
mov
pop
dec
lds
inc
jmp
jne
jmp
pop
and
pop
shl
loop
les
fdivr
gs
xor
xor
out
xchg
jae
imul
into
and
or
or
fisttp
sti
xor
scas
cmp
dec
dec
ss
mov
mov
out
xchg
pop
or
or
adc
sub
out
jecxz
mov
icebp
adc
or
mov
clc
(bad)
fidiv
mov
hlt
cdq
inc
mov
jp
xor
cmovl
add
jmp
repz
cwde
push
je
sbb
xchg
retf
mov
pop
out
cmp
jle
sahf
popa
jmp
pop
sub
(bad)
test
gs
in
pop
jae
fcmovbe
push
jno
jns
sub
cdq
ss
xor
(bad)
aam
mov
xchg
imul
scas
pop
adc
in
fistp
clc
and
dec
sti
jmp
push
mov
imul
(bad)
push
and
sub
pop
rol
imul
cmp
sbb
jecxz
sahf
sub
pop
add
jle
mov
into
mov
sub
inc
mov
call
inc
cmps
push
popf
(bad)
mov
pop
inc
or
add
int
mov
jmp
xchg
icebp
mov
jb
les
cli
gs
jno
fnstenv
je
xor
jns
cmp
sbb
mul
popf
push
aas
repz
jmp
mov
dec
xchg
bound
fucom
stos
popa
gs
cmp
stos
cmp
movs
xlat
xchg
fwait
cmp
xor
mov
dec
js
sub
jle
mov
loop
cmp
ja
xor
movs
xor
pop
neg
test
add
ror
(bad)
jo
in
call
movs
mov
addr16
ficom
sub
icebp
xor
mov
call
test
sub
inc
xor
dec
mov
xchg
or
add
jns
push
jecxz
mov
mov
shl
sub
popf
pop
pop
in
xchg
rcr
xchg
ds
mov
and
sbb
mul
in
pop
out
stc
(bad)
pushf
pop
mov
nop
aaa
(bad)
mov
jl
loopne
or
shr
jmp
inc
fsub
ret
mov
int
cmp
lds
inc
xchg
jmp
lea
jae
xchg
div
cmps
out
adc
dec
xor
(bad)
pop
scas
mov
out
imul
daa
das
mov
push
and
pop
test
push
and
(bad)
loopne
aas
bound
addr16
fwait
jg
jae
inc
shl
mov
addr16
push
scas
inc
pop
jp
sub
cmp
out
lahf
clc
movs
xor
inc
aas
and
cwde
jbe
adc
pop
in
jge
ds
in
push
pop
mov
std
pop
std
(bad)
lock
movs
rcr
mov
sub
or
stc
xor
cld
adc
xchg
xor
push
push
pop
aaa
fisttp
aas
sbb
sub
jge
mov
pop
out
xor
fdiv
lock
int
jbe
out
dec
out
jnp
mov
sti
ret
loope
sub
leave
pop
pop
jns
sahf
clc
or
jecxz
mov
jmp
fwait
rol
fadd
cdq
addr16
jle
aam
cmc
push
jl
cmp
sti
mov
push
xchg
cmp
fwait
mov
sub
outs
cdq
es
dec
xchg
jmp
call
pop
or
sub
push
add
xchg
out
pushf
in
mov
les
xchg
jne
lods
dec
dec
sub
push
xchg
repnz
std
out
or
repnz
fstp
rcr
mov
dec
shl
mov
fsubr
adc
pop
loopne
ret
xchg
not
xchg
or
pop
mov
test
inc
enter
cmp
mov
aam
jae
stc
sub
mov
scas
loop
fnstsw
cli
int
push
movs
std
xchg
mov
call
std
retf
daa
mov
ret
inc
pop
sbb
pop
(bad)
repz
jne
dec
cmp
icebp
inc
loop
scas
or
aaa
lea
fnstsw
fcom
jo
fiadd
push
pop
mov
jo
push
xchg
push
adc
aam
xor
add
push
retf
mov
pop
dec
lods
imul
xchg
(bad)
and
js
(bad)
scas
mov
add
pop
jae
cmp
sti
aaa
cmp
dec
cmp
scas
dec
jge
lock
mov
test
push
ja
mov
mov
mov
leave
jns
jb
dec
sar
out
mov
lods
leave
movs
and
cmps
adc
jns
or
dec
in
adc
xchg
adc
dec
cli
out
es
mov
xchg
imul
mov
lahf
hlt
(bad)
bnd
cmp
inc
dec
in
mov
pop
adc
movs
call
jmp
pop
ins
ss
icebp
(bad)
mov
repnz
sub
mov
bound
stos
sub
ins
leave
mov
mov
imul
and
scas
adc
lods
(bad)
push
adc
cli
push
aaa
js
outs
leave
dec
pusha
mov
mov
push
cmps
int
sub
es
out
xlat
in
sbb
(bad)
inc
push
stc
push
jle
sahf
popa
(bad)
jg
pusha
mov
push
push
mov
dec
int
cmp
lods
cs
dec
xor
into
repnz
repz
or
xor
imul
clc
jne
aaa
lods
mov
test
call
push
dec
dec
mov
and
cmps
ficom
pop
fwait
dec
mov
mov
or
cmp
cld
mov
push
push
or
jp
mov
dec
ja
lods
mov
loope
push
enter
clc
xchg
in
call
out
retf
push
fisttp
sbb
jae
icebp
dec
icebp
or
movs
cmp
or
or
imul
jbe
xchg
pop
pop
loopne
int3
jbe
ds
sti
xor
jb
add
aad
xor
loope
sub
push
jae
pop
mov
cmp
jnp
xchg
leave
imul
psllq
sahf
frstor
popa
jmp
inc
push
sub
test
in
mov
retf
and
lods
cmp
scas
scas
mov
pop
ret
or
fidiv
cmps
mov
imul
pop
pushf
mov
outs
jns
and
lds
jecxz
cmp
into
push
xchg
in
outs
inc
lahf
popa
nop
not
dec
mov
out
push
stos
imul
jmp
(bad)
fnstcw
jecxz
lds
pop
pop
xchg
loope
push
int3
(bad)
cld
inc
pop
xchg
pop
mov
aad
stc
sub
imul
adc
ds
cwde
ins
sub
aam
ret
imul
or
xchg
mov
std
popf
jbe
lahf
jns
pop
dec
inc
mov
mov
mov
(bad)
xor
mov
mov
pop
nop
leave
ret
rcr
(bad)
stos
imul
iret
push
js
rol
pop
cld
fisttp
in
mov
arpl
ret
xchg
jecxz
cmp
ret
xchg
cmp
js
mov
jle
pop
fstp
lock
out
jl
add
push
sti
dec
das
(bad)
jmp
cmp
sbb
cmp
jmp
mov
pop
push
ins
jnp
inc
cbw
dec
out
stos
pop
(bad)
rol
cs
dec
xor
or
xchg
cmps
or
in
test
pop
in
jmp
faddp
mov
add
inc
jmp
sbb
push
bnd
cmps
sub
mov
jg
push
je
and
dec
jmp
xchg
mov
clc
jle
or
out
retf
jb
dec
fcomp
push
daa
stos
xor
xor
dec
adc
inc
mov
adc
cmp
jge
arpl
jb
fisub
jle
pop
clc
xor
rol
in
lods
push
pop
sub
call
test
icebp
sbb
(bad)
adc
loop
mov
in
shl
(bad)
mov
inc
jb
cmp
cmp
add
into
lahf
gs
out
fwait
les
mov
gs
jnp
dec
jle
fnstcw
call
and
sbb
xchg
mov
lea
xor
add
popf
cs
retf
int3
and
xchg
mov
mov
loop
adc
cmp
xchg
push
mov
out
pop
push
movs
pop
call
out
mov
enter
fistp
xchg
je
fwait
ins
jno
imul
cmps
gs
dec
dec
push
test
inc
outs
movs
movs
adc
scas
in
bound
scas
pop
arpl
scas
sar
das
test
scas
xchg
aam
push
ja
xchg
mov
fdivp
in
mov
adc
jle
ja
sbb
mul
movs
mov
mov
ins
pop
sub
movs
nop
movs
jg
sub
clc
pop
and
cmp
in
jg
jmp
push
scas
pop
pop
jl
xlat
retf
idiv
push
xor
in
cli
lods
aas
jae
call
lods
lds
mov
call
add
popa
or
stc
xchg
jno
shl
call
sahf
fild
dec
retf
(bad)
mov
clc
icebp
repnz
stos
ja
sbb
xor
jge
xor
cmp
cmp
pusha
stos
fs
loopne
sar
pop
sub
fbstp
aaa
push
xchg
jmp
lds
jne
pop
xor
ret
sub
rol
mov
cmp
sbb
test
cmp
jnp
mov
sub
jb
xchg
jecxz
mov
outs
paddw
xlat
pop
push
pop
loop
(bad)
ret
je
dec
mov
xor
xchg
pop
lods
cmp
int
std
jge
in
aaa
out
pusha
fadd
sbb
xor
jb
dec
rcl
xchg
push
test
pop
mov
sbb
aaa
sbb
mov
in
retf
jl
and
add
ror
les
sub
sub
sbb
pop
shr
dec
jae
xchg
sbb
clc
mov
repz
jl
mov
mov
inc
lea
jp
cmp
mov
out
idiv
add
ds
pushf
psllw
cmps
hlt
add
ds
(bad)
push
in
mov
and
(bad)
sti
movs
pop
aaa
pusha
pop
pop
mov
mov
jecxz
not
pop
mov
lock
xor
dec
out
or
outs
cld
cmp
ja
jl
push
icebp
sbb
adc
loop
mov
shr
sti
fisttp
outs
pop
push
inc
jb
jge
gs
sub
and
xchg
add
jge
gs
xchg
out
cmps
xchg
ret
add
aam
outs
dec
movs
movs
pop
pop
jno
mov
lahf
fs
mov
add
adc
jns
push
into
(bad)
dec
dec
jo
loop
movs
mov
rcl
das
adc
mov
sbb
mov
pop
je
mov
xchg
(bad)
je
add
add
sbb
mov
fmul
retf
not
cmp
cld
into
cli
retf
sub
sub
inc
retf
fbstp
das
fnsave
dec
mov
div
outs
(bad)
jne
mov
retf
cs
sahf
loop
cmps
mov
sub
int3
xor
mov
or
sub
dec
mov
ins
pop
dec
fstp
jae
cmp
push
push
xchg
mov
mov
fcomi
outs
sub
imul
loope
cmp
adc
jecxz
mov
stos
mov
mov
fcomp
les
push
mov
xchg
xchg
inc
xor
sub
and
or
loopne
nop
add
mov
popf
dec
mov
xchg
test
outs
jbe
jmp
dec
daa
in
add
mov
add
(bad)
in
adc
jecxz
inc
outs
lods
aas
xchg
aam
cmp
mov
adc
jmp
repnz
xchg
sub
dec
repnz
out
test
inc
leave
(bad)
ins
fnstcw
addr16
ja
add
and
pop
in
div
sub
addr16
jl
or
stos
mov
jle
adc
je
pop
cmp
aam
push
cmps
and
xchg
cmp
rcr
push
fbstp
cdq
or
jae
and
out
xchg
mov
jecxz
cmps
sbb
in
outs
das
sub
imul
mov
das
js
jo
(bad)
dec
fcomp
jmp
inc
cmps
sar
xchg
std
aam
(bad)
fnstenv
inc
fld
fld
cwde
dec
add
into
add
fs
mov
add
fld
xchg
lods
fimul
lods
retf
cmp
rcr
jns
shl
fstp
les
pop
push
rcl
imul
cmp
retf
(bad)
lea
sahf
mov
mov
mov
jp
dec
push
das
mov
pushf
out
cmp
jle
push
jnp
mov
fimul
or
inc
mov
imul
mov
loop
xor
jae
dec
fnsave
(bad)
jno
out
pushf
push
idiv
mov
dec
push
pop
adc
jne
dec
mov
adc
jecxz
into
aam
stos
xor
or
xor
sub
xchg
inc
mov
movs
out
out
mov
pop
shl
pop
gs
add
jmp
push
jae
sar
jae
cmp
xor
lds
dec
lds
fstp
cmp
call
cmp
mov
call
and
daa
cmp
cmp
dec
fidivr
and
sub
leave
cmc
jne
jg
and
or
or
xchg
call
loopne
mov
pop
data16
push
out
mov
(bad)
(bad)
clc
xor
repnz
cmp
xchg
adc
push
add
jno
arpl
mov
sub
sbb
sahf
out
cs
out
inc
leave
mov
aam
or
cmps
fsub
icebp
jge
xchg
addr16
pop
cmp
cmc
fwait
xchg
sbb
inc
jnp
push
(bad)
les
mov
fs
neg
into
jle
jae
dec
test
cwde
gs
add
inc
mov
je
cmp
push
dec
aaa
xchg
aam
pop
dec
cmp
push
xlat
mov
sbb
lock
cmp
push
int
inc
push
xor
pop
(bad)
fldlg2
jne
or
in
out
loope
scas
(bad)
cmps
or
xchg
outs
icebp
movs
pop
mov
mov
retf
xor
dec
test
gs
enter
add
add
aaa
xchg
sbb
push
push
in
mov
sbb
cmp
cmp
fwait
int3
sub
pop
fsub
xor
imul
lds
xchg
cld
mov
adc
and
fidivr
dec
or
cld
ret
pushf
ror
cwde
imul
test
shl
leave
xchg
out
xor
sub
mov
push
inc
xchg
mov
dec
data16
loop
pop
stos
inc
loop
rcl
retf
jne
ret
dec
fld
stc
mov
pop
push
cli
dec
test
xor
mov
cmps
cmp
call
mov
sahf
dec
xchg
adc
mov
movs
xor
cwde
inc
push
repz
xchg
jp
loop
mov
outs
push
cmp
scas
and
or
mov
test
pop
dec
dec
loop
sub
dec
icebp
dec
xchg
and
into
stos
fistp
and
xchg
push
cmps
mov
(bad)
and
ss
call
push
xor
add
je
mov
std
xchg
rol
int3
and
inc
dec
mov
fild
mov
retf
lock
aam
(bad)
sub
inc
inc
pop
mov
stc
jae
sbb
sbb
sbb
shr
mov
sub
in
push
inc
dec
enter
sub
pop
sti
in
and
and
(bad)
sbb
mov
leave
fnstsw
lock
or
sub
dec
leave
jle
jp
pushf
popf
test
xchg
push
loopne
dec
cld
mov
lods
jnp
jb
inc
adc
mov
xchg
sbb
in
sub
test
mov
(bad)
jno
ret
mov
leave
scas
cli
aas
out
stos
lds
inc
xchg
scas
pop
pop
adc
repnz
sub
jg
ins
sub
cli
fisttp
or
in
fwait
test
jmp
ret
sbb
in
mov
sti
dec
(bad)
stos
stc
cld
jo
loop
adc
mov
ins
and
movs
fwait
imul
mov
out
mov
jnp
mov
mov
hlt
sti
dec
out
stos
mov
push
jmp
nop
jo
pop
retf
ins
popf
cmp
sti
mov
cmps
or
scas
jmp
mov
mov
aam
sti
call
jge
mov
mov
mul
pop
mov
shr
and
aam
xchg
loop
ja
mov
movs
popf
aam
arpl
sbb
dec
mov
test
mov
cmps
fisttp
pop
cmp
js
aam
push
inc
imul
loopne
or
push
ins
add
mov
fisubr
jl
retf
stos
adc
cmp
jbe
or
and
jns
dec
dec
out
jnp
xor
add
cli
les
add
mov
out
inc
cmps
leave
fdivr
jl
loop
out
in
push
imul
fs
mov
or
pop
in
rcl
xchg
sub
movs
mov
mov
pop
mov
jge
test
out
jg
pop
aas
in
out
sub
push
mov
xchg
std
iret
ds
sub
add
popf
pop
scas
aam
fst
cmps
test
fisub
sbb
jle
into
push
add
and
mov
clc
ins
cmp
mov
cmp
pop
or
(bad)
xchg
ficom
(bad)
pop
jle
scas
ds
jne
or
dec
mov
leave
mov
cdq
jge
inc
aas
icebp
popa
mov
clc
lds
ss
cli
push
inc
cmp
call
xchg
in
jg
shr
pop
les
jp
adc
std
pop
ror
jne
cld
movs
fcmovnbe
xchg
inc
sub
lods
pop
xor
mov
cli
inc
mov
push
out
mov
fsub
loopne
(bad)
ds
(bad)
arpl
bound
sub
jns
mov
mov
mov
cmp
fisubr
mov
test
stc
push
push
xor
lods
sbb
add
fcomp
push
dec
push
iret
xor
pushf
jle
pop
in
sti
inc
rcr
push
mov
aam
jb
outs
in
xor
xlat
mov
inc
ret
xor
mov
fist
mov
mov
mov
jl
or
mov
inc
jg
push
mov
sti
imul
push
mov
out
(bad)
ins
sti
push
mov
mov
pop
fstp
jnp
add
xchg
jmp
dec
pop
cli
arpl
imul
xor
xchg
movs
leave
and
inc
in
es
jne
push
dec
stc
aam
and
mov
pop
xchg
jbe
xor
adc
dec
ins
mov
mov
mov
out
sti
test
fild
mov
(bad)
sahf
sti
(bad)
sbb
push
mov
addr16
movs
scas
mov
xlat
stos
mov
pop
call
call
or
daa
and
in
ret
fcomp
(bad)
and
js
jns
scas
pop
mov
xlat
push
popf
pop
push
retf
sub
call
dec
mov
aam
sbb
mov
cmc
mov
cmps
cmp
jecxz
push
aad
mov
and
and
cmps
or
pop
inc
cmp
(bad)
ficomp
sbb
adc
mov
pop
xor
and
sub
pop
scas
arpl
cld
cld
sar
out
bsr
inc
outs
or
xchg
aaa
imul
jecxz
sbb
mov
movs
cdq
cdq
xor
dec
mov
fild
pop
push
lahf
dec
cmps
mov
push
mov
mov
jle
jno
fs
(bad)
std
push
je
xchg
outs
or
lock
cmp
repnz
(bad)
stos
pop
jo
(bad)
push
faddp
cmps
test
and
test
outs
push
pop
in
jp
cmp
adc
aas
int
movs
sub
and
and
aad
(bad)
std
jmp
ret
mov
jns
stos
mov
jl
sub
idiv
or
jbe
sub
cld
xor
pop
sub
cmp
push
xor
dec
cmc
out
push
(bad)
lods
pop
push
mov
cmps
mov
rol
pop
push
repz
pop
mov
push
xor
xchg
push
out
xor
jo
pop
ins
out
imul
push
nop
js
vhsubpd
(bad)
mov
and
loope
pop
dec
ret
inc
pusha
in
fisubr
adc
pop
arpl
pop
push
and
jne
cdq
inc
addr16
inc
inc
inc
out
mov
out
paddusw
pop
pop
cdq
in
loopne
push
fsubr
idiv
mov
les
add
idiv
ret
ins
dec
fstp
mov
add
lock
mov
jbe
adc
cmp
sbb
retf
cli
mov
mov
adc
sbb
xchg
frndint
mov
(bad)
inc
movs
lock
add
in
dec
mov
jmp
adc
ss
jne
mov
neg
adc
mov
test
int
cmp
pop
pushf
xchg
mov
xor
jmp
int3
xchg
fwait
mov
(bad)
add
ret
pushf
cli
repz
fbstp
add
cmps
xchg
retf
mov
dec
out
cmp
imul
adc
mov
aas
mov
push
lock
stos
imul
test
out
mov
xor
movs
movs
fimul
pop
push
cmps
jo
in
dec
movs
ja
xchg
jnp
call
movs
mov
sub
pop
fdivr
aam
jmp
mov
fyl2xp1
push
xchg
fnstcw
pushf
jle
dec
cmc
cmps
xchg
add
aad
push
xchg
push
ins
leave
pop
cdq
xchg
pushf
repnz
les
xchg
mov
mov
cmp
mov
in
leave
movs
in
jmp
mov
mov
jne
std
gs
lds
cmp
test
cmc
and
enter
and
mov
jle
sub
xchg
cmp
inc
or
and
ret
lahf
dec
imul
popa
inc
test
and
xchg
and
cmp
xchg
leave
pop
sub
pushf
cdq
dec
cmp
out
popa
sbb
fs
fmul
push
mov
retf
xor
dec
fcmovnbe
mov
outs
inc
mov
mov
mov
dec
in
int
aaa
xor
push
adc
test
mov
inc
xor
jb
add
push
mov
out
out
pushf
cmp
scas
xchg
adc
or
xor
lds
xchg
rcr
xchg
cmp
into
or
daa
jge
aam
fst
cmp
xchg
sub
jb
in
fiadd
into
push
icebp
ins
bound
jmp
ficomp
enter
mov
inc
push
mov
(bad)
icebp
nop
push
fstp
or
rol
cli
mov
mov
xor
mov
or
ret
mov
mov
cmps
push
xchg
sbb
xchg
shr
jae
fadd
pop
loop
or
aad
sar
shl
sbb
and
std
popa
pop
or
mov
adc
cmp
jp
inc
jmp
dec
cmp
js
push
cs
inc
int
or
stc
shl
aad
iret
inc
ficom
adc
mov
test
jo
sbb
add
into
shl
cmps
jb
(bad)
leave
fwait
sub
mov
popa
mov
jb
scas
lods
dec
mov
adc
sub
and
jb
ja
hlt
xchg
mov
mov
and
or
pop
sbb
pusha
jno
dec
or
cmps
cwde
mov
sbb
scas
and
fwait
push
xor
fdiv
cmp
icebp
sbb
icebp
sub
lea
sar
cli
bound
scas
dec
jae
xchg
rcl
out
stos
loopne
jmp
cwde
or
daa
mov
mov
dec
fstp
test
push
stos
fimul
jmp
mov
stc
sub
les
retf
mov
fcmovne
fndisi(8087
sub
repz
or
test
into
jno
xchg
sbb
xlat
pop
xor
sbb
jne
xor
ins
cmp
stos
aam
and
in
dec
push
mov
dec
mov
sahf
pop
sbb
sub
push
ja
cmps
sub
shl
mov
std
ror
xchg
pop
push
pop
loop
nop
xchg
sbb
test
popf
sub
dec
add
into
mov
xchg
xor
movs
mov
inc
sar
loop
data16
pop
idiv
mov
cmp
fwait
mov
adc
mov
idiv
push
xchg
lock
into
adc
jge
(bad)
aad
out
inc
sub
jae
pop
sbb
movs
push
pop
mov
xchg
sub
dec
popf
out
add
fidivr
ins
jnp
lea
mov
push
mov
aam
dec
std
sub
mov
hlt
jmp
scas
xor
mov
fnstsw
cmps
shr
lods
push
test
mul
xchg
xchg
xchg
xchg
dec
dec
xor
ss
adc
stc
popf
inc
cmp
pop
(bad)
fxtract
dec
push
test
test
pop
cs
in
cmp
xor
loop
add
je
cdq
sti
(bad)
hlt
jno
in
inc
xchg
es
adc
inc
(bad)
mov
fisttp
and
add
in
ret
sbb
xchg
test
arpl
mov
xor
mov
mov
sti
fxch
pushf
jnp
scas
sbb
into
or
push
fstp
sub
mov
popa
fst
out
call
retf
test
repz
in
cmc
pop
leave
push
mov
cmp
mov
pop
outs
xchg
ins
mov
scas
push
mov
lods
and
inc
rcr
jb
in
aaa
xlat
xchg
je
fwait
inc
test
jmp
and
out
sub
pusha
test
sub
push
push
data16
push
mov
pop
cld
sub
add
mov
cs
je
jl
xor
jmp
sar
or
popf
push
jo
hlt
dec
jns
inc
hlt
cmp
sbb
movs
push
cmp
cmp
jmp
sub
fidivr
in
cmp
in
xchg
mov
pop
sub
stc
or
inc
dec
test
je
pushf
dec
sub
pop
das
(bad)
scas
and
out
mov
dec
fidivr
imul
mov
cmp
cmps
int3
mov
mov
cmp
out
jmp
push
cdq
jl
cmp
inc
dec
or
pop
jae
out
(bad)
out
mov
xchg
ins
add
mov
xchg
xchg
pop
mov
and
retf
pop
mov
jmp
sar
dec
call
sbb
sbb
es
mov
push
add
dec
and
mov
lahf
mov
aas
adc
cwde
xlat
leave
mov
js
pop
(bad)
push
push
out
pop
xor
fldenvw
xlat
add
push
mov
int3
aam
adc
out
dec
lock
lods
push
lods
popf
inc
rcr
mov
repz
xchg
ins
xchg
dec
dec
fs
mov
jb
aas
mov
mov
dec
sbb
ds
cs
xor
pop
pop
inc
fdivp
pop
cmp
cld
mov
fs
jno
sub
sbb
hlt
leave
jns
pop
loope
repz
mov
addr16
jno
add
jnp
and
xchg
cmp
cmps
aad
jg
push
fsub
cdq
dec
stos
push
dec
rcr
pop
das
in
push
addr16
shr
sbb
cmc
cmps
xor
pop
jae
dec
sbb
cmp
pushf
sub
cmp
hlt
into
popa
mov
xchg
jmp
lds
fisubr
sub
xor
jge
in
adc
sbb
jae
in
jo
out
pushf
push
pop
jp
inc
inc
xchg
pop
repnz
add
out
inc
xchg
les
pop
push
(bad)
cmps
pushf
mov
stc
jmp
cdq
fiadd
inc
in
xchg
mov
jle
imul
arpl
repnz
ror
stos
pop
out
loop
push
mov
gs
outs
scas
and
test
and
xor
add
jne
mov
outs
add
movs
push
xor
pop
daa
jmp
inc
clc
shr
pop
push
cmp
jmp
xchg
jae
(bad)
cmp
into
int3
push
cmps
add
xchg
mov
(bad)
std
not
push
sbb
dec
and
push
jno
and
sbb
popf
call
rol
in
mov
or
dec
retf
or
cld
sub
in
fisub
in
sbb
sti
xchg
mov
lds
jecxz
pop
imul
fisub
fcomi
push
lock
pop
inc
retf
gs
daa
das
push
movs
loope
dec
sub
mov
add
sqrtps
pop
adc
push
lock
int
mov
cmps
ret
xchg
sbb
sahf
sub
fwait
movs
dec
dec
es
movs
push
mov
dec
or
dec
sbb
or
mov
sub
jp
sahf
test
addr16
ja
repz
jle
mov
stos
test
std
sbb
dec
jle
imul
jecxz
lahf
fsubrp
je
fdiv
add
ret
pop
pusha
push
ins
dec
stos
mov
inc
pop
iret
jl
add
rcl
stos
lea
cmps
dec
daa
loope
test
inc
lds
jnp
mov
sbb
sti
lds
shl
(bad)
adc
out
cmp
push
sbb
imul
fcom
cmps
sub
cmps
pop
add
scas
mov
out
adc
aam
xchg
out
arpl
jb
sti
(bad)
shr
pusha
and
push
outs
shl
xchg
pop
cmps
cs
dec
lods
push
xchg
jo
push
lods
mov
dec
jge
stos
mov
cmp
fcom
leave
arpl
outs
lods
adc
mov
cmc
cmp
fimul
inc
xchg
or
cli
inc
mov
xchg
movs
scas
jb
sbb
shl
xor
mov
in
lahf
xor
jmp
int
iret
gs
popa
mov
sub
xor
dec
dec
xlat
retf
mov
jmp
sbb
les
not
lahf
mov
call
jmp
mov
push
cmp
mov
vpmaxsw
sub
push
repnz
mov
jg
scas
jle
xchg
movlps
mov
mov
add
inc
(bad)
mov
xor
sub
jb
jecxz
out
inc
mov
in
ins
js
jmp
sbb
(bad)
mov
cs
shl
xor
mov
call
sbb
push
jge
rcr
aaa
mov
mov
popf
std
and
jns
mov
aam
inc
jo
push
shl
fmul
sub
jg
push
and
jno
jbe
sbb
fisttp
cmps
or
xchg
outs
call
test
push
push
inc
repz
retf
ins
iret
retf
lea
lods
cmp
ds
cwde
mov
jno
stc
cmc
mov
iret
lock
hlt
xchg
mov
xor
ss
arpl
mov
ja
repnz
mov
mov
ret
cmc
dec
pop
jp
(bad)
movs
js
cmp
into
dec
lock
loop
jb
lea
test
jbe
rcl
int3
and
jge
mov
and
stc
xchg
aam
adc
adc
cmp
add
and
fnstsw
loope
div
push
jl
js
retf
lods
ficomp
ror
push
mov
scas
mov
jmp
fnstsw
test
mov
xchg
dec
shl
stc
and
pop
pop
fincstp
fisubr
inc
out
test
lahf
out
(bad)
mov
push
mov
stos
push
cmps
gs
pop
jne
shr
push
sahf
lods
sub
stc
cmp
mov
jmp
sbb
js
shl
xor
(bad)
mov
inc
scas
mov
loopne
mov
jo
xchg
ss
cmps
xchg
adc
scas
push
repnz
iret
(bad)
dec
jb
xchg
xchg
mov
adc
push
in
jmp
in
fistp
ds
dec
dec
add
xchg
popf
(bad)
push
mov
cdq
push
imul
sbb
fsub
mov
mov
mov
mov
rcr
scas
inc
jae
push
pushf
push
cli
xchg
cmc
das
jne
cmps
mov
jns
aaa
xor
mov
mov
fcmove
cli
(bad)
mov
call
icebp
push
mov
bnd
mov
call
pop
mov
fisubr
push
nop
xchg
test
add
pusha
add
jb
sti
add
js
daa
jbe
mov
mov
cmp
div
sub
add
push
bound
sbb
(bad)
sub
cwde
enter
loop
aas
mov
mov
mov
adc
addr16
div
push
pop
aam
push
lahf
mov
xchg
inc
cwde
out
add
movs
enter
dec
jno
std
mov
jne
(bad)
xor
sub
test
sti
and
mov
xchg
icebp
ins
push
imul
out
in
(bad)
push
mov
ins
cs
fwait
dec
(bad)
loope
adc
outs
outs
and
xchg
xchg
xor
clc
or
add
sbb
or
aas
lods
push
and
popf
push
xchg
jmp
gs
xor
dec
jno
sub
leave
sbb
mov
pushf
popa
arpl
cld
sbb
mov
cmp
call
shl
out
mov
push
sub
cmp
mov
xchg
stos
ret
ds
ret
push
add
and
and
pop
pop
and
imul
in
aam
mov
das
cmovg
frstpm(287
jne
sti
xor
add
retf
mov
xor
in
call
fidivr
jle
cmps
mov
retf
inc
push
mov
lea
jns
xchg
test
cmp
fs
movs
(bad)
xor
cmps
pop
mov
fs
out
sub
lahf
imul
pop
leave
mov
cmps
jle
sub
jno
inc
sub
inc
xor
scas
cmp
in
inc
ret
data16
adc
lahf
ja
and
mov
ficom
xor
scas
pop
add
jmp
xchg
aam
call
cmc
sbb
(bad)
mov
pop
scas
ret
jne
int3
movs
push
outs
(bad)
xlat
scas
push
fidiv
sub
pop
frstor
inc
pop
scas
push
xor
dec
push
mov
mov
xchg
loope
fnstenv
mov
adc
push
stos
and
push
repz
ds
mov
fldcw
ins
pop
mov
in
mov
push
shl
aas
inc
outs
std
pop
retf
dec
dec
cmp
clc
inc
(bad)
scas
cli
lahf
inc
push
in
mov
jae
scas
stos
inc
cmp
push
xchg
xor
into
dec
dec
xor
mov
pop
push
aad
add
cmp
iret
jno
jo
movs
cmps
cmp
push
push
push
fsubr
mov
pop
out
push
xchg
(bad)
out
jmp
xor
iret
dec
stos
xor
adc
sbb
add
jge
sub
or
xor
lds
add
adc
pop
add
dec
cmp
dec
mov
sub
push
call
fcomp
cmps
push
cs
fwait
daa
fisubr
jae
xchg
stos
dec
leave
xlat
gs
xchg
xchg
lods
or
and
push
mov
push
aam
enter
out
mov
pop
or
stos
sub
repz
dec
fidiv
jmp
stc
jno
push
jnp
out
jmp
lds
fdivr
push
cmp
out
ins
fidiv
jmp
cmps
sbb
cmp
xor
pop
pop
in
push
dec
(bad)
xor
mov
inc
mov
xor
jmp
movs
test
call
add
xchg
test
arpl
push
xchg
mov
pop
jmp
jmp
mov
imul
aad
dec
aam
or
add
inc
stc
jg
cmp
cdq
mov
sub
dec
int3
stc
or
lahf
in
(bad)
rcr
std
xchg
mov
stc
cmps
pop
jmp
mov
inc
fs
sub
shl
mov
sub
mov
pop
adc
rcr
in
aad
popf
xchg
fbstp
ja
jp
shl
out
lods
add
push
lahf
mov
pop
mov
mov
shl
mov
js
mov
jae
std
icebp
cwde
clc
(bad)
imul
data16
mov
mov
push
lods
ins
jnp
out
ja
jecxz
(bad)
call
xchg
imul
inc
inc
movs
jns
mov
mov
dec
mov
test
stos
push
popa
not
fcmovne
cmp
push
xchg
xor
dec
daa
sub
cs
sub
ins
clc
or
call
arpl
stos
and
data16
jb
push
lea
mov
ficomp
push
sub
cmp
push
mov
cli
cmps
in
out
retf
mov
int3
inc
jmp
push
outs
cmp
lods
xlat
mov
movs
rol
icebp
sbb
popa
jmp
jle
jmp
xor
xchg
or
loope
push
lods
imul
mov
pop
pushw
or
sbb
xchg
mov
and
movs
in
or
push
inc
xchg
push
xchg
fimul
mov
movs
inc
mov
data16
das
dec
leave
jo
cmp
scas
cmp
push
stos
push
pop
push
bound
repz
arpl
cmp
push
ins
retf
fisttp
jle
movs
push
out
xchg
jmp
repz
jno
fwait
popa
ins
and
shl
daa
ins
cmps
push
sbb
je
sbb
pop
dec
cmp
loop
sbb
mov
jecxz
mov
daa
jbe
pop
mov
mov
outs
sahf
out
sbb
nop
jno
(bad)
imul
pusha
cdq
mov
retf
mov
and
gs
daa
daa
push
mov
push
lock
pop
mov
cmp
lea
push
adc
mov
aad
int3
jnp
fsin
pop
sti
iret
mov
dec
dec
pop
inc
pop
fbstp
out
pop
mov
push
inc
pop
imul
(bad)
ins
mov
mov
cmc
add
mov
xor
in
sbb
jmp
test
dec
mov
mov
xchg
iret
iret
je
dec
mov
imul
pop
lea
lods
ficom
push
movs
jmp
into
sahf
test
sbb
outs
pop
push
mov
fs
push
popf
enter
jle
popf
imul
daa
daa
sub
dec
pop
inc
aaa
ins
mov
cmp
mov
jecxz
fadd
mov
mov
sub
dec
shr
jmp
ins
mov
pop
scas
dec
cmps
(bad)
out
scas
dec
sub
mov
push
mov
xor
cmc
jno
fldcw
(bad)
dec
dec
lods
xchg
aaa
pop
sbb
bswap
pop
int
loope
inc
or
in
or
imul
outs
push
dec
leave
jge
cld
jge
(bad)
dec
cmc
pop
ret
sti
ret
cld
xor
aad
cmps
fs
cmp
sub
stos
ja
jge
xor
cmp
retf
mov
dec
aam
fisub
or
pop
test
inc
hlt
dec
jmp
cmp
push
xchg
aam
out
jnp
mov
call
inc
jns
pop
sbb
and
cmc
sbb
les
xchg
push
imul
xchg
xor
scas
sub
push
jnp
push
sar
and
dec
int
dec
adc
cmp
rcl
ss
shl
popf
lods
fistp
(bad)
aad
mov
cli
push
pop
jmp
cs
movq
mov
not
gs
sar
movs
pop
adc
dec
xor
xor
dec
test
cmp
pop
test
aam
pop
pop
stc
fisubr
out
xchg
cmp
mov
dec
(bad)
adc
dec
and
pusha
xor
dec
push
push
xor
inc
inc
cmp
das
(bad)
(bad)
(bad)
jns
(bad)
out
(bad)
pop
sbb
and
adc
adc
cli
mov
jne
fisttp
mov
inc
sub
xor
push
pop
pop
xchg
(bad)
mov
jbe
mov
call
in
icebp
test
inc
cld
pop
das
daa
cld
int
in
(bad)
mov
dec
movs
dec
lock
xchg
dec
(bad)
repz
shl
sub
mov
retf
dec
mov
mov
pop
fcmovb
push
cwde
xor
sahf
outs
add
lds
and
and
(bad)
xchg
std
cmps
data16
sub
add
mov
dec
ja
es
adc
mov
cld
dec
int
cli
outs
mov
adc
fstp
inc
inc
mov
pop
lods
dec
adc
dec
sub
sub
or
or
dec
sti
push
test
cmp
pop
aam
aam
push
out
ja
add
movs
xchg
push
rol
mov
mov
cmps
fst
sub
mov
xchg
imul
push
vrsqrtss
jbe
test
or
lds
mov
lds
mov
mul
scas
sub
sti
mov
push
mov
cmp
cld
int3
fstp
fcomp
pop
mov
ds
call
in
lea
xchg
imul
movs
xchg
mov
adc
jae
and
sub
xor
ins
mov
ja
aad
je
cmp
ret
test
jbe
lods
ja
aad
jae
dec
cdq
cmp
call
fs
mov
(bad)
stos
popa
pop
sbb
aas
gs
mov
cmp
rcl
out
aad
inc
out
xchg
xchg
(bad)
mov
mov
dec
imul
out
jg
cmp
aam
sbb
jae
push
lahf
imul
mov
push
push
xor
sub
popf
pop
rol
dec
pusha
pop
mov
jno
sub
cmps
sub
jp
retf
fimul
lock
test
jne
in
xchg
in
int3
add
scas
nop
push
xchg
or
outs
mov
sub
je
into
dec
adc
ins
clc
sbb
out
shl
pop
stos
cld
into
ss
les
or
test
push
outs
sub
mov
shr
sti
inc
cld
mov
stc
rcl
xchg
xchg
pop
mov
mov
repnz
xchg
push
retf
ins
mov
arpl
out
out
push
hlt
call
imul
cmp
jge
loopne
daa
jne
dec
xor
push
mov
enter
cmc
ficom
mov
ret
dec
cwde
jne
jno
ss
in
and
fild
retf
ds
xchg
popa
xor
mov
sbb
pop
lods
imul
out
lds
mov
daa
sbb
xor
cmp
mov
jmp
loop
pop
call
movs
(bad)
jb
fidivr
jno
imul
call
sub
neg
push
mov
cmp
not
cmps
cmps
sbb
lds
mov
das
inc
sub
mov
not
push
popf
xor
xchg
xchg
sbb
dec
mov
sbb
lock
mov
outs
int3
shr
push
stos
xor
imul
movs
dec
and
or
push
jae
dec
jne
xchg
fs
int
adc
rcl
out
inc
pop
cmp
cmp
data16
pop
cdq
ficom
cmps
mov
cmc
neg
jb
push
dec
call
or
xor
sub
add
stos
retf
or
repz
or
daa
push
fwait
in
adc
hlt
cmp
dec
jb
inc
jg
mov
mov
pushf
call
pop
lds
jg
js
fistp
cli
jge
rcr
jg
cmp
sbb
xor
xchg
jbe
sti
mov
jge
xor
(bad)
loope
sbb
int3
data16
mov
or
pop
push
icebp
mov
mov
pop
inc
lods
push
xor
push
pusha
cld
pushf
pop
icebp
jg
arpl
(bad)
sar
dec
addr16
idiv
push
cmc
aaa
jl
jb
lods
jecxz
dec
mov
jns
cmp
in
sbb
addr16
in
push
icebp
cdq
and
dec
push
repnz
cmp
scas
jl
fdivr
inc
xchg
gs
jmp
jmp
(bad)
push
pop
cmp
lock
jbe
lods
xor
sbb
and
push
pop
jns
xor
dec
or
inc
dec
inc
xchg
int3
loope
ret
outs
js
(bad)
mov
xchg
pop
cmp
bnd
fstp
fisub
xchg
xchg
aam
adc
and
add
pop
mov
mov
push
jne
into
call
test
or
cwde
cmp
jne
hlt
(bad)
fidivr
or
icebp
inc
push
fnstcw
sbb
data16
(bad)
call
mov
mov
imul
sti
test
inc
push
or
lds
retf
xchg
fucomp
std
scas
jae
xor
jne
mov
mov
in
adc
push
xchg
xor
(bad)
lods
loop
and
mov
outs
xchg
ror
or
aad
dec
xchg
repnz
sub
cwde
inc
repz
test
fmul
retf
or
call
call
cmp
ins
sub
xchg
pop
pop
int
fbld
fisub
sub
xchg
push
movs
shl
pop
imul
enter
dec
inc
in
mov
pop
jle
mov
call
fstp
mov
sbb
sti
mov
mov
jp
lock
pop
jle
jns
iret
cmp
xchg
xchg
pop
retf
cmp
ror
and
test
add
sub
call
mov
sub
pop
stc
jecxz
mov
inc
inc
std
mov
das
mov
es
push
jp
jl
cld
test
leave
mov
int
ret
jmp
xor
sar
jecxz
jmp
push
xor
rcr
jmp
out
jp
gs
add
mov
jae
inc
sub
into
mov
retf
into
lods
pop
pop
jns
mov
inc
imul
in
jle
call
mov
rcr
(bad)
push
push
sahf
push
mov
push
fist
stc
in
push
sub
daa
stos
dec
xor
xchg
pop
fucomp
imul
sub
sahf
push
sbb
mov
jns
mov
mov
cmc
ins
mov
movs
test
out
sub
dec
fdecstp
cmp
test
sub
dec
mov
mov
add
test
jmp
arpl
dec
push
scas
mov
sub
lods
stos
stos
ja
mul
mov
popa
sub
sbb
ins
call
mov
mov
sbb
mov
mov
pop
shl
repnz
out
push
clc
test
add
cdq
out
outs
pop
sub
(bad)
sbb
push
scas
jmp
scas
xlat
and
retf
xchg
jecxz
mov
cmp
sbb
xchg
add
daa
and
retf
sub
loopne
push
popf
dec
xlat
mov
outs
gs
imul
jo
cld
dec
test
jno
sahf
lods
in
leave
adc
jo
dec
popa
add
and
adc
aaa
fwait
mov
sbb
sub
fsubr
fwait
jl
lock
jle
ror
out
dec
push
jbe
fld
repnz
push
test
xor
mov
xor
fnstsw
out
adc
rcl
repnz
out
pop
jnp
xor
(bad)
mov
jnp
ins
jp
or
jg
out
xchg
aam
fs
test
aaa
(bad)
adc
sbb
ficom
cmp
mov
jns
loope
mov
push
xchg
sbb
jns
fnstcw
jo
in
sbb
jae
mov
jae
xchg
imul
imul
mov
pop
scas
ds
es
dec
lahf
pushf
rcr
dec
shl
jmp
mov
ds
sub
sub
or
loop
sub
sbb
lods
cmp
xor
mov
push
xchg
mov
leave
mov
push
cs
addr16
movs
mov
xor
ja
cmps
stos
fwait
sub
mov
and
dec
add
push
pushf
js
push
jmp
cwde
and
or
mov
add
mov
shl
fimul
jle
adc
idiv
add
icebp
jg
push
cli
and
es
movs
dec
jne
stc
icebp
cmp
push
push
sbb
xlat
xor
rol
push
test
and
dec
sub
mov
inc
ins
adc
jge
adc
out
mov
(bad)
test
pop
mov
mov
add
add
cs
xor
pop
xchg
xchg
popf
stos
xor
or
fwait
daa
and
push
mov
xchg
cmp
mov
cmp
sub
dec
inc
xor
imul
mov
pop
add
rcl
loop
stos
je
(bad)
xchg
inc
aam
mov
inc
cld
inc
outs
dec
ss
(bad)
mov
lods
aas
push
bound
jp
es
cdq
dec
and
pop
or
inc
adc
mov
fst
mov
sub
xor
sbb
push
xor
dec
dec
xchg
mov
stc
jne
push
jb
icebp
inc
lahf
xchg
jp
mov
mov
mov
xchg
inc
xchg
movs
xchg
or
and
jbe
(bad)
xchg
mov
mov
push
cmps
pop
xor
sahf
mov
aam
ss
outs
idiv
(bad)
jp
adc
cmp
jge
mov
ret
cmc
push
call
aam
lods
daa
push
jo
test
jae
scas
push
movs
cmp
push
lss
repnz
loop
int3
adc
ins
add
(bad)
pop
mov
adc
and
(bad)
fidiv
mov
jnp
cmps
cdq
loopne
rol
shr
(bad)
rol
mov
stos
jg
mov
add
add
adc
pop
and
push
sbb
lea
mov
sub
fld
inc
jno
pop
pop
push
aas
iret
mov
push
dec
push
xor
mov
push
or
loop
dec
pop
mov
int3
in
pop
or
dec
inc
mov
loop
cmps
into
out
enter
add
cmp
mov
sub
mov
jl
mov
ss
push
push
test
call
jo
and
cmc
das
int3
in
neg
cld
aas
mov
push
das
rcr
pop
fcmovnu
push
outs
retf
jmp
cmps
pop
movs
adc
sbb
fwait
ins
mov
cwde
jae
mov
mov
xchg
xchg
and
sbb
mov
fs
dec
jle
push
hlt
fst
ins
jmp
in
test
daa
fcmovbe
pushf
push
ret
inc
jmp
jp
int
pop
cmps
mov
dec
fidivr
ret
aaa
mov
dec
in
cmp
in
pushf
add
adc
(bad)
dec
into
ds
sahf
jecxz
popa
pushf
loop
sub
das
xchg
inc
shl
das
shl
sub
fistp
fnstcw
outs
call
cmp
mov
inc
ins
push
adc
cwde
push
fisttp
test
sub
(bad)
cmp
jg
push
push
out
pop
lock
stos
into
jne
sub
sar
(bad)
rcr
mov
add
ret
jne
sub
popf
(bad)
loop
jmp
pop
adc
push
pop
fdivrp
add
loope
shr
mov
cwde
jg
cmc
outs
lds
aaa
xor
sub
add
adc
lods
jecxz
or
data16
sbb
cmps
jb
cmp
dec
jae
out
push
(bad)
inc
pop
aaa
ins
push
xchg
in
lea
(bad)
shr
aaa
fwait
sbb
inc
mov
xchg
mov
pusha
push
add
ins
and
(bad)
dec
mov
xor
icebp
mov
sub
or
mov
dec
pop
dec
and
push
aad
xor
sub
cmp
pop
xchg
sahf
pop
xor
sahf
and
mov
xchg
lods
jge
add
jne
mov
mov
test
in
pop
das
mov
lods
sub
jne
jno
pushf
push
std
sti
mov
cmps
mov
mov
xchg
jp
scas
cdq
stos
ffree
std
push
dec
adc
daa
cmp
int3
inc
mov
test
in
ins
dec
getsec
inc
xor
push
out
add
jnp
cmp
ror
jbe
stos
cli
mov
movs
sub
pushf
test
dec
inc
dec
sub
cmp
mov
arpl
xor
sbb
ret
jb
fwait
imul
neg
loop
sbb
add
dec
vpcmpeqb
sub
and
push
jno
push
jle
lock
into
ins
rcl
push
push
das
dec
jo
mov
sub
imul
sti
and
mov
inc
aad
add
sbb
(bad)
mov
out
mov
mov
xchg
or
pop
sti
mov
adc
retf
push
mov
lods
fisttp
push
pop
cmps
mov
jb
in
jb
loop
lock
retf
inc
hlt
dec
push
mov
les
mov
dec
fbstp
imul
jge
xor
out
dec
cld
jle
in
std
cmps
push
sbb
dec
ficom
mov
inc
movs
retf
pop
popf
dec
xchg
inc
or
pop
mov
mov
jmp
les
mov
retf
outs
out
out
jmp
mov
and
cdq
jno
push
ror
sbb
pop
mov
stc
xor
(bad)
push
pop
in
sti
(bad)
jecxz
and
mov
ins
jnp
push
sahf
sbb
add
xchg
xlat
ss
(bad)
lahf
and
punpckhwd
sbb
stc
jae
das
icebp
push
xor
stc
jle
(bad)
fwait
inc
push
ret
pop
cld
sbb
mov
movs
dec
cs
stos
adc
dec
test
and
ja
push
iret
repz
adc
and
sbb
pop
inc
and
push
xchg
repz
ja
mov
not
push
mov
scas
jle
jb
retf
imul
dec
repz
call
loop
call
leave
jb
ds
dec
cli
pop
mov
icebp
(bad)
xchg
out
cmp
jl
mov
pop
jle
jnp
daa
jecxz
call
and
pushf
mov
mov
test
mov
sahf
xchg
ja
push
inc
mov
mov
loope
in
repnz
loopne
sub
repnz
cmp
fs
lods
sbb
call
inc
pop
push
cmp
dec
mov
push
xchg
bound
pop
test
sub
pop
push
or
inc
push
push
inc
pop
cmp
xchg
cmps
sub
xchg
mov
int
xor
test
ret
loopne
(bad)
adc
dec
mov
mul
jne
mov
aad
jle
dec
btr
cmp
imul
repnz
dec
inc
sub
pop
mov
xlat
mov
push
leave
out
sbb
dec
xchg
xchg
mov
xchg
sti
aas
lahf
cli
mov
and
loop
out
adc
mov
jnp
xchg
int
ins
leave
jmp
mov
outs
mov
retf
cmp
mov
dec
imul
inc
in
sub
push
int
loop
retf
setl
aad
mov
call
dec
pop
pop
call
fisub
jne
jp
ja
jmp
jae
pop
cmp
ret
dec
push
fcmovu
pusha
jmp
cmp
xor
in
leave
shr
xor
lahf
addr16
pop
push
sub
stos
das
mov
aam
fdivr
jae
mov
mov
std
xchg
pop
jnp
arpl
and
ins
push
mov
dec
scas
push
sub
sbb
cdq
xchg
pushf
xchg
call
mov
cmp
and
jecxz
dec
jge
in
into
sahf
pop
pop
inc
ror
jle
lahf
loopne
(bad)
lods
lock
imul
stos
mov
dec
cdq
pop
mov
xchg
sub
mov
mov
movs
mov
dec
sub
sub
push
xor
call
imul
(bad)
idiv
lock
loopne
mov
jmp
loop
sar
xchg
aam
push
hlt
loope
dec
inc
scas
jmp
mov
push
enter
jmp
or
adc
sub
xchg
adc
mov
loope
sbb
xor
push
or
fidiv
xchg
jl
retf
mov
fbld
stos
ja
cmps
outs
mov
xchg
mov
nop
push
or
loop
jbe
sub
dec
pop
out
retf
sub
sbb
aam
in
enter
mov
jl
ficom
out
out
jnp
inc
xchg
dec
(bad)
imul
test
sbb
mov
int
call
mov
xor
mov
jecxz
pop
xor
not
fs
cld
in
add
cs
lea
dec
scas
mov
out
mov
cmp
mov
test
cld
push
inc
jge
mov
popf
mov
pop
push
sahf
enter
sbb
into
cmp
adc
ds
ja
dec
mov
xor
sbb
xor
popf
test
nop
adc
jecxz
bound
adc
cld
inc
xor
adc
jae
xchg
or
push
pusha
pop
je
ins
mov
movs
dec
inc
imul
xchg
pop
sub
les
mov
or
and
mov
and
jne
(bad)
mov
loopne
mov
call
aad
imul
test
mov
loopne
xchg
or
mov
sbb
cmps
or
sub
stc
inc
popa
cmp
xlat
mov
icebp
xchg
cmp
sub
dec
inc
jmp
inc
jbe
repz
sub
mov
or
std
loopne
lock
cmp
cmp
stc
inc
mov
sahf
mov
adc
push
or
mov
dec
outs
or
sub
dec
push
cmp
or
xor
xchg
sbb
adc
mov
enter
jecxz
xor
fwait
cdq
in
push
xchg
pop
push
or
ficom
inc
stc
ins
adc
in
hlt
hlt
mov
ss
fdivr
test
or
adc
xchg
inc
int
mov
sub
lock
retf
jnp
mov
sbb
retf
nop
std
mov
test
xor
adc
daa
xchg
in
je
inc
mov
jmp
rcl
dec
add
cwde
xchg
and
mov
cdq
enter
icebp
push
and
idiv
in
cwde
cmp
or
loopne
or
dec
jns
pop
sub
push
in
cmp
or
in
push
call
pop
push
jp
cmps
(bad)
pushf
fdiv
push
push
xchg
jb
mov
cmps
sub
and
sbb
cmp
popf
mov
xchg
jo
jnp
push
mov
(bad)
jle
xchg
inc
jnp
ins
iret
mov
mov
inc
cmp
rcl
(bad)
stos
shl
xor
mul
(bad)
test
push
out
sbb
test
push
pop
jle
xor
cmp
xor
and
jae
jl
je
bound
cld
adc
pop
or
test
mov
pushf
pop
mov
fsubr
cmps
pop
jae
(bad)
std
imul
(bad)
leave
das
adc
dec
cmps
je
inc
in
or
gs
mov
push
ins
cmc
and
test
sbb
pop
inc
xor
aad
push
xchg
push
cmps
scas
cs
scas
mov
mov
adc
cmps
test
xchg
pop
jg
fsincos
rcl
xchg
mov
push
sar
dec
sub
stos
adc
jb
lahf
sub
out
push
jl
mov
test
xor
xchg
les
pop
sbb
adc
push
push
cmp
mov
clc
mov
jns
(bad)
outs
div
inc
mov
fimul
jmp
adc
leave
in
mov
sub
jno
push
out
adc
push
and
mov
(bad)
repnz
leave
retf
mov
mov
dec
dec
icebp
jp
sti
stos
scas
push
inc
mov
sub
mov
(bad)
call
jmp
(bad)
cmps
dec
fwait
inc
xchg
out
retf
inc
dec
(bad)
fcom
and
hlt
sub
push
sahf
nop
imul
push
and
inc
jge
push
test
sub
aaa
popf
push
mov
push
out
movs
test
loopne
repnz
int3
push
or
(bad)
and
xchg
push
out
lock
inc
jns
pop
sti
pop
das
fmulp
dec
movs
xchg
repnz
and
cdq
int
shl
xor
push
scas
lods
sub
sbb
pop
inc
mov
arpl
data16
jle
xchg
mov
(bad)
je
xchg
jecxz
ret
loope
xchg
movs
in
(bad)
into
push
out
jns
cli
adc
clc
sahf
cmp
lock
pop
mov
shr
push
movs
mov
or
sahf
stos
repnz
out
mov
arpl
std
icebp
pushf
inc
mov
dec
cli
push
(bad)
xchg
stc
lock
dec
call
mov
push
cld
xchg
jecxz
jg
call
xchg
nop
push
jo
add
retf
jbe
clc
or
scas
stos
repnz
fimul
adc
push
aam
stos
cmp
out
movs
jge
jg
cld
stc
push
int3
in
mov
scas
das
dec
jg
inc
cs
pop
pop
cmp
cmp
movs
aad
out
aam
rol
sub
jbe
repnz
mov
pop
sar
cmp
scas
dec
pop
inc
adc
aaa
pop
sub
cmp
ret
aad
push
mov
es
mov
jnp
fisttp
loopne
test
lds
shr
pop
call
sub
cmp
out
or
cmp
mov
(bad)
call
mov
sbb
rol
mov
jl
push
loop
mov
mov
mov
lea
mov
fst
shr
lock
cs
dec
leave
in
push
dec
mov
cmp
mov
pop
ficom
test
xchg
dec
inc
pop
aaa
loopne
int3
xlat
ss
rcl
xor
cmp
shr
stos
jle
pop
addr16
pop
adc
or
inc
loop
ror
repnz
neg
das
inc
je
(bad)
xchg
jnp
test
jmp
and
sub
xor
inc
fisttp
add
inc
mov
arpl
shl
jne
std
stos
lahf
cli
xchg
lods
cmc
(bad)
push
jl
cmc
cli
jne
mov
loop
(bad)
xchg
mov
lea
xchg
push
call
addr16
ret
cld
and
xchg
(bad)
xchg
push
test
lock
int3
xor
push
adc
xor
sub
les
rcr
mov
adc
push
stos
xor
pushf
ret
push
pop
pop
outs
fwait
nop
mov
fdiv
pop
ins
push
push
dec
xor
cmc
jno
les
push
ret
push
mov
push
scas
int
in
inc
fnstcw
stc
fild
pusha
mov
dec
mov
stos
in
xchg
pop
mov
mov
in
push
xor
inc
jmp
jbe
mov
rcr
mov
call
in
scas
cmp
jbe
je
test
add
test
push
cmp
sub
pop
xlat
jmp
mov
sbb
int3
xchg
jmp
mov
test
lods
push
mov
retf
adc
(bad)
push
leave
cmp
xchg
inc
lods
retf
and
shr
xchg
test
movs
pop
pop
bsr
add
jbe
ffree
mov
(bad)
mov
jmp
clc
mov
pusha
repnz
push
popa
pop
cld
dec
cmp
dec
jne
sahf
test
jae
push
enter
adc
mov
int
xchg
gs
xchg
cmp
inc
and
rol
into
mov
fldenv
push
or
out
icebp
sub
sub
popa
aad
and
pop
lods
jge
dec
adc
sub
push
xchg
xchg
push
cmps
inc
(bad)
jecxz
push
arpl
sahf
mov
cmp
pop
push
or
std
jno
mov
cs
cdq
rcr
pop
jnp
and
sti
mov
sub
std
arpl
out
push
xor
fnsave
ja
inc
mov
daa
cli
dec
jle
mov
push
xchg
retf
mov
jge
pop
out
sti
rcl
cli
mov
jge
cmps
add
and
cdq
inc
cld
lods
lods
test
sahf
icebp
jg
call
pop
pop
mov
mov
push
out
sbb
es
sbb
pop
mov
stos
leave
add
mov
push
das
mov
sbb
in
jle
lods
dec
and
(bad)
movs
add
out
or
ins
pop
hlt
mov
call
stc
enter
adc
lea
lds
jmp
inc
cmps
ror
movs
(bad)
cli
adc
stos
sar
imul
stc
sbb
sbb
into
stos
dec
outs
mov
cmps
jb
dec
ss
xor
mov
je
(bad)
int
inc
mov
(bad)
mov
je
or
push
nop
in
in
adc
dec
push
mov
and
jmp
(bad)
cld
sbb
mov
mov
adc
cmp
lods
iret
lods
mov
xchg
cmp
adc
push
inc
xor
shl
and
loope
fisubr
jmp
and
test
mov
jle
test
dec
inc
mov
cmps
shl
retf
sub
sub
shl
or
and
in
mov
rol
push
ja
cmp
lahf
pop
xchg
ficom
adc
scas
pmaxub
jp
ret
in
fnstsw
mov
fisttp
sahf
das
dec
xor
inc
(bad)
xor
inc
rcl
or
arpl
into
fld
imul
(bad)
push
mov
imul
mov
push
jl
mov
les
lods
les
fcomp
sbb
je
cmp
xor
scas
mov
mov
js
mov
cs
cwde
scas
push
and
mov
mov
(bad)
xor
add
mov
pop
cwde
inc
push
aam
push
inc
or
push
jns
mov
aas
sbb
jbe
adc
push
cmps
retf
fld
fld
std
push
iret
cmps
arpl
pop
ds
inc
retf
adc
cmps
ret
int
adc
aad
mov
push
xlat
push
cs
mov
jb
mov
(bad)
xchg
jae
es
pop
cmp
test
cmp
fisttp
add
test
xchg
jbe
sub
jmp
out
adc
loope
scas
daa
xchg
mov
mov
cmp
push
xchg
loop
pop
cld
sbb
dec
jg
lahf
dec
or
push
xchg
ret
jne
inc
sub
push
mov
shr
sub
add
imul
jge
cmp
sbb
mov
fwait
cmp
push
inc
push
das
jmp
mov
cmp
in
jecxz
fcomp
sub
fnstsw
lock
stos
sti
in
cli
cld
jns
pop
push
scas
cmp
push
push
jno
sub
jp
data16
xor
xor
sub
mov
sti
jmp
xchg
ret
icebp
into
jb
scas
pop
push
ret
call
clc
jle
call
mov
out
dec
es
ret
js
outs
out
pop
dec
repz
mov
mov
sub
cli
add
test
call
xlat
adc
pop
mov
imul
in
ss
in
pop
retf
in
(bad)
icebp
jg
jb
clc
sahf
mov
mov
in
mov
mov
not
mov
pop
jle
shr
aaa
xor
xchg
mov
mov
ret
xor
jnp
fs
jecxz
mov
daa
or
test
(bad)
mov
data16
adc
inc
lds
jnp
jmp
fist
int3
test
out
dec
nop
ins
std
movs
fnsetpm(287
jnp
cmps
loope
dec
call
(bad)
(bad)
popa
lock
mov
mov
das
pop
leave
jne
and
xor
mov
aas
aas
add
iret
imul
pop
in
div
inc
adc
pop
push
das
cld
adc
ror
sub
(bad)
pop
dec
push
mov
in
jne
mov
in
mov
test
stc
mov
mov
inc
ja
je
(bad)
xchg
call
sar
stc
inc
repnz
dec
int3
add
imul
sub
xchg
add
call
xor
xchg
lock
xor
pop
call
jb
dec
jb
mov
jns
mov
push
cld
lods
dec
push
sbb
mov
movs
dec
dec
xor
jmp
pop
add
daa
stos
jns
inc
pop
bound
in
jmp
ds
fild
mov
in
push
inc
movs
aam
call
iret
lds
gs
in
sbb
imul
pop
xchg
or
and
fdiv
xor
movs
mov
dec
fcom
out
bswap
push
test
mov
xchg
test
lahf
mov
jbe
pop
test
pop
arpl
outs
pop
push
mov
mov
pushf
movs
ror
icebp
push
loopne
(bad)
jae
mov
scas
ins
inc
adc
fwait
and
hlt
pop
xchg
outs
xchg
mov
fisub
mov
push
int3
movs
dec
pop
xchg
push
outs
call
lahf
ds
mov
dec
add
dec
pop
ror
inc
scas
(bad)
xor
int
xor
stos
and
inc
es
lods
xlat
sub
xor
xor
and
sub
mov
(bad)
sub
and
lahf
pop
xchg
jl
(bad)
sar
sbb
xchg
cmp
adc
stos
shl
adc
jns
cdq
inc
jge
push
icebp
jns
push
pop
loopne
iret
cmps
ja
xor
in
(bad)
sar
scas
scas
cld
stos
out
xor
sub
(bad)
sbb
ret
fdivrp
dec
xchg
mov
add
sub
push
test
mov
add
repnz
inc
or
hlt
(bad)
movs
push
mov
(bad)
movs
out
in
popf
sar
pop
leave
rcl
arpl
int3
mov
mov
in
push
jno
adc
mov
jo
fs
(bad)
or
bound
push
xchg
retf
in
mov
fcmovbe
loopne
lahf
xor
outs
mov
sub
add
call
loope
jp
pushf
xchg
arpl
xor
and
out
movs
out
sbb
movs
or
push
mov
sub
dec
movs
ds
call
mov
mov
icebp
arpl
nop
test
rcl
cmps
sbb
cmp
push
lods
and
es
ds
or
sbb
pop
fadd
or
xor
into
dec
push
test
push
push
test
int
pop
dec
(bad)
fdiv
pop
mov
sbb
dec
inc
cli
not
cmps
cmp
hlt
mov
adc
jle
rcr
dec
rcr
push
mov
cmp
std
inc
mov
data16
mov
inc
movs
daa
xchg
push
push
jno
xchg
add
int
jecxz
out
jne
jb
(bad)
jp
fwait
arpl
cmp
mov
mov
test
pop
cmp
rol
mov
jns
imul
dec
push
lea
cli
scas
sar
dec
in
xor
push
add
movs
xchg
test
and
ds
mov
call
sbb
xchg
push
aad
lahf
mov
test
mov
movs
inc
jge
xchg
in
imul
add
adc
retf
cmps
sbb
cmp
icebp
aaa
mov
retf
pop
jnp
jbe
xchg
les
(bad)
xor
jmp
pop
sbb
(bad)
stos
aaa
push
jne
dec
cmp
pop
cmc
jp
add
sub
rcr
cs
(bad)
fiadd
fstp
popa
dec
and
(bad)
cmp
jo
push
das
pop
sbb
das
fadd
retf
outs
cld
dec
es
les
out
mov
hlt
xor
xchg
dec
pop
rcr
xlat
aad
sub
cs
cmc
mov
cmps
pop
push
rcl
inc
sahf
mov
outs
and
cmp
push
mov
nop
pop
push
push
aam
jl
sahf
fs
shl
(bad)
adc
icebp
jb
imul
das
gs
mov
mov
mov
into
dec
cmps
call
fist
scas
fisttp
mov
xor
cmp
sub
dec
dec
shl
push
xor
jmp
push
jmp
and
ror
adc
aam
xor
jle
push
addr16
xor
adc
in
repz
popf
jne
push
inc
or
dec
test
data16
push
jle
fld
imul
xchg
ja
mov
loopne
mov
addr16
mov
add
mov
jle
repnz
mov
in
retf
pop
inc
scas
mov
sahf
push
pop
dec
mov
imul
lds
adc
mov
ds
cld
rol
xchg
jbe
mov
mov
lds
cmp
xlat
jmp
jl
mov
or
arpl
out
je
mov
stc
jns
shl
data16
dec
jno
stos
rcl
mov
pop
icebp
repz
scas
push
pop
aas
out
shl
mov
jo
sub
add
ficomp
add
mov
push
lahf
mov
mov
out
iret
inc
jge
in
pop
push
shl
aad
retf
dec
rcr
out
cmp
aaa
aas
mov
retf
jo
mov
mov
mov
imul
bound
xchg
ja
(bad)
in
xchg
clc
int
mov
jmp
mov
leave
adc
add
inc
mov
in
inc
ret
sbb
jmp
dec
int
gs
push
data16
pop
or
xchg
movs
add
dec
pop
jae
repz
xlat
out
int
idiv
cli
adc
js
(bad)
daa
pop
add
mov
mov
hlt
lahf
mov
jge
mov
sub
dec
cmp
mov
jbe
bound
jmp
sub
cmps
sbb
add
add
add
inc
add
push
jmp
mov
jnp
mov
je
movs
jne
sti
mov
fxch
sahf
and
lahf
ud1
mov
mov
push
sbb
sub
int3
cmp
shr
cmps
(bad)
js
std
(bad)
in
(bad)
inc
fcmovbe
cmps
mov
call
jae
jbe
cmp
retf
(bad)
loop
add
je
mov
inc
loope
jmp
fdiv
out
sub
(bad)
mov
sahf
xchg
mov
dec
leave
mov
test
cld
rcr
lods
cmp
ins
jmp
imul
leave
std
cwde
lahf
cmp
fstp
sub
cwde
out
std
dec
not
mov
popf
cmp
cdq
dec
outs
inc
pop
and
imul
and
(bad)
out
dec
es
popf
out
in
mov
sti
lea
cmps
lods
sbb
pop
leave
add
and
or
sub
arpl
scas
push
std
data16
xchg
(bad)
sbb
outs
sti
stos
jp
int3
ror
pop
je
inc
pusha
aas
xor
(bad)
jmp
mov
out
pusha
and
lahf
dec
std
sbb
sub
gs
call
xchg
fbstp
mov
fucom
sub
fsub
dec
stos
je
movs
ins
fucom
mov
lock
inc
rcl
outs
icebp
mov
jl
push
inc
jmp
xchg
mov
or
retf
pop
int3
shr
xchg
xchg
xchg
or
add
clc
outs
shl
scas
daa
(bad)
sub
sub
jne
sub
mov
outs
jle
sub
jmp
mov
cmps
xor
mov
xor
sahf
jmp
pop
jb
shl
jge
mov
xchg
sahf
adc
mov
push
cli
xor
xor
xor
jg
dec
int3
retf
and
sti
inc
sbb
mov
leave
push
test
pop
dec
cmp
dec
mov
daa
ins
xchg
hlt
mov
or
lock
jb
call
push
mov
retf
(bad)
jmp
in
dec
pop
lock
cmp
xchg
jb
sub
mov
aaa
aad
and
add
inc
cwde
cmps
sub
sbb
jo
xchg
fnstsw
mov
jmp
add
mov
xchg
(bad)
cmp
pop
sbb
xor
xor
cli
xchg
cli
push
fsubr
or
dec
and
adc
mov
icebp
outs
popf
sbb
fwait
ins
mov
mov
lahf
jmpw
jmp
fucomi
xor
loope
arpl
push
scas
jmp
mov
push
add
push
dec
dec
fldl2t
movs
popa
cmps
sbb
push
cmp
fst
dec
inc
and
cmp
cmp
outs
push
dec
(bad)
mov
mov
xchg
aad
xchg
jbe
std
push
outs
jae
in
cmc
sbb
push
mov
shl
xchg
mov
mov
xchg
ja
(bad)
data16
xor
or
add
mov
in
das
imul
cmp
aam
retf
pop
in
and
in
push
(bad)
js
cmc
pop
cmp
ins
pop
adc
pop
jae
xchg
mov
xchg
lods
mov
fild
mov
xchg
shl
ds
test
sar
mov
jno
inc
loopne
mov
inc
aam
test
and
xchg
cdq
pop
shl
lock
inc
xchg
mov
in
sbb
jmp
dec
xchg
mov
out
shr
outs
jne
mov
popf
dec
movs
cld
pop
inc
out
jg
jnp
inc
mov
pop
in
sub
inc
jb
hlt
stc
movs
ds
jmp
adc
outs
mov
fdivr
popf
dec
mov
scas
push
lahf
ja
cmp
cmps
push
call
dec
add
mov
jecxz
inc
ss
out
jmp
ja
je
push
push
xchg
mov
fnstcw
imul
add
in
or
scas
fsub
jo
gs
bound
bound
mov
je
mov
jno
call
popf
sbb
push
daa
std
push
loope
adc
jl
ficomp
js
lock
pop
xchg
pop
inc
mov
scas
ins
push
adc
cmp
pop
in
or
pusha
in
add
sbb
(bad)
aam
outs
gs
xor
cmps
mov
xchg
div
test
sar
xchg
push
cmp
int3
pop
call
dec
loope
jecxz
ret
sbb
outs
cwde
pop
aam
fwait
punpckhwd
in
cmp
inc
pop
dec
sahf
or
popa
rcl
or
(bad)
mov
ins
rep
imul
mov
push
adc
stos
ss
inc
stos
mov
sbb
dec
in
xchg
call
popf
aad
in
mov
sahf
push
lock
stos
xor
cmp
xchg
cmp
daa
sti
sar
inc
inc
loopne
jmp
(bad)
ds
sbb
jae
adc
pop
jmp
lods
in
mov
into
(bad)
int3
jb
dec
shl
cmp
jnp
xchg
hlt
fidiv
ror
mov
jecxz
hlt
sahf
pop
or
add
mov
test
push
sub
xor
mov
xchg
or
xchg
adc
nop
push
jle
call
sbb
mov
out
aam
pop
mov
or
aam
mov
cli
sbb
add
jne
jno
cmp
movzx
jo
jmp
push
(bad)
movs
in
fwait
jae
sar
out
mov
lds
icebp
adc
add
jp
fstp
mov
jmp
mov
lds
inc
test
dec
mov
push
loopne
cmp
lods
dec
xor
push
or
retf
jge
pushf
sub
lods
pop
xchg
(bad)
fdiv
or
leave
push
cmp
xor
das
inc
dec
retf
movs
daa
lock
dec
bound
lock
mov
inc
jg
mov
xchg
repz
leave
sbb
mov
ficom
push
jge
xor
push
push
sub
inc
movs
mov
push
inc
dec
cmps
loop
test
add
and
cmps
imul
adc
mov
jecxz
xchg
ffreep
js
mov
test
in
or
imul
jns
xchg
pop
mov
jle
ret
into
jmp
and
sbb
mov
mov
scas
int
xor
ja
call
dec
(bad)
fwait
hlt
pop
fisttp
fisttp
pop
sub
inc
lods
dec
cmp
test
aas
ds
int3
xor
cmps
movs
cwde
repz
jno
test
add
xchg
repnz
(bad)
call
dec
adc
pushf
xchg
push
and
pushf
movs
push
test
xor
push
xchg
jne
jb
xchg
push
jp
and
mov
or
mov
sbb
cwde
xchg
mov
fst
int3
das
mov
dec
pop
jns
jae
dec
aaa
sub
xor
dec
dec
push
inc
jno
add
or
cwde
pop
jmp
sub
mov
ror
mov
mov
not
stos
test
pop
add
cmp
sub
cmp
mov
jnp
push
popa
jp
inc
popf
mov
dec
and
cld
cwde
test
ins
push
lock
xchg
and
cld
pushf
mov
sbb
(bad)
ficom
ins
jl
pop
mov
push
rcr
push
aad
in
(bad)
leave
call
inc
xchg
scas
rcl
add
cmps
mov
sbb
fsub
adc
pop
ds
aam
or
outs
and
repz
adc
outs
jns
imul
cmp
pop
sub
dec
mov
mov
ficom
lea
js
in
add
(bad)
scas
push
xchg
iret
xor
aam
ja
push
push
jno
dec
(bad)
mov
iret
out
loop
pushf
(bad)
adc
gs
adc
sbb
ffree
push
jmp
fidivr
jo
jo
addr16
test
pop
mov
push
dec
aam
mov
or
adc
repnz
xchg
retf
(bad)
aam
add
xor
cmp
lods
jmp
ret
mov
ja
movs
mov
add
inc
fidivr
dec
push
div
push
fist
or
outs
dec
push
lds
or
cmp
inc
inc
bnd
lods
and
jne
arpl
pop
pushf
and
outs
in
aas
pop
(bad)
sub
ja
cmp
sti
jmp
xchg
enter
mov
cmps
adc
(bad)
daa
mov
aam
cmp
dec
es
aam
xchg
dec
jle
add
in
xchg
push
(bad)
fs
push
cmc
mov
(bad)
mov
addr16
ds
sti
inc
ret
dec
xor
arpl
mov
lods
icebp
fnstsw
sbb
sub
sub
xchg
mov
mov
neg
in
push
cmp
dec
jmp
sbb
sbb
in
push
leave
leave
dec
retf
jg
inc
xchg
and
in
cmc
cwde
dec
(bad)
xor
inc
sbb
jmp
xchg
xor
(bad)
fucom
and
add
aam
call
xchg
imul
leave
mov
xchg
dec
cmp
sub
mov
cmp
pop
mov
mov
outs
ror
jecxz
ds
mov
xor
into
xor
mov
retf
jb
jmp
jp
jmp
xchg
xchg
dec
ins
lea
sub
scas
cmp
mov
stos
retf
mov
xor
cmp
mov
jl
adc
pushf
add
daa
mov
jae
lea
retf
mov
mov
in
mov
pop
mov
pop
mov
pop
mov
push
(bad)
jmp
sub
pop
movs
pop
xchg
sub
sbb
imul
ins
mul
jnp
or
add
(bad)
jno
push
shl
mov
pop
pop
stos
retf
loopne
xlat
cmps
mov
dec
jg
fdiv
mov
mov
icebp
and
sti
dec
(bad)
adc
hlt
mov
mov
pop
sub
and
cwde
dec
inc
out
push
retf
cdq
ficom
xchg
jmp
fidivr
enter
int3
mov
dec
push
mov
xor
icebp
xchg
pop
adc
sahf
mov
aad
pop
(bad)
sahf
into
sub
push
iret
out
adc
sbb
ret
das
shr
in
iret
(bad)
pop
dec
mov
mov
movs
fistp
inc
sbb
xchg
mov
in
retf
xchg
movs
out
pop
push
std
dec
sahf
pop
mov
std
repz
pop
adc
mov
mov
imul
stos
pop
mov
loop
std
mov
mov
sub
add
xor
nop
push
jmp
mov
test
sub
dec
inc
mov
xchg
push
pop
cs
cmp
daa
or
retf
lods
mov
clc
pop
outs
(bad)
mov
and
enter
add
sub
mov
test
cwde
retf
pop
lods
dec
inc
inc
cmp
xchg
inc
mov
mov
sbb
mov
outs
out
pop
push
jmp
push
sub
hlt
iret
movs
sub
mov
inc
arpl
or
push
adc
jmp
jecxz
xchg
add
aam
pop
cld
fild
retf
mov
sbb
dec
pusha
outs
scas
cmps
push
xlat
fadd
fucomi
jmp
movs
lea
int
sbb
dec
test
shl
out
pop
movs
fwait
movzx
int
loop
dec
loop
in
cmp
arpl
(bad)
sub
fwait
test
aad
push
dec
inc
xchg
jp
stos
retf
xchg
xchg
outs
int3
dec
jno
cdq
adc
push
fcom
pop
movs
jb
or
xchg
ret
call
sub
xchg
push
clc
lahf
add
xor
mov
sub
hlt
(bad)
jg
aas
add
pop
xor
mov
xchg
(bad)
aad
cli
mov
inc
cmps
push
xor
ds
in
popa
fld
retf
dec
stos
xor
inc
adc
outs
test
jno
dec
jp
arpl
fwait
imul
cmps
pop
push
imul
jp
jge
pop
mov
push
js
in
pop
sbb
inc
or
dec
retf
mov
sub
xor
into
call
dec
test
repnz
mov
mov
out
mov
dec
(bad)
shl
in
and
rcr
pop
or
xchg
cld
iret
outs
add
cld
jle
xlat
test
jp
in
lock
mov
sahf
and
add
sub
xchg
inc
inc
mov
movs
mov
je
adc
adc
daa
fstp
rcl
pushf
call
sub
call
loop
or
jge
stos
icebp
ss
pushf
lea
enter
and
test
add
inc
(bad)
xchg
push
cld
shl
and
mov
ja
jecxz
xor
jmp
mov
fsubr
sar
inc
stos
aas
cdq
pop
in
dec
inc
inc
cmp
das
enter
mov
mov
loop
push
mov
mov
mov
hlt
leave
cmps
adc
out
push
ficom
rdmsr
(bad)
ss
in
in
out
cwde
div
in
mov
loope
fisubr
pop
je
in
jnp
ds
xchg
movs
popf
in
xchg
aaa
adc
test
mov
or
(bad)
cs
inc
pop
je
dec
test
mov
movs
push
fsub
sbb
mov
push
repz
mov
and
cmp
jnp
aas
mov
fwait
lds
fldenv
xchg
xor
mov
jno
jl
in
mov
mov
mov
or
mov
dec
sahf
cmp
je
fnop
cmp
iret
inc
inc
test
add
jg
mov
(bad)
jg
(bad)
adc
jmp
mov
cmp
xchg
pop
and
scas
stos
idiv
mov
xlat
dec
imul
jp
pop
dec
mov
das
sbb
std
and
and
das
(bad)
(bad)
retf
jno
icebp
push
mov
push
mov
sub
adc
pushf
dec
pop
sti
sti
sahf
out
js
push
aam
sub
or
mov
push
jns
adc
jmp
in
mov
push
(bad)
xchg
mov
add
xor
cmp
clc
pop
test
iret
mov
fwait
in
cmps
cs
ret
iret
das
les
inc
jmp
jno
mov
test
mov
jb
imul
scas
je
xchg
adc
lock
push
les
fidivr
sbb
movs
in
sub
pop
test
sbb
call
lds
loopne
mov
leave
push
ins
sub
leave
mov
and
inc
ins
repz
(bad)
mov
rcl
fwait
gs
sub
aad
addr16
cs
call
ds
ja
mov
mov
pop
fcomi
pop
or
loopne
mov
jle
push
aad
pop
mov
adc
cmp
enter
arpl
pushf
aam
dec
int
dec
sub
das
addr16
sbb
xor
inc
push
clc
xor
mov
unpckhps
call
add
inc
jp
popf
pop
jb
xchg
push
xor
and
add
js
pop
cs
xchg
dec
jg
scas
jo
mov
mov
jne
in
push
mov
pop
in
mov
push
xchg
jmp
call
dec
cwde
xchg
or
lods
mov
mov
cmp
jno
mov
test
loop
js
ret
loop
ds
cmc
daa
cmc
and
cmps
mov
xor
cmp
jne
mov
sub
or
out
sbb
jle
mov
push
sbb
pop
fincstp
inc
mov
dec
push
push
enter
xchg
dec
mov
ss
xor
push
add
sub
pop
xchg
pop
xor
xchg
loope
ret
clc
mov
aaa
and
mov
retf
push
(bad)
sbb
push
inc
(bad)
stos
lea
mov
cmps
pop
test
movs
jb
(bad)
daa
test
(bad)
out
mov
retf
jns
movs
mov
mov
test
iret
inc
jo
stos
pop
dec
sbb
push
mov
adc
jne
frstor
jg
xchg
add
pop
sub
ficom
jo
ins
pop
enter
ins
pop
cmps
sar
cli
mov
fld
sub
pop
mov
ficomp
clc
or
repnz
jb
enter
xchg
in
push
push
push
in
in
mov
mov
(bad)
jge
cmp
xchg
push
push
mov
push
(bad)
sti
daa
mov
out
jp
xchg
jl
cli
dec
adc
aad
test
popa
pop
xor
out
push
adc
(bad)
push
and
hlt
mov
rcr
cmp
mov
xor
mov
nop
test
jecxz
(bad)
dec
mov
loopne
arpl
or
fdivr
add
adc
xchg
jae
bound
dec
sbb
jb
rcl
cmps
adc
and
rcl
movs
sub
fnstsw
in
(bad)
sbb
pop
mov
repz
xor
jb
sbb
xor
push
cmp
pop
jge
dec
jg
pop
movs
mov
jae
jne
dec
push
enter
rcl
add
cmp
fadd
loopne
and
add
dec
cmp
mov
enter
add
add
mov
cmp
fist
sbb
mov
scas
mov
daa
fsubrp
jp
outs
add
mov
fisubr
shl
mov
adc
cmp
fsub
aam
cmp
pop
jnp
or
adc
aas
pop
dec
ss
dec
test
xchg
(bad)
popa
xor
shl
mov
lods
sub
jb
sbb
xchg
mov
aas
push
les
cdq
and
and
outs
adc
test
dec
cmp
cmp
mov
mov
xlat
jmp
loop
push
das
mov
in
out
movs
or
int3
xor
or
imul
mov
mov
(bad)
pop
dec
rcr
xor
sub
push
mov
and
adc
data16
jb
cli
inc
call
outs
xchg
bound
mov
push
push
jmp
xor
popf
cmc
jg
int
cmps
movs
call
jmp
mov
cwde
jmp
jnp
hlt
cld
jmp
mov
sbb
shl
adc
fidiv
mov
adc
cmp
xor
aaa
in
lds
push
call
pushf
je
mov
and
stc
push
jecxz
stos
enter
shl
not
je
aad
mov
jmp
mov
mov
mov
xchg
lods
xor
cli
fimul
add
clc
nop
jno
mov
pushf
xor
mov
pop
xchg
push
rcr
pop
mov
sti
in
repz
cmp
jecxz
les
push
cdq
dec
adc
jmp
(bad)
push
clc
pop
dec
bound
fs
dec
pop
xchg
(bad)
sub
mov
jnp
jae
xchg
scas
cmp
(bad)
mov
mov
jne
jne
mov
pushf
movs
fld
xchg
fdiv
mov
retf
sub
cmps
xchg
test
mov
or
cmp
jno
mov
push
sub
mov
outs
cli
xchg
fidivr
pop
push
cmp
in
popf
cmp
jbe
mov
mov
jne
test
ins
or
ins
xchg
cmps
retf
and
in
(bad)
xchg
jge
mov
mov
leave
jno
sbb
cli
jmp
loopne
sub
ds
cmps
test
je
das
(bad)
pop
jne
movs
scas
cli
cmovno
aad
inc
or
xchg
and
or
jo
ins
mov
jmp
xchg
test
cmp
push
ret
or
not
jnp
fdiv
cdq
in
xchg
icebp
xor
(bad)
cld
cs
dec
mov
xor
adc
(bad)
aad
lds
mov
shr
mov
and
call
xchg
inc
xor
loopne
cmp
sub
jns
add
sub
test
fwait
jo
fwait
pop
pop
push
(bad)
frstor
inc
popf
cmp
bound
fisttp
scas
sti
in
je
subps
jno
ret
ds
push
hlt
jnp
scas
fstp
outs
fwait
dec
dec
leave
jbe
mov
das
sub
xchg
loopne
pop
daa
sbb
or
add
sbb
fwait
int
mov
bound
pop
leave
clc
dec
or
dec
outs
pcmpgtw
xor
loope
inc
inc
js
ins
mov
ins
fist
inc
sub
jno
sahf
test
repnz
xchg
daa
daa
addr16
add
xchg
icebp
xor
gs
jmp
dec
sar
call
ret
(bad)
sub
jae
hlt
ss
jg
push
xor
mov
shr
cmp
cmps
gs
ds
adc
dec
fsub
push
lea
push
jmp
scas
daa
imul
lds
jbe
aas
mov
cmp
pop
push
adc
loop
sbb
ret
outs
js
mov
fsubrp
loopne
iret
inc
push
cmp
pop
mov
mov
stc
outs
xchg
jmp
lea
imul
js
bound
push
popa
arpl
xor
or
mov
inc
mov
aad
js
push
movs
in
sub
mov
lods
data16
shl
aas
arpl
loopne
mov
sbb
or
sub
pop
dec
cmps
xchg
push
ins
dec
shl
jno
inc
fadd
ds
push
pop
jo
push
cmps
xchg
inc
jo
scas
fimul
pop
pop
test
mov
mov
sub
cmc
pop
xchg
xchg
retf
cmp
sub
inc
adc
xchg
fsubr
inc
mov
sub
jle
sbb
jecxz
jge
mov
push
and
addr16
dec
xlat
sub
aad
loop
aad
rol
ss
add
sub
dec
jecxz
bound
mov
push
dec
push
call
sahf
ficomp
stos
popa
test
loop
mov
stos
ds
arpl
js
push
daa
cmp
mov
pop
jbe
repnz
xor
fcmovb
sub
jecxz
mov
dec
sub
movs
jb
jnp
jnp
repz
xchg
aam
mov
inc
mov
cmps
xor
fnstsw
dec
cld
push
das
and
out
jmp
sahf
xchg
stos
inc
jmp
pop
mov
dec
das
dec
cmp
ins
xchg
lods
sahf
sbb
pop
jg
out
lahf
clc
icebp
in
lahf
fld
mov
inc
neg
mov
inc
retf
nop
daa
dec
cmp
(bad)
aaa
xchg
ret
xchg
add
ds
fxch
inc
cdq
inc
int3
mov
sub
das
inc
retf
jg
enter
loope
mov
push
mov
ins
stc
movs
mov
bound
ins
mov
inc
xor
int3
je
mov
(bad)
xchg
dec
jge
jmp
pop
push
sti
cwde
mov
xchg
mov
mov
pushf
pop
hlt
ret
sub
cli
cmp
div
mov
sub
xor
aad
dec
mov
jne
jmp
cwde
dec
in
nop
movs
add
sar
int3
xor
or
stos
dec
imul
mov
dec
in
push
xchg
push
sub
in
int
je
cmp
cmps
jmp
sbb
cmp
aaa
sahf
mov
int
xor
mov
aam
push
xchg
pop
push
add
push
jno
cli
mov
xchg
lock
jb
xor
xchg
cmp
jge
pushf
scas
sahf
and
cmp
mov
pop
pop
xchg
mov
dec
push
(bad)
pop
pop
xadd
imul
in
jns
test
inc
mov
cmp
iret
iret
xchg
daa
jmp
cmp
push
shl
dec
cmp
xlat
cmp
sbb
xchg
popf
hlt
jmp
sbb
add
xor
lds
das
pop
mov
push
xlat
xchg
xchg
cld
sub
xchg
jmp
cmp
aad
mov
je
mov
cmp
in
iret
aas
ret
sub
sbb
cmp
push
jge
repnz
sub
test
xor
(bad)
fs
push
and
mov
push
shl
cmps
fldl2e
xchg
fsub
push
ins
mov
cs
movs
ret
leave
in
retf
ficom
jno
cmp
mov
add
push
shr
fld
push
add
(bad)
push
cmps
jne
imul
sahf
push
jnp
cmc
and
adc
and
xor
dec
call
push
std
push
mov
jbe
mov
nop
jge
mov
jb
sub
fwait
loopne
dec
fdiv
cmps
int3
xchg
inc
enter
mov
stos
jns
loope
and
test
inc
hlt
and
in
xchg
dec
sub
int3
lods
arpl
mov
cmp
jecxz
aaa
ret
daa
popf
mov
and
adc
mov
push
push
cmp
xchg
sbb
xchg
cmp
pusha
mov
outs
and
data16
loopne
je
stos
ret
add
sahf
jae
push
mov
loope
aam
fstp
adc
xchg
test
pop
out
data16
dec
jmp
ret
out
xchg
xor
fs
ins
jmp
jp
daa
pop
xor
push
retf
xchg
iret
mov
out
push
aad
retf
mov
mov
xor
push
fwait
ret
pop
mov
xor
adc
outs
mov
jnp
jp
stos
dec
push
xchg
into
jmp
jp
out
and
cmp
mov
retf
gs
repnz
jp
loopne
arpl
stos
xchg
fs
jnp
mov
jecxz
dec
mov
neg
cmp
jmp
push
mov
jecxz
movs
(bad)
sbb
sub
mov
ja
xor
fdivr
jmp
sub
or
test
out
jae
popa
lock
es
fnstsw
dec
push
and
hlt
pop
xchg
sub
lock
fwait
retfw
pushf
data16
(bad)
mov
imul
jne
loop
pop
and
jmp
mov
fidiv
push
lods
dec
dec
dec
pop
xchg
lods
push
inc
mov
scas
mov
mov
push
mov
inc
out
movs
ins
push
pop
xor
pop
jns
xchg
daa
pop
or
mov
sub
dec
fs
xlat
xchg
cmp
sub
stos
sbb
push
xlat
inc
sub
xchg
outs
stos
mov
cmp
jmp
popf
jge
mov
and
jno
xchg
inc
cdq
dec
inc
push
sbb
xor
dec
add
les
cmps
ror
(bad)
and
or
push
pop
mov
pop
mov
xlat
push
outs
or
call
out
or
gs
pusha
or
jge
fs
mov
in
adc
push
shl
lods
not
mov
xlat
push
cmc
xchg
popf
(bad)
daa
fidivr
popf
push
push
push
dec
js
pop
push
mov
shl
push
cmp
in
icebp
sub
or
test
jae
jl
frstor
push
ds
in
adc
retf
lods
xchg
push
jl
xor
pushf
mov
fmul
popf
xchg
int
out
and
sub
and
cmps
mov
fldz
jns
std
test
fidivr
xchg
pop
mov
push
inc
push
fdivr
push
dec
dec
cmps
mov
fsubr
mov
mov
loopne
(bad)
mov
int
adc
call
push
push
sbb
not
adc
or
repz
bound
mov
push
stos
test
fcmovnbe
xchg
ja
gs
stc
out
fcomi
dec
pop
mov
idiv
popa
dec
into
dec
int
ins
mov
fstp
neg
movs
iret
sub
stos
mov
rcl
sbb
gs
mov
jp
xchg
scas
stos
push
mov
sbb
fiadd
cmps
sbb
sub
dec
cmc
adc
push
xlat
aaa
stos
pop
aas
sbb
cmc
ins
mov
rcr
aam
dec
rcl
dec
test
jmp
lahf
arpl
jo
imul
stos
pop
or
cmps
mov
mov
sar
(bad)
pop
test
dec
push
mov
xchg
daa
or
mov
inc
fdivr
lods
sbb
jmp
addr16
in
data16
push
outs
lea
inc
scas
mov
inc
pop
out
cs
sbb
push
inc
mov
mov
pushf
sub
ins
cmp
inc
fwait
pop
dec
jmp
mov
sub
ret
push
xlat
dec
frndint
outs
mov
dec
pop
pop
or
dec
inc
(bad)
fild
repnz
popf
inc
mov
xchg
stos
rcr
and
jo
inc
inc
dec
mov
xchg
test
mov
xchg
mov
scas
movs
add
xlat
sub
push
aad
fisttp
ja
inc
sub
(bad)
fldenv
int3
cmp
dec
fidivr
retf
sahf
sub
dec
dec
js
mov
ror
lods
push
xor
mov
jno
retf
adc
add
repz
in
push
jmp
jns
dec
gs
push
push
lods
sbb
push
mov
fsincos
dec
and
or
cmp
sbb
test
aad
imul
cmp
addr16
ficomp
mov
scas
out
sub
test
pop
in
push
xchg
lods
movs
mov
jno
ror
in
aad
dec
aas
mov
jnp
pop
xchg
and
ret
test
mov
fs
pop
or
xchg
das
cmp
in
sar
call
in
retf
push
pop
ret
out
cmp
stos
jb
out
pop
pushf
cld
mov
enter
mov
jp
(bad)
jne
jmp
test
cld
and
neg
pop
fwait
push
and
push
xlat
sahf
jne
or
xchg
mov
or
loop
cs
add
add
adc
jno
les
mov
and
dec
sar
out
jb
cmp
lea
(bad)
xchg
outs
lods
dec
fwait
jmp
daa
push
or
inc
mov
popf
repz
hlt
jno
ret
pop
push
inc
jns
cmp
pop
aaa
xchg
jg
dec
loope
idiv
adc
mov
(bad)
outs
jp
xor
pop
test
mov
into
(bad)
and
test
mov
jbe
hlt
aad
inc
out
cmp
mov
imul
test
xchg
call
jbe
push
dec
jmp
retf
mov
cmps
mov
jmp
sub
sub
mov
sub
inc
sbb
addr16
sub
hlt
mov
stc
ret
prefetcht2
pop
test
push
push
(bad)
in
sbb
aad
stc
out
jne
ret
repnz
jne
lods
mov
jle
outs
xchg
test
addr16
(bad)
loop
mov
dec
pop
inc
movs
push
and
or
sahf
lea
out
jle
mov
out
pop
adc
jb
stos
dec
xchg
mov
rcr
mov
idiv
fcmovnbe
imul
jno
daa
mov
push
push
push
xchg
pop
xchg
pop
mov
sub
and
add
or
and
ds
ficomp
or
ret
popf
jo
sub
addr16
cli
fcomp
ja
shr
sbb
inc
pop
push
popf
or
in
sub
mov
mov
jmp
cdq
mov
or
inc
adc
push
sub
inc
test
leave
sub
add
stos
pushf
adc
add
out
jns
and
sti
cmp
dec
jno
test
sbb
fidivr
push
aad
dec
pop
icebp
int
test
pop
add
mov
pop
mov
outs
adc
pop
cs
push
dec
or
xchg
fnstsw
fcom
pop
daa
es
scas
inc
lahf
mov
int
dec
jecxz
rep
neg
sti
and
test
call
mov
ror
xchg
imul
loopne
pop
mov
sbb
call
in
jp
dec
jbe
addr16
mov
pushfw
outs
mov
addr16
popf
scas
dec
mov
pusha
and
add
retf
movs
mov
push
adc
cmp
imul
jo
pop
jmp
jbe
mov
mov
outs
dec
idiv
fcmovne
je
xor
or
imul
imul
and
jne
fstp
push
sub
xchg
gs
retf
loope
mov
jbe
push
add
sbb
sub
aam
xchg
test
sbb
rcl
mov
sub
cli
ret
aad
mov
mov
loop
xor
imul
icebp
push
loope
mov
dec
imul
or
enter
fisubr
cmp
int3
ror
mov
cdq
jo
jns
sahf
popa
leave
sahf
inc
xchg
scas
fs
not
adc
sub
jecxz
sbb
neg
jno
scas
imul
sar
mov
push
xchg
dec
in
cld
lahf
xchg
pop
addr16
dec
xor
es
popf
popa
mov
test
outs
movs
and
add
repnz
imul
push
fnstsw
fprem
(bad)
mov
les
mov
mov
test
and
pop
add
sub
sbb
add
lods
fwait
cmp
push
dec
push
retf
lahf
pop
inc
xor
xchg
cli
xchg
idiv
xchg
std
pop
mov
les
(bad)
mov
std
movs
arpl
cld
std
push
pop
push
mov
mov
psubd
popf
shr
mov
retf
fsubr
xlat
test
hlt
test
and
into
stos
retf
sbb
retf
idiv
push
push
sbb
popf
or
push
ja
and
pop
sub
jle
into
inc
fs
mov
jnp
sub
mov
sar
fistp
pop
fidivr
adc
jle
xchg
gs
neg
push
mul
in
adc
aam
mov
rol
add
pop
mov
mov
xchg
sub
leave
stos
inc
mov
mov
mov
std
(bad)
repz
scas
das
jge
aam
pop
push
mov
mov
les
jae
add
enter
add
cmp
jg
icebp
out
lahf
(bad)
add
add
cmps
(bad)
xchg
mov
cmp
add
add
(bad)
cmp
fcos
add
xlat
pop
pop
pop
cld
out
(bad)
cld
mov
sar
sub
add
push
out
inc
rcr
inc
iret
inc
clc
mov
ror
int3
mov
fist
mov
mov
in
and
cli
jg
or
mov
cmc
mov
loop
xor
imul
fs
sub
cmp
lock
outs
std
or
lahf
xchg
out
push
es
adc
inc
aaa
test
lods
ffree
and
cmp
mov
retf
dec
mov
xchg
nop
cmps
adc
ss
rol
mov
div
inc
dec
add
dec
xor
stos
jp
jae
dec
pop
(bad)
idiv
jns
rol
arpl
mov
not
adc
mov
pop
js
call
mov
mov
xor
mov
imul
pusha
push
sahf
pop
mov
jle
jae
cmp
sbb
sbb
movs
(bad)
push
mov
(bad)
dec
out
dec
neg
retf
stos
push
cmps
push
cmp
outs
push
mov
(bad)
fwait
out
icebp
jg
mov
xlat
push
jle
sar
cs
push
(bad)
push
pop
jbe
shl
ret
sub
jno
push
je
push
mov
test
or
cmp
or
mov
inc
sysret
(bad)
jle
pop
retf
dec
pop
jb
fldcw
xor
push
int
jmp
mov
call
xor
adc
xchg
mov
fisttp
mov
in
push
popf
pop
aad
gs
jns
xchg
xchg
retf
mov
dec
jecxz
out
fmul
icebp
jns
pop
pop
frstor
mov
push
mov
inc
gs
dec
dec
enter
jl
mov
js
std
aam
push
lea
push
jmp
mov
mov
push
cmp
stos
mov
(bad)
mov
(bad)
stos
or
fcomp
sub
xchg
pop
jne
mov
push
pop
push
mov
cwde
cli
pop
push
or
push
aad
hlt
lock
mov
cmp
cmps
mov
cmp
dec
lds
je
mov
enter
mov
je
inc
lods
or
push
ins
fldl2e
jmp
in
bound
loopne
push
xor
(bad)
repz
sub
sbb
lods
cmps
bound
dec
bound
pushf
imul
xchg
scas
jne
lods
pushf
stc
pop
cdq
fisttp
jae
push
daa
mov
fldcw
fnstenv
sbb
fld
sub
imul
xchg
stos
xchg
bound
popa
lods
mov
dec
sub
movs
ss
jmp
loop
push
cdq
mov
push
aad
mov
mov
dec
leave
test
hlt
mov
gs
nop
dec
xor
cdq
and
lahf
jne
sub
mov
sub
xchg
das
push
push
push
push
(bad)
xchg
pop
dec
fld
int3
aam
js
push
outs
push
fidivr
xor
dec
jnp
mov
fist
hlt
jns
xchg
in
cmc
xor
and
push
cmps
sub
mov
hlt
lahf
ss
xchg
pop
pop
in
pop
test
loope
rcr
int
imul
push
les
mov
cmp
add
into
std
sbb
fidivr
rcl
mov
fbld
aaa
in
out
test
test
xchg
push
imul
mov
jl
or
sbb
aad
retf
push
out
jmp
jp
(bad)
pop
pop
and
cmp
pop
repz
mov
stc
cmp
outs
add
jmp
mov
fucomp
repz
mov
stc
imul
mov
retf
outs
aam
cs
sub
outs
and
jmp
js
mov
dec
mov
cmps
shl
xchg
adc
cmps
stos
stos
outs
push
jae
aam
push
(bad)
test
push
ror
rcr
mov
mov
js
jmp
inc
mov
xor
xchg
mov
cmps
rcr
test
mov
add
inc
imul
add
jle
(bad)
xchg
xchg
push
xchg
dec
scas
enter
pushf
scas
sbb
mov
shr
add
jg
push
dec
cmp
cwde
rcl
in
iret
fisubr
and
movs
jecxz
pop
das
push
cmc
cmp
(bad)
aam
xchg
and
fist
fwait
jbe
stc
loop
dec
lods
pop
pop
lahf
gs
mov
ror
das
dec
aad
loop
lahf
xchg
pop
adc
inc
dec
call
ror
pop
cs
push
mov
mov
loope
std
mov
int
shl
aam
inc
xchg
pop
jb
stos
inc
out
lds
xchg
jle
jne
rcr
jle
push
sub
jnp
dec
jl
and
sahf
out
sahf
fwait
jb
mov
xor
in
int
mov
cmp
mov
pop
and
pop
adc
xchg
sub
cmp
aas
ds
pushf
xor
mov
movs
xchg
jecxz
pop
jb
jnp
jmp
fwait
mov
jns
push
int3
cmp
cdq
sub
(bad)
stos
xor
xchg
xchg
ficom
inc
(bad)
in
jnp
je
aad
icebp
cs
sahf
push
mov
lods
retf
arpl
xor
fwait
in
and
popf
push
je
cmp
call
out
mov
sub
sbb
pop
push
lea
test
dec
in
jecxz
lods
daa
movs
scas
sti
dec
xchg
pop
push
test
std
cmp
test
fsubr
pop
mov
fs
cmp
inc
cmp
dec
call
and
sub
push
jnp
xor
lock
jle
ins
sbb
and
dec
stc
and
xchg
fnstsw
(bad)
aaa
repnz
hlt
mov
int3
pop
adc
sbb
and
mov
std
and
in
test
xchg
xchg
adc
rcl
cmp
call
repnz
cmp
shr
scas
pop
adc
and
jbe
jb
dec
pop
xchg
xor
inc
push
sub
adc
mov
into
rol
dec
stc
adc
mov
into
movs
sbb
xchg
dec
cmp
fidivr
xchg
fbstp
outs
sbb
cmp
push
outs
fnstenv
mov
xchg
jl
fdivr
mov
cmp
jp
scas
push
pop
movs
into
mov
cs
lahf
cmp
imul
cmp
fsub
add
ds
loop
mov
xor
call
mov
les
mov
pop
fcmovbe
fmulp
xor
lock
clc
xor
add
lods
mov
cmp
lds
lahf
repnz
mov
in
shl
jbe
mov
push
div
jne
push
jle
xchg
rol
jge
stos
sti
push
mov
mov
xchg
in
jmp
mov
cmp
mov
retf
gs
xor
movs
and
jo
fidivr
ret
mov
cmps
shr
test
cmps
in
iret
pop
pop
jno
(bad)
mov
sar
les
movs
push
push
in
pop
leave
or
stos
retf
pop
inc
push
(bad)
cmp
sub
cmp
test
nop
or
pop
es
imul
sub
movs
mov
dec
sub
retf
outs
jnp
xchg
addr16
rep
mov
jmp
inc
ror
inc
(bad)
icebp
out
scas
mov
cmp
xor
stos
aas
mov
pop
xchg
in
jmp
jbe
cwde
mov
cmps
data16
mov
mov
jnp
or
stos
in
xchg
xor
pusha
and
inc
fimul
cmp
(bad)
sbb
jecxz
jmp
xchg
pop
mov
cmp
fsub
cwde
pop
dec
or
mov
pop
(bad)
ja
mov
mov
addr16
dec
imul
mov
add
cmp
xchg
jle
jne
cmps
inc
bound
into
pop
aad
dec
addr16
dec
jo
je
adc
test
adc
popa
cmp
dec
call
imul
mov
jne
push
mov
test
lods
out
je
icebp
sahf
xlat
jmp
mov
loope
jmp
cwde
mov
nop
xchg
movs
sub
imul
enter
shl
and
sbb
xor
jnp
ret
mov
pop
push
mov
push
movs
mov
dec
gs
in
es
pop
mov
dec
dec
sub
mov
idiv
dec
shl
and
das
lds
push
shl
int3
jmp
dec
div
outs
xor
pop
jmp
jno
xlat
bound
stos
xor
mov
cmp
cli
fld
stos
enter
mov
hlt
jmp
mov
and
aad
lds
movs
les
retf
mov
inc
or
in
xchg
push
lea
fldcw
cmp
xor
cld
jmp
lods
in
push
cmp
cmp
fimul
push
aas
mov
fistp
movs
jmp
outs
popf
arpl
or
jmp
daa
imul
mov
(bad)
je
xchg
icebp
iret
mov
mov
dec
inc
fisub
cmps
ins
pop
ins
jecxz
mov
inc
adc
iret
dec
mov
es
ins
or
xchg
ret
test
dec
repnz
and
aas
mov
scas
das
mov
cmps
inc
mov
push
ss
sbb
mov
es
in
aad
das
ins
(bad)
mov
ins
jmp
adc
cmp
cli
jnp
hlt
push
mov
dec
push
fdivr
(bad)
or
popf
imul
dec
shl
sbb
int3
push
sub
sub
iret
addr16
jb
add
shl
std
sub
fucomi
rcr
mov
adc
push
cmp
xchg
pop
dec
push
xchg
lea
retf
pop
jne
outs
imul
out
in
push
xchg
mov
shl
std
jbe
xchg
inc
in
jecxz
fimul
je
out
pop
mov
or
push
jge
push
lods
xchg
xor
push
les
jmp
xor
dec
jae
shr
xchg
cmp
fdivr
icebp
icebp
dec
addr16
jae
ins
sub
data16
imul
call
out
pusha
pop
outs
es
loope
and
jg
jge
test
(bad)
stc
pop
out
fisttp
xchg
pushf
inc
call
jle
mov
cmp
jb
dec
out
pop
popf
inc
cdq
dec
je
mov
sub
js
mov
jno
sar
cdq
fmul
xor
mov
xor
lock
xchg
or
leave
lods
in
sbb
pop
mov
call
inc
push
add
inc
mov
and
pop
dec
dec
cwde
pop
lock
test
mov
and
and
clc
mov
xor
pop
push
scas
cld
pop
cmp
data16
out
fs
scas
sub
ins
xor
cmp
cmc
xchg
lahf
or
jo
clc
inc
adc
mov
int
ja
sub
xchg
sahf
mov
pop
loopne
clc
mov
mov
(bad)
mov
push
push
retf
inc
dec
fwait
jno
add
adc
and
sub
push
aaa
rcr
cmc
cli
sub
xlat
ret
xor
fs
imul
sar
(bad)
daa
and
(bad)
mov
mov
cmp
xlat
jmp
push
dec
push
xor
movs
pop
test
mov
ins
or
popf
xchg
test
ds
push
push
push
sub
jbe
sub
sbb
mov
fidivr
int
shl
mov
movs
cmp
xor
pop
mov
pop
aas
add
aas
mov
dec
dec
mov
sbb
aad
pop
movs
movs
fcmovnu
fs
outs
adc
mov
xchg
bound
or
out
js
fist
jae
inc
cmp
popa
jno
movs
dec
push
ins
movs
popf
mov
dec
mov
repnz
das
ss
jno
stos
test
and
inc
loope
jle
div
dec
xchg
loope
in
mov
sub
pop
clc
fstp
int
ins
mov
test
call
popf
xchg
mov
test
dec
dec
ret
in
mul
lock
das
loopne
loop
mov
push
jno
out
pop
adc
add
mov
pop
lods
pop
jne
aaa
aam
and
inc
stos
dec
sub
dec
popf
mov
test
push
xchg
add
add
inc
outs
shl
loop
mov
loope
inc
jno
dec
inc
(bad)
lods
loop
mov
out
test
pop
xor
xchg
call
cmp
daa
hlt
jecxz
sub
push
sub
xchg
xchg
aam
sbb
inc
jnp
cmp
nop
mov
mov
ss
mov
lods
lods
loop
fstp
pop
pushfw
inc
pop
dec
cs
fwait
je
cli
shr
inc
mov
mov
jmp
(bad)
pop
lea
mov
ror
sub
mov
xchg
fistp
fisub
scas
push
adc
mov
rcr
mov
xor
shl
enter
imul
ret
mov
stos
(bad)
enter
sbb
je
retf
cli
dec
and
jbe
adc
mov
push
dec
cmp
lahf
xchg
(bad)
sub
dec
in
xchg
movs
enter
dec
mov
sub
in
adc
add
jl
jl
jb
dec
cmp
mov
push
mov
mov
or
movs
or
in
and
jmp
fidiv
sti
ret
loop
and
cmps
icebp
sub
ds
mov
(bad)
fldenv
nop
add
sbb
or
or
fstp
inc
lds
adc
add
xchg
jle
mov
sub
cmp
add
cmp
mov
push
sub
inc
sub
aad
cmps
ret
xor
in
pop
inc
mov
mov
jg
test
repnz
cmc
cs
push
cdq
daa
pop
outs
mov
dec
setg
shr
push
lds
bound
aad
fcmovnu
neg
js
pop
shr
mov
lods
dec
sbb
inc
jns
in
push
ss
push
stc
into
jmp
xor
push
xchg
je
daa
adc
sub
test
push
lahf
mov
push
or
pop
out
dec
cmp
outs
pop
fisub
iret
dec
movs
cdq
data16
mov
mov
jns
or
imul
test
sbb
js
shl
repnz
lea
rcl
idiv
into
retf
rcr
(bad)
pop
nop
loopne
or
test
ffree
jmp
jle
(bad)
ja
rcr
push
jbe
(bad)
push
mov
add
fldcw
repz
(bad)
xchg
call
(bad)
cs
stc
dec
repz
jne
es
clc
jecxz
pop
inc
retf
xor
dec
in
iret
dec
jg
scas
repnz
sub
inc
fsubp
inc
xchg
mov
rol
cmp
ficomp
cmp
(bad)
mov
inc
sbb
push
sar
loope
add
loop
pop
xor
dec
in
or
fstp
mov
mov
jbe
movs
dec
sub
je
inc
and
push
xor
(bad)
mov
cs
mov
je
jmp
mov
shl
xchg
iret
xor
pop
test
shr
dec
xlat
(bad)
push
mov
aas
popa
mov
js
(bad)
lock
xchg
mov
clc
cmpxchg
pop
shr
xlat
xor
mov
cmp
int3
(bad)
lahf
mov
add
adc
jo
dec
int3
daa
mov
sub
push
shl
push
outs
and
jge
mov
retf
jno
jo
test
aam
cli
into
cld
retf
fdivr
cmps
jg
daa
(bad)
vshufps
neg
out
pop
idiv
xor
mov
hlt
mov
mov
and
dec
pop
and
pusha
arpl
imul
pushf
mov
jbe
imul
aad
iret
mov
jbe
js
sahf
es
das
sbb
pop
jns
mov
out
retf
dec
add
push
iret
mov
cmp
out
popf
mov
sbb
mov
push
fistp
pop
outs
ins
ss
(bad)
(bad)
xchg
xor
retf
adc
sbb
sbb
retf
jmp
add
cmps
inc
es
lahf
jbe
xchg
daa
sub
ror
mov
dec
std
or
outs
call
xor
movs
push
and
ins
jb
lods
pop
push
sub
cld
sysenter
test
adc
out
imul
xchg
into
xor
stos
in
std
mov
data16
adc
pop
retf
xchg
ret
call
inc
(bad)
(bad)
or
pop
fcmovnbe
sbb
fs
xchg
lods
pop
jp
cs
xchg
jb
and
adc
xchg
push
sbb
inc
sbb
cmp
fwait
fs
push
mov
fsubr
sti
push
aam
je
lods
jg
(bad)
(bad)
sbb
int3
jnp
sub
cmc
ja
sbb
adc
jne
add
imul
aaa
lods
rcr
cdq
xchg
mov
movs
in
sub
loop
in
loop
xchg
in
pop
push
movs
pop
adc
dec
daa
xchg
div
sahf
sbb
jg
ins
adc
pop
cmps
jne
jbe
push
int3
mov
cmp
mov
push
mov
mov
pop
sbb
aam
push
lock
div
int
push
cmps
jmp
loope
int3
ins
inc
je
adc
inc
or
push
es
stos
pusha
sbb
pop
sbb
push
push
push
stos
call
sbb
cmps
sahf
jecxz
fistp
or
movs
adc
sub
adc
idiv
lods
and
repz
in
lock
push
js
inc
in
int3
in
stos
inc
xor
jnp
xchg
dec
(bad)
dec
or
mov
xor
ss
je
cmps
adc
xchg
mov
lods
fs
sti
mov
cld
es
shl
daa
jmp
(bad)
iret
(bad)
sub
es
dec
dec
or
shl
scas
popf
int3
inc
cld
or
mov
in
xor
cmc
inc
dec
out
test
retf
imul
cmps
fadd
inc
add
push
push
or
ins
xor
outs
shl
mov
jbe
ins
sbb
shl
xor
hlt
sub
push
not
fwait
dec
sti
shl
jmp
jmp
ins
imul
mov
xchg
repnz
inc
fsub
add
jnp
leave
fild
and
int3
mov
bnd
push
(bad)
jl
fbld
jp
sub
mov
adc
jmp
(bad)
jae
in
push
arpl
loopne
cmp
neg
mov
shr
setl
pop
adc
ja
jno
sub
jmp
cmp
leave
stc
les
mov
call
or
sar
loope
xchg
mov
xor
repnz
inc
test
or
ins
sub
mov
hlt
and
pop
push
mov
ja
fwait
loope
ret
movs
lods
sub
add
adc
and
or
pop
cld
xchg
pop
mov
or
inc
fcmovu
add
adc
add
shr
lock
sub
daa
popa
mov
dec
add
cmp
inc
movs
bound
adc
xor
or
cmps
es
and
inc
lds
adc
outs
push
cmp
cs
add
mov
mov
loope
jge
or
fwait
out
adc
cmps
ja
xchg
mov
and
or
pushf
je
xchg
sub
dec
cmps
out
adc
mov
jnp
es
fwait
scas
lods
sub
cmp
ret
bound
and
adc
mov
in
mov
inc
jmp
inc
mov
ret
inc
test
xchg
xlat
loope
jecxz
sub
xor
dec
xor
loopne
addr16
xor
dec
cdq
ror
pop
jmp
cmps
bound
dec
mov
cmp
(bad)
lods
int
ins
in
add
cmp
sbb
cmc
mov
pop
call
sti
inc
cmp
aam
xchg
out
sbb
sbb
(bad)
(bad)
or
and
xor
xchg
jo
pop
pop
ins
sub
inc
rol
stc
inc
cmp
cmp
pusha
shl
push
jbe
shl
les
adc
loop
add
jae
repnz
pop
lods
dec
cdq
mov
movs
or
into
inc
icebp
popa
lods
iret
fbstp
repnz
inc
jnp
sbb
retf
xor
mov
adc
fbstp
and
lahf
adc
(bad)
das
jg
jl
add
test
pop
push
imul
fistp
sbb
das
sbb
cmp
sub
sbb
in
sub
push
mov
sti
sub
(bad)
bound
adc
push
pop
pop
stos
arpl
cmp
adc
jmp
xchg
push
xor
cmp
movs
aam
adc
retf
ins
pop
ss
aam
js
push
dec
cmp
fisubr
imul
dec
in
jg
loope
cld
ins
inc
cmc
mov
mov
fidivr
cli
mov
je
add
das
sti
adc
cli
xchg
arpl
pusha
outs
dec
dec
aam
mov
dec
mov
push
inc
movs
xor
xchg
in
retf
cwde
dec
inc
push
and
sbb
icebp
adc
xor
dec
mov
pop
outs
inc
or
icebp
js
idiv
scas
and
xor
jnp
sub
in
inc
inc
cmps
pop
clc
mov
xor
outs
sbb
in
mov
rcl
ficomp
nop
cmps
pushf
sub
push
std
adc
arpl
outs
push
xchg
outs
(bad)
lahf
jns
jg
sbb
pop
clc
pop
enter
cwde
data16
ret
push
jmp
inc
mov
mov
std
adc
movs
xor
pop
aad
cli
icebp
call
pop
inc
xchg
cmp
ror
arpl
mov
jno
mov
imul
aaa
jmp
fld
movs
mov
movs
fucom
gs
inc
jns
dec
lock
push
loop
mov
(bad)
retf
retf
inc
cmps
cmp
add
cmps
pop
repz
in
int
jp
test
addr16
fnsave
inc
jp
std
ret
and
sub
cmps
sub
icebp
outs
test
call
cmp
(bad)
jno
cmp
xchg
call
outs
rcr
lahf
sbb
clc
ins
mov
aam
mov
jl
test
xor
jp
iret
nop
pop
inc
aas
shl
sbb
loope
or
xchg
les
(bad)
jl
pop
jb
cwde
jb
scas
enter
inc
or
ins
mov
mov
jg
jl
bound
int3
(bad)
xchg
push
xor
scas
mov
(bad)
push
test
outs
enter
sub
dec
adc
mov
jg
inc
ja
lods
sbb
arpl
push
dec
mov
test
mov
pop
ds
jnp
ret
iret
add
aam
push
mov
jl
aas
pop
scas
outs
das
push
or
mov
xchg
ins
push
movs
push
fwait
mov
cwde
add
lock
jno
lea
mov
shl
mov
adc
arpl
pop
jge
jg
mov
add
xchg
in
test
cmps
aas
dec
pop
xlat
rcr
lods
mov
cmp
xchg
push
cmp
mov
das
mov
fadd
in
or
xchg
leave
mov
pop
and
xchg
push
sbb
dec
cld
inc
ins
leave
push
test
or
mov
sub
mov
jnp
retf
retf
push
mov
sub
dec
jae
mov
pop
stc
imul
iret
es
stc
in
mov
test
pop
(bad)
retf
arpl
xlat
pminub
les
repnz
xchg
in
xor
jbe
fst
out
ins
int3
aaa
mov
pop
xor
inc
call
push
pop
ret
pushf
xchg
loop
fnsave
shl
repnz
cmps
fs
rcl
dec
xor
adc
xchg
mov
fld
imul
xor
sbb
mov
lds
pop
in
dec
sbb
mov
push
fstp
cmp
pop
or
das
test
sub
retf
rcl
fbstp
xchg
inc
iret
pushf
jbe
sub
xor
imul
test
imul
mov
mov
test
push
scas
fs
mov
push
jmp
(bad)
push
jmp
xchg
test
jne
or
arpl
push
in
jo
loop
mov
scas
mul
pop
inc
pop
jb
inc
push
mov
jge
or
retf
push
pop
in
dec
pop
pushf
jl
aas
das
mov
popa
mov
ja
mov
mov
push
fwait
movs
fcom
out
sub
push
xchg
cmp
dec
cld
and
ds
int3
xor
xchg
dec
movs
sub
(bad)
js
jg
arpl
in
pushf
popf
cmp
sbb
imul
imul
dec
mov
(bad)
cmp
mov
retf
push
xchg
pop
rcr
push
hlt
pop
or
out
stc
mov
test
and
jae
retf
push
imul
into
cmp
sub
sbb
jae
push
cmp
jb
sbb
daa
sub
dec
cdq
gs
jmp
xor
sbb
out
pop
jbe
mov
pop
popa
movs
jnp
retf
jl
push
inc
lds
adc
mov
sub
jp
test
mov
sub
add
mov
cli
push
and
into
pop
stos
push
xchg
cmps
push
int
inc
pop
hlt
mov
jmp
fdecstp
(bad)
cmps
lock
or
mov
dec
aas
xchg
movs
imul
test
cmps
fist
arpl
mov
add
mov
popf
(bad)
js
sbb
faddp
mov
stos
sti
into
retf
mov
adc
inc
cmp
pop
xchg
sub
cmp
inc
dec
cmp
stos
dec
xchg
push
push
sub
ffreep
(bad)
fsubr
push
lahf
sub
adc
or
loopne
ror
into
inc
mov
jg
xor
call
mov
dec
out
shl
adc
pop
jnp
les
xchg
push
div
sub
aaa
mov
jb
inc
push
(bad)
xor
lods
aas
jge
les
aam
outs
test
rol
(bad)
(bad)
pop
pop
push
popa
xor
test
cmps
adc
in
adc
cs
jbe
sbb
loopne
and
xor
push
mov
cmp
sbb
dec
jle
or
inc
movs
ins
in
mov
fld
and
inc
cmp
(bad)
or
shl
dec
enter
loop
mov
daa
jg
adc
enter
sub
mov
push
sub
and
xchg
mov
dec
(bad)
dec
dec
push
in
pushf
scas
int3
add
mul
aaa
shr
bound
std
xchg
push
dec
xchg
shl
lods
aaa
sub
dec
pop
movs
aam
sar
ss
push
scas
xchg
xchg
mov
inc
or
mov
(bad)
mov
ss
xor
pmovmskb
dec
test
mov
int
shr
dec
fwait
inc
mov
push
and
add
loop
dec
in
xchg
mov
test
xor
popf
sbb
push
call
dec
or
push
dec
jmp
call
dec
xor
and
xchg
jle
xor
shl
rcl
fcomp
(bad)
push
mov
xor
mov
cld
mov
movs
inc
out
pop
fstp
jle
(bad)
clc
add
add
neg
cmc
pop
xor
sbb
outs
sub
add
inc
mov
lahf
jmp
push
cli
push
test
bound
retf
cmps
out
movs
and
sub
xchg
or
xor
stos
jbe
movs
aam
sbb
fst
pop
xchg
sub
dec
cmp
dec
sub
rol
dec
lock
mov
push
hlt
cmps
mov
mov
shl
mov
jns
push
push
popf
retf
cmps
sbb
lea
(bad)
(bad)
xor
out
pushf
leave
loope
xor
xchg
mov
and
in
or
aaa
enter
pop
mov
gs
loop
retf
cmps
test
jae
jmp
cmps
mov
xor
pop
imul
shr
sub
mov
xor
push
mov
cmp
inc
aas
test
iret
std
mov
mov
sub
call
arpl
icebp
mov
out
xor
idiv
retf
sbb
adc
jle
in
fdiv
mov
mov
add
bound
movs
or
stc
xchg
retf
push
dec
(bad)
in
lea
xchg
pop
popa
jmp
xchg
jno
scas
or
push
mov
xor
xor
test
mov
shl
jl
pop
fidivr
mov
ret
mov
retf
push
jb
adc
dec
cmp
mov
pop
mov
stos
mov
out
sahf
jmp
lods
sahf
ret
push
pushf
imul
loope
test
jb
xchg
mov
pop
push
dec
lea
inc
push
hlt
imul
jbe
imul
retf
xor
push
mov
int3
jg
out
pop
pop
dec
dec
sub
ss
cld
pop
out
sbb
adc
fistp
in
imul
pop
rcr
pop
dec
jne
mov
mov
cmp
gs
retf
sub
adc
ficom
and
dec
xchg
dec
dec
loopne
test
das
outs
sti
xor
int3
xor
lods
pop
movs
dec
xor
stos
clc
ret
and
out
mov
cwde
in
or
movs
mov
lods
popf
mov
out
pop
cmp
outs
bound
jecxz
sub
sbb
inc
test
mov
outs
and
popf
push
fnstenv
xchg
sub
dec
ds
fiadd
popa
inc
dec
push
add
sbb
std
inc
jg
in
cmp
gs
and
sub
out
pop
push
mov
fstp
imul
ret
mov
push
call
fldenv
in
lahf
jno
stos
jns
in
out
cmp
or
dec
add
adc
lock
cmc
xor
dec
bound
sbb
test
dec
lods
je
push
imul
into
jno
xchg
jae
movs
jmp
mov
test
ins
lods
cld
outs
imul
mov
loopne
push
outs
dec
dec
add
dec
popf
xor
icebp
in
je
movs
aas
push
cdq
or
sub
jo
xchg
iret
fldenv
pop
fnstcw
dec
sbb
cli
daa
sub
jno
ins
sub
lea
fisttp
outs
push
fdecstp
popa
pop
js
sti
pop
arpl
ret
sbb
aam
mov
test
int
retf
or
outs
setbe
or
push
or
inc
mov
stos
pop
mov
ret
jo
pop
je
jae
adc
pop
stc
mov
or
mov
(bad)
ja
jle
mov
fiadd
mov
xor
push
sub
pop
sbb
jns
in
cmp
mov
dec
dec
out
lds
scas
arpl
leave
nop
test
mov
xchg
sub
mov
cmp
inc
add
dec
js
lahf
dec
scas
or
mov
mov
in
pushf
push
mov
mov
sahf
andnps
jmp
das
add
sbb
mov
hlt
jmp
mov
btc
push
xchg
in
lods
push
lods
in
rcl
mov
pop
mov
jno
inc
(bad)
dec
fcmove
inc
out
cmp
adc
and
mov
sub
push
pop
jns
loop
jnp
inc
data16
or
popf
xor
xchg
cmps
fist
sub
jl
lock
push
outs
lea
mov
xor
or
sub
or
or
stc
test
xchg
xchg
xor
iret
daa
ds
pop
test
loop
cwde
cmp
xchg
xchg
dec
jno
inc
(bad)
mov
(bad)
fidiv
adc
xor
xor
ds
add
push
cmp
sbb
dec
mov
jmp
push
pop
jne
mov
mov
mov
add
bound
cwde
out
sbb
jno
xchg
aam
jmp
dec
jns
movs
loop
aam
fs
or
xchg
test
data16
dec
stc
fbld
sbb
sbb
mov
out
pop
je
(bad)
scas
shr
xor
push
push
ins
cmp
cmps
dec
stos
repz
rcl
dec
inc
cmp
xchg
push
aam
lods
cmp
sub
fs
push
div
loop
rcl
dec
cmp
xor
scas
retf
test
sbb
sbb
shr
jmp
aaa
call
pop
(bad)
sbb
jg
lea
shr
and
stos
inc
mov
inc
loope
sub
jmp
dec
cmp
add
xor
(bad)
jecxz
add
repnz
outs
daa
das
dec
clc
mov
call
jecxz
lods
xor
sahf
push
xchg
sub
fist
mov
jg
call
cmp
aaa
push
cmp
nop
stos
push
push
in
jmp
and
pop
data16
sar
sbb
dec
imul
jbe
or
inc
push
cmp
add
mov
mov
xchg
mov
sub
xchg
repnz
(bad)
fisubr
cdq
popa
stos
(bad)
movs
imul
dec
push
dec
dec
jne
ficom
fwait
pop
pop
call
push
jne
push
in
imul
int
sub
xor
push
cmps
mov
dec
pop
ins
xchg
rol
jecxz
sbb
lods
xchg
in
test
fisttp
mov
in
push
out
out
mov
push
rcl
jno
je
xor
repz
mov
les
dec
mov
mov
test
cli
lea
mov
sbb
out
and
xor
push
movs
pushf
sbb
push
and
xor
out
jno
fcomp
jne
aam
fld
cmp
test
xor
test
(bad)
dec
cld
js
fdivr
clc
icebp
push
aad
imul
jo
mov
adc
mov
ds
pop
push
retf
(bad)
push
fldcw
(bad)
(bad)
scas
(bad)
ins
lahf
popf
mov
ja
lods
ror
fcmovnu
popf
xchg
leave
and
outs
add
retf
xor
das
adc
dec
mov
jno
test
cdq
add
xchg
les
(bad)
fiadd
mov
pop
xchg
xlat
je
or
push
ficom
jmp
gs
(bad)
and
aaa
sub
pop
cld
sub
inc
bound
ret
dec
pop
std
mov
push
(bad)
pop
xlat
dec
cmp
pop
fidivr
std
idiv
inc
jmp
data16
sar
(bad)
bound
adc
sbb
add
cmp
xlat
dec
std
mov
mov
add
lds
jg
sar
(bad)
call
push
sahf
punpckhbw
push
xlat
(bad)
jb
lods
stos
retf
sbb
test
mov
shr
js
and
mov
mul
jbe
cmp
movs
jbe
movs
movs
inc
sbb
push
xchg
mov
sub
pop
(bad)
push
fdivr
push
xchg
stos
or
retf
pop
out
xrelease
loope
inc
es
sub
aas
fcomp
popa
ret
sbb
jbe
mov
das
mov
xchg
mov
mov
frstor
retf
jb
shr
mov
inc
sub
cmps
outs
adc
out
sbb
fsub
rcr
(bad)
icebp
xchg
sahf
imul
scas
xlat
mov
cld
ss
push
sar
pop
mov
aas
jg
jne
mov
fstp
loop
jge
gs
xchg
(bad)
xchg
xor
jmp
dec
popf
data16
cmp
mov
push
dec
aam
lods
fs
dec
cld
mov
lods
mov
jl
pushf
pop
pop
mov
in
imul
ffreep
neg
pop
lods
jmp
(bad)
loope
out
retf
pop
test
mov
xchg
bound
repnz
dec
stc
push
add
out
pop
xchg
mov
push
and
fimul
mov
mov
dec
rcr
push
lea
lods
sbb
mov
dec
leave
sub
loope
shl
cmp
pop
fidivr
dec
popf
popf
jne
and
pop
mov
mov
nop
fidivr
dec
iret
jl
(bad)
shl
outs
push
push
je
jmp
retf
mul
retf
sub
imul
xlat
pop
add
xor
fsubr
jo
ret
mov
pop
ja
leave
daa
inc
mov
push
dec
out
dec
stos
pop
pop
stos
inc
pop
xor
enter
and
test
add
xlat
push
adc
retf
pusha
xchg
mov
mov
sub
xor
movs
sub
das
loop
xchg
mov
mov
idiv
sbb
pop
fisubr
rcr
out
xchg
push
xor
sub
movs
and
pop
sub
retf
pop
ss
fisttp
xor
out
(bad)
fld
sbb
outs
(bad)
fist
mov
call
and
rcr
iret
push
jae
pop
sbb
mov
sbb
mov
shl
scas
pop
aad
xchg
mov
cmps
cmp
cmp
jae
and
and
test
retf
shr
sbb
ins
cmp
sub
movs
and
jno
arpl
push
popf
scas
shl
outs
dec
mov
fistp
and
lds
popa
cmps
xchg
mov
out
retf
neg
cs
(bad)
int3
mov
sub
xchg
ins
cli
pop
adc
pop
mov
movs
enter
sub
xchg
jnp
push
and
mov
or
fistp
in
or
repnz
out
fidiv
jge
add
rcr
mov
in
jmp
retf
mov
outs
mov
imul
fptan
xchg
mov
cmp
clc
add
popa
(bad)
mov
gs
out
aad
and
(bad)
std
sbb
pop
and
mov
pop
lahf
fs
mov
xchg
(bad)
mov
or
shr
popf
loope
mov
int
mov
cwde
fwait
dec
ins
cmp
mov
push
pop
pop
xor
xor
movs
cld
ins
sbb
xlat
push
push
scas
mov
xchg
inc
sub
sahf
stos
repz
cwde
outs
out
mov
in
addr16
jp
mov
xlat
test
or
mov
dec
mov
cli
adc
ret
out
mov
loop
sti
dec
mov
xor
jge
sbb
xor
adc
jo
mov
(bad)
mov
dec
into
dec
mov
in
mov
lock
adc
dec
lds
mov
imul
mov
cmc
dec
push
mov
outs
sahf
or
movs
shl
sub
push
bound
fwait
sbb
or
and
cmp
test
movs
xor
add
pusha
mov
cmps
cmp
mov
sbb
dec
rcr
lds
lods
xchg
popf
pop
and
sbb
movs
loop
jb
(bad)
push
fdivrp
add
and
sahf
push
je
mov
mov
push
sub
mov
xchg
push
xor
dec
xchg
xchg
leave
aaa
in
jmp
dec
mov
daa
popf
sub
(bad)
dec
jmp
mov
jecxz
daa
hlt
push
test
xchg
mov
out
adc
call
push
nop
popa
xor
sbb
and
out
jmp
dec
bound
lods
into
push
push
fst
sti
scas
pop
jmp
test
int3
mov
sbb
jp
ss
fstp
call
sub
mov
xchg
or
pop
mov
dec
fisttp
arpl
fwait
pop
xor
into
dec
dec
add
sbb
fld
sub
push
jmp
xchg
fs
les
mov
gs
pop
ja
rcr
xlat
push
in
xchg
dec
dec
lahf
in
xchg
or
push
mov
or
outs
popf
not
(bad)
int
outs
cmp
pushf
jne
(bad)
jmp
jmp
and
add
xchg
or
mov
(bad)
cmp
xor
add
pop
push
ins
imul
in
test
jmp
push
lea
dec
test
inc
adc
jb
iret
sub
push
sub
imul
out
pop
mov
mov
fimul
fisttp
mov
aas
cmp
inc
push
je
in
loope
loope
sub
push
mov
fwait
popf
xchg
xchg
gs
retf
cmp
dec
(bad)
and
shl
xchg
ret
mov
lods
jns
ror
cmp
in
jp
dec
fs
sbb
sbb
ins
and
mov
mov
scas
icebp
ds
dec
ret
fstp
add
and
sti
jae
out
cld
fs
pop
xchg
jnp
jg
jg
mov
(bad)
addr16
cmp
dec
pop
push
pop
sub
pop
jbe
int
and
test
cmps
ins
xchg
jb
pop
push
fistp
data16
aaa
cmp
stos
jge
mov
mov
call
mov
imul
jnp
cs
dec
lock
pop
fild
or
sub
stos
jb
nop
stos
fimul
retf
xor
rcr
push
ds
push
sar
xchg
je
stos
add
icebp
hlt
pop
loopne
inc
fxch
sub
sbb
movs
(bad)
pushf
call
(bad)
in
in
imul
movs
stos
data16
popa
sub
dec
push
add
jl
popf
sub
mov
je
in
ret
in
stos
xchg
cmps
inc
sbb
dec
and
outs
fs
or
and
aam
callw
scas
in
cmps
xlat
sub
mov
jge
cmp
int3
retf
inc
dec
test
xchg
jnp
in
jle
sahf
cmp
mov
push
fwait
hlt
adc
push
mov
stos
leave
(bad)
repnz
gs
pusha
fdiv
pop
call
dec
into
(bad)
mov
mov
fisub
jne
fidivr
sub
test
dec
dec
ins
jmp
cmp
mov
cmps
popa
mov
push
xchg
cs
es
out
add
ins
or
sub
loopne
(bad)
das
mov
lods
push
fisubr
jno
sub
ja
rol
aad
cmp
outs
pop
popf
ss
cmps
adc
xchg
shl
mov
jl
mov
cmp
loop
jne
sbb
cmp
aam
imul
mov
or
cmp
rcl
stos
jp
sbb
xor
(bad)
repnz
(bad)
cmps
fisub
movs
jbe
mov
push
fwait
dec
imul
pop
inc
adc
sub
push
mov
dec
mov
lods
sub
xchg
push
mov
xor
jmp
stos
test
jecxz
xchg
push
adc
xor
aad
es
popf
pop
pop
es
fmulp
mov
jne
jbe
sub
mov
scas
dec
jns
sub
scas
mov
loop
mov
jg
pop
jno
out
mov
je
repz
sbb
test
movs
jmp
leave
mov
push
xor
sub
test
bound
inc
inc
fldcw
pop
leave
dec
fist
or
(bad)
push
sahf
loopne
in
xor
sahf
and
bnd
aam
in
aad
jle
cmp
pusha
out
dec
xor
stc
mov
mov
(bad)
inc
fnstsw
mov
sbb
dec
(bad)
daa
pop
mov
test
or
mov
lods
sub
and
or
hlt
repz
aas
into
cmps
ds
mov
add
pop
jns
sub
cli
movs
(bad)
lahf
in
call
stos
xor
add
sub
fsubr
mov
xor
shr
int3
pop
rcl
cmp
sbb
push
sub
adc
and
dec
lea
fld
push
pop
pop
fld
xchg
jle
mov
jmp
test
dec
cli
jne
jo
push
push
sub
and
lods
mov
jmp
outs
xchg
cmps
dec
out
xchg
repz
lock
sbb
(bad)
lods
ficomp
(bad)
mov
pop
cmc
(bad)
cmp
mov
dec
cmp
dec
aam
retf
xor
mov
ins
xchg
push
into
inc
jp
int
ret
mov
sub
dec
rcr
cmp
push
out
ficomp
mov
jmp
add
push
xchg
mov
retf
fcomp
cwde
call
pop
mov
push
inc
xchg
xchg
mov
cmps
pop
mov
mov
shr
pop
gs
sbb
dec
les
pop
retf
jb
iret
int3
xor
gs
mov
pop
je
dec
push
fldenv
xchg
int
gs
ss
das
cmps
data16
or
aad
dec
je
push
shl
fstp
push
sar
std
adc
jmp
in
repz
inc
xchg
je
leave
ja
in
ret
mov
xchg
in
movs
test
or
imul
and
clc
sub
sahf
xor
adc
xor
mov
ins
fld
push
push
mov
js
nop
std
fild
sbb
je
rcr
fs
dec
out
sar
rol
push
mov
jg
cmc
rcr
(bad)
jecxz
dec
cmps
(bad)
cmp
in
out
dec
les
inc
retf
stos
push
dec
jecxz
cld
push
hlt
jno
mov
ins
jne
outs
mov
cmp
pop
pop
aas
or
xor
pop
sub
es
stos
rcr
fst
jb
add
out
dec
aaa
dec
xchg
cmp
adc
mov
(bad)
dec
lea
call
mov
mov
dec
mov
sub
and
adc
add
dec
push
mov
(bad)
shr
ds
pushf
arpl
mov
shl
shr
xchg
jle
movs
jns
xor
jns
mov
add
mov
leave
cmp
adc
push
iret
fs
in
inc
inc
(bad)
repnz
jmp
xchg
cmp
mov
mov
mov
mov
mov
cmc
jns
sti
inc
in
outs
clc
mov
into
dec
sub
pushf
(bad)
into
movq
pop
les
pop
sub
sub
hlt
hlt
retf
xchg
aam
popf
jo
sub
and
add
xor
pop
pop
adc
mov
aaa
js
jmp
jp
shr
push
ins
and
push
in
add
cmps
sbb
movs
dec
cmp
je
add
inc
mov
sahf
pop
hlt
(bad)
shl
mov
fidiv
ja
mov
sub
pop
push
shl
clc
cdq
in
sub
dec
push
adc
call
or
int
ins
fistp
shl
cmc
test
inc
pop
pop
mov
xchg
xor
ret
sub
fstp
sbb
mov
(bad)
aad
push
push
xchg
test
das
sar
mov
adc
inc
fld
jnp
xchg
std
adc
xchg
or
add
pop
mov
pop
adc
xchg
test
nop
inc
add
sub
in
not
pop
hlt
and
pop
in
pop
sbb
(bad)
ret
mov
loope
sbb
lahf
std
sti
pop
mov
mov
inc
int3
(bad)
cli
adc
idiv
fbstp
in
sbb
lahf
pop
pop
pop
cld
(bad)
int3
inc
inc
test
add
std
pushf
mov
das
cmc
xor
mov
jns
jp
movs
mov
stos
shr
jmp
xchg
mov
(bad)
leave
xchg
inc
dec
push
dec
into
sub
mov
mov
lds
cmps
mov
test
pop
mov
fld
pop
sub
mov
and
out
dec
fnstcw
ror
mov
mov
aad
mov
ret
cmp
js
loop
add
adc
jp
retf
mov
mov
mov
xchg
lods
xchg
jb
sbb
cmp
push
mov
jns
inc
push
je
scas
or
lods
sbb
fsubr
cmp
mov
ins
loop
sub
fcomp
xchg
pop
xchg
jmp
push
jns
fdivr
or
aad
add
cmp
sub
in
xor
inc
mov
xor
cmp
pop
ss
mov
enter
leave
cld
mov
mov
out
sub
mov
out
dec
sub
and
mov
push
jbe
ficomp
inc
xchg
xchg
dec
push
xor
hlt
ficomp
leave
adc
sbb
pop
mov
fwait
in
stc
mov
mov
xchg
cmp
adc
dec
into
jecxz
ins
out
xor
xor
jae
jl
jne
push
pop
int3
(bad)
movs
mov
stos
dec
adc
cwde
jae
xchg
mov
fimul
cmp
fld
gs
sahf
pop
test
jne
and
retf
ja
push
jnp
jmp
lahf
loope
mov
xchg
(bad)
pop
jmp
xor
cmps
xor
pop
je
xor
lahf
fwait
push
cmc
or
addr16
aaa
out
jmp
outs
(bad)
xchg
icebp
arpl
pop
sub
out
jns
das
bnd
add
das
sbb
clc
mov
sbb
push
pop
test
xchg
push
xchg
mov
movs
jp
cmp
cli
jl
out
mov
or
inc
mov
fnstcw
cli
punpcklbw
fbstp
sub
mov
sbb
pop
pop
xlat
sbb
lds
push
push
call
retf
test
cmp
inc
cld
and
retf
repnz
popaw
pop
push
sub
out
jbe
div
jle
in
in
sbb
or
xchg
cmps
sub
mov
div
and
stos
pop
out
mov
pop
sub
shl
xor
lods
jp
ds
(bad)
cmp
ins
adc
mov
and
sub
lock
mov
jbe
xor
out
pop
or
add
test
out
loop
lds
or
ins
icebp
xchg
test
popf
ss
mov
xchg
int
lods
mov
aad
bound
adc
xor
or
jo
cmp
mov
push
adc
pop
sub
sub
push
jb
(bad)
test
lods
xchg
fcmovnb
out
outs
daa
movs
sahf
loop
mov
push
mov
mov
out
das
push
fild
add
int
call
call
fwait
push
out
outs
pop
push
retf
push
pop
or
or
push
pop
add
mov
in
xchg
add
mov
lock
cli
pop
mov
in
outs
xor
jb
loopne
stos
shr
fnsetpm(287
mov
inc
sub
fst
mov
dec
push
sub
outs
gs
daa
push
shl
scas
jge
pop
dec
adc
loopne
mov
push
adc
pop
pop
mov
cmps
xchg
in
lock
stos
jg
aad
fstp
pop
or
or
call
sub
mov
cwde
pop
sbb
movs
push
in
and
pop
dec
test
pop
pop
sbb
mov
test
gs
mov
(bad)
out
in
icebp
pop
cmc
mov
xor
ror
jo
xor
js
mov
sar
out
lock
movs
aam
dec
mov
sbb
(bad)
push
inc
mov
adc
test
mov
jae
add
test
into
mov
jns
pop
pop
sub
out
jge
test
xor
loope
or
outs
xchg
mov
fld
and
out
dec
mov
jno
sar
aaa
fs
mov
cs
sbb
bound
mov
rcl
mov
jae
sub
mov
sbb
xchg
loopne
pop
scas
sub
cli
push
dec
das
and
jecxz
in
xor
push
(bad)
stc
jecxz
jl
sbb
ret
aas
adc
test
jns
push
xchg
(bad)
movs
cmps
shl
mov
mov
movs
pushf
and
popf
(bad)
pop
les
inc
xchg
jno
lods
dec
shr
outs
lahf
mov
sbb
adc
cmps
xor
inc
cmps
cmps
dec
push
mov
push
cdq
mov
out
dec
lea
out
in
call
into
push
cdq
dec
jmp
in
ret
dec
add
dec
or
mov
xchg
or
adc
pop
aas
sar
push
mov
ja
sbb
dec
shr
cmc
inc
xchg
mov
rcr
int
(bad)
and
(bad)
sbb
aad
imul
pop
loope
adc
add
ins
mov
sbb
jmp
xchg
inc
in
jmp
cmp
pusha
and
cdq
rcl
loope
aaa
je
mov
pop
mov
dec
clc
mov
mov
mov
inc
jbe
jne
jbe
dec
xchg
push
xchg
jl
fld
sub
cmps
cdq
test
loop
inc
fsub
stos
lods
in
pop
cmp
not
dec
cmps
test
shl
cs
xchg
outs
out
sub
es
pop
xor
dec
movs
pop
mov
(bad)
mov
jl
repnz
out
arpl
aam
(bad)
lock
pop
lods
dec
dec
cld
and
ficom
test
push
jle
pop
mov
mov
sar
add
xchg
push
mov
xor
mov
mov
pushf
adc
mov
add
push
shr
arpl
int
mov
or
pop
shl
sahf
dec
cmp
loope
pop
push
pop
stos
fsub
sbb
cmovl
dec
aad
lock
xchg
test
ds
pushf
mov
outs
je
shr
and
cmc
(bad)
xchg
out
das
mov
gs
mov
mov
sub
stc
inc
sbb
pop
push
jle
mov
lea
mov
aad
cdq
aad
dec
or
sti
adc
test
in
and
daa
pop
arpl
adc
test
pop
scas
cmps
push
ja
jmp
mov
(bad)
arpl
(bad)
fadd
out
adc
mov
or
xor
sbb
push
xor
fsub
xor
dec
fwait
and
xrelease
or
icebp
cmp
sbb
fld
sbb
jo
in
jl
iret
out
xchg
retf
pop
sar
jnp
and
inc
int
test
jne
fist
mov
test
dec
lods
pop
xchg
push
jb
mov
sub
adc
pop
cmp
cmp
mov
inc
mov
and
jne
loop
les
xchg
pushf
jae
push
lock
mov
and
arpl
fs
stos
arpl
and
test
out
jge
sub
retf
nop
jno
loop
dec
rcl
mov
inc
test
(bad)
loop
mov
xchg
jne
mov
push
and
pop
xchg
imul
xchg
xor
cmps
ins
repz
es
fimul
retf
mov
jnp
xor
cmc
sbb
pop
adc
sbb
xchg
inc
lods
into
or
sahf
ror
cmps
gs
sub
popf
xchg
xlat
mov
push
(bad)
sar
dec
cmp
xor
leave
fsub
push
inc
add
int3
aas
jbe
daa
push
inc
fwait
lahf
dec
push
mov
jnp
xchg
cmp
sub
push
pop
dec
xchg
ds
push
daa
jbe
pop
adc
ins
and
inc
xchg
pushf
dec
xor
pop
hlt
mov
and
mov
scas
mov
pop
test
cwde
dec
fcomp
push
inc
adc
push
arpl
cmps
push
es
push
sahf
popf
pop
mov
cli
int3
cmps
jecxz
dec
leave
jo
jo
xchg
jne
in
or
inc
cld
(bad)
dec
fmul
xchg
addr16
mov
sbb
add
jns
xchg
in
sti
xchg
jg
out
sub
imul
icebp
add
in
shl
jne
sub
movs
xor
adc
xor
daa
and
mov
pop
xchg
fnstcw
mov
xchg
mov
fdivr
sbb
bound
push
pop
jle
sub
aam
cmps
mov
pop
pop
pop
xchg
call
cdq
jo
and
dec
test
mov
lods
(bad)
mov
cmp
pop
fst
dec
xor
xchg
retf
push
daa
arpl
div
xor
mov
mov
mov
(bad)
pop
inc
aam
and
jb
push
jae
test
xchg
mov
cwde
ins
mov
lods
ins
jns
rol
mov
ret
cmp
sbb
xchg
outs
lahf
pop
imul
gs
data16
mov
fnsave
mov
sub
jp
arpl
into
sub
mov
push
mov
jecxz
mov
leave
sub
mov
inc
mov
stos
sub
aad
inc
cld
fadd
or
or
xchg
sub
xor
fidiv
cli
lods
in
pushf
mov
jg
ins
into
lods
test
sub
pop
gs
jno
cmps
pop
mov
and
cmp
or
int
nop
in
ret
dec
pop
cld
xchg
test
or
cmp
pop
ins
repnz
(bad)
pop
fwait
pusha
lock
cdq
(bad)
ret
lods
daa
ja
imul
jnp
je
jae
or
fsubr
push
mov
cld
leave
lods
fstp
jbe
cmc
xchg
ins
pop
fisubr
dec
pop
not
dec
daa
xchg
pop
popf
dec
xchg
dec
dec
and
cmps
test
leave
(bad)
xor
aad
daa
sub
lods
fstp
popa
sub
ret
in
repnz
fld
fisubr
adc
pop
pop
push
pop
dec
in
scas
push
adc
mov
push
clc
lods
mov
sub
aas
(bad)
mov
imul
xor
jecxz
mov
lahf
jge
leave
daa
scas
test
jge
and
fcom
lahf
pop
push
or
push
jmp
cwde
fimul
hlt
neg
(bad)
lods
cs
jmp
ds
inc
retf
gs
fdiv
dec
or
pop
ds
ins
mov
pop
or
ror
pop
sbb
mov
xor
xchg
lods
pop
lea
ja
dec
dec
cwde
sub
arpl
pop
or
cmp
jg
mov
push
xchg
mov
or
adc
jne
inc
int
(bad)
cmp
outs
jns
ret
jecxz
jge
cmps
push
mov
add
push
fdivr
jge
movq
test
mov
fcom
jge
lods
imul
cmp
iret
pop
inc
mov
ror
push
dec
bound
mov
adc
inc
cmps
mov
sbb
or
aas
jg
ja
loope
or
loope
popf
jl
jmp
jmp
mov
cdq
pop
in
mov
sbb
out
ja
mov
xor
xchg
sub
test
loope
iret
xchg
mul
jo
push
rol
mov
pop
sbb
xor
imul
loop
movs
in
push
cmps
in
or
in
mov
jo
cmps
imul
ds
pop
push
xchg
push
(bad)
lahf
lods
inc
jbe
outs
mov
(bad)
out
(bad)
xlat
mov
inc
inc
xchg
stos
pop
popf
hlt
fbld
leave
cli
ds
cmps
fidivr
call
dec
aad
cmp
aad
sbb
add
sbb
pop
lea
stc
push
adc
(bad)
jge
xchg
rsqrtps
xor
jmp
mov
sti
mov
lahf
xor
arpl
push
push
xchg
sti
ficomp
movs
mov
xchg
aad
call
mov
pop
jge
je
mov
push
xchg
test
test
jo
loop
nop
cmps
fmul
test
push
(bad)
jp
ins
sahf
add
xor
rcr
addr16
into
shl
loop
cld
inc
ror
mov
imul
rcr
or
add
mov
(bad)
jge
xor
nop
inc
enter
jno
push
call
mov
mov
ja
inc
out
mov
retf
cdq
popa
out
pop
(bad)
and
(bad)
jmp
scas
xor
sub
outs
fstp
xor
jno
test
fld
ret
xchg
mov
xchg
sahf
lock
cmps
dec
(bad)
sbb
in
push
ins
aas
fwait
adc
jne
push
(bad)
mov
mov
and
sahf
mov
jge
outs
sbb
test
xchg
mov
jge
std
bound
pop
adc
dec
mov
test
mov
push
and
mov
test
and
xchg
inc
cmp
dec
jmp
popa
pop
xchg
dec
push
cmp
pop
je
cwde
jb
cld
aaa
or
popf
sub
or
(bad)
aaa
cmp
cwde
jmp
jle
or
push
call
les
fsubr
dec
(bad)
push
aaa
and
icebp
into
jbe
mov
jbe
inc
inc
(bad)
mov
dec
cmp
pop
out
push
nop
rcl
es
scas
js
adc
mov
xchg
pop
cmps
popf
inc
push
push
mov
mov
lods
jecxz
fwait
push
fxch
mov
retf
stos
inc
shl
aam
mov
sbb
loop
push
repnz
pop
and
inc
push
xor
pop
mov
push
inc
imul
xchg
mov
dec
dec
lods
jne
pop
ret
or
icebp
cmp
xchg
adc
fidivr
mov
pop
sub
fnstenv
and
jnp
dec
sti
cmp
aad
outs
sbb
aaa
mov
dec
out
mov
inc
cmp
lahf
test
sbb
jmp
fdiv
and
xor
cmp
mul
mov
sbb
pop
and
div
(bad)
mov
dec
mov
lods
cmp
dec
cmp
xor
cmps
and
(bad)
push
jb
jecxz
call
or
pop
xchg
stos
dec
xor
dec
mov
sub
push
xchg
cdq
popa
jl
jns
and
sub
push
movs
nop
inc
hlt
xor
push
cmps
dec
dec
adc
mov
inc
(bad)
loope
lods
adc
out
call
aam
cmp
and
jge
sub
mov
pop
out
cli
sbb
sub
ret
mov
test
push
in
mov
sbb
push
hlt
(bad)
pop
fldcw
jecxz
imul
call
push
sbb
cwde
cmp
xchg
in
push
ins
pop
cli
push
sub
(bad)
adc
aas
test
lds
lods
je
push
sub
(bad)
loop
sbb
shl
xchg
sahf
lea
cld
dec
and
je
cld
jecxz
xchg
dec
cwde
loope
js
pop
call
jmp
jp
jle
cmc
pop
xchg
sbb
dec
sbb
cs
shl
test
cmp
push
push
pop
pop
cmc
fbstp
pop
ret
push
mov
int
loopne
sti
jg
lahf
movs
dec
scas
stos
dec
xchg
jno
sub
mov
ror
dec
ret
sub
rol
in
outs
cmps
mov
popa
jae
or
imul
pop
mov
ja
stos
pop
push
or
popf
movs
pop
test
jge
hlt
std
mov
xor
test
fmul
and
and
mov
fisub
movs
enter
test
stc
pop
ins
xor
into
and
pop
retf
sbb
repnz
fld
bound
ror
cmp
mov
in
mov
lods
stc
leave
pop
(bad)
mov
mov
xor
loop
pop
cmps
push
test
xchg
je
sub
(bad)
pop
and
aam
push
test
xor
pop
push
jmp
aas
xlat
std
xlat
inc
mov
xchg
and
jle
push
cmpps
call
dec
addr16
mov
mov
jp
int
aas
popa
jmp
jae
aas
inc
outs
je
jb
jbe
dec
inc
mov
(bad)
mov
lahf
mov
and
jno
iret
xor
cmp
pop
inc
mov
push
inc
push
call
loopne
es
xor
cmp
xchg
(bad)
mov
outs
(bad)
int3
call
mov
xchg
ja
out
push
ror
sub
lds
mov
push
dec
cs
cmp
xor
cdq
dec
retf
icebp
sbb
popf
inc
sbb
pop
jp
sub
jb
dec
jbe
mov
stc
mov
cmp
mov
test
scas
es
scas
stos
mul
int3
call
retf
jmp
pushf
xchg
loop
dec
cmps
xlat
in
cmp
test
dec
aas
test
enter
popf
dec
cmp
test
sub
rcr
(bad)
sar
add
gs
adc
div
icebp
dec
cmc
leave
repz
ficom
dec
sbb
pop
cmp
mov
mov
sbb
test
push
lock
aaa
test
mov
ins
cmp
mov
je
jb
inc
sub
dec
jo
sub
fisttp
movs
call
cmp
and
retf
lea
mov
push
jnp
jg
cdq
in
cmp
cwde
arpl
aad
mov
xlat
cmp
xchg
call
pop
add
mov
aaa
out
(bad)
fnsave
popf
push
mov
xchg
movs
xchg
dec
lods
loope
and
xor
test
xchg
adc
mov
mov
stos
push
test
mov
cmp
fstp
(bad)
fsub
fidiv
sahf
mov
mov
div
push
sub
push
not
stc
push
mov
das
sub
pop
in
movs
(bad)
sub
aad
cmc
push
fnstsw
push
sub
push
sahf
ror
push
sub
ds
pop
dec
shl
cwde
leave
cmp
ins
xlat
and
popa
sub
xor
dec
sahf
icebp
aad
imul
gs
jmp
and
jae
and
pushf
out
popf
push
jp
pop
jmp
push
xchg
xchg
loope
hlt
aad
add
mov
ins
dec
aas
sub
mov
sbb
retf
jae
dec
mov
and
data16
mov
repz
bound
movs
pop
int
sbb
mov
inc
or
jmp
adc
stos
bound
push
pushf
sub
sub
push
jbe
inc
push
pop
pop
fstp
cmp
ds
dec
lock
xlat
pop
mov
inc
xchg
dec
jno
sbb
in
not
mov
leave
dec
sbb
push
adc
rcl
push
ins
inc
dec
push
ja
into
(bad)
in
xor
push
jmp
imul
lahf
add
jge
loopne
inc
sub
cli
jns
(bad)
aad
jecxz
movs
push
ins
jns
mov
es
sub
jns
popa
(bad)
repnz
and
stos
retf
jnp
call
push
jae
rcl
dec
cs
xor
jbe
in
ja
frndint
add
rcl
jno
cli
jae
cmp
je
(bad)
adc
pushf
cmps
pop
xchg
cmp
int
cmps
push
sub
nop
mov
add
xor
and
(bad)
test
inc
dec
jo
stos
pop
aas
adc
jp
div
sub
ret
mov
cmp
cmp
mov
imul
xchg
frstor
jns
and
and
jle
enter
inc
ret
xor
jno
jb
jmp
popa
jl
movs
daa
fwait
jmp
lahf
push
stos
fisubr
fimul
movs
dec
icebp
ins
cmp
mov
fisttp
push
(bad)
ret
mov
mov
out
call
mov
mov
mov
arpl
mov
das
sbb
imul
out
outs
or
scas
aas
cmp
and
jns
jmp
sub
pop
enter
(bad)
jbe
mov
das
cmps
pop
push
mov
push
stos
mov
sbb
fwait
sub
dec
push
push
dec
fbld
ffreep
idiv
int3
repz
mov
aaa
jns
cli
sbb
xchg
mov
sbb
or
cs
push
dec
leave
adc
xchg
pop
pop
sbb
retf
dec
jge
ja
test
mov
ficom
fdivr
leave
in
cwde
leave
cmc
inc
adc
out
xchg
ds
sbb
cmp
push
dec
mov
push
fcomp
push
fistp
rcl
inc
clc
stos
pop
rsqrtps
pop
fnstcw
mov
mov
repz
loope
mov
dec
dec
in
jmp
stos
aaa
jb
and
scas
mov
ficomp
in
mov
nop
test
pop
gs
xchg
dec
jbe
frndint
cmp
push
xchg
popf
push
loope
pop
icebp
adc
mov
hlt
fcmove
inc
fcmovnb
stc
cmps
push
mov
ret
cmps
mov
cli
ins
ins
retf
outs
jmp
cmp
jns
out
push
xor
(bad)
push
mov
in
inc
in
cmc
(bad)
mov
xchg
pop
mov
jmp
push
xchg
movs
call
int
cwde
lahf
ins
jbe
cdq
dec
mov
lahf
neg
and
pop
xchg
imul
test
test
and
cmps
in
mov
ret
push
jl
dec
sti
pop
out
out
retf
push
dec
push
dec
push
mov
add
mov
out
mov
mov
inc
mov
pop
scas
jmp
in
leave
sub
mov
lods
mov
add
jb
jbe
sbb
pop
mov
gs
cmp
jge
xchg
movs
dec
out
or
cld
pop
sahf
out
stos
pop
push
in
std
fwait
push
and
fisubr
mov
mov
jae
dec
mov
inc
lods
cld
adc
out
bound
js
lock
jmp
sbb
cmp
stos
cld
or
fimul
inc
adc
push
retf
retf
out
fstp
es
inc
fisttp
js
mov
pop
out
pop
jne
jbe
push
inc
icebp
sbb
sahf
stc
leave
stc
das
test
cmp
xlat
imul
mov
clc
in
shl
xor
inc
imul
test
dec
cmps
rcr
daa
cdq
xor
leave
bound
(bad)
add
js
stos
or
ins
xchg
xchg
ss
leave
and
jp
pop
push
rcr
daa
and
dec
rol
sub
pop
lods
out
call
mov
jmp
mov
(bad)
es
cmp
test
popa
out
test
dec
adc
rol
in
add
psadbw
dec
mov
sub
icebp
test
and
pop
fmul
adc
std
pop
mov
sub
arpl
jnp
fbld
iret
mov
sub
cmps
sbb
inc
pop
push
dec
push
or
mov
stc
push
pop
adc
mov
xor
scas
xchg
dec
push
cmps
cdq
xchg
pusha
(bad)
dec
ret
in
addr16
aam
jmp
jns
xor
and
in
mov
ret
outs
shl
cmp
sub
mov
xor
push
push
dec
adc
gs
out
(bad)
xor
jecxz
popa
push
cmp
inc
pop
jle
retf
push
lods
and
movs
inc
cmps
inc
xlat
es
pop
jno
mov
jle
sbb
stos
mov
jge
outs
fimul
cmp
or
std
pop
aas
mov
mov
mov
jb
test
rcr
jb
sti
movs
stc
mov
ss
cs
dec
xor
ds
jge
jmp
xchg
cmp
fst
sub
popf
ins
dec
aas
movs
arpl
rcl
mov
sub
and
mov
xor
lea
idiv
inc
ficom
pop
mov
lods
arpl
(bad)
xchg
push
out
mov
mov
sbb
fisttp
aad
std
pop
mov
jne
xor
outs
dec
mov
xor
imul
ds
adc
retf
xchg
xchg
jmp
mov
jo
imul
mov
ins
fild
shl
fld
stos
inc
xor
(bad)
scas
sbb
call
outs
pop
dec
(bad)
in
xchg
sbb
xchg
pop
mov
jbe
push
xchg
mov
or
cdq
imul
in
stos
adc
cmp
dec
mov
push
cmp
sub
jbe
sbb
ficomp
data16
stos
inc
or
ja
jmp
out
mov
and
out
gs
retf
daa
cwde
popa
loope
sub
xchg
aad
loope
xor
mov
cmps
sar
lock
lds
jno
call
ret
xor
mov
inc
stos
cmp
test
pop
mov
adc
aas
into
and
cmp
push
jmp
xor
movs
sub
push
mov
push
cmps
mov
aam
rcr
inc
xchg
cmp
cdq
jmp
pop
jp
jge
pop
pop
lods
xchg
mov
jo
mov
outs
fnsave
addr16
xchg
jmp
inc
lds
inc
stc
push
retf
scas
shl
push
dec
scas
dec
adc
sub
mov
ret
arpl
inc
jge
mov
mov
mov
call
fnstcw
lahf
inc
cs
ficom
jl
mov
outs
daa
cmp
stos
dec
add
adc
sar
repnz
mov
mov
inc
ja
adc
sbb
aaa
outs
imul
mov
push
hlt
mov
push
repz
xor
push
add
dec
and
mov
jg
cdq
xchg
ins
je
add
not
push
mov
xchg
inc
pop
jge
das
mov
iret
fs
mov
cli
add
jmp
mov
dec
xor
in
jns
mov
outs
pop
dec
js
mov
lods
jg
pop
movs
lds
test
mov
pop
test
xchg
test
fwait
jno
push
push
pop
inc
cmp
mov
mov
mov
and
cmps
movs
gs
outs
into
leave
mov
cwde
loopne
fnsave
(bad)
jmp
aam
cs
addr16
pop
mov
xor
loop
xchg
mov
mov
clc
aad
test
pushf
fwait
gs
inc
mov
lea
rol
iret
mov
cs
xchg
dec
dec
push
mov
aam
mov
(bad)
add
fisubr
out
dec
xor
cmps
cmc
cs
jg
jae
lea
push
sub
retf
mov
stos
mov
(bad)
aam
cmps
dec
repnz
in
inc
lock
in
jecxz
jg
mov
stos
inc
rcl
or
mov
outs
movs
xor
loopne
cmc
xchg
(bad)
jg
ss
xchg
adc
test
ins
test
xchg
shl
pop
movs
jmp
push
pushf
mov
fild
out
jne
dec
lods
and
and
lock
iret
(bad)
lock
es
xchg
cmp
ins
jp
mov
sub
dec
and
inc
shr
inc
scas
jmp
retf
mov
sub
pop
movs
push
fs
jne
out
imul
push
mov
push
xor
fwait
nop
jno
jae
and
xchg
jne
ret
xchg
jnp
and
pop
xor
pushf
inc
std
xlat
adc
sbb
xchg
hlt
data16
in
out
mov
mov
outs
aaa
pop
sbb
mov
jg
push
mov
jmp
fcom
sahf
sub
pop
mov
ins
adc
rcr
xor
cmc
mov
jmp
xor
dec
or
out
xchg
pusha
repnz
int
dec
xchg
in
jmp
dec
sbb
pop
and
fucomp
pop
xlat
gs
pop
push
out
repnz
fild
sahf
(bad)
pushf
lock
fwait
jb
imul
sti
cmp
mov
push
jns
mov
inc
fisub
fwait
xchg
das
push
movs
gs
mov
mov
dec
cmp
mov
hlt
repz
pop
pop
std
nop
arpl
outs
imul
movs
jl
mul
cmp
jle
sar
add
cmc
lahf
push
xor
push
test
(bad)
sub
xchg
jnp
js
xchg
out
shl
call
push
imul
jecxz
cmc
es
xchg
pop
pushf
dec
aas
sti
cs
push
xlat
mov
jmp
adc
xor
ja
cmp
out
cmp
outs
add
stos
xchg
dec
pop
dec
adc
daa
test
js
fcos
add
jecxz
aaa
imul
ja
mov
push
fdiv
push
xlat
test
adc
aad
in
out
jo
movs
adc
mov
cmp
pop
jle
jl
shr
pop
mov
jmp
jp
add
dec
xchg
cmp
adc
push
jmp
push
mov
int
mov
outs
mov
push
dec
mul
sub
int3
mov
movs
daa
push
test
cmp
sub
jmp
imul
fstp
mov
shl
pop
popf
test
push
dec
je
stc
jmp
and
dec
test
add
fidivr
sti
pop
fidivr
xchg
push
lea
and
mov
enter
push
jle
jmp
(bad)
mov
lock
cli
inc
cmps
mov
cmc
arpl
dec
movs
pop
hlt
stos
lds
mov
inc
fld
sub
stos
push
cmps
in
xor
inc
add
mov
mov
mov
pop
and
pop
ret
ins
jmp
sub
gs
call
cmp
loopne
sub
(bad)
push
mov
scas
ret
pop
imul
int3
(bad)
mov
ja
cmovg
adc
dec
mov
aam
btc
and
and
pop
cs
cmp
out
popf
sbb
push
push
cmps
add
xchg
adc
mov
in
push
retf
jmp
fsub
in
not
xchg
mov
mov
loopne
inc
in
in
dec
ror
sbb
loope
pop
jnp
aam
cs
mov
xchg
pop
mov
adc
add
dec
test
xchg
push
dec
push
mov
in
inc
imul
ja
dec
ficomp
mov
sbb
ins
mov
loopne
cmp
bound
fst
stos
push
sar
stos
xchg
aad
xchg
push
jb
call
xchg
movs
push
xchg
jp
movs
int
bts
daa
fwait
fwait
ds
repz
adc
or
or
arpl
dec
sub
sbb
cld
jl
lods
nop
in
in
push
cmp
dec
dec
test
stos
push
clc
jmp
ja
xor
std
xor
call
ret
xchg
adc
rol
movs
lea
push
pop
jno
push
pop
out
push
arpl
retf
mov
or
loop
mov
cli
mov
mov
fst
outs
mov
ja
lds
xchg
(bad)
jmp
xchg
stos
shl
cmp
mov
(bad)
das
nop
repnz
sub
stos
add
addr16
neg
imul
popf
dec
jmp
or
retf
dec
xchg
and
fcmovnu
icebp
js
into
push
std
xlat
cmp
jecxz
mov
xor
xor
sahf
sti
pop
rcl
jle
lock
scas
jbe
mov
mov
inc
mov
icebp
xchg
push
out
outs
push
cmps
sbb
fbstp
xchg
fs
dec
sub
stc
or
and
cmc
xor
mov
push
stos
hlt
movs
frstor
(bad)
in
movs
cmc
dec
stos
ja
jns
sbb
xchg
dec
call
imul
or
cmp
mov
xchg
jbe
out
inc
iret
push
push
inc
and
nop
mov
scas
jns
cmp
and
std
cmps
(bad)
jbe
mov
lds
xchg
test
cmps
imul
neg
cmp
mov
std
sub
into
icebp
lock
mov
std
cmps
cli
xchg
loopne
test
add
dec
loope
icebp
stos
pushf
jg
pop
jns
neg
inc
inc
aas
std
pop
cmps
pop
cdq
leave
xlat
adc
cli
out
add
imul
sar
cmps
pop
mov
xchg
pop
or
sub
push
fisubr
mov
jo
adc
pop
mov
fbstp
scas
push
out
mov
dec
loopne
ret
ror
sti
pop
or
push
mov
jne
stc
ins
mov
lods
cmp
call
push
ror
fisubr
shl
fwait
(bad)
jb
dec
jno
ja
movs
in
sbb
movs
test
mov
stc
inc
ret
loope
sti
test
pop
nop
data16
or
enter
call
ins
dec
stos
int
inc
outs
inc
(bad)
jnp
jle
sbb
jmp
test
das
push
ins
jbe
clc
js
lods
out
and
ret
aad
cmps
jbe
xor
mov
xchg
xchg
pop
or
stc
xchg
stos
outs
ins
ss
xchg
mov
icebp
retf
sbb
and
outs
xchg
gs
xchg
mov
mov
push
xchg
fisubr
hlt
arpl
mov
stos
scas
pop
xor
pop
jp
imul
mov
mov
jmp
xor
cmp
adc
mov
mov
(bad)
pop
push
int3
nop
and
shl
mov
retf
jg
ss
sub
push
add
mov
aad
in
repnz
in
jge
mov
mov
shr
cli
mov
stc
mov
fdivr
iret
iret
sbb
shl
fmul
fnstenv
pop
aad
test
inc
test
std
out
push
pop
idiv
mov
jl
or
inc
div
cmps
xchg
gs
sub
cs
fdivr
cmc
push
sbb
xchg
dec
sti
fs
mov
xor
inc
popf
inc
ror
jg
je
iret
dec
push
addr16
jmp
xchg
fs
sub
popf
sub
popa
leave
push
stc
mov
jmp
repnz
sahf
int3
in
xor
adc
stos
in
push
mov
addr16
pop
lahf
gs
mov
sbb
cmps
imul
out
mov
xchg
gs
lock
push
mov
xchg
sub
repz
gs
jmp
push
daa
sbb
add
fsubr
mov
mul
push
pop
test
pop
jno
pop
mov
ds
xchg
(bad)
imul
adc
pop
adc
cmc
pop
mov
lods
mov
inc
or
retf
stos
ror
dec
cmp
xor
ficom
sub
daa
mov
and
dec
pop
dec
sub
jl
xor
jne
mov
dec
cmps
daa
imul
inc
mov
stos
arpl
test
pop
pop
cld
retf
push
test
xor
xchg
in
xlat
shl
push
dec
scas
mov
cmps
std
nop
mov
xchg
repz
cmp
mov
dec
xchg
dec
aas
inc
jnp
inc
mov
add
test
scas
jbe
jne
outs
pop
xor
pop
fst
xchg
push
cmps
cmp
gs
(bad)
xchg
nop
mov
call
dec
xor
mov
out
movs
(bad)
cdq
cmps
call
test
cmps
mov
sbb
jmp
adc
icebp
adc
cmp
mov
sbb
mov
retf
test
cdq
into
pop
sub
xor
xchg
mov
xchg
dec
icebp
int
mov
fwait
bnd
popf
int3
fst
sbb
dec
sar
or
inc
sti
loopne
ins
inc
mov
inc
sub
cld
loope
inc
mov
adc
neg
or
out
jp
loop
xchg
inc
loopne
es
dec
pop
xchg
jnp
fild
and
hlt
ficom
xor
ins
push
into
push
push
jp
push
shl
int3
or
lahf
into
rcr
or
fisttp
xor
(bad)
scas
pop
jp
das
xor
inc
mov
in
jle
mov
fld
adc
jmp
retf
fst
mov
pop
jns
push
ret
cmps
jmp
and
ror
and
and
mov
cmps
xor
adc
icebp
or
cmp
mov
outs
and
ins
div
shl
sub
pop
push
outs
(bad)
jg
and
sub
inc
ret
repnz
jg
push
mov
jbe
xchg
mov
shr
ret
cmc
xchg
mov
adc
mov
pop
outs
ja
push
mov
jb
mov
fcmovnu
sub
scas
and
xchg
jbe
popf
pop
dec
aam
mov
mov
mov
(bad)
fnsave
push
(bad)
fdivr
cmps
xor
test
add
adc
jp
aaa
ffree
xor
and
dec
je
aam
imul
or
and
ror
mov
inc
cdq
aaa
cmps
test
adc
pushf
(bad)
cmp
xlat
push
mov
stos
mov
jle
fcomp
sbb
xchg
je
fldcw
shr
sub
xchg
push
lods
stos
sub
mov
adc
sbb
mov
dec
ja
(bad)
test
jo
add
je
test
(bad)
out
mov
cs
inc
loope
jae
push
fdivr
cmp
aam
sbb
push
xchg
ret
ss
push
loope
leave
out
fcom
aaa
cs
xor
mov
jns
and
lds
scas
jge
ds
out
pushf
repz
outs
push
mov
and
cmp
mov
mov
xor
sub
scas
hlt
movs
mov
mov
loope
inc
ins
mov
mov
and
data16
mov
dec
xor
stos
loop
or
out
dec
jge
shl
test
retf
shl
ins
mov
movs
xchg
gs
lock
sbb
mov
loope
imul
(bad)
or
mov
fsubr
fidiv
(bad)
adc
cdq
dec
ins
loope
jae
lock
add
cld
aad
xor
outs
dec
jle
ud1
in
stos
out
movs
stos
cwde
mov
in
icebp
sti
fistp
mov
adc
adc
fucom
es
and
xor
and
mov
cmp
into
inc
jecxz
cdq
scas
adc
sahf
mov
in
xor
outs
push
pop
push
aam
sub
inc
inc
(bad)
retf
(bad)
jno
mov
cmps
outs
ror
jl
dec
sahf
adc
mov
jae
cmp
pop
mov
xchg
xchg
shr
xchg
cwde
inc
int3
rcl
inc
or
test
adc
movs
sbb
or
xlat
fidivr
jecxz
(bad)
int
xchg
(bad)
xchg
xchg
popf
xor
or
out
jae
int
inc
mov
push
pop
pop
sub
jne
mov
outs
xchg
sub
add
enter
push
push
nop
rcr
mov
jmp
int
dec
jecxz
sub
jp
sbb
cs
scas
fcom
lods
jge
mov
xor
mov
jmp
out
push
daa
out
mov
inc
iret
inc
sbb
sete
sub
xchg
inc
push
fwait
jbe
adc
fisub
jle
push
call
jecxz
shl
fnsave
jns
jle
loop
fbstp
retf
sub
retf
and
cmp
jb
xchg
pinsrw
icebp
aad
pop
ins
xlat
mov
movs
ins
test
aas
js
mov
cld
cmp
not
push
sub
in
mov
push
stos
pop
shr
jae
addr16
(bad)
xor
xchg
test
add
out
sti
cmp
movs
mov
cli
sub
push
call
loop
dec
shl
cmovnp
stos
push
or
adc
fist
das
or
mov
push
fidiv
pop
xchg
out
jge
stc
and
es
mov
dec
xor
cmovno
iret
xor
xchg
enter
outs
ficom
idiv
push
cdq
aaa
lahf
popa
icebp
push
fldenv
sbb
lock
cld
jp
jnp
mov
push
std
dec
mov
stos
jle
rcr
inc
adc
xchg
dec
sahf
mov
fwait
int3
aas
cld
fild
div
hlt
xchg
repnz
xchg
mov
in
std
mov
call
cmp
pop
movs
int3
aam
ds
dec
mov
(bad)
lods
jo
sbb
popa
cmp
and
or
xor
mov
mov
cmps
mov
sti
xor
mov
jmp
mov
addr16
cmc
iret
pop
icebp
sbb
sub
cmp
pop
sub
inc
dec
mov
outs
mov
or
inc
sub
jl
push
push
adc
mov
(bad)
jo
push
sub
xor
add
mov
fcom
sub
inc
push
fnsave
xchg
inc
and
stc
inc
sub
or
ss
out
cmps
loop
bound
cmp
jmp
lahf
mov
xchg
mov
dec
(bad)
pop
into
push
out
les
and
and
movs
cdq
add
adc
jecxz
cwde
mov
add
sti
retf
add
cmp
cld
and
pusha
jns
sbb
ret
xor
shl
push
(bad)
cmp
movs
dec
(bad)
clc
sub
mov
inc
inc
add
ficomp
dec
adc
loopne
cmp
jl
cmps
jns
xchg
xchg
mov
ret
mov
out
(bad)
and
and
pusha
cmp
mov
pop
pusha
retf
loopne
and
mov
adc
pop
dec
les
fsubr
and
ja
mov
push
mov
dec
lods
(bad)
test
mov
popa
mov
je
fwait
inc
leave
sahf
mov
xor
aam
mov
loope
aam
inc
(bad)
inc
jnp
mov
jne
xchg
mov
jecxz
xchg
test
gs
mov
aam
xlat
mov
sbb
xchg
mov
movs
aaa
jnp
and
push
or
xchg
(bad)
movs
or
test
adc
sar
pop
cmp
leave
sub
les
ds
cmp
lods
xchg
mov
and
and
movs
xchg
test
rcr
mov
leave
inc
dec
jb
daa
lods
push
fnsave
aam
mov
out
sub
xchg
aad
mov
out
sahf
lea
xor
mov
mov
sub
pop
sub
dec
mov
sti
inc
popf
stos
pushf
pop
dec
fcom
int3
dec
leave
push
imul
retf
xor
jns
into
cmp
mov
sub
jb
xor
pop
pop
stos
dec
or
or
mov
pop
pop
mov
jl
add
push
je
cmc
popa
scas
stos
outs
cdq
cmp
and
adc
jp
xchg
rcr
pop
jmp
push
jmp
pop
xlat
test
(bad)
mov
loop
xchg
mov
repz
and
daa
retf
test
pop
imul
xchg
cmc
popf
mov
neg
neg
in
mov
fmul
iret
push
movs
mov
jp
pop
ja
mov
xchg
mov
jmp
mov
xor
and
test
ins
nop
add
cmps
adc
push
pop
ficomp
icebp
repz
sub
xor
jns
dec
icebp
inc
dec
js
pop
fisubr
pop
add
push
repnz
dec
pop
(bad)
sub
ficom
or
adc
push
pop
mov
ins
push
ins
lahf
retf
jmp
or
daa
add
mov
rcr
dec
dec
cs
fmulp
leave
outs
(bad)
or
(bad)
aad
jbe
sub
test
mov
mov
out
xor
test
out
test
sbb
xor
mov
inc
sub
aaa
fs
xchg
mov
out
int3
xor
adc
(bad)
mov
dec
mov
retf
xor
lods
or
push
fdiv
xchg
sub
movs
ret
leave
mov
test
stos
popa
stc
push
cdq
sahf
jne
mov
gs
xchg
shr
inc
(bad)
(bad)
jecxz
dec
inc
das
xor
fist
dec
pop
(bad)
jns
sbb
ret
sub
test
push
mov
icebp
jnp
cld
jl
cdq
xlat
test
aas
dec
icebp
loop
dec
cli
and
and
js
rcr
sub
pop
enter
cld
cld
repz
jmp
(bad)
jo
out
pop
call
sub
inc
out
cld
mov
leave
iret
mov
fst
push
cmc
xchg
mov
in
cld
fist
push
jnp
hlt
push
push
fld
int3
sub
rcl
sti
leave
ins
inc
scas
push
xor
and
fwait
sbb
lahf
clc
je
cwde
sti
pop
das
fdivrp
push
xor
sub
cld
pop
sahf
pushf
fistp
pop
mov
test
cwde
jb
repnz
pop
sbb
ror
push
mov
cwde
cld
and
scas
popa
or
imul
mov
xor
mov
xor
iret
lock
lds
movs
and
inc
inc
inc
(bad)
fstp
sbb
retf
(bad)
loop
ins
xchg
and
test
(bad)
pop
pop
mov
fsin
rcl
into
mov
mov
jne
jne
xor
pop
xchg
jo
test
xchg
inc
les
loopne
lahf
lods
js
dec
cmps
addr16
hlt
push
inc
cs
jmp
scas
push
jp
in
cmp
int
xchg
or
out
nop
jmp
sub
jmp
fdiv
outs
movs
sub
or
scas
neg
cli
mov
mov
push
sub
ror
mov
jp
inc
mov
jnp
adc
aam
cmp
dec
pop
mov
mov
(bad)
cmps
movs
fadd
out
enter
cmp
or
mov
stos
popa
icebp
fsubr
ss
cmp
jnp
sbb
clc
ss
xchg
cmps
sub
shl
jle
addr16
ss
mov
icebp
mov
jg
mov
inc
aaa
mov
inc
pop
mov
mov
xchg
addr16
ins
popf
ins
xchg
cmps
ja
fnstsw
pop
rcl
pop
add
mov
pop
mov
(bad)
stos
cmps
push
dec
int3
in
xchg
jb
push
in
cmp
jge
mov
out
cmps
adc
dec
adc
and
or
xchg
adc
jne
push
aaa
push
push
mov
loop
xor
out
jl
mov
lods
mov
push
push
jne
retf
andnps
movs
mov
cs
fs
jmp
lock
(bad)
lea
fst
fisttp
repz
jae
mov
pop
ins
movs
push
inc
cld
les
or
into
lock
sbb
lds
xor
test
mov
jae
sbb
pop
cwde
gs
jb
cmc
dec
xor
ficom
movs
fidivr
mov
mov
cli
push
in
jle
outs
aaa
shl
mov
in
sbb
and
sbb
arpl
xor
out
std
out
retf
push
pop
sub
aas
lock
div
cmp
pop
jecxz
fild
push
or
jno
cmp
mov
arpl
es
adc
mov
or
push
aam
xor
jle
test
pop
lods
xchg
test
mov
add
add
add
sbb
push
mov
jb
lock
loopne
ja
jno
sub
jb
into
adc
mov
cmp
inc
inc
mov
pminub
daa
outs
lods
inc
push
xchg
(bad)
arpl
ficom
ds
jnp
pop
or
pop
mov
pop
add
cmp
ss
and
push
xchg
and
arpl
xlat
sbb
nop
dec
test
test
ins
and
add
fild
pop
in
add
adc
push
lds
push
aam
xor
fst
xchg
and
xlat
inc
gs
dec
stos
mov
sbb
xor
pop
mov
out
fstp
sbb
rcl
mov
dec
cmps
cmp
imul
xchg
fnstenv
inc
push
xor
jl
gs
repnz
iret
(bad)
test
or
cld
jns
icebp
pop
outs
xor
xchg
movs
shl
hlt
jnp
mov
mov
ins
sbb
scas
daa
mov
ins
jnp
lahf
pop
out
fisubr
xor
movs
jmp
rcr
or
lea
fdivr
and
cmp
xchg
loop
ret
sub
ins
sbb
movs
and
scas
jnp
mov
lods
aam
mov
not
push
out
xor
das
shl
es
mov
fcomp
pop
sbb
pop
ss
fimul
dec
nop
xchg
xor
jmp
inc
sub
dec
pushf
mov
mov
sbb
mov
pushf
mov
imul
stos
xchg
ss
mov
mov
xchg
dec
inc
sub
out
jp
icebp
jnp
mov
js
call
push
inc
xor
mov
aaa
mov
and
(bad)
aad
xchg
fsubr
sbb
inc
imul
scas
ds
adc
loop
xchg
push
outs
fdivr
iret
pop
xchg
jo
xor
pop
sub
mov
jns
int
data16
je
daa
data16
pop
cmps
lods
sti
jle
(bad)
(bad)
mov
test
and
lds
cli
pop
and
pushf
imul
adc
(bad)
(bad)
cmp
or
cs
(bad)
mov
cmc
fisttp
ss
adc
neg
push
vandpd
sbb
mov
addr16
sub
mov
pop
fisubr
mov
fs
stos
test
daa
and
cmp
ins
xor
cmp
out
sub
idiv
bnd
xchg
dec
fstp
imul
mov
(bad)
jecxz
mov
pop
loopne
(bad)
les
lods
shr
mov
aad
stos
cmc
callw
push
fldcw
into
imul
cmp
mov
(bad)
push
xchg
pop
fisubr
and
mov
stos
ds
jl
xchg
in
jl
xor
rol
arpl
mov
scas
cdq
jp
mov
sahf
iret
retf
dec
xor
push
jecxz
pop
sbb
mov
jb
xchg
mov
pop
call
inc
or
push
clc
mov
dec
jecxz
aas
lods
push
mul
dec
and
ret
mov
bound
enter
das
pop
push
in
sahf
das
nop
stos
popf
xor
(bad)
xor
outs
inc
add
out
adc
jne
pop
call
cmp
repnz
hlt
repnz
xor
mov
sub
(bad)
(bad)
(bad)
call
jp
outs
lahf
pop
cmps
mov
movs
dec
and
push
add
arpl
cmp
push
popf
sub
cli
icebp
xor
je
ror
(bad)
mov
or
adc
cdq
jp
scas
imul
pop
stos
push
sbb
sbb
cld
dec
sub
mov
cmp
(bad)
hlt
mov
push
test
test
out
dec
in
sti
setg
inc
and
fsubr
aam
push
imul
jmp
push
int3
jmp
inc
in
cdq
mov
or
push
shr
mov
push
fistp
into
and
pop
inc
cmp
or
stos
lahf
ret
and
mov
sbb
div
dec
ds
fidiv
outs
mov
out
sub
cmps
loope
mov
mov
dec
sub
inc
or
dec
aam
popa
xor
jns
addr16
lods
cvtps2pi
dec
sub
enter
mov
repnz
jecxz
or
mov
(bad)
addr16
and
out
push
adc
push
scas
hlt
out
into
adc
push
sbb
retf
jl
aaa
sahf
cmp
mov
cmps
push
sahf
push
mov
or
jnp
inc
clc
fbstp
jp
jbe
pop
push
call
movs
dec
push
lds
aam
aam
sub
jbe
dec
xchg
jae
dec
push
sbb
sbb
in
adc
jbe
or
ret
push
into
xor
inc
cli
aad
loop
repnz
xlat
xchg
in
scas
and
sahf
and
jmp
xchg
scas
fcomi
mov
jnp
mov
in
add
push
retf
(bad)
int
pushf
call
pop
stos
xor
sub
sub
repnz
jne
idiv
hlt
lods
loop
mov
loope
or
out
sub
dec
sub
sbb
hlt
xlat
cmc
ret
jno
test
arpl
in
mov
cmps
neg
pop
sub
popa
test
and
(bad)
push
nop
fwait
imul
xchg
dec
or
cmp
pop
sbb
cmps
mov
sahf
cmpxchg
dec
xor
(bad)
leave
fnstcw
enter
mov
xchg
inc
sub
jmp
gs
clc
fwait
xchg
les
xchg
mov
outs
pop
rcl
xchg
in
leave
push
aam
pop
outs
arpl
ins
retf
jae
mov
mov
enter
(bad)
das
fcomp
dec
pop
xchg
dec
mov
pop
in
push
mov
ja
pop
xchg
cmp
sahf
xchg
jae
jecxz
push
call
or
push
mov
dec
push
sub
adc
repnz
cdq
jb
cmps
fwait
push
or
sub
ror
(bad)
pop
push
sbb
lahf
ja
cmp
jmp
mov
cmps
nop
scas
inc
das
int
dec
sbb
mov
sbb
test
adc
in
xchg
jnp
pop
inc
shr
jne
in
mov
lods
push
xchg
inc
hlt
loop
lds
push
cmp
fsub
shl
push
sub
enter
hlt
cmp
dec
mov
jo
xchg
mov
je
outs
cld
rep
cmp
repnz
and
inc
ror
icebp
(bad)
pop
clc
mov
sar
out
jp
cdq
pop
sub
mov
movs
cli
pop
scas
fdiv
jp
inc
mov
inc
cs
lock
mov
movs
jle
xchg
movs
dec
es
xor
mov
mov
fimul
push
ins
and
scas
shl
fcomp
mov
in
jge
arpl
scas
pop
aad
jns
cmp
mov
jmp
lods
jl
cmps
or
dec
inc
outs
jb
das
test
push
movs
in
xor
(bad)
out
idiv
test
je
dec
push
stos
pop
xchg
xchg
fmul
(bad)
jmp
jmp
jge
inc
outs
and
mov
dec
sub
icebp
push
pop
mov
mov
mov
jmp
(bad)
lods
scas
pushf
ins
scas
gs
mov
add
pop
hlt
mov
jp
pop
arpl
cmp
out
jbe
repnz
rol
push
fisttp
add
mov
mov
cmp
jge
jmp
(bad)
imul
push
stos
pop
add
ret
push
push
xchg
inc
dec
mov
xchg
cmp
jle
adc
xchg
cmp
movs
jnp
and
fbstp
mov
daa
movs
pop
fidivr
or
neg
repnz
jnp
xor
inc
mov
jns
mov
dec
mov
push
cwde
mov
push
or
xchg
ret
cs
in
retf
add
daa
ins
jle
std
fwait
out
fmul
ss
sbb
inc
je
loope
mov
outs
stos
popf
idiv
xor
or
pop
jbe
jp
sar
shr
push
push
mov
lods
(bad)
fistp
jne
fbld
or
in
pop
ja
test
dec
dec
iret
mov
repnz
xchg
jge
cmp
(bad)
sub
mov
or
fwait
outs
xchg
loope
(bad)
int3
push
arpl
imul
inc
mov
cmps
dec
push
mov
shl
in
add
adc
and
test
and
jmp
mov
jl
mov
cmc
xchg
shl
dec
ja
pop
mov
mov
(bad)
in
push
or
out
xchg
push
in
push
jle
lds
pop
xor
inc
cmp
aaa
outs
and
addr16
ror
add
sub
stc
push
jmp
stos
fstp
ror
xchg
daa
cld
stos
jmp
js
clc
jo
jb
out
mov
stos
fisttp
test
dec
pop
xchg
push
xchg
loop
cli
retf
pop
or
xor
fldcw
sbb
scas
pop
add
mov
lock
dec
sahf
mov
sub
sub
neg
sbb
jb
lock
mov
test
inc
mov
or
xchg
into
sti
fist
stc
inc
ror
rcl
jle
ja
into
mov
in
ja
stos
scas
pop
jmp
lods
mov
leave
xchg
push
(bad)
jne
sub
pop
sbb
(bad)
addr16
push
movs
test
push
aas
mov
aam
call
in
sbb
(bad)
push
cmps
daa
push
pop
mov
pop
in
(bad)
int
mov
lods
jae
lahf
jmp
xor
sub
sar
jno
retf
pop
stos
jb
pop
es
sbb
loope
sbb
(bad)
pop
dec
cmp
bound
dec
lods
push
mov
inc
test
sub
movs
dec
fmul
shl
fwait
out
sub
in
fisubr
cmps
mov
sti
fldenv
imul
xchg
mov
cmps
dec
mov
es
test
sbb
std
push
adc
sbb
stos
mov
scas
push
fdiv
clc
lahf
jge
add
push
mov
mov
out
imul
fs
mul
test
aaa
rcr
mov
jno
test
hlt
xchg
clc
pop
movs
int
add
sahf
iret
out
dec
fidiv
fstp
mov
test
sub
sub
mov
nop
add
(bad)
sub
xor
dec
push
mov
or
not
push
xchg
stos
dec
push
jle
out
neg
and
(bad)
in
dec
mov
sbb
xor
call
cdq
xchg
dec
aam
pop
jns
or
and
xchg
xchg
repz
out
mov
cdq
popa
xor
xor
hlt
mov
movs
pushf
(bad)
es
call
jmp
fdivr
imul
aad
xchg
jns
das
inc
mov
cmp
inc
pop
push
mov
sub
dec
cmp
jl
js
mov
stos
cli
gs
mov
adc
in
in
xor
in
imul
mov
in
ja
xor
sar
sub
out
out
shl
les
mov
in
xor
sub
cmc
xchg
fwait
xchg
icebp
dec
neg
ds
xor
ret
mov
lods
jge
outs
leave
pop
ror
into
push
icebp
es
inc
mov
xchg
xchg
jmp
sub
pop
mov
int3
int
dec
idiv
push
adc
mov
xchg
fld
and
cmp
cdq
jbe
sahf
and
dec
fwait
mov
jp
sub
jno
mov
out
dec
(bad)
dec
add
scas
mov
jg
daa
inc
mov
cwde
(bad)
dec
movs
xlat
cs
call
push
gs
pop
loope
outs
mov
jnp
dec
imul
push
push
movs
sub
mov
dec
bound
adc
sbb
push
sbb
sub
jae
add
lods
jmp
scas
or
aaa
test
(bad)
mov
jge
cld
lea
int
mov
ficomp
test
sub
aad
dec
jnp
(bad)
jnp
sbb
cmps
and
pop
mov
mov
pop
adc
movs
in
pop
jmp
xchg
jecxz
jp
mov
mov
xchg
push
movs
adc
jg
jge
rcl
ds
jno
mov
jnp
imul
xor
lea
lods
cmp
dec
sub
inc
sub
jecxz
outs
mov
mov
adc
iret
dec
sub
pop
lods
aad
fsubr
aad
cwde
movs
into
leave
cmp
out
xchg
ins
and
fild
sahf
dec
sub
int3
out
dec
jns
(bad)
push
(bad)
mov
and
cmc
push
(bad)
mov
int3
mov
cs
js
jecxz
shr
mov
cmp
jge
in
sar
push
jo
push
test
mov
int
push
aas
mov
fist
sub
sbb
adc
pop
daa
push
shr
ja
mov
jmp
jne
jbe
movs
jmp
xchg
mov
shl
sbb
mov
jl
pop
xor
cmps
cmc
xlat
lods
test
retf
xchg
push
ret
xor
add
shl
jmp
push
outs
mov
xchg
mov
(bad)
mov
mov
mov
mov
lds
xlat
mov
popf
scas
fidivr
pop
cmps
push
mov
out
or
rcl
lods
pop
(bad)
dec
mov
inc
push
imul
jp
xor
lds
gs
repz
xor
sub
pop
test
test
cmp
int3
mov
push
push
jno
call
push
dec
sub
dec
movs
fcmovu
xlat
sahf
out
imul
push
ins
cmp
pop
jo
loope
pop
ds
jae
outs
mov
aas
pop
mov
(bad)
jo
cmp
stos
movs
lea
mov
mov
js
or
xchg
aam
inc
mov
inc
sub
mov
sub
jl
or
in
sti
mov
pushf
loop
push
jb
jb
mov
dec
aaa
dec
into
iret
addr16
and
mov
mov
daa
mov
lods
mul
test
loopne
jg
addr16
rcr
push
inc
aam
hlt
ret
mov
mov
inc
mov
sub
add
in
push
fist
leave
cmc
vphadduwq
dec
cmp
jmp
jp
jg
iret
fwait
jbe
cmp
jne
mov
test
cld
push
jmp
jne
(bad)
mov
jno
ror
mov
push
stc
or
scas
fnstsw
jno
repnz
xor
cdq
jno
sub
in
gs
add
inc
(bad)
mov
rcl
(bad)
mov
fisttp
push
shr
sub
xchg
mov
cli
(bad)
addr16
fmul
repnz
clc
jne
pop
xchg
ret
aad
mov
daa
push
sub
jno
call
rol
fcmovb
xor
dec
push
imul
dec
adc
lods
add
cmp
aas
xchg
inc
xchg
and
pop
push
mov
iret
cwde
dec
outs
mov
mov
cmps
or
out
cmp
icebp
jl
cmc
mov
int
imul
jo
(bad)
lea
das
sub
pushf
jnp
pop
pushf
add
xchg
sub
stc
dec
cmp
adc
out
outs
leave
inc
popa
pop
arpl
jle
aas
sub
popf
mov
shl
cmps
xchg
rcl
les
cmp
cs
lock
mov
sbb
cdq
xchg
mov
retf
mov
sub
cmps
xor
sbb
repnz
aad
push
jb
std
xchg
push
sti
fisubr
in
cmps
pop
jmp
mov
cmp
jne
sbb
daa
jne
call
push
fistp
jmp
(bad)
aam
iret
shr
sbb
xchg
lds
in
inc
push
test
cld
sbb
outs
(bad)
sbb
xor
mov
sar
xchg
push
cld
push
in
mov
aaa
push
xchg
call
mov
les
call
and
mov
in
mov
cld
std
fmul
dec
xor
mov
jnp
in
lock
sub
scas
shl
mov
cmp
push
adc
mov
dec
sahf
pop
push
adc
retf
ins
test
jne
test
gs
jno
jl
mov
dec
outs
retf
(bad)
push
xchg
sub
popa
call
outs
jmp
push
sub
and
outs
in
out
jnp
pop
pop
xchg
mov
adc
mov
cmps
int3
mov
xchg
dec
jb
(bad)
sbb
daa
pop
hlt
out
push
ins
dec
jbe
dec
mov
xchg
in
int
retf
pusha
cs
xchg
popa
dec
mov
push
nop
movs
mov
push
in
stos
mov
sbb
push
jnp
mov
fcmovnb
sar
jo
jo
xchg
xchg
mov
push
sub
mov
(bad)
mov
stos
add
outs
aad
mov
hlt
fld
ds
fist
repnz
xor
cmps
push
xor
(bad)
dec
mov
mov
jae
dec
inc
push
push
arpl
ja
xchg
pushf
loop
mov
ja
inc
mov
imul
inc
cli
dec
xlat
sti
sub
xor
ror
scas
enter
sti
jb
jno
pop
stos
int
mov
jb
mov
pop
sub
cmp
fs
fld
test
push
ret
repnz
xchg
loope
cmp
sub
push
aad
jmp
mov
jnp
sub
daa
(bad)
or
push
imul
cmovne
in
es
xor
add
fwait
dec
sub
mov
mov
stos
dec
push
sub
mov
mov
inc
pop
jge
repnz
sub
adc
outs
movs
and
mov
js
ret
or
dec
jp
jecxz
pop
sbb
mov
cli
shr
sti
xor
call
xor
cmps
push
dec
cmp
test
jnp
xchg
push
push
fstp
call
adc
pop
popf
mov
sbb
or
out
cmp
(bad)
sub
inc
pushf
movs
(bad)
(bad)
sahf
adc
hlt
and
ds
jp
cdq
jbe
out
(bad)
retf
lea
cmps
jae
cmp
jl
nop
mov
out
ficom
xchg
jno
jne
add
mov
rcr
nop
scas
dec
shr
repnz
movs
push
outs
dec
sub
into
scas
dec
xlat
lock
adc
mov
xchg
pop
inc
retf
jmp
(bad)
mul
or
or
pushf
mov
jp
push
push
cli
(bad)
ror
ins
stc
(bad)
arpl
pop
aad
sbb
lods
and
sar
mov
arpl
les
xchg
pop
inc
and
stos
pop
repnz
(bad)
and
inc
xor
loop
movs
sbb
xor
loop
jo
in
dec
sbb
xor
in
push
dec
mov
push
retf
movs
mov
fistp
xor
push
xchg
jg
inc
jmp
push
cmp
aad
and
shl
ror
movs
loopne
outs
bound
std
inc
mov
push
and
mov
xchg
aam
mov
adc
stos
adc
fnstcw
stc
leave
dec
rcl
lods
inc
add
nop
add
out
mov
dec
pop
pop
cwde
sbb
aas
out
jne
push
pop
push
test
(bad)
std
push
xor
js
add
fsubp
fwait
xchg
jmp
idiv
pop
outs
lock
cs
inc
sub
xchg
mov
sbb
add
cmp
inc
into
dec
cmp
xor
xchg
pop
sbb
jge
and
mov
sti
call
pop
(bad)
mov
jb
fisttp
popf
loopne
fisubr
mov
retf
stos
imul
dec
cmp
adc
push
in
pop
sbb
cmp
cmp
fwait
ss
pop
sbb
test
jmp
xchg
xchg
sbb
ficom
jb
sub
retf
cmp
pop
ins
fmulp
pop
test
cmp
pop
in
jns
jle
setle
mov
mov
mov
sub
jb
cmp
out
cli
mov
mov
mov
sbb
outs
inc
push
in
movs
imul
fs
cld
xor
xchg
jge
in
push
jp
sar
mov
mov
and
adc
ins
mov
(bad)
(bad)
(bad)
sbb
push
xlat
stos
retf
cli
test
mov
sub
sbb
lock
pushf
push
(bad)
stos
mov
adc
dec
pusha
mov
lahf
mov
fisttp
(bad)
iret
(bad)
les
jae
(bad)
out
fcomip
(bad)
es
adc
pop
test
xchg
adc
test
(bad)
std
adc
inc
or
out
lock
sub
imul
das
pop
stc
cs
push
lahf
jae
out
aad
das
int
lock
xchg
xchg
nop
movs
dec
xor
dec
retf
mov
xor
push
dec
aas
adc
push
sub
fldcw
pushf
adc
leave
jge
xchg
sbb
int
push
sbb
es
adc
fwait
inc
test
push
pop
sti
push
pop
push
push
daa
sub
xor
xchg
test
test
jge
mov
in
les
mov
push
sti
(bad)
mov
scas
scas
cdq
popa
adc
jbe
pop
mov
(bad)
into
fcomp
cmp
xchg
popa
mov
xchg
mov
adc
push
mov
xchg
mov
(bad)
into
loope
(bad)
int
lds
icebp
outs
jge
addr16
sti
pop
or
mov
pop
dec
js
popf
sqrtps
inc
dec
out
div
fist
imul
test
shr
dec
movs
inc
sub
out
mov
cld
jle
sub
test
inc
popf
dec
out
loope
(bad)
adc
imul
mov
loopne
out
icebp
xchg
cli
xor
cmps
ins
mov
push
in
test
xchg
aaa
cmp
mov
push
les
in
and
xor
iret
mov
movs
xchg
fidivr
cmp
bound
lods
lods
cmp
call
or
mov
inc
fidiv
dec
cmps
in
add
pushf
iret
loop
les
jne
inc
inc
in
jmp
adc
xor
jns
dec
rol
imul
fwait
jns
xchg
inc
add
pop
test
je
in
mov
cmp
jne
xchg
ss
aam
shl
jno
cmp
cmp
or
xchg
shr
repz
popf
in
xlat
xchg
fwait
hlt
push
mov
mov
mov
lods
pop
inc
fdiv
in
inc
out
jns
cld
(bad)
shr
jmp
push
or
fcomp
inc
pop
xchg
inc
mov
add
and
lods
xchg
stos
jmp
stos
test
fimul
jb
pop
out
arpl
movs
test
cmc
sub
cmp
mov
pop
sub
iret
ins
scas
push
js
call
ret
jp
dec
mov
gs
cmps
sub
sub
nop
add
lahf
sub
jbe
ds
xchg
int3
jnp
or
push
cmp
out
loop
in
pop
fidivr
dec
aaa
mov
lahf
cmps
mov
jae
rcl
repz
xchg
pop
push
push
jns
pop
mov
mov
inc
inc
lahf
and
inc
adc
out
fisubr
mov
mov
cdq
jnp
icebp
clc
stos
scas
jno
in
retf
xor
xor
jo
jnp
jmp
fidivr
pop
push
cmp
cmps
(bad)
ds
jae
sub
pop
mov
push
adc
cs
out
and
and
ins
int3
dec
daa
movs
pop
lods
jb
bound
ret
nop
shl
push
and
imul
ja
mov
dec
sti
adc
ret
and
push
add
add
jne
push
pop
les
adc
cmp
jp
mov
mov
cs
mov
movs
movs
movs
retf
loop
fldenv
xchg
push
sar
inc
jbe
or
xchg
(bad)
in
retf
jle
mov
xor
int3
jnp
push
repnz
sub
mov
retf
lea
jne
mov
jmp
std
sub
jle
ins
sub
xchg
add
xchg
adc
(bad)
loop
in
(bad)
or
in
cmp
dec
pop
ja
outs
xchg
cmp
ret
out
mov
push
mov
ror
jbe
or
mov
cmps
cmps
jb
shl
repz
jb
cmps
imul
push
data16
pusha
sub
pushf
imul
ins
push
xchg
mov
jnp
xchg
and
aam
or
mov
stos
stos
push
loop
pop
aam
loopne
cmp
int
xchg
cdq
push
xchg
sti
into
mov
dec
vandpd
dec
cmp
pop
bnd
add
jbe
(bad)
adc
scas
cli
pop
mov
sub
fst
mov
div
jp
xor
pop
fnstcw
popf
fwait
outs
lahf
sub
hlt
icebp
sub
retf
dec
jno
popf
dec
dec
sbb
xchg
sub
add
adc
jns
dec
push
mov
pop
jno
fsub
retf
push
cmp
mov
jmp
call
xchg
jmp
jle
idiv
jecxz
inc
xchg
push
retf
dec
pop
popf
inc
out
jle
and
pushf
repz
jmp
adc
pop
cli
jmp
cmc
addr16
mov
mov
add
xchg
push
dec
into
cmps
loop
sub
in
cmps
pop
dec
pop
cdq
stos
mov
ret
movs
mov
hlt
fild
in
jle
push
cs
pop
loop
jp
jecxz
das
loope
mov
cmp
addr16
imul
ret
cmp
stos
xor
fistp
mov
cmp
cli
sub
lods
ret
gs
adc
outs
outs
sub
push
and
popa
xchg
gs
lock
xchg
mov
xchg
in
push
jecxz
jnp
(bad)
jmp
call
push
out
cmp
(bad)
or
pop
movs
adc
xchg
fimul
cmps
dec
in
int
sar
jae
push
sub
xchg
pop
xchg
cli
mov
hlt
sub
(bad)
cli
mov
das
(bad)
mov
(bad)
shl
cs
aad
jnp
(bad)
sub
add
rcl
dec
faddp
sar
cdq
movs
mov
test
or
ror
sub
hlt
nop
push
test
sub
mov
sti
push
and
das
outs
push
out
out
jae
test
cmps
adc
inc
clc
mov
xchg
std
cmp
shl
arpl
imul
into
adc
enter
fld
ror
inc
jle
cs
leave
aad
test
movs
lods
adc
test
push
(bad)
mov
aad
repnz
imul
outs
ds
add
iret
jnp
pop
punpckhbw
fsubr
sbb
in
in
imul
out
lock
lods
cmp
mov
loope
out
push
or
pop
nop
and
sub
pop
jo
int3
fimul
and
sub
stc
nop
mov
stc
mov
(bad)
stc
mov
gs
mov
aas
in
xor
outs
mov
dec
addr16
xor
outs
fisubr
sar
jno
and
fcmovne
(bad)
jno
and
xchg
loop
cli
nop
(bad)
push
xchg
test
(bad)
ds
cwde
mov
mov
icebp
je
retf
dec
data16
lods
call
add
mov
xchg
mov
movs
movs
aad
sbb
xlat
xor
call
inc
and
jmp
cmp
pushf
adc
je
outs
jae
pop
es
xchg
push
mov
mov
inc
push
movs
das
out
push
pop
jp
xchg
(bad)
cs
push
cmps
call
mov
stos
dec
push
movs
ins
pop
mov
xor
dec
adc
ins
stc
shr
inc
lods
mov
(bad)
repnz
xchg
mov
iret
add
pushf
pop
xchg
into
pop
outs
mov
fnstcw
ficomp
pop
jne
jle
jb
or
pop
sub
jo
mov
jle
out
jb
or
(bad)
or
leave
mov
xor
pop
jge
pop
pop
mov
inc
pop
sub
add
jns
outs
mov
push
push
mov
sub
inc
scas
in
mov
in
inc
call
clc
mov
mov
in
mov
and
test
jge
mov
inc
pop
dec
nop
les
(bad)
jmp
pop
xchg
std
out
pop
pushf
lahf
test
dec
ret
inc
jecxz
add
sbb
shl
add
inc
cwde
or
fisub
inc
jb
jl
pushf
jg
into
dec
ret
js
nop
pop
and
les
enter
rcl
(bad)
mov
mov
inc
and
sbb
mov
jmp
mov
cdq
pop
sahf
cmp
fcomi
mov
push
or
adc
adc
js
cmps
rcr
scas
pop
loope
mov
mov
mov
mov
inc
jp
data16
loope
mov
jb
adc
add
mov
inc
cwde
daa
jo
in
repz
adc
push
add
fdiv
sub
cmps
add
pop
imul
out
imul
(bad)
jp
add
mov
sbb
xor
mov
dec
ins
popa
cmps
jae
mov
inc
adc
sbb
mov
inc
adc
jnp
add
outs
push
dec
xor
ja
dec
stos
ja
or
sub
inc
jbe
jbe
jno
dec
pop
in
sub
cmp
jp
test
nop
jmp
cmps
movs
dec
adc
inc
mov
cmps
jo
jnp
pop
sbb
jo
cmp
std
bound
popf
cmp
add
push
dec
and
shl
mov
les
cli
in
sbb
push
in
push
fs
test
jae
mov
fldcw
addr16
ja
test
mov
je
xchg
repz
(bad)
push
cmp
xor
fist
cwde
repnz
adc
xchg
sub
mov
pop
adc
loope
xchg
fwait
ror
out
lock
idiv
push
fild
imul
mov
rep
neg
inc
loope
stos
outs
aaa
mov
pop
out
jle
inc
adc
(bad)
mov
push
push
mov
push
sbb
adc
adc
adc
jno
popf
rcl
cld
setge
bnd
mov
fld
xor
sbb
push
outs
push
xor
mov
imul
int3
add
or
mov
out
or
pop
sub
jmp
jae
adc
and
mov
ds
jbe
cmp
dec
(bad)
stos
push
sub
ds
ds
xchg
dec
fwait
pop
fs
sub
jae
pop
xchg
jo
and
push
fwait
inc
mov
pop
(bad)
js
jne
rcl
xchg
xchg
pop
sub
sub
cmp
cmps
sub
inc
movs
idiv
pop
outs
sbb
mov
inc
fidivr
cmps
test
cmc
mov
push
sbb
adc
(bad)
lea
dec
mov
retf
push
jo
cmp
pop
dec
and
scas
stc
mov
gs
popf
push
dec
cli
mov
sub
mov
test
jo
aam
pop
pop
mov
std
adc
mov
xchg
lods
and
mov
lea
lds
pop
call
adc
xchg
aam
lods
inc
jb
loopne
mov
rcl
icebp
pop
sbb
clc
(bad)
sti
adc
test
xchg
pop
sbb
(bad)
xor
test
lods
sbb
pop
mov
jle
outs
test
les
dec
mov
ja
add
dec
lock
pusha
push
into
pop
enter
mov
pop
rcl
lods
xchg
test
mov
xlat
or
cmp
fstp
into
xor
or
(bad)
mov
jg
jecxz
cdq
jle
(bad)
stc
int
inc
mov
xchg
stos
pop
xor
mov
int
sub
scas
call
inc
mov
test
pop
jle
repnz
add
jp
lahf
leave
jmp
(bad)
imul
out
cmp
icebp
xor
pop
pop
xchg
fsubr
popa
std
sub
mov
mov
(bad)
adc
leave
out
adc
sbb
xor
in
jp
ja
mov
repz
push
nop
fistp
lea
test
out
and
sar
xchg
push
jne
inc
stos
fimul
in
push
and
fdivr
test
int3
mov
cld
mov
sbb
sbb
(bad)
sub
in
mov
mov
adc
ins
cld
pop
inc
out
addr16
xor
add
call
lods
jne
daa
aad
outs
popa
popf
inc
pushf
xchg
cmps
ds
movs
aaa
cs
push
pop
ja
inc
dec
push
jo
test
movs
sbb
xor
hlt
lods
sbb
scas
push
cmp
out
stc
pop
cs
fisub
add
xlat
lods
dec
lods
push
fwait
stos
mov
jbe
inc
stc
pop
(bad)
dec
in
in
mov
cmc
mov
mov
loope
dec
shr
or
sub
fisub
xchg
mov
pop
inc
or
in
lahf
loop
dec
dec
adc
es
jge
scas
fs
test
jno
int
mov
scas
xor
push
pop
gs
div
push
mov
std
mov
xchg
ret
mov
test
dec
popa
aad
sub
idiv
in
ficom
mov
mov
test
test
dec
rcl
dec
pop
aad
xlat
ret
jae
fnstenv
pop
or
cmps
cmp
loopne
(bad)
out
rol
sti
jns
mov
inc
ror
adc
inc
cmp
(bad)
xchg
cmp
popf
xchg
add
jg
call
add
icebp
jg
mov
int3
rcr
mov
inc
rcr
ins
out
cmp
sbb
push
fisubr
rcl
mov
cmps
or
(bad)
jl
push
punpckhbw
jbe
adc
sub
movs
sub
jnp
mov
lods
retf
icebp
mov
adc
pop
aam
stos
and
mov
cmc
pop
push
hlt
ror
xchg
fdiv
inc
aad
outs
dec
push
shl
cmp
ins
sub
cdq
jne
adc
call
in
sub
fs
lahf
pusha
mov
mov
and
push
fs
fstp
sub
and
cmp
inc
push
popf
movs
test
outs
(bad)
ror
xor
adc
mov
cmps
xor
pop
retf
sub
mov
fcmovnb
and
test
movs
fs
add
ror
call
mov
mov
pop
imul
int
mov
push
and
adc
fs
in
mov
jbe
(bad)
fnstsw
cmp
add
xchg
sbb
stc
ja
ficomp
or
push
or
je
xchg
shr
cli
es
pop
outs
gs
mov
cld
jae
jb
ds
inc
pop
ficom
jae
push
retf
sbb
inc
(bad)
imul
stc
jo
ror
das
push
and
mov
mov
movs
mov
push
sbb
shl
retf
in
xor
adc
arpl
mov
clc
ret
sbb
sub
test
adc
mov
adc
push
jp
jmp
add
daa
mov
ja
in
test
mov
test
js
addr16
sub
mov
jle
stos
and
outs
outs
sub
jmp
pop
inc
push
xchg
test
sbb
jae
lock
xchg
mov
sbb
sbb
rcr
popf
imul
adc
push
dec
pusha
push
lock
iret
vmread
test
jl
icebp
fs
imul
repz
cli
movs
and
pop
enter
imul
sti
sar
pop
mov
lock
cs
mov
retf
mov
push
aad
cld
fwait
mov
mov
stos
mov
mov
out
call
retf
stos
xchg
push
dec
iret
int3
cmc
sbb
pop
mov
mov
dec
pop
mov
dec
test
jb
pop
xchg
gs
adc
pop
xchg
mov
and
cli
mov
lods
mov
in
cmp
push
cmps
push
(bad)
or
in
lods
pop
daa
call
je
js
sub
inc
adc
mov
jns
cmp
imul
push
jne
push
dec
jae
imul
adc
addr16
or
dec
inc
sti
leave
and
sub
je
dec
mov
xor
and
mov
jg
sub
cmps
popf
or
fcomp
mov
loop
pop
lea
lea
sbb
cmp
into
cmps
pop
pop
dec
sub
daa
test
jmp
psubsb
in
push
or
in
jp
push
xchg
inc
cmps
and
pop
clc
aas
clc
adc
addr16
jb
inc
dec
fwait
dec
mov
popa
xlat
mov
add
sub
jp
inc
addr16
xlat
mov
xchg
aad
scas
add
imul
pop
iret
xchg
xchg
pop
call
pop
inc
(bad)
xchg
sub
pop
cmp
sbb
mov
ror
sub
push
icebp
in
lahf
(bad)
dec
out
push
shl
mov
(bad)
jecxz
mov
push
pop
(bad)
jbe
imul
mov
test
(bad)
pop
pop
pop
cs
fstp
aaa
rcl
push
sub
jmp
mov
xor
(bad)
sbb
test
movs
jns
scas
icebp
retf
iret
repz
add
shl
xor
iret
cdq
iret
outs
sbb
cmp
retf
add
dec
cmps
sub
push
push
test
fld
rcr
ja
or
pop
ss
cmp
jne
pop
mov
popa
pop
push
paddb
mov
hlt
not
movs
data16
bound
ret
mov
add
xchg
jmp
pop
jno
pop
push
jae
jns
mov
mov
jmp
jecxz
jp
addr16
pop
cmp
cmc
cmps
scas
mov
dec
cmps
pop
push
cmc
push
scas
and
add
inc
stos
push
sti
imul
or
jnp
(bad)
wrmsr
in
(bad)
outs
pop
add
inc
jno
xor
jle
idiv
iret
jg
js
mov
ret
or
test
mov
push
mov
(bad)
fcomi
jnp
xchg
loope
les
les
fcom
inc
cmp
fst
push
lahf
sub
adc
jg
arpl
mov
jae
call
test
xchg
shl
iret
fldz
ins
sti
out
mov
sub
je
ja
ins
jbe
sbb
popf
sbb
loope
add
inc
mov
imul
jge
retf
inc
out
xchg
xor
(bad)
or
lds
and
or
ret
sbb
jmp
push
mov
mov
das
xchg
test
add
adc
stos
or
push
lods
mov
pushf
scas
cmp
xor
cmc
pop
and
repnz
sbb
dec
dec
inc
ins
(bad)
and
cmp
push
cmps
cmps
pop
cdq
xchg
push
cmp
dec
icebp
pop
inc
out
add
xchg
test
mov
je
jp
or
and
dec
pop
sti
das
into
(bad)
sub
push
dec
scas
xchg
xchg
sar
adc
mov
sbb
jge
out
inc
mov
rcl
jno
cmps
call
and
sub
(bad)
sub
jle
fdiv
pop
or
push
mov
xchg
jne
jmp
inc
imul
inc
pinsrw
mov
movs
push
mov
mov
lock
sbb
rol
out
push
ror
loope
rep
mov
imul
enter
movs
out
jb
out
mov
mov
and
neg
mov
pushf
jo
sub
and
jo
adc
mov
out
jge
pop
imul
sbb
and
(bad)
scas
push
inc
ss
das
popf
xor
dec
imul
jbe
out
enter
mov
daa
push
pop
lods
sub
jp
int
dec
js
imul
das
cdq
dec
mov
inc
sub
lds
scas
aas
sub
jb
mov
inc
fwait
(bad)
pop
dec
mov
pop
icebp
mov
pop
rcr
sbb
xor
stos
stos
xor
stos
sbb
outs
push
mov
xor
fwait
aas
pop
fnclex
lahf
dec
mov
stc
jg
jne
dec
lods
cli
sub
and
mov
and
in
jae
mov
movaps
sbb
mov
push
dec
aam
dec
push
pop
mov
ret
shl
fsubr
out
jae
push
pop
pop
jmp
test
jecxz
dec
ja
fwait
rol
pop
push
pop
bound
test
push
fild
add
aaa
into
jle
lahf
mov
(bad)
mov
movs
cli
xor
dec
jg
outs
inc
push
fs
mov
mov
hlt
stos
pop
outs
cld
fdivr
arpl
adc
adc
stos
jb
retf
xchg
xchg
and
test
(bad)
test
xchg
sbb
sub
dec
(bad)
movs
mov
mov
add
mov
scas
sub
mov
push
push
jmp
aas
das
pop
ror
popf
cdq
aaa
cmp
div
gs
call
dec
aaa
and
es
or
pusha
jae
adc
cmc
(bad)
jnp
cld
push
arpl
mov
test
shl
in
out
adc
mov
or
(bad)
mov
(bad)
sar
xor
sbb
push
lods
mov
mov
leave
pop
mov
xor
jmp
stc
mov
cld
inc
(bad)
lock
das
leave
push
jmp
push
adc
in
jle
sar
aad
call
pop
test
stos
cs
in
push
push
cdq
pop
mov
pop
call
xchg
adc
mov
icebp
fbld
dec
jge
inc
push
mov
jmp
mov
jae
cmp
stos
shl
fstp
jge
lods
das
std
dec
xchg
mov
or
and
jae
xlat
bound
ror
mov
push
(bad)
mov
shl
xchg
adc
inc
add
mov
mov
dec
xor
xlat
push
sub
jmp
out
or
pop
pop
imul
dec
cmp
cmp
pop
stc
fldcw
push
mov
jecxz
loope
cld
sub
sub
jge
mov
je
xor
cwde
sahf
push
movs
aas
and
stc
ret
sub
cmps
dec
cmp
or
sbb
cmp
test
xchg
das
daa
push
call
sar
xor
es
push
xor
xchg
fucom
cmp
sub
rcr
push
inc
mov
je
retf
ficom
out
jmp
mov
dec
ins
add
(bad)
inc
out
lods
mov
mov
call
lahf
inc
out
stos
dec
ss
mov
dec
shl
dec
dec
test
or
(bad)
das
je
fbstp
aam
sbb
pop
push
pop
pop
push
loop
sbb
hlt
add
pop
xchg
loope
shr
in
aad
jns
ficomp
jmp
inc
pop
mov
pop
mov
jb
xchg
push
dec
jns
out
mov
sbb
(bad)
clc
fisub
mov
xchg
js
mov
mov
ins
lahf
sub
dec
inc
test
mov
call
jnp
test
xor
out
or
sub
mov
mov
sbb
push
pushf
mov
xchg
repz
mov
and
ror
xor
xchg
sbb
mov
inc
push
xchg
push
shr
mov
daa
daa
mov
mov
enter
das
mov
sbb
jmp
(bad)
jmp
shl
into
aad
dec
xchg
imul
test
dec
es
aam
movs
and
es
add
mov
pop
jae
adc
cli
out
shl
sub
cmps
movs
es
push
push
pushf
xchg
jnp
retf
repnz
xor
std
or
sbb
inc
xor
and
mov
dec
sub
inc
xor
lock
ss
shl
out
cli
xor
ins
jmp
and
jl
push
mov
lds
xchg
adc
dec
push
adc
inc
imul
pop
push
push
mov
jp
mov
push
outs
mov
(bad)
lock
jmp
in
and
sahf
movs
shr
lea
cmp
icebp
scas
retf
ficom
mov
cmc
cmps
cmp
xchg
test
and
outs
test
inc
xchg
cmp
sub
enter
dec
es
dec
push
test
(bad)
inc
sub
cli
sub
jge
sbb
cmc
and
imul
push
push
push
(bad)
int
js
imul
push
aam
std
in
push
test
jle
and
xchg
xchg
sahf
or
lods
(bad)
cli
ror
xchg
push
aas
cdq
sti
retf
inc
movs
arpl
aam
inc
sub
(bad)
mov
mov
sub
or
repnz
outs
pop
xchg
call
jbe
mov
jge
inc
mov
in
jmp
imul
popa
dec
imul
jb
movs
dec
xchg
retf
dec
dec
mov
popa
test
xchg
sub
sub
cmp
cmp
fwait
test
outs
sar
mov
clc
sub
or
lods
xchg
fldcw
xlat
push
stc
in
push
int
in
mov
xchg
sbb
xchg
inc
test
loope
pushf
adc
dec
sbb
push
test
push
cmp
rol
jns
in
pop
mov
mul
mov
icebp
scas
clc
lea
mov
inc
in
mov
out
mov
mov
push
mov
shl
fadd
ins
and
adc
shl
or
sub
pop
sbb
push
dec
(bad)
rcl
scas
aam
jle
popaw
ds
push
out
cmp
jns
nop
cmp
mov
mov
ficomp
sbb
or
fs
xchg
fidiv
jle
sahf
mov
popf
or
xchg
std
aaa
(bad)
add
into
in
cld
inc
leave
rol
fnsave
(bad)
pop
push
inc
cmc
cmp
movs
aad
push
cmp
iret
sub
adc
into
mov
lods
call
sbb
je
ss
adc
js
cld
stc
pop
(bad)
fcomp
out
adc
pop
cmp
sbb
mov
dec
dec
(bad)
inc
and
mov
add
xchg
cdq
jbe
add
mov
jb
in
xchg
int
(bad)
jbe
sbb
jbe
dec
sub
test
push
sbb
jge
dec
scas
sti
push
fist
(bad)
pop
fwait
jp
ins
and
adc
das
cmp
jne
cmp
nop
sbb
mov
jae
rcl
sahf
fwait
sub
lods
popf
fwait
imul
in
mov
sbb
movs
sbb
fwait
mov
jge
fidivr
ss
xlat
inc
cmps
rol
movs
aam
sub
cmp
cmp
adc
popa
sti
dec
int3
(bad)
fst
inc
inc
jecxz
inc
adc
dec
inc
pop
int
and
call
pop
cli
xchg
push
xchg
fnstenv
test
pop
cwde
sub
cmp
retw
sbb
arpl
mov
fisttp
push
jecxz
adc
data16
out
lods
movs
in
in
cmps
icebp
mov
mov
ja
mov
jge
inc
mov
fsubr
test
call
xchg
outs
scas
ficom
fsub
or
xor
call
test
dec
nop
mov
cmp
cmp
jns
mov
imul
mov
dec
adc
pop
mov
xchg
mov
out
cmps
sub
test
lods
jns
push
sub
cmp
cmps
dec
pushf
mov
inc
pop
bnd
mov
mov
sbb
sbb
push
cmc
leave
fcmovu
push
xchg
sbb
int3
mov
dec
xor
mov
arpl
sub
jl
popf
jecxz
lahf
jle
mov
push
push
adc
and
fs
lods
jg
fucomi
push
jmp
addr16
(bad)
jmp
aam
fdivrp
push
pop
xchg
mov
je
lock
and
jae
push
mov
aaa
pop
pushf
xchg
mov
aad
mov
cmps
pop
in
mov
xchg
sbb
sub
cmp
popa
inc
mov
xchg
out
dec
int
movs
hlt
(bad)
repnz
pushf
dec
(bad)
and
into
adc
xchg
imul
mov
out
imul
movs
repnz
sbb
retf
ins
xor
mov
ins
jmp
fist
jmp
inc
outs
xor
dec
imul
mov
sbb
jmp
cmps
lahf
dec
dec
pop
mov
loop
sbb
cmps
scas
je
mov
or
stos
shl
cdq
lds
dec
test
cmp
or
dec
cmp
movs
jmp
lea
push
lods
es
imul
imul
ja
nop
jecxz
push
pop
jns
xchg
xor
not
push
rcl
jecxz
jno
fisubr
outs
or
xchg
xchg
sbb
movs
jecxz
pop
ins
scas
mul
jnp
mov
loope
push
dec
shr
mov
aaa
aad
cmp
add
mov
cmp
jae
fs
imul
sub
pop
or
fcomp
in
and
lahf
dec
not
(bad)
jne
jge
jnp
mov
lock
fwait
loopne
inc
mov
aam
in
mov
xor
out
loope
jecxz
sbb
sub
fs
sub
in
mov
loope
adc
test
ret
movs
jb
repnz
cwde
jmp
xlat
xor
loope
sbb
test
sub
fisubr
sub
vcvtps2dq
mov
push
das
add
push
stos
pop
inc
test
xor
push
ja
(bad)
mov
inc
mov
mov
inc
fidivr
push
fstp
xor
push
fiadd
add
push
movs
xchg
int3
dec
and
and
inc
sar
daa
fwait
iret
aaa
in
cmc
sbb
test
push
mov
mov
inc
loope
ds
pushf
mov
or
test
sar
cmc
jle
xor
lahf
pop
pop
sub
mov
movs
int3
mov
dec
cld
lods
leave
ds
mov
sub
bnd
test
pop
jmp
xchg
in
fdiv
gs
outs
cmp
sti
call
xor
xchg
fisubr
movs
sub
call
out
jno
imul
xchg
pop
xchg
repnz
sub
cmps
stos
hlt
cdq
xchg
jns
mul
adc
and
out
outs
shl
cdq
ds
xchg
xchg
test
dec
rol
in
pop
sahf
xchg
xor
rcl
push
movs
sbb
mov
in
jae
stos
fst
push
mov
div
(bad)
into
int3
and
repnz
cmp
(bad)
std
mov
or
mov
jnp
add
retf
mov
je
and
jne
jge
pop
in
ror
enter
xchg
ret
ja
and
and
ret
jp
pop
xchg
xor
movs
lods
fadd
pop
int
pop
out
je
stos
call
cmc
rep
(bad)
call
add
mov
xchg
or
jns
inc
sbb
and
or
mov
popf
ins
or
lea
xor
jge
pop
mov
push
adc
movs
lea
arpl
out
aad
and
sti
push
aaa
mov
ss
mov
inc
shl
sub
cs
jae
call
movs
pop
and
shld
push
push
aam
xlat
mov
pop
stos
xchg
scas
movs
fnstsw
arpl
sahf
leave
jmp
pop
pop
std
pop
cwde
lods
fcom
push
dec
movs
outs
push
outs
sub
cs
cs
lods
sub
add
in
sub
aam
sbb
add
clc
or
push
rol
addr16
inc
pop
movs
mov
leave
cmps
in
addr16
mov
mov
in
mov
outs
push
and
ja
xchg
mov
and
and
(bad)
pop
loope
inc
jmp
(bad)
jmp
mov
lea
mov
outs
dec
jnp
xor
bound
repnz
mov
and
dec
add
mov
cmps
es
lods
scas
pop
mov
fidiv
mov
mov
push
leave
jb
mov
jne
xor
inc
fild
out
add
mov
sbb
add
inc
jmp
shl
sub
dec
push
mov
xchg
inc
push
inc
pusha
movs
lds
jbe
mov
or
aad
mov
fbld
mov
movs
fsubr
or
and
xchg
in
in
push
push
pushf
loopne
and
cdq
and
mov
and
xor
(bad)
lock
je
imul
cdq
push
cmp
jg
daa
outs
dec
ss
mov
sub
cmc
adc
push
pop
and
cwde
out
(bad)
out
gs
mov
jmp
jnp
jg
mov
xchg
jb
lahf
xor
mov
int
fs
cmc
lahf
movs
call
mov
jge
call
jb
xchg
mov
xchg
sub
mov
or
adc
neg
pop
jno
push
arpl
sub
pop
pop
(bad)
ss
and
jbe
cmps
and
push
mov
sub
lds
lods
mov
scas
shl
pop
lahf
mov
test
sti
enter
pop
arpl
xor
push
mov
mov
test
xchg
sbb
outs
(bad)
cwde
mov
movs
push
xchg
sbb
mov
dec
dec
cmps
mov
mov
sbb
and
add
sbb
pushf
push
xchg
outs
cli
jp
(bad)
movs
shl
mov
xchg
mov
fwait
in
inc
pop
inc
shr
mov
mov
test
lock
hlt
xchg
dec
jmp
adc
xchg
mov
jne
cli
gs
jbe
xchg
outs
push
cmp
mov
sbb
pushf
jmp
push
sub
mov
adc
xchg
aam
in
rcr
or
hlt
mov
pop
enter
dec
push
sub
inc
sbb
stos
inc
ja
aaa
jbe
jle
push
mov
fcom
daa
fdiv
cmps
sbb
bswap
aaa
xor
add
(bad)
add
push
mov
sub
inc
movs
repz
mov
test
inc
sbb
imul
jecxz
leave
das
xor
pop
xchg
ss
pop
cmp
pop
xchg
hlt
popf
(bad)
aas
gs
jb
pushf
xchg
pop
cwde
adc
push
repnz
test
cli
comiss
inc
js
pop
ins
mov
sub
das
pop
jbe
xchg
mov
(bad)
or
test
addr16
loop
in
dec
dec
loope
ficomp
mov
retf
stos
push
test
iret
push
push
mov
jmp
cmp
mov
pop
sub
neg
(bad)
cmps
pop
cwde
dec
or
int3
cmp
xor
xor
into
xor
push
adc
shl
pop
int
into
leave
and
fstp
sahf
outs
sbb
repnz
inc
test
(bad)
imul
shl
mov
stc
pextrw
mov
mov
out
cmps
or
add
mov
fisubr
and
(bad)
add
test
fisubr
cld
pop
aas
repnz
mov
xor
adc
jge
sub
fwait
imul
xchg
retf
je
jne
lods
pop
arpl
mov
jne
adc
push
add
mov
mov
sbb
gs
dec
sbb
dec
jb
ja
mov
cmps
test
mov
imul
xor
mov
push
pop
and
push
push
mov
outs
xchg
mov
jno
mov
inc
je
mov
xchg
inc
imul
push
mov
cmp
pop
or
inc
lds
leave
cmp
cmp
xor
xor
ds
out
jbe
jp
call
mov
inc
addr16
icebp
cdq
cmp
test
(bad)
icebp
xchg
push
std
outs
mov
mov
mov
jne
pop
test
or
push
stc
sub
out
sahf
adc
or
xchg
adc
pop
push
sub
fwait
ins
pusha
(bad)
scas
leave
lods
sahf
mov
dec
pop
jp
mov
mov
icebp
sar
pop
mov
and
sbb
and
mov
cmp
dec
push
mov
fild
mov
cmp
and
imul
lea
cmps
and
jmp
sub
arpl
data16
retf
cdq
retf
mov
push
cmp
xchg
sbb
sub
add
xchg
xchg
push
in
in
fxch
(bad)
mov
clc
xchg
mov
lock
pop
cmp
mov
mov
addr16
mov
in
push
movs
imul
hlt
(bad)
mov
shl
shl
pop
outs
das
sub
jne
xchg
int3
jecxz
aas
jns
cmp
add
aas
in
xchg
sbb
sub
mov
xor
mov
sahf
pop
clc
xor
out
fldcw
ret
movs
and
call
repnz
xor
outs
int
ret
xchg
cmp
ficomp
ror
stc
mov
xor
xlat
fldl2e
aad
mov
mov
fld
outs
or
dec
mov
jo
push
jae
cmp
push
push
aam
ss
push
fisubr
dec
data16
mov
mov
movs
mov
xor
cmp
repz
cli
push
jmp
push
pushf
popf
mov
push
ret
jbe
icebp
std
mov
aam
pushf
stos
bound
jno
push
out
mov
xchg
xchg
out
leave
pop
xchg
mov
js
fwait
outs
out
adc
mov
sbb
mov
ror
push
cwde
sbb
bound
lock
lods
jns
call
mov
das
inc
pop
pop
test
std
addr16
fsub
(bad)
dec
scas
ins
in
push
push
sbb
dec
jmp
das
push
jns
outs
sub
ret
imul
jae
fidivr
cmp
in
ret
or
xchg
test
bound
sahf
push
adc
daa
inc
push
out
inc
mov
dec
fistp
pop
(bad)
imul
push
scas
test
inc
jmp
outs
cs
in
xchg
outs
lods
in
xor
movs
mov
int3
push
xchg
dec
sar
(bad)
adc
retf
inc
fwait
inc
dec
aad
sub
out
lods
sub
jns
inc
mov
inc
sbb
mov
imul
push
sbb
push
pop
fimul
jne
lea
loope
jns
scas
ss
jb
rol
dec
pop
aam
in
dec
out
sub
call
outs
pop
es
mov
cmps
mov
imul
stos
or
mov
ret
xor
inc
shr
jle
pop
mov
inc
or
clc
(bad)
inc
lds
mov
stc
and
popa
leave
xor
rep
out
pop
mov
dec
ret
adc
pop
stos
pop
iret
das
and
jo
jmp
repnz
std
scas
pop
xchg
repz
bnd
inc
mov
add
xchg
adc
xchg
xor
dec
or
in
inc
aad
pop
stos
inc
cli
gs
sub
lock
cmp
jp
xchg
mov
jp
out
(bad)
sub
jbe
xchg
jp
and
lahf
xchg
push
mov
lahf
dec
jmp
xchg
cmp
leave
push
xchg
in
push
fcom
pop
xchg
popf
mov
test
leave
bound
push
lods
add
pop
sub
jae
in
test
mov
dec
inc
xchg
dec
in
push
ds
in
(bad)
cdq
jl
fst
mov
arpl
jb
push
imul
mov
jge
mov
cmp
sub
push
arpl
test
cmp
jge
ds
(bad)
ds
(bad)
popf
pushf
movs
adc
movs
jnp
mov
xchg
mov
cmps
mov
xlat
dec
scas
and
push
ss
dec
jbe
fld
aas
cmp
aas
inc
mov
int3
fidiv
ja
ror
mov
jo
pushf
dec
dec
adc
fisttp
xchg
dec
repnz
les
fwait
pop
ins
jne
adc
inc
and
fist
fild
lds
jmp
sbb
ja
mov
mov
pusha
ror
ret
ror
mov
jnp
fdiv
xor
pop
xchg
inc
gs
add
inc
push
xchg
inc
mov
mov
push
sahf
dec
and
not
inc
sbb
cwde
imul
imul
loope
push
xchg
adc
sahf
add
fninit
push
mov
jmp
dec
xor
push
dec
xchg
adc
push
push
mov
dec
nop
jns
jne
or
in
test
mov
jo
dec
cdq
rcl
dec
es
and
data16
jno
loop
or
mov
out
fimul
mov
mov
fisub
stos
push
push
mov
stos
neg
adc
or
cdq
cmp
test
nop
out
xor
mov
mov
(bad)
push
xchg
and
push
or
jg
lods
test
push
daa
jmp
into
out
inc
pop
sbb
mov
jg
pop
in
xchg
mov
clc
enter
ds
repnz
outs
inc
jg
mov
cmp
jmp
iret
(bad)
fdivr
ins
das
(bad)
xor
(bad)
lods
test
retf
(bad)
inc
ror
add
cdq
test
xchg
mov
pop
jp
ja
ins
fwait
shl
popf
push
call
and
dec
and
ds
adc
add
push
cmps
cmp
jmp
je
cmps
fcomip
push
cs
pop
pop
ds
mov
pop
mov
add
adc
ja
mov
hlt
mov
sbb
jo
cmps
adc
xlat
or
test
mov
jns
push
cmc
dec
ins
jecxz
xchg
xchg
gs
mov
and
sbb
loopne
push
data16
out
mov
(bad)
push
sti
mov
imul
repnz
or
jns
and
dec
stc
bound
loopne
shl
pop
and
or
sub
shl
adc
test
outs
test
pushf
push
adc
movs
inc
mov
(bad)
adc
test
stos
push
(bad)
jno
mov
in
pop
cmp
xlat
jae
neg
dec
aaa
iret
mov
sub
cmp
retf
dec
xchg
(bad)
cmp
pop
xor
mov
adc
sub
setae
les
push
add
jns
cli
cld
bound
call
adc
out
mov
sbb
enter
pop
cmp
jno
outs
icebp
mov
and
add
and
and
pop
push
mov
out
loopne
lahf
loop
ins
nop
inc
xchg
jne
aam
imul
xchg
pop
ss
fcomi
repz
push
test
das
inc
mov
sahf
fist
arpl
retf
aad
fsub
shl
in
call
and
dec
and
imul
cmp
retf
jae
sahf
cs
scas
push
movs
and
imul
imul
fwait
sbb
mov
inc
mov
sub
mov
stos
fsub
enter
cdq
outs
jbe
push
imul
jb
gs
mov
or
and
mov
icebp
stos
mov
ins
cmps
lods
xlat
ja
call
jl
cmp
cmp
shr
mov
xchg
mov
int
mov
inc
push
hlt
cli
loopne
(bad)
loop
in
ret
dec
popf
stos
aam
sahf
jle
sub
js
xor
mov
xchg
push
mov
push
pop
xlat
mov
inc
xchg
xchg
sbb
test
in
mov
retf
jno
ins
inc
call
pop
push
dec
pop
sbb
fwait
lock
adc
out
push
rol
hlt
jmp
and
push
push
xchg
adc
or
xchg
sub
(bad)
movs
jle
inc
sub
addr16
push
test
sahf
add
neg
xchg
out
ins
sbb
hlt
cmp
xchg
pushf
cmps
rcl
pop
dec
movs
cmc
loopne
push
dec
xchg
gs
fisubr
or
mov
test
cmp
sbb
dec
jmp
xlat
pop
loopne
mov
das
scas
inc
adc
adc
xchg
dec
cmps
shl
jl
xlat
fimul
ret
imul
pop
xor
sti
loop
pop
push
mov
xchg
pushf
jne
ins
jmp
mov
aam
bnd
mov
mov
push
mov
pop
lahf
ss
push
fldlg2
mov
in
cmc
cmp
pop
push
aam
mov
pop
daa
imul
jmp
inc
retf
and
cmp
lods
stos
xor
pop
stc
movs
sahf
dec
test
je
hlt
(bad)
mov
sub
call
in
lock
cli
repz
(bad)
pop
test
push
dec
xchg
jnp
retf
les
lods
retf
push
cmps
nop
xchg
mov
ror
sub
xchg
adc
fwait
dec
cmp
push
imul
push
aad
sbb
scas
daa
and
and
lahf
sbb
pop
sbb
mov
push
cmp
lds
pushf
pop
inc
push
jl
xchg
push
popf
(bad)
pop
and
fistp
xchg
dec
and
jmp
sbb
dec
cmp
sub
jbe
mov
dec
iret
jmp
or
scas
jno
sbb
adc
or
in
dec
sti
mov
and
leave
dec
mov
cmp
dec
leave
sbb
dec
xor
into
sbb
adc
jp
repnz
xchg
fidiv
iret
push
stc
out
jmp
and
sbb
and
mov
add
pop
and
leave
pop
xchg
lahf
xchg
leave
adc
retf
and
es
pop
rol
jl
add
add
daa
mov
retf
adc
add
jbe
or
in
cmp
or
dec
into
and
aam
pop
fcmovb
fcom
pop
jg
out
jge
xchg
adc
push
cmp
sub
cs
xchg
xor
cmp
inc
mov
(bad)
popf
repz
cdq
nop
pop
mov
jmp
jae
cmps
(bad)
fsub
movd
int3
add
and
iret
jle
and
adc
repz
dec
cmp
or
add
out
je
cwde
sbb
xchg
pusha
out
dec
lea
inc
xchg
inc
cmp
mov
adc
adc
movs
xchg
inc
scas
add
cmp
mov
push
mov
outs
jae
repz
xor
cdq
xchg
adc
ror
sbb
pushf
cld
int3
inc
xchg
mov
(bad)
mov
xchg
jo
in
pop
xchg
test
push
push
scas
sub
popf
xchg
movs
jp
fdivr
dec
cmc
sbb
mov
mov
dec
dec
idiv
mov
pop
mov
pusha
sbb
retf
push
mov
sub
int
mov
push
and
pop
push
movs
shl
mov
out
xchg
inc
hlt
and
push
jae
gs
and
lahf
movs
out
cld
in
(bad)
in
in
popf
jbe
mov
and
push
fidivr
sub
jg
clc
dec
mov
cmps
test
push
repz
cmp
or
scas
outs
dec
leave
fnstsw
cdq
jmp
push
mov
pop
clc
movs
mov
int
bound
arpl
mov
test
push
(bad)
stos
adc
pop
js
cwde
cdq
pop
ret
enter
jbe
sub
add
outs
sar
mov
cmp
movs
aaa
ret
lahf
data16
gs
vpsubsw
pop
mov
jnp
jns
pop
push
in
push
std
aas
test
or
enter
adc
xor
cdq
daa
adc
cdq
push
(bad)
stc
push
dec
cmp
xor
lods
add
mov
jmp
jle
pop
ins
not
sahf
ret
xor
addr16
jno
lock
push
sti
jb
sub
dec
pop
mov
(bad)
ja
jne
mov
(bad)
push
es
test
pushf
xchg
and
repz
out
jg
mov
mov
popa
test
add
mov
repnz
(bad)
icebp
stos
jp
leave
je
pop
ss
xchg
mov
or
imul
jae
mov
push
jbe
(bad)
dec
fcmovnb
push
xchg
or
ins
icebp
arpl
xlat
scas
inc
cmovne
stos
and
out
and
cmp
cmp
imul
push
push
or
lea
dec
test
xor
in
inc
cmps
retf
jb
ds
sbb
xor
sub
ficom
cmp
mov
lods
mov
es
movs
xchg
jno
(bad)
in
xchg
push
aad
jmp
sub
pop
pslld
gs
in
int3
push
push
lods
adc
std
mov
cmp
lods
nop
dec
(bad)
and
sbb
cmc
popa
call
inc
push
mov
push
out
mov
test
mov
retf
out
jmp
cmp
jmp
outs
dec
inc
scas
sbb
xchg
jp
cmc
mov
xchg
ss
dec
test
in
and
jge
or
jge
pop
mov
in
push
dec
in
test
sub
loop
aam
xor
mov
dec
cmps
fnsave
stos
ins
mov
xor
call
mov
ret
in
or
addr16
(bad)
lods
mov
in
pushf
lods
pop
(bad)
movs
pop
(bad)
ficomp
jp
mov
mov
jge
xchg
mov
ret
loop
or
ret
dec
popf
cdq
mov
(bad)
lods
jo
rcl
das
lods
xor
daa
bound
addr16
aas
jecxz
cmp
or
sub
inc
outs
inc
mov
lock
int3
mov
icebp
test
mov
adc
mov
addr16
sub
mov
fwait
push
in
dec
ficomp
add
push
add
sbb
pop
sbb
cmp
mov
ja
xchg
mov
clc
fsub
test
xchg
mov
mov
adc
ja
pop
vpsubsb
out
scas
mov
and
ins
cmp
test
movs
fnstcw
aad
sbb
sar
stos
xor
sub
push
push
jns
arpl
stos
into
cmp
lods
outs
stos
xchg
jle
pusha
cli
scas
cs
cmp
sti
adc
scas
test
rcr
push
adc
push
fnstcw
cld
cmps
mov
enter
cmps
mov
push
outs
mov
mov
enter
dec
sbb
push
xchg
pusha
lea
dec
or
jle
arpl
push
inc
mov
mov
fsubp
xchg
clc
inc
mov
and
mov
mov
xchg
push
retf
or
std
xchg
fdivr
and
addr16
xor
pushw
sbb
jnp
mov
repnz
fild
cmp
cs
retf
icebp
sub
sar
pop
xchg
push
inc
shl
cmp
adc
ds
mov
daa
mov
loop
xchg
fstp
imul
in
push
rdtsc
ret
hlt
pop
stos
jb
xor
test
call
ret
out
fidiv
sub
mov
rdpmc
cs
xor
pop
(bad)
retf
mov
imul
inc
aas
jp
inc
arpl
jno
out
jb
popa
out
ja
ins
jnp
jmp
jae
sbb
(bad)
nop
xchg
adc
xor
lds
cmps
add
in
int
inc
or
inc
mov
push
xor
jo
fld
test
int3
xor
mov
or
stc
mov
stc
outs
or
dec
mov
retf
cli
addr16
jecxz
movs
shl
jmp
mov
les
aas
or
and
fcom
out
dec
add
and
jl
sahf
in
mov
mov
cmps
lods
dec
movs
xor
add
sbb
inc
ds
mov
shl
out
or
(bad)
aam
xor
leave
sbb
jmp
mov
xor
or
cli
mov
jns
cmp
push
lds
imul
cwde
adc
push
and
mov
popf
xchg
jp
mov
mov
test
ret
mov
push
(bad)
push
inc
xchg
in
mov
aad
xchg
add
cmps
call
fnstcw
mov
push
sub
cs
lock
jno
mov
xchg
aad
jae
les
dec
xchg
xchg
mov
xchg
test
ret
and
in
or
fucomip
pop
in
ds
sub
dec
js
dec
test
sub
dec
not
xor
mov
addr16
shr
pusha
fsub
out
mov
dec
fstp
shr
xor
jecxz
jbe
lahf
mov
push
sub
test
inc
arpl
add
mov
xchg
movs
inc
xchg
div
pop
(bad)
xchg
repz
test
aad
shl
mov
fmul
aam
mov
dec
mov
(bad)
cmp
out
jle
pop
sub
aas
adc
adc
ja
push
daa
popa
(bad)
call
jae
arpl
and
add
mov
je
fld
inc
retf
loope
repnz
icebp
jnp
aaa
sbb
or
fsubr
or
rcl
and
add
adc
push
dec
fadd
retf
nop
gs
push
lea
into
xor
mov
fcmove
jne
mov
out
jmp
js
dec
dec
fwait
mov
xchg
mov
outs
movs
pop
rcl
call
popf
adc
aam
push
push
popf
call
xor
mov
and
fistp
movs
cmps
xchg
retf
iret
sub
shl
cmp
sar
xor
xor
imul
movs
cmp
bnd
mov
fistp
mov
sub
cmc
dec
dec
jns
in
popf
movs
xor
dec
pop
inc
fldenv
sbb
fidiv
hlt
repnz
pop
arpl
jle
cld
iret
stos
mov
add
sbb
xchg
js
cmp
(bad)
mov
jle
paddb
outs
inc
push
(bad)
std
pop
cwde
cs
in
inc
cli
adc
lahf
xchg
mov
lods
loop
retf
test
scas
push
push
les
test
inc
jle
das
and
test
xchg
cmp
in
ficom
and
xor
lea
xor
mov
cld
mov
push
jecxz
push
mov
pop
push
and
cmp
cld
dec
test
icebp
mov
sti
scas
lea
pop
popf
pop
mov
cmp
shl
xchg
mov
sub
add
mov
(bad)
xchg
pop
popa
mov
push
test
jb
pop
mov
mov
in
out
xchg
pop
lds
lea
pop
cs
pop
lea
pop
fdiv
test
push
cmp
psrlw
mov
and
xor
fdivrp
call
inc
cdq
adc
inc
cmp
jbe
xchg
jp
fisubr
xchg
dec
je
ins
(bad)
mov
js
loope
cld
sar
stos
imul
aam
dec
(bad)
jmp
mov
xchg
lods
xchg
sahf
mov
in
(bad)
addr16
daa
iret
mov
xchg
mov
cmps
in
dec
imul
les
outs
sub
icebp
mov
ret
inc
mov
(bad)
fwait
xor
sub
dec
std
aam
fistp
retf
xor
mov
or
stos
and
xchg
fwait
jne
jnp
shl
outs
mov
xor
pop
dec
push
xchg
mov
xchg
(bad)
lahf
iret
repnz
sar
add
mov
cmp
pushf
pop
fwait
mov
in
stos
jle
movs
and
mov
mov
cmc
pop
sub
int
movs
mov
cmp
fsubr
sbb
test
cmp
add
pop
inc
add
cmps
shl
sti
push
fisubr
addr16
xchg
leave
mov
ins
mov
in
mov
(bad)
push
push
dec
xlat
les
jmp
cmc
fist
adc
loop
inc
scas
cmp
or
inc
fist
mov
shl
mov
push
mov
pusha
adc
push
xchg
cmp
and
push
mov
hlt
test
(bad)
pop
popa
sahf
in
cdq
xlat
pop
sahf
pop
aam
xor
lods
std
pop
xchg
jmp
jle
stos
(bad)
stos
ffreep
out
adc
daa
test
sub
in
xchg
xlat
jnp
mov
popf
(bad)
fcomp
gs
mov
cld
and
loop
dec
xchg
nop
inc
jnp
vunpckhps
aad
mov
cmps
inc
lea
push
xor
imul
sub
mov
mov
push
xor
pop
mov
sub
push
xchg
leave
js
shl
cmp
push
(bad)
movs
fdecstp
fstp
push
popf
adc
mov
push
ficomp
cmp
cmp
mov
pop
clc
mov
fsubr
shl
jo
dec
mov
pop
xchg
xor
shl
sbb
sbb
lods
into
cmp
mov
inc
mov
mov
push
xchg
dec
mov
(bad)
cmp
inc
sahf
ror
xor
dec
retf
and
mov
cmp
pushf
jbe
pop
sbb
sub
inc
mov
call
jbe
xchg
call
mov
cmp
push
je
jl
jecxz
shr
pushf
push
xchg
jle
jnp
dec
daa
mov
shr
std
repz
shl
in
je
lds
mov
outs
jns
sub
xor
add
mov
(bad)
push
in
mov
sbb
aaa
addr16
addr16
jbe
dec
mov
sti
and
xchg
adc
mov
cmps
jl
lock
sbb
pop
ror
jge
frstor
and
arpl
sbb
mov
xchg
fidivr
test
adc
movs
xlat
int3
rol
add
mov
xchg
adc
or
pop
mov
pop
sahf
rcr
push
mov
shl
xchg
xchg
xchg
cmps
or
mov
movs
pop
jmp
push
shl
mov
xchg
fcmovbe
in
mov
(bad)
outs
jp
jge
enter
je
mov
out
mov
xor
fwait
retf
std
(bad)
xlat
cli
pop
test
xchg
dec
shr
sub
lods
retf
fnstenv
aaa
jno
popf
dec
out
push
and
out
ins
nop
cmp
mov
or
fidiv
xchg
dec
sbb
push
shr
mov
xor
cmp
xor
ins
lahf
sbb
add
repz
mov
xchg
mov
mov
(bad)
jmp
mov
sbb
sbb
(bad)
push
mov
dec
mov
mov
movs
stc
dec
pop
and
dec
push
dec
xor
or
in
sub
mov
or
jle
fisubr
test
push
dec
push
adc
not
aam
out
cld
fnstsw
ds
mov
mov
pop
sub
push
xchg
dec
retf
movs
imul
icebp
add
iret
unpcklps
sub
call
push
jb
sti
rcr
push
dec
repnz
jnp
popa
sbb
sbb
leave
sbb
jmp
xor
xchg
jae
and
fimul
pushf
out
mov
rcr
out
lods
(bad)
sbb
sub
sbb
movzx
adc
push
pop
inc
or
and
int3
movs
push
sub
rcl
mov
push
fld
ror
sub
scas
mov
mov
mov
fucomi
out
in
cmp
xchg
bound
je
icebp
aam
shl
stos
xchg
mov
cmp
mov
mov
sub
fldcw
xchg
movs
mov
cmp
pop
or
inc
add
das
add
fidivr
lock
sbb
idiv
imul
sbb
cmps
mov
(bad)
loop
imul
(bad)
repz
lock
and
inc
push
cmc
mov
gs
mov
mov
jns
push
xchg
inc
sub
out
js
fild
xchg
inc
retf
or
inc
xchg
(bad)
lahf
cmp
or
test
lds
repz
sbb
cs
xchg
push
(bad)
push
push
push
mov
fucomi
mov
scas
loope
in
lahf
cmps
xlat
push
(bad)
outs
xor
mov
and
fidiv
bound
int
mov
int3
lods
test
add
cmp
not
or
aad
ror
aad
mov
mov
xor
test
pop
das
aaa
(bad)
shr
pop
aam
mov
std
int
cmps
and
pop
push
(bad)
int
lods
cmps
cmp
inc
mov
cmp
push
jb
fld
into
jecxz
ins
loopne
inc
loopne
sahf
rol
(bad)
div
mov
xchg
and
inc
push
les
mov
push
aam
jmp
pop
shl
jb
aam
js
rol
fs
call
ds
jl
int
mov
mov
adc
call
ja
xchg
or
xchg
test
std
test
sti
cmp
mov
in
jno
lds
out
lea
cmp
jmp
clc
and
pop
xchg
retf
pop
xchg
push
out
sub
jp
push
push
mov
xchg
mov
stos
idiv
sbb
clc
loope
jb
jae
out
push
cwde
into
movs
cs
int3
aaa
jne
lea
in
sti
rcl
mov
mov
dec
cmp
xlat
loope
cwde
push
mov
ins
shl
fstp
out
repnz
mov
jmp
rcl
mov
call
sub
aad
inc
mov
call
movs
shl
pushf
and
adc
mov
js
aad
push
in
stos
mov
mov
jle
ret
popa
test
and
or
outs
lods
ds
mov
stos
mov
(bad)
and
jle
xor
icebp
sar
int3
push
clc
retf
sbb
sub
mov
daa
cmp
jnp
push
mov
test
mov
dec
mov
ficom
ins
ds
pop
ins
call
repnz
push
js
(bad)
mov
push
imul
inc
lea
mov
mov
sub
push
mov
and
mov
mov
mov
jo
dec
adc
dec
imul
lds
into
jl
push
sub
inc
xor
leave
xor
cwde
aaa
sub
dec
cs
mov
ret
lahf
and
(bad)
sbb
sub
push
pusha
jg
adc
les
adc
dec
dec
fs
outs
push
mov
popa
inc
jae
popa
mov
lahf
jge
je
push
jg
ja
aas
out
dec
jg
sub
dec
ficomp
lock
jae
cmc
fidiv
pop
aad
push
pop
in
xlat
test
sbb
das
jo
jns
jbe
push
(bad)
loope
dec
mov
popf
inc
xor
daa
sbb
mov
mov
aas
xchg
lahf
xor
addr16
or
sbb
sbb
dec
ja
xchg
fmulp
daa
call
mov
mov
dec
inc
xchg
xlat
lds
jnp
(bad)
sbb
imul
arpl
ficomp
push
stos
mov
test
int
ds
loope
test
xor
push
repz
(bad)
xor
mov
push
inc
xor
cli
scas
ins
test
fisub
jmp
cmp
mov
xchg
int
jo
adc
pop
sbb
(bad)
push
jae
xchg
hlt
push
adc
dec
outs
jmp
xchg
mov
loope
shl
sbb
icebp
push
mov
dec
mov
fimul
aam
cmc
sbb
inc
pop
push
dec
dec
stc
pop
xchg
jo
pop
jns
jmp
pop
pop
int
fisubr
push
popf
pop
jne
into
out
adc
cmp
cli
sar
js
lahf
push
jnp
fstp
xchg
jmp
mov
cmp
jp
lock
sti
vmulpd
movs
addr16
sbb
fwait
xchg
push
movs
outs
or
aam
pushf
xchg
mov
ins
fidiv
xchg
jno
xchg
lods
xchg
loope
int3
dec
mov
addr16
fs
call
xchg
imul
repnz
mov
test
cmp
shr
jnp
cld
push
sub
add
les
loopne
sub
ficom
cmp
pop
push
and
jnp
sub
dec
mov
sbb
int3
repz
dec
adc
push
mov
loop
movs
out
jp
add
cmp
jnp
cli
cmp
push
jne
jge
xchg
int
mov
in
sub
pop
mov
mov
pop
call
mov
pushf
pop
ds
pushf
retf
fwait
imul
xor
add
gs
xor
xchg
aad
dec
outs
pushf
daa
mov
inc
sub
aad
dec
int
mov
dec
ins
in
out
xchg
jbe
pop
mov
dec
or
xor
cmp
push
not
addr16
addr16
cmp
movs
push
outs
jne
addr16
je
sti
jne
jae
push
inc
inc
in
pop
dec
imul
adc
es
cmp
pop
lds
sbb
leave
jns
pop
retf
sti
push
xchg
(bad)
std
or
add
lahf
xorps
stc
dec
inc
stc
sbb
clc
mov
mov
gs
call
cmp
in
and
in
inc
add
sub
clc
mov
sub
test
lea
jne
fmulp
scas
pop
jl
fcomp
fnstenv
cmc
pop
lea
fist
pop
dec
stos
adc
mov
mov
mov
pushf
popa
push
bound
and
stc
sar
mov
lods
(bad)
mov
out
jo
and
pop
mov
div
sbb
pop
fmul
es
adc
jecxz
pop
jge
sbb
and
outs
jo
lds
test
and
and
xchg
xor
push
lahf
pop
mov
xchg
mov
inc
pop
sub
test
lea
jae
popa
in
ss
or
sub
jmp
xor
xor
mov
cmp
inc
pushf
push
(bad)
int
adc
scas
(bad)
fisttp
js
xor
jo
pop
das
nop
pop
jb
sar
inc
lock
push
jbe
mov
clc
push
(bad)
test
add
ds
fcomip
cmp
imul
inc
rcr
outs
adc
add
push
jp
inc
test
cdq
jmp
or
dec
nop
mov
pand
inc
push
fnsave
aam
scas
fistp
xchg
pop
inc
sbb
call
xor
pop
cmc
mov
scas
jo
test
aad
xor
sar
inc
dec
leave
dec
pop
adc
mov
ss
retf
inc
mov
mov
mov
int
jmp
and
lds
jl
pop
cmp
int3
sti
cmp
aad
inc
sbb
fstp
daa
push
xchg
in
into
imul
aas
adc
mov
mov
gs
dec
push
sub
jmp
fs
cmp
xor
inc
scas
in
std
cmp
xchg
xchg
cmp
mov
(bad)
push
out
loop
(bad)
push
retf
adc
gs
lods
cmps
jmp
jecxz
add
aas
push
std
add
mov
cld
fsub
movs
(bad)
int3
(bad)
test
aaa
sub
xor
je
out
add
fwait
loop
in
lods
int
dec
xchg
mov
test
push
mov
imul
idiv
and
jp
(bad)
jmp
scas
fstp
cld
and
stos
push
pop
sbb
hlt
xor
dec
mov
xor
xchg
mov
repnz
inc
js
shl
popf
mov
dec
inc
cmp
retf
xchg
mov
mov
mov
(bad)
xchg
addr16
pop
sub
cmps
adc
mov
movs
daa
sub
mov
xchg
movs
hlt
sbb
mov
je
lds
imul
push
push
movs
or
enter
xchg
lods
dec
cmp
mov
repnz
xchg
jo
cmp
stos
in
xlat
xchg
repz
mov
xchg
sbb
add
cli
jge
pushf
call
xchg
dec
push
pusha
fldenv
sbb
pop
adc
imul
dec
pop
call
and
push
mov
jno
mov
clc
cdq
loope
inc
js
loop
in
test
aam
shl
cmps
push
xor
jb
dec
mov
rcl
xchg
cmp
cmp
push
cmp
into
inc
and
push
jp
xchg
aaa
int3
jae
xchg
lods
sub
shl
movs
mov
fimul
jecxz
ins
jns
mul
retf
mov
rcl
dec
push
movs
sbb
mov
in
hlt
int
push
jnp
cs
jae
dec
imul
cmp
into
rcr
push
xchg
jp
in
xchg
mov
sub
adc
test
(bad)
jl
popa
arpl
mov
sbb
cmps
es
pushf
mov
mov
ja
call
cmps
xor
sbb
dec
or
stos
dec
dec
mov
shr
outs
fstp
mov
sub
mov
cli
rol
and
add
and
mov
add
cli
(bad)
outs
dec
in
inc
jne
cli
push
cmps
cmp
jno
cmp
lods
or
mov
sub
jnp
add
add
imul
fmul
mov
inc
xchg
aad
sbb
outs
outs
add
push
push
rcl
stos
or
cmps
pop
mov
fdiv
sub
xor
push
pop
push
aam
js
sbb
xor
push
mov
lds
push
test
shl
mov
xchg
sub
mov
push
push
cmps
(bad)
lods
cmps
push
mov
frstor
sahf
push
inc
scas
cs
sbb
push
call
adc
mov
and
mov
stos
ret
movs
pop
int3
test
mov
mov
pop
je
push
lock
shr
imul
repnz
mov
iret
aam
sbb
out
jl
in
cmp
movs
pop
xchg
jle
or
inc
sub
in
in
stc
les
stos
lea
stos
call
or
xchg
mov
push
sub
cmp
call
retf
retf
xchg
xchg
test
stos
fmul
ins
cs
inc
add
bound
cld
cmp
push
loope
pushf
jbe
mov
sub
int
arpl
mov
mov
dec
pop
stos
push
xchg
mov
inc
stos
fucomp
mov
dec
je
rcl
mov
dec
ins
pop
jae
cmps
rcr
cmps
or
cmp
cwde
je
jmp
push
repz
pop
jmp
mov
mov
bound
dec
pop
and
push
mov
rcr
loope
or
rcl
push
xor
mov
out
daa
aad
outs
mov
xlat
mov
aam
mov
lods
out
mov
add
push
xchg
dec
dec
cmps
fild
jmp
fisttp
sbb
add
sub
in
cld
cs
pop
dec
arpl
pop
cld
sub
mov
pop
in
push
idiv
out
jl
pop
xchg
jecxz
fwait
in
mov
and
jbe
clc
cmps
mov
scas
pop
pushf
pop
jmp
call
xchg
add
ret
fisub
outs
daa
xchg
pop
jb
jo
cmp
dec
dec
daa
push
xchg
loop
aas
or
sbb
jno
sbb
call
pop
test
push
aas
sub
dec
outs
movs
xchg
and
ins
mov
int
push
inc
push
lods
test
aas
jmp
icebp
push
aas
and
lock
addr16
add
scas
push
adc
imul
push
icebp
push
pushf
cmps
sub
cmps
dec
pushf
je
pop
adc
ret
aas
pushf
inc
sub
imul
sbb
into
aaa
in
jmp
cmp
addr16
int
mov
and
into
mov
jg
js
push
jo
mov
shr
dec
pop
cld
outs
repnz
sti
push
(bad)
push
stos
mov
in
pop
pop
push
mov
jmp
cld
aaa
pop
cld
jbe
mov
and
cmp
xchg
xor
xor
cld
jmp
mov
gs
movs
je
loop
jl
data16
mov
jbe
push
xchg
adc
lds
in
inc
inc
inc
inc
pop
sub
in
shl
fnstcw
lea
daa
jg
inc
repnz
inc
(bad)
mov
xor
scas
(bad)
and
(bad)
in
mov
lock
xchg
mov
mov
or
enter
mov
jno
mov
mov
add
aas
cmp
inc
(bad)
shl
inc
cli
xor
das
int3
in
pusha
loop
mov
scas
cmps
ret
lock
jne
mov
retf
cs
cmps
jmp
or
dec
je
mov
out
sahf
push
inc
out
imul
or
sub
fisub
jle
dec
int
mov
(bad)
repz
ret
ss
imul
test
aad
cmps
out
xchg
xchg
hlt
call
push
sbb
imul
retf
dec
dec
int3
fcomi
sbb
aaa
fild
mov
popa
(bad)
xor
in
jo
dec
push
pop
inc
pop
ss
(bad)
addr16
arpl
fsubr
lds
jno
adc
das
lods
cli
sahf
xchg
in
aas
push
sub
xchg
inc
sub
pop
jmp
fst
retf
movs
mov
clc
cmps
or
pop
sbb
cmps
inc
pop
cli
repnz
iret
(bad)
inc
clc
xchg
aas
xchg
call
jg
fist
inc
loop
test
das
or
shr
ficomp
loope
out
inc
mov
add
(bad)
and
test
mov
mov
idiv
dec
js
aad
repnz
pop
jae
or
cs
mov
je
dec
ror
adc
mov
es
pop
push
mov
sbb
xlat
add
jge
retf
rcl
and
mov
mov
cdq
je
mov
adc
jnp
mov
movs
sub
cli
dec
and
fidivr
je
ficomp
ret
mov
shl
pop
outs
xchg
icebp
cmp
out
sbb
mov
mov
push
ja
xor
pop
mov
pop
push
les
or
call
xchg
mov
(bad)
fs
sub
ficomp
std
mov
das
fbstp
daa
daa
jg
jb
ins
jbe
fst
out
cmp
(bad)
test
or
inc
loopne
lock
dec
call
adc
jl
test
and
ds
ret
sub
add
std
bound
cmp
shl
mov
pop
out
adc
loope
sbb
push
inc
cmp
imul
fcomp
frstor
out
mov
sbb
rcl
paddw
std
and
idiv
or
pushf
cli
xchg
imul
add
mov
mov
pop
into
sar
mov
loope
inc
xchg
sar
sbb
jle
call
pop
sbb
scas
xchg
out
ficomp
xor
lods
in
mov
das
xor
fwait
div
sbb
(bad)
pop
and
test
adc
imul
xor
ficomp
in
dec
daa
jecxz
lock
in
popf
jle
and
std
enter
or
dec
jmp
lods
iret
dec
mov
dec
jne
xchg
xchg
dec
push
(bad)
mov
and
leave
and
add
dec
jl
inc
mov
jge
mov
jbe
adc
sbb
xor
push
fisttp
shl
cmp
pop
pop
mov
addr16
cmps
enter
push
and
adc
shl
mov
dec
pop
add
mov
dec
(bad)
ja
push
cli
stos
out
sub
xchg
stos
jns
dec
pushf
outs
scas
mov
mov
test
call
retf
dec
popf
xlat
fwait
(bad)
pop
xor
fisubr
imul
cmp
cdq
sub
cmc
pop
test
pop
ror
push
adc
jnp
cli
xchg
pop
jne
and
and
jmp
js
mov
std
popf
lods
sbb
mov
push
mov
push
xchg
dec
scas
adc
xchg
(bad)
leave
(bad)
cmc
cs
pop
and
xlat
or
jmp
int3
jg
pop
aad
xor
lds
fld
call
repz
sub
and
sub
sbb
jp
pop
outs
xor
dec
hlt
cdq
fnstsw
fs
idiv
dec
fistp
xchg
int
shl
dec
lock
ret
std
or
xchg
sbb
(bad)
retf
mov
loope
in
or
mov
inc
(bad)
cmp
cmp
pop
scas
adc
xchg
mov
cmp
test
mov
fsubr
adc
dec
pop
jecxz
ja
mov
cli
inc
xchg
add
lock
mov
in
out
unpcklps
in
mov
xchg
adc
or
pop
push
hlt
mov
movs
push
dec
add
sbb
adc
and
(bad)
icebp
nop
les
cs
aad
jnp
iret
int3
jo
mov
or
lods
in
jge
mov
dec
jmp
xchg
pop
push
sti
aaa
dec
cmps
xchg
push
lods
fcom
xor
pop
mov
out
(bad)
div
sub
imul
jnp
rol
cs
push
cmps
push
mov
push
cs
fstp
out
ds
xchg
call
cmps
inc
dec
dec
xchg
lahf
sub
push
fisub
pop
jmp
iret
inc
jp
imul
mov
pusha
mov
dec
jg
dec
mov
jns
jbe
movs
pop
inc
xor
xor
data16
add
mov
xchg
icebp
dec
hlt
iret
jg
mov
fwait
xchg
daa
data16
pop
ror
jae
adc
adc
push
(bad)
iret
jmp
mov
push
mov
push
add
fsub
mov
xchg
push
call
fimul
stos
pop
loop
lods
sub
jmp
lahf
or
mov
shr
fs
and
inc
rol
mov
cld
or
lock
mov
call
hlt
sbb
imul
aaa
out
gs
fcmovbe
cdq
fs
jmp
cld
cmp
mov
cs
or
jecxz
enter
in
test
int3
push
data16
sbb
sub
sbb
dec
mov
mov
and
xchg
sub
mov
sub
mov
sub
pop
fcomp
sub
sub
popf
js
aaa
out
test
ins
clc
push
fisttp
jns
dec
mov
xchg
and
xchg
mov
mov
mov
dec
fst
int
inc
(bad)
mov
add
mov
adc
pop
pop
adc
sub
je
ja
mov
mov
test
mov
jns
test
pushf
test
cmc
fldcw
aad
rep
hlt
mov
jle
(bad)
out
xchg
pop
pushf
bound
xchg
mov
pop
cmp
jmp
call
xor
stos
daa
daa
into
xchg
and
and
arpl
std
mov
push
or
cli
addr16
dec
enter
je
mov
sahf
mov
mov
in
jbe
sub
outs
jg
inc
fnstenv
pusha
adc
sahf
in
jns
(bad)
les
iret
jl
mov
test
scas
std
jo
popa
sbb
adc
push
or
mov
leave
ins
pop
test
cmp
jmp
fs
out
adc
mov
call
add
push
sub
xchg
or
dec
jnp
jg
inc
ja
add
mov
outs
and
lahf
jmp
push
fadd
pop
(bad)
push
hlt
mov
lock
mov
test
and
adc
fbstp
not
jo
out
dec
ret
mov
dec
or
add
jg
xchg
dec
dec
(bad)
xchg
aaa
popf
into
inc
pop
in
imul
adc
mov
fucomip
or
dec
fwait
mov
ins
test
push
rcr
push
dec
in
fwait
sub
outs
dec
loop
push
cmp
cmc
test
dec
movs
mov
shl
repz
rcl
les
or
and
pop
push
dec
jnp
adc
jo
out
push
mov
xchg
es
fsubr
mov
xchg
scas
adc
jns
aas
add
sub
popf
xor
sub
lea
and
cmp
clc
test
(bad)
push
aaa
aas
dec
mov
push
push
jp
scas
pop
fs
sbb
mov
test
jns
mov
push
push
and
outs
add
mov
mov
stos
push
and
ret
jecxz
stos
dec
push
les
in
fimul
cmp
push
inc
stos
jno
repz
mov
push
pop
dec
mov
pop
dec
push
fnstcw
mov
das
fst
(bad)
jne
mov
(bad)
mov
retf
jne
lods
loop
pop
or
push
mul
sar
mov
mov
out
mov
pop
or
into
sbb
imul
(bad)
push
test
fwait
pop
daa
mov
adc
scas
icebp
sbb
(bad)
pop
in
jnp
sbb
push
xchg
into
mov
aas
jns
cld
inc
mov
and
add
fidivr
xor
ins
mov
inc
mov
retf
jmp
add
xchg
push
ret
loop
jmp
cli
mov
mov
in
pop
add
clc
je
sbb
pop
adc
cld
pop
fst
cs
in
sbb
cli
dec
xor
mov
out
xchg
dec
jge
int
inc
movs
sbb
inc
sub
adc
add
int
iret
test
dec
fld
xchg
int3
fstp
or
jge
movs
lock
fldcw
xchg
ss
movs
mov
lahf
mov
sbb
push
push
xchg
jle
jb
rcl
inc
adc
mov
adc
ret
ds
sub
cld
pop
mov
aas
add
mov
xchg
ret
std
inc
jmp
dec
jbe
hlt
movs
test
sub
call
cmp
push
pop
mov
ffree
popa
sub
xchg
push
(bad)
aaa
and
das
out
in
jl
aaa
mov
dec
pop
lods
and
sbb
mov
ja
test
movs
jne
mov
in
fst
popf
repz
outs
jbe
cwde
add
test
and
xchg
ja
xor
fstp
xlat
fxch
cli
shl
jge
repz
xor
repnz
inc
lods
jno
mov
ficom
idiv
test
add
cmps
inc
adc
pop
pop
cld
cmp
jnp
es
jmp
pop
xchg
dec
jno
xor
mov
mov
idiv
ds
jae
sti
inc
mov
mov
mov
aaa
sar
fmulp
xchg
repz
lods
fbld
mov
scas
mov
cli
xor
fs
mov
pusha
jge
jp
mov
movs
aas
sahf
adc
idiv
mov
pop
or
into
(bad)
imul
popa
xchg
fcomp
adc
sbb
adc
and
xor
popa
sub
cdq
cdq
jg
xchg
repnz
xor
pop
mov
cmp
jl
addr16
ds
gs
xor
pop
mov
jnp
arpl
mov
pop
pop
outs
cmp
inc
mov
jne
retf
jp
add
dec
push
ins
in
push
push
cmp
jo
daa
jmp
(bad)
(bad)
jns
push
sbb
jg
movs
call
mov
cmp
push
jmp
imul
iret
addr16
sub
sbb
push
add
push
dec
add
add
loope
cmp
mov
outs
aam
pop
scas
pop
or
mov
jmp
popf
cmc
sar
aam
fwait
scas
stos
das
out
repz
clc
jns
fs
mov
aam
pop
outs
call
cmp
sbb
jl
push
fs
push
inc
rcr
adc
adc
dec
cmp
aaa
pop
push
(bad)
retf
ret
loopne
cmp
leave
jno
jno
fsub
std
pop
jmp
hlt
jle
pcmpeqd
inc
out
in
push
mov
pop
(bad)
ins
cmp
jb
add
cmp
stc
sub
mov
adc
and
xchg
or
hlt
push
stos
push
dec
fwait
je
jmp
pop
popf
fmul
mov
sub
ficomp
mov
loope
add
fxtract
cmp
add
lods
dec
pushf
mov
sbb
adc
mov
mov
movzx
pop
gs
or
fsubr
adc
xchg
(bad)
hlt
cmp
push
xor
lock
xchg
mov
(bad)
mov
js
loope
fadd
popf
sub
out
addr16
cmp
loope
out
pop
mov
lods
sub
in
ret
pop
icebp
dec
pop
in
ss
(bad)
and
mov
ja
pop
pop
(bad)
cdq
test
pusha
jle
fxch
ficom
in
xor
int
push
cmp
imul
inc
outs
jb
add
pop
xchg
jae
pop
push
inc
dec
cld
cwde
cmc
sbb
cmp
aad
mov
pop
mov
ja
cdq
push
ret
aas
scas
sbb
call
pop
xor
fistp
cmps
dec
mov
ret
pop
test
(bad)
jnp
jecxz
cmp
mov
in
call
adc
and
push
popa
and
mov
mov
retf
or
xchg
ins
mov
sub
mov
inc
dec
cmp
je
shl
stos
and
daa
test
and
dec
xor
into
popa
sbb
repz
sub
dec
icebp
pop
rcr
cwde
(bad)
int
stos
sbb
adc
je
fwait
xlat
jecxz
loopne
adc
jae
mov
push
mov
ror
xchg
cmp
inc
jp
dec
out
clc
(bad)
jno
xor
adc
jbe
xor
dec
mov
or
cli
aas
in
repz
std
pop
inc
ds
dec
jnp
mov
lahf
and
lods
out
sub
(bad)
jb
std
icebp
mov
push
pop
adc
test
movs
rcl
fnsave
jo
in
jo
(bad)
in
xor
repnz
adc
xor
inc
aas
sub
mov
pop
sub
cmps
dec
lea
cli
movs
je
idiv
push
xor
xchg
jp
fstp
jmp
xchg
push
jmp
into
scas
in
pop
(bad)
je
lods
jg
(bad)
adc
stos
(bad)
in
(bad)
(bad)
jg
add
cdq
hlt
dec
addr16
push
je
xor
mov
stos
(bad)
rcr
test
icebp
mov
(bad)
ret
int3
(bad)
addr16
cmp
or
hlt
nop
test
(bad)
in
lods
dec
or
add
dec
xchg
push
test
dec
jno
fidivr
mov
test
dec
outs
mov
xor
cmp
out
int
movs
xlat
hlt
xor
hlt
jmp
mov
jmp
inc
jp
popa
pop
(bad)
or
mov
push
cmp
push
repz
jae
imul
mov
or
mov
scas
inc
adc
ret
stos
mov
sub
jmp
pop
xchg
not
fisttp
cmp
sbb
dec
mov
jecxz
aaa
jnp
dec
aad
mov
add
das
sar
sbb
sbb
xor
xchg
cmp
ss
mov
xor
inc
sub
movs
add
call
ficomp
inc
frstor
and
mov
loop
scas
fild
fstp
mov
push
pop
dec
sbb
cmp
ret
dec
jge
mov
into
clc
je
jno
inc
rcr
test
mov
ins
and
fnstenv
retf
das
retf
xchg
test
ror
out
cwde
mov
out
cmp
fstp
ds
xor
cmp
mov
gs
fist
in
not
mov
repnz
xor
loope
mov
daa
pop
imul
mov
ins
or
mov
fwait
jmp
mov
sar
sub
or
idiv
add
cmps
cld
sahf
pusha
adc
xchg
mov
jbe
push
test
inc
add
dec
jne
lods
mov
push
pusha
ds
mov
pushf
and
dec
mov
or
imul
sbb
mov
jo
jmp
add
dec
jns
movs
pop
jne
sti
shr
xchg
and
f2xm1
(bad)
out
in
sbb
dec
mov
pop
jmp
jo
ficom
cmps
pop
xchg
fs
neg
pop
movs
idiv
ret
repnz
rcr
out
adc
push
sub
loopne
scas
push
outs
out
mov
aaa
mov
scas
fdivr
mov
cmp
mov
jecxz
cmp
rcr
mov
imul
mov
add
jp
mov
int
or
shr
jle
dec
mov
inc
imul
aad
aam
pop
bound
dec
fbstp
movs
movs
jl
loop
lahf
lods
je
dec
scas
cmps
ins
pushf
push
rol
leave
das
jne
fistp
(bad)
cmps
xchg
fs
mov
pop
neg
leave
jnp
xchg
out
xchg
or
stc
fldcw
jle
push
mov
push
cmps
dec
sub
iret
in
jle
push
adc
retf
push
repz
dec
sub
or
out
ds
fistp
lods
scas
lods
ins
or
div
push
sbb
inc
aaa
icebp
fbld
sahf
push
int
push
(bad)
(bad)
stos
inc
loop
(bad)
xchg
cmp
mov
shl
inc
dec
fisttp
dec
xchg
cld
ja
test
std
xor
inc
pop
and
inc
ret
mov
stc
aas
fdivr
psubq
pop
(bad)
and
inc
repnz
push
loope
cs
jecxz
mov
add
and
int3
inc
sti
ins
and
dec
adc
dec
jg
retf
adc
add
pushf
das
lods
mov
in
fistp
cmp
pop
mov
jmp
sbb
leave
and
fidiv
push
mov
shl
dec
pushf
mov
sub
sbb
pop
dec
popf
cmp
and
pop
imul
jecxz
cmp
push
jl
xor
mov
jo
sub
test
cmps
sub
push
mov
lock
mov
inc
lock
jge
popa
mov
sahf
popa
xor
sbb
cmc
pop
dec
pop
jmp
outs
mov
dec
test
loop
pop
push
cld
mov
es
stos
rcr
xor
jns
call
into
retf
aaa
aaa
cs
adc
fcmovbe
jbe
in
arpl
cmps
sub
xchg
call
pushw
jmp
scas
(bad)
jmp
lds
fs
push
leave
xor
dec
daa
cwde
imul
dec
stc
push
cwde
dec
cmp
in
sti
cmp
xor
mov
repz
lea
in
outs
pop
cmps
pop
lods
std
pop
pop
fdivr
rcl
lods
xchg
lock
push
movs
in
lahf
scas
mov
addr16
add
out
addr16
ficomp
xchg
mov
jp
pop
cs
pop
movs
ss
hlt
imul
repz
sbb
push
cmp
xor
mov
jno
test
push
out
pop
sbb
xchg
push
cli
xchg
in
outs
scas
fisub
scas
pop
push
js
xchg
lods
push
pop
out
retf
daa
push
mov
pop
xlat
dec
jae
scas
test
lahf
push
cmps
mov
movs
dec
mov
sub
ret
cwde
xchg
jne
imul
sub
or
adc
add
stc
fisttp
cmps
aaa
sbb
xor
loope
jne
test
pop
push
(bad)
jl
pop
ja
sbb
lds
cmps
cmc
mov
in
xor
xchg
jecxz
push
xchg
clc
dec
retf
push
dec
pop
dec
sbb
retf
xor
fisub
jecxz
cmp
push
aas
dec
enter
int3
loop
retf
adc
out
pcmpgtw
shl
call
sahf
in
pop
out
(bad)
xor
ficomp
push
sbb
push
call
dec
pushf
cmp
daa
jge
scas
xor
push
aad
pop
xchg
mov
inc
pop
mov
sub
lds
test
enter
stos
addr16
ins
movs
dec
daa
and
in
mov
mov
jb
pop
inc
into
dec
dec
jge
jge
aam
call
push
fsub
popf
xchg
adc
dec
adc
push
jmp
popf
iret
ret
dec
xchg
retf
call
pop
mov
and
inc
jmp
int
ss
cmps
xor
(bad)
sub
dec
repz
jae
je
repnz
push
repz
fidivr
mov
mov
fst
aas
jbe
adc
(bad)
mov
push
cld
not
adc
mov
mov
add
sbb
mov
sub
repnz
mov
out
cmp
xlat
pop
cli
push
int
mov
push
je
(bad)
lods
fist
je
call
imul
pop
dec
loop
je
lock
push
pop
mul
mov
sub
mov
in
dec
out
imul
cmp
lods
retf
jb
cmp
mov
xchg
dec
sub
add
aaa
and
sbb
into
xchg
sub
clc
pop
(bad)
push
test
aas
sbb
bound
daa
test
hlt
sub
inc
cmp
xor
dec
lods
cli
jge
xor
ret
in
pop
cli
jbe
pushf
out
xchg
xchg
xchg
retf
dec
pop
jmp
inc
add
out
cwde
clc
inc
outs
cmp
ficomp
xor
mov
mov
ins
jge
mov
cdq
in
or
mov
or
ja
test
jle
ins
mov
loope
les
push
cmp
mov
pop
idiv
add
lock
sahf
fnsave
mov
clc
stos
pop
stc
sub
fcomp
data16
ins
call
out
sub
inc
shl
or
rcl
popf
push
mov
push
lahf
mov
pop
int
mov
cmps
sbb
xor
ja
fucomi
xchg
(bad)
jecxz
test
push
ins
push
sbb
test
push
imul
cmp
aad
fisubr
mov
pop
in
lods
es
in
data16
mov
and
cdq
in
pop
pop
into
pop
mov
mov
sub
js
mov
in
out
push
mov
sbb
jae
ins
cmp
xchg
int
out
jmp
outs
xchg
out
cld
inc
sti
inc
mov
mov
mov
adc
fnsave
leave
call
pop
aas
enter
lods
imul
rcl
push
mov
shl
add
dec
add
xchg
sbb
inc
enter
mov
sub
aam
leave
es
sbb
fdivr
and
mov
xchg
in
fistp
outs
mov
and
dec
cwde
and
push
sahf
xchg
repnz
jmp
call
adc
jecxz
pop
fs
imul
les
fnstsw
sbb
mov
cld
mov
aam
addr16
jns
test
loopne
das
out
xchg
add
pmaxub
push
mov
aaa
pusha
push
jno
shr
mov
icebp
call
add
lods
jno
iret
in
add
pop
sub
mov
imul
push
jg
aas
pop
jl
cmps
mov
xchg
lods
call
inc
dec
out
pop
sub
sub
adc
retf
retf
(bad)
jno
dec
outs
inc
(bad)
dec
pushf
mov
adc
mov
mov
dec
in
in
outs
push
add
xchg
lods
mov
adc
aad
icebp
ins
fld
dec
adc
pushf
push
fcomp
cmc
sbb
stos
daa
in
outs
(bad)
xor
jmp
jg
dec
loope
add
dec
data16
or
cmps
pop
sub
lods
ins
ss
dec
sub
pop
pop
scas
jns
xchg
mov
jb
call
popf
jno
imul
lahf
jae
cwde
add
fcomi
inc
mov
dec
and
cmp
dec
pop
sbb
fnstenv
out
push
pop
mov
stos
int
fild
out
arpl
mov
stos
outs
jmp
mov
jecxz
out
push
dec
mov
jbe
push
test
lds
lock
xchg
movs
mov
pushf
pop
fwait
xchg
jno
pop
pop
nop
rol
jl
sub
mov
dec
(bad)
jge
retf
jmp
xchg
cmps
inc
aas
ret
mov
fwait
push
pop
jmp
fadd
lea
imul
call
(bad)
ja
(bad)
cmp
daa
adc
jge
jno
mov
ja
dec
sub
out
fimul
stc
push
push
jno
push
inc
repnz
sub
and
loop
jmp
lds
mov
push
std
and
data16
adc
lods
mov
fdivr
out
dec
sti
add
push
xor
cmp
stos
push
jno
xchg
pop
(bad)
aad
push
ja
repz
pop
mov
ret
cmc
sti
push
popf
cmps
push
in
cmp
pushf
outs
mov
jae
mov
into
or
mov
inc
adc
mov
push
into
ficomp
inc
adc
sub
add
push
cmc
ss
ja
sahf
int
test
mov
cmp
cdq
mov
pop
fcomp
jnp
and
dec
jmp
fs
movs
pop
sub
imul
xchg
cmps
aam
push
outs
in
push
aad
das
pop
jae
push
(bad)
retf
jmpw
mov
push
sbb
adc
xor
fistp
retf
pop
mov
ins
fwait
aam
sbb
fwait
outs
jle
arpl
cmp
scas
rcl
shl
imul
jp
and
sahf
sbb
test
push
(bad)
rcr
or
sahf
ja
mov
movs
or
int3
jmp
bound
dec
push
ins
movs
and
mov
add
ins
jb
sahf
cmps
or
pop
adc
push
mov
jp
daa
adc
stos
popf
mov
cmc
cmp
mov
mov
js
dec
or
and
shl
xchg
push
call
loopne
mov
lods
inc
fisubr
dec
movs
mov
push
sub
cpuid
mov
jl
cmp
daa
nop
in
aam
rcl
neg
clc
cmp
call
mov
sahf
clc
mov
xchg
inc
xor
adc
lods
ss
(bad)
(bad)
adc
fst
or
ficom
mov
jecxz
xchg
or
add
call
movs
xor
arpl
push
(bad)
in
inc
data16
clc
pop
sub
movs
mov
ja
fsub
div
fdiv
xchg
mov
mov
jnp
xchg
loop
nop
jo
movs
jmp
imul
lods
not
fwait
pop
hlt
cmps
mov
push
es
stos
jae
dec
cmps
mov
push
push
fs
sbb
call
xor
jp
jnp
pop
jns
inc
mov
scas
adc
xor
cmc
push
test
iret
push
movs
jl
in
xchg
out
in
and
push
enter
retf
xor
fadd
and
mov
xchg
stos
jne
lods
inc
fldcw
loopne
stc
ins
cld
sar
cmp
shl
pop
xchg
out
movs
cmp
xlat
dec
jno
xchg
(bad)
jne
es
js
jecxz
mov
call
retf
pop
fidiv
(bad)
out
mov
aam
xchg
jns
cdq
call
and
add
fs
iret
pop
sbb
test
aam
jb
lods
loop
data16
mov
xor
mov
aad
loopne
pop
adc
inc
rcl
cmp
(bad)
std
push
daa
imul
xchg
clc
jnp
or
push
imul
fsubr
fcom
xchg
xor
fadd
(bad)
xchg
mov
dec
or
add
sbb
push
inc
fld
and
xor
pop
enter
jmp
sub
adc
and
fsubr
pop
pop
js
sbb
pop
(bad)
stc
iret
cmps
(bad)
and
and
xchg
mov
retf
add
pop
jge
or
mov
dec
jae
pop
mov
pop
cdq
mov
fist
dec
and
lahf
cmp
fld
test
aaa
adc
sar
popf
in
test
mov
dec
int
iret
pop
sar
repz
sti
inc
enter
adc
mov
test
sbb
int
stc
lock
idiv
sahf
int
pop
xchg
(bad)
mov
call
scas
sahf
bound
nop
ds
lahf
fidiv
pop
pop
test
cmp
in
adc
mov
ins
ss
pop
cdq
mov
nop
xchg
jp
and
fbstp
shr
and
not
in
jmp
mov
and
xchg
test
xor
outs
mov
mov
cmc
jbe
pop
sub
xchg
xor
push
fwait
pop
icebp
pop
cld
outs
sub
ficom
cmp
sbb
dec
scas
jnp
mov
mov
sbb
xchg
movs
pop
push
sti
stos
std
or
mov
mov
mov
push
clc
ins
stc
sbb
(bad)
push
call
xchg
lahf
pusha
inc
(bad)
lds
lahf
je
mov
xchg
dec
push
shl
push
dec
xchg
retf
in
mov
dec
jno
out
push
out
ja
icebp
mov
loope
test
push
in
pop
daa
mov
pop
int
pop
(bad)
mov
dec
mov
stos
je
mov
mov
fidivr
out
or
pop
xchg
mov
mov
ins
retf
dec
sub
ss
sbb
mov
jle
cmp
cdq
fbld
(bad)
ret
fidivr
movs
and
aad
xchg
lea
cmovg
sub
or
test
fbld
mov
dec
sbb
scas
adc
sbb
dec
and
in
jne
out
inc
and
push
mov
call
scas
shl
adc
cmp
fcmovb
push
push
test
and
jl
je
dec
mov
cmps
retf
pop
test
test
stos
cmps
mov
ds
call
lods
cdq
mov
jmp
arpl
push
push
xchg
xchg
inc
into
fsubr
sub
jb
pop
sub
add
xchg
jecxz
not
movs
sub
in
jp
ins
je
sub
addr16
mov
hlt
pop
lods
mov
frstor
mov
fcomp
imul
inc
sti
cmp
jge
cmp
imul
in
daa
arpl
stos
inc
xlat
and
pop
dec
adc
jb
test
mov
sbb
lock
ficom
shr
mov
not
outs
jmp
in
push
lea
cmps
call
ins
adc
xchg
aad
rcl
push
movd
jns
or
dec
xchg
push
push
in
push
cmp
jp
jns
xchg
movs
add
test
mov
aas
movs
jbe
mov
fwait
xlat
daa
loopne
mov
jno
inc
in
in
adc
push
mov
sbb
jo
inc
mov
or
mov
fistp
adc
bswap
leave
push
and
add
popf
ret
dec
sub
out
push
loop
ror
outs
lahf
out
lods
inc
mov
xchg
cmp
xchg
jle
adc
pop
ja
mov
in
fbld
inc
adc
scas
pop
lods
cmp
imul
gs
in
imul
xchg
sub
ins
sbb
jmp
retf
inc
cmps
int3
mov
retf
daa
js
lgs
out
hlt
pop
pop
stc
dec
repz
sub
dec
les
mov
mov
call
retf
pop
(bad)
cmp
dec
leave
push
cmp
add
lahf
test
mov
cdq
cmp
sub
dec
mov
pop
sub
iret
arpl
ret
(bad)
pop
xchg
daa
push
xchg
stos
jmp
sub
push
pop
rep
dec
jb
test
mov
push
push
pushf
inc
jno
xchg
mov
add
inc
int3
movs
sub
and
imul
xchg
out
out
xchg
lahf
mov
mov
cmp
push
std
push
lods
dec
push
mov
dec
lea
mov
push
mov
adc
(bad)
jl
es
push
cli
(bad)
call
movs
add
fisub
dec
cmps
xchg
cli
mov
ins
jmp
cmps
(bad)
xchg
xchg
dec
xor
pop
cmp
add
mov
les
xchg
retf
repz
sti
jmp
xchg
or
mov
inc
pop
cld
sar
sub
or
push
loop
ror
hlt
pop
sbb
loop
idiv
loopne
push
push
fist
std
movs
mov
(bad)
sbb
rcr
xchg
dec
hlt
cdq
test
in
sbb
je
mov
dec
and
stos
xor
fcomip
sar
in
mov
lea
mov
push
mov
jg
mov
stc
sbb
mov
movs
xchg
lea
(bad)
pop
hlt
pushf
mov
sub
sbb
cmp
cmp
push
stos
jno
and
test
and
mov
in
in
fbstp
pop
retf
lods
ins
scas
cli
mov
(bad)
rol
dec
adc
cmps
js
push
jnp
cs
mov
repnz
dec
aad
xor
dec
pop
jb
adc
jbe
mov
jl
mov
dec
iret
xchg
jmp
dec
inc
and
ffreep
jbe
js
inc
cmp
in
aad
mov
push
push
mov
jle
xchg
repz
arpl
fstp
xchg
sub
(bad)
sub
sub
fdivr
rcr
jmp
ficomp
scas
lods
div
pop
repz
mov
movs
fmul
das
mov
add
stos
pop
int3
push
or
ror
pop
rcl
mov
dec
(bad)
mov
mov
ja
xor
or
ror
inc
imul
mov
adc
leave
vshufps
out
mov
dec
push
out
cmps
adc
cmp
dec
xor
adc
push
inc
repz
add
push
inc
call
ret
aad
cmps
cld
pusha
xchg
push
call
sahf
mov
gs
inc
dec
rcr
mov
push
jp
repnz
pop
jecxz
cmps
jmp
mov
fdiv
push
xchg
hlt
fcomp
enter
jb
mov
and
inc
inc
mov
pushf
pop
mov
mov
(bad)
test
dec
jl
cdq
(bad)
cmps
fwait
rcl
(bad)
(bad)
jecxz
mov
jmp
aas
and
mov
hlt
sub
mov
ds
dec
dec
lods
inc
dec
(bad)
sbb
(bad)
mov
mov
dec
or
and
sti
fwait
cmp
in
(bad)
unpckhps
in
in
pushf
pop
inc
jmp
fstp
ret
int
(bad)
stos
into
xchg
cmps
in
sti
popf
mov
(bad)
xor
sti
inc
shr
dec
ss
mul
xchg
and
stos
inc
outs
out
adc
jp
adc
cmp
jmp
shl
xor
in
or
or
cmp
mov
or
cmp
pop
add
sti
movs
(bad)
jo
or
fidivr
jo
pop
push
cdq
inc
popa
jmp
pop
popa
mov
iret
xor
inc
inc
xor
call
mov
mov
cmc
ficomp
jecxz
test
xchg
std
mov
es
ror
mov
sbb
push
cmp
(bad)
sar
add
push
fdivrp
add
in
mov
pop
mov
xchg
sti
xchg
loop
sub
movs
cmp
data16
mov
adc
sub
dec
pop
pinsrw
hlt
test
aad
or
js
imul
loope
dec
inc
out
inc
cli
dec
imul
sub
mov
push
sub
xchg
xchg
or
mov
mov
bound
sti
iret
cmp
sbb
sbb
push
mov
xor
test
sub
mov
pop
mov
shl
jns
jno
fmul
sbb
lods
mov
push
jne
inc
rcl
and
mov
popf
dec
mov
add
repz
fimul
push
out
inc
ins
mov
shufps
pop
sbb
pop
stos
push
add
mov
(bad)
je
test
neg
jmp
int3
lahf
jne
pop
div
imul
mov
dec
jno
(bad)
std
jnp
pop
mov
xor
push
int3
push
fnstsw
cmps
mov
xor
fcmovb
pop
xor
and
add
adc
xor
or
dec
xor
addr16
fisttp
aam
fist
das
add
repz
ja
in
hlt
shr
mov
pop
and
cmps
mov
mov
retf
imul
retf
pop
jns
retf
shr
cmp
add
cmp
popa
pop
cbw
xchg
sub
(bad)
mov
stos
sbb
cs
push
cld
pop
jmp
inc
sbb
add
xchg
mov
ja
outs
mov
outs
scas
inc
retf
stc
dec
cmps
clc
mov
jnp
mov
sub
idiv
(bad)
mov
(bad)
mov
lock
add
fs
cmp
inc
adc
scas
aam
xor
popf
and
mov
out
jmp
mov
movs
out
pushf
addr16
and
pop
rcl
lea
gs
mov
arpl
add
xor
mov
ja
mov
adc
xchg
fs
fidivr
jb
adc
into
sbb
popf
mov
mov
scas
xchg
pop
cli
adc
outs
inc
pusha
xor
inc
iret
stos
and
cmc
stc
inc
mov
mov
ds
aas
lds
dec
or
sub
sar
add
jle
dec
sar
imul
jp
mov
dec
jmp
xchg
push
loopne
out
cli
dec
inc
xchg
jecxz
enter
jbe
pop
pop
jnp
call
xor
lea
or
jecxz
lahf
aad
ret
shl
call
frstor
jecxz
js
jno
stc
aas
jno
out
fist
(bad)
push
lods
fwait
xchg
mov
push
inc
stos
mov
stos
pop
push
popa
sbb
jecxz
pop
or
sbb
(bad)
dec
or
cwde
in
jae
pop
pop
jge
scas
stos
dec
stos
(bad)
gs
(bad)
out
xchg
push
call
jmp
(bad)
imul
js
(bad)
jnp
out
rcr
in
push
aam
jbe
cmp
push
gs
mov
cmp
xchg
pop
les
jnp
and
jmp
stos
cld
jle
test
mov
retf
pop
mov
mov
movs
scas
lods
sub
dec
push
loop
movs
push
sahf
sahf
retf
push
imul
xchg
mov
xchg
enter
jno
pop
inc
jbe
out
add
sbb
imul
dec
ret
test
jl
xchg
xor
sub
dec
push
mul
cmc
dec
scas
sbb
cli
ret
dec
push
stc
test
add
sahf
scas
push
adc
shl
xchg
inc
sub
push
in
out
adc
mov
lods
add
mov
fild
cs
dec
jmp
dec
ins
dec
sub
idiv
mov
(bad)
int
stos
repnz
les
cli
rcr
inc
cld
xchg
xchg
pop
sti
inc
pop
mov
lods
xor
idiv
sar
push
hlt
test
loop
mov
mov
repz
popf
fwait
mov
int
lahf
jno
retf
stos
test
dec
xchg
mov
jnp
mov
(bad)
xlat
(bad)
pop
mov
pop
bound
bound
push
movs
sti
mov
js
mov
gs
mov
lods
dec
jnp
jg
mov
das
or
es
dec
and
pop
xor
xor
out
cld
and
test
leave
pop
test
enter
sbb
aas
dec
sub
add
sub
and
pop
bound
mov
jg
cmp
les
pop
push
and
push
sub
dec
inc
mov
je
mov
or
sbb
adc
add
jmp
inc
cmp
or
aam
mov
push
out
repnz
push
and
test
popa
call
inc
(bad)
sar
sahf
sub
sub
repz
lods
cmp
enter
jo
icebp
sub
jo
pop
daa
outs
shl
xchg
mov
mov
(bad)
sub
jle
xchg
cmps
aam
and
loope
cld
fnstsw
les
inc
xchg
ret
and
arpl
xor
mov
mov
adc
push
cdq
hlt
cmp
adc
cmp
mov
inc
mov
sbb
mov
cmps
fldenv
popf
dec
mov
ficomp
int
fmul
or
mov
and
push
fdiv
inc
imul
cmp
ror
es
stc
mov
adc
jno
mov
xchg
dec
mov
lea
adc
in
adc
xor
push
xchg
(bad)
leave
std
and
push
nop
dec
test
into
cmc
push
cdq
into
dec
jnp
mov
outs
pop
mov
shl
rcl
mov
adc
shl
(bad)
or
cwde
loope
dec
lods
mov
aaa
push
push
or
jb
test
push
mov
fnstenv
and
out
cmp
lods
add
inc
mov
pop
push
stc
mov
aaa
cmp
cmp
das
pop
mov
jecxz
repnz
fcom
fninit
push
in
cli
jne
push
fidiv
push
hlt
jmp
push
addr16
push
cmps
rcl
test
not
iret
mov
jno
mov
scas
sub
shr
jg
mov
add
sub
call
mov
std
sub
imul
movs
xor
cmp
inc
or
out
movs
ins
add
aas
dec
in
jbe
dec
stos
aad
cmp
mov
pop
xchg
push
push
push
push
jbe
das
aad
pop
xchg
popf
jmp
or
outs
dec
mov
sub
sahf
movs
and
or
cli
and
jns
push
cmp
in
(bad)
cld
int3
cmp
gs
or
push
add
jb
shr
dec
retf
push
outs
pop
fst
les
gs
lods
imul
cmp
movs
fs
adc
cwde
stos
pop
mov
add
mov
cmc
movs
mov
shl
cdq
xor
loopne
lahf
inc
shl
jmp
add
xchg
call
int
xor
push
add
scas
call
pushf
ins
retf
inc
mov
ret
jb
mov
sub
push
adc
or
jle
hlt
fnstcw
inc
add
inc
fsubr
retf
(bad)
pushf
mov
and
mov
mov
xchg
sub
sub
inc
loop
xchg
(bad)
xchg
jge
xor
arpl
mov
mov
mov
push
mov
call
(bad)
fwait
push
sub
sub
inc
mov
xor
out
and
imul
inc
in
repz
clc
movs
dec
lahf
test
in
cmp
ror
cmp
loop
jp
std
mov
mov
sbb
(bad)
stos
push
inc
mov
mov
mov
xor
add
sub
mov
xor
xor
inc
mov
cwde
inc
push
mov
dec
loop
out
dec
mov
arpl
inc
mov
ret
xor
cwde
lods
lds
jb
sahf
adc
call
xchg
movs
inc
ret
jb
push
test
lods
neg
pop
xchg
jle
das
sar
and
inc
jne
jecxz
add
pop
aas
les
idiv
stos
mov
mov
addr16
jecxz
(bad)
into
pushf
movlps
(bad)
and
call
jae
mov
push
inc
pop
hlt
retf
inc
jmp
mov
aad
dec
fiadd
inc
pop
inc
test
in
retf
or
cmp
test
inc
mov
gs
popa
and
out
jne
sahf
mov
cli
and
lods
cli
push
in
sub
adc
dec
jns
retf
(bad)
gs
inc
mov
inc
mov
lea
dec
call
cmc
xchg
call
push
ficomp
xchg
and
push
dec
in
dec
jo
(bad)
sbb
(bad)
or
stos
repnz
leave
and
pop
add
icebp
shld
leave
jmp
push
clc
ins
clc
pop
and
es
call
jmp
pop
jns
inc
call
enter
rcr
mov
test
out
jp
jne
fadd
xor
out
out
xchg
ret
jp
or
(bad)
sub
push
adc
lods
push
lahf
push
loope
mov
rcl
jecxz
int3
popa
(bad)
lods
ss
sub
inc
cwde
mov
shl
adc
sub
add
sub
dec
enter
cmc
xor
repz
cmp
mov
jae
sbb
cdq
mov
push
jmp
dec
fnstsw
cmps
dec
ficomp
outs
fisub
std
test
sbb
sbb
nop
sub
push
push
(bad)
leave
push
xchg
dec
adc
fnstenv
jae
cmps
sbb
stc
inc
mov
xor
xor
stos
push
cdq
lods
sbb
mov
fs
sub
cdq
add
dec
push
inc
(bad)
mov
push
loope
inc
add
je
les
mov
pop
sbb
jbe
enter
adc
xor
out
rcl
push
sub
or
jno
bound
cdq
mov
adc
test
test
mov
push
xor
retf
adc
mov
in
dec
dec
cmp
cmc
push
ficom
imul
loop
push
push
dec
(bad)
dec
movs
pushf
jge
aad
push
pop
data16
pop
adc
ins
cmc
int
xchg
std
pop
movs
out
dec
(bad)
stc
mov
cdq
mov
push
(bad)
xchg
jnp
dec
mov
mov
mov
fmul
mov
mov
aam
mov
daa
cmps
jmp
jae
xchg
(bad)
in
jne
retf
push
movs
cmps
xchg
repnz
fld
push
outs
in
mov
test
movs
cwde
push
int
push
sub
push
pop
test
mov
xlat
in
inc
dec
lahf
setno
dec
div
push
push
call
cmp
fld
ds
fist
aas
dec
test
xor
lods
icebp
add
dec
dec
mov
dec
mov
inc
adc
add
mov
mov
sub
push
push
call
inc
fsubr
dec
es
rcl
xor
in
lds
jb
movs
xchg
or
stc
call
xlat
mov
mov
pop
mov
outs
cmp
dec
or
adc
int
xor
aam
inc
jns
add
xchg
dec
xor
popa
sub
(bad)
pushf
(bad)
movs
outs
stc
mov
pushf
out
dec
pop
adc
jns
call
lahf
cld
dec
fnstenv
in
pop
sbb
lea
cmp
sub
xchg
mov
mov
mov
xchg
inc
sti
and
fs
cld
pop
pop
inc
out
pshufw
popa
and
pop
sub
mov
pop
pop
cmp
lahf
mov
xor
out
pop
sub
(bad)
fsubr
dec
scas
call
lea
leave
lahf
jno
movs
aad
shr
jbe
popf
dec
lods
(bad)
dec
jge
mov
push
pop
pop
dec
mov
mov
adc
jno
mov
xor
ret
sub
xchg
jecxz
jecxz
ins
and
mov
add
call
stos
inc
test
mov
fwait
xor
cwde
jno
movs
xchg
fidiv
mov
cld
sbb
push
push
push
shl
mov
dec
enter
nop
test
test
gs
sbb
mov
xlat
retf
daa
test
out
jg
xchg
dec
aad
leave
fbld
dec
push
leave
mov
cmps
retf
int
imul
pusha
fimul
and
ficom
outs
lods
arpl
outs
sbb
push
cmp
mov
aas
push
outs
pop
es
call
ja
pop
sti
sub
pop
loop
inc
lods
jns
add
xchg
dec
dec
jo
call
int3
mov
jp
sub
jl
cs
dec
and
retf
mov
adc
and
fucomip
sbb
popf
stc
sbb
int3
dec
out
or
adc
jnp
stc
scas
mov
jg
cmps
sbb
dec
std
jmp
mov
rcl
(bad)
cld
call
fistp
jae
repz
jmp
jmp
add
(bad)
scas
dec
pop
xor
fdivr
popf
pop
dec
push
imul
jl
and
jns
xchg
pusha
adc
test
sti
pop
data16
and
jmp
jns
vhsubps
inc
repz
xor
jbe
scas
ss
push
out
inc
jbe
aam
je
icebp
xchg
in
scas
mov
jmp
push
and
sub
bound
pop
mov
and
sar
sub
arpl
in
and
lock
push
cmp
cmp
cli
xchg
gs
pmuludq
xchg
mov
loop
or
jl
mov
or
push
add
xor
shr
adc
jmp
int3
int
xor
and
test
and
retf
out
scas
pusha
jbe
(bad)
aad
fldcw
ins
dec
outs
jecxz
out
inc
js
stos
cmc
repnz
lds
and
cmps
mov
add
mov
movs
jmp
sub
sar
ficom
jb
jae
cmc
sub
ins
test
cs
and
mov
push
fnstcw
pop
pop
loop
shl
out
push
mov
lea
mov
ins
sti
fwait
gs
scas
int3
mov
cmp
and
movs
in
sub
jmp
ret
sar
xchg
ror
gs
xchg
sub
pop
pop
shl
adc
jns
in
mov
std
mov
lods
dec
and
gs
cld
pop
call
in
push
push
dec
sbb
jnp
cs
pop
xor
xchg
les
ss
movs
aam
in
and
ds
retf
dec
and
and
out
sub
int3
in
cld
cld
rol
dec
jne
sbb
stc
inc
push
sub
lock
mov
(bad)
pop
mov
inc
hlt
into
lods
(bad)
fsubr
movs
test
mov
pop
or
push
cmc
out
sbb
mov
mov
adc
xor
add
ins
mov
adc
sub
jmp
inc
in
xor
cmp
xchg
shl
mov
into
out
push
repz
call
retf
aad
push
mov
mov
push
dec
ins
les
pop
sub
xlat
cmps
mov
cmp
mov
push
xchg
int
sub
movs
pushf
cmp
inc
jno
pop
dec
jecxz
shl
mov
jge
stos
loopne
or
mov
cmp
fisubr
jp
outs
rep
cld
cmp
(bad)
cli
ins
out
cmp
leave
sbb
pop
shl
mov
sub
dec
mov
out
(bad)
push
stos
sbb
sar
push
test
adc
je
pop
mov
sti
int
loop
inc
mov
cmp
scas
pop
mov
pop
aam
mov
rcr
ficom
adc
dec
sbb
fcom
stos
popa
mov
mov
adc
jmp
lahf
ins
imul
sub
popf
xor
inc
in
mov
push
fcmove
clc
pop
ins
adc
ss
pop
iret
mov
out
lahf
aas
inc
xchg
cwde
xchg
cdq
dec
jbe
add
xor
add
mov
and
jns
retf
stos
sbb
stos
movs
sbb
cwde
ins
shl
xchg
(bad)
cmp
cmp
test
sahf
jmp
mov
lods
repz
data16
(bad)
sub
push
push
pop
jne
xor
das
and
retf
imul
jmp
pop
adc
cs
adc
movs
mov
pushf
mov
pop
inc
not
dec
daa
data16
inc
aas
les
inc
sub
sbb
xchg
jo
imul
cmps
sbb
icebp
xor
push
fidivr
imul
mov
mov
inc
xchg
nop
dec
test
cdq
movs
inc
cmp
inc
add
pushf
fwait
arpl
jb
fsub
test
cmps
daa
sbb
out
jnp
out
shr
popa
repz
xor
cmps
xchg
xchg
push
xchg
lods
imul
push
cmp
dec
stos
pop
push
aad
mov
in
lods
mov
dec
mov
inc
sub
push
or
popa
xor
mov
or
fsubr
rol
ror
loope
or
fnsave
in
jmp
lahf
lods
in
sar
xchg
lock
jp
cmps
cdq
int
push
call
sbb
scas
push
inc
cmp
xlat
test
mov
mov
rdtsc
xchg
fcom
push
enter
push
pop
jns
test
mov
test
xchg
or
inc
sub
cli
add
xchg
pop
outs
imul
xlat
pmulhw
stos
loope
adc
ins
shr
mov
xlat
sub
jae
xchg
xchg
outs
popf
das
in
gs
mov
jne
jns
cmp
rcr
mov
cmps
sbb
int3
fidiv
cli
stos
dec
mov
xchg
es
push
movs
inc
cmp
cld
push
jbe
cmps
in
jecxz
cli
ja
lock
repnz
mov
and
sbb
imul
js
cmp
pop
mov
inc
ins
push
test
jecxz
mov
scas
and
add
dec
inc
jmp
ins
(bad)
mov
dec
push
push
arpl
xchg
fistp
and
jp
ret
test
push
cmp
sahf
sti
push
dec
dec
or
addr16
push
dec
(bad)
(bad)
loop
repz
(bad)
daa
jmp
push
pop
sbb
fs
ins
cmp
inc
xchg
xor
fld
cld
int
lds
scas
lock
fnstsw
mov
mov
outs
shl
imul
xor
movs
outs
mov
or
sahf
out
inc
fstp
push
xchg
aas
adc
ret
int
jecxz
mov
dec
or
(bad)
aad
xchg
push
shl
fdivr
test
f2xm1
scas
xlat
psraw
pop
mov
das
mov
ja
shl
jmp
sbb
jp
call
sub
add
or
or
mov
jecxz
mov
out
mov
popf
inc
aad
sub
fstp
mov
ds
xor
cmp
jge
aaa
mov
jmp
mov
pushf
push
jmp
mov
sti
iret
push
shl
xor
xchg
mov
fmul
jns
data16
mov
sub
and
cmp
push
inc
jns
lods
stos
fistp
xor
or
ja
pop
xchg
stos
dec
jmp
test
retf
pop
mov
out
leave
shr
pop
push
mov
stos
cli
aad
out
sbb
mov
clc
jb
cs
enter
sub
fst
jb
ficomp
xchg
stc
inc
push
test
add
or
inc
in
cmc
jmp
dec
mov
mov
cld
dec
(bad)
aam
xchg
jo
js
movs
lods
sbb
stos
push
fld1
jp
js
mov
neg
and
lahf
cdq
pop
push
icebp
int3
jo
jmp
sar
add
outs
mov
and
fs
or
jbe
sub
add
ja
sbb
fdivr
jns
add
scas
int3
in
pop
pop
call
movs
iret
mov
iret
and
out
pop
mov
and
mov
inc
(bad)
dec
xor
test
pop
clc
mov
pop
es
pop
and
push
in
or
lahf
nop
(bad)
cwde
loopne
sbb
retf
or
ds
call
jns
jge
sbb
push
mov
push
pop
and
outs
fist
inc
jno
(bad)
fdivr
lds
or
jmp
push
and
add
lock
pop
pop
inc
xchg
rcr
jecxz
inc
es
jb
sub
and
cmp
fnstcw
inc
ret
pop
cmp
repz
sbb
lahf
ja
xchg
imul
stos
js
stc
inc
dec
jle
sbb
scas
mov
je
push
js
stos
call
aaa
dec
xchg
mov
mov
jne
or
xor
dec
pushf
jp
out
push
fild
popf
jne
dec
inc
and
in
jno
dec
retf
ret
sbb
movs
loopne
imul
popf
xchg
bound
movs
jge
test
xchg
jo
into
(bad)
dec
add
push
xchg
dec
cmp
aaa
(bad)
mov
xchg
sar
data16
movs
ja
stos
push
cwde
jmp
cmp
xor
inc
xor
jp
xor
sub
in
es
or
add
inc
jno
push
pop
into
xor
push
or
xchg
xor
and
fstp
jns
sub
xor
(bad)
cmps
out
and
(bad)
pusha
mov
jmp
push
xchg
test
fld
dec
cmp
int
dec
mov
sar
out
pusha
rcr
movs
mov
sti
xor
lea
xor
fistp
add
xchg
adc
movs
xchg
mov
xor
mov
imul
(bad)
push
dec
ror
dec
fwait
xchg
mov
xchg
imul
mov
cli
test
pop
pop
(bad)
fxam
cmp
pop
dec
int
push
cmp
int
mov
mov
mov
nop
push
mov
push
mov
mov
dec
shr
call
popf
jb
ins
mov
test
(bad)
cwde
repnz
mov
xor
test
mov
scas
dec
xchg
idiv
fcmovbe
push
(bad)
retf
ficom
lods
scas
mov
pop
xchg
jge
jne
mov
mov
xor
test
fcmovnbe
(bad)
in
dec
inc
mov
imul
dec
scas
mulps
xor
aam
in
imul
cdq
xchg
sub
cwde
out
cmps
and
jg
xchg
jb
cli
xchg
lahf
jge
pop
data16
jle
xchg
loop
mov
stos
jecxz
mov
ficom
inc
cmp
scas
loop
fldcw
cmp
das
into
sbb
pop
dec
xchg
pop
mov
xor
loope
xor
xchg
imul
sahf
cwde
fist
xchg
or
ins
or
sub
mov
xchg
test
inc
xchg
stos
cmp
sub
fsubr
cs
sahf
imul
jne
push
mov
aas
or
xchg
push
dec
popf
jns
retf
mov
push
cmps
pushf
xchg
mov
outs
(bad)
fidivr
sub
fwait
push
push
push
fwait
xchg
imul
pop
stos
push
cmp
xor
loop
xor
pop
pop
loop
dec
mov
inc
cmp
push
mov
mov
xchg
bnd
sahf
mov
push
fldlg2
test
push
gs
arpl
test
movs
xchg
icebp
jle
(bad)
pop
imul
lods
mov
test
shl
lods
ja
mov
mov
data16
icebp
xor
pop
aam
inc
test
mov
cld
mov
dec
and
mov
inc
cli
inc
cmps
std
sahf
bound
dec
mov
test
pop
mov
pop
ret
cmp
in
cmp
sub
hlt
test
adc
neg
ficom
rcr
or
sub
dec
push
in
dec
push
sti
push
xchg
call
(bad)
and
sar
retf
out
in
jo
test
xchg
scas
cmps
sbb
jnp
data16
out
xchg
cs
scas
imul
out
or
arpl
pushf
test
cmps
pop
int3
test
addr16
icebp
sub
hlt
mov
in
xchg
addr16
fidivr
scas
adc
psubw
in
cmp
loope
cmc
mov
jbe
push
cmc
ss
pop
lods
fidiv
int3
pop
mov
das
int3
inc
aam
add
into
adc
movs
push
test
lock
pop
xor
rcr
int
imul
mov
pop
pop
call
cmp
pop
imul
dec
sti
outs
push
stos
push
jnp
cmc
mov
sbb
jmp
outs
push
mov
add
inc
(bad)
push
aad
cwd
pop
jns
leave
push
in
add
pusha
pop
jne
sub
xchg
mov
push
and
stos
outs
lods
push
call
push
pop
call
inc
mov
jmp
lods
mov
in
fdecstp
ins
cmp
mov
dec
push
push
leave
jle
mov
out
cmp
call
ins
es
movs
ins
sub
xor
push
popf
sbb
sbb
xchg
mov
scas
lea
xchg
cmp
sub
lods
inc
shr
xchg
aam
fstp
mov
push
mov
pop
es
ret
xchg
(bad)
xor
cmp
cmp
jbe
mov
loope
jp
(bad)
jnp
jl
mul
(bad)
jnp
fstp
call
cmp
sahf
icebp
ret
dec
mov
jl
pop
in
movs
dec
push
push
pushf
in
pop
sub
fcmove
sti
ins
cmp
(bad)
mov
dec
in
aam
mov
jg
jl
mul
cli
pop
imul
jl
push
xchg
pop
stos
xchg
inc
aaa
inc
cmp
fnstsw
xchg
jno
xchg
je
in
xchg
dec
cmp
ret
and
bound
xchg
xchg
push
lahf
jge
mov
adc
data16
dec
and
imul
movs
(bad)
fwait
hlt
ja
(bad)
div
in
in
fldcw
test
movs
cmp
pop
push
inc
push
aad
stos
iret
shl
outs
cmps
jmp
call
int
adc
adc
mov
pop
xor
mov
rcl
cmc
mov
pushf
push
xchg
mov
imul
enter
and
aad
push
jp
jl
jg
and
movs
in
mov
jno
repz
pop
out
push
stos
pop
sub
outs
cs
push
movs
es
stos
inc
lahf
outs
arpl
or
test
mov
scas
inc
and
adc
outs
retf
iret
imul
jge
sub
in
cmp
ins
adc
rcl
cmp
push
ja
shl
fnsave
mov
inc
aad
inc
lss
sahf
pop
push
pop
cmp
in
cmc
or
inc
popa
(bad)
and
into
pop
retf
mov
enter
je
mov
fwait
cmp
aam
cmps
xchg
sbb
dec
lods
(bad)
addr16
cmp
repnz
aad
push
cmps
sbb
imul
pop
fld
mov
scas
xlat
ins
jnp
jb
das
mov
pop
jae
cmps
cmps
cmp
jg
xchg
xchg
cwde
add
outs
inc
outs
xchg
and
push
mov
push
daa
push
cmp
pop
fst
test
icebp
jp
adc
movs
pop
push
int
mov
rcr
cld
sbb
repz
mov
ret
shl
sub
dec
ss
stos
adc
aaa
adc
cmp
in
mov
es
je
int3
mov
cmps
out
mov
ficom
xchg
stc
jl
dec
add
fdivr
pop
jmp
sub
aad
mov
outs
jnp
stc
out
mov
push
loope
cmp
imul
lods
(bad)
xchg
scas
mov
movs
cmc
fld
test
jp
mov
jno
dec
xchg
push
mov
mov
mov
mov
push
out
fist
push
inc
jecxz
inc
das
inc
adc
cmp
aaa
arpl
jae
jne
dec
xchg
movs
cmp
(bad)
sbb
mov
jae
icebp
sub
sar
popf
outs
pop
mov
jmp
mov
in
sub
push
xchg
jns
pop
jecxz
mov
adc
fdivr
dec
cmp
xchg
xlat
jnp
mov
repz
sti
push
add
pop
mov
dec
pop
inc
ins
fwait
pop
cmp
jl
(bad)
das
or
jge
aam
data16
retf
jge
mov
test
outs
push
sub
add
sub
and
leave
xchg
sub
sub
mov
dec
aam
mov
sub
mov
mov
gs
(bad)
ror
xor
pop
push
rcr
xchg
pop
push
retf
je
retf
dec
jmp
cmp
jnp
push
sub
dec
mov
gs
mov
inc
sub
mov
push
mov
sub
push
stos
mov
in
inc
aas
arpl
jns
dec
shl
cmp
js
push
lock
pushf
mul
dec
les
js
xchg
mov
mov
aam
push
setl
gs
ss
sub
test
pop
cmps
arpl
push
push
jecxz
mov
outs
cmp
push
and
imul
jbe
mov
imul
mov
icebp
aad
jo
test
adc
(bad)
xchg
pop
dec
pushw
xchg
xchg
call
dec
cs
add
sub
cmp
aam
ficom
cmp
jbe
(bad)
xor
mov
mov
pop
mov
mov
(bad)
outs
gs
ret
xchg
dec
or
mov
cmps
stos
mov
jne
sahf
and
jae
jb
jp
xchg
jle
loopne
imul
inc
cmp
jg
jle
int
popa
xlat
or
jg
fnstsw
mov
into
push
sub
movs
mov
stos
sti
int
test
mov
fld
xchg
pop
mov
dec
cdq
scas
push
pop
dec
and
jns
in
xchg
ss
mov
leave
es
mov
bound
test
fsubr
mov
pop
sbb
mov
push
cmps
movs
stos
cmovp
xchg
xchg
jle
icebp
imul
adc
pop
inc
xchg
jae
or
retf
jecxz
mov
adc
(bad)
adc
fisttp
jmp
cmp
jo
adc
push
push
mov
in
fist
fldenv
(bad)
jg
mov
push
mov
(bad)
out
adc
sub
pop
xor
jecxz
mov
xchg
jns
cwde
cmc
jge
daa
clc
add
out
mov
pop
adc
idiv
and
push
out
mov
add
mov
mov
xchg
mov
mov
pop
inc
lock
outs
push
pop
mov
dec
dec
retf
sub
mov
shr
inc
add
enter
ds
mov
repnz
imul
repz
iret
shl
xor
dec
fcom
(bad)
(bad)
mov
pop
aad
lods
mov
imul
out
sahf
or
inc
movsx
mov
jb
ret
clc
push
mov
pushf
call
mov
xor
pop
(bad)
push
fisubr
lds
inc
cmp
sub
adc
jmp
ror
lock
call
arpl
fisub
cdq
das
mov
xchg
or
fistp
sub
addr16
ds
(bad)
daa
pop
push
int3
jno
les
push
fnstcw
adc
fs
mov
cmps
xchg
in
lock
push
pop
mov
fwait
ja
test
fwait
and
mov
out
or
xchg
pop
pop
and
ja
sub
loop
loopne
les
ror
jne
aad
loope
xchg
clc
fcom
out
mov
add
pop
popa
call
pop
rol
aas
in
xchg
ds
jno
pop
int
mov
sub
into
xchg
icebp
add
movs
das
or
push
imul
xchg
and
xor
sub
push
jae
xchg
cmp
int3
push
sahf
rcr
or
and
aad
xor
(bad)
sub
xchg
addr16
pop
js
test
stos
(bad)
xor
jle
mov
std
mov
stos
xchg
pop
or
hlt
ret
pop
ins
(bad)
lods
cdq
retf
mov
inc
pushf
iret
push
in
mov
pop
aas
cmp
jge
movaps
mov
scas
fs
out
cld
xlat
xor
stos
nop
inc
xor
es
out
push
cmps
std
mov
das
bnd
outs
cdq
aad
ja
hlt
into
dec
clc
bound
lea
fild
popa
test
rol
arpl
mov
shl
xor
pop
xchg
popf
fwait
xchg
rcl
mov
jp
adc
cmc
cmp
jge
retf
out
(bad)
ret
test
aam
cs
call
fisttp
or
icebp
and
inc
xor
fwait
mov
lods
movs
mul
jecxz
pop
pop
xchg
jne
jae
js
stos
xor
in
(bad)
jbe
fbstp
xchg
ret
pop
push
jle
pop
dec
jl
jp
mov
fild
xchg
adc
es
add
mov
in
loopne
adc
and
test
popa
je
or
xchg
adc
sub
mov
fmul
cmc
push
(bad)
adc
icebp
in
mov
pop
dec
and
adc
into
sbb
mov
mov
sub
cmp
icebp
adc
mov
xchg
rcr
pop
sahf
enter
popa
sub
outs
sub
jo
call
pop
test
mov
pop
jg
sti
stc
jne
aas
retf
in
test
jb
jnp
hlt
pop
outs
ins
adc
mov
repz
icebp
jae
std
cmp
ss
leave
das
xor
stos
mov
dec
inc
push
xrelease
data16
ins
lds
leave
sahf
pusha
adc
xor
mov
mov
popf
fwait
jmp
std
mov
imul
dec
jmp
cli
pop
retf
xchg
xchg
ret
repnz
mov
dec
loop
push
push
push
ins
pop
adc
xor
out
test
cld
imul
loopne
ins
add
mov
shl
xchg
push
xor
mov
cmps
enter
repnz
(bad)
jmp
lods
or
mov
stc
fwait
(bad)
jg
outs
std
push
lds
sub
repnz
imul
int
shr
repz
repnz
fldenv
icebp
lds
fcmovb
in
xchg
pop
ins
jmp
pop
jl
aam
add
(bad)
mov
sahf
leave
sub
in
xor
push
pop
dec
sbb
pop
jno
jnp
inc
dec
or
or
and
daa
cmp
add
ins
out
inc
into
rcl
mov
or
movs
out
cmps
rcr
mov
sbb
xor
hlt
sub
ja
fstp
add
jnp
sbb
jecxz
ja
ficomp
xor
sub
adc
out
and
inc
inc
xchg
(bad)
repz
loope
pop
mov
lock
dec
call
rcl
mov
pop
(bad)
aas
shr
aam
(bad)
mov
sbb
jae
add
repnz
xchg
pop
xor
fisubr
mov
lods
jge
sti
pop
out
and
mov
rcl
and
movs
and
cmps
sbb
pop
dec
call
scas
sbb
ds
jb
sub
jnp
inc
pop
shr
xchg
dec
inc
jmp
outs
lods
dec
xchg
sub
jp
pusha
aam
fimul
xchg
cli
loope
les
lea
std
out
mov
mov
mov
mov
in
neg
mov
push
repz
(bad)
scas
cmps
(bad)
xor
sbb
bound
int3
pop
lds
hlt
pusha
int
push
mov
or
mov
push
lock
addr16
push
xchg
push
jne
aam
mov
outs
dec
movs
nop
ret
mov
sahf
cld
mov
adc
mov
jnp
(bad)
or
pop
fsubr
pusha
mov
loop
jp
mov
cld
cmp
xchg
test
in
lods
push
cdq
xor
or
(bad)
push
mov
mov
mov
pusha
jmp
cmc
retf
movs
(bad)
popa
xor
sub
pop
fidivr
je
push
mov
adc
push
ins
(bad)
lods
dec
push
cs
xchg
pop
adc
and
xchg
jecxz
adc
adc
sub
lahf
in
ror
aaa
xchg
ins
jmp
in
jl
pop
add
pop
xor
xchg
jbe
scas
jmp
jnp
pop
ds
icebp
dec
xor
lahf
sub
pop
dec
push
shr
sub
add
test
mov
fsubp
stc
in
cmp
pop
hlt
mov
aad
dec
fiadd
xor
aad
rcl
stc
pop
(bad)
jmp
aas
loope
imul
sub
lods
shl
fcmovnbe
shr
mov
adc
inc
mov
pop
cs
call
imul
retf
sti
and
mov
loop
loop
fnsave
xor
into
test
cs
jmp
cwde
jp
js
xor
sbb
sti
dec
(bad)
sbb
jnp
aaa
ret
(bad)
das
xchg
dec
add
cmps
pop
test
stos
and
outs
xcrypt-ecb
cmps
mov
jns
sbb
stos
xchg
fidiv
mov
(bad)
scas
stos
cmps
movs
out
xor
popf
movs
les
jae
cmp
retf
pop
(bad)
mov
out
(bad)
lock
cmp
stc
test
retf
pop
pop
in
test
out
xchg
xchg
mov
add
scas
jno
mov
out
inc
in
stos
(bad)
add
add
push
sar
outs
movs
pop
pop
mov
es
bound
enter
push
ror
xchg
and
cmp
pushf
movs
jne
cmp
aad
ret
cmp
inc
stc
sti
fs
std
pusha
mov
and
pop
xor
inc
in
mov
pop
mov
into
jb
movs
xor
ror
out
push
sbb
and
and
(bad)
(bad)
pop
fwait
xor
inc
pop
stc
mul
cdq
adc
dec
jmp
sti
frstor
and
add
dec
pop
xchg
mov
xor
movs
pop
mov
push
rcr
cmp
mov
in
fisubr
cli
inc
mov
lea
or
jb
inc
stc
mov
stc
push
nop
les
jb
push
fwait
in
jmp
or
push
cmp
(bad)
xor
shr
push
dec
add
push
xor
arpl
shl
dec
out
icebp
ficom
fs
and
test
jb
xor
wrmsr
pop
rcr
lea
xchg
or
test
shl
pop
inc
adc
add
jnp
adc
aaa
jp
mov
or
push
pusha
sar
out
jb
ins
popa
cmp
(bad)
je
daa
inc
retf
pushf
out
dec
loop
sbb
jp
ins
in
mov
scas
nop
sub
into
pusha
wrmsr
out
xchg
popa
sbb
xor
cmc
test
fcomp
out
mov
cmp
ins
and
psrad
jmp
adc
hlt
iret
js
and
or
ret
push
dec
int
(bad)
(bad)
clc
in
ret
xchg
push
cdq
es
stos
cld
retf
xor
je
cmp
or
(bad)
(bad)
inc
pop
pop
mov
pop
ds
pushf
cs
sbb
int
(bad)
das
in
outs
loope
push
loopne
jno
dec
lahf
inc
cmp
cmps
test
inc
imul
and
mov
mov
mov
cmp
sbb
dec
jae
xchg
sbb
or
pop
push
and
xchg
mov
jp
fdivr
lahf
dec
pop
div
inc
push
pop
aas
enter
xor
dec
lahf
hlt
(bad)
addr16
stos
mov
jle
push
stos
xchg
mov
cs
outs
cdq
push
jb
das
xor
int
add
mov
jmp
sub
adc
not
aas
fdiv
pop
out
pop
lods
rcl
aaa
sbb
aad
fistp
xchg
movs
adc
imul
jp
test
adc
jbe
out
pop
movs
sub
push
jmp
out
xor
add
mov
outs
inc
sbb
inc
mov
dec
xor
mov
jle
imul
jmp
outs
int
mov
adc
mov
je
push
jmp
push
call
mul
test
cmp
pop
sbb
cmc
sbb
inc
dec
mov
clc
mov
mov
call
push
mov
push
push
test
sbb
jle
arpl
add
sub
push
and
mov
sbb
cld
fdivr
add
stos
int3
xchg
adc
inc
fistp
pop
cmc
inc
cmps
lods
mov
fstp
rol
aas
int
push
xchg
inc
jmp
jae
dec
in
jge
push
xchg
cmps
das
inc
aaa
in
mov
sub
or
mov
lock
stc
jnp
(bad)
cmp
and
add
(bad)
jnp
fist
sub
jp
jnp
xor
sbb
cmp
shl
xchg
popa
pop
inc
push
adc
call
(bad)
in
and
jne
cld
(bad)
ins
add
push
es
(bad)
and
xchg
and
cmp
(bad)
shr
mov
sbb
jne
inc
sub
xchg
xchg
inc
out
imul
ins
mov
jno
(bad)
test
shl
icebp
fwait
cmc
pop
iret
fdivr
add
dec
aas
ficomp
mov
jecxz
inc
fidivr
stc
(bad)
lods
jmp
cli
outs
and
sbb
jbe
xor
scas
into
rcr
in
dec
dec
or
mov
jo
out
jno
sbb
and
xchg
mov
xchg
mov
imul
fsubr
xchg
ins
movs
jecxz
xlat
pop
ja
stos
cdq
mov
cmp
mov
out
jne
fcmovne
cmp
inc
dec
push
jg
or
iret
pop
gs
dec
cmp
jmp
add
jecxz
jae
xchg
jmp
pop
aad
add
(bad)
jmp
xchg
pop
sbb
mov
add
cmp
mov
(bad)
popa
aas
js
sahf
cmp
pop
sub
imul
push
pop
mov
xor
fdiv
lods
xchg
jecxz
rcl
pop
push
dec
fdivp
mov
out
sub
adc
jbe
cmps
outs
mov
retf
test
in
pop
jns
pusha
mov
jae
and
and
repz
outs
or
daa
push
pop
imul
div
daa
out
xchg
out
scas
inc
(bad)
addr16
rol
pop
call
push
pop
jmp
arpl
aaa
push
cmp
mov
mov
sub
sbb
fwait
sub
gs
ins
sub
dec
or
and
jmp
or
xchg
test
inc
(bad)
repnz
push
cwde
mul
pop
sbb
xor
cmp
cld
pop
daa
push
icebp
outs
imul
in
dec
inc
push
lds
aaa
in
aad
sub
xchg
xor
inc
(bad)
cmp
movs
xchg
int3
jo
or
jge
(bad)
adc
push
sahf
xchg
scas
call
popf
mov
jns
xorps
std
in
jb
jmp
stc
(bad)
add
lods
push
movs
out
inc
cld
and
pop
inc
dec
in
sub
push
xchg
or
jmp
xor
push
add
sbb
push
xchg
js
cmp
add
mov
sbb
sub
test
loopne
lock
and
fisubr
xchg
aaa
xor
fs
jecxz
mov
mov
out
iret
test
mov
gs
add
mov
push
mov
lods
cmp
adc
or
jnp
sbb
mov
inc
(bad)
jbe
clc
cwde
lods
les
or
into
ror
pusha
add
daa
bound
jge
mov
mov
sub
sub
inc
mov
mov
dec
stos
cmp
repnz
mov
retf
push
or
xchg
push
pop
mov
jle
add
fcomp
xor
out
push
out
fdivr
sbb
stos
xchg
sbb
cmps
push
mov
cdq
xchg
add
dec
lods
test
repnz
mov
xchg
scas
push
pushf
jo
ins
pop
xor
pushf
arpl
hlt
fyl2xp1
pop
adc
sahf
popa
cmp
fs
outs
cmp
push
idiv
cmp
sbb
mov
fisttp
(bad)
aas
jno
les
dec
or
int3
dec
dec
int3
jl
sbb
mov
popf
xchg
fild
xchg
mov
cli
aaa
cs
lahf
data16
xchg
mov
rol
xchg
fcmovnu
pop
mov
pop
mov
call
cmps
cmps
cli
and
call
jle
repnz
bound
arpl
in
mov
xor
mov
cdq
xchg
sbb
push
jl
or
xchg
xchg
push
lds
sub
jno
pushf
lock
sub
mov
stos
lds
pushf
mov
and
popf
sub
(bad)
int
repz
or
xlat
sbb
sbb
or
jl
dec
inc
jne
(bad)
iret
xor
dec
movs
sub
cmp
pop
scas
sub
cmc
mov
mov
mov
loope
int3
mov
inc
add
dec
cli
sub
push
ins
push
jmp
das
inc
or
pop
xchg
out
lock
xor
pop
mov
mov
xchg
mov
push
push
mov
jge
adc
rcr
mov
xchg
js
shl
int
dec
dec
lahf
clc
jo
popa
std
sub
ds
int3
mov
inc
or
icebp
stos
cmp
scas
fs
mov
jl
fstp
pop
jge
movs
mov
cmp
hlt
ins
push
scas
mov
xor
loop
or
retf
jne
and
xchg
mov
jnp
hlt
cmp
cmp
repnz
cmp
shr
inc
cmps
aad
js
mov
call
aad
idiv
js
mov
mov
movs
xchg
pushf
gs
popf
aam
jmp
retf
mov
push
rol
push
xchg
mov
hlt
(bad)
(bad)
or
or
inc
cdq
fldcw
retf
push
xchg
push
push
sysenter
push
lock
jb
dec
push
push
hlt
pop
or
fisubr
in
in
cmp
das
sub
clc
jmp
cmps
sbb
lds
dec
xor
sbb
jmp
dec
mov
sub
sub
dec
or
push
out
xchg
add
pushf
jecxz
cwde
dec
scas
popf
push
mov
arpl
fmul
jbe
pop
inc
push
ret
loope
into
das
stos
push
idiv
scas
test
mov
cmp
out
popf
pop
mov
mov
lods
in
mov
jecxz
sub
ss
dec
fist
dec
mul
(bad)
jno
sbb
pop
push
scas
loopne
dec
out
xchg
jnp
or
loope
cmp
dec
adc
mov
lahf
enter
int
inc
or
pop
mov
mov
sbb
das
inc
pop
sub
sti
inc
sar
xor
pop
cmc
mov
mov
ret
not
xchg
sub
fcomip
mov
mov
xchg
js
cdq
hlt
test
xchg
es
test
mov
inc
popf
retf
and
sahf
movs
loopne
cmps
dec
pusha
shl
movs
call
sti
loop
mov
cwde
push
fsub
iret
call
fnstenv
dec
dec
push
inc
adc
xchg
sub
lahf
popa
repnz
or
call
fld
fdivr
fist
fidivr
ss
jne
es
adc
jae
fstp
fidiv
jns
(bad)
mov
je
sbb
cmps
mov
rcl
push
jmp
inc
mov
fdivr
lods
push
push
pop
dec
or
jg
pop
aas
jmp
xor
je
cmp
dec
ret
sub
stos
imul
ds
pop
push
(bad)
cmc
inc
ficomp
out
retf
jge
repnz
rcr
dec
shl
inc
fld
in
dec
xchg
jle
inc
cmp
arpl
clc
push
dec
push
sub
sbb
das
mov
fcmovnbe
inc
xchg
mov
mov
std
sbb
jne
aaa
les
(bad)
sub
mov
push
add
sbb
pop
mov
int
xchg
jp
push
ins
adc
push
sub
in
lahf
add
out
jecxz
mov
dec
mov
dec
cmp
adc
out
mov
mov
push
dec
xchg
cmp
inc
dec
jmp
pusha
xor
mov
int
dec
xor
cmps
lods
fcomp
scas
dec
push
dec
xor
aad
cmps
push
or
sbb
jmp
or
push
mov
ret
imul
fistp
in
mov
fcmovbe
inc
out
push
adc
or
and
mov
cmp
imul
cld
xlat
cld
cmp
adc
popf
fld
in
inc
stos
jl
pop
ret
call
xor
mov
(bad)
cmp
ja
jbe
popf
clc
mov
aaa
ins
movs
inc
int
retf
ins
mov
mov
push
int
nop
mov
or
mov
stc
imul
neg
or
mov
div
pop
cmp
lock
stos
data16
dec
out
int3
lock
push
fisub
clc
jns
push
(bad)
test
xchg
out
stos
jmp
popf
cli
xchg
rol
daa
xlat
fwait
push
jbe
and
mov
fstp
push
(bad)
retf
dec
sbb
ins
pusha
movs
dec
aas
add
push
adc
in
sar
adc
push
repz
xlat
movs
mov
push
cmc
rol
jle
fwait
test
xor
jmp
retf
retf
rcl
fldl2t
mov
ds
adc
mov
mov
aam
arpl
cli
cmp
scas
jns
sub
cmp
sbb
jmp
cs
fst
enter
je
loope
stos
jbe
and
sbb
mov
jmp
dec
hlt
mov
popf
ja
stc
cmp
dec
not
sub
jl
rcr
movs
lahf
xor
sub
push
mov
push
mov
(bad)
fs
mov
fist
out
rcr
push
jmp
or
push
(bad)
adc
shr
mov
fild
push
icebp
push
shr
adc
stos
lock
fild
pop
repz
pop
nop
test
push
(bad)
dec
in
cs
sub
out
xchg
imul
popa
or
aam
mov
cli
sbb
(bad)
mov
sti
aam
test
dec
cmp
in
popf
scas
retf
repnz
jl
push
mov
aad
in
push
ficom
icebp
test
dec
adc
push
ret
int
inc
loopne
add
scas
ss
or
into
inc
test
aas
sub
lods
dec
iret
jb
push
wrmsr
int
aad
sub
jmp
test
or
shr
int3
xor
stos
(bad)
div
imul
fsubr
push
jbe
inc
pop
cmp
out
ins
rcl
push
jge
lds
sahf
imul
cmp
push
test
shl
cmp
mov
sbb
rcr
and
push
shr
mov
dec
in
cmps
out
in
pop
addr16
push
xchg
pop
test
rcl
leave
mov
es
lea
fs
sbb
mov
jl
gs
cmp
xchg
pushf
adc
sub
nop
mov
sub
inc
adc
and
loop
xchg
lock
push
lods
sbb
xchg
pop
sbb
(bad)
int
(bad)
mov
cwde
gs
mov
fldenv
fistp
fisubr
push
aad
outs
into
sar
push
pushf
xchg
pop
retf
iret
mov
sbb
retf
test
push
mov
loop
out
jne
scas
xchg
sub
pop
jns
xchg
jbe
idiv
fsubr
sbb
pop
mov
bound
aas
push
mov
pop
or
cmp
sbb
jge
jbe
jno
jnp
scas
clc
fwait
or
xor
adc
das
xor
mov
cmp
inc
nop
(bad)
add
cli
inc
imul
adc
pop
jl
ds
pushf
sbb
jnp
test
ds
jg
ja
and
imul
jecxz
out
fisttp
inc
test
jb
in
aad
mov
dec
xor
add
and
pop
fnstcw
adc
xchg
(bad)
push
cmp
inc
mov
imul
pop
cmc
push
jg
or
stos
clc
jne
hlt
(bad)
jg
pushf
inc
sbb
retf
idiv
sti
push
jle
pop
(bad)
mov
cmps
sbb
imul
sbb
cmps
push
popf
jo
dec
fild
dec
fcomp
xor
inc
dec
mov
jns
jge
dec
push
fisttp
inc
retf
std
fld
mov
jbe
mov
xchg
cwde
push
rcl
(bad)
sti
(bad)
addr16
ss
fstp
mov
dec
fcmovne
outs
inc
loopne
repz
outs
push
out
das
sub
retf
jmp
dec
sti
lods
dec
push
fmul
lods
lods
mov
or
push
xor
pop
inc
in
ss
je
xchg
mov
imul
stos
xchg
mov
out
xchg
vpbroadcastb
pop
imul
fisttp
pop
adc
mov
ss
mov
sahf
or
mov
test
das
dec
mov
cli
dec
cmp
lods
test
out
xchg
sub
rcr
ds
dec
int
mov
mov
xor
imul
jnp
ds
sti
sub
xor
or
(bad)
out
pop
adc
sar
idiv
inc
in
cmc
ds
cmps
inc
aaa
pop
sub
sti
and
add
jne
lea
mov
sbb
pop
mov
sbb
lea
lock
push
in
pop
fldcw
dec
dec
inc
jmp
repnz
mov
ss
into
sub
das
ja
mov
test
dec
scas
ins
lods
mov
mov
cmc
push
enter
aaa
shr
mov
movs
pop
(bad)
fwait
cdq
push
sub
fistp
ins
mov
fsubr
xchg
enter
in
cmp
mov
mov
mov
out
xchg
mov
cmps
cld
gs
jg
lods
jle
test
out
shl
fidivr
stos
push
xchg
xchg
xchg
shl
jecxz
test
cld
mov
pop
push
imul
pop
pop
sti
les
data16
or
ret
stc
outs
mov
inc
add
pop
dec
call
cs
aam
repz
sub
add
inc
jmp
pop
mov
aam
stos
mov
xchg
xchg
into
dec
stc
push
test
in
fwait
and
inc
fucom
fild
jbe
xchg
and
mov
sbb
mov
ret
dec
mov
and
mov
push
sub
retf
scas
mov
repz
jg
lds
or
mov
push
(bad)
(bad)
imul
in
xchg
cmp
lock
aas
mov
fadd
sbb
imul
jmp
lods
jns
mov
dec
pop
aaa
ficom
ja
loopne
fwait
mov
mov
retf
sub
rcr
stos
pop
push
pop
mov
fistp
jl
mov
xchg
in
mov
or
mov
push
lods
test
mov
mov
das
lea
(bad)
adc
or
imul
cmp
mov
dec
xchg
mov
push
dec
inc
mov
test
push
dec
push
retf
push
dec
and
adc
inc
or
mov
outs
stc
fldcw
xor
cmp
sbb
mov
mov
aam
shl
lods
leave
aaa
lds
dec
sub
ins
sti
jle
les
push
xchg
cmps
shr
mov
mov
mov
add
stos
jb
sti
retf
gs
fst
mov
sub
imul
cmps
addr16
aad
xchg
repnz
retf
lea
sub
and
cmp
mov
inc
test
mov
(bad)
jmp
(bad)
(bad)
mov
and
(bad)
push
dec
int
std
jle
pop
mov
lahf
pop
sub
rcr
(bad)
fadd
add
fisttp
pop
lock
inc
or
inc
in
jmp
mov
shr
dec
sbb
push
sahf
mov
push
pop
jmp
sar
imul
xor
pop
jb
dec
jge
mul
es
sahf
test
add
stos
pusha
mov
test
dec
cs
into
cmp
repz
sub
push
pop
(bad)
addr16
aam
loopne
retf
fistp
imul
test
(bad)
jns
cmp
jb
dec
jne
and
movs
retf
jge
scas
shl
xor
sbb
jl
and
mov
pop
movs
ss
jp
inc
mov
daa
cmp
push
test
add
xchg
das
mov
(bad)
int3
mov
das
dec
sub
xchg
aas
dec
jmp
mov
neg
xor
(bad)
(bad)
jbe
sub
jo
sbb
xlat
or
js
fnstenv
push
pop
mov
call
in
jmp
push
imul
ins
cmp
pop
dec
jge
sbb
sub
dec
shl
out
sub
clc
pushf
inc
jae
enter
push
stos
out
sub
push
mov
fwait
dec
jmp
adc
fxch
pop
push
inc
not
or
retf
into
(bad)
xchg
jno
pop
jmp
loopne
jne
push
cmc
jmp
movs
mov
scas
shr
sbb
sub
mov
out
ins
aad
repnz
scas
push
push
hlt
repz
mov
pop
arpl
xchg
aam
cmp
sar
out
gs
mov
int3
push
push
pop
cs
sub
jmp
xlat
jnp
mov
xor
test
pop
int
ins
in
int
(bad)
inc
cdq
dec
xchg
xchg
and
mov
int
fcmovnbe
cmp
sar
cmc
call
imul
lahf
xor
inc
inc
xchg
in
repnz
sbb
mov
stos
sbb
icebp
das
loope
lea
scas
mov
or
aam
dec
pusha
daa
or
jmp
push
push
pushw
ss
push
repnz
test
lock
fnstsw
mov
dec
call
test
in
push
addr16
fimul
inc
dec
sub
or
ja
xor
das
arpl
sub
out
xchg
sar
xor
or
lods
push
jne
push
cmps
int3
in
push
or
sub
sahf
dec
mov
dec
das
(bad)
(bad)
mov
adc
pushf
daa
into
cdq
jg
mov
hlt
ja
xchg
pop
bound
loopne
clc
test
clc
jns
stos
inc
lea
push
cmps
mov
mov
sbb
dec
xor
push
and
fwait
lahf
mov
cmps
outs
stos
or
daa
ja
popa
mov
mov
cmp
inc
cdq
(bad)
loopne
ja
call
rcr
dec
test
jge
std
(bad)
arpl
inc
mov
sar
movs
int3
call
xchg
push
clc
jp
inc
push
inc
(bad)
cmp
popf
cmp
retf
pop
mov
mov
sub
mov
and
and
adc
dec
movs
mov
jnp
dec
mov
aaa
dec
ret
out
cmp
pop
imul
movs
scas
adc
mov
xor
dec
pop
aam
popf
and
fist
sbb
stos
xor
mov
aam
mov
and
outs
test
jg
sub
sub
retf
sub
aam
gs
loop
daa
pop
pop
cmp
mov
jo
lods
jb
aam
jecxz
push
call
sar
xchg
es
mov
repz
push
cmps
push
mov
mov
xchg
movs
sbb
mov
xlat
mov
mov
mov
cmps
sbb
mov
mov
xor
mov
ret
mov
push
mov
aaa
inc
dec
xor
dec
rcl
loop
mov
sbb
xchg
leave
repz
sti
mov
jno
jecxz
cwde
repnz
rol
loope
addr16
push
pop
cli
inc
scas
shl
dec
shl
jmp
int
(bad)
scas
nop
loop
push
test
jne
push
xchg
in
fucomi
scas
(bad)
cld
push
xchg
mov
(bad)
fidivr
inc
cdq
mov
dec
dec
aaa
into
repz
aaa
pop
xchg
dec
dec
push
pushf
xchg
adc
add
loopne
rcl
push
push
cmps
scas
daa
cli
imul
pop
rcr
stos
adc
mov
mov
jl
mov
imul
movs
sub
push
imul
enter
ror
ds
xchg
xor
pop
xchg
out
les
pop
add
dec
sub
pop
dec
push
or
adc
leave
mov
xchg
outs
push
xchg
mov
rcl
xchg
pop
and
mov
sbb
loop
(bad)
xor
test
hlt
outs
mov
fwait
xchg
shr
je
adc
push
loop
xlat
mov
stos
cdq
rcl
lods
shl
push
(bad)
cdq
pushf
mov
sti
movs
into
jbe
aam
movs
retf
mov
sub
pop
in
mov
test
xchg
adc
xlat
enter
fs
sbb
out
call
loope
mov
xchg
ins
iret
pop
cmps
(bad)
jnp
jae
in
(bad)
pop
or
mov
retf
out
lods
sbb
sub
leave
jne
mov
(bad)
rol
or
mov
xchg
xchg
div
test
sub
push
push
fwait
cmp
inc
sahf
outs
ins
xchg
jae
lods
xchg
dec
jns
mov
push
and
fucomp
mov
jecxz
(bad)
jmp
mov
xchg
dec
div
(bad)
sub
xor
test
out
test
pop
not
jne
pop
mov
xlat
ins
mov
sub
cmp
movs
in
push
and
test
mov
sub
mov
jnp
push
aaa
fisubr
dec
fidiv
push
in
inc
pop
fldcw
jmp
in
push
fimul
jmp
ss
pop
cmc
js
sbb
jle
push
into
mov
ss
aaa
lahf
jne
xchg
push
movs
mov
mov
cwde
aam
aaa
xor
ins
out
mov
xor
das
retf
dec
push
pop
mov
push
mov
cdq
jo
jp
(bad)
(bad)
mov
push
cs
push
out
inc
nop
sti
push
popf
pop
push
or
ret
sbb
or
mov
pop
ss
jne
je
jns
icebp
scas
pop
mov
daa
outs
mov
jle
sub
gs
mov
into
scas
and
test
out
sbb
cli
inc
aaa
out
mov
stos
fcomp
retf
rcr
cmps
movs
and
xor
aam
sub
shl
movs
xchg
sahf
jo
sub
adc
add
call
ins
bound
xor
sub
aaa
jmp
std
sub
outs
cli
mov
cmp
jne
add
(bad)
pop
mov
retf
stc
movs
mov
mov
call
sub
out
dec
push
mov
in
inc
stos
ss
scas
ds
xor
mov
push
xchg
add
ror
ret
rol
popa
mov
fstp
daa
dec
pop
ss
jecxz
push
repnz
jle
sar
add
inc
icebp
nop
lahf
pop
and
ret
scas
mov
fsub
cld
test
mov
mov
push
popa
fidivr
fidiv
std
cmps
cmp
xchg
or
sbb
out
iret
(bad)
xchg
pop
test
(bad)
scas
loope
mov
out
sub
out
pop
mov
(bad)
into
jno
test
or
(bad)
fisubr
in
inc
shl
dec
repnz
or
in
popa
je
mov
xchg
inc
xchg
mov
in
jb
mov
mov
leave
pop
ins
es
shl
sub
fidiv
sub
cld
movs
ja
lahf
loop
jnp
stos
pop
pop
jle
xchg
jbe
lahf
inc
sahf
cld
xor
sbb
aad
push
loopne
xor
pop
pop
(bad)
fmul
test
inc
ror
mov
or
and
cld
shr
mov
push
sbb
mov
imul
(bad)
mov
cli
xor
fyl2xp1
imul
jae
in
push
pop
mov
cmp
aam
lock
div
addr16
jp
mov
stos
sbb
or
bound
cmps
(bad)
pop
iret
daa
fistp
jbe
adc
aaa
sbb
mov
clc
jle
sti
lahf
inc
out
pop
inc
mov
retf
cdq
dec
pop
sub
mov
sbb
fstp
std
pop
cmc
mov
xor
call
fstp
fist
fldenv
xchg
mov
stos
push
popf
out
jne
xchg
(bad)
div
cmp
lods
mov
jmp
leave
mov
sub
dec
mov
fisttp
add
jne
jecxz
out
fisub
mov
daa
shl
fxtract
sub
dec
fnstcw
jno
in
xchg
pop
adc
cmp
push
loope
fnstsw
xchg
call
les
int3
fwait
jno
push
add
mov
daa
and
retf
lock
call
push
in
ret
dec
sub
inc
mov
pushw
mov
add
cs
test
fld
pop
repnz
mov
lock
ret
lods
ds
jns
cmc
fcom
dec
aam
xor
clc
neg
sahf
ins
pop
push
adc
and
sub
bound
add
sbb
sbb
call
cmc
lahf
dec
and
jb
push
int3
movs
sub
aaa
cli
scas
mov
test
xchg
leave
inc
cmp
and
test
adc
cmp
xor
xchg
ds
mov
icebp
or
lea
pushf
jge
dec
dec
xor
sti
sbb
inc
int3
xchg
jnp
loope
daa
ds
xchg
arpl
jecxz
pop
sub
mov
xchg
sahf
gs
jb
cwde
push
mov
icebp
jle
pop
(bad)
repnz
mov
push
mov
sbb
iret
mov
cmps
and
fs
xor
inc
(bad)
xor
cmp
repnz
cmps
push
add
into
push
xchg
xor
fidiv
fldcw
pop
mov
mov
push
push
xchg
or
mov
sub
pop
je
jecxz
xor
lods
pushf
pop
or
fwait
jmp
aad
stc
ror
cmps
inc
jo
fwait
loop
movs
xchg
or
in
call
je
aaa
push
cmps
cmp
(bad)
pop
frstor
xchg
leave
sahf
mov
and
cmp
imul
ja
pop
(bad)
iret
sbb
sahf
sbb
cmps
jmp
push
xchg
push
pop
fwait
xchg
xchg
imul
push
pushf
xor
sbb
data16
pop
push
fs
and
mov
mov
test
mov
sub
shl
xchg
mov
jno
cmps
xchg
pop
aad
xchg
dec
test
lods
xchg
in
push
ret
les
xor
cld
dec
pop
jl
mov
push
test
push
lds
call
fs
push
adc
mov
ret
and
xor
fcom
and
xchg
inc
inc
jl
dec
and
les
stos
cmp
sub
push
in
(bad)
pop
lea
mov
es
arpl
xlat
bound
inc
jmp
mov
jg
cmp
dec
adc
xor
mov
mov
les
sub
mov
test
xchg
mov
lahf
retf
xor
fwait
xchg
mov
scas
jae
adc
mov
imul
mov
pop
stos
dec
(bad)
pop
pop
push
repz
out
and
sub
ret
adc
fs
ds
scas
cs
push
icebp
movs
sbb
mov
fcmovbe
jmp
(bad)
push
fucom
std
cmps
xchg
jp
sti
xchg
in
jmp
div
in
jl
jmp
pop
mov
aam
dec
int3
(bad)
xchg
mov
int
mov
mov
movs
pop
pop
sub
movs
adc
mov
jnp
sbb
je
push
(bad)
movs
es
mov
inc
mov
xchg
push
stos
inc
or
mov
jnp
ds
jmp
cs
loope
shl
imul
out
movs
xor
cmc
sbb
xor
pushf
retf
xor
mov
out
xchg
cmp
loop
cmp
std
push
dec
cmps
out
mov
movs
mov
iret
data16
test
cmp
jmp
or
icebp
cs
jno
test
dec
shl
clc
pop
shr
pop
(bad)
retf
outs
pop
jl
sahf
nop
push
cs
inc
popa
cmp
adc
cmp
pop
sub
(bad)
sbb
xor
repnz
imul
imul
push
neg
pop
dec
(bad)
out
cli
sbb
mov
dec
ins
(bad)
jbe
shr
retf
cmps
jecxz
sti
lods
mov
dec
xor
dec
mov
and
pop
cwde
fdivr
jne
push
stos
sets
cmp
xor
jb
test
and
cmp
out
mov
mov
mov
xor
or
cdq
cdq
dec
mov
out
adc
and
mov
sti
lods
stos
jge
mov
lea
into
fs
cmp
call
fmulp
aaa
inc
adc
mov
dec
sub
out
aaa
dec
repnz
out
dec
in
das
cmp
inc
js
(bad)
movs
mov
jl
sub
popa
mov
xor
xchg
rcl
ret
mov
jns
scas
in
push
adc
cli
bound
dec
mov
je
sbb
cwde
xor
sub
in
shl
leave
or
shr
ds
ins
inc
xchg
or
pushf
jle
inc
sub
cmp
fsub
lods
xor
sbb
lock
cmc
mov
gs
retf
inc
mov
int3
pop
xchg
xor
lods
jecxz
inc
lods
retf
gs
hlt
mov
xchg
loope
movs
sub
cmp
call
lock
mov
pop
inc
nop
xchg
lea
leave
pop
mov
sub
sub
xor
addr16
xchg
jp
popf
gs
clc
mov
jle
xchg
cld
aam
sbb
and
test
pop
das
shr
inc
repnz
pop
js
sti
sub
or
mov
mov
fsubr
or
test
cli
scas
repnz
or
(bad)
dec
iret
rcr
sub
jbe
iret
fdivr
cmps
aad
or
mov
dec
aad
xor
pop
cmps
cmp
test
ret
and
imul
ret
rol
inc
sahf
es
loope
inc
jmp
xchg
neg
outs
mov
clc
or
and
dec
pop
mov
into
cmp
scas
aad
out
sbb
lea
cmp
stc
push
je
and
add
movs
sti
push
jo
inc
mov
sahf
push
sahf
jne
bound
sbb
dec
xor
sbb
pop
push
pushf
popf
xchg
(bad)
ss
jnp
add
inc
dec
mov
xor
lods
loope
sahf
cmovne
fimul
inc
cmps
add
data16
inc
sti
dec
cwde
fidivr
push
mov
inc
dec
mov
xor
ror
cld
iret
cmp
inc
cs
adc
jmp
lods
push
(bad)
aad
pop
stos
dec
rcr
mov
push
mov
pop
and
jns
jo
pop
shl
stos
dec
mov
add
jge
fcmovu
lahf
daa
enter
xchg
dec
icebp
jno
out
xchg
(bad)
retf
mov
call
xchg
lods
shl
push
test
xchg
pop
dec
lds
dec
push
dec
in
jl
je
dec
outs
setne
mov
dec
xor
xchg
test
ret
cmps
inc
test
adc
pop
or
mov
and
cs
div
and
fstp
nop
or
out
or
jno
jb
dec
arpl
rcl
pop
(bad)
aaa
or
xor
nop
or
and
and
les
mov
in
adc
xchg
sbb
or
es
pop
xor
xchg
imul
sub
xchg
shl
out
shld
and
cmp
push
fnsave
or
pusha
xchg
int
inc
push
mov
ins
push
mov
jl
aam
xchg
mov
jnp
data16
pushf
mov
mov
jle
add
adc
call
push
adc
fimul
popf
(bad)
dec
inc
sub
xchg
add
adc
imul
inc
nop
out
sbb
inc
ja
and
movs
push
loop
js
mov
mov
xor
into
cmp
call
dec
fisttp
test
adc
mov
nop
inc
sub
std
and
mov
fwait
inc
cmps
imul
ret
mov
add
add
int3
nop
popf
iret
push
adc
aaa
pop
sbb
mov
mov
jp
and
inc
loop
retf
inc
mov
lods
loopne
mov
sbb
and
push
mov
and
xor
cmps
lods
ds
iret
xor
popa
cmp
(bad)
aas
lods
sbb
adc
ins
jecxz
cld
movs
cmp
jb
ins
dec
mov
repz
mov
call
fst
inc
or
sub
out
cmp
push
lea
jp
dec
outs
lock
mov
push
mov
mov
sti
cmc
sub
mov
and
mov
add
mov
sbb
or
repnz
xchg
sbb
cli
aad
repnz
fnsave
mov
jnp
pop
mov
xor
pop
cwde
cwde
jo
mov
push
dec
xchg
dec
rol
pushf
movs
mov
push
mov
ror
leave
jne
jmp
ficom
inc
scas
xor
mov
out
nop
out
gs
add
cvtps2pi
mov
pop
loopne
es
popa
test
mov
mov
ins
push
jnp
in
mov
lock
dec
and
mov
sub
stos
cli
ins
inc
test
aaa
dec
ins
jae
xchg
sbb
cmp
retf
dec
pop
leave
push
ror
mov
into
add
inc
xchg
(bad)
jne
adc
dec
sti
pop
fstp
push
pop
xchg
in
jo
loope
push
xchg
lods
mov
xor
xchg
arpl
add
inc
xor
outs
pop
push
inc
loopne
std
sub
cld
dec
fcomp
mov
cmps
mov
xchg
xchg
test
dec
push
jns
add
sub
mov
(bad)
stc
jge
jle
imul
out
cld
xchg
loop
sbb
loop
push
xchg
push
xchg
imul
stos
inc
js
lock
mov
ror
stos
fidivr
mov
xor
inc
or
and
shr
mov
sahf
out
das
rol
scas
mov
daa
add
repz
popf
pop
fisttp
sub
hlt
outs
jns
retf
sbb
push
cmp
daa
push
lods
xchg
mov
push
dec
add
inc
std
and
call
add
xchg
mov
xor
fiadd
ss
adc
push
out
xchg
mov
js
cdq
lds
daa
outs
dec
and
xchg
cmp
lea
and
jle
mov
cmp
sbb
sbb
push
aaa
aam
es
jecxz
out
call
xor
lds
push
jno
fsub
xor
add
sti
mov
test
xor
push
retf
orps
inc
push
cmps
mov
sub
cs
iret
cwde
arpl
fdivr
imul
pop
aas
imul
mov
call
dec
mov
idiv
mov
cwde
out
test
pcmpeqw
jo
mov
add
xor
xchg
or
mov
retf
sar
in
sub
(bad)
inc
das
pop
aam
fdivr
sar
and
xchg
je
and
in
stos
pop
dec
les
mov
(bad)
adc
retf
nop
pop
sbb
lea
fwait
jnp
inc
in
jno
gs
std
cmp
pop
call
fidivr
leave
clc
pushf
mov
(bad)
jp
movs
xchg
pop
xlat
dec
shr
mov
xchg
xchg
cdq
xchg
push
fadd
xchg
xchg
sbb
test
data16
outs
aaa
(bad)
pop
xchg
push
les
push
popa
sub
imul
cmps
int
mov
loope
ret
push
fsubrp
xor
xor
sub
pop
or
adc
mov
mov
mov
jmp
pop
jno
test
inc
hlt
les
rcl
(bad)
popa
icebp
jmp
test
ins
cs
mov
in
sahf
pop
cmc
sbb
xchg
push
jno
fldenv
mov
(bad)
mov
jnp
push
je
(bad)
movs
rcl
sub
mov
mov
loop
dec
cmp
inc
add
inc
inc
std
cwde
(bad)
loop
push
test
dec
pop
(bad)
cwde
jnp
xchg
popa
xor
cmp
es
movs
mov
outs
outs
push
lea
push
lock
inc
xchg
jns
cmps
call
xchg
push
mov
cmp
lods
movs
mov
jno
mov
addr16
xor
leave
fwait
aad
test
cmp
push
sub
pop
inc
push
leave
and
push
add
cmp
test
bound
or
and
sahf
shr
es
push
mov
push
fisttp
(bad)
push
cmp
push
sbb
xchg
mov
fstp
add
and
cmp
fcom
inc
dec
xchg
das
in
jmp
xchg
mov
inc
jmp
push
and
out
daa
xor
lods
test
push
sub
add
loopne
push
imul
or
repz
dec
sbb
push
mov
in
dec
adc
aas
dec
xor
cmp
or
jle
out
(bad)
jecxz
jbe
push
repnz
retf
(bad)
cmp
in
lahf
mov
hlt
out
iret
pop
xchg
lds
retf
es
pop
lods
push
adc
xchg
xchg
sub
jle
fwait
xchg
ret
movs
mov
mov
lahf
sahf
jae
scas
bound
sbb
adc
push
lods
jnp
hlt
repz
imul
mov
dec
pop
test
dec
into
push
mov
lods
sub
fistp
sahf
mov
gs
dec
mov
mov
inc
ja
or
mov
mov
xchg
retf
shl
fisubr
dec
jl
aas
inc
mov
in
push
jp
leave
sub
mov
(bad)
out
test
pop
xlat
arpl
and
push
cmps
add
dec
test
test
xchg
pushfw
xchg
xchg
add
mov
jns
mov
loop
push
sahf
pop
mov
cmp
loopne
aad
rol
pop
dec
mov
mov
mov
xchg
shl
jbe
sub
pop
stos
scas
lods
push
retf
dec
mov
ret
sub
inc
xor
arpl
mov
pop
lods
fst
mov
dec
cdq
xchg
scas
fcom
mov
imul
xor
test
inc
mov
inc
cmc
mov
dec
sti
std
pop
stc
mov
lea
or
xchg
mov
and
mov
es
inc
out
iret
jg
repnz
or
imul
cwde
scas
push
sub
dec
sbb
cmp
aad
sub
xor
inc
sbb
aad
cmp
into
enter
neg
je
pop
ins
xor
hlt
jmp
rcr
mov
cmc
retf
pop
mov
cmp
jo
aad
mov
xchg
lock
icebp
jle
(bad)
ss
fpatan
test
sbb
dec
mov
mov
mov
ins
push
out
push
push
cmps
in
cli
push
xor
mov
mov
arpl
push
scas
pop
push
icebp
lock
into
pushf
xchg
mov
daa
mov
dec
jns
jns
cmp
push
sbb
mov
sbb
test
(bad)
aam
daa
mov
xchg
sub
mov
push
pop
pop
retf
out
retf
int
and
add
aaa
ss
das
and
fwait
push
sub
sub
ins
hlt
mov
test
push
iret
push
addr16
dec
aas
imul
push
cmp
adc
jmp
stc
pop
fild
call
adc
push
scas
jmp
dec
fbld
push
imul
ins
cmp
repz
cmp
push
add
mov
ds
inc
add
aam
(bad)
call
aam
mov
test
mov
or
sub
xor
popfw
loop
fwait
ins
sub
sti
dec
in
gs
movs
imul
inc
xchg
bound
loop
aaa
pushf
(bad)
addr16
fs
loopne
pop
cld
jecxz
sti
dec
ret
retf
es
lods
movs
dec
pop
fdivr
scas
and
xchg
fnstcw
push
(bad)
mov
jnp
mov
fmul
bnd
out
mov
lds
inc
ja
jecxz
dec
and
dec
jecxz
fnstenv
push
sub
call
push
push
ss
movs
fidiv
rcl
shr
push
jp
xor
jne
cmp
loope
(bad)
mov
ja
and
cmp
cmp
mov
pop
into
adc
outs
imul
mov
and
push
mov
jl
push
lods
(bad)
push
xchg
cmp
in
or
dec
pop
test
cmps
push
push
pop
xor
loopne
(bad)
ds
fstp
iret
call
mov
(bad)
fisttp
ror
ss
out
fdivr
push
in
iret
mov
mov
es
jecxz
(bad)
retf
sahf
fstp
data16
xchg
ins
pop
xchg
pop
jmp
popf
aad
pushf
push
pop
dec
dec
mov
sahf
jno
ins
leave
mov
adc
sbb
dec
imul
out
inc
js
cs
nop
jecxz
lock
fcmovnb
aad
xchg
idiv
sbb
push
lods
lahf
dec
std
adc
push
div
mov
test
mov
adc
fcom
les
mov
mov
sub
retf
pop
cdq
dec
inc
inc
call
jno
xchg
cwde
push
pushf
rol
out
inc
pop
and
push
sar
sbb
mov
jns
iret
jnp
jmp
fstp
das
in
push
lfs
gs
sub
pop
xor
cmc
int
cmps
sbb
dec
push
dec
xor
jno
inc
mov
jmp
mov
push
aad
xchg
cmp
pop
cdq
jno
xor
sub
mov
mov
mov
arpl
jmp
push
mov
jne
pop
push
pop
dec
ret
(bad)
mov
pop
jbe
popf
mov
fs
aas
movs
inc
jo
cdq
push
movs
xchg
aad
stos
push
pushf
outs
cmp
fdivp
outs
imul
aad
rcl
test
icebp
popa
scas
push
and
fisttp
xchg
sahf
nop
sar
sub
mov
movs
inc
in
lds
cmp
daa
mov
movs
inc
xlat
mov
sahf
in
es
test
test
jb
pop
sbb
jmp
jo
cmp
aas
jp
cwde
mov
addr16
sbb
addr16
jmp
inc
push
cdq
and
sbb
in
scas
ins
sub
push
mov
jmp
ins
(bad)
cmp
and
popf
sahf
(bad)
out
mov
mov
retf
out
sub
mov
mov
pop
fsub
into
cli
jns
push
pop
out
outs
cmps
stos
sub
mov
inc
fcomp
push
in
test
mov
stc
inc
ret
daa
mov
xor
loop
pop
jmp
ja
test
pop
mov
dec
int
mov
cmp
sahf
pop
push
sbb
adc
mov
int
loopne
cmc
in
repnz
leave
sti
xchg
ins
loop
xchg
cmps
xchg
in
icebp
mov
xchg
ins
jns
adc
mov
sar
xchg
xchg
(bad)
jecxz
mov
pop
sbb
jae
cmp
fld
dec
ds
stos
fadd
cmps
or
mov
jae
ins
cmp
jp
mov
pop
push
dec
dec
or
xchg
pushf
jg
jl
sub
out
cpuid
bound
loope
push
lea
mov
mov
mov
je
neg
in
movs
mov
xchg
(bad)
popa
fs
and
aaa
scas
(bad)
cli
lahf
jne
scas
push
pop
(bad)
fnsave
mov
aaa
mov
cmps
pop
outs
and
scas
push
mov
or
int3
mov
mov
fsub
(bad)
jne
bound
cmp
std
out
pop
jg
xchg
pop
ins
inc
popf
stos
jnp
popf
out
sub
into
movs
adc
movs
mov
leave
mov
adc
jo
inc
xchg
mov
mov
(bad)
push
call
push
lds
cmp
push
mov
imul
aam
mov
(bad)
cdq
lods
dec
loope
mov
call
mov
out
push
jp
(bad)
xlat
neg
lods
mov
push
xchg
aad
xchg
inc
mov
dec
les
sub
mov
dec
jge
sub
push
pop
fist
cmps
cmp
and
push
mov
xchg
movs
pop
cmps
jg
out
mov
in
sub
pop
cmp
push
mov
stos
sub
rcl
cmc
mov
dec
xchg
(bad)
popf
dec
mov
jmp
pop
mov
scas
fbstp
lods
or
pop
scas
and
xchg
sub
xchg
and
retf
xor
cmp
ret
pop
sbb
cmps
leave
aaa
mov
es
sbb
mov
adc
out
cmp
rcl
mov
std
and
mov
loop
xlat
mov
cmp
scas
hlt
jmp
sbb
lods
xor
xchg
outs
pop
aam
add
and
jne
js
xchg
ret
pop
sahf
xchg
pusha
sbb
and
cmp
mov
scas
push
xor
in
in
jbe
mov
sti
push
mov
rol
inc
push
xchg
popa
sbb
adc
mov
iret
or
in
loop
outs
lahf
ret
jb
pop
ins
pushf
hlt
mov
jmp
pop
push
loopne
push
ror
ins
cmp
test
xchg
loope
adc
jno
pop
xor
shr
mov
mov
mov
addr16
rcl
hlt
pop
std
mov
outs
mov
pop
into
loopne
inc
scas
push
mov
jmp
fdivr
mov
jne
stos
pxor
fimul
nop
(bad)
ja
(bad)
sub
jecxz
fisub
mov
std
out
pushf
iret
mov
mov
mov
jmp
pop
xchg
fbstp
or
and
push
jnp
cld
aam
mov
aas
sahf
cli
or
imul
jl
(bad)
mov
jns
or
dec
leave
xchg
push
lahf
data16
xchg
jno
inc
xchg
fidiv
sbb
inc
pop
test
sahf
and
idiv
pop
lea
cmp
jge
xor
jg
push
push
ins
mov
xchg
in
xchg
add
push
inc
outs
mov
mov
test
sbb
cwde
retf
dec
mov
mov
shl
mov
(bad)
aam
dec
mov
jne
push
stos
dec
popf
sahf
popf
pop
cmp
xchg
inc
jmp
in
daa
stos
inc
das
retf
xor
xchg
jecxz
pop
mov
dec
ret
and
in
jmp
in
mov
mov
dec
lods
call
cmc
xchg
push
inc
aam
adc
and
jnp
inc
test
test
adc
sub
mov
add
loopne
stos
push
les
pop
scas
repnz
ins
mov
xor
loope
xchg
ins
sbb
mov
sahf
and
aas
inc
ficom
inc
test
ret
test
push
or
xor
inc
sti
fild
icebp
mov
bswap
ficom
and
and
repnz
ret
and
rol
push
hlt
outs
fnstenv
jmp
ficom
fmulp
xchg
(bad)
fnstenv
inc
in
jae
pop
mov
jmp
out
test
shr
xor
imul
push
mov
jbe
mov
jmp
dec
dec
add
xchg
jnp
pushf
aad
aam
and
sbb
jmp
aas
gs
sbb
mov
jb
xchg
pop
call
xchg
jmp
mov
scas
jmp
and
xor
gs
push
jmp
sbb
add
loopne
push
fimul
jne
xchg
inc
cmps
leave
das
push
(bad)
mov
xchg
retf
mov
test
fnsave
aas
and
push
cmc
xchg
stos
jl
ficomp
cmps
dec
push
lods
jmp
bound
xchg
xchg
add
cld
shr
sub
in
test
bound
shr
fldcw
ja
xlat
jbe
shl
stc
rol
cmp
xchg
pusha
fsub
push
mov
sub
mov
fldl2t
loop
stos
mov
ret
int3
pop
mov
jmp
cmp
cmc
mov
add
add
ins
mov
mov
adc
shl
stos
dec
sti
mov
call
push
jge
and
(bad)
shl
jnp
js
dec
call
or
(bad)
call
push
inc
mov
push
cs
aad
fisttp
loopne
lds
add
js
mov
shr
sub
mov
aaa
sbb
fs
jbe
cmp
cmp
cmps
pusha
mov
cmps
xor
sub
das
rcl
xchg
imul
mov
inc
mov
xor
ins
and
daa
test
sub
pushf
add
stos
ret
mov
push
mov
adc
mov
ja
dec
or
push
mov
stos
cmp
xchg
scas
frstor
popf
out
jecxz
in
shl
pop
jne
popf
movs
movs
dec
mov
xor
push
sbb
add
test
test
sub
fwait
ins
outs
xor
ret
and
and
stos
dec
fbstp
sub
xlat
sub
into
dec
mov
inc
outs
sub
das
sub
js
pushf
(bad)
ror
sub
cmp
xchg
cs
cmp
xchg
push
fucomi
hlt
fbstp
jbe
sub
popw
sar
(bad)
lea
stos
aam
lock
aam
fwait
mov
sbb
sbb
inc
xor
call
mov
dec
cdq
ja
out
dec
dec
enter
sub
aas
sub
repz
pop
mov
push
sbb
dec
cmp
dec
(bad)
bound
sahf
aaa
xor
mov
jo
mov
and
daa
jne
ins
fdivp
cmp
cmps
xchg
or
mov
(bad)
xor
jb
adc
hlt
mov
and
mov
pop
fs
test
xchg
and
pop
movs
(bad)
fs
scas
dec
test
sti
dec
push
movs
(bad)
jecxz
xchg
mov
xor
push
in
push
arpl
loopne
loope
jns
mov
push
push
cmp
dec
cmp
cmp
addr16
movs
mov
data16
xor
jecxz
rcr
push
pop
lea
and
mov
stos
cmp
imul
mov
cmp
jae
mov
mov
adc
stos
jns
jns
push
cdq
dec
int
pushf
pop
jp
push
adc
les
call
mov
sub
push
outs
adc
(bad)
ficom
cmp
iret
jnp
jle
mul
cmp
fisubr
hlt
jmp
mov
xlat
pop
ss
push
mov
xchg
fwait
test
out
xor
cmp
cli
ret
adc
or
add
push
push
mov
push
dec
inc
or
add
iret
push
lahf
xchg
push
test
in
pop
inc
shr
add
(bad)
int
loope
push
popa
shl
outs
(bad)
sub
scas
mov
test
into
stc
cmps
pop
or
fidiv
xchg
mov
imul
cmp
retf
mov
shl
jg
idiv
mov
jbe
push
xchg
mov
rcr
cli
(bad)
xchg
push
jno
mov
je
jmp
sub
(bad)
data16
dec
addr16
rol
push
mov
ficomp
jecxz
iret
ret
lahf
jno
mov
xchg
and
inc
clc
dec
jno
cmc
pop
xchg
cmp
sar
push
ins
sub
adc
pushf
mov
dec
jno
jno
add
and
cmps
scas
xor
daa
jne
neg
mov
scas
(bad)
xchg
xlat
dec
clc
jne
mov
bswap
stc
ss
leave
xor
jo
aad
fst
pop
loop
int
jg
pop
jmp
ins
frstor
mov
or
mov
xor
push
es
jp
test
jmp
inc
sub
pop
pop
js
jge
out
xchg
xor
loop
and
sbb
push
pop
jae
(bad)
xchg
dec
mov
mov
loop
jle
jne
repnz
mul
test
jo
mov
fst
xor
fwait
cmp
dec
clc
pop
shr
pop
cdq
cmps
int3
and
stos
shr
push
mov
sub
adc
mov
ret
lods
dec
mov
leave
sub
clc
cmp
push
div
jle
das
scas
sub
mov
popf
inc
fidiv
(bad)
jo
sbb
test
in
scas
ss
pop
push
popf
aam
cmp
(bad)
lea
pop
cdq
jbe
es
cmps
adc
cmps
push
movs
and
dec
add
inc
mov
xchg
aad
pop
and
arpl
jns
mov
(bad)
aad
pop
aam
xchg
(bad)
aad
fwait
jbe
icebp
mov
cmps
or
scas
adc
or
xchg
imul
retf
sub
inc
cli
retf
test
push
mov
loop
and
int
gs
push
jp
mov
pop
mov
mov
push
(bad)
(bad)
rcl
std
test
call
movs
push
out
imul
int3
lahf
out
inc
adc
mov
adc
cmps
mov
mov
out
outs
fwait
loop
xor
or
push
shl
fld
lods
loopne
dec
sub
sti
cmp
pop
mov
shl
jmp
mov
dec
(bad)
es
jmp
mul
inc
mov
xchg
ficomp
inc
jb
loop
ret
jae
push
fmul
out
in
push
mov
adc
and
dec
adc
sub
sub
(bad)
rcl
aam
lods
loop
mov
pop
stos
stos
pushf
dec
and
add
fsubr
out
pop
shl
std
adc
ficom
in
mov
fwait
xor
ja
lds
xor
add
cmc
bound
cwde
pop
push
int3
mov
mov
adc
adc
inc
(bad)
jmp
push
scas
or
test
lods
push
fstp
into
dec
xlat
pop
and
into
mov
js
clc
mov
inc
int
pushf
jne
jle
(bad)
out
div
int3
stos
jo
cmc
xchg
stos
xor
ret
cdq
stos
iret
cmp
lds
jge
retf
clc
adc
jle
ins
(bad)
adc
test
ret
pop
add
mov
sub
call
mov
in
(bad)
cld
shl
lock
(bad)
ins
sub
xor
adc
xor
cli
inc
pop
call
pop
xchg
cmp
std
cdq
imul
out
xor
dec
retf
pushf
jge
sub
int3
retf
push
enter
cmp
mov
lock
inc
cld
pop
(bad)
shl
test
inc
into
(bad)
xchg
in
(bad)
data16
jge
int3
cmps
xchg
leave
pop
test
mov
dec
pop
repz
ret
mov
sbb
xlat
sbb
retf
pop
cmc
inc
jp
mov
push
and
push
out
mov
(bad)
jnp
xor
pop
sub
popf
inc
stos
das
arpl
shl
sti
cmp
test
push
xchg
mov
jo
ror
sahf
mov
sub
pop
pop
xchg
fistp
aam
jns
cli
ins
shl
dec
mov
pop
jns
in
and
ss
lahf
pusha
xor
mov
movs
fsub
jg
in
inc
xor
dec
popa
icebp
repnz
stos
sub
adc
stos
out
fsubrp
xlat
jmp
mov
dec
fstp
and
retf
sub
sub
push
lock
adc
clc
and
in
xchg
sti
mov
push
mov
mov
mov
int3
fild
adc
adc
ja
ins
stc
and
fistp
xchg
icebp
or
push
(bad)
or
retf
pop
scas
push
fs
aaa
xor
(bad)
repnz
pop
je
jae
pushf
add
inc
cli
int3
stos
adc
mov
inc
push
push
mov
mov
jbe
in
mov
scas
(bad)
iret
jae
mov
ret
dec
mov
cmp
aam
mov
data16
dec
fsubrp
jno
mov
ins
out
and
sub
mov
and
dec
adc
and
lods
mov
call
pushf
or
data16
lds
xchg
push
adc
repz
mov
mov
inc
popf
jl
movs
cmp
cmp
pop
pop
imul
cli
mov
adc
xchg
adc
inc
sbb
ror
hlt
retf
das
mov
xor
mov
ja
cmps
stos
sbb
jle
mov
hlt
mov
loope
les
dec
out
stos
xchg
xchg
sbb
(bad)
mov
fimul
cmp
test
ror
add
lea
pop
dec
cmp
(bad)
sub
ins
stc
fistp
xor
bound
cmps
push
mov
cli
sub
mov
fld
cmp
jmp
out
push
pop
ficomp
jmp
repnz
push
out
add
test
dec
ja
in
repz
dec
pop
jmp
outs
repnz
leave
inc
imul
jmp
mov
leave
sti
and
(bad)
stos
imul
call
std
jecxz
cmps
pop
fldcw
push
mov
cwde
jne
adc
xor
pop
push
push
or
mov
inc
sub
das
pop
push
mov
into
dec
sub
mov
xchg
int
push
enter
stos
cs
fcomp
(bad)
xchg
push
xchg
mov
adc
pop
sub
pop
adc
mov
xchg
repz
or
mov
sar
int3
dec
add
mov
call
stc
jl
pop
fnstenv
(bad)
popa
mov
adc
js
psubsw
xor
aad
retf
int3
(bad)
ins
jns
dec
mov
adc
pop
addr16
mov
dec
dec
fsub
sbb
(bad)
in
mov
sbb
sbb
(bad)
xor
mov
push
stos
jecxz
cmp
jmp
aam
scas
xchg
(bad)
aam
mov
adc
out
cld
sbb
call
call
out
ss
dec
xchg
fstp
mov
pop
pop
cwde
push
stos
pushf
jne
pop
aam
shl
mov
cdq
data16
xlat
push
jnp
add
dec
fdiv
push
retf
js
mov
daa
mov
fs
inc
daa
add
sbb
push
pushf
adc
pop
fcom
pop
xor
lods
cmc
mov
push
pop
jle
(bad)
imul
imul
dec
pop
test
test
je
icebp
jo
jmp
std
mov
xor
cmp
push
stos
stos
rol
daa
sbb
mov
pop
cmc
inc
mov
jge
xor
mov
cs
adc
aaa
and
lds
retf
call
ror
sti
cmp
sub
sbb
xchg
pop
out
xchg
push
lods
movs
dec
lea
mov
mov
(bad)
jl
xor
cmps
mov
and
add
push
mov
ja
cmp
je
rcl
adc
push
test
mov
sahf
mov
fld
mov
stos
and
or
sbb
lods
mov
pop
jmp
inc
dec
cmc
adc
mov
scas
inc
dec
stc
loope
sbb
(bad)
fld
mov
jge
aad
pop
call
jecxz
retf
shl
movs
ins
stos
cdq
xchg
or
shl
pop
jo
leave
(bad)
dec
shl
xchg
sahf
pop
xchg
sbb
mov
imul
jge
jne
test
cmps
call
lock
push
stos
cmp
push
in
fist
repnz
adc
stc
repz
or
cmp
mov
ins
movs
in
in
jnp
mov
std
loope
rol
cmp
dec
iret
out
(bad)
int
jge
je
sbb
sbb
test
faddp
into
daa
inc
push
dec
sbb
fwait
out
mov
mov
daa
dec
loopne
daa
popa
mov
outs
push
xchg
xor
xcrypt-cfb
cmps
bound
es
ja
test
and
mov
dec
(bad)
inc
sub
push
pop
xchg
xchg
push
or
xor
(bad)
enter
int
sar
imul
fisubr
cmp
jnp
mov
jb
test
es
aam
fcmovbe
cmps
push
push
xor
popf
dec
dec
push
sahf
fucomi
inc
imul
enter
jp
fsub
stos
shr
in
(bad)
repz
xor
jp
pop
test
dec
ds
jbe
mov
mov
cli
pop
cwde
fnstenv
mul
mov
mov
movs
or
push
(bad)
jbe
inc
imul
psubusw
pop
lods
fwait
jbe
scas
fld
mov
push
lds
loope
inc
inc
push
sub
dec
movs
neg
in
mov
mov
and
xchg
mov
push
cmp
call
xchg
pop
sti
sbb
into
jmp
sub
dec
mov
or
sub
out
(bad)
test
xchg
fs
pop
and
sbb
dec
fild
cmc
call
addr16
stos
dec
push
js
aam
dec
test
push
fst
lods
or
cmps
fild
inc
push
movs
test
xor
mov
ret
mov
ins
mov
(bad)
jge
in
and
cmp
push
test
mov
cmp
mov
mov
jb
movs
jne
imul
lock
cmp
cmp
push
cdq
or
mov
adc
or
jnp
dec
sahf
popf
or
aas
movs
(bad)
push
inc
mov
das
aas
mov
dec
sti
dec
lahf
(bad)
(bad)
in
jle
sub
std
mov
mov
add
(bad)
movs
push
pop
dec
push
xor
pop
and
leave
jno
(bad)
sub
mov
mov
jecxz
add
push
jno
mov
out
in
fnstsw
ja
and
sbb
dec
jle
mov
(bad)
retf
cdq
enter
cmc
mov
mov
pop
cwde
or
pop
enter
imul
add
cmc
int3
push
loopne
adc
fmul
push
mov
test
cli
cwde
outs
in
xor
cmp
cwde
(bad)
jno
xlat
cmp
cmp
test
pop
dec
xor
aas
xchg
cmp
lods
pop
mov
imul
sbb
out
(bad)
cli
int
xor
imul
and
cmps
shr
dec
jl
xchg
cmp
sub
cli
adc
xor
cmp
adc
sahf
push
sahf
imul
out
ja
sbb
shr
or
jmp
gs
xchg
fstp
or
push
call
sub
xchg
movs
mov
aam
pop
pop
ja
lds
jbe
xor
test
sar
mov
outs
pop
dec
aas
jns
inc
dec
je
lea
mov
mov
mov
jg
cmp
fisttp
jg
xchg
cli
lahf
out
cmc
xchg
in
add
popa
(bad)
cwde
inc
clc
mov
outs
scas
int
jmp
pushf
pop
adc
clc
bound
cdq
pop
outs
and
push
fidivr
leave
(bad)
push
fstp
in
lahf
pop
outs
lahf
or
sahf
das
mov
and
or
inc
and
scas
lahf
leave
stc
sbb
test
mov
xchg
loope
mov
test
sub
push
shl
jl
add
and
ror
dec
pop
icebp
imul
mov
ds
push
ret
jecxz
test
lods
popf
neg
repz
push
(bad)
lods
xchg
mov
mov
xchg
push
sub
(bad)
xchg
rcl
scas
ds
cmp
popf
inc
pop
shl
lods
sbb
mov
mov
pop
int
push
push
dec
aaa
add
xor
test
lahf
mov
cmp
test
leave
(bad)
push
ret
out
jmp
inc
mov
or
jecxz
mov
aas
fcmovu
add
pop
pushf
xor
dec
ds
xor
xor
adc
or
dec
jg
stc
and
addr16
outs
mov
jmp
pop
fnstcw
mov
push
out
mov
jno
mov
or
sub
pushf
(bad)
cmp
jnp
es
adc
lea
cdq
push
call
int3
xchg
enter
push
xlat
js
push
fcom
int3
leave
push
in
add
xchg
es
div
inc
popf
rcl
fisttp
popf
and
mov
retf
rol
lds
add
jmp
lock
adc
push
ffree
mul
inc
call
push
xchg
inc
fs
pop
mov
mov
cmp
push
xor
mov
cmp
adc
fild
test
dec
inc
adc
sbb
shl
push
inc
jmp
ret
sbb
xor
mov
pop
or
mov
cwde
popf
add
pop
mov
rol
shr
pushf
jbe
xchg
xlat
mov
cwde
push
xor
or
ficom
stos
lea
inc
cwde
inc
aad
xor
dec
jne
xchg
jmp
fdiv
(bad)
and
pop
in
and
and
bound
dec
mov
xor
jle
jbe
rcl
data16
outs
mov
ret
or
fcomp
inc
mov
adc
pop
fwait
inc
xchg
jmp
mov
cmp
or
(bad)
adc
(bad)
leave
push
ficomp
push
or
push
popf
ds
mov
imul
mov
mov
mov
mov
lods
shl
adc
ins
out
jno
pop
jle
jmp
and
out
and
push
push
pushf
std
arpl
pusha
test
loope
out
mov
(bad)
cmp
arpl
test
ds
mov
inc
cmps
xor
iret
lods
cmc
pop
dec
or
outs
mov
jl
dec
add
arpl
dec
xor
mov
mov
xor
or
in
adc
mov
movs
push
mov
aam
sbb
xchg
xlat
dec
mov
xchg
adc
addr16
sbb
arpl
hlt
xor
jb
pop
out
push
arpl
ins
push
ror
mov
sar
lods
jmp
cmp
xchg
int
jae
add
ret
adc
jp
mov
mov
repnz
and
sbb
mov
movs
test
add
test
lods
(bad)
jle
movq
ret
cmp
clc
data16
adc
cmp
scas
jg
movs
jge
jp
mov
xchg
aam
(bad)
scas
inc
(bad)
pop
iret
das
push
popa
lds
dec
scas
shl
aam
cli
inc
js
aas
add
imul
test
inc
stos
push
mov
fwait
xchg
inc
ret
inc
lods
dec
scas
sahf
bound
mov
dec
call
jmp
iret
aad
call
pop
adc
cmps
fist
push
dec
cdq
jnp
cs
cmp
hlt
xor
sbb
inc
adc
dec
sbb
pop
mov
jnp
fisubr
test
and
cdq
rcl
cmps
je
fwait
popa
mov
inc
dec
ret
sub
mov
pop
inc
dec
mov
sub
inc
loopne
sti
test
cmp
stos
outs
(bad)
cmp
stos
jne
dec
xor
ds
arpl
es
repnz
adc
movs
inc
cwde
cli
out
pop
add
cmp
cmp
ja
sub
div
or
bound
push
icebp
lea
adc
loope
mov
add
lods
aam
lahf
push
and
dec
sub
pop
(bad)
aad
retf
addr16
cmp
sub
lahf
clc
xchg
std
sub
in
retf
call
imul
repnz
pop
into
hlt
out
and
dec
mov
mov
or
mov
gs
mov
sub
stos
lock
mov
lods
adc
sbb
int3
fs
mov
xchg
pop
in
ss
jb
pop
mov
jo
shr
sub
jne
mov
sbb
jo
mov
das
xchg
sbb
jp
clc
xchg
std
ins
into
out
fwait
lods
jl
dec
movs
je
mov
sub
mov
mov
push
lahf
js
sub
cmp
aad
cmps
ror
mov
outs
push
or
cmp
sbb
hlt
jnp
mov
cwde
cli
leave
cmp
iret
stos
jg
mov
cmp
and
push
aad
dec
ret
jnp
sub
inc
sar
sub
imul
popa
mul
test
cmp
push
xor
adc
sub
jmp
loopne
aad
sub
inc
jmp
shl
aad
loope
dec
into
jbe
mov
cmp
mov
cld
es
je
int3
xor
lahf
in
repnz
outs
call
aam
ins
retf
aaa
addr16
fdiv
popf
test
mov
sbb
mov
mov
xor
or
jmp
fwait
jl
jno
in
inc
sbb
pop
imul
xchg
neg
mov
movs
mov
mov
or
mov
mov
jge
mov
and
mov
or
xchg
stos
xlat
es
div
or
xchg
sbb
daa
push
jg
jle
and
test
add
adc
es
aam
mov
out
pop
or
xchg
jmp
and
shl
jae
jmp
test
cmp
loop
push
ja
push
adc
jae
cmp
icebp
test
push
jb
push
dec
fistp
ficomp
test
shl
inc
out
jle
mov
pushf
and
jge
cmps
dec
ror
sbb
loop
jb
outs
sub
(bad)
sar
add
mov
daa
icebp
and
(bad)
sar
(bad)
imul
adc
lds
jge
mov
pop
lds
mov
push
pop
pop
mov
pushf
mov
jle
imul
inc
xchg
fcmovnu
scas
pop
xchg
movs
jmp
pop
lods
repz
sub
or
repz
and
(bad)
aad
dec
dec
dec
retf
lods
xlat
lods
fsubr
lds
pop
sti
mov
mov
xor
push
call
shr
fnop
aaa
aad
lods
cli
inc
dec
outs
xchg
mov
stos
stos
jp
sahf
mov
test
fwait
ss
fldcw
mov
cmps
dec
shr
and
mov
sbb
stc
jl
ins
mov
and
in
aaa
mov
add
int3
jo
fimul
inc
adc
pushf
imul
and
jnp
mov
(bad)
xchg
dec
jno
stos
cli
stos
call
adc
fimul
rcl
sub
mov
nop
push
lock
add
cmp
xchg
popa
test
xchg
cmp
mov
mov
out
shr
xor
ret
cmp
repnz
cld
push
lods
dec
js
push
loop
add
jnp
rcl
xlat
xchg
mov
push
pushf
or
sti
sahf
jno
mov
push
repz
retf
xor
inc
sub
ffreep
cwde
icebp
mov
sbb
adc
mov
mov
xchg
gs
push
pop
xchg
neg
test
mov
push
jmp
cmp
cmc
xor
push
jl
test
fbld
pop
hlt
ficom
sar
dec
pop
mov
movs
std
aam
cmp
fsubr
xor
fdivr
movs
test
pop
and
hlt
or
push
mov
ins
xor
cli
inc
sbb
sub
test
push
dec
cmp
aad
jl
mov
push
mov
cmc
pop
mov
stos
hlt
cmp
xchg
inc
test
popf
inc
mov
stos
cmps
or
mov
push
xchg
mov
dec
xchg
xlat
sbb
dec
push
pop
xchg
dec
popf
xchg
test
xor
xor
push
out
mov
jo
mov
cs
xchg
xor
ss
scas
scas
dec
lds
mov
fwait
in
jne
stc
cdq
cmp
mov
pop
push
test
pop
mov
sahf
out
jg
imul
xor
mov
xchg
jns
adc
mov
stos
ss
cmp
(bad)
call
popf
movs
adc
sbb
fidivr
or
cmps
fisttp
dec
pop
aaa
ins
xlat
setle
(bad)
inc
pusha
sti
inc
cwde
cmp
push
test
push
push
imul
pop
outs
jae
xchg
imul
sbb
dec
dec
retf
popf
xchg
jne
out
(bad)
cwde
loope
retf
test
ins
stc
mov
mov
jle
xchg
(bad)
jmp
xor
ins
mov
dec
fiadd
inc
gs
jbe
cmps
sub
shr
cmp
sbb
in
jmp
jp
(bad)
push
mov
pop
std
imul
or
or
sbb
das
sbb
ss
dec
mov
lahf
push
cwde
mov
test
out
sbb
push
lahf
mov
mov
fcmovu
xchg
sbb
retf
rcr
lahf
sbb
mov
jl
mov
xlat
test
dec
out
icebp
add
fdiv
pop
mov
cdq
inc
xchg
nop
mov
adc
into
fst
lods
outs
mov
ret
cmp
or
pusha
mov
lea
mov
test
push
jbe
and
pop
sub
das
repnz
pushf
shl
mov
xchg
sub
or
and
pop
mov
and
fdivrp
and
fnstsw
ins
mov
cdq
cdq
inc
adc
stc
push
dec
ror
cmp
xchg
stc
stos
jno
retf
cmp
ret
not
loope
dec
sub
pop
cs
dec
sub
test
push
call
bound
sub
xchg
dec
dec
sub
(bad)
mov
aaa
sub
push
cmps
daa
jle
push
ret
push
mov
das
adc
(bad)
fstp
jbe
fwait
add
dec
push
jb
jle
cmp
ja
sbb
es
sbb
shl
(bad)
lods
out
push
pop
in
mul
pop
sbb
shr
into
jmp
ja
push
imul
dec
dec
dec
stos
dec
jo
(bad)
cld
mov
dec
iret
mov
imul
jne
loop
push
xchg
cmp
add
arpl
dec
cmp
test
jne
jb
mov
mov
dec
pop
mov
aad
imul
xchg
(bad)
jmp
aaa
ss
sub
dec
lea
jle
(bad)
pop
mov
mov
(bad)
into
mov
mov
cmp
adc
data16
rcr
sub
loope
outs
push
mov
out
aam
fdiv
out
out
stc
push
out
xor
(bad)
inc
sbb
dec
push
(bad)
cdq
movs
test
imul
retf
sub
sqrtps
fsubr
inc
dec
jg
push
hlt
mov
inc
ss
test
movs
mov
popf
in
pop
xlat
sbb
movs
inc
mov
popa
xchg
pop
imul
cmp
cmp
call
or
sbb
mov
icebp
adc
push
pushf
pop
xchg
or
rcl
sub
addr16
inc
push
xor
pop
je
dec
xor
mov
mov
cmp
sbb
push
pushf
jmp
movs
add
mov
add
std
jl
aad
cmp
ds
loope
mov
mov
out
mov
jno
add
cmc
jo
std
test
out
xor
stos
push
retf
xchg
jae
cmps
in
dec
pop
sub
mov
cmp
fwait
in
pop
sbb
in
mov
xor
mov
sbb
outs
dec
aaa
pushf
and
sar
mov
js
mov
mov
xor
in
sbb
dec
lahf
ret
cmps
mov
mov
arpl
mov
lahf
mov
push
test
es
pop
aad
adc
(bad)
(bad)
cmc
fst
outs
jno
out
fld
test
or
push
or
xor
jmp
jne
push
push
addr16
cmp
sbb
mov
xor
std
or
cmp
in
outs
push
lock
imul
ret
div
push
mov
fcom
push
jmp
cmp
ds
or
cwde
ins
data16
adc
ja
push
pop
pop
or
fbld
push
or
test
mov
std
dec
xchg
lock
ins
das
outs
fst
cmps
cmp
cmp
xor
xor
lahf
mov
in
lods
dec
test
xchg
push
jae
outs
ins
and
mov
mov
push
mov
sub
ins
inc
dec
(bad)
xchg
mov
jo
mov
pop
mov
jne
loop
and
daa
ret
sub
retf
movs
xor
cmp
dec
cli
into
ss
push
pop
dec
iret
ins
fwait
cmc
dec
outs
adc
fnstsw
lea
sar
push
mov
jecxz
aaa
xor
sti
(bad)
dec
aad
xchg
and
ror
sti
inc
das
and
movs
sahf
push
sbb
xchg
dec
jg
(bad)
arpl
xchg
loop
push
and
dec
leave
and
das
dec
pushf
xchg
lahf
inc
dec
lods
xchg
pop
pop
addr16
lock
test
pusha
lock
adc
ja
(bad)
mov
stos
aad
cmp
stos
mov
mov
inc
mov
imul
xchg
leave
inc
enter
pop
xor
pop
cwde
ins
mov
mov
ret
xchg
inc
lds
in
rcr
push
push
into
sbb
sti
aas
cmp
lds
ss
mov
fcmovbe
sbb
fst
(bad)
sub
sar
mov
in
sub
retf
sub
mov
jbe
loop
adc
push
ss
mov
push
in
int3
pushf
xchg
lods
stc
cmp
movs
cwde
inc
call
and
xchg
dec
and
dec
repz
mov
mov
les
in
(bad)
cld
popa
jmp
sbb
mov
dec
or
sub
adc
cmp
sub
in
jp
adc
nop
lods
int3
xlat
jmp
adc
out
xchg
fldcw
mov
cmp
lods
add
sbb
push
fdivp
push
push
jmp
fstp
fwait
ins
lahf
fisttp
leave
js
arpl
pop
retf
adc
dec
outs
dec
mov
in
outs
das
mov
sar
adc
test
jns
push
or
adc
popf
xchg
push
out
scas
adc
dec
mov
in
movs
jl
mov
fidivr
cmp
add
mov
add
mov
call
out
push
es
push
stc
hlt
cmp
cwde
push
movs
mov
in
sub
addr16
sub
push
cmps
sbb
dec
mov
jb
lock
ret
out
xchg
jo
shl
push
jmp
xchg
dec
loop
stos
aad
jbe
scas
repnz
daa
xchg
jnp
sub
and
mov
sbb
jmp
mov
mov
cmp
loopne
or
into
iret
jbe
sub
mov
push
lods
call
mov
push
inc
cmc
ins
popf
dec
(bad)
sbb
cmp
std
xchg
shl
fdivr
cmp
dec
mov
in
xchg
and
(bad)
repz
or
xor
in
fld
js
mov
hlt
jmp
aad
sti
cmp
mov
jne
inc
xchg
xor
xor
mov
cmp
or
mov
cmp
pop
fistp
hlt
aaa
outs
sub
(bad)
scas
jae
pop
sbb
xchg
shr
mov
repz
stc
xchg
jne
scas
pop
rcr
mov
pop
xor
push
leave
mov
push
ret
movs
lods
mov
lods
mov
(bad)
idiv
hlt
sbb
mov
fisttp
mov
inc
out
inc
adc
fbstp
repz
mov
sahf
push
rol
dec
jno
mov
jle
xchg
(bad)
fimul
int3
cmp
mov
pushf
sbb
jae
div
das
retf
cmp
cs
lods
push
fs
dec
leave
cdq
ja
leave
push
cmc
scas
ret
popf
cdq
int3
jae
int
scas
jb
mov
jns
ins
mov
mov
sub
jg
xchg
inc
data16
loop
cmps
mov
fs
sbb
xlat
out
xchg
popf
dec
dec
push
in
xchg
mov
mov
scas
jb
dec
or
retf
(bad)
clc
int3
mov
stos
aad
mov
daa
aad
ins
jnp
js
mov
loop
iret
jmp
(bad)
lahf
shr
xchg
adc
mov
fisttp
cmp
sub
leave
push
test
jecxz
stos
stos
lahf
out
pop
arpl
dec
pop
add
sub
mul
movs
xchg
jb
xchg
add
mov
ins
inc
cmp
and
popf
dec
into
jge
in
mov
sti
or
icebp
clc
fsub
shl
pop
hlt
inc
mov
imul
fwait
dec
aaa
gs
mov
test
pushf
aas
lock
(bad)
adc
mov
mov
pop
mov
push
frstor
xchg
rol
xchg
repnz
and
mov
mov
xor
fsub
jecxz
xor
aam
rol
xchg
outs
mov
loope
xchg
xchg
ds
stc
(bad)
cmp
mov
out
neg
cmp
rcl
and
imul
mov
pop
sub
fwait
or
lahf
loop
push
test
(bad)
aam
cs
imul
sar
sub
sbb
(bad)
cmps
popa
mov
int
jmp
int
push
imul
dec
xchg
into
mov
ror
xchg
push
mov
adc
and
push
pop
xchg
sahf
cmps
das
pop
jns
and
outs
mov
cwde
test
jecxz
mov
cmp
mov
nop
xchg
adc
cmp
lods
sbb
push
sub
int
mov
push
dec
and
mov
loop
retf
pop
lahf
xor
push
hlt
fwait
push
ins
out
fisub
jge
test
imul
and
jb
mov
jmp
call
in
mov
lods
fdiv
cmp
mov
(bad)
jecxz
test
xchg
mov
and
add
xor
js
inc
jno
arpl
dec
es
loope
cmps
sub
dec
ins
movs
lods
idiv
cmc
cdq
pop
pop
frndint
mov
cs
push
(bad)
stos
mov
jno
dec
pop
ficom
push
imul
loope
in
(bad)
lods
mul
lea
fwait
into
pop
and
pushf
mov
push
jmp
and
in
outs
pop
cmp
cmp
adc
cmps
mov
jmp
(bad)
push
mov
mov
stos
sub
add
jmp
inc
pushf
xchg
pushf
lods
pushf
ins
jne
sahf
sti
call
mov
dec
pop
call
jge
cmc
mov
rcl
cdq
inc
jmp
adc
xchg
nop
xchg
cmp
dec
jl
xchg
mov
mov
jnp
ret
int
mov
cli
jno
xchg
dec
outs
leave
out
cmp
cdq
push
sub
dec
lds
jecxz
mov
jne
sub
push
test
rcl
mov
mov
sbb
jne
cmps
xchg
xlat
(bad)
mov
jnp
leave
test
daa
add
test
loop
push
or
xchg
shl
jbe
ds
xor
icebp
cmps
dec
pop
mov
and
(bad)
out
loope
scas
mov
pop
test
xor
test
(bad)
ret
stos
sub
sahf
icebp
xchg
fcomp
mov
fucomp
div
pop
push
hlt
retf
pop
adc
ficomp
aam
sbb
push
call
mov
xchg
shr
jne
xchg
pop
add
pushf
lods
sub
in
frstor
mov
rcl
cmp
ret
sub
out
dec
xor
gs
pushf
jo
movs
inc
pop
sbb
mov
and
pop
inc
dec
lds
arpl
mov
jecxz
nop
jno
inc
outs
(bad)
mov
cmc
popa
xor
mov
jns
ins
test
aaa
sub
pop
data16
in
cmc
cmp
mov
stos
jmp
leave
scas
pop
fidivr
(bad)
aam
mov
ja
out
loop
inc
jle
lock
in
rcr
xlat
dec
shl
es
data16
lds
cmps
cmps
pop
outs
rcr
div
xor
jle
mov
aam
std
cmp
push
mov
pushf
or
inc
jp
imul
sbb
daa
pop
repz
inc
stc
pop
adc
mov
dec
cli
test
imul
pop
mov
adc
dec
ja
repnz
lods
mov
or
cmp
adc
xor
call
jp
pop
dec
jae
pop
in
scas
arpl
xchg
stos
dec
jp
ja
stc
mov
stc
shl
test
hlt
xchg
mov
sbb
mov
xchg
mov
sub
shr
sbb
sub
cmps
push
(bad)
ss
int3
sub
dec
xchg
inc
push
xchg
out
xor
push
adc
popf
mov
adc
push
int3
xor
mov
shl
lahf
mul
inc
mov
push
stos
xchg
mov
sbb
mov
aas
loop
dec
in
xchg
xchg
jl
lock
imul
(bad)
ret
dec
cmp
pop
jmp
retf
xchg
cmp
bnd
(bad)
aam
clc
scas
out
lahf
outs
aas
leave
jmp
sub
jmp
scas
xlat
movs
mov
mov
rcl
aam
jp
mov
mov
jns
add
test
add
les
iret
xchg
mov
lock
cdq
ins
push
dec
mov
outs
sub
xchg
or
push
movs
fisttp
imul
mov
xlat
mov
mov
out
rol
cmps
xor
mov
adc
sub
fdivr
jae
(bad)
sahf
idiv
add
fucom
xchg
jmp
imul
jge
idiv
cwde
ja
or
popf
xlat
mov
inc
jp
dec
fcomp
int
(bad)
in
jb
nop
mov
xchg
push
hlt
stos
sub
loope
mov
jne
jns
mov
jmp
adc
xchg
xor
push
jmp
adc
xchg
cmps
jmp
imul
pop
xor
addr16
push
lea
cmps
sbb
lds
mov
mov
test
(bad)
ins
dec
fbld
pop
por
rol
mov
cmp
cmc
or
cmp
xor
mov
push
ret
in
jnp
lahf
sahf
ja
(bad)
adc
popf
pop
mov
aam
mov
inc
stos
les
popa
call
jmp
mov
or
mov
es
cmps
sub
jmp
(bad)
fnsave
out
in
jns
ins
(bad)
fisttp
or
(bad)
lock
sub
sub
or
in
jmp
js
and
mov
cmps
ficom
sub
mov
out
mov
popa
pop
jecxz
jns
sub
xor
mov
cmps
inc
xchg
jae
xchg
dec
retf
and
jbe
stos
mov
xchg
xchg
in
dec
fild
mov
mov
mov
inc
cs
sbb
repz
repz
inc
pop
push
dec
dec
dec
mov
lods
sub
out
frndint
push
jno
push
fsub
dec
outs
push
test
sub
in
pop
fadd
push
mov
int
(bad)
mov
fldenv
jle
sti
les
dec
jns
jmp
mov
(bad)
call
aam
sbb
sub
cmps
aas
pop
ficomp
push
xchg
aad
loop
cmp
push
test
mov
mov
int
push
jg
stos
shr
adc
stos
push
push
neg
aad
jne
adc
sub
sti
ror
mov
jne
sub
into
adc
push
popf
int3
inc
ins
fidivr
ficomp
cmovbe
outs
(bad)
sbb
jb
mov
movs
push
rcl
imul
mov
mov
imul
fcmovbe
hlt
mov
mov
movaps
retf
clc
jmp
scas
test
inc
push
cld
push
pushf
push
xchg
mov
dec
(bad)
fstp
ss
push
dec
sbb
fist
mov
cmc
outs
ja
idiv
popf
ja
xor
loop
cmps
jne
int
imul
stos
outs
aaa
ror
out
adc
jg
push
ds
mov
jae
mov
cdq
sub
fisub
movs
mov
sbb
jg
and
jg
std
cmp
push
jmp
push
mov
push
test
pop
mov
push
adc
xor
inc
into
jno
arpl
in
fucomip
mov
stc
fcmovbe
cld
inc
jns
data16
cmp
pushf
shr
push
xchg
call
or
push
jge
lahf
imul
mov
shr
cmps
pop
pop
aaa
imul
pop
sbb
pop
lock
mov
popa
repz
js
imul
ret
(bad)
ins
cld
dec
sti
daa
sub
jmp
out
lods
loopne
call
out
(bad)
cmp
(bad)
aam
imul
in
das
sub
mov
cmp
xchg
sbb
push
cmps
jle
aaa
jecxz
dec
(bad)
pop
jge
imul
ficomp
not
jmp
fcmovnu
outs
inc
push
movs
fisttp
outs
mov
sub
mov
xchg
mov
cli
and
xchg
add
push
jno
clc
arpl
mov
push
pop
shr
idiv
jle
stos
aad
dec
push
jne
pop
fcom
xchg
aas
fwait
jg
dec
enter
jge
xchg
mov
aaa
jne
jae
sti
(bad)
out
fnstsw
push
pop
gs
or
and
ins
xchg
or
add
inc
(bad)
aam
xor
ins
aam
pop
jge
aaa
jecxz
cmp
outs
xor
rcl
jo
sub
(bad)
dec
fnsave
aad
dec
cmp
(bad)
(bad)
jnp
fmul
xor
fs
into
mov
jecxz
dec
pop
dec
stc
out
or
fmul
lock
jecxz
push
icebp
adc
jno
clc
stos
sahf
jge
lods
dec
push
jne
mov
dec
es
clc
push
ins
mov
mov
push
mov
xchg
repnz
mov
cld
cwde
cli
push
arpl
mov
out
dec
fst
mov
lock
(bad)
xor
add
pop
adc
xchg
(bad)
mov
in
or
cmp
dec
xor
xor
cmp
popa
and
cmc
cmp
mov
add
jne
pusha
jecxz
cli
mov
fst
shl
mov
adc
mov
test
xchg
dec
mov
sbb
lea
xchg
outs
enter
stc
in
das
sub
in
stc
xchg
mov
xchg
movs
adc
xor
lea
cmps
or
pushf
movs
ret
ss
loope
or
in
and
cdq
push
test
inc
cdq
ins
sbb
jp
mov
rcr
push
dec
mov
push
je
xlat
sbb
jmp
mov
daa
xchg
xchg
push
push
fadd
sub
ret
cmps
or
out
add
sbb
pop
xlat
mov
test
xchg
fidivr
jnp
sub
inc
sbb
mov
jmp
fstp
xor
stos
or
dec
mov
cmp
aaa
pop
inc
ja
shl
xchg
outs
jno
sar
or
cmps
mov
sti
pop
mov
cmc
sbb
xor
push
jne
adc
mov
mov
mov
pop
adc
aaa
in
xchg
mov
mov
mov
int
adc
jg
imul
stc
sbb
test
lahf
lods
ja
mov
dec
popf
mov
stos
jo
dec
mov
xchg
jb
inc
mov
fisub
xor
dec
xor
xchg
push
add
neg
adc
mov
fcomp
pop
xor
(bad)
int3
jno
mov
ret
lods
(bad)
adc
(bad)
jno
push
outs
or
popf
ficom
pop
mov
imul
outs
retf
lds
aam
fwait
push
jle
cmp
inc
(bad)
retf
ror
sub
retf
fwait
pop
cmp
ret
xchg
mov
or
imul
jnp
shl
pop
xchg
cmp
movs
mov
xlat
rol
xchg
mov
test
stos
mov
mov
hlt
popf
cwde
mov
xor
nop
test
popa
dec
sub
add
ins
xchg
cwde
hlt
sbb
sti
ret
sub
ror
pop
mov
mul
repnz
inc
jae
pop
dec
push
lods
sub
mov
xchg
mov
scas
mov
sub
mov
jb
and
inc
mov
cmc
(bad)
movzx
xlat
ins
in
in
mov
cmps
cmp
(bad)
aas
fcmovu
adc
push
sub
aas
mov
push
fmul
jecxz
aam
aam
test
push
clc
out
mul
pushf
adc
out
scas
adc
mov
ficomp
push
cmp
add
jae
mov
cmp
lahf
mov
and
jno
aaa
nop
xor
in
push
fs
cdq
div
movs
xchg
and
push
adc
add
sbb
xlat
jmp
pop
enter
inc
pop
inc
cmps
mov
add
cmc
std
pop
sub
out
std
pop
cld
fcomip
dec
stc
out
adc
fucom
push
lock
adc
add
outs
lock
ret
inc
jge
mov
in
dec
jo
cmp
or
or
inc
or
sar
jge
scas
icebp
pop
mov
idiv
mov
jbe
test
pop
lahf
stc
popf
(bad)
jmp
cmp
stos
mov
arpl
test
aad
dec
iret
leave
call
xchg
xchg
dec
cmp
retf
add
xchg
in
popf
jbe
je
in
retf
jecxz
out
ds
adc
loope
movs
cmp
ja
repnz
stc
lock
pop
jle
fs
aam
adc
sub
push
mov
imul
pushf
repz
loope
pop
and
xor
loopne
aad
test
popf
aas
inc
pushf
pop
sbb
fldl2e
mov
and
pop
sbb
lods
cmps
pop
mov
or
mov
jp
sub
or
retf
popf
xchg
and
add
dec
mov
scas
out
push
(bad)
jne
jp
cdq
outs
outs
push
das
aad
retf
shl
mov
inc
or
ss
clc
inc
(bad)
or
xchg
inc
loop
mov
xchg
ret
ss
xchg
dec
and
and
fmul
mov
loopne
mov
and
inc
jbe
(bad)
jmp
jae
stos
pop
fbstp
icebp
cld
jle
aaa
adc
sub
sub
jbe
ret
out
pop
jmp
out
inc
(bad)
jno
shl
gs
push
jmp
test
fs
pcmpgtb
xchg
mov
jno
and
mov
rol
cmp
add
inc
test
cwde
mov
xor
sbb
test
nop
mov
xchg
(bad)
fstp
and
mov
adc
fldcw
dec
arpl
pop
mov
jno
fcmovbe
sbb
and
(bad)
xor
das
inc
movs
push
js
push
sbb
xchg
fiadd
lods
sub
fcmovne
dec
inc
mov
leave
out
leave
out
test
cmp
retf
movs
test
sub
push
jge
lahf
xchg
data16
jl
jp
jge
stos
cmps
mov
(bad)
jecxz
xchg
lods
fcomp
dec
xor
push
cmps
push
data16
ret
xchg
push
cmps
cmps
sub
cli
mov
retf
xchg
xor
dec
xchg
outs
pop
sub
cld
xlat
test
enter
mov
shl
jle
lock
fwait
imul
dec
movs
xor
and
sub
jmp
loopne
ss
push
xchg
xlat
mov
dec
movs
(bad)
ror
call
jbe
xchg
div
sub
sahf
test
cmc
inc
les
stc
aam
xchg
ds
call
jg
xchg
jmp
push
retf
xor
jae
fcmovnbe
clc
data16
dec
sub
and
cld
(bad)
clc
cld
lahf
cdq
xlat
fsubr
imul
mov
(bad)
dec
push
and
adc
adc
rol
neg
push
rcl
in
pop
mov
call
jl
jmp
(bad)
and
xchg
rcr
jp
push
mov
retf
pop
imul
and
rcl
xchg
cmp
inc
jge
movs
mov
pop
mov
xor
xor
dec
xor
mov
push
mov
movs
xor
jo
dec
aad
adc
stos
dec
es
fnstenv
lahf
pop
mov
pop
xchg
jno
in
push
sbb
pop
jns
imul
lds
fdivr
add
scas
pushf
cwde
add
inc
(bad)
and
push
sti
push
and
add
fisubr
popf
xchg
jns
fimul
out
in
inc
cs
sahf
outs
into
sub
aad
jae
mov
addr16
and
dec
iret
sbb
daa
inc
mov
ds
and
out
rcr
xor
jp
sub
int3
fimul
(bad)
lods
sbb
leave
mov
lock
ret
sub
mov
add
clc
ror
icebp
dec
and
jl
push
test
mov
les
cmps
lods
lods
stc
add
add
aas
pushf
sbb
ror
pop
mov
cli
inc
call
call
xor
pop
enter
enter
and
jp
test
fist
mov
loope
and
pop
jbe
adc
mov
out
xchg
icebp
std
loop
jns
jne
ret
stos
outs
dec
xchg
pushf
pop
leave
jae
mov
mov
push
adc
sbb
(bad)
lea
and
add
push
mov
call
xchg
inc
pop
or
sahf
pushf
(bad)
dec
and
jecxz
and
daa
pop
imul
xlat
jo
lock
sub
mov
mov
inc
imul
imul
(bad)
loope
or
in
jo
push
inc
out
pop
ret
push
and
cwde
(bad)
jo
xchg
ja
fild
sbb
xchg
fist
or
les
jecxz
inc
mov
adc
or
(bad)
outs
out
aam
imul
cmp
aad
pop
pop
jp
mov
dec
daa
adc
popa
cmps
push
hlt
dec
loope
add
and
cwde
cdq
dec
fwait
(bad)
jns
ins
xor
pusha
jnp
xor
inc
push
sub
xchg
mov
shl
popf
pop
sbb
fdiv
pop
or
fmul
cmps
div
push
cli
and
mov
(bad)
ja
in
daa
pop
sbb
mov
cs
sub
dec
iret
inc
test
jp
sbb
jge
adc
ret
mov
inc
arpl
push
mov
adc
aas
pushf
mov
arpl
arpl
mov
imul
and
jge
jno
pushf
mov
inc
mov
stos
fidivr
pop
push
shl
push
shl
not
sbb
push
out
scas
and
(bad)
cdq
sbb
in
in
(bad)
in
repz
mov
fs
or
sub
in
fstp
leave
jbe
pop
sar
push
jmp
xor
jg
cmp
xor
je
push
jp
push
sahf
push
adc
ficom
mov
stos
lea
pop
inc
pop
pop
and
icebp
xchg
fcomp
xchg
(bad)
cwde
iret
aam
pop
push
and
int3
cmp
cmp
into
jae
cmp
jmp
push
dec
test
add
push
stos
mov
and
pop
sub
dec
lds
sub
scas
or
lds
bound
scas
pop
xrelease
dec
sbb
xor
pusha
xchg
arpl
cmps
shr
int3
and
xor
neg
sub
cli
cmc
pop
std
fst
jmp
fsubr
pushf
out
test
sbb
push
cmp
mov
(bad)
dec
in
mov
adc
jno
adc
nop
stos
es
in
cld
mov
ffree
push
push
in
iret
outs
div
pop
fisubr
in
shr
adc
and
adc
add
push
adc
sahf
div
iret
into
pop
inc
sahf
stc
add
hlt
mov
dec
xchg
push
les
cmp
jne
repz
scas
xor
mov
cmp
fisub
and
pop
enter
sub
mov
call
mov
jmp
fwait
jbe
push
stos
outs
or
mov
or
mov
and
(bad)
cmp
sbb
pop
sbb
addr16
jecxz
cmp
pop
push
imul
jge
or
cmp
xchg
jl
xchg
mov
das
data16
jp
out
mov
sub
inc
scas
xor
inc
popf
popa
pop
mov
cmps
jb
cmp
xor
pop
mov
sbb
int3
xor
aad
push
rcl
lods
xchg
fdivr
(bad)
cld
or
mov
popf
jno
mov
data16
mov
mov
push
sbb
mov
inc
xor
je
and
push
aad
inc
idiv
dec
push
hlt
cmps
mov
pop
dec
clc
xor
mov
sub
cmps
adc
sub
leave
mov
mov
sbb
out
dec
int3
lea
js
cmp
jno
call
fisttp
pop
test
scas
jae
mov
retf
addr16
mov
outs
mov
ret
loop
bnd
(bad)
push
mov
std
test
xlat
mov
idiv
mov
arpl
fisub
mov
dec
dec
daa
add
jae
mov
or
jns
loope
loop
fbld
movs
mov
lock
jnp
pop
test
adc
cmc
inc
pop
inc
cmps
(bad)
repnz
ret
xor
inc
js
push
mov
dec
ins
scas
mov
jecxz
sub
sub
aas
push
push
mov
dec
sbb
enter
mov
shl
xchg
ds
pop
jnp
repz
push
fwait
(bad)
mov
stos
in
xchg
xchg
pop
mov
aam
enter
inc
inc
mov
xchg
add
mov
fsub
dec
jno
and
or
sub
les
inc
mov
mov
add
push
test
pop
test
test
clc
mov
aaa
cmc
mov
push
imul
inc
pop
bound
sbb
inc
(bad)
aad
push
cmp
je
mov
adc
std
popa
pop
add
loop
retf
ret
pop
in
cmp
mov
ja
and
xchg
call
jae
sub
sub
scas
scas
test
cmp
outs
movs
cmp
bswap
sub
adc
out
(bad)
pop
adc
add
dec
cdq
pop
pop
mov
push
in
xchg
jg
jne
stc
adc
test
loopne
and
pop
mov
mov
mov
int3
ins
dec
out
mov
xor
std
test
or
cmc
push
rcl
nop
cmc
int
adc
xchg
push
xor
mov
repz
jbe
mul
fdivr
div
sub
xchg
out
mov
mov
imul
jp
fisttp
xchg
push
(bad)
(bad)
xchg
jmp
inc
jb
shl
pop
jae
ins
adc
jne
dec
mov
aad
retf
mov
int
out
in
(bad)
mov
adc
xor
pusha
imul
hlt
imul
jmp
cdq
jmp
imul
fwait
hlt
in
cmp
data16
inc
das
xchg
gs
sub
movs
lods
je
repz
test
dec
call
mov
xchg
mov
sahf
imul
icebp
xchg
dec
xchg
jge
jnp
sub
arpl
add
or
xchg
movs
adc
pop
jge
mov
push
not
(bad)
jmp
mov
ja
popa
loopne
cwde
lods
cli
xchg
pop
dec
aaa
or
imul
push
lahf
cld
sbb
mov
hlt
in
sbb
inc
dec
adc
test
dec
aad
and
jecxz
in
push
xor
out
popf
push
push
mov
dec
adc
dec
sar
mov
jp
cmps
(bad)
enterw
push
in
push
retf
inc
popa
pop
xchg
aas
ret
fst
sbb
scas
dec
or
adc
rcr
iret
jbe
sub
lods
fmul
(bad)
fs
dec
fnstenv
pop
inc
cdq
movs
fcom
xor
jmp
scas
sub
and
test
xchg
stos
cmps
fwait
ret
lea
dec
add
sbb
pop
pop
xchg
cmp
jmp
imul
jmp
shl
cmps
adc
test
jge
hlt
cmp
sti
mov
aam
dec
aad
movs
sbb
sti
mov
pop
mov
cwde
mov
push
inc
stos
aas
and
iret
sti
lods
int3
sti
popa
fcmovbe
adc
adc
lds
test
lods
add
push
loopne
xor
fcom
ins
test
cld
cmp
rcl
popa
xchg
out
pushf
or
test
inc
jae
pop
cmps
movs
scas
pop
xchg
js
aam
lods
dec
ret
mov
js
in
jo
mov
(bad)
cwde
fcom
inc
mov
(bad)
adc
push
test
cmps
jge
mov
xchg
inc
jecxz
and
dec
mov
push
push
cli
push
sbb
sti
stc
fimul
jle
ret
pop
je
adc
movs
sti
mov
dec
popf
dec
scas
call
fs
stos
retf
cdq
test
add
adc
or
cmc
add
shl
aas
imul
lock
mov
jecxz
mov
xchg
test
out
fsubr
cmps
xor
sub
call
dec
inc
mov
or
dec
pop
lahf
call
pop
and
pushf
jb
into
jecxz
sbb
in
test
jle
std
mov
jns
ins
repnz
mov
in
inc
rcr
sti
push
leave
mov
and
dec
dec
sub
into
retf
ret
xchg
or
mov
mov
mov
sub
cmp
out
xchg
sub
xchg
jmp
imul
in
cwde
jmp
test
lods
aaa
pop
adc
outs
stc
pusha
movs
cld
ins
leave
movs
mov
(bad)
cdq
mov
mov
shl
int
dec
dec
lahf
sub
into
jbe
sar
push
adc
jne
pop
scas
and
into
and
in
mov
jo
dec
fist
fist
popf
fisttp
std
or
cmp
mov
cwde
mov
sbb
jno
inc
sub
sahf
xchg
call
call
inc
lods
cmp
lea
pop
dec
lods
test
mov
test
stc
cmps
dec
sub
cli
lods
(bad)
adc
adc
push
arpl
jns
xor
test
mov
mov
push
leave
xor
sub
repz
cmp
mov
retf
hlt
xchg
dec
pop
je
mov
push
sub
push
sub
repnz
test
mov
xchg
xchg
movs
sub
sub
(bad)
push
inc
push
jecxz
(bad)
(bad)
ds
push
sbb
mov
mov
pop
imul
xor
mov
sti
jp
movs
rcl
push
cmp
out
pop
and
cmps
fdiv
call
mov
sbb
jle
xchg
lock
xchg
xor
dec
add
sub
xor
cmovns
in
jae
test
push
pushf
scas
jmp
xlat
lods
stos
sub
sub
dec
dec
pop
pop
fs
into
loope
xchg
push
dec
cmp
jae
arpl
fild
ins
loope
into
iret
pop
and
lock
fadd
clc
lods
icebp
pop
movs
xchg
jbe
(bad)
gs
inc
mov
inc
fwait
nop
stos
push
sub
xor
mov
mov
loope
adc
jb
mov
pop
mov
inc
push
xchg
adc
push
push
jb
xchg
jge
jbe
(bad)
mov
fldcw
sbb
and
pop
js
call
cmp
mov
outs
mov
cmc
push
dec
stos
in
popf
mov
sbb
fld
loopne
inc
je
or
(bad)
aam
push
jge
dec
js
add
out
sti
lods
jns
fcomp
xor
aaa
push
or
pop
lea
js
outs
imul
and
loop
lods
cli
stos
mul
call
fstp
push
rcl
imul
(bad)
das
fisub
pop
enter
neg
out
(bad)
pusha
mov
aam
jmp
push
xchg
xchg
jl
sar
out
mov
jo
push
in
aas
outs
xor
jge
jno
test
mov
dec
dec
pop
xor
mov
fwait
jle
arpl
cmp
ss
sbb
(bad)
pop
xchg
pop
cmps
jns
pop
push
pop
xor
add
push
add
nop
jle
scas
in
in
push
retf
in
push
mov
addr16
dec
retf
fld
out
enter
inc
jne
test
xor
scas
push
xchg
cmps
dec
dec
cmp
retf
dec
repz
mov
movs
movs
sub
add
xchg
add
inc
sbb
ds
sub
inc
cmp
push
mov
pop
scas
scas
mov
(bad)
stc
out
sub
stos
bound
sub
xor
cli
outs
not
outs
rcr
push
push
in
jmp
pop
jmp
mov
mov
leave
dec
dec
fcom
test
mov
mov
das
or
xchg
cmp
pushf
(bad)
je
test
pusha
test
mov
inc
push
fidiv
jae
mov
test
lods
jbe
xchg
in
in
rcr
dec
push
mov
adc
mov
mov
sar
popf
(bad)
pop
mov
imul
es
adc
ss
jbe
xchg
pop
leave
mov
inc
push
and
aas
jl
cwde
fsubr
retf
push
cmc
loopne
loope
out
outs
or
jae
xchg
jbe
xor
popf
inc
stos
(bad)
pushf
pushf
fdiv
inc
jecxz
inc
xor
cmp
out
bound
sub
mov
pop
mov
jae
push
adc
in
cmps
xlat
dec
xchg
inc
and
iret
cmp
nop
mov
xchg
cmp
nop
and
sbb
hlt
push
mov
xchg
(bad)
jp
jmp
add
pop
in
jmp
adc
lds
je
popf
imul
pop
or
mov
cmp
sub
push
(bad)
mov
push
sub
push
(bad)
push
aam
ror
jbe
outs
movs
neg
xchg
xor
jbe
or
stos
and
mov
pop
out
jge
mov
std
xchg
dec
sbb
fcmovnbe
imul
and
mov
std
pop
pop
mov
aaa
inc
fwait
sub
rcr
sub
mov
cmp
das
cs
push
sub
inc
dec
mov
sbb
ins
(bad)
fisubr
bound
cmovle
adc
movs
lods
lods
fld
out
not
lods
lods
cld
dec
int
mov
pop
cmp
dec
cmp
mov
mov
push
rcl
mov
mov
mov
mov
xchg
stos
push
pop
xchg
pop
xchg
jb
xor
ficomp
movs
mov
xchg
arpl
sbb
(bad)
cmp
jge
retf
outs
push
or
xor
ror
out
xchg
xchg
loop
sub
jnp
rol
push
scas
dec
ror
dec
leave
lods
fidiv
xor
push
xor
push
sub
sbb
jno
xlat
lods
sar
and
scas
leave
mov
mov
lods
dec
scas
fnsave
sti
arpl
cmp
dec
xor
(bad)
(bad)
aam
jmp
movs
call
jnp
shr
bound
sub
push
test
mov
pop
cli
jo
xor
jecxz
sti
sbb
ins
sbb
dec
scas
fidiv
(bad)
jne
lahf
stc
aas
inc
adc
iret
cmp
stc
into
jae
ds
int
mov
enter
ss
push
fdivr
push
call
lea
call
cmp
xchg
es
xor
inc
inc
cdq
dec
push
mov
cmc
xchg
pop
icebp
jmp
fs
retf
jb
adc
inc
in
gs
dec
adc
sub
add
movs
push
adc
push
retf
cld
pop
fstp
pop
dec
cmp
push
lea
dec
leave
jnp
outs
into
and
adc
es
mov
mov
add
jl
xchg
inc
jno
cmp
cli
or
pop
les
jb
icebp
push
mov
inc
data16
or
pop
leave
jne
push
pop
(bad)
sti
dec
push
cdq
and
xchg
sahf
je
out
and
sbb
xor
jle
(bad)
(bad)
fst
int
clc
pop
ss
(bad)
(bad)
iret
repnz
cmp
sti
pop
les
(bad)
in
push
(bad)
sbb
mov
jmp
js
retf
fwait
aam
daa
inc
clc
mov
out
dec
popa
aas
sub
movs
int3
(bad)
out
jmp
sub
sub
leave
inc
mov
cmp
jno
mov
leave
cwd
(bad)
jae
imul
cmp
scas
fwait
and
mov
pop
addr16
and
fisubr
dec
mov
outs
popf
fsub
mov
outs
mov
dec
xor
inc
out
ja
push
arpl
pop
mov
into
mov
shl
data16
push
scas
jne
add
inc
lock
sub
cbw
fsubr
ins
adc
rcr
cmc
(bad)
ja
dec
(bad)
cmp
(bad)
sar
push
push
retf
or
jns
push
xchg
fidivr
rcr
movs
mov
call
ins
mov
sub
or
imul
pop
pop
mov
inc
dec
mov
mov
sahf
sub
mov
push
test
fwait
jbe
dec
pop
mov
mov
jb
fbld
lock
xchg
fimul
jmp
in
out
in
in
xchg
pusha
pushf
popf
lahf
sbb
les
cmp
jae
fwait
mov
jo
xchg
mov
inc
inc
dec
xchg
jb
push
test
jle
mov
hlt
mov
sbb
add
js
out
dec
rol
sub
xchg
mov
sub
dec
ins
jne
mov
mov
leave
xor
stos
call
inc
and
cmps
xchg
movs
or
push
cmp
mov
mov
lods
shr
mov
push
xlat
ins
retf
pop
mov
adc
popf
push
cwde
bound
scas
int3
loop
mov
mov
push
(bad)
cmp
cmp
in
jl
pop
std
sti
mov
lds
pop
ror
ror
(bad)
clc
xor
cdq
mov
stos
test
jno
lea
retf
push
pushf
lods
stos
mov
dec
pop
jae
adc
sahf
sti
fs
push
sub
xchg
(bad)
add
jne
arpl
xor
in
mov
pusha
add
mov
outs
mov
mov
sbb
xor
mov
mov
xchg
fidiv
aam
test
xchg
dec
test
aaa
out
xchg
stos
cwde
ret
mov
(bad)
lahf
mov
cmp
mov
mov
inc
aaa
xchg
xchg
dec
push
in
jmp
hlt
jp
cmps
sti
mov
or
sub
movs
mov
hlt
mov
mov
sti
in
bound
push
out
sbb
push
test
push
imul
(bad)
mov
std
push
push
fistp
xchg
rep
ds
cwde
jge
popf
pop
pop
adc
movs
mov
clc
push
mov
jmp
or
outs
sbb
in
mov
cmps
push
sub
enter
sbb
dec
sahf
call
rep
sub
add
and
out
jno
sub
xchg
mov
dec
stos
push
mov
fmulp
into
jmp
xor
mov
jmp
sahf
cwde
cmp
mov
inc
jae
push
sbb
imul
aas
stos
cld
cmp
sbb
jmp
cwde
xchg
mov
retf
mov
dec
dec
adc
addr16
dec
mov
mov
add
shl
xor
fcomp
dec
mov
mov
movs
in
out
xchg
push
out
lds
repz
ss
xchg
bound
les
mov
mov
sbb
dec
cs
mov
pop
xchg
jmp
sbb
clc
mov
clc
cmp
iret
es
movs
aad
mov
int
movs
sbb
gs
and
pop
push
outs
daa
cdq
sub
and
(bad)
imul
sahf
push
mov
pop
sbb
leave
mov
mov
dec
cmp
push
dec
div
imul
jmp
ss
xchg
push
xchg
push
jp
jecxz
je
data16
adc
xor
fstp
jg
imul
sti
stos
pop
aam
daa
xchg
hlt
mov
(bad)
cmp
xor
retf
inc
xchg
shl
mov
jge
test
lock
(bad)
sbb
mov
pushf
addr16
xchg
xlat
aam
cmp
pop
popf
lahf
leave
cmc
dec
sbb
lods
pushf
inc
fist
std
mov
pop
inc
jae
mov
xchg
xchg
push
(bad)
and
add
sbb
inc
push
xchg
xor
mov
pop
xchg
mov
xchg
ror
fldcw
fist
inc
or
(bad)
lock
test
das
push
pop
sbb
adc
xor
retf
mov
dec
lods
add
mov
sbb
lahf
daa
jmp
pushf
cdq
dec
into
xor
and
pop
push
add
sbb
scas
mov
adc
test
add
mov
sub
or
mov
jbe
cmp
pop
inc
gs
cmc
js
pushf
pop
aas
push
jge
cwde
in
jbe
push
shl
dec
(bad)
out
ret
(bad)
bswap
sahf
dec
push
imul
daa
daa
push
call
sub
hlt
test
cmp
pop
call
retf
or
xchg
mov
jb
dec
addr16
xchg
xchg
sti
push
(bad)
in
hlt
mov
imul
ss
mov
cmp
iret
xchg
jne
mov
shl
ja
je
outs
inc
mov
retf
jbe
lds
mov
test
and
pop
push
popf
sub
retf
pop
ret
dec
sub
lock
inc
adc
call
mov
loopne
in
ret
push
aad
outs
iret
retf
xor
xor
mov
mov
mov
iret
and
sti
cmp
and
call
icebp
cmp
ins
cmp
mov
out
sahf
sub
sub
ins
scas
fwait
mov
rcl
jns
or
or
mov
stc
fisubr
rcr
sub
add
mov
fisubr
jmp
jge
jno
mov
jmp
jmp
lods
or
(bad)
pop
sbb
lahf
ficom
fstp
jp
cmps
movs
shl
pop
pop
mov
xchg
adc
mov
dec
popf
rcl
jns
add
push
and
pop
movs
imul
cmc
ss
je
lods
bound
xchg
add
xchg
ret
pop
dec
dec
fwait
ins
pop
clc
mov
dec
mov
pop
stos
fmul
das
int
push
(bad)
nop
dec
pop
jp
push
push
lods
pop
int3
mov
or
pop
ins
dec
or
and
sub
std
fild
cmp
(bad)
xchg
sub
shl
cmp
cmp
ja
sub
pop
and
(bad)
push
mov
ins
pop
lds
out
push
xchg
push
and
push
push
mov
adc
popa
dec
cmp
in
pop
pop
iret
adc
jne
(bad)
cmp
mov
pop
pushf
xor
mov
lods
mov
das
lsl
mov
test
add
push
ins
aad
pushf
ja
movs
test
cmp
ja
out
test
fst
into
and
retf
shr
push
xor
mov
ds
xor
and
movs
add
stos
mov
or
div
mov
in
xchg
lea
fsubrp
in
(bad)
mov
mov
mov
fist
test
int3
dec
ds
movs
iret
sub
push
xchg
call
and
lods
ds
add
jmp
push
dec
(bad)
lods
aad
lods
xchg
stos
pop
ret
(bad)
stc
out
aaa
sub
jno
fidivr
ret
int
dec
mov
fimul
test
outs
cmps
stos
mov
icebp
movs
pop
jne
ret
push
fnstsw
dec
mov
sub
xchg
ret
dec
xchg
bnd
xor
pop
mov
stc
retf
push
ret
rcl
imul
(bad)
arpl
aam
icebp
cmp
inc
xor
shl
int
dec
push
mov
adc
mov
fld
jle
loope
bound
mov
xor
cmp
imul
js
xchg
sbb
mov
sub
jo
fbstp
mov
cmp
fabs
gs
mov
call
sub
dec
(bad)
imul
jmp
aaa
dec
mov
xchg
jne
gs
leave
xor
dec
cmps
dec
and
pop
mov
dec
inc
xchg
(bad)
cli
sbb
loope
jp
pop
cmc
pop
cmp
mov
mov
pushf
pop
pop
stos
cmp
push
test
pop
test
cmp
jae
cwde
sti
aaa
xchg
repnz
xlat
or
fnsave
xlat
pop
cmps
pop
aam
in
rol
cmp
xchg
test
sub
imul
call
jb
loop
cmps
fisubr
dec
mov
mov
iret
sbb
fxam
cmp
jns
test
cmp
sub
(bad)
push
retf
ins
push
imul
push
addr16
ss
dec
mov
pop
ins
sub
or
sbb
add
ror
mov
pop
ins
push
sub
ret
fidivr
jne
pop
(bad)
shr
dec
pop
scas
int3
push
fsubr
ret
push
pop
sti
inc
or
xor
rcr
leave
xor
cwde
lods
xor
gs
sti
idiv
sahf
pop
mov
gs
das
out
daa
push
sti
mov
mov
repz
ror
jmp
sub
adc
sbb
imul
test
imul
mov
jecxz
dec
lods
ins
cmps
sub
outs
mov
ret
pop
fucompp
fnsave
pushf
dec
stos
movs
jp
addr16
stos
sbb
aas
inc
cmp
in
mov
mov
and
imul
jmp
mov
aas
out
add
mov
arpl
and
sbb
xchg
jno
data16
fcmovu
ins
out
(bad)
cmp
lea
in
xor
(bad)
adc
daa
js
pop
pop
xchg
mov
mov
loope
test
cld
loope
fist
scas
rcr
frstor
mov
aaa
inc
scas
fadd
pminub
ins
and
icebp
out
mov
lahf
jecxz
xor
fild
inc
cmp
out
jne
mov
jne
push
inc
dec
xchg
lods
jmp
add
cmps
push
fmul
ins
imul
mov
or
mov
cmp
sbb
(bad)
imul
stos
adc
cmps
fninit
inc
and
dec
jbe
popf
fldcw
pushf
fwait
jmp
pushf
push
dec
call
mov
mov
and
mov
shl
in
xor
into
dec
in
aas
in
retf
jmp
shl
push
jne
int3
sub
pop
cs
jg
ret
mov
mov
aam
add
vshufps
lds
imul
dec
sub
out
lahf
in
or
xor
fst
jmp
sahf
daa
(bad)
adc
push
pop
dec
pop
sub
ror
das
pop
xor
inc
add
push
test
shr
jge
cdq
ss
fcomp
jbe
mov
jmp
ja
lahf
xchg
imul
addr16
push
jb
popa
inc
mov
pop
sbb
retf
sbb
pop
sbb
inc
mov
repnz
js
out
(bad)
bnd
dec
jns
jnp
xchg
stos
js
out
cwde
retf
fucomp
je
inc
and
outs
xor
mov
sbb
sbb
ficomp
inc
pop
push
inc
scas
ins
arpl
cld
loop
ja
jb
rcl
cmc
cdq
imul
mov
mov
sub
xchg
neg
dec
mov
push
dec
cwde
xchg
dec
dec
xor
in
psrad
cmp
jp
cmps
adc
cmp
xchg
cmp
xor
test
test
push
sub
mov
push
(bad)
(bad)
movs
fisubr
aam
sub
mov
push
xchg
cmp
pop
hlt
out
add
movs
imul
ds
gs
out
movs
cmp
pop
mov
cmps
shl
out
dec
addr16
sbb
adc
in
bound
mov
push
das
ror
cmc
fs
jecxz
movs
lods
mov
pop
dec
push
cmps
cmps
jp
fidivr
stos
mov
push
movs
jecxz
cdq
add
xchg
xchg
in
into
popa
dec
push
push
shl
xchg
sub
jb
jbe
xor
popa
and
dec
das
xchg
cld
mov
dec
sbb
dec
or
pushf
and
push
mov
mov
pop
inc
loope
in
(bad)
aad
mov
cmp
sbb
sahf
pushf
add
dec
lds
jno
mov
retf
call
stc
mov
repnz
imul
mov
lods
es
stc
sbb
out
aam
mov
cs
sub
stc
mov
(bad)
fs
out
sbb
cmp
adc
data16
dec
mov
adc
cmps
lods
sbb
add
(bad)
vpunpcklbw
add
pop
es
mov
adc
cmps
enter
les
push
fnstcw
pop
xchg
xchg
xchg
sub
scas
dec
ds
call
fldcw
adc
mov
rcr
ds
fld
xor
call
out
xchg
cld
lods
outs
int
xlat
jp
mov
xchg
retf
mov
pop
jle
jns
rcl
mov
ds
rcl
movs
repz
popa
push
lods
sub
clc
pushf
mov
in
aad
call
test
pop
sub
cmps
cmc
imul
(bad)
fwait
mov
add
sbb
add
addr16
in
pop
repz
stos
mov
aam
or
mov
call
jge
sti
sahf
and
mov
(bad)
jle
cmp
scas
out
jbe
sbb
imul
jmp
int3
les
mov
inc
in
push
pop
or
mov
adc
jns
add
sbb
xor
out
iret
fnstcw
cmc
cmp
es
mov
xor
sbb
push
inc
jmp
retf
fld
rcr
pop
hlt
push
jle
pop
xchg
push
dec
nop
or
inc
adc
sbb
xor
lea
xchg
cwde
repz
jns
ss
in
cld
mov
popa
inc
daa
retf
and
stos
inc
jns
adc
sbb
push
pop
dec
ficom
repnz
xor
mov
int3
test
push
push
pop
(bad)
lahf
bound
(bad)
ja
std
dec
jle
div
jnp
dec
xor
shl
pop
icebp
sub
jle
repz
jl
stos
jmp
js
div
inc
movs
mov
aaa
pushf
xchg
mov
or
fisub
cmp
pop
scas
push
outs
add
(bad)
icebp
popf
mov
loope
mov
outs
ins
or
(bad)
cs
pop
mov
dec
cmps
push
lock
cmp
enter
sbb
push
retf
xchg
scas
je
dec
push
inc
fistp
cmc
xchg
xor
xor
ja
ror
add
ins
sbb
jo
cmp
jecxz
(bad)
jecxz
ja
lea
mov
ret
push
call
cmps
sub
movs
cmp
pop
push
rep
jp
adc
adc
jne
sbb
or
ror
aas
lods
mov
jge
(bad)
xlat
pushf
push
jmp
sub
push
push
mov
push
lods
shl
repz
dec
push
ficom
sbb
sbb
rol
sub
jge
cli
dec
stc
cmc
cld
into
pop
addr16
les
test
das
dec
xchg
mov
in
and
data16
cmp
jmp
cmps
xor
cmp
ins
adc
pusha
outs
cmps
xor
not
xchg
in
inc
mov
xchg
outs
pop
movs
mov
and
jl
pop
aas
xor
xlat
pop
and
imul
sub
stos
pop
rcl
mov
dec
mov
pop
pop
jb
hlt
sbb
test
dec
cmp
add
mov
jmp
mov
jbe
popf
sbb
pop
dec
adc
aad
stc
xchg
outs
jp
mov
scas
enter
daa
push
fwait
xchg
call
rcl
popf
pop
xchg
push
lahf
rcr
mov
xor
mov
dec
lods
cmp
dec
sub
ds
das
xchg
mov
mov
bound
aas
cs
movs
pop
iret
into
pop
ins
mov
push
rol
loop
sub
(bad)
int
(bad)
mov
pop
out
xchg
fisubr
sbb
out
xchg
imul
rcr
fistp
call
sub
sub
sub
xor
inc
jbe
xchg
jns
enter
add
int
std
daa
sub
loopne
jle
push
pop
sub
or
ss
fwait
in
mov
add
daa
jno
ret
movs
jge
pop
les
popf
std
out
fucom
jnp
and
out
dec
movs
inc
js
xchg
push
and
pop
sub
popf
shl
aad
stos
movs
lods
pusha
out
shr
out
mov
cmp
mov
clc
fistp
int3
dec
mov
cmps
cmps
jnp
mov
push
add
mov
mov
adc
sar
jbe
stos
inc
xchg
jmp
popf
sar
and
jno
lds
cmp
inc
ja
jnp
test
fisubr
dec
aad
aas
or
aaa
jbe
cmp
add
mov
xchg
stos
test
dec
(bad)
xor
jmp
inc
mov
mov
in
jno
add
leave
(bad)
cs
adc
popf
cli
inc
loop
lods
int3
dec
xor
out
scas
pop
xchg
aam
call
xor
or
and
repz
sbb
test
push
add
add
shl
ja
xchg
push
or
jp
sbb
mov
fwait
push
xchg
les
adc
in
ret
xlat
rcl
and
mov
jno
adc
jnp
add
call
lods
pop
mov
pushf
rcr
sub
stos
jno
cld
jl
sbb
sub
aaa
in
mov
(bad)
jl
mov
jb
scas
and
and
je
jae
fwait
xchg
stos
pop
sar
out
push
lahf
ds
mov
imul
jge
pushw
xchg
out
jne
sbb
out
ins
es
mov
jecxz
lock
shr
pop
movs
jp
aaa
sbb
lods
pop
xlat
test
xchg
retf
and
pop
xchg
inc
dec
sbb
sbb
dec
adc
xor
push
jle
or
repz
call
xchg
test
test
mov
mov
or
test
cli
sbb
(bad)
test
pop
pop
fisubr
int
mov
and
ret
or
or
retf
push
ret
mov
fidivr
and
cld
push
shl
push
and
jne
mov
push
cmp
add
rcl
clc
stos
int
shr
mov
lods
inc
loopne
movs
cmp
aam
dec
stc
aad
out
popf
nop
push
jp
or
pop
fnstsw
xor
hlt
cmps
mov
push
lock
outs
in
test
cld
mov
push
dec
pop
pop
sub
adc
xchg
movs
adc
mov
push
pop
movs
leave
jmp
repnz
fs
lds
lds
jns
test
shr
sub
pop
mov
xor
out
jg
dec
lea
ja
in
repz
test
bound
test
cmc
clc
sbb
dec
mov
dec
ins
mov
adc
imul
rol
and
stos
mov
enter
jne
int3
ret
mov
inc
adc
int3
daa
je
out
cwde
bound
scas
fisttp
dec
jmp
js
dec
push
inc
lods
cli
(bad)
in
inc
sti
fisttp
in
cwde
xchg
dec
push
cmp
loop
xchg
jno
inc
sbb
fld
jmp
cdq
fsubp
ret
and
dec
out
aas
lods
inc
mov
add
ja
mov
aaa
cmp
les
daa
jle
arpl
dec
gs
aad
pop
fdiv
mov
sbb
sti
ds
xor
(bad)
pop
xchg
adc
mov
loope
push
pop
xor
popa
adc
test
scas
mov
enter
(bad)
cmps
(bad)
jmp
stos
pop
cmp
jecxz
repz
cmp
push
jno
dec
inc
xor
xor
push
stos
inc
xor
sahf
iret
scas
inc
shr
mov
stos
repnz
call
sub
out
lahf
and
jmp
fstp
sub
pop
mov
xchg
push
ins
push
aas
out
data16
out
ss
pop
push
dec
cmp
xor
lds
push
push
xor
fisubr
das
dec
cmp
cmp
jns
movs
push
dec
and
nop
xor
xor
out
mov
push
call
shl
stos
outs
sti
push
cli
outs
je
movs
(bad)
in
jne
out
fwait
popf
push
fldl2t
sbb
dec
push
push
mov
mov
mov
mov
(bad)
daa
or
dec
dec
pop
dec
pop
dec
lods
cmp
and
xchg
mov
pop
dec
pop
dec
push
jp
aad
push
xchg
push
in
adc
test
movs
xchg
test
sub
stc
dec
inc
add
pushf
addr16
cmp
lahf
dec
ret
pop
xchg
std
out
jae
cmp
xor
into
adc
mov
jge
call
xchg
scas
mov
xchg
mov
sub
out
or
dec
rcl
(bad)
mov
mov
xchg
jmp
les
aam
jno
fsub
inc
repnz
fld
adc
stc
pop
inc
mov
dec
inc
xchg
fucom
out
jmp
mov
nop
scas
(bad)
sub
mov
lea
and
inc
xchg
or
bound
and
inc
sbb
ret
mov
scas
popa
and
adc
scas
movs
test
arpl
or
inc
jnp
pop
je
mov
ret
xor
sahf
pop
shl
pop
inc
dec
jno
cwde
fist
jmp
jp
jb
movs
pop
or
cdq
push
lds
add
js
fwait
test
sub
mov
call
push
mov
adc
repnz
cmp
xchg
dec
mov
lea
adc
mov
pop
push
push
cli
ret
rcl
mov
jmp
and
std
call
adc
imul
test
rol
fnstcw
mov
sti
mov
icebp
unpckhps
int
inc
outs
xor
das
ret
pop
mov
ins
idiv
out
shl
lods
pop
aaa
lods
popf
stos
retf
mov
dec
stos
pop
enter
sbb
jle
test
push
xchg
div
out
sub
or
jns
sahf
push
push
jne
dec
in
pop
ss
cmc
mov
dec
addr16
mov
popf
pop
loope
jb
and
push
push
fist
sbb
pop
std
data16
(bad)
call
je
dec
jmp
scas
test
sub
lea
mov
ins
dec
mov
mov
pop
push
xchg
adc
and
loop
jmp
sub
pop
pop
sbb
mov
push
ins
mov
cmps
idiv
mov
jl
mov
sbb
(bad)
movs
dec
dec
dec
push
call
sub
and
fwait
and
(bad)
pop
dec
add
mov
push
pushf
repnz
mov
add
sub
add
arpl
or
add
adc
(bad)
jmp
addr16
mov
lock
scas
daa
cld
jp
jne
jg
mov
push
mov
or
sbb
push
cmp
stos
or
xor
mov
sub
jb
push
jbe
xchg
stc
sbb
jbe
movs
inc
cmps
imul
les
out
mov
or
mov
mov
jne
paddq
push
addr16
push
jge
jnp
or
jae
out
add
cwde
scas
add
mov
push
adc
sbb
js
push
mov
inc
int3
jno
inc
retf
xor
inc
mov
popf
xor
(bad)
and
stos
push
push
mov
fmulp
mov
imul
mov
dec
es
mov
ss
ins
and
out
jge
setbe
cmp
push
xor
leave
addr16
dec
mov
scas
jmp
(bad)
cli
pop
sar
ror
pushf
das
push
jecxz
xor
out
cmp
mov
outs
inc
push
movs
dec
repnz
call
pushf
jecxz
cmp
and
fstp
dec
or
popf
xor
fwait
xor
sahf
lahf
aas
sub
inc
jmp
xor
xchg
stos
pop
ret
scas
xor
and
mov
jne
jmp
call
jle
lods
aad
bnd
(bad)
xlat
into
mov
push
cdq
inc
jmp
movaps
inc
out
adc
jmp
mov
push
or
and
imul
gs
jmp
cli
(bad)
leave
sti
dec
sbb
test
out
aas
push
jle
xor
sbb
mov
inc
sar
mov
cmp
xchg
sbb
repnz
scas
jnp
mov
and
sub
mov
adc
dec
outs
hlt
mov
je
fwait
imul
es
xchg
shl
nop
cmp
and
jecxz
fldenv
push
or
dec
push
hlt
and
mov
lock
lahf
xchg
imul
aad
aam
bound
lea
push
imul
ds
(bad)
outs
dec
out
push
stc
push
out
out
lods
pop
mov
mov
dec
dec
mov
push
jl
stc
stc
mov
les
and
jo
mov
sahf
shl
test
mov
dec
adc
mov
ins
mov
jecxz
mov
mov
push
mov
and
mov
sub
push
dec
ins
xor
push
jo
dec
test
jecxz
(bad)
cdq
(bad)
push
sub
jno
add
jmp
ror
dec
mov
sbb
mov
cmps
add
adc
out
adc
lods
sbb
and
fimul
xchg
popf
mov
adc
mov
xchg
ja
xor
inc
push
jno
jp
loop
sub
ficom
out
dec
sbb
je
loop
out
jge
movs
xor
les
lea
lods
pop
pop
sub
jns
pop
sbb
mov
sub
test
leave
pop
leave
inc
xchg
loope
aam
push
pop
imul
xchg
adc
add
les
mov
or
pushf
je
sti
jb
(bad)
pop
stos
in
jp
pop
in
ds
mov
aaa
mov
sbb
stos
jae
cmp
mov
or
fwait
pop
repz
in
outs
cmp
cmp
hlt
adc
jle
dec
fbld
cmp
pop
mov
mov
mov
aad
gs
mov
cvtdq2ps
xchg
dec
je
imul
pop
mov
movs
lahf
xchg
pop
clc
xor
inc
or
or
mov
dec
xchg
sub
jae
xchg
(bad)
sub
test
mov
xor
ss
push
loop
push
es
mov
cdq
jns
mov
mov
cmp
data16
int3
xor
mov
icebp
ja
mov
inc
addr16
jmp
lea
pop
fdivp
mov
aas
push
ja
retf
fsub
sbb
popa
lods
mov
mov
lods
inc
mov
cmc
jp
in
pushf
ret
stos
push
or
lods
outs
xor
mov
push
gs
add
pushf
arpl
pop
imul
lods
clc
test
int
or
scas
arpl
jmp
jmp
sub
mov
xchg
rcr
jne
sti
sahf
ret
xchg
push
push
or
test
xor
das
repz
loop
cdq
jle
sub
rcr
movs
fcmovu
dec
lock
xchg
lahf
ss
mov
push
or
mov
mov
inc
clc
outs
pop
sub
outs
sahf
fisubr
inc
lods
jmp
dec
push
movs
xchg
jns
cmps
and
pop
push
sbb
dec
fisttp
adc
pop
loope
jecxz
sbb
rcr
pushf
jl
loope
jle
(bad)
daa
mov
sbb
stos
sub
aas
aaa
mov
mov
jae
xchg
jmp
test
ret
push
ins
xchg
gs
mov
leave
dec
rcr
jg
(bad)
fdiv
push
push
xchg
xor
push
and
mov
iret
pop
xchg
pusha
jae
inc
xor
pop
(bad)
sbb
das
pop
leave
mov
or
push
pop
popf
sbb
clc
test
aam
mov
outs
rcl
aam
mov
das
dec
stos
lock
sahf
sub
pop
jge
jl
(bad)
cmc
add
mov
icebp
movs
shr
xchg
jae
scas
mov
cmp
retf
test
mov
mov
mov
out
rcr
sbb
dec
out
cld
leave
mov
xchg
arpl
xchg
les
fsubr
jp
dec
sub
cmc
sub
lea
in
cmp
scas
inc
push
je
xchg
push
repz
or
cmps
aam
jmp
dec
fldenv
mov
pushf
lea
mov
pusha
mov
mov
jb
in
movs
add
inc
out
ja
cmp
mov
mov
sub
pushf
xor
inc
outs
push
mov
pop
popf
div
mov
mov
pop
xor
mov
pop
mov
xchg
and
mov
sub
mov
xor
adc
je
inc
or
mov
jle
sbb
jo
pushf
pop
jno
aam
jmp
lods
stc
pop
pop
jne
pop
sti
push
int3
repz
out
jmp
xor
mov
jmp
dec
sar
dec
shr
pop
or
push
sbb
cmps
dec
mov
mov
mov
push
push
jmp
push
fidivr
mov
sub
arpl
pop
call
jns
cli
xchg
xor
pop
(bad)
mov
fild
dec
pop
hlt
fwait
test
das
sub
mov
sub
pop
xor
jb
push
sbb
xor
adc
ret
ja
mov
enter
fisubr
popa
xor
cmp
ja
push
xchg
xlat
inc
sub
mov
sbb
idiv
sbb
adc
imul
xchg
test
out
gs
test
dec
xchg
jmp
daa
inc
bswap
imul
xchg
and
retf
dec
out
adc
mov
repz
not
neg
fnsave
mov
popa
hlt
mov
sti
inc
int
call
cmc
xchg
pop
bound
(bad)
push
jge
leave
loope
mov
pop
loop
push
mov
cs
push
lahf
jb
xor
(bad)
jge
push
imul
retf
(bad)
lock
into
xchg
icebp
je
pushf
cs
jmp
fcomip
lods
mov
mov
ja
mov
mov
mov
idiv
add
imul
popf
js
fcom
mov
arpl
xor
adc
dec
sub
lock
inc
dec
cwde
add
daa
mov
sbb
dec
jle
mov
fsubr
or
jbe
cmp
sahf
dec
and
cwde
pop
mov
ins
mov
test
mov
push
stos
(bad)
pushf
jns
dec
jnp
xor
rol
popa
out
jl
cmp
fs
outs
out
cmp
mov
xlat
in
xchg
ja
fucom
ss
push
jo
ja
mov
icebp
int3
and
mov
jmp
(bad)
lock
or
pushf
das
test
outs
adc
jmp
ficom
movs
mov
das
sbb
fstp
dec
and
retf
mov
dec
push
push
mov
out
mov
das
sbb
mov
sub
mov
iret
pushw
jmp
scas
xor
dec
cli
xor
imul
ins
ins
aam
imul
sti
cmp
scas
or
pop
xchg
movs
add
mov
je
mov
pop
popf
pushf
mov
jnp
dec
jnp
aaa
test
test
dec
xor
jg
sub
movs
mov
cli
jmp
lea
movs
sub
mov
inc
es
mov
out
dec
int3
arpl
outs
mov
stc
jno
xor
(bad)
jnp
repnz
xchg
(bad)
ficom
stos
imul
dec
repnz
stos
mov
jo
sub
mov
shr
call
push
adc
fstp
aam
test
jnp
sbb
inc
sub
out
mov
scas
pop
ret
test
movs
push
imul
mov
fcomp
pop
in
mov
out
mov
jg
lods
imul
aaa
jb
sub
test
pop
call
dec
cmp
xchg
shl
xchg
stc
nop
xchg
retf
and
fcmovne
mov
inc
ret
cmp
sub
push
push
mov
ja
pop
mov
imul
(bad)
xchg
div
loopne
imul
add
mov
pop
test
jb
movs
loope
into
lods
mov
jp
mov
movs
data16
dec
pop
xor
mov
jmp
ins
call
push
rcr
les
aam
pop
cmp
sub
loop
retf
idiv
rol
xchg
sbb
jne
adc
jp
imul
scas
aad
outs
mov
addr16
xchg
push
fnstcw
call
inc
xchg
mov
in
ror
dec
ja
out
rcl
out
mov
mov
adc
jns
cmc
mov
xchg
ret
mov
retf
dec
dec
mov
xchg
push
mov
dec
xor
pop
pop
sub
mov
das
ins
dec
test
mov
mov
jmp
cs
pop
adc
pop
ret
mov
ror
imul
data16
pop
or
push
retf
outs
movs
push
fmul
push
call
sub
mov
sub
add
sbb
add
sbb
jns
cmps
dec
pop
inc
into
push
fnstenv
iret
scas
mov
popa
jb
sbb
mov
js
push
hlt
xchg
jne
jmp
(bad)
adc
ret
lods
sahf
sbb
scas
jmp
(bad)
int3
mov
xchg
and
cmp
(bad)
xlat
xchg
repnz
sub
inc
mov
(bad)
push
add
sbb
movs
cmp
push
mov
jne
mov
pop
pop
or
fldcw
cmp
stos
ja
mov
stos
rcl
dec
dec
sti
es
retf
movs
push
mov
add
cmps
mov
cwde
pop
ja
fld
xchg
inc
xchg
xchg
scas
push
and
pushfw
inc
leave
pushf
xchg
jp
test
(bad)
jge
and
adc
jmp
sub
mov
hlt
fwait
cmps
es
xchg
cli
mov
lods
outs
(bad)
and
std
add
pushf
mov
aad
xchg
rcl
and
push
test
aad
xor
mov
fwait
pop
mov
xor
fdivp
pop
movs
push
dec
pushf
sub
test
jns
fiadd
inc
pop
dec
jp
nop
inc
jns
iret
loop
or
mov
test
movs
test
popf
mov
xchg
fld
into
sti
jns
xchg
jnp
dec
adc
js
xor
add
jb
fidiv
mov
(bad)
sub
movs
shr
add
jno
sub
mov
xor
fnsave
xchg
adc
daa
imul
pop
push
sti
dec
stos
(bad)
call
cmp
shl
mov
pop
and
dec
hlt
lea
movs
scas
push
dec
mov
(bad)
jne
dec
aad
adc
pop
ss
xchg
or
aam
ror
push
xchg
or
retf
fnstcw
dec
mov
mov
rcl
sbb
push
push
dec
pop
jmp
push
adc
(bad)
inc
out
(bad)
cwde
cld
lds
leave
das
xor
and
dec
(bad)
xor
dec
mov
mov
xlat
mov
mov
xor
mov
shl
(bad)
mov
cmp
mov
jmp
mov
sbb
retf
mov
xchg
shl
mov
fisttp
pop
movs
mov
xor
jmp
and
outs
pop
je
xor
fmulp
jecxz
arpl
inc
fidivr
jno
imul
push
fsubp
xor
mov
std
cs
fsubr
test
mul
ins
dec
or
lods
push
imul
and
pusha
push
repz
adc
jns
pop
adc
and
pushf
xor
or
test
std
mov
loop
jle
out
dec
repz
clc
xchg
sbb
(bad)
test
mov
inc
ins
aam
pop
or
je
ins
repz
dec
popa
stos
movs
mov
and
pop
mov
jmp
jecxz
pop
popf
pop
inc
ret
fs
jae
dec
jg
out
repnz
repz
inc
stos
dec
shl
inc
movs
pop
push
repz
out
ins
movs
sub
(bad)
cmp
lods
or
and
pop
fsubr
cwde
sub
daa
ja
fnstenv
scas
stc
lahf
popf
repnz
xchg
mov
movs
jns
pop
lock
mov
cmp
ins
mov
inc
cmps
pop
push
and
xor
lods
jns
retf
sub
dec
jmp
retf
mov
pushf
mov
dec
fldl2e
cld
xchg
cli
aas
push
ja
dec
push
mov
mov
ja
leave
sti
int
movs
aad
outs
mov
jns
push
movs
movs
mov
push
jg
mov
xchg
pop
sahf
test
pop
test
sub
inc
xlat
enter
shl
call
xchg
jb
add
fimul
fsubr
mov
push
jecxz
cmp
pop
out
imul
mov
fnstsw
call
cdq
je
xor
xchg
gs
pop
std
dec
stc
xchg
imul
aam
ins
movs
repnz
sub
test
out
sbb
test
jno
pop
stos
pop
jp
push
scas
ja
pop
xchg
in
outs
ins
fidivr
mov
int
imul
xor
(bad)
xchg
jnp
mov
mov
out
(bad)
cmps
push
out
cmps
es
mov
adc
and
push
push
xchg
adc
(bad)
bound
imul
inc
jnp
pop
addr16
int3
daa
push
call
lods
fbstp
stos
jmp
dec
push
int
mov
ja
imul
inc
mov
jnp
ret
shl
stc
into
lods
not
push
(bad)
dec
stos
mov
icebp
cmp
bound
outs
jmp
sar
lock
das
retf
mov
pop
(bad)
mov
jb
mov
pop
pop
(bad)
jle
in
push
sar
lds
nop
stos
jge
ret
dec
int3
ret
lds
jb
and
imul
div
xor
les
clc
retf
ror
mov
pop
stc
js
sahf
aaa
pop
cdq
jecxz
mov
popa
mov
lods
loop
call
push
mov
or
xlat
sub
and
je
movs
xchg
inc
push
sbb
popf
add
dec
xchg
cmp
ss
pop
sbb
pop
movs
test
fcmovu
pop
ins
div
jae
xor
mov
push
xlat
mov
out
call
(bad)
in
je
lahf
(bad)
in
int
jo
push
rcr
pop
imul
mov
sub
and
mov
loopne
int3
scas
icebp
in
in
mov
movs
pop
outs
lods
fisttp
mov
mov
jo
cmps
lds
lahf
mov
xor
ds
(bad)
fwait
jbe
call
xchg
pushf
push
add
cmp
in
push
fidivr
mov
jecxz
inc
ret
shl
sub
out
jecxz
lods
mov
movs
sub
icebp
sub
pop
mov
aam
xchg
mov
stos
mov
jecxz
test
mov
xchg
jge
xchg
bound
(bad)
out
mov
imul
xchg
imul
int3
dec
lods
xchg
cmp
push
pop
push
daa
xor
fcmovb
fisubr
mov
je
xchg
repz
out
dec
outs
idiv
ror
ds
(bad)
(bad)
in
into
cmps
xchg
das
push
lods
scas
fidivr
hlt
cmps
fdivr
xchg
loopne
out
sbb
mov
cmp
fimul
pop
aaa
xor
movs
fsubr
imul
cmp
push
in
outs
cmp
ins
and
retf
call
push
out
mov
cmps
ficom
dec
pop
stos
test
cli
outs
mov
cli
aaa
mov
mov
fdiv
fdivr
ret
(bad)
fsubr
xor
lds
cmps
pushf
sub
and
and
inc
aas
mov
fadd
sbb
xchg
and
push
sbb
movs
out
jbe
cld
dec
sbb
sbb
pop
mov
cwde
loope
in
loopne
and
mov
push
push
mov
jbe
scas
aam
ins
pop
xor
fisubr
cmp
cmps
retf
aam
pop
dec
call
push
test
push
sbb
dec
into
pop
pop
dec
daa
cmps
outs
fld
lahf
mov
pop
cmp
mov
sub
xor
jae
scas
imul
dec
mov
cmps
movs
imul
loope
inc
nop
lods
push
out
lods
mov
xchg
cdq
cli
stos
mov
cmp
mov
inc
xchg
adc
jmp
pop
pop
mov
ficomp
les
push
mov
adc
dec
test
cwde
dec
mov
aaa
push
jl
dec
mov
mov
sbb
push
movs
das
sub
cmp
jp
xchg
mov
imul
shl
stc
pop
xchg
in
adc
fistp
pop
mov
xor
jmp
test
adc
ja
mov
jp
jbe
cmp
cmc
in
sbb
inc
call
add
adc
call
daa
jno
shl
mov
jp
imul
les
xchg
sahf
outs
ins
bound
mov
stos
mul
mov
dec
jnp
ror
inc
mov
xchg
out
cmps
sbb
retf
and
dec
push
jmp
mov
cmp
cmps
push
cmp
cmp
mov
int3
shl
mov
pop
(bad)
(bad)
mov
mov
mov
test
movs
dec
test
xchg
and
sub
arpl
push
cmps
adc
mov
cld
ret
leave
sahf
dec
adc
or
pop
push
dec
cs
push
pop
mov
cdq
outs
rol
jne
push
and
add
aam
adc
(bad)
retf
dec
ja
(bad)
lods
mov
adc
and
jb
add
add
mov
retf
adc
aam
mov
leave
js
daa
retf
out
cmp
sub
jmp
mov
imul
or
imul
sub
cmp
scas
pop
aad
push
test
dec
push
push
rcl
xchg
mov
mov
and
retf
je
jno
cmp
sbb
cli
pop
pop
imul
jecxz
mov
mov
add
pop
jbe
mov
cli
lods
data16
mov
sub
daa
je
jne
mov
sti
cmps
(bad)
mov
mov
sub
lds
js
push
push
mov
frstor
sbb
mov
fimul
call
xchg
adc
sbb
sbb
push
sbb
jg
dec
je
cmp
inc
cmps
add
and
dec
ret
sub
xchg
mov
add
adc
or
mov
xchg
cmp
cmps
dec
push
mov
scas
push
das
mov
cwde
ja
enter
xchg
pusha
or
(bad)
call
ret
push
in
add
mov
aam
dec
out
jne
inc
cmps
jbe
fwait
aad
leave
jp
pop
scas
xchg
call
repz
js
mov
dec
pop
pop
fnstenv
mov
adc
test
cmp
sbb
dec
cmp
sbb
jne
sbb
ins
xchg
cmp
mul
pop
or
dec
and
jbe
mov
mov
hlt
call
scas
fild
imul
sbb
sbb
and
push
adc
and
loop
cmps
cmc
loope
aam
shl
sti
jle
int3
jo
jne
loope
push
ror
dec
push
mov
mov
mov
sbb
stos
xlat
enter
or
xor
adc
mov
nop
xchg
movs
jge
inc
add
repz
fs
pop
mov
mov
shl
push
test
xchg
xchg
shr
push
outs
stos
pop
sbb
inc
pop
cli
dec
addr16
cmp
aas
out
aad
clc
xchg
jno
mov
or
test
movs
jne
mov
movs
jp
aad
call
neg
jg
mov
adc
jbe
out
ret
jg
mov
jb
and
loope
add
adc
sti
mov
jae
movs
mov
mov
adc
xor
jge
test
ja
outs
mov
jb
xchg
fs
push
pop
test
inc
out
jbe
jae
and
jle
les
aad
call
stos
dec
stos
push
sub
test
cmp
xchg
stos
movs
push
mov
cld
loop
or
inc
cmp
sti
stos
adc
fmul
(bad)
sahf
sar
test
movs
adc
nop
stos
add
hlt
xchg
test
stos
jg
jb
mov
adc
stc
cwde
sahf
in
jmp
sar
lods
add
mov
mov
inc
leave
inc
fwait
jns
or
add
add
jg
cmp
jg
retf
in
jle
ja
in
icebp
cmp
arpl
fstp
xor
cmc
sub
cld
inc
pop
push
jmp
loope
cmp
loopne
nop
inc
(bad)
xchg
mov
inc
movs
mov
sti
das
loopne
inc
icebp
xchg
ds
mov
lahf
mov
mov
xchg
ror
stos
aaa
in
adc
add
ret
jnp
cwde
leave
in
movs
repz
cmp
add
cmp
sbb
push
in
dec
lock
into
jo
into
or
jo
hlt
pop
out
stos
cmp
push
rcl
or
adc
movs
imul
dec
pop
inc
enter
push
or
add
mov
popf
xchg
fistp
gs
imul
cmps
xchg
push
xchg
cmp
mov
pop
xchg
adc
or
inc
fwait
and
pop
push
sub
iret
addr16
shl
addr16
(bad)
cdq
jle
sbb
(bad)
lahf
fidivr
out
add
xchg
cmps
daa
fsubr
addr16
inc
adc
push
push
xchg
movs
les
sbb
ins
push
cwde
(bad)
push
adc
rcr
xlat
mov
ds
test
push
data16
iret
ficom
dec
out
enter
jae
push
xchg
push
xchg
push
fsubr
js
shl
mov
loop
push
test
xchg
mov
add
push
mov
sub
dec
sub
icebp
repnz
add
cmp
shr
mov
pop
clc
add
pusha
adc
add
movs
dec
sahf
sub
scas
ret
js
in
adc
or
push
mov
cmp
arpl
stos
bound
nop
or
jnp
adc
movs
add
bound
cmc
xor
add
inc
mul
cmp
scas
mov
push
retf
std
and
mov
cld
mov
mov
outs
mov
daa
inc
sub
pop
arpl
push
sub
xor
mov
test
sbb
imul
cmp
mov
inc
pop
push
fs
mov
lds
sub
sbb
mov
xchg
into
ja
jo
out
lods
mov
les
fadd
lods
or
fisttp
(bad)
adc
popa
inc
cmp
repz
push
add
sbb
cwde
inc
popa
pop
xchg
mov
push
add
adc
and
mov
cwde
inc
adc
addr16
cmp
aam
xor
cmps
cmp
mov
jne
ds
loop
jge
jmp
nop
jbe
loopne
push
add
ror
adc
jle
call
and
inc
imul
xchg
cmp
leave
adc
nop
xor
dec
push
sbb
adc
push
adc
pop
and
push
sbb
(bad)
pop
jecxz
jmp
pop
push
imul
movs
inc
popf
jns
(bad)
iret
xchg
sub
jecxz
test
xor
mov
je
mov
(bad)
fcomp
arpl
add
dec
mov
sub
cmp
jle
iret
cld
movs
adc
mov
fcmovnb
lds
mov
scas
adc
jmp
dec
sbb
jmp
mov
sub
mov
jl
cli
sub
cmp
fisub
lods
jo
jecxz
pop
cmp
test
push
je
fnsave
adc
fsub
mov
in
inc
hlt
sbb
cli
inc
pusha
loop
dec
dec
xchg
out
adc
lods
loope
inc
mov
mov
push
aaa
or
int
int3
mov
cdq
inc
mov
inc
xor
daa
jmp
mov
sbb
ret
popa
out
push
test
lahf
dec
cmp
(bad)
cmps
mov
push
push
dec
enter
iret
mov
or
pop
adc
cwde
aam
sub
div
sbb
add
mov
mov
xor
dec
push
cdq
das
retf
dec
mov
push
retf
dec
test
fld
sbb
push
fsub
push
cmps
jmp
ss
xchg
dec
aad
dec
adc
sbb
push
sbb
inc
jp
or
jnp
cmc
test
mov
retf
ret
(bad)
mov
xchg
xor
fimul
das
imul
(bad)
and
mov
cld
aaa
mov
fisttp
clc
xor
sar
inc
stos
jbe
push
inc
and
jae
hlt
mov
mov
(bad)
mov
(bad)
dec
rol
fnstsw
test
fwait
sub
test
xor
stos
mov
and
adc
and
adc
call
pop
in
lock
cmp
push
dec
stos
fisub
and
add
push
lods
adc
aaa
loop
hlt
call
xchg
push
std
fistp
pop
xchg
jg
xlat
cmp
cmp
push
inc
movs
out
push
ret
rcl
inc
loop
cmps
shr
dec
sub
repz
adc
lods
mov
cmp
ficom
lock
mov
and
rcr
retf
dec
push
imul
xor
shl
add
inc
loopne
sbb
inc
dec
push
sbb
cld
ds
mov
inc
cmps
jae
cmc
fld
add
(bad)
rcr
sbb
shl
rcl
repnz
pop
in
sbb
push
outs
pop
sub
lods
(bad)
in
push
and
out
add
mov
push
mov
mov
ss
or
xchg
mov
or
leave
imul
xchg
push
inc
out
inc
arpl
mov
dec
into
dec
mov
jmp
sbb
fs
and
xor
dec
xchg
adc
arpl
stos
daa
aam
int
cmc
stc
out
rol
push
nop
dec
loopne
cmc
(bad)
mov
mov
nop
aaa
fcomp
push
mov
fild
test
loopne
push
mov
push
cld
loopne
dec
test
fadd
icebp
cmp
out
rcl
push
xchg
add
rol
cmps
mov
pop
fisubr
xchg
outs
push
dec
adc
sub
jmp
cmp
loop
sub
sub
lods
mov
xlat
or
cdq
mov
adc
stos
jmp
fdiv
in
(bad)
xchg
les
ret
fidiv
mov
cdq
mov
jnp
imul
add
outs
jmp
dec
gs
sub
(bad)
jae
sub
xchg
mov
sbb
push
dec
cdq
loop
jmp
outs
pusha
sub
lods
push
(bad)
(bad)
cmps
stos
out
dec
int3
jmp
pusha
push
mov
retf
lahf
test
fs
cmps
call
in
movs
cmp
test
pop
mov
sbb
dec
dec
push
dec
mov
dec
push
stos
push
xor
ss
jnp
mul
ja
(bad)
popf
cmp
scas
xchg
jecxz
mov
je
lods
dec
call
loopne
lods
fwait
outs
sub
push
push
cli
sub
push
pop
test
ficomp
jae
dec
pop
loop
xlat
out
mov
adc
push
lea
push
pop
cmp
jle
xchg
push
neg
mov
or
jnp
push
cmps
mov
push
mov
xchg
fwait
ja
lahf
adc
in
fstp
mov
jb
arpl
dec
call
iret
pushf
arpl
dec
test
mov
mov
sub
idiv
(bad)
mov
cmps
imul
aaa
retf
adc
scas
adc
out
or
(bad)
in
jnp
push
xchg
and
mov
imul
or
jne
add
xchg
cmp
cmps
getsec
xchg
int3
xchg
or
mov
inc
add
inc
push
es
std
pop
sbb
(bad)
xlat
fdiv
cmp
ins
jb
popf
in
push
adc
gs
sub
jmp
fisubr
lea
lods
xlat
test
(bad)
pusha
icebp
pop
outs
fdiv
add
scas
jp
je
jp
add
xor
lds
shl
mov
out
retf
mov
adc
pop
cmp
es
mov
(bad)
iret
adc
lea
jne
test
clc
jno
lds
sbb
movs
mov
cli
dec
(bad)
movs
ja
jmp
xor
(bad)
xchg
dec
in
jae
pop
ja
sub
out
jl
retf
stos
in
fsub
inc
sub
dec
push
or
push
fisubr
mov
mov
popf
out
lahf
in
daa
daa
vaesenclast
test
xor
push
xchg
gs
jmp
sub
gs
mov
pop
push
mov
mov
ss
inc
pop
and
mov
repnz
arpl
dec
cmp
icebp
imul
mov
sbb
and
cmp
pop
leave
cmp
dec
mov
(bad)
sub
adc
adc
pop
movs
(bad)
jp
cmps
mov
mov
push
dec
test
xor
xor
add
sbb
dec
aas
push
(bad)
into
jae
fnstenv
daa
pop
sub
inc
rcl
xlat
into
(bad)
push
jo
in
inc
fidivr
fistp
pop
out
push
xchg
int3
lods
push
sbb
sbb
ret
(bad)
fs
dec
imul
std
pop
mov
xchg
or
xchg
sahf
sahf
cmp
fwait
cmc
arpl
daa
jg
pop
cld
idiv
ss
ins
push
popa
push
lods
or
mov
push
mov
repz
test
jns
retf
pop
xchg
cmc
mov
mov
jbe
and
inc
test
out
mov
in
or
sbb
mov
and
movs
xchg
retf
inc
push
xchg
sbb
mov
lods
ss
sbb
das
stos
lods
cli
sub
arpl
out
jno
(bad)
aam
dec
jmp
pushf
adc
iret
cld
and
sbb
rcl
mov
mov
fwait
daa
cmps
ss
cmp
xchg
popf
jb
leave
xor
push
cmp
sti
dec
mov
xlat
std
daa
sbb
(bad)
jle
clc
inc
xchg
xor
loop
pop
stos
pop
in
mov
xchg
xchg
cmc
cld
fwait
sub
inc
jmp
retf
push
outs
dec
fisub
dec
movs
adc
stos
xchg
mov
popf
(bad)
retf
loope
movs
fs
(bad)
(bad)
jne
shr
pop
xchg
jo
cmps
adc
rcr
xchg
ins
add
pop
jge
cmp
cmp
test
in
mov
inc
push
imul
scas
cmp
shl
jae
mov
fidivr
pop
xchg
loop
and
loope
dec
mov
add
leave
dec
jp
stc
pop
stos
push
pop
out
movs
rep
and
and
daa
inc
and
scas
inc
jp
out
push
imul
jmp
lods
stos
(bad)
stos
and
jecxz
sub
jnp
dec
adc
mov
dec
inc
dec
xlat
movs
sub
in
cmp
mov
push
mov
repz
jge
sub
push
mov
mov
xchg
stos
dec
dec
mov
push
pop
dec
lds
jne
xchg
retf
sub
arpl
dec
in
dec
sbb
jnp
(bad)
loopne
cmp
sahf
push
mov
test
push
mov
outs
lahf
xchg
and
push
in
pop
jle
cmp
movs
lahf
sahf
stos
push
pop
das
call
sar
adc
clc
pop
mov
jge
mov
test
retf
or
dec
repz
scas
cmp
mov
mov
or
loopne
test
jmp
data16
lock
sub
fist
fcomp
iret
loope
arpl
aad
jmp
das
push
in
js
xchg
fmul
cmp
mov
xchg
cdq
mov
retf
outs
inc
sub
scas
push
stc
addr16
div
dec
gs
pop
leave
ds
adc
iret
xchg
ins
mov
jmp
out
ins
sub
lahf
addr16
sbb
xor
cmp
xchg
xor
lahf
pushf
shl
daa
dec
movs
cmp
mov
int
stc
(bad)
jae
call
lods
movs
and
jg
fidiv
jb
pop
or
sub
jb
je
xchg
adc
stc
sti
call
data16
out
sbb
fs
out
push
outs
movs
xlat
xor
(bad)
daa
mov
push
push
push
push
sahf
jae
fld
test
cli
mov
(bad)
imul
dec
push
lods
popf
shr
sbb
jle
mov
adc
xor
xchg
xchg
push
(bad)
je
and
sub
cmp
push
sbb
ins
sub
(bad)
push
add
lods
data16
cmp
mov
movs
imul
dec
mov
mov
movs
cdq
cmp
pop
sub
jecxz
mov
fiadd
mov
pop
outs
inc
loope
lods
push
es
jo
jmp
(bad)
fldenv
jmp
retf
xchg
dec
mov
in
shl
pop
xor
add
out
movs
nop
xchg
or
mov
out
dec
stos
mov
dec
sub
in
inc
xlat
outs
imul
dec
cmp
push
gs
or
mov
dec
fwait
dec
dec
leave
xor
adc
jnp
outs
imul
daa
data16
mov
xchg
rcr
pop
xchg
gs
sub
pop
imul
retf
and
leave
fcomp
lods
in
xchg
pop
sbb
pop
inc
and
adc
int3
sub
lahf
pusha
xor
test
mov
push
sub
hlt
or
mov
push
fisubr
inc
dec
daa
and
push
call
mov
ret
xchg
and
nop
cmp
and
stos
rol
imul
cmps
sub
push
popf
je
movs
pop
cli
stos
ins
aam
rol
outs
mov
jo
icebp
mov
pop
dec
retf
sbb
mov
dec
mov
aam
xchg
xchg
div
aaa
mov
jne
jecxz
add
loope
dec
mov
mov
push
bound
and
std
mov
movs
test
leave
ret
push
jnp
sub
sub
scas
cmp
and
ficom
xchg
jbe
idiv
push
xchg
jo
aam
loop
sbb
mov
in
ins
pop
out
jle
mov
popa
jno
pusha
push
xor
ret
addr16
fwait
dec
lds
xchg
cmp
sbb
fs
mov
jmp
iret
xchg
loop
or
das
loop
mov
xchg
repnz
pop
(bad)
push
or
ds
jnp
xchg
mov
imul
movs
(bad)
cmps
xchg
inc
sar
jl
fbld
retf
retf
aaa
das
daa
sub
ret
or
inc
add
or
jge
jecxz
and
fwait
mov
mov
sbb
sub
mov
jo
push
dec
loopne
aad
shl
pushf
sbb
gs
xchg
lods
bnd
mov
sub
mov
in
sbb
push
mov
sbb
xor
cmps
cld
sbb
dec
jae
xchg
mov
loope
dec
dec
daa
pop
in
test
mov
shld
xchg
add
mov
mov
xlat
test
cmps
adc
jle
pushf
out
shl
sub
fistp
call
jae
out
push
outs
jmp
popa
movs
mov
and
push
inc
inc
adc
gs
repz
add
in
cs
rcl
out
xlat
stos
(bad)
mov
mov
xchg
iret
xor
jns
frstor
fnstenv
xchg
dec
push
dec
push
lods
push
fstp
mov
dec
pop
pop
jne
test
mov
adc
sub
push
sbb
je
sub
dec
mov
add
xor
inc
xor
and
pusha
add
retf
cs
xlat
shl
mov
push
scas
sub
xchg
jp
cld
das
int
in
repnz
sub
repnz
push
imul
daa
arpl
fcomip
test
scas
es
push
fld
mov
outs
cmps
clc
mov
adc
cmp
das
ins
cs
dec
pop
ins
fisttp
pop
cmps
cmp
push
cmp
lock
(bad)
addr16
cmp
xchg
movs
out
lock
pop
lds
inc
shl
xchg
mov
sar
mov
cmps
ja
push
fcmovbe
mov
inc
leave
cdq
xor
push
fldcw
ds
cdq
leave
lods
and
pop
inc
fidivr
xchg
xor
stos
dec
cmp
pop
in
ret
pop
and
aas
in
cmc
push
out
add
dec
loop
push
jmp
jp
lods
out
inc
mov
xchg
mov
sbb
movs
fidivr
mov
dec
mov
sub
cmps
inc
repz
cdq
stc
cmps
aam
(bad)
sub
dec
jae
jp
lods
jmp
arpl
xchg
stos
aam
fsub
imul
loopne
add
cmps
stos
fwait
ret
xchg
dec
dec
adc
sbb
rcr
(bad)
mul
movs
inc
xchg
xlat
stos
xor
cs
aaa
pop
movs
shl
in
fisttp
dec
mov
mov
xchg
xchg
push
lahf
xor
sub
dec
call
or
and
(bad)
stos
cmps
mov
test
daa
xor
stos
push
ret
dec
push
push
test
mov
sub
mov
and
push
xor
mov
mov
cs
jp
and
neg
inc
jb
sub
loop
out
sub
push
xchg
add
lahf
mov
bound
out
push
call
pop
cmp
fstp
ins
inc
sub
fisubr
push
dec
jb
sbb
dec
ins
dec
adc
dec
jmp
xchg
push
dec
or
mov
pop
push
les
and
ror
ret
xor
mov
or
sbb
or
mov
push
push
mov
or
push
js
mov
jg
push
cld
dec
pop
aam
push
mov
dec
movs
aas
aaa
push
popf
mov
jg
fistp
inc
jmp
jle
inc
cwde
push
fisttp
mov
hlt
sub
popa
das
cmp
addr16
jno
test
jns
sbb
pop
test
pop
pop
jo
(bad)
cld
sub
sbb
lock
jmp
mov
fidivr
pop
pop
push
outs
dec
mov
movs
and
dec
jnp
push
std
add
mov
inc
neg
(bad)
in
mov
jp
sbb
loop
dec
retf
sub
inc
bnd
cmp
xor
les
movs
js
pop
idiv
imul
sub
sbb
shr
push
dec
imul
aaa
ja
mov
test
push
sahf
fidiv
mov
das
xchg
mov
imul
xchg
sub
cs
movs
pop
movs
mov
das
adc
jbe
pop
adc
scas
inc
inc
xor
or
(bad)
xchg
loope
test
jnp
pop
hlt
sbb
xchg
inc
mov
lea
xchg
xor
(bad)
jne
inc
stos
dec
ret
jle
fnstsw
xchg
xchg
stos
xor
outs
inc
dec
push
gs
pop
lea
das
push
test
xchg
ds
pop
xchg
stos
dec
cmp
inc
adc
cmp
jbe
lock
cmp
push
arpl
push
dec
and
pop
adc
mov
xlat
mov
cmp
(bad)
fs
jge
outs
pop
inc
xchg
pushf
adc
jmp
leave
jb
adc
add
add
gs
cmp
pop
gs
test
imul
lahf
test
jg
mov
sub
bound
aad
lods
xchg
aam
outs
int3
test
mov
add
jnp
jl
out
cdq
addr16
mov
cdq
push
lods
xlat
xor
mov
scas
sub
fistp
dec
out
xchg
mov
ins
jo
jecxz
pop
(bad)
xlat
adc
mov
and
adc
out
dec
clc
(bad)
pop
cmps
in
mov
mov
(bad)
cmp
(bad)
rcr
xor
push
lods
lods
imul
hlt
mov
mov
js
es
imul
retf
shl
rcr
lods
xchg
loop
xchg
arpl
pop
jo
jle
repz
sahf
imul
jo
cmc
sahf
icebp
jle
pop
aas
sar
jns
imul
cmps
jne
mov
push
pop
mov
mov
int3
retf
mov
mov
push
dec
inc
xor
jmp
mov
stos
push
pop
and
fild
imul
test
mov
jge
sbb
aam
pop
push
sar
jecxz
adc
add
shl
aad
out
lods
dec
mov
inc
and
sbb
jno
sbb
push
push
jno
push
mov
das
call
into
push
sti
mov
push
xor
and
ins
push
popf
jbe
mov
pop
push
and
pushf
je
sub
mov
sub
xchg
jmp
mov
into
lahf
xor
jl
bound
inc
ja
clc
push
mov
sbb
jp
and
mov
les
sbb
retf
or
dec
xchg
xor
cmp
push
mov
loop
inc
cmp
rol
mov
cmps
add
lds
out
mov
jg
pop
sub
jp
pushf
jecxz
mov
sub
adc
dec
cmp
out
sub
fldenv
dec
(bad)
in
mov
jp
mov
push
movs
sbb
fsub
xchg
jge
jns
loope
adc
(bad)
cmp
mov
cli
fist
push
idiv
shr
aaa
shl
cli
sbb
(bad)
fninit
outs
jns
mov
mov
movs
ins
fdiv
int
xchg
mov
xor
test
jns
cld
leave
aam
and
in
lahf
je
pushf
test
out
loop
inc
sbb
ja
imul
in
(bad)
movhps
cmovbe
(bad)
dec
mov
mov
sub
xor
mov
ja
addr16
ins
test
fdiv
hlt
and
out
leave
ins
sub
adc
movs
and
loope
sahf
mov
jbe
push
jno
(bad)
and
xor
sub
mov
leave
add
sbb
(bad)
xchg
out
cdq
hlt
mov
xor
stos
cmp
push
xor
mov
push
pop
xchg
in
add
nop
dec
xchg
adc
adc
cld
xor
retf
mov
imul
out
sub
pop
mov
push
pop
lea
pop
call
mov
fcomp
pop
xlat
dec
pop
inc
int
dec
in
stos
lds
lods
aad
cmps
imul
mov
or
push
mov
sbb
cmp
and
sub
pop
mov
int3
push
or
ret
add
dec
lods
fcomp
sti
out
in
shr
jo
cmp
mov
aad
jb
cmp
je
popa
cdq
pop
xchg
mov
in
into
ficomp
ins
and
loope
dec
jae
jl
jl
mov
pop
mov
pop
cmps
mov
aaa
in
xor
addr16
adc
mov
retf
mov
push
xchg
jno
out
mov
jmp
in
mov
fiadd
push
nop
xor
pop
pusha
add
cmovs
ffree
fstp
neg
std
inc
sub
test
iret
pusha
dec
adc
retf
in
or
(bad)
test
scas
pop
loop
xor
ds
cmp
lds
sbb
stc
pop
adc
cmp
dec
hlt
jno
enter
das
aad
scas
mov
push
pop
push
mov
idiv
cmp
pushf
cs
push
push
(bad)
mov
popa
fisubr
mov
inc
mov
aam
jae
dec
in
sub
stos
ins
cs
ins
imul
jge
loope
sub
xchg
aaa
bound
sbb
(bad)
dec
aas
lods
xchg
test
leave
(bad)
retf
jmp
push
dec
ss
adc
daa
push
stos
ror
out
and
push
ss
ins
retf
data16
push
fnstsw
cwde
inc
call
mov
stc
les
bound
pop
add
loope
and
sbb
mov
mov
movs
stc
push
daa
cmp
mov
cmps
or
jge
scas
push
mov
dec
push
mov
(bad)
leave
ret
push
in
dec
mov
in
scas
dec
iret
pop
test
pop
inc
cs
dec
dec
mov
dec
out
ss
popf
push
mov
icebp
mov
xor
(bad)
lea
in
mov
sub
mov
fs
js
loop
xor
dec
mov
mov
test
sub
fs
imul
jne
xor
pop
dec
fisub
and
dec
xor
jle
and
or
sub
jl
stos
mov
in
inc
pushf
xor
mov
jmp
mov
fcmovnu
int3
(bad)
push
stos
pop
dec
xor
sbb
dec
cmp
scas
addr16
pop
pop
mov
and
dec
jmp
inc
mov
pop
inc
dec
pop
cdq
pop
out
rol
push
dec
pop
test
and
jmp
mov
jnp
mov
mov
fld
xor
cmp
sti
xchg
je
nop
adc
push
push
repz
jecxz
adc
in
jno
xchg
jno
cmc
(bad)
dec
outs
ja
and
aad
mov
cli
out
sahf
out
cmp
add
out
jnp
mov
jns
sub
in
cdq
push
dec
cwde
mov
int
scas
bound
retf
call
adc
mov
pop
js
dec
cmp
jg
push
pop
mov
stos
cli
pop
dec
sbb
lds
pop
cmp
adc
mov
push
pop
sub
ins
sbb
test
out
loop
mov
push
mov
sahf
xor
adc
jns
push
or
push
xor
test
imul
cmp
pop
mov
lea
rcr
out
in
xor
adc
ret
popa
aad
cmc
ja
lods
pop
sub
loope
inc
jno
(bad)
sub
je
jae
stos
stos
call
dec
out
jbe
inc
bound
ds
jmp
or
cmc
cmp
jns
push
mov
icebp
sar
push
sub
(bad)
loope
shl
mov
mov
repz
sub
fwait
cs
nop
(bad)
out
xchg
(bad)
cmp
sub
jge
retf
bound
cld
sbb
adc
cmps
out
mov
add
cli
stos
mov
bound
and
adc
(bad)
push
inc
ja
push
and
hlt
out
adc
mov
pop
lea
xlat
xchg
test
add
inc
inc
push
sub
bound
jg
jle
add
pop
lahf
pop
xchg
inc
ret
mov
mov
dec
cmp
aaa
out
xchg
push
ds
sar
mov
xor
inc
mov
sub
pop
das
arpl
test
jg
ins
lahf
and
aam
xchg
xchg
std
jmp
push
pop
jne
iret
inc
dec
ror
clc
inc
movs
into
icebp
xor
daa
pop
sbb
(bad)
mov
jnp
scas
scas
out
hlt
push
js
imul
rcr
mov
fimul
inc
sbb
xchg
fisttp
dec
inc
bound
pop
and
dec
movs
fisttp
jle
mov
dec
sbb
sub
mov
pop
fmul
jl
mov
lods
cmp
aaa
xor
push
mov
neg
mov
push
leave
sbb
push
(bad)
adc
inc
mov
mov
sub
lock
adc
inc
jle
push
loop
pop
push
movs
jmp
push
lods
inc
call
out
cmp
(bad)
dec
sub
pushf
jb
fsubr
loop
(bad)
call
sbb
xchg
scas
cs
cli
das
mov
mov
sahf
int3
jmp
ins
push
dec
xchg
into
(bad)
jl
mov
ret
fistp
lods
gs
push
lods
adc
outs
int
out
or
xor
aas
addr16
int3
fcomp
dec
jmp
test
fnstsw
lds
nop
stos
outs
add
xor
rol
pop
inc
cmps
movs
hlt
pop
pop
pop
xchg
jmp
stos
cdq
add
sub
in
mov
cwde
lahf
cmps
dec
outs
jmp
fcomi
or
iret
xchg
dec
test
into
jbe
push
or
xor
add
push
nop
sub
sbb
adc
mov
test
popf
xchg
cmc
mov
cwde
into
mov
aam
in
iret
in
or
adc
out
xlat
out
or
xchg
fbld
sbb
jnp
xchg
stos
mov
clc
or
loope
int3
mov
and
push
sub
sbb
sub
dec
stos
clc
ds
loop
push
pop
lods
mov
in
imul
push
aad
lods
xchg
enter
dec
and
in
test
shr
call
cmp
arpl
cmps
enter
sbb
cmp
les
xchg
mov
gs
ja
cmp
das
retf
mov
cmp
dec
(bad)
cmps
aad
sub
cmc
cdq
add
sub
gs
sub
rol
jmp
cmps
clc
jbe
mov
add
test
aad
add
hlt
sbb
stos
mov
inc
sub
rol
imul
fld
ins
jbe
aaa
mov
not
xchg
ret
pop
ins
std
mov
sbb
movs
repnz
xchg
sub
add
mov
lahf
cli
popa
pop
pushf
ins
retf
mov
(bad)
loopne
sti
dec
dec
mov
mov
shl
pop
stos
out
repz
leave
pop
push
jp
sub
retf
push
mov
cdq
ins
(bad)
(bad)
scas
fist
mov
stos
mov
jae
mov
daa
inc
sbb
pop
mov
outs
jecxz
test
or
dec
xchg
add
in
cwde
sbb
add
inc
in
adc
xor
sbb
and
stos
mov
iret
mov
imul
sahf
xchg
or
mov
bsf
popa
hlt
cmps
push
out
(bad)
imul
bound
and
ins
jae
add
cmp
call
cdq
aam
es
cmps
std
fisttp
sbb
sbb
mov
adc
add
mov
add
ds
push
bswap
and
adc
inc
sub
aam
push
cdq
sub
pushf
jbe
out
or
xchg
fidiv
sbb
add
test
mov
mov
test
cmp
mov
mov
shr
fistp
fstp
xchg
in
jge
fimul
and
cwde
sub
aad
ret
shr
sbb
dec
loope
dec
sbb
xchg
sbb
pop
cdq
call
enter
add
out
fisub
les
aas
sahf
ss
pushf
or
cmc
stos
push
xor
mov
adc
pushf
loop
dec
sbb
addr16
pusha
jbe
inc
jmp
xor
cmp
in
adc
fs
mov
mov
dec
cwde
mov
(bad)
dec
cmps
lock
pop
adc
mov
mov
mov
dec
pushf
movs
inc
addr16
xor
push
mov
jb
mov
pusha
sti
mov
mov
inc
push
mov
(bad)
icebp
icebp
ja
cmp
jg
iret
pop
xor
sub
into
or
push
mov
cmp
sbb
mov
push
sub
xchg
sbb
mov
addr16
je
mov
cmc
aam
mov
sub
mov
shl
mov
push
scas
adc
xchg
cmc
movs
push
cmp
jb
mov
retf
dec
pop
test
(bad)
cld
add
xor
dec
push
inc
mov
cmp
cmp
xchg
mov
mov
mov
push
hlt
stos
ss
cmp
add
retf
mov
jmp
cmp
in
retf
adc
sar
dec
pop
mov
(bad)
fsub
dec
(bad)
test
fsubr
inc
in
in
xchg
xchg
pusha
ror
mov
inc
(bad)
add
and
add
cdq
fild
adc
mov
loopne
jne
adc
dec
cmp
sbb
or
shl
push
xor
ret
sti
(bad)
aas
sahf
push
jecxz
push
inc
stos
and
cmp
sub
test
mov
ret
mov
out
xchg
mov
pop
jge
mov
in
pop
mov
hlt
cmp
stos
mov
fwait
cmp
jp
bound
push
inc
adc
pop
xchg
sub
push
jb
cmps
jmp
(bad)
into
mov
cmc
pop
mov
sbb
stc
jae
(bad)
lods
sub
in
mov
cmps
sbb
cmp
lea
retf
jmp
pop
movs
sub
inc
call
clc
mov
push
xchg
cmps
es
inc
stos
inc
pop
or
arpl
cmp
fbstp
jns
(bad)
xlat
sub
jg
cwde
fist
cmp
adc
pop
loope
add
rcr
sub
xor
es
in
fsubr
push
shr
(bad)
not
jmp
ss
cld
adc
imul
movs
std
xchg
inc
mov
inc
std
movs
push
add
lds
lds
jg
inc
repz
add
xor
cmp
xchg
xlat
(bad)
scas
movs
loopne
comiss
push
sbb
and
dec
in
xchg
mov
(bad)
xor
das
adc
into
lahf
or
das
mov
popf
cli
mov
pop
xchg
push
xor
sub
add
aaa
inc
stos
and
sub
dec
cdq
mov
jo
rcr
pop
aas
outs
add
sbb
cmp
std
cmp
mov
adc
cmp
mov
test
gs
adc
ss
jmp
and
es
inc
push
mov
dec
fcom
sub
sbb
loopne
mov
mov
jnp
(bad)
lods
lea
mov
pop
pop
pop
and
pop
dec
lods
mov
pop
not
movs
out
jp
mov
adc
loope
dec
xor
fmul
push
stos
out
ins
xchg
lahf
dec
fld
push
lea
cdq
mov
in
push
push
rep
push
xchg
out
sub
cmp
dec
pushf
mov
push
in
push
mov
add
add
adc
cld
mov
add
mov
xchg
or
rcl
fucomp
ja
sub
pop
sbb
outs
ja
retf
jo
int
lahf
movs
idiv
addr16
cmc
push
cdq
jmp
ins
mov
xchg
and
inc
push
pop
pop
and
add
or
out
movs
pusha
and
sbb
inc
sub
jno
push
lea
sti
iret
pop
xchg
shl
jecxz
stos
stos
mov
jmp
push
(bad)
addr16
movs
add
jb
jne
adc
out
push
scas
outs
lahf
sub
jg
cmps
sbb
cli
add
mov
(bad)
movs
pop
xor
and
sahf
mov
test
clc
inc
push
mov
sti
pop
adc
inc
pop
jnp
fnstcw
cmp
retf
sbb
add
aam
aaa
push
push
jmp
ss
mov
je
nop
lods
xchg
cmp
xor
and
push
xor
cmp
push
mov
popf
je
std
mov
fistp
xor
pop
mov
imul
scas
fwait
or
or
fld
scas
cmps
je
dec
sub
cmps
push
call
sub
push
mov
shr
test
and
push
loop
xor
div
push
jne
loope
jecxz
sub
movs
aam
ins
(bad)
pop
mov
sbb
loopne
cmp
mov
movs
sub
push
sub
es
inc
jns
jo
dec
jp
outs
cmp
pop
je
rcr
neg
cs
popa
jmp
movs
cmp
test
jns
push
outs
or
mov
jb
es
jb
cmp
inc
mov
mov
je
call
jge
int
or
adc
adc
mov
push
dec
aad
scas
jns
push
shr
leave
outs
test
outs
int
mov
xchg
leave
imul
lds
test
movs
cmp
into
in
out
xchg
push
mov
push
xor
sub
xchg
xchg
push
data16
xchg
inc
jecxz
aad
(bad)
sti
jo
daa
mov
in
push
pop
mul
std
xor
test
out
sbb
jne
mov
dec
int
cmp
cwde
jle
loopne
dec
lahf
jne
int
(bad)
je
out
ins
and
sar
pop
test
jmp
jmp
pop
stc
inc
mov
cs
fst
aas
or
jbe
or
push
test
out
dec
sar
mov
lahf
fidivr
cli
pop
inc
dec
sub
inc
cld
mov
test
inc
jmp
imul
jno
cmc
pop
test
cdq
jbe
mov
xchg
cmps
mov
inc
push
mov
jle
cmp
mov
jb
push
xor
mov
inc
add
sbb
icebp
dec
mov
push
inc
scas
ror
jns
xchg
sbb
pop
sub
jnp
mov
mov
push
cmc
stos
aam
rcl
xor
dec
mov
pop
imul
fist
mov
jno
stos
xor
pop
push
fs
std
jle
sbb
or
movs
popa
movs
mov
xchg
jns
or
sbb
adc
pop
fst
adc
jmp
std
pop
mov
ss
sub
push
lock
pop
mov
push
fstp
sub
dec
sub
pop
je
sar
ret
mov
mov
xchg
je
mov
mov
mov
test
leave
pop
out
ret
mov
sub
in
jmp
loopne
push
addr16
jno
push
xlat
repnz
push
push
push
out
in
fs
push
out
pop
movs
pop
outs
push
dec
and
and
add
adc
sub
test
cmps
popf
xor
cmp
adc
xchg
mov
ffree
dec
pop
ffreep
xchg
mov
mov
jbe
addr16
xchg
sbb
jle
cmp
dec
push
test
mov
xchg
adc
mov
scas
cmps
aad
shl
xor
(bad)
inc
outs
loopne
out
mov
cs
xchg
sub
push
retf
pop
cmp
in
add
inc
and
movs
in
xor
ret
or
mov
leave
mov
stos
daa
pop
retf
sti
dec
ret
gs
sub
push
pushf
xchg
call
icebp
imul
mov
test
pop
xchg
leave
cmp
sub
cmp
cmp
jb
push
cmps
fidiv
inc
lahf
jg
xlat
push
xchg
add
adc
lock
sbb
xor
into
dec
repz
aas
or
sbb
cmps
jno
mov
mov
pop
stos
mov
fwait
cmp
test
fxch
in
data16
sar
cmps
pop
jb
test
cld
mov
loop
fidiv
adc
xchg
retf
xchg
je
loope
sub
icebp
fmul
(bad)
jge
mov
iret
sahf
out
retf
xor
in
sbb
lods
fistp
dec
jbe
out
test
ins
or
ins
xchg
cmp
dec
test
dec
mov
jbe
into
xchg
test
mov
sub
push
jo
sbb
in
sbb
push
test
fstp
mov
jns
test
sbb
lahf
mov
stos
mov
div
fwait
xor
gs
imul
xchg
lods
lar
cwde
fist
test
imul
or
into
pushf
cmps
mov
push
jno
mov
mov
inc
ret
xor
(bad)
hlt
sub
test
popa
imul
pop
(bad)
aad
xchg
push
push
push
mov
mov
pop
dec
or
mov
retf
xchg
push
in
jmp
popa
ins
rep
sub
jae
pop
mov
js
into
popa
mov
out
stos
mov
out
mov
retf
ret
popf
mov
ficomp
(bad)
loopne
push
mov
mov
fs
ja
ja
in
aad
pop
mov
(bad)
(bad)
and
mov
int
fprem1
cmp
push
fst
lods
lahf
xchg
cdq
retf
jne
hlt
sahf
dec
sti
cmp
sub
mov
sar
fldcw
mov
and
ss
push
out
mov
fisubr
push
mov
aas
jb
dec
xor
loop
stos
xor
dec
jnp
add
xchg
cmp
sahf
loopne
mov
lods
cs
es
movs
mov
repz
popf
(bad)
int3
mov
mov
adc
dec
mov
cmp
(bad)
jne
lods
vpsrlw
mov
jmp
mov
cmps
dec
dec
pop
mov
mov
and
mov
nop
or
and
jnp
arpl
push
cs
movs
fisubr
ins
shl
ins
cmps
fild
retf
mov
mov
icebp
push
cmps
lods
xchg
xchg
jp
adc
and
xchg
ret
jmp
stos
or
mov
xchg
xchg
add
add
mov
aad
jle
loopne
jge
shr
mov
inc
and
(bad)
xchg
mov
mov
pop
mov
int3
bound
jne
dec
cwde
outs
mov
leave
leave
aaa
into
mov
inc
out
fcomip
test
push
cmc
inc
xchg
xchg
lods
inc
scas
ds
out
jge
movs
mov
xchg
mov
fiadd
xchg
or
ret
sub
mov
cmp
int
test
test
and
es
inc
jno
mov
mov
inc
xchg
fdiv
aas
call
shl
push
hlt
outs
fdecstp
adc
and
jl
jg
jle
std
mov
pusha
mov
outs
shr
sub
out
xor
cmps
stos
xor
and
jbe
push
fs
sahf
xor
cmps
mov
ins
or
add
cmps
popf
pop
ret
adc
dec
xor
ror
mov
mov
js
xchg
jecxz
(bad)
sar
into
jnp
cmp
ins
pop
mov
daa
daa
cmp
pop
pop
pop
mov
outs
fcom
push
adc
nop
loop
mov
data16
pop
fisub
push
lods
dec
imul
pop
fisubr
in
jle
adc
mul
ins
dec
outs
mov
xor
mov
stc
shl
cli
fwait
jb
imul
adc
or
jae
push
adc
xchg
call
or
ins
cmc
sub
xchg
mov
addr16
in
push
pop
pushf
dec
pop
ret
cli
cmps
call
test
pop
sub
fstp
sub
fwait
lock
pop
cwde
jg
fidiv
stos
push
xor
push
sub
fwait
mov
bound
cwde
cmps
xor
ja
mov
xchg
mov
je
jl
seta
push
dec
push
and
dec
pop
push
lock
adc
jl
(bad)
out
xchg
out
out
add
sub
movs
dec
xchg
cmp
xchg
push
(bad)
xor
scas
div
shr
jl
xchg
popa
pop
imul
xchg
test
stos
jb
leave
sub
mov
jle
aad
test
sub
nop
inc
pop
pop
cmp
mov
call
call
inc
pop
stos
out
jmp
cld
sub
push
pop
addr16
push
pushf
mov
push
es
je
push
daa
sub
jmp
push
jo
sub
(bad)
sub
xchg
outs
ins
leave
sub
and
sbb
push
fmul
jns
xchg
out
or
js
xchg
cs
pushf
lahf
pop
repnz
inc
or
arpl
jp
retf
dec
push
xchg
dec
mov
ror
outs
cmp
gs
fcomip
mov
dec
aad
push
out
push
dec
cld
cmc
std
(bad)
mov
sbb
and
(bad)
mov
ret
bound
lods
or
adc
fistp
xchg
in
jmp
scas
ins
repz
jmp
and
in
out
xchg
dec
xchg
aam
mov
sbb
pop
sub
jmp
and
cmps
cmp
jecxz
rep
mov
fld
out
ret
adc
mov
dec
aam
dec
cli
shl
mov
imul
outs
das
adc
test
std
or
xor
cmp
mov
in
movs
mov
cmps
fcmovnbe
and
cmp
push
movs
pop
xchg
scas
cmp
cs
ss
sub
bsr
xor
xor
mov
repz
xchg
and
push
jne
vmovaps
cmp
rcl
pushf
mov
ss
add
push
mov
adc
stos
mov
jb
sub
dec
jmp
fsubr
scas
jge
loope
shr
stc
jmp
call
lods
movs
(bad)
cmps
fild
mov
cmp
and
xor
dec
pop
jmp
or
inc
mov
imul
lods
pushf
pop
sbb
xchg
outs
enter
into
loope
popa
jno
jb
inc
jbe
push
hlt
jmp
xchg
jp
sub
in
je
data16
sbb
imul
xchg
jp
scas
push
xchg
mov
or
popf
xchg
dec
shl
fs
push
in
or
adc
test
loopne
test
mov
adc
and
jae
cmp
pop
cmp
(bad)
jb
push
outs
scas
push
aaa
dec
aas
or
fs
in
loop
pop
hlt
fidiv
pop
xlat
push
test
mov
test
ficomp
dec
call
or
push
clc
(bad)
mov
xchg
lds
mov
pop
jnp
mov
sbb
cmp
gs
js
(bad)
push
fbstp
dec
xchg
xchg
mov
jbe
neg
scas
push
sub
mov
push
cmps
imul
fist
mov
enter
and
xchg
pop
xor
push
les
clc
jae
inc
dec
leave
rcr
retf
gs
loopne
call
scas
xlat
cmp
popf
(bad)
jmp
jns
inc
jo
dec
jmp
mov
add
push
inc
push
lds
xor
out
arpl
or
inc
sbb
popa
push
mov
pop
(bad)
pop
fst
in
inc
xchg
pop
and
inc
push
xchg
sar
push
fadd
jg
retf
neg
sbb
dec
js
cmp
clc
mov
fsubr
cmp
hlt
(bad)
mov
cmp
push
in
loop
int
sub
cmc
aad
frstor
clc
popf
dec
test
inc
jae
retf
push
mov
cmp
xchg
and
rcr
inc
ins
inc
pop
or
sbb
imul
outs
jmp
in
cmp
and
dec
fwait
outs
imul
xor
stos
jmp
jmp
std
mov
ret
retf
(bad)
jp
mov
pop
je
nop
inc
out
(bad)
dec
test
ins
lahf
mov
repz
pushf
arpl
mov
(bad)
jnp
stos
pop
(bad)
into
fisttp
popf
lock
fst
push
(bad)
or
sbb
adc
jp
lds
inc
in
push
imul
push
hlt
lahf
fwait
jecxz
xchg
int3
cli
pop
pusha
stos
cmp
loope
cmp
stc
aaa
lock
sbb
jbe
add
test
stos
data16
jmp
mov
pop
xchg
in
mov
out
lods
xchg
pushf
jg
jge
ss
xchg
cmp
jnp
mov
test
scas
push
and
outs
jb
fidiv
push
movs
es
mov
call
xchg
data16
ret
sahf
out
sub
movs
dec
sbb
or
cmp
push
pop
push
dec
jmp
pop
loope
ins
loopne
int3
jecxz
mov
jne
push
jp
aas
sbb
popf
mov
adc
sar
inc
lea
dec
scas
mov
dec
scas
pop
xchg
xor
(bad)
retf
out
cmp
xchg
jns
movs
addr16
cmp
sar
sbb
cmps
hlt
in
sbb
xchg
jg
mov
pop
ss
inc
xor
push
icebp
mov
repz
cmc
push
jmp
out
packuswb
xchg
push
ss
loope
scas
dec
imul
xchg
ret
jns
xchg
sbb
pop
pop
jmp
cmc
outs
inc
add
jno
sbb
scas
scas
aam
fdivr
sahf
out
jbe
jbe
and
stos
dec
pop
add
idiv
mov
cwde
js
pop
stos
sbb
jl
pop
add
sub
(bad)
push
out
and
push
imul
sub
pop
cmp
sbb
outs
fdivr
pop
neg
pop
and
cmc
lea
sahf
bound
cmps
ins
cmp
jb
mov
or
add
add
sbb
push
or
cs
sti
jo
in
mov
movs
sbb
mov
mov
retf
jbe
(bad)
div
mov
and
sub
shl
repz
iret
jl
outs
loop
jg
pop
not
cmp
dec
adc
mov
ss
shr
inc
in
sbb
push
push
gs
imul
mov
xchg
push
or
cmps
xchg
adc
pop
aaa
and
ret
icebp
frstor
xchg
pop
lahf
mov
shr
jge
add
outs
and
lock
cmp
iret
jnp
mov
cmps
push
and
scas
xor
jp
push
push
xor
xor
(bad)
lahf
xchg
push
jno
mov
or
pushf
repz
outs
pusha
arpl
scas
call
mov
gs
jmp
jno
aad
cmp
icebp
inc
leave
jmp
sbb
jmp
call
(bad)
int3
mov
jae
ss
data16
aad
add
add
repnz
jns
mov
add
lods
inc
and
pop
pop
inc
das
nop
das
shl
xor
daa
cmp
daa
mov
std
sbb
fld
stc
in
dec
xor
(bad)
or
fstp
arpl
xchg
mov
ret
lahf
lods
mov
mov
dec
lods
dec
(bad)
fmul
xchg
cmps
aas
pop
scas
retf
mov
or
shl
jae
push
and
jle
fcomi
mov
sub
and
adc
and
sub
pop
sahf
in
jle
xor
xor
mov
adc
inc
xor
xchg
jle
cmp
mov
mov
adc
adc
push
pop
(bad)
adc
out
and
sbb
jb
aad
test
int3
jnp
sub
out
dec
ins
idiv
push
xchg
imul
ins
test
ret
leave
hlt
sub
aas
sub
icebp
jle
dec
mulps
pop
push
mov
xchg
sbb
movs
jnp
mov
out
mov
cmc
sbb
mov
adc
xchg
in
cmps
out
dec
mov
retf
jmp
adc
push
movs
or
mov
sbb
scas
sub
ficomp
jp
cdq
jecxz
jo
push
dec
push
cmps
jge
(bad)
ror
fcmove
aam
cmp
inc
lods
retf
fldenv
dec
int
stos
push
int
add
or
jle
adc
adc
jo
mov
xor
es
pop
scas
aas
int
icebp
cmp
xor
and
ss
ins
sar
xchg
jl
push
mov
and
pop
aad
add
imul
test
ficom
cld
les
fs
mov
cmp
xor
push
les
mov
pop
inc
pop
ret
stc
fwait
(bad)
neg
pop
in
inc
mov
dec
inc
cmp
fmul
pop
jne
adc
mov
movs
pop
(bad)
ins
inc
ja
test
sub
pop
sbb
ret
add
jo
test
xchg
aad
or
mov
rcr
inc
test
fidivr
out
jno
jo
push
cmps
mov
and
mov
sub
pop
inc
inc
add
arpl
inc
push
sub
cmp
(bad)
push
mov
jg
jbe
sub
push
pop
std
mov
cmps
in
hlt
(bad)
jbe
out
sub
nop
arpl
add
loopne
xchg
ret
call
out
icebp
inc
(bad)
icebp
add
(bad)
ror
pop
xlat
cwde
cld
stos
xor
fimul
enter
add
cld
jns
push
cmp
push
out
push
push
ja
clc
test
(bad)
fcompp
aad
lock
pushf
lds
push
add
movs
mov
sub
std
add
movs
pop
sub
cli
sahf
into
adc
mov
inc
dec
mov
lock
repnz
dec
cmps
sub
sub
sbb
inc
rcl
sar
push
pop
dec
popa
jo
scas
stc
jnp
into
data16
gs
cmps
or
movs
das
retf
cmc
loop
push
cmps
les
inc
adc
push
add
ret
mov
and
push
push
fnstenv
cmps
leave
call
xchg
cmp
in
mov
(bad)
xor
xor
push
pop
mov
(bad)
and
popf
add
scas
rcr
inc
adc
das
xor
outs
in
xor
fld
test
mov
retf
fstp
xchg
add
xchg
mov
push
fstp
push
icebp
and
mov
jecxz
int
cmp
push
mov
fstp
pushf
cmps
fwait
aas
sbb
fisttp
pop
and
sbb
mov
ins
jb
jo
add
mov
mov
cmp
fucomip
cwde
popf
sbb
pushf
stc
ror
movs
jmp
test
call
out
push
jmp
out
or
mov
jmp
js
std
pop
xor
xchg
out
lock
sub
jb
pop
shl
lds
dec
clc
in
stos
mov
leave
jns
xchg
mov
or
push
jmp
imul
std
sbb
xlat
cld
leave
cld
dec
xchg
push
jnp
pop
js
dec
ins
add
imul
jns
mov
sbb
aas
and
pop
dec
ret
sar
mov
xor
mov
pushw
mov
mul
ins
xlat
rcr
outs
and
mov
ret
pop
fst
pop
push
mov
outs
stos
xor
add
lds
sub
in
inc
fist
iret
ror
mov
sbb
sbb
mov
out
lock
sbb
fisubr
cmps
aad
xchg
hlt
jmp
outs
push
jge
pop
add
sub
scas
(bad)
and
adc
jp
or
push
fs
mov
call
hlt
sbb
fwait
ret
cmp
stos
gs
or
xchg
adc
ja
push
mov
stos
cmp
fbstp
out
jbe
int
dec
leave
cmp
sbb
jne
push
ror
cmp
sbb
call
icebp
fadd
dec
push
(bad)
daa
dec
and
jno
shl
daa
jo
cli
inc
push
imul
lea
ins
jne
mov
sbb
push
cmp
dec
mov
mov
loop
adc
and
xchg
cmp
inc
mov
cmp
frstor
mov
cmp
(bad)
std
bound
pop
dec
fcom
or
ficom
bound
inc
stc
les
xchg
dec
sbb
cmp
xchg
mov
lods
push
and
or
dec
ja
pop
sub
dec
xor
jae
pop
scas
and
(bad)
aas
sahf
jae
mov
loopne
or
cwde
jmp
xlat
fsubr
cmp
cmps
popa
mov
jns
in
jne
sar
push
ror
clc
sahf
fwait
les
inc
jns
gs
adc
pop
cwde
sti
add
mov
lock
dec
mov
jp
push
or
sahf
mov
iret
stc
aad
inc
jle
adc
(bad)
in
sub
fldcw
xchg
sub
aam
pusha
jb
leave
dec
lods
(bad)
pop
jge
cli
and
cmp
mov
mov
loope
pop
in
loope
pop
mov
jns
ds
pop
adc
out
aaa
jmp
pop
(bad)
mov
shr
mov
jb
mov
push
inc
adc
fld
and
adc
push
cmps
call
sub
ret
cmps
imul
push
stos
xchg
add
retf
sbb
xchg
mov
mov
xchg
mov
jge
movs
ss
call
mov
adc
ins
add
jo
popa
sub
ret
fnsave
fimul
cdq
cmp
ds
jnp
in
add
ficom
and
xchg
inc
in
dec
xor
sbb
dec
sti
addr16
adc
fmul
add
dec
dec
xchg
int
pusha
jle
test
push
loope
jnp
mov
int3
xor
dec
loopne
jno
inc
xor
jp
cwde
and
jae
loop
mov
sbb
popf
sub
add
pushf
idiv
inc
jmp
sahf
mov
and
(bad)
aas
xchg
jmp
xchg
jl
push
mov
(bad)
adc
sub
jecxz
jno
fwait
push
sbb
and
dec
cmps
jo
pushf
ins
int
ret
(bad)
in
into
cwde
(bad)
(bad)
andnps
pop
xchg
js
ins
(bad)
push
jg
xchg
pop
retf
jno
jle
jno
mov
neg
cmp
sahf
fsubr
jae
push
push
rcl
sub
dec
push
dec
stos
mov
push
hlt
push
xchg
and
xor
inc
pusha
sahf
call
popa
xchg
lock
outs
mov
xor
repnz
jb
sub
push
xchg
repz
xor
mov
add
out
in
sbb
jb
mov
hlt
gs
mov
stos
jecxz
lea
inc
dec
in
shl
mov
jb
push
xor
gs
mov
inc
pop
pop
fld
sbb
(bad)
dec
repz
neg
sahf
imul
inc
imul
jge
jp
mov
ja
and
cmp
out
mov
iret
inc
inc
xor
add
iret
aaa
jle
sbb
push
or
pop
adc
cmc
test
mov
in
test
out
div
test
scas
adc
sbb
and
inc
into
loopne
adc
push
stos
les
cwde
dec
push
mov
int3
mov
inc
div
mov
mov
cmp
add
pop
cmps
jae
mov
xor
outs
pop
cmp
fdiv
xor
pop
jle
dec
stos
xor
mov
in
mov
cld
mov
mov
jno
fwait
or
dec
stos
add
jb
loope
std
cwde
fist
gs
fstp
aas
xchg
cmp
xchg
jno
mov
(bad)
pop
idiv
sub
test
mov
cmp
test
fst
int
push
movs
test
mov
inc
das
fnstcw
sbb
adc
push
outs
iret
jecxz
xor
cmc
cdq
arpl
dec
mov
mov
sub
mov
jle
inc
mov
mov
xchg
xchg
and
les
movs
out
outs
cdq
dec
mov
repnz
xchg
jp
pop
mov
push
lods
pop
or
cdq
push
mov
cmps
es
pop
rcr
jnp
stc
and
push
jae
dec
lods
jno
inc
cmc
mov
mov
adc
es
cmp
xchg
cmps
outs
jnp
mov
dec
mov
xchg
adc
outs
mov
jecxz
fisttp
call
je
outs
adc
push
int
icebp
mov
cmps
imul
sub
jno
pop
push
mov
dec
scas
and
imul
mov
xchg
jmp
cmps
xchg
std
ins
mov
jae
cwde
fwait
outs
xchg
in
xor
push
frstor
dec
sub
dec
gs
ss
pop
and
cmps
in
(bad)
jmp
cdq
fnsave
or
jp
outs
iret
or
or
mov
xchg
fsub
leave
jb
or
out
fcmovnu
jne
cmp
cmp
rcl
imul
jnp
xor
mov
inc
or
mov
imul
xchg
lds
cmps
push
jbe
xor
sub
dec
stos
pop
outs
enter
sub
int3
xchg
fwait
dec
dec
jb
sbb
xchg
aad
div
xchg
dec
sbb
mov
(bad)
out
mov
pop
sub
in
iret
xor
sub
sub
call
imul
lock
push
daa
sub
inc
les
aas
daa
push
xchg
cmps
pop
xor
push
xor
outs
movs
dec
mov
ret
mov
sahf
jmp
xchg
movs
fwait
push
dec
push
dec
(bad)
ja
jnp
sbb
sbb
push
frndint
inc
cmovp
xchg
daa
sbb
push
push
push
pop
sbb
dec
les
enter
ins
dec
jl
pop
arpl
push
cmp
pop
pop
sar
push
data16
test
mov
fwait
sub
push
push
push
int
repz
dec
push
pop
mov
fwait
and
aaa
cmp
pop
aam
jg
dec
pop
cmp
push
mov
cld
cmp
inc
iret
xor
stos
adc
jmp
movs
retf
dec
cmps
push
jmp
rcr
into
(bad)
mov
push
and
ins
jmp
inc
jno
data16
mov
jge
and
pop
ret
cmp
xchg
mov
xor
(bad)
adc
jb
mov
fisub
xchg
mov
lods
xchg
stc
mov
in
mov
cmps
pop
add
popa
sbb
jb
xchg
xor
xchg
cmps
add
cmps
test
xchg
bnd
shr
sub
dec
jnp
daa
fisub
mul
lahf
push
mov
jge
shl
sub
sbb
dec
sbb
pop
sbb
dec
enter
loopne
in
gs
and
cdq
dec
mov
outs
dec
fisub
sar
jmp
leave
popa
iret
inc
or
dec
jne
fnsave
fisttp
pop
dec
dec
xor
mov
sub
jbe
out
inc
in
inc
adc
jbe
cmp
push
sbb
mov
xchg
mov
mov
sbb
leave
mov
movs
aad
stos
and
pop
jmp
jno
imul
dec
out
pop
in
pop
inc
push
sti
push
pop
jg
js
inc
pop
sub
pop
lock
retf
fdivr
sti
(bad)
in
and
mov
jne
xchg
icebp
test
retf
stc
dec
sub
cdq
cli
retf
js
sub
ss
fwait
cmps
xchg
push
push
dec
sub
push
and
jo
push
cmp
mov
cmp
inc
pop
(bad)
mov
push
scas
outs
mov
xor
dec
xchg
fs
repz
xor
fwait
loop
fild
ds
jmp
push
cmp
pushf
loope
jno
(bad)
sub
pop
mov
fbld
jae
in
mov
stos
imul
aaa
pop
repz
out
push
and
mov
xchg
push
stc
sub
call
inc
nop
pushf
jae
sub
aas
int3
push
mov
jns
pusha
gs
sbb
in
test
ins
cmp
jge
cli
pop
push
pop
cs
pop
ss
sti
xor
(bad)
xchg
stos
sbb
cmp
inc
inc
iret
jmp
mov
inc
jmp
ins
and
sahf
cwde
out
iret
scas
xlat
push
xchg
mov
lds
add
adc
xchg
xor
pop
mov
fimul
ja
fistp
lods
je
ret
push
push
push
mov
(bad)
leave
jbe
lods
cmp
test
in
fmul
sbb
xor
pop
ins
addr16
jns
add
out
add
xor
je
dec
adc
push
pop
movs
mov
dec
scas
std
iret
int
mov
scas
jge
in
xor
or
stos
sub
cmps
mov
aad
pop
imul
cs
fadd
sub
mov
jmp
xchg
test
jmp
ins
dec
dec
test
sub
add
bound
dec
out
jge
or
test
movs
je
movs
call
jbe
loop
jbe
cmp
data16
cmps
sub
test
xchg
sub
int
loopne
mov
xchg
xchg
push
ja
clc
pop
loop
mov
cmc
add
xchg
popa
lock
cmp
repz
pusha
(bad)
imul
mov
inc
(bad)
xchg
addr16
std
fwait
(bad)
jns
arpl
dec
lahf
ja
cld
sar
es
aad
or
inc
test
fdiv
test
xor
dec
and
lock
fist
pop
dec
lods
jbe
sbb
ret
int
cmp
mov
jns
rcr
sahf
dec
mov
(bad)
out
and
xlat
(bad)
xlat
dec
movs
mov
in
jne
loopne
lea
test
icebp
mov
aam
xor
push
repz
jp
ret
ins
stos
popa
test
jnp
sub
nop
repz
retf
jecxz
cwde
lods
adc
push
aas
lods
sub
sti
dec
sar
stos
outs
dec
shl
fistp
inc
mov
es
cdq
out
in
shl
or
inc
xor
call
leave
clc
mov
push
push
outs
stc
or
inc
sub
mov
sub
or
(bad)
dec
adc
add
ret
push
mov
sbb
push
movs
dec
(bad)
ins
inc
enter
lock
push
ffreep
out
jmp
div
xor
mov
adc
scas
jae
sbb
add
xchg
sub
cmp
xor
pushf
cli
inc
icebp
movs
int3
jae
push
cmp
cdq
push
cs
or
lods
adc
add
cmp
cld
or
lods
lods
push
aas
push
dec
enter
mov
or
cmp
cmp
mov
shr
hlt
lea
push
jb
movs
test
stos
ds
ret
inc
jmp
jbe
mov
idiv
sub
aas
cmp
scas
stos
in
pop
in
add
jnp
push
mov
inc
sti
sub
lds
xchg
mov
adc
mov
add
inc
cli
movs
or
add
fistp
ret
adc
push
int3
fs
jns
std
mov
mov
xchg
pop
mov
movs
cld
sbb
pop
mov
jb
push
repz
clc
sbb
push
int
dec
xor
cdq
imul
dec
sbb
adc
fnsave
sub
dec
jbe
mov
and
dec
pop
and
and
mov
das
sub
test
xor
pop
cmps
sub
repnz
dec
dec
mov
outs
ss
cmp
dec
mov
cmp
and
xchg
in
test
pop
cmp
fwait
dec
stc
pop
push
outs
sub
pop
or
sub
retf
xor
sbb
xchg
mov
in
call
xchg
mov
ja
imul
aam
mov
xchg
jmp
cli
fwait
in
cdq
inc
adc
xchg
push
mov
mov
rcr
inc
add
mov
movs
neg
push
mov
pop
cs
fsub
adc
retf
dec
xchg
pop
sbb
imul
clc
loop
push
mov
push
push
mov
and
or
push
(bad)
adc
add
add
add
cld
xor
adc
jb
in
or
pop
xchg
retf
mov
xchg
cmp
retf
adc
stc
adc
xchg
mov
push
lea
mov
ins
in
je
mov
leave
ins
mov
fldenv
ja
xor
mov
xor
into
mov
dec
pop
cld
lea
ins
and
or
out
das
retf
or
out
dec
xchg
push
push
push
aad
xlat
lock
pop
fbstp
rcr
ret
push
jo
lods
sub
lahf
cld
xor
jae
jns
aaa
mov
fimul
aad
mov
cmp
push
jne
pop
pop
(bad)
into
fistp
shr
dec
sbb
push
push
dec
test
xor
sbb
fnstcw
jns
sbb
cmp
push
pushf
jbe
leave
mov
test
(bad)
jae
mov
(bad)
sub
cli
outs
mov
jno
jae
push
fcmovb
sub
mov
jno
xor
add
stc
inc
cmp
daa
into
add
sub
stos
add
push
test
outs
pop
ret
pop
imul
dec
jne
shl
jmp
ficomp
mov
shl
xchg
dec
popa
mov
aaa
popf
adc
adc
test
pop
ja
push
and
or
push
adc
cmp
dec
mov
cmp
addr16
sbb
ins
mov
in
pop
xor
jno
cmp
xchg
es
mov
mov
xor
cmps
std
push
xchg
inc
inc
push
lds
cdq
pop
loop
cmp
in
and
and
xor
movs
or
sbb
jno
retf
fwait
cwde
adc
out
dec
dec
out
shr
mov
scas
or
dec
fisubr
mov
inc
xor
xchg
outs
xlat
mov
outs
pop
cmc
inc
jns
aaa
icebp
dec
dec
xlat
or
pop
mov
rcr
fwait
pop
int
sub
cmp
aas
pop
cmp
fidivr
pop
ret
aas
pop
sahf
icebp
idiv
mov
fsin
rol
mov
stos
cli
xor
icebp
clc
xchg
icebp
and
ins
sub
les
enter
shr
cs
push
mov
push
daa
std
cwde
jl
lahf
jge
push
ret
mov
mov
aam
jno
fsqrt
pmaxsw
movs
je
stos
sub
push
iret
movs
jo
xchg
iret
ins
icebp
push
test
cdq
add
jmp
sbb
dec
adc
push
xor
jae
sbb
lds
cdq
xchg
mov
shl
jno
push
add
pop
out
push
out
xor
mov
adc
dec
push
pushf
sti
cmp
retf
stos
popa
movs
retf
fnstsw
jo
add
and
xlat
xchg
movs
imul
addr16
inc
mov
xchg
neg
nop
cmp
pop
mov
(bad)
push
xor
mov
mov
lods
cmp
cmp
outs
fnstcw
cmps
retf
pop
sub
out
mov
stos
enter
sub
jge
repnz
pop
pop
jmp
cmps
daa
bound
mov
mov
jmp
mov
clc
inc
xchg
pop
and
movs
fucompp
mov
mov
push
mov
pop
fidiv
push
js
leave
dec
pop
call
push
jno
add
out
xchg
scas
inc
xchg
gs
mov
in
(bad)
xchg
jl
lock
retf
xchg
popf
push
loop
aam
out
int3
lock
jmp
cmps
adc
push
adc
sub
fmul
jno
dec
dec
fist
dec
outs
jbe
sub
sub
popa
xor
jae
das
inc
das
xlat
add
aam
retf
xor
ins
jb
mov
in
jbe
retf
pop
mov
int
add
jno
scas
rcr
push
out
scas
xchg
pop
pop
cdq
xchg
cmps
and
ins
xchg
out
loope
xor
dec
add
xchg
cmps
dec
fist
pushf
int
mov
aam
iret
cwde
dec
mov
clc
jo
out
xor
test
inc
dec
cmp
adc
jle
ror
adc
mov
scas
mov
jnp
jne
dec
push
pusha
and
fnstcw
int
adc
mov
or
rcr
adc
push
add
jns
mov
fs
mov
sub
jmp
and
push
mov
mov
pop
dec
cwde
scas
lods
shr
xor
push
sbb
imul
repz
and
push
ss
push
int3
loop
jbe
add
retf
in
addr16
cmp
int3
sub
lds
test
pop
mov
stos
clc
repz
stos
hlt
fwait
call
xchg
dec
aad
push
sti
bound
in
xor
xchg
xor
inc
sub
sar
clc
and
daa
xchg
clc
jl
repnz
cld
cmp
in
lods
idiv
pop
ret
loope
xlat
cmp
mov
cmp
add
movs
outs
push
xor
(bad)
call
gs
add
aas
sub
jmp
addr16
cmp
add
jb
nop
aad
and
es
retf
push
and
fldcw
movs
jb
dec
xchg
fdivr
sar
pop
les
mov
out
repz
out
push
mov
pop
push
imul
test
cmp
jle
sti
mov
adc
dec
in
dec
stos
int3
in
retf
xor
bsr
rcl
jb
cmps
jmp
xor
pop
mov
sbb
out
mov
mov
out
fcomp
sbb
and
rol
and
int
aad
add
mov
ror
mov
xchg
movs
cmp
test
sbb
js
rcl
mov
pop
jp
mov
out
pop
sub
dec
(bad)
cs
retf
test
cld
fld
sub
sub
daa
pop
mov
dec
sahf
into
xchg
sub
cmc
in
mov
inc
adc
adc
sub
cmp
mov
add
ja
fidiv
lods
and
xor
test
jmp
push
mov
jae
cmpps
push
into
out
iret
test
out
(bad)
out
xchg
lods
stos
mov
stos
ins
jmp
push
call
dec
dec
push
mov
sahf
test
or
loopne
shr
hlt
out
ja
outs
sbb
ret
sti
sbb
mov
ror
jne
sub
cmps
fld
call
xchg
inc
xor
int
ins
retf
mov
dec
retf
xchg
push
in
or
inc
cmp
xor
jae
je
out
cmps
es
pusha
mov
pop
mov
es
mov
retf
xlat
and
movs
mov
mov
sahf
ficom
adc
push
mov
mov
add
mov
push
sti
add
pop
adc
aam
(bad)
dec
ret
ins
xor
neg
(bad)
cmp
inc
ins
push
add
fs
jecxz
lock
cs
ret
ficom
push
lods
loopne
cmps
mov
mov
inc
lods
add
mov
sbb
push
jb
and
out
sbb
iret
int3
ficom
or
out
mov
jno
movs
std
add
scas
pop
add
retf
jbe
lods
stos
xlat
movs
xchg
mov
call
fcom
dec
xchg
sbb
fiadd
add
mov
push
or
(bad)
sbb
movs
mov
dec
pop
xchg
inc
jg
jecxz
sbb
or
stc
xchg
push
mov
push
jg
dec
mov
sahf
lea
sbb
lea
pop
lock
or
pop
mov
out
call
rcr
mov
call
dec
clc
cwde
loope
mov
dec
addr16
inc
lea
push
xchg
inc
pop
lock
ins
aam
mov
cmp
jbe
imul
pushf
jne
sbb
hlt
pop
jne
mov
push
xchg
cmps
push
and
js
ret
sahf
mov
jg
jmp
ss
sahf
sbb
push
or
out
push
test
movs
ins
add
or
dec
lahf
rcr
pushf
daa
jbe
lods
out
xor
xor
fmul
mov
cdq
in
in
mov
mov
adc
in
arpl
jle
cli
inc
imul
or
push
adc
mov
add
ror
dec
ins
nop
scas
fcomp
shl
cmp
dec
les
cmp
sbb
add
inc
out
inc
div
dec
lods
bound
imul
push
pop
inc
push
push
cmp
ins
jmp
cmps
mov
or
(bad)
popf
sbb
int3
cmp
inc
cmp
cmc
sti
int3
arpl
mov
mov
push
movs
(bad)
in
cmps
int
test
xchg
and
retf
jmp
aad
push
out
push
sub
mov
cmps
jecxz
pushf
in
sti
mov
mov
dec
inc
pusha
(bad)
ss
or
mov
or
mov
fsubr
dec
mov
pop
iret
cmps
dec
shl
popf
dec
dec
inc
push
mov
xchg
stc
inc
fistp
daa
pop
loopne
arpl
pop
dec
mov
or
sub
inc
lock
sbb
out
mov
popfw
ds
push
ss
xchg
cwde
or
cld
dec
xor
lock
mov
push
sbb
pop
sub
shr
pop
cmp
dec
and
and
push
test
inc
mov
ret
add
xchg
dec
jmp
or
fstp
mov
imul
jecxz
scas
scas
push
fdivr
aad
dec
pop
cmp
cmp
aam
push
test
add
ror
xchg
jecxz
(bad)
retf
sub
imul
cmps
loopne
je
fisub
mov
or
push
pop
cld
pop
mov
push
cmp
mov
sub
ror
jo
mov
enter
ficomp
inc
cmp
jl
ror
fld
mov
pusha
ror
or
adc
pusha
adc
out
cwde
jne
push
inc
or
mov
mov
mov
mov
jno
add
mov
lock
sbb
lock
or
pop
out
(bad)
xchg
imul
lods
sar
clc
pop
cmc
adc
push
pop
mov
pop
iret
jle
mov
inc
push
pop
retf
adc
xchg
test
clc
call
xchg
rcr
into
in
adc
hlt
xor
imul
jl
cmp
jp
mov
test
push
sar
int
sbb
push
add
jge
add
xor
aas
mov
mov
push
mov
fistp
xchg
test
das
cmp
xchg
nop
imul
daa
cmp
adc
push
jno
je
sbb
inc
fsubr
mov
aad
xchg
xchg
lahf
retf
hlt
scas
addr16
leave
jmp
aad
push
mov
repnz
adc
dec
int
out
and
mov
cld
bound
xlat
and
cs
cdq
xchg
push
data16
inc
retf
ret
cmp
pop
jns
das
jle
jg
push
ds
loope
jbe
sub
mov
popf
add
lods
es
push
push
xor
mov
stos
sbb
cli
inc
repnz
cmps
mov
in
ss
fstp
inc
push
cmp
imul
out
int3
fwait
addr16
enter
jmp
add
retf
pop
push
xlat
pop
dec
xchg
and
daa
dec
xchg
data16
and
ins
xchg
dec
ins
mov
mov
xchg
cmp
adc
pop
adc
mov
dec
aas
push
hlt
mov
dec
cmps
and
dec
iret
outs
lock
inc
(bad)
ror
xchg
xor
popf
loope
inc
(bad)
pop
mov
and
pop
mov
push
jl
mov
sbb
out
aas
je
lods
cs
dec
clc
test
adc
int3
pusha
loopne
xchg
sub
adc
and
popa
stc
les
dec
pusha
shl
cld
sub
retf
adc
or
test
ins
(bad)
in
cmps
jb
or
mov
outs
dec
cdq
stos
js
cmps
aam
cmps
lea
sub
push
aad
xor
add
sub
stos
sub
lock
sbb
cmps
sbb
out
jno
push
xchg
in
dec
loope
mov
inc
push
sahf
(bad)
in
adc
and
cmp
div
mov
xor
inc
or
mov
int
push
pop
gs
mov
pop
sub
not
imul
jno
and
gs
loopne
clc
xor
les
push
adc
jge
aaa
xor
adc
adc
push
mov
(bad)
sbb
out
push
outs
lock
out
les
pop
mov
jge
sti
inc
mov
test
clc
mov
sub
jmp
aaa
dec
pop
sbb
fwait
dec
add
jne
mov
fiadd
push
pop
popf
sub
jno
out
(bad)
and
gs
pusha
shl
mov
adc
push
stc
inc
cmp
retf
xlat
js
add
cwde
add
inc
stc
sbb
or
cmp
test
popa
aad
test
pop
ficom
scas
or
push
cmp
pop
inc
push
jo
fiadd
dec
rcr
inc
push
ror
xor
test
or
mov
or
dec
and
lea
jmp
test
mov
mov
sub
sub
int
std
ja
sbb
mov
lods
dec
push
mov
mov
add
push
jmp
push
out
jb
repz
pop
not
(bad)
cld
lds
mov
pop
jl
into
mov
push
leave
sahf
mov
or
cmp
repnz
or
mov
loope
jbe
pop
xchg
push
jmp
enter
xor
fs
cld
mov
add
or
sbb
sub
or
adc
xlat
fwait
aam
cld
das
jb
retf
loopne
std
arpl
sbb
jae
cmp
cmc
mov
push
aad
jbe
bound
stc
xchg
or
mov
mov
test
mov
lahf
and
sbb
pop
test
jmp
jp
push
movs
cmc
in
iret
mov
and
dec
clc
(bad)
sbb
adc
adc
dec
loope
xor
je
mov
sub
in
sub
(bad)
hlt
jbe
adc
push
aas
or
shr
sub
adc
clc
jnp
ins
(bad)
cmp
(bad)
out
test
call
(bad)
mov
mov
sub
mov
ja
out
icebp
in
xchg
add
push
stos
int3
add
inc
popf
pop
push
icebp
jo
loope
mov
ins
out
ss
popa
jno
mov
push
xor
aad
mov
xor
arpl
movs
mov
jmp
or
shr
mov
mov
sar
mov
(bad)
in
mov
scas
out
push
imul
ficomp
pop
mov
cld
call
hlt
gs
das
fbld
mov
jmp
ss
out
dec
inc
mov
ins
movs
stos
(bad)
xchg
arpl
arpl
cmp
sbb
in
cdq
es
ret
sub
mov
daa
stos
repz
sti
ret
adc
sbb
je
mov
inc
xchg
push
jmp
jecxz
inc
out
movs
cmove
cmp
ret
test
xchg
test
out
mov
jl
cmp
pop
mov
mov
dec
rcl
mov
pop
jae
xchg
jb
push
dec
gs
mov
xor
fidiv
xor
out
xchg
jmp
fstp
xchg
sbb
pop
inc
ins
stos
dec
lods
popf
mov
imul
inc
or
mov
sub
aaa
cmc
jmp
jp
pop
pushf
push
sar
jb
ss
mov
push
stos
les
loope
movs
push
(bad)
adc
fwait
in
fs
push
je
jecxz
sub
lods
rcr
jg
push
mov
cld
test
jg
xchg
dec
aad
aaa
push
arpl
sbb
xchg
rcl
xor
mov
je
and
jae
stos
sub
push
inc
mov
add
jmp
jno
push
push
lea
push
test
xor
sbb
jg
shl
les
jge
aam
ret
and
jmp
stos
sahf
lock
fcmovnu
div
and
push
and
retf
cs
scas
dec
or
int
mov
pop
xchg
push
push
cwde
call
mov
jmp
cmp
pop
jo
mov
lea
cmps
sub
pop
sbb
pop
jbe
outs
sub
out
fisub
into
jne
lods
mov
loopne
ins
push
pop
mov
addr16
xor
push
mov
stos
inc
jl
xlat
mov
mov
sub
ins
fisubr
sbb
jle
(bad)
into
adc
aas
repnz
mov
and
js
mov
mov
nop
test
mov
pushf
sbb
clc
das
push
jo
push
mov
sub
idiv
fwait
out
mov
xchg
xor
adc
fcomp
jmp
cld
ja
daa
mov
sub
jg
(bad)
jmp
mov
xchg
movs
data16
imul
fcom
sahf
movs
loope
pop
adc
jge
fsubr
push
push
inc
(bad)
pop
rcr
enter
jae
xchg
arpl
push
adc
dec
lahf
jl
jnp
dec
xor
(bad)
movs
mov
jl
cmp
loope
inc
test
outs
shl
inc
xchg
movs
cmp
pop
js
xchg
fnstsw
fs
cmp
inc
and
jl
aaa
jmp
push
loop
dec
hlt
(bad)
cdq
mov
ja
dec
ds
fwait
jmp
dec
mov
mov
movs
sbb
ja
mov
das
push
inc
xor
push
jle
cmp
pop
jo
cs
data16
mov
imul
in
xor
shr
xchg
(bad)
adc
les
lods
and
and
shl
pop
mov
popa
(bad)
pop
xor
inc
mov
or
ret
sti
cli
xor
stos
xor
dec
mov
cmp
popa
mov
test
push
add
adc
or
push
inc
imul
mov
inc
xchg
and
outs
test
jbe
mov
inc
lock
and
std
sub
mov
xchg
fisttp
xchg
aam
xor
and
xor
mov
adc
movs
daa
aas
(bad)
out
inc
pop
xchg
popa
cmp
scas
jne
ror
lock
data16
xor
(bad)
fist
dec
lock
neg
fistp
add
mov
int
ins
lods
or
sub
ja
call
dec
push
outs
dec
retf
push
xchg
jmp
(bad)
or
dec
test
mov
pop
test
repz
xchg
pop
xor
push
lock
mov
aaa
cmp
or
(bad)
jae
push
adc
mov
int
sub
xchg
dec
repz
jmpw
dec
es
sub
aad
sub
(bad)
xor
dec
cmp
cwde
gs
hlt
sub
jecxz
test
push
mov
or
loop
lods
dec
and
in
xchg
mov
xor
adc
std
jmp
dec
sub
push
xor
icebp
sub
pushf
add
mov
fdivr
inc
call
ret
fild
add
jge
xor
cmp
push
add
(bad)
dec
out
jecxz
sub
mov
vmovss
std
push
(bad)
sahf
sub
mov
rcl
sahf
repnz
xor
mov
lds
test
in
jnp
in
mov
fwait
sub
or
jle
aam
inc
xchg
xchg
cld
outs
add
cmps
push
pop
movs
dec
fdiv
in
test
dec
ds
fidivr
les
dec
jecxz
mov
xchg
test
cld
cmp
sahf
xlat
div
push
shl
int3
mov
xlat
les
jmp
dec
repnz
sbb
push
jo
retf
jo
jns
xchg
test
push
stos
in
dec
push
stc
data16
mov
add
ds
jnp
xchg
popf
je
cdq
add
xchg
jb
mov
sub
xor
loope
mov
push
imul
ins
sti
ins
addr16
popf
test
(bad)
add
and
mov
retf
stos
cmc
sub
sub
add
push
xchg
pop
clc
call
ror
jae
cwde
rol
loopne
mov
jne
lahf
call
fbstp
jmp
es
repnz
xchg
or
fs
repnz
xor
shl
fmul
scas
push
and
xchg
repnz
dec
push
mov
or
les
push
loop
scas
fst
ficomp
pop
cdq
into
dec
push
jmp
fwait
rcl
hlt
ret
aam
push
in
(bad)
adc
popa
mov
mov
inc
(bad)
cmp
sub
gs
pop
jge
jae
rcr
cmc
es
dec
stc
mov
not
test
push
mov
lds
pop
sub
outs
nop
push
push
dec
fistp
sub
pop
dec
xlat
push
(bad)
aad
mov
pop
sbb
repz
pop
ror
push
push
lds
jecxz
enter
jno
imul
mov
jg
outs
ret
sub
(bad)
fcmovnbe
loop
jecxz
data16
call
mov
outs
faddp
in
jns
out
mul
inc
(bad)
pop
xlat
das
out
dec
test
sbb
or
jmp
cld
and
push
fidiv
mov
mov
or
sub
sub
call
xor
xlat
cs
mov
into
pop
stos
call
jno
call
clc
xchg
jns
aas
mov
outs
sub
stos
pop
outs
es
mov
aam
mov
addr16
pop
xchg
dec
clc
sar
pop
clc
mov
xor
lahf
lods
not
lods
cmps
xor
or
jge
mov
stc
sub
or
ret
push
cmp
aaa
movs
dec
xor
iret
or
ret
clc
(bad)
daa
xor
adc
adc
dec
sbb
dec
ja
sti
mov
shr
nop
push
or
push
dec
js
shl
cmc
sub
stc
sahf
or
lea
dec
icebp
jo
dec
clc
clc
daa
imul
jno
jbe
call
mov
outs
mov
jg
add
(bad)
sahf
test
clc
cmp
inc
ret
jecxz
and
aas
mov
pop
stos
stc
sub
or
in
push
mov
jns
add
cmp
push
sub
bound
and
test
or
into
dec
jecxz
ret
jb
aam
jne
xchg
push
jb
inc
mov
(bad)
and
or
inc
pop
call
(bad)
jnp
test
mov
imul
jge
push
shr
(bad)
ds
sbb
push
mov
cmc
movs
int3
dec
fcomi
push
cmp
jae
sub
es
out
xchg
jno
aam
je
aad
cli
inc
dec
or
mov
mov
(bad)
mov
aad
adc
out
psrlw
mov
in
in
fstp
add
out
xchg
in
in
test
fdivp
sub
and
sub
ds
daa
jecxz
jno
jne
repnz
jg
cld
mov
add
je
xchg
inc
int3
mov
add
xor
pop
inc
mov
(bad)
in
push
repz
inc
ins
std
test
sub
sbb
ror
cmp
pushf
lahf
loopne
sub
cmp
data16
jbe
outs
shl
ins
dec
pop
adc
adc
fwait
and
jo
and
ja
test
cwde
(bad)
push
xor
push
adc
ret
dec
cmp
idiv
pop
jne
imul
xchg
mov
fdivp
sbb
les
shl
int3
pop
enter
cmc
dec
jno
retf
movs
mov
vcvttsd2si
jmp
or
sahf
push
jge
or
stos
xchg
push
dec
js
ins
xor
das
pop
lods
mov
outs
es
adc
rcl
ins
jmp
dec
movs
xchg
push
sahf
ret
fisub
pushf
and
or
call
iret
mov
les
out
inc
push
outs
cmps
gs
dec
retf
(bad)
test
push
cld
aad
push
es
mov
outs
cld
cmps
xor
push
jmp
loopne
pop
loope
push
and
xchg
push
(bad)
sti
inc
mov
fst
not
mov
js
add
shr
dec
push
xchg
imul
jmp
pop
xchg
push
push
jbe
or
mov
mov
pop
(bad)
mov
push
and
mov
fistp
jmp
push
out
jp
xchg
scas
mov
sti
fs
outs
adc
leave
pop
dec
out
mov
out
not
jns
sbb
stc
and
movlps
out
and
pushf
les
dec
push
mov
bound
jo
sub
rcl
sub
cs
ficomp
movs
adc
push
mov
cmp
rol
mov
inc
pop
out
mov
dec
mov
sub
dec
test
dec
push
rol
cmp
sbb
fsub
xchg
xchg
mov
in
dec
jno
mov
cld
call
outs
xlat
outs
hlt
push
sub
sub
xor
push
or
mul
sub
fdiv
or
jbe
ja
in
mov
mov
pop
stc
call
imul
ret
test
(bad)
cmp
popa
mov
cdq
or
xchg
fistp
add
add
or
clc
sahf
in
pop
movs
ins
enter
pminsw
sub
add
mov
jg
push
mov
fs
jecxz
lock
cmp
out
scas
and
mov
js
iret
pop
sbb
out
fldenv
out
stos
dec
jb
pop
iret
nop
repz
dec
in
rcl
pop
gs
xchg
xchg
sub
aas
sub
icebp
jge
fisttp
ss
std
loop
xor
push
mov
and
sar
retf
bound
jmp
cmp
inc
ret
bsf
dec
dec
push
cmps
mov
bound
jp
imul
mov
hlt
rcr
inc
xchg
mov
sbb
sbb
aam
cmp
sbb
push
mov
jmp
xchg
ds
inc
jae
sub
daa
add
fsubr
mov
aad
jle
cmp
les
and
push
ds
mov
add
icebp
add
inc
out
bound
lods
out
cmps
leave
fistp
stc
cwde
xchg
add
pop
and
inc
push
daa
jmp
loopne
jle
cmps
push
sti
dec
pop
pop
push
test
mov
retf
in
pop
daa
std
cwde
(bad)
xchg
fisub
add
jmp
jg
out
fs
mov
sbb
test
cmp
movs
test
cmp
sbb
fdivr
cwde
(bad)
jns
xor
stos
xor
dec
scas
fs
mov
das
push
outs
and
loope
(bad)
fstp
mov
pop
ficom
mov
repz
or
cwde
inc
or
inc
cwde
test
xor
into
scas
mov
mov
xchg
mov
out
xchg
jge
aam
inc
sbb
jb
sbb
out
inc
pop
js
push
jne
enter
loop
(bad)
push
mov
ret
and
sub
ins
add
add
add
loopne
in
jmp
ror
lds
cmp
idiv
sub
cdq
shl
(bad)
daa
inc
shr
int3
repnz
pop
adc
jne
xor
fidivr
mov
xor
or
daa
cmp
mov
cs
test
aas
je
inc
stos
adc
cli
inc
ja
dec
mov
leave
dec
pop
ficomp
pushf
aaa
je
popf
imul
xchg
addr16
sar
jp
or
mov
loope
push
pop
lods
ret
mov
adc
pop
call
retf
add
inc
fbld
pusha
push
outs
jle
add
ror
or
cmp
rcl
inc
fistp
add
xor
or
ret
retf
mov
add
mov
enter
jp
cwde
(bad)
mov
xor
jno
push
pop
adc
nop
jno
dec
dec
pop
dec
pop
stos
movs
ds
ss
retf
dec
rcl
cdq
sub
jno
pop
adc
sbb
(bad)
mov
mov
cmp
stc
fnstsw
push
pop
les
cmp
xor
stos
aam
push
push
push
fs
aas
sbb
loop
arpl
int
dec
test
jo
cmp
lea
inc
(bad)
xchg
dec
je
mov
sub
fcomp
rep
sub
dec
repz
fdivr
mov
(bad)
out
jecxz
outs
mov
mov
xlat
and
fidivr
mov
cmp
push
inc
and
jb
sub
jmp
mov
mov
aam
test
jnp
push
ss
repz
out
inc
xor
add
cmc
add
imul
in
or
xchg
jne
xchg
icebp
mov
dec
cmp
and
jns
push
clc
xchg
push
test
ins
(bad)
in
inc
bound
dec
lea
xchg
fidiv
xchg
xor
mul
add
push
pop
pop
sub
ds
cmp
mov
add
out
aam
imul
ror
ja
int3
adc
xor
js
fdivrp
ret
imul
xlat
lods
inc
inc
cmp
sbb
test
adc
icebp
or
mov
dec
nop
push
test
cmps
cmp
inc
cmps
ss
jecxz
loopne
int3
aas
cmp
dec
fsubr
inc
cmp
ret
xlat
arpl
sub
test
sti
inc
xor
rol
mov
(bad)
mov
std
mov
or
(bad)
mov
mov
cmp
loop
addr16
mov
dec
push
es
xor
mov
jne
std
movs
and
lods
jl
mov
dec
inc
gs
jne
mov
(bad)
rol
mov
loop
xchg
addr16
fld
scas
pop
xor
movs
pop
mov
in
push
(bad)
mov
sbb
popf
retf
rcr
mov
jb
ins
sar
dec
cmps
imul
(bad)
imul
cmp
add
scas
lahf
stc
cmp
dec
gs
cmp
cmc
jnp
xchg
push
and
fbstp
dec
dec
jg
les
add
xchg
cli
ret
cs
mov
loopne
cmp
mov
fwait
movs
shl
sub
pop
je
hlt
in
push
jg
sub
jb
pop
mov
imul
inc
lods
mov
push
cmp
sbb
scas
pop
enter
lahf
inc
arpl
in
jns
xor
mov
lods
aad
or
iret
xchg
dec
and
shl
(bad)
dec
nop
aas
in
popa
gs
mov
jb
outs
test
test
xchg
movs
xor
xchg
push
and
or
add
dec
jg
sbb
leave
push
adc
mov
cmp
or
jne
xor
xor
or
jnp
retf
add
xor
cmps
test
loopne
dec
nop
xchg
xor
sbb
int
jle
call
ficom
mov
xor
out
sub
pusha
rol
iret
aam
iret
mov
fisub
inc
ja
xor
out
pop
mov
mov
push
mov
shl
xchg
(bad)
retf
adc
(bad)
stos
nop
loope
or
es
test
in
adc
ret
push
pushf
les
jne
push
out
jmp
cs
retf
mov
xor
dec
cld
mov
pop
ja
push
mov
shl
ins
imul
mov
call
repz
jl
cmp
retf
push
inc
cmp
hlt
pop
mov
movs
jmp
or
shr
out
int3
fisttp
adc
jecxz
sub
mov
into
mov
sub
inc
mov
push
inc
xchg
cs
adc
fisttp
push
fwait
in
jle
xor
inc
push
ss
push
lods
dec
(bad)
sar
lods
pop
jnp
clc
outs
bound
pop
movs
cdq
jp
push
sub
(bad)
imul
shld
lods
xchg
or
pop
mov
pop
mov
nop
lods
jmp
aam
ins
dec
rcr
pop
push
and
imul
test
mov
cmps
ror
outs
and
push
dec
add
mov
scas
xor
inc
ins
jp
dec
pop
adc
dec
test
out
jl
sub
daa
push
xor
lock
(bad)
xor
add
push
imul
mov
movs
mov
push
lock
out
xchg
jmp
cmp
push
stos
dec
mov
daa
mov
mov
daa
in
cmp
test
bnd
repz
aam
sbb
sub
test
jp
(bad)
xchg
repnz
in
add
xchg
movs
lds
sub
fsub
cmps
das
and
sar
fs
leave
dec
out
mov
or
scas
(bad)
adc
jne
jl
sub
jmp
std
sbb
daa
repnz
out
aaa
mov
push
inc
cmp
jge
push
xchg
dec
sbb
or
xchg
ins
lahf
in
leave
int3
jbe
outs
cmp
retf
ret
test
inc
(bad)
es
push
lahf
mov
jmp
jmp
fdivp
pop
(bad)
mov
mov
into
mov
daa
js
mov
in
outs
test
mov
shl
ficom
dec
test
into
fcom
jne
bnd
pop
add
not
or
cdq
int
mov
mov
push
not
jo
dec
cmp
test
ret
aam
pop
xchg
cmp
pop
push
sti
inc
test
cmps
outs
pop
cmps
rcl
dec
scas
mov
push
jecxz
(bad)
(bad)
std
mov
stos
dec
pop
xchg
aam
or
push
loopne
mov
cmps
shl
sub
cmp
test
clc
jp
mov
pop
mov
mov
mov
pop
jno
dec
push
mov
pop
xchg
mov
je
mov
jmp
cmps
mov
inc
sbb
dec
inc
push
fimul
or
ins
scas
push
fwait
arpl
inc
sub
mov
shl
fstp
cwde
scas
(bad)
movs
ds
xchg
mov
fidivr
pop
mov
shr
dec
xchg
lods
(bad)
pusha
(bad)
ins
mov
rcl
xor
pop
xchg
iret
mov
mov
sub
pop
out
fst
xor
pop
stos
ds
aas
out
xlat
mov
aas
inc
mov
xlat
push
scas
shr
movs
push
addr16
rol
popf
jnp
(bad)
retf
ror
clc
dec
xchg
je
retf
or
pop
xchg
pop
dec
inc
xor
dec
fidivr
cmp
imul
push
and
dec
js
call
xchg
int
ret
push
mov
sahf
mov
adc
push
test
xchg
pop
sbb
push
lods
sub
fiadd
imul
clc
mov
movs
test
push
xchg
mov
cmc
(bad)
fcom
jne
fwait
push
push
int
fldenv
and
test
inc
cmp
loope
jb
test
shr
sbb
popf
inc
xchg
lods
loop
nop
(bad)
dec
jge
push
loope
cmp
pop
ret
movs
imul
out
repnz
mov
inc
xchg
ins
pop
or
pop
fwait
dec
rcl
xchg
mov
lods
dec
push
iret
scas
ret
lea
jb
sbb
sub
enter
icebp
cmp
sbb
iret
pop
xchg
out
stos
xchg
ficom
jb
outs
fisub
xlat
inc
push
ja
out
neg
cmp
ret
jp
jns
xor
push
jg
xor
ins
ds
push
fistp
movs
retf
and
scas
dec
mov
out
mov
out
push
cli
inc
push
daa
pop
dec
inc
push
jae
ja
sbb
mov
(bad)
cmps
aam
retf
xlat
pop
sbb
cmp
lock
cmc
sub
mov
sti
mov
xchg
mov
push
adc
loope
sub
add
aas
dec
mov
ret
lods
sbb
(bad)
jae
arpl
gs
pop
pop
xchg
and
retf
pop
call
sbb
xchg
stos
jge
lea
adc
sub
dec
mov
sub
in
test
fldcw
jmp
rol
xlat
xchg
adc
test
dec
jmp
xchg
fwait
test
lahf
push
add
jb
dec
push
mov
adc
xor
daa
shr
xor
je
addr16
and
mov
scas
je
pop
ror
xchg
cmps
push
push
je
push
cmp
jp
test
dec
mov
ja
push
jg
xchg
pop
jl
fldz
movlps
stos
push
mov
std
je
mov
or
out
xor
lock
push
call
sbb
push
jp
cld
xchg
arpl
ins
outs
movs
mov
and
xor
adc
mov
xchg
xchg
cmp
cld
dec
and
mov
(bad)
pop
add
mov
pop
dec
stos
xchg
out
repz
ins
jmp
(bad)
mov
xor
sub
push
push
jecxz
adc
repz
push
jle
(bad)
adc
popa
cmps
push
dec
mov
aad
mov
ds
lods
scas
cmp
jns
or
pop
ins
pushf
xchg
xchg
fild
pop
add
test
js
movs
adc
push
icebp
rcr
cdq
cmc
mov
std
popf
stos
sub
dec
adc
fwait
mov
push
dec
sar
sbb
inc
inc
pop
shl
lock
sub
fimul
fisub
mov
daa
mov
fwait
pushf
bound
(bad)
dec
mov
outs
retf
sti
dec
mov
add
sbb
and
fdivrp
pop
sub
lods
scas
cli
pushf
or
dec
jbe
push
lea
lahf
cwde
xchg
jbe
cmps
enter
sar
stos
xchg
int3
dec
pop
sub
popf
pop
mov
imul
jle
inc
clc
call
xchg
frstor
movs
hlt
shl
cmp
fisttp
mov
jle
sub
cmc
and
ins
in
lds
repnz
daa
sub
xchg
jns
pop
push
arpl
dec
sbb
outs
push
mov
mov
js
fucom
xor
push
dec
mov
pushf
ret
xchg
sbb
push
jno
mov
pushf
and
daa
mov
mov
loopne
dec
fcom
xchg
call
leave
dec
push
and
shr
xchg
xchg
cmp
stc
jbe
cmp
stos
aad
jge
div
xchg
ins
jmp
mov
shl
dec
and
pop
dec
jnp
test
add
ss
ret
or
hlt
retf
dec
and
fs
nop
and
add
push
and
ja
cmc
std
sub
(bad)
jl
sti
lds
dec
mov
pop
je
call
pop
sbb
scas
or
scas
push
inc
cdq
push
cs
cwde
jle
xor
dec
adc
jmp
(bad)
pop
cdq
popa
pop
das
sub
xchg
jg
jle
enter
ret
and
lods
pop
sub
ficomp
div
call
daa
and
jno
in
shr
leavew
ds
jp
data16
inc
mov
mov
addr16
lea
(bad)
cmp
pop
mov
mov
or
adc
add
push
mov
repz
jp
test
mov
into
loopne
cld
loopne
cmp
ret
fs
xchg
adc
xor
lods
sti
call
cli
mov
pop
fld
cmp
xchg
inc
cmp
add
push
jne
out
or
stos
nop
lahf
mov
and
ficom
cmc
mov
in
xor
add
add
push
mov
movs
out
shl
aad
xchg
gs
leave
dec
ins
mov
test
add
and
cmp
mov
or
adc
mov
adc
out
jbe
mov
je
sub
jmp
and
sbb
out
jae
xchg
into
stos
jle
outs
loopne
jg
xchg
fwait
cmp
and
ss
repnz
xchg
inc
idiv
fxch
xchg
xchg
test
cmp
cmp
int
push
leave
jle
iret
jnp
out
xor
push
loop
push
jb
mov
pop
std
arpl
fcmovnu
push
dec
mov
jo
dec
mov
fdiv
fs
shl
pop
fwait
and
xor
add
rcl
push
call
stos
mov
fisttp
jae
retf
fimul
and
imul
jnp
push
dec
cli
mov
mov
adc
pop
mov
xchg
sub
xchg
xchg
cdq
dec
inc
ret
mov
sbb
out
and
jmp
sub
push
sub
fnstsw
std
mov
test
addr16
cmp
pop
aaa
imul
xchg
ins
(bad)
ja
leave
cmc
es
mov
scas
inc
xor
neg
sbb
xchg
mov
lods
adc
push
xor
cmp
imul
(bad)
mul
call
gs
mov
xor
addr16
mov
(bad)
push
mov
sbb
pushf
jecxz
push
xchg
mov
mov
jmp
cmp
mov
idiv
inc
mov
shr
aam
int3
sbb
and
xchg
(bad)
jmp
jmp
mov
lods
call
mov
sub
lea
push
mov
ficomp
push
out
icebp
or
jns
sahf
push
jmp
outs
popf
dec
jmp
inc
mov
outs
movs
shl
mov
mov
cld
dec
mov
sub
pop
out
test
xchg
(bad)
jle
or
dec
(bad)
pop
push
test
(bad)
adc
jmp
and
push
clc
(bad)
jno
inc
imul
int
popa
test
jecxz
push
fmul
cmp
ret
clc
cmc
out
push
jg
scas
loop
sahf
or
xchg
aad
int3
pop
xlat
mov
cmp
cli
and
jmp
jae
sbb
push
mov
mov
jecxz
dec
ror
mov
or
mov
lahf
cli
or
rcl
mov
mov
jns
and
jmp
ss
cmc
dec
sub
int
ins
popf
(bad)
push
sahf
adc
je
bound
jmp
out
xlat
js
movs
cmp
movs
pop
dec
inc
add
dec
sub
mov
fcmovnu
xor
cmp
outs
gs
add
add
pusha
xchg
loope
sbb
pusha
xlat
jae
push
addr16
into
push
lods
cmp
imul
into
xchg
aas
jne
stos
pushw
mov
bound
xor
leave
jae
ret
cmps
xlat
retf
pop
xor
or
push
mov
ins
les
out
daa
push
push
pushf
mov
ds
add
jge
test
xlat
lods
dec
dec
sub
popf
stc
sbb
ret
fbstp
mov
lock
mul
popa
call
jl
das
mov
pushf
lds
mov
(bad)
shl
ror
ins
in
pop
mov
xor
jmp
mov
push
test
mov
retf
outs
cmp
mov
jnp
pop
es
jmp
sbb
dec
mov
push
dec
jb
test
adc
lods
test
push
mov
clc
ret
ror
mov
es
xor
jmp
push
mov
fcmovbe
cmp
dec
cmp
in
rol
mov
pop
in
leave
mov
(bad)
jo
or
push
xchg
cmp
div
dec
fisub
cmps
lahf
ins
mov
cdq
test
mov
sti
adc
hlt
push
(bad)
cmc
adc
ss
cdq
int3
movs
sahf
and
dec
loopne
neg
gs
rcr
mov
mov
daa
or
rol
add
sbb
or
pop
jo
call
ds
pop
addr16
(bad)
push
jo
add
sbb
jo
lea
cdq
pop
out
inc
mov
jmp
iret
in
mov
mov
inc
fnsave
pusha
sub
cmp
adc
or
mov
popf
cmps
mov
sbb
sbb
inc
adc
adc
or
lds
mov
fistp
mov
mov
jp
cmp
rcl
lods
mov
pop
imul
add
fld
pop
cli
inc
aam
mov
stos
leave
popa
and
fucomp
icebp
fcom
adc
inc
stos
pop
ss
xchg
xchg
rcr
shl
xchg
push
sbb
add
or
cmp
std
or
lods
out
jb
pop
clc
into
push
jnp
dec
das
aaa
ret
pop
repnz
cli
in
fidivr
push
test
je
les
clc
dec
in
call
pop
js
lds
mov
jmp
jge
cld
or
iret
jge
mov
fdiv
push
loop
stc
out
add
les
push
loop
loop
fdivr
mov
and
fmul
xor
sub
cld
jge
pusha
push
imul
sbb
push
or
xchg
cmp
inc
sbb
les
lock
jmp
in
fs
adc
ret
sub
jp
pop
xchg
mov
adc
cli
sahf
in
mov
lock
dec
sub
clc
jns
mov
call
ds
mov
imul
ins
mov
jns
or
les
xor
dec
dec
inc
add
bound
popa
xchg
cld
and
clc
mov
add
(bad)
pop
jae
inc
pop
out
fidivr
sar
xchg
jge
xchg
cmp
scas
dec
mov
or
cmps
adc
test
fsubr
inc
adc
pushw
jo
or
fidiv
jp
pop
or
xor
movs
lea
addr16
jecxz
ss
sub
in
fcomp
pop
push
mov
jbe
dec
leave
std
add
mov
in
xchg
fstp
xlat
xchg
dec
shl
adc
adc
shl
popa
add
add
inc
inc
ss
mov
push
cmp
stos
jmp
xor
mov
xlat
jb
pop
lods
mov
pop
cmps
loop
push
inc
and
into
cmp
shr
jbe
push
xchg
in
fstp
sti
aas
dec
out
pop
dec
mov
movs
(bad)
frstor
jb
pop
out
clc
xchg
sub
cdq
adc
cmp
adc
xchg
fst
aad
jmp
jmp
mov
or
xchg
adc
pop
retf
and
sub
gs
lea
fistp
dec
(bad)
xlat
push
arpl
xor
or
(bad)
xor
je
sbb
es
out
lahf
pop
ins
and
sbb
js
dec
xchg
cdq
fcom
add
inc
fistp
inc
mov
pop
dec
iret
mov
push
mov
mov
and
xchg
cmp
mov
cwde
out
or
in
(bad)
int3
push
fs
data16
jns
push
fldenv
sbb
(bad)
dec
mov
ins
add
and
push
loopne
xor
mov
cmps
jl
int3
cs
sbb
inc
test
push
lods
xor
jo
inc
jmp
or
(bad)
call
mov
jl
or
test
or
jmp
test
fidiv
in
xor
or
ins
sar
cdq
xchg
mov
cmp
ficomp
scas
test
mov
ror
mov
mov
sahf
dec
adc
xchg
push
jmp
dec
mov
aaa
or
cmp
test
(bad)
in
mov
ds
adc
sub
jne
popa
pop
aam
pop
in
into
pop
cmc
xchg
ret
pop
sub
xchg
sub
and
and
scas
mov
fdivr
jb
popf
retf
xchg
push
sub
mov
mov
xlat
(bad)
jle
dec
pop
movs
movs
mov
movs
jmp
stos
jne
into
xchg
mov
jne
cmps
imul
sahf
je
mov
jmp
outs
push
push
movs
outs
add
dec
fxch
push
(bad)
jmp
push
(bad)
in
je
and
mov
cld
jge
fld
sub
(bad)
(bad)
dec
inc
or
aam
(bad)
xchg
mov
push
pushw
aaa
jmp
mov
inc
test
cmp
(bad)
out
xchg
jp
fdiv
in
push
shl
sahf
sbb
xor
into
mov
xchg
and
rcr
test
int
out
jnp
jnp
cmc
and
repz
mov
mov
xlat
jmp
lea
or
in
fs
cdq
cmc
push
dec
pop
sub
push
arpl
add
pop
adc
xchg
repz
push
jg
pop
movs
sbb
dec
aas
cld
mov
inc
xor
sbb
jns
jge
pop
push
jg
push
inc
jmp
mov
jp
test
mov
je
inc
fimul
lock
stos
add
call
mov
xor
test
xor
sti
mov
jg
in
dec
mov
fld
xchg
sbb
das
lock
test
cld
int
out
or
xchg
add
mov
inc
cdq
mov
rcr
adc
fs
cmps
or
int
(bad)
call
nop
(bad)
mov
rol
mov
pop
clc
ret
aas
hlt
and
fs
inc
imul
cmps
imul
inc
fcomip
inc
movs
pop
jns
rol
es
aaa
or
inc
mov
sbb
or
jg
fwait
(bad)
call
dec
adc
popf
xlat
stc
inc
xlat
cld
int
fld
xchg
dec
mov
jmp
xor
inc
fld
jns
adc
xlat
jo
inc
xor
mov
push
dec
std
mov
mov
call
sbb
inc
test
add
(bad)
fstp
out
pop
ins
cmp
sub
lods
retf
or
dec
push
das
mov
inc
dec
push
leave
push
and
lahf
out
adc
retf
mov
sub
pop
push
mov
repnz
adc
push
xlat
jne
push
push
dec
stos
push
in
jge
xor
call
sbb
and
sbb
movs
fidiv
fdiv
jmp
lahf
sbb
ss
rcl
push
call
jno
movs
mov
mov
dec
cmps
push
and
mov
dec
xchg
ins
add
and
or
(bad)
out
stos
and
jp
mov
cli
fs
inc
mov
inc
(bad)
xor
sbb
add
and
add
aas
push
or
mov
std
shr
ja
jl
sbb
jmp
add
outs
sti
mov
push
pop
cld
arpl
test
xchg
test
inc
cmp
push
mov
add
xchg
les
xchg
jg
dec
inc
je
fadd
test
push
mov
addr16
fs
inc
mov
mov
je
(bad)
fstp
inc
cdq
aaa
std
shr
jge
scas
mov
add
and
push
fst
ffree
mov
mov
mov
inc
inc
ffree
lahf
movs
push
icebp
sbb
and
mov
add
outs
sti
mov
sub
out
adc
btc
mov
cdq
aaa
std
shl
shld
jmp
test
inc
xchg
mov
arpl
daa
inc
inc
xchg
push
in
fwait
xchg
lods
(bad)
jmp
lahf
mov
sub
in
pop
pop
xor
and
ret
dec
fisub
nop
(bad)
lea
daa
xchg
inc
in
arpl
shl
les
cwde
xchg
sub
push
push
lods
sahf
and
pop
and
cmc
inc
outs
sti
mov
xchg
pop
les
in
das
jp
mov
retf
retf
pushf
sti
movs
add
popf
sub
adc
sti
xchg
aam
inc
mov
in
movs
push
inc
xor
mov
xchg
pop
into
mov
leave
sbb
push
jno
movs
leave
nop
sahf
and
sbb
(bad)
repnz
inc
mov
shr
test
jae
aad
pop
dec
and
push
adc
idiv
sub
rcl
fisub
dec
fcmovne
lods
aad
outs
iret
xchg
test
fld
and
jno
imul
mov
sub
aam
or
sub
sub
movs
retf
(bad)
and
mov
bound
fist
jp
lea
add
push
mov
sbb
jne
inc
jae
mov
addr16
call
mov
pop
mov
popaw
dec
mov
xchg
retf
in
into
out
and
mov
xor
xchg
and
loop
shr
lods
cmp
xchg
ins
sar
inc
ffree
shl
das
lods
dec
fidivr
cmps
push
jp
or
popf
out
bound
mov
inc
stos
pop
mov
inc
sub
sti
mov
hlt
fmul
or
std
stos
mov
icebp
jl
jp
daa
sti
mov
hlt
in
pop
cli
les
aas
retf
jns
(bad)
mov
aas
fst
fcom
sbb
xchg
in
test
(bad)
push
aaa
mov
pop
fld
mov
cmp
mov
outs
sub
pushf
imul
movs
mov
adc
mov
inc
cmp
and
mov
popa
cmps
push
mov
or
inc
add
loop
adc
dec
retf
sahf
imul
shr
jb
ins
leave
pop
cld
pop
mov
div
repnz
inc
xlat
lods
dec
mov
pop
xchg
push
xor
test
fmul
adc
xchg
or
mov
xor
mov
pop
push
mov
int3
fst
xor
xchg
ins
inc
fs
sar
pop
mov
jecxz
cmp
push
mov
add
add
hlt
pop
sub
cmp
jno
mov
xchg
bound
cmps
xchg
aas
push
mov
mov
xchg
push
stos
jo
and
movs
and
push
xor
mov
add
daa
sti
mov
mov
arpl
leave
je
fisubr
cwde
pop
jmp
pop
push
sub
stos
test
test
add
pop
sub
dec
cmps
jnp
das
imul
retf
test
out
push
add
pop
dec
in
or
dec
or
xor
mov
jecxz
mov
lea
pop
(bad)
xchg
int3
lds
sbb
or
push
popf
and
dec
pushf
cmp
loop
cli
repnz
lods
xchg
sub
dec
and
out
pop
mov
xor
fadd
or
popa
aas
fld
cmps
push
lods
lds
icebp
ja
movs
xchg
aam
sahf
inc
popa
outs
retf
dec
loope
xchg
jbe
dec
sub
stc
aam
cmp
adc
es
and
xchg
sbb
and
mov
retf
sub
in
xchg
jns
pop
sahf
ins
aaa
ss
pusha
pop
push
adc
mov
cli
loop
push
cmps
es
pop
add
and
lahf
lahf
inc
call
popa
stos
stos
stc
movs
(bad)
(bad)
dec
and
in
(bad)
addr16
sbb
test
sahf
call
test
push
out
mov
jnp
dec
dec
dec
jg
iret
push
add
out
or
sbb
add
jg
cmc
imul
(bad)
dec
lock
sbb
repnz
arpl
pop
shr
mov
pop
push
scas
out
out
sti
int3
mov
ins
add
out
inc
pop
ins
in
inc
inc
xor
ins
in
ret
test
cmps
aas
xchg
sbb
jae
mov
inc
std
fmul
pop
stc
xor
and
xchg
pop
je
fmul
test
cmc
jne
mov
mov
and
gs
sub
xchg
xor
stc
mov
dec
mul
xchg
dec
icebp
(bad)
jmp
add
(bad)
mov
in
jnp
jo
adc
ror
enter
les
mov
sub
mov
ins
cdq
jbe
mov
jns
out
cwde
sub
or
clc
mov
dec
jmp
not
dec
std
pop
out
loop
cmp
imul
fidivr
push
cmps
hlt
cli
out
push
leave
das
inc
cmp
out
xor
mov
jl
jmp
or
ror
mov
hlt
jae
xchg
jae
push
adc
or
sub
dec
cmp
fwait
ds
inc
into
leave
jbe
mov
(bad)
movs
mov
and
dec
outs
call
xchg
icebp
imul
jmp
out
(bad)
mov
je
sbb
je
xchg
jo
adc
sbb
fist
mov
cwde
push
jecxz
out
(bad)
popf
cmp
mov
aam
dec
jg
sbb
mov
stos
das
dec
lds
mov
mov
loop
movs
mov
movs
movs
inc
loop
xchg
in
mov
je
ficom
add
repz
gs
dec
pop
jge
xor
(bad)
sub
in
jle
clc
in
cmp
push
repz
and
xlat
in
inc
js
jns
xor
xor
mov
out
push
and
sbb
adc
lods
jo
sbb
add
es
imul
adc
xor
mov
push
push
mov
or
imul
or
inc
test
push
xchg
mov
mov
fdivr
stos
sbb
inc
and
xchg
jecxz
in
(bad)
xor
hlt
out
movs
imul
push
push
rcr
inc
imul
out
xchg
(bad)
in
(bad)
dec
pop
dec
mov
out
shl
mov
fisubr
rol
popa
xor
mov
lds
out
push
leave
jns
ja
xor
mov
or
jmp
jns
call
test
xchg
add
test
sbb
or
jge
push
cmp
jl
ja
ds
cs
pop
scas
into
sahf
aaa
xor
jbe
dec
sub
xchg
fist
cmc
int
mov
gs
adc
jge
dec
xlat
pop
dec
sub
mov
sahf
icebp
stos
pop
xchg
dec
push
pop
ds
sbb
fwait
xor
fstp
push
xchg
aad
sar
ss
xor
out
and
arpl
jp
out
outs
pop
dec
mov
stos
push
es
jb
mov
shl
inc
and
mov
xor
mov
dec
mov
(bad)
mov
in
(bad)
ficom
xchg
dec
dec
fstp
repz
ficomp
jae
(bad)
out
mov
sub
push
adc
add
mov
in
ficom
lock
ins
hlt
xchg
jg
cmp
mov
ins
pop
push
sbb
push
movs
aam
add
lock
test
xor
out
(bad)
ds
jmp
ret
div
hlt
ins
outs
jne
jl
bound
xor
outs
movs
scas
pop
mov
pop
(bad)
imul
ffreep
(bad)
fcomip
scas
imul
inc
jnp
xchg
nop
in
ins
setnp
imul
mov
es
xchg
daa
rcl
fdivr
add
xchg
ss
fnsave
stos
mov
imul
pop
jb
(bad)
outs
fisttp
add
mov
hlt
mov
push
cli
bound
sbb
lods
inc
pop
jnp
ja
xor
or
inc
ins
jae
stc
mov
clc
mov
out
mov
jl
inc
pop
push
mov
movs
sub
push
pusha
xor
add
retf
jo
sub
lds
into
cmp
xchg
or
mov
pop
hlt
stos
pop
xor
mov
out
add
mov
lds
and
push
xchg
or
mov
inc
adc
mov
mov
pop
sahf
sbb
iret
(bad)
sbb
lods
int
(bad)
jg
sbb
test
stc
popf
xchg
fsub
inc
(bad)
stc
and
aad
jp
sub
retf
mov
daa
mov
scas
sub
popa
sub
cmc
and
lea
push
(bad)
aaa
(bad)
out
pop
hlt
fistp
das
sbb
daa
xlat
or
push
jge
cld
mov
pop
sti
inc
inc
sub
test
in
aam
(bad)
xlat
ret
push
les
dec
or
fwait
mov
ret
sbb
push
in
ss
es
xor
jl
jecxz
pop
shl
dec
mov
pushf
sti
int
fmul
ins
cmp
stc
ja
(bad)
pop
push
in
inc
call
fst
int3
push
push
pushf
sub
shl
mov
cli
pop
cld
int3
stc
jl
imul
iret
jns
adc
inc
je
cli
push
sbb
test
cld
shr
jecxz
pop
(bad)
xchg
icebp
xchg
pop
retf
test
pop
mov
lds
pop
in
xchg
jecxz
pop
retf
into
pop
ins
rcl
pop
(bad)
call
aad
(bad)
sti
inc
xor
stc
and
(bad)
push
mov
lods
arpl
jnp
jae
fisttp
bound
out
inc
scas
jno
scas
popa
mov
cmp
sub
test
(bad)
int3
push
ja
aas
scas
repnz
sahf
lahf
push
jb
leave
in
sbb
out
movs
test
mov
les
jecxz
pop
scas
push
sub
shl
int
and
push
pop
js
test
or
mov
fidiv
cmp
cs
cli
sbb
xchg
imul
imul
es
repnz
lahf
data16
arpl
jecxz
sub
int3
push
push
lea
mov
inc
pushf
xor
xchg
sar
jl
es
retf
call
out
imul
add
add
adc
push
in
mov
pop
mov
and
cmps
mov
push
fbld
retf
jns
mov
stos
sbb
cld
mov
pusha
aas
sub
jp
pop
in
mov
cld
push
adc
xor
xchg
xor
js
xlat
daa
in
loop
mov
aas
mov
push
shr
mov
jle
(bad)
leave
outs
das
xchg
push
popf
lds
mov
dec
mov
sub
inc
out
idiv
stc
inc
inc
xor
inc
mov
(bad)
ss
jae
cmc
inc
jae
(bad)
call
pop
mul
lods
jmp
(bad)
cdq
lahf
gs
jmp
mov
cmp
push
jns
mov
mov
sbb
jb
jo
ins
loopne
loope
jnp
dec
xor
sub
xor
or
add
and
jae
sub
lods
sub
mov
jne
inc
not
jle
lds
retf
inc
xor
mov
mov
mov
test
jmp
mov
ds
xor
mov
mov
jno
jb
push
xchg
fs
xchg
(bad)
sub
inc
pushf
sub
xchg
sub
(bad)
mov
(bad)
(bad)
mov
(bad)
call
sbb
add
jle
leave
adc
fisub
cmc
call
sub
cdq
leave
gs
cmp
dec
and
push
imul
nop
jno
fyl2xp1
and
sub
in
outs
push
xchg
sub
in
mov
pop
cwde
and
ja
ror
or
daa
cmp
pop
cdq
jns
lods
ins
aam
cmp
mov
dec
dec
shl
div
out
jecxz
(bad)
std
push
clc
push
adc
mov
mov
inc
mov
dec
fsubrp
arpl
add
jg
push
hlt
jp
mov
mov
sub
pop
push
lods
fist
loop
xor
lods
shl
adc
adc
mov
dec
xchg
and
xchg
inc
ins
data16
jmp
sub
and
test
dec
ds
and
stos
inc
ja
mov
(bad)
push
sbb
push
add
call
or
aas
and
clc
fsubr
jnp
(bad)
std
addr16
xchg
cmp
js
xchg
imul
jmp
je
ret
shl
pmaxub
mov
adc
mov
dec
retf
cs
xor
fwait
imul
ret
jl
xchg
sahf
clc
mov
inc
pushf
sbb
les
(bad)
in
fwait
lods
mov
push
popa
test
jmp
adc
and
les
pop
and
addr16
pop
adc
cli
scas
test
xchg
mov
sbb
gs
dec
iret
sub
arpl
mov
fucomp
mov
cmp
stos
call
pop
cmp
in
test
pop
in
inc
pushf
lahf
cli
xor
push
outs
add
sub
imul
inc
jg
push
mov
mov
les
lds
call
repz
call
add
nop
(bad)
mov
into
not
cli
iret
imul
lea
lahf
cmps
loop
inc
(bad)
ss
retf
mov
scas
out
and
pop
imul
loop
pop
push
scas
std
or
(bad)
add
jg
aaa
shr
js
hlt
fadd
fbld
xchg
lds
pop
iret
(bad)
sahf
xlat
test
fadd
stc
pop
(bad)
xor
xchg
ins
je
std
iret
imul
cmp
inc
mov
std
mov
mov
cwde
xor
das
add
inc
mov
jecxz
lods
pop
sti
mov
inc
xor
mov
hlt
stos
(bad)
and
push
sub
jne
sub
ins
sub
pop
pop
push
xchg
add
mov
cmp
imul
mov
mov
mov
pop
cwde
cs
or
mov
test
rol
div
(bad)
out
jmp
(bad)
adc
ins
mov
or
pop
push
(bad)
(bad)
push
push
dec
xor
xor
jmp
bound
cmp
mov
cmp
ins
mov
mov
std
sub
imul
add
imul
out
sub
in
mov
(bad)
stc
sbb
jno
rcr
sub
cmc
mov
xor
mov
aam
mov
movs
mov
fist
push
jmp
xchg
mov
push
inc
(bad)
les
sub
push
push
fwait
xor
dec
loop
jb
cmps
fadd
es
mov
cmps
mov
push
cld
arpl
jbe
shr
push
call
fisubr
xchg
sub
pop
jns
leave
mov
push
lods
mov
lea
push
dec
adc
mov
xor
mov
mov
pop
stos
xchg
jmp
xchg
jmp
ins
or
mov
pop
arpl
xchg
loop
push
sub
shr
dec
mov
cdq
ins
adc
add
rol
xor
lods
inc
push
lods
cwde
cs
dec
lods
test
int3
iret
iret
fcomp
call
push
mov
sub
popf
lahf
stc
mov
adc
inc
test
inc
lods
mov
fs
inc
fld
push
icebp
or
adc
cmps
or
adc
xchg
push
cld
xchg
xor
ror
data16
sub
cmps
adc
dec
stos
loop
cmp
fisttp
and
fcomip
inc
ffree
lahf
movs
push
icebp
paddb
xchg
scas
out
mov
jecxz
pop
dec
lods
aad
jno
lods
inc
lods
int3
iret
cld
sar
inc
shr
clc
mov
(bad)
adc
pop
inc
cwde
mov
shl
lock
mov
push
push
mov
out
(bad)
(bad)
fcomip
inc
ja
pop
mov
jmp
stos
popa
sar
imul
hlt
adc
adc
(bad)
test
xchg
adc
and
dec
push
adc
pop
lods
add
and
es
add
jo
retf
mov
stc
sbb
push
mov
inc
dec
pop
(bad)
call
aam
add
jmp
mov
cmc
add
mov
mov
scas
xor
push
out
and
and
aad
mov
xor
jmp
fcomip
inc
ja
and
(bad)
xor
mov
(bad)
(bad)
fcomip
inc
ja
push
(bad)
scas
mov
clc
(bad)
aad
loopne
mov
int
out
mov
loop
jg
cld
mov
jg
pop
inc
cdq
aaa
std
shl
and
test
jmp
xchg
jbe
pop
mov
jbe
xor
xor
gs
enter
sub
xor
jmp
(bad)
sbb
ret
push
mov
test
call
and
enter
and
or
ins
mov
lds
inc
adc
cld
arpl
cmps
repnz
scas
stc
xchg
jg
adc
adc
push
aad
jmp
out
inc
inc
js
cs
jmp
xchg
dec
add
sbb
push
lods
push
jmp
ss
sar
mov
imul
adc
mov
mov
into
or
sbb
push
mov
xor
outs
lods
pop
(bad)
pop
cdq
jmp
inc
je
mov
clc
(bad)
push
xor
movs
addr16
fs
inc
mov
sbb
(bad)
cmc
push
add
mov
cmp
push
adc
aam
ins
jl
lea
cmp
sahf
and
add
jge
inc
fisttp
fld
mov
jecxz
stos
inc
sti
mov
inc
xor
mov
js
cld
popa
cmc
pop
aas
cli
adc
sti
mov
sahf
and
and
ins
fmul
int3
(bad)
call
dec
les
ss
xlat
cmps
sti
leave
mov
(bad)
cwde
sub
pop
push
mov
cmp
lea
push
idiv
and
aam
cmps
adc
sub
retf
fimul
jmp
dec
enter
stos
rcl
mov
in
(bad)
ror
and
fs
cmp
mov
pop
fwait
repnz
mov
add
adc
and
cmps
inc
std
leave
pop
clc
icebp
cmp
call
jmp
inc
push
or
mov
mov
int3
mov
dec
cmp
or
xchg
push
aas
adc
aas
icebp
mov
mov
ins
sub
aam
mov
movs
sbb
add
or
rcl
std
scas
lahf
jb
aas
lock
inc
movs
adc
sbb
push
push
push
sub
push
add
daa
aam
add
cmc
xor
inc
lds
inc
adc
aaa
cwde
mov
aad
add
je
xor
shr
add
jge
add
push
add
daa
aam
add
cmc
xor
mov
dec
add
push
add
daa
(bad)
add
sub
pop
add
cmps
add
dec
lods
add
push
sbb
mov
cwde
aas
mov
pop
aas
hlt
mov
add
std
pusha
add
add
add
ins
mov
add
cmp
jae
or
test
or
xor
fidiv
add
mov
push
retf
rol
add
sbb
(bad)
add
sub
pop
cmps
add
dec
test
dec
add
pop
add
cmps
add
dec
jmp
dec
push
into
xor
add
cmc
xor
fsub
je
add
mov
dec
add
push
add
daa
aam
add
cmc
xor
mov
dec
add
push
add
adc
mov
add
add
dec
test
pusha
add
add
cmps
add
dec
test
add
daa
aam
add
cmc
xor
mov
dec
add
push
add
and
xor
mov
inc
add
cmp
lea
stos
(bad)
out
aaa
pop
xor
aas
(bad)
add
into
and
xchg
popf
test
inc
dec
(bad)
jno
inc
jg
ret
fnstsw
jno
xchg
daa
add
ins
clc
es
mov
fwait
mov
mov
xchg
jno
mov
(bad)
retf
cmp
inc
call
(bad)
and
and
cmp
dec
nop
call
xchg
add
add
adc
cmc
add
in
add
add
add
ja
rol
or
inc
add
add
icebp
aam
add
sbb
cmps
jo
add
add
mov
add
aas
les
add
inc
add
cmp
adc
sbb
jnp
add
or
inc
add
test
in
add
test
jns
jle
add
cmp
dec
add
rol
sub
pusha
add
and
add
push
loopne
add
dec
push
push
add
add
push
add
out
xor
(bad)
xchg
add
mov
jo
out
pop
enter
xor
add
sbb
inc
js
(bad)
jmp
(bad)
jl
add
or
inc
addr16
xor
loopne
cld
iret
test
cs
add
sub
mov
cld
loopne
push
add
mov
fiadd
add
sub
xchg
daa
(bad)
add
dec
test
pusha
add
add
xchg
movs
or
add
dec
add
xchg
push
xor
mov
sar
add
pop
cmp
xchg
fiadd
sbb
clc
inc
add
ds
add
rcr
aas
pushf
add
call
cld
jg
add
test
test
add
mov
jae
push
pop
push
xor
add
cs
mov
xor
in
add
push
out
add
pop
push
lods
add
xor
sub
add
cdq
inc
mov
and
test
cmp
add
add
pop
cmps
and
pop
int
(bad)
popa
add
jle
add
int
pop
into
add
call
out
or
pop
pop
scas
pusha
add
add
pop
cld
push
add
push
add
add
add
push
jmp
sub
push
add
daa
aam
add
cmc
xor
mov
dec
add
push
add
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
sbb
pop
add
mov
add
add
add
cld
cmps
sbb
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
dec
call
jne
dec
cmps
and
xchg
aam
pop
adc
or
adc
sub
push
add
(bad)
sbb
add
sub
xor
sub
push
add
add
dec
int3
add
sub
push
add
push
dec
pop
add
test
pusha
add
sbb
inc
add
adc
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
dec
xor
or
adc
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
push
add
rol
sahf
rol
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
or
or
adc
sub
push
add
add
adc
or
adc
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
pop
dec
add
pushf
mov
sbb
cmc
add
fwait
(bad)
pop
(bad)
add
xchg
fcomip
(bad)
mov
mov
cmc
add
add
sub
jns
inc
por
adc
add
adc
sub
push
add
add
add
sbb
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
jbe
add
dec
pop
pop
add
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
push
repz
or
adc
pop
pop
mov
xchg
icebp
add
and
add
sub
add
pop
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
rol
adc
cwde
add
mov
add
add
add
jae
or
adc
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
call
add
add
cmc
add
push
mov
in
aam
add
(bad)
add
and
jp
or
sub
add
fwait
sbb
add
cmp
and
daa
repz
push
fstp
mov
push
inc
ja
add
add
adc
pusha
add
sbb
mov
test
aam
add
adc
pusha
add
cmc
xor
mov
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
add
adc
pusha
add
cmc
xor
mov
add
jno
sub
pop
into
xchg
xlat
xor
mov
pop
inc
cmp
push
in
add
mov
push
sub
xor
mov
and
cmp
xchg
jp
add
in
aam
add
adc
pusha
add
push
fstp
pushf
add
and
cmps
add
nop
(bad)
push
add
leave
inc
jno
jg
add
cmp
push
cmps
add
mov
jno
add
fimul
(bad)
dec
add
nop
(bad)
push
add
enter
add
add
adc
pusha
add
cmc
xor
mov
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
add
adc
pusha
add
cmc
xor
mov
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
add
adc
pusha
add
cmc
xor
mov
pop
inc
cmp
push
cmps
add
mov
jmp
std
sub
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
sbb
jg
or
out
add
add
push
arpl
cmp
pop
and
cmps
add
nop
(bad)
push
add
enter
add
xor
jns
cmc
xor
movs
add
jbe
ja
repz
popa
lahf
push
hlt
xor
inc
(bad)
(bad)
jo
xchg
xor
(bad)
(bad)
jo
xchg
aaa
nop
(bad)
push
add
repnz
pusha
or
fcomp
or
xor
test
pop
inc
cmp
repnz
pusha
adc
dec
jmp
stc
rol
push
jbe
add
movs
ins
dec
add
repnz
pusha
add
cmc
xor
mov
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
add
adc
pusha
add
cmc
xor
mov
xor
mov
push
mov
and
xlat
inc
dec
into
add
add
(bad)
jo
fmulp
lahf
mov
das
and
cmps
add
nop
(bad)
push
add
xor
xor
jnp
pop
pop
into
add
mov
icebp
cld
loopne
or
into
(bad)
rol
adc
pusha
add
cmc
xor
jmp
repz
mov
add
cwde
inc
cmp
add
adc
mov
mov
rol
or
xor
loope
sti
out
add
sbb
xor
lds
add
stc
rol
or
xor
mov
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
add
adc
pusha
add
cmc
xor
mov
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
add
adc
pusha
add
cmc
xor
mov
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
add
adc
pusha
add
cmc
xor
mov
pop
inc
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
add
add
xchg
(bad)
(bad)
out
or
inc
test
aam
add
adc
pusha
add
mov
mov
aas
nop
(bad)
push
add
enter
add
add
push
add
nop
jp
add
xchg
aam
add
push
cmps
add
nop
(bad)
push
add
enter
add
add
je
xchg
cwde
add
cmp
push
cmps
add
nop
(bad)
push
add
enter
add
fs
stc
rol
jbe
test
rol
jbe
dec
out
or
(bad)
and
rol
int
and
sbb
test
and
dec
lock
inc
out
add
push
mov
add
inc
inc
add
add
pop
or
and
add
pop
cdq
pop
mov
mov
push
dec
js
ins
lahf
push
add
push
inc
add
cmp
xor
mov
push
jecxz
ins
add
mov
sub
add
push
add
or
push
add
je
add
jmp
add
sub
push
add
dec
pop
popa
add
and
rol
dec
sbb
cli
rol
add
xor
mov
adc
sub
push
add
add
push
nop
add
add
add
add
mov
push
sub
add
xor
add
pop
pop
cmp
add
pop
cmp
inc
add
sbb
add
dec
out
add
xchg
mov
rol
add
cwde
add
sahf
rol
retf
and
push
fcom
pushf
in
add
add
sbb
add
add
adc
add
rol
bound
into
inc
add
jecxz
mov
and
push
add
add
jno
xchg
pushf
inc
dec
loopne
adc
add
mov
imul
sub
mov
or
mov
pop
and
faddp
add
sub
push
add
and
add
pusha
pop
lds
or
popa
add
add
or
adc
sub
je
icebp
add
ins
pusha
inc
add
sahf
rol
retf
add
ret
add
add
arpl
add
addr16
pushf
pushf
mov
jg
jecxz
or
push
mov
mov
fiadd
sbb
push
ss
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
adc
add
add
add
push
add
add
adc
xchg
push
xor
add
pop
adc
rol
call
cmp
push
add
push
inc
sub
xor
push
add
fist
adc
dec
pop
add
add
mov
add
add
add
mov
add
or
add
add
pop
push
add
mov
add
push
mov
add
iret
inc
add
adc
rol
jp
add
adc
sub
push
add
add
add
add
mov
add
add
mov
add
add
or
add
add
pop
xor
xchg
dec
cwde
add
ja
add
ret
add
inc
adc
or
sub
inc
cmp
cli
les
and
jb
add
add
mov
sbb
icebp
sub
or
add
fisub
add
add
add
sub
push
add
in
call
add
cmp
add
add
cdq
and
and
aam
jnp
add
add
adc
mov
xchg
xchg
add
sbb
xor
add
fwait
mov
dec
ins
push
adc
test
sbb
add
sbb
int3
add
mov
add
jbe
add
mov
xchg
sbb
mov
and
add
add
sub
push
add
push
ja
add
daa
lods
add
sub
jno
fbstp
add
sbb
add
sub
inc
add
repnz
add
sub
push
add
add
add
add
mov
add
add
add
loopne
rol
pop
and
sbb
daa
ins
rol
dec
lods
add
inc
sahf
xchg
pop
and
add
sbb
add
sbb
adc
add
add
inc
loopne
adc
add
pusha
add
cmp
add
jne
add
jbe
push
pop
or
or
add
sbb
str
add
xor
cwde
add
adc
xor
sub
push
add
in
add
inc
js
adc
add
add
add
and
int3
add
add
mov
push
out
sbb
add
adc
sub
push
add
add
add
or
add
add
add
add
add
cmp
lock
add
add
add
mov
add
add
cdq
lock
push
nop
add
mov
add
add
and
or
jo
and
jae
arpl
add
and
daa
(bad)
add
and
xor
mov
inc
add
push
inc
pop
add
pusha
add
jae
add
add
jbe
push
add
cmp
add
rol
cmp
lahf
push
add
sbb
rol
add
add
add
and
xchg
mov
push
dec
add
sub
push
cmp
aaa
add
or
dec
cmp
push
add
add
add
add
mov
add
inc
jmp
pop
in
std
and
and
adc
sbb
bound
pusha
add
add
inc
jmp
add
mov
pop
pop
mov
add
push
inc
add
cmp
add
mov
pusha
sub
popf
loopne
mov
jmp
rol
dec
xchg
cwde
add
jbe
add
data16
add
sub
push
add
xchg
sbb
add
add
sub
push
add
add
add
add
mov
sbb
push
add
int3
lods
arpl
add
add
add
ds
add
xor
add
je
xchg
add
add
add
sub
pop
sub
inc
cmp
mov
add
cmp
add
jecxz
mov
inc
add
add
and
adc
dec
lock
add
test
(bad)
add
add
add
mov
xchg
shl
add
iret
js
adc
sbb
and
push
and
mov
in
adc
xor
mov
rol
pushf
ins
add
xchg
cmps
push
fwait
inc
add
daa
(bad)
add
add
and
add
add
sub
push
add
add
add
push
dec
add
dec
add
mov
add
mov
rol
mov
cmp
mov
adc
sub
push
add
add
add
add
mov
add
arpl
add
lock
retf
adc
and
add
lods
cmp
sub
push
add
add
dec
add
add
add
add
add
push
int3
rol
dec
add
add
mov
and
add
add
add
add
sub
push
add
jmp
mov
add
add
rcl
inc
loopne
nop
adc
sub
push
add
add
add
add
mov
mov
and
add
add
sub
pop
add
mov
push
push
mov
inc
add
dec
and
adc
add
sub
cwde
add
jle
add
int3
inc
fmul
cdq
ds
add
dec
out
adc
sub
fs
outs
add
shl
push
call
ins
add
adc
pop
push
mov
mov
sbb
hlt
add
pop
or
movs
add
push
cmp
inc
add
inc
add
hlt
add
add
add
add
mov
loopne
mov
inc
add
push
cmp
xor
mov
rol
mov
xor
and
aaa
dec
add
jbe
add
add
add
cmp
xor
cmp
rol
or
add
mov
pusha
sub
rol
and
add
or
xor
sbb
arpl
sub
mov
add
adc
in
add
add
xchg
add
and
sbb
jp
add
add
add
add
test
sub
push
add
add
scas
cmp
add
dec
jp
jmp
add
inc
add
sbb
add
add
cmps
add
dec
jae
or
adc
sub
push
add
add
add
add
js
xor
mov
add
add
jno
add
add
sub
push
add
add
add
add
(bad)
and
pusha
add
push
inc
add
add
jae
add
adc
add
sbb
add
and
sbb
adc
sub
push
add
and
sbb
jle
or
bound
push
add
add
add
sub
push
add
add
push
dec
js
ins
lahf
pop
add
mov
add
add
mov
mov
adc
into
dec
dec
movups
add
add
add
and
inc
add
inc
add
adc
sub
push
add
add
add
adc
add
sub
push
add
add
(bad)
loopne
sar
mov
pop
out
add
shr
push
add
add
add
mov
add
add
jb
add
add
dec
cmp
add
add
adc
mov
ins
outs
add
lea
daa
adc
mov
rol
nop
jno
add
add
add
test
add
pushf
or
js
push
add
push
sub
add
pushf
inc
add
add
xor
cld
loopne
adc
pusha
pusha
sahf
mov
inc
add
hlt
xor
mov
and
inc
add
and
and
nop
add
pop
sbb
sbb
add
inc
inc
add
repz
add
mov
popf
mov
sub
fiadd
adc
and
pusha
add
push
xchg
mov
add
add
rol
lods
add
cmp
std
and
add
test
jmp
add
cmp
dec
add
mov
add
sub
sbb
add
rol
add
add
add
mov
pushf
data16
add
sub
push
add
add
add
add
dec
pop
arpl
add
add
add
je
or
sub
push
add
add
add
add
mov
add
add
and
inc
add
and
xchg
(bad)
add
add
sub
add
sbb
add
add
add
rol
rol
add
sbb
add
push
add
add
fsub
add
add
add
mov
cwde
add
jb
add
(bad)
les
xchg
fmul
add
mov
add
add
sub
push
add
add
add
add
mov
add
jo
add
xchg
and
add
mov
add
or
sbb
mov
pushf
add
add
sbb
add
mov
xchg
adc
bound
lahf
pop
add
mov
add
add
jnp
add
fadd
add
cmp
add
push
dec
add
add
add
and
mov
mov
adc
rol
mov
add
ror
aas
cwde
jnp
add
dec
pusha
add
cli
rol
add
mov
ds
lods
add
and
rol
in
mov
xor
push
add
add
sub
push
add
add
mov
mov
xor
push
ret
add
sub
push
add
(bad)
sbb
add
sub
push
add
sbb
pop
add
mov
add
add
add
mov
add
add
sub
push
add
and
pop
lahf
aad
add
jae
add
sub
push
add
add
add
add
mov
add
cwde
jecxz
add
add
add
add
add
mov
cmp
lods
add
dec
add
les
daa
ins
inc
add
add
add
add
sub
push
add
add
add
add
mov
add
add
add
or
js
push
add
cmp
or
adc
sub
push
add
add
pusha
aaa
jmp
add
sbb
push
add
add
add
push
add
or
adc
sub
push
add
jecxz
add
sub
add
rol
adc
inc
add
sub
push
add
add
inc
jbe
inc
and
add
add
add
mov
adc
push
les
adc
bound
add
mov
int3
add
add
rol
jge
add
push
add
sub
xor
adc
mov
add
inc
add
jp
add
add
add
into
rol
adc
imul
add
add
add
cmp
adc
mov
add
adc
sub
push
add
into
stc
add
add
add
add
mov
(bad)
icebp
add
pushf
pushf
rol
add
adc
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
fsub
add
sub
push
add
add
push
add
stc
add
push
lods
add
dec
test
add
xchg
arpl
add
add
add
popf
xor
mov
xor
adc
add
(bad)
add
cmp
add
push
mov
fstp
mov
xor
mov
add
add
add
mov
add
add
push
add
and
adc
sub
push
add
add
add
inc
int3
add
cmp
add
inc
add
add
pop
add
std
pusha
add
add
add
inc
adc
int3
dec
dec
add
cmc
adc
lock
cli
(bad)
pushf
add
fistp
js
push
add
mov
pusha
sub
push
and
mov
mov
sbb
sub
xor
pop
test
add
fadd
loopne
nop
adc
add
add
or
adc
push
ror
dec
push
out
arpl
sbb
jo
pushf
stos
js
bound
add
add
add
mov
sbb
rol
add
(bad)
add
sub
push
add
cmc
add
push
lods
add
dec
lods
add
push
push
add
xchg
dec
add
cwde
add
add
retf
add
inc
or
inc
fs
jo
add
inc
cmc
xor
rol
mov
add
add
add
mov
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
jle
add
add
and
push
xchg
xchg
rol
sbb
push
add
add
add
add
mov
add
add
add
mov
add
add
add
jp
add
jns
or
inc
arpl
lods
add
jno
or
shr
add
cmp
add
sub
movs
add
xor
add
add
(bad)
add
add
xchg
test
cld
xchg
add
inc
add
inc
add
sbb
test
inc
add
aas
mov
dec
inc
add
(bad)
(bad)
outs
add
daa
add
cmp
repnz
arpl
add
ss
add
sbb
les
xor
mov
sub
add
out
add
add
add
add
mov
push
sub
loope
and
add
add
sbb
sbb
xor
inc
pusha
bound
nop
push
and
add
and
mov
and
sti
les
sbb
add
dec
jmp
or
adc
sub
push
add
jmp
add
mov
mov
sbb
rcl
frstor
add
sbb
add
daa
xor
mov
add
add
add
jmp
loopne
mov
jmp
add
dec
add
add
mov
add
add
add
cmp
nop
xchg
cmps
add
add
sub
push
add
add
rol
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
mov
add
pop
xor
mov
jmp
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
dec
lods
add
dec
add
and
pop
cwde
cli
rol
cli
rol
mov
xor
jmp
add
nop
jae
mov
dec
add
hlt
add
rol
int3
xor
sub
mov
cmp
sub
push
add
add
add
(bad)
ins
loopne
loopne
inc
add
add
add
add
add
add
test
sub
and
loop
add
sti
inc
add
test
mov
inc
add
push
pusha
aaa
cs
icebp
and
fadd
or
inc
adc
mov
add
ficom
mov
and
shr
or
add
fistp
add
test
or
push
add
add
add
add
push
out
sbb
popf
inc
sub
sbb
push
add
add
add
add
loope
or
add
jmp
add
adc
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
in
aam
add
add
add
push
nop
add
push
cli
inc
add
dec
push
xor
mov
add
add
add
mov
add
add
add
mov
add
shld
add
mov
add
add
mov
add
pushf
arpl
add
leave
add
pop
out
mov
aam
add
je
add
(bad)
loopne
add
dec
pop
add
add
pusha
add
mov
int3
add
dec
dec
rol
adc
rol
add
or
inc
mov
add
xor
add
(bad)
add
push
mul
fwait
sbb
and
adc
les
cmp
fadd
mov
loopne
add
mov
add
or
sbb
sbb
and
jo
mov
add
and
mov
or
dec
add
mov
or
test
rcl
sbb
repnz
xor
xor
add
(bad)
pop
add
mov
inc
pop
rcl
add
sub
ins
outs
jae
add
and
dec
fadd
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
xchg
jp
add
mov
add
jbe
add
and
adc
mov
push
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
xor
add
add
add
enter
add
inc
add
adc
sub
push
add
add
add
add
mov
add
rol
jp
add
add
adc
sub
push
add
add
add
add
mov
add
add
add
mov
add
aaa
or
mov
and
add
pop
cdq
inc
mov
add
int3
lahf
pop
mov
or
mov
ins
les
repz
and
out
add
cmp
add
fiadd
push
dec
movs
inc
and
or
cmp
mov
push
adc
mov
inc
pusha
adc
add
or
add
adc
and
add
push
aaa
mov
adc
mov
into
rol
jno
add
aaa
add
add
sqrtps
add
sbb
inc
add
xchg
jg
add
add
adc
sub
push
add
add
add
add
mov
add
add
add
mov
add
cmp
add
cmp
arpl
add
add
add
mov
sub
adc
lock
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
dec
or
add
and
sbb
cmp
inc
add
add
add
sub
push
add
add
or
pop
xchg
adc
sub
push
add
inc
jne
add
dec
add
xchg
cwde
add
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
add
add
add
add
dec
add
jmp
and
out
sbb
mov
dec
or
int3
add
add
cwde
mov
push
pop
add
(bad)
and
adc
iret
movs
inc
nop
or
fwait
add
jle
add
cmp
lock
aad
add
add
pop
cmp
add
cmp
inc
add
cmp
add
mov
loop
sbb
jp
or
add
pushf
loop
pop
or
pop
xor
sbb
add
out
add
adc
pop
xchg
daa
cmp
add
dec
hlt
add
add
push
add
add
xchg
rol
push
lahf
pop
add
pusha
add
mov
ds
add
add
add
mov
add
add
add
mov
add
leave
add
add
add
push
sbb
shr
push
add
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
inc
xor
(bad)
pop
mov
cmp
add
add
sub
push
add
daa
adc
in
mov
rol
add
rol
add
adc
sub
jb
push
jae
or
add
or
adc
pusha
pusha
bound
push
add
pop
mov
test
add
mov
add
mov
add
add
add
mov
or
sub
inc
add
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
jmp
add
mov
or
pop
nop
div
add
adc
or
mov
and
inc
add
jmp
test
sub
adc
mov
add
adc
mov
add
add
add
mov
add
pop
ds
mov
(bad)
xchg
inc
add
(bad)
jno
add
add
mov
push
leave
push
mov
mov
fld
mov
fiadd
mov
ja
add
xor
adc
or
inc
add
push
ret
xchg
add
add
add
mov
add
add
add
mov
test
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
cmc
xor
mov
add
add
add
mov
add
add
add
mov
loopne
add
xchg
popf
test
shld
push
dec
pop
add
jecxz
push
pop
das
inc
and
inc
inc
ja
nop
dec
aad
add
cmp
xchg
add
push
or
add
add
add
loope
hlt
adc
mov
inc
xor
mov
adc
inc
arpl
loope
add
int3
add
aas
sub
mov
add
mov
mov
add
add
add
mov
pusha
add
mov
add
mov
add
sti
inc
add
loopne
add
inc
cwde
or
add
sbb
nop
adc
inc
add
popa
pushf
and
or
cmovae
add
ret
add
sbb
cmp
mov
push
add
sbb
out
or
nop
and
add
les
push
add
add
add
and
mov
add
inc
test
cs
push
rol
fdivr
nop
add
add
add
add
loopne
rol
add
lock
add
sub
cmp
add
add
sahf
nop
add
add
add
inc
jmp
adc
mov
add
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
sub
push
add
cmps
add
xchg
ds
add
in
add
or
add
add
mov
add
add
add
mov
add
add
sub
add
add
or
add
xchg
push
add
add
add
mov
add
mov
lods
add
xchg
mov
push
add
shl
pop
add
movs
add
dec
dec
add
cli
inc
add
mov
inc
add
icebp
jmp
cmp
mov
xchg
ds
add
add
add
add
mov
cmp
add
add
add
xor
add
mov
cmp
cmp
add
sbb
pop
iret
push
fiadd
adc
jne
push
jmp
mov
in
inc
fistp
sbb
adc
xor
add
add
adc
cmp
and
rol
and
sbb
mov
xor
add
add
sub
pop
and
inc
pusha
add
push
cmp
bswap
add
adc
hlt
add
add
add
add
add
sub
push
add
add
add
adc
rol
add
add
and
xchg
add
xchg
ins
(bad)
(bad)
add
loopne
mov
add
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
push
andnps
and
dec
push
scas
inc
add
pusha
add
ror
add
sbb
rol
addr16
add
add
sub
push
add
pop
or
add
retf
clc
rol
inc
add
push
mov
mov
lods
xor
sub
add
add
sbb
or
jmp
add
sub
inc
sahf
mov
pop
and
add
sbb
push
xchg
mov
rol
add
sub
add
push
or
add
out
mov
pop
jecxz
rol
and
add
dec
daa
add
and
and
stc
iret
mov
add
pop
xor
jle
add
cmp
or
add
cmp
nop
add
add
add
rol
dec
leave
add
jb
fadd
out
pop
aas
stc
add
xchg
pusha
add
adc
add
ins
or
mov
mov
inc
add
add
cwde
cli
rol
cli
inc
add
stos
rol
pop
and
loopne
add
add
add
dec
lods
add
je
rol
pop
xor
rol
mov
add
rcl
lds
inc
add
cmc
add
adc
arpl
or
adc
sub
push
add
add
cmp
xchg
inc
fs
add
pushf
outs
and
stc
(bad)
xor
sbb
pop
pusha
sbb
add
int
jmp
or
lahf
pop
rol
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
pusha
cli
inc
add
add
test
and
loopne
mov
add
(bad)
xor
les
add
add
sub
jo
cmp
out
add
pop
and
add
add
add
inc
add
xor
push
add
add
and
call
inc
add
pop
xor
pop
addr16
lods
rol
test
add
dec
adc
xor
mov
xor
and
xor
sub
push
add
add
add
add
add
mov
add
add
push
jbe
add
add
pop
out
add
pop
int3
cmp
loope
or
out
add
or
mov
popa
push
mov
add
inc
icebp
jle
and
inc
fadd
add
movs
mov
push
add
dec
daa
rol
adc
aas
sub
xchg
push
add
add
sub
push
add
shr
add
add
inc
xor
add
dec
cmp
ret
repnz
add
rol
push
add
shr
pop
cmp
mov
jp
add
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
cmp
adc
pop
out
add
cmp
mov
inc
add
movs
inc
cmp
jmp
or
aam
add
add
sub
push
add
add
add
add
mov
add
add
add
mov
add
rol
and
add
push
add
add
add
add
mov
add
add
sub
inc
js
push
add
add
add
add
mov
add
add
add
mov
add
pop
daa
test
add
sahf
nop
add
cmp
add
sbb
adc
shr
inc
dec
xor
mov
add
add
add
mov
adc
xchg
pop
jmp
inc
push
add
add
sub
jo
jno
add
div
add
dec
aaa
adc
rol
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
push
add
add
and
add
xor
add
adc
sub
xor
xor
add
add
pusha
add
add
add
sub
push
add
add
add
add
pusha
or
mov
add
cmp
push
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
movs
add
pop
mov
and
pusha
jp
add
mov
add
adc
sub
push
add
add
mov
cmp
inc
add
add
inc
add
hlt
adc
pop
test
add
into
and
and
pushf
mov
jb
push
rol
adc
mov
add
or
mov
inc
jp
add
mov
add
ret
add
inc
add
inc
jb
add
add
add
inc
add
add
cmp
add
sbb
or
adc
adc
dec
sti
rol
iret
add
or
mov
adc
sub
push
add
add
add
add
mov
add
add
add
add
push
or
inc
add
or
pop
push
add
pop
mov
and
pusha
jp
add
add
add
push
test
add
hlt
adc
mov
add
sub
inc
add
add
inc
add
hlt
adc
mov
add
sub
inc
add
add
inc
add
hlt
adc
mov
add
sub
inc
add
jp
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jmp
jmp
add
dec
inc
dec
inc
add
add
add
dec
add
(bad)
out
add
inc
outs
bound
add
add
add
loope
mov
add
dec
dec
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
and
add
add
add
add
add
repnz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
sbb
add
inc
add
add
add
add
add
pop
add
add
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
add
add
push
outs
ins
popa
jb
jo
outs
gs
and
popa
imul
jne
and
jns
add
dec
dec
dec
and
push
push
dec
push
inc
push
dec
dec
dec
add
dec
dec
dec
and
add
dec
add
add
add
add
add
add
add
outs
bound
push
push
push
push
xor
push
imul
xor
xor
cmp
xor
xor
and
xor
xor
cmp
xor
ins
popa
and
jne
ins
imul
xor
ret
inc
jns
ins
popa
and
jne
ins
imul
jne
popa
and
jb
imul
je
outs
jne
and
imul
je
outs
and
outs
jae
outs
je
and
ins
and
addr16
gs
jb
gs
add
sbb
add
add
jl
popf
add
add
add
add
add
add
add
add
add
add
nop
add
pop
add
add
xor
xor
add
adc
add
mov
add
adc
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
xchg
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
xchg
or
add
add
add
add
add
add
add
add
aam
xchg
add
add
add
xor
add
xchg
xchg
add
add
add
xor
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
fsub
add
add
add
movs
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
movs
add
add
add
add
movs
push
add
add
add
add
add
movs
pop
add
add
add
add
add
movs
or
add
add
add
add
add
add
add
add
movs
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
cmp
xor
xor
xor
add
xor
xor
xor
xor
xor
add
je
rol
cmovb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
in
add
outs
bound
inc
dec
add
(bad)
out
add
inc
outs
bound
add
add
(bad)
fild
test
or
or
or
or
or
or
or
adc
adc
adc
sbb
or
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
adc
push
push
adc
push
push
push
push
adc
or
or
or
adc
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
add
or
push
add
add
add
adc
(bad)
fld
add
or
les
aas
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
adc
add
and
xor
adc
mov
adc
xor
adc
pop
and
icebp
arpl
push
mov
xchg
push
fs
ret
ss
rcl
gs
ret
shl
repz
daa
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
adc
add
add
add
add
add
adc
and
adc
push
popa
jno
adc
mov
push
shl
xor
loope
adc
xor
and
add
xor
push
mov
ss
loop
mov
ret
shl
repz
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
daa
aaa
inc
push
addr16
xchg
cmps
mov
(bad)
fiadd
or
add
add
add
add
add
jle
fdecstp
dec
out
out
ins
lea
sar
sbb
(bad)
ss
fwait
shl
out
ins
ret
aam
jnp
cmp
dec
cli
pop
out
lock
lock
cmps
sub
(bad)
pop
sti
push
sub
dec
push
rol
lods
mov
data16
cli
cmp
neg
sahf
lahf
repz
sub
ss
cmp
(bad)
push
jge
lods
rcl
adc
pop
outs
das
jmp
mov
fld
rol
xchg
ins
xor
add
aas
aad
cmp
(bad)
ins
mov
pop
pop
inc
sub
pop
sub
dec
sbb
call
add
arpl
out
mov
mov
pop
pushf
rcr
or
mov
lock
jmp
hlt
std
cmp
add
add
dec
(bad)
mov
ds
jge
xor
shl
dec
xchg
mov
out
call
pop
cld
outs
movs
ins
xchg
ret
or
xor
mov
xchg
shl
cld
cmps
stc
and
cdq
xchg
ret
push
ror
mov
repz
out
int3
outs
cld
daa
repz
int
jg
xchg
pusha
stos
shr
ds
sahf
cmp
out
or
or
or
popa
and
fimul
pop
fistp
add
inc
xor
shl
adc
add
push
cld
(bad)
xchg
nop
adc
xor
inc
or
jg
in
in
cmc
sbb
loope
dec
retf
aaa
(bad)
movs
add
fdivr
sub
sbb
mov
add
push
movs
adc
psadbw
repnz
sub
rcr
xchg
push
pop
iret
imul
sub
js
add
or
ss
repz
mov
cwde
xchg
jnp
(bad)
dec
and
fcmovne
inc
xor
in
repnz
mov
mov
repnz
stos
xchg
pop
jle
add
cmp
mov
clc
test
xchg
nop
push
dec
inc
mov
sub
in
xor
fs
adc
or
rcl
push
outs
hlt
(bad)
scas
scas
arpl
xlat
test
retf
pusha
ss
imul
cmp
mov
inc
ins
pop
stos
aad
jmp
push
arpl
jae
test
mov
xchg
jnp
inc
sbb
mov
cdq
cmp
xchg
mov
cmp
and
jae
shl
push
pop
out
stos
and
add
lods
sub
int
pop
lahf
and
iret
retf
test
push
xchg
iret
inc
icebp
nop
fistp
xor
hlt
das
movs
fstp
fucomi
xor
cli
pop
lahf
repz
mov
mov
rcl
jne
mov
mov
xchg
dec
std
test
jns
fist
cli
pop
fmul
les
lahf
jge
xchg
sbb
in
imul
sti
pushf
retf
test
(bad)
sbb
push
cmp
mov
loopne
fld
mov
jo
xchg
mov
xchg
push
(bad)
inc
mov
retf
sub
add
in
dec
loopne
hlt
inc
sbb
ds
xchg
call
push
mov
imul
push
in
fild
mov
jb
xor
cmc
stos
(bad)
xchg
(bad)
sbb
pop
imul
ficomp
ja
shrd
fidiv
and
cwde
idiv
hlt
aas
not
and
mov
fcomp
xor
mov
adc
sub
mov
out
enter
add
popa
mov
test
lea
lahf
cmps
data16
mov
cli
inc
pop
cld
fistp
jmp
cmp
adc
dec
xchg
jnp
test
out
repz
jg
ins
into
adc
in
xchg
or
stc
shl
sbb
pusha
mov
cdq
jno
push
mov
lods
imul
lods
retf
ret
cmps
shl
inc
lock
dec
hlt
xor
pushf
cmc
ror
push
imul
pop
mov
cmp
fldcw
cmp
add
stos
xor
fs
mov
repnz
cmp
adc
and
mov
mov
xor
pop
hlt
jg
test
jo
out
lock
movs
pop
out
dec
repz
shl
inc
call
xchg
fcmovbe
mov
adc
mov
xor
rol
dec
push
add
fdivr
xlat
xor
std
mov
ret
cmp
(bad)
mov
retf
inc
cld
movs
ret
retf
(bad)
enter
add
scas
fld
cmp
cdq
(bad)
lods
dec
pop
inc
pop
jae
popf
lea
cmp
test
loop
add
pop
loope
xchg
or
cwde
or
mov
cmp
add
fs
cmp
leave
push
imul
lea
xor
sar
sub
mov
jo
push
call
inc
xchg
sbb
or
mov
cmp
mov
call
loopne
xor
ret
sti
(bad)
into
arpl
in
shr
js
call
pop
xchg
ret
scas
(bad)
hlt
icebp
cs
cmp
scas
jge
std
dec
dec
cld
sub
fld
out
je
push
jo
mov
rcl
jno
cmp
mov
sbb
imul
lahf
jmp
mov
add
and
mov
mov
lds
lea
pop
ins
dec
xchg
in
in
push
mov
iret
pop
sbb
mov
jle
push
inc
test
in
std
and
(bad)
mov
in
jmp
push
shl
out
xor
lods
push
cdq
addr16
mov
imul
arpl
add
xor
idiv
ins
ja
not
inc
dec
pop
push
add
sub
in
or
pusha
add
mov
jle
dec
pusha
in
mov
in
inc
cmp
rcl
idiv
pop
xchg
sub
sub
mov
xor
pop
jmp
(bad)
jp
fld1
pop
xchg
inc
clc
das
inc
lods
mov
aas
jg
pop
clc
sbb
pop
cmp
sbb
loope
mov
jns
mov
jmp
or
dec
cmp
mov
xor
mov
pop
rcr
mov
hlt
in
stos
fidivr
cli
pop
xchg
jne
mov
idiv
mov
inc
int3
ret
arpl
test
mov
cmp
scas
aad
iret
push
mov
push
pop
test
mov
stos
aas
and
cmp
inc
xor
daa
inc
test
sbb
jmp
test
pop
inc
ret
fstp
push
(bad)
jp
mov
std
jp
cmc
push
test
test
clc
js
pop
add
xchg
push
mov
imul
xor
add
inc
(bad)
xchg
jle
ficomp
mov
arpl
xlat
outs
jmp
jecxz
ds
pop
mov
dec
push
retf
jg
mov
add
and
fmul
cmps
rcr
push
daa
ins
mov
mov
mov
(bad)
sti
inc
inc
ja
cmp
sub
push
retf
pop
jmp
das
sbb
ins
jne
mov
loope
jmp
sbb
lea
(bad)
(bad)
outs
mov
push
popf
sbb
aam
sti
cmp
jmp
mov
mov
jg
inc
out
add
jp
mov
push
outs
sub
inc
mov
xchg
adc
add
gs
push
jmp
sub
mov
hlt
push
dec
adc
leave
je
add
out
imul
out
in
cmc
jg
dec
push
lods
popf
mov
cwde
loopne
push
ret
jmp
cmps
imul
lods
mov
call
(bad)
fist
stos
push
mov
sbb
sbb
xchg
adc
outs
test
arpl
mov
fnstsw
cmp
sar
mov
xor
add
cdq
lea
cli
aaa
icebp
and
jmp
jle
lods
and
jo
and
ret
lea
lods
cmp
pop
pop
in
ins
push
mov
jnp
xchg
idiv
pop
test
gs
jnp
or
add
inc
inc
fsubr
mov
sbb
xor
xor
or
test
(bad)
dec
dec
inc
outs
and
add
add
or
and
lea
ror
mov
fdivr
dec
ins
(bad)
cmp
aas
adc
sbb
int
retf
and
jg
jae
sbb
jmp
dec
dec
mov
sti
ss
and
sub
fistp
xor
add
jbe
pop
jns
cmp
cmp
or
pop
call
pop
clc
test
mov
into
mov
ins
jl
sti
push
cdq
shl
push
add
aaa
pop
fld
pop
test
rcr
int3
comiss
mov
sbb
(bad)
xchg
call
repz
pop
mov
inc
test
in
jcxz
push
push
das
(bad)
mov
xor
inc
mov
pop
push
jbe
inc
dec
(bad)
stos
inc
test
aas
das
push
out
popa
in
(bad)
jae
lea
aad
ficom
pushf
mov
xchg
sti
pop
gs
mov
aad
mov
inc
dec
dec
lods
enter
(bad)
and
push
(bad)
cmps
pop
mov
ins
mov
cdq
outs
test
fst
add
lods
lahf
lods
jg
cli
mov
in
fld
mov
xchg
push
fs
pop
ja
sub
push
ins
fldl2e
aaa
aad
enter
aam
call
(bad)
stc
in
sti
mov
add
mov
out
jne
mov
jmp
ret
add
push
arpl
nop
(bad)
pop
(bad)
ins
jae
mov
inc
inc
call
jo
jae
iret
mov
mov
aad
push
cmp
xor
add
add
jmp
lahf
push
out
ret
mov
jne
popf
ins
mov
pop
es
xor
fsub
sub
inc
cdq
cmc
jbe
jmp
mov
inc
or
mov
pop
cld
add
adc
je
jge
inc
fistp
xchg
scas
dec
ds
mov
inc
in
outs
fbld
jge
inc
ret
xchg
ret
iret
scas
xchg
jno
lock
int3
fadd
jnp
lock
(bad)
xchg
call
mov
jp
fsqrt
xor
test
push
arpl
push
jecxz
aaa
push
lock
jno
fistp
aaa
and
xchg
in
hlt
cli
jle
iret
sar
(bad)
shl
push
inc
and
mov
sar
iret
movs
push
mov
jmp
push
fisttp
jle
sbb
jle
stos
out
sbb
jle
fbstp
cmp
jge
dec
jmp
push
and
into
push
pop
ds
int3
mov
hlt
mov
std
sbb
inc
or
in
jle
shr
inc
xor
fisttp
sbb
icebp
in
lods
sbb
lods
(bad)
outs
daa
push
(bad)
inc
cmp
add
push
mov
mov
retf
cdq
imul
lahf
inc
imul
ja
(bad)
mov
scas
(bad)
(bad)
pop
outs
pop
add
mov
sbb
fwait
mov
jno
mov
sti
imul
pop
repz
pop
clc
lods
cdq
test
mov
jle
xor
push
icebp
xchg
inc
ss
lahf
cld
lahf
mov
pop
inc
jno
std
and
cmp
inc
jle
ins
push
retf
pop
pop
inc
int3
jbe
sbb
push
jmp
std
popa
lahf
mov
mov
mov
scas
gs
xlat
jmp
arpl
mov
fldlg2
mov
xchg
call
cmps
mov
dec
pop
mov
adc
mov
jecxz
les
push
ja
lods
idiv
cmps
iret
push
fnstsw
hlt
jg
(bad)
jbe
loop
fcmovu
aaa
push
jecxz
(bad)
nop
cli
fisttp
fbstp
jne
mov
(bad)
jge
mov
sbb
in
test
cs
cmp
xlat
div
jmp
jbe
sar
xchg
stos
cs
fsub
cmp
shl
xor
xchg
jmp
lods
lods
cli
jle
aas
cmps
push
inc
push
retf
fisttp
push
loop
mov
mov
shr
jbe
mov
cli
dec
(bad)
push
pop
mov
sub
and
ret
xor
not
mov
fwait
xchg
push
adc
int
retf
jge
xchg
iret
hlt
jp
inc
mov
mov
jg
push
clc
cmp
fwait
inc
adc
ins
xchg
(bad)
icebp
jmp
movs
lods
push
scas
imul
jmp
jmp
sbb
bound
cmps
xchg
lahf
xchg
das
lock
adc
jl
inc
popf
repz
in
popa
jne
rcl
sub
std
add
inc
adc
ins
xchg
pop
imul
movs
(bad)
xlat
arpl
sbb
inc
adc
mov
into
movs
pusha
cmp
xlat
inc
add
nop
shl
scas
imul
fabs
loop
cld
mov
aam
mov
jnp
in
mov
ficomp
in
mov
pop
sbb
or
cmps
out
ins
fsubr
scas
daa
dec
dec
inc
gs
fcomp
lahf
xlat
push
push
test
pushf
pop
dec
fiadd
(bad)
pop
or
mov
nop
xlat
sub
add
dec
scas
out
xor
and
and
shl
test
inc
inc
inc
in
(bad)
sbb
dec
or
mov
mov
push
jmp
jno
imul
jge
lds
ins
sbb
inc
mov
ins
mov
jb
pushf
sti
daa
repz
int3
ffree
fst
mov
gs
mov
and
rcr
sbb
out
mov
fistp
mov
mov
mov
pop
jecxz
push
pop
xchg
sbb
add
imul
add
cmp
imul
jbe
fucomip
mov
mov
lock
mov
inc
lods
add
add
or
cs
jo
(bad)
repnz
sbb
jno
mov
lock
fwait
lahf
(bad)
imul
(bad)
xlat
inc
repnz
pop
mov
iret
sti
(bad)
jb
out
dec
inc
push
cmps
xchg
pop
push
ror
xor
xchg
les
jge
jg
inc
ficomp
not
jnp
xlat
(bad)
jbe
test
(bad)
arpl
idiv
mov
aad
lods
addr16
scas
scas
jecxz
adc
push
jge
xor
(bad)
push
dec
cli
icebp
pop
mov
stos
std
add
pop
test
pshufw
xor
fisub
inc
xor
xchg
(bad)
ja
sti
sub
inc
test
pop
repz
pop
mov
xchg
dec
push
and
pop
rcr
(bad)
inc
dec
sar
fcomip
lods
inc
or
in
push
stos
jmp
mov
cs
test
mov
push
cmp
mov
(bad)
cli
pop
lock
sti
stos
jle
(bad)
cmps
adc
add
mov
inc
in
jo
pop
aad
add
(bad)
inc
cdq
cld
(bad)
bound
push
retf
(bad)
jecxz
ret
ss
int
ja
mov
popf
jnp
inc
inc
lock
mov
ds
pop
add
jle
and
arpl
fisttp
jle
arpl
(bad)
scas
fild
jbe
xchg
mov
pop
xor
jb
js
mov
sbb
not
in
stos
arpl
add
cld
cli
cmp
scas
aam
sbb
jmp
cmp
and
mov
push
out
iret
fucomi
cmc
jg
test
lahf
pusha
retf
sar
shr
sub
mov
fnstenv
aad
sar
mov
jne
(bad)
xchg
(bad)
mov
sti
stos
mov
xchg
aaa
ror
inc
add
jl
and
add
mov
push
(bad)
ja
pop
mov
xor
add
call
iret
mov
lea
mov
pop
rcl
push
ss
test
inc
cmp
inc
imul
stos
push
fwait
push
(bad)
out
imul
mov
push
cli
or
in
cmc
imul
add
push
push
out
fisub
sbb
xor
scas
mov
jo
mov
retf
loop
and
call
xchg
fdecstp
lods
outs
fsub
(bad)
jno
lods
jae
imul
pop
inc
movs
mov
std
xchg
(bad)
sbb
stc
xchg
sahf
fcom
xor
popa
std
push
pop
imul
(bad)
mov
sbb
add
pusha
gs
jmp
sub
sti
push
test
std
or
jg
iret
push
sbb
pop
cld
sbb
packuswb
fistp
pop
cmps
(bad)
mov
pop
inc
imul
ja
mov
cli
pop
mov
xchg
out
dec
in
iret
pop
adc
push
test
add
out
xchg
in
imul
cli
sub
cdq
sbb
ins
jae
div
sub
inc
fst
add
inc
aad
inc
mov
add
scas
fdiv
jmp
mov
adc
in
not
out
lods
(bad)
inc
lock
jge
std
cmc
fdiv
inc
inc
mov
movs
jmp
addr16
and
rcr
inc
rcr
mov
imul
cmp
loopne
lods
iret
jae
mov
imul
pop
in
lahf
into
rcl
std
inc
cmc
fidiv
rcr
imul
mov
movq
dec
cwde
cmp
jl
jmp
stos
(bad)
fcos
loop
inc
dec
inc
inc
pop
push
push
dec
inc
dec
dec
inc
add
add
add
xor
inc
inc
add
add
ins
outs
je
push
inc
inc
and
pop
and
rol
or
or
adc
xor
cmp
jae
inc
push
push
dec
add
add
outs
outs
outs
add
not
add
add
add
shr
add
add
arpl
je
add
cld
add
add
fs
add
add
add
add
je
je
add
pushf
add
add
imul
add
mov
add
adc
push
push
inc
add
add
add
add
addr16
push
inc
add
add
add
add
bound
add
add
add
add
jb
pop
pop
add
add
add
add
pop
pop
pop
add
add
add
add
pop
pop
pop
add
add
add
adc
gs
add
add
inc
outs
jo
jb
addr16
xor
and
outs
bound
push
jns
je
ins
jae
dec
outs
arpl
jo
jb
je
add
add
arpl
add
add
add
adc
outs
bound
push
inc
inc
and
xor
cmp
sub
add
add
pop
and
add
add
add
push
add
add
add
push
int3
pop
pop
pop
and
add
add
jb
add
add
add
add
add
add
arpl
jbe
add
add
add
add
xor
add
jb
add
add
add
add
add
add
pop
pop
pop
and
add
add
add
add
add
pop
pop
pop
and
add
add
add
add
setne
pop
and
add
add
add
xor
add
das
add
mov
inc
add
or
or
sbb
adc
and
sbb
sbb
and
pop
pop
pop
pop
and
or
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
(bad)
fild
inc
add
adc
adc
sbb
push
push
adc
push
push
push
push
adc
or
or
or
adc
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
add
or
or
add
and
add
add
adc
inc
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
adc
add
and
xor
adc
mov
adc
xor
adc
pop
and
icebp
arpl
push
mov
xchg
push
fs
ret
ss
rcl
gs
ret
shl
repz
daa
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
aaa
inc
push
addr16
xchg
cmps
mov
xlat
out
inc
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
adc
and
adc
push
popa
jno
adc
mov
push
shl
xor
loope
adc
xor
and
add
xor
push
mov
ss
loop
mov
ret
shl
repz
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
daa
aaa
inc
push
addr16
xchg
cmps
mov
(bad)
fld
add
cmp
add
add
add
add
add
add
dec
aas
mov
jnp
ja
stos
jb
jp
push
jmp
push
xor
mov
dec
aas
fwait
jbe
add
pop
sub
xor
aas
sahf
int
cli
aam
jmp
ja
jle
cmps
fcmove
ret
dec
call
hlt
fidiv
call
fstp
(bad)
std
inc
pop
mov
cdq
outs
mov
cmp
jo
vcomiss
(bad)
jg
mov
sub
mov
push
mov
std
mov
pop
inc
and
scas
stos
dec
pop
pop
push
dec
cmps
movs
cmp
adc
adc
push
retf
pop
retf
stos
std
retf
add
cld
pop
lahf
into
push
test
push
pusha
imul
psubw
adc
outs
pop
(bad)
cmp
push
ins
out
or
ja
inc
hlt
imul
je
into
xchg
dec
mov
xlat
sti
in
aad
pop
jmp
sub
and
retf
fwait
cli
aaa
stos
pop
jg
cmp
mov
out
xor
jno
jne
mov
mov
fisubr
inc
mov
add
add
std
adc
and
and
push
and
dec
pop
scas
pop
push
jg
enter
clc
hlt
in
sbb
mov
push
jmp
gs
ror
dec
fs
scas
sti
aas
lock
sub
in
mov
pop
out
fstp
add
mov
jmp
in
out
sbb
add
push
xor
jg
inc
jmp
mov
shl
ja
aas
cli
packuswb
push
dec
into
shl
cmps
pop
jmp
into
mov
dec
stos
pop
push
fcmovnbe
cli
xchg
mov
arpl
rcr
aas
jecxz
(bad)
outs
lds
mov
mov
adc
push
fcomp
(bad)
imul
fiadd
fisub
cld
int
popf
lahf
push
jb
adc
lods
scas
ds
xchg
jnp
outs
cmc
jge
ja
mov
int
dec
cwde
push
in
btr
loope
jbe
fucomip
pop
mov
cmp
sub
cmc
cmc
fcomp
movs
push
test
retf
jg
cli
xchg
(bad)
cli
enter
adc
lock
mov
stos
sar
add
mov
(bad)
(bad)
fcomp
(bad)
stos
stos
(bad)
aas
addr16
sbb
mov
xlat
mov
xchg
cmp
push
sbb
repz
mov
(bad)
loop
loop
int3
ret
mov
pop
out
add
jmp
fdiv
mov
and
push
sbb
mov
adc
and
ds
in
mov
add
rcr
dec
cmp
cmps
or
xor
jb
or
cmp
push
sub
push
dec
sub
sub
cwde
aam
movs
stc
mov
aas
xor
mov
push
jg
cmp
or
mov
iret
shl
add
lock
out
push
push
inc
jns
push
in
xchg
fidivr
iret
iret
inc
jae
sar
jle
inc
and
arpl
xchg
in
sbb
jmp
lods
(bad)
jne
jnp
sbb
mov
mov
mov
addr16
aas
adc
pop
mov
call
mov
loop
in
and
or
ins
call
dec
jmp
cmp
call
mov
xchg
lahf
imul
inc
adc
inc
jae
je
adc
jp
or
cdq
adc
mov
dec
je
dec
and
xchg
push
leave
xchg
xchg
test
push
dec
and
xchg
popf
and
sub
xchg
xchg
cdq
and
and
sub
dec
dec
test
xchg
dec
dec
xchg
dec
sub
pop
push
dec
xchg
dec
pop
sub
pop
cmp
cs
adc
sub
xchg
xchg
xchg
dec
and
in
push
or
xor
dec
fs
push
push
add
xchg
rcl
xor
cmps
inc
xor
xchg
leave
sub
cmps
jnp
outs
push
sub
gs
movs
xchg
outs
push
xchg
loopne
xchg
sub
xchg
fiadd
inc
pop
pop
or
or
mov
xchg
add
or
pop
mov
dec
dec
cmps
push
xchg
sbb
das
sub
sub
nop
or
inc
daa
or
and
fadd
cmp
dec
sub
mov
mov
jnp
add
retf
loop
cmp
and
xchg
dec
and
sub
mov
xchg
push
dec
dec
movs
sub
push
push
sub
cmp
push
retf
xchg
xchg
dec
and
push
xchg
dec
xchg
dec
pop
push
adc
movs
xchg
xchg
cdq
and
push
xchg
cmps
dec
and
sub
and
xchg
dec
push
dec
and
xor
dec
and
dec
push
and
mov
test
mov
inc
xor
xchg
xchg
xchg
movs
xor
xchg
xchg
loopne
mov
push
add
cwde
mov
sub
movs
xchg
cdq
retf
popf
and
sub
gs
inc
adc
xchg
cdq
dec
jns
xchg
movs
and
test
or
and
sub
and
nop
movs
ds
int3
xchg
adc
xor
cdq
retf
xchg
and
and
and
movs
mov
or
inc
stos
popa
mov
push
add
sbb
and
adc
xchg
mov
and
push
mov
dec
pop
cmps
xchg
les
movs
inc
dec
add
mov
xchg
or
test
and
movs
sub
jb
pop
xchg
add
xchg
movs
movs
dec
dec
xchg
mov
jmp
dec
(bad)
in
mov
push
lods
jl
sbb
aaa
cmp
es
out
or
(bad)
imul
push
stos
push
dec
and
xchg
mov
and
xchg
xchg
dec
xchg
push
leave
and
and
cmp
xchg
dec
and
movs
leave
ror
and
xor
dec
and
xchg
xchg
dec
and
and
push
mov
dec
ja
sbb
jecxz
pop
dec
mov
ficomp
adc
add
inc
xor
lahf
push
mov
in
mov
out
jno
lahf
sub
clc
lahf
pop
dec
dec
dec
jne
cmc
mov
jbe
jnp
pop
mov
pop
test
inc
call
(bad)
inc
cli
imul
or
stos
jmp
push
lods
inc
dec
mov
out
idiv
mov
movs
cmp
in
div
aad
inc
and
mov
cmp
aas
mov
movs
ins
shld
lock
aad
push
cwde
dec
xor
dec
xchg
xchg
xchg
repnz
leave
rol
lahf
std
mov
xlat
inc
sar
ins
jne
and
lods
mov
(bad)
jb
jg
pop
sub
imul
jecxz
mov
mov
pushf
outs
cmc
ins
dec
cwde
mov
adc
div
mov
mov
mov
jle
pop
jmp
inc
mov
rcl
icebp
pop
pop
push
jmp
cdq
pop
mov
xchg
xor
repz
loop
mov
sub
mov
cmp
jg
les
nop
inc
xor
hlt
das
sub
cwde
mov
icebp
or
dec
dec
jp
test
mov
jbe
sub
pop
jmp
test
out
jp
repz
into
sub
jb
lea
movs
mov
les
hlt
mov
ret
lods
inc
mov
push
test
adc
adc
(bad)
int
dec
inc
(bad)
mov
and
retf
cmp
repnz
jmp
cli
dec
test
je
sbb
dec
mov
mov
mov
sub
outs
mov
pop
inc
mov
call
test
enter
pop
jg
pop
mov
gs
stos
sub
lods
jns
inc
or
fwait
(bad)
sti
test
std
mov
and
jmp
pushf
imul
(bad)
out
lahf
cld
jmp
push
ficom
push
(bad)
add
lea
add
popf
cmc
pop
test
mov
and
popa
(bad)
out
jmp
jbe
aam
into
ins
mov
fwait
out
outs
stc
in
inc
imul
push
jecxz
sbb
mov
mov
add
cli
sub
mov
iret
push
(bad)
mov
int
shr
out
paddw
cmps
inc
popa
dec
sbb
imul
pop
cmp
mov
bnd
cdq
xchg
mov
mov
rol
out
fsubr
pop
outs
les
push
lods
dec
mov
jb
sti
xor
shl
inc
push
jb
adc
or
push
jno
jp
cmp
inc
nop
inc
out
data16
mov
mov
inc
loopne
pop
jg
cmc
push
popa
cmp
sbb
mov
push
loope
div
inc
xor
or
mov
dec
imul
leave
shl
lods
mov
in
adc
inc
pop
movs
cmp
mov
aaa
pusha
hlt
ins
ja
(bad)
bound
xor
es
pop
mov
cwde
sub
into
push
pop
mov
sub
pop
jge
lods
adc
shl
outs
stc
retf
or
neg
inc
in
inc
mov
call
sar
adc
mov
push
inc
leave
test
xchg
dec
mov
scas
imul
cld
in
lods
aas
inc
sti
pop
push
rol
sbb
and
shr
movs
xor
in
xchg
mov
adc
aad
dec
xor
(bad)
movs
pop
mov
daa
jne
sbb
das
(bad)
and
out
test
adc
mov
dec
adc
mov
shl
adc
sub
xchg
xchg
dec
cmp
fs
dec
and
xchg
and
dec
sub
adc
xchg
test
xchg
daa
dec
or
sahf
adc
xor
push
jo
and
retf
dec
rcl
and
inc
dec
push
je
cmp
dec
and
je
and
pushf
and
push
jo
sub
and
adc
(bad)
push
retf
inc
repnz
adc
xchg
sub
cwde
xchg
xchg
inc
movs
xor
cdq
and
and
and
dec
sub
retf
xchg
xchg
mov
xchg
xchg
xchg
les
nop
dec
xchg
xchg
or
dec
pop
daa
push
or
cmps
inc
dec
adc
fcomp
dec
in
test
les
in
add
mov
xchg
dec
push
dec
mov
and
xchg
xchg
sub
and
dec
xchg
dec
and
movs
jmp
dec
xchg
dec
dec
dec
and
dec
loope
mov
or
dec
xor
dec
and
movs
shl
dec
and
movs
shl
dec
push
dec
es
dec
dec
and
push
xchg
test
and
push
cdq
xor
xchg
dec
xchg
and
xchg
popf
xor
dec
dec
and
inc
loope
fs
push
xchg
dec
xchg
dec
pop
cmp
dec
push
je
popf
and
dec
or
rcl
aam
dec
dec
adc
and
in
adc
and
sbb
retf
mov
cmps
fs
imul
xchg
or
sub
dec
dec
or
and
scas
inc
imul
dec
ins
test
pushf
cmc
add
cs
call
xor
xchg
es
xchg
leave
cmp
loopne
sub
loop
fld
movs
mov
loope
popa
test
mov
inc
sub
add
int3
sub
xchg
sbb
cs
and
and
daa
test
and
dec
pop
popa
inc
mov
test
leave
and
jns
dec
dec
icebp
test
lock
xchg
jle
imul
lods
ins
push
jecxz
outs
movs
mov
and
push
xchg
dec
and
movs
lds
push
leave
xchg
xchg
leave
and
push
dec
and
xchg
xchg
dec
and
xchg
dec
xchg
dec
pop
sub
dec
pop
and
and
daa
dec
daa
dec
dec
call
mov
pop
cmps
movs
in
xor
mov
cmp
(bad)
ja
and
mov
arpl
push
imul
gs
sar
fsubrp
fistp
lock
scas
js
xchg
inc
call
arpl
mov
mov
and
add
sar
inc
jb
lods
or
out
jg
pop
pop
shl
sub
and
jecxz
pop
cdq
jne
das
sbb
or
cdq
lods
inc
pop
fwait
ds
outs
lds
xchg
jge
(bad)
inc
in
loope
dec
not
add
mov
push
jmp
and
cmp
xchg
pusha
fidiv
gs
(bad)
add
inc
std
push
mov
fadd
std
sbb
or
aas
stos
mov
cs
xchg
mov
stc
int3
mov
cdq
jmp
(bad)
data16
mov
(bad)
push
pop
lods
sahf
fwait
pusha
mov
jmp
jp
jp
pop
cmc
jmp
fdiv
mov
mov
jnp
sahf
arpl
stos
daa
test
push
les
cld
(bad)
jmp
ins
int
cmp
test
mov
push
imul
loopne
fsubr
pusha
rcr
pop
repnz
inc
leave
lods
adc
imul
out
pop
imul
or
shl
imul
int
aam
gs
int3
pop
sbb
popa
mov
retf
dec
cmc
pop
mov
jp
dec
(bad)
mov
in
adc
aas
repz
fistp
retf
jmp
sar
repz
and
sti
push
inc
push
or
push
movs
push
cmp
jecxz
jbe
(bad)
add
(bad)
imul
dec
ja
jge
cli
out
or
aad
inc
loop
cmp
pop
das
call
sub
pusha
aas
loopne
jle
std
outs
inc
mov
imul
xor
xchg
loopne
xchg
bound
adc
lods
ret
out
lods
sar
mov
mov
adc
mov
into
push
jbe
mov
xchg
std
pop
push
test
int
mov
outs
push
jg
fstp
iret
sar
add
lock
call
fiadd
lock
aas
lahf
push
cs
jg
(bad)
stc
stos
xor
sbb
mov
test
call
loope
lock
loop
aam
inc
adc
mov
push
int
jns
jecxz
fcomp
mov
jg
jbe
cld
shl
jmp
xor
int3
pop
inc
(bad)
out
dec
sahf
xlat
jg
push
dec
cmc
add
arpl
and
mov
cwde
addr16
fs
adc
inc
mov
hlt
call
enter
popa
(bad)
ja
xor
(bad)
pop
push
xor
sbb
clc
iret
fdivr
in
ja
inc
fdivr
add
lods
lods
aad
scas
add
fsub
sub
inc
gs
cs
xlat
std
pop
jg
(bad)
in
nop
rol
enter
daa
leave
pop
mov
pushf
fnstcw
mov
mov
in
push
repnz
fistp
push
push
imul
das
arpl
ds
jmp
mov
jg
call
mov
or
inc
and
dec
loopne
push
in
mov
aad
ja
jg
mov
xchg
jp
jge
fadd
pop
jl
cs
mov
in
push
xchg
jnp
fwait
nop
iret
pop
xchg
pop
dec
pshufw
je
scas
ret
cwde
es
mov
add
sti
mov
push
or
add
inc
and
mul
ror
jns
xchg
jno
jg
sub
sub
xchg
out
call
enter
sub
push
push
inc
(bad)
shl
and
std
mov
call
and
mov
sbb
lahf
pop
cwde
popa
ret
sbb
xchg
xchg
leave
enter
test
dec
cmp
cdq
cmp
fs
movs
or
inc
cmp
loope
sub
rcl
xchg
xchg
adc
enter
test
sub
je
mov
and
dec
pop
cmp
js
and
dec
adc
mov
cmps
dec
movs
xor
jo
push
add
push
xchg
daa
xchg
leave
sub
cmps
test
popf
and
mov
es
dec
dec
adc
inc
and
enter
push
dec
and
sub
and
xchg
or
dec
mov
xchg
and
xchg
xchg
movs
repnz
sub
adc
dec
dec
or
test
sub
dec
and
sub
dec
dec
dec
popf
and
mov
and
test
xchg
xchg
xchg
dec
and
xchg
movs
xchg
dec
push
dec
and
adc
and
sub
dec
dec
cmps
push
dec
xchg
xchg
dec
and
xchg
xchg
dec
and
push
xchg
dec
and
movs
xchg
dec
and
dec
dec
xchg
dec
sub
push
pushf
add
mov
dec
es
xchg
xchg
xchg
dec
rcl
dec
daa
dec
dec
test
xchg
movs
movs
and
sub
movs
mov
movs
cdq
and
mov
dec
retf
and
enter
repnz
cdq
retf
xchg
movs
and
movs
xchg
cdq
add
mov
movs
cdq
cmp
test
mov
xchg
sub
xchg
in
nop
sub
mov
push
arpl
hlt
or
dec
mov
vmovapd
sub
dec
xchg
jecxz
xchg
enter
push
pop
aam
test
cwde
mov
xor
call
xchg
xchg
mov
mov
retf
push
sub
xchg
dec
and
and
dec
test
movs
adc
sub
dec
jne
pop
popa
and
push
ins
js
mov
push
mov
sub
xchg
sbb
xchg
daa
inc
dec
dec
and
test
push
dec
and
xchg
push
daa
dec
xchg
push
cdq
cmp
xchg
dec
and
dec
cmps
dec
xchg
dec
pop
and
and
dec
daa
dec
and
and
inc
dec
call
ret
lahf
adc
sub
or
or
div
outs
std
mov
cmp
hlt
sub
jno
cmc
cmp
inc
push
fidiv
sbb
mov
out
add
out
(bad)
ja
add
push
cmp
retf
jmp
push
lods
pop
in
cli
aaa
(bad)
fmul
mov
stos
test
out
(bad)
pop
mov
outs
das
out
movs
add
xchg
aas
(bad)
sbb
push
mov
cmp
dec
mov
repnz
out
dec
mov
mov
outs
cli
or
mov
mov
cld
mul
xchg
pop
mov
clc
dec
xor
mov
(bad)
push
xchg
mov
add
mov
call
mov
and
dec
jo
sub
fnstsw
ss
outs
or
or
ins
pop
cs
jo
pop
push
(bad)
nop
loopne
in
add
(bad)
(bad)
jmp
test
inc
inc
sub
push
xor
add
ret
aad
aad
test
push
lods
inc
repz
scas
stc
in
cld
aad
sub
ins
jge
sbb
loopne
ss
cmps
cli
aas
clc
inc
(bad)
xchg
aam
xchg
lods
in
imul
jge
dec
sbb
push
loopne
nop
xchg
bound
dec
push
loope
test
xchg
dec
ins
arpl
pop
nop
bound
dec
movs
mov
shl
mov
out
scas
(bad)
iret
test
dec
in
loop
mov
out
dec
cli
fnstsw
or
cmps
mov
push
fs
cmps
adc
cdq
jbe
out
push
call
ja
fisubr
mov
int3
shl
mov
xlat
cmp
pop
fadd
xor
or
cmps
movs
movs
or
popf
cmp
dec
(bad)
sbb
jo
sar
xchg
shl
je
stos
inc
les
scas
sbb
sbb
repz
retf
int3
and
pop
jbe
loop
cld
loopne
psllq
aam
cmc
aas
stos
pop
jge
pop
inc
mov
fisub
out
repz
inc
jmp
dec
imul
xchg
in
pop
iret
hlt
push
mov
cli
mov
cmps
repnz
push
mov
sub
pop
loope
sbb
cmc
cmp
movs
fstp
pop
iret
rcr
aas
mov
cmps
mov
xchg
mov
inc
nop
jmp
dec
mov
mov
mov
shr
(bad)
push
or
shl
inc
push
out
mov
movs
cmp
iret
lods
(bad)
sub
jb
into
xchg
pusha
fnsave
jmp
inc
ds
inc
cmp
sbb
(bad)
add
sahf
iret
shr
mov
xor
pop
mov
daa
adc
loopne
jne
jge
cmp
(bad)
pop
fnstcw
mov
out
scas
mov
(bad)
jae
lods
gs
and
push
lods
hlt
das
cmps
rol
in
pop
std
scas
into
push
mov
jne
call
aas
ficomp
popf
arpl
lods
int3
retf
xlat
jge
repz
cli
push
jg
(bad)
out
push
jg
int
cmps
ins
jbe
sti
mov
out
cld
xchg
jle
xchg
cmp
jb
repnz
xchg
jge
xchg
in
push
xchg
enter
jmp
xchg
ja
leave
lds
lods
or
in
arpl
mov
not
cmp
pop
sar
xlat
pop
xor
inc
sbb
lods
xchg
lahf
adc
jmp
hlt
xchg
push
xchg
dec
sub
xchg
sahf
into
adc
movs
cmps
(bad)
cld
cmps
xor
jge
loope
cs
iret
mov
push
loop
add
in
push
inc
mov
jmp
ds
pop
daa
je
mov
push
sub
fcmovne
dec
jg
sub
jmp
pop
dec
jg
mov
cmp
cwde
mov
add
in
jg
xchg
cs
mov
inc
dec
leave
or
mov
(bad)
shl
movs
pop
fbld
ss
fldenv
dec
call
fisubr
push
in
ja
cli
(bad)
push
fldenv
je
xchg
xchg
fsub
cmps
shl
aas
mov
dec
sub
add
adc
pop
out
fsubr
stos
jno
mov
adc
ss
xchg
jbe
jle
inc
lea
add
inc
call
mov
or
cdq
cmp
imul
or
adc
xchg
cdq
and
xchg
mov
movs
and
movs
es
and
mov
and
xchg
popf
and
dec
dec
dec
adc
je
mov
xchg
and
xchg
or
inc
cmp
cmp
add
and
movs
and
and
mov
and
xchg
xchg
je
push
leave
xchg
mov
sub
dec
adc
dec
cmps
push
adc
inc
push
enter
push
dec
adc
xchg
mov
ret
sti
push
push
add
ret
loopne
xchg
les
adc
dec
and
retf
dec
dec
fs
mov
and
and
movs
leave
and
xchg
dec
popf
xor
push
push
cmp
push
sub
sub
cmps
dec
dec
or
and
xchg
dec
xor
xchg
xchg
dec
and
and
push
xchg
xchg
dec
xor
je
dec
and
or
xchg
dec
xchg
cmps
dec
xchg
adc
es
push
jmp
xchg
dec
and
xchg
dec
cdq
and
dec
dec
and
push
xchg
dec
and
mov
dec
dec
sub
xchg
dec
dec
dec
and
push
xchg
movs
xchg
dec
pop
and
cmp
dec
es
dec
xchg
leave
and
xchg
sub
xchg
push
repnz
push
push
dec
dec
movs
xor
xchg
movs
and
je
leave
and
xchg
movs
cmps
push
xchg
mov
xor
xchg
xchg
xchg
movs
xor
push
or
daa
dec
or
inc
sub
xchg
push
push
mov
mov
dec
imul
xor
dec
push
push
and
add
int
sub
push
test
jmp
or
adc
or
dec
cmps
dec
or
dec
and
movs
xchg
dec
dec
dec
pop
cmps
sub
and
imul
jns
or
repz
add
mov
retf
imul
push
adc
push
mov
and
and
dec
dec
and
push
leave
daa
dec
and
and
xchg
xchg
dec
and
and
and
mov
ror
dec
and
push
xchg
dec
cmp
je
dec
dec
call
ret
mov
ror
loopne
ss
jns
sub
retf
cwde
ins
lods
jb
jnp
(bad)
mov
rol
jmp
sub
push
mov
jnp
out
push
popf
movs
je
cmp
popf
jbe
pop
push
mov
mov
call
and
call
out
jne
pop
out
stos
add
xchg
cmp
stos
aas
repz
xor
cli
pop
sbb
stc
mov
cmp
repz
jno
dec
jmp
js
imul
dec
jg
(bad)
jmp
jge
jmp
jmp
imul
fucomip
inc
mov
lahf
movs
cmp
add
ror
mov
jns
aaa
outs
xchg
enter
mov
retf
sbb
adc
xchg
push
cs
rcr
test
xchg
enter
jnp
mov
ds
cmc
cmps
pop
lods
inc
sqrtps
inc
mov
push
jmp
idiv
cmp
iret
scas
jmp
pop
shr
cld
pop
fwait
sub
mov
(bad)
push
fld
test
mov
popa
neg
(bad)
jnp
lea
pop
dec
scas
jmp
lds
pop
loope
test
push
popf
xchg
jae
mov
cs
add
dec
rol
sub
pop
jae
jo
out
or
push
inc
xchg
mov
fimul
push
cmp
out
outs
shl
xchg
mov
popa
in
(bad)
mov
cmps
out
mov
mov
mov
rcr
cli
(bad)
jp
cmp
mov
ins
div
hlt
(bad)
add
js
outs
out
sar
mov
cwde
into
lahf
jns
(bad)
movs
fistp
mov
pop
inc
jge
dec
and
dec
sub
inc
push
sbb
scas
sbb
sbb
mov
xlat
fmul
push
push
popf
mov
imul
out
xor
fsubr
enter
ja
jnp
jge
cmps
mov
ins
or
xlat
(bad)
cld
daa
out
fwait
and
mov
or
dec
jl
and
sub
jnp
push
dec
mov
mov
fwait
jbe
imul
xor
ja
mov
mov
mov
mov
xchg
repnz
mov
jle
mov
mov
push
jo
sahf
xchg
pushf
(bad)
lahf
(bad)
sbb
jl
jge
shl
sbb
stc
fst
in
mov
pusha
cld
out
cld
sti
push
(bad)
movs
in
pop
hlt
mov
cmp
xchg
fisubr
jne
sbb
in
mov
rcr
inc
enter
inc
jne
stc
mov
aaa
dec
jge
xchg
jg
mov
lahf
int
call
sbb
(bad)
and
mov
repnz
fsub
dec
ds
mov
sbb
xchg
stos
(bad)
ins
xor
out
push
ret
mov
push
retf
cli
aad
mov
aas
loope
cli
inc
lods
inc
aaa
(bad)
bound
movs
cdq
pop
xor
mov
mov
adc
jg
out
jbe
(bad)
clc
sub
add
(bad)
lods
lahf
cwde
mov
(bad)
sub
je
add
fist
ret
daa
jmp
sbb
int3
inc
adc
out
xlat
add
pop
dec
cmp
mov
scas
outs
rol
jmp
pop
pushf
ds
(bad)
xlat
repz
pop
pop
addr16
ror
scas
iret
fdivr
mov
mov
inc
shl
mov
dec
mov
cmps
aam
or
inc
je
inc
jb
jno
std
icebp
lods
outs
push
or
mov
xor
(bad)
hlt
fsub
enter
pushf
pop
xchg
aad
jmp
aad
daa
adc
out
add
xor
jne
sub
push
push
mov
loopne
fldenv
mov
mov
cmc
add
mov
shr
ja
stos
sub
mov
mov
inc
mov
inc
enter
nop
cmp
lods
sub
pop
int
in
je
idiv
pop
aas
repnz
pop
in
int3
cmp
test
mov
fstp
dec
push
jno
pop
aaa
push
into
loope
(bad)
fimul
jbe
inc
sub
jmp
pushf
push
ror
loope
sti
sub
leave
xor
int
ret
ret
mov
sub
aam
aas
mov
gs
imul
adc
add
mov
fucomip
cmps
or
add
not
cmp
sub
dec
xor
mov
sbb
cwde
jmp
xchg
ds
or
es
dec
xchg
xchg
dec
and
push
jmp
xchg
je
sub
dec
nop
push
xchg
movs
popf
and
mov
cdq
and
push
jmp
movs
cdq
cmp
dec
sub
xchg
adc
xchg
movs
movs
and
pusha
popf
and
and
xchg
adc
test
push
xchg
xor
or
sub
xchg
cwde
adc
sub
nop
inc
dec
ret
add
sub
je
sub
add
cmps
sub
mov
ficom
and
xchg
and
xchg
adc
inc
mov
sub
xor
dec
dec
fs
cmps
xchg
movs
and
repnz
dec
test
xchg
leave
sub
and
adc
xchg
dec
xchg
dec
jmp
dec
and
xchg
xchg
fs
push
jmp
dec
and
xchg
dec
cdq
cmp
push
dec
and
xchg
popf
xor
xchg
daa
dec
dec
and
and
mov
shl
movs
xchg
test
sub
call
test
dec
test
sub
add
push
rcl
xchg
mov
and
xor
fs
dec
xchg
dec
push
inc
and
sub
xchg
dec
push
je
and
ror
mov
xchg
movs
cdq
cmp
sub
mov
loope
push
xchg
loope
xor
jmp
mov
mov
rcr
dec
and
mov
dec
dec
add
mov
sub
pop
pusha
test
and
dec
xchg
inc
dec
or
cmp
xor
push
cmps
or
test
xchg
add
push
sub
dec
xchg
push
and
and
xchg
xchg
dec
add
adc
aaa
jno
jno
ins
and
test
add
std
dec
pop
or
pop
and
xchg
inc
dec
cmps
dec
and
movs
xchg
dec
and
sub
xchg
dec
push
dec
and
xchg
xchg
dec
and
and
dec
sub
or
dec
and
and
push
xchg
dec
and
mov
xchg
movs
movs
xchg
movs
xchg
dec
push
dec
and
push
call
out
js
adc
shr
fadd
leave
not
(bad)
pusha
(bad)
cmc
cli
sub
stos
hlt
in
xchg
sbb
jno
daa
fwait
imul
stc
scas
repz
cwde
jmp
sbb
jg
pop
mov
jp
sbb
pop
in
fcomp
dec
jnp
mov
mov
push
fstp
sbb
add
inc
pop
mov
lds
inc
pop
ss
jmp
repz
not
xchg
stos
(bad)
xchg
loop
add
adc
pop
mov
push
jle
daa
outs
mov
imul
push
nop
cdq
dec
xor
int
cwde
adc
or
xor
fwait
push
leave
ret
mov
icebp
xor
js
xchg
sbb
and
test
out
lea
add
mov
pusha
mul
jo
add
fisubr
jmp
loopne
add
int
push
mov
into
out
cli
mov
lds
mov
lods
inc
cmps
mov
test
ret
ret
fadd
std
pop
sbb
pop
std
arpl
int3
int3
sub
pop
xlat
ss
add
retf
pop
inc
dec
imul
outs
push
cdq
dec
sahf
xchg
es
xchg
xchg
stos
popf
pop
xchg
pop
add
cmps
pop
neg
push
push
dec
leave
(bad)
pop
outs
fnsave
popa
ja
mov
pop
cli
lods
in
mov
mov
test
into
scas
inc
and
sub
push
mov
jp
pop
mov
pop
sbb
fild
(bad)
sti
in
pop
jge
stos
pop
mov
mov
aaa
push
pusha
idiv
(bad)
in
mov
push
sar
xchg
out
inc
and
lsl
cmp
movs
ja
sub
outs
xor
adc
cli
jne
ret
inc
scas
jmp
pop
lods
push
fwait
mov
add
mov
je
mov
push
jbe
mov
mov
mov
outs
cdq
cmc
stos
in
and
push
mov
pop
cmps
repz
fwait
std
shl
stos
je
test
loope
sbb
imul
loopne
pop
stc
out
inc
mov
push
dec
push
shl
sbb
sbb
sahf
popf
mov
arpl
(bad)
fld
pop
aas
pushf
outs
cld
sbb
nop
pop
out
(bad)
xchg
jg
jmp
out
jmp
sbb
(bad)
jecxz
pop
fdivr
add
sbb
mov
bound
sbb
cmps
sahf
or
addr16
mov
into
into
imul
je
outs
(bad)
or
lahf
in
arpl
cwde
push
xchg
inc
jmp
jg
hlt
(bad)
arpl
into
or
lods
push
mov
push
sub
add
(bad)
(bad)
pop
out
cdq
sub
lods
push
adc
cdq
sbb
hlt
repz
xchg
dec
out
(bad)
cmc
or
add
ret
imul
out
test
nop
jae
xor
mov
jg
push
enter
idiv
inc
mov
lods
(bad)
lods
retf
lods
dec
(bad)
ds
or
sub
inc
xor
pop
hlt
mov
(bad)
mov
mov
scas
xchg
dec
inc
(bad)
mov
lahf
lock
inc
cmc
push
push
das
lds
mov
inc
mov
add
jmp
mov
fwait
sub
or
jb
pushf
add
jae
aas
out
cs
outs
imul
add
std
std
dec
xchg
push
xchg
std
push
shl
jecxz
scas
inc
int3
aam
retf
sbb
xchg
enter
shl
lock
js
lods
repnz
sub
jbe
shr
push
pop
icebp
inc
push
fwait
daa
or
dec
(bad)
push
rol
cmc
jno
push
sub
mov
xor
xchg
xor
cld
adc
rcr
xchg
sahf
sub
out
cmps
lea
bound
retf
jg
fild
aam
stos
pop
outs
and
mov
xor
pop
test
dec
dec
addr16
pop
(bad)
push
cli
dec
push
or
das
(bad)
pop
jg
lahf
daa
add
fdivr
dec
push
sbb
jmp
cmp
dec
dec
jmp
jle
xchg
sbb
push
sbb
daa
ins
lods
xor
or
or
sbb
ja
mov
(bad)
mov
int
pop
inc
outs
bound
fiadd
inc
ja
div
mov
push
retf
push
cmp
pop
addr16
adc
sbb
inc
fisubr
push
(bad)
dec
jmp
sbb
xchg
sub
and
out
call
mov
movs
push
sbb
dec
mov
and
xor
inc
xor
xchg
test
rol
call
push
xchg
dec
test
movs
sub
je
xchg
add
sub
bound
sub
and
xchg
aam
sub
push
ret
popa
dec
push
push
arpl
movs
cmps
add
xchg
cmps
in
mov
xchg
cdq
and
mov
cwde
in
dec
adc
and
mov
push
dec
xchg
xchg
dec
adc
js
dec
inc
imul
dec
adc
push
push
add
mov
or
adc
xchg
xchg
adc
test
mov
movs
sub
xchg
push
repnz
xor
je
and
sub
sub
xchg
dec
sub
xchg
xchg
dec
cmp
dec
xchg
cmps
dec
dec
dec
and
dec
leave
and
dec
push
je
rcl
dec
and
mov
dec
and
push
xchg
dec
cmp
dec
and
xchg
xchg
dec
and
dec
pop
adc
dec
and
and
dec
and
popf
adc
xchg
xchg
dec
adc
and
mov
leave
rcl
and
and
movs
es
cmps
inc
dec
dec
and
dec
xchg
dec
and
movs
xchg
dec
and
movs
xchg
test
and
inc
jmp
dec
xchg
and
pop
xchg
adc
jmp
je
mov
dec
and
movs
test
xor
pop
and
push
test
lods
adc
push
rcl
bound
sbb
jo
cmps
cwde
ret
xchg
pushf
xchg
bound
push
sub
movs
mov
sub
xchg
xchg
movs
and
and
jge
es
mov
cmp
enter
jo
cmps
sub
adc
dec
dec
and
push
xchg
dec
and
mov
shl
push
je
rcl
test
xchg
dec
pop
and
and
xchg
movs
xchg
dec
push
dec
and
xchg
xchg
dec
and
and
dec
sub
xchg
dec
jg
aad
addr16
ficomp
pop
and
in
push
ins
mov
adc
lds
iret
cmps
gs
clc
jbe
(bad)
adc
or
cmp
push
push
inc
test
test
out
sbb
sbb
add
mov
jno
std
retf
cmp
dec
(bad)
mov
push
xor
pop
out
es
retf
pop
(bad)
ins
inc
pushf
cmps
sbb
jp
stos
js
call
bound
mov
adc
mov
fdiv
aas
shl
in
(bad)
pop
loop
jle
out
pop
rcl
out
xchg
in
imul
call
outs
ins
(bad)
std
jg
or
xor
jne
inc
nop
fucomi
cmp
jne
mov
jecxz
loope
stc
icebp
mov
xor
sub
cli
cld
pop
jge
(bad)
xor
rol
or
in
je
ss
xchg
mov
inc
sub
lds
dec
dec
xchg
add
cmp
loopne
pop
mov
(bad)
js
sti
repnz
sub
or
(bad)
test
cli
repz
inc
sbb
dec
sbb
in
aas
icebp
mov
jne
stos
js
mov
outs
ds
(bad)
mov
std
ss
test
arpl
mov
push
jle
jmp
pop
imul
push
clc
daa
inc
(bad)
aam
sbb
loop
inc
pop
lds
pop
fisub
mov
mov
xchg
mov
push
leave
movs
movs
lea
jae
in
mov
adc
out
inc
pop
and
xchg
mov
inc
bound
mov
mov
sti
call
and
inc
pop
ja
pop
and
sbb
mov
scas
in
std
das
dec
ja
(bad)
rol
xchg
stc
cmps
cwde
faddp
test
mov
sar
(bad)
aaa
jne
mov
jno
scas
mov
imul
pop
fidiv
and
test
push
imul
lock
into
in
mov
iret
and
(bad)
inc
je
dec
dec
loope
jb
push
adc
outs
push
pop
mov
jae
nop
dec
mov
push
xlat
xor
loop
fld
aaa
jnp
(bad)
and
xor
cli
pop
or
ja
std
cmc
push
fwait
lods
(bad)
jo
mov
pop
dec
dec
(bad)
sub
sub
stc
imul
fcomip
lods
dec
cmc
add
sar
mov
outs
(bad)
mov
(bad)
imul
xchg
stos
rol
leave
call
cmp
loopne
loop
stos
pushf
cmps
dec
dec
dec
aam
scas
fs
out
cmps
sub
fwait
aas
jmp
inc
retf
jp
push
dec
jbe
addr16
clc
mov
mov
jae
lock
add
retf
inc
mov
jge
inc
test
lods
push
gs
fadd
xor
(bad)
fistp
jb
fnsave
in
lea
mov
push
cmc
mov
or
sbb
fbstp
adc
push
cdq
xlat
jb
imul
push
aaa
shr
jb
test
jb
mov
jne
fsubr
jae
neg
mov
pop
push
mov
call
inc
(bad)
add
jecxz
lods
popf
pop
xor
lock
aas
lahf
push
mov
inc
mov
fmul
stos
cmc
lods
lods
mov
xor
cli
in
ds
mov
jnp
dec
addr16
lahf
push
(bad)
cli
int3
push
dec
adc
adc
jbe
popf
inc
call
push
dec
std
(bad)
sub
sub
in
cmp
loop
pop
ss
(bad)
mov
jmp
retf
stos
ds
lahf
icebp
xchg
(bad)
div
push
ins
popf
sbb
jg
mov
test
icebp
ja
jb
cmps
(bad)
ficomp
fistp
outs
inc
or
jmp
xor
mov
jne
xchg
(bad)
int3
mov
popf
inc
pop
(bad)
ins
push
inc
in
ss
ins
lahf
inc
jmp
sub
cmp
int
sbb
push
inc
leave
(bad)
arpl
leave
ret
cli
enter
out
mov
add
std
xor
xor
imul
cmp
sub
pop
mov
in
push
shl
push
outs
out
mov
cmp
in
mov
ss
cs
ja
icebp
stc
(bad)
inc
shl
pop
aam
add
push
cmc
fdivr
ja
xchg
loop
add
sti
aas
mov
cmp
aad
inc
enter
outs
sub
sti
cs
or
mov
enter
xlat
mov
dec
cmp
mov
int
ins
scas
(bad)
(bad)
icebp
(bad)
jb
mov
and
ret
(bad)
in
mov
sbb
fstp
stos
pop
mov
pop
xchg
xor
je
ss
pop
imul
or
dec
iret
dec
jecxz
mov
imul
ins
mov
(bad)
in
loop
stos
cmps
pop
ins
clc
fbld
test
and
loope
gs
fmulp
cmp
mov
iret
mov
adc
inc
lods
xor
mov
cmp
cmps
test
je
and
sub
daa
dec
xchg
xchg
xchg
dec
xchg
push
mov
adc
daa
dec
adc
sahf
adc
jo
push
sbb
pushf
sub
mov
sub
sub
sub
xchg
push
cdq
and
mov
mov
dec
dec
enter
adc
dec
or
add
ds
mov
test
mov
cmps
and
test
popf
and
movs
dec
outs
push
push
xor
and
and
out
dec
jmp
dec
adc
mov
xor
dec
xor
push
and
dec
pop
adc
rcl
xchg
daa
dec
add
movs
add
and
movs
xchg
dec
and
movs
xchg
dec
and
dec
dec
xor
dec
es
and
xchg
fs
push
xchg
dec
and
movs
jmp
xchg
dec
sub
daa
dec
or
jmp
sub
xchg
dec
dec
dec
xchg
dec
sub
xchg
dec
push
dec
and
xchg
popf
xor
ror
cmps
dec
or
push
xchg
dec
and
test
popf
and
mov
and
xchg
cdq
cmp
dec
dec
sub
test
dec
leave
daa
dec
xchg
xchg
xchg
dec
and
daa
dec
xchg
dec
pop
and
dec
dec
dec
xchg
dec
sub
xchg
dec
push
dec
and
xchg
dec
and
push
xchg
dec
and
movs
xchg
movs
xchg
adc
and
movs
cmps
sub
ret
push
sbb
xchg
cmps
xor
loope
sub
and
inc
test
lods
test
daa
add
inc
dec
push
test
xchg
rol
popf
push
dec
cdq
inc
jb
bound
push
sub
xchg
push
sub
push
inc
sub
sahf
adc
mov
sbb
push
push
jns
mov
dec
ins
push
push
test
movs
xor
dec
retf
and
movs
movs
xor
jns
mov
fs
dec
push
dec
and
xchg
dec
cmp
dec
and
and
daa
dec
and
movs
jmp
cmp
xchg
dec
adc
dec
dec
and
push
xchg
daa
dec
and
push
call
in
(bad)
push
pop
cmp
in
das
inc
dec
iret
rcr
(bad)
jge
inc
pop
or
xchg
jmp
cli
inc
jno
daa
aam
adc
cmp
jmp
call
inc
xor
jg
pop
jmp
pusha
aam
sub
cmc
test
(bad)
std
ins
jae
aas
jmp
jg
aas
mov
mov
ds
adc
icebp
test
add
call
jmp
psrlq
mov
sub
ja
jge
cli
clc
mov
add
xlat
inc
sar
stos
fcom
pop
sti
scas
sbb
cmc
mov
xlat
xchg
mov
mov
add
pop
cli
sbb
(bad)
dec
cmp
pop
xor
arpl
cdq
fcomp
aaa
psubd
gs
cli
push
sub
cli
mov
popf
jbe
mov
repz
call
lea
test
dec
adc
cld
push
enter
xchg
popa
sti
inc
daa
sti
jg
xor
pop
icebp
jae
mov
nop
out
pop
pop
jmp
fbld
push
pop
ins
push
add
push
cmp
push
into
(bad)
jae
stc
sub
aas
in
mov
xchg
movs
into
jne
stos
pop
fnstsw
pop
mov
xor
(bad)
add
pop
inc
sub
sub
in
retf
adc
adc
lods
sar
arpl
div
inc
xor
inc
cli
(bad)
popf
push
(bad)
int3
jl
lea
fist
add
mov
leave
inc
dec
sar
push
and
push
cli
add
cmp
sbb
jb
pop
xchg
bound
jae
push
cmp
pop
daa
dec
jmp
pop
out
jecxz
fild
push
aad
in
(bad)
push
cmps
mov
cmc
cmps
es
jns
scas
and
xlat
mov
inc
int3
push
dec
sbb
dec
mov
mov
rol
loopne
out
cli
push
or
daa
test
jbe
adc
mov
adc
shl
mov
jae
std
jp
stos
popf
or
imul
daa
(bad)
push
xchg
sti
inc
mov
outs
cmp
dec
sar
mov
aas
push
cli
xchg
ins
pushf
sahf
call
add
cmps
(bad)
jp
ss
stos
fdivr
mov
mov
mov
cld
(bad)
add
(bad)
inc
call
(bad)
inc
adc
pop
sbb
pop
inc
retf
sub
imul
push
jmp
xchg
fsubr
pop
movs
pop
ja
out
out
mov
lods
sub
dec
pusha
and
push
shl
enter
cmp
mov
pop
inc
mov
ins
inc
imul
(bad)
test
movs
cmc
pop
mov
lods
ins
sbb
mov
(bad)
sub
push
xor
jecxz
je
mov
outs
pop
push
loop
in
ja
pop
mov
xchg
pop
mov
retf
icebp
popf
cmps
mov
(bad)
aad
mov
or
cmp
sahf
and
add
sub
pushf
xchg
imul
xor
lock
cld
sub
inc
pop
sahf
xchg
test
push
pop
xor
je
mov
(bad)
scas
jb
cmp
enter
das
aas
and
cld
loopne
ror
inc
push
int
es
mov
and
lea
shr
lods
sbb
sub
aad
test
and
cdq
mov
mov
ret
jb
jb
dec
sub
sub
idiv
add
lods
mov
out
push
(bad)
ds
data16
paddusw
out
or
pop
pusha
sub
mov
jmp
cmp
loope
fistp
int
add
add
ins
outs
xor
sti
jmp
enter
je
(bad)
ja
repnz
cli
push
cli
push
aas
enter
push
lods
shl
cmp
or
xchg
(bad)
in
lods
out
fwait
cli
mov
pop
push
(bad)
xlat
(bad)
in
and
andnps
cmps
add
pop
arpl
sbb
out
rcl
jmp
inc
inc
pop
outs
dec
mov
xchg
inc
pop
scas
int3
mov
pop
pop
stos
jno
shr
cmps
cwde
(bad)
pop
imul
cdq
lods
imul
sbb
cld
lds
jne
fidivr
xor
mov
call
cld
inc
xor
int3
clc
sbb
push
push
jns
cli
jbe
(bad)
call
sti
sub
pushf
push
mov
lods
ror
stc
mov
(bad)
gs
retf
stos
test
movs
std
sahf
cmp
scas
in
(bad)
dec
scas
test
cmp
gs
push
sbb
jnp
jg
das
sbb
jg
rcr
fs
mov
daa
push
int3
jge
cmp
push
shl
pop
xchg
sub
(bad)
cli
sbb
lods
inc
gs
dec
cmc
js
jmp
xchg
ror
sbb
bound
mov
inc
mov
(bad)
movs
aas
scas
pop
add
adc
hlt
mov
lods
aaa
sbb
imul
sti
cmps
dec
(bad)
stos
jp
lahf
rcr
out
xchg
adc
(bad)
rcr
(bad)
bound
jns
cmp
adc
ins
les
(bad)
leave
adc
inc
pop
loopne
(bad)
movs
xchg
mov
movs
and
iret
push
repnz
scas
aad
pop
jmp
ja
add
jle
cmc
fadd
and
push
js
and
mov
dec
ret
sub
test
mov
neg
js
or
mov
icebp
inc
sbb
xor
cmp
fcmovnb
xchg
push
inc
mov
imul
sbb
movs
(bad)
bound
aaa
add
or
xchg
pop
mov
cmps
(bad)
test
les
adc
pop
jge
push
inc
ror
push
mov
jmp
dec
add
dec
in
jae
cmp
in
and
adc
dec
adc
and
push
adc
jns
dec
ret
xor
movs
leave
dec
adc
and
push
rol
mov
jo
test
popa
jmp
imul
cmps
and
xchg
cmps
test
mov
aam
mov
test
and
push
loopne
xchg
movs
xchg
xchg
sub
movs
and
mov
xor
leave
push
and
jne
and
push
leave
mov
retf
xchg
dec
mov
retf
lds
xchg
dec
dec
dec
push
dec
and
dec
and
and
mov
movs
cdq
and
mov
dec
popf
xor
je
rcl
shl
xchg
popf
and
push
xchg
dec
and
movs
jmp
xchg
dec
sub
dec
dec
dec
nop
dec
and
movs
and
dec
and
dec
adc
loope
dec
xchg
xchg
or
push
xchg
dec
pop
and
dec
dec
dec
and
push
xchg
daa
dec
add
push
mov
in
dec
dec
dec
xor
dec
xchg
cmps
inc
dec
and
dec
sub
xchg
dec
push
dec
and
xchg
cdq
cmp
xchg
dec
xchg
daa
dec
dec
and
sub
dec
sub
sub
dec
sub
and
dec
dec
sub
dec
push
and
shl
add
push
aam
xchg
cdq
add
inc
test
xchg
or
and
and
mov
and
mov
in
xchg
aam
mov
scas
or
and
xchg
pushf
adc
enter
ror
test
test
scas
mov
mov
and
ret
in
jnp
mov
and
sub
je
movs
xchg
dec
and
or
leave
and
ror
pop
and
movs
movs
and
dec
sub
and
dec
dec
and
push
leave
ror
sub
je
push
leave
and
dec
push
dec
ror
dec
adc
(bad)
xlat
mov
jo
ret
nop
jns
imul
(bad)
and
fistp
pop
icebp
push
scas
ds
xchg
jnp
jae
push
cld
dec
shl
pop
shr
js
add
push
pop
mov
pop
inc
(bad)
mov
fimul
pop
lahf
pop
jmp
hlt
mov
fist
or
inc
nop
pusha
lods
scas
cdq
cmc
mov
gs
scas
test
mov
jp
std
jb
(bad)
popa
cmp
inc
cmp
add
aad
rcr
and
inc
inc
fcos
add
idiv
add
dec
mov
adc
sbb
movs
retf
cmp
mov
sti
pop
lock
imul
call
jmp
sub
sbb
inc
fisttp
cmp
jne
push
pop
aaa
xor
in
sub
jmp
ret
jns
jmp
call
jmp
xor
inc
test
inc
hlt
xchg
adc
retf
movs
fs
js
outs
loope
jae
hlt
sbb
pop
cdq
jae
pop
test
inc
mov
ja
inc
mul
mov
std
popa
scas
stos
(bad)
lock
push
paddb
cwde
add
lock
pop
push
fwait
out
lahf
out
inc
movs
mov
sub
xchg
inc
(bad)
add
cmc
lds
push
scas
dec
outs
lods
fdiv
repnz
repz
in
push
inc
cmp
test
cmp
test
cli
mov
push
push
(bad)
xor
jp
inc
and
mov
or
shl
mov
cmp
aam
mov
fs
add
out
outs
imul
mov
(bad)
(bad)
enter
xchg
cmp
call
xchg
retf
pop
shr
mov
cmps
jmp
dec
cmp
jmp
lock
clc
push
or
pop
out
adc
cli
inc
mov
pop
rcpps
(bad)
leave
pusha
cmc
call
es
jg
mov
into
pop
mov
cmps
retf
adc
fdiv
pop
stc
mov
cmp
repnz
pop
aas
lahf
shr
push
mov
cli
fcomp
mov
cmps
lds
nop
ds
lds
out
repnz
es
sub
pop
and
push
mov
and
push
cmps
push
mov
popf
shl
dec
data16
mov
xchg
xchg
pop
out
out
sti
loop
mov
adc
sar
push
addr16
jle
test
xchg
cmc
or
adc
xchg
mov
cmp
or
fidivr
hlt
sub
mov
ja
cmp
ja
mov
jb
mov
lods
add
ss
jmp
inc
pop
bound
dec
xchg
movs
loopne
adc
inc
fisttp
daa
jnp
mov
add
sbb
js
adc
cmp
or
xor
mov
xchg
shl
shl
ja
xchg
pop
(bad)
pusha
(bad)
movs
call
pop
sahf
test
adc
push
ss
cmps
movs
jmp
adc
adc
or
std
pop
cmps
mov
mov
xchg
inc
shr
dec
mov
div
cmps
clc
jle
mov
mov
cmp
lods
mov
fild
loop
int3
jg
iret
cmps
and
sbb
mov
loop
dec
call
sub
gs
mov
mov
iret
mov
imul
xchg
(bad)
xchg
add
stos
cmps
test
cli
mov
jmp
call
(bad)
mov
in
xor
fimul
adc
xchg
(bad)
mov
(bad)
scas
in
movs
aad
jge
imul
jae
and
or
dec
pop
(bad)
lea
imul
fsubr
mov
call
add
stos
cdq
sbb
dec
push
adc
inc
inc
cmps
cli
fistp
dec
jae
mov
xchg
pop
(bad)
hlt
outs
dec
xor
xor
mov
xor
out
loopne
mov
sub
jge
mov
mov
out
fsin
outs
clc
xor
lods
xchg
arpl
icebp
ins
cs
into
mov
jmp
idiv
inc
imul
shl
xchg
mov
push
iret
cmps
xor
(bad)
dec
mov
cli
inc
or
jmp
mov
mov
test
push
gs
mov
fcmovnu
ret
push
lahf
in
and
jmp
icebp
gs
out
push
cmc
fstp
test
shl
outs
std
sub
out
mov
std
hlt
cmp
lods
aas
(bad)
pop
mov
js
add
inc
add
sub
stos
ins
cli
dec
inc
mov
hlt
out
mov
sar
pop
push
jmp
lahf
inc
push
mov
mov
lahf
into
outs
sar
mov
cmps
xchg
shr
jnp
hlt
dec
cmc
jmp
pop
es
mov
ficomp
ins
outs
jmp
fild
dec
iret
mov
sbb
adc
scas
idiv
(bad)
loopne
sbb
inc
rcl
in
pop
cmc
int3
jne
cli
dec
div
aas
cmp
shr
cmps
fwait
cli
enter
fs
fld
mov
fiadd
or
push
loop
xchg
pop
lea
stos
in
cmc
and
ret
imul
jmp
dec
mov
jns
std
aad
dec
sbb
out
jmp
mov
ret
out
cmp
xchg
cwde
push
xor
js
push
mov
or
jnp
jg
test
movs
test
out
mov
pop
sub
loope
dec
jmp
aaa
push
out
daa
xor
add
movs
test
jne
(bad)
not
mov
gs
outs
dec
mov
div
add
mov
push
xchg
in
movs
fld
jg
xchg
xor
push
loopne
movs
ret
push
lods
xor
and
in
or
imul
cld
pop
stc
rol
sbb
or
xor
jnp
ss
sahf
loope
and
add
push
push
cmp
inc
std
stc
fisubr
aad
shl
aam
jmp
jge
and
mov
ins
mov
lods
lods
cli
nop
inc
std
loope
add
js
frstor
or
std
pushf
mov
nop
dec
test
and
mov
push
dec
and
inc
jmp
lods
or
dec
and
push
mov
push
xchg
xchg
dec
dec
daa
dec
dec
or
adc
dec
dec
retf
adc
push
and
cmps
push
push
or
repnz
inc
xchg
mov
ja
dec
pop
sub
hlt
xchg
test
mov
fwait
jb
or
nop
sbb
in
stos
dec
pop
cdq
dec
push
sub
les
sbb
push
mov
push
dec
cdq
adc
push
dec
adc
sub
dec
and
xchg
dec
cdq
and
movs
xchg
dec
cmp
fs
dec
dec
movs
cdq
and
movs
xchg
dec
and
and
dec
dec
dec
and
push
xchg
dec
and
movs
xchg
dec
and
or
and
mov
add
and
cs
and
and
popf
add
sub
je
movs
xchg
dec
and
sub
dec
and
xchg
movs
adc
dec
and
dec
dec
popf
xor
pop
and
loope
sub
sub
sub
rcl
js
cdq
and
or
dec
sub
xchg
sub
test
rcl
dec
or
inc
dec
inc
dec
loope
xchg
movs
loopne
add
shl
test
loopne
movs
shr
or
mov
or
mov
fwait
dec
adc
add
mov
cmps
dec
dec
pusha
repnz
mov
test
adc
push
jno
inc
adc
push
mov
xor
stos
sub
sub
(bad)
pop
pop
push
lods
mov
inc
dec
dec
dec
and
dec
xchg
dec
and
mov
ror
daa
dec
and
movs
xchg
dec
xchg
adc
dec
and
and
dec
sub
pushf
add
movs
jmp
dec
and
movs
xchg
dec
xchg
xchg
dec
xor
je
and
xchg
dec
xor
xchg
dec
adc
dec
dec
xchg
dec
and
dec
xchg
lahf
call
in
mov
ret
stos
je
adc
imul
inc
cmps
out
inc
cmps
mov
cmp
add
(bad)
cld
addr16
inc
outs
jge
xchg
stos
div
(bad)
(bad)
aas
repz
mov
jmp
mov
push
retf
jg
pop
retf
leave
movs
dec
cmp
xor
mov
scas
sbb
pop
pop
iret
stos
inc
mov
cdq
jg
mov
imul
inc
repnz
scas
dec
jno
inc
cmp
inc
out
jp
inc
ds
sti
cli
fsubr
fistp
sahf
add
pushf
div
inc
dec
fidivr
mov
mov
test
sub
(bad)
mov
and
clc
fldcw
loope
iret
push
cli
movs
sar
jecxz
pop
sub
aam
pop
(bad)
inc
pop
cmps
stc
vpcmpeqw
inc
btc
out
mov
inc
movs
aam
pop
sar
cmp
sahf
stos
cmc
dec
test
jae
sti
ret
fmulp
sti
jb
nop
imul
sub
in
movs
fucomi
jno
xchg
ins
jecxz
jo
test
dec
daa
rep
sbb
xor
fst
mov
pusha
lock
and
iret
call
or
jp
je
call
add
jno
mov
call
scas
repnz
mov
scas
sbb
dec
outs
(bad)
fst
sub
pop
fisttp
push
xchg
pop
add
push
pop
data16
(bad)
sti
fmul
dec
cmp
out
pop
aad
jmp
cli
or
mul
fdivr
inc
movs
scas
inc
dec
aaa
cld
hlt
test
push
push
scas
pop
data16
inc
jmp
inc
pop
in
inc
aaa
inc
dec
push
int
xchg
cdq
dec
fild
addr16
(bad)
std
popf
aam
fwait
mov
pushf
ret
jmp
pop
jmp
cmovl
dec
in
loop
movs
mov
jge
mov
mov
(bad)
aas
lods
or
retf
out
push
mov
inc
pop
scas
and
dec
mov
add
stos
mov
mov
lea
inc
jl
movs
sbb
fsubr
aas
pop
xor
addr16
lds
mov
addr16
pop
(bad)
adc
xchg
mov
pop
aaa
loope
add
mov
jp
retf
test
pop
push
xor
fs
mov
dec
int3
dec
(bad)
xchg
xor
pop
mov
mov
mov
test
nop
call
jb
jmp
pushf
cmp
add
push
js
dec
in
inc
jecxz
in
mov
aad
cmp
aaa
sti
jg
mov
mov
jmp
fcom
cmp
xor
add
fdivr
test
pop
addr16
cmp
cmp
jle
adc
ret
shr
jne
mov
adc
dec
scas
xchg
cmc
adc
cli
xchg
sbb
xor
sbb
jle
cmc
outs
movs
pop
arpl
sbb
add
cli
or
sti
fbld
cmps
push
mov
pop
inc
add
cmp
push
inc
sub
clc
dec
sbb
sub
cmp
sbb
mov
js
movs
mov
sbb
pop
mov
fcomp
aad
jns
xor
cwde
(bad)
lods
jmp
dec
xlat
push
sbb
or
outs
arpl
nop
pop
cs
cmc
jnp
cmps
adc
xor
int3
aad
pop
and
inc
gs
inc
loopne
inc
shl
or
iret
in
loop
int3
int3
mov
push
int3
sbb
dec
ror
sahf
cmp
dec
leave
xchg
nop
fwait
pop
fcom
sub
(bad)
jo
dec
xor
lods
xchg
sbb
lods
push
ins
lods
fistp
fidivr
les
or
jle
aad
push
dec
dec
mov
loop
mov
inc
xor
movs
mov
fldenv
sub
xchg
addr16
je
imul
xor
push
cmps
(bad)
outs
xor
pop
jecxz
push
mov
inc
dec
lahf
dec
jmp
popf
aaa
dec
pop
jbe
popa
aad
imul
cmp
mov
cmps
(bad)
adc
mov
xchg
lea
(bad)
push
out
aaa
add
fld
outs
aad
or
imul
cmc
pop
stos
scas
sub
pop
dec
sub
jle
cmc
aas
nop
mov
test
enter
retf
or
shr
ss
addr16
xchg
inc
repnz
ret
repz
pop
sub
inc
xchg
loop
adc
test
retf
ins
ins
pop
ret
sti
sub
stos
scas
bound
mov
inc
inc
shl
in
push
mov
xorps
(bad)
fst
and
jecxz
lahf
pushf
adc
xlat
inc
sub
add
inc
inc
sbb
sti
pop
out
in
sub
cmp
sbb
out
cld
mov
in
enter
loopne
add
push
fdivr
pop
pop
pop
sub
stos
test
xchg
push
fnstenv
(bad)
retf
jecxz
(bad)
lds
shr
aas
call
pop
jg
nop
mov
push
xchg
add
aaa
mul
ins
lods
(bad)
lods
lods
inc
mov
std
aaa
sub
jmp
xchg
pop
sub
jbe
add
clc
es
sbb
and
sbb
nop
ins
ret
out
jge
(bad)
lods
mov
lods
mov
push
movs
dec
inc
mov
icebp
std
imul
adc
shr
loop
mov
lahf
movs
iret
out
aas
jmp
pop
aad
adc
add
cmp
cld
es
pop
adc
les
ficomp
pop
ret
shr
(bad)
lods
and
mov
sti
dec
pop
hlt
fmul
push
iret
stos
mov
icebp
mov
pop
and
jb
cmp
fistp
std
lahf
cmps
pushf
xor
pop
mov
cli
out
bound
(bad)
daa
jmp
fs
out
call
mov
fild
sbb
mov
fldenv
xor
add
loope
add
mov
mov
jecxz
pop
je
push
lods
inc
xor
imul
add
(bad)
mov
sub
mov
inc
xor
mov
sahf
inc
aam
sbb
or
sub
imul
clc
(bad)
jo
mov
jnp
outs
cld
fwait
push
sbb
ins
les
sub
hlt
sbb
adc
dec
pop
(bad)
inc
stos
add
dec
mov
(bad)
ins
in
adc
hlt
pop
xchg
inc
ret
aaa
clc
push
adc
jg
test
(bad)
xchg
adc
arpl
sahf
push
call
aam
ret
cmp
popa
(bad)
sub
outs
mov
sbb
fst
popf
mov
or
mov
sahf
and
ret
adc
xchg
call
movs
sub
sub
xchg
les
or
cmp
cmps
push
xchg
test
jns
dec
movs
xor
xor
retf
adc
adc
mov
sub
jae
push
in
mov
mov
xchg
movs
xor
xor
adc
push
cwde
xchg
leave
mov
movs
or
ficomp
sub
test
or
dec
es
push
push
mov
dec
leave
xchg
xchg
leave
sub
dec
and
sub
xchg
inc
xchg
movs
xchg
dec
pop
and
dec
sub
xchg
push
xchg
dec
and
movs
leave
ror
dec
and
push
xchg
dec
and
movs
xchg
dec
and
dec
dec
cmp
dec
and
and
sub
test
xchg
popf
xor
jmp
cdq
sub
dec
push
and
xchg
xchg
xchg
daa
dec
dec
and
dec
sub
xchg
dec
push
dec
and
js
xchg
cwde
movs
or
dec
sub
adc
je
mov
xchg
dec
sub
dec
and
inc
fs
lock
adc
xchg
mov
dec
and
push
jmp
and
xchg
dec
pop
and
rcl
dec
sub
pop
xchg
inc
sub
xor
push
dec
sub
pushf
cmps
fadd
imul
cmp
push
pusha
mov
jmp
fldenv
aaa
sub
jb
test
sar
in
inc
das
inc
add
xor
add
dec
xchg
nop
mov
hlt
push
ds
pop
rol
sar
movs
jne
sub
dec
movs
dec
and
dec
push
dec
and
xchg
xchg
dec
and
daa
dec
and
movs
xchg
dec
and
movs
xchg
ret
adc
popf
and
push
xchg
dec
and
movs
xchg
dec
and
dec
dec
popf
xor
push
dec
daa
dec
dec
dec
and
push
xchg
cmps
dec
xchg
xchg
xchg
dec
and
ror
dec
push
dec
daa
dec
dec
call
in
xchg
sub
xchg
pop
add
mov
adc
in
dec
pop
cmp
mov
daa
scas
out
xchg
out
lds
(bad)
lods
ja
paddb
out
pop
mov
aam
mov
or
mov
dec
xchg
and
mov
mov
or
jmp
fs
shl
idiv
inc
inc
(bad)
(bad)
mov
lahf
push
jmp
int3
imul
(bad)
outs
(bad)
test
inc
and
pop
retf
cmc
dec
push
or
call
cmp
leave
ja
mov
xlat
jg
mov
jg
xor
and
jle
sbb
imul
iret
sbb
fs
iret
jmp
in
inc
iret
outs
pop
fnstsw
cld
arpl
gs
dec
ss
dec
in
xchg
mov
jecxz
jmp
dec
jecxz
mov
pop
cmc
pop
jmp
std
fisttp
(bad)
mov
test
push
in
das
jmp
(bad)
idiv
(bad)
(bad)
ins
(bad)
sbb
xchg
imul
pop
jmp
jle
dec
aas
in
(bad)
add
neg
mov
xor
add
shl
cdq
or
in
(bad)
sti
xchg
cmp
sbb
dec
dec
jp
ins
sahf
popf
xchg
jg
enter
add
add
fnstcw
xchg
ins
adc
jbe
push
jne
neg
hlt
mov
sahf
jmp
fnstsw
or
mov
outs
jae
stos
jge
inc
jmp
pop
cli
dec
push
push
xor
dec
add
xchg
pop
xchg
std
mov
sar
outs
pusha
mov
mov
jbe
add
mov
in
mov
aaa
cli
es
retf
or
cmp
dec
div
out
dec
xchg
mov
pop
sar
push
(bad)
mov
sti
mov
cmp
xor
mov
mov
call
push
jbe
jge
pop
loop
stc
in
mov
std
outs
pop
(bad)
shl
sar
mov
je
imul
(bad)
jp
and
retf
aas
lods
mov
pop
std
add
test
cmp
fdiv
fwait
aad
jne
jo
(bad)
jne
sbb
xlat
cmps
cld
out
(bad)
jl
jg
sub
mov
ins
and
sbb
add
sbb
aas
aad
xor
in
sub
inc
jmp
push
and
or
test
or
out
adc
xchg
xchg
cwde
xor
jmp
jns
(bad)
outs
mov
inc
lea
mov
enter
pop
arpl
std
lahf
iret
not
push
sar
fisubr
cs
cmp
ret
std
mov
pop
xlat
fcom
out
inc
xor
pop
cli
(bad)
not
imul
loop
mov
lahf
jmp
les
sbb
mov
jb
pop
dec
xlat
inc
call
or
(bad)
mov
(bad)
aad
add
test
(bad)
outs
dec
dec
gs
add
jmp
(bad)
scas
xor
into
mov
out
and
aad
(bad)
mov
and
xchg
dec
scas
lods
dec
icebp
in
mov
loope
and
sbb
dec
pop
shr
xchg
fidiv
pop
pop
rcr
hlt
fcmovu
hlt
cmc
(bad)
jg
mov
cmp
out
cmp
mov
gs
adc
add
inc
sbb
or
sbb
loopne
aam
jns
mov
mov
cmc
push
pop
repz
(bad)
(bad)
(bad)
inc
in
xchg
or
mov
stos
aas
jmp
mov
or
fistp
pop
mov
retf
pop
pop
loope
and
mov
stc
and
sbb
(bad)
call
xchg
fsub
gs
push
jge
int
inc
xchg
push
xor
shr
inc
push
dec
sub
sar
lods
push
mov
arpl
call
mov
(bad)
movd
mov
inc
ret
xchg
mov
or
inc
movs
fs
pusha
jne
cmc
xchg
ret
fldcw
cmp
xchg
neg
mov
push
jbe
sar
in
push
sar
enter
cld
pop
out
(bad)
mov
out
pop
pop
loope
sub
push
retf
dec
shr
ins
jle
cmp
mov
cmps
imul
pop
imul
adc
and
hlt
imul
mov
sub
mov
sbb
sbb
cmp
jg
lds
test
sbb
cmp
jg
jg
xor
fld
arpl
cmp
xchg
push
fnstenv
pop
arpl
fist
adc
push
cmp
data16
sti
inc
and
movs
std
stos
(bad)
cmp
mov
imul
sar
xchg
push
push
in
(bad)
fadd
mov
mov
ror
jmp
(bad)
add
packssdw
loopne
pop
enter
retf
(bad)
jbe
pushf
pop
loope
mov
jo
jmp
hlt
jbe
in
mov
scas
mul
pusha
imul
mov
out
ins
pushf
or
call
aam
sahf
mov
lea
inc
js
add
(bad)
and
cmps
aas
shl
(bad)
(bad)
mov
add
aad
pop
out
mov
mov
push
pop
pop
outs
push
mov
sub
sti
mov
outs
pop
sbb
out
addr16
jnp
stos
inc
test
and
mov
out
int
jmp
jnp
inc
cmp
js
ficomp
inc
jg
sar
inc
mov
repz
movs
and
loope
mov
mov
cdq
sub
test
jle
fucomi
jno
mov
mov
mov
iret
scas
inc
jg
mov
das
movs
je
sbb
jnp
lahf
sbb
or
mov
sbb
xchg
dec
cmp
aas
mov
fs
out
aas
(bad)
in
pop
xchg
mov
cmp
out
dec
in
test
push
je
jg
xchg
add
jns
and
jb
pop
sub
inc
sub
and
sbb
jge
mov
dec
mov
(bad)
icebp
ret
lods
test
jno
and
cmps
loope
jbe
clc
cmp
idiv
les
shr
iret
jbe
adc
jns
call
jno
mov
mov
and
retf
std
sbb
loopne
loope
add
or
fst
enter
stos
mov
add
push
xor
jl
pusha
out
fnstcw
dec
test
push
pop
jae
in
mov
adc
push
fs
inc
rcr
push
and
test
dec
push
and
or
sub
xchg
and
sbb
test
movs
mov
adc
sub
add
dec
dec
test
dec
mov
sub
mov
xchg
mov
dec
ror
adc
sub
adc
das
jo
dec
addr16
xor
test
and
dec
dec
shl
es
push
movs
xchg
xchg
nop
push
lds
jb
adc
movs
and
dec
sub
xchg
dec
push
dec
and
push
xchg
dec
xchg
push
jmp
xchg
dec
and
and
xor
dec
and
xchg
xchg
dec
and
and
and
xchg
sahf
adc
rcl
ror
sub
dec
cmp
dec
daa
dec
or
and
cdq
and
push
dec
dec
movs
call
dec
push
dec
and
or
and
xchg
movs
leave
loope
xchg
mov
dec
cmp
adc
xchg
xchg
xchg
and
sub
and
xchg
dec
and
push
xchg
dec
and
movs
lock
dec
and
push
daa
sub
and
daa
dec
pushf
and
and
je
movs
mov
and
xchg
push
xchg
dec
sub
mov
xchg
xchg
xchg
movs
inc
push
retf
push
test
je
mov
ret
add
dec
or
ss
dec
xchg
xchg
iret
push
cs
xchg
xchg
push
movs
and
mov
pop
push
push
sub
xor
adc
add
shl
push
sbb
loop
jmp
dec
and
adc
sub
dec
and
adc
dec
dec
test
adc
xchg
dec
pushf
and
xchg
or
dec
and
push
leave
and
dec
push
dec
and
xchg
xchg
dec
and
es
xchg
sub
and
xchg
xchg
dec
rcl
dec
and
movs
jmp
dec
and
movs
and
rol
shl
gs
daa
or
nop
cmp
sti
sub
push
inc
dec
mov
jns
jl
rol
in
loopne
loope
inc
xor
aad
sar
cli
xchg
ss
pop
or
mov
mov
fist
inc
push
scas
aad
(bad)
out
ret
jecxz
int3
fist
dec
xor
fild
mov
cmc
push
cmps
xor
jnp
cld
and
retf
sar
aas
aam
je
(bad)
xlat
xchg
mov
fmul
(bad)
std
xor
stos
xchg
shr
mov
ret
loop
out
add
mov
hlt
push
push
sub
and
cwde
inc
mov
mov
jmp
sbb
mov
xchg
pop
mov
pop
mov
into
jg
(bad)
jnp
cs
push
xor
jne
inc
iret
cmps
hlt
inc
icebp
lea
mov
cmp
cld
in
stc
aas
cld
or
aad
add
(bad)
push
cli
or
inc
ret
(bad)
push
mov
ins
mov
out
push
xchg
sar
add
jo
sar
mov
mov
sub
paddusw
(bad)
jg
outs
inc
rcl
aam
push
outs
dec
jbe
retf
icebp
jo
lahf
jmp
xlat
into
mov
xlat
addr16
pop
push
pop
clc
shr
in
hlt
repz
push
nop
loope
xor
out
jmp
hlt
loop
jmp
push
ret
mov
mov
(bad)
or
loopne
into
stos
stc
mov
(bad)
lahf
aas
sbb
ret
sbb
jg
inc
cli
jg
inc
rcl
cmp
dec
gs
jmp
retf
test
inc
std
push
std
add
cmps
out
jmp
mov
mov
cli
xlat
(bad)
call
and
(bad)
cmps
mov
inc
xchg
dec
jae
mov
add
sbb
iret
std
retf
xchg
stos
inc
and
retf
arpl
inc
aam
pop
inc
or
jmp
ja
xor
mov
pop
out
outs
std
and
cli
push
(bad)
int3
pushf
xor
outs
pop
xlat
les
or
add
pop
and
jecxz
adc
call
jge
jmp
jg
(bad)
std
ds
dec
cmc
pop
in
mov
mov
or
pop
out
fnsave
addr16
lds
mov
mov
in
mov
jnp
movs
gs
mov
adc
sbb
std
out
aas
mul
fsin
jp
ret
imul
gs
imul
pop
std
mov
inc
in
lds
lahf
rcl
popa
(bad)
(bad)
enter
mov
data16
jnp
mov
cmp
lods
in
inc
iret
push
push
aam
(bad)
push
or
mov
icebp
retf
sbb
xor
sbb
push
mov
ins
jbe
pushf
bound
cmp
pop
jmp
mov
iret
fwait
lea
mov
mov
retf
xor
cmp
inc
aam
dec
xchg
sbb
mov
out
ja
arpl
add
movs
adc
xor
mov
xor
loopne
test
movs
xchg
mov
jnp
push
add
add
loope
and
call
outs
ror
mov
leave
sub
rol
movs
mov
(bad)
int
push
sub
movs
aam
inc
addr16
ficomp
xor
jg
jg
inc
lds
cld
adc
lds
je
stc
retf
lods
jmp
cmps
mov
jnp
aas
icebp
mov
enter
dec
add
scas
sbb
call
test
lea
std
adc
mov
mov
(bad)
pop
jnp
(bad)
cli
scas
dec
xor
fstp
and
push
out
icebp
dec
inc
ja
stos
fld
xchg
cmp
dec
jmp
jmp
dec
nop
pop
hlt
add
add
(bad)
adc
cmp
xchg
mov
enter
outs
out
jo
mov
popf
or
mov
aaa
pop
mov
cmps
sbb
mov
mov
std
std
mov
cdq
jnp
popf
pop
pusha
add
fdivp
pop
hlt
xchg
sbb
inc
scas
mov
sbb
mov
fisubr
ret
xlat
inc
pop
(bad)
fnstenv
fnstenv
mov
xchg
xchg
xlat
daa
mov
nop
imul
push
stos
or
ror
add
test
mov
jmp
mov
inc
sub
ja
jbe
imul
fadd
out
imul
adc
pop
cmp
sbb
sbb
(bad)
std
cmc
popf
and
outs
stos
mov
test
inc
enter
add
(bad)
lods
arpl
das
cmps
cwde
lods
fld
push
cmps
pop
mov
mov
push
jo
std
add
movs
stc
int3
(bad)
mov
lods
cmp
xlat
jmp
fucomi
fst
push
je
jle
jg
retf
es
xchg
pusha
popa
cmp
pop
adc
inc
call
repz
test
xor
mov
(bad)
je
bnd
mov
mov
cli
dec
or
xchg
outs
push
retf
sub
ror
stos
out
cwde
jo
adc
dec
mov
push
or
fnsave
sar
ins
aas
lods
outs
or
xor
shr
sub
jmp
xchg
(bad)
or
test
pop
stos
jecxz
mov
(bad)
outs
(bad)
pop
bound
in
out
daa
imul
jmp
jp
shr
jmp
(bad)
arpl
jb
fldenv
pop
mov
int
xchg
cli
inc
out
sbb
in
outs
dec
out
ror
pop
test
mov
jmp
shl
inc
or
adc
outs
mov
(bad)
inc
out
stos
js
sbb
sar
mov
stc
leave
arpl
mov
jb
lock
(bad)
xchg
sar
das
fldenv
aas
xchg
jmp
sbb
sub
mov
mov
jmp
cmp
adc
jmp
outs
std
stc
mov
aaa
mov
outs
repnz
stos
mov
repz
leave
lods
xor
std
test
xchg
test
mov
ffreep
inc
gs
sbb
xor
int3
out
add
xchg
dec
jecxz
(bad)
mov
mov
and
fs
lods
aaa
sbb
mov
cmp
add
fcomp
xchg
outs
lea
xchg
aas
mov
cdq
popa
fstp
mov
or
cmp
jnp
mov
mov
xchg
push
jp
and
jns
inc
add
dec
jg
mov
inc
cmp
push
ins
lea
test
ret
sbb
add
add
push
pop
pop
fsub
pop
repz
std
cmc
inc
in
int3
mov
cmp
loopne
aas
into
push
imul
shl
sbb
push
fmulp
out
mov
imul
jbe
mov
idiv
movs
cmp
clc
je
fucomi
jno
jge
out
sti
sub
jne
pusha
jp
xor
xchg
arpl
push
inc
lods
icebp
imul
adc
or
push
popf
inc
push
out
dec
push
xchg
dec
jb
dec
or
sub
sub
movs
inc
jb
dec
dec
in
test
push
xchg
xchg
xchg
movs
xor
jns
cdq
and
mov
and
mov
or
jb
jp
movs
sub
add
push
push
inc
nop
leave
loop
inc
sub
xchg
inc
push
mov
pop
xchg
pop
ret
cmp
xchg
xchg
mov
xchg
dec
test
sub
inc
dec
dec
and
push
leave
daa
dec
adc
dec
cmp
pop
and
and
xchg
dec
xchg
or
ror
push
dec
bound
cdq
dec
or
fs
test
xchg
xchg
test
popf
and
mov
loope
xchg
mov
xchg
and
ror
push
movs
xchg
dec
and
inc
dec
xchg
dec
popf
and
push
and
and
dec
dec
and
dec
sub
popf
and
and
push
sar
and
inc
dec
dec
dec
test
xchg
xchg
dec
adc
call
sub
and
dec
push
je
sub
dec
xchg
xchg
rcl
dec
dec
dec
xor
je
daa
dec
dec
retf
dec
dec
dec
and
push
loope
pusha
xchg
movs
cmps
popa
cmp
add
push
dec
dec
and
push
je
mov
mov
popa
pop
jno
mov
push
xor
mov
loop
call
push
push
dec
adc
and
dec
dec
dec
and
push
xchg
dec
and
mov
xchg
movs
xchg
dec
push
dec
and
xchg
or
dec
and
push
xchg
cmps
dec
xchg
xchg
xchg
fs
push
xchg
dec
and
movs
jmp
cmp
fs
movs
mov
dec
and
and
push
xchg
cmps
dec
adc
and
mov
xchg
inc
call
jecxz
xchg
push
jp
loop
in
rol
push
scas
shr
add
push
and
adc
sub
clc
push
or
out
cmp
and
sar
sub
or
push
jg
xor
push
mov
jae
pop
xchg
mov
data16
pop
mov
pop
jmp
add
push
xchg
dec
int3
cmc
aad
cli
xlat
aam
sub
pop
mov
(bad)
mov
cli
dec
jns
add
mov
ror
jmp
pop
out
fmul
repz
xor
push
jp
pop
inc
pop
jne
loopne
jg
xchg
mov
add
xchg
cmps
inc
pop
push
paddb
scas
dec
mov
fdiv
in
gs
cmp
xor
inc
sar
jle
and
or
mov
and
movs
movs
clc
fst
fadd
mov
cmp
adc
adc
xor
mov
loopne
push
inc
mov
pop
scas
or
inc
les
mov
das
scas
jge
test
movs
dec
and
mov
repnz
scas
cmc
xchg
mov
fisttp
daa
imul
adc
pop
(bad)
arpl
jbe
sub
test
movs
(bad)
loope
sub
cmps
test
retf
lock
fadd
repz
jb
mov
mov
mov
inc
aad
dec
call
shr
fisttp
mov
loopne
retf
pop
jne
xchg
xchg
xor
jp
mov
popf
ret
and
in
pop
sahf
sub
outs
test
and
add
pop
sub
mov
addr16
add
pop
outs
push
inc
adc
lds
(bad)
inc
xor
std
sub
ret
xor
or
push
dec
mov
fstp
addr16
cli
movs
das
dec
add
dec
je
jle
cmc
sub
in
movs
aad
imul
inc
pushf
mov
cli
xlat
dec
int3
(bad)
xchg
mov
inc
test
fwait
pop
shl
add
rcl
pop
std
jp
push
adc
add
stc
xchg
mov
xchg
add
mov
fdivr
std
sbb
rol
sbb
mov
aam
sbb
cmp
pusha
fcom
ror
sar
fs
jg
mov
inc
out
pop
inc
aaa
pop
jmp
pop
xchg
inc
mov
into
mov
xor
cmc
stos
jle
mov
jmp
push
xchg
aaa
dec
mov
xchg
cmp
in
ja
mov
mov
jp
hlt
push
mov
pop
shrd
jo
pop
jg
aaa
push
out
jmp
cli
loope
mov
dec
ficomp
std
idiv
std
scas
fcom
jmp
jge
iret
dec
fcomi
in
stc
xchg
cld
inc
lahf
mov
jmp
sub
(bad)
mov
mov
dec
xor
jmp
inc
gs
loopne
outs
mov
out
sbb
into
addr16
inc
shr
push
xor
pop
out
aaa
push
cmp
cs
ror
in
shr
int3
cmp
jl
jo
pop
mov
nop
jno
sub
jmp
sub
fimul
std
idiv
xor
jns
mov
pop
and
mov
cld
cmc
fwait
xchg
jo
inc
jne
retf
pop
cmc
stos
cli
dec
lods
jmp
inc
stos
scas
and
sbb
(bad)
jg
(bad)
es
(bad)
cmp
sbb
push
xchg
push
call
mov
in
popf
sbb
mov
adc
inc
nop
sahf
push
adc
fbld
jbe
sti
cs
outs
dec
shr
push
or
in
cmp
sti
aad
jno
pushf
adc
inc
imul
stos
jge
int3
jmp
push
aas
cmp
xor
ret
(bad)
cmp
mov
and
push
mov
pop
sbb
cmp
sbb
dec
mov
xor
nop
inc
or
adc
bound
arpl
xor
jecxz
fisttp
jo
or
mov
mov
stos
push
imul
jne
call
popf
inc
cdq
push
rol
into
add
outs
lahf
add
out
fwait
cmps
into
jae
push
pop
inc
ds
add
cmp
cdq
lahf
push
out
jmp
in
mov
nop
loope
mov
jge
inc
retf
pop
out
dec
xor
rcl
push
inc
or
push
mov
xchg
retf
test
mov
sti
dec
mov
out
in
pop
mov
xor
push
imul
fcmovb
jnp
pop
(bad)
inc
sbb
enter
(bad)
jns
cld
pmaddwd
cs
and
imul
ins
xchg
loop
mov
test
pusha
aas
jle
retf
seta
mov
stos
cmps
adc
sub
mov
cli
retf
retf
pop
xchg
mov
addr16
test
clc
neg
iret
imul
push
retf
pop
mov
arpl
int
add
(bad)
sbb
xchg
inc
stos
inc
hlt
lea
pop
and
jecxz
jecxz
imul
ficomp
xchg
push
push
test
cmp
je
sbb
add
xor
pusha
repnz
jmp
int
jns
push
sbb
in
repz
fstp
fadd
jl
mov
shl
xchg
lahf
psadbw
cdq
clc
popf
dec
xchg
stos
dec
out
mov
mov
add
cmp
mov
outs
ret
dec
pop
fwait
or
dec
sub
fwait
cmp
mov
stc
mov
dec
dec
je
fild
or
lea
jnp
jle
dec
mov
mov
fisttp
in
imul
mov
shr
xor
inc
jo
ins
jmp
adc
enter
call
outs
inc
mov
pop
sar
aad
mov
jmp
sub
nop
shl
retf
inc
std
std
xor
(bad)
jl
pop
loope
or
jmp
enter
ins
(bad)
(bad)
movs
int
pushf
inc
imul
dec
sbb
adc
(bad)
(bad)
call
outs
mov
jmp
pop
push
icebp
cli
mov
cmp
icebp
inc
pop
nop
aad
mov
aad
jae
aas
cdq
addr16
add
mov
sbb
pop
cli
daa
std
in
sub
mov
hlt
pushf
gs
or
sub
shr
ja
sub
out
movs
mov
sub
xchg
cmp
cmp
std
sbb
jg
inc
in
fwait
mov
(bad)
xchg
adc
mov
int3
inc
mov
pop
and
cmp
ficomp
dec
cmc
call
cmovp
push
faddp
lahf
repz
adc
jmp
ret
mov
aad
lahf
cmps
mov
cmp
and
push
aad
cli
push
aas
imul
fdivr
(bad)
je
inc
pop
cmp
mov
(bad)
leave
(bad)
adc
pop
idiv
idiv
(bad)
ds
call
loopne
add
pushf
mov
mov
dec
inc
fstp
xchg
inc
push
dec
or
movs
icebp
cmp
push
int3
sub
ret
push
mov
cmps
dec
jmp
(bad)
cld
sub
call
aam
jmp
xchg
cmp
jb
and
retf
sbb
out
xchg
sub
jne
dec
sub
cdq
xor
test
push
and
ror
push
xchg
dec
sub
pop
dec
add
or
adc
cmps
dec
and
adc
dec
dec
adc
pop
sub
ret
adc
test
movs
push
dec
dec
pop
xchg
leave
loope
dec
sub
test
pop
and
and
xchg
dec
xchg
sub
dec
rcl
ror
sub
je
push
xchg
add
push
add
and
movs
lds
fs
mov
ror
push
cmps
test
dec
or
push
cdq
and
dec
sub
xchg
movs
xchg
dec
and
xchg
dec
and
xchg
movs
jmp
test
sub
dec
xchg
inc
leave
daa
dec
adc
cmp
dec
push
fs
xchg
dec
push
dec
and
push
dec
xchg
and
xchg
xchg
dec
and
xchg
dec
and
movs
leave
and
push
dec
add
add
mov
movs
xchg
dec
pop
adc
and
sub
pop
xor
adc
sub
cdq
adc
movs
ror
xchg
movs
xchg
dec
and
dec
test
movs
popf
and
or
inc
sub
sbb
adc
mov
add
retf
rcl
and
dec
pop
and
xchg
push
xchg
dec
and
movs
xchg
dec
xchg
xchg
popf
xor
je
xchg
movs
movs
daa
dec
xchg
dec
pop
and
dec
dec
dec
and
push
xchg
dec
and
movs
xchg
dec
add
dec
dec
cmp
dec
and
dec
push
dec
and
xchg
test
and
or
dec
xchg
xchg
xchg
dec
rcl
dec
and
mov
ror
call
jecxz
lea
dec
push
mov
lods
std
inc
jns
loop
fdivr
rol
int3
push
cmp
push
or
dec
add
inc
lods
hlt
mov
dec
std
icebp
jmp
cmps
jge
outs
push
pop
test
aad
(bad)
xor
cwde
inc
cmps
std
xchg
inc
pop
aas
aam
nop
int3
out
aas
call
(bad)
aaa
xor
(bad)
mov
pop
mov
aam
pop
push
jp
push
inc
ja
sbb
pop
fdivr
add
bound
dec
mov
jns
mov
jle
arpl
sub
das
push
jge
sbb
fistp
(bad)
jp
dec
test
xchg
retf
adc
add
pop
jb
push
xchg
sbb
add
dec
ficom
xchg
push
out
imul
xchg
mov
mov
xchg
les
enter
add
(bad)
es
jbe
push
cmps
or
mov
cmps
in
int3
sub
or
jbe
shl
mov
popa
pop
in
jl
xchg
pop
ret
add
mov
test
cmps
sbb
and
push
cmc
xchg
outs
pop
jmp
jmp
ficomp
inc
jmp
or
sar
mov
(bad)
lahf
int
aas
hlt
jb
jmp
out
ret
dec
push
mov
lahf
neg
mov
adc
pop
inc
retf
or
and
das
jo
jmp
test
mov
(bad)
fidiv
sub
sub
push
icebp
fld
mov
add
pop
mov
inc
mov
or
mov
not
arpl
xchg
xor
(bad)
xor
jg
out
mov
pop
loop
adc
arpl
xor
or
push
hlt
pushf
out
loopne
aam
(bad)
shr
push
(bad)
imul
hlt
mov
mov
fnstsw
pop
push
push
inc
arpl
ins
mov
call
cmp
and
jnp
in
mov
xchg
mov
hlt
xchg
or
mov
sub
xchg
sbb
mov
loopne
int
and
(bad)
(bad)
dec
cmps
mov
in
cmp
push
(bad)
pop
mov
lea
pop
dec
(bad)
jle
add
(bad)
fdivr
push
pushf
stos
jno
mov
mov
cli
in
mov
cwde
(bad)
fs
loopne
daa
sti
das
dec
sbb
inc
inc
push
lds
lock
jge
in
sar
loop
cli
mov
cmp
out
in
idiv
enter
ins
jnp
sub
ds
sar
iret
(bad)
inc
mov
mul
push
fucomp
fst
iret
stc
lahf
iret
cmps
mov
cmp
xor
gs
outs
mov
rcl
fisttp
fist
fsub
scas
div
mov
popf
aad
jmp
loop
(bad)
std
lahf
dec
dec
push
pusha
jle
pop
jno
(bad)
sbb
pop
jmp
movs
mov
jle
jnp
dec
cdq
nop
xlat
lahf
fdiv
pop
jns
add
add
aad
prefetcht1
xor
fistp
add
hlt
std
and
lds
(bad)
cmc
push
xor
imul
mov
jnp
int
cld
mov
mov
sahf
fisubr
inc
add
repz
fcomip
push
out
std
adc
adc
pop
cli
mov
lock
mov
and
jnp
neg
push
mov
pop
or
fwait
jb
push
jns
ror
pop
mov
cmp
int
mov
sub
fucomip
pop
fild
lods
jae
scas
hlt
fidiv
sbb
iret
adc
dec
cmc
stos
inc
fild
(bad)
dec
mov
cmp
in
out
sti
push
ins
push
imul
or
hlt
jg
movs
sub
(bad)
jmp
xchg
iret
dec
adc
push
ret
aam
repnz
push
enter
(bad)
mov
mov
sub
test
add
out
arpl
loop
inc
xor
lds
popa
pusha
sbb
pop
not
and
add
and
mov
cmp
(bad)
out
ss
cli
fnstsw
and
mov
xchg
push
shl
inc
inc
std
outs
fbld
adc
popf
or
into
pop
mov
xor
jns
adc
push
cmc
jp
add
addr16
sbb
pop
cmc
lds
xchg
sub
mov
dec
retf
sbb
cmp
add
cli
mov
(bad)
mov
dec
mov
cmp
and
lea
sbb
mov
sbb
adc
das
lods
test
xor
xor
push
shr
push
adc
lock
mov
jae
out
add
aaa
cld
inc
int
add
movs
sub
or
mov
aam
adc
pop
pop
mov
adc
movs
aam
xchg
out
(bad)
jge
es
add
cmps
push
aad
mov
mov
mov
dec
enter
nop
ret
(bad)
cli
scas
push
out
pop
mov
scas
in
test
je
scas
dec
xchg
mov
out
xor
or
(bad)
xor
fstp
cwde
rcl
sahf
and
inc
loope
add
cli
lods
add
inc
sbb
je
fisubr
xchg
or
cld
push
(bad)
inc
push
lods
test
retf
arpl
xchg
jg
xchg
dec
inc
and
lahf
sub
into
mov
imul
adc
sahf
jns
push
gs
jbe
lds
cdq
mov
jl
(bad)
jnp
out
in
cmp
xor
push
inc
scas
(bad)
push
popf
int
adc
lea
fstp
js
es
test
std
icebp
push
ja
iret
ret
or
ja
lahf
mov
shl
lods
adc
push
sub
cmc
ins
push
lods
jnp
in
cmc
jo
out
mov
inc
rcl
inc
clc
adc
jno
mov
cmps
pop
jnp
cmp
scas
pop
xlat
(bad)
test
mov
pop
fwait
dec
imul
sub
fsub
push
jg
in
xchg
movs
fsubr
pop
dec
(bad)
sar
inc
jmp
cli
fidivr
add
lods
mov
mov
inc
mov
ja
and
test
popf
inc
cmps
jle
call
out
cli
(bad)
(bad)
fld
pop
sti
scas
cli
aas
mul
je
cmp
inc
cli
mov
dec
mov
mov
repz
out
ins
or
das
add
ret
fucomi
push
mov
aad
jecxz
inc
cwde
movs
mov
cmp
cmp
mov
pop
ficom
pushf
xor
dec
pusha
mov
shr
gs
ja
psubq
adc
fsub
jmp
adc
jnp
loopne
nop
inc
shl
xor
mov
and
(bad)
mov
mov
fsubp
xchg
or
pop
pop
push
nop
inc
jbe
fdivr
pop
shr
jbe
int
pop
pop
loope
aam
imul
xchg
cmp
cmp
inc
ret
sub
repz
dec
clc
aaa
and
adc
xor
lea
aaa
les
mov
mov
inc
adc
pop
idiv
ficomp
sbb
stos
(bad)
mov
les
stc
mov
retf
mov
and
rcl
sub
mov
mul
retf
inc
dec
push
je
and
mov
sahf
adc
dec
pop
cmp
dec
push
push
xchg
and
dec
pop
cmp
fs
push
inc
jo
xchg
call
ret
dec
dec
inc
mov
inc
movs
movs
xchg
dec
adc
dec
pop
sub
dec
add
shl
push
and
and
adc
movs
movs
mov
xchg
adc
xchg
and
cwde
cmps
dec
xchg
dec
pop
xor
inc
inc
and
mov
movs
rcl
in
dec
xor
push
dec
popf
xor
dec
and
xchg
dec
mov
dec
and
ror
pop
daa
dec
adc
or
add
adc
dec
es
sub
and
xor
push
xchg
and
dec
pop
and
dec
dec
dec
xor
push
xchg
dec
and
shl
push
push
jmp
and
dec
dec
dec
or
jmp
movs
cwde
movs
movs
mov
dec
and
and
push
xchg
dec
and
movs
xchg
dec
or
fs
xchg
dec
sub
xchg
dec
push
dec
and
xchg
movs
cwde
daa
dec
dec
ret
loope
sub
call
into
mov
fcmovbe
adc
jmp
xor
dec
and
dec
dec
and
push
leave
daa
dec
xchg
xchg
xchg
dec
and
and
dec
sub
popf
and
xchg
movs
xchg
dec
and
dec
movs
cdq
cmp
push
dec
and
xchg
xchg
dec
and
daa
dec
popf
and
or
xchg
push
xchg
movs
xchg
dec
push
jo
dec
sub
dec
sub
and
movs
ror
sub
dec
ud0
jecxz
test
inc
lods
mov
or
test
adc
cmp
cmps
scas
call
cmps
xchg
pop
push
sti
inc
aas
retf
mov
add
stos
sar
(bad)
pop
push
mov
(bad)
jg
jae
mov
in
mov
shr
scas
sbb
pusha
(bad)
in
sub
adc
imul
xor
xor
mov
xchg
add
div
mov
out
jno
(bad)
clc
mov
pop
cli
xchg
cmc
mov
cmp
xchg
xlat
mov
movs
pop
inc
xchg
mov
and
sbb
dec
sbb
scas
xchg
or
js
lods
cmp
imul
or
or
jb
mov
cdq
clc
scas
and
aam
sbb
loop
(bad)
int
cmp
(bad)
cli
cmp
loope
add
jge
test
sub
push
(bad)
fcom
jmp
adc
jmp
test
cmp
xlat
xchg
lock
dec
aam
jmp
dec
and
add
dec
sub
fist
stos
jg
push
push
mov
les
push
out
push
cwde
inc
aad
test
call
xchg
(bad)
mov
cwde
retf
outs
ret
cmp
frstor
jmp
cmp
mov
inc
cli
in
jnp
inc
cmc
mov
je
cs
fisubr
ret
scas
xchg
cmp
imul
jae
add
imul
xchg
jne
or
jne
(bad)
mov
mov
inc
leave
sub
push
stos
lods
(bad)
cdq
mov
repnz
dec
cld
call
movs
cmp
imul
sbb
popa
inc
scas
and
mov
ja
retf
xchg
loope
pushf
and
jp
cwde
pop
push
daa
add
icebp
lods
jne
stc
daa
(bad)
stc
hlt
pop
push
sar
push
push
xor
retf
jnp
mov
xor
and
add
shl
xchg
mov
call
cli
pop
lods
out
stos
(bad)
sub
jle
cmc
cmp
xchg
jne
stc
retf
hlt
cmps
std
xor
cs
sub
hlt
adc
pmaxsw
xchg
push
inc
push
std
pop
cmps
add
pop
mov
inc
mov
pushf
pop
int
out
mov
ret
nop
inc
adc
xchg
jmp
fs
int
mov
push
sti
pop
inc
movs
inc
repz
sbb
add
sub
(bad)
xchg
inc
popa
and
nop
cmp
icebp
lahf
adc
adc
push
pusha
in
push
cmps
(bad)
dec
aam
cli
dec
inc
hlt
mov
mov
jmp
pop
(bad)
add
add
leave
das
das
xor
dec
sbb
cld
inc
outs
mov
jnp
jge
mov
xchg
les
or
cmc
leave
div
aam
dec
cmp
xchg
std
ss
push
cmp
fmul
sti
jns
movs
inc
stos
pop
jae
mov
shr
jle
ss
test
(bad)
in
push
cli
push
add
mov
sar
mov
arpl
ins
idiv
add
repz
lock
xchg
push
sbb
inc
mov
pop
inc
scas
push
(bad)
(bad)
fdiv
cmc
or
imul
pop
aam
adc
movs
shl
fstp
in
aad
out
out
inc
mov
aaa
cmp
fdiv
adc
cwde
cmp
aas
lock
(bad)
mov
jmp
sti
inc
clc
dec
inc
hlt
mov
std
std
cmp
cwde
fcom
mov
fwait
gs
imul
and
fist
cdq
mov
popf
ds
daa
call
pop
xor
fcmovnu
xor
inc
shr
test
add
ret
jae
mov
push
and
mov
rcr
retf
xchg
xchg
mov
lods
xchg
std
cs
inc
dec
xchg
std
mov
aam
inc
push
dec
jle
mov
ret
out
stc
retf
sbb
pop
dec
dec
(bad)
js
cmp
xchg
popf
aam
jmp
inc
lahf
imul
inc
pop
(bad)
xchg
mov
cmp
xchg
pop
xor
not
dec
jle
int3
lods
or
pop
fcom
imul
jp
mov
scas
mov
enter
mov
ja
xor
lods
jae
pop
mov
jnp
leave
xor
dec
add
jmp
and
cmp
cmp
push
call
(bad)
mov
mov
into
mov
(bad)
jmp
sar
stc
in
jno
ret
ds
je
std
inc
jmp
jge
push
pop
dec
aas
out
jmp
mov
aam
mov
fild
pop
jb
dec
sub
neg
aam
out
jge
mov
cli
(bad)
add
sahf
(bad)
movs
sub
jne
scas
mov
mov
cmp
cmp
outs
mov
shld
dec
shl
mov
(bad)
(bad)
cmp
repz
outs
jge
fistp
pop
cmp
lods
ins
jnp
iret
aam
ins
mov
pop
add
(bad)
mov
ss
sub
mov
jne
pushf
mov
(bad)
or
adc
or
sub
xchg
ror
popf
sub
(bad)
push
mov
cs
lods
aam
push
inc
add
inc
das
addr16
push
jo
dec
sar
and
adc
push
retf
xchg
mov
icebp
push
add
jmp
sub
shl
fwait
push
cs
push
mov
adc
lock
inc
jbe
fcomp
in
stos
mul
fwait
cwde
iret
pop
adc
cli
jns
pop
jo
mov
and
repz
xchg
mov
and
dec
mov
or
sub
arpl
sbb
mov
jp
in
inc
das
lods
sahf
scas
jb
xlat
pop
cld
call
iret
add
test
dec
test
dec
push
xlat
or
push
imul
inc
(bad)
or
pop
call
jg
test
dec
(bad)
shr
loopne
jge
and
jbe
(bad)
push
jbe
pop
push
pop
lods
aaa
sar
(bad)
mov
clc
int
stos
and
dec
mov
xchg
sub
test
dec
jge
mov
dec
ret
dec
cmp
sahf
push
jno
fimul
fcomp
shl
xor
cwde
inc
dec
push
in
push
lock
ins
hlt
inc
xchg
pop
stos
test
fiadd
sub
cmp
cmp
je
imul
dec
cli
leave
imul
ss
enter
xor
mov
fbstp
sub
sub
xchg
push
and
cmp
aas
call
push
stos
mov
inc
adc
lods
pop
push
fdiv
inc
push
(bad)
fld
mov
and
jle
push
jmp
stos
lds
fsub
jmp
jmp
mov
(bad)
xchg
sub
sbb
jmp
arpl
sahf
cld
dec
rcr
xchg
add
(bad)
adc
stc
xchg
sub
or
mov
push
xchg
push
ds
fcmovb
test
shl
repz
xchg
jg
retf
data16
lock
jg
jnp
cmc
mov
sbb
inc
idiv
cmp
cmp
std
inc
mov
ins
or
imul
inc
push
pop
stos
push
mov
fstp
lahf
out
add
mov
jle
hlt
sub
xchg
push
inc
movs
or
sti
push
and
or
sub
mov
stos
js
(bad)
out
dec
push
sbb
pop
sub
xchg
mov
fistp
hlt
xchg
test
jae
pop
cmp
popf
enter
pop
pop
mov
cmc
bswap
daa
hlt
aad
add
and
mov
pop
sub
cs
movs
imul
nop
pop
or
cli
pop
(bad)
and
and
mov
or
inc
aas
lods
aaa
lds
iret
std
jae
and
pusha
adc
outs
shl
ja
and
fs
aas
jnp
shl
stc
ror
popa
jecxz
addr16
xor
mov
jnp
mov
sar
inc
mov
dec
pop
je
test
ins
push
sbb
xor
imul
jg
dec
xor
popa
fldenv
cmp
adc
mov
xor
and
cwde
cmps
dec
xchg
dec
pop
sub
push
mov
dec
mov
mov
inc
sub
cs
and
adc
or
inc
adc
popa
or
inc
or
dec
dec
adc
movs
cmps
or
and
dec
dec
push
test
adc
and
ret
inc
and
cmp
cmps
sub
inc
push
xchg
cwde
cmps
dec
or
dec
dec
adc
sub
xchg
sub
xchg
xchg
and
and
dec
and
push
leave
ret
nop
mov
xchg
dec
and
ret
and
cmps
dec
and
mov
dec
pop
and
dec
sub
dec
sub
movs
shr
xchg
dec
dec
dec
and
and
cs
and
push
xchg
dec
xchg
and
xchg
cmps
add
or
push
dec
push
daa
sub
adc
push
inc
sub
sub
xchg
dec
push
dec
daa
dec
dec
dec
and
push
xchg
dec
and
movs
xchg
dec
and
dec
cmps
dec
pushf
add
mov
and
stos
mov
xchg
ja
push
and
xchg
mov
pop
fcmovbe
pop
cdq
dec
mov
xchg
je
push
leave
daa
dec
and
and
xchg
xchg
xchg
fs
mov
adc
dec
and
push
xchg
dec
and
movs
xchg
dec
and
dec
dec
cmp
dec
and
adc
and
push
xchg
movs
xchg
dec
push
je
and
ror
sub
je
sub
xchg
dec
push
je
and
ror
xchg
inc
call
in
push
loopne
and
dec
sub
leave
cmp
sub
imul
add
ret
fmul
mov
imul
adc
pushf
xor
jle
xor
mov
(bad)
(bad)
inc
cmps
test
pusha
ret
cmp
rcl
sbb
cli
cmps
faddp
inc
stos
sbb
int
ret
loop
retf
stos
cli
std
inc
mov
mov
mov
cmps
inc
cmp
mov
push
adc
enter
enter
jns
pusha
cmp
add
fidivr
imul
sub
pop
ret
xchg
daa
pop
cmp
dec
outs
in
lahf
mov
call
add
dec
dec
dec
and
push
adc
pop
mov
xor
mov
jge
jmp
xor
sbb
sti
pop
arpl
mov
jmp
test
pusha
jmp
lea
cld
out
adc
ficomp
imul
cs
mov
cli
push
add
clc
jge
aas
xlat
std
and
mov
push
mov
shl
jmp
out
sbb
inc
inc
dec
fistp
repz
pop
fmul
(bad)
jbe
dec
jnp
std
dec
sbb
rol
stos
adc
add
xchg
push
movs
dec
scas
push
sub
or
shr
std
addr16
cmps
mov
mov
in
inc
mov
in
pop
lahf
inc
inc
sbb
ins
inc
test
(bad)
scas
cld
xor
push
push
test
inc
xor
and
(bad)
fnstenv
outs
dec
cli
(bad)
push
mov
push
nop
ret
ret
xchg
(bad)
mov
mov
fldcw
sar
mov
cld
push
stos
xchg
rcr
jmp
std
data16
jb
mov
arpl
lea
cmp
aam
lds
in
jmp
imul
pop
cli
dec
mov
popf
pop
mov
push
cmp
shl
or
fisubr
out
(bad)
repnz
sbb
jmp
mov
inc
(bad)
push
loopne
mov
mov
cmp
pop
or
aad
pop
stos
jne
icebp
dec
inc
fbld
(bad)
outs
std
mov
iret
aam
lods
shl
(bad)
rcr
cld
cli
std
in
inc
mov
aad
aad
jae
adc
loopne
jno
jae
test
stos
call
dec
rcl
stos
mov
jmp
inc
(bad)
clc
dec
mov
inc
ins
mov
retf
cli
jbe
dec
mov
add
aas
cli
or
xor
sbb
xchg
pop
dec
neg
push
xchg
lea
(bad)
sub
js
pop
pop
xchg
pop
cmps
jae
nop
enter
cmp
mov
and
cmp
dec
in
and
jg
jb
addr16
mov
push
push
mov
movs
movs
in
inc
cmp
and
in
jmp
imul
(bad)
jb
iret
cli
xchg
fwait
mov
rcl
xlat
fdiv
pushf
xchg
add
sbb
inc
cmp
jecxz
add
lea
mov
or
(bad)
xchg
or
mov
mov
into
pop
mov
xchg
push
pop
rcl
cmp
cmc
xchg
mov
repnz
mov
cli
inc
dec
jmp
repz
dec
cmc
aam
iret
sbb
arpl
and
xor
xchg
push
cmp
push
pop
pop
sar
mov
fcomp
pop
sar
inc
fs
test
aaa
aam
out
xor
mov
push
jmp
pop
or
push
sbb
ja
pop
or
xchg
ror
mov
jo
dec
dec
pop
call
dec
xor
push
sub
xor
jge
arpl
xchg
dec
ds
(bad)
movs
dec
mov
jmp
sub
lds
add
push
add
dec
test
xlat
xchg
loopne
retf
in
test
hlt
sbb
pop
mov
pop
jnp
std
sbb
push
fsin
xchg
jae
push
or
inc
popf
out
mov
push
sub
dec
out
push
fcomip
lea
movs
jge
int3
jmp
push
jbe
iret
stc
(bad)
pop
fisttp
xchg
aad
(bad)
(bad)
sub
loope
mov
mov
add
call
cmps
xchg
in
in
cmps
add
mov
pop
hlt
push
(bad)
mov
ins
bound
mov
cmc
lahf
and
adc
scas
push
out
fisubr
jae
outs
scas
lods
popf
fstp
xchg
pop
out
push
mov
mov
cmc
cmp
ret
fidivr
mov
jg
fisttp
xor
inc
jmp
jge
cmps
pop
xlat
cmp
aad
add
mov
jmp
cmps
mov
mov
movs
popa
out
cmp
push
xchg
xlat
lock
mov
jne
xor
push
sub
inc
and
not
(bad)
push
call
mov
cmp
hlt
(bad)
retf
mov
sar
dec
mov
and
cmp
cli
inc
in
cmp
mov
sub
lods
std
or
not
mov
dec
pop
adc
hlt
push
ins
pushaw
pop
cmp
dec
and
push
and
mov
das
stos
sar
std
mov
popf
jmp
(bad)
sahf
shr
add
pop
stc
dec
test
jb
enter
scas
mov
lahf
mov
stos
sub
or
push
sbb
add
dec
add
je
dec
jbe
push
std
xchg
je
fmul
scas
addr16
adc
aas
icebp
dec
pop
cmp
out
ins
pop
shl
xchg
ja
xor
mov
push
jg
mov
sub
inc
jbe
mov
xor
mov
or
push
shl
je
pop
pop
jbe
ror
popa
push
push
xor
fucomip
and
pop
(bad)
iret
pop
adc
enter
cmp
sub
jns
lods
sub
and
lahf
popa
and
sub
data16
clc
sub
xor
or
sub
xlat
jmp
mov
and
std
fdiv
cld
mov
add
pop
mov
jmp
cdq
jmp
cmp
aaa
imul
(bad)
inc
xchg
jg
inc
cmps
aad
(bad)
shr
out
sar
mov
imul
mov
push
xor
sbb
push
enter
popa
mov
(bad)
imul
sbb
jmp
out
xchg
xchg
fsin
jb
out
xchg
xchg
mov
xchg
mov
gs
lds
loope
jg
pop
movs
inc
fild
sub
clc
push
jp
sbb
inc
imul
and
cmc
add
jnp
cmc
(bad)
add
test
jg
jge
(bad)
jne
xchg
in
cdq
jne
loope
call
mov
mov
fistp
daa
mov
adc
mov
popa
std
sbb
xor
cli
dec
aas
stc
add
dec
cmp
mov
sti
sub
cmp
pushf
movs
cmp
dec
sub
add
xor
(bad)
aaa
ins
mov
std
cmc
pop
and
in
push
xchg
xchg
outs
cmps
push
dec
jge
sti
cmp
(bad)
add
push
adc
inc
pop
movs
push
mov
jmp
mov
ja
dec
std
cmc
pop
cmc
inc
xchg
popf
jecxz
adc
cmc
mov
mov
pop
cld
out
inc
pop
test
pop
xchg
xor
mov
retf
rol
inc
rcl
sbb
dec
imul
adc
sbb
inc
aas
fimul
xchg
aad
cld
inc
mov
fs
call
dec
cwde
sub
mov
fdiv
fcmovne
bound
aad
les
mov
dec
lods
aad
js
movs
adc
movs
adc
inc
sub
aam
cmps
test
mov
movs
nop
or
push
movs
test
cwde
ret
mov
push
push
sub
rcl
sub
push
aad
dec
push
push
rcl
push
call
inc
inc
xchg
xchg
mov
sub
fs
cmp
movs
mov
dec
dec
dec
adc
sub
dec
dec
movs
xchg
dec
sub
xchg
dec
push
dec
and
xchg
xchg
dec
rcl
and
movs
ror
xchg
mov
dec
dec
xor
dec
and
dec
push
je
rcl
dec
xor
and
dec
or
jmp
sub
xchg
xchg
test
sahf
push
dec
push
xchg
xchg
dec
push
xchg
rcl
xchg
xchg
mov
push
cmps
sub
sub
and
xchg
dec
or
xchg
movs
xchg
dec
and
dec
dec
and
sub
jo
xchg
add
inc
cmp
and
(bad)
out
xor
imul
fs
and
adc
mov
push
dec
dec
and
and
and
and
movs
rcr
shl
push
mov
mov
cmp
movs
and
dec
sub
popf
and
sub
popf
and
dec
push
dec
ror
and
and
movs
xchg
dec
xchg
xchg
dec
xchg
dec
test
sub
sub
dec
or
xchg
mov
ror
dec
and
push
xchg
dec
and
inc
call
jecxz
jne
jmp
dec
dec
retf
and
nop
pop
inc
xchg
mov
jnp
icebp
sub
push
jo
movs
cmps
jg
je
cmp
pop
fst
mov
in
jg
lds
pop
ret
imul
add
es
cmp
lds
jmp
jg
mov
mov
jmp
cdq
jle
jge
sub
add
nop
jle
outs
dec
cmc
dec
stos
stc
(bad)
cli
mov
mov
inc
jge
rcr
push
in
sar
loopne
test
sbb
cld
inc
(bad)
fcomip
sub
xchg
or
shr
adc
fs
push
jo
(bad)
fadd
movs
jg
mov
inc
sbb
inc
out
ja
mov
cmp
pop
std
mov
inc
and
mov
cwde
int3
dec
pop
jns
daa
xor
loope
dec
sub
dec
test
int3
cld
push
add
xor
in
lahf
sub
inc
inc
push
dec
dec
retf
dec
in
sbb
adc
lods
mov
loop
out
inc
shr
add
mov
scas
sbb
xchg
in
add
scas
xchg
adc
inc
push
out
sti
loop
dec
cli
fwait
dec
push
outs
in
sbb
in
mov
pop
icebp
std
push
outs
push
sbb
sub
fst
push
jge
stc
adc
sub
dec
cs
dec
daa
(bad)
cmp
xor
int3
pop
cmp
jl
stc
(bad)
push
dec
hlt
mov
jp
cmp
push
ins
(bad)
iret
pop
mov
pop
inc
stos
and
adc
movs
or
inc
adc
sbb
sub
push
out
icebp
push
or
xchg
xor
inc
imul
test
and
xchg
fisub
rol
pop
inc
stc
(bad)
jns
in
inc
ret
cld
ins
mov
sub
imul
xchg
push
movs
xchg
int
add
pop
mov
jmp
xchg
std
sbb
add
jecxz
cli
mov
scas
lods
pop
lahf
xlat
repz
(bad)
std
ficomp
add
je
xor
gs
enter
jecxz
cdq
mov
pop
push
xchg
push
test
push
xchg
sbb
shr
push
jle
imul
aas
mov
imul
mov
lock
jmp
mov
shl
fwait
pop
addr16
mov
inc
packsswb
xor
ds
push
and
xor
out
outs
addr16
cmc
lods
inc
pop
or
mov
mul
push
sbb
imul
add
jp
data16
aad
lods
sbb
shr
rcr
inc
cdq
test
add
jbe
mov
addr16
inc
adc
add
add
inc
data16
hlt
ins
jg
dec
jno
pop
jmp
push
(bad)
(bad)
lock
fnstenv
ffree
imul
(bad)
dec
fcom
jnp
xlat
sti
scas
div
rol
icebp
ds
mov
mov
(bad)
gs
mov
mov
xchg
sbb
(bad)
(bad)
and
xor
(bad)
or
nop
jl
push
call
adc
call
ins
fdiv
fcmovnbe
jno
jo
add
mov
add
(bad)
mov
cmovle
cs
imul
shl
loop
mov
add
sbb
movs
les
bound
scas
je
mov
(bad)
out
sbb
std
fwait
push
mov
xchg
xlat
arpl
mov
push
lods
(bad)
jg
aaa
jle
imul
call
jmp
push
cli
pop
(bad)
pop
stos
pop
imul
sti
fwait
(bad)
gs
in
sti
lods
loopne
lahf
aad
lods
out
mov
out
mov
jg
sub
pop
movs
push
cmc
mov
push
in
mov
mov
cmps
addr16
xchg
(bad)
cmps
int3
or
push
mov
inc
test
jge
and
loop
push
push
pop
popf
push
jmp
sub
idiv
adc
push
cmc
or
rcl
out
lods
stc
adc
scas
pop
mov
jae
mov
and
shr
out
shl
mov
jmp
dec
push
and
jno
add
sub
inc
push
xor
mov
cmp
cmps
idiv
inc
ins
xor
inc
rcl
lds
in
icebp
rcr
cmp
dec
and
leave
sub
cmp
jno
sub
lds
mov
mov
cdq
pop
xchg
jle
js
mov
fwait
jg
xlat
sub
inc
retf
cmp
lea
fimul
pop
imul
inc
dec
add
push
in
lahf
leave
mov
shr
or
sbb
neg
imul
rcr
cmp
inc
inc
repz
add
push
xor
idiv
pop
(bad)
jmp
call
fld
ja
push
(bad)
leave
mov
loop
pushf
pop
loope
or
xchg
ss
pop
jge
test
xchg
dec
out
cld
test
mov
mov
mov
inc
adc
jmp
jne
mov
int3
jecxz
scas
je
mov
rcr
cmp
frstor
cmp
mov
scas
test
xchg
jecxz
push
inc
ins
xchg
mov
jno
xchg
mov
or
jbe
icebp
mov
enter
fist
xchg
ficomp
pop
mov
jo
fadd
jmp
mov
pop
ret
hlt
jg
fwait
xor
lds
and
data16
push
xchg
stos
cli
ret
mov
into
cmp
enter
pusha
xchg
ret
mov
cmp
fisub
imul
fs
mov
leave
jle
ret
fst
cmp
test
pop
cmps
outs
fldz
std
idiv
add
jbe
mov
lods
pop
push
pop
push
(bad)
pop
ja
int
shl
xor
call
imul
sar
mov
stos
jg
cmps
gs
mov
mov
mov
(bad)
mov
mov
or
in
push
stos
xlat
shl
cli
leave
imul
cmp
retf
inc
xor
bound
loop
xlat
fld
pop
enter
in
or
aad
cmc
xchg
imul
jp
in
out
push
aas
mov
loop
aaa
jne
mov
jae
fisttp
inc
xlat
jg
(bad)
sub
loopne
imul
push
jb
shr
jbe
and
addr16
out
repz
dec
xchg
and
adc
lods
test
pusha
icebp
sub
mov
repz
cmp
inc
cmp
cli
mov
mov
mov
into
and
jnp
fst
call
clc
daa
pop
xchg
(bad)
mov
and
jnp
out
jae
int
sbb
shl
in
inc
inc
pop
jle
pop
sub
push
cli
dec
mov
(bad)
mov
scas
cmp
imul
jns
adc
jp
sbb
push
or
and
add
mov
scas
xlat
outs
jo
outs
aas
sahf
shr
ja
jge
ja
fldcw
xchg
fstp
pushf
push
xlat
inc
ins
mov
adc
outs
fsub
movs
rol
mov
ins
pop
cmps
add
dec
inc
enter
push
dec
jns
jno
(bad)
imul
sahf
pop
loopne
push
call
ficomp
xchg
mov
mov
inc
lea
call
int
ret
mov
mov
(bad)
pop
stc
xor
sub
jg
jns
add
nop
mov
adc
pop
ret
inc
and
fcmovnb
pop
inc
fadd
fstp
sbb
cmp
cld
inc
jb
mov
pop
aaa
aaa
inc
aaa
push
out
inc
sahf
and
push
cmp
or
mov
cld
fucomip
daa
mov
xchg
inc
mov
mov
out
mov
xchg
nop
dec
adc
daa
and
pusha
cmps
or
or
adc
and
adc
add
adc
adc
sub
outs
adc
sub
loope
and
mov
push
dec
and
push
dec
js
adc
and
dec
sub
xchg
dec
dec
dec
and
sub
dec
xchg
push
jmp
jo
dec
sub
xchg
dec
push
dec
daa
dec
dec
daa
dec
cmp
adc
xchg
push
jmp
and
dec
dec
dec
and
push
jmp
dec
and
adc
dec
inc
dec
push
dec
loope
xchg
mov
and
imul
push
xchg
xchg
xchg
movs
inc
push
xchg
xchg
mov
scas
sub
dec
daa
dec
dec
and
and
mov
ror
and
xor
and
es
dec
dec
and
push
xchg
dec
and
movs
jmp
pushf
and
add
dec
lods
xor
add
aad
adc
cs
mov
daa
xchg
pop
retf
or
xchg
idiv
retf
movs
xchg
movs
or
pop
and
and
xchg
dec
xchg
dec
pop
and
and
xchg
dec
and
mov
and
xchg
popf
and
push
xchg
dec
and
movs
xchg
dec
xchg
xchg
xchg
dec
and
and
dec
and
xchg
dec
push
je
rcl
dec
cmp
and
and
and
dec
sub
dec
and
or
xchg
push
xchg
dec
and
movs
xchg
dec
xchg
xchg
dec
cmp
fs
cmps
dec
dec
dec
cmp
call
loop
mov
inc
xchg
sbb
stos
in
gs
test
sub
mov
rcl
and
cmp
jo
and
add
mov
fld
adc
in
in
cli
jg
sbb
add
mov
or
and
imul
sub
pushf
ffree
imul
cmp
mov
aas
repz
cmps
shl
cmps
out
hlt
fcomip
inc
into
jmp
jecxz
mov
test
mov
mov
jne
(bad)
stos
sbb
(bad)
mov
daa
(bad)
adc
retf
in
iret
dec
pop
ins
scas
idiv
mov
inc
ins
fucomi
fidiv
inc
scas
stos
push
lods
lahf
pop
imul
jcxz
jno
psrld
jb
sbb
add
ds
ficom
cdq
enter
nop
dec
adc
dec
sub
test
xchg
xchg
push
jae
jo
or
add
and
or
(bad)
in
lds
(bad)
scas
test
stos
mov
inc
enter
push
or
ds
cli
(bad)
daa
push
scas
aam
mov
les
inc
(bad)
push
hlt
xchg
jle
cmc
imul
aaa
hlt
int
imul
(bad)
dec
imul
repz
ret
mov
mov
retf
pop
add
cmc
cmps
sub
mov
cmps
mov
test
cli
sbb
add
xchg
push
xor
cmp
pop
cli
xchg
lods
push
out
iret
movs
std
mov
jne
mov
add
pop
test
inc
out
xor
xlat
sub
lods
inc
mov
in
jge
pop
std
mov
dec
mov
rol
dec
mov
push
jne
and
inc
in
pushf
ret
sub
pusha
popf
and
and
enter
jmp
addr16
inc
dec
pop
mov
jnp
xchg
push
aad
lods
inc
fs
sbb
stc
scas
jg
jg
in
ja
jne
std
push
ret
int3
ss
call
call
pop
iret
aas
movs
ret
add
inc
(bad)
cmp
push
mov
arpl
ss
aam
ficomp
dec
cld
out
and
loope
pop
loope
push
push
xor
adc
add
mov
(bad)
pop
cli
mov
ss
push
fistp
or
and
imul
call
mov
popf
ss
jmp
iret
cmps
lds
sbb
xchg
xor
jne
ja
pop
(bad)
cdq
cmps
cmp
out
outs
stc
(bad)
pop
pop
dec
inc
sbb
mov
popf
aas
jp
jg
sub
repnz
fcomp
ret
cli
arpl
and
mov
jnp
rcr
lahf
hlt
mov
(bad)
sbb
sti
mov
dec
std
mov
ror
in
xchg
mov
icebp
pop
cmps
(bad)
test
jg
(bad)
in
inc
xchg
push
dec
or
adc
xchg
loope
xlat
(bad)
imul
jg
mov
call
aas
in
(bad)
sub
xor
mov
push
mov
mov
adc
xchg
push
jmp
not
popa
cld
jmp
je
mov
retf
push
ret
adc
xchg
scas
inc
jmp
std
cmp
pusha
std
(bad)
sti
pop
inc
outs
jge
lds
stos
mov
jmp
inc
outs
aaa
fadd
mov
popf
int3
and
and
xor
std
fild
out
cli
dec
sbb
or
jmp
fsubr
lods
les
add
sub
dec
xor
sysexit
cdq
je
push
fldenv
add
add
addr16
fldcw
fwait
push
jl
add
lods
mov
sti
sbb
xchg
or
shr
xlat
addr16
sahf
cmps
fstp
je
(bad)
xchg
scas
jo
add
mov
or
rcr
cmp
ret
jmp
(bad)
jg
fistp
cmc
dec
(bad)
push
sbb
push
out
dec
inc
stos
or
sbb
gs
mov
(bad)
push
mov
enter
cmp
pushf
cmps
xlat
fs
add
clc
dec
dec
mov
movs
pop
clc
pop
pop
in
sub
push
xchg
lea
cmp
xor
mov
out
test
outs
cmp
push
cmp
into
aas
lods
(bad)
in
ja
into
popa
fmul
cli
sub
fist
(bad)
fs
sti
xchg
icebp
retf
or
ret
adc
jne
outs
inc
cmc
xlat
ins
loopne
int3
js
sar
inc
ret
and
outs
cmps
(bad)
xchg
push
or
jg
xchg
fcomp
dec
std
and
and
push
(bad)
add
mov
and
ins
sub
daa
jnp
pop
sub
adc
pushf
xchg
pop
push
mov
sub
lock
ds
(bad)
in
pop
mov
pop
push
aaa
mov
fistp
(bad)
mov
sbb
and
andnps
sti
inc
dec
mov
push
jg
popf
jg
mov
int3
mov
push
imul
pop
push
mov
pop
xor
pop
inc
xor
jmp
cmp
scas
stc
push
jg
rcl
xor
shr
rol
stc
(bad)
adc
push
mov
jb
mov
cmps
imul
imul
push
cs
leave
jmp
fild
stc
cmps
sti
push
sub
outs
(bad)
inc
sbb
retf
ja
fistp
add
je
cmp
cdq
jmp
pop
lahf
sub
pop
jle
sbb
jmp
or
cli
cmp
jbe
stc
and
sub
imul
lods
nop
loopne
push
add
mov
inc
xchg
ss
nop
sbb
inc
(bad)
int3
mov
fld
pop
sbb
mov
fistp
jg
dec
ud2
add
mov
or
fbstp
ja
cli
pop
fdivr
cmc
push
dec
stos
jbe
adc
mul
je
hlt
cld
push
mov
aad
hlt
bnd
mov
sub
or
movs
push
sub
sahf
test
stos
imul
popf
mov
data16
mov
mov
aas
int
fist
dec
adc
retf
dec
dec
sub
shl
jge
xchg
cmp
xor
fs
retf
pop
and
pop
ret
fdivr
add
inc
inc
lods
ja
popf
inc
dec
jmp
xchg
(bad)
jge
std
inc
sub
sub
ror
mov
cmp
rol
xchg
mov
mov
xchg
sbb
sbb
(bad)
dec
xchg
shr
imul
fbld
dec
movs
ret
xchg
clc
test
xchg
outs
cmp
or
fstp
ins
add
stos
movs
aas
cs
out
leave
test
mov
push
in
int3
and
sub
hlt
cmp
pop
cmp
sbb
mov
mov
jo
idiv
test
dec
add
inc
cmp
repnz
mov
mov
dec
xchg
pop
lahf
ficomp
fstp
mov
adc
(bad)
add
mov
pushf
cmp
in
or
cmp
jnp
ins
mov
mov
sbb
fnsave
pop
fbld
mov
sbb
cs
neg
fild
dec
iret
mov
mov
not
mov
lods
pop
push
jnp
dec
inc
xor
dec
movs
scas
jecxz
stos
jnp
jno
dec
loop
sar
pop
(bad)
std
outs
lds
inc
mov
pop
out
into
in
je
mov
ins
xchg
mov
jecxz
stos
cld
fcomip
push
adc
loopne
ja
sahf
sub
lahf
into
xor
cmp
dec
jp
ret
adc
fs
in
cld
fistp
jge
(bad)
stos
shr
pop
push
jmp
dec
mov
mov
dec
jbe
iret
repz
(bad)
enter
scas
fdivr
xchg
jg
mov
or
jno
xchg
inc
ins
push
iret
test
and
fs
sub
ds
cmp
dec
cmp
fcomip
xchg
daa
mov
pop
lods
cli
push
sahf
fnstsw
(bad)
add
in
sub
dec
scas
int
fstp
cmp
std
loope
add
lods
arpl
dec
jae
push
std
in
fdiv
not
jmp
cwde
(bad)
das
mov
pop
shr
add
fsubr
imul
lahf
das
cld
adc
imul
je
fcomp
cdq
add
ror
mov
ds
xchg
shl
mov
jmp
(bad)
cld
sahf
and
or
push
imul
push
mov
in
cmp
push
(bad)
out
jne
sbb
int3
sub
imul
mov
nop
xchg
sbb
das
or
dec
sub
push
adc
pop
push
xchg
mov
cmps
dec
dec
push
dec
xchg
and
xchg
dec
push
and
mov
fs
movs
xchg
xchg
xchg
xchg
dec
xchg
push
xchg
dec
rcl
loope
jmp
adc
dec
inc
js
dec
and
movs
mov
inc
dec
and
xchg
xchg
je
sub
xchg
dec
push
dec
and
xchg
xchg
dec
and
sub
daa
test
dec
dec
and
push
xchg
dec
xchg
movs
movs
dec
bound
xchg
push
xchg
dec
xchg
dec
pop
and
inc
dec
dec
xor
je
and
xchg
dec
and
push
xchg
dec
and
movs
xchg
dec
and
dec
and
xor
fs
popf
adc
inc
dec
test
mov
fst
das
dec
bound
mov
repz
xchg
xchg
popf
xor
fs
xchg
dec
dec
dec
and
push
xchg
dec
and
movs
xchg
dec
and
xchg
je
and
bound
movs
dec
xchg
movs
xchg
xchg
xchg
dec
and
and
dec
and
xchg
dec
push
dec
daa
dec
dec
dec
cmp
dec
and
dec
push
dec
daa
dec
dec
dec
sub
sub
and
xchg
dec
and
movs
xchg
dec
and
movs
and
dec
sub
xchg
dec
push
dec
and
xchg
xchg
je
push
call
loop
stos
retf
mov
mov
imul
jp
dec
sti
pop
sub
arpl
in
or
xchg
(bad)
cmp
lahf
mov
fwait
test
test
imul
mov
loopne
jmp
and
cmp
xor
sub
dec
lahf
mov
and
clc
and
or
inc
sub
dec
dec
js
add
and
dec
stos
cmc
sahf
test
scas
test
jp
cmc
jne
sub
stos
inc
pop
jns
gs
adc
mov
pop
sar
mov
xchg
sbb
call
std
add
movs
inc
jg
jecxz
cs
lock
adc
movs
jne
cmp
test
aas
dec
mov
(bad)
inc
into
fidivr
repnz
add
dec
dec
jmp
adc
test
push
cld
call
movs
cmps
or
movs
sub
cli
and
loopne
cwde
movs
lahf
imul
sar
inc
jmp
jecxz
or
hlt
jg
dec
jae
movs
test
call
and
inc
cmps
out
pop
jmp
bound
call
jge
push
jmp
pop
xchg
clc
dec
sti
inc
std
jno
outs
adc
sub
sbb
movs
adc
and
test
sbb
lock
dec
sbb
adc
out
je
(bad)
aas
out
movs
imul
ret
or
push
xchg
mov
test
mov
lahf
jnp
pop
cld
xchg
ins
std
fs
xor
ds
jg
pop
(bad)
adc
inc
stos
std
dec
stos
push
cld
or
jno
jge
lahf
int3
jg
sub
mov
jno
adc
std
das
ja
pop
jmp
ficom
mov
cld
retf
sbb
gs
push
mov
arpl
repnz
ror
add
mov
loop
mov
test
cmp
std
xor
stos
and
mov
imul
xchg
xor
or
and
sbb
add
sub
and
inc
and
cdq
pop
pop
mov
and
and
(bad)
lods
popa
jg
xchg
pop
in
cdq
aam
pop
in
(bad)
add
cmc
lahf
sbb
cmc
sbb
xchg
lock
fwait
jo
xor
in
shr
test
and
(bad)
popa
mov
in
ds
out
and
cli
dec
jae
pop
cld
push
fs
mov
push
(bad)
fnstsw
out
repz
xchg
retf
fistp
xchg
add
sbb
mov
cmps
or
jg
pop
daa
fdivr
repnz
out
mov
retf
movs
cmc
stc
xchg
in
inc
mov
and
(bad)
xor
mov
jmp
dec
div
lahf
push
lods
jge
add
dec
hlt
outs
inc
mov
mov
icebp
and
(bad)
adc
inc
push
push
stos
(bad)
sub
ss
jmp
dec
scas
dec
test
dec
ficom
mov
xor
add
call
(bad)
xchg
jbe
mov
div
stc
sbb
jge
mov
sbb
adc
add
jno
push
enter
cmp
js
push
std
sbb
fstp
pop
push
in
adc
mov
inc
test
jge
push
cli
mov
mov
sub
hlt
sahf
popf
cmc
ret
movs
jno
ret
ret
(bad)
fstp
mov
push
(bad)
loope
add
mov
ja
cmp
pop
inc
outs
xor
cmc
sbb
jecxz
cdq
dec
test
sti
aaa
xor
sbb
call
pop
push
push
add
out
fdivr
xchg
sti
jmp
jmp
mov
jg
fld
mov
fwait
add
cmp
imul
cld
cmc
mov
fs
mov
das
mov
in
xchg
je
mov
(bad)
test
mov
(bad)
xor
loop
sar
stc
in
adc
jmp
xlat
sti
int3
xor
add
mov
ret
int
push
and
lahf
adc
jp
ss
out
xor
jg
retf
mov
stc
test
movs
pop
hlt
fisttp
mov
in
xor
imul
sar
sbb
sbb
xor
jo
cmp
int3
jmp
lahf
mov
pop
sub
arpl
xchg
pop
bound
enter
mov
cmp
xor
ficom
mov
sub
les
xor
pop
(bad)
std
cmp
sahf
or
jmp
cmps
cmp
cdq
and
or
out
hlt
cdq
std
jg
call
jge
jbe
mov
cdq
ins
addr16
dec
sbb
cli
inc
sahf
xchg
mov
xchg
into
(bad)
sar
fistp
xchg
pop
mov
add
pop
inc
mov
mov
fld
push
lahf
in
mov
jne
adc
scas
(bad)
push
fs
retf
inc
sbb
add
das
push
cmp
add
cwde
jge
xchg
xchg
inc
jno
ins
lods
pushf
out
cdq
xchg
rcr
mov
test
dec
adc
inc
aaa
lock
push
iret
inc
shr
push
je
or
push
push
cmc
pop
push
(bad)
jo
(bad)
(bad)
pusha
test
push
or
inc
ins
mov
scas
pop
pop
enter
call
push
cmps
ja
jmp
push
leave
(bad)
outs
neg
pop
rcr
cmc
push
push
sub
xchg
mov
sahf
imul
xlat
push
inc
into
outs
sub
push
imul
sbb
xlat
neg
rcr
and
aaa
(bad)
add
sbb
jne
jmp
leave
jmp
lock
jecxz
fbld
push
in
scas
add
jbe
sub
int3
xor
add
sti
lods
and
mov
xor
mov
and
aas
xlat
push
or
lock
xlat
sub
imul
sbb
sbb
lds
lea
sub
repz
xlat
nop
cli
(bad)
ror
enter
aaa
or
ds
out
call
cmp
cmp
jne
(bad)
inc
sbb
mov
jmp
imul
stc
movs
cmp
das
icebp
icebp
inc
push
ss
pop
int3
lods
mov
mov
(bad)
push
sahf
xlat
shr
scas
add
enter
cs
dec
pop
cmp
pop
jg
mov
mov
cmp
test
sub
aam
ss
outs
xor
sub
lock
xlat
popa
scas
sub
cmp
imul
das
addr16
cld
fbld
imul
jbe
mov
bound
jge
sub
test
ins
std
popa
fwait
ins
in
imul
jnp
jb
cmovne
inc
daa
mov
cs
jg
rep
push
les
or
jns
rol
or
mov
ins
jg
inc
ja
scas
push
fsubrp
sbb
out
sbb
lds
mov
mov
sbb
outs
movs
out
pop
call
inc
stos
xchg
cwde
pop
sahf
out
aaa
mov
psrlq
xor
or
lahf
jmp
pushf
lods
pop
ret
leave
cmp
test
or
add
lock
lea
jl
jnp
jp
js
push
mov
fstp
scas
sbb
push
(bad)
push
(bad)
std
jne
pop
xlat
hlt
mul
sbb
jnp
push
inc
bound
mov
cs
(bad)
outs
and
loopne
fwait
mov
jg
xchg
or
jae
js
jp
mov
lea
cmp
sub
jmp
add
adc
dec
jge
std
and
jle
fidiv
sbb
mov
test
jecxz
(bad)
idiv
add
and
sbb
push
ficomp
aad
adc
imul
jo
or
and
(bad)
sbb
inc
sbb
(bad)
sbb
cmp
xor
xlat
inc
in
ds
jnp
sub
lods
xchg
mov
add
test
lds
inc
cmps
inc
or
dec
dec
retf
xchg
rcl
leave
in
sub
push
mov
fs
xor
dec
mov
dec
xchg
dec
and
push
xchg
dec
cmp
movs
xchg
and
ror
rcl
and
test
xchg
dec
and
movs
jmp
cmp
xchg
dec
cmp
xchg
cdq
cmp
dec
and
xchg
nop
dec
adc
daa
dec
dec
dec
xchg
je
mov
ror
dec
and
xchg
sub
xchg
movs
movs
xchg
dec
cdq
and
movs
xchg
movs
xchg
dec
push
dec
daa
dec
dec
and
dec
sub
xchg
dec
push
dec
and
xchg
xchg
dec
and
and
dec
sub
popf
and
push
mov
cmp
add
or
pop
mov
frstor
dec
xor
xchg
popf
xor
dec
and
inc
xchg
daa
dec
and
movs
and
dec
sub
dec
and
dec
pop
and
and
and
and
and
push
xchg
test
xchg
dec
push
dec
and
xchg
popf
xor
xchg
test
and
xchg
dec
push
dec
and
xchg
dec
cmp
xchg
movs
xchg
xchg
xchg
dec
and
and
and
mov
ror
dec
and
push
xchg
dec
and
inc
call
loop
dec
and
dec
and
and
shr
xchg
popf
jns
dec
stos
retf
mov
outs
out
xchg
mov
xor
mov
mov
add
mov
push
bound
cmps
sar
pop
aad
mov
sbb
xchg
ret
mov
(bad)
mov
ja
inc
clc
xlat
jecxz
add
xchg
add
jmp
add
and
dec
mov
aas
jecxz
sub
or
jo
sar
add
or
ret
xchg
ja
test
or
sbb
push
ds
addr16
cld
xor
jmp
fistp
dec
jmp
popf
bound
mov
mov
adc
adc
add
adc
mov
nop
inc
adc
lods
std
pop
ret
std
popa
xchg
fs
scas
iret
(bad)
(bad)
(bad)
mov
and
scas
pop
sub
mov
and
add
sub
clc
xchg
inc
cmps
pop
inc
adc
jmp
dec
cdq
and
mov
enter
xchg
xchg
dec
xor
xchg
xchg
mov
mov
xchg
loopne
push
scas
fcmovu
jge
(bad)
inc
in
stos
cmps
add
cli
mov
dec
cs
cmp
in
inc
mov
fistp
push
mov
icebp
mov
out
out
lea
xor
jae
je
nop
jle
dec
in
jecxz
pop
aam
inc
dec
es
jmp
std
pop
into
jmp
push
xor
cmp
jne
add
ss
pop
dec
jge
cld
xlat
bswap
idiv
cli
hlt
fiadd
mov
push
fld
frstor
or
pop
jnp
jbe
cmp
mul
jp
daa
add
inc
clc
and
cmp
clc
mov
out
fdivr
(bad)
jg
jbe
sbb
sbb
mov
out
rol
(bad)
mov
pushf
gs
push
cmp
xchg
nop
mov
push
and
sbb
dec
dec
push
jnp
popf
movs
movs
jmp
loop
xor
mov
mov
(bad)
fsubr
fld
jg
jbe
lahf
repz
test
dec
lds
and
jmp
out
cdq
adc
push
jge
(bad)
cs
cld
call
jne
call
push
in
mul
loop
arpl
cld
imul
jne
test
enter
ret
sar
mov
cmc
mov
fidiv
add
mov
(bad)
inc
aaa
aaa
ins
mov
xlat
cli
inc
add
ret
test
mov
push
push
xlat
mov
push
cmp
push
jmp
mov
and
arpl
add
dec
aad
pop
pop
mov
push
xchg
xchg
xchg
sub
dec
mov
jnp
xchg
out
loope
sbb
call
lea
sbb
mov
sub
hlt
out
(bad)
(bad)
stos
push
ret
mov
in
inc
pop
addr16
inc
pop
mov
nop
(bad)
mov
fs
clc
mov
adc
jbe
pop
add
aaa
idiv
mov
into
inc
pop
pop
stos
clc
les
and
push
daa
push
es
push
popa
inc
lods
(bad)
push
jp
aad
into
nop
call
cmp
ret
std
mov
xchg
xor
jle
xchg
dec
ja
add
mov
add
dec
pop
out
je
scas
cmp
xchg
or
into
(bad)
jno
cwde
jg
movhps
mov
rcl
fidivr
retf
jo
dec
xchg
imul
aas
call
push
cs
jg
jl
pop
jle
fstp
arpl
jg
mov
test
pop
inc
cli
in
popf
shl
jle
(bad)
xchg
jg
aad
mov
xchg
add
loope
xchg
jmp
lods
inc
sub
pop
mov
cmp
sahf
imul
sub
sahf
mov
ret
fstp
mov
inc
push
mov
icebp
inc
mov
add
jne
icebp
push
aam
add
cdq
nop
rcr
jnp
(bad)
imul
hlt
xlat
pop
popf
shl
jo
pop
xchg
pop
stos
ja
test
mov
sbb
sub
imul
sahf
mov
xlat
lahf
fbld
inc
hlt
push
sbb
mov
(bad)
out
fadd
leave
out
sub
mov
movs
popf
test
in
cmc
sub
sbb
xlat
pushf
add
ror
xor
out
or
sub
(bad)
iret
push
push
add
xchg
jg
je
mov
xchg
aad
ss
lods
mov
inc
(bad)
out
fild
enter
call
sub
icebp
pop
ret
imul
clc
into
push
fsubr
ja
ins
in
dec
cmp
mov
cdq
out
or
aad
inc
add
mov
out
lods
mov
repnz
pusha
ret
into
push
pop
into
scas
inc
inc
cdq
inc
cdq
test
arpl
iret
inc
adc
push
nop
jbe
add
ret
stc
fistp
test
retf
sub
scas
je
mov
inc
rcr
mov
gs
pop
fptan
dec
sbb
hlt
push
btc
inc
xchg
sbb
sbb
push
mov
pop
jmp
cwde
jbe
(bad)
pop
inc
lods
icebp
sub
fisub
sbb
add
push
shr
out
call
or
stc
ss
(bad)
mov
push
or
sub
fdiv
xchg
cmp
pop
cwde
push
pop
call
outs
scas
addr16
pusha
stos
cmc
push
xchg
jle
mov
rol
loope
mov
xlat
push
sbb
adc
outs
popa
jge
mov
mov
je
mov
popa
lock
dec
xor
fcmove
or
lea
jmp
jns
pop
xchg
out
scas
dec
jnp
loope
and
mov
sbb
jp
pop
push
sbb
jmp
mov
mov
in
les
mov
fld
mov
pop
cld
mov
inc
test
inc
stos
sub
mov
pop
into
outs
cmc
push
outs
(bad)
jne
jnp
jmp
jmp
mov
sbb
(bad)
shl
push
jmp
das
ins
mov
xchg
cmc
fcomp
jecxz
dec
inc
mov
shl
test
gs
push
ret
stos
lods
test
scas
xchg
std
data16
sbb
iret
repz
xchg
and
je
out
add
mov
adc
cli
int3
pop
push
fisubr
and
jbe
cmps
not
mov
jmp
lahf
sti
loop
lds
je
out
movs
and
retf
sbb
movs
fs
lahf
shl
fidivr
aad
sti
dec
xchg
inc
xchg
ss
mov
lahf
cli
xchg
test
xor
jno
xchg
mov
into
dec
inc
jo
stos
mov
jge
leave
cli
inc
cli
cmc
lods
out
add
es
sub
outs
movs
lds
xor
hlt
fnsave
into
call
or
loope
mov
(bad)
je
out
jmp
sub
mov
cmps
mov
dec
retf
sub
call
jne
jae
outs
inc
movs
mov
lods
ja
jmp
aad
sbb
sub
pop
pop
in
mov
pop
mov
fdivr
sub
xor
cmp
jnp
jo
or
inc
pop
stos
inc
clc
neg
inc
test
xchg
(bad)
sti
sbb
jb
(bad)
adc
in
sahf
mov
mov
sub
out
xchg
imul
ja
push
popf
jl
mov
cmp
inc
out
mov
rol
fidivr
icebp
jg
pop
push
pop
das
jg
rcr
out
sub
dec
pushf
popa
mov
fs
jmp
cs
daa
fnsave
into
in
jge
dec
mov
std
test
cli
sub
cmp
repz
pop
push
mov
mov
sbb
inc
lock
mov
fimul
mov
lds
cmovne
imul
out
inc
mov
add
jae
and
sti
mov
mov
add
ins
addr16
mov
(bad)
sti
js
cmc
nop
mov
aad
sbb
cmp
inc
fwait
inc
js
mov
fsubr
popf
aas
lods
sbb
xchg
imul
jno
loopne
scas
and
loop
sbb
mov
xchg
std
outs
cld
xchg
outs
inc
mov
(bad)
add
dec
shr
daa
and
cld
xlat
jnp
outs
cld
mov
pop
dec
test
mov
fild
ds
add
push
pushf
rcr
or
fstp
or
xor
mov
in
cmp
mov
and
and
test
xor
les
add
pop
bound
xchg
and
mov
es
xchg
push
repnz
fs
dec
xchg
push
xchg
movs
xor
sub
dec
push
dec
xchg
and
xchg
dec
xchg
dec
push
je
rcl
cmp
popf
and
and
sub
push
xchg
xchg
xchg
dec
rol
daa
dec
and
dec
pop
and
and
loope
daa
dec
xchg
cwde
cmps
dec
adc
dec
adc
cs
dec
rcl
daa
dec
and
sub
movs
push
push
push
xchg
daa
dec
adc
and
dec
push
dec
and
xchg
xchg
dec
and
and
dec
sub
and
push
leave
daa
dec
adc
dec
cmp
and
dec
dec
and
dec
sub
inc
mov
sub
fucomp
cmp
mov
neg
fcmovu
adc
and
xchg
dec
adc
sub
push
inc
jmp
xchg
dec
rcl
daa
dec
xchg
xchg
or
xchg
push
xchg
dec
cmp
and
and
xchg
dec
xchg
dec
pop
and
xchg
push
xchg
dec
and
movs
leave
ror
and
and
movs
xchg
dec
and
movs
and
daa
dec
and
movs
xchg
movs
mov
xchg
dec
cmp
fs
test
test
xchg
xchg
dec
and
and
dec
sub
xchg
dec
push
dec
daa
test
call
loop
dec
xor
dec
dec
dec
cmp
xchg
dec
and
push
jmp
dec
lods
sub
mov
pop
push
div
rol
cmp
mov
push
lods
ins
push
bndldx
inc
fistp
(bad)
xchg
aam
rcl
jns
xlat
cmp
psadbw
add
cmps
into
and
mov
inc
mov
popf
xchg
jae
cs
sub
xlat
jb
jg
jle
push
inc
mov
cmps
xlat
int3
and
mov
fucomip
jge
cld
adc
xor
pushf
scas
sahf
out
stos
std
arpl
mov
div
mov
movs
inc
scas
cs
daa
adc
jae
or
aas
(bad)
inc
dec
std
xor
inc
xor
fwait
fs
ja
xchg
imul
add
or
mov
dec
rol
cld
jns
add
mov
inc
pushf
adc
pop
repz
inc
enter
xchg
mov
and
cmp
sub
dec
nop
xor
and
aad
jmp
sbb
mov
repnz
sub
fcmovu
push
mov
iret
push
neg
mov
cmp
dec
xor
adc
or
inc
(bad)
cli
xlat
xlat
lods
outs
xchg
nop
in
pop
imul
pop
sbb
pop
cmps
addr16
xchg
mov
sbb
xlat
sub
scas
shl
mov
dec
sub
out
icebp
sub
add
mov
std
inc
jecxz
hlt
jbe
lods
popf
pop
and
ret
jecxz
pop
cmc
inc
popa
in
jg
lds
xchg
and
mov
mov
xchg
out
jnp
hlt
test
xor
cmps
jmp
or
in
adc
xchg
xchg
dec
sub
pushf
adc
xchg
mov
nop
pop
pusha
mov
in
mov
mov
jp
mov
fs
jae
(bad)
adc
push
adc
or
ds
xlat
ds
fisttp
inc
pop
fcomip
mov
scas
push
stos
jge
jmp
ret
xor
loope
sti
dec
(bad)
jmp
dec
cmp
xor
(bad)
adc
pop
sub
pop
pusha
repnz
or
out
dec
popf
test
jmp
inc
mov
retf
scas
sub
and
jmp
sbb
movs
cmps
or
sub
or
rcl
jge
cli
not
jecxz
cmp
popf
pop
sar
(bad)
jg
push
neg
jmp
mov
gs
or
movs
xchg
mov
ja
pop
ins
or
call
sti
and
fld
call
std
pop
mov
outs
jmp
scas
push
into
ret
jmp
in
jbe
pop
cli
fcmovnu
in
pop
lds
hlt
sti
fisttp
aas
stc
inc
and
pop
test
or
movs
dec
adc
pop
jg
out
xor
in
mov
sub
(bad)
xlat
xchg
jecxz
aas
push
jne
jg
(bad)
scas
push
push
add
fxtract
push
mov
int
xchg
cmp
cmp
aad
cmps
jmp
dec
jmp
loop
inc
scas
aas
cmps
out
imul
pop
mov
push
cmp
add
stos
push
mov
in
ret
addr16
mov
fcom
push
in
cmc
dec
sbb
mov
adc
sub
add
ret
(bad)
fdivr
mov
js
cld
ins
mov
inc
mov
test
jnp
imul
std
ja
pop
pusha
xor
pop
rcr
sar
xor
cmp
jo
jmp
xchg
shl
fmul
mov
test
jmp
xchg
add
cdq
add
jg
shl
aas
(bad)
jmp
ss
sti
cmp
mov
xor
sbb
aad
call
mov
inc
adc
arpl
enter
ja
mov
add
loop
jb
outs
les
in
jae
cmp
add
shr
xor
stos
shl
imul
lea
sub
out
fild
inc
jb
dec
bound
add
push
sbb
xchg
pop
aas
jb
arpl
sahf
aaa
(bad)
or
cwde
inc
ins
jne
outs
add
jg
out
inc
ror
jo
xchg
cmps
(bad)
pop
cld
xor
pop
out
outs
std
and
cli
fisubr
xlat
or
pop
jmp
test
hlt
shl
lods
hlt
fisubr
(bad)
(bad)
jbe
paddw
movs
(bad)
pop
cmp
xor
mov
inc
ins
sub
pop
cmp
add
ins
pop
out
sbb
in
mov
sbb
int3
add
popf
mov
inc
popa
ins
arpl
ins
into
ret
mov
daa
int
(bad)
ret
cld
inc
cmps
mov
xchg
sar
push
enter
cld
jmp
cmp
jno
(bad)
xor
cmc
mov
mov
jae
push
mov
push
out
cld
leave
sub
mov
sbb
jge
mov
adc
pop
mov
fld
imul
mov
mov
std
dec
mov
shr
and
not
lods
pushf
dec
xor
shl
inc
stc
int
stos
not
in
int3
sar
push
jae
xor
pop
inc
jle
inc
and
push
lods
push
mov
addr16
mov
mov
mov
stc
inc
xor
mov
(bad)
cmp
fld
repz
shl
xchg
ror
out
aad
push
lods
mov
(bad)
pop
out
ja
sbb
rol
arpl
ret
pop
mov
enter
in
pxor
mov
clc
and
lea
aam
test
call
js
loope
ins
in
jae
cwde
inc
push
cmps
pop
xor
cmp
xchg
nop
inc
std
adc
jbe
sub
mov
inc
mov
mov
movs
jne
xchg
xchg
cmp
dec
or
popf
push
mov
inc
push
add
shr
inc
xchg
into
iret
outs
mov
inc
sbb
xchg
mov
dec
jnp
xor
xchg
pop
(bad)
outs
div
mov
in
rcr
jmp
cs
cs
xor
push
push
ud1
fmul
iret
outs
lods
pop
lea
mov
jp
dec
sbb
imul
mov
xlat
pusha
popa
adc
jne
jp
daa
push
outs
in
sbb
fidivr
inc
sub
mov
sbb
mov
and
pop
or
or
rcr
out
les
sti
scas
sbb
cmc
xchg
pop
aad
cs
fsubp
jmp
fld
jmp
aad
cs
neg
stos
sahf
cmp
pop
fs
movs
xchg
das
ret
push
pop
loop
jg
sahf
xlat
std
lods
(bad)
sahf
jns
imul
sti
mov
dec
mov
(bad)
loop
std
xchg
sahf
fldenv
sbb
pop
dec
mov
xchg
mov
cwde
cld
ret
mov
push
aaa
fst
imul
jno
pop
mov
(bad)
pushf
imul
cmp
mov
in
inc
sub
cmps
and
mov
cmc
xor
pop
mov
fimul
outs
pusha
inc
sub
jne
cmp
jno
int
lahf
adc
dec
mov
jge
pop
dec
out
(bad)
xlat
bound
sbb
fsubr
xchg
daa
icebp
push
push
ffree
test
jl
test
jnp
cmc
sub
sahf
sub
mov
mov
jp
(bad)
sbb
mov
aaa
(bad)
xor
mov
inc
push
cmps
loope
jmp
adc
ins
xchg
mov
pop
push
cli
stos
enter
scas
adc
pusha
repz
jg
inc
int3
dec
cs
in
out
mov
fcomi
push
jg
sbb
xchg
xor
jbe
sub
arpl
cld
test
dec
pop
scas
jns
mov
cs
sahf
jecxz
std
jbe
call
sahf
jecxz
cld
movs
fwait
sbb
icebp
inc
int3
aad
fmul
mov
fisttp
lock
pop
in
ror
cmp
lds
mov
(bad)
(bad)
jns
stos
lea
or
sub
inc
xchg
fldcw
call
ins
nop
shl
fldcw
mov
jne
adc
lea
pop
xchg
adc
mov
bound
inc
(bad)
inc
sbb
fs
pushf
xor
jmp
mov
stc
mov
xor
and
dec
js
or
inc
test
(bad)
xchg
fidivr
xor
pop
not
dec
add
cmp
out
jo
adc
das
sub
xchg
in
dec
dec
dec
adc
add
pushf
add
ret
cmp
sub
pop
cmp
test
push
dec
adc
push
lds
adc
xchg
cdq
cmp
dec
and
dec
push
fs
xchg
dec
push
dec
daa
dec
dec
daa
dec
cmp
cmp
push
jmp
xor
dec
dec
dec
pushf
and
and
xchg
cdq
cmp
push
cwde
movs
popf
sub
and
je
movs
xchg
dec
adc
cmp
xchg
xchg
je
push
leave
adc
mov
and
dec
dec
dec
cmp
stos
push
ds
xlat
pop
sbb
xor
(bad)
stos
movs
retf
retf
mov
and
dec
push
dec
daa
dec
dec
dec
and
and
daa
dec
dec
dec
and
push
xchg
dec
and
mov
dec
xchg
dec
and
dec
and
and
mov
ror
and
sub
and
and
mov
xchg
movs
movs
xchg
dec
xchg
dec
push
dec
and
xchg
xchg
je
push
xchg
dec
and
movs
xchg
dec
and
dec
dec
and
sub
xchg
xchg
dec
xchg
dec
sub
dec
and
sub
xchg
test
sahf
adc
aam
mov
lahf
adc
aas
inc
std
jecxz
add
xchg
ret
jo
dec
(bad)
add
mov
pop
adc
(bad)
aad
xor
scas
popa
cli
inc
pop
inc
ret
loopne
test
mov
and
or
fs
movs
or
fs
xchg
sbb
fsub
inc
xor
dec
lods
dec
dec
jge
in
test
fsubrp
or
cli
push
mov
inc
jp
aad
cmp
aad
lock
in
lds
stc
add
sbb
sub
and
jmp
and
in
leave
and
mov
push
mov
mov
outs
inc
dec
and
scas
cmps
mov
(bad)
enter
add
mov
icebp
push
dec
xlat
mov
dec
dec
and
outs
cs
pusha
cmp
pop
cmc
or
fisubr
xchg
dec
inc
pushf
and
hlt
dec
ja
inc
mov
ret
test
xor
xchg
dec
jmp
jecxz
cmovns
icebp
out
(bad)
outs
iret
std
push
mov
mov
xchg
jl
loop
xchg
ins
push
imul
xchg
push
pop
jmp
inc
scas
cmp
add
aaa
(bad)
fisttp
mov
loope
loopne
dec
int
sbb
jmp
push
sub
pop
ret
inc
dec
jge
mov
imul
ja
setp
push
xchg
xchg
sbb
xor
xlat
xchg
lock
dec
aad
push
add
adc
retf
js
enter
cmp
jmp
sub
jo
inc
pop
ins
mov
mov
xchg
ss
popa
or
sbb
outs
sub
shl
setnp
add
ins
stos
lods
jbe
hlt
pop
cld
cmp
mov
mov
inc
inc
ja
adc
shl
or
std
popa
call
push
std
pop
retf
sbb
in
jle
retf
mov
rcl
jns
lods
and
and
sti
nop
ror
or
inc
lds
dec
not
loopne
adc
xor
xor
ret
push
jnp
mov
popa
mov
sbb
add
mov
jl
aaa
jmp
sub
mov
add
ret
push
aas
in
sub
add
stos
inc
add
xlat
mov
xchg
mov
jle
cmc
adc
data16
or
sar
repz
sbb
push
cmp
sub
sar
mov
mov
jae
jge
push
sbb
test
stos
pop
xchg
loope
jo
xchg
movs
cmps
jb
and
loope
cmp
sub
push
ret
mov
sub
cmp
cld
scas
sti
lods
addr16
inc
cdq
push
into
lods
enter
cld
aad
je
mov
xchg
sub
jg
xor
repnz
cmps
xlat
in
push
ja
adc
cmp
mov
add
mov
pop
retf
das
jmp
cmp
rcl
mov
cmp
lds
test
aam
pop
scas
ja
xchg
std
jp
and
bound
cmp
mov
imul
push
push
sub
out
loope
test
sti
jae
scas
xchg
mov
jmp
iret
repz
or
jo
movq
pop
imul
mov
std
in
pop
scas
push
inc
adc
push
sbb
out
pop
ja
mov
sbb
(bad)
mov
pop
cld
popa
fadd
sbb
sbb
(bad)
push
repz
les
movs
ret
movs
repnz
lods
sbb
arpl
addr16
mov
jmp
inc
and
aas
hlt
arpl
aaa
aad
lds
leave
add
lock
in
inc
xor
pop
dec
xlat
int
jecxz
aad
adc
sub
inc
jo
into
test
or
mov
fdivr
(bad)
jne
add
dec
and
arpl
test
fstp
lods
sbb
iret
pop
sti
xchg
cmps
das
(bad)
push
popf
jl
mov
(bad)
js
fmul
repz
arpl
cs
stos
loope
adc
pop
out
mov
repz
(bad)
daa
(bad)
jl
cmp
(bad)
dec
shr
xlat
cld
in
mov
cli
dec
jmp
(bad)
cmc
mov
fistp
add
call
movntq
in
jnp
out
fstp
lahf
push
das
and
ret
mov
mov
pop
scas
aaa
pop
jmp
int3
ja
xor
xchg
xchg
push
pextrw
jo
mov
mov
pushf
jl
sbb
sub
popf
sub
int
mul
inc
sub
xor
ja
mov
mov
mov
inc
push
xchg
add
popa
fisttp
cmc
call
and
mov
fisub
push
pushf
pop
mov
xchg
push
aam
movs
cmp
jmp
xchg
xor
pop
ret
adc
adc
jmp
mov
xchg
inc
push
lods
addr16
lods
inc
cli
fistp
inc
sbb
sar
mov
pusha
add
push
scas
fnstsw
jg
and
sub
cmps
sar
imul
mov
repz
enter
mov
push
xchg
test
and
sbb
xchg
or
test
out
jnp
lods
jmp
or
jge
retf
rcr
jp
(bad)
jmp
dec
fcomp
pop
jne
or
pop
and
jmp
daa
sbb
cwde
cld
sar
push
scas
jp
inc
dec
sub
adc
mov
aaa
inc
mov
push
cmp
test
lahf
inc
sub
push
mov
sub
push
outs
test
fld
adc
cli
inc
mov
xchg
cmp
je
add
or
(bad)
jmp
(bad)
sub
mov
mov
mov
ror
loopne
xor
aam
in
and
out
xor
call
mov
test
ds
addr16
inc
lods
push
push
adc
jg
push
jmp
out
inc
clc
cdq
dec
adc
push
in
retf
les
icebp
pusha
ds
std
xchg
xchg
outs
movs
lds
mov
cwde
out
push
push
loop
push
loopne
pop
cmp
add
imul
imul
inc
mov
(bad)
adc
xor
sahf
inc
xor
addr16
dec
pushf
and
jae
pop
mov
sbb
js
arpl
cmps
cwde
test
mov
add
jp
inc
pop
(bad)
push
mov
mov
cmp
lods
shr
(bad)
fisubr
fcom
sbb
(bad)
sub
cwde
iret
fistp
pop
cmp
dec
pop
mov
test
ins
enter
mov
mov
movs
fnstsw
leave
aas
call
push
sub
out
sbb
sub
jmp
jb
std
adc
pop
pop
xchg
fs
fidiv
in
ss
dec
out
sub
in
repz
pop
sti
enter
(bad)
sub
sbb
imul
popa
xor
mov
fneni(8087
jle
(bad)
mov
sbb
aad
push
mov
jle
jp
jle
jne
dec
ds
pop
mov
or
add
inc
xor
inc
cmp
inc
sbb
add
pop
dec
mov
jg
addr16
xchg
pop
mov
outs
(bad)
div
jmp
mov
imul
pushf
test
data16
jno
js
inc
(bad)
(bad)
mov
js
out
aam
aaa
push
rol
adc
fidivr
gs
push
in
and
shl
loope
in
retf
push
(bad)
(bad)
call
mov
xchg
mov
dec
loope
shl
sti
mov
cmp
lods
outs
out
xor
push
sbb
cmp
push
lods
sbb
adc
dec
data16
call
fiadd
fcomp
push
std
retf
sub
mov
cld
jl
sti
push
cmps
pusha
inc
xchg
into
sbb
adc
je
jno
inc
and
and
in
mov
aaa
popa
not
xchg
repz
inc
push
aad
lea
xchg
test
sub
jle
or
mov
mov
ds
and
push
push
ds
push
push
pavgw
mov
not
imul
push
push
gs
xchg
mov
mov
push
dec
jmp
jnp
rol
(bad)
and
dec
add
xchg
in
(bad)
adc
js
adc
adc
and
and
add
dec
dec
and
push
dec
or
dec
and
and
push
xchg
dec
and
movs
xchg
dec
and
dec
dec
and
push
xchg
dec
sub
or
and
sub
adc
daa
dec
and
sub
dec
xchg
cmps
dec
dec
dec
popf
xor
push
dec
shl
movs
xchg
dec
and
movs
xchg
dec
adc
mov
daa
dec
cdq
and
dec
push
dec
ret
(bad)
adc
dec
dec
test
mov
popf
and
sbb
inc
sub
sub
jns
mov
out
fisttp
and
inc
dec
dec
cmp
dec
and
dec
push
dec
daa
dec
dec
dec
and
inc
xchg
movs
xchg
dec
push
je
rcl
dec
and
movs
xchg
dec
and
sub
popf
and
xchg
je
sub
dec
and
sub
dec
and
dec
dec
cmp
push
xchg
dec
and
dec
daa
test
dec
adc
rol
dec
or
fs
test
xchg
xchg
dec
cmp
or
fs
adc
dec
arpl
ror
inc
leave
mov
and
sub
and
adc
dec
jg
aad
push
dec
and
xchg
movs
movs
daa
xchg
leave
and
inc
lds
cli
in
dec
sbb
and
clc
cmps
fcomp
and
pushf
shl
inc
lock
clc
cmps
or
cmp
inc
call
jp
scas
test
(bad)
xor
fnstsw
in
inc
mov
les
adc
jge
jmp
jno
test
imul
ins
retf
pop
lahf
push
jp
cmp
stos
cld
rcr
mov
push
lock
jecxz
rcr
aad
cld
cmps
jg
cmpxchg
pop
mov
arpl
imul
push
sti
jmp
add
xor
stos
mov
cli
lods
or
aas
pop
jle
loop
sar
paddw
fcomip
mov
adc
loop
stos
sub
jp
es
push
add
jmp
jmp
or
nop
cmps
sbb
sbb
fstp
fs
xchg
dec
pop
push
retf
dec
dec
adc
fs
dec
push
inc
gs
outs
jns
jmp
cs
movs
scas
cmp
sbb
sbb
movs
jne
imul
inc
in
jnp
add
add
jp
push
pop
fs
and
sub
xchg
add
cld
sar
xchg
pop
popf
pop
jmp
lods
push
mov
call
sar
mov
imul
jo
lock
inc
jmp
jmp
pop
pop
xchg
std
mov
mov
(bad)
add
inc
movs
inc
lods
stos
stc
cmp
pop
lock
aaa
test
leave
cmc
mov
mov
xchg
jge
faddp
cld
mov
out
cld
and
pop
push
push
add
iret
test
in
hlt
scas
std
imul
add
cld
and
rcr
and
add
jl
and
je
jae
pop
push
jmp
sub
sahf
int
imul
(bad)
jno
pushf
jae
push
or
(bad)
int
dec
xor
dec
call
sub
mov
add
sub
cmp
xlat
(bad)
mov
in
adc
aas
test
cmp
fld
gs
cld
sbb
ja
outs
std
and
adc
and
sbb
dec
sbb
loopne
or
(bad)
jmp
in
jg
stos
test
jg
fmulp
xor
fdivr
lods
fiadd
je
xchg
cmp
add
(bad)
xchg
mov
jmp
shl
mov
fs
std
mov
mov
pop
out
fdivr
push
cmp
imul
imul
int3
ja
lods
imul
dec
test
sbb
into
mov
cmp
jbe
std
dec
ss
pop
inc
push
shr
(bad)
jle
out
int3
mov
scas
pop
cmc
fnstsw
push
loopne
mov
(bad)
mov
loope
or
xchg
push
jmp
cmps
inc
dec
jmp
ret
(bad)
mov
jp
cli
daa
clc
(bad)
cmps
and
in
imul
iret
cli
jecxz
xchg
imul
cmp
adc
test
pop
xor
and
stos
mov
(bad)
cs
lods
sbb
jnp
(bad)
fdiv
inc
inc
cmp
(bad)
mov
shr
add
(bad)
sbb
test
inc
test
(bad)
or
lock
push
xor
(bad)
sbb
(bad)
out
cld
gs
ret
shld
sub
pop
dec
lods
dec
jno
imul
sub
lds
out
jne
sti
out
std
pop
push
out
xchg
imul
fcomp
cmps
dec
mov
sub
inc
sub
dec
and
leave
jmp
sub
xchg
pop
cli
in
cli
cs
inc
aad
scas
sub
das
sbb
ins
adc
inc
out
jge
int
mov
xchg
retf
daa
mov
addr16
rcl
es
fld
mov
and
(bad)
hlt
xchg
out
pop
xchg
aad
or
popf
mov
imul
cmp
jb
aas
xor
cld
sbb
push
cwde
jbe
push
sub
enter
inc
or
nop
pushf
movs
xchg
xchg
and
out
mov
mov
jge
or
cs
std
push
scas
adc
das
test
xchg
mov
enter
or
xchg
jno
sub
mov
dec
mov
fld
test
adc
and
mov
fcmovu
add
inc
shl
outs
(bad)
outs
mov
sbb
jmp
outs
std
mov
mov
dec
cmp
mov
test
jl
cmp
outs
std
sbb
ins
test
mov
jmp
sub
pop
aaa
mov
inc
push
sbb
cmps
pop
imul
and
jg
xlat
and
inc
vorps
loopne
mov
push
cmp
test
call
das
jae
mov
jg
jmp
jle
add
mov
mul
mov
cmp
xchg
out
arpl
pop
cmp
adc
fidivr
fnstsw
jmp
push
outs
jg
scas
jmp
pop
(bad)
cmp
and
(bad)
mov
fsub
and
pop
dec
fistp
dec
out
or
jp
clc
mov
dec
aad
cld
jmp
into
pop
mov
popf
mov
mov
inc
adc
jmp
inc
sbb
fcomp
frndint
mov
push
cmps
pop
pop
jmp
loop
idiv
cli
inc
into
cli
dec
mov
xor
mov
and
loop
jne
fisttp
paddsw
inc
test
mov
mov
and
jae
stos
out
cmp
jl
sub
lea
fadd
in
ins
loop
ins
mov
jae
ins
jecxz
ss
add
sub
mov
fild
push
ret
stc
xchg
jno
xchg
stos
pop
mov
int
test
fisub
bound
fwait
jnp
call
push
loope
cmps
cli
mov
cmp
(bad)
mov
mov
fs
sub
inc
jge
into
xor
or
push
inc
or
mov
fstp
aas
(bad)
(bad)
cmp
add
mov
cli
int
aam
sbb
mov
shl
cmp
mov
je
sar
mov
(bad)
or
dec
cli
push
out
mov
xchg
xor
cmp
or
cmp
pop
stos
fild
out
mov
aad
mov
pop
outs
repnz
jb
aam
push
push
dec
idiv
jg
(bad)
loop
adc
and
ins
int3
retf
mov
lahf
jecxz
add
stos
mov
mov
push
(bad)
std
lds
adc
xchg
arpl
sbb
out
cmp
sub
push
cli
push
push
outs
xchg
push
loop
rcr
xor
mov
iret
test
outs
stos
pop
adc
and
dec
adc
or
lock
or
push
mov
dec
xchg
lock
mov
popw
dec
jmp
out
mov
jp
pop
dec
aas
cmps
popa
or
inc
adc
xor
and
aas
test
sub
pop
mov
push
cmp
test
xchg
in
test
mov
rcl
icebp
mov
ret
cli
mov
mov
pop
xchg
cmps
popf
in
inc
enter
dec
and
cmp
pop
test
lea
pop
in
sti
arpl
inc
aaa
popf
add
imul
aad
xor
idiv
pusha
neg
popa
mov
pop
arpl
xor
sahf
ja
enter
jnp
sbb
mov
std
adc
dec
sub
fiadd
ja
std
ret
lahf
test
or
or
fsubr
(bad)
int3
in
std
test
popf
inc
push
in
hlt
std
ins
inc
or
in
cli
inc
sti
or
add
ret
mov
mov
shr
mov
into
add
mov
mov
xor
lods
fsubr
hlt
outs
ror
movs
aaa
cmp
cmp
pop
in
psadbw
jne
inc
and
stc
xor
mov
push
fsub
imul
jl
test
mov
addr16
mov
add
int
push
sub
fidivr
lahf
adc
push
fidivr
ss
push
pop
sahf
out
mov
arpl
in
imul
jg
test
pop
scas
loop
adc
add
xchg
and
mov
jmp
sbb
jmp
out
paddd
mov
arpl
pop
(bad)
xor
pop
sub
clc
cli
mov
xchg
and
into
dec
inc
stos
xor
cmp
ror
rol
cli
stos
sbb
jbe
mov
imul
(bad)
push
and
or
mov
jge
xlat
sbb
ins
aad
ins
in
sbb
into
and
aam
repz
lods
mov
pop
xchg
cmps
jle
aad
jns
mov
retf
push
inc
dec
fwait
jno
lods
mov
loope
movs
xchg
int3
out
repnz
push
leave
cld
(bad)
dec
fild
pop
jmp
movs
(bad)
stos
stos
fnsave
hlt
jg
inc
jbe
jmp
not
imul
fnstsw
call
add
pop
and
stos
mov
jg
or
repnz
adc
adc
add
lock
enter
fidiv
cmp
stos
rcl
cmp
fst
cmc
or
movs
dec
loopne
mov
mov
ja
cmp
add
and
mov
inc
xchg
sahf
leave
push
repz
xchg
jle
inc
retf
inc
jle
(bad)
sbb
or
mov
inc
retf
dec
stc
and
xchg
call
sub
jns
add
(bad)
fs
pusha
test
push
cmps
mov
mov
or
aad
mov
test
xor
mov
cmps
sbb
push
(bad)
movs
ja
dec
mov
push
enter
sbb
pushf
test
test
push
dec
and
xchg
xchg
dec
rcl
daa
dec
adc
loope
xchg
push
mov
push
fs
movs
or
push
leave
daa
dec
adc
inc
dec
and
mov
mov
fs
mov
xchg
dec
dec
dec
and
push
xchg
dec
cmp
and
and
xchg
dec
xchg
dec
pop
and
and
xchg
dec
and
movs
jmp
mov
push
dec
and
xchg
cwde
test
and
out
jb
stos
popf
dec
or
mov
inc
dec
cs
mov
and
cmp
and
mov
sub
popf
and
popf
and
push
xchg
dec
and
movs
jmp
dec
rcl
ror
sub
dec
dec
cmps
dec
cmp
dec
and
xchg
xchg
dec
and
and
dec
sub
xchg
dec
push
je
dec
dec
dec
xchg
dec
sub
dec
sub
test
xchg
movs
xchg
movs
xchg
xchg
xchg
push
sahf
adc
inc
js
adc
xchg
sub
xchg
xchg
test
fs
sub
and
cwde
ret
or
add
adc
add
push
dec
and
xchg
dec
or
cdq
cmp
xor
push
jmp
dec
push
into
test
push
inc
push
or
(bad)
pop
xchg
inc
inc
sbb
js
push
aam
pop
stos
div
cli
(bad)
xchg
jno
cmp
bound
fidivr
cmc
mov
psrld
cmp
ss
out
cmp
mov
pop
arpl
sub
mov
scas
xor
in
das
test
pop
xor
imul
sahf
adc
pop
into
hlt
jp
mov
add
inc
loope
mov
out
cld
aas
rcr
xor
cld
pop
std
ins
pop
test
add
jno
jae
jno
xchg
(bad)
jmp
icebp
scas
fisttp
inc
stc
adc
inc
test
mov
out
sub
hlt
xchg
inc
dec
inc
xor
js
push
jg
mov
jecxz
out
add
rol
fwait
jmp
bound
sbb
(bad)
and
ins
inc
xor
movs
jle
mov
inc
and
mov
push
imul
or
stc
fbld
xor
sbb
or
rcl
and
sub
jo
xor
dec
dec
dec
and
push
loope
mov
test
jo
sub
rcl
std
push
cli
sti
nop
retf
pop
mov
inc
iret
shl
(bad)
adc
enter
adc
pop
loopne
fcomp
movs
cmp
cmp
pop
cmps
dec
dec
(bad)
outs
test
sahf
jb
gs
icebp
jne
mov
inc
in
lds
mov
xor
inc
(bad)
sahf
inc
ins
jbe
fcom
push
jmp
jge
xchg
fld
push
retf
dec
imul
mov
mov
imul
pop
or
hlt
jge
cmps
push
xor
cmp
cmp
test
add
movs
dec
les
sub
dec
mov
iret
shl
(bad)
push
add
in
sub
dec
and
in
leave
rcl
lods
out
stos
mov
push
dec
mov
sahf
and
sbb
and
inc
mov
mov
cmps
jnp
ja
(bad)
jle
mov
xchg
push
push
shr
(bad)
dec
sahf
jp
in
stos
inc
jbe
iret
out
inc
imul
inc
scas
pop
cli
popf
dec
int
adc
cwde
and
and
sahf
xchg
ds
and
mov
mov
test
daa
and
cli
xor
push
sahf
dec
inc
dec
and
cdq
add
and
jns
push
xchg
push
rcl
add
add
cmp
test
add
dec
mov
xchg
lahf
std
sbb
in
jg
or
out
add
jg
pop
and
aad
sahf
cmps
shr
mov
push
icebp
movq
loope
mov
cld
xchg
jge
(bad)
outs
dec
mov
div
cld
and
sbb
xchg
sar
push
imul
and
push
ret
enter
call
into
adc
dec
xor
cmps
add
or
test
push
jns
ficomp
in
and
sbb
or
mov
cmc
fimul
ins
outs
cli
jbe
sti
push
push
cld
cmp
(bad)
mov
fsubr
into
fidivr
sar
fs
rol
test
fcomp
sub
out
mov
xchg
cwde
fistp
(bad)
ret
in
inc
dec
dec
cmc
inc
ds
pop
mov
pop
pop
lock
loope
cmp
mov
(bad)
ror
nop
jno
sub
cmp
lock
ror
mov
ins
cmps
jo
dec
xchg
(bad)
sub
adc
lods
add
sub
pop
cli
dec
push
push
push
jge
or
pop
icebp
fsubr
xlat
mov
mov
aas
out
cmc
jg
adc
xor
out
and
and
push
cli
outs
(bad)
sbb
ror
addr16
(bad)
cmp
loop
cmc
bswap
outs
mov
and
movs
inc
es
fcom
arpl
cmp
inc
outs
mov
popa
push
mov
jmp
fwait
add
(bad)
jge
or
scas
inc
cmp
mov
dec
ins
cmc
aas
jbe
sbb
cli
(bad)
mov
jbe
lahf
jmp
jp
lods
(bad)
sub
out
add
pop
int
mov
cmc
pop
icebp
jg
mov
lahf
mov
rcr
inc
cli
fist
lods
inc
repz
jne
aam
jne
fistp
repnz
xchg
add
(bad)
pop
sbb
jno
or
jl
ficomp
dec
in
inc
adc
pop
push
jmp
pusha
dec
out
mov
mov
pop
stos
shl
ss
mov
dec
dec
(bad)
nop
outs
ins
pop
sub
retf
mov
jae
add
pop
push
movs
dec
lahf
push
mov
stc
cmc
sti
xchg
dec
pusha
cmp
dec
mov
pop
xlat
test
(bad)
inc
rcr
out
out
rol
mov
in
xlat
(bad)
xor
add
pop
ins
xor
(bad)
(bad)
mov
(bad)
mov
mov
add
xchg
scas
es
js
push
aas
int
cmc
std
imul
imul
idiv
and
call
cmc
cmp
push
cmc
int
das
stos
stc
popf
cmp
push
test
cmp
fwait
and
retf
cmp
pop
sbb
mov
mov
jg
sbb
add
popa
cwde
(bad)
jg
arpl
in
jmp
adc
mov
push
fwait
jp
dec
jmp
loope
xor
int3
dec
out
stos
lods
retf
add
aas
je
pop
cmps
sbb
inc
push
xor
add
sbb
mov
xor
les
rol
xchg
imul
gs
lods
int
std
mov
dec
or
inc
jbe
(bad)
xchg
push
inc
add
imul
pop
pop
repz
call
inc
cmp
jmp
push
loopne
inc
add
sbb
repnz
push
dec
lods
adc
call
cmps
(bad)
push
movs
sbb
outs
inc
mov
pop
sti
mov
(bad)
iret
mov
hlt
(bad)
addr16
popf
hlt
mov
cld
loopne
cmp
cmp
sub
retf
xor
sub
pop
jecxz
inc
pop
stos
scas
outs
dec
enter
not
xchg
jecxz
(bad)
stos
push
shr
xor
or
sbb
jle
sub
movs
loope
add
scas
adc
aad
in
fstp
mov
aad
ja
(bad)
lahf
shl
jp
mov
ret
stc
cmps
sti
push
dec
jmp
mov
fld
daa
paddsw
jae
addr16
push
lods
jle
enter
test
popa
pop
ja
(bad)
ss
fild
dec
rol
sti
dec
aaa
pop
aaa
daa
cmps
fdivr
push
nop
jne
mov
mov
sbb
mov
mov
lea
cmp
sub
jmp
ins
mov
stc
ins
pop
daa
jne
xchg
xchg
or
movs
test
(bad)
in
mov
xchg
push
or
inc
inc
repz
push
cmc
dec
(bad)
lods
jbe
bound
in
cmc
xchg
push
icebp
dec
mov
dec
mov
push
leave
push
jg
push
mov
loope
xor
fidivr
push
retf
je
ficom
push
movs
pop
jp
stos
sti
jmp
out
add
mov
test
cmp
int
(bad)
push
sbb
iret
sub
retf
pop
imul
call
xchg
fwait
dec
sub
repz
jg
adc
jp
das
push
and
jge
sub
(bad)
jns
add
ss
outs
push
cli
stos
inc
sbb
xchg
sbb
sti
jle
aas
xchg
pop
aam
xor
mov
sbb
aaa
mul
inc
jg
mov
mov
sub
int
scas
imul
(bad)
jg
inc
xchg
xchg
ror
call
pop
xor
jg
mov
cmp
cli
dec
or
mov
(bad)
sub
ret
xor
clc
iret
sub
out
mov
popf
and
shl
sbb
jle
mov
xchg
out
jp
loop
call
mov
outs
loopne
cmp
sar
mov
sbb
les
pop
xchg
call
loope
mov
(bad)
jp
inc
lods
repnz
dec
jp
out
cmp
sub
inc
test
pop
mov
adc
mov
sbb
call
xchg
cmp
dec
or
scas
mov
(bad)
lea
in
lods
mov
pop
out
push
fsubr
sub
inc
aad
mov
or
fldenv
ja
inc
sbb
mov
into
retf
les
sbb
mov
sub
mov
mov
adc
cs
mov
xor
jge
shr
js
sub
pop
xor
mov
sbb
cmps
push
out
outs
bound
mov
cmp
int
mov
cmp
retf
or
dec
dec
sub
inc
push
sahf
adc
dec
bound
mov
popa
sub
adc
ret
and
and
add
and
adc
xchg
push
xchg
daa
dec
and
xchg
dec
and
xchg
dec
xchg
dec
pop
and
and
and
daa
test
push
xchg
dec
and
xchg
dec
or
push
xchg
dec
and
movs
xchg
dec
and
dec
push
lods
fwait
mov
dec
xor
mov
xchg
xchg
mov
or
inc
scas
jne
es
dec
dec
dec
push
dec
or
movs
and
dec
sub
popf
and
push
xchg
dec
xchg
dec
push
dec
and
xchg
xchg
dec
and
daa
dec
and
movs
xchg
dec
and
and
movs
movs
xchg
movs
xchg
dec
push
dec
and
xchg
xchg
je
push
leave
daa
dec
and
push
xchg
dec
cmp
dec
and
xchg
xchg
je
push
xchg
dec
or
inc
or
dec
or
push
dec
dec
daa
add
daa
dec
and
dec
or
mov
test
and
xchg
dec
cdq
and
or
adc
inc
js
sub
test
call
loop
dec
and
xchg
xchg
push
xchg
dec
and
movs
xchg
dec
add
and
movs
movs
xchg
cmps
dec
xchg
xchg
sahf
push
and
cdq
add
inc
pop
stos
push
or
pop
jmp
mov
mov
xor
stos
hlt
out
nop
push
jmp
call
lahf
mov
cld
adc
icebp
test
(bad)
dec
(bad)
test
loope
es
jmp
xchg
sbb
hlt
das
sub
sbb
push
adc
shr
aaa
fcmovu
dec
mov
add
jae
push
loope
add
dec
fild
lds
clc
popf
mov
arpl
xchg
dec
repz
(bad)
jb
popf
ja
mov
sub
or
xor
lock
cmps
mov
stc
fbld
sahf
push
fisttp
clc
sbb
or
popf
pop
rol
push
inc
adc
sub
dec
push
dec
daa
test
fist
jmp
(bad)
out
rcr
cmp
sar
ins
popa
ret
adc
or
and
mov
jge
lahf
sbb
hlt
jg
cli
or
xchg
fsub
gs
or
inc
repz
repz
sbb
xor
xchg
lds
dec
xor
pop
push
retf
push
repnz
jmp
add
and
jmp
jge
pop
sub
inc
std
call
or
push
xchg
pop
pop
test
cmps
jmp
hlt
mov
add
mov
retf
jg
jae
movs
fistp
mov
js
sbb
sti
outs
out
dec
and
adc
fisttp
arpl
sub
pop
jno
jmp
(bad)
jmp
ins
add
fist
cdq
addr16
ja
cmp
jecxz
mov
add
mov
cmp
sbb
pop
inc
fistp
add
out
dec
xchg
add
or
popf
sub
ret
jmp
mov
popa
jbe
xor
or
aad
mov
mov
jmp
rol
sub
arpl
xchg
push
xchg
jnp
rcl
lock
lock
cwde
icebp
pop
ins
arpl
jecxz
cmp
stc
inc
inc
push
xchg
loopne
dec
jnp
pop
icebp
jge
inc
fwait
pusha
jge
and
fwait
mov
pop
jmp
aam
mov
call
mov
clc
dec
in
mov
cmp
(bad)
jnp
std
lahf
hlt
jg
pop
test
lods
(bad)
rcr
hlt
sbb
loopne
inc
ror
inc
push
dec
lock
hlt
sti
lock
xor
les
sar
pop
test
div
cmp
adc
aas
(bad)
int
cmp
(bad)
std
ret
mov
mov
outs
jmp
inc
ret
movs
mov
sub
ret
xchg
(bad)
jmp
and
popf
aad
mov
out
loopne
adc
jbe
adc
mov
push
mov
fistp
addr16
cld
out
(bad)
sar
pop
mov
jg
aad
adc
or
xchg
lock
addr16
cmp
mov
mov
pop
mov
sbb
cld
pop
rcl
xor
std
mov
(bad)
pop
lods
xchg
call
scas
jecxz
jge
jmp
fdiv
js
or
mov
sub
add
pop
enter
push
xlat
mov
add
mov
jmp
xchg
cwde
or
inc
and
push
xchg
rol
adc
movs
cmps
inc
dec
jmp
retf
sbb
push
mov
mov
retf
mov
sub
sbb
cmp
jg
jg
scas
cmp
push
fwait
popf
dec
lds
and
mov
mov
aam
popf
jns
fisubr
dec
out
pop
and
aad
xor
push
mov
mov
sbb
pop
aas
rcl
fcomip
fucomip
pop
mov
inc
sub
rcl
cmp
inc
sub
pop
fadd
sub
pop
aas
xlat
imul
mov
adc
jge
data16
mov
mov
xor
cmp
sbb
inc
fadd
cld
xchg
test
mov
fwait
test
pop
mov
jne
fwait
test
outs
sbb
loope
inc
hlt
xchg
pop
xchg
popf
dec
imul
fistp
int3
push
lods
jmp
nop
retf
sbb
inc
pop
push
loop
cmps
sub
cwde
jno
inc
push
sti
stos
test
icebp
repz
movs
(bad)
sub
push
mov
fld
aad
push
(bad)
int3
std
out
(bad)
std
adc
popa
mov
dec
shl
add
mov
mov
inc
fsub
inc
xor
das
jge
cmps
or
les
ds
std
mul
fisubr
inc
xlat
cwde
mov
mov
cmps
lods
jecxz
dec
mov
lock
test
push
aaa
mov
cdq
add
mov
jg
jmp
test
mov
fbstp
call
mov
inc
mov
(bad)
push
fucomip
push
ins
ja
aad
std
push
mov
outs
stos
and
fisttp
repz
mov
dec
stos
shl
xchg
aaa
push
pop
xchg
es
jmp
pop
movs
lods
shl
stc
int3
div
sbb
xor
ja
mov
(bad)
sbb
(bad)
lds
pop
into
lods
jmp
adc
inc
bound
pop
stos
lea
idiv
cld
or
fist
lock
jge
movs
scas
retf
jmp
sub
cmp
popa
sbb
cwde
inc
pop
jae
pop
sbb
imul
sub
cmp
inc
or
pop
sbb
xor
jmp
bound
fwait
call
loopne
idiv
mov
xchg
aam
jmp
adc
cli
movs
mov
(bad)
adc
jmp
pop
fldln2
loopne
iret
mov
pop
pop
in
aaa
arpl
jmp
aam
mov
ins
pop
ins
lea
adc
jo
mov
ror
and
sub
movs
shl
xor
sahf
rcl
aas
stos
cmc
xchg
jae
ror
jle
inc
leave
sub
ja
sahf
das
dec
mov
cmp
cmc
xchg
hlt
push
mov
out
imul
inc
push
cmp
imul
push
mov
cmc
push
or
mov
sahf
(bad)
xor
jo
xchg
push
pop
cmps
or
mov
imul
sbb
rcr
aas
stc
and
mov
push
jnp
pop
or
pop
cmc
xchg
pop
jb
sub
sbb
inc
sub
daa
cdq
in
mov
jle
pop
jmp
cmc
les
add
push
in
hlt
fmul
inc
mov
fdivrp
cmp
mov
push
mov
(bad)
pop
gs
xchg
xor
mov
das
dec
mov
xor
popf
jg
stos
ret
icebp
ins
(bad)
mov
push
xor
inc
dec
mov
cmp
pop
ret
retf
lods
add
pop
and
imul
shl
jo
mov
jbe
mov
mov
jle
xchg
shr
inc
jno
pop
std
xchg
imul
addr16
movs
jb
pusha
add
pop
push
cmp
bound
fucomi
(bad)
out
scas
(bad)
cmp
popa
jmp
mov
jg
retf
jnp
test
xlat
out
rcr
jp
mov
(bad)
arpl
leave
imul
in
jbe
lahf
inc
and
sub
mov
scas
mov
cwde
inc
dec
cmp
add
pop
xor
fisubr
mov
inc
jmp
sti
cli
sbb
sub
out
test
gs
xchg
jb
mov
outs
neg
mov
cmp
ret
inc
sahf
sbb
cmc
inc
outs
push
push
mov
push
shr
addr16
xor
xor
ficomp
xor
push
aas
push
cs
cli
jns
push
push
std
or
add
bound
call
mov
and
mov
sbb
imul
jae
(bad)
pop
popa
cwde
(bad)
jae
sub
in
add
inc
sahf
mov
loopne
sbb
cs
jns
aad
inc
es
mov
fidiv
sti
pusha
test
cmc
mov
loopne
xchg
sar
das
fiadd
xor
cmp
jo
(bad)
mov
or
sub
jb
pushf
fistp
xor
cmp
pop
push
jo
repnz
inc
popf
(bad)
mov
mov
lock
std
test
jmp
clc
js
and
popf
xchg
sbb
std
jnp
inc
ins
sub
repz
push
repnz
cs
ds
clc
cdq
xchg
push
inc
sbb
dec
test
mov
sbb
xchg
xchg
sbb
adc
scas
fsub
jecxz
cmp
pop
out
outs
call
mov
test
cmp
push
pop
pop
jecxz
lea
or
inc
or
test
js
mov
js
or
pop
adc
leave
daa
dec
and
nop
xchg
cwde
retf
xchg
dec
dec
daa
dec
adc
sub
push
dec
and
push
xchg
dec
and
and
popa
and
and
and
dec
sub
xchg
dec
push
dec
and
xchg
dec
and
inc
xchg
dec
and
movs
xchg
dec
and
movs
and
mov
dec
outs
in
adc
mov
leave
xchg
mov
dec
xchg
and
push
xchg
cwde
inc
push
cmps
inc
mov
pop
cmp
movs
and
and
mov
ror
dec
and
inc
xchg
dec
cmp
pop
cmp
movs
and
dec
sub
dec
and
dec
dec
and
push
xchg
dec
cmp
cmp
movs
and
daa
test
dec
dec
inc
js
or
pop
adc
jo
ret
or
cmp
test
and
mov
add
adc
leave
sub
xchg
dec
push
dec
es
dec
cmps
dec
push
dec
dec
movs
cdq
sub
movs
cdq
and
mov
xchg
dec
xchg
dec
jg
shl
(bad)
push
into
pop
bnd
mov
push
iret
(bad)
jl
add
mov
dec
jmp
out
push
sbb
outs
jae
jbe
ret
inc
xchg
mov
arpl
movs
and
push
pop
aam
mov
xlat
jp
xlat
add
cld
inc
out
outs
movs
fisttp
jns
inc
fistp
call
retf
add
cmp
inc
in
sbb
dec
sbb
aam
cmps
mov
and
sub
xchg
xchg
dec
adc
cmps
fimul
sub
ret
adc
outs
pop
cli
scas
popw
ss
sbb
icebp
addr16
jg
pop
outs
pusha
aad
pop
loop
xor
cdq
outs
and
fistp
pmulhw
inc
push
mov
jno
fld
aas
xor
xchg
inc
push
inc
movs
bound
mov
cdq
cmp
pushf
mov
jmp
pop
es
dec
dec
or
leave
and
in
mov
sbb
cmp
push
push
addr16
dec
jg
xchg
cmp
stc
add
shl
jno
dec
pop
mul
sub
adc
sub
jecxz
and
inc
imul
jb
push
aam
movs
and
jbe
inc
cmp
add
aad
xchg
lods
scas
and
jmp
mov
(bad)
mov
cmp
mov
or
ins
cmp
mov
and
in
dec
xchg
push
sbb
les
aad
cmps
sti
and
scas
mov
fwait
inc
cmps
pusha
dec
aas
sti
andnps
jae
push
add
popf
out
addr16
sbb
in
pop
mov
shl
ins
and
fst
adc
cmp
fdivr
sbb
xor
cmps
ret
dec
or
xor
(bad)
int3
push
outs
cmps
popf
ds
jg
pop
out
add
xlat
and
add
ret
arpl
xchg
or
push
push
xchg
retf
push
xchg
or
dec
pop
and
dec
dec
dec
sar
cmc
push
xchg
or
jmp
xor
repz
add
outs
repz
sar
mov
popa
ficom
jg
lods
cli
push
das
sbb
mov
xor
adc
add
jo
test
xchg
jmp
push
mov
out
dec
cmps
rcr
cld
sbb
add
xlat
sbb
ds
mov
call
push
inc
es
ret
jmp
pop
jl
enter
push
cmp
(bad)
ins
ins
leave
jno
out
xchg
cmc
jg
pop
mov
sbb
ret
push
pop
in
lods
mov
std
jle
int
mov
jae
and
pop
jg
aad
cmc
lods
fiadd
fild
shl
add
idiv
add
or
add
cmp
jg
lock
jg
jb
jmp
pop
and
in
sub
xchg
push
and
sub
sahf
(bad)
cld
scas
nop
loope
es
jns
xchg
out
mov
pop
(bad)
cld
cld
dec
xchg
bound
jge
shl
fbld
jnp
imul
jns
sub
cmc
dec
sbb
leave
sti
sbb
fsin
(bad)
mov
add
scas
mov
aaa
push
retf
add
arpl
fucomi
pop
outs
sub
add
pop
stos
je
jp
out
mov
mov
dec
sub
pop
ins
xchg
lock
push
sub
test
xchg
mov
enter
pop
bound
xchg
adc
or
xor
outs
hlt
scas
stos
addr16
mov
add
ss
hlt
ins
popa
cli
dec
jp
push
jmp
ret
jbe
cmp
lahf
movs
pop
mov
daa
out
jg
pop
dec
inc
movs
cmc
das
mov
mov
cli
cwde
idiv
lods
lock
sti
jg
stos
inc
add
mov
je
mov
out
cmc
xor
outs
iret
cli
stos
ins
std
retf
jmp
sbb
dec
mov
pop
test
dec
push
push
pop
xchg
hlt
dec
cmps
cmp
inc
push
cmp
push
push
jp
jne
punpcklwd
ror
mov
mov
cmc
(bad)
fwait
imul
mov
cld
aas
cli
dec
xchg
sub
fdivr
iret
jae
sbb
pop
mov
pusha
(bad)
mov
add
push
add
xchg
test
mov
cmp
mov
(bad)
xchg
fcomi
sub
inc
outs
dec
enter
nop
ret
mov
adc
xchg
push
daa
and
xor
mov
or
ds
inc
mov
dec
dec
jg
(bad)
movs
or
or
push
mov
aas
xchg
in
cli
push
pop
push
push
jmp
sahf
inc
or
arpl
cmps
cli
(bad)
push
jp
(bad)
dec
ficom
sti
mov
aaa
inc
xor
dec
cli
rcl
mov
pop
fistp
(bad)
cld
sbb
push
cmp
(bad)
cld
in
sbb
das
call
adc
enter
dec
dec
xchg
(bad)
imul
push
mov
ret
ror
movs
jge
int3
jmp
mov
iret
out
sub
movs
and
shr
cli
loope
aad
test
imul
data16
stos
popf
inc
ret
dec
pop
cmps
jmp
clc
(bad)
das
cmp
test
jmp
inc
pop
jg
dec
and
add
mov
pop
out
sbb
jmp
retf
fucomi
je
and
add
pop
imul
imul
dec
xchg
jge
sub
pushf
iret
jnp
call
je
or
aam
loopne
outs
je
add
pop
fistp
add
push
cld
aam
sub
pop
push
xchg
iret
stos
pop
js
retf
test
mov
add
aad
sahf
mov
mov
cmps
xchg
adc
and
dec
imul
mov
loop
ja
mov
xlat
sti
xor
cdq
cs
fistp
call
or
ret
movs
imul
repz
mov
fdiv
sar
jno
pop
inc
ins
scas
adc
mov
push
xchg
xchg
js
mov
aam
ins
(bad)
lock
out
repz
out
in
ja
aaa
imul
and
xchg
jae
push
aaa
jg
pop
js
jae
loope
mov
scas
cld
aam
in
jbe
dec
add
lahf
stos
cdq
clc
mov
addr16
ja
sti
sub
sbb
jecxz
aas
xlat
push
jp
push
enter
out
push
add
xchg
scas
push
(bad)
mov
scas
cmps
pop
jnp
outs
(bad)
test
arpl
mov
cmps
ins
js
cwde
cmp
mov
jne
test
imul
ss
std
dec
push
daa
push
cli
(bad)
jne
aam
ds
cmp
cmp
add
push
ret
xor
std
push
xchg
jge
mov
cmp
pusha
arpl
ja
in
and
stos
fnstcw
aam
push
aad
int3
aad
pop
dec
xchg
cmp
stos
mov
sar
pop
popf
mov
test
fstp
push
fsubr
pushf
sbb
or
aas
pop
mov
cwde
sub
xchg
xchg
(bad)
or
iret
jmp
mov
pusha
cmp
sub
fcom
into
out
addr16
call
test
(bad)
retf
sti
jmp
adc
bound
neg
hlt
je
xchg
inc
adc
pop
push
jmp
sbb
stos
call
xchg
out
into
stos
push
ins
sbb
adc
lods
lock
or
pop
mov
les
sbb
sbb
stos
ja
mov
xlat
push
jmp
dec
mov
push
lock
inc
mov
imul
into
cdq
xchg
rcr
push
pop
(bad)
jb
cs
mov
inc
mov
cli
ins
jge
lahf
mov
sbb
retf
imul
mov
and
cmps
aad
sar
lods
mov
je
lock
fsub
scas
mov
(bad)
and
inc
test
js
inc
pop
(bad)
fldln2
std
xlat
jge
std
push
sub
cmc
int3
xchg
mov
sbb
fstp
aam
fadd
jge
aam
dec
outs
push
aad
xor
xchg
adc
ins
jbe
sti
sub
xor
jbe
push
jbe
mov
inc
sub
jmp
fwait
hlt
ins
outs
xchg
xor
add
mov
jnp
movs
aaa
cmp
idiv
inc
(bad)
xor
push
test
pop
xor
into
nop
loope
imul
jg
xor
xor
sub
push
neg
dec
sub
inc
das
test
fwait
inc
sub
fwait
(bad)
jae
pop
pushf
inc
mov
ja
(bad)
cmp
inc
sti
xor
repz
push
call
aad
addr16
ret
jns
and
push
dec
aad
jp
outs
dec
mov
js
lds
mov
sbb
loop
inc
sub
cmp
sbb
rcl
sbb
add
push
mov
cmp
mov
inc
mov
(bad)
outs
jmp
push
iret
fbld
pop
xlat
bound
outs
outs
cmp
fs
shl
pop
dec
clc
adc
mov
jae
jge
sub
das
cli
push
out
retf
setge
mov
dec
dec
in
aas
inc
(bad)
fadd
por
ins
aam
mov
sub
mov
jmp
repnz
sbb
lods
jbe
add
dec
inc
sbb
aas
dec
mov
mov
pusha
inc
jge
adc
and
sbb
gs
jo
out
test
leave
and
or
mov
popf
movs
es
loope
or
scas
mov
and
xchg
fsub
pop
les
or
adc
stos
push
call
mov
sahf
out
test
cmp
jnp
test
sbb
dec
inc
and
cwde
imul
xchg
adc
inc
cmp
and
inc
shr
dec
dec
dec
pop
retf
sub
cmps
xchg
enter
or
xchg
dec
cmp
fs
dec
and
and
adc
fs
movs
mov
and
and
xchg
dec
push
dec
and
xchg
xchg
dec
and
sub
daa
inc
dec
inc
jbe
je
fcmovbe
in
add
xchg
mov
cmps
es
mov
leave
and
dec
adc
dec
dec
cmp
lds
bound
push
mov
xchg
dec
dec
dec
and
inc
xchg
dec
cmp
cmp
push
leave
and
dec
push
dec
daa
dec
dec
dec
and
push
xchg
dec
and
movs
xchg
dec
xchg
xchg
dec
xchg
daa
test
adc
loopne
test
xchg
xchg
test
sahf
adc
dec
arpl
loope
dec
sub
js
or
mov
inc
or
rcr
adc
sub
shl
sub
adc
sub
xchg
xchg
xchg
dec
and
inc
je
inc
dec
dec
and
inc
xchg
dec
cmp
call
loop
dec
popf
pop
imul
xchg
movs
xchg
dec
fs
cmp
movs
xchg
int
ret
imul
push
into
add
cmc
dec
lea
test
inc
dec
or
push
(bad)
arpl
ds
pop
mul
daa
or
test
ja
dec
scas
sub
popa
xchg
cwde
ds
sub
add
fsubr
push
cwde
and
aam
mov
pop
(bad)
gs
mov
jle
in
lods
jmp
fild
call
inc
xchg
rcl
push
repnz
cmovge
fisttp
ds
sbb
xor
repz
lock
aas
out
stos
xor
jmp
jp
sbb
cmc
cmp
add
(bad)
jle
iret
jp
inc
sbb
xor
jns
sbb
xchg
int3
cli
aas
hlt
pop
mov
inc
retf
xor
jns
adc
retf
clc
cmp
mov
push
loop
mov
jo
int
xor
outs
cli
aaa
pop
ja
push
iret
inc
scas
cs
sub
int3
ja
in
imul
icebp
nop
xchg
int3
inc
adc
mov
test
adc
push
leave
daa
clc
movs
xchg
xchg
nop
dec
push
and
ror
dec
dec
retf
sub
je
dec
je
mov
or
ins
pop
arpl
arpl
add
push
and
mov
and
xor
retf
xchg
std
mov
int3
dec
retf
pop
arpl
test
clc
jno
inc
movs
cmc
int3
mov
ret
jle
mov
push
dec
adc
jp
icebp
xor
jge
bound
stos
pop
sbb
dec
jecxz
adc
bound
lods
shr
retf
hlt
pcmpeqw
dec
dec
sti
stos
(bad)
xchg
jb
mov
xor
scas
mov
add
pop
out
std
adc
cli
or
ret
mov
lods
cs
int
(bad)
pop
xchg
frstor
inc
mov
inc
jecxz
lods
cmp
arpl
sbb
jne
mov
into
hlt
fcmovb
jg
mov
outs
push
arpl
cli
push
les
xchg
or
scas
lods
les
out
scas
in
sar
enter
inc
mov
push
push
push
xchg
dec
jl
and
ror
xchg
mov
and
cli
lods
cmc
xor
cdq
jle
idiv
ins
imul
ins
popa
daa
imul
mov
cmp
cmps
jbe
dec
sti
pop
cmc
or
cwde
pop
ja
pushf
stos
cli
out
mov
mov
(bad)
aas
jmp
or
pusha
fdivr
sbb
pop
loope
test
mov
and
xchg
repz
imul
hlt
addr16
or
aad
or
shl
jbe
mov
addr16
inc
and
xchg
or
push
sbb
add
ret
pop
enter
sbb
addr16
mov
(bad)
std
ret
mov
or
add
xchg
push
inc
cpuid
(bad)
push
pusha
sub
inc
push
or
jmp
(bad)
jb
out
add
mov
data16
(bad)
ja
sbb
scas
inc
(bad)
mov
dec
push
push
push
jmp
or
add
inc
dec
adc
ins
or
popf
mov
sbb
mov
inc
push
test
sub
jnp
jo
outs
sub
loopne
pop
dec
sar
mul
push
out
mov
hlt
ret
std
mov
mov
scas
jge
retf
adc
xchg
push
fild
sar
xlat
inc
inc
cmc
test
push
sbb
cwde
cmp
cld
and
(bad)
inc
fdiv
adc
mov
out
pop
xlat
lods
retf
jo
inc
cmps
sar
sub
push
jecxz
movs
es
addr16
cli
test
inc
out
mov
pop
aaa
push
call
jb
inc
in
loope
pmaddwd
mov
cmp
arpl
rcl
add
mov
add
and
aad
(bad)
scas
cmp
push
jg
stos
push
aas
dec
jg
aas
repnz
sbb
(bad)
push
repnz
xchg
dec
sub
(bad)
loop
push
or
inc
mov
aam
fnsave
sbb
push
in
idiv
ss
mov
in
(bad)
adc
loope
sub
jmp
mov
ss
leave
cmp
jg
xchg
(bad)
inc
out
inc
movs
pop
push
mov
adc
shl
stos
xchg
mov
push
cmps
mov
adc
lods
pop
push
and
mov
call
scas
jecxz
fistp
mov
sub
neg
(bad)
fwait
pop
jne
pop
xor
sbb
and
add
mov
(bad)
cmp
xchg
cmps
stos
inc
adc
std
les
xchg
int
int
mov
movs
pop
jecxz
dec
outs
rcl
fidivr
mov
scas
dec
or
push
loop
imul
jle
adc
imul
shr
jne
jae
jbe
(bad)
push
mov
repz
pop
fld
(bad)
or
pop
mov
adc
out
mov
repz
pop
icebp
mov
and
test
inc
pop
fisubr
aam
in
mov
pop
mov
pop
aad
lods
push
fucomi
ins
push
lahf
in
cmp
arpl
pop
sub
dec
cmc
push
or
pop
loop
add
bnd
sar
mov
cmc
dec
test
dec
add
fmul
repz
aaa
cmps
adc
sbb
(bad)
cdq
inc
xor
add
cmps
bts
(bad)
mov
pmulhuw
push
dec
sbb
ror
cmp
jnp
dec
add
jnp
gs
cmp
int
mov
mov
jg
inc
xchg
pop
popf
inc
cld
push
xchg
dec
mov
aam
inc
cli
push
mov
retf
test
cmps
xlat
shl
xchg
lahf
and
push
ss
mov
jecxz
repz
scas
aad
movs
ror
xor
aaa
test
or
inc
pop
pop
ret
out
mov
(bad)
das
push
into
(bad)
std
es
dec
cld
push
xchg
test
inc
cmps
es
jae
cmps
mov
jge
iret
lods
mov
or
in
mov
popa
enter
sbb
movs
jo
inc
pop
out
push
fsub
ud0
mov
xchg
push
ret
enter
test
mov
dec
cmp
fist
mov
(bad)
push
jbe
into
outs
mov
xchg
lea
out
mov
jp
push
rcr
dec
xchg
clc
mov
mov
mov
mov
outs
(bad)
out
scas
(bad)
sti
imul
pushf
inc
mov
xlat
xchg
sahf
or
inc
jb
icebp
jle
loop
pop
aam
pop
out
imul
cmp
add
mov
xchg
pop
stos
into
or
fcmovu
jmp
fwait
shl
mov
pop
imul
mov
lea
sti
sub
imul
pop
mov
xchg
pop
push
scas
in
jg
daa
fwait
call
pop
push
shl
cmp
mov
rcr
fs
div
movs
jne
fwait
sub
push
clc
popf
cmps
push
cmp
stos
sahf
mov
sbb
int3
and
ja
push
into
(bad)
push
call
icebp
mov
inc
sar
xchg
mov
dec
enter
jle
lea
xor
push
out
xchg
mov
mov
xor
cmp
jbe
imul
fadd
mov
rol
call
mov
or
out
lods
clc
adc
lods
int3
xor
dec
jbe
push
jnp
mov
ja
dec
(bad)
(bad)
mov
in
aaa
(bad)
ds
in
scas
stos
mov
fistp
ret
push
addr16
sub
inc
sub
hlt
xchg
shr
aad
frstor
add
cmp
mov
and
inc
cmp
out
lods
lock
mov
xor
call
push
mov
div
dec
xchg
jge
cs
sahf
cdq
out
add
sti
sub
aaa
pop
jae
idiv
stos
lock
dec
mov
cmp
push
cmp
fisub
inc
cli
fisubr
jbe
stc
(bad)
add
aad
ds
ins
xchg
push
imul
repnz
adc
ror
loope
jecxz
bound
xchg
cmp
pushw
sub
add
pop
cmp
stos
int
bswap
outs
xchg
stos
pop
xchg
sti
sub
sbb
jmp
jmp
xor
psubd
enter
in
and
ss
lock
adc
xor
or
and
adc
stos
sub
pop
push
jle
cmps
push
lods
dec
mov
sbb
out
ret
ja
std
mov
jg
popa
lods
std
lods
addr16
jge
arpl
leave
jnp
mov
loopne
sub
ret
out
outs
shl
(bad)
mov
mov
popf
mov
out
adc
or
pop
mov
out
(bad)
lds
xchg
ds
loopne
out
add
pop
(bad)
add
push
int
aas
lods
stos
aas
xor
jg
add
pop
push
icebp
add
cmp
sub
bound
clc
adc
push
hlt
ss
test
in
ret
and
or
mov
inc
sub
inc
sbb
xchg
mov
test
sbb
cmp
call
imul
lods
in
sbb
scas
rcr
loop
adc
int
push
loope
and
push
mov
ficom
jecxz
xchg
inc
sbb
inc
inc
mov
or
mov
rcl
gs
sahf
push
and
dec
inc
push
push
retf
rol
cmp
xchg
xchg
popf
xor
mov
dec
adc
or
push
xchg
or
dec
dec
push
fs
and
movs
xchg
dec
and
dec
movs
xchg
daa
inc
dec
and
cmp
jbe
jno
cwde
or
pop
push
dec
dec
dec
push
cmp
dec
xchg
out
jbe
and
or
cmp
pop
and
xchg
push
xchg
ret
movs
es
push
dec
dec
inc
bound
dec
dec
or
jo
adc
xchg
mov
push
test
lock
dec
push
es
xchg
dec
pop
and
and
movs
mov
push
rcl
popa
sub
mov
movs
or
and
test
movs
sbb
or
inc
or
les
ds
dec
adc
ins
dec
adc
ret
dec
popa
and
xor
and
xchg
push
rcr
lds
xchg
dec
pop
and
dec
or
loope
dec
dec
and
sub
daa
dec
adc
dec
cmp
loope
xor
loope
and
or
cmp
or
call
loope
dec
cmp
xchg
xchg
dec
xor
xchg
xchg
push
dec
xchg
mov
and
xchg
gs
movs
and
adc
dec
outs
pusha
cmc
sub
sub
arpl
in
sbb
(bad)
(bad)
cli
pop
clc
int3
and
jmp
sti
dec
(bad)
xchg
inc
mov
pushf
retf
sub
je
inc
iret
rcr
jns
addr16
cs
jnp
popa
out
shr
jmp
cmp
retf
jp
mov
aas
mov
mov
imul
aas
push
jae
mov
movs
nop
call
repnz
sar
add
pop
js
aam
sub
mov
or
stos
mov
push
popa
les
push
fucomip
fsubr
push
and
(bad)
fist
adc
test
cmp
ins
ss
push
xor
cli
outs
fstp
xor
lea
outs
mov
cmps
int3
adc
xlat
sti
mov
scas
aaa
daa
push
int3
ja
in
imul
sub
add
cwde
and
push
imul
lds
into
stos
ret
pop
push
or
mov
icebp
std
dec
sbb
in
push
and
(bad)
nop
popa
and
mov
pop
repnz
stos
imul
stos
std
pop
mov
mov
retf
inc
out
and
aam
pop
imul
nop
and
xchg
sub
xchg
xchg
cdq
cmp
or
and
xchg
sub
call
nop
dec
dec
inc
cmc
cmp
(bad)
xor
retf
cmp
lahf
iret
inc
lods
cmp
cmps
inc
std
xchg
sahf
loopne
cli
or
sahf
shr
cmps
iret
cli
fcmovnbe
ds
stc
aad
jl
jne
shl
int3
pop
stc
cmp
dec
nop
cmp
inc
push
dec
sbb
dec
adc
call
lahf
inc
ret
aas
dec
add
and
and
stos
pop
xchg
aas
inc
xadd
cmp
pushf
(bad)
aaa
nop
inc
lds
push
mov
sub
pop
and
or
fcmovbe
cmp
dec
shl
xor
or
movs
adc
jno
sub
jae
jnp
lods
xchg
mov
and
xchg
jge
jmp
test
dec
sbb
aas
ret
in
inc
cmps
inc
pop
inc
adc
sbb
pop
ja
retf
pop
adc
xchg
sbb
int3
aas
cli
dec
add
(bad)
ret
pop
inc
or
mov
shl
fcomp
in
dec
(bad)
cli
fdivr
xlat
cld
psadbw
inc
and
mov
and
sub
dec
popf
and
je
xchg
xchg
cmp
sar
jmp
jl
rcl
dec
inc
ret
jmp
dec
call
fucomip
pop
hlt
pop
jno
jle
pusha
loopne
mov
aad
daa
dec
cld
or
scas
mov
scas
cmp
sti
(bad)
in
pop
std
lahf
hlt
jg
push
int3
dec
inc
inc
hlt
pop
push
adc
push
test
add
loop
and
pop
adc
add
mov
(bad)
out
(bad)
std
adc
inc
std
pop
das
dec
call
mov
push
sbb
add
inc
pop
dec
xor
mov
test
leave
sub
enter
pop
or
iret
clc
mov
mov
pop
in
pop
stc
stos
xchg
pop
and
cmps
pop
jmp
shl
dec
cmc
pop
hlt
adc
pushf
gs
and
jbe
dec
cmps
loope
sub
dec
xchg
dec
fs
rcl
lds
add
stos
pop
pop
lods
ss
sbb
lock
inc
sbb
lahf
in
jge
cli
jmp
(bad)
imul
mov
mov
jg
movq
fsincos
fwait
push
mov
in
mov
mov
push
jecxz
mov
add
inc
xor
inc
push
sub
dec
stos
jae
retf
scas
repnz
imul
leave
or
and
pop
pop
mov
(bad)
imul
push
lods
fs
loope
sbb
and
sub
or
dec
jmp
and
out
loopne
adc
add
mov
jae
xlat
pop
ins
fs
cmp
pmuludq
clc
aas
lock
jae
push
sbb
mov
adc
jmp
das
lods
push
out
dec
call
mul
inc
shr
test
ins
sub
icebp
aad
sub
fs
mov
nop
fs
pop
sub
pusha
ret
int3
add
cmps
push
aas
cmc
jne
std
push
push
jmp
dec
not
std
out
std
por
sub
rcr
test
out
dec
cli
(bad)
pop
mov
mov
sti
pop
stc
or
stos
mov
pop
dec
mov
fwait
cmp
jmp
inc
mov
sbb
lods
xor
lds
xor
fsub
(bad)
mov
cmp
dec
adc
cmp
test
mov
pop
cli
in
push
das
jmp
sbb
cmp
push
ins
sub
(bad)
mov
and
xor
addr16
mov
rcl
xchg
test
mov
mov
mov
retf
mov
jb
cmp
mov
fwait
sti
cmc
sub
jmp
pushf
push
ret
nop
inc
and
add
mov
sbb
in
ja
gs
jl
mov
push
fist
and
add
cli
sub
int3
pusha
mov
outs
jbe
add
out
hlt
xchg
movs
stc
sub
ret
add
mov
pop
mov
icebp
mov
imul
into
out
cld
fstp
or
cmp
fbstp
cs
mov
into
sub
es
cli
stc
mov
fadd
shr
mov
xlat
jae
add
fdivr
aas
cmps
cwde
leave
mov
inc
cmp
lods
adc
idiv
sahf
inc
sti
jg
cli
sub
std
push
jge
mov
mov
push
push
retf
or
jp
mov
(bad)
fcom
das
data16
mov
pop
ins
mov
in
jo
retf
test
push
in
das
ret
push
int
mov
stc
add
cmc
cdq
add
lock
cdq
ja
mov
xchg
pop
or
mov
(bad)
push
sar
fist
cmp
cmp
dec
repz
imul
imul
lock
std
dec
pop
mov
inc
add
push
jg
ret
cli
inc
out
xchg
popf
dec
mov
lahf
jle
mov
div
cmp
adc
(bad)
fwait
cmc
xchg
(bad)
aaa
jle
in
inc
mov
cmps
xlat
ja
cmps
pop
fild
out
adc
or
dec
ficomp
repnz
aaa
inc
pushf
aad
mov
imul
inc
and
sub
xchg
push
fld
and
xor
add
cmc
mov
retf
xchg
cld
pushf
mov
cli
xlat
fwait
xchg
fdivr
pop
enter
push
scas
sar
ds
cmp
dec
push
pusha
pop
fwait
inc
xor
popf
pop
cmps
push
js
sub
(bad)
fist
ja
fmul
xchg
cmp
add
imul
sub
inc
arpl
aam
jno
pop
enter
mov
mov
in
(bad)
xor
mov
mov
pop
loopne
mov
mov
push
idiv
pop
mov
dec
lea
aam
mov
pop
mov
jmp
push
ds
mov
cmps
jecxz
or
mov
add
cli
inc
popa
xor
movs
fistp
aaa
aam
sub
jbe
jns
popf
es
xchg
push
icebp
enter
push
xor
lea
sbb
and
xchg
imul
fnstsw
inc
mov
cmp
mov
pop
int
ds
pop
pop
adc
push
call
push
popa
xchg
addr16
xchg
shl
sbb
daa
test
jmp
shr
mov
dec
inc
(bad)
iret
push
into
popf
pusha
daa
std
sbb
jo
es
popf
rcr
push
dec
outs
arpl
js
cs
pop
inc
lds
sahf
mov
mov
mov
xchg
arpl
ins
ss
ror
cld
rcl
(bad)
repz
test
jge
xchg
cmp
test
arpl
mov
add
cs
lea
stos
inc
pop
inc
cwde
js
ret
ds
cmps
mov
addr16
jg
mov
xor
stos
mov
cmps
aam
and
add
inc
mov
ins
mov
lea
iret
in
sub
cmps
ror
add
or
fdivr
loope
cdq
lds
call
not
jbe
add
mov
mov
pop
mov
sub
mov
pop
ds
sub
ds
jnp
ret
(bad)
push
sbb
sub
add
hlt
int
aad
int
inc
add
mov
ret
fnstsw
dec
xlat
xchg
popa
and
(bad)
inc
or
(bad)
out
(bad)
push
ret
push
fidivr
sbb
mov
movs
aaa
js
mov
mov
add
lods
fidiv
stc
pop
aad
jmp
inc
ret
in
push
mov
lods
xchg
xchg
sbb
daa
in
popa
(bad)
aaa
push
xchg
xchg
xor
push
in
xchg
push
imul
js
push
jne
mov
stos
and
jnp
aas
lods
stos
push
(bad)
into
jmp
(bad)
mov
push
mov
xchg
mov
dec
mov
or
mov
call
ss
repnz
imul
mov
jbe
cmps
jle
push
(bad)
je
or
mov
pop
push
test
adc
div
lea
jo
ds
mov
lods
aad
sub
push
mov
dec
leave
in
ins
(bad)
in
push
or
adc
push
jmp
cmps
pop
add
data16
dec
dec
int3
sub
push
dec
ror
dec
and
push
xchg
dec
and
mov
xchg
daa
dec
and
push
xchg
daa
dec
add
movs
and
je
mov
xchg
jmp
fstp
outs
jb
fistp
dec
or
dec
shl
xchg
xchg
xchg
dec
and
xchg
movs
xchg
dec
xchg
xchg
dec
xchg
dec
sub
movs
xchg
xchg
test
adc
dec
or
dec
dec
adc
sub
cmp
test
adc
test
test
dec
push
push
arpl
ins
push
ficomp
mov
xor
rol
push
bound
or
in
dec
add
sub
dec
sub
jo
or
test
sahf
push
push
adc
or
xchg
movs
mov
dec
adc
push
pusha
sbb
push
int
or
rcl
dec
ins
dec
or
dec
push
xchg
xchg
ficom
mov
test
dec
adc
xchg
daa
dec
adc
xchg
daa
test
test
jnp
ret
adc
lods
dec
popa
cmp
and
test
adc
shl
ror
jge
mov
dec
dec
cdq
and
mov
xchg
adc
dec
cdq
and
jmp
jmp
inc
ret
xchg
jmp
cld
sar
sub
inc
icebp
xchg
inc
xor
sbb
ror
cld
xchg
(bad)
jno
movs
shl
std
push
jbe
(bad)
retf
inc
mov
jmp
imul
ins
adc
je
sahf
neg
test
sahf
mov
push
xchg
sbb
dec
inc
pop
cli
cmc
imul
lahf
shl
cld
cli
mov
mov
push
inc
pusha
mov
cmp
(bad)
inc
inc
in
aas
adc
push
push
popa
clc
mov
dec
call
lahf
pop
shl
add
pop
icebp
out
(bad)
xchg
imul
mov
xchg
jns
cmp
aas
jmp
or
ror
in
inc
stos
mul
mov
fidiv
stc
in
mul
xchg
and
test
mov
test
scas
fdivr
inc
mov
xchg
pmulhuw
repz
in
push
or
dec
not
mov
cmps
cld
int
movs
xchg
jg
jmp
xchg
fisub
stc
int
jge
aas
fst
aad
mov
add
std
pop
std
ins
jo
push
in
ja
sub
xchg
xchg
sub
movs
daa
dec
xchg
dec
pop
sub
das
sub
xchg
mov
pop
loope
inc
sahf
test
fist
punpckhwd
mov
mov
cs
jg
cmc
ins
scas
xor
rol
jmp
popa
inc
mov
popf
inc
fwait
dec
in
bnd
aas
lock
lahf
mov
xor
ja
dec
cld
xlat
std
sub
inc
inc
dec
cld
hlt
leave
mov
push
fs
pop
cmp
pop
mov
pop
jge
ret
inc
fwait
jg
sti
stos
sub
loop
daa
adc
jg
test
pop
loope
idiv
ret
mov
inc
or
inc
jg
std
das
not
shr
lds
cmp
xchg
fisttp
test
jge
jmp
mov
jnp
scas
(bad)
xlat
cli
dec
in
scas
add
shl
in
adc
std
jp
hlt
call
xor
bnd
xchg
sub
mov
inc
pop
add
adc
push
pushf
es
push
jmp
dec
es
xchg
cdq
xchg
fwait
jmp
stos
and
clc
xchg
mov
stos
inc
dec
cs
push
adc
mov
mov
ja
inc
jne
mov
(bad)
lods
(bad)
mov
lahf
jge
ds
mov
movs
lods
shl
pop
aam
sbb
dec
(bad)
mov
add
out
mov
fsubr
popf
inc
in
(bad)
cmp
xor
inc
mov
pavgb
mov
ja
xchg
and
push
cmc
(bad)
jle
sub
sbb
pop
nop
aas
inc
cmp
cmps
sub
inc
mov
and
(bad)
jmp
jae
adc
loop
inc
fmul
repz
arpl
or
cmps
outs
mov
jbe
dec
mov
in
mov
jbe
stc
lahf
jmp
mov
push
adc
or
inc
or
adc
outs
ja
pop
mov
pop
pop
mov
or
cmc
jno
dec
xchg
fist
iret
sar
mov
pop
ja
cmp
pusha
mov
out
and
ins
cmps
std
daa
cld
sbb
hlt
cmp
sub
jne
pop
cld
popa
fs
pop
push
rol
inc
jge
inc
xor
ret
mov
into
mov
std
cmp
push
cmp
cmp
sub
mov
mov
imul
(bad)
out
iret
clc
mov
inc
pop
jg
mov
jb
movs
mov
(bad)
push
js
xchg
repz
shl
les
add
retf
dec
test
xchg
inc
dec
push
sar
push
dec
fisttp
std
ss
in
repz
xchg
(bad)
jg
scas
mov
xor
xlat
mov
aas
loopne
(bad)
add
outs
push
jbe
jmp
addr16
inc
ja
and
mov
stos
hlt
imul
sahf
or
add
int
mov
xor
mov
inc
mov
pop
mov
push
push
out
pop
nop
xchg
cdq
shr
jo
mov
sbb
jge
xor
(bad)
pop
pop
loope
add
(bad)
inc
ror
add
dec
jae
inc
fwait
and
adc
add
inc
xchg
lods
push
mov
pop
dec
or
in
js
mov
loop
mov
shl
retf
add
test
mov
call
xlat
std
push
jmp
dec
(bad)
mov
jbe
clc
inc
cmp
jmp
cli
(bad)
aam
into
lahf
xor
push
in
cli
push
cld
mov
jle
pop
push
sbb
pop
cmp
inc
mov
daa
sbb
retf
push
lods
jl
out
add
push
(bad)
or
jo
and
shl
rcr
dec
call
cmp
xor
dec
sub
(bad)
push
mov
pop
pop
push
lea
sbb
mov
push
cmc
cmp
xor
stos
call
sub
push
mov
std
outs
fistp
fs
inc
sub
sbb
(bad)
fisubr
sbb
ja
pop
lods
(bad)
in
sti
adc
std
pusha
in
sahf
jecxz
stc
mov
ins
xlat
push
or
mov
add
xor
push
xchg
dec
sub
jmp
dec
stos
aas
out
stc
ss
jmp
jl
std
inc
cld
push
in
outs
jmp
add
aas
stc
add
fwait
rcr
xchg
push
cdq
sbb
faddp
jmp
js
sbb
jg
pop
push
daa
xlat
sti
pop
cmp
cmp
cmp
mov
cmc
sbb
xchg
in
movs
xor
(bad)
cdq
cmc
arpl
clc
pop
dec
inc
push
lods
jle
(bad)
sub
push
cmps
dec
mov
aaa
mov
cmp
out
mov
cmp
sub
aad
jo
shl
cmp
pop
out
sbb
std
push
cdq
retf
test
std
cli
std
mov
xchg
jmp
in
mov
imul
ss
outs
pop
adc
sbb
es
je
ins
sahf
(bad)
jg
mov
test
sbb
jno
mov
mov
(bad)
aad
jno
mov
cmp
and
(bad)
sub
mov
and
jns
dec
ret
(bad)
mov
popf
jnp
mov
int
scas
inc
pop
jb
jno
int
shr
cmp
stos
idiv
add
jg
ins
pusha
cmc
pushf
mov
inc
daa
arpl
retf
and
mov
(bad)
jns
dec
push
fstp
rcr
cmp
std
inc
jmp
jmp
aas
fnstenv
jmp
push
aad
out
jecxz
daa
jge
into
xor
jns
sub
loopne
pop
movs
mov
leave
cli
mov
mov
int3
xor
pop
(bad)
mov
push
rol
(bad)
out
out
daa
idiv
vmovd
cmp
es
add
ins
es
fstp
dec
jmp
hlt
mov
jg
test
or
mov
in
xlat
sahf
jecxz
adc
dec
jo
and
outs
(bad)
sti
cmp
sbb
test
inc
mov
outs
add
mov
push
add
(bad)
add
and
jmp
int
and
(bad)
fcomp
out
dec
mov
test
jno
lods
popa
out
rcr
pop
out
push
mov
or
xor
adc
cld
mov
add
data16
std
sub
cmps
jae
cmc
cwde
movs
xor
jg
adc
or
jmp
mov
test
je
add
mov
lods
cmc
jno
neg
cld
or
outs
ds
cmp
cmp
jg
inc
in
scas
outs
add
mov
in
pop
dec
cmp
popa
pop
lds
pop
or
sub
nop
or
sub
sar
inc
stc
retf
test
pop
cmp
lods
mov
repnz
lds
dec
cmps
jmp
aas
test
in
(bad)
cmc
popa
jmp
loop
pusha
cli
push
sbb
push
rol
pushf
pop
(bad)
call
pop
cmp
icebp
aam
cwde
fstp
sbb
jle
ret
jg
cli
inc
fistp
(bad)
jmp
pop
jecxz
pop
pop
push
enter
push
(bad)
ins
movs
mov
rol
outs
in
add
add
jbe
pop
out
inc
les
out
jb
fucomp
das
lods
mov
jns
fist
sar
repz
adc
ja
cmp
pop
jo
fisubr
sbb
xchg
sub
xchg
daa
mov
pop
sub
fsub
int
mov
add
stos
loope
add
cs
lock
xor
cli
aaa
inc
sbb
push
jge
test
(bad)
xchg
push
call
cld
cmps
call
push
fwait
stos
jo
push
rcr
imul
retf
shl
cmp
pop
rcr
test
mov
pop
mov
jg
mov
or
(bad)
adc
imul
out
and
ins
jnp
lods
mov
mov
fstp
das
mov
call
pop
ffree
pop
adc
or
aaa
imul
fwait
ret
sbb
mov
icebp
loopne
sti
ins
sbb
jne
sbb
sbb
fld
sar
fldenv
dec
xchg
sub
ror
dec
popf
xor
xor
movs
and
dec
sub
dec
and
add
and
pop
jmp
cmp
ins
movs
cli
jbe
retf
aaa
push
dec
and
push
xchg
dec
cmp
dec
and
dec
and
movs
and
dec
sub
dec
xchg
xchg
test
and
adc
daa
add
and
mul
dec
push
and
test
ror
jbe
or
sub
sahf
adc
ror
movs
xchg
and
movs
sbb
aam
test
push
ficom
adc
dec
aam
dec
xchg
imul
dec
pop
push
dec
imul
retf
sub
xchg
sub
xchg
sbb
jb
adc
dec
pop
push
movs
or
push
movs
xchg
je
mov
xchg
test
sub
ret
push
mov
inc
mov
rcl
test
dec
dec
sub
retf
adc
sub
pushf
add
pop
xchg
test
call
loope
push
fcmovnbe
in
mov
inc
scas
aas
leave
jo
repz
mov
push
loop
inc
mov
out
inc
mov
jge
sbb
inc
inc
cmp
xchg
xchg
dec
cmp
dec
and
daa
dec
and
add
dec
and
cmp
xchg
sub
inc
cmp
mov
fucomi
ret
in
push
por
hlt
jbe
aad
arpl
outs
dec
std
fwait
aam
mov
std
push
(bad)
xchg
pop
jmp
popa
xor
cmp
stos
addr16
test
cmps
jp
xor
jbe
cli
int3
cli
aas
hlt
push
mov
pop
jne
xchg
rcl
movs
in
cmc
stos
sub
adc
jmp
ret
xor
cmps
dec
xchg
dec
and
movs
mov
sbb
jge
ror
mov
sti
ret
inc
cmp
jne
cmp
stc
mov
in
mov
or
jo
inc
dec
faddp
push
cmp
test
pop
xchg
loop
ret
inc
retf
jne
pop
mov
in
mov
(bad)
inc
shl
and
sub
push
pop
sar
hlt
daa
lds
push
mov
cli
iret
std
outs
fbld
clc
and
mov
mov
adc
jae
push
arpl
add
xchg
dec
sbb
jl
jmp
and
cmps
call
addr16
outs
std
iret
cmps
test
fucomi
mov
sub
sub
cmp
sub
(bad)
adc
add
outs
push
shl
mov
pop
repz
test
pop
stos
jge
inc
pop
cwde
stc
jae
add
cmp
sar
cmc
dec
xchg
stos
xor
std
dec
ds
cwde
xchg
int3
fs
in
inc
jne
xchg
push
dec
xchg
dec
dec
movs
xchg
dec
sub
dec
dec
movs
or
jmp
dec
retf
or
cs
jmp
add
add
sar
jg
mov
inc
add
jge
(bad)
jmp
scas
mov
arpl
xor
add
xlat
and
std
or
xchg
jg
xor
cmps
sub
or
hlt
iret
out
pop
sti
mov
clc
pop
jmp
jg
je
mov
adc
push
jnp
mov
mov
pop
sub
push
test
into
std
loopne
xlat
inc
fisttp
jno
push
(bad)
mov
or
call
jle
cmc
dec
push
lods
int
inc
test
je
dec
push
test
add
fimul
ret
ficom
ins
xor
es
or
dec
xor
stos
inc
xor
jae
adc
or
dec
pop
sbb
and
das
shr
add
inc
out
int
loopne
add
cmp
test
imul
sbb
cmp
jno
push
lds
adc
sti
jnp
aas
jb
lock
popf
and
push
lds
inc
dec
retf
movs
movs
ret
retf
js
movs
jmp
dec
or
jo
in
xor
inc
sar
mov
pop
push
jmp
aaa
and
in
nop
inc
stos
pop
cli
xor
jns
sub
dec
jmp
mov
hlt
push
test
jne
cli
dec
(bad)
pop
test
shr
xchg
les
js
aas
sar
add
stc
imul
cmps
inc
retf
fst
scas
(bad)
movs
mov
mov
xchg
and
(bad)
mov
mov
mov
pop
lock
or
nop
mov
mov
ds
das
sub
jg
mov
in
cld
(bad)
lea
mov
js
jnp
cmc
ins
cli
or
xor
mov
xchg
mov
pop
mov
lahf
sbb
fsub
sub
mov
ss
(bad)
sti
sub
es
lahf
push
add
repnz
xchg
(bad)
adc
stos
jo
dec
push
sbb
out
cmps
aad
push
mov
xchg
add
push
retf
fs
cli
ror
aaa
test
jno
jb
inc
fnstsw
rcl
inc
test
mov
jnp
jmp
push
and
dec
dec
and
fwait
or
and
out
jmp
fsub
in
ja
jnp
xchg
(bad)
lahf
rcr
mov
std
es
jne
inc
inc
outs
repnz
jb
call
outs
or
cmps
call
outs
out
and
out
outs
inc
jbe
aas
mov
jge
hlt
dec
out
imul
(bad)
xchg
xchg
test
add
cmp
or
and
outs
lahf
pusha
jbe
cmp
(bad)
shr
ds
dec
dec
cli
aad
out
out
jecxz
arpl
dec
and
cli
pushf
pop
loope
push
or
ins
adc
adc
imul
push
or
arpl
call
mov
mov
mov
sub
add
cmc
pop
rcr
xlat
outs
out
lahf
pop
cmp
pusha
arpl
(bad)
(bad)
mov
adc
mov
daa
loope
pop
ins
adc
movs
pop
xchg
adc
fdivr
add
mov
xlat
sub
add
jmp
jmp
fstp
cwde
dec
jo
adc
or
outs
xchg
dec
cmp
jg
cmps
sub
stos
aaa
ins
movs
push
xchg
(bad)
ss
iret
fdiv
jnp
sahf
imul
retf
inc
loopne
push
imul
mov
xchg
sti
enter
bound
xor
xlat
inc
movs
push
or
jno
mov
sar
pop
popf
std
pop
movs
jge
imul
pop
movs
xor
fild
dec
(bad)
in
idiv
jnp
dec
movs
jge
int3
jmp
mul
test
pop
jmp
jne
mov
cwde
lods
xchg
adc
inc
test
(bad)
jmp
call
into
xchg
jae
jnp
push
into
in
mov
dec
jmp
push
sbb
hlt
cmp
mov
add
mov
stos
retf
test
in
lock
inc
enter
movs
gs
out
leave
test
cmc
addr16
lock
bound
lahf
cmc
retf
aas
xlat
xchg
imul
inc
outs
mov
pop
call
repnz
das
push
mov
xor
sti
xor
inc
cmp
sub
test
clc
outs
ins
in
in
sbb
inc
arpl
sub
lods
in
jmp
clc
cmp
push
push
dec
xchg
cmps
js
push
(bad)
bound
xchg
rcr
jl
movs
sbb
dec
das
inc
sar
pop
push
popa
sub
xor
xchg
(bad)
lahf
dec
sub
in
(bad)
sbb
mov
in
cli
push
icebp
out
pop
popa
mov
mov
jno
std
pop
mov
cmp
lahf
out
pusha
cmc
imul
inc
in
adc
xlat
mov
mov
ds
fwait
fwait
loop
inc
loopne
push
inc
xor
loop
in
pop
ss
mov
jnp
push
add
cmp
pop
mov
ins
jmp
movs
mov
int3
sbb
mov
mov
repz
out
lahf
nop
sbb
fdivr
cld
in
cmp
mov
sub
jl
cld
mov
pop
lods
(bad)
out
mov
aas
call
mov
(bad)
sbb
push
int
(bad)
mov
imul
test
sub
mov
cli
(bad)
jge
hlt
mov
mov
out
pop
aaa
pop
cmps
in
outs
ret
jns
shr
dec
mov
add
daa
leave
stos
aam
mov
add
dec
cmp
dec
(bad)
mov
(bad)
inc
push
or
cld
xchg
daa
test
dec
sbb
mov
addr16
adc
out
dec
scas
imul
dec
xchg
xchg
retf
(bad)
lahf
shl
xor
mov
mov
cmp
fs
cs
cld
and
out
mov
imul
outs
data16
adc
hlt
pop
cwde
bound
jne
clc
scas
mov
aad
sub
std
or
jg
aad
das
mov
add
inc
xor
xchg
test
jge
out
lods
repnz
push
mov
scas
sbb
dec
ret
stos
mov
jg
out
clc
movs
ficom
ins
pop
xchg
dec
fisttp
push
clc
pop
mov
lahf
imul
outs
cmp
pop
fbstp
dec
std
inc
(bad)
pop
push
sar
in
out
lds
adc
repz
push
enter
js
(bad)
sub
test
jo
arpl
shl
adc
jecxz
(bad)
jle
std
in
lea
inc
into
and
xchg
sti
fistp
mov
int
lods
jecxz
icebp
repz
sub
cmp
arpl
pop
aam
in
jbe
std
jmp
xchg
and
aaa
jmp
lods
loope
xchg
mov
xor
sub
mov
cmp
inc
add
fnstsw
and
pusha
(bad)
xor
xchg
mov
sti
in
out
dec
nop
aad
(bad)
test
pop
jge
imul
xchg
push
ins
(bad)
jno
xchg
xor
push
stos
adc
popf
add
rol
cmp
jg
jge
push
jecxz
jnp
jbe
loope
adc
mov
(bad)
jnp
pop
movs
ins
(bad)
jbe
and
jns
not
cs
dec
push
das
adc
mov
out
add
cld
and
sub
adc
aaa
xor
cmp
(bad)
rol
mov
dec
bound
sbb
inc
stos
inc
cmps
aas
inc
sbb
scas
movs
in
js
cmp
xor
pop
push
and
lea
fwait
dec
jo
mov
cs
shl
inc
adc
(bad)
push
pushf
cmp
and
frstor
and
movs
sbb
test
or
daa
dec
adc
dec
pop
adc
dec
pop
daa
dec
adc
jmp
jne
and
xor
mov
xchg
push
xchg
dec
and
movs
xchg
dec
and
movs
daa
dec
and
movs
xchg
movs
or
fs
dec
adc
push
add
xchg
dec
sub
cmp
movs
add
dec
or
or
dec
dec
adc
adc
xchg
test
mov
das
dec
push
sub
inc
mov
or
aam
xchg
dec
dec
sub
and
nop
mov
movs
dec
sub
retf
fs
push
xchg
dec
and
movs
xchg
dec
or
dec
inc
dec
rcl
dec
xchg
and
xchg
cmps
test
mov
cwde
ret
ficom
sub
add
sub
adc
test
js
inc
push
dec
nop
int3
cmp
cs
dec
or
jns
push
test
inc
js
aam
add
dec
dec
cmp
test
sub
pushf
add
inc
call
loop
test
out
stos
call
or
scas
fnstcw
movs
inc
into
mov
repz
stc
aad
push
fisttp
mov
cmc
push
lods
cmp
xchg
mov
mov
imul
cmps
cli
dec
rcr
shl
pop
stos
pop
sub
xor
cmps
outs
push
cmp
test
and
cmp
jl
dec
or
inc
xor
movs
(bad)
(bad)
jbe
lahf
jmp
imul
in
clc
ret
mov
mov
and
inc
loopne
aam
xlat
dec
push
int3
sub
sbb
push
leave
rol
cmp
mov
or
mov
aam
mov
and
push
pop
mov
mov
cli
mov
(bad)
jmp
fwait
mov
mov
cmc
or
addr16
jnp
pop
scas
ret
cld
fwait
aas
dec
iret
cli
mov
push
push
adc
sar
imul
mov
loop
cli
pop
cmp
leave
fisubr
inc
push
push
and
dec
jmp
push
xchg
xchg
dec
dec
dec
and
sub
and
and
movs
jmp
xchg
rcl
leave
and
inc
jmp
iret
pop
adc
push
out
icebp
sar
jg
jmp
cmp
cmps
hlt
pop
icebp
fwait
push
in
aam
sub
pop
fbld
shr
xchg
shr
fdivr
dec
loopne
jnp
mov
pop
popf
push
int
(bad)
fimul
shl
mov
add
push
inc
jg
retf
adc
jp
and
xchg
mov
stos
fcom
mov
sbb
sub
stos
fistp
rcr
ficomp
out
shl
(bad)
aam
(bad)
jge
xchg
xor
and
dec
xchg
icebp
ins
fdiv
or
xchg
(bad)
mov
mov
aas
arpl
(bad)
(bad)
sbb
add
jge
mov
gs
out
js
pop
jmp
add
fstp
mov
sar
mov
(bad)
into
stos
jl
in
inc
in
(bad)
data16
and
sub
xchg
mov
(bad)
fistp
pop
and
xor
jmp
cmp
and
sub
adc
mov
arpl
add
jge
xchg
icebp
or
sbb
and
xor
xchg
sub
and
push
cwde
and
bound
movs
std
mov
and
pop
loope
inc
cdq
(bad)
addr16
xor
mov
in
adc
(bad)
outs
out
mov
jmp
add
and
dec
in
shl
in
jne
pop
cli
sub
scas
cs
mov
idiv
lahf
stc
cmc
jb
adc
xchg
dec
popf
adc
xor
sub
add
mov
sti
mov
xchg
xchg
cli
int3
jg
fs
push
cwde
inc
stos
dec
sbb
mov
cli
ret
push
jns
mov
outs
clc
jnp
jmp
fdiv
push
ja
nop
loope
sbb
in
cmp
xchg
enter
jg
out
out
xchg
mov
jecxz
mov
es
sbb
sbb
sub
inc
scas
(bad)
dec
test
sub
jmp
std
mov
mov
icebp
push
mov
inc
ret
std
dec
jg
imul
add
enter
arpl
mov
xchg
cmc
iret
test
sub
lahf
clc
(bad)
add
das
aas
jmp
push
xor
stos
neg
stos
jg
stc
cmc
test
jle
and
cmp
push
test
lods
pop
and
dec
and
xchg
pop
cwde
pop
cmp
mov
sub
(bad)
int
movs
mov
fstp
cmp
fmul
out
cmp
cmps
inc
aaa
das
dec
out
jnp
xor
push
jle
aam
jmp
movq
loope
aad
stc
cvtps2pd
inc
jmp
jle
(bad)
sti
lods
inc
lock
dec
adc
fsub
pop
(bad)
push
jns
cmps
neg
lock
and
mov
xlat
loopne
sub
lock
and
or
mov
jne
or
syscall
and
(bad)
push
nop
out
and
jmp
ret
jp
inc
sar
jle
jnp
fiadd
dec
adc
sbb
stos
aam
retf
mov
xor
sub
mov
jb
mov
fwait
cld
pushf
mov
movs
aad
xlat
add
rol
cmp
adc
jo
ins
lods
or
(bad)
inc
sub
cmps
je
scas
cwde
jns
push
push
sbb
loopne
mov
push
lods
cmc
outs
stos
cmp
outs
cmp
fs
mov
in
mov
aaa
(bad)
pop
into
nop
out
sar
pop
fisttp
and
or
and
ss
aad
out
xchg
dec
sub
push
sti
in
adc
mov
mov
test
std
aaa
jmp
cmp
aas
imul
inc
dec
lods
aad
jmp
add
pop
jg
popf
or
and
or
jge
in
push
hlt
iret
and
pop
mov
ins
xor
aaa
shr
inc
jbe
hlt
xchg
inc
sub
fwait
jns
pop
adc
jge
pop
hlt
pop
aas
jmp
sub
push
jae
dec
adc
pop
mov
psrlw
add
jg
adc
add
test
cld
mov
mov
add
adc
cmp
pop
adc
mov
int3
pop
jo
xchg
sub
jmp
push
xchg
xlat
xor
push
sahf
movs
cmp
loope
inc
xor
pop
push
jmp
pop
inc
or
xor
ja
pop
test
fst
mov
rcr
jmp
(bad)
das
(bad)
fiadd
cmp
ja
cmc
mov
xor
jg
scas
xor
pop
push
js
dec
xor
loop
pushf
pop
loope
push
or
ja
mov
or
xchg
imul
(bad)
scas
(bad)
xor
jmp
das
in
mov
(bad)
dec
(bad)
inc
push
ins
out
sub
cmp
mov
sti
out
cmc
xchg
pop
jns
mov
dec
aas
cmc
dec
std
xlat
cmps
mov
fwait
or
mov
push
jp
out
pop
(bad)
out
(bad)
xor
pushf
mov
aaa
mov
cmp
inc
outs
sbb
rcr
fcos
add
xchg
sbb
push
les
int3
shl
scas
push
stos
inc
cmps
hlt
cmp
imul
jg
cmp
push
inc
test
fnsave
and
sar
aas
aad
rcl
push
fidivr
fs
shr
xchg
mov
sbb
stos
lods
retf
push
cmp
pop
outs
lods
test
dec
(bad)
pop
rcr
or
lds
mov
dec
std
adc
xchg
add
cmp
jo
xlat
cs
aaa
mov
retf
lahf
xor
add
sbb
loope
pop
inc
sbb
call
jle
inc
inc
faddp
pop
mov
jmp
retf
or
dec
mov
jp
xrelease
sbb
pop
test
mov
mov
stc
or
enter
add
arpl
mov
invd
pop
jge
daa
add
xchg
sub
push
dec
pop
outs
popa
sar
out
sbb
and
out
scas
cmps
std
jl
jmp
or
xchg
jp
inc
div
call
in
xor
dec
out
(bad)
xchg
cmc
jnp
cmc
adc
je
call
sbb
mov
lods
ds
je
fwait
jl
test
add
je
cmp
mov
pop
into
loopne
fcos
add
xchg
(bad)
sub
in
test
sar
pop
adc
js
jmp
stos
hlt
fidivr
mov
add
lahf
push
pop
pusha
pop
retf
pop
sti
cmps
(bad)
cmp
inc
pop
imul
pop
ss
or
push
enter
inc
sti
dec
xchg
test
stos
cdq
(bad)
cs
ror
inc
inc
mov
pop
ss
lods
mov
dec
mov
xchg
lods
rep
loop
in
mov
fidivr
stos
xchg
imul
mov
mov
aam
and
mov
cmps
stc
jmp
int
xchg
xor
sub
imul
(bad)
push
loope
jnp
js
ret
inc
movs
iret
mov
int3
mov
(bad)
out
xor
ss
cmps
aad
(bad)
fild
add
jo
fcmovb
repnz
fistp
dec
ret
dec
fdiv
mov
rol
stc
int
ret
std
jne
and
dec
pop
and
ret
cmp
sbb
dec
jg
into
dec
aas
cmp
jge
popf
out
xor
add
push
mov
iret
ficomp
int
jg
pop
scas
fld
xchg
push
scas
ror
cmp
out
add
inc
in
and
arpl
xchg
retf
fisubr
movs
lock
movs
inc
dec
gs
jbe
loopne
jb
inc
push
jmp
lods
daa
div
out
push
std
(bad)
js
dec
nop
jne
test
in
mov
imul
mov
jns
stos
aam
aaa
ror
scas
jae
nop
pop
dec
mov
or
dec
mov
jmp
mov
sbb
cmp
shr
fwait
(bad)
xlat
adc
stos
cwde
push
out
mov
jo
mov
inc
stos
stos
in
psadbw
add
push
sbb
mov
push
into
loopne
retf
stos
arpl
stos
int
jne
js
ror
mov
(bad)
repnz
inc
jl
inc
inc
or
rcr
xchg
jle
scas
pop
lock
in
or
inc
mov
cmp
mov
ja
dec
and
push
gs
fsubr
leave
popa
cmp
add
push
mov
hlt
test
cmp
mov
sbb
(bad)
(bad)
xlat
(bad)
xchg
sahf
and
add
mov
mov
mov
sti
xchg
add
cwde
cwde
arpl
in
jmp
fstp
push
mov
loope
push
icebp
push
xchg
cmps
jmp
dec
fsubr
int
mov
dec
pop
push
in
les
jnp
into
fbstp
push
sbb
or
sbb
cmp
mov
bound
imul
jbe
inc
mov
fcom
cld
mov
xor
cmp
test
popa
fdiv
cdq
mov
dec
es
adc
and
pop
pop
pusha
mov
dec
fs
sahf
adc
mov
movs
and
dec
test
sub
dec
and
movs
xchg
movs
or
dec
add
xchg
cmps
or
push
push
pop
adc
pop
push
fcmovbe
adc
add
mov
sub
shl
sub
ret
inc
inc
mov
and
or
pop
dec
rcl
jmp
enter
dec
xchg
imul
pop
xchg
movs
pop
pop
retf
outs
dec
mov
fist
jb
push
xor
call
and
xchg
xchg
dec
and
and
je
mov
loope
and
xor
mov
dec
sub
(bad)
adc
push
sbb
xchg
lods
sub
cmps
ficomp
sub
dec
adc
test
aam
mov
dec
push
push
mov
sbb
push
or
ret
sub
pushf
daa
inc
dec
add
and
ret
cmp
leave
inc
xchg
imul
push
push
call
loope
dec
and
cdq
and
mov
pop
push
and
movs
xchg
xchg
dec
xchg
dec
sub
dec
ds
adc
push
(bad)
mov
(bad)
xchg
scas
popf
and
sbb
movs
(bad)
cld
call
mov
add
sub
ret
jne
mov
cmp
sub
fnop
mov
dec
ror
iret
sub
std
arpl
call
(bad)
imul
push
jg
dec
dec
iret
inc
push
mov
ja
iret
pop
(bad)
xchg
add
lods
sub
icebp
jge
pop
hlt
cwde
(bad)
jg
jecxz
stc
mov
fwait
inc
icebp
pop
push
outs
movs
out
hlt
lea
in
pop
clc
and
xor
sub
pusha
mov
xor
nop
push
push
retf
cmp
or
cmp
sub
cmp
in
aas
clc
and
popf
sbb
mov
adc
mov
dec
inc
sub
xchg
test
leave
sbb
in
icebp
aas
pop
jle
mov
xchg
jmp
std
dec
pop
ja
test
int
xor
in
in
inc
pop
hlt
mov
mov
in
retf
ret
xchg
xchg
in
mov
out
push
clc
pop
stos
inc
jae
ja
pop
aas
vorps
mov
sar
pushf
outs
cmc
stos
inc
or
add
add
jno
push
pop
pusha
lea
or
push
add
call
xchg
lds
inc
dec
dec
adc
sub
inc
dec
dec
push
test
sub
xor
adc
dec
repnz
dec
popa
and
(bad)
imul
and
lahf
push
cli
mov
and
add
int3
aas
into
mov
aad
cmc
inc
movs
xor
retf
outs
icebp
sbb
inc
or
add
cmp
push
pop
ds
jnp
cmp
push
sbb
jae
fdivr
pop
cmc
sub
pop
jp
outs
mov
dec
sub
cmp
push
cmps
sub
and
mov
mov
and
lahf
in
adc
imul
jge
lock
inc
dec
and
pop
imul
popf
lahf
stc
neg
inc
dec
or
out
inc
cmp
push
xchg
or
push
pop
je
imul
retf
xor
mov
popf
ret
cld
(bad)
inc
in
push
add
sbb
mov
mov
stc
pop
imul
xchg
dec
in
jnp
test
rol
add
mov
push
cmc
xor
iret
mul
call
(bad)
xchg
inc
iret
retf
adc
push
mov
aam
pop
jg
lahf
cdq
bound
pusha
and
inc
daa
push
cmp
test
int3
mov
mov
fwait
pop
inc
or
sahf
scas
(bad)
jge
xchg
movs
fisttp
mov
cdq
inc
imul
int3
ja
in
imul
push
sub
dec
or
mov
xchg
dec
sub
xor
dec
adc
xchg
push
ss
mov
hlt
mov
fst
add
in
pop
std
lahf
iret
stos
sti
or
cmp
inc
out
lods
lahf
pop
call
lods
push
jecxz
fidivr
mov
pop
jns
xor
(bad)
ins
enter
in
rcr
or
lds
pop
scas
pop
mov
pop
movs
out
into
ret
mov
lds
(bad)
(bad)
fstp
inc
cmc
je
inc
pushf
shl
push
jnp
aas
lahf
push
push
sar
pop
sahf
fwait
pop
sbb
mov
icebp
and
int3
jge
xor
inc
and
mov
jne
outs
sub
test
call
sub
dec
pop
jl
sti
shl
dec
dec
gs
mov
and
test
ins
jmp
add
jnp
shl
movs
adc
jmp
pop
mov
cmp
add
std
adc
sar
mov
mov
push
fld
aas
inc
in
inc
leave
mov
sbb
cmp
dec
scas
sbb
das
or
or
inc
or
shr
mov
dec
jnp
rcl
pop
pop
cmp
push
add
stos
sbb
movs
or
(bad)
fdiv
cs
or
out
pop
jmp
lods
mov
movs
inc
sbb
push
scas
fdivr
neg
(bad)
fwait
adc
(bad)
outs
mov
push
loop
test
sbb
lahf
test
add
xchg
aaa
pop
repz
imul
sar
mov
jne
sbb
jmp
inc
(bad)
inc
shr
pop
pop
cli
pop
inc
jae
(bad)
neg
sbb
into
inc
lods
inc
test
dec
lock
push
add
mov
js
push
repnz
sub
cmp
daa
add
fisttp
xchg
xchg
xlat
mov
and
or
aam
and
mov
stc
dec
std
int3
scas
in
test
imul
push
inc
mov
and
sbb
xor
fisubr
dec
fsub
adc
std
push
pop
pop
loopne
inc
mov
inc
lea
mov
fisub
enter
dec
mov
sbb
dec
dec
add
sub
mov
xor
adc
std
(bad)
mov
xchg
pop
scas
jne
je
inc
dec
dec
je
sar
push
in
pushf
push
sbb
xchg
lea
loop
rcl
dec
dec
xor
cmc
ja
sahf
sub
fidivr
pop
idiv
add
sbb
(bad)
xlat
push
cli
mov
jp
cmp
pop
pop
imul
adc
ret
mov
push
push
pop
mov
dec
xchg
in
cmc
sub
sahf
(bad)
sti
push
adc
movs
add
arpl
outs
test
dec
outs
dec
xchg
in
aad
int3
jbe
dec
out
sub
rcl
addr16
rcl
jmp
loop
dec
xor
jle
mov
inc
adc
pcmpgtw
retf
jo
push
shl
xlat
rdseed
cs
dec
(bad)
cmps
stos
mov
mov
lea
inc
das
sbb
add
adc
sub
fist
fs
sub
push
push
test
mov
leave
enter
cmp
aas
leave
jb
in
push
(bad)
cld
push
mov
pop
pop
(bad)
repnz
add
imul
repnz
pop
mov
and
and
cmps
add
push
in
jmp
lahf
imul
sbb
scas
imul
cdq
sub
lock
call
aam
xor
jnp
jecxz
pop
jl
inc
xor
icebp
cmp
or
adc
test
jle
add
mov
fist
lods
test
je
pop
jmp
dec
mov
fcmovnb
sbb
test
mov
sbb
jge
pop
mov
lea
jecxz
sbb
add
push
mov
inc
js
push
retf
cmps
jo
into
(bad)
repz
movs
mov
pop
(bad)
mov
push
mov
cmp
dec
(bad)
repz
shl
cmp
and
push
inc
not
sub
std
test
mov
cmps
inc
cs
in
stc
movs
cmc
jnp
or
shl
fstp
cli
dec
jmp
sub
sbb
mov
sub
bound
outs
dec
loope
aaa
aad
aam
add
addr16
(bad)
and
enter
scas
pop
cmps
ja
leave
shl
fadd
out
mov
sbb
pop
pop
cmc
pop
jecxz
jecxz
add
lods
fcomi
mov
retf
jae
gs
cmp
cmp
inc
in
dec
mov
stos
clc
ret
in
push
mov
(bad)
jge
test
out
cli
mov
test
(bad)
mov
cwde
inc
mov
lds
cmp
bound
mov
mov
in
lea
dec
fiadd
ret
xchg
ds
or
(bad)
cli
ret
ins
push
push
fwait
pop
jae
xor
movs
in
cmp
and
stos
sub
pop
dec
jmp
nop
fist
adc
add
outs
mov
xor
(bad)
sar
(bad)
jmp
rcl
fmul
cmc
pop
or
push
xlat
and
mov
aaa
jmp
outs
test
in
jl
xor
pop
cmp
fwait
or
jecxz
clc
and
inc
xchg
fucomp
outs
cmps
xchg
(bad)
mov
add
adc
out
stc
mov
xchg
push
into
outs
int
xlat
scas
xchg
xchg
push
xchg
or
jne
jle
jp
push
outs
test
mov
ss
jle
cmp
ins
push
bound
dec
je
push
xchg
lea
out
hlt
outs
sar
add
mov
fnstsw
mov
cdq
rcr
ss
push
(bad)
outs
or
cmc
imul
(bad)
lock
cmp
sub
cmc
outs
fsubr
iret
mov
xor
inc
in
inc
mov
aam
movs
fild
mov
ficomp
jle
in
call
ds
(bad)
out
add
cmp
lods
mov
dec
cli
push
aas
fld
add
sbb
inc
fst
stos
xchg
div
cli
ja
mov
jmp
js
adc
les
mov
aas
sar
xor
sub
(bad)
push
scas
into
imul
mov
xchg
mov
in
push
out
add
mov
pop
ins
jmp
or
jecxz
xchg
xchg
adc
fldenv
cli
sub
lahf
cdq
lea
mov
bound
test
aam
mov
sub
mov
sbb
or
push
xchg
xor
ret
arpl
push
mov
push
outs
(bad)
mov
inc
mov
nop
inc
mov
test
out
sahf
fwait
pop
pop
sbb
nop
fcmovb
call
aas
arpl
xchg
shl
adc
and
std
gs
ret
mov
mov
inc
ins
stos
mov
call
(bad)
pop
dec
sbb
fs
or
or
dec
mov
mov
imul
jmp
mov
add
fcom
mov
aas
jb
or
dec
jae
cmc
pop
jmp
dec
test
cmp
pop
cmps
out
clc
jge
or
(bad)
adc
cmp
and
mov
fs
outs
gs
out
mov
jle
lods
push
lahf
jo
or
and
mov
add
inc
cld
ja
push
aam
aaa
push
ja
shl
mov
mov
imul
xchg
mov
cmp
pop
fisub
(bad)
dec
scas
xchg
xchg
or
dec
out
jg
xor
je
push
sbb
popa
mov
stos
xchg
fdiv
loop
cmps
cmc
mov
fwait
or
test
test
mov
fst
or
mov
mov
mov
shl
pop
unpckhps
sbb
ins
rcl
ds
mov
jo
mov
cdq
popa
popa
xchg
mov
movs
add
dec
pop
pop
mov
sub
xor
popa
(bad)
jae
test
enter
xor
jmp
sub
cmp
movs
xchg
mov
push
xchg
daa
dec
adc
sahf
and
and
inc
or
or
dec
xor
ret
bound
push
or
add
nop
mov
dec
dec
dec
retf
push
ficom
rcl
adc
pop
cmps
and
add
retf
xchg
sub
movs
cdq
adc
test
xchg
lds
push
fcomp
xchg
and
ret
sub
ins
dec
push
cmps
sub
dec
xor
or
and
mov
sub
adc
dec
pop
cwde
ret
or
test
dec
inc
push
stos
inc
xchg
sub
mov
push
or
ficomp
mov
fld
xor
in
xchg
cmps
test
mov
dec
aam
adc
js
and
xchg
push
leave
daa
test
xchg
xchg
or
dec
push
push
xchg
test
xchg
in
leave
sub
xor
dec
dec
pop
xchg
and
mov
rcr
xor
dec
jg
xlat
loope
dec
and
xchg
push
xchg
xchg
xchg
mov
and
cs
push
movs
cmp
dec
and
dec
pop
and
and
out
adc
adc
cli
pop
sahf
scas
and
call
mov
xchg
lahf
push
call
sub
jmp
push
(bad)
cld
cli
aas
xlat
hlt
mov
cli
enter
and
sahf
pop
loop
fild
xlat
fwait
rcr
cmp
dec
(bad)
ins
inc
jmp
inc
sub
cld
mov
ficom
cmps
pop
scas
mov
xor
call
in
pop
jmp
pop
lods
lods
push
and
jg
iret
cmps
stos
cwde
nop
push
fcomp
imul
pop
pop
outs
jmp
mov
pop
fild
dec
mov
(bad)
jle
pop
outs
xor
mov
add
idiv
add
imul
cld
imul
cmp
out
test
sbb
imul
out
outs
mov
mov
sbb
ror
inc
mov
inc
cli
(bad)
out
movs
hlt
mov
cmp
cmp
xlat
and
inc
pop
mov
mov
sar
add
out
cli
int
xchg
jg
js
retf
iret
cli
cmps
sub
loop
dec
inc
mov
pop
mov
or
mov
push
neg
es
iret
iret
jae
cwde
fdivr
call
inc
mov
sub
lock
out
lds
jp
inc
sbb
pop
call
xlat
dec
adc
test
and
adc
dec
and
and
xchg
dec
xor
test
xor
xchg
xchg
mov
and
lods
mov
arpl
imul
pop
shl
cmc
sti
movs
mov
ss
fimul
jecxz
idiv
(bad)
fdivr
jno
dec
mov
stc
(bad)
call
cmc
xor
lock
inc
std
xchg
(bad)
(bad)
cs
fstp
loop
or
adc
fwait
sbb
mov
xor
movs
leave
shl
dec
test
or
sub
jno
push
adc
dec
dec
stos
cli
test
iret
add
add
(bad)
jae
call
sbb
jae
sahf
fucomip
push
arpl
inc
out
enter
and
sti
mov
cmp
cmp
lds
repz
xor
push
mov
lea
jg
dec
jg
sti
jmp
call
sahf
test
das
push
cmp
aas
push
inc
movs
mov
fdivr
arpl
xlat
inc
scas
jmp
push
and
sbb
jnp
stos
cmc
out
outs
jmp
add
xlat
dec
out
cmc
jmp
repz
neg
pop
loopne
enter
dec
inc
dec
shl
pop
mov
push
enter
pop
arpl
mov
push
add
pop
ins
xchg
fldln2
jg
addr16
mov
cmc
lahf
icebp
jg
sub
pop
push
jg
scas
std
lods
inc
and
loopne
mov
icebp
js
mov
sbb
arpl
cmp
adc
and
movs
xchg
and
add
test
xchg
xchg
adc
dec
pop
dec
(bad)
and
xor
mov
dec
pop
pop
jno
dec
aas
in
sbb
push
inc
cmps
test
clc
jp
ret
cs
lea
enter
popa
nop
jg
repz
(bad)
pop
les
add
pop
inc
add
inc
cld
das
jp
imul
cmps
mov
das
retf
pushf
and
mov
mov
test
and
xor
xadd
push
adc
rol
sbb
clc
jbe
push
xchg
inc
ret
xor
or
dec
push
push
repz
pop
jae
aas
(bad)
sub
outs
movs
out
fild
(bad)
sar
popf
imul
ja
paddq
scas
xchg
out
shr
arpl
(bad)
sbb
xor
lods
test
pop
stc
xor
push
sub
int
mov
push
inc
shr
push
xor
mov
mov
ret
std
jp
add
or
out
sub
sbb
or
jge
int
inc
outs
lods
in
std
icebp
out
addr16
fistp
lea
pop
sub
sub
cwde
mov
test
mov
jae
cmp
out
outs
cmp
cmp
ret
cmp
inc
test
mov
jecxz
add
pusha
repnz
bound
in
aaa
xor
xlat
pop
neg
and
add
inc
rcr
mov
movs
clc
out
jne
adc
ret
and
dec
and
(bad)
mov
and
cdq
mov
shl
mov
mov
pop
mov
push
fnstsw
xor
arpl
cmp
jg
jl
sti
in
pop
jae
and
scas
hlt
ficomp
jmp
push
pop
das
push
fdivr
pop
dec
int
jnp
add
jge
(bad)
retf
ret
and
outs
out
push
(bad)
sub
addr16
test
aas
xchg
iret
int3
dec
mov
dec
aad
mov
inc
movs
es
sub
aas
stos
in
xlat
cli
cwde
iret
sub
cld
pmaddwd
call
jl
sub
adc
cli
emms
out
dec
jp
mov
sbb
movs
mov
push
jmp
xor
push
push
out
fild
cmp
cmp
xchg
pop
mov
push
xor
or
mov
mul
xchg
cmc
lods
dec
mov
div
xchg
loope
or
test
rcl
retf
inc
and
repnz
retf
aas
xchg
mov
xor
mov
add
out
mov
adc
in
mov
jg
dec
shl
test
push
out
cs
push
cmps
push
cli
mov
int3
cmp
cmp
shl
sub
dec
jle
addr16
lahf
bswap
aas
(bad)
(bad)
in
cli
outs
xlat
pushf
pop
out
sbb
dec
outs
popa
(bad)
mov
das
aas
dec
sub
shl
iret
ja
mov
retf
shl
inc
mov
(bad)
fild
xchg
mov
pop
jno
test
jmp
repz
pushf
mov
scas
dec
cld
jmp
sub
mov
call
push
ret
add
fidivr
xchg
xchg
loopne
rcr
mov
jle
xor
bswap
jg
data16
cmp
inc
sbb
mov
int
push
sahf
dec
aas
call
mul
pop
pop
ja
mov
imul
sbb
in
sti
jno
iret
pop
arpl
stc
cs
clc
dec
add
fistp
hlt
outs
lods
cli
(bad)
in
in
lahf
cld
test
int
repnz
(bad)
cld
lds
mov
(bad)
mov
aad
mov
jns
dec
adc
out
outs
cmc
push
cwde
and
cld
cmps
jecxz
mov
cmp
dec
test
push
enter
call
pushf
aas
out
retf
leave
cmp
mov
inc
cs
pop
int3
jmp
mov
test
pop
and
mov
scas
in
out
(bad)
cli
call
pop
jmp
outs
outs
movs
aam
ins
lods
cmp
pop
std
icebp
jmp
inc
(bad)
and
jecxz
mov
rcr
xchg
aad
int
adc
or
mov
outs
dec
loope
xlat
push
std
push
cld
push
jne
dec
jne
outs
pusha
lock
repz
pop
mov
pop
pop
cwde
loope
mov
sar
mov
lahf
rcl
loop
cwde
(bad)
sar
mov
mov
mov
or
rcr
cld
mov
mov
in
pop
mov
ja
pop
shl
scas
stos
popf
arpl
int
in
je
out
popa
jne
icebp
imul
mov
fdiv
ror
jmp
inc
mov
pop
ins
mov
icebp
idiv
je
lock
pop
or
cmp
sbb
jmp
(bad)
lock
xchg
out
popa
shr
pop
div
sub
cli
dec
push
cmp
(bad)
mov
add
mov
adc
ins
cmp
sub
ror
ds
out
(bad)
cmc
ins
mov
sub
pop
inc
imul
jmp
push
jo
rcr
mov
cli
(bad)
pop
inc
or
mov
js
aas
mov
xchg
sar
movs
fnstsw
les
or
jo
stos
out
std
popf
aad
imul
xor
imul
(bad)
fmul
aas
aam
into
jmp
jge
cld
aas
cmp
inc
inc
jle
mov
inc
les
mov
ret
pop
fnstsw
in
mov
jmp
cli
push
cmp
mov
jmp
mov
xchg
jle
or
push
and
and
dec
xchg
mov
sbb
int
fdiv
sbb
(bad)
pop
push
jmp
mov
push
or
pop
push
scas
clc
(bad)
jmp
fwait
aas
test
scas
sub
jmp
fld
cmp
mov
bound
jecxz
sub
adc
jmp
push
das
push
imul
addr16
dec
sub
stc
inc
xchg
dec
dec
push
xor
cli
add
jnp
push
push
push
dec
stc
test
lahf
jae
mov
add
std
test
rol
out
enter
punpckhbw
mov
mov
cmp
mov
pcmpeqd
jbe
mov
js
inc
xor
scas
lea
xor
jo
loopne
push
sub
xor
test
xor
push
xor
repz
mov
out
mov
fiadd
cmp
aam
mov
sbb
loopne
pop
pop
inc
add
dec
mov
cld
in
jno
lock
test
jmp
adc
pop
aas
js
mov
scas
push
mov
jmp
sbb
push
jnp
inc
inc
and
lea
mov
mov
sub
cdq
or
adc
xchg
pop
ret
test
in
aaa
lea
push
adc
int3
jbe
inc
jae
mov
leave
cli
inc
pop
fcomp
push
loopne
mov
inc
fimul
adc
rol
adc
inc
je
pop
sti
(bad)
int
mov
outs
outs
mov
into
xchg
or
sahf
jmp
pop
imul
adc
(bad)
cli
rcr
xor
push
aas
jp
pop
gs
and
cdq
pop
mov
ja
dec
pop
add
sub
imul
adc
ins
mov
mov
cs
push
loop
mov
adc
mov
test
not
imul
pushf
jge
mov
arpl
or
add
or
shl
adc
and
or
and
mov
dec
xor
popa
sub
xchg
xchg
test
test
test
mov
ret
xchg
and
or
daa
ficom
push
aam
push
mov
or
push
or
bound
test
mov
xor
cmps
sbb
retf
cmp
or
nop
cli
push
fwait
push
sub
test
inc
dec
ficom
and
aad
mov
mov
repnz
movs
movs
push
push
ret
adc
dec
add
dec
add
cmp
adc
add
hlt
mov
push
pushf
cdq
xor
call
leave
mov
ins
mov
sub
movs
sub
rcl
mov
sub
push
movs
xchg
dec
sub
push
dec
adc
and
mov
inc
dec
and
and
inc
call
loope
dec
and
dec
and
and
enter
mov
or
dec
cmp
dec
cs
dec
dec
movs
cdq
cmp
dec
dec
dec
sub
xor
nop
dec
or
dec
cmova
pop
test
dec
shl
aas
clc
and
aas
(bad)
lahf
dec
fldcw
lods
pop
dec
cmps
mov
ss
jmp
add
cmps
pop
mov
call
scas
jge
push
inc
add
mov
add
sbb
mov
inc
loop
inc
jb
test
jb
shl
cwde
loope
xchg
xchg
mov
xchg
movs
pop
jb
mov
add
rcl
sub
jg
mov
test
icebp
fcomip
stos
sub
mov
cmp
shr
cli
jne
dec
into
xchg
jle
hlt
jbe
mov
xor
aas
out
xor
mov
mov
xor
imul
inc
rcr
out
push
ins
mov
inc
xchg
push
inc
xchg
sar
jne
adc
test
lea
hlt
fcomp
xchg
mov
pop
xchg
inc
daa
pop
dec
imul
(bad)
mov
inc
mov
popa
ret
mov
sbb
test
sbb
fucomi
jge
into
(bad)
cdq
pop
gs
ds
int3
aas
into
push
mov
mov
popf
dec
sbb
out
add
pop
push
out
sti
jae
iret
repz
xor
leave
cmp
repz
xchg
imul
aam
add
push
cli
ins
scas
jg
pop
inc
sbb
inc
jne
xlat
inc
into
enter
in
pop
lea
(bad)
xchg
cmp
sub
popa
inc
push
cdq
dec
mov
xor
xchg
es
cdq
and
movs
ror
xor
and
add
movs
movs
in
cmp
popf
dec
xchg
(bad)
repnz
retf
(bad)
retf
pop
inc
sbb
out
stos
mov
jnp
ror
call
sar
dec
jmp
popa
cmc
cdq
(bad)
mov
cli
(bad)
mov
add
loop
xor
jmp
mov
imul
mov
cs
stos
gs
fwait
mov
(bad)
mov
push
aad
pop
xlat
cli
js
aas
dec
call
add
add
push
stos
rcl
pop
jmp
in
idiv
out
cli
mov
(bad)
push
sar
adc
adc
push
out
out
xor
dec
nop
out
cmp
fs
xchg
cmc
cmp
push
pop
mov
scas
sub
arpl
and
mov
jae
fcomp
pop
inc
mov
into
xlat
inc
(bad)
mov
fisub
add
inc
dec
jne
movs
cli
pop
pop
xchg
adc
adc
jmp
cmc
mov
ins
popa
cli
push
mov
dec
jne
out
inc
outs
push
int3
lods
push
mov
outs
std
(bad)
(bad)
mov
push
xchg
mov
inc
jmp
mov
cli
arpl
xchg
inc
bnd
cmc
push
lods
je
cmp
xchg
enter
(bad)
(bad)
mov
mov
push
call
je
and
xchg
dec
xor
xchg
cmps
push
adc
retf
cmp
retf
jp
iret
sub
(bad)
out
cli
cmc
scas
mul
ret
add
mov
add
xchg
add
dec
xchg
mov
mov
shr
jnp
xor
aam
inc
stos
pop
imul
test
jne
(bad)
adc
retf
inc
repz
xchg
aad
enter
push
daa
shl
lods
out
mov
add
inc
mov
cmc
lahf
aam
jne
xor
arpl
xor
fidivr
mov
and
mov
in
test
xor
sub
push
mov
shl
mov
cli
and
sbb
jno
inc
cmp
adc
push
out
gs
and
ret
(bad)
test
dec
adc
mov
pop
pop
arpl
and
icebp
je
or
scas
clc
dec
hlt
push
lods
and
mov
stos
(bad)
xchg
mov
mov
scas
push
fsubr
in
dec
lods
aas
loope
out
mov
add
int3
addr16
enter
dec
xchg
and
call
mov
inc
xor
aas
push
inc
addr16
mov
or
(bad)
repz
sar
mov
jmp
mov
jmp
cmp
cmp
push
cli
iret
aad
cli
pop
movs
mov
cmp
popf
jg
push
shl
sar
cmp
jne
cmp
cli
inc
xchg
inc
(bad)
add
jne
lahf
outs
and
div
sar
inc
xlat
inc
xchg
add
and
inc
push
xor
sbb
cmps
push
adc
movs
pop
mov
ins
imul
sub
cwde
mov
retf
stc
movs
jge
inc
xchg
pop
repnz
loopne
mov
popf
mov
test
outs
aad
pop
inc
ret
std
jg
push
push
xor
mov
aas
stc
repnz
hlt
jbe
cmps
mov
hlt
inc
dec
mov
out
sbb
int
(bad)
stos
and
xchg
xchg
lahf
dec
cli
ret
cdq
rcr
out
neg
mov
sub
sub
jae
xlat
fstp
add
sub
pop
test
mov
lods
popf
inc
cli
push
lahf
cld
mov
and
sar
mov
hlt
xchg
cmovne
xlat
fisttp
mov
xor
pop
xchg
mov
cwde
pop
mov
test
mov
push
inc
in
loope
dec
not
jb
jp
push
mov
cmp
fiadd
cli
jg
mov
imul
test
push
les
dec
xchg
dec
ds
cwde
iret
push
push
pusha
(bad)
mov
in
cmp
xchg
cmps
inc
xchg
stos
jb
pop
arpl
aam
mov
push
pop
ds
jg
cld
mov
jo
xor
test
add
and
clc
scas
(bad)
(bad)
jle
mov
inc
fs
xchg
adc
adc
cmp
arpl
push
idiv
jmp
push
pop
and
test
(bad)
xor
add
add
jmp
shr
mov
stos
std
xor
(bad)
mov
ja
sub
adc
pop
cmp
push
data16
sti
lock
jmp
popa
push
loope
jge
scas
aas
jmp
ins
push
lahf
mov
and
mov
imul
xchg
push
jge
or
adc
push
retf
shl
test
lock
movs
aad
int
inc
jo
xchg
loope
scas
and
pop
xchg
inc
sub
out
int
cmc
aad
push
add
jmp
xor
sbb
xchg
iret
out
inc
push
lahf
test
dec
jbe
pop
cmps
cmp
pop
(bad)
cmp
add
xlat
and
jmp
pop
xor
out
ficomp
mov
bound
aas
loopne
in
arpl
lds
adc
lods
fisubr
nop
(bad)
mov
lea
inc
push
jmp
int
dec
pop
or
cmp
sbb
mov
xchg
xchg
stos
xor
xchg
inc
pop
or
fsub
pop
arpl
add
ins
pushf
(bad)
repnz
sahf
xchg
lahf
pop
jmp
push
(bad)
mul
lahf
repz
popf
fist
divps
cmps
add
sbb
mov
pop
adc
out
loopne
leave
imul
pop
outs
dec
loope
aaa
aad
aad
lds
ret
xchg
arpl
mov
mov
test
cdq
adc
or
lock
out
jns
imul
cmp
not
mov
outs
scas
imul
in
mov
cmc
(bad)
pushf
xor
(bad)
sub
mov
mov
aam
xor
call
mov
aad
mov
adc
fmul
sbb
aam
ret
jmp
cld
jb
frndint
popf
sbb
(bad)
xlat
mov
(bad)
cmc
lahf
imul
jg
pop
aaa
dec
cli
fdiv
xor
inc
imul
das
arpl
mov
pop
pop
jg
(bad)
into
sbb
add
inc
xor
add
in
xlat
jno
jp
sub
mov
mov
jmp
jmp
mov
mov
std
add
in
sub
mov
push
gs
xchg
sti
int
add
mov
outs
scas
jg
jb
dec
cli
shl
imul
mov
call
int3
hlt
cli
test
js
mov
fiadd
imul
jmp
mov
cli
cs
lock
push
mov
js
jmp
lea
xchg
cmp
push
sqrtps
daa
dec
mov
jno
(bad)
and
jp
dec
push
mov
sub
or
cdq
imul
mov
inc
xchg
or
jp
dec
adc
dec
add
pop
into
mov
arpl
stos
push
xlat
pop
cmp
pusha
cmp
fld
xchg
arpl
inc
lods
and
fs
cmc
out
rcr
fbstp
adc
and
pop
retf
idiv
imul
inc
or
stos
stos
das
test
xchg
or
ja
enter
jnp
in
jg
mov
mov
loop
xchg
jnp
jae
imul
ss
out
stos
xlat
push
loopne
sbb
scas
int
and
out
into
outs
lahf
out
push
(bad)
sbb
mov
leave
pop
lods
xor
cmp
(bad)
adc
mov
call
(bad)
push
sbb
inc
fist
daa
jne
mov
inc
ins
mov
loopne
shr
adc
mov
std
pop
daa
inc
pop
and
sbb
add
xchg
inc
cwde
jnp
sub
cmp
jge
pop
sbb
add
int
sub
or
in
sahf
(bad)
call
sbb
js
fwait
and
adc
sub
jl
neg
pop
sub
xor
and
imul
dec
push
add
call
cmp
imul
scas
int
lods
jae
lock
ret
mov
stos
push
(bad)
ins
es
sbb
sahf
retf
out
sbb
test
movs
nop
ffree
(bad)
mov
(bad)
push
mov
repnz
mov
pop
mov
cwde
add
out
out
js
push
jmp
mov
push
(bad)
js
arpl
test
jo
out
xchg
adc
mov
mov
add
in
adc
sbb
ror
and
or
mov
mov
jle
xor
inc
sbb
mov
cmp
mov
mov
retf
je
inc
call
and
or
into
xor
mov
xchg
popa
xchg
test
ret
mov
pop
xchg
call
sahf
in
inc
push
mov
mov
sub
adc
xchg
xchg
push
and
xor
cwde
or
dec
push
movs
imul
and
xchg
popa
mov
or
xor
adc
aam
dec
sti
inc
dec
xor
xchg
rcr
ficom
or
adc
or
or
jge
xchg
inc
jb
inc
push
pop
push
test
or
sub
sbb
(bad)
xchg
and
jb
xchg
inc
dec
sub
movs
xchg
movs
xor
test
and
js
dec
es
inc
cmps
dec
xchg
dec
pop
adc
jmp
dec
sub
dec
and
dec
push
dec
and
adc
dec
dec
dec
push
dec
and
xchg
xchg
je
sub
xchg
push
xchg
dec
cmp
call
loope
xor
mov
scas
xchg
dec
jo
xchg
popf
xor
dec
les
leave
rol
es
xchg
mov
dec
push
cmps
sub
rcl
cmp
movs
cmps
dec
xor
mov
hlt
xchg
fs
ret
inc
jne
leave
fwait
or
inc
in
std
inc
clc
(bad)
call
sti
inc
repz
(bad)
adc
ror
sbb
(bad)
loop
mov
add
popf
cmp
cmc
aas
pop
mov
cmc
fwait
cli
aaa
scas
xor
adc
aad
pop
and
dec
dec
daa
dec
xchg
sub
and
xchg
xchg
dec
rcl
es
xor
dec
xor
inc
jnp
or
dec
dec
xchg
cdq
adc
xchg
mov
jp
inc
ins
cs
push
xchg
add
lds
or
mov
xchg
iret
mov
(bad)
movs
sbb
lahf
gs
lock
std
pop
push
addr16
add
adc
cmovl
mov
xchg
ret
jno
mov
cmp
cmp
jg
mov
imul
adc
mov
add
je
or
out
push
jmp
cmps
imul
inc
cmp
mov
loope
inc
jmp
mov
fld
rcl
sub
ins
or
sub
test
fbld
hlt
outs
std
mov
test
jle
push
mov
fist
push
fucomip
scas
cmp
inc
push
jae
ins
fst
jmp
inc
lea
pop
and
nop
(bad)
leave
adc
push
or
fs
addr16
push
jo
mov
push
xchg
(bad)
repz
(bad)
ss
out
jl
xchg
or
out
pop
(bad)
mov
leave
sbb
and
pop
xchg
mov
cmc
ret
daa
and
test
sub
dec
dec
retf
test
mov
dec
dec
push
cmc
das
jmp
cmp
movntps
imul
sub
cli
cs
jmp
inc
mov
gs
mov
adc
fidiv
std
outs
jmp
xor
stos
jns
out
std
jge
jg
(bad)
shl
sbb
xchg
pop
pushf
ja
fsubr
lods
imul
inc
dec
pop
movs
xchg
dec
adc
mov
and
xchg
mov
test
xchg
daa
(bad)
mov
cmp
call
(bad)
aaa
inc
jmp
das
fcmovnu
sbb
leave
std
out
outs
inc
mov
imul
test
jmp
xchg
pop
sbb
out
mov
sbb
mov
add
jle
cld
pop
(bad)
call
movs
nop
(bad)
lods
and
push
addr16
clc
sub
popf
imul
mov
xchg
call
out
vpmuludq
stos
in
aaa
mov
xchg
xor
mov
outs
add
pop
out
pop
out
std
pop
hlt
stos
(bad)
mov
loopne
ret
nop
inc
adc
jge
ret
jmp
xor
(bad)
ficom
rcr
movs
(bad)
neg
sub
arpl
pop
in
and
fabs
hlt
pop
(bad)
outs
out
inc
jmp
cmp
push
add
mov
cdq
adc
or
nop
dec
or
jp
jge
push
xchg
mov
cmp
rcr
add
mov
mov
xor
stc
or
sti
sti
jg
cmc
pop
scas
mov
sub
in
push
add
jno
loope
add
aas
hlt
push
(bad)
push
push
xor
call
inc
hlt
cmp
cmps
inc
dec
sub
adc
dec
dec
inc
ret
repz
pop
test
fsubr
jmp
jbe
jnp
movs
lods
xor
mov
jmp
push
ret
jmp
imul
(bad)
xchg
std
and
cmp
jge
push
push
loop
aaa
or
push
mov
xor
xor
in
loope
cmp
cdq
push
jno
aaa
adc
xchg
lods
jge
int3
jmp
stos
neg
and
inc
mov
dec
pop
rcl
cmp
daa
push
scas
jle
ret
mov
jecxz
pop
cmp
push
fwait
sub
add
std
push
repnz
dec
mov
mov
xchg
and
mov
xchg
dec
lods
jmp
out
add
cwde
mov
test
and
sbb
or
je
int3
adc
les
push
idiv
mov
(bad)
jge
fnstsw
out
push
cwde
dec
or
aad
popf
sub
xchg
mov
outs
and
mov
aas
loopne
inc
inc
jae
push
sar
rol
call
inc
in
inc
rcr
jmp
or
cmps
sub
push
inc
(bad)
xchg
dec
jmp
cmp
jno
adc
push
adc
add
sti
jg
and
inc
(bad)
dec
jmp
cs
loopne
movs
sbb
iret
in
cmc
mov
ror
vandnps
jo
or
add
push
push
sar
mov
push
imul
or
pop
cmp
inc
or
xor
das
ret
jg
jnp
(bad)
js
or
dec
cli
leave
inc
or
shl
std
mov
pop
cmps
jnp
mov
jmp
nop
adc
inc
or
sub
pop
loop
dec
dec
and
gs
mov
cs
mov
imul
mov
xor
xchg
hlt
stos
loope
jg
arpl
add
jg
sub
cmp
xor
ret
inc
sbb
mov
jne
sub
and
dec
and
jg
stos
das
sub
fmul
push
lea
push
push
push
stos
ins
mov
hlt
inc
dec
and
xchg
cli
outs
dec
jmp
mov
stc
or
popf
imul
pop
add
(bad)
aaa
push
in
jecxz
or
out
xlat
push
or
scas
scas
mov
add
(bad)
std
sub
les
jbe
ror
scas
arpl
bound
(bad)
xlat
xor
int3
mov
mov
lods
aad
xchg
xor
xchg
call
and
retf
stos
retf
neg
jbe
fsin
aas
leave
mov
sub
xor
sub
fistp
repnz
jmp
or
in
loop
jmp
push
jmp
and
adc
aas
push
lds
jns
pop
push
test
outs
aas
call
lods
cmp
or
(bad)
mov
addr16
stos
cwde
cld
inc
cld
int
ss
jmp
and
(bad)
call
cmp
imul
pop
mov
mov
push
pop
xor
cmp
inc
iret
inc
sbb
inc
aam
jns
add
mov
rcl
inc
fst
mov
adc
or
xchg
cld
shl
cmps
cmp
jnp
inc
(bad)
retf
xor
jns
inc
mov
iret
pop
sbb
outs
jno
int
dec
xchg
aad
scas
test
jmp
imul
in
lods
sub
stos
cmp
int3
aaa
hlt
mov
into
ret
ret
ins
fsubr
shl
(bad)
push
loope
(bad)
fld
sbb
xchg
xchg
mov
jo
or
jmp
add
inc
add
aas
dec
jo
jmp
jnp
pop
jbe
inc
inc
pop
imul
imul
sub
jae
pop
dec
ins
jae
in
jne
hlt
(bad)
js
push
popf
push
ret
fld
push
inc
shl
jge
mov
movs
xchg
xor
jo
test
shrd
aad
ja
dec
out
sbb
in
(bad)
jge
dec
neg
xor
inc
cli
xchg
mov
sub
in
inc
rcr
inc
cli
stos
stos
jg
(bad)
mov
jnp
out
call
xchg
shl
xor
outs
inc
outs
lods
(bad)
fiadd
cli
scas
lods
cdq
iretw
push
mov
pop
jns
(bad)
jg
imul
cmp
mov
mov
nop
ds
fild
xchg
jnp
scas
data16
call
test
add
push
cmp
mov
fmul
repz
jp
clc
scas
jmp
iret
in
out
cli
dec
and
adc
das
aas
cmps
popa
arpl
push
inc
xor
retf
nop
fistp
test
jmp
in
jmp
cmps
inc
sub
pop
(bad)
push
lahf
nop
loope
jmp
inc
pop
stos
jae
jg
jmp
xchg
js
pop
fcomip
push
(bad)
loope
arpl
les
jecxz
push
(bad)
jno
xlat
ret
icebp
ins
jbe
mov
jg
inc
mov
cmp
addr16
scas
test
inc
jmp
cmp
add
jmp
xchg
je
jae
imul
dec
jge
push
cmp
jl
inc
mov
mov
pushf
jg
or
sub
mov
out
xlat
(bad)
bnd
adc
fcmovnu
repz
dec
shr
jae
jmp
xchg
arpl
rol
jmp
std
dec
or
mov
cld
dec
pop
lahf
push
out
movs
mov
stc
jge
push
mov
pop
mov
addr16
mov
jbe
pusha
mov
jmp
daa
cli
int
mov
jne
xchg
jp
imul
jmp
test
mov
ja
dec
xchg
jecxz
into
test
daa
addr16
retf
out
(bad)
shr
adc
dec
(bad)
aas
jp
int
mov
cmc
sbb
frstor
xor
sub
sub
xchg
lock
mov
clc
scas
fdivr
jne
dec
sub
cld
adc
fucomp
mov
pushf
sub
iret
sbb
in
test
pop
ret
mov
push
cmc
mov
cmp
lods
mov
mov
ficomp
ret
jge
mov
jmp
jbe
xor
fild
pop
call
lock
and
cmc
outs
int3
aaa
pop
aaa
aam
push
jg
or
mov
fsqrt
dec
fnstsw
mov
fimul
fadd
pop
loop
test
sbb
loop
push
or
jge
jnp
and
pop
sbb
jecxz
test
fndisi(8087
loopne
mov
and
les
push
xchg
out
sar
fld
sbb
sub
shl
sbb
in
jns
inc
push
or
shl
leave
push
inc
imul
iret
mov
inc
mov
xchg
shl
(bad)
push
dec
(bad)
adc
outs
addr16
sub
mov
je
in
and
icebp
loop
xchg
std
fwait
sub
jnp
jnp
pop
(bad)
cmp
ret
fwait
in
in
push
cmp
fcmovnbe
push
jno
mov
aas
inc
call
arpl
dec
mov
adc
ins
scas
push
mov
mov
mov
in
test
cmp
and
fmul
div
dec
inc
(bad)
and
mov
push
pop
hlt
dec
mov
add
fs
ret
inc
enter
mov
or
push
sub
dec
sbb
pop
pusha
or
mov
cmps
mov
and
dec
adc
xchg
and
dec
mov
mov
ret
test
call
cwde
mov
lds
mov
xchg
mov
xchg
jo
dec
push
mov
push
xchg
pop
or
dec
in
cmp
mov
or
xchg
sub
cwde
call
aam
adc
xor
adc
push
sub
adc
dec
add
mov
rcl
jb
test
jp
mov
sub
sub
push
adc
and
test
mov
and
sub
ins
leave
xchg
inc
nop
lods
leave
dec
dec
and
movs
loopne
adc
test
aam
and
test
push
xchg
sub
adc
and
and
mov
movs
in
dec
xchg
dec
pop
and
and
and
dec
sub
dec
dec
and
sub
and
daa
dec
dec
xchg
xchg
dec
and
dec
dec
cmp
dec
call
loope
xor
lods
fdivr
xchg
inc
nop
pop
mov
(bad)
xchg
dec
jle
adc
dec
mov
xor
dec
push
movs
adc
mov
dec
and
xchg
xchg
inc
cmp
inc
movs
xchg
dec
dec
push
je
cmp
daa
dec
or
dec
dec
add
or
dec
into
cmps
sub
js
cli
mov
or
sbb
and
jge
cld
data16
xchg
rcr
xchg
shl
push
nop
inc
outs
std
pop
cmps
mov
hlt
stos
aas
out
aad
dec
popf
iret
xor
mov
jbe
lods
inc
mov
sbb
adc
xchg
pop
jg
scas
sahf
neg
adc
movs
lahf
test
inc
stos
adc
cmp
and
and
sub
inc
movs
movs
shl
or
inc
or
xchg
xchg
mov
and
push
inc
dec
inc
fwait
push
dec
cmc
jg
(bad)
ja
mov
jmp
cmps
rcr
in
adc
dec
mov
cmp
shl
imul
repz
cli
fcmovbe
pop
ds
jmp
adc
cld
xchg
das
push
cli
(bad)
cmc
stos
(bad)
mov
cwde
mov
dec
or
mov
icebp
outs
(bad)
jno
sahf
sub
cmp
(bad)
ja
jp
sub
dec
das
jns
push
out
jp
sbb
jmp
hlt
inc
fwait
pop
imul
lods
jne
int3
xchg
sahf
repnz
pop
mov
mov
out
push
mov
imul
nop
hlt
jnp
lods
pop
pop
cmp
push
cmp
xchg
movs
mov
inc
inc
jp
cmc
vsubps
pop
sub
mov
std
xlat
mov
inc
outs
shr
std
adc
xchg
adc
test
imul
hlt
aam
mov
jge
xchg
out
and
or
test
in
imul
xlat
cld
out
dec
fld
shl
aad
cli
push
add
inc
xor
clc
(bad)
mov
cli
dec
fsub
mov
aam
sti
dec
aas
hlt
push
push
push
cmp
fild
cwde
mov
imul
stos
inc
dec
dec
xchg
add
lock
xchg
xchg
add
inc
daa
add
addr16
shr
mov
aas
repnz
inc
jo
adc
lods
cmp
cld
ss
cld
adc
jbe
jg
outs
inc
cmp
ins
mov
fnstcw
push
fwait
cmc
lds
repz
std
sub
test
lods
fist
inc
leave
mov
jecxz
lods
addr16
rep
(bad)
mov
cmc
or
pop
jne
in
jns
fsubr
and
jmp
jmp
dec
popf
and
push
or
xor
cmps
call
dec
push
repz
sti
mov
mov
es
loopne
ins
ror
mov
mov
scas
aas
dec
add
inc
out
sbb
aam
jmp
sti
fdiv
loope
cmc
frndint
xchg
stos
call
mov
inc
xor
fld
(bad)
aad
inc
mov
xchg
jno
fisttp
add
clc
mov
test
psubusw
xor
ja
fcomip
inc
cmp
test
and
data16
push
out
rol
cwde
inc
enter
and
mov
adc
jo
xor
xor
(bad)
out
es
sahf
test
mov
pop
nop
xlat
std
es
adc
cld
shl
or
dec
std
dec
dec
pusha
nop
inc
sbb
enter
push
retf
sbb
add
icebp
inc
dec
fsub
rcl
imul
xor
mov
push
xor
sti
dec
jae
sar
jp
fmul
rol
mov
sub
jnp
mov
scas
imul
ins
les
ins
rol
jae
fnstcw
xor
fstp
out
movs
lds
inc
adc
sub
and
sub
and
dec
pop
daa
add
hlt
gs
inc
lds
inc
cmp
outs
jmp
jge
das
cld
(bad)
in
out
push
and
and
movs
adc
jne
(bad)
data16
pop
int3
xlat
aas
aad
push
dec
cmp
jmp
popf
fistp
xlat
(bad)
int
stos
push
fcomp
push
fcom
adc
jns
out
jecxz
jg
mov
lods
fdivr
mov
jne
mov
(bad)
popf
inc
inc
or
fmul
call
xchg
push
outs
inc
icebp
mov
test
jnp
hlt
dec
or
out
add
test
jne
jp
mov
out
pop
idiv
in
push
sbb
fisub
adc
call
aad
pop
mov
jo
adc
retf
xchg
inc
mov
push
xor
mov
mov
pop
mov
jns
sbb
lahf
lock
jmp
jno
(bad)
jle
std
imul
call
in
pushf
int3
or
mov
or
sbb
arpl
and
pop
pop
inc
into
or
adc
shl
adc
cmp
sbb
loop
mov
cmc
cmp
pop
nop
mov
push
xchg
push
push
add
clc
(bad)
in
jns
cli
push
push
retf
push
ret
push
ret
imul
mov
call
sub
inc
inc
adc
fstp
push
jle
pop
stc
cmp
out
lods
bound
sbb
mov
leave
adc
cmc
dec
mov
and
es
arpl
shl
or
sar
mov
mov
lods
xor
xchg
jecxz
add
pop
popf
addr16
pop
xlat
pusha
ss
ins
ja
sbb
mov
pop
push
hlt
adc
mov
mov
inc
dec
mov
nop
ret
pop
cld
xchg
test
pop
lahf
pop
es
mov
xor
scas
mov
sbb
pop
stc
aad
imul
dec
(bad)
shl
inc
adc
dec
dec
sbb
adc
imul
mov
pop
ret
ins
in
out
in
inc
movs
adc
pop
imul
push
add
mov
ja
pop
in
or
push
outs
aam
fwait
icebp
fist
(bad)
dec
mov
push
gs
sub
movs
scas
sbb
mov
xor
push
sti
scas
xlat
cld
(bad)
scas
stos
sahf
mov
push
jnp
cs
jg
in
cld
cmc
sbb
mov
pop
arpl
iret
popf
daa
imul
mov
icebp
pop
das
(bad)
das
test
shl
push
ret
mov
(bad)
mov
cmp
inc
inc
(bad)
enter
ja
scas
xor
retf
jnp
repz
inc
sbb
(bad)
mov
jp
push
mov
outs
movs
jo
into
fistp
lock
pusha
in
fwait
call
adc
xor
mov
psubq
add
mov
rol
dec
mov
fsubp
iret
stc
jne
pop
stos
je
into
xchg
jg
iret
outs
out
or
cmp
jo
jne
xor
shl
push
aam
sub
out
in
aaa
repz
fbld
bnd
pop
lock
out
outs
in
cli
std
je
and
bound
ja
rcr
push
pop
fabs
dec
xor
sbb
gs
in
jnp
xor
inc
ins
mov
push
leave
sub
call
cmps
in
jns
pop
sar
inc
not
(bad)
lods
(bad)
cmc
ss
cli
dec
mov
jb
movs
cmps
push
test
pop
sub
mov
jno
xchg
dec
push
add
push
in
sbb
mov
shr
push
xchg
aam
aam
jmp
stos
cmp
jecxz
jne
popf
push
out
push
stos
pop
cmp
mov
pop
push
lahf
in
stos
ins
jle
sub
ja
jg
dec
add
cwde
in
push
xor
cmc
pop
jg
jo
xchg
add
je
(bad)
int3
inc
int3
push
addr16
cli
mov
retf
cmp
(bad)
jb
repnz
ret
jns
not
mov
sub
mov
add
inc
aad
lds
cmps
pop
mov
pop
ins
cmps
sbb
ret
(bad)
ins
leave
lods
int3
jae
js
out
test
pop
sbb
cld
fcos
add
sbb
(bad)
push
call
jmp
in
cs
sub
cmps
out
lods
jg
enter
mov
pop
jmp
jbe
xor
jg
je
add
retf
push
stos
shr
fmul
test
jmp
popf
pop
cmp
(bad)
aam
hlt
lods
push
mov
mov
add
sti
jmp
jmp
inc
nop
jle
enter
ficomp
(bad)
dec
stos
cli
mov
gs
pop
das
inc
cli
aad
aad
fwait
sahf
ficomp
xlat
jl
jae
lods
dec
(bad)
and
jmp
out
in
(bad)
cli
mov
pop
cli
inc
push
add
ret
fidiv
dec
stos
fs
or
icebp
dec
call
repnz
mov
loope
xchg
scas
mov
push
aaa
push
cmps
cdq
pop
lods
out
or
xor
fcmove
call
inc
add
mov
cwde
add
jmp
sub
shl
jge
or
pop
loopne
mov
call
jne
add
popa
arpl
(bad)
inc
in
ins
and
cmp
xlat
jle
push
dec
jl
jmp
(bad)
mov
loope
or
pop
inc
loopne
mov
mov
cmp
data16
ss
jmp
(bad)
cwde
push
lods
outs
arpl
cmps
loope
cld
loope
inc
test
mov
jno
scas
lods
ins
outs
mov
jae
mov
cmp
xchg
mov
xchg
sar
ret
push
sbb
aaa
ins
sahf
jmp
sar
xlat
lahf
push
mov
xchg
in
cmp
sbb
xchg
jl
push
fild
in
cmps
mov
fwait
sbb
xchg
jnp
mov
(bad)
nop
inc
in
ror
dec
fdiv
test
xchg
loopne
sub
mov
icebp
mov
sbb
xchg
push
mov
sbb
fisttp
imul
sbb
loopne
dec
jmp
xchg
xor
and
cmp
inc
jmp
cmp
mov
loope
mov
push
out
js
imul
cmc
pop
xchg
dec
adc
or
mov
popa
push
fistp
enter
jge
lahf
jo
scas
push
or
pop
push
fadd
das
sbb
push
test
(bad)
push
stc
cmps
or
into
out
mov
js
(bad)
jbe
fdiv
jge
shl
cmp
(bad)
inc
inc
fdiv
cld
loopne
js
and
inc
mov
pop
test
js
es
pop
xor
outs
or
mov
cmp
dec
mov
pop
mov
lahf
inc
(bad)
add
lahf
add
ret
fnstenv
dec
and
jne
mov
ds
out
and
lods
push
out
inc
scas
out
push
jbe
fild
add
xchg
mov
jo
mov
jnp
out
sub
jns
pushf
adc
shr
and
dec
mov
cld
sub
test
or
sub
jb
or
adc
mov
push
bound
xor
mov
nop
sub
xchg
sub
ss
sbb
mov
int
or
mov
aad
(bad)
inc
or
fldcw
inc
adc
sub
add
dec
sub
dec
bound
cwde
push
les
in
dec
inc
jne
pusha
cdq
dec
adc
sub
dec
adc
dec
dec
and
xor
dec
daa
test
or
sahf
adc
inc
push
movs
cdq
and
lock
xchg
dec
cmp
mov
cmp
add
cmp
push
push
mov
push
push
add
adc
xchg
adc
add
or
sub
sbb
adc
mov
mov
mov
add
push
add
or
shl
add
mov
pushf
stos
jmp
fldl2e
dec
jg
lods
arpl
sub
jnp
cmp
xchg
push
outs
cmc
pop
inc
xchg
push
push
dec
push
fcmovu
mov
push
out
xor
cmc
or
(bad)
jl
inc
out
pop
movs
xchg
fwait
lahf
mov
dec
ja
xchg
mov
pop
hlt
adc
mov
push
in
mov
mov
(bad)
movs
pop
jg
int3
mov
ins
mov
push
ja
jmp
fisubr
jne
cld
add
inc
sahf
cld
aaa
lea
setno
pop
hlt
mul
cmps
xchg
jne
in
aam
call
sub
dec
cmp
xor
stc
xor
push
mov
and
jne
mov
js
add
jo
add
adc
add
mov
inc
adc
mov
sub
test
jnp
sub
enter
aas
mov
mov
cmc
(bad)
mov
(bad)
cmc
sar
inc
cli
mov
gs
call
add
jbe
hlt
mov
sbb
mov
nop
add
sbb
mov
es
or
ret
data16
adc
adc
mov
inc
push
add
inc
dec
xor
and
inc
dec
pop
xor
push
leave
and
or
xchg
sahf
push
ds
and
inc
je
in
sub
xchg
sub
cdq
add
std
and
mov
jle
psllq
mov
sub
icebp
mov
sbb
(bad)
jno
stos
div
mov
test
jp
aam
stos
mov
in
or
sbb
jnp
add
iret
mov
movs
jl
and
mov
inc
or
and
dec
dec
retf
shl
cwde
xchg
inc
xor
test
(bad)
mov
loopne
mov
fisttp
push
outs
rol
popf
push
popf
lods
clc
cmp
jg
cli
or
and
mov
inc
push
test
jno
xchg
mov
jo
dec
(bad)
pop
cli
mov
dec
imul
cmps
cwde
out
and
inc
nop
pop
inc
aad
cmc
imul
in
pop
lods
outs
sbb
in
ficomp
cld
adc
dec
retf
repz
cmp
push
push
shl
push
add
dec
hlt
mov
inc
mov
shr
xor
jg
call
lahf
shl
pop
sbb
xor
add
(bad)
mov
xchg
aaa
push
adc
sbb
cli
mov
and
cmp
scas
inc
mov
test
stos
out
mov
xlat
or
mov
(bad)
jmp
lahf
dec
(bad)
(bad)
add
repz
cwde
sbb
fs
stos
out
test
dec
jg
xchg
pop
stos
ja
out
scas
cld
cmc
dec
mov
adc
adc
and
adc
movs
movs
xor
mov
xor
sub
inc
cmps
or
rol
inc
jmp
cmps
pop
loopne
cli
cwde
test
cli
push
mov
mov
push
mov
lods
std
out
jecxz
loope
cld
cmc
xchg
sbb
sub
fisub
scas
inc
inc
outs
out
push
cld
(bad)
hlt
enter
ja
inc
call
ja
mov
aam
hlt
pop
shl
sub
and
and
xchg
test
inc
jecxz
or
lds
cld
and
xchg
mov
mov
xchg
add
lods
mov
mov
gs
cmp
aad
scas
loope
xchg
dec
cmp
fucomip
das
and
mov
jbe
mov
inc
ds
jp
sub
pop
clc
mov
add
clc
xchg
pop
inc
mov
mov
xchg
sub
test
js
fisttp
(bad)
js
mov
stc
add
add
out
sub
sbb
adc
aad
stos
pusha
jne
dec
lods
or
scas
inc
int3
inc
mov
jae
xchg
fiadd
cmp
cs
push
inc
xlat
(bad)
stos
cmp
pusha
cmp
ror
mov
retf
add
cmps
add
inc
push
enter
xchg
sub
leave
add
jmp
outs
(bad)
mov
inc
mov
push
sub
push
cmps
(bad)
jle
fcom
mov
icebp
pop
call
lods
push
mov
test
sbb
cdq
mov
sub
jg
inc
clc
adc
iret
shl
or
mov
inc
iret
lods
call
cmps
dec
adc
or
dec
dec
(bad)
dec
jmp
pop
xor
je
pop
mov
inc
sbb
sar
mov
jge
das
cmp
xor
and
xlat
jbe
daa
push
mov
loopne
jg
jp
mov
fld
add
mov
inc
cmps
jne
scas
xchg
std
clc
(bad)
push
clc
(bad)
int
xlat
lods
ja
daa
jmp
jmp
imul
jle
(bad)
jg
mov
or
cld
cmps
loop
jecxz
lds
or
stc
sbb
hlt
repnz
cmp
sub
inc
push
into
retf
mov
or
mov
popf
aas
xchg
mov
ss
lock
cdq
hlt
ffree
mov
dec
ficomp
or
jl
push
add
imul
mov
pop
inc
jecxz
aad
add
pop
in
outs
test
sub
js
adc
xlat
cpuid
idiv
repz
inc
dec
hlt
xor
jmp
adc
cdq
call
cwde
out
cli
das
push
aas
call
inc
pushf
pushf
daa
and
sub
std
pop
jmp
outs
dec
mov
jge
inc
out
jmp
and
mov
jne
popa
shr
jbe
xor
xor
aas
aaa
inc
es
dec
stos
(bad)
xchg
xor
test
mov
mov
aam
mov
mov
dec
outs
xchg
scas
inc
jmp
mov
dec
movs
gs
test
adc
mov
or
imul
push
or
jnp
aas
inc
and
stos
mov
xlat
cld
stos
(bad)
add
dec
ss
adc
xor
pop
push
mov
std
(bad)
stos
mov
jae
(bad)
cmp
mov
pop
jg
rol
fucomip
(bad)
cli
fsubr
jg
dec
out
add
(bad)
mov
inc
sar
movs
inc
xchg
pusha
cmp
jo
cmp
lds
pop
loope
and
push
xchg
mov
push
xor
fcomp
xor
jle
aas
repnz
mov
cmp
xchg
or
mov
dec
add
jns
xor
cmp
fisttp
fimul
cmp
xchg
sar
xor
inc
in
sub
stos
(bad)
cmc
sub
popa
int3
out
inc
pop
pop
adc
scas
xchg
in
ins
ds
jge
adc
pop
fwait
imul
in
adc
mov
cdq
mov
rcr
in
jg
sub
jle
pop
rcr
(bad)
sbb
dec
pop
inc
mov
aam
or
cmps
shl
xchg
sahf
or
(bad)
inc
das
(bad)
in
ret
enter
pop
inc
sub
div
out
imul
inc
push
add
ret
sub
add
imul
cmps
stos
jmp
data16
in
dec
and
cmp
mov
rcl
mov
jg
mov
scas
lods
cmp
scas
neg
dec
popa
adc
(bad)
inc
and
in
jb
dec
dec
sbb
ss
mov
fisttp
fidivr
stc
imul
dec
sbb
fwait
jmp
fwait
clc
test
(bad)
jo
test
cmp
popf
int
shr
push
lds
in
arpl
dec
test
stos
hlt
pop
and
cmp
cdq
xor
push
in
mov
xchg
lahf
xor
mov
rol
or
out
enter
and
rcr
pop
adc
ins
cld
jnp
loope
mov
daa
mov
lds
lods
mov
out
push
xchg
add
xchg
std
push
sub
lahf
ins
ds
pop
xchg
cld
leave
ds
sbb
cli
cmps
sub
pop
xlat
sti
mov
or
mov
mov
jb
gs
out
cmp
add
dec
stos
std
je
push
jbe
cmps
mov
inc
dec
fdiv
xchg
pop
or
cmp
mov
fwait
sub
and
inc
enter
dec
icebp
gs
mov
sbb
nop
shr
xor
cwde
out
add
in
xor
out
sbb
ror
arpl
push
push
lods
scas
sbb
add
lods
stos
mov
mov
jmp
imul
push
add
lock
lods
aam
scas
jge
into
js
mov
lods
jbe
sub
xlat
arpl
dec
push
data16
inc
mov
(bad)
push
push
leave
(bad)
lock
mov
ja
nop
jns
mov
and
pop
and
out
xchg
in
retf
js
imul
pop
and
or
mov
dec
push
movs
xchg
pop
movs
jl
adc
mov
add
pop
imul
mov
ja
push
push
sbb
dec
xchg
fs
mov
dec
jne
push
and
jne
pop
xor
jge
stc
adc
pop
and
xor
jge
pop
mov
test
pusha
jae
xchg
cli
push
and
and
adc
mov
sbb
retf
cmc
popa
loopne
mov
jb
pop
pop
jmp
jbe
jo
xor
mov
add
test
mov
pusha
div
imul
mov
mov
cld
cmp
mov
loopne
adc
in
mov
nop
cmp
fild
sbb
sbb
(bad)
out
push
(bad)
xor
fcmovnb
and
push
nop
push
dec
jmp
mov
dec
data16
in
mov
stc
lahf
movs
adc
rol
push
push
ins
test
pop
push
imul
aam
fisub
test
popf
mov
mov
dec
pop
pop
jp
sbb
mov
xlat
xor
sbb
adc
sbb
popf
into
adc
adc
xchg
cmps
mov
stos
jbe
add
mov
idiv
loope
sub
stos
pop
les
mov
and
mov
mov
mov
mov
push
fild
xchg
pop
xchg
ror
fwait
push
(bad)
jle
dec
aam
lods
imul
xchg
inc
leave
dec
pop
mov
in
ja
fiadd
add
popa
ja
mov
pop
imul
in
xchg
outs
int3
and
ja
clc
and
push
retf
pop
je
jo
aam
adc
xor
push
add
adc
loope
mov
mov
jns
aam
and
cmps
xor
push
loop
aas
js
dec
sbb
cdq
daa
push
pushfw
rcl
add
inc
xor
pop
dec
sbb
in
shr
jne
push
ret
mov
and
rol
lods
dec
stos
inc
and
xor
test
or
stos
ins
bound
cmps
adc
mov
or
push
dec
or
les
aam
inc
mov
ror
xor
hlt
inc
and
adc
cmp
and
xchg
cmp
and
dec
adc
and
pop
iret
push
and
inc
fs
mov
dec
lea
inc
sub
xchg
daa
or
or
dec
adc
movs
push
and
gs
cmps
out
add
or
sub
outs
dec
fimul
sub
inc
xchg
mov
imul
ret
add
or
jo
ret
or
or
xlat
ins
adc
popa
adc
sahf
mov
or
nop
aad
repnz
push
push
jb
sub
add
mov
xchg
fwait
dec
dec
or
xor
fs
cmps
dec
stos
push
push
inc
mov
push
or
push
fsub
dec
call
loope
cmps
dec
pop
pusha
pop
push
dec
xchg
dec
pop
cmp
xchg
movs
adc
call
push
dec
dec
retf
push
movs
test
gs
dec
call
dec
out
data16
repnz
imul
test
shl
jg
mov
leave
mov
and
add
es
cmps
inc
aam
rol
push
sar
add
pop
pop
std
sub
aad
sar
pop
outs
cld
push
fldenv
sbb
mov
push
shl
std
dec
jmp
pop
inc
sbb
inc
cmp
add
cmp
lods
mov
fild
or
movs
ror
adc
add
fs
xlat
jge
jg
inc
push
jns
in
(bad)
popa
out
jecxz
inc
fcmovnu
fwait
inc
pop
dec
xchg
cwde
fimul
pop
clc
mov
stos
push
inc
iret
mov
add
inc
jg
daa
dec
call
sub
xchg
jg
(bad)
imul
imul
xchg
push
fdiv
cdq
int
add
cmps
dec
xor
cmc
inc
icebp
jnp
push
jmp
jns
(bad)
cmps
jg
jno
inc
cli
adc
fs
cmp
lock
mov
pop
test
imul
inc
std
dec
call
pusha
in
clc
and
lods
inc
mov
ss
out
outs
ds
(bad)
xchg
imul
loope
xor
mov
jnp
(bad)
mov
adc
adc
fcom
enter
sub
cdq
and
xchg
movs
dec
dec
sub
or
push
repnz
dec
and
in
mov
test
daa
dec
sub
imul
dec
sub
inc
mov
das
lods
mov
std
loope
ins
scas
sti
ins
pop
jg
(bad)
jmp
pop
lds
int3
jle
(bad)
adc
es
pop
xor
xchg
retf
xchg
push
std
push
hlt
inc
mov
mov
add
jg
scas
mov
pop
jmp
lods
cli
jne
mov
mov
and
xor
and
and
jns
dec
dec
cdq
cmp
movs
daa
dec
popf
and
dec
xchg
nop
into
push
call
adc
outs
dec
je
pop
inc
dec
push
mov
(bad)
mov
add
(bad)
es
data16
mov
js
xor
das
cli
loop
mov
mov
jo
(bad)
sub
ins
push
xor
(bad)
mov
jbe
addr16
(bad)
aas
mov
mov
aam
xchg
cmc
jg
mov
pop
std
sbb
jg
aaa
push
jg
lahf
(bad)
adc
xor
pop
pop
xor
mov
int
sub
mov
inc
push
lods
jle
cmp
jns
mov
cld
call
call
(bad)
jge
fcomi
(bad)
repnz
nop
(bad)
push
jmp
push
into
and
inc
inc
popf
cmp
aad
dec
cmp
sahf
jecxz
mov
sbb
cdq
adc
mov
imul
push
push
in
out
mov
(bad)
cmp
mov
stos
push
ret
adc
pop
push
shl
out
lods
mov
scas
inc
mov
dec
int3
pop
in
(bad)
mov
hlt
sahf
hlt
xchg
xlat
dec
adc
(bad)
xlat
inc
push
cmp
inc
jmp
xor
inc
repz
xchg
push
and
cs
es
add
mov
ficom
std
call
aaa
inc
sbb
imul
aaa
inc
cmp
rcr
aas
out
cmp
aas
out
inc
dec
inc
or
sti
mov
add
xchg
ja
jns
adc
ja
or
and
and
dec
and
sahf
push
push
movs
and
enter
lahf
pop
jae
sub
sbb
lods
ja
jg
sti
or
jmp
xchg
xor
in
pop
fistp
cmp
aas
jp
clc
inc
out
stos
popf
das
test
xchg
inc
xchg
xchg
fxch
cld
jmp
xlat
stos
inc
and
mov
fsubr
sub
into
mov
test
inc
iret
out
loope
scas
jge
loopne
fimul
cmp
clc
(bad)
cld
mov
ror
dec
sub
push
xlat
(bad)
ficomp
out
(bad)
add
mov
xor
dec
mov
das
cld
call
sub
sub
and
xchg
outs
stos
addr16
lods
retf
mov
mov
jg
dec
dec
cld
div
push
pop
cmc
mov
sbb
push
jo
push
in
out
std
shl
mov
shr
jmp
inc
mov
mov
inc
iret
bound
dec
push
in
sbb
outs
xchg
jp
(bad)
sbb
cli
pop
aas
xchg
cld
test
cmc
iret
test
popf
cmp
imul
jmp
std
es
sbb
xchg
xchg
stos
jecxz
xor
pop
outs
sub
jmp
dec
sub
popf
and
sub
sub
adc
and
push
(bad)
mov
inc
(bad)
add
add
pop
mov
mov
or
xor
jp
adc
ins
lods
sbb
aas
fwait
inc
add
das
repz
leave
cmp
test
jmp
jne
mov
aas
jge
cld
out
rcr
movs
jmp
xchg
dec
dec
rcr
fcomi
pop
not
mov
pop
gs
rol
mov
int
(bad)
adc
adc
cs
mov
(bad)
mov
dec
adc
add
inc
rol
(bad)
out
cli
iret
clc
mov
mov
std
mov
pop
fwait
shl
pop
pop
jnp
sbb
inc
jmp
push
aam
mov
imul
cld
in
mov
push
mov
imul
aas
out
cmc
mov
into
cmp
mov
cmp
mov
ds
push
(bad)
jmp
fwait
mov
mov
sbb
push
mov
sbb
sub
and
in
push
popf
dec
push
imul
fild
pop
inc
push
pop
push
out
xlat
inc
or
mov
mov
in
hlt
pop
aas
jle
stos
shr
push
mov
mov
mov
(bad)
in
sti
cmc
pop
fbld
mov
xchg
popf
pop
jmp
sub
(bad)
lock
inc
fdiv
ins
jns
xchg
xchg
or
test
hlt
jg
jns
inc
push
xchg
cli
jp
mov
jo
xchg
inc
test
push
lea
jne
je
lods
xor
add
ja
(bad)
inc
push
jb
pop
ds
xlat
shl
xchg
or
sub
and
rcr
lahf
(bad)
andps
data16
sti
adc
(bad)
pusha
je
(bad)
fstp
xor
retf
or
stos
cmp
bound
arpl
and
jb
pop
jle
push
mov
mov
or
scas
inc
jns
mov
inc
mov
add
scas
adc
mov
jmp
mov
jmp
xchg
inc
pop
dec
int3
jmp
popf
sahf
fstp
mov
mov
and
pushf
sub
sbb
je
hlt
fwait
pop
mov
inc
test
cmp
jg
jmp
sti
and
sbb
inc
arpl
fs
xor
lahf
cli
dec
and
arpl
jnp
sub
aaa
cli
mov
pop
inc
nop
xchg
sbb
sub
movs
rcl
lea
mov
ja
daa
inc
cli
icebp
xchg
test
imul
in
cs
cmc
popf
mov
in
out
in
push
stc
jmp
shl
mov
std
xlat
sub
lea
cmp
out
pop
pop
jmp
mov
push
ror
pop
sbb
and
mov
jbe
movs
mov
push
pusha
cmps
ins
nop
push
jmp
push
pop
stc
adc
inc
fwait
jmp
fwait
clc
test
jg
test
rol
push
jle
pop
push
cli
xchg
loop
pop
cmps
pop
das
scas
cwde
xchg
sub
mov
sub
mov
rol
sar
ins
sbb
cmp
pusha
or
(bad)
push
loope
and
lahf
arpl
jns
add
push
and
or
gs
les
popa
cmc
or
pop
sub
in
repnz
scas
(bad)
push
movs
push
je
cmc
jp
data16
mov
sahf
inc
aam
nop
push
mov
aaa
jmp
jp
aas
mov
mov
inc
stos
pop
xchg
push
mov
sub
dec
mov
imul
cs
add
xchg
dec
out
mov
xor
jmp
call
inc
jmp
outs
stos
inc
xchg
adc
or
out
sbb
ds
inc
cmp
jae
in
push
mov
lahf
dec
jmp
fadd
jp
lahf
lock
cli
xor
ss
arpl
pop
inc
sub
mov
gs
sbb
(bad)
adc
in
mov
frstor
imul
mov
retf
add
sbb
in
icebp
stos
dec
(bad)
adc
std
fs
cmc
call
repz
ficomp
cmp
hlt
cmp
psubb
mov
(bad)
shl
nop
jl
mov
(bad)
or
(bad)
xchg
aad
test
or
lea
std
sbb
out
stos
(bad)
sub
sub
(bad)
jae
outs
xor
cld
aad
mov
and
cmp
push
(bad)
cmovp
pop
lock
inc
je
cli
into
fcomp
pop
fld
xchg
out
jge
and
in
adc
or
adc
fild
shr
pushf
jnp
outs
std
xlat
lock
fs
movs
inc
pop
cmp
xchg
in
shl
out
repz
call
sub
dec
outs
(bad)
jo
in
fidivr
or
push
mov
loopne
repz
lahf
mov
(bad)
mov
iret
movs
cmp
in
mul
dec
mov
inc
in
mov
mov
push
(bad)
mov
fisttp
adc
int
and
stos
pushf
lea
outs
sar
int
ja
int3
pusha
cmp
or
sub
xlat
or
inc
stos
sbb
adc
icebp
push
mov
pop
push
loope
call
iret
call
pop
add
sub
cld
xchg
xlat
imul
push
xchg
pop
mov
jecxz
and
dec
(bad)
pop
inc
mov
shl
add
ins
ins
(bad)
out
ja
push
push
lahf
repz
scas
sbb
fadd
xlat
dec
repnz
and
cmp
cmps
pop
mov
fldenv
xor
sahf
mov
cmps
ins
mov
(bad)
adc
ins
fwait
cwde
aaa
aaa
(bad)
loope
pusha
(bad)
retf
xchg
(bad)
popf
aad
dec
add
int3
dec
repnz
(bad)
call
retf
sbb
add
cwde
loope
mov
lock
xchg
mov
push
fld
or
xchg
adc
daa
xor
pop
jo
or
inc
repz
cwde
mov
(bad)
mov
mov
ds
loope
push
dec
sub
test
int3
push
nop
pop
test
adc
push
aam
gs
dec
fist
scas
dec
repnz
pop
jnp
ret
and
fwait
push
mov
clc
test
pop
imul
gs
test
push
add
in
sbb
daa
push
(bad)
mov
cmp
mov
dec
jl
jp
xchg
xchg
adc
scas
dec
and
sub
push
adc
sub
popa
das
dec
cmp
sub
mov
popa
mov
push
xchg
inc
sbb
pop
dec
fist
ss
xchg
xchg
and
enter
inc
shr
stc
push
cs
and
jns
push
push
mov
repnz
dec
ss
sbb
sub
ss
inc
ins
and
add
push
ins
inc
stos
xor
daa
test
arpl
(bad)
push
inc
adc
mov
mov
push
mov
fwait
push
and
adc
add
or
dec
push
dec
test
inc
adc
mov
and
push
fiadd
dec
mov
push
adc
mov
cmps
xchg
lods
sbb
add
xor
sar
test
xchg
adc
sub
dec
loope
movs
dec
push
adc
xor
push
call
loope
and
xchg
mov
movs
movs
and
dec
sub
inc
retf
and
mov
dec
sub
sub
movs
shl
sub
cdq
and
xchg
sbb
sub
jnp
movs
dec
sub
adc
sar
out
ins
xor
and
add
inc
(bad)
mov
sbb
cmps
adc
test
loopne
sbb
inc
push
adc
in
pop
and
hlt
xor
mov
sbb
fnstcw
mov
clc
fwait
aas
sar
jmp
pop
pop
scas
jle
mov
push
fcomip
std
cmc
pop
js
jne
xor
add
movs
xchg
test
loopne
mov
adc
cdq
stos
jge
movs
loop
ss
jne
rcr
mov
pop
cmp
int3
aas
ins
add
mov
add
arpl
cld
push
retf
mov
ja
das
inc
and
pop
push
mov
sub
fwait
cmp
add
outs
inc
shl
jmp
xchg
cmc
ja
loop
sub
mov
mov
stc
lahf
pop
cli
cmps
pop
mov
in
outs
stc
xchg
in
push
fcmovnbe
jae
xor
in
add
fsubrp
cld
xchg
sahf
and
les
dec
in
add
out
pop
inc
sar
add
pop
psubd
ret
inc
outs
pop
fist
call
xor
or
movs
xor
dec
dec
pop
ss
pop
retf
ins
popa
repnz
push
push
xchg
int
cmp
pop
sti
sti
adc
xchg
push
inc
dec
enter
pop
std
push
sbb
outs
and
sar
dec
dec
push
loope
dec
inc
mov
push
xchg
lock
dec
and
call
and
ror
and
or
inc
jo
inc
shr
dec
retf
mov
popa
(bad)
adc
dec
ror
cmovl
mov
lock
int3
(bad)
cld
repnz
out
or
(bad)
mov
fst
jae
mov
jno
pop
jbe
out
outs
cld
pop
mov
jle
addr16
leave
mov
fbld
mov
inc
xor
cmp
scas
mov
xor
enter
enter
and
sub
pusha
nop
dec
dec
test
je
dec
and
push
loope
test
xchg
nop
enter
xchg
neg
pop
mov
or
adc
pop
stos
test
adc
pop
xlat
push
xchg
xor
mov
jmp
stc
jg
push
(bad)
(bad)
push
jmp
inc
xchg
pop
neg
sar
int3
inc
leave
xlat
hlt
(bad)
scas
xlat
sahf
or
sbb
lock
fdivr
fucomp
inc
xor
shr
xor
jmp
mov
mov
pop
mov
push
and
repnz
test
pop
inc
lock
aas
int
add
repz
je
stos
fidivr
enter
jmp
ja
jo
pop
repnz
ja
pop
lds
xchg
fst
repz
mov
xchg
jbe
mov
test
test
and
popa
and
ret
jbe
movs
fsubr
btc
test
add
lahf
sub
pop
mov
xlat
jnp
mov
adc
test
daa
test
imul
(bad)
xlat
clc
dec
cli
or
(bad)
scas
je
xchg
(bad)
push
stos
shl
push
pop
cmp
std
cmps
inc
fist
addr16
inc
ins
imul
or
xlat
mov
fiadd
inc
test
idiv
mov
lds
inc
adc
add
push
push
xor
(bad)
fiadd
dec
pop
addr16
retf
popa
xor
mov
ret
fwait
xor
push
xchg
repz
(bad)
mov
aas
(bad)
mov
cmp
and
test
add
aam
sbb
adc
and
movs
cmp
dec
and
movs
loopne
loope
xchg
call
dec
mov
push
ret
hlt
ins
addr16
sub
xchg
cmc
pop
push
jmp
push
scas
(bad)
jg
sbb
loopne
jno
lahf
add
addr16
mov
ins
mov
hlt
ins
addr16
jg
not
and
and
push
(bad)
into
mov
mov
add
push
inc
sti
loop
dec
sbb
dec
sub
push
xchg
test
and
shl
xor
ret
mov
inc
retf
push
cmp
and
jp
clc
(bad)
mov
cli
(bad)
std
test
mov
sbb
ss
mov
jecxz
pop
fdivr
scas
pop
shl
jmp
adc
ins
cvttps2pi
jae
adc
jp
and
adc
cli
fistp
mov
retfw
dec
out
inc
std
mov
pop
scas
shrd
iret
jmp
push
sti
int3
adc
xchg
jge
mov
mov
push
ins
and
stos
inc
shr
pop
mov
cwde
fmul
lods
in
pmaddwd
stc
loope
call
adc
jne
xchg
add
aaa
jl
in
jne
imul
(bad)
pop
cld
jmp
inc
lods
scas
std
and
neg
bound
dec
clc
cmps
ins
vmwrite
bound
adc
nop
out
hlt
out
cmps
dec
pop
inc
add
mov
js
(bad)
push
jmp
cmp
(bad)
mov
jmp
sar
mov
xchg
fdiv
mov
popf
and
shr
hlt
mov
or
jp
inc
jg
js
dec
mov
jmp
sub
mov
lock
lods
popa
jne
lock
arpl
dec
mov
jmp
sbb
sbb
ins
ret
stc
aas
mov
mov
lods
lds
cmp
or
stos
cs
xor
and
in
add
push
push
call
jge
pop
xor
push
int3
pop
or
add
jle
in
and
aam
xchg
shld
add
jge
jg
pop
cld
mov
aam
stos
pop
jmp
sar
xchg
lds
je
inc
cwde
jo
mov
add
(bad)
mov
(bad)
or
cmp
stos
dec
cdq
nop
(bad)
and
scas
mov
jae
lahf
mov
es
mov
mov
fistp
jno
pop
pop
sbb
add
xlat
adc
jle
out
jmp
ja
aas
(bad)
retf
sbb
retf
mov
mov
push
dec
out
repnz
dec
mov
(bad)
aam
mov
nop
aaa
shl
stc
int3
(bad)
pop
dec
push
retf
shl
stos
push
mov
mov
push
sub
cdq
mov
cmp
std
pop
pmulhw
adc
dec
aaa
popa
int3
sub
add
mov
xchg
fsubr
std
push
daa
cmps
aas
aad
jns
mov
scas
aad
pop
mov
sar
lods
jo
sahf
push
gs
jg
and
ds
out
lahf
aad
jmp
out
test
jmp
nop
pop
inc
push
call
push
loopne
bound
xchg
mov
test
jle
(bad)
mov
xlat
lahf
jmp
outs
dec
add
scas
(bad)
hlt
imul
in
push
ret
ret
shl
rcl
sbb
jbe
add
jecxz
dec
pop
fisubr
retf
neg
fsin
aas
icebp
stos
mov
js
add
push
sbb
pop
aaa
push
loope
jg
movs
cmps
lods
ret
mov
sbb
mov
lahf
aad
lods
cmp
inc
inc
aad
ret
dec
add
in
pop
adc
or
sub
dec
ins
pop
out
and
inc
(bad)
jg
jle
cmps
xchg
inc
call
jo
and
pop
dec
fsub
mov
dec
xchg
mov
sub
repz
xchg
sbb
adc
call
cmovno
mov
mov
push
lods
cmp
cli
stos
daa
aaa
cmps
fs
mov
popa
sub
movs
xchg
xor
cmp
seta
ficomp
pop
xlat
sub
out
sbb
into
add
xor
jno
(bad)
jb
pop
sar
fidiv
fcomi
ja
mov
push
ds
shl
add
mov
mov
push
pop
sub
repnz
sub
cmc
or
pop
jmp
jae
rcl
fild
mov
push
js
in
adc
jp
(bad)
out
sub
sbb
fwait
jmp
push
sub
jbe
adc
ss
mov
popa
mov
ins
sar
cmp
ds
pop
and
repnz
mov
pop
cdq
retf
sbb
xlat
sbb
push
cli
push
jle
das
xor
adc
push
sti
jmp
sub
lea
sti
inc
dec
mov
iret
frstor
push
shl
or
mov
push
out
aad
jb
pop
mov
fs
fld
ret
mov
mov
sub
ja
jmp
jno
adc
add
add
shr
jae
(bad)
push
sbb
inc
cmp
jg
cmps
inc
(bad)
cmp
shl
and
pushf
and
ins
adc
pusha
popf
sbb
popf
jae
test
cmp
aaa
inc
inc
pop
pop
jg
mov
pop
pop
jmp
xlat
mov
cld
mov
mov
ficomp
sub
arpl
cmp
mov
inc
mov
jmp
(bad)
mov
push
(bad)
scas
cmc
pop
adc
loop
mov
lock
sahf
rcr
fisttp
ret
test
(bad)
je
mov
cmps
pop
sub
cmc
adc
stc
sub
mov
sub
pop
mov
(bad)
(bad)
out
lock
ret
cmp
cwde
loope
rol
sub
mov
cdq
loopne
pop
in
fild
xchg
sub
jg
sub
pop
cli
xchg
push
or
push
(bad)
xchg
loop
or
(bad)
mov
cmp
mov
jnp
cmc
add
jbe
add
push
pop
jg
outs
adc
(bad)
mov
daa
(bad)
add
cmc
aas
icebp
outs
aam
out
and
mov
call
fucompp
inc
pop
out
scas
pop
sub
cmc
mov
test
(bad)
cmp
repz
pushf
imul
(bad)
mov
cmp
mov
and
jmp
ds
out
xchg
dec
cli
loop
sbb
jnp
jbe
jge
pop
loopne
jb
cmp
lods
lds
push
inc
sar
mov
pop
push
mov
push
inc
cdq
nop
fcomp
ret
retf
or
inc
lock
xor
mov
(bad)
je
cmps
or
scas
imul
mov
sub
sbb
ficomp
cmp
imul
jecxz
xor
ret
cmp
int
mov
add
pop
(bad)
cli
in
call
sub
xchg
cmp
push
data16
sti
mov
(bad)
es
in
sbb
repz
mov
arpl
pop
(bad)
cld
ja
mov
pushf
adc
push
jg
and
sti
sub
mov
jge
loopne
mov
dec
hlt
fist
loope
mov
xchg
xor
dec
dec
fisub
lods
iret
add
aad
ins
push
xlat
inc
cld
or
cld
or
mov
xchg
enter
fcomp
fild
cmp
lods
xlat
pop
loopne
sub
sar
loop
js
test
jbe
sub
ja
jo
lahf
mov
nop
fdiv
inc
jbe
cli
dec
cmp
xlat
mov
xor
jbe
and
sbb
loop
adc
mov
inc
xor
sub
adc
pop
push
loop
mov
adc
cmps
pop
sahf
pop
sbb
xchg
dec
jno
dec
cmp
dec
pop
mov
jne
addr16
fdivr
add
cld
int3
jno
pop
pop
or
(bad)
not
icebp
enter
inc
fdiv
mov
mov
(bad)
xchg
add
imul
dec
sub
pop
sub
cmc
punpckhdq
hlt
sub
mov
cmps
mov
xchg
add
loop
or
adc
imul
cmps
jnp
shl
dec
cmps
push
mov
sub
mov
or
pop
stos
ret
sbb
or
xchg
mov
daa
hlt
dec
rcr
ror
retf
mov
inc
adc
pop
xor
mov
ret
dec
js
sub
ins
sub
mov
push
rcr
dec
mov
hlt
adc
push
js
ret
or
movs
xchg
adc
loope
push
mov
movs
(bad)
adc
adc
test
sbb
and
push
scas
movs
pushf
push
lods
jp
ins
test
rol
(bad)
or
in
lods
jp
jp
jno
call
jge
icebp
mov
mov
scas
dec
and
cmp
dec
jo
cmps
sbb
push
mov
xor
cdq
inc
or
jne
hlt
xchg
hlt
xchg
loope
dec
mov
dec
mov
adc
dec
movs
pop
adc
inc
test
movs
push
mov
scas
xor
xchg
movs
xchg
dec
pop
and
sahf
gs
and
dec
dec
sbb
dec
dec
movs
cdq
and
mov
ror
movs
in
dec
cmps
dec
dec
out
push
add
sbb
xchg
test
dec
adc
lahf
je
mov
cmp
arpl
mov
hlt
xchg
xchg
jge
jmp
pop
cmp
pop
repz
sub
dec
aad
mov
mov
jg
and
jg
pop
dec
sti
pop
push
mov
inc
cs
repz
jae
add
add
xor
mov
ret
fimul
fsub
sbb
mov
xchg
mov
xchg
and
pop
lea
pop
xlat
shl
sub
jle
sub
xchg
dec
outs
push
mov
je
gs
imul
mov
cli
je
lahf
push
cmp
push
dec
xchg
popf
sbb
mov
fbstp
ds
mov
pop
xlat
scas
(bad)
jg
sub
cmps
(bad)
jg
enter
out
lods
inc
loopne
push
in
sub
shr
leave
mov
inc
lahf
hlt
fs
(bad)
mov
push
popa
in
jae
std
loopne
sbb
imul
cli
mov
xchg
loopne
loope
ins
mov
lods
mov
adc
sub
mov
add
pushf
cmp
pushf
movs
int
arpl
add
mov
les
or
xlat
(bad)
jg
int
cld
jmp
mov
pop
in
xor
mov
xor
fwait
inc
mov
xchg
xchg
outs
mov
test
cmp
inc
and
pop
ret
jmp
jmp
movs
inc
mov
mov
mov
(bad)
fisubr
mov
add
adc
add
pop
in
ins
jbe
jecxz
mov
stos
arpl
ja
lds
arpl
mov
jp
push
xor
cs
sahf
std
arpl
sub
iret
sub
cli
sub
sub
pop
mov
cmc
dec
xlat
push
cli
or
mov
fwait
jno
add
out
addr16
inc
add
mov
cli
xchg
sub
xor
loope
or
pushf
cmps
or
and
movs
movs
and
sub
cmps
dec
and
and
cmp
movs
add
and
sub
leave
rol
cwde
pop
mov
pop
das
call
adc
call
push
mov
push
loopne
adc
xor
or
inc
inc
pop
movs
or
shr
call
push
inc
in
idiv
mov
pop
cmp
fdivr
mov
lock
xchg
inc
cmp
xchg
lahf
pop
pop
popa
sub
push
mov
pop
dec
or
fs
cmp
or
pusha
test
dec
fs
cmp
push
jmp
mov
mov
fstp
jbe
inc
into
xchg
dec
dec
xchg
lahf
inc
call
mov
pop
stc
repnz
std
es
jmp
arpl
(bad)
stos
not
leave
or
dec
jmp
test
add
and
xchg
icebp
enter
sub
lods
cmc
ja
stos
mov
sub
sti
cmp
inc
in
pmullw
add
test
adc
add
mov
push
aas
fwait
ja
mov
add
pop
(bad)
mov
xor
std
cmp
loope
xchg
mov
sub
cwde
xchg
jl
sub
sub
ja
scas
std
push
scas
cmps
pop
mov
stos
pop
packuswb
xor
std
jg
lds
mov
lea
cmp
lahf
pop
mov
inc
ret
dec
mov
sub
or
and
popf
jle
push
jp
aas
dec
and
inc
dec
movs
and
movs
fcom
xor
jmp
add
jno
cwde
arpl
lahf
adc
xchg
fisttp
sub
push
push
jmp
sub
fdivr
mov
jae
outs
test
xchg
neg
inc
or
ds
push
xor
mov
inc
out
clc
inc
lods
jo
cmp
pop
outs
es
dec
(bad)
cli
mov
ja
in
push
inc
or
mov
fild
nop
cdq
ins
std
popa
cli
mov
inc
(bad)
sar
inc
loope
xor
mov
dec
mov
push
mov
adc
lods
outs
xchg
aad
hlt
mov
jl
adc
xchg
add
shl
mov
fcomp
loop
(bad)
(bad)
int3
jnp
test
push
sti
mov
(bad)
ret
call
jno
add
scas
lock
dec
cmps
aas
add
adc
pop
(bad)
jmp
iret
sti
sti
aas
xor
xor
adc
and
out
sbb
jle
test
inc
repz
cmps
xchg
nop
call
test
sub
imul
jo
mov
jmp
add
jecxz
jp
fdiv
inc
mov
cs
imul
cvtps2pd
add
scas
ins
(bad)
fnstsw
cli
xchg
jle
shr
add
dec
xchg
pop
scas
stc
(bad)
cli
ins
pop
fild
in
adc
mov
pop
je
aam
push
ds
nop
cmc
add
cmp
call
mov
out
call
das
push
test
xchg
ret
cli
scas
pop
outs
pop
inc
pop
iret
scas
ins
shl
int3
jno
jg
iret
mov
(bad)
xchg
mov
in
inc
les
call
fistp
mov
xchg
sub
cmp
cmps
dec
adc
aaa
pop
(bad)
shl
mov
jmp
and
(bad)
(bad)
in
push
or
pop
push
adc
aam
jno
mov
mov
into
dec
push
outs
scas
inc
cmc
xor
out
inc
inc
push
test
inc
dec
xchg
pop
sub
loop
imul
(bad)
mov
xchg
cmp
or
xlat
cdq
dec
jge
xchg
(bad)
sbb
mul
ds
xor
imul
shl
imul
popa
out
rol
jmp
lods
push
jg
pop
jg
stos
cmc
push
cdq
outs
add
sub
sar
dec
je
adc
imul
ret
mov
or
inc
movs
push
out
push
nop
xchg
fwait
pop
push
sbb
pop
cmp
push
adc
inc
shl
shl
push
jo
(bad)
ss
(bad)
cs
xchg
and
fisub
movs
sbb
(bad)
arpl
imul
add
xchg
je
lods
aad
sub
arpl
jmp
jmp
push
xor
int3
aas
rcl
stc
jecxz
add
mov
mov
repz
sub
mov
push
sub
push
mov
dec
mov
int3
call
sbb
xchg
inc
enter
mov
inc
push
add
jge
inc
cli
iret
outs
jecxz
das
not
push
pop
dec
xchg
cmp
sbb
aad
out
stos
icebp
outs
cld
bound
inc
cli
std
jle
push
call
aas
repnz
(bad)
cmc
movs
xchg
or
and
icebp
inc
sbb
xor
enter
sub
xchg
sub
mov
shr
add
cmp
jae
aad
sbb
sbb
add
in
out
jbe
lods
repnz
xor
fadd
(bad)
jge
xlat
shl
div
cmp
jne
jmp
je
sbb
mov
or
aad
loope
fcomip
pop
inc
nop
push
add
adc
mov
push
loop
mov
inc
push
xlat
inc
movs
jne
pop
test
pop
dec
test
stos
std
dec
int3
jmp
imul
repz
mov
les
mov
mov
dec
mov
cmp
pop
das
not
mov
push
push
fcom
movs
or
retf
retf
xchg
shl
call
leave
mov
pop
push
punpckldq
je
mov
scas
sub
stc
xor
out
jmp
add
inc
pushf
mov
loop
and
jmp
pop
adc
imul
inc
cmp
jge
mul
mov
pop
xor
jnp
sbb
adc
xlat
jmp
loop
daa
or
xor
and
enter
fidivr
or
sub
xor
xor
jb
les
xchg
push
mov
jne
or
(bad)
jmp
push
das
add
inc
popa
and
cmps
fidivr
jg
lods
lods
leave
add
push
cmp
add
cmp
test
dec
jmp
xchg
repnz
xchg
push
lea
push
mov
js
test
cli
push
inc
and
cmp
sub
pop
jle
cdq
repnz
mov
mov
jg
xchg
mov
mov
mov
mov
je
std
fs
jmp
cmp
mov
les
cmc
jb
jns
and
test
or
mov
ret
pop
pop
jl
call
aam
sti
aas
push
lods
cmp
inc
mov
mov
stc
mov
lock
xchg
mov
dec
lea
jne
mov
cdq
cmp
pminsw
pop
shl
stos
jle
rcr
add
pop
mov
retf
aaa
push
call
add
outs
mov
movs
fbld
pop
int
retf
arpl
cmp
mov
sbb
icebp
scas
les
jnp
dec
in
push
mov
sahf
dec
sbb
je
stos
cmp
popa
jne
add
inc
fidivr
mov
fisub
sbb
ds
in
test
test
stc
stos
dec
dec
aam
(bad)
cli
retf
(bad)
cwde
fisttp
rcr
pop
out
inc
lods
aam
mov
mov
or
mov
xchg
int3
and
push
xor
shr
pop
loop
stos
bound
cli
call
mov
jno
mov
mov
jnp
aad
jno
aad
outs
xchg
aad
inc
cmc
jmp
arpl
(bad)
xchg
enter
out
stos
fs
movs
out
outs
adc
lods
movs
pop
outs
lods
clc
lea
lods
cli
mov
cmp
mov
jbe
xor
xchg
int3
jne
icebp
jnp
xor
jne
cmc
cwde
cmp
add
inc
xor
xor
aad
cmp
pop
popa
stos
(bad)
add
fdiv
bound
imul
sub
pop
xor
clc
js
jb
xchg
mov
sub
movs
mov
rcr
push
push
sub
sbb
int3
(bad)
cmc
cli
in
out
out
and
pop
aas
dec
cli
fst
mov
jl
test
in
mov
xchg
xor
js
pusha
push
outs
sub
sub
jl
out
retf
jmp
mov
je
jmp
xchg
or
cld
xchg
inc
jge
(bad)
sub
mov
dec
mov
push
call
daa
outs
xlat
stc
jo
out
mov
iret
lds
fiadd
and
fisubr
loopne
push
xor
mov
loopne
icebp
inc
add
int3
lock
jmp
std
sbb
in
shl
test
or
aad
test
loop
jmp
fwait
mov
mov
push
retf
fs
xchg
in
jg
(bad)
cmp
push
and
jae
cmp
push
in
sub
push
in
jno
clc
push
adc
and
and
call
call
inc
neg
movs
aad
in
movs
imul
lahf
imul
movs
xor
jmp
test
jp
mov
xchg
ss
and
push
mov
jl
jb
std
adc
xor
mov
mov
xchg
push
neg
xchg
arpl
clc
adc
xchg
push
push
lods
inc
or
cmp
adc
xor
icebp
or
inc
inc
mov
jne
rol
add
mov
leave
jge
in
cmp
jno
mov
pop
push
cwde
test
add
retf
popa
test
cmp
loop
and
lahf
push
sub
rcl
inc
xor
bound
cmp
ret
mov
dec
xor
jo
and
pop
ins
or
mov
dec
adc
xchg
cmps
or
mov
or
movs
or
push
mov
mov
inc
dec
fisubr
jmp
cmp
xchg
dec
push
dec
and
xchg
popf
xor
je
dec
bound
scas
cwde
xchg
les
xor
ud0
loopne
xchg
xchg
push
sbb
dec
and
daa
xchg
leave
and
shl
and
and
xchg
mov
cdq
and
dec
pop
push
add
dec
xchg
mov
and
inc
cmp
sub
jmp
push
lods
cmps
call
out
scas
(bad)
fwait
pop
dec
(bad)
xor
pushf
mov
out
pop
out
cmp
std
ss
cmp
retf
jbe
int3
enter
shl
daa
jp
scas
mov
sub
xor
mov
sub
push
lea
loope
or
xchg
add
mov
dec
and
test
sub
dec
dec
xchg
xchg
and
cdq
dec
test
es
adc
movs
xchg
adc
xchg
movs
or
dec
and
mov
cli
int3
mov
cmps
lds
jge
jmp
iret
mov
int3
lds
call
sbb
and
test
imul
pop
xlat
dec
jmp
(bad)
fdivr
shl
jmp
hlt
fdivr
ss
dec
add
loope
cmp
pop
mov
cdq
movsx
mov
outs
test
cmp
add
pop
clc
dec
in
cs
cmps
jne
pop
test
ins
outs
js
jg
lahf
dec
mov
inc
push
fild
add
movs
xchg
mov
imul
or
inc
push
dec
xor
cmc
mov
(bad)
lahf
jmp
aad
add
into
push
inc
dec
jo
push
mov
xor
sub
ja
cmp
fbld
sbb
fs
jae
neg
inc
xor
movs
movs
mov
aad
cmp
cld
clc
cli
cmc
push
sub
pop
jle
hlt
push
cmp
and
fldenv
push
dec
(bad)
sbb
mov
fnstcw
sti
adc
push
sub
fsubr
nop
rol
cmp
or
sub
dec
xchg
xchg
dec
xor
je
cdq
and
retf
jno
cmp
sub
leave
cmp
dec
or
or
cs
push
ret
(bad)
in
cld
out
jmp
mov
lock
stc
adc
xchg
cmp
daa
std
jae
daa
cld
sub
mov
mov
mov
dec
out
fnstsw
inc
test
nop
std
and
push
adc
mov
mov
pop
retf
sbb
in
jle
(bad)
and
imul
push
mov
xchg
dec
dec
retf
inc
inc
and
dec
or
fs
popa
inc
popa
sub
(bad)
pop
ds
fmul
mov
pop
dec
repz
test
cs
test
jne
punpcklwd
add
jae
and
push
mov
push
loop
add
add
inc
pop
call
(bad)
ins
arpl
mov
or
hlt
jae
inc
test
add
jb
add
dec
push
adc
imul
cli
and
and
sahf
jle
cmp
pop
push
dec
dec
xchg
stc
fs
inc
fistp
or
cld
mov
sub
(bad)
outs
sbb
rcr
inc
cli
adc
sbb
enter
jo
lods
sahf
xchg
cmc
stos
test
mov
out
aas
fmulp
repz
aaa
(bad)
mov
mov
stos
in
ss
jne
data16
jne
mov
sbb
push
pop
inc
pop
and
addr16
jbe
clc
aaa
sahf
aas
loop
inc
rcr
mov
mov
mov
(bad)
jg
stc
lahf
cmc
(bad)
in
mov
xor
rol
sbb
mov
gs
mov
ins
lds
out
cmp
sbb
stos
in
neg
mov
ss
xlat
mov
(bad)
jo
movs
lahf
dec
stos
xchg
pop
loop
(bad)
into
sahf
out
push
mov
(bad)
rcpps
gs
loop
mov
in
daa
call
sub
inc
dec
and
or
popf
xor
pop
dec
cwde
scas
xor
jmp
(bad)
cld
mov
xor
shl
jle
fld
fcomp
mov
dec
hlt
xchg
stos
or
cmc
es
mov
dec
out
(bad)
jg
mov
mov
push
jmp
jo
mov
aas
ja
pop
xor
sub
dec
inc
sub
leave
rcl
or
or
add
hlt
popf
por
jmp
fyl2xp1
stos
mov
jae
jp
adc
mov
mov
add
cmp
hlt
sti
inc
fsubr
sub
(bad)
mov
fcomp
dec
loop
pop
push
das
and
popa
and
call
jo
jmp
pushf
mov
ss
cli
push
loop
cmc
jg
imul
retf
fsubr
inc
jl
lds
(bad)
clc
sbb
mov
and
cmps
mov
ret
iret
jecxz
dec
outs
je
mul
mov
jnp
sar
xchg
inc
xchg
push
mov
lods
pop
jge
aas
cmps
mov
mov
xchg
hlt
cdq
inc
or
in
retf
mov
xchg
sbb
hlt
xchg
movs
jge
jmp
sub
xor
adc
cdq
pop
cwde
std
push
dec
std
dec
shl
dec
les
cwde
(bad)
mov
xor
arpl
fisubr
add
retf
aas
jge
psadbw
add
mov
dec
and
imul
adc
sbb
leave
xchg
or
(bad)
shr
mov
push
shr
mov
jae
mov
mov
cmp
fs
dec
scas
jg
adc
ins
lds
into
lods
inc
mov
mov
je
mov
je
cmp
lods
pop
aaa
hlt
jmp
icebp
lods
xchg
jle
aas
loope
inc
dec
dec
push
pop
mov
or
inc
dec
mov
lods
(bad)
js
xchg
push
cmp
inc
test
hlt
outs
icebp
mov
imul
idiv
sti
jle
neg
sub
xchg
mov
pop
imul
xor
fnsave
cli
fistp
cmp
jp
dec
jmp
fnstsw
mov
xchg
idiv
jp
cli
imul
outs
cld
jmp
movs
rol
icebp
sbb
pop
add
lds
rol
inc
adc
pop
add
mov
push
arpl
aas
sbb
sbb
mov
cmp
in
mov
jle
icebp
aas
stc
add
inc
les
ror
loopne
nop
cmp
xor
sbb
(bad)
sar
aad
push
pop
pop
sti
in
rcr
cmc
(bad)
cs
stos
std
dec
into
jmp
push
out
outs
std
cli
mov
in
mov
gs
mov
bound
mov
ds
lods
push
pushf
pop
or
pop
jg
mov
inc
lods
retf
jno
outs
stos
dec
fstp
fisubr
aad
sub
add
pop
and
(bad)
icebp
imul
ror
cmp
pop
inc
dec
cli
stc
xchg
(bad)
in
retf
cmp
jb
pop
(bad)
xor
adc
nop
mov
call
add
mov
sbb
sti
jne
jp
jp
dec
cmp
mov
out
adc
jge
mov
mov
cmp
mov
les
cmp
jecxz
mov
push
fistp
sahf
pop
inc
and
mov
mov
xor
mov
out
movs
pop
popf
clc
rol
cmp
adc
mov
jo
dec
adc
cmp
(bad)
pop
mov
or
lods
ss
adc
outs
jmp
(bad)
jne
jae
adc
(bad)
add
lds
jg
mov
imul
sbb
pop
push
xchg
jmp
pop
shr
rol
loop
push
inc
fwait
sub
fwait
clc
(bad)
ds
jmp
mov
pop
jmp
inc
mov
popf
sahf
aas
repnz
jge
cmp
gs
cmp
jne
mov
call
cmps
or
lahf
dec
shl
push
pop
out
mov
mov
fld
rcr
sub
mov
push
xlat
mov
and
ja
jmp
or
inc
enter
outs
pop
call
sbb
jle
pusha
mov
repz
shl
or
iret
cmp
(bad)
pop
sub
xchg
mov
call
lds
arpl
or
pushf
xchg
jo
cmps
jp
lahf
iret
outs
shr
(bad)
pop
call
imul
mov
jmp
lods
xor
cmps
test
sbb
sbb
sti
mov
scas
in
mov
xchg
inc
push
retf
xlat
loope
in
imul
ins
pop
mov
outs
fmul
or
pop
loope
fnsave
js
fild
sub
fist
cmc
jmp
ja
loopne
sahf
fbstp
pop
mul
std
pop
add
mov
scas
fsubr
int
movs
cmp
mov
sahf
cwde
fbstp
jns
push
cmp
xor
leave
jns
jmp
aam
iret
jno
shl
or
js
popa
pop
push
jno
mov
mov
jmp
push
mov
(bad)
pop
retf
jbe
sbb
mov
xchg
outs
jne
jge
cmp
jmp
addr16
jo
lock
adc
(bad)
(bad)
in
mov
(bad)
shr
pop
int3
mov
lock
mov
pop
dec
jmp
(bad)
arpl
gs
pop
icebp
fwait
jmp
mov
adc
syscall
sbb
sbb
dec
mov
in
fsubr
lahf
dec
xchg
sbb
mov
mov
adc
mov
out
jl
mov
mov
dec
je
push
fst
xor
(bad)
into
mov
push
stos
sbb
std
out
fwait
mov
mov
out
(bad)
sar
shl
jne
lock
jmp
outs
hlt
(bad)
mov
cli
xchg
cmp
fadd
stc
int3
imul
or
sub
pusha
xchg
outs
fcmovnu
fld
aas
cmp
dec
xor
(bad)
imul
and
ret
cli
(bad)
jne
cs
jb
sbb
lds
jnp
adc
mov
dec
add
sbb
fsubr
mov
jmp
stos
rcr
mov
retf
xlat
dec
push
adc
cli
pop
add
cmp
pop
popa
mov
in
adc
mov
mov
leave
push
loope
mov
xchg
xchg
lds
sbb
call
lods
jae
ss
loope
cmps
ss
inc
gs
push
loope
into
and
or
leave
enter
popa
push
mov
out
mov
jne
dec
dec
sub
loopne
cmp
mov
push
mov
dec
loopne
xlat
nop
ja
or
sub
fwait
ins
and
iret
xchg
fld
je
or
cmp
ret
out
test
repnz
mov
and
lea
xchg
pop
adc
inc
push
jae
inc
and
pop
adc
sub
xlat
addr16
push
in
aam
ror
cmps
and
test
jmp
aas
dec
jno
(bad)
or
xor
retf
(bad)
or
pop
pop
cwde
push
test
gs
shl
test
ficom
ja
adc
nop
sub
pop
cmp
loopne
or
(bad)
pop
movs
rcl
ins
test
outs
jb
xchg
or
jp
inc
test
adc
adc
and
add
adc
popf
and
dec
dec
and
dec
jmp
jmp
xor
dec
xchg
dec
xchg
sar
cdq
cmp
xchg
dec
adc
and
dec
dec
xchg
rcr
dec
xchg
retf
test
ds
xchg
xchg
adc
dec
dec
dec
push
sub
lahf
call
loopne
daa
dec
lods
mov
sub
adc
xchg
push
xchg
dec
push
jo
xor
xchg
fs
rcl
es
and
sub
xchg
dec
push
dec
daa
dec
dec
daa
or
sub
sar
or
or
dec
icebp
jg
push
ja
lods
test
test
fwait
inc
rcl
xor
hlt
das
icebp
push
pushf
sbb
and
div
inc
out
mov
pop
add
fbstp
xchg
sub
add
mov
popf
jmp
xchg
aaa
popa
aas
retf
pusha
cmc
out
dec
lds
dec
mov
dec
popf
xor
and
bound
xchg
xchg
dec
popf
sub
xchg
xchg
dec
and
and
xchg
mov
dec
inc
leave
and
test
jge
push
sub
xchg
retf
push
enter
lea
js
sar
add
retf
pushf
adc
cli
jg
iret
icebp
xchg
pop
inc
fdivr
or
add
hlt
paddb
sar
fcmovnbe
arpl
jge
cmp
iret
lods
je
jecxz
pop
cmc
inc
dec
jecxz
out
daa
sar
(bad)
jae
inc
sbb
sahf
and
mov
xor
pop
mov
outs
(bad)
xor
add
mov
icebp
(bad)
jg
movs
out
pop
jmp
push
jmp
sbb
outs
std
pop
jnp
add
cs
lea
retf
dec
out
xor
inc
jmp
lds
adc
sbb
bound
jp
xor
and
cmp
mov
dec
repz
stos
jmp
add
cwde
ret
repnz
add
test
cmp
out
pop
push
or
mov
mov
push
outs
std
stc
fwait
sar
outs
mov
out
add
xchg
sub
mov
cmp
jnp
mov
les
(bad)
jnp
jb
fisttp
mov
inc
mov
div
fisubr
and
aam
xor
jnp
inc
cmc
imul
adc
int3
mov
cmps
ficomp
icebp
ud0
shr
lods
adc
cmp
jecxz
imul
sub
xor
push
adc
in
scas
inc
mov
loop
mov
xchg
fld
sub
jge
into
jmp
cli
mov
sti
sub
outs
dec
rcl
leave
call
jge
aad
pop
outs
(bad)
loope
aas
mov
or
loope
lahf
fisttp
out
inc
in
in
jge
mov
adc
jns
(bad)
sar
outs
mov
ss
sbb
in
arpl
(bad)
mov
in
xchg
cli
sub
add
std
daa
(bad)
xor
shl
fild
icebp
mov
aas
fld
xor
or
lds
popa
xor
cmp
or
lock
mov
push
jo
and
mov
and
cmp
in
cmp
cmp
sti
jecxz
add
jge
fsub
lods
loopne
or
cld
std
arpl
rcr
stc
(bad)
movq
cs
hlt
ds
out
xchg
xchg
jmp
js
mov
stos
inc
enter
mov
push
pop
pop
jg
xlat
xchg
mov
scas
(bad)
cmps
js
(bad)
xor
bound
sub
xor
xchg
jmp
xchg
fs
xchg
inc
xor
push
mov
ror
arpl
xor
iret
int3
inc
lods
lods
fs
mov
dec
scas
je
scas
cmp
sub
idiv
aam
lea
cwde
arpl
jg
(bad)
(bad)
mov
nop
call
xchg
cmc
dec
dec
fdivr
call
inc
pop
push
fcomip
dec
sbb
arpl
nop
fs
scas
cmp
push
sbb
mov
adc
shl
outs
mov
cmps
shr
enter
test
push
fwait
xor
ja
(bad)
xchg
inc
inc
pop
hlt
push
shl
jge
cmc
push
jno
cmp
push
xor
xor
out
popa
xchg
cwde
and
push
mov
aas
js
dec
sub
sbb
out
lods
jg
in
inc
leave
movs
jge
sbb
std
inc
dec
inc
push
xchg
dec
jmp
scas
sub
mov
xchg
add
(bad)
fcmovnu
out
sub
jle
cdq
jne
lods
xchg
mov
out
fild
cmp
xor
sub
push
int
mov
inc
xor
(bad)
jl
cmc
out
mov
data16
dec
popf
imul
mov
out
(bad)
ins
(bad)
idiv
mov
sahf
int
hlt
out
outs
ds
mov
iret
(bad)
fimul
out
add
or
or
dec
sbb
rol
mov
push
dec
push
sub
daa
or
xchg
dec
dec
mov
xchg
push
pop
shl
test
pop
mov
or
adc
(bad)
lea
(bad)
add
xchg
xor
(bad)
adc
xor
and
push
imul
mov
xor
adc
inc
retf
sub
rol
sub
stos
test
add
fcmove
lahf
in
div
push
add
jmp
fsub
dec
adc
sahf
popa
inc
daa
dec
dec
inc
sar
mov
idiv
bswap
ja
fdiv
std
addr16
add
xor
in
inc
movs
pop
inc
pushf
cmp
mov
data16
idiv
mov
rcr
push
int
out
rcr
fcomp
js
jmp
in
scas
jecxz
lahf
call
add
mov
jno
ret
mov
jo
(bad)
(bad)
fbld
cmp
out
push
dec
push
push
sub
xchg
xchg
dec
retf
lahf
pop
shl
loopne
nop
lds
push
mul
mov
fld
ds
push
les
jo
pop
scas
mov
mov
jg
pop
inc
cli
dec
cmc
mov
jbe
mov
nop
inc
stos
xlat
dec
(bad)
div
sbb
hlt
sub
mov
cmc
call
iret
push
iret
and
call
xchg
push
(bad)
jle
popaw
add
jmp
std
test
mov
inc
and
mov
dec
scas
sub
int
inc
add
movs
mov
std
cdq
adc
mov
jle
inc
xchg
xchg
inc
movs
push
sbb
imul
pop
imul
hlt
push
push
cld
pop
mov
cmp
xor
jge
icebp
jg
add
ror
aad
into
sahf
in
push
cli
das
sbb
push
fistp
xor
outs
ret
js
xchg
cmp
mov
push
outs
loope
in
sbb
add
ret
retf
mov
arpl
cli
outs
adc
lds
jl
pop
ret
adc
jmp
mov
adc
out
mov
lods
sar
(bad)
mov
cmps
push
pop
pusha
das
(bad)
sar
call
push
fimul
mov
cmp
imul
or
lds
or
add
fdivr
neg
mov
adc
jge
cpuid
out
in
sub
jecxz
pop
mov
ds
aas
sub
xchg
sbb
mov
int
xchg
xor
pop
pop
add
cmp
or
adc
out
or
std
xchg
sahf
sahf
std
cdq
or
aas
cmp
mov
mov
ins
hlt
in
sbb
std
sar
add
or
cmc
mov
cli
sti
(bad)
into
outs
cmc
fisubr
mov
xchg
mov
sbb
retf
loope
push
adc
fs
ja
out
cli
mov
stos
jno
test
fsub
pop
in
push
imul
inc
mov
dec
jmp
pop
jbe
mov
icebp
out
(bad)
scas
(bad)
push
aas
xor
jne
jmp
inc
add
xchg
dec
mov
ret
mov
in
mov
sbb
in
jg
idiv
aam
enter
and
jnp
ins
sbb
push
into
sub
pop
push
bound
jae
sbb
adc
js
movs
adc
pop
sahf
aaa
(bad)
fmul
stos
ror
fdiv
(bad)
popa
les
add
jne
sub
(bad)
frstor
repnz
cmps
jmp
ins
sub
add
in
movs
hlt
mov
push
mov
xchg
cmp
pop
inc
and
jl
push
aad
jne
jo
int
sar
mov
cmp
cmc
jg
shl
movs
xchg
neg
or
pop
jnp
add
test
sar
sub
pop
adc
push
mov
sbb
add
push
adc
dec
stos
sti
mov
mov
hlt
mov
jge
inc
fwait
sub
dec
mov
mov
xchg
cmp
add
fisttp
cwde
fistp
int3
pusha
cmps
stos
push
push
aas
jl
push
outs
pop
jmp
xchg
hlt
cmp
lahf
jmp
and
movs
sub
add
dec
sbb
(bad)
mov
enter
icebp
jne
inc
xlat
clc
jg
arpl
ret
fcomp
pop
sar
add
jmp
push
sub
in
mov
push
fcomp
jecxz
push
fnstenv
mov
popa
add
xchg
aaa
xor
lahf
or
mov
(bad)
jmp
jae
lods
mov
mov
mov
hlt
xchg
(bad)
push
scas
into
outs
mov
or
lods
std
dec
jmp
jne
scas
(bad)
inc
fist
cmp
rcr
dec
rcl
cld
xchg
popa
call
jge
push
ss
mov
and
shl
xlat
arpl
in
jg
mov
addr16
psrld
retf
xor
cmp
out
inc
gs
mov
loope
cmp
xchg
stc
stos
cmp
in
(bad)
ja
jae
and
cmp
push
xchg
adc
mov
push
out
in
jo
adc
fiadd
xchg
dec
sub
popf
(bad)
sbb
mov
and
out
mov
fsub
jmp
(bad)
into
test
test
mov
sti
int
in
inc
test
das
stos
or
inc
mov
int
cli
mov
out
inc
shl
sbb
push
ds
and
dec
push
ffree
jmp
call
inc
outs
leave
ret
jbe
int3
and
inc
cmps
jmp
ins
sub
push
lods
jmp
cmp
pushf
ficom
iret
sti
int3
mov
mov
sar
xchg
or
jmp
cli
sbb
cs
outs
cli
add
xlat
cmp
mov
jne
in
pop
pushf
int
push
add
push
inc
and
aad
xchg
mov
xor
adc
int
stos
mov
mul
ds
sbb
dec
mov
pop
cmps
jmp
add
lea
mov
retf
cmp
mov
jge
int3
sub
and
mov
out
(bad)
pop
ss
test
dec
or
jg
or
mov
pop
into
outs
or
add
int3
push
ret
inc
pop
dec
out
cmp
fdiv
pop
movs
rcl
stos
xor
rcl
push
jmp
js
cmps
mov
outs
ret
push
(bad)
mov
pop
sub
sub
out
fimul
ds
xlat
sbb
out
pop
ins
arpl
idiv
mov
fsubr
repnz
push
xchg
adc
mov
inc
push
lods
ins
pop
add
pop
adc
pop
mov
jb
push
fisttp
and
clc
xor
mov
es
movs
xor
cdq
cdq
push
ja
test
loopne
sub
inc
jo
outs
lods
test
lock
dec
(bad)
fldcw
out
pop
mov
popa
fcmovnu
xor
fisttp
inc
cmpxchg
dec
xchg
cmp
test
call
ret
fild
fcmovb
jmp
push
popf
pop
ret
cwde
sub
stos
dec
ss
je
adc
(bad)
jnp
mov
iret
(bad)
cmc
mov
mov
(bad)
int
jecxz
mov
dec
and
imul
dec
and
movs
jmp
xchg
push
call
sub
dec
dec
mov
xchg
dec
and
movs
mov
dec
xchg
dec
pop
and
xchg
push
mov
or
push
pop
movs
leave
mov
dec
inc
fsub
xchg
push
inc
ficom
xor
outs
dec
jp
sub
dec
and
cmp
dec
test
xchg
dec
push
je
rcl
(bad)
mov
sub
dec
and
xchg
mov
je
dec
add
movs
loope
dec
adc
outs
jge
jmp
sbb
(bad)
mov
imul
pop
mov
sbb
and
scas
scas
inc
mov
jae
dec
sahf
shr
movs
sar
das
mov
fild
lods
hlt
(bad)
mov
inc
push
fcom
pop
cli
pushf
and
push
push
xchg
adc
sub
mov
mov
sub
and
fs
jmp
adc
dec
pop
and
loope
das
adc
push
nop
sub
cld
adc
les
xchg
fs
push
loopne
xchg
adc
push
sub
dec
xchg
pop
sbb
sub
xor
mov
arpl
sub
pop
jmp
sub
int
stos
jmp
loopne
mov
ror
loope
loope
inc
lods
fsqrt
inc
out
shl
loop
lods
mov
xchg
fcmovne
call
push
mov
xlat
stos
pop
out
(bad)
sahf
mov
push
mov
dec
shl
in
ja
inc
aaa
call
std
bound
fs
retf
pop
add
mov
xchg
push
adc
sub
dec
popf
and
dec
sbb
inc
dec
stos
enter
out
call
push
pop
out
xor
aam
ret
sahf
mov
out
jle
and
push
iret
cli
inc
add
(bad)
inc
lods
inc
rcl
aad
mov
mov
fdivp
loope
jb
sbb
icebp
gs
sub
loope
push
es
sbb
jge
jns
inc
inc
sbb
xor
pop
jae
aad
mov
shl
add
pop
test
push
adc
icebp
fdiv
inc
pop
mov
arpl
enter
and
push
push
xor
jle
popa
addr16
outs
rcr
and
jmp
arpl
cmp
aad
ficom
out
mov
iret
std
inc
std
mov
test
xor
adc
pop
xchg
jg
cmp
pusha
les
lock
xchg
push
(bad)
xor
(bad)
pop
ds
push
test
ror
test
adc
pop
push
mov
mov
in
pop
fstp
aad
jg
sub
movs
int3
cli
inc
(bad)
mov
xchg
in
mov
daa
dec
adc
and
dec
pop
and
jo
popf
sahf
adc
mov
lock
cli
inc
mov
jg
(bad)
adc
pop
sbb
xchg
jg
je
movs
outs
arpl
shl
cmps
add
mov
adc
jecxz
jg
fdivr
cmp
add
mov
adc
test
push
push
mov
jbe
in
sub
mov
dec
adc
pop
and
cmp
xchg
xchg
movs
xchg
dec
pop
and
add
mov
jne
mov
aam
sbb
std
mov
dec
cmp
iret
(bad)
mov
adc
xchg
test
mov
add
xlat
mov
call
pop
jmp
repnz
jb
xchg
xchg
and
push
xor
inc
cmp
push
mov
mov
idiv
mov
je
stos
and
sahf
out
jg
jnp
and
mov
aas
fwait
mov
std
das
lods
popa
cmc
push
outs
lds
std
push
xchg
icebp
add
lds
add
movs
mov
fcmovnbe
push
mov
call
jb
jle
jp
mov
mov
sub
mov
idiv
test
gs
aam
mov
loope
add
iret
lock
fcomp
cli
(bad)
xor
jle
das
push
push
(bad)
xchg
dec
dec
xchg
sub
add
xlat
inc
mov
sbb
arpl
pop
or
pop
jmp
addr16
mov
out
rol
pop
rol
cli
mov
aad
xchg
cmp
and
inc
xchg
cmp
dec
and
clc
inc
push
jne
cld
xlat
setle
jbe
lods
outs
std
mov
adc
xchg
dec
sbb
mov
(bad)
xor
push
lock
frstor
cs
xor
push
xchg
jbe
fcom
cmp
cld
mov
ins
jmp
scas
cmps
sbb
mov
stos
fcomip
mov
out
lods
shl
push
fwait
das
popa
add
sbb
hlt
cmp
jne
stos
sub
push
retf
dec
adc
jl
and
inc
sbb
jg
jle
imul
mov
loopne
xor
mov
push
imul
cli
push
lahf
cld
sti
dec
mov
rol
cmc
xor
add
mov
xchg
mov
(bad)
cmp
xchg
jg
mov
dec
lods
ds
add
fisttp
je
scas
clc
cdq
jno
pop
hlt
ins
icebp
in
sti
pop
cwde
mov
(bad)
aad
lahf
(bad)
sbb
sub
xchg
out
xor
call
inc
xchg
stos
paddd
jo
mov
and
les
aaa
and
push
popf
fs
test
mov
sbb
ja
cmp
je
ins
jg
pop
mov
iret
sbb
jecxz
mov
inc
imul
cdq
sub
loope
mov
mov
add
xchg
fwait
lock
out
cmps
pop
(bad)
xchg
scas
stc
imul
arpl
jae
sbb
jge
sbb
imul
aas
lods
jge
(bad)
iret
fwait
sub
or
aas
aam
das
push
cli
mov
int3
cmp
cmp
rcr
test
xchg
sub
(bad)
add
push
dec
test
push
fcmovne
retf
jnp
mov
jecxz
repnz
inc
xor
popf
mov
adc
imul
ins
hlt
outs
sbb
in
sti
int3
inc
mov
and
mov
pop
push
(bad)
ja
js
inc
test
xchg
or
(bad)
jmp
push
add
lods
pop
jne
pop
mov
into
xor
xor
sbb
fwait
mov
in
push
and
mov
fnstcw
fdiv
and
call
jo
hlt
(bad)
add
test
push
sbb
push
and
sbb
push
call
xchg
mov
cld
fwait
push
mov
push
push
test
hlt
loope
int
push
aam
mov
sub
pop
lahf
inc
cli
clc
sbb
jecxz
push
or
or
(bad)
mov
mov
ret
jle
ret
sbb
ja
inc
outs
movs
pop
mov
mov
scas
loope
xchg
inc
cmp
xor
mov
fld
out
xchg
xchg
pop
jmp
push
xor
dec
std
xor
les
inc
add
pop
mov
mov
pop
mov
ret
push
mov
adc
jle
out
mov
ror
mov
inc
gs
daa
and
gs
aam
repz
inc
repnz
sbb
fist
je
ret
xchg
sub
fild
fild
jne
mov
lea
shr
sti
push
loope
pop
rol
pop
fcom
aad
into
popf
cs
mov
fwait
stos
lds
dec
and
sbb
xlat
sub
dec
scas
out
rcl
out
movs
(bad)
jp
adc
jecxz
pop
mov
(bad)
shl
hlt
ja
(bad)
shl
imul
imul
cmp
sahf
test
jl
mov
add
daa
(bad)
pop
iret
push
sub
xlat
xor
test
mul
arpl
stos
adc
push
mov
xor
jl
fbld
out
movs
ror
cmc
cmp
push
sbb
mov
test
lds
test
shl
aad
mov
xchg
enter
aaa
(bad)
inc
(bad)
pop
sahf
pushf
stos
sub
sub
stos
fwait
mov
in
ror
stos
cmp
jmp
xchg
movs
mov
pushf
xor
cmp
dec
xchg
cmp
add
sub
and
fnstenv
jge
movs
mov
add
cmps
mov
add
or
mov
std
movs
stos
(bad)
xlat
jo
lds
adc
std
push
out
lock
push
repnz
push
cli
mov
fidiv
jns
lahf
jno
inc
mov
push
mov
sub
fidivr
inc
addr16
mov
adc
mov
cli
ret
inc
ds
jbe
mov
xchg
cmp
pop
rcl
clc
adc
inc
mov
and
add
xor
daa
dec
inc
retf
jmp
mov
js
push
test
cmp
and
jp
mov
std
xlat
push
outs
mov
imul
jge
sub
cmp
add
fst
repz
mov
(bad)
int3
in
std
test
cmp
scas
test
inc
pop
jns
jle
cdq
idiv
ja
shr
(bad)
pusha
fmul
adc
or
mov
dec
neg
inc
jo
js
sub
jge
int3
lods
add
js
(bad)
ins
mov
inc
push
cld
loopne
push
cld
rcl
push
fmul
lahf
aam
jne
mov
inc
adc
loopne
adc
out
xchg
aad
cmp
stos
fisttp
retf
loop
pop
arpl
mov
sub
mov
std
push
cmps
dec
popf
pop
out
into
addr16
adc
and
in
in
mov
fdivr
mov
aad
mov
iret
outs
test
pop
lea
sub
mov
cmp
movs
je
pop
pop
and
jnp
outs
jo
push
int3
fcomip
imul
popf
jbe
push
retf
test
pop
pop
jae
out
fcom
xor
xor
out
neg
fstp
imul
div
mov
neg
xchg
mov
jle
push
(bad)
popa
icebp
pop
inc
clc
out
ja
imul
fisttp
(bad)
lahf
adc
xchg
push
jo
mov
shl
shl
dec
jmp
sub
out
sub
and
push
lahf
dec
mov
dec
(bad)
jbe
shl
and
js
or
or
test
(bad)
shl
push
gs
(bad)
(bad)
rcl
(bad)
jl
sahf
es
fwait
jno
clc
adc
mov
popa
xchg
call
pop
in
aad
mov
call
in
and
push
imul
out
shl
cmp
sub
(bad)
push
push
cli
adc
inc
inc
aad
shl
lods
cmp
cmp
inc
push
ins
movs
mov
fwait
pop
mov
xchg
sub
adc
lea
fdiv
inc
jb
inc
sub
lahf
ins
jecxz
adc
adc
dec
out
cmp
mov
cmp
mov
ja
push
test
adc
movs
sbb
out
nop
push
dec
sub
xor
mov
and
xchg
inc
inc
mov
inc
movs
lea
ror
test
cs
inc
shr
dec
test
and
jmp
sub
xchg
and
aaa
add
dec
lods
sub
jb
scas
push
cmc
push
test
daa
das
push
das
inc
ss
or
lds
cwde
mov
cs
mov
cmp
lahf
aam
fisubr
sbb
adc
aas
call
loopne
adc
inc
aam
dec
dec
mov
push
idiv
sar
add
jmp
jg
fcos
add
dec
imul
xchg
xchg
in
mov
add
push
ja
mov
aas
xchg
neg
jb
pop
pop
je
jmp
push
sbb
and
adc
dec
dec
xor
nop
dec
and
mov
push
xchg
dec
or
dec
push
dec
and
xchg
or
add
inc
add
test
push
mov
ins
or
cmp
xchg
push
cmc
cli
jnp
mov
xchg
shl
(bad)
xchg
cmc
enter
sub
mov
pop
sbb
rcr
arpl
add
mov
inc
push
cdq
ds
push
jne
lods
lods
(bad)
fwait
push
idiv
add
lds
mov
lods
(bad)
lea
imul
add
sub
jmp
daa
retf
pushf
lds
aad
int
jae
xchg
mov
cmps
inc
jae
and
push
leave
xchg
nop
xchg
or
xchg
xchg
popf
and
push
or
sub
daa
in
sub
xchg
dec
add
fs
mov
mov
push
xchg
(bad)
push
or
mov
mov
jbe
movs
adc
ds
dec
lods
adc
stos
stos
rcr
mov
call
inc
shr
add
fld
mov
push
aam
mov
or
in
icebp
rol
out
lods
mov
xor
std
sbb
(bad)
jg
out
mov
mov
add
push
dec
push
dec
adc
add
mov
test
xchg
inc
dec
xchg
xchg
dec
or
movs
daa
test
dec
or
xchg
inc
es
addr16
xor
imul
push
cwde
sub
dec
mov
sbb
add
push
aaa
(bad)
scas
mov
arpl
push
xchg
shr
arpl
add
adc
iret
dec
leave
hlt
outs
ja
(bad)
cwde
ja
sbb
jmp
lods
ja
mov
pop
mov
jecxz
fcomp
sti
(bad)
push
cld
mov
fs
mov
fs
xchg
jmp
aad
je
xchg
xchg
dec
pushf
jnp
and
mov
sub
add
mov
pop
mov
imul
popf
(bad)
jo
sbb
sbb
cmp
mov
push
ins
pop
cmc
push
cli
push
fs
fdiv
push
out
imul
mov
pop
mov
repz
jp
cdq
jmp
jmp
jle
jg
in
arpl
jmp
or
pop
leave
idiv
mov
shl
adc
xchg
ds
adc
rol
inc
out
inc
or
cmp
or
repnz
cli
mov
cdq
and
pop
outs
repz
push
(bad)
xchg
loopne
ds
ja
cmp
ins
(bad)
inc
mov
pop
mov
int
cmc
push
cli
mov
xor
xor
fsub
ficomp
out
sub
inc
iret
mov
std
inc
scas
sbb
jb
fstp
add
pop
cld
not
cmp
stos
jmp
fs
cdq
lea
in
cli
inc
shl
das
stos
je
scas
xchg
cmps
xchg
ret
repnz
jg
vpunpcklbw
and
xchg
lea
or
in
dec
push
xchg
mov
fwait
loopne
lods
test
or
scas
mov
ins
jmp
mov
(bad)
mov
jb
pop
jmp
fdivr
jae
dec
fist
sub
data16
jae
and
push
push
and
inc
dec
pop
cmp
cdq
and
mov
sub
mov
jae
add
or
mov
cli
in
xlat
or
push
and
int3
jg
cmp
sub
push
pusha
sub
nop
inc
push
jne
punpcklwd
cmp
pop
push
ins
pop
pop
jno
xor
cmc
pop
fwait
test
in
dec
outs
dec
sar
jg
inc
inc
cmp
mov
push
jmp
mov
dec
and
sub
xchg
dec
dec
retf
xchg
dec
pop
cmp
sahf
scas
addr16
jnp
add
cmp
mov
jge
sbb
fcomip
retf
push
push
movs
cmps
addr16
mov
adc
aaa
cwde
adc
jmp
shl
test
lods
je
test
sahf
jmp
jg
fcmovu
sti
inc
clc
xor
lea
shl
popf
push
aas
loopne
aas
xchg
dec
dec
cmps
xor
mov
push
sbb
aaa
and
out
aas
sbb
dec
int
ja
push
push
adc
push
stos
sbb
test
mov
xchg
mov
lahf
inc
xchg
mov
jmp
dec
and
shl
je
and
xchg
ja
and
mov
dec
sub
int3
lea
xchg
ins
sar
jg
fild
paddb
lds
xchg
xchg
rcr
stc
lock
cmc
jmp
andps
mov
sbb
sar
enter
sahf
popf
int3
punpckhwd
loope
sub
ret
xor
das
mov
stos
xor
cmp
push
push
popa
test
mov
out
fbld
and
add
imul
aas
jmp
mov
lds
xor
mov
xor
sub
test
push
mov
in
shr
xchg
mov
dec
adc
xchg
shr
aas
call
hlt
xchg
jg
pop
jg
inc
xchg
inc
ss
cwde
mov
imul
(bad)
adc
test
pop
dec
in
std
sub
cmps
or
xor
add
inc
and
or
adc
pop
xchg
xchg
cmp
pop
aas
pop
sbb
push
lds
cs
fdiv
(bad)
sar
xchg
xchg
ficomp
pop
rol
inc
sbb
cmps
cmp
lods
xor
iret
and
jnp
imul
add
retf
das
aas
cmps
pop
and
in
loope
cmc
mov
scas
ret
loope
cmp
cli
aaa
xlat
sbb
cdq
or
cmc
push
xlat
jmp
arpl
xchg
out
cmp
(bad)
lahf
aad
test
(bad)
lock
inc
mov
push
adc
lds
js
loope
data16
cli
dec
(bad)
pop
test
call
imul
test
loope
shl
mov
and
(bad)
jmp
(bad)
out
dec
out
add
jmp
adc
jmp
dec
adc
adc
arpl
pusha
pop
cmps
jecxz
jae
cmp
hlt
pop
aas
xchg
lods
mov
and
(bad)
mov
jmp
cmp
cmps
jae
(bad)
in
sub
dec
jb
rol
inc
adc
push
int
mov
out
mov
retf
cld
mov
cli
popf
fwait
ror
aas
cmp
xchg
xor
imul
out
or
retf
jne
(bad)
movs
ret
retf
dec
add
sub
(bad)
loop
and
xor
pop
jle
(bad)
scas
out
mov
and
movs
cmp
jae
pop
sub
sti
fistp
mov
icebp
cvttps2pi
or
js
xchg
sub
(bad)
lods
ret
lods
loop
pop
rol
dec
cld
sub
inc
arpl
pop
jmp
cmovle
mov
sub
sub
mov
push
mov
cmps
or
jecxz
cmc
idiv
out
add
xor
je
xchg
xor
aas
xor
pop
stos
stc
mov
xor
fwait
test
xchg
fs
mov
cli
pushf
pop
loope
sbb
dec
cli
div
push
jae
pop
clc
(bad)
(bad)
call
not
adc
or
inc
loope
pop
or
push
gs
lock
sub
outs
test
xor
pop
mov
pop
inc
daa
xor
inc
jne
cmp
lea
imul
ins
int
jle
mov
add
imul
or
jno
das
adc
add
jl
lods
mov
jge
es
js
movs
sub
xchg
sti
sub
cmc
outs
cmps
jne
sahf
cwde
std
aam
add
pop
mov
push
xlat
or
movs
cmp
stos
push
fdiv
sbb
cli
test
jbe
lock
cmc
(bad)
xlat
jp
jmp
movs
loop
in
xor
test
(bad)
sbb
inc
jmp
out
frstor
imul
not
jl
and
sub
and
dec
dec
call
lahf
cmc
fwait
sbb
cmps
loop
sub
push
out
push
cmps
sub
cmp
sbb
std
adc
(bad)
mov
pop
jmp
mov
dec
lods
aas
fst
pop
mov
dec
inc
repz
fstp
mov
repz
scas
jo
jecxz
cmp
add
cmps
(bad)
daa
pop
test
mov
mov
cwde
jg
mov
add
lods
das
test
scas
mov
mov
push
add
cmc
mov
lahf
ja
sub
mov
(bad)
cmc
cli
imul
repz
out
sub
push
sbb
mov
lods
std
pop
mov
cmp
jmp
cmc
shr
out
mov
mov
inc
pop
in
movs
or
cmps
mov
rcl
mov
fcomp
in
test
jl
sahf
ja
dec
cmp
cmps
out
jmp
ret
mov
push
xor
cmps
xchg
das
shl
mov
cdq
cwde
pop
inc
test
fisttp
ror
inc
enter
and
mov
push
repnz
mov
int
sub
jne
cmps
adc
xor
sbb
and
out
cmc
sub
xchg
nop
mov
mov
xlat
add
aad
ja
loope
not
aam
mov
int3
(bad)
add
add
push
mov
push
mov
faddp
add
call
aaa
and
out
shl
jns
jne
or
jbe
(bad)
(bad)
xchg
inc
ror
sbb
fidiv
push
enter
inc
adc
jae
outs
test
and
test
movs
ins
popf
xor
xchg
inc
vmaxss
neg
inc
ja
enter
jg
xchg
mov
jae
sbb
push
sbb
idiv
in
mov
(bad)
mov
cmc
pop
std
dec
cmps
xchg
out
dec
jg
sahf
loope
add
stos
test
arpl
or
in
push
mov
jle
dec
lock
sbb
sahf
test
(bad)
call
mov
xchg
int
loope
ds
inc
mov
into
popa
cld
pop
dec
xor
int3
push
cmp
test
cdq
push
out
lahf
js
mov
mov
jge
cmps
jmp
pop
hlt
push
inc
xor
jmp
popa
cmp
inc
and
mov
or
fstp
je
pop
pop
aaa
jmp
clc
call
(bad)
xor
repz
loope
addr16
and
xchg
(bad)
and
lock
pop
jmp
sub
cli
shr
repnz
dec
test
std
fst
sub
ficom
pop
(bad)
sti
pop
test
push
pushf
xlat
cmp
movs
js
jnp
int3
and
aad
inc
sub
adc
int
sub
movs
neg
cmp
xor
push
pop
imul
mov
(bad)
call
xchg
sbb
add
inc
xchg
ins
mov
imul
aaa
and
inc
xchg
ins
test
je
fimul
push
push
fadd
cmp
mov
into
xchg
sub
not
dec
sub
outs
inc
xchg
retf
mov
fs
sbb
fadd
mov
push
in
leave
push
sub
push
xchg
xchg
test
adc
dec
pop
adc
or
and
mov
add
sbb
fdiv
lock
repnz
dec
movs
mov
jb
leave
inc
dec
or
ror
sbb
mov
mov
sub
xchg
mov
test
and
movs
stos
lahf
call
loopne
cmp
daa
xchg
jno
xchg
in
enter
xchg
fsubr
fadd
xchg
sub
jge
sub
inc
ja
push
int
sub
push
test
cld
in
mov
test
sti
outs
sub
popf
add
les
dec
push
mov
mov
jmp
push
jl
mov
cld
xlat
jp
cmps
movs
je
inc
aad
out
or
and
xchg
dec
mov
retf
xchg
inc
hlt
jns
push
aad
sti
push
inc
push
xchg
mov
jg
dec
jb
fsub
dec
clc
adc
inc
test
hlt
stos
js
adc
aad
cdq
pop
adc
pop
shl
jne
mov
sbb
in
stos
lahf
mov
sub
pop
cld
out
cs
(bad)
test
aas
add
out
(bad)
sub
add
nop
call
aaa
xor
mov
or
pop
mov
xlat
imul
pop
popf
sub
mov
mov
cmc
push
call
dec
jg
cmp
ret
sahf
cmps
aam
jp
dec
cmp
dec
dec
mov
outs
jbe
(bad)
cmp
add
mov
cli
mov
(bad)
shr
pop
jbe
sar
jno
mov
popf
(bad)
dec
std
fcmovb
dec
mov
or
ds
neg
sbb
aam
aas
test
std
dec
pop
push
(bad)
jno
add
cli
mov
mov
mov
inc
sti
jno
push
inc
sub
add
scas
xchg
outs
cpuid
xor
retw
cmp
inc
and
lea
(bad)
enter
xlat
inc
and
movs
mov
xchg
test
pop
pop
mov
mov
add
(bad)
retf
hlt
(bad)
in
push
xor
int
inc
test
jge
sbb
shl
mov
enter
movs
mov
idiv
inc
out
sbb
fimul
jbe
jne
mov
pop
iret
imul
xlat
sub
mov
mov
xchg
mov
and
xchg
movs
mov
daa
dec
call
pushf
movs
adc
and
call
mov
dec
xchg
xchg
dec
adc
push
cld
es
xchg
loopne
test
mov
jne
ins
mov
out
inc
lock
mov
hlt
scas
mov
cmp
movs
and
call
xor
call
out
mov
sbb
(bad)
adc
iret
std
dec
iret
shr
pop
not
sar
jnp
aas
leave
aas
fwait
inc
pop
cli
or
loope
shl
push
sbb
mov
fs
dec
sub
test
test
dec
xchg
movs
cmps
dec
clc
push
dec
xchg
xchg
dec
call
sub
dec
dec
xchg
dec
or
push
and
mov
inc
cli
stos
aam
cli
lds
dec
(bad)
dec
mov
inc
iret
imul
cld
pop
test
xchg
xor
das
inc
ror
or
pop
inc
mov
ret
and
add
lods
arpl
mov
or
movs
adc
ja
(bad)
cli
xor
(bad)
xchg
out
cwde
js
into
dec
test
mov
fbstp
dec
popf
xor
or
adc
gs
push
(bad)
push
jmp
dec
xchg
xchg
push
push
mov
rcr
jbe
fadd
std
(bad)
int3
inc
lods
lods
je
fbstp
cmps
sar
cs
call
aas
(bad)
add
std
mov
mov
fcom
not
out
inc
sbb
lods
sar
mov
hlt
cmp
adc
fdivr
jmp
mov
pop
mov
shl
arpl
bound
cmp
jne
fisubr
(bad)
mov
stc
push
inc
jmp
xor
call
(bad)
aas
lds
mov
in
std
pop
std
fwait
mov
sbb
out
gs
pop
test
stos
pop
pop
(bad)
out
scas
idiv
ret
jmp
cmpxchg
adc
xchg
(bad)
jecxz
xchg
mov
pop
mov
lahf
in
sub
jmp
shr
rol
test
add
pop
sbb
add
fisub
jmp
(bad)
mov
pop
shld
stc
xor
les
inc
add
push
hlt
repz
mov
ror
cmp
(bad)
adc
dec
pushf
(bad)
mov
sub
xor
cmps
aad
and
push
icebp
jb
(bad)
mov
push
loop
sbb
jbe
mov
and
jp
pushf
push
mov
in
int3
jo
aam
outs
jmp
(bad)
push
lahf
clc
inc
enter
push
xchg
cmc
in
in
push
push
fstp
std
dec
out
(bad)
mov
inc
outs
push
ja
jo
xlat
jns
ins
cmp
out
inc
xchg
bound
loopne
mov
xchg
inc
dec
out
push
jmp
enter
mov
add
or
pop
cmp
je
daa
inc
dec
dec
and
cli
movs
mov
and
imul
pop
arpl
cmp
cmps
pop
test
retf
fcomi
or
xor
pop
cmps
inc
(bad)
clc
cmp
jp
hlt
push
sub
and
jp
mov
xor
dec
stos
cdq
stc
in
push
mov
xchg
aam
jo
mov
movs
test
jge
inc
mov
test
cmps
sbb
ret
dec
xchg
cdq
add
or
sub
or
cli
push
xchg
jae
test
loopne
xchg
mov
push
and
neg
pop
lahf
sti
push
lods
jmp
jle
outs
std
fistp
mov
mov
xor
cmc
inc
imul
pop
lds
adc
cli
xor
in
push
sar
mov
jmp
mov
xor
xchg
adc
aas
inc
add
dec
sub
retf
xchg
adc
rol
call
je
or
repnz
hlt
cwde
loop
mov
or
mov
outs
lds
sub
jnp
jle
cmc
pop
bts
jge
inc
outs
not
or
mov
jnp
stos
push
out
xor
out
inc
xor
mov
pop
jnp
push
(bad)
repz
idiv
jge
adc
mov
mov
mov
in
jmp
or
xlat
cmp
or
sub
idiv
repz
mov
ret
pop
mov
cwde
cwde
push
sbb
and
mov
cwde
in
sbb
das
sbb
mov
pop
pop
stos
mov
jge
cmp
xor
add
out
(bad)
pop
pop
cli
dec
arpl
nop
dec
jne
cmp
sub
aad
push
pslld
mov
clc
xor
into
lods
data16
(bad)
push
xchg
cmp
hlt
sbb
(bad)
adc
call
cmp
movs
jge
pop
out
inc
mov
cli
mov
push
sub
popa
xor
push
ds
gs
outs
cmc
sub
inc
pop
mov
scas
push
xchg
xchg
jmp
arpl
push
push
aas
hlt
icebp
inc
jg
sub
cmp
out
out
or
adc
imul
repnz
in
fs
inc
xchg
xchg
inc
or
leave
(bad)
mov
out
inc
cmp
mov
and
fnstcw
pop
jg
std
data16
movs
jg
sbb
mov
fnstenv
inc
ins
lahf
call
inc
jnp
mov
in
cli
push
(bad)
dec
xchg
shl
xor
popf
dec
inc
pushf
shl
aad
jg
mov
xor
dec
hlt
pop
inc
pop
mov
repnz
mov
pop
xchg
or
mov
inc
lods
(bad)
sti
adc
and
cmps
xchg
test
xor
or
out
test
adc
lods
stos
jb
fwait
jmp
(bad)
jae
test
data16
enter
push
cmp
mov
cld
lds
push
jle
popa
loopne
test
cdq
fdivr
aad
inc
xor
inc
inc
(bad)
fiadd
pop
cdq
lahf
cmc
push
cmps
jne
std
jl
(bad)
cmp
xchg
call
sbb
dec
xchg
out
lods
jle
xor
dec
movs
sti
movs
xor
pop
and
sub
mov
std
dec
fcom
in
and
jbe
jmp
mov
fwait
jmp
jecxz
mov
add
lds
pop
rol
les
mov
xchg
ficom
jmp
mov
jb
pushf
and
xchg
cmps
jge
push
mov
int
inc
test
adc
mov
pop
push
shl
ins
cmps
cmps
loop
push
sbb
cmps
repnz
scas
in
pop
jmp
jmp
pop
inc
sti
dec
cld
(bad)
ds
sbb
inc
loopne
paddb
fcomp
test
mov
pop
jmp
repnz
xor
imul
jecxz
stos
ins
jns
jp
loop
inc
mov
xchg
scas
mov
jmp
(bad)
lahf
add
(bad)
fs
jnp
cmp
inc
sbb
emms
mov
aad
test
mov
mov
push
es
mov
and
jp
mov
cli
std
ss
inc
dec
inc
test
outs
ret
fcomp
ror
fstp
push
jno
outs
les
pop
pop
jl
stos
mov
dec
inc
adc
daa
and
jnp
scas
cmp
mov
xor
movs
push
sahf
(bad)
aad
call
aam
fistp
jmp
lods
push
pushf
fistp
pop
sbb
jo
mov
pop
mov
fsub
test
dec
xor
jno
push
jge
arpl
scas
xchg
jl
pop
lea
into
sar
add
jecxz
fmul
aas
into
pop
cdq
popf
push
std
inc
add
out
retf
outs
cmp
pusha
and
pop
xor
das
jmp
jo
push
or
std
lds
je
dec
lods
ret
jg
js
in
dec
std
inc
xchg
ret
mov
test
jbe
jae
jmp
loope
mov
cli
mov
mov
ja
push
push
push
push
aas
repz
jp
jb
pop
lea
mov
mov
loop
and
jp
stos
ins
aas
pusha
jmp
xchg
pop
fld
jecxz
jmp
inc
sahf
adc
scas
pop
inc
jge
jae
shl
outs
aas
ficom
and
std
pop
xor
and
xchg
pop
(bad)
out
push
lods
popf
push
mov
shl
xchg
add
sub
pop
jl
push
adc
pop
or
into
ficomp
imul
and
mov
ja
pop
adc
inc
mov
shr
jo
imul
scas
and
int3
push
(bad)
pop
cli
dec
sbb
pop
mov
scas
inc
fnstsw
xchg
jmp
inc
mov
out
lods
lods
ja
into
out
push
mov
jl
or
imul
cmp
xchg
cmp
mov
pop
gs
lahf
adc
mov
arpl
cld
sbb
mov
js
pop
add
xlat
aam
retf
fstp
fst
(bad)
lock
adc
lock
jo
rol
jo
jb
je
repz
add
retf
jmp
sbb
cmp
and
add
mov
and
dec
add
imul
repz
retf
inc
pop
je
add
popf
jle
mov
pop
mov
cmp
je
adc
lds
add
cmc
pop
stos
mov
aam
mov
test
jp
jge
and
mov
int3
mov
mov
xchg
cmp
jns
cdq
cmc
fld
adc
jne
pop
pop
lock
fdivr
push
dec
ja
mov
loopne
out
jae
inc
jmp
xchg
(bad)
into
outs
mov
xchg
fsub
xor
sbb
push
xor
in
(bad)
(bad)
icebp
pop
pop
xchg
jb
ins
add
lods
ret
cli
out
pop
adc
loopne
stc
into
dec
mov
rcl
sub
imul
dec
dec
xchg
and
daa
rol
and
loope
aad
aam
fstp
test
pop
mov
mov
pusha
inc
sbb
(bad)
repnz
pop
movs
add
js
xor
fnsave
ja
mov
and
sbb
pushf
call
mov
aam
hlt
adc
xor
shr
push
inc
out
mov
or
push
jmp
and
loop
sub
jmp
add
rol
daa
imul
and
dec
data16
ret
ret
xchg
xchg
fcomp
(bad)
xor
xchg
lock
test
mov
in
stos
cdq
shl
adc
cs
ss
mov
push
loope
pop
xor
or
or
push
xchg
pop
stos
and
dec
jge
ins
inc
or
es
fldcw
jp
sbb
das
mov
adc
push
mov
mov
adc
push
or
inc
xchg
and
sbb
test
js
into
sub
push
test
ror
call
loopne
xchg
leave
sub
jo
and
mov
mov
daa
dec
xchg
movs
movs
daa
cwde
dec
xchg
or
sub
push
jmp
pushf
cmp
fs
retf
mov
dec
xchg
and
movs
add
pop
jmp
push
(bad)
rcr
jo
add
andnps
jo
(bad)
mov
jmp
inc
mov
jp
clc
leave
ret
repz
mov
inc
mov
sar
xlat
pop
pop
dec
cmc
in
cmps
pop
mov
pop
ja
cli
sub
xchg
mov
fstp
sub
sbb
fcomip
xchg
cmps
dec
adc
ficom
dec
jo
adc
addr16
mov
mov
arpl
sti
dec
(bad)
jb
cld
adc
fs
nop
shr
arpl
adc
and
call
xchg
xor
xchg
pop
add
(bad)
pop
inc
pop
sbb
sbb
je
pop
inc
mov
adc
fld
and
clc
ja
cli
mov
rcr
dec
or
aas
cmc
lds
sbb
push
add
in
out
mov
inc
jmp
push
cld
sbb
lea
test
data16
dec
mov
imul
add
pop
mov
in
pop
jmp
sti
ret
rep
fisub
fsubr
das
les
and
retf
dec
sub
shr
sub
cmp
xchg
pushf
cmps
dec
xchg
xchg
sub
push
dec
sub
dec
es
and
dec
adc
movs
or
push
pushf
add
or
jae
loopne
cwde
and
ds
inc
jmp
outs
(bad)
inc
push
or
sub
inc
sahf
(bad)
xchg
pop
(bad)
das
cmp
fdiv
retf
popa
mov
xlat
(bad)
push
jg
(bad)
jg
push
sbb
icebp
outs
bound
cmp
jmp
mov
mov
cmp
sti
mov
mov
dec
mov
and
sub
arpl
cdq
and
and
push
inc
jmp
jmp
movs
fwait
loopne
and
and
daa
or
xchg
call
ja
retf
cli
mov
out
(bad)
add
add
imul
dec
arpl
jmp
repz
sbb
shr
mov
(bad)
mov
(bad)
jo
not
into
lods
push
push
les
iret
aam
lahf
dec
xchg
test
int3
jg
pop
in
fisttp
movs
in
push
fisttp
xchg
call
out
aas
out
inc
test
int
shl
les
push
dec
and
dec
adc
bound
test
xchg
lahf
loopne
cmp
push
or
cdq
pop
adc
scas
shl
es
sbb
or
aam
idiv
aad
dec
std
sbb
mov
mov
push
popf
ds
cs
test
lea
imul
push
(bad)
sbb
into
xor
in
cmp
(bad)
out
pop
test
out
outs
fistp
dec
pop
cmp
pop
mov
adc
cmps
cmp
retf
js
jl
and
xchg
mov
js
xchg
out
inc
stos
dec
in
and
cwde
sar
add
mov
ss
add
std
push
cmp
sahf
fsubr
loope
je
fist
or
dec
cli
mov
outs
scas
daa
and
jge
inc
push
lahf
dec
(bad)
mov
jecxz
(bad)
loope
xor
mov
mov
popf
sahf
fild
(bad)
retf
adc
xor
inc
shl
inc
iret
jmp
dec
sub
test
add
pop
aas
pop
inc
pop
ss
ss
idiv
std
(bad)
jge
std
inc
inc
test
dec
jmp
jge
sahf
cmps
and
in
(bad)
mov
xchg
or
and
ret
in
mov
jo
cmp
mov
mov
pop
test
js
dec
shr
sub
ins
pop
aaa
pop
inc
pop
in
ret
imul
scas
cmp
mov
sub
xchg
xor
call
adc
test
int3
cli
cmp
add
pop
and
xchg
push
lods
pusha
xchg
je
or
mov
and
add
shr
pop
push
call
xor
sub
addr16
push
xchg
loopne
xchg
add
sar
cmp
xchg
(bad)
xchg
lahf
jmp
shr
jae
mov
cld
jmp
aaa
cmps
rcl
sub
add
mov
test
pop
mov
xchg
(bad)
jo
mov
shl
movs
add
dec
dec
retf
dec
or
lods
je
mov
mov
scas
pop
jno
mov
or
mov
hlt
out
mov
out
dec
fild
add
fst
fcomp
test
sbb
cs
int3
jo
jmp
cmc
xchg
jle
(bad)
dec
fcmovne
pop
mov
outs
lods
lds
repnz
dec
sub
inc
adc
lds
dec
je
neg
push
adc
neg
cmp
add
mov
mov
mov
pushf
jmp
sbb
jg
out
hlt
outs
inc
aad
fwait
aad
and
add
aas
inc
jecxz
sti
addr16
pop
call
adc
les
cmc
clc
lods
or
pushf
(bad)
push
jae
mov
sti
cmp
inc
dec
sub
mov
mov
dec
jae
cmp
pop
out
inc
sbb
sub
pop
aam
repnz
push
imul
fnstsw
ins
mov
out
arpl
or
hlt
sahf
mov
adc
xor
xor
imul
addr16
or
jle
out
mov
fistp
mov
lods
aas
fistp
inc
inc
sbb
aam
out
aaa
inc
inc
imul
mov
push
out
inc
cmc
jmp
clc
mov
stc
xchg
mov
(bad)
jg
movs
idiv
adc
push
ss
ss
lahf
inc
(bad)
sbb
inc
xor
call
inc
mov
rol
imul
mov
outs
and
shr
jecxz
push
mov
test
xlat
jle
pop
icebp
jg
(bad)
and
push
jge
mov
in
jle
aad
scas
pusha
addr16
outs
cli
dec
aas
inc
enter
imul
xchg
sub
aad
repnz
inc
hlt
movs
pop
retf
pop
test
aad
out
and
mov
into
rcl
sbb
(bad)
imul
aam
xchg
inc
push
push
test
add
pop
arpl
int3
inc
mov
add
and
movs
movs
sub
dec
or
dec
loope
(bad)
inc
sti
mov
lods
xchg
rcr
ret
mov
mov
gs
mov
jmp
hlt
jne
add
xor
mov
test
cmp
cmp
push
aas
jns
mov
and
out
ins
hlt
lods
sbb
aas
call
jb
pop
cmp
clc
(bad)
cmc
test
test
dec
sahf
push
dec
leave
cmp
add
inc
sti
cwde
js
pop
ror
xchg
idiv
dec
jmp
add
xchg
retf
sar
out
xor
cdq
or
scas
aam
gs
jg
cmp
outs
mov
int
pop
cmc
mov
jecxz
cmp
sub
hlt
or
jmp
aad
mov
(bad)
cmps
jecxz
into
fucomip
cs
rcl
inc
inc
(bad)
retf
or
xor
ins
jp
enter
std
fcmovnu
inc
push
push
jae
dec
cmp
arpl
mov
xchg
jl
fsub
xchg
pop
out
adc
add
and
sbb
jmp
out
adc
dec
scas
sub
fmulp
lea
in
jg
bound
xchg
rcr
pop
call
inc
pop
(bad)
cmp
(bad)
hlt
out
sbb
icebp
jb
push
jmp
outs
scas
je
inc
popf
sbb
mov
popa
ror
and
jns
inc
(bad)
jnp
loopne
aam
or
ret
ja
popa
loope
mov
xchg
imul
dec
push
cli
lods
xchg
or
dec
inc
jns
inc
pushf
aad
rcr
in
hlt
lahf
lods
fnstcw
retf
bts
mov
nop
aaa
sbb
cmp
add
inc
push
ins
mov
sub
mov
cmp
cs
or
push
inc
cs
adc
mov
add
out
or
stos
mov
movs
fs
jnp
daa
imul
aam
cmp
xor
(bad)
int3
mov
arpl
arpl
(bad)
xchg
mov
ror
(bad)
mov
lods
cmp
cmps
idiv
cmp
jmp
cmp
add
cmp
idiv
mov
iret
xchg
xchg
test
pop
jmp
mov
dec
shr
sbb
in
pop
mov
ja
cmp
inc
cmp
pop
adc
push
xchg
aad
push
inc
dec
cmp
mov
jl
lods
push
cmc
jno
fnstenv
jl
xor
jmp
mov
in
xchg
test
pop
jmp
jp
dec
js
sbb
and
lahf
adc
test
pushf
scas
test
xchg
std
(bad)
or
retf
xor
mov
fstp
adc
sbb
shr
mov
call
jno
adc
cmp
cmp
jg
mov
mov
out
call
push
adc
bound
sar
gs
sbb
cwde
jo
repnz
sbb
jmp
mov
dec
cmp
mov
mov
mov
xchg
xchg
jge
imul
mov
mov
xor
leave
push
(bad)
fisttp
pop
out
iret
or
mov
outs
test
adc
test
ds
jbe
(bad)
jo
out
ror
mov
cwde
ja
pop
out
adc
lods
aad
scas
add
in
mov
aas
and
lahf
jnp
outs
adc
mov
mov
stc
jb
dec
push
in
cld
call
cmp
movs
fisttp
addr16
fcomp
push
sbb
in
lock
loopne
in
and
jg
add
jbe
fdivr
icebp
loop
inc
(bad)
jmp
in
push
sbb
lock
xchg
loopne
pop
cli
stos
jmp
into
data16
dec
jmp
fisubr
cmc
sub
out
icebp
jg
xchg
ja
pop
aas
leave
ja
pop
cwde
xchg
in
xor
scas
std
shl
add
jnp
xchg
sub
push
dec
jge
add
cli
xor
xor
xchg
std
add
add
cmp
mov
push
add
fild
fisttp
mov
and
jecxz
das
push
xlat
xor
dec
jmp
xlat
pop
icebp
dec
fnstenv
out
int
jmp
cmp
sar
jmp
jne
stos
jge
sbb
sub
mov
push
mov
fcmovu
sbb
test
(bad)
(bad)
nop
push
sahf
je
cmps
xchg
and
test
cli
fst
inc
cs
mov
add
push
test
test
sbb
inc
hlt
fild
out
rcl
push
dec
int3
jb
pop
push
add
inc
jo
cdq
rcl
xor
shr
mov
mov
rcr
loope
adc
rcr
inc
pushf
push
sbb
or
addr16
push
scas
and
gs
test
sub
adc
dec
or
sbb
movs
sbb
sbb
push
add
xor
push
or
xchg
test
xchg
div
cmp
or
loop
push
retf
lds
xchg
jge
mov
dec
bound
jo
stos
jno
push
adc
and
add
push
retf
inc
fld
ret
push
mov
cmovnp
jno
cmp
dec
mov
dec
movs
lods
in
cmps
sub
push
inc
ins
mov
dec
push
(bad)
ret
push
push
call
loopne
dec
xor
and
daa
dec
dec
retf
and
push
movs
and
xchg
xchg
mov
and
je
movs
xchg
daa
inc
dec
cmps
dec
and
mov
push
xchg
sbb
jb
push
add
push
test
je
out
les
jg
push
mov
dec
movs
adc
cld
pusha
loope
sub
popf
add
sar
std
jno
pusha
into
mov
inc
aam
pop
cli
cmc
xchg
rol
imul
cli
dec
pop
lock
adc
les
retf
mov
jmp
sub
mov
(bad)
push
imul
cli
scas
aaa
dec
movs
in
cmp
sub
std
retf
out
push
adc
lods
xchg
fistp
pop
jmp
dec
jmp
pop
aas
xor
aas
jmp
cmp
(bad)
xor
cli
xor
vfrczsd
inc
pmulhw
(bad)
inc
jmp
mov
xchg
sub
ja
xor
idiv
(bad)
addr16
jge
jg
cmps
jg
mov
into
das
enter
sti
into
and
cdq
hlt
push
jnp
sub
xchg
mov
ja
dec
mov
xor
pop
nop
fisubr
jbe
mov
mov
mov
pushf
xlat
cmp
imul
movs
stos
push
ret
jp
pop
and
push
ds
das
fidivr
gs
cdq
popa
inc
test
sub
popf
ja
(bad)
pusha
idiv
cli
iret
repnz
daa
inc
aaa
xchg
daa
stc
ins
jae
repnz
xchg
xchg
jmp
shr
inc
pop
or
adc
cmc
jg
add
shl
inc
test
pop
pop
xchg
adc
in
add
jmp
xchg
sbb
pop
mov
sbb
fwait
jbe
int
(bad)
repz
ins
stos
loopne
ficomp
(bad)
jnp
adc
pop
xchg
shl
arpl
inc
mov
into
lahf
popa
mul
mov
add
adc
mov
jp
clc
jne
lahf
xor
test
sbb
jg
xchg
ret
std
jbe
mov
into
dec
or
push
hlt
sub
inc
cmc
pop
ds
hlt
out
cli
mov
mov
adc
cli
test
or
or
dec
xor
movs
movs
ficom
and
xor
cmp
cmps
in
cwde
mov
(bad)
and
adc
imul
dec
loope
lahf
push
mov
ins
call
int3
mov
loopne
dec
sar
add
mov
jbe
dec
cli
ins
ds
cli
in
dec
vandnps
push
mov
or
inc
cmp
imul
aad
outs
mov
sub
cli
dec
aas
mov
jg
jbe
inc
and
pop
fidivr
jmp
inc
add
xchg
xor
push
inc
push
(bad)
and
aaa
out
(bad)
inc
sbb
sahf
mov
mov
xchg
dec
mov
jg
pop
jnp
cli
push
push
dec
jg
xchg
ret
retf
pop
std
dec
mov
inc
mov
xor
or
sub
cmps
sub
adc
dec
inc
and
xchg
mov
nop
leave
cmp
or
dec
rol
xchg
xchg
or
or
sub
test
add
and
mov
loop
mov
sar
add
inc
iret
cmps
mov
push
xor
out
pop
into
push
std
dec
mov
pop
jg
jp
cli
es
mov
inc
call
mov
adc
add
in
loop
ret
in
lea
ins
cmc
repz
xor
jle
(bad)
mov
(bad)
movs
inc
stc
icebp
jno
outs
js
bound
sub
add
sub
dec
and
mov
lock
add
(bad)
adc
inc
bound
adc
cdq
and
push
mov
mov
push
iret
lods
fsubr
inc
bound
inc
add
add
mov
clc
xor
aas
push
(bad)
fist
jnp
sub
pop
add
mov
adc
pcmpgtw
out
mov
mov
cmp
scas
jmp
out
push
iret
cld
(bad)
mov
adc
and
push
dec
movs
or
dec
es
and
jno
sub
mov
xor
test
or
fcomi
psllw
add
mov
adc
ret
mov
push
or
ds
adc
cli
test
mov
jnp
inc
push
sti
mov
jle
cmc
(bad)
cmc
pop
xlat
cdq
std
adc
aaa
repz
scas
bound
shl
add
jnp
movq
dec
not
(bad)
(bad)
push
(bad)
dec
xchg
mov
pop
js
jmp
or
and
mov
mov
(bad)
jge
cmp
mov
into
mov
in
scas
pop
retf
repz
or
(bad)
shr
add
push
dec
inc
je
fisubr
fmulp
cmc
push
xbegin
fsubr
add
mov
inc
in
stc
retf
jg
xchg
jo
movs
cmps
sar
pmulhuw
push
imul
inc
les
lea
push
cdq
jae
rdtsc
out
(bad)
test
scas
test
outs
mov
gs
and
pop
mov
jb
fcomip
adc
add
lods
jge
ret
shl
or
push
inc
movs
dec
cdq
cmp
test
out
test
stc
(bad)
fld
clc
aaa
jg
das
in
or
std
cdq
xor
jg
(bad)
imul
jmp
xor
imul
in
cmp
and
icebp
retf
sub
sub
jne
aas
pop
inc
pop
je
or
sbb
lods
inc
(bad)
fwait
pop
adc
mov
int3
xchg
push
push
(bad)
std
adc
inc
std
adc
sub
sbb
out
leave
(bad)
adc
and
dec
sub
add
mov
push
in
add
inc
(bad)
data16
adc
popf
sbb
add
out
pop
cld
mov
xchg
lea
mov
or
and
call
int3
outs
pop
push
jo
in
adc
aas
lock
ss
(bad)
outs
xor
inc
pop
jmp
enter
out
and
frndint
test
inc
xchg
retf
xchg
mov
and
sub
push
jne
or
xlat
(bad)
(bad)
fdiv
jle
cmp
mov
aaa
pop
inc
std
pop
cwde
mov
cmp
push
mov
call
pop
sub
or
mov
xchg
xchg
into
fidivr
xchg
adc
inc
aam
add
inc
lahf
push
inc
xchg
cmp
cmps
or
sub
pushf
fwait
xor
pop
push
mov
rol
and
add
scas
scas
sub
inc
jnp
shl
mov
leave
cli
(bad)
mov
js
mov
jae
inc
movs
cmc
stos
xor
loopne
mov
add
pop
jg
lods
(bad)
pop
push
push
dec
and
nop
nop
enter
sbb
ret
jmp
hlt
loop
(bad)
cld
loopne
pushf
movs
(bad)
in
add
push
fs
ins
push
pop
push
mov
fidivr
or
popf
(bad)
ficom
adc
inc
cmc
inc
not
push
fs
xor
jg
std
and
cmp
pop
pop
cmps
imul
fdivr
jmp
push
aas
xor
rcl
test
and
or
stos
cmp
ss
out
scas
neg
aad
pop
or
cli
aas
(bad)
in
cs
or
shl
push
inc
sahf
stos
std
arpl
mov
gs
gs
push
cmp
aas
fdivr
sub
pop
xchg
mov
out
xchg
mov
xor
mov
jbe
icebp
mov
mov
outs
mov
aas
xchg
lods
aas
adc
scas
lods
repnz
loop
shl
xchg
or
arpl
pop
sbb
adc
shl
scas
aas
shl
in
in
ja
fstp
fwait
addr16
and
dec
jle
xchg
sahf
(bad)
repz
cmc
pop
xchg
mov
jb
inc
mov
rcl
sub
push
lahf
lods
jno
fstp
stc
scas
(bad)
cmps
out
stos
xchg
xor
xchg
xlat
or
mov
add
add
fild
hlt
xchg
inc
jge
sub
mov
fisttp
push
or
aaa
pop
enter
imul
(bad)
das
not
outs
les
imul
test
push
jnp
jbe
int3
adc
(bad)
and
test
stos
xor
cmc
jg
push
mov
push
loop
mov
shl
mov
loope
test
je
dec
lahf
in
cmp
stos
sbb
sbb
or
jg
pop
out
ds
jo
test
das
push
push
repnz
syscall
sbb
scas
adc
or
out
adc
mov
xor
data16
pop
sti
ret
push
mov
pop
push
fild
ret
jmp
stc
dec
pop
out
das
mov
push
mov
imul
ret
inc
and
mov
or
xor
xchg
lods
rol
sahf
xchg
imul
lods
mov
retf
mov
pop
in
scas
aad
into
cwde
dec
jae
(bad)
aas
cmp
lea
fst
jbe
mul
imul
adc
sub
sbb
je
stos
and
mov
out
daa
lods
pusha
sbb
cmp
loop
clc
sti
xchg
mov
div
or
movs
scas
test
pop
inc
mov
sbb
jbe
add
inc
mov
cli
adc
jl
cmps
iret
inc
test
add
shl
or
pop
aad
push
or
fsubp
imul
fld
dec
aaa
mov
mov
test
sbb
pop
ficomp
inc
push
fs
xor
js
dec
sub
pop
push
jge
and
fld
imul
jge
jmp
call
das
(bad)
cmp
call
mov
(bad)
xor
sub
cld
pop
dec
dec
in
frstor
jge
ins
lods
dec
pusha
hlt
cmp
sahf
movs
pop
call
add
pop
std
push
arpl
sub
in
fs
out
xor
cvtps2pi
sbb
pop
sbb
jnp
ja
mov
cmp
sbb
call
xchg
ror
shr
not
or
in
mov
aas
stos
into
hlt
mov
scas
xchg
(bad)
out
xor
(bad)
popf
popa
sahf
mov
jo
sti
(bad)
dec
lahf
fcom
xor
inc
mov
in
jno
bnd
mov
adc
scas
jecxz
out
mov
bound
sub
xor
adc
shl
aaa
call
jo
sbb
jbe
dec
add
js
lods
ror
and
imul
jb
mov
adc
cli
cmp
les
imul
pop
ret
jbe
lds
enter
test
lahf
data16
jnp
das
sbb
lock
addr16
xchg
cmp
adc
outs
in
int
cmc
jno
sub
(bad)
nop
push
or
aaa
xchg
aad
out
ret
inc
repnz
or
ja
mov
mov
push
(bad)
pop
arpl
xchg
movs
test
jbe
pop
mov
in
xchg
lods
retf
cmps
xchg
fstp
(bad)
arpl
fisub
dec
push
cmp
mov
sub
je
cmp
fstp
xor
mov
jno
(bad)
adc
xchg
sbb
(bad)
enter
add
add
lods
test
gs
cmp
mov
sti
push
(bad)
ins
outs
jbe
cwde
repz
mov
mov
push
movs
xchg
icebp
lods
adc
add
cmp
sbb
sbb
push
cwde
dec
xlat
outs
jbe
add
add
sub
retf
jmp
inc
stos
(bad)
jmp
jg
retf
jo
mov
xchg
cmp
mov
imul
daa
shl
repnz
mov
div
hlt
cmp
xchg
or
pop
test
jb
addr16
jmp
iret
dec
out
je
dec
xchg
and
sbb
call
mov
jecxz
pop
xchg
aas
adc
(bad)
fistp
fisub
cmc
jo
movq
push
push
add
(bad)
(bad)
mov
adc
or
mov
mov
cmp
sub
pusha
jge
mov
add
ret
cli
fild
std
xlat
jle
sub
add
add
lea
adc
shl
imul
fld
retf
(bad)
(bad)
bound
mov
fwait
push
sub
jnp
mov
add
stos
xor
cmp
push
loopne
fisub
inc
aaa
jne
jbe
xchg
xor
push
dec
pop
fs
inc
or
add
and
or
inc
test
dec
push
scas
and
xchg
test
sub
movs
dec
mov
shl
adc
adc
pop
stos
jb
xchg
ror
push
xchg
xchg
dec
dec
mov
inc
mov
add
adc
sub
dec
and
movs
jmp
sub
push
xchg
dec
and
enter
xchg
xchg
movs
jmp
cdq
cmp
dec
and
xchg
or
movs
test
call
jmp
and
mov
cdq
add
dec
jnp
icebp
imul
add
push
inc
push
inc
sbb
push
test
call
pushfw
sbb
mov
int
push
sti
mov
(bad)
lods
mov
stos
shr
movs
push
imul
in
cmc
test
push
push
mov
lock
mov
sbb
inc
adc
jns
sub
sub
or
push
push
xchg
leave
adc
mov
movs
je
xchg
dec
dec
in
dec
or
sub
push
xchg
dec
pop
xor
xchg
jno
movs
and
sub
loopne
shl
lahf
mov
push
sub
int
pop
(bad)
xchg
pmulhw
jg
mov
(bad)
aas
or
inc
adc
sbb
pop
test
jae
cld
or
xchg
ficomp
std
aas
pop
mov
jle
je
mov
mov
mov
out
mov
retf
scas
push
lahf
mov
cmp
push
(bad)
cmc
mov
adc
add
inc
jne
cli
(bad)
(bad)
mov
pop
inc
mov
aam
mov
sahf
jecxz
aaa
pop
in
inc
movs
push
xor
inc
fisub
and
jo
xchg
test
shr
jp
pop
imul
test
(bad)
cmc
scas
icebp
imul
jnp
(bad)
ja
xchg
scas
bts
int
cs
ja
aas
aad
call
xchg
cmp
fidivr
jecxz
inc
cmp
jge
add
xchg
(bad)
mov
std
pop
jge
stos
shl
(bad)
jge
inc
lock
mov
enter
std
or
mov
outs
sar
sbb
leave
test
jle
enter
out
add
aam
dec
jae
arpl
inc
mov
push
mov
inc
push
mov
ins
and
ins
cmp
mov
jg
arpl
dec
dec
jb
pop
popa
and
jo
push
loopne
add
adc
sub
jo
cmp
test
xchg
in
(bad)
mov
ja
into
not
and
inc
inc
push
mov
fimul
outs
sub
out
mov
inc
repnz
xor
dec
jae
adc
jg
mov
mov
scas
and
mov
sar
aas
dec
iret
clc
mov
dec
mov
jmp
icebp
jg
jne
adc
fnstcw
cmp
out
or
lods
inc
or
xchg
test
xchg
xchg
test
adc
jl
push
sbb
daa
dec
and
xchg
dec
sub
dec
dec
sub
ss
pop
push
mov
or
stc
cmp
xchg
(bad)
jmp
mov
outs
push
jmp
ds
or
and
je
mov
ins
movs
pop
fist
shl
(bad)
xchg
scas
cld
adc
test
ins
jne
mov
pop
mov
jae
bound
addr16
jmp
test
dec
fs
xchg
dec
adc
sub
jo
cmp
adc
movs
sub
push
xchg
xchg
add
ret
ja
mov
mov
cld
call
lahf
pop
mov
test
jecxz
pusha
ffree
out
push
mov
enter
ins
std
pop
cli
ret
popa
stos
out
mov
push
inc
cli
inc
jg
xor
call
outs
outs
adc
xor
(bad)
mov
int
lock
inc
scas
dec
nop
xor
jo
dec
push
or
pop
cmp
adc
call
lods
mov
cmp
pop
(bad)
jbe
fdiv
xchg
cmp
sub
fmul
sti
std
aas
cli
dec
jns
push
or
xchg
mov
clc
cdq
xchg
out
cs
js
(bad)
adc
add
pop
mov
lods
in
(bad)
cli
cwde
mov
xchg
iret
iret
pop
pop
push
pop
jg
mov
out
loopne
cmp
cmp
sbb
lock
lock
pop
data16
psubsb
fisubr
xor
stos
mov
lahf
pusha
sub
dec
fisttp
add
gs
sub
std
cmp
(bad)
test
inc
cmp
dec
nop
dec
jnp
scas
(bad)
xor
(bad)
inc
or
push
cmp
ror
icebp
add
and
mov
sub
mov
pusha
inc
aad
inc
shl
inc
push
xor
cmc
mov
mov
mov
jge
retf
pop
scas
jge
retf
jmp
push
out
xor
aas
jecxz
pop
daa
aam
test
xor
loopne
mov
ja
inc
std
xor
sub
jmp
pop
jmp
sbb
enter
mov
movs
or
ror
cld
gs
mov
cmp
arpl
xlat
cld
out
sub
(bad)
sub
mov
test
dec
and
add
mov
int3
stos
stos
mov
cmp
inc
pop
pop
out
xchg
cld
(bad)
clc
push
(bad)
dec
fwait
sub
stos
test
jge
jle
sbb
push
jne
pop
pop
(bad)
into
sbb
loope
cld
cli
jg
push
cld
pop
cld
or
sbb
test
std
pop
(bad)
cld
xchg
repnz
push
dec
adc
movs
dec
push
xchg
dec
xchg
fwait
pop
sbb
mov
loop
jne
cld
cmc
scas
cld
sub
jmp
ja
add
sti
(bad)
popa
mov
jns
stos
pop
dec
sbb
pop
xor
int
mov
or
sbb
mov
retf
aaa
xchg
ret
inc
cld
das
cld
xor
int3
sar
push
cmp
inc
and
scas
test
pusha
mov
mov
aam
add
retf
pop
cmp
fwait
dec
add
mov
or
loop
hlt
ja
jmp
(bad)
into
and
xor
lds
popf
pop
mov
(bad)
jb
cld
jp
mov
mov
pop
stc
aad
div
icebp
inc
hlt
call
popa
aaa
stos
jnp
dec
not
sub
mov
leave
scas
and
daa
arpl
pop
pop
jmp
sub
xchg
repnz
retf
or
or
mov
cmp
sti
stos
jge
cmps
jmp
jle
aad
out
das
test
std
mov
sar
mov
sar
mov
iret
lods
push
cmp
int3
jmp
bound
ins
fcomp
je
mov
push
inc
mov
sub
adc
mov
or
xor
jge
dec
and
arpl
imul
out
pop
js
(bad)
mov
ds
psrld
dec
stos
fwait
add
shr
out
(bad)
ins
cwde
div
shl
hlt
mov
push
xchg
mov
and
mov
jno
cli
(bad)
out
push
cdq
sbb
xchg
lods
movs
sti
stos
mov
cmps
ja
pop
scas
xor
xor
out
into
outs
dec
sub
fcmove
ret
cmp
psubq
out
stos
enter
(bad)
fimul
and
push
xchg
xlat
xchg
aaa
jecxz
(bad)
cmc
inc
jmp
push
lea
aaa
xor
or
call
ins
clc
in
mov
movs
es
jbe
jo
cmps
adc
xchg
adc
pop
add
and
cmps
push
mov
sar
out
aam
sbb
xlat
sub
test
or
ror
sbb
mov
xor
add
mov
sbb
(bad)
cli
cmp
cmps
mov
add
stos
cmp
pop
adc
(bad)
mov
jp
and
xchg
mov
push
xor
cwde
jo
movs
inc
inc
cwde
out
fist
pop
cmp
cmp
inc
(bad)
cli
mov
pop
dec
daa
jnp
xor
fwait
test
pusha
nop
mov
fiadd
xor
repz
lea
mov
sbb
xchg
sub
shl
sbb
mov
cmc
sbb
sub
push
push
popa
mov
mov
mov
or
pcmpeqw
aam
ret
aas
inc
repz
inc
cmc
bound
sbb
lock
cld
ficomp
mov
jecxz
add
cmp
test
mov
test
dec
(bad)
xchg
lock
xchg
push
jl
adc
mov
mov
mov
fdiv
shl
out
sar
and
push
ins
xchg
mov
jmp
lods
mov
popf
or
sub
add
imul
es
mov
dec
lahf
sub
fild
(bad)
loop
push
loope
sub
cmp
icebp
nop
(bad)
cmc
ja
cli
(bad)
fisttp
fdivr
aad
mov
and
das
jmp
fistp
aam
scas
xor
addr16
cld
in
mov
arpl
add
mov
movs
aad
mov
mov
mov
aad
outs
cld
and
cmp
sti
aas
inc
dec
jmp
mov
inc
sbb
inc
pop
push
jmp
fimul
icebp
shl
stc
mov
lea
arpl
daa
loope
frstor
or
call
xchg
mov
mov
ret
int
cmps
jnp
sub
mov
int3
call
aaa
mov
fwait
test
loop
inc
jne
ja
(bad)
out
jg
sub
(bad)
cmp
shrd
test
cld
call
dec
mov
add
in
std
ret
test
test
imul
jae
add
popa
inc
movs
sti
cmp
js
mov
and
fild
add
out
out
arpl
mov
inc
dec
adc
mov
lock
(bad)
push
in
mov
pop
mov
out
inc
std
lahf
jbe
push
mov
sahf
dec
sbb
stos
push
(bad)
shl
sar
ja
jnp
clc
xlat
dec
jb
sub
adc
xchg
jne
lods
in
jo
loopne
sub
mov
sbb
mov
xlat
mov
inc
and
out
jmp
jae
jno
dec
cmps
stos
inc
retf
idiv
mov
daa
(bad)
sar
add
mov
mov
mov
cmp
shl
retf
sti
or
addr16
mov
jnp
rcl
sbb
xor
fild
jo
scas
shl
push
ffree
mov
fsubr
fld
femms
jmp
(bad)
mov
(bad)
in
xor
pop
push
mov
js
dec
xchg
pop
cs
pop
or
je
int
scas
shl
out
sbb
icebp
jnp
sbb
ins
(bad)
pop
inc
mov
xchg
fcom
mov
xchg
push
cmc
pop
sbb
aad
cmp
jg
scas
hlt
inc
scas
push
shl
ds
jl
sub
(bad)
fwait
out
out
pop
jmp
hlt
sahf
jnp
inc
or
inc
mov
sbb
scas
test
mov
(bad)
cmps
add
jno
add
clc
repnz
xchg
ss
sub
gs
movs
sbb
jg
xchg
dec
js
xchg
jge
aad
loop
ret
cmp
cli
jmp
sub
xchg
and
lahf
adc
lea
push
mov
cmp
cmp
mov
mov
jmp
pushf
rcr
push
adc
and
bound
push
test
cwde
lods
xor
ficom
test
or
inc
js
adc
mov
mov
jmp
ret
mov
sub
loope
adc
fs
and
cmp
inc
js
rcpps
or
call
repz
rcl
rol
sub
dec
dec
xchg
xchg
dec
and
rcl
dec
xor
je
xor
js
or
and
xchg
pushf
es
and
xchg
pop
dec
xor
cs
push
dec
adc
push
movs
movs
in
ror
idiv
vphaddbq
cwde
cmp
das
adc
xchg
(bad)
sub
std
adc
push
xor
loopne
jg
adc
pop
cli
mov
(bad)
xlat
jle
neg
stos
jne
or
std
retf
sahf
cmp
inc
inc
sbb
jo
lods
fild
shl
jns
ret
push
xchg
inc
xchg
xchg
xchg
xchg
leave
retf
dec
and
movs
repz
cdq
cmp
sbb
movs
dec
dec
and
dec
dec
dec
popf
and
and
push
dec
dec
dec
and
adc
or
sub
sbb
loope
daa
add
cmps
cmps
call
xor
(bad)
inc
mov
shr
add
imul
mov
pop
and
xlat
imul
frstor
inc
aas
inc
movs
mov
ret
xor
test
push
mov
mov
sar
add
pop
pop
clc
shr
sbb
add
inc
cld
(bad)
jg
pop
mov
stos
daa
adc
retf
cmp
xor
pushf
mov
or
mov
jbe
jb
ss
cmp
lods
push
mov
xacquire
inc
jbe
and
sar
shl
dec
inc
jmp
cmps
ins
mov
cli
and
xor
(bad)
std
mov
xchg
or
fmul
jbe
sub
inc
jge
in
cmc
cmp
jecxz
dec
jb
xor
add
jp
pushf
and
std
ja
mov
icebp
gs
neg
imul
imul
pop
inc
dec
mov
outs
jge
xchg
or
std
cmps
mov
movs
mov
loopne
inc
jg
test
mov
hlt
fdivr
out
inc
iret
push
cmp
pop
mov
and
adc
bound
imul
mov
dec
arpl
hlt
mov
jp
cmp
std
jbe
fcomip
aam
push
arpl
jmp
mov
in
mov
xchg
enter
xchg
cmp
sbb
repz
pop
imul
out
inc
rcl
scas
out
jmp
mov
(bad)
dec
cmps
inc
std
or
add
call
push
cli
movs
cmc
das
in
push
outs
data16
loope
sbb
(bad)
stc
outs
std
jmp
repz
ror
movs
and
gs
add
inc
xchg
mov
stos
ficomp
(bad)
jb
nop
mov
xor
je
dec
cld
sbb
add
jmp
xchg
sub
dec
mov
pop
loope
jo
stos
cmp
data16
push
scas
ror
pusha
jnp
dec
and
(bad)
cld
aad
jne
icebp
jae
or
ret
fcmovnu
(bad)
rcr
mul
sar
sbb
xchg
(bad)
xchg
les
mov
add
push
repz
xchg
sbb
mov
mov
clc
dec
push
mov
retf
dec
inc
and
ror
sub
test
nop
or
test
lods
(bad)
test
xchg
mul
inc
inc
lods
(bad)
mov
out
jmp
push
imul
inc
lods
stos
xor
xchg
movs
fistp
lds
imul
add
push
test
push
test
or
pop
sbb
or
les
movs
test
push
ret
push
mov
inc
mov
adc
dec
xchg
dec
sub
pop
and
ret
adc
add
push
(bad)
int3
push
cmps
or
inc
xchg
adc
aam
std
arpl
mov
push
cmc
jno
adc
(bad)
clc
mov
sub
pop
sub
arpl
jle
jge
sbb
clc
jp
add
stc
push
pop
shr
adc
jnp
aad
loope
inc
ror
mov
in
or
push
movs
cmp
loope
leave
rcl
and
arpl
call
movs
xchg
inc
cmp
pop
pushf
iret
fmul
inc
gs
xchg
xchg
xlat
add
xor
or
or
or
add
sbb
pop
and
mov
aad
inc
iret
enter
fcom
mov
add
sbb
repnz
leave
leave
dec
xchg
xchg
call
and
jmp
outs
dec
xchg
push
cwde
std
arpl
cs
cmps
(bad)
or
push
test
lahf
pop
call
movs
xor
inc
mov
mov
and
pop
dec
mov
jge
inc
mov
div
(bad)
daa
ja
jmp
rol
(bad)
sti
cmp
sbb
loopne
adc
jne
mov
lods
cli
shl
jne
sbb
xor
arpl
iret
iret
scas
repz
iret
fstp
pop
retf
bound
ret
jecxz
aas
repnz
sbb
imul
daa
mov
inc
mov
xchg
xchg
cmp
(bad)
or
lods
int3
mov
xor
das
stos
push
aaa
and
idiv
fisttp
mov
fdivr
sbb
cwde
shl
shr
jmp
cmp
push
test
cwde
fiadd
(bad)
jbe
ins
inc
pop
sbb
shr
jg
neg
inc
mov
fisubr
add
inc
movs
pop
jne
xchg
push
loop
sbb
enter
pop
cdq
(bad)
lock
stos
ja
pop
sbb
mov
icebp
std
data16
jmp
dec
add
push
stos
icebp
int3
arpl
das
mov
jbe
arpl
pop
in
ss
cmp
fnstsw
xlat
inc
in
mov
sahf
imul
push
and
sub
(bad)
and
scas
push
dec
inc
pop
cmp
shl
lahf
clc
xor
xchg
popf
ds
push
nop
cli
pop
stos
sub
sar
add
inc
shr
adc
fist
inc
dec
mov
cld
gs
call
lea
ins
jmp
mov
std
int3
xchg
add
les
enter
add
int
inc
add
test
xchg
sbb
sbb
addr16
(bad)
std
sub
std
xchg
mov
cmp
icebp
jp
inc
ds
xchg
shl
mov
out
sti
loop
push
cmp
mov
jo
inc
push
outs
cli
cmp
popf
xchg
mov
loope
or
dec
pop
inc
dec
sub
mov
add
mov
push
int3
ja
mov
inc
pop
mov
pushf
ss
sbb
mov
clc
cmps
and
mov
int3
ret
pop
push
fisttp
ret
mov
ins
std
(bad)
stos
sub
xor
out
shr
sar
mov
xor
xor
das
cmp
cmp
dec
sbb
mov
sbb
push
xor
fist
pop
or
jae
or
lods
je
mov
sbb
sar
test
push
jae
mov
cli
inc
sub
js
inc
test
and
int
xor
ror
cmp
je
pop
cmp
mov
and
and
stos
popf
pop
jmp
jae
jge
mov
shr
loope
fld
or
mov
lods
(bad)
jp
repnz
adc
xor
jmp
cld
mov
inc
push
cli
mov
loop
(bad)
cmp
stos
psadbw
adc
cmp
rcl
dec
mov
xor
outs
sti
test
dec
ja
mov
cmps
pusha
fmul
push
jecxz
stos
push
arpl
dec
mov
(bad)
and
inc
xchg
push
mov
movs
pop
mov
movs
add
mov
cli
das
(bad)
mov
sar
push
mov
dec
xor
adc
ret
test
adc
mov
sbb
push
ret
mov
push
mov
xchg
stos
jge
lock
push
ja
int3
cmp
xchg
jge
aas
dec
fdivr
add
lds
retf
xchg
(bad)
dec
dec
push
or
ss
push
mov
imul
cmp
or
ret
push
(bad)
(bad)
in
mov
aam
aaa
ret
mov
gs
into
out
pop
jmp
sbb
mov
(bad)
jmp
cmp
inc
outs
aad
cmp
cmp
jmp
cmp
data16
sbb
jne
push
cli
lahf
aad
mov
mov
das
repz
cmp
xchg
popf
je
push
movs
jge
retf
jmp
aas
jne
test
or
inc
adc
idiv
loopne
sbb
rcl
clc
scas
lahf
das
test
dec
adc
mov
mov
mov
pushf
pop
icebp
add
inc
xchg
mov
push
jne
mov
lods
mov
in
call
push
pusha
ss
pop
add
fidivr
ins
add
rcr
add
mov
jmp
mov
fdivr
rcr
xor
inc
mov
into
add
stos
cmp
or
pop
in
mov
out
push
or
adc
or
cmp
add
daa
inc
xchg
into
xchg
dec
jae
jle
std
ret
xchg
pop
cli
inc
push
(bad)
jmp
out
(bad)
and
jg
call
jmp
add
out
sti
loop
daa
pop
(bad)
jmp
ror
outs
cmps
jnp
fstp
pop
aas
jecxz
xchg
jb
cwde
loop
xor
push
scas
push
inc
jns
das
arpl
enter
gs
xchg
les
mov
int
add
push
add
sub
xchg
data16
aad
test
jo
mov
mov
xor
(bad)
adc
mov
or
adc
cwde
sbb
dec
or
mov
pop
add
imul
inc
cmp
mov
xlat
gs
sbb
aaa
js
imul
push
in
jnp
adc
dec
mov
pop
add
xor
jl
mov
fsubr
push
jl
mul
push
pushf
(bad)
xor
mov
xchg
fwait
inc
mov
hlt
jl
adc
pop
jbe
adc
cmp
inc
push
enter
cmp
jp
cmp
cs
xor
dec
jo
or
xchg
outs
test
fbstp
ja
or
stos
je
xlat
xchg
icebp
mov
outs
push
jp
sbb
sbb
out
pushf
or
ja
mov
mov
cs
enter
jmp
rcl
ror
lds
cmp
sbb
add
clc
adc
lods
nop
dec
outs
into
pushf
div
xchg
pusha
pop
shl
xchg
sbb
inc
jnp
xchg
push
inc
pop
push
push
mov
scas
pop
movs
ins
cmp
daa
cmpxchg8b
(bad)
enter
(bad)
and
(bad)
loop
test
cmps
cmps
pop
jbe
sbb
retf
iret
loop
in
lds
fnstenv
outs
jnp
(bad)
rcl
std
push
in
sbb
call
mov
mov
retf
mov
sbb
aad
cmp
or
rol
dec
and
xor
test
ficomp
mov
std
sub
push
or
lahf
cmc
outs
movs
jne
pop
pop
cmps
repz
pop
push
cmc
xor
push
pop
inc
mov
test
fbstp
inc
sub
sub
enter
cmc
pop
nop
call
sbb
mov
outs
xlat
mov
xor
pusha
push
outs
call
mov
fst
or
das
sbb
jbe
jg
icebp
xor
add
or
(bad)
retf
dec
dec
pop
leave
jo
lahf
loop
cli
movs
clc
aaa
pop
lsl
je
jle
mov
dec
mov
iret
test
fild
iret
stos
(bad)
dec
xor
rdmsr
and
and
mov
mov
xor
gs
push
and
dec
aaa
daa
add
lea
or
jl
or
mov
cmps
fcomp
push
popa
and
jnp
out
sub
mov
or
hlt
mov
rol
loop
mov
shr
call
repz
dec
pop
popa
pop
push
xchg
leave
and
inc
repnz
inc
and
movs
xchg
sub
and
mov
cdq
and
sub
retf
sub
movs
xchg
movs
retf
je
and
shl
(bad)
test
inc
xor
sub
xor
jp
dec
xor
inc
xchg
pop
enter
mov
imul
popf
aam
jge
jmp
dec
sti
jg
mov
dec
stos
push
mov
cwde
das
adc
aad
test
cmp
stos
add
add
xchg
xchg
aas
mov
fild
xor
xchg
xchg
cmovne
fdivrp
mov
bound
xor
push
xchg
add
xchg
fwait
leave
and
xor
movs
adc
sub
and
push
movs
and
dec
adc
loope
sub
dec
and
shl
xor
push
leave
and
shl
sub
imul
je
xchg
mov
popf
xchg
cmps
je
(bad)
(bad)
inc
call
mov
add
cmps
scas
sub
cmc
(bad)
je
mov
enter
imul
mov
jp
pop
push
out
mov
mov
fadd
call
sar
inc
xchg
hlt
mov
(bad)
enter
mov
and
inc
dec
movs
sub
and
dec
adc
push
test
and
mov
dec
pop
dec
push
mov
xor
loope
adc
dec
xchg
push
and
ss
hlt
cmp
dec
add
div
inc
es
cli
(bad)
cli
das
xlat
mov
cli
or
xchg
xchg
jg
xlat
xchg
add
adc
jle
test
adc
fsub
pop
aas
sar
mov
hlt
jg
dec
fist
aaa
jmp
jge
jmp
pop
pop
mov
hlt
out
inc
inc
out
inc
icebp
dec
inc
or
xchg
pop
aam
push
jp
push
stos
movs
arpl
es
push
lea
cmp
imul
mov
cwde
push
mov
inc
das
(bad)
stc
stc
sti
mov
pop
ror
mov
fcmovnb
std
or
lahf
hlt
in
push
cli
xlat
pop
enter
jb
aas
mov
loopne
push
mov
mov
cs
mov
pop
retf
add
cmps
cmps
sti
or
out
mov
clc
and
dec
sahf
mov
neg
call
mov
mov
movs
push
inc
scas
sti
sub
ins
into
outs
rcl
cmp
sub
push
cdq
(bad)
xor
(bad)
adc
cld
clc
movs
into
scas
imul
gs
fscale
paddw
jmp
and
mov
pop
out
inc
and
mov
lahf
daa
pop
jg
xor
test
std
data16
aaa
sub
add
jle
sub
inc
dec
and
jb
and
pop
xlat
jg
mov
inc
mov
test
push
xor
ja
icebp
cld
aam
jmp
xchg
rol
mov
ins
cmp
retf
inc
test
(bad)
dec
push
inc
and
mov
sbb
shr
xchg
sar
adc
popf
jae
scas
outs
inc
jno
cdq
mov
jg
std
pop
not
mov
jae
sub
jb
loop
int3
add
jl
aad
test
pop
lods
jg
fmul
popa
lahf
inc
shr
aas
cli
(bad)
mov
xchg
loop
xchg
push
mov
fdiv
mov
mov
and
ja
xor
jmp
mov
adc
dec
sub
pusha
xchg
and
add
shl
movs
cmps
dec
loope
xor
push
shl
mov
jge
fild
inc
hlt
lods
ja
cs
dec
push
push
scas
je
jp
(bad)
fwait
mov
pop
inc
(bad)
jg
xchg
pop
jmp
es
aas
mov
hlt
cmp
xlat
stc
mov
xlat
jp
std
sbb
inc
ret
jo
das
outs
out
mov
jp
inc
jmp
dec
movs
inc
arpl
and
push
retf
adc
cmps
in
and
adc
cmps
mov
outs
cmps
imul
sbb
nop
aas
rcr
mov
addr16
push
mov
movs
(bad)
mov
and
push
inc
inc
cmc
jge
push
shr
hlt
outs
(bad)
mov
or
xchg
ss
test
dec
mov
push
mov
in
xor
jns
or
and
daa
or
xchg
dec
sub
jge
and
push
or
mov
inc
inc
arpl
outs
dec
(bad)
jmp
pushf
(bad)
xchg
and
fdivr
addr16
pop
(bad)
sti
cmc
cs
ror
add
in
mov
inc
test
jne
sub
sub
cmps
jmp
sbb
in
adc
inc
(bad)
add
cld
test
pop
ret
loope
sbb
mov
je
dec
adc
movs
mov
stos
fist
stos
jno
xchg
sub
pop
sub
repz
lods
pop
(bad)
nop
push
jb
mov
push
or
ds
cmp
daa
push
data16
pop
add
pop
push
clc
ror
mov
fcom
pop
mov
cmp
xchg
cmp
mov
(bad)
pop
(bad)
xor
cmp
push
fdiv
cli
fistp
and
inc
je
les
stos
test
aas
and
arpl
push
xor
ins
ret
mov
jnp
pop
fiadd
iret
xchg
cdq
lea
cmp
sbb
cwde
push
mov
sbb
push
aaa
mov
xor
mov
pop
shl
outs
rcr
jo
loopne
lods
mov
cmp
nop
loop
sub
and
popa
out
cld
jno
fcmovne
lahf
inc
inc
(bad)
inc
repnz
cmp
lods
ret
mov
xchg
mov
adc
test
inc
jg
jne
stc
pop
std
inc
lods
cmc
cmp
not
inc
mov
xor
xchg
ret
popf
push
jmp
out
call
test
mov
jl
dec
or
sahf
int3
push
mov
cmps
in
pop
sbb
cmp
fadd
into
mov
(bad)
lods
jbe
imul
outs
shr
dec
scas
iret
addr16
pop
cli
pop
(bad)
mov
jnp
imul
xchg
sar
ins
jg
mov
adc
inc
in
test
push
inc
push
call
mov
int
aad
push
cs
lods
ja
and
push
xchg
pop
cmp
push
adc
call
retf
in
dec
mov
jmp
pop
cli
iret
out
lods
rcl
xor
xchg
xchg
inc
push
mov
mov
fmul
xor
add
mov
mov
mov
push
cwde
and
dec
je
xchg
pop
outs
mov
(bad)
aas
hlt
stos
lods
xchg
mov
ja
xchg
push
enter
stc
cmps
cmps
cli
push
or
mov
and
pop
test
pop
sbb
xlat
fcomip
fwait
std
jne
adc
gs
outs
(bad)
jns
mov
cmps
sti
or
lods
shl
xchg
shl
aas
stc
pop
enter
sub
cmps
int
inc
(bad)
sbb
inc
(bad)
xchg
test
cmp
(bad)
repz
inc
es
ret
aad
out
test
loope
cli
jmp
push
(bad)
mov
mov
xor
or
xchg
(bad)
cmps
jne
lds
inc
xor
out
xchg
das
cmp
add
ins
push
inc
inc
aas
shr
scas
aam
mov
test
sbb
mov
jnp
std
push
fnstsw
push
outs
test
test
ins
cld
rol
(bad)
repnz
push
cmp
mov
out
mov
and
mov
loopne
repnz
ja
mov
cmc
add
ds
(bad)
in
fstp
not
imul
inc
mov
add
shr
mov
cmp
movs
leave
cli
mov
ins
push
push
mov
lods
inc
sub
push
movs
cmp
mov
out
mov
retf
dec
adc
movs
in
jg
bound
jge
pop
pop
mov
stc
arpl
mov
mov
and
or
mov
icebp
mov
lods
aaa
movs
pop
xchg
push
mov
pop
shr
fisttp
shl
mov
push
xchg
test
test
inc
ins
in
pop
test
push
pop
(bad)
mov
adc
ret
adc
outs
mov
aaa
out
movs
in
push
or
popa
nop
mov
fcmovne
mov
or
cmp
lods
sub
test
cmc
push
pop
add
js
bound
fcmovu
jge
push
into
(bad)
leave
push
jae
push
test
mov
push
xchg
aad
jmp
ja
mov
addr16
jmp
xor
mov
mov
jecxz
aas
lea
dec
jnp
je
nop
loope
es
scas
retf
and
ds
mov
lods
cmc
push
int
add
mov
or
inc
cwde
cwde
pop
jb
push
or
mov
cli
test
aas
jmp
cmc
aaa
ror
add
mov
aad
jb
int3
call
jmp
aam
cmp
inc
hlt
inc
dec
mov
push
in
mov
mov
mov
mov
lods
ins
pop
scas
add
stos
sbb
and
pop
jmp
sub
(bad)
int3
stos
in
sbb
repnz
mov
xchg
movs
mov
sbb
lea
adc
xor
sub
sbb
lahf
xchg
shr
jne
in
aam
add
jns
(bad)
iret
dec
cdq
popa
in
jne
push
and
popa
adc
push
(bad)
inc
lock
into
lods
dec
xchg
jmp
aad
enter
cmp
sub
test
jno
mov
pop
cmp
adc
aaa
xchg
dec
inc
add
ins
add
jbe
mul
fisttp
rol
in
add
imul
loopne
pop
lahf
sub
sbb
dec
add
jecxz
cmp
jae
popa
sub
shr
fnstcw
sbb
in
(bad)
cmp
enter
aad
sub
out
scas
xor
add
jge
in
pop
cmps
and
loope
sbb
push
fist
je
ja
std
call
mov
stos
inc
leave
dec
mov
xchg
lahf
adc
cwde
out
scas
add
add
loop
add
aam
retf
(bad)
les
call
mov
lock
add
inc
cli
pop
sbb
lds
outs
mov
stos
idiv
sub
in
aam
cmps
inc
mov
in
sbb
nop
pop
jl
jno
cmps
addr16
mov
test
mov
mov
jns
dec
dec
jmp
loope
(bad)
into
mov
mov
dec
les
jmp
popa
(bad)
jp
mov
dec
imul
inc
neg
and
lock
sbb
dec
mov
mov
mov
jne
inc
jne
jae
fcom
out
test
dec
inc
mov
add
cmp
dec
test
hlt
scas
mov
icebp
outs
mov
adc
popf
ds
jo
sub
jle
dec
xor
or
mov
pop
push
mov
cmp
mov
jg
adc
ins
inc
mov
lea
out
jp
aad
xchg
aam
jge
fwait
(bad)
jbe
mov
daa
je
jge
(bad)
retf
xor
pop
fwait
jae
xor
das
scas
mov
pop
bound
outs
imul
stos
or
retf
call
sqrtps
dec
imul
aas
dec
movs
mov
mov
fisttp
push
test
leave
ret
int
mov
sub
inc
jbe
jnp
adc
cmp
xor
jmp
mov
mov
sar
pop
lods
mov
dec
test
pop
in
dec
adc
and
call
repz
dec
pop
bound
and
xchg
xchg
je
sub
and
mov
dec
or
xchg
dec
dec
dec
xchg
inc
and
dec
jne
dec
adc
in
movs
xchg
sub
or
push
sub
cmp
movs
daa
push
or
inc
or
sub
and
mov
dec
dec
xor
leave
cmps
ret
lahf
shl
jecxz
cmps
sbb
movs
jmp
in
mov
call
cmp
mov
iret
std
inc
cmc
sar
add
jb
not
(bad)
imul
inc
mov
std
in
pop
stc
ds
jl
push
fcom
mov
dec
sbb
sub
fs
jl
push
jmp
xchg
scas
adc
xchg
inc
dec
dec
push
test
jb
dec
pop
and
xchg
push
mov
dec
dec
in
movs
xchg
inc
dec
and
xchg
xchg
cmps
inc
dec
test
xor
popa
inc
push
or
cmc
push
sub
hlt
daa
hlt
fisttp
pop
shr
add
push
das
xor
mov
sbb
pop
loopne
adc
xchg
(bad)
aam
mov
jno
or
iret
inc
lods
std
xor
pop
fptan
pop
push
cmps
pop
jb
jno
or
inc
inc
push
fwait
mov
and
test
test
daa
and
sub
popf
adc
dec
or
cmps
inc
dec
sub
sub
jns
sub
cmps
xchg
adc
sub
movs
adc
xchg
dec
cdq
xlat
mov
popf
and
popf
and
pop
jle
inc
sub
jns
dec
jmp
aad
int3
cmp
outs
movs
(bad)
mov
fsubrp
lock
mov
or
mov
fdecstp
nop
movq
idiv
mov
inc
pop
xchg
cmc
pop
test
mov
sbb
cmp
(bad)
push
jb
daa
mov
mov
pop
sub
popf
push
cmps
pop
shl
lea
mov
les
lahf
aam
push
and
cdq
inc
push
xchg
xchg
mov
dec
dec
push
cmps
test
sub
leave
and
clc
clc
mov
pop
div
cmp
cmc
mov
imul
sti
sar
add
sti
mov
add
xor
inc
mov
pop
jne
aam
clc
dec
xor
fsub
ss
add
pop
pop
sbb
mov
push
xchg
test
or
sub
push
div
rol
pusha
scas
xlat
mov
sub
dec
fdivr
shl
inc
mov
xor
aad
fs
cli
add
cmp
xor
or
mov
lea
pop
not
push
int3
(bad)
daa
(bad)
aas
(bad)
fld
hlt
stos
daa
cli
lahf
loopne
add
jg
cs
aas
jmp
mov
inc
lea
mov
hlt
jg
inc
pop
sbb
icebp
mov
jne
ror
cld
sbb
jge
idiv
jb
std
dec
jg
lahf
enter
adc
or
and
cmp
jmp
cmp
ss
mov
cmp
nop
(bad)
daa
jecxz
inc
stos
push
sub
ins
sub
xchg
jo
aaa
pop
cmps
retf
pusha
inc
mov
sysexit
xor
push
mov
aam
xchg
(bad)
fisttp
jg
sar
aad
cmp
ds
(bad)
std
adc
xchg
ror
mov
imul
(bad)
pop
mov
jns
add
movs
add
dec
xlat
shl
inc
test
xor
icebp
adc
push
pop
inc
cmp
out
shr
sahf
jle
fs
jbe
fistp
xor
mov
scas
add
(bad)
imul
jg
dec
leave
sub
mov
cmp
ror
jmp
xor
(bad)
xlat
cli
aas
in
lods
push
(bad)
inc
not
loopne
popf
or
cmp
mov
int3
xor
fdiv
int
(bad)
std
push
fs
movs
xchg
dec
sbb
ds
inc
lods
aad
push
pop
dec
je
(bad)
out
sub
jg
arpl
xor
push
fucomi
(bad)
lea
dec
and
push
xchg
xchg
nop
dec
and
leave
cmp
mov
pop
cs
mov
sbb
xchg
add
cmc
jp
retf
adc
push
jae
ins
popa
or
faddp
int
lods
push
fdivr
push
pop
shl
(bad)
stos
std
sbb
leave
pop
mov
add
sbb
or
jmp
add
and
push
xchg
cmps
dec
and
xchg
xchg
push
jae
jo
mov
mov
pop
xor
sbb
push
sub
(bad)
fdivrp
retf
xlat
sub
jbe
mov
xor
push
inc
inc
sub
dec
xor
call
pop
ss
(bad)
ss
sbb
mov
sti
pop
sti
xchg
data16
inc
mov
cmp
cmp
inc
dec
or
cmp
jecxz
(bad)
xchg
cmp
retf
push
adc
bound
movs
cmps
pop
pop
rcl
imul
fidiv
inc
cld
adc
push
add
sub
xchg
cmp
out
push
loope
je
lods
call
aad
jno
(bad)
popa
inc
dec
mov
add
push
jg
movs
cmps
xor
mov
cmps
sbb
scas
sub
pop
or
mov
leave
in
cs
cwde
cmp
mov
push
gs
adc
cli
cmovbe
inc
mov
test
cmps
(bad)
in
sbb
mov
cmc
xlat
sbb
data16
test
sbb
dec
jmp
ret
imul
std
cmp
(bad)
cmc
jmp
mov
(bad)
aam
xor
adc
jnp
loopne
sbb
popa
nop
js
aad
out
xchg
mov
xchg
aas
ret
mov
mov
and
retw
mov
inc
test
imul
dec
inc
aad
in
ins
or
fs
popa
arpl
in
cdq
add
and
jne
test
adc
pop
dec
and
sbb
jns
jno
jne
lock
push
xchg
popa
out
mov
jmp
sti
mov
aas
fnstcw
scas
cmp
jbe
pop
outs
lahf
sub
cmp
adc
outs
neg
aas
jmp
cld
mov
jnp
dec
dec
adc
jns
push
jecxz
leave
xor
lea
inc
dec
(bad)
inc
jae
inc
(bad)
mov
jae
sub
adc
cli
sbb
aam
idiv
out
sub
and
(bad)
sahf
sbb
push
jg
mov
(bad)
cli
pop
jb
cmp
repnz
addr16
repnz
pop
(bad)
das
repnz
push
push
mov
sbb
mov
(bad)
ins
cmps
hlt
push
pop
pop
inc
ins
test
push
sbb
jmp
(bad)
fdivr
jl
mov
cmps
aad
out
pushf
dec
jmp
sbb
aad
cmp
push
fistp
scas
xchg
rcr
outs
int3
jg
aas
jno
cmp
sub
and
mov
mov
sub
aam
add
shr
dec
mov
push
outs
push
cli
iret
movq
dec
dec
je
ins
stos
xor
pop
jmp
ret
fbstp
cmp
aaa
mov
xchg
mov
sbb
repz
xchg
add
sub
clc
iret
fisttp
and
xchg
jl
inc
push
test
mov
push
ins
sbb
xor
push
in
ja
scas
sub
xor
stos
dec
and
xchg
cwde
jo
lea
jns
xchg
call
ret
iret
not
or
sbb
fwait
cmc
fcomp
(bad)
aam
mov
(bad)
fist
pop
push
(bad)
ins
dec
das
(bad)
jbe
psrlw
repnz
pop
mov
mov
fcomp
or
jge
jp
xchg
ja
mov
add
lods
sti
xor
mov
fcmovnb
sub
outs
dec
mov
sti
cmps
(bad)
clc
stos
cmp
adc
mov
jge
jmp
test
fcomip
pop
inc
cdq
scas
jg
jge
retf
ret
loop
(bad)
mov
inc
xor
xor
add
or
jno
scas
and
aad
addr16
adc
xchg
pop
jno
loop
out
inc
shr
dec
push
jp
sub
addr16
shl
call
outs
(bad)
call
sti
dec
and
stos
lds
repnz
or
call
or
push
dec
imul
mov
ds
xlat
jg
stc
jmp
hlt
push
or
fcomi
js
pop
sbb
push
movs
push
aaa
push
test
out
mov
xlat
aad
mov
leave
sar
add
xchg
push
pop
neg
arpl
push
test
pop
fs
sub
jg
imul
inc
sub
je
mov
iret
ficomp
mov
pop
pop
push
dec
inc
int
push
test
retf
push
mov
es
inc
and
mov
in
adc
mov
aas
repnz
pop
aas
imul
pop
stos
cmp
jg
mov
dec
jns
sbb
ror
cwde
jns
loope
cmp
cld
mov
jbe
pop
pop
cmps
std
bound
or
lahf
in
xlat
loope
hlt
mov
push
xchg
ins
mov
clc
cs
cs
aam
repz
jg
lds
scas
data16
jge
lods
push
cli
and
rcr
dec
inc
shl
out
scas
xor
aam
jmp
fwait
jmp
sti
inc
movs
aam
sbb
xor
mov
call
mov
mov
jno
loopne
test
lods
jl
jecxz
(bad)
gs
cmp
ins
lock
sub
mov
jo
fiadd
ret
cmp
ja
neg
dec
xchg
pop
call
push
ja
adc
xchg
repz
mov
pusha
hlt
scas
out
cmp
mov
and
fucomi
adc
std
adc
push
mov
jge
pop
xchg
in
daa
push
fwait
jne
push
in
xchg
xor
stc
mov
test
fisttp
popa
add
addr16
out
lods
ins
or
sbb
jl
and
fmul
pop
ss
sti
rcl
iret
(bad)
test
sbb
xor
mov
dec
mov
sub
je
loop
arpl
aaa
(bad)
and
or
jl
call
pop
sub
sub
div
xchg
jb
cmp
stos
mov
adc
mov
clc
jle
icebp
or
cli
pop
imul
(bad)
jo
mov
rol
or
pop
nop
fdiv
push
mov
cmp
cmps
mov
mov
clc
and
pop
pusha
mov
push
fst
mov
xchg
les
std
call
fistp
(bad)
and
xor
mov
pop
stos
inc
sub
int3
cmp
cwde
stc
mov
js
mov
in
ja
or
push
inc
ret
inc
add
mov
and
daa
scas
(bad)
sbb
(bad)
lahf
mov
scas
popa
fidivr
out
test
test
mov
pop
stos
xor
mov
scas
xlat
xor
imul
adc
lods
pop
add
(bad)
jne
pushf
ror
xor
stos
shl
push
stos
add
jne
jne
fadd
cmps
inc
add
inc
mov
pop
push
int
mov
push
push
push
imul
retf
or
xor
sar
cmc
jnp
stos
cmp
jle
push
lea
cs
aam
inc
add
lea
add
setg
jne
and
imul
cmc
fimul
jmp
sbb
(bad)
pop
ja
ficomp
cmp
outs
mov
jno
mov
or
adc
rsm
sbb
pop
(bad)
popf
imul
mov
mov
icebp
and
(bad)
out
mov
retf
(bad)
not
stos
clc
std
dec
sbb
xlat
cmp
cwde
ins
rcl
sub
inc
aam
jl
push
sub
aaa
(bad)
mov
adc
and
push
not
movs
pop
mov
cmp
push
test
xchg
ja
shl
aam
dec
lods
xor
cdq
and
push
jmp
popf
xor
je
daa
test
retf
inc
or
xchg
push
xchg
lock
xor
pushf
sub
push
cmp
dec
sahf
adc
movs
daa
dec
and
push
xchg
movs
or
inc
adc
outs
stos
mov
xchg
(bad)
sti
pop
inc
inc
jmp
mov
or
arpl
hlt
stos
pop
or
pop
stos
sbb
inc
inc
aam
add
jmp
hlt
jbe
shr
push
mov
xlat
inc
ret
lods
lds
scas
sub
dec
sti
andnps
lods
or
mov
jae
or
push
mov
je
cs
push
lds
jb
and
inc
and
and
xchg
dec
pop
push
sub
push
push
leave
daa
adc
cmps
dec
dec
sub
push
test
push
in
cdq
and
and
mov
sub
xchg
and
and
push
sub
or
push
es
push
test
push
mov
popf
sub
cli
push
mov
inc
mov
jg
stc
mov
int
jae
lahf
pop
cmp
xor
ins
inc
mov
inc
xor
les
mov
jp
pop
daa
daa
sbb
jnp
dec
sbb
pop
loope
out
in
hlt
psllw
jmp
aaa
(bad)
call
push
mov
mov
daa
and
ret
push
sbb
inc
jo
cdq
jb
fs
cs
or
and
push
xchg
dec
and
ror
dec
movs
movs
dec
jns
xchg
mov
retf
jp
mov
sbb
and
in
push
xchg
loopne
cmps
aam
(bad)
sbb
cmp
lods
out
arpl
cld
ja
sub
pop
push
stos
call
std
lea
ror
lock
dec
stc
or
xlat
iret
stos
lahf
popa
mov
scas
xor
clc
cmp
xlat
dec
rcr
jne
pop
cmp
sahf
mov
cmp
and
add
xchg
xchg
push
jmp
and
sub
sub
cmp
sub
mov
dec
mov
mov
(bad)
mov
mov
sar
pop
clc
lds
adc
out
jg
inc
xor
jmp
(bad)
es
jmp
popa
in
loopne
sar
(bad)
jg
jg
jb
je
out
xchg
xchg
push
push
mov
fcomp
call
inc
jo
ja
or
add
not
es
cmp
fwait
mov
adc
add
mov
xlat
push
inc
cmps
xchg
les
sub
and
xchg
xchg
xchg
xchg
push
movs
cmps
ins
mov
cli
and
add
fistp
aad
jmp
cmc
lahf
xor
(bad)
fsubr
dec
ret
cli
fdivr
ins
fidivr
xor
mov
(bad)
cli
push
std
loope
scas
inc
daa
pop
repnz
sbb
mov
fwait
cdq
jnp
xchg
cmp
cmps
or
in
mov
(bad)
fsub
imul
call
add
add
mov
(bad)
mov
sti
std
dec
or
outs
push
sub
mov
xchg
pop
shl
sahf
inc
adc
daa
aad
(bad)
inc
mov
je
stos
inc
leave
(bad)
mov
shrd
call
mov
outs
test
cmp
jbe
push
neg
mov
adc
pop
in
cmc
inc
mov
xor
jae
add
out
push
mov
fcmovnu
idiv
fisub
std
push
mov
mov
or
int3
mov
sbb
mov
jbe
pop
hlt
stos
addr16
add
push
aad
push
mov
pop
pop
jg
fimul
aaa
cmp
mul
jbe
fist
push
dec
cmp
int
dec
mov
loopne
jg
push
sbb
retf
pop
shl
jo
dec
add
inc
sbb
cli
xchg
aas
dec
int3
cli
inc
(bad)
push
cmc
jnp
jge
movs
fnstsw
and
xchg
xchg
out
cmps
ficomp
mov
lods
sahf
scas
cmc
jnp
movs
mov
pushf
xor
jg
imul
ss
inc
arpl
inc
cmp
repnz
mov
or
gs
jle
and
mov
xor
mov
scas
fwait
jo
(bad)
jae
fild
mov
lock
mov
cmp
pop
cli
(bad)
cli
sub
xor
popa
push
cmp
ret
nop
mov
movs
xchg
dec
and
std
pop
mov
sbb
xchg
outs
cli
dec
push
ss
dec
lods
dec
(bad)
scas
shr
jmp
push
lods
js
das
outs
cli
dec
fsubr
outs
mov
cmp
push
cmps
and
scas
cld
cli
psubd
sti
mov
out
add
cli
xlat
imul
dec
jp
shl
and
pop
inc
mov
test
sub
xchg
adc
xor
push
lods
ret
jge
sbb
(bad)
push
repnz
into
lahf
es
add
push
aad
inc
jmp
dec
inc
(bad)
int3
mov
shr
js
aas
out
(bad)
dec
mov
sub
mov
stc
jge
inc
inc
fidivr
(bad)
sub
pop
dec
and
in
push
mov
cmps
aad
and
mov
into
popf
aam
jmp
js
repz
aas
jb
jle
push
stos
lock
lea
cmp
jns
push
jecxz
aas
lock
lahf
mov
jmp
icebp
outs
sub
and
jmp
jo
or
mov
fnstsw
mov
mov
cmp
mov
into
ret
ror
dec
push
cmp
gs
nop
sub
pop
dec
and
mov
ret
(bad)
cld
aad
pusha
sub
push
sub
(bad)
mov
imul
(bad)
test
push
or
adc
call
stos
cmp
mov
inc
shl
sub
into
pop
adc
inc
stos
pop
mov
dec
retfw
sbb
sub
hlt
jg
cmp
push
addr16
std
pop
push
xor
or
mov
and
or
xchg
cmp
lods
push
scas
ss
inc
neg
hlt
mov
jmp
inc
lds
imul
(bad)
cmp
(bad)
mov
sbb
or
fld
pop
out
movs
pop
repnz
mov
add
adc
jae
out
xor
adc
mov
mul
cs
and
data16
mov
mov
not
push
ja
nop
inc
add
movs
ds
ss
popa
cmp
aas
inc
sti
cs
aad
jne
xchg
xchg
rcr
(bad)
mov
fcmovu
jmp
and
inc
(bad)
in
scas
retf
or
dec
push
mov
out
repz
jle
cwde
(bad)
popa
(bad)
pop
fisub
mov
pop
dec
mov
jle
std
push
mov
in
pop
int
(bad)
sbb
ror
mov
fcmovnb
test
arpl
out
push
pop
hlt
cwde
jns
loope
clc
ins
leave
imul
jge
hlt
movs
dec
and
sub
cmp
cmp
ror
retf
mov
jmp
daa
test
mov
lahf
clc
inc
xor
dec
add
les
fwait
stos
push
xchg
out
scas
xor
pop
dec
out
xor
jb
or
nop
add
fstp
ins
es
push
fisttp
rcr
inc
mov
fmul
in
sub
ds
call
ins
sbb
stc
cmp
dec
or
(bad)
jne
loope
imul
sbb
lock
loop
rcr
mov
scas
pop
mov
mov
cli
jle
clc
imul
mov
pop
pusha
mov
xchg
push
pop
push
inc
sbb
pop
repnz
ror
fs
lea
popf
mov
push
fs
or
aad
cli
int
test
in
pop
xchg
and
hlt
xchg
xchg
jge
push
xchg
aam
mov
(bad)
xchg
sbb
adc
or
sbb
sub
(bad)
mov
jb
mov
pop
iret
mov
add
arpl
cmp
frstor
jbe
sub
repnz
pop
mov
outs
mov
outs
lods
lds
in
jecxz
and
idiv
and
push
push
and
mov
lock
cli
iret
sub
jmp
inc
adc
jns
repz
xlat
mov
mov
(bad)
xor
lock
inc
sub
outs
adc
mov
(bad)
xchg
fld
cli
ret
pop
dec
pop
arpl
mov
shl
nop
push
push
rol
xor
inc
je
mov
fcomp
cdq
fld
mov
loope
stc
jp
bnd
popa
mov
cdq
cli
test
div
(bad)
sub
cmc
xchg
adc
ja
inc
out
push
sar
mov
pop
pop
lods
aas
cmps
pop
mov
cmps
cmp
mov
aam
ret
popf
in
shl
(bad)
xor
aad
shl
shl
fldenv
xor
pop
jle
shr
aam
jmp
mov
(bad)
xchg
imul
cld
loopne
lahf
(bad)
add
inc
pop
dec
jmp
cmc
jo
sbb
mov
xchg
sbb
dec
cld
cmp
fbstp
es
push
dec
add
or
push
mov
arpl
and
xlat
jmp
out
jmp
push
jmp
push
stos
push
fwait
xor
in
addr16
mov
stc
std
or
test
sbb
or
adc
loope
pushf
daa
fisub
lods
dec
in
fld
pop
(bad)
cli
outs
cmp
jmp
icebp
inc
mov
ret
mov
sbb
push
xchg
cmp
push
stos
rcl
mov
stos
gs
and
add
fadd
pop
push
cli
cli
jge
lods
fisttp
stos
jns
mov
popf
mov
mov
movs
and
popf
jnp
mov
xchg
fldenv
das
adc
fsubr
xor
repnz
and
xchg
(bad)
movs
call
(bad)
and
adc
ins
cmp
and
cmps
fwait
pop
mov
stos
and
push
retf
dec
imul
push
inc
pop
add
(bad)
pop
push
jbe
mov
scas
jecxz
(bad)
imul
mov
xchg
inc
fldenv
add
out
mov
xor
push
add
mov
popa
dec
not
cmp
inc
fnsave
lods
popf
inc
xchg
stos
aas
and
aad
dec
inc
mov
ins
mov
cmp
inc
xchg
mov
push
jno
xor
(bad)
div
push
and
jne
cmps
pop
inc
setno
push
inc
add
xchg
ret
mov
retf
dec
arpl
or
adc
dec
push
not
push
lods
repnz
imul
inc
ss
sahf
or
mov
aam
adc
loopne
imul
pop
js
dec
dec
fcmovbe
rol
mov
ja
dec
mov
shr
jns
enter
shl
movs
int3
push
fwait
iret
add
jmp
mov
jno
sub
cmps
jmp
hlt
pop
es
ret
shl
xchg
test
(bad)
ins
retf
lods
sar
out
(bad)
cld
pop
cwde
psadbw
outs
xlat
mov
aaa
int3
sub
mov
cdq
pusha
xor
leave
inc
shl
xchg
cld
push
aas
xor
shl
in
daa
dec
lods
mov
or
dec
add
dec
push
dec
daa
test
push
jmp
adc
inc
dec
dec
popf
and
test
and
mov
and
xchg
test
sahf
push
inc
dec
push
add
adc
cmp
or
adc
iret
mov
psllw
cmp
(bad)
mov
mov
and
call
lods
iret
mov
data16
sub
jecxz
repz
adc
adc
inc
sbb
inc
and
out
xchg
jmp
scas
ins
cli
jmp
int
jae
icebp
std
(bad)
cld
sar
and
scas
or
cmc
test
and
xchg
and
mov
mov
inc
dec
sub
lea
and
inc
je
movs
sbb
pop
and
cmp
dec
xor
leave
rol
xchg
movs
xchg
dec
and
bound
movs
add
ror
ret
and
dec
dec
mov
sub
mov
cmc
rsm
sbb
shr
jmp
xchg
lahf
cmc
xchg
scas
ss
lds
scas
cmps
ror
arpl
cmps
aad
mov
dec
mov
in
ja
inc
xor
(bad)
add
push
gs
(bad)
out
inc
call
xor
das
or
dec
aam
addr16
bound
mov
cmp
dec
dec
dec
xchg
or
movs
rol
nop
push
or
dec
adc
dec
and
dec
pop
push
dec
dec
xchg
push
sub
push
xchg
xchg
mov
dec
movs
adc
xchg
leave
cmps
or
outs
test
xchg
xchg
stc
aad
out
cld
jbe
repz
popa
pop
xchg
test
jge
push
imul
or
mov
loope
dec
mov
sti
jg
(bad)
lods
in
mov
hlt
cmps
in
ror
jge
retf
or
inc
repz
sub
cmp
inc
and
sub
scas
and
xchg
in
movs
and
add
sub
dec
mov
dec
movs
xchg
xchg
xchg
cmps
dec
xchg
xchg
dec
es
movs
movs
in
or
rcl
push
dec
xlat
xor
ds
je
fidivr
dec
dec
inc
add
inc
rcl
mov
icebp
in
ins
aam
mov
sbb
mov
mov
cmp
cmps
jmp
fsub
stos
xchg
call
mov
inc
sub
push
nop
inc
dec
dec
movs
xchg
dec
push
sub
and
xchg
dec
jl
add
and
enter
rcr
jmp
addr16
je
sbb
div
inc
arpl
add
mov
or
mov
pop
shl
inc
xchg
push
sbb
add
pop
or
cmp
cmps
push
mov
aas
leave
dec
xchg
add
fistp
jmp
test
out
cmc
inc
pmaddwd
add
pop
cmps
lds
jge
pop
mov
pop
pop
push
movs
mov
inc
mov
loop
sbb
scas
rcr
sbb
and
stos
shr
adc
sub
inc
inc
dec
sub
mov
inc
rcr
jns
cmps
jne
cmp
mov
add
sub
push
aad
mov
and
aaa
cld
fld
pop
mov
aad
outs
out
dec
fdivr
psrlq
(bad)
push
(bad)
dec
xchg
cmp
shl
mov
push
dec
or
nop
inc
scas
sub
jg
mov
push
xor
dec
cld
xbegin
sbb
mov
scas
jge
lahf
dec
out
fdivr
inc
lds
in
inc
mov
test
jmp
loop
pop
and
loope
sar
mov
mov
cmc
imul
adc
fldcw
pop
clc
cmp
in
inc
rcl
jns
pop
repz
push
loope
movs
ja
arpl
adc
xor
fsub
loope
outs
add
inc
cdq
jo
out
cld
stos
data16
dec
push
jo
clc
or
inc
pusha
(bad)
repz
fcomip
jnp
push
push
daa
or
mov
(bad)
jae
setno
stc
adc
cmp
fs
cwde
xor
imul
dec
leave
sbb
jae
xchg
(bad)
mov
fsub
pop
les
mov
(bad)
fdivrp
pop
jge
jno
(bad)
mov
xchg
jg
fcomp
repz
pop
or
call
lods
fcos
add
mov
(bad)
push
inc
adc
sub
es
sub
sbb
cmp
sub
neg
jae
in
out
jp
clc
mov
or
sti
scas
sar
add
jge
scas
inc
das
add
push
call
push
arpl
das
xchg
mov
arpl
push
inc
sub
xor
cmp
fs
pop
ins
mov
mov
ja
fdiv
lock
call
pop
inc
dec
movs
sub
ret
push
int
jnp
add
push
aad
int3
or
scas
shr
push
std
cmp
pop
cli
mov
ror
scas
mov
stos
aas
repz
pop
cmp
sub
xchg
dec
xchg
xchg
cwde
pop
js
pushfw
stos
fild
inc
pop
aas
pushf
cmps
sti
pop
loope
inc
sbb
adc
aam
cmc
dec
lea
and
(bad)
aad
pop
stc
aas
in
clc
pop
pop
and
push
dec
cmps
jno
add
push
cli
cmp
(bad)
fwait
rcr
jmp
loopne
add
dec
repnz
inc
mov
inc
xchg
adc
retf
sub
je
ffree
jmp
mov
jne
cld
sbb
mov
jo
sti
inc
sub
sub
out
stc
aaa
xor
pop
adc
fdiv
cli
xchg
sbb
mov
and
mov
cwde
and
scas
pop
in
jg
and
cmp
xchg
xchg
xchg
fs
mov
ffreep
inc
pop
stos
mul
popa
mov
cmc
div
test
dec
lea
and
pop
loope
jb
mov
outs
gs
in
adc
mov
add
inc
out
stos
fnstcw
bound
imul
push
inc
lods
jo
inc
xchg
mov
xchg
cmp
jae
out
and
dec
sar
mov
cmp
xchg
and
cmp
mov
mov
sbb
mov
sbb
and
sbb
inc
pop
add
fld
or
jo
out
dec
lods
std
imul
in
daa
mov
xchg
mov
outs
hlt
fidivr
sbb
adc
cwde
stc
xor
jge
sbb
repnz
push
sbb
mov
or
stos
cmp
pop
add
loope
aas
jmp
mov
mov
lahf
cmps
cmc
pushf
scas
cwde
std
clc
out
sub
lods
aad
aam
movs
cmp
push
push
adc
iret
cld
int
inc
push
xor
sbb
call
cmp
fidiv
inc
jp
jmp
enter
stos
jno
les
jbe
cwde
push
lods
jnp
popf
shl
mov
outs
jae
sub
push
lock
push
daa
push
cli
stos
cdq
ror
int
cld
in
adc
jecxz
mov
lock
mov
into
fs
aaa
mov
inc
imul
jecxz
lea
out
lock
retf
sbb
dec
into
call
jb
jecxz
sbb
xchg
adc
das
sub
and
ror
enter
jo
push
xor
sub
sbb
jg
popf
fld
inc
push
aaa
or
cmp
add
shl
mov
sahf
je
imul
dec
adc
xor
mov
shl
cmp
inc
int3
push
and
dec
jbe
fadd
out
add
pop
leave
xchg
dec
ja
sbb
mov
xchg
push
popa
fistp
or
in
or
sahf
mov
mov
push
add
cmps
fwait
xor
cmp
pushf
adc
shl
push
test
out
xchg
sbb
and
mov
mov
cmp
ss
mov
mov
int3
adc
dec
mov
push
mov
pop
push
push
dec
mov
fcom
xchg
pop
xor
ret
jbe
sti
rcl
xor
xor
inc
mov
jg
stos
lods
std
ja
in
mov
xchg
mov
pop
scas
and
sbb
fcom
sub
xchg
xchg
sbb
or
push
mov
out
mov
mov
sub
sbb
or
add
clc
add
xor
mov
fisttp
scas
aam
mov
fidiv
sti
pop
cwde
test
stos
lahf
pop
sbb
daa
setns
push
scas
push
les
hlt
fs
jmp
test
xlat
or
jle
pop
push
scas
jle
xor
mov
clc
stos
inc
fdivp
(bad)
push
stos
cdq
shl
pop
test
shl
dec
xchg
fistp
repnz
jbe
pop
pop
icebp
inc
ficomp
jmp
jnp
sbb
mov
jecxz
push
retf
mov
mov
rcl
adc
and
ror
mov
mov
in
out
add
lahf
stos
scas
sub
cmp
sbb
(bad)
movs
pop
aaa
mov
inc
jmp
sbb
lea
and
sub
daa
pop
sub
pusha
stos
mov
cmp
in
repz
rcr
inc
and
push
dec
mov
jne
mov
sub
popa
addr16
outs
call
sbb
sub
repnz
retf
js
or
idiv
jnp
dec
jnp
sbb
mov
int
dec
add
es
sub
imul
cdq
and
outs
retf
cmp
push
xor
imul
mov
or
out
cmps
or
inc
push
iret
jnp
jnp
xchg
aad
jmp
mov
inc
pop
repz
jmp
lods
adc
loop
dec
test
and
add
or
mov
scas
mov
lods
ret
jae
ret
push
clc
test
xlat
arpl
inc
xchg
std
daa
add
test
lods
enter
jae
ja
add
pushf
mov
mov
(bad)
add
pop
push
mov
or
dec
add
push
push
mov
jns
cli
and
shr
loop
mov
mov
ja
pop
stos
or
inc
and
add
ror
dec
das
scas
jmp
push
adc
mov
push
pop
pop
aas
inc
cmps
sub
xchg
jnp
test
mov
xor
call
sub
mov
push
push
xchg
(bad)
jnp
or
push
call
repz
dec
cmps
mov
mov
cdq
push
test
adc
dec
adc
and
dec
push
je
xchg
dec
push
dec
loope
dec
dec
and
dec
sub
dec
and
and
xchg
or
and
and
mov
and
pusha
adc
ret
mov
mov
and
mov
xchg
shl
(bad)
test
inc
push
xor
aad
push
bound
mov
and
inc
cli
mov
icebp
les
cld
ret
stc
or
retf
mov
ins
int3
jne
adc
add
repnz
cli
out
inc
mov
call
int3
jae
mov
das
sbb
jnp
js
in
fistp
rcl
int
pop
add
cmp
jns
iret
addr16
mov
adc
ins
mov
xor
dec
sub
fs
cmp
fiadd
enter
mov
dec
xchg
xchg
pushf
es
xchg
xchg
or
dec
push
dec
and
xchg
or
(bad)
xor
dec
and
movs
and
adc
push
movs
or
movs
add
rol
jo
or
inc
jmp
cli
retf
shr
stc
data16
lods
mov
jns
inc
(bad)
lds
add
retf
mov
call
mov
jg
std
xor
push
and
es
mov
outs
sub
xchg
push
retf
or
jp
clc
leave
call
jecxz
mov
jl
js
jnp
fwait
adc
je
test
loop
ficomp
inc
push
movs
and
xchg
test
(bad)
mov
jns
adc
push
mov
add
dec
push
xchg
cdq
jb
push
dec
fs
mov
adc
sub
xor
pushf
adc
cmps
mov
fisttp
sub
(bad)
fld
shl
mov
add
xchg
xlat
xlat
inc
stos
lea
pop
or
inc
mov
mov
ja
mov
mov
mov
inc
cli
mov
push
mov
sbb
sub
(bad)
inc
push
ins
test
aad
xlat
inc
stc
stc
adc
xchg
mov
shl
jns
call
push
mov
test
ins
push
es
adc
dec
push
dec
dec
dec
and
sub
dec
and
xchg
mov
push
repnz
inc
cmp
lock
or
into
xchg
aam
jmp
ret
xchg
cmps
iret
in
mov
out
dec
(bad)
jge
stos
je
call
cmp
add
dec
sar
iret
in
retf
pop
fistp
sub
mov
int3
std
out
add
xlat
dec
and
push
mov
popf
arpl
jno
adc
mov
call
push
(bad)
and
pop
cmp
dec
and
adc
dec
jb
xchg
dec
fwait
test
mov
xor
es
jmp
leave
dec
fs
lahf
sbb
int3
pop
sbb
sub
xchg
enter
xchg
jge
(bad)
cmc
imul
in
loopne
sar
in
inc
pop
sar
add
hlt
pop
adc
(bad)
push
ins
mov
push
fadd
and
cmps
push
loop
sbb
push
inc
push
or
xchg
mov
inc
addr16
lods
jle
mov
stos
std
jg
xlat
push
pop
mov
nop
mov
sub
and
xchg
dec
and
cdq
add
xchg
push
xlat
je
scas
mov
adc
adc
outs
cmc
pop
(bad)
pop
sti
imul
pusha
sbb
jge
adc
jnp
jne
pop
inc
int
call
inc
ret
ror
add
vmovdqa
mov
jg
mov
push
ins
jge
dec
out
out
loope
cmc
pop
xchg
in
sub
xor
(bad)
jg
cmp
inc
or
dec
mov
xor
dec
and
dec
adc
add
xlat
lods
cld
add
arpl
lahf
in
(bad)
xlat
jae
(bad)
mov
ja
imul
inc
xor
jno
sbb
push
mov
dec
sub
ficomp
or
cmp
xlat
pushf
ficomp
mov
cld
sbb
pop
pop
pop
jno
mov
add
inc
dec
sti
or
ins
rol
and
jmp
dec
sub
jg
fiadd
jo
adc
lods
aam
out
inc
call
jmp
fdiv
mov
mov
mov
mov
jbe
paddw
pushf
and
mov
test
push
out
imul
div
clc
adc
fisubr
das
lds
cld
data16
sbb
ret
jle
xchg
inc
mov
repnz
inc
push
mov
xor
enter
int3
out
cmps
xlat
inc
shl
sub
mov
mov
mov
xchg
aas
cli
dec
jo
pop
jmp
aaa
test
xor
std
fsubr
pop
inc
cdq
sub
mov
push
sahf
inc
aam
arpl
push
cmp
pop
mov
push
cmps
std
(bad)
cli
lahf
rcr
cdq
cmp
or
inc
lods
mov
sbb
mov
test
inc
test
inc
cmp
in
idiv
inc
stos
ret
ins
scas
sbb
and
push
push
out
fwait
aam
jmp
imul
mov
out
scas
lds
xchg
popf
pop
cwde
xor
std
cs
mov
scas
and
lock
dec
sahf
mov
loopne
ret
nop
jns
mov
int3
scas
and
cli
ins
pop
cmps
aad
push
pop
pop
outs
jmp
mov
inc
pushf
mov
jle
mov
(bad)
xchg
pop
outs
pop
cli
xchg
call
retf
pop
dec
cwde
pusha
mov
dec
sbb
or
(bad)
fwait
push
mov
sahf
adc
cmps
ins
jns
push
imul
xchg
jbe
fcmovu
into
dec
jg
push
or
push
arpl
or
aaa
cli
ja
cmp
cmp
nop
adc
ds
xchg
cmp
jg
mov
jp
test
cwde
out
loope
mov
outs
clc
cmp
inc
inc
push
or
popa
xor
movs
ret
aam
sub
daa
xchg
sahf
fcomip
dec
cld
lds
xchg
call
sbb
dec
test
cld
fwait
sbb
add
bound
mov
lds
mov
xchg
sub
in
scas
repz
inc
adc
add
cmp
loopne
xchg
test
xchg
ret
arpl
xchg
mov
inc
mov
imul
leave
ret
jle
adc
popa
loope
call
out
or
cmp
popa
xor
sbb
popa
cli
dec
inc
leave
mov
xor
cmp
sub
push
jle
out
rcr
(bad)
mov
add
mov
jmp
add
aad
and
mov
nop
jle
dec
or
retf
jp
push
in
jg
adc
test
imul
in
cmp
retf
seta
out
mov
xchg
add
mov
add
stos
mov
jbe
or
add
in
sbb
mov
fmul
les
adc
cmp
cmp
pushf
inc
stos
ret
xor
aas
jmp
pop
push
addr16
(bad)
sbb
jl
sbb
adc
test
int3
(bad)
retf
mov
jge
call
xor
push
cmp
and
mov
cld
call
mov
aad
push
jns
jne
cmp
push
mov
imul
lock
aam
cmp
mov
mov
jae
mov
stc
and
aad
push
cmps
pop
mov
mov
push
mov
sub
jno
mov
icebp
dec
jne
movs
addr16
sar
add
pusha
cmps
push
jbe
adc
mov
js
dec
cmc
pop
jecxz
leave
mov
sbb
pop
dec
std
ss
movs
aas
xchg
test
std
daa
adc
inc
jmp
icebp
pop
sub
shr
push
jne
mov
xchg
arpl
scas
sbb
cmp
stos
add
mov
hlt
out
mov
push
movs
fdiv
push
loop
sbb
fsub
fcmovnbe
aad
pop
pop
outs
cmps
nop
rcr
aas
xchg
mov
scas
std
push
sbb
(bad)
out
cmps
(bad)
sub
xchg
dec
xor
imul
mov
std
das
add
inc
imul
out
into
imul
jbe
mov
sbb
xor
mov
stos
hlt
cwde
xchg
addr16
shr
scas
add
jno
mov
bound
jns
pop
das
scas
fs
imul
mov
sub
mov
xor
xlat
jmp
aaa
mov
jbe
add
sub
sbb
mov
jge
aaa
xchg
(bad)
jno
mov
inc
in
cmp
xor
stc
push
sub
jmp
mov
stos
in
jge
sbb
fwait
mov
and
inc
dec
xchg
cmp
shl
mov
jmp
pop
sti
jmp
pusha
sub
jle
in
xchg
neg
xchg
mov
mov
dec
cli
xlat
mov
fcomi
pop
mov
loope
aas
retf
mov
sub
(bad)
sub
jecxz
pop
mov
aad
mov
sub
jmp
lahf
push
xchg
fsubr
xor
xor
leave
int
inc
jae
mov
enter
aad
shl
jae
and
test
lock
cmp
fst
ja
fsubr
lahf
aam
adc
inc
call
fisub
sbb
ja
imul
je
ss
sbb
not
gs
fldcw
sub
pushf
inc
repnz
pop
lods
std
movs
sahf
xchg
pop
inc
mov
mov
xchg
mov
clc
(bad)
and
adc
test
lods
xchg
mov
sbb
push
movs
inc
add
adc
add
stos
xor
lds
cmp
cmp
sahf
scas
cmp
cmp
adc
aaa
call
out
out
imul
loope
dec
lods
sub
and
and
test
adc
xchg
pop
sbb
ins
(bad)
push
jmp
test
lods
jnp
cmp
cli
xor
xchg
push
xchg
cmp
fwait
arpl
push
call
shl
call
iret
cli
jl
or
xor
icebp
mov
enter
and
push
push
test
popa
mov
mov
mov
loope
mov
cmp
les
dec
cdq
inc
xchg
call
add
xor
xor
mov
js
mov
cmp
gs
test
pop
jmp
sub
ror
(bad)
xor
cdq
add
in
imul
pop
inc
imul
mov
shl
push
xor
(bad)
cmp
pop
dec
fnsave
pop
pop
aad
mov
call
in
jmp
outs
shl
scas
mov
pop
mov
xchg
pop
mov
stos
xchg
rol
mov
rcr
hlt
call
into
nop
(bad)
(bad)
aaa
icebp
pop
test
mov
je
jno
fcomi
push
fscale
cmp
ds
sub
scas
pop
pop
test
sbb
pusha
cmp
mov
dec
mul
inc
push
out
jmp
iret
shl
fisttp
xor
into
fadd
dec
pop
arpl
pop
xor
push
push
sar
out
mov
inc
call
enter
icebp
repz
lods
mov
push
cmp
dec
cmp
dec
scas
pop
adc
in
clflush
(bad)
mov
out
cli
mov
scas
jmp
push
cmp
sbb
add
sub
cmc
xlat
mov
stos
movs
fist
sub
fsubr
adc
push
pop
mov
mov
bnd
sbb
sub
jg
hlt
test
push
fidiv
pop
jnp
ins
sub
jge
mov
test
pop
daa
add
std
data16
fnstcw
call
shr
mov
fst
sbb
out
xchg
icebp
hlt
ins
test
stos
ret
inc
dec
sub
pop
mov
stc
xor
cmc
inc
stos
adc
aas
cmc
cs
gs
nop
or
lods
(bad)
lahf
(bad)
das
cli
mov
test
jne
push
xlat
mov
pop
jle
(bad)
out
pop
call
mov
das
popf
hlt
into
xchg
xchg
aam
hlt
mov
jae
fidivr
pop
xlat
jg
(bad)
out
(bad)
scas
inc
mov
and
movs
loopne
jg
outs
sar
add
pop
cmps
cs
fcomp
fdivr
xor
test
mov
mov
test
mov
cmps
push
ror
ficomp
rol
add
call
and
cs
std
dec
ret
jmp
aaa
cmp
sbb
shl
and
add
icebp
jle
cmc
dec
cmp
imul
(bad)
ret
sti
imul
(bad)
fmul
pop
add
push
pop
sub
pop
push
add
retf
stc
mov
push
add
or
out
les
fidivr
outs
cmc
lahf
stos
cmp
lods
call
not
push
mov
push
cmp
or
pop
and
adc
and
and
leave
mov
dec
pop
sub
xchg
push
leave
movs
cmp
call
xchg
dec
push
je
and
inc
sub
push
push
or
dec
and
test
test
pop
fldcw
dec
gs
imul
or
std
mov
out
dec
cmps
fcmovnbe
repnz
lea
(bad)
call
scas
inc
inc
pop
lahf
push
fisttp
movs
mov
dec
sar
pop
ja
into
pop
pop
fs
fnsave
jg
inc
sub
sbb
jo
add
and
or
mov
xchg
lds
add
or
bound
dec
adc
movs
jo
ds
and
push
test
inc
jo
or
fs
push
mov
xor
movs
and
push
repnz
mov
xchg
test
xchg
xchg
adc
push
push
or
pop
and
pop
cld
jnp
ins
fs
and
mov
lahf
push
jnp
cli
repz
sbb
xchg
leave
inc
pop
out
cdq
fist
jno
test
cmps
or
jp
popf
adc
mov
jge
or
cld
xchg
jg
mov
std
jge
xor
or
shl
loopne
hlt
xor
cmps
mov
mov
stc
repnz
outs
ins
sub
jb
inc
dec
adc
cmp
sub
dec
sub
push
and
push
in
xor
adc
je
movs
jmp
add
inc
mov
scas
cmc
push
cmp
out
jns
iret
int3
leave
stos
inc
inc
sub
mov
out
jmp
inc
lods
jo
das
imul
aam
mov
mov
ins
mov
call
cld
les
call
push
pushf
mov
pop
mov
(bad)
sbb
stos
out
push
mov
and
and
movs
dec
dec
daa
add
and
add
dec
and
push
ds
lahf
jnp
jno
mov
sbb
stc
pop
inc
and
dec
or
jmp
pop
test
pusha
std
bound
(bad)
add
lahf
icebp
stos
mov
pop
push
mov
ins
jnp
out
hlt
jbe
and
cmp
test
dec
mov
cli
ret
mov
dec
push
push
inc
inc
dec
pop
cli
(bad)
xchg
(bad)
xor
and
push
lds
je
jmp
xor
push
jmp
dec
and
push
xchg
push
adc
cmp
jmp
push
dec
dec
inc
xor
pop
push
movs
pushf
push
fmul
repz
cld
repz
shl
mov
(bad)
shl
sbb
jecxz
movs
xchg
pop
mov
add
jmp
push
inc
and
push
lahf
push
jmp
adc
fadd
imul
cmp
pop
mov
lahf
adc
mov
and
xchg
cdq
cmp
cmps
dec
and
test
cmp
xchg
cmp
add
mov
push
rcl
fisub
cmps
xchg
fistp
ins
les
mov
add
loopne
mov
pop
push
daa
push
(bad)
cli
leave
push
(bad)
jmp
lahf
iret
inc
or
std
adc
out
fisub
shr
ds
dec
pop
ds
jge
cld
out
test
dec
sub
dec
sub
sub
xor
cdq
js
push
xchg
aaa
rol
mov
repz
mov
sub
push
and
inc
and
repz
push
adc
inc
in
xor
and
and
out
sub
jge
shrd
scas
outs
mov
mov
enter
jno
shl
add
mov
test
add
aas
repz
and
test
ds
cmp
call
sub
mov
xor
push
sbb
hlt
push
jb
rcl
pop
test
movs
inc
sub
jecxz
xchg
hlt
std
idiv
stos
pop
or
gs
jo
adc
push
sbb
cmp
xor
mov
std
cmp
dec
outs
mov
mov
push
out
ja
cmp
enter
ret
std
and
(bad)
mov
cmp
mov
sbb
ds
dec
ja
outs
lods
fistp
es
out
imul
int
xchg
pop
adc
pusha
jmp
dec
jge
fnclex
(bad)
pop
pop
arpl
lods
bound
fisttp
lods
jo
sbb
shl
test
repnz
and
adc
jno
imul
test
mov
test
push
sbb
jle
mov
inc
xchg
pusha
in
icebp
or
fld
js
stos
arpl
pop
cmp
and
push
fidivr
jecxz
int
xchg
mov
repz
inc
jo
push
jmp
pop
out
or
mov
mov
jg
jnp
inc
xchg
pop
inc
jbe
cmc
or
sbb
xor
sbb
in
clc
cdq
adc
gs
push
fs
sbb
mov
ja
push
xchg
or
xor
xor
cmp
inc
in
inc
stc
cmps
sti
and
mov
addr16
cwde
ror
enter
out
pop
leave
mov
cmp
nop
ins
push
(bad)
push
lea
jmp
mov
leave
jmp
xor
idiv
mov
and
jge
add
cmp
adc
push
stos
cmps
int3
adc
neg
sbb
outs
inc
outs
cmp
xchg
sahf
(bad)
call
mov
mov
loope
sub
test
jmp
sub
adc
(bad)
mov
jecxz
mov
retf
add
and
inc
and
xchg
idiv
out
lds
cdq
cmp
test
scas
cmp
in
(bad)
aas
jecxz
stc
mov
mov
sbb
movs
shr
pop
push
fst
jg
stos
xor
sbb
pop
xor
pop
js
loopne
adc
or
cmps
test
fnstcw
xor
fstp
dec
push
cmp
and
pop
gs
pop
call
loope
or
ins
mov
int
or
enter
mov
mov
addr16
add
xor
test
mov
jne
sbb
xor
mov
cwde
sub
xchg
fucomp
cmps
out
jmp
pop
int3
adc
inc
pop
or
sbb
nop
inc
cmp
mov
sbb
daa
or
sbb
inc
aam
sar
adc
sbb
hlt
mov
pop
inc
fstp
call
add
or
push
test
int
sti
rcl
sar
gs
imul
jg
jmp
fsubr
std
jne
ds
inc
mov
sbb
mov
xchg
out
inc
and
jbe
data16
or
pop
cmp
movs
cmc
addr16
ja
jbe
pop
fsubr
ins
div
int
push
sbb
sahf
inc
mov
jbe
push
shl
popf
(bad)
sti
daa
inc
xor
push
jmp
mul
arpl
imul
mov
sub
neg
xchg
ds
lds
fst
jnp
jmp
aas
jge
dec
in
in
push
mul
jmp
call
jo
repnz
push
cmp
fcmovnb
sub
(bad)
mov
sbb
popa
ds
jne
stos
psubusw
sbb
popa
inc
mov
lds
sar
or
lea
jp
inc
or
mov
popf
aam
cmps
xor
outs
aad
add
cmps
fdivr
sti
mov
inc
xor
ja
enter
outs
popf
mov
push
cdq
in
hlt
jg
inc
xchg
jge
lods
xor
jmp
ins
in
pop
(bad)
lods
test
daa
mov
sub
add
jg
lds
js
repnz
in
fisttp
jbe
out
pop
dec
cmps
test
ins
outs
fnstenv
js
mov
add
xor
sbb
cmps
fs
sbb
add
dec
or
push
mov
dec
adc
and
add
nop
xchg
dec
dec
(bad)
mov
pop
(bad)
mov
pop
push
xor
cmp
(bad)
shl
imul
xor
into
or
jg
cmp
push
es
and
add
jno
repnz
addr16
mov
dec
mov
pop
inc
and
ins
jae
jle
push
sbb
mov
adc
icebp
or
cmps
cmp
lea
mov
push
out
adc
enter
in
or
cs
sub
and
in
ja
add
pop
stos
jl
outs
pop
jno
xor
das
push
mov
or
lock
sbb
or
aas
call
or
jo
push
sbb
idiv
pop
xor
inc
jne
mov
jmp
fst
shr
lods
xchg
ins
xchg
bound
cmps
sbb
repnz
mov
mov
dec
xchg
cmps
add
push
inc
adc
aad
lods
leave
add
or
retf
cmps
jo
jb
xchg
mov
push
cmp
pop
ret
enter
hlt
fs
add
repz
sub
inc
inc
push
stos
mov
(bad)
repz
dec
or
inc
dec
movs
cdq
cmp
cmp
movs
and
dec
dec
dec
sub
dec
sub
xchg
dec
push
cmps
dec
xchg
dec
pop
adc
or
pop
push
out
sub
and
dec
dec
add
cmp
or
sub
sar
mov
ds
jecxz
cmps
sti
push
scas
out
jg
push
xchg
mov
sub
push
cmps
mov
mov
stc
test
xchg
aaa
push
scas
aad
mov
xor
cmps
(bad)
stos
not
push
enter
lea
ja
dec
adc
movs
test
push
data16
sbb
mov
not
ret
sti
cmps
call
xchg
dec
fwait
aad
jp
pop
mov
add
mov
(bad)
mov
test
dec
and
dec
and
dec
pop
and
push
push
cmp
jle
hlt
out
cmps
das
arpl
dec
out
(bad)
in
push
hlt
push
(bad)
push
jmp
rcr
dec
cld
cmc
ret
icebp
mov
int
neg
stos
mov
add
retf
xchg
sahf
jle
mov
mov
mov
idiv
dec
jmp
pop
aaa
sub
(bad)
lods
xchg
aam
mov
xchg
loop
sbb
ds
sub
pop
test
mov
mov
jg
in
add
ja
leave
cmp
ins
aas
pop
adc
jge
lods
pop
pop
adc
(bad)
clc
push
xor
icebp
icebp
imul
mov
push
lahf
cli
movs
fwait
cmc
cmp
data16
sar
add
mov
push
stos
jle
in
inc
outs
clc
(bad)
(bad)
mov
sbb
hlt
call
and
cwde
mov
pop
arpl
add
sbb
out
enter
add
mov
test
mov
fsubr
imul
sub
ja
daa
hlt
(bad)
leave
outs
xchg
dec
fcomip
jnp
movs
mov
push
shr
xchg
cld
push
mov
jecxz
out
fdivp
loope
aas
cld
int
cmp
mov
int3
pusha
cmp
add
call
pop
loop
(bad)
loop
mov
or
sbb
(bad)
aas
cmc
enter
jl
or
fisttp
ret
dec
mov
add
je
mov
lods
jne
sbb
jo
adc
inc
mov
or
adc
arpl
dec
or
jnp
jae
and
(bad)
push
inc
sti
xchg
xchg
dec
call
dec
push
mov
pop
jo
inc
(bad)
pop
xchg
test
fstp
cli
xchg
in
mov
inc
sub
pop
imul
inc
iret
mov
out
aam
jle
pop
data16
add
lea
(bad)
mov
sar
push
ret
test
lods
adc
add
mov
loopne
rcl
inc
loope
std
jnp
pop
arpl
dec
mov
psllq
call
xchg
mov
xor
ja
jp
inc
leave
jmp
sub
imul
add
fbstp
call
(bad)
fadd
fld
push
pop
(bad)
mov
into
pushf
lock
fcomip
jg
jbe
jecxz
sbb
ins
pop
xor
mov
je
scas
cwde
std
cdq
push
mov
out
jmp
inc
es
inc
push
cmps
pop
push
dec
sub
dec
xchg
mov
jmp
push
bound
inc
sub
movs
ret
xchg
inc
jmp
or
push
or
push
add
xlat
ja
add
not
ds
out
(bad)
std
cmp
jmp
jge
jmp
les
std
and
add
bound
sub
aad
je
mov
lods
outs
inc
sar
mov
inc
neg
pop
shl
inc
test
icebp
je
aaa
je
sub
(bad)
mov
(bad)
xchg
push
ret
sub
adc
stc
jmp
pushf
dec
sub
rcr
and
xchg
and
mov
mov
xor
les
or
mov
dec
daa
in
sub
dec
ror
xor
xchg
push
lock
cmp
mov
inc
(bad)
mov
cli
fisttp
or
inc
fcomp
jmp
xchg
mov
adc
clc
jns
loope
fucomi
jno
mov
sbb
cs
test
sub
imul
push
out
inc
jbe
(bad)
mov
js
dec
mov
cld
adc
dec
jb
cmps
dec
adc
adc
push
jmp
dec
push
dec
or
movs
and
es
dec
movs
xor
cmp
hlt
outs
scas
jg
leave
outs
dec
push
sbb
and
cld
xchg
mov
pop
sbb
sahf
xchg
fsubr
jp
shr
addr16
cmc
(bad)
in
mov
jne
cli
cmp
cmp
bound
or
mov
dec
dec
test
sar
repz
test
inc
and
sub
dec
xchg
mov
movs
daa
and
sar
mov
mov
mov
jge
sbb
add
sbb
dec
gs
aaa
or
lahf
into
movs
inc
neg
daa
inc
inc
(bad)
sbb
sar
fwait
cli
jge
call
pop
arpl
(bad)
inc
out
inc
or
xor
and
outs
test
or
pop
mov
stc
retf
mov
stc
pop
call
ficom
sub
dec
xchg
mov
dec
xchg
dec
sub
loope
dec
movs
xchg
movs
inc
jp
push
cli
and
cld
cli
mov
dec
dec
int
cmp
movs
jo
jne
(bad)
sar
jle
cwde
or
dec
sub
in
pop
ffreep
dec
adc
outs
mov
mov
jmp
add
cwde
pop
imul
push
int
mov
cmp
inc
jb
nop
push
xor
xchg
mov
push
mov
aam
into
lods
mov
push
jg
(bad)
aas
jb
hlt
hlt
jg
lods
push
jmp
arpl
jo
scas
outs
cli
dec
(bad)
retf
dec
popf
aad
(bad)
jge
xor
jge
std
es
add
(bad)
das
repz
dec
push
call
cli
xchg
dec
cmp
(bad)
jg
mov
inc
mov
inc
inc
dec
adc
dec
and
sub
ficomp
ret
xchg
mov
outs
out
mov
sbb
repnz
daa
(bad)
pop
mov
std
adc
aad
cmp
mov
and
mov
push
or
inc
inc
pop
or
sbb
add
xchg
inc
or
cmp
push
mov
jno
outs
dec
stos
push
xchg
push
xchg
cdq
add
out
jmp
in
retf
cmp
sub
mov
jg
cmp
addr16
hlt
jg
iret
int3
pop
jg
jp
sbb
sbb
ds
mov
add
imul
xchg
pop
jne
cli
push
mov
div
enter
adc
out
adc
sbb
sub
jo
xchg
mov
sbb
inc
aad
pop
cmps
iret
jmp
movs
pop
leave
mov
fimul
push
mov
mov
push
mov
add
jmp
xchg
outs
repnz
std
mov
mov
retf
dec
lods
cld
xlat
mov
mov
cli
cwde
idiv
mov
sub
pusha
mov
ds
adc
leave
cmc
aaa
push
mov
xchg
(bad)
mov
test
sbb
xchg
dec
cli
dec
pop
call
pop
mov
pop
lock
scas
jg
hlt
(bad)
loope
jmp
jecxz
jmp
cmps
jnp
mov
in
fxch
data16
cwde
arpl
test
mov
(bad)
or
jle
jmp
mov
cmp
(bad)
sub
sub
retf
sbb
repnz
in
adc
arpl
imul
(bad)
sub
sub
push
scas
cmc
push
xor
sti
int
cld
in
pop
inc
cmc
push
xchg
cmc
mov
stos
jnp
shl
add
pushf
mov
mov
imul
sub
cdq
arpl
aas
push
scas
xlat
push
loopne
xchg
or
adc
test
add
loopne
xor
sbb
out
inc
(bad)
or
mov
pop
stc
push
push
call
outs
popa
mov
sbb
(bad)
aam
idiv
mov
enter
aas
pop
ret
jmp
inc
cmp
jb
xor
out
scas
mov
sar
dec
out
inc
dec
sar
aam
ins
test
jnp
(bad)
mov
call
pop
popf
or
sahf
(bad)
pop
retf
sbb
shl
loop
adc
pop
mov
cli
mov
dec
xor
xchg
arpl
(bad)
out
jo
adc
call
dec
cmc
cmp
push
sbb
aam
xchg
push
cli
xchg
xchg
xchg
stos
hlt
lods
repnz
pop
out
jno
js
movs
inc
ror
stos
sbb
pop
pop
fs
rcr
sbb
stos
mov
adc
aad
js
push
shr
leave
xor
add
rcr
or
mov
cmps
pop
pusha
stos
and
imul
out
retf
jne
xchg
or
cdq
adc
popa
fdiv
push
dec
mov
in
mov
mov
inc
pop
scas
scas
mov
ss
lock
sub
inc
dec
or
ror
cdq
or
rol
sti
sti
movs
cli
mov
test
dec
or
fldcw
rcr
sub
lods
xlat
retf
ja
call
pop
scas
and
inc
cmc
sbb
add
mov
sub
and
outs
and
xchg
mov
ret
and
cli
aas
jb
out
cmps
jbe
scas
lahf
cmc
mov
addr16
mov
mov
ja
inc
mov
out
shld
add
lds
lods
dec
cdq
xlat
out
shl
jge
xchg
mov
pop
out
inc
mov
sbb
(bad)
xlat
dec
adc
cmc
push
pop
inc
sub
push
call
les
jge
shr
xchg
rcr
imul
js
mov
cmc
cmps
cmp
pop
fidiv
(bad)
pmulhuw
cmps
call
or
aaa
out
jmp
lods
hlt
mov
sub
aam
fsqrt
jl
in
cmp
dec
(bad)
jmp
and
fisttp
xor
aas
movs
push
sbb
or
ja
gs
leave
outs
cli
(bad)
(bad)
and
mov
shl
sahf
jns
scas
fld
cmp
and
adc
dec
cld
aad
hlt
cmp
ja
mov
addr16
jne
cmc
mov
div
pop
pushf
push
jge
inc
in
mov
aam
jae
les
stos
jno
adc
xor
dec
adc
aad
fild
add
cmps
xor
(bad)
int
jns
lods
jmp
data16
push
add
test
mul
jne
jae
add
rol
sbb
scas
xor
jne
aas
call
outs
xchg
call
xchg
xlat
pop
mov
or
xor
xchg
imul
add
adc
inc
or
prefetch
or
xor
xlat
xor
dec
adc
nop
loop
fdivr
les
xchg
adc
and
sub
arpl
outs
outs
loop
jl
dec
pop
add
jbe
(bad)
inc
cli
popf
mov
ret
jne
dec
out
xchg
push
cmp
(bad)
xor
xor
imul
aaa
sbb
mov
loopne
cmp
push
dec
lahf
hlt
mov
mov
mov
loope
fisttp
nop
dec
lea
and
mov
(bad)
lds
scas
scas
movs
sar
mov
test
mov
loop
or
je
xor
dec
es
je
ud0
repz
daa
push
cwde
xchg
cdq
cmp
dec
dec
and
push
xchg
dec
and
movs
xchg
dec
and
xchg
push
xchg
dec
and
movs
loope
pop
and
loope
inc
pusha
push
dec
dec
cmps
push
dec
dec
repnz
xchg
push
daa
xchg
xchg
push
leave
ror
dec
push
and
cdq
add
inc
daa
inc
or
push
imul
push
test
shr
pop
arpl
fidivr
cmp
xchg
mov
sbb
pop
(bad)
xchg
mov
out
popa
jns
test
sub
std
adc
gs
packsswb
js
aad
add
jecxz
imul
(bad)
sbb
repnz
stos
jge
cli
fild
jmp
dec
(bad)
mov
xchg
mov
loop
push
jmp
mov
(bad)
nop
(bad)
mov
daa
add
jae
arpl
mov
lods
or
mov
jg
std
xor
add
sub
scas
aas
pop
pop
aam
adc
arpl
jo
jg
adc
aad
and
lahf
sbb
mov
test
ins
mov
neg
(bad)
jecxz
and
push
or
jb
xor
cwde
cmps
xchg
mov
movs
xor
and
cmp
push
and
retf
push
dec
dec
retf
push
dec
dec
mov
sub
dec
sub
jo
sbb
lods
loope
pop
pop
adc
movs
sub
mov
xchg
mov
arpl
fs
fcomip
imul
int3
and
xlat
mov
xlat
pop
inc
ror
cmps
jg
mov
jbe
fnstsw
lea
push
push
dec
xchg
das
mov
outs
scas
pop
aaa
stos
inc
dec
std
sbb
ss
int3
mov
mov
test
inc
mov
iret
sub
cli
loope
shl
mov
mov
out
repnz
ds
jle
pop
mov
jge
and
add
push
ds
ja
xchg
pop
cmp
test
retf
scas
push
xlat
dec
and
push
movs
xchg
dec
and
and
ret
enter
pop
scas
(bad)
cs
sbb
jecxz
inc
mov
stos
inc
xor
sbb
push
jl
inc
call
sti
mov
das
cli
retf
cmc
(bad)
das
lods
adc
rep
ins
cmp
clc
ja
add
pop
jno
fild
fs
xchg
inc
push
repnz
pop
pop
lock
push
sub
add
inc
(bad)
sub
cmp
push
daa
push
fist
jg
shl
in
inc
cmp
lahf
add
dec
fisttp
js
call
jns
aam
addr16
mov
jp
dec
jns
inc
out
push
addr16
hlt
sub
clc
cmp
mov
inc
cmp
repnz
paddsb
xchg
mov
(bad)
sbb
cmc
xchg
rep
(bad)
push
add
dec
scas
lods
cdq
adc
push
cmp
jge
pop
aaa
imul
les
mov
add
mov
mov
pop
sbb
stos
cmp
psubq
sub
pop
cmp
aas
stos
popa
dec
push
push
and
cmps
jg
mov
or
inc
stos
push
aas
movs
sahf
sbb
retf
ficomp
hlt
pop
jae
sub
cmps
hlt
jo
(bad)
sbb
add
and
sbb
cmps
sbb
cwde
inc
sti
jecxz
scas
jecxz
pop
lds
aas
lods
mov
inc
gs
in
jmp
dec
or
pop
jmp
pop
mov
pop
call
dec
jge
cmp
sti
into
inc
shr
aas
stos
pop
push
lock
inc
add
adc
cmp
add
clc
das
in
xchg
add
jp
cdq
arpl
aad
and
mov
aad
push
pop
push
outs
fsubr
inc
mov
scas
pop
pop
pop
cli
adc
xchg
scas
lahf
into
aaa
(bad)
mov
adc
mov
(bad)
hlt
aam
jecxz
pop
and
fild
xchg
mov
out
imul
add
mov
dec
outs
mov
add
scas
pop
stos
inc
mov
mov
(bad)
test
mov
(bad)
pop
mov
adc
cmp
(bad)
xchg
cmp
and
lods
inc
or
cwde
sbb
cmp
movs
movs
xchg
add
je
xor
xchg
or
and
ret
test
sub
dec
retf
gs
xchg
sbb
outs
pop
ins
or
push
jmp
fild
jnp
inc
sub
test
hlt
pop
pop
aas
(bad)
cmp
cmps
add
add
inc
mov
jmp
mov
jo
retf
lahf
aad
push
daa
push
data16
xchg
add
sbb
xchg
mov
pop
push
clc
xchg
bound
test
js
outs
aas
jmp
and
retf
inc
jmp
xchg
xor
and
pop
cmp
and
dec
dec
out
adc
inc
dec
mov
xchg
push
xchg
dec
and
movs
and
add
stos
sar
fstp
inc
push
scas
jae
movs
mov
inc
in
inc
leave
jg
imul
lods
sar
(bad)
cli
ins
pop
dec
xchg
jle
idiv
add
icebp
imul
xchg
hlt
lods
sbb
xor
pop
xor
jg
(bad)
and
push
mov
jecxz
movs
inc
pop
ins
cmc
fwait
jmp
das
mov
aas
stos
(bad)
xchg
movs
(bad)
mov
adc
popa
add
mov
pop
mov
xchg
leave
sub
cdq
and
mov
adc
hlt
jmp
dec
mov
call
mov
not
xchg
fist
cli
ins
call
out
fdivr
xlat
inc
inc
jb
loope
jmp
jo
add
sub
lahf
lahf
pop
xchg
and
mov
gs
mov
test
loope
lea
repz
(bad)
(bad)
in
adc
dec
sub
lds
and
xchg
daa
dec
xchg
xchg
or
pushf
es
xchg
sbb
adc
mov
cli
jne
fcomip
mov
in
popf
outs
mov
add
in
daa
std
pop
lea
loopne
aas
jae
ret
(bad)
fst
sub
mov
lahf
mov
shr
sub
mov
call
cld
outs
iret
scas
cld
and
or
daa
add
sub
push
mov
movs
es
cmps
les
xchg
fmul
test
pop
(bad)
sti
jecxz
add
adc
aad
mov
dec
test
neg
ret
pop
lock
and
push
ins
sbb
mov
pop
push
in
scas
pop
jno
mov
dec
inc
inc
bound
imul
cmc
mov
sbb
push
movaps
iret
fs
mov
and
lahf
xlat
sub
cli
cwde
jecxz
mov
cmc
aas
repz
add
sub
scas
ror
push
mov
mov
inc
and
mov
push
cmps
jge
(bad)
sti
in
lock
outs
inc
stos
and
inc
cli
jne
out
inc
mov
cli
mov
in
inc
mov
push
push
xchg
xchg
xchg
xchg
xchg
xchg
mov
lds
call
scas
mov
stos
and
pop
inc
mov
imul
lea
mov
pop
inc
shl
std
outs
hlt
mov
data16
mul
shl
(bad)
nop
aam
loope
jo
push
loopne
scas
popa
jne
xor
data16
mov
inc
enter
and
xchg
ret
jle
xchg
retf
stos
aas
dec
lahf
aad
add
int3
and
sar
fisubr
xchg
mov
push
aad
jle
jb
out
pop
lahf
xlat
inc
inc
bound
sub
es
xor
rcl
add
push
enter
sar
push
xchg
mov
leave
jp
xchg
xchg
and
mov
(bad)
cmps
sub
addr16
pop
int3
sub
stos
jo
or
sbb
mov
jg
jg
inc
jmp
call
cmp
sub
or
lahf
or
out
(bad)
cli
cmc
(bad)
rcl
xor
mov
mov
icebp
sbb
(bad)
(bad)
fistp
movs
or
push
retf
adc
ins
jp
sti
rcr
inc
lods
jecxz
shr
cwde
pop
hlt
jmp
dec
mov
loopne
jo
in
in
ss
pop
xchg
mov
push
fwait
xor
jle
adc
push
sbb
out
fistp
inc
pop
dec
arpl
shl
mov
jne
add
stos
test
ins
loope
mov
jmp
jmp
jb
cmp
add
(bad)
add
pop
cmp
inc
retf
sbb
mov
aam
sti
das
push
addr16
faddp
div
test
or
cmp
cmp
sub
leave
out
pusha
cwde
nop
(bad)
jbe
imul
mov
sbb
sub
call
pop
icebp
lds
pop
mov
jmp
mov
jmp
repnz
(bad)
jo
dec
sub
cmp
stos
sbb
xor
mov
sbb
cmp
hlt
lahf
fidivr
sub
imul
jbe
xor
xchg
mov
cmc
xchg
outs
out
cs
imul
inc
or
jmp
push
adc
fst
jmp
call
hlt
pop
cmp
leave
jp
push
cli
mov
ror
mov
aam
or
mov
std
je
imul
adc
ja
out
iret
mov
les
mov
js
xchg
loop
movs
movs
sub
stos
loope
stc
pop
pop
cmps
cmc
xchg
jp
adc
cmp
stos
je
je
lea
jb
and
fs
imul
jl
mov
mov
repz
inc
in
imul
fistp
pop
jl
mov
sbb
push
out
mov
es
sahf
mov
inc
push
xor
lods
jne
add
cmps
inc
cmp
pop
iret
mov
mov
pop
mov
ret
test
or
addr16
pop
rcl
push
lds
into
xor
dec
mov
pop
push
mov
int
sbb
and
out
add
int
pcmpeqw
sub
lock
adc
and
fld
imul
ja
xchg
stos
and
inc
retf
jmp
int
iret
mov
pop
pop
pushf
or
cmps
pop
mov
loope
or
mov
aam
sti
daa
push
lods
pop
ret
stc
shr
cmp
lods
and
push
bound
lods
sub
addr16
cwde
jmp
and
addr16
mov
(bad)
into
shl
cmps
out
stos
jge
jmp
das
push
add
stos
xor
(bad)
call
mov
cmps
cmc
imul
out
in
cmp
lock
xchg
jmp
cli
mov
stc
pop
jmp
xor
int3
dec
inc
(bad)
test
pop
jne
cmc
mov
stos
dec
out
xor
mov
outs
add
jne
std
and
test
add
aam
pop
xor
mov
(bad)
aas
xor
movs
inc
(bad)
pop
sub
arpl
cmp
sbb
xor
mov
cmps
bound
sub
and
int3
cmp
add
cmp
or
scas
inc
xchg
call
adc
fisttp
pop
loopne
gs
lock
pop
outs
bound
mov
out
lods
nop
push
(bad)
cmc
xor
cmp
sbb
jnp
shr
inc
sbb
push
dec
(bad)
jbe
int3
mov
pop
pop
pop
xor
or
or
aas
adc
or
push
push
fist
mov
out
test
inc
pop
jmp
mov
push
xchg
mov
imul
xchg
jmp
xor
icebp
or
add
out
stos
jg
test
test
adc
fisub
ret
mov
mov
push
test
jbe
(bad)
addr16
out
popa
packuswb
add
aad
mov
cs
adc
adc
ins
mov
enter
sub
test
aam
dec
lods
xor
cdq
cmp
xchg
cmps
dec
dec
dec
cdq
and
movs
xchg
daa
dec
dec
dec
and
push
xchg
dec
and
test
or
dec
sub
dec
dec
dec
push
movs
xchg
daa
or
fs
movs
or
dec
and
dec
push
inc
movs
xchg
dec
pop
cmp
mov
cmps
xchg
add
jl
fist
fmul
js
ror
test
cmps
fstp
cmc
retf
cmp
dec
fnstsw
stos
jbe
pop
fdivrp
jmp
dec
jne
dec
or
jno
jle
fwait
hlt
pop
inc
in
iret
icebp
push
sahf
out
pop
mov
jbe
pop
loopne
xchg
ret
inc
nop
mov
aas
jecxz
cmps
or
xchg
test
in
leave
loope
(bad)
pop
mov
retf
icebp
xor
imul
dec
and
mov
stc
add
(bad)
push
sub
xchg
xchg
xchg
fs
mov
xchg
xchg
dec
push
sub
movs
retf
test
movs
movs
cmp
sub
dec
and
add
popf
and
cmp
gs
shl
je
scas
pop
fstp
rol
jp
imul
pop
inc
inc
mov
das
cmp
inc
cli
loope
(bad)
loope
mov
sar
add
inc
shr
ins
and
fucomip
(bad)
(bad)
mov
cli
pop
mov
(bad)
mov
mov
loop
or
jge
addr16
into
mov
inc
(bad)
jbe
fild
mov
(bad)
lods
push
mov
jmp
fsub
jo
(bad)
jmp
(bad)
adc
jae
out
cmps
mov
pop
cmc
jg
(bad)
out
(bad)
jnp
ret
hlt
dec
movs
inc
mov
pop
repz
movs
mov
je
xchg
imul
cmps
and
dec
es
dec
imul
xchg
xchg
or
cdq
dec
xor
and
sub
je
add
jb
and
rol
sub
add
pop
retf
jmp
int3
repnz
fidivr
push
repz
cmp
cli
inc
push
mov
shr
pop
cdq
add
or
dec
jge
pop
test
cmc
or
fdiv
sub
lock
aad
cmp
fsub
(bad)
cmp
add
xlat
jnp
jg
push
sub
psubd
outs
std
jbe
int3
inc
mov
call
jnp
nop
call
ficomp
or
add
ja
int3
jbe
fistp
mov
add
cmc
inc
jmp
scas
mov
jmp
inc
hlt
jg
jne
out
call
dec
test
cli
(bad)
cmc
repnz
mov
(bad)
jae
xlat
mov
mov
cli
leave
xchg
js
inc
dec
clc
aam
sti
jecxz
mov
jmp
or
call
cmps
xchg
jl
inc
xchg
inc
jg
mov
cmc
dec
fwait
inc
jle
adc
(bad)
rol
jno
pop
inc
std
push
push
mov
cli
arpl
sbb
and
add
rcr
xor
xor
sbb
movs
fdivr
call
sub
jmp
sub
out
xor
xchg
lahf
mov
mov
daa
xchg
xchg
(bad)
add
ins
mov
in
inc
std
pop
sub
out
aad
mov
add
dec
popw
sub
pop
in
sar
inc
mov
push
hlt
stos
ja
(bad)
add
cmps
adc
jae
hlt
dec
pop
add
mov
out
adc
aas
jmp
cmc
jl
dec
pop
pop
inc
sahf
fwait
cld
mov
xchg
aad
jae
rcr
outs
hlt
(bad)
icebp
test
enter
ror
call
or
mov
dec
adc
adc
fucomip
(bad)
(bad)
(bad)
xlat
jg
repz
ret
mov
inc
int3
or
stos
js
pop
mov
idiv
pop
(bad)
ja
inc
ins
push
nop
and
adc
out
stc
xchg
push
inc
pop
mov
mov
(bad)
(bad)
out
in
cs
cld
ja
loop
adc
inc
adc
pop
out
mov
pop
or
mov
jge
fucomp
mov
mov
xor
stos
out
mov
push
in
jne
mov
jno
xchg
std
ins
scas
push
mov
call
sub
ss
jae
stos
aas
daa
lahf
cld
mov
fdivr
mov
dec
sub
inc
xor
push
into
call
cwde
xlat
paddb
xchg
pop
hlt
retf
adc
mov
mov
out
sti
loop
test
add
iret
cwde
jo
add
retf
xor
add
(bad)
cli
cmps
cmps
std
cwde
out
iret
lods
cld
push
adc
sub
fwait
arpl
retf
pushf
add
xchg
mov
enter
or
(bad)
lods
jmp
cli
cdq
cmc
dec
mul
mov
mov
mov
int
xor
test
add
jge
arpl
stos
mov
outs
cmps
ja
sbb
movs
pop
sub
pusha
xchg
test
adc
out
xchg
jne
test
pop
jmp
sahf
iret
cmps
pop
shl
mov
cli
mov
das
pusha
hlt
ins
cmp
pop
dec
js
pop
movs
lds
mov
scas
xchg
lods
std
dec
into
jmp
sub
sahf
int
neg
cld
jecxz
add
(bad)
ins
shl
cmp
adc
push
push
stc
and
mov
mov
cmp
jg
mov
int3
scas
cmp
in
ds
pop
xor
sub
cmps
call
fist
(bad)
sub
(bad)
push
xlat
jl
int
cdq
loope
inc
mov
mov
retf
popa
jnp
pop
cli
test
aaa
gs
jae
and
jp
aam
into
xchg
das
(bad)
push
xchg
stc
in
inc
ror
inc
pop
jge
sub
stc
cmp
es
scas
adc
pushf
movs
xchg
push
nop
dec
daa
dec
or
daa
cwde
inc
dec
out
xchg
aad
cmp
cld
ja
loopne
hlt
pop
fcomip
jbe
ins
out
pushf
outs
mov
mov
inc
mov
mov
(bad)
jae
out
(bad)
sti
cmc
scas
pop
adc
mov
jno
lea
pop
sti
jmp
nop
sbb
sbb
push
fisttp
jb
(bad)
(bad)
jg
jns
pop
mov
xchg
iret
jmp
mov
out
jbe
neg
fimul
sbb
call
retf
inc
add
mov
sub
xlat
arpl
adc
ss
addr16
hlt
imul
(bad)
pop
clc
inc
iret
cmps
add
pop
xor
xor
in
xor
test
dec
outs
daa
push
and
mov
mov
jg
(bad)
inc
cmps
pop
mov
fisttp
into
lods
jo
scas
outs
cli
dec
lahf
sti
test
sub
adc
xchg
push
adc
inc
dec
sub
add
in
or
out
sub
out
jecxz
xchg
(bad)
sti
adc
xchg
int3
pop
jg
pop
movs
lds
loope
inc
ret
std
daa
cld
or
in
test
mov
rol
adc
repnz
dec
adc
(bad)
xlat
and
int3
(bad)
fdivrp
add
enter
popf
dec
pop
jmp
test
push
push
pop
mov
stos
jb
xchg
fs
jne
loop
sbb
shr
movs
ret
hlt
dec
cmc
jg
mov
sub
leave
jmp
or
repz
inc
pop
mov
lahf
or
pop
push
mov
mov
movs
or
pop
addr16
inc
out
pop
inc
push
xchg
enter
pop
pop
stos
jno
shr
adc
jo
push
movs
cmps
dec
adc
xor
aad
scas
cld
cli
inc
test
adc
scas
mov
inc
mov
inc
inc
cmc
inc
pop
shr
loope
mov
cmp
jmp
push
pop
cmp
jle
cmp
ss
icebp
stos
jmp
xchg
lods
ret
adc
shl
jl
pop
call
aas
sahf
iret
jmp
lods
inc
jge
xchg
fcomip
lahf
mov
cdq
sub
adc
data16
lea
fisttp
out
inc
adc
test
test
ss
(bad)
pop
je
sysret
sti
sub
cmc
addr16
mov
add
movs
inc
in
sub
scas
adc
inc
movs
mov
shr
push
gs
std
jae
xchg
push
dec
and
xchg
xchg
arpl
mov
(bad)
retf
jge
jge
sahf
pop
js
sbb
aaa
cmp
out
sub
dec
(bad)
sub
fwait
mov
pusha
movs
xor
sti
pop
(bad)
inc
inc
and
cli
dec
cmp
hlt
fs
inc
sub
imul
int
jle
jle
(bad)
cmc
(bad)
jp
xchg
sbb
push
jmp
xchg
in
mov
adc
xor
or
dec
loop
fisttp
loope
mov
cli
ror
ror
ins
pop
lea
je
dec
push
xor
pop
jmp
aad
in
mov
or
push
cmps
sub
gs
jne
imul
dec
xchg
int
and
aas
jne
inc
rcr
jge
or
and
pop
in
pop
je
pusha
repnz
or
sbb
push
cdq
ja
loop
pop
xchg
in
mov
out
call
enter
dec
js
pop
cdq
and
mov
xchg
xchg
jmp
mov
or
pop
arpl
(bad)
xchg
pop
call
sbb
movs
repz
mov
scas
(bad)
(bad)
ins
(bad)
mov
adc
dec
jmp
inc
sbb
nop
inc
sub
ds
fs
into
adc
and
imul
(bad)
mov
pop
mov
shl
push
adc
push
popf
cmc
pop
stos
fsubr
je
arpl
loop
mov
xchg
sub
mov
outs
jge
inc
fdivp
in
mov
inc
dec
cmp
(bad)
pop
ficom
cmp
int
jne
xchg
aas
imul
jne
(bad)
mov
cdq
rcr
fidivr
pushf
mov
ror
push
xchg
stc
pop
sbb
fistp
out
int
cld
pop
shl
rcr
xor
mov
std
lahf
(bad)
sub
inc
dec
sub
push
fidivr
add
xor
dec
cli
rcr
cmp
and
add
(bad)
je
scas
cmc
ss
mov
mov
jne
(bad)
push
movs
or
(bad)
je
lahf
fstp
cmp
mov
or
neg
or
fimul
pop
push
scas
ror
ja
xchg
push
jmp
fist
loopne
arpl
daa
movs
mov
ret
cmp
cmp
in
push
in
movs
ret
cmp
pop
aaa
lods
sbb
cli
aaa
mov
pop
mov
cmps
bound
(bad)
sbb
nop
and
mov
pshufw
cmp
inc
lea
mov
xlat
jnp
pop
cmp
ficom
mov
mov
adc
and
mov
lahf
xor
and
sbb
jmp
cmps
pop
mov
lods
mov
push
and
aam
cmp
mov
push
jnp
or
inc
dec
add
test
xor
sub
in
mov
xor
repnz
popa
lock
in
test
in
ja
mov
iret
push
inc
adc
nop
xor
cwde
repnz
xor
and
jae
jnp
sub
xchg
packsswb
push
ror
fiadd
fwait
jg
shl
aam
dec
lods
xor
cdq
and
push
repnz
push
cdq
and
dec
dec
or
xchg
dec
dec
dec
xchg
dec
sub
xchg
dec
push
es
and
and
pop
movs
movs
and
dec
sub
dec
dec
xchg
leave
shl
and
movs
in
fs
cs
es
and
mov
and
push
(bad)
mov
xchg
inc
retf
sahf
push
rcr
repz
mov
dec
mov
in
movs
pop
mov
(bad)
addr16
fwait
xchg
pop
inc
mov
and
push
mov
stos
popf
pop
pop
(bad)
xor
outs
fnstcw
stos
fidiv
lahf
std
xor
push
ret
add
sub
xchg
dec
and
dec
xchg
xchg
xchg
or
sub
je
xor
xchg
dec
xchg
xchg
cwde
xchg
mov
or
movs
xchg
dec
sub
xchg
and
and
sub
xor
xchg
pushf
adc
rcl
pushf
sub
scas
inc
xchg
loope
sub
das
icebp
xlat
mov
ds
gs
cmp
shl
(bad)
mov
mov
(bad)
or
std
ss
fidiv
mov
push
jbe
ret
out
test
mov
es
aas
dec
(bad)
cli
lea
shl
adc
jmp
xchg
adc
push
in
jbe
sub
out
dec
daa
sub
cmp
leave
and
(bad)
test
and
mov
cmps
test
rcl
dec
xchg
dec
dec
movs
xchg
movs
xchg
xchg
dec
adc
xchg
mov
pop
adc
xor
or
cdq
dec
fwait
pop
add
cmp
dec
mov
(bad)
jns
repnz
movs
jge
cli
test
sti
pop
inc
pop
dec
add
gs
test
pop
ja
mov
in
cld
sbb
pop
pop
int3
inc
cmps
mov
idiv
clc
xchg
hlt
xchg
mov
cmc
lods
push
hlt
mov
mov
stos
jmp
(bad)
retf
cmc
xchg
lea
pop
out
fbld
pop
cdq
add
dec
jmp
out
cwde
cmps
sub
push
sub
xor
dec
mov
and
xchg
dec
cmp
push
dec
push
dec
dec
test
cwde
and
xchg
dec
xor
jne
in
mov
dec
fisttp
jne
pop
inc
cli
out
popf
shl
mov
(bad)
movs
jle
into
mov
(bad)
jge
outs
mov
inc
cli
fld
jmp
das
cli
(bad)
push
mov
nop
inc
or
jmp
scas
inc
mov
adc
int
jmp
(bad)
(bad)
pop
cli
loop
pop
mov
out
cli
ins
mov
cwde
pop
out
sbb
aas
and
mov
fs
es
add
push
and
xchg
outs
adc
lahf
mov
mov
xlat
xlat
hlt
fidivr
mov
mov
dec
(bad)
mov
dec
movs
call
mov
cdq
dec
inc
cmp
popa
sbb
jae
cmp
add
push
idiv
cld
(bad)
in
or
(bad)
call
pop
mov
aad
jmp
(bad)
in
jle
not
mov
cmp
test
fs
arpl
js
jns
inc
inc
sbb
pop
fs
xchg
cli
jp
dec
std
and
inc
iret
inc
scas
cs
movs
jne
lods
fstp
mov
adc
call
mov
add
pop
dec
xlat
mov
push
ins
into
add
jg
stc
xchg
push
hlt
xchg
ins
mov
fisub
pop
fldcw
or
mov
xchg
arpl
in
sbb
aas
jmp
xor
lock
add
mov
cmp
push
btc
pop
paddw
cwde
pushf
xor
stos
aas
int
mov
fidivr
jae
es
inc
add
fldcw
xor
sbb
aas
not
sub
popf
and
popf
xchg
shl
imul
jg
xor
cmps
dec
dec
mov
mov
push
out
test
mov
cmps
shl
sub
xlat
pop
in
imul
imul
mov
mov
hlt
mov
mov
add
dec
pushf
js
pop
call
outs
push
pushf
je
icebp
mov
(bad)
addr16
(bad)
lahf
cli
dec
(bad)
mov
jmp
icebp
inc
pop
push
mov
out
into
or
std
dec
shr
lock
lahf
jmp
hlt
push
(bad)
mov
mov
cmc
push
pushf
int
iret
stos
stc
(bad)
and
(bad)
and
sub
sbb
mov
ror
fldenv
popf
lea
aad
jge
mov
icebp
push
adc
add
xlat
cmp
push
sub
div
(bad)
sti
repnz
lods
inc
sub
mov
xchg
xchg
xchg
fld
sti
cmp
hlt
and
fidivr
repnz
scas
xor
faddp
repnz
cld
xlat
mov
adc
int
addr16
sti
fidivr
cli
int
or
popa
in
push
call
sub
shr
xor
cli
jle
jmp
mov
(bad)
jnp
popa
out
shr
scas
imul
div
cmc
lahf
icebp
je
ss
imul
call
inc
leave
scas
sub
add
inc
call
sub
xchg
pop
out
fwait
(bad)
aam
mov
mov
cmp
cli
scas
inc
sbb
rcr
pop
mov
cmps
jp
push
scas
(bad)
add
into
sahf
inc
in
aas
(bad)
stc
outs
dec
std
inc
mov
int
xor
dec
cmps
pop
in
mov
mov
push
cmp
scas
cmp
lahf
and
(bad)
ja
pushf
xchg
leave
or
pushf
call
adc
mov
lahf
push
out
sbb
(bad)
sbb
inc
xor
scas
push
rcr
and
cmc
std
outs
cld
pop
pop
mov
jle
clc
inc
aas
hlt
push
scas
(bad)
jne
mov
cmp
inc
mov
lods
cmp
das
lods
movs
cld
dec
inc
jmp
mov
out
iret
sbb
ins
push
mov
lahf
fcmove
jno
mov
pop
pop
and
gs
jle
arpl
aas
dec
iret
add
jb
loop
inc
mov
imul
adc
sbb
xor
je
jb
ror
adc
dec
ja
jg
imul
add
dec
repnz
(bad)
add
mul
xor
lds
mov
dec
jmp
fnstcw
jmp
stos
fstp
sbb
add
mov
xchg
sub
int
jno
or
js
xchg
data16
call
push
jg
or
cmps
cmp
sub
not
xchg
arpl
mov
sub
jmp
dec
or
cmps
xchg
push
jmp
sar
push
push
mov
cmp
stos
pop
stos
pop
xor
retf
inc
cmps
cmc
aas
inc
jp
mov
(bad)
daa
push
push
(bad)
cmps
std
sbb
loope
pop
ds
retf
or
pop
xchg
div
into
pop
inc
jmp
add
sub
mov
dec
push
cmp
jne
push
popa
and
adc
jb
jmp
mov
idiv
add
aad
movs
sub
mov
test
std
cmp
add
repz
inc
pop
idiv
mov
pop
cmps
iret
in
cmc
cmp
mov
mov
bound
retf
jg
jae
xor
out
xchg
or
test
test
mov
pusha
adc
mov
cmp
fxch
ret
(bad)
rcr
jo
cs
push
jno
fld
loopne
mov
aas
jno
(bad)
loopne
out
mov
out
pop
stc
in
inc
leave
and
mov
xchg
dec
ins
loop
aas
pop
fcomi
cwde
jns
loopne
mov
bound
xchg
pminsw
cli
iret
push
scas
(bad)
push
loopne
adc
out
adc
and
shl
out
mov
jbe
jg
jg
stos
mov
sub
loopne
pop
jmp
cmp
pop
push
fs
(bad)
clc
out
pop
jle
push
mov
push
ja
rcl
pop
bound
popf
std
je
aam
xlat
xchg
sbb
or
xchg
imul
dec
and
pop
sti
(bad)
and
imul
cmps
and
ss
xchg
cmps
imul
sub
test
push
rcl
fisttp
out
psubq
test
test
scas
jne
jb
loopne
test
sub
fsub
sbb
aad
out
(bad)
add
mov
cmps
shl
sti
pop
clc
sub
(bad)
push
lock
inc
pop
dec
(bad)
and
test
js
inc
sub
cdq
or
sub
popa
nop
popa
sbb
pop
xor
ins
xchg
mov
aad
jb
fsub
sbb
and
sub
cld
das
arpl
add
shl
mov
jle
sbb
inc
mov
jge
pop
das
movs
cmp
xchg
leave
addr16
inc
push
bound
jmp
push
jnp
stos
std
(bad)
std
adc
add
push
dec
inc
call
jo
push
in
pop
adc
pop
pop
fiadd
enter
test
data16
movs
ret
jg
cli
(bad)
iret
push
add
xchg
jb
retf
xor
pop
push
pop
pop
cli
(bad)
fwait
rcr
scas
movs
push
dec
jmp
push
jp
clc
shr
dec
rcl
(bad)
jae
jecxz
popa
call
adc
mov
aas
cmp
popa
stc
test
xchg
fld
sbb
push
jne
mov
rcr
mov
fst
cmps
lods
mov
idiv
not
add
test
loope
inc
dec
scas
and
add
dec
xchg
in
push
(bad)
aaa
or
sub
adc
jle
sbb
jl
mov
sysret
xchg
loope
mov
lea
sbb
fwait
cmp
aaa
pop
ficom
cmps
mov
push
or
jne
std
adc
(bad)
scas
call
mov
ins
cmp
icebp
inc
mov
ds
test
or
push
ss
mov
lock
or
(bad)
dec
fst
push
loopne
and
stc
movs
or
mov
sbb
sbb
in
jge
jnp
fs
mov
jg
dec
mov
jnp
int
push
imul
mov
fisttp
sahf
enter
inc
fdivr
les
(bad)
je
push
xchg
call
mov
xchg
jnp
popf
inc
add
mov
ret
mov
add
repz
dec
and
xchg
adc
dec
dec
dec
and
push
xchg
dec
and
movs
movs
and
push
xchg
test
xchg
xchg
push
xor
movs
leave
ror
dec
cdq
and
movs
movs
and
push
xchg
dec
and
movs
xchg
cmps
dec
dec
xchg
xchg
dec
and
repnz
xchg
dec
or
lods
xor
das
pop
adc
xor
outs
fidivr
stos
inc
cld
int
leave
fidivr
jle
aad
push
xor
sub
lock
xor
mov
push
jp
mov
sub
sub
mov
mov
mov
int
mov
inc
int3
fimul
test
popf
adc
dec
movs
adc
pop
and
xor
movs
sub
xor
push
jmp
jmp
inc
xor
xchg
xchg
dec
and
xchg
mov
mov
dec
adc
in
sub
xchg
daa
test
cs
pusha
xchg
dec
pop
cmp
sar
std
or
jge
xchg
ret
inc
cmp
jmp
cld
imul
pushw
mov
aam
lds
test
jnp
pop
mov
fsub
(bad)
pop
das
addr16
cli
dec
mov
cmc
out
lods
inc
jg
cmp
jb
(bad)
jns
jae
test
mov
ins
sbb
sbb
shl
ret
sub
mov
dec
xchg
sub
jo
dec
adc
xor
push
jns
adc
movs
cdq
sub
mov
jl
add
xor
xor
adc
jns
sbb
dec
dec
movs
dec
movs
or
push
gs
fistp
inc
call
cli
in
rcr
xchg
inc
add
mov
bswap
mov
cmp
cmc
mov
sub
pop
pop
pop
imul
inc
fs
stc
mov
add
(bad)
(bad)
loopne
sbb
mov
adc
add
cli
mov
add
cmc
and
stc
lods
lahf
in
inc
test
loope
(bad)
fdiv
movs
sub
dec
dec
movs
or
and
xchg
test
and
movs
es
cwde
movs
movs
rcl
aas
or
jo
sbb
push
xchg
inc
jmp
je
xchg
in
enter
(bad)
test
dec
(bad)
leave
mov
(bad)
mov
xchg
sbb
enter
popa
ins
std
pop
cli
shr
jae
fucomi
arpl
fmul
fisubr
mov
adc
loopne
push
mov
std
pop
std
xchg
out
jecxz
push
or
push
xlat
lahf
ja
addr16
or
nop
movs
shr
je
xor
xchg
daa
dec
dec
movs
sub
mov
mov
sub
inc
cmp
test
in
mov
gs
sub
js
xor
sub
dec
dec
mov
sbb
cmc
and
cmps
lods
xor
add
mov
pop
xor
dec
push
jne
jle
loopne
(bad)
cpuid
je
scas
push
cmp
push
cmc
jnp
arpl
push
sti
and
outs
cmp
inc
jmp
mov
add
inc
jmp
xchg
adc
inc
scas
hlt
dec
cli
ss
cmps
std
inc
aad
pop
inc
in
std
out
ret
(bad)
push
in
cmp
xchg
cwde
movs
lahf
xchg
xchg
mov
test
dec
xor
jnp
push
sbb
pusha
test
inc
sbb
fistp
mov
mov
sar
das
push
lods
pop
mov
out
aas
cmp
or
scas
ret
inc
mov
cmp
adc
jp
clc
int3
(bad)
pop
scas
inc
sbb
push
out
std
popf
pop
cld
or
test
and
jmp
loopne
popf
aas
lock
push
jmp
mov
pop
nop
inc
je
add
sbb
dec
mov
movs
dec
dec
sub
dec
dec
adc
stos
mov
push
icebp
fcomp
cli
scas
fist
xchg
cli
pop
inc
inc
sbb
test
inc
push
(bad)
jg
ds
std
es
aam
push
loop
fistp
jnp
inc
push
sti
stos
ret
pop
sbb
fsubr
xor
dec
or
mov
scas
sbb
fist
push
(bad)
jge
movs
xlat
aam
add
pop
dec
inc
inc
sbb
js
pop
dec
mov
mov
inc
and
scas
addr16
(bad)
and
fiadd
outs
mov
in
test
dec
cmp
enter
(bad)
push
fs
jnp
jae
cmps
sub
push
pop
xchg
push
aam
xor
shl
cwde
addr16
cmp
hlt
add
push
addr16
neg
sub
mov
lock
out
aas
int
xchg
xchg
xchg
neg
arpl
pop
dec
dec
jge
inc
mov
fs
add
retf
adc
call
out
imul
int
inc
in
das
sbb
test
mov
push
das
mov
loop
(bad)
dec
inc
dec
mov
adc
lahf
repz
pop
jge
mov
jns
cmps
test
lahf
js
lods
lahf
stc
xor
js
popa
mov
mov
jecxz
sub
out
inc
xchg
dec
xor
daa
enter
mov
lahf
out
mov
lock
(bad)
cmp
aas
inc
imul
jg
jae
push
rol
mov
mov
sbb
add
xor
mov
mov
fisubr
aas
pushf
loope
push
mov
sub
idiv
xor
(bad)
pop
repz
and
push
xlat
sar
lea
jg
xchg
outs
imul
pop
pusha
push
imul
out
jne
push
imul
jge
cld
pusha
in
lds
cmps
scas
(bad)
inc
cmp
mov
inc
fist
retf
xchg
lods
dec
cmp
ror
aad
mov
dec
mov
cld
shl
jmp
lahf
mov
and
push
pop
pop
pop
stos
mov
jecxz
sub
mov
out
cmp
and
inc
cmp
test
das
xchg
std
xchg
ret
sbb
inc
sub
mov
jp
ror
(bad)
xor
call
bound
cmp
jbe
mov
add
fstp
jnp
sub
scas
xchg
xor
fistp
stos
clc
jge
jle
sahf
dec
sbb
jns
pop
pop
int3
ret
sub
aas
and
mov
jne
outs
(bad)
pop
aas
out
aad
fnstenv
retf
mov
xchg
mov
or
push
ins
(bad)
ds
push
(bad)
pop
fcomp
out
movs
lds
test
popf
aas
stos
arpl
jp
(bad)
pop
mov
jb
scas
les
mov
xor
dec
xchg
and
mov
mov
adc
int
add
add
or
xor
mov
lods
jne
je
popf
(bad)
pop
pop
mov
fcomp
mov
mov
dec
dec
mov
dec
dec
fiadd
jge
test
lods
sti
inc
sub
fdiv
and
mov
das
cmps
cmp
mov
mov
scas
std
je
ret
mov
cmp
mov
call
ins
mov
sbb
movs
cmp
sbb
fyl2x
add
dec
mov
ret
(bad)
cmp
(bad)
(bad)
loopne
cmps
dec
sbb
je
sbb
dec
mov
(bad)
sub
outs
out
shl
jo
fs
adc
cdq
sti
ror
imul
cmps
popa
std
lods
mov
jae
xor
lds
hlt
ret
cli
push
adc
ficomp
mov
shl
add
sbb
imul
cmp
repz
inc
int
test
inc
dec
icebp
repnz
pop
es
mov
jge
repz
pop
aad
stos
gs
fbstp
jae
js
clc
gs
cmp
pop
sub
(bad)
stos
mov
jge
inc
cli
(bad)
out
(bad)
push
mov
data16
je
loop
pop
jmp
lods
adc
xlat
fmul
cmps
iret
jmp
gs
ret
add
cs
popa
shr
icebp
or
push
imul
push
iret
daa
mov
pop
sub
and
out
sti
scas
xchg
cmps
add
push
push
sub
(bad)
shl
mov
xlat
or
push
xchg
nop
xchg
mov
mov
xor
daa
mov
(bad)
cli
cld
paddw
adc
dec
arpl
test
xor
push
aam
rcr
and
mov
stos
shr
fs
pop
pop
push
jmp
jle
jg
leave
xchg
leave
adc
cmps
pop
mov
(bad)
ja
(bad)
sub
fisttp
push
inc
xchg
in
addr16
add
push
jae
je
xchg
stos
push
pop
inc
jmp
shl
pop
dec
mov
fist
retf
jg
or
add
je
out
arpl
call
or
out
call
fdiv
mov
mov
rcl
push
lds
test
daa
mov
aad
xchg
pushf
xchg
ja
imul
jne
pop
loope
ss
std
sub
inc
mov
cmps
scas
addr16
inc
push
fisttp
out
adc
jo
lds
call
pop
pop
popa
aad
dec
mov
clc
sub
je
push
ins
lds
ror
jg
and
push
dec
xchg
inc
(bad)
pop
movs
jmp
shr
test
adc
cmps
imul
cwde
repnz
mov
retf
mov
mov
in
cmps
xchg
shr
mov
out
leave
pop
nop
push
pop
jmp
inc
loope
fidivr
out
inc
dec
mov
jae
mov
out
rol
push
cli
pop
jg
inc
test
(bad)
int
inc
out
jmp
mov
inc
mov
and
js
cmp
cdq
(bad)
xchg
dec
pop
(bad)
mov
shl
xchg
out
test
(bad)
je
lods
cmp
jno
stc
addr16
xlat
jg
retf
pop
ret
stos
cmp
inc
sahf
mov
dec
inc
xchg
(bad)
(bad)
jg
jecxz
sbb
adc
fwait
hlt
mov
dec
movs
mov
adc
cdq
shr
je
imul
fisttp
mov
cdq
jge
mov
xor
(bad)
xor
out
out
pop
push
ss
push
stos
in
cmp
outs
out
sub
and
test
mov
imul
(bad)
push
or
arpl
ret
aad
cmp
xchg
ins
enter
cwde
cmp
ret
(bad)
and
popa
mov
lds
sbb
inc
inc
test
sbb
or
xchg
xchg
test
es
aad
inc
mov
push
pushf
adc
rcl
and
repz
mov
xchg
xchg
dec
xor
xchg
or
xchg
dec
and
and
dec
or
xchg
xchg
push
xchg
dec
and
movs
xchg
dec
and
movs
ror
movs
and
or
sub
dec
loope
dec
sub
dec
and
movs
in
xchg
je
mov
sub
rol
daa
jb
adc
xor
je
adc
int3
stos
pop
jae
mov
push
pop
pop
add
mov
jge
call
out
shl
jmp
jmp
cli
or
aaa
inc
pop
lods
sbb
scas
clc
mov
inc
rcl
ret
xor
(bad)
mov
and
movs
rcl
and
es
push
push
lock
push
cdq
and
xchg
xchg
test
push
xchg
dec
pop
push
daa
dec
and
and
dec
sub
pop
xor
dec
push
cwde
loope
cmp
xchg
lea
and
sahf
out
cld
pop
cmc
ror
push
jle
lock
mov
add
push
inc
sbb
hlt
int3
repz
call
(bad)
stos
inc
mov
push
idiv
dec
or
scas
jge
pop
add
ret
ja
aas
ss
es
adc
push
dec
mov
clc
icebp
dec
cmps
gs
cmp
je
test
xchg
mov
sub
dec
dec
dec
dec
jo
stc
movs
xchg
xchg
xchg
xchg
and
xchg
dec
dec
sub
and
ret
cmps
or
pop
mov
cmp
xchg
push
and
imul
adc
jge
cld
pop
jge
push
outs
call
or
jno
hlt
xchg
out
mov
pop
mov
gs
outs
dec
iret
pop
fdiv
cmp
dec
and
cmp
das
push
stos
retf
hlt
lea
cld
mov
out
clc
mov
add
call
call
(bad)
or
imul
clc
mov
fwait
pop
mov
and
push
les
cmps
inc
cmc
stos
sub
fs
and
jo
fs
push
and
in
mov
xchg
dec
xchg
inc
and
and
out
adc
and
push
dec
adc
jge
jmp
xchg
push
xchg
aam
loopne
sar
ins
cld
retf
imul
jb
jmp
push
fimul
aaa
xchg
cmp
idiv
inc
repnz
jbe
push
repz
fsub
(bad)
hlt
imul
std
(bad)
inc
enter
jg
sar
imul
fucom
(bad)
mov
pop
inc
cmps
fild
fistp
pusha
(bad)
sti
div
push
stos
ret
jo
dec
movs
sub
dec
aam
and
mov
sub
dec
adc
retf
xchg
loope
cs
xor
loopne
add
cs
push
mov
popa
(bad)
data16
mov
add
jg
dec
shrd
ds
(bad)
mov
sar
shl
data16
fidivr
jp
push
ds
(bad)
(bad)
jle
dec
ja
cli
lahf
int
cld
mov
aaa
xchg
dec
scas
jne
xchg
jg
enter
xchg
cmp
outs
cli
dec
inc
xchg
test
lock
push
dec
xchg
dec
push
fs
dec
dec
dec
and
test
sub
and
cmp
cmps
ins
jns
lea
aam
xchg
fwait
stos
cli
into
iret
dec
and
fdivr
enter
inc
mul
sbb
nop
jno
adc
xchg
(bad)
xor
(bad)
xchg
mov
mov
lahf
lods
ins
outs
imul
out
das
std
sbb
int3
cmp
in
sub
fs
fs
mov
dec
cwde
movs
movs
ret
dec
dec
cmps
or
loope
hlt
das
lods
jbe
leave
mov
movs
xchg
cmp
mov
mov
and
xchg
lods
jge
scas
mov
cmc
jo
(bad)
jge
std
sbb
inc
jmp
sbb
out
inc
fsubr
pop
idiv
jmp
mov
cmp
aam
inc
test
push
aas
jle
sub
push
dec
push
movs
cmp
adc
cmps
inc
ret
mov
mov
or
inc
aam
cmc
mov
sbb
cmp
mov
xchg
aam
fnstsw
int
mov
scas
outs
lods
mov
mov
mov
mov
or
addr16
ss
add
inc
cmc
push
mov
popf
push
mov
sbb
lea
jg
cmp
pop
and
or
sub
xor
mov
mov
cmp
aad
pop
stc
loopne
call
inc
les
mov
inc
dec
lods
xchg
cwde
aas
movs
ret
mov
loope
or
add
in
aaa
add
cli
pop
retf
test
mov
(bad)
pop
mov
dec
(bad)
jmp
ins
mov
xchg
dec
cli
pop
adc
mov
jecxz
mov
or
inc
loope
xor
jae
les
xchg
pop
sar
adc
adc
cli
inc
std
das
in
(bad)
mov
push
mov
jmp
mov
in
jnp
in
push
sahf
loopne
ins
cli
jnp
fsubr
in
out
retf
cmp
pusha
jne
mov
mov
push
mov
in
fcom
fcmovnb
scas
cmps
(bad)
inc
mov
add
icebp
pop
jne
cmp
imul
jo
lods
push
movs
xchg
cmp
push
sbb
dec
dec
xchg
sahf
out
mov
cli
cmp
pop
cmc
jne
pop
pop
jp
cmp
cs
cmp
int
add
mov
shr
fisttp
cdq
sbb
retf
pop
clc
pop
jmp
inc
in
or
mov
xchg
fcomi
fs
and
inc
ins
xchg
inc
pop
xchg
aad
in
dec
aas
rcr
add
dec
test
push
mov
imul
ss
mov
(bad)
push
loopne
add
sahf
(bad)
movs
std
jle
test
imul
lock
stc
call
sub
std
out
cli
mov
shr
mov
mov
jno
xchg
sub
popa
mov
pop
inc
xchg
mov
jmp
add
cmps
out
(bad)
push
stos
mov
ja
std
stos
(bad)
rcl
add
fstp
push
sbb
in
pop
stc
js
(bad)
and
cmp
or
mov
pushf
cmp
sbb
add
pop
pop
sar
aam
jle
add
mov
xchg
cmc
xlat
pop
xor
xchg
cli
sbb
cmp
nop
fisub
fwait
push
mov
mov
movs
std
pusha
retf
jmp
jle
aad
add
daa
idiv
xchg
fdiv
(bad)
xchg
push
loop
and
mov
pop
add
(bad)
iret
lods
pop
adc
int
cld
pop
repnz
sub
mov
sbb
sub
push
jnp
jne
mov
imul
cmc
iret
adc
sbb
mov
adc
iret
jge
scas
mov
sbb
xchg
fsubr
movs
shl
add
ror
aas
stc
adc
dec
pop
push
lods
and
xor
pop
xor
das
cmp
jmp
std
jae
hlt
jb
xor
cwde
inc
in
jecxz
(bad)
push
aam
(bad)
pop
add
xchg
push
fcom
jnp
lahf
stos
fistp
rcr
mov
push
and
push
test
add
mov
shl
(bad)
(bad)
pop
sar
idiv
cmp
fist
fcomp
clc
les
retf
stos
jo
dec
add
or
xor
mov
hlt
xchg
jg
js
shl
mul
addr16
ret
loope
adc
es
mov
push
sar
jo
mov
cmps
es
cmp
inc
stos
stos
cld
out
inc
and
or
hlt
cmp
movs
adc
pop
inc
lods
cmp
xchg
lahf
aam
cmps
xor
cld
inc
inc
repnz
dec
int
sbb
cmps
std
push
jmp
mov
imul
retf
dec
(bad)
lock
jns
hlt
and
inc
ret
enter
ins
dec
xchg
mov
in
stos
dec
out
push
fstp
pop
and
push
std
sub
out
sub
cmp
cmc
arpl
loopne
cli
xchg
aad
imul
(bad)
push
ja
nop
inc
jo
jp
(bad)
in
pushf
push
lahf
sar
add
inc
sar
add
leave
das
loop
mov
jecxz
sbb
jge
jecxz
mov
ret
call
mov
test
jmp
pop
pop
sar
add
into
add
mov
das
addr16
cmc
pop
sbb
dec
in
retf
push
xor
pop
push
mov
arpl
sysret
stos
fs
mov
mov
cmps
jmp
aas
push
scas
shr
or
push
(bad)
jae
cli
enter
js
std
dec
jg
jo
jb
ret
push
add
or
fcomp
scas
pop
pop
hlt
push
push
inc
loop
stos
mov
xchg
arpl
lods
inc
pop
mov
dec
lock
retf
pop
sahf
sbb
jae
mov
gs
cmp
dec
dec
mov
mov
clc
aas
pop
sbb
fidiv
test
pop
imul
out
aam
dec
hlt
in
pop
rcl
fstp
cmps
jge
mov
adc
cli
loop
cmp
pop
cli
xchg
jg
xor
lods
mov
ret
push
scas
push
xchg
jbe
mov
loop
cmp
inc
xor
mov
cmps
dec
sbb
add
or
nop
(bad)
ds
out
jmp
adc
inc
cli
in
sar
shr
inc
push
pop
je
loope
inc
mov
jmp
cmp
lahf
xor
loopne
nop
in
into
(bad)
pusha
stos
jecxz
addr16
inc
push
cld
sbb
call
aad
mov
pop
inc
mov
lods
push
(bad)
jb
mov
mov
inc
jecxz
pop
out
test
pop
js
jne
xor
fild
sub
pushf
fmul
lods
xchg
lds
jo
mov
and
add
mov
sbb
cmp
cwde
and
cmp
jae
xor
movs
inc
ins
mov
adc
rol
cli
rcr
cmps
cwde
rol
int
lods
mov
lds
cmc
sahf
ret
nop
mov
imul
mov
jle
fsub
dec
inc
imul
jp
sub
jle
shl
mov
sbb
bound
ja
mov
clc
arpl
dec
pop
mov
lods
jcxz
dec
movs
push
inc
(bad)
das
call
stos
das
ret
(bad)
int
test
pop
loopne
addr16
repz
mov
scas
popa
lods
cmc
repnz
in
pushf
add
push
fisttp
out
paddw
pop
cmp
(bad)
fsubr
and
popf
outs
mov
sub
sti
pop
call
repz
dec
stos
dec
dec
dec
and
dec
pop
adc
xchg
dec
dec
dec
xchg
dec
sub
dec
and
retf
dec
dec
dec
ret
and
push
in
jo
dec
dec
daa
dec
adc
sub
daa
dec
dec
xchg
xchg
dec
and
push
lock
or
and
mov
loope
sub
inc
adc
sti
xor
sbb
repnz
jg
push
cs
pusha
loopne
mov
pop
inc
xchg
push
inc
(bad)
retf
jmp
pop
cmc
dec
test
adc
ja
jmp
mov
outs
push
das
movs
fidiv
jns
and
mov
cmp
cwde
outs
ret
xchg
cmp
sub
dec
xor
dec
and
xchg
popf
xor
xchg
dec
and
je
mov
dec
sub
xor
dec
dec
dec
pushf
and
or
cmp
dec
xchg
movs
test
nop
shl
fs
dec
sahf
adc
ror
inc
sub
xchg
dec
clc
dec
or
xchg
dec
in
mov
mov
jge
sar
sub
add
(bad)
inc
mov
and
xchg
cs
xchg
mov
adc
cmp
daa
add
in
push
mov
mov
lock
inc
cmp
sar
jmp
movs
shr
(bad)
stc
mov
inc
dec
jg
(bad)
shr
imul
sbb
sar
fs
inc
mov
and
pop
sub
sub
xchg
retf
sub
sub
sub
sub
sub
jmp
test
dec
dec
movs
adc
das
sub
dec
xchg
xchg
dec
and
and
ret
or
cli
mov
in
call
call
repnz
cli
ins
pop
test
sar
dec
jbe
lods
or
add
(bad)
add
das
outs
sar
popf
mov
fnstcw
fs
adc
daa
repz
out
movs
inc
mov
pop
mov
mov
xchg
ret
loope
aam
arpl
aas
nop
cwde
cmp
adc
sub
aad
in
mov
xchg
push
jmp
and
and
and
dec
dec
dec
and
sub
and
nop
xchg
jge
ret
adc
pop
push
mov
jp
shr
(bad)
add
xlat
sbb
test
movs
or
test
jo
gs
cmp
scas
test
adc
pop
and
cdq
pop
pop
push
fsubr
outs
and
rcl
add
add
scas
sub
shl
xchg
push
dec
xchg
dec
je
test
dec
popf
and
and
mov
xchg
cdq
cmps
push
test
dec
dec
sar
aas
pop
jno
dec
jmp
cmp
cli
sbb
hlt
mov
pop
xor
cdq
jnp
mov
mov
sti
mov
idiv
retf
inc
mov
popf
inc
(bad)
fdiv
in
loop
pushf
rcl
xchg
dec
(bad)
inc
jmp
daa
jg
mov
lods
cmc
push
lahf
ja
mov
mov
cmp
push
(bad)
sub
ror
es
addr16
mov
xchg
retf
cmp
jmp
in
jb
icebp
xor
jmp
mov
test
mov
mov
add
mov
lock
pop
inc
cmps
fst
out
jbe
inc
dec
ins
imul
in
push
mov
xor
sbb
test
ret
fs
pop
sti
mov
inc
sahf
(bad)
push
push
jmp
pop
mov
xor
retf
cmc
mov
retf
inc
adc
push
retf
sub
popf
add
dec
test
test
cmc
dec
cli
gs
(bad)
jno
(bad)
fsub
sti
xchg
aaa
repz
scas
retf
inc
pop
jmp
mov
es
jg
clc
jl
retf
test
mov
xchg
pop
shl
ret
mov
sbb
pop
lods
int3
lods
ss
test
lods
cli
xor
clc
je
pop
out
inc
rcl
and
and
lea
mov
shl
test
sub
mov
sub
or
adc
dec
push
xchg
pop
je
xchg
enter
cmc
mov
(bad)
cli
mov
lods
fnstcw
jge
stc
fidivr
lods
pop
lock
or
pop
aas
test
shr
sbb
out
(bad)
clc
(bad)
fdivr
xor
jmp
popa
jecxz
out
mov
scas
xor
cmc
cwde
aas
cli
inc
pusha
fstp
and
push
leave
add
popf
and
test
dec
dec
mov
retf
shl
jnp
adc
test
mov
and
jbe
inc
hlt
(bad)
jmp
sub
int3
pop
sbb
je
stos
loopne
faddp
jmp
adc
ins
dec
cli
push
fcmovne
dec
and
xchg
sub
dec
movs
pop
rcr
aaa
(bad)
aad
push
pop
fstp
(bad)
std
outs
push
adc
xchg
dec
pop
push
mov
arpl
adc
inc
push
ret
jb
jmp
shl
xchg
xchg
inc
movs
xchg
or
sbb
jmp
or
inc
mov
adc
and
jle
clc
xchg
add
mov
push
sahf
xchg
mov
cmc
call
jecxz
cld
sbb
bound
sub
test
push
aam
(bad)
lea
add
or
sbb
stos
ja
jnp
imul
mov
shr
mov
pop
inc
cmp
lea
(bad)
jb
std
sub
sar
mov
sub
out
(bad)
xchg
nop
pop
pop
in
(bad)
cld
lds
sub
mov
xchg
mov
mov
push
jle
jg
ins
push
mov
loopne
adc
test
inc
cmps
adc
inc
lods
dec
push
out
(bad)
mov
fld
xor
mov
movs
xchg
and
push
ds
jg
ins
pop
jmp
adc
ret
xchg
mov
cs
movs
or
and
or
addr16
cli
ror
push
sub
dec
sub
cwde
and
mov
sahf
fcomp
test
jecxz
jmp
fistp
daa
xchg
or
xchg
lahf
jmp
adc
sub
jae
mov
push
std
push
inc
jmp
sar
mov
mov
push
popa
ret
out
or
std
int3
lock
xor
cmp
test
rol
mov
xor
in
inc
arpl
push
dec
sub
jae
out
test
mov
inc
fcmove
cmc
addr16
sbb
es
jmp
(bad)
rol
push
adc
movs
mov
pop
scas
sub
pop
jmp
mov
inc
jge
or
mov
cmp
in
ins
mov
out
cwde
cmp
adc
shr
rol
push
xchg
jmp
sub
mov
adc
or
test
jo
dec
sub
sbb
test
je
pop
pop
jmp
imul
push
sub
mov
push
cli
fwait
aam
daa
jmp
xor
ss
shl
cli
mov
xor
enter
test
sbb
pop
movs
outs
cld
arpl
out
call
je
in
xor
in
cmp
cmc
bts
sub
dec
jmp
repnz
inc
sub
mov
inc
and
and
or
pop
or
call
jge
xchg
xchg
or
stos
int3
jmp
xor
test
xor
stos
iret
jmp
mov
lods
or
lock
lahf
or
movs
inc
(bad)
pop
sub
(bad)
aam
push
push
or
jmp
jmp
div
jo
push
imul
push
jbe
mov
jmp
xchg
push
cmps
add
lods
mov
(bad)
pop
fst
inc
test
xchg
add
mov
aad
mov
and
xor
dec
or
adc
daa
or
xchg
dec
xor
je
daa
dec
dec
dec
or
xchg
xchg
push
xchg
dec
and
movs
xchg
dec
and
and
and
xchg
movs
xchg
dec
xchg
xchg
dec
and
and
shl
xor
push
dec
popf
push
push
mov
mov
ins
sbb
fwait
cli
aaa
inc
aam
add
jp
clc
test
mov
jg
inc
stc
call
aam
daa
push
cdq
inc
sbb
fcmovbe
in
mov
mov
jg
inc
cmps
jge
or
pop
cli
scas
inc
int3
xchg
xchg
cmp
ins
or
xor
push
or
xchg
add
dec
dec
repnz
jbe
jl
and
and
movs
sub
pop
and
or
xchg
popf
xchg
and
loope
sub
dec
or
and
repnz
movs
movs
and
dec
dec
imul
or
pop
test
and
xchg
sahf
sar
pop
jne
add
fstp
and
test
ja
jae
mov
icebp
xchg
sar
lds
sti
xchg
scas
cs
ss
inc
test
cmc
fsubr
cli
jmp
lods
adc
in
iret
mov
(bad)
addr16
add
dec
xchg
fmul
push
gs
sbb
pop
adc
daa
lods
bound
xchg
xchg
ret
sub
cdq
and
mov
sub
xchg
fs
enter
rcl
movs
or
xchg
xchg
adc
dec
dec
in
push
mov
es
dec
dec
or
movs
daa
or
test
movs
shl
cli
in
rcr
adc
out
push
pop
aas
hlt
(bad)
mov
cdq
push
repnz
in
sub
hlt
dec
aas
arpl
mov
(bad)
mov
cli
inc
sub
cmc
shrd
and
clc
add
mov
repnz
inc
cmp
(bad)
pop
(bad)
test
sub
dec
mov
push
dec
es
dec
cmps
push
adc
and
mov
or
and
and
dec
sub
xchg
dec
push
dec
adc
or
jo
lock
test
sub
mov
push
xor
jnp
cmp
ret
lahf
lods
frstor
pushf
retf
jmp
popf
pusha
out
aas
aas
(bad)
lahf
jmp
adc
adc
mov
push
loop
push
cmps
xor
xchg
std
es
mov
add
lock
jle
(bad)
jmp
inc
std
push
fwait
mov
hlt
push
mov
jmp
sub
jle
inc
dec
pop
sub
or
dec
es
xchg
xchg
dec
movs
xchg
sub
dec
push
push
jmp
movs
in
mov
add
or
sub
push
fsub
fs
cmc
iret
sbb
cmc
sbb
dec
(bad)
jg
inc
(bad)
(bad)
loope
jmp
or
shr
scas
push
inc
sbb
sti
int
lods
push
shl
retf
adc
data16
jne
fwait
in
ja
div
aam
stc
jg
inc
inc
cmp
mov
imul
jne
xor
in
xor
add
adc
and
and
and
inc
and
and
and
popf
pop
mov
sbb
cmp
repnz
or
(bad)
inc
movs
(bad)
inc
iret
imul
jne
xchg
jg
mov
movs
jge
mov
ins
test
sub
mov
daa
sbb
sbb
mov
xchg
movs
dec
stos
hlt
jnp
pop
mov
sub
cli
push
xor
ins
test
into
or
push
cwde
mov
mov
lds
and
adc
leave
dec
mov
dec
jo
or
and
mov
push
sbb
push
fwait
outs
cld
push
inc
repnz
cmp
cmp
ds
in
mov
in
cli
cmps
inc
and
cmps
cmps
jne
outs
mov
jmp
jmp
dec
and
lahf
push
sbb
ja
js
push
shr
pop
fisttp
lods
jo
push
aaa
std
and
and
and
xchg
dec
and
push
cmps
dec
test
sbb
pop
or
xor
scas
cmp
cmps
cmp
ins
mov
cmp
hlt
ja
ret
outs
push
adc
mov
pop
neg
in
lods
dec
jge
or
stc
mov
in
std
cs
jmp
and
xchg
aaa
imul
jp
hlt
sub
xchg
dec
test
sub
and
(bad)
scas
sbb
sbb
xchg
cli
fmul
jg
xor
dec
les
rcr
inc
xor
fidiv
push
jg
fs
jg
mov
into
fwait
aad
cmp
call
jne
(bad)
out
pop
pop
out
pop
inc
call
(bad)
(bad)
pop
jb
pop
(bad)
data16
jno
add
mov
xchg
scas
clc
xor
push
test
movs
xchg
dec
and
mov
mov
aam
ret
cmc
imul
imul
cld
or
cmp
jmp
clc
pop
(bad)
dec
test
jnp
imul
inc
sbb
xchg
sar
push
in
addr16
inc
or
in
lock
cmp
adc
inc
call
inc
sahf
push
and
(bad)
leave
mov
loop
pushf
pop
loope
or
in
cmp
frstor
enter
inc
pop
imul
in
mov
sahf
imul
or
(bad)
mov
pop
cmp
sub
scas
pop
into
push
std
push
jle
aas
nop
xchg
retf
and
sbb
xor
outs
pop
(bad)
add
dec
adc
add
rcl
pop
cmp
hlt
jb
cli
sti
jle
aas
loop
lahf
daa
pop
shr
dec
cmc
sub
mov
adc
xor
(bad)
cmc
xchg
inc
add
stc
cmps
pushf
icebp
mov
in
out
clc
lahf
cld
and
inc
sbb
xchg
xchg
push
imul
push
inc
jl
push
cwde
add
jge
in
pusha
inc
shr
xor
shr
mov
inc
(bad)
or
dec
out
mov
fld
push
dec
psrlq
dec
push
cmp
dec
sub
icebp
mov
push
cmp
stos
mov
inc
neg
stc
push
push
rcl
inc
bound
(bad)
std
faddp
cli
mov
lods
or
and
inc
pusha
mov
ret
jle
mov
cmp
movs
aad
jo
adc
mov
mov
add
dec
xchg
dec
mov
jo
mov
sub
and
adc
test
aaa
lds
push
imul
xor
scas
lock
push
push
(bad)
xor
test
nop
pop
push
ss
test
mov
cmp
push
fldenv
nop
mov
mov
pop
inc
mov
out
ror
sub
and
add
mov
pop
pop
adc
xor
xor
mov
lods
mov
inc
mov
popa
xchg
mov
jecxz
adc
aad
pop
add
in
loop
popa
inc
pop
gs
pop
std
push
jmp
jp
sbb
inc
mov
jo
(bad)
clc
das
fisttp
icebp
sbb
mov
test
pop
pop
jmp
mov
loopne
sub
shr
sbb
ror
outs
test
shl
cli
dec
push
mov
mov
int3
push
outs
xchg
inc
xchg
pop
(bad)
addr16
jmp
pop
cli
pop
sar
mov
rcl
jne
(bad)
inc
xchg
je
fiadd
cmc
data16
loopne
sub
mov
cmc
aaa
aam
fistp
cmp
cli
dec
adc
arpl
shr
mov
dec
dec
inc
jns
sub
call
repz
mov
xchg
xchg
xchg
repnz
and
mov
movs
in
xchg
test
nop
mov
ror
dec
pop
xor
je
dec
je
movs
xchg
dec
and
dec
dec
and
sub
fs
push
jmp
sahf
adc
inc
sub
xchg
jo
inc
shl
cld
sbb
mov
cmp
mov
add
pop
in
mov
dec
retf
inc
jns
out
xchg
adc
dec
(bad)
dec
mov
xor
pop
(bad)
repz
sbb
popa
jge
inc
int
mov
int
lock
add
call
popf
mov
arpl
ret
das
cmp
and
sub
xchg
test
adc
inc
dec
xchg
xchg
dec
sbb
or
push
and
xchg
popf
xor
jmp
push
dec
xchg
xchg
dec
xchg
dec
sub
inc
and
push
or
and
adc
xchg
xchg
dec
mov
nop
dec
xchg
push
dec
add
xchg
mov
dec
and
add
mov
loop
scas
jle
iret
adc
call
add
add
mov
inc
or
adc
sbb
inc
sbb
push
lods
jnp
idiv
inc
pop
(bad)
loopne
in
mov
scas
sbb
stos
sbb
sub
repz
jg
fdiv
in
fsubr
and
cmp
pop
adc
call
adc
daa
mov
dec
dec
add
and
leave
loope
xchg
movs
rcr
fst
arpl
(bad)
push
push
push
loope
movs
xor
movs
add
sub
dec
xor
xor
cmp
adc
ror
nop
neg
sti
jmp
in
in
(bad)
mov
loope
imul
std
dec
jg
das
scas
mov
sti
dec
cmp
in
jl
addr16
std
inc
std
cmp
and
add
cmps
push
(bad)
outs
call
(bad)
repnz
iret
lock
(bad)
rcr
test
add
mov
xlat
dec
mov
in
push
loope
popa
shl
jae
xor
inc
pop
adc
shr
je
push
xchg
repnz
cmp
xor
and
and
jle
dec
dec
dec
xor
xchg
cdq
dec
test
sub
adc
cmp
movs
shr
dec
inc
and
cmp
dec
cmc
pop
scas
push
(bad)
mov
or
out
sub
repz
dec
mov
(bad)
call
inc
std
int3
cmp
clc
shr
inc
leave
jg
pop
add
in
(bad)
scas
cmc
cmp
out
call
hlt
imul
repz
(bad)
xchg
mov
hlt
(bad)
inc
icebp
scas
sbb
out
mov
and
push
(bad)
jne
shl
adc
push
xchg
dec
pop
and
dec
sub
dec
and
and
push
mov
sbb
push
and
mov
pushf
pop
neg
pushf
and
mov
ss
imul
dec
xlat
repz
in
pop
jmp
add
add
xchg
call
enter
ss
fcmovu
test
xchg
fsubr
jmp
cmc
sub
outs
imul
jg
(bad)
ins
aaa
in
out
std
adc
out
lds
xor
cmp
loopne
or
dec
call
mov
xor
in
leave
adc
movs
movs
adc
dec
xor
jne
sar
fnstsw
in
out
movs
das
ret
ds
push
inc
dec
mov
fdivr
add
ret
or
stos
push
cmps
(bad)
cmp
push
push
icebp
mov
outs
out
aaa
stc
pop
mov
mov
in
sbb
sbb
xor
popf
outs
inc
mov
jmp
or
pushf
pop
arpl
mov
jbe
call
outs
out
lar
mov
sbb
nop
mov
sub
xchg
xchg
dec
and
and
cwde
daa
sub
jmp
in
movs
je
lods
cmp
stc
hlt
pop
fild
add
div
add
outs
shl
add
mov
iret
imul
hlt
jmp
mov
push
(bad)
fnstsw
pop
(bad)
mov
and
xchg
neg
xor
jbe
mov
xchg
addr16
push
inc
repnz
sbb
xchg
add
test
dec
daa
xchg
adc
and
shr
mov
jne
cli
dec
inc
test
jg
sub
inc
dec
adc
daa
fstp
mov
jmp
aas
call
sub
jg
mov
lods
push
xchg
(bad)
sub
push
lods
loop
pop
mov
(bad)
std
xlat
mov
int3
call
out
xchg
lods
ins
(bad)
retf
mov
add
pop
aas
xchg
xchg
(bad)
inc
push
add
retf
push
inc
sub
rcl
popf
and
mov
pop
mov
and
mov
sub
cmp
lds
fdivr
add
cmps
into
or
sbb
imul
xor
mov
stos
sbb
xchg
jbe
out
inc
shl
mov
inc
xchg
aas
push
pop
fbld
stc
or
shr
cmps
xor
cs
dec
nop
inc
dec
lods
cmp
cmps
xlat
xor
(bad)
push
xchg
mov
push
dec
inc
ror
and
(bad)
jmp
enter
pop
mov
jmp
jmp
adc
sub
(bad)
arpl
scas
pop
shr
std
mov
daa
jmp
sub
dec
int3
and
daa
inc
or
adc
or
shl
imul
dec
push
popa
mov
dec
ds
add
(bad)
xchg
mov
or
mov
mov
sub
pusha
fs
jo
xchg
adc
arpl
add
(bad)
(bad)
xchg
push
jae
jge
dec
hlt
out
ins
push
(bad)
mov
out
xor
add
dec
mov
shr
int3
out
sub
clc
iret
hlt
mov
in
ss
lahf
mov
js
cli
and
jle
mov
push
jle
syscall
pop
outs
dec
sti
jae
mov
(bad)
jnp
hlt
mov
pop
jne
push
pop
pusha
mov
inc
adc
loopne
adc
out
adc
mov
scas
jecxz
inc
xor
cmps
add
mov
fld
add
push
and
outs
mov
mov
in
push
sub
lahf
mov
pop
pop
mov
add
les
xchg
stos
sub
sbb
xchg
test
out
into
or
popf
int3
cmp
sub
sub
repnz
and
loop
jbe
popw
loope
or
stos
ja
mov
leave
ret
mov
out
pop
pop
loope
mov
and
push
pop
ja
rcl
enter
(bad)
mul
gs
adc
test
jl
sub
cmp
outs
scas
mov
imul
mov
jmp
dec
push
inc
cmp
stos
mov
inc
jo
push
pop
(bad)
gs
sub
movs
scas
sbb
xchg
mov
outs
xchg
add
xchg
fsubrp
pop
mov
jmp
mov
mov
xor
xchg
inc
mov
xor
test
out
lods
cmc
push
xchg
in
std
loope
pop
les
sub
out
(bad)
xor
mov
les
in
push
dec
inc
push
pop
(bad)
push
pop
sar
sbb
hlt
(bad)
dec
xchg
(bad)
repnz
mov
mov
sub
fnstcw
(bad)
push
retf
cli
mov
ja
jle
loope
ror
mov
sbb
ret
mov
stc
(bad)
nop
movd
inc
inc
fld1
(bad)
ds
cmp
aad
fwait
cmc
dec
mov
add
inc
cmp
gs
xchg
mov
push
and
clc
cmp
sub
ror
jl
fwait
jp
ret
mov
mov
mov
cli
inc
sbb
imul
in
(bad)
shl
mov
pop
movs
faddp
cmp
out
push
jmp
mov
cmp
mov
pop
cvtdq2ps
out
jg
lds
sar
out
and
sahf
inc
mov
cmp
and
ins
sti
enter
sbb
idiv
shr
dec
hlt
in
cmp
inc
sbb
jmp
ja
mov
sbb
scas
pop
mov
inc
popa
ins
je
jmp
ins
add
inc
out
mov
push
pop
jge
jmp
xchg
cmp
add
retf
inc
pop
(bad)
(bad)
out
jg
mov
and
adc
xor
push
jns
mov
cli
(bad)
(bad)
ret
shr
(bad)
ds
cmps
mov
jb
arpl
pop
push
cli
mov
xchg
jle
dec
mov
aam
fdivrp
mov
ror
das
add
into
aaa
cli
in
inc
or
mov
jmp
and
add
add
add
jge
add
inc
dec
adc
inc
das
adc
push
push
inc
push
ret
mov
dec
cli
inc
xchg
or
bnd
dec
add
add
inc
cmp
gs
pop
push
gs
jae
pop
inc
outs
arpl
outs
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
push
outs
ins
popa
jb
outs
outs
inc
jb
xor
push
outs
ins
popa
jb
outs
outs
pop
outs
bound
inc
bound
pop
push
outs
ins
popa
jb
outs
outs
cs
bound
in
adc
dec
add
and
add
dec
adc
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
jmp
add
and
inc
and
test
push
(bad)
pusha
out
or
imul
loope
icebp
