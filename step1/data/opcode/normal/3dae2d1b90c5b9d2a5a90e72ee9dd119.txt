fild
inc
pop
inc
inc
fnsetpm(287
jg
push
add
push
inc
add
retf
inc
add
stc
or
into
pop
or
loope
dec
add
sub
add
mov
xor
arpl
cmp
and
push
add
dec
lock
aas
jp
movs
daa
(bad)
imul
mov
stos
daa
pop
ja
mov
in
fcmovnu
sub
aam
fld
in
jbe
(bad)
xor
pop
leave
dec
mov
data16
push
rcl
add
fld
in
test
push
add
dec
fidiv
scas
outs
jbe
jbe
stos
js
outs
xchg
daa
mov
add
jns
pop
mov
outs
xchg
cmps
pusha
cmps
dec
and
mov
test
dec
test
pop
pop
sahf
sub
lods
(bad)
test
fsubr
imul
push
add
aas
mov
cmps
sub
in
push
mov
fistp
mov
les
adc
mov
mov
pop
into
ret
pop
aas
mov
fild
repz
lock
dec
test
mov
arpl
sub
out
mov
jns
xor
iret
push
(bad)
jl
sbb
repnz
test
add
push
fild
fistp
sbb
fiadd
and
std
fld
mov
pop
aaa
add
out
imul
push
in
push
pop
sbb
push
bound
mov
test
pop
mov
fwait
stos
mov
xchg
daa
push
test
data16
call
mov
add
sahf
push
js
push
xor
fwait
inc
call
xor
fcomp
cmp
ja
sbb
jecxz
cmp
cmp
mov
aas
pop
imul
jb
sub
outs
inc
adc
jg
fldcw
inc
inc
inc
jmp
inc
push
inc
pop
cs
in
inc
ret
mov
dec
imul
in
fwait
dec
bound
xlat
call
sbb
mov
dec
fcmove
xchg
int
bound
test
push
test
nop
in
inc
push
retf
push
jae
cmp
out
mov
push
lods
sub
mov
fist
inc
ja
ret
add
xor
enter
add
iret
outs
inc
push
push
push
fdivr
jp
aas
in
in
jl
push
outs
pusha
mov
jb
fild
mov
std
mov
mov
out
leave
in
into
xchg
and
bswap
cmp
xchg
dec
add
add
xchg
fist
(bad)
mov
push
push
adc
fnstsw
movs
fs
push
aad
cmp
cld
xchg
mov
comiss
cmp
ret
(bad)
jmp
repnz
daa
repnz
iret
inc
shr
push
leave
nop
lods
into
outs
imul
xor
jns
shl
mov
pop
enter
(bad)
fstp
cmp
aas
loop
(bad)
ss
cmps
push
pop
popa
lock
push
push
jns
mov
push
push
xchg
repnz
ret
stc
neg
cli
ins
call
push
push
xor
daa
das
jns
outs
push
std
sbb
and
fxch
mov
jmp
(bad)
(bad)
add
(bad)
cmp
push
or
fdivp
or
add
mov
enter
iret
movq
adc
(bad)
fadd
mov
pop
pop
adc
xchg
adc
cmp
adc
sahf
pop
cs
lods
sbb
sbb
cmp
pop
push
push
mov
outs
and
shl
and
daa
dec
ficomp
(bad)
es
repnz
or
or
adc
fs
dec
sahf
cmp
xor
xor
xor
dec
xor
push
cmp
push
imul
loope
jb
inc
jp
das
mov
xlat
push
xchg
dec
rcr
jle
pop
mov
popf
ror
cmp
pop
cmp
aas
mov
jmp
inc
rcr
cmp
fild
mov
stc
push
pop
sub
push
inc
mov
(bad)
dec
dec
iret
ja
movs
fstp
pop
outs
paddw
pushf
sbb
rol
loop
mov
loope
sbb
in
sub
popa
fisttp
xacquire
bound
cwde
bound
addr16
daa
das
scas
test
(bad)
jnp
das
not
sbb
inc
mov
outs
mov
mov
cmp
sti
or
jg
mov
fcomp
popa
movs
dec
mov
jge
lods
dec
ds
sbb
stos
scas
add
nop
call
in
sub
mov
dec
sbb
fdiv
mov
cmps
rcr
dec
mov
pop
enter
loop
loope
hlt
pusha
les
fisttp
push
out
das
(bad)
jbe
(bad)
daa
push
cwde
(bad)
call
mov
lahf
xor
sbb
sub
jo
ja
jo
push
aaa
(bad)
ds
push
add
sbb
xor
shl
pop
imul
fst
jmp
mov
retf
push
in
data16
enter
test
cwde
sbb
dec
xor
jbe
movs
sbb
cld
pop
sahf
imul
mov
call
icebp
dec
shl
push
shl
imul
push
or
into
repz
or
repnz
cmps
imul
es
shr
ins
jge
enter
je
sti
cmc
pop
ds
cmp
fbstp
pop
inc
and
imul
(bad)
push
in
mov
xor
dec
jae
jmp
clc
inc
push
xor
mov
dec
sbb
pop
ss
(bad)
retf
jno
daa
fwait
gs
pop
std
mov
dec
pop
ss
add
(bad)
sub
imul
movs
sbb
cmps
lods
leave
mov
add
add
dec
xor
sbb
inc
sti
add
pushf
ins
call
popf
ins
xchg
cmp
mov
ss
data16
xor
push
xchg
adc
xchg
int
jns
mov
pop
ss
adc
out
xchg
xchg
mov
call
sbb
push
dec
imul
cmps
aad
or
and
shl
retf
in
call
cmp
cmps
imul
sar
pop
jb
mov
pop
ss
fdiv
adc
call
sbb
xor
mov
(bad)
call
cmps
imul
xor
adc
adc
and
dec
push
int
jae
fldcw
jle
sbb
sub
in
dec
inc
push
xor
and
xor
xor
pop
add
dec
js
es
sub
and
leave
push
daa
pop
pop
mov
gs
pop
push
sub
xchg
sub
mov
clc
dec
cs
push
xor
push
das
imul
outs
rol
push
sub
xor
nop
shl
xor
sbb
ss
pushf
inc
aaa
mov
ss
mov
cmp
jae
call
repnz
cmp
lea
cmps
cmp
pop
jae
dec
mov
call
xchg
mov
gs
imul
push
sbb
repnz
inc
ins
inc
jb
rol
add
popf
mul
dec
push
push
imul
push
dec
inc
sahf
mov
pop
mov
dec
nop
inc
imul
push
outs
push
enter
sbb
adc
lock
loope
nop
retf
in
pop
pop
mov
out
mov
push
inc
dec
pop
adc
fstp
loopne
jns
push
stc
jo
(bad)
pop
pop
stos
pop
dec
pop
fs
es
retf
arpl
lock
das
sub
push
push
inc
wrmsr
adc
jns
add
stc
ins
ds
pop
(bad)
pop
push
cwde
push
pop
mov
pop
repnz
push
sub
daa
inc
jmp
xchg
iret
push
cld
inc
es
jb
xor
fisubr
xchg
mov
movs
mov
jmp
popa
mov
fsubr
mov
xchg
int
lods
(bad)
shr
xchg
dec
cmps
xchg
ss
gs
mov
xchg
nop
out
xor
cmp
inc
push
cs
ins
in
cdq
dec
cdq
pop
sti
add
pop
clc
fwait
(bad)
fwait
out
rol
loopne
pushf
aas
fldenv
sbb
movs
test
imul
pop
mov
adc
aas
jmp
adc
cmp
mov
dec
dec
jg
push
shr
push
jle
cmp
pop
les
adc
add
sub
cdq
jae
mov
je
das
outs
mov
stos
mov
outs
fld
push
(bad)
cmp
push
xchg
mov
mov
jg
add
mov
mov
push
add
push
movd
mov
mov
mov
das
stc
pop
shl
(bad)
xchg
retf
dec
cs
enter
repnz
leave
jle
outs
pusha
int
cmps
in
pop
xor
shr
iret
sbb
daa
jmp
jo
retf
jo
dec
add
(bad)
dec
in
mov
xchg
fcom
push
neg
sti
frstor
repnz
or
loop
out
leave
in
jecxz
loop
out
dec
out
out
pop
xchg
daa
loopne
adc
das
out
sbb
sub
jg
push
push
(bad)
stc
out
add
nop
xchg
das
ins
dec
in
aaa
dec
outs
js
or
sbb
xadd
xchg
mov
das
lahf
push
adc
fs
jns
hlt
xchg
hlt
or
leave
xchg
int
or
or
cs
jecxz
jno
(bad)
clc
pop
inc
cli
aaa
cli
xchg
ret
dec
fidivr
cli
into
pop
push
sti
push
xor
leave
pop
sti
out
ja
sbb
dec
(bad)
jle
push
addr16
out
std
stos
fcom
push
inc
(bad)
mov
sub
dec
pop
inc
pop
push
add
pop
xchg
gs
push
iret
push
xchg
int
xchg
lsl
fisttp
shl
jl
add
sbb
add
or
inc
pop
inc
in
mov
sbb
inc
fistp
inc
ucomiss
pop
rcl
or
popa
es
jge
repnz
aas
daa
inc
push
mov
sub
xchg
lods
mov
pop
sub
pop
fcomi
fxch
add
or
mov
xchg
cmp
popf
cmp
mov
sbb
nop
pop
pop
sbb
pop
(bad)
cmps
push
and
sub
push
mov
xlat
cs
push
jo
jne
pop
and
pop
in
stc
es
rcr
(bad)
pop
cmp
pop
rol
movs
out
pop
(bad)
jmp
sub
xlat
mov
cmps
xchg
pop
or
dec
push
xchg
daa
outs
bswap
pop
pop
inc
pop
xor
in
mov
push
pop
xor
aas
cmp
bound
cmp
inc
bound
dec
arpl
ret
and
gs
in
fisubr
xchg
sar
sbb
dec
xchg
imul
inc
pop
das
mov
out
out
js
lds
add
jecxz
or
jp
je
mov
imul
jae
push
push
sbb
mov
jb
push
or
mov
mov
das
in
in
jb
pop
popa
xchg
pop
sti
xchg
pop
cwde
lahf
(bad)
bound
xor
add
mov
fldcw
cwde
fwait
enter
aas
lock
fist
push
mov
jnp
push
ins
test
test
dec
pop
sahf
or
pop
popa
mov
outs
dec
sahf
push
sbb
xchg
mov
mov
mov
push
jb
add
pushf
popf
mov
mov
movzx
imul
dec
xchg
int
int
mov
iret
(bad)
iret
pop
or
adc
or
aam
push
or
push
(bad)
jle
aas
test
adc
dec
mov
aad
repnz
stc
xlat
scas
jmp
xlat
scas
sbb
sub
push
and
fistp
mov
out
imul
int
xlat
sub
jnp
add
sub
inc
mov
std
dec
push
repnz
fwait
push
mov
inc
jmp
dec
test
cmp
add
dec
push
scas
daa
pop
repz
fadd
add
or
dec
pop
dec
shl
push
into
jo
pop
ja
and
iret
mov
aaa
scas
cdq
or
or
or
or
aas
mov
mov
outs
lock
or
mov
cmp
pop
inc
push
outs
pusha
bswap
and
addr16
pop
cmovle
nop
adc
das
test
outs
stos
adc
adc
ins
in
loopne
or
adc
cmp
adc
dec
adc
and
mov
pop
push
add
sub
pop
xor
retf
fist
stc
sbb
fist
sbb
ret
sbb
in
in
fcmovnb
sbb
push
je
mov
jns
push
adc
lds
daa
add
dec
imul
lahf
mov
in
daa
mov
(bad)
cmp
repnz
and
dec
sub
jns
xor
pop
add
leave
or
stos
ss
push
aaa
pop
fiadd
jbe
push
(bad)
cmp
xchg
pop
ret
out
sub
cmp
mov
cmps
inc
pop
ja
dec
add
inc
or
add
test
dec
das
fwait
(bad)
mov
clc
jbe
ds
push
hlt
cmp
sub
aad
dec
xchg
daa
pop
jbe
jg
dec
cmp
push
fwait
cmps
xor
push
in
or
pop
and
sbb
jo
dec
psubd
push
pop
stc
je
in
push
stos
push
call
fisttp
pusha
pop
push
bound
icebp
in
bound
arpl
inc
arpl
imul
imul
dec
mov
imul
imul
(bad)
outs
adc
dec
push
sbb
aas
cmp
jne
add
je
xchg
in
ja
push
inc
xor
pushf
in
stc
ret
(bad)
jns
jp
jp
das
cmp
retf
jnp
sbb
int3
and
outs
ja
int3
mul
cmc
sbb
test
clc
ins
jns
ins
test
test
repnz
mov
mov
lea
sub
sti
(bad)
rcl
mov
sub
or
retf
fild
not
loopne
xor
pop
ss
aaa
(bad)
das
cdq
dec
repnz
push
ss
iret
cli
cdq
scas
test
mov
pushf
repz
xor
xchg
popf
popf
popf
(bad)
sahf
cmp
sahf
bound
dec
lahf
mov
dec
fisubr
push
lahf
out
packuswb
enter
mov
push
pop
xchg
mov
outs
das
mov
jmp
sbb
sub
outs
mov
popf
mov
jne
jl
nop
pandn
cmp
pop
xlat
(bad)
outs
push
mov
retf
mov
or
ror
lahf
loopne
out
retf
or
imul
mov
inc
sar
pop
shl
test
aam
aam
dec
fnstsw
sahf
mov
lahf
mov
jns
add
loope
loope
in
or
and
xchg
mov
cmp
jecxz
pop
in
hlt
in
xchg
leave
sti
in
in
in
popf
fadd
out
pop
rcl
jmp
in
add
jge
dec
add
(bad)
cdq
push
dec
lahf
ins
shl
dec
cdq
pop
dec
pop
sbb
push
sub
sbb
sub
dec
add
pop
ins
pop
mov
mov
je
mov
(bad)
sub
push
int
daa
stc
and
sub
out
jl
dec
(bad)
or
jge
sbb
scas
sub
inc
push
or
push
xchg
pop
mov
movups
pop
mov
mov
pop
arpl
push
or
jnp
cmps
xor
xor
in
cli
xor
add
and
xor
je
sbb
lock
fxch
enter
cld
add
cmp
inc
data16
or
(bad)
pop
fs
adc
xor
cdq
push
ins
adc
mov
pop
fldcw
inc
or
and
mov
pusha
mov
jns
inc
add
mov
nop
test
and
cmp
or
aam
inc
and
dec
jo
mov
add
dec
pop
sar
sbb
cdq
int
mov
movs
adc
sbb
sbb
les
mov
cmp
ins
lock
pushf
sbb
mov
pop
sub
dec
adc
fnstenv
(bad)
lods
pop
inc
les
mov
data16
ins
or
inc
or
sbb
cmp
or
or
fnstenv
cdq
popa
repz
mov
das
cld
pop
loopne
in
mov
xchg
sbb
pop
adc
inc
sbb
sahf
adc
cmp
xor
fwait
cmp
cmp
jl
fdiv
add
fwait
pop
rcr
mov
loopne
enter
pop
cmps
fwait
dec
mov
jae
inc
int3
or
pusha
mul
adc
mov
adc
iret
sbb
pushf
pop
test
xor
call
inc
mov
or
adc
sbb
push
ins
xor
mov
(bad)
mov
add
dec
shl
cmp
retf
enter
fs
xor
das
imul
mov
hlt
jae
mov
or
sbb
inc
jae
cmps
fisubr
int3
ss
pop
int3
retf
sub
int3
inc
nop
mov
in
sbb
cwde
or
adc
enter
cld
jecxz
je
shl
movs
sbb
enter
(bad)
pop
fadd
mov
cmp
push
test
jo
and
mov
mov
add
sbb
pop
loopne
xor
mov
cdq
popa
fs
stos
hlt
sub
pop
xor
add
fwait
ins
fwait
push
mov
mov
pop
xor
pop
imul
(bad)
pusha
enter
sbb
fs
push
pusha
push
call
push
int3
inc
sub
cs
stc
xor
rol
xchg
xchg
addr16
jns
sub
(bad)
mov
cmp
outs
jae
inc
jb
ja
gs
test
inc
cmp
add
and
cmc
inc
add
lods
mov
xor
jle
cmp
push
clc
sub
enter
and
fcom
data16
or
or
std
push
xor
add
mov
push
add
pop
movs
add
add
int
pushf
ins
movs
push
in
mov
and
stc
fiadd
pop
je
sub
push
xchg
adc
les
sub
xchg
inc
ins
ins
shr
nop
sub
cld
cld
add
ror
mov
push
jb
sbb
fcom
xor
cmp
hlt
(bad)
mov
dec
inc
push
pop
retf
or
add
sbb
movs
xor
and
outs
push
mov
xlat
lahf
int
sub
and
xchg
or
push
(bad)
repnz
cmps
mov
and
xchg
adc
or
and
inc
inc
mov
cmp
in
push
add
and
or
mov
ja
adc
sbb
sbb
sbb
cmp
adc
inc
add
mov
inc
cdq
gs
cs
les
pop
cmp
mov
and
in
cmc
mov
inc
in
mov
(bad)
push
iret
dec
cs
enter
push
int3
add
push
xchg
adc
mov
sub
push
mov
push
add
and
xor
movs
popa
inc
iret
pop
out
and
and
pusha
test
div
sbb
mov
std
(bad)
pop
xor
jbe
sub
js
ins
lock
ret
dec
mov
mov
pop
push
ror
dec
in
jg
xchg
push
shr
push
inc
xor
iret
dec
inc
mov
sbb
or
jl
aas
and
add
clc
clc
add
stos
xchg
push
jb
mov
xchg
pop
js
pop
xchg
imul
fisub
xchg
sbb
test
pop
inc
add
enter
push
iret
jo
mov
in
pop
ins
push
inc
and
push
and
cmps
adc
push
cwde
xchg
pusha
pop
das
ficomp
sbb
jl
jae
in
push
cmp
push
test
sti
ret
sub
add
cmps
movs
inc
pop
and
in
cmp
cmp
and
sub
push
jecxz
mov
call
cli
pop
test
jle
mov
in
in
push
movups
add
mov
mov
xchg
mov
pop
nop
or
mov
out
mov
and
dec
inc
je
add
movs
out
add
lds
add
sbb
mov
pop
jb
and
lods
int
enter
dec
push
add
sbb
enter
sub
dec
sub
xchg
retf
imul
fwait
cmp
xor
or
push
cdq
stos
jecxz
imul
(bad)
out
xchg
inc
daa
cmp
pop
jbe
cld
sbb
pop
pop
in
daa
imul
clc
xchg
adc
leave
pusha
push
test
movs
and
inc
sahf
dec
in
cmp
inc
pop
sub
push
sub
xchg
andps
mov
es
jo
inc
test
nop
push
lahf
push
scas
mov
xor
jmp
lahf
retf
(bad)
mov
jb
dec
cmps
sbb
nop
or
cmp
loop
xor
adc
out
imul
enter
or
mov
cmp
push
je
adc
xchg
ss
jl
js
push
or
test
shr
and
cmps
dec
enter
ins
in
call
dec
adc
shl
push
add
cld
dec
pop
xor
mov
jb
imul
inc
inc
dec
mov
idiv
daa
cmp
repnz
push
and
aam
mov
test
dec
inc
push
inc
pop
fsub
push
fmul
(bad)
repnz
retf
add
or
push
(bad)
cs
sub
pop
push
call
xchg
sahf
stos
push
aad
ins
mov
dec
xchg
dec
inc
pop
int3
pop
ins
xor
cmp
pop
bound
enter
push
sub
xchg
xchg
cmp
sub
leave
or
enter
mov
dec
and
not
inc
pop
inc
push
push
cmp
xchg
ret
xor
(bad)
push
cmp
nop
dec
imul
in
stc
(bad)
int
push
dec
adc
sub
enter
dec
iret
and
pop
jbe
jnp
xor
push
enter
sub
jl
cmp
push
fs
mov
loope
mov
xchg
pushf
in
adc
aam
nop
push
pushf
mov
lods
dec
pop
xchg
addr16
xor
pop
mov
push
mov
pop
dec
ret
out
dec
inc
fistp
sub
jl
add
sub
shl
push
pusha
ins
jp
ins
shl
xchg
mov
dec
test
or
mov
pop
shr
mov
in
sbb
dec
fcomp
push
loope
addr16
xchg
and
sbb
or
pushf
add
adc
jo
fs
xor
push
push
fsub
pmulhuw
loopne
inc
pop
ret
cmp
push
push
and
out
test
push
mov
inc
dec
push
dec
jl
pushf
push
stos
imul
fsub
inc
ja
imul
xor
imul
(bad)
test
pop
cmp
shl
dec
sbb
add
out
call
or
push
pop
lock
enter
push
push
inc
pop
sub
xor
mov
push
pop
fsubr
in
in
lock
or
sbb
scas
daa
pusha
adc
dec
rcr
xor
aas
push
dec
pop
ins
jnp
xor
ror
pop
xor
cmp
(bad)
cmp
ss
inc
cmp
inc
lods
pop
pop
pop
add
in
xchg
test
xor
jp
cs
cmp
les
rcl
in
call
dec
push
mov
or
push
push
push
dec
push
sub
js
inc
outs
aaa
jb
cdq
loop
inc
daa
push
movs
push
jnp
imul
push
rol
loop
into
push
pop
dec
shl
dec
pop
dec
mov
pop
jb
test
dec
dec
dec
cs
push
rcl
cmp
dec
mov
inc
push
add
xor
in
add
enter
add
inc
hlt
sub
sbb
cld
psubb
push
aaa
mov
mov
(bad)
and
pop
pop
adc
push
push
iret
push
add
shl
mov
xchg
dec
std
or
add
ins
push
dec
scas
mov
pop
pop
imul
ds
sbb
adc
xchg
xor
xlat
jl
push
add
lahf
jl
iret
fdiv
jg
add
mov
inc
pop
nop
push
jb
push
in
mov
adc
lock
pop
ins
add
and
and
cs
shl
dec
push
bound
xor
sar
mov
cmp
nop
adc
dec
enter
dec
sbb
dec
or
in
push
dec
cmp
dec
ins
nop
pop
xor
push
push
jl
nop
add
push
push
push
adc
enter
pop
lods
add
cmp
push
or
jmp
xor
ss
aas
cmp
cmp
push
xor
sub
movs
add
push
mov
test
loopne
and
pop
or
cmp
xchg
add
je
ror
and
inc
pop
pusha
out
pop
push
push
shl
je
out
mov
adc
mov
inc
dec
jb
sbb
adc
leave
add
rcr
hlt
pop
ja
dec
in
lock
inc
pop
cld
psubb
in
nop
cmps
pop
xlat
movaps
mov
xor
jo
nop
add
pop
inc
pop
mov
cdq
push
cmps
mov
int
mov
call
sbb
xor
xor
xor
dec
mov
inc
pop
xchg
mov
xor
sar
aad
sbb
in
push
enter
mov
(bad)
in
pusha
add
and
pop
iret
dec
stos
push
in
fbstp
push
mov
(bad)
(bad)
push
aas
pusha
mov
push
enter
pop
mov
inc
pop
call
add
or
xchg
sbb
sbb
cwde
jb
sbb
jle
push
inc
push
pop
pop
mov
adc
dec
push
cmp
ins
ins
fdiv
lods
mov
add
scas
push
adc
shl
dec
push
cmps
pop
ss
outs
bound
push
jo
pop
dec
pop
iret
pop
pop
aas
sar
push
or
(bad)
cmp
ds
(bad)
push
adc
add
or
bound
push
mov
cmp
sbb
sbb
addr16
or
pusha
fisttp
sbb
pushf
hlt
repnz
loope
mov
and
cmps
pop
lea
loop
and
(bad)
fisub
add
repnz
and
jg
add
dec
dec
add
xchg
clc
movs
push
fsub
daa
in
(bad)
sub
pusha
inc
pop
rol
sub
mov
sub
aas
jb
stc
mov
jle
jo
pusha
xchg
dec
imul
push
jmp
adc
cmps
imul
(bad)
sub
call
mov
cmps
imul
pop
cmp
inc
xchg
(bad)
or
ins
sbb
inc
push
enter
in
sbb
inc
push
in
lods
sub
sbb
add
pop
repnz
div
sbb
fdiv
push
in
add
cld
or
jl
pop
jb
push
sub
dec
test
movups
or
pop
jb
push
cld
adc
xchg
test
and
push
add
les
inc
pop
or
add
in
jl
pop
push
das
dec
ins
push
cmp
adc
mov
aaa
push
dec
shl
adc
scas
mov
dec
shr
cli
or
cmps
imul
or
(bad)
dec
enter
fs
hlt
cli
or
test
inc
movs
movs
out
dec
dec
fild
dec
push
sbb
mov
and
push
ja
pop
mov
pop
and
and
pop
pop
shl
ins
push
ret
add
adc
test
add
or
or
outs
push
adc
mov
adc
pusha
push
and
jle
cmps
xchg
mov
test
fmulp
pop
pushf
sbb
or
imul
cmps
imul
sub
retf
sbb
inc
adc
add
repnz
add
or
add
sbb
cmp
add
adc
lods
into
adc
iret
mov
pop
or
push
enter
iret
push
adc
pop
in
or
push
pushf
pop
mov
pcmpgtb
sbb
int3
add
nop
mov
dec
sbb
iret
add
fsubr
dec
sub
xor
inc
in
xchg
sbb
lea
adc
(bad)
test
sar
addr16
repz
pop
xor
rep
mov
or
and
cmp
and
and
pop
iret
add
push
jle
ds
push
dec
mov
add
rcr
pushf
and
xchg
retf
scas
pop
loope
sbb
push
dec
shl
add
mov
xor
dec
push
inc
call
and
pushf
scas
test
das
xchg
fstp
jle
lock
retw
push
mov
and
enter
push
and
dec
fisub
call
push
fwait
jns
in
jne
mov
inc
and
cmp
test
ins
stos
xor
stos
in
ss
repnz
and
fs
enter
addr16
fs
iret
es
pop
inc
pop
ins
push
push
push
add
or
inc
add
sti
xor
add
sbb
dec
mov
stc
addr16
or
pop
mov
leave
adc
cmp
dec
add
lahf
adc
inc
enter
fwait
ja
xor
mov
sbb
or
mov
out
or
fcomp
out
(bad)
mov
ins
sbb
imul
xchg
out
push
add
xor
push
adc
daa
add
add
imul
inc
shl
pop
repnz
cmps
inc
xor
cmp
jns
pop
inc
dec
fs
push
sbb
sub
sub
fs
mov
lods
lods
pushf
mov
pusha
scas
movs
ins
je
pop
sbb
push
test
xor
fistp
rcr
nop
test
outs
cmps
imul
mov
call
outs
xor
shr
sub
inc
push
shl
lahf
scas
shl
add
cmps
imul
cmps
imul
and
add
or
inc
mov
enter
(bad)
fmul
xor
add
lea
xchg
mov
push
inc
cs
push
nop
or
add
fmul
nop
sbb
cmp
pmulhuw
xchg
xchg
xchg
sbb
mov
dec
pop
sbb
les
mov
iret
dec
add
jnp
test
jno
inc
inc
pop
or
add
add
(bad)
mov
aaa
rcl
les
xor
mov
les
test
xchg
cmp
jl
outs
pop
fcmovu
pop
adc
sub
inc
add
jb
adc
pop
push
sbb
aaa
adc
imul
add
cwde
xchg
push
jb
cld
jb
popf
sbb
and
add
fild
je
push
add
mov
in
jae
push
pusha
adc
mov
enter
pop
mov
ret
inc
push
cmps
add
enter
addr16
xchg
not
mov
xchg
dec
sbb
cmc
shl
pop
push
xchg
retf
dec
dec
test
cli
cwde
push
ja
daa
in
imul
je
pop
cmps
sbb
mov
pop
xchg
seto
ret
call
mov
iret
xor
push
cmps
in
ins
jne
aas
in
pop
fwait
in
xchg
mov
push
mov
fwait
add
(bad)
and
das
push
cmp
push
call
mov
imul
repnz
sbb
dec
shl
addr16
dec
shl
mov
xchg
ins
add
adc
mov
sub
jns
xchg
sub
in
adc
sar
adc
xchg
ja
dec
dec
ins
fnstsw
jp
sub
add
jnp
bnd
cmp
div
fmul
push
cdq
clc
mov
enter
or
std
pop
imul
inc
(bad)
jmp
push
add
add
add
cdq
nop
add
mov
cmp
dec
inc
push
in
pop
or
enter
or
xor
dec
test
push
sbb
sbb
(bad)
in
shr
xchg
dec
test
shl
imul
inc
xchg
lods
and
add
adc
mov
sub
pop
and
push
dec
sti
(bad)
(bad)
(bad)
push
imul
mov
jb
pop
or
test
je
mov
lock
paddw
loop
(bad)
cmp
fadd
loop
loope
call
outs
xchg
pushf
retf
adc
push
outs
dec
lea
aaa
add
ds
push
xor
das
pop
push
add
adc
daa
aam
adc
imul
add
mov
mov
test
loop
push
adc
adc
lock
imul
xor
fwait
mov
jecxz
add
cmp
inc
adc
add
push
es
and
adc
add
lods
add
or
dec
push
inc
dec
dec
inc
push
dec
cs
(bad)
out
dec
inc
pop
sbb
arpl
imul
jb
jae
inc
popa
jb
pop
mov
dec
push
lock
nop
inc
call
and
lock
xchg
dec
pop
dec
mov
pop
mov
(bad)
dec
dec
lods
push
(bad)
sbb
add
inc
xchg
mov
inc
test
mov
je
retf
das
out
sub
jg
dec
add
push
add
daa
inc
rol
jl
(bad)
push
mov
pusha
aaa
xchg
cs
jge
in
test
mov
hlt
sub
popw
lds
xchg
add
jl
mov
lds
jg
sahf
cmps
cmps
lds
pop
movs
push
movs
xlat
cmps
fild
xor
out
ss
jg
pop
jae
push
imul
xchg
(bad)
test
stos
(bad)
and
test
test
cmp
pop
popf
add
enter
inc
pop
shl
out
xor
push
push
int3
add
sar
jg
pop
push
pushf
dec
mov
leave
push
movs
jbe
out
(bad)
cmp
xor
xchg
lods
jl
(bad)
mov
jge
inc
mov
cmp
pushf
jge
in
ret
das
inc
mov
adc
popf
pop
stos
jns
shl
add
sbb
je
fwait
cmps
mov
inc
dec
das
rcr
push
out
add
test
or
pop
aad
sbb
ds
mov
mov
mov
out
or
daa
out
and
dec
fsubp
push
or
push
jo
inc
cs
ja
inc
push
cld
aam
mov
push
cmp
jl
pop
adc
mov
dec
push
xor
pop
adc
add
sbb
nop
inc
pop
sbb
inc
aam
in
sbb
sbb
ins
add
and
cdq
mov
pop
adc
cwde
xchg
or
sub
xchg
rcr
nop
xchg
dec
add
fcomp
imul
in
add
js
daa
pop
sbb
shl
or
enter
aas
vmread
in
and
popa
lock
nop
or
dec
jo
test
clc
push
scas
jb
inc
xchg
js
fcom
or
dec
loopne
pushf
sbb
nop
cwde
push
enter
enter
add
dec
fadd
cmp
fmul
sbb
in
cmovs
inc
in
and
inc
dec
or
sbb
cmp
push
sbb
mov
adc
scas
(bad)
pop
cmp
hlt
aas
or
ds
cmp
and
cmp
pop
adc
fistp
bswap
xchg
or
xor
cmp
enter
jo
jb
fadd
sub
inc
dec
push
jb
les
jl
jb
nop
xor
sub
sub
sub
sub
mov
push
xor
and
cwde
push
or
inc
dec
push
mov
(bad)
or
fs
mov
cs
add
out
sub
pop
std
nop
cmps
ret
push
outs
cwde
add
add
xor
imul
outs
sub
rol
push
and
jle
pop
ins
pop
mov
push
and
cmps
pop
das
xchg
push
ror
ss
mov
cdq
dec
add
add
mov
test
sbb
das
sbb
jg
ss
push
mov
(bad)
shl
in
cli
cmps
pop
ss
pop
xchg
xchg
jmp
add
or
cmps
mov
mov
xchg
adc
mov
daa
or
or
adc
dec
inc
or
or
and
inc
dec
cmp
sub
add
(bad)
xor
and
push
xchg
fmul
cwde
mov
push
enter
inc
lods
mov
pop
inc
mov
je
pop
es
inc
pop
in
ret
cld
push
test
daa
xchg
xchg
jbe
push
push
cwde
push
add
daa
(bad)
daa
mov
fisub
xchg
push
add
jbe
push
out
imul
dec
in
(bad)
or
in
dec
pop
mov
and
add
or
and
cmp
(bad)
ins
in
inc
mov
rcr
pop
mov
push
ss
pop
dec
pop
into
add
xchg
mov
fild
les
inc
in
mov
pop
push
(bad)
adc
out
lds
mov
sbb
push
mov
dec
sahf
add
les
fdivr
cmp
into
cld
dec
rcr
push
adc
(bad)
mov
hlt
or
and
rcl
in
das
jp
pop
and
leave
(bad)
jmp
ins
mov
test
mov
and
sbb
add
add
pop
fs
push
pushf
push
in
dec
out
rol
rcr
mov
jmp
add
mov
sbb
mov
jecxz
scas
xchg
pusha
pop
dec
lea
pop
stc
ins
aas
sub
jns
mov
add
repnz
aas
mov
pop
out
lahf
cmp
in
dec
js
sbb
in
jnp
sbb
add
aas
enter
mov
mov
jg
mov
mov
fstp
add
mov
jns
add
sbb
mov
stc
dec
stos
enter
pop
shr
(bad)
cmp
in
sbb
inc
add
xchg
cld
dec
push
push
ds
xlat
inc
xchg
or
outs
cmp
das
or
ret
aas
pop
add
ret
xchg
daa
add
jl
jle
xchg
rcr
out
(bad)
mov
test
retf
xchg
pop
mov
lods
sbb
mov
(bad)
std
mov
pop
inc
stos
inc
stos
xchg
fcmovbe
and
repnz
sbb
jb
add
daa
jle
cmp
dec
mov
cli
test
mov
add
and
inc
pop
ins
mov
jns
mov
pop
dec
sbb
mov
mov
(bad)
jg
in
sub
add
dec
test
inc
or
aaa
pop
xor
(bad)
aas
stc
mov
sub
pop
shl
lahf
xchg
jne
inc
repnz
sub
jg
fcomp
das
iret
(bad)
xor
lahf
cld
and
enter
cmp
cmp
nop
pushf
xchg
nop
pop
bound
pop
sbb
ins
lods
mov
enter
fild
lods
jbe
data16
xor
add
test
and
sub
sub
sahf
inc
test
data16
sbb
loopne
loopne
leave
dec
add
imul
cs
sub
cmps
jecxz
std
or
nop
(bad)
aas
mov
inc
ins
push
mov
add
add
cmc
es
add
mov
fistp
adc
enter
sbb
mov
mov
aas
shl
mov
or
in
cmp
lods
jl
pop
inc
sbb
mov
or
in
into
pop
pop
jb
pop
inc
pop
and
adc
inc
push
test
xchg
xchg
xchg
xchg
and
xchg
xchg
das
add
imul
xchg
rcr
sub
dec
xor
dec
push
repnz
xchg
data16
cmp
enter
scas
dec
cs
xchg
inc
scas
cs
fiadd
sahf
sbb
add
das
in
daa
or
xchg
in
inc
xchg
cs
add
jmp
mov
dec
jo
add
add
sbb
xor
xchg
dec
rcr
rcr
fld
jmp
cmps
imul
xchg
push
mov
and
mov
add
jg
nop
pop
sub
or
xor
pop
xchg
mov
rol
or
sbb
sub
jb
je
fadd
stc
jbe
xor
xchg
mov
xchg
add
jge
mov
out
les
xor
std
cmps
fcomp
daa
sub
test
xchg
cmp
fdiv
inc
pop
mov
push
lods
or
cmp
arpl
mov
ficom
inc
push
mov
push
(bad)
xchg
add
enter
fwait
xchg
sub
js
lahf
cmp
dec
add
cmps
mov
das
int
add
sahf
inc
les
push
or
sub
out
dec
sbb
dec
push
repnz
pushf
push
lahf
push
dec
fcomp
xor
xchg
and
sahf
mov
imul
mov
pushf
add
xor
stos
push
pusha
pop
mov
jo
push
dec
call
sub
push
mov
jb
rcr
mov
enter
xor
pop
dec
es
shr
mov
sar
shr
cmp
dec
das
aam
dec
pop
test
cmps
xchg
xchg
movs
cli
push
inc
inc
sti
lahf
ja
sahf
dec
in
inc
inc
pop
push
push
push
dec
or
aas
nop
mov
xchg
pavgw
jb
push
mov
inc
inc
cmp
repnz
or
xchg
fmul
inc
or
and
dec
inc
add
push
movs
and
add
cs
stos
(bad)
fsub
jmp
xor
adc
push
add
fwait
add
dec
or
ins
mov
das
push
add
push
inc
neg
mov
movs
mov
shl
outs
jl
mov
imul
push
rcr
adc
add
and
inc
enter
add
add
fcmovne
test
sbb
push
jo
pop
push
dec
das
repnz
add
inc
mov
push
add
add
into
inc
cmp
call
enter
pop
push
adc
out
xor
dec
adc
in
push
dec
dec
aas
and
mov
and
cmp
add
movs
add
pop
pop
xchg
ins
mov
sub
xor
sysenter
cmp
out
add
inc
lahf
movs
inc
add
pusha
sub
scas
fild
or
push
push
shl
xor
mov
clc
or
ins
and
enter
sahf
sub
cmps
imul
cmps
and
xor
sar
push
outs
mov
mov
pop
call
xor
push
imul
imul
sub
cmc
pop
sbb
pop
push
dec
shl
test
dec
sar
shr
cmp
inc
cmps
pop
ss
push
in
push
stos
adc
cdq
cmps
imul
lds
push
test
dec
pop
add
cld
movs
dec
cdq
inc
outs
sub
dec
push
adc
lds
inc
fwait
inc
dec
and
inc
inc
inc
iret
adc
test
test
xor
ror
dec
xchg
sub
mov
nop
arpl
jg
cdq
nop
or
jb
sub
pusha
mov
dec
lods
sbb
add
nop
add
in
sbb
dec
sbb
dec
sub
fs
push
push
int3
pop
cmp
push
ins
and
rcr
or
nop
or
in
sbb
xchg
xchg
cmp
push
enter
sub
iret
pcmpgtb
lods
pop
mov
fs
mov
xlat
lods
xor
jb
fsub
loope
inc
push
xchg
push
jecxz
and
sub
lahf
(bad)
add
sbb
mov
jb
lahf
clc
stos
hlt
pop
xor
repnz
cli
xchg
outs
test
lods
lahf
sub
push
push
mov
in
inc
lahf
adc
out
xor
and
cmp
mov
dec
cs
cmp
lods
fdiv
scas
xor
ror
jge
pusha
fcom
xor
aas
inc
push
or
les
scas
inc
sub
repnz
(bad)
mov
rol
xor
push
dec
dec
outs
add
pop
xchg
stos
xor
nop
scas
pop
scas
push
lods
dec
repnz
or
mov
stos
adc
pop
xor
cs
icebp
push
dec
mov
sub
mov
enter
mov
or
aam
test
mov
test
fadd
jb
lock
pop
aam
or
lods
iret
inc
pop
nop
and
push
test
add
dec
iret
dec
sahf
daa
out
or
pushf
sbb
lods
inc
enter
lahf
cmp
into
sub
sti
or
xchg
mov
dec
cmp
push
pushf
sbb
push
mov
push
imul
mov
mov
and
std
leave
lods
jbe
loop
push
shl
push
and
cmp
xor
xor
add
enter
cmp
and
xchg
add
mov
add
mov
add
pop
jno
dec
mov
sub
imul
mov
push
enter
pop
add
or
sbb
ins
das
dec
push
or
nop
fs
push
xchg
add
push
les
pushf
fsubr
call
push
xchg
push
mov
ins
mov
xchg
add
inc
loopne
add
popa
and
ds
adc
neg
xchg
test
nop
mov
and
lea
inc
mov
arpl
repz
or
mov
int3
lods
xchg
out
cld
xor
cmp
addr16
mov
jb
fisubr
jbe
mov
dec
lahf
pop
inc
push
push
das
ret
inc
(bad)
addr16
mov
lahf
adc
movs
xchg
pop
jbe
push
mov
add
jb
jo
xchg
pop
mov
xchg
sub
inc
mov
inc
pop
call
mov
or
mov
dec
xor
dec
mov
nop
jne
cs
mov
push
and
push
leave
sub
mov
fistp
sbb
mov
xchg
pushf
xor
pop
adc
cmp
dec
in
push
nop
das
cmp
(bad)
fs
mov
or
or
cs
dec
pop
mov
in
or
mov
pushf
aaa
das
sbb
inc
fimul
push
adc
xchg
sub
pushf
movs
push
(bad)
je
dec
repnz
or
mov
push
xor
dec
mov
xor
pop
push
dec
rol
pop
push
jne
(bad)
pushf
test
mov
add
mov
push
nop
popa
pop
scas
aaa
ins
pusha
dec
push
gs
dec
mov
cmps
mov
mov
inc
jmp
push
pop
ror
mov
or
jp
pop
xor
and
add
jns
sbb
test
shr
aam
cmp
inc
push
cld
cmps
sbb
mov
shl
aaa
je
push
or
push
rcl
mov
sbb
sbb
mov
not
movs
cmp
ins
add
push
test
jbe
int3
dec
mov
mov
repz
dec
jb
test
jbe
pop
inc
mov
pop
es
add
dec
repnz
xchg
inc
rol
add
in
(bad)
pop
push
lea
movs
jns
pop
outs
pop
test
inc
(bad)
and
inc
add
rol
mov
or
into
sub
mov
adc
xor
rol
daa
loopne
or
ret
das
dec
je
das
in
in
inc
shl
enter
enter
popa
das
mov
or
sbb
cmps
or
or
dec
or
enter
das
push
dec
repnz
xchg
test
cmp
cs
push
xor
mov
ins
xchg
or
mov
data16
add
or
ds
add
or
add
xchg
ins
adc
dec
inc
aad
and
adc
dec
movs
add
loopne
dec
mov
jg
push
lods
in
inc
add
aad
or
nop
cs
inc
fdivp
in
(bad)
dec
or
dec
mov
push
sbb
sbb
leave
xchg
outs
mov
mov
das
sahf
mov
and
ins
dec
push
fs
push
sbb
dec
lock
movs
sbb
les
push
mov
cmp
mov
das
pushaw
cmp
push
imul
cmp
nop
inc
push
rol
sbb
pop
nop
or
sahf
aam
imul
nop
inc
push
fsubr
fadd
imul
pushf
sbb
sub
movs
sub
and
jb
ror
sub
in
mov
push
cld
fadd
das
inc
pop
jb
jbe
and
mov
push
ret
in
dec
dec
outs
xor
xor
sub
outs
xchg
mov
clc
fldcw
in
bound
scas
hlt
adc
mov
mov
out
fcomp
clc
nop
ficomp
or
fdiv
test
add
sub
push
das
cmps
in
cmp
add
je
or
and
cdq
inc
pop
sbb
enter
or
fs
pop
fsub
cwde
das
dec
adc
push
sbb
mov
adc
nop
enter
cs
sbb
or
js
das
ds
enter
aam
dec
inc
sbb
and
mov
xor
cs
and
dec
ror
push
dec
xchg
rcr
add
enter
hlt
enter
loopne
sub
xchg
add
and
and
fs
inc
xor
mov
inc
call
pop
and
clc
or
(bad)
out
cmp
dec
je
fs
mov
add
das
dec
cmp
sbb
inc
push
nop
or
das
call
lahf
lods
mov
sbb
inc
inc
imul
and
sbb
inc
inc
push
imul
push
sbb
sbb
js
push
imul
pop
sbb
das
inc
xchg
in
dec
jbe
pop
push
vmwrite
data16
jne
das
sahf
pop
jbe
inc
push
cmp
loop
dec
add
fs
cmp
fs
xchg
inc
jl
fs
add
inc
pusha
test
sbb
push
nop
jl
inc
ins
xchg
add
inc
cwde
cwde
rol
inc
fbstp
adc
mov
mov
and
dec
or
push
js
xor
enter
jl
enter
push
aam
or
dec
pop
sbb
xor
ins
in
pop
test
enter
mov
or
pop
mov
imul
das
mov
inc
dec
leave
mov
shl
nop
pop
inc
in
or
or
push
ror
and
xor
or
js
adc
ds
pushf
call
rcl
pop
fs
inc
mov
push
imul
ins
pop
sbb
das
push
(bad)
call
dec
dec
bnd
xor
das
sahf
lods
ss
lods
cwde
dec
add
fs
push
mov
fadd
lfs
adc
enter
add
sahf
sbb
mov
pop
push
movs
sub
sbb
sub
test
out
adc
in
and
mov
add
out
in
ins
cwde
das
ds
cmps
xor
test
jns
enter
add
mov
ss
push
sar
push
int
add
call
xchg
ja
aam
adc
call
fsubr
dec
mov
sbb
das
jns
leave
adc
fcom
or
or
mov
cld
adc
jle
adc
mul
sub
adc
repnz
xchg
or
int3
jmp
cs
call
retf
jg
jmp
ds
dec
xor
nop
inc
pop
pop
rcl
test
jmp
das
addr16
cmp
dec
dec
pop
cmp
mov
das
jle
sub
mov
pusha
dec
js
out
push
sub
and
jb
test
add
add
push
cld
cs
sbb
ror
mov
add
dec
cwde
jl
int
lock
mov
xor
in
dec
jbe
cmp
lock
pop
in
cld
(bad)
bound
scas
sbb
mov
xchg
mov
in
adc
ss
pop
cs
fld
out
add
imul
imul
imul
cmps
imul
adc
xor
rcr
sub
inc
push
dec
shl
xchg
mov
lods
mov
xchg
dec
shr
sti
or
adc
cmps
das
cmp
push
arpl
jge
xchg
movs
mov
call
repnz
cmps
dec
sbb
xor
xor
inc
dec
pop
addr16
xor
shl
fwait
test
ret
dec
ror
fsubr
test
cmps
imul
imul
cmps
imul
cmps
imul
mov
inc
pop
push
jbe
mov
test
rcl
mov
inc
aam
mov
cmp
aaa
and
das
dec
pop
lea
iret
dec
push
push
dec
or
out
fild
repz
mov
leave
or
jns
inc
push
je
icebp
pop
movs
mov
icebp
mov
pop
inc
xchg
out
nop
mov
jl
add
or
outs
add
jbe
or
stos
pop
dec
ficom
in
xchg
repz
mov
(bad)
adc
cmp
mov
add
push
mov
fmul
adc
sub
push
and
push
jl
aas
xor
movs
mov
adc
mov
xchg
mov
adc
aaa
mov
xor
or
and
jl
and
(bad)
repnz
inc
in
xor
icebp
out
rep
test
jle
inc
push
nop
mov
pop
nop
and
mov
add
loope
and
daa
push
pop
lds
dec
(bad)
out
je
nop
mov
bound
inc
push
pusha
sbb
aas
push
lock
jbe
enter
cmp
sbb
add
jg
fcom
pusha
add
mov
daa
pop
xchg
mov
add
push
cmp
xchg
daa
and
enter
aaa
add
mov
enter
outs
push
sbb
or
jl
(bad)
es
pop
movs
leave
cmps
int3
mov
push
or
push
hlt
aaa
jb
dec
push
div
sbb
push
inc
fst
retf
dec
push
adc
jns
in
pop
sbb
or
ss
sbb
test
fs
add
test
lods
retf
(bad)
sbb
aam
pushf
cld
aaa
push
repnz
push
repz
ins
cs
loopne
dec
int3
cmps
je
inc
xor
call
or
in
das
sahf
mov
(bad)
repnz
or
sub
xchg
sub
mov
mov
sub
fisub
sbb
sbb
aas
fadd
push
or
cmp
aad
add
inc
inc
sub
push
or
sub
pop
push
nop
inc
jl
outs
push
adc
fisttp
nop
pop
fmul
mov
call
pop
and
ss
out
pop
sbb
or
sbb
xor
ins
xchg
and
jnp
loop
xchg
jmp
add
xchg
xchg
mov
dec
mov
iret
sub
xchg
shr
(bad)
repz
not
add
xchg
adc
nop
pop
push
inc
adc
lods
xchg
xchg
in
sbb
add
add
pop
das
and
jns
add
aam
push
shl
cmp
fs
and
out
pop
and
ror
pop
daa
jne
jbe
retf
xchg
dec
and
and
jb
xchg
mov
call
adc
nop
add
xchg
inc
scas
mov
push
fwait
stos
lods
in
cwde
or
jns
movs
nop
push
fwait
mov
sub
push
fimul
imul
or
pusha
sysret
pop
sub
mov
sbb
ins
ficomp
push
enter
mov
cli
or
sbb
mov
sbb
daa
add
cmp
sbb
ror
in
sbb
jns
in
sbb
cld
cmp
ror
repz
push
fcomp
pcmpgtw
data16
sub
xor
fisub
adc
push
in
pop
xor
enter
mov
mov
inc
lods
lods
mov
in
cdq
loopne
mov
or
jb
repz
mul
sbb
add
ins
sbb
push
mov
cmp
jbe
dec
dec
imul
jbe
sahf
ins
lods
js
xor
in
cmp
test
mov
mov
cwde
mov
mov
sbb
scas
iret
mov
(bad)
outs
and
iret
mov
jg
xchg
rcr
jns
cmp
ret
mov
in
repnz
lods
dec
rcr
ror
daa
and
loope
loop
(bad)
fadd
mov
mov
jns
mov
repnz
leave
repz
cld
xchg
cli
lods
jae
out
out
pop
cmp
add
add
pop
add
add
inc
pop
ins
adc
dec
mov
push
pop
xlat
div
adc
push
or
dec
adc
add
jns
sbb
cmp
sbb
jns
enter
cld
aas
and
add
mov
test
dec
enter
push
sbb
sub
cmp
push
jbe
jmp
inc
mov
test
aaa
adc
cwde
add
mov
inc
ret
pop
add
sub
xchg
adc
inc
push
jo
popa
fwait
or
sbb
repnz
fld
pop
sbb
mov
dec
pop
pop
adc
mov
xor
in
add
adc
inc
dec
cmp
xor
dec
js
mov
out
and
lods
aas
pop
lods
push
pop
cwde
fild
nop
or
inc
mov
test
add
movs
sbb
push
pop
lods
or
jns
add
xchg
lahf
pusha
pop
jbe
outs
call
inc
mov
and
sub
and
cmp
pop
xor
jg
mov
pop
in
pop
and
xor
sbb
addr16
cmp
repz
test
cmp
in
inc
enter
mov
add
pushf
in
(bad)
push
pop
adc
cmp
test
add
mov
pop
repnz
stos
inc
xor
pop
add
(bad)
imul
pusha
sbb
rcr
fisubr
dec
jg
sti
sub
nop
mov
into
mov
pop
test
mov
cmps
mov
leave
mov
lahf
in
inc
push
pop
enter
pop
mov
push
dec
rcl
call
jae
ss
push
or
pop
repnz
push
cwde
jo
mov
mov
pop
pushf
jb
imul
sub
ret
add
pop
int
mov
loopne
mov
repnz
xor
les
xor
xchg
or
lock
jg
push
test
and
push
push
fild
shl
push
cld
aas
jl
pop
mov
cs
xchg
mov
loopne
pop
adc
and
inc
daa
sbb
pop
pop
rcr
mov
add
hlt
and
cmp
js
add
in
in
mov
mov
push
push
fucomip
push
xor
das
imul
pop
loopne
lock
das
cmp
pop
jns
mov
pop
push
jnp
in
cmp
out
add
or
aad
scas
pop
xchg
inc
call
pop
fcomip
leave
or
add
push
and
inc
pop
enter
pop
push
shr
mov
inc
sahf
mov
aas
rcl
or
pop
adc
dec
mov
cmp
fs
rcl
leave
enter
mov
add
pop
mov
or
xor
test
mov
jae
cld
dec
fcomip
data16
dec
push
push
add
add
rcl
nop
or
and
loopne
xchg
push
dec
mov
in
nop
xor
xor
xchg
inc
cs
cld
ins
push
or
mov
test
pop
mov
or
test
mov
aas
pop
repnz
pop
rol
xor
push
inc
pop
hlt
push
int3
or
adc
or
fsubr
push
xor
push
pop
adc
xchg
xor
pop
cwde
in
pop
mov
dec
mov
in
inc
add
or
call
push
sbb
push
add
sahf
inc
push
imul
call
mov
pop
mov
add
fwait
and
lock
or
xchg
cmps
(bad)
das
mov
nop
pushf
bound
fwait
aaa
test
pop
addr16
gs
rol
push
sbb
aam
sub
mov
mov
or
out
es
clc
inc
inc
sub
add
cmp
into
pop
or
imul
jge
call
pop
push
shl
(bad)
jno
and
xor
or
adc
push
jnp
cmp
movs
pop
xchg
pop
dec
push
aaa
pop
enter
xor
jecxz
dec
imul
push
in
clc
pop
call
or
push
dec
xor
cmp
xor
rol
inc
push
fs
in
mov
mov
ja
aaa
inc
jbe
arpl
dec
push
je
mov
in
cmp
push
ins
jl
or
mov
xor
and
enter
and
test
in
cwde
pop
cmp
hlt
(bad)
addr16
icebp
mov
inc
inc
pop
push
and
push
(bad)
mov
in
or
inc
adc
es
lahf
xchg
push
mov
mov
push
mov
push
jnp
adc
inc
and
mov
add
pop
jne
out
adc
adc
pop
pop
in
outs
jb
xor
ins
inc
inc
dec
inc
pop
add
arpl
addr16
gs
jb
push
xor
idiv
fs
imul
ins
popa
fnstcw
cmp
push
fs
jg
test
pop
push
jo
imul
jg
addr16
ds
popa
imul
imul
arpl
scas
sbb
ins
gs
or
pop
pop
arpl
push
outs
bound
inc
push
jne
jno
fidiv
jae
je
ins
cmove
popa
push
inc
jb
in
loopne
jb
push
outs
ja
arpl
xor
pusha
jnp
gs
cmp
fsub
cmp
je
inc
add
dec
inc
dec
dec
inc
xlat
jb
(bad)
repz
dec
popa
outs
addr16
addr16
adc
fsubr
mov
pop
aas
retf
lock
push
mov
jae
iret
push
dec
inc
xor
ss
push
mov
outs
(bad)
aas
lds
xor
cmove
push
dec
dec
push
cmp
inc
(bad)
outs
out
push
sar
ins
or
inc
mov
pop
push
arpl
jle
outs
addr16
mov
das
outs
ins
stc
sub
push
and
pop
pandn
pop
pop
jmp
adc
inc
inc
loope
adc
mov
outs
je
dec
jb
gs
sbb
mov
dec
outs
outs
vmptrld
sbb
mov
jecxz
in
cmp
pop
jae
sahf
pop
or
cmp
inc
jns
jae
jae
ins
imul
ja
gs
idiv
jecxz
adc
leave
xchg
ins
jne
jg
dec
gs
jo
dec
lods
xor
or
stos
rcl
dec
pop
inc
shl
inc
pop
dec
jecxz
test
push
addr16
inc
arpl
imul
hlt
and
push
fist
cmp
rcl
push
add
pop
fbld
std
push
add
add
loopne
sbb
lods
gs
jecxz
(bad)
shl
stc
sbb
add
call
jp
mov
cs
inc
jg
xchg
js
scas
cmc
popf
ss
fld
lods
sub
mov
xchg
xchg
jle
push
cmp
cs
imul
loop
bound
data16
out
add
cmp
pop
push
(bad)
sti
cmp
pop
shl
rcl
mov
xor
inc
data16
sbb
inc
iret
out
jo
mov
jbe
cmp
dec
sub
daa
mov
stos
arpl
fist
inc
push
jnp
lods
and
jmp
and
cmps
mov
add
push
sub
add
pop
shl
mov
push
pop
inc
add
add
adc
fiadd
and
pop
pop
sbb
sub
imul
addr16
xor
xchg
(bad)
sbb
inc
aas
jp
or
mov
fidiv
push
dec
and
dec
repnz
mov
sbb
inc
push
or
ret
lods
mov
(bad)
addr16
pop
adc
add
mov
or
(bad)
mov
scas
into
cs
push
arpl
jmp
test
mov
dec
(bad)
lea
cdq
ins
imul
mov
inc
sbb
xor
shl
or
inc
xor
and
push
loopne
dec
jne
hlt
fimul
add
bound
jg
jg
outs
adc
cmp
push
add
jno
inc
cmp
lock
test
ins
and
lods
(bad)
cmp
pop
jae
data16
push
inc
lds
loopne
jmp
and
push
outs
pop
mov
cmp
ss
dec
dec
inc
or
(bad)
push
repz
push
pop
push
movs
inc
fsubr
xlat
cmp
test
fwait
jne
or
jb
mov
es
outs
mov
sbb
bound
ds
cld
shl
(bad)
call
or
scas
cmp
cli
dec
jno
test
dec
bound
push
add
test
(bad)
rol
out
jo
test
sbb
pop
jg
pop
(bad)
lahf
psubb
mov
push
lahf
mov
pop
mov
jno
fild
jo
xor
fldcw
push
pop
loop
je
inc
jne
sbb
ss
arpl
sub
push
ss
in
out
dec
popa
retf
ins
lea
xor
inc
pop
push
xor
mov
mov
js
shl
pushw
in
std
loope
es
dec
xor
ds
test
in
outs
je
arpl
test
push
loope
jo
sahf
gs
in
pusha
lss
inc
jne
mov
jge
dec
inc
out
or
inc
jnp
repnz
cmp
xchg
xor
pop
xor
arpl
enter
mov
xor
fwait
loope
xor
xor
add
jbe
mov
rdtsc
xor
pop
nop
inc
xor
ret
in
loopne
mov
je
sahf
shr
inc
js
jne
test
movs
into
popa
jbe
xor
or
int
jo
fadd
jo
cmp
mov
fs
fisttp
mov
dec
movs
ret
push
outs
outs
not
and
inc
outs
jmp
and
test
inc
or
ret
ins
pop
ins
pop
ins
sbb
rol
das
stc
pop
or
push
outs
in
and
or
and
push
and
(bad)
push
push
push
loope
add
daa
outs
imul
iret
data16
pop
push
push
xchg
idiv
push
in
ins
in
fisub
addr16
xchg
ins
outs
cld
mov
test
adc
add
sub
mov
call
idiv
lahf
sub
call
arpl
mov
outs
arpl
into
pop
add
sbb
or
and
sbb
adc
cmp
loopne
mov
xor
shr
add
nop
arpl
sub
lds
imul
rcl
addr16
arpl
out
aad
or
xor
push
push
andps
dec
ror
sub
cmp
mov
push
dec
bound
inc
jnp
adc
sub
sbb
xor
add
sub
cli
test
sbb
mov
add
sub
shr
xchg
push
mov
jae
stc
jbe
int
sub
mov
xor
and
out
in
sbb
mov
je
call
fdivr
mov
nop
sbb
xchg
mov
popa
sbb
(bad)
adc
and
cmp
jo
pop
jo
daa
inc
jne
(bad)
jb
pop
xor
dec
jg
pop
cld
add
xchg
push
cdq
jne
push
sub
(bad)
in
or
xor
inc
jb
outs
pop
sbb
sbb
mov
mov
jb
xchg
daa
sub
and
cmps
jne
fild
sbb
mov
add
and
daa
dec
inc
mov
mov
mov
lods
ins
imul
push
mov
ins
push
mov
pop
fld
pop
pop
mov
inc
xchg
daa
dec
dec
or
fiadd
dec
jmp
dec
inc
push
adc
pop
nop
add
mov
mov
dec
push
call
add
push
inc
sahf
xchg
push
ret
cs
dec
mov
mov
add
or
mov
jbe
pop
or
add
xor
scas
adc
or
adc
cmp
je
xchg
add
fwait
or
sbb
cwde
add
push
mov
add
add
push
and
call
add
mov
and
mov
pop
jmp
ins
icebp
cs
push
push
dec
lock
mov
out
ss
inc
js
daa
(bad)
push
cmp
push
dec
adc
and
adc
out
imul
int
sbb
aaa
outs
ins
movs
mov
ficom
push
popa
das
bound
mov
sbb
sub
push
hlt
aad
push
fs
or
xlat
pop
sub
mov
inc
test
div
repnz
call
inc
inc
jb
or
inc
dec
inc
mov
mov
cmp
push
pop
jl
nop
pop
fadd
push
dec
adc
sbb
cmc
loop
dec
mov
data16
pop
repnz
add
pop
pop
test
je
int3
sbb
out
bound
jb
jl
mov
ins
sbb
(bad)
adc
or
sub
mov
loopne
and
or
fistp
aaa
pop
subps
and
in
(bad)
jmp
loopne
push
mov
or
xor
aas
push
std
dec
sbb
cmc
lea
mov
xor
jg
movs
xchg
and
jmp
rcl
mov
or
adc
shl
rdmsr
jecxz
sbb
xor
inc
dec
dec
pop
cmp
nop
sbb
jno
cmp
mov
mov
sti
dec
adc
mov
mov
jmp
(bad)
pop
push
sub
xchg
push
test
sub
ss
sub
xchg
add
cs
xchg
jecxz
or
icebp
xchg
sbb
not
add
and
adc
lahf
dec
ss
xor
(bad)
push
jbe
or
pop
ds
push
call
dec
cdq
or
or
add
outs
test
js
shr
inc
data16
int3
dec
sub
or
ficomp
pop
dec
push
ss
inc
jmp
mov
imul
mov
dec
lods
xor
push
test
ja
adc
loop
dec
mov
sbb
push
sahf
dec
jle
imul
mov
inc
inc
xor
jbe
xor
push
aas
xchg
pusha
mov
mov
adc
fcom
pop
repz
push
(bad)
fadd
xchg
imul
pop
mov
das
pop
push
cs
inc
mov
push
jno
and
sbb
sub
push
repnz
ficomp
xchg
dec
or
fiadd
andnps
push
(bad)
push
cmp
dec
inc
pop
and
les
cmps
pop
jae
outs
mov
xor
dec
inc
dec
push
push
jo
or
pop
nop
mov
push
mov
inc
sub
pusha
fiadd
push
lods
inc
enter
jmp
sbb
mov
dec
add
sbb
inc
ins
sbb
push
daa
out
mov
cli
inc
dec
sbb
call
loop
das
push
inc
xlat
push
inc
xchg
imul
rcr
push
mov
pop
pop
das
ror
inc
mov
push
out
push
in
and
outs
xor
dec
aad
cli
cs
jb
outs
fsubr
inc
outs
push
(bad)
sub
push
ins
xchg
or
shl
add
push
jle
ds
push
jb
dec
mov
shl
cmps
loopne
dec
push
pop
dec
inc
and
enter
(bad)
add
push
push
pop
mov
push
pop
inc
imul
dec
mov
push
adc
push
inc
mov
es
scas
lods
sub
xor
ins
add
outs
lock
das
je
mov
adc
out
inc
popa
and
pop
or
push
jnp
adc
jae
xor
cmps
xchg
pushf
xor
ficom
cmp
push
add
xchg
ficom
jmp
inc
xchg
dec
mov
ds
pop
and
jbe
mov
sbb
ins
test
mov
outs
and
repnz
scas
add
sub
and
add
fisttp
inc
sub
cwde
inc
mov
repnz
pop
xchg
add
adc
mov
out
addr16
adc
push
aad
add
popa
sbb
dec
dec
test
cmp
add
xor
mov
imul
jae
int
fwait
outs
dec
inc
cmp
(bad)
shr
bound
outs
add
and
push
jg
xor
xor
push
test
jg
add
sub
neg
adc
out
sbb
sbb
mov
outs
xchg
mov
ja
aas
popa
lea
sbb
(bad)
inc
(bad)
adc
or
movs
adc
stos
mov
or
std
or
pop
fiadd
add
sub
and
add
xor
popf
hlt
lods
fist
mov
inc
stc
push
jmp
inc
push
xor
pushf
fs
inc
test
test
(bad)
dec
stos
lea
xor
ins
(bad)
jl
cwde
or
mov
jle
popa
add
adc
addr16
jb
jbe
je
adc
js
mov
add
in
pushf
movs
sbb
out
mov
add
add
or
adc
test
pop
imul
push
mov
mov
aaa
stos
outs
popa
fs
jo
cdq
add
xor
xchg
jbe
jb
xchg
prefetchwt1
sub
and
sub
sti
mov
mov
xchg
dec
push
mov
retf
xor
and
cmp
sub
jg
adc
gs
push
popa
ins
or
pop
xchg
pusha
int3
aam
inc
dec
cs
sub
and
test
inc
push
stc
or
jne
push
mov
xchg
in
lods
pusha
lods
leave
prefetch
cs
lock
xor
cmp
das
jp
ins
cld
fs
es
push
adc
adc
xchg
or
or
les
leave
xchg
xlat
inc
outs
jne
cld
xchg
xchg
add
adc
or
add
pop
adc
outs
mov
ret
xor
push
cmp
out
push
outs
sbb
jb
sbb
xchg
add
dec
nop
outs
xor
mov
inc
jno
(bad)
ror
jns
push
(bad)
xor
dec
lahf
mov
ss
in
jp
add
sar
ss
sub
shl
outs
ja
push
xor
push
dec
les
js
inc
push
mov
sub
sub
leave
add
je
lahf
xor
push
pop
add
test
and
add
stos
xchg
int3
sub
adc
stos
pop
xor
push
aaa
jb
inc
add
mov
push
sub
icebp
add
je
dec
and
jbe
into
and
punpcklbw
add
and
out
int
pop
xor
mov
test
pusha
and
mul
sbb
sbb
or
add
pushf
push
dec
mov
lahf
in
ins
outs
and
repnz
je
das
or
shl
pop
xchg
add
stc
mov
js
ret
adc
dec
or
and
push
not
aas
aam
jns
xor
dec
imul
test
and
adc
aas
shr
in
popa
addr16
inc
mov
inc
sub
mov
mov
mov
and
rcl
add
cmp
push
dec
je
mov
sbb
and
add
mov
addr16
addr16
mov
add
mov
nop
adc
shl
mov
inc
adc
arpl
jae
data16
fadd
jecxz
mov
or
and
jb
in
dec
test
sub
cmp
jbe
(bad)
and
inc
ja
popa
pop
ins
imul
cmp
jb
jae
es
pop
imul
outs
dec
jae
inc
(bad)
jb
pop
mov
push
mov
sbb
ins
and
inc
mov
inc
ins
jae
adc
sub
in
xor
test
xor
mov
inc
outs
inc
push
pop
xor
push
outs
sbb
mov
ficom
add
daa
pop
fcmovu
mov
lahf
lahf
pop
daa
adc
sub
in
push
and
adc
dec
jp
or
mov
dec
outs
push
xchg
imul
dec
inc
ror
dec
mov
cmp
popa
stos
and
fidiv
clc
adc
ret
push
dec
fild
fadd
and
neg
jmp
mov
jo
xlat
ja
inc
ins
dec
mov
(bad)
mov
jmp
xchg
loope
inc
ror
adc
xchg
and
ins
pop
pop
js
cmps
inc
inc
sub
sub
lock
bound
das
or
shr
into
je
je
pusha
fsubr
xchg
push
aas
or
arpl
push
inc
in
pusha
xchg
or
push
pop
mov
jae
(bad)
call
mov
jns
mov
xchg
lock
out
sbb
movs
cli
xor
adc
int3
and
jnp
pop
js
call
mov
ret
mov
jo
addr16
xor
(bad)
dec
dec
fs
pop
aas
test
inc
xchg
cmp
push
mov
(bad)
push
or
adc
mov
imul
pop
xchg
inc
mov
pop
js
adc
mov
jle
outs
nop
dec
popf
int3
or
mov
mov
les
arpl
out
hlt
imul
outs
outs
(bad)
popf
out
imul
xchg
fcmovu
lds
bound
jb
jg
sti
sahf
push
repnz
ja
cmp
test
mov
and
jg
ficomp
xor
hlt
cld
(bad)
(bad)
(bad)
cmp
popa
or
inc
mov
xchg
in
or
les
lods
or
pop
and
inc
pop
inc
out
push
xchg
icebp
gs
fs
dec
outs
imul
pop
pop
pop
and
out
gs
inc
test
jae
jo
cmp
cmp
dec
popf
pushw
push
dec
out
sbb
jmp
das
lods
pop
xlat
lods
or
popa
sub
add
mov
inc
aaa
cmp
pop
xor
push
test
dec
mov
sub
or
sbb
mov
aas
dec
movs
iret
pop
xor
les
dec
inc
movs
sbb
cld
xchg
lods
xchg
shl
into
inc
adc
xor
push
fs
shr
add
pop
mov
gs
fidiv
sub
dec
jb
in
sbb
adc
cmp
fisub
sbb
cmp
ds
jo
or
inc
(bad)
bound
sbb
add
pop
cs
or
inc
cmps
pop
mov
loope
jecxz
cmps
jecxz
mov
pop
cmp
pop
sub
adc
sbb
add
xlat
and
and
loop
pop
or
mov
inc
(bad)
addr16
sbb
add
cmps
test
push
cwde
push
or
jmp
pop
add
(bad)
(bad)
(bad)
(bad)
jl
inc
in
cs
xchg
aas
add
inc
test
rcr
push
or
mov
mov
das
shr
(bad)
inc
loope
jnp
xchg
movs
ret
loopne
aad
mov
sub
xor
xor
enter
xor
enter
ss
sub
and
inc
sub
cs
push
sbb
mov
jo
in
and
arpl
push
loop
pop
dec
ror
add
movs
out
and
dec
mov
aas
cmp
push
pop
and
adc
iret
imul
mov
jl
jbe
pop
push
sub
and
(bad)
sbb
outs
jbe
pop
jns
in
jo
dec
or
add
or
jno
adc
cmp
cmp
mov
xchg
cwde
push
ret
xchg
pop
adc
or
(bad)
ins
mov
outs
or
outs
or
div
cmp
cmp
inc
sub
leave
cwde
sub
call
fwait
pop
pop
(bad)
popf
and
je
movs
dec
jp
leave
test
cs
leave
arpl
lea
xchg
cmp
mov
mov
dec
test
xchg
pop
leave
sbb
jns
cmp
sbb
or
add
cmp
add
sub
sub
dec
mov
sbb
pop
data16
je
ja
push
sbb
and
ss
add
dec
and
push
pop
and
or
out
scas
je
addr16
add
sti
or
das
into
xor
inc
shl
mov
in
cmp
xchg
add
ror
cmp
outs
jg
push
adc
inc
xchg
movs
push
dec
inc
repz
mov
push
outs
sar
nop
int3
aam
mov
mov
xchg
cmp
inc
xor
sbb
fsub
pushf
call
or
dec
movs
sbb
leave
sub
xor
mov
or
clc
mov
out
push
dec
inc
dec
pop
cs
adc
push
inc
ret
(bad)
pop
cld
cmps
cld
out
add
test
or
adc
dec
inc
mov
arpl
data16
add
imul
sub
pop
cs
jae
push
mov
push
cmp
mov
or
bound
xor
fs
push
imul
jno
or
in
pop
adc
aas
mov
dec
xchg
xchg
sbb
mov
xchg
push
pop
or
adc
enter
xchg
jo
or
test
(bad)
repnz
push
popa
imul
sub
push
xchg
mov
sub
rcr
mov
cmp
push
xchg
or
cs
pop
inc
sbb
add
call
jmp
pop
inc
pop
repz
or
arpl
test
fisub
sti
push
repz
and
adc
add
or
mov
pop
leave
or
repnz
jb
mov
pop
xor
loopne
pop
imul
jmp
inc
pop
mov
xor
inc
or
test
dec
xchg
or
mov
jb
xchg
sbb
xchg
cmp
push
xor
outs
(bad)
jmp
inc
xchg
and
scas
push
pop
aas
sub
jae
mov
ins
sahf
push
(bad)
test
xchg
inc
inc
mov
arpl
outs
and
movd
ins
mov
or
cmp
push
jo
aaa
es
out
sub
add
out
retf
sbb
push
daa
inc
ds
ret
lds
fisub
cmp
xor
test
retf
dec
inc
mov
mov
xor
imul
adc
ja
das
loop
xchg
jmp
outs
cld
jmp
sub
xlat
imul
scas
iret
cli
dec
mov
in
retf
sbb
add
wrmsr
pop
sub
mov
or
(bad)
es
(bad)
or
push
sub
sbb
inc
push
ficomp
outs
adc
out
inc
mov
cmps
mov
icebp
pop
loopne
es
dec
test
rcl
inc
(bad)
(bad)
(bad)
aas
scas
inc
cwde
arpl
cli
xor
test
dec
or
mov
stos
or
jge
(bad)
je
aad
dec
dec
jg
mov
hlt
or
je
jo
lahf
dec
je
mov
or
shl
adc
add
or
dec
mov
dec
cvtps2pi
mov
(bad)
(bad)
(bad)
aas
cmps
aaa
pop
dec
dec
add
test
xor
adc
mov
mov
dec
(bad)
push
(bad)
aas
mov
sub
dec
movs
mov
mov
hlt
scas
add
imul
adc
pop
es
jne
shl
loope
and
mov
sub
lea
pop
push
mov
push
and
add
jae
xor
push
pop
xchg
jns
xchg
xchg
aas
in
inc
push
xor
paddb
jecxz
mov
scas
dec
jmp
xor
dec
or
inc
aas
je
inc
jmp
dec
dec
fs
mov
nop
in
add
or
adc
jb
mov
sub
in
fsub
sbb
mov
adc
dec
jbe
adc
xchg
sub
in
add
cwde
mov
add
repnz
dec
leave
sub
add
xchg
es
stos
push
retf
ins
or
arpl
add
jmp
call
jecxz
sub
ds
add
ret
cmp
dec
les
aaa
scas
pusha
mov
cmp
push
push
mov
rcl
daa
(bad)
xchg
rcl
nop
xchg
retf
mov
les
and
and
out
loope
push
outs
imul
and
dec
addr16
or
and
xchg
xchg
pop
aam
sub
dec
sub
imul
arpl
jo
cmps
test
loopne
repnz
cmp
mov
leave
nop
stos
jns
mov
mov
in
hlt
add
adc
fdivr
das
cmp
xchg
clc
inc
xor
add
ins
push
leave
cmp
fadd
ins
or
adc
test
inc
inc
icebp
sbb
shl
mov
shl
enter
stos
inc
arpl
inc
pop
fist
push
cmp
popa
jae
or
stos
je
popf
sub
inc
lahf
pop
ss
pop
addr16
mov
popa
dec
ins
pop
rcr
pop
pop
imul
and
mov
aaa
outs
jmp
jae
jo
add
pop
cmp
imul
mov
adc
rdmsr
test
iret
pop
sbb
push
aaa
xor
jbe
and
adc
mov
mov
imul
xchg
inc
adc
pop
jb
xchg
add
dec
lods
or
data16
lods
ret
pop
adc
inc
(bad)
dec
mov
mov
scas
mov
dec
mov
push
les
jmp
movs
push
mov
stos
out
pop
xchg
sbb
sbb
test
adc
dec
scas
addr16
adc
sahf
add
shl
inc
outs
loopne
or
lea
inc
dec
adc
add
cwde
mov
inc
out
and
dec
scas
dec
dec
and
mov
ss
adc
or
adc
cmps
lods
arpl
xchg
and
(bad)
sar
adc
xor
mov
dec
enter
aaa
sub
dec
xor
xchg
adc
cwde
dec
inc
mov
imul
sti
sbb
or
into
xor
sbb
inc
pop
je
jb
adc
add
sub
adc
sub
sub
imul
cs
mov
cmp
sub
inc
inc
outs
and
stos
and
iret
jg
xor
mov
call
rcl
cmp
cmp
ins
inc
hlt
jno
stos
sbb
and
sbb
call
fidivr
xor
clc
mov
xchg
aad
cdq
out
loopne
and
pushf
sub
xchg
aam
xchg
out
xchg
pop
lea
xor
daa
(bad)
std
adc
imul
add
retf
jo
addr16
add
cs
rcl
lahf
stos
repz
xchg
jo
sbb
cmps
sbb
(bad)
ucomiss
jno
add
das
dec
loop
add
xor
cdq
js
pop
iret
pop
(bad)
call
dec
pop
fld
fimul
pop
push
dec
mov
icebp
jbe
pop
jno
jb
(bad)
jmp
lods
sahf
jo
repnz
call
aaa
shr
adc
fwait
sbb
push
push
inc
inc
xor
inc
ins
pop
adc
out
add
data16
mov
inc
rcl
pop
ret
sub
jmp
mov
cs
ret
jno
jnp
jge
push
aam
mov
jg
test
sub
cmp
(bad)
mov
push
push
cmp
sbb
or
mov
outs
addr16
gs
outs
or
and
sub
jp
dec
inc
mov
pop
push
mov
retf
fs
daa
add
fsub
push
dec
inc
mov
sub
jno
(bad)
popa
xor
bound
and
pop
jb
adc
push
sbb
and
test
xchg
and
sbb
mov
enter
not
add
push
push
(bad)
cmp
xor
push
inc
cs
mov
repz
pop
fistp
jnp
adc
add
cmp
sub
inc
and
repnz
dec
dec
push
adc
mov
bound
and
enter
rol
dec
xor
pop
test
xor
xchg
enter
jb
pusha
fcom
outs
daa
mov
push
xchg
test
add
enter
inc
outs
add
pusha
retf
lahf
pusha
dec
cmp
dec
mov
das
js
or
test
add
push
dec
das
cmp
cmp
dec
xor
push
mov
xlat
cmp
sbb
addr16
jo
pop
loopne
push
mov
cmp
(bad)
aas
imul
pusha
dec
js
stos
mov
push
int
fdivrp
nop
cld
(bad)
fldcw
(bad)
retf
jge
push
dec
sahf
loope
cmp
js
(bad)
(bad)
dec
xchg
in
sbb
lock
xchg
sub
and
bound
dec
mov
sbb
cld
mov
mov
mov
pop
adc
mov
xchg
pop
sbb
add
push
shl
pop
call
repnz
(bad)
cld
pop
lods
mov
push
xor
pop
arpl
jns
adc
jno
out
jecxz
push
or
jecxz
inc
push
(bad)
mov
or
inc
fld
mov
sbb
sbb
daa
xchg
(bad)
sbb
mov
sub
rcr
mov
mov
ja
(bad)
daa
faddp
dec
repz
or
pop
sbb
add
(bad)
(bad)
call
push
push
inc
mov
mov
sar
xchg
xor
xor
pop
call
pusha
jecxz
outs
mov
es
add
icebp
sahf
test
dec
mov
xor
mov
sbb
test
addr16
mov
mov
cmp
inc
aas
and
call
test
dec
push
jmp
and
xor
or
mov
fstp
push
ins
jne
fidiv
lds
push
imul
pusha
xchg
pop
inc
ret
sbb
(bad)
pop
xchg
retf
sub
stos
inc
sbb
stos
lahf
sub
ins
push
pop
push
dec
pop
and
jp
loope
inc
push
pop
out
cmp
sub
inc
and
cmps
jae
popa
xchg
iret
out
inc
pop
and
outs
aas
cmp
mov
jbe
daa
pop
adc
cmp
pop
pop
daa
push
ss
push
out
daa
or
mov
sbb
pop
imul
inc
push
add
mov
jne
arpl
mov
scas
call
adc
jne
rcr
enter
stos
cmps
or
pop
xor
int3
pushf
lea
test
mov
add
in
aam
fcom
cmp
adc
or
sbb
iret
ds
push
ins
test
adc
push
test
adc
mov
loope
inc
push
das
xchg
aas
adc
jno
bound
movs
add
aas
repz
mov
sbb
push
dec
leave
pop
sub
inc
and
fisub
or
and
sar
or
mov
push
and
rol
push
fadd
test
mov
mov
push
pop
out
ja
jb
mov
(bad)
(bad)
and
(bad)
(bad)
(bad)
out
sar
add
dec
mov
jns
das
fidivr
mov
ins
stos
inc
cwde
fld
mov
bnd
cmp
cmp
inc
pusha
adc
pop
je
loope
cmp
gs
int
inc
sahf
daa
adc
mov
(bad)
sahf
pop
jae
dec
pop
add
add
sbb
scas
add
inc
dec
push
adc
adc
mov
add
or
sbb
inc
adc
xchg
mov
add
xor
add
shr
jns
sbb
jb
xor
popw
pop
bound
sub
xchg
pop
setne
adc
test
cmps
xchg
pop
leave
repz
popf
jns
and
push
dec
mov
xchg
stos
cs
(bad)
pop
or
mov
and
fsub
shl
mov
inc
adc
pop
outs
js
dec
inc
hlt
nop
aas
cmp
mov
add
in
and
(bad)
or
test
cld
add
outs
push
popa
jae
or
sub
push
and
push
cld
scas
js
nop
sub
adc
outs
or
mov
add
and
mov
dec
cmp
and
scas
ror
fbld
leave
rol
and
arpl
or
push
xchg
xchg
sbb
and
jl
daa
test
arpl
arpl
pusha
nop
xchg
das
xchg
nop
cmp
add
ret
shl
mov
clc
cmp
pop
sub
inc
and
cmp
dec
or
pop
dec
push
in
pushw
dec
push
mov
or
lea
inc
push
cdq
xchg
and
and
dec
sub
mov
pusha
scas
mov
gs
addr16
inc
xchg
imul
or
add
xor
dec
gs
or
and
cdq
lahf
retf
iret
ins
ja
jo
mov
xor
popa
arpl
xchg
(bad)
test
out
lods
lods
ficomp
outs
ss
imul
js
fadd
cmp
and
scas
mov
mov
and
mov
(bad)
mov
lea
scas
pop
adc
outs
or
push
push
mov
sbb
adc
inc
popa
add
lahf
(bad)
(bad)
(bad)
dec
icebp
aas
jmp
in
aaa
fild
shl
and
inc
mov
pop
xchg
ret
loopne
aas
and
jnp
cmp
mov
dec
mov
movs
add
sub
add
mov
xchg
ret
or
push
push
lea
sbb
addr16
dec
ret
pop
mov
add
scas
ret
scas
ja
xlat
push
xor
push
and
sbb
sub
and
fadd
add
les
pop
ja
adc
cmps
hlt
inc
(bad)
dec
out
xchg
pop
popf
sub
add
dec
cmp
sbb
stos
xor
jmp
loope
inc
xchg
arpl
imul
add
push
ficomp
fidiv
aaa
ds
es
dec
push
sahf
js
add
cmps
dec
add
fbstp
adc
mov
les
js
cmp
lods
cwde
push
loopne
retf
or
imul
jle
cli
lods
(bad)
jnp
jg
pop
pop
jbe
popa
dec
call
retf
bound
pop
jge
mov
or
add
push
jns
gs
or
xor
xor
jle
hlt
aaa
dec
mov
jp
cmp
pop
fistp
rcr
pop
xchg
pop
dec
outs
jmp
test
push
add
xchg
fcomp
mov
test
dec
mov
pop
inc
jb
push
sbb
mov
xor
fld
scas
sub
inc
add
or
idiv
popa
sbb
das
rcl
add
js
push
outs
in
ror
iret
xor
jne
ins
in
imul
xor
sbb
sub
ret
or
sub
sub
mov
sti
outs
gs
adc
inc
push
sbb
popf
movs
addr16
push
bound
out
xchg
sbb
pop
das
daa
mov
loopne
jae
test
pop
dec
xchg
dec
fs
pop
dec
ret
pop
cmp
in
sub
cmp
sti
jg
pop
ret
mov
hlt
pusha
and
xor
fmul
jno
dec
ins
fwait
or
pop
mov
pop
xor
neg
out
sti
ds
jne
add
inc
cmps
outs
cmovle
cmps
loop
(bad)
push
jae
pop
xadd
imul
adc
inc
sub
pop
scas
xchg
out
pop
lahf
in
outs
mov
daa
inc
pusha
pop
mov
mov
imul
popa
sub
lds
jl
add
scas
repz
xor
ds
mov
and
pop
outs
add
xlat
out
push
sbb
into
fisubr
cwde
xor
xlat
cvtps2pd
shr
push
inc
addr16
cs
in
dec
addr16
mov
cmps
daa
push
mov
cwde
mov
addr16
rol
pcmpeqb
loope
(bad)
ins
fiadd
pop
xor
fsubr
mov
mov
mov
pop
jmp
cli
adc
xor
jg
scas
push
mov
xor
dec
sub
xor
pop
push
ins
daa
push
or
mov
lods
loope
pop
(bad)
loope
ins
or
add
scas
data16
dec
xchg
fsub
(bad)
push
cmp
adc
je
push
sti
(bad)
imul
pop
dec
sbb
pop
ins
ins
xchg
aaa
dec
cmps
xchg
(bad)
(bad)
jmp
scas
mov
ret
dec
mov
add
call
clc
inc
mov
pop
call
jmp
dec
(bad)
xor
add
add
out
inc
popa
mov
mov
rol
push
les
cmps
xor
adc
pop
aaa
pop
or
imul
pop
sub
bound
and
(bad)
leave
sbb
add
add
popf
cmp
xchg
hlt
test
adc
pop
call
aaa
jae
loop
sbb
into
pop
test
xor
sub
ins
push
loope
mov
(bad)
je
dec
and
arpl
test
bound
mov
mov
ins
mov
add
loop
pop
and
inc
or
fadd
push
cmps
sbb
dec
jo
sub
mov
bound
popa
ins
sbb
jb
inc
dec
mov
and
xor
and
mov
push
dec
add
or
xchg
cmp
and
push
and
xchg
test
mov
push
or
adc
sbb
jmp
push
mov
push
mov
push
fisttp
mov
ror
cs
mov
dec
jmp
ret
imul
jns
sbb
jae
add
push
jecxz
jbe
ss
mov
nop
push
js
retf
mov
add
dec
add
jmp
pop
cmp
mov
call
push
sbb
push
inc
mov
jo
xchg
fidiv
dec
pusha
add
sbb
xor
jae
push
movs
jnp
mov
xchg
add
(bad)
fwait
push
inc
inc
fs
and
ret
aaa
repz
stos
or
outs
inc
jnp
stc
data16
sbb
pop
and
pop
push
mov
inc
push
jmp
dec
inc
out
inc
mov
push
(bad)
mov
rcl
add
sahf
push
test
jbe
xor
mov
sbb
jb
ret
out
out
mov
adc
inc
movs
jbe
pop
push
aaa
inc
pop
inc
dec
fidiv
adc
sar
sbb
or
mov
cli
dec
dec
aas
pop
jp
or
ins
jp
pop
ins
iret
es
aad
out
jb
nop
in
repz
push
(bad)
mov
inc
pop
arpl
add
or
push
push
cmps
and
push
(bad)
mov
arpl
mov
push
retf
mov
ds
popa
mov
ss
stc
mov
scas
iret
or
sahf
push
push
xor
and
sbb
jg
inc
cmps
push
mov
cmps
lods
outs
sub
xlat
dec
mov
push
lahf
mov
or
jne
sbb
mov
and
call
stos
mov
inc
arpl
loope
xor
cs
hlt
gs
inc
xchg
jbe
jle
arpl
push
dec
xchg
push
xor
xchg
mov
aaa
xor
cmp
daa
pop
ins
inc
or
mov
push
push
retf
imul
cmp
and
sbb
cmps
push
ret
pop
stos
sub
call
test
pop
outs
pop
sbb
cs
cmp
xchg
push
mov
pop
sahf
imul
or
or
aas
add
push
add
xlat
sub
jo
adc
adc
sbb
pop
loope
jle
mov
ins
shr
ins
mov
jmp
scas
jb
aaa
pop
cwde
mov
scas
fist
fcmovbe
push
mov
inc
jns
and
pop
aaa
push
retf
or
aam
jle
inc
push
mov
pop
push
pop
shl
and
or
adc
jecxz
jmp
pusha
mov
inc
dec
lods
call
into
outs
bound
outs
jecxz
sub
addr16
pushf
aaa
cmps
or
sub
pop
dec
je
mov
xchg
sub
xlat
das
dec
push
jo
inc
push
xlat
out
movs
lods
mov
push
adc
sub
adc
adc
pop
ins
mov
movs
fst
dec
adc
data16
lds
adc
outs
sub
les
mov
dec
arpl
add
rol
or
gs
out
xchg
inc
push
sub
mov
(bad)
shufps
ret
jae
(bad)
shr
adc
or
inc
add
test
add
xlat
fwait
outs
cmp
xor
xchg
jns
je
mov
rcr
push
adc
jecxz
push
retf
je
jno
dec
xchg
fs
fidivr
pop
mov
mov
mov
lea
xlat
es
push
or
push
(bad)
stos
lea
jnp
or
or
fistp
imul
lss
movs
popw
xor
xor
jo
sbb
pop
sbb
pop
not
and
mov
inc
pop
popa
mov
das
and
lods
imul
xor
mov
inc
jl
ss
and
inc
in
(bad)
fmul
push
ret
sub
(bad)
mov
mov
cmp
mov
adc
sub
punpckhwd
out
je
push
lods
and
and
xor
xchg
push
fcmovnu
mov
mov
push
and
into
rcl
mov
ds
dec
outs
js
rcr
outs
stos
dec
sub
xlat
ret
stos
pop
sub
pusha
mov
mov
movs
push
jmp
pusha
xor
or
iret
movups
retf
mov
ins
or
mov
out
add
push
push
add
(bad)
addr16
inc
inc
sub
daa
adc
add
cmp
push
xor
lea
xor
js
test
add
ret
push
cmps
daa
sub
movs
add
jnp
lods
dec
and
jo
inc
pop
ret
push
pop
xlat
inc
lea
ret
iret
into
push
push
push
aaa
call
not
dec
jl
inc
pop
je
rcl
je
outs
imul
je
and
mov
inc
popa
adc
pop
adc
call
sbb
inc
bnd
ds
dec
jne
movs
imul
pop
jnp
sbb
mov
nop
adc
fs
jo
adc
xor
push
jb
ins
lahf
sub
imul
call
dec
mov
jmp
das
sbb
je
fild
inc
outs
mov
inc
dec
loop
xchg
ror
push
iret
dec
pop
imul
dec
(bad)
cli
pop
and
js
mov
dec
push
pop
mov
outs
sub
es
jmp
and
push
(bad)
sub
add
(bad)
int3
xchg
lods
ret
push
outs
sub
mov
iret
sub
jo
add
and
pop
inc
jns
les
jbe
ret
mov
pop
xor
and
inc
pop
mov
push
mov
out
ja
and
xor
pop
sbb
mov
mov
adc
push
dec
add
sub
mov
xor
loop
push
add
movs
loop
outs
fisub
mov
(bad)
out
and
dec
lahf
addr16
sub
adc
arpl
cmp
cmp
mov
ret
sub
xlat
jo
add
push
jb
sbb
dec
sub
xchg
arpl
outs
add
ins
sbb
fild
add
xlat
jp
xchg
scas
bound
and
and
jae
inc
stos
cmp
imul
jmp
push
mov
cmps
arpl
xor
arpl
inc
push
add
outs
dec
xchg
jb
outs
in
push
mov
pop
dec
cmp
jb
mov
call
mov
push
adc
adc
sbb
stos
adc
push
outs
test
pop
inc
mov
pop
cwde
push
repnz
sahf
or
inc
add
push
xchg
imul
lods
sbb
or
fwait
test
pusha
(bad)
outs
inc
dec
scas
dec
add
add
add
or
push
loope
add
aas
stos
mov
xor
adc
fist
out
mov
shr
les
daa
sub
adc
xchg
(bad)
push
jae
sub
push
shl
add
or
sub
inc
test
and
outs
inc
dec
mov
pop
adc
or
cs
cmps
ds
mov
or
dec
push
jg
pop
ret
dec
(bad)
popa
imul
mov
out
arpl
daa
cmps
shl
jae
push
push
sub
push
test
inc
adc
adc
ss
les
je
adc
scas
adc
add
dec
pop
mov
inc
je
push
arpl
xchg
lods
nop
cmp
push
dec
xor
push
push
and
sahf
pop
dec
xor
xor
imul
xor
push
rol
lods
das
push
into
daa
pushf
mov
mov
movs
out
and
fisub
xlat
bound
pop
xor
pop
add
sbb
jno
jnp
je
sbb
test
pop
daa
fsubr
mov
xchg
inc
data16
out
nop
lods
pop
pop
xor
mov
xchg
xchg
je
pop
xor
jb
(bad)
jmp
les
dec
sahf
jno
ficomp
and
adc
inc
adc
and
imul
sub
vcvtps2pd
mov
(bad)
and
scas
or
ins
add
nop
in
das
inc
push
dec
outs
je
cli
push
and
sbb
mov
scas
push
or
iret
xor
dec
fsubrp
arpl
ret
xor
dec
mov
dec
add
mov
stos
(bad)
stos
push
fisttp
xor
nop
xor
or
imul
push
xor
aaa
shr
mov
xchg
test
xor
lods
neg
dec
add
pop
ins
mov
clc
jp
(bad)
xor
mov
push
mov
pop
or
pop
sub
cmp
sar
dec
scas
das
aam
mov
ss
inc
imul
add
jmp
in
fcomp
push
mov
cmp
add
and
xchg
cmc
xchg
dec
sbb
sbb
nop
jb
call
loopne
add
sbb
lea
pop
out
jl
rol
call
push
add
xor
push
scas
add
cli
push
add
fisttp
mov
push
inc
popa
test
mul
xchg
aam
es
pop
into
and
(bad)
jns
dec
nop
ins
mov
popa
xchg
aam
sbb
cwde
mov
lock
and
repnz
pushf
add
or
or
jo
fs
pop
cmp
in
pop
jb
test
xchg
pop
outs
add
adc
imul
pop
adc
lods
mov
add
in
outs
nop
arpl
mov
int3
xchg
dec
push
fs
rcr
adc
push
in
pop
push
int3
sbb
cwde
adc
cwde
cmp
inc
(bad)
xchg
add
fs
test
in
adc
pop
and
or
push
das
xchg
lods
fsub
rcl
pop
jbe
inc
shl
clc
in
(bad)
jle
fmul
pop
or
cs
out
dec
cdq
pop
inc
cmp
in
adc
ins
in
mov
fadd
nop
add
leave
and
or
or
xchg
add
retf
xchg
pop
jb
or
in
and
adc
push
xor
sbb
sbb
mul
repnz
or
dec
je
inc
push
jns
fs
or
or
pop
jb
xor
mov
and
das
cmp
jne
or
mov
gs
in
xchg
cmp
jp
add
mov
adc
sbb
pop
mov
nop
or
cmp
pop
and
ins
fwait
inc
xchg
outs
adc
nop
push
pop
mov
and
xor
add
(bad)
dec
push
fs
lock
pusha
push
add
mov
jle
xchg
cmp
ins
and
mov
sub
mov
inc
mov
lahf
adc
xor
sbb
fadd
inc
lea
push
cmps
and
and
rol
xchg
js
and
sbb
aam
popa
lock
inc
outs
cmps
das
or
pop
sbb
and
push
mov
jecxz
lock
bound
dec
into
(bad)
rol
arpl
cmp
dec
add
push
add
pop
retf
push
mov
dec
mov
test
pop
ja
mov
cmp
ins
ja
imul
adc
xchg
addr16
inc
ficomp
jle
gs
sbb
or
pushw
pusha
rcl
add
mov
sub
mov
(bad)
jg
sbb
ins
and
push
aas
ins
(bad)
inc
popa
lahf
inc
stos
ins
adc
inc
push
push
inc
fsub
imul
sub
push
lds
dec
jae
inc
mov
xchg
dec
ds
push
pop
cmp
cmps
and
outs
imul
xor
dec
pop
dec
arpl
cmovp
xchg
mov
push
repnz
inc
addr16
shl
ss
iret
push
mov
bound
fs
xor
movs
ins
xchg
aaa
orps
pop
cmp
push
fimul
call
and
jp
test
xor
fisubr
mul
xchg
cmp
push
pop
dec
call
dec
jo
xlat
jb
js
mov
add
or
(bad)
repz
(bad)
mov
pusha
xor
pop
jmp
push
or
imul
sub
and
jb
gs
push
jo
pop
(bad)
adc
retf
cmp
test
or
dec
out
fisubr
sbb
jecxz
mov
(bad)
cld
js
mov
sar
dec
and
or
jae
nop
pop
pop
ret
outs
and
ss
xor
sbb
jns
jmp
sub
sbb
inc
mov
mov
mov
push
mov
sbb
jns
shr
outs
out
push
ins
dec
add
inc
mov
test
jae
loopne
inc
push
fiadd
add
xor
mov
sti
xchg
add
adc
xor
mov
dec
mov
push
sbb
ins
cmp
push
adc
outs
test
push
inc
mov
test
push
jnp
adc
mov
pop
xor
fild
ins
xchg
outs
push
pop
cmp
mov
inc
jns
lods
inc
arpl
xor
sub
ret
xchg
dec
lds
xchg
cmp
imul
pop
stos
add
cmp
je
jnp
pop
mov
dec
scas
bound
push
fwait
push
add
(bad)
pop
add
mov
test
stos
clc
sbb
out
mov
test
(bad)
xor
dec
sub
jno
cmp
adc
sub
xchg
and
adc
ss
adc
push
sub
sbb
ja
rol
xchg
xchg
mov
test
mov
dec
sbb
(bad)
shl
popa
and
jb
scas
and
dec
ret
dec
and
add
inc
adc
cvtdq2ps
fbld
cmp
sub
inc
jmp
jb
push
frstor
fist
out
xchg
das
jns
(bad)
mov
add
jle
aaa
adc
jecxz
scas
out
popa
xor
add
jnp
or
adc
jg
sub
or
mov
pusha
and
cmps
mov
or
mov
mov
lea
rep
mov
push
inc
add
add
es
add
int3
ins
rol
xchg
rol
mov
add
or
or
and
pop
add
aas
jae
xor
aad
fwait
xor
push
jne
or
popf
ret
outs
push
jo
jmp
imul
das
scas
cmp
mov
jbe
xor
jns
adc
arpl
inc
stos
inc
jne
xor
pop
arpl
(bad)
stos
test
and
es
(bad)
jbe
inc
outs
arpl
dec
xor
cmp
nop
inc
xchg
ja
out
shr
addr16
bound
ss
xchg
loopne
jg
dec
lods
stos
movs
inc
cmp
ja
sbb
inc
or
push
or
and
lds
and
loop
ret
jo
mov
push
inc
sub
ret
jbe
je
inc
mov
mov
push
or
loope
(bad)
jmp
mov
inc
lods
adc
fbstp
ret
xor
mov
inc
adc
inc
pop
arpl
sub
push
(bad)
daa
es
cmp
imul
and
repnz
pop
inc
and
inc
or
inc
xor
arpl
cmp
cwde
or
(bad)
inc
and
imul
add
es
adc
push
fwait
xor
cmps
xor
jmp
add
cmps
pop
xchg
ror
push
dec
loope
ret
cmps
add
pusha
fisttp
adc
push
inc
sbb
mov
mov
jae
test
(bad)
dec
outs
out
inc
add
bound
mov
lods
(bad)
gs
jbe
jmp
inc
popa
push
pop
das
mov
sbb
pop
bound
push
push
dec
sub
mov
lahf
pop
or
nop
xchg
pop
ficomp
adc
adc
out
pop
push
push
adc
sbb
push
xchg
inc
fist
jmp
je
pop
and
sub
sbb
push
pop
pop
pop
push
pop
or
or
cmp
jg
test
jbe
mov
pop
dec
retf
cs
pop
add
cs
sub
inc
push
(bad)
push
rol
or
dec
add
push
fwait
add
mov
push
add
add
mov
or
in
mov
pushf
int3
push
addr16
iret
retf
mov
mov
inc
and
cs
mov
and
mov
ret
or
xchg
pop
pop
dec
mov
lahf
dec
call
push
mov
outs
sub
dec
out
pop
inc
or
or
push
into
pop
push
sub
mov
push
inc
or
xor
je
sub
jl
inc
push
das
imul
jno
ja
mov
pop
out
sbb
and
daa
or
xor
aam
mov
jg
push
outs
adc
popa
adc
and
sti
jns
aad
(bad)
sub
nop
inc
add
pop
push
push
push
imul
ret
outs
pusha
loopne
sbb
mov
dec
mov
cmps
(bad)
sbb
out
sub
xlat
rcl
sar
test
loop
add
fnsave
inc
dec
div
inc
and
bound
mov
push
dec
pop
out
es
ins
and
push
ret
inc
div
sbb
or
fstp
out
fld
sub
jle
mov
push
adc
push
dec
sub
adc
push
imul
xor
cmp
ins
popf
les
bound
(bad)
mov
mov
jbe
cmp
cmp
outs
lods
aam
(bad)
sti
xor
jo
mov
or
cmps
pop
add
and
push
mov
lahf
dec
dec
add
mov
test
add
fisttp
or
inc
cmps
push
(bad)
sbb
push
ins
repz
push
outs
or
ret
pusha
add
xchg
adc
arpl
push
mov
xor
inc
fild
and
or
mov
call
cs
sbb
and
and
jae
xor
xor
xchg
shl
push
pop
punpckhwd
(bad)
mov
mov
fisubr
jo
imul
or
inc
aas
mov
adc
test
push
mov
in
ds
push
adc
mov
dec
and
cwde
push
push
sub
dec
mov
fnstsw
dec
cmps
jb
je
push
push
xor
jb
daa
xchg
or
inc
inc
mov
ja
dec
fidivr
retf
xchg
sbb
stos
add
fmul
or
pop
movs
adc
or
xchg
fcom
jg
aaa
movs
ficom
sub
pop
xor
inc
inc
adc
and
imul
sub
jns
cmp
int
mov
adc
ds
(bad)
ss
push
pop
cmp
cmps
(bad)
push
repnz
xlat
xor
push
test
imul
pop
pop
xor
jne
pop
xchg
adc
jecxz
aad
popa
daa
and
movs
or
or
jg
add
dec
ds
fcmovbe
mov
arpl
sbb
not
or
inc
scas
iret
ret
cwde
dec
xchg
out
push
les
mov
pop
and
mov
push
sub
sbb
fcomip
push
mov
push
lahf
inc
push
add
xchg
scas
rol
pusha
push
dec
shl
cmps
pop
and
add
lahf
or
sub
or
inc
mov
stos
(bad)
cmp
sub
icebp
xor
add
ja
pop
sub
jbe
ret
pop
add
dec
push
xchg
fcom
out
aas
xchg
push
arpl
adc
sub
push
ins
dec
sbb
ret
scas
sub
xsaves
mov
cmps
dec
iret
inc
fimul
and
dec
adc
inc
lahf
push
inc
arpl
sbb
inc
lahf
pop
cwde
jl
push
sahf
adc
and
push
mov
ret
fimul
outs
and
or
sub
scas
push
inc
rcr
and
xchg
pop
fisttp
(bad)
or
das
sbb
xchg
push
push
fucomip
pop
xor
jnp
adc
jne
outs
jbe
adc
add
cmp
inc
popa
mov
test
fst
jnp
add
push
add
mov
add
jl
fsub
mov
test
aaa
cwde
adc
mov
ja
test
jb
ja
lods
inc
sbb
dec
loope
mov
(bad)
movlps
xlat
addr16
cmp
xor
mov
sub
xor
lods
clc
dec
leave
xor
addr16
shr
and
cmp
das
bound
int
jg
rol
or
and
and
xchg
sub
inc
dec
sub
mov
outs
push
cs
adc
mov
mov
outs
sti
cmp
xor
loopne
pop
(bad)
retf
test
test
xor
and
dec
xchg
inc
or
fild
jecxz
fmul
push
into
scas
data16
movs
adc
and
pop
mov
es
stos
pop
push
xor
mov
add
xchg
pop
cmp
sub
das
scas
inc
and
(bad)
out
mov
sbb
stos
dec
fimul
jecxz
push
ret
jne
movs
sub
ror
mov
daa
mov
push
jecxz
sub
sub
sub
pushf
jmp
jne
dec
stos
das
scas
add
iret
fistp
or
div
cdq
mov
and
add
add
(bad)
(bad)
iret
push
pop
inc
shl
sub
hlt
ss
xor
dec
inc
pop
sbb
test
ror
scas
inc
ins
cmp
daa
xor
push
mov
daa
fwait
inc
movs
loopne
sub
cs
dec
sbb
xlat
or
push
ret
mov
add
fs
pusha
mov
sub
cs
fdiv
pusha
cmp
aam
push
sti
rcl
gs
test
dec
push
pop
sub
cs
or
inc
ret
es
jo
and
jnp
and
ror
outs
inc
ret
inc
sub
push
retf
and
stos
sbb
aas
aam
push
loopne
xchg
fisub
and
or
mov
xchg
les
sub
loopne
adc
mov
pusha
js
imul
adc
cmp
sub
ins
stos
into
les
out
jae
cwde
jl
push
outs
arpl
arpl
mov
(bad)
rol
mov
xlat
les
mov
movs
jecxz
mov
mov
aaa
or
rcl
dec
(bad)
push
jae
push
mov
dec
(bad)
xor
xor
(bad)
push
xor
add
test
shr
xchg
lods
xchg
add
pop
mov
push
jae
pop
gs
test
pop
je
or
dec
dec
xchg
cs
pop
fwait
jbe
xor
fs
fmul
pop
or
pusha
push
inc
push
(bad)
(bad)
xor
jecxz
xor
jne
out
xor
adc
adc
sbb
scas
mov
xchg
in
mov
mov
cmp
and
sbb
daa
add
add
ja
popa
xor
push
push
mov
sbb
mov
daa
sub
add
sbb
daa
fist
pop
and
push
test
and
add
daa
mov
cmps
dec
sbb
or
push
lods
add
dec
add
cs
das
aaa
imul
dec
pop
daa
inc
shl
stos
fwait
ret
(bad)
and
dec
(bad)
sbb
mov
outs
scas
sbb
xchg
jnp
push
mov
sbb
xchg
push
mov
push
call
or
inc
xrelease
bound
cmove
lods
leave
rcr
jp
sbb
and
and
dec
dec
outs
and
rcl
jecxz
dec
stos
mov
repnz
sub
ror
adc
and
test
loop
xchg
les
pop
cwde
lods
pop
dec
xor
outs
rcr
inc
test
mov
dec
mov
das
je
pusha
adc
pop
imul
ins
out
add
adc
or
sub
sub
inc
jp
cmp
(bad)
call
add
xchg
call
sti
inc
mov
inc
and
imul
sub
ja
pop
or
mov
in
inc
(bad)
jg
xor
xlat
add
movs
(bad)
imul
(bad)
adc
inc
pop
arpl
sbb
imul
fs
ret
aas
push
add
and
xor
or
rol
lods
sub
and
test
cs
jo
adc
(bad)
daa
lahf
sti
mov
sub
jbe
popa
xchg
xor
out
push
mov
and
shl
sub
ja
mov
xchg
sar
xchg
or
add
mov
jo
adc
adc
mov
mov
pop
jecxz
adc
adc
add
mov
cs
data16
and
or
inc
jmp
sub
test
ret
add
fidiv
xor
pop
adc
enter
jnp
cs
xor
inc
pop
xchg
(bad)
out
xor
dec
sbb
jp
sub
pop
lods
or
(bad)
xor
in
adc
pop
jmp
push
add
jecxz
inc
aaa
dec
sbb
push
daa
test
push
movs
jecxz
push
(bad)
push
mov
xor
inc
xchg
mov
lahf
and
adc
out
ret
movhps
pop
out
sub
hlt
push
cmp
lods
sbb
sub
(bad)
(bad)
out
(bad)
mov
les
mov
mov
add
test
(bad)
xchg
aaa
cmps
cmp
pop
mov
adc
cmps
pop
and
jmp
pop
das
jmp
nop
scas
fs
dec
push
push
pop
inc
ror
popa
pop
or
pop
xchg
sbb
and
mov
test
pop
imul
je
push
sub
ret
push
mov
jae
jbe
inc
push
das
xchg
add
xchg
mov
movs
mov
lods
pop
or
pop
and
aaa
xor
and
add
pusha
or
ror
push
popa
and
mov
aas
ins
and
adc
dec
aas
out
mov
pop
bts
dec
xor
xchg
leave
or
push
cmp
push
and
jnp
cwde
or
imul
fisttp
push
xlat
inc
mov
adc
repz
push
jb
outs
lods
xor
xchg
sbb
dec
fwait
scas
pop
ficom
jno
add
push
and
rcr
mov
push
mov
adc
pop
sub
mov
arpl
add
jg
ja
add
inc
outs
dec
pop
push
stos
daa
jbe
ret
mov
mov
dec
sbb
outs
pusha
adc
rol
push
outs
pop
out
arpl
dec
popa
dec
cmp
and
push
xor
out
sbb
pop
mov
(bad)
mov
or
sbb
xor
call
inc
call
pop
sbb
sub
dec
sbb
fild
mov
retf
xchg
aaa
sub
jo
xor
mov
ret
and
inc
inc
mov
push
add
das
jmp
out
and
or
mov
pop
sar
mov
outs
jg
inc
pop
mov
cmp
cmp
sub
es
inc
sbb
inc
and
ss
rcr
or
xor
xchg
gs
push
xor
xor
push
outs
dec
stos
out
add
(bad)
(bad)
(bad)
jmp
xchg
jecxz
stos
aaa
inc
xchg
mov
pop
push
add
mov
ins
cmp
jg
out
or
dec
cwde
adc
movs
pop
outs
test
scas
loop
add
push
(bad)
unpcklps
test
scas
inc
inc
arpl
inc
fucomip
xchg
fcom
inc
bound
pop
es
inc
bound
test
inc
js
bound
sar
mov
pop
add
xor
jbe
cmps
cmps
bound
adc
add
or
inc
sub
mov
dec
loope
inc
das
sub
ret
lahf
dec
ins
dec
xor
xchg
sub
fidiv
add
es
popa
adc
ss
push
(bad)
xlat
push
out
dec
imul
mov
mov
push
xchg
sub
xor
add
test
sub
es
outs
lods
and
cs
add
add
outs
mov
sbb
into
pop
mov
push
imul
jne
cmp
sbb
pop
add
push
jo
nop
out
add
dec
out
push
rol
sar
retf
(bad)
(bad)
jmp
mov
adc
or
fcomp
jb
bound
mov
es
push
pop
iret
test
push
scas
add
push
mov
push
test
mov
daa
cdq
push
push
sbb
mov
inc
je
jg
jo
(bad)
push
xchg
xchg
adc
aas
inc
xchg
pop
add
and
xchg
mov
fdiv
imul
or
test
retf
mov
xchg
push
jmp
jo
into
mov
or
sar
out
push
cmp
cmp
dec
outs
push
ficom
shr
shl
in
data16
dec
xchg
push
sbb
lods
mov
mov
push
adc
das
mov
and
sub
push
stos
pop
test
mov
mov
ret
aaa
dec
cmp
in
inc
push
cmp
mov
fucomp
(bad)
jb
(bad)
add
(bad)
imul
adc
mov
sbb
push
iret
xchg
mov
imul
(bad)
lods
loop
xchg
inc
and
jnp
push
cmps
aad
pusha
xchg
xchg
daa
shl
cmps
xor
mov
adc
out
mov
add
push
inc
mov
and
je
dec
mov
scas
jno
cmp
lods
mov
add
dec
pop
jecxz
push
stos
xchg
outs
ins
shl
push
or
inc
cmp
mov
jp
bound
jb
pop
aad
cmps
dec
push
inc
js
mov
mov
jbe
out
and
(bad)
ficomp
adc
jo
sub
aad
xchg
xor
xor
adc
push
xor
test
dec
cmp
ss
ret
mov
into
sub
das
xor
ja
iret
dec
xor
ss
outs
jbe
dec
xor
cmp
jbe
(bad)
push
xor
adc
xor
xchg
dec
xor
cwde
(bad)
mov
jg
cmp
aaa
xor
aaa
xor
dec
or
lods
xchg
pop
xchg
cmp
adc
sbb
dec
imul
repnz
popa
(bad)
xor
adc
(bad)
and
jg
sub
mov
retf
or
inc
jno
inc
cmp
dec
rcr
jnp
cmps
inc
enter
adc
xor
mov
fadd
inc
xor
jge
mov
adc
jg
xchg
inc
mov
add
cmp
scas
inc
icebp
sar
inc
sbb
repz
xchg
cwde
dec
mov
enter
jmp
pop
xchg
adc
mov
adc
push
xor
sbb
pop
push
inc
xor
jbe
cmp
repnz
neg
or
popa
bound
inc
ja
sub
pop
inc
nop
dec
pop
mov
and
ss
mov
add
mov
xchg
push
shr
pop
stos
lods
or
sbb
add
ins
stos
xchg
push
retf
or
sbb
adc
cwde
or
and
shr
push
add
nop
and
mov
sub
sbb
inc
push
mov
es
adc
bound
aas
imul
shl
mov
jle
stos
sbb
xchg
jecxz
add
jno
aaa
sbb
dec
add
sar
mov
push
xchg
aaa
sub
rcr
js
jnp
add
sbb
outs
push
inc
add
pop
mov
xchg
lea
push
fadd
add
xchg
sbb
dec
dec
pop
xchg
adc
dec
movs
das
cmp
sbb
inc
pop
cmp
js
popf
xor
cwde
mov
xlat
lods
stos
or
inc
push
jecxz
ss
and
xchg
es
push
xor
mov
cmps
push
cmp
adc
mov
dec
cmps
and
rcr
adc
and
adc
add
ret
pop
sub
inc
push
push
sar
sub
cs
sbb
pop
jo
cmp
and
adc
cmps
pop
lods
loopne
test
stos
sub
push
mov
lods
or
out
(bad)
cmp
sub
cs
cmp
cmps
jmp
push
lods
popa
mov
rcr
daa
xor
je
shr
retf
arpl
jae
fcom
add
inc
cmovno
sbb
inc
push
sbb
dec
dec
dec
sbb
dec
push
push
fs
inc
push
push
push
push
sbb
bound
push
push
fild
test
pop
inc
dec
psrlw
jo
push
ja
push
dec
mov
and
es
jb
xor
gs
xor
xor
cvttps2pi
xlat
push
inc
ins
pusha
enter
lods
fadd
gs
and
dec
movs
(bad)
mov
pop
push
xchg
dec
daa
inc
and
enter
pop
and
fist
iret
pop
xchg
js
adc
adc
test
xor
adc
scas
cmp
mov
adc
dec
add
in
cmovl
nop
outs
cwde
outs
add
dec
ds
add
push
(bad)
xchg
xchg
sbb
and
and
add
jbe
pop
fmul
xchg
mov
adc
jb
or
and
add
add
ret
mov
pop
mov
xchg
ret
mov
je
push
sysenter
addr16
push
pusha
(bad)
(bad)
(bad)
jmp
push
shr
cmp
mov
inc
mov
pmullw
mov
hlt
jmp
loop
fiadd
inc
pop
test
mov
push
loope
and
pop
fiadd
or
add
inc
adc
adc
inc
aaa
(bad)
inc
sbb
sub
pop
inc
cmps
xchg
sar
(bad)
aas
sbb
mov
sbb
jp
inc
mov
push
push
xor
sahf
outs
setnp
cld
inc
jne
ins
fs
or
adc
adc
jg
bound
inc
fisttp
gs
jno
popf
sbb
xor
jae
cli
mov
pop
nop
jae
inc
and
scas
cs
(bad)
out
cs
jae
outs
pop
mov
scas
inc
mov
pop
out
inc
nop
jne
mov
imul
xchg
(bad)
sub
ins
sub
jno
pop
ss
movs
add
out
pop
int3
fisubr
stos
mov
mov
jg
sbb
(bad)
mov
add
add
fimul
and
mov
add
and
sub
mov
inc
push
out
jmp
jbe
js
push
xor
repnz
aas
xchg
das
cmp
xor
inc
mov
dec
imul
daa
outs
sub
(bad)
dec
fbstp
out
shl
stos
pop
push
(bad)
xchg
jecxz
nop
mov
ds
pop
test
ret
test
jnp
test
(bad)
inc
mov
sbb
aas
sbb
and
cmps
js
inc
test
mov
adc
lock
add
add
imul
stos
test
inc
daa
xor
test
imul
or
aaa
push
or
arpl
ret
sub
inc
sahf
push
mov
inc
dec
mov
push
jg
jno
cmp
bound
or
pop
xchg
xor
scas
xor
mov
pop
mov
or
addr16
mov
ror
and
pop
aam
push
cmp
xor
mov
popa
repnz
add
adc
lds
ficomp
(bad)
(bad)
(bad)
fisttp
push
pop
xor
dec
scas
push
mov
xor
repz
lods
adc
cmp
jbe
xchg
jecxz
inc
sbb
cmp
jbe
jecxz
inc
test
arpl
jnp
adc
inc
push
sub
and
rol
retf
cmc
jne
cmps
mov
pusha
scas
add
(bad)
in
dec
push
push
cmps
xor
inc
xchg
adc
imul
in
aam
(bad)
call
or
adc
sti
repnz
(bad)
mov
xor
nop
and
push
xchg
mov
jmp
loope
call
(bad)
adc
inc
jo
call
xchg
(bad)
or
dec
push
cmp
mov
fidiv
jns
sub
pop
inc
inc
fisubr
or
dec
add
or
test
outs
cdq
adc
dec
mov
jb
add
ret
ins
(bad)
dec
and
xor
shr
arpl
xor
xsaves
outs
es
imul
mov
pop
xchg
outs
test
int3
aam
arpl
dec
ja
popa
sbb
inc
xchg
sbb
test
adc
adc
dec
inc
pusha
or
repnz
movs
or
adc
mov
imul
repnz
pop
sbb
popf
sbb
iret
adc
push
rcl
cwde
or
mov
test
rcl
push
mov
mov
rcl
sub
jae
jo
adc
sub
pop
test
xor
pop
push
out
adc
xor
xor
mov
jnp
mov
pop
xchg
mov
call
rcl
push
cmps
mov
into
rcr
adc
push
sbb
and
push
push
mov
out
scas
cmps
lds
(bad)
scas
add
(bad)
dec
pop
mov
inc
stos
add
mov
mov
xor
xchg
push
jp
mov
or
sbb
out
daa
mov
adc
cmp
sbb
setae
push
or
xchg
stos
mov
(bad)
or
or
pop
sbb
xchg
(bad)
jo
inc
and
aas
iret
sbb
call
jo
xchg
dec
mov
repnz
popf
icebp
shl
fs
lds
push
push
xchg
aaa
add
inc
mov
sub
(bad)
call
inc
or
inc
fild
cmp
fild
dec
cwde
scas
fidiv
ret
enter
or
fnstcw
mov
pusha
add
je
mov
cmp
push
push
xor
daa
mov
test
out
(bad)
(bad)
(bad)
aas
adc
and
inc
mov
movntq
(bad)
xchg
xor
mov
je
icebp
and
jae
adc
movs
sbb
mov
push
xchg
xchg
push
test
add
dec
pusha
pop
(bad)
scas
pop
add
push
test
mov
push
jnp
add
xchg
inc
adc
and
daa
push
mov
ret
pop
pop
xor
xor
data16
mov
movs
(bad)
(bad)
(bad)
inc
push
jnp
ficomp
sub
mov
inc
cmps
fimul
into
sbb
enter
fistp
xchg
sbb
scas
push
add
aam
inc
daa
pop
push
imul
mov
aas
or
mov
out
jno
and
arpl
shr
dec
pop
mov
inc
sahf
ret
ret
mov
pop
sub
xchg
mov
arpl
sub
add
push
outs
push
jo
fistp
xor
inc
fdivr
cmps
and
je
fmul
iret
stos
adc
ds
sub
mov
dec
daa
fsub
pop
xchg
mov
dec
sub
fmul
mov
push
sbb
pop
(bad)
(bad)
jmp
push
idiv
cdq
out
out
mov
mov
add
cmc
sub
push
fwait
in
jo
sti
dec
xchg
add
adc
add
cdq
add
icebp
imul
or
shr
sbb
push
and
inc
aam
and
fwait
or
shl
xor
xchg
ss
sub
add
inc
add
inc
dec
jmp
sbb
and
xchg
rol
push
lahf
(bad)
and
data16
mov
sbb
std
sti
aad
and
jl
or
xor
les
jmp
test
sbb
icebp
out
dec
dec
sub
pop
daa
add
sbb
or
ins
push
sub
sti
xor
das
fwait
ret
stc
adc
add
dec
and
out
fist
adc
call
add
mov
shl
inc
imul
pop
add
jmp
adc
adc
mov
mov
pop
xchg
xor
add
sbb
popa
lods
jae
jmp
fld
jae
ja
adc
add
add
icebp
pop
add
sahf
sub
das
dec
dec
push
add
scas
or
js
add
add
add
adc
push
adc
jno
jb
add
repz
daa
aam
sahf
push
pop
fwait
and
inc
loop
and
arpl
and
stos
and
pop
or
dec
ins
or
and
mov
jo
add
xor
cwde
cld
getsec
out
mov
push
stc
push
ret
mov
dec
into
add
imul
imul
ret
inc
add
aad
push
ficomp
add
sahf
inc
add
leave
jg
adc
shl
adc
and
and
fcomip
mov
mov
and
or
mov
and
mov
aam
pop
stos
push
jmp
popa
jo
add
pop
push
adc
add
add
xchg
push
mov
sbb
mov
je
push
dec
xchg
xchg
add
out
add
ja
sbb
mov
nop
adc
pop
cs
sub
popa
cmp
jno
and
or
xor
into
add
mov
adc
add
or
mov
mov
std
out
daa
movaps
add
daa
or
cmps
retf
add
es
push
inc
sub
out
adc
or
sbb
ins
nop
pop
xor
popa
push
cmp
cs
nop
sbb
in
push
sub
mov
and
mov
pxor
mov
rcl
jo
jmp
cwde
mov
sub
mov
test
pop
ja
or
outs
daa
ss
or
mov
cmp
fs
(bad)
fmul
lock
clts
aas
sub
stos
daa
pop
xor
adc
adc
add
xchg
add
loop
inc
mov
add
leave
aas
cmp
cmp
test
iret
add
add
sbb
daa
push
test
fst
add
aas
xchg
pop
add
fidivr
fist
jbe
and
js
adc
and
mov
cmp
outs
or
inc
mov
adc
mov
pop
add
mov
add
inc
jecxz
pop
add
cmp
lea
add
dec
and
inc
pop
mov
stc
push
push
jg
jb
xor
add
aas
inc
dec
inc
inc
sub
inc
dec
dec
shl
mov
ja
xor
dec
mov
and
js
adc
cli
mov
call
sbb
test
adc
inc
xor
pop
lods
cmps
fiadd
or
jmp
sbb
and
aas
add
int
jge
jo
mov
outs
push
add
stos
jo
repz
fsubrp
xor
(bad)
xchg
adc
add
inc
inc
dec
sub
adc
iret
imul
push
scas
and
add
mov
add
sar
clc
inc
push
add
cmp
and
push
sbb
mov
add
cmp
leave
das
push
gs
fs
mov
inc
xor
loop
pop
fild
mov
sbb
sbb
test
lahf
mov
cs
(bad)
mov
add
add
or
jp
pop
pop
add
shl
pop
pop
jbe
or
add
(bad)
jge
lds
dec
jne
imul
stc
ret
dec
or
mov
inc
mov
mov
sbb
test
arpl
cmp
or
add
add
pusha
or
cmp
adc
leave
adc
ret
inc
sub
add
push
mov
enter
pop
push
or
and
in
mov
fs
mov
mov
xchg
xor
push
retf
inc
inc
(bad)
xor
or
sbb
mov
in
pop
cwde
stos
inc
addr16
fcom
jg
std
jnp
add
dec
adc
cmp
loop
mov
add
and
repnz
or
sub
add
ret
fwait
mov
ror
add
xor
add
or
jne
adc
sbb
push
push
add
or
mov
loopne
nop
call
imul
or
add
adc
imul
xor
mov
add
mov
adc
xchg
jno
jp
and
or
dec
nop
push
add
mov
mov
stc
iret
add
mov
xor
adc
sbb
imul
hlt
and
popa
mov
or
mov
pop
push
pop
adc
sbb
or
xchg
inc
sahf
out
add
push
pop
sub
loop
(bad)
and
sbb
mov
pop
or
or
sub
mov
cmp
xchg
pop
mov
adc
push
mov
mov
adc
aas
mov
fdivr
inc
aas
xor
or
enter
or
add
hlt
pop
sub
adc
dec
add
fist
add
pusha
or
mov
jnp
pop
xor
fist
or
addps
mov
pop
aas
and
add
pop
je
xchg
loop
jno
sub
or
jbe
or
adc
or
or
or
das
mov
pop
pop
retf
inc
xchg
scas
push
mov
nop
retf
adc
mov
ret
sbb
mov
imul
es
cmp
xchg
popa
and
inc
aam
mov
xor
repz
add
add
mov
(bad)
out
fiadd
rol
and
sbb
pop
xor
stc
mov
ret
or
add
sbb
xor
sbb
ins
or
bound
sbb
inc
shl
jmp
mov
pop
adc
push
push
push
shr
aaa
xchg
cdq
or
pop
dec
enter
rcl
adc
cmp
mov
inc
or
or
adc
cmps
fist
mov
add
sub
and
or
or
test
sbb
cmp
movs
js
or
aad
xor
aas
mov
int
cmp
xor
mov
or
and
add
jo
adc
jo
or
inc
test
call
mov
jo
push
arpl
mov
jno
add
cmp
fmul
push
dec
adc
or
push
jns
pop
jg
add
iret
add
sbb
add
add
add
add
shr
adc
enter
ds
enter
add
ror
or
sbb
xchg
push
ins
or
mov
inc
dec
inc
cmp
popa
xchg
fnstenv
xor
(bad)
(bad)
push
adc
sbb
sub
pop
or
push
sbb
or
sbb
and
pop
dec
adc
adc
inc
add
add
(bad)
(bad)
jmp
test
imul
stos
adc
push
imul
inc
ins
mov
outs
mov
outs
nop
add
pop
jno
or
or
or
or
(bad)
push
jbe
or
adc
adc
sbb
adc
pop
das
lahf
sar
(bad)
jmp
mov
jge
adc
adc
adc
sbb
sbb
cmp
jmp
enter
cmp
popa
jno
das
ss
mov
call
xchg
jle
or
push
and
sbb
sbb
sub
jmp
adc
inc
mov
xor
sbb
sbb
cmps
sbb
fwait
pop
xchg
stos
cs
xor
and
rcl
xchg
mov
imul
(bad)
(bad)
call
jecxz
nop
pushf
daa
mov
sub
mov
lods
mov
(bad)
fdivr
stos
mov
(bad)
(bad)
(bad)
(bad)
fist
in
mov
xor
mov
xlat
in
mov
pop
fucomp
push
mov
dec
mov
cmp
aaa
mov
inc
ret
iret
xlat
push
jmp
pop
rcr
cmp
(bad)
(bad)
call
popa
repnz
sbb
ins
inc
jo
cmp
push
and
xor
sbb
and
sub
(bad)
(bad)
(bad)
call
dec
jne
sbb
sub
ss
inc
sub
push
xor
pop
dec
push
jne
cmp
(bad)
(bad)
push
push
xor
je
dec
test
popa
inc
sub
sub
cmp
sub
mov
js
pop
test
push
sbb
pop
lahf
push
cs
sub
push
dec
xchg
inc
das
pusha
daa
pop
mov
push
cwde
dec
sub
data16
(bad)
(bad)
jmp
inc
ins
cmp
inc
rcl
cmp
pop
je
arpl
imul
pop
mov
(bad)
(bad)
(bad)
inc
xor
xlat
push
sbb
pop
outs
retf
rcr
lds
(bad)
gs
mov
int
sar
(bad)
(bad)
dec
(bad)
cmps
cmp
jbe
imul
dec
cwde
aaa
jb
push
push
dec
outs
fcom
int3
dec
ins
(bad)
(bad)
(bad)
call
push
pusha
mov
imul
arpl
dec
jno
push
ins
rcl
retf
push
ins
retf
push
jno
push
(bad)
(bad)
(bad)
jmp
push
ja
pop
outs
int3
push
push
xchg
ds
pop
jno
pop
outs
int3
push
jo
pop
bound
jb
(bad)
(bad)
(bad)
call
ret
push
jge
bound
pop
jbe
pop
jge
bndldx
shl
cmps
dec
sbb
xchg
outs
jle
inc
call
data16
pop
sbb
aad
xchg
jo
fnsave
inc
cmp
inc
sbb
push
je
(bad)
(bad)
call
pop
jbe
pop
jns
pusha
adc
and
dec
or
aas
dec
push
cmp
sub
(bad)
aas
cmp
js
sbb
jle
repnz
xchg
dec
ss
loope
faddp
sub
or
mov
rol
jmp
pop
enter
sbb
(bad)
out
fwait
cmp
loopne
fldenv
mov
inc
sub
jae
ud0
(bad)
call
int3
xchg
inc
mov
xor
pushf
mov
addr16
xchg
or
aam
jns
xchg
call
test
inc
push
sub
inc
lea
popa
ror
(bad)
(bad)
(bad)
out
ja
mov
adc
adc
pop
rol
push
mov
cmp
out
xchg
push
push
movs
pop
(bad)
(bad)
(bad)
out
stc
and
pop
mov
jmp
gs
test
(bad)
mov
inc
inc
call
dec
pushf
cs
or
inc
mov
xlat
pusha
mov
aas
loop
inc
arpl
popf
and
(bad)
imul
mov
and
or
dec
or
sub
call
(bad)
push
jo
lds
mov
adc
dec
(bad)
fild
pop
mov
(bad)
(bad)
inc
sub
xor
xchg
jmp
rol
les
push
cmp
cmp
inc
inc
(bad)
dec
xor
test
(bad)
call
and
push
mov
(bad)
hlt
xor
inc
pop
les
add
and
add
test
(bad)
jmp
inc
or
xor
mov
sub
xchg
daa
popf
cwde
push
dec
and
xor
(bad)
(bad)
push
cwde
and
daa
add
pusha
push
or
sub
or
nop
add
movs
mov
xor
(bad)
(bad)
jmp
int3
mov
sub
and
leave
xor
mov
lea
into
adc
mov
ins
mov
push
inc
sar
imul
inc
push
push
inc
inc
xchg
movs
inc
dec
cmp
inc
push
cwde
sbb
mov
movs
lock
dec
xor
cmp
fcmovne
add
inc
(bad)
mov
and
xchg
adc
sub
lds
inc
dec
and
xor
(bad)
(bad)
inc
and
es
into
jl
(bad)
aaa
(bad)
cmp
rcl
pop
lods
rol
imul
adc
ror
(bad)
(bad)
push
retf
xor
add
cmp
or
mov
xor
xor
js
lea
jmp
fwait
push
inc
(bad)
(bad)
push
lds
ret
xor
pusha
or
loop
ror
inc
adc
dec
mov
pushf
sub
add
sbb
les
sub
inc
add
dec
xor
cwde
(bad)
call
and
xor
mov
inc
add
mov
je
mov
or
(bad)
(bad)
(bad)
call
inc
arpl
or
mov
add
xchg
mov
into
cmp
xor
dec
loopne
or
dec
aas
clc
leave
sahf
sbb
lock
(bad)
(bad)
push
or
lea
loopne
push
or
or
sub
add
stc
sbb
and
fcom
(bad)
(bad)
(bad)
jmp
add
add
jmp
or
fadd
popf
dec
les
icebp
(bad)
(bad)
push
aam
cmp
and
sub
or
mov
repz
sub
cmp
imul
mov
or
push
mov
call
push
or
(bad)
(bad)
mov
icebp
xor
rdtsc
mov
push
test
add
or
add
(bad)
(bad)
aas
xor
or
xor
and
aaa
cdq
dec
add
fisubr
jp
rol
(bad)
std
(bad)
call
sbb
pop
adc
or
and
dec
cmp
and
mov
and
(bad)
(bad)
inc
jbe
adc
xchg
je
out
imul
enter
scas
cwde
repnz
xor
inc
mov
and
and
enter
aad
cmc
or
xchg
inc
in
xor
xchg
js
ss
nop
pop
cmp
and
js
ret
pop
gs
arpl
sub
test
mov
add
xor
(bad)
jmp
test
fadd
lods
cmps
lods
and
(bad)
xor
add
div
inc
(bad)
(bad)
mov
ja
push
test
or
rcl
jo
cmp
je
outs
dec
and
popf
jo
aaa
push
mov
push
inc
add
sub
pusha
loop
test
push
in
das
cld
xchg
dec
inc
add
mov
jg
pop
xchg
dec
rol
sahf
adc
outs
sub
cwde
rol
mov
cli
cmp
(bad)
or
test
or
xor
(bad)
(bad)
(bad)
sti
sbb
sub
inc
fs
push
sub
push
push
and
fst
sar
fcom
or
enter
jg
add
js
sub
(bad)
(bad)
(bad)
inc
paddusb
sbb
call
add
int3
inc
pop
or
inc
cmp
adc
(bad)
jmp
pop
xchg
pop
jl
inc
xlat
adc
xor
or
aas
clc
icebp
pop
add
sbb
sbb
and
(bad)
jg
call
pop
cld
push
sub
push
movs
psrlw
sub
ss
and
and
add
(bad)
aas
cld
pop
inc
rol
push
sub
das
and
les
or
jmp
repnz
adc
inc
adc
push
mov
add
and
jnp
inc
push
and
jne
sbb
rol
push
cmp
lods
mov
push
cdq
pop
xor
xor
in
adc
add
and
ds
aas
mov
ret
mov
cdq
nop
adc
je
js
mov
aam
sbb
test
or
push
stc
mov
add
stos
test
shl
pop
test
inc
pop
out
sbb
sbb
or
inc
push
and
shr
mov
add
inc
add
ret
movs
inc
movs
and
outs
add
dec
adc
add
add
add
cmp
or
aam
ja
and
sub
cs
mov
sub
add
push
jo
lock
add
cmp
sub
jmp
jecxz
pusha
add
jmp
pusha
pop
pop
push
push
push
adc
adc
or
pop
and
xbegin
outs
sbb
sbb
push
ja
js
sub
cs
(bad)
dec
imul
mov
add
pop
aaa
(bad)
(bad)
(bad)
(bad)
cmp
mov
or
jne
xchg
push
pop
pop
sbb
pusha
js
inc
dec
push
or
xor
xor
inc
push
and
inc
adc
xor
jbe
out
ss
add
add
lea
(bad)
push
imul
jp
adc
or
jb
xchg
dec
inc
pop
adc
sbb
ins
lea
push
add
jo
(bad)
(bad)
call
outs
mov
jne
or
or
or
or
xchg
adc
adc
pop
(bad)
(bad)
call
adc
ret
xor
sbb
push
pop
push
cld
(bad)
sti
jg
adc
mov
sbb
sbb
call
and
push
xchg
xchg
jle
pop
sahf
mov
mov
call
std
call
sub
xor
xchg
xchg
test
(bad)
(bad)
jmp
cdq
lods
and
shr
xchg
mov
mov
sub
cmp
cdq
inc
fwait
cmps
aas
jge
(bad)
(bad)
inc
test
cmp
(bad)
inc
rcr
dec
int3
fild
dec
mov
das
lods
mov
ret
push
ss
mov
(bad)
cmp
ds
retf
pop
jecxz
(bad)
pop
add
push
pop
xor
mov
sbb
cmp
(bad)
(bad)
inc
dec
inc
pop
sub
gs
and
popf
imul
and
and
mov
dec
(bad)
(bad)
(bad)
call
je
jae
cmp
imul
pop
mov
jge
je
ret
push
(bad)
(bad)
(bad)
jmp
push
ins
int
imul
popa
int
jne
arpl
push
jne
push
rcl
into
push
imul
(bad)
scas
call
aad
test
je
int3
retf
enter
addr16
(bad)
(bad)
dec
dec
imul
data16
dec
ins
fisttp
(bad)
dec
addr16
dec
imul
adc
push
push
outs
xlat
push
imul
arpl
clc
jg
fstp
jno
pop
je
pop
imul
jo
pop
(bad)
std
das
icebp
into
pop
jne
aad
ja
pop
jge
lods
popa
jno
pop
jnp
pop
cld
das
icebp
arpl
gs
(bad)
popa
adc
xchg
ins
fdiv
paddd
fnsave
loop
ror
iret
dec
push
dec
push
imul
jno
push
js
dec
(bad)
aad
jl
popa
push
lea
jb
(bad)
push
fsubr
fnstenv
inc
and
(bad)
(bad)
(bad)
inc
inc
pop
cmp
jae
dec
mov
test
mov
pop
mov
(bad)
dec
leave
enter
lods
lods
stos
(bad)
fcompp
fcomp
jmp
sub
mov
(bad)
inc
dec
xchg
xchg
and
dec
mov
lds
mov
inc
or
inc
mov
popa
into
sbb
sbb
pop
sbb
adc
push
es
or
int3
push
cmp
pushf
hlt
loopne
movs
dec
xchg
loopne
cdq
sub
addr16
sbb
xor
pop
mov
inc
xor
xchg
and
add
sbb
lods
inc
or
setae
call
loopne
jb
inc
mov
scas
push
or
inc
jo
mov
jmp
(bad)
push
aad
addr16
fistp
js
in
and
adc
scas
dec
xchg
data16
(bad)
(bad)
(bad)
(bad)
jg
mov
xchg
ror
daa
shr
dec
inc
mov
(bad)
std
fild
jmp
inc
(bad)
(bad)
(bad)
(bad)
call
jmp
cmp
stc
adc
and
dec
outs
inc
fadd
xor
out
adc
cdq
cs
(bad)
inc
mov
call
push
(bad)
push
out
repz
mov
inc
cmps
dec
sbb
dec
test
dec
out
add
(bad)
dec
repz
mov
call
push
frstor
jl
add
and
xor
push
xlat
jge
push
add
fistp
or
fst
aas
outs
inc
mov
lds
pusha
dec
pop
popa
jg
add
(bad)
inc
or
jae
adc
gs
and
jno
sbb
push
push
rol
add
(bad)
(bad)
mov
std
or
dec
inc
and
ds
xchg
inc
or
xchg
js
adc
(bad)
call
stos
mov
inc
test
lods
jecxz
cmp
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
xor
fs
rol
push
in
add
and
sbb
or
(bad)
(bad)
jmp
sub
mov
(bad)
cmp
sub
inc
add
or
mov
inc
add
(bad)
(bad)
(bad)
inc
pop
sbb
jmp
add
jmp
add
dec
pop
inc
clc
in
xchg
(bad)
(bad)
call
sbb
sbb
mov
inc
mov
nop
out
xlat
test
in
test
mov
mov
dec
and
inc
and
or
jb
fiadd
and
inc
and
test
nop
or
adc
(bad)
(bad)
(bad)
jmp
aas
adc
jecxz
sbb
sbb
(bad)
sbb
loope
mov
cmps
fsubr
jge
popa
inc
add
mov
mov
inc
add
dec
cmp
pop
xor
and
push
rol
(bad)
(bad)
(bad)
jmp
mov
adc
add
adc
inc
sti
cmp
inc
mov
(bad)
(bad)
jmp
mov
push
cld
loopne
adc
adc
cmps
nop
sub
rol
ss
mov
add
(bad)
(bad)
(bad)
fbld
mov
dec
mov
retf
add
sub
and
cmp
push
(bad)
push
ror
xor
lea
popa
xor
js
(bad)
(bad)
dec
test
dec
cld
call
inc
mov
mov
fist
jp
ror
sahf
nop
jecxz
sub
dec
mov
jno
xor
dec
sub
and
add
(bad)
(bad)
jmp
xchg
cmp
sub
ror
sar
or
popf
mov
inc
(bad)
push
call
add
call
cmp
adc
push
sub
(bad)
inc
sbb
pop
popa
inc
sbb
push
shl
mov
loop
ins
cmp
cs
(bad)
(bad)
mov
fidivr
add
ss
dec
add
aam
jnp
or
dec
lock
(bad)
jmp
add
(bad)
cli
fisttp
cwde
mov
xor
pop
inc
mov
sbb
mov
mov
and
mov
mov
push
(bad)
js
lea
loop
ret
(bad)
jmp
(bad)
aaa
mov
bound
push
push
test
dec
loope
mov
rol
clc
and
(bad)
sti
add
add
js
inc
and
push
push
and
push
movs
inc
(bad)
mov
scas
mov
sbb
push
ret
sbb
call
hlt
jge
sbb
js
xor
mov
pop
lock
adc
sbb
(bad)
jg
in
popa
or
adc
or
iret
(bad)
jbe
and
js
push
(bad)
jmp
(bad)
jmp
jae
adc
(bad)
xor
mov
mov
(bad)
(bad)
push
jecxz
xlat
and
mov
pop
mov
fmul
rcr
inc
icebp
clc
neg
add
dec
push
dec
add
jbe
cmp
sub
(bad)
jmp
jne
inc
rcl
add
into
mov
call
jg
jae
adc
popa
(bad)
and
or
adc
dec
(bad)
sti
jmp
or
xor
jmp
int
pop
cmp
or
add
or
pop
(bad)
(bad)
push
test
nop
sbb
mov
nop
add
adc
inc
pusha
add
sub
xchg
clc
stos
mov
sub
sbb
jp
cld
inc
pop
jg
hlt
and
or
(bad)
(bad)
call
ret
sbb
test
es
add
mov
jno
jae
arpl
sub
ds
sub
(bad)
dec
cmp
das
sti
cwde
add
xchg
cwde
cmp
or
loopne
call
test
call
or
int
add
rcr
cmp
inc
fs
adc
(bad)
(bad)
(bad)
sti
inc
clc
sub
mov
repnz
iret
xor
bound
inc
sbb
jmp
cld
call
rol
(bad)
sub
mov
add
cmp
push
adc
gs
(bad)
inc
adc
aad
aaa
mov
cmp
adc
push
or
inc
adc
add
xor
(bad)
je
lahf
rol
mov
(bad)
call
mov
fwait
jmp
mov
adc
scas
xor
fisubr
mov
inc
lds
and
mov
inc
adc
(bad)
call
mov
in
jp
sar
ret
pop
shl
add
adc
ror
bound
xor
mov
arpl
aad
sub
mov
lds
add
push
clc
(bad)
(bad)
inc
retf
lods
mov
cmp
xchg
pusha
mov
pusha
nop
pop
and
mov
pop
or
aad
test
mov
(bad)
(bad)
dec
in
clc
test
pop
push
adc
push
add
mov
jmp
jmp
outs
clc
sbb
mov
and
cmp
adc
jge
arpl
or
rol
jno
xchg
(bad)
jmp
(bad)
call
inc
add
and
mov
jo
add
push
lea
(bad)
out
jno
adc
inc
cmp
or
xchg
mov
test
out
retf
aas
std
aas
push
inc
push
sahf
icebp
or
adc
jns
call
inc
lock
pop
ret
sub
sub
clc
rcl
mov
inc
loop
mov
aaa
mov
push
xchg
(bad)
mov
loop
pop
and
sar
inc
cmp
sbb
enter
or
in
je
(bad)
inc
push
sbb
scas
or
xchg
movs
and
fild
push
shl
sbb
jo
and
or
cmp
jp
movs
pop
add
rol
push
cmp
xor
jp
xchg
jmp
add
arpl
lods
data16
cs
mov
int
enter
and
push
hlt
inc
fidivr
xor
push
cmp
(bad)
jg
inc
add
inc
pop
adc
mov
mov
mov
(bad)
dec
cmp
mov
jb
add
std
call
mov
in
fistp
clc
sbb
scas
inc
(bad)
jl
shr
ret
xor
lock
ffreep
aaa
retf
pop
lods
sbb
adc
mov
in
repnz
test
xchg
xor
loopne
pop
xor
pop
sti
daa
ds
push
ret
inc
test
(bad)
jle
loope
stc
fcmovbe
mov
jns
(bad)
(bad)
(bad)
pusha
pop
fadd
or
loop
mov
xor
gs
jae
(bad)
(bad)
(bad)
aas
(bad)
div
mov
inc
add
sbb
add
jo
out
mov
dec
adc
add
shl
push
rol
addr16
popf
fnsave
pop
push
or
inc
daa
jo
inc
jo
xchg
aad
in
jb
or
add
push
addr16
std
(bad)
inc
test
and
push
pusha
gs
cmps
daa
pop
movs
hlt
mov
cdq
fnsave
mov
(bad)
fistp
(bad)
(bad)
call
pop
jmp
xlat
sub
test
push
jno
adc
aad
(bad)
inc
loopne
adc
pop
or
push
(bad)
nop
or
add
jo
mov
mov
mov
jl
jp
xchg
push
fld
aad
ss
das
(bad)
sti
(bad)
(bad)
sti
jge
ja
nop
add
nop
or
js
or
add
cmps
or
clc
push
or
and
daa
or
inc
or
or
(bad)
lods
xor
mov
add
and
mov
add
adc
aaa
push
(bad)
inc
(bad)
fucomp
mov
adc
mov
fidiv
shl
or
out
fadd
ret
fist
mov
pop
mov
or
or
adc
out
jg
dec
jge
mov
aaa
and
pusha
ret
jmp
push
repnz
out
inc
cmp
nop
lock
mov
lock
inc
int3
mov
jo
fst
shr
loopne
std
push
call
fwait
xlat
or
or
das
ror
xor
sbb
std
pop
pop
loope
xor
and
push
loopne
lock
mov
cmp
in
or
fucomip
shr
add
std
dec
and
in
xchg
mov
push
or
movs
push
sbb
lock
iret
inc
das
push
or
push
sbb
(bad)
call
packssdw
lock
inc
add
add
add
in
fwait
in
rol
loope
push
daa
mov
jnp
inc
(bad)
inc
cdq
push
xlat
push
or
ror
and
push
(bad)
jg
loopne
push
add
sbb
popf
rol
inc
xchg
jbe
repz
cmc
jbe
and
test
lock
push
call
paddd
daa
dec
rcr
lea
or
pusha
push
vpaddb
call
pop
cld
dec
loop
ret
add
xor
add
pop
(bad)
call
jp
xchg
pop
mov
xor
mov
out
add
xchg
or
push
pushf
inc
add
stos
or
loopne
stos
mov
pop
aam
rcl
fdivr
jg
jg
sub
or
jmp
or
adc
(bad)
call
sub
push
mov
pop
je
out
ret
push
add
xchg
(bad)
inc
nop
or
xchg
ror
and
mov
aas
sbb
(bad)
cmp
xor
sbb
jle
xchg
add
jns
pop
jo
(bad)
popa
loope
xor
(bad)
call
sahf
ins
das
mov
ja
pusha
sbb
sub
pop
adc
rcpps
xchg
icebp
pop
fild
pushf
inc
push
or
and
in
add
mov
ins
adc
ins
test
xor
call
and
sub
push
push
jne
std
xchg
xchg
pop
jmp
inc
mov
dec
add
add
inc
pushf
dec
fsubr
adc
and
nop
xor
mov
or
loopne
cmc
add
lods
pusha
push
cli
rol
je
xchg
daa
(bad)
adc
mov
popf
inc
mov
cli
pop
rol
push
pop
add
and
xchg
push
xchg
test
cmp
clc
lahf
dec
mov
ret
iret
(bad)
nop
add
or
xor
ror
mov
or
fmul
call
(bad)
sti
dec
fcomp
fisubr
xchg
inc
sahf
pop
adc
jno
clc
ja
push
mov
sub
add
pop
(bad)
jmp
pop
enter
mov
xchg
pop
push
add
std
in
adc
lahf
ret
mov
(bad)
dec
dec
adc
call
jnp
jmp
inc
dec
mov
pop
loopne
mov
xor
sbb
shl
cld
fadd
push
sbb
xchg
shl
jmp
arpl
pop
inc
pop
mov
(bad)
pop
jo
mov
rcl
pop
pop
jb
pop
adc
loop
(bad)
dec
popa
mov
call
sbb
out
sbb
adc
loope
enter
enter
(bad)
loopne
and
inc
cmps
ja
(bad)
hlt
aam
in
(bad)
(bad)
(bad)
call
push
xor
add
push
rol
inc
and
inc
sbb
mov
sub
add
cld
jmp
cmp
or
lock
push
(bad)
jo
mov
xchg
pop
add
lds
int
or
aas
or
jbe
mov
sti
and
or
jmp
xor
loop
mov
xor
rol
xchg
fwait
xor
mov
inc
sub
jg
stos
inc
or
fdivr
push
gs
dec
fistp
push
mov
push
mov
push
in
aas
clc
call
popf
adc
sbb
daa
jg
pop
outs
(bad)
jg
jg
enter
addr16
adc
stos
pop
movs
push
imul
jp
xchg
lock
jb
or
loopne
xor
loopne
mov
xor
sub
mov
mov
loope
jge
pop
jbe
xor
nop
or
cmps
dec
clc
(bad)
inc
jl
add
in
and
push
rcl
mov
in
and
(bad)
xor
div
jae
(bad)
jmp
popa
and
in
sub
jo
mov
fild
outs
push
push
sbb
adc
enter
jg
jo
xchg
inc
adc
pop
or
test
xchg
or
push
jo
add
call
lahf
push
(bad)
sub
sub
imul
mov
jno
scas
push
add
xchg
mov
inc
mov
or
aam
inc
sub
sub
jo
call
or
jae
int
add
(bad)
inc
add
push
pop
aad
mov
and
add
cmp
or
or
(bad)
aas
cli
mov
cpuid
ror
cmps
fstp
lock
shl
fxch
lahf
xchg
and
xor
sar
xor
xchg
mov
adc
add
loope
aaa
push
inc
pop
ret
or
and
mov
push
mov
pop
pop
loope
outs
and
and
scas
mov
push
sub
mov
lock
adc
movs
sbb
(bad)
inc
ret
or
cmp
aaa
pop
cmp
or
add
inc
xchg
cwde
adc
out
(bad)
repz
loope
ficomp
call
cmp
xchg
pushf
nop
or
(bad)
jmp
cdq
popf
lock
cdq
cmp
cmp
and
ins
int3
adc
loopne
shl
add
pop
dec
imul
ja
fst
add
mov
jns
movs
je
lea
dec
bound
xchg
(bad)
jg
shl
jno
loop
or
and
push
or
retf
add
and
lahf
lods
adc
ror
jmp
(bad)
jg
clc
adc
jae
xor
mov
mov
imul
(bad)
ret
jmp
jne
adc
sub
mov
call
(bad)
(bad)
add
loopne
cmps
out
(bad)
jne
push
jge
loopne
mov
add
dec
inc
xor
jnp
or
cmp
es
lock
rcl
stc
mov
adc
add
adc
jg
xchg
push
imul
iret
sbb
cmp
js
dec
adc
add
jmp
or
test
inc
xor
and
sub
icebp
xchg
call
push
pop
cld
aam
jmp
les
adc
add
sbb
add
retf
call
add
jnp
jecxz
or
(bad)
iret
push
jns
loope
add
(bad)
inc
add
lahf
idiv
jg
bswap
xchg
dec
or
push
cwde
mov
lea
mov
shl
pop
cmp
leave
inc
ins
mov
into
adc
loope
or
pop
nop
rol
pop
mov
jg
clc
outs
cmp
dec
int
fcom
mov
ja
pop
pusha
mov
aad
lock
(bad)
push
dec
add
retf
jmp
inc
jg
inc
movs
add
dec
sar
add
loopne
(bad)
jg
and
std
xor
push
in
add
push
add
rcl
(bad)
pop
imul
cld
sbb
sar
cwde
pop
sbb
inc
(bad)
cli
jecxz
jg
rcl
or
pop
outs
ss
(bad)
std
aas
and
add
mov
inc
inc
mov
mov
pop
std
add
adc
adc
add
mov
fcomp
leave
es
nop
and
retf
lock
adc
pop
mov
ret
add
int3
jo
mov
or
comiss
das
jae
add
or
das
and
scas
inc
xchg
rcl
fmul
xchg
jge
mov
jne
js
jb
dec
and
(bad)
inc
jmp
or
or
lahf
cmp
pusha
inc
push
lock
inc
sub
cwde
cmps
shl
or
ret
aad
xor
sbb
mov
pop
cld
fisubr
loop
movs
fsqrt
jmp
ret
or
mov
xor
or
icebp
cld
call
call
mov
push
inc
add
aas
sub
ja
hlt
and
popf
and
add
jle
(bad)
adc
and
idiv
jmp
mov
mov
inc
mov
(bad)
(bad)
inc
inc
adc
jae
push
popf
jecxz
jb
shl
stos
or
jmp
ja
js
cmp
aas
adc
out
xor
pop
std
push
ret
xor
adc
(bad)
jge
inc
pop
mov
popf
push
jp
mov
mov
call
jg
pop
adc
ror
outs
xlat
aad
adc
ret
mov
(bad)
(bad)
(bad)
inc
(bad)
js
jmp
ds
aas
adc
fild
(bad)
(bad)
(bad)
fisttp
mov
fiadd
jns
and
rol
cdq
ror
mov
inc
sub
loopne
mov
inc
imul
cmps
push
mov
mov
jno
add
in
leave
jmp
mov
add
mov
(bad)
adc
inc
add
out
call
ret
sti
out
sbb
sbb
cmps
xor
test
mov
or
ds
cli
out
inc
mov
push
cmc
lock
add
pusha
aad
mov
jg
add
pop
in
sbb
call
int
fisttp
movs
or
or
xchg
inc
mov
or
jge
add
call
jns
sbb
and
adc
mov
jo
fdivr
(bad)
lds
jmp
pop
push
jb
pop
fcmovnb
or
and
lock
(bad)
(bad)
(bad)
call
jle
xchg
mov
cli
loopne
(bad)
out
or
repnz
call
js
scas
cmc
or
dec
jle
loopne
sub
hlt
inc
(bad)
push
loopne
push
scas
add
push
in
dec
test
not
(bad)
xor
adc
jg
(bad)
dec
mov
or
fdivr
(bad)
call
lds
xchg
pop
rol
test
clc
or
add
inc
in
movs
popa
out
xor
(bad)
(bad)
(bad)
call
or
nop
or
ud2
rol
push
or
(bad)
fisub
stc
mov
add
add
cld
(bad)
jmp
lahf
test
call
(bad)
cld
sub
sbb
inc
xchg
jmp
in
push
(bad)
(bad)
jg
fst
push
adc
shl
iret
mov
jno
rol
or
and
(bad)
(bad)
(bad)
push
ret
add
cli
inc
adc
inc
mov
adc
jge
and
jecxz
inc
cmp
(bad)
inc
sub
pop
add
or
xor
push
push
dec
push
and
xchg
clc
xchg
sub
(bad)
(bad)
jmp
add
sbb
in
(bad)
scas
mov
outs
std
js
ret
adc
out
jecxz
(bad)
in
pop
sar
call
xchg
in
pop
mov
pop
xlat
out
pop
mov
stos
aaa
and
out
mov
jo
(bad)
dec
mov
ror
(bad)
lahf
cmp
lds
dec
ins
inc
sahf
adc
mov
or
add
push
and
add
(bad)
inc
dec
or
or
jns
and
adc
std
icebp
jmp
dec
add
in
add
in
add
div
icebp
lock
lahf
push
pop
loop
loope
test
add
aad
add
mov
std
(bad)
test
out
daa
(bad)
out
idiv
dec
enter
add
int3
retf
mov
add
ds
cld
sti
outs
jecxz
idiv
repnz
fnstsw
fcmovnu
fild
rcl
rol
into
iret
into
inc
retf
push
mov
fisttp
add
shr
cld
std
std
add
div
add
repz
out
out
in
fwait
(bad)
push
pop
jmp
jbe
outs
(bad)
add
xchg
ja
add
hlt
cmc
inc
dec
aas
jmp
repnz
push
dec
loop
(bad)
stc
pop
test
(bad)
lds
xor
sahf
sti
fidiv
stc
(bad)
scas
cmc
add
fidivr
lock
imul
in
(bad)
fcompp
add
xchg
retf
in
(bad)
add
add
add
add
jns
mov
mov
rcr
into
xor
cs
enter
dec
add
es
dec
sub
adc
sbb
movs
lea
add
pop
mov
leave
xor
inc
or
les
sbb
add
xchg
xchg
dec
pop
add
movs
mov
or
leave
xor
sub
mov
and
xchg
out
adc
add
adc
dec
cmp
add
cmp
addr16
add
cmp
and
add
cmp
add
sub
iret
cmp
add
sub
int
xor
add
xchg
xchg
or
xor
xor
ficomp
aam
add
sbb
xor
xchg
xchg
sbb
inc
adc
adc
inc
psubw
pop
or
or
inc
jmp
jb
sbb
add
xchg
push
push
arpl
call
popa
xchg
or
add
popa
ds
sbb
add
add
or
and
dec
sub
adc
add
push
jmp
adc
and
movs
scas
xchg
add
sbb
ins
in
test
xor
sbb
push
dec
xchg
sbb
adc
dec
inc
adc
add
loope
push
jmp
adc
mov
dec
(bad)
scas
or
pop
push
push
dec
add
pop
push
add
inc
enter
dec
xchg
iret
push
nop
adc
pop
in
imul
add
mov
xor
inc
in
loope
fistp
push
or
xor
xor
call
and
(bad)
(bad)
inc
or
in
clc
inc
jle
loop
clc
dec
inc
inc
pop
outs
xchg
add
add
cmps
or
pop
add
aad
pusha
add
xchg
sar
inc
inc
and
pop
and
fstp
adc
cli
pop
popa
arpl
jnp
(bad)
(bad)
jns
not
shr
scas
repnz
scas
js
cli
in
and
adc
mov
out
inc
jns
clc
push
shr
xor
push
inc
aam
or
ins
fs
add
ins
mov
push
imul
imul
jae
nop
fldln2
imul
cs
ja
pop
jl
jl
ja
arpl
or
jne
fs
out
shr
xchg
or
jo
push
test
outs
inc
aaa
arpl
or
fs
jae
dec
inc
inc
xor
ss
add
dec
cs
add
push
adc
jae
and
aaa
movzx
arpl
or
jnp
inc
loope
cmps
push
mov
adc
add
xor
pop
cmovae
inc
les
jg
xchg
les
or
jg
and
call
mov
mov
pop
es
fcmovnb
add
add
jns
mov
loop
fild
pop
in
lock
jg
and
cmp
add
add
add
(bad)
jmp
add
dec
add
pop
add
add
jne
jl
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
sbb
add
add
dec
add
add
jno
jp
test
mov
cwde
add
jmp
retf
add
add
add
add
add
push
add
(bad)
(bad)
jmp
add
add
pop
add
jb
jle
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
or
add
pop
add
xchg
mov
lds
aad
in
test
push
push
daa
push
aaa
push
dec
push
pop
push
push
jnp
mov
popf
push
scas
push
rol
(bad)
mov
push
cmc
pop
sbb
sub
cmp
pop
je
xchg
cdq
pop
lods
pop
mov
(bad)
inc
in
clc
or
or
or
or
pop
or
or
or
or
or
or
(bad)
(bad)
(bad)
dec
and
or
or
or
or
or
or
or
or
(bad)
jg
dec
or
lds
fmul
repz
or
or
imul
mov
retf
(bad)
(bad)
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
je
mov
fimul
cs
dec
push
fs
jg
fwait
push
mov
sar
(bad)
dec
out
wbinvd
(bad)
cmovno
pop
(bad)
setbe
mov
iret
paddsb
adc
(bad)
(bad)
jmp
jle
fwait
adc
adc
adc
adc
ins
adc
call
adc
(bad)
(bad)
inc
adc
jecxz
add
and
inc
adc
adc
adc
adc
adc
adc
adc
(bad)
(bad)
dec
push
mov
adc
push
adc
mov
(bad)
(bad)
call
es
dec
push
ins
push
(bad)
push
mov
(bad)
push
cli
pop
sbb
pop
mov
scas
pop
rcl
neg
sbb
inc
(bad)
(bad)
(bad)
call
sbb
sbb
sbb
sbb
imul
sbb
sbb
sbb
ja
sahf
(bad)
(bad)
(bad)
call
lds
in
sbb
cmp
arpl
mov
mov
ficomp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
call
cdq
sbb
push
push
inc
push
push
xchg
push
mov
pop
ds
imul
(bad)
(bad)
call
jmp
and
and
dec
and
mov
and
and
add
(bad)
jmp
scas
and
and
and
and
xchg
and
and
and
and
and
and
and
push
(bad)
(bad)
(bad)
jmp
xchg
and
daa
es
xchg
mov
call
daa
jp
stos
daa
fsubr
(bad)
(bad)
(bad)
dec
sub
sub
sub
popf
sub
sub
sub
sub
sub
sub
(bad)
(bad)
push
sub
popf
sub
sub
sub
sub
sub
sub
sub
jbe
stos
sub
dec
cs
(bad)
(bad)
inc
das
and
pop
das
xchg
das
(bad)
das
(bad)
xor
xor
xor
xor
xor
xor
(bad)
(bad)
push
xor
xor
fwait
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
inc
ss
ss
scas
ss
aaa
pushf
aaa
xlat
cmp
push
cmp
(bad)
(bad)
(bad)
inc
jg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
loopne
and
pusha
mov
aas
popa
aas
mov
dec
addr16
cmps
inc
out
sub
inc
lods
inc
out
inc
xor
inc
mov
test
inc
jge
rol
inc
mov
inc
push
inc
call
inc
stos
(bad)
(bad)
(bad)
inc
inc
xor
dec
add
dec
xlat
dec
sbb
dec
lock
aaa
dec
jge
les
aam
(bad)
dec
dec
call
dec
mov
dec
xchg
dec
fmul
dec
outs
dec
mov
(bad)
dec
dec
fst
push
jno
mov
push
fwait
push
out
xor
(bad)
(bad)
(bad)
jl
(bad)
push
adc
push
stos
push
not
(bad)
push
fist
push
jne
ret
push
pop
push
test
(bad)
(bad)
inc
push
loopne
das
pop
jge
retf
pop
sbb
pop
mov
pop
cmps
pop
cmc
pop
inc
pop
xchg
pop
in
(bad)
(bad)
(bad)
push
pop
daa
pop
js
leave
pop
sbb
pop
mov
pop
mov
add
pusha
cld
popa
inc
mov
bound
xchg
arpl
jmp
gs
(bad)
jmp
cmp
callw
addr16
addr16
push
call
push
(bad)
(bad)
(bad)
jmp
imul
scas
ins
or
ins
mov
outs
les
outs
js
shl
jo
aas
lock
push
jno
jno
jno
jb
jb
jae
jae
jae
je
ror
(bad)
(bad)
(bad)
jmp
jne
jne
jbe
jbe
jbe
ja
ja
js
js
js
jns
jns
jns
jp
jp
jnp
(bad)
(bad)
inc
arpl
jl
jl
jl
jge
jge
jle
jle
jle
jg
jg
jg
add
(bad)
(bad)
(bad)
mov
int
xor
push
cmp
jecxz
inc
test
(bad)
inc
cmp
imul
fs
mov
mov
(bad)
(bad)
(bad)
dec
(bad)
dec
ss
sahf
nop
push
nop
outs
nop
(bad)
xchg
aas
xchg
test
adc
(bad)
call
and
mov
xchg
xor
lahf
xchg
or
dec
cwde
(bad)
(bad)
(bad)
(bad)
mov
cdq
cld
call
scas
pushf
sbb
mov
sahf
inc
sahf
scas
lahf
sbb
dec
mov
mov
mov
jbe
out
push
movs
(bad)
movs
cmp
(bad)
(bad)
(bad)
dec
cmps
loopne
push
test
test
sbb
(bad)
stos
add
pop
lods
shr
(bad)
(bad)
mov
scas
push
scas
mov
jmp
mov
mov
mov
mov
mov
mov
pop
cld
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
cs
(bad)
jg
mov
fwait
sar
test
cmc
shl
shl
(bad)
(bad)
jmp
ret
fcmovnb
pop
ret
aam
push
(bad)
into
lds
enter
ret
mov
mov
(bad)
(bad)
(bad)
mov
retf
ss
mov
xor
int
into
ss
mov
aaa
iret
mov
sar
(bad)
(bad)
(bad)
(bad)
mov
rol
aam
aam
aad
aad
(bad)
push
(bad)
fcom
pop
xlat
loopne
fs
fldcw
(bad)
(bad)
push
fidiv
sti
fild
fst
fst
fild
fild
loope
loope
loop
(bad)
(bad)
call
fninit
arpl
jmp
jae
cld
in
out
out
out
out
call
inc
jmp
(bad)
(bad)
(bad)
jmp
jmp
jmp
in
xchg
adc
pushf
out
sub
mov
inc
out
int3
lock
lock
jb
push
mov
sbb
(bad)
(bad)
(bad)
jmp
cmc
push
cmc
fdivp
ins
idiv
test
cli
push
cli
out
ja
pop
cld
jno
clc
call
dec
fdivr
ins
(bad)
push
or
push
sub
adc
and
rol
(bad)
jg
and
mov
jb
push
bound
fiadd
nop
fist
pop
push
or
mov
xchg
outs
add
push
xor
daa
xchg
movs
out
outs
mov
sbb
inc
push
push
and
sub
cmc
gs
add
inc
adc
js
movs
imul
dec
pop
xor
dec
adc
and
mov
loopne
sbb
push
add
cmp
cld
mov
fbstp
jne
sub
xor
xor
jae
xor
(bad)
mov
dec
int3
add
(bad)
repz
mov
pop
std
(bad)
sti
mov
or
gs
shl
fisttp
push
sub
adc
add
fild
pop
jbe
add
daa
(bad)
mov
add
or
inc
mov
pop
push
add
add
add
aaa
rol
add
add
inc
adc
pop
and
xor
inc
mov
shl
(bad)
(bad)
(bad)
sti
and
bound
jns
pop
sbb
sbb
sub
cmp
inc
inc
inc
pop
pop
or
push
push
push
push
push
or
and
(bad)
(bad)
jmp
je
jbe
js
jp
test
mov
xchg
cwde
cdq
call
(bad)
(bad)
jmp
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
xlat
or
(bad)
(bad)
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
scas
xor
sbb
into
outs
cmps
adc
add
add
adc
aas
mov
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
pop
inc
nop
pusha
mov
mov
inc
or
adc
mov
pusha
mov
pop
xchg
inc
retf
arpl
sub
push
or
pushf
or
pop
add
or
or
out
(bad)
sti
or
movlps
pop
adc
adc
sbb
adc
adc
sbb
xchg
and
pop
and
push
and
push
pop
push
mov
push
in
jg
ja
push
or
push
push
adc
adc
add
fnsave
or
cwde
inc
push
push
outs
icebp
sti
push
jmp
call
(bad)
(bad)
jge
or
add
ret
aas
pop
xchg
dec
dec
sbb
mov
les
inc
mov
inc
mov
jmp
scas
pop
push
das
imul
pushf
(bad)
call
cli
ja
loopne
cs
sub
mov
leave
in
outs
cs
xor
push
(bad)
jg
xor
push
jecxz
mov
lds
(bad)
(bad)
mov
into
loop
in
repz
popa
or
lods
adc
sbb
(bad)
(bad)
push
sar
ins
sbb
dec
add
xchg
cs
stc
dec
ror
popf
stc
xor
cld
push
push
cmp
jns
int3
int3
sbb
fwait
xchg
lods
mov
or
adc
xchg
dec
sbb
sbb
retf
(bad)
(bad)
(bad)
push
pop
enter
mov
mov
push
mov
cmp
cmp
call
inc
lods
out
retf
lea
(bad)
(bad)
jmp
jp
mov
mov
les
ror
mov
stos
xchg
mov
out
gs
call
jne
jae
xchg
jmp
jbe
mov
and
or
(bad)
(bad)
mov
push
xchg
push
jnp
leave
cmc
jmp
sub
sbb
mov
ror
aam
adc
(bad)
(bad)
jmp
inc
cmp
pop
pop
dec
jge
call
inc
das
xor
jmp
jmp
sahf
sub
jl
dec
xchg
push
daa
aaa
jp
mov
stc
add
(bad)
jmp
(bad)
(bad)
call
mov
jecxz
ret
fsubr
outs
cmp
mov
xchg
xchg
dec
inc
repz
inc
push
xchg
inc
sub
(bad)
(bad)
call
gs
shl
push
push
arpl
pop
jecxz
mov
(bad)
stos
push
out
aad
mov
(bad)
std
(bad)
inc
sub
movs
jns
jb
jmp
xchg
xchg
cli
push
cmp
sbb
(bad)
(bad)
(bad)
(bad)
jg
sar
in
data16
push
xchg
pop
adc
pop
and
retf
enter
dec
enter
std
dec
jp
dec
cmps
sbb
pop
rcl
mov
(bad)
call
loopne
(bad)
icebp
in
sub
mov
call
dec
jno
cmp
adc
(bad)
(bad)
cmp
lods
in
dec
retf
aam
pushf
jl
mov
imul
arpl
jg
call
ret
adc
rcr
xchg
adc
imul
(bad)
(bad)
(bad)
call
aam
inc
stos
add
push
jo
and
pusha
shl
jb
cmp
mov
mov
(bad)
(bad)
(bad)
dec
les
pop
cmp
imul
aam
jb
js
jnp
movs
adc
or
add
(bad)
cli
sbb
mov
mov
rcr
fcom
xchg
ja
inc
(bad)
inc
jg
aad
hlt
outs
adc
fidivr
imul
push
or
mov
call
std
pop
out
ret
ret
pop
mov
test
xchg
std
fistp
lods
and
aas
clc
out
iret
xchg
pop
jne
cmp
jne
mov
adc
test
call
mov
jmp
out
inc
add
jns
or
xor
dec
aas
(bad)
(bad)
(bad)
push
lods
daa
add
stc
pop
loopne
pop
adc
jno
retf
inc
xchg
mov
mov
sbb
cmp
ret
cmps
(bad)
in
(bad)
push
(bad)
xchg
jge
pop
lods
je
xchg
test
sbb
add
xor
adc
ror
pop
xchg
sbb
dec
jmp
iret
dec
stos
je
addr16
in
sar
(bad)
out
pop
in
and
sub
and
ins
ins
xchg
cmp
jnp
mov
inc
push
call
imul
fimul
push
fwait
ret
xor
imul
rcr
pop
jge
jmp
shl
push
add
jo
pop
lea
jbe
loope
stos
imul
mov
and
sti
shl
aam
sbb
inc
jae
fild
mov
sbb
mov
mov
mov
push
dec
dec
adc
pop
dec
push
out
mov
xor
scas
pop
or
imul
sbb
(bad)
jg
fnstcw
test
outs
out
sbb
mov
nop
scas
add
dec
cdq
(bad)
(bad)
(bad)
call
jp
dec
jno
push
dec
pop
(bad)
shr
add
push
cmp
mov
in
jns
lock
(bad)
push
jbe
mov
mov
rcl
iret
scas
cld
(bad)
(bad)
jg
pop
mov
in
jb
dec
aam
movs
xchg
pop
cmps
aaa
sbb
cmp
rcr
cli
gs
(bad)
(bad)
call
arpl
mov
lods
dec
call
test
sar
xchg
lods
jmp
(bad)
jmp
push
lods
pushf
cmp
xlat
and
jp
fldcw
lahf
cld
jle
dec
mov
mov
xchg
sub
call
std
call
jae
rol
and
sub
sbb
lods
out
out
push
(bad)
(bad)
(bad)
(bad)
in
int3
stos
sub
repnz
movs
jb
repnz
movs
out
fstp
test
fs
fdiv
xchg
in
push
(bad)
(bad)
(bad)
(bad)
call
sub
inc
jb
adc
daa
cmp
stos
push
xchg
pop
pushf
scas
dec
call
cmc
out
mov
push
jg
jl
(bad)
(bad)
push
cs
rcl
jae
outs
adc
pop
mov
push
add
and
dec
out
mov
pop
lock
(bad)
(bad)
push
addr16
dec
mov
push
sar
test
fwait
jmp
push
pop
popf
sub
or
(bad)
call
jne
int3
mov
jp
ins
icebp
ja
mov
inc
les
sti
sbb
gs
gs
sti
(bad)
(bad)
(bad)
inc
cmp
gs
sbb
inc
push
int
sahf
pushf
push
xor
popf
mov
push
pop
jb
add
(bad)
dec
sub
mov
push
(bad)
(bad)
(bad)
aas
scas
sbb
pop
mov
aaa
xchg
adc
sbb
gs
rcl
stos
push
cwde
or
jmp
push
idiv
fs
gs
pop
xor
push
ror
cmps
push
xchg
(bad)
(bad)
(bad)
push
push
fild
or
mov
sahf
in
ss
in
imul
(bad)
(bad)
jg
das
sbb
jne
leave
imul
push
js
push
adc
ret
(bad)
(bad)
(bad)
cmp
mov
loop
sub
mov
popf
push
in
inc
jno
std
push
jp
aad
call
(bad)
jmp
ds
int3
pop
sub
shl
sub
repnz
push
fdivr
in
jb
mov
mov
scas
test
xor
cdq
adc
mov
(bad)
(bad)
aas
cli
imul
sub
inc
push
mov
call
add
add
mov
leave
iret
test
clc
rcl
fdiv
sbb
pop
mov
mov
mov
inc
pop
inc
sti
cmps
cmps
or
jb
jmp
ret
mov
cs
(bad)
inc
jmp
loop
pop
or
std
test
or
fimul
mov
dec
arpl
shl
cmc
ins
popa
sbb
(bad)
mov
fwait
in
and
mov
cmc
scas
and
sbb
mov
push
xor
(bad)
inc
dec
repz
sti
jg
js
int3
push
sbb
lahf
dec
mov
push
aaa
sub
(bad)
(bad)
(bad)
call
aam
in
outs
and
je
bnd
inc
retf
call
jmp
jae
dec
addr16
and
add
xor
mov
ret
adc
(bad)
out
mov
(bad)
(bad)
(bad)
(bad)
fidiv
pop
fcom
xor
test
push
jb
daa
fidivr
push
or
(bad)
adc
(bad)
(bad)
(bad)
jmp
ja
movs
dec
add
bound
aas
pop
mov
js
dec
cmps
test
fnstenv
fbstp
dec
fistp
jge
jmp
xchg
push
cli
test
mov
(bad)
(bad)
(bad)
dec
cld
icebp
xchg
sbb
or
mov
jge
test
les
mov
xor
call
(bad)
jmp
addr16
aas
(bad)
mov
xchg
dec
jg
aam
sbb
psraw
(bad)
(bad)
pushf
pop
dec
aaa
popf
jo
movs
and
(bad)
pusha
xor
std
scas
pop
test
(bad)
jmp
and
pop
rep
leave
lods
fcomp
dec
dec
test
pop
loop
add
jmp
call
push
div
bound
leave
(bad)
out
(bad)
(bad)
call
push
in
jb
aad
xchg
(bad)
out
(bad)
fcomi
sub
sub
or
(bad)
out
mov
(bad)
push
movs
jmp
ret
cmps
xor
out
out
jmp
mov
(bad)
clc
test
xor
(bad)
daa
and
stos
call
jo
add
std
stos
inc
(bad)
dec
add
inc
call
loop
les
inc
rol
mov
adc
jmp
sbb
fcomp
repnz
mov
imul
popf
push
fs
aas
cli
push
xchg
sub
ss
rep
xchg
jno
fstp
mov
mov
lahf
(bad)
(bad)
(bad)
(bad)
mov
xchg
pop
pop
aam
push
xor
push
push
jg
add
and
push
push
push
mov
sti
inc
push
cmps
xor
dec
dec
(bad)
nop
mov
mov
loop
or
mov
jle
(bad)
dec
jno
sbb
xor
popf
das
inc
dec
cmps
leave
add
mov
(bad)
(bad)
(bad)
push
dec
mov
adc
sub
dec
(bad)
das
icebp
lods
daa
inc
(bad)
je
push
les
jl
call
(bad)
(bad)
push
add
push
mov
out
jnp
lea
or
shl
arpl
in
mov
(bad)
call
xor
outs
ins
sbb
sbb
sub
mov
(bad)
stos
pop
push
pop
fadd
repz
test
sub
cmp
aad
ins
jp
xchg
ja
fwait
mov
xchg
jnp
mov
jecxz
ins
outs
push
stc
repz
inc
clc
push
div
sahf
lods
cdq
push
push
jbe
mov
add
push
(bad)
clc
(bad)
jmp
and
xor
mov
sbb
in
pop
pusha
xchg
inc
push
ds
xor
(bad)
(bad)
(bad)
jmp
mov
inc
leave
ja
adc
sub
xor
pop
lahf
xchg
xor
daa
sbb
(bad)
(bad)
push
out
dec
push
pop
call
out
lods
mov
cmp
jb
int3
cmp
(bad)
(bad)
(bad)
(bad)
cmp
sbb
sub
mov
xor
dec
sbb
xor
cmp
icebp
xor
inc
dec
shr
and
jne
outs
mov
mov
cdq
sbb
lea
imul
cmp
xchg
ins
scas
(bad)
(bad)
jmp
jno
adc
cmp
mov
icebp
adc
(bad)
(bad)
(bad)
push
aas
(bad)
inc
retf
hlt
cmp
(bad)
lods
shr
movs
sbb
add
lods
mov
cmp
(bad)
(bad)
jmp
inc
(bad)
push
movs
and
xchg
xor
lea
fstp
ins
cmc
mov
call
mov
aad
sar
pop
imul
cmp
mov
push
cmp
loope
test
push
sub
jmp
jo
mov
call
out
xchg
mov
jns
mov
push
(bad)
dec
movs
jle
mov
cs
loope
outs
stc
cmp
test
ins
(bad)
or
inc
(bad)
push
push
and
rcl
aad
pop
fs
out
sbb
mov
test
mov
cmp
(bad)
(bad)
jmp
add
in
outs
test
push
sub
mov
and
cmp
imul
(bad)
dec
lock
sar
push
xor
dec
aas
in
not
or
icebp
inc
int3
sbb
std
loopne
out
repnz
(bad)
(bad)
call
lahf
adc
mov
in
sub
cs
sbb
rcr
push
pop
xor
mov
call
or
add
(bad)
(bad)
jnp
xor
(bad)
(bad)
fld
inc
add
cmp
rol
inc
adc
lods
or
or
add
pop
add
sbb
ds
inc
or
icebp
inc
pop
fwait
mov
cmp
adc
dec
pop
add
outs
lods
sub
leave
add
lds
add
inc
repz
add
xlat
inc
leave
adc
popa
jne
xchg
push
rcr
pop
mov
out
daa
cld
push
aaa
mov
mov
inc
adc
add
ror
(bad)
add
sbb
pop
xchg
adc
mov
xchg
pop
inc
add
dec
pop
xor
push
pop
inc
ret
lea
ss
(bad)
jge
adc
dec
sub
(bad)
nop
gs
adc
test
add
out
dec
add
out
test
pop
outs
add
in
or
dec
push
adc
enter
aas
push
pop
mov
test
cs
sub
shl
out
add
add
fcmovu
pop
pop
or
repz
repnz
adc
xor
adc
and
adc
daa
addr16
mov
add
xor
xor
ins
jns
in
and
mov
adc
sbb
adc
lods
cmps
jbe
cmp
push
mov
add
jg
cmp
dec
or
sar
dec
dec
ror
pop
add
add
aas
and
mov
push
add
mov
(bad)
jg
mov
inc
push
dec
add
mov
add
fwait
sti
idiv
pop
mov
int3
xor
int
add
into
push
idiv
out
retf
loope
jg
sar
into
inc
(bad)
cmp
push
or
sub
out
mov
pop
add
aam
lods
movs
cmpxchg
out
scas
js
leave
lock
push
aaa
rcl
out
jg
out
mov
and
mov
xchg
mov
rol
aas
xlat
scas
cs
mov
sbb
pop
mov
jge
mov
sub
addr16
lock
in
movs
pop
cs
ret
mov
jbe
adc
ds
rcr
mov
mov
jle
jbe
mov
es
xchg
sbb
stos
mov
sahf
and
pop
add
stc
mov
add
pop
pushf
xchg
call
sbb
mov
cmps
inc
ja
cmp
pop
loopne
out
jns
popa
push
add
sbb
das
add
(bad)
fld
setge
fist
test
mov
jo
loope
stos
inc
daa
fcomp
shr
mov
call
jl
(bad)
retf
iret
xor
fst
aas
add
aad
paddq
mov
sbb
mov
lods
mov
addr16
cmp
(bad)
pusha
mov
mul
xor
daa
inc
sub
not
aaa
retf
shr
test
mov
xchg
(bad)
xlat
int
push
fcom
btc
jb
mov
mov
js
jbe
es
scas
cmp
inc
mov
mov
mov
xchg
(bad)
sub
jp
out
addr16
lock
jo
adc
mov
enter
retf
(bad)
iret
cwde
(bad)
sbb
call
fwait
test
xlat
cmps
lods
mov
mov
test
xchg
lea
mov
jns
ins
adc
dec
sub
cmp
push
pop
sbb
(bad)
(bad)
jle
cmp
or
outs
imul
or
add
jge
jg
lods
popa
lea
sahf
lahf
arpl
mov
xchg
test
xor
call
pop
das
mov
mov
mov
mov
xchg
lahf
jle
jg
add
test
xor
jnp
jl
lock
add
lea
ins
ins
cmp
daa
add
adc
mov
and
pop
pop
pop
pusha
popa
bound
dec
cmp
inc
icebp
push
push
cmp
inc
inc
inc
inc
xor
add
add
xor
std
jae
jmp
pop
and
and
and
and
add
scas
sub
adc
adc
adc
push
sbb
bound
or
push
jnp
inc
ror
pop
adc
jg
xor
add
push
rol
aas
iret
lock
fmul
add
add
sub
ud2
js
ja
ret
and
add
(bad)
dec
jno
cmp
jno
xor
mov
adc
cmp
(bad)
(bad)
inc
jne
jg
mov
push
dec
(bad)
addr16
inc
push
adc
ins
add
std
fs
adc
inc
xor
adc
push
xor
sub
test
call
aas
cmp
dec
cdq
inc
dec
inc
call
call
test
jmp
sbb
jnp
or
fs
adc
cmp
push
push
(bad)
(bad)
mov
das
jne
xchg
je
sbb
jb
and
push
int
(bad)
(bad)
(bad)
(bad)
call
pop
inc
xor
inc
ss
ds
(bad)
jp
daa
jmp
sbb
add
add
popf
mov
lods
push
mov
push
jge
call
arpl
addr16
pop
sar
int
outs
sub
aaa
pop
inc
jmp
adc
std
cwde
mov
push
and
out
(bad)
sti
(bad)
in
lods
push
test
(bad)
push
jmp
jmp
ja
jnp
pop
cld
idiv
dec
mov
call
cs
lock
fisub
lahf
jg
imul
ss
mov
sbb
push
ins
fadd
mov
pusha
jge
inc
(bad)
dec
dec
sbb
fidivr
mov
lods
mov
ja
jl
inc
dec
call
pop
mov
mov
push
and
pop
pop
sbb
test
out
push
cli
jmp
dec
aaa
mov
add
jae
sbb
(bad)
dec
(bad)
jns
fidiv
lods
sub
mov
inc
dec
push
(bad)
aas
cmp
fild
pop
int
call
pop
dec
mov
idiv
(bad)
(bad)
aas
xor
xor
aas
sbb
mov
mov
fwait
jns
call
xchg
ins
call
mov
int3
jne
cld
jg
movs
pop
xchg
int
inc
push
stc
das
cmp
xor
mov
(bad)
cmp
lds
leave
mov
call
sahf
and
jo
cmp
cld
(bad)
out
inc
inc
hlt
fs
js
inc
(bad)
js
out
cmp
out
outs
ds
cmp
das
loopne
aas
dec
pop
mov
mov
iret
inc
call
mov
(bad)
(bad)
inc
mov
sub
mov
popa
and
cmp
sbb
or
jle
addr16
pop
and
lods
(bad)
sub
iret
mov
mov
pop
cmp
ror
dec
mov
aaa
mov
btr
push
cdq
int3
ret
sahf
xchg
cmp
dec
xlat
dec
test
pop
into
add
sar
mov
xor
add
or
ret
push
fs
(bad)
mov
dec
add
ficomp
ror
push
add
ret
push
add
aas
cld
add
add
ret
(bad)
dec
add
(bad)
push
pop
(bad)
inc
sbb
lds
mov
or
retf
aam
iret
shl
fdivrp
call
xor
mov
xchg
imul
push
ror
dec
add
out
pop
add
jmp
std
jg
retf
int
mov
push
aas
pushf
and
test
(bad)
pop
fucomip
(bad)
lahf
fxch
ds
mov
add
mov
mov
stos
xchg
stos
mov
daa
add
das
sub
jge
inc
pop
stc
push
xor
dec
stc
(bad)
jle
(bad)
movs
jge
je
xor
xor
sub
add
pop
sti
push
(bad)
inc
or
mov
cli
std
shr
ret
stos
daa
mov
push
add
call
imul
lahf
pop
imul
ds
xchg
adc
dec
lods
idiv
dec
aaa
jge
inc
mov
(bad)
adc
mov
push
and
(bad)
xchg
sbb
mov
add
lea
jg
nop
jo
pmaxub
(bad)
xchg
je
add
add
jg
jg
aad
(bad)
out
jg
nop
test
add
arpl
sar
gs
jbe
push
enter
ins
pop
(bad)
sti
hlt
inc
ror
int
daa
inc
add
sbb
test
idiv
not
add
add
mov
mov
xlat
push
jae
sbb
ja
pop
mov
jl
and
mov
push
outs
imul
jle
cmp
add
dec
cmps
mov
xchg
je
mov
imul
or
aaa
psubq
(bad)
xor
cdq
lea
and
ja
xchg
movs
adc
int3
cvtps2pd
jae
xor
mov
pop
mov
aad
cmp
aas
mov
fist
sub
cmp
lock
push
daa
mov
cdq
jge
add
ins
popa
les
outs
push
loope
mov
xor
adc
lahf
icebp
cmp
and
mov
imul
or
idiv
shr
jno
xchg
dec
lds
jl
loope
fs
popa
pusha
sbb
inc
addr16
pop
pop
test
loop
ds
jo
inc
jle
mov
daa
pop
ins
push
jecxz
jo
ja
pop
jg
out
push
dec
xchg
out
adc
ins
xlat
add
ja
jp
pop
jne
push
cmps
inc
sub
pop
push
mov
inc
and
push
dec
cmp
daa
es
ja
inc
(bad)
cmp
xchg
dec
push
(bad)
fdivp
lds
adc
dec
lahf
push
test
mov
pop
pusha
outs
cwde
mov
(bad)
mov
cmp
ret
xchg
push
sbb
pushf
nop
mov
mov
fbld
dec
ret
pop
mov
mov
pop
(bad)
ja
icebp
mov
cmp
dec
cmps
dec
jns
rcl
xor
xchg
test
inc
pop
mov
cmps
push
push
xchg
ja
jno
icebp
sub
jns
dec
add
push
cmp
mov
cmp
sub
dec
jne
dec
cmovno
push
aas
cwde
pop
push
pop
xchg
dec
cmp
sbb
xlat
push
sar
out
ret
dec
js
jo
mov
sub
sbb
add
out
sti
ficom
mov
lahf
and
pop
cmp
add
sbb
pop
add
daa
add
idiv
inc
lock
repnz
dec
hlt
pop
pop
jle
dec
in
mov
push
fs
(bad)
call
(bad)
mov
mov
call
push
push
lods
int
cmp
and
pop
jecxz
mov
mov
in
out
out
(bad)
fild
out
fsubr
inc
pop
fimul
xchg
and
cdq
mov
mov
mov
pop
pop
ins
test
loop
jle
in
in
sub
adc
(bad)
(bad)
mov
fstp
rcr
mov
fstp
fild
sub
imul
call
rcr
rcl
pop
pop
fwait
fwait
stos
outs
jle
push
aam
and
(bad)
dec
mov
ins
pop
stos
outs
ins
pop
int3
int
into
iret
and
mov
push
push
lds
pop
imul
(bad)
call
aas
mov
js
(bad)
outs
fwait
(bad)
mov
mov
ret
xchg
lock
mov
mov
mov
mov
pop
fwait
pop
jl
cdq
cdq
xchg
jo
cmp
aam
xchg
bound
mov
shr
mov
pop
jecxz
mov
xchg
cmp
pop
cmp
popf
sahf
lahf
jg
movs
aas
mov
cmp
sub
outs
mov
ins
dec
push
xchg
imul
lahf
add
jle
jl
pop
int3
jge
jno
mov
aaa
push
test
xor
inc
scas
pop
add
jle
push
cmp
bound
push
fs
ror
outs
push
pop
fcmovnu
add
dec
in
cmp
pop
mov
push
mov
cmp
loope
repnz
test
adc
add
mov
sbb
jae
sbb
inc
fidiv
adc
jg
mov
or
adc
adc
or
std
inc
or
or
sub
nop
add
(bad)
sbb
(bad)
cmp
in
in
push
add
add
repz
test
xor
mov
add
add
rcr
bswap
data16
pop
cmp
pop
clc
pop
and
xor
dec
aas
inc
les
push
add
add
hlt
add
sbb
pop
(bad)
scas
add
and
dec
sub
xchg
lods
xor
mov
pop
(bad)
aas
hlt
(bad)
sub
inc
add
add
pop
aaa
sub
xchg
push
add
adc
cmp
xchg
add
mov
and
sub
sahf
fcomip
gs
jmp
pop
iret
je
push
(bad)
jg
dec
ins
inc
pop
not
cmp
jno
jmp
imul
lgs
push
add
adc
cmp
adc
dec
ror
sahf
inc
mov
inc
(bad)
adc
and
and
mov
mul
jae
(bad)
aas
loope
(bad)
push
dec
shl
dec
iret
imul
sub
outs
dec
pusha
call
jmp
stc
sbb
outs
add
bound
call
es
jae
lock
sti
aaa
xchg
inc
dec
pop
lock
enter
test
mov
pop
fiadd
pop
pop
add
out
and
mov
std
(bad)
hlt
jmp
sbb
sbb
shr
jno
ds
dec
inc
cld
jmp
call
pop
jo
dec
jg
inc
jp
jmp
js
(bad)
mov
out
pop
or
pop
inc
adc
cmp
adc
sbb
and
aas
rcr
jno
and
hlt
loopne
clc
aas
rcr
xor
push
lock
(bad)
sti
outs
push
inc
push
call
imul
ins
jmp
jl
sbb
mul
pushf
or
inc
call
push
push
mov
and
fild
aas
push
dec
inc
mov
inc
or
xchg
jbe
imul
push
add
das
(bad)
(bad)
jg
call
sbb
data16
inc
and
adc
adc
sar
ins
pop
(bad)
pushf
jl
xchg
pop
dec
jbe
dec
addr16
mov
fistp
fdivr
pop
pop
aaa
pop
shl
cs
jg
pop
inc
xlat
pop
int3
outs
(bad)
(bad)
pusha
fs
ret
mov
call
das
mov
sbb
push
adc
dec
jl
add
ss
mov
aaa
pop
push
cmps
mov
cmps
pusha
jmp
arpl
jnp
sti
jg
sbb
jo
sar
(bad)
adc
mov
lods
pop
inc
call
icebp
ret
comiss
call
(bad)
jmp
mov
jmp
inc
fimul
(bad)
pop
inc
add
mov
push
dec
cmp
pop
mov
jge
scas
sub
dec
pop
pop
dec
jg
lahf
push
push
popa
shr
outs
fadd
(bad)
add
std
jg
aad
call
jae
cmp
and
cmp
out
aas
jle
jmp
and
sbb
fidiv
mov
jl
stc
test
mov
mov
addr16
xlat
gs
dec
mov
aam
or
push
push
cmp
icebp
jge
pop
enter
das
xchg
pop
popa
in
xchg
(bad)
inc
pop
movntq
jg
mul
pop
(bad)
call
cmp
pop
ins
imul
(bad)
pop
pop
pop
out
or
pop
pop
sbb
ud0
jbe
outs
not
(bad)
(bad)
fsub
pop
sub
fcmovne
inc
(bad)
pop
lahf
push
dec
imul
jnp
das
mov
ins
lea
jl
mov
xor
fdivrp
add
aaa
sbb
jo
jle
jno
neg
mov
push
aas
jmp
dec
fld
call
leave
push
inc
(bad)
sti
sbb
call
or
mov
in
mov
(bad)
jg
jmp
cmp
(bad)
inc
gs
(bad)
(bad)
(bad)
(bad)
out
ins
or
cmps
mov
inc
(bad)
ds
(bad)
pop
dec
rcl
pop
shl
call
jmp
inc
push
push
push
push
div
jge
cmp
daa
dec
daa
test
xchg
jae
sar
or
push
(bad)
(bad)
push
sti
std
adc
push
dec
sbb
jl
push
push
add
shl
addr16
inc
lahf
outs
(bad)
dec
mov
fisttp
retf
lds
cmps
int3
das
addr16
rcr
jecxz
rol
pop
jle
arpl
inc
jle
jbe
pop
call
adc
inc
add
(bad)
(bad)
cmc
jnp
pop
cmps
jmp
iret
popw
je
or
mov
pop
pop
dec
into
imul
rcr
xchg
ja
push
(bad)
(bad)
(bad)
call
jmp
inc
pop
ud0
fcom
inc
jmp
dec
mov
xlat
mov
les
lahf
jle
xchg
aaa
pop
enter
(bad)
pusha
cs
pop
test
xchg
mov
clc
jle
dec
ja
daa
inc
cmp
mul
imul
jmp
inc
aaa
xchg
cwde
pop
push
add
aas
push
aas
sbb
push
cli
or
sbb
(bad)
fxch
xchg
pop
push
jne
(bad)
push
and
(bad)
dec
iret
inc
cmps
jmp
dec
into
aas
push
idiv
lock
cmp
test
pop
dec
iret
addr16
data16
int3
rsqrtps
cmp
jg
ins
addr16
mov
sub
(bad)
mov
sbb
push
mov
movs
adc
das
out
(bad)
jmp
fcom
mov
loop
imul
aam
xchg
das
(bad)
(bad)
push
aaa
pop
subps
movs
pop
push
into
ins
jno
bnd
daa
push
retf
dec
int3
push
sti
(bad)
cmc
aas
pusha
push
xor
jmp
sub
push
xor
cmp
in
pop
pop
dec
stos
xchg
cmp
ja
lahf
mov
std
test
(bad)
ja
sar
mov
dec
ins
inc
inc
std
add
sar
dec
retf
imul
scas
(bad)
(bad)
pop
pop
sbb
fistp
inc
mov
in
(bad)
das
lahf
pop
mov
movs
cmp
in
test
ud0
pop
cmp
(bad)
(bad)
(bad)
loopne
lock
call
fistp
iret
mov
cli
(bad)
sar
pop
dec
inc
xor
add
pop
pop
iret
jne
push
jmp
inc
call
or
add
imul
retf
rcr
ret
out
test
sar
xchg
jns
out
jg
pop
jge
lahf
lods
fwait
das
cdq
mov
mov
das
(bad)
aas
gs
das
xchg
cmp
jg
inc
push
(bad)
dec
pop
(bad)
(bad)
cmp
std
add
icebp
retf
imul
and
mov
jg
aaa
movs
in
dec
(bad)
(bad)
fmul
cmp
xlat
test
in
sbb
mov
xchg
in
(bad)
inc
pop
inc
std
(bad)
(bad)
jmp
pop
(bad)
jg
ss
xor
sub
aas
fcmovnb
push
add
and
push
aas
sbb
xchg
gs
mov
(bad)
jmp
lea
push
clc
popa
mov
inc
ja
and
xor
cmp
(bad)
cmp
pop
je
cmp
push
xor
cmp
adc
sub
iret
push
pop
add
arpl
xor
mov
sti
mov
retf
mov
xlat
mov
sub
add
cs
ret
mov
push
cmp
add
cmps
inc
out
loop
out
cmp
mov
test
int
cmps
idiv
add
das
lds
imul
mov
cmps
cdq
pop
jo
aas
push
inc
sbb
fwait
sub
das
add
(bad)
retf
(bad)
jmp
(bad)
lahf
jmp
js
push
cmp
push
and
pop
inc
outs
push
sbb
mov
imul
clc
pop
xchg
(bad)
(bad)
cmc
leave
rcl
cmp
das
add
add
push
addr16
inc
push
inc
sbb
dec
cmp
mov
add
push
inc
push
(bad)
cld
lock
pavgb
push
dec
jae
in
add
rol
(bad)
retf
adc
add
push
movq
xor
ret
mov
inc
add
mov
out
call
push
icebp
pop
mov
add
(bad)
dec
cld
int
add
ficomp
add
fcomp
(bad)
ja
add
scas
cmp
add
les
fcmovnb
dec
jecxz
push
add
loope
add
aam
sar
xchg
(bad)
pop
add
test
add
mov
cmp
shl
sti
cmp
leave
ret
xor
scas
nop
xchg
out
fcomip
mov
xor
stos
xor
aad
iret
iret
mov
xchg
inc
mov
jg
jg
test
lods
push
lods
xor
ja
mov
mov
pop
jmp
push
add
fimul
loope
dec
test
mov
loopne
lock
and
pop
mov
add
sahf
xor
push
add
out
jle
retf
and
fimul
ds
out
mov
test
sub
jae
inc
pop
jg
push
cs
add
push
ds
mov
rcr
fadd
retf
and
add
fild
rcr
out
sub
ss
add
fisubr
pop
and
sub
lahf
pop
int
ficom
movs
not
jne
push
aaa
inc
cmp
pop
fsubr
sbb
jg
aaa
mov
xchg
mov
sub
sbb
xchg
sar
js
mov
inc
aas
push
add
mul
push
jg
arpl
push
pop
out
imul
lea
add
ucomiss
cdq
loope
lock
push
cmp
sbb
xchg
lods
aas
sub
clc
xlat
mov
out
mov
xchg
js
retf
xchg
or
xchg
mov
jmp
pcmpgtb
mov
jg
dec
mov
add
cmps
ret
pop
jl
std
retf
mov
add
popf
aas
mov
push
xchg
xchg
jns
mov
sbb
adc
jno
add
fisttp
push
mov
outs
jno
(bad)
iret
pop
js
popa
sub
out
ins
lahf
sub
(bad)
popf
xor
scas
sar
int
cmp
das
jnp
pop
mov
add
icebp
cmp
xlat
jns
addr16
sub
jnp
pop
and
jns
daa
mov
adc
pop
mov
jecxz
sti
outs
mov
aaa
mov
addr16
fbstp
pop
sub
xor
out
vhsubps
cmp
mov
ja
arpl
inc
sti
xchg
fimul
pop
fs
ins
iret
inc
daa
add
(bad)
(bad)
rol
test
ja
icebp
loopne
popa
rcr
pop
addr16
ds
sbb
sbb
out
mov
cmp
inc
mov
and
pop
push
adc
cmp
aas
inc
push
cmp
lock
sbb
inc
mov
xchg
loope
daa
pop
pop
or
das
jb
mov
cmp
sbb
movs
outs
aaa
dec
xchg
mov
(bad)
jg
dec
and
mov
neg
(bad)
cmp
call
retf
out
rol
repz
arpl
dec
lahf
pusha
pop
push
fsub
ss
push
lahf
push
jp
jle
or
inc
mov
mov
ss
cdq
and
jg
ret
das
cs
int
pop
dec
inc
mov
pandn
inc
stos
popf
daa
mov
outs
pop
mov
dec
movs
cwde
lahf
dec
jae
sub
push
pusha
aas
jl
aas
jg
and
pop
daa
pop
or
aas
addr16
dec
cmps
sbb
cmp
jbe
std
sahf
hlt
(bad)
(bad)
xchg
jmp
adc
mov
fcomi
stc
cld
(bad)
ds
jge
pop
nop
jle
xchg
ins
add
mov
mov
mov
ins
sbb
scas
mov
aas
(bad)
(bad)
(bad)
movs
xchg
xchg
xchg
jb
test
mov
mov
retf
cli
nop
mov
(bad)
idiv
mov
jno
mov
mov
pop
xchg
fld
les
mov
mov
fistp
jl
mov
jb
mov
jle
mov
xlat
cmc
gs
out
fbstp
pand
ror
pop
add
add
retf
mov
xchg
mov
cmc
fcomi
xchg
(bad)
(bad)
(bad)
fisttp
mov
sar
nop
xchg
mov
mov
jne
movs
lods
mov
stos
adc
jb
mov
jnp
mov
push
stos
stos
mov
ror
call
ret
push
repz
loopne
mov
aam
shl
call
pop
loopne
push
(bad)
(bad)
mov
ret
ins
ja
addr16
jnp
push
dec
inc
pop
ds
dec
(bad)
fwait
sbb
lds
xor
shr
call
adc
jnp
jne
addr16
jge
int3
icebp
mov
aas
dec
xor
(bad)
jmp
(bad)
fdivr
in
loop
jle
mov
pop
popf
nop
cmps
(bad)
call
xor
daa
lock
test
icebp
xor
popa
mov
test
push
retf
push
jle
mov
inc
pop
xor
pop
call
push
xor
mov
jbe
fidiv
leave
popf
loop
call
jg
sub
pop
in
sub
jmp
inc
sti
test
fcmovu
nop
pop
leave
das
pop
ffreep
jmp
ret
inc
out
xchg
pop
pop
xor
sub
push
mov
stc
jmp
xchg
dec
loope
xchg
fwait
pushf
nop
leave
(bad)
scas
movs
loop
inc
call
or
loopne
sub
ss
mov
dec
ficom
jle
(bad)
(bad)
in
lds
rcr
or
pop
repz
cld
aas
mov
pop
fcom
inc
inc
(bad)
mov
in
add
jg
pop
movs
mov
mov
mov
ret
jg
ret
std
pop
iret
dec
(bad)
aad
rcl
ret
ret
popf
jl
shl
(bad)
movs
clc
push
mov
xchg
inc
jo
dec
iret
rcl
lods
jb
rcl
mov
(bad)
cmps
nop
jbe
pop
mov
push
mov
mov
mov
test
jecxz
mov
mov
push
mov
int3
pop
loope
mov
outs
mov
jl
mov
icebp
push
test
imul
ja
stc
pop
pop
pop
xor
rcr
xor
les
std
xchg
xchg
lds
push
mov
stos
dec
mov
jg
cvtdq2ps
jg
jge
mov
shl
inc
js
dec
mov
sub
dec
mov
int
mov
arpl
pop
pop
enter
cld
pop
les
rcl
stos
ds
std
aas
das
jnp
lods
scas
jg
bound
(bad)
mov
pop
imul
nop
int
pushf
jbe
movs
inc
and
fcomp
add
test
pop
neg
in
adc
cdq
cdq
and
cli
jecxz
push
xchg
popf
jbe
jae
mov
jge
test
xor
jno
push
jb
jmp
std
xchg
xchg
mov
push
(bad)
nop
jl
outs
pop
out
outs
jo
or
ds
jmp
jp
addr16
jge
bound
jl
dec
test
pop
pop
and
adc
clc
adc
and
push
loope
retf
cmp
and
and
jbe
pop
xor
xor
dec
push
dec
push
test
push
push
pop
scas
xlat
inc
js
dec
sub
xor
add
inc
inc
out
adc
xor
sahf
lea
add
adc
adc
and
sbb
pop
pop
push
pop
dec
add
and
dec
movs
xchg
add
add
mov
mov
fadd
adc
pop
adc
xchg
inc
or
or
mov
les
mov
push
dec
paddd
and
pop
add
add
fldcw
cdq
cmps
sysret
cld
imul
jo
loopne
inc
dec
push
sar
movs
sbb
mov
jns
out
pop
lock
inc
push
aas
inc
add
fwait
inc
push
nop
add
call
sahf
jg
clc
push
rcl
pop
mov
xchg
mov
dec
and
add
inc
adc
add
pop
es
fisubr
pop
(bad)
sti
cmp
or
xor
adc
or
push
pop
or
aam
sub
pop
(bad)
inc
or
sub
push
ins
cmp
adc
push
jg
mov
add
movs
in
jl
lahf
sahf
sbb
xor
and
and
sahf
xor
mov
(bad)
call
inc
cwde
push
sar
xchg
dec
shr
jb
les
push
push
add
(bad)
mov
mov
jns
adc
jno
sub
call
cld
pop
inc
adc
inc
xor
adc
push
mov
pop
outs
sub
add
add
inc
push
sbb
sbb
sbb
jmp
and
mov
pop
shl
push
data16
xor
les
jle
(bad)
(bad)
(bad)
inc
dec
retf
addr16
xor
inc
out
adc
sbb
dec
cmp
(bad)
mov
dec
pushf
jp
xlat
add
mov
inc
mov
pop
adc
arpl
dec
cmp
push
ret
or
sub
xor
or
clc
inc
push
pop
adc
aaa
es
inc
xchg
push
jmp
popa
sar
pop
shl
push
shr
mov
pop
iret
ins
push
pop
int3
push
dec
std
call
(bad)
(bad)
cmp
sbb
jge
adc
cmps
adc
out
xor
add
(bad)
outs
pop
(bad)
(bad)
jg
xchg
xchg
jg
adc
js
push
(bad)
gs
push
test
loopne
jmp
(bad)
test
(bad)
adc
aam
(bad)
jmp
sub
dec
xor
int3
ja
pop
shl
movs
push
lock
jmp
inc
mov
hlt
dec
shl
dec
into
push
mov
mov
push
mov
mov
pop
outs
stos
xchg
(bad)
stos
xchg
sahf
jnp
jnp
xor
ja
jno
je
addr16
xchg
lock
pop
sub
dec
push
pop
jp
mov
das
cmc
jae
sbb
mov
fstp
ds
jns
dec
and
jmp
sub
mov
ins
cmc
out
(bad)
xor
or
aas
pop
icebp
mov
adc
jb
int3
cmp
fs
neg
xchg
imul
cmp
inc
aaa
mov
loopne
loopne
jne
mov
pusha
adc
ins
cmp
push
cld
add
cmp
pop
ja
jle
call
mov
or
add
pop
dec
pop
dec
adc
dec
cmp
add
cld
in
and
sbb
mov
add
dec
inc
sub
or
ds
idiv
lods
test
dec
(bad)
mov
repz
adc
(bad)
jmp
or
push
and
das
adc
inc
inc
pop
ret
nop
gs
pop
push
cld
dec
addr16
mov
sbb
popf
sbb
cmps
mov
xchg
jo
push
sahf
jbe
icebp
das
(bad)
aaa
xor
lds
mov
jmp
push
pop
ins
push
or
mov
(bad)
(bad)
mov
popw
jb
adc
pop
dec
adc
inc
xor
or
jg
push
add
add
sub
outs
loope
lods
out
pop
into
jne
sub
(bad)
aaa
adc
call
sbb
and
test
pop
fld
ins
daa
or
js
pop
mov
jg
pop
lahf
test
inc
xchg
cmps
pusha
pop
daa
adc
pop
loope
xchg
xchg
call
jge
pop
push
pop
xor
call
je
dec
mov
inc
scas
dec
lss
jp
push
and
dec
inc
push
pop
cwd
loop
dec
out
xchg
add
dec
xchg
js
jne
outs
pop
pop
cmc
sub
mov
loopne
pop
addr16
dec
mov
cmc
aas
pushf
push
jmp
and
pop
push
daa
push
or
mov
cwde
ja
mov
fbld
pop
inc
pop
dec
popa
cmc
out
iret
addr16
into
push
leave
pop
pop
pop
(bad)
in
cmp
(bad)
dec
jg
xchg
lock
mov
sub
bsf
xor
mul
push
mov
scas
jmp
mov
inc
xchg
cmp
jmp
dec
xchg
(bad)
in
xchg
iret
push
inc
adc
add
adc
xchg
dec
pop
(bad)
(bad)
(bad)
jmp
jo
mov
adc
adc
pop
inc
sbb
ja
pop
dec
inc
das
pop
cs
inc
das
xchg
ja
and
test
out
dec
push
cld
mov
ja
lds
xor
xlat
and
push
jno
das
fidivr
daa
cmp
arpl
jns
pop
xchg
pop
mov
adc
dec
mov
das
popa
lock
sub
(bad)
jge
pop
pushf
add
jge
ja
mov
xchg
pop
fwait
mov
dec
dec
inc
lock
inc
push
jg
and
sub
loopne
and
sub
data16
mov
xchg
pop
xchg
inc
push
jno
jg
jl
cld
cmp
call
dec
les
push
or
mov
push
push
cs
pop
retf
mov
pop
cld
clc
sub
pusha
inc
scas
pop
mov
iretw
lahf
ds
(bad)
aas
outs
xor
ins
pop
dec
cmps
das
cmp
sub
scas
out
cmp
cmp
outs
sbb
movs
nop
sbb
add
pop
xlat
mov
push
inc
pop
jg
stc
inc
(bad)
add
pop
add
data16
test
fidivr
sub
clc
fist
iret
push
into
das
pop
fbld
das
lock
cmp
push
int3
jo
mov
xchg
es
cs
push
jo
xlat
fadd
jg
shr
js
pop
(bad)
popa
add
(bad)
cmp
push
adc
push
push
push
sub
cmps
xchg
sbb
push
mov
daa
jmp
pop
test
jg
jle
js
rol
adc
fidivr
outs
iret
(bad)
jp
mov
addr16
(bad)
js
jg
cmp
cmovge
push
pcmpgtd
mov
sar
(bad)
push
push
sbb
lahf
xchg
add
sbb
(bad)
mov
dec
lahf
inc
pop
sahf
sub
push
call
out
scas
lahf
and
out
mov
sub
fwait
pop
push
dec
sbb
mov
pop
fidivr
mov
not
iret
imul
repnz
shl
dec
push
or
js
mov
retf
jae
(bad)
jo
jecxz
aas
int3
(bad)
dec
into
addr16
loop
jo
iret
dec
outs
mov
lea
xchg
dec
daa
(bad)
jo
mov
xchg
out
mov
es
lock
stos
sub
mov
dec
sbb
ins
fidivr
les
mov
inc
push
cwde
jb
adc
jnp
pop
jne
(bad)
neg
pop
pop
retf
outs
sahf
inc
cmp
inc
jne
jle
loopne
push
out
push
dec
lahf
mov
inc
cld
and
pop
push
push
scas
ud0
iret
dec
(bad)
jns
jecxz
pop
dec
mov
jge
lock
out
movs
sub
mov
push
push
mov
scas
movs
mulps
loopne
adc
inc
aaa
sbb
call
inc
dec
inc
(bad)
jns
push
mov
and
clc
clc
push
dec
xor
test
daa
pop
scas
dec
jp
push
mov
cmp
inc
mov
test
and
les
(bad)
lock
push
pshufw
pop
ret
jmp
fiadd
enter
cld
pop
std
mov
outs
push
adc
out
pop
lock
mov
pop
mov
rol
inc
aaa
sbb
dec
jp
ds
push
fiadd
aas
dec
push
inc
jb
clc
push
std
push
push
jnp
das
cmp
inc
nop
xchg
push
ret
(bad)
icebp
pop
jge
dec
mov
xlat
jne
push
icebp
sub
push
push
iret
outs
aas
lods
jo
jle
outs
jno
push
loop
dec
iret
(bad)
pop
pop
cmp
xor
push
call
jle
jp
out
add
mov
test
inc
add
inc
jo
xchg
and
hlt
add
outs
sbb
jecxz
adc
cs
arpl
fimul
std
js
cli
pop
inc
push
dec
inc
das
xchg
pop
jl
cli
loop
aas
out
cmp
sub
js
pop
xchg
mov
pop
popa
sar
std
jne
push
(bad)
pop
shl
mov
jno
jecxz
pop
sub
pop
aaa
sub
dec
sub
cs
lahf
pop
push
adc
jnp
push
lahf
test
adc
or
(bad)
xchg
js
inc
les
je
xchg
inc
mov
jecxz
adc
movups
pop
inc
sub
jb
cmp
pop
pop
jge
outs
loopne
sysret
pusha
fild
sub
dec
pop
(bad)
imul
clc
and
scas
sbb
rcr
jno
sbb
data16
je
mov
push
(bad)
push
pop
cmp
mov
xchg
fistp
jns
push
test
test
inc
adc
push
adc
inc
je
outs
or
(bad)
jbe
inc
push
xchg
xchg
sbb
inc
xor
mov
data16
sbb
mov
push
(bad)
push
mov
inc
pop
ds
loop
cmp
(bad)
(bad)
fisttp
js
out
inc
out
dec
cmp
pop
push
ds
push
shl
(bad)
je
mov
test
outs
cs
adc
sahf
push
iret
pop
pop
es
(bad)
ja
mov
push
pop
out
dec
jle
js
outs
pop
cmps
push
mov
call
daa
inc
imul
cmp
adc
pop
es
jl
pop
sub
sahf
and
pop
fild
das
xchg
push
pop
inc
inc
sbb
jbe
js
stc
jl
or
dec
lahf
inc
mov
or
imul
sub
or
es
test
pop
pop
addr16
es
sti
test
lahf
dec
bound
dec
inc
leave
js
mov
lahf
dec
nop
aas
cmp
xlat
data16
lahf
inc
push
inc
out
inc
push
add
jg
add
fcmovb
stos
sub
xchg
cs
icebp
cmp
and
mov
adc
add
emms
inc
inc
adc
and
imul
shl
dec
int
mov
cmp
push
daa
jp
xlat
xchg
jbe
sahf
jg
mov
xor
pop
xor
mov
(bad)
aas
mov
sub
xor
and
mov
and
sub
mov
call
or
daa
fcmovbe
add
mov
int3
mov
aas
mov
inc
mov
jmp
adc
popf
xchg
scas
mov
daa
popa
push
out
inc
(bad)
mov
arpl
xor
inc
pop
out
int3
gs
pop
pop
sbb
dec
ja
jnp
(bad)
xchg
dec
mov
lock
(bad)
jne
dec
aas
jg
sub
sub
mov
jbe
daa
xchg
mov
xlat
cmps
out
pop
mov
cmp
call
enter
repnz
adc
clc
fild
mov
pop
dec
cmp
popf
jne
fistp
dec
loope
dec
inc
call
mov
call
pop
mov
and
mov
js
dec
lahf
(bad)
sub
pusha
mov
xor
jle
inc
scas
pop
lahf
int3
inc
into
daa
mov
retf
ins
lods
scas
sub
daa
das
scas
clc
loope
fidivr
xor
inc
mov
sbb
out
adc
test
data16
aas
push
cmps
pop
xchg
inc
stos
pop
out
and
movs
xchg
in
(bad)
(bad)
(bad)
call
sbb
dec
cmp
sbb
jnp
pop
xchg
push
test
jbe
mov
push
inc
dec
(bad)
cld
mov
mov
sub
ret
xchg
dec
(bad)
jnp
jne
dec
jo
push
pop
idiv
fisttp
neg
pop
push
rol
inc
jae
xor
sahf
ret
xor
pop
inc
mov
ss
int
nop
cmp
ja
(bad)
and
xchg
mov
inc
mov
sub
(bad)
call
inc
daa
or
jle
pop
mov
pushf
jp
out
fist
adc
cmps
mov
push
sbb
aam
push
ins
adc
cmps
xchg
fadd
xchg
pfmul
xchg
mov
dec
dec
cmp
loopne
xchg
ja
daa
pop
fisttp
shl
mov
pusha
mov
inc
mov
pop
(bad)
mov
clc
jmp
mov
mov
pusha
stos
mov
sahf
mov
retf
dec
lods
popa
cmps
mov
push
push
idiv
jg
inc
es
inc
stos
pop
stc
es
sub
mov
(bad)
pop
sbb
je
repnz
inc
pop
adc
xor
xchg
add
mov
addr16
(bad)
push
push
addr16
pop
lahf
push
mov
xchg
pop
inc
jecxz
pop
das
sbb
or
pop
pop
pop
in
mov
lea
xchg
push
push
(bad)
mov
inc
push
push
stos
mov
jg
inc
pop
outs
div
pop
mov
pop
sub
pop
and
pop
jnp
sbb
jle
pop
mov
aas
dec
pop
jmp
or
cmc
inc
xchg
(bad)
xchg
ja
pop
jae
rcr
scas
jmp
clc
lock
mov
push
lods
cmps
sub
aaa
repnz
dec
ret
inc
inc
mov
pop
pop
and
mov
ret
add
les
adc
xlat
addr16
ja
retf
push
mov
pop
rol
addr16
sub
sub
retf
adc
psllw
icebp
or
push
in
pushf
rcl
lgs
scas
pop
xchg
aam
inc
shl
pop
iret
jne
je
lahf
jp
aaa
call
js
mov
aas
mov
out
popa
mov
inc
xchg
inc
sbb
jg
mov
(bad)
call
mov
sub
push
js
js
ud1
ret
jnp
jecxz
xchg
ja
aaa
(bad)
clc
shl
dec
leave
addr16
push
dec
mov
cmp
std
and
retf
aaa
fistp
sub
sbb
jg
repnz
arpl
pop
shr
mov
and
lahf
push
jnp
iret
jbe
push
adc
ret
pusha
inc
push
shl
test
pop
cmc
arpl
lahf
xor
add
das
adc
dec
cmp
movnti
ret
cmps
pop
(bad)
(bad)
inc
xor
movs
push
std
dec
ret
arpl
inc
cwde
js
push
push
lock
int
and
jle
add
retf
mov
mov
das
test
int3
xlat
xlat
(bad)
rol
out
into
mov
lds
aam
mov
out
xchg
rcl
cmps
xor
sub
dec
sub
inc
gs
std
cmp
hlt
dec
adc
cld
adc
push
cmp
idiv
dec
pop
inc
(bad)
push
cmp
ja
inc
jb
inc
xchg
xor
call
jl
cmp
xchg
cdq
pop
stc
cs
xor
sub
imul
pusha
xor
repz
movs
sbb
sbb
pop
les
xor
icebp
inc
fsub
fldcw
push
arpl
clc
loopne
aam
adc
xchg
pop
xor
ror
ss
sub
cwde
mov
call
pop
dec
mov
cs
stos
xchg
inc
inc
cmp
std
inc
dec
inc
xor
sub
dec
dec
cmp
hlt
pop
pop
les
jae
cld
aaa
cmp
shl
std
jmp
daa
enter
aam
inc
xor
sub
sub
push
add
sbb
xor
cld
add
lahf
idiv
jmp
out
cmps
push
xor
sbb
pop
mov
outs
(bad)
dec
jecxz
mov
into
jg
mov
ss
ss
mov
adc
call
call
cmp
sub
sbb
cmp
push
xor
pop
fild
add
cmp
sub
sub
inc
mov
jmp
and
push
(bad)
jmp
push
(bad)
mov
(bad)
jg
fcmovb
inc
(bad)
(bad)
mov
sbb
xchg
fbstp
scas
das
pop
in
inc
dec
shl
std
pusha
dec
push
push
inc
aas
add
cmp
add
sub
xchg
push
mov
mov
aas
es
dec
and
das
mov
retf
lods
mov
je
iret
enter
out
fs
add
sbb
shl
cmps
pop
mov
daa
stos
inc
mov
mov
scas
(bad)
call
in
adc
call
and
jmp
(bad)
jbe
(bad)
movs
das
leave
stos
dec
pushf
pop
scas
pop
(bad)
call
mov
jle
inc
mov
cmp
and
aaa
dec
fild
add
popa
and
shl
pop
mov
mov
shl
(bad)
ja
rol
pop
(bad)
push
bswap
out
rcr
cmp
clc
das
lods
mov
daa
inc
jg
icebp
pop
sbb
add
lahf
push
sub
retf
stos
(bad)
xlat
mov
jmp
cmps
jmp
fstp
jmp
pop
(bad)
clc
repnz
xor
(bad)
mov
stos
pop
popf
pop
pop
clc
inc
jb
(bad)
int
std
out
pop
(bad)
call
call
ficomp
loope
pop
cmc
outs
jmp
dec
(bad)
jle
sub
add
outs
xor
push
push
inc
sbb
sub
dec
mov
stos
shl
sahf
xchg
inc
ins
mov
push
mov
sub
push
inc
sbb
dec
sbb
push
daa
sbb
xor
and
cmovge
jmp
add
popf
loop
inc
(bad)
clc
cmovge
sahf
jo
cld
les
xor
aas
leave
adc
or
jae
enter
add
sub
pop
cmp
sbb
sbb
jg
sbb
mov
pop
jmp
bound
aas
cld
add
sbb
pop
jbe
xor
sbb
cmps
test
sub
addr16
sbb
(bad)
adc
sbb
add
xor
xor
adc
ret
or
iret
add
outs
inc
inc
add
xor
loope
and
cdq
pop
adc
add
pop
retf
adc
xchg
mov
pop
pop
xchg
mov
sbb
cmps
cmps
icebp
sahf
sub
add
out
shr
mov
loopne
sub
stc
push
inc
ror
jecxz
push
sbb
add
sbb
icebp
dec
stos
add
jl
add
add
adc
mov
add
into
add
popa
mov
sbb
add
mov
ret
fdivr
loop
add
mov
sbb
add
and
jo
push
push
and
sub
or
inc
add
lock
sub
adc
or
adc
push
aas
pop
or
daa
cld
jmp
push
js
popf
or
sbb
or
mov
in
mov
aam
and
addr16
aas
push
ss
push
add
push
add
jl
or
aas
pop
xor
adc
and
adc
popa
cmps
rcl
add
or
pop
add
add
adc
jae
xchg
scas
or
inc
inc
inc
inc
push
push
xor
out
mov
not
sti
jae
or
inc
dec
pop
dec
repz
in
push
adc
ss
mov
add
xchg
inc
push
adc
xor
or
jg
ins
rol
pusha
or
sub
adc
lds
inc
cmp
sbb
xor
push
test
xchg
lea
inc
stos
and
pop
push
popa
mov
and
repnz
add
xor
add
fld
adc
xchg
mov
adc
dec
add
push
sub
sbb
and
clc
cmp
sbb
lahf
push
sbb
outs
sbb
adc
adc
mov
lock
jge
adc
xor
add
mov
pop
daa
js
add
mov
dec
inc
dec
and
inc
inc
inc
or
ja
mov
stos
or
sbb
jns
aaa
jp
repnz
mov
jmp
or
adc
mov
and
dec
inc
add
lahf
les
pop
pop
adc
inc
sub
adc
mov
nop
push
lock
adc
jbe
mov
inc
or
rol
or
fild
js
jmp
dec
inc
mov
add
add
fcomp
movs
mov
ins
ins
stos
pop
add
xchg
cld
xchg
inc
add
and
xor
sub
xchg
mov
xor
repz
mov
mov
adc
add
imul
and
ja
lock
xor
jne
ud0
xlat
push
sub
add
and
mov
mov
push
sub
add
rcl
cmps
mov
sbb
pop
add
fild
pop
sbb
dec
jb
or
add
lock
or
ret
adc
add
or
mov
inc
push
sahf
movntps
cs
add
mov
pop
sbb
mov
nop
aaa
push
js
scas
and
mov
or
cmp
jle
pop
pop
add
fisubr
xor
mov
xor
add
ror
das
add
pop
jecxz
add
inc
arpl
lds
rol
add
cmp
xchg
mov
push
adc
push
cmp
rcr
mov
es
test
add
ins
sbb
ror
daa
sbb
lock
test
psubb
iret
xor
and
and
pop
inc
or
inc
pop
ret
sbb
inc
lahf
cmp
add
add
adc
daa
mov
push
outs
inc
outs
or
enter
add
jecxz
shl
sub
sbb
mov
push
add
pop
push
or
cmp
push
cmp
add
sbb
jno
(bad)
lock
pop
scas
test
jae
fs
mov
xor
aas
wbinvd
mov
jns
adc
icebp
fdivr
xchg
add
sbb
sbb
inc
push
inc
dec
mov
add
pop
or
add
retf
iret
dec
xchg
fisttp
pop
xor
add
xchg
sbb
retf
or
push
repnz
xor
inc
xchg
jb
pop
inc
retf
sbb
ss
jmp
mov
pop
test
xor
push
pop
xor
and
imul
jbe
adc
sti
add
xor
or
or
movs
push
loopne
arpl
ins
adc
rol
ret
fwait
and
adc
shl
or
(bad)
xor
es
mov
fidiv
addr16
add
add
rol
mov
sub
or
cld
scas
push
cmp
out
add
sub
mov
ins
ror
enter
pop
xor
or
or
sbb
jns
jae
sbb
retf
add
(bad)
into
xor
imul
ret
sahf
xor
ss
aaa
sub
shl
popf
or
lea
xlat
xor
mov
adc
sbb
movs
inc
ins
daa
adc
add
or
popa
(bad)
mov
jle
loop
or
add
inc
or
add
pop
inc
sbb
push
add
test
sgdtd
jne
add
inc
das
xchg
rcl
repz
jmp
enter
xor
inc
adc
xor
add
push
sub
add
pop
or
fisttp
out
add
sbb
add
add
outs
je
xchg
int
dec
jns
add
mov
sub
inc
mov
pop
repnz
icebp
add
mov
nop
mov
hlt
repz
repnz
les
js
in
imul
and
inc
sti
cli
add
clc
test
jmp
jmp
in
das
fcmovu
fild
mov
push
inc
mov
cld
add
jge
cwde
clc
add
and
mov
add
mov
adc
fsubrp
and
and
in
add
adc
sti
enter
jmp
mov
fsubp
call
loope
add
lock
stc
add
clc
rcl
rol
add
mov
add
add
add
mov
xchg
pop
add
addr16
int
dec
adc
adc
inc
movsx
dec
xchg
adc
pop
pop
add
push
push
sbb
stc
out
outs
aas
sbb
sbb
aas
sbb
sbb
and
and
and
and
and
ds
sub
aaa
mov
daa
sub
xor
sub
sub
aaa
sub
(bad)
fistp
or
add
cmp
push
(bad)
(bad)
cmp
push
add
xor
femms
and
sbb
xor
sub
sub
sbb
std
pop
adc
or
adc
or
adc
add
adc
adc
sub
addr16
sub
add
add
or
sbb
mov
movs
add
(bad)
lds
in
imul
add
xchg
cmp
pop
xor
in
inc
adc
add
(bad)
mov
mov
aad
aad
rcl
rol
retf
add
enter
jnp
mov
xchg
js
cli
mov
xchg
scas
cmps
cmps
cmps
jecxz
je
adc
push
pop
rcr
jle
mov
mov
cmp
dec
xor
add
add
repnz
(bad)
aam
rol
rcl
iret
lahf
mov
ret
push
mov
mov
mov
mov
repnz
(bad)
mov
mov
mov
mov
add
(bad)
std
(bad)
lea
test
fbld
mov
mov
cdq
cwde
add
out
rcr
int
int3
int
pop
enter
and
retf
mov
sar
stos
test
add
in
jecxz
xchg
cmp
in
mov
fmul
(bad)
xlat
xlat
add
dec
add
iret
cld
retf
iret
xchg
retf
lahf
ret
rol
ret
ret
setbe
mov
mov
dec
add
mov
test
mov
xchg
add
repnz
and
aam
out
repnz
cmp
out
iret
daa
repz
(bad)
shl
fneni(8087
loopne
rol
fidivr
js
push
inc
mov
mov
scas
add
inc
jecxz
out
shl
scas
fwait
stos
adc
add
scas
fwait
loopne
out
and
add
push
stc
inc
sahf
fcmovu
fcmovu
add
sar
cmp
pop
aaa
rol
inc
into
add
repnz
push
imul
ret
mov
add
je
add
mov
call
scas
pop
dec
push
jo
(bad)
scas
lods
stos
sar
add
cmps
add
movs
add
push
mov
jb
or
cwde
add
add
inc
or
add
nop
add
scas
add
cmp
mov
add
sbb
pop
jae
lds
les
pop
sub
sub
mov
daa
sub
xor
pop
mov
push
mov
jmp
jno
or
mov
pop
repnz
in
sbb
test
mov
inc
and
and
sub
cmp
ret
jl
fwait
jmp
je
add
dec
movs
push
mov
mov
add
aaa
cmp
mov
mov
ret
xor
or
or
adc
mov
ret
js
push
pop
xchg
cdq
jmp
and
cs
ret
jnp
inc
inc
dec
dec
push
stos
mov
ret
fisttp
add
sbb
scas
mov
xchg
sbb
pop
mov
adc
add
add
inc
dec
push
cmps
ins
ins
mov
add
fs
data16
scas
lods
lods
mov
int
outs
mov
or
lods
cmps
ror
or
mov
jg
lods
mov
nop
mov
jge
mov
lods
mov
add
pop
pop
pop
arpl
sub
push
js
or
push
(bad)
mov
movs
and
mov
std
add
jb
jbe
add
dec
dec
dec
push
fcos
add
xor
xchg
xchg
add
neg
jno
pop
pop
pop
popa
bound
lahf
outs
mov
jl
mov
and
and
ja
or
add
and
pop
enter
arpl
fwait
mov
loope
cmp
xchg
and
(bad)
outs
std
push
push
push
inc
push
aam
add
or
inc
xlat
ins
jns
out
dec
dec
inc
cmp
(bad)
jne
add
push
add
fadd
test
gs
and
sub
ins
cwde
add
mov
fild
adc
aam
jl
mov
cmp
inc
mov
add
jecxz
(bad)
jmp
jp
pushf
fs
movs
in
sub
add
cmp
or
add
mov
repnz
add
or
test
push
aam
dec
in
sbb
and
cmp
add
mov
sbb
scas
add
mov
sbb
add
add
add
cmp
push
inc
sbb
sbb
scas
enter
inc
add
inc
push
or
or
inc
adc
call
xchg
mov
test
adc
xor
and
call
and
add
add
fcmove
dec
xchg
adc
ss
xor
ficom
add
dec
pop
add
aaa
or
sub
je
and
fadd
adc
in
adc
adc
add
dec
fsubr
sub
daa
and
cmp
cmc
xor
dec
sbb
xor
adc
adc
adc
and
or
fwait
mov
gs
cmp
mov
adc
(bad)
int
cmp
adc
shr
inc
mov
leave
(bad)
les
xor
xor
lea
ret
inc
add
out
call
push
jbe
jo
push
in
dec
pop
pop
add
imul
jp
sub
xchg
add
out
push
mov
inc
xor
mov
daa
inc
or
or
and
and
fwait
and
pop
cmp
xchg
add
inc
cmp
ret
dec
push
cmp
adc
and
aaa
mov
xor
or
or
push
mov
adc
push
dec
repnz
mov
push
sbb
rcl
inc
ror
ss
shr
sbb
push
cmp
mov
cs
in
push
push
(bad)
outs
cmps
shr
add
adc
mov
adc
push
push
rol
jg
mov
push
xor
and
xchg
bound
mov
pushf
out
sbb
adc
add
mov
xor
ins
mov
(bad)
xor
dec
push
or
or
jp
cmp
adc
repnz
xor
std
sub
dec
ja
movs
push
mov
push
dec
xchg
mov
xor
xor
lea
push
and
or
mov
push
sbb
mov
sbb
cwde
and
jae
pop
or
fadd
sti
adc
push
inc
adc
and
nop
push
pop
pop
xchg
sar
aad
add
dec
push
outs
es
or
nop
xchg
push
cmp
add
or
ds
lds
cmp
adc
daa
sub
sub
loopne
add
fadd
add
cld
cmp
shl
ss
add
add
mov
call
push
push
fbld
push
push
nop
movs
mov
idiv
fdivr
jg
jg
jg
jg
jp
jmp
stc
call
xor
jg
jg
cmc
or
xchg
xor
sti
jmp
mov
jmp
scas
out
mov
push
add
xor
mov
or
jae
add
pop
imul
fisttp
jg
ret
(bad)
js
lods
jmp
jae
add
adc
jne
add
fnstsw
jp
fisttp
das
test
fild
add
cld
add
mov
sbb
loopne
xchg
pop
imul
adc
mov
pop
push
mov
lahf
cli
jb
push
fnstsw
outs
xchg
jp
xchg
call
pop
fcom
bound
iret
and
into
cmp
jp
out
xlat
into
cmp
mov
sbb
inc
fist
pushf
jae
adc
dec
and
dec
mov
ja
add
xchg
inc
outs
les
add
add
xlat
scas
mov
cdq
out
je
pusha
arpl
add
(bad)
dec
into
cmp
cmp
les
cmp
push
push
jp
and
mov
inc
mov
stos
arpl
inc
ins
scas
rcl
scas
jmp
in
imul
jae
movs
sbb
movs
add
add
and
cs
cmc
sbb
mov
jne
jbe
fimul
fisttp
or
add
jne
aaa
push
cmp
mov
mov
pop
daa
repnz
pxor
fld
push
pop
inc
inc
add
pop
outs
mov
daa
xor
mov
mov
dec
and
xchg
pop
out
fcmovu
stc
inc
pop
mov
arpl
xor
push
imul
cmp
pop
pop
(bad)
sbb
jne
add
test
push
test
bound
push
xlat
add
(bad)
fsub
push
repz
je
aad
mov
push
ja
push
neg
fist
test
dec
inc
pop
mov
add
inc
jg
cmps
aam
add
pop
push
fnstsw
and
fnsave
jb
fucomip
out
mov
dec
sub
daa
add
scas
add
fist
ror
jbe
jbe
xchg
cmp
and
jg
jp
div
xchg
push
rcl
in
mov
jo
jne
mov
fisttp
je
stos
(bad)
mov
fwait
(bad)
cmps
aaa
(bad)
in
adc
fbstp
inc
push
push
pop
(bad)
sbb
retf
mov
jg
lea
daa
pop
(bad)
lea
dec
jnp
jne
scas
fbstp
jae
iret
lahf
jle
ror
outs
mov
xor
fisttp
(bad)
int3
mov
xor
add
ins
dec
(bad)
(bad)
aas
add
add
push
sbb
imul
push
ret
mov
mov
xchg
adc
jmp
fbstp
shl
mov
jle
(bad)
pop
sub
mov
adc
add
(bad)
fist
imul
mov
push
mov
pusha
test
shl
fidiv
inc
jne
add
mov
adc
mov
pminub
push
pop
dec
mov
push
xlat
fld
inc
sbb
scas
test
push
es
fild
lods
jbe
mov
dec
outs
jmp
add
(bad)
pop
adc
imul
sbb
and
jne
xchg
dec
or
test
fwait
das
mov
loop
(bad)
add
xlat
imul
lods
retf
mov
push
retf
adc
xchg
push
iret
dec
aas
push
test
xor
out
add
push
push
pop
xor
xor
mov
fucomip
sbb
dec
(bad)
inc
xchg
out
ja
xchg
or
mov
out
pop
stos
mov
or
fild
mov
div
idiv
xor
xor
or
setbe
je
pop
loop
dec
jae
aaa
jbe
add
arpl
fsubr
mov
pop
lods
imul
loope
fld
inc
out
push
add
xlat
ins
and
adc
xchg
das
fsubr
outs
sahf
push
mov
jbe
fcom
fist
or
fld
cmp
adc
mov
bound
scas
push
pop
fild
jbe
scas
mov
mov
mov
fbstp
fidivr
push
push
stos
push
jmp
jno
jmp
(bad)
add
add
jmp
stos
adc
sub
xchg
jmp
stos
out
outs
in
xchg
pop
pop
ds
dec
ret
adc
add
push
lods
lods
or
xor
pop
dec
mov
lea
arpl
push
shr
imul
inc
loopne
outs
popa
jbe
jo
sub
test
(bad)
iret
and
icebp
mov
jmp
cwde
test
or
jecxz
xchg
add
push
aad
(bad)
pop
retf
cwde
add
or
jnp
movs
mov
pushf
or
adc
jno
scas
add
aas
nop
pop
inc
add
(bad)
or
inc
and
sbb
js
scas
push
arpl
fisubr
fstp
xchg
fild
add
mov
aad
imul
adc
ja
test
outs
sub
jbe
or
jne
xchg
ss
test
push
call
mov
push
dec
xchg
das
fadd
add
pop
test
adc
fdivr
stos
test
(bad)
(bad)
mov
inc
mov
cmps
rcr
jbe
jmp
jg
ror
mov
add
(bad)
fisttp
jmp
xchg
push
dec
or
pop
mov
pusha
push
jmp
or
das
mov
fistp
sub
push
das
pop
mov
jae
push
rcl
aaa
add
mov
xor
add
lahf
call
adc
push
cs
mov
pcmpeqd
jne
jmp
push
jmp
jecxz
xlat
adc
repz
pop
or
adc
sub
ret
dec
xchg
mov
jmp
test
jecxz
scas
sub
dec
inc
aad
add
fild
inc
adc
les
push
aas
fcmovnbe
push
mov
inc
das
(bad)
push
or
jmp
add
scas
fstp
ret
jae
add
bound
js
push
inc
mov
repnz
pop
imul
stos
mov
fisttp
call
add
das
idiv
mov
jbe
xchg
scas
sub
fild
mov
nop
mov
xor
and
(bad)
fnsave
cmp
sbb
fcmovu
arpl
sub
mov
inc
(bad)
jnp
inc
daa
cmps
inc
mov
mov
jbe
pop
out
mov
push
out
and
xchg
push
adc
ins
mov
imul
jg
scas
in
outs
xchg
imul
aas
jbe
sbb
jle
sub
outs
xor
repz
jp
mov
mov
add
into
cmp
outs
nop
popa
mov
stos
cs
cmp
or
mov
push
sub
mov
jno
sub
mov
lds
xchg
das
stos
shr
or
cdq
sbb
mov
mov
pop
stos
adc
cmps
mov
das
jae
mov
jmp
jecxz
jmp
jmp
fisttp
mov
add
addr16
inc
test
push
out
arpl
push
cmps
rcr
daa
mov
pop
rcr
ja
cmps
inc
aad
fld
jecxz
or
shr
xchg
movs
add
mov
add
push
mov
pop
arpl
sbb
dec
add
fist
in
push
lods
bound
jg
dec
dec
mov
or
push
xor
add
push
(bad)
fist
bound
dec
das
mov
pop
mov
mov
fucomip
push
mov
push
pop
fild
add
inc
mov
push
xchg
adc
test
fisttp
push
xor
mov
fidivr
or
add
add
ins
sub
pop
out
push
dec
adc
mov
dec
mov
scas
xchg
jbe
jmp
fistp
mov
imul
push
mov
push
mov
fcmovnu
and
push
pop
ins
ins
xchg
add
push
push
pop
add
or
sbb
jne
inc
out
addr16
fist
shr
imul
push
(bad)
scas
fild
(bad)
mov
push
sub
push
fistp
push
pop
xchg
ffreep
sub
jo
or
scas
mov
jne
xlat
mov
fisttp
es
paddd
xchg
jecxz
push
pop
and
fisttp
mov
inc
pop
push
mov
je
imul
out
and
sub
retf
daa
pop
sbb
mov
mov
pop
pop
xlat
jmp
dec
fwait
fwait
dec
sbb
mov
and
pop
out
inc
mov
mov
or
push
sar
sub
mov
fbstp
fbstp
and
sahf
pop
rcr
(bad)
lods
fsubr
and
jne
fist
or
push
stos
fild
hlt
pop
xchg
sbb
push
ja
sahf
cwde
shl
add
cwde
test
xchg
sets
jmp
jecxz
add
push
(bad)
jg
movs
add
mov
stos
push
test
jmp
xor
loop
pop
test
add
movs
stos
xor
ja
pop
mov
jp
mov
pop
push
xchg
add
je
push
fistp
inc
mov
add
fistp
sbb
sti
retf
adc
rol
mov
bound
mov
pusha
add
mov
stos
mov
stos
fmul
dec
jmp
ret
jne
xor
push
sbb
push
pop
shr
imul
or
or
sbb
jg
dec
mov
add
sbb
fiadd
inc
retf
cs
mov
xor
lods
ss
mov
sbb
dec
fld
xchg
call
inc
aaa
add
sub
cmp
adc
fbld
outs
xor
xor
fld
add
fbld
stos
sub
out
fisttp
push
das
shl
sbb
jmp
les
push
jno
push
dec
(bad)
shr
mov
fwait
xchg
bound
aam
das
and
sub
push
dec
inc
adc
and
sbb
sbb
add
(bad)
adc
ffreep
push
xlat
mov
stos
inc
xlat
mov
mov
xlat
retf
dec
fist
lods
cmps
xor
sub
aad
outs
ret
movlhps
inc
test
and
fwait
sbb
lods
fbld
xchg
cmps
lahf
fild
jb
scas
inc
pop
fist
jae
push
pop
add
ffreep
mov
pop
mov
movs
adc
mov
mov
adc
jmp
push
mov
sbb
je
jecxz
neg
addr16
scas
pushf
sbb
xor
mov
add
add
xor
fisttp
sahf
shr
dec
pop
dec
pop
xchg
ret
stos
fild
ja
lea
xor
cmp
fisub
mov
pop
lahf
xlat
sbb
cmp
fist
add
jo
scas
fist
xor
lea
jg
(bad)
jp
or
push
loop
sub
xlat
pop
inc
adc
sbb
sub
fld
fcom
sbb
push
or
(bad)
das
frstor
pop
xchg
or
mov
imul
test
aaa
xchg
push
mov
(bad)
ret
mov
aas
add
dec
rcr
adc
sub
fistp
add
sti
fistp
push
out
fist
mov
dec
das
lds
sub
mov
jns
sbb
cwde
jg
mov
fcomp
fstp
push
mov
pop
add
sahf
jg
cmp
push
mov
add
sub
sbb
je
sub
call
sbb
pusha
xor
mov
cmps
cmp
inc
mov
scas
fwait
or
xor
add
or
aam
mov
sbb
fisttp
pop
(bad)
(bad)
fdiv
test
inc
mov
mov
stos
dec
shl
cmp
aas
mov
fild
xor
push
bound
jo
outs
jne
xor
das
das
push
call
fild
sub
inc
or
pop
fild
sub
add
add
mov
mov
cmp
push
mov
aad
xchg
fisubr
add
mov
pop
lea
adc
sbb
and
pop
sbb
adc
push
inc
push
adc
stos
sub
stos
(bad)
sbb
test
ins
in
jp
call
das
(bad)
jo
and
retf
imul
xor
fsub
xchg
fidiv
movs
add
test
xor
inc
lahf
dec
push
pop
jne
lahf
cs
inc
sub
and
adc
inc
out
mov
ds
fcomip
pop
adc
dec
arpl
add
shl
lahf
inc
sub
pop
jle
push
sub
inc
lahf
(bad)
mov
repnz
imul
pop
das
adc
adc
lahf
pop
xchg
adc
fisttp
sbb
add
sbb
pop
lahf
mov
fild
jbe
and
xor
pop
mov
fild
int
(bad)
add
pop
test
pop
and
(bad)
sub
sbb
inc
inc
pop
nop
daa
mov
pop
jnp
call
add
adc
ja
and
or
mov
stos
pop
push
mov
mov
out
fisubr
fadd
scas
mov
or
xchg
das
jbe
clc
ficom
loop
and
into
push
pop
movs
xlat
mov
add
xor
push
das
ret
and
cmps
add
sub
mov
sbb
xlat
push
add
and
inc
bound
aaa
jbe
push
call
inc
adc
ret
push
cmps
add
jnp
xor
test
mov
xor
push
inc
ins
add
inc
scas
pop
push
jne
fisttp
ret
fisttp
adc
shl
push
mov
out
(bad)
xchg
add
ins
xchg
pop
fstp
and
add
mov
les
push
add
shr
push
pop
inc
or
mov
inc
sahf
scas
add
jg
mov
fcmovnu
outs
push
push
xlat
test
inc
xor
xchg
fwait
sbb
push
fst
mov
stos
fdiv
inc
or
pop
aaa
mov
scas
jecxz
and
(bad)
adc
fndisi(8087
add
(bad)
push
add
add
adc
xchg
sbb
inc
jne
mov
ffreep
fistp
push
push
fstp
add
xor
jo
les
jne
xchg
lods
jmp
xchg
cwde
jecxz
push
jb
jle
add
call
scas
push
fistp
xchg
dec
repnz
bound
in
jecxz
xor
fdiv
sbb
fild
scas
inc
mov
add
xchg
dec
adc
fmul
xor
and
fsub
adc
or
xor
mov
xchg
mov
or
xor
mov
dec
ud1
adc
das
not
jbe
mov
adc
pop
mov
inc
mov
test
push
outs
leave
xor
cwde
add
sbb
xor
fmul
adc
mov
fild
sub
cwde
xor
and
outs
dec
mov
adc
xor
jbe
push
push
mov
leave
push
or
ds
fstp
sub
adc
push
mov
(bad)
das
das
loope
lea
bound
in
cmp
mov
add
fisttp
xlat
inc
push
leave
push
cmp
add
jbe
push
jmp
mov
setbe
sub
mov
iret
mov
in
fstp
lea
inc
inc
or
(bad)
lods
or
add
dec
jnp
jmp
xchg
fild
mov
sbb
fld
fist
xor
iret
or
sub
xchg
sbb
fld
sbb
dec
sub
fdivrp
inc
or
or
das
cdq
fwait
fs
mov
push
aad
fs
stos
adc
or
push
dec
add
jmp
sub
test
fisttp
fbstp
mov
or
add
xchg
pop
sub
pop
(bad)
das
jecxz
movs
inc
and
or
jg
xor
mov
scas
mov
inc
xchg
xor
cmp
mov
das
inc
xor
fist
mov
sub
mov
pusha
shr
mov
or
loopne
(bad)
je
or
jmp
rcl
mov
ffree
add
xor
sbb
sbb
sub
sub
test
(bad)
(bad)
mov
xchg
(bad)
xlat
imul
out
ja
shr
mov
call
int
mov
mov
les
cs
xchg
mov
fistp
pop
das
add
inc
jg
mov
aad
outs
pop
pop
add
adc
pop
icebp
outs
aaa
test
push
mov
outs
aaa
lock
outs
pop
pop
cmp
pusha
pusha
movs
iret
fadd
add
fist
pop
mov
sbb
or
jge
push
sub
mul
ja
push
adc
das
mov
shl
ja
lods
sbb
daa
inc
les
sar
pop
mov
popa
sbb
lea
(bad)
arpl
test
pop
mov
jbe
add
mov
fisttp
mov
repnz
add
mul
sbb
mul
mov
cmp
mov
clc
and
xchg
or
mov
mov
clc
(bad)
add
cld
push
jmp
daa
adc
dec
adc
loopne
jno
sbb
in
inc
ret
aaa
mov
dec
push
rcr
pop
xchg
inc
cmp
sub
inc
rol
inc
mov
(bad)
sub
and
das
push
pop
adc
(bad)
cmp
sbb
xor
ror
and
fbld
push
mov
frstor
inc
ja
or
and
or
push
jmp
out
out
outs
adc
aas
mov
aas
jge
xchg
or
jae
mov
push
push
cmps
mov
out
pop
pop
add
out
or
push
das
ret
pop
shl
sub
jmp
sbb
or
sub
mov
adc
jb
std
jns
fwait
mul
(bad)
sub
psubw
mov
push
ja
lods
jmp
cmp
fist
sub
inc
mov
fstp
mov
sbb
pop
stos
pop
jg
(bad)
lahf
push
pushf
mov
aas
ret
add
sub
fistp
or
mov
pop
mov
retf
sbb
mov
mov
arpl
ins
(bad)
pop
pusha
sbb
jns
fisubr
sub
push
mov
lds
out
xlat
push
ja
jecxz
push
jge
pop
inc
mov
inc
push
dec
lahf
xchg
add
ret
push
fwait
mov
push
fbld
pusha
pop
fcmovnb
pop
das
shl
sub
addr16
jp
sbb
loop
push
or
fild
mov
inc
sub
retf
cmps
daa
mov
mov
unpckhps
or
rcr
xchg
xchg
daa
push
jmp
sbb
pop
mov
stos
(bad)
jg
scas
mov
inc
ss
inc
loop
xor
stos
stos
aaa
sbb
sub
xchg
popa
mov
or
pusha
or
addr16
cmp
jmp
add
inc
ret
xchg
(bad)
movntq
mov
pop
pop
pop
mov
pop
xlat
mov
mov
sbb
daa
idiv
xor
jb
in
push
add
mov
mov
mov
inc
and
lahf
pop
or
inc
jmp
outs
inc
mov
dec
test
xor
pusha
inc
stos
les
push
scas
pop
sbb
mov
xor
mov
ja
sub
mov
in
pop
aaa
sub
rcr
jp
inc
sbb
sub
aad
std
push
sub
jae
pop
xor
lds
not
inc
cdq
shl
imul
pop
mov
xor
jmp
pop
lods
popa
sbb
lds
adc
xor
add
jecxz
shl
shl
mov
mov
fistp
cmovb
push
mov
stos
inc
mov
sub
(bad)
pop
in
xor
xlat
cmp
cmp
addr16
mov
add
xlat
and
lods
pusha
ja
adc
fistp
inc
xlat
jbe
mov
mov
stos
sbb
arpl
imul
pop
mov
cmp
fisttp
xchg
ja
push
sub
sub
mov
dec
fist
dec
or
jecxz
test
jae
inc
sbb
ds
inc
add
pop
sbb
xchg
inc
add
jne
mov
(bad)
rcr
add
or
stos
mov
sbb
pop
add
add
aaa
mov
add
pop
mov
div
push
into
mov
lods
mov
outs
mov
inc
add
inc
addr16
mov
push
add
pop
and
iret
and
scas
or
mov
xchg
inc
mov
mov
xlat
(bad)
jecxz
fild
mov
(bad)
fbld
mov
ja
xlat
pusha
dec
jb
xlat
cmps
fist
sub
push
pop
pop
sahf
es
(bad)
mov
xor
push
push
mov
fistp
and
(bad)
(bad)
sbb
and
das
sbb
inc
nop
mov
jo
xlat
push
inc
neg
mov
cs
call
cs
push
(bad)
push
adc
mov
pop
cmps
sub
xlat
push
push
lods
fidiv
xchg
and
add
mov
and
imul
push
jne
lahf
fild
push
add
jne
scas
call
xchg
jmp
iret
hlt
pop
add
(bad)
inc
mov
repnz
adc
add
repnz
pop
fmul
sub
mov
popf
outs
inc
les
and
add
adc
inc
add
aam
pop
xchg
bound
stos
pop
adc
jae
push
and
cmp
or
mul
fistp
arpl
mov
add
adc
cmps
xchg
imul
sub
jecxz
popw
xor
and
add
jnp
lahf
aam
(bad)
adc
pusha
sub
fbstp
(bad)
jne
jno
fcmovnu
sahf
sub
retf
inc
pop
fwait
push
cmp
imul
mov
ja
push
jnp
pop
push
loop
jle
push
ja
xchg
xor
fistp
jmp
arpl
stos
adc
add
(bad)
bound
jp
imul
or
in
push
or
mov
push
xor
mov
pusha
cmps
adc
aam
mov
and
xchg
mov
push
pop
add
adc
inc
test
daa
jg
lea
mov
iret
daa
push
fist
cmps
xchg
addr16
movs
outs
or
push
outs
aad
xchg
inc
push
ror
push
dec
int3
ja
push
aam
mov
jbe
stos
jg
xchg
outs
in
mov
jg
das
dec
pop
mov
dec
pop
ins
adc
mov
lods
lahf
stos
mov
sbb
(bad)
fbld
push
sub
and
or
lods
adc
jecxz
mov
adc
inc
cld
cs
push
clc
pop
mov
aaa
scas
pop
cdq
test
sbb
cmp
inc
ret
sar
mov
and
pop
stos
adc
and
push
mov
sub
aaa
xchg
sbb
mov
sub
popa
or
xchg
add
pusha
sub
jmp
fbstp
cmp
jo
and
or
outs
loope
pop
jnp
(bad)
sub
push
aaa
and
jecxz
push
rcr
fdiv
jmp
mov
(bad)
fld
addr16
sub
aas
sbb
ja
popa
push
xor
inc
jo
(bad)
jg
inc
sbb
rcr
sub
pusha
mov
lahf
jae
ja
fstp
mov
dec
mov
jmp
mov
fisub
pop
xlat
(bad)
cmp
jle
iret
sbb
xchg
mov
loop
(bad)
pop
mov
ins
mov
push
cmp
loop
xchg
jp
imul
sub
cwde
mov
xchg
pop
xlat
push
sub
push
lahf
xlat
pop
add
jg
in
push
test
cmps
pop
push
shr
pop
mov
and
add
shr
outs
push
ins
shl
xor
sub
dec
mov
adc
addr16
popa
inc
stos
inc
sbb
or
mov
shl
mov
stos
sbb
jg
test
sub
ja
and
shl
sub
mov
jbe
push
loop
push
pop
stos
(bad)
fild
repnz
jae
ret
pop
jg
inc
add
sub
dec
sub
mov
lahf
sub
and
xor
inc
mov
push
arpl
(bad)
adc
fbld
pop
push
pusha
sti
mov
sbb
and
mov
cmp
jo
xchg
(bad)
jb
dec
test
fidivr
jo
inc
addr16
popf
add
add
das
pop
or
jae
and
sub
inc
test
pop
push
mov
daa
loopne
xor
sub
xchg
and
ja
push
pop
xor
push
outs
adc
mov
jecxz
or
mov
je
push
push
(bad)
adc
out
push
jmp
lods
dec
orps
sbb
data16
mov
(bad)
pop
out
fadd
pop
fdiv
sub
jp
das
sub
sahf
aaa
ja
mov
push
cmps
xchg
dec
push
dec
mov
ret
push
pop
inc
sub
arpl
ins
jnp
pop
sti
out
push
ror
inc
jo
fwait
inc
mov
ret
loopne
pop
pop
setb
push
jmp
mov
mov
(bad)
xlat
adc
sub
ins
out
mov
sub
jno
add
xchg
mov
add
jne
xchg
stos
sub
push
fild
pusha
push
jo
bound
or
mov
shr
inc
fmul
lea
pop
push
adc
dec
add
lods
sbb
sub
push
add
pop
pop
pusha
inc
pop
mov
dec
pop
fild
cmp
xchg
ja
and
or
xchg
or
(bad)
popa
movs
dec
stos
or
mov
sub
stc
cmp
xchg
or
dec
and
pop
inc
rol
pop
sbb
and
lahf
inc
add
xlat
sub
fistp
fisttp
cmps
sbb
cmp
sub
bound
mov
mov
scas
add
outs
fsubr
sub
ja
nop
cmp
ficom
lahf
xor
je
stos
xchg
push
shl
inc
xchg
inc
inc
add
data16
push
adc
mov
mov
inc
push
add
inc
(bad)
sub
push
bound
or
scas
add
sbb
sbb
mov
(bad)
add
sti
(bad)
and
adc
pop
add
inc
add
sub
and
sub
add
lahf
aam
add
int3
push
push
push
mov
inc
and
and
push
imul
pusha
and
dec
ins
loopne
sbb
enter
dec
inc
jbe
jbe
add
mov
add
adc
(bad)
or
out
add
stc
neg
loopne
add
push
mov
mov
push
or
or
mov
dec
lahf
std
mov
scas
add
xchg
push
push
adc
add
jmp
das
add
sbb
add
pop
fild
sbb
(bad)
mov
mov
sub
mov
test
pusha
lahf
pusha
lahf
nop
icebp
std
pop
int3
add
rol
jne
pop
loope
neg
jl
add
jg
daa
sbb
xchg
add
inc
jmp
add
imul
xor
(bad)
aad
orps
lahf
push
test
jle
or
push
int
ja
add
(bad)
out
ds
scas
ror
ja
add
xchg
inc
syscall
shl
loopne
push
aas
push
dec
in
add
out
add
gs
(bad)
ror
stc
add
hlt
fistp
add
sbb
sbb
cld
idiv
sbb
pop
mov
pop
sub
in
xor
(bad)
fild
add
cmps
xchg
lods
test
mov
mov
(bad)
sti
add
loopne
jmp
hlt
lock
fistp
jmp
icebp
out
shld
idiv
jnp
repz
in
out
pushf
fwait
popf
add
sti
(bad)
out
pop
fcmovbe
(bad)
jmp
pmovmskb
fstp
fld
aad
aad
lea
pop
add
cmp
cdq
add
(bad)
leave
push
pop
leave
mov
lahf
popf
addr16
dec
dec
outs
sti
repz
cs
pop
add
daa
jle
jge
add
adc
jg
call
adc
enter
mov
mov
in
and
jmp
xor
loopne
into
fcmovbe
mov
ret
add
(bad)
aam
into
pop
inc
cmps
movs
mov
fwait
cdq
cmps
iret
add
xchg
bound
mov
int
jmp
add
jle
cmps
sti
sbb
jle
mov
xchg
xchg
ja
inc
js
fcom
xchg
aas
lds
loope
adc
push
mov
add
dec
mov
daa
jp
ja
je
jno
mov
mov
sahf
rol
push
mov
call
lahf
ss
aad
add
into
int
xor
xor
xchg
xchg
mov
add
out
fnstsw
in
pusha
out
xchg
stos
(bad)
daa
rcl
iret
popf
pushf
xchg
add
loop
stos
stos
(bad)
in
jmp
(bad)
shl
push
test
adc
shl
clc
xchg
mov
jecxz
pmuludq
in
mov
mov
xchg
inc
es
sbb
xchg
push
add
add
loope
xchg
in
dec
mov
pop
icebp
sbb
ds
shr
add
idiv
out
mov
xlat
push
ret
inc
jecxz
mov
add
inc
repz
fucomip
xor
outs
cwde
cdq
xchg
(bad)
fcomp
dec
cld
std
rol
lock
in
fsubr
leave
retf
ret
mul
(bad)
inc
mov
inc
mov
movsx
add
push
ret
shr
neg
pop
daa
sahf
lahf
inc
or
adc
mov
ret
call
in
fcomp
das
mov
mov
mov
or
std
push
div
cmps
add
rcl
push
std
cs
xor
repz
icebp
add
push
lahf
jb
pop
mov
add
add
add
cs
retf
in
(bad)
add
add
add
add
add
add
adc
mov
jg
ds
out
push
in
dec
dec
dec
push
pop
enter
pop
push
inc
inc
dec
stos
sub
pop
dec
dec
xor
add
in
enter
inc
xor
sub
add
cmp
je
hlt
stc
(bad)
cli
add
lods
cmp
dec
aas
inc
xor
inc
push
inc
jmp
lock
scas
das
(bad)
push
jbe
jne
lock
call
in
xrelease
push
cmp
add
cmp
out
fcomi
ds
cmp
cmp
inc
xor
adc
fadd
inc
push
add
mov
jg
xchg
xor
repz
ins
fs
mov
in
push
cmp
sub
cmp
loope
add
dec
push
inc
inc
inc
and
xor
jle
aas
inc
pop
dec
aaa
or
mov
add
inc
cmp
lods
cmp
imul
xor
out
inc
hlt
cwde
mov
mov
cmp
sub
inc
in
cmp
jbe
(bad)
(bad)
cmp
xor
inc
push
push
inc
sub
cmp
cmp
add
add
dec
inc
sbb
cmp
sar
in
push
imul
rol
ror
and
out
push
add
daa
add
push
xchg
in
aas
cmp
jg
cmp
inc
sub
push
add
ret
das
push
sbb
and
sbb
fnstsw
sub
dec
pusha
xor
cmps
jnp
and
jl
dec
dec
xchg
mov
inc
mov
push
mov
dec
push
inc
add
rol
(bad)
push
test
pop
adc
cmp
pop
add
dec
ss
dec
loope
pshufw
sub
inc
and
sub
jle
jo
out
pop
(bad)
pop
or
pop
pop
nop
and
test
xchg
std
jo
std
nop
cwde
in
dec
mov
push
inc
mov
mov
or
cmp
add
sub
add
and
pop
retf
inc
cmp
dec
cmp
sub
xchg
sbb
sub
inc
and
push
and
inc
push
inc
and
pop
dec
sbb
in
xchg
sub
jle
mov
sbb
cld
lahf
bound
repz
add
jo
add
in
cmp
jae
add
or
xor
dec
jecxz
dec
dec
out
(bad)
les
pop
add
sub
sbb
xor
mov
sbb
test
cld
repnz
std
adc
adc
scas
pop
jne
pop
dec
jbe
out
in
add
retf
jmp
inc
clc
jg
cmp
inc
dec
push
inc
cmp
dec
push
inc
sub
xor
cmp
cmp
cmp
cmp
xor
sub
dec
inc
arpl
add
push
and
sub
push
jl
adc
sbb
adc
jo
xchg
dec
inc
add
scas
mov
dec
out
inc
mov
out
clc
test
or
sbb
pop
add
retf
adc
imul
cmp
(bad)
jno
pop
push
xor
add
retf
inc
or
and
and
push
inc
adc
xchg
stos
jo
cmp
stc
(bad)
fsubr
add
and
or
jmp
ss
pop
dec
cmp
dec
dec
dec
cmp
inc
pop
fdivrp
in
cmp
dec
adc
push
dec
xchg
cld
out
aas
iret
cmp
push
and
dec
dec
dec
adc
icebp
and
stc
cmc
or
sbb
imul
cmp
xchg
mov
or
ins
jg
mov
adc
out
mov
sbb
(bad)
in
add
cld
in
jl
nop
xchg
inc
xchg
xchg
das
adc
adc
adc
daa
mov
cmps
ins
icebp
jg
mov
adc
add
jge
aaa
dec
mov
cmp
outs
mov
and
loopne
dec
std
aad
lea
(bad)
mov
ins
add
mov
das
lods
iret
xchg
xchg
xchg
or
add
inc
(bad)
xchg
test
jg
jmp
push
jmp
add
retf
jp
daa
inc
loope
fwait
dec
inc
add
xchg
jg
xchg
call
add
adc
and
test
push
mov
dec
int3
mov
lds
sub
jge
push
push
cmp
ss
pop
pop
out
out
add
inc
loope
sub
loope
mov
inc
out
and
sbb
stos
adc
ins
cwde
test
lods
sbb
adc
adc
fdivr
lods
dec
mov
inc
pusha
cwde
nop
mov
inc
mov
sub
add
and
cmp
push
cmp
inc
and
jnp
cmp
push
sbb
ins
pop
fwait
std
sbb
dec
push
or
in
bound
aaa
adc
cmp
cmp
out
xor
xor
dec
push
inc
mov
jnp
mov
and
gs
test
mov
(bad)
repz
imul
stos
test
sbb
in
in
jl
jle
dec
repz
fdivr
cmp
xor
dec
sub
imul
cmp
pop
loope
xor
push
xchg
dec
add
repnz
in
fsubr
aas
sbb
in
dec
mov
fcomp
fiadd
cmp
sub
cmp
jae
mov
addr16
nop
cmp
out
push
jmp
inc
call
push
sar
jl
xchg
mov
or
adc
fisub
fcomp
mov
or
xchg
sahf
test
cld
shl
inc
cli
jae
inc
push
and
add
mov
ficom
cmp
btc
sub
pop
cmp
and
int
sbb
dec
inc
mov
sbb
xor
inc
dec
scas
dec
or
in
push
inc
xor
dec
ret
inc
(bad)
std
mov
xor
xor
punpckhwd
ret
repz
xor
inc
ret
and
push
mov
xchg
inc
add
cwde
jl
data16
daa
or
aas
or
sub
mov
adc
pop
adc
bound
in
jg
mov
mov
sub
push
sub
inc
push
jbe
js
pop
lahf
pop
xor
outs
and
cdq
xor
lahf
scas
push
in
repz
sub
inc
mov
ret
(bad)
dec
sub
inc
in
mov
dec
push
inc
(bad)
cmp
sub
addr16
lds
xor
mov
mov
loope
es
adc
test
fcomip
pop
js
add
add
ins
cmp
xor
out
pop
test
and
pop
mov
sub
jg
pop
and
sub
inc
inc
idiv
sbb
add
push
add
shr
add
sub
ret
in
mov
xor
inc
packssdw
push
ins
xchg
xor
xor
(bad)
mov
cmp
or
ret
mov
mov
and
std
jnp
arpl
fdivr
mov
cmp
in
dec
dec
cmp
js
dec
push
or
int3
adc
sahf
lahf
inc
lea
mov
in
mov
inc
add
fld
pop
xor
push
mov
jno
cmp
jecxz
or
sub
idiv
outs
retf
dec
ret
and
mov
sbb
sti
and
adc
xchg
dec
mov
xchg
mov
mov
or
popf
imul
sti
fmul
mov
sub
push
sub
je
das
clc
push
cmp
dec
inc
dec
(bad)
in
into
in
jnp
inc
push
aaa
dec
inc
cmp
lods
sub
js
sbb
mov
pop
add
js
cmp
inc
icebp
in
mov
mov
pop
add
stos
daa
pop
daa
rol
or
stos
xchg
das
xchg
add
lock
cmp
pop
loopne
push
adc
cmp
cmp
dec
arpl
inc
(bad)
lea
cmp
stos
adc
das
sbb
mov
(bad)
pop
inc
xor
lea
(bad)
in
lea
or
xchg
mov
add
push
add
or
or
shr
mov
and
test
lock
mov
and
in
(bad)
rol
adc
lds
push
mov
push
dec
inc
add
xchg
inc
add
xor
pop
xor
dec
xor
ror
sbb
sbb
(bad)
xor
jnp
jo
cmp
(bad)
xlat
scas
ins
mov
pop
cvtps2pi
es
mov
jnp
daa
pusha
push
xchg
xchg
mul
std
cld
pop
adc
push
pop
sbb
pop
lea
mov
into
inc
leave
pop
inc
xor
imul
add
in
mov
mov
adc
xlat
xor
xor
inc
dec
dec
pop
rcl
loope
fsub
fistp
sbb
std
icebp
jg
adc
or
or
(bad)
pusha
add
(bad)
mov
xor
pop
pop
add
pop
add
lea
and
add
cmp
ret
dec
push
push
push
mov
and
mov
addr16
pop
dec
inc
mov
xor
fwait
xchg
dec
(bad)
aaa
movs
adc
mov
test
inc
jo
xor
nop
add
push
add
dec
mov
daa
mov
imul
mov
(bad)
jmp
ss
sub
sub
jne
xor
adc
mov
out
dec
inc
inc
add
inc
movs
inc
add
or
stos
and
lock
cmp
lock
xor
sbb
add
add
add
pop
xor
pop
push
inc
sub
add
dec
xor
cld
mov
xchg
js
inc
cmp
jmp
add
pop
out
push
and
fwait
xchg
aas
adc
dec
push
inc
inc
or
fsubr
or
fsub
inc
dec
out
cmp
pusha
mov
push
inc
xor
dec
repz
cmp
inc
pop
mov
xor
push
(bad)
loop
popa
push
push
xor
mov
jno
sbb
pusha
xlat
adc
pop
cld
cmp
push
mov
push
sub
dec
xor
or
push
mov
inc
add
push
movs
jmp
inc
dec
ret
aad
leave
add
xor
cld
xlat
inc
dec
cmp
xchg
jl
nop
loop
bound
xchg
mov
xacquire
lods
cmp
cmp
(bad)
call
popa
inc
inc
add
sub
add
add
fnstcw
inc
sbb
and
push
jno
and
aam
(bad)
into
out
es
add
add
sub
inc
daa
push
pushf
fsub
mov
mov
inc
mov
pop
mov
pop
add
or
mov
jle
add
pop
cmp
cmp
dec
stos
in
xor
cmp
fwait
push
rcr
add
push
or
pop
cwde
(bad)
popa
or
jg
sar
je
retf
push
xchg
xchg
std
mov
lock
ret
setnp
pop
lods
add
or
fdiv
js
dec
adc
adc
ret
dec
test
pop
cmps
xor
dec
in
fdiv
push
xor
or
pop
mov
cmp
loope
cmp
pushf
sub
and
xchg
sahf
cmps
mov
xchg
or
(bad)
std
addr16
rol
and
pop
test
test
pop
add
xor
push
lods
xchg
into
mov
nop
pop
add
pmulhw
add
aas
pop
sub
(bad)
xchg
nop
xchg
imul
mov
and
sbb
xchg
jne
and
adc
add
pop
out
cmps
inc
sbb
cmp
test
lods
loopne
iret
dec
cmp
movs
(bad)
ds
fst
stos
jo
cmp
xor
add
dec
lods
pop
mov
cli
push
mov
(bad)
data16
dec
jnp
(bad)
int
jo
inc
xchg
lahf
mov
fmul
adc
or
sbb
cmp
in
clc
sbb
lea
je
adc
add
pop
sar
jno
ret
dec
inc
inc
add
sub
and
or
push
pop
(bad)
scas
pop
cmp
and
inc
inc
sub
inc
lock
xor
jg
loopne
(bad)
js
stos
mov
or
aas
cmp
inc
or
cmps
call
xor
mov
adc
sbb
jmp
jmp
add
mov
xor
or
ret
jmp
inc
test
mov
inc
pop
mov
(bad)
out
sub
xchg
xchg
fist
dec
adc
add
adc
or
cmp
(bad)
mov
fsub
cmp
push
cmp
mov
and
fdiv
add
call
out
dec
xor
push
addr16
adc
jecxz
fdiv
pop
gs
add
dec
pop
cmp
ja
sbb
and
sbb
xlat
dec
add
xor
mov
add
add
inc
push
or
mov
mov
popa
neg
test
and
or
loope
adc
test
mov
loope
inc
xor
push
pop
and
jg
inc
rol
jg
inc
dec
fcomp
ds
dec
inc
test
les
mov
imul
cwde
cmp
xchg
push
pop
xchg
or
cmp
push
mov
scas
imul
popa
mov
inc
das
pop
(bad)
xchg
imul
mov
lods
mov
and
xlat
daa
and
mov
xchg
imul
mov
mov
pop
inc
pop
add
cmp
push
jg
xchg
inc
xchg
out
xor
jbe
mov
lods
pop
add
ror
sbb
pop
jo
mov
add
(bad)
fldcw
ficomp
ds
jo
or
ds
sub
(bad)
stos
popa
pop
inc
inc
inc
add
mov
mov
std
std
or
sbb
jbe
adc
cmps
in
imul
lahf
sbb
sub
mov
sub
jg
sub
mov
xor
inc
add
dec
add
pop
add
retf
in
adc
pop
mov
push
sub
pop
add
pop
shl
add
ret
mov
in
sub
mov
pop
push
ret
mov
lock
and
lods
sub
shl
mov
push
jg
cmp
push
ret
sbb
and
inc
xor
inc
(bad)
les
aaa
mov
and
push
pop
inc
inc
ds
dec
xor
pushf
pop
cdq
dec
(bad)
bound
and
add
jp
or
pop
(bad)
fsub
js
sub
fdivr
cdq
lock
adc
ret
std
add
(bad)
mov
adc
pusha
cmp
and
inc
dec
sbb
pop
and
mov
inc
das
sub
icebp
ins
xchg
test
sub
ss
push
neg
fst
push
aas
add
cmp
pop
in
movs
push
bound
jmp
xor
push
mov
dec
mov
adc
inc
pop
cmp
cmps
jmp
adc
sub
adc
jbe
cli
mov
or
data16
stos
stos
mov
cmp
xor
stos
jl
aaa
in
push
dec
add
cmp
cmp
(bad)
mov
push
cmp
dec
cmp
push
dec
add
xor
add
xchg
jl
pop
cmp
sbb
add
sbb
and
(bad)
(bad)
scas
test
dec
add
gs
cmp
pop
and
out
jmp
mov
pop
test
cmp
mov
aaa
add
jg
les
mov
and
das
std
in
leave
repz
xchg
stc
call
mov
jge
dec
aaa
add
cmp
inc
push
add
cmp
(bad)
jmp
lods
lods
movs
cdq
mov
ins
push
xor
push
mov
addr16
imul
sbb
cmp
dec
ins
lea
dec
xor
inc
dec
sub
dec
loop
push
add
cmc
repnz
sub
or
or
ss
push
test
rol
sub
jo
mov
in
mov
imul
jmp
push
movs
shr
jl
cli
cli
sub
cmp
les
repnz
arpl
mov
jg
pop
cmp
jno
mov
add
loopne
add
(bad)
cmp
dec
loope
inc
inc
add
pop
push
sbb
mov
fstp
in
sete
sti
mov
cmp
cs
xchg
sbb
xchg
mov
mov
mov
xchg
imul
mov
add
nop
sub
punpckhdq
inc
fistp
sub
ficomp
dec
jecxz
dec
jmp
mov
movhps
gs
das
mov
in
popa
sbb
mov
mov
retf
jnp
ret
jle
lea
jge
test
inc
in
xchg
imul
adc
dec
(bad)
lea
cs
(bad)
jge
aam
jl
xchg
leave
(bad)
jnp
mov
pushf
rol
test
mov
imul
pop
imul
(bad)
es
pop
nop
inc
mov
lea
pop
jecxz
xor
add
jge
xchg
cwde
repnz
jbe
imul
sub
cwde
inc
dec
leave
mov
sbb
add
pop
cmc
repz
or
in
std
test
loop
je
mov
xlat
in
test
xchg
or
jmp
xchg
cmps
das
sub
inc
loopne
icebp
add
mov
leave
dec
std
push
lock
mov
sbb
inc
sahf
xchg
inc
cmp
mov
jbe
inc
sbb
jmp
pop
test
jnp
xchg
xchg
imul
shl
inc
push
mov
jmp
pop
mov
pop
mov
je
ins
xchg
jmp
sbb
adc
rcr
and
pop
pop
jl
mov
pop
(bad)
repnz
mov
ret
mov
pop
jmp
out
sbb
and
inc
xchg
mov
mov
aas
mov
cld
adc
out
fcom
repz
mov
jnp
imul
push
or
xor
add
xor
mov
jae
pop
xchg
pusha
pop
dec
push
bound
clc
pop
lock
mov
stc
mov
mov
or
mov
add
push
bnd
(bad)
mov
mov
in
inc
iret
(bad)
mov
(bad)
icebp
add
(bad)
je
and
xchg
xchg
ja
repnz
push
shl
int3
jl
jbe
cld
mov
cmp
xor
xchg
in
ja
mov
jmp
mov
pop
ret
cmp
(bad)
mov
mov
cmp
push
jne
js
sahf
inc
lock
jmp
xor
or
inc
cmp
repz
jg
imul
pop
or
push
pop
pop
jge
pop
ja
(bad)
cmc
sub
add
repz
inc
mov
and
ins
xchg
and
nop
stc
repz
test
sbb
js
rol
int3
(bad)
mov
xor
nop
out
add
add
jge
inc
push
xchg
add
(bad)
ret
push
xchg
inc
test
ret
inc
test
arpl
mov
inc
mov
fwait
add
ins
jmp
or
jmp
leave
adc
cmps
adc
in
ja
clc
pop
and
pop
xchg
add
std
jne
push
add
xchg
inc
xchg
sub
icebp
dec
mov
ja
add
or
add
sbb
inc
mov
in
inc
stos
jecxz
and
xchg
repz
push
dec
xchg
(bad)
imul
inc
sub
imul
add
push
dec
jmp
cmp
mov
xchg
retf
add
mov
ja
jnp
inc
sti
xchg
fucomp
mov
jnp
push
inc
sub
dec
in
xchg
mov
mov
mov
icebp
in
cli
and
xchg
sbb
fist
xlat
cmc
pop
xchg
pop
mov
mov
cmp
(bad)
jno
call
inc
xor
fdiv
(bad)
in
iret
push
(bad)
xchg
nop
jmp
and
(bad)
stc
pop
dec
pop
inc
js
(bad)
xor
dec
jg
pushf
loope
xchg
out
pop
dec
mov
mov
xlat
adc
arpl
add
(bad)
cs
add
das
imul
out
and
xor
cmp
clc
jmp
cld
add
or
pop
sbb
(bad)
clc
daa
mov
xchg
cmp
imul
or
mov
loope
adc
inc
add
ins
add
out
(bad)
(bad)
in
xor
mov
mov
call
ins
idiv
xchg
and
mov
add
stos
sbb
push
xor
pop
in
mov
jno
or
not
icebp
daa
aam
dec
xor
add
lock
repnz
jae
jnp
icebp
iret
mov
push
add
mov
iret
mov
mov
test
in
jmp
cli
pop
ret
inc
stc
pop
mov
js
jecxz
pop
xchg
xchg
mov
mov
test
push
xor
or
mov
lods
pop
jnp
not
pop
push
out
cmc
inc
int
and
dec
inc
cmp
pop
cmp
aaa
repz
test
(bad)
aas
xchg
int
jmp
cmp
out
push
xlat
lods
movs
jecxz
mov
jo
dec
ret
bnd
rol
jb
sahf
jmp
cmp
sbb
cmp
pop
jmp
jne
cmps
sbb
es
or
jns
test
shl
sub
dec
je
repz
imul
gs
mov
ror
test
loopne
pop
inc
aam
fld
out
cli
and
retf
out
or
pop
int
jo
sbb
stc
or
daa
loop
mov
inc
xchg
mov
push
cwde
dec
loopne
lods
push
pop
cs
jg
xchg
imul
mov
jbe
mov
add
in
and
in
pop
nop
or
adc
fwait
push
cmp
aam
jbe
addr16
cli
mov
test
std
les
inc
xchg
add
add
iret
scas
xor
push
hlt
lea
push
repnz
das
push
cdq
mov
mov
jge
(bad)
cmp
xchg
xchg
inc
add
jge
or
jl
cwde
test
adc
dec
xlat
out
fadd
adc
icebp
push
mov
push
inc
outs
or
into
mov
sbb
jnp
das
xchg
shl
pop
cmp
sbb
inc
arpl
inc
or
test
inc
xchg
dec
sub
hlt
add
leave
push
push
enter
int
cmp
das
repnz
jne
jmp
cwde
shl
jl
das
xchg
pop
xor
dec
pusha
adc
cld
aam
cmp
rcl
sbb
jo
popa
jg
add
das
mov
mov
xchg
outs
pusha
(bad)
jge
jmp
push
imul
pop
or
pop
cld
adc
inc
sbb
cmp
add
jnp
test
mov
lea
bswap
mov
sti
jo
mov
lock
dec
mov
bnd
(bad)
out
push
add
inc
shl
adc
mov
mov
fistp
loope
in
fdivr
jl
enter
jmp
bound
sub
data16
cdq
jmp
add
add
cmp
add
pusha
not
addr16
cmps
mov
push
add
das
in
add
ins
lock
std
mov
ins
test
les
ins
mov
int
mov
mov
cmp
add
int3
mov
mov
(bad)
(bad)
push
push
or
ror
lahf
dec
jg
mov
std
pusha
mov
in
jb
not
jbe
test
in
mov
push
ja
add
jg
retf
jmp
add
sub
cmc
lea
iret
repnz
repnz
repnz
mov
in
jmp
std
mov
js
fdiv
mov
jnp
and
dec
inc
repz
inc
ja
data16
(bad)
and
in
stc
int
std
mov
mov
(bad)
nop
enter
repz
pusha
(bad)
in
lock
add
std
in
mov
std
or
ins
cld
imul
add
mov
adc
fs
pop
das
add
inc
xor
push
add
and
dec
mov
add
popf
fadd
add
mov
les
rcr
adc
xchg
or
pop
add
inc
aam
repz
or
aam
pop
int3
shl
sar
imul
rol
int3
cmps
pop
mov
fs
leave
and
test
mov
sbb
jl
cmp
pop
jnp
xlat
jp
add
adc
jnp
mov
cmp
jbe
stos
daa
clc
or
pop
jg
mov
mov
cmp
retf
(bad)
jp
jg
jnp
js
out
pop
pushf
inc
ss
push
das
mov
outs
xor
into
sahf
std
lock
jne
add
jne
push
sbb
and
jo
stos
mov
adc
jbe
xchg
jp
ins
jne
pop
(bad)
neg
shl
jg
iret
jne
jo
jp
push
jbe
jne
jo
call
jbe
out
pop
lea
jo
jno
ja
dec
repz
jp
jne
add
jbe
adc
xchg
psllw
retf
scas
xchg
or
mov
mov
add
jp
dec
jno
jo
jo
(bad)
je
fbld
jo
ss
dec
cli
out
adc
cmp
jno
jecxz
mov
jp
rcr
fist
sub
jne
je
cli
jp
lahf
push
jbe
jne
(bad)
cmps
ficomp
xlat
pop
aaa
sub
xchg
sub
test
mov
out
jmp
dec
inc
jo
jo
ins
push
xchg
ins
pop
pop
add
sbb
pushf
mov
test
jg
inc
xchg
nop
mov
(bad)
retf
or
add
mov
ins
lea
jg
jo
or
jge
gs
mov
jne
call
ins
cmps
and
jno
addr16
mov
enter
retf
mov
arpl
jmp
mov
jg
push
sbb
imul
sub
jmp
mov
xlat
pop
aaa
(bad)
shl
cmc
add
jp
dec
mov
shl
pop
and
push
jbe
mov
add
lock
aaa
sbb
jno
jg
add
hlt
and
mov
das
(bad)
cmps
jo
or
fistp
and
mov
test
push
add
jne
inc
pop
sub
inc
jl
mov
pop
cmp
and
jg
cmps
(bad)
mov
movd
jne
jo
jbe
fs
mov
pop
jo
or
fwait
ins
lahf
pop
or
or
push
sti
ror
les
inc
dec
cmp
test
push
inc
pop
das
iret
scas
icebp
out
rcr
sub
test
pusha
rol
push
and
and
jl
jo
or
subps
xchg
jnp
ins
sub
jl
into
mov
cmp
test
mov
dec
jno
inc
mov
dec
ret
jne
(bad)
jne
jno
inc
sbb
scas
das
adc
scas
push
outs
jne
add
pop
shr
cmc
jp
mov
push
adc
rol
scas
xchg
sub
xor
dec
adc
jp
mov
add
mov
add
mov
out
mov
xlat
jp
scas
or
and
daa
and
sbb
mov
push
add
push
jb
sub
das
lds
or
inc
ins
scas
jne
sbb
cmc
cmp
jg
mov
cwde
mov
sbb
xor
sub
cmp
iret
adc
je
out
loopne
mov
ficomp
push
fiadd
xchg
popf
sub
ss
sub
mov
(bad)
pusha
pop
scas
jo
xchg
xchg
add
into
daa
jl
xchg
call
scas
mov
mov
jnp
imul
jp
loope
push
mov
fsubp
dec
pop
and
loopne
retf
je
and
je
inc
and
jp
jne
jnp
and
cmp
xchg
js
add
ja
xor
add
adc
fidivr
push
xchg
cmp
js
pop
jbe
xor
jl
xchg
add
mov
cdq
mov
fist
ret
xlat
lock
push
scas
pop
and
fld
pop
scas
or
or
jbe
xor
gs
pop
das
dec
add
out
sbb
mov
scas
neg
fiadd
popf
pop
add
loope
push
mov
inc
xchg
pop
adc
shr
and
add
jne
or
call
jo
jbe
jmp
pop
sbb
xor
cmp
xor
xlat
lea
jno
push
je
push
adc
popa
add
or
jp
mov
out
jnp
test
sub
je
nop
js
out
into
push
xchg
mov
cmp
aas
aam
cmp
dec
stos
sub
sbb
call
pop
test
inc
xlat
into
out
fidivr
pop
push
and
mov
loop
scas
cmp
dec
jno
fwait
xchg
xchg
sub
xchg
cmp
out
sbb
(bad)
sar
das
xchg
or
aad
pop
call
jbe
cmps
call
stos
sahf
mov
leave
push
loope
push
add
scas
jne
jo
mov
jp
jne
mov
addr16
dec
or
push
test
add
out
popf
sbb
add
shl
dec
pushw
lea
mov
dec
add
jnp
(bad)
idiv
dec
add
cmp
scas
sub
cmp
sub
stc
imul
push
fld
test
push
loopne
fucomip
lock
cmp
and
ja
rcr
xlat
xchg
ss
push
scas
ret
scas
pop
call
iret
ret
or
xor
popf
jmp
jne
adc
mov
sbb
inc
pop
out
sbb
jmp
add
sbb
jmp
dec
stos
gs
pop
xrelease
jp
jno
jg
aam
xor
push
ja
stc
jp
and
movs
(bad)
out
jbe
and
mov
jmp
dec
(bad)
adc
cmp
outs
xchg
xchg
mov
jae
push
(bad)
enter
mov
or
adc
or
xor
or
dec
pop
pop
(bad)
xor
pop
shl
sub
loope
lahf
sbb
adc
jne
out
jnp
sub
mov
imul
neg
pop
jnp
adc
(bad)
pop
cwde
jnp
jb
mov
mov
pop
pop
jnp
and
sub
(bad)
inc
sbb
xlat
cmp
jg
push
jnp
add
xor
popf
cmps
adc
clc
sub
rcl
mov
enter
sub
push
xchg
inc
sti
jnp
add
push
out
jge
ret
pop
pop
mov
add
scas
mov
mov
shl
xchg
jg
cmp
call
jbe
jmp
lahf
pushf
pop
mov
push
mov
ja
or
popf
jbe
es
mov
mov
das
mov
clc
dec
jno
jno
dec
push
aas
push
push
mov
imul
dec
jl
int
shr
idiv
rol
sbb
fist
(bad)
and
cmp
jae
rcr
dec
bound
test
push
unpcklps
cmc
scas
mov
cmc
movs
add
adc
gs
out
dec
cmp
ins
cdq
mov
xor
inc
scas
(bad)
cmp
inc
test
xchg
inc
push
lock
cli
fist
or
mov
ret
popa
mov
repnz
push
stos
sbb
jecxz
fwait
pushf
shl
dec
dec
cmps
mov
jo
pop
jb
mov
pop
imul
jo
add
pusha
sbb
mov
pop
jnp
call
sti
jbe
jge
out
sub
leave
jo
push
cmps
ja
sub
jmp
not
add
inc
ins
xchg
push
mov
push
inc
mov
stos
jmp
data16
out
inc
jl
fidivr
or
jo
and
ret
repz
adc
pop
out
dec
(bad)
jg
mov
(bad)
sbb
inc
call
xchg
jno
mov
xchg
sahf
or
push
mov
add
or
pop
add
enter
sub
lds
pushf
xor
imul
je
xor
cmp
inc
push
and
aad
mov
test
fdivr
mov
cmp
add
stos
adc
in
add
jo
call
pop
mov
jae
and
repnz
sub
mov
inc
and
add
adc
mov
retf
add
adc
fsubp
jne
ja
xor
imul
add
pop
jecxz
push
(bad)
pop
cs
mov
push
(bad)
out
scas
jne
dec
sbb
mov
fldcw
jecxz
add
clc
mov
das
sbb
loopne
xchg
sbb
sti
out
pop
ret
mov
sbb
sub
mov
xchg
fwait
and
arpl
and
push
dec
mov
jae
sub
inc
fwait
jae
out
repnz
neg
push
aas
inc
jae
push
pop
repnz
xchg
inc
push
pop
clc
pop
push
adc
pop
retf
fistp
pushf
out
sahf
pop
imul
stos
add
cmp
push
add
ror
push
mov
add
popf
dec
repnz
mov
xchg
nop
fisub
ins
adc
lods
mov
adc
sbb
push
pusha
inc
xchg
sahf
retf
jmp
stos
cmp
push
sbb
jne
not
xchg
call
adc
ins
shl
mov
inc
sub
or
push
call
pusha
shl
mov
sbb
iret
(bad)
jp
ror
jmp
jmp
adc
xchg
imul
jg
jg
jnp
mov
ja
bswap
ror
iret
sbb
xor
(bad)
push
ins
jne
add
xor
mov
jmp
les
mov
inc
cmps
add
inc
mov
hlt
sbb
mov
bound
ficom
(bad)
(bad)
jmp
fwait
arpl
xlat
pop
fistp
cli
pop
outs
xchg
and
(bad)
out
mov
add
xlat
sub
push
sub
stos
and
fist
dec
push
addr16
ja
das
pop
daa
xor
aaa
in
mov
out
or
dec
pop
xor
aaa
xor
cmp
add
and
mov
push
fisub
or
repnz
add
je
mov
jbe
pop
popf
adc
jmp
movs
aad
pop
xchg
inc
cli
jne
jmp
cli
(bad)
rcr
cmps
xlat
aam
adc
bound
mov
and
jg
sar
movs
mov
test
xchg
ror
daa
add
or
ret
push
add
dec
loopne
in
ficom
cs
fistp
pop
adc
pop
add
les
xchg
xor
popf
add
ss
(bad)
push
pop
xchg
xchg
mov
push
call
repnz
xor
add
xchg
inc
mov
and
and
scas
add
xor
stos
sub
xchg
jp
ja
xor
adc
mov
aaa
xor
test
inc
fwait
cmps
inc
je
sbb
push
pop
push
sti
js
and
rcl
inc
fmul
out
push
mov
push
or
xor
arpl
outs
popa
mov
xchg
jmp
push
rol
sub
scas
(bad)
sub
inc
fsub
aas
xchg
sbb
sti
xchg
cwde
icebp
rol
and
xor
and
sbb
fwait
mov
mov
icebp
retf
and
or
nop
dec
pop
mov
xchg
jno
jle
(bad)
je
iret
mov
mov
dec
xor
icebp
shr
(bad)
fisub
xor
add
fild
mov
xor
mov
call
je
fsubr
icebp
push
jno
jp
jg
jb
sbb
in
jmp
pushf
or
test
push
jl
jl
lock
push
jbe
out
imul
(bad)
popf
push
jo
loopne
and
add
inc
dec
call
add
mov
pop
sub
scas
(bad)
loop
retf
add
push
push
add
dec
adc
lea
and
nop
dec
sbb
cmp
outs
les
test
jns
mov
mov
jnp
mov
dec
mov
push
movs
pop
dec
(bad)
push
xchg
pop
ret
cmp
push
je
pop
mov
enter
add
adc
out
mov
test
pop
cs
xor
mov
cmps
xchg
xor
dec
ins
push
pop
push
jmp
add
push
aaa
hlt
ret
dec
sbb
dec
iret
cwde
cs
scas
jp
rcl
mov
outs
gs
inc
jle
jp
repnz
sub
outs
mov
sti
or
mov
das
ja
jo
lods
test
outs
cs
das
cmp
adc
mov
xor
lock
out
mov
jo
das
sbb
sub
mov
lahf
(bad)
mov
sbb
mov
dec
xlat
push
inc
inc
mov
inc
mov
xchg
xchg
sar
imul
cmp
arpl
je
shl
jo
ins
push
out
push
lahf
mov
and
sbb
and
sbb
pop
push
fs
push
mov
ins
rol
xchg
sahf
cmp
jg
ss
cmps
mov
xor
sub
push
cmp
(bad)
shl
mov
push
test
mov
and
int3
inc
cmp
(bad)
(bad)
pop
inc
pop
xor
mov
jp
cmp
adc
mov
xchg
inc
add
loopne
push
dec
mov
fdivr
test
sub
sbb
es
shr
shr
je
push
push
push
pushf
xlat
pop
add
or
neg
icebp
dec
inc
je
jle
je
inc
xchg
xor
mov
es
push
scas
xchg
mov
pop
add
adc
int
pop
cli
xor
or
sub
jl
xchg
mov
pop
sbb
mov
or
push
rcl
cmps
icebp
mov
adc
ret
adc
hlt
(bad)
jmp
cmp
inc
test
js
cli
fcmovb
push
add
inc
add
pop
test
cmps
jp
and
daa
stos
add
push
cmps
loop
jmp
cmp
imul
mov
jmp
mov
sbb
xor
pop
add
xchg
loop
add
(bad)
sbb
push
or
jne
add
push
(bad)
mul
ins
stc
jg
jg
push
xchg
push
(bad)
jl
mov
jb
sub
pusha
pop
setle
push
cmps
icebp
inc
xor
aaa
jl
mov
sbb
mov
mov
pushf
jg
das
cmps
adc
pop
ret
push
mov
out
add
jmp
add
xchg
(bad)
out
mov
jl
adc
push
movs
mov
or
dec
jl
cmp
or
sahf
cmp
push
aam
xchg
pusha
adc
mov
push
push
xor
ds
mov
loope
call
xor
mov
mov
into
jnp
lock
sbb
jnp
test
aad
jp
jp
dec
addr16
cmp
scas
jbe
cmc
ss
push
xchg
fwait
adc
cmp
or
out
(bad)
out
xchg
pop
cmp
pop
pop
push
loopne
mov
out
popf
(bad)
test
cmp
aas
mov
sbb
inc
jp
popf
xchg
and
movsx
cmp
mov
(bad)
push
add
pop
outs
pusha
mov
jne
scas
xchg
sar
mov
inc
add
push
cmps
sub
cmp
xchg
dec
xchg
mov
sbb
xor
jae
cmps
les
jmp
fisub
pop
push
stos
or
pop
push
push
push
push
bound
out
gs
loop
jo
push
lar
cmc
ins
sar
jnp
pop
xor
out
pop
movs
or
hlt
inc
neg
jmp
shr
(bad)
xchg
mov
jo
push
jecxz
mov
adc
xor
push
mov
mov
pop
dec
pop
lock
and
jmp
xor
sar
xchg
icebp
and
and
daa
rcl
cmc
(bad)
push
xor
rcl
and
scas
scas
lock
sahf
dec
inc
jecxz
xchg
ficom
in
inc
fwait
stos
scas
sbb
shl
and
or
outs
pop
sbb
or
(bad)
addr16
rcr
iret
ja
ja
mov
add
stos
rcr
mov
stos
xchg
jnp
pop
push
into
cli
pop
fisttp
and
daa
ret
out
push
pop
sbb
imul
push
push
xchg
push
xor
sbb
dec
push
ja
push
cmp
daa
das
xchg
aaa
inc
sbb
loopne
cmp
xchg
cmps
mov
mov
mov
push
stos
push
add
gs
jp
shr
jne
cmp
mov
sbb
jo
pop
xchg
idiv
xor
push
dec
out
cmps
cmp
sbb
rcr
rol
fstp
addr16
add
jo
idiv
jbe
bound
add
and
ret
and
loopne
cmp
out
pop
xchg
aas
ret
jo
ss
and
nop
arpl
in
(bad)
pop
(bad)
xchg
sub
pop
out
out
push
cld
imul
addr16
dec
xchg
xor
jnp
sbb
dec
shl
es
mov
sbb
fcomp
retf
push
popf
mov
xchg
out
psrad
sbb
stos
cmps
add
push
sbb
cwde
ds
std
jp
jp
push
jp
xor
push
dec
xchg
xor
mov
rcl
fldenv
sbb
xchg
jmp
(bad)
push
add
daa
push
pop
fdivr
xchg
xor
jbe
sahf
mov
stos
adc
test
aaa
sub
test
and
loope
adc
(bad)
mov
mov
ret
xchg
pop
jmp
popf
cmps
and
add
fistp
sbb
inc
or
(bad)
stos
jl
adc
iret
daa
cmps
mov
mov
add
in
gs
xchg
fidiv
pop
add
jne
mov
das
in
dec
push
push
pshufw
and
jnp
das
fild
(bad)
aaa
cmp
out
mov
mov
repz
dec
cmp
ins
xchg
inc
ins
mov
xor
aaa
inc
push
popf
retf
(bad)
xchg
pop
xchg
jo
pop
xor
fcomp
dec
add
pop
ret
arpl
rcr
sahf
jp
push
xor
sub
movs
inc
loopne
adc
xor
out
mov
push
out
mov
or
mov
mov
inc
and
jo
lea
add
shl
sbb
ins
(bad)
fsub
or
add
xchg
push
mov
or
ja
scas
mov
xchg
cmp
jne
scas
(bad)
loopne
xor
(bad)
adc
xor
pop
or
push
retf
mov
call
inc
xchg
add
out
inc
dec
pusha
ins
(bad)
xchg
cmps
cmp
rol
adc
and
jb
mov
stos
jmp
mov
(bad)
dec
or
and
aam
pop
ja
jae
mov
ud0
outs
jl
add
mov
jnp
fisttp
nop
push
loopne
push
pop
(bad)
cwde
mov
add
push
xor
cmp
(bad)
sbb
jo
pop
sbb
adc
sub
sti
and
inc
aaa
jbe
outs
mov
add
outs
inc
(bad)
sub
pop
bound
xor
jmp
(bad)
rcr
pop
xchg
add
outs
push
sub
int3
sbb
and
ret
cmp
aaa
mov
sbb
dec
add
aam
pusha
lods
ss
xlat
or
xchg
jne
pop
or
mov
sub
fbld
nop
add
data16
ficom
or
jb
xor
fwait
inc
inc
and
add
push
out
ret
xor
xor
inc
bound
or
mov
ja
frstor
ud2
sub
(bad)
xchg
mov
aad
cmp
inc
pushf
into
or
mov
push
xor
push
mov
adc
push
jae
push
add
xchg
and
or
mov
xchg
sub
cmp
lahf
fdivrp
inc
lock
maskmovq
add
mov
push
mov
retf
inc
push
pop
and
inc
cmp
shl
pusha
mov
mov
out
dec
sbb
cmp
not
in
sub
pop
pop
ins
not
out
sbb
and
iret
adc
xor
jp
fsubrp
pop
jl
shl
or
push
push
mov
fs
and
ja
pop
push
mov
faddp
stos
mov
xor
movs
call
or
fimul
and
cmp
lea
pop
and
xchg
(bad)
adc
dec
xchg
je
jecxz
inc
xor
mov
mov
jo
pop
stos
push
ret
adc
cmp
xchg
mov
xchg
stos
mov
adc
paddd
ins
rcl
inc
and
adc
add
imul
pop
xchg
jnp
cmp
adc
pop
mov
xor
push
repz
les
bound
shl
push
mov
fcmovne
fiadd
aaa
jecxz
pop
sub
add
add
pushf
dec
add
mov
jae
sub
scas
scas
loop
mov
push
ret
xchg
or
scas
and
or
xor
or
adc
add
sbb
addr16
push
scas
add
pop
or
jnp
enter
jecxz
add
xchg
jp
push
and
loop
inc
mov
xor
adc
fidivr
push
fidivr
mov
mov
call
ret
ds
or
ror
je
dec
lock
leave
and
xor
cmp
mov
cmp
test
dec
push
into
popf
outs
cli
inc
sub
add
shl
jo
pop
pop
sbb
or
mov
imul
mov
push
push
out
xor
dec
xor
retf
pop
mov
push
les
ror
push
mov
add
(bad)
mov
jno
jle
dec
mov
lods
mov
push
mov
xchg
sub
inc
ja
sbb
pop
push
popa
loope
test
je
rcr
das
cmp
cmp
xchg
adc
and
cs
and
add
mov
ret
jb
stos
mov
dec
adc
jae
jmp
push
jnp
rol
sbb
add
stos
xor
fsub
lds
outs
or
push
dec
adc
xchg
mov
mul
mov
popa
ins
sbb
rcr
mov
and
adc
cmp
mov
mov
pop
inc
xchg
aam
dec
mov
jmp
pop
push
fistp
and
movs
test
out
test
xchg
clc
into
(bad)
xor
xchg
mov
add
push
shl
div
or
ror
adc
mov
add
mov
cmps
cmp
jp
pop
or
jo
rcr
push
stos
inc
cmp
pop
or
icebp
add
add
inc
xchg
add
out
and
or
jl
mov
retf
jg
jg
inc
add
mov
aaa
jo
sbb
imul
adc
pop
add
add
frstor
cmp
push
push
xor
add
loopne
pusha
(bad)
push
jg
xor
push
xchg
or
mov
push
rcl
mov
ins
fild
ret
adc
push
pop
in
adc
inc
adc
adc
push
shr
rcr
ficomp
jmp
out
pop
mov
push
push
pushf
add
scas
adc
out
add
add
add
out
ret
adc
shr
inc
or
add
sub
sbb
daa
jnp
mov
pop
cmps
lea
test
xor
dec
push
push
add
xor
arpl
mov
or
(bad)
push
(bad)
popa
pusha
add
mov
adc
jmp
rcr
idiv
inc
out
cmps
mov
jmp
add
add
aad
ret
scas
pop
fsubr
test
push
or
adc
scas
or
or
sub
inc
dec
sbb
mov
push
mov
daa
mov
inc
xchg
out
pop
jp
pop
fistp
cmp
in
jp
imul
js
push
sar
lea
cmps
ins
inc
xor
fmulp
int3
inc
sbb
xchg
add
pop
add
mov
add
xor
lea
fsubr
sub
div
add
cs
pop
jnp
push
mov
add
adc
mov
push
inc
stos
jb
jl
and
adc
mov
sbb
jg
(bad)
adc
push
cmp
xchg
imul
inc
data16
jae
mov
(bad)
pop
mov
push
ret
pop
xor
sub
pusha
xor
inc
(bad)
daa
adc
loope
mul
sbb
ja
loope
jnp
out
pop
(bad)
test
add
(bad)
rol
icebp
jmp
aaa
xor
popa
lods
and
mov
test
rol
(bad)
xor
data16
adc
call
inc
add
loopne
iret
test
leave
adc
mov
sti
imul
inc
sbb
jo
call
sahf
pop
inc
js
add
ins
add
xchg
ret
xchg
xchg
pop
fcmovnbe
cmps
ins
inc
dec
cmp
or
loop
jecxz
mov
xlat
ret
fs
lahf
pop
sbb
jmp
retf
(bad)
adc
or
(bad)
xchg
push
les
sub
mov
mov
add
cmps
xchg
add
cmp
adc
or
and
out
inc
mov
sub
or
sbb
inc
test
pushf
dec
adc
dec
sbb
push
(bad)
xchg
out
and
dec
xor
or
jp
add
fwait
scas
mov
xor
cmovbe
jp
loop
sub
popf
pop
fstp
scas
push
shl
inc
jb
xchg
fcomp
rcr
pusha
shr
mov
inc
jp
push
adc
mov
sub
inc
ret
inc
mov
loopne
imul
add
nop
ret
xchg
rcr
xor
pusha
mov
xor
or
and
fild
aam
cs
mov
push
adc
jb
dec
lock
jo
xchg
pushf
retf
dec
and
out
call
adc
inc
popf
push
mov
add
cmp
jno
or
push
or
sbb
jo
ss
daa
stos
push
xchg
stos
das
pop
mov
mov
ds
jp
and
dec
sub
sub
dec
jbe
aas
and
mov
lock
loopne
shl
push
add
or
in
mov
fiadd
imul
dec
pushf
push
sbb
lds
in
(bad)
pop
imul
imul
ins
lahf
jmp
push
out
pop
psadbw
add
adc
jne
and
mov
cmp
fwait
or
sbb
scas
stos
push
mov
xchg
(bad)
jg
inc
xor
sbb
imul
add
inc
outs
xchg
jbe
pusha
and
fimul
mov
add
cmps
es
and
mov
push
or
lahf
enter
or
inc
mov
(bad)
jnp
add
stos
push
scas
inc
pop
mov
adc
ss
mov
ficomp
dec
or
dec
sub
inc
jnp
inc
ja
xor
push
inc
pop
add
xchg
jmp
push
cmp
inc
cli
xor
or
sub
pop
loopne
(bad)
sar
dec
dec
ins
mov
add
add
push
sub
jae
xor
or
fstp
sub
rcr
ficomp
xchg
xchg
ja
popf
out
inc
or
or
or
lea
add
mov
jbe
push
push
ret
loop
and
loope
mov
rcr
dec
cmp
pop
add
sbb
xchg
xor
fdivr
sbb
je
add
or
adc
and
movs
scas
mov
or
bound
jp
xchg
jo
mov
inc
gs
adc
and
xchg
xor
shl
mov
dec
outs
cmp
mov
out
xchg
adc
pop
inc
mov
shr
xchg
stos
inc
dec
scas
push
test
dec
fucomp
push
jbe
dec
aas
retf
aam
sti
mov
inc
neg
inc
ror
mov
jnp
jno
add
push
push
(bad)
and
stos
jae
add
jp
dec
mov
or
(bad)
xor
loop
and
cmps
aaa
sbb
adc
sbb
out
push
imul
cmps
je
pushf
adc
mov
add
mov
or
jb
xchg
cmps
inc
add
dec
jne
test
adc
ja
sub
add
ja
jo
sub
or
sub
test
out
push
dec
daa
push
inc
ss
test
scas
push
xchg
xorps
push
dec
sub
lods
push
inc
retf
daa
cwde
daa
cwde
inc
and
aad
sbb
inc
cmp
and
or
xchg
ret
cmp
inc
add
add
and
inc
xchg
dec
mov
gs
stos
pop
adc
push
and
test
xor
or
pop
add
xchg
pop
imul
jp
or
je
xor
stos
bound
adc
dec
sub
pop
test
out
or
sbb
or
cmps
cs
mov
push
mov
add
xchg
pushf
mov
jb
mov
es
cmps
outs
xor
cli
adc
inc
loope
and
addr16
cmp
sub
xchg
cmps
sbb
inc
or
inc
jl
dec
push
mov
push
xchg
pop
stos
inc
lahf
adc
jp
ins
out
push
call
dec
into
dec
dec
test
jbe
lock
mov
pushf
out
mov
pop
mov
push
pop
mov
cmps
sub
ret
inc
or
loop
cmps
push
xor
add
pusha
xchg
dec
xor
and
dec
or
or
mov
xchg
repz
addr16
test
mov
gs
or
aam
mov
or
inc
jnp
iret
sub
push
add
xchg
xor
and
dec
bound
push
mov
rol
adc
pop
out
jle
mov
mov
adc
mov
xchg
sub
and
inc
fiadd
pop
mov
sub
push
popf
setl
mov
ret
into
jmp
or
push
adc
mov
seto
mov
int
dec
cmc
cli
(bad)
(bad)
stos
je
test
sti
inc
es
jp
dec
arpl
pop
bound
pop
mov
inc
sub
push
leave
outs
sub
and
adc
and
sbb
push
or
push
jmp
dec
or
mov
outs
jp
jg
inc
imul
cmp
adc
and
fild
push
dec
(bad)
jecxz
add
or
(bad)
cs
push
pop
(bad)
imul
sub
push
sbb
or
int3
sbb
adc
push
add
jmp
in
jmp
pop
add
inc
fisttp
dec
cs
jb
aaa
xor
fwait
adc
mov
mov
retf
popf
mov
push
xchg
mov
mov
test
jnp
xchg
(bad)
pop
inc
pop
push
jnp
push
lods
push
and
adc
xchg
jno
xchg
shl
xor
xchg
mov
adc
cmps
call
jp
mov
mov
xchg
xor
outs
jne
jle
jbe
mov
inc
push
and
adc
adc
sbb
retf
or
lods
push
push
mov
xchg
pop
or
push
inc
mov
(bad)
sbb
aas
inc
adc
sti
es
ins
popa
pusha
pushf
mov
movs
(bad)
sar
pop
xor
xor
lahf
(bad)
adc
sub
sub
or
mov
aaa
mov
inc
xlat
xchg
push
push
(bad)
mov
or
add
cwde
stos
and
scas
dec
adc
gs
inc
push
dec
lods
pop
fidivr
inc
add
pop
es
jo
push
mov
js
scas
jecxz
dec
jno
aaa
xor
repnz
mov
push
retf
lahf
ret
aam
dec
push
fild
mov
dec
inc
stos
retf
mov
or
push
xchg
mov
iret
and
pop
pop
add
adc
cmp
in
push
test
jne
mov
bound
jb
jp
mov
push
jb
sbb
xchg
mov
inc
push
add
pop
jbe
mov
test
out
add
imul
addr16
mov
into
js
mov
repz
pop
push
xlat
mov
fistp
xor
mov
call
add
adc
dec
add
cmp
xchg
and
add
jo
push
sbb
xchg
lods
pop
pop
cmps
out
xor
fs
out
mov
imul
jne
test
repnz
add
mov
out
sub
arpl
imul
sub
push
or
xor
es
out
test
jnp
mov
jmp
mov
pop
mov
pop
sub
dec
lods
pop
aaa
pop
push
mov
or
aam
cmp
push
or
mov
not
sub
dec
jne
sbb
leave
rcr
cmp
jmp
neg
adc
push
or
out
(bad)
mov
inc
and
je
aaa
neg
pop
push
scas
dec
cmps
into
xor
dec
jmp
add
(bad)
stos
fwait
adc
rol
clc
pushf
out
jo
add
jne
and
push
adc
sub
or
push
cmps
test
repz
call
push
rcl
cmp
rcr
jb
sbb
test
xchg
pop
mov
aad
and
lock
pop
add
mul
dec
pop
rol
xor
sub
imul
and
or
dec
cmp
adc
sbb
repnz
out
ror
cmp
push
inc
scas
mov
jne
jno
push
or
inc
xor
and
add
pop
lods
mov
push
sti
jae
ror
ror
fild
mov
inc
sub
scas
xor
cmp
pop
(bad)
mov
inc
ins
and
mov
movs
es
mov
stos
push
xchg
add
sub
jmp
mov
or
arpl
jbe
ja
shl
add
aas
arpl
and
outs
jno
jne
adc
aaa
sbb
daa
das
cmps
mov
(bad)
push
xlat
add
add
arpl
daa
cs
psubsb
add
xor
pop
sbb
pop
adc
jb
enter
pop
or
dec
jbe
adc
sbb
dec
mov
pop
arpl
ret
or
adc
dec
lods
jne
lahf
add
adc
inc
cdq
xchg
xchg
mov
mov
ret
inc
jo
cld
jg
je
mov
pop
test
jg
cmp
adc
popf
mov
test
push
in
ret
pop
loop
jp
inc
test
or
rol
or
jg
and
sub
ss
into
pushf
push
cmp
sar
cmp
lods
dec
lds
aaa
outs
push
retf
ds
(bad)
retf
mov
sub
(bad)
add
push
push
adc
test
popa
outs
add
test
fidiv
cli
adc
sbb
push
push
push
adc
mov
push
xchg
dec
jno
add
push
push
cmps
ja
out
jecxz
aaa
xor
pushf
dec
xor
rol
fimul
jmp
push
out
dec
mov
push
imul
or
in
pop
cmp
cmps
xchg
and
jno
sbb
mov
loope
add
mov
xchg
add
cmp
jp
mov
adc
add
mov
and
xchg
rol
ss
(bad)
mov
(bad)
inc
sub
and
xchg
jbe
or
mov
in
mov
or
test
add
call
lds
push
adc
call
inc
sub
outs
push
dec
popf
outs
sub
jecxz
xor
sub
lock
push
add
push
pusha
mov
sbb
cmp
jae
jnp
push
xor
shl
jbe
dec
pop
shl
and
or
scas
loopne
rol
mov
add
mov
adc
adc
xchg
test
(bad)
(bad)
je
or
sbb
fidiv
data16
pop
xor
jne
mov
fst
popa
mov
cmp
mov
push
or
mov
push
(bad)
or
(bad)
ja
ja
movs
push
fist
ds
fcomp
cmps
call
fidivr
inc
push
(bad)
sub
mov
test
data16
add
xchg
push
cmp
inc
mov
jo
add
cs
pushf
shl
mov
rol
push
sub
dec
scas
outs
push
mov
jmp
arpl
daa
xor
or
mov
test
mov
push
mov
add
add
and
adc
push
cmp
push
mov
cmp
movs
(bad)
dec
stos
mov
outs
push
add
inc
ret
shr
xchg
cmp
push
pop
sbb
xchg
push
add
or
xchg
ror
add
xchg
push
push
(bad)
cmp
adc
adc
and
movs
mov
xchg
lock
jo
cmps
jnp
sbb
rcr
xor
jp
and
ret
iret
mov
inc
or
jecxz
retf
pop
popf
adc
loop
ds
sub
jb
fdivrp
jbe
iret
dec
mov
sub
daa
jle
aam
sbb
xlat
fidivr
and
adc
cmp
push
sub
adc
test
xor
mov
and
xor
xchg
push
ins
arpl
add
mov
xchg
enter
pop
(bad)
mov
xchg
sbb
into
sub
loop
pop
adc
push
inc
int
cmps
xchg
test
sbb
inc
add
ins
repnz
jg
out
adc
stos
sbb
sub
into
ins
(bad)
psubd
sbb
sbb
rol
cmps
fdivrp
cmp
adc
inc
call
arpl
xor
push
pop
push
push
xchg
jo
xchg
jo
inc
idiv
and
dec
inc
imul
nop
outs
(bad)
jl
mov
dec
sbb
and
or
call
imul
mov
scas
cmps
inc
loopne
pop
push
add
jp
movs
and
jmp
add
mov
shl
outs
icebp
dec
inc
and
xlat
or
pop
xchg
mov
(bad)
bnd
cli
sbb
data16
push
push
push
sbb
jmp
ret
adc
xchg
push
adc
repnz
jmp
test
pop
bound
push
xchg
inc
lea
jp
stos
pop
push
xlat
dec
mov
or
out
inc
xlat
push
imul
out
leave
popa
and
jp
mov
adc
xor
sub
neg
mov
cli
dec
jno
add
sbb
push
(bad)
ret
inc
push
into
sub
adc
sbb
movs
xor
mov
pop
add
or
and
shl
sbb
mov
popf
jp
(bad)
sbb
adc
out
adc
sar
loop
sub
or
push
add
or
sbb
or
cmp
cmp
xor
adc
pop
jnp
inc
mov
pushf
cmp
add
dec
ins
shl
out
push
mov
xor
and
mov
mov
sub
call
pop
pop
jg
data16
and
das
fld
js
jmp
mov
mov
mov
popf
add
movs
cmp
inc
ja
cmc
inc
dec
or
and
dec
push
cli
and
inc
or
cs
add
sbb
or
aad
add
ds
push
es
ss
call
call
jecxz
pop
push
pop
push
ds
call
jnp
mov
push
xor
mov
iret
(bad)
(bad)
inc
mov
aaa
xchg
add
push
dec
sub
pop
ror
call
bound
das
jmp
ss
push
or
add
dec
sar
enter
mov
push
xchg
test
push
add
mov
pop
ds
or
inc
push
iret
jl
shl
or
or
push
sahf
push
(bad)
imul
popa
xchg
(bad)
ds
xchg
push
push
cmp
mov
add
sub
daa
stos
data16
retf
cmp
out
adc
push
jmp
rol
fisubr
push
push
lods
cs
jg
add
adc
dec
out
adc
inc
add
sahf
sub
mov
loop
cmp
xchg
jo
data16
jle
or
push
or
add
dec
and
dec
loope
xchg
iret
fwait
sbb
xor
add
push
outs
pusha
and
or
mov
int3
aam
cmp
icebp
mov
mov
xor
pop
ss
jo
add
add
xor
test
adc
adc
sub
or
and
jecxz
cmps
out
inc
and
cli
iret
jp
mov
repnz
rcl
or
sbb
push
add
and
add
mov
cwde
mov
(bad)
jp
dec
ds
mov
sub
jnp
add
add
movs
or
xor
sbb
and
aaa
out
xor
xchg
pop
pop
aaa
sbb
adc
ds
movs
aad
push
scas
dec
repnz
jecxz
adc
cmp
fcom
and
and
(bad)
inc
outs
mov
inc
push
dec
push
xchg
add
inc
sub
bound
dec
jo
add
inc
sub
push
pop
inc
mov
ret
(bad)
pop
sub
add
push
jo
dec
loopne
adc
xor
sbb
mov
loopne
das
jnp
xchg
add
stos
sub
or
and
(bad)
push
push
ret
stos
jne
mov
and
sub
shl
push
xor
inc
dec
jle
jo
dec
inc
stos
xor
lods
or
cmp
jecxz
or
outs
adc
or
stos
rol
mov
adc
add
outs
dec
loopne
pop
add
pop
sub
das
lods
adc
or
jbe
loopne
jno
ret
and
jb
adc
dec
retf
sbb
add
pop
(bad)
call
scas
popa
adc
push
mov
dec
or
pop
inc
lea
and
out
add
push
mov
add
sbb
sbb
mov
pop
scas
arpl
movs
jo
jbe
into
shr
jne
or
js
ret
and
ret
dec
scas
add
out
sbb
ret
jne
cmp
sbb
rcl
cmps
push
xchg
ins
loopne
or
retf
stos
jmp
js
xchg
jnp
jne
sub
push
add
movs
xchg
rcr
add
pop
inc
cmps
add
pop
add
mov
ror
pop
bound
or
add
xlat
ror
and
repz
jp
mov
into
pop
xchg
mov
pop
rcr
pop
push
xchg
push
mov
sub
sbb
pop
ja
or
retf
stos
dec
sbb
(bad)
push
mov
ja
cmc
les
add
aas
mov
add
sahf
shr
not
inc
sub
call
add
sbb
add
mov
mov
jae
sub
mul
cdq
stos
dec
dec
add
ja
mov
or
(bad)
div
adc
inc
jnp
mov
call
adc
nop
sar
(bad)
jo
push
bound
rcl
xchg
sbb
dec
cs
push
push
or
push
xor
das
xchg
and
cmp
add
loop
sahf
ins
and
jo
fistp
mov
(bad)
popa
inc
pop
mov
retf
popw
add
or
pop
mov
sub
sbb
fisttp
jne
out
scas
inc
shl
jnp
(bad)
inc
and
mov
adc
fwait
jmp
ds
mov
adc
inc
shr
and
movs
jo
cmp
imul
xor
arpl
(bad)
sub
inc
dec
cmp
mov
push
pop
lahf
(bad)
adc
ret
sahf
ret
sub
jmp
(bad)
jnp
add
mov
idiv
dec
sub
dec
dec
inc
add
xchg
out
test
cmps
and
retf
add
mov
retf
inc
or
pusha
mov
dec
jnp
mov
mov
jle
shr
add
dec
cmp
mov
push
pop
mov
loop
mov
mov
ret
inc
push
mov
or
or
sub
push
cmp
div
fist
outs
rol
faddp
outs
xor
push
and
sub
dec
and
movs
adc
dec
sbb
xchg
cmc
mov
sbb
movs
sbb
xchg
stos
scas
push
dec
push
pop
pop
fistp
aad
lods
jecxz
pop
mov
add
dec
mov
cs
outs
mov
xchg
jbe
sbb
mov
mov
xor
cmp
add
add
loop
inc
test
push
push
enter
popf
movs
add
(bad)
pop
add
and
add
push
push
add
fcmovbe
dec
sub
adc
cmp
loop
test
ins
cs
daa
iret
inc
pushf
sbb
cmp
cmp
jle
add
mov
xor
stos
jp
mov
push
push
pop
(bad)
daa
pushf
pop
mov
pop
xor
inc
dec
scas
imul
and
sbb
sub
imul
out
and
dec
movs
test
xchg
ficomp
jno
pop
lods
cmps
popa
shl
push
pusha
fcmove
das
sbb
out
jge
dec
sub
repnz
mov
xor
dec
xchg
aaa
popa
cmp
mov
lea
aam
fisub
fimul
jnp
test
mov
xchg
pop
xchg
jmp
cmps
pushf
mov
or
loopne
cwde
adc
push
push
jne
xchg
inc
ins
inc
ss
dec
test
add
or
and
xchg
sub
xchg
mov
inc
add
shl
push
scas
outs
test
or
cmp
aad
sub
rcr
push
push
sub
pusha
adc
push
inc
add
mov
shr
push
sbb
retf
cs
push
rol
mov
jnp
mov
es
rol
retf
fstp
pushf
bswap
aas
push
ins
ror
xor
or
ret
push
xor
pop
mov
fisub
cmp
out
sub
loope
and
pop
cmp
inc
leave
cs
outs
inc
xchg
dec
cmova
lods
add
push
push
pop
test
out
aas
popf
push
loop
jge
or
lods
mov
scas
xchg
imul
out
adc
sub
mov
imul
mov
into
divps
or
pop
adc
cmp
dec
sbb
add
sub
ret
or
xchg
dec
and
xor
add
loop
(bad)
fcom
retf
or
sub
jne
push
(bad)
sar
jbe
pop
dec
test
or
lock
or
adc
ss
out
iret
xchg
push
fimul
aaa
pop
loopne
loopne
inc
jae
sahf
or
push
push
jmp
sub
es
lahf
jae
mov
or
cmovb
or
sub
rol
dec
call
inc
pop
add
out
jmp
lods
pop
pop
es
push
icebp
mov
pop
sar
mov
push
push
repnz
ficom
aaa
(bad)
pusha
mov
cmp
or
pop
xor
push
push
dec
jp
ror
or
out
imul
loop
xor
xchg
test
jbe
mov
mov
adc
sub
test
and
or
sbb
adc
sbb
rol
push
or
loope
sbb
movs
mov
mov
daa
out
sub
push
add
push
ffreep
or
call
(bad)
popf
sbb
dec
xor
ss
dec
and
pop
ins
outs
in
adc
fisubr
jnp
cs
add
add
call
outs
inc
xchg
addr16
les
add
push
mov
fcmovbe
mov
mov
lods
sbb
sub
or
lods
pop
fidiv
and
cmp
popa
mov
jmp
cmp
mul
jmpw
sub
fucomip
gs
push
inc
cmp
pop
outs
jmp
mov
cmp
sbb
push
pop
pop
jbe
ins
mov
dec
and
adc
ret
cmp
jmp
dec
dec
push
call
push
mov
adc
jo
adc
imul
sbb
retf
ins
inc
sbb
dec
cwde
sub
arpl
jp
adc
push
push
and
adc
push
nop
or
push
dec
ret
or
or
jmp
sbb
xchg
mov
ret
push
mov
jb
dec
inc
or
push
addr16
ficomp
adc
outs
sbb
sbb
xchg
and
or
dec
leave
into
aam
jno
or
pop
jecxz
pop
les
push
and
and
xor
add
call
adc
mov
add
dec
xlat
inc
jne
and
mov
inc
ror
push
dec
out
dec
scas
and
lock
inc
inc
mov
add
push
lock
loop
fs
xor
ror
xchg
push
jnp
jecxz
shl
pop
mov
cmp
mov
push
mov
sbb
or
fisttp
stos
sub
pushf
imul
inc
sub
nop
mov
inc
daa
cmps
or
lods
adc
mov
jae
pop
fbld
retf
stos
nop
adc
shl
xor
adc
shr
loopne
aaa
icebp
mov
inc
les
jmp
call
out
ret
pushf
and
mov
xchg
mov
movs
out
into
cmps
sub
jbe
psubd
icebp
into
and
fs
movs
pop
ret
push
sub
in
pop
call
add
sbb
push
xchg
dec
bound
and
dec
ret
push
jnp
xor
fisttp
adc
mov
sub
xchg
or
adc
xor
(bad)
add
pop
pop
sub
sub
cmp
js
call
pop
xchg
retf
sbb
sbb
xor
add
or
ss
inc
ds
or
ficom
and
imul
push
xor
sbb
cmps
mov
mov
inc
dec
and
adc
retf
mov
adc
xchg
sub
sbb
adc
inc
lahf
and
adc
test
inc
cmp
push
jbe
mov
ja
lahf
pop
loop
xchg
inc
adc
cmp
mov
movs
test
push
dec
test
lea
adc
push
ficomp
push
xor
mov
push
xchg
or
test
out
dec
or
popa
pop
sub
rol
push
mov
or
mov
loop
cs
jl
daa
and
cmp
jne
ret
mov
nop
imul
push
loope
(bad)
pop
jmp
push
mov
add
xchg
cmps
outs
add
or
sub
ja
add
out
ja
add
inc
sub
mov
mov
sub
adc
dec
jbe
bound
outs
mov
and
dec
push
push
or
pusha
xchg
pop
add
test
loopne
loopne
xor
ret
and
add
inc
es
or
cmp
push
push
xchg
movs
push
call
or
out
mov
fidivr
sahf
arpl
aas
ror
out
lea
and
mov
inc
mov
lea
mov
retf
mov
test
mov
jp
inc
push
inc
or
ror
pop
cmps
ror
test
push
xchg
(bad)
mov
jmp
into
mov
sbb
jl
fstp
xor
jp
sbb
call
in
pop
daa
jmp
jmp
retf
push
es
shl
(bad)
jecxz
push
sub
or
add
adc
jb
pushf
adc
sub
xchg
daa
and
pop
(bad)
test
fisub
xchg
push
xchg
dec
enter
icebp
add
xor
pop
inc
and
add
rcr
pop
ficomp
or
cli
mov
gs
jbe
pop
add
push
(bad)
imul
shl
dec
dec
mov
mov
ror
jbe
fidiv
cs
(bad)
repnz
in
push
push
pop
xchg
or
add
ss
push
dec
xchg
cmps
and
test
xchg
repz
retf
cvtps2pd
movs
sub
pushf
ja
inc
arpl
scas
mov
and
add
adc
test
and
test
loop
push
enter
cmps
xchg
shl
jmp
pop
adc
sub
add
jae
jnp
and
mov
dec
ror
outs
push
jno
dec
cs
xchg
xchg
test
or
out
add
adc
cmps
push
(bad)
jecxz
je
bound
pop
push
sbb
movs
pcmpeqd
xor
popf
add
iret
movs
or
test
scas
rcl
inc
loop
into
arpl
fs
fiadd
sbb
mov
gs
add
adc
ins
test
mov
adc
xlat
pop
test
dec
push
mov
popf
test
mov
mov
pop
cmp
sbb
jle
cmps
mov
xchg
dec
or
sub
mov
dec
and
ds
test
dec
rol
sbb
push
out
loopne
pop
jb
shr
xchg
into
sub
js
dec
mov
xlat
jmp
mov
ret
add
xchg
ss
jbe
xor
data16
sub
mov
push
xchg
cwde
sahf
xlat
xor
sub
adc
push
call
jne
ret
(bad)
push
test
mov
and
xchg
cwde
add
inc
aad
mov
cmp
sub
xchg
add
adc
mov
xor
cmp
inc
jmp
add
push
mov
sub
add
jecxz
mov
sub
or
adc
cmps
push
add
sbb
mov
and
sub
(bad)
ficomp
repz
mov
or
sbb
dec
push
fs
ffree
inc
call
loopne
sbb
pusha
push
inc
xor
ret
fs
or
mov
mov
mov
or
jne
push
mov
ret
mov
(bad)
out
mov
push
lahf
dec
push
sbb
push
sub
mov
adc
mov
sbb
iret
push
dec
sbb
cmp
xchg
xor
dec
fisubr
shld
(bad)
sub
or
adc
mov
add
dec
add
add
push
rcl
mov
ins
fiadd
dec
pop
add
or
mov
dec
dec
xor
fimul
or
adc
mov
inc
push
adc
adc
movs
bound
je
adc
call
add
rcl
jmp
data16
out
mov
jbe
fsubr
test
pop
cmp
adc
sbb
sbb
pop
xor
rol
dec
push
jo
lock
adc
xor
add
cmp
push
dec
test
add
rcl
in
sub
cdq
ret
or
xor
adc
lahf
push
dec
and
or
and
or
(bad)
push
push
popa
push
push
adc
push
or
add
sub
btr
dec
push
xchg
xchg
cmp
or
xchg
fdiv
dec
or
sub
ret
adc
add
ror
mov
ret
sub
movs
xor
sub
ins
inc
(bad)
in
movs
fidiv
and
jg
add
add
fild
mov
push
add
inc
mov
sbb
push
pop
mov
pop
dec
mov
das
add
adc
add
and
pop
in
inc
jae
inc
leave
js
dec
daa
sub
adc
ret
stc
push
inc
xor
add
sub
and
mov
loopne
inc
pop
fs
pop
shr
fwait
dec
outs
fwait
hlt
es
aaa
jo
and
mov
mov
les
js
lahf
imul
pop
or
push
push
ds
add
ins
push
lods
data16
sbb
pop
movsx
test
mov
pop
(bad)
pusha
ins
add
emms
xchg
addr16
push
pop
add
in
fstp
addr16
data16
gs
fld
in
loopne
cs
push
or
int3
data16
mov
push
mov
adc
sub
addr16
dec
mov
fmul
outs
add
mov
inc
pop
push
mov
mov
sbb
mov
pop
fdiv
addr16
inc
hlt
(bad)
push
shr
xchg
xlat
cmove
nop
inc
pop
fcomp
ins
shl
outs
pusha
addr16
ja
mov
inc
or
jle
inc
pop
outs
enter
pop
les
push
sub
aas
adc
fs
mov
push
call
xchg
pop
data16
xchg
cs
push
pop
cs
xchg
jne
push
fs
in
mov
rcl
cld
call
xor
push
stc
call
cmp
dec
cmp
cwde
sbb
stc
ror
mov
adc
sub
enter
pop
add
add
in
or
mov
or
sub
stos
inc
das
ja
das
jo
push
jbe
jae
push
out
push
cld
out
pop
jb
aam
mov
ins
pusha
push
mov
pop
lds
sar
in
in
dec
xor
data16
rcl
add
ds
pop
mov
jae
xchg
data16
fdiv
repz
nop
xchg
mov
or
movs
mov
fiadd
pop
sbb
data16
fisub
aas
pop
or
push
inc
repnz
jl
pop
sub
ins
jl
xchg
and
call
lods
mov
or
cmp
lahf
test
xchg
dec
in
mov
ds
pushf
dec
pusha
sbb
retf
les
movs
inc
out
fs
scas
sub
daa
mov
rcl
xchg
push
sbb
dec
and
sahf
sub
test
xor
push
push
sub
gs
push
add
pop
ins
xor
or
outs
retf
dec
inc
push
cld
inc
dec
iret
int3
ficomp
inc
xor
dec
sub
push
(bad)
int3
jnp
add
pusha
mov
sbb
movs
push
dec
dec
sahf
mov
inc
pop
sub
scas
pcmpgtw
push
and
aaa
or
ss
jns
xchg
add
add
xor
jbe
add
adc
test
clc
push
xor
sub
je
add
nop
and
cld
push
fldenv
ja
ja
ds
inc
jo
dec
jl
sub
inc
jns
movs
imul
fbstp
push
data16
dec
mov
sbb
cmps
xchg
rol
ss
pop
add
lods
mov
cmp
sub
lods
inc
ss
in
pop
cmp
adc
sub
push
push
dec
push
jns
pop
in
xor
inc
fmul
cbw
sub
sub
dec
cmp
pop
test
pop
loop
ss
pop
xor
mov
cmp
(bad)
mov
xchg
dec
aaa
fwait
lea
test
dec
add
inc
pop
ja
sbb
xchg
sbb
aaa
pop
push
aaa
push
fiadd
nop
cld
mov
push
or
es
data16
and
mov
fisttp
inc
push
popa
push
out
add
sbb
and
add
sub
xor
cmp
das
push
sbb
sbb
jno
jg
pop
adc
out
pop
ror
mov
pop
ror
ja
push
xor
rcr
les
es
push
pop
sub
pop
mov
adc
push
adc
push
and
cmp
cmps
mov
fisub
fmul
push
xor
scas
inc
sbb
dec
aas
dec
dec
out
pop
cs
cmp
dec
test
mov
daa
pusha
add
pop
cmp
add
or
xchg
ret
jg
repz
push
push
fdivr
pop
xchg
add
pop
mov
hlt
dec
dec
rcl
int
mov
sahf
int3
push
sub
push
cwde
ss
add
mov
sub
sbb
adc
inc
ins
push
cmp
mov
aam
mov
mov
imul
or
xlat
rcr
mov
sub
mov
and
inc
pusha
push
add
or
int
adc
xlat
bound
popf
(bad)
xor
add
and
dec
adc
inc
sbb
cdq
in
add
xor
dec
jnp
sub
xchg
pop
and
cdq
in
add
pop
xor
test
adc
rcr
add
mov
fidiv
mov
cdq
fdiv
test
lods
movs
cdq
add
inc
das
pop
and
sbb
or
ds
jb
sbb
aam
and
sahf
inc
call
ror
inc
add
dec
inc
inc
pop
adc
adc
fsubr
add
or
and
push
ret
out
jg
or
xchg
sbb
data16
xor
in
xor
mov
ret
push
shl
cmp
ds
xor
push
jle
and
cwde
sahf
or
das
pop
inc
xor
adc
rcl
xor
mov
pop
xchg
fwait
inc
cmps
xor
sub
int
jae
mov
or
inc
les
popa
and
aas
inc
adc
and
les
mov
scas
out
fisub
add
inc
dec
ret
shl
or
xchg
cld
and
cmp
loopne
mov
nop
pop
and
add
jl
xor
es
sbb
and
int
xchg
rsm
pop
leave
rcr
(bad)
sub
fild
and
gs
enter
pop
mov
sub
lds
xor
xchg
and
mov
jbe
and
dec
mov
imul
lahf
or
or
and
push
add
data16
inc
fwait
or
add
test
adc
sbb
daa
das
xchg
sub
dec
add
add
and
addr16
in
push
xchg
sub
in
push
(bad)
and
xor
xor
dec
or
add
pop
dec
add
das
imul
sbb
nop
loopne
call
ret
add
or
cmp
and
add
inc
cld
es
push
sub
mov
inc
test
pop
call
adc
popa
dec
and
inc
xchg
add
nop
retf
or
pushw
add
nop
or
jb
pushf
mov
or
shl
jne
loopne
add
je
dec
and
adc
pop
jno
add
neg
sbb
scas
ins
push
pop
dec
in
cmp
imul
or
add
sub
adc
or
adc
popa
(bad)
sbb
add
sub
hlt
and
pop
mov
xchg
or
(bad)
pop
inc
mov
push
xor
add
in
fsub
push
inc
dec
repnz
test
es
push
add
add
mov
or
xor
dec
(bad)
push
xor
es
xlat
inc
addr16
es
dec
aad
dec
and
dec
cmp
xlat
cmp
or
cmp
xor
or
(bad)
xor
dec
add
inc
push
ja
sub
ror
dec
imul
inc
or
pop
and
xchg
xchg
(bad)
adc
leave
and
jns
and
push
es
call
shl
cmps
mov
pop
xchg
mov
mov
scas
adc
inc
aad
pop
push
add
push
test
aaa
mov
and
mov
fstp
add
push
add
or
inc
das
pop
jb
sbb
adc
les
xchg
les
sub
mov
or
stos
jb
das
dec
xchg
enter
test
inc
movs
dec
test
nop
das
test
test
dec
jge
xor
pop
inc
pop
mov
jo
fmul
add
loopne
dec
sbb
and
enter
fs
es
jl
dec
ret
test
(bad)
pop
xchg
neg
mov
cmps
xchg
and
pop
cmp
jne
test
dec
cmp
stos
push
movs
in
and
ret
pop
xchg
mov
sub
adc
add
inc
(bad)
lea
rol
add
enter
jb
sbb
cmps
sbb
dec
lods
push
xchg
sub
xchg
xor
mov
inc
add
ror
add
pushf
xchg
sbb
adc
jge
inc
xor
aas
test
xor
lock
mov
xor
inc
pop
in
inc
add
(bad)
dec
sahf
aaa
or
mov
adc
add
xchg
int3
inc
inc
push
rol
xor
in
xlat
inc
and
sub
fcomp
jne
lods
movs
cwde
add
sbb
jg
add
lahf
or
add
out
mov
jne
dec
cdq
(bad)
xchg
sbb
in
and
fst
add
mov
mov
mov
push
test
rcl
(bad)
leave
mov
sbb
daa
mov
leave
jae
adc
adc
dec
in
scas
xchg
mov
daa
and
xchg
in
in
inc
scas
mov
iret
lahf
dec
nop
sbb
cmp
xchg
xor
gs
or
push
nop
and
jns
add
push
data16
rcr
mov
add
jns
add
cmp
nop
cmp
mov
(bad)
shr
movzx
daa
mov
fs
int
shl
add
xchg
push
xlat
and
pushf
and
xor
fild
out
enter
xchg
pusha
hlt
xor
movs
and
add
add
mov
sbb
mov
fmul
jle
cld
and
out
ins
sbb
add
and
xor
scas
xor
in
inc
aas
das
movs
or
repnz
and
push
mov
shl
imul
nop
jbe
ror
test
adc
lea
xor
nop
int
mov
sub
adc
enter
and
fwait
imul
inc
pop
xchg
add
jl
in
int
and
out
cmp
es
jg
or
sub
and
xchg
sbb
dec
je
mov
push
sub
pushf
sbb
stos
pop
clc
out
xor
in
add
inc
pop
adc
and
dec
add
mov
pop
sbb
push
cmps
call
dec
enter
add
les
in
dec
loopne
push
out
or
punpckhbw
xor
cld
dec
sbb
lods
xor
enter
sahf
jo
xchg
jno
add
jl
mov
retf
lock
add
mov
outs
push
mov
stos
add
cmp
mov
adc
sbb
mov
pop
aas
hlt
daa
cmp
xor
xor
jmp
test
in
or
or
mov
or
and
adc
mov
vpmacsdqh
mov
loopne
in
out
inc
ror
xor
cmps
sbb
test
das
sub
call
je
cmp
sub
cmps
and
cs
mov
add
pop
mov
test
cmp
push
hlt
xor
shr
cmps
mov
xor
mov
fdiv
xor
add
iret
je
movs
in
dec
inc
rcl
fldcw
test
mov
test
fs
push
pushf
int
imul
int
xor
sub
loop
sbb
dec
push
fs
push
mov
jo
test
(bad)
in
cwde
data16
add
cmps
imul
shl
shl
push
xor
ss
data16
cmps
sbb
cmp
fsub
cmp
clc
xchg
push
mov
inc
cmp
mov
xor
pop
les
xor
mov
cld
comiss
add
sbb
and
pop
cmps
outs
hlt
push
int
jecxz
movhps
jae
ror
js
push
add
enter
or
pop
repnz
pop
jo
push
jnp
pop
enter
daa
movs
and
pusha
add
jb
dec
fwait
pop
movs
sub
pusha
cmp
mov
xchg
inc
jg
fs
add
cmp
push
inc
ins
iret
and
push
fimul
and
outs
dec
pusha
adc
in
xlat
jo
je
push
add
dec
pop
inc
scas
in
nop
push
pushf
and
jb
dec
and
jg
and
loope
test
inc
loopne
enter
cwde
jl
in
inc
scas
jg
enter
jno
push
nop
jl
add
test
dec
xor
pop
jb
xchg
daa
js
push
dec
leave
or
jmp
jg
sub
loopne
add
sbb
inc
je
push
adc
ins
and
cmp
or
push
(bad)
push
pop
jb
jle
pop
push
mov
call
scas
in
movs
inc
lods
and
sbb
test
dec
push
cmp
inc
and
mov
jg
xor
dec
cs
in
hlt
sub
and
sub
pop
in
in
imul
or
and
ror
mov
call
push
or
(bad)
lods
nop
daa
sub
enter
shl
inc
pop
sub
and
and
add
pop
push
(bad)
jg
dec
clc
pop
push
pop
inc
cmp
inc
mov
shl
jg
jg
and
test
jb
xchg
retf
rcr
mov
add
cdq
jg
daa
cmp
(bad)
mov
sbb
xor
adc
dec
pop
xor
add
jb
xor
pop
das
jp
or
jg
and
mov
push
ins
sub
stos
jg
pop
cmp
jg
mov
scas
stos
jmp
push
je
hlt
push
xchg
mov
lock
mov
and
and
enter
sub
xor
sub
in
(bad)
adc
sbb
enter
mov
pop
push
xchg
(bad)
push
hlt
push
pop
in
adc
iret
lock
pushf
inc
fnstenvw
aas
mov
jl
xor
aas
out
mov
call
cmp
dec
test
sbb
cmp
ret
mov
call
mov
adc
(bad)
xchg
push
cld
cmp
mov
out
cmps
repnz
and
xchg
jns
or
hlt
mov
push
in
push
inc
cs
or
xor
out
push
inc
pop
enter
mov
mov
cmps
xor
inc
imul
callw
pop
shl
loopne
pop
cwde
mov
(bad)
mov
(bad)
xchg
xor
add
push
add
or
adc
dec
push
popf
fisttp
xchg
pop
test
cmp
mov
repnz
pop
pop
pop
les
fcomp
std
lods
inc
mov
add
push
push
push
aaa
add
mov
xlat
test
push
push
les
pop
iret
popa
int
sub
push
push
inc
out
cmps
mov
out
mov
lahf
pop
outs
add
les
les
xlat
fisubr
inc
cs
sahf
jle
fiadd
inc
scas
les
dec
add
add
mov
jo
test
test
int3
cs
in
and
pop
push
dec
mov
mov
mov
jl
(bad)
mov
das
in
push
add
es
pop
je
mov
add
add
push
cmp
pusha
xchg
das
mov
mov
in
dec
pop
clc
or
mov
fs
or
sbb
push
hlt
das
inc
call
cld
inc
xchg
daa
fwait
lock
or
call
repnz
push
pop
adc
adc
dec
pop
pop
daa
adc
push
sbb
mov
inc
enter
and
and
inc
sbb
sub
adc
mov
xlat
jo
xor
adc
push
dec
mov
add
mov
ins
push
lock
dec
adc
dec
inc
jae
adc
add
push
cs
and
mov
shl
addr16
push
mov
fcomp
(bad)
mov
xor
ja
ja
jbe
data16
mov
and
lahf
loopne
rol
jb
sub
es
imul
adc
or
cmc
dec
outs
mov
bswap
push
rol
sbb
fst
pusha
not
mov
dec
cs
outs
addr16
cmc
pop
or
sub
pop
sbb
pop
lahf
pop
push
jne
cmps
sub
xor
jne
xchg
cvttps2pi
push
imul
rol
daa
out
cs
adc
das
ret
push
add
sbb
jo
mov
add
add
pusha
in
mov
aas
aaa
dec
pop
mov
mov
or
mov
add
loop
nop
lea
add
xor
cmp
or
pop
bound
ins
inc
mov
jbe
lods
mov
adc
je
add
or
sub
xor
lods
add
push
and
or
dec
loope
into
dec
push
inc
pop
push
ficomp
ror
fcomp
xchg
ja
idiv
fnstenv
data16
cdq
ss
aas
adc
mov
inc
jb
or
fisttp
push
or
add
push
inc
sbb
pop
fs
xor
fcmovu
pop
aaa
jbe
cmp
(bad)
cld
mul
je
sub
or
xchg
add
rcr
add
pop
sub
adc
aas
inc
jns
jae
loopne
rcr
xchg
rcl
push
sbb
pop
jo
add
xor
mov
jae
push
jecxz
nop
push
cmp
push
ja
ins
mov
jg
sub
push
inc
mov
push
fist
inc
xor
aaa
jno
mov
sub
inc
test
lods
adc
sub
xor
mov
xchg
aaa
outs
mov
sbb
test
mov
or
sub
in
jne
and
push
pop
imul
(bad)
jg
add
inc
lahf
call
mov
in
push
push
dec
retf
dec
inc
dec
pop
dec
inc
pop
pop
dec
inc
dec
inc
dec
inc
push
ds
fwait
add
sbb
imul
int3
push
push
push
(bad)
push
mov
sub
push
in
out
mov
mov
add
mov
mov
mov
or
jne
xor
push
mov
mov
mov
add
mov
(bad)
sar
movs
xchg
test
enter
fs
inc
xor
fwait
out
and
dec
call
jg
lea
push
push
call
in
mov
push
add
ret
jne
push
add
adc
cmp
lea
mov
jmp
xor
adc
cmp
push
push
call
fstp
call
push
push
xchg
rcl
lock
push
adc
push
xchg
push
push
mov
std
rcr
cmp
arpl
mov
test
bound
xchg
mov
enter
sub
push
sti
jbe
push
andps
push
ror
mov
jnp
sub
push
pop
pop
in
out
movs
in
inc
push
(bad)
loopne
inc
or
add
push
and
pushf
test
sbb
xchg
sbb
push
popa
mov
add
and
scas
or
leave
pop
inc
sahf
push
test
enter
push
mov
mov
inc
sbb
push
mov
ror
movs
sub
sbb
popa
or
xchg
adc
sbb
push
or
cli
jmp
push
inc
push
in
test
rol
in
add
hlt
inc
push
in
jl
leave
stos
xchg
sub
add
and
sbb
inc
scas
and
add
je
inc
scas
and
mov
jo
push
sub
dec
mov
ins
ins
js
dec
scas
dec
call
push
scas
dec
and
push
sbb
fs
and
and
enter
or
inc
dec
push
in
pop
fs
xor
push
pop
inc
jb
pop
sub
add
add
sbb
push
push
nop
movs
call
or
sbb
add
push
sbb
and
xor
inc
jb
ret
add
jl
enter
dec
inc
jb
xor
mov
enter
dec
and
fadd
in
scas
inc
inc
and
add
inc
scas
inc
inc
nop
mov
sbb
cmp
jns
pop
dec
fadd
cmp
inc
mov
cmp
push
xchg
cmp
clc
add
dec
xor
lods
dec
mov
or
enter
xor
push
and
sbb
adc
xchg
push
cmp
pop
xor
sub
add
mov
stos
or
and
and
dec
add
stos
or
and
sbb
pusha
or
xor
pop
inc
jb
adc
add
pop
inc
jb
or
xor
pop
inc
jb
or
add
pop
inc
jb
add
xor
cmps
and
and
sub
and
std
dec
mov
cmp
std
cmp
clc
and
in
enter
mov
sbb
loopne
adc
and
call
and
in
nop
sub
in
xor
outs
mov
imul
movs
js
inc
push
dec
add
ret
mov
jns
and
call
push
jb
std
mov
xchg
mov
push
test
imul
sbb
ret
pop
nop
xchg
inc
mov
adc
pop
sbb
mov
push
mov
jnp
shl
pop
or
dec
xchg
push
adc
sahf
mov
mov
mov
(bad)
out
add
add
in
xchg
call
add
and
repnz
sbb
and
and
fdiv
or
pusha
mov
pop
test
mov
iret
pop
mov
rcr
jns
pop
add
adc
push
adc
stos
xchg
icebp
lock
push
gs
repnz
push
sbb
fisub
and
mov
in
add
rcr
pop
out
push
dec
pop
add
mov
stc
aas
xor
or
push
mov
mov
test
cmovb
fsubp
out
add
call
sbb
push
mov
adc
sti
push
mov
mov
mov
cmps
lea
pop
les
push
pushf
nop
mov
push
and
push
push
and
lahf
jno
stos
push
pop
cmp
popf
sub
mov
clc
mov
mov
outs
les
in
adc
lock
add
xchg
push
sbb
popa
jnp
push
pop
(bad)
enter
push
cmp
or
sbb
in
adc
xchg
pop
add
or
sbb
push
add
and
in
sbb
dec
xor
out
lea
pop
push
nop
inc
push
push
or
pop
adc
les
inc
mov
movs
loop
jb
cdq
ins
sbb
popf
push
inc
pop
in
out
mov
out
jns
aad
xor
pop
add
or
ror
movs
cmp
xchg
add
mov
std
shl
xor
out
push
cmp
rol
fs
push
rcr
mov
push
xchg
(bad)
pusha
or
add
test
mov
add
das
shr
stc
sub
lea
or
cmp
cmp
fdivp
jo
xor
mov
lock
test
in
xor
lea
push
daa
adc
out
pop
ret
push
push
adc
cdq
or
xor
add
test
adc
lds
xor
or
and
mov
outs
mov
(bad)
int3
push
bound
xchg
mov
and
cmp
pop
movnti
(bad)
popf
ret
fidiv
mov
arpl
mov
shl
push
out
das
movs
nop
sub
dec
jb
outs
mov
or
dec
adc
push
fsub
int3
push
mov
sbb
add
sub
test
push
push
xor
adc
loop
or
xor
mov
psubsb
add
aam
mov
jg
mov
and
test
jne
sbb
xor
pop
movs
loopne
and
push
mov
jge
pusha
mov
mov
xchg
add
call
int3
mov
sti
jp
dec
pushf
add
and
mov
mov
dec
jmp
inc
jo
push
and
jmp
leave
leave
push
lea
shl
mov
mov
int
adc
jb
adc
xchg
push
enter
or
push
xchg
sbb
or
rol
std
adc
sub
sti
and
jp
adc
xchg
nop
addr16
add
adc
cwde
xchg
mov
shl
fadd
shl
pop
rol
fcomp
adc
inc
mov
add
add
int3
push
and
fs
sbb
test
add
and
sbb
add
(bad)
enter
les
mov
and
jl
nop
add
or
dec
dec
push
repnz
cmp
add
nop
sub
mov
adc
cmp
nop
pop
add
add
jns
enter
and
inc
cmps
and
add
and
je
and
and
push
je
movs
std
sbb
in
movs
std
inc
hlt
or
rcl
xchg
call
mov
and
loope
inc
jmp
mov
mov
movs
dec
sub
cmp
jge
add
mov
mov
adc
sbb
nop
imul
mov
in
fprem1
inc
arpl
push
push
fsubr
mov
mov
xchg
ja
inc
dec
pop
add
pop
push
and
aad
xor
dec
mov
xor
inc
inc
push
inc
popa
sbb
xlat
mov
loop
bound
or
jae
sbb
dec
inc
enter
or
cdq
adc
cmps
sub
xchg
add
or
nop
mov
xchg
sub
cld
in
mov
mov
or
mov
inc
or
je
push
in
test
mov
nop
mov
xchg
sub
add
mov
fs
jl
cmps
and
jl
pop
sub
lods
and
test
ds
ror
xchg
clc
add
clc
add
sbb
daa
ins
lods
dec
add
shl
push
mov
xor
push
add
dec
pop
or
push
idiv
(bad)
pop
xor
add
jb
inc
cld
add
or
(bad)
add
pop
pop
dec
lahf
push
inc
fs
add
repnz
and
inc
ret
xlat
int3
ret
mov
(bad)
fisttp
ds
fdivr
adc
pop
pop
repnz
jmp
or
push
and
in
mov
pop
ret
popa
aas
sub
nop
add
xor
js
sub
out
ror
call
add
cmp
xor
aam
rol
mov
icebp
mov
test
push
rcr
out
or
xor
adc
daa
fld
out
sbb
push
xor
ins
push
and
rep
xor
sbb
push
mov
xchg
pop
cmps
lock
xor
mov
fsubr
xor
xchg
jecxz
rcl
gs
cld
mov
sbb
into
push
cmp
loopne
xchg
add
fimul
rol
xchg
dec
push
inc
adc
jns
inc
push
or
mov
xchg
jg
leave
pop
add
add
(bad)
dec
int
lahf
mov
mov
(bad)
mov
outs
mov
xchg
test
or
jo
push
fs
(bad)
ds
(bad)
jo
mov
out
dec
mov
or
dec
push
jnp
add
or
pop
jge
add
add
mov
add
and
(bad)
xor
cdq
adc
sub
inc
rcl
jno
and
mov
cmp
add
aam
push
cmp
or
sbb
xor
mov
pop
int3
pop
adc
mov
jmp
out
inc
pop
pop
adc
xchg
popf
ss
icebp
dec
xchg
mov
adc
retf
(bad)
and
pop
fwait
test
push
mov
mov
push
pop
out
push
jecxz
xchg
push
mov
push
test
into
adc
rcl
imul
cmp
push
jb
fs
push
mov
sbb
pop
sbb
xor
(bad)
cld
pop
add
daa
pop
in
les
cmp
in
pop
les
rol
jb
push
out
test
add
add
test
test
mov
xchg
adc
nop
pop
cmp
mov
mov
(bad)
fmul
push
ret
add
mov
enter
push
sub
gs
daa
je
pop
popf
ret
retf
inc
mov
nop
xchg
call
inc
les
xor
aam
sub
enter
sar
ror
nop
pop
or
add
cmp
sub
int3
fneni(8087
sbb
mov
adc
call
or
cmp
pushf
jl
pop
or
rol
dec
pop
int3
js
xor
add
or
mov
add
(bad)
leave
mov
enter
shl
enter
retf
test
sbb
nop
sbb
dec
mov
ss
mov
and
aaa
pop
push
lahf
mov
fadd
xchg
adc
adc
cs
xchg
adc
push
or
sub
mov
xchg
movntq
test
sbb
call
and
loopne
pop
stos
xlat
retf
inc
mov
ja
cmp
inc
xor
inc
adc
stos
in
js
ja
nop
or
stos
call
mov
leave
shl
mov
fnsave
and
inc
xor
push
clc
outs
popf
enter
xchg
jmp
nop
or
aaa
jl
jns
push
jno
les
cmps
add
inc
or
and
and
jb
or
or
and
cdq
repz
adc
mov
add
xchg
dec
pop
shl
cmp
int3
ror
adc
push
add
(bad)
in
push
sub
scas
and
push
and
and
push
and
scas
mov
mov
cwde
lods
scas
lods
mov
ins
add
jecxz
shl
or
popa
pop
xchg
or
xor
fs
or
push
je
cdq
shl
stos
ret
dec
cmps
push
inc
dec
cwde
lods
out
arpl
dec
ins
ins
mov
test
pop
shr
pop
xchg
es
sub
ror
sbb
les
mov
ror
add
xor
cmps
jl
loopne
cmp
es
add
xchg
pop
jno
test
push
cwde
int3
add
mov
inc
or
cwde
adc
or
dec
int
push
cmp
cmps
dec
(bad)
rep
pop
add
jecxz
fcom
mov
jmp
or
push
and
pusha
les
mov
xchg
xlat
push
addr16
or
sub
mov
sbb
dec
sti
jmp
jmp
add
aad
sub
add
sahf
xor
out
xlat
push
in
retf
and
pop
and
pop
sub
jmp
movs
sbb
adc
push
scas
and
ror
push
or
enter
inc
push
and
sbb
out
or
xor
bnd
loope
ret
(bad)
mov
loopne
mov
jb
hlt
adc
sub
add
xor
or
fadd
pop
shr
mov
ret
test
add
sub
sar
popf
push
push
mov
mov
not
iret
jo
not
lds
sub
jp
sub
push
stos
(bad)
inc
pushf
jecxz
inc
repnz
adc
pushf
in
mov
rcr
jne
shr
mov
and
movs
push
mov
pop
ficom
add
push
dec
test
leave
inc
and
add
xor
and
xor
enter
and
dec
xor
add
leave
inc
xor
out
shr
out
aam
add
aam
jge
inc
mov
or
es
inc
ret
pusha
push
or
es
inc
rcl
out
mov
and
les
cmp
mov
rol
sub
test
ret
bnd
(bad)
adc
cwde
data16
mov
dec
xchg
dec
and
mov
fld
fadd
mov
shl
cmp
or
shr
push
sbb
int3
les
dec
lods
or
pop
sbb
(bad)
pop
adc
in
loopne
or
sar
push
aam
shl
mov
xor
mov
ja
sbb
push
rcr
inc
push
or
and
add
les
sub
out
aaa
or
pusha
add
(bad)
test
sbb
xor
add
push
add
dec
leave
adc
sub
loop
add
mov
xor
add
mov
or
jo
int3
dec
mov
loopne
(bad)
sub
jecxz
mov
adc
dec
shr
sbb
or
xor
nop
mov
or
ins
fsub
dec
leave
and
inc
push
pop
jo
push
lods
leave
or
and
add
sbb
loopne
adc
push
mov
inc
push
mov
add
aaa
xchg
cmp
lds
and
cmp
out
or
int3
(bad)
inc
cs
shl
stos
dec
dec
ret
add
adc
cmp
pop
jne
or
dec
push
cmps
cmp
scas
push
bound
mov
lods
cmp
(bad)
or
shl
bound
pushf
or
dec
mov
or
scas
mov
pusha
ja
nop
les
dec
mov
arpl
mov
push
push
lock
mov
iret
loopne
dec
fmul
fwait
push
inc
dec
lea
stos
lea
or
ret
ret
mov
int
jno
mov
add
in
dec
in
add
(bad)
or
add
or
into
adc
jns
test
mov
xchg
push
mov
xchg
fcmove
imul
pop
mov
add
adc
push
push
ja
xor
jg
popa
shl
pop
pop
daa
pop
jmp
add
cmp
xchg
xchg
sub
and
and
iret
add
push
pop
sbb
leave
and
pop
cwde
and
in
(bad)
call
cmp
or
nop
les
fcom
aam
jns
add
mov
push
push
push
jbe
in
test
je
sbb
dec
xor
adc
ret
push
cwde
cmp
les
jb
add
adc
das
fadd
xor
(bad)
arpl
sbb
ret
idiv
into
in
push
in
call
sbb
pop
add
adc
mov
or
mov
or
test
inc
hlt
je
test
(bad)
shl
lea
mov
ja
xchg
or
mov
and
sahf
cld
jl
mov
push
mov
test
scas
imul
(bad)
cmp
idiv
xchg
adc
push
adc
pusha
sbb
out
mov
add
pop
fadd
stc
sbb
push
xchg
aam
aam
fdivr
push
in
adc
int3
pop
pop
mov
cmp
jecxz
dec
pop
xchg
in
mov
pop
call
or
loopne
mov
retf
mov
aam
int3
mov
lods
pushf
mov
fs
inc
inc
pop
pop
push
in
adc
jb
clc
call
adc
cmp
jbe
push
into
test
iret
dec
mov
dec
pop
repnz
jecxz
pop
cmp
jg
add
jl
sub
dec
or
ins
inc
add
adc
and
enter
mov
pop
ret
punpckhdq
test
pop
xchg
ins
outs
inc
loope
sbb
push
out
jl
mov
add
jo
stos
mov
(bad)
pop
sbb
sub
sbb
bound
push
adc
cwde
in
int3
mov
xchg
and
cmova
data16
lods
mov
and
daa
sbb
sub
and
lea
mov
scas
push
test
in
or
jo
ja
xor
xor
stos
fldcw
scas
xor
mov
jo
pop
pop
cmc
pop
sub
mov
scas
test
push
fadd
sub
mov
cwde
sub
sbb
mov
retf
pop
lods
or
push
adc
fiadd
imul
fdiv
fmul
sbb
push
ss
adc
ss
(bad)
mov
dec
mov
pusha
adc
xchg
cld
inc
push
ret
and
push
add
or
mov
xor
mov
inc
mov
push
dec
jl
inc
push
push
popf
xchg
dec
xadd
xchg
and
pop
jb
mov
sub
bound
sub
or
push
push
sar
bound
adc
nop
mov
add
in
adc
jbe
push
pmulhuw
push
enter
push
xchg
xor
and
fsub
jo
mov
cmp
push
loope
inc
xchg
int3
rcr
leave
sub
repnz
ror
call
xchg
(bad)
imul
adc
push
mov
mov
cdq
jb
or
jg
ins
clc
push
adc
clc
ins
dec
ds
xor
push
jns
adc
enter
in
pusha
rol
add
xchg
not
test
movs
xchg
test
mov
fs
inc
xor
mov
inc
ror
inc
movs
and
mov
retf
mov
xchg
iret
enter
test
xor
cmp
or
xchg
shl
mov
mov
neg
sbb
mov
pop
and
add
mov
mov
push
adc
push
push
sbb
jbe
cli
push
dec
or
inc
lea
mov
outs
popa
mov
cmp
cmp
or
sbb
pop
pop
mov
outs
data16
enter
inc
adc
stc
shl
add
sbb
adc
xchg
or
pop
inc
in
test
je
sbb
xor
shl
xchg
(bad)
push
adc
mov
dec
shr
mov
jge
push
add
and
inc
pop
add
mov
enter
xchg
rcr
ds
sbb
in
push
cmp
jle
mov
jo
loop
rcr
push
or
stc
adc
sub
dec
or
jbe
jmp
mov
js
pop
sbb
dec
enter
inc
dec
adc
dec
jle
lea
inc
cmp
std
icebp
jne
push
lock
pusha
mov
mov
cdq
int3
enter
or
(bad)
or
ret
xor
mov
out
imul
cmp
mov
dec
inc
dec
pop
sbb
das
repnz
ins
adc
outs
jmp
fsub
repnz
ror
mov
or
cmp
gs
(bad)
in
xor
adc
pop
pushf
mov
pop
and
imul
pop
imul
sbb
test
out
cli
or
add
test
test
and
les
mov
(bad)
xchg
push
and
xor
pop
leave
lods
mov
leave
add
inc
xchg
xor
int3
test
sbb
adc
add
adc
mov
push
mov
add
test
and
rol
sub
in
loope
adc
add
or
cdq
or
test
pop
mov
movs
mov
and
call
js
js
mov
or
xor
or
mov
ret
out
pusha
leave
out
mov
stos
mov
xchg
(bad)
mov
gs
dec
inc
test
add
inc
inc
fld
scas
ret
xchg
push
dec
sbb
std
or
pushf
xor
(bad)
mov
hlt
dec
sub
jecxz
inc
aad
and
imul
adc
mov
imul
inc
ins
add
push
sub
and
dec
push
push
jg
mov
cdq
adc
cmp
jne
add
sub
jb
cmp
xlat
icebp
add
xor
addr16
lea
push
mov
popa
xor
mov
dec
xor
push
adc
test
pop
or
pushw
and
int
cmp
xlat
sub
movs
xor
js
jmp
jmp
jmp
or
xchg
or
inc
fs
inc
ret
js
cmp
rcl
cmp
pop
mov
xor
pop
adc
test
and
xor
xchg
fs
fadd
retf
ins
in
ror
fs
mov
sbb
shr
enter
inc
nop
mov
add
xor
cmp
(bad)
enter
mov
(bad)
in
sbb
xchg
lea
mov
test
xchg
ins
xchg
sbb
outs
scas
rcr
pusha
ficom
in
mov
jl
mov
mov
mov
imul
test
test
or
hlt
imul
xchg
push
mov
pop
adc
loopne
and
lea
and
cli
and
stos
cs
xchg
shl
sub
sti
lea
push
sub
cmps
aam
cmp
cmp
inc
jp
test
mov
dec
adc
mov
and
retf
lds
jg
inc
lds
push
push
jmp
ja
shl
pushf
inc
nop
add
mov
mov
or
mov
push
inc
add
dec
rol
mov
sbb
rcl
xchg
or
push
enter
pushf
mov
lock
rol
push
enter
dec
sub
xor
mov
push
test
dec
xchg
jl
push
lea
in
or
sbb
ins
and
push
fstp
and
push
gs
sbb
test
add
or
push
je
push
fwait
lods
push
and
xor
mov
xor
sti
pop
and
or
push
and
or
push
rcr
and
xchg
add
mov
out
pushf
movs
mov
mov
pop
xor
push
or
xor
(bad)
loop
enter
sub
lock
push
mov
add
push
stos
aaa
push
in
sub
add
dec
imul
lea
hlt
lods
push
inc
int3
push
adc
call
sbb
mov
jmp
mov
sub
push
jo
in
addr16
cli
push
dec
add
and
jbe
pop
jo
lods
and
push
movs
jecxz
add
(bad)
aam
cmove
cmp
movaps
sbb
adc
sbb
mov
imul
xor
cmc
adc
jmp
scas
in
push
push
push
push
ds
pop
ds
mov
bound
dec
and
test
cld
mov
add
int3
mov
mov
inc
or
mov
mov
push
push
or
test
in
mov
sbb
pop
jae
add
xor
adc
pop
in
pop
push
adc
adc
and
push
inc
int
push
ins
outs
dec
push
repnz
jp
inc
or
xor
adc
add
add
mov
pusha
mov
push
jns
aam
mov
(bad)
cmp
pop
ja
and
in
xor
add
jnp
xor
and
ror
jge
adc
or
lods
movs
es
mov
push
push
add
nop
imul
add
adc
inc
mov
sub
(bad)
xor
not
dec
mov
sbb
sub
rcr
sbb
(bad)
mov
push
add
jmp
cmp
fs
pop
les
in
push
adc
adc
in
push
mov
out
push
sahf
das
and
dec
and
and
cmp
add
sbb
sbb
lods
add
movs
add
push
adc
lods
mov
pusha
lea
cmp
aaa
add
mov
inc
pop
inc
ror
mov
inc
mov
lea
loopne
test
push
dec
imul
test
push
push
ror
ja
loope
js
xchg
je
sbb
mov
in
je
jmp
ret
add
and
mov
jb
sbb
mov
aas
pop
out
mov
add
push
add
ss
jae
and
out
xchg
test
cmp
or
lods
cmp
push
sbb
push
imul
push
fdivrp
cwde
test
xor
(bad)
adc
push
lds
and
leave
pop
popa
(bad)
ror
mov
add
nop
and
and
push
in
push
test
jns
gs
inc
push
push
push
push
add
add
rol
scas
and
mov
jo
mov
pop
mov
aaa
test
movs
pop
push
ins
ret
jb
(bad)
clc
sbb
xchg
stos
sbb
(bad)
sub
or
test
xchg
pushf
jecxz
rcr
cmp
and
fld
dec
inc
aam
and
mov
push
mov
call
jl
xor
aad
mov
cmp
xor
mov
sbb
lahf
and
mov
bound
adc
cmps
mov
mov
stc
(bad)
fcomp
fdivr
pop
add
jne
cld
cmp
sub
mov
adc
mov
call
jl
dec
and
call
pop
je
(bad)
clc
add
les
push
add
dec
les
add
das
push
inc
add
ins
sub
dec
mov
add
loopne
or
je
jae
(bad)
ror
jnp
inc
ret
neg
fild
xor
loopne
fstp
mov
std
and
test
push
(bad)
adc
adc
(bad)
ror
push
retf
sbb
fdivr
add
mov
sti
sbb
js
dec
mov
pop
sar
cmps
adc
dec
mov
hlt
mov
mov
sar
retf
scas
shl
sbb
adc
in
nop
mov
push
mov
cmps
jns
lea
jne
ins
adc
inc
mov
mov
es
inc
inc
mov
or
leave
cmp
test
stos
dec
pop
push
hlt
cld
push
fld
inc
add
inc
or
ret
sbb
fiadd
enter
enter
xchg
gs
mov
js
jmp
lock
adc
or
arpl
rcr
les
shl
data16
idiv
mov
shr
jmp
xor
loop
or
setno
ds
aam
xor
sub
xor
sub
xchg
mov
adc
xor
mov
and
in
(bad)
sar
push
mov
or
xor
cmp
inc
enter
lods
cmp
shl
lock
fwait
or
div
cwde
add
adc
jg
cwde
repz
daa
mov
push
push
xchg
loopne
fisttp
pusha
pop
jno
rcr
xchg
mov
inc
push
pop
in
cmp
inc
sbb
loopne
test
pop
mov
cmp
cmp
inc
out
cmps
cmp
loopne
pop
add
aas
and
pushf
pop
add
(bad)
dec
aas
add
scas
dec
mov
enter
outs
pop
int
dec
es
ins
leave
and
jb
cld
outs
xor
xchg
sbb
xor
outs
nop
add
add
in
cwde
jge
out
push
mov
popa
cld
pop
movhps
fist
mov
sbb
bound
jle
inc
nop
dec
mov
faddp
adc
ret
bound
inc
push
sar
inc
hlt
loope
ds
neg
aaa
push
nop
inc
cmp
adc
rcr
inc
xchg
add
push
xor
sub
cli
push
adc
(bad)
xchg
ja
jb
xchg
xchg
in
aam
sub
adc
sbb
shr
sub
pop
loopne
hlt
push
lea
push
sub
xchg
cld
rcr
inc
pop
test
xor
inc
and
fcmovb
jnp
mov
cli
dec
fadd
inc
movs
jp
dec
mov
jne
pusha
inc
jecxz
mov
mov
xchg
and
imul
arpl
std
inc
pusha
lea
outs
mov
adc
pop
mov
jge
stos
and
shl
dec
sub
push
fadd
(bad)
adc
out
popf
adc
mov
inc
push
xchg
mov
std
and
(bad)
push
aam
mov
jo
(bad)
cmp
dec
loopne
into
and
add
mov
inc
in
enter
and
shl
ror
add
pushf
inc
pushf
test
fild
xor
mov
stos
xchg
jne
adc
inc
dec
and
lock
mov
imul
stos
adc
adc
lea
fs
jmp
or
pop
lahf
mov
jo
xchg
lds
dec
push
fnclex
cmp
jge
push
xchg
pop
mov
ja
push
pmulhuw
or
test
jo
push
out
lahf
inc
ins
movs
(bad)
jmp
mov
lea
std
cmps
or
mov
jge
in
or
mov
fbstp
or
out
test
xor
xor
shr
ret
sub
inc
in
mov
pop
in
pop
pushf
lods
cdq
push
inc
jmp
add
mov
push
xchg
and
sub
not
inc
sub
xor
xchg
not
sub
arpl
ret
inc
push
test
clc
jmp
popa
test
clc
sub
daa
xor
cmp
pop
icebp
push
xor
sbb
sbb
pop
xchg
outs
add
push
aaa
jo
and
mov
push
sub
push
les
aaa
push
mov
jbe
inc
sub
inc
dec
or
mov
or
iret
repz
push
jb
jb
push
xor
movs
fadd
xchg
jbe
into
fs
cwde
sub
retf
mov
sub
add
xor
mov
rol
inc
js
cs
or
sbb
mov
sbb
js
xor
sub
add
pusha
add
lods
dec
add
fdiv
push
and
aaa
sbb
mov
mov
ret
and
fsub
mov
test
push
cmps
mov
cwde
mov
enter
movs
mov
lods
out
inc
cmp
and
fmul
aaa
test
mov
nop
ret
movs
cmp
div
push
add
arpl
call
movs
push
aas
cmp
or
xor
fs
retf
mov
sub
retf
dec
loopne
out
sbb
jo
xor
lods
xchg
xchg
ins
fdiv
ret
retf
mov
out
popa
pop
ss
adc
(bad)
clc
neg
sbb
inc
fisttp
retf
inc
xor
or
xchg
mov
pop
xor
jmp
and
enter
ror
mov
rol
loope
jp
out
jecxz
push
je
mov
bnd
shl
and
dec
pop
adc
xchg
jae
cmp
movs
sbb
and
outs
dec
mov
add
mov
xor
(bad)
enter
idiv
and
jns
jns
and
je
and
popa
mov
add
enter
ret
or
add
ret
push
scas
xlat
cdq
add
xor
popa
sbb
sbb
cmp
nop
push
inc
push
adc
ret
sbb
pop
and
adc
mov
push
mov
xchg
int
push
les
(bad)
pusha
lea
int3
lea
xchg
aam
test
sub
add
nop
xchg
ret
retf
dec
cmp
in
inc
aaa
xchg
mov
sub
fwait
xchg
mov
cmp
fstp
mov
and
adc
mov
adc
adc
std
jmp
adc
adc
push
fs
xor
push
add
test
test
adc
test
dec
cwde
dec
adc
jecxz
int
mov
push
cmps
jge
fcomp
enter
fs
inc
mov
cmp
dec
cld
rol
or
and
and
add
mov
cmp
pop
mov
and
sbb
or
mov
push
in
push
jno
bound
lahf
loopne
and
sbb
push
cwde
test
stos
push
or
or
imul
inc
xchg
adc
sub
or
sbb
mov
or
shl
xchg
fsubr
iret
dec
pop
cmp
sahf
mov
pushf
push
lock
mov
inc
pusha
cmp
pop
pusha
sub
xor
movs
pop
cmp
(bad)
fmul
test
pop
movs
lods
jb
xor
retf
jl
lock
mov
shl
iret
cwde
push
xor
add
add
test
test
xchg
and
or
pop
cmp
pop
xor
adc
clc
add
inc
dec
inc
dec
cdq
loop
mov
pop
cmp
fs
jmp
push
stos
adc
mov
push
add
cmp
inc
nop
sub
shl
imul
pop
in
mov
adc
cli
push
pop
add
jle
add
jge
jbe
and
xor
dec
or
push
mov
or
pushf
inc
hlt
xchg
bnd
add
in
cmp
jmp
xor
xchg
test
mov
cmp
pop
nop
bound
mov
inc
fs
ins
dec
sbb
mov
les
or
mov
les
sub
aaa
sub
sbb
jl
add
pop
mov
icebp
push
cld
dec
and
inc
push
inc
and
les
arpl
dec
shl
fwait
adc
sub
jmp
jb
or
pop
xor
jecxz
into
test
stos
sub
xchg
dec
ret
bound
xor
test
and
add
lods
jbe
or
in
mov
inc
clc
add
sbb
xchg
jl
lock
inc
adc
xor
mov
clc
je
cs
ins
or
xchg
pop
dec
pusha
sahf
dec
push
ins
fild
pop
ret
mov
push
and
sub
mov
lods
in
test
test
mov
sub
pusha
icebp
sub
inc
sbb
or
inc
cwde
mov
jecxz
mov
push
push
push
aas
call
dec
imul
data16
mov
in
cmp
pop
xor
push
mov
popa
pushf
dec
mov
sbb
cld
das
(bad)
inc
sbb
sbb
sbb
sub
or
(bad)
repz
or
mov
xor
test
es
movs
movs
pop
ror
cld
jns
retf
xor
dec
dec
mov
or
bound
ret
cmp
or
rcl
and
cmp
nop
cmps
adc
add
fimul
push
loopne
xchg
mov
xchg
movs
movs
or
shl
shl
jg
inc
hlt
inc
cmp
and
lods
(bad)
mov
mov
push
inc
inc
sub
push
(bad)
mov
ss
or
loop
mov
mov
jmp
push
xchg
enter
jo
rol
das
loop
push
aam
adc
xchg
and
pop
cmp
jae
imul
dec
shr
icebp
inc
mov
fiadd
add
sbb
sbb
push
repnz
sbb
(bad)
lock
xor
xor
call
sbb
xor
sub
sub
adc
sbb
int
or
sbb
inc
jo
or
sub
mov
add
mov
fsubr
inc
inc
pushf
or
xor
dec
mov
cmp
jo
add
(bad)
and
movs
cld
pushf
aam
clc
mov
mov
and
loopne
sub
and
sbb
inc
xchg
pop
rcl
adc
mov
add
and
xor
push
inc
js
sbb
rol
leave
sbb
(bad)
test
mov
cdq
and
or
leave
and
mov
mov
xchg
sub
mov
dec
gs
stos
pusha
sbb
(bad)
daa
lock
mov
add
mov
xor
add
sbb
cmc
or
rol
jmp
adc
jbe
cli
xchg
or
je
push
add
jle
hlt
(bad)
outs
test
mov
les
test
dec
(bad)
iret
add
je
int3
jb
call
and
pop
ret
pop
jb
or
sbb
enter
add
and
xor
or
xor
adc
inc
adc
fiadd
test
xchg
pop
jmp
sub
test
outs
leave
test
retf
mov
mov
adc
xor
mov
jno
ins
sbb
mul
sbb
xor
fld
xchg
shr
test
push
mov
inc
outs
jl
cmp
mov
cmp
xchg
pop
dec
lods
push
nop
mov
and
fnstcw
dec
xor
sub
mov
mov
and
addr16
ror
cmp
sub
pop
xchg
pop
data16
ja
or
push
(bad)
shr
test
sldt
dec
and
cs
mov
mov
fisttp
dec
inc
fadd
js
xchg
inc
jb
jge
cmp
jns
inc
and
shl
call
fdivr
cmp
sub
mov
cmp
pop
push
mov
retf
push
pop
sub
sub
xor
js
fild
mov
dec
stos
sub
xchg
pusha
leave
xchg
test
(bad)
js
mov
pusha
push
int3
js
add
sub
shl
or
aam
test
test
jo
(bad)
adc
das
mov
loopne
ins
add
mov
je
xchg
push
add
mov
inc
cdq
xor
test
inc
mov
inc
aad
jbe
adc
aam
pop
mov
xlat
dec
pop
cmps
mov
lods
or
or
xor
andnps
dec
push
adc
retf
add
mov
jo
add
dec
pop
add
add
dec
sbb
hlt
and
outs
and
jmp
sbb
fwait
test
lods
dec
ret
and
xchg
dec
enter
out
mov
iret
movs
enter
ins
mov
retf
adc
sbb
add
cwde
arpl
mov
rol
xchg
dec
push
jbe
dec
test
adc
add
nop
jae
cmp
inc
push
in
and
mov
ret
lea
sub
movs
cmp
add
adc
sbb
xchg
jne
jge
pop
xor
loopne
xor
dec
(bad)
mov
imul
sub
xor
popa
sbb
pop
or
add
xor
gs
cdq
rol
aas
sar
xor
sbb
mov
popa
test
por
adc
mov
ja
cmp
lds
cmp
and
fild
and
es
movs
icebp
sbb
mov
jb
lods
out
xchg
cwde
xor
adc
cmp
inc
mov
movs
xor
es
xchg
pop
mov
mov
or
jne
inc
jno
add
and
in
(bad)
aaa
push
add
fwait
mov
inc
std
stos
add
and
dec
pusha
pop
or
sbb
adc
and
movs
adc
out
test
ss
and
rcl
int3
or
jns
inc
xchg
jg
mov
in
push
pop
mov
pop
stos
call
leave
mov
shl
push
popa
or
add
rol
lds
ret
mov
dec
jae
or
bound
and
mov
add
mov
test
lea
scas
push
push
or
cld
and
ret
mov
cmps
or
add
push
adc
dec
adc
adc
and
retf
enter
std
test
fimul
and
mov
jno
loope
mov
repnz
pop
arpl
sbb
mov
(bad)
pop
jnp
popa
adc
xor
jmp
add
mov
push
mov
loope
fs
adc
lods
outs
xor
test
adc
and
ret
add
add
retf
enter
xchg
inc
test
sbb
lods
pop
sti
stc
iret
test
add
sbb
mov
cmp
jns
test
(bad)
jne
inc
pushw
push
inc
retf
pop
popf
cmp
les
scas
sub
sbb
ror
inc
sbb
or
xor
add
inc
add
xor
test
or
dec
sbb
sbb
push
add
push
xor
aam
push
fcomp
ror
and
loopne
push
and
sub
in
ret
pop
fmul
mov
or
stos
mov
inc
sahf
inc
jecxz
clc
sub
or
jmp
xchg
and
xor
add
adc
add
push
pop
inc
es
mov
jge
pop
mov
push
pushf
push
stc
mov
test
push
push
mov
sbb
jns
fs
lea
or
imul
push
std
pop
push
pop
pmulhuw
push
mov
add
push
addr16
lods
outs
test
jno
loopne
sbb
cmp
add
and
mov
dec
das
rol
gs
movs
pop
loopne
rcr
inc
push
and
pop
push
cmp
xchg
scas
xchg
xchg
lods
ins
cmps
xchg
scas
xchg
sbb
push
or
mov
push
jbe
adc
cwde
jge
movs
fwait
(bad)
push
cwde
push
xchg
jo
add
lods
sbb
(bad)
xlat
pusha
cwde
adc
rcr
movs
cmp
sbb
push
lods
mov
sbb
(bad)
lea
arpl
inc
cmp
dec
mov
push
repz
imul
xlat
inc
and
jne
add
and
out
mov
outs
sar
in
mov
push
cmovo
xchg
dec
add
add
dec
adc
(bad)
rol
(bad)
jbe
mov
push
inc
dec
sar
mov
sbb
sub
adc
imul
lock
movs
xor
imul
adc
test
push
xor
and
inc
push
mov
sub
xchg
push
and
xchg
xchg
test
cdq
xor
lea
jnp
xchg
fdiv
mov
sub
add
push
push
lods
dec
adc
cmp
shl
xor
and
push
dec
rcr
pop
daa
call
out
out
imul
add
pop
out
jbe
inc
and
mov
dec
push
ins
jo
(bad)
xor
(bad)
arpl
sub
fs
cmp
jae
pop
sti
xlat
sub
sbb
rcl
xchg
adc
jmp
push
sub
inc
retf
imul
movs
scas
add
inc
clc
(bad)
xchg
mov
inc
and
mov
dec
dec
dec
mov
sub
adc
leave
and
xor
xor
dec
xor
jmp
mov
out
call
inc
out
fwait
adc
xchg
mov
test
dec
cmp
movs
fs
test
push
rcl
mov
cmp
shl
add
jo
xchg
sub
add
pop
inc
jecxz
in
push
daa
xchg
ror
mov
xchg
sbb
pop
add
adc
adc
enter
cdq
sbb
cmova
mov
dec
popa
or
mov
rcl
sbb
jns
xchg
sar
xchg
push
lods
scas
sbb
add
mov
popa
test
pusha
dec
mov
add
push
out
ret
or
lods
push
push
sub
lea
inc
pusha
push
std
push
adc
xchg
cmp
mov
lods
shl
mov
inc
shr
and
xor
jg
xchg
jp
dec
jbe
test
(bad)
retf
xor
xchg
xchg
xor
shr
nop
sbb
jne
add
imul
jno
dec
adc
push
mov
lahf
adc
and
adc
icebp
push
lea
xchg
pop
mov
lea
popa
or
or
and
mov
xchg
add
jb
bound
and
xor
lds
jecxz
fcmovb
lock
add
mov
push
daa
push
pop
and
xor
sub
ror
xor
inc
pop
mov
pop
dec
adc
dec
xor
xor
mov
ficom
xorps
sub
(bad)
dec
sub
inc
xor
mov
or
ror
mov
push
mov
outs
popf
pop
xchg
loopne
jns
sub
test
adc
sub
ret
push
xchg
inc
and
inc
pop
mov
mov
imul
or
and
dec
add
jle
outs
repnz
inc
es
or
mov
out
sahf
xchg
fisttp
sbb
jle
add
and
inc
gs
jg
dec
ins
les
in
notrack
pop
xor
add
movs
add
movs
in
in
push
pop
in
dec
fbstp
loope
fs
xchg
nop
les
shrd
jae
push
or
mov
mov
neg
popw
les
scas
movs
xor
push
jg
and
add
movs
push
in
gs
bound
jo
or
inc
or
xor
popa
dec
fisubr
outs
or
adc
pop
shl
and
adc
jo
xor
aas
push
mov
je
lods
inc
pop
jne
fld
adc
mov
xchg
jne
mov
cmp
(bad)
scas
mov
fwait
push
push
jo
push
lock
aam
add
inc
or
in
test
mov
repz
fs
and
push
outs
mov
(bad)
aad
xor
xchg
popa
xor
cmps
ror
in
add
imul
pusha
mov
int
lods
loopne
or
out
imul
jo
jnp
in
popa
and
lock
nop
lods
movs
pusha
and
jecxz
mov
xchg
or
mov
pop
sbb
pop
cmp
fild
test
lods
repz
fiadd
outs
cmp
push
mov
dec
push
adc
inc
lods
ss
xor
js
push
ret
jmp
or
push
and
pusha
movs
inc
adc
popa
scas
mov
add
fdiv
cmp
mov
or
xchg
xchg
xchg
dec
cmp
sbb
and
xchg
or
(bad)
fcom
daa
popf
xor
cmp
in
ja
mov
mov
and
popa
push
leave
cwde
pop
xchg
dec
jmp
stos
cld
mov
cwde
push
in
ja
ficom
xchg
cmp
in
push
xchg
mov
fs
enter
push
adc
test
lods
ror
inc
xlat
add
and
sub
(bad)
or
shr
je
or
aam
in
dec
pop
cmp
mov
push
les
inc
mov
loop
ret
retf
shr
fld
sahf
pop
sbb
iret
cmp
pop
mov
and
ror
mov
pop
sub
xchg
lds
dec
aas
daa
(bad)
pop
add
imul
fisttp
into
xlat
and
dec
ja
test
cwde
add
mov
mov
enter
leave
push
push
out
push
xchg
push
xchg
sbb
mov
pusha
add
(bad)
or
sub
enter
sar
sub
lahf
or
mov
mov
inc
inc
int
rol
pop
xor
xor
xor
mov
push
test
aam
pop
xor
aam
sbb
mov
add
(bad)
jb
leave
pop
dec
inc
adc
repnz
sbb
lea
push
xchg
xchg
cwde
xlat
cmp
cmps
or
cwde
imul
test
call
fsubr
push
mov
dec
push
jbe
dec
inc
in
jne
cmps
mov
push
sahf
push
add
cmp
in
xchg
push
jg
cmp
adc
sub
pop
push
jne
cdq
in
shl
arpl
mov
pusha
xchg
pop
das
lea
dec
sub
push
sub
nop
pop
sbb
popf
les
adc
and
push
dec
sub
mov
enter
mov
cwde
daa
daa
push
or
dec
or
adc
xchg
mov
int3
and
cmp
inc
xchg
fwait
xor
test
enter
mov
inc
xchg
adc
sti
xor
arpl
push
xor
movs
add
inc
add
add
sbb
pop
pop
lds
and
adc
xchg
repnz
dec
enter
call
cdq
push
inc
es
xor
shr
push
pop
aad
add
xchg
in
jae
inc
sub
retf
or
rcr
cwde
aas
xchg
dec
nop
loope
adc
cmp
aam
clc
call
add
mov
and
inc
movs
test
lea
gs
cmp
xchg
lea
jns
xchg
push
lods
mov
mov
sbb
push
mov
pop
sar
push
fsubp
(bad)
mov
mov
add
adc
enter
jo
(bad)
mov
out
dec
xchg
or
mov
adc
add
push
rol
ficom
mov
in
jnp
fs
mov
aad
mov
pushf
nop
sub
mov
cmp
xchg
xchg
out
ins
dec
push
mov
sbb
xchg
test
add
xor
or
or
push
xor
add
cdq
xchg
push
inc
sub
(bad)
push
push
in
je
inc
call
and
sbb
push
movs
sbb
mov
and
or
sbb
ins
sbb
xchg
pop
jne
dec
cmps
in
push
inc
push
add
push
adc
inc
stos
push
push
(bad)
cmp
or
and
or
add
add
mov
xchg
shl
mov
inc
ds
ror
xchg
xor
retf
mov
fs
or
sbb
jmp
xchg
aam
aad
mov
aad
rcl
pop
sub
test
ret
and
les
sub
js
adc
call
ins
mov
xchg
dec
enter
movs
pop
shl
je
adc
push
loopne
imul
and
xchg
jmp
mov
shr
xor
out
(bad)
bound
inc
jmp
fsubp
pop
sbb
fistp
cli
push
push
dec
(bad)
pop
sub
push
add
adc
movs
xchg
cmp
mov
mov
xchg
jg
push
adc
jne
daa
daa
pop
push
jmp
push
add
out
and
jg
push
dec
cs
aad
mov
or
push
inc
cs
lea
push
pop
adc
dec
test
mov
or
(bad)
daa
rcl
pop
adc
lods
mov
shr
or
icebp
ror
mov
add
sbb
rcl
popa
pop
mov
shl
mov
mov
or
sub
vmwrite
rcr
loope
mov
cmp
icebp
jge
adc
sbb
pop
dec
push
mov
xor
cmps
inc
arpl
inc
xor
loopne
jo
ret
in
fcomp
dec
loop
push
push
movq
repz
add
mov
sar
add
xchg
aad
cmp
test
(bad)
in
add
jo
dec
push
aad
je
pop
add
dec
pop
(bad)
xlat
add
mov
push
adc
sub
xor
push
push
repnz
fisubr
mov
inc
das
inc
enter
fisttp
inc
test
mov
cld
(bad)
cld
inc
xor
fwait
sbb
mov
pop
sbb
pop
fld
mov
push
adc
dec
push
imul
mov
ror
inc
push
rcr
cmp
test
cli
and
xchg
cld
adc
xor
mov
inc
sub
add
repz
push
or
inc
pop
test
mov
or
cmp
out
test
rcr
in
or
es
inc
mov
jle
adc
or
nop
add
setbe
inc
sub
jo
pop
dec
pop
sbb
cmp
mov
dec
or
into
push
aam
lds
sbb
cmp
xor
pushf
in
add
xchg
pop
pop
jb
or
push
fiadd
(bad)
or
sti
out
sub
or
push
or
add
test
ins
add
push
ss
out
call
ins
push
cmp
dec
adc
addr16
push
jae
out
add
inc
xchg
leave
xor
inc
cwde
data16
jno
enter
pop
pop
lods
push
aad
pop
add
mov
push
dec
push
mov
lods
mov
lods
mov
pop
push
into
inc
les
cmps
push
ror
xchg
adc
sbb
int3
in
inc
inc
lods
shl
rol
inc
test
xchg
fisubr
xchg
scas
jno
and
int3
push
fiadd
ret
lea
sub
jae
ficomp
rol
into
ret
stc
sbb
mov
dec
add
shl
jge
and
ins
imul
lods
or
dec
xlat
leave
add
inc
xor
adc
or
and
test
add
adc
adc
js
xor
add
sbb
add
pop
and
mov
dec
lods
push
push
mov
xchg
mov
repnz
aaa
int3
aaa
pushf
test
mov
xchg
xchg
sbb
add
and
(bad)
fwait
inc
or
lea
retf
and
in
push
inc
in
or
dec
or
adc
les
xchg
adc
add
and
adc
cdq
inc
std
inc
lea
sahf
mov
loop
dec
sti
push
pusha
xchg
push
inc
add
cmp
adc
(bad)
add
push
lea
adc
mov
jmp
xlat
dec
xor
or
xchg
lea
sahf
loopne
xor
stos
xchg
push
or
ja
mov
and
inc
pushf
cmp
mov
adc
xchg
ret
or
xor
dec
add
push
push
loop
test
push
fcmovnb
mov
mov
adc
cdq
(bad)
push
or
adc
ret
cs
cld
in
es
call
or
jno
inc
and
inc
fdiv
call
aaa
aam
xchg
lock
gs
lock
and
jge
jmp
or
jne
popa
mov
cdq
ins
xor
xor
cmp
xchg
imul
data16
cmp
push
test
sbb
or
push
xchg
fmul
in
pop
push
mov
or
xor
inc
lds
test
mov
sub
sbb
push
pop
sbb
xor
call
jne
adc
cs
adc
push
in
fiadd
aaa
push
nop
sbb
mov
(bad)
jmp
ja
stos
xor
ins
imul
fbstp
shl
cmp
(bad)
mov
hlt
add
leave
mov
aam
retf
mov
fmul
mov
mov
push
mov
push
test
adc
push
adc
mov
test
fisttp
call
inc
pushf
fstp
dec
dec
dec
les
jae
push
bound
(bad)
ins
sub
ffreep
outs
jecxz
push
and
add
mov
push
or
mov
rol
in
aas
push
sub
ins
je
dec
lods
fdivr
xchg
mov
adc
add
dec
push
xlat
add
sti
xchg
add
cmp
and
jle
xchg
arpl
enter
fucomi
std
push
dec
mov
jg
push
test
je
cmp
mov
cmp
jb
call
xor
call
jmp
mov
loopne
cmp
nop
pop
adc
mov
fdivr
lds
ins
jo
add
mov
mov
mov
xlat
pop
(bad)
shr
add
mov
aaa
(bad)
ins
aas
mov
or
sub
loopne
ja
push
(bad)
inc
les
sbb
sbb
fwait
add
push
nop
data16
inc
ficomp
mov
ret
lods
loope
test
out
xor
cwde
inc
jg
(bad)
pop
lds
pop
dec
mov
jmp
adc
inc
pop
pop
mov
fbld
mov
scas
inc
shl
sub
xchg
clc
inc
mov
adc
mov
or
scas
mov
or
push
push
push
push
lahf
lahf
or
sub
xchg
jns
jecxz
sub
mov
mov
xchg
pop
adc
mov
lods
nop
data16
cwde
pop
mov
sub
call
aam
sub
push
dec
loopne
and
in
sbb
xor
adc
push
and
lock
cmp
movs
lock
mov
adc
push
xchg
in
pop
cwde
fadd
and
add
ds
pop
inc
xchg
test
xchg
cdq
cdq
dec
inc
push
push
lahf
aam
imul
cmp
dec
dec
xchg
ins
inc
xchg
loopne
scas
xchg
ret
test
ss
xchg
adc
push
call
int3
hlt
inc
pop
add
mov
adc
test
aam
dec
mov
push
bound
dec
jbe
pusha
add
mov
aam
fcom
loopne
add
push
dec
sbb
xor
pop
push
fild
test
mov
push
xchg
fdiv
les
mov
push
fs
push
shl
cmps
push
(bad)
int3
jecxz
pop
pop
jecxz
stc
aam
xor
aas
pop
sbb
(bad)
pop
fs
fist
add
xlat
mov
stos
fdiv
inc
inc
es
je
je
das
movs
dec
fst
fsub
stos
sbb
pop
call
popf
mov
and
fcomp
mov
das
mov
mov
push
mov
rcr
test
mov
shr
lods
mov
call
jl
mov
xchg
jb
jmp
add
mov
jp
adc
or
mov
adc
test
inc
lahf
add
rcr
xor
fdiv
xor
push
push
test
stc
and
test
push
xchg
jmp
test
dec
nop
pusha
cwde
and
test
add
fcom
sbb
add
or
dec
dec
popa
shl
ret
mov
lock
loopne
test
jo
adc
and
in
mov
mov
mov
and
leave
inc
adc
inc
push
mov
xchg
daa
jmp
inc
icebp
push
jmp
push
inc
adc
adc
mov
in
add
inc
jp
sti
push
pop
adc
sub
xchg
sub
pop
ss
loope
jb
cmp
xchg
inc
mov
xor
ja
pop
sub
loopne
movs
adc
push
pop
push
xchg
cmps
sub
sbb
pop
retf
xor
inc
push
cmps
xor
mov
nop
imul
xor
mov
push
mov
lahf
pusha
add
mov
mov
sub
sub
pusha
inc
mov
les
xchg
inc
loopne
inc
stc
cwde
call
push
xchg
mov
xor
mov
dec
or
inc
mov
adc
mov
mov
adc
fmul
mov
pop
dec
dec
pushf
ret
les
add
add
add
hlt
push
mov
adc
or
push
xchg
fld
shr
fld
pop
xchg
popa
imul
inc
retf
jl
int3
inc
inc
das
jl
mov
jecxz
adc
inc
xor
mov
or
sbb
pop
mov
ins
les
or
iret
sub
push
fcom
push
and
add
ret
pop
push
cmp
fmul
aas
jnp
xchg
xchg
sahf
bound
repz
fsubr
sbb
rol
push
or
in
mov
pushf
jne
jo
mov
xchg
adc
pop
inc
test
push
lods
scas
mov
fsubr
adc
add
jns
push
and
scas
aam
shl
add
and
in
stos
sbb
clc
xor
sub
stos
adc
fldcw
xchg
(bad)
mov
rcr
push
arpl
es
sbb
je
and
fsub
test
or
(bad)
xchg
mov
rcr
out
push
rcl
nop
xchg
das
mov
ret
ror
adc
aas
and
adc
sbb
outs
dec
push
xor
dec
(bad)
fisttp
mov
rcl
jecxz
inc
movs
add
cmp
popf
xor
mov
adc
xor
lods
idiv
xchg
lahf
sub
mov
push
push
add
push
cdq
push
xchg
push
adc
(bad)
and
fld
push
xchg
int
mov
pop
inc
repnz
xchg
inc
mov
or
adc
int3
test
xor
ret
lods
das
push
add
sahf
add
xor
imul
cmp
xor
add
nop
add
(bad)
and
fmul
mov
(bad)
mov
push
adc
dec
sbb
stc
inc
call
dec
and
dec
sub
rcl
cmp
rcl
lods
push
adc
cld
mov
mov
push
ror
sub
ror
(bad)
push
loope
sbb
pop
and
sbb
ret
push
fs
and
add
(bad)
test
lea
mov
stos
shr
mov
pushf
push
sar
sub
push
pop
mov
in
xor
sar
in
add
add
das
xchg
push
aas
cmp
or
jecxz
mov
shr
mov
and
push
and
mov
inc
push
jle
and
test
xchg
scas
enter
dec
movs
mov
push
add
or
inc
loopne
(bad)
clc
loope
les
cmp
sub
mov
jae
push
inc
sub
and
inc
sub
mov
or
mov
in
or
in
jmp
mov
lods
sub
pop
js
jo
pusha
push
ret
iret
inc
xor
add
sbb
inc
or
xchg
cmp
je
sub
or
pop
ret
jo
sbb
cmp
in
mov
lss
ins
cmp
clc
(bad)
ins
xlat
fld
or
dec
fstp
stc
loope
cdq
jae
jmp
fcomp
and
mov
push
ror
add
ret
ret
jmp
push
inc
inc
inc
pop
clc
lahf
dec
or
sar
or
sbb
jae
cmp
jae
mov
(bad)
rcr
add
jb
stc
dec
rol
cs
push
dec
call
cmp
push
inc
jae
push
mov
or
int
adc
mov
inc
es
inc
mov
mov
adc
popf
fmul
test
in
and
adc
xor
mov
call
lock
mov
lock
mov
movs
mov
mov
lea
test
pop
pop
push
pop
repnz
lea
and
leave
mov
jecxz
or
adc
add
dec
popa
lds
and
add
add
add
mov
ret
push
repnz
add
mov
or
inc
dec
mov
jns
in
add
test
repz
nop
mov
shl
les
xor
adc
cmp
mov
in
pop
pusha
add
or
rcl
test
sub
mov
leave
dec
dec
pusha
or
mov
leave
add
enter
stos
lods
jl
sub
inc
push
push
cmp
or
sbb
push
and
or
adc
(bad)
sub
js
xor
(bad)
(bad)
xlat
add
bound
(bad)
inc
jecxz
mov
push
cmps
mov
xor
lods
mov
sub
xchg
jae
sub
mov
scas
inc
pop
jo
mov
cmp
inc
xor
mov
and
xor
inc
mov
mov
inc
mov
out
jmp
lds
mov
mov
mov
inc
mov
call
cmp
xchg
out
inc
mov
sub
push
lods
xchg
cmp
fsub
sbb
addr16
fmul
or
mov
dec
and
jge
test
jbe
mov
mov
mov
xor
add
pop
(bad)
mov
jl
sub
pop
and
push
loopne
aam
mov
shr
fwait
test
int3
and
add
sbb
cmp
sbb
push
xor
daa
and
in
stc
and
dec
xchg
push
arpl
icebp
inc
out
fadd
dec
adc
inc
inc
retf
in
push
push
add
inc
cmp
add
push
add
add
and
adc
and
(bad)
ins
and
push
ficom
jo
jl
dec
mov
push
push
mov
call
dec
or
jo
dec
repz
add
add
movs
mov
movs
mov
ret
xchg
test
retf
adc
test
inc
movs
dec
clc
mov
or
rol
push
adc
pusha
rol
xchg
fdivr
fcom
and
call
lds
xor
or
or
xor
shl
lock
cld
xor
rcl
mov
aas
jmp
retf
dec
popf
adc
mov
pop
(bad)
and
xor
push
in
cwde
sub
clc
push
ins
aaa
adc
xor
xchg
xchg
pslld
mov
mov
test
out
test
jb
xchg
sub
in
leave
cmp
xchg
xchg
and
or
cwde
xchg
and
iret
and
adc
loopne
leave
adc
jbe
and
fadd
add
ja
mov
add
popf
fisub
mov
mov
pop
inc
cmps
xchg
push
std
xchg
and
jns
movs
add
cmp
in
ror
enter
jge
jecxz
adc
fld
ins
jmp
fdivr
add
and
sub
xchg
or
pushf
add
sbb
push
push
int3
add
or
dec
sub
stos
mov
rcr
mov
mov
mov
or
arpl
jae
sbb
sub
stos
(bad)
mov
lods
xchg
mov
xor
xor
push
ret
xor
rcr
push
ror
dec
cmc
(bad)
and
push
rcr
sar
(bad)
jl
outs
xchg
imul
adc
nop
je
ret
push
mov
retf
aas
add
xor
imul
or
dec
leave
add
push
or
push
cmp
ret
mov
stc
out
(bad)
ret
fcomp
sbb
mov
push
ret
out
or
mov
push
in
push
(bad)
mul
test
out
pmaddwd
and
test
push
push
xor
inc
push
cmp
xchg
mov
xchg
dec
ret
pop
adc
sbb
ret
dec
xor
xor
inc
push
in
leave
cmp
mov
out
sbb
mov
and
xor
add
lea
sub
or
mov
push
mov
rol
cmp
cdq
add
sbb
les
add
jge
ds
xchg
dec
idiv
jno
mov
daa
mov
popa
dec
call
or
mov
dec
mov
nop
inc
call
mov
adc
clc
test
pop
mov
inc
push
lock
dec
sahf
data16
push
and
ds
and
add
xor
push
ss
pop
loopne
ins
and
mov
add
leave
nop
nop
movs
sub
mov
shl
push
add
xchg
or
loopne
loopne
push
dec
ja
jle
mov
mov
xchg
cmps
sub
jmp
pusha
pop
adc
test
test
inc
push
fs
and
push
test
add
icebp
sbb
enter
retf
push
test
mov
inc
loopne
add
add
adc
les
push
mov
fwait
shl
inc
scas
nop
mov
inc
xchg
mov
sbb
dec
repnz
cdq
popa
xchg
push
add
fsub
in
mov
lea
dec
shl
adc
dec
cld
push
and
jo
je
cmc
inc
aaa
push
add
fld
push
mov
push
nop
adc
psubsw
jmp
faddp
dec
adc
fcomp
mov
push
add
or
or
cmps
mov
dec
repnz
repz
jl
imul
push
or
lods
cmp
out
or
je
push
les
jl
iret
imul
inc
test
cmp
and
ficom
xor
enter
out
loopne
sbb
pop
push
and
icebp
and
cld
arpl
addr16
mov
cdq
add
std
ja
xchg
or
mov
dec
adc
mov
les
jb
std
(bad)
inc
xor
test
shl
loopne
and
inc
rcl
xchg
mov
mov
sbb
cmp
sub
aam
fsub
adc
or
push
test
in
adc
sub
push
test
sbb
or
fwait
add
push
mov
jnp
(bad)
xor
and
arpl
push
ret
push
dec
test
jbe
in
in
xchg
xchg
mov
mov
je
jbe
xor
pop
int
inc
inc
push
xchg
or
sub
adc
xor
je
repz
pop
push
shl
xchg
dec
mov
push
hlt
adc
hlt
sbb
and
dec
(bad)
and
inc
push
or
iret
jne
(bad)
ftst
dec
call
pop
cs
push
push
sbb
fadd
fwait
inc
clc
fistp
inc
(bad)
(bad)
sahf
xchg
bound
adc
in
add
fcom
adc
es
dec
lock
jge
dec
sub
jg
add
cmp
dec
rcl
arpl
test
pop
add
loope
adc
nop
pop
aad
std
dec
pop
mov
or
retf
mov
sbb
test
push
pop
add
or
jecxz
mov
aam
sub
ror
mov
xor
pusha
sbb
mov
fidiv
add
add
call
call
inc
ror
push
and
inc
xchg
mov
lea
push
ss
jg
xor
push
adc
pusha
cmc
repz
cmps
xchg
js
test
xor
push
ins
les
or
cmp
ret
mov
push
test
jmp
aas
jne
mov
mov
jp
pop
leave
adc
and
dec
fsub
xchg
sbb
cwde
(bad)
add
mov
sub
cmp
ret
add
inc
push
and
mov
push
or
inc
xchg
pop
inc
cmp
ins
cmp
dec
bnd
pop
xchg
push
dec
fs
in
cmp
in
cs
push
cmp
pop
call
mov
fs
lahf
vmwrite
inc
xor
push
xchg
xor
mov
push
push
out
mov
or
xchg
xchg
inc
call
dec
sar
mov
adc
cdq
aad
pop
xchg
movs
lods
lea
xchg
(bad)
pop
pusha
icebp
shr
popf
xchg
pop
mov
inc
add
jb
xchg
lea
adc
push
bound
ins
lods
mov
push
pop
dec
repnz
leave
push
push
cmp
xchg
inc
test
and
push
lahf
dec
sub
sbb
sub
mov
mov
minps
rol
test
cmps
mov
mov
dec
inc
sti
xor
inc
jmp
daa
je
sub
cmp
add
jmp
cdq
pop
sahf
add
cwde
add
fcom
nop
and
or
(bad)
stc
add
pop
lea
inc
xchg
addr16
push
nop
lea
pop
xor
and
pop
add
mov
shl
stos
or
add
add
sub
sub
fsubrp
and
les
sub
(bad)
adc
pop
cmp
push
(bad)
mov
jo
jb
push
mov
rcr
stc
add
xchg
push
sahf
fdivr
cmp
aas
fcomp
inc
add
mov
ins
inc
sub
test
cmp
cmp
nop
stos
jp
pop
outs
loopne
inc
mov
test
cmps
fs
mov
adc
call
xor
jb
inc
sbb
xchg
and
push
or
inc
sahf
or
fdiv
add
push
fstp
mov
imul
mov
inc
mov
fdivr
rcl
xchg
test
add
or
jbe
fs
push
push
push
dec
movs
cmp
enter
add
adc
adc
(bad)
call
mov
mov
xor
stos
dec
dec
add
pusha
xor
add
sub
or
push
icebp
inc
push
sub
add
dec
test
cmp
push
inc
jmp
inc
xchg
rol
push
push
repnz
push
xlat
dec
jns
add
adc
add
inc
in
and
and
mov
and
bswap
in
outs
inc
sub
inc
in
nop
into
sub
pop
mov
add
and
test
fcmovu
out
retf
cmp
je
cmps
mov
pop
add
cmp
mov
add
mov
and
inc
out
push
push
(bad)
cmp
and
or
lods
mov
push
fimul
int3
hlt
add
fdivr
enter
push
adc
sub
arpl
push
loopne
or
add
or
dec
or
dec
and
pop
and
or
aas
adc
pop
bnd
mov
mov
hlt
mov
mov
clc
sahf
add
call
mov
retf
mov
retf
lods
test
mov
cs
or
mov
jns
mov
(bad)
in
sbb
sbb
les
sbb
inc
inc
inc
(bad)
(bad)
(bad)
(bad)
cdq
inc
inc
inc
(bad)
std
or
xchg
sbb
(bad)
aam
cmc
sti
or
test
mov
mov
push
adc
adc
cmp
(bad)
adc
pop
or
scas
ja
sbb
cmp
mov
ror
sbb
(bad)
enter
mov
jp
jns
dec
cmp
sub
es
inc
movs
push
arpl
xor
dec
dec
out
or
jno
data16
fwait
inc
xchg
mov
cmp
(bad)
xor
mov
lock
movs
mov
mov
dec
sbb
xchg
jle
sub
inc
loopne
push
xchg
push
or
cs
mov
inc
jb
out
mov
mov
mov
mov
mov
and
ror
or
dec
cmp
dec
aaa
pop
inc
mov
cmp
and
and
add
mov
adc
jns
mov
xlat
add
mov
loopne
adc
or
int3
test
aad
dec
add
shufps
rol
jg
xchg
jge
pop
(bad)
push
inc
mov
popf
lods
xchg
in
(bad)
pop
adc
xchg
inc
fs
es
pavgw
imul
dec
arpl
push
inc
popf
cs
push
fcomp
push
mov
sbb
rcr
inc
cmps
mov
(bad)
push
inc
and
push
dec
sbb
cmp
mov
or
inc
push
loop
and
ins
std
movs
je
adc
inc
and
lods
sbb
xor
dec
bound
mov
in
mov
jp
jecxz
fsub
mov
and
xor
xor
test
push
pusha
imul
mov
and
addr16
movs
cmp
jg
pop
and
xchg
or
pusha
cdq
push
push
mov
lds
add
sbb
pop
sub
sbb
inc
adc
push
fcom
iret
scas
sbb
mov
adc
cmp
dec
add
jns
push
ss
push
fld
in
add
mov
fistp
movs
rcl
loopne
sahf
shl
inc
and
push
lods
fs
(bad)
out
inc
sub
dec
call
dec
mov
(bad)
movs
or
inc
test
or
jle
add
and
push
add
in
dec
cwde
jo
pop
dec
mov
ins
sub
push
fisub
add
lods
sbb
std
push
inc
ds
jl
pushf
pushf
int3
cmp
stos
sar
pusha
xchg
and
and
push
add
jne
jecxz
xchg
push
nop
add
or
adc
aad
adc
mov
push
(bad)
pop
add
loopne
mov
ins
repnz
cmp
push
loopne
jns
dec
lds
pop
jb
push
leave
fadd
push
xchg
rol
sub
test
in
fmul
(bad)
xor
adc
jle
pop
adc
or
mov
jae
inc
xor
aam
dec
aaa
mov
test
push
enter
cmp
les
jmp
ja
dec
fidiv
mov
mov
mov
cmps
les
fadd
and
das
bsf
stos
shl
pusha
inc
dec
repnz
xor
xor
cmp
adc
mov
or
xor
test
pop
push
aam
cmp
mov
or
das
xchg
and
dec
je
aam
pop
push
or
iret
or
sbb
call
sbb
test
and
or
inc
mov
jae
pop
sbb
sub
ret
mov
nop
outs
push
and
(bad)
sub
push
pop
dec
mov
dec
inc
arpl
push
sbb
cld
sbb
and
fldenv
jg
and
mov
scas
or
jb
mov
ins
dec
and
push
and
rcl
sub
push
enter
cmp
add
fadd
and
aaa
int
dec
movs
jno
sbb
xor
cmp
xchg
pop
xor
push
enter
test
push
out
xor
lea
rcl
aam
aad
call
xchg
call
stos
(bad)
mov
mov
std
mov
dec
(bad)
cmc
test
aam
mov
jp
movs
cmp
enter
sub
hlt
(bad)
imul
in
sbb
xchg
dec
sbb
add
cmp
movs
movs
xchg
cld
std
jb
add
hlt
std
in
std
xchg
or
cmp
add
or
push
sub
mov
dec
mov
add
mov
sahf
mov
and
in
inc
dec
xchg
or
(bad)
xchg
hlt
std
nop
xchg
adc
test
std
je
push
add
cmp
rcr
push
mov
aam
in
xchg
add
or
es
or
mov
sar
pop
xchg
jmp
jno
adc
dec
dec
mov
jno
or
aaa
(bad)
mov
mov
inc
mov
mov
call
cmp
lea
xlat
je
xor
es
xchg
or
mov
push
inc
add
add
xor
and
adc
shl
pop
add
inc
mov
sub
pop
pop
push
stos
pop
and
push
inc
cwde
push
pusha
xchg
sub
call
iret
shl
adc
ret
cmp
inc
cmp
cmp
cmp
nop
jge
aas
adc
pop
adc
mov
into
xlat
sbb
inc
mov
xor
ror
je
sbb
ret
push
xchg
nop
inc
fidiv
fs
(bad)
fiadd
lea
lea
leave
cmp
fcom
out
mov
in
jl
adc
or
dec
outs
adc
and
data16
mov
or
inc
dec
inc
mov
xor
cmp
push
xchg
dec
lods
xchg
or
test
(bad)
sub
sbb
sub
mov
push
call
jle
or
adc
dec
or
hlt
xchg
add
and
xor
arpl
out
cld
leave
dec
adc
add
mov
repnz
ss
pop
add
dec
dec
cmp
mov
pop
loopne
xchg
sbb
sub
xor
cmp
inc
mov
mov
add
inc
cdq
push
mov
push
push
cmp
jb
inc
sub
jmp
aad
in
and
enter
fwait
ss
lds
pop
mov
sub
fsubr
jmp
jmp
add
fcom
imul
imul
adc
inc
cmp
sub
xlat
adc
test
and
jb
imul
xor
mov
test
pop
xor
inc
or
in
lock
aaa
pop
pusha
push
repnz
pop
and
push
inc
mov
xor
push
push
cmp
inc
pop
sub
mov
je
cmps
addr16
ret
mov
retf
ret
rcl
in
mov
loope
lds
xor
jmp
sub
cmp
dec
dec
cmps
add
add
inc
push
push
mov
ins
and
adc
test
mov
in
or
pushf
or
dec
dec
adc
test
push
or
sbb
push
pop
inc
arpl
scas
popa
dec
push
test
ins
test
xchg
pop
fadd
inc
fmul
fdiv
and
add
and
cmp
xor
cmp
jb
daa
inc
cmp
aam
sub
or
shl
daa
sbb
enter
xor
fadd
ror
ds
or
xchg
stos
lods
cmp
je
cmps
sub
or
int3
adc
dec
imul
cmp
sub
add
xor
push
inc
and
sbb
bound
and
repz
imul
hlt
shr
mov
and
enter
adc
enter
xchg
enter
adc
(bad)
rol
sbb
or
enter
mov
xchg
push
add
xchg
pop
push
and
out
xchg
mov
push
pop
or
add
movs
loop
lods
dec
sub
jno
jns
add
sub
and
jb
sub
mov
and
inc
and
mov
add
and
ret
push
in
and
add
xchg
jl
inc
and
jae
push
imul
pop
shr
into
sbb
sub
leave
movs
jne
sbb
imul
xor
aaa
enter
mov
lods
pop
cdq
xchg
adc
arpl
(bad)
dec
push
cmp
dec
push
sbb
inc
mov
mov
push
add
sbb
pusha
mov
push
mov
sbb
and
mov
xchg
leave
data16
xchg
hlt
adc
mov
inc
stos
push
pop
lea
mov
arpl
fs
ins
jo
js
xchg
sbb
and
es
mov
ja
dec
daa
cwde
inc
or
aas
cwde
pop
fisttp
les
and
xchg
jl
xor
push
jno
in
out
call
jo
xchg
inc
push
je
repz
xor
xchg
or
xchg
mov
adc
mov
push
inc
pop
cmp
dec
repnz
cmc
fadd
sbb
xor
xlat
lahf
pop
xor
sbb
sbb
test
xchg
push
lea
js
push
adc
sbb
xchg
xor
push
ret
in
add
es
popa
sbb
pop
push
dec
cmp
nop
sbb
cdq
fisubr
add
pop
fs
mov
mov
les
sbb
mov
mov
xchg
cmp
dec
stos
xchg
mov
dec
xchg
jmp
mov
sbb
cdq
sub
test
(bad)
pop
test
popa
or
mov
push
sub
add
xchg
xlat
(bad)
leave
and
jb
jl
stos
dec
shl
(bad)
adc
cmp
sbb
pop
xchg
and
stos
jecxz
dec
js
mov
out
icebp
mov
(bad)
je
les
xchg
add
sbb
test
xlat
lea
xor
xor
jo
adc
dec
push
cmp
inc
xchg
sub
push
add
xor
sbb
or
mov
cmps
add
fs
add
in
inc
pop
and
inc
sbb
push
sbb
jb
push
and
adc
xchg
or
dec
dec
xor
push
and
sbb
enter
jb
and
inc
sub
or
mov
add
sub
and
and
lea
push
cmc
les
mov
hlt
add
leave
add
add
mov
xor
lea
nop
je
sub
aam
mov
leave
leave
xor
cmp
adc
int
pusha
shl
test
and
adc
dec
jb
sub
xor
mov
(bad)
xchg
(bad)
ins
leave
fstp
leave
push
add
adc
xchg
pushf
pop
and
xor
dec
adc
cmp
and
push
shr
mov
(bad)
sbb
inc
mov
sub
push
adc
mov
xor
dec
jb
jb
adc
adc
and
push
adc
xor
(bad)
xlat
mov
mov
cmp
and
push
add
adc
and
or
jb
mov
add
add
adc
or
add
cmp
in
cmp
cld
std
sub
cmp
mov
xchg
cdq
in
test
cmp
and
dec
repnz
std
lock
cmp
ins
inc
in
(bad)
push
xchg
dec
dec
add
add
add
cmp
enter
in
in
cmp
loopne
push
xchg
fdivr
fdivr
and
dec
ds
xor
adc
fdivr
enter
aam
adc
push
ror
rol
add
test
dec
xchg
mov
arpl
jne
jne
rol
or
add
fmul
adc
into
push
jne
sub
rcr
lods
pushf
sub
pushf
sub
dec
sub
sahf
sbb
jnp
inc
cmp
je
cmp
inc
mov
inc
fiadd
(bad)
mov
les
or
mov
imul
enter
cmp
dec
dec
cmp
dec
adc
sbb
push
sbb
ja
std
dec
push
mov
push
ins
cmp
inc
dec
jno
or
in
jae
xchg
mov
inc
test
(bad)
mov
cwde
fs
leave
dec
xor
stos
adc
xchg
bound
adc
inc
pop
sbb
and
dec
pop
push
(bad)
jbe
ins
and
sbb
jl
inc
add
in
ret
mov
push
repnz
inc
push
and
ret
sub
ror
dec
xor
cmp
adc
inc
pop
push
nop
popa
cmp
inc
ror
cmps
call
dec
add
in
mov
test
add
add
xchg
or
cmp
in
and
sbb
mov
and
nop
and
sbb
add
test
push
jb
xor
leave
xor
inc
lods
jmp
nop
sbb
inc
fsub
ret
dec
mov
inc
cmp
xchg
sahf
push
push
sub
sbb
aam
cld
inc
add
or
out
dec
(bad)
inc
pushf
pop
sbb
fsubr
inc
(bad)
aam
mov
inc
ds
jg
scas
inc
fdivr
in
movs
movs
test
fsubr
repnz
jl
xchg
fstp
in
pop
imul
movs
int
xchg
pop
cld
push
pop
fadd
sub
icebp
out
test
aas
mov
test
jmp
push
and
push
fsub
mov
enter
mov
mov
lods
dec
add
xchg
mov
pusha
push
mov
pop
jecxz
movs
adc
adc
xor
push
rcr
cdq
sbb
popa
dec
ins
dec
(bad)
lods
lock
int3
add
pop
push
sbb
or
cli
ja
jmp
dec
cmp
repnz
fadd
out
hlt
cmp
add
cmp
es
jecxz
inc
xchg
mov
mov
push
mov
sbb
adc
add
loope
mov
dec
push
jmp
pop
cwde
add
pop
sbb
xor
movs
push
and
dec
push
push
daa
jmp
call
call
sbb
mov
mov
inc
pop
adc
ret
push
adc
jno
mov
xor
adc
sbb
mov
loop
sbb
inc
inc
jo
js
add
fisubr
sub
imul
mov
test
das
sub
cmp
pop
mov
cmps
dec
mov
push
mov
inc
imul
test
jns
jge
fisubr
ins
adc
dec
and
sbb
mov
cmp
or
mov
mov
sub
add
inc
adc
cmp
je
pusha
dec
ret
enter
xchg
xor
pop
pop
cwde
and
inc
sbb
push
retf
inc
int
movs
and
sub
mov
fs
mov
lea
in
or
pop
sti
dec
je
jnp
inc
add
jnp
jl
or
xor
jnp
test
sbb
int3
adc
mov
in
and
cmp
in
leave
test
je
cmp
and
rol
fs
sar
inc
enter
ins
(bad)
push
jb
ins
ins
test
add
fs
es
pushf
inc
scas
neg
test
mov
push
mov
rcr
fadd
add
jb
in
add
xor
shl
or
push
xchg
push
pop
fistp
in
xchg
sbb
add
add
cmp
xchg
or
cs
dec
and
mov
in
stc
mov
pop
sub
xor
adc
stos
sbb
pop
movs
pushf
shr
movs
pop
mov
mov
xchg
xchg
icebp
imul
sbb
and
dec
enter
push
and
xor
sbb
loopne
loopne
sbb
xor
add
or
lahf
sbb
dec
sahf
dec
dec
stos
and
dec
or
ins
and
popa
sub
sub
arpl
mov
adc
js
sbb
dec
or
ins
push
out
jne
and
mul
popf
loop
inc
add
sub
mov
sub
test
loopne
dec
pop
cmp
adc
push
sbb
inc
ret
xchg
fs
sub
mov
mov
pop
enter
push
stos
add
je
mov
pop
adc
xchg
or
mov
and
sbb
inc
leave
add
stos
sbb
adc
sbb
nop
sbb
dec
jae
inc
push
xor
mov
es
jns
pop
and
sbb
pop
leave
push
outs
cmp
xor
sbb
pop
and
sbb
xor
repnz
add
add
xchg
leave
fist
test
jmp
repnz
cmp
test
rol
ins
dec
xor
sub
fs
mov
add
xor
inc
or
xor
mov
repnz
sbb
or
push
icebp
sub
sub
push
adc
jae
xor
cmps
adc
je
jbe
sbb
mov
lock
sub
ret
movs
nop
sub
pop
adc
pop
add
scas
mov
and
sub
ins
adc
adc
and
adc
test
jo
leave
add
adc
or
nop
and
xor
imul
sbb
mov
push
aam
sub
inc
pop
or
lods
jae
xor
jge
sub
jb
lods
inc
push
and
sbb
mov
sbb
inc
test
pop
fstp
popf
xchg
cmp
(bad)
scas
push
add
nop
xchg
sbb
inc
cmps
push
dec
sub
inc
or
mov
jo
xchg
mov
adc
shl
or
or
or
dec
sahf
(bad)
adc
fs
in
icebp
sbb
stos
and
popf
mov
add
jno
sbb
pop
push
adc
and
ret
xchg
cmp
ror
cmp
and
xchg
or
xchg
or
pop
in
jo
inc
add
add
movntps
push
mov
mov
add
or
in
sbb
add
cmp
add
in
xor
adc
add
push
icebp
sub
test
sbb
cmp
fcomp
das
outs
jns
jae
mov
call
xchg
sub
xor
inc
mov
enter
or
sbb
mov
inc
clc
jg
lea
ret
jae
xchg
or
or
std
jg
adc
xlat
dec
add
mov
test
inc
or
push
dec
push
and
adc
inc
pop
pop
cmp
mov
pop
leave
push
and
xor
push
mov
or
sti
mov
add
mov
jo
sti
ins
dec
cmp
enter
add
dec
scas
and
imul
rol
imul
cs
push
xor
or
das
and
xchg
push
(bad)
shr
stos
add
mov
sar
leave
or
std
jg
inc
aam
call
sti
dec
adc
dec
push
mov
sub
cmps
cmps
adc
jg
push
push
push
movs
call
cmc
adc
or
aad
rol
mov
add
sahf
(bad)
(bad)
icebp
or
or
(bad)
and
leave
aas
in
xchg
and
jns
add
xor
dec
sbb
jnp
pop
cmp
or
jnp
pop
push
ret
jae
ret
xor
nop
and
cmp
imul
jecxz
adc
inc
jl
pop
call
sub
xor
and
lods
inc
pop
enter
(bad)
mov
adc
mov
nop
xchg
(bad)
pop
pop
sbb
or
jecxz
adc
or
add
mov
jmp
push
aas
mov
nop
pop
mov
loope
mov
nop
hlt
mov
fisttp
sti
call
dec
dec
inc
inc
adc
jecxz
leave
fdiv
push
in
sbb
jmp
and
movs
movs
xor
cmp
in
dec
cmp
setg
cmp
es
addr16
jp
push
jb
jmp
push
cmp
jno
sbb
cmp
cmp
dec
inc
loope
in
or
inc
les
fdivr
shl
lds
cmp
fs
fistp
mov
ins
sub
fdiv
pop
push
popa
adc
and
dec
sbb
push
loop
xchg
sbb
sbb
push
add
xchg
mov
sbb
adc
add
loope
hlt
push
test
scas
add
adc
pop
or
cmc
push
sbb
es
cmc
je
adc
hlt
ja
inc
or
cmp
jns
lds
sbb
add
xor
xchg
dec
adc
mov
mov
mov
inc
add
vmovq
loopne
mov
nop
sbb
xor
and
or
pushf
xchg
ins
jl
call
ror
rol
mov
push
inc
or
repnz
movs
and
in
and
imul
add
or
es
std
push
xor
or
enter
fsub
in
je
sar
imul
mov
mov
popa
mov
nop
nop
add
or
and
xor
push
jmp
add
add
mov
jne
and
mov
gs
push
test
xor
add
inc
pop
adc
movs
lds
or
adc
(bad)
mov
aaa
test
mov
mov
lods
dec
cmp
xor
and
cmp
add
adc
rcr
push
in
cdq
loop
push
sbb
ror
mov
and
inc
jecxz
pushf
lock
sub
ins
dec
icebp
dec
int
lods
adc
movs
test
hlt
dec
enterw
push
outs
pop
xchg
loopne
jmp
jp
mov
inc
or
pushf
or
ret
scas
leave
adc
(bad)
or
loopne
data16
xlat
jp
xchg
mov
or
mov
es
sbb
xor
in
pop
lock
cmp
push
test
aam
xor
or
shl
dec
mov
jg
push
test
ret
lea
inc
dec
sahf
rcl
mov
sbb
and
cmp
je
sbb
mov
stos
sub
xor
addr16
int
clc
push
mov
mov
add
xor
mov
mov
jns
mov
mov
add
sub
mov
push
or
pop
loope
xchg
add
adc
ins
jns
and
adc
push
xor
xchg
inc
aam
pop
int3
jae
clc
xor
call
xchg
je
push
repnz
push
cmp
mov
es
sbb
nop
push
mov
and
arpl
xchg
fmul
rol
mov
bound
mov
or
jns
call
rcl
sub
xlat
add
das
ins
lods
mov
std
jmp
loop
xlat
loopne
dec
lea
jge
jmp
xchg
add
inc
mov
mov
xor
mov
inc
inc
sub
lds
dec
adc
sbb
push
repnz
mov
inc
stos
gs
mov
pop
or
lods
dec
dec
sbb
cdq
or
cmp
inc
imul
adc
ins
jo
push
call
push
cmp
scas
pop
ror
dec
add
rcl
les
(bad)
les
mov
cmp
mov
xchg
loop
mov
adc
test
aam
rol
nop
cmp
mov
xchg
aas
mov
xchg
pop
rcl
mov
xchg
mov
sub
call
test
je
sbb
sbb
and
jb
lods
jmp
sub
dec
daa
cwde
cmp
inc
push
leave
mov
mov
stc
mov
retf
popa
clc
dec
out
or
or
pop
pop
mov
iret
mov
pop
outs
push
in
movntps
xchg
lea
mov
lds
and
inc
and
adc
push
jae
in
sbb
sub
jae
mov
test
movs
mov
push
xchg
add
mov
sar
adc
stos
retf
jns
sbb
adc
jmp
ins
and
mov
xchg
retf
test
sar
jmp
jge
ds
pop
sbb
lds
(bad)
dec
pop
sub
adc
(bad)
aad
sbb
sbb
addr16
(bad)
sub
xchg
(bad)
popf
push
add
sbb
in
es
sbb
mov
add
bound
mov
jmp
das
add
jp
pop
or
push
leave
mov
push
mov
push
mov
test
repz
sbb
sbb
dec
mov
adc
sbb
inc
mov
mov
adc
adc
dec
inc
dec
ror
add
inc
cmp
push
mov
pushf
in
loopne
inc
push
xchg
inc
push
xchg
inc
mov
and
mov
(bad)
inc
inc
fs
push
pop
push
mov
mov
adc
sbb
(bad)
int
pop
loopne
aaa
fwait
les
gs
inc
push
in
mov
call
aam
shl
cmp
or
jne
xchg
jmp
and
loopne
ror
pop
add
pop
dec
adc
mov
sub
rcl
pop
or
and
lahf
pop
xor
mov
ret
jge
out
inc
xchg
setno
shl
push
inc
nop
icebp
mov
clc
inc
mov
add
or
add
fbld
dec
cmp
add
and
and
xor
add
add
jmp
push
pop
inc
xor
jae
xchg
out
sbb
mov
jne
cmc
fadd
adc
fmul
inc
aaa
mov
pusha
xchg
fs
and
test
fistp
sbb
push
pop
int
aaa
ret
mov
and
pop
cld
(bad)
lds
pushf
data16
cmps
mov
dec
lds
in
lods
push
mov
adc
add
ror
push
mov
repnz
cmp
jecxz
jnp
add
dec
loopne
jmp
xchg
mov
sub
(bad)
and
push
(bad)
inc
repnz
jne
sbb
fist
imul
mov
test
sar
xchg
cdq
test
imul
inc
and
aaa
pop
adc
mov
fisttp
lods
sbb
scas
add
push
mov
sbb
sbb
nop
jl
ins
jnp
and
lock
cmp
inc
test
adc
cs
add
test
ret
dec
and
dec
jb
or
sbb
inc
sbb
mov
sub
adc
and
adc
sbb
and
and
pusha
push
inc
inc
cmps
aad
ds
scas
cmc
nop
int3
sub
add
sbb
lahf
rcl
pop
jmp
and
pop
xchg
push
cs
imul
inc
fcomp
das
mov
add
aam
mov
das
js
fld
test
inc
push
sbb
adc
adc
popa
or
inc
mov
add
and
sbb
sbb
pop
xlat
sar
cmps
mov
cmp
je
push
pop
mov
xchg
and
in
or
pop
(bad)
loopne
adc
jne
ins
add
push
(bad)
out
xor
test
push
xor
mov
je
pop
hlt
pop
cld
(bad)
push
imul
adc
add
pop
pushf
jne
stos
inc
sar
imul
ins
sbb
xchg
aas
jno
push
pop
(bad)
cmp
inc
jb
stc
mov
pop
xchg
xchg
inc
and
xor
adc
aam
ins
stos
arpl
sub
add
and
add
add
sbb
sbb
jno
push
dec
or
loopne
sbb
inc
ins
jl
cli
jnp
dec
je
or
clc
jo
sub
enter
shl
sub
dec
mov
ror
ja
cwde
int3
and
jg
adc
push
push
fcomip
inc
sbb
sbb
inc
fisub
and
sbb
dec
push
ja
push
dec
xchg
add
popf
ja
fsub
mov
fadd
sbb
mov
jne
cmp
adc
mov
(bad)
sti
and
sbb
lock
pushf
(bad)
mov
mov
add
inc
(bad)
or
sbb
sbb
mov
pop
or
or
les
jmp
xor
dec
jmp
add
cmp
sub
add
(bad)
dec
push
fnsave
dec
sbb
push
add
xchg
ins
xchg
pop
or
add
(bad)
and
xor
(bad)
fsub
inc
mov
pop
add
and
addr16
cdq
inc
mov
cmp
inc
je
mov
xchg
ror
movs
add
or
pushf
xchg
pusha
nop
inc
les
cmp
ins
jnp
mov
movs
and
inc
xchg
cmp
loopne
bound
adc
and
or
xchg
ds
sahf
out
adc
or
mov
ds
pop
push
pop
pusha
jge
xor
aam
push
mov
sub
and
push
xchg
shl
cmps
aaa
adc
outs
jge
mov
popf
dec
add
xchg
fsubr
adc
and
and
ror
adc
inc
stos
push
ret
mov
adc
cdq
les
sbb
cwde
inc
addr16
xor
cmp
and
hlt
(bad)
in
fs
mov
inc
fs
test
mov
cwde
push
add
cwde
mov
pavgb
lds
icebp
test
test
dec
loopne
loopne
sbb
outs
das
pop
mov
(bad)
adc
cwde
push
loope
sub
adc
ins
loope
inc
popf
cmps
pushf
add
or
mov
adc
jno
or
test
test
(bad)
retf
fwait
push
mov
and
and
je
stc
cwde
add
inc
outs
rcl
or
sbb
sbb
dec
aas
aam
mov
push
aas
mov
shl
add
xchg
dec
pop
call
sbb
add
inc
cmp
cmp
dec
add
movs
push
pop
mov
shr
sbb
jae
adc
mov
loope
fstp
add
push
cld
lods
xchg
or
xor
loop
inc
adc
dec
pushf
jp
movsx
je
test
xor
mov
or
and
xchg
aas
inc
pusha
arpl
in
cmp
sbb
sub
adc
inc
stc
mov
push
pop
inc
mov
ins
xor
lea
test
popa
add
sbb
enter
and
push
add
adc
nop
ss
xor
jl
enter
mov
movs
inc
cwde
dec
enter
inc
mov
test
inc
push
fs
test
lods
pop
adc
enter
pop
(bad)
xchg
cwde
fild
adc
call
cdq
dec
and
mov
ja
sub
jp
jae
gs
inc
js
js
inc
gs
add
test
cli
sti
(bad)
and
cmp
push
xchg
dec
pushf
pop
(bad)
adc
or
jo
mov
call
pop
in
mov
ins
bound
ins
or
or
(bad)
sub
sbb
add
inc
inc
js
inc
push
ins
sbb
push
sub
loop
jns
rol
(bad)
out
mov
je
cs
jle
shl
or
scas
mov
and
pop
and
enter
(bad)
fmul
dec
les
fadd
sub
in
xor
cmp
xchg
mov
xchg
pop
adc
xchg
push
and
ja
imul
mov
jno
push
lds
mov
nop
sub
inc
push
xchg
adc
sub
aam
xor
or
push
fadd
lds
add
inc
cmp
loopne
inc
sbb
ret
sub
push
xor
push
repnz
dec
or
lar
cmp
mov
sbb
or
pusha
or
je
mov
(bad)
cmp
dec
or
sbb
mov
retf
cmc
wrmsr
loop
loope
push
adc
jle
repnz
adc
adc
retf
mov
in
dec
mov
adc
je
mov
sbb
mov
adc
sbb
enter
push
lahf
push
push
in
nop
test
sub
jecxz
pushf
imul
cmp
dec
fs
jp
mov
retf
push
inc
arpl
add
cmp
lea
pop
fs
adc
ins
ret
mov
or
push
add
and
xor
inc
ss
mov
pusha
out
in
xchg
dec
inc
push
(bad)
nop
(bad)
sbb
shl
sbb
sub
stc
mov
sub
imul
xchg
jle
movs
pop
test
pop
sahf
jp
or
add
lods
pop
and
pop
add
lea
fwait
lahf
enter
inc
xor
push
outs
xor
add
or
shl
dec
repz
xchg
add
or
mov
inc
jb
test
add
push
add
lock
push
shr
dec
pop
add
pop
jb
push
sub
and
jns
jle
or
nop
ss
and
mov
pusha
dec
mov
jae
lahf
imul
inc
test
or
enter
dec
leave
adc
cdq
mov
push
add
pop
or
xor
ret
jmp
and
and
push
and
je
xor
mov
(bad)
adc
nop
sbb
xchg
or
inc
bound
cmps
jge
cwde
or
stos
dec
xor
sar
mov
cmp
push
push
lods
pop
fld
adc
xchg
push
shr
add
sahf
mov
add
add
loop
mov
push
jns
mov
jmp
gs
pushf
xlat
test
pop
add
nop
sub
adc
inc
jl
xor
ds
and
inc
dec
or
adc
inc
jge
xor
mov
push
jecxz
xor
fdivr
mov
push
jno
stc
or
cmc
cmps
mov
inc
push
les
dec
sbb
inc
loopne
add
dec
inc
push
push
(bad)
shl
xchg
add
jmp
lahf
xchg
push
sbb
xor
sub
ss
ret
ror
add
in
adc
idiv
mov
lahf
cmp
xor
mov
sub
push
test
jmp
aam
and
arpl
push
rol
mov
arpl
or
mov
enter
xor
push
jb
(bad)
jl
enter
and
xor
inc
je
add
pop
add
cdq
mov
rcl
scas
sbb
push
dec
pop
(bad)
xor
in
adc
cmp
or
enter
inc
gs
mov
sbb
fs
pusha
stos
icebp
inc
lea
xchg
inc
push
and
scas
dec
inc
add
int
mov
jns
dec
adc
push
dec
popa
or
stos
movs
mov
(bad)
push
mov
mov
and
fcom
frstor
nop
and
add
and
xchg
push
test
pushf
and
inc
inc
rcr
mov
popf
inc
inc
push
ret
movs
dec
enter
mov
push
jg
adc
retf
pop
dec
xor
ss
sbb
push
sub
out
mov
cmc
xor
jns
ret
inc
std
les
jne
ret
inc
enter
cmp
fadd
lss
adc
scas
sub
sbb
int3
je
adc
das
adc
mov
scas
pop
les
add
ror
sbb
push
mov
mov
or
push
push
pop
nop
sbb
inc
add
loopne
xor
and
jmp
loopne
xor
call
call
imul
or
dec
push
pusha
sbb
jmp
test
push
ficom
sub
pop
mov
cmp
mov
rcr
jo
pusha
and
xor
out
pop
or
int3
aas
pushf
aaa
pusha
push
shr
xchg
pop
or
loopne
int3
or
or
in
pop
cmp
xor
out
pusha
movs
xor
sbb
addr16
ds
movs
aas
mov
pusha
lods
push
leave
and
adc
mov
mov
mov
mov
or
dec
movs
(bad)
or
(bad)
pop
test
outs
push
push
adc
xlat
or
jno
pushf
push
adc
sub
push
movs
xor
gs
adc
ret
add
or
sbb
mov
push
and
xor
xor
push
lods
adc
xor
call
mov
inc
icebp
xchg
jne
dec
or
std
mov
add
test
stos
ins
lock
(bad)
fild
(bad)
xchg
stos
mov
test
jae
add
(bad)
js
fisttp
imul
push
push
ret
or
cdq
pop
xchg
ja
xchg
mov
push
adc
or
sahf
and
and
adc
(bad)
call
in
(bad)
movs
sub
outs
mov
or
add
dec
mov
mov
fcom
lea
inc
(bad)
lea
mov
aas
add
(bad)
push
nop
inc
call
or
mov
and
shl
xchg
sbb
das
nop
fs
mov
mov
adc
push
stc
nop
test
sbb
cmc
push
aam
lods
sbb
mov
pop
sbb
lar
mov
dec
mov
and
add
and
adc
les
mov
and
test
div
mov
mov
mov
sub
and
sar
cmp
mov
sub
enter
adc
into
fcmove
das
add
sub
stos
cmp
xor
adc
loopne
pushf
ret
xor
xor
rcl
cmp
add
bound
sub
cld
enter
adc
ficomp
rol
fdivr
pop
push
xchg
mov
enter
mov
or
adc
jmp
test
imul
dec
aaa
xchg
nop
sub
add
cmps
pop
adc
cmps
out
cmp
or
cmp
push
sub
xor
sbb
inc
or
sbb
aaa
mov
push
movs
jmp
adc
fidivr
jns
xor
inc
push
arpl
ss
jo
push
push
mov
cwde
ret
jmp
push
out
fwait
mov
shr
rcl
xchg
pusha
cmp
xlat
idiv
cdq
add
jo
in
jmp
lock
sbb
sub
fcomp
imul
add
ss
imul
sbb
enter
jne
push
sub
push
adc
jmp
mov
adc
movs
xor
cdq
es
add
xchg
push
bound
pop
xor
mov
inc
sar
add
and
adc
mov
fist
shr
ror
pop
les
cmps
out
xchg
mov
xchg
inc
dec
push
mov
pushf
add
sub
rcr
or
add
jne
leave
or
add
in
sub
mov
sub
dec
adc
pop
(bad)
in
adc
mov
cs
sti
ss
aam
leave
add
dec
loopne
add
mov
xchg
cmps
gs
inc
sbb
sbb
in
call
sub
out
xor
je
fsub
daa
daa
call
mov
jge
out
or
popa
leave
inc
hlt
pusha
xor
dec
sbb
add
push
movs
mov
and
mov
xchg
pop
test
add
loopne
(bad)
jns
sbb
inc
pop
xor
int
push
pop
cmp
nop
adc
pusha
push
cmps
retf
cdq
js
xor
adc
mov
jb
sbb
add
jne
loopne
or
(bad)
ds
mov
push
push
cmovb
mov
pop
add
add
out
sbb
cmp
iret
repz
je
int3
or
mov
sbb
movs
test
sub
and
add
mov
add
dec
cdq
shl
scas
push
rcr
add
mov
adc
mov
xchg
sbb
iret
repz
clc
(bad)
call
xor
repnz
mov
inc
sub
inc
pop
xor
adc
push
js
or
xor
loopne
add
and
lea
aaa
adc
js
test
xor
icebp
scas
push
bound
test
jo
adc
push
test
jo
pusha
mov
rcr
xlat
pusha
cdq
mov
xchg
xor
xchg
sbb
inc
mov
pop
dec
adc
pop
lods
sbb
or
dec
and
dec
mov
sub
les
inc
sub
mov
xor
sub
lods
cmp
test
inc
push
pop
cmp
lds
cmp
xchg
arpl
aam
push
or
pop
ins
adc
dec
shr
pusha
adc
xor
mov
and
cmp
mov
(bad)
in
(bad)
pusha
in
out
fdivr
test
mov
inc
popf
adc
and
add
int
or
mov
clc
in
daa
lds
pop
inc
pop
push
adc
jno
shl
jmp
jns
mov
pop
or
outs
call
push
pop
out
dec
adc
or
dec
js
sahf
pop
sbb
and
in
add
(bad)
mov
clc
(bad)
movs
adc
or
xchg
sbb
add
call
dec
pop
push
mov
sub
mov
test
loopne
pushf
out
and
pushf
mov
cmp
rol
cwde
enter
xchg
cwde
mov
iret
inc
inc
cs
sar
mov
push
jns
inc
mov
call
sbb
aam
nop
xchg
test
xchg
and
je
je
add
cdq
nop
mov
dec
mov
xor
lea
sub
repz
scas
in
mov
pop
(bad)
mov
popf
jb
xchg
addr16
dec
mov
cs
jmp
adc
pop
sub
paddb
cmp
fmul
or
jb
inc
sbb
(bad)
pop
test
pop
and
shl
jnp
repnz
out
dec
pusha
pop
lea
push
mov
into
push
sbb
xor
mov
js
retf
mov
sbb
dec
mov
jne
pop
push
and
inc
enter
ja
or
ret
jecxz
add
mov
inc
or
cld
or
cs
add
pop
dec
or
mov
mov
or
cmps
mov
sub
or
fcom
pop
je
in
repnz
imul
dec
cld
clc
pop
and
test
aam
in
enter
add
addr16
mov
leave
or
push
ror
mov
sbb
adc
push
pop
jno
inc
lods
xor
popf
inc
dec
adc
out
dec
or
clc
inc
inc
aas
mov
push
arpl
lea
mov
inc
rol
mov
inc
xchg
dec
scas
popa
cmps
clc
inc
stos
test
pushf
call
lods
push
add
mov
or
add
push
ins
mov
push
mov
imul
in
popa
ins
iret
call
jb
shr
sub
out
cmps
cmp
pushf
cs
add
mov
add
clc
mov
(bad)
iret
add
jb
jg
add
nop
cmp
jg
pop
mov
popa
add
bound
inc
add
repnz
inc
cmp
xchg
add
push
pop
jge
es
pop
inc
sub
or
arpl
jl
movs
add
xor
push
sub
lods
xchg
mov
xlat
xchg
xchg
sub
mov
mov
test
(bad)
imul
cmp
mov
xchg
add
push
mov
or
sub
fs
nop
fst
push
addr16
xchg
or
sti
pop
hlt
mov
sbb
fld
xor
push
in
sub
test
nop
inc
ds
movs
mov
push
pushf
cwde
je
mov
mov
or
in
nop
test
add
sub
add
xchg
outs
call
test
xchg
inc
fsubrp
pop
sbb
or
int
inc
or
sbb
pop
sub
mov
and
aam
stos
fsub
add
in
cmp
dec
mov
and
stos
push
and
push
cmps
cmp
push
outs
arpl
movups
pop
add
xchg
mov
mov
sbb
and
sub
xor
leave
enter
sar
inc
into
xchg
cmp
icebp
or
imul
inc
adc
xor
test
jg
fcom
enter
sub
sub
retf
rcr
ret
xchg
inc
add
jns
mov
pop
mov
loopne
add
mov
movs
sub
sub
push
popa
enter
pop
inc
js
inc
pop
sub
sub
push
mov
lods
mov
fidiv
mov
inc
pop
push
inc
jmp
ds
stos
nop
or
jmp
mov
out
add
mov
(bad)
mov
mov
in
int3
fsub
dec
mov
in
adc
or
sbb
xor
add
or
and
stos
jb
add
dec
test
or
push
dec
or
push
arpl
add
push
and
pop
enter
ret
(bad)
mov
mov
repnz
outs
xor
or
jo
add
push
xchg
sbb
stos
out
adc
jne
cdq
fdiv
xchg
ins
outs
imul
fmul
dec
xor
dec
test
fst
sub
test
sbb
sbb
xchg
push
xchg
lea
dec
inc
xchg
cs
mov
jecxz
pushf
xor
mov
bswap
mov
sub
xor
push
and
lods
pop
gs
int3
test
pop
xchg
nop
lods
and
mov
xchg
or
push
add
stos
mov
adc
rcl
or
add
mov
sbb
adc
mov
adc
pop
dec
add
xor
and
dec
sbb
inc
bound
lds
add
or
sub
mov
or
push
enter
adc
pop
dec
in
xchg
(bad)
aad
and
inc
aas
mov
pop
rcl
mov
fnstcw
in
mov
sbb
add
test
or
mov
xor
imul
mov
inc
and
mov
jno
pop
xor
cli
adc
and
xor
mov
pop
cld
call
pop
repz
xor
jne
push
dec
call
aam
jb
call
dec
lods
pop
(bad)
mov
iret
jmp
mov
adc
fwait
mov
outs
xor
les
(bad)
xor
shl
inc
fmul
call
dec
sub
push
add
fs
or
inc
mov
aad
mov
push
mov
jo
dec
inc
jne
(bad)
pop
dec
es
test
or
rol
mov
das
mov
fist
add
in
cmc
fld
pop
mov
aad
or
pop
mov
adc
pop
adc
adc
sub
dec
or
ins
add
xchg
fsubr
aaa
das
(bad)
int3
test
out
adc
xor
pop
jecxz
xchg
ret
test
sub
pusha
or
cmps
xchg
aam
mov
(bad)
in
bswap
pop
sbb
scas
jecxz
pusha
jo
xor
shr
push
je
test
xor
lea
push
call
push
test
(bad)
arpl
add
add
or
(bad)
std
sbb
sbb
mov
adc
or
and
adc
dec
inc
mov
and
sbb
adc
or
sahf
lods
mov
ins
mov
fcomp
lds
jb
loope
je
popf
or
dec
ret
cdq
or
rol
push
or
ja
and
stos
fdiv
inc
inc
pop
stc
lahf
pop
pop
mov
pop
jl
inc
mov
test
(bad)
outs
clc
pusha
fsubp
pop
add
mov
arpl
sbb
call
pop
push
push
cmp
rol
sbb
adc
adc
inc
loope
ss
mov
pop
sbb
xlat
and
mov
scas
jmp
jmp
dec
push
cmps
mov
add
test
push
popa
and
lods
cmp
push
mov
aam
add
cmp
and
sub
inc
in
xchg
hlt
js
dec
mov
test
mov
nop
outs
fdiv
and
sbb
outs
imul
test
mov
jno
add
cmp
pop
(bad)
(bad)
jecxz
lods
outs
add
push
(bad)
mov
add
aaa
add
mov
mov
add
aad
dec
cli
push
adc
mov
inc
cmps
(bad)
adc
sti
mov
bound
adc
loop
push
adc
mov
ret
or
sbb
sbb
pop
xor
jb
retf
or
push
jo
adc
dec
imul
pop
jo
jno
mul
(bad)
pop
sbb
sbb
int
cmp
mov
inc
enter
or
mov
xchg
xchg
jmp
popa
and
push
mov
ins
push
or
push
ins
cld
mov
mov
push
sub
mov
xchg
fsubr
sub
dec
mov
lahf
lods
ror
outs
mov
in
xchg
pop
daa
mov
les
pop
xchg
jge
sub
shl
mov
jo
xor
push
(bad)
loopne
or
add
mov
dec
mov
cmp
fsubr
pop
dec
add
or
gs
rcl
xchg
jmp
jbe
das
xor
in
sub
das
stos
sub
(bad)
fimul
out
and
aam
push
ret
sbb
mov
sbb
and
cwde
xor
jmp
sti
jmp
pushf
mov
pop
bound
mov
pop
inc
in
rol
push
ret
mov
and
dec
mov
jb
adc
or
imul
pop
jl
rol
rcl
test
pop
jns
popa
and
or
xchg
add
xchg
mov
pop
cmp
(bad)
sub
loopne
stos
inc
dec
sbb
or
pop
jns
jecxz
push
mov
sub
jne
push
inc
or
cmp
ficomp
adc
fstp
add
aaa
inc
or
dec
pop
rol
add
nop
cmp
sar
sbb
adc
cmp
push
jg
add
xchg
fs
and
dec
or
fs
push
or
adc
lods
sbb
push
outs
(bad)
fmul
sbb
adc
push
(bad)
stc
jl
daa
add
inc
loope
mov
jmp
test
or
test
in
push
mov
or
lods
or
clc
ins
push
ins
daa
and
lods
sub
rcl
mov
xchg
ret
push
shl
push
or
sub
call
adc
test
rcl
hlt
xor
inc
and
xchg
mov
or
jno
ret
ins
imul
adc
inc
inc
lahf
inc
mov
or
shr
xchg
adc
pop
cmp
cs
aaa
and
or
inc
pop
xchg
push
nop
test
add
mov
inc
bound
adc
pop
test
rcr
and
cmps
ret
jmp
cmp
add
jbe
or
bound
bound
gs
add
loopne
stos
jne
jmp
or
cmp
cwde
in
sbb
loope
icebp
ror
data16
pop
fisttp
call
adc
push
ror
imul
push
sub
dec
push
and
leave
mov
mov
inc
nop
dec
pop
stos
ror
imul
(bad)
nop
stos
pusha
fcom
push
sbb
inc
cmps
or
retf
add
add
mov
mov
(bad)
lahf
and
jns
pop
xchg
shl
push
push
leave
ret
xchg
inc
push
jno
or
and
rcr
push
adc
and
add
gs
aam
mov
sbb
shl
xor
movs
xchg
test
push
adc
add
clc
bound
dec
cmps
add
add
sbb
nop
add
in
rcr
or
or
and
dec
mov
lods
cmps
test
jmp
and
sar
retf
dec
pop
inc
adc
jo
and
jecxz
add
adc
mov
lods
jae
imul
cdq
inc
popa
xor
dec
add
add
dec
pusha
dec
lock
sahf
test
cmp
push
aad
icebp
call
mov
xchg
jecxz
dec
xchg
pop
jne
movs
adc
xchg
sti
and
add
xor
and
(bad)
rcr
aam
or
dec
movs
add
xchg
sbb
repz
rol
lock
push
fdivr
in
cmp
shl
push
xchg
xchg
stc
shr
jmp
or
mov
push
dec
xor
adc
mul
mov
inc
mov
sti
lock
test
fwait
mov
shl
mov
fwait
adc
push
dec
xchg
mov
inc
sahf
adc
or
add
push
mov
push
ret
test
sub
push
push
rcl
sub
enter
inc
jb
jo
or
stc
fmul
test
es
add
or
adc
adc
arpl
and
in
and
mov
xchg
jo
and
dec
fistp
ins
fstp
mov
jle
sub
jns
pop
cmp
jne
sub
mov
or
or
mov
mov
jns
imul
push
movs
pop
adc
jno
enter
ret
stc
pop
dec
pop
adc
ror
adc
leave
sub
cmps
pop
mov
stos
xchg
in
cmp
shl
lods
daa
ins
nop
or
add
dec
or
xor
jecxz
inc
dec
sbb
add
push
jno
sbb
fcmove
and
push
(bad)
mov
jmp
(bad)
inc
xchg
mov
pop
pop
ret
mov
xchg
xchg
enter
inc
les
stos
or
add
into
test
mov
push
cmp
mov
pop
inc
push
adc
call
test
push
shl
add
add
stc
aam
and
inc
fdiv
xor
pop
xchg
mov
icebp
cmp
and
add
push
mov
sbb
push
inc
pop
data16
push
xchg
add
inc
dec
mov
fs
lea
arpl
add
pushf
aaa
cmp
cmp
enter
or
leave
xchg
rcr
dec
loope
in
int3
pop
dec
add
dec
mov
cmp
adc
or
or
mov
cmp
rol
dec
sbb
pop
jns
add
pop
cmp
popa
or
or
sub
mov
int
fld
lods
(bad)
int3
add
xor
and
rcl
mov
aam
lea
inc
add
in
mov
enter
lods
pop
push
sbb
test
mov
bound
add
fldcw
dec
or
stos
lods
movs
(bad)
push
push
lahf
push
js
add
mov
adc
inc
lods
add
std
push
mov
test
cmp
xor
push
push
dec
inc
mov
scas
lea
pop
mov
ds
and
add
push
sbb
cmps
aad
repnz
push
loopne
enter
add
xchg
js
aam
sub
adc
add
mov
jecxz
repz
xor
sbb
inc
pushf
pop
lea
mov
mov
ret
cmp
mov
jmp
fdiv
test
cmp
test
int3
sub
push
shl
mov
sub
fidiv
cdq
inc
sub
cmps
pop
sahf
or
outs
adc
and
movs
sub
or
cmp
pop
pop
fcom
mov
lods
xor
fnstsw
int
dec
or
inc
adc
push
and
arpl
loop
add
jb
and
pop
sbb
arpl
mov
or
inc
add
popa
cmp
pop
cwde
call
inc
or
mov
fmul
inc
jmp
or
xor
dec
rol
jl
xchg
or
addr16
sbb
mov
in
push
in
ins
push
shr
fadd
dec
push
xor
fdiv
fsub
pop
xchg
add
dec
mov
sub
jae
and
sahf
sbb
mov
sub
xor
inc
inc
add
push
sbb
sbb
and
sbb
dec
adc
mov
pop
cmp
mov
test
jl
sar
scas
call
jno
ins
push
or
add
dec
cmp
xchg
or
dec
mov
stc
mov
adc
adc
sar
test
cmp
cmps
inc
test
sub
push
push
call
jmp
inc
mov
adc
dec
sbb
std
mov
repnz
adc
push
ins
lods
int3
and
inc
adc
dec
lahf
add
test
xor
adc
shr
clc
jle
sbb
enter
das
retf
mov
stos
cs
(bad)
mov
ja
lea
daa
dec
mov
fdivr
push
loopne
sbb
add
mov
jb
or
dec
les
out
add
mov
xchg
sub
adc
adc
daa
stos
out
outs
sub
xchg
int3
add
dec
or
adc
sbb
cld
xor
pusha
inc
lods
out
xor
add
or
cwde
loope
or
repnz
mov
lock
pop
shl
and
push
rol
mov
lock
add
in
mov
pushf
add
mov
cwde
inc
gs
xchg
and
mov
push
inc
and
je
add
(bad)
lea
ret
mov
shl
add
push
rol
sub
and
push
pop
sbb
inc
stc
scas
lock
icebp
pushf
push
push
cmp
mov
or
pop
in
and
sbb
mov
(bad)
adc
lea
in
add
sub
add
mov
in
jne
add
jne
add
sbb
(bad)
jo
add
pop
(bad)
dec
mov
mov
mov
mov
and
jmp
clc
and
push
(bad)
imul
lahf
mov
xor
mov
mov
sub
mov
pop
les
jo
jae
xor
sar
push
nop
cdq
adc
mov
fld
fwait
jne
dec
dec
or
lea
sbb
icebp
or
js
cmp
cmps
jbe
out
push
nop
pop
call
or
dec
or
sub
push
ja
sbb
cmp
rol
push
xlat
mov
sub
clc
xor
pop
xchg
rcr
jo
shl
and
adc
mov
push
pop
arpl
(bad)
and
ror
fadd
inc
add
xchg
aaa
inc
out
jg
ja
add
or
cmp
xchg
popa
xor
rol
ror
sub
pop
ins
xchg
and
and
dec
add
pop
pushf
pop
loope
test
nop
add
pusha
loopne
ret
pushf
leave
pop
ret
xor
add
and
inc
pusha
push
and
sbb
int3
fs
dec
fs
test
and
push
xchg
push
xchg
pop
aam
lods
retf
pusha
lahf
push
das
inc
or
inc
add
push
pop
adc
mov
sbb
inc
(bad)
lods
sbb
adc
dec
mov
mov
xchg
les
or
add
sar
mov
xor
sbb
mov
xlat
push
stos
add
or
jl
pop
pop
jg
dec
call
loopne
inc
test
inc
xchg
retf
cmc
pop
pop
scas
ret
mov
rcr
mov
ror
sahf
lods
test
add
loopne
outs
ret
cmp
jg
sub
je
mov
ins
sbb
mov
scas
jns
sbb
add
pop
inc
stos
loope
repnz
pop
loopne
add
sbb
pop
xchg
fdiv
imul
popf
xor
pop
dec
shr
push
mov
leave
popa
ror
movs
imul
shr
jno
mov
push
btc
or
or
jge
push
push
arpl
bound
and
popf
adc
xchg
jbe
test
add
sbb
jno
cmp
add
mov
inc
ret
push
push
idiv
mov
adc
nop
sti
sub
pop
(bad)
cs
retf
jne
shr
popa
sub
add
add
add
add
mov
jg
adc
or
xor
and
call
add
dec
pop
xor
sub
mov
(bad)
shl
jle
ret
xchg
push
and
inc
sar
xchg
add
lahf
mov
dec
rcr
shr
outs
and
std
dec
mov
pop
int3
or
enter
mov
enter
dec
dec
repnz
add
add
xchg
scas
imul
push
je
jp
sbb
push
not
cwde
add
loopne
ds
call
and
sub
add
test
add
dec
adc
or
loop
push
leave
add
retf
xchg
xchg
test
int3
xchg
fwait
mov
int3
cmp
adc
mov
or
popa
popf
add
jg
push
ret
nop
out
add
xchg
sub
jns
call
jge
test
fcmovnbe
fstp
repz
fdiv
push
arpl
add
fcomp
xchg
dec
and
add
fs
xchg
mov
pop
add
pop
pop
inc
mov
in
add
add
sub
inc
inc
add
push
push
push
enter
add
or
leave
enter
add
dec
dec
add
or
sub
sub
ret
shl
mov
pop
fiadd
sbb
(bad)
jle
sbb
int3
sub
xor
push
imul
repz
sbb
jle
dec
loop
or
mov
cmp
ins
sub
call
and
adc
or
or
jo
mov
and
nop
pop
sub
popa
pop
push
je
cdq
aam
add
mov
and
xor
add
jmp
ret
jmp
and
addr16
cmp
aas
pop
jmp
pusha
cld
pop
mov
push
push
fwait
enter
pop
test
inc
push
and
and
mov
xchg
push
or
mov
pop
sbb
in
test
mov
inc
jge
cwde
rcl
dec
arpl
or
movs
adc
sbb
mov
scas
sbb
pop
adc
mov
xor
add
imul
daa
sbb
iret
xchg
xchg
sbb
push
push
mov
rcr
mov
cli
pop
inc
scas
cmp
mov
sti
and
pusha
push
xor
mov
les
or
fs
aaa
ss
sbb
dec
idiv
or
les
mov
inc
add
cmp
enter
or
adc
mov
adc
adc
and
and
js
and
in
xchg
push
dec
add
push
jg
inc
push
cmp
mov
fldcw
lea
sbb
mov
iret
push
out
mov
inc
mov
or
shl
dec
lods
mov
in
add
je
inc
fist
add
add
mov
dec
lds
les
sub
sub
mov
rol
and
add
sub
or
cmp
jl
int3
icebp
inc
add
adc
dec
inc
movs
and
pusha
pop
xor
inc
lods
mov
not
mov
or
or
rol
stos
in
ins
adc
es
cmp
pop
push
stc
sub
mov
test
or
inc
mov
inc
xor
call
pop
inc
sub
and
enter
pop
push
add
rol
push
shr
pusha
enter
jns
push
xor
add
cmps
sbb
adc
dec
pop
rol
add
pop
cld
(bad)
cld
inc
pop
sar
test
frstor
inc
add
jae
sti
adc
mov
jb
pop
or
adc
mov
adc
mov
or
movs
test
imul
jp
mov
inc
inc
aas
inc
pop
test
bound
ins
mov
aam
sub
imul
or
push
ror
inc
test
cmp
adc
outs
and
sbb
lock
mov
and
sbb
outs
aad
popf
inc
(bad)
push
ret
mov
and
mov
shl
js
jb
sbb
sbb
push
pop
and
fsub
cmps
arpl
imul
loop
sub
mov
test
or
or
clc
mov
cmp
pushf
aas
xor
add
dec
xchg
mov
std
test
dec
cmp
mov
adc
inc
lahf
aam
js
mov
sub
xlat
cs
and
dec
cmp
retf
je
lock
mov
(bad)
outs
idiv
neg
cmp
jb
mov
ret
jmp
bound
add
add
dec
inc
ret
hlt
(bad)
mov
xor
mov
xor
dec
test
out
or
lahf
(bad)
mov
inc
std
or
xor
mov
cdq
dec
fcom
add
or
mov
stc
and
imul
fmul
and
sub
aaa
xchg
inc
loopne
rcr
adc
das
adc
jns
cmp
or
xor
jge
lods
adc
outs
lds
outs
pusha
mov
cmp
mov
out
loope
not
or
xor
ss
mov
inc
and
test
lods
iret
mov
les
sbb
adc
sub
popa
xlat
inc
mov
jmp
or
xchg
cdq
arpl
lea
or
data16
aam
xor
xor
push
push
mov
aad
dec
int3
push
push
adc
mov
dec
popf
mov
dec
xor
mov
fiadd
xchg
leave
inc
repnz
inc
mov
mov
jge
iret
mov
jae
inc
mov
inc
dec
ret
sbb
xchg
mov
sbb
jns
fisub
xor
cmp
daa
out
push
sbb
inc
mov
div
mov
and
mov
shr
xor
mov
add
mov
add
pop
call
ret
dec
jae
pop
adc
pushf
adc
repnz
and
gs
adc
adc
adc
dec
xchg
mov
fld
pop
pop
and
mov
icebp
mov
mov
pop
ret
jg
pop
pop
stos
mov
add
pop
inc
xchg
or
add
xchg
in
push
push
xchg
call
xor
fdiv
dec
xor
enter
stos
in
or
sbb
xchg
data16
sbb
inc
and
leave
xor
adc
sbb
push
sbb
mov
test
ins
addr16
sbb
mov
je
pushf
sub
jge
cmp
mov
push
xchg
push
push
cmp
push
or
and
jb
sub
push
arpl
sbb
mov
and
add
push
add
test
loop
pop
push
fwait
arpl
or
or
mov
lods
or
pusha
movs
out
mov
pushf
cwde
hlt
xchg
pop
enter
mov
xchg
(bad)
lock
push
lods
test
sbb
dec
add
sbb
inc
sub
and
pop
stos
stos
mov
dec
jle
arpl
jno
mov
jb
cmp
add
inc
rcr
add
dec
mov
dec
sbb
add
sahf
adc
scas
sar
jmp
add
in
jbe
pop
stos
dec
sbb
test
mov
enter
mov
ins
popa
pop
movs
pop
dec
enter
cmps
lods
mov
and
cwde
xchg
mov
add
js
sbb
aas
jge
mov
ret
push
int3
push
in
sbb
sub
je
pop
xor
fstp
push
cmps
cmp
imul
int
fidiv
sbb
in
mov
push
jae
jns
rol
test
sbb
and
repnz
mov
mov
sub
jo
mov
cmp
popf
stc
adc
or
lock
push
push
rol
add
in
mov
stc
imul
lea
push
cmps
mov
repnz
or
xchg
out
cld
mov
sub
adc
mov
(bad)
push
test
mov
test
xchg
in
popa
inc
sub
mov
test
push
dec
push
(bad)
clc
dec
ins
scas
pop
push
cmps
or
repz
adc
clc
and
into
je
retf
inc
sar
inc
adc
push
adc
fdivr
ret
sbb
cmp
ror
jmp
dec
or
lds
add
xor
lods
jne
or
mov
retf
xchg
mov
enter
call
int3
rol
sub
fldenv
into
adc
lahf
jo
mov
es
lods
inc
test
pop
(bad)
imul
aam
xchg
mov
pop
and
sti
inc
inc
in
pop
ror
mov
clc
xor
and
inc
push
ja
(bad)
aam
jo
sahf
cdq
pop
cli
les
add
lahf
adc
clc
das
add
add
add
scas
inc
sbb
dec
or
mov
and
lds
add
jo
pop
repnz
ror
enter
add
inc
sub
mov
(bad)
stc
popa
arpl
dec
aas
sub
daa
mov
cdq
data16
(bad)
out
loopne
cdq
and
push
or
dec
mov
xchg
xor
mov
adc
or
xchg
sbb
dec
leave
add
and
icebp
lahf
imul
and
push
in
push
mov
mov
lea
add
call
lock
adc
sbb
push
test
inc
fdiv
push
adc
jmp
cdq
xchg
lea
test
inc
and
dec
add
jmp
xor
cmp
push
les
mov
cwde
test
adc
mov
inc
and
ja
adc
je
or
(bad)
jbe
int3
mov
dec
in
dec
pop
jnp
pop
cmp
xchg
pop
int
adc
adc
(bad)
dec
mov
adc
test
jecxz
and
rcl
push
mov
lea
adc
stos
in
adc
iret
xor
cld
adc
or
mov
into
jle
adc
pusha
mov
rol
push
jb
inc
mov
not
pop
and
adc
je
fs
or
mov
fsub
sbb
push
movs
cdq
cmp
ret
cld
cmps
jo
test
sbb
shl
sar
cli
pop
mov
int
xor
adc
imul
dec
pop
daa
inc
dec
add
fs
fdiv
aam
rcr
push
stc
pop
dec
cmps
cmp
enter
mov
push
mov
cmp
jg
pop
and
jns
mov
mov
sub
pop
push
aaa
adc
sbb
(bad)
or
dec
lsl
je
leave
cmps
scas
scas
movs
cmp
into
add
mov
ret
sub
sar
and
xor
dec
pop
and
or
jg
push
pop
and
push
push
jmp
add
and
nop
add
lods
dec
push
nop
js
pusha
xor
mov
dec
movs
sbb
es
add
mov
mov
mov
sub
push
and
xor
jns
ja
cmp
sub
movs
lods
add
sbb
or
push
cwde
clc
fld
test
xor
mov
js
imul
jecxz
add
and
push
mov
mov
mov
mov
sbb
xor
dec
adc
mov
test
inc
dec
retf
push
add
jl
or
mov
repnz
adc
push
in
(bad)
xchg
push
adc
aam
cmps
xchg
add
adc
fdiv
lea
lock
jno
dec
mov
inc
mov
mov
inc
cmp
mov
add
mov
in
push
cmp
add
test
sbb
add
lods
jmp
dec
es
fsubr
mov
jns
inc
mov
pop
fild
sahf
fs
mov
lock
push
out
adc
imul
jo
neg
or
lods
inc
(bad)
fdivr
imul
and
les
push
adc
and
mov
rcl
jno
xor
cmp
loopne
xor
sub
rol
das
and
and
dec
arpl
cmp
jns
mov
and
inc
push
push
sbb
jb
ret
mov
inc
xor
and
fild
aam
js
cmp
rol
xchg
cmp
xchg
loopne
je
inc
add
(bad)
add
popa
or
mov
xor
punpckhbw
and
push
mov
mov
cmp
mov
pop
add
jp
dec
shl
push
inc
shl
daa
adc
ror
adc
sub
adc
jmp
mov
mov
sbb
ins
lods
adc
cmp
mov
pushf
mov
inc
and
push
inc
dec
xor
and
jecxz
push
push
repnz
enter
push
in
adc
jae
cmp
mov
jb
sbb
paddb
pop
push
add
mov
mov
pop
nop
pop
add
dec
je
je
nop
mov
sbb
or
arpl
jns
or
pusha
jne
xchg
and
inc
push
push
add
inc
mov
jmp
sbb
inc
enter
sbb
cmp
sbb
adc
sub
push
pusha
jnp
sub
lods
cmp
ins
push
(bad)
jge
mov
jno
mov
mov
pop
shl
or
jns
push
jns
mov
push
pop
fstp
ins
loopne
cmp
cmp
adc
add
dec
shl
or
jne
data16
int3
popa
or
cmps
loop
out
xchg
stos
or
test
push
mov
popa
(bad)
or
fs
mov
scas
pop
sbb
cdq
inc
dec
out
add
add
or
adc
pop
inc
xor
push
mov
sbb
arpl
and
push
inc
push
stos
add
sbb
nop
inc
add
xor
push
sbb
or
cmp
push
inc
add
sub
dec
jbe
adc
adc
loop
sbb
inc
adc
or
jbe
mov
jns
ja
ja
inc
pop
adc
ja
pop
add
ja
cmp
in
mov
jns
add
inc
pop
adc
sbb
xor
add
cmp
mov
enter
push
and
js
adc
mov
js
jns
repnz
sub
jns
in
and
cmp
adc
mov
les
mov
clc
jns
nop
pop
add
cmp
jp
mov
jns
jp
js
inc
pop
adc
jp
pop
add
mov
cmp
xchg
enter
jnp
xor
nop
or
or
inc
inc
dec
jnp
and
imul
ss
cmp
or
push
call
shr
push
adc
cmps
add
jbe
fldcw
or
inc
aaa
(bad)
(bad)
xor
pop
movs
ret
and
dec
mov
lahf
lahf
pop
and
xor
inc
dec
cmp
mov
lds
aam
ins
adc
inc
sbb
popa
or
mov
(bad)
push
dec
adc
pop
fld
and
lods
or
lods
mov
loop
sbb
adc
call
jnp
adc
les
xor
jns
dec
jb
arpl
push
push
or
mov
arpl
popa
not
xlat
ret
xchg
inc
movs
pop
lock
fs
inc
cld
jp
and
xchg
lock
adc
inc
xchg
dec
and
cmp
and
xchg
jl
jl
mov
cmp
pop
jl
sub
test
shl
aas
pop
dec
cs
and
mov
and
leave
mov
push
fs
jge
and
adc
jge
jge
xchg
or
call
mov
pop
add
inc
push
adc
pop
sub
daa
xchg
jle
jle
leave
mov
push
jle
jle
in
xor
sbb
adc
mov
push
push
pop
aam
dec
xchg
inc
xchg
mov
adc
jle
or
or
add
mov
loope
lahf
add
dec
sub
sbb
xchg
lods
cwde
in
jb
adc
push
push
mov
add
mov
mov
sub
sbb
xor
mov
mov
pop
push
inc
call
nop
inc
out
push
jmp
mov
inc
push
mov
pop
leave
adc
adc
bound
loop
cmp
inc
mov
mov
jb
push
xchg
inc
nop
loopne
jb
sbb
push
nop
call
mov
jge
fild
jo
pusha
mov
jg
mov
in
jg
je
add
fdivrp
push
ja
data16
cmp
add
jmp
cmp
add
cmp
mov
push
adc
sbb
je
pop
push
sbb
push
inc
hlt
add
push
adc
fld
add
push
leave
movs
push
data16
(bad)
pop
dec
pop
popa
test
mov
ja
add
pop
arpl
xchg
call
scas
or
mov
gs
xor
sub
or
punpcklbw
(bad)
cwde
and
rcr
or
loopne
dec
add
pusha
inc
mov
and
pop
sub
xor
rcl
xor
add
mov
or
and
inc
add
jle
mov
jns
cmp
push
pop
xor
shl
test
sar
lods
jmp
mov
pop
push
and
outs
adc
cmc
jg
push
xchg
inc
inc
xchg
and
pop
xchg
in
xchg
or
mov
pusha
and
or
cs
and
or
and
pop
push
dec
dec
inc
xor
loopne
xchg
cmp
sahf
or
sbb
getsec
test
in
jo
ss
adc
jmp
sub
cmp
in
scas
pop
inc
inc
xchg
push
push
add
or
pop
mov
jp
(bad)
(bad)
cmps
je
or
and
dec
repz
or
dec
and
call
ret
pop
sti
sbb
imul
mov
(bad)
sar
mov
pop
cld
lods
pushf
xchg
add
inc
scas
add
inc
scas
nop
add
sbb
nop
dec
add
push
enter
add
enter
test
add
lea
test
xchg
push
xchg
dec
adc
fldenv
(bad)
dec
mov
cmp
cmp
scas
or
in
repz
or
xor
push
cs
add
inc
mov
test
cmc
aaa
add
ret
nop
adc
add
sbb
movs
fsub
les
test
cmp
lahf
sbb
cdq
enter
repnz
call
scas
pop
lods
adc
call
mov
sbb
add
sub
inc
ror
xor
dec
add
push
shl
fwait
push
(bad)
pop
add
js
add
jnp
push
adc
dec
cmps
mov
ss
xlat
retf
xchg
sbb
nop
aad
or
rol
pop
mov
sbb
and
or
add
mov
push
cwde
or
xchg
cmp
mov
push
pop
dec
cmp
xchg
xchg
out
sbb
(bad)
fdivr
movs
mov
shl
mov
mov
pop
popf
lods
xchg
sbb
add
ins
popf
adc
pop
xchg
add
imul
jae
movs
repz
popf
cli
push
or
mov
sub
jne
ret
and
and
test
mov
add
mov
out
sbb
or
xor
sub
popa
jno
ret
lea
scas
jmp
sbb
push
pop
mov
sub
adc
push
add
shr
bound
dec
dec
mov
jnp
add
push
dec
xchg
fstp
leave
(bad)
xlat
or
and
stos
outs
movs
pushf
dec
movs
mov
(bad)
jns
outs
sar
pop
cmp
and
fs
cmps
dec
lea
sbb
je
sbb
mov
inc
dec
adc
add
or
mov
and
push
test
jno
repz
push
inc
mov
cmova
js
inc
enter
out
add
push
sbb
add
add
inc
push
sub
and
(bad)
in
add
add
gs
add
outs
cmps
pop
sub
aam
popf
ret
add
or
mov
movs
ficom
outs
add
adc
ficom
popa
stos
ffree
mov
iret
push
enter
js
adc
push
movs
shl
jae
sbb
rol
outs
leave
jne
sbb
sub
inc
xlat
clc
sbb
dec
movsx
nop
das
inc
das
jns
add
push
inc
bound
push
and
xor
sub
cdq
jmp
fwait
or
shl
jnp
mov
ds
imul
inc
add
mov
inc
inc
adc
pop
add
push
push
pop
test
test
pusha
ror
or
and
jmp
push
ja
add
adc
pop
pop
pushf
rcl
dec
push
xor
pop
or
inc
mov
mov
mov
cmp
je
and
cmp
jne
mov
dec
(bad)
fwait
adc
test
cs
data16
or
push
mov
sbb
add
fwait
shl
adc
adc
mov
jae
and
dec
aad
push
cmp
add
int3
mov
adc
mov
(bad)
loopne
dec
sbb
and
ret
xchg
xchg
enter
loop
mov
aas
mov
add
(bad)
xor
or
mov
aad
(bad)
pop
in
lidtd
jo
aas
enter
dec
pop
cmps
pushf
xor
dec
dec
sbb
sub
clc
add
xor
minps
(bad)
fs
scas
xor
xor
in
(bad)
sbb
add
js
inc
sbb
mov
mov
mov
pop
adc
mov
push
xchg
inc
mov
cdq
ror
sub
adc
jo
jp
pop
push
xchg
xor
mov
or
hlt
mov
and
push
or
mov
movs
test
push
inc
push
add
pop
xor
movs
push
cmps
and
in
mov
sub
aaa
sahf
in
xchg
and
cmp
and
lahf
int3
inc
nop
movs
mov
jmp
add
add
xchg
inc
and
sub
cmp
or
xor
sub
mov
xor
and
lea
push
mov
inc
outs
xor
xor
(bad)
mov
and
sub
xchg
push
cmp
ins
mov
test
(bad)
jmp
add
add
mov
js
lods
adc
add
dec
jns
inc
nop
loopne
xchg
xchg
or
xchg
pop
inc
mov
and
push
adc
ins
icebp
xchg
mov
sbb
jb
inc
mov
xor
in
cmp
and
mov
and
dec
push
jns
jns
push
add
fcom
movs
int3
xor
dec
ficomp
xor
icebp
cmp
inc
les
push
imul
lods
popf
mov
cmovb
scas
add
mov
inc
cs
pop
hlt
mov
xchg
(bad)
add
out
imul
and
inc
movs
es
in
mov
inc
mov
(bad)
fwait
std
pushf
pushf
mov
mov
leave
mov
lds
dec
ror
xor
loopne
cmps
rol
mov
fs
loopne
or
idiv
inc
or
mov
push
adc
or
xor
dec
cmp
dec
aaa
xor
inc
mov
mov
jne
ret
lahf
cmp
add
pop
and
adc
test
dec
mov
mov
cmp
je
test
add
fs
sub
xchg
and
sahf
inc
rcl
xchg
and
or
int3
adc
push
test
cdq
rcl
mov
test
lods
dec
sub
add
outs
fdiv
loop
or
sub
inc
add
add
xchg
dec
mov
inc
mov
mov
das
jbe
pusha
push
add
lahf
inc
(bad)
in
dec
lock
cmps
leave
or
inc
adc
inc
xchg
mov
ret
add
sub
stos
jle
mov
and
jle
(bad)
push
xchg
lahf
and
cmp
or
pop
lock
in
and
xlat
adc
push
add
not
add
dec
loope
scas
jmp
xor
hlt
jns
adc
inc
outs
xchg
aaa
sub
or
sbb
pop
ss
add
push
add
push
mov
jb
dec
je
xor
and
addr16
popa
fsub
pop
cmp
js
inc
ja
jp
test
push
inc
aas
data16
test
xchg
cmp
jb
pusha
fs
push
mov
mov
pushf
xor
shr
inc
ins
clc
aam
dec
call
jo
cmp
xchg
inc
adc
pop
rcr
nop
sbb
cmp
jg
adc
cmp
cmp
mov
jnp
ret
repnz
lea
daa
sbb
dec
enter
es
jnp
xchg
je
fstp
xor
ror
cwde
or
xchg
jge
inc
repnz
add
push
mov
push
push
fcomp
cmp
sbb
sub
loopne
push
pop
not
or
inc
adc
stos
in
out
sub
adc
pusha
daa
sti
push
cmps
loope
mov
push
pop
les
sub
xchg
outs
sub
cmp
popf
add
nop
in
sub
add
mov
lds
(bad)
mov
shr
aaa
lea
(bad)
out
inc
xor
push
sbb
push
lea
add
or
xor
jge
push
test
shl
sbb
push
test
xor
and
pop
or
retf
shr
inc
push
mov
movs
add
cmp
and
cmp
dec
loopne
cmp
shl
cld
and
mov
ins
xchg
pop
xchg
and
popa
adc
inc
aam
inc
dec
push
enter
ins
push
pop
lds
sbb
(bad)
cmp
aas
pop
movs
outs
js
inc
mov
movs
repz
nop
mov
cmp
mov
push
addr16
(bad)
adc
fild
or
add
add
push
lea
jge
repz
scas
test
or
cwde
push
bound
test
sub
push
jno
dec
sub
addr16
push
addr16
addr16
push
push
mov
add
and
ins
test
mov
inc
outs
xor
inc
movs
cmp
bound
push
ret
pop
repnz
pushf
jp
pop
mov
sbb
cdq
icebp
iret
test
in
xchg
cmp
nop
mov
push
hlt
int3
data16
fild
mov
fist
push
cmp
xchg
sbb
fs
push
bound
(bad)
xor
(bad)
sub
add
mov
in
push
add
iret
sbb
div
xchg
or
xor
cs
sub
test
daa
nop
test
ins
push
add
and
add
xor
xor
sbb
push
or
mov
inc
imul
push
loopne
mov
push
lahf
mov
push
fdiv
dec
and
cmp
xchg
sbb
mov
add
jmp
aas
inc
or
xor
sbb
cmps
sbb
xor
mov
movs
rol
stc
mov
movs
pop
mov
arpl
adc
push
push
and
pop
loopne
adc
shl
inc
pop
ds
jge
cmp
xchg
add
add
jecxz
xchg
in
sub
mov
div
cli
rcr
mov
loopne
push
mov
fmul
xchg
shr
mov
or
rol
mov
test
push
and
jl
cdq
nop
add
jno
rol
mov
adc
les
inc
xor
out
ud2
(bad)
mov
add
lods
fistp
repz
and
repnz
mov
push
cmp
fs
sbb
(bad)
icebp
stc
les
mov
loopne
loopne
xor
and
lods
sbb
stos
mov
test
add
test
or
pop
sbb
push
add
inc
mov
imul
sbb
js
and
and
jns
dec
adc
imul
pop
sub
or
lds
add
push
shl
or
(bad)
cmp
pop
pop
jmp
fcom
das
add
sbb
and
add
cs
mov
jo
dec
jo
fsub
sbb
js
push
xchg
(bad)
or
push
stos
sbb
adc
imul
sub
push
jb
cmp
inc
pop
enter
outs
sbb
inc
pop
mov
pop
jb
fdiv
inc
adc
inc
dec
mov
mov
pushf
or
stc
dec
add
pop
push
out
add
push
push
mov
push
inc
sub
(bad)
mov
repz
mov
mov
mov
inc
stos
sbb
xchg
mov
inc
mov
and
gs
int3
shl
mov
add
mov
push
test
test
stc
cmps
clc
add
or
adc
mov
das
aaa
pop
sub
or
push
add
lea
adc
jmp
mov
ret
pop
daa
leave
aaa
jle
outs
and
add
inc
adc
jns
xor
push
add
sub
loope
test
sub
add
jno
adc
and
js
cmp
retf
leave
add
cwde
aam
nop
push
xchg
xchg
cwde
test
mov
cld
push
adc
inc
aaa
cmp
mov
sub
dec
adc
test
or
or
popf
je
leave
nop
mov
sub
mov
push
mov
sub
pop
aam
xchg
cs
push
mov
mov
call
loop
lahf
shr
loope
and
push
cdq
sbb
popa
in
or
and
sbb
ror
cmp
push
and
or
push
adc
enter
or
mov
lods
jg
add
in
lea
push
cmps
mov
sub
adc
add
push
xchg
xchg
arpl
push
cwde
xchg
cmp
mov
pop
outs
mov
add
push
adc
sbb
lods
dec
add
mov
cdq
pusha
dec
sub
jp
jp
repz
adc
cmp
sub
test
mov
mov
rcl
cmp
ret
mov
mov
mov
daa
ror
push
cmp
cmps
xor
mov
icebp
and
push
cmps
repz
(bad)
les
push
sbb
sub
or
push
cmps
xor
rcr
mov
mov
cdq
test
sbb
cmps
adc
jmp
sub
pop
in
int3
dec
mov
xor
add
and
(bad)
leave
or
adc
popa
cdq
iret
int3
cmc
bound
dec
or
test
sub
push
loopne
ret
or
and
inc
ins
rol
mov
in
or
add
mov
adc
sbb
fldenv
push
mov
iret
xchg
xor
mov
add
add
xchg
cmp
ins
loop
enter
xor
cmp
shl
cmp
cmp
and
stc
pop
icebp
aam
lds
iret
jmp
dec
pop
sbb
sub
ss
shr
xchg
dec
sahf
and
sbb
dec
dec
test
dec
adc
pop
adc
and
enter
(bad)
and
inc
sbb
push
lea
cwde
arpl
rcl
je
les
xor
sub
push
push
push
add
xor
push
cmps
test
mov
leave
lds
mov
imul
sub
les
jge
icebp
add
sub
push
sbb
add
and
sbb
mov
adc
adc
push
jne
fisubr
xchg
enter
fs
add
movs
push
xchg
rcr
push
mov
mov
and
add
or
adc
xor
in
mov
or
imul
rol
aam
and
inc
mulps
push
aas
push
mov
push
movs
jno
ret
sbb
dec
or
push
inc
loop
dec
bound
lds
dec
adc
test
xchg
cmc
xchg
test
icebp
repnz
fld
adc
push
pop
pop
test
imul
stos
and
out
mov
sbb
ins
sbb
dec
(bad)
rcr
outs
ja
adc
shl
add
adc
leave
es
enter
and
push
inc
test
in
cs
pop
or
loope
arpl
dec
or
inc
dec
dec
scas
add
jg
and
or
adc
out
imul
push
dec
mov
pop
push
popa
test
xchg
or
adc
adc
or
mov
aam
sub
les
xlat
mov
pop
pop
adc
mov
iret
jno
cmp
push
ficom
dec
or
or
pop
mov
cmp
cmp
jbe
mov
xchg
adc
inc
mov
adc
call
xchg
out
dec
cmp
jo
jg
cmp
inc
popa
jnp
es
fiadd
jnp
shl
push
cmp
and
add
test
popa
fs
and
cmps
test
or
xchg
out
adc
add
rol
add
xchg
ret
push
imul
and
cmp
adc
add
dec
cmp
in
bound
push
test
je
push
fmulp
and
ret
enter
ins
add
in
fdiv
mov
add
jmp
fist
cmps
mov
sub
mov
popa
push
mov
mov
pop
movs
jae
dec
mov
bound
clc
xor
mov
and
cmp
inc
sub
dec
cwde
pop
inc
cdq
add
and
(bad)
jo
loopne
lods
aad
xor
scas
test
adc
scas
mov
xlat
es
stos
mov
mov
sub
popa
mov
ret
imul
add
stos
pop
adc
mov
pop
or
jecxz
dec
adc
pop
mov
in
mov
test
ror
inc
jecxz
mul
pop
inc
in
pop
push
dec
popa
xor
lds
call
nop
mov
call
aad
mov
mov
ja
js
jae
div
dec
sub
adc
mov
repz
add
ins
sbb
dec
js
jo
or
mov
mov
out
add
sbb
sub
fistp
fstp
push
test
test
test
test
in
loopne
sub
inc
cmc
cld
push
add
or
shr
xor
pop
jmp
retf
mov
inc
jb
push
xor
xor
dec
add
add
dec
dec
add
test
out
ds
sub
dec
and
mov
pop
inc
xor
sbb
adc
popa
bound
jno
ins
js
xor
adc
and
outs
test
fs
push
loope
(bad)
rcr
mov
sub
mov
inc
mov
or
inc
sbb
dec
test
sub
rcl
push
call
mov
fld
inc
nop
inc
loopne
sbb
add
sub
inc
push
mov
or
ret
push
bound
sbb
ret
lods
xor
inc
xchg
cmp
jbe
add
mov
xchg
dec
adc
cmp
and
cmp
cdq
push
add
enter
in
dec
sbb
pushf
sbb
sbb
push
in
push
and
add
mov
push
and
daa
pop
jb
add
pop
pop
and
pop
mov
push
call
xor
pop
je
mov
inc
nop
adc
pop
sbb
lahf
lock
mov
cmp
push
or
add
inc
retf
es
and
cmp
cmp
cs
dec
repz
cmp
cmp
test
sbb
inc
cmp
test
fldcw
lock
icebp
sbb
push
lds
imul
jnp
and
cmp
xchg
mov
add
cwde
test
add
and
pop
jno
aam
pop
(bad)
mov
mov
mov
add
sbb
fdivr
ret
pusha
std
retf
push
cmp
push
and
add
shl
pop
leave
cmp
push
dec
fcom
xchg
mov
push
pop
inc
push
nop
and
data16
inc
cmp
movs
jns
cdq
inc
sbb
iret
nop
fcomp
cmp
jge
push
sbb
push
push
fild
jmp
inc
or
repz
xor
add
inc
and
dec
scas
sbb
lods
sbb
mov
scas
add
and
cbw
xor
dec
movs
nop
enter
pusha
shl
and
adc
xor
pop
mov
mov
and
fcom
nop
mov
gs
inc
rcl
jg
jne
push
cmp
fstp
jne
push
mov
mov
push
jnp
mov
adc
mov
mov
jmp
xchg
jge
lahf
ds
xor
popa
mov
pop
ror
mov
test
dec
xor
mov
shl
adc
sar
sub
out
aam
sub
call
inc
xchg
or
iret
push
movs
pushf
repnz
mov
jae
xchg
add
ror
mov
fisttp
enter
and
loopne
adc
pop
rol
inc
test
cmp
test
fbstp
(bad)
test
sub
jo
jno
xchg
mov
test
loop
cmps
movs
jne
pop
retf
dec
jns
pop
inc
nop
cmp
js
mov
js
dec
sub
xlat
jns
mov
iret
test
fadd
fcomp
sbb
daa
pop
pusha
gs
adc
loope
je
mov
mov
ret
jno
pushf
movs
test
ret
xchg
adc
test
ror
mov
lea
leave
jmp
js
rcr
mov
push
sub
or
adc
jne
dec
clc
add
push
or
out
or
xchg
imul
or
mov
(bad)
clc
popf
and
adc
and
jl
add
in
xchg
fdivr
loopne
in
push
sbb
dec
js
and
je
add
xor
lods
adc
inc
sub
and
ret
and
sar
mov
xchg
icebp
hlt
jge
inc
cs
mov
cmps
mov
dec
jb
and
imul
aam
xor
pop
add
and
jmp
xchg
mov
add
movs
ret
push
dec
mov
or
mov
and
and
int3
(bad)
and
mov
cmp
addr16
jmp
sbb
js
xchg
xor
pusha
add
dec
daa
cs
jge
movs
sbb
stos
jno
mov
scas
shl
retf
pusha
lods
scas
mov
call
mov
dec
daa
dec
(bad)
js
dec
cmps
sbb
mov
cli
xor
jge
sti
sbb
lods
sbb
outs
xchg
cdq
in
jp
imul
retf
jne
add
cmp
call
js
xchg
sbb
outs
push
adc
imul
sub
sbb
arpl
add
add
xchg
jne
lods
cli
jecxz
lds
sub
sub
enter
ret
cmp
jae
mov
dec
push
aam
mov
loopne
je
jbe
xor
jle
lea
pop
mov
(bad)
mov
cli
clc
xchg
xor
push
push
xor
pop
inc
xor
dec
(bad)
(bad)
or
mov
popa
fsub
mov
test
sbb
push
shl
xchg
stos
loope
and
and
mov
pushf
xchg
je
pop
xchg
mov
loopne
addr16
mov
adc
aam
add
mov
test
mov
lods
add
cmp
call
dec
rcl
imul
add
xchg
adc
xchg
add
and
push
outs
xor
sbb
adc
add
popf
mov
icebp
test
inc
add
dec
xchg
mov
les
add
sbb
pop
pop
push
lods
cmp
jne
shr
int
leave
sub
add
xchg
scas
cmp
dec
mov
push
inc
jae
xor
xor
inc
mov
xor
les
jmp
dec
(bad)
pop
jge
adc
aam
fs
sub
xor
inc
mov
mov
imul
sub
and
cwde
sti
or
ror
dec
mov
sub
jno
lods
push
rol
inc
xchg
or
dec
push
push
pop
enter
mov
push
dec
mov
pusha
xlat
(bad)
ror
lds
push
stos
or
repnz
dec
jmp
cwde
cmp
push
call
dec
xlat
ficom
xlat
pop
rol
jmp
mov
aas
and
ret
push
inc
test
inc
inc
fcom
push
cmp
ret
or
push
cmp
in
pop
inc
pop
and
test
jne
xor
mov
inc
ret
mov
cmps
inc
aad
mov
lods
ret
or
dec
enter
cmp
sbb
cmps
jl
test
or
(bad)
cmp
xor
add
rcr
scas
jae
int3
add
das
pop
int3
pop
call
xchg
pop
jg
add
shl
adc
jb
movs
call
sbb
push
cmp
xor
cmc
mov
xor
cmc
mov
lock
jo
sbb
daa
sbb
ins
ins
nop
xchg
not
ins
xchg
xchg
pushf
lds
daa
fadd
push
sbb
(bad)
or
aaa
or
sub
imul
xor
mov
mov
movs
xor
fcom
sbb
sub
add
xchg
inc
sbb
push
xchg
dec
and
lods
dec
add
stos
xchg
pusha
push
fimul
(bad)
or
dec
xchg
rcr
push
inc
inc
mov
xchg
and
hlt
push
push
or
add
pop
mov
(bad)
loop
imul
fsubr
or
adc
dec
jmp
les
shl
mov
stos
or
mov
sbb
mov
inc
add
aas
iret
inc
mov
xor
inc
test
push
mov
adc
in
fnstenv
sub
sbb
stos
or
(bad)
mov
sbb
es
jl
and
adc
loopne
fst
loopne
xor
adc
popf
or
mov
mov
js
sbb
xchg
sti
mov
sbb
inc
sbb
xor
stc
and
xchg
enter
pshufw
sub
movs
add
prefetch
push
inc
or
pop
xchg
lahf
xchg
test
ins
movs
adc
push
jno
pusha
inc
push
and
dec
xor
movs
or
jno
xchg
jno
in
inc
mov
add
pop
inc
and
popf
jb
push
les
out
push
lahf
add
fld
add
div
pop
dec
dec
popf
repnz
fs
inc
inc
mov
dec
inc
mov
pop
mov
or
call
gs
jge
jl
lods
adc
or
adc
out
fidivr
test
dec
scas
lock
lea
rcl
mov
cdq
in
dec
aam
popa
popa
and
ret
in
and
lea
xchg
pop
nop
mov
mov
sbb
stos
fmul
popa
sbb
or
aam
test
test
jns
lea
in
jo
fild
mov
addr16
xor
mov
or
add
(bad)
shl
and
mov
add
bound
xchg
add
les
and
rcr
adc
stos
push
and
adc
jl
adc
enter
mov
stos
sub
fwait
je
je
nop
xchg
or
sbb
fs
inc
dec
dec
int3
push
sbb
dec
push
cmp
xchg
xchg
xchg
pusha
pusha
js
dec
inc
push
fs
pop
pop
test
mov
push
mov
add
xor
outs
enter
push
xor
test
pop
jns
xchg
pop
mov
sbb
pop
jmp
add
sbb
rcr
jne
add
cdq
add
js
pusha
and
repnz
pushf
sbb
xor
pop
pop
push
or
cmp
pop
jno
jno
repnz
cld
std
lea
push
push
inc
(bad)
ret
movs
cmp
int3
push
push
inc
pop
test
lods
sbb
test
ins
dec
mov
cmp
ins
add
popf
push
push
leave
aaa
push
es
cmp
mov
imul
and
sbb
pop
or
in
scas
xchg
mov
rcl
cmp
jns
aaa
or
cld
(bad)
and
sub
mov
iret
ror
and
leave
inc
sbb
xchg
popf
pop
mov
pop
adc
dec
mov
gs
lea
dec
or
sub
mov
lea
in
or
mov
cli
add
inc
not
rol
dec
sub
mov
xor
inc
xchg
mov
js
or
call
push
sub
(bad)
retf
js
nop
sub
js
dec
inc
push
cmp
jecxz
add
cmp
sub
pop
stc
icebp
dec
pop
fist
ja
mov
mov
and
pop
movs
mov
test
push
pop
mov
orps
lahf
pop
push
movs
push
push
push
sub
imul
and
in
test
pop
rol
popa
dec
movs
push
push
xchg
nop
xchg
dec
push
or
leave
inc
repnz
dec
push
xor
mov
inc
inc
es
imul
xor
in
lock
push
xor
mov
xchg
(bad)
outs
dec
in
adc
jo
add
jns
sbb
jno
or
cdq
fs
jae
jo
mov
je
xor
dec
push
xchg
inc
push
pushf
mov
ss
pop
ja
jae
xchg
js
jl
ins
push
imul
jp
sbb
sbb
push
cdq
or
test
cld
mov
mov
jg
jno
inc
cmps
pusha
sub
or
(bad)
cmp
xchg
add
fiadd
sti
jbe
jl
mov
add
mov
fs
xchg
add
push
cdq
mov
push
mov
push
mov
mov
add
lea
push
cdq
mov
jno
mov
xchg
push
cmp
fist
mov
mov
push
mov
enter
xchg
and
or
(bad)
xchg
fmul
rcl
cdq
xchg
or
xchg
mov
cmp
loopne
js
cdq
movs
loope
jmp
ficomp
xor
mov
test
cld
inc
sbb
test
xor
adc
pop
popa
sbb
push
repz
mov
shl
inc
mov
dec
and
outs
mov
jno
adc
movs
cld
cmp
push
add
cmps
sbb
pushf
nop
mov
cmps
xchg
mov
add
adc
and
stos
sbb
dec
in
mov
out
cmp
iret
xchg
clc
xchg
lea
inc
jg
in
(bad)
push
jmp
and
cmps
les
cmp
and
add
stos
loope
cmp
inc
push
add
clc
test
hlt
and
test
loopne
lods
syscall
jo
or
or
inc
movs
lods
pop
or
and
dec
add
xchg
or
mov
lods
aaa
fsubr
nop
add
stos
in
scas
cdq
inc
imul
mov
in
push
sub
or
div
stc
adc
add
add
in
sub
sub
xchg
jle
aad
mov
scas
adc
and
add
and
add
adc
and
dec
nop
push
add
inc
test
iret
pop
pop
pop
add
mov
lds
jo
mov
adc
pop
mov
in
and
fwait
push
imul
mov
mov
lds
pushf
add
xchg
mov
mov
adc
inc
ds
push
jmp
mov
mov
shl
or
add
sub
inc
inc
in
sbb
push
inc
add
ins
(bad)
outs
(bad)
or
arpl
shl
fld
dec
inc
inc
fild
sub
lods
es
ins
movs
add
mov
jl
inc
jmp
adc
mov
daa
inc
cmp
push
or
add
add
xor
mov
imul
push
add
cmp
mov
cmp
sub
lods
sbb
or
fs
popf
inc
push
pop
and
loopne
xor
xchg
daa
in
call
push
add
rcl
test
adc
inc
xor
outs
enter
pop
cmp
test
es
je
and
jo
ret
inc
dec
sub
jmp
lds
or
cmp
inc
lds
or
and
enter
inc
cmps
and
xor
retf
mov
xor
lea
add
rcr
out
xchg
xor
hlt
sbb
adc
inc
push
les
xor
inc
jb
cmps
fdivr
sub
xor
nop
pop
leave
sbb
sub
ret
sbb
inc
sub
bound
inc
pushf
or
inc
add
mov
inc
and
jno
aaa
jo
mov
repnz
pusha
jecxz
inc
inc
data16
ins
ins
inc
daa
add
or
cmp
and
dec
push
push
adc
fs
and
je
out
les
aam
xor
lea
and
adc
mov
and
fcmovne
(bad)
shr
or
jmp
sbb
icebp
retf
sub
dec
adc
adc
pop
inc
jp
add
jbe
or
nop
(bad)
push
cdq
sub
pop
add
(bad)
inc
inc
shl
enter
lea
or
jne
xlat
popa
jecxz
cmp
mov
jae
test
dec
push
nop
test
xor
sbb
cmp
nop
sbb
pop
cmp
jge
and
mov
sbb
and
ins
push
xchg
(bad)
in
cdq
push
stc
inc
inc
mov
or
push
sbb
enter
and
sbb
sub
jno
and
ret
pop
adc
push
or
test
pop
or
pop
pop
addr16
xchg
adc
adc
push
lea
push
or
dec
sub
mov
loope
dec
mov
sub
dec
inc
xor
addr16
adc
pop
pop
or
and
mov
(bad)
push
and
test
and
inc
inc
xor
mov
test
test
aad
dec
dec
pop
mov
in
cmp
adc
test
or
stos
stos
push
outs
xchg
inc
sub
sub
push
xor
rcl
enter
repnz
push
cmp
test
nop
mov
and
retf
test
adc
and
stc
sub
mov
mov
dec
and
adc
aas
and
leave
mov
(bad)
ror
arpl
xchg
outs
cmp
jns
sbb
hlt
lds
xchg
mov
inc
cmp
or
sbb
test
xor
cs
fs
and
sbb
mov
aas
mov
mov
dec
ins
cmc
aad
dec
inc
lea
or
movs
std
inc
xor
in
fdivr
pop
add
dec
sbb
sbb
(bad)
(bad)
pop
add
bound
test
sub
cmp
stc
pushf
mov
inc
add
add
add
out
cdq
adc
inc
popf
scas
push
mov
inc
mov
or
cmp
rcl
pop
sub
jle
or
adc
add
adc
cdq
inc
or
rcl
lea
inc
loopne
nop
or
data16
clc
mov
nop
push
lods
pop
jmp
adc
test
push
repnz
movs
add
shl
inc
xchg
ficomp
mov
shr
mov
lahf
dec
test
es
inc
int3
push
xlat
ins
or
jo
inc
or
cmp
xchg
(bad)
repnz
cmp
mov
(bad)
pop
inc
shl
push
ror
pushf
(bad)
enter
je
fild
add
cmp
xchg
and
in
(bad)
push
inc
(bad)
cmp
daa
daa
mov
xchg
dec
mov
or
das
xor
test
sub
fdiv
(bad)
adc
push
scas
or
push
cmp
int
jg
inc
adc
push
sbb
in
mov
imul
sub
add
xchg
lea
lods
jmp
inc
scas
nop
inc
fisubr
ins
pop
xchg
leave
ret
and
and
les
xor
fnstenv
or
adc
sub
aaa
pop
xor
imul
or
dec
or
jl
jo
mov
fcomp
fcom
loop
or
mov
mov
xchg
int3
test
imul
xor
push
aam
test
out
and
add
iret
jne
clc
push
pushf
push
repz
mov
cmp
test
push
fnstcw
aas
test
and
lods
and
cwde
in
pop
mov
sub
xchg
and
or
adc
mov
hlt
std
mov
int3
adc
sub
mov
aaa
fadd
pop
dec
push
and
pop
cmp
xor
and
and
cmp
hlt
mov
add
xor
jbe
movs
mov
mov
cmp
push
movs
inc
repz
cld
pusha
cdq
add
add
les
mov
mov
mov
sub
adc
data16
add
adc
push
dec
lea
aam
inc
inc
nop
pop
ret
daa
push
imul
xor
push
out
inc
repnz
mov
les
or
retf
enter
sub
dec
pop
or
pop
repz
dec
sbb
or
das
lea
clc
add
push
cmp
je
loopne
inc
jns
sbb
pop
retf
rol
inc
(bad)
and
pop
ss
iret
mov
push
rcl
mov
shl
pop
shl
ja
push
push
and
cmp
fadd
mov
sbb
pushf
shl
jmp
xor
stos
jl
shl
jmp
shl
mov
loope
adc
cmp
jne
mov
pop
dec
sub
movs
sub
dec
mov
add
sub
es
cmp
call
sbb
xchg
adc
add
stc
push
dec
adc
(bad)
out
test
sti
add
outs
push
inc
or
sub
push
sub
pop
lahf
loop
dec
popa
xor
sub
xchg
pop
enter
enter
enter
nop
adc
push
cmp
rcr
xchg
xor
xchg
inc
dec
cmps
cwde
cmp
pushf
mov
add
add
cmc
lea
test
jmp
adc
jp
xor
ins
push
sbb
mov
and
and
in
and
pop
les
mov
pusha
push
push
or
jp
xchg
push
movs
and
mov
sub
mov
iret
inc
iret
cmp
cmp
ror
cmps
movs
jecxz
into
inc
rol
jb
jns
loope
mov
sbb
and
daa
adc
mov
arpl
inc
xor
mov
mov
mov
inc
cs
xchg
je
inc
add
mov
jns
inc
cmps
ds
adc
add
call
loop
and
inc
mov
jmp
lea
xor
rep
sbb
mov
cmps
jne
cmp
mov
test
lds
or
repz
inc
mov
nop
mov
in
push
mov
test
inc
movs
rcl
and
cmp
rcr
scas
or
sub
xchg
mov
mov
push
xlat
rcr
mov
(bad)
in
stos
dec
das
xlat
ins
dec
imul
push
add
scas
shl
shl
pop
imul
cmp
movs
push
cmp
add
nop
fadd
pusha
loop
or
pop
add
int3
mov
repz
sbb
rcl
les
xchg
mov
dec
push
pop
xchg
repz
jb
jno
and
push
repz
adc
ins
jp
ret
mov
cmp
jecxz
das
mov
push
cmps
adc
sub
mov
cmps
or
sbb
mov
pusha
fadd
div
pop
movs
test
in
sar
mov
clc
and
test
scas
fidivr
add
ficom
mov
sbb
test
pop
push
js
retf
mov
push
xor
jge
inc
ins
add
iret
lahf
jecxz
gs
push
cwde
ror
adc
retf
sbb
in
into
mov
or
mov
and
mov
fld
repnz
cwde
xor
scas
shl
fbld
cwde
rcl
push
mov
dec
xchg
test
mov
cmp
add
arpl
pusha
fcomp
dec
out
sbb
in
xchg
or
add
xor
out
or
inc
xchg
cmp
out
sub
pusha
xlat
mov
shr
or
dec
shl
push
stos
cmp
or
cmp
rcl
push
je
fadd
sbb
inc
push
(bad)
nop
push
sahf
dec
and
popa
cmp
mov
mov
ret
cmp
push
xor
mov
mov
dec
dec
in
add
adc
(bad)
rcr
pop
and
or
mov
mov
out
hlt
add
mov
test
mov
or
push
call
imul
adc
push
dec
out
pusha
adc
and
dec
mov
xchg
mov
ret
jbe
pushf
adc
imul
rol
sbb
ja
enter
adc
fild
cmp
sub
xor
mov
xor
lods
enter
dec
sbb
pop
ret
sbb
addr16
add
ret
test
sub
mov
inc
loop
cmps
dec
dec
lods
retf
shl
mov
dec
pusha
in
pusha
push
adc
mov
inc
pop
or
out
jno
push
cmps
pop
add
fild
fwait
scas
pop
and
rcl
push
push
sbb
shl
mov
movs
adc
or
dec
loope
mov
add
add
add
xor
sbb
ins
bound
ins
push
push
sar
push
scas
push
inc
mov
icebp
jns
popa
leave
push
xor
mov
push
and
cmp
mov
mov
les
js
adc
inc
popf
int3
xor
jnp
sbb
popa
(bad)
dec
stc
fs
and
pop
push
movs
cmp
cmc
or
sbb
mov
sbb
dec
js
inc
mov
sti
ret
nop
xor
repnz
mov
or
cs
int3
inc
mov
or
loopne
mov
imul
ror
adc
and
or
jg
test
inc
push
fcom
test
sbb
aam
add
in
add
or
and
in
inc
bound
adc
inc
mov
or
mov
cmp
mov
push
fwait
pop
pop
jb
inc
inc
repnz
in
xchg
push
popa
lds
add
shl
add
xor
mov
pop
add
sub
jmp
xchg
dec
mov
cmps
inc
jmp
sbb
sar
add
adc
sub
fisttp
pop
pop
inc
adc
call
inc
adc
sbb
mov
xchg
ret
popf
push
or
inc
ret
and
xchg
push
test
rcl
sub
sbb
leave
inc
mov
dec
dec
pop
dec
and
cmp
callw
aad
mov
mov
sub
sbb
sub
sbb
sub
adc
and
or
dec
fist
pop
xchg
nop
into
mov
xchg
push
pop
adc
pop
adc
push
jne
ret
or
cmps
jmp
pop
sub
imul
mov
pop
es
ds
pop
add
je
and
and
les
cs
adc
and
dec
push
test
adc
and
imul
mov
fwait
cmps
inc
pusha
xor
lods
adc
xchg
xor
xchg
add
and
rcl
mov
push
lds
int3
ins
test
push
add
adc
adc
gs
add
and
int3
jg
dec
loop
push
and
add
and
mov
mov
xchg
sbb
lods
or
or
retf
movs
mov
xchg
mov
and
mov
lds
xor
dec
dec
jns
xchg
add
mov
cmp
das
loope
cmp
sub
xchg
pop
enter
shl
sbb
les
add
mov
adc
sar
xchg
push
jg
mov
imul
mov
loope
jp
cwde
adc
pop
je
sbb
cwde
mov
inc
mov
xchg
mov
mov
shr
dec
xchg
or
rcl
shr
pop
lods
sub
or
xchg
dec
fcom
fmul
or
ror
je
or
cmp
and
and
sbb
and
(bad)
test
pop
add
out
mov
push
add
mov
mov
inc
and
and
mov
loope
inc
sbb
(bad)
pop
inc
pop
jo
xlat
imul
shl
mov
add
rcl
and
pop
cmps
cmp
inc
adc
sbb
xor
pop
iret
inc
xor
pop
mov
pushf
leave
mov
and
(bad)
lds
sub
push
js
cmp
out
mov
mov
and
mov
pop
add
or
aam
xor
sub
pop
imul
mov
jge
bound
inc
in
pushf
es
and
imul
adc
mov
xor
pop
mov
or
jle
jl
push
imul
aad
inc
add
cmp
(bad)
hlt
sub
pop
shr
fdiv
inc
cmp
into
xor
cmp
shl
ds
sub
pusha
add
cmc
sbb
inc
push
sbb
ror
movs
pushf
dec
(bad)
or
push
ss
push
sbb
fsub
xchg
es
jne
hlt
ret
add
ds
pop
cwde
mov
enter
xor
rcr
pusha
cwde
loopne
xor
jo
in
or
scas
push
adc
sbb
inc
mov
lods
or
push
jmp
inc
pop
sbb
mov
pop
rol
or
adc
dec
and
icebp
sahf
out
adc
test
mov
xor
jo
mov
lods
dec
(bad)
sbb
push
adc
pop
push
loopne
fadd
pop
jmp
adc
enter
test
fcomp
cmp
fcomp
inc
mov
ret
in
lock
push
sti
mov
push
cmp
lods
cmp
cmp
int3
rep
pop
jno
push
lods
cmp
scas
xor
mov
push
push
mov
sbb
and
cs
xor
cli
sar
jne
movsx
in
add
movs
mul
outs
inc
ficom
cmp
sub
pop
ret
fwait
mov
leave
jg
dec
and
sti
bound
sub
aaa
fwait
add
xchg
retf
or
int
jmp
or
sbb
xor
cmp
xor
fs
jmp
push
bound
(bad)
push
or
pop
cmp
inc
aas
gs
cmova
add
leave
inc
dec
fsubrp
imul
or
loopne
mov
lea
rol
add
push
rcl
inc
cmp
addr16
inc
pop
pop
or
add
idiv
cmp
lock
in
loop
add
maskmovq
div
shl
shr
jne
ins
inc
inc
xchg
out
rcr
jmp
call
aad
jge
pushf
sbb
in
pop
push
pusha
rol
push
cmp
in
pusha
jo
cmp
sbb
mov
mov
push
sbb
stos
loope
lahf
mov
cmpps
aad
inc
adc
push
pop
pop
mov
cmp
push
mov
dec
out
fld
add
iret
xchg
sbb
or
popf
adc
aam
adc
inc
jns
fadd
add
pop
mov
shl
fs
retf
in
sar
out
jo
enter
jmp
fnstsw
ror
les
add
mov
fmul
test
sub
push
sahf
iret
mov
inc
jno
rcl
inc
outs
adc
mov
loop
and
jo
in
mov
sbb
nop
mov
loopne
dec
in
ror
and
cmp
je
ja
pop
pop
jmp
lods
mov
push
stos
sub
xchg
loope
lea
mov
add
and
xchg
lock
mov
sar
mov
mov
iret
sti
enter
mov
into
pop
test
call
cdq
fadd
dec
inc
push
enter
sbb
sahf
call
xchg
add
movs
fcmovb
dec
ss
rol
rcr
fwait
dec
xchg
inc
push
ror
mov
inc
ins
sbb
jo
cmp
rol
jle
mov
sbb
mov
cmp
das
(bad)
int
or
daa
sub
nop
loope
add
pushf
add
push
rol
shl
inc
aam
push
adc
add
aad
pop
and
xchg
xor
cmps
push
xor
xchg
jge
psubsb
and
cwde
sti
(bad)
push
pushf
jl
add
inc
loope
pop
pop
inc
mov
mov
mov
push
pop
test
or
sbb
inc
pop
xor
rcr
mov
mov
and
xchg
or
shl
imul
push
add
shl
sti
dec
enter
push
cmc
nop
movs
dec
push
jmp
xlat
sti
(bad)
retf
fdivp
and
mov
ins
or
in
shl
and
retf
loopne
mov
push
and
mov
and
push
jecxz
imul
sbb
xchg
sbb
ret
pop
mov
dec
ss
test
mov
sub
lds
es
les
in
add
ret
mov
adc
inc
inc
push
jb
pop
push
dec
dec
sbb
in
mov
mov
(bad)
enter
mov
arpl
add
(bad)
mov
lea
cmp
test
daa
add
push
ins
add
std
jnp
xor
imul
inc
in
retf
enter
int3
and
nop
mov
or
or
cmp
dec
jnp
jo
inc
bound
popf
xor
imul
test
les
mov
pop
xchg
xchg
(bad)
push
ror
adc
add
or
sar
cmp
call
mov
mov
cwde
push
jl
inc
mov
(bad)
repnz
leave
add
push
add
mov
sbb
xchg
arpl
push
adc
fsub
ret
cwde
(bad)
adc
jo
sub
jle
pusha
sub
mov
mov
ins
mov
adc
push
add
in
rcl
int3
mov
mov
pop
or
movs
dec
add
push
rcl
jo
jo
xchg
imul
cmps
lds
mov
jp
ins
dec
mov
fstp
sub
ja
pop
test
inc
test
mov
rol
popf
or
inc
push
jns
js
and
rol
or
cs
push
call
fs
iret
rcr
nop
inc
(bad)
int
nop
sbb
sbb
nop
add
aad
mov
jns
jno
add
mov
adc
int
imul
shr
data16
push
adc
mov
mov
jo
out
pushf
push
call
in
jb
ss
and
bound
fidivr
rol
call
ficomp
sbb
mov
mov
jo
xor
neg
pop
enter
cld
push
xchg
dec
xchg
jl
mov
mov
pop
aad
sbb
sbb
scas
stc
cli
inc
adc
rol
js
pop
add
jmp
adc
cmp
pop
dec
imul
jne
and
sub
add
pop
inc
nop
adc
xchg
xchg
lahf
rol
and
sbb
xchg
push
add
push
jb
cmps
ret
pop
jmp
jo
mov
and
xchg
test
int3
lea
imul
sahf
or
ss
rol
dec
rcr
repnz
js
cmp
or
ss
add
dec
push
inc
(bad)
aam
inc
shr
cwde
popf
call
xchg
pop
ret
adc
ins
dec
psubsb
xchg
jb
inc
adc
xor
mov
dec
add
push
pop
daa
pop
clc
(bad)
adc
nop
mov
cmp
xchg
xchg
xor
cmp
and
xchg
(bad)
mov
inc
call
sub
clc
add
inc
xor
call
out
inc
pusha
sub
fcom
sub
mov
push
test
xchg
push
test
inc
and
add
cmp
cmp
pusha
shl
cmp
and
jb
sub
push
ret
xor
pop
add
add
xchg
mov
cmp
push
jp
mov
enter
xchg
or
add
inc
sbb
push
cs
enter
push
dec
repnz
xchg
in
xchg
rcl
push
mov
add
add
pop
dec
cmps
push
add
xor
cmp
bound
xor
dec
xchg
xchg
dec
cmp
test
push
add
enter
int3
loopne
and
adc
inc
xor
sub
pop
jo
inc
sbb
push
and
ss
mov
mov
xor
and
and
inc
jmp
ss
das
push
xchg
lods
cmps
mov
cld
sar
in
lock
and
call
xchg
push
push
or
push
fdivr
or
xor
sub
push
xchg
sbb
dec
pop
fs
mov
add
prefetchw
stos
js
jl
jp
pop
or
sbb
or
cmp
adc
scas
add
xchg
adc
cld
mov
and
or
imul
(bad)
mov
inc
sub
jo
xchg
daa
test
loopne
and
dec
outs
repnz
cs
lahf
mov
mov
pop
dec
fistp
lock
push
imul
or
stos
add
pop
push
cmc
inc
mov
mov
pslld
add
cmp
mov
mov
rcl
adc
sub
sub
nop
nop
inc
dec
in
in
pop
aas
int3
add
es
bound
adc
add
rol
arpl
cmc
cmp
jb
loopne
or
outs
enter
test
int
lea
cmc
xchg
and
push
sbb
test
(bad)
int3
or
test
pusha
(bad)
push
pop
sti
pop
loopne
add
adc
mov
es
js
pop
call
shl
cmp
or
and
(bad)
or
or
rol
mov
enter
loopne
xor
jmp
fsubr
test
inc
add
add
ret
inc
add
or
sbb
add
in
dec
loope
(bad)
xchg
pop
loope
loopne
adc
fs
sbb
mov
iret
icebp
or
sbb
mov
movs
stos
movs
mov
fld
sbb
push
mov
enter
mov
jg
in
ins
adc
xchg
xchg
(bad)
inc
test
inc
add
lds
jbe
or
sbb
int
xor
je
push
les
or
pusha
or
mov
and
in
icebp
test
push
fistp
add
xchg
inc
mov
sub
out
mov
xor
inc
or
xor
cli
popf
ret
push
push
push
push
cmp
cmp
stos
ss
pop
dec
or
mov
pop
fs
add
fadd
std
and
cmp
retf
push
sub
or
or
xchg
in
scas
add
pop
and
je
out
xchg
push
(bad)
(bad)
call
xchg
lods
adc
lods
popf
push
jns
add
gs
jns
ins
ins
test
sbb
jns
push
xchg
add
xchg
loopne
push
test
or
push
and
arpl
frstor
cmp
leave
add
sub
inc
mov
cdq
daa
add
mov
and
sbb
or
push
mov
cmp
ss
(bad)
stc
cs
in
outs
lds
mov
or
xor
mov
xlat
and
sub
adc
add
(bad)
loopne
bound
mov
push
or
push
inc
es
sbb
(bad)
in
jns
js
js
xchg
sub
je
js
and
popa
mov
shl
iret
or
(bad)
call
es
nop
xor
xchg
xchg
sub
jo
mov
mov
aam
or
and
dec
ret
test
in
or
push
push
sbb
(bad)
sub
push
fucomi
sahf
in
rcl
js
xchg
cmp
js
js
sub
in
cmp
jns
and
ret
rcl
sub
in
pop
sub
cmp
dec
cmp
aam
pop
add
dec
jmp
pop
sbb
or
or
iret
push
test
int3
pop
fs
data16
(bad)
xchg
or
shl
xchg
out
les
js
lods
or
cmp
hlt
jb
xchg
inc
inc
test
jo
xor
or
xor
and
adc
adc
stc
adc
inc
push
cdq
or
in
rol
in
xor
or
and
pop
xchg
(bad)
jecxz
jo
adc
cwde
stc
inc
loop
mov
mov
call
popa
stc
adc
pop
add
sbb
stc
adc
loope
and
in
in
sub
xchg
nop
cmp
adc
clc
es
and
pop
add
loopne
cmp
adc
xchg
inc
add
xchg
add
nop
fsubr
sub
inc
and
xor
fcom
in
sbb
and
add
mov
aam
pop
sbb
xchg
sbb
xchg
les
and
pop
cmc
in
stos
in
xor
adc
adc
sbb
jnp
and
leave
add
and
or
jno
fistp
das
inc
push
in
int3
int3
and
and
shl
out
mov
mov
mov
sbb
enter
test
and
ficomp
add
cmp
ret
fwait
int3
jns
and
add
push
and
push
jb
pop
add
push
shl
adc
dec
xchg
in
inc
sub
fcomp
ins
mov
cmps
adc
std
shr
add
pop
mov
(bad)
int3
or
test
pop
les
dec
mov
arpl
inc
sub
add
jo
call
jbe
or
aaa
push
jmp
xor
iret
xlat
push
test
sbb
xor
inc
adc
pusha
nop
sub
mov
lods
and
and
pushf
xchg
pusha
outs
das
in
jo
add
cmp
in
or
adc
xchg
xor
push
jecxz
push
jb
stc
(bad)
push
test
and
and
pusha
adc
adc
mov
bound
add
inc
add
and
xor
call
dec
call
inc
sub
inc
inc
sub
xor
bnd
leave
dec
cdq
dec
and
call
fnstenv
push
push
test
clc
push
sbb
inc
mov
repnz
in
push
jge
push
inc
test
lahf
mov
and
daa
mov
add
rol
mov
sub
sub
mov
or
mov
add
mov
and
call
lds
pop
leave
mov
or
push
or
cs
pop
sub
xchg
push
loope
jb
mov
jno
add
test
push
and
lsl
pop
cmp
loope
jmp
lods
dec
and
dec
adc
add
add
pop
je
lods
jns
cmp
jns
or
push
rcr
out
add
add
adc
mov
xchg
nop
dec
rol
xor
pushf
inc
xor
pop
stos
add
xchg
cmp
mov
xor
add
mov
pop
lea
mov
cs
pop
xchg
cmps
stc
shr
rcr
push
and
int
and
out
add
movsx
dec
mov
jae
push
sbb
outs
lods
fisub
sbb
cmp
int3
sbb
push
test
mov
xchg
push
sbb
out
pop
loopne
xchg
movs
xchg
pop
ret
pop
rol
cs
push
adc
rcl
in
or
cmps
test
dec
das
cdq
mov
test
adc
jne
ret
rol
in
inc
ins
dec
jbe
sub
into
add
push
inc
dec
pop
jnp
jmp
xlat
xchg
add
and
push
or
dec
jp
adc
ret
push
xchg
mov
and
movs
shl
dec
nop
mov
add
ror
add
cmp
mov
jl
js
test
add
sub
sbb
adc
pop
or
pop
ret
push
ret
ins
push
jb
pusha
xor
int3
int3
xor
bound
or
pop
or
scas
xlat
or
inc
sub
sbb
add
adc
and
inc
fisub
inc
out
ror
fwait
sbb
pop
inc
cs
dec
mov
and
lea
icebp
inc
rcr
pop
test
ror
mov
into
es
cmps
xchg
push
add
mov
(bad)
jno
shl
mov
outs
leave
aaa
hlt
repnz
movs
inc
inc
xchg
mov
or
xchg
or
sub
shr
push
push
xchg
or
push
xchg
jbe
aam
fcomp
mov
inc
repnz
sahf
xor
mov
push
add
in
es
scas
xchg
sub
fcom
aam
and
or
cdq
xchg
aam
sub
nop
aam
pop
add
xchg
pop
add
sar
sub
fcom
adc
movs
fmul
in
aam
lods
xchg
xchg
xchg
loopne
call
mov
jno
daa
sub
add
push
and
inc
mov
mov
aas
inc
xchg
push
dec
loopne
fwait
and
jl
jmp
xor
inc
adc
jns
test
jp
adc
sub
js
dec
push
push
sbb
xor
rcr
adc
es
add
ret
je
xlat
mov
mov
fisub
adc
push
ror
mov
in
add
dec
jne
xor
push
adc
cmp
dec
test
cmp
mov
lsl
xchg
adc
in
or
push
shr
and
add
pop
inc
cwde
daa
cmp
test
pusha
xor
add
push
rcl
or
pop
sbb
fisttp
fdivr
or
lea
mov
ss
fild
push
pop
pop
jns
stc
push
mov
pusha
lds
add
push
pop
dec
and
push
xchg
mov
jnp
add
and
leave
adc
aas
xchg
mov
adc
xor
add
in
aam
or
sbb
stos
int3
xchg
sbb
cmps
(bad)
shl
jne
or
push
push
and
push
jb
pop
mov
pop
dec
push
lods
lea
push
adc
test
mov
es
out
test
inc
or
pop
mov
mov
add
cmp
xchg
adc
mov
or
inc
push
aam
sbb
dec
inc
cdq
or
retf
jb
mov
or
mov
inc
aam
(bad)
or
inc
test
cmp
mov
lods
jmp
xor
adc
rcl
loopne
addr16
sahf
jo
push
inc
sbb
xchg
push
push
aam
movs
cdq
inc
inc
push
dec
xchg
fld
rcl
in
and
ins
je
mov
push
mov
ror
mov
mov
scas
cld
(bad)
cmp
fadd
sbb
pop
test
fs
fsub
adc
scas
xor
dec
movs
dec
mov
lea
add
push
adc
or
lds
push
inc
in
push
and
inc
sbb
mov
ins
add
xchg
or
xchg
lods
fld
jae
xor
sub
pop
inc
dec
jecxz
gs
or
adc
out
push
push
cmp
ror
jmp
cwde
shl
cmps
test
xor
fcom
push
add
test
mov
add
mov
sahf
test
mov
dec
in
mov
xor
and
or
cmp
xchg
cmp
out
shl
rcl
push
adc
inc
push
jge
jo
xchg
dec
mov
adc
xchg
test
mov
aad
out
pusha
push
add
add
inc
rcl
stos
nop
mov
test
jo
xchg
adc
add
cmp
cwde
add
dec
inc
jns
test
mov
lea
sub
pop
xchg
ds
repnz
leave
add
ror
mov
sbb
and
lea
and
push
int3
leave
nop
or
push
pop
add
push
and
sub
add
lahf
add
dec
cmp
inc
push
inc
xor
pusha
lahf
add
push
and
push
push
cmp
loope
das
xchg
sbb
inc
sub
sbb
xchg
and
add
lock
cmps
pop
add
les
dec
mov
lahf
adc
mov
rol
inc
aam
mov
pusha
adc
adc
push
mov
lds
movs
mov
shl
sar
and
and
ror
mov
enter
nop
mov
adc
xchg
or
adc
dec
cmps
dec
fdivr
or
cmps
fdivr
bound
mov
loopne
in
rcl
jecxz
or
sbb
sbb
arpl
or
inc
cmp
add
cmps
imul
xchg
cmp
cmp
xchg
push
mov
cwde
popf
int3
lods
out
ins
fsub
popa
sbb
sbb
ins
push
(bad)
dec
imul
ss
test
pop
lods
cmps
gs
sbb
cmp
xor
push
cmps
pop
mov
imul
stos
pop
xchg
push
cmp
nop
sahf
in
xor
lds
mov
mov
push
push
mov
shl
retf
cmp
add
popf
retf
lods
pop
xchg
cwde
and
sub
or
push
cs
clc
pop
cmp
add
cmp
push
adc
ror
push
jno
push
and
xlat
imul
push
outs
add
(bad)
repnz
add
mov
push
jo
adc
lds
popa
mov
push
push
imul
and
lds
ja
out
push
leave
dec
stos
push
push
mov
mov
mov
lahf
nop
adc
daa
or
add
pusha
lahf
push
jae
les
mov
jne
xchg
(bad)
mov
test
jmp
lea
or
cs
and
inc
xchg
sub
sbb
mov
adc
pusha
cld
inc
xchg
bound
adc
add
mov
shrd
test
cmp
pop
inc
push
add
out
popa
pop
fadd
mov
push
jle
shr
xchg
pop
shl
xor
inc
pop
push
les
leave
cmps
add
daa
dec
movs
sub
add
into
mov
mov
addr16
por
pop
dec
jo
pop
sar
int
adc
dec
fmul
les
dec
mov
xor
add
or
loope
cwde
scas
leave
push
add
int3
jne
dec
test
dec
ret
je
mov
addr16
sbb
xchg
int3
or
(bad)
dec
ds
ret
nop
mov
outs
inc
add
pop
in
adc
das
or
rcr
mov
in
dec
int3
stos
mov
and
and
lahf
and
mov
arpl
test
jmp
mov
(bad)
enter
nop
inc
nop
pop
inc
mov
popa
push
jne
outs
scas
mov
jge
mov
lods
cmp
ss
sbb
ss
cmc
mov
mov
cmp
sub
push
ret
loop
movs
popa
inc
mov
test
mov
or
push
add
outs
jmp
je
test
push
adc
fs
cmp
or
(bad)
loopne
fs
cmp
sbb
sbb
(bad)
(bad)
(bad)
(bad)
fs
sbb
(bad)
std
or
fs
xor
fs
cmp
xor
ins
inc
data16
sub
dec
and
sub
movs
jno
mov
sub
sbb
inc
or
add
adc
into
inc
bound
loop
xor
pusha
sub
dec
ss
or
movs
retf
mov
dec
arpl
(bad)
das
popa
shl
aam
or
mov
lods
mov
nop
xor
add
mov
sbb
add
rcl
scas
pushf
and
call
inc
dec
sbb
adc
adc
jge
inc
stos
and
xchg
aad
adc
inc
sbb
scas
in
xor
test
add
dec
and
sbb
out
and
adc
sbb
jge
cmp
mov
lods
pop
adc
sar
jl
xchg
jl
test
jns
cmp
mov
sub
sahf
loop
stos
adc
push
sub
mov
mov
(bad)
in
or
bswap
push
dec
jmp
add
movaps
xchg
ja
cmps
enter
lock
pop
xchg
push
push
and
inc
adc
lods
add
jns
cmps
sub
jb
inc
mov
ja
inc
adc
xchg
push
lods
add
lods
add
ja
jecxz
or
adc
push
leave
mov
and
mov
push
and
jecxz
sbb
and
xchg
xchg
mov
and
and
ins
adc
jecxz
dec
fbld
addr16
test
adc
xchg
sub
adc
jb
dec
xor
sbb
sbb
mov
ja
jo
xchg
dec
adc
enter
scas
inc
ss
mov
test
dec
adc
nop
dec
xchg
in
xor
in
cmp
lods
ja
dec
adc
xchg
adc
cmp
and
fist
daa
or
scas
and
cmp
scas
fsubr
mov
jl
or
pop
adc
push
fwait
mov
jb
je
sbb
or
les
pop
repnz
push
adc
mov
cmp
dec
mov
inc
shl
mov
in
sub
cmp
nop
cmp
mov
cmp
inc
rcl
ja
mov
addr16
xchg
mov
adc
push
jo
test
and
leave
and
pusha
and
mov
pop
mov
push
cmp
ret
jne
push
pop
push
mov
mov
fwait
or
nop
xchg
cmp
mov
cmp
nop
mov
inc
rcl
lock
mov
mov
cmp
shl
inc
pushf
inc
and
sbb
and
or
sbb
shl
inc
mov
enter
mov
mov
mov
leave
mov
cmp
adc
les
mov
hlt
mov
and
mov
add
mov
push
jno
push
outs
test
mov
js
ins
push
adc
aam
repnz
inc
add
sbb
inc
add
xor
xchg
adc
enter
mov
adc
adc
nop
mov
add
or
and
adc
inc
pushf
ja
add
in
sbb
enter
sbb
adc
adc
in
or
sbb
adc
mov
or
or
and
jb
mov
mov
mov
cdq
mov
hlt
and
and
in
and
and
call
cmp
mov
daa
or
and
cmp
cmp
cs
push
xor
cwde
sub
addr16
ja
sbb
in
adc
leave
xchg
dec
mov
inc
add
push
and
hlt
and
cmp
leave
push
ja
adc
nop
pushf
sub
mov
cmp
in
xchg
adc
xor
fcom
xor
repnz
inc
cld
sbb
sbb
sbb
pusha
and
adc
nop
adc
fs
sbb
out
mov
and
xor
test
sbb
jb
test
cs
shr
rcr
sub
xor
fistp
pop
mov
pop
or
sub
push
jo
xor
ja
adc
xchg
sbb
mov
jns
adc
adc
nop
or
sbb
and
inc
rcl
ja
adc
mov
fs
push
sar
mov
cld
ja
inc
shl
addr16
xchg
mov
add
and
push
jo
nop
push
mov
fs
mov
pop
shl
adc
inc
add
and
enter
and
and
leave
push
xor
pushf
sub
fdivr
in
xor
push
mov
loopne
adc
ins
mov
inc
mov
add
inc
inc
mov
mov
addr16
inc
jb
rcr
rcr
or
xchg
adc
jns
cmovs
sbb
sbb
push
xor
xchg
ja
and
adc
or
addr16
and
sbb
in
cmp
or
xor
and
xor
jo
xchg
test
leave
push
xor
ja
mov
iret
fs
inc
test
lahf
fs
sbb
xchg
mov
ja
mov
pop
adc
and
jb
ret
fcomp
jb
push
adc
pusha
test
push
add
ja
adc
ja
inc
shl
and
cwde
loopne
nop
inc
jb
shr
add
xchg
loopne
and
sbb
adc
inc
ror
adc
mov
inc
push
repnz
and
and
inc
push
jb
dec
les
movs
pusha
sub
sbb
aam
mov
mov
and
in
in
add
sbb
and
or
lds
in
ja
adc
sub
fistp
add
fadd
sbb
mov
test
lock
rol
xchg
lock
adc
pushf
test
mov
pop
jb
cdq
adc
test
movs
mov
mov
sti
pop
lea
test
mov
fs
lahf
or
cmp
mov
rcl
or
add
test
mov
sbb
enter
sbb
sub
adc
or
xor
xchg
or
inc
pusha
sbb
daa
or
dec
rcl
jg
sbb
nop
imul
dec
sahf
adc
push
cdq
mov
shr
and
inc
inc
or
xor
mov
or
mov
add
inc
call
xor
mov
sar
push
int
mov
pop
mov
or
push
push
es
dec
push
inc
adc
dec
add
push
adc
fmul
xchg
sahf
and
inc
in
sub
ror
sub
test
sbb
and
push
inc
xchg
fwait
push
and
outs
push
pop
popa
fwait
xchg
mov
adc
xchg
dec
xor
add
adc
xor
and
sub
std
sub
inc
or
inc
sub
and
push
movs
sub
in
and
sub
mov
call
inc
jne
sub
imul
mov
jecxz
mov
in
lahf
or
lock
loopne
enter
shl
nop
xor
add
enter
sbb
and
mov
inc
aaa
lods
inc
cmc
xor
fwait
add
sbb
pop
ds
or
jl
clc
std
mov
call
(bad)
retf
retf
enter
ss
out
mov
js
sahf
int
je
push
aam
or
dec
cmp
(bad)
and
push
jmp
cmp
(bad)
adc
stc
pushf
and
loopne
lock
fidivr
or
sub
rcl
mov
mov
mov
mov
adc
xchg
pusha
jo
dec
jb
leave
pusha
inc
push
add
shr
cmp
sub
mov
cdq
imul
loopne
or
psubusw
aam
pop
mov
and
sbb
out
sub
test
loope
mov
test
(bad)
int
leave
stc
dec
ficom
nop
mov
mov
shl
pop
shl
lock
add
pop
xchg
pusha
push
jo
push
pusha
nop
adc
cmp
fmul
shl
adc
sub
adc
or
sub
mov
enter
xlat
sbb
jno
dec
push
xlat
or
stos
push
xor
sbb
push
adc
push
enter
inc
pusha
cmp
jbe
std
mov
sbb
adc
inc
and
nop
adc
mov
or
pop
mov
ror
lods
test
adc
or
xor
mov
popa
leave
ret
mov
stos
jns
cmp
and
imul
test
mov
mov
fs
dec
(bad)
adc
adc
cmp
jns
test
push
nop
or
xor
inc
inc
es
add
lds
or
push
xor
sub
fld
shl
xor
sbb
addr16
mov
enter
mov
mov
(bad)
icebp
repz
in
mov
mov
or
pushf
shr
fcmovne
xor
mov
pop
cwde
pop
rol
or
dec
sub
dec
cmp
pop
fcom
dec
int3
dec
shr
and
loope
test
push
test
lea
nop
xchg
xchg
dec
in
mov
test
xor
xor
test
sub
cwde
mov
xchg
push
pushf
dec
sub
jns
xor
sub
dec
xchg
test
ror
nop
les
arpl
aad
pop
adc
xor
adc
inc
adc
mov
mov
sbb
add
inc
shl
es
or
sbb
adc
ins
scas
adc
cmp
pop
xor
xor
sbb
add
pop
push
xchg
or
add
push
xchg
inc
mov
pusha
sub
inc
fcom
pusha
xchg
sbb
stos
test
fcom
leave
add
xor
sbb
add
enter
sbb
sub
push
sbb
and
add
pusha
add
mov
push
aad
dec
cmp
sbb
loopne
add
cmp
shr
ds
push
xor
hlt
iret
shr
xchg
inc
xchg
push
or
push
add
sbb
adc
jb
fst
and
and
inc
and
add
sub
cmps
dec
dec
and
jb
inc
scas
int3
movs
loope
add
pusha
loope
jns
jno
xor
add
enter
dec
inc
mov
pop
stos
mov
pop
popa
lock
dec
adc
sbb
repz
call
and
push
aad
mov
xlat
jno
inc
cwde
inc
loopne
inc
pushf
add
dec
pusha
test
cmps
cmp
sbb
or
mov
aam
movs
cmp
xchg
sbb
rcl
push
les
sbb
xor
mov
adc
or
inc
push
fs
add
xchg
imul
mov
in
aam
rol
xchg
int3
dec
out
lahf
dec
sahf
enter
out
and
mov
shr
mov
iret
mov
and
and
mov
mov
nop
iret
and
test
movs
add
test
fs
in
pushf
sti
jns
or
nop
outs
cwde
pop
sbb
add
nop
cmp
test
cwde
inc
stos
movs
mov
inc
add
(bad)
stos
retf
adc
nop
jecxz
bound
sbb
xchg
jo
xor
adc
out
mov
xor
in
arpl
sbb
sub
push
dec
cmp
and
sbb
and
xchg
cmp
nop
(bad)
int3
enter
sub
leave
dec
push
cdq
leave
mov
int3
lea
xor
add
pushf
cmps
add
aad
icebp
sbb
dec
dec
aad
mov
test
ja
push
add
nop
scas
mov
test
enter
test
mov
or
xchg
jo
mov
sbb
mov
pushf
pushf
shl
lock
or
call
out
nop
nop
xchg
inc
shl
pushf
xlat
push
adc
dec
or
fmul
dec
test
in
mov
push
pminsw
adc
jmp
adc
ficomp
pop
or
mov
gs
ss
xor
int
or
out
enter
(bad)
in
xchg
xchg
xchg
xchg
(bad)
aam
imul
or
inc
mov
int3
cmp
aad
add
cmp
push
inc
arpl
inc
push
adc
add
add
sbb
push
jbe
mov
sbb
xchg
mov
jle
mov
mov
daa
mov
lahf
in
cli
cmp
mov
lock
por
pop
or
loop
xor
pop
out
push
mov
xchg
test
adc
or
push
shl
mov
jne
loopne
lea
pop
dec
sbb
inc
xor
and
xor
inc
sub
(bad)
(bad)
dec
adc
push
jbe
aad
test
cmp
(bad)
adc
adc
test
mov
mov
mov
leave
cmp
mov
iret
push
fs
into
and
jo
dec
das
sar
fs
cs
dec
inc
jl
xchg
rol
and
jbe
mov
fmul
or
dec
push
add
ins
mov
jbe
or
pop
lea
and
jbe
out
dec
or
dec
dec
(bad)
hlt
iret
dec
cmc
cmp
jns
add
and
sbb
xor
fild
jns
sub
or
mov
int3
hlt
sbb
or
sahf
int
adc
loope
mov
jns
test
mov
leave
add
in
(bad)
fsubr
fdiv
push
dec
xor
imul
(bad)
in
push
jb
cs
cs
aam
dec
leave
push
aam
mov
xchg
sbb
adc
dec
mov
push
xchg
and
mov
and
mov
mov
push
jb
call
loopne
xor
push
mov
xchg
popa
fwait
repz
add
inc
pop
inc
mov
and
xor
cmp
icebp
inc
fisub
pop
sub
xor
std
ss
cmps
shl
arpl
jecxz
dec
ins
mov
mov
pop
adc
and
js
mov
push
dec
jecxz
inc
mov
test
jecxz
mov
mov
loope
cmp
inc
rcr
jne
xchg
ror
sbb
xor
and
and
push
and
in
push
or
mov
es
ins
jge
add
add
mov
mov
cmp
lods
inc
shl
xchg
inc
jmp
lods
dec
dec
xor
mov
push
rcl
sar
mov
xchg
mov
add
push
cmp
pusha
or
ffreep
inc
and
enter
and
int3
enter
push
mov
dec
push
push
dec
pop
xchg
cmp
xchg
in
je
daa
push
xor
ja
inc
xor
inc
cmp
shl
add
popa
push
xchg
inc
hlt
jnp
ins
fist
inc
or
sub
xchg
dec
mov
jne
not
xchg
bound
mov
lea
mov
(bad)
or
mov
sub
dec
lea
or
les
pop
aad
out
loop
pop
pusha
aam
inc
dec
xchg
rol
jge
mov
aam
jno
add
push
test
mov
call
xor
sub
or
and
xor
out
adc
hlt
inc
enter
mov
push
lea
push
sbb
call
mov
xchg
sbb
dec
scas
pop
push
in
pop
push
nop
dec
or
dec
or
dec
sbb
jae
es
sub
add
call
cmp
pop
inc
mov
add
pop
add
inc
mov
add
sub
cmp
adc
popf
mov
sub
dec
push
add
jmp
adc
xchg
mov
and
test
(bad)
xor
dec
pop
in
mov
pop
inc
je
mov
push
daa
inc
shr
inc
shr
(bad)
icebp
pop
add
into
mov
pop
fild
popf
sbb
aam
xor
xor
in
xchg
test
rol
pop
inc
fdiv
push
fmul
xor
fiadd
loopne
inc
sub
test
cmp
popa
lods
rol
and
inc
test
js
adc
mov
pushf
push
adc
sbb
pushf
sbb
adc
std
pop
test
mov
xchg
dec
sub
cmc
in
outs
mov
inc
push
rcl
ret
cmps
mov
adc
shl
ret
add
rcl
mov
je
inc
in
ret
mov
or
mov
inc
sbb
lock
push
jecxz
push
inc
es
ret
bound
jae
mov
pop
sbb
aaa
ss
add
cmp
rol
test
loopne
push
jge
mov
pop
or
pusha
(bad)
call
adc
mov
test
sub
lods
inc
push
push
je
pop
adc
sbb
and
inc
loop
inc
dec
xlat
dec
adc
jnp
pushf
add
sbb
and
mov
lock
push
popf
pop
lock
inc
cmp
jmp
test
fcomip
or
ds
and
pop
stc
rol
push
mov
push
mov
pushf
test
push
sbb
add
test
push
mov
test
bts
in
fwait
(bad)
stos
mov
jae
adc
xchg
cmp
(bad)
enter
push
pop
mov
mov
mov
xchg
les
movs
xor
cdq
xchg
test
in
ins
cmp
jo
int3
js
pusha
mov
cmp
in
gs
call
pop
xor
mov
clc
aam
clc
outs
push
push
(bad)
mov
dec
and
adc
mov
mov
adc
inc
inc
(bad)
push
ret
lea
dec
movs
dec
aad
or
data16
mov
fsubr
in
sub
pop
into
sbb
cmp
clc
mov
lea
fcomp
mov
inc
pop
pop
jecxz
jmp
or
cmp
jl
retf
cmp
scas
adc
ror
add
mov
pop
sbb
dec
in
sub
or
pushf
sub
out
fadd
repz
shl
pop
sub
pop
retf
call
(bad)
sbb
dec
push
push
cmp
adc
cmp
mov
xor
cmp
dec
mov
sbb
icebp
cmp
fld
and
add
repz
dec
add
cmp
nop
xchg
clc
adc
lods
pop
scas
cmp
ret
and
push
test
mov
dec
mov
xchg
cmp
jae
inc
dec
ret
push
cmp
or
imul
add
and
adc
jg
sbb
pop
in
pushf
push
inc
scas
cwde
jnp
dec
pusha
loope
arpl
fs
inc
or
jmp
push
mov
push
inc
into
inc
dec
mov
sub
sbb
inc
jb
xchg
push
inc
mov
jno
xor
sub
les
(bad)
aam
or
sub
push
cmps
adc
jne
mov
push
fs
pop
push
push
movs
stos
push
xor
les
dec
shr
or
push
mov
adc
pusha
imul
add
adc
and
adc
mov
push
inc
push
popf
dec
push
lea
push
pushf
inc
test
push
cdq
xchg
add
xor
in
fst
fldenv
pop
test
les
xor
pop
jno
sub
jo
lock
mov
jno
push
movs
push
mov
xchg
mov
ret
enter
mov
jb
add
pop
shl
jno
mov
cs
or
shl
push
rcl
add
mov
or
inc
xchg
mov
jg
push
test
or
loopne
retf
int
mov
jge
inc
xor
loopne
ret
jb
call
mov
xor
pop
movs
fwait
nop
inc
add
xor
test
sub
or
push
pop
push
or
adc
lock
mov
push
push
and
push
push
xchg
das
cmps
add
mov
cmp
push
stc
shl
and
test
sub
add
rol
adc
stc
xor
enter
aam
push
mov
test
adc
sbb
dec
push
in
cmp
dec
push
push
fs
pop
pop
pushf
pop
inc
xchg
push
dec
jmp
pusha
jmp
and
push
mov
add
dec
sar
inc
in
lods
push
leave
xor
scas
(bad)
adc
push
in
adc
inc
pop
push
or
nop
xchg
push
lods
sbb
jnp
fisub
adc
loop
mov
push
sub
les
adc
ffree
popa
jne
inc
les
test
fucomip
add
cmp
push
jecxz
xchg
ins
dec
mov
mov
adc
loopne
daa
pop
pop
enter
or
shl
int3
test
pop
adc
dec
push
fwait
dec
inc
sbb
or
mov
sbb
sbb
inc
inc
inc
(bad)
(bad)
(bad)
inc
inc
inc
(bad)
(bad)
(bad)
std
sbb
cdq
inc
or
les
xchg
test
sbb
fs
push
dec
mov
loope
adc
or
mov
push
aam
inc
ins
push
push
aam
or
add
inc
repnz
sub
and
inc
movs
push
scas
xor
mov
sub
xchg
xchg
xchg
out
xor
push
fs
pusha
nop
je
dec
mov
bound
in
cdq
dec
sahf
mov
mov
adc
and
cmp
push
xchg
sbb
popa
rol
daa
test
mov
(bad)
xor
and
and
sub
outs
int3
mov
and
mov
cmc
mov
or
mov
and
mov
adc
mov
jno
jmp
loope
inc
xchg
test
jo
jle
or
sahf
or
test
mov
mov
jae
pop
test
mov
mov
or
add
push
or
or
sbb
sbb
adc
aam
jo
inc
push
fimul
or
push
cmp
or
in
and
sbb
sbb
mov
aam
int3
and
popf
dec
fsubrp
add
shr
ret
enter
(bad)
mov
leave
xchg
std
(bad)
(bad)
mov
test
movs
mov
test
leave
out
loop
(bad)
pushf
std
xchg
std
inc
push
jbe
xchg
(bad)
xchg
cmps
fs
sbb
sbb
or
jl
(bad)
jl
dec
inc
dec
dec
je
xor
pop
inc
adc
fidivr
pop
push
les
push
call
and
(bad)
fnsetpm(287
sahf
xchg
jl
gs
(bad)
mov
xchg
inc
repnz
std
inc
jb
in
mov
repnz
cmps
push
in
in
sub
movs
in
in
(bad)
in
hlt
xor
(bad)
and
leave
enter
push
inc
ret
dec
pop
xlat
xchg
shl
push
add
call
lods
enter
push
push
sub
gs
mov
sub
inc
mov
test
sbb
shl
aad
je
arpl
push
xor
out
inc
xor
inc
xchg
inc
jns
test
inc
jb
jb
push
cmp
push
test
mov
test
lea
xor
and
dec
inc
push
fs
sbb
jle
sub
xor
mov
and
test
retf
pushf
int3
in
leave
add
fs
push
sbb
xchg
dec
out
dec
and
sub
xor
loopne
mov
jl
pop
cmp
add
pusha
dec
mov
mov
xchg
cmp
adc
adc
mov
pop
lahf
push
mov
push
xchg
xor
pop
in
inc
lahf
xchg
clc
lea
add
push
push
push
jmp
xchg
pop
mov
pop
push
mov
pop
or
sbb
xchg
pop
xchg
pop
adc
inc
ss
adc
push
imul
movs
je
enter
pusha
inc
xchg
adc
leave
jle
mov
mov
fdiv
scas
dec
add
or
pop
pop
repnz
in
lock
cmps
push
lea
in
and
sahf
mov
push
imul
inc
push
push
test
iret
mov
inc
push
and
ror
adc
pop
mov
mov
mov
adc
lds
cmp
mov
jmp
test
nop
pop
pop
outs
sub
std
dec
ret
xchg
mov
sub
fcom
xchg
cld
rcl
push
xor
aad
inc
pusha
cmp
push
mov
ja
sbb
out
jg
and
mov
cmps
add
mov
inc
sub
scas
cmp
add
adc
or
in
xchg
and
in
nop
jae
push
pop
adc
jns
outs
pop
jns
pusha
and
push
ja
popa
shl
repz
mov
pop
ret
mov
out
inc
pushf
lods
sbb
mov
test
aaa
and
xchg
lods
rcr
dec
adc
push
ret
cmps
sub
pop
sub
or
nop
xor
cmp
arpl
rol
or
dec
xor
xor
jmp
test
pushf
sub
test
and
xchg
fisttp
pop
cwde
cmp
mov
push
push
dec
sub
in
lea
push
dec
mov
fwait
push
mov
nop
xor
out
and
mov
push
arpl
inc
and
ret
nop
xchg
cld
xchg
arpl
nop
lea
mov
and
inc
stos
shl
adc
inc
add
jae
cmp
mov
and
cmp
je
cs
add
or
sub
or
and
cmp
pop
cmp
adc
inc
fadd
scas
ds
sub
inc
aam
inc
xor
xor
sbb
enter
cmp
xchg
sbb
lea
and
ja
mov
out
push
xchg
sbb
push
lods
sbb
(bad)
push
cmps
ja
daa
sub
out
outs
sbb
xchg
or
ficomp
js
add
pop
mov
dec
push
sbb
dec
sub
loope
outs
cmp
xchg
inc
mov
hlt
add
dec
daa
mov
jns
cwde
or
imul
fcomp
cmp
bound
xor
xor
inc
jmp
xchg
push
inc
std
(bad)
movs
inc
les
arpl
loop
xchg
xchg
pushf
sub
cdq
das
dec
imul
or
pop
and
(bad)
pop
ret
in
cmc
xchg
xor
icebp
push
scas
call
dec
jecxz
test
pusha
std
rol
xor
jge
scas
rol
and
lods
add
push
cli
pushf
test
add
add
(bad)
adc
rcl
sti
call
xchg
adc
pop
inc
inc
push
mov
xor
dec
dec
ds
fs
lods
in
call
mov
xchg
nop
adc
jg
cmp
sbb
cmp
pop
fld
call
(bad)
and
cmp
sbb
test
add
pop
xchg
adc
inc
jnp
mov
and
hlt
lahf
into
push
jb
sti
inc
lea
mov
lods
inc
and
adc
and
cmp
loopne
xchg
adc
add
cdq
mov
add
adc
scas
sbb
and
sub
xchg
add
adc
test
mov
and
das
pop
out
jne
loope
cmp
cmp
lock
aam
mov
rol
push
test
jno
inc
scas
popa
dec
xor
inc
movs
fistp
bound
add
test
cwde
inc
xchg
add
sub
into
int3
in
push
mov
jp
and
inc
pop
sahf
inc
stos
nop
pop
enter
inc
lock
jne
mov
lea
leave
in
sub
and
and
push
pop
inc
aaa
dec
in
mov
pop
sub
jne
xchg
pop
or
jne
add
mov
pop
setle
mov
jo
mov
sbb
mov
pop
nop
or
popw
pop
(bad)
ret
dec
nop
ucomiss
sub
inc
or
adc
ins
add
add
add
jg
mov
push
adc
mov
sbb
xor
inc
shr
jb
sti
add
adc
(bad)
aam
push
mov
shl
or
dec
mov
sar
sbb
xor
inc
cmp
sub
sbb
add
push
push
out
and
push
lods
outs
sbb
pop
sub
mov
xchg
inc
push
xor
jno
jge
je
leave
add
mov
(bad)
adc
rol
push
daa
sbb
loope
je
mov
test
inc
cmc
xchg
xchg
in
lods
xor
inc
push
sub
or
sbb
push
cmp
cmp
repz
adc
mov
inc
repnz
jl
icebp
cmp
icebp
mov
jmp
mov
add
mov
ins
movs
out
in
fcmovne
and
push
add
je
add
cmp
(bad)
dec
fs
mov
inc
cmp
inc
and
rol
sbb
sub
imul
xor
fwait
add
mov
inc
or
and
das
nop
pop
mov
xor
outs
fsub
sbb
xchg
xchg
pop
add
cmp
or
nop
dec
fs
stos
add
sub
and
mov
cmp
repnz
or
jmp
push
pushf
push
adc
sub
mov
loope
loope
push
inc
push
data16
and
sub
ins
adc
adc
push
push
sbb
push
shl
push
mov
add
inc
dec
cmp
mov
push
lods
jecxz
adc
mov
pop
sbb
add
push
jns
sbb
cmps
push
aam
pop
fs
sub
xor
jb
cmp
in
sbb
adc
or
mov
jne
xchg
cld
std
vmwrite
std
in
xor
bound
add
and
int3
(bad)
sti
aaa
adc
(bad)
js
daa
sbb
adc
cmp
mov
inc
add
sbb
arpl
pop
(bad)
test
push
rol
dec
sbb
xor
mov
mov
je
fs
leave
test
and
mov
fs
aam
dec
repnz
or
xor
mov
les
dec
push
test
mov
pop
inc
xchg
out
mov
xor
mov
xchg
adc
mov
in
add
sbb
sub
sub
mov
or
sahf
add
mov
and
or
push
cmp
mov
test
shl
xor
rcl
sub
adc
mov
in
adc
or
mov
xor
xchg
and
push
sbb
iret
pop
xchg
push
dec
xor
adc
jg
or
je
or
push
sar
repz
sub
mov
inc
sahf
jge
inc
mov
rol
push
pop
hlt
xchg
adc
js
leave
add
mov
add
xchg
test
adc
add
sub
inc
dec
ins
pop
and
sub
test
sbb
and
xchg
shl
add
loope
push
sub
fnstsw
dec
add
mov
je
push
add
xchg
lods
fsub
inc
jnp
sub
adc
punpckhbw
call
nop
dec
mov
ja
sub
add
repnz
add
and
je
jo
adc
and
cmp
add
sti
retf
fs
inc
xchg
add
dec
cmps
sbb
loope
adc
int3
xchg
add
push
xchg
into
add
mov
pop
je
and
mov
inc
add
sub
mov
xchg
mov
dec
mov
add
add
push
lea
scas
lds
std
push
and
shl
xor
dec
or
push
mov
jg
mov
add
popf
adc
cmp
mov
ins
add
pop
leave
cdq
(bad)
repnz
inc
and
mov
push
adc
mov
lahf
push
mov
inc
movs
inc
push
retf
int
jecxz
(bad)
adc
rcl
sub
add
inc
push
popf
ret
dec
mov
jbe
push
xchg
jns
adc
or
adc
aam
popa
(bad)
rol
or
les
add
pop
sub
loop
dec
jnp
mov
mov
(bad)
push
loop
inc
ja
fadd
pop
pop
jge
or
jge
nop
adc
mov
mov
(bad)
mov
xchg
xchg
pop
rol
cmp
cmp
dec
aam
push
lods
add
mov
and
or
rep
add
or
je
xchg
sbb
stos
cmp
mov
push
sub
add
push
push
mov
pop
leave
cmp
push
in
or
test
leave
dec
ins
inc
inc
scas
adc
sbb
mov
jo
repnz
dec
dec
mov
xor
xchg
test
push
repz
test
or
in
mov
xor
adc
mov
and
int
popf
(bad)
push
push
and
and
add
and
aam
inc
push
push
mov
or
or
lods
push
pop
cmc
js
leave
ficomp
jmp
rcl
xlat
dec
add
inc
xor
xchg
adc
leave
and
mov
dec
add
xchg
push
sub
call
push
jbe
or
xor
xor
xor
jmp
xchg
jbe
ds
mov
or
inc
sub
sub
shl
call
or
jbe
sahf
out
xchg
ds
or
xor
mov
pop
sub
inc
push
xor
imul
nop
sub
pop
jb
mov
xchg
and
dec
sbb
mov
jl
or
and
cmp
shr
xchg
pop
xor
es
scas
nop
or
nop
rcl
shl
leave
mov
or
cmp
adc
mov
sub
test
pop
dec
and
rcr
mov
xchg
adc
inc
add
xchg
rcr
push
mov
inc
cdq
rcl
add
inc
push
scas
add
sbb
jno
cmp
jg
or
push
cmp
pop
ins
mov
xor
add
push
cmp
cmp
and
inc
rcl
push
mov
mov
or
push
dec
dec
es
adc
inc
daa
and
and
ret
sbb
mov
mov
xchg
leave
sbb
mov
fist
or
pop
sub
pop
xchg
cmp
add
add
cmp
fild
push
mov
and
dec
imul
push
add
aam
xchg
xor
xor
dec
loope
test
test
push
xchg
push
fcmovnbe
nop
inc
jmp
push
daa
loope
mov
outs
and
popf
aam
aam
xlat
or
mov
push
fsub
mov
and
push
adc
iret
or
arpl
icebp
inc
or
adc
test
adc
push
jg
sbb
rcr
cdq
rol
push
stos
in
rcr
cmp
(bad)
cmp
ror
cdq
nop
add
shr
dec
push
clc
push
cmp
xlat
xlat
cmp
add
mov
fs
inc
mov
push
sub
out
jb
dec
xchg
rol
aam
test
scas
push
xor
cmp
dec
xor
inc
test
inc
dec
cmp
dec
lea
repz
mov
clc
pop
dec
add
mov
aam
push
inc
sbb
pop
ret
cmp
out
loopne
adc
and
jmp
loop
addr16
jl
cmp
adc
enter
(bad)
pop
in
add
add
push
mov
or
mov
nop
push
xor
sbb
xlat
loopne
jmp
xor
(bad)
je
xor
mov
imul
or
ficom
pop
popf
add
mov
ins
or
adc
pop
ror
inc
xlat
and
push
and
push
add
gs
lods
xchg
cs
mov
int3
push
push
sahf
push
sbb
aad
inc
pop
lahf
push
add
(bad)
sbb
in
mov
ja
jge
jae
call
fwait
scas
sar
leave
cs
xchg
popa
xor
les
add
scas
mov
add
fisttp
ret
pop
enter
add
aad
test
xchg
mov
add
cs
xchg
cli
sub
adc
mov
push
inc
ret
imul
stos
mov
test
js
lods
ret
dec
push
pop
xor
and
stos
inc
jmp
enter
cmc
ins
pop
add
xor
add
mov
int3
retf
xor
ret
(bad)
in
jmp
sub
mov
sbb
mov
add
enter
enter
dec
inc
sbb
mov
jbe
fdivr
arpl
push
or
jbe
push
dec
les
mov
push
stc
jecxz
enter
mov
(bad)
cmps
dec
scas
inc
loop
mov
addr16
adc
and
xor
mov
aam
xchg
iret
and
fmul
(bad)
adc
jne
mov
and
mov
mov
scas
jmp
pop
xor
jne
sbb
(bad)
cmp
mov
test
sub
movs
jmp
repz
popa
fs
xchg
jg
dec
push
inc
mov
sbb
fwait
sbb
std
call
test
inc
mov
popf
push
mov
pop
sub
inc
push
sbb
(bad)
(bad)
aad
mov
fmul
adc
or
popa
add
je
cmp
jg
xchg
fucomip
xor
add
je
xor
fild
inc
stos
mov
mov
cwde
cmp
(bad)
daa
jg
adc
test
pop
mov
dec
cmc
outs
mov
or
es
enter
push
je
jle
(bad)
sub
jne
mov
mov
mov
push
mov
pop
je
cmp
push
sbb
and
ror
mov
rsqrtps
sar
pusha
mov
pop
repnz
pop
test
xor
lods
in
inc
inc
nop
push
mov
jo
cwde
nop
adc
lods
or
les
popa
cdq
inc
shl
movs
dec
xchg
dec
lods
fldcw
push
add
loopne
mov
push
retf
mov
cmp
adc
dec
cmp
sbb
jno
mov
stc
test
push
scas
mov
retf
test
lahf
cld
xor
adc
rcl
test
xor
ds
into
push
mov
loopne
adc
loopne
push
jno
movs
repz
xor
fcomp
inc
je
inc
push
not
and
mov
adc
test
(bad)
mov
pop
jge
int3
mov
aad
movs
leave
sbb
mov
popa
jae
ret
add
iret
push
adc
add
enter
sub
push
movs
push
push
xchg
sub
arpl
or
stc
sahf
and
xor
add
dec
and
pushf
imul
in
pop
add
sbb
call
xor
or
fisub
fwait
inc
adc
stc
adc
xor
inc
call
outs
in
lea
and
xor
int
jnp
mov
sub
xor
(bad)
int
shl
push
call
cmp
inc
imul
in
inc
iret
dec
aaa
dec
and
push
push
shr
xchg
and
imul
xchg
fcom
js
sar
pop
jae
fldcw
js
pop
xor
add
inc
ds
push
mov
inc
pop
cmp
sub
inc
test
and
das
sbb
xor
fsub
adc
xchg
and
mov
xor
push
mov
cs
or
and
ret
add
mov
xor
inc
push
les
mov
cmp
cmp
fsubr
and
push
gs
lock
fcom
mov
(bad)
xchg
xor
adc
pop
push
inc
sbb
add
(bad)
cmp
shl
or
sar
ror
mov
rcl
xchg
inc
mov
int
adc
adc
inc
adc
xor
xor
xchg
and
or
test
scas
or
sub
fadd
mov
xor
xchg
mov
loopne
xor
adc
gs
fs
or
sbb
gs
in
jns
out
fmul
mov
sahf
out
pop
sub
or
inc
push
xchg
or
mov
or
movs
ss
ins
dec
xchg
jmp
xchg
sbb
loop
jecxz
mov
inc
cmp
leave
sbb
int3
add
cs
mov
push
mov
fiadd
leave
rol
test
add
mov
(bad)
mov
loope
pusha
ja
jno
mov
jbe
je
lea
int
fisttp
jne
add
jmp
int3
loope
leave
leave
xchg
lods
enter
push
retf
lods
inc
lods
inc
sbb
push
daa
aam
jmp
loope
inc
test
push
sbb
icebp
repz
inc
mov
xor
dec
or
xor
pop
and
adc
pop
sub
cs
cmc
cwde
arpl
pop
push
push
(bad)
cmp
fdivr
jle
or
add
mov
inc
dec
ret
lahf
push
add
mov
jge
mov
rol
mov
enter
sahf
test
add
enter
and
aad
pop
(bad)
js
(bad)
add
ins
mov
xchg
idiv
sub
xor
adc
mov
lea
pop
push
lahf
jnp
loope
add
and
loopne
adc
dec
inc
sahf
sbb
loop
inc
pop
mov
cmp
dec
repz
(bad)
sub
or
or
mov
xchg
in
inc
call
sub
mov
or
pop
jnp
call
lea
push
imul
mov
sub
call
mov
xchg
cmp
enter
leave
std
mov
push
cmp
dec
jg
and
add
mov
call
and
cmp
pop
add
gs
outs
ror
add
stc
xchg
sbb
mov
push
test
int3
enter
or
and
shl
mov
stos
test
cmc
pop
ror
push
dec
movs
lds
fs
sbb
les
test
int3
enter
and
pop
nop
or
shl
sub
xchg
cmp
movs
add
push
enter
xor
aam
and
(bad)
addr16
adc
mov
mov
rcl
stc
push
lea
fmul
or
lahf
mov
out
add
push
xchg
ins
out
stc
in
xchg
or
lock
push
(bad)
outs
xchg
sbb
xchg
les
ins
adc
mov
inc
mov
xchg
scas
push
int3
fdivr
repnz
dec
sbb
add
xchg
popa
push
xor
push
sar
sar
lock
les
xchg
sub
fadd
lahf
sub
and
adc
int3
push
test
jae
inc
enter
inc
push
(bad)
icebp
loop
rcl
xor
mov
stc
pop
sbb
xor
mov
pop
(bad)
rol
pop
imul
pop
push
ds
xor
push
mov
xlat
dec
dec
push
lods
dec
dec
leave
sbb
sbb
add
mov
sub
call
enter
or
xor
adc
cs
scas
add
mov
mov
mov
mov
inc
push
or
and
push
mov
add
iret
and
xlat
dec
iret
add
test
nop
or
les
push
or
into
jbe
sub
mov
je
dec
ja
pop
pop
xchg
jle
sbb
leave
addr16
xor
int3
cli
mov
and
xor
inc
test
sub
push
jbe
test
outs
sub
jmp
clc
stc
movs
cli
leave
and
cmp
fisttp
les
adc
sub
dec
lods
inc
dec
sbb
mov
ret
sbb
es
das
hlt
inc
mov
sbb
xor
inc
add
rcr
rol
inc
(bad)
xor
inc
sbb
(bad)
and
leave
mov
push
repnz
mov
push
mov
push
cs
dec
shl
(bad)
mov
xchg
push
into
inc
mov
jno
dec
(bad)
arpl
push
xor
test
movs
pop
cdq
les
adc
cmps
xchg
mov
movs
nop
xchg
cmp
or
stos
xor
daa
pop
and
or
movs
sbb
pop
rcr
fwait
push
test
(bad)
and
and
and
adc
cs
and
cmp
shr
adc
sub
sub
and
cmp
dec
(bad)
xchg
xor
inc
dec
add
mov
jo
mov
test
fadd
cs
mov
ror
js
push
mov
dec
mov
rcl
mov
cmp
adc
bound
xchg
stos
mov
jbe
xor
nop
sub
xor
or
sbb
or
adc
or
or
lods
cmp
sbb
imul
push
ss
inc
in
mov
cwde
push
fadd
or
or
or
push
inc
add
push
popa
gs
sbb
mov
xchg
mov
mov
xor
fild
mov
cmp
xor
jae
(bad)
xchg
push
push
sar
jnp
aam
into
(bad)
outs
pop
jge
xor
pop
mov
or
xor
mov
jg
push
das
adc
push
xor
(bad)
and
mov
mov
xor
enter
sub
fs
xchg
dec
adc
jge
jb
jmp
adc
or
test
push
fisub
and
ja
(bad)
mov
div
rol
sbb
mov
and
lods
adc
dec
push
ss
cwde
add
mov
pusha
aam
cmp
jnp
sub
pop
xor
out
xchg
or
cs
enter
xor
mov
xor
inc
fist
mov
push
and
add
and
add
mov
loope
inc
lahf
adc
mov
aas
shl
sbb
mov
sub
pop
xor
add
xchg
push
mov
xchg
push
pshufw
enter
dec
inc
add
jno
sbb
ret
ret
mov
xchg
fcomp
ror
ret
enter
push
int3
rol
int
sub
shr
inc
xchg
sar
sbb
int3
leave
jb
stos
sub
sbb
fsub
cwde
mov
movs
dec
push
push
pusha
xchg
das
inc
repnz
mov
call
inc
xlat
mov
xchg
push
aam
aam
jmp
sub
adc
(bad)
and
jge
and
push
pop
jg
pop
dec
jb
sub
pop
lea
xchg
sbb
cmp
push
inc
adc
adc
dec
cmp
cmp
and
push
nop
xor
pop
xor
inc
cdq
loopne
add
cmp
sub
adc
lods
xor
push
adc
or
in
push
rcl
fcomp
sub
pop
and
retf
ficom
mov
sub
push
xchg
mov
sahf
cmp
cmp
mov
(bad)
fwait
add
adc
add
add
jns
adc
or
sbb
test
push
mov
sbb
or
pop
cld
jne
xor
jno
pop
cs
or
dec
pop
mov
dec
sub
test
xchg
test
add
aaa
clc
loopne
dec
jmp
adc
repnz
pop
ret
push
adc
jns
and
or
fs
in
cmp
movs
jnp
push
xor
ins
mov
push
cmp
dec
cmps
adc
add
mov
and
in
mov
push
push
dec
mov
sbb
test
pop
lock
add
repnz
sbb
jno
fidivr
xchg
sub
cmp
jne
mov
xchg
and
fist
out
js
(bad)
pop
mov
mov
les
sbb
push
push
xor
jg
xchg
mov
mov
adc
inc
adc
adc
call
sub
stc
or
gs
xchg
rol
inc
sub
pusha
xor
push
ins
xor
or
add
je
jno
inc
test
pop
jmp
(bad)
aad
data16
push
in
dec
push
inc
sub
test
fstp
dec
mov
jmp
ret
ret
add
fisubr
sbb
fcom
jb
popa
push
shr
and
std
inc
in
call
inc
and
xor
sar
jmp
push
adc
movs
mov
sub
jns
dec
and
xor
mov
popa
jb
rol
cwde
adc
ins
sbb
sub
sub
(bad)
sub
adc
dec
dec
sbb
sbb
mov
arpl
push
cli
movs
fisub
xor
adc
loope
and
rol
test
sbb
dec
add
xchg
shl
ins
shl
jge
int
icebp
cmp
add
add
or
and
add
rcr
add
lods
xchg
dec
or
pop
mov
sub
fbld
and
push
push
and
rcl
sar
mov
push
push
call
mov
or
in
and
addr16
je
or
dec
adc
aam
test
(bad)
inc
or
push
mov
xchg
dec
jb
clc
and
jle
cdq
in
jl
jl
or
mov
jle
cmp
je
add
jmp
pushf
cmp
loope
int3
add
dec
out
out
inc
mov
ins
cmp
(bad)
add
sub
je
sub
(bad)
adc
mov
inc
fdivr
push
mov
and
pop
in
mov
inc
and
cmp
jne
push
push
shl
js
mov
add
or
add
add
call
nop
lods
div
ret
add
jb
inc
adc
popa
adc
iret
cmp
inc
daa
call
pushw
or
ret
and
mov
pop
push
bound
push
inc
sbb
sub
lahf
adc
mov
cmp
scas
jmp
sbb
jbe
in
call
inc
push
mov
adc
add
adc
lahf
dec
inc
bound
add
add
sbb
hlt
xchg
push
or
jecxz
icebp
cmp
ins
in
fst
mov
jge
cmp
cmp
lea
aaa
adc
or
setne
pop
leave
je
push
and
cmp
adc
adc
sub
pop
or
sbb
mov
add
xor
loopne
inc
in
call
loopne
or
adc
shl
aaa
mov
adc
rol
pop
cmp
test
or
push
pop
pop
pop
dec
pop
mov
idiv
bound
mov
push
mov
jbe
push
cli
mov
pop
rcr
or
loopne
push
inc
mov
pop
sub
inc
cld
dec
and
inc
arpl
lahf
fsqrt
dec
inc
mov
test
cmp
add
or
in
sbb
dec
or
mov
and
nop
mov
mov
add
leave
push
sub
or
sub
adc
xor
push
shl
mov
jl
cmp
(bad)
leave
cmp
cmps
imul
lea
ret
pop
pop
push
push
cmp
vmread
mov
mov
jns
sbb
or
push
push
(bad)
(bad)
scas
pop
add
and
scas
addr16
mov
dec
add
add
rol
adc
call
dec
stc
mov
nop
sub
mov
in
xor
push
repz
in
loope
inc
mov
cmp
bound
jne
ror
adc
xor
pop
js
outs
sub
push
popa
jno
loopne
add
das
push
popa
adc
pop
or
dec
dec
dec
ins
mov
dec
mov
mov
adc
and
adc
in
dec
xor
mov
cdq
cmp
es
mov
jl
inc
cmp
mov
push
xor
leave
add
add
xchg
fmul
fstp
xor
mov
mov
outs
xor
imul
bound
lods
pop
xchg
jne
mov
push
adc
nop
push
cmp
mov
sub
loop
js
mov
outs
add
out
sbb
sub
loope
fistp
or
je
ror
mov
cmp
lods
xchg
shr
pusha
cmp
jns
stc
stc
add
push
push
sbb
push
inc
bound
call
xchg
adc
clc
fmul
cwde
mov
dec
push
add
jo
mov
shl
sbb
adc
aaa
add
adc
xor
stos
mov
xchg
call
and
loopne
add
or
add
xchg
xchg
call
sahf
and
or
or
xchg
or
and
or
adc
jecxz
dec
jnp
xor
(bad)
push
push
fdiv
lods
rcl
xor
sbb
stos
rol
fcomp
xchg
cmp
push
xor
xchg
jmp
shl
add
loop
test
test
pushf
or
loope
sbb
push
loopne
add
xchg
pop
pop
mov
mov
push
sub
out
and
add
and
mov
add
xor
repz
cmps
aad
mov
repz
iret
xchg
imul
sbb
ins
pop
push
ja
dec
add
jge
ja
jae
int3
push
inc
sub
fcomp
push
mov
int
dec
inc
xor
sub
xor
enter
mov
ret
jnp
cwde
lea
lds
mov
movs
leave
int
sets
loopne
fcom
cmc
adc
push
cwde
xchg
ret
dec
mov
fimul
test
aaa
test
cdq
cdq
loope
outs
cmp
dec
loopne
sbb
mov
pop
adc
xor
add
mov
aas
fwait
sar
and
or
jmp
pop
call
mov
inc
add
xor
in
and
push
fcmovnb
inc
sar
xchg
fdivr
sub
loope
test
adc
cmc
rol
dec
sub
mov
xor
pop
rcl
xor
mov
lods
cmp
and
inc
pop
pop
std
sbb
mov
push
enter
push
add
push
test
test
add
inc
lock
jle
mov
rol
rcr
inc
repz
popf
sub
jb
jbe
into
push
dec
and
stc
in
popf
test
cmp
fwait
arpl
pusha
add
dec
inc
sub
int
lahf
pop
pop
jecxz
aam
fcmovnu
xchg
scas
or
dec
add
push
xor
int3
cmp
add
lods
ffreep
sub
pop
or
push
sbb
push
mov
jmp
lods
xchg
mov
outs
loopne
mov
ret
das
pusha
jmp
scas
add
call
pop
cli
lods
push
fild
fstp
push
xchg
mov
adc
mov
push
hlt
inc
inc
loopne
es
xchg
jl
sar
cmp
mov
js
pop
inc
inc
mov
inc
mov
in
retf
inc
or
push
sar
push
push
pop
sub
xchg
ss
add
push
inc
outs
mov
add
jbe
adc
or
mov
add
sbb
add
es
adc
pop
cmps
bound
stos
or
sar
add
push
adc
mov
not
(bad)
add
pop
shr
dec
mov
push
fstp
add
inc
mov
pop
aad
sub
and
adc
(bad)
fistp
push
test
cld
inc
xor
aam
call
jp
jl
les
movs
inc
inc
in
sbb
cdq
aam
popa
xchg
xlat
adc
fisttp
fwait
jmp
inc
dec
movs
mov
retf
adc
sbb
addr16
mov
retf
add
mov
jle
mov
js
lock
ins
inc
pop
push
push
fs
data16
frstor
adc
(bad)
repnz
inc
imul
mov
mov
pusha
mov
sahf
cmp
arpl
sbb
daa
cmp
shl
sar
stc
mov
add
dec
cs
xchg
movs
xchg
std
cmp
push
fs
call
neg
xchg
mov
mov
jle
mov
sbb
and
fld
ja
push
lahf
push
jp
jle
mov
ror
add
fsub
jmp
popf
frstpm(287
push
mov
call
sahf
nop
add
adc
nop
sub
push
inc
nop
jo
test
jo
mov
aam
inc
rcl
aaa
lods
(bad)
add
push
xor
sbb
cmc
mov
xchg
scas
rol
movs
dec
add
xchg
in
jge
push
or
pop
or
pushf
xor
cmp
fdiv
inc
scas
mov
mov
clc
cmp
fwait
push
push
mov
stc
push
adc
adc
add
js
push
addr16
push
sub
pop
inc
fst
or
push
pusha
push
mov
call
or
loopne
ins
aad
sbb
retf
jmp
adc
dec
mov
icebp
(bad)
and
outs
or
dec
mov
in
mov
jnp
push
outs
out
into
mov
repnz
jl
pushf
pop
or
cmp
jbe
ficom
xchg
adc
mov
or
sub
in
movs
in
cmps
add
nop
and
fcomp
cmp
int3
test
lea
stc
add
(bad)
jmp
or
sub
xlat
pop
mov
dec
fsubr
fistp
adc
inc
xor
mov
std
cmps
cmp
mov
cmps
cmp
jo
and
imul
add
in
push
imul
cmps
inc
mov
cdq
or
int3
ins
sub
push
shr
xchg
pop
outs
lods
jecxz
arpl
imul
lahf
xchg
pop
adc
(bad)
add
or
inc
add
pop
and
mov
cmp
loopne
cwde
enter
shl
pop
cmp
add
or
int
and
cmps
and
enter
aaa
ret
mov
das
nop
or
or
imul
in
adc
inc
xchg
pop
inc
or
xor
sbb
mov
or
cmp
clc
mov
or
mov
lea
scas
lds
cmps
out
or
cli
inc
pusha
movs
mov
or
out
inc
pusha
sub
in
dec
rep
add
cmps
and
ins
adc
fnstsw
scas
sbb
in
outs
nop
cld
and
mov
or
jno
popa
test
sbb
stos
or
pusha
dec
mov
sbb
add
sub
cld
add
and
sub
and
cli
daa
mov
cwde
mov
adc
mov
inc
add
xchg
inc
jle
cmp
aam
add
xchg
sbb
in
(bad)
call
repz
mov
enter
gs
lods
les
sub
int3
push
fs
lea
and
dec
xchg
jmp
inc
add
adc
pop
out
aad
adc
cmp
and
nop
jg
adc
cld
mov
sbb
das
or
pusha
test
sahf
xchg
int3
or
or
(bad)
les
out
inc
add
and
bnd
pop
test
pop
ds
jle
outs
push
rcl
cld
sub
loopne
sub
out
das
nop
or
pop
and
add
sbb
pushf
dec
popf
mov
jle
imul
or
mov
or
add
rol
cs
lods
aaa
(bad)
sub
pop
add
cmps
mov
mov
and
push
pop
push
xor
push
mov
(bad)
push
ss
mov
(bad)
sti
sbb
add
ficomp
sbb
sub
lock
adc
and
cmps
mov
mov
add
push
jno
ja
(bad)
push
je
cmp
or
mov
jb
and
mov
adc
and
mov
aas
je
sbb
adc
fs
xchg
mov
jmp
pop
inc
popa
sub
adc
es
dec
pop
and
cmp
fimul
mov
sub
add
rol
repnz
outs
(bad)
and
sar
add
(bad)
jmp
push
std
fnstcw
jbe
mov
xor
arpl
repz
and
pop
fist
xor
pop
frstor
fmul
fisubr
outs
cmp
fadd
add
(bad)
jnp
lock
pop
adc
inc
sub
shl
shl
cmp
sub
call
mov
add
add
mul
and
inc
cmp
es
mov
dec
adc
add
fnstsw
dec
in
or
data16
add
loop
mov
mov
jo
cmp
sub
add
leave
add
arpl
adc
add
mov
mov
mov
push
sbb
mov
in
xchg
add
into
and
jb
or
sub
lahf
call
out
sbb
or
js
sbb
adc
sbb
pop
aam
cli
cwde
push
mov
cmp
pop
dec
sbb
push
mov
add
inc
pop
cwde
lahf
sbb
mov
fimul
fidiv
xchg
pop
dec
hlt
jns
add
pop
push
pop
and
or
cli
inc
shr
mov
push
or
cmp
retf
jle
xor
cmp
pusha
cmp
and
push
enter
and
sub
enter
and
and
xchg
adc
lock
pusha
repz
cmp
iret
adc
cmp
into
data16
xor
inc
sub
pop
push
and
and
push
enter
xchg
cmp
or
sub
inc
xor
pop
add
or
push
add
xor
mov
and
es
push
add
icebp
or
inc
jmp
adc
mov
jl
gs
outs
pop
xchg
aas
and
add
adc
shr
or
fcomi
fsubr
or
pop
pushf
mov
ret
or
push
sbb
int3
and
jmp
jle
jmp
mov
(bad)
inc
nop
adc
sub
pop
sbb
xlat
jb
cs
or
stos
cwde
ret
sub
rcl
or
ficomp
and
mov
dec
or
sar
sar
sar
(bad)
adc
fcom
imul
and
leave
aam
and
sahf
mov
out
sub
sub
add
or
push
mov
cwde
adc
and
and
test
movs
jmp
mov
mov
add
(bad)
loopne
jb
sbb
ret
sub
test
sub
xor
stc
call
sbb
dec
pop
mov
mov
cmps
loope
and
xor
or
jecxz
ja
pop
xor
cmp
mov
xor
cmp
outs
mov
imul
pushf
cdq
and
push
xchg
sub
or
sahf
push
xchg
sbb
dec
ret
out
stos
sub
pop
lods
sbb
pop
or
push
fcomp
add
inc
mov
adc
inc
loope
or
test
jne
adc
ss
or
push
dec
inc
je
gs
(bad)
jmp
pop
pop
cmp
fdivr
jmp
lds
out
out
sbb
push
adc
repz
inc
xchg
push
sbb
or
xchg
add
sbb
loopne
pusha
lock
aad
inc
retf
dec
in
fimul
mov
inc
daa
lock
sub
pop
jbe
add
sar
call
jecxz
mov
pop
jge
dec
pop
dec
fsubr
inc
stos
adc
mov
out
mov
push
jo
pop
sbb
inc
movlps
pusha
out
pop
cwde
push
adc
cmp
sub
cmp
movs
mov
inc
add
adc
rcl
dec
adc
aas
retf
call
mov
add
or
mov
sub
xor
rol
mov
xor
into
mov
in
es
sub
lahf
sub
inc
adc
and
add
add
movs
shr
inc
rol
xor
add
daa
(bad)
fdiv
and
daa
sbb
push
sbb
inc
xchg
inc
or
add
scas
inc
inc
fisttp
sub
adc
pop
sub
or
inc
push
dec
pop
nop
cmp
push
jl
adc
pop
adc
and
inc
pusha
popa
and
sbb
or
lea
dec
cdq
or
or
sbb
lea
lock
mov
add
sub
or
lods
inc
push
pop
out
adc
aaa
je
jmp
sbb
arpl
pop
repnz
(bad)
push
fs
inc
dec
pushf
and
mov
or
daa
cwde
inc
adc
adc
mov
add
xor
pusha
dec
(bad)
push
stc
inc
and
rol
push
lods
push
sub
fs
sbb
xor
mov
mov
push
sbb
cmp
test
jp
push
cmp
add
and
sbb
adc
inc
and
xchg
or
loopne
ds
jo
add
mov
xchg
sbb
mov
mov
xchg
mov
push
dec
mov
adc
or
jno
pop
xor
arpl
jle
or
mov
or
es
jno
mov
sbb
mov
jns
push
call
jle
push
add
cmp
imul
jo
add
and
loope
mov
ror
sbb
ja
sub
mov
fadd
and
push
xor
adc
jo
(bad)
daa
sub
jmp
push
mov
outs
mov
jno
mov
test
mov
dec
dec
and
mov
in
mov
cmp
pop
add
push
adc
shl
nop
or
push
mov
xor
push
push
into
push
test
pop
sub
inc
push
push
mov
adc
sbb
inc
or
lods
mov
adc
mov
sahf
sub
pop
push
pop
ret
or
adc
xchg
inc
add
pop
lock
sahf
add
add
or
sbb
mov
pop
clc
enter
inc
lock
es
add
addr16
ins
mov
mov
jmp
in
add
and
in
lods
sub
sub
or
push
out
mov
test
nop
sbb
test
out
or
aam
push
inc
inc
inc
int3
int3
push
sbb
test
lock
mov
lods
in
pop
and
pmulhw
mov
adc
cmp
ins
outs
push
adc
add
mov
or
rol
out
sbb
jns
rcr
sar
call
mov
(bad)
xor
push
sub
bound
jae
pop
xor
jno
push
jmp
mov
push
cmp
dec
dec
add
xchg
fs
mov
dec
rol
test
xlat
sbb
ins
sub
movs
mov
push
dec
lea
and
xchg
xchg
sahf
outs
pop
js
cwde
push
push
dec
pop
(bad)
int
push
fiadd
mov
rcl
fs
das
fcom
jl
lods
pop
mov
cmp
and
mov
or
sub
mov
dec
sub
pop
mov
ins
pop
enter
shl
jmp
dec
and
nop
xchg
and
inc
or
gs
mov
dec
ins
pop
fxch
movs
aam
push
mov
push
sub
add
test
ss
cmp
pop
adc
inc
mov
dec
ror
adc
and
mov
jl
dec
dec
xor
fcomp
sub
clc
adc
icebp
lea
push
test
add
xor
cmp
call
or
cmps
or
lock
xchg
cwde
and
pop
pusha
out
add
sbb
and
repz
les
and
inc
sahf
mov
add
(bad)
int3
inc
nop
pusha
popf
shl
xchg
dec
inc
or
mov
adc
jmp
push
add
cmp
mov
dec
jno
sahf
or
aaa
pop
arpl
xchg
mov
push
sbb
cmp
sub
add
imul
dec
inc
mov
dec
xor
dec
or
and
sahf
test
jb
add
dec
jo
adc
test
dec
adc
out
pop
push
xor
xor
jno
push
lods
test
test
scas
lock
loopne
scas
inc
mov
loop
sar
push
iret
pop
and
sbb
inc
or
dec
jmp
cs
fwait
push
sub
mov
dec
push
mov
xchg
movs
iret
repz
sub
or
hlt
cmp
cwde
sub
sbb
pop
fwait
rol
enter
jns
adc
sbb
mov
inc
lods
sbb
sub
dec
test
xchg
add
cmp
loop
pushf
xchg
or
int3
fs
mov
xor
cld
leave
add
inc
enter
add
adc
xor
outs
push
pusha
mov
and
bnd
push
loopne
daa
sbb
cmps
shr
adc
sbb
stc
mov
daa
dec
loopne
test
das
inc
or
jnp
adc
xor
add
imul
aam
dec
ja
push
cwde
sub
sbb
push
or
or
mov
(bad)
or
jbe
and
stos
xchg
ds
nop
lock
cmp
add
bound
aas
mov
lods
or
mov
add
je
int3
rcpps
mov
pushf
mov
sub
int3
aaa
(bad)
loopne
add
mov
xchg
movs
sub
and
push
mov
xor
or
adc
test
mov
sub
enter
adc
mov
dec
push
ret
add
push
push
aas
or
fs
in
cli
cmp
push
or
in
ret
lea
or
repnz
cmp
ror
jb
pusha
push
pop
in
add
(bad)
pop
inc
sbb
sbb
xchg
push
lods
dec
push
pusha
adc
and
sbb
cdq
or
sbb
sbb
popf
mov
xor
mov
xor
dec
repnz
push
rol
push
adc
mov
and
loopne
xor
(bad)
push
xchg
pushf
xor
adc
cmp
jbe
imul
ss
sbb
movs
cmp
or
fcmovnbe
popf
in
dec
push
rcr
sbb
or
leave
jns
cmc
sbb
cmp
inc
stos
cli
ret
push
bound
sbb
shl
fstp
adc
adc
fimul
in
pop
mov
jge
push
cmp
inc
and
cs
pop
test
fwait
push
test
mov
inc
mov
add
sub
push
lods
je
add
movs
pushf
cmp
mov
scas
aas
push
xchg
xlat
jle
push
(bad)
and
mov
add
push
xor
and
dec
add
add
xchg
not
inc
dec
fstp
or
push
xor
rol
and
into
(bad)
mov
push
sbb
scas
jl
ds
enter
jmp
(bad)
fnstsw
dec
fdivr
cmp
mov
jnp
push
in
nop
xor
xchg
adc
sub
fwait
pop
cwde
sahf
push
dec
mov
stos
cmp
jbe
lahf
inc
mov
or
mov
mov
ins
rol
mov
push
sub
adc
in
movs
out
xor
in
call
or
cmp
sub
mov
cmp
lea
cmps
mov
add
and
fs
and
pop
adc
and
mov
mov
inc
add
mov
fisubr
out
retf
stc
inc
sbb
push
sub
cwde
fst
repnz
ins
cmovs
mov
and
xor
lahf
add
ror
mov
lods
pop
call
sbb
push
dec
sub
scas
pop
and
push
(bad)
and
lods
mov
mov
or
(bad)
adc
pusha
nop
test
add
js
mov
push
adc
xchg
in
dec
sbb
jb
out
lods
mov
jmp
imul
in
add
sbb
aam
xor
lods
icebp
sbb
les
sbb
std
or
rcr
pop
xlat
jbe
shl
aam
pop
sbb
push
bound
mov
push
out
mov
mov
jle
jl
and
xchg
sar
or
push
stc
pop
lea
push
xchg
add
xor
xchg
and
sub
ror
call
iret
inc
sub
push
adc
push
fld
or
leave
dec
dec
ret
add
ror
xchg
cmp
test
inc
movs
add
jo
jbe
add
sub
add
push
lea
and
or
sub
sbb
push
and
lea
dec
bound
xchg
ins
shl
test
mov
xor
ins
lods
dec
mov
push
cmps
cli
pop
fs
(bad)
imul
push
or
push
test
xchg
xor
stos
pop
inc
pusha
or
icebp
test
xlat
pop
dec
add
jg
ss
add
ret
in
inc
shr
arpl
sub
push
mov
and
aas
dec
pop
jb
jg
add
or
fld
adc
dec
das
cmp
mov
adc
test
mov
mov
add
jg
xor
leave
nop
push
pusha
sbb
nop
cmp
cdq
xor
push
adc
jecxz
int
push
dec
add
mov
arpl
mov
mov
push
(bad)
push
pop
jne
call
xchg
outs
sbb
xor
sub
push
mov
cli
push
loopne
xchg
mov
rcr
xor
call
aad
and
and
or
xor
bound
ins
pop
cmp
xchg
les
retf
or
gs
mov
std
pop
add
mov
std
out
adc
adc
cwde
pop
push
or
sbb
inc
push
sbb
cmp
mov
mov
pusha
adc
cmp
xor
nop
xchg
add
es
sub
push
pusha
data16
pushw
fadd
pop
loope
sbb
sub
xor
adc
or
mov
into
lods
push
or
and
or
add
sub
loopne
sub
or
mov
jl
iret
test
xchg
push
leave
icebp
adc
push
mov
shr
ds
test
xor
sub
rol
pop
push
test
xchg
mov
adc
xchg
inc
or
adc
jle
and
or
inc
push
dec
jmp
cmp
push
icebp
(bad)
dec
test
mov
das
rcl
push
ret
adc
mov
lods
nop
test
sbb
xor
inc
(bad)
cmp
rcr
and
mov
stos
add
adc
jg
adc
push
xchg
ret
push
xchg
or
shl
retf
stos
push
ret
mov
je
iret
fs
push
adc
add
xor
jae
shr
mov
or
inc
mov
inc
and
adc
cmp
icebp
xchg
push
lods
in
in
jmp
mov
xchg
mov
fdiv
xchg
sub
aad
add
xor
pop
int3
nop
sub
add
adc
ds
cmp
push
cwde
adc
loopne
mov
sar
inc
push
inc
adc
push
movs
pusha
push
or
movs
je
and
loop
cmovge
push
add
nop/reserved
mov
push
and
enter
push
xor
sbb
mov
inc
popa
sbb
add
sbb
or
and
add
jg
lahf
out
inc
sbb
jmp
dec
nop
dec
call
push
xchg
daa
inc
loop
pusha
into
xchg
push
adc
pop
sub
or
sub
or
enter
test
mov
mov
and
and
wbinvd
or
ret
push
inc
xchg
fsubr
jbe
jno
fs
or
sub
add
sbb
add
jecxz
pop
pop
lds
scas
scas
loopne
push
adc
push
pop
xor
jo
xchg
add
mov
dec
add
push
outs
adc
sbb
sub
mov
mov
cmp
sub
test
popf
and
pop
test
cld
mov
pushf
cmp
lock
mov
adc
rol
jo
sbb
xchg
sub
test
fadd
pop
loopne
sbb
sbb
fs
mov
mov
adc
cmp
and
jg
pusha
popa
and
arpl
sbb
add
pop
shl
add
lahf
adc
mov
sbb
call
fsub
push
and
and
jae
addr16
and
cmp
xchg
inc
adc
cmp
shl
sbb
inc
cmp
or
push
mov
repnz
or
mov
inc
or
xor
push
nop
and
leave
aam
outs
xchg
adc
push
add
push
loopne
bound
arpl
in
inc
adc
shl
mov
dec
call
sub
xor
jnp
(bad)
popa
(bad)
loopne
lea
xchg
pop
or
push
xchg
stos
mov
add
in
shr
stc
in
jge
sbb
and
mov
dec
and
nop
inc
jb
(bad)
pop
or
add
fsub
inc
inc
stos
in
jg
xchg
add
fstp
or
loopne
mov
mov
jg
pop
jne
mov
add
mov
inc
push
push
xchg
dec
or
mov
dec
sub
dec
cmp
ret
sub
in
xor
jae
mov
cwde
out
xchg
xchg
sbb
xchg
icebp
adc
int3
inc
or
or
jmp
or
cmp
or
cli
pushf
enter
add
pop
adc
dec
cmp
mov
sti
mov
jl
mov
fcmovu
mov
lahf
and
(bad)
loop
ss
add
push
std
test
popa
cdq
jmp
mov
adc
lea
pop
adc
xlat
repnz
cdq
je
(bad)
push
test
add
mov
and
or
repnz
push
ret
les
popf
pop
dec
cmp
xchg
inc
jl
lea
push
xor
mov
loopne
retf
pop
jl
adc
xor
pusha
add
push
inc
arpl
sbb
test
leave
adc
pop
dec
cmp
cmp
sldt
cmp
sbb
cmp
and
xchg
push
loopne
sub
pop
push
pop
pop
cmp
push
addr16
movs
pavgb
xchg
add
adc
jo
test
or
outs
call
movsx
call
jne
and
pop
mov
inc
out
pop
and
repnz
xor
cmp
sub
out
add
mov
add
inc
pop
xor
inc
xchg
jl
iret
les
popa
dec
ret
xor
or
pop
es
jl
lods
mov
inc
lea
xchg
inc
jne
push
bound
dec
add
mov
and
pop
push
add
or
and
or
or
xchg
arpl
sbb
inc
and
push
xor
and
and
add
fisttp
test
cs
mov
jg
js
mov
jns
test
gs
dec
push
in
data16
adc
add
enter
call
mov
popa
sub
out
sub
repnz
adc
jl
and
sbb
xor
inc
add
xchg
cmp
sub
push
push
cmp
leave
xchg
pop
pop
push
add
cwde
retf
inc
xchg
sub
cwde
test
or
jmp
xchg
xchg
push
stos
sbb
pusha
sbb
adc
in
enter
mov
pop
repnz
jbe
push
push
inc
and
jnp
add
inc
add
add
test
test
push
and
pop
pop
push
pop
repnz
ror
push
pop
enter
push
cmp
inc
cmovg
fistp
inc
adc
cmp
push
nop
cmp
push
nop
das
in
adc
mov
and
pop
mov
gs
mov
dec
sbb
fsub
fsub
(bad)
jne
sbb
jg
and
movs
movzx
imul
add
movs
jl
adc
inc
and
xchg
sub
rcr
dec
cmp
sub
in
and
fs
lsl
ror
data16
cmp
repnz
out
jmp
mov
push
dec
pop
aam
test
inc
and
adc
retf
fistp
push
es
rol
sbb
retf
stos
and
adc
sub
pop
rol
(bad)
cdq
cld
aas
test
inc
loop
jne
cmc
push
ror
outs
loop
cmp
retf
rcl
(bad)
sub
push
not
imul
rol
ror
mov
test
dec
adc
imul
and
rep
js
mov
mov
xchg
add
frstor
and
pop
jmp
shr
setnp
ins
(bad)
push
adc
mov
adc
jb
nop
sar
ret
test
lea
and
sub
inc
lods
sbb
xor
push
dec
daa
sub
xchg
dec
sbb
rcl
enter
lahf
test
call
pop
xchg
push
dec
(bad)
movs
ror
adc
or
lock
shl
nop
xor
mov
pushf
lea
or
xor
xor
mov
test
inc
push
cmp
mov
enter
adc
and
xchg
jl
xchg
dec
call
push
and
in
sub
cwde
lods
cwde
and
xor
mov
cli
or
sar
jmp
sub
jmp
repnz
movs
pop
out
enter
xchg
xchg
pop
adc
inc
mov
dec
sbb
push
adc
mov
or
loopne
mul
retf
xchg
test
add
dec
adc
mov
xchg
xchg
inc
pop
inc
mov
bound
ficomp
push
mov
inc
mov
(bad)
push
mov
inc
xchg
bound
mov
inc
mov
and
sbb
pop
ins
mov
and
inc
mov
xchg
mov
inc
test
mov
mov
mov
inc
and
sbb
inc
mov
mov
shl
jmp
and
adc
mov
loop
mov
mov
fnstcw
std
inc
std
cmp
cmp
and
or
push
mov
mov
call
mov
adc
enter
jo
(bad)
push
dec
in
xor
(bad)
pusha
aam
mov
pop
gs
and
les
and
jl
xor
sub
or
ret
shl
push
add
pop
test
inc
retf
out
and
cmp
lea
aas
lea
cmc
push
and
ins
pop
xor
add
jmp
sbb
mov
inc
push
xchg
pop
jnp
sti
or
pop
fdiv
ins
pop
lock
or
xchg
mov
sbb
push
mov
or
fs
xchg
stos
mov
nop
inc
dec
lea
and
mov
and
xor
xchg
add
add
arpl
clc
std
shl
std
pushf
dec
xchg
sbb
inc
and
enter
lock
sahf
fdivr
sar
sbb
faddp
dec
lahf
inc
scas
xor
ret
adc
imul
and
cdq
mov
mov
cwde
std
nop
std
mov
(bad)
adc
aam
jbe
jnp
js
mov
movs
push
cwde
sub
and
add
fnstsw
adc
push
sahf
loopne
sbb
es
sar
mov
repnz
daa
mov
inc
inc
inc
dec
jo
pusha
xor
outs
je
and
push
dec
push
dec
dec
ficom
rcl
dec
dec
loopne
arpl
daa
inc
dec
daa
scas
fs
pop
push
inc
adc
shr
in
pop
enter
mov
cdq
sbb
cmp
xchg
cmc
lea
sub
enter
push
jo
push
mov
mov
cmps
sub
cmp
popa
inc
dec
outs
jne
xor
ret
clc
jns
(bad)
imul
bound
sbb
es
and
mov
mov
icebp
cmp
fcom
nop
xchg
xchg
or
cmp
adc
mov
pusha
inc
and
mov
mov
xor
push
test
enter
pop
js
adc
ror
es
mov
gs
outs
rol
push
jl
sbb
imul
dec
or
add
jp
add
cmp
popf
jge
or
adc
and
rcl
inc
pop
xor
mov
std
jp
add
add
inc
ret
push
call
or
and
sbb
test
inc
adc
adc
nop
nop
enter
cs
test
pop
or
movs
or
xor
inc
push
sbb
dec
mov
pop
lods
adc
or
mov
mov
shr
cmp
sbb
or
pop
fimul
mov
push
push
lahf
enter
aam
push
test
jne
dec
fcmovb
and
adc
fs
fisttp
jo
clc
push
mov
adc
ins
and
or
add
lahf
and
(bad)
sub
jno
ret
jne
(bad)
sbb
ret
mov
sub
xor
adc
cmps
xchg
fimul
mov
add
push
sub
bound
imul
cmp
movs
jns
add
inc
sub
call
inc
nop
shl
xor
aam
aaa
push
adc
(bad)
mov
jns
push
nop
or
jmp
daa
xor
icebp
xchg
dec
sub
jle
daa
dec
imul
call
fbld
test
push
push
sbb
jae
mov
cwde
add
mov
push
push
ror
push
push
mov
mov
or
jp
nop
add
pop
cmp
mov
add
std
hlt
out
leave
shl
adc
push
pop
rol
out
dec
test
mov
add
clc
push
mov
not
jmp
test
and
js
pop
and
jge
test
imul
outs
sbb
ins
je
mov
mov
and
push
ficomp
pushf
xchg
cs
arpl
je
in
test
dec
mov
sbb
push
call
pop
inc
mov
inc
arpl
mov
pop
rcl
(bad)
jns
adc
movs
cmp
popa
dec
pop
movs
and
mov
dec
cmps
test
xor
gs
jne
sbb
mov
pop
mov
jne
cmp
(bad)
sbb
xor
iret
and
inc
adc
(bad)
out
test
(bad)
jo
jbe
pop
mov
push
dec
sbb
mov
sub
cdq
sbb
mov
cmps
push
rcl
dec
popf
imul
xchg
sub
jb
addr16
lods
pop
in
and
inc
je
sub
jo
inc
(bad)
stos
ins
and
sub
sub
mov
pop
and
add
test
lods
sbb
inc
dec
sahf
adc
sar
retf
sub
add
inc
mov
push
mov
or
push
mov
cld
adc
sbb
lahf
or
leave
add
push
add
mov
cmp
adc
ja
or
mov
sub
and
xchg
test
pop
push
dec
inc
pop
cmps
mov
push
jns
adc
add
shld
or
loop
ins
imul
movs
aam
sub
fmul
inc
stos
es
and
mov
pusha
mov
out
or
xor
out
fisttp
push
xor
int3
shr
and
loope
jmp
mov
loopne
or
xchg
ss
xchg
cmps
push
jo
sub
adc
sub
mov
add
push
or
inc
cmps
aaa
movs
cs
or
es
mov
dec
dec
jle
pusha
or
push
push
loopne
dec
xchg
int3
lea
push
or
push
hlt
push
add
or
push
adc
xor
mov
in
(bad)
xchg
pop
or
cwde
add
xchg
pop
int3
push
loopne
jns
and
cwde
push
pusha
mov
mov
or
adc
inc
fsubr
and
dec
fcom
cmps
icebp
inc
or
push
add
push
xchg
dec
nop
fcom
inc
fcom
inc
fmul
sub
cmp
add
inc
popf
push
add
ins
es
fdivr
jmp
jp
mov
pop
adc
sub
retf
gs
sbb
inc
sub
adc
retf
jge
lods
sub
jno
add
push
add
dec
test
es
push
shl
adc
dec
ret
sbb
xchg
dec
sbb
xchg
cmc
and
sbb
(bad)
bound
mov
fneni(8087
jle
mov
push
push
jp
cmp
add
mov
and
push
loopne
lahf
mov
aam
cmp
jp
stos
xor
lock
or
and
or
loopne
jbe
add
push
add
add
adc
pop
dec
cwde
mov
xor
lds
retf
xor
retf
sbb
dec
mul
add
dec
sbb
inc
sbb
inc
in
ins
add
inc
stos
and
addr16
cwde
adc
xchg
mov
pop
imul
(bad)
fadd
sbb
scas
loopne
gs
enter
cmp
je
xor
push
ret
outs
lock
fxch
out
xor
and
fs
cmc
xor
ret
fcom
push
push
icebp
mov
jo
leave
mov
xor
ret
add
aam
in
adc
or
mov
sbb
and
je
adc
mov
or
add
mov
mov
dec
int
push
inc
(bad)
dec
shl
rol
dec
test
xor
xor
xor
movs
fwait
xchg
fisubr
cmp
push
add
pop
ror
push
inc
fimul
imul
push
or
imul
inc
adc
pop
pop
inc
sahf
add
sub
xor
dec
scas
pusha
push
arpl
jmp
outs
mov
dec
imul
push
mov
push
inc
pop
(bad)
lods
movs
cmp
pop
add
imul
jecxz
ret
jo
je
stos
and
or
or
sbb
inc
xchg
mov
mov
and
arpl
push
mov
test
and
je
ret
or
jne
or
leave
in
loopne
xchg
push
sbb
jg
or
idiv
sub
enter
lods
int
or
int3
push
or
rcr
dec
pop
mov
arpl
dec
pop
outs
int3
adc
or
push
mov
sbb
lods
xor
cmp
les
push
and
(bad)
(bad)
jle
ja
std
adc
jmp
loope
and
push
mov
imul
lea
or
jg
pop
sti
cmps
xor
je
mov
or
mov
(bad)
jne
adc
jle
sub
jmp
push
mov
mov
and
(bad)
and
repz
cs
push
or
shl
xchg
rol
xor
sub
jne
and
push
push
gs
or
mov
retf
das
jge
xchg
pop
pop
into
shr
lea
test
in
inc
cwde
and
or
add
dec
xor
inc
cwde
sbb
mov
ret
rcpps
mov
aaa
test
or
jns
call
or
aad
out
imul
enter
add
push
ss
add
and
inc
sub
mov
xor
jns
mov
and
mov
push
retf
xchg
xchg
enter
mov
adc
retf
xor
mov
mov
dec
cmps
mov
aam
mov
pop
aad
or
scas
icebp
cmps
scas
dec
inc
pop
cmp
jle
out
push
and
xor
sub
rcl
push
fadd
sub
xchg
and
adc
test
xchg
xchg
xchg
xor
loopne
fnstcw
adc
mov
inc
xchg
mov
push
mov
and
inc
sub
enter
pushf
jl
inc
and
xor
mov
retf
jmp
push
fisubr
call
mov
push
mov
ins
mov
(bad)
loopne
sahf
iret
(bad)
xor
add
xor
jmp
jl
dec
into
mov
test
adc
mov
mov
sbb
and
inc
xor
sub
mov
test
ror
pop
rcl
jae
sbb
rcl
outs
test
inc
pusha
adc
xchg
mov
lea
jne
sub
movs
mov
je
or
push
cdq
pusha
xchg
ins
pop
(bad)
fsub
inc
sbb
mov
mov
in
test
add
enterw
in
test
inc
enter
pop
push
or
inc
jb
in
jecxz
inc
pop
mov
jno
nop
jge
lods
int3
xchg
lock
fsubr
jecxz
push
mov
sbb
adc
fmul
or
hlt
loopne
and
pop
loope
cmp
fs
loopne
cdq
or
inc
inc
lock
or
or
jo
sub
(bad)
sbb
lods
adc
mov
std
pusha
and
or
pop
loopne
and
sbb
jns
mov
add
mov
imul
loop
or
mov
fld
gs
mov
mov
add
cwde
stos
mov
xor
icebp
and
xchg
or
and
mov
dec
add
add
pushf
push
lahf
shr
push
rcr
dec
jo
push
enter
sub
adc
dec
outs
in
push
rcl
xor
and
sbb
or
adc
xchg
pushf
dec
pop
test
mov
mov
inc
and
(bad)
pop
sbb
add
leave
add
adc
or
push
add
lods
lds
fisub
test
sar
sbb
inc
int
ins
jecxz
inc
cmps
in
push
push
ss
or
push
lock
or
call
xor
mov
push
dec
sti
leave
push
xchg
or
and
stos
adc
call
dec
dec
sbb
jmp
in
enter
daa
out
nop
mov
mov
jg
sub
enter
dec
mov
xchg
lock
inc
xor
inc
sub
inc
adc
sub
sbb
aam
test
xor
sahf
or
xor
inc
stos
and
iret
adc
imul
aaa
retf
inc
pop
inc
cmps
pop
fmul
lea
jecxz
mov
mov
sub
sub
fsub
std
mov
dec
outs
jg
lods
outs
mov
pop
neg
xor
mov
cmp
or
jne
inc
shl
out
xchg
test
loop
retf
rol
or
mov
push
sub
mov
pop
mov
mov
adc
stos
(bad)
jmp
inc
or
sti
es
xor
sbb
fbld
push
cmp
sbb
nop
fcmovnu
lods
nop
add
enter
inc
pop
lods
or
push
push
test
sub
jbe
sub
nop
ret
push
add
in
push
dec
push
add
push
mov
mov
inc
sub
(bad)
mov
inc
cmps
jne
mov
ds
jnp
mov
push
xlat
cwde
lods
xchg
test
cmp
inc
or
arpl
jo
mov
add
xchg
fild
test
jns
jg
push
sbb
pop
lahf
mov
inc
inc
and
rol
add
xchg
adc
and
ror
in
or
cmps
int3
lea
int
jno
inc
adc
cmp
add
and
pop
inc
pop
int3
int3
mov
sub
pop
dec
inc
dec
lea
add
xchg
push
jne
sub
mov
xchg
push
js
xor
mov
and
pop
xor
(bad)
imul
mov
mov
shl
pop
daa
pusha
sub
dec
add
adc
adc
nop
xchg
out
lods
lods
in
add
retf
leave
(bad)
or
mov
xchg
push
mov
pop
lods
jecxz
inc
and
and
jle
sbb
movs
cmc
mov
adc
xchg
xor
mov
sbb
adc
mov
inc
jbe
xor
sbb
ror
outs
jg
or
sbb
sub
lods
pop
cli
dec
in
neg
xchg
shl
pop
push
adc
shl
adc
mov
inc
cmp
inc
inc
inc
addr16
lea
in
rol
and
xchg
xor
mov
adc
cmp
sbb
xchg
aam
call
adc
sub
scas
int3
push
push
inc
add
inc
daa
mov
jmp
and
mov
mov
jno
outs
sub
ja
add
dec
push
xchg
lods
sbb
ror
out
add
aad
or
shl
pcmpgtd
test
aaa
jo
aam
shl
movs
xchg
nop
xchg
sbb
fcomp
call
dec
and
cli
(bad)
mov
retf
mov
shl
xor
pop
and
inc
mov
and
add
mov
mov
ret
(bad)
inc
push
test
jmp
xor
dec
idiv
xor
cs
xor
inc
lahf
inc
dec
sub
add
sbb
and
inc
mov
int3
and
or
mov
pop
movs
add
in
stos
loopne
jge
inc
xchg
mov
mov
mov
pop
add
mov
adc
push
push
xchg
or
test
adc
ds
xor
add
(bad)
pop
push
and
mov
fcom
movs
push
push
xlat
jo
xchg
pop
stc
pop
xor
or
add
mov
pop
or
stc
sahf
outs
nop
fwait
push
dec
sbb
adc
sbb
xor
rcl
pop
inc
nop
sub
mov
sahf
rcr
inc
(bad)
les
push
mov
push
nop
push
daa
cmps
in
cwde
popa
imul
cs
or
jo
xchg
xchg
push
xchg
push
push
in
cmp
inc
repnz
call
leave
sar
call
lock
call
dec
rol
add
(bad)
fcomp
cmp
pop
daa
in
loopne
fcom
fnop
push
arpl
es
ror
inc
adc
aam
pusha
push
and
and
inc
cs
cmp
jno
jg
cs
add
in
sbb
loopne
add
and
pop
clc
push
mov
int
xor
int
add
loopne
mov
sub
add
xchg
(bad)
nop
call
lods
shl
xchg
adc
xchg
xchg
sub
dec
mov
and
aad
sti
and
and
lods
and
in
push
adc
loopne
xor
imul
add
mov
adc
fs
cs
mov
in
nop
push
adc
enter
sbb
pusha
cs
sbb
cdq
mov
mov
sub
add
pusha
mov
das
push
inc
enter
add
sbb
inc
adc
sbb
add
scas
or
adc
cdq
pusha
or
xchg
cmp
sahf
mov
in
aad
add
add
imul
xchg
jmp
js
movs
lods
mov
pop
dec
dec
xor
mov
jl
inc
punpckhdq
xchg
inc
ds
je
mov
or
inc
xchg
in
pusha
mov
xchg
cmp
test
and
and
cmp
shl
sbb
push
sbb
or
cmps
or
test
cmp
lock
js
push
or
add
jl
xchg
dec
add
je
xchg
add
push
xlat
jo
stos
inc
pop
adc
mov
add
iret
lea
sub
xor
mov
shr
test
add
in
jl
loopne
and
test
mov
mov
rol
push
pop
inc
retf
push
inc
scas
test
pop
xor
and
add
mov
mov
lods
into
jge
and
arpl
cmc
mov
xor
fld
fmul
pop
xor
add
or
jecxz
test
mul
shl
cmp
jle
es
in
mov
and
test
sub
sahf
fsubr
sbb
mov
adc
sbb
cmps
or
rcr
test
jno
test
adc
mov
pop
inc
or
sbb
jl
jecxz
ret
lea
gs
adc
or
mov
bound
ror
fwait
add
mov
adc
mov
mov
dec
nop
sub
nop
pop
jecxz
cmp
aas
mov
fwait
and
push
cmps
and
shl
adc
xlat
mov
push
adc
mov
ins
(bad)
push
fcmovnu
jae
daa
movs
pop
add
fwait
nop
add
cwde
ds
jae
push
jo
push
or
das
jne
movs
pusha
sbb
or
push
or
popf
push
sbb
pop
dec
or
dec
shl
fld
out
adc
cmp
inc
test
mov
pop
movs
push
fsincos
aam
rol
sub
push
jo
jmp
shr
add
sub
push
or
jmp
or
sar
test
out
jo
movs
sti
aam
dec
scas
add
(bad)
sti
push
cmps
and
dec
cmps
add
jmp
rcl
sub
movs
stos
dec
jns
xchg
sub
add
data16
and
mov
jecxz
dec
mov
mov
fsub
jmp
and
ins
sub
or
fcomp
lods
push
les
loop
dec
mov
push
pusha
lock
mov
jb
jle
dec
push
dec
test
lea
push
(bad)
nop
(bad)
cs
test
inc
rol
add
shl
dec
xchg
adc
pop
cmp
pop
push
imul
adc
and
push
dec
sub
cmp
sub
mov
cmps
cmp
nop
or
dec
mov
push
stos
push
or
mov
add
cmp
cmc
inc
push
mov
inc
cmp
adc
cmp
aaa
and
lock
test
pop
push
adc
in
and
in
or
jg
dec
adc
push
pusha
pop
cwde
mov
jo
sub
aad
shr
or
mov
xor
aam
aam
sbb
and
lods
aad
jg
add
loope
push
fstp
jmp
rcr
(bad)
rcl
xchg
aaa
xchg
fdivr
cmp
add
push
jnp
or
pop
xor
push
pusha
mov
test
adc
jns
inc
ja
call
cmp
mov
adc
iret
fiadd
cmps
mov
cmp
enter
push
cdq
pop
cmp
pop
pop
sub
push
scas
adc
movsx
ret
nop
ror
loope
fild
pop
inc
call
fst
gs
(bad)
nop
or
movs
arpl
mov
(bad)
mov
loope
mov
adc
sar
jmp
les
dec
fadd
or
test
add
cs
inc
mov
or
inc
out
xchg
push
adc
data16
pop
and
add
fsub
lods
ficomp
test
ds
dec
data16
loopne
lock
call
dec
stc
fwait
mov
jne
inc
ret
push
push
and
or
push
in
adc
popa
lods
xchg
push
sbb
xlat
mov
dec
in
jnp
daa
or
ror
add
pusha
add
lahf
fcomp
shl
sub
in
out
mov
xchg
lea
lods
leave
test
packssdw
and
sar
xor
and
mov
push
dec
sbb
xchg
imul
cmps
loop
sbb
or
add
inc
pusha
test
bound
sbb
or
loopne
enter
loopne
retf
pop
dec
mov
test
xchg
lock
mov
mov
adc
rcl
push
push
mov
inc
pusha
add
sbb
dec
stos
inc
jb
push
or
inc
mov
test
jge
adc
push
loopne
mov
(bad)
je
js
inc
cwde
dec
aad
mov
scas
and
mov
add
clc
inc
mov
or
push
push
or
fsub
(bad)
mov
or
xchg
icebp
outs
sar
push
int3
loope
aam
add
ret
inc
out
xor
imul
xchg
add
int3
ja
shr
cmp
mov
enter
nop
sub
out
call
xor
or
test
aam
retf
out
xor
adc
(bad)
int3
push
and
dec
rcr
add
cmp
popf
sub
or
aas
leave
adc
or
or
xchg
out
add
fnstsw
and
and
je
adc
movs
push
dec
push
sbb
cmp
loope
push
cmp
and
xor
inc
in
mov
test
jbe
xor
test
jo
jo
jae
mov
and
cmp
jno
jmp
dec
or
das
in
bound
or
ffree
xor
push
cmp
inc
mov
adc
loopne
cmps
add
push
stc
pop
cmc
or
xor
or
mov
cs
(bad)
popa
loopne
mov
dec
movs
fs
push
mov
and
imul
popf
inc
or
inc
fld1
or
test
in
push
ins
mov
movs
outs
or
inc
or
es
sbb
fldcw
mov
or
inc
pushf
out
add
mov
stos
push
loope
adc
add
sub
neg
mov
retf
pop
into
dec
xchg
ins
adc
dec
pop
daa
fimul
inc
jecxz
inc
std
and
call
dec
lock
fsub
and
and
sbb
xchg
adc
lea
je
mov
add
mov
and
jmp
mov
leave
mov
jo
or
xor
outs
sbb
(bad)
xor
mov
jb
mov
pop
adc
jo
sti
xchg
jno
in
sub
call
ja
repnz
xor
sub
xchg
and
inc
push
cmp
mov
xchg
sub
xor
push
adc
aam
ins
jmp
ins
adc
bound
jl
push
test
loope
mov
and
movs
mov
lods
mov
or
rcr
lds
push
jnp
ds
dec
mov
add
adc
mov
or
cmp
(bad)
adc
vmwrite
inc
adc
sbb
jmp
pslld
and
add
add
and
repnz
pop
sub
wrmsr
call
pslld
sysenter
(bad)
aas
cmp
jg
(bad)
jmp
aas
stc
and
inc
inc
(bad)
inc
dec
jb
pushf
sub
dec
(bad)
sub
retf
leave
pop
push
aas
pop
jg
pusha
mov
pop
jmp
add
add
push
xor
pop
je
ror
(bad)
xor
sbb
push
or
pop
cmp
inc
push
repnz
adc
sbb
addr16
sbb
and
jns
pop
jns
add
add
xor
adc
add
cmp
inc
cmp
outs
sub
add
inc
add
add
fs
dec
add
add
or
dec
xchg
xchg
adc
inc
rol
cmp
push
imul
adc
ins
or
adc
and
fwait
js
mov
add
(bad)
in
inc
mov
inc
aaa
jno
xchg
dec
or
sti
shl
or
(bad)
ret
xchg
and
icebp
adc
pop
sbb
enter
pop
sbb
and
add
adc
psubw
sub
ret
jge
push
inc
(bad)
nop
aas
xor
jb
(bad)
mov
cmp
psubw
cmps
push
fcomp
rol
fwait
stc
inc
(bad)
nop
in
xchg
out
dec
(bad)
popf
ror
aas
leave
cmovl
mov
jmp
psubw
je
pop
fsubr
mov
stc
inc
(bad)
nop
jbe
push
push
ds
fs
(bad)
xor
push
ins
(bad)
jg
mov
jo
or
(bad)
je
xchg
cmps
aad
push
push
retf
sub
adc
ret
inc
mov
push
or
pop
sub
inc
clc
cld
ins
sub
pop
mov
or
int
nop
push
jae
gs
nop
aaa
xchg
cs
ret
(bad)
mov
xchg
pop
mov
repnz
mov
test
retf
fidiv
dec
ret
mov
(bad)
pop
mov
call
sti
sbb
(bad)
mov
pop
mov
sahf
mov
push
shl
or
enter
daa
int
outs
push
int3
mov
mov
shl
or
cmp
dec
stos
fmul
repnz
aaa
dec
retf
fdiv
outs
cs
loopne
or
jns
enter
adc
enter
int
outs
or
(bad)
mov
cli
(bad)
mov
cmp
jmp
push
movs
clc
mul
nop
mov
(bad)
adc
jg
sbb
adc
adc
cmp
or
stos
movs
popf
jne
or
sub
add
mov
cmp
jne
fild
cmp
clc
aaa
imul
sbb
adc
inc
mov
pop
bound
ret
sub
es
sub
sub
xor
lock
push
mov
xchg
ficom
sbb
inc
mov
dec
inc
adc
mov
jb
or
jmp
retf
sub
punpckhwd
inc
cld
mov
cmp
add
aas
pusha
jo
retf
adc
cmp
inc
rcl
in
mov
ror
add
xchg
or
inc
jne
out
in
outs
daa
mov
and
call
loopne
mov
jmp
mov
jo
cdq
fdivr
enter
inc
adc
and
mov
mov
test
test
mov
add
inc
or
jg
fs
gs
or
out
clc
dec
jno
popf
sbb
push
mul
jl
cmp
dec
nop
sbb
pop
push
mov
and
fsqrt
and
mov
pop
mov
stos
cdq
idiv
test
pop
int3
je
xor
lahf
lock
shl
or
and
ins
pop
mov
dec
add
mov
and
inc
lods
sti
push
inc
jge
xchg
in
or
icebp
pop
inc
jecxz
dec
stc
sub
xor
cmp
out
jecxz
and
push
test
je
jb
xor
mov
sbb
xor
pop
xor
or
mov
test
cmp
ds
rol
sbb
sub
push
rol
add
leave
pop
inc
adc
outs
sti
movs
or
or
pusha
adc
enter
push
xor
lahf
push
push
mov
xor
(bad)
and
xor
sub
mov
les
mov
push
sbb
cmps
and
jl
aaa
mov
mov
lea
and
sti
aam
mov
aad
ins
xor
repz
iret
xor
push
xor
push
sbb
fdivr
icebp
movs
xor
(bad)
mov
sub
icebp
sbb
and
xor
loopne
bound
xor
adc
pop
pop
adc
push
and
xor
mov
mov
ins
adc
and
int3
aaa
cmp
mov
lea
ficomp
jecxz
mov
movs
(bad)
test
inc
push
scas
lds
cmp
jb
push
fcmovnbe
add
or
or
mov
rcl
mov
(bad)
inc
sti
fld
leave
ret
push
sbb
push
xchg
fild
adc
and
or
dec
enter
adc
test
cmp
sbb
nop
sub
aas
mov
das
or
mov
inc
pop
adc
je
add
loopne
idiv
pop
clc
das
outs
cdq
and
push
add
call
mov
cs
imul
xlat
mov
sbb
xor
call
xchg
outs
loopne
lock
cdq
jge
or
add
rcl
add
fdivr
dec
or
inc
mov
not
sub
dec
shl
xor
imul
inc
mov
add
or
jne
sar
imul
xchg
mov
xchg
stos
retf
xor
adc
sbb
dec
pop
fsubr
xor
sub
and
fcom
dec
pop
xchg
pop
dec
push
dec
cmp
pop
inc
fs
(bad)
jl
xor
mov
jl
add
lea
or
mov
or
inc
pop
popf
iret
lahf
lods
mov
(bad)
push
sbb
push
and
shl
xchg
adc
pop
add
ret
or
mov
push
jecxz
movs
leave
adc
or
pmulhuw
xchg
add
pop
and
fld
mov
sub
xchg
or
or
mov
adc
cmp
pop
sbb
or
cmp
jecxz
adc
xchg
push
mov
or
cmp
adc
cdq
sbb
js
pop
in
cmp
in
mov
fst
fdiv
add
pop
or
jp
xor
mov
idiv
test
mov
retf
sub
lds
pop
xor
mov
mov
cdq
fcom
mov
icebp
mov
add
jle
sub
fwait
cld
in
xchg
dec
cdq
add
mov
call
fwait
and
ret
push
sar
das
inc
jae
call
popf
mov
dec
nop
das
add
add
sub
pop
loop
mov
pop
pop
push
and
sbb
pop
adc
test
xor
xchg
add
sbb
add
add
dec
mov
push
xlat
inc
sub
mov
jp
jo
repnz
and
or
(bad)
test
lock
fcom
sbb
sub
and
pushf
add
push
and
enter
(bad)
(bad)
dec
enter
(bad)
(bad)
dec
enter
std
std
std
enter
std
std
std
std
enter
std
std
std
std
enter
std
std
std
std
and
or
les
and
and
and
je
ins
push
fs
pop
sub
add
sbb
xlat
ret
or
inc
mov
add
mov
int
xchg
lods
mov
test
neg
lahf
and
outs
cmp
inc
or
cmc
dec
movs
cmp
jg
push
push
ins
jle
inc
adc
push
fld
pop
jg
ret
int
pop
fs
pusha
add
inc
mov
fwait
ss
and
cs
(bad)
mov
push
xor
pop
mov
rcl
call
aas
leave
mov
fdiv
fstp
mov
imul
std
xchg
dec
mov
push
call
test
push
gs
pop
rcl
mov
pop
or
xchg
gs
xchg
adc
adc
sbb
sbb
adc
add
adc
mov
and
mov
loope
xchg
xchg
popf
idiv
add
fs
jo
fcomp
push
scas
sbb
push
mov
std
cmp
je
call
jge
int
ret
pop
adc
shr
fist
retf
add
pop
sti
xchg
or
(bad)
rcr
cmp
movs
jno
rol
out
jbe
mov
pop
xchg
sub
xchg
dec
and
mov
cmp
lods
ja
mov
push
pop
call
xchg
pop
and
inc
jmp
mov
cdq
mov
and
pslld
push
sbb
sbb
pop
cmp
and
sbb
adc
jge
outs
dec
sub
call
(bad)
jle
test
add
mov
in
jo
out
pop
inc
push
pop
jo
retf
loope
mov
mov
push
sar
and
fs
ds
(bad)
xchg
aaa
push
pushf
cmps
pusha
adc
dec
ins
gs
repnz
inc
lods
repnz
dec
repnz
pop
pusha
xor
out
popf
std
sub
and
push
rcl
pushf
cmp
cwde
xor
inc
sbb
inc
test
fs
test
sahf
dec
mov
xchg
jae
out
jae
loopne
jmp
cmp
push
cmps
or
ins
cmp
jnp
sar
retf
les
int
mov
adc
clc
push
in
jge
mov
mov
sbb
xor
ss
(bad)
mov
dec
xchg
iret
addr16
sbb
mov
jo
or
ins
xor
inc
jbe
push
or
in
xchg
mov
ror
and
pop
adc
adc
adc
nop
sub
jno
sbb
mov
adc
mov
lods
sti
enter
add
add
jbe
cmps
mov
in
or
or
add
mov
jb
mov
inc
or
xchg
add
leave
enter
dec
inc
and
xchg
out
hlt
dec
sub
xchg
addr16
mov
or
enter
in
je
in
enter
cld
in
les
and
les
std
sbb
test
add
fld
dec
push
pop
add
mov
cs
ja
cmp
nop
cs
mov
outs
xor
pop
repz
jo
fimul
int
sbb
push
test
xchg
add
out
jecxz
ins
sub
leave
sbb
add
pop
or
bound
pop
xchg
and
cld
cld
or
in
ds
call
mov
arpl
inc
fsub
sub
dec
inc
push
mov
xor
dec
es
sub
cwde
cdq
in
pushf
xchg
cli
dec
hlt
and
into
xchg
std
in
sub
std
jb
in
je
std
movs
std
jl
nop
or
or
cwde
ror
jecxz
add
or
add
xchg
dec
mov
inc
(bad)
adc
pop
xchg
add
dec
(bad)
jmp
std
xchg
xchg
ror
fld
in
clc
adc
sub
xchg
lods
movs
ins
outs
xchg
int
push
in
sub
pop
and
jne
cmp
xor
push
test
sbb
movs
lds
aam
call
mov
dec
test
or
sbb
les
(bad)
ins
pop
(bad)
iret
movs
std
in
pop
lds
mov
jg
xchg
enter
and
aam
sbb
daa
add
inc
adc
jmp
push
push
dec
pop
or
std
out
nop
in
test
add
push
ficomp
or
mov
mov
mov
dec
jl
and
xlat
sub
sbb
or
dec
inc
popf
pusha
lods
push
int
add
lahf
mov
inc
nop
outs
ror
sbb
xor
jg
(bad)
ins
iret
and
pop
inc
mov
lea
cmp
mov
cdq
popa
je
sub
sti
cs
test
movs
lds
cmp
ins
jmp
fnstenv
retf
mov
xor
in
imul
sub
jp
je
mov
sub
sub
loop
sub
cmps
test
mov
dec
fnstcw
pop
and
adc
add
adc
enter
xor
adc
ror
push
in
shl
xchg
repz
jnp
push
push
addr16
dec
outs
arpl
inc
outs
mov
cdq
mov
pop
add
cmp
lods
inc
or
jge
add
add
inc
outs
inc
shr
movs
push
mov
and
rol
sbb
jl
sub
fld
fidivr
mov
test
repnz
ror
jo
push
inc
sbb
std
sbb
jb
add
dec
inc
in
nop
jo
int
pusha
ficom
xchg
nop
pop
stos
adc
dec
add
loope
mov
adc
cmp
xor
(bad)
xchg
mov
out
cld
jle
add
jp
fiadd
and
push
jnp
iret
fisttp
aaa
popf
dec
cmp
shl
pop
scas
mov
cmp
imul
adc
sbb
pop
sub
aam
xor
mov
xchg
mov
cld
outs
or
push
(bad)
loopne
cmps
dec
(bad)
and
and
mov
mov
mov
aas
adc
das
jmp
xchg
xor
test
mov
or
add
add
add
cmp
fs
push
jbe
retf
jo
push
mov
mov
pop
push
iret
stc
add
jl
mov
add
fcomp
xchg
and
sbb
push
push
xchg
cdq
sgdtd
xchg
pusha
push
fsubp
push
pop
fsubr
pop
clc
inc
cmc
sbb
shl
(bad)
xchg
or
xchg
cmps
push
rol
les
dec
sti
adc
add
popa
loop
pop
lods
repz
mov
mov
mov
mov
adc
adc
add
sbb
dec
cmps
or
pop
cmps
(bad)
adc
sar
dec
call
sbb
xchg
mov
pusha
pop
jge
dec
pushf
cmc
fmul
mov
xchg
pusha
adc
xchg
xchg
push
sub
stos
and
nop
addr16
xchg
ret
add
loope
sar
push
outs
sbb
rcl
(bad)
and
xchg
jno
inc
mov
das
bound
or
push
dec
ins
outs
sbb
push
sub
adc
imul
and
and
pop
das
inc
int3
mov
mov
(bad)
sbb
add
or
movs
adc
jle
outs
and
sti
xor
sar
mov
cmp
add
sbb
(bad)
jge
xchg
add
pop
pop
dec
xchg
push
pop
and
dec
fistp
je
or
add
shl
xor
loopne
push
int3
pop
xor
int3
aas
pop
inc
rol
dec
fmul
push
les
test
ja
mov
je
or
mov
xor
loope
jne
mov
xchg
pop
sbb
out
test
outs
loopne
add
popf
test
and
mov
dec
mov
push
outs
inc
push
sbb
lock
jb
cmps
sub
cwde
dec
jp
(bad)
gs
inc
pop
push
cmp
xor
test
add
xor
imul
inc
xchg
and
imul
adc
or
dec
add
test
mov
inc
leave
test
or
jb
push
xchg
adc
adc
dec
jb
add
xchg
push
sbb
add
mov
add
or
dec
push
xchg
cmp
bound
mov
xchg
pushf
or
add
jecxz
adc
sub
pop
inc
adc
inc
enter
add
cmp
pop
and
rcr
cmp
adc
and
inc
mov
imul
xchg
inc
in
stos
push
sub
lods
add
jns
mov
push
sub
push
pop
sub
or
fisttp
push
xor
and
icebp
shl
or
push
push
sbb
adc
adc
xchg
and
(bad)
cmp
enter
adc
dec
inc
and
or
lahf
js
ins
lods
in
xor
adc
test
dec
fs
xor
push
push
fnstcw
movs
mov
retf
mov
aad
aas
push
mov
lods
mov
in
add
in
mov
popa
xor
pop
dec
mov
or
or
inc
jb
add
xor
or
push
and
push
xchg
push
add
xchg
sbb
aad
jno
mov
cmp
mov
push
test
dec
sbb
outs
dec
loope
cs
add
jne
loope
ins
mov
mov
test
or
add
push
outs
or
jecxz
xchg
or
(bad)
and
shr
into
int3
adc
and
mov
push
scas
add
inc
push
push
js
xor
adc
fstp
push
inc
int3
add
cld
sbb
std
sbb
sub
adc
es
out
or
test
cmp
popa
fsub
mov
or
fsub
(bad)
enter
and
out
test
add
mov
call
sbb
or
mov
test
add
pushf
add
xor
dec
xor
adc
push
test
cmp
aad
inc
cmp
xor
or
mov
js
fst
add
in
ja
inc
and
repz
or
push
adc
inc
push
je
rcr
jb
xchg
inc
imul
sahf
push
nop
sub
jg
or
xchg
xor
and
dec
and
mov
lahf
rol
sub
jo
dec
clc
pushaw
lds
ins
push
in
adc
mov
call
dec
mov
rol
and
in
pop
(bad)
test
add
add
dec
mov
sub
nop
add
inc
pop
push
pop
push
pop
xchg
cmp
dec
mov
xchg
push
pushf
mov
or
push
sbb
shl
mov
add
or
rcr
or
test
pop
mov
or
adc
or
sbb
pop
in
dec
in
push
mov
push
(bad)
adc
and
fs
xchg
pop
inc
lds
push
and
lahf
xchg
push
cmp
pop
add
inc
repnz
movs
sub
ror
add
or
xchg
mov
dec
adc
sub
cmp
or
mov
rol
movs
push
jp
cmp
dec
push
(bad)
call
test
push
xchg
xchg
xor
rol
retf
or
nop
push
xchg
adc
xor
test
mov
push
lods
mov
dec
fbld
jmp
add
push
pop
in
add
movs
mov
dec
(bad)
mov
or
ins
dec
out
repnz
sahf
or
int3
push
push
dec
xchg
and
mov
sub
sti
jmp
imul
or
test
push
pop
and
add
cwde
enter
movs
ss
cmp
ud1
adc
sub
add
aad
push
rcl
out
jecxz
fdivr
in
inc
std
add
fld
cdq
pop
inc
ficom
test
mov
(bad)
jns
es
arpl
mov
mov
popf
dec
fstp
push
inc
xchg
and
push
movs
mov
test
dec
pop
neg
(bad)
xchg
mov
fldcw
loopne
jmp
pop
push
scas
ss
lods
or
fsubr
fcomp
ins
arpl
test
mov
inc
inc
mov
stos
cwde
test
(bad)
cmp
mov
stos
fild
pop
test
mov
push
xor
or
out
push
jp
adc
or
pushf
sbb
gs
paddb
ror
mov
les
dec
les
or
outs
enter
push
iret
dec
push
or
mov
inc
iret
cmp
cmp
ret
mov
or
mov
lea
mov
add
not
and
jle
mov
mov
push
add
mov
retf
inc
enter
lods
ror
in
rol
push
pushf
leave
inc
test
pusha
mov
pop
retf
mov
je
ins
mov
in
aaa
pop
test
jns
jl
cmps
push
sbb
fwait
add
adc
jb
add
imul
push
data16
shl
test
cmps
pop
shl
add
add
mov
fld
xor
retf
mov
jg
mov
aas
xchg
test
adc
(bad)
push
or
and
loopne
rcr
or
push
inc
ja
movs
push
inc
push
xchg
popa
bound
nop
daa
clc
mov
scas
pop
rol
add
popa
nop
sbb
or
pop
or
imul
push
pop
adc
clc
cmp
mov
push
push
aas
mov
cs
aad
loopne
leave
dec
rcl
mov
ror
xor
cs
add
shl
sbb
dec
lods
sub
cmp
adc
ret
jg
test
add
pop
scas
xchg
add
repnz
mov
adc
cmp
mov
mov
inc
inc
fld
dec
or
ret
movs
test
stos
sbb
dec
out
mov
mov
lods
inc
xchg
inc
scas
mov
sub
mov
repz
or
jns
and
sub
out
test
pushf
cmp
cdq
sbb
xchg
call
xchg
mov
out
sbb
out
and
add
mov
aam
pop
imul
xor
fcom
mov
fistp
sbb
xor
xor
xor
mov
inc
dec
adc
xchg
cmps
popf
add
in
and
mov
mov
xchg
xchg
add
in
fmul
push
loopne
xchg
add
cdq
pop
mov
pusha
in
push
retf
xchg
and
and
fsub
and
add
push
lock
and
jmp
dec
sub
std
mov
aad
test
pop
push
xchg
xchg
jne
ins
xchg
jecxz
sub
in
sub
sahf
and
pop
or
rol
fbld
add
pusha
inc
and
in
or
test
adc
xchg
outs
dec
dec
mov
pop
adc
aaa
or
mov
hlt
add
fmul
fwait
in
xchg
sbb
xchg
mov
mov
add
lea
adc
and
xor
fwait
in
scas
loop
adc
push
enter
mov
dec
aas
adc
nop
add
jo
pop
add
in
aaa
dec
les
xor
push
inc
lds
or
adc
sbb
inc
or
sub
xchg
pop
nop
xor
shl
xchg
mov
cwde
or
bound
je
xchg
push
(bad)
fucomp
es
mov
test
mov
jbe
popa
mov
push
enter
outs
cmp
rcl
fidiv
mov
add
je
nop
shl
jmp
sahf
xchg
cmp
push
and
push
pop
ins
cmp
stos
ds
add
or
movs
shr
loopne
lods
or
add
pop
retf
repnz
ins
sbb
xor
je
mov
jns
inc
lods
clc
mov
cmp
or
movs
mov
shl
pop
jo
xor
aad
jo
ins
mov
fmul
fs
bound
inc
jo
pop
pop
ins
and
inc
popa
xor
mov
and
mov
mov
xchg
stos
mov
(bad)
pop
adc
adc
test
cmp
cdq
mov
adc
repz
push
mov
ror
or
rcr
jno
add
aam
xchg
dec
sub
mov
xchg
and
xchg
push
fwait
or
call
shr
fwait
in
mov
inc
lock
dec
enter
(bad)
or
and
dec
daa
or
inc
movs
xchg
adc
mov
nop
sbb
sbb
inc
fisttp
inc
push
nop
jno
adc
dec
sbb
fld
call
cmp
shl
sbb
mov
pop
mov
pop
or
or
aas
mov
xchg
mov
jae
fnstenv
sub
inc
fs
xor
pop
xor
xlat
nop
inc
jl
jno
xor
or
adc
push
sub
add
retf
fs
cmp
adc
test
mov
pop
rcr
in
cmc
rol
mov
pusha
push
xor
mov
sub
adc
adc
cmps
cwde
loope
arpl
popa
dec
sub
jecxz
inc
dec
dec
or
xchg
jg
push
sub
dec
add
xchg
ins
inc
hlt
imul
outs
and
popa
and
sub
imul
imul
sbb
enter
inc
sbb
xor
shr
inc
test
xchg
mov
and
push
push
xor
add
inc
ins
dec
push
dec
and
cmp
dec
dec
adc
jg
imul
push
fld
inc
push
fs
in
mov
push
fs
mov
or
mov
cmp
cmp
push
(bad)
mov
ret
or
xchg
adc
adc
pop
lods
out
sub
pop
xor
push
ret
pop
leave
scas
or
test
inc
jb
shl
push
and
xor
mov
inc
aaa
mov
sbb
push
mov
test
leave
jae
push
inc
popf
pop
push
in
iret
test
push
test
push
add
and
cmp
jno
repnz
jp
sbb
mov
leave
add
and
inc
enter
jmp
imul
add
jnp
jle
sbb
dec
adc
xor
mov
push
inc
xchg
sub
cmp
jge
(bad)
dec
daa
sbb
imul
pop
xor
ror
push
in
or
adc
sbb
adc
int3
fs
shl
rcr
adc
push
fist
xchg
inc
inc
ss
push
rcl
ja
push
mov
sub
mov
inc
cld
rol
cmps
xchg
dec
mov
cdq
or
inc
dec
arpl
scas
adc
or
inc
adc
mov
xchg
es
rcl
mov
mov
push
(bad)
push
call
popa
cmp
in
add
add
cwde
mov
dec
mov
das
push
xchg
push
enter
(bad)
sbb
sub
inc
cmp
rol
nop
xchg
push
movs
mov
ss
push
and
adc
pop
out
jne
mov
add
xchg
mov
cmc
xor
adc
(bad)
dec
rcl
or
xchg
movs
dec
out
cwde
test
mov
scas
push
bound
sub
lds
in
cwde
cwde
adc
adc
pop
(bad)
aas
rol
adc
dec
cmps
or
pushf
mov
pop
inc
in
mov
add
xchg
mov
ror
cmp
sub
fnstsw
inc
mov
hlt
inc
dec
mov
dec
sahf
cmp
dec
add
mov
sub
outs
shrd
add
loopne
jp
mov
jge
cmps
inc
add
test
xor
lds
mov
stos
xchg
fist
sbb
push
(bad)
stos
cwde
ins
adc
jns
mov
mov
dec
jnp
and
adc
icebp
enter
jns
(bad)
cmp
shl
test
add
pop
dec
or
test
imul
and
adc
shr
stos
dec
and
test
(bad)
adc
mov
imul
in
sub
and
xor
inc
and
enter
sbb
jl
add
pop
dec
push
sbb
pop
repnz
les
jmp
fmul
inc
add
imul
mov
add
add
adc
xor
push
scas
or
push
cmp
xchg
fadd
sbb
push
push
dec
adc
push
and
arpl
sbb
sbb
nop
push
push
mov
or
or
or
adc
adc
mov
inc
or
int
cmp
fnstsw
push
mov
add
ror
add
(bad)
aam
je
mov
test
add
dec
xor
or
mov
pop
adc
inc
iret
add
jno
cmp
and
ins
or
xchg
sbb
aaa
loopne
dec
or
push
rol
retf
rol
bound
mov
sub
jnp
adc
dec
inc
jl
les
xchg
loope
lods
mov
cmp
shl
or
jecxz
icebp
inc
movs
lea
cmp
dec
aam
push
mov
push
lds
and
push
add
daa
loopne
call
adc
mov
xchg
and
sub
pusha
retf
cmp
push
ds
fisttp
fisttp
or
test
and
or
adc
shr
adc
and
aam
(bad)
dec
push
push
ins
add
mov
ficomp
fsubr
imul
adc
pusha
cmp
sbb
and
fs
inc
pop
and
sbb
inc
cwde
xor
outs
pusha
push
mov
or
push
and
sbb
mov
jl
rol
or
xor
test
and
les
inc
pushf
(bad)
js
sub
jb
aas
les
sub
xchg
popa
jno
icebp
adc
clc
xor
jecxz
add
and
sub
xor
test
imul
cmp
jnp
push
xlat
add
and
aas
les
js
sub
mov
inc
push
faddp
pop
pop
xchg
push
pop
and
xor
or
pop
(bad)
xor
dec
xlat
add
sub
in
inc
push
lar
test
sbb
pop
fisttp
xlat
repnz
xor
xlat
inc
loopne
push
jmp
movs
sbb
fwait
fs
cmp
mov
and
dec
out
and
push
fst
push
push
inc
and
add
xor
mov
mov
fcom
call
inc
cmp
and
or
dec
mov
dec
pop
sub
call
inc
sbb
adc
or
inc
add
cmp
jmp
xchg
pop
(bad)
sbb
ror
fsub
push
sub
wbinvd
jp
pop
push
or
or
mov
rcl
push
xchg
push
or
jl
add
sti
xor
inc
xchg
(bad)
xchg
jb
aam
cmps
pop
arpl
push
push
inc
jbe
arpl
inc
ficom
mov
add
cwde
add
xor
pop
in
ror
sbb
and
xchg
leave
cmp
xchg
add
loope
(bad)
adc
or
es
adc
test
sub
movs
jae
das
fadd
lahf
push
inc
add
push
movs
rcl
xor
sub
pop
jmp
inc
shl
mov
pusha
adc
iret
push
inc
sub
mov
sub
add
xor
adc
jns
pop
or
xchg
inc
stos
call
xchg
inc
or
pop
add
stc
adc
enter
add
dec
adc
cmp
dec
jp
mov
inc
mov
inc
cwde
fild
and
push
push
push
xor
pop
pop
and
adc
in
push
sub
sbb
push
repz
sbb
jl
adc
repz
and
jo
pop
push
enter
xor
lds
mov
mov
test
push
scas
and
add
or
add
sbb
ror
test
push
stc
sbb
sub
call
add
push
xor
push
push
or
fmul
and
add
test
mov
aaa
inc
sbb
or
xchg
aad
loopne
push
jae
and
enter
enter
sbb
js
cwde
xchg
xor
sbb
inc
imul
push
mov
add
mov
scas
mov
or
aas
int3
movs
movs
movs
jae
mov
push
mov
push
xor
mov
inc
or
push
je
push
add
mov
mov
jmp
and
xchg
mov
add
mov
dec
sbb
mov
push
sub
add
xchg
cwde
sub
xchg
call
pop
pushf
and
test
add
jmp
dec
movs
or
loopne
icebp
adc
and
and
ins
and
cwde
xor
inc
jg
jg
test
push
enter
ret
sbb
aad
xor
add
push
xchg
jge
jo
add
and
push
repnz
arpl
enter
enter
and
adc
shl
push
or
xor
xchg
mov
sar
push
pop
adc
cmps
add
and
mov
add
jecxz
add
adc
pop
inc
in
jmp
pop
pusha
sub
adc
js
ins
rol
push
and
or
inc
or
add
mov
pop
dec
dec
inc
jbe
add
jb
pop
xlat
rcl
push
lods
xchg
sbb
sbb
add
inc
add
xor
and
rol
int3
es
dec
sbb
mov
mov
jbe
push
dec
dec
arpl
ins
mov
mov
or
add
mov
xchg
(bad)
cmp
mov
or
leave
test
call
(bad)
mov
or
push
dec
rcr
mov
cmp
mov
mov
or
std
jl
shr
pop
add
pushf
xor
xchg
mov
rcl
push
and
inc
lea
mov
add
push
and
shr
hlt
dec
ss
popf
fdiv
xchg
cmps
scas
xchg
push
ret
test
cmp
loope
cdq
je
xchg
les
or
dec
mov
mov
not
sbb
pop
scas
aad
pop
leave
sbb
or
or
add
dec
fadd
enter
xor
sbb
mov
push
(bad)
nop
dec
adc
rcr
inc
inc
test
repnz
push
je
or
push
mov
jae
popa
xor
dec
scas
popf
mov
pusha
rcpps
outs
and
lsl
pop
cwde
pop
out
mov
retf
pop
jle
or
push
or
push
jne
sti
aad
push
retf
mov
mov
jno
adc
or
ins
loope
or
push
nop
mov
mov
shl
and
and
push
das
push
cmps
add
sub
aam
loop
and
sti
enter
pushf
mov
pop
call
loopne
pop
shr
movs
aas
popa
sub
sar
push
addr16
adc
dec
jp
loopne
mov
add
addr16
dec
mov
lea
cmp
jmp
dec
dec
inc
dec
cmp
es
mov
push
push
xor
addr16
inc
es
mov
cld
xlat
mov
mov
xchg
push
fsubr
in
add
lods
arpl
movs
pop
sub
inc
test
jle
test
add
(bad)
mov
xchg
jne
mov
scas
shr
xor
xchg
call
sbb
test
mov
xlat
daa
test
movs
push
or
pusha
push
mov
addr16
pop
add
sbb
inc
aas
clc
xor
cmp
sbb
mov
les
rol
ins
xchg
call
dec
inc
ja
or
inc
sub
cmps
xchg
push
dec
scas
rcl
or
nop
mov
pushf
mov
dec
xor
int3
xchg
and
sub
sbb
fdivr
cmp
add
pop
lods
or
int3
pop
mov
shl
push
aam
cmp
(bad)
arpl
cdq
adc
add
leave
inc
aaa
add
push
bnd
inc
fadd
mov
or
imul
outs
dec
add
xor
in
add
mov
nop
cld
xor
push
add
push
popa
fld
or
cmp
jb
adc
xor
and
or
xor
push
mov
dec
push
fs
or
dec
jmp
cmp
dec
inc
and
xor
xchg
xor
data16
inc
or
sbb
inc
sahf
mov
ins
inc
or
imul
mov
fbstp
and
inc
push
xor
in
in
jl
inc
push
imul
push
imul
inc
dec
add
or
adc
or
push
test
pusha
xor
add
inc
push
repnz
and
jl
add
push
push
add
cmp
nop
xor
repz
sub
mov
pop
cmp
push
jne
mov
arpl
rol
dec
call
mov
sbb
loop
pop
xchg
mov
inc
add
ins
(bad)
adc
xor
je
mov
imul
adc
popf
sbb
neg
cmp
sete
mov
dec
inc
aas
retf
push
sti
(bad)
retf
or
or
inc
add
fadd
add
push
outs
dec
mov
stc
(bad)
fcomp
imul
mov
mov
clc
test
mov
xchg
mov
(bad)
pop
(bad)
jno
dec
jbe
test
test
jmp
stos
mov
dec
mov
lahf
and
dec
or
pushf
pusha
dec
xchg
mov
leave
pop
mov
gs
int
sahf
fs
sub
scas
or
outs
ins
jo
and
dec
inc
sahf
int
add
js
or
call
inc
dec
cmp
out
push
adc
xchg
ror
call
or
cmc
pop
ins
sbb
int3
sub
aad
leave
test
add
cmp
xor
sub
sbb
js
pop
shl
sub
out
aas
into
ret
mov
popa
call
enter
dec
test
in
lea
dec
cmp
cmp
fcmovne
mov
adc
mov
rcr
mov
push
imul
call
popa
inc
inc
loop
leave
das
push
fist
fdivr
pusha
std
mov
pop
mov
jb
xor
(bad)
ror
push
adc
out
mov
in
sbb
sub
sub
xchg
xchg
xchg
pop
push
in
pop
push
push
sbb
mov
sbb
jno
(bad)
xchg
rcr
inc
fs
cmp
sahf
mov
std
loopne
int3
leave
inc
cmp
hlt
ret
and
xchg
imul
sbb
ja
add
dec
arpl
aaa
adc
adc
cmp
inc
mov
sub
or
add
xchg
in
(bad)
mov
add
sbb
adc
test
ja
mov
inc
xchg
pop
sahf
les
push
push
mov
cmps
das
inc
mov
or
xchg
push
mov
rol
out
sbb
or
jbe
push
clc
cmp
sbb
mov
shl
push
arpl
dec
add
xchg
sub
add
cmp
or
xchg
add
lock
test
ins
inc
jns
les
or
mov
ret
(bad)
shl
or
cmp
adc
cmp
add
pusha
fild
js
xchg
test
push
and
or
cdq
dec
mov
sbb
push
push
xor
lods
ins
pop
dec
push
mov
data16
add
ins
cmp
(bad)
test
rol
pop
test
add
mov
pop
jo
(bad)
cmp
add
xor
xor
pop
or
in
bswap
inc
xchg
lea
sbb
xchg
in
loopne
addr16
push
push
cwde
sbb
xor
inc
cmp
in
imul
add
mov
sbb
sbb
mov
xchg
fldenv
inc
sbb
rcl
pop
rol
sbb
pop
repnz
push
sub
and
mov
pop
cmp
pop
or
leave
inc
(bad)
cmp
push
cmp
fisttp
or
retf
sar
push
sub
and
push
enter
in
inc
add
add
lock
daa
fadd
bound
sub
adc
pusha
or
and
adc
mov
shr
mov
dec
pop
and
fisub
and
sub
sub
sbb
xchg
adc
cmp
mov
shl
inc
xchg
jne
jne
and
ins
jmp
add
ret
push
push
dec
xchg
add
sbb
inc
cs
xchg
xor
dec
mov
rol
or
xor
inc
nop
sub
mov
loopne
xchg
fisubr
push
push
call
pusha
popf
pop
leave
sub
push
xchg
or
jo
adc
mov
or
lds
enter
xor
sbb
push
xchg
(bad)
pop
mov
jb
sbb
cmp
sub
pusha
xor
stos
sbb
push
mov
inc
add
test
push
jl
and
mov
xor
and
add
xor
nop
dec
mov
sub
dec
inc
dec
mov
push
jg
sti
nop
dec
inc
jb
inc
lock
cs
adc
xor
adc
and
mov
inc
leave
test
in
xchg
mov
xchg
dec
adc
cmps
or
xor
pusha
xor
push
nop
dec
mov
or
adc
inc
sahf
dec
mov
xchg
dec
inc
inc
jb
inc
xor
and
mov
push
mov
cwde
test
adc
pop
sbb
stc
mov
ins
scas
and
pop
cdq
push
xor
dec
aad
leave
and
xor
(bad)
mov
leave
and
lods
add
push
sub
stos
leave
(bad)
dec
dec
mov
(bad)
rol
enter
shr
shl
aam
out
sub
fs
and
xor
and
sub
mov
mov
sub
sub
jl
mov
(bad)
push
dec
and
fadd
cmp
dec
dec
pop
push
test
inc
push
add
js
add
stos
pop
mov
aas
dec
dec
mov
adc
pop
shl
call
inc
fistp
lods
inc
aaa
mov
test
push
ja
pop
das
push
push
cmp
bound
daa
ins
sahf
aas
pop
push
dec
push
pop
test
cdq
inc
(bad)
adc
pusha
test
test
pop
dec
xor
pop
lahf
adc
or
xor
mov
push
sbb
shl
ret
add
je
add
jmp
test
or
push
add
aas
fist
enter
mov
add
adc
cdq
cmp
or
or
or
nop
fmul
imul
sub
add
add
inc
sahf
out
add
add
repnz
xor
adc
inc
and
push
push
mov
xor
mov
imul
(bad)
fld
mov
pop
sbb
push
pop
fsub
(bad)
pop
lahf
or
adc
push
lods
push
sub
or
sbb
push
(bad)
jae
nop
cs
cs
dec
jmp
sub
fsub
pop
xchg
mov
and
cmp
gs
test
mov
cmp
adc
add
jnp
mov
or
jmp
es
packuswb
sub
push
movs
sub
or
(bad)
sbb
(bad)
pop
push
jns
or
and
hlt
add
sbb
enter
(bad)
clc
add
or
dec
(bad)
cmp
push
pop
pushf
fadd
add
fcmovne
popf
ins
pop
cwde
xor
gs
mov
xchg
shl
mov
inc
xor
mov
popa
xchg
cmc
mov
lds
rol
and
ror
mov
lea
mov
rcr
pop
in
loopne
xor
outs
pop
add
rol
scas
pushf
adc
jg
aad
pop
pushf
xlat
push
pusha
adc
ret
push
movs
mov
or
and
push
call
outs
aaa
fwait
push
pusha
lds
xlat
dec
pop
imul
movs
mov
mov
fdivr
dec
push
adc
sbb
pop
or
add
xor
xor
push
dec
sbb
or
xor
xor
mov
enter
lea
(bad)
popf
and
or
xchg
inc
pop
movs
and
das
leave
mov
sahf
push
lods
movs
aam
inc
mov
fbstp
aaa
push
sbb
pop
arpl
inc
or
xor
icebp
sub
pop
push
xor
jo
push
push
inc
test
sbb
nop
and
add
add
inc
xchg
and
xchg
call
pop
push
inc
inc
movs
lock
or
push
test
sub
mov
in
or
mov
dec
les
popa
loopne
aam
push
outs
mov
mov
inc
stos
mov
and
jae
push
retf
xchg
imul
push
jns
inc
aas
inc
add
ss
shl
mov
mov
add
jns
jae
cmp
popa
add
add
adc
add
dec
adc
push
jo
inc
cmp
popf
icebp
pop
movs
mov
push
mov
mov
nop
inc
push
cwde
(bad)
loopne
sub
cdq
loopne
mov
mov
sbb
inc
or
pusha
pop
xor
jo
int3
mov
enter
imul
ins
cmp
mov
push
xchg
fs
bound
out
popf
mov
inc
xchg
nop
xor
dec
or
pop
xchg
repz
mov
fcom
inc
push
cdq
fcomp
push
(bad)
rol
test
test
jne
daa
mov
and
test
xor
push
shl
rol
lock
push
sub
fwait
dec
push
aad
adc
dec
jae
xchg
pop
or
pop
lds
mov
dec
dec
ds
cmps
shl
cdq
shl
je
push
gs
movs
dec
xchg
lods
in
outs
or
xchg
mov
pop
xchg
(bad)
aam
xchg
cmp
adc
mov
ins
test
aad
les
cmp
cmp
ret
pop
dec
pop
mov
cmps
fcomp
fnsave
cmps
scas
and
int3
out
xchg
inc
dec
movs
inc
les
sub
jno
cmp
sbb
imul
xor
nop
xchg
pop
add
adc
cmp
xchg
add
fsub
add
add
cmps
and
rdtsc
das
jmp
movs
test
add
call
movs
mov
iret
mov
jnp
aad
bound
dec
jae
fcom
sub
mov
xor
dec
dec
pop
add
mov
mov
push
sbb
rol
cmps
enter
sub
or
push
mov
push
rol
xor
adc
xor
ror
jae
mov
sbb
xchg
enter
dec
inc
pop
fstp
xor
movs
imul
retf
mov
jmp
enter
mov
inc
xchg
and
mov
adc
in
mov
ins
out
xor
or
fs
sbb
and
enter
push
and
sub
xchg
lea
add
test
and
xchg
or
dec
cmp
xchg
(bad)
loop
add
mov
(bad)
test
mov
sbb
stos
inc
pop
mov
mov
mov
xchg
pop
xor
adc
rcr
or
ret
sub
or
outs
call
or
or
add
or
sbb
(bad)
and
and
adc
call
loop
scas
in
inc
adc
sub
in
and
jl
mov
inc
data16
and
sub
add
repnz
or
js
and
mov
rcl
inc
call
outs
xor
xor
push
xchg
sbb
test
or
xchg
enter
xor
pop
mov
or
and
mov
mov
movs
xchg
add
push
inc
mov
fmul
add
dec
adc
jnp
xchg
mov
dec
lods
stos
inc
cmp
(bad)
or
add
add
mov
or
inc
pop
pop
mov
cdq
mov
dec
(bad)
sbb
dec
push
push
clc
or
rcl
add
push
in
pop
imul
adc
ret
mov
adc
push
adc
enter
int
inc
gs
(bad)
inc
popf
or
(bad)
mov
and
xor
add
inc
mov
push
sub
test
cmp
sbb
mov
jo
add
loope
jns
fmul
pop
push
es
push
cmp
sub
or
add
ins
jne
out
inc
inc
or
(bad)
xor
and
dec
and
mov
ret
popa
rcl
fld
loopne
leave
pop
xchg
sbb
fcomp
sahf
ss
push
aad
xchg
mov
and
test
and
rcl
and
sahf
dec
enter
gs
cmps
or
cwde
aam
and
mov
lds
enter
daa
cmp
jno
add
mov
sbb
das
pop
xor
cli
imul
rcl
adc
inc
loopne
adc
pusha
inc
loope
or
mov
test
ret
inc
adc
add
enter
and
mov
push
or
pop
and
mov
lea
sbb
sub
repz
inc
mov
sub
sbb
nop
cli
cmps
dec
pop
adc
and
cmp
lock
shl
pop
call
loope
sub
add
sbb
test
jl
repz
and
xchg
imul
in
pusha
es
mov
or
fisttp
data16
mov
xor
inc
sbb
or
add
adc
fwait
push
(bad)
retf
jns
push
or
cdq
mov
cmp
sbb
cmp
sub
enter
push
iret
push
sub
mov
cmp
mov
sub
or
and
pop
dec
inc
push
jo
lods
add
dec
pop
repnz
cmp
sub
inc
add
add
repnz
add
adc
xor
push
mov
sbb
push
adc
pusha
sbb
mov
dec
adc
mov
retf
test
add
sub
stos
or
xor
add
dec
in
or
outs
repz
dec
setbe
clc
xchg
in
loopne
(bad)
push
xor
push
xor
pop
cmp
bound
nop
sub
popa
jo
or
jle
test
mov
cmp
mov
xchg
ins
push
js
cmp
pop
pop
test
(bad)
cmc
sahf
add
fidiv
xor
cmp
inc
pop
push
push
dec
and
add
jae
inc
dec
adc
or
xchg
xchg
pop
add
mov
pushf
mov
sbb
pop
or
sbb
inc
push
push
scas
sub
pop
mov
pop
fwait
popf
popf
scas
jmp
push
sbb
mov
cs
inc
add
pop
inc
and
and
sbb
xchg
push
push
iret
loopne
add
add
test
dec
xchg
mov
ss
fild
push
or
add
or
add
rol
rcl
loop
dec
ins
inc
out
or
inc
aas
jbe
test
enter
inc
es
fxch
sub
fdiv
es
xchg
scas
sub
mov
add
inc
xor
sub
xlat
pusha
dec
or
push
jb
cmp
shl
xlat
lock
iret
imul
add
shl
push
xlat
and
push
add
dec
and
xchg
btc
mov
cmp
pushf
hlt
(bad)
pusha
inc
mov
in
dec
pop
xor
imul
xor
and
or
jge
inc
ret
mov
adc
pop
lods
fsub
mov
or
jae
inc
shl
push
imul
cmp
enter
movs
add
jmp
mov
mov
adc
jmp
add
gs
ret
sub
aaa
sbb
jb
mov
dec
cmp
inc
fist
jo
and
shr
dec
xchg
add
sbb
xor
xchg
mov
js
shr
jne
inc
cmps
dec
jmp
jl
inc
jno
ins
cmp
pop
mov
bound
or
jmp
jmp
cmp
loopne
(bad)
cmps
(bad)
dec
jg
and
dec
repz
mov
cs
or
pop
and
or
pop
test
call
inc
stc
inc
loope
and
pusha
mov
leave
pop
cmps
loopne
pop
ret
rol
push
or
mov
loopne
push
shl
or
and
add
pop
retf
and
mov
inc
add
mov
push
ror
sbb
push
sub
sbb
mov
cmp
add
and
lods
dec
xchg
jle
add
adc
mov
fs
mov
add
xchg
sbb
add
cmp
lahf
test
scas
and
nop
add
je
retf
mov
pop
pop
addr16
jne
cmp
mov
add
movs
push
mov
jae
ins
mov
dec
adc
xchg
popa
sahf
sbb
loope
fwait
mov
sti
int3
dec
shl
cwde
sbb
aas
jecxz
and
hlt
movs
cmp
je
adc
add
xchg
dec
sbb
sbb
mov
pop
push
push
jnp
push
rep
(bad)
jo
push
fild
or
stos
mov
lock
push
(bad)
inc
cmp
jae
add
adc
add
enter
fist
jmp
mov
dec
mov
and
lahf
fidiv
mov
mov
pusha
ins
push
adc
pop
ins
mov
push
inc
stos
mov
je
add
or
pop
ret
stos
mov
mov
sbb
mov
enter
dec
xlat
pusha
or
pop
movs
mov
fdivr
pop
pushf
mov
mov
(bad)
push
ss
dec
add
adc
or
jmp
dec
inc
(bad)
shl
push
push
lds
mov
push
pop
bound
jl
and
mov
jne
xchg
jo
push
ins
arpl
dec
sahf
test
mov
dec
fwait
cmp
mov
xchg
fwait
das
fwait
push
xor
add
sub
sub
mov
enter
inc
les
xchg
add
push
jo
pop
xchg
jg
sbb
mov
ins
arpl
arpl
cmp
and
in
movs
inc
inc
xchg
xor
adc
dec
mov
inc
add
movs
mov
ins
or
mov
xor
(bad)
rol
pop
sbb
ret
cwde
dec
or
xchg
loope
shr
mov
lods
sub
test
push
mov
sub
jno
ds
sbb
jmp
push
mov
rol
sub
mov
xchg
and
fldenv
pop
mov
in
je
sub
test
mov
adc
and
pop
add
mov
imul
and
imul
inc
mov
sub
adc
popa
inc
push
inc
stos
aas
rol
add
push
dec
sbb
scas
or
data16
push
pop
add
pop
push
outs
fcomp
jb
or
ss
pop
inc
call
fistp
mov
addr16
inc
jo
aam
imul
push
push
dec
dec
mov
mov
ds
aaa
or
cmp
pusha
pop
mov
inc
dec
aam
ja
movs
ins
pop
cmp
dec
shr
je
jbe
mov
movs
add
push
leave
or
fcom
fstp
sub
fcmovb
sbb
fadd
jne
adc
fs
sub
fbld
adc
pop
pop
iret
xchg
xor
mov
dec
add
xchg
or
je
inc
and
adc
movs
rol
int
in
add
mov
aad
mov
push
mov
dec
cwde
mov
mov
add
adc
and
sbb
and
pop
stc
add
cmp
stos
fild
cmp
or
fmul
enter
sub
sub
sub
fdivr
or
leave
inc
sub
enter
fcmovnb
dec
inc
or
inc
pop
cmp
cs
cdq
inc
push
push
xor
sbb
add
xor
in
or
push
or
and
dec
shl
popf
sbb
jb
stos
inc
pop
dec
dec
adc
add
jae
add
(bad)
push
movs
mov
inc
cmps
add
and
xor
enter
xlat
pop
adc
add
leave
or
inc
cmps
mov
imul
clc
sbb
addr16
push
ficom
xor
push
movs
or
push
rcl
push
sbb
xchg
jmp
mov
push
xor
adc
dec
sub
xchg
or
rcl
les
pop
in
pop
mov
push
outs
push
sub
daa
xor
push
xor
cmp
fs
mov
dec
sub
or
retfw
ret
les
mov
push
and
mov
push
test
pusha
xchg
popa
aas
ret
(bad)
aaa
jg
inc
mov
or
add
push
cmps
sbb
stc
gs
adc
push
adc
inc
enter
add
in
enter
push
aam
inc
inc
xchg
aam
add
movs
rol
push
xchg
sbb
mov
mov
pusha
jmp
mov
mov
ror
or
xor
ud1
ins
fimul
outs
add
inc
sub
stos
pop
inc
add
dec
aaa
pop
repnz
rcl
pop
aas
push
loope
fistp
lahf
and
sbb
bound
push
sbb
mov
push
fs
fadd
sbb
adc
adc
lock
mov
add
push
pop
adc
jno
xor
fsubr
add
xor
xlat
in
or
adc
imul
daa
ins
or
cdq
fld
pushf
cmps
push
lea
pop
add
add
and
jecxz
add
push
lds
and
xor
pop
mov
jne
mov
cmps
sbb
cmp
sub
inc
mov
push
in
adc
inc
call
inc
mov
dec
leave
pusha
aaa
push
repz
lahf
push
arpl
lea
push
cmp
daa
sub
pop
xor
pop
jge
cdq
and
or
pextrw
push
add
sbb
dec
int3
and
mov
fidiv
xor
mov
shr
out
dec
push
sub
test
mov
add
adc
pop
push
xchg
dec
inc
jb
push
lahf
js
push
rcl
cs
inc
mov
xor
add
call
pop
inc
push
mov
inc
test
stos
sub
mov
push
lahf
fwait
push
mov
or
sar
fistp
je
aaa
fwait
dec
arpl
pop
dec
dec
ror
sub
dec
dec
stos
adc
fidiv
and
fld
pop
test
sub
xchg
xchg
shl
inc
cld
push
mov
rcl
je
add
(bad)
fstp
push
loopne
xchg
pop
adc
push
pop
test
cdq
dec
push
je
rcr
jecxz
(bad)
pusha
test
mov
jo
or
xchg
xor
inc
push
aad
cmp
(bad)
xor
push
call
push
push
pop
mov
or
outs
les
imul
xchg
dec
or
inc
clc
dec
add
(bad)
out
test
inc
out
aam
mov
(bad)
xor
cs
aaa
add
repz
lds
(bad)
(bad)
push
push
sub
sub
movs
mov
add
pop
sahf
mov
jle
jecxz
add
push
or
add
and
sub
mov
pop
nop
sbb
addr16
sbb
ins
xchg
lods
rcr
retf
addr16
and
jb
dec
inc
mov
ret
iret
(bad)
ins
fs
add
nop
and
int3
add
push
mov
adc
int
pop
inc
pusha
and
cmp
loope
pusha
loopne
jecxz
jb
sbb
dec
sub
jo
push
push
ja
enter
pop
pusha
or
dec
mov
adc
lds
adc
xor
jg
dec
dec
push
mov
push
push
in
push
(bad)
push
loope
fstp
leave
cs
cwde
inc
popa
add
jecxz
inc
shr
xchg
mov
mov
enter
mov
fdivr
nop
pop
mov
les
push
adc
inc
ja
pop
dec
mov
xor
inc
sbb
mov
dec
dec
xchg
mov
jp
mov
in
and
push
jg
jne
dec
and
mov
pop
rcl
mov
or
sbb
mov
push
xchg
int
xchg
jecxz
jne
sub
add
data16
call
adc
or
add
or
sbb
stc
es
sub
call
jbe
sbb
movs
mov
mov
daa
sub
fwait
jmp
mov
iret
add
nop
cmps
mov
or
inc
push
add
inc
dec
push
dec
imul
pop
inc
push
data16
das
push
pop
loope
mov
jmp
loopne
jmp
mov
rcr
cmps
xor
cmps
push
fwait
cmp
into
push
dec
aas
mov
shr
mov
push
or
aam
lea
xchg
sbb
add
les
sub
(bad)
pop
mov
add
adc
sbb
sbb
xor
or
repnz
inc
jg
or
mov
push
mov
push
sub
xor
xor
les
add
cs
jns
mov
or
hlt
push
neg
std
lods
inc
and
mov
test
jae
and
dec
inc
adc
sbb
jg
jno
mov
xchg
inc
add
push
inc
jns
xor
(bad)
or
loope
sub
sub
push
mov
xchg
js
sub
sub
cmp
dec
xchg
mov
pop
les
in
icebp
sahf
test
mov
sbb
adc
or
loopne
or
mov
(bad)
cdq
push
sub
imul
mov
fsubp
pop
push
mov
jns
ins
es
daa
test
das
rol
lahf
pusha
cdq
pusha
fsub
inc
mov
xor
retf
fdivr
sbb
pushf
mov
ds
loope
push
mov
fcmovnb
arpl
inc
lods
xchg
lock
movs
sub
jno
in
xor
dec
pop
mov
mov
das
pop
xor
inc
push
xchg
or
xchg
push
xor
inc
dec
xchg
dec
xchg
es
dec
jmp
lahf
push
xchg
or
mov
cmp
or
stos
and
popf
and
push
xor
or
les
inc
and
cmps
xchg
jo
cmp
or
pop
fisttp
push
icebp
cwde
aaa
lahf
xor
addr16
and
cmp
inc
sub
jns
call
push
dec
xor
int3
ror
or
cmp
lods
int3
loope
and
jae
push
das
movs
or
arpl
lods
push
test
movs
fiadd
mov
push
inc
sub
and
xchg
or
xchg
mov
daa
or
mov
xor
lods
movs
into
movs
movs
addr16
jo
and
test
(bad)
sbb
mov
cmp
xor
mov
jmp
iret
repnz
add
push
and
xlat
or
mov
adc
in
push
xchg
mov
mov
pusha
in
add
and
add
repz
push
mov
cwde
fisub
in
aad
sbb
retf
push
xchg
pop
add
loopne
add
fst
(bad)
in
fbld
cld
sub
push
test
leave
add
retf
adc
ret
xor
jb
push
add
arpl
sti
retf
push
add
push
and
in
ins
nop
fcmovbe
pop
fimul
retf
sbb
mov
and
mov
int3
jmp
leave
test
js
and
xor
or
mov
fs
fs
pop
adc
push
jo
retf
mov
fnstenv
jmp
sub
retf
push
or
lds
sub
loope
int3
jns
mov
in
js
(bad)
add
mov
and
in
sub
mov
rcl
stos
push
in
arpl
sbb
jns
mov
mov
xchg
les
sbb
clc
in
cmp
cmp
or
cmp
loope
mov
dec
jp
jp
add
fcmovu
mov
push
aad
mov
rcl
xor
add
pop
aam
mov
in
out
in
xchg
inc
sar
cmp
cld
jp
mov
inc
push
add
and
or
jnp
fld
pop
inc
push
and
fistp
pop
inc
pusha
mov
adc
jo
mov
ret
push
test
mov
in
rol
push
fcmovnb
cmp
push
pop
sahf
fsub
lock
xor
push
pop
test
sub
push
push
test
jg
push
adc
inc
or
xchg
data16
(bad)
add
xor
inc
xchg
lods
mov
adc
push
mov
xor
pop
aad
mov
add
icebp
or
mov
es
repnz
inc
add
addr16
mov
sub
push
or
jl
jl
shr
push
imul
shl
cmp
mov
dec
sub
mov
dec
mov
push
add
add
jb
leave
mov
adc
add
add
push
rol
xchg
mov
xchg
push
push
or
lea
xchg
scas
and
xor
nop
nop
aas
repnz
and
dec
inc
add
enter
das
test
outs
sbb
repnz
jb
aaa
hlt
pop
inc
in
sub
data16
dec
dec
adc
test
cld
jmp
ins
or
loopne
or
inc
sbb
gs
out
cmp
and
add
lods
adc
xor
or
imul
mov
arpl
jns
int
(bad)
rcl
or
nop
xchg
xchg
push
sbb
and
adc
neg
fnstcw
in
fsub
sbb
punpckhbw
test
popf
xchg
push
jbe
adc
mov
jno
and
jmp
sbb
jle
frstor
call
and
dec
les
pop
fwait
xchg
jo
nop
mov
test
sub
mov
sahf
movhps
xchg
dec
push
push
scas
test
sbb
clc
push
mov
cmp
jae
adc
cdq
add
add
pop
adc
add
or
xor
jmp
retf
jae
(bad)
rcr
fimul
test
adc
xchg
sub
shr
or
dec
and
sub
cmp
test
adc
sub
push
test
repnz
add
test
xchg
and
sbb
test
add
jo
fld
xor
dec
fcmovbe
xor
ins
ror
mov
clc
dec
mov
push
mov
push
jno
rol
bound
xchg
add
xchg
fistp
and
in
imul
cmp
add
les
cmps
sbb
sub
mov
xor
jns
xchg
pusha
and
mov
or
add
sbb
fstp
test
mov
and
cmp
int3
int3
add
adc
xchg
cmp
add
add
out
mov
add
dec
push
push
mov
add
adc
(bad)
xor
pop
push
push
movs
or
add
xchg
mov
rcl
loope
mov
ror
sbb
sbb
js
adc
or
call
or
and
cmp
pop
(bad)
add
(bad)
or
daa
loopne
inc
dec
add
and
xor
inc
mov
enter
push
cmp
and
push
movs
adc
es
clc
push
inc
loop
mov
pop
adc
pop
adc
xor
xchg
or
pop
push
test
movs
aaa
inc
sbb
push
sub
sub
dec
push
movs
in
mov
inc
mov
or
xor
and
hlt
ss
les
gs
xor
in
lods
xlat
sbb
mov
test
add
das
call
leave
adc
xor
or
das
(bad)
or
aas
pop
dec
pushf
and
add
les
sub
pop
dec
(bad)
inc
aam
shl
mov
cmp
cmc
xchg
mov
xchg
ins
adc
aad
jecxz
and
ret
jp
shr
mov
sub
call
xchg
push
xor
and
icebp
sbb
loopne
cmps
test
push
pop
ja
fdivr
icebp
pusha
sbb
add
adc
mov
or
add
sub
(bad)
not
jg
push
sbb
push
cmp
lds
adc
push
lods
or
adc
push
bound
push
pop
push
dec
push
or
in
push
and
mov
test
sub
pop
aam
shr
mov
sbb
in
sub
and
mov
mov
in
dec
out
xor
mov
mov
xor
jmp
in
stos
add
in
mov
outs
jnp
test
in
es
js
xchg
jbe
rol
lea
loop
inc
fwait
test
lods
ss
push
add
int
inc
push
aaa
out
mov
adc
ins
test
pop
cmp
movs
hlt
loop
push
push
xor
cmp
test
push
(bad)
cli
mov
adc
out
test
pop
inc
and
leave
gs
xor
sub
sub
mov
mov
icebp
add
push
sbb
mov
xchg
mov
cmp
and
test
and
sub
inc
repnz
cs
push
inc
jo
jns
nop
adc
retf
inc
and
nop
mov
inc
jecxz
mov
cwde
cmp
push
adc
or
add
add
and
add
retf
or
and
lahf
lahf
cmp
cmp
xor
sub
imul
sub
xchg
lea
test
inc
jmp
rcl
dec
movs
push
icebp
pop
adc
add
sbb
test
xor
rcl
sub
add
push
ret
loope
(bad)
cmp
fcomp
inc
add
pusha
lock
call
sbb
jmp
sbb
lods
xchg
push
or
aas
add
mov
stos
sub
mov
(bad)
gs
cmp
push
push
jbe
add
jo
or
les
add
jge
loopne
lods
dec
out
jne
push
push
xor
or
loopne
push
int3
push
in
sub
push
fld
and
add
ret
inc
push
push
mov
stos
loopne
test
mov
loope
scas
inc
dec
push
fadd
or
pushf
rcl
ins
adc
sub
cmp
xor
pop
(bad)
in
popf
xor
xor
mov
test
mov
mov
mov
enter
push
ss
js
and
adc
mov
sub
add
imul
add
or
adc
nop
push
add
add
sub
popa
add
inc
dec
push
pop
push
dec
dec
dec
loope
popa
inc
scas
dec
inc
jae
data16
and
add
mov
add
jg
sub
outs
pop
popa
fs
data16
popa
outs
aas
dec
inc
imul
jno
fwait
shr
add
cdq
test
es
mov
mov
or
pusha
call
mov
add
mov
pop
and
fs
imul
mov
mov
imul
test
or
push
fiadd
lea
imul
mov
push
add
or
xor
mov
and
push
add
shl
xor
jns
jg
xchg
xchg
outs
sub
mov
bound
xor
jle
gs
push
dec
gs
outs
ins
bound
sahf
push
jns
push
dec
xchg
pop
add
push
adc
in
es
daa
push
or
call
add
jmp
call
sub
mov
pop
movs
jne
push
pop
add
cmp
and
rol
sub
or
lds
ss
mov
xlat
dec
jb
xor
test
add
push
and
fisub
pop
push
sbb
mov
or
out
xor
or
xor
add
sub
add
cmps
add
cmp
ja
mov
pop
retf
call
jne
or
(bad)
rcl
dec
js
out
loopne
lods
mov
push
push
sub
or
dec
and
sbb
push
dec
adc
mov
rcr
xor
pop
push
add
dec
ficom
add
in
xor
fisub
pop
rol
loop
out
xor
mov
mov
push
inc
and
inc
dec
mov
fisubr
inc
pop
xor
sahf
jnp
add
dec
stc
or
jg
add
add
xor
test
mul
xchg
add
inc
dec
cmp
jg
ins
and
mov
pop
cmp
cmp
mov
gs
pop
xor
and
jb
pop
int3
fwait
loope
test
jae
jb
ss
lea
fild
add
mov
xchg
adc
xor
ins
inc
imul
sbb
or
mov
je
sahf
sbb
xchg
cmp
push
(bad)
cmp
outs
xchg
push
dec
add
add
in
enter
cmp
push
pop
pop
add
xchg
xchg
mov
out
ss
cmp
or
iret
mov
sub
push
or
stos
int
cmps
mov
fisub
sbb
call
and
sbb
in
and
pusha
push
ins
mul
pop
xor
sbb
add
sbb
ds
inc
xor
nop
cmp
lods
popa
mov
rol
xchg
pop
jae
xor
cmp
fsub
inc
lods
xor
xor
ins
test
inc
push
jp
inc
loopne
sub
add
mov
popf
neg
dec
sbb
and
call
das
cmp
inc
inc
jne
mov
out
xor
pusha
mov
mov
(bad)
mov
ret
push
cwde
ror
std
stos
loopne
call
sub
les
aas
push
push
fld
mov
fstp
cwde
adc
or
jmp
push
xor
retf
sbb
jne
dec
pop
shl
adc
and
lds
sub
imul
push
adc
pop
sub
lahf
pop
shl
sbb
fld
(bad)
(bad)
fist
pop
dec
add
add
imul
push
push
loopne
sidtd
add
add
inc
adc
fst
inc
ja
aaa
retf
xor
push
jnp
mov
mov
adc
ret
cmp
aaa
mov
pop
(bad)
add
sub
icebp
gs
ret
sub
and
and
int3
mov
pop
mov
dec
cs
scas
jae
xor
and
inc
or
sbb
mov
fs
(bad)
idiv
jb
or
cs
jb
and
pop
loopne
pusha
and
jge
add
movs
cmp
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
