sbb
add
inc
in
pop
jp
out
xor
cmp
push
ror
sub
mov
(bad)
jae
mov
xchg
pop
mov
movs
cmp
rol
fadd
(bad)
retf
lea
adc
inc
pop
pop
dec
xchg
ins
sub
pop
mov
dec
sub
(bad)
adc
test
mov
aaa
push
and
and
movs
and
sahf
xchg
sub
mov
inc
mov
lahf
xor
mov
pop
fdivr
fist
test
ja
mov
pop
sub
inc
or
cmp
out
mov
mov
push
mov
repz
adc
fs
(bad)
shl
sub
inc
mov
or
outs
and
ret
xchg
cmp
inc
cmp
gs
call
jmp
add
cmp
imul
jnp
(bad)
xor
pop
mov
or
dec
push
inc
enter
clc
out
xchg
xor
pop
lds
mov
jb
adc
fsubr
inc
mov
loope
repz
cli
pop
add
fcom
add
mov
pop
cmps
jle
imul
xor
lods
jmp
adc
pop
div
imul
jnp
xor
mov
sti
jno
mov
in
fidivr
daa
mov
fild
mov
enter
fs
mov
jmp
jns
and
mov
and
cmp
mov
fsub
(bad)
cmps
mov
movs
push
sub
xor
outs
inc
fidiv
sub
call
(bad)
aas
xor
ret
(bad)
retf
add
xchg
loop
loopne
cmp
cmc
fsubr
sbb
inc
sub
mov
retf
mov
cld
ret
sub
adc
adc
(bad)
xchg
lods
ja
mov
xchg
mov
inc
clc
pop
xchg
and
jp
lock
cs
das
mul
ret
movs
dec
mov
mov
xlat
outs
cmp
or
lods
mov
leave
push
shr
push
lock
pop
mov
(bad)
data16
mov
fwait
add
dec
or
out
nop
mov
mov
lods
mov
mov
xor
ins
daa
add
mov
test
jb
inc
mov
cmp
push
js
pusha
cwde
mov
inc
mov
and
add
call
or
(bad)
pop
dec
ret
pusha
inc
out
or
das
fist
repz
and
stos
(bad)
push
rol
(bad)
fsub
pop
retf
sub
je
mov
test
icebp
lods
dec
jb
jnp
fidiv
jmp
pop
aam
test
repnz
repnz
repnz
sti
or
je
dec
mov
leave
jg
or
xchg
cmp
repz
and
mov
loopne
fiadd
push
inc
mov
(bad)
les
fldenv
int3
adc
in
repnz
adc
mov
imul
xor
rcl
jb
sti
stos
in
cmp
jae
fidiv
out
jmp
add
outs
mov
cmp
pushfw
xor
(bad)
jmp
xor
jl
xchg
add
mov
sbb
push
add
jl
iret
std
dec
cmp
xchg
add
mov
or
fstp
sbb
test
addr16
sbb
mov
inc
arpl
sbb
mov
(bad)
lea
test
xor
dec
je
mov
fdiv
outs
mov
iret
test
in
scas
stos
mov
loopne
mov
outs
xor
inc
movs
(bad)
and
aad
mov
cmp
mov
and
ficom
stc
push
call
rcl
popa
fist
and
jl
sbb
jb
mov
int
bound
retf
sub
and
sti
pushf
adc
xor
and
sbb
pop
xor
pop
and
lahf
ins
xchg
pop
inc
adc
aaa
sbb
dec
pop
std
fs
or
not
mov
mov
pop
push
mov
sub
push
mov
outs
repnz
fsub
cmp
(bad)
xor
xchg
and
lods
mov
dec
fs
inc
and
sbb
mov
fmul
retf
daa
mov
cmps
sbb
aam
das
inc
les
mov
adc
(bad)
cmp
mov
pop
xchg
cmc
sbb
push
mov
ins
cmp
xchg
test
imul
int3
ja
jl
pop
js
sbb
xlat
es
jmp
pop
stos
jge
add
dec
lahf
(bad)
jo
shl
push
mov
pop
les
xchg
inc
into
xor
pushf
test
jbe
(bad)
pop
not
aaa
pop
jg
clc
sbb
fst
je
pop
or
add
in
dec
adc
dec
shl
in
lods
stos
ja
mov
mov
js
ds
inc
pop
lahf
sub
jp
jno
adc
jbe
cmp
push
inc
and
jle
jbe
int
mov
scas
mov
sar
stos
js
and
add
sub
cmp
pusha
push
(bad)
adc
(bad)
fiadd
fidivr
cmps
mov
out
add
jbe
and
adc
pop
(bad)
pop
xchg
push
or
dec
popf
adc
fisub
(bad)
cmp
and
movs
push
lods
mov
movs
inc
lahf
pop
adc
jle
add
fstp
mov
xor
inc
ins
rcr
loope
callw
rcr
(bad)
sbb
mov
movs
test
mov
test
cmp
fisub
test
and
sbb
mov
mov
ss
add
xchg
jle
lds
cmps
xchg
jmp
inc
sbb
sbb
in
bound
aad
mov
xor
ins
cmp
and
jnp
push
dec
xor
pop
sbb
add
in
cli
frstor
jbe
push
jns
popf
xchg
sub
dec
push
and
xor
adc
sub
das
dec
mov
push
retf
loop
mov
cwde
loop
pop
leave
lock
mov
mov
inc
push
(bad)
fiadd
lahf
gs
sub
rcl
outs
aam
loop
xchg
jns
dec
loope
int3
ret
mov
inc
pop
imul
xchg
xor
mov
and
pop
sub
xor
repnz
or
xchg
adc
test
(bad)
popa
dec
in
out
repnz
sub
fcomp
jge
sysret
stos
inc
outs
xchg
push
popf
ficomp
and
scas
jne
in
rcr
push
inc
arpl
inc
xchg
mov
pop
stos
fistp
mov
sbb
add
movs
outs
xor
imul
int
jl
in
test
imul
sahf
cmp
pusha
(bad)
sub
int
sbb
ror
mov
mov
clc
push
pop
cs
cmp
fdivrp
js
in
fst
sub
fiadd
call
or
mov
into
pop
rol
test
ins
pusha
sbb
hlt
ficom
daa
mov
loope
adc
js
(bad)
xor
cdq
sub
ds
leave
xor
retf
nop
xchg
mov
jg
or
aas
add
mov
outs
mov
push
rol
xchg
and
push
mov
mov
ins
test
pop
inc
xlat
inc
movs
pop
inc
test
ret
bound
jb
jge
popf
(bad)
fild
mov
and
push
xlat
js
pop
(bad)
retf
mov
mov
mov
dec
xchg
or
xor
arpl
pop
in
out
jge
dec
cmp
mov
mov
loope
stos
sub
hlt
in
mov
jp
sbb
popf
inc
dec
das
in
ss
fcomp
add
repnz
arpl
adc
or
(bad)
daa
scas
lahf
push
ds
retf
or
xor
je
jae
xchg
jg
aad
and
xor
cmove
jne
or
lea
mov
dec
in
lods
stos
stc
xor
xor
add
push
or
popf
ss
jmp
and
movs
adc
xlat
hlt
lods
hlt
mov
ror
cmp
push
and
aas
sahf
hlt
adc
mov
adc
pop
pop
es
pop
jge
scas
jae
mov
outs
sub
(bad)
fwait
(bad)
mov
xchg
sbb
cmp
mov
in
fcomp
ins
jb
ins
sub
adc
(bad)
ds
test
mov
xor
test
bndstx
dec
jg
enter
add
jne
sub
(bad)
pop
movs
dec
add
dec
shr
aad
sbb
shl
cld
shr
sbb
jae
into
lock
es
push
mov
in
ret
push
cmps
push
test
cmp
xor
mov
and
sahf
push
mov
in
push
fwait
sti
mov
fld
scas
out
stos
jg
sub
lock
pop
jae
int3
mov
mov
sar
jae
sahf
push
ds
shr
and
ins
fcom
push
shl
daa
es
pop
stos
sar
cmp
pop
push
inc
rol
out
sub
loopne
dec
dec
xchg
and
add
mov
int3
fnstsw
adc
hlt
xchg
nop
push
dec
(bad)
sub
pushf
mov
dec
xchg
ins
int
movs
mov
retf
add
bound
test
mov
xchg
dec
hlt
in
dec
rol
mov
cmp
int
scas
pop
inc
jmp
add
cli
jg
ja
xchg
mov
popf
icebp
jle
ds
push
cmp
sar
bnd
add
xchg
leave
lods
pop
bound
into
mov
lock
iret
dec
xchg
inc
fild
jmp
jge
adc
scas
or
das
pop
hlt
loop
cmp
ficom
fnsave
cmc
cmp
jmp
rcl
stc
bound
sub
sti
(bad)
int3
mov
sub
call
pop
push
out
mov
sbb
mov
mov
imul
aas
outs
stos
shr
sub
cmp
dec
cmps
cmp
hlt
das
inc
adc
xor
mov
push
sub
mov
ror
ins
xor
mov
mov
adc
in
stc
sahf
loopne
mov
add
cs
ins
push
hlt
pop
aaa
add
mov
leave
int
aaa
dec
jmp
pop
lahf
sbb
dec
adc
xchg
push
or
popf
in
jge
retf
outs
mov
xchg
add
movs
inc
dec
js
mov
add
fmul
sub
js
lods
fsubr
adc
pop
psllw
test
imul
push
je
ds
cmp
jp
pop
sub
popa
imul
mov
rcr
or
xor
push
mov
or
sub
out
sub
and
and
pushf
clc
jno
cli
push
mov
mov
mov
outs
inc
pop
inc
or
mov
pop
inc
les
xlat
les
push
lods
add
retf
fimul
adc
outs
inc
or
imul
adc
xor
loope
dec
scas
bound
lea
daa
mov
(bad)
pop
mov
and
inc
outs
and
dec
bound
nop
inc
pop
pop
imul
je
inc
pop
into
je
mov
mov
ss
and
inc
repz
or
mov
jno
jbe
sub
inc
mov
jmp
es
(bad)
ins
sub
rcl
jno
outs
push
leave
sar
jnp
dec
inc
sbb
add
cmps
mov
jnp
jo
fld
in
fmul
ja
and
jmp
out
add
bound
adc
outs
cmp
jmp
aad
in
ret
push
cld
scas
(bad)
popf
mov
sbb
xadd
push
js
or
into
(bad)
std
dec
pop
enter
push
leave
sbb
out
pop
fsub
jb
inc
sbb
sub
inc
or
cmp
ja
sbb
sahf
lahf
jecxz
daa
cmp
outs
add
daa
mov
push
sub
xchg
fsubrp
or
mov
lods
outs
daa
sbb
and
mov
push
adc
leave
jle
adc
cdq
and
mov
sub
(bad)
in
test
iret
popf
lods
lea
push
loope
dec
ret
inc
inc
inc
mov
jb
add
(bad)
xor
cld
xor
lods
(bad)
sbb
aad
xchg
loope
pop
mov
repnz
xchg
imul
jge
dec
in
pusha
adc
xchg
das
pop
sbb
lds
addr16
mov
sti
adc
ret
push
xor
out
xor
cmp
or
push
add
jmp
xchg
pop
loopne
daa
fsubrp
ins
pop
fdiv
xchg
fidivr
test
or
push
retf
int3
std
out
cmp
pusha
inc
in
mov
or
shr
xor
jb
mov
mov
repnz
mov
psubq
mov
lock
aam
leave
enter
mov
sbb
test
fstp
pop
(bad)
outs
mov
ret
(bad)
xchg
or
mov
add
sub
add
push
push
arpl
scas
pop
js
cwde
jbe
inc
mov
cmc
jns
jnp
pop
out
jmp
mov
inc
ret
sbb
rcl
mov
cdq
jg
sbb
sbb
(bad)
lock
repz
push
mov
jb
movs
in
retf
jp
out
mov
push
shl
inc
aaa
aaa
out
fsub
push
int
push
mov
dec
scas
daa
mov
and
xchg
(bad)
jge
dec
scas
bnd
push
loope
sub
or
add
aaa
aaa
push
mov
js
cmps
cmp
dec
cmp
aaa
dec
aaa
loop
dec
xchg
mov
fcom
int3
pop
cmp
pop
jmp
(bad)
xchg
sub
add
(bad)
fcomp
or
outs
jns
and
sub
bound
retf
mov
cmp
cs
rcl
xchg
movs
aam
mov
shl
iret
and
dec
int
fwait
shr
test
jmp
ss
add
pop
imul
aaa
pusha
push
pop
icebp
adc
repz
scas
jmp
mov
jns
into
bound
aad
xchg
pop
mov
and
jmp
fmul
ss
sub
fsub
jns
adc
pop
stos
add
aaa
test
add
dec
pop
ror
mov
xchg
sbb
pop
repz
xor
cmps
and
add
scas
jae
loop
mov
ins
pop
enter
pop
mov
sbb
test
fs
out
sahf
cdq
jo
push
mov
add
add
nop
loop
xchg
pop
sub
sub
xor
stos
adc
(bad)
cmc
ins
inc
(bad)
loope
adc
xchg
mov
call
pop
cwde
arpl
and
pop
movs
push
pop
fisttp
pop
jno
add
repz
sbb
test
dec
inc
mov
dec
(bad)
in
adc
xor
dec
mov
mov
inc
in
pop
push
add
and
jne
sahf
sub
jp
xchg
ror
dec
xchg
push
scas
adc
imul
jno
cmp
pop
cli
and
jbe
cli
mov
shl
outs
cmp
movs
mov
add
xor
mov
push
icebp
ror
cmp
xchg
retf
sub
lods
sub
scas
inc
loopne
fidiv
mov
sub
and
cmc
xor
mov
aaa
cmps
aaa
outs
(bad)
pushf
mov
std
or
pop
dec
push
nop
cwde
sti
fwait
enter
dec
mov
lahf
sub
mul
cdq
and
idiv
movs
pop
les
and
iret
xor
sub
inc
repz
and
out
jae
lahf
mov
jecxz
adc
in
shl
jp
es
pop
push
mov
cmp
xchg
(bad)
pop
stos
sti
aas
xor
dec
cdq
int
test
sub
xchg
dec
lds
cli
inc
(bad)
pop
sbb
jl
jmp
push
push
rcl
call
aad
mov
mov
inc
push
sub
mov
inc
clc
push
rcl
(bad)
(bad)
movs
xchg
adc
aaa
or
iret
dec
adc
mov
mov
stos
push
xor
fmulp
cmp
cmp
dec
mov
sbb
test
fstp
rcl
aad
push
sti
cmp
inc
popa
cmps
xchg
into
push
icebp
in
jle
in
or
or
mov
mov
add
or
add
push
popa
or
xchg
mov
sub
test
outs
xor
loop
fwait
jo
out
cmps
mov
daa
mov
out
arpl
push
ins
daa
cmp
cmp
mov
add
dec
and
xchg
adc
sub
stos
inc
mov
or
retf
fiadd
sbb
mov
jnp
xchg
adc
sub
inc
mov
out
jmp
cmp
test
jg
std
in
fs
(bad)
cs
inc
mov
sub
das
push
mov
cli
pop
add
mov
jp
(bad)
idiv
rcl
mov
cmps
cmp
sti
call
xor
pop
push
scas
neg
cmp
push
mov
jns
aaa
jmp
and
cmp
bound
xchg
push
loopne
mov
sbb
cmp
pop
fld
lods
(bad)
dec
retf
adc
dec
stos
pop
pushf
sub
in
mov
mov
clc
adc
dec
inc
push
mov
test
push
cmp
icebp
lock
or
test
enter
into
in
aas
push
pop
sbb
popf
xchg
and
cmps
inc
cmp
mov
pop
idiv
je
mov
mov
das
mov
mov
aaa
mov
jp
mov
call
cmp
shl
xor
data16
xor
callw
(bad)
pop
cmp
jmp
pop
ret
mov
push
xor
pop
cmps
xor
and
xchg
hlt
aad
pop
mov
and
mov
mov
fst
lds
daa
xor
stos
mov
mov
pop
push
jns
ja
inc
mov
sbb
inc
push
add
and
dec
in
mov
push
daa
pop
and
sub
mul
inc
pop
inc
push
and
mov
lods
jb
shr
arpl
push
mov
cdq
popa
mov
aad
lahf
ds
dec
popa
sub
pop
shr
sbb
out
inc
cmp
retf
js
adc
xchg
mov
mov
jg
dec
and
in
lock
sbb
rcl
int3
inc
jnp
(bad)
adc
push
scas
add
call
lods
add
and
loope
inc
test
stc
hlt
xor
jnp
and
loope
xchg
icebp
mov
adc
cmp
lea
loop
inc
and
dec
rol
jb
xor
enter
loopne
jnp
not
mov
push
add
scas
inc
test
cdq
stos
ss
or
bound
add
test
sub
sbb
sub
dec
push
out
mov
bound
neg
xchg
popf
and
cmps
dec
fistp
adc
in
mov
in
xchg
cmp
fsubr
outs
push
shr
push
pushf
jle
loope
mov
jecxz
call
jle
jmp
pop
movs
sub
add
pop
jnp
mov
adc
and
and
jne
cmp
(bad)
dec
push
dec
mov
jmp
(bad)
pop
(bad)
in
mov
loopne
xor
mov
(bad)
out
mov
inc
pop
loop
or
lock
push
push
adc
pop
sahf
mov
es
mul
xor
test
adc
xor
xor
mov
jp
outs
jo
enter
repz
ret
jmp
mov
scas
xchg
fisttp
sub
mov
pusha
mov
push
push
outs
dec
pop
ucomiss
lods
pop
retf
push
mov
xchg
ja
mov
jnp
loope
scas
xchg
lods
pop
xchg
cli
sbb
lods
cmps
add
and
fwait
rol
sub
je
mov
jb
enter
sahf
repz
sahf
cdq
inc
and
inc
dec
add
rcr
ret
adc
repz
sub
sti
mov
inc
mov
pop
jne
or
jno
and
aad
xlat
loop
mov
dec
adc
cld
arpl
push
cmps
lods
jecxz
dec
xchg
or
pop
outs
push
push
(bad)
in
movs
adc
dec
jle
adc
nop
dec
repz
dec
retf
mov
stc
push
hlt
movs
cmc
jmp
xchg
mov
mov
sub
xchg
sti
into
(bad)
test
cmps
xchg
cmp
imul
stos
mov
sub
fisub
fisttp
adc
push
mov
adc
ss
xor
pop
jne
pop
rcr
imul
adc
add
out
mov
jns
xor
std
jmp
call
std
scas
pop
sti
ja
fcmovnbe
cdq
sbb
iret
ror
sub
add
dec
hlt
shl
adc
cmp
repnz
int
jge
xor
fst
js
div
xchg
add
mov
mov
dec
enter
movs
fisub
sbb
lahf
xchg
jb
stos
sbb
test
jecxz
sbb
movs
push
test
cmp
mov
add
loop
xor
das
jp
xor
add
cmp
jmp
mov
adc
pop
add
stos
xor
adc
mov
mov
cmp
cmps
or
xchg
mov
shr
sub
xchg
out
(bad)
(bad)
push
xor
inc
sub
enter
out
out
push
(bad)
call
xlat
sbb
ret
mov
das
adc
mov
inc
inc
(bad)
xchg
imul
into
div
adc
cs
pop
out
pop
xchg
fimul
ret
cld
mov
pop
(bad)
xchg
mov
push
push
mov
inc
cmp
and
jbe
dec
xchg
sbb
and
inc
mov
test
add
ds
shr
ret
les
push
ret
mov
xchg
mov
mov
xchg
xor
lods
mov
in
in
fimul
inc
aad
xchg
cwde
or
mov
xchg
jecxz
data16
inc
fs
and
mov
out
out
lahf
scas
mov
dec
push
(bad)
adc
push
popf
rol
xor
mov
inc
repnz
mov
pop
sbb
mov
mov
pop
jb
rcl
mov
dec
dec
mov
sub
lock
fsubr
xchg
pop
jno
mov
ins
in
push
inc
or
jnp
cmc
jb
dec
je
sub
shl
mov
sbb
aaa
leave
(bad)
ins
ins
arpl
shl
call
loop
pushf
pop
sbb
xor
ins
call
loop
outs
in
aam
loopne
loop
addr16
lock
jmp
int3
pop
and
inc
or
loope
add
aaa
xchg
jmp
stos
jg
push
pop
xchg
inc
(bad)
mov
sbb
jb
test
and
mov
and
enter
adc
lods
shl
sti
mov
cmp
add
frstor
sbb
mov
or
mov
or
push
imul
mov
dec
pop
and
ins
mov
dec
aad
outs
lock
stc
ficom
jb
add
bnd
xor
push
ins
cdq
mov
int3
outs
lahf
leave
mov
sbb
test
adc
and
pop
add
cmps
or
sahf
sub
out
in
(bad)
cmps
fnstenv
dec
jbe
add
(bad)
fldenv
mov
push
loop
mov
mov
sahf
cmp
inc
inc
shl
imul
lea
push
mov
push
(bad)
aad
and
dec
and
jns
adc
push
shl
jp
nop
xchg
jne
mov
jmp
push
lock
inc
xor
inc
shl
int
mov
and
jge
repnz
dec
mov
leave
add
inc
je
pop
fucomi
or
fild
cmp
jae
push
in
mov
enter
add
and
aad
push
mov
dec
add
xor
rol
add
inc
push
jmp
out
and
pop
dec
and
adc
inc
loope
out
test
repz
std
arpl
aam
pushf
pusha
xchg
pop
cmc
add
dec
in
pop
movs
jge
popa
loope
sub
in
and
fidiv
bnd
jne
lahf
test
ret
xchg
adc
mov
mov
inc
mov
cmp
dec
out
loope
mov
ret
jecxz
sahf
test
std
adc
xlat
push
pop
push
into
mov
es
mov
jne
add
mov
fsubr
sbb
mov
add
lahf
cmp
repnz
dec
sbb
push
repnz
outs
and
mov
sbb
ds
jp
push
lds
and
lock
cmp
add
test
push
dec
outs
ret
call
lds
pop
or
add
mov
add
and
xchg
cmp
aas
add
sbb
retf
outs
xor
mov
cli
add
xchg
nop
lahf
jecxz
rcl
aas
pop
jbe
xchg
pop
loop
push
inc
jb
into
dec
jbe
loope
and
psubusb
push
lahf
push
outs
push
mov
jae
aam
or
mov
clc
scas
dec
sbb
pusha
stos
movs
daa
push
xor
or
iret
mov
push
pop
or
push
cmp
int
jmp
fwait
dec
mov
cs
adc
aas
outs
xchg
retf
jnp
scas
sub
inc
pusha
std
jmp
sysenter
loopne
cmps
dec
aaa
or
xchg
mov
sbb
mov
mov
clc
shl
inc
push
stc
mov
push
popf
ret
jmp
ret
fbld
xor
add
inc
pop
sub
out
(bad)
in
sub
fs
fistp
jmp
dec
inc
ins
gs
mov
aaa
cld
les
cmp
sub
aad
dec
cwde
mov
mov
sar
add
ins
sbb
loop
cmp
xor
xchg
test
push
pop
jne
adc
add
int3
adc
mov
call
mov
push
sub
mov
mov
js
mov
in
mov
popa
sub
inc
aam
sub
push
les
adc
fdiv
cmp
pop
lahf
lds
test
push
cmc
and
retf
sub
cmp
jg
push
add
scas
js
ja
popf
sub
mov
bound
pop
pop
(bad)
movs
pop
pop
cmp
mov
cld
es
and
cmp
cs
jp
cmp
push
fild
addr16
xlat
aaa
(bad)
sbb
pop
int
fs
outs
imul
inc
test
in
mov
mov
pop
(bad)
push
mov
jnp
fwait
sub
inc
ss
adc
std
jae
mov
sub
or
mov
call
stc
mov
and
sub
mov
sahf
cmp
jo
and
popa
out
pop
adc
pop
inc
cmp
das
inc
dec
sti
inc
ret
cmp
xor
jne
xor
mov
mov
ffree
leave
jge
add
and
sub
or
push
icebp
lds
xchg
jns
lods
sbb
gs
das
pop
div
mov
mov
repnz
sub
clc
lods
mov
xchg
xor
fmul
pop
and
dec
aad
ja
push
adc
outs
fs
ret
test
push
pusha
pop
cmps
jb
rcl
es
push
fnstenv
dec
loop
mov
dec
mov
push
imul
fs
icebp
dec
mov
ds
xchg
fistp
xchg
cmp
rol
and
xchg
mov
or
les
and
adc
mov
fild
mov
ds
cmps
(bad)
pop
ret
shl
(bad)
mov
dec
test
xlat
adc
cli
std
adc
das
or
fnsave
jo
retf
aas
stos
xlat
fadd
jns
fcom
mov
or
mov
sahf
mov
push
ins
in
add
mov
xor
fistp
jo
dec
mov
xlat
pop
ins
jge
xor
add
xchg
dec
popa
pop
lea
cmps
adc
mov
adc
pop
movs
movs
(bad)
sbb
aaa
and
je
or
(bad)
ins
out
xchg
xor
sbb
in
sahf
retfw
cmps
popf
arpl
pop
lds
jmp
xor
sub
inc
and
cdq
test
lahf
mov
imul
ror
popa
js
cwde
inc
imul
stos
jl
push
xlat
jns
cmp
mov
retf
or
fmul
xor
lods
inc
movs
jnp
xchg
test
push
jmp
sbb
icebp
xor
test
and
and
std
fs
dec
aad
test
pushf
add
js
fmul
dec
or
cs
js
enter
dec
das
in
(bad)
cdq
push
push
mov
dec
add
in
mov
in
push
add
outs
jb
jp
sbb
sbb
dec
cli
mov
lods
test
icebp
fcomp
stos
das
nop
ffreep
push
leave
and
mov
mov
xor
mov
xor
dec
into
push
mov
in
add
jl
sti
cmp
lea
js
mov
stc
icebp
sbb
dec
nop
std
out
mov
mov
and
movs
mov
cmp
xchg
es
test
daa
das
test
adc
je
sar
fnstcw
nop
cld
mov
aas
jmp
fld
stos
sbb
push
push
data16
ret
scas
aaa
loope
sub
in
popf
ds
pop
inc
mov
mov
mov
in
push
sub
shr
dec
ror
les
popa
sbb
and
sar
inc
cli
sub
ss
adc
mov
mov
adc
push
js
lock
pop
inc
jb
mov
adc
int3
pop
pop
cmc
mov
ss
test
inc
or
jp
loope
mov
imul
xchg
jnp
lods
and
xchg
gs
mov
test
lock
ret
lds
call
cmp
sub
(bad)
(bad)
into
sbb
gs
lea
jmp
dec
inc
and
push
jo
sbb
outs
mov
fist
pop
ror
ja
and
and
pop
mov
jecxz
mov
jbe
vpaddw
icebp
sub
sub
inc
sub
je
push
scas
call
call
pop
sbb
lods
xor
inc
rcr
mov
mov
mov
pushf
(bad)
rol
dec
jp
lahf
cmp
mov
ds
(bad)
mov
shr
call
mov
or
stos
fimul
or
jle
xlat
aas
test
cmp
cmp
lock
jae
(bad)
push
inc
fmul
scas
sahf
mov
imul
jp
enter
cmp
push
sub
outs
fdivr
dec
sahf
out
add
xchg
stc
sbb
push
je
sub
adc
(bad)
and
mov
dec
out
mov
mov
mov
sbb
xchg
adc
add
mov
ret
cmps
jnp
jnp
ror
call
mov
jecxz
pop
loop
adc
push
stos
call
sub
sbb
jae
clc
leave
push
ins
or
retf
and
in
sub
and
aas
icebp
pop
fdiv
fnstcw
jns
sub
ret
dec
mov
aas
fst
enter
jge
sbb
add
or
gs
std
xchg
add
bound
inc
rcl
push
adc
rcr
push
adc
push
stos
inc
shl
cmp
std
push
jle
jl
loope
mov
mov
pop
repnz
pop
xchg
lahf
mov
pop
loop
std
pop
les
in
and
in
into
retf
imul
fldenv
and
push
and
loopne
hlt
and
cmp
xchg
xor
add
in
xchg
dec
les
aam
inc
cs
ins
and
cli
add
(bad)
and
pusha
or
mov
xor
fucomip
xor
(bad)
sti
loope
int
(bad)
xchg
adc
add
loopne
pop
test
cdq
lods
aad
enter
mov
push
mov
aas
pop
mul
mov
outs
inc
sub
xchg
pop
adc
inc
dec
es
scas
ret
sbb
mov
js
call
je
pop
mov
enter
mov
into
sbb
jle
or
lods
jno
and
dec
mov
scas
xchg
popa
sub
iret
xchg
mov
cmp
push
jge
inc
jno
lods
daa
inc
jmp
pop
test
iret
out
ret
push
add
mov
pop
js
imul
and
inc
out
test
cmp
xor
in
in
leave
dec
xor
dec
cmps
stos
add
pop
add
popa
mov
enter
int3
sar
xor
cmp
push
ds
or
int
mov
cmps
loop
dec
imul
cmps
addr16
push
popf
arpl
sub
test
out
sub
cmc
arpl
lods
movs
outs
mov
jne
mov
jnp
inc
pushf
xor
lods
xor
loop
xor
inc
mov
out
(bad)
sub
pop
jmp
push
sub
dec
(bad)
in
push
ja
sub
mov
xor
aas
pushf
mov
popf
sbb
or
int3
xchg
stos
cmp
dec
inc
lods
ds
iret
or
lods
scas
push
std
(bad)
call
mov
aad
out
sbb
mov
or
dec
sbb
mov
test
sub
stos
xchg
pop
ja
int
xor
dec
enter
sbb
fdivr
xchg
xchg
scas
ds
xchg
or
add
sbb
(bad)
adc
inc
retf
aam
int3
cmp
and
adc
pop
pusha
cmps
stc
and
jmp
call
repnz
lahf
sub
mov
and
add
push
(bad)
ds
xor
cdq
add
adc
ficomp
xchg
mul
fidivr
jbe
mov
daa
(bad)
jne
rcr
imul
pop
cmp
and
jg
and
out
mov
cmps
aaa
or
mov
xchg
add
add
fild
scas
das
fsubr
cmp
lods
add
mov
faddp
hlt
jmp
cli
push
mov
stos
rol
pop
sbb
out
jle
sub
into
sahf
push
int
add
aaa
or
stos
mov
cmp
jl
out
aas
mov
out
ins
cdq
test
ds
adc
mov
push
xor
out
or
test
retf
popf
push
mov
inc
das
ret
cmp
adc
ret
xchg
test
mov
fwait
and
lock
cmp
fsub
mov
jbe
pop
cdq
dec
(bad)
aas
mov
inc
push
sbb
push
mov
mov
xchg
addr16
jne
rol
dec
cdq
or
mov
and
lds
xor
mov
(bad)
lods
adc
push
cmc
or
xchg
test
dec
dec
adc
loopne
es
jbe
jne
inc
fist
(bad)
or
out
rcl
cmp
pop
pop
inc
lods
loop
push
mov
ret
pusha
jns
adc
jge
es
or
xchg
(bad)
scas
into
add
adc
jge
or
(bad)
call
cmp
xor
xlat
fidivr
pop
fdiv
adc
cmp
or
lock
scas
inc
iret
stos
leave
lds
jae
mov
or
cmps
clc
jbe
push
adc
mov
std
cmps
mov
mov
sub
push
push
add
ins
or
mov
jo
cmp
movs
cmp
jns
adc
xor
or
fiadd
mov
jmp
in
aaa
repz
cmp
repz
movs
cmp
lods
cmps
retf
cmps
in
(bad)
xchg
lods
mov
mov
sub
mov
and
sbb
pusha
lock
call
xchg
pop
adc
loop
xor
ss
enter
in
mov
stos
cmp
push
enter
xor
out
sub
idiv
and
adc
pusha
push
stos
jl
mov
aad
xor
shr
push
cdq
lahf
xor
es
xchg
or
inc
cmps
sbb
jo
pop
cmp
pop
cdq
pop
adc
(bad)
xlat
mov
pop
mov
xor
lds
test
sbb
jmp
mov
mov
lds
pop
mov
cmp
cld
or
and
jo
dec
mov
cmps
jle
cmps
adc
inc
or
adc
mov
pop
aas
movs
mov
pushf
adc
icebp
cwde
adc
push
inc
pusha
jbe
mov
cmp
mov
mov
cdq
(bad)
cmp
pop
pop
pop
xor
mov
aas
or
pop
pop
jecxz
adc
and
clc
loopne
movs
loope
neg
xor
jecxz
xchg
ins
sbb
jle
pop
xchg
push
jns
cs
stc
mov
jmp
pop
mov
ret
clc
add
mov
mov
inc
pushf
xor
repnz
mov
es
mov
inc
or
std
lahf
pop
pop
push
or
push
push
test
int
retf
mov
pop
popa
sti
and
add
adc
pop
pop
xchg
sbb
mov
int
mov
cwde
(bad)
and
inc
mov
std
jno
xchg
adc
jae
movs
cs
test
push
rol
dec
mov
adc
aas
outs
outs
jno
(bad)
retf
and
cs
pop
sbb
sub
inc
enter
add
jmp
mov
jge
cmp
test
adc
mov
pop
sub
xor
inc
repz
fimul
fisub
mov
mov
xor
xor
fsubr
aas
je
mov
stos
dec
cmp
cmp
sub
repz
loope
push
and
xchg
pop
jne
push
or
(bad)
out
jae
fstp
inc
sbb
addr16
jbe
cmp
mov
cmc
lahf
mov
inc
cld
pop
in
(bad)
pop
fimul
xor
test
mov
idiv
fistp
xchg
xchg
(bad)
adc
push
mov
ja
jle
movs
stos
and
ss
mov
(bad)
sbb
jmp
xor
sbb
mov
(bad)
and
inc
ins
add
jo
add
or
jb
or
cmp
stos
cmp
bound
jae
imul
test
addr16
stc
sbb
ja
fiadd
dec
movs
add
stos
mov
cmp
out
dec
std
xchg
push
sar
fxam
stc
xor
test
(bad)
fcom
inc
pusha
or
aad
sahf
sub
jno
in
dec
jo
xor
fwait
dec
outs
sahf
dec
fwait
cmp
push
sub
scas
and
jl
fnstcw
xor
test
push
call
xor
jg
and
mov
push
in
shl
int3
cli
xor
aam
xchg
mov
and
xchg
xor
das
jae
adc
aaa
inc
push
mov
popa
push
repnz
retf
xlat
daa
mov
add
add
sbb
and
fmul
push
jmp
hlt
repnz
loopne
dec
and
jge
pop
hlt
(bad)
out
and
shl
gs
mov
not
ja
mov
cmp
nop
pusha
inc
dec
push
push
std
jmp
or
lods
stos
lods
and
cmp
inc
in
or
rcl
les
aas
mov
mov
xor
loopne
or
jg
xor
repz
or
mov
xor
mov
test
mov
mov
jge
int
cmp
mov
mov
rol
loopne
inc
sbb
mov
xchg
aaa
repnz
cmp
mov
adc
lahf
xor
sbb
add
pop
adc
and
ins
or
sub
add
and
test
xchg
jns
sbb
xlat
les
in
scas
mov
add
and
sub
test
mov
jno
mov
xor
pusha
ins
jnp
jno
push
dec
jmp
popf
xchg
std
push
push
jecxz
xor
iret
mov
sub
(bad)
xchg
push
pushf
in
mov
cmps
or
dec
mov
pop
inc
icebp
mov
sbb
sbb
push
mov
or
push
js
fld
fbld
outs
sub
(bad)
int3
mov
xor
sbb
and
sbb
add
das
shr
xor
arpl
lods
and
int
pop
mov
mov
pop
stos
cmp
mov
fadd
push
rcl
and
iret
add
jmp
cmc
sbb
and
les
mov
fisub
and
dec
sbb
nop
jns
ror
mov
pop
aam
and
repnz
in
pop
add
mov
adc
jecxz
cmp
shr
rcl
xor
mov
jbe
sub
addr16
add
les
and
xchg
leave
cmps
into
fsubp
clc
inc
jecxz
push
clc
jne
ret
lods
inc
in
sbb
pop
test
xor
jmp
jbe
xor
add
ret
out
cmp
mov
mov
loop
mov
inc
jae
add
gs
cmps
pop
or
aad
adc
out
std
cmp
retf
jno
ror
xchg
in
push
jbe
or
es
shr
sub
stc
adc
test
xor
fst
mov
out
and
scas
fwait
ins
jne
sbb
fcom
xchg
cdq
retf
sub
mov
jl
mov
cwde
ret
mov
sbb
mov
cmp
rol
repz
pop
pushf
cmp
xor
adc
(bad)
in
add
pop
imul
pop
mov
jo
icebp
jmp
mov
dec
retf
mov
retf
mov
add
mov
loop
pop
lods
fisub
js
dec
aas
xchg
push
sub
cmps
retf
sbb
dec
cmp
test
aas
pop
and
add
xacquire
sub
(bad)
mov
push
or
sti
dec
mov
and
std
pop
popf
int3
nop
lods
xor
mov
push
in
fistp
pop
ret
jle
adc
add
inc
mov
dec
pop
mov
and
retf
into
hlt
andps
inc
inc
stc
(bad)
adc
jl
inc
inc
inc
adc
outs
or
shl
and
pop
or
mov
pop
mov
cmps
clc
shl
loope
and
jne
mov
xor
js
fistp
icebp
sub
push
mov
inc
push
sub
mov
je
rcr
inc
push
mov
aaa
retf
pop
aad
lods
pushf
sbb
pop
cmps
cmc
scas
enter
fidivr
loopne
int
rol
and
dec
rcl
jne
retf
sti
fcmovnu
jb
xlat
adc
or
aad
push
(bad)
push
imul
pop
push
test
std
outs
mov
(bad)
out
out
add
lock
sbb
loop
jnp
jb
add
test
jno
add
leave
in
mov
mov
scas
movs
mov
gs
mov
out
xchg
out
mov
scas
sar
movs
loope
das
sbb
xchg
mov
mov
(bad)
dec
sub
mov
adc
(bad)
adc
repz
jb
sahf
aam
dec
out
and
xchg
or
and
idiv
ret
(bad)
lahf
jp
pop
loop
jne
or
cmp
pop
fld
outs
xacquire
fsub
and
lods
aas
mov
cmps
dec
xchg
je
jae
push
retf
and
mov
int
scas
test
hlt
shr
push
mov
scas
jne
pop
clc
mov
loop
into
jne
es
cli
adc
int
imul
or
inc
lea
jle
cmp
mov
or
mov
test
push
cmp
out
sub
fwait
inc
je
inc
push
and
or
cli
xor
ins
cli
es
xor
adc
inc
sub
jne
dec
push
dec
pop
out
dec
cld
cld
out
aas
add
adc
xchg
js
cmps
fdivr
mov
movs
dec
xchg
sub
rol
aas
jmp
in
pop
das
gs
or
push
call
mov
ds
js
pop
pop
rcr
adc
jge
out
sub
mov
inc
pop
cmps
mov
add
(bad)
enter
into
add
jg
leave
imul
inc
jb
ja
call
std
mov
inc
into
aad
lea
inc
mov
mov
out
mov
sar
icebp
jb
dec
adc
ret
fidivr
dec
daa
cld
loope
movs
mov
adc
call
outs
aad
aaa
adc
dec
sbb
jb
fistp
cdq
jae
dec
lods
cmp
sbb
push
pop
das
inc
add
fmul
xchg
jae
pop
cld
(bad)
jle
mov
stos
xor
scas
inc
jmp
popa
hlt
mov
or
enter
adc
ss
stos
add
jp
jns
cmc
pop
jae
xchg
xor
mov
mov
out
loop
add
sub
imul
sbb
arpl
in
sub
pop
inc
in
nop
lds
dec
pop
push
add
jecxz
sti
mov
xchg
movs
sti
popf
add
(bad)
jmp
retf
fdiv
xchg
sar
xor
lds
push
and
in
retf
adc
mov
retf
scas
mov
adc
dec
(bad)
cs
sub
dec
and
sub
in
test
std
mov
inc
repnz
push
lahf
cmps
mov
and
mov
add
(bad)
push
inc
dec
xchg
sahf
pusha
sti
sub
mov
mov
iret
add
mov
push
movs
shl
push
ficom
jmp
lds
cmp
out
xchg
scas
jo
xor
adc
cs
mov
push
pop
mov
rcr
inc
cmp
push
in
push
add
iret
dec
xor
ins
sbb
xchg
fild
jae
out
mov
adc
mov
and
adc
scas
inc
jnp
push
cli
(bad)
sbb
inc
mov
jle
rcl
data16
std
ret
and
sub
and
push
push
adc
out
inc
adc
in
pop
dec
push
push
pusha
add
xchg
cli
imul
jmp
jnp
das
mov
(bad)
in
or
lahf
mov
nop
lock
inc
(bad)
cdq
adc
jg
cmp
sub
pop
cmp
mov
xchg
adc
sets
pop
iret
into
data16
jl
rol
call
sub
sbb
pop
cmp
lods
sti
dec
mov
dec
sbb
rcr
loopne
in
mov
call
pandn
dec
sbb
fs
(bad)
mov
stc
add
xor
ins
sub
retf
pop
adc
sar
adc
in
std
add
lahf
outs
pop
call
push
jmp
retf
add
stos
gs
cmc
enter
(bad)
or
sbb
sub
rol
sub
test
cmp
mov
mov
iret
cwde
aam
and
leave
sub
cmp
pop
gs
mov
xor
fstp
fstp
cli
mov
mov
mov
sub
jb
jae
dec
jbe
les
dec
or
or
je
mov
mov
mov
ret
jmp
push
outs
push
loopne
shr
add
mov
(bad)
int3
mov
pusha
mov
out
xchg
pop
lahf
jmp
adc
hlt
retf
lock
pop
or
jg
sbb
nop
repz
(bad)
out
(bad)
sahf
push
loop
and
into
lahf
xchg
iret
sub
loope
out
and
retf
fstp
fnclex
(bad)
xchg
clc
iret
adc
mov
mov
scas
in
jbe
push
sub
sub
mov
add
add
ret
xor
arpl
popa
cld
aam
sub
mov
call
mov
xor
mov
dec
not
cli
mov
stc
outs
adc
(bad)
in
pop
mov
ret
push
icebp
js
scas
ret
cmc
repz
add
dec
xor
push
sub
cs
push
cmp
in
leave
pushf
jnp
mov
imul
inc
jle
jl
ds
push
mov
sub
das
push
outs
push
out
mov
inc
sti
clc
test
push
loope
jne
loopne
xor
sbb
imul
dec
mov
ja
adc
jns
fwait
leave
loop
dec
jecxz
adc
das
push
and
xchg
mov
mov
jbe
imul
xor
push
push
dec
xor
(bad)
in
jle
xchg
adc
sub
or
inc
xor
loope
fiadd
stos
cmp
dec
mov
pop
popf
add
dec
sbb
adc
xchg
jae
sub
mov
dec
enter
push
add
neg
lock
popf
inc
push
push
inc
xlat
pushf
cmp
pop
lock
inc
or
push
popa
sbb
or
mov
inc
mov
lock
stos
push
in
dec
xor
cmp
arpl
inc
xlat
cmp
inc
test
movs
xchg
sub
sub
enter
mov
sar
adc
push
jb
jle
popf
push
cs
pop
sub
and
clc
dec
xchg
popf
mov
push
loopne
pusha
mov
iret
push
mov
and
mov
lods
xchg
cmp
in
inc
cmps
xlat
mov
mov
(bad)
push
pmaxsw
jmp
neg
ins
mov
jbe
add
mov
lods
and
cmp
(bad)
das
gs
ror
loop
pop
xor
mov
jp
arpl
cmp
arpl
push
hlt
(bad)
jmp
or
mov
xrelease
or
movs
lock
sbb
mov
pushf
cli
adc
cmp
es
cmp
or
jne
cli
es
mov
push
into
std
test
iret
js
retf
jae
mov
repz
cmp
(bad)
dec
rcr
jmp
leave
jg
je
(bad)
jmp
jecxz
aam
push
test
aam
repnz
shl
fwait
ror
fist
push
sub
ja
xor
ss
fimul
mov
ins
enter
jecxz
push
and
imul
(bad)
or
xor
repnz
dec
movs
mov
(bad)
jp
scas
mov
(bad)
je
sub
jmp
aam
and
popf
push
jne
rcr
es
lods
sbb
adc
ss
push
mov
mov
sar
jge
inc
in
lea
xchg
sti
xor
jno
mov
int3
mov
call
loopne
sub
jmp
shl
jno
sbb
jo
out
inc
push
addr16
mov
add
xchg
push
dec
loop
leave
adc
(bad)
xchg
jle
mov
mov
(bad)
popa
clc
and
mov
sub
inc
jb
hlt
je
out
adc
cdq
pop
add
sbb
inc
sti
stc
daa
push
or
cmp
adc
sbb
loopne
gs
push
ret
cli
mov
mov
sub
or
call
jmp
std
jns
ja
in
add
inc
inc
mov
movs
(bad)
jae
(bad)
pushf
sar
adc
nop
or
xchg
cmp
add
aad
in
push
mov
add
retf
pop
mov
xor
push
mov
or
dec
addr16
xor
or
push
cmps
fld
jg
in
loopne
mov
ds
clc
mov
jmp
inc
xchg
test
shl
cmp
aam
fucomip
mov
pop
sub
fucomi
fist
pop
imul
cs
dec
adc
push
ret
mov
inc
lea
xor
jb
jbe
push
sahf
xor
mov
in
or
mov
(bad)
push
dec
out
sbb
jmp
adc
mov
mov
rcl
push
dec
stos
add
jp
or
mov
push
or
mov
adc
mov
jle
out
sar
push
mov
dec
dec
shl
pop
push
xchg
scas
repnz
dec
imul
int
leave
mov
js
jmp
test
xchg
lahf
dec
pusha
es
js
adc
sbb
loop
cmp
shl
loop
outs
fs
or
mov
sbb
int3
cmps
mov
dec
sub
or
fild
xor
adc
xor
ins
xor
fiadd
jns
dec
mov
pop
and
ror
pop
sub
mov
ds
pop
imul
mov
mov
mov
les
adc
adc
in
das
inc
xchg
jge
fisttp
sub
dec
lds
fstp
int3
imul
inc
loop
jbe
push
loope
repnz
push
mov
das
xchg
mov
pop
aad
jns
enter
xor
stos
push
pop
std
inc
inc
lods
mov
mov
push
retf
sub
hlt
and
cmp
retf
jecxz
outs
bound
mov
xchg
loope
je
mov
je
add
sti
push
xchg
dec
sbb
mov
fcmovb
test
test
iret
data16
push
stc
lahf
mov
lea
xchg
rol
pop
jo
jbe
or
je
scas
(bad)
cmps
dec
sub
jg
jns
mov
lds
sahf
adc
movs
popf
cwde
pop
shl
jae
add
add
xchg
js
or
sahf
rcl
xor
cmp
jo
xchg
arpl
push
dec
fst
add
jne
add
jp
call
(bad)
jmp
inc
cs
mov
pop
and
pop
leave
inc
jns
inc
sbb
scas
lock
mov
dec
and
ds
mov
repnz
xor
ss
dec
test
cs
scas
sub
and
scas
clc
mov
xchg
xchg
adc
mov
ins
adc
hlt
(bad)
cwde
or
or
jl
sbb
adc
retf
fistp
add
shr
add
in
dec
cld
popf
lahf
outs
jb
rol
test
enter
push
lods
push
or
fsub
cmps
mov
inc
retf
jo
push
loopne
sub
jmp
popf
pop
(bad)
aad
gs
mov
inc
pop
cmps
stc
mov
movs
movs
and
xor
outs
fcmovnu
push
(bad)
sbb
(bad)
mov
(bad)
mov
inc
pop
iret
out
aam
(bad)
aad
dec
nop
jecxz
pop
mov
jae
int3
mov
mov
lahf
jmp
mov
mov
mov
mov
imul
cs
aaa
nop
or
rcl
mov
daa
hlt
lods
jmp
rcl
in
popf
cli
arpl
leave
mov
mov
(bad)
paddusw
hlt
xor
jg
pushw
(bad)
shl
add
jmp
mov
add
xlat
in
loop
data16
mov
mov
cmc
cli
xchg
add
mov
inc
sub
jle
idiv
nop
cmp
jns
shl
jnp
inc
stc
pop
das
test
push
in
pop
aas
mov
dec
jns
jle
in
fs
repnz
mov
adc
bnd
jbe
cmp
mov
cwde
jbe
fstp
push
cdq
ret
jb
pop
push
adc
xchg
not
dec
sbb
add
or
and
ror
sbb
jp
xor
or
cmc
pop
(bad)
push
test
push
mov
and
(bad)
cwde
xchg
outs
gs
sub
mov
dec
or
stos
(bad)
mov
add
div
inc
push
dec
jae
fdiv
clc
mov
sbb
loope
adc
add
ret
mov
ss
dec
cmp
mov
cmc
outs
test
loopne
fsub
movs
inc
neg
lods
sub
fld
stos
in
push
outs
sub
dec
cdq
mov
lahf
mov
sub
jecxz
je
aaa
cmps
xlat
jmp
in
jle
lea
pop
mov
cld
ins
inc
pop
sbb
cmp
sbb
inc
sbb
jle
ja
into
pop
retf
push
ins
test
in
loope
xchg
sar
pop
out
cmp
movs
cmps
inc
adc
adc
rol
and
mov
rcr
outs
ins
loop
mov
test
ror
sbb
or
nop
data16
add
pop
jae
push
xchg
lds
jae
mov
sahf
enter
inc
sub
sbb
clc
mov
js
bnd
rcl
repz
mov
dec
(bad)
hlt
push
cmp
shl
pusha
call
and
stos
rcl
mov
imul
nop
mov
sub
adc
pop
ins
or
pop
dec
fistp
jg
test
mov
rcr
push
inc
pop
adc
lods
mov
iret
and
clc
movs
xchg
jmp
jg
nop
ja
xchg
test
(bad)
jne
mov
repnz
sahf
scas
add
loopne
pop
mov
xchg
mov
pop
xor
aaa
outs
pop
xchg
dec
inc
out
mov
fidivr
cmova
mov
aas
sub
cmps
inc
(bad)
rcr
sti
shl
(bad)
jle
cmps
aam
ins
adc
in
pop
jecxz
fnstsw
scas
cmp
jmp
movs
data16
jo
lock
cmp
test
pop
mov
mov
ja
mov
fsubr
cmp
sub
nop
mov
ficom
mov
pop
fcomp
data16
push
pop
mov
div
into
cmp
cmp
call
popa
xchg
mov
jmp
dec
add
xchg
and
push
imul
sub
movs
mov
cmp
lahf
fisub
and
test
jmp
xchg
adc
xchg
mov
pop
fdivr
jne
cdq
sbb
rol
loopne
imul
sbb
fiadd
dec
adc
add
sub
sbb
rcl
lock
cwde
fadd
(bad)
cmps
or
mov
xchg
(bad)
fidiv
jae
shl
into
sub
cmp
cmp
xchg
bound
or
(bad)
xor
mov
pushf
jae
push
pop
das
jae
gs
sub
inc
mov
sub
pushf
lock
jge
fcmovnbe
inc
(bad)
jle
jge
sahf
mov
lds
fld
sbb
mov
les
adc
cdq
cmp
sbb
(bad)
xor
push
gs
sahf
add
add
popa
loopne
dec
pop
mov
sbb
push
aad
aas
cld
jge
adc
outs
cmp
inc
add
lds
push
addr16
cmp
inc
jmp
pop
inc
cmp
adc
mov
imul
fsub
lahf
adc
jg
pop
cwde
mov
mov
xchg
adc
lods
test
int3
mov
out
or
pusha
js
ins
ss
sub
push
dec
enter
test
push
mov
retf
rcr
sbb
call
push
and
popf
rcr
stos
xchg
pop
mov
ins
repz
jnp
mov
cdq
in
fmul
mov
push
adc
add
push
retf
push
cs
outs
mov
xor
fld
cmps
js
and
addr16
mov
add
mov
pop
not
mov
shr
shr
pop
iret
mov
sbb
mov
popf
xchg
pop
cwde
in
or
jno
add
push
js
popa
cmp
mov
adc
mov
xchg
shl
fst
cmps
les
movs
mov
sub
pushf
bound
jl
and
ret
inc
push
nop
dec
repnz
cmp
mov
pop
into
cld
outs
(bad)
lea
xchg
aas
cmp
adc
(bad)
iret
dec
jg
fs
jg
jp
sbb
ins
mov
shl
fwait
sub
std
add
mov
je
or
mov
and
xor
sbb
cmps
(bad)
jp
mov
jle
dec
xor
loopne
out
scas
jae
jmp
xchg
stc
mov
frstor
jno
dec
jmp
and
pop
xor
dec
out
mov
mov
retf
fmul
lahf
jmp
fcomp
in
pop
shl
xchg
pop
mov
xchg
in
lods
pop
iret
xchg
xchg
sbb
std
jecxz
mov
sub
mov
mov
inc
push
inc
call
mov
add
add
mov
and
call
pop
mov
lods
cmp
cdq
movs
add
scas
inc
sub
cmp
add
stos
iret
and
jne
(bad)
(bad)
aas
push
xchg
cmp
dec
and
jmp
dec
(bad)
or
dec
xchg
lahf
hlt
cwde
fimul
imul
mov
jbe
imul
mov
pop
fmul
inc
mov
nop
add
sub
dec
cmps
aad
movs
cmp
mov
popa
push
add
jmp
into
call
ret
sbb
ds
fadd
mov
xor
and
cli
in
ja
or
push
icebp
inc
mov
out
add
fdivrp
jnp
std
push
popa
ins
popf
adc
shl
scas
and
xchg
rol
xor
push
lahf
test
out
icebp
jg
mov
cmps
cmps
add
push
ja
(bad)
icebp
jmp
inc
jns
test
rcr
dec
cmps
loopne
mov
cmp
mov
ror
push
neg
adc
in
nop
sbb
ins
ins
mov
adc
sub
lds
jno
fiadd
mov
and
mov
jne
mov
mov
fimul
shl
call
add
mov
(bad)
mov
imul
ret
and
jbe
hlt
jmp
or
add
sbb
scas
daa
into
test
cld
cmc
pop
cmp
jl
add
mov
xchg
dec
jecxz
cmp
push
shl
jo
sahf
loop
ret
fadd
mov
push
jp
stos
stos
inc
ret
repz
cmps
aaa
imul
xchg
bound
mov
mov
mov
push
and
add
xor
mov
adc
ja
jae
mov
dec
push
mov
mov
cmps
xchg
adc
call
cmp
fstp
ins
inc
imul
(bad)
xor
fdiv
adc
arpl
call
js
push
adc
test
stos
sqrtps
fiadd
nop
and
and
xor
mov
mov
aas
mov
xchg
jae
jo
dec
push
lea
pop
jmp
sbb
call
retf
inc
mov
mov
mov
jecxz
fstp
jnp
xor
rcl
pop
ret
xchg
imul
outs
xchg
cmp
mov
xor
ret
or
gs
xchg
xor
popf
jecxz
cmp
inc
pushf
push
in
(bad)
sbb
shl
cmps
fwait
daa
enter
movs
cmp
sbb
in
adc
(bad)
call
mov
outs
jne
push
pushf
adc
jo
(bad)
les
push
xlat
mov
pop
outs
pop
aas
aam
mov
cmps
xchg
jecxz
push
mov
mov
out
push
movs
out
ficomp
sbb
test
and
lods
shr
and
dec
pushf
push
fidiv
inc
ror
and
xor
shr
pop
aaa
push
mul
(bad)
repnz
mov
cmp
push
repnz
mov
ins
fs
inc
imul
xchg
(bad)
xlat
fdiv
cmp
fwait
cs
cs
mov
adc
xchg
and
ins
enter
popa
dec
outs
push
jl
(bad)
aaa
ss
sub
stos
ins
popa
sbb
mov
cmc
and
xchg
pop
xor
aad
sub
add
cmp
xor
mov
pop
imul
(bad)
and
jmp
cld
inc
mov
cmp
xor
mov
ja
faddp
cmps
mov
fsub
mov
dec
cmps
loop
inc
xor
pop
shld
xchg
mov
retf
jb
ret
int
and
rcl
fisttp
mov
aaa
outs
and
std
jge
out
ror
inc
test
(bad)
out
div
add
out
add
and
retf
out
mov
cmps
pushf
mov
and
jo
push
aam
shr
inc
mov
or
jno
je
xor
mov
call
jne
cli
push
or
dec
pop
pop
pop
stos
inc
jns
retf
jecxz
inc
jnp
outs
test
mov
cli
dec
aaa
shr
outs
repz
dec
add
inc
std
jecxz
jbe
jmp
enter
(bad)
sbb
jns
arpl
jne
leave
cmp
pop
xor
rol
iret
and
sbb
sbb
dec
jle
bound
test
popf
mov
xor
mov
imul
push
mov
and
loopne
aad
jge
inc
(bad)
out
les
xlat
push
push
dec
nop
mov
arpl
ss
ret
xchg
ins
movs
mov
(bad)
lods
xchg
pop
clc
push
pop
(bad)
addr16
int3
out
xchg
pop
rcr
fsubr
pop
push
push
dec
mov
ret
inc
jno
mov
or
sub
mov
push
xlat
int3
fwait
pop
cmps
fdivr
lods
retf
push
dec
call
inc
test
sub
retf
sbb
out
(bad)
cld
int
sbb
aam
jmp
dec
or
jne
mov
and
dec
mov
ins
and
neg
mov
pop
pushf
xchg
sbb
outs
test
(bad)
fiadd
sbb
into
add
in
push
dec
mov
fisttp
cmps
(bad)
xchg
push
movs
leave
and
push
bound
test
mov
rcr
mov
call
cld
adc
(bad)
adc
icebp
jmp
mov
fptan
dec
sbb
cld
shr
clc
fstp
retf
inc
mov
xor
movs
cmps
xor
dec
addr16
(bad)
stc
sahf
popa
or
pop
ja
pop
addr16
mov
sub
dec
test
repz
mov
icebp
aam
ret
push
push
add
fs
cmp
sub
mov
cli
call
sbb
rcl
mov
out
pop
and
sub
adc
jge
sub
scas
arpl
int
loop
fst
pop
lock
push
jno
mov
cli
push
xchg
or
pop
pusha
in
repz
mov
and
imul
or
push
jge
xchg
call
xor
sbb
stc
cli
and
pop
sbb
es
mov
loope
add
iret
and
jne
(bad)
es
dec
inc
or
cs
sar
sahf
jl
call
inc
adc
pop
int3
int3
shl
cmps
hlt
sub
das
loopne
and
dec
popa
mov
icebp
in
jmp
ss
xor
outs
xchg
in
data16
in
jae
mov
loope
and
mov
sbb
ret
jp
pusha
inc
outs
mov
xor
cmp
loopne
stc
cmp
add
add
add
jne
xchg
jg
xchg
lahf
scas
xor
inc
loop
mov
(bad)
sti
add
mov
mov
fst
es
adc
mov
sbb
loope
push
aaa
loope
and
addr16
outs
aas
fcomp
mov
mov
test
push
pop
push
sub
and
pop
jecxz
mov
push
push
push
and
or
or
loop
mov
or
ins
or
das
lock
xor
ins
xor
pop
push
loopne
add
dec
scas
scas
dec
retf
out
pop
adc
stc
fld
not
mov
addr16
fsub
aaa
add
and
mov
jmp
xchg
ds
std
aas
gs
mov
daa
sub
and
xchg
and
jmp
ja
cmp
or
repz
inc
pop
iret
xor
jnp
in
pop
jno
push
cmp
shl
aad
jnp
int3
or
add
inc
sub
cmp
dec
lock
and
test
mov
call
call
test
out
sub
ficomp
pop
ja
popa
xchg
mov
shr
sub
lds
in
xor
push
lods
jmp
xchg
jno
cmp
daa
add
or
lock
dec
lahf
out
cmps
cmp
inc
fisttp
cwde
(bad)
cmp
mov
mov
jb
adc
pop
push
test
sbb
xchg
into
data16
rol
dec
adc
add
mov
stos
cmp
cmc
in
in
push
std
mov
dec
sub
sbb
cmps
imul
xor
fisttp
cdq
inc
sbb
fcom
xchg
div
bnd
xchg
push
pop
adc
mov
mov
mov
mov
add
mov
scas
cmp
neg
jbe
cdq
enter
cmp
jb
xchg
gs
sub
in
mov
pop
sar
add
dec
stc
dec
mov
add
pop
or
shl
inc
ror
stc
movs
pop
les
outs
loopne
inc
push
rcr
xchg
push
inc
retf
jnp
shr
shr
jecxz
ins
sbb
sub
cs
jo
scas
dec
add
pop
inc
cmp
pop
call
dec
call
pushf
addr16
mov
call
(bad)
pushf
jecxz
adc
enter
nop
push
addr16
bound
jne
dec
jl
mov
cmps
xor
cmp
not
movaps
ds
mov
xchg
(bad)
idiv
cmc
sub
sub
cmp
mov
sbb
fwait
pop
dec
xchg
in
int
xchg
ret
xchg
repz
push
jmp
sub
aas
or
mov
idiv
mov
xchg
repz
jo
xchg
pop
push
ds
xchg
mov
xchg
jl
add
dec
movs
cdq
pop
adc
movs
fs
rol
pop
loop
test
ficom
xchg
aaa
test
mov
and
cdq
sahf
lea
jns
cmp
pop
adc
xchg
or
adc
je
dec
xor
mov
mov
push
xchg
in
and
add
xchg
or
add
pop
inc
pop
pop
pop
fimul
popa
aad
add
sbb
mov
fwait
mov
lock
cmp
(bad)
mov
xchg
jnp
mov
cmp
inc
jbe
retf
pop
lods
or
xchg
sub
mov
lods
sub
hlt
fs
sub
xor
or
js
sub
xor
mov
in
mov
or
out
xchg
call
cmp
mov
pop
hlt
xor
mov
or
mov
jecxz
lahf
dec
ss
fiadd
jmp
pop
mov
es
movs
push
ds
mov
cs
push
adc
stos
pop
pop
int3
push
in
idiv
mov
dec
pop
and
jbe
outs
pop
(bad)
sbb
mov
sbb
aaa
adc
or
sub
fst
and
ins
pushf
bound
push
into
test
cmp
out
aam
or
aaa
push
outs
sbb
and
movs
push
sbb
jecxz
jmp
fiadd
(bad)
sbb
sti
cld
ds
mov
sub
iret
imul
imul
or
mov
mov
push
clc
cs
sub
mov
push
imul
ss
mov
fist
add
cmp
je
jne
mov
imul
jle
aas
sbb
pop
(bad)
repz
cdq
xor
cs
repnz
call
rcr
retf
jecxz
addr16
push
or
add
test
xchg
mov
int
xor
retf
std
fnsave
std
sbb
and
xor
push
xchg
xor
push
xor
popf
cs
cmp
cmp
jl
icebp
enter
push
and
std
inc
add
dec
outs
mov
mov
mov
mov
sub
adc
int
and
mov
stos
out
jno
scas
lock
jbe
mov
(bad)
movs
ret
lods
cli
and
stc
in
push
mov
mov
cmp
xchg
pause
or
sti
or
retf
push
xchg
sub
mov
je
nop
icebp
and
pop
mov
rcr
mov
sar
mov
imul
adc
lea
enter
hlt
sub
inc
das
addr16
xchg
inc
pop
pusha
sub
inc
mov
enter
std
outs
adc
bound
xchg
mov
rcr
lods
out
jl
call
cli
lods
pop
std
(bad)
fdiv
fnstenv
fbstp
das
ret
cwde
(bad)
push
add
lods
ror
out
jge
loope
data16
mov
sbb
add
mov
pop
loopne
lods
ror
(bad)
mov
xor
push
xchg
das
stos
lahf
or
add
leave
add
les
shr
sub
stos
push
ss
repz
mul
fidivr
sti
cmc
dec
out
icebp
mov
xlat
fadd
xchg
in
push
and
push
cld
pop
aas
ja
sub
test
jo
jge
fnstcw
mov
jge
add
mov
jbe
dec
sub
xor
mov
shl
push
adc
xor
dec
sub
add
pusha
retf
lock
in
lods
fwait
inc
sbb
cmp
aam
sub
cmp
(bad)
inc
fstp
ret
mov
or
icebp
push
sti
cmp
jl
sub
ret
lods
movs
test
inc
outs
adc
push
(bad)
(bad)
repnz
fdivr
int3
clc
in
and
(bad)
aad
and
pop
or
ret
leave
lea
das
and
inc
ds
inc
fcmovne
cmc
in
mov
sbb
cmp
scas
shl
icebp
and
mov
push
inc
mov
into
imul
ins
inc
pop
xchg
mov
stos
mov
(bad)
sub
mov
mov
inc
dec
inc
inc
cld
test
mov
(bad)
sub
cmp
(bad)
pop
stc
sbb
add
int
scas
xor
push
sbb
or
jb
(bad)
mov
dec
add
sub
jo
inc
aas
dec
aad
pop
nop
inc
loop
movs
sbb
push
imul
dec
std
pop
push
in
fld
jno
jnp
ins
arpl
in
adc
mov
dec
jo
jle
or
pop
pop
aaa
push
(bad)
push
(bad)
xor
jno
or
mov
leave
xlat
and
adc
shl
in
sub
retf
sbb
and
cmps
or
mov
stos
stc
cmp
mov
cmc
sbb
mov
cld
scas
imul
jne
push
pop
and
daa
jle
std
mov
mov
inc
scas
lahf
in
xor
jnp
xlat
in
adc
inc
sub
dec
mov
jle
js
cmp
js
cmp
inc
pop
jmp
loop
aam
or
xchg
cmp
test
movaps
jmp
outs
mov
adc
movs
not
jb
push
xchg
adc
cmp
mov
cmp
bound
mov
rcr
mov
push
pop
arpl
(bad)
xchg
mov
add
mov
test
(bad)
cmp
mov
inc
stos
push
out
sub
mov
xchg
imul
push
mov
sbb
xchg
xor
retf
hlt
jecxz
sbb
dec
into
mov
mov
shl
sub
push
retf
shl
je
mov
lods
or
adc
mov
movs
scas
aad
test
mov
sbb
adc
push
repz
sahf
adc
fimul
and
inc
push
inc
gs
adc
outs
call
nop
push
retf
add
cmp
ret
sbb
iret
push
mov
jg
cmp
sub
test
push
push
ja
mov
div
push
inc
xor
adc
jne
test
dec
jno
js
ins
mov
mov
jae
adc
shl
dec
nop
sub
or
retf
stos
in
out
frstor
jp
push
clc
cdq
cmp
jecxz
xchg
shl
sbb
and
test
dec
loope
ins
pushw
and
sub
jnp
inc
sbb
xchg
xchg
push
mov
pop
movs
mov
and
adc
add
mov
sbb
(bad)
and
push
push
push
sub
das
stos
pop
mov
xchg
or
pop
jge
out
int3
add
cmps
sahf
lock
cli
or
jae
sub
or
or
js
(bad)
jno
adc
add
push
add
stos
push
push
cmps
mov
(bad)
xchg
inc
push
sbb
push
push
push
or
mov
xor
pop
pop
push
in
dec
sbb
and
gs
out
mov
aad
adc
sub
outs
adc
xchg
jp
jno
ficom
ficomp
and
push
cmp
dec
jo
mov
adc
lea
dec
out
cld
cdq
mov
fnsave
aas
mov
pop
push
lods
jmp
test
fistp
nop
sbb
outs
iret
cld
add
setnp
mov
inc
cs
shl
stos
adc
scas
scas
adc
jno
cli
call
adc
pop
das
jle
std
mov
mul
xor
push
pop
pushf
nop
scas
dec
ins
xchg
adc
into
xchg
mov
inc
pop
ins
repz
rcr
rol
mov
sub
shl
aad
push
ins
dec
push
pop
mov
adc
pusha
jae
rol
jae
jmp
rcl
movs
cmps
out
sbb
push
mov
cwde
neg
xor
sub
sbb
js
clc
shl
icebp
ins
test
xor
(bad)
jno
mov
movs
popf
mov
and
mov
mov
jbe
jns
call
mov
fs
fisubr
mov
or
adc
xchg
retf
adc
lahf
or
xlat
sbb
call
(bad)
mov
fmul
lea
sbb
ins
jae
inc
cli
ss
cmp
fnstenv
(bad)
jecxz
(bad)
xor
push
leave
fsubrp
mov
jno
jne
std
inc
and
mov
mov
int3
and
cmc
inc
and
repnz
mov
fwait
sbb
add
popa
mov
std
ds
xlat
imul
mov
pop
fistp
inc
mov
pop
(bad)
cmc
push
sbb
jnp
xchg
cmps
xlat
sar
adc
and
xrelease
and
push
and
adc
and
cmp
sbb
call
add
and
shl
scas
popa
pop
loopne
adc
cli
neg
dec
das
dec
fidiv
and
mov
dec
cld
inc
std
test
stos
pop
xchg
fisub
cmc
cmps
mov
push
(bad)
popf
inc
or
mov
xchg
retf
mov
retf
and
aam
pop
repz
sub
jns
cmp
loope
inc
add
jg
xor
imul
inc
add
loopne
or
in
hlt
jp
cld
fsubr
cmp
push
das
sbb
stos
out
cdq
ins
call
mov
cmp
mov
or
call
mov
xchg
jmp
aas
or
sbb
rcl
adc
lahf
mov
inc
inc
loop
jb
pushf
xor
fld
xor
ds
test
pop
cmp
jecxz
popa
int3
jb
sub
xor
adc
inc
in
push
add
out
sbb
pushf
xchg
out
data16
mov
pop
loope
fdiv
std
xor
dec
pop
or
mov
or
add
cmp
retf
pusha
(bad)
push
lahf
or
cmp
cmp
pop
and
mov
leave
lea
sub
mov
daa
mov
adc
push
jge
daa
xchg
in
sub
jmp
sub
mov
test
repz
mov
cdq
js
fmul
xchg
mov
jl
mov
xor
gs
sub
fistp
push
sbb
xchg
pop
sahf
cmps
pop
and
pop
sbb
test
into
cmp
sti
gs
xchg
les
adc
daa
sbb
cmp
es
sbb
outs
mov
test
shl
out
test
xchg
movs
adc
jl
jecxz
pushf
or
inc
imul
repz
dec
shl
loop
cmps
pop
jg
cdq
cmp
sub
ja
dec
popa
test
in
dec
pop
jp
retf
xchg
or
jb
imul
mov
sbb
pushf
repnz
retf
xchg
int
jmp
cs
dec
fistp
scas
hlt
pop
push
out
lea
fwait
sahf
and
loop
rcl
jp
retf
cmp
jg
retf
add
ffree
jne
fnsave
fmul
jne
mov
sub
shl
xchg
pop
ins
ret
scas
and
rcr
pop
(bad)
push
mov
pop
mov
inc
repnz
inc
jb
(bad)
sbb
leave
ins
jnp
sbb
pop
push
push
mov
sti
mov
inc
imul
or
into
scas
cwde
sub
test
ret
dec
jno
clc
retf
std
jg
pop
sub
int
adc
inc
or
mov
jg
sbb
hlt
sar
call
jae
inc
mov
mov
xchg
cmp
repnz
sahf
scas
je
iret
and
mov
pop
jmp
das
stc
adc
inc
mov
pop
xor
jns
jno
cmp
adc
ss
fidiv
ins
ret
fwait
(bad)
inc
push
mov
inc
cdq
mov
pop
(bad)
fbstp
fsub
pop
call
sub
add
and
xchg
add
cmp
xor
dec
cmp
mov
mov
sets
popf
clc
loope
dec
call
adc
dec
retf
adc
cmp
inc
aam
dec
ror
es
mov
jp
mov
jne
adc
popf
xor
int3
mov
push
or
mov
adc
out
jno
scas
bound
call
jo
aad
pop
add
inc
jmp
pop
cmp
jg
and
jge
or
clc
fdiv
test
add
adc
ja
mov
cmc
fisub
repnz
in
aam
cmp
push
clc
mov
mov
ins
out
add
xchg
jbe
(bad)
lods
inc
xlat
stos
and
arpl
sar
(bad)
stc
cmp
into
ds
fiadd
fcomp
in
add
jns
adc
icebp
cs
je
pop
add
loopne
sub
mov
mov
mov
cmps
sti
loopne
call
adc
nop
xchg
or
mov
call
adc
fimul
sub
aas
fwait
xchg
test
in
iret
mov
int
adc
outs
ret
mov
mov
scas
(bad)
fwait
aas
or
rol
push
das
cmps
push
push
or
and
pop
(bad)
mov
sub
aam
mov
mov
in
clc
sub
cli
out
xor
pop
inc
in
fs
lods
movs
aam
hlt
mov
les
mov
mov
jbe
dec
into
jbe
mov
rol
xor
push
adc
adc
mov
jo
mov
ss
test
cmp
sbb
sbb
mov
dec
shr
imul
aad
fnstenv
add
xchg
xlat
fnstsw
out
test
xchg
(bad)
gs
fst
pop
jbe
movs
add
xor
pusha
cmp
jle
in
xchg
cmp
icebp
lock
cmp
push
mov
mov
call
or
push
mov
or
test
mov
imul
dec
add
pop
xlat
in
aaa
arpl
xlat
movs
ror
push
mov
mov
mov
les
fs
push
jns
in
das
cmp
push
in
leave
mov
mov
iret
mov
jmp
mov
outs
or
sub
shl
mov
das
xchg
adc
xor
jbe
add
popa
or
pop
fwait
mov
cmp
call
test
xchg
movs
mov
int
rol
cmc
aaa
stos
(bad)
mov
aas
push
fiadd
shl
xchg
out
(bad)
push
xor
test
inc
adc
mov
adc
mov
inc
mov
stos
cs
jno
js
inc
xor
bound
dec
mov
or
push
sti
call
in
dec
and
and
add
mov
cmp
out
jp
mov
stos
xor
jb
fisubr
dec
mov
or
mov
and
jns
push
mov
cmc
call
shl
inc
push
xchg
in
push
cmp
cmps
xlat
leave
div
or
in
inc
fimul
lods
add
test
mov
dec
ret
add
push
stos
inc
jnp
iret
adc
fcom
std
sub
das
cld
adc
pop
mov
mov
mov
pop
push
jge
daa
cmp
pusha
mov
and
dec
arpl
aad
jp
push
iret
(bad)
xchg
add
lods
jp
push
js
enter
and
ror
(bad)
in
nop
jne
adc
stos
test
lock
add
jns
popa
daa
scas
jmp
lock
pop
cmp
dec
xor
and
push
imul
sar
sbb
cmp
cmp
fs
mov
hlt
cmp
pushf
adc
popf
(bad)
lds
pop
add
imul
maxps
ror
jmp
mov
popa
fiadd
pushf
jbe
jne
xlat
jns
lahf
into
adc
ror
sar
pop
int
mov
fidivr
outs
xor
mov
popf
and
pop
adc
(bad)
jbe
xchg
mov
adc
pop
div
xor
xchg
pop
cmp
or
iret
lea
push
sbb
sbb
aad
sahf
dec
shl
jmp
jecxz
jns
jmp
dec
fld
add
scas
(bad)
int3
mov
out
pop
sub
dec
icebp
jmp
repnz
xchg
push
lods
sub
fisttp
jb
sbb
xor
std
inc
jmp
test
adc
lods
int3
pop
cmp
inc
daa
cwde
adc
out
pop
sahf
and
loope
enter
(bad)
in
jle
ret
xor
adc
mov
(bad)
retf
fldcw
popf
sbb
les
in
mov
or
pop
test
test
mov
stos
add
mov
jge
inc
and
jecxz
mov
mov
push
or
jbe
jbe
sub
sub
push
xchg
lds
das
xlat
push
jae
int3
push
dec
pop
adc
xor
xlat
dec
pop
add
sub
jbe
push
or
je
sahf
xchg
shl
out
gs
sahf
inc
ins
add
cld
aad
inc
test
sub
and
add
movs
daa
mov
fwait
push
mov
cmp
and
shl
xchg
adc
add
stc
aam
je
adc
cmps
out
mov
retf
mov
mov
in
add
sbb
kaddw
sti
fcom
sbb
jle
pop
cld
test
pop
inc
fwait
dec
push
ss
pop
add
jae
mov
pop
popf
call
retf
and
inc
adc
ds
sbb
out
jb
adc
push
dec
fimul
stos
and
sub
pop
mov
fdivp
inc
pop
inc
xchg
adc
es
popa
jle
loop
xor
add
adc
sbb
movs
fcom
(bad)
mov
sbb
sub
fidiv
mov
add
mov
jnp
cld
inc
rcr
aad
mov
pop
dec
je
cld
inc
mov
sbb
inc
test
fnstsw
iret
int
cmps
out
rol
mov
(bad)
xor
xchg
mov
jmp
push
xchg
mov
inc
or
cmc
xor
aam
add
std
sub
push
ficomp
dec
or
outs
xchg
inc
xchg
mov
or
ja
add
sub
inc
ret
popf
mov
sbb
mov
dec
(bad)
xchg
neg
std
and
arpl
jl
sub
jb
idiv
aad
loop
or
add
jecxz
leave
call
and
push
cmp
movs
int
sub
lock
iret
lds
adc
fcom
mov
sar
jp
sub
int3
mov
stos
pop
jl
stc
je
shl
mov
stc
sbb
mov
jne
mov
push
shl
jg
mov
xchg
push
out
cli
js
(bad)
jb
fnsave
in
xchg
(bad)
jmp
mov
inc
mov
arpl
mov
out
xchg
dec
stc
cmp
add
push
sahf
mov
call
mov
fist
xchg
push
out
test
inc
and
add
mov
adc
and
stc
mov
inc
outs
adc
stos
fiadd
jbe
dec
stos
outs
jmp
mov
mov
ror
jb
mov
adc
out
retf
ror
and
sti
cwde
add
repz
loop
and
ds
leave
je
push
xor
rcl
xchg
xor
jns
shl
imul
leave
push
push
sbb
fwait
cmp
jbe
lahf
iret
hlt
inc
pushf
fistp
push
xor
scas
sub
adc
sub
ins
test
sbb
lods
mov
inc
inc
cwde
in
popf
icebp
imul
fld
mov
fwait
in
pop
call
cld
mov
test
jp
jle
dec
ss
stc
mov
add
push
cmp
mov
jp
(bad)
mov
inc
rcl
stos
popf
cmp
sub
sbb
shl
xor
sbb
add
mov
aam
outs
adc
xchg
adc
fcom
out
mov
or
adc
aas
bound
cli
les
ret
out
jns
jecxz
and
adc
fwait
xchg
push
mov
xor
pop
out
pop
and
retf
stc
retf
xlat
sub
repnz
or
sbb
gs
push
fs
jo
or
mov
mov
cs
(bad)
mov
outs
push
shl
cmp
xor
aam
inc
jb
into
std
out
xchg
cld
inc
test
ins
rcr
inc
out
je
and
lods
test
popa
std
nop
popf
xchg
or
arpl
out
dec
std
mov
cmps
mov
jl
push
pop
and
and
cmp
lea
push
and
jbe
add
adc
mov
inc
aaa
out
inc
mov
jmp
push
mov
mov
ja
dec
xchg
out
xor
xchg
dec
and
ret
sbb
xchg
xor
mov
(bad)
push
fcmovb
mov
in
loopne
js
cmp
xchg
sub
into
jae
outs
dec
sbb
xchg
push
xchg
retf
je
pushf
pop
xor
jg
pop
or
cmp
mov
cmc
pop
push
aas
pop
js
icebp
adc
push
xchg
push
loop
mov
jbe
sahf
push
neg
mov
jne
jge
mov
fild
jecxz
leave
xchg
sbb
or
repnz
(bad)
push
test
(bad)
imul
inc
mov
xor
jecxz
mov
inc
pop
cmc
scas
xor
or
(bad)
int
adc
mov
sbb
push
stc
jmp
scas
fisubr
mov
or
ss
rol
mov
and
icebp
xor
xchg
sti
add
int
lods
inc
hlt
dec
cli
sbb
shr
jecxz
call
pop
cmp
int3
push
xor
bound
mov
sar
stc
lock
jno
and
out
pop
sub
sbb
(bad)
test
jns
jo
test
ds
bound
ror
xor
shl
loope
xchg
sub
inc
mov
mov
imul
cli
jo
loop
outs
stc
jl
repnz
pop
outs
cmp
adc
and
jbe
push
out
jne
xor
rcr
mov
ds
cmps
cwde
(bad)
jge
movs
leave
aas
(bad)
cmp
enter
push
sbb
mov
add
mov
fsubr
xchg
les
push
ins
add
xchg
addr16
shl
and
adc
add
cmps
sbb
dec
dec
xor
test
or
nop
jl
outs
jecxz
jnp
cs
and
mov
jmp
adc
xchg
test
and
mov
mov
mov
jmp
cmp
cmp
dec
and
out
fdiv
(bad)
xchg
fild
nop
jecxz
and
jbe
cmp
fwait
dec
retf
outs
sub
movs
in
mov
jp
lods
inc
call
repnz
popf
aam
out
sbb
push
push
pop
dec
and
dec
jne
xchg
sub
test
imul
push
jg
add
std
in
call
mov
mov
pop
cmp
xchg
lods
mov
inc
dec
xchg
xchg
or
sbb
mov
and
ds
jg
mov
data16
ficomp
sub
dec
clc
jnp
dec
adc
and
mov
add
cs
sahf
outs
lods
sub
pop
div
xchg
push
add
mov
or
(bad)
outs
lods
out
movs
push
add
mov
cmps
loop
leave
pop
ret
or
popf
es
xchg
pop
jbe
movs
mov
jbe
ds
inc
repz
mov
shr
adc
jbe
push
mov
inc
ret
jmp
test
jp
xchg
inc
mov
outs
jmp
das
(bad)
and
push
mov
sahf
sub
xchg
fmul
dec
test
jp
adc
mov
mul
sbb
into
and
and
loope
jmp
(bad)
sbb
outs
lods
adc
cmp
ret
sahf
sbb
xor
push
daa
cmp
mov
call
daa
mov
xchg
call
push
jnp
xor
xchg
not
push
xchg
and
lds
cdq
adc
iret
sbb
call
inc
and
test
fwait
in
outs
fwait
cmps
popf
inc
sar
push
jmp
mov
popa
push
cmps
mov
jg
add
push
adc
icebp
cmp
aas
jo
js
jns
sub
mov
shl
fimul
pop
lods
les
call
movs
popf
jecxz
outs
push
sub
mov
push
xchg
xor
cmc
xchg
sahf
pop
es
or
shr
sub
push
jmp
adc
pop
(bad)
icebp
inc
fidivr
pop
sub
push
pushf
sub
mov
push
cmp
fs
gs
mov
sti
cmc
and
neg
jmp
enter
and
enter
cmp
sub
sub
lock
and
pop
das
or
sub
mov
push
push
imul
xor
pop
mov
sub
mov
mov
pusha
repz
adc
mov
imul
adc
test
call
xchg
nop
mov
push
pop
mov
ret
leave
cwde
imul
js
scas
mov
lods
test
jnp
fdiv
add
into
aam
cmp
mov
and
xlat
add
cli
out
outs
inc
fucomi
sbb
mov
div
and
cdq
mov
dec
aaa
nop
cmp
test
jno
inc
mov
xchg
out
imul
(bad)
call
out
adc
lods
cmp
dec
retf
xchg
dec
ror
popa
push
pop
ret
mov
sbb
sub
enter
lahf
mov
push
xchg
jmp
fdivr
dec
pop
popa
pop
out
push
push
(bad)
aad
retf
cwde
retf
nop
cmps
sbb
dec
jmp
push
outs
adc
or
push
push
lods
aas
lods
mov
out
fld
stos
into
repz
push
push
cmp
xchg
cmc
cmp
outs
shr
push
cmp
push
add
sbb
xor
cmp
data16
xchg
loope
and
(bad)
dec
or
les
sub
fwait
ret
outs
xor
aam
mov
cld
sbb
pop
or
and
or
inc
push
out
adc
cs
push
pop
inc
out
pop
mov
pop
mov
jmp
popa
fild
or
adc
or
shl
mov
cmps
imul
inc
sub
in
mov
dec
rol
pushf
int3
push
push
in
ret
int3
pop
cld
iret
dec
xor
jne
enter
hlt
loope
add
shl
ret
xor
sub
enter
mov
mov
and
adc
hlt
sub
pop
arpl
dec
dec
out
xor
out
jb
mov
inc
mov
and
ret
jge
mov
push
in
mov
add
push
scas
jmp
inc
or
jg
sub
adc
jb
inc
push
push
test
mov
xor
sub
xor
push
mov
push
jecxz
push
aaa
and
das
mov
pop
adc
ja
sub
call
adc
fild
scas
fcomp
xor
dec
push
mov
(bad)
jg
test
inc
and
cmps
outs
mov
adc
cli
pop
lods
xchg
fs
es
mov
pop
loope
leave
mov
scas
sbb
adc
cmc
add
(bad)
cmps
in
pop
mov
xor
cmp
paddsw
jge
sub
xor
test
jecxz
minps
ins
cli
les
dec
in
inc
add
mov
(bad)
xchg
adc
sbb
repnz
ss
fwait
popf
jle
inc
pop
jge
inc
lock
xchg
pop
call
cld
stos
push
in
and
jno
mov
fld
hlt
test
pop
fnstsw
cmps
fld
dec
(bad)
and
bound
mov
push
jp
pop
or
xchg
pop
mov
sub
iret
(bad)
mov
xor
mov
sbb
fiadd
cdq
into
mov
ins
popf
repnz
imul
jae
mov
daa
lods
mov
repz
push
jbe
pop
lods
es
push
aaa
sbb
cli
cdq
push
push
lea
xor
fldcw
call
mov
ss
inc
nop
cmp
or
repnz
push
add
push
cmp
and
push
inc
outs
pushf
imul
and
arpl
out
cmp
movups
push
or
mov
dec
xor
scas
gs
(bad)
jns
aaa
push
sub
daa
cli
dec
sbb
or
xchg
or
daa
and
cmp
repnz
mov
mov
inc
pop
xchg
aam
bound
or
sbb
jnp
imul
pop
stos
push
inc
mov
mov
lods
jae
mov
xor
scas
pop
pop
xor
push
sbb
test
dec
pop
cmp
sti
xor
xchg
or
add
jecxz
add
xor
mov
aad
jecxz
xlat
inc
mov
mov
repz
fbstp
mov
push
arpl
pcmpeqb
cli
xor
(bad)
jno
sahf
in
mov
test
gs
es
push
push
pop
lea
or
or
dec
out
mov
in
and
std
dec
or
dec
cmp
pop
das
cmp
stos
xchg
jmp
mov
cmp
mov
out
xor
retf
or
in
js
adc
add
imul
sbb
sar
test
fidivr
loop
fmul
jecxz
int
rcr
cdq
sub
mov
sub
mov
in
add
fadd
add
inc
adc
in
jns
daa
push
push
push
xor
jl
bound
lds
inc
bnd
test
cmp
inc
mov
stc
test
lds
pop
mov
cmp
add
cmp
mov
shr
addr16
das
mov
lock
push
jp
push
jge
mov
aad
imul
out
pop
mov
push
retf
in
in
fcomp
test
rol
add
inc
push
mov
pusha
xchg
test
inc
xchg
jbe
and
pop
or
mov
ins
cli
push
bound
sub
mulps
mul
(bad)
sbb
pop
jl
mov
add
hlt
loopne
popa
mul
adc
jo
cld
icebp
ret
add
fwait
cmc
xchg
shl
sbb
test
scas
cmp
push
in
jle
cmps
cwde
dec
and
ds
rcr
cmps
movs
ret
(bad)
and
lock
inc
imul
fcomp
mov
or
xchg
hlt
sub
pushf
call
inc
jl
push
or
push
movs
fdivp
add
xor
mov
fcmovnu
or
rol
mov
sti
leave
lea
push
outs
or
ror
test
pop
mov
mov
xchg
retf
outs
push
sbb
mov
push
inc
mov
or
fisubr
ret
repz
jmp
daa
cmp
and
les
mov
int3
shl
pop
lock
enter
popf
mov
jmp
ja
inc
pop
cdq
xor
int
clc
rep
hlt
icebp
leave
cs
mov
push
test
mov
pusha
je
jg
dec
xor
mov
pop
mov
xchg
iret
xchg
pop
sub
dec
mov
xchg
push
into
mov
in
lods
push
cmp
sbb
hlt
mov
pop
push
push
jnp
cdq
test
pusha
mov
cli
std
sbb
call
xchg
ret
dec
fmul
sub
mov
inc
add
and
das
out
inc
in
push
add
aaa
je
xor
test
xchg
leave
dec
push
(bad)
fcomp
(bad)
xor
xor
outs
inc
xor
xor
mov
jmp
pop
outs
iret
pop
mov
xchg
in
imul
int3
loope
push
push
and
add
sub
or
getsec
and
ss
std
or
arpl
leave
pusha
mov
mov
adc
mov
xlat
nop
nop
jae
pop
push
mov
fsubp
or
jecxz
sti
scas
mov
andnps
(bad)
stc
xor
into
pop
mov
vpsrlq
inc
pop
adc
xchg
dec
and
mov
pop
ret
gs
ficom
ret
ja
hlt
jmp
sub
cld
dec
cli
push
retf
add
push
sbb
inc
cmps
cmps
retf
push
pinsrw
inc
inc
cs
jl
cmp
fwait
dec
stc
and
cmp
in
in
cmps
in
in
cmp
bound
out
jne
or
out
lods
mov
mov
push
sahf
xor
sub
pop
mov
jb
cmps
pop
xchg
sar
js
aam
aas
or
and
pop
lods
pop
call
mov
pop
xchg
jge
or
jp
cmp
int3
repz
stos
fist
cmc
jmp
and
push
rol
ins
add
stos
jge
stos
mov
cmc
das
xchg
jg
sub
xchg
cli
pop
stos
rcr
cmps
scas
adc
xor
push
and
jnp
das
rcr
mov
mov
iret
mov
fwait
sub
add
mov
rol
mov
push
popf
add
jmp
mov
add
jmp
mov
lea
or
retf
call
xchg
(bad)
sub
in
pop
fcomp
xlat
or
neg
push
and
aas
lods
movs
push
int3
xor
adc
imul
xchg
add
mov
test
push
out
jo
push
add
sbb
pop
pop
add
les
retf
int
and
shr
sbb
push
xlat
push
lahf
dec
and
xor
jns
in
stos
fbstp
loopne
pushf
xchg
(bad)
cs
loopne
push
adc
cdq
inc
js
adc
add
nop
adc
mov
ret
lods
shr
inc
aad
jae
push
daa
into
sti
arpl
fwait
pop
and
mov
push
jnp
dec
(bad)
imul
adc
call
and
pop
ds
dec
sar
clc
pop
mov
jle
ret
sub
cmp
jg
jmp
or
loop
pushf
out
mov
out
mov
mov
pop
les
pushf
mov
shr
loopne
fnop
je
fwait
pop
sbb
push
jo
es
call
xlat
adc
mov
outs
jnp
xlat
pop
pop
sub
push
lds
das
mov
pop
mov
inc
xchg
jl
and
mov
xor
push
or
(bad)
mov
mov
movs
xor
xor
shl
popa
sbb
lea
sbb
inc
cmp
push
retf
dec
test
test
pop
in
shl
inc
and
mov
add
jmp
sub
sbb
test
or
lock
imul
jmp
pop
lock
sbb
out
jns
stos
and
and
rcl
aam
repz
pop
sahf
cli
fisttp
iret
push
dec
out
sahf
daa
fild
loope
fbld
arpl
cmp
xor
sub
addr16
xor
xchg
fisub
stos
loopne
or
outs
imul
retf
stos
push
sub
cs
pop
hlt
push
push
xchg
pop
sbb
add
pop
stos
test
ins
fst
fnstcw
cmp
gs
push
jb
mov
xor
into
mov
dec
shr
push
pop
in
xchg
xchg
lds
(bad)
iret
jmp
jae
fnstcw
mov
ret
mov
add
icebp
scas
mov
clc
sbb
fcom
sar
inc
stos
mov
jae
lock
add
jl
push
scas
xchg
lahf
push
jge
dec
aaa
and
(bad)
movs
retf
gs
or
repz
push
pop
lock
xchg
and
jg
shl
push
pop
imul
dec
dec
fwait
shr
inc
ret
jecxz
jne
dec
out
in
sbb
test
dec
push
pop
jmp
or
jne
push
fcomip
mov
inc
aad
ds
stos
loope
adc
mov
in
xor
out
cmp
sbb
mov
sbb
dec
daa
cmp
test
outs
std
ds
dec
nop
jne
jle
(bad)
shr
data16
(bad)
jmp
push
cdq
xchg
lea
pop
jne
mov
cmp
jle
jmp
sub
lahf
inc
pusha
xor
inc
and
icebp
xor
fstp
inc
fdivr
leave
mov
adc
pop
gs
ret
clc
jo
sar
cmc
imul
leave
repnz
scas
xor
jecxz
ins
in
int3
inc
xchg
test
(bad)
outs
push
pop
mov
jmp
lahf
shl
psubsb
jmp
dec
mov
push
popa
popf
je
or
ror
(bad)
retf
pop
out
mov
sbb
out
cmp
popf
mov
out
jmp
dec
(bad)
out
call
cmp
inc
(bad)
out
mov
je
loope
aaa
inc
push
sbb
sbb
sbb
fisubr
fs
inc
rcl
fwait
cli
push
neg
out
pop
push
push
ss
or
icebp
xchg
aas
es
(bad)
fsub
mov
loope
xor
loopne
dec
int
loope
outs
loope
jb
cmps
fwait
sbb
aaa
pusha
jnp
pop
int
das
and
mov
test
xchg
rol
pop
xor
dec
movs
pop
fisub
cmc
mov
jg
xchg
popf
fs
daa
cmp
mov
cmp
retf
out
mov
sahf
mov
mov
movs
or
mov
jl
mov
out
imul
fisub
mov
jo
ror
xor
ficom
neg
js
inc
cmp
ret
cmp
xor
in
sub
fild
sub
mov
mov
or
std
mov
pop
(bad)
lock
out
nop
div
popf
addr16
call
ins
aaa
pop
shl
push
outs
arpl
pop
repnz
lock
cwde
xor
mov
mov
mov
xor
push
adc
fs
dec
movs
(bad)
out
fucomi
ds
push
lods
mov
inc
jl
ror
rcr
sar
call
jecxz
lods
ds
aas
pop
jno
mov
sahf
vandps
jg
mov
dec
loop
jae
fdivr
add
ds
imul
and
or
(bad)
iret
mov
mov
and
rol
cmps
add
int3
imul
cmp
xchg
add
int
jnp
(bad)
and
test
and
sbb
xor
aad
test
cmp
cmc
xor
dec
add
js
mov
ins
adc
sub
add
and
sbb
cli
add
test
btr
mov
pop
(bad)
in
mov
gs
fiadd
leave
sub
mov
rol
mov
and
inc
test
stos
outs
iret
adc
add
adc
or
sbb
sbb
xor
retf
mov
xchg
push
ret
icebp
and
adc
(bad)
idiv
mov
xor
mov
lods
pop
or
sub
lock
leave
imul
jle
dec
popf
in
push
dec
push
js
(bad)
rcr
pushf
ss
rol
xor
movs
xchg
stc
inc
into
sar
std
xor
enter
icebp
xchg
and
sti
push
fstp
pushf
imul
popf
xor
mov
repz
xlat
arpl
jo
xor
cwde
adc
sub
jmp
mov
mov
std
inc
ins
mov
daa
(bad)
or
mov
add
push
and
es
lods
jg
jecxz
(bad)
sbb
add
in
mov
push
cwde
in
inc
cmp
push
shl
mov
sbb
ror
cmp
add
call
xchg
xor
mov
xchg
add
jb
jae
xor
cli
mov
pop
stc
or
add
rcl
add
pop
inc
jno
into
or
fbstp
inc
arpl
inc
inc
rol
or
inc
pop
and
or
inc
(bad)
xlat
mov
and
ret
push
mov
inc
ret
dec
and
lods
clc
push
call
mov
mov
imul
aas
or
stos
int
neg
(bad)
jno
or
mov
and
mov
jb
push
scas
xor
push
fidiv
fild
sub
xlat
mov
mov
add
pop
(bad)
mov
leave
jnp
es
adc
(bad)
sub
cmp
or
push
cdq
inc
cmp
sub
dec
loope
jb
xchg
jg
mov
in
outs
fucomip
pop
dec
cld
lods
push
mov
int
sub
gs
mov
jmp
repnz
int3
inc
retf
je
dec
sbb
fnstcw
sbb
pop
sub
imul
dec
mov
ret
adc
push
fld
dec
std
retf
lods
mov
mov
mov
or
stos
sbb
test
mov
adc
mov
ret
je
ins
xchg
imul
push
into
jno
pop
jne
jmp
into
imul
in
leave
xor
inc
repz
lods
js
shl
adc
outs
(bad)
mov
jo
dec
sbb
mov
in
mov
push
in
sbb
push
or
lods
cmp
idiv
jo
sti
push
fld
add
jge
out
mov
xor
sub
hlt
fist
xor
aad
imul
push
inc
pop
push
adc
xor
cmp
jno
mov
cld
mov
mov
rcr
push
test
xchg
gs
ss
or
jns
rcr
cli
sub
push
lods
fwait
imul
inc
in
lods
adc
pop
dec
imul
xor
jl
ficomp
push
sub
stos
cmp
ja
sbb
inc
ret
imul
outs
cmps
je
cmps
outs
rcl
dec
pop
test
xchg
out
sub
mov
mov
inc
in
mov
ret
inc
add
loopne
scas
imul
f2xm1
repnz
in
pop
cmps
in
retf
or
data16
lds
push
lea
adc
hlt
stc
out
jns
and
mov
int3
mov
adc
jbe
mov
mov
popf
loope
push
lds
jbe
addr16
popa
and
pop
mov
mov
jecxz
cmp
fisttp
jg
pop
jmp
test
xchg
jmp
adc
fcom
mov
in
sub
sti
icebp
ffreep
push
lds
fstp
lahf
test
pop
xchg
jle
adc
outs
das
ret
lock
push
mov
data16
xor
je
xchg
enter
ja
bound
scas
nop
(bad)
repz
sub
dec
popa
pop
cmp
xor
mov
or
cdq
jb
mov
lods
icebp
xor
adc
loopne
adc
rol
fiadd
jg
dec
pop
dec
aad
xor
out
jl
in
arpl
adc
(bad)
stc
and
pusha
add
adc
cdq
adc
mov
fadd
lods
jp
int3
rcr
call
repz
lahf
and
push
ss
inc
jl
out
pop
jg
outs
lods
adc
sub
cld
jmp
add
and
xchg
jb
adc
adc
xchg
jo
pop
pop
call
cmp
inc
jp
popf
xchg
push
push
pop
repz
dec
jnp
sub
push
daa
mov
mov
fiadd
dec
cmp
jo
pusha
and
push
push
xor
sub
add
mov
mov
outs
dec
mov
or
or
push
xlat
jb
dec
jp
jmp
aad
xor
ret
pop
push
add
ss
lahf
jns
loop
add
mov
pop
mov
into
int3
sub
xlat
rep
lods
xchg
out
push
cli
jl
add
mov
pop
pusha
mov
sar
push
sub
mov
mov
push
pop
mov
adc
mov
ret
xor
inc
stos
jns
jb
pop
sbb
mov
mov
adc
jb
bound
aas
add
jg
or
hlt
push
iret
dec
cmp
lahf
ror
mov
sbb
jno
sub
call
push
loop
imul
mov
pushf
ror
cmp
inc
cmp
push
or
xchg
or
cs
dec
pop
mov
sub
sar
mov
mov
xabort
sbb
mov
mov
adc
jne
push
dec
mov
(bad)
dec
cmp
xchg
dec
(bad)
xchg
push
enter
std
add
xchg
add
jl
mov
jl
es
pop
pop
fsubrp
jno
inc
mov
je
push
mov
fild
je
mov
jle
dec
ret
out
inc
addr16
movs
cmp
out
add
lea
cmc
cli
sub
fcmovu
pop
inc
loop
pop
movs
xor
clc
loopne
cli
add
adc
das
or
std
and
add
cmp
xchg
int3
sub
mov
jnp
xchg
cmp
iret
out
call
xor
cmp
dec
enter
rcl
cmps
rdpmc
shl
mov
mov
or
(bad)
and
out
fisttp
clc
fmul
inc
lea
stc
push
ret
pusha
dec
jno
sbb
sub
cld
shl
sub
lea
dec
sbb
mov
or
sbb
mov
or
mov
cmp
or
sub
imul
mov
lahf
or
data16
mov
in
push
cmps
mov
sbb
sub
inc
int3
xchg
mov
test
add
mov
daa
xor
scas
ss
enter
xchg
xor
fld
or
sti
gs
lock
mov
jnp
add
inc
ret
add
xchg
xor
ins
call
mov
test
and
jp
std
std
out
stos
fdivr
daa
inc
sbb
pop
nop
or
mov
ret
push
mov
add
mov
int3
(bad)
call
cs
(bad)
xchg
or
enter
aad
pop
inc
mov
mov
mov
call
mov
xor
sub
clc
sbb
jmp
lds
lea
xor
fistp
jmp
aad
dec
outs
jle
jnp
sub
ins
or
test
pushf
popa
fadd
je
sbb
lods
xchg
mov
and
jmp
ss
in
and
sub
cmp
cmp
ds
jecxz
dec
xchg
inc
shl
sbb
nop
inc
inc
jno
and
sbb
push
cwde
and
or
xor
rcr
clc
mov
dec
mov
nop
add
call
lds
sbb
sub
jl
mov
cmp
cmps
mov
call
fnstcw
or
cmp
int
into
mov
cmp
and
lods
in
ins
das
sahf
dec
jb
pop
xor
bound
aam
mov
addr16
sahf
gs
xor
cmp
jb
jbe
test
xchg
xchg
arpl
ds
mov
cld
cmp
stc
mov
xchg
sti
test
into
punpckhdq
inc
lahf
cmp
cmp
mov
aam
jmp
pop
outs
cmp
push
add
cmp
(bad)
lods
xor
pop
fmul
cmc
hlt
jle
jmp
cmp
jno
test
inc
sub
pop
pop
pop
iret
(bad)
div
mov
scas
(bad)
mov
push
out
sub
jmp
add
adc
cwde
out
cmc
out
dec
add
into
jo
mov
and
inc
sbb
pop
inc
xchg
(bad)
dec
in
push
loopne
sub
je
ss
adc
pop
add
movs
mov
sub
jae
pusha
(bad)
adc
sbb
loopne
ds
repz
and
aas
dec
cmc
xor
push
cmp
lock
mov
mov
jge
test
pop
ret
inc
sar
loopne
out
pop
stos
xor
fs
movs
sar
xor
out
pop
mov
movs
adc
fnsave
lahf
dec
mov
mov
ret
in
xor
ss
sahf
push
push
adc
es
inc
loopne
sbb
sar
or
ror
fnstenv
dec
pop
jp
ret
mov
adc
jnp
stc
std
mov
and
lods
je
pop
xchg
hlt
mov
sbb
ret
sub
cld
ror
int3
pusha
loopne
icebp
adc
add
adc
mov
mov
lea
(bad)
call
add
xchg
push
imul
xor
dec
enter
cmps
or
outs
inc
adc
mov
ins
loope
into
cli
(bad)
rol
mov
push
addr16
mov
lods
pop
sbb
or
shl
push
ret
or
scas
iret
cmp
inc
jb
push
rcr
adc
repnz
cmp
inc
sub
retf
retf
and
gs
sbb
and
inc
cmps
add
(bad)
fsubr
sbb
adc
arpl
cmp
mov
jle
sbb
out
add
stos
call
jge
imul
push
jmp
cld
xlat
dec
xor
clc
movq
loop
cdq
repz
ss
pop
xchg
and
mov
fwait
outs
and
mov
sub
inc
push
xor
lock
es
mov
pop
push
dec
cmp
stos
or
xor
ja
test
xchg
das
jp
xchg
xchg
les
data16
imul
dec
in
fiadd
data16
ds
in
sub
call
jne
out
ins
push
cmp
(bad)
mov
mov
cwde
fxch
div
dec
cmp
mov
scas
mov
test
fild
sub
xchg
jmp
push
add
adc
add
dec
jo
add
xchg
icebp
ficomp
push
sub
jmp
pop
dec
sahf
add
add
pop
adc
aam
retf
xchg
(bad)
mov
mov
pop
shl
test
add
mov
push
adc
adc
mov
movs
cmp
xchg
daa
fild
imul
and
movs
mov
cmp
sbb
adc
mov
outs
jmp
das
inc
imul
arpl
or
pop
mov
mul
jne
ret
mov
and
sbb
movs
mov
imul
pop
sbb
fist
sub
repnz
cdq
lahf
xor
adc
dec
inc
jge
cmc
cli
jg
jp
das
call
out
mov
pop
(bad)
out
bound
cmc
loope
jae
sub
mov
mov
mov
mov
loope
add
(bad)
add
cmp
rol
jbe
jbe
imul
frstor
dec
sub
push
imul
imul
add
scas
and
gs
cmps
xor
loop
fldln2
adc
stos
cmp
cmps
mov
cmp
xor
jnp
movs
inc
xor
cmp
rol
sbb
sbb
lock
or
aas
loope
xor
inc
dec
dec
sbb
bound
jns
cmp
pop
push
shl
jmp
icebp
repnz
dec
sub
xchg
pushf
jg
test
ss
dec
push
dec
mov
jno
dec
mov
adc
dec
mov
adc
call
sbb
push
mov
fist
xchg
out
(bad)
repz
mov
mov
add
xchg
mov
cmc
ins
jl
ss
push
rcr
icebp
loope
gs
sub
push
mov
push
cwde
or
pop
fisubr
(bad)
outs
sub
cmp
add
stos
push
std
add
push
jecxz
retf
gs
idiv
shl
cmc
jns
or
pop
or
xor
mov
inc
aam
mov
dec
dec
xchg
mov
fidiv
call
and
xor
mov
sbb
cmps
jns
and
lea
mov
sar
mov
mov
mov
and
push
sbb
jge
xor
inc
hlt
test
push
fld
fistp
iret
cli
lock
sbb
xlat
ret
and
push
xchg
and
and
jbe
or
sub
mov
rol
jp
test
push
mov
mov
xor
xchg
pushf
sti
pop
hlt
inc
(bad)
inc
and
cmp
aas
sbb
scas
out
retf
sub
call
add
pop
pop
stc
sbb
fimul
stos
cmp
xchg
outs
out
xchg
stos
jno
and
push
cs
js
shl
jmp
push
gs
inc
movs
mov
sub
inc
dec
sub
mov
aam
ffreep
in
jp
cmp
in
inc
push
jge
shl
sbb
rcr
jmp
call
mov
arpl
aad
aaa
aas
test
cmp
hlt
xor
popa
inc
scas
scas
pop
dec
cli
fcomp
add
(bad)
mov
(bad)
fst
in
ds
pop
(bad)
into
fs
ret
mov
js
(bad)
call
loope
dec
pop
jecxz
lods
fnstsw
xchg
sbb
jb
mov
mov
int3
daa
xchg
xor
dec
outs
fdiv
lods
mov
sahf
icebp
adc
aas
mov
mov
xor
iret
rcr
fistp
(bad)
xor
push
std
lds
int3
adc
fs
stos
xchg
ficomp
xor
push
(bad)
push
push
mov
pop
mov
rol
mov
add
out
and
xor
int3
ficom
and
ins
lock
jnp
inc
mov
dec
xchg
repnz
loope
xor
retf
sbb
jbe
or
and
leave
and
inc
mov
xor
inc
test
sbb
(bad)
xchg
js
mov
add
(bad)
addr16
jmp
or
dec
les
jmp
dec
pop
call
jmp
cli
(bad)
stc
out
xlat
dec
xchg
lea
cmp
cmp
and
add
(bad)
(bad)
dec
scas
cmp
add
pusha
dec
sub
in
add
inc
movs
xchg
pusha
enter
fnstsw
mov
addr16
rep
div
retf
rcr
out
loop
sbb
sbb
mov
jle
xchg
xchg
ret
inc
xor
std
and
not
jp
jmp
or
inc
sbb
cmp
es
sbb
clc
jnp
adc
ror
nop
jno
retw
add
cmp
cmc
movs
aad
xchg
sbb
ins
ret
bound
mov
fiadd
aaa
inc
or
push
int
aad
inc
inc
jne
outs
sbb
movs
xor
pop
lods
rcr
pop
cmp
lahf
sub
ret
mov
adc
test
outs
sbb
pop
fcom
pop
mov
and
les
xlat
xchg
and
out
fiadd
fisttp
xor
sbb
retf
push
dec
push
retf
(bad)
cmp
mov
mov
jae
stos
in
fwait
pop
sti
xor
jmp
add
sub
not
or
ins
pop
std
inc
push
pop
outs
stos
push
xchg
pop
dec
pop
repz
mov
mov
ret
push
mov
jl
and
cmp
or
cmps
xor
push
popf
fsub
lea
xchg
push
add
leave
mov
or
lahf
jne
es
xlat
add
addr16
jne
inc
imul
ret
mov
mov
lods
adc
inc
das
jae
push
push
out
clc
repnz
into
in
imul
ja
cdq
arpl
mov
repz
jle
lea
dec
jbe
stos
movs
sti
cmp
push
jge
inc
sbb
stos
sti
stc
shl
lods
ja
pop
icebp
cmp
sub
in
jns
xchg
popf
mov
rcr
xchg
jp
fs
dec
mov
jae
cs
out
shl
cmps
aam
hlt
out
add
(bad)
pop
mov
ss
in
popa
add
shr
outs
movs
and
bound
iret
xlat
cmps
pop
(bad)
push
dec
shr
pusha
xchg
fdivr
inc
jae
ret
xor
and
adc
xchg
fcomip
outs
sar
retf
sahf
cdq
in
xor
add
sub
mul
jp
and
or
pop
int3
test
jle
jp
push
mov
cmp
xor
mov
ret
ins
pop
push
inc
cmp
sub
out
div
pop
scas
sbb
pop
pop
sub
stos
sbb
fstp
push
scas
arpl
and
mov
mov
mov
mov
in
iret
loope
sub
add
mov
add
or
sub
(bad)
iret
je
pop
dec
pop
xchg
xchg
call
dec
loopne
popf
mov
in
mov
and
iret
cmc
(bad)
fisub
push
xor
pop
adc
les
cmc
nop
xor
fst
adc
lock
inc
sub
daa
loope
dec
cmp
cmp
jbe
xchg
js
popa
adc
out
pop
adc
pushf
add
jns
fld
and
out
dec
xor
test
fcomp
repnz
stos
cmc
push
out
mov
sbb
push
ins
mov
add
popa
and
push
call
or
jbe
in
mov
pop
sub
stos
ins
inc
stos
mov
sti
cld
shr
arpl
(bad)
push
pop
ret
lods
in
mov
fadd
mov
lock
inc
dec
inc
fidivr
leave
(bad)
out
pop
pop
les
rol
jne
sub
add
stos
push
nop
(bad)
lods
std
push
aam
mul
hlt
(bad)
jl
dec
mov
cmps
arpl
sbb
imul
(bad)
lds
jmp
push
cmp
add
xor
fisttp
push
xor
outs
mov
(bad)
in
mov
cmc
loope
sar
or
mov
ins
in
lock
sbb
push
and
retf
je
jo
jo
loopne
cmp
mov
pop
scas
jb
data16
adc
add
(bad)
jo
icebp
mov
sbb
pusha
pop
lods
pop
pop
outs
dec
adc
fild
and
rcl
pop
and
and
fistp
jg
hlt
pop
mov
jge
bound
stc
adc
fwait
add
inc
mov
mov
adc
mov
push
jp
test
call
add
int
inc
push
repnz
jo
cdq
ret
dec
mov
aas
mov
int
retf
xchg
hlt
pop
imul
cwde
call
and
imul
xchg
call
or
cmp
jne
mov
mov
lds
inc
fld
sub
gs
inc
dec
or
cmp
mov
xor
rol
pop
and
push
adc
idiv
dec
dec
retf
fbld
and
pop
iret
dec
add
mov
push
call
cmp
add
pushf
mov
ss
int3
cmp
jne
cmp
mov
xchg
ror
mov
xchg
add
in
sbb
mov
cwde
lea
fstp
xchg
fcomp
cmps
ret
ja
pop
add
fld
(bad)
sub
push
adc
mov
inc
mov
xchg
cmc
xor
enter
mov
outs
push
adc
pop
stos
imul
enter
inc
push
push
xor
pop
adc
mov
xchg
sub
call
mov
mov
in
adc
popf
pop
cmps
add
rcr
pop
bswap
loop
mov
jge
sbb
scas
mov
xchg
cmps
sub
cmps
xchg
pop
into
sub
pop
sub
scas
(bad)
push
loopne
mov
jne
sub
push
nop
call
popa
fidivr
fdivr
sbb
push
(bad)
(bad)
dec
adc
repz
push
pop
xchg
fistp
cmc
rcl
dec
adc
push
add
or
inc
jmp
add
mov
xchg
movs
pusha
adc
inc
es
jp
icebp
cmp
ins
ficomp
lahf
adc
popa
rcl
shl
push
mov
movs
mov
jg
mov
inc
scas
push
clc
push
ins
es
(bad)
dec
or
and
pop
or
inc
jecxz
or
fs
in
repnz
fs
push
aad
lahf
xor
pop
fbstp
dec
imul
dec
mov
out
jno
xchg
neg
fs
add
mov
aam
ja
or
js
out
add
mov
pop
ror
data16
fdivp
push
aad
xor
pop
pusha
cmps
cwde
xlat
inc
in
push
scas
xor
(bad)
out
or
jb
scas
iret
dec
or
ret
sbb
cld
call
int3
mov
scas
mov
mov
and
mov
push
sub
push
ret
std
push
or
pop
mov
push
mov
mov
pop
fnstcw
and
enter
icebp
in
or
dec
mov
scas
out
aaa
xchg
sub
xchg
push
sub
push
jle
mov
shl
xchg
mov
dec
jo
jmp
inc
mov
adc
rol
jno
loope
popf
or
(bad)
aas
mov
xchg
and
retf
add
aaa
aam
in
fisttp
ins
mov
les
clc
xchg
sbb
and
scas
popf
outs
retf
inc
add
mov
leave
mul
cld
movs
int
aaa
pop
in
add
adc
xor
mov
cmc
sub
cmp
lods
stos
imul
sub
aad
(bad)
jo
sbb
pop
xchg
mov
mov
(bad)
aaa
icebp
fmul
sub
push
pop
jbe
into
mov
mov
scas
in
jmp
bound
inc
sub
mov
das
mov
and
jns
shr
and
mov
inc
xchg
xchg
dec
xor
jns
out
stos
gs
push
push
mov
test
scas
push
movs
inc
lods
add
std
arpl
jns
mov
xor
jmp
xchg
je
inc
dec
pusha
adc
iret
ss
cmp
adc
mul
push
enter
scas
mov
ret
icebp
ins
xchg
push
sub
test
sub
imul
pop
or
(bad)
aas
jnp
clc
xchg
mov
mov
aad
and
in
jp
leave
popf
push
ds
rol
push
sbb
pushf
mov
rcr
mov
push
pop
and
inc
or
xchg
ficomp
test
push
jg
fmul
mov
fs
mov
push
into
loop
inc
imul
aam
lods
mov
and
shl
push
shl
xchg
ins
push
test
fstp
sbb
mov
or
add
pop
outs
push
sub
fadd
xor
jb
cmps
data16
pop
hlt
dec
adc
cmps
ret
sub
in
xchg
inc
mov
shr
inc
adc
(bad)
mov
xchg
lods
out
sub
mov
sub
mov
pop
in
out
scas
icebp
add
gs
mov
in
fld
jae
ss
jbe
push
cmp
aad
mov
push
int
lods
pop
pushf
sbb
mov
pop
and
adc
retf
out
mov
out
ds
and
ins
xchg
repnz
jmp
bound
mov
enter
pop
jle
scas
imul
jle
xlat
retf
sbb
and
mov
orps
mov
mov
js
add
mov
xchg
jp
mov
add
inc
clc
mov
gs
js
inc
mov
push
std
mov
dec
pop
stos
fmulp
dec
clc
pop
push
xchg
jns
pop
mov
loopne
add
and
ds
cmp
fbstp
pop
retf
xchg
add
sub
adc
sar
test
scas
(bad)
pop
cdq
add
mov
movs
jp
retf
dec
cmp
xchg
dec
xor
ins
adc
pop
mov
cld
mov
icebp
test
pop
rcr
in
jb
int
imul
repz
int
in
dec
lea
jo
cmp
int3
push
retf
push
xor
mov
push
mov
int3
and
clc
sub
sbb
push
xor
cmps
aaa
std
xchg
cmp
adc
xor
xor
icebp
mov
mov
mov
test
jge
mov
dec
sbb
or
out
rcr
and
xor
sbb
test
jmp
daa
push
jl
cmp
fistp
fwait
out
hlt
aaa
jne
jno
test
sub
in
in
cli
(bad)
cmc
cdq
fld
xchg
push
add
loop
call
sbb
fs
stc
add
xchg
loopne
jge
xor
mov
dec
dec
add
fstp
cmc
sar
mov
loope
and
sub
sbb
test
pop
dec
push
aad
xor
mov
or
mov
fisub
(bad)
pop
inc
fsub
sbb
ds
stos
cmp
clc
les
sbb
push
fisubr
ds
shl
push
inc
(bad)
push
mov
pop
mov
movs
dec
or
call
cmc
pop
adc
or
push
push
int3
es
jne
lods
fsub
adc
(bad)
cmp
xchg
inc
ret
int
call
sti
jb
loope
push
jbe
mov
mov
and
in
scas
pop
mov
add
pop
popa
sbb
jecxz
cmp
mov
mov
dec
xor
mov
mov
sbb
mov
inc
ins
icebp
adc
mov
out
pop
xchg
xor
xchg
jl
or
in
shr
pop
adc
xchg
xchg
int3
or
sti
and
daa
clc
jbe
inc
sbb
repz
rcl
sub
sti
xchg
sti
in
cmc
out
cmps
jmp
retf
in
add
lods
and
cwde
or
adc
mov
addr16
xchg
jmp
mov
cmc
sbb
xor
dec
fldenv
cmp
dec
ror
and
fs
pop
jns
adc
cmps
push
xor
mov
enter
idiv
sar
lahf
mov
inc
das
fnstsw
mov
mov
sahf
loope
enter
cmc
push
push
les
data16
into
ds
dec
gs
mov
iret
call
mov
aaa
sub
out
xor
push
fadd
lds
push
lahf
ins
adc
jns
push
or
(bad)
test
add
jmp
inc
out
jl
out
sbb
xchg
jb
cmp
shl
addr16
inc
nop
inc
lods
rcl
inc
or
mov
pop
scas
adc
faddp
and
adc
xchg
xor
cmc
xchg
in
into
or
inc
stc
and
lea
ins
sub
push
shr
jo
pop
js
(bad)
repnz
fcomp
out
dec
loopne
push
fadd
enter
push
das
mov
adc
cmp
push
icebp
jp
daa
in
out
or
call
or
or
lea
and
push
push
mov
stos
push
mov
fld
out
cmp
or
cmp
sub
mov
push
add
dec
xlat
test
jg
int
ret
cmp
push
mov
(bad)
dec
loop
mov
imul
out
inc
ss
(bad)
mov
das
add
outs
ds
mov
or
and
cdq
(bad)
rcl
test
loopne
pop
hlt
js
ja
ins
push
int
pop
xor
loop
inc
mov
test
mov
cmc
jle
mov
sbb
stos
pop
enter
mov
sbb
call
pop
push
mov
push
sub
and
push
cmp
lods
test
jb
dec
fcom
or
and
mov
call
out
sbb
int3
outs
inc
retf
xor
sti
pop
pushf
cmp
mov
add
sbb
cwde
enter
xchg
int3
out
movs
or
icebp
mov
prefetchw
or
lods
push
or
xor
call
or
xchg
xchg
aad
lock
sub
sbb
ror
stos
adc
cmp
call
jmp
adc
cmp
mov
loope
daa
mov
jnp
inc
(bad)
cmp
jecxz
sti
inc
and
mov
int
enter
test
mov
xchg
int3
pop
test
std
pop
dec
outs
adc
ror
loopne
loopne
mov
xchg
jmp
jmp
mov
add
mov
rcl
pop
and
ins
daa
cmp
in
loope
call
xchg
dec
sbb
popa
leave
out
ins
gs
fidiv
jbe
or
or
push
and
das
mov
(bad)
test
cmp
dec
dec
push
xor
mov
nop
inc
fisub
xchg
jns
fcomp
adc
push
and
xchg
jmp
jno
nop
je
jmp
sbb
retf
retf
enter
cmp
sub
test
loope
outs
test
dec
push
jbe
push
sbb
xor
sbb
repz
(bad)
ins
cdq
xchg
adc
cld
jge
mov
dec
cs
push
sub
outs
mov
jb
xchg
xor
lds
pop
sbb
call
(bad)
retf
(bad)
out
pop
mov
dec
xchg
adc
jmp
mov
mov
pop
sub
pushf
sti
(bad)
add
outs
fdivr
into
sub
and
jge
sub
pusha
imul
ins
cdq
jae
in
addr16
push
ins
and
sub
push
pop
xor
mov
push
(bad)
pusha
pop
pop
shr
pushf
jnp
pop
cmps
sub
xchg
sbb
mov
push
bound
mov
dec
fidivr
or
add
test
or
(bad)
aaa
xchg
jl
dec
imul
jmp
pop
out
mov
xor
xchg
cld
jecxz
ins
pop
arpl
xlat
loopne
rcl
or
xor
mov
mov
out
or
and
dec
adc
call
jb
xchg
(bad)
pop
mov
aaa
in
ja
and
ret
inc
ins
adc
cmc
inc
jge
xor
je
pop
arpl
out
inc
gs
pop
(bad)
bound
icebp
mov
xchg
inc
dec
pop
pop
push
and
sub
inc
scas
push
jb
out
cmp
sti
sub
xchg
pusha
fcmovne
sbb
inc
mov
test
pusha
stos
fsubp
movs
jmp
inc
dec
sub
and
cmc
sahf
adc
add
sbb
adc
ficom
mov
jbe
movs
sub
mov
aad
jo
loope
(bad)
jae
jne
arpl
mov
mov
xchg
scas
push
popf
cmp
iret
enter
imul
ja
imul
push
jae
sub
sub
jns
sbb
fmul
not
addr16
repnz
enter
push
dec
adc
sub
cmc
cmp
mov
push
cmp
mov
fucomip
xchg
add
sub
push
cwde
and
cmc
cld
cmc
jae
mov
gs
aas
jne
pushf
out
scas
retf
out
jno
imul
sub
jmp
mul
icebp
iret
rcr
lahf
jecxz
ins
inc
ret
es
fmul
loop
retf
xlat
inc
adc
add
enter
test
sub
je
jae
lock
xchg
loop
pop
mov
cld
in
mov
xchg
imul
inc
mov
inc
fsubr
in
mov
fcomip
inc
xor
cmc
pop
and
mov
repnz
cmp
loopne
sbb
inc
and
xchg
mov
outs
jns
sahf
mov
in
lahf
push
pop
in
movs
sbb
push
in
ja
out
inc
lods
dec
rol
jg
mov
in
mov
in
cmp
pushw
push
pushf
or
movs
aaa
adc
cs
movsx
push
sub
xor
sar
sub
cdq
dec
mov
cmc
fwait
pushf
lock
out
mov
cmp
sbb
jae
movs
(bad)
pop
mov
mov
cmp
push
stc
rol
sbb
sar
mov
adc
sbb
mov
cs
or
dec
scas
xor
mov
jmp
aas
mov
scas
cwde
mov
sbb
mov
fistp
mov
gs
fs
dec
(bad)
leave
mov
imul
push
call
icebp
cli
sub
nop
inc
pusha
push
pop
retf
add
mov
ins
ss
or
and
cwde
call
cs
icebp
pop
cmp
or
adc
or
or
loop
push
aas
xchg
out
inc
pop
loop
inc
mov
outs
int
fist
test
and
jg
cli
sub
xor
daa
push
dec
push
mov
dec
retf
idiv
ret
es
movs
push
mov
fld
jmp
scas
sbb
sbb
sub
jae
mov
adc
sub
add
add
js
int3
rcl
loope
mov
pop
cmps
cli
iret
dec
jge
push
add
or
stc
pop
xlat
rol
call
mov
sub
fld
cs
nop
test
pusha
mov
inc
fsub
and
mov
push
daa
or
pop
scas
(bad)
push
int
sub
push
dec
sub
in
sbb
and
push
jae
push
out
pop
sbb
retf
not
dec
dec
(bad)
stc
fld
pop
inc
add
cmp
mov
dec
ds
sbb
rcl
cmp
inc
imul
cld
sbb
cmp
ret
dec
sbb
movs
pop
jae
sbb
test
les
ds
call
cmps
movs
in
movs
cli
fisub
xlat
nop
jae
xor
test
xor
add
push
xchg
adc
mov
imul
or
test
dec
out
or
mov
mov
aaa
icebp
or
cli
neg
adc
pop
bound
test
or
shl
inc
xor
sti
xlat
jns
sti
cmp
and
rol
enter
mov
mov
inc
dec
out
jns
lock
inc
mov
mov
jbe
and
xchg
iret
mov
icebp
stos
lods
xchg
xchg
call
call
jp
xor
mov
std
(bad)
call
mov
push
xchg
test
test
xor
aas
jl
aad
and
sti
add
mov
les
sub
lods
fdiv
jge
mov
nop
cli
out
xchg
cmc
xchg
test
sub
in
leave
mov
jae
ds
cmps
dec
ret
jb
mov
arpl
or
dec
stos
dec
in
out
sbb
push
pop
and
call
mov
sar
inc
in
icebp
jle
jge
mov
jnp
out
iret
repz
mov
jbe
bound
sub
int3
lods
call
mov
adc
mov
push
jo
popf
cmps
xchg
popf
adc
and
push
cld
cmp
in
push
mov
jb
add
(bad)
pop
pop
push
lock
push
fwait
mov
nop
outs
add
test
movs
(bad)
lods
sbb
cwde
mov
movs
dec
outs
cmp
call
add
xchg
addr16
mov
adc
cld
rcr
add
in
cmp
mov
pop
pushf
fldenv
pop
pop
cmp
mov
out
jnp
mov
lahf
cmp
cmps
fucomip
aaa
push
in
(bad)
iret
sbb
cmp
sbb
jne
jmp
mov
push
sub
cdq
dec
xor
addr16
inc
aaa
imul
mov
ficomp
ins
dec
faddp
mov
jecxz
push
adc
sub
lea
lea
mov
sub
leave
push
pop
cmc
into
and
jmp
inc
sbb
push
les
pop
dec
xlat
inc
in
and
icebp
lds
push
retf
movs
lahf
loope
adc
sub
pop
inc
xor
(bad)
cli
data16
mov
mov
xlat
push
(bad)
fstp
sbb
repz
pop
test
inc
dec
fiadd
mov
xor
and
and
iret
push
pop
(bad)
out
cld
jne
adc
test
sbb
pop
or
add
loopne
push
push
push
jmp
loopne
hlt
cmc
shl
push
inc
mov
xchg
int3
test
pusha
jne
pop
push
pop
sbb
cmp
out
inc
fyl2x
inc
aam
adc
jle
popa
mov
scas
xor
mov
add
jmp
ds
enter
(bad)
sbb
div
mov
out
xchg
mov
xchg
lods
js
(bad)
dec
fs
call
and
(bad)
jp
xor
mov
pop
daa
jmp
xor
xor
(bad)
sbb
push
inc
add
cmps
jo
push
xor
and
retf
adc
xor
das
and
mov
dec
call
jle
dec
jg
add
hlt
fist
and
aas
adc
xor
sbb
scas
and
adc
into
and
lods
std
mov
xor
hlt
jle
or
or
je
imul
je
cdq
push
call
xchg
(bad)
xlat
pop
mov
inc
and
push
js
in
ja
retf
pop
mov
cmp
mov
mov
pop
push
mov
jno
dec
xchg
sub
inc
fld
loop
dec
(bad)
fisubr
cmp
div
dec
and
inc
and
retf
sbb
les
dec
xchg
aad
popf
into
adc
xor
cmc
mov
jbe
push
cmps
adc
mov
in
push
sbb
fmulp
or
inc
out
out
in
mov
sub
ja
mov
cmp
stc
addr16
jg
sub
retf
ja
lea
inc
inc
xor
hlt
or
fwait
mov
mov
loopne
ds
loope
xchg
adc
xchg
sbb
add
int3
push
pop
lock
add
fwait
xchg
dec
outs
add
jne
lds
or
out
jle
cmp
test
mov
dec
sti
pop
pusha
pop
push
mov
xchg
or
nop
loopne
fidiv
cld
addr16
sbb
cmp
sbb
xor
ror
sub
imul
jecxz
add
jmp
pop
jecxz
cdq
add
ins
es
cmp
lds
imul
fdivr
xlat
and
inc
out
mov
test
jbe
add
inc
adc
repz
and
div
loope
push
jle
cmps
clc
lods
call
push
pop
loopne
xor
adc
jb
ds
mov
cwde
and
or
retf
fwait
lock
cdq
dec
pop
aam
jle
inc
iret
mov
sahf
rcr
mov
mov
xor
mov
cmp
fdivr
xor
stos
dec
sub
sti
(bad)
nop
mov
inc
fucomi
sti
test
dec
mov
jge
mov
sub
push
jmp
push
outs
js
or
pop
pop
pop
xor
addr16
rcl
push
sbb
test
outs
nop
or
jae
jo
icebp
loop
mov
push
cld
(bad)
and
jle
imul
lods
and
lahf
in
scas
mov
xchg
mov
fcom
popf
mov
ret
push
lods
xchg
add
rcl
sbb
mov
retf
dec
adc
xor
inc
mov
and
scas
dec
mov
adc
fist
jmp
idiv
adc
in
js
test
iret
div
mov
lea
retf
pop
cdq
push
xor
in
jo
(bad)
nop
mov
dec
out
stos
jmp
aas
cmp
cli
mov
rcl
sub
cwde
call
out
jno
and
call
or
test
pusha
cmp
es
jecxz
mov
imul
aad
adc
cmc
dec
or
outs
imul
mov
mov
jbe
leave
popa
inc
fcom
enter
(bad)
and
adc
cmp
sbb
inc
fwait
stos
fcomp
dec
stc
inc
cld
jns
(bad)
jge
lods
(bad)
scas
or
fnstcw
add
and
daa
cli
call
js
je
adc
sbb
outs
test
or
lods
inc
(bad)
outs
pop
in
cli
dec
into
mov
xchg
int3
fistp
repz
aas
rcl
out
cld
cmp
out
push
inc
mov
lods
in
sbb
jl
push
(bad)
jg
adc
mov
pop
out
fwait
pop
jl
push
jp
loope
xor
dec
xchg
jecxz
push
monitorx
int3
cmp
fs
out
inc
ins
fbstp
fimul
mov
arpl
dec
js
lock
xlat
and
lea
mov
xchg
pop
cmp
mov
(bad)
out
add
in
leave
enter
dec
mov
pushf
cmps
dec
out
push
mov
sbb
adc
je
test
pop
push
add
mov
cmp
lahf
mov
jmp
or
cmc
leave
jecxz
mov
test
cdq
sub
cs
mov
aas
push
and
call
stc
(bad)
retf
ret
xchg
cmp
fldcw
ins
xor
pusha
lock
out
call
out
adc
add
daa
test
ror
cmps
dec
or
cmovbe
out
sar
stos
mov
stos
and
adc
in
pop
out
dec
out
pop
repz
loopne
push
in
jbe
popa
inc
(bad)
xor
add
jmp
and
xchg
mov
dec
push
adc
xor
into
ja
jo
push
and
cmp
cmp
add
cmovne
mov
pusha
retf
out
cmp
aam
sahf
popf
test
in
and
mov
pop
add
sbb
push
pop
ret
xchg
shl
xchg
rcr
mov
shr
test
xchg
rcr
inc
or
mov
mov
push
iret
add
cmc
popf
mov
aad
jns
loop
xchg
imul
imul
sar
nop
lea
or
loope
cmp
js
and
mov
push
pop
mov
jmp
imul
push
fwait
cdq
xchg
jno
movs
out
mov
sbb
push
les
xor
push
ficom
jmp
test
ja
in
cmp
pop
push
shl
sbb
cmp
push
pop
mov
aaa
add
hlt
out
adc
mov
mov
mov
lock
popf
shl
inc
cmp
mov
mov
retf
push
(bad)
mov
pop
cmp
and
adc
xchg
dec
push
in
or
mov
in
aam
or
sbb
outs
sbb
and
xchg
cmc
xchg
shr
fst
jp
and
les
push
and
jns
pop
(bad)
push
out
in
fadd
es
sub
call
in
dec
popf
cmp
loopne
fwait
adc
inc
stos
sahf
xchg
les
cmp
mov
pop
je
call
cmps
push
cmp
xchg
inc
pop
stc
test
test
inc
call
jmp
cwde
add
pushw
fbstp
mov
jge
adc
inc
push
mov
ins
adc
dec
dec
inc
sbb
repz
test
cmp
sbb
and
mov
sub
movs
dec
jge
test
pushf
sub
push
das
ja
pop
lods
fstp
adc
jae
loope
push
sub
(bad)
int
pushf
shr
xchg
xchg
mov
pop
mov
cld
xchg
loop
(bad)
std
xor
jmp
adc
sbb
movs
jns
call
mov
jecxz
daa
in
xchg
pop
push
stos
ja
jg
xor
call
scas
(bad)
je
or
pop
sbb
inc
xchg
fnstcw
sbb
aam
mov
cwde
sub
fidiv
fwait
lds
jp
fwait
jl
fs
pusha
xchg
push
xchg
xlat
movs
or
imul
mov
jb
pop
mov
pop
push
sbb
xchg
frstor
sbb
sub
mov
jno
cmp
dec
fwait
inc
sbb
xor
mov
xchg
jmp
fisubr
push
outs
retf
aaa
(bad)
(bad)
push
push
inc
test
push
sti
in
dec
out
dec
inc
mov
jp
push
hlt
hlt
mov
movs
pop
daa
push
int3
pop
movs
push
test
cdq
call
mov
(bad)
repz
or
cmps
push
dec
stos
rcl
xor
push
mov
xor
inc
out
pop
xlat
out
adc
iret
out
ret
inc
or
push
sbb
and
mov
test
mov
sahf
push
(bad)
mov
fld
leave
mov
jns
inc
pop
sub
mov
inc
mov
sub
stos
fist
push
dec
or
call
sbb
mov
push
dec
ret
(bad)
cmp
sbb
nop
dec
xor
into
js
rcl
xor
(bad)
mov
jl
mov
mov
mov
dec
mov
cs
pop
int3
xchg
int3
cmps
and
sub
sbb
dec
and
adc
pop
inc
bound
nop
scas
xchg
inc
inc
fs
push
test
push
fidiv
inc
push
jne
mul
fild
lea
xlat
mov
cmp
dec
stos
sbb
lock
ficomp
sbb
pop
mov
ins
inc
jae
pop
or
out
xor
push
sbb
fnstenv
int
jge
mov
arpl
mov
push
cld
dec
dec
fdivr
mov
xor
test
push
cld
loop
test
pop
sub
dec
(bad)
dec
inc
or
shl
xor
or
popf
dec
shr
sbb
mov
xor
aas
inc
test
xchg
(bad)
fstp
movs
lods
or
scas
push
test
cli
ds
daa
mov
aas
stc
push
or
out
call
sbb
or
adc
(bad)
sahf
(bad)
xchg
out
pop
mov
pop
(bad)
das
cwde
in
js
mov
in
shl
push
lods
jl
adc
ret
mov
stc
icebp
sti
test
and
int3
dec
or
daa
sbb
xor
out
retf
inc
or
gs
fnstsw
ret
mov
cmp
jecxz
cmps
add
xor
mov
retf
push
jb
jmp
cmps
test
outs
jmp
div
sub
xchg
push
hlt
(bad)
cmp
sub
push
popa
and
cmc
je
sbb
inc
or
rcr
push
shl
jp
in
cs
movs
fwait
lock
in
scas
rcl
cvtps2pi
(bad)
dec
adc
mov
inc
lds
xchg
jmp
push
ror
dec
cld
in
dec
push
cmp
fisubr
mov
hlt
cld
stos
addr16
in
adc
lods
pop
jg
fdiv
jp
ret
xchg
dec
nop
fdivr
xor
loopne
jae
mov
(bad)
mov
mov
outs
cmp
mov
cmp
call
xor
xlat
stc
push
pushf
or
and
ja
or
gs
in
cmc
ins
dec
adc
dec
jecxz
rol
je
adc
add
in
mov
mov
xor
mov
in
xchg
mov
inc
js
shr
sub
push
mov
cmps
add
imul
and
sub
pop
jmp
loope
mov
push
jl
or
fmul
push
mov
scas
and
cld
les
leave
mov
outs
sar
(bad)
jo
jns
pop
lahf
jb
jle
jns
mov
adc
iret
add
pop
xor
xchg
fld
inc
lods
xchg
cwde
jb
and
std
pop
adc
fstp
and
out
lods
test
mov
mov
icebp
sbb
mov
mov
xor
and
or
push
les
mov
aas
xchg
add
lods
cmp
test
jnp
scas
in
inc
mov
popa
test
xor
mov
jo
shl
cmp
imul
call
pusha
pushf
outs
leave
xchg
aaa
and
inc
(bad)
fsub
inc
call
dec
cli
push
scas
add
pushf
dec
xchg
jo
(bad)
out
and
mov
fmul
stos
je
fmul
ins
popa
mov
lock
mov
sbb
cmps
js
rol
mov
(bad)
dec
add
xchg
loope
jne
add
ins
ret
fwait
push
ins
jnp
push
sub
pop
add
cmp
std
adc
jae
jns
cmp
hlt
sti
jae
enter
mov
jno
dec
xchg
ds
movs
pop
mov
pop
mov
pop
adc
cmp
scas
dec
out
sahf
popa
cmp
int3
xchg
xchg
and
mov
in
idiv
or
enter
cmps
dec
lea
add
and
inc
or
shl
xchg
mov
int3
pop
or
(bad)
retf
lahf
adc
cmps
rcl
pop
jmp
es
scas
loop
mov
adc
cmps
cmp
dec
bound
xchg
cmp
add
inc
test
sub
pop
aas
or
sub
out
das
popf
fs
retf
jbe
in
sbb
lods
xor
lds
mov
rcr
xchg
xor
and
dec
test
inc
es
fs
int
neg
xor
je
xchg
xor
cmc
cmp
cmp
cs
mov
push
call
or
ret
add
lahf
std
mov
pushf
sub
shl
pop
in
loopne
into
add
dec
clc
sbb
dec
sbb
sub
scas
fwait
int3
sbb
sbb
(bad)
lock
mov
vpmaxsw
test
jmp
jae
dec
ins
and
jns
sub
pop
adc
cmc
lea
add
jle
mov
mov
shr
or
push
jmp
mov
cmp
inc
mov
call
mov
call
dec
mov
sbb
mov
sbb
pop
scas
or
mov
in
ficomp
cmp
pusha
ins
loope
push
shr
test
fwait
es
nop
jle
pop
(bad)
cwde
repnz
jb
and
cmp
mov
xlat
jmp
je
(bad)
fist
push
sbb
pop
dec
jb
cmp
pop
scas
out
adc
push
jb
int
mov
pop
lds
movs
add
add
sub
and
mov
ficomp
adc
pop
ja
jle
mov
into
adc
mov
mov
mov
aaa
mov
and
add
nop
jecxz
xor
fild
cmp
and
sub
mov
repnz
jg
sbb
push
add
repz
adc
dec
test
mov
in
dec
mov
ficom
clc
shr
sti
cwde
pop
mov
sar
icebp
xor
ss
int
jecxz
xchg
xor
repz
fs
or
dec
jno
add
jbe
lods
out
enter
push
loope
and
jnp
mov
push
or
xor
hlt
mov
mov
jg
test
movs
into
and
pop
jns
fs
inc
sub
inc
mov
mov
test
inc
xor
imul
retf
cmp
adc
je
js
sbb
adc
stos
out
dec
dec
or
pop
dec
inc
je
in
xor
jmp
imul
pop
dec
push
pop
test
rol
or
or
xor
lods
outs
fidiv
mov
jo
int
inc
xchg
xor
mov
shl
inc
inc
ret
mov
int3
cmp
cmc
loopne
sbb
out
test
mov
mov
pop
loop
cmp
lods
sub
fs
test
movs
dec
push
jb
lea
out
jecxz
and
sub
mov
add
push
adc
push
pop
sbb
jns
in
fs
je
mov
sahf
(bad)
gs
call
jne
aaa
mov
nop
cmp
lds
inc
push
bound
pushf
ins
inc
fdiv
stos
(bad)
xchg
lock
and
lods
aad
out
loop
aam
shl
xchg
lods
arpl
jo
xchg
rcl
add
out
sbb
cdq
mov
adc
cmp
in
in
rol
aas
ds
pop
pushf
bound
or
jo
pop
and
leave
pusha
imul
test
adc
aaa
les
push
ja
aam
mov
mov
push
mov
je
and
mov
hlt
push
xlat
aas
out
mov
ins
mov
push
jo
pop
retf
fst
iret
ret
std
(bad)
(bad)
into
aas
add
call
mov
in
cs
fcomp
(bad)
jmp
push
adc
and
sbb
out
out
(bad)
and
fwait
mov
dec
(bad)
sbb
aas
xchg
out
shl
mov
xor
cli
adc
icebp
sub
adc
cmp
sti
aaa
popa
clc
cmps
and
fadd
mov
out
jmp
into
add
xchg
fcmovbe
fsubr
push
fcom
loope
adc
mov
imul
dec
rol
inc
test
jae
mov
cmp
cld
aas
jbe
cmp
ds
sbb
outs
add
mov
inc
and
lahf
mov
rol
adc
fwait
push
xor
add
dec
pop
cwde
add
ret
push
inc
mov
pop
inc
sub
mov
jnp
aad
loope
jecxz
add
lods
(bad)
and
pop
mov
add
or
cmc
fcomp
and
xor
aam
hlt
or
and
adc
jecxz
movs
pop
mov
mov
clc
enter
inc
sub
xor
les
pop
ret
enter
cdq
loope
fs
test
jmp
lods
in
lods
aad
cmp
ins
int3
outs
xchg
xchg
or
mov
arpl
test
push
jmp
(bad)
and
push
sti
rcl
and
mov
xor
cdq
adc
xor
das
pop
rcr
arpl
xor
jns
mov
mov
pop
imul
je
outs
clc
pushf
mov
xchg
push
cmp
xor
push
fmul
aas
add
add
into
or
dec
dec
sbb
retf
mov
jmp
adc
mov
outs
cmp
fmul
mov
fsubr
mov
mov
lea
(bad)
(bad)
cmp
add
adc
add
jns
dec
and
arpl
or
cmps
ret
pop
loopne
mov
pop
imul
lds
ret
jecxz
and
arpl
dec
pop
mov
mov
jge
mov
pop
sub
pop
jmp
test
pop
sub
scas
cmp
cmc
or
rcr
and
and
push
and
(bad)
shr
jmp
pop
adc
inc
xor
or
js
psadbw
mov
stos
ror
leave
int
(bad)
inc
mov
cmp
aam
fnstsw
fwait
movs
(bad)
push
push
sbb
mov
fadd
cmp
inc
pop
arpl
stos
mov
aas
jl
lock
push
xchg
icebp
xchg
pop
add
jmp
lock
lahf
sar
mov
jne
ret
sub
pop
movs
jge
jb
cdq
pop
scas
(bad)
ins
leave
pushf
jle
pushf
in
cmc
mov
jmp
(bad)
in
fucomp
(bad)
in
imul
call
fld
pop
ja
ss
xor
(bad)
pop
sahf
and
popf
adc
jns
adc
fist
push
test
pop
pop
jne
xlat
sub
add
xchg
mov
daa
adc
scas
sbb
sub
jl
(bad)
aaa
call
pop
jp
iret
xchg
sti
pop
sbb
sbb
fidivr
arpl
into
leave
in
jge
mov
mov
push
in
lods
ins
xchg
xchg
sahf
sbb
fs
cmp
lea
(bad)
jmp
pop
pop
(bad)
fild
xor
sub
xchg
sub
fisubr
and
repz
call
cs
mov
cmp
or
mov
mov
movs
jns
loope
cmp
rol
arpl
or
jecxz
fwait
cmp
test
jae
jg
adc
adc
nop
sub
mov
inc
xchg
pop
les
cmp
(bad)
(bad)
cmps
fstp
leave
enter
sbb
loopne
out
(bad)
leave
dec
fmulp
call
xlat
jb
sub
mov
test
leave
cmc
faddp
mov
mov
lea
add
push
stc
pop
ja
pop
mov
xor
inc
pop
jns
fwait
pop
sub
xchg
js
sub
loop
lods
sub
push
pop
cmps
js
ss
ret
(bad)
dec
jo
lods
clc
mov
mov
push
popa
xor
sbb
je
aad
arpl
mov
cmp
sub
inc
or
(bad)
lea
ins
xor
cmp
ret
dec
push
fcomp
repnz
add
or
ds
retf
adc
or
mov
jg
push
xor
push
out
jecxz
push
repz
call
sub
or
imul
or
xor
pop
test
add
enter
pop
ins
das
test
bound
in
repnz
inc
(bad)
mov
inc
add
sbb
push
jo
push
jae
mov
dec
dec
push
pop
add
jecxz
dec
(bad)
icebp
hlt
out
fisubr
add
mov
(bad)
mov
lods
jmp
stos
movs
int
jb
fmulp
jae
jns
xor
mov
aaa
outs
mov
(bad)
popa
es
adc
sbb
pop
lock
push
popa
dec
scas
inc
inc
cmp
push
adc
call
les
retf
shl
icebp
addr16
shl
fs
and
ds
(bad)
mov
mov
(bad)
es
add
fwait
popf
adc
stos
dec
pop
popf
ret
cmp
xor
mov
jbe
push
or
gs
loopne
lock
dec
mov
retf
pop
dec
dec
pop
push
out
or
sub
and
dec
push
xlat
xchg
div
pop
pusha
sbb
hlt
je
sbb
dec
adc
xchg
jl
cmp
dec
call
or
push
lds
push
cwde
jge
lock
mov
icebp
or
dec
jecxz
loop
pop
and
outs
hlt
lods
and
rcr
jp
out
rcr
xchg
inc
xchg
int
sbb
cld
sbb
sub
in
inc
xor
push
fs
mov
outs
dec
cld
cmp
or
add
cmps
and
inc
out
ss
push
xor
jno
dec
sub
cs
sub
pop
ins
int3
or
pop
sub
lock
mov
les
cmp
inc
pusha
mov
jne
or
adc
fisttp
sub
(bad)
aam
xor
and
xchg
adc
das
mov
sbb
jmp
jmp
call
jno
movs
nop
mov
mov
stos
test
push
jmp
sbb
retf
fcomp
jb
jmp
and
imul
rol
rcr
loop
mov
out
pop
inc
and
cs
jns
cs
call
mov
push
dec
cmc
jns
dec
jg
xchg
xchg
or
es
sbb
cwde
xchg
sbb
adc
xchg
aam
sub
push
cmps
out
lea
or
outs
dec
sub
std
dec
fcom
xchg
mov
push
xchg
cmp
xchg
dec
mov
dec
mov
(bad)
rcr
sub
push
sbb
stc
aam
ret
inc
and
mov
and
aad
iret
jmp
jne
and
fidiv
or
iret
sub
add
jne
jmp
mov
jbe
fsubr
cmc
mov
repnz
sub
test
cdq
xchg
sahf
call
imul
push
cmps
push
rcl
mov
jge
pop
fbstp
mov
mov
retf
(bad)
jecxz
dec
adc
test
jnp
into
lods
sti
into
pop
and
mov
push
fst
hlt
aaa
mov
lahf
out
cmovnp
inc
imul
xor
adc
pop
hlt
inc
adc
jl
xor
cmp
and
pushf
mov
jb
push
add
sti
into
xchg
test
adc
ins
sub
sub
adc
push
sbb
and
daa
sbb
rol
pop
fimul
dec
cld
add
push
cmp
push
icebp
xchg
xor
sub
outs
pop
xchg
(bad)
jno
add
outs
retf
push
jle
out
retf
fstp
add
cmps
ror
cmps
(bad)
in
sahf
pop
adc
pop
loopne
outs
popa
mov
push
and
push
and
(bad)
xchg
jge
adc
push
and
sti
mov
add
stos
mov
adc
and
and
into
arpl
push
in
repnz
push
sar
and
mov
fisub
adc
hlt
sar
mov
mov
push
and
and
push
lahf
test
jne
repnz
sbb
pop
bound
push
xor
leave
push
xchg
inc
cmp
stos
ss
xor
pop
scas
mov
adc
out
pop
xchg
jg
sub
push
add
sahf
mov
xor
ins
xchg
cmps
dec
inc
jbe
pop
fs
pop
inc
cmp
xor
je
or
daa
cmp
inc
mov
aaa
cmp
enter
pop
push
daa
retf
bswap
test
mov
inc
mov
in
(bad)
cmp
idiv
jecxz
inc
push
test
mov
cmps
loopne
shl
or
mov
imul
xor
pop
jnp
stos
push
out
imul
mov
shr
adc
cwde
pop
out
in
inc
dec
lahf
fsub
push
jmp
pop
push
xor
pop
jl
aam
les
mov
jbe
(bad)
fist
inc
hlt
mov
fadd
retf
dec
jae
das
outs
imul
cwde
call
(bad)
xchg
or
push
add
out
sub
cmc
pop
(bad)
push
icebp
retf
ds
cwde
sbb
std
ds
sar
sub
cmc
pop
cli
jle
push
sub
lods
bound
jnp
clc
pop
dec
push
sbb
mov
es
jmp
push
jecxz
int
and
xchg
sahf
movs
or
jmp
dec
jmp
add
or
xor
aas
jecxz
hlt
in
jge
fisttp
mov
fidivr
and
ds
shl
add
pop
(bad)
push
push
nop
push
hlt
mov
imul
test
in
leave
adc
xor
mov
repz
pop
pop
ins
lahf
mov
dec
bound
stos
push
sbb
jge
xor
add
das
fs
or
sbb
and
mov
imul
jmp
pushf
fiadd
xor
idiv
sub
movs
int3
or
lods
jmp
sbb
dec
xchg
call
mov
sbb
adc
fadd
add
movs
loop
inc
(bad)
imul
push
(bad)
icebp
jno
retf
adc
sbb
mov
dec
in
(bad)
scas
sub
push
out
pop
sti
dec
or
or
cmp
scas
pop
sub
aas
xor
pop
test
out
mov
sub
rcl
iret
mov
iret
sti
mov
mov
repz
cmp
xor
aaa
jge
imul
es
shl
mov
push
jnp
jbe
sbb
dec
lahf
push
inc
inc
pusha
fmul
lds
mov
mov
and
sbb
pop
adc
jmp
push
xchg
es
cdq
lods
add
dec
cmp
and
inc
or
jnp
lock
(bad)
outs
rcr
push
repnz
imul
mov
(bad)
hlt
bound
sar
pop
xchg
mov
iret
shr
mov
xchg
scas
mov
cwde
ins
test
cmp
xchg
jmp
mov
mov
mov
sub
test
cmp
xlat
pop
inc
sub
add
xchg
and
cmp
xchg
lods
mov
and
setle
mov
pop
xor
mov
movs
int3
hlt
jbe
and
in
outs
xchg
(bad)
pop
mov
dec
or
pop
mov
inc
cld
das
and
retf
push
inc
cmp
xlat
into
add
sub
leave
mov
cmp
mov
mov
fisttp
xor
(bad)
push
movs
ret
inc
mov
push
es
xor
sub
add
hlt
mov
out
jbe
push
mov
adc
xchg
mov
sar
loop
lods
pop
push
sbb
rcl
aaa
cdq
in
mov
mov
cmp
push
pop
cli
in
push
push
xchg
sub
test
ret
idiv
sub
cmps
pop
movd
fild
inc
rcr
mov
pop
cmp
adc
rcr
pop
mov
add
push
fistp
pop
dec
add
inc
pop
dec
pop
shl
mov
pop
aad
or
jge
xlat
pop
mov
mov
rol
pop
out
mov
mov
mov
pop
or
ret
(bad)
and
xor
movs
adc
and
inc
pop
loopne
ja
cmc
std
outs
push
pop
lahf
push
ss
sahf
sbb
int
xchg
inc
clc
xlat
dec
push
shr
jo
push
pop
xor
pop
arpl
xchg
xchg
call
mov
and
push
lods
xor
jns
xchg
push
inc
clc
push
sbb
loopne
mov
mov
mov
sub
cli
jl
inc
cmp
mov
frstor
out
popf
sbb
mov
pop
jno
frstor
js
lds
cdq
cmp
and
and
cli
pop
rol
mov
xchg
(bad)
iret
sbb
iret
cmps
sub
xor
int
das
repz
stos
mov
mov
pop
push
mov
push
fdivr
or
in
test
jg
cmp
push
addr16
inc
sub
lahf
jp
push
out
icebp
adc
sub
lahf
mov
shl
movs
daa
inc
cmp
sbb
or
repz
sbb
fisub
xchg
sar
mov
push
lds
cmp
sar
lds
retf
xchg
cmps
mov
mov
mov
add
leave
sub
retf
mov
push
sub
dec
fstp
and
lahf
inc
pop
arpl
or
pop
push
shl
popa
lock
xchg
inc
ja
xchg
aas
stos
xor
pop
sbb
dec
jg
cmp
xchg
dec
sbb
pop
lea
lock
jp
shl
add
xchg
test
push
out
mov
sbb
test
mov
mov
(bad)
sub
xor
leave
in
adc
dec
shl
(bad)
and
fs
add
cdq
mov
imul
sub
inc
adc
cmp
(bad)
clc
mov
loopne
rep
add
fcmovb
sub
out
clc
pop
or
or
lds
int
cs
xor
mov
outs
test
adc
cmp
sub
lahf
ins
int3
das
jbe
fyl2x
or
cwde
mov
xchg
enter
sub
leave
fstp
and
adc
or
inc
inc
pop
mov
popf
sbb
cmc
(bad)
cwde
add
mov
test
ins
jge
std
push
cs
inc
sub
push
jmp
add
dec
jb
sbb
mov
stc
jne
mov
popf
xor
mov
pop
bound
daa
xor
dec
data16
aas
mov
cmp
pop
into
mov
jo
sbb
(bad)
leave
adc
xor
mov
jne
xor
daa
add
shl
jg
(bad)
fadd
dec
xchg
in
cmc
mov
into
xchg
stc
push
add
push
xchg
dec
and
aas
push
test
push
leave
jbe
push
ja
cmp
mov
add
not
mov
mov
das
jb
nop
xor
xchg
sbb
movs
outs
sub
loop
jmp
jmp
xchg
mov
pop
pop
adc
jge
scas
mov
outs
in
push
sub
aaa
jns
(bad)
cmp
ds
or
(bad)
sub
push
cmps
mov
call
aad
(bad)
out
pop
jmp
inc
(bad)
sar
pop
(bad)
iret
lods
add
fidiv
stos
xor
jg
pop
inc
mov
ficomp
cmp
nop
stos
out
inc
inc
loopne
pop
jp
or
and
test
add
sbb
add
cld
in
cmp
add
mov
adc
js
jl
pop
arpl
adc
ins
xchg
dec
mov
ins
in
(bad)
mov
sbb
cs
iret
imul
test
stc
bound
mov
dec
cli
inc
mov
xchg
fadd
out
and
sub
je
(bad)
pop
fs
xchg
push
cmp
sbb
out
xor
sbb
push
das
xor
les
mov
and
sbb
stos
bnd
sbb
scas
xor
fimul
jns
(bad)
mov
retf
and
mov
adc
sub
in
jmp
lds
nop
test
push
sbb
lds
jle
adc
or
mov
mov
sbb
mov
(bad)
call
or
(bad)
sar
enter
out
fstp
imul
xchg
test
push
xchg
xor
retf
sar
mov
adc
xchg
cld
mov
dec
je
das
add
adc
mov
jno
cli
test
pop
shl
xor
jae
xchg
push
test
call
sbb
sub
and
outs
fs
pop
ret
mov
inc
mov
inc
mov
loop
cmc
sub
daa
pop
fst
das
mov
pop
fcom
mov
jmp
div
aas
fldenv
xor
jo
pop
dec
push
cmp
mov
sub
fmulp
cwde
fsub
mov
xchg
xchg
out
das
xchg
push
lock
push
(bad)
out
sbb
sbb
dec
sahf
fistp
mov
scas
xchg
enter
fistp
(bad)
xor
je
lods
je
aam
fistp
inc
and
mov
stc
dec
outs
inc
push
test
pop
or
cs
mov
imul
jge
fs
xor
fidivr
shl
movs
outs
ss
inc
inc
push
sub
fsub
mov
xlat
xchg
scas
mov
jae
sub
imul
inc
fnstsw
les
mov
shl
xor
jmp
xor
mov
xchg
je
lahf
loop
sub
aaa
in
nop
push
cmp
or
push
inc
or
aam
std
xchg
cmp
sar
adc
jmp
inc
sub
outs
mov
mov
pop
dec
sub
mov
mov
rcl
popa
xor
dec
mov
add
adc
xchg
in
jb
imul
sbb
out
movs
mov
xchg
mov
imul
pusha
mov
iret
fsub
inc
sbb
sub
mov
mov
shr
ins
out
les
inc
sub
jle
stos
push
adc
ins
mov
retf
or
sar
dec
data16
lea
retf
jno
inc
and
lods
jno
xchg
add
or
icebp
imul
neg
retf
into
xor
push
movs
sub
repz
lods
(bad)
fcom
pop
outs
mov
fwait
pop
jb
jns
jg
in
das
arpl
jnp
or
inc
iret
jp
push
fcom
(bad)
dec
add
xchg
jno
mov
aam
adc
cdq
cmp
and
xchg
sub
(bad)
clc
shl
fidivr
and
ror
jmp
out
pop
imul
push
test
mov
jg
pusha
and
test
ins
dec
mov
test
stos
lods
les
dec
sub
push
cmp
dec
inc
ds
dec
push
fmulp
jmp
je
movs
push
sub
pop
jmp
cdq
ss
ret
fcmovu
lods
push
sbb
push
mov
sahf
push
loope
and
retf
xchg
sbb
mov
pusha
movs
sbb
mov
jno
repnz
dec
call
jne
cmp
sbb
xchg
mov
loopne
fdivrp
jle
addr16
pushf
imul
pop
nop
bound
pusha
cmp
enter
jnp
movs
dec
push
dec
out
pusha
fldcw
lds
int3
mov
push
or
addr16
jle
cmps
aaa
push
dec
mov
dec
aad
push
push
fucomip
push
loope
fsubr
inc
push
movs
adc
jl
(bad)
int3
sub
mov
rol
lods
adc
movs
fmul
lock
jnp
lds
lods
fld
mov
push
setp
cmp
es
in
scas
and
pop
mov
pop
or
mov
out
retf
cdq
push
repnz
outs
adc
lock
sbb
loop
sbb
mov
pop
push
int3
cmp
cwde
jno
dec
popa
cdq
xchg
mov
nop
push
ret
imul
scas
aas
xor
mov
pop
push
pop
fs
out
cmp
push
sbb
xor
daa
xchg
ss
pop
jo
imul
ja
fimul
push
sahf
pusha
sahf
sbb
pusha
out
add
sbb
outs
add
mov
push
or
xor
inc
sub
cli
loopne
out
adc
xchg
data16
fsubr
cld
or
dec
sbb
push
or
cli
sub
stc
cmp
sbb
(bad)
ins
mov
adc
call
ror
xor
sbb
cmps
scas
mov
pop
cs
sub
(bad)
xchg
movs
dec
(bad)
icebp
dec
cmp
mov
add
dec
test
jnp
xchg
mov
rol
mov
inc
sbb
jae
fisub
cmp
push
in
repnz
dec
bnd
dec
stos
nop
sub
gs
les
mov
std
push
std
mov
daa
rol
mov
cmc
inc
and
inc
test
mov
lds
xor
sahf
out
loopne
dec
xor
xchg
(bad)
lahf
sahf
rol
and
test
xchg
lea
pop
jge
xor
imul
fsubr
mov
xor
aam
and
out
loop
sub
push
fcomp
or
jno
push
(bad)
cmps
int
pop
pop
repz
inc
aaa
push
mov
pushf
(bad)
out
push
xor
sbb
xor
jmp
cmp
jne
leave
stos
dec
dec
lods
sub
adc
imul
sbb
dec
lahf
mov
and
cld
call
pop
mov
cli
mov
(bad)
xchg
cmp
test
aas
ret
push
cmp
xchg
push
lahf
pop
loopne
and
sub
aam
xchg
jae
adc
gs
(bad)
add
sbb
je
mov
mov
xor
pop
cmp
shl
gs
sbb
rol
pop
push
rcl
in
and
xchg
push
stc
inc
mov
ja
sub
call
sbb
fadd
(bad)
imul
xchg
stos
jbe
pusha
or
dec
xor
mov
jb
fldenv
jns
cmp
(bad)
xlat
xchg
rcl
fadd
adc
cmp
ss
jp
ds
jns
shl
(bad)
cld
in
(bad)
je
dec
xchg
repnz
rcl
xchg
icebp
call
adc
test
popf
mov
cmp
xchg
xchg
xor
jo
and
or
aad
cmp
xchg
pop
or
imul
xor
mov
dec
test
ss
leave
vpackssdw
sbb
jg
pusha
les
adc
(bad)
hlt
lahf
inc
inc
or
xchg
push
sbb
addr16
push
pop
not
out
cmp
xchg
sbb
mov
dec
cmp
enter
icebp
out
mov
jae
sbb
inc
mov
int
dec
sub
int3
cmp
aas
mov
or
mov
and
cmp
adc
aad
pop
cmc
jnp
dec
das
adc
in
(bad)
popf
pusha
sbb
jmp
mov
cmp
jnp
ss
inc
add
enter
scas
(bad)
cwde
rol
out
aam
ja
(bad)
(bad)
(bad)
fbstp
pushf
cmp
dec
dec
sbb
rcr
xor
cmp
fstp
adc
or
shl
faddp
arpl
mov
aaa
(bad)
and
loopne
aam
sbb
nop
sbb
ss
pop
fs
into
dec
loopne
loope
dec
add
cmp
cdq
iret
enter
add
push
fsubrp
xchg
aam
mov
push
push
fcmovbe
add
adc
xchg
shl
inc
(bad)
pop
dec
mov
and
test
mov
scas
sahf
adc
mov
mov
mov
in
push
iret
dec
mov
shl
ret
pop
mov
test
cmp
add
pop
mov
lds
lds
sbb
jp
fs
nop
sbb
fiadd
push
mov
into
xor
retf
add
les
sub
adc
loope
pop
pop
cmp
and
dec
xor
jp
aam
jmp
ret
repz
imul
jne
pop
sub
jne
imul
or
dec
out
daa
les
push
sbb
lods
pop
lea
sub
js
test
arpl
imul
adc
bound
pop
test
xor
and
xlat
lds
push
push
mov
mov
cwde
push
or
xchg
xchg
mov
(bad)
jmp
nop
xchg
imul
xchg
mov
hlt
iret
or
add
inc
(bad)
jmp
out
push
xchg
std
inc
(bad)
pop
inc
scas
(bad)
cmp
sub
rol
and
pop
lock
in
mov
sar
and
sar
sbb
sbb
and
jne
(bad)
push
nop
jne
gs
mov
adc
fsub
shl
mov
pushf
mov
mov
inc
xor
adc
mov
mov
cmp
pop
stos
push
rol
call
inc
xchg
push
ins
js
std
pusha
neg
ror
sub
pushf
inc
out
sub
and
sub
lahf
fs
push
push
iret
xchg
add
call
inc
cmc
retf
add
in
or
mov
sbb
add
sub
lods
xor
xchg
adc
or
add
in
clc
mov
and
frstor
add
das
enter
xor
inc
lock
and
pop
outs
retf
cmp
lock
push
(bad)
in
mov
std
adc
mov
clc
ins
mov
bound
aad
mov
inc
mov
push
loopne
or
mov
inc
pop
in
fimul
ror
mov
test
sbb
leave
inc
and
mov
adc
jp
mov
push
out
jnp
stos
shl
mov
push
scas
fstp
mul
ror
jmp
adc
jge
xchg
(bad)
jmp
sbb
fwait
add
movs
inc
icebp
cvttps2pi
je
lahf
mov
gs
ds
inc
pushf
mov
cmp
cmps
cmp
stos
stos
inc
cmp
and
mov
les
cli
fistp
shl
dec
daa
setns
push
sbb
jbe
lock
push
ret
adc
pop
(bad)
mov
jmp
call
into
mov
cmp
shr
stos
lock
rcr
mov
dec
enter
jecxz
clc
les
xchg
pop
mov
jmp
in
imul
cmp
xor
jns
inc
pop
sbb
(bad)
ins
or
imul
add
inc
push
gs
scas
inc
into
push
cmp
dec
cdq
shl
mov
in
mov
mov
adc
ss
sub
jb
xchg
ss
fnstsw
push
and
push
pusha
xchg
cmp
lods
not
test
fst
rol
pop
aaa
loop
fist
jb
mov
cmp
popf
jmp
pop
mov
jnp
pop
sbb
mov
add
push
(bad)
push
add
jns
scas
int
or
and
test
ds
leave
jns
pop
push
sub
jae
neg
shl
js
cmp
push
pop
sub
inc
pop
inc
cmp
ja
sub
mov
pop
or
and
loopne
adc
data16
int3
sub
pop
fs
ins
popa
inc
ins
stc
sbb
outs
mov
pop
lahf
xchg
test
dec
je
mov
test
ja
mov
or
mov
nop
dec
adc
mov
lahf
in
and
inc
lods
add
js
int3
pop
sub
loop
loop
mov
arpl
(bad)
stos
test
xchg
cli
cmp
mov
adc
lods
sbb
add
sub
bound
inc
in
fidiv
mov
ins
mov
adc
(bad)
fptan
retf
mov
scas
mov
adc
xchg
stos
inc
jbe
mov
loop
cld
push
(bad)
xor
dec
jb
xchg
in
push
or
push
xor
xchg
pop
jge
sbb
and
inc
in
(bad)
xlat
pop
mov
(bad)
or
(bad)
add
ds
pop
retf
mov
mov
sub
addr16
push
sub
scas
inc
fisttp
call
mov
push
mov
cld
adc
jmp
(bad)
pop
test
mov
jno
clc
js
(bad)
shl
inc
das
adc
mov
sub
jnp
inc
xchg
outs
ror
(bad)
mov
mov
fcomp
ret
xor
sub
cld
cdq
jmp
pop
es
mov
mov
jbe
jmp
out
push
push
pop
inc
push
in
data16
ret
mov
std
bound
ds
or
popf
xchg
inc
cli
mov
lock
in
fldcw
xor
mov
cmps
push
rol
push
push
mov
adc
into
mov
mov
cmp
int3
mov
in
shr
shl
outs
cmp
mov
mov
in
fsub
(bad)
mov
jl
shl
push
lods
nop
retf
xchg
sub
and
stos
retf
js
pop
fld
out
mov
call
push
ret
mov
std
xor
or
pop
mov
jno
jp
push
mov
and
aaa
push
jnp
inc
pop
aam
mov
sub
sub
xchg
sub
jo
pusha
neg
jmp
fnstenv
aam
cli
scas
jb
mov
mov
sbb
mov
sbb
jecxz
mov
mov
rol
aam
scas
xchg
dec
fnstenv
dec
mov
rol
inc
mov
xchg
sub
addr16
mov
push
bound
push
mov
xlat
pop
cmp
dec
sahf
in
fmul
fisttp
rol
sub
dec
mov
hlt
push
push
or
xor
aaa
pop
xor
push
aad
or
dec
pushf
adc
nop
leave
outs
imul
retf
shr
js
mov
adc
add
movs
repz
add
test
or
sti
(bad)
repnz
mulps
fucomip
(bad)
xor
xor
xchg
adc
mov
adc
dec
sub
dec
fsincos
je
cmp
add
mov
push
aaa
jl
retf
ret
pop
push
scas
inc
jb
enter
neg
or
scas
pop
pcmpeqw
aad
dec
popf
xor
xor
dec
and
test
cmp
xor
push
ror
test
lea
add
xchg
sbb
cmp
ret
pop
lahf
lock
add
out
scas
jmp
mov
dec
test
(bad)
mov
ret
and
cdq
push
inc
leave
das
push
outs
rcl
popa
fldz
mul
and
lea
dec
(bad)
in
imul
mov
mov
cmp
push
jmp
sub
mov
inc
jmp
push
lods
std
scas
ja
in
test
movs
xor
sbb
jbe
cmps
sbb
fild
or
jno
cmc
cs
push
push
lods
sti
ins
cmps
cmps
mov
mov
pop
jmp
(bad)
mov
sub
repnz
xchg
(bad)
test
pop
ror
push
push
scas
adc
aad
retf
idiv
in
or
fdiv
cmp
popa
ins
xor
dec
mov
lds
xchg
dec
test
(bad)
cmps
push
inc
and
pop
jno
adc
daa
or
fnstenv
cdq
adc
lds
icebp
mov
repz
mov
push
mov
std
aam
dec
test
lock
inc
dec
add
cld
and
inc
dec
cmps
jbe
in
stos
push
push
jge
dec
repnz
icebp
mov
out
sar
ins
and
jo
jne
push
bnd
aaa
sub
pop
xchg
push
test
fild
jmp
and
inc
jns
lds
(bad)
rol
lock
data16
xchg
test
retf
aaa
push
add
les
(bad)
and
fs
cli
xor
outs
mov
mov
test
jl
ins
lock
push
cmp
sub
push
imul
cmp
ficomp
jmp
out
xor
cmps
or
sti
loopne
clc
popa
cli
hlt
push
ficomp
and
push
cmps
add
xchg
in
mov
scas
or
jnp
mov
fcom
shl
dec
retf
push
push
rcl
rol
mov
lods
xor
push
sub
call
lahf
dec
xor
pop
not
or
mov
xor
sub
jns
daa
into
out
pop
jb
gs
inc
or
or
cli
retf
push
lods
jns
cmc
in
push
loope
sub
fcom
dec
cmp
mov
pop
cmc
loope
int3
pop
cmp
mov
pop
fcom
pop
scas
aas
cmps
sub
jno
pop
sbb
mov
sub
stos
cmp
js
push
mov
xor
mov
mov
cmp
mov
stos
rol
adc
mov
jmp
std
jbe
in
sbb
add
adc
lock
cld
inc
ficomp
scas
es
mov
add
outs
sbb
cmp
or
aam
mov
mov
inc
dec
ds
pop
xchg
or
arpl
sbb
sub
std
inc
sbb
fucomi
sub
in
adc
(bad)
adc
add
sti
lods
or
rol
clc
fcom
and
ds
jp
in
push
xor
scas
call
(bad)
enter
and
pop
and
lods
xchg
pop
pop
call
add
std
hlt
enter
dec
jge
pop
js
dec
push
rol
(bad)
outs
xlat
cdq
or
call
pop
cmc
movs
cdq
pop
adc
mov
ret
movs
mov
sti
xor
enter
outs
bound
in
xchg
out
jg
and
sub
cmp
fild
popa
mov
int
rcr
das
pop
pop
int3
(bad)
outs
es
pop
mov
push
pop
adc
sbb
fwait
adc
mov
minps
mov
jmp
mov
rcr
and
js
push
or
cli
push
xor
mov
push
adc
(bad)
clc
pop
stc
sahf
xchg
inc
push
test
and
add
dec
stos
push
lods
(bad)
gs
xchg
or
xchg
inc
neg
nop
xchg
mov
adc
xchg
call
into
imul
adc
add
cmp
and
mov
xor
jecxz
cmp
icebp
xchg
add
das
ret
in
ins
sbb
push
seta
sbb
dec
pop
push
inc
addr16
ds
add
outs
lods
sub
shr
scas
mov
dec
fidiv
adc
mov
outs
mov
out
xchg
and
mov
pop
and
push
call
mov
pop
xchg
std
in
in
push
sub
mov
mov
push
mov
adc
sub
mov
aas
xor
stc
xchg
stc
sbb
out
push
adc
mov
mov
ss
mov
mov
sti
retf
fmul
int3
pop
sbb
jecxz
add
and
inc
or
pop
icebp
add
jg
mov
call
ss
adc
sub
retf
jl
test
add
sbb
sbb
sahf
push
add
lock
scas
add
(bad)
repnz
xchg
inc
sbb
add
mov
sahf
jl
xchg
popa
lahf
adc
in
cmp
mov
and
lea
mov
jmp
cmp
and
iret
mov
adc
push
sub
ja
mov
(bad)
stos
frstor
cmps
mov
add
cmp
mov
mov
dec
retf
inc
lods
push
adc
xor
fstp
cmc
or
sti
das
test
mov
push
jbe
retf
fs
std
adc
cmps
xchg
mov
lds
cmp
push
cmp
cmp
add
scas
retf
sbb
sahf
int3
fisttp
idiv
jne
adc
or
jnp
push
jb
pop
jnp
call
bound
arpl
sar
jmp
dec
fcomp
shr
dec
fisubr
jns
inc
push
push
js
stos
ds
xchg
iret
xor
(bad)
sti
scas
retf
fcom
adc
idiv
add
sti
(bad)
push
jo
cld
mov
adc
dec
fimul
pop
in
inc
xor
mov
mov
pop
or
aam
fisubr
popa
xor
inc
aam
push
jne
jno
push
cdq
mov
aam
push
into
in
retf
fs
arpl
test
push
add
mov
jge
dec
mov
sub
enter
mov
jmp
ins
nop
pop
ja
fmul
push
mov
fmul
add
jne
dec
pop
call
rcr
sub
cmp
gs
push
mov
test
loope
loopne
add
loope
mov
div
pop
lahf
hlt
cmp
cmps
ret
jbe
aas
lods
imul
sbb
aas
arpl
pop
jo
or
adc
or
aad
mov
pop
ja
les
inc
sar
leavew
push
js
sub
imul
push
mov
jge
pop
jl
pop
and
imul
sahf
int3
jle
ins
dec
and
repz
fldcw
out
add
adc
call
sbb
cld
in
add
xchg
dec
add
sbb
fcom
inc
cmp
test
sub
xor
lods
sbb
movs
push
pop
sub
ror
fistp
sbb
sbb
lods
xchg
(bad)
test
das
loopne
pop
xchg
retf
std
imul
aas
bound
bound
lds
(bad)
push
mov
mov
mov
push
sbb
aad
and
(bad)
fmulp
je
clc
mov
int
xor
pop
xor
and
or
sub
cmps
cmp
movs
and
mov
scas
sub
out
mov
fsub
repnz
xor
jns
jmp
ret
jmp
nop
mov
add
icebp
je
jnp
into
cmp
jmp
and
pop
es
popa
in
push
or
loopne
jle
stos
arpl
xor
mov
push
iret
pop
sub
aas
cdq
xchg
pop
dec
outs
pushf
outs
xchg
mov
aad
push
in
into
retf
(bad)
sqrtps
push
mov
mov
xor
mov
imul
inc
nop
or
lods
mov
stos
ins
jp
xchg
inc
(bad)
jbe
popf
jle
imul
dec
jnp
repnz
ds
repnz
push
xor
xchg
adc
jno
(bad)
cmp
sub
outs
mov
in
push
sbb
mov
sbb
data16
les
fcom
xor
xchg
mov
imul
(bad)
repnz
dec
mov
and
in
jge
fwait
mov
(bad)
push
xchg
sbb
and
push
test
xchg
lods
nop
out
ret
loop
push
add
bound
lock
or
or
js
retf
add
ja
dec
mov
ins
mov
nop
sti
mov
test
sbb
sahf
leave
push
ss
sbb
ins
push
add
sub
sub
push
cdq
jno
scas
or
or
dec
nop
pop
or
inc
sub
cmp
xchg
clc
ja
xor
(bad)
int3
sub
scas
or
popf
mov
jns
cmp
retf
xchg
cmc
sti
add
(bad)
fwait
pop
sbb
cld
jno
call
xor
add
mov
(bad)
stc
sbb
popf
mov
imul
and
jmp
stc
(bad)
in
adc
test
es
sbb
pop
movs
mov
ret
pop
jbe
push
mov
mov
lea
test
les
scas
loope
pop
push
bnd
ficomp
fmul
retf
stos
repnz
daa
inc
scas
outs
loope
ins
shr
or
aaa
push
sub
rcl
mov
sbb
cdq
les
movs
(bad)
outs
inc
push
aaa
lods
or
cmp
(bad)
xor
add
lahf
sub
mov
and
adc
cmp
mov
dec
adc
and
mov
and
cwde
push
and
cmp
ficomp
jno
jbe
push
inc
and
(bad)
movs
rol
aas
mov
xor
mov
sub
dec
xor
retf
fdiv
outs
push
js
iret
iret
addr16
fnstsw
enter
cmp
sahf
mov
jnp
jae
stos
or
daa
pop
mov
xchg
jae
repz
adc
sbb
jo
jno
pop
and
lds
and
rol
mov
test
add
push
cmp
outs
icebp
mov
mov
imul
mov
ror
cmp
jbe
jmp
in
and
jmp
jmp
outs
push
in
mov
and
mov
mov
sbb
enter
pop
popf
xchg
mov
lock
aaa
and
call
lds
and
pop
aas
xchg
std
jmp
mov
dec
nop
jmp
fcmovnu
fcmovnbe
dec
je
popf
sbb
sbb
and
lea
and
loopne
ins
and
mov
add
add
sub
sub
or
dec
into
xor
sbb
inc
int
cmp
cmp
iret
mov
xchg
mov
mov
pushf
mov
scas
aad
ins
mov
add
cwde
es
dec
mov
dec
pop
(bad)
and
mov
popf
mov
inc
pop
and
enter
sub
div
or
push
mov
aaa
dec
ja
push
cli
lods
cmp
sub
xor
loopne
into
or
sub
js
xor
mov
pop
or
in
dec
sbb
dec
lods
(bad)
arpl
inc
in
cmp
jo
or
rcl
std
mov
fsubr
push
jns
(bad)
or
inc
stos
pop
sbb
nop
xor
rcr
lods
movs
lea
fld
pop
push
das
loope
fdiv
gs
les
popf
popf
imul
cs
cmp
das
inc
and
lods
adc
cs
jg
pop
lods
sub
jnp
leave
dec
in
cmps
(bad)
jg
nop
fs
add
js
pusha
enter
xor
jns
lock
jge
enter
cld
lods
inc
mov
out
mov
mov
sub
je
je
popa
lods
sar
call
xor
cmp
(bad)
std
add
pop
out
dec
scas
mov
retf
inc
push
jae
xchg
pop
div
pop
mov
xor
dec
fnstcw
ja
cs
sub
add
jnp
mov
inc
stos
mov
(bad)
xor
cmps
push
ss
out
pop
clc
js
repnz
pop
imul
loop
sub
dec
jae
xchg
(bad)
adc
cmp
pop
push
outs
push
pop
(bad)
or
pop
inc
cmc
cmps
lods
shl
mul
push
add
rol
pop
mov
jmp
movs
or
stc
inc
mov
mov
xchg
cmp
sbb
test
ret
mov
js
jmp
loopne
lock
ds
das
cmp
add
popa
mov
cld
dec
test
cdq
push
scas
arpl
add
loope
xlat
push
rcr
(bad)
in
aad
cmc
arpl
imul
loopne
push
mov
adc
xchg
xor
dec
retf
mov
pop
jmp
mov
xor
sub
or
add
xchg
cld
adc
fld
or
jo
dec
push
daa
fidiv
les
retf
add
and
push
lods
jbe
sbb
push
lods
sbb
out
(bad)
fldenv
push
aas
push
pop
mov
pop
imul
out
loop
pop
fldcw
loop
sbb
jb
fldenv
repz
or
ret
sahf
and
mov
dec
fcomp
sahf
pop
aad
jno
pop
outs
mov
hlt
xadd
addr16
(bad)
stos
in
xchg
gs
xchg
dec
mov
test
call
cmp
cmps
leave
push
jbe
push
mov
dec
hlt
in
inc
imul
inc
dec
in
adc
cwde
in
sub
adc
push
dec
and
jecxz
out
fsub
popa
adc
pop
jl
ins
out
lods
jnp
jp
icebp
gs
in
cmp
jp
loop
mov
shl
cmp
inc
fcom
xchg
push
push
test
icebp
test
or
jmp
mov
jl
jo
in
and
mov
xor
loope
sbb
movzx
cmp
sar
and
fnsave
cmp
aam
out
out
sti
sub
das
(bad)
into
and
stc
inc
sahf
dec
retf
cdq
or
in
sub
pop
es
shr
test
ja
loop
xor
(bad)
cld
or
loop
mov
das
bsf
cmps
cmp
push
lahf
jp
xchg
add
in
add
push
js
fisub
mov
lahf
fsub
mov
xchg
int
xchg
(bad)
nop
ins
push
jmp
xchg
sbb
shl
xchg
das
inc
shl
xor
lods
ret
xchg
jmp
es
mov
adc
jl
mov
sub
or
and
mov
mov
dec
mov
mov
cmp
xchg
or
mov
movs
rcl
repnz
sub
or
mov
adc
pop
mov
mov
mov
mov
inc
sbb
(bad)
jmp
icebp
mov
cli
ss
push
cld
shl
add
js
outs
in
retf
push
add
(bad)
mov
jecxz
fist
jecxz
lea
push
xor
js
aaa
out
je
adc
cmp
xchg
sub
scas
call
mov
mov
es
in
lock
jl
xchg
dec
xor
leave
mov
out
(bad)
movs
jns
ror
push
mov
ror
inc
jmp
mov
bnd
(bad)
test
lea
mov
ret
f2xm1
and
out
add
push
aas
repz
aaa
fcomp
ins
pop
mov
mov
inc
push
pop
mov
mov
in
or
shl
jl
push
aaa
aad
sbb
dec
int3
mov
fsubp
les
in
sub
bound
mov
pusha
in
jo
add
ins
and
(bad)
repnz
jmp
jp
or
rol
gs
xchg
test
fnstsw
loopne
inc
rol
cld
inc
out
fucomi
sti
stc
mov
xchg
xor
push
mov
sti
cmp
or
mov
xlat
cli
cs
push
xchg
add
in
mov
jge
sub
pop
arpl
jnp
ret
pop
sbb
mov
dec
sahf
int
stos
cmc
mov
out
movs
push
adc
dec
pop
(bad)
icebp
push
nop
jg
dec
add
fidiv
stc
mov
jl
pusha
and
out
clc
(bad)
xor
fwait
cwde
xor
xor
sbb
xchg
fistp
sbb
push
adc
sub
arpl
pop
xor
(bad)
retf
sbb
or
fst
pop
hlt
push
dec
outs
mov
fild
and
dec
loopne
aam
ror
and
hlt
pop
int3
popa
xor
jmp
adc
xor
cmp
and
out
push
iret
pop
shl
addr16
scas
or
push
sbb
mov
adc
(bad)
shl
pushf
add
ss
inc
scas
cmps
xchg
inc
daa
adc
xchg
lods
aam
loop
mov
arpl
cmp
hlt
adc
je
jmp
test
lahf
xchg
sbb
sbb
xchg
aas
add
cdq
in
lahf
rcl
out
(bad)
dec
jb
mov
jge
cwde
out
sahf
aaa
inc
test
pop
rol
push
pop
xor
fdiv
xchg
mov
dec
sbb
(bad)
mov
jbe
iret
lock
adc
adc
fucomi
sar
call
cwde
jmp
mov
addr16
cmp
or
jge
inc
pop
xchg
push
retf
scas
test
mov
inc
mov
test
sbb
sbb
xor
mov
sbb
and
cdq
inc
or
inc
jg
into
out
in
frstor
das
jbe
pop
(bad)
idiv
pusha
fnstsw
inc
pushf
ins
popf
mov
cli
sub
leave
mov
lahf
ins
lds
jns
pop
and
or
fild
jmp
mov
loope
hlt
loope
xchg
mov
mov
imul
mov
cld
pop
ret
adc
cmp
and
xlat
and
adc
popa
ret
inc
inc
sub
rcr
mov
sub
pop
popa
sar
jae
ret
add
xchg
ja
loope
cli
jl
arpl
(bad)
push
push
pop
std
push
cmp
or
outs
mov
xor
jno
(bad)
mov
es
mov
call
mov
cmps
add
(bad)
(bad)
jg
dec
es
jne
(bad)
push
push
sbb
retf
stc
dec
xchg
pop
cs
mov
vxorpd
cmps
into
or
mov
jp
repnz
cmc
inc
arpl
sub
dec
sub
dec
sub
lea
add
movs
adc
cmp
mov
sub
mov
pop
or
arpl
sbb
pop
cli
mov
or
in
and
mov
jl
repz
cmp
xchg
xchg
and
and
mov
test
add
out
inc
inc
push
mov
ror
mov
add
mov
imul
and
adc
mov
xlat
repz
add
jge
loop
xor
ds
mov
stos
sub
les
retf
outs
lods
add
scas
xor
mov
xlat
push
outs
test
outs
popf
xchg
xor
mov
cdq
rcl
fnstenv
mov
dec
icebp
ins
pushf
and
gs
push
or
push
cli
mov
popa
sbb
jl
xor
push
jl
xchg
or
push
out
out
test
mov
and
sbb
sub
cdq
dec
in
mov
jno
mov
icebp
pop
add
adc
into
xlat
jnp
pop
jmp
iret
mov
adc
jae
mov
cmp
dec
test
(bad)
les
or
mov
jo
lds
xor
inc
dec
retf
mov
fwait
jl
xchg
sub
cmps
mov
aam
mov
(bad)
fwait
out
dec
jl
pop
inc
shl
dec
or
test
jmp
xor
push
pop
dec
cwde
cmp
pop
inc
cmp
adc
push
xor
int3
pop
shl
jo
fisttp
jbe
jmp
pop
mov
and
movs
(bad)
pop
jl
push
sbb
fst
mov
(bad)
test
lods
jae
rcr
sbb
es
sahf
enter
cmps
jns
mov
jecxz
fadd
ins
sbb
xor
fidiv
stc
mov
leave
pop
(bad)
push
sbb
jo
pushf
std
lods
call
ds
push
ins
or
jmp
cmp
xor
or
jne
arpl
(bad)
loope
fcmovnu
and
fild
nop
sar
pusha
jl
pop
xchg
pusha
sbb
cmp
push
push
pop
push
clc
lahf
jb
xchg
sub
jae
pop
sub
fidivr
mov
mov
sbb
mov
xor
jp
dec
mov
test
sub
mov
(bad)
cmp
loopne
xor
push
push
mov
push
and
mov
scas
fstp
or
dec
mov
test
pop
and
lods
cmp
sub
cmps
int3
hlt
xor
adc
cdq
cdq
retf
push
xchg
retf
jb
stos
jns
pushf
push
xor
(bad)
fild
(bad)
int3
retf
pusha
scas
xlat
cmp
xchg
call
not
cdq
outs
cmp
adc
mov
test
sahf
mov
les
test
out
sbb
sbb
mov
jg
out
icebp
mov
rol
push
fcomp
loop
(bad)
pop
sub
das
popa
movs
cmp
xlat
gs
stc
pop
sahf
test
xchg
cmp
into
adc
and
lds
(bad)
popa
repz
xchg
xchg
jno
mov
pushf
movs
into
push
xor
adc
mov
push
les
jmp
ja
mov
xor
push
pusha
or
cmp
jmp
aad
(bad)
ja
lea
(bad)
ss
(bad)
sbb
or
imul
jg
cmp
dec
mov
or
and
out
xlat
pop
xchg
pop
rol
stos
xchg
mov
inc
inc
test
xchg
push
and
xchg
add
pop
push
scas
or
into
test
sbb
dec
xchg
xor
cmp
out
pop
pop
pop
push
adc
adc
sti
or
movs
jg
popf
jno
and
stos
(bad)
out
pop
iret
out
xor
mov
mov
in
nop
addr16
test
pushf
mov
rol
and
sub
sar
add
std
test
add
test
popa
xlat
mov
dec
adc
adc
test
ret
cmp
retf
push
mov
cwde
mov
push
dec
ror
fsubr
adc
pop
cmps
cmp
mov
or
sbb
dec
pop
mov
mov
test
std
jge
cmp
jmp
pop
pop
mov
dec
scas
xchg
ror
sub
pop
push
mov
xor
jae
stc
push
ror
jae
push
inc
or
das
addr16
outs
adc
popf
call
adc
and
pop
inc
xchg
pop
mov
xor
adc
ja
mov
mov
mov
dec
in
push
cmp
(bad)
loopne
icebp
jmp
cs
pop
lahf
jg
pop
xchg
gs
or
nop
mov
or
lahf
sbb
sbb
mov
in
sbb
jmp
mov
jp
or
inc
retf
fcom
cmp
or
mov
fimul
cli
cmc
bound
inc
rcl
sahf
push
dec
into
not
and
test
or
mov
aad
add
add
repz
mov
andnps
loope
inc
outs
sahf
pop
xchg
neg
cdq
out
mov
push
add
not
pop
std
leave
(bad)
jecxz
aaa
pop
or
xchg
(bad)
in
mov
and
loopne
dec
push
bound
mov
(bad)
fstp
push
mov
in
jne
fs
nop
movs
call
inc
push
pop
inc
out
adc
pop
mov
sub
add
movs
(bad)
fwait
add
iret
push
add
imul
push
inc
cmc
adc
out
pop
in
shl
push
push
xchg
cmp
push
lods
mov
xlat
inc
mov
push
nop
cli
es
inc
out
jecxz
inc
pop
cmp
into
mov
xor
jg
push
mov
(bad)
mov
adc
jo
jnp
jl
clc
fst
xor
iret
jnp
in
rol
cmp
xchg
xchg
test
cmp
xchg
cmp
mov
aaa
imul
dec
pop
sbb
pop
hlt
or
inc
cli
dec
sbb
rol
arpl
enter
hlt
adc
inc
ja
das
retf
loop
js
push
mov
outs
xchg
ja
loop
jb
addr16
or
cmc
ins
pop
inc
jmp
jns
mov
push
fnstcw
push
call
mov
lahf
arpl
mov
in
and
out
adc
xor
shl
mov
jbe
test
jg
push
dec
jp
push
dec
aam
fisubr
sbb
fs
out
pop
xlat
jne
outs
jle
push
xchg
mov
mov
cld
in
pop
xchg
add
jp
ficom
scas
push
mov
mov
call
out
popa
push
cmps
jb
xchg
dec
fisttp
xor
(bad)
addr16
call
lock
add
sub
dec
inc
cmc
push
test
add
pop
adc
xor
test
addr16
repnz
dec
gs
lea
sbb
sbb
pop
cld
ffree
pop
aam
or
mov
and
pushf
mov
mov
xor
and
jge
jne
(bad)
cmp
mov
jmp
sub
outs
inc
push
sbb
je
cmp
mov
sub
nop
ds
movs
adc
jno
mov
or
add
ja
and
push
ror
aas
push
jp
sub
pop
sbb
mov
push
out
cli
push
movs
nop
mov
mov
imul
pop
lock
stos
xchg
mov
je
cmp
push
aad
pop
adc
(bad)
std
(bad)
cs
int3
fiadd
xlat
mov
dec
push
xor
ja
sub
popa
leave
cld
xchg
pop
aas
jle
es
adc
and
jle
(bad)
mov
fnstcw
sub
outs
jns
(bad)
jmp
and
loop
push
dec
adc
rcr
rcl
push
pop
inc
mov
mov
inc
push
addr16
std
mov
xor
cwde
loop
dec
xchg
sub
pop
call
xor
push
sub
adc
add
mov
cld
jp
mov
out
addr16
dec
xchg
outs
ret
and
dec
dec
cmp
outs
cld
xchg
in
lods
(bad)
movs
pop
mov
mov
jecxz
jns
in
call
aam
sar
mov
mov
cld
or
pop
into
mov
adc
cmp
xchg
or
in
imul
mov
inc
mov
adc
inc
test
dec
test
xchg
iret
sub
ret
fistp
hlt
mov
das
jo
xor
jno
(bad)
mov
clc
mov
jae
mov
pushw
std
pop
cmp
cdq
mov
out
stc
cmp
mov
cwde
xlat
inc
push
inc
adc
call
inc
in
aam
cmps
sahf
aam
fwait
pusha
fbstp
adc
inc
mov
or
add
hlt
out
pushf
push
cwde
mov
bound
stc
mov
cli
jge
mov
cmps
push
aad
mov
mov
(bad)
xchg
das
loop
jb
xchg
lock
push
pop
(bad)
sbb
into
out
aas
repnz
fwait
xor
pop
xchg
clc
scas
iret
jg
mov
aaa
xchg
and
mov
sub
call
xchg
call
fs
sbb
scas
and
repnz
mov
or
adc
or
mov
lods
mov
outs
not
or
xchg
jo
mov
aam
sbb
and
xchg
xchg
nop
xor
sub
iret
sub
xchg
jmp
inc
ror
test
mov
ja
jb
and
and
jmp
jg
add
fisttp
inc
aas
pop
out
(bad)
add
xor
sbb
adc
mov
mov
int3
push
mov
in
push
mov
add
popf
add
repz
or
je
push
dec
cmp
xlat
mov
add
xchg
dec
push
inc
and
cmp
or
adc
xchg
imul
out
xchg
in
test
mov
pop
push
in
fidiv
pop
add
xlat
mov
leave
scas
jecxz
mov
sbb
adc
div
push
out
xor
out
(bad)
loopne
fbld
stos
retf
fisttp
push
pop
sar
mov
gs
push
iret
xchg
sbb
fldenv
cmps
jmp
mov
pushf
in
mov
icebp
mov
pop
retf
dec
cmc
call
out
fmul
pop
and
iret
adc
cmc
pop
add
fwait
es
xlat
or
call
ret
adc
enter
sbb
pusha
test
adc
push
out
fnstenv
adc
popa
(bad)
pop
mov
mov
pop
xchg
dec
cwde
(bad)
mov
fwait
outs
jl
xor
xchg
es
fild
stc
sbb
xor
inc
or
(bad)
cs
mov
inc
js
sbb
(bad)
cmp
cmp
(bad)
sbb
and
dec
mov
int3
pop
popf
mov
test
retf
mov
mov
icebp
mov
bound
xor
and
jnp
jbe
dec
loop
mov
in
leave
xchg
stc
pop
jge
cmp
sbb
daa
aam
and
jae
les
pop
fnsave
outs
sub
mov
clc
dec
mov
jmp
xchg
pop
ret
cmp
or
imul
pop
pop
jecxz
mov
cli
stos
out
xchg
jecxz
cdq
mov
ins
jo
movs
mov
xor
(bad)
dec
ja
jmp
lock
addr16
pusha
cmp
push
cmp
dec
loop
and
pop
ret
jb
xchg
fcomp
cs
or
mov
fs
jge
mov
cmp
addr16
mov
in
mov
in
in
pop
movs
sar
popf
mov
lock
ret
out
mov
mov
lock
leave
and
imul
ror
mov
pop
xchg
aaa
fld
fidivr
mov
add
add
fdivr
call
movs
(bad)
jg
pop
das
cdq
hlt
(bad)
fs
mov
add
push
dec
shl
xchg
int3
or
jle
fisttp
mov
lahf
mov
(bad)
sbb
fwait
inc
pop
pushf
aam
jno
gs
pop
aad
lds
imul
mov
inc
mov
xchg
pusha
mov
cmp
push
sbb
jne
rcr
neg
dec
fimul
mov
and
ja
sub
js
xor
inc
jmp
sbb
and
or
pop
add
clc
jne
mov
sub
dec
push
ret
bound
imul
dec
arpl
push
into
(bad)
fild
enter
adc
add
and
pop
push
fistp
jge
lahf
adc
jb
rep
adc
cmc
push
repnz
jmp
je
lods
mov
pop
and
jbe
ror
in
push
add
mov
pop
xor
sbb
int
jo
sbb
call
xchg
jmp
mov
cmps
pop
sub
loopne
jmp
mov
cmp
lea
jb
jl
sub
xor
xor
inc
xor
adc
mul
mov
mov
mov
sub
movs
gs
std
in
hlt
ret
mov
(bad)
jp
push
pop
movs
inc
loope
xchg
cmps
cwde
adc
fwait
push
push
jne
ss
fwait
and
cmc
xchg
dec
push
add
mov
sbb
dec
fadd
das
jmp
in
xor
or
and
mov
dec
jge
rcl
pop
pusha
xchg
mov
add
mov
mov
dec
inc
ror
cld
out
sbb
inc
adc
xchg
(bad)
or
pop
push
mov
mov
scas
ret
movs
or
das
arpl
aaa
cmps
std
(bad)
xor
dec
dec
dec
cmps
xchg
xor
jns
xor
push
or
xor
xchg
test
fdiv
push
and
movs
daa
xchg
and
dec
in
out
jmp
add
sub
arpl
aad
cs
mov
or
push
out
dec
out
pusha
in
cmp
mov
adc
fmul
pop
icebp
jg
mov
pop
loope
sub
push
or
(bad)
lock
out
jmp
xchg
scas
dec
sbb
sub
(bad)
sbb
std
lock
(bad)
adc
or
lds
popw
retf
ss
repnz
pop
inc
inc
aam
push
pop
mov
xor
hlt
xchg
dec
cmc
shl
cs
pop
mov
push
(bad)
sub
das
pop
movs
mov
repnz
scas
clc
mov
inc
mov
and
mov
xchg
std
scas
int
cmp
jns
add
fwait
pop
fs
ret
lea
mov
mov
stos
push
push
pop
and
adc
or
and
sahf
jno
(bad)
loopne
cmp
dec
push
sub
dec
jno
cld
and
clc
lock
and
or
fild
addr16
(bad)
jl
jb
xlat
ins
fsubr
imul
dec
mov
sbb
ret
dec
jns
inc
cmps
mov
push
scas
ficomp
add
fisubr
aam
jnp
cmp
and
test
pushf
cdq
adc
sub
dec
mov
mov
loope
mov
sub
push
adc
xchg
lock
scas
mov
aam
fcompp
mov
xchg
jp
cmp
mov
or
mov
cmp
cld
add
imul
iret
popa
and
or
add
outs
ret
jae
jp
lahf
ror
sub
cli
dec
jmp
cmp
xchg
pushf
mov
sbb
ror
std
and
inc
sbb
jo
fsub
(bad)
mov
hlt
mov
mov
(bad)
mov
mov
adc
push
dec
fs
or
pop
pop
ins
(bad)
jecxz
call
fild
stc
and
mov
cli
mov
inc
jno
push
pop
push
or
ds
scas
sub
inc
lods
jb
ret
loopne
sub
inc
xchg
add
cmp
call
fdiv
xchg
lods
mov
shr
sahf
int3
je
or
mov
dec
xchg
cdq
sub
dec
and
retf
dec
pop
push
std
adc
sbb
dec
push
dec
sahf
icebp
aaa
push
stc
aam
xor
stc
pop
shr
xor
les
xor
hlt
and
inc
fsub
pop
push
inc
out
popf
mov
ret
mov
lods
shr
mov
pop
(bad)
cmp
pushf
and
inc
cmps
mov
adc
pop
xor
jns
sahf
repz
(bad)
bound
mov
call
fist
call
pop
jo
test
test
mov
xor
sti
addr16
jns
push
lock
icebp
cld
sbb
dec
xor
in
cli
pop
mov
sbb
dec
movs
fucomp
enter
(bad)
sti
shl
xchg
inc
jp
xor
cmp
mov
sar
cmp
ror
adc
popf
out
or
sub
and
lahf
inc
pusha
stc
mov
mov
lds
and
hlt
fsubr
mov
fadd
cs
(bad)
adc
adc
jmp
sub
(bad)
imul
inc
addr16
cmps
ins
add
jne
iret
add
xor
inc
enter
call
fldenv
xchg
dec
test
jge
and
push
cwde
xchg
test
imul
mov
dec
stos
jl
rol
das
int
add
cmps
adc
mov
push
jbe
addr16
or
lea
loope
test
nop
cmp
push
cdq
mov
setnp
mov
icebp
mov
stos
mov
add
adc
dec
mov
or
cmc
add
repnz
fwait
(bad)
jmp
jbe
fcomi
mov
sbb
lock
lahf
xchg
lea
clc
add
dec
adc
or
mov
push
xor
cld
jns
sub
cmp
mov
sbb
mov
xchg
scas
arpl
dec
dec
push
cmp
in
outs
es
pushf
add
lods
jp
cmps
fmul
mov
mov
out
fiadd
push
sub
loopne
mov
mul
int3
pop
push
cmps
xchg
xor
ja
call
dec
test
sbb
xor
aas
(bad)
or
(bad)
xchg
lods
sti
jb
and
enter
movs
addr16
arpl
lea
or
push
xor
fwait
int3
(bad)
aad
jg
int
jmp
add
pop
dec
test
jge
push
mov
sbb
and
retf
mov
add
dec
outs
adc
cmps
rcr
pushf
fnstcw
sub
test
mov
cmp
jnp
repnz
push
test
add
xor
push
cmc
sbb
cmp
cmp
imul
dec
call
mov
dec
addr16
test
retf
push
popf
mov
maskmovq
mul
das
fimul
data16
aad
movs
xor
pushf
sub
xor
mov
(bad)
lock
mov
scas
dec
(bad)
bnd
outs
xchg
push
jns
jbe
mov
mov
jle
push
jns
mov
leave
jle
pop
mov
scas
mov
stc
(bad)
jb
fimul
push
arpl
jmp
jnp
nop
in
rcl
xchg
ins
cdq
xlat
jg
push
leave
mov
mov
jne
and
or
mov
mov
push
inc
jae
sahf
mov
mov
jne
rcr
(bad)
add
jmp
push
xchg
data16
inc
fcmove
shl
mov
adc
sahf
pop
or
jl
(bad)
das
jns
rol
add
mov
test
sub
leave
mov
jl
mov
out
fstp
adc
imul
stos
mov
(bad)
inc
adc
fisubr
lea
pop
inc
sub
push
cmp
stc
lahf
arpl
rcr
hlt
mov
lods
enter
test
push
xchg
fcomp
ficomp
push
clc
sar
stc
cli
sub
xor
xor
jecxz
jno
mov
je
popf
sub
inc
jb
or
pop
adc
(bad)
mov
or
aad
lods
movzx
inc
and
icebp
add
adc
pop
aaa
xchg
cmp
and
lods
arpl
mov
dec
out
or
enter
pop
pop
test
arpl
stos
ja
push
jle
repnz
jg
adc
push
je
call
adc
dec
cmp
sbb
sub
mov
mov
loop
dec
push
jmp
(bad)
jle
add
xchg
push
xchg
out
movs
fstp
inc
push
sbb
push
ja
dec
add
mov
mov
jbe
adc
or
addr16
xchg
dec
xor
sub
repz
mov
xchg
inc
jno
cld
or
sahf
xor
out
mov
adc
inc
dec
sbb
jmp
inc
mov
sbb
ret
jae
jb
pusha
push
fcomp
pop
icebp
sub
neg
imul
aam
into
fs
shl
pushf
xlat
push
dec
outs
mov
lahf
pop
xchg
push
xor
push
mov
sub
inc
gs
mov
ret
adc
call
xor
pop
pop
in
xlat
call
shl
enter
mov
jp
pop
cdq
push
cld
or
cld
mov
add
mov
aas
aad
stos
loopne
xchg
in
add
ds
enter
retf
add
add
jne
pop
ficomp
in
dec
jnp
call
jp
jnp
aad
inc
add
cmp
jne
pop
loopne
aaa
mov
ret
shl
mov
mov
(bad)
addr16
push
out
mov
shl
add
pop
gs
shl
(bad)
jne
jmp
rol
cs
shr
jl
pop
popa
adc
pop
(bad)
and
xchg
das
adc
test
jne
lds
mov
(bad)
test
inc
ret
sub
and
cmp
les
retf
shr
dec
sbb
add
sti
outs
mov
cmp
out
loope
jg
mov
or
mov
mov
sbb
fsubr
xchg
push
lock
not
aam
imul
mov
out
mov
mov
add
xchg
mov
lods
sbb
jno
imul
inc
fiadd
dec
adc
das
mov
jmp
push
call
out
sbb
(bad)
mov
or
mov
in
ins
dec
rcr
stos
push
mov
fisubr
cmps
adc
enter
int3
outs
nop
movs
sbb
test
out
sub
int
nop
popa
dec
out
sub
add
aam
inc
or
inc
retf
in
adc
dec
(bad)
sbb
jo
mov
pop
out
mov
inc
jmp
mov
addr16
cdq
out
pop
push
and
sbb
int
xor
inc
jns
sub
rcl
inc
pop
rol
je
popf
add
pop
das
push
mov
dec
dec
jns
scas
sub
mov
neg
fwait
dec
ret
mov
mov
addps
movs
push
ja
mov
mov
int
fs
xor
jmp
es
sar
inc
jmp
loopne
sbb
stos
pop
shr
adc
xchg
dec
test
repnz
out
xor
cmps
adc
rcl
mov
fiadd
fld
fist
xchg
cmps
inc
cmps
mov
push
push
jae
test
jb
mov
rol
jle
inc
push
icebp
cmps
pop
ret
mov
aas
pushf
or
mov
xchg
xor
enter
(bad)
xchg
inc
aas
pop
mov
rol
out
adc
imul
cmps
or
inc
mov
mov
in
pop
sbb
or
js
fnstsw
aam
mov
xchg
xor
cdq
xor
cmps
sbb
pop
add
jnp
jae
bound
mov
mul
int3
retf
sub
icebp
out
imul
call
scas
inc
inc
xor
dec
jge
test
outs
xor
sbb
popa
mov
push
retf
shl
ds
sub
gs
js
cld
inc
adc
and
xchg
xchg
fstp
mov
hlt
pop
push
fwait
push
repz
push
mov
pop
push
outs
ins
pop
mov
sub
sub
fiadd
dec
lds
mov
inc
add
hlt
inc
mov
add
xchg
lock
icebp
outs
dec
out
loope
div
adc
pop
in
sbb
xor
retf
jnp
adc
sub
pop
dec
iret
and
fs
imul
stos
pop
add
pop
cmp
out
sahf
dec
sbb
test
fbld
mov
push
adc
out
imul
sahf
mov
mov
adc
xchg
pop
call
and
mov
push
and
pop
mov
repnz
dec
pop
ins
popa
jmp
or
pop
inc
or
in
push
arpl
mov
je
xchg
or
mov
inc
cli
mul
ret
dec
not
mov
sbb
lea
xchg
xor
pushf
and
loop
sbb
cdq
pop
mov
lahf
pop
inc
adc
cmp
mov
add
mov
sbb
iret
(bad)
cmp
inc
sub
mov
retf
daa
mov
push
popf
iret
arpl
mov
add
icebp
mov
jle
cmp
(bad)
movsx
mov
jle
cmps
mov
cmp
mov
mov
shr
xor
jbe
inc
dec
push
hlt
xchg
outs
loopne
sub
pcmpgtd
das
rcl
push
enter
(bad)
jecxz
sbb
call
test
or
xchg
or
lods
mov
jecxz
pop
pop
sub
jbe
dec
jp
jno
aad
jne
cli
shl
nop
mov
not
sar
ja
jae
or
xor
mov
dec
pop
int
repnz
mov
pop
scas
call
cmp
mov
call
inc
sar
mov
retf
dec
sar
clc
fbstp
add
add
dec
in
arpl
push
jns
inc
sbb
in
jp
mov
xchg
adc
sbb
inc
pop
xor
ds
cmc
sbb
cmp
adc
push
sbb
hlt
in
std
mov
sub
push
mov
ins
and
and
cwde
es
pop
ret
mov
and
cmp
dec
dec
mov
pop
pushf
push
das
call
cwde
jne
pop
out
cmps
popf
test
push
mov
pushf
jb
sbb
adc
aas
xchg
push
in
fst
ror
push
dec
lds
ins
pop
pop
mov
shl
inc
or
sbb
adc
sbb
pop
or
std
push
sar
(bad)
out
ret
push
scas
out
mov
dec
sbb
(bad)
imul
les
rol
rcr
cmc
scas
dec
lea
loopne
cmc
stos
mov
xchg
inc
mov
xchg
xor
mov
lods
mov
inc
and
mov
add
into
lahf
sar
xor
lock
add
sub
jmp
push
cld
mov
mov
loop
xlat
fild
int
movs
pop
test
xor
fiadd
js
sbb
or
daa
push
dec
daa
sub
or
adc
add
out
test
ror
mov
outs
xchg
sub
stc
test
inc
pop
scas
jge
int3
iret
fbld
inc
push
mov
mov
mov
popa
jmp
push
xor
iret
push
mov
dec
lds
xchg
int
add
ss
in
and
div
call
cli
pop
(bad)
out
or
bound
dec
and
inc
jecxz
inc
dec
mov
or
int
pop
mov
ins
mov
in
stos
push
jbe
stos
pop
repz
ins
jg
lahf
fnsave
sub
inc
sub
add
inc
add
test
test
mov
sub
(bad)
fcmovne
(bad)
jns
xor
push
arpl
adc
popf
fidiv
movs
fwait
cmp
jl
push
add
dec
mov
shl
pop
cmc
sar
dec
and
cmp
cmc
rol
jns
pop
and
push
mov
das
int3
arpl
push
xchg
cmp
ret
push
std
cmp
aad
pusha
inc
sbb
xor
jb
sub
ins
inc
ins
(bad)
push
mov
jb
fwait
push
cmp
dec
xchg
xchg
(bad)
movs
pop
sbb
pop
cmc
loop
fistp
aaa
dec
jo
ffree
(bad)
cmp
and
add
(bad)
mov
lock
in
pop
xchg
mov
xor
adc
fcmovbe
sub
adc
push
mov
clc
loop
xchg
lea
and
movs
cwde
iret
(bad)
movs
inc
jmp
xor
sbb
xchg
rcl
test
test
popf
push
mov
loop
or
(bad)
pusha
cmp
sub
scas
cs
sbb
sbb
clc
in
das
jge
dec
mov
call
out
fst
push
and
mov
pop
sbb
outs
mov
ins
lods
pop
shr
mov
sub
movs
and
cdq
(bad)
cmp
jge
xor
(bad)
xchg
inc
sub
or
mov
xor
jge
adc
(bad)
and
loop
xor
xchg
nop
(bad)
mov
jg
cmp
and
jecxz
ret
pushf
pop
retf
je
shl
pop
mov
pop
pop
test
inc
dec
lea
cld
add
call
(bad)
fimul
ret
in
out
scas
fsubr
xor
push
out
jne
xchg
mov
(bad)
jle
push
jno
add
imul
movs
call
mov
lods
lods
and
sub
mov
mov
push
call
cmp
adc
inc
adc
loope
out
dec
dec
push
mov
cmps
pop
jg
or
pushf
(bad)
dec
jnp
repz
jae
inc
adc
push
shr
pop
movs
sbb
push
aaa
ret
repnz
cdq
adc
call
call
in
fwait
mov
mov
xor
xchg
sbb
jp
daa
xchg
cli
jl
cmp
lock
add
pop
jns
or
xor
inc
pop
jecxz
mov
aam
ret
bound
push
dec
hlt
dec
jg
mov
test
sar
and
mov
loop
cs
ror
jge
dec
jecxz
std
bound
(bad)
call
cwde
or
outs
and
fist
mov
mov
pop
vorps
add
xchg
outs
sub
data16
dec
jge
cmps
outs
jbe
sub
mov
pop
ror
(bad)
cmp
sahf
shr
xchg
cmp
push
cmps
hlt
daa
jmp
inc
xor
mov
cmps
or
mov
mov
xlat
push
jmp
mov
pop
inc
mov
push
aam
cmps
rcr
push
nop
or
jno
mul
ffree
mov
pop
stc
pop
dec
or
cld
ficomp
push
cmp
ins
adc
sub
sahf
movs
(bad)
push
xchg
cli
mov
cmp
push
jns
outs
aam
mov
xchg
jns
mov
mov
jne
in
stos
stos
fs
jns
cli
leave
pop
push
das
or
arpl
pop
mov
stos
(bad)
(bad)
push
mov
jbe
popa
push
xchg
mov
mov
xchg
sub
mov
dec
cmp
out
inc
pop
mov
pop
fcmovnu
gs
add
dec
push
cmp
mov
loopne
call
mov
enter
cmp
fmulp
pop
enter
adc
xor
dec
and
add
push
fs
mov
xor
lods
adc
jnp
and
aad
aad
jnp
lahf
pop
fs
movs
out
aad
retf
lds
arpl
neg
mov
mov
addr16
aad
adc
pop
mov
dec
ror
push
dec
cmp
sub
mov
xor
test
arpl
sbb
in
and
(bad)
cmp
cli
dec
pop
iret
into
mov
rcr
loopne
inc
loope
mov
mov
in
arpl
xor
fcomp
mov
adc
or
pop
xchg
pop
push
fsub
enter
cmc
test
(bad)
xlat
mov
fadd
mov
sbb
cli
lock
sub
xchg
dec
outs
not
sbb
inc
sub
jo
mov
mov
fsubr
daa
clc
and
sub
pop
into
(bad)
lock
and
inc
dec
mov
js
fcmovu
psadbw
clc
test
inc
cmp
sahf
pop
fisub
outs
gs
inc
sbb
jecxz
pushf
sub
ret
dec
(bad)
push
xchg
mov
jmp
mov
sub
std
dec
fld
cmp
dec
xlat
dec
push
jl
jl
movs
cdq
mov
enter
push
aam
inc
pop
xor
push
mov
std
jno
retf
fld
cmc
mov
and
fwait
loope
rcl
push
std
test
pxor
inc
imul
sahf
mov
or
cmp
mov
mov
xor
push
in
mov
std
xor
push
fwait
mov
pop
sub
in
out
fstp
push
dec
cmp
add
add
loopne
inc
xchg
xor
sbb
aaa
jecxz
or
push
pop
imul
inc
or
ret
ret
out
mov
mov
and
bound
xor
int3
push
arpl
call
mov
repz
sub
ror
ja
mov
mov
xor
shl
mov
mov
aas
adc
mov
xchg
pop
mov
mov
cli
adc
cli
sbb
cmp
cmp
les
sti
xchg
sbb
pusha
or
(bad)
repz
pusha
sbb
stos
movs
push
aas
xlat
call
add
pop
stos
xor
pop
out
mov
enter
fmul
test
mov
and
loopne
out
into
dec
mov
dec
aam
sbb
xchg
adc
ja
mov
jecxz
clc
ja
mov
inc
loopne
mov
push
retf
fwait
and
rcr
mov
movs
sub
adc
jns
sbb
inc
xor
dec
adc
adc
in
ss
mov
fidivr
or
or
mul
(bad)
retf
mov
jne
ins
(bad)
mov
dec
xchg
outs
xchg
add
lods
gs
xor
mov
repz
mov
pop
inc
repz
sub
xor
mov
dec
xchg
leave
sahf
pushf
fisub
inc
adc
(bad)
out
jae
dec
dec
mov
mov
imul
push
nop
push
mov
push
cmp
stos
pop
mov
cdq
movs
cdq
(bad)
mov
push
mov
shl
dec
jmp
call
adc
aas
sar
inc
fidivr
jle
dec
xchg
iret
add
xlat
adc
dec
imul
daa
pop
sti
out
out
call
gs
movs
pop
pop
(bad)
dec
push
or
mov
es
retf
jmp
test
pop
mov
xchg
jg
daa
and
jl
test
xor
(bad)
jns
test
je
mov
sbb
imul
loop
dec
(bad)
jecxz
pop
(bad)
mov
pop
push
cmp
(bad)
xacquire
dec
int3
fwait
dec
int3
je
js
fisttp
std
mov
pop
sar
(bad)
ret
mov
out
mov
shl
imul
mov
cmp
mov
mov
push
push
ja
cmp
cmovs
sbb
outs
dec
push
sub
adc
mov
fs
push
or
jle
inc
jbe
(bad)
jbe
xor
xor
arpl
add
pop
xor
ds
and
ficom
xchg
inc
es
add
pushf
aaa
jp
pushf
ficomp
out
inc
dec
push
pop
mov
mov
mov
loop
sbb
je
cmp
rcr
xchg
and
adc
pop
inc
das
pop
add
inc
xor
pop
or
adc
dec
pop
jp
xchg
sub
les
pop
mov
cmp
dec
sub
std
mov
aad
push
cmc
scas
push
adc
jne
sbb
iret
shl
stc
xor
push
(bad)
sub
arpl
ret
dec
out
add
cmp
pop
adc
and
pop
mov
fucomi
pushf
push
lds
into
sub
xlat
pusha
fmul
(bad)
fstp
mov
push
addr16
cmp
scas
sub
test
mov
add
inc
stos
retf
push
scas
lea
jg
sub
jl
inc
or
fdivr
pop
sbb
jecxz
stos
gs
ficomp
bound
add
out
std
fwait
sub
xor
pushf
enter
sbb
jge
scas
ret
adc
les
outs
cmc
icebp
mov
sahf
xchg
push
pop
retf
aaa
xchg
imul
inc
movs
aam
jle
aas
and
daa
test
and
push
and
mov
xchg
or
xor
mov
pop
arpl
jns
ja
retf
xor
cmps
push
and
in
xor
pop
adc
repz
cmp
daa
cld
retf
dec
cmp
call
mov
add
in
and
inc
fcmovu
push
outs
mov
stos
and
pop
sub
dec
jo
repnz
sbb
and
fimul
inc
inc
mov
sahf
mov
std
test
out
sar
int3
adc
loopne
loopne
jg
mov
aas
imul
call
cmps
fstp
push
hlt
jle
in
mov
imul
sbb
rcl
jae
or
xor
pushf
jle
sar
enter
fiadd
mov
test
out
push
xchg
dec
arpl
arpl
jl
arpl
mov
or
loop
das
xchg
data16
mov
adc
sub
movs
or
sub
or
je
adc
push
sub
jmp
or
cmps
call
out
mov
jecxz
icebp
fwait
adc
ins
cmps
push
dec
lods
jecxz
pop
outs
gs
pop
xor
jo
int3
lea
data16
push
repnz
sbb
arpl
not
jecxz
lea
pop
inc
pop
enter
inc
push
int
jp
movs
movs
mov
ja
and
inc
mov
fld
xlat
dec
pop
sbb
test
xchg
clc
addr16
mov
fistp
aad
inc
test
arpl
or
xchg
rol
scas
dec
xlat
sbb
jge
mov
inc
xchg
xor
and
pop
(bad)
clc
mov
push
fcomi
aaa
adc
enter
scas
sbb
fdivr
mov
ret
js
push
mov
jp
fiadd
sub
stos
data16
jne
adc
(bad)
icebp
sub
xchg
dec
daa
mov
jne
or
stc
cmp
inc
jbe
inc
mov
(bad)
shl
jmp
mov
inc
gs
inc
jb
stos
lea
mov
arpl
cmps
mov
and
retf
adc
sub
bound
test
push
loope
inc
scas
ficomp
test
xor
inc
(bad)
pop
sbb
jne
mov
pop
mov
rdmsr
xlat
enter
or
(bad)
fstp
mov
inc
add
or
test
sbb
icebp
pop
and
or
adc
mov
inc
xchg
stos
sbb
xlat
add
fwait
out
test
mov
stos
ret
push
xchg
mov
bswap
xchg
stos
sbb
sub
xchg
ins
xchg
jne
repnz
adc
push
cmp
mov
loop
enter
fiadd
in
out
cld
add
sar
icebp
xor
mov
inc
xlat
push
mov
sbb
adc
and
xor
retf
push
add
cmp
mov
movs
jb
xchg
or
mov
mov
inc
movs
fldln2
mov
sbb
pop
adc
repnz
enter
imul
jns
out
add
cmp
xor
ret
sub
xor
cmps
lahf
pop
mov
push
call
cmp
rcl
inc
les
push
das
ds
out
(bad)
shr
mov
rcl
sub
fimul
int3
in
repnz
(bad)
shr
repnz
repnz
stos
hlt
outs
xchg
dec
sub
dec
idiv
cld
jne
jae
lock
out
je
test
arpl
or
cmps
movs
arpl
(bad)
(bad)
mov
aad
push
mov
mov
es
out
jmp
push
outs
ret
loope
or
ins
add
push
adc
iret
inc
test
(bad)
and
icebp
push
inc
jb
adc
jecxz
scas
jnp
mov
addr16
jge
sti
call
cld
push
ret
(bad)
in
retf
xchg
retf
sbb
adc
xchg
push
inc
retf
xchg
and
adc
scas
in
dec
test
out
jmp
mov
stc
aaa
mov
xchg
sbb
inc
pop
mov
push
jmp
gs
popf
or
movs
pop
pop
inc
pop
jg
dec
inc
or
cmp
push
cmps
fidivr
in
mov
clc
add
ret
sar
pusha
sbb
fiadd
int3
cmp
dec
push
jns
push
and
push
dec
mov
push
(bad)
call
movs
cdq
jne
fstp
lods
aad
jg
pop
enter
movs
fistp
cmps
dec
je
mov
sub
shl
mov
cmp
mov
mov
push
sub
xor
sbb
pop
rol
test
xchg
(bad)
dec
(bad)
sub
sub
pop
mov
xchg
inc
div
fstp
inc
mov
lock
push
add
jae
mov
cmps
mov
adc
stc
das
pop
jnp
out
fdivr
mov
push
pop
imul
int
shl
adc
adc
mov
sbb
pop
ror
xor
lods
add
add
outs
and
cmp
ret
pop
dec
xlat
mov
outs
mov
push
pop
xchg
push
adc
mov
mov
or
add
and
(bad)
push
mov
and
xor
aaa
cmp
dec
mov
push
pop
pcmpgtw
repnz
sub
bound
sub
aam
aaa
inc
mov
lods
xor
add
jmp
pusha
imul
clc
daa
sbb
cmps
in
jno
and
sbb
mov
or
popf
mov
jb
inc
and
xor
pop
fcom
out
(bad)
mov
in
pop
cmp
pop
(bad)
loope
leave
jg
mov
fisubr
lahf
xor
lahf
cmc
(bad)
inc
sbb
inc
popf
or
cmp
mov
jge
in
stc
lds
cwde
add
mov
add
jmp
adc
pop
adc
push
jns
mov
push
sar
mov
fucomp
push
test
sub
cmp
cmp
out
mov
xor
push
dec
sbb
xor
lock
jmp
fist
in
pop
or
mov
jg
mov
xlat
(bad)
test
je
idiv
lods
adc
jbe
rcr
shr
dec
fld
fdivp
loope
loope
jge
rcr
xlat
and
je
or
ror
mov
std
sti
cmp
sbb
sub
dec
adc
movs
jp
(bad)
loope
xchg
xchg
push
dec
lods
ins
out
push
fidiv
and
and
xchg
mov
jp
jg
in
out
sub
out
mov
loope
movs
shl
or
push
adc
mov
retf
push
loope
pushf
and
push
popf
inc
jp
cmp
test
or
mov
push
out
mov
and
mov
(bad)
jg
xor
xor
ja
adc
ins
neg
pusha
sub
pop
outs
pop
retf
ror
test
push
movs
daa
retf
sub
push
in
mov
leave
add
rol
xor
mov
call
add
movs
test
in
add
pushf
out
adc
fsubr
cs
inc
js
cmp
sub
jb
push
inc
loopne
leave
dec
idiv
inc
(bad)
jno
pop
rcr
cs
popa
cs
mov
sub
sub
imul
mov
jge
aam
popa
jle
in
(bad)
nop
cwde
sub
mov
iret
xchg
mov
arpl
cmp
in
add
xchg
scas
sub
scas
popf
and
push
out
mov
pop
push
imul
out
or
jo
push
shl
sub
hlt
xchg
stos
cmps
lock
sbb
or
ds
mov
inc
(bad)
ficomp
lods
int
fs
(bad)
je
ret
in
sub
adc
jmp
and
out
adc
xchg
mov
cld
or
nop
jp
iret
pushf
mov
mov
sbb
xor
movs
dec
cli
xor
(bad)
call
aam
add
jp
inc
xchg
xchg
aas
jle
mov
pushf
pop
dec
test
lea
mov
and
mov
dec
(bad)
cmps
xor
dec
fist
imul
mov
je
pusha
lock
es
repnz
xor
adc
dec
adc
stc
mov
jmp
repz
mov
aas
pop
lods
dec
mov
jecxz
jecxz
arpl
(bad)
in
push
(bad)
data16
xor
inc
cmp
hlt
fld
push
and
jo
mov
cmp
cld
fmul
add
es
add
clc
push
and
mov
into
test
jo
in
add
mov
mov
cmp
stos
call
mov
or
and
(bad)
hlt
adc
xchg
pop
cmc
fist
inc
mov
adc
adc
aaa
aas
repz
pusha
hlt
test
xchg
js
mov
dec
add
(bad)
add
sbb
popf
(bad)
scas
push
repnz
inc
dec
test
inc
adc
mov
lahf
data16
mov
xchg
dec
mov
rcl
xchg
je
mov
mov
mov
mov
repz
ins
push
mov
ficom
in
jge
push
outs
stos
fsubp
fiadd
add
nop
in
sub
loopne
(bad)
sbb
pop
dec
mov
sti
push
outs
push
add
mov
dec
popa
add
add
sub
mov
je
dec
pop
mov
cmp
rcl
xor
fdiv
mov
mov
inc
rcr
pushf
test
div
or
mov
mov
cmps
xchg
aaa
push
(bad)
mov
pop
mov
or
sti
in
adc
xchg
mov
xchg
sbb
int
in
loop
xchg
push
sbb
rcr
jl
xchg
pop
mov
sbb
shl
lods
push
arpl
or
retf
dec
add
inc
xor
test
mov
cld
xor
aaa
in
loop
es
call
pop
jae
mov
and
pop
xchg
cmp
es
dec
xor
xor
sub
rcl
adc
xchg
xchg
fwait
cmp
push
push
cs
add
int3
and
dec
cmc
test
push
pop
retf
fdiv
cld
push
adc
mov
adc
jmp
sub
pusha
inc
jl
dec
mov
sbb
push
fnsave
pusha
ret
je
lea
stos
out
pop
mov
jp
mov
fisub
cmc
and
mov
pop
in
mov
fsub
aaa
hlt
push
inc
sahf
inc
adc
mov
loope
cld
jl
pop
push
adc
inc
mov
push
fst
jmp
rep
xor
mov
inc
dec
and
push
repnz
add
jecxz
pusha
sbb
call
or
cmp
lods
hlt
out
cs
xor
mov
sbb
call
jle
lods
out
mov
call
cmp
mov
shl
jg
lods
(bad)
adc
cmc
jmp
aaa
fdiv
pop
dec
inc
jl
test
test
test
je
(bad)
fdivr
scas
jecxz
jecxz
pop
mov
xchg
mov
dec
mov
adc
jmp
xchg
stos
adc
adc
sub
sub
rol
adc
addr16
pop
out
gs
js
mov
cmp
push
test
hlt
shl
mov
xor
repnz
das
inc
stos
iret
pop
add
or
ret
or
aam
out
adc
jmp
jne
data16
(bad)
pusha
repz
and
xor
sub
dec
cmc
cwde
lds
inc
mov
rcl
dec
stos
and
aas
sahf
sub
xor
cmp
aaa
nop
pusha
inc
call
mov
jp
push
push
outs
ss
jo
pop
aad
(bad)
fs
xchg
jecxz
cmp
jno
int3
push
mov
into
and
inc
cmp
cmp
ror
pop
aam
sbb
adc
push
sar
mov
or
js
loope
mov
je
dec
push
xchg
mov
stc
(bad)
bound
jg
in
popa
mov
pop
dec
and
fs
int
(bad)
sbb
jae
cs
adc
mov
mov
stos
mov
sub
adc
or
(bad)
iret
mov
sub
cmps
mov
jb
shl
mov
mov
clc
(bad)
jae
and
sub
pop
ins
ins
pop
and
inc
ins
outs
fbld
fs
mov
dec
retf
sar
or
ins
dec
imul
sub
mov
stos
enter
inc
and
(bad)
das
ret
jle
pop
popa
sub
leave
pop
in
imul
das
imul
jnp
iret
add
push
xchg
sbb
push
mov
and
push
cmp
imul
push
push
pop
enter
jo
shr
ret
push
mov
push
out
sub
stos
int3
lahf
ins
sub
stos
test
fst
sub
jmp
sbb
pop
dec
push
rcr
add
clc
mov
mov
pop
test
add
sti
mov
xor
les
loopne
mov
adc
push
idiv
mov
setg
sub
fidiv
or
je
mov
dec
sahf
pop
(bad)
mov
adc
test
push
outs
sbb
addr16
mov
mov
(bad)
adc
iret
and
popf
lahf
ds
sbb
cmc
push
iret
inc
mov
xor
cli
mov
movs
(bad)
stos
clc
ret
push
ins
out
dec
or
mov
jae
stos
fs
xchg
pop
inc
jmp
scas
or
nop
fdivr
aad
fucomip
sub
cmps
or
add
push
or
pop
movs
jg
xor
dec
add
mov
test
jl
mov
scas
out
and
and
mov
push
adc
jbe
jne
jmp
ffree
je
lea
jp
push
js
dec
(bad)
call
push
stos
call
sbb
push
mov
popa
iret
add
add
call
aas
jp
loope
fidiv
movs
or
push
(bad)
xchg
(bad)
in
jne
jne
daa
(bad)
fucomi
mov
inc
cs
aas
sub
pop
loopne
push
mov
lods
mov
out
mov
add
jmp
cmp
(bad)
push
inc
and
jle
add
jb
rol
inc
js
pusha
inc
pop
mov
dec
dec
icebp
test
int3
dec
sbb
cmc
jge
stos
sbb
cmps
std
test
mov
and
pop
in
inc
call
fldenv
dec
sbb
jg
shl
out
and
add
pushf
mov
out
neg
cmp
fisub
pop
cmp
mov
or
ds
fidiv
and
js
and
adc
repnz
sti
lods
mov
std
dec
xchg
and
xchg
xchg
jae
adc
clc
sub
pop
inc
mov
jecxz
retf
fist
outs
aaa
mov
add
pop
mov
(bad)
loope
push
mov
add
push
ret
daa
xlat
cmp
adc
cmp
adc
pop
icebp
jl
repz
in
xchg
mov
inc
ins
xor
pop
jmp
pushf
or
sbb
call
mov
and
sbb
mov
jmp
les
jmp
mov
mov
rol
fs
sbb
repnz
pop
mov
jno
es
jmp
scas
stc
mov
clc
lods
sbb
jo
fsub
test
fist
xchg
int3
jmp
push
mov
push
pop
in
dec
arpl
int
xor
and
cmp
icebp
ja
test
imul
lds
loop
sar
ja
or
xchg
sub
cld
cmp
das
or
mov
dec
arpl
lods
and
adc
sub
push
cmps
ss
mov
pop
push
in
mov
in
lds
in
lock
xor
adc
sub
pop
ror
ficomp
pop
ffree
push
sub
icebp
retf
and
lods
stos
stc
jnp
inc
sahf
adc
hlt
xchg
dec
imul
mov
data16
fwait
push
pusha
std
int3
loope
shl
stos
pop
shl
test
fst
mov
fsub
loopne
and
add
outs
xchg
scas
dec
cmp
cwde
mov
(bad)
enter
call
jp
mov
jne
je
test
test
dec
popa
jmp
mov
mov
outs
popa
mov
div
loopne
and
adc
call
push
dec
std
cdq
mov
mov
addr16
add
leave
push
sbb
add
es
lds
out
xor
fist
cwde
daa
or
add
xor
jl
stos
xor
into
push
xchg
jg
out
cmp
fwait
stc
pop
cmc
jae
jmp
mov
mov
mov
sbb
retf
iret
jle
lds
pop
mov
push
and
sub
mov
sbb
adc
jp
jno
mov
pop
ins
jmp
mov
dec
inc
push
mov
aaa
push
adc
in
inc
int
fisttp
addr16
add
pop
(bad)
cmps
fidivr
or
mov
mov
cmp
inc
mov
call
(bad)
adc
push
popa
outs
xchg
mov
daa
push
aas
inc
aam
inc
sbb
cld
pop
xlat
out
iret
jne
add
pop
push
sti
cmc
sbb
mov
jo
scas
mov
bnd
dec
ror
mov
mov
jo
das
jmp
jmp
es
or
push
sub
pop
in
jae
out
xchg
dec
lds
pop
jns
enter
push
mov
into
rol
ins
in
cmp
jmp
dec
mov
mov
repz
push
cdq
cld
pop
pop
inc
inc
push
cmp
aas
movs
(bad)
loope
dec
(bad)
push
loope
test
test
sub
popa
out
cmps
sub
out
in
mov
jle
jle
fidivr
sub
(bad)
jae
mov
sub
jecxz
push
daa
fiadd
and
cmp
mov
and
push
mov
xchg
ins
jb
inc
nop
xchg
lods
in
(bad)
lods
out
mov
mov
cmp
mov
mov
xchg
aaa
out
or
inc
fisub
loop
aad
sub
mov
in
in
scas
std
sbb
lods
inc
fdiv
je
jo
dec
clc
rol
mov
pop
fidivr
pop
add
cmc
adc
inc
push
mov
retf
push
les
push
js
popf
dec
ficomp
call
bswap
loopne
into
retf
scas
cmp
imul
sbb
fldcw
add
fisubr
stc
popa
aas
sub
(bad)
clc
mov
inc
or
mov
test
in
xchg
movs
fadd
int3
mov
(bad)
aas
mov
test
add
rep
pop
or
gs
and
mov
sbb
push
fwait
out
pop
add
push
mov
pop
inc
dec
push
adc
cmc
ja
or
inc
cs
xor
bound
jb
in
in
add
out
dec
sbb
test
call
outs
shl
in
jecxz
scas
pop
ins
dec
sbb
mov
push
aas
mov
xor
frstor
(bad)
in
aam
jno
adc
cmp
fistp
xchg
jo
ror
xlat
dec
push
mov
cmp
bound
xor
and
and
mov
ins
dec
cmc
push
add
fmul
pop
adc
xchg
jmp
cmc
push
(bad)
xor
cwde
scas
sub
jno
pop
aas
mov
inc
xor
and
iret
inc
aas
jecxz
loope
retf
ins
jne
sbb
in
push
icebp
stos
xlat
jmp
int3
nop
test
add
adc
fistp
inc
xchg
rcl
jo
jbe
pop
and
aam
and
lods
inc
mov
repnz
ja
les
adc
sar
jns
push
lds
pushf
pusha
aam
cmc
adc
mov
cmps
jae
sbb
push
pushf
jmp
pusha
stos
jge
fwait
test
pop
pop
(bad)
push
add
xchg
retf
xor
cmc
xor
iret
mov
xchg
jo
xor
in
sub
out
pop
cwd
popa
addr16
addr16
shl
shl
cs
ffree
test
retf
jmp
ret
jns
sub
mov
push
lock
mov
stc
mov
sbb
fcom
outs
and
xchg
mov
dec
mov
out
push
stos
fs
icebp
and
sbb
and
shl
outs
rcr
into
adc
ret
in
es
push
outs
mov
lods
sar
xchg
jno
jmp
data16
mov
sub
adc
or
sub
ins
sub
dec
mov
xchg
nop
jb
xchg
test
and
fwait
cmp
pop
mov
rol
or
imul
mov
mov
mov
mov
xchg
sub
jne
cli
xor
push
sahf
out
lods
popf
xchg
movs
sub
(bad)
sub
xchg
pop
add
out
jmp
in
mov
nop
add
push
repz
jmp
dec
jns
mov
cwde
or
mov
call
jno
ret
pop
mov
aam
sub
scas
pop
dec
jge
push
or
sbb
rcr
sahf
jmp
mov
imul
xor
inc
dec
lods
mov
sbb
jecxz
xor
xor
adc
push
sbb
clc
push
mov
test
fwait
xchg
mov
shr
or
pop
ret
xor
cmp
cmp
in
addr16
out
in
push
xchg
fs
sbb
push
(bad)
mov
dec
daa
xchg
cmp
mov
pop
inc
fwait
adc
test
mov
leave
sub
cmps
inc
pop
mov
adc
scas
sbb
in
cmps
pop
fldenv
or
(bad)
enter
adc
enter
aas
dec
jmp
je
pop
push
push
pop
shl
mov
xlat
punpcklwd
aas
sub
push
les
sbb
add
repz
in
fisubr
push
adc
mov
mov
jb
adc
xor
sub
cmp
int
sbb
repz
cli
mov
test
inc
outs
adc
sbb
sbb
xlat
sbb
lods
pop
arpl
outs
push
add
pop
adc
out
mov
scas
jmp
jmp
rcl
mov
mov
movs
mov
inc
inc
fwait
std
jb
sub
mov
lds
cmp
cmp
pop
mov
sub
inc
or
mov
add
add
iret
xor
xchg
sar
cmp
repz
mov
push
repz
movs
push
mov
jae
enter
dec
call
mov
(bad)
sbb
call
xchg
mov
adc
sbb
test
iret
stos
enter
mov
xchg
sbb
xchg
jp
push
or
dec
(bad)
inc
jae
cmp
stos
and
adc
enter
out
mov
out
(bad)
aam
sbb
fdiv
push
mov
sbb
cli
mov
fist
pop
jp
retf
rol
enter
sub
pop
add
push
cmp
jle
cmp
jae
loope
adc
rol
dec
inc
cmp
cmp
xchg
pop
cmp
or
sub
jle
dec
fwait
daa
xor
push
push
push
pop
or
test
into
mov
jmp
pop
mov
and
cmp
sbb
jle
xchg
push
leave
jbe
mov
inc
inc
pusha
mov
push
aam
ror
pop
push
adc
and
das
lds
scas
sub
mov
xchg
cwde
xlat
call
inc
mov
pop
jo
jl
popa
cli
retf
or
loope
idiv
mov
pop
cmp
cmp
inc
int
sbb
lea
mov
lock
loopne
(bad)
fmulp
push
imul
xor
out
cmp
xor
jl
imul
out
(bad)
push
xchg
outs
loope
and
fstp
je
pop
dec
sub
lds
xchg
(bad)
lock
push
test
push
repz
cmps
mov
sahf
dec
or
cmc
(bad)
sbb
pushf
mov
rcl
test
push
scas
in
in
mov
test
ins
nop
mov
cmps
cmp
xchg
data16
jno
mov
sti
fcmovnb
jmp
xchg
jbe
push
dec
dec
cli
in
fstp
xchg
loope
mov
and
inc
adc
pop
sub
test
sub
jbe
xor
xor
dec
and
jle
sete
push
jmp
retf
test
leave
dec
(bad)
pop
jl
adc
movs
cmp
out
cld
push
in
or
mov
test
inc
mov
inc
xor
loop
pop
mov
int3
mov
cmp
push
sub
mov
jbe
push
pop
movs
cmp
shr
xor
outs
loop
arpl
popa
pop
shr
hlt
mov
aad
add
and
into
jns
jmp
(bad)
imul
cld
xchg
sbb
shl
inc
ins
das
outs
cmp
and
fwait
sub
and
mov
ins
pop
pop
in
fld
in
mov
inc
pop
or
int3
(bad)
fnstsw
daa
lods
sbb
push
mov
mov
mov
inc
mov
pop
sbb
mov
stos
mov
mov
or
cli
out
jg
dec
and
loope
and
mov
test
fwait
adc
(bad)
sbb
leave
xchg
push
sub
pop
add
lds
mov
push
jmp
push
imul
pushw
mov
fisttp
mov
mov
mul
xor
out
test
enter
inc
mov
and
pop
sub
pop
call
xor
pop
add
xchg
inc
mov
sahf
push
loop
jbe
popf
adc
jl
pop
sar
sub
push
std
inc
push
clc
lea
loope
daa
mov
mov
push
(bad)
test
xlat
add
mov
jb
or
jmp
and
pushf
ficomp
test
dec
out
iret
call
pusha
cli
add
sub
dec
ror
es
(bad)
dec
(bad)
pusha
inc
dec
inc
lods
stc
ins
and
enter
add
imul
xchg
in
push
dec
sub
sub
stos
iret
nop
pop
and
int3
sub
jno
mov
je
and
shl
imul
cld
enter
movs
xchg
ins
adc
adc
mov
jo
retf
out
xchg
js
clc
or
xor
mov
push
popf
inc
adc
sbb
cdq
adc
(bad)
sub
push
loop
cmp
(bad)
jp
int3
lds
(bad)
pop
and
jne
adc
out
sti
arpl
dec
dec
ror
jns
push
jno
popa
or
sbb
pop
je
dec
lock
fdivrp
xchg
mov
out
mov
test
aad
and
sbb
sbb
sbb
mov
cmp
pop
cmc
pop
mov
aam
out
pusha
mov
shr
dec
jecxz
arpl
mov
pop
mov
mov
rcl
imul
cld
mov
ds
jbe
movs
lea
sub
inc
pop
fwait
lahf
in
xlat
lds
push
mov
fmul
mov
nop
(bad)
and
inc
mov
mov
cli
gs
sub
mov
pop
mov
jg
mov
mov
xor
pop
cmp
adc
fs
adc
in
cdq
or
fabs
mov
cmps
mov
xchg
mov
push
sub
clc
and
ja
cmps
mov
pop
mov
mov
out
fisttp
mov
scas
sti
sti
out
mov
mov
sbb
fldcw
push
push
jle
and
cmp
leave
xchg
fiadd
xchg
cmp
in
jb
mov
daa
(bad)
out
cld
mov
push
repz
pop
push
or
jae
sub
add
mov
mov
mov
cmps
or
dec
out
(bad)
sbb
xchg
jno
mov
xor
mov
mov
ror
xor
inc
xor
fsubr
out
adc
data16
shl
push
inc
mov
mov
and
xor
gs
int
sub
out
push
sar
xchg
or
jbe
div
mov
clc
push
fst
pushf
in
imul
cmp
xchg
stos
rol
mov
jle
mov
sub
int
xchg
cmp
test
mov
aaa
fiadd
test
xor
aad
push
rcl
adc
rsm
push
mov
fcom
fstp
lahf
repz
fisttp
imul
lock
jb
dec
add
call
scas
sub
dec
jmp
inc
out
mov
fistp
fsub
clc
shr
inc
jns
push
pop
imul
popa
pushf
fnstcw
xchg
mov
jge
and
or
mov
or
mov
xor
mov
cld
ins
jle
jns
mov
cmp
test
in
fisub
push
dec
test
fsubr
add
shr
aaa
into
in
jp
enter
aam
push
cmp
lahf
xchg
and
imul
sub
in
fcmove
pop
mov
pop
mov
push
dec
mov
lds
call
cmp
loope
cmp
js
imul
xchg
push
test
inc
fidiv
arpl
dec
xchg
std
mov
mov
pop
js
sub
cmp
jo
loop
mov
inc
mov
xlat
jne
dec
xchg
scas
xor
mov
jmp
inc
mov
cld
push
fcomp
ins
cmp
mov
cmp
fstp
in
mov
loope
add
test
je
fs
call
fistp
mov
cmp
cmp
fs
cld
xchg
push
mov
push
jl
aad
pop
test
push
push
lods
push
(bad)
imul
or
dec
and
jl
or
fnsave
adc
je
push
das
mov
in
neg
outs
lods
xchg
pusha
push
and
test
and
mov
inc
test
in
sub
les
enter
in
mov
fiadd
cmps
mov
adc
jae
scas
cs
pop
sub
xchg
push
push
and
aam
add
xchg
out
das
adc
jns
lea
stc
jg
jne
push
cmp
aas
mov
std
adc
mov
fwait
in
inc
lods
retf
in
inc
or
aaa
push
adc
or
aad
(bad)
sub
popa
mov
(bad)
mov
ja
pop
inc
adc
lods
push
dec
mov
jne
imul
pop
sahf
adc
sub
ret
hlt
scas
jo
cmp
sbb
lds
and
or
mov
cmp
mov
test
mov
cmp
jl
int3
das
dec
and
or
mov
loopne
movs
pop
mov
jmp
dec
xchg
dec
fdivrp
lock
(bad)
push
xlat
in
ret
pusha
push
add
jmp
add
inc
xchg
adc
xchg
sbb
movs
lods
mov
push
aad
xor
mov
out
pop
(bad)
sub
push
iret
js
(bad)
dec
enter
inc
sub
pop
cmp
icebp
adc
lahf
es
aad
retf
pop
pushf
test
sub
iret
mov
or
pop
xor
xor
push
(bad)
div
jne
leave
jo
outs
ret
mov
inc
and
retf
push
xchg
mov
pop
jne
and
adc
aad
dec
(bad)
cmp
push
aam
or
push
mov
(bad)
pusha
dec
test
jb
stc
push
sub
aaa
sbb
(bad)
push
pop
call
adc
add
pusha
(bad)
popa
adc
and
fldcw
adc
xlat
cmc
jge
nop
and
cmp
mov
mov
pop
wbinvd
mov
in
das
rol
and
out
cmp
gs
inc
in
mov
pusha
jp
enter
test
cmc
xor
cld
adc
xchg
rcl
inc
jecxz
sahf
adc
pusha
cld
add
xor
push
push
test
ret
int
xchg
jle
lods
lods
mov
cli
add
jno
imul
fmul
and
mov
mov
imul
xchg
sbb
jne
push
pop
push
std
in
fdivr
push
pop
rcr
pop
cmps
adc
mov
out
test
data16
add
fstp
cs
into
push
xchg
mov
inc
xor
push
and
push
enter
add
inc
xor
iret
ret
leave
mov
jne
mov
xor
xchg
ss
aaa
sahf
or
lock
nop
fidivr
add
(bad)
wbinvd
and
hlt
stos
ins
fisubr
(bad)
fcmovnbe
fnstenv
or
shl
sbb
std
and
mov
bnd
aad
jbe
cmp
jne
cmp
mov
fs
jae
mov
xor
pop
pop
cmp
aas
dec
sub
push
neg
cmp
cmp
inc
stos
cli
sbb
jmp
outs
inc
or
pop
in
stos
movs
out
adc
test
pop
and
mov
add
not
mov
jecxz
jo
sar
sub
or
stos
or
les
cmp
loopne
lods
cmp
bound
cmc
xchg
fld
test
pop
out
sar
sub
sahf
pop
xchg
adc
jp
pop
mov
movs
mov
and
daa
loopne
jne
fwait
jne
lea
(bad)
pop
fsub
into
and
test
call
imul
(bad)
xor
fnstsw
popf
in
stos
fiadd
movs
sub
cmp
hlt
repz
div
test
add
mov
pop
das
test
imul
popf
pop
lock
xor
push
adc
ret
and
jo
idiv
retf
push
cs
dec
mov
mov
mov
mov
push
clc
dec
xor
pop
imul
or
lds
mov
mov
scas
outs
and
wbinvd
shl
lds
dec
sbb
jmp
xchg
test
push
pop
scas
cmc
mov
int
mov
(bad)
jo
int3
sbb
cmc
ss
adc
aas
or
inc
arpl
outs
push
push
es
imul
add
pushf
mov
icebp
xchg
nop
loope
mul
mov
push
or
jo
pop
mov
icebp
add
and
pop
ficomp
xor
lahf
dec
xchg
mov
ins
push
stc
shr
dec
inc
int
popa
jne
in
pop
or
fcmovnbe
popa
les
mov
mov
push
adc
xor
pop
or
push
lods
sub
(bad)
inc
les
xchg
pop
jmp
scas
mov
je
xor
pop
call
loope
jl
aaa
jae
popf
in
int
in
mov
loope
ds
jns
mov
mov
mov
gs
sti
bound
jecxz
hlt
push
in
push
sti
imul
push
pop
inc
ret
js
sub
jge
sub
cmc
retf
inc
adc
pop
xlat
not
outs
push
xor
sbb
shl
test
cmp
icebp
arpl
push
lods
and
ficom
es
loope
or
and
inc
cld
mov
scas
test
jb
adc
jne
fs
in
push
(bad)
pusha
(bad)
fcomp
popa
test
lahf
shl
push
nop
cmps
pcmpeqd
cmps
cdq
ret
repz
repz
sbb
(bad)
clc
sub
jae
js
cwde
mov
adc
sbb
rol
ficom
cmc
scas
shr
push
push
xor
out
sbb
adc
cmp
push
sub
fsin
(bad)
push
cmc
in
std
pushf
push
scas
cmp
adc
or
jecxz
adc
mov
adc
adc
and
ds
jns
das
mov
sub
and
xchg
mov
mov
mov
es
or
test
call
call
movs
adc
cmps
jae
shl
rol
int
push
inc
rcr
xchg
xor
ret
sbb
pushf
fisubr
and
ja
xor
repnz
out
pop
js
sub
pushf
test
scas
js
(bad)
adc
push
mov
jo
sbb
sub
int3
inc
xchg
adc
mov
call
enter
adc
push
stc
cmp
lahf
ja
das
dec
cmp
popa
jecxz
ss
fiadd
hlt
push
push
adc
mov
sbb
dec
imul
mul
lock
sbb
push
lods
sub
rcl
jmp
dec
sub
test
mov
sbb
cmp
hlt
sbb
mov
adc
je
pop
mov
sbb
ja
hlt
cli
mov
mov
fiadd
je
xor
mov
out
or
clc
jp
aam
mov
ret
retf
stc
stos
imul
sbb
sbb
cld
dec
out
clc
mov
xchg
popf
test
stc
xchg
push
mov
push
sbb
adc
loop
mov
jmp
test
dec
or
jns
call
fidiv
pop
loop
ss
jb
push
fimul
bound
lods
sbb
jmp
imul
leave
stos
loope
movs
mov
nop
cmp
jmp
inc
ja
jo
fadd
loop
pop
add
xor
add
push
jge
and
sbb
mov
or
adc
daa
cmp
paddsb
push
mov
movs
cmps
xchg
stos
push
cwde
out
push
fdiv
mov
cmp
inc
imul
dec
add
(bad)
xor
adc
jmp
xchg
add
(bad)
sbb
stos
xchg
fcomi
dec
xchg
sbb
fsubr
and
pop
push
and
xor
(bad)
jne
xor
in
ja
adc
int3
aas
cli
lds
cld
aas
add
test
and
fiadd
fidiv
jae
enter
mov
stos
enter
aaa
cmp
in
sbb
xchg
fist
out
jp
fidiv
sub
xchg
into
mov
cwde
test
xchg
sbb
xchg
pop
das
inc
test
push
js
push
lea
or
lea
out
imul
dec
mov
pop
add
inc
lods
jae
push
mov
jge
push
pop
mov
mov
sbb
mov
mov
dec
stc
in
fld
pop
(bad)
lea
sbb
mov
xchg
lahf
adc
pop
je
pop
xlat
add
stos
jg
and
add
(bad)
test
repnz
xchg
in
hlt
repz
loop
ins
xchg
sbb
mov
or
adc
xchg
fwait
cmps
dec
pop
and
jmp
mov
add
icebp
pop
(bad)
loop
lods
int3
mov
mov
(bad)
in
xchg
sub
lds
(bad)
lahf
sub
scas
mov
and
outs
test
test
jecxz
inc
sti
jb
ret
ds
cmps
adc
fisub
or
mov
jge
bound
pop
pusha
jmp
dec
add
(bad)
out
mov
pop
inc
mov
sub
into
mov
sbb
aaa
pop
dec
inc
sbb
aad
lds
and
hlt
add
sbb
data16
test
dec
mov
mul
mov
jne
test
inc
dec
lods
and
aam
pop
xor
inc
inc
push
mov
fiadd
hlt
mov
and
inc
loope
out
sbb
ins
(bad)
or
sbb
int3
fdiv
lods
mov
cmc
(bad)
shr
dec
popf
push
xchg
ret
push
push
mov
jo
push
fimul
mov
inc
mov
lea
out
ins
scas
mov
(bad)
and
push
xor
pop
(bad)
and
inc
add
aas
sbb
sub
test
sti
dec
fmul
jg
dec
add
jno
add
sub
scas
enter
cmp
lea
arpl
or
(bad)
mov
pop
add
ins
sub
inc
cmp
mov
call
jno
push
int3
sbb
std
lds
and
frstor
pop
mov
shr
std
add
ret
rcl
loope
adc
cmp
inc
push
add
mov
jg
movs
xchg
aaa
and
push
mov
cmps
jnp
inc
ret
inc
mov
adc
sbb
sub
fst
adc
push
dec
mov
mov
fadd
int3
mov
push
fsubr
add
fcom
cmc
lahf
jno
mov
(bad)
nop
fdiv
jmp
fcom
mov
sub
hlt
cld
aam
xchg
inc
jno
mov
fwait
call
pusha
pop
and
ss
xor
out
push
pop
or
sti
mov
pop
call
lock
mov
jmp
es
or
dec
jbe
jg
mov
ss
or
jne
push
sub
cmp
sub
stos
fimul
adc
sti
scas
and
rcl
and
or
rcr
into
mov
push
mov
and
push
dec
cmp
and
inc
mov
aad
popa
(bad)
ret
out
jp
fcom
inc
xor
pop
in
inc
sub
xchg
xchg
xchg
cli
clc
std
xor
dec
sub
cmp
(bad)
std
bound
cmp
out
pop
and
pop
jne
jae
sub
mov
mov
xchg
and
repnz
add
(bad)
xchg
les
push
(bad)
div
mov
pop
scas
adc
jae
mov
lods
mov
pusha
xor
sbb
mov
loope
int
aam
ret
fld
and
dec
push
push
jnp
jp
push
dec
mov
jmp
pop
dec
dec
adc
jo
lahf
mov
mov
cs
dec
jge
push
lock
pushf
in
mov
mov
fisub
popf
out
jbe
add
cmp
je
jnp
(bad)
out
and
and
(bad)
out
fwait
and
aas
call
ins
mov
dec
adc
lds
jne
mov
xor
sbb
dec
add
aaa
jb
or
outs
ficomp
xor
push
in
pushf
and
cmp
loop
adc
cwde
leave
mov
xchg
xlat
adc
inc
mov
sub
dec
lods
sbb
popa
dec
sar
mov
test
addr16
inc
push
loopne
xor
cmc
adc
jb
adc
dec
cwde
pop
iret
iret
push
ja
dec
mov
xchg
inc
loope
popf
movs
push
inc
xchg
cmp
fs
pop
cld
pop
addr16
arpl
fidivr
imul
mul
pop
call
fdiv
add
fsub
test
in
xchg
xor
(bad)
std
inc
scas
loope
popa
sbb
ins
push
or
xchg
mov
sahf
rcl
xor
rcl
out
out
pop
call
ret
jae
(bad)
adc
mov
sub
scas
push
push
div
fwait
repnz
mov
inc
sub
pop
jns
mov
(bad)
fstp
xchg
or
xlat
xchg
sbb
jp
xor
aam
mov
inc
aaa
call
aad
ror
sbb
jno
sub
jmp
fwait
dec
cmp
punpckldq
aas
pop
mov
(bad)
test
je
cmp
mov
cmp
dec
loop
pop
inc
out
dec
stos
jae
mov
or
movs
mov
add
popf
mov
inc
daa
push
cdq
xor
scas
jne
jle
jne
loope
xchg
mov
bound
pop
adc
add
or
div
sahf
cmp
mov
dec
ror
jmp
sub
repz
out
jne
adc
(bad)
(bad)
mov
and
test
push
mov
mov
shl
mov
stos
mov
xor
sbb
popf
and
stc
jno
and
test
cs
hlt
mov
imul
jbe
in
sub
or
movs
mov
mov
sub
(bad)
aad
das
or
ins
pusha
lock
add
or
xchg
nop
mov
movs
dec
outs
loop
hlt
xor
repnz
cmc
cld
aam
ret
(bad)
imul
outs
mov
ss
clc
dec
jne
add
xchg
dec
lods
xchg
lods
(bad)
(bad)
mov
fmul
jne
cli
fwait
cli
and
add
push
mov
dec
mov
std
sti
push
mov
and
cmp
outs
jmp
sub
jmp
push
sbb
call
test
dec
push
stos
xor
repnz
push
in
xchg
lds
mov
and
popf
xor
neg
movs
mov
mul
loopne
and
pop
lods
mov
or
lahf
jbe
lods
push
shr
das
jle
nop
inc
cmp
xchg
stc
pop
sbb
lock
out
std
inc
push
mov
push
div
xor
shl
dec
sbb
or
sbb
add
test
add
div
bound
ror
push
pop
in
inc
std
retf
pop
sub
gs
cmps
call
jge
fist
jno
(bad)
popa
sub
xchg
jae
jecxz
mov
shr
xor
inc
cmp
push
lahf
clc
inc
dec
inc
aas
hlt
jne
mov
mov
out
lods
push
repnz
shl
jo
es
lock
or
icebp
mov
push
mov
xchg
into
cmps
jnp
mov
push
sub
jge
pusha
jb
pop
aad
jns
pop
pusha
stos
retf
inc
jno
push
ja
popf
pusha
int
lods
les
(bad)
or
scas
in
dec
add
push
sbb
xchg
mov
and
sti
test
sbb
mov
or
mov
(bad)
test
add
cld
xchg
and
jns
popa
adc
sbb
les
and
cmp
xor
and
(bad)
mov
inc
pop
stc
mov
(bad)
jo
int
int
in
xor
sbb
add
jns
xchg
jp
mov
arpl
cmp
in
and
add
mov
aam
jno
imul
add
mov
adc
pop
dec
shr
xor
fwait
loope
jnp
xchg
push
xor
mov
mov
fs
dec
(bad)
jae
ror
xchg
daa
retf
xor
adc
pusha
jne
not
add
cmps
or
retf
in
jns
arpl
push
jmp
mov
cdq
lock
lds
(bad)
mov
rcr
sbb
adc
out
sbb
outs
mov
adc
fadd
cmp
nop
cdq
gs
dec
pop
fistp
mov
mov
push
push
add
pop
or
sbb
add
mov
in
clc
rcl
fistp
(bad)
movs
cmp
scas
repz
and
add
jb
and
aam
jle
nop
xor
pop
inc
call
loop
xchg
js
cmps
mov
(bad)
es
repz
(bad)
call
fwait
cmp
or
or
out
mov
ins
sbb
pop
or
mov
popf
push
fistp
mov
pusha
js
daa
inc
adc
sbb
mov
mov
inc
sub
fucomi
into
neg
xor
mov
clc
push
push
std
push
stos
xor
adc
repz
leave
xchg
stos
xor
push
and
mov
mov
push
retf
out
pop
rcl
scas
fcomp
(bad)
xchg
dec
jle
pop
icebp
jge
pusha
add
movs
push
push
pushw
xchg
fadd
int3
push
inc
pop
movs
adc
xchg
outs
sub
xor
dec
inc
das
mov
xchg
rcl
mov
das
pop
es
pop
mov
leave
loope
sbb
shr
ins
out
fistp
leave
push
pop
test
cmp
jns
movs
add
push
inc
lahf
jae
jmp
sub
repz
call
cmp
les
mov
mov
fbld
cmp
rcl
mov
push
sbb
dec
ret
addr16
pusha
xor
mov
movs
mov
mov
mov
pop
mov
dec
adc
dec
pop
int
call
pop
(bad)
retf
cmp
sbb
paddusb
aaa
fsub
pop
push
push
fs
push
inc
jb
rol
call
aam
mov
xor
push
ja
aad
add
stos
dec
mov
sbb
in
clc
leave
dec
ds
mov
push
inc
jg
data16
lahf
and
les
add
inc
stos
test
adc
jnp
mov
adc
xchg
cmps
paddq
dec
popf
stos
and
ins
movs
push
xor
adc
loop
fadd
repz
test
pusha
jmp
sti
or
and
fbld
mov
std
shl
mov
mov
xchg
popa
and
and
cdq
xchg
push
mov
imul
outs
xchg
push
sub
adc
dec
test
div
(bad)
repz
stos
sub
int
icebp
mov
and
imul
(bad)
outs
cmp
pop
sbb
xor
mov
out
shr
mov
xchg
adc
and
loope
mov
inc
pop
shl
repnz
or
loopne
jb
retf
cmp
sbb
sbb
sbb
xor
xchg
adc
inc
pop
xchg
aas
push
sub
outs
sti
(bad)
mov
div
pop
push
test
xor
lock
das
outs
cs
push
xchg
push
sar
dec
inc
fistp
sbb
outs
dec
inc
dec
add
sub
jns
jbe
jmp
mov
jmp
or
adc
and
ficomp
adc
punpckhbw
out
stos
inc
push
dec
std
mov
hlt
lods
adc
fwait
mov
and
mov
push
mov
stc
push
jnp
cmp
push
jmp
push
jb
test
int
fimul
cmp
pop
int3
push
pop
pop
addr16
xchg
aaa
mov
and
or
sub
in
shl
pop
in
(bad)
or
mov
cs
and
xchg
push
or
add
dec
int3
and
sub
jp
mov
cmps
xchg
or
xor
retf
jp
push
xor
push
jae
(bad)
xchg
lock
or
sub
das
fldenv
xchg
jl
aas
fwait
mov
mov
pop
pushf
(bad)
fidivr
push
sbb
jnp
loope
mov
xchg
ret
into
sub
fild
test
mov
arpl
or
rol
or
lds
lahf
sti
pop
dec
mov
mov
xchg
or
adc
sub
pop
jle
movs
call
pop
pop
jp
fidiv
fdivr
jbe
jnp
lods
es
add
mov
mov
xor
xor
mov
mov
mov
push
fistp
(bad)
and
stos
repnz
adc
mov
sbb
ds
sbb
jns
push
and
fimul
aaa
sbb
dec
or
sbb
add
dec
jecxz
cs
push
iret
mov
push
mov
jg
cmp
dec
inc
mov
mov
mov
jne
pop
push
jmp
mov
xchg
sbb
sbb
mov
jns
sbb
inc
aas
retf
mov
into
aad
add
pusha
sub
aaa
sbb
jg
test
call
fst
push
das
pop
or
les
jp
out
jo
mov
fild
cmp
xchg
mov
pop
cmc
fs
out
lahf
les
inc
xor
dec
cmc
inc
cmp
cdq
sub
pop
push
outs
pushf
mov
retf
ja
aas
sbb
pop
js
jl
dec
rol
xor
jbe
imul
les
mov
add
sbb
bound
or
ret
cwde
cmp
loop
add
mov
xchg
mov
(bad)
fwait
enter
test
mov
sar
cmp
scas
jl
mov
push
loop
mov
pop
test
scas
scas
adc
pop
stc
ss
pusha
sub
push
or
xchg
call
hlt
inc
out
call
sti
mov
daa
out
test
adc
sbb
leave
cmp
adc
and
test
sub
sub
jl
js
out
push
adc
sti
test
ds
push
jno
xlat
xchg
inc
dec
ror
adc
cs
movs
test
out
push
pop
jecxz
lds
jbe
and
adc
push
imul
jae
and
xchg
jp
jmp
nop
stos
sahf
jbe
cmp
sbb
pop
sbb
data16
or
xlat
sbb
jb
add
lods
xchg
or
sbb
xor
inc
jno
ss
mov
jmp
pop
stos
dec
lods
mov
or
jmp
jg
cmp
push
mov
dec
movs
icebp
ss
mov
or
arpl
adc
sar
ja
in
sti
and
iret
test
jg
call
ret
fst
ds
jne
or
xchg
jmp
pushf
and
popf
movs
pop
mov
stos
mov
cmp
in
mov
loop
pop
mov
cmp
out
mov
inc
ret
repz
jbe
mov
add
scas
call
aad
adc
or
gs
xchg
dec
fs
dec
out
std
out
push
das
mov
mul
mov
xchg
push
outs
inc
mov
cmp
mov
push
add
mov
ins
jo
sbb
jmp
fs
cli
xchg
cmp
ins
in
mov
pushf
lds
push
ror
rol
jo
out
out
stos
(bad)
mov
mov
movs
pop
clc
(bad)
sbb
jo
test
mov
mov
imul
mov
xchg
arpl
dec
sbb
gs
push
push
mov
cmps
pop
test
pop
fs
es
leave
cmp
test
mov
popf
cmc
sbb
inc
xchg
test
repnz
xchg
(bad)
outs
pop
sbb
lock
dec
mov
in
fwait
pop
fdiv
mov
mov
test
(bad)
xchg
das
inc
cmp
jg
iret
pop
ds
pop
arpl
mov
(bad)
les
fcom
stos
dec
xchg
xchg
aaa
adc
mov
aaa
inc
(bad)
(bad)
repz
xor
cmp
not
add
iret
or
pop
fcmovb
mov
jb
loop
in
or
imul
int3
xor
jl
call
mov
data16
add
mov
pshufhw
mov
shl
inc
jecxz
inc
nop
loope
call
ss
or
xlat
ins
and
sbb
push
mov
in
push
lock
aas
adc
xchg
xor
dec
mul
xchg
std
push
inc
jge
sub
out
dec
push
push
das
fwait
xor
sub
out
xor
mov
or
mov
adc
test
icebp
fdivr
addr16
(bad)
in
or
push
in
sub
or
int
jmp
(bad)
inc
stos
fistp
sbb
adc
sbb
xchg
pop
in
or
mov
in
jg
cmp
xchg
push
cmp
jns
in
outs
cli
faddp
cmp
into
cmp
lahf
xchg
fmul
mov
adc
adc
xchg
imul
add
cld
adc
mov
ss
rcr
jns
fucomp
adc
jnp
je
pop
jmp
pop
nop
pop
push
mov
xchg
push
ja
xchg
in
in
in
mov
adc
cmp
push
in
sbb
inc
xor
xor
outs
aas
push
mov
push
fucomip
hlt
cmp
ins
inc
mov
retf
push
dec
push
pop
jnp
push
mov
inc
scas
adc
xchg
xor
pop
daa
dec
push
jp
ins
xchg
cmp
jg
pusha
in
das
xor
test
adc
jbe
jle
cld
jle
jmp
mov
fwait
je
jnp
fs
(bad)
fcom
loopne
(bad)
rcl
(bad)
cmp
std
aas
inc
jmp
test
xchg
xchg
mov
mov
mov
dec
mov
jle
mov
add
in
retfw
inc
shl
and
push
add
xchg
pop
cmp
fdiv
mov
fld
add
test
xchg
int3
cmps
dec
hlt
push
jmp
jo
ins
or
cmp
pop
imul
jb
sbb
or
mov
rcl
mov
in
or
sbb
dec
cmp
jno
dec
cmp
outs
xchg
and
in
shl
inc
frstor
les
mov
add
es
outs
mov
or
pop
mov
mov
mov
ror
iret
jb
lds
scas
inc
jae
fmul
jmp
mov
hlt
pop
out
push
fcmovnb
xchg
adc
mov
call
sub
add
push
add
pop
in
push
and
push
or
fsubp
sub
scas
mov
mov
dec
sbb
call
(bad)
sbb
pop
or
ins
cli
cld
ret
popf
jb
xchg
addr16
ins
mov
pusha
les
mov
(bad)
mov
lods
das
es
scas
pop
scas
xor
repz
repnz
jl
jmp
std
mov
pushf
in
cmp
lods
leave
xor
bound
mov
or
mov
inc
pop
mov
enter
cmp
pop
(bad)
rcr
cdq
or
addr16
jp
add
in
cdq
ret
in
(bad)
push
jle
dec
or
ds
jnp
inc
add
adc
push
ss
cmovns
sub
and
loope
or
iret
lods
adc
jbe
aas
inc
inc
sbb
mov
pushf
ret
into
sub
xlat
inc
and
push
lea
pop
test
(bad)
mov
ins
test
push
sbb
aaa
test
call
(bad)
jne
inc
(bad)
cmp
pushf
cs
mov
data16
mov
stos
in
lods
and
dec
cmp
ja
add
test
mov
cmp
adc
nop
jmp
xor
das
jmp
push
and
mov
inc
cmp
dec
div
in
mov
mov
dec
fst
lock
cmps
jmp
pop
inc
ret
sbb
xchg
cmp
or
xchg
dec
retf
das
jb
dec
xchg
or
das
test
loop
lods
pop
adc
test
stos
daa
cmp
cmps
mov
mov
and
loopne
jle
sbb
or
add
int3
dec
jmp
rol
in
mov
cli
cmps
jle
cmc
jmp
clc
inc
(bad)
push
mov
enter
jo
outs
push
mov
mov
fst
mov
(bad)
jo
lock
sbb
shl
inc
sub
(bad)
push
ss
shl
mov
test
and
mov
into
xlat
das
gs
repnz
fwait
imul
int
xchg
adc
pop
into
jmp
ror
inc
cli
and
mov
adc
dec
cmc
cmps
and
paddusw
or
cmp
test
getsec
ror
add
jle
int
sub
xor
js
mov
(bad)
es
sti
cmps
or
in
lahf
xchg
mov
mov
cli
ins
fldcw
into
xchg
sbb
es
pop
xlat
loopne
jl
ret
in
push
sub
inc
and
into
push
lods
sbb
clc
add
mov
jle
pop
xor
mov
pushf
pop
mov
xlat
test
pushf
int
hlt
scas
jns
sar
push
ficomp
jp
cmp
shl
or
aas
mov
in
sbb
adc
stc
xlat
fnstsw
bound
push
rol
in
int3
mov
stc
mov
test
rcl
stos
fadd
ret
sbb
ror
jg
loop
retf
jp
ror
push
inc
aas
push
cli
mov
repnz
jg
or
hlt
mov
out
popf
das
mov
adc
fs
(bad)
(bad)
arpl
mov
inc
cmp
adc
enter
ficom
xor
test
xchg
add
cmp
cmp
add
cwde
cmp
ret
xor
dec
xor
dec
ret
xchg
inc
mov
(bad)
out
inc
imul
or
pop
mov
jge
sbb
xor
jmp
daa
lahf
call
adc
std
in
mov
jmp
jmp
and
mov
or
mov
call
xor
in
or
out
cld
dec
and
add
sub
mov
fbld
adc
outs
adc
xchg
fdiv
sub
cdq
loopne
mov
or
sub
or
push
cdq
jae
pop
lahf
sbb
push
cmps
inc
jbe
icebp
loopne
jno
clc
ficomp
add
sub
cdq
int
shl
sub
pop
pop
iret
xchg
jbe
gs
(bad)
shr
lds
iret
cmp
les
jbe
xchg
jmp
sahf
adc
dec
push
cli
dec
pop
cmp
(bad)
mov
mov
mov
jp
add
add
mov
icebp
xchg
movs
or
js
sub
cmp
(bad)
sbb
cmp
mov
adc
mov
mov
push
jge
xor
es
lahf
cwde
mov
fs
jle
pop
mov
cmp
jge
mov
out
jno
push
adc
dec
jns
xor
jmp
sub
xchg
les
iret
gs
cmp
fisttp
ret
das
clc
in
lahf
not
call
jge
int
test
mov
mov
pop
or
push
jnp
out
cmp
pop
stos
adc
into
loopne
loope
xchg
xor
sub
minps
xor
ja
cmc
dec
cwde
neg
movs
pop
pusha
ret
sbb
xchg
jo
fidiv
add
popf
jl
(bad)
aas
dec
pop
movs
sub
es
imul
ss
sbb
inc
and
mov
mov
or
test
pop
dec
fdivr
in
stos
cmp
add
mov
mov
push
out
jmp
or
dec
gs
(bad)
out
inc
sbb
sahf
cmp
ds
pusha
xor
iret
pop
mov
hlt
adc
lock
jbe
inc
stos
push
jnp
adc
popa
jmp
inc
cmp
ror
std
dec
ret
add
adc
(bad)
cmp
aas
jo
or
outs
scas
push
mov
pushf
xor
adc
sbb
lahf
rcl
in
cmp
cmp
in
inc
push
or
xor
out
cdq
loopne
jne
fwait
dec
jbe
in
aaa
inc
stos
push
test
dec
repnz
mov
js
push
fcmovnb
data16
jns
push
lods
xor
retf
popa
adc
imul
int
(bad)
jp
shl
repnz
and
adc
jecxz
pop
loop
(bad)
dec
cwde
and
test
mov
ss
fxch
mov
jp
dec
jbe
std
dec
int3
mov
imul
and
jbe
test
and
leave
xlat
dec
mov
or
jmp
push
push
gs
(bad)
std
out
cmp
or
xor
inc
pop
daa
test
cmps
mov
out
xchg
mul
xor
add
push
in
xor
inc
and
xchg
add
xlat
sub
icebp
(bad)
in
pop
jge
xchg
(bad)
neg
push
push
int3
jmp
push
iret
sti
mov
push
mov
push
daa
arpl
mov
in
dec
dec
xchg
and
shl
imul
lds
sbb
sbb
mov
fild
adc
push
dec
mov
ret
jnp
mov
sub
out
xor
and
enter
loopne
push
int3
or
nop
mov
rcl
in
nop
fldenv
fcmovnbe
movs
outs
leave
out
pop
xchg
pop
sbb
retf
mov
loope
test
mov
xchg
pop
xor
xlat
mov
and
dec
mov
jmp
jecxz
outs
mov
out
retf
(bad)
push
test
and
xchg
sbb
mov
scas
movs
rcr
repz
cli
cmps
jge
stos
pop
push
and
xchg
jl
cmps
sbb
mov
jg
mov
and
ins
or
(bad)
jle
pop
push
daa
xchg
dec
xor
jl
add
sub
sahf
jne
scas
adc
xchg
adc
jecxz
je
mov
pop
lahf
cmp
mov
or
xchg
ins
std
pop
or
inc
push
fidiv
dec
test
cdq
bound
ror
sbb
push
jecxz
cmp
stos
inc
mov
fwait
aaa
add
dec
test
add
sbb
mov
pop
pushf
mov
jecxz
retf
xor
aas
nop
and
fidiv
adc
push
in
and
mov
xchg
dec
js
add
jbe
push
push
test
stc
or
xor
es
mov
mov
dec
mov
adc
je
mov
jnp
repnz
add
aad
xor
test
and
xor
mov
addr16
and
add
push
dec
outs
pop
jnp
es
aas
or
adc
cli
shl
pushf
pop
push
repz
in
push
mov
mov
hlt
xor
cmp
add
repnz
dec
dec
push
xchg
adc
or
push
(bad)
sbb
js
adc
jl
pop
xor
cmps
ja
xor
in
je
xchg
int
sar
dec
mov
cmps
mov
mov
push
xchg
cmp
outs
or
(bad)
jle
hlt
add
scas
ins
mov
or
cmp
clc
sub
mov
xor
inc
fnstcw
cmps
ficomp
and
jo
enter
mov
int
sbb
test
lods
inc
pushf
mov
cli
xchg
pop
and
sub
call
outs
push
pop
mov
call
mov
mov
aaa
fldcw
call
or
dec
xchg
mov
mov
in
cmp
sar
xchg
data16
xor
add
sbb
(bad)
out
and
mov
lds
leave
shl
arpl
adc
jo
push
data16
mov
or
(bad)
xor
pushf
sbb
xor
jbe
and
test
dec
pop
fcomp
push
ror
jo
xor
or
(bad)
pop
mov
(bad)
out
xchg
retf
jbe
(bad)
pop
cdq
out
enter
adc
cs
mov
mov
adc
lods
cmp
adc
jge
(bad)
shl
popf
dec
dec
ins
rcl
sub
cdq
fst
mov
imul
mov
mov
daa
sub
icebp
xlat
add
fsub
pop
inc
stos
add
add
push
hlt
stc
mov
xor
mov
pop
int3
jb
in
movs
aad
mov
add
sahf
out
push
(bad)
daa
pop
call
neg
mov
or
(bad)
lds
add
sti
sub
das
mov
and
add
fcomp
adc
mov
pusha
pop
int
pop
cdq
cwde
add
stc
add
xor
cmp
sbb
xchg
push
or
aas
out
loop
xor
cvtps2pd
xchg
pop
mov
(bad)
push
sbb
ror
sub
data16
dec
push
xlat
push
out
int
ins
adc
mov
arpl
xchg
and
clc
int3
cmp
push
cmc
into
jno
lock
adc
cmp
stos
(bad)
jns
ins
lahf
sub
sbb
xor
jg
add
stos
push
xor
mov
scas
mov
shl
enter
popf
xchg
stos
cwde
push
mov
rcr
inc
popf
loop
jo
loop
push
push
push
jmp
int
jae
xchg
out
pop
popf
xlat
ss
inc
gs
mov
scas
add
add
rol
mov
rcr
and
or
mov
sub
pop
out
repnz
mov
sahf
or
shr
inc
inc
(bad)
ror
mov
aad
(bad)
out
jns
cmp
xchg
(bad)
xchg
sbb
cmp
idiv
je
jle
lea
scas
(bad)
and
fmul
or
movs
push
xchg
jecxz
jg
(bad)
imul
inc
sub
xchg
and
cmp
outs
push
mov
cmp
jecxz
xchg
pop
ins
xor
call
cs
dec
pop
daa
retf
xlat
mov
jno
hlt
mov
mov
(bad)
mov
pop
pop
ficomp
cwde
scas
int3
cmps
jecxz
ror
fcom
stc
(bad)
in
sti
and
jns
xchg
and
loop
rcl
jecxz
in
jno
push
dec
scas
adc
stc
out
pop
push
jge
cli
sti
push
das
fmulp
shr
out
inc
fdivr
leave
pop
movs
icebp
adc
lock
adc
adc
lods
lds
repz
nop
pop
movs
in
sar
cmp
mov
pop
(bad)
push
inc
retf
and
in
and
dec
aam
jg
sub
jno
or
iret
pop
jecxz
jmp
push
dec
cmp
fistp
or
dec
inc
orps
cs
inc
cdq
mov
je
dec
in
jecxz
sub
mov
mov
(bad)
adc
push
(bad)
sub
cmp
cmp
lock
and
into
xor
sub
bound
sub
out
das
js
or
mov
xor
mov
jns
in
mov
mov
gs
cmps
push
je
push
leave
pushf
and
lahf
add
in
xchg
cmp
mov
inc
inc
mov
mov
add
iret
inc
xor
dec
movs
dec
repz
loopne
pushf
sub
popf
add
int3
test
sbb
fcomp
inc
sar
mov
ja
xlat
enter
or
mov
(bad)
arpl
jge
test
pop
repz
adc
xor
je
adc
fs
std
push
pusha
mov
cwde
xlat
or
leave
scas
addr16
mov
add
sbb
mov
shl
pop
rol
das
or
cwde
fwait
imul
pop
mov
pop
xchg
mov
popa
sbb
clc
sahf
cmp
leave
shr
dec
sbb
movs
sbb
popf
mul
cmp
outs
cmp
or
(bad)
jmp
rcl
lahf
mov
push
enter
xchg
scas
mov
jmp
lahf
mov
aam
and
sbb
mov
popa
xchg
test
lock
adc
sbb
in
dec
dec
sub
pop
cmp
sbb
pop
sub
push
data16
ja
xchg
shl
cmp
test
movs
scas
pop
loop
mov
sbb
ins
cmp
lahf
loop
pop
inc
ja
ss
out
(bad)
jns
aaa
sahf
mov
(bad)
test
jmp
aaa
neg
sbb
lfence
mov
push
ror
mov
xchg
stc
scas
scas
jg
sahf
stos
arpl
je
ret
xor
outs
xchg
pop
mov
inc
xor
ds
fcomip
cdq
sbb
out
mov
mov
and
inc
out
outs
jp
addr16
movs
jo
pop
sti
cmp
push
fadd
gs
bound
xor
loope
jae
jl
push
jle
call
cmp
outs
mov
pushf
pop
std
test
add
sbb
xchg
(bad)
pusha
out
je
push
aad
xor
dec
jl
inc
stos
push
loope
mov
add
add
in
xchg
adc
ins
sub
dec
test
scas
mov
mov
add
xor
sbb
test
icebp
mov
data16
xor
pop
ds
cli
jmp
adc
std
inc
mov
fs
xchg
(bad)
lahf
addr16
and
out
pop
cmp
les
retf
jbe
add
cmp
rcl
xchg
clc
stos
mov
pop
or
sbb
int3
daa
jnp
mov
sub
pop
stos
dec
fstp
sbb
push
in
jne
sub
or
scas
leave
cmc
xor
mov
dec
mov
ds
cmp
sub
dec
cwde
xor
scas
scas
clc
scas
mov
sub
clc
xchg
sbb
push
int3
jns
mov
pop
mov
cli
movs
aaa
xchg
pop
push
retf
xor
cmp
jbe
mov
pop
sbb
push
sub
aam
ins
retf
inc
pop
mov
push
jge
aaa
push
pop
ja
test
sub
cmp
das
stc
inc
inc
test
daa
fist
sbb
mov
bound
or
aas
pop
push
lds
lock
repz
mov
lea
mov
mov
adc
test
loopne
xchg
fstp
pop
push
fdivr
mov
sbb
mov
pusha
mov
mov
cmp
mov
mov
mov
xor
mov
test
scas
xor
movs
iret
jb
in
in
dec
adc
test
cdq
add
rol
jl
pop
push
pop
xor
clc
add
adc
movs
retf
cld
lods
mov
ret
sbb
dec
dec
xlat
jg
mov
mov
test
push
mov
push
or
sbb
dec
jp
hlt
adc
int3
jne
push
adc
push
adc
add
arpl
call
fsubr
cld
mov
imul
mov
outs
daa
addr16
mul
cmp
movs
ds
enter
in
in
push
xchg
cli
scas
mov
cmp
mov
sub
scas
mov
mov
or
cmp
cmp
stc
cmp
dec
aad
mov
(bad)
sar
mov
in
push
mov
dec
pop
das
mov
mov
leave
sub
lds
cmp
cwde
cdq
xor
adc
repz
xor
push
jmp
cmp
mov
imul
pop
dec
mov
push
div
xchg
outs
(bad)
cld
push
sbb
mov
pop
aaa
pop
pop
xchg
push
shl
mov
jmp
mov
int3
dec
add
push
or
hlt
mov
mov
add
cmp
push
dec
inc
enter
in
outs
mov
pop
shl
mov
call
xlat
retf
retf
rcl
xadd
jecxz
ja
add
pop
imul
stos
add
xchg
push
cmp
mov
and
mov
(bad)
pop
ins
push
imul
sub
cmps
pop
loope
inc
cmp
or
sbb
and
iret
adc
sbb
nop
xchg
out
sub
mov
sub
mul
inc
xor
or
retf
(bad)
mov
lahf
fcmovbe
add
ret
cs
adc
cmp
add
xlat
aam
mov
jbe
(bad)
jno
shl
pop
repz
fmul
in
cmp
call
dec
(bad)
mov
jne
call
test
fistp
add
sbb
mov
imul
pop
mov
stos
cmps
push
sbb
or
sbb
lds
je
out
add
stos
mov
dec
inc
add
jae
scas
repz
pop
mov
jo
inc
mov
xchg
pusha
add
sub
scas
loope
dec
jle
push
mov
leave
and
pop
rcr
jp
in
movs
dec
and
in
add
and
lods
xor
or
jecxz
inc
lods
rol
jns
loope
in
stos
pop
inc
sub
mov
cli
and
cmp
fst
retf
aaa
lock
pop
xchg
sbb
movs
sub
test
clc
outs
imul
outs
dec
cmc
aas
mov
mov
and
pop
test
push
fidiv
jbe
adc
adc
imul
les
pop
addr16
imul
adc
(bad)
jmp
imul
shl
iret
enter
les
icebp
adc
and
mov
in
cld
(bad)
xchg
inc
das
sub
(bad)
lock
jge
shl
data16
out
nop
pop
js
sahf
test
cmp
shld
pop
out
xchg
mul
add
ins
xchg
sub
xor
stos
iret
add
rcl
fisubr
retf
inc
ins
scas
bound
(bad)
sbb
mov
clc
mov
lds
aad
push
xor
arpl
push
xchg
pop
cld
add
(bad)
data16
or
inc
mov
cwde
mov
sub
sbb
pop
sub
shl
fnstenv
mov
dec
repz
xchg
cmp
jno
or
(bad)
sub
cmp
pop
jno
cmps
gs
ret
inc
jno
les
sar
jae
cmp
sbb
(bad)
out
push
scas
data16
push
cs
lock
fcomp
mov
retf
cli
and
test
jb
mov
cmp
mov
and
lea
push
cmp
sub
mov
(bad)
sar
daa
sbb
or
call
in
add
jg
repnz
jb
jo
pop
ds
retf
xor
jb
(bad)
mov
mov
dec
mov
jae
cld
mov
shl
push
xor
adc
dec
mov
fucomp
test
jo
jge
ja
dec
xchg
jge
cmps
ret
jnp
pshufw
hlt
loop
adc
push
and
jp
ret
clc
mov
jns
je
adc
cmc
push
retf
push
xor
and
movs
pusha
mov
mov
mov
push
dec
mov
shr
das
repz
int3
cmp
icebp
xor
cs
inc
push
pop
mov
paddusw
xor
hlt
std
mov
outs
inc
lods
es
hlt
loope
(bad)
imul
inc
push
push
fnsave
xchg
enter
es
mov
cmp
mov
popa
sbb
cmp
mov
cmp
outs
adc
xor
sbb
add
sub
or
xchg
test
cwde
adc
call
adc
jecxz
pop
jno
div
pop
sar
fs
push
jl
je
mov
xchg
jo
lods
shl
rcl
retf
dec
xchg
sub
xor
popf
loope
hlt
mov
and
sub
clc
movs
retf
int3
mov
mov
clc
push
iret
push
imul
test
add
and
sub
mov
sbb
daa
nop
jp
or
fld
aam
push
mov
aam
add
inc
fnsave
pop
fild
mov
or
push
lods
and
adc
jne
int
mov
cmp
xchg
call
jg
sbb
mov
mov
xchg
rcr
sbb
out
into
(bad)
dec
aam
xor
adc
lahf
jnp
inc
(bad)
out
mov
jno
or
call
fdivr
(bad)
jmp
push
jne
push
add
adc
test
sbb
jae
inc
mov
shl
jecxz
dec
mov
jmp
pop
sbb
retf
test
jmp
xchg
in
repz
inc
psrad
mov
inc
rol
push
stc
jp
sar
xchg
sbb
rcl
in
shl
add
and
sbb
adc
repnz
enter
jle
jne
nop
movs
add
(bad)
retf
les
std
ret
mov
in
je
test
lods
pusha
shr
loopne
(bad)
out
jbe
mov
gs
daa
xor
push
movs
out
icebp
dec
adc
and
ins
xor
push
jmp
inc
mov
in
sbb
loope
dec
jl
stos
add
retf
ins
dec
dec
ja
loop
popf
or
sbb
mov
mov
ret
push
inc
or
sub
addr16
nop
add
xlat
mov
pusha
rol
scas
fucom
sub
add
test
repz
mul
push
ret
mov
or
xchg
gs
or
sbb
out
mov
jmp
pushf
repz
jmp
clc
mov
(bad)
dec
popa
push
jmp
sub
aas
mov
retf
addps
sbb
dec
sti
out
cmp
bound
push
jmp
or
ja
fwait
pushf
dec
push
inc
jb
sub
lods
mov
mov
into
xchg
cvttps2pi
jno
(bad)
frstor
out
push
mov
ja
xchg
mov
cs
add
mov
lea
popa
lahf
outs
adc
lock
stos
ret
hlt
xchg
imul
push
rcr
arpl
popa
or
enter
mov
aaa
mov
not
adc
mov
or
mov
mov
cmps
sub
scas
call
sbb
leave
imul
(bad)
pop
pop
das
or
and
lds
xor
cmps
aas
popf
sti
popa
sbb
jmp
stos
fisttp
mov
mov
adc
out
mov
fldenv
cmp
push
mov
mov
xchg
mov
outs
ror
scas
or
in
add
push
lods
shl
lods
sub
or
loope
mov
and
or
rcr
(bad)
stc
mov
inc
cmp
adc
stos
enter
loopne
mov
pusha
jns
(bad)
out
xchg
sub
mov
inc
xchg
mov
jo
retf
mov
jmp
jbe
(bad)
stc
jmp
iret
push
in
ins
add
xor
and
bound
out
sar
sbb
ss
js
je
mov
dec
movs
sub
sbb
ss
sub
mov
xlat
dec
push
cmp
cmp
dec
sti
jecxz
sub
daa
pop
pop
lods
enter
ja
mov
(bad)
fsubr
shl
sti
mov
dec
mov
repz
pop
ret
sub
ss
inc
aad
into
int3
cwde
ss
push
fwait
adc
add
add
movs
or
out
int3
popa
lds
sub
es
and
les
out
leave
imul
jp
(bad)
and
sub
ins
add
fmul
and
in
mov
mov
jecxz
push
mov
xchg
jmp
in
mov
xchg
gs
in
cmp
jmp
mov
js
inc
push
jmp
push
inc
fstp
push
inc
in
xchg
pop
es
ret
sbb
xor
mov
add
shl
std
or
popf
or
jmp
out
call
xor
sub
xchg
cmps
scas
jo
adc
cmp
stos
push
(bad)
sub
mov
call
push
cmp
sbb
fsubr
xchg
or
(bad)
outs
fdiv
inc
sub
adc
pop
inc
ds
(bad)
icebp
movs
cld
imul
sbb
mov
movs
sbb
sbb
add
mov
jns
add
ja
mov
out
dec
pop
mov
out
push
cmp
(bad)
adc
cmp
jnp
(bad)
clc
pop
sub
mov
sbb
call
push
rol
out
xchg
push
cmp
xchg
in
imul
cmp
mov
or
xchg
pop
dec
push
loop
ins
out
adc
and
mov
push
xor
mov
(bad)
cmc
push
fcmovne
jbe
mov
pushf
cli
lods
cmc
sub
aaa
inc
retf
cmp
repz
fidiv
aam
shr
shr
cli
and
or
je
(bad)
and
push
xor
fadd
jg
dec
add
(bad)
push
inc
ss
push
out
loopne
leave
jbe
and
add
cld
push
jo
pusha
cld
mov
add
mov
cmp
cld
aaa
mov
xchg
fwait
jnp
jl
test
aas
sti
loope
das
pushf
xchg
lahf
mov
cmp
xor
ret
jmp
in
pop
retf
int3
pop
mov
add
mov
jns
cmps
push
xor
jge
mov
lds
pop
repnz
arpl
sbb
stos
(bad)
adc
inc
jmp
repz
dec
daa
mov
dec
mov
mov
push
ficomp
(bad)
xor
mov
and
inc
popf
outs
rcr
sbb
(bad)
test
mov
rol
inc
mov
aad
dec
lods
cmp
imul
call
aas
and
mov
push
das
inc
cmp
xor
ins
xchg
retf
aaa
and
xchg
fwait
dec
cmp
or
aas
movs
and
(bad)
stos
int
push
dec
mov
or
xchg
scas
jb
adc
jl
jnp
pop
cmc
shl
test
test
mov
fwait
nop
and
sub
stc
test
and
inc
mov
in
loope
xchg
mov
add
std
inc
lods
jmp
retf
movs
xchg
lahf
jbe
or
out
retf
ins
jbe
retf
jmp
push
dec
jl
sub
mov
adc
test
imul
movs
adc
jmp
push
pop
fldenv
data16
lahf
inc
iret
ins
iret
fidivr
mov
mov
aam
sub
mov
je
dec
(bad)
jmp
push
inc
dec
inc
push
pop
and
xchg
mov
push
in
lea
jp
jbe
lds
das
pop
(bad)
pop
push
imul
dec
cdq
in
mov
jg
push
inc
das
jp
add
pusha
cmps
cmp
hlt
xchg
stos
je
mov
retf
pop
jmp
mov
mov
jle
jg
pop
mov
imul
rol
test
jmp
loope
(bad)
adc
mov
add
int3
fs
push
jg
cmp
stos
mov
aad
mov
fsubr
daa
mov
and
stc
ins
cdq
jle
(bad)
and
dec
pop
mov
add
push
xor
pop
inc
xchg
pop
outs
repnz
cli
test
sti
mov
jns
inc
ret
movs
and
pushf
xlat
mov
mov
cmps
lds
inc
fadd
xor
stos
dec
and
pop
call
sub
jbe
inc
int3
into
add
mov
(bad)
loop
pop
les
and
sub
es
push
xor
push
jmp
mov
out
or
mov
xchg
push
push
fist
xor
sbb
xlat
inc
jne
sbb
jg
int3
int
mov
out
inc
shl
push
and
dec
xchg
lods
xchg
(bad)
iret
mov
in
pop
adc
(bad)
xor
hlt
adc
repz
inc
fst
test
bound
dec
add
sub
jge
xchg
mov
push
or
lods
cli
(bad)
jl
ret
cdq
dec
add
mov
leave
mov
add
push
add
or
mov
daa
adc
ds
adc
cdq
mul
ins
test
sbb
push
adc
sar
xor
ja
jmp
sub
retf
xchg
mov
cmp
dec
test
test
cs
or
adc
fdiv
mov
cmp
push
dec
dec
mov
ins
or
(bad)
pop
inc
jns
and
(bad)
cs
pop
cmps
lahf
mov
push
jecxz
or
fucomp
lods
jmp
add
xchg
jo
or
lods
shl
xchg
jns
sbb
pusha
and
outs
dec
push
mov
and
push
mov
ins
adc
xor
out
lods
mov
sub
inc
xchg
mov
addr16
es
dec
inc
call
retf
pushf
mov
lods
cmp
and
aas
mov
jecxz
ja
outs
bound
imul
xor
ins
and
vandnps
mov
pusha
pop
cmps
es
cli
arpl
mov
rol
(bad)
fcomp
out
mov
xlat
scas
jmp
cmp
jo
outs
mov
ds
mov
cmp
fst
or
mov
lods
fs
out
adc
push
in
push
xchg
inc
jge
pusha
out
pop
ret
outs
std
cmp
add
sbb
sti
jnp
xchg
(bad)
dec
int
shl
and
push
cmp
pop
movs
(bad)
inc
jmp
inc
dec
and
(bad)
cwde
scas
adc
pop
inc
sub
jmp
in
mov
add
jb
retf
pusha
pushf
ins
test
ret
dec
imul
jl
xchg
enter
xchg
add
popa
shr
shl
push
dec
retf
cmps
shl
addr16
arpl
or
pop
dec
cmp
mov
and
and
add
add
xchg
inc
ficomp
out
jle
and
iret
dec
mov
inc
dec
mov
pop
sbb
div
in
sbb
das
sti
and
nop
int
(bad)
je
cmp
scas
jbe
sbb
popa
pop
fadd
inc
mov
out
pop
shl
push
cmps
fsubr
inc
jecxz
add
mov
fimul
xchg
mov
adc
icebp
mov
mov
mov
pushf
(bad)
loop
dec
lea
movs
das
mov
ins
xchg
call
dec
repz
lods
cs
or
cmp
xor
add
jae
pop
shr
mov
and
jns
loop
inc
xchg
jmp
push
push
dec
push
movs
inc
push
mov
mov
ins
jns
sbb
cdq
sub
mov
jp
push
push
xchg
adc
sub
dec
adc
jns
pusha
outs
jnp
(bad)
cwde
xor
mov
rol
dec
or
lock
jp
test
xor
mov
pop
push
dec
sar
sbb
daa
pop
jg
push
mov
inc
push
(bad)
pop
jge
test
pop
sbb
mov
pop
jmp
or
dec
lods
sar
aaa
pop
cmc
cmp
sbb
(bad)
gs
ss
mov
das
pop
iret
adc
jecxz
mov
and
jmp
fldcw
movs
faddp
mov
addr16
cmc
cwde
sbb
imul
mov
jp
push
jno
stos
adc
xchg
push
ds
or
xor
test
aad
add
mov
push
pushf
out
jge
std
stc
idiv
push
clc
scas
aam
adc
push
xchg
jmp
sar
jns
loop
and
jns
mul
add
out
dec
mov
ja
xchg
iret
jae
add
jl
mov
cli
xor
mov
xchg
das
xor
mov
inc
and
scas
call
cwde
cmp
dec
shl
xor
push
or
ret
fsubr
inc
pop
sti
dec
loopne
das
or
mov
jne
mov
adc
cmp
add
push
lock
push
in
jl
inc
jmp
shl
add
ret
mov
arpl
ds
dec
(bad)
imul
adc
arpl
or
mov
clc
pop
lock
pop
(bad)
mov
xchg
loope
and
jne
lds
into
shl
int
mov
cli
mov
mov
lahf
mov
xchg
call
mov
popa
or
cli
loope
aaa
(bad)
gs
adc
pop
mov
fldenv
stc
jmp
popa
lods
jnp
pop
add
in
pop
int
mov
xor
jmp
pop
sahf
pop
js
mov
fsub
dec
lods
jns
aad
ins
mov
stos
or
in
dec
cmp
cmp
(bad)
icebp
fs
jae
pop
sub
jo
dec
inc
pop
and
(bad)
jnp
jg
xchg
push
push
mov
ret
jns
rcr
stc
cld
(bad)
ds
stc
and
cmp
fsubr
lods
xor
pushf
mov
push
sbb
int3
mov
mov
in
(bad)
push
in
(bad)
push
mov
xor
clc
outs
sbb
cmp
jl
std
call
call
sbb
inc
jmp
xchg
mov
aad
fwait
adc
loope
mov
movs
add
xchg
ss
popf
pop
jno
and
cs
out
test
jne
adc
or
dec
pop
and
and
xchg
wrmsr
push
idiv
loopne
xor
dec
aaa
rcl
sub
(bad)
cmp
dec
fdivr
std
mov
dec
push
sbb
pop
or
xchg
and
fst
leave
addr16
adc
sub
push
add
stos
pop
inc
sbb
and
jl
repnz
mov
jl
mov
pop
and
out
and
xor
pop
cmps
ficom
pop
mov
xor
mov
and
adc
xor
test
jne
out
sub
test
adc
ins
je
xlat
pop
pusha
into
inc
pop
and
sbb
and
ins
jle
pop
pop
xor
mov
jmp
adc
dec
(bad)
scas
and
sbb
xchg
loop
xor
fmul
fiadd
iret
mov
sub
dec
xchg
add
jp
iret
mov
data16
je
xor
test
mov
es
ja
jae
nop
popf
and
mov
mov
xchg
xchg
scas
xor
add
ficomp
mov
jp
xor
aam
sbb
xchg
fldcw
hlt
mov
out
fs
push
pop
xchg
adc
ja
scas
dec
sbb
add
jge
pop
test
cmp
adc
sbb
mov
dec
mov
loope
fmul
out
sar
or
in
call
sti
in
int
loopne
or
pop
aaa
mov
or
paddd
test
int
sbb
pop
loopne
(bad)
ins
(bad)
sub
test
fild
push
cmps
(bad)
xor
test
outs
push
je
inc
dec
push
mov
xor
cmps
repnz
cmp
retf
mov
shl
pushf
or
jge
fsub
imul
mov
outs
adc
ret
mov
mov
jns
dec
jbe
test
lea
std
xor
popf
adc
popa
add
cmps
mov
mov
lds
or
jbe
and
inc
push
inc
cmps
xor
xchg
dec
(bad)
cmps
cli
ret
xchg
es
push
aad
out
cli
cmp
mov
scas
add
mov
out
inc
mov
xchg
jg
xor
aam
cmpps
sub
out
add
xchg
dec
loope
ds
scas
test
push
aaa
inc
or
jge
js
fisub
inc
pop
in
shl
popa
cmp
lea
test
add
mov
aaa
mov
push
test
xchg
xor
adc
dec
std
cli
dec
fistp
jl
xor
ds
aam
iret
dec
pop
pop
and
jb
int3
push
xchg
movs
pusha
xchg
daa
jp
add
xchg
shrd
in
jmp
retf
xchg
into
mov
xchg
xchg
dec
aad
movs
push
bound
xor
mov
push
inc
lds
loope
stc
je
fldcw
out
adc
xchg
out
inc
pop
dec
(bad)
aam
mov
(bad)
fsub
pop
dec
jg
ror
repnz
call
pop
or
xchg
mov
push
and
call
movs
iret
mov
outs
call
pop
int3
leave
mov
hlt
(bad)
mov
pop
hlt
push
pop
xor
pushf
and
push
inc
lods
fist
cdq
add
inc
dec
lock
and
inc
mov
mov
in
int
pop
pop
push
popf
xor
int3
dec
ja
outs
mov
xchg
adc
inc
loope
mov
icebp
sbb
jbe
mov
ret
loop
mov
mov
out
repnz
xor
pop
lods
aas
shl
mov
jge
pop
and
sub
inc
jae
push
jg
loope
cmp
out
loopne
jnp
sbb
push
inc
jmp
and
mov
add
aas
stc
and
sbb
lea
or
add
js
and
stos
adc
inc
fld
add
xchg
movs
pop
push
or
mov
dec
add
addr16
mov
lea
jecxz
(bad)
inc
test
int
call
fisub
push
and
pop
stc
retf
bound
xor
jge
inc
push
mov
mov
fs
and
daa
scas
inc
fwait
cmp
out
ins
fimul
mov
mov
mov
cli
mov
push
sub
out
enter
and
mov
ins
or
in
xchg
cmp
stc
fdivrp
outs
cmps
int3
push
mov
fsubr
ins
inc
mov
pop
(bad)
nop
mov
adc
jmp
xor
inc
mov
fidiv
pop
sbb
pop
push
setnp
xchg
retf
mov
enter
(bad)
mov
shr
cwde
adc
mov
mov
mov
into
rcr
jo
ds
ror
jnp
(bad)
aam
imul
nop
test
jge
clc
mov
xor
shl
and
jmp
add
pop
push
mov
pop
bound
out
dec
outs
fiadd
rcr
xchg
call
dec
mov
imul
fistp
mov
jl
push
pusha
mov
mov
xchg
arpl
mov
(bad)
cwde
jae
jge
(bad)
mov
mov
sub
sbb
test
call
sub
dec
cdq
dec
ror
inc
pop
psubq
adc
cmp
push
pop
push
sahf
pop
lds
fcmovb
pop
loope
push
adc
loopne
xchg
inc
jne
or
stos
pop
leave
pop
out
jmp
sub
push
in
push
mov
sbb
pop
xchg
std
imul
enter
xor
aad
enter
push
fcom
mov
je
das
jle
(bad)
pop
clc
mov
addr16
cmps
imul
jnp
jmp
mov
jno
dec
mov
icebp
jg
das
pop
pop
(bad)
cld
pop
adc
pop
jp
xchg
ficom
cmp
(bad)
fisttp
ja
int3
cmc
rcr
fild
xlat
mov
push
pop
xor
popa
test
and
bound
sbb
cmp
mov
adc
jecxz
push
loopne
xor
mov
or
fprem
sbb
aas
mov
(bad)
add
mov
retf
in
fs
mov
mov
loopne
fwait
inc
stos
popa
loopne
int3
cli
test
(bad)
in
shl
fcom
out
mov
imul
inc
ins
imul
adc
in
mov
dec
or
aas
mov
jmp
loope
xor
inc
rcl
repz
loopne
lahf
jo
pushf
mov
xor
inc
out
cmp
xchg
(bad)
pop
inc
xchg
mov
mov
ins
call
inc
ins
aas
in
retf
jge
add
jl
xor
movs
cmps
jo
xchg
pop
cs
je
sub
xchg
pop
mov
jbe
push
outs
mov
dec
loope
dec
rcl
push
(bad)
adc
icebp
hlt
jp
pop
xchg
mov
test
dec
inc
sbb
in
aad
loop
dec
loopne
das
jno
mov
ins
iret
ds
pop
inc
pop
fs
adc
mov
fwait
test
mov
rol
inc
push
sub
neg
jne
in
frstor
lods
push
add
xchg
ins
push
mov
mov
ins
sub
add
add
idiv
aad
mov
iret
mov
mov
retf
xor
test
mov
add
mov
adc
xlat
retf
out
retf
call
repz
rcpps
sbb
jbe
ss
adc
ret
sahf
jp
mov
add
cmp
pushf
cmp
call
mov
inc
or
scas
inc
clc
out
pop
sbb
enter
and
in
cmp
inc
cmp
mov
xor
add
inc
jmp
inc
cmps
and
test
and
push
inc
dec
adc
or
sti
mov
pop
clc
icebp
cmp
inc
jne
cmp
inc
jae
pop
loop
lock
popf
movs
pop
and
shl
popf
inc
pop
inc
add
in
sahf
sbb
idiv
xchg
(bad)
rcl
xchg
push
sbb
mov
mov
mov
mov
nop
mov
popa
idiv
dec
popf
mov
sar
and
inc
scas
push
mov
dec
sbb
sub
push
mov
xor
adc
mov
shl
sbb
jp
add
leave
aad
inc
fwait
dec
jne
sub
or
in
pop
les
repnz
adc
sbb
hlt
repz
pop
cmp
data16
jbe
xlat
jmp
cwde
aam
sub
mov
arpl
loope
inc
dec
sub
gs
mov
fneni(8087
mov
retf
xchg
and
adc
loopne
nop
repnz
sub
dec
mov
cmp
jg
dec
add
xor
inc
inc
pop
sub
dec
(bad)
popa
xchg
inc
or
and
mov
in
push
xor
sbb
mov
jecxz
lds
push
cli
inc
ret
fs
mov
push
sub
xchg
dec
inc
sbb
mov
jns
fdivr
(bad)
ror
add
inc
mov
sbb
sub
cld
pushf
into
xchg
popf
sar
sbb
cmp
cdq
fcmovne
xchg
imul
pop
mov
mov
loope
test
xlat
js
cmps
xchg
sub
or
loop
push
in
hlt
je
test
sbb
aam
ret
mov
pop
in
xchg
(bad)
sub
adc
inc
mov
loop
mov
dec
les
pop
inc
mov
ret
jo
ins
sbb
xor
popf
sbb
add
jecxz
jnp
jae
(bad)
xchg
les
push
pop
ret
ss
(bad)
dec
xchg
rol
mov
imul
xor
lahf
scas
mov
xor
aaa
push
xchg
dec
retf
adc
pop
aas
rep
es
je
or
and
jecxz
mov
and
shr
scas
push
xor
arpl
sar
std
aad
pop
out
mov
sub
in
jl
push
cmp
daa
or
neg
sub
(bad)
add
pop
dec
or
cdq
adc
adc
dec
fld
out
mov
jge
pop
sar
jbe
mov
mov
xchg
push
std
cmp
pusha
mov
les
jns
dec
repz
push
push
sbb
(bad)
fldcw
cmp
std
jbe
in
push
inc
test
push
cdq
and
mov
lods
xchg
mov
leave
data16
iret
ret
sahf
repnz
jge
pop
mov
jae
imul
pop
inc
or
lds
add
pop
xchg
in
lods
popf
cmp
neg
cmp
dec
movs
inc
push
dec
mov
cmp
xor
imul
scas
sub
mov
mov
push
stos
jo
out
ins
int3
pop
and
add
inc
xchg
inc
push
ret
icebp
dec
cld
cs
stc
mov
rcl
mov
sbb
and
imul
not
fisttp
dec
pop
rcl
jg
and
aad
lods
and
sbb
sbb
vmwrite
mov
iret
rol
nop
push
mov
into
call
in
jge
mov
xor
inc
add
and
lods
jnp
jae
xor
mov
jmp
mov
lahf
mov
cmp
aad
mov
dec
(bad)
loopne
and
xor
inc
cwde
stos
sbb
dec
push
push
push
sub
push
inc
sub
inc
pop
jle
fwait
add
loopne
xlat
out
int
jae
pushf
lea
mov
cmp
pop
push
loope
fndisi(8087
(bad)
add
pusha
or
ret
cld
(bad)
test
mov
inc
dec
shl
aas
mov
add
pop
cdq
popa
das
xor
into
std
(bad)
and
ss
and
sub
sub
jbe
xchg
push
nop
xchg
mov
mov
jg
mov
(bad)
in
jge
dec
stos
lahf
xor
add
xchg
retf
mov
mul
loop
pop
xlat
sub
test
mov
mov
idiv
stos
fmulp
sahf
stos
lea
mov
jp
lods
xor
or
clc
and
imul
pop
dec
jmp
(bad)
mov
shl
and
sub
call
pushf
and
xor
pop
pop
inc
jmp
fiadd
dec
xchg
or
cmp
add
enterw
sub
test
add
push
add
xlat
sbb
mov
dec
fsub
inc
outs
aaa
or
jle
adc
or
shr
xor
std
ds
jnp
or
dec
inc
mov
adc
cmp
ds
out
xor
inc
cmps
xchg
jno
cmp
fs
sar
ret
xor
jb
push
mov
outs
mov
sub
in
mov
and
(bad)
jae
into
scas
xor
and
mov
add
pop
out
shr
sete
mov
mov
jecxz
fwait
popa
mov
(bad)
add
rcl
push
cmp
call
outs
xrelease
mov
cmps
mov
push
faddp
mov
pop
fsubr
mov
dec
push
loopne
mov
mov
jns
dec
xchg
xor
pop
fwait
pop
inc
outs
mov
sbb
or
mov
push
jns
test
(bad)
inc
pop
push
or
aaa
mov
mov
jmp
push
xchg
pop
stos
inc
jg
addr16
(bad)
mov
jnp
repnz
push
enter
fcom
or
pop
ror
push
scas
mov
adc
cmp
test
scas
cli
popa
cli
fisub
aas
push
pop
mov
pop
call
sbb
jle
into
push
adc
enter
inc
shl
xor
stc
in
fcmove
outs
ret
fld
iret
inc
les
push
jnp
xlat
test
xchg
pop
mov
mov
mov
cmp
sar
dec
and
test
xchg
jo
loope
pop
dec
push
add
cli
dec
fmulp
loope
aam
jmp
sbb
push
leave
lds
xchg
psubb
jbe
ret
jne
gs
add
adc
imul
pop
push
push
push
das
mov
lods
aad
jne
repz
or
mov
clc
add
add
addr16
in
in
and
(bad)
sub
push
dec
xor
inc
sti
or
adc
icebp
fiadd
and
pop
xor
sub
cld
xchg
mov
jb
fidivr
adc
scas
ja
enter
hlt
les
pushf
cdq
pusha
fisttp
std
add
mov
cmp
add
ret
pop
xchg
dec
pop
into
and
mov
test
pop
mov
lock
mov
mov
add
sub
and
mov
and
or
cmps
aas
in
retf
es
pop
pop
sbb
jp
dec
jne
dec
add
stc
mov
bound
mov
xchg
and
mov
fsub
daa
popf
mov
rcr
push
add
inc
jns
scas
shr
and
mov
out
and
shr
retf
dec
and
sub
gs
movs
movs
sbb
xchg
mov
popf
add
pop
adc
cmps
pop
loopne
push
retf
or
mov
sti
mov
int
cld
push
add
mov
cli
call
mov
stos
jecxz
in
ja
repz
dec
pop
movs
or
sbb
xor
sub
sub
cmp
mov
fnstenv
push
dec
jae
cmp
lds
outs
jne
ds
test
or
cmp
cmp
and
dec
and
stos
outs
aas
cwde
sub
test
in
xchg
mov
int
cmp
fadd
(bad)
or
mov
lock
test
or
repz
xchg
ret
aaa
push
or
pop
arpl
dec
test
dec
push
xchg
jb
fisttp
inc
test
es
bound
xchg
lea
mov
idiv
pop
sub
or
push
and
jbe
sub
addr16
(bad)
mov
xchg
mov
cmp
xor
jp
push
or
push
sbb
pop
ins
push
sti
rep
mov
js
pop
inc
xor
xsaveopt
sbb
add
adc
nop
out
push
int3
pop
adc
mov
xchg
xchg
mov
popa
pop
in
xchg
xchg
neg
lahf
jmp
mov
jns
jnp
xchg
mov
sbb
mov
mov
sub
fs
repz
inc
push
mov
mov
adc
inc
ins
outs
sbb
xor
gs
mov
jl
imul
stos
test
mov
or
or
xlat
cld
mov
adc
sahf
sbb
xchg
das
ja
addr16
and
xor
inc
in
in
lods
inc
and
(bad)
dec
(bad)
loop
mov
enter
mov
(bad)
iret
inc
lock
shl
mov
sbb
mov
imul
fimul
mov
lods
loopne
cmp
adc
daa
shl
push
dec
cwde
pusha
jg
dec
pop
sub
inc
adc
jnp
cmp
mov
jns
mov
mov
cmps
xchg
xchg
in
fcmovnu
(bad)
movs
or
push
dec
xchg
loope
push
push
or
inc
push
cdq
pop
jne
adc
test
je
movs
lock
jne
mov
adc
std
test
in
xchg
jle
xchg
lods
jl
(bad)
cwde
jge
int3
stc
jo
repz
rol
or
(bad)
pop
sahf
pop
xchg
imul
or
xchg
xchg
popa
enter
dec
imul
xor
aaa
(bad)
mov
nop
add
ja
cmp
sar
loope
sub
out
repz
cmp
mov
push
shr
push
movs
das
sar
hlt
(bad)
jnp
imul
sbb
inc
fst
sub
enter
lahf
neg
push
mov
xchg
stos
push
push
fbstp
push
mov
mov
mov
mov
dec
jb
aad
xchg
mov
jnp
push
mov
cmp
aaa
dec
loop
pop
pop
jb
sub
dec
sbb
mov
xor
jb
repz
in
in
fidivr
sbb
pop
cmp
push
enter
push
out
jns
rcr
fwait
push
add
sub
push
jno
cmps
mov
sbb
dec
mov
pop
dec
ins
leave
inc
pop
sbb
mov
cdq
fld
popa
out
mov
mov
inc
outs
xor
fild
xchg
popf
push
add
and
pop
out
inc
cmp
jo
enter
je
rcr
imul
mov
fst
int
test
mov
enter
shl
push
or
sti
push
mov
push
mov
pop
enter
adc
daa
pop
push
in
xor
in
push
rcl
mov
xchg
ds
jmp
jo
mov
add
dec
std
lea
pop
push
outs
and
jge
out
lds
ins
call
xchg
test
dec
pop
leave
out
(bad)
sub
mov
test
imul
dec
test
pop
dec
xchg
pop
xchg
out
mov
sar
cmp
inc
mov
loopne
push
jae
push
cli
hlt
adc
ret
inc
xor
mov
(bad)
(bad)
push
pop
xlat
cmp
das
pop
mov
xchg
mov
inc
jo
shr
iret
cmp
test
inc
xchg
add
mov
xor
into
pusha
push
xchg
ds
adc
inc
push
(bad)
xchg
push
inc
push
aas
add
cmp
xchg
call
mov
cmps
sar
pop
jb
in
aam
sbb
dec
cdq
jo
push
fcomp
cmp
sub
lods
inc
cmc
pop
lahf
jmp
dec
lods
sub
fwait
(bad)
enter
out
dec
cmp
add
jmp
mov
nop
and
xchg
add
div
mov
xchg
pop
xchg
push
cmp
jge
loopne
dec
nop
aas
dec
scas
jmp
push
stc
pop
adc
add
inc
fcmovb
and
adc
xchg
jbe
inc
cmp
clc
js
std
scas
pop
or
jl
lock
xlat
(bad)
jbe
xchg
mov
sbb
fwait
aam
mov
push
test
jbe
pop
xor
sub
xor
int
cmc
push
imul
out
inc
inc
dec
stos
push
pop
and
sub
push
push
jb
mov
icebp
aam
pop
jg
out
cmp
dec
lahf
lahf
fs
ds
xchg
push
jmp
into
stc
jb
mov
inc
mov
push
mov
sub
hlt
mov
enter
cmp
jne
sub
test
jg
push
shl
sti
xlat
jae
out
call
or
xchg
jge
mov
adc
leave
in
push
xor
lahf
nop
cmp
jo
(bad)
nop
push
psllq
fnstenv
imul
pusha
and
lea
cmp
dec
test
jo
repz
pop
test
inc
imul
outs
jb
inc
fmul
pop
adc
(bad)
loop
movs
retf
ja
dec
jle
inc
xor
lock
mov
rol
scas
daa
ror
sti
loope
mov
cld
dec
pop
mov
cmps
xor
out
cmp
adc
pop
adc
aad
(bad)
fucomi
cmp
pop
retf
sub
cld
pop
sahf
fstp
push
jg
sbb
jle
sbb
mov
xchg
or
icebp
cmp
dec
jecxz
popa
push
jo
fxch
jo
(bad)
jmp
dec
and
fiadd
dec
fimul
bound
adc
rol
or
dec
mov
mov
dec
clc
dec
fwait
sbb
fdivr
mov
xchg
int
cmp
jnp
cmp
add
and
mov
add
xchg
repz
pop
in
test
daa
cmp
test
sub
enter
sub
or
inc
dec
adc
popf
daa
neg
lea
iret
push
gs
scas
mov
mov
or
movs
or
xchg
jmp
add
pop
vmovq
and
cwde
mov
scas
shl
mov
dec
pop
and
sti
xchg
jbe
mov
loopne
pop
sahf
mov
cmp
xor
dec
movs
adc
add
dec
fwait
jne
aad
scas
sti
ds
inc
push
mov
movs
loopne
movs
mov
xchg
jb
out
sub
shl
cmp
scas
test
js
sahf
(bad)
jne
add
imul
mov
push
adc
aad
into
stos
mov
or
rol
mov
lea
cmp
setl
xchg
pusha
dec
shl
shl
jp
inc
pop
sub
sub
fild
les
test
and
cmc
dec
jge
movs
rcl
arpl
mov
cmp
cdq
imul
fwait
loope
enter
push
pop
cmc
xchg
xchg
(bad)
in
es
arpl
mov
adc
call
and
xchg
fwait
aam
sub
lds
outs
jge
mov
push
in
neg
stos
inc
mov
or
or
jmp
mov
test
dec
push
jno
mov
add
adc
sbb
jmp
pop
pop
clc
jne
push
cmps
adc
fld
mov
cmps
retf
mov
iret
dec
add
mov
sub
mov
jmp
aam
in
xor
push
mov
repnz
(bad)
imul
inc
das
sub
adc
aam
and
pop
inc
aas
or
dec
add
(bad)
ficomp
cmps
cs
aas
mov
outs
bound
mov
mov
(bad)
xchg
sbb
lods
in
and
ret
hlt
ja
cmps
repnz
sti
xchg
inc
cmps
mov
arpl
call
sub
arpl
mov
sbb
add
push
xchg
loopne
pop
pop
les
xor
jmp
sbb
mov
cmp
push
cmp
jno
loop
fistp
daa
mov
sahf
mov
jb
push
lock
mov
nop
xchg
repz
sub
inc
lods
in
push
add
in
mov
adc
add
lds
push
jb
inc
retf
icebp
mov
retf
mov
mov
pop
add
ret
pop
and
shl
out
ror
xchg
cmp
fwait
sub
lea
lods
jg
ja
mov
mov
lods
mov
std
les
dec
inc
pop
aam
jmp
cdq
or
xor
jmp
xor
xor
or
(bad)
js
xchg
ret
jo
xor
cwde
xchg
mov
ror
fstp
cmps
jmp
jne
gs
outs
and
int
arpl
sbb
mov
xor
or
mov
sub
mov
sti
loope
add
xor
add
add
mov
jo
cmp
cs
lods
in
addr16
add
cmp
add
ins
mov
xor
fs
rcl
lods
dec
push
sub
ret
adc
lods
jns
outs
call
adc
rol
jl
leave
pop
ret
enter
repz
hlt
lods
push
or
adc
xor
pop
shl
xlat
jmp
ins
adc
div
je
mov
and
addr16
jbe
je
mov
je
fisubr
(bad)
xchg
sbb
jmp
in
sbb
pop
jne
lods
je
xchg
or
inc
jno
stc
in
mov
push
ins
imul
adc
shr
inc
add
movs
and
xor
jecxz
xchg
outs
shl
add
push
push
inc
shl
imul
outs
mov
pop
es
cmp
adc
mov
add
fisttp
js
jbe
jge
mov
cmp
pop
in
mov
out
int3
mov
inc
nop
inc
mov
ds
adc
fmul
inc
repnz
fs
outs
jmp
movs
sbb
jmp
sbb
into
push
std
push
dec
fsubr
jge
repnz
ja
pop
dec
hlt
test
cmp
sbb
out
lock
movs
imul
int
mov
dec
add
pusha
cmps
or
scas
or
mov
cmc
adc
xor
out
(bad)
jg
mov
test
dec
adc
and
sub
aad
sub
cmps
push
xlat
icebp
xchg
sbb
pop
pushf
push
sbb
jnp
fisttp
imul
jo
fdiv
inc
test
sbb
mov
mov
jno
sub
mov
fdivr
or
jp
xor
icebp
mov
ja
sti
ja
cmps
xor
mov
clc
add
inc
cmc
push
and
stos
sbb
stos
mov
cmp
(bad)
out
shl
push
repnz
mov
leave
into
xchg
jno
push
jp
aad
clc
clc
and
outs
or
and
retf
mov
out
pop
dec
imul
das
xchg
test
in
iret
mov
cmp
cmp
nop
cli
into
fnstenv
ret
add
test
or
jmp
inc
std
jno
adc
jbe
cmp
in
mov
imul
mov
notrack
ret
sub
cmps
ficomp
mov
mov
jne
outs
mov
sub
test
sbb
(bad)
adc
cmps
xor
(bad)
adc
jmp
retf
mov
sub
push
nop
push
ficom
leave
mov
sbb
inc
xor
and
inc
sbb
pop
dec
sbb
mov
sbb
and
sbb
mov
push
cmp
ja
xchg
xchg
xchg
xor
jnp
ja
int3
push
ins
les
shl
imul
mov
gs
aaa
and
rcr
shl
pushf
test
pusha
js
jnp
inc
jo
xchg
inc
into
sub
sbb
sbb
pusha
cmp
in
shl
push
enter
and
jmp
jp
fld
mov
xchg
gs
pusha
fwait
inc
(bad)
pop
in
dec
lahf
popa
push
cwde
fisubr
cdq
inc
nop
cmc
test
inc
call
int3
cmp
and
jecxz
adc
push
mov
pop
(bad)
mov
inc
bound
out
(bad)
adc
rcl
push
mov
(bad)
mov
xchg
arpl
mov
mov
adc
jp
sbb
push
mov
sbb
inc
mov
stc
inc
(bad)
mov
sbb
out
std
xor
retf
out
xlat
test
mov
mov
push
aad
sbb
loopne
sub
test
(bad)
mov
mov
loop
(bad)
or
lahf
lods
dec
or
xor
aaa
ins
repnz
jp
in
inc
out
ins
sub
cmps
xchg
stos
sbb
neg
int
arpl
retf
add
and
ficomp
add
push
pop
imul
xrelease
mov
dec
fs
dec
addr16
inc
and
ins
jg
cmp
das
inc
fild
int3
leave
clc
addr16
mov
nop
push
fdiv
pop
test
bound
or
mov
inc
mov
dec
mov
adc
ins
les
xlat
or
jbe
stos
int
fnstcw
imul
fdivr
dec
dec
dec
mov
add
adc
and
sub
lds
jl
lock
and
mov
push
xchg
test
xchg
fld
shr
fwait
out
jae
lock
or
push
mov
inc
loop
xchg
and
add
cmp
fsubp
fmul
jb
pop
enter
push
jne
pusha
stos
dec
mov
cmps
adc
aaa
push
iret
cmp
or
not
jne
jnp
sub
or
jge
mov
das
xchg
push
scas
lahf
mov
shl
or
add
mov
popa
ret
pop
les
out
cmp
test
or
retf
sbb
add
lods
add
fcomp
push
or
(bad)
jp
and
push
xor
xchg
lds
outs
lods
pushf
xor
loop
aad
pop
lea
enter
mov
retf
(bad)
push
retf
movs
sbb
movs
sar
out
mov
stos
adc
fmul
xchg
cmp
std
and
in
cmp
stos
je
mov
xchg
mov
adc
stos
pop
repz
imul
xchg
cmp
mov
(bad)
or
and
fld
test
add
mov
mov
jno
sub
push
je
mov
mov
push
xor
xchg
jmp
adc
cmp
dec
push
shl
pop
daa
test
dec
cmp
adc
xchg
inc
adc
pop
pop
add
and
arpl
fnstsw
daa
fsub
test
xchg
aad
sbb
cmc
jbe
add
xchg
frstor
idiv
inc
das
ins
pusha
sbb
(bad)
(bad)
fwait
inc
dec
adc
sub
scas
push
jmp
push
dec
add
push
cmc
(bad)
pop
jmp
lahf
push
mov
xor
xchg
pop
cmps
cs
cs
push
ds
xchg
fstp
loop
leave
pop
ins
adc
pop
xor
std
std
mov
jge
jecxz
cwde
shl
add
leave
movs
jp
js
call
or
or
mov
jns
sub
push
xor
dec
inc
and
inc
adc
push
mov
das
nop
push
repz
xlat
out
stc
cdq
stos
clc
cwde
stos
jne
ins
dec
jne
adc
(bad)
les
push
inc
dec
xchg
push
push
(bad)
popa
pop
jbe
mov
fild
dec
xchg
dec
xchg
nop
xor
ss
or
push
es
or
or
xchg
jl
repz
mov
clc
inc
aad
or
inc
cmp
sbb
shl
(bad)
imul
shl
pop
cs
movntps
xor
js
pop
cmp
in
in
mov
xlat
(bad)
in
movs
jae
enter
dec
popa
push
mov
in
jmp
adc
fimul
push
hlt
jmp
das
fs
mov
dec
cmps
ds
inc
fwait
sbb
pop
dec
mov
mov
mov
jne
inc
mov
push
retf
sub
mov
leave
dec
jne
mov
test
jne
push
cli
fcom
shl
mov
hlt
and
test
pop
vpcmov
lock
in
test
test
adc
jb
stc
mov
loop
(bad)
jb
neg
mov
push
into
or
cs
or
in
cmp
out
add
sbb
bnd
stos
pop
add
push
add
add
ret
inc
jmp
fdivr
lock
mov
push
cmps
out
fnstcw
outs
xchg
(bad)
sbb
cmp
or
div
cmp
enter
aas
jmp
sahf
pushf
dec
pop
outs
xchg
sub
fs
stc
xor
test
and
sub
shr
fwait
dec
clc
inc
mov
call
loopne
out
push
mov
rol
retf
stos
addr16
xlat
mov
pop
int3
inc
stc
(bad)
(bad)
ins
ds
lahf
dec
imul
dec
out
es
mov
mov
push
xlat
or
nop
sbb
push
cmp
scas
jg
test
out
aaa
mov
loope
cmps
mov
push
inc
loopne
movs
call
dec
sub
dec
fstp
out
(bad)
mov
jnp
aad
and
pop
(bad)
jb
out
jl
imul
add
femms
mov
icebp
mov
xlat
pmullw
(bad)
pop
rol
cs
sar
sbb
jne
xchg
jl
imul
movs
push
dec
iret
jge
pop
imul
lods
mov
test
mov
and
cmc
(bad)
arpl
push
or
push
or
pop
dec
out
push
push
inc
mov
xchg
or
mov
adc
jmp
aad
pop
fidiv
ud1
in
jmp
inc
retf
cwde
cwde
out
or
retf
jp
add
jmp
sub
inc
mov
sub
call
or
or
mov
ror
rcr
push
fcomi
icebp
pop
hlt
dec
ja
popa
cdq
sti
sbb
mov
shl
xor
bound
repnz
into
cli
adc
and
repnz
mov
xchg
outs
dec
mov
jmp
pop
xlat
xor
xor
inc
in
xor
ret
(bad)
(bad)
popf
jmp
push
rcl
mov
dec
jecxz
out
or
xor
rol
popf
dec
imul
dec
test
bound
adc
sar
inc
pusha
mov
ss
dec
pop
or
adc
movs
cmp
test
out
cwde
test
std
sahf
adc
or
xor
cmps
cwde
xor
and
xor
push
sbb
fsubr
nop
enter
cmc
sub
and
stos
mov
xchg
mov
add
add
loop
icebp
retf
out
pop
jle
mov
cmp
ret
cmp
add
mov
cmp
int3
loopne
push
sbb
adc
mov
jecxz
xchg
ficomp
scas
push
retf
push
out
xchg
loope
clc
push
das
inc
dec
ret
jb
pop
mov
sub
dec
cmc
and
gs
aam
shr
push
int
shl
mov
adc
pop
dec
stc
dec
(bad)
sbb
mov
fs
mov
push
jmp
nop
js
bound
sub
adc
loop
test
jecxz
ret
cmps
cwde
hlt
xor
dec
mov
sub
pop
aas
inc
add
and
sbb
inc
add
push
das
ficom
daa
pop
ja
das
imul
arpl
jl
leave
jg
cli
dec
aaa
cmp
and
mov
and
lods
or
(bad)
jno
jb
repz
mov
mov
cmp
push
(bad)
fbstp
jae
mov
retf
pop
ds
sub
add
add
cmp
dec
into
es
loope
mov
cmp
ss
das
es
ins
mov
gs
xchg
or
nop
pop
test
sub
pop
pusha
popa
mov
cdq
jbe
(bad)
out
sub
call
xchg
aas
jl
pop
es
popf
mov
or
ins
loopne
popf
(bad)
call
outs
jmp
cli
pushf
dec
add
mov
fadd
std
fs
mov
out
lock
mov
aam
jnp
sub
fbld
sbb
dec
pusha
sti
adc
sbb
cs
cmp
push
mov
jl
push
cdq
dec
sub
xchg
call
pusha
popa
dec
bound
data16
jbe
inc
mov
pushf
or
pop
add
inc
cmps
push
js
sbb
lahf
adc
inc
cs
xchg
add
in
jo
or
jne
imul
ror
inc
jge
or
mov
out
push
jbe
jne
push
fld
sub
mov
sbb
jmp
aas
jb
scas
mul
add
add
ja
jmp
ds
xchg
add
mov
ret
jns
movs
push
xor
fs
dec
inc
pop
rol
cs
cmp
cmp
jmp
fadd
call
mov
xchg
ret
push
add
push
xor
js
xchg
je
add
je
pop
out
sbb
mov
and
jno
popf
jo
repz
mov
cmp
retf
mov
adc
sbb
or
jne
sub
movs
mov
add
mov
dec
sti
test
pop
fadd
sub
scas
push
call
adc
pusha
test
jns
cmc
stos
push
das
push
stc
lea
sbb
aas
pop
push
repz
mov
fdivr
leave
adc
mov
dec
xchg
imul
shr
mov
in
je
inc
pop
aaa
jg
sbb
mov
xor
jnp
mov
pop
rol
push
jmp
mov
mov
mov
stc
add
imul
out
adc
cld
sti
out
push
test
sbb
(bad)
sbb
fs
jb
xor
lea
cmp
pusha
imul
inc
in
int
pop
push
shl
push
inc
adc
push
fisub
int
test
sub
push
push
xchg
out
xchg
fsub
adc
jle
mov
cdq
dec
pop
pop
sahf
mov
(bad)
data16
adc
mov
jmp
fstp
push
arpl
mov
ds
and
hlt
mov
or
test
int3
adc
sub
bnd
jns
jnp
out
jecxz
push
and
ret
mov
jo
dec
rcl
sub
fimul
cmc
clc
xchg
add
(bad)
jg
scas
inc
icebp
jmp
pop
lock
mov
stos
pusha
xchg
jl
lock
push
data16
es
push
adc
lahf
xchg
xchg
cwde
cmc
push
jb
xor
xchg
bound
leave
inc
cs
imul
(bad)
into
mov
xor
cmc
mov
and
sbb
add
push
push
dec
dec
pushf
daa
or
push
dec
inc
aaa
imul
scas
sub
in
cmp
jp
xchg
cmp
data16
cs
aam
and
pop
push
sahf
div
arpl
mov
push
bnd
pusha
pop
outs
gs
fucomi
mov
out
cmp
pop
push
ins
xor
sbb
xor
data16
jmp
test
mov
rol
mov
cmp
loope
leave
fidiv
mov
lahf
cmp
cmp
inc
mov
arpl
cmovno
cs
popa
xchg
loopne
and
jp
or
and
data16
call
add
push
jecxz
jecxz
dec
mov
lock
adc
enter
and
jno
jle
push
jmp
sbb
sbb
(bad)
das
or
mov
rcr
cmp
sub
pop
sub
xchg
cmc
sbb
test
push
into
add
add
mov
xor
xchg
xchg
outs
jnp
mov
aas
rol
call
loopne
aaa
jnp
lds
(bad)
add
sub
aad
push
popf
mov
adc
mov
sti
mov
mov
add
xchg
ror
push
add
add
jg
repz
xchg
dec
xchg
pop
xor
test
in
retf
mov
fidiv
ja
(bad)
add
jl
aaa
jae
jbe
pop
nop
xor
dec
push
and
cdq
sub
cmp
push
xchg
in
fwait
cmps
xchg
add
cs
loope
mov
sub
inc
movs
loopne
jge
dec
rol
cmp
cwde
and
rol
cmp
xchg
jg
dec
test
lods
adc
das
fiadd
push
retf
movs
das
fiadd
mov
movs
enter
pop
dec
ret
movs
lahf
js
dec
pop
test
sbb
outs
push
mov
jp
adc
inc
retf
aam
push
sbb
mov
jno
adc
dec
out
loopne
clc
sub
sub
bswap
pop
sbb
push
mov
(bad)
jb
adc
icebp
jp
cmp
retf
dec
xor
popf
(bad)
adc
lds
shl
in
mov
pop
das
popf
loope
dec
ja
pop
aam
pop
mov
mov
adc
jnp
push
sbb
and
mov
out
pop
or
(bad)
mov
call
jmp
push
inc
in
loopne
dec
gs
loopne
sub
add
jge
jecxz
dec
int3
sub
jae
cmp
inc
data16
bound
arpl
je
sbb
ds
sar
arpl
or
dec
ret
push
jg
lods
not
xchg
aaa
xlat
xchg
dec
jecxz
mul
and
movs
mov
ret
out
hlt
push
jne
fidiv
scas
and
ja
xor
and
xor
test
adc
and
xchg
sub
and
cmp
fimul
mov
mov
add
int3
cmps
mov
xchg
jno
std
test
ret
xchg
push
out
aam
clc
int
(bad)
pop
mov
mov
inc
push
and
das
fcomp
and
fistp
push
and
push
lods
sub
fisubr
fcom
adc
sbb
outs
jp
dec
pandn
adc
mov
add
pushf
lds
popa
pop
sub
push
pop
daa
popa
(bad)
mov
lock
xchg
sbb
shl
fcom
test
mov
(bad)
xor
ins
(bad)
mov
test
xchg
cmp
xor
aas
int
sbb
sar
mov
adc
bound
lahf
sub
call
les
adc
test
test
add
ficomp
fucom
out
shl
ret
adc
(bad)
cdq
cdq
or
sti
test
ret
lock
cmp
(bad)
dec
js
mov
popa
dec
push
hlt
outs
jno
sub
dec
jae
pop
push
push
adc
mov
and
out
mov
icebp
cmp
pop
bound
ja
rol
popa
sahf
imul
ins
leave
cdq
sub
into
data16
je
mov
push
hlt
clc
sub
jo
adc
(bad)
iret
gs
repz
jo
dec
loop
(bad)
daa
repz
mov
loop
std
fwait
jae
lods
jo
(bad)
or
mov
xor
or
cmp
pop
jbe
sub
push
popa
xchg
leave
xor
mov
sub
jnp
cwde
je
in
dec
ins
jno
(bad)
mov
int3
dec
cmp
scas
cmp
test
or
sub
repnz
ins
sub
add
je
sbb
es
jb
mov
je
push
lds
adc
lock
cmp
xor
cli
aad
(bad)
hlt
sub
pusha
ficomp
push
fdiv
ret
inc
push
mov
(bad)
jb
jl
jns
enter
movs
fdivr
shl
jg
cmps
jmp
jecxz
xchg
loope
nop
inc
mov
outs
sbb
aam
jnp
js
loopne
loopne
sbb
repz
lods
cmpxchg
push
out
retf
jmp
mov
or
pop
mov
scas
cmp
sahf
sub
jb
pushf
xor
xlat
(bad)
jmp
out
or
cmp
mov
dec
arpl
mov
daa
dec
loopne
in
test
sar
mov
xchg
cs
imul
inc
dec
lock
repz
dec
mov
cmp
cmp
or
add
inc
pop
jg
push
mov
adc
in
into
aad
mov
dec
scas
rcr
xchg
rcr
xchg
jmp
push
jnp
jg
lods
dec
jno
in
pop
cs
jecxz
(bad)
pcmpgtw
xor
out
mov
mov
lea
jo
mov
pop
shl
mov
cld
repnz
jbe
mov
retf
in
push
pushf
mov
add
shl
xlat
pop
clc
or
cmp
aas
push
jne
jg
mov
lea
xchg
adc
sbb
call
mov
or
in
or
neg
hlt
xchg
and
inc
mov
xchg
stos
std
test
xchg
les
and
push
shr
dec
movs
sub
mov
ss
jmp
les
push
scas
test
repnz
idiv
sub
jle
in
lods
mov
and
sbb
push
mov
or
jae
movs
cmp
cmp
fadd
test
sub
fild
nop
and
cmp
mov
jno
push
add
mov
jno
aas
out
jle
mov
add
jmp
(bad)
xlat
mov
ds
fxch
sub
dec
dec
sub
and
xor
addr16
dec
dec
add
call
ror
adc
aam
fcmovb
xor
sbb
xchg
fbld
adc
icebp
pop
punpckldq
jne
or
mul
jmp
mov
(bad)
sbb
(bad)
data16
cmp
addr16
push
clc
push
sub
ror
(bad)
ror
aas
stos
and
je
loopne
out
enter
int3
cmps
mov
dec
sti
pop
sar
(bad)
xor
pop
jmp
mov
fidiv
jnp
mov
es
outs
enter
dec
rol
jl
aas
mov
cmp
xchg
std
push
and
aaa
pop
jmp
dec
cdq
dec
xchg
inc
push
jmp
mov
or
movs
mov
(bad)
stc
gs
sub
adc
xor
movs
jg
inc
cmp
aad
pop
rcl
push
push
or
mov
cmp
jge
arpl
pop
imul
push
(bad)
cmp
dec
ss
dec
ds
sbb
mov
inc
xor
add
sbb
xchg
jl
jl
dec
mov
or
aam
push
(bad)
mov
or
mov
leave
mov
sub
sbb
mov
jno
and
fdiv
(bad)
sbb
push
mov
rol
mov
div
jb
cli
mov
xchg
loop
push
pop
lahf
pop
popa
push
rcr
jne
jmp
add
aaa
(bad)
fidiv
jle
inc
push
fsub
movs
shl
inc
not
xchg
pop
movs
xor
repz
sahf
xchg
mov
call
adc
fiadd
mov
ret
pop
mov
add
cli
sbb
ret
and
sbb
jno
stc
cmps
adc
or
sub
idiv
mov
ins
retf
test
add
stos
pop
inc
xchg
mov
pop
mov
jae
retf
nop
fld
xchg
adc
mov
(bad)
and
fisttp
pusha
mov
push
pusha
push
mov
jo
fldenv
ins
jge
ins
add
push
repz
mov
mov
call
or
push
cmp
inc
cld
mov
add
in
loopne
cmp
cld
out
out
mov
mov
add
dec
arpl
sbb
push
ds
inc
xor
pop
push
xchg
jecxz
jecxz
leave
jns
adc
(bad)
loopne
sar
call
jg
leave
outs
rcl
out
movs
push
push
add
pop
jae
fnstcw
mov
rol
mov
or
cmps
mov
pop
movs
stc
push
cmps
(bad)
jne
pop
add
cmps
cwde
adc
pop
pop
daa
mov
jne
and
std
and
push
scas
sub
mov
adc
test
ins
adc
sub
add
pop
in
repz
inc
movs
jae
mov
aam
(bad)
(bad)
(bad)
out
jecxz
ret
movs
lods
lahf
lahf
fistp
aam
dec
dec
sbb
cli
idiv
xchg
sub
out
pop
cdq
xor
aam
xor
lods
mov
lds
jne
xchg
sbb
mov
sub
leave
lods
fs
bound
pop
cmp
mov
in
or
in
xor
xchg
sbb
sub
push
jno
push
pop
es
push
(bad)
dec
imul
pop
push
push
(bad)
jl
jl
jecxz
push
iret
inc
add
sahf
or
jns
loopne
jo
jae
ret
test
sbb
js
cs
inc
nop
ror
mov
xchg
es
movs
retf
aas
and
loopne
push
dec
mov
aas
cli
clc
fild
adc
xor
and
xor
cmp
cwde
sub
add
sbb
push
ja
cmp
icebp
outs
sbb
mov
shl
mov
add
inc
jae
lahf
sub
dec
retf
push
push
aad
aaa
fcmovnbe
pushf
push
push
push
(bad)
jecxz
fstp
aas
nop
xchg
adc
es
aaa
cmc
mov
(bad)
aam
xchg
adc
lock
loope
ins
call
repnz
data16
enter
push
adc
cmovne
jmp
mov
aad
mov
or
push
xchg
jno
xchg
fisttp
loope
sbb
div
mov
dec
nop
push
ds
imul
sbb
pop
dec
mov
mov
(bad)
das
jns
dec
fild
inc
sahf
cmp
mov
(bad)
fwait
arpl
fadd
and
xor
scas
idiv
scas
mov
fsubr
loope
jmp
pop
and
jmp
sahf
clc
pop
test
sbb
xor
in
lods
ret
cmp
cld
xchg
outs
out
and
inc
out
xor
cmp
push
push
adc
xor
das
inc
jl
rol
lds
mov
mov
enter
popa
inc
retf
mov
xchg
mov
xchg
movs
mov
lahf
sub
ds
adc
ja
inc
lock
ror
xchg
imul
hlt
sub
pop
or
pop
add
dec
inc
out
lods
cmc
or
jmp
dec
sub
fstp
movs
arpl
and
lea
addr16
xchg
mov
popf
cmc
mov
ror
(bad)
js
test
push
dec
sub
call
movs
cmp
lahf
cmps
adc
push
mov
sbb
xor
xchg
sahf
cwde
xchg
inc
push
xchg
inc
xor
imul
(bad)
mov
mov
or
mov
fcomp
cmps
or
test
or
addr16
adc
int3
aaa
pop
inc
mov
int
loop
pusha
xchg
inc
shl
cwde
push
add
jecxz
fisttp
dec
mov
int3
sbb
js
cmps
sbb
add
cmps
jb
pop
fwait
cwde
push
out
imul
call
jge
mov
scas
mov
lock
push
movs
les
into
push
sub
push
int3
scas
int3
jb
popa
arpl
int
dec
add
imul
push
or
mov
inc
dec
and
jns
or
fwait
cmps
pushf
or
(bad)
pusha
out
adc
or
push
jne
mov
aam
test
loopne
pusha
test
ret
jno
in
mov
push
xor
mov
iret
popa
fs
xchg
int3
gs
imul
pop
adc
aaa
cmp
lahf
imul
fild
icebp
mov
cmp
pop
and
rol
bt
retf
repz
push
std
ret
sbb
popa
(bad)
cmp
xor
dec
sbb
sub
out
jno
mov
ret
daa
cs
sbb
test
pusha
scas
jne
out
cmp
cdq
lods
mov
imul
mov
mov
stc
cmps
test
loop
out
mov
add
jbe
inc
mov
xchg
daa
xchg
inc
lods
outs
not
neg
int3
(bad)
pop
adc
jmp
sub
std
icebp
cmp
add
inc
cdq
addr16
push
mov
add
inc
lock
sbb
into
sti
cmp
imul
jecxz
pushf
or
and
int3
mov
ror
ins
fcmovb
xchg
mov
add
add
stos
rol
adc
ret
dec
xchg
push
push
xchg
jle
mov
and
imul
daa
pop
inc
int
push
stc
sub
jle
int3
sahf
aad
xor
and
push
mov
dec
ins
inc
es
mov
xchg
loop
into
fdivr
cmps
dec
jl
ins
in
adc
pop
cwde
or
sbb
call
not
test
inc
inc
cmps
jecxz
push
xor
test
sub
sbb
repz
aas
hlt
ins
push
in
in
(bad)
mov
push
pop
lds
ret
sub
fs
and
push
loope
ins
inc
test
sbb
xchg
mov
pop
sar
adc
ins
(bad)
aas
out
gs
cwde
cwde
icebp
or
lods
sbb
fisttp
rol
xor
stos
jmp
pop
cmp
pop
jno
dec
adc
and
dec
sar
pop
mov
add
in
pop
push
fs
popa
pop
cmp
ficom
out
(bad)
popf
push
mov
xchg
push
mov
mov
popa
pop
mov
hlt
mov
xchg
call
push
rcr
sbb
jl
aad
cwde
hlt
lahf
add
jae
jns
xor
fst
iret
inc
not
xchg
pop
das
pop
xchg
sti
xor
int3
lods
sbb
enter
vmovupd
and
ss
std
imul
cdq
push
push
lods
(bad)
in
repz
inc
inc
xchg
adc
jns
dec
and
(bad)
test
call
adc
jb
sbb
in
pop
bound
mov
mov
adc
loop
pop
mov
fdiv
iret
push
fstp
push
adc
mov
ret
cdq
mov
mov
(bad)
cmp
mov
xchg
push
cmp
add
cmp
call
ret
adc
push
cmp
sbb
xchg
pop
ret
xchg
das
mov
lahf
into
daa
and
add
add
xchg
xor
sbb
mov
mov
punpckldq
mov
pop
and
test
addr16
sub
fcomp
sub
movs
fisub
mov
pop
mov
lods
ret
iret
cli
cmp
jbe
ins
popa
push
jo
data16
outs
div
inc
xchg
add
ds
push
outs
loopne
xchg
jbe
cld
jg
inc
adc
sbb
mov
add
call
call
ss
pushf
sbb
sar
add
jb
into
retf
shr
lods
push
cmc
xchg
mov
inc
push
mov
adc
in
add
lock
stc
jns
and
ja
jmp
loop
adc
dec
das
cmp
mov
test
add
shr
imul
xlat
push
xchg
mov
pop
cld
movs
imul
(bad)
mov
inc
adc
ror
jg
adc
(bad)
adc
aad
es
stos
shl
mov
adc
in
cmp
sub
clc
xlat
mov
fs
in
dec
add
cmc
mov
shl
dec
push
pop
movs
mov
fist
adc
jmp
adc
or
mov
pop
dec
add
xor
sti
cmp
jb
sbb
push
ds
in
in
mov
dec
xchg
sbb
leave
call
cld
sbb
inc
lods
cwde
rcr
mov
xor
or
sar
repnz
sbb
push
(bad)
xor
xchg
pushw
push
sbb
or
adc
mov
mov
pop
mov
fsub
and
xchg
xchg
jge
aaa
inc
in
pop
or
shl
push
add
adc
xchg
dec
leave
imul
daa
fstp
push
cmp
pop
cmc
out
cdq
or
lods
adc
sahf
cmp
sub
sub
cmps
pop
int3
das
scas
mov
fldcw
mov
pop
fs
mov
retf
imul
and
inc
int
mov
mov
rcl
std
pop
mov
aam
js
xchg
mov
(bad)
jle
adc
push
adc
inc
xchg
xor
sbb
cmp
dec
icebp
push
and
lahf
ss
test
(bad)
cmps
jb
sti
xor
dec
dec
aas
pop
push
and
push
dec
push
or
test
add
xor
inc
jo
or
mov
jmp
pop
lahf
inc
retf
adc
out
imul
call
lock
sbb
movs
inc
popa
movs
cwde
sahf
fld
xchg
xlat
jecxz
(bad)
cli
mov
(bad)
lock
lock
and
jp
cli
mov
ds
inc
mov
fs
cmp
jmp
sbb
push
pop
or
inc
icebp
call
test
in
and
and
jecxz
cmp
xor
test
imul
mov
in
xor
out
pop
push
push
mov
(bad)
es
and
into
pop
lods
fcom
or
cli
sub
sbb
out
ins
fxch
dec
(bad)
imul
pusha
or
aaa
pop
sbb
sbb
sub
xor
mov
test
sti
jecxz
popf
(bad)
fidiv
adc
sbb
inc
xor
jbe
adc
add
push
pop
or
fist
fdiv
cmp
in
mov
sub
sub
lods
fst
iret
aam
adc
jp
xor
movs
dec
aaa
sti
ja
scas
add
jmp
(bad)
call
sub
test
imul
(bad)
es
cmp
stos
(bad)
xchg
and
test
mov
ret
xchg
aad
pop
jno
jnp
les
scas
in
jle
pushf
and
call
dec
sub
lods
dec
jnp
cwde
out
jne
sbb
xchg
jl
fdiv
ins
add
adc
mov
ins
out
add
push
nop
dec
sbb
ret
jno
dec
cmp
sub
xchg
nop
jl
mov
push
imul
cmp
cli
jne
jo
dec
inc
jg
shr
jp
sbb
push
add
leave
mov
push
sti
or
lods
jns
pushf
clc
adc
mov
(bad)
hlt
fiadd
sbb
push
xchg
(bad)
in
icebp
xor
ins
inc
repz
and
stos
jae
adc
mov
jbe
shl
mov
add
inc
ss
jno
sbb
adc
cdq
retf
(bad)
out
call
nop
xchg
cdq
rcr
fcmovne
mov
imul
xor
mov
push
loope
fist
sub
xchg
(bad)
cs
mov
sar
push
retf
adc
jbe
xor
je
minps
adc
cmp
mov
adc
shl
fdivr
mov
scas
ret
in
fdivp
in
sahf
jecxz
or
pushf
ds
inc
xchg
int
pushf
add
jb
aad
xlat
jno
icebp
addr16
bound
mov
lock
xor
mov
lahf
pop
out
and
adc
and
fs
sub
sub
add
sub
and
adc
sbb
out
pop
in
cmp
mov
pushf
lock
cmc
sbb
push
fiadd
in
add
das
cli
push
aas
loope
jo
adc
(bad)
lds
xchg
imul
loop
push
pop
mov
outs
fwait
jmp
test
(bad)
pop
add
mov
adc
(bad)
dec
fnsetpm(287
and
test
add
(bad)
(bad)
lock
mov
mov
xchg
xlat
mov
mov
cli
mov
inc
add
or
sbb
icebp
sahf
leave
lods
lahf
out
mov
push
or
in
addr16
je
xor
xchg
ret
inc
push
movs
popa
and
outs
and
cmp
pop
xor
lods
icebp
mov
pushf
lods
sbb
cli
or
push
hlt
push
and
xor
ins
popf
sar
imul
inc
aad
xor
xor
pop
loopne
js
mov
xchg
ror
xor
mov
push
mov
cli
cmps
movs
add
add
pop
jno
sub
adc
dec
jmp
div
xchg
push
sbb
hlt
adc
or
xchg
out
cs
sbb
ja
push
adc
sub
mov
call
mov
xchg
sahf
mov
xchg
jb
xchg
xchg
rcr
or
ret
push
inc
jb
add
inc
jmp
sar
ret
pop
sub
mov
mov
bound
mov
lods
cs
stos
out
(bad)
xor
cli
imul
pop
daa
sub
mov
adc
cld
rcl
xchg
or
push
fucomip
ja
sub
aaa
les
or
inc
jge
add
mov
mov
aad
sub
dec
fdivrp
out
test
(bad)
aam
inc
into
test
call
(bad)
inc
mov
call
hlt
dec
(bad)
psadbw
out
adc
jge
push
push
lahf
(bad)
out
cmp
fldenv
ja
add
ret
xchg
xchg
outs
cmp
jp
hlt
xchg
cmps
mov
call
adc
mov
dec
mov
push
pop
mov
push
out
xchg
dec
push
and
push
sub
rcr
sbb
inc
adc
jmp
or
rol
push
sbb
mov
sub
mov
pop
in
imul
std
js
fcom
inc
das
std
jg
test
ss
repnz
push
stc
push
mov
jb
add
inc
xlat
push
call
repnz
outs
mov
xchg
and
stos
icebp
xchg
repz
mov
inc
mov
xor
jns
call
dec
push
and
(bad)
nop
push
add
mov
push
ss
or
cmp
mov
hlt
out
or
dec
je
cld
xor
das
cmp
std
aaa
cwde
lock
sub
inc
aam
pop
mov
stos
jle
fidivr
aaa
inc
aaa
push
mov
or
ss
clc
int3
sub
test
fwait
mov
ret
lods
test
push
mov
lods
pop
jl
jecxz
lods
sub
out
std
movs
repnz
push
or
sti
repnz
mov
fst
cwde
adc
out
push
cmp
pop
cld
out
imul
ja
nop
dec
jnp
es
sbb
jns
cwde
and
imul
jmp
stos
in
adc
xlat
ins
rol
das
jp
arpl
and
and
add
jae
ret
pop
es
sub
sub
xor
arpl
sbb
jle
fisttp
(bad)
loopne
fnstcw
lds
nop
or
xchg
xchg
and
push
push
xor
mov
cmps
xchg
adc
mov
(bad)
mov
push
mov
inc
mov
aaa
imul
leave
jae
fisubr
cli
push
sti
cli
push
out
(bad)
fst
addr16
mov
mov
jnp
retf
pop
into
and
push
add
push
data16
xor
sbb
pop
push
sbb
aaa
mov
ins
clc
adc
mov
rcl
(bad)
loopne
xor
clc
inc
mov
dec
ror
sub
sub
push
xchg
test
ins
dec
inc
loope
aam
ffree
(bad)
out
rcr
mov
cdq
lods
push
push
rep
mov
sbb
dec
add
sar
(bad)
jmp
jnp
outs
pop
pop
inc
loope
xchg
mov
xchg
lock
(bad)
mov
addr16
xchg
pop
lea
aaa
loop
lods
sub
add
push
push
inc
es
add
loop
xor
js
nop
pop
(bad)
fld
iret
mov
mov
jb
sub
jg
xor
xor
adc
sub
(bad)
cdq
repz
lahf
xchg
dec
icebp
sbb
test
pop
ins
mov
cmc
push
loope
xor
mov
jb
cmp
jg
jbe
into
jecxz
and
inc
scas
aaa
mov
xchg
(bad)
mov
adc
pop
mov
ss
fsub
cmp
loope
retf
or
dec
and
ins
adc
xchg
sub
cdq
scas
pop
cwde
fst
mov
sub
dec
mov
js
push
jb
es
lea
adc
imul
bound
or
int
clc
out
stos
xor
cmp
sbb
sub
and
pop
lea
mov
dec
icebp
pop
inc
pusha
dec
sub
push
mov
sahf
xor
push
mov
xor
inc
or
jmp
fld
pushf
ficomp
sub
dec
fsub
(bad)
or
xor
add
push
xor
sub
jp
mov
icebp
push
xchg
call
or
pop
pop
push
repnz
outs
arpl
cwde
push
call
mov
pop
(bad)
sbb
daa
dec
jmp
mov
sar
jmp
arpl
mov
inc
ins
push
in
cmps
inc
xchg
ficom
mov
cmp
imul
ffree
fidiv
das
test
loopne
mov
in
mov
loopne
or
enter
mov
push
jns
xor
and
xchg
aas
push
in
mov
cmp
ret
shr
aam
and
sbb
aas
arpl
cmp
scas
gs
cdq
jmp
push
dec
xor
jecxz
ret
inc
sub
cli
push
xchg
mov
xchg
xor
push
pop
mov
or
imul
mov
out
outs
fwait
sbb
jmp
das
dec
lds
idiv
sbb
inc
call
sub
fsub
add
adc
mov
ins
out
ins
test
mov
adc
ss
inc
(bad)
fnstenv
adc
imul
arpl
movs
daa
mov
bswap
or
add
int
loope
je
clc
adc
add
fs
test
or
xlat
xchg
push
adc
adc
sbb
mov
pop
ret
ret
fwait
push
adc
push
xchg
pusha
pop
mov
test
adc
hlt
rcl
mul
add
iret
data16
mov
pop
lods
fstp
aad
mov
cmp
add
hlt
mov
pop
and
in
cwde
(bad)
cdq
arpl
sub
mov
xchg
jg
mov
jmp
push
sar
fsubr
lds
add
(bad)
std
aam
lds
xchg
push
imul
sti
mov
mov
fidivr
and
bound
outs
adc
aaa
add
dec
sti
or
add
sbb
xor
ror
mov
aas
loopne
sbb
pop
fstp
sub
cmc
mov
and
enter
xchg
daa
xchg
push
add
lods
jno
daa
popf
loopne
dec
jmp
les
pop
addr16
ins
and
mov
jmp
cmps
inc
in
mov
aas
xor
mov
mov
jl
pop
jle
add
clc
lds
add
(bad)
icebp
push
mov
inc
addr16
lea
out
jb
inc
ror
pop
xor
ja
and
fwait
cmp
mov
aas
mov
jge
scas
fsub
lock
mov
push
or
add
rol
dec
cmp
cli
inc
out
aas
sar
imul
movs
in
aam
test
(bad)
fwait
push
popa
xor
xor
cmps
mov
and
sahf
sbb
push
push
push
or
pushf
mov
mov
outs
push
mov
dec
cmp
ret
mov
mov
and
cdq
mov
sub
mov
mov
push
or
pop
and
fistp
enter
aaa
and
adc
out
rcr
retf
les
pusha
cld
mov
pop
fsub
pop
mov
adc
inc
fcomp
(bad)
daa
(bad)
scas
test
xlat
or
jmp
mov
cmp
mov
arpl
ror
jg
and
mov
loope
icebp
mov
mov
pusha
out
daa
push
das
sbb
fmul
sti
in
stos
pop
movntps
inc
test
rcl
push
sub
mov
sbb
es
(bad)
arpl
(bad)
nop
push
shl
mov
xor
ins
cmp
jecxz
test
xchg
xor
pop
sbb
xchg
imul
cmp
outs
xlat
movs
dec
jp
xchg
and
rol
aad
pop
cmp
push
xor
ret
push
cs
jb
add
rcr
xchg
cmp
movs
add
mov
or
jecxz
push
popa
iret
out
pop
sub
(bad)
or
imul
xor
inc
xor
mov
je
scas
pop
popaw
fdivr
dec
xlat
nop
sub
mov
inc
mov
cmp
cs
(bad)
fs
shl
iret
sti
cdq
push
imul
or
inc
inc
pop
ret
ss
(bad)
adc
sub
pop
mul
and
push
push
loopne
mov
idiv
push
mov
ret
fcom
mov
adc
fimul
mov
mov
inc
int
pop
adc
inc
mov
repnz
mov
jmp
je
retf
jb
add
ja
mov
aas
mov
pop
xor
jp
bnd
pop
outs
sub
sbb
and
dec
sub
xchg
dec
and
dec
push
inc
iret
adc
int
mov
cmp
mov
pop
jne
xor
std
adc
sub
std
enter
imul
into
sahf
jge
lock
pop
jle
mov
pop
fcomp
xor
fist
mov
push
(bad)
scas
jecxz
xchg
outs
js
inc
in
push
cmps
pop
dec
mov
adc
in
inc
xchg
and
add
(bad)
mov
dec
mov
dec
xchg
shr
add
sbb
add
das
(bad)
out
enter
ret
addr16
fmul
mov
popf
mov
pop
xchg
pop
les
lods
adc
jno
xor
or
lock
cwde
aam
cmps
retf
adc
mov
fnstenv
mov
dec
lods
push
scas
and
fwait
int
cli
cmp
dec
dec
pusha
arpl
test
cmp
sub
mov
mov
mov
aas
adc
xchg
aaa
jmp
leave
sbb
push
push
idiv
mov
(bad)
mov
mov
movs
mul
sub
bound
jmp
push
or
jne
pushf
xor
cli
fld
xor
jb
push
cmp
fiadd
inc
cli
arpl
(bad)
cmps
pop
out
adc
out
inc
mov
lods
add
mov
fistp
std
call
dec
bound
fiadd
xor
data16
lahf
popa
scas
daa
lahf
mov
and
sbb
dec
lods
call
in
push
jae
call
sahf
mov
mov
xlat
pop
(bad)
bound
loop
mov
push
idiv
out
jo
adc
rcr
popf
mov
sbb
outs
cli
sbb
cmp
push
cmp
shl
shl
(bad)
int3
(bad)
sub
ret
out
inc
or
pop
fistp
ror
mov
and
dec
scas
les
clc
xor
xchg
cmp
sbb
iret
shl
hlt
push
and
push
adc
inc
mov
add
pop
dec
cmp
mov
cs
fcmovnu
add
enter
pop
pop
lock
popa
jbe
jmp
and
jmpw
ret
das
shl
mov
sar
mov
pop
arpl
add
cmp
jne
jp
and
outs
pop
pop
pop
xlat
add
stos
(bad)
std
std
inc
or
mov
fild
inc
xor
mov
or
inc
call
sub
out
outs
sub
bound
lea
push
pop
imul
jmp
lods
jae
retf
xchg
add
and
xlat
sti
cmp
jne
push
mov
std
mov
push
lods
cmp
loope
jae
shl
adc
push
xor
push
add
cdq
pop
mov
adc
clc
in
mov
ins
xchg
mov
push
cld
test
push
shr
movs
and
jmp
xchg
stos
pop
dec
lods
push
ret
push
repz
les
sub
(bad)
dec
lods
out
dec
xchg
dec
dec
outs
inc
and
or
add
or
fwait
dec
int
or
into
adc
push
hlt
lahf
and
in
lahf
out
dec
sahf
jne
ret
push
retf
pop
mov
into
cmp
retf
fucom
outs
inc
or
jbe
retf
xchg
ja
xchg
mov
sbb
jnp
jmp
push
mov
mov
inc
mov
fwait
cli
inc
cmp
out
mov
movs
add
xchg
mov
adc
(bad)
cs
push
jbe
xor
enter
(bad)
mov
or
mov
jno
xor
cmp
adc
adc
enter
fnstenv
das
and
stc
call
adc
jecxz
inc
mov
mov
xor
lds
xchg
dec
push
and
aad
and
add
std
sub
xchg
adc
xor
sti
test
cmp
js
mov
aad
jne
jecxz
or
jmp
xor
jne
rcl
and
push
(bad)
jecxz
or
(bad)
out
dec
push
hlt
jle
sbb
mov
mov
pusha
movs
xor
je
test
mov
(bad)
test
cmps
sub
add
not
aas
addr16
fstp
add
xchg
and
cmp
scas
leave
sbb
mov
mov
les
adc
jae
push
cmp
neg
faddp
mov
mov
fild
dec
popf
push
jnp
push
and
popf
jo
movs
test
mov
cmc
es
mov
mov
cmps
inc
xchg
jmp
or
cmp
inc
test
mov
push
call
(bad)
or
cmc
inc
xchg
pop
mov
push
mov
and
jp
icebp
xor
rol
cmp
in
mov
and
ds
push
ds
das
(bad)
mov
mov
mov
shl
cmp
lea
ins
xlat
mov
pop
pop
das
sbb
rcl
sbb
mov
push
xlat
iret
xor
xor
jbe
(bad)
cmp
ret
pop
or
mov
or
sub
daa
mov
xchg
push
outs
mov
xlat
pushf
sub
out
(bad)
sub
loopne
(bad)
retf
outs
xchg
xor
mov
jp
xor
fwait
mov
sbb
scas
pusha
push
push
fnstenv
mov
jmp
mov
pusha
cmp
xor
cmp
xor
hlt
mov
loopne
mov
ror
pop
add
mov
pop
cmp
push
rol
push
xor
mov
fbld
fdiv
pop
fcom
ja
push
mov
or
in
ja
add
mov
inc
inc
jmp
(bad)
add
or
js
mov
sub
cmp
repnz
mov
call
les
std
cs
popa
sbb
cmp
add
into
repz
(bad)
jmp
fs
imul
(bad)
stc
push
jne
in
sub
mov
mov
in
(bad)
xchg
or
scas
mov
out
scas
jmp
je
sbb
cmp
xchg
jge
sbb
aad
stc
mov
dec
xor
jmp
xchg
ss
adc
inc
aaa
and
clc
pushf
push
dec
dec
pop
int
cmc
mov
or
scas
cmp
addr16
xchg
(bad)
sbb
xchg
pop
push
das
iret
dec
inc
jbe
mov
rcr
mov
mov
shr
pop
in
repz
loop
dec
xchg
fld
or
sbb
xchg
stos
mov
xor
out
pop
mov
imul
mov
test
mov
pushf
(bad)
ror
lock
jge
dec
mov
and
sbb
dec
mov
(bad)
stc
add
adc
enter
xchg
push
mov
push
retf
adc
lahf
xchg
lods
dec
sub
sub
inc
lahf
dec
add
push
mov
stc
jnp
xor
fisttp
adc
dec
lds
je
not
jns
popf
push
mov
movs
dec
or
mov
xor
call
ret
fild
lods
jnp
xchg
ins
mov
in
inc
movs
inc
aad
cmp
les
pop
lahf
(bad)
adc
dec
ins
mov
fwait
mov
mov
and
leave
iret
cmc
mov
out
retf
(bad)
scas
sub
xchg
aaa
inc
cdq
test
ins
cmp
mov
adc
add
push
imul
(bad)
les
fcom
das
arpl
shl
adc
fidivr
div
(bad)
mov
in
fs
mov
ins
and
es
pop
clc
and
xchg
fimul
test
dec
outs
das
mov
sbb
xor
call
cmp
mov
ds
in
push
add
fsubr
hlt
mov
sbb
ret
or
xor
xor
xchg
mov
push
inc
adc
shl
or
jnp
retf
push
adc
ret
push
nop
(bad)
out
(bad)
test
cmps
ret
int3
cli
mov
ins
hlt
and
inc
jle
mov
idiv
mov
int3
mov
cs
into
cmp
dec
mov
int
fs
pop
jb
cmp
cmp
add
test
push
(bad)
iret
aad
xor
aas
mov
or
pop
cmps
jnp
cmp
in
mov
mov
jbe
sub
jbe
jno
mov
mov
out
mov
cmp
scas
mov
and
(bad)
sbb
dec
out
dec
sti
add
jecxz
fidivr
js
(bad)
jmp
out
adc
or
pop
repz
call
mov
mov
and
test
inc
lock
test
lea
push
imul
pop
jb
inc
ins
call
in
inc
adc
not
push
call
dec
mov
stos
jecxz
or
jge
mov
xor
xor
clc
ret
adc
sub
in
lods
fsub
jmp
xchg
sahf
cmps
dec
je
js
es
and
xor
out
popa
dec
sbb
jae
or
mov
pop
sbb
scas
dec
or
data16
test
ret
pusha
fadd
and
shr
js
add
mov
mov
cmp
mov
mov
xor
push
shr
mov
pushf
inc
lea
addr16
jne
push
int3
pop
fmul
cmps
sub
aas
retf
and
or
aaa
add
mov
das
jb
inc
xchg
imul
sub
lock
iret
pop
(bad)
out
out
daa
xor
dec
loop
dec
mov
push
retf
ins
ds
push
xor
lock
inc
cmp
push
mov
pop
mov
ins
cmps
mov
hlt
inc
scas
pop
or
pop
outs
and
aad
inc
xor
sbb
xor
cmp
and
arpl
mov
sbb
test
xchg
push
adc
add
xor
xchg
mov
ds
mov
aas
or
adc
je
xor
aaa
sub
jecxz
retf
pop
pop
cmp
out
repz
xchg
or
in
test
mov
pop
cmp
mov
add
mov
xchg
aad
push
std
leave
xchg
adc
mov
das
adc
lahf
push
mov
nop
jbe
xchg
std
ret
fdivr
cld
mov
inc
mov
sbb
xchg
xor
pop
cs
imul
clc
adc
les
mov
and
cmps
outs
mov
test
arpl
cmps
push
and
in
repnz
adc
pop
dec
xor
jo
jb
inc
in
sbb
(bad)
call
outs
in
aam
jno
leave
gs
push
(bad)
into
repz
or
jo
repz
or
iret
jns
cmc
mov
xchg
sbb
ret
aaa
repz
sub
inc
sbb
stc
mov
mov
adc
inc
mov
sub
fstp
lods
rol
mov
fild
dec
and
les
ror
add
xchg
out
mov
xchg
int
pop
idiv
cmp
xlat
(bad)
shl
call
dec
xor
adc
or
and
scas
push
cmp
add
out
sar
sar
stos
outs
int3
jnp
push
imul
mov
sub
xchg
lods
ret
inc
pusha
jmp
test
test
dec
jne
mul
minps
leave
and
xchg
xchg
les
pop
pushf
cmp
dec
dec
out
and
or
aad
xchg
mov
in
js
sub
dec
test
push
push
call
adc
sti
mov
loopne
addr16
sar
faddp
in
cmps
xlat
or
jmp
push
or
cmc
mov
pop
mov
stc
test
jl
and
and
in
xor
xor
(bad)
sahf
xchg
call
xor
not
mov
rcl
gs
xor
ins
dec
dec
fst
adc
push
xlat
add
sbb
jno
pop
outs
in
sub
clc
bound
push
push
sub
jge
xlat
daa
lock
push
sbb
mov
inc
sbb
add
mov
nop
push
mov
das
push
dec
mov
repnz
push
in
mov
aad
lds
pop
retf
std
push
xor
and
cmp
repnz
ret
das
fdivr
mov
xchg
stc
icebp
push
or
lahf
rol
arpl
in
pop
lods
adc
lds
mov
add
cmp
push
mov
lahf
lock
(bad)
(bad)
inc
dec
jnp
jge
data16
pop
push
or
inc
add
pop
test
rol
jae
jg
lds
jns
inc
xchg
in
pop
cmp
loope
cwde
adc
ja
pop
adc
(bad)
mov
lock
cmp
and
cmp
cs
sar
popf
mov
adc
or
ins
out
xchg
mov
shl
fldcw
shr
les
mov
fistp
loope
sub
or
mov
ja
loop
sbb
mov
rcl
ins
es
aam
ins
lea
pop
ss
fsub
and
mov
cld
sbb
xchg
xor
dec
xchg
mov
out
fmul
enter
dec
or
arpl
repz
add
jnp
jae
ins
xor
cmp
jno
pushf
dec
popa
mov
mov
dec
cli
aaa
fmul
ficomp
or
fst
inc
mov
xor
sbb
outs
xchg
test
and
int
repnz
mov
pop
mov
add
cld
add
adc
stos
mov
jecxz
jae
mul
inc
fiadd
mov
xor
aad
pop
xlat
movs
out
mov
sub
ins
je
loopne
sti
add
mov
mov
push
or
and
sub
mov
in
mov
xor
jb
mov
push
int3
js
pop
pop
cmp
addr16
test
test
retf
(bad)
div
inc
and
push
(bad)
sbb
sbb
es
leave
movs
inc
js
add
lods
sahf
sbb
aad
or
pusha
jno
jl
repz
pop
cli
sbb
push
jne
add
jmp
jmp
xchg
rcl
pop
das
cli
int
frstor
inc
sar
xchg
fwait
in
xchg
idiv
int
repnz
and
pop
sub
retf
jbe
pusha
das
lock
out
or
or
cld
adc
pop
out
jmp
ss
push
(bad)
mov
scas
cmp
mov
daa
pop
retf
movs
add
arpl
(bad)
nop
ins
ja
sub
call
and
xchg
enter
xor
dec
mov
sbb
jb
repnz
ror
cmc
retf
mov
sub
xor
test
push
mov
cs
rcr
xchg
les
jmp
push
outs
mov
int
jg
jns
ret
movs
and
push
cs
ss
int3
das
xchg
repnz
mov
aaa
inc
jbe
iret
cmp
retf
pop
inc
rol
shr
cmp
mov
(bad)
fdivr
pop
add
outs
jne
dec
mov
cli
sub
ficom
xor
and
aad
mov
mov
ss
sbb
in
fs
or
dec
cmp
pop
test
ficomp
or
xor
imul
jg
mov
sahf
out
cwde
add
add
clc
and
jnp
mov
test
stos
jle
movs
imul
xlat
int
sbb
push
scas
addr16
test
mov
sub
cmp
pop
lea
pop
lods
jnp
xchg
or
mov
mov
outs
icebp
cmp
pop
xchg
pop
jg
in
test
or
sbb
fnstsw
push
xchg
adc
sbb
in
cmp
dec
pop
loope
jle
or
loopne
push
lods
retf
xchg
in
jmp
xchg
ds
faddp
lds
or
sysenter
sbb
nop
mov
dec
adc
je
sub
cmp
mov
xor
fadd
push
mov
jnp
push
fild
retf
jmp
les
retf
in
jecxz
add
movs
fnsave
mov
cmps
dec
jecxz
repnz
loope
add
jmp
mov
and
jae
or
ja
(bad)
jle
test
mov
jno
icebp
and
(bad)
div
inc
adc
movs
jmp
loop
(bad)
movs
sbb
mov
pop
adc
sar
and
dec
or
out
or
mov
lods
dec
xor
xchg
add
arpl
xchg
mov
cmps
add
gs
gs
xchg
xor
hlt
xor
shl
push
add
loope
mov
scas
inc
pop
xchg
cs
and
dec
les
dec
aaa
mov
mov
inc
call
arpl
mov
pusha
sub
xor
jo
cmp
sbb
in
inc
cdq
inc
cmp
jg
ror
pop
scas
inc
pop
retf
mov
sar
aaa
pop
xchg
ins
mov
aas
fs
cmps
jle
popf
pushf
mul
xor
cli
stc
jo
xor
push
xchg
jge
lods
(bad)
jae
test
pop
pusha
int
enter
inc
pushf
xor
xor
cmp
lea
cwde
test
mov
test
jl
push
daa
mov
and
jae
fwait
ins
ror
pop
xchg
jmp
mov
jnp
sahf
pop
mov
popf
jp
jge
cmp
ins
mov
cmp
push
rcr
pop
ret
jp
xchg
mov
bound
or
aad
jns
jns
cld
push
adc
lods
sub
repz
movs
mov
dec
in
ds
jl
mov
icebp
stc
push
jmp
jg
cld
sbb
test
jge
xchg
push
ja
xor
(bad)
test
popa
mov
pop
cvtps2pi
jns
jno
pop
mov
pop
pop
jbe
sbb
jae
mov
xor
sub
gs
cmp
push
cwde
jmp
and
faddp
loopne
leave
outs
js
pop
add
push
in
push
xor
gs
push
mov
retf
repz
add
repnz
jb
pop
mov
inc
call
mov
mov
pop
repz
cld
mov
dec
(bad)
dec
xor
lods
sti
dec
and
adc
test
add
or
inc
jne
data16
jg
je
mov
outs
fild
out
push
inc
sub
inc
inc
cmp
xchg
jnp
sbb
push
jne
sti
int3
cmp
imul
pop
(bad)
adc
inc
(bad)
jg
dec
sbb
xor
xchg
stc
push
cld
sti
cmp
int3
outs
ror
cs
jmp
mov
push
sub
scas
movsx
pop
jns
imul
pushf
call
dec
lock
sub
cld
stos
dec
push
das
pusha
imul
cmp
dec
rol
clc
daa
call
repnz
cmps
ja
ja
ins
sub
(bad)
int
bswap
jle
(bad)
push
jle
in
neg
inc
out
mov
or
mov
icebp
jo
ss
leave
xchg
mov
jb
cmp
and
popf
jno
mov
jnp
inc
add
mov
sub
inc
fstp
add
stos
pop
pop
inc
add
xor
mov
push
enter
cld
mov
mov
xchg
xor
cmp
mov
pop
fistp
push
(bad)
lahf
mov
je
pop
popa
mov
in
jle
bound
jp
xor
nop
push
jp
stc
(bad)
pop
stos
bswap
push
sub
in
and
xor
inc
push
sbb
les
outs
push
push
inc
jnp
mov
call
push
cwde
shl
jbe
sub
iret
call
mov
and
rcr
xor
push
mov
dec
call
and
rol
and
fild
mov
sahf
test
mov
out
aam
or
mov
fild
cmps
pusha
ja
data16
in
sbb
sub
or
xor
jge
mov
fs
(bad)
(bad)
shr
hlt
imul
push
mov
mov
sbb
dec
cmps
fisttp
call
leave
or
sub
pop
je
xor
mov
in
and
repnz
pop
inc
or
jae
mov
out
jge
add
jae
leave
cmp
fsub
mov
dec
shl
cmc
(bad)
jbe
lock
out
(bad)
xchg
loop
stc
inc
cdq
dec
or
pop
data16
enter
fs
push
push
es
ins
fs
lahf
outs
sub
dec
xor
mov
outs
aaa
sub
fsubr
arpl
inc
push
push
jecxz
cmp
xchg
mov
jbe
or
push
sbb
xchg
shr
push
xor
nop
push
mov
test
scas
sub
into
cs
outs
push
push
jo
call
std
enter
inc
lahf
mov
inc
sbb
or
push
gs
pushf
cld
jmp
jnp
xor
pop
push
out
xor
inc
jmp
push
loop
or
inc
lds
dec
shl
loope
scas
movs
cmp
popa
push
sub
stc
outs
mov
loop
push
mov
mov
push
aad
sbb
jae
les
test
cld
jle
loope
inc
cs
jo
in
mov
cmp
repz
mov
push
cmps
fucomp
ins
repnz
ret
push
cmp
ret
sbb
mov
mov
jmp
pop
mov
lods
xor
mov
mov
or
das
rcl
rcl
dec
jecxz
mov
popa
stc
xchg
pop
arpl
imul
add
push
int
jge
fcmovbe
mov
addr16
rcl
cmp
xchg
cwde
and
mov
sub
inc
rcl
(bad)
mov
lock
xchg
adc
push
retf
out
loopne
or
jnp
loopne
inc
icebp
movs
(bad)
pop
stc
hlt
add
xchg
jmp
add
or
out
sub
adc
cmp
push
or
sbb
outs
xor
and
add
cmp
and
cmps
xchg
nop
cmp
mov
pop
jb
rcr
jns
cmps
adc
mov
dec
(bad)
test
dec
push
mov
adc
stos
sbb
cmp
icebp
cmp
sub
iret
mov
xor
rol
and
retf
push
push
push
cdq
cmp
add
adc
sub
lods
cmp
cmc
or
scas
inc
dec
pop
popa
and
or
mov
ins
sub
xchg
lds
mov
pop
(bad)
(bad)
retf
cmp
stos
dec
ret
sbb
push
dec
sbb
pop
xlat
cdq
mov
fnstenv
pcmpgtw
int3
(bad)
sar
ror
fsub
adc
test
xchg
ret
and
fnstsw
mov
fimul
and
add
or
inc
push
push
fcmovnbe
shl
shl
fcomp
js
hlt
fcom
jmp
xor
les
mov
mov
adc
bound
xchg
sub
or
daa
pusha
xchg
push
out
pop
sub
jg
into
test
and
icebp
pop
mov
xor
in
mov
jnp
inc
into
dec
sbb
dec
loopne
js
jb
call
push
xor
mov
cld
dec
cmp
loope
aaa
inc
jg
dec
pop
pusha
xchg
mov
aas
ins
fcmovnb
arpl
add
(bad)
push
js
sbb
and
mov
sub
and
ds
mov
add
sti
stos
sahf
xor
ins
bound
pop
sub
push
adc
push
(bad)
dec
mov
or
(bad)
retf
jecxz
or
mov
lock
sti
test
xor
push
cmp
cwde
inc
jno
inc
call
and
pop
ins
pop
out
cmp
add
cmp
loope
dec
sub
popa
outs
ins
mov
fwait
and
sbb
adc
fbstp
jg
pop
aaa
cld
popaw
sbb
scas
or
adc
int
imul
sbb
inc
cmps
mov
dec
ins
add
pop
or
mov
sub
jbe
scas
pusha
cmp
mov
push
xchg
(bad)
mov
or
mov
idiv
call
sub
cmc
rcr
es
hlt
inc
mov
cmp
cmps
retf
add
dec
sbb
xor
imul
mov
call
sar
retf
sub
test
ja
out
cdq
(bad)
in
sbb
jmp
sbb
es
loop
clc
out
test
pop
int
and
sbb
in
std
adc
fst
rcl
in
xor
push
lea
(bad)
jae
gs
fs
inc
shl
(bad)
fidiv
ja
jp
xchg
jns
jg
fwait
pusha
add
jmp
iret
jge
ret
aad
lock
xchg
leave
pop
fdivr
push
pop
sub
cmp
imul
div
push
cmc
pusha
ins
into
aas
xor
outs
mov
mov
imul
push
les
dec
and
stc
xchg
mov
(bad)
outs
push
cmp
test
xor
push
jnp
mov
aas
daa
jb
sub
mov
xchg
in
cwde
imul
ds
lds
popf
jbe
xchg
jmp
(bad)
mov
push
lods
test
in
out
inc
cdq
add
ins
repnz
ja
sti
mov
xor
cmps
dec
das
push
data16
or
or
inc
add
aas
into
das
cwde
ss
push
dec
fstp
or
push
inc
(bad)
mov
les
dec
lea
addr16
cmc
inc
jnp
jne
aam
rcl
mov
jno
push
outs
and
in
cld
in
out
xchg
in
inc
push
retf
outs
or
neg
cmp
push
mov
mov
push
mov
adc
loop
in
aaa
(bad)
neg
shl
pop
ins
jp
jno
sbb
shr
les
pop
test
nop
enter
je
pop
imul
mov
std
repnz
sahf
repz
mov
ds
scas
cld
add
dec
dec
in
shr
jbe
mov
outs
or
adc
push
inc
xchg
add
cmp
enter
pop
and
inc
rcl
fimul
pop
enter
cmp
cmc
sbb
cmp
bnd
inc
jl
jp
lds
lods
inc
fwait
sbb
xor
aam
pop
and
fist
cli
inc
xor
stos
pop
inc
aaa
imul
fcomp
cmp
aaa
and
and
pop
mov
xchg
mov
std
add
jno
fcom
jle
iret
add
(bad)
pop
dec
loope
inc
add
call
cmps
mov
adc
fist
mov
fld
js
adc
pop
pop
sti
xor
or
outs
push
xchg
add
push
test
loope
popf
sub
sbb
imul
cmp
ficomp
fidiv
ror
mov
or
fist
push
cmp
or
or
sub
or
cmp
arpl
enter
inc
(bad)
adc
lods
cmps
addr16
adc
mov
aad
dec
sub
outs
pop
mov
dec
(bad)
inc
jb
xor
cmp
shl
sbb
shl
(bad)
xchg
push
out
cmc
stos
int
das
repnz
in
sbb
add
call
xor
shr
out
dec
cs
repz
mov
cmc
inc
inc
pop
bswap
xchg
lea
cs
xchg
or
fucom
outs
enter
outs
shl
sub
call
sub
js
xor
mov
mov
aaa
push
or
daa
lea
int3
sbb
ret
test
dec
cli
inc
std
xor
push
out
ret
adc
arpl
inc
gs
inc
dec
stc
das
cwde
out
xchg
in
xor
enter
sbb
cmc
icebp
inc
mov
mov
call
jecxz
jae
jbe
pop
shl
jmp
mov
call
jl
cld
jle
cmp
pushf
int3
and
cs
inc
sbb
xchg
add
inc
lahf
inc
out
(bad)
loope
sub
mov
xchg
dec
sub
ins
imul
arpl
jmp
shr
push
(bad)
inc
sete
dec
add
xor
ds
loope
out
loopne
inc
mov
rol
push
cdq
fcom
pop
retf
xor
lods
iret
ins
out
(bad)
rcr
sbb
sub
(bad)
xor
enter
pushf
ss
sbb
fwait
mov
add
or
lods
inc
in
push
test
inc
cdq
mov
mov
pop
ins
inc
mov
fld
pop
daa
sub
pop
cmp
or
dec
leave
xor
pop
loopne
or
jo
mov
(bad)
sub
dec
jbe
xchg
sar
retf
dec
add
mov
aaa
pop
sbb
aaa
ret
mov
idiv
movs
cmp
cmp
loop
sub
adc
mov
push
mov
push
cmc
mov
inc
xlat
test
clc
cdq
xor
mov
ins
add
addr16
call
in
out
enter
add
jno
js
inc
es
and
sbb
fwait
mov
dec
ret
mov
dec
or
xor
movs
mov
out
es
pop
into
xor
push
mov
jo
lods
lahf
jnp
movs
xchg
neg
push
mov
ror
(bad)
lock
cdq
shl
and
js
mov
cmp
mov
sub
lods
fdiv
movs
sub
add
pop
dec
paddusb
or
retf
mov
sbb
mov
sbb
mov
or
inc
fisttp
aad
mov
lods
add
fs
(bad)
fild
pop
adc
sbb
imul
dec
jno
mov
mov
jmp
dec
loopne
push
adc
add
dec
aam
push
inc
cmp
pop
adc
les
sbb
out
cmp
neg
movs
scas
push
adc
mov
sbb
loope
and
inc
bound
cwde
popa
icebp
js
lds
cli
jl
pop
mov
es
adc
and
pushf
in
cmp
xchg
shr
sbb
xchg
xchg
iret
mov
push
pushf
jb
dec
(bad)
inc
cwde
push
or
imul
mov
push
adc
mov
repz
cmp
mov
(bad)
adc
mov
adc
add
jno
in
in
add
xor
sub
xor
pop
fsub
dec
mov
mov
push
cmp
mov
pop
push
pop
cmps
jl
cmp
neg
pop
mov
stos
sar
lods
out
(bad)
jmp
pop
dec
or
movs
mov
ins
dec
icebp
fld
push
adc
pop
fst
(bad)
jmp
xchg
dec
lods
jmp
iret
imul
icebp
or
jnp
dec
sbb
push
ins
loope
push
in
xchg
jge
xchg
add
push
adc
or
js
mov
inc
scas
mov
inc
mov
addr16
outs
mov
mov
mov
pop
or
sub
push
cmp
mov
ins
imul
in
popf
mov
dec
scas
adc
and
pop
push
ret
(bad)
add
inc
jmp
retf
pop
pop
jl
shl
adc
cmc
push
test
(bad)
aaa
jge
jecxz
sub
ds
fcom
movs
pop
fwait
push
push
add
cs
mov
lods
shr
mov
arpl
out
jo
xor
mov
jecxz
adc
pop
retf
cmp
pusha
or
sub
repnz
add
enter
xchg
in
sar
jns
mov
and
pop
pop
cmps
dec
mov
loop
sbb
xlat
xchg
cmp
shl
stos
repnz
xor
jo
xor
sahf
aam
jecxz
cmp
ja
jle
mov
fcomp
loopne
test
add
retf
adc
and
mov
and
sub
dec
push
inc
pop
push
sahf
clc
push
cmc
rcr
push
jl
push
mov
push
cmp
jmp
sbb
add
push
push
xchg
push
or
(bad)
and
sbb
in
or
stos
ja
arpl
inc
imul
pop
fstp
cmps
adc
ss
scas
(bad)
rol
test
push
cmp
xor
add
cmps
outs
or
cmps
into
pop
mov
inc
jns
aas
or
xchg
jl
pusha
(bad)
cdq
icebp
xchg
mov
mov
aad
mov
cmp
xor
xchg
loope
jne
sti
jmp
dec
inc
arpl
cmps
repz
fcomp
xlat
leave
pop
fnstenv
push
mov
outs
xchg
jmp
add
or
pusha
jmp
arpl
adc
and
lahf
sub
lahf
das
xor
mov
cmp
jl
jp
inc
les
cmp
imul
adc
inc
shl
and
jge
repnz
add
sub
outs
add
(bad)
out
jnp
jbe
xchg
lds
pop
push
pop
or
mov
xchg
cmp
shl
inc
jecxz
ror
fs
pushf
out
add
mov
pop
sti
(bad)
adc
scas
inc
pop
ds
mov
add
test
retf
pusha
adc
mov
(bad)
jbe
gs
dec
in
jg
cld
add
pop
mov
inc
xchg
fisubr
adc
mov
add
mov
push
fsubr
cmps
push
mov
add
ss
sbb
push
inc
push
(bad)
push
pop
cmc
lahf
repnz
mov
push
sti
ficom
mov
pop
jg
push
pushf
xchg
xchg
xlat
mov
cmc
pop
adc
xor
sbb
iret
inc
sub
adc
cdq
mov
call
jbe
fwait
jo
in
push
shl
cmps
ja
test
ins
ins
xchg
dec
sub
cs
sahf
jbe
fldcw
sbb
test
(bad)
aas
pop
call
jo
pusha
xchg
and
addr16
inc
inc
fisttp
or
stos
jb
xor
add
fidivr
fstp
xor
xchg
adc
out
in
and
mov
mov
pop
std
xlat
adc
jmp
dec
mov
push
adc
xor
iret
sbb
into
jmp
mov
jl
test
loop
fsubr
sahf
or
int
imul
das
mov
mov
fs
adc
push
(bad)
xchg
cmp
sbb
int
aam
xor
out
jmp
lods
pop
xchg
aam
jmp
loopne
ins
arpl
std
cmp
dec
jo
out
(bad)
aas
jmp
lods
movs
or
jg
and
mov
test
in
xor
and
push
sbb
push
fsubr
(bad)
(bad)
call
fsub
sub
mov
xchg
jp
adc
aad
sub
rcr
lods
call
das
dec
push
adc
(bad)
cmp
inc
pop
bound
icebp
test
or
or
inc
fnsave
stos
mov
scas
xor
mov
rcl
push
sbb
sahf
cs
mov
outs
rcl
js
mov
and
push
add
test
sti
not
cmps
(bad)
outs
mov
pop
rep
scas
adc
push
or
xchg
ins
xchg
pop
xchg
and
das
push
sahf
mov
loopne
push
cmp
push
out
and
clc
xor
fs
bound
push
int
repz
cwde
inc
xchg
mov
popa
sbb
(bad)
xchg
adc
addr16
leave
xchg
scas
adc
inc
leave
mov
xchg
xor
xor
retf
movs
mov
sbb
fdivr
and
aas
(bad)
xor
cs
mov
in
in
mov
mov
or
pop
in
pusha
adc
mov
push
loope
movs
ja
sbb
adc
cmp
mov
shr
push
sub
xor
and
(bad)
shl
push
dec
mov
and
cmc
xchg
std
jmp
mov
nop
adc
dec
call
ins
inc
and
add
add
shr
ficom
lds
mov
mov
adc
and
out
push
add
ja
test
test
not
sub
pop
pop
cdq
out
jmp
xchg
pop
mov
enter
aas
ds
dec
fadd
fcomp
test
retf
je
in
jge
fistp
pop
push
cmp
retw
adc
lock
add
sbb
jg
ret
dec
and
loopne
cmp
int3
loopne
fcomp
push
and
xor
pop
arpl
icebp
mov
sub
and
and
mov
mov
stos
rol
add
push
pop
xor
inc
and
dec
push
push
shl
in
pusha
inc
add
mov
jno
xchg
inc
gs
cmp
cwde
lods
dec
rcr
(bad)
sbb
retf
dec
iret
aas
dec
lods
jns
mov
(bad)
std
pop
dec
sub
fistp
pop
or
mov
scas
cmp
inc
inc
dec
es
jmp
ja
cmp
and
pop
out
out
je
pushf
outs
cmc
sub
call
enter
dec
gs
or
cmps
inc
arpl
psubsw
loopne
mov
add
shl
xlat
int3
cmp
push
or
add
jno
sbb
cmp
rcl
sub
xor
ret
sti
jns
dec
inc
lods
hlt
xor
(bad)
or
shr
xor
iret
dec
fld
rcl
jge
jecxz
shr
jmp
add
mov
adc
js
push
xor
pop
fdivr
mov
sbb
and
cdq
sub
(bad)
bound
cmps
in
sbb
push
rcl
retf
outs
dec
rcr
enter
mov
pop
jg
(bad)
jne
mov
aam
repz
ror
add
mov
int
jge
(bad)
hlt
ds
sbb
mov
in
sahf
xor
xlat
dec
sahf
cmps
sbb
push
pushf
pop
xchg
inc
sbb
mov
inc
lds
movs
loopne
sbb
push
inc
xchg
iret
mov
fwait
jle
pop
or
mov
jmp
mov
dec
mov
repz
sti
scas
ds
push
cld
cmp
addr16
pop
icebp
push
(bad)
in
jecxz
cmp
inc
push
push
je
(bad)
and
neg
jl
pop
test
jmp
adc
add
scas
(bad)
out
pop
inc
xchg
fstp
imul
test
jge
retf
xchg
pop
pop
mov
mov
mov
in
nop
dec
mov
adc
div
repnz
retf
mov
(bad)
cmp
and
push
mov
es
sub
rcl
and
movs
cmp
sbb
mov
pop
jg
sbb
retf
pop
leave
push
scas
in
loopne
push
in
retf
sbb
mov
xor
jl
push
jno
popa
test
loope
popf
sbb
push
(bad)
dec
xchg
lods
xor
imul
and
sahf
push
sub
lea
mov
(bad)
xlat
inc
ds
ror
cld
xchg
aas
push
mov
adc
in
jmp
adc
mov
pop
and
sbb
in
dec
or
stc
add
pop
inc
mov
mov
cmp
mov
jmp
mov
xlat
jp
outs
inc
scas
xor
arpl
mov
pop
(bad)
sub
push
and
pusha
fmulp
pop
pusha
adc
xchg
pop
ror
nop
nop
cwde
push
mov
add
sub
xchg
pop
les
ins
(bad)
dec
mov
mov
push
adc
adc
inc
(bad)
(bad)
or
fbstp
js
(bad)
mov
popf
clc
call
enter
jge
loop
add
js
jno
xchg
scas
or
add
dec
mov
scas
frstor
rcr
call
or
or
or
mov
lods
test
pop
fcomp
inc
and
or
pop
sbb
sti
mov
lahf
adc
sbb
pop
dec
inc
cld
imul
fcom
pusha
push
xor
cmp
add
mov
xchg
jae
jmp
retf
lahf
aam
fs
push
push
xchg
sbb
cmp
cmp
sar
lahf
shl
jp
fs
adc
fcomp
inc
mov
inc
and
mov
ja
mov
push
jecxz
das
adc
push
jae
in
push
les
mov
data16
popf
(bad)
arpl
ss
xor
ror
or
popa
mov
fs
push
xchg
sbb
repnz
adc
fisub
call
shl
data16
popa
add
lods
mov
pushf
or
mov
ss
mov
out
jle
ins
sub
imul
repz
out
int3
mov
cmp
add
sub
jl
sbb
xchg
ja
retf
jns
pop
adc
push
iret
aas
lods
push
mov
add
cmp
shr
xchg
mov
pop
mov
sbb
xor
sar
stc
push
or
pop
dec
scas
mov
mov
cmc
clc
bound
imul
and
movs
adc
mov
fldcw
mov
dec
movs
jb
aas
and
inc
jne
and
dec
stos
aas
ror
mov
and
or
dec
xor
push
test
ss
sub
or
imul
daa
icebp
popf
rol
ftst
stos
lods
mov
adc
(bad)
dec
test
or
scas
imul
cmps
mov
nop
and
jnp
ds
(bad)
jl
mov
in
ret
and
dec
std
test
push
pop
dec
and
rep
daa
cld
pop
cmp
pop
mov
add
cdq
call
ja
dec
in
outs
push
xchg
mov
aaa
sbb
shl
sbb
mov
aaa
adc
and
cmps
mov
dec
mov
sbb
pop
inc
adc
dec
or
dec
dec
clc
xlat
cmp
or
es
hlt
inc
lock
icebp
dec
sbb
or
pop
and
xlat
push
cmps
mul
daa
mov
or
dec
mov
jecxz
movs
push
or
xchg
xor
pop
jecxz
inc
std
jp
or
sbb
sahf
push
jo
xchg
xor
xchg
mov
ss
(bad)
add
rcl
mov
les
int
pop
xlat
add
mov
push
es
mov
gs
movs
retf
aaa
rol
push
xor
or
sbb
add
or
into
inc
pop
into
test
ror
fucomp
and
add
adc
shl
pop
das
inc
fist
jg
mov
leave
fstp
in
mov
in
add
retf
inc
dec
je
shl
and
dec
loopne
popa
mov
push
cwde
inc
mov
(bad)
sub
push
sbb
xchg
mov
and
sub
inc
pushf
fisub
mov
das
call
pop
in
sbb
shr
jbe
aam
mov
pusha
shl
pushf
add
mov
repnz
gs
adc
pushf
mov
inc
lods
xchg
xchg
sbb
js
(bad)
adc
jo
xchg
adc
xchg
xchg
dec
movs
sub
xchg
les
ss
fcomp
call
mov
sub
cld
es
std
imul
xchg
push
mov
cmps
je
lods
or
popa
lahf
cli
fisttp
loope
pusha
stos
outs
test
sub
(bad)
cmc
fisubr
and
ds
std
neg
je
rol
xchg
ret
lock
(bad)
push
or
ret
cmp
lds
(bad)
imul
enter
sbb
imul
mov
mov
js
mov
fisttp
mov
jl
test
call
sub
or
cmp
push
push
in
fistp
mov
daa
gs
cmp
push
inc
cld
pop
daa
adc
lds
jge
xchg
dec
xlat
add
sbb
(bad)
stos
retf
imul
bound
adc
dec
mov
or
pop
add
dec
sub
ins
mov
nop
sbb
or
ins
mov
or
mov
cmp
sbb
mov
aas
rcr
cmp
xchg
sbb
or
lods
mov
jae
push
ins
inc
in
add
stos
xlat
mov
sbb
xchg
cmp
dec
dec
ret
icebp
loope
xchg
jne
push
xor
or
pop
inc
xchg
sbb
mov
scas
jno
jg
or
add
mov
rol
repnz
shl
fld
in
daa
mov
or
out
push
sub
push
jae
jmp
dec
sub
mov
inc
mov
loope
pop
xor
inc
stos
stc
jmp
jmp
scas
cmp
das
(bad)
fwait
fwait
push
into
aad
call
inc
mov
scas
in
lds
ja
and
outs
inc
inc
test
lock
fdivr
pop
sahf
xor
scas
sbb
jnp
inc
stc
cld
hlt
and
pop
xchg
add
cmps
out
outs
pushf
xlat
iret
inc
mov
or
(bad)
xor
cmp
dec
fidivr
test
jae
aaa
dec
inc
daa
retf
jo
stc
retf
pop
movs
test
mov
repz
inc
lock
les
ja
and
cmp
mov
sbb
or
cld
cmp
mov
lahf
dec
(bad)
cld
push
gs
push
and
loope
jmp
mov
outs
dec
popf
je
hlt
xlat
mov
rcr
test
fs
mov
pop
nop
sub
cld
fst
pop
pop
jo
push
in
adc
inc
mov
pop
outs
repnz
xor
inc
data16
jnp
fmul
jg
push
nop
mov
push
fmulp
mov
fidivr
jecxz
mov
xchg
faddp
inc
fdivr
cmps
mov
cmps
adc
push
sub
add
(bad)
addr16
ds
cmp
in
movs
push
push
xchg
pop
lods
rcl
popa
jecxz
pop
pop
mov
mov
out
pop
sub
add
outs
in
call
push
sar
es
cmp
xchg
dec
cs
sti
(bad)
and
mov
pop
aas
jns
imul
push
retf
pusha
xchg
dec
push
mov
xor
rcl
movs
or
hlt
pop
outs
mov
clc
popf
adc
push
stc
jae
inc
scas
mov
shl
xbegin
test
dec
fsubr
or
ds
test
or
mov
dec
arpl
cld
mov
fnstcw
aaa
xor
inc
in
cwde
inc
loopne
ds
mov
sahf
fstp
mov
adc
repz
lods
jne
mov
aad
push
push
outs
push
xchg
inc
lock
mov
ret
(bad)
mov
push
sar
cmp
push
mov
stc
and
xor
xchg
aas
movs
(bad)
mov
out
pop
rep
lods
xchg
sbb
int3
cmp
test
or
icebp
les
icebp
aad
dec
mov
enter
lahf
xor
std
adc
(bad)
adc
push
cs
(bad)
in
inc
xor
ins
movs
ret
sub
or
(bad)
jae
mov
bound
inc
jmp
shl
push
and
js
sub
push
hlt
in
dec
jp
cmps
push
ret
icebp
push
sbb
ds
mov
cmp
cmp
js
dec
ss
js
leave
scas
sub
push
add
push
and
pop
jl
pop
sahf
icebp
cmp
fstp
out
fmul
in
cs
sar
mov
sub
dec
imul
sbb
mov
fwait
jae
sbb
xlat
xlat
fsubr
iret
jl
jecxz
imul
pop
rcl
mov
test
xor
jg
(bad)
mov
lock
or
div
pop
cmp
or
jle
call
adc
mov
cmps
sar
pop
movs
cmp
stc
mov
out
shr
inc
loope
mov
or
sbb
ret
shr
fmul
jp
ret
and
jne
movs
test
lods
popa
mov
jnp
sub
jecxz
test
test
popa
push
push
imul
and
fisub
jmp
loop
repnz
dec
jno
xbegin
mov
int3
cmps
jp
lods
jecxz
lods
dec
dec
(bad)
jg
push
inc
imul
outs
xlat
popa
mov
ins
lods
mov
mov
popf
jo
pop
rcl
push
cld
pusha
push
lods
sti
(bad)
in
inc
cli
inc
jp
add
add
jle
jnp
sub
push
or
jl
and
fdiv
xchg
xor
rcl
into
(bad)
(bad)
mov
cmps
loopne
popf
xor
sbb
push
fldcw
mov
ficom
movs
mov
(bad)
stc
jb
add
jb
xchg
hlt
cli
ins
fcmovb
nop
xor
pop
adc
or
add
inc
cmc
into
iret
and
sbb
jmp
sbb
push
(bad)
outs
in
or
out
and
adc
sub
push
imul
push
jmp
mov
cmps
sub
or
cmps
icebp
adc
retf
lahf
rcl
mov
aaa
bound
and
(bad)
shl
movs
scas
lods
fld
(bad)
clc
pop
mov
arpl
(bad)
scas
xor
mov
sub
jae
lock
movs
popf
popf
adc
jmp
stc
test
js
inc
cwde
out
data16
rol
(bad)
add
mov
out
cmp
mov
jg
xchg
xchg
imul
and
add
ss
xor
push
cmc
pop
in
mov
sti
dec
cmp
(bad)
xlat
mov
mov
and
int3
jge
out
enter
dec
fimul
ret
in
pop
pop
jbe
out
xor
das
ds
in
outs
mov
sub
sbb
pop
push
out
bound
pop
and
xor
ins
daa
mov
cmp
ret
cmps
mov
sub
mov
sahf
pop
push
dec
jae
clc
aaa
shl
ins
call
sbb
inc
aam
xlat
inc
push
mov
xor
adc
mov
adc
fisub
out
jmp
or
xchg
mov
retf
les
stos
sar
std
loop
pushf
ret
fnstsw
pop
mov
in
xor
out
pop
hlt
sbb
scas
loopne
mov
jp
fidivr
adc
dec
push
push
arpl
cmp
arpl
sub
xchg
test
sub
xchg
and
ss
cmp
push
popa
push
pop
arpl
loop
inc
or
pop
retf
into
jge
out
push
xchg
ss
aas
cmp
cmp
xchg
jns
inc
(bad)
stc
sbb
(bad)
imul
mov
dec
and
inc
adc
mov
mov
repz
(bad)
imul
icebp
and
xchg
fdivr
sub
and
adc
ss
inc
sbb
cmp
jns
ins
add
loop
scas
jmp
ret
push
jne
add
out
popf
std
push
cmp
outs
mov
fldenv
lods
ror
adc
mov
sub
dec
out
in
mov
fucomip
ss
int3
or
cdq
out
mov
xor
cmp
sub
jnp
ds
dec
and
and
xchg
mov
pop
xor
lahf
mov
ins
mov
mov
rcl
xchg
push
inc
shl
push
lods
or
retf
push
adc
es
aas
and
jmp
ret
sar
add
cmp
cmc
mov
add
push
or
ins
das
arpl
jnp
sbb
cmc
gs
shld
add
shl
jg
fs
mov
xchg
pop
add
cli
into
adc
dec
dec
mov
jecxz
icebp
and
pop
mov
clc
in
and
out
retf
stos
out
iret
cmp
sub
xchg
ja
sbb
sbb
pop
sub
out
ds
fmul
das
dec
gs
adc
sbb
fsub
mov
and
pop
call
sub
aaa
cmps
mov
lods
mov
retf
aad
ficom
mov
jmp
inc
cmp
sub
repz
call
dec
add
jecxz
sub
cmp
jmp
mov
dec
pop
fwait
inc
mov
fmul
mov
pushf
add
out
adc
ins
xchg
clc
jo
fnstcw
call
or
retf
push
outs
adc
adc
pop
xchg
mov
add
fsubrp
pop
retf
ss
and
xlat
add
fsub
pop
ror
and
push
and
test
pop
popf
inc
ss
xor
pop
cli
fst
aam
or
mov
lahf
cmp
adc
sbb
jns
mov
mov
xchg
xor
outs
aad
js
outs
lods
push
mov
inc
xchg
iret
sbb
(bad)
jnp
lahf
(bad)
pop
add
ret
call
sbb
in
je
fs
daa
cwde
dec
adc
std
mov
outs
jns
mov
push
push
push
ficomp
inc
xchg
mov
jge
retf
je
shl
repnz
lock
or
imul
call
xor
jle
das
sub
xchg
add
sub
nop
mov
or
ss
push
xchg
add
mov
pop
stc
pushf
xor
daa
test
jl
stos
xor
es
fistp
outs
mov
inc
ins
jle
in
inc
mov
out
mov
ins
into
mov
cmc
iret
mov
cli
pop
(bad)
test
xor
sti
and
xlat
bound
aaa
pop
add
xchg
mov
cmp
push
popa
add
and
xchg
or
lds
inc
repz
inc
test
adc
push
sub
or
ret
repz
(bad)
pop
shl
add
aas
ja
dec
cli
repz
nop
mov
pop
fcmovb
mov
(bad)
popa
call
pop
rcr
pmulhw
stos
adc
icebp
and
jne
and
xor
sub
mov
xor
jecxz
xchg
fstp
mov
data16
sbb
xlat
lahf
inc
jno
jno
sbb
xchg
lds
jmp
(bad)
adc
bound
mov
jg
cwde
gs
jge
ss
pop
retf
ja
mov
fwait
retf
pop
and
pop
or
stc
cli
mov
movs
push
sbb
ins
mov
xchg
or
aad
aad
jmp
sub
loopne
mov
call
jb
in
or
shr
outs
pusha
cmp
ja
mov
int3
xor
dec
fstp
mov
call
jo
jbe
push
mov
push
fadd
sub
and
cld
add
sbb
sbb
cmp
int3
pop
mov
in
(bad)
(bad)
sbb
or
fldenv
aam
int
(bad)
aam
xor
sahf
mov
repz
fdiv
sbb
lahf
mov
dec
xor
je
imul
retf
sub
xor
stos
(bad)
adc
int3
add
lahf
jne
inc
lahf
pop
mov
push
js
xchg
pop
pop
in
leave
xlat
mov
scas
mov
ret
jecxz
fneni(8087
cmp
pop
lods
stos
add
or
ins
nop
mov
pop
and
add
test
out
out
cli
ror
adc
or
and
out
ss
pop
push
in
sub
call
gs
out
test
das
mov
add
inc
xor
jl
cmp
jne
mov
daa
iret
cmp
push
into
pop
push
mov
pop
xchg
inc
adc
scas
mov
adc
add
adc
enter
sub
cli
mov
mov
cmp
in
mov
dec
fadd
or
(bad)
leave
arpl
dec
inc
sub
mov
sbb
inc
in
and
push
or
gs
adc
inc
lods
jo
enter
pop
mov
mov
rcl
stos
retf
(bad)
mov
inc
add
(bad)
push
adc
sti
add
jle
pop
lds
dec
sbb
mov
add
arpl
add
sbb
sub
fs
iret
test
call
retf
sbb
xchg
sbb
or
inc
inc
fisttp
pop
loope
cli
test
xchg
(bad)
(bad)
mov
mov
stc
sbb
mov
movs
jp
mov
mov
xor
and
and
xor
ds
adc
cmc
imul
jecxz
js
sbb
xor
sahf
pop
inc
push
pop
jo
add
xchg
es
push
adc
stos
xor
gs
xchg
setge
inc
shl
mov
or
shl
mov
adc
mov
gs
push
inc
push
leave
mov
popf
adc
aam
(bad)
dec
xchg
pop
outs
les
cmp
inc
mov
pop
sbb
pop
stos
nop
cs
shl
sbb
add
(bad)
adc
inc
cmp
dec
dec
xchg
ins
cld
sub
jge
(bad)
mov
repz
jecxz
mov
rcl
ja
into
pop
leave
stc
nop
or
push
test
stos
jmp
mov
push
bound
adc
call
retf
ficom
add
fnstenv
adc
test
mov
sbb
frstor
fbstp
cs
push
add
cwde
loope
mov
test
lock
and
mov
fimul
jmp
enter
hlt
mov
retf
mov
mov
lods
mov
push
dec
mov
stos
jns
cmc
icebp
and
retf
arpl
hlt
mov
adc
mov
push
cmp
cmps
out
jmp
adc
or
into
inc
outs
in
cld
mov
cld
ins
mov
sbb
(bad)
fild
aaa
js
mov
arpl
cwde
lds
js
aaa
push
shr
loop
pop
cmp
xor
dec
cmp
xor
ror
adc
jbe
sti
xchg
neg
dec
xchg
push
mov
pusha
inc
mov
fs
lods
pop
xor
retf
into
int3
jae
inc
retf
or
xor
out
movs
adc
enter
jmp
ret
mov
pushf
mov
call
cld
dec
or
sahf
pop
test
mov
dec
mov
adc
scas
xor
and
call
enter
jbe
fnstenv
dec
ins
bound
adc
popf
adc
or
mov
jge
jno
cld
dec
mov
mov
adc
pop
push
dec
sti
aam
outs
cld
aas
(bad)
sti
or
in
inc
sti
or
popf
pop
or
mov
js
dec
fsub
imul
add
test
(bad)
sub
push
dec
clc
pop
add
cld
es
les
arpl
xchg
and
push
inc
call
and
loopne
sbb
cmp
stos
mov
pop
cmp
in
ret
int
sbb
imul
add
and
enter
inc
sub
rep
or
sbb
inc
cdq
dec
rdpmc
out
je
mov
pop
xchg
in
out
xor
or
jl
push
push
je
out
mov
dec
sahf
mov
stos
hlt
out
jnp
int3
sub
leave
xchg
push
pop
rol
mov
es
movs
pusha
fcomi
iret
dec
mov
xor
sbb
dec
jb
add
idiv
ins
push
pop
test
mov
add
xlat
mov
(bad)
sbb
xor
mov
(bad)
pushf
push
int3
inc
jo
jecxz
fstp
loop
mov
cwde
or
mov
cdq
stc
lods
das
jae
shl
adc
mov
(bad)
inc
pop
cmp
icebp
mov
xchg
ror
fmul
sub
mov
xchg
icebp
ins
dec
pop
xor
and
daa
mov
std
dec
mov
test
cmps
aas
mov
das
stos
int3
(bad)
jmp
ror
call
inc
pop
or
pop
je
adc
or
jg
or
sbb
ins
push
push
(bad)
mov
rcl
aas
inc
sti
jmp
and
repnz
sub
jge
dec
pop
sbb
sbb
(bad)
sbb
punpckhdq
cdq
ret
adc
sbb
xchg
stos
lea
stos
jmp
inc
mov
push
cmp
pop
push
rcl
jbe
in
dec
and
iret
push
or
daa
inc
aas
icebp
enter
adc
jae
and
jle
inc
xor
ins
fisub
(bad)
jmp
stos
and
or
jbe
adc
mov
aam
xchg
cmp
div
cmps
lods
outs
fs
dec
mov
jmp
mov
cmp
jo
lds
gs
mov
push
fcmovu
movs
fs
sahf
mov
popa
jp
ret
and
jg
jmp
ins
mov
sub
and
retf
nop
lahf
pop
int
data16
adc
or
gs
or
enter
ins
dec
pop
mov
sbb
and
push
call
cmp
pusha
jge
imul
xor
mov
jo
pop
inc
stc
add
in
pop
mov
mov
aad
icebp
sahf
add
ins
fistp
(bad)
fisub
in
or
or
enter
lahf
push
enter
cmp
popa
out
cmp
stc
push
cmp
out
push
xchg
mov
adc
leave
dec
mov
(bad)
idiv
icebp
jl
(bad)
and
ins
mov
mov
cmp
fcom
enter
inc
(bad)
mov
ret
cmp
adc
or
lock
sub
push
push
movs
mov
add
jbe
aaa
mov
cwde
adc
sbb
xchg
jns
cdq
add
jns
fnstenv
mov
mov
call
cwde
call
jnp
dec
sbb
jmp
and
pop
cli
(bad)
mov
aas
test
gs
cmps
dec
add
clc
stos
xor
iret
mov
mov
and
dec
cld
outs
nop
pusha
psubusw
dec
and
popa
fisubr
and
push
and
mov
in
daa
repz
dec
in
xchg
or
addr16
pop
adc
lods
outs
ret
jae
push
xor
pop
jl
jne
fbstp
int3
xchg
mov
out
jnp
loope
or
loopne
aam
mov
push
mov
wbinvd
xchg
dec
jns
adc
cmp
call
test
push
push
clc
mov
in
fiadd
ins
sbb
sub
movs
aaa
outs
and
pop
inc
jns
aas
push
repnz
and
mov
lds
sub
pop
cmp
xchg
outs
(bad)
mov
test
std
inc
pop
(bad)
mov
push
not
mov
jp
sub
sbb
sar
xlat
dec
cmc
cmp
cmp
jecxz
out
rol
fsubr
jecxz
jle
sti
inc
or
cmp
js
xchg
push
(bad)
in
xchg
mov
sbb
popa
add
add
hlt
inc
stc
rol
mov
inc
into
jne
stc
clc
push
inc
sbb
jecxz
jmp
sar
add
jge
jmp
outs
push
jg
mov
in
imul
xor
js
ror
push
test
inc
cmps
adc
mov
cmp
or
aas
jmp
sahf
popa
shl
shr
xchg
js
jmp
mov
pop
mov
shl
test
stc
pusha
xor
or
adc
leave
imul
cmp
test
jmp
scas
shr
inc
add
add
xor
add
imul
mov
iret
(bad)
add
cmps
push
push
retf
mov
mov
imul
add
ret
pshufw
push
out
xor
or
mov
imul
daa
loope
cmc
jle
push
mov
std
add
cmp
sbb
dec
cmp
cli
add
je
rcl
dec
push
fisttp
pop
mov
scas
xchg
fnstenv
movs
or
xor
or
cmc
shl
jb
gs
mov
push
push
inc
retf
js
ins
push
add
aaa
mov
jne
ins
dec
fs
sahf
retf
loope
jg
mov
add
cmp
imul
xchg
inc
and
js
outs
add
inc
or
push
or
je
fmul
gs
dec
bound
sbb
xchg
iret
pop
adc
aad
stc
(bad)
mov
mov
cmp
arpl
fst
xlat
and
xor
daa
test
xor
fadd
loopne
jge
mov
sbb
sbb
lock
iret
inc
loop
push
loop
leave
out
xor
add
js
sub
daa
fs
xchg
cmps
das
dec
xlat
lods
scas
loope
popa
js
leave
pop
imul
push
pop
ins
stos
jae
dec
out
mov
wrmsr
les
jge
push
in
js
push
retf
xchg
sub
mov
repz
pop
mov
fs
mov
data16
movs
stc
dec
rcl
cmp
jp
mov
int3
scas
push
or
lds
cmps
add
add
adc
retf
or
fwait
jmp
cmps
push
frstor
ret
mov
es
adc
dec
into
push
mov
jp
je
out
mov
xchg
sbb
push
adc
mov
retf
test
mov
mov
xor
cmp
xor
icebp
lahf
fst
fisub
mov
or
out
or
xchg
aad
loope
lds
cmc
xchg
idiv
adc
inc
xor
fs
scas
into
lds
lods
cs
add
loop
sbb
pop
ja
je
pop
mov
lds
pop
movs
add
fcomp
(bad)
enter
xor
push
cdq
xor
fsubr
movs
mov
jle
xchg
xor
push
(bad)
test
pop
ja
mov
ret
or
cwde
jne
fst
add
mov
(bad)
or
lods
aas
adc
or
stc
in
mov
dec
les
dec
xor
enter
xor
mov
jbe
add
out
movntq
cmp
pushf
(bad)
pusha
mov
push
arpl
dec
dec
inc
cld
dec
jno
sbb
push
jmp
inc
push
adc
mov
mov
sub
nop
mov
aaa
into
xchg
cmp
jge
cdq
loop
setle
xchg
sbb
call
or
and
dec
inc
popf
xor
je
xor
nop
aas
str
mov
mov
(bad)
jns
inc
sub
fld
add
ins
cmps
push
fnstsw
add
aas
mov
movs
sbb
add
sub
out
das
jmp
jg
int
inc
fidivr
cld
and
mov
adc
dec
jbe
out
leave
sbb
out
cmp
jmp
jp
or
and
jg
dec
add
cld
(bad)
sti
ins
lahf
pop
xor
mov
sub
push
data16
pop
mov
in
in
sti
xchg
loopne
int
or
push
or
sbb
aaa
(bad)
adc
inc
iret
mov
in
stos
push
pop
sar
mov
xlat
dec
mov
mov
pop
dec
fnstenv
mov
push
fldcw
pop
les
pop
sbb
mov
lds
es
cld
inc
ret
loopne
popa
lock
mov
mov
call
pushf
je
fadd
shl
daa
mov
test
dec
pop
out
pop
jmp
fadd
xlat
sbb
lods
jecxz
jnp
(bad)
dec
xchg
add
movs
and
fwait
and
lods
jg
xor
sub
xchg
shl
je
call
and
sahf
xchg
test
call
popa
loope
das
clc
loope
cmp
mov
jne
ins
ins
test
dec
lods
mov
out
loope
sar
add
mov
push
jmp
imul
(bad)
repz
fbstp
pop
cld
or
(bad)
retf
xor
jl
dec
fadd
xchg
mov
call
sbb
add
ds
dec
xlat
sbb
aam
pusha
in
pop
jo
cmp
std
sbb
cs
adc
adc
sub
leave
push
xor
idiv
pop
xor
mov
fsubrp
pop
movs
push
inc
dec
inc
inc
and
test
or
fldlg2
dec
sbb
gs
daa
mov
les
jno
jge
or
xor
inc
adc
int3
ja
sahf
retf
cmp
and
sbb
jg
jb
sub
stos
lock
push
jmp
bound
int3
jbe
or
jg
or
aas
mov
scas
add
pop
push
inc
mov
push
add
test
rol
inc
enter
xchg
xor
and
jle
cmp
mov
(bad)
repz
add
enter
mov
neg
lods
xor
rol
mov
push
cmc
test
nop
dec
jo
sbb
lods
mov
push
ret
push
ror
push
sti
cmp
jno
sbb
sub
ja
sti
ins
call
mov
xchg
loope
mov
(bad)
fidivr
rol
fisubr
add
call
dec
add
iret
dec
(bad)
test
(bad)
fucom
lods
mov
in
mov
adc
push
in
and
rcl
nop
jo
xchg
add
push
pop
push
jmp
rcl
mov
mov
xor
mov
mov
sbb
mov
outs
cmp
cmc
jnp
mov
in
frstor
jmp
sbb
push
inc
xchg
cmp
les
jns
push
fs
fwait
adc
ret
jae
test
out
push
test
jmp
cmp
mov
sub
int
iret
xchg
push
mov
push
jno
gs
xchg
and
fidiv
jl
lock
icebp
in
xchg
push
hlt
mov
icebp
(bad)
scas
sbb
mov
dec
sub
ds
idiv
loope
shl
xchg
xchg
ds
cmc
xchg
pop
adc
or
(bad)
imul
cmp
xchg
and
pop
jns
and
mov
std
leave
xlat
sub
mov
jnp
outs
push
mov
ja
push
test
mov
pop
or
push
repz
mov
push
inc
dec
enter
jmp
fadd
(bad)
sti
neg
mov
or
aas
ret
mov
mov
call
or
out
jns
ror
iret
cmp
push
ror
mov
mov
sti
jb
dec
enter
and
sub
mov
xchg
sub
out
outs
ficomp
aam
test
icebp
push
jp
ins
sub
js
loope
xchg
inc
lahf
shl
arpl
cmp
(bad)
loope
gs
out
daa
push
shl
mov
ins
dec
pop
dec
mov
je
inc
sub
ret
ficomp
jae
mov
shl
addr16
out
ja
daa
cwde
fisubr
inc
call
jmp
ret
cmp
mov
bound
push
sahf
popf
pop
imul
sub
inc
push
call
sub
mov
neg
in
(bad)
mov
pop
mov
jno
cmps
inc
cli
inc
stos
inc
retf
push
mov
add
push
ret
out
lock
out
push
outs
or
xchg
sti
(bad)
cmc
jecxz
mov
dec
in
(bad)
jbe
jns
mov
aad
sub
cmp
sbb
les
neg
sbb
and
sub
or
cmp
inc
pop
lock
fs
mov
gs
ins
pop
retf
sbb
das
xchg
cmc
fnstcw
push
mov
lods
in
cli
das
push
jo
(bad)
aas
(bad)
push
test
sbb
arpl
mov
inc
cmp
in
sub
xor
lds
mov
daa
add
hlt
lods
fs
inc
pop
or
idiv
lock
xchg
jae
push
inc
mov
retf
aaa
daa
xchg
pop
push
pop
mov
pushf
cmp
adc
inc
fbstp
push
cmps
add
das
cmps
and
in
mov
fmul
test
fnstenv
mov
lds
sub
mov
out
jb
pop
sbb
mov
aam
or
int
into
and
jg
mov
sbb
pop
ins
aam
fsubrp
add
sti
repz
call
stos
mov
push
aam
pop
mov
mov
cmps
rol
(bad)
mov
adc
cmc
outs
dec
ins
aas
ret
cmp
push
mov
jle
or
outs
inc
cwde
(bad)
aad
and
mov
repz
sbb
mov
aam
push
mov
cli
pop
js
mov
lock
neg
mov
sti
lock
mov
mov
xchg
mov
sbb
sub
movs
add
sbb
js
(bad)
(bad)
mov
jns
xor
mov
push
(bad)
mov
push
add
scas
fsub
(bad)
into
mov
js
jnp
adc
(bad)
stos
repz
cmc
ficomp
pop
adc
inc
nop
sbb
xchg
sbb
popa
leave
mov
ja
sbb
lods
nop
sti
jle
adc
adc
movs
fwait
cmp
xchg
sbb
mov
sbb
xor
mov
clc
add
mov
pop
xchg
xor
push
xchg
shl
fwait
sbb
cmp
jmp
shl
icebp
ret
ror
(bad)
arpl
stos
adc
fnsave
push
add
pop
sub
mov
mov
and
imul
aam
mov
sub
(bad)
ror
shr
mov
int
and
sbb
pop
push
dec
or
in
push
ret
ins
shl
(bad)
push
mov
std
and
inc
pop
cmp
cwde
mov
sbb
loope
mov
jmp
ds
cmp
cmp
enter
ror
dec
jbe
scas
jecxz
jmp
adc
cmp
inc
jmp
and
jae
int3
ds
mov
xor
and
sbb
inc
adc
enter
sbb
out
(bad)
pusha
mov
(bad)
cmp
(bad)
jns
mov
lds
jmp
adc
movs
pop
shr
add
(bad)
shr
stc
cmp
lahf
push
or
popa
mov
mov
les
fisttp
sbb
mov
int3
mov
and
cmc
dec
push
scas
mov
push
aas
xchg
ins
mov
adc
jno
jo
fimul
adc
mov
sar
pop
inc
push
push
pusha
sbb
mov
cmp
hlt
xlat
dec
es
push
dec
jge
jbe
into
fist
jns
add
into
cli
popa
ss
xor
jmp
sbb
add
sbb
sub
pop
neg
scas
in
rol
or
and
retf
test
and
sub
push
inc
push
outs
dec
ss
mov
loope
in
and
in
push
xor
mov
mov
mov
lahf
xor
stos
and
pop
int
sbb
push
dec
mov
aad
(bad)
(bad)
mov
or
dec
test
pop
cmp
outs
cmp
dec
sbb
fidiv
leave
rcl
outs
out
adc
nop
int3
dec
ret
test
in
call
in
pop
cmp
in
ins
imul
mov
aas
dec
push
in
in
sub
sti
push
out
or
jnp
inc
add
(bad)
out
xchg
inc
outs
mov
and
fdivr
jmp
cmp
clc
add
mov
pop
pop
nop
sbb
jmp
ins
pop
mov
xor
sub
call
inc
mov
(bad)
fisubr
movs
adc
adc
hlt
xor
fwait
xor
out
jmp
fldcw
inc
ficom
mov
push
cmp
push
pop
test
stos
dec
sbb
sub
mov
jno
retf
repnz
mov
aaa
mov
mov
add
enter
inc
into
dec
movs
pushf
cmp
push
cmp
enter
adc
and
outs
arpl
xchg
xor
sub
inc
xlat
pop
ret
retf
fmul
cli
sub
fptan
pop
jl
pusha
cmp
pop
call
or
and
imul
push
mov
mov
add
das
adc
adc
mov
dec
sbb
dec
je
ror
stos
ror
es
add
push
jo
hlt
int
jbe
adc
sub
adc
jae
mov
mov
pop
jns
dec
lahf
retf
or
ins
dec
sub
movs
and
loope
dec
sti
cmps
dec
jns
jne
push
out
scas
addr16
lds
pop
std
and
shl
retf
lahf
das
test
mov
jo
out
inc
and
ffree
inc
mov
fsub
mov
push
imul
es
movs
or
lods
adc
mov
adc
inc
out
push
pushw
cmp
mov
mov
cmp
(bad)
sub
fld
adc
loopne
xlat
mov
rcr
ret
es
sbb
mov
int
mov
push
mov
shr
or
rol
aas
inc
sub
xor
lahf
and
ins
outs
cvtps2pd
mov
fucomip
pop
pop
loope
sbb
adc
je
xor
jbe
das
push
loope
mov
jno
data16
pop
mov
push
jo
push
inc
inc
popf
or
push
int3
mov
mov
popf
jns
and
cwde
aad
or
sbb
cmc
fild
push
je
jg
sub
mov
mov
dec
out
and
jecxz
inc
aas
pop
sti
out
add
cmp
xor
cmps
retf
lods
dec
xchg
loopne
xor
push
mov
cmp
push
xlat
ja
mov
dec
in
(bad)
stc
in
imul
aas
inc
add
call
pop
xchg
sar
pop
add
fst
fistp
inc
cli
fwait
clc
xchg
stos
mov
outs
pop
stos
icebp
lods
jle
std
faddp
movs
cs
js
ins
cmp
imul
sbb
sbb
inc
cmp
pop
repz
mov
jg
clc
push
data16
fild
mov
adc
cmp
sub
cmp
cmp
mov
and
add
in
stos
mov
rol
push
dec
fbstp
paddw
mov
cwde
call
mov
mov
stc
or
cmps
scas
arpl
int3
mov
and
shl
jbe
mov
stos
pop
mov
inc
ficomp
shr
mov
push
repnz
mov
push
sub
jmp
popa
pop
cmp
sub
push
mov
add
jns
daa
xor
mov
or
mov
lahf
mov
adc
fbstp
ret
add
sbb
xchg
adc
mov
inc
retf
leave
fbstp
pusha
call
aam
and
pushf
adc
xor
pop
cmp
sub
js
enter
add
cmc
in
pusha
jmp
inc
xchg
and
std
inc
iret
sbb
xchg
ja
inc
mov
mov
sub
movs
arpl
add
mov
push
cmp
je
jmp
cmp
or
dec
xor
loopne
adc
scas
arpl
inc
leave
ins
push
cmps
pushf
mov
mov
xchg
sbb
ins
cli
jecxz
xor
sar
dec
sub
jge
in
test
aam
popf
and
adc
add
mov
test
adc
test
jbe
adc
pop
aas
enter
xchg
inc
mov
pop
jno
pop
test
imul
idiv
icebp
ja
jl
jl
sbb
inc
aad
adc
loop
or
aas
push
addr16
call
mov
push
pop
test
cmp
mul
stc
pop
or
inc
pop
push
clc
clc
push
bound
fs
ins
lea
addr16
dec
and
pop
jno
in
xor
cld
nop
retf
pop
int3
inc
pop
cmp
(bad)
test
mov
sbb
call
sahf
nop
stos
pushf
ror
add
dec
imul
sub
addr16
fsubr
call
push
data16
or
(bad)
dec
dec
adc
popa
jle
stos
mov
outs
pop
sub
es
jbe
jg
and
imul
cmp
stos
mov
lds
jecxz
add
stc
push
retf
jle
cmp
or
adc
out
xchg
(bad)
sbb
sub
add
or
pop
cld
sub
(bad)
lds
sbb
mov
pop
or
jno
push
push
dec
jg
dec
fadd
das
sahf
cld
outs
(bad)
in
fdiv
ret
(bad)
fcmovnb
fcom
(bad)
(bad)
icebp
inc
test
enterw
stos
sbb
mov
adc
ja
retf
cmp
shl
mov
xchg
or
mov
lds
pop
push
push
pop
mov
mov
ret
cmp
or
mov
jne
test
xchg
mov
or
jmp
cmp
loopne
(bad)
outs
out
fst
fs
pop
xchg
cmc
lea
jge
or
mov
sub
jns
and
adc
pop
jo
sahf
imul
cdq
cld
fs
mov
xchg
dec
sbb
movs
call
movs
out
popf
int
mov
jno
push
cmp
ror
daa
mov
call
mov
bsf
rol
out
mov
shl
adc
jns
adc
shl
mov
in
data16
sbb
mov
lock
je
cmp
dec
ds
pop
or
dec
ss
ret
rol
xlat
outs
scas
jl
cli
js
and
push
sbb
movs
adc
in
pop
cmp
and
pop
fbstp
movs
xor
les
pushf
leave
test
test
and
xor
add
push
mov
(bad)
fidivr
movs
(bad)
data16
pop
ins
inc
into
dec
ja
aam
inc
or
int3
dec
(bad)
or
int
xchg
dec
(bad)
(bad)
cli
gs
jmp
jmp
and
test
imul
xchg
cmp
dec
sub
mov
sbb
fdivrp
and
push
adc
push
mov
adc
cdq
iret
mov
popa
fnstenv
jmp
pusha
mov
jno
fs
pusha
ret
add
push
jbe
retf
pop
cmp
mov
add
jns
add
pop
jne
sub
imul
jne
sub
rcr
sub
push
call
enter
sbb
test
rol
scas
movs
cli
outs
or
push
into
enter
xchg
stc
cli
out
into
mov
pshufw
sub
cmps
adc
push
pop
and
faddp
sbb
enter
sbb
inc
adc
pusha
pop
sti
mov
(bad)
in
(bad)
aaa
push
das
lds
xor
ins
mov
and
repz
xor
push
mov
fdivr
adc
loop
inc
xor
fdivr
and
jle
call
imul
push
(bad)
aas
ins
cmp
int
pushf
dec
mov
jnp
push
add
sbb
jecxz
inc
adc
adc
jae
dec
dec
and
mov
ja
mov
pop
mov
scas
inc
pop
hlt
mov
inc
popa
adc
out
aaa
fsubr
pusha
jo
clc
mov
in
inc
loopne
leave
leave
lods
jnp
movs
dec
shl
mov
pop
pop
and
push
cmp
adc
in
inc
cmp
and
push
xor
out
cs
pop
push
addr16
cmp
bound
jnp
loopne
(bad)
into
(bad)
imul
dec
jns
imul
lahf
mov
mov
ret
call
pushf
pop
shl
addr16
mov
mov
and
mov
xchg
pop
retf
(bad)
pop
sub
mov
or
retf
into
fcom
imul
push
pop
enter
and
cmc
mov
shl
retf
inc
xchg
xchg
mov
sub
fst
aas
xor
jp
push
stos
pop
fdiv
bound
ds
push
es
cmp
and
pop
rol
jbe
sar
jle
dec
mov
or
sbb
imul
mov
push
fstp
inc
ret
arpl
mov
mov
daa
ins
xchg
fwait
push
cdq
sbb
test
xchg
inc
js
sbb
pop
(bad)
gs
sbb
test
ror
outs
out
sti
popa
and
push
ds
pop
mov
sbb
gs
aas
aam
and
adc
and
mov
xchg
xchg
repz
pop
hlt
shl
in
xlat
mov
test
xchg
mov
(bad)
jbe
gs
ud2
into
mov
scas
sbb
mov
dec
adc
mov
mov
repz
stc
adc
jp
das
inc
mov
jbe
add
inc
rcr
mov
test
lock
sub
pop
stos
xchg
sbb
dec
inc
sahf
jp
mov
mov
add
out
xchg
adc
mov
leave
int
xor
js
repnz
or
cmp
sahf
pop
add
and
(bad)
popfw
mov
sub
xchg
sbb
cmp
lods
div
add
jbe
jle
retf
xchg
into
cdq
retf
not
imul
scas
pop
xchg
dec
ret
(bad)
and
add
add
mov
enter
mov
in
jge
dec
es
jl
push
adc
lods
fcomp
les
enter
cmps
fild
push
xor
adc
pop
or
mov
ret
dec
mov
sbb
fs
adc
outs
mov
xchg
adc
mov
or
cmp
(bad)
out
dec
ss
bound
or
add
sbb
add
push
mov
shl
jbe
or
test
into
inc
out
pop
aad
sub
xchg
lock
outs
xor
(bad)
xor
scas
and
fiadd
call
stos
mov
daa
adc
not
mov
dec
repnz
cmp
jb
es
dec
sbb
imul
xor
or
mov
test
dec
loop
sbb
int3
out
add
mov
and
xor
pushf
mov
shl
lods
inc
imul
cmps
dec
mov
push
cmc
(bad)
js
sbb
or
or
iret
or
bound
shl
mov
jbe
xchg
or
(bad)
mov
sbb
popa
cmp
arpl
jp
(bad)
mov
mov
lds
xchg
dec
sub
mov
mov
and
adc
sub
and
rol
adc
pop
cmps
mov
imul
jmp
jecxz
ror
outs
dec
cmp
(bad)
push
(bad)
dec
stos
jb
jge
adc
cmp
adc
jo
fwait
hlt
sub
mov
repz
cmc
addr16
and
sar
sub
sub
retf
adc
push
loopne
sbb
lea
rcl
ret
fsubr
push
xor
lock
and
out
push
and
outs
push
std
add
cmps
lock
loope
sub
repz
xchg
xlat
pop
mov
and
in
stc
sar
xor
push
push
stc
pop
repz
test
and
mov
fistp
mov
xor
nop
dec
pop
jmp
shl
loope
std
(bad)
cmc
push
jp
addr16
pusha
push
push
or
xchg
add
retf
pop
pop
xchg
push
pop
pushf
fistp
lods
xchg
rcl
xor
es
(bad)
xor
and
dec
addr16
mov
(bad)
loope
hlt
or
mov
inc
jmp
jae
cmc
sub
adc
cmp
dec
cmp
or
cmp
or
jmp
jge
sub
hlt
add
cmp
inc
xchg
gs
scas
cli
or
popf
ins
in
jmp
out
mov
cli
cwde
pop
leave
inc
arpl
stos
mov
xchg
out
cvtdq2ps
(bad)
(bad)
adc
xor
pop
cmp
pxor
repnz
xor
or
test
adc
out
loop
out
sub
rol
jg
(bad)
xor
(bad)
mov
nop
or
jnp
xchg
out
push
sub
daa
inc
into
mov
xor
inc
pop
pop
inc
and
sub
stos
daa
aas
mov
inc
(bad)
std
shr
adc
jmp
mov
ds
adc
cmp
xchg
sbb
push
sub
cmp
xor
test
out
ret
jmp
adc
pop
rcr
outs
shr
adc
xchg
push
in
jae
inc
or
repnz
push
add
fwait
xchg
test
out
mov
pop
sbb
sub
fdivr
dec
push
cmp
add
in
sahf
imul
adc
jne
cwde
cmp
out
les
push
xlat
movs
or
adc
push
addr16
dec
mov
ja
sub
push
jl
xor
cmp
sbb
daa
xchg
fild
adc
test
or
loopne
cmp
jbe
pop
aam
mov
das
push
jg
out
pop
push
cmp
push
retf
mov
inc
lods
xchg
jp
jecxz
xchg
daa
mov
xchg
pop
mul
xchg
in
into
sbb
(bad)
out
push
repz
adc
xlat
adc
sbb
out
push
mov
rol
adc
mov
sub
sub
rol
sbb
mov
jne
pop
imul
mov
std
(bad)
mov
mov
dec
xchg
dec
mov
and
call
cmp
mov
sub
dec
jo
sub
mov
xor
adc
jg
sbb
lds
fcom
sbb
mov
and
and
ds
ret
and
fwait
or
bound
xor
arpl
mov
les
outs
add
add
xchg
rcl
lea
stos
cmps
fwait
out
ror
mov
mov
or
jbe
arpl
pop
pop
mov
(bad)
cld
test
add
repz
and
push
mov
sub
dec
pcmpeqb
sub
icebp
jle
sub
neg
in
outs
and
ja
loope
push
jge
sub
ret
mov
in
add
mov
sub
and
dec
outs
adc
mov
lds
les
xor
push
sub
cli
dec
xchg
push
mov
shl
aad
pop
dec
mov
out
cmp
adc
pop
loope
mov
out
mov
std
mov
pop
adc
sbb
mov
call
xchg
add
mov
out
cmp
mul
adc
(bad)
mov
sbb
pop
xor
bsf
addr16
dec
outs
inc
js
jmp
push
xchg
lock
pop
pop
es
mov
pop
aaa
pop
or
jno
or
ins
and
hlt
push
cli
out
push
icebp
jecxz
iret
cmc
jb
sub
int3
cwde
add
or
js
lock
(bad)
loopne
mov
push
push
movs
idiv
xchg
adc
ss
aad
sti
pop
inc
xor
cmp
pop
dec
push
bnd
mov
pop
shl
fisub
(bad)
out
ret
test
adc
cmp
adc
(bad)
loop
ror
dec
loop
fwait
int3
outs
gs
(bad)
aam
stos
jmp
les
cmp
in
adc
and
xor
call
rcr
gs
outs
hlt
cmp
test
popf
pop
jbe
jmp
cmp
dec
and
push
enter
ss
inc
push
scas
jo
ins
xor
inc
and
mov
xor
lods
jge
dec
xchg
imul
out
or
and
jns
adc
sbb
or
in
cdq
mov
les
push
mov
imul
test
out
sbb
xchg
retf
dec
xor
rcl
ret
pushf
es
mov
outs
(bad)
lgs
sbb
sub
fiadd
mov
ret
xchg
sbb
fs
fcom
std
cmps
and
xchg
add
fnsave
lock
jmp
ja
adc
xor
dec
adc
test
cli
rcl
dec
mov
shl
inc
sub
mov
sti
xor
push
into
push
(bad)
push
(bad)
push
xlat
xor
je
push
xchg
cmp
ds
jmp
clc
aas
enter
pop
inc
cmps
cdq
jecxz
sbb
push
(bad)
push
repz
int
dec
test
cmc
sbb
add
mov
and
dec
xor
cmps
clc
dec
fbstp
out
aas
(bad)
jnp
imul
jmp
or
lea
jle
push
cmps
mov
out
fistp
sahf
call
loop
dec
popa
or
adc
xchg
popf
sub
scas
movs
in
dec
outs
addr16
out
pop
inc
fcomip
ins
adc
dec
xor
mov
add
pop
bound
rol
adc
or
imul
fsub
daa
adc
rcl
mov
imul
rcr
jge
sbb
dec
hlt
xor
in
mov
loope
mov
inc
jnp
push
int
(bad)
or
inc
outs
xchg
xchg
jb
nop
mov
pop
mov
push
push
pop
or
xor
shr
xchg
inc
cmp
add
ret
dec
adc
xchg
pusha
xor
jle
ins
scas
out
mov
mov
lds
xor
inc
cmp
mov
lock
xchg
mov
inc
jne
push
inc
retf
jmp
sbb
xchg
test
push
jbe
into
mov
mov
xchg
(bad)
retf
dec
sbb
sbb
xor
fwait
wrmsr
push
sbb
mov
adc
sahf
les
and
xchg
cmp
mov
pop
das
dec
mov
test
push
icebp
rol
pushf
add
jecxz
xor
outs
pusha
fcmovu
push
push
push
arpl
inc
dec
dec
fistp
loopne
fcomp
ret
int3
mov
fiadd
adc
sahf
jl
xchg
rcr
stos
cmp
ss
cmp
jne
loope
addr16
inc
outs
mov
sbb
jle
bts
stos
in
and
sub
aas
stos
lock
mov
(bad)
sub
xchg
adc
shl
fs
mov
pop
movs
mov
shl
mov
aad
rcr
jmp
scas
inc
push
push
cmc
les
stc
scas
push
std
(bad)
mov
xlat
add
adc
push
aad
or
lahf
cmp
dec
cmps
hlt
fild
inc
sub
gs
in
cwde
lods
add
shl
das
mov
scas
daa
in
mov
retfw
ja
jmp
xor
jnp
inc
jp
jne
sbb
in
xchg
xchg
jge
imul
or
sbb
movs
fistp
jle
ja
imul
mov
enter
xchg
addr16
cld
ror
add
dec
pop
pop
pop
mov
adc
xchg
xchg
stos
mov
fisttp
stos
fmul
mov
sub
in
or
jb
mov
fstp
xchg
cmp
mov
fs
jbe
ins
call
push
mov
adc
add
mov
adc
jmp
mov
sbb
not
out
(bad)
jl
pop
daa
fimul
inc
mov
movs
mov
dec
aas
ret
outs
inc
cmp
and
mov
sub
aaa
mov
pop
outs
mov
dec
push
int
push
enter
push
or
xor
sti
retf
iret
dec
xchg
add
add
and
out
cmp
int3
movs
push
inc
sbb
aad
fsub
sub
push
movs
lods
inc
cs
and
daa
test
mov
fnstenv
pop
push
outs
ds
sub
mov
test
jecxz
dec
stos
pop
test
jo
jno
push
xor
and
mov
sub
adc
xor
xor
pop
not
and
fnstsw
out
in
mov
popf
inc
jae
sub
adc
or
(bad)
and
cmp
cs
mov
xchg
dec
jl
call
inc
or
lods
add
sbb
fs
add
nop
cld
cli
dec
dec
out
popf
inc
xor
mov
inc
test
test
pop
in
push
nop
lahf
mov
cmc
pop
aas
fwait
cmp
inc
enter
push
or
scas
jmp
and
mov
xrelease
adc
cwde
cmove
add
push
jg
aaa
sub
xor
adc
loopne
inc
retf
adc
jae
cmps
sbb
sahf
fnstenv
fisub
sbb
push
cmp
mov
movs
fnstcw
in
or
mov
fs
and
sbb
and
push
dec
mov
dec
into
push
ss
mov
loopne
ret
fisubr
aaa
sahf
loopne
mov
movs
push
adc
in
cs
push
movups
cmp
test
pop
retf
fnstcw
ret
into
mov
cmp
aad
jle
mov
inc
pushf
(bad)
mov
mov
mov
cmp
adc
inc
dec
arpl
scas
mov
mov
out
xchg
mov
xor
retf
inc
loop
push
dec
inc
xor
(bad)
popf
(bad)
push
mov
pop
xor
(bad)
xor
loope
loope
fnstsw
enter
stos
inc
(bad)
cmp
jbe
aam
ret
stos
imul
xor
stos
mov
xor
sbb
pop
add
pop
shl
cmp
mov
shl
push
leave
in
cmp
cmp
push
ror
mov
or
loope
or
(bad)
mov
and
adc
push
mov
ds
(bad)
or
and
mov
arpl
cmp
sub
jo
adc
cmps
fucomi
lea
add
je
xchg
out
popa
push
inc
test
icebp
aas
push
jecxz
sti
arpl
sub
mov
xchg
adc
inc
jge
test
fistp
or
test
hlt
fisub
pop
outs
add
cmp
or
push
dec
cmp
in
push
mov
jnp
mov
retf
jno
sbb
cmp
addr16
mov
push
or
test
aas
or
or
scas
mov
add
rcr
movs
(bad)
bound
cwde
dec
dec
dec
add
mov
push
and
rcl
inc
mov
mov
mul
int3
mov
xor
test
aad
cmp
loope
and
icebp
lahf
daa
lea
sahf
outs
popa
push
aam
cmp
outs
adc
aam
fdivr
mov
shr
out
and
mov
fwait
adc
loope
jp
push
pop
push
stos
pop
jle
and
stos
mov
jb
retf
imul
cmps
mov
fs
outs
xchg
ror
lock
aaa
mov
dec
(bad)
movs
and
sbb
mov
xor
pop
std
mov
jbe
and
push
mov
data16
push
or
call
xor
(bad)
adc
cmc
(bad)
pop
cli
xor
sti
fs
or
pop
mov
adc
jge
in
rcr
imul
jno
xchg
pop
repz
outs
cmp
mov
push
xchg
sar
test
int
push
sahf
add
xor
push
mov
sbb
loopne
mov
sub
out
jge
js
dec
push
push
pusha
hlt
(bad)
aaa
imul
adc
xchg
in
xchg
jle
popf
jbe
mov
jmp
and
sbb
icebp
sti
retf
cwde
inc
xrelease
cmp
lods
scas
outs
int3
neg
lods
lahf
or
rcr
popf
dec
addr16
fadd
aad
cmp
mov
loopne
fcomi
push
cmps
inc
pop
mov
xor
xchg
jb
je
mov
push
jbe
pop
ds
xor
int3
js
cdq
retf
stc
test
int3
or
and
pop
gs
sti
fdivr
(bad)
sub
mov
inc
shl
jmp
cli
and
fisttp
cld
popf
sbb
(bad)
mov
leave
add
rol
int
or
xor
push
jno
int
das
adc
shr
push
mov
mov
movs
aad
add
push
inc
mov
stos
(bad)
into
cmp
pop
jmp
lods
in
aam
shl
scas
mov
add
int3
push
mov
mov
sub
pusha
jge
adc
jge
and
pop
pop
pop
jmp
dec
hlt
and
pushf
cmp
fucomi
ret
addr16
test
je
imul
btr
or
inc
cs
xchg
sub
jp
dec
mov
aam
outs
js
stos
loope
jno
clc
jp
pop
mov
daa
mov
jbe
jnp
pop
fimul
dec
xor
ret
shl
or
adc
hlt
or
lods
aad
add
cmp
add
jecxz
test
or
cmp
xchg
pop
sub
aad
mov
inc
sbb
lods
push
loopne
jae
inc
clc
xor
xchg
cmps
push
mov
mov
not
repz
(bad)
cwde
push
shl
dec
mov
aaa
aas
shl
fidiv
xchg
mov
(bad)
or
aaa
inc
retf
hlt
lahf
test
jle
test
inc
xor
jns
push
mov
shl
stc
jbe
and
pop
int
jae
arpl
pop
(bad)
cmps
(bad)
jae
or
shr
out
cmp
pop
hlt
shl
cmp
or
dec
add
push
push
pop
movs
push
or
(bad)
xchg
(bad)
(bad)
ds
jmp
(bad)
sbb
dec
push
sbb
add
mov
(bad)
or
or
ins
je
pop
mov
sbb
hlt
jno
in
mov
retf
jmp
cld
addr16
and
nop
sub
cmps
inc
pushf
xchg
repnz
(bad)
out
(bad)
jp
adc
push
xchg
int3
loopne
sub
loop
mov
jbe
call
arpl
lock
jmp
in
inc
xchg
sub
out
test
inc
xchg
in
in
lea
sbb
aam
pop
push
mov
sbb
xor
cmps
mov
data16
sti
inc
rol
xchg
mov
loopne
mov
enter
push
hlt
js
enter
and
aaa
mov
fst
mov
lods
bound
popa
retf
xor
adc
inc
scas
mov
cdq
loopne
cmp
inc
dec
ret
sti
pop
nop
mov
in
outs
mov
in
sub
ins
cmp
test
test
hlt
lahf
and
bound
and
push
push
popa
imul
inc
jb
mov
xchg
sbb
test
mov
sub
cmp
imul
or
xor
popa
aas
inc
mov
cmp
es
data16
dec
jo
stos
and
pop
cdq
cmp
es
js
pop
dec
jb
mov
jl
fdivr
(bad)
add
cli
xor
(bad)
loope
movs
jno
pop
push
mov
scas
aas
ret
jbe
dec
fisttp
cmp
test
push
cmp
jo
cwde
mov
add
mov
xlat
popf
rcr
mov
lahf
push
xchg
push
and
mov
outs
dec
test
int3
lods
or
xchg
sti
cmp
in
imul
rol
fwait
pop
jbe
push
bound
dec
(bad)
and
dec
and
mov
jmp
jo
inc
jmp
fnstcw
xchg
rol
aas
dec
xchg
outs
cmp
popf
cmps
mov
stc
ja
test
gs
cmp
pop
xor
xchg
cmp
xchg
or
out
movs
sar
or
and
and
mov
lahf
ret
cmp
cs
mov
add
imul
pop
lahf
and
stos
arpl
sbb
nop
adc
retf
dec
nop
xchg
out
in
cmps
adc
jge
inc
movs
mov
aas
and
xor
cmps
jmp
and
fistp
mov
fwait
pop
cli
jns
enter
out
xchg
xor
jno
xor
loopne
mov
mov
mov
pop
mov
fldcw
enter
ja
adc
cmp
inc
jp
push
loopne
ror
cmp
shl
cmp
stc
mov
cld
(bad)
in
aad
ret
sbb
dec
(bad)
lahf
imul
sti
inc
or
jle
nop
dec
in
loopne
sti
(bad)
mov
pop
dec
out
mov
stos
push
adc
out
pop
dec
sub
enter
int
mov
mov
stos
popa
mov
lea
pop
aaa
add
xor
ds
mov
(bad)
mov
fdivr
xchg
in
lods
add
jmp
or
jp
sbb
xchg
ret
xchg
shl
push
mov
push
aam
push
not
add
mov
enter
repnz
lods
fldcw
inc
mov
adc
loopne
lods
xchg
push
push
jns
cmps
(bad)
dec
bound
cmp
jmp
xor
cwde
or
xchg
retw
jmp
or
pusha
xchg
dec
pop
mov
dec
(bad)
(bad)
sbb
pop
sub
cmp
mov
xchg
and
scas
push
push
xchg
adc
loopne
jnp
(bad)
pop
inc
ret
mov
jmp
inc
fs
sub
scas
nop
pop
adc
xchg
pop
cli
sub
sar
fisttp
push
inc
push
retf
mov
add
add
repnz
loopne
fist
fwait
out
sub
mov
mov
pop
and
cmp
xchg
xchg
loopne
and
je
jmp
mov
xchg
mov
xchg
pop
jo
fstp
dec
sbb
retf
cmp
dec
push
sub
adc
and
sahf
shl
sbb
push
mov
xchg
mov
ds
dec
pop
cs
aaa
call
in
cmp
or
mov
cs
or
popa
ret
add
dec
nop
dec
and
mov
jns
paddusb
mov
mov
ret
in
xchg
sbb
out
jl
icebp
aaa
push
or
mov
jne
lods
scas
inc
pop
cmps
pop
(bad)
sti
push
std
push
sbb
jo
lahf
mov
call
or
fadd
push
nop
xor
sar
xchg
mov
sbb
xor
jae
and
jno
cwde
sbb
mov
aam
add
dec
mov
push
jae
fldenv
mov
int
lods
mov
add
xchg
out
in
mov
and
cmp
or
mov
sbb
dec
in
std
lock
cli
js
in
adc
mov
lock
dec
outs
sbb
test
or
mov
fwait
and
mov
jnp
dec
les
int
ret
fmulp
mov
or
sub
in
and
sub
mov
add
clc
aaa
pushf
inc
cli
xor
sub
aaa
jmp
mov
(bad)
jnp
dec
in
push
cmp
add
ret
shr
inc
popa
inc
test
out
ins
pop
shr
hlt
xchg
xchg
inc
in
mov
jle
sbb
cmp
test
mov
jg
sbb
mov
adc
retf
call
out
fild
push
mov
and
jb
(bad)
xor
icebp
in
jmp
sar
loop
(bad)
jmp
shl
sub
add
xor
jbe
add
push
pop
aam
stos
mov
push
add
pop
push
loope
cli
mov
movs
dec
adc
cmp
and
ds
jb
cmp
daa
gs
or
stc
mov
ja
jnp
push
mov
shr
push
mov
jle
dec
dec
(bad)
movs
ds
lds
pop
pop
nop
mov
adc
inc
jg
inc
in
add
or
or
dec
add
dec
pop
in
cld
arpl
mov
jo
or
int
ins
out
pop
jnp
pop
aam
adc
mov
mov
pop
test
out
ret
dec
arpl
push
hlt
bound
ss
cmp
cmps
rcl
fiadd
push
outs
sub
and
pop
sub
cmps
inc
cmp
xchg
push
and
loopne
hlt
movs
xor
icebp
stos
leave
pop
jne
cmp
dec
add
fmul
in
inc
test
loope
add
mov
dec
pop
ins
xchg
dec
cmp
mov
jbe
push
sub
fisttp
rol
and
(bad)
xchg
outs
jle
fist
popf
push
loopne
cmp
inc
(bad)
in
ja
(bad)
rcl
es
(bad)
push
sbb
adc
outs
dec
dec
xor
mov
jnp
mov
push
(bad)
out
jg
out
add
inc
movs
inc
jecxz
mov
jge
pop
leave
loopne
adc
shl
in
pop
mov
lds
dec
jnp
iret
daa
imul
pop
fnstcw
jbe
and
adc
das
push
paddb
sub
mov
and
sub
fldcw
pop
inc
ret
cmp
xor
or
adc
shl
imul
jbe
ja
daa
and
xchg
inc
adc
pusha
je
pop
rcr
iret
adc
lods
sahf
int
test
inc
cmps
(bad)
mov
xor
aam
push
sbb
add
xchg
imul
adc
cmp
int3
pushf
idiv
add
and
lock
jecxz
popf
fmul
adc
mov
dec
lahf
fcom
dec
push
pushf
inc
(bad)
iret
stos
mov
aas
les
sub
xchg
cmp
push
addr16
pop
push
xchg
or
test
mov
mov
(bad)
mov
minps
cmc
cmp
iret
test
and
adc
dec
and
fdivp
xlat
loope
pop
and
sub
jg
call
mov
aaa
add
data16
inc
inc
out
jmp
ss
cwde
loop
xchg
jno
mov
cmp
out
mov
cmps
sti
arpl
mov
in
or
inc
std
popa
inc
pop
sub
aaa
fiadd
mov
add
cmp
sub
scas
ficom
mov
aam
jno
or
jg
jmp
or
fistp
add
push
mov
or
rol
sbb
adc
lock
cs
or
add
push
jge
daa
jns
jge
xchg
lods
sbb
addr16
sbb
jmp
in
test
cmp
leave
stos
cmp
rcl
inc
mov
inc
pushf
add
ret
addr16
aam
pop
mov
ss
(bad)
inc
cmc
jecxz
inc
and
mov
cmp
mov
rol
and
ss
add
mov
aam
dec
mov
jno
fnstenv
and
ins
jb
stos
movs
aas
push
aad
xor
jae
popf
addr16
mov
in
mov
mov
push
cli
pop
rcl
or
das
cmp
push
rol
or
je
sub
pop
and
jmp
loop
lock
out
retf
jae
int
jl
cwde
in
mov
mov
mov
fdivr
add
ja
add
cmp
ss
std
inc
jo
cmps
push
push
inc
add
xchg
mov
push
mov
clc
push
(bad)
cmp
(bad)
test
pop
ja
jecxz
icebp
add
pop
ror
(bad)
cmp
push
cmp
pop
jge
repz
sti
pop
div
mul
aaa
in
sub
pop
imul
cmp
cmps
mov
call
addr16
push
push
xor
sub
sub
jb
push
mov
xor
sbb
movs
out
add
pop
outs
in
stos
sahf
jne
or
sbb
jnp
xor
mov
in
repz
clc
lods
inc
and
adc
out
ins
cwde
inc
sub
mov
jl
inc
mov
sub
enter
push
jae
or
xchg
pop
mov
pushf
xor
fwait
jmp
or
out
xor
mov
push
scas
int3
mov
adc
jne
cmp
cmp
push
pop
jmp
jl
sbb
ret
hlt
adc
add
(bad)
retf
mov
addr16
sti
div
test
daa
je
push
imul
sub
(bad)
(bad)
push
lahf
xchg
stos
push
lock
jno
imul
les
pop
jnp
out
test
inc
inc
push
pushf
xchg
dec
lahf
xchg
sti
xor
add
sbb
cmp
jae
adc
mov
imul
or
mov
push
or
imul
and
add
ror
(bad)
mov
dec
xlat
aaa
push
mov
jge
inc
cmc
data16
out
xchg
mov
(bad)
hlt
not
gs
pop
inc
adc
pushf
mov
mov
xchg
dec
mov
scas
jp
jle
fstp
les
mov
inc
adc
inc
add
call
std
sbb
xchg
adc
daa
lds
xor
push
dec
lahf
pop
push
iret
aaa
cdq
in
hlt
cmp
adc
daa
or
sub
mov
shl
out
daa
push
in
fdivr
mov
push
mov
ins
stc
out
pop
daa
cwde
imul
jle
rol
mov
stos
adc
jo
imul
cld
adc
mov
das
les
repnz
dec
add
pop
addr16
and
(bad)
dec
mov
jl
inc
xlat
xor
cmp
jae
addr16
loope
or
jle
mov
clc
enter
add
add
ret
dec
ret
sub
xor
mov
cmp
ret
nop
sub
je
xchg
sahf
scas
ss
(bad)
jne
mov
(bad)
or
pop
cmps
mov
add
in
lahf
test
ss
je
mov
push
cmps
sar
jno
sti
sub
and
das
mov
sbb
xchg
in
adc
loopne
fld
aaa
inc
dec
je
je
scas
mov
lea
in
mov
ror
shl
adc
test
in
add
and
sbb
ror
add
cmp
xchg
xor
hlt
sbb
pop
rcl
lea
fcomp
mov
sbb
std
push
sbb
adc
jl
aas
pop
fimul
fisttp
dec
mov
sar
mov
dec
gs
pop
sub
(bad)
jmp
mov
cli
mov
pop
arpl
mov
sbb
push
jo
jg
push
sub
add
pop
inc
sahf
sbb
inc
jecxz
pop
adc
cmp
dec
add
xlat
or
or
jo
xchg
iret
sbb
lds
mov
adc
test
sub
or
inc
xor
xor
ss
push
sbb
mov
push
add
daa
jns
jbe
adc
clc
dec
cld
pop
out
jne
jecxz
popw
lds
fst
or
and
xchg
sbb
adc
and
mov
pusha
mov
pop
and
test
aad
jp
jecxz
in
scas
sub
scas
xchg
shl
xor
in
sub
push
lock
adc
sbb
or
jb
mov
mov
xor
inc
test
xchg
mov
fwait
cmp
fild
js
js
pusha
add
sub
cmp
jno
aaa
std
sbb
xor
xchg
fnstenv
inc
outs
cmps
dec
push
(bad)
ror
xor
inc
in
xchg
(bad)
jge
and
std
mov
jl
jae
xor
int
stos
push
inc
rol
mov
mov
addr16
jle
mov
inc
mov
daa
or
loopne
add
mov
outs
loope
jo
shr
xchg
inc
ror
mov
or
mov
sbb
inc
(bad)
dec
mov
jecxz
test
call
nop
pusha
test
or
sti
and
rcl
rol
mov
stos
jae
outs
pop
xor
push
loop
call
inc
xchg
sti
and
rcl
pop
cmp
cmp
sbb
neg
popf
aas
outs
lods
lds
mov
sub
std
jo
call
ffreep
push
and
xor
in
inc
and
pop
xchg
push
adc
out
mov
add
xchg
mov
mov
lock
add
xor
cmp
mov
pop
(bad)
repz
arpl
fild
push
sub
fisub
push
ret
add
or
mov
sbb
push
and
jmp
sahf
cmps
ds
ret
push
hlt
(bad)
adc
and
int3
fidiv
xor
mov
or
inc
iret
outs
sub
jp
lock
sbb
hlt
(bad)
out
in
in
push
das
popf
fld
add
mov
dec
push
mov
shl
ins
jns
stc
mov
mov
adc
mov
(bad)
xchg
in
lds
pop
cli
jecxz
int3
jnp
xchg
jecxz
stc
mov
dec
test
sub
push
call
test
mov
aaa
mov
dec
push
into
gs
dec
jg
ins
les
(bad)
xchg
push
movs
test
mov
mov
enter
(bad)
xor
repz
sbb
mov
adc
or
sub
mov
stos
push
ret
shr
popa
sub
mov
pop
int3
arpl
jns
scas
lods
pop
adc
movs
xor
das
fisub
add
xor
mov
(bad)
dec
pop
and
add
or
clc
xor
inc
pushf
ret
in
icebp
adc
cwde
cld
lahf
mov
dec
(bad)
mov
cwde
cmp
lods
fs
lods
orps
jbe
call
adc
dec
cmc
test
cli
repnz
inc
xor
jecxz
jg
(bad)
dec
push
mov
dec
out
(bad)
jne
outs
adc
push
jl
dec
xor
dec
push
clc
or
je
add
or
stc
dec
mov
fisub
dec
xchg
or
cmps
imul
add
dec
adc
cmp
jnp
(bad)
and
leave
imul
push
xchg
sar
hlt
sbb
mov
sbb
cdq
js
iret
in
and
xchg
mov
xchg
mov
jb
(bad)
jno
shr
add
fadd
mov
hlt
mov
sbb
scas
int
call
jle
dec
pop
xchg
hlt
push
mov
(bad)
sbb
test
mul
in
mov
clc
lahf
dec
test
jl
xor
retf
cmc
dec
int3
xor
add
sub
frstor
mov
and
out
in
lea
xchg
pop
and
(bad)
retf
adc
fld
mov
cmp
addr16
iret
push
rcl
mov
or
sbb
aad
add
dec
jmp
imul
(bad)
movs
in
retf
ja
stos
leave
cmps
add
push
leave
mov
cmp
and
(bad)
sti
push
mov
in
sub
stos
adc
add
dec
xlat
add
cmp
int3
jmp
pop
loop
xchg
dec
fimul
pop
cli
xor
cmp
iret
sbb
mov
test
jnp
cmp
pop
mov
push
lahf
inc
inc
jmp
jb
movs
sbb
jp
aad
and
xchg
adc
dec
cld
mov
mov
int
mov
lds
xchg
rcr
loop
mov
dec
pop
mov
ins
or
in
or
loopne
cmp
push
loope
inc
cmp
mov
sti
sbb
sbb
xchg
jg
movs
mov
mov
mov
stc
push
clc
pushf
push
jmp
ror
jmp
mov
lods
sub
(bad)
sbb
jl
fs
or
enter
add
ds
retf
fadd
mov
add
jbe
mov
or
push
sub
xlat
popf
sbb
xor
in
pop
(bad)
mov
in
cmp
mov
ds
cmp
dec
mov
(bad)
daa
outs
addr16
jmp
and
add
ficomp
mov
ret
ss
imul
clc
push
loop
mov
add
or
push
inc
cli
movs
sub
xor
push
mov
lahf
lods
retf
movs
out
mov
js
call
and
movs
jge
dec
les
test
inc
pop
out
sub
fsubp
xchg
sbb
push
sar
out
add
mov
enter
jg
repnz
push
popf
mov
cdq
or
add
or
mov
ret
repz
inc
scas
and
adc
scas
inc
or
mov
mov
test
or
mov
std
ins
loope
ins
jmp
lods
pop
jg
xlat
mov
push
shl
retf
fisttp
xchg
fs
push
ds
mov
xor
jnp
inc
xchg
pop
pop
pop
pop
jae
enter
lock
daa
outs
es
(bad)
sbb
lods
pop
jae
mov
(bad)
scas
or
stos
aaa
call
stc
test
dec
mov
push
or
ds
out
fsub
cmp
or
dec
push
mov
dec
jo
inc
cmp
gs
mov
add
cli
jne
mov
cmp
cmps
xchg
pop
stos
mov
sub
push
inc
adc
inc
mov
mov
cmp
loop
idiv
inc
outs
sub
clc
xchg
fiadd
ins
and
pop
inc
cmps
xor
jecxz
icebp
jp
adc
dec
js
movs
xchg
push
sub
sub
cmp
mov
push
xor
lods
cmp
and
push
clc
ins
enter
js
sub
xchg
call
lods
ins
cmc
(bad)
stos
push
retf
fwait
jb
iret
aaa
sbb
in
ja
pop
and
mov
sbb
fwait
or
cmc
addr16
(bad)
shl
mov
std
jns
std
cmp
jnp
mov
lock
xchg
jnp
xor
mov
sub
idiv
and
push
mov
or
jo
sbb
in
cmp
push
mov
cmp
mov
or
mov
outs
xchg
bound
out
lods
pop
into
(bad)
mov
loope
cmp
push
sub
dec
or
movs
loope
fidiv
xchg
sti
test
xor
mov
push
dec
mov
cwde
jle
retf
outs
jmp
loopne
(bad)
stos
inc
push
jmp
and
pop
iret
or
sub
sbb
sub
jl
in
xchg
fs
(bad)
ret
frstor
call
aam
inc
imul
call
push
call
nop
fwait
iret
(bad)
retf
cdq
and
jge
dec
push
fwait
jno
add
xchg
and
pushf
cs
test
push
push
and
push
xor
cmp
or
mov
jle
sbb
in
pusha
nop
addr16
mov
push
retf
push
cli
push
sub
dec
xor
jge
push
ja
pop
sub
fcomp
std
sbb
inc
mov
sbb
sbb
adc
data16
(bad)
js
ja
lock
clc
or
idiv
mov
loope
jmp
jo
pop
xor
mov
sub
adc
jno
jo
cli
pop
out
sub
fsub
push
mov
bound
ds
add
jecxz
retf
push
sub
sbb
daa
ja
out
rcr
ret
loope
int
lds
or
repnz
scas
std
(bad)
test
sti
adc
xchg
scas
push
pop
mov
pop
imul
(bad)
pop
add
scas
xchg
daa
movs
mov
out
dec
cwde
ret
add
xrelease
scas
pop
mov
or
icebp
mov
jp
lock
nop
ss
mov
test
pushf
pop
icebp
mov
cmps
sbb
and
jbe
cwde
popf
push
xchg
sub
je
test
into
jae
xchg
xor
sbb
cmp
jnp
lds
hlt
cs
ds
pop
cmp
push
sbb
add
xor
mov
int3
les
(bad)
stos
fwait
xchg
data16
pop
jne
or
cdq
sub
retf
push
xchg
dec
adc
mov
push
xchg
rol
sbb
test
jnp
out
mov
fwait
adc
mov
pop
xor
xchg
ret
dec
addr16
or
retf
shl
push
lock
outs
jb
mov
pop
imul
call
mov
push
pop
shl
std
dec
mov
ficom
pop
mov
push
add
int3
mov
fwait
pop
(bad)
or
retf
loop
sub
adc
imul
add
mov
movs
cmps
imul
movs
push
adc
pop
mov
fwait
(bad)
xor
in
outs
outs
push
sub
mov
push
or
cmps
xchg
mov
and
push
je
and
lock
ret
cmps
(bad)
mov
jge
cwde
push
cmp
xor
mov
and
fs
dec
js
and
loopne
mov
outs
repnz
add
movs
aad
xchg
imul
cmp
loop
icebp
dec
je
sbb
adc
inc
jae
arpl
and
fwait
dec
gs
outs
adc
cmp
mov
cmp
dec
mov
lahf
pop
nop
movs
jg
retf
dec
lds
sub
lahf
pusha
call
sbb
xor
xchg
js
and
repz
sahf
jl
push
mov
inc
xlat
sbb
dec
cmps
scas
shl
or
dec
std
mov
scas
jle
mov
scas
xor
mov
aad
aas
push
jmp
ins
xchg
mov
pop
fs
push
add
jns
jb
jp
mov
and
add
mov
adc
pop
sub
(bad)
test
ss
adc
xchg
push
imul
inc
adc
retf
iret
mov
push
push
pop
cmp
pop
ins
or
adc
(bad)
in
sar
std
arpl
dec
sbb
leave
mov
dec
int3
les
or
fstp
sub
xor
dec
push
add
sub
inc
inc
mov
repnz
pop
sub
add
retf
and
dec
sbb
jo
fs
mov
jp
sbb
xchg
inc
fiadd
cvtdq2ps
xor
mov
adc
aas
push
in
arpl
mov
bound
add
and
mul
push
bound
(bad)
cmp
inc
fcmovne
and
iret
and
mov
xchg
dec
push
sub
aam
adc
jo
out
xchg
ins
sti
test
cld
push
mov
movs
std
outs
adc
cmp
outs
push
sub
fsubr
dec
cmp
fldcw
mov
cs
inc
es
xchg
add
sbb
arpl
adc
out
jmp
mov
or
mov
dec
outs
sub
jecxz
mov
retf
xor
je
mov
movs
iret
xchg
nop
stos
gs
fwait
popa
dec
mov
movs
cmp
xor
std
jmp
lods
xor
movs
out
sbb
out
pop
cmp
push
fs
add
in
cmp
daa
and
pop
neg
sahf
push
push
pop
xchg
push
gs
mov
stos
mov
ins
dec
push
jge
sbb
fld
mov
inc
jmp
int
fwait
jle
and
aad
test
clc
aaa
scas
ret
inc
mov
(bad)
(bad)
cs
cmp
fs
or
push
add
sbb
mov
leave
dec
aad
bnd
pop
jmp
mov
jecxz
xchg
pop
adc
pop
fucomp
mov
mov
out
inc
dec
sbb
xchg
inc
scas
stos
leave
fcomp
inc
cmps
je
dec
dec
mov
clc
push
frstor
outs
ret
je
dec
xchg
cmp
xchg
loope
aaa
push
js
xor
jle
out
loopne
das
pop
adc
fwait
inc
sub
dec
sar
cmp
pop
inc
jle
and
inc
aas
in
iret
jb
adc
ret
aaa
sahf
popf
mov
inc
outs
mov
mov
retf
lock
mov
cli
or
retf
lods
mov
push
inc
jnp
bound
rcl
add
fsubr
pop
xchg
xor
imul
lods
push
iret
push
mov
push
mov
jmp
enter
dec
scas
lods
xchg
xchg
cdq
mov
jecxz
pop
retf
mov
outs
cmp
add
enter
xor
sub
sub
fucomip
popa
cmp
push
pusha
sbb
and
mov
mov
xor
push
fcos
cwde
dec
jecxz
daa
mov
sub
push
daa
in
sub
test
push
and
cmp
push
test
xor
sub
lock
(bad)
cdq
and
mul
ror
sbb
sahf
dec
or
xor
push
aad
jmp
pop
xchg
and
sub
movs
pop
int
sub
mov
jno
push
dec
cld
clc
jns
test
mov
push
loop
cmp
(bad)
cmps
hlt
and
dec
aad
popa
pop
int
dec
repnz
push
xchg
fild
leave
sub
xor
outs
ins
mov
into
push
arpl
sar
add
sbb
add
bound
lea
mov
sub
push
adc
stc
cmp
and
rcl
or
add
rep
inc
jnp
pxor
mov
outs
or
adc
ret
imul
std
cmps
sti
push
jge
outs
ret
mov
jno
out
icebp
cmp
sbb
jle
mul
nop
sar
stc
add
xor
inc
push
pop
or
jae
pop
sar
lods
rep
aaa
rcr
and
push
mov
ficom
push
dec
stc
or
or
leave
cmp
pop
imul
pop
cs
mov
rcr
add
rcr
xor
dec
ror
xchg
jbe
or
ror
cmp
sbb
sbb
xchg
sub
jno
test
xor
sbb
jne
packssdw
xchg
loopne
call
ret
fstp
xchg
jae
inc
test
stc
adc
mov
test
sbb
fsubr
inc
dec
jo
cmp
inc
inc
pop
mov
sub
mov
cmp
cmp
in
fnstenv
cmp
enter
mov
jmp
out
in
popf
ror
int3
scas
pop
jb
xlat
jle
clc
lods
pop
fisttp
mov
push
push
and
mov
mov
aad
fsub
sub
fimul
inc
mov
fucomi
adc
sbb
pop
mov
loopne
mov
je
xchg
add
rol
xor
sbb
or
mov
sbb
scas
push
fwait
int3
xor
sbb
mov
mov
shl
les
add
push
shl
pop
xlat
push
push
fs
jp
mov
sub
(bad)
(bad)
xlat
inc
ss
or
push
sub
iret
cwde
test
aaa
or
les
fisttp
jp
aaa
pusha
xchg
cmc
jne
iret
mov
mov
test
sbb
xchg
xchg
dec
push
(bad)
(bad)
jmp
clc
xchg
addr16
dec
fadd
jns
pop
jp
call
pop
push
push
cmps
mov
mov
or
mov
stos
xchg
xchg
addr16
mov
push
cmps
xor
cwde
test
fsubr
cmc
push
jae
adc
add
inc
sbb
fwait
push
mov
xor
ret
gs
lods
jle
out
cmp
adc
dec
out
jmp
es
mov
aas
stos
pop
jecxz
cmp
xchg
sub
gs
scas
dec
jae
mov
fcmovnb
fdiv
mov
sahf
xor
inc
leave
sbb
fwait
mov
cwde
test
ss
push
fdiv
jns
in
in
lods
xchg
jp
sub
enter
inc
movs
std
addr16
(bad)
hlt
mov
adc
pushf
cmps
es
lds
aam
mov
adc
dec
inc
mov
loop
pop
lahf
inc
push
jb
pop
or
outs
push
pop
jg
add
arpl
cmp
repnz
in
xchg
popf
in
fimul
jmp
dec
cmp
ret
(bad)
fmul
fstp
shl
aam
sub
push
test
arpl
pop
(bad)
mov
(bad)
sahf
(bad)
jbe
xor
or
xor
sub
sub
popf
daa
push
shl
push
push
cmps
mov
mov
in
dec
xlat
add
repnz
loope
xchg
sub
cli
rep
jo
mov
imul
pusha
xchg
mov
movs
push
pop
jecxz
mov
xor
inc
arpl
repz
adc
inc
pop
sbb
adc
lock
(bad)
mov
mov
and
and
mov
nop
sub
jl
mov
xchg
adc
xchg
xlat
adc
cld
dec
and
iret
pop
jmp
sar
dec
mov
xor
repnz
jne
outs
jge
sub
fxch
jnp
neg
(bad)
(bad)
int
loope
aad
rcr
push
ss
cdq
popa
jno
hlt
neg
and
inc
loop
jb
test
sub
fild
xor
hlt
js
(bad)
ret
mov
sbb
cmp
movs
xor
xchg
xor
jbe
sub
(bad)
into
popf
out
and
outs
mov
xchg
and
std
mov
(bad)
in
loope
jmp
xchg
inc
fwait
aaa
xlat
mov
out
mov
push
js
mov
mov
push
inc
out
cs
cdq
test
pop
pop
inc
cld
mov
fstp
retf
fsub
aas
out
and
lods
test
stos
dec
rol
and
(bad)
adc
adc
cmp
jae
push
or
int
xchg
fistp
add
sub
xor
vmovsd
inc
pop
fwait
movs
xchg
push
inc
xchg
cmp
mov
push
ins
mov
push
test
fdivr
cmp
fsubr
and
cs
inc
fcomp
daa
mov
(bad)
and
xchg
or
sbb
jo
fst
jg
into
cmps
cmp
sub
ss
dec
jl
push
pop
cmp
fisub
inc
popa
stc
movs
es
dec
xchg
mov
(bad)
out
jno
addr16
and
test
in
pop
sub
enter
clc
sbb
out
add
mov
into
add
xor
pop
ins
data16
xchg
and
(bad)
pop
mov
aad
mov
push
inc
cli
inc
repnz
mov
jmp
sbb
xchg
pop
rol
stc
imul
mov
pop
pop
inc
cli
or
cmp
nop
lods
cs
push
fist
lahf
sbb
arpl
push
fist
je
adc
cmps
loopne
push
retf
xor
or
ins
cmp
xchg
mov
(bad)
mov
xor
int3
jo
les
jae
push
mov
js
fs
aaa
jae
leave
pop
shr
cs
inc
sbb
jmp
call
pop
bound
push
or
xor
xchg
enter
(bad)
push
xor
inc
out
inc
pop
jo
out
movs
in
push
jbe
ins
dec
vmovhps
dec
loop
loope
mov
inc
jae
inc
dec
mov
cld
add
xor
dec
mov
inc
ror
mov
sar
lods
xor
jns
not
cdq
sbb
or
(bad)
push
jmp
fsubr
ret
or
mov
shl
ds
jecxz
xor
int
call
pop
fimul
clc
xchg
bound
dec
xchg
imul
les
repz
outs
lods
jge
iret
sub
popa
xchg
ror
push
xchg
xor
xor
inc
popa
push
ja
retf
mov
(bad)
sub
adc
(bad)
movs
je
test
dec
rol
mov
xor
loopne
dec
ins
das
lods
mov
in
in
clc
das
sbb
sub
add
jmp
stc
out
jl
sbb
cmp
mov
int
cmp
jo
adc
loope
or
cwde
loop
push
out
test
seta
push
out
pop
dec
xchg
jo
sub
mov
pop
add
stos
mov
push
pshufw
adc
jmp
xor
test
jno
xor
mov
and
and
or
push
jge
(bad)
cmp
add
pop
or
arpl
popf
rol
mov
lahf
scas
xlat
push
mov
popf
mov
dec
xor
cmp
mov
neg
(bad)
hlt
addr16
push
dec
cdq
call
mov
(bad)
pop
jne
mov
xor
xor
mov
mov
push
loop
mov
cmp
sbb
cli
int3
gs
mov
push
xchg
int
imul
inc
out
(bad)
push
mov
sbb
pushw
push
cmc
pop
jp
mov
mov
repz
adc
arpl
repnz
lock
inc
sbb
dec
xchg
mov
sub
mov
sub
mov
iret
jae
or
dec
test
xor
xchg
pop
push
clc
inc
inc
hlt
xchg
jae
pop
pop
mov
cs
cmc
push
lahf
sub
(bad)
int
pop
scas
mov
mov
and
mov
scas
cmp
movs
hlt
push
cdq
and
mov
cs
test
xchg
int
jno
jmp
test
xchg
inc
cmc
lock
add
out
leave
jge
dec
out
lahf
jmp
iret
jecxz
hlt
push
xchg
pop
inc
test
push
adc
stc
in
add
xor
scas
shr
cmps
mov
xor
outs
xchg
or
out
aas
sub
mov
mov
jge
mov
int
mov
push
es
ins
sbb
and
(bad)
rcl
outs
aaa
lea
push
jne
inc
dec
imul
push
adc
mov
pop
enter
out
push
push
sbb
into
int3
pusha
push
adc
rol
xchg
dec
inc
in
add
add
mov
xchg
hlt
sub
cli
pushf
int3
jnp
cmps
test
pop
rcr
lock
mov
(bad)
outs
in
(bad)
adc
fiadd
push
or
cwde
js
movs
pop
(bad)
nop
dec
out
shl
xchg
dec
(bad)
pop
add
add
xchg
bound
inc
lds
in
(bad)
lds
retf
push
ds
xlat
xor
sub
in
les
pop
jo
sub
dec
es
sub
or
xor
arpl
and
retf
shl
xchg
inc
lahf
lods
(bad)
js
push
lahf
rcl
adc
xor
mov
cmps
jl
push
fsub
pop
cmp
sbb
pop
cmp
mov
xlat
push
loop
mov
in
dec
in
iret
mov
mov
jno
or
ret
push
xchg
xchg
scas
in
xor
test
cmp
sbb
lock
inc
jnp
mov
jns
push
dec
js
cmp
test
pusha
dec
mov
cwde
jne
mov
call
popf
das
ss
jmp
ss
fs
rol
(bad)
(bad)
mov
cmc
mov
xor
pop
je
popf
cld
mov
dec
sub
mov
loope
mov
cwde
sti
xchg
dec
mov
aam
pop
adc
ins
loop
lods
xchg
xchg
cmp
xor
xchg
jbe
adc
imul
lea
loopne
push
loop
adc
(bad)
jl
adc
cmove
pushf
cmp
(bad)
mov
adc
out
and
or
into
jge
cmp
je
js
cmc
jne
adc
ss
jp
mov
mov
add
fwait
ins
aad
inc
stc
push
sub
int
ins
arpl
mov
jo
pop
aad
repnz
(bad)
mov
cmps
xchg
or
cwde
icebp
adc
fsubr
xor
xor
pop
dec
xor
sub
movlps
jmp
retf
mov
jae
mov
arpl
dec
push
test
push
push
inc
lds
pop
mov
gs
or
(bad)
daa
aaa
popa
or
mov
push
outs
sbb
xlat
jne
xchg
cmp
mov
into
rep
cs
sub
sahf
jmp
jae
mov
iret
js
dec
dec
test
shr
into
test
lahf
bound
cmp
cld
inc
je
or
mov
jmp
int3
mov
icebp
adc
aaa
jne
inc
ror
mov
dec
xchg
mov
pop
iret
test
lds
outs
mov
adc
jmp
add
aam
sbb
cwde
adc
int3
addr16
xchg
push
jnp
jb
fidiv
ret
retf
pop
popf
stc
cs
mov
mov
lock
jecxz
sbb
mov
xor
scas
jmp
cmc
dec
cmp
jmp
repnz
or
sbb
push
fimul
addr16
cmp
ja
repnz
pop
mov
add
pop
cmp
in
shl
fs
add
sub
ret
mov
adc
lods
xchg
inc
xchg
dec
scas
jno
push
mov
fcomp
scas
in
dec
unpcklps
test
push
add
mov
(bad)
sbb
jge
xchg
(bad)
call
ret
or
push
jecxz
cmp
test
cli
mov
xor
test
sub
(bad)
sub
daa
inc
mov
or
adc
inc
or
push
xlat
shl
(bad)
clc
ss
hlt
je
push
cli
inc
sub
repnz
xor
add
fsubr
sub
lods
cmp
mov
cmps
mov
adc
loop
xor
xor
jnp
push
cmp
dec
rep
push
xor
je
ja
mov
pop
(bad)
in
xchg
dec
push
jnp
les
and
mov
sub
push
mov
fcom
stos
fcomp
loop
out
rcr
outs
(bad)
std
mov
popf
int
aad
add
push
addr16
jbe
cmps
jmp
adc
xchg
pop
ret
in
imul
push
dec
cld
dec
rcr
mov
loope
push
push
add
cmps
push
stos
add
pop
inc
ja
scas
inc
and
and
mov
dec
mov
sub
ffreep
xor
mov
out
push
(bad)
xchg
loope
inc
(bad)
pop
outs
icebp
xchg
popf
push
mov
xchg
add
out
test
js
xlat
shl
pop
xchg
jnp
jmp
das
(bad)
out
add
or
aad
movd
daa
leave
mov
fwait
stos
push
dec
inc
and
push
mov
xchg
lds
mov
loop
inc
xor
fdiv
cdq
outs
xor
cmp
addr16
pop
xchg
push
(bad)
adc
sub
cwde
xor
adc
xor
add
bound
mov
mov
adc
addr16
(bad)
js
out
xor
sub
pop
xchg
scas
es
jmp
jmp
sub
lods
xor
jmp
mov
loope
retf
test
cdq
jbe
inc
test
dec
fld
repnz
aad
jmp
cwde
aas
mov
push
pop
test
mov
push
dec
cli
(bad)
movs
les
ret
popf
je
jns
lea
fs
xor
jge
sahf
pop
push
bound
adc
sub
sbb
cmp
mov
mov
loope
test
mov
mov
cmp
push
out
or
ret
push
mov
cmp
in
dec
loopne
mov
xor
stc
ret
xor
and
loope
dec
cmp
in
or
xor
mov
dec
iret
pop
sub
and
xchg
jle
xor
fdivr
add
adc
daa
cmps
shl
xchg
div
(bad)
adc
loope
call
fs
outs
add
movs
call
mov
xchg
cmp
cs
mov
pop
ins
mov
inc
mov
fld
test
mov
jo
dec
push
or
sbb
test
sti
movs
imul
movs
scas
(bad)
pop
mov
or
push
pop
sar
jnp
retf
rcr
ror
pop
sti
shl
fdivr
(bad)
mov
sub
cmps
test
pop
jp
sti
xor
call
push
retf
dec
pop
jno
int3
add
sub
stos
add
jmp
arpl
arpl
int3
test
dec
mov
and
add
mov
cdq
cmp
pushw
fnstenv
cmp
sbb
popa
cwde
shl
xchg
mov
lgs
xor
sbb
or
rcl
ja
jmp
ss
adc
lahf
mov
js
cmps
mov
add
int3
mov
sub
pop
mov
repz
gs
sbb
lock
fsubr
push
popa
dec
test
cdq
pop
and
mov
or
int
xchg
cmp
iret
dec
(bad)
sub
xchg
mov
jecxz
or
push
dec
adc
into
inc
adc
ins
loopne
mov
mov
nop
loop
sub
das
ficomp
xchg
mov
mov
in
repz
inc
les
imul
cmc
adc
in
inc
dec
cld
ins
stc
out
mov
push
sbb
dec
daa
sbb
sub
out
mov
add
ja
out
jg
shl
out
jae
out
cmp
(bad)
or
dec
je
inc
(bad)
shl
jo
pop
xchg
adc
jmp
push
ds
aad
xchg
ror
dec
int
dec
add
or
adc
ins
sar
call
mov
inc
mov
dec
mov
in
gs
mov
xchg
add
cwde
push
xchg
es
pop
outs
adc
add
adc
and
pop
push
and
std
cmps
mov
xchg
jp
fwait
in
fcomp
mul
pop
dec
xchg
cmp
dec
mov
test
mov
iret
scas
mov
push
popa
mov
fnstenv
sub
add
jl
push
mov
mov
xor
retf
and
mov
cs
mov
adc
fcmovbe
xor
retf
es
movs
dec
adc
mov
push
xchg
mov
push
nop
test
pop
es
dec
ss
pusha
hlt
test
add
(bad)
push
push
push
call
test
int
or
std
jbe
stc
xor
dec
xor
adc
daa
cmp
or
jg
or
push
rol
xchg
sub
shl
xor
les
adc
stos
xor
enter
and
ss
jne
dec
dec
mov
jl
adc
movs
(bad)
xchg
xor
out
pop
(bad)
jae
das
push
mov
mov
mov
jne
cmp
add
jb
hlt
xchg
into
aad
scas
mov
jmp
and
(bad)
mov
inc
and
test
and
stos
imul
ins
nop
cmp
and
mov
pop
sbb
arpl
cwde
lods
data16
add
in
cwde
jle
mov
mov
dec
sub
mov
jbe
pop
mov
outs
sbb
add
and
test
xchg
jmp
mov
add
pushf
add
adc
adc
dec
and
sub
movs
dec
sub
pop
shl
jne
out
mov
ds
sar
inc
or
addr16
sbb
mov
jmp
mov
mov
dec
pop
fimul
(bad)
test
jle
xchg
popa
lock
clc
fnstsw
and
sub
ins
mov
loope
push
pop
jb
jbe
and
jns
cmp
call
xchg
adc
test
mov
jecxz
mov
mov
shr
or
sub
sub
scas
lds
cmp
mov
pusha
aas
pop
mov
inc
in
sub
hlt
je
xchg
test
mov
xor
cmp
cmp
inc
lods
sar
(bad)
retf
xchg
inc
imul
rcr
add
mov
push
jle
add
scas
pop
jmp
(bad)
test
xchg
(bad)
dec
mov
ret
fs
jae
adc
dec
sti
loopne
dec
enter
sub
push
mov
imul
mov
mov
mov
mov
inc
push
xchg
loopne
(bad)
stos
lahf
pop
inc
pop
ins
(bad)
and
arpl
out
repz
adc
push
xor
je
fstp
sti
mov
pop
fwait
add
mov
rcr
outs
lods
sahf
xchg
imul
pop
mov
clc
mov
or
mov
enter
data16
js
pop
xchg
jmp
adc
in
stos
dec
sbb
out
lea
and
xchg
push
inc
scas
aam
xor
loop
xchg
or
xchg
mov
xor
enter
jmp
xchg
pop
int3
rol
xchg
and
mov
dec
call
inc
stos
loope
scas
pop
jecxz
std
mov
stc
pop
pop
mov
ins
mov
movs
mov
and
lock
cmc
hlt
out
jmp
inc
mov
inc
mov
sub
movs
int3
enter
in
(bad)
dec
nop
and
mov
adc
or
ret
stc
fisubr
push
mov
lds
inc
lock
fdivr
sbb
xor
outs
fwait
(bad)
aaa
push
cmp
and
retf
sti
inc
cmc
push
shl
sub
inc
sub
dec
mov
add
adc
xchg
pusha
xor
call
dec
push
mov
and
mov
icebp
fcom
sbb
pop
retf
inc
sub
aam
cmp
lods
pop
and
xor
jle
loope
pop
test
pop
and
xchg
inc
stos
ret
ins
jae
lock
pop
mov
push
ret
fst
jecxz
mov
repnz
ja
pop
imul
aad
pop
adc
xchg
sub
dec
pop
fwait
cmps
mov
add
neg
fnsave
mov
imul
dec
rcl
xor
pop
or
test
mov
sbb
es
xchg
mov
or
jmp
pop
out
out
daa
bound
gs
add
xor
clc
(bad)
push
enter
pusha
in
xchg
cmp
fldln2
sbb
mov
loope
fadd
mov
pusha
add
adc
or
fadd
fst
xchg
nop
repz
into
mov
enter
inc
adc
cmp
sbb
ins
push
inc
mov
xchg
scas
cmc
push
jmp
add
inc
inc
mov
add
cmps
je
inc
mov
mov
daa
std
(bad)
fiadd
jecxz
jg
pop
push
jne
imul
jg
sub
aas
or
sahf
xchg
int3
jno
cs
cmp
bound
cmp
xchg
inc
inc
push
xchg
std
pop
(bad)
aad
add
mov
ss
mov
pop
xchg
shr
push
add
sub
lods
pop
ins
ins
or
rcr
pop
out
cdq
imul
cmp
or
or
clc
es
inc
pop
jmp
adc
push
inc
cmc
pushf
loop
jbe
pop
or
dec
dec
mov
jmp
clc
repz
neg
imul
inc
retf
call
and
cld
or
mov
sbb
(bad)
test
stc
pop
pop
lods
mov
jl
cmp
add
mov
inc
mov
popf
sub
inc
loope
bound
stos
pop
inc
stc
xchg
test
loopne
sbb
dec
push
mov
gs
aam
lock
inc
push
push
iret
add
inc
call
ds
repz
loope
rep
outs
inc
and
iret
repnz
js
mov
xchg
push
mov
xchg
test
push
(bad)
add
dec
jbe
and
ds
arpl
xlat
sbb
cmps
cmp
jge
(bad)
scas
cmp
pusha
jae
pusha
mov
rol
leave
mov
mov
div
or
sub
push
sub
mov
ja
pushf
lea
sbb
loopne
or
es
inc
fdiv
sub
push
jp
movs
in
xchg
fcmovu
cdq
inc
xchg
sar
adc
mov
inc
and
out
dec
jp
mov
xlat
push
test
out
sub
mov
xor
push
jae
jmp
lods
xchg
into
pop
mov
sbb
push
mov
add
mov
sub
add
xor
lock
sub
into
repz
loop
cmc
call
xlat
push
ins
xchg
popf
pop
add
mov
test
pusha
adc
cwde
cmp
dec
(bad)
jae
or
out
xor
test
push
repz
(bad)
out
movlps
mov
cmps
mov
jl
mov
push
and
fimul
push
push
dec
test
mov
sub
dec
iret
arpl
xchg
dec
xor
les
dec
xchg
jp
and
mov
jnp
shl
arpl
(bad)
add
push
dec
mov
fstp
shl
inc
aad
clc
stos
dec
mov
mov
dec
mov
or
popf
sub
outs
pusha
pop
inc
push
(bad)
test
jmp
jne
ds
sbb
mov
rcl
xchg
js
add
and
lds
mov
mov
fwait
call
sbb
jo
mov
addr16
sbb
or
inc
or
mov
in
dec
movs
jmp
sub
mov
shl
adc
ja
ret
das
or
das
dec
mov
out
aad
sub
mov
pop
pop
les
cmc
test
sbb
xchg
ja
and
jns
or
int
int3
mov
push
add
dec
mov
dec
idiv
lock
lock
jns
aam
inc
(bad)
adc
scas
cmps
fsubr
sbb
mov
call
push
in
inc
sahf
jne
mov
add
xchg
cld
add
inc
jo
jnp
push
add
push
mov
jmp
inc
aam
push
sub
loope
xchg
nop
sbb
in
fisttp
sbb
loop
pop
(bad)
fcmovb
or
xor
enter
ins
int3
mov
jno
sbb
fist
into
mov
pop
mov
jns
pop
pop
lahf
mov
xchg
and
mov
pop
push
lahf
xor
sub
aaa
xor
push
mov
es
sbb
daa
cmps
jno
scas
cld
gs
out
ror
add
popa
dec
adc
xor
inc
push
and
fdivr
adc
repnz
and
pop
dec
jne
pushf
pushf
das
into
pop
mov
idiv
movaps
sbb
cdq
xchg
mov
loopne
mov
or
mov
inc
or
cli
and
int3
(bad)
or
es
or
pop
xor
pop
fld
addr16
retf
mov
xlat
lock
inc
jmp
adc
cmp
dec
pop
iret
dec
std
fs
cmp
aam
pop
fidivr
popaw
pushf
pop
mov
xor
pop
mov
lods
aad
mov
(bad)
xchg
fsubr
aad
call
aam
icebp
mov
mov
sub
sbb
js
cmps
and
fwait
imul
xchg
enter
xlat
jmp
cmps
sub
mov
(bad)
outs
mov
cmp
add
adc
addr16
jmp
inc
ret
push
in
cli
adc
(bad)
stc
(bad)
sub
sub
fist
xchg
xchg
(bad)
repz
mov
lods
(bad)
and
jmp
fist
mov
jae
ret
out
xor
repnz
mov
add
mov
xor
cmc
icebp
mov
stc
xchg
mov
out
adc
dec
icebp
inc
test
retf
xor
jmp
sub
sub
xchg
scas
pop
xor
cmp
add
xchg
cld
dec
mov
pop
leave
cmp
mov
push
mov
adc
pushf
fcom
addr16
bound
mov
or
repz
jge
push
adc
mov
retf
jge
std
and
and
test
pop
inc
test
cdq
fcmovbe
jle
jbe
mov
ror
add
movs
in
xor
add
ror
cmc
imul
outs
add
(bad)
sahf
cmps
and
stos
sti
sahf
xchg
call
jmp
and
pop
dec
inc
sub
aas
mov
xor
(bad)
aaa
rol
or
and
fsub
dec
loop
ins
in
dec
mov
and
test
je
in
bound
imul
jne
adc
fistp
and
jmp
jmp
pop
popf
mov
cli
lods
lods
pop
adc
dec
mov
das
sar
data16
mov
push
mov
call
xchg
imul
mov
push
xor
jo
mov
mov
mov
mov
add
dec
mov
int3
cmc
retf
sub
jb
adc
pop
pop
aas
aas
ret
cmp
out
js
out
int3
inc
inc
scas
sub
gs
push
sbb
sbb
cmp
imul
aas
aam
ins
mov
mov
lock
xor
int3
mov
ret
mov
push
stc
rol
xchg
ins
enter
dec
div
mov
jbe
imul
sub
movs
xchg
xchg
xor
in
fs
dec
xchg
in
inc
sbb
retf
cmp
fnstcw
xchg
(bad)
push
push
cmc
and
dec
and
xchg
mov
scas
in
(bad)
or
cmp
add
loopne
mov
popf
jmp
pop
pop
sbb
jecxz
and
retw
nop
fstp
enter
sub
inc
sub
dec
push
xor
mov
push
fwait
mov
ss
into
lock
aas
les
sub
mov
(bad)
call
out
or
int3
xor
inc
into
fiadd
repnz
rcl
adc
jge
cmp
mov
sub
adc
bound
test
adc
xchg
rol
sahf
out
mov
rcr
and
push
aad
mov
(bad)
push
fwait
lods
xchg
push
inc
nop
ficomp
lods
pusha
inc
pop
pushf
mov
stos
sbb
loopne
jge
and
jbe
jecxz
jb
jecxz
dec
popf
les
pushf
sbb
pusha
push
xor
ret
inc
and
daa
ret
pop
mov
fs
daa
test
cmps
jmp
iret
pop
fmul
bound
mov
xchg
xor
fucompp
mov
outs
scas
out
into
cmp
mov
xchg
imul
outs
push
ss
push
mov
and
mov
mov
jge
je
push
xchg
leave
ja
mov
mov
bound
adc
lds
xor
scas
mov
or
pop
jge
mov
pop
mov
push
adc
pop
stos
mov
jmp
int3
xchg
adc
jnp
cld
ret
(bad)
repz
push
iret
ds
push
jnp
sti
pop
fisub
ins
test
or
scas
pop
push
fadd
inc
cmp
ss
xor
mov
movs
xchg
inc
sbb
fist
inc
push
test
xchg
and
cld
test
mov
dec
push
adc
xchg
or
mov
out
bound
cmps
mov
xor
out
lds
pop
inc
lds
mov
inc
mov
sub
mov
jmp
push
(bad)
xor
sub
test
jl
mov
inc
mov
xor
sbb
fimul
jle
iret
stc
lods
retf
addr16
ds
hlt
scas
or
mov
jae
gs
push
mov
cmp
imul
inc
stos
push
xor
push
je
mov
loop
sbb
into
sahf
mov
sti
ins
retf
jno
dec
mov
adc
in
pop
std
shr
jl
and
inc
jnp
cli
retf
sub
mov
add
mov
shl
pop
xchg
(bad)
and
add
fld
and
popa
iret
jns
mov
call
mov
retf
jmp
push
xchg
push
inc
fisttp
jmp
fnstenv
jle
push
or
jns
mov
call
stc
add
mov
cli
test
cld
aas
sub
nop
fadd
adc
mov
ins
pop
mov
pop
dec
xchg
fbld
das
jg
(bad)
push
push
jp
(bad)
push
xchg
pop
inc
lds
push
jb
out
inc
push
inc
ds
push
dec
into
add
jl
cmps
dec
mov
mov
dec
dec
shl
leave
retf
js
sub
inc
mov
repz
push
test
jecxz
jo
call
or
inc
jmp
std
xchg
xor
mov
rol
and
push
test
or
mov
pusha
push
aas
dec
in
pop
shr
or
pop
mov
jp
ss
loope
ficom
xor
imul
stc
in
or
dec
xor
or
and
outs
xchg
jnp
sysenter
fisub
fst
push
int3
js
xadd
ja
sbb
outs
in
stos
icebp
cmc
push
mov
scas
ret
push
(bad)
nop
mov
mov
or
pop
push
iret
adc
in
sbb
xchg
push
mov
fwait
(bad)
add
mov
repnz
pop
mov
mov
jle
ss
push
sub
js
push
cli
jbe
stc
sbb
jmp
inc
bound
aam
aaa
adc
or
dec
xor
pop
cmp
movs
mov
das
jle
inc
sbb
leave
mov
outs
sbb
sti
(bad)
and
mov
sub
sub
test
add
daa
and
popa
cmps
mov
imul
push
repz
fucom
out
aas
das
sbb
gs
into
mov
sahf
pop
jno
retf
push
mov
bound
gs
mov
push
dec
pop
arpl
loopne
jb
enter
or
push
pop
mov
into
mov
lds
pop
movs
icebp
nop
jnp
sub
push
inc
call
mov
dec
retf
ficom
mov
mov
retf
in
add
outs
jl
mov
out
cmp
push
adc
push
dec
cmp
ret
ret
shl
punpckhbw
xor
dec
(bad)
outs
and
jmp
and
jg
sbb
imul
jmp
out
or
pop
ds
and
mov
call
icebp
lods
mov
inc
test
pop
adc
push
in
ret
(bad)
imul
imul
out
imul
adc
mov
sbb
xchg
mov
sbb
inc
jbe
fisub
movs
fsub
and
push
stc
sbb
mov
into
in
jp
mov
into
push
ficom
or
pop
(bad)
add
ds
test
pop
fdivrp
(bad)
(bad)
push
ret
call
mov
sub
jmp
(bad)
jle
jmp
stos
dec
stc
outs
push
outs
in
or
sub
int3
and
xchg
sahf
pop
jl
outs
jle
rol
and
mov
jno
or
movs
add
fcmovb
adc
sub
movs
mov
movs
inc
mov
imul
lds
and
hlt
jmp
out
inc
pop
(bad)
mov
xor
mov
add
add
movs
enter
(bad)
aaa
jbe
add
add
inc
inc
dec
ret
(bad)
ret
cs
or
(bad)
mov
test
pushf
aam
xchg
and
jo
xlat
gs
cld
stos
sbb
ss
scas
xor
xlat
mov
mov
sbb
cmps
jno
xchg
adc
push
movs
adc
xchg
xchg
fwait
fs
push
rcr
sub
dec
ficom
jmp
inc
mov
xor
fdiv
add
add
addr16
or
cmp
ficom
leave
neg
push
stc
data16
jecxz
xchg
addr16
add
mov
pop
(bad)
stc
js
data16
add
or
push
mov
int3
test
rcl
push
popf
inc
leave
fistp
jae
mov
jmp
sub
je
jnp
out
cli
pusha
aad
(bad)
sub
or
mov
mov
xchg
add
pop
cs
jge
xchg
mov
mov
xchg
jp
arpl
fst
aam
dec
ret
push
nop
lods
pushf
adc
ss
out
xchg
cli
int3
gs
fs
push
in
movs
cwde
jmp
push
xor
xchg
nop
cmp
mov
mov
mov
jp
dec
jmp
stc
mov
mov
imul
out
jo
loope
mov
cwde
imul
mov
or
pushf
in
and
mov
(bad)
dec
stc
mov
das
sahf
loopne
ret
shr
pop
ror
sbb
or
js
jne
scas
in
mov
add
add
daa
xchg
pop
cmp
int
dec
in
bound
push
inc
sub
mov
loop
dec
cmp
ret
jcxz
sbb
in
mov
mov
neg
in
jb
in
and
cmp
inc
pusha
repz
hlt
(bad)
xor
out
out
pop
int3
xchg
cmp
add
push
es
push
add
jmp
dec
mov
sub
mov
push
inc
(bad)
inc
or
pop
fldcw
xchg
xchg
(bad)
pop
leave
jnp
mov
xchg
fnclex
popa
lods
lods
fwait
sub
jno
mov
dec
lahf
in
xor
jnp
es
pop
mov
mov
addr16
imul
int
in
cmc
ret
jno
sbb
sub
push
outs
xchg
leave
mov
clc
mov
rcl
xor
sbb
add
inc
out
push
jmp
xchg
or
icebp
je
pushf
or
mov
push
mov
repz
mov
pop
sbb
js
cmp
scas
add
jge
aas
push
das
push
mov
les
iret
xchg
sbb
or
add
mov
in
stos
mov
(bad)
xor
dec
push
mov
jmp
sub
loopne
push
fdivr
repz
stc
cwde
mov
cmps
mov
cmp
les
call
dec
fisubr
push
shr
idiv
dec
push
clc
inc
cmp
les
xlat
or
(bad)
mul
adc
(bad)
out
stc
out
mov
sbb
adc
inc
mov
xchg
pop
je
cli
stos
jecxz
call
in
sbb
sub
popf
push
sbb
inc
xchg
sbb
mov
mov
add
dec
sub
xor
clc
cmp
(bad)
adc
repz
sbb
cld
adc
int
stos
ja
idiv
cmp
push
mov
stos
into
lods
jne
dec
mov
pop
sub
test
jecxz
pop
lods
adc
mov
xchg
sbb
popf
push
dec
inc
gs
aad
adc
test
sar
push
aam
loopne
pop
xchg
in
jge
mov
xchg
cmp
bound
dec
cmp
jnp
xlat
add
inc
scas
div
inc
mov
jno
bound
test
lods
push
bound
add
iret
hlt
or
adc
pushf
stc
and
xlat
xchg
into
lahf
pop
int3
adc
sub
test
popf
cmc
jmp
aaa
sub
inc
ja
push
push
sbb
mov
or
xchg
inc
jmp
stos
arpl
adc
imul
jmp
nop
xor
mov
sub
in
enter
and
jmp
les
sub
mov
pop
dec
data16
ins
pop
pop
shl
inc
into
movs
ins
test
sbb
push
jo
jne
scas
retf
xor
lds
fldenv
test
jmp
int
push
push
hlt
mov
sti
in
mov
popa
ret
fbstp
inc
pop
daa
or
dec
mul
fisttp
and
mov
fs
scas
push
jo
(bad)
pop
shl
push
xchg
or
arpl
adc
xor
out
ins
jmp
cli
fwait
sti
mov
xor
ret
inc
pop
lds
stc
adc
stc
loopne
outs
mov
sub
xor
enter
mov
jecxz
mov
mov
je
xchg
push
jbe
ss
and
or
fisub
ds
cmc
sbb
dec
inc
test
dec
sbb
pop
or
and
ds
mov
test
push
jns
cdq
cmps
push
xor
in
mov
ins
jg
xor
xchg
push
jbe
xchg
cmp
mov
and
sbb
pop
sti
pop
cld
dec
xchg
adc
xchg
aad
stc
ins
mov
adc
test
(bad)
clc
push
sbb
jne
mov
mov
add
mov
jge
das
fs
pop
repz
pop
push
in
mov
out
fsub
hlt
nop
pop
mov
ins
into
mov
stos
sbb
jns
cmp
sub
adc
adc
sub
ins
xchg
loopne
(bad)
jecxz
push
add
adc
push
mov
mov
push
in
push
pop
sub
sbb
adc
jmp
sbb
lock
push
xor
sahf
push
icebp
mov
fcmovu
fsub
mov
cmps
daa
pusha
addr16
mov
out
add
and
dec
push
enter
inc
jb
adc
inc
push
lods
ret
imul
jmp
leave
test
dec
les
push
pop
jne
mov
cmp
cmp
stos
jmp
nop
xchg
mov
push
xor
rcr
in
das
mov
jmp
clc
adc
or
mov
hlt
shl
out
xlat
dec
adc
outs
call
push
mov
test
int3
xor
push
dec
sbb
sub
dec
or
bound
cmp
ret
adc
sub
xchg
jbe
rcr
out
push
inc
mov
xor
int
outs
loopne
cmps
es
imul
fisubr
push
jle
ins
jbe
test
fidiv
mov
xor
add
test
xor
adc
cmps
jae
outs
push
ret
sbb
clc
and
cmps
int3
fsubp
rol
pop
lods
mov
sub
add
push
(bad)
std
adc
mov
sar
push
call
pop
inc
cmp
imul
adc
cmp
iret
jbe
shl
push
and
(bad)
dec
inc
xor
cmp
xchg
iret
lods
cmps
inc
out
fcom
sti
fmul
movs
and
inc
sahf
out
call
push
sub
mov
dec
and
mov
mov
shl
dec
and
sbb
jbe
shl
pop
lods
xor
(bad)
jmp
repnz
stc
push
or
sbb
daa
sub
xchg
imul
inc
dec
pop
pop
test
es
ss
test
mov
pop
int3
shl
or
(bad)
in
icebp
pop
in
add
mov
pop
or
mov
lods
inc
dec
ins
fs
cmp
inc
jo
out
dec
xchg
fldpi
pop
cld
jle
jb
fld
clc
pop
imul
out
adc
add
mov
pop
dec
fwait
sahf
or
dec
mov
ret
jne
mov
cmps
dec
mov
ret
stos
mov
push
popf
in
aas
popa
xchg
push
xchg
es
popf
je
add
mov
xor
ins
aas
sub
fcomp
into
push
dec
je
ss
out
jp
mov
mov
test
dec
adc
push
and
out
dec
outs
xor
ins
(bad)
fdiv
mov
push
adc
nop
ret
xchg
mov
imul
xchg
out
adc
loopne
lods
jns
jae
pop
xchg
scas
mov
test
in
sub
jnp
jae
ret
or
xchg
jge
jne
add
in
lahf
push
lods
daa
jle
xchg
dec
and
inc
sub
sbb
movs
mov
icebp
fst
outs
ret
frstor
inc
push
ins
test
leave
jne
in
cmps
xchg
fiadd
sbb
mov
or
into
sbb
add
and
ret
aam
js
sbb
cdq
ror
and
cld
or
cdq
mov
cmp
cmp
out
in
arpl
int3
inc
mov
xor
(bad)
fisttp
jns
dec
mov
das
fwait
test
inc
sbb
int3
pop
fs
mov
outs
xchg
or
je
mov
mov
in
out
stos
inc
jmp
in
or
repz
inc
xchg
stos
cmps
mov
push
or
not
push
aas
cmc
sub
loope
mov
ret
mov
mov
sahf
add
mov
push
adc
jl
imul
inc
fisttp
loopne
mov
sbb
enter
or
xchg
pop
sub
jmp
ret
fild
mov
inc
lock
xor
int3
xchg
addr16
xchg
push
popf
jnp
jge
mov
mov
arpl
sbb
adc
add
(bad)
xchg
repz
pop
inc
and
sub
iret
inc
out
(bad)
call
cdq
aas
cmp
cmps
or
retf
imul
pop
push
aad
mov
lods
es
xchg
pop
lahf
adc
cwde
jo
stos
jmp
mov
movs
ds
cld
gs
mov
jae
fdiv
sbb
stc
movs
pop
loopne
jl
call
retf
ret
add
sub
mov
push
xchg
stc
xchg
inc
sbb
cmp
scas
dec
ror
out
inc
jns
push
popf
test
test
scas
daa
or
outs
cmp
and
dec
inc
dec
imul
inc
mov
inc
xor
cmc
or
dec
rcr
jl
imul
xor
jge
ror
sar
inc
daa
mov
adc
pop
mov
cli
js
loope
and
or
outs
test
clc
and
jnp
sbb
inc
mov
lahf
sti
xor
in
xchg
add
cmps
push
pop
push
mov
jns
mov
inc
jo
clc
lods
push
and
jp
xor
stos
sbb
in
fidiv
mov
xor
inc
jg
js
mov
adc
test
shl
imul
mov
pop
mov
dec
push
retf
pop
pop
jmp
iret
call
sbb
mov
dec
xchg
mov
movs
(bad)
movs
shr
sbb
mov
sbb
mov
push
xor
xchg
or
mov
stc
movs
xlat
mov
pop
mov
ds
adc
mov
cmp
jge
jmp
and
lock
fstp
scas
jmp
mov
pushf
xor
xor
inc
and
dec
aad
popf
popf
mov
push
sub
shl
ss
in
outs
sub
cmp
imul
fs
push
fs
jae
std
ret
(bad)
scas
cmps
retf
dec
rcr
inc
stos
test
(bad)
sbb
push
add
imul
mov
sub
push
adc
jle
arpl
stos
lock
lock
aaa
inc
xor
inc
in
cdq
jmp
fmul
mov
imul
mov
mov
outs
js
push
retf
loop
sbb
popf
mov
fisub
stc
sbb
mov
sub
pop
ret
mov
push
jg
xor
aas
ror
jecxz
xchg
cmp
sub
xchg
push
dec
jo
fistp
repz
pop
inc
xor
data16
xchg
retf
mov
call
cmp
loope
in
arpl
xchg
jb
pop
jmp
add
jb
cmps
mov
xchg
push
les
push
test
mov
xchg
test
std
(bad)
daa
adc
or
icebp
mov
sti
push
push
(bad)
movs
xchg
dec
test
dec
aas
mov
cmp
sbb
add
in
in
mov
(bad)
xchg
out
mov
cdq
rol
or
es
mov
cmp
sti
pop
xchg
pusha
push
and
call
jmp
ss
cmp
dec
mov
fdiv
inc
lea
xor
adc
xor
pop
daa
ret
or
sbb
jb
jmp
in
out
cmp
(bad)
dec
mov
inc
sbb
jns
loope
sbb
inc
std
ins
nop
mov
xchg
cmp
mov
call
xchg
scas
cmps
ins
lock
imul
je
jp
xor
clc
mov
in
mov
cmc
jecxz
push
jns
loope
ins
cmp
fcmovb
or
mov
enter
scas
dec
mov
outs
cld
mov
repz
cmp
popa
neg
jmp
jo
outs
mov
adc
das
add
std
(bad)
cmps
cmc
mov
add
push
jp
mov
jae
cli
or
les
fadd
arpl
ja
dec
js
mov
mov
lods
fcmovu
push
int3
pop
jl
xor
or
pop
(bad)
xor
cmc
mov
mov
rol
or
mul
in
mov
push
sahf
cmp
aaa
xchg
cmp
push
adc
jg
pop
push
xor
cwde
stc
fisub
int
jb
push
test
xor
pop
jbe
pop
cmp
imul
jae
bound
arpl
mov
lahf
jo
in
sahf
pop
and
inc
jle
and
jb
mov
xchg
hlt
pop
or
xor
lock
into
jnp
popf
lock
std
pop
dec
(bad)
cmc
movs
lock
and
inc
inc
sar
pop
stc
stos
ret
pushf
pushf
stc
out
out
and
retf
stos
(bad)
jl
ins
dec
inc
inc
push
sahf
adc
shl
pop
xchg
sbb
or
lods
in
jmp
inc
scas
xor
call
fs
cmp
sbb
int
cmps
cmp
(bad)
(bad)
xor
or
dec
jmp
(bad)
lock
lds
repz
and
mov
pushw
or
sub
loopne
jmp
dec
repnz
(bad)
pop
or
push
or
push
mov
lods
xor
cwde
sub
sahf
mov
push
cmp
rcl
pop
pushf
sub
outs
xchg
fwait
xchg
sub
pop
lds
test
test
jmp
cmps
push
mov
retf
lock
sub
sysexit
clc
sbb
into
mov
(bad)
enter
sbb
jmp
push
sbb
adc
retf
sub
sbb
cld
(bad)
(bad)
jae
mov
pop
fidivr
lds
mov
aas
jmp
mov
fs
adc
inc
imul
scas
adc
leave
ss
fiadd
pop
cmps
repz
mov
popa
fld
fild
push
call
mov
sbb
mov
mov
or
dec
pop
push
adc
daa
mov
add
inc
fdiv
mov
sub
add
mov
lahf
adc
(bad)
in
dec
lods
mov
jo
loop
jecxz
loope
sti
sar
inc
outs
cmp
dec
call
adc
ror
shr
(bad)
js
jmp
data16
fiadd
lahf
jge
xlat
sub
pushf
dec
repnz
cmps
cmps
xchg
(bad)
mov
dec
je
push
fadd
int
xor
in
retf
sub
mov
cmp
sub
test
outs
fnstcw
sub
mov
jmp
aam
fiadd
lds
enter
pop
dec
sbb
movs
or
pop
je
pop
sbb
dec
in
fidiv
fstp
push
fcom
in
add
pop
xchg
sub
test
mov
mov
test
nop
movs
lock
fwait
mov
mov
sub
shl
mov
adc
pop
pushf
pop
scas
add
or
mov
les
fidiv
scas
cmps
jge
(bad)
mul
les
cmp
ret
cmp
shl
ret
pop
mov
add
fistp
ins
mov
fdiv
es
dec
das
std
mov
jne
arpl
push
aad
mov
aam
lea
push
xchg
ins
(bad)
fsub
or
or
jle
dec
jl
out
cs
(bad)
cld
pop
lock
or
je
int
mov
xor
dec
cmp
mov
test
xor
cmc
loopne
pop
fwait
das
out
addr16
inc
mov
fistp
cmp
pop
dec
mov
test
mov
cs
cmp
mov
add
jg
into
pop
daa
(bad)
ret
leave
leave
mov
es
mov
(bad)
dec
sbb
jae
loope
mov
out
adc
jae
fs
jbe
sbb
call
mov
retf
xchg
popa
add
xchg
std
add
xor
push
clc
test
std
pop
pushf
in
std
je
and
xchg
inc
or
in
sbb
jp
dec
sbb
fld
enter
arpl
xchg
sbb
movs
retf
and
sub
xor
ror
mov
xor
mov
cli
sub
sub
mov
cmp
and
loop
clc
and
imul
nop
xor
jno
mov
and
push
adc
cld
dec
sahf
mov
(bad)
mov
(bad)
out
(bad)
adc
add
nop
mov
ror
or
mov
add
aam
push
in
retf
jno
rcl
int3
dec
out
std
add
or
pop
mov
add
push
mov
sub
mov
fwait
repnz
in
enter
xchg
mov
int
inc
sbb
jo
jmp
adc
sub
mov
fidivr
fst
test
mov
or
or
scas
mov
call
call
cli
push
xchg
inc
js
ss
jmp
or
lods
push
mov
cdq
inc
lea
mov
shl
jecxz
or
sub
or
add
or
icebp
stc
pop
scas
lahf
retf
dec
push
add
test
cmp
cmp
outs
push
adc
addr16
lods
rcl
inc
pop
xchg
test
(bad)
push
inc
(bad)
(bad)
jno
repz
pop
ficom
cmp
mov
out
mov
dec
mov
pop
(bad)
dec
mov
and
sti
jge
and
je
sbb
leave
push
(bad)
sbb
in
inc
cmps
ret
pop
cmp
adc
ds
mov
dec
or
dec
sbb
fsub
jno
add
jne
je
les
push
cmps
mov
nop
push
pusha
xchg
cmp
loope
iret
sub
and
mov
xlat
cmp
jl
call
iret
cmp
stc
addr16
cmps
into
lea
out
and
fwait
add
repz
push
pop
arpl
or
std
mov
arpl
aam
les
or
in
jl
sti
fild
sahf
cmps
sbb
fst
jo
dec
jge
dec
and
movs
test
and
retf
stos
cs
loopne
outs
push
test
mov
fsub
jmp
dec
int3
mov
pop
xchg
mov
xchg
sbb
jg
xor
dec
jecxz
xor
mov
mov
jae
rcl
add
ror
push
fnstsw
add
sti
pop
sbb
outs
jmp
push
jg
dec
push
neg
jecxz
imul
lods
js
stc
dec
mov
jnp
mov
jmp
loopne
aad
imul
jb
sub
rcr
out
cmp
gs
stos
jo
cmp
or
idiv
scas
scas
fidivr
xchg
cld
and
ss
push
call
push
bound
stos
add
mov
dec
cwde
sbb
dec
xlat
outs
retf
sbb
pop
push
push
push
shr
and
or
pushf
inc
test
add
push
cmp
xchg
and
mov
movs
fs
mov
cmp
inc
movs
std
je
sbb
mov
icebp
ja
cmp
sbb
inc
call
ss
jns
rcl
jns
sbb
in
rcl
mov
xchg
sbb
cs
lea
cwde
repz
mov
mov
in
dec
div
out
xchg
fdiv
dec
xlat
sbb
mov
stos
xor
pmaddwd
in
jo
pop
in
ss
inc
imul
mov
sbb
lahf
and
mov
call
or
arpl
xchg
out
icebp
lods
scas
loopne
cmp
dec
xor
pop
das
js
mov
ins
or
scas
ror
mov
or
imul
test
jg
mov
jbe
xor
cwde
xchg
test
in
sbb
xchg
popa
ss
cld
mov
cmp
shl
repnz
pop
cmp
push
xor
cwde
and
xchg
into
mov
mov
jnp
out
repz
or
mov
dec
loope
rcr
cmp
push
idiv
jo
es
in
sub
(bad)
cmp
inc
shl
xchg
mov
pop
rcl
xchg
cs
arpl
mov
frstor
inc
dec
daa
test
push
inc
push
in
mov
rep
inc
fisub
sbb
sbb
and
mov
adc
rcl
push
jmp
shl
adc
out
pop
mov
push
lahf
imul
xchg
pop
nop
scas
mov
sbb
cmp
inc
mov
dec
aam
add
lock
cmps
mov
dec
push
xchg
scas
fsubr
lods
in
sub
or
push
dec
and
cdq
clc
lds
fidiv
cdq
dec
shr
mov
sbb
les
(bad)
pop
pop
daa
dec
fisttp
shl
dec
sbb
loope
test
call
outs
jae
in
cmp
mov
cli
add
(bad)
mov
retf
rcr
in
adc
adc
ret
(bad)
(bad)
sub
mov
dec
mov
xor
xchg
mov
out
pop
test
push
pop
push
gs
xlat
jnp
mov
(bad)
xchg
popf
and
cmps
aam
nop
inc
xor
push
and
stc
or
lods
mov
int3
dec
mov
aad
rcl
cmp
rcl
aas
xchg
movs
xchg
dec
mov
int3
push
xchg
mov
mov
adc
and
test
jbe
loop
and
cdq
stos
cmp
aam
add
sar
and
jp
dec
jo
cmc
cmp
dec
xchg
xchg
rcl
fucom
(bad)
fst
aam
(bad)
aaa
xor
push
fwait
mov
aaa
jae
push
jne
cmp
push
enter
cld
loopne
mov
pop
pop
movs
mov
call
retf
jmp
push
mov
cs
loop
mov
add
icebp
mov
movs
xchg
ja
pop
imul
pusha
push
mov
out
xchg
retf
lds
sbb
pop
aam
cmp
inc
(bad)
lods
mov
fisub
mov
test
add
out
mov
or
movs
pusha
int3
and
retf
leave
stc
mov
lods
adc
(bad)
sub
adc
into
add
sti
or
dec
test
cmp
mov
inc
dec
xor
jp
(bad)
pop
call
mov
adc
dec
dec
ss
aaa
dec
cmps
adc
push
jecxz
xchg
mov
ret
sbb
jns
sub
in
jno
push
js
xor
rcl
ror
div
xchg
cmp
inc
cmps
add
popa
add
rol
out
add
(bad)
adc
jnp
sub
mov
test
xlat
push
imul
pop
cmp
repnz
aam
cmps
imul
xor
dec
in
fwait
sbb
xor
mov
pushf
mov
retf
and
jns
scas
mov
and
or
pop
aaa
jae
jbe
and
test
mov
cmc
add
push
outs
fstp
mov
pop
xor
fiadd
mov
and
jnp
aas
and
fisubr
jmp
pop
je
in
xchg
dec
and
cld
cli
mov
movs
imul
sub
cmp
jbe
mov
neg
mov
cmps
out
das
add
fisubr
inc
or
mov
ins
lea
hlt
push
ins
stos
push
xchg
xchg
mov
loope
out
jb
jbe
mov
das
shl
ins
adc
jno
push
mov
sahf
cmps
and
out
pop
daa
iret
ficom
inc
repnz
mov
aas
xchg
rol
and
xchg
push
push
and
cli
mov
add
cmp
adc
jnp
add
push
inc
cmp
shr
mov
inc
shl
enter
outs
cmp
inc
jo
fcom
dec
call
push
inc
icebp
xor
add
out
arpl
out
ja
enter
je
adc
or
bound
jne
sbb
sub
jnp
(bad)
xlat
rol
out
out
sub
in
xor
adc
and
jmp
sub
mov
pusha
clc
mov
popa
sub
and
dec
cmps
jnp
aas
jl
jg
adc
popf
dec
test
enter
xchg
fsubr
retf
cwde
dec
dec
icebp
jecxz
push
mov
sub
(bad)
in
add
jmp
not
imul
xchg
sbb
push
imul
jbe
cmps
xchg
fbld
ss
pop
push
pop
ror
in
aaa
repz
out
jb
xor
inc
push
add
xor
sub
inc
cmp
mov
call
retf
iret
rol
adc
inc
mov
stc
stos
fdiv
fisub
pop
imul
aad
cmps
lods
ja
imul
xchg
xor
aam
xchg
pop
ds
lock
mov
stc
push
das
mov
pop
mov
mov
repnz
cmp
aad
aad
(bad)
popa
in
(bad)
jg
ror
jnp
adc
xchg
jne
jle
dec
sub
mov
jg
sub
movs
aad
out
lods
add
das
repz
in
leave
sub
xor
dec
jmp
xor
jmp
xor
sbb
add
js
(bad)
stos
retf
adc
inc
movs
xor
jae
lds
inc
into
ss
sbb
scas
xchg
pushf
std
cmp
out
xchg
xor
mov
cdq
and
sbb
pop
cmps
xor
add
inc
adc
dec
jmp
adc
arpl
hlt
ss
loopne
jle
xchg
sub
xlat
in
xchg
loopne
call
push
out
and
mul
jnp
gs
push
sti
in
cwde
fstp
and
cmc
adc
add
and
int3
test
sbb
into
test
sub
test
and
in
cmp
mov
adc
push
lds
xchg
int
clc
and
pop
add
add
jge
enter
dec
push
aas
mov
jge
loop
cmp
lods
xchg
dec
cmp
bound
push
enter
rcl
ret
shr
or
test
push
ror
jmp
and
dec
jnp
aam
inc
cmp
push
push
jmp
inc
fst
inc
lods
sub
iret
loopne
cdq
ins
mov
(bad)
std
ds
gs
pop
(bad)
pop
mov
xchg
(bad)
mov
pop
or
sti
jl
and
jb
in
nop
mov
nop
aaa
fwait
out
dec
pusha
cmp
bound
in
pop
fisubr
lea
in
lock
cmp
loopne
jge
scas
xchg
push
mov
cwde
sahf
or
hlt
add
cmc
pop
es
adc
jp
(bad)
(bad)
and
sbb
adc
mov
(bad)
arpl
in
pop
shl
enter
cwde
add
mov
fs
scas
cmp
adc
bound
rcl
add
xor
repnz
call
int
adc
es
xchg
lods
rcl
ret
loop
sub
std
jmp
fwait
sub
mov
inc
in
add
sub
aaa
xor
aam
adc
jae
sub
adc
xor
clc
loope
xor
pop
hlt
sub
push
gs
(bad)
int3
std
dec
sar
repnz
aas
out
fnsave
sub
mov
and
xchg
inc
outs
addr16
and
sub
imul
xlat
pop
fld
retf
popf
push
inc
(bad)
sbb
ins
mov
pop
sbb
repz
out
sbb
inc
add
sahf
dec
scas
push
test
sbb
pop
sbb
mov
(bad)
mov
jp
jl
and
jb
cmp
leave
int
shl
mov
dec
aam
icebp
mov
cmp
dec
ins
pop
pop
pop
xor
push
inc
sub
ins
pop
mov
xor
mov
dec
in
es
sub
imul
dec
ja
push
stc
mul
mov
jle
sub
inc
mov
inc
fsubr
xor
sbb
and
fstp
loop
mov
sbb
hlt
push
stc
out
mov
jecxz
sbb
cld
outs
pop
push
mov
inc
stc
push
out
ficomp
int
push
(bad)
enter
cdq
dec
push
mov
jb
cmc
fidivr
and
jmp
cdq
ret
or
mov
stc
into
icebp
ds
inc
popf
push
adc
mov
jno
mov
into
mov
push
loope
xor
stos
(bad)
div
xor
mov
add
arpl
jae
push
ficom
mov
mov
pusha
dec
fwait
mov
out
iret
push
test
mov
loop
sub
adc
cmps
mov
xchg
dec
movs
fdiv
adc
cmps
xchg
in
pop
push
push
sbb
enter
sub
dec
jbe
xor
ins
and
loopne
push
sub
xor
mov
call
push
or
or
inc
repz
rcl
inc
adc
xor
mov
dec
mov
fs
dec
mov
push
cdq
das
cld
push
mov
rcl
iret
mov
mov
fiadd
jbe
xchg
(bad)
dec
jnp
dec
pop
fucomp
and
pushf
push
out
mov
lods
mov
repnz
xor
inc
arpl
cli
hlt
sbb
cmp
mov
sbb
aaa
fisttp
pop
adc
inc
or
xchg
mov
xchg
fdivr
inc
dec
movs
scas
and
mov
xor
mov
push
dec
nop
jl
inc
cmp
out
xchg
or
xlat
or
xor
sub
push
lahf
sbb
pop
aam
mov
loopne
clc
imul
arpl
dec
lock
pop
bound
adc
push
out
sbb
clc
clc
in
mov
cmps
retf
dec
in
jno
mov
lods
push
(bad)
fsubp
jno
adc
xchg
into
xchg
mov
aaa
dec
ja
adc
sahf
sbb
shl
inc
or
sar
dec
imul
cmp
adc
push
xor
(bad)
in
ja
fsub
push
cmp
sbb
pop
stc
test
jmp
imul
inc
mov
xchg
int
out
in
mov
jecxz
xor
xchg
xor
out
pop
dec
push
bound
fcom
popf
push
inc
xchg
jle
into
jnp
push
pop
imul
and
and
push
scas
stc
mov
aaa
sbb
cmp
sub
push
adc
fcomp
jl
loopne
retf
mov
sub
adc
fwait
jne
mov
adc
daa
jb
sti
mov
int
cmps
sub
cmp
pop
cdq
shr
xchg
in
mov
push
sahf
push
mov
sub
mov
cmp
movs
dec
cmp
(bad)
adc
test
clc
(bad)
mov
inc
push
test
out
es
outs
mov
shl
(bad)
fldcw
mov
clc
xchg
sub
xchg
mul
inc
cmps
fmul
mov
pop
cmp
add
and
test
mov
repnz
call
or
ret
cdq
cmp
iret
mov
jb
daa
adc
scas
mov
mov
push
aam
pop
mov
lock
xchg
ud1
xchg
pop
push
jno
out
push
loope
pushf
std
fsubp
push
mov
sub
lods
cdq
xchg
mov
in
arpl
mul
retw
and
enter
xchg
fwait
(bad)
aad
push
int3
jmp
xchg
je
cs
sti
inc
daa
popf
mov
pop
ret
xchg
inc
xchg
scas
xchg
push
js
aas
ret
cmp
(bad)
jg
(bad)
dec
push
fidivr
fs
sbb
call
sbb
cmps
test
or
fidiv
fistp
push
xor
add
test
mov
mov
jl
fs
(bad)
adc
xchg
ds
scas
xor
ins
aaa
push
in
imul
push
xor
sub
sub
outs
dec
inc
xchg
out
xor
outs
push
dec
adc
and
add
sbb
sbb
push
sub
sbb
fisttp
pop
ins
add
inc
nop
add
enter
sahf
dec
fmul
fld
jle
and
pop
into
jmp
fisub
cmp
movs
cld
rol
in
jl
push
imul
fwait
mov
aam
or
ins
xchg
mov
mov
or
je
jle
ss
pop
mov
inc
xor
ins
call
mov
or
dec
jecxz
clc
gs
pop
mov
into
in
or
lods
inc
mov
add
(bad)
out
xchg
jno
pop
cmps
mov
les
mov
fiadd
or
test
cld
shr
sbb
lods
(bad)
loopne
fsub
fmul
lock
jnp
and
sbb
jmp
jb
(bad)
fstp
inc
or
jns
imul
cmp
ficom
ss
sbb
ins
(bad)
pop
dec
(bad)
or
(bad)
pop
fisttp
mov
xchg
ret
xlat
mov
mov
mov
xchg
inc
(bad)
lock
cwde
inc
pop
or
dec
cmps
inc
inc
dec
jno
not
dec
dec
mov
sub
repnz
sbb
add
push
cmps
add
sub
repnz
and
mov
xchg
dec
mov
iret
in
popa
int3
mov
sub
inc
test
xchg
call
pop
rol
jo
jle
push
cmp
retf
dec
push
fisubr
ret
xchg
mov
sub
sbb
aas
rol
stos
adc
xchg
cmps
cmp
mov
jle
push
sub
mov
out
jg
fnsave
jnp
mov
enter
xchg
mov
mov
mov
jno
popa
dec
cdq
or
pop
dec
ja
add
repz
setbe
push
adc
xor
xchg
out
sbb
into
sub
mov
call
ins
or
pop
sbb
cmp
dec
jns
jl
sbb
(bad)
adc
into
and
dec
test
add
dec
cli
les
jmp
mov
jmp
xchg
(bad)
cmp
cli
hlt
sti
fwait
or
out
or
xor
cmps
xchg
aas
push
xor
dec
adc
cmp
push
fadd
inc
pop
test
clc
xor
push
aam
data16
jne
push
fiadd
adc
std
xor
out
out
inc
scas
sbb
(bad)
and
data16
int
shr
stos
jns
scas
xchg
jg
push
shr
loopne
mov
or
pop
shl
pop
pop
lahf
push
test
sub
retf
fst
test
dec
mov
sbb
dec
pusha
stos
mov
ins
aaa
data16
pop
dec
pusha
retf
das
add
dec
inc
or
push
jg
stc
jle
fcomi
lds
adc
out
push
sti
xchg
push
and
pop
jp
test
mov
or
mov
mov
pop
cdq
in
jecxz
inc
inc
cmp
mov
test
push
inc
das
imul
mov
dec
stos
imul
(bad)
sbb
mov
mov
(bad)
mov
mov
push
sbb
(bad)
sub
sbb
cwde
imul
push
and
rep
pop
dec
movs
fxch
int3
repz
mov
push
or
punpcklwd
push
jnp
push
xchg
xchg
jmp
test
dec
or
xchg
sub
(bad)
mov
add
mov
mov
(bad)
shr
and
mov
es
cmp
lock
lds
movs
push
icebp
inc
xor
sahf
mov
add
push
dec
(bad)
imul
imul
jecxz
lldt
int
mov
mov
and
rcl
in
ins
jo
cmp
mov
lea
(bad)
loopne
add
add
adc
jmp
xchg
mov
jno
mov
mov
div
jg
cs
inc
cmp
shl
jne
std
mov
in
retf
outs
jg
mov
stos
or
xchg
loop
jge
ror
add
stos
aam
mov
add
aam
add
pusha
mov
(bad)
pop
sub
push
or
and
mov
pop
cmps
stc
mov
stos
jmp
jnp
bound
sub
in
test
cwde
lods
cmp
outs
inc
loopne
sub
jb
xor
mov
and
popf
sbb
lock
and
repnz
stos
ins
ficomp
mov
(bad)
jnp
pusha
idiv
sub
adc
mov
mov
imul
test
movs
scas
xor
mov
jne
and
pop
mov
mov
mov
hlt
pop
pusha
aad
imul
daa
dec
mov
fcmovnu
mov
xor
cmp
gs
push
adc
jae
test
gs
sahf
fdivr
test
push
cmp
adc
mov
ret
add
mov
das
cmp
movups
movs
mov
push
std
pop
repnz
mov
adc
dec
in
dec
fadd
pop
std
imul
mov
and
vpcmpud
push
scas
pop
xchg
inc
hlt
sahf
mov
out
repnz
sar
aaa
(bad)
adc
xor
test
push
xor
jbe
cmc
loopne
dec
jmp
and
push
ret
pop
and
shl
test
mov
test
ficomp
lock
inc
fistp
jnp
push
xor
ja
cmps
xor
sbb
repz
push
pop
dec
imul
ror
push
xor
or
xchg
scas
dec
adc
retf
xor
adc
inc
loopne
sbb
stc
pop
(bad)
sub
sbb
pop
push
mov
dec
lods
mov
outs
cmp
adc
push
(bad)
test
daa
push
xlat
fcmovne
retw
cdq
loopne
into
xchg
gs
sbb
fdiv
mov
inc
xor
xor
mov
cmps
and
sbb
or
(bad)
scas
addr16
push
dec
fs
enter
add
(bad)
loope
call
jmp
or
aaa
mov
std
ins
jg
jne
movs
imul
sahf
mov
inc
or
dec
out
jmp
adc
or
push
test
mov
dec
sub
mov
cdq
xor
scas
cmc
outs
dec
pop
mov
jno
sbb
dec
pop
loope
or
ins
sub
jmp
stc
inc
dec
pop
dec
(bad)
mov
outs
and
lahf
mov
ss
test
mov
shl
fwait
push
rcl
mov
out
fdivr
jge
cwde
jge
movs
jo
mov
or
push
inc
adc
and
fimul
jns
mov
leave
dec
sub
pop
push
mov
mov
sbb
cs
into
cli
add
fs
mov
sti
jnp
das
movs
xor
mov
adc
push
mov
jno
mov
add
fwait
mov
fs
inc
cmp
push
out
repz
dec
loop
adc
fsub
fcmovnb
jbe
or
jmp
(bad)
or
aad
jmp
adc
lods
sahf
imul
popa
jb
add
push
lods
cld
fisub
cli
ins
es
jae
xor
dec
and
inc
arpl
add
adc
xchg
out
inc
shl
lea
sbb
dec
jg
aas
iret
mov
inc
jl
cmp
push
sbb
movs
add
ss
fist
cmp
adc
pushf
pop
push
in
dec
mov
adc
mov
cmp
stc
test
and
stos
in
sahf
fbstp
cmp
or
pop
pop
icebp
imul
out
or
jae
(bad)
fs
push
das
outs
fwait
or
push
inc
mov
inc
add
(bad)
push
xchg
outs
jo
cdq
arpl
lea
inc
sar
jb
or
(bad)
sub
xchg
inc
jmp
cmc
aaa
cmp
test
xor
outs
sti
add
jbe
cmp
in
(bad)
and
dec
cmp
add
push
push
jno
das
push
jmp
push
xchg
jo
fcomp
mov
adc
ins
inc
outs
sub
inc
sub
(bad)
mov
jp
neg
mov
(bad)
mov
pop
and
mov
or
push
cmps
or
cmp
and
or
outs
(bad)
dec
fdiv
mov
xchg
jmp
jns
dec
(bad)
mov
xchg
cli
retf
push
lahf
fsubr
data16
push
mov
ucomiss
movs
gs
rcl
push
mov
jnp
mov
out
hlt
and
ds
xadd
imul
jmp
nop
fcomp
in
push
sub
inc
xchg
stc
push
outs
mov
xchg
mov
sub
mov
cwde
inc
sbb
cmp
repz
adc
pop
pushf
xchg
loope
sti
movs
(bad)
aad
call
in
xchg
pusha
lds
call
xor
in
dec
push
adc
push
jnp
fs
xchg
repz
dec
push
rol
imul
dec
out
or
pop
je
or
cmp
div
cdq
fs
scas
es
pop
icebp
jmp
dec
fwait
push
daa
out
xchg
mov
outs
jge
add
mov
adc
xchg
mov
pop
push
or
mov
jns
jmp
cmp
xchg
iret
jno
jns
sti
call
pop
les
mov
pop
cs
jnp
popf
mov
inc
dec
cmc
pop
addr16
sub
sub
addr16
push
test
bound
mov
lds
or
fmul
inc
mov
mov
pop
adc
mov
shl
leave
mov
ins
stos
je
dec
xor
pop
mov
mov
jmp
cmp
fild
mov
xor
pop
or
jp
dec
jae
call
cdq
adc
push
leave
cmps
dec
cld
pop
(bad)
aam
pop
shr
sbb
jns
or
xchg
mov
pop
adc
sti
shl
(bad)
clc
mov
or
jb
lds
aas
push
or
cmp
xchg
(bad)
lods
ins
mov
push
(bad)
add
jnp
xchg
mov
and
push
sti
les
sbb
ret
cli
pop
cmps
repz
adc
or
gs
xchg
mov
pop
mov
repnz
fiadd
in
xor
xchg
cli
or
pop
xchg
mov
shl
repz
cdq
and
dec
xchg
jl
or
mov
add
stos
fucomp
fs
sbb
(bad)
mov
lea
jmp
je
or
in
retf
mov
stos
sbb
sti
adc
(bad)
or
nop
loopne
dec
rol
out
jae
sbb
pop
sbb
mov
mov
mov
in
cmp
lock
xchg
popfw
aam
stos
hlt
je
cmp
sahf
fadd
jbe
es
xchg
out
mov
rcr
repz
call
xlat
or
not
sti
mov
push
out
sahf
leave
and
push
sar
or
stos
std
lock
or
mov
stc
shl
sub
mov
sub
popa
fwait
sub
dec
inc
adc
xchg
cmps
add
push
mov
mov
int
adc
sbb
fucomip
std
cmc
and
add
mov
ret
test
mov
cs
shl
test
lock
rcr
add
ss
stc
push
or
retf
jmp
dec
out
mov
arpl
xchg
add
js
mov
sbb
test
mov
mov
lock
mov
shl
xchg
cmp
jno
mov
push
push
mov
out
scas
aaa
push
xchg
add
(bad)
sahf
(bad)
jmp
js
sbb
xor
loopne
pop
push
push
pop
and
mov
aam
outs
lds
fcmovnbe
sub
inc
hlt
mov
adc
mov
(bad)
mov
inc
xchg
jnp
das
sbb
movs
dec
shl
test
pop
push
sbb
push
in
xchg
and
mov
add
mov
scas
bound
(bad)
xor
push
push
cmps
mov
jg
add
add
mov
and
mov
jle
sbb
ins
arpl
cwde
ror
mov
loop
dec
ins
adc
mov
mov
fsubr
iret
stos
jmp
shr
dec
dec
dec
test
pop
arpl
sbb
mov
push
fsubr
iret
aam
and
mov
sbb
stc
out
xchg
xlat
int3
dec
xor
repnz
push
es
push
imul
dec
mov
sbb
sbb
jne
pushw
(bad)
std
rol
xlat
mov
stos
mov
cmc
outs
jmp
sbb
call
mov
stos
jnp
scas
jne
or
adc
sub
xchg
(bad)
scas
sbb
push
iret
xor
jge
push
xchg
cmps
sahf
out
jbe
arpl
data16
cld
fidiv
test
mov
pop
xchg
mov
sub
sub
sbb
test
into
mov
mov
(bad)
cwde
mov
or
loope
add
or
inc
cmp
add
movs
xor
nop
out
mov
pop
int3
fld
ss
sbb
fnstsw
add
stos
cmps
mov
ins
call
call
daa
push
push
loop
and
cmp
(bad)
push
and
add
fiadd
test
sbb
jb
jl
mov
imul
mov
xchg
xchg
pop
push
(bad)
mov
mov
jg
mov
mov
fsub
icebp
out
push
and
fbld
inc
mov
(bad)
sub
mov
cli
xlat
push
dec
xor
mov
jg
mov
stos
xor
scas
call
mov
loope
cmp
retf
call
(bad)
dec
(bad)
sbb
addr16
loop
icebp
lock
push
retf
mov
xchg
loope
add
out
int
pop
enter
test
xchg
cld
jae
or
pop
outs
out
push
sahf
mov
idiv
mov
sbb
dec
sbb
jnp
dec
fadd
(bad)
rcl
and
xchg
movs
mov
xchg
mov
and
neg
enter
test
pop
jne
fucomip
pop
movs
mov
popf
call
pop
daa
sub
adc
add
dec
in
pop
adc
dec
aad
hlt
mov
and
test
arpl
xor
push
dec
outs
jecxz
popa
ret
jb
cli
out
jmp
jle
sahf
inc
mov
out
jmp
scas
imul
mov
fadd
adc
and
push
mov
xor
xchg
aam
xchg
(bad)
xor
getsec
jmp
push
dec
add
jae
dec
adc
jno
adc
cmp
retf
gs
or
sub
xor
movs
jl
xor
xchg
ins
mov
xchg
cmp
aaa
jo
pusha
pop
rcl
sub
imul
mov
cmps
cdq
sbb
push
xor
push
iret
ja
ficomp
xchg
push
sahf
pop
(bad)
ret
xchg
xchg
data16
aam
ret
pop
dec
(bad)
imul
or
push
outs
add
or
mov
les
imul
inc
in
or
pop
pop
or
xchg
nop
cmp
or
pop
push
cmc
leave
push
mov
bound
dec
xchg
xchg
cld
pop
(bad)
xchg
movs
test
pop
add
cmp
retf
and
pusha
mov
div
lea
ss
shr
sbb
push
push
push
repz
mov
mov
adc
xor
fwait
test
dec
out
repnz
ins
adc
sbb
jge
fcmovnu
pop
and
(bad)
sbb
mov
into
int3
out
add
imul
adc
icebp
aas
pop
shl
inc
pmaxsw
sub
sbb
cmp
pop
mov
xor
fcomp
dec
mov
mov
(bad)
(bad)
cli
jecxz
pop
imul
pop
scas
ror
inc
cmp
inc
pop
in
jp
neg
sbb
mov
add
out
sbb
cmc
in
cmp
(bad)
(bad)
dec
fldz
fistp
mov
inc
cmp
xchg
xchg
xor
in
fisttp
loope
fcmovne
hlt
mov
ror
aam
jae
add
jo
jmp
mov
xchg
nop
fcomip
jnp
lahf
adc
test
and
and
adc
sahf
test
sahf
push
xor
pusha
mov
xchg
xchg
add
inc
and
in
xor
outs
daa
bound
fdivr
clc
rol
cmp
icebp
bnd
sbb
push
dec
xchg
aas
nop
jecxz
dec
adc
sub
sub
jp
jnp
test
ins
rol
scas
fistp
pop
lods
jmp
pusha
das
pop
(bad)
cmp
mov
(bad)
and
jmp
gs
leave
paddusw
aam
jnp
inc
hlt
mov
add
call
and
icebp
xchg
test
in
outs
mov
mov
lahf
or
pop
jb
cwde
retf
or
out
pop
fmul
addr16
ret
ret
cmps
(bad)
mov
jmp
mov
out
jmp
lock
enter
mov
adc
dec
jge
fsubr
outs
scas
outs
push
adc
mov
sub
(bad)
shr
(bad)
cli
repnz
cwde
push
cmp
data16
xor
call
ja
jl
(bad)
shl
xor
or
addr16
mov
push
rol
and
fild
push
pop
sahf
cli
jp
pop
mul
iret
sar
or
int3
xchg
push
and
jae
popf
sbb
push
lea
pop
das
mov
mov
ja
or
movs
fldcw
fsubr
dec
out
ret
fldcw
xlat
and
stos
jmp
int
cmpxchg
jne
lahf
lock
xlat
dec
sar
xchg
lock
cmp
popa
icebp
arpl
push
and
test
fcomip
fs
test
pusha
adc
mov
jle
arpl
pop
data16
pop
mov
das
pop
das
adc
push
add
sahf
dec
mov
fdiv
arpl
add
sub
iret
cmp
or
and
add
mov
add
(bad)
aas
jmp
pusha
inc
jl
call
jnp
or
sbb
shl
xor
inc
pusha
mov
dec
movs
sbb
ret
push
aas
mov
icebp
in
jne
retf
std
(bad)
mov
lea
xor
pop
je
and
pusha
loopne
cmp
mov
rcr
repz
jbe
mov
push
mov
adc
adc
pop
xchg
retf
ja
mov
fwait
dec
neg
push
scas
fs
add
mov
cmc
fwait
push
lods
pop
xchg
push
mov
xor
pop
cmp
ret
xor
(bad)
mul
push
and
pop
jle
addr16
cmp
push
xlat
mov
pop
shl
xor
jb
sahf
movs
adc
add
jp
push
std
movs
scas
int
(bad)
aad
dec
arpl
iret
mov
fstp
cwde
int3
(bad)
push
and
inc
fwait
add
imul
ja
mov
out
jl
inc
jl
jp
inc
test
leave
mov
loope
cmp
unpcklps
mov
sbb
xor
xchg
jl
fwait
mov
jo
cmps
cmp
mov
loope
xchg
fcom
mov
mov
js
pushf
cmp
add
rcl
jne
in
jne
xor
mov
pop
mov
pop
push
imul
add
dec
dec
adc
iret
retf
aad
movs
add
inc
pop
test
or
mov
arpl
out
xor
mov
cmps
and
addr16
sbb
test
iret
shr
cmp
stos
push
repnz
or
sub
mov
pop
cmp
cmp
pusha
adc
fwait
push
jo
frstor
ret
xchg
push
stos
rcl
jb
sahf
outs
push
aad
push
lahf
dec
(bad)
and
lock
inc
retf
push
repnz
repz
mov
cmps
mov
into
add
cmp
fnstenv
mov
push
pop
lods
jg
icebp
cmp
hlt
repz
rcl
pop
mov
sahf
cwde
and
and
jno
out
or
or
test
imul
movs
les
js
int
jnp
addr16
mov
adc
jmp
xchg
std
daa
rcr
mov
sbb
sub
sbb
test
loopne
shl
pop
imul
push
sub
add
call
aaa
push
sbb
sub
fst
lods
dec
lea
add
ds
in
int
mov
ret
or
push
leave
mov
icebp
lods
ins
jnp
lds
push
cmps
cmp
call
mov
mov
xor
ret
int
mov
aam
sbb
loop
imul
pop
dec
(bad)
cli
(bad)
pushf
mov
into
sub
int3
fcmovb
clc
pop
fwait
outs
aas
mov
mov
in
jbe
sub
cdq
sub
(bad)
ds
pop
mov
cmp
in
rol
jne
arpl
dec
xor
fiadd
pop
push
push
add
push
pop
sub
mov
(bad)
or
jecxz
or
inc
rcl
push
pop
(bad)
in
cmps
sahf
scas
mov
mov
push
test
call
lds
outs
jg
test
xchg
sub
(bad)
movs
add
dec
int
loop
inc
test
pop
or
jg
pop
sbb
and
cwde
adc
pop
cmps
mov
dec
out
call
repnz
das
lea
retf
pop
test
retf
fxch
jge
call
arpl
cmc
pop
lds
push
fldcw
fdivp
addr16
xchg
push
pop
pushf
leave
and
aaa
cmp
arpl
mov
lods
mov
inc
js
retf
sbb
ror
adc
ret
mov
cdq
popf
sahf
ret
or
mov
popf
cmps
je
shl
inc
mov
daa
push
call
call
lock
stc
mov
icebp
xchg
push
jb
fs
idiv
mov
shl
xor
(bad)
or
jmp
mov
jle
(bad)
ins
or
(bad)
mov
(bad)
jo
mul
or
jg
ret
cld
xor
jmp
nop
dec
jno
cld
stos
pusha
int3
sti
call
cmp
sbb
(bad)
(bad)
loopne
cmp
in
add
xchg
xchg
cmps
clc
jae
je
fcom
jmp
fs
jg
sbb
xor
and
stc
inc
clc
jbe
iret
pop
mov
and
(bad)
mov
rcl
ret
or
ds
enter
xchg
jns
and
mov
inc
imul
cmp
int3
fcomp
add
les
nop
test
dec
pop
les
sub
or
out
xchg
ins
or
or
shl
mov
js
push
lods
(bad)
inc
jp
loope
sub
(bad)
rcr
and
iret
mov
jp
int3
cdq
lds
iret
xor
retf
gs
sbb
mov
push
scas
cdq
inc
mov
outs
cmps
cli
mov
inc
sub
push
fnstcw
iret
in
es
sbb
out
mov
int
push
inc
sub
or
add
aad
pop
xchg
add
loopne
jnp
xchg
pushf
push
cmp
test
xchg
pop
jmp
neg
(bad)
rcl
mov
xchg
rol
xlat
xchg
pop
loope
(bad)
dec
pop
add
jbe
retf
jmp
in
pop
call
int3
mov
outs
xor
cmps
outs
inc
mov
outs
in
push
outs
(bad)
mov
shl
movs
dec
in
mov
mov
jb
stc
(bad)
clc
xlat
sbb
xor
and
xchg
pop
call
jg
mov
push
add
sbb
sbb
add
jns
ins
movs
shl
ins
or
pop
pusha
jns
xor
pop
xlat
popf
retf
cmp
jp
call
sahf
imul
fwait
ins
cmc
push
mov
add
out
jge
or
pop
jmp
cmp
rol
xchg
inc
es
mov
in
mov
in
sbb
scas
aad
popa
xchg
dec
dec
or
push
dec
jl
mov
and
gs
inc
dec
jmp
in
or
nop
or
inc
jg
out
nop
xchg
loopne
inc
sub
std
sub
mov
sbb
adc
retf
inc
(bad)
adc
mov
push
or
ret
popa
in
leave
fdiv
loope
xchg
(bad)
out
or
cdq
cmp
xor
jmp
clc
addr16
xchg
mov
and
loopne
rol
idiv
out
jb
mov
enter
cmp
inc
jb
pop
adc
mov
or
pushw
rcr
outs
push
leave
fcomp
data16
cmp
loopne
mov
nop
pop
sub
jne
cmp
inc
outs
(bad)
dec
pop
mov
inc
mov
fs
push
lods
xchg
cs
push
rol
sub
mov
(bad)
retf
fimul
and
push
mov
jge
push
and
sbb
cmp
test
pop
lahf
lock
inc
lds
push
inc
dec
add
push
test
js
jp
imul
aas
imul
sbb
je
and
cmps
jge
popf
mov
adc
rcl
cmp
fistp
lods
outs
xchg
and
sub
repnz
imul
cmps
and
mov
pushf
(bad)
ficom
adc
ss
stos
into
mov
adc
jg
or
sub
add
inc
add
sbb
aam
ficom
jp
mov
repnz
ret
mov
xchg
and
fild
in
out
jmp
or
add
sub
pop
call
pop
mov
mov
or
repnz
mov
es
(bad)
sub
ds
pop
mov
movs
jg
int3
mov
hlt
mov
xor
dec
mov
push
sbb
rol
fwait
retf
(bad)
jmp
rcr
dec
pusha
(bad)
dec
movs
ret
mov
push
mov
in
fcmovnb
(bad)
sbb
into
cmc
call
mov
push
push
mov
out
out
cld
ja
das
sbb
cld
lds
sub
xchg
cmp
mov
jmp
sbb
dec
cmp
push
jno
xchg
and
push
dec
jo
xor
call
add
cmps
mov
mov
test
fs
add
aaa
retf
pushf
(bad)
sbb
push
stos
inc
lahf
xchg
data16
ins
dec
and
bound
aad
or
in
outs
add
sbb
push
mov
ins
cmps
and
mov
cmps
int
call
js
cmc
push
inc
jge
jmp
mov
inc
stc
(bad)
xchg
pop
add
mov
xchg
sbb
sub
aad
jg
inc
lea
in
sub
scas
mov
je
pusha
mov
mov
fstp
adc
add
push
pop
int
mov
idiv
xor
pop
std
and
lods
(bad)
adc
pusha
and
mov
cmp
popf
(bad)
pop
pusha
scas
fsub
push
pop
jle
mov
ja
and
and
lods
mov
mov
pop
hlt
adc
mov
mov
ds
into
popa
add
mov
les
mov
mov
test
push
push
cmp
mov
add
adc
ins
xor
std
mov
mov
pop
jno
inc
or
lods
push
xor
js
mov
aaa
sub
or
dec
fdivr
xchg
pop
push
jne
(bad)
aad
ins
(bad)
call
mov
add
out
mov
in
mov
jmp
xor
jecxz
sbb
test
cmc
in
mov
sahf
lahf
jmp
stos
jle
mov
push
jns
pop
sub
mov
push
sub
repz
test
fsub
mov
repnz
popf
push
cdq
push
inc
leave
in
fsub
int3
cmps
cwde
cli
out
cld
dec
dec
jo
std
mov
jbe
xor
mov
cs
in
mov
inc
push
sub
fwait
sbb
out
sub
adc
pop
cmp
scas
push
jmp
aas
mov
xor
xor
fdivr
cmc
sub
pushf
add
int
cdq
cmp
mov
xor
enter
jmp
mov
fsub
adc
mov
retf
pop
stos
pop
jp
push
in
push
movs
inc
pop
(bad)
nop
enter
popa
call
or
les
call
jecxz
push
push
sbb
and
mov
ficomp
lahf
push
in
out
test
in
jp
in
add
mov
xor
mov
in
xchg
cs
xchg
sub
fs
inc
and
test
cmp
adc
xchg
push
out
adc
test
bound
mov
inc
int3
sub
scas
pop
cwde
push
ret
xchg
repnz
pop
repnz
aam
cmp
cmp
adc
cmp
dec
xchg
mov
xor
out
mov
dec
test
or
mov
jns
push
mov
push
mov
out
sub
daa
js
popf
div
xor
push
loope
imul
and
push
ret
adc
mov
mov
push
in
jnp
fist
outs
mov
mov
(bad)
iret
sub
rcl
cli
dec
in
retf
jno
xchg
inc
enter
inc
pop
jge
stos
fldcw
mov
dec
cmps
sub
mul
push
lods
cmp
jnp
inc
retf
mov
sbb
push
daa
lahf
or
lods
dec
test
xor
push
add
iret
jge
pop
pushf
sbb
xor
fs
in
pop
(bad)
out
push
aad
mov
add
dec
push
test
jo
and
mov
ret
pop
or
jecxz
imul
test
xor
aam
mov
xchg
jae
sub
out
add
cmp
stos
xor
fcom
stos
dec
aaa
movs
iret
(bad)
in
sub
fcomp
mov
adc
mov
ins
mov
sub
sub
jp
fiadd
cmp
mov
jp
jo
sahf
dec
test
mov
scas
mov
aaa
std
sti
lea
sbb
lahf
xchg
jo
inc
jo
push
xor
jne
cdq
aam
push
(bad)
xor
mov
(bad)
out
imul
arpl
push
push
dec
stos
fst
iret
dec
xchg
imul
xor
add
mov
push
pop
mov
jo
out
xor
(bad)
pop
xor
pop
adc
ja
inc
imul
loope
mov
cli
mov
sub
outs
vmovdqa
mov
repnz
jno
out
push
jmp
scas
das
int3
xchg
add
jecxz
xor
add
(bad)
es
outs
adc
aam
sub
xchg
mov
push
ins
sub
mov
loop
gs
repz
fsubr
xor
les
mov
stos
push
or
pop
shl
in
and
adc
adc
jl
push
aas
ret
mov
(bad)
gs
or
add
pushf
fcom
or
fsub
lock
inc
push
ds
cld
ins
and
add
and
cld
std
les
ja
xor
or
js
ss
or
aaa
(bad)
sbb
ins
or
out
xchg
lods
dec
in
sub
popa
mov
mov
add
sbb
cmc
cs
cmp
test
mov
add
sbb
push
sbb
push
push
inc
add
sub
bnd
into
push
cmp
fdiv
inc
mov
or
xor
inc
jno
pop
rcl
cmp
sbb
dec
push
mov
mov
sub
out
stc
in
enter
mov
inc
retf
xchg
dec
push
loope
test
add
xchg
pop
pop
imul
mov
mov
inc
call
mov
out
scas
pushf
pop
and
jle
add
loop
jae
dec
and
std
mov
lahf
ss
nop
xor
jns
lahf
xchg
mov
pop
pushf
ss
cmp
fisubr
ins
fstp
push
out
fcom
cmc
sbb
fdivr
xor
mov
mov
in
gs
and
out
and
int3
sbb
pop
call
jae
pop
mov
popa
add
xchg
mov
bound
mov
pushf
jg
fnsave
ins
jae
shl
in
or
lds
xor
push
add
mov
or
loope
mov
jae
jno
mov
jl
or
dec
inc
jbe
jbe
(bad)
imul
por
mov
aas
jne
mov
inc
dec
sub
jmp
out
fldpi
out
fcmovnb
and
data16
fst
jg
sub
ss
scas
popf
jg
push
push
popa
into
xor
les
xor
jne
jle
cmp
xor
(bad)
xor
mov
push
sub
popa
cmp
jmp
xchg
pop
jl
std
cmps
jmp
sub
and
push
pop
xchg
xchg
fbld
xchg
out
iret
dec
xchg
adc
mov
xchg
int3
sbb
adc
inc
dec
xchg
je
test
pop
sub
inc
sub
mov
fild
stc
sub
cmc
outs
enter
movs
ror
add
sbb
mov
jo
pop
cmp
cmps
out
movs
or
hlt
mov
inc
pop
cmp
call
dec
pop
icebp
inc
or
adc
mov
jle
int3
sub
cs
sub
enter
push
jo
test
or
(bad)
mov
dec
inc
jmp
or
out
jecxz
add
retf
cwde
jo
test
ins
sub
mov
retf
jecxz
ins
dec
dec
sub
test
pop
arpl
and
jmp
jmp
mov
mov
js
adc
dec
cmp
jle
int
sub
jne
in
shr
mov
add
call
neg
mov
and
in
jns
aas
adc
icebp
and
xchg
test
movs
pop
or
in
test
nop
dec
(bad)
popa
jmp
test
add
cmp
sub
mov
dec
movs
inc
lds
fld
lock
push
mov
mov
jne
cwde
icebp
pop
fistp
pusha
daa
jecxz
lahf
gs
mov
mov
cmp
lea
das
mov
aas
dec
fcom
jno
not
inc
(bad)
push
(bad)
cmp
add
fs
jmp
out
clc
and
rol
repnz
outs
mov
ret
push
pop
mov
hlt
xor
jg
stos
push
dec
mov
dec
mov
idiv
xchg
inc
push
cmp
and
add
rcl
out
jmp
lahf
fucomi
bound
outs
in
xlat
or
(bad)
dec
jg
pop
cmp
arpl
xlat
pop
int3
cs
pushf
imul
(bad)
mov
mov
add
mov
fs
jns
ins
(bad)
retf
dec
call
adc
pop
mov
daa
or
push
jne
cs
xchg
push
mov
mov
in
jb
inc
cmps
imul
lahf
gs
mov
push
add
stos
stos
inc
ror
push
test
pop
push
xor
(bad)
sti
cmp
hlt
test
mov
pop
outs
xor
mov
nop
mov
aam
cmp
out
and
lahf
and
outs
hlt
push
iret
xor
inc
xchg
mov
mov
push
das
jle
mov
ret
lock
ins
imul
adc
jmp
mov
ins
xor
dec
push
cmp
sub
shl
ins
sar
and
sahf
mov
mov
retf
or
retf
xor
fcomi
add
mov
fsubr
aad
sub
scas
add
mov
pop
xor
pop
sbb
xchg
das
jp
mov
and
in
(bad)
loope
retf
jae
add
jo
inc
mov
ja
aam
ret
loope
inc
adc
movs
cli
icebp
and
nop
cmp
xor
push
loope
arpl
xchg
xor
jnp
dec
xchg
add
sub
mov
jnp
retf
out
mov
pushf
stc
dec
loop
fldcw
mov
mov
mov
mov
pop
retf
push
shr
sub
data16
sbb
inc
sub
xchg
scas
jmp
dec
mov
ins
aas
adc
test
in
mov
cmp
ja
imul
pop
jnp
repz
iret
fadd
cvtdq2ps
and
sbb
fidiv
xor
neg
shl
or
pop
shl
or
cs
outs
(bad)
and
and
sbb
mov
dec
jp
cmp
fisubr
dec
push
push
xchg
lods
in
jge
inc
mov
sar
and
fcmovbe
push
pop
cmp
shl
jp
test
xchg
out
sub
jb
repz
ins
xchg
into
or
test
jb
and
jbe
aaa
mov
jp
fist
xchg
jne
or
xchg
stos
outs
dec
pop
mov
(bad)
test
aaa
mov
cmps
dec
loopne
jp
cmc
inc
fist
adc
push
daa
rcl
shl
clc
or
outs
push
xchg
leave
push
leave
clc
in
jmp
mov
cmp
ret
outs
jnp
dec
mov
ins
mov
adc
lahf
push
sbb
ret
shr
fs
sub
cld
outs
fcmovnu
out
fst
push
pop
not
dec
cmp
stc
(bad)
jg
popa
int
pop
outs
sti
hlt
into
adc
iret
or
dec
xchg
data16
mov
cs
imul
lock
fstp
loope
xchg
push
xchg
cdq
jns
int3
cld
jbe
sbb
push
das
push
mov
in
mov
pop
dec
inc
push
call
inc
imul
jl
test
jge
inc
inc
(bad)
xor
pop
xchg
jecxz
hlt
and
pop
stos
hlt
sub
jb
sub
and
mov
pop
pop
int
and
and
in
mov
call
mov
jae
sar
fucomip
xor
shr
inc
and
rcl
or
mov
iret
div
sbb
jnp
add
iret
int3
jo
loope
clc
xchg
ss
dec
into
aam
mov
fcom
ret
mov
or
popa
mov
mov
sbb
jmp
mov
push
and
cdq
imul
mov
fcomp
mov
imul
push
frstor
int3
fisub
int3
mov
jle
outs
or
ds
mov
inc
pusha
jae
sub
ffreep
ret
fs
scas
xchg
rcr
repz
sti
lea
ins
sbb
inc
sti
mov
dec
sub
cmp
mul
retf
mov
and
mov
in
and
sub
popa
or
cs
inc
ds
mov
repnz
push
ror
mov
repz
xchg
push
add
(bad)
repz
sub
cdq
jmp
adc
inc
sbb
hlt
retf
pop
loope
mov
inc
stos
aas
sub
dec
into
inc
adc
xor
mov
test
jmp
xchg
mov
cmc
adc
fwait
xor
sub
shl
pop
repz
fs
call
dec
push
popf
xor
cmp
push
mov
mov
inc
mov
pop
enter
pop
je
xor
(bad)
loopne
rcr
hlt
fs
inc
inc
adc
les
out
sub
lods
dec
or
rep
pop
outs
xchg
adc
sbb
pop
sahf
adc
push
and
test
mov
data16
mov
pusha
dec
ins
fs
cmp
aad
cmp
sti
cmp
in
fistp
pop
gs
stc
and
imul
pop
das
add
fxch
pop
push
sub
sti
cmp
or
mov
out
dec
cmp
jne
clc
in
nop
aam
pop
fcomp
push
inc
ret
xchg
daa
inc
ins
iret
xor
xor
into
mov
inc
ins
push
mul
sbb
fnstsw
sub
sahf
and
iret
aam
ins
mov
or
lahf
pop
push
cmp
(bad)
adc
xchg
dec
and
add
mov
fbld
int
ins
hlt
fwait
pop
retf
sti
and
dec
add
push
pop
enter
adc
push
dec
retf
cmps
jle
mov
adc
mov
shl
shl
int3
sahf
paddusw
adc
and
addr16
int3
hlt
mov
pushf
jp
bound
in
xchg
xor
xor
in
push
fsubr
xchg
lds
add
sbb
jns
imul
imul
adc
retf
adc
mov
mov
icebp
aaa
jmp
call
dec
das
call
dec
inc
movs
sbb
outs
mov
add
add
jp
pop
mov
jmp
xchg
mov
shr
outs
dec
mov
lods
xlat
test
jbe
xor
es
inc
mov
mov
(bad)
lahf
xchg
and
(bad)
sar
sub
cdq
daa
sar
and
or
inc
inc
cmp
cmp
imul
xchg
sbb
add
push
icebp
inc
in
push
int
mov
adc
cdq
sbb
cmp
jp
cmp
inc
(bad)
cmc
daa
imul
pop
stos
pop
mov
pop
aaa
andnps
fmul
in
pushf
cmp
push
xlat
cmps
retf
rcr
std
adc
pop
fdiv
fcmovnu
lds
add
retf
gs
inc
cmp
imul
popa
dec
(bad)
fbstp
aad
and
ficomp
pop
mov
ror
fs
daa
test
gs
and
(bad)
xchg
ret
add
or
enter
add
fidivr
cmp
pop
cmp
scas
xchg
xor
bsf
test
pop
or
iret
addr16
xchg
xchg
inc
les
sub
mov
jns
mov
ficomp
movs
adc
mov
mov
jg
jno
add
cmp
test
mov
push
sti
push
xchg
gs
test
arpl
pop
mov
pop
cmp
or
jns
mov
ret
fnsave
es
pop
push
inc
outs
pop
jg
and
inc
ret
push
mov
jecxz
aaa
mov
or
sub
aaa
adc
push
adc
dec
addr16
ror
popf
stos
dec
cli
les
int
pop
dec
pop
pusha
movs
cli
inc
pop
sbb
dec
pop
ror
mov
fadd
int
xchg
inc
sub
repnz
push
jle
mov
pushf
jbe
rol
sbb
repz
pop
sbb
jp
xlat
repnz
movs
jmp
rol
xchg
mov
movs
(bad)
and
pop
cmp
push
fdiv
mov
out
adc
adc
les
mov
ja
test
data16
cli
jae
jbe
nop
int3
(bad)
inc
add
mov
sub
fwait
add
fimul
(bad)
mov
inc
(bad)
scas
jno
mov
xchg
rol
ret
pop
add
mov
cmp
adc
cmc
jae
jmp
xor
fist
ja
inc
pop
fwait
cdq
add
retf
pop
dec
push
ins
mov
xlat
lea
sbb
cdq
lock
cmp
gs
pop
loopne
(bad)
push
sub
pusha
ins
jns
jns
jns
pop
lahf
imul
jo
jmp
in
ja
sbb
cmp
outs
sahf
stos
(bad)
es
pop
ss
xor
in
ret
aaa
mov
dec
jle
mov
scas
sahf
and
mov
push
jb
call
jmp
jns
aad
push
sti
and
add
(bad)
cmp
cmc
mov
mov
mov
and
es
lahf
sbb
retf
mov
and
sti
fnstsw
hlt
push
push
call
ror
mov
dec
sub
xchg
ret
retf
mov
jo
scas
xor
push
fs
mov
jno
nop
inc
adc
adc
sbb
lods
mov
ins
adc
loopne
adc
leave
and
or
jge
dec
add
adc
inc
int3
push
repnz
mov
(bad)
clc
xchg
cmps
repz
cdq
out
push
push
xor
pop
xlat
push
pop
jo
add
inc
dec
sub
addr16
cmp
pop
jnp
push
outs
in
pop
mov
imul
fisttp
in
imul
add
repz
movs
(bad)
sar
cwde
std
push
fstp
inc
loopne
popa
cli
xor
mov
addr16
arpl
push
mov
adc
cmp
repnz
(bad)
jmp
jle
add
mov
cmp
or
mov
inc
std
or
pop
cmp
clc
push
jl
out
sti
jmp
loope
cmc
loope
retf
movs
sbb
test
pop
ins
push
je
adc
scas
fcmovbe
xchg
sbb
push
std
jnp
js
or
popf
add
repz
cld
mov
pop
push
stos
pop
aaa
rcr
mov
cmp
outs
cmp
pop
bound
cwde
cmps
inc
cs
push
pandn
test
clc
bound
cmps
jmp
xchg
dec
sub
inc
sub
xchg
xchg
das
dec
hlt
jl
in
das
stos
enter
lahf
ins
and
mov
mov
outs
sub
sbb
cmp
std
jae
push
and
xchg
jne
xchg
ficom
inc
(bad)
xchg
cmp
mov
retf
xchg
sbb
rol
shr
out
and
mov
pop
(bad)
fild
jg
xchg
push
pop
sub
sbb
cmp
cld
mov
in
outs
rol
mov
stc
outs
int3
add
pop
push
dec
gs
or
mov
loopne
pop
outs
push
mov
shl
mov
js
jbe
and
push
xchg
dec
into
stos
jge
cmc
out
xchg
rcr
jbe
push
scas
pusha
xor
cdq
xchg
int
xlat
stos
repnz
cmps
xor
cld
add
jle
call
mov
iret
scas
inc
cmp
add
dec
repnz
inc
neg
aad
cmp
scas
mov
xchg
jg
pop
xchg
(bad)
mov
mov
jmp
call
and
fdivp
ja
cmps
cli
pop
mov
pop
mov
out
int3
inc
mov
pop
jns
inc
sbb
inc
sbb
xor
mov
call
xchg
mov
push
cwde
pop
(bad)
leave
and
xor
or
xchg
mov
mov
enter
sbb
rol
dec
imul
repz
xlat
mov
shl
shl
or
xchg
jne
stos
xchg
fistp
push
cmp
test
dec
jl
mov
cmp
add
ret
jecxz
jno
inc
push
xlat
jbe
mov
cld
inc
into
lods
push
outs
push
pop
bound
mov
sbb
in
jecxz
jbe
jp
(bad)
dec
(bad)
ja
shl
addr16
inc
test
xchg
push
(bad)
adc
inc
or
pusha
mov
jl
xchg
adc
(bad)
mov
ds
pop
scas
nop
das
inc
stos
sbb
pop
jbe
xor
sbb
lods
dec
cs
pop
add
cmp
add
sub
cmp
clc
sub
mov
(bad)
hlt
out
in
jb
sub
push
fs
bound
hlt
cmp
jecxz
leave
mov
jae
stos
dec
sub
fnstsw
ds
fild
mov
mov
stos
ss
aad
enter
adc
xlat
add
test
cmp
xchg
sbb
mov
push
mov
fdivr
rcr
or
mov
mov
js
xchg
mov
ret
cmps
out
mov
push
ins
into
aam
push
xchg
pop
mov
xchg
push
dec
rol
jnp
xchg
outs
sub
inc
iret
sbb
cdq
mov
sbb
fmul
jnp
push
pop
or
mov
xor
mov
mov
in
mov
stc
test
lods
repnz
ret
add
hlt
cs
in
cmp
mov
int3
or
inc
adc
imul
(bad)
js
mov
xlat
cmp
loop
inc
cmp
adc
repnz
(bad)
jmp
test
pop
lds
or
or
aaa
cvtpi2ps
js
and
adc
pop
fbld
cmp
js
int3
push
lahf
xlat
cmp
test
test
jns
jb
cmps
xor
jmp
xor
pand
inc
fs
lds
ret
mov
adc
mov
jns
xor
mov
mov
rcr
dec
lea
inc
les
add
sub
and
or
cmp
cdq
sub
mov
daa
loope
jle
jmp
retf
icebp
or
pop
xor
les
dec
ja
cmc
scas
sub
retf
mov
pop
stos
stos
sbb
test
xor
mov
ror
ins
mov
(bad)
test
inc
mov
mov
xchg
inc
jne
call
pop
out
test
cmp
mov
dec
iret
ret
or
rcr
movs
arpl
sahf
outs
movs
test
sbb
mov
(bad)
pushf
and
and
mov
xchg
mov
jge
aas
push
retf
daa
xor
jne
mov
pop
cld
mov
cdq
xchg
cdq
mov
mov
xor
test
stos
rcr
push
add
jns
and
ss
mov
ret
inc
sti
jecxz
outs
jno
pop
push
imul
pop
and
int3
dec
xor
ss
jbe
nop
mov
adc
mov
pop
dec
pop
add
pusha
dec
mov
or
outs
sub
xor
xchg
out
xchg
add
dec
xor
xrstors
sbb
mov
pop
pop
mov
rcr
sbb
ret
sti
shr
jo
mov
aad
aaa
icebp
pop
xor
jle
cmc
fcmovbe
or
and
jecxz
ins
jne
test
call
aaa
ja
or
pop
sub
idiv
sti
adc
std
mov
pop
pop
sub
sbb
popf
fisub
call
les
jns
cli
adc
in
sbb
out
push
je
push
jno
fldenv
ins
scas
xchg
mov
dec
dec
or
lods
mov
sub
daa
mov
sahf
jo
jmp
pop
jge
or
test
push
push
jno
sti
and
repz
xor
loope
cmps
fstp
mov
jp
xchg
stos
popa
add
pop
mov
cmp
cs
int
cmps
js
mov
retf
fdiv
repnz
jb
inc
mov
in
test
lods
mov
xchg
mov
jle
retf
rcr
push
lock
cwde
es
imul
mov
data16
xor
and
or
and
dec
inc
pop
test
loopne
push
cmps
shl
push
sbb
movs
test
push
test
jmp
popa
fsubr
jne
mov
sbb
add
fs
xchg
add
inc
cmp
sub
add
push
inc
jle
xchg
xchg
aas
stos
jl
jmp
test
mov
(bad)
rol
mov
or
cmova
mov
paddsb
cmp
js
add
repnz
stos
jmp
and
mov
adc
add
cmp
jmp
jns
xchg
dec
in
retf
addr16
dec
mov
sbb
aam
enter
add
mov
inc
cmp
xor
ficom
mov
mul
jb
jae
xchg
dec
fld
(bad)
in
out
xor
leave
jmp
mov
fs
pop
cmp
(bad)
adc
xor
mov
sbb
xor
lea
cmp
adc
jmp
test
pop
mov
mov
loope
mov
retf
jb
dec
or
push
retf
lds
dec
xor
cmp
in
xchg
loopne
cmp
lds
lods
fisttp
push
mov
jge
sbb
and
loope
and
pop
popf
daa
pop
mov
mov
push
div
mov
sbb
adc
retf
int3
ja
xor
imul
jmp
push
pop
rcr
sti
and
int
mov
push
loope
jmp
jne
mov
mov
(bad)
loopne
or
ss
pop
jmp
pop
stos
add
and
jmp
mov
fild
xlat
fisubr
in
cmp
dec
sbb
xor
test
scas
pushf
fcmove
dec
jno
mov
adc
imul
cli
mov
pop
dec
femms
cdq
test
fcmove
cld
jns
or
fstp
mov
push
or
iret
xor
adc
dec
cmc
loope
ss
sbb
sub
test
nop
aas
fbld
cmps
sbb
les
mov
inc
jmp
sub
jl
or
mov
mov
mov
push
fldenv
into
pop
dec
call
inc
jb
leave
idiv
fbstp
sub
div
jp
retf
retf
or
(bad)
sbb
in
adc
popf
push
mov
jl
push
andnps
lds
idiv
cmc
jl
sbb
or
outs
mov
push
and
fwait
nop
nop
mov
fidivr
ret
ret
xchg
xor
mov
inc
xchg
mov
xor
jmp
out
add
(bad)
ret
and
test
cmp
std
fild
push
pop
shl
fwait
sub
cmps
das
push
or
js
jo
mul
pop
aaa
aam
data16
fisttp
fcomp
outs
push
div
into
aad
pop
sub
(bad)
xchg
imul
lods
mov
pop
mov
mov
mov
adc
das
cld
sbb
mov
repz
xor
out
int3
in
dec
or
push
ins
jns
cs
(bad)
rcl
lods
sub
push
int3
in
enter
(bad)
add
mov
test
sub
and
cmp
xor
aad
jle
jbe
sub
aaa
idiv
or
cmc
xchg
mov
dec
jecxz
add
pop
jp
or
cmps
push
loope
pop
sub
mov
stos
cmps
scas
adc
push
push
ret
daa
(bad)
adc
(bad)
fimul
icebp
mov
xchg
int
dec
arpl
add
out
sub
xor
loop
je
push
cwde
fisttp
add
cmp
imul
jbe
je
aad
repnz
push
test
shl
mov
rol
push
sti
outs
(bad)
or
cli
ret
mov
jmp
pop
cld
je
mov
in
cmps
mov
int3
call
sbb
mov
mov
xor
jnp
sub
mov
mov
ret
out
xchg
sub
sub
sub
stos
xchg
je
add
pop
pmaxub
jo
xchg
fisttp
push
pop
dec
jecxz
jl
dec
pop
(bad)
cmp
push
out
cdq
xor
retf
sti
sub
jmp
xor
rcr
ret
inc
mov
and
dec
push
into
sbb
inc
bound
fld
sbb
inc
out
jno
(bad)
jle
cmp
pusha
and
les
push
daa
xchg
xchg
mov
mov
sub
sub
bound
mov
xor
push
mov
test
lods
div
dec
or
xchg
fxch
mov
mul
mov
adc
dec
int
leave
sub
xor
mov
test
fidiv
(bad)
cld
in
inc
pop
xor
cmp
or
mov
xlat
and
sti
sti
xchg
ins
mov
push
dec
popf
(bad)
cld
mov
sbb
pop
pop
inc
jle
mov
mov
pop
sbb
mov
push
sar
mov
fwait
sti
int3
(bad)
aas
movs
out
movs
div
hlt
push
cli
add
sub
jecxz
loop
std
fwait
or
inc
mov
adc
xor
stos
out
jb
mov
xchg
mov
sbb
jno
(bad)
mov
or
retf
ds
outs
mov
xor
ficom
mov
pop
sahf
xchg
call
add
call
adc
pop
add
jl
popf
lds
popf
adc
frstor
ds
gs
imul
dec
clc
das
in
pop
jb
adc
out
repz
and
or
add
movs
in
adc
idiv
jl
lahf
call
xchg
xchg
fistp
(bad)
stos
sub
ss
clc
dec
pop
xor
xchg
and
std
icebp
stos
aad
jo
push
jnp
xor
push
adc
(bad)
adc
call
fs
fbstp
scas
sub
rcr
mov
fcom
rol
inc
lods
pop
jmp
call
jl
cwde
push
mov
sub
mov
popf
push
pop
out
mov
inc
iret
and
mov
lock
call
imul
cld
lahf
cmp
popa
inc
sub
neg
cmp
ins
mov
out
popa
cmp
out
sbb
dec
and
test
ror
jge
addr16
daa
inc
sub
dec
jns
loop
xchg
ins
mov
out
fnstenv
inc
repnz
std
rcr
push
and
out
ud0
or
sbb
mov
pop
and
daa
mov
fisub
popa
cmp
int
cmp
pop
mov
xchg
rcr
test
push
inc
jae
es
xchg
iret
scas
ss
jmp
hlt
sub
inc
test
inc
xchg
adc
(bad)
sbb
in
lea
outs
jnp
fisttp
out
mov
aad
xlat
pop
aaa
out
in
mov
stc
xchg
dec
rcr
pushf
jnp
push
inc
leave
add
jl
js
leave
and
fbld
into
mov
test
call
shr
shl
popf
js
xor
mov
jbe
sar
aas
lock
stos
jne
or
(bad)
int3
loope
loopne
es
jp
push
mov
loopne
cmp
jge
icebp
imul
lods
mov
add
repz
jge
into
cmp
test
jbe
jmp
sbb
mov
es
push
into
or
cmp
sbb
sbb
repz
adc
lods
mov
cli
fldcw
mov
cld
clc
ret
sub
and
or
into
test
dec
sbb
mov
ficom
fwait
ja
repnz
mov
test
sbb
mov
cwde
push
inc
mov
es
aam
inc
shr
ins
fstp
adc
mov
fcmovu
int
stos
pushf
retf
and
data16
jb
jp
jmp
inc
pushf
or
jb
daa
je
lods
xchg
in
outs
jae
jb
add
(bad)
rol
xchg
jge
xchg
jmp
sar
std
ret
mov
jns
rcr
mov
imul
sbb
jb
or
mov
mov
add
mov
cmovne
fadd
(bad)
cld
ja
sub
and
addr16
xor
jb
dec
pop
push
into
lock
xor
xchg
shl
inc
add
out
lahf
nop
aaa
scas
out
mov
xchg
lods
lahf
push
frstor
sbb
ret
jae
mov
mov
adc
and
add
aad
dec
repnz
mov
loopne
loopne
push
cmp
mov
inc
sbb
mov
neg
loop
ret
bound
sub
cmp
lahf
inc
sbb
mov
add
popa
sub
lock
jnp
pusha
out
retf
(bad)
test
push
cmp
je
in
iret
pop
inc
sbb
xchg
push
lods
mov
test
fmul
pushf
inc
stos
sbb
mov
inc
jecxz
jl
sub
pop
ja
mov
fmul
aad
inc
sub
ror
rcr
ret
mov
repz
pop
mov
loopne
add
adc
scas
scas
push
arpl
adc
in
push
push
inc
push
cmp
mov
or
xchg
rcr
inc
repz
sub
xchg
cmp
push
jecxz
push
mov
ror
aaa
ficomp
iret
fcmovnbe
jmp
pop
xor
jmp
xchg
out
xchg
stos
jo
mov
xor
iret
adc
mov
pop
pusha
out
and
sbb
retf
mov
adc
jns
lds
jp
adc
ficom
(bad)
sub
rep
call
add
or
or
jl
inc
enter
and
loope
shl
and
inc
out
jmp
stc
xchg
aam
fs
pop
sub
push
repnz
mov
mov
dec
jbe
iret
sbb
arpl
out
jge
out
and
fldz
test
dec
hlt
xor
push
push
xchg
xor
cmp
add
rcl
cmp
add
pop
loop
stos
test
(bad)
xchg
nop
jnp
iret
and
mov
js
pop
or
xchg
sar
sbb
mov
push
push
ror
push
popf
out
pushf
sbb
scas
cld
mov
add
loope
repnz
daa
mov
fdivr
push
xor
(bad)
in
stc
pop
adc
fistp
iret
xor
dec
rcr
ret
sbb
sub
loopne
daa
jg
fcomi
pop
mov
mov
adc
and
jo
arpl
jno
imul
adc
leave
shl
cmp
mov
outs
loop
aas
ds
jbe
mov
add
mov
dec
retf
stos
movs
repz
xchg
sbb
or
jb
xchg
jne
gs
mov
mov
ins
mov
(bad)
test
(bad)
call
mov
div
adc
rol
mov
and
mov
sbb
pop
fld
jmp
jp
adc
fist
jnp
pop
or
pusha
clc
dec
in
hlt
add
repnz
scas
jbe
test
sbb
xchg
in
loopne
jo
jbe
xor
mov
fs
xor
mov
push
pop
out
imul
std
stos
clc
mov
add
jge
js
jge
popa
mov
leave
xor
jns
mov
stos
xchg
js
dec
mov
jl
movups
jecxz
dec
test
xor
xor
in
mov
xor
or
jmp
or
pop
retf
mov
sbb
jle
add
pop
mov
pop
data16
sub
call
ror
push
dec
scas
out
xchg
push
adc
jno
(bad)
repz
cmp
ror
jnp
icebp
daa
out
dec
retf
cmc
call
jb
xor
ds
and
aam
(bad)
retf
and
iret
mov
xor
jle
mov
mov
iret
stos
in
pop
sbb
sub
les
mov
fcom
lea
cld
fst
jmp
push
cmps
inc
repz
dec
fwait
ds
(bad)
popa
mov
stos
xor
(bad)
stos
test
mov
stos
(bad)
cmp
fcomi
js
pop
ret
push
lods
cmp
mov
(bad)
and
xchg
and
mov
and
jno
movs
inc
or
xchg
es
xchg
dec
xchg
sub
dec
in
jmp
(bad)
xchg
cdq
aaa
out
mov
idiv
mov
dec
lds
xor
sti
xchg
dec
iret
je
fidivr
int3
or
ret
sbb
ret
mov
sti
xor
arpl
icebp
scas
push
jmp
jmp
sub
inc
xchg
sar
icebp
inc
jnp
nop
mov
(bad)
idiv
inc
push
ret
push
mov
cld
cld
or
add
dec
or
cwde
pop
lock
imul
mov
mov
aam
push
mov
mov
and
mov
retf
or
adc
jne
cmp
sub
cs
ret
nop
(bad)
mov
arpl
out
mov
pop
adc
bound
sti
xchg
mov
mov
sub
(bad)
adc
stos
xchg
lahf
inc
test
ret
xor
ror
dec
in
xor
retf
lods
inc
je
pop
cdq
and
retf
cmp
test
adc
add
int
sub
int3
repnz
cmp
(bad)
or
xchg
jl
out
aam
test
inc
lock
rcr
stos
push
imul
popa
mov
push
mov
in
ins
mov
pop
mov
dec
(bad)
int3
inc
xor
adc
movs
or
pop
or
ins
cmp
in
outs
ins
(bad)
jmp
push
stos
pop
js
in
push
sub
mov
aaa
test
push
leave
sub
out
scas
push
cmc
push
jecxz
hlt
mov
mov
hlt
inc
and
inc
fnsave
mov
jae
push
(bad)
ror
inc
ds
(bad)
sti
(bad)
sahf
cs
pop
jmp
jmp
out
aad
xor
daa
jnp
add
xchg
movs
movs
sbb
into
sbb
sahf
shl
jl
jle
pop
and
(bad)
fstp
xlat
dec
or
ret
mov
cmp
cdq
sbb
mov
push
xor
popf
pop
mov
push
cmps
iret
xchg
jb
in
xchg
sub
and
imul
mov
in
mov
fs
js
(bad)
out
and
jp
sbb
cli
out
or
fldenv
add
repz
mov
call
test
ror
sbb
scas
and
jle
xlat
mov
or
aam
xchg
pusha
sahf
adc
call
cs
pop
dec
add
sbb
addr16
pop
(bad)
hlt
ja
les
cmp
in
pop
jo
into
shl
lea
pop
pop
pop
inc
cli
mov
and
or
repz
xchg
popa
dec
xchg
sub
pop
cld
stc
inc
test
fdiv
push
dec
xor
mov
or
pop
xlat
add
jbe
stc
ds
sbb
mov
aas
in
push
aad
lds
mov
push
cli
pop
dec
dec
out
xchg
leave
adc
jae
adc
or
lahf
nop
mov
cmp
cs
cwde
xchg
out
cld
and
cmp
loope
push
imul
dec
sbb
pmulhuw
adc
leave
cmc
add
add
push
jmp
pop
add
hlt
sbb
daa
movs
or
adc
push
(bad)
pop
int3
in
dec
xor
mov
call
cmps
or
xchg
imul
stc
popa
jle
jg
jmp
dec
(bad)
adc
or
pop
inc
mov
xchg
dec
retf
fwait
and
push
xor
retf
leave
pop
aaa
std
sub
adc
pop
test
dec
xchg
jmp
add
inc
inc
frstor
jmp
fiadd
sub
jne
enter
and
lods
int
cdq
ss
(bad)
cmp
dec
jno
mov
dec
call
fcmovb
mov
test
push
rcl
mov
push
pop
lds
add
(bad)
lock
pop
fstp
(bad)
jmp
add
xchg
jnp
nop
dec
jmp
add
call
shl
xlat
push
loop
inc
pop
inc
js
in
xor
sbb
(bad)
(bad)
into
mov
jbe
ins
mov
fldcw
popa
cmps
out
mov
repnz
add
adc
outs
and
mov
stc
iret
dec
lock
xchg
loop
out
xor
repz
or
xlat
repnz
out
inc
das
sti
pop
mov
cmp
push
sbb
psadbw
push
dec
xor
ja
sbb
inc
xor
mov
call
push
icebp
pop
scas
sub
mov
mov
push
xor
lea
add
aam
or
mov
lock
fmul
stos
and
test
push
popa
sbb
fsubr
arpl
or
mov
adc
popa
outs
inc
out
les
outs
add
mov
lahf
inc
fucomi
lds
(bad)
adc
lds
mov
iret
jns
pop
dec
ret
imul
dec
fild
gs
inc
lods
sbb
or
fist
cmp
sti
jbe
loop
pop
ret
adc
pop
pop
cmp
inc
repnz
shr
mov
adc
push
dec
inc
rcr
push
mov
jg
push
pop
mov
call
dec
add
mov
dec
xor
adc
cmp
xchg
aad
jnp
push
xchg
outs
push
lds
push
or
cmps
cmps
push
scas
(bad)
adc
pop
inc
mov
aam
xchg
leave
cwde
xor
aad
fsubr
mov
xor
movs
data16
std
stos
or
(bad)
cs
into
lock
mov
mov
cmp
adc
in
mov
gs
scas
mov
repnz
dec
addr16
jecxz
ror
lods
jnp
mov
lods
in
mov
loope
jo
pop
fs
mov
xchg
mov
or
pop
and
icebp
shl
in
retf
loopne
and
in
mov
pusha
push
sub
adc
or
cwde
mov
push
(bad)
aad
ins
sbb
jns
cdq
sbb
or
and
fnstcw
cld
out
lods
hlt
fst
mov
mov
rol
lds
xchg
pop
cmp
mov
fsubr
fbld
lods
(bad)
push
fwait
push
out
add
iret
cmp
in
loopne
xor
inc
call
cwde
dec
jmp
xchg
and
cs
xor
add
js
push
or
ret
(bad)
sub
mov
cld
pop
test
rcr
in
retf
cmp
dec
popa
jp
lock
pop
mov
sbb
mov
pop
jo
ins
jb
fs
mov
data16
aad
mov
inc
cmp
js
mov
(bad)
mov
or
or
movs
sar
cmp
pushf
add
call
push
fist
and
pop
mov
aas
leave
dec
ret
dec
xchg
mov
or
leave
adc
xor
mov
fidiv
inc
adc
sbb
inc
dec
push
jbe
inc
(bad)
scas
mov
dec
inc
int3
fs
add
into
in
bnd
cli
mov
mov
pop
inc
repz
cdq
test
rcl
and
movs
inc
addr16
aas
sbb
push
ins
xchg
pop
imul
ror
sahf
cli
adc
cs
loope
nop
jb
mov
dec
call
xor
out
sub
es
es
mov
mov
outs
pusha
test
cmp
sub
out
add
movs
pop
in
push
js
mov
ins
push
cmp
inc
inc
dec
mov
jmp
inc
xchg
sti
mov
jno
fld
mov
popa
(bad)
mov
and
aam
and
cmp
shl
mov
les
cmp
inc
jns
cmp
mov
ins
(bad)
jmp
out
pop
(bad)
les
lds
push
in
cmp
mov
sub
fstp
dec
fcmovu
lea
outs
xor
pop
fstp
mov
jnp
dec
fistp
rcl
scas
scas
mov
xchg
int
mov
cmp
mov
inc
cld
jb
test
mov
jne
dec
cmps
out
rcl
sub
dec
cs
add
add
add
push
inc
retf
aas
jl
push
or
pop
jg
push
jmp
cli
(bad)
bound
enter
mov
sbb
mov
ds
mov
scas
jle
adc
mov
xcrypt-ecb
cmps
mov
mov
pop
outs
clc
cli
cmp
outs
inc
arpl
in
fs
jp
xor
inc
std
out
mov
test
iret
clc
outs
xchg
adc
arpl
adc
push
lods
pop
pop
pop
xchg
(bad)
adc
cs
ret
or
cmp
add
and
mov
out
xchg
aaa
cld
pushf
test
popa
pop
ins
dec
cmp
mov
pop
(bad)
dec
inc
add
test
pusha
stc
je
dec
cmp
inc
pusha
mov
xchg
dec
(bad)
mov
sbb
sub
retf
pop
cmps
inc
sub
call
lods
fdivr
ins
aam
mov
sbb
in
inc
mov
xchg
fcomp
(bad)
xor
and
scas
cmps
arpl
dec
jmp
cs
pusha
sub
imul
cmps
jno
mov
fisttp
data16
sbb
push
push
mov
pop
or
push
in
nop
mov
les
(bad)
pop
aaa
std
and
add
not
not
sbb
cmps
inc
(bad)
mov
ja
jle
jns
mov
dec
push
jb
cmps
sub
pop
fwait
and
jne
and
mov
inc
enter
and
adc
or
loope
mov
xchg
cwde
lea
mul
scas
cmps
pop
rcr
cld
in
mov
(bad)
jle
mov
adc
mov
xor
cdq
mov
jne
xchg
or
inc
xchg
jmp
stos
mov
jne
mov
hlt
mov
sub
ss
arpl
or
cli
jmp
sbb
inc
ins
adc
xchg
inc
mov
movs
fs
inc
out
cmp
sti
mov
sbb
or
cmps
nop
scas
test
mov
hlt
test
inc
jb
cmps
mov
(bad)
jns
vxorpd
cmp
fs
add
jo
push
das
les
movs
xchg
lods
push
pop
and
fcomip
inc
ret
inc
xor
jno
mov
jns
enter
mov
xchg
loopne
aam
adc
out
cmc
or
into
imul
leave
in
sub
fdivr
fidiv
push
inc
sahf
jo
hlt
daa
push
out
repnz
(bad)
sbb
ret
and
cwde
ja
repz
jmp
inc
sbb
mov
xor
test
cmp
popf
lea
mov
jp
xchg
pop
sub
fcmovb
and
or
xor
imul
add
stos
adc
push
fs
xchg
and
and
cwde
aam
das
adc
cmp
addr16
jns
or
mov
out
stos
xor
cdq
pop
aas
jecxz
pop
cmps
ret
mov
sbb
call
push
jb
ins
loopne
sbb
retf
cmp
adc
push
adc
(bad)
loopne
sbb
(bad)
fmul
aam
lock
into
pop
out
mov
adc
jns
pop
lods
imul
and
pusha
xchg
test
push
dec
and
pop
sbb
icebp
cmp
mov
imul
mov
aas
in
dec
cmp
dec
jae
sbb
inc
add
jmp
pop
xchg
push
mov
add
mov
rcl
mov
jb
adc
out
lea
pop
test
inc
cmp
jle
jge
or
mov
fs
cwde
jo
mov
inc
enter
adc
int
lds
dec
jns
mov
adc
jle
xor
mov
or
loope
movs
ins
xor
out
scas
sub
daa
jae
pushf
popa
fstp
sbb
ror
jo
push
push
daa
xchg
shr
(bad)
in
mul
inc
sbb
jb
ja
out
sub
rcr
dec
hlt
mov
xchg
or
lea
jns
dec
ror
(bad)
adc
test
shl
stc
add
in
data16
ficomp
ds
(bad)
and
ja
push
(bad)
in
aaa
jp
bound
xlat
in
das
add
leave
ins
dec
arpl
sub
shr
push
add
add
mov
shr
pop
mov
xor
aas
js
inc
call
xor
call
stc
inc
push
enter
aam
add
ins
movs
cmps
xchg
dec
cmp
inc
mov
es
imul
pop
mov
jno
daa
pusha
cmp
test
inc
test
inc
cmp
bound
(bad)
fcmovnb
retf
jno
loopne
push
inc
mov
in
xor
push
mov
sbb
add
out
push
std
push
repnz
retf
fild
push
fdivp
popa
jno
shr
cmc
in
inc
into
mov
or
pop
loope
xchg
sbb
mov
mov
mov
lock
fadd
xor
ja
push
mov
xchg
mov
inc
fld
push
in
and
movs
std
int3
scas
inc
fmul
iret
movs
ja
imul
pop
(bad)
sahf
mov
arpl
inc
and
mov
cmc
or
sub
cld
sub
sbb
out
das
adc
sbb
cld
(bad)
out
push
cmp
sbb
mov
mov
mov
shl
push
das
dec
jno
xchg
xchg
jmp
jb
jle
or
or
shl
jns
adc
gs
shl
xchg
retf
int3
dec
shl
pop
ds
or
and
ret
jne
jne
iret
xchg
jl
sbb
cld
adc
movs
lahf
stos
xchg
scas
dec
lock
cli
imul
imul
jg
xchg
mov
sbb
and
or
mov
push
(bad)
in
cmp
call
stos
or
push
mov
add
mov
jmp
and
adc
sbb
mov
rol
jmp
(bad)
jbe
push
in
mov
call
push
enter
cmp
jne
inc
dec
aas
retf
test
dec
sbb
sub
cmp
adc
pop
dec
mov
cmc
and
pop
(bad)
sbb
retf
pusha
cmp
cs
pop
push
fs
sbb
xchg
jecxz
cmps
retf
mov
mov
cmp
out
stc
mov
loope
outs
ret
sbb
or
jb
adc
jb
xchg
hlt
jmp
jg
sub
push
repnz
test
packsswb
and
sahf
ret
mov
sub
xchg
shr
or
fisubr
test
push
mov
mov
push
dec
mov
mov
in
daa
cmp
push
xabort
rol
xlat
outs
sbb
inc
lods
xor
mov
mov
adc
lock
pop
les
push
in
stos
int3
call
lea
add
(bad)
cld
mov
mov
mov
jno
jle
test
and
or
shr
repnz
or
repnz
pushf
cwde
or
jae
lock
xor
or
imul
xchg
push
xchg
dec
fwait
mov
adc
sub
fstp
push
add
ds
shl
jge
gs
lahf
mov
and
xchg
pusha
outs
jmp
mov
pusha
mov
mov
or
ss
js
or
jle
je
sbb
cmc
mov
mov
fs
js
push
rcr
cmp
add
sahf
mov
jge
cdq
sub
xchg
inc
add
mov
or
inc
xchg
sub
or
loop
pop
push
xchg
lahf
and
scas
int3
pop
jmp
adc
push
dec
imul
aas
and
int
mov
push
adc
fisub
cmovae
mov
enter
pop
jp
gs
loop
out
dec
out
cmps
cmp
cmovle
cmps
add
xchg
pusha
dec
adc
out
jmp
xor
add
mov
sub
mov
mov
and
(bad)
xchg
xor
imul
push
sbb
push
sar
pop
in
fwait
mov
xchg
mov
popf
in
neg
and
inc
mov
fs
inc
ja
enter
fnsave
cmps
pop
out
jl
out
test
xor
cmps
mov
repnz
adc
mov
sahf
jl
(bad)
pop
jne
and
(bad)
push
mov
cli
fsubrp
adc
pop
mov
jmp
push
je
out
lds
jg
cmp
dec
dec
retf
stos
add
or
ins
sti
fsubr
sub
jae
inc
xchg
adc
(bad)
xchg
jge
cmp
hlt
sub
test
(bad)
xchg
push
push
and
add
cmp
into
(bad)
cld
mov
inc
and
lock
pop
mov
repnz
call
scas
mov
(bad)
mov
inc
push
clc
dec
xor
fxch
int3
mov
cmp
mov
cmp
out
sahf
aaa
mov
test
ins
(bad)
daa
jmp
jmp
cwde
pop
xchg
daa
out
icebp
or
mov
xor
mov
(bad)
mov
cmps
icebp
xchg
out
loopne
xor
xchg
or
sub
out
cli
in
ins
mov
xchg
icebp
jno
mov
xchg
jbe
push
int
xor
imul
mov
rcl
pop
ds
js
clc
pop
mov
add
cmc
mov
xor
dec
inc
xor
xchg
lods
mov
jmp
stos
sbb
jbe
cs
imul
lods
into
fisub
xchg
push
call
test
shl
adc
inc
cs
mov
xchg
in
stc
data16
outs
and
call
inc
mov
aaa
xchg
ret
sub
xchg
call
lds
adc
hlt
jns
scas
imul
jmp
std
pushf
jmp
out
mov
push
lahf
fcomi
push
cmp
cmc
mov
dec
push
lods
xchg
pop
movs
jmp
mov
inc
push
sbb
lock
inc
or
lods
(bad)
mov
(bad)
mov
and
jns
inc
mov
push
pop
and
push
pop
add
and
cmp
mov
or
ret
out
jl
pushf
daa
lods
scas
mov
mov
cdq
sbb
fs
sbb
jne
ror
lock
test
ss
lods
push
and
cmc
bound
mov
fstp
xlat
cmps
mov
jl
push
and
es
jmp
call
outs
ss
mov
jmp
adc
gs
inc
pop
sub
cmp
cmp
ins
in
(bad)
cli
add
out
(bad)
call
cwde
mov
mov
pop
xlat
fist
mov
push
out
dec
mov
sbb
cmp
(bad)
ds
cmp
cmp
sbb
lods
retf
push
inc
fistp
call
xor
mov
inc
adc
(bad)
les
or
mov
jg
jg
mov
mov
je
dec
lods
in
mov
loope
pop
pop
push
call
je
ja
mov
(bad)
jbe
mov
pop
add
pop
aam
xchg
mov
movs
int3
xchg
sub
aam
pop
jns
inc
push
ds
mov
jae
pop
test
ja
dec
jle
ret
pop
mov
sub
int3
jge
inc
or
mov
jno
lahf
or
and
fbld
je
add
ds
adc
mov
inc
or
pop
xchg
sti
not
pop
xchg
sar
lahf
jp
inc
xchg
pmovmskb
mov
dec
out
pop
int
push
pusha
push
fcmovne
inc
fnstenv
ins
test
scas
mov
(bad)
(bad)
and
mov
dec
(bad)
mov
into
popf
pop
clc
pop
or
daa
cwde
stc
dec
enter
fbstp
fidiv
and
pop
mov
add
push
push
cli
and
push
fucomi
(bad)
inc
ins
add
cmps
sub
jno
dec
jle
ds
mov
lods
mov
jne
movs
test
add
mov
inc
ins
es
inc
fwait
jns
xor
jns
add
loop
fwait
inc
mov
jne
adc
and
cmp
loopne
ins
inc
mov
cmp
js
cdq
cdq
mov
mov
xchg
mov
les
std
xchg
mov
mov
inc
cmp
xor
fimul
dec
ds
(bad)
cmp
das
cld
jae
push
sbb
push
xor
mov
ins
pop
cli
bound
(bad)
int3
xchg
nop
inc
sub
dec
jae
inc
xor
icebp
adc
adc
mov
and
outs
mov
jg
jae
and
arpl
iret
ror
aam
push
xchg
mov
push
rol
mov
std
cmc
sub
int3
hlt
dec
pop
scas
dec
sub
sub
inc
in
xchg
jno
or
or
mov
pop
mov
shr
mov
xchg
cmp
out
jbe
lds
jmp
fs
adc
and
iret
pop
jae
add
(bad)
and
aaa
loope
popa
popf
push
jne
fisub
and
sbb
out
js
sbb
or
cmp
ins
sbb
add
or
inc
clc
scas
jnp
pushf
scas
inc
mov
das
pop
mov
jo
aad
retf
jo
test
xchg
mov
xchg
js
dec
sub
sbb
shr
cmp
aad
das
inc
mov
fs
int3
je
mov
pop
sub
jmp
cmp
scas
mov
dec
sub
out
mov
in
push
aad
jg
fst
outs
in
ret
sbb
mov
cwde
cmp
jb
sbb
mov
call
cmps
or
mov
push
add
aas
push
or
pop
jg
je
mov
int
cwde
jle
adc
push
iret
(bad)
mov
adc
dec
cmc
fstp
inc
push
pop
retf
mov
dec
aam
mov
ins
in
dec
fstp
fchs
push
push
enter
(bad)
sub
push
clc
and
lahf
jmp
cwde
int3
xor
add
mov
add
(bad)
mov
xor
mov
ror
mov
addr16
mov
or
add
and
add
add
lods
lahf
es
cmp
cmp
jl
pop
sub
jne
sbb
fidiv
cli
movs
mov
xchg
dec
arpl
daa
ins
push
nop
adc
ins
fisubr
xor
mov
jae
jp
xor
jecxz
inc
loop
jmp
mov
mov
into
xchg
scas
xchg
das
sbb
dec
ja
add
in
sbb
dec
aad
shl
mov
or
push
inc
or
aas
dec
test
into
and
push
popf
pop
call
add
add
pop
cmps
cdq
adc
sbb
scas
ins
cld
scas
movs
add
add
mov
push
dec
out
dec
dec
push
loopne
pop
mov
fmul
jno
mov
xchg
sahf
mov
cmp
icebp
adc
dec
push
lods
add
inc
ret
jle
mov
dec
aam
jo
ins
dec
das
sub
push
xlat
pop
jne
push
retf
xchg
lds
loopne
in
jmp
in
sbb
and
int3
lods
adc
sbb
in
mov
cmp
or
es
mov
add
(bad)
mov
ins
jnp
in
clc
xchg
mov
movs
movs
scas
arpl
pop
pushf
aas
aad
lds
sub
retf
shr
popa
stos
cmp
jmp
lock
push
xchg
dec
mov
loope
aaa
pop
jle
mov
iret
jmp
push
mov
ror
outs
aad
jno
jbe
stos
add
cmps
(bad)
(bad)
cmc
xor
cmps
xor
push
aaa
iret
dec
pop
cmp
hlt
cmp
push
sahf
xor
call
and
xchg
mov
in
jnp
inc
jae
xor
shl
int
outs
mov
rcl
and
add
mov
mov
xchg
fiadd
ja
inc
mov
jecxz
iret
inc
push
mov
stos
scas
call
mov
mov
jae
xor
and
jp
and
adc
cmp
arpl
cmps
outs
shl
call
nop
stc
dec
pop
mov
addr16
pop
inc
push
jnp
imul
dec
daa
out
lea
xchg
jg
cmp
scas
retf
std
adc
or
rol
pop
aas
mov
iret
les
pop
je
aas
jmp
mov
push
addr16
mov
and
dec
sbb
fdivp
jae
pop
and
mov
and
in
sbb
shr
nop
xor
les
add
(bad)
mov
cmp
add
outs
cmp
mov
lods
test
jbe
push
not
loopne
fisubr
rcr
inc
and
add
lahf
dec
sbb
mov
cdq
lahf
mov
pop
(bad)
mov
mov
xor
jmp
repnz
enter
lea
ret
stos
lea
xchg
rcr
xor
ja
enter
pop
retf
cmp
les
add
pop
or
test
ins
mov
push
(bad)
(bad)
cmp
pop
inc
adc
outs
and
aas
mov
xchg
aas
xchg
inc
push
sbb
out
rol
mov
mov
xor
add
mov
and
je
inc
jge
jmp
lods
jae
ret
push
mov
repnz
les
inc
jmp
scas
xlat
xchg
dec
mov
(bad)
bnd
push
add
loop
or
sbb
mov
mov
enter
idiv
pusha
ss
in
sbb
mov
dec
xchg
mov
cmp
in
nop
int3
aas
pop
add
and
repz
test
sti
mov
popa
inc
push
xor
or
xchg
xor
pop
cdq
or
call
push
mov
shl
xor
mov
cs
cmps
bound
aaa
xor
shl
test
arpl
pushf
add
xor
mov
loop
jmp
pop
adc
mov
in
lock
jo
sbb
das
mov
scas
jle
inc
iret
mov
or
outs
xor
xor
xchg
xchg
add
add
lds
into
ror
imul
fdivr
loop
or
rep
jo
inc
cld
cld
mov
pop
cld
out
adc
adc
lods
stc
repz
dec
ds
hlt
adc
or
outs
push
std
pop
(bad)
jo
inc
sbb
test
inc
daa
add
ja
mov
sub
repz
add
adc
leave
mov
call
lods
sbb
cmp
xchg
iret
mov
(bad)
rcl
or
mov
(bad)
mov
or
ss
int3
test
lds
fist
lods
mov
iret
dec
into
xor
stos
mov
push
xchg
mov
rol
imul
push
loopne
ret
jmp
retf
fmulp
test
add
cmp
into
push
fld
or
ins
and
add
aad
sub
jbe
in
sahf
jne
sbb
cdq
cdq
mov
mov
mov
data16
add
inc
or
add
inc
ss
sbb
mov
pop
movs
fcomp
mov
test
outs
rcr
das
ins
cmp
lods
or
push
jnp
(bad)
jnp
retf
fsub
movs
mov
mov
das
add
mov
cmp
sar
add
lea
inc
pop
shl
sbb
add
rcl
add
inc
sbb
out
mov
int3
ins
push
sbb
cdq
add
fwait
push
mov
xor
jno
enter
cdq
out
fdiv
mov
imul
out
jne
test
mov
addr16
pop
push
or
iret
test
mov
int3
mov
lock
fist
push
outs
mov
das
jp
cmps
ret
mov
das
adc
scas
sbb
and
add
sbb
sbb
rcr
inc
stos
and
sub
cld
outs
jns
shl
mov
pop
inc
jecxz
neg
addr16
mov
jle
jmp
mov
pause
mov
call
adc
icebp
sti
ins
lds
repnz
fs
pop
mov
xor
sbb
push
les
mov
push
nop
in
repz
cvtps2pi
jne
fs
cwde
pop
loop
mov
fld
mov
dec
pop
add
popa
xchg
push
scas
test
cmp
imul
push
imul
jb
cld
(bad)
movs
sub
clc
cs
aad
jb
push
mov
in
xchg
mov
mov
loop
nop
cmp
or
mov
aad
loop
mov
sub
pop
add
jae
cmp
lea
add
daa
fisttp
jno
cmp
jae
push
(bad)
pop
xchg
loop
or
test
fmul
mov
xor
dec
add
cmp
push
pop
jb
loopne
mov
setb
inc
ins
sbb
xchg
test
fsubr
mov
shl
or
sbb
retf
jp
bound
fidiv
xchg
fcom
mov
sti
(bad)
mov
adc
sub
js
cmp
loopne
push
cmp
gs
cwde
pop
xchg
es
pop
fnstsw
sub
push
or
sub
push
sbb
js
xor
add
mov
outs
mov
xor
mov
data16
adc
xchg
push
and
hlt
jmp
push
and
mov
rcr
imul
inc
sar
dec
mov
fcomp
(bad)
push
sbb
xchg
mov
mov
aas
mov
loopne
retf
mov
pop
mov
outs
sbb
adc
es
pop
fld
pop
in
cli
fisubr
mov
xchg
sbb
push
xchg
loopne
sub
and
or
sbb
jge
mov
and
inc
dec
dec
or
out
inc
cld
cmp
lods
int3
jno
cdq
imul
or
retf
mov
stos
xor
dec
xor
xor
(bad)
jnp
push
inc
mov
mov
pop
push
rcl
lds
test
fcomp
js
out
outs
mov
push
lods
in
mov
div
xor
pop
inc
mov
or
mov
push
ret
fndisi(8087
mov
mov
test
aas
lds
jno
dec
fisttp
inc
ds
cmc
iret
cwde
shl
xlat
outs
xor
jne
push
les
(bad)
adc
pop
aas
xor
mov
bnd
sti
push
rcl
(bad)
cmp
inc
sahf
mov
das
pushf
xor
out
test
in
fcmovbe
sbb
inc
mov
xor
sbb
inc
and
and
(bad)
sub
lods
sti
scas
cmp
jnp
out
dec
fisubr
push
pop
and
add
iret
mov
pop
push
ror
xchg
call
clc
aad
ror
mov
pushf
in
pop
mov
xchg
js
sbb
jo
add
push
fimul
jmp
in
iret
sbb
push
cwde
jge
dec
dec
push
and
fst
mov
xchg
pusha
in
lods
enter
sub
cmp
xor
in
cmps
je
pop
sbb
(bad)
and
dec
mov
xchg
cmc
sti
jp
push
test
cs
pop
(bad)
int3
inc
bound
aad
ins
mov
or
movs
jge
rcr
mov
xor
test
jp
lds
or
mov
and
ror
ss
gs
mov
add
dec
or
push
(bad)
push
cdq
lock
or
xor
jbe
jno
jne
into
xlat
scas
dec
repnz
pop
push
cmp
mov
repnz
ds
stos
fwait
jns
xor
in
pop
arpl
scas
inc
inc
loop
jge
fistp
shl
push
pushf
adc
dec
push
dec
mov
(bad)
or
xor
stos
cmps
or
pushf
push
scas
and
mov
cmp
pop
out
sar
cmc
cmp
lea
ja
retf
add
jne
cmp
jns
and
xchg
leave
mov
pop
mov
push
clc
inc
movs
adc
xlat
loope
dec
inc
sub
dec
mov
imul
dec
inc
inc
cmps
or
cli
inc
(bad)
lods
test
lods
arpl
(bad)
lds
sub
adc
rcl
cmps
daa
loop
outs
push
pop
in
jne
scas
ja
ret
inc
inc
je
lods
iret
arpl
add
mov
sub
sub
jl
mov
fild
jge
xchg
jmp
fisub
movs
mov
inc
dec
xchg
fmul
pop
add
add
in
div
push
or
fsubr
pop
xor
out
push
in
xchg
shl
mov
(bad)
(bad)
stc
push
aas
push
push
xor
adc
cmp
mov
in
popf
pop
mul
xchg
add
inc
xchg
addr16
jmp
call
jno
adc
movs
jle
stos
mov
sbb
retf
jbe
push
call
sti
push
cmp
adc
xlat
aam
(bad)
lds
cs
test
movs
movs
repz
jle
add
ficom
outs
inc
jle
es
sub
dec
push
xchg
in
lods
loopne
lods
(bad)
jns
movs
loop
std
adc
pop
xchg
sbb
retfw
fisubr
div
loope
dec
int3
sub
xor
push
xor
or
inc
cli
rcr
mov
jnp
mul
js
mov
ss
dec
je
lods
mov
movs
stc
and
and
xchg
test
or
jle
jb
ficomp
or
mov
(bad)
gs
imul
xor
test
jmp
sub
jbe
(bad)
aaa
mov
xlat
or
shl
bound
mov
(bad)
sahf
(bad)
bound
arpl
ss
sbb
adc
imul
sti
pushf
pop
push
outs
outs
fstp
push
pop
sbb
cmp
adc
push
sub
icebp
icebp
daa
cdq
mov
pop
add
je
(bad)
mov
fsubr
dec
pop
mov
js
pop
xor
cmps
mov
sub
sbb
xor
cmp
dec
pop
dec
lods
ret
stos
push
movs
dec
xor
pop
rol
or
fiadd
cmp
hlt
or
cwde
bound
cwde
loopne
jae
pop
or
rcl
adc
inc
js
jb
loopne
pop
push
mov
ret
bnd
mov
cmp
mov
xor
dec
mov
and
adc
inc
jb
add
outs
jp
retf
gs
retf
out
xchg
mov
or
hlt
std
mov
push
into
add
shr
cli
mov
scas
jmp
cmp
dec
and
test
xor
dec
cmp
pop
adc
ret
inc
mov
(bad)
test
xor
jbe
push
xchg
fstp
mov
stos
sub
push
mov
inc
and
call
push
adc
dec
xchg
mov
outs
outs
xchg
jae
cmp
add
call
sub
stc
sar
retf
out
push
out
retf
fnsave
scas
movs
jmp
(bad)
out
iret
and
ins
mov
and
(bad)
(bad)
jo
mov
xchg
sub
mov
cdq
cmp
xchg
cs
icebp
jge
cwde
add
sbb
add
sbb
fdiv
scas
dec
and
outs
in
test
idiv
fild
ins
mov
ret
nop
pop
adc
cmp
pop
sub
pop
mov
shl
and
dec
popa
push
dec
mov
fwait
popf
lods
xor
push
pop
dec
xor
push
ficomp
mov
fcomp
add
jle
push
jbe
mov
cdq
mov
sbb
and
(bad)
cmc
es
jl
(bad)
loope
movs
(bad)
mov
pop
test
mov
xor
sub
loopne
inc
cmc
mov
icebp
jbe
sbb
in
mov
and
inc
jge
in
push
lahf
jo
mov
imul
sbb
ficom
mov
imul
aam
mov
lods
sub
cmps
lahf
cmp
push
rol
psubsw
clc
push
test
sbb
cld
cwde
xrelease
repz
icebp
mov
clc
sti
xchg
add
xor
xchg
test
sub
inc
adc
push
jbe
xor
outs
ret
lds
ret
ror
jmp
sub
out
aam
sar
pop
xchg
or
aad
retf
aad
ficomp
xlat
ret
ret
and
mov
pusha
loope
ror
mov
lods
xor
push
loope
hlt
pop
mov
and
fs
pop
js
jae
mov
test
std
(bad)
(bad)
inc
jp
push
or
push
inc
cmc
test
retf
dec
cmovbe
sar
mov
pop
mov
out
outs
xor
mov
ja
sub
call
sahf
dec
sbb
call
mov
jmp
push
repz
cmp
call
adc
dec
loop
sbb
mov
ja
xchg
mov
add
push
in
(bad)
cmps
jne
je
cmc
mov
jle
mov
add
dec
xor
push
xlat
dec
jno
(bad)
jecxz
pop
dec
(bad)
pop
daa
call
fisttp
jg
popa
ss
and
addr16
call
mov
pop
dec
adc
mov
pop
adc
or
adc
popf
lds
outs
cmp
popf
cmp
adc
shr
es
icebp
xchg
or
inc
fldpi
push
or
ins
mov
into
pushf
jmp
add
sti
add
dec
pop
xchg
imul
cmps
mov
mov
cmp
fcmovnu
mov
dec
lea
lock
out
fs
add
aam
inc
jo
push
jp
call
fs
xchg
movs
mov
xchg
inc
cmc
cmp
mov
fld
mov
sahf
aam
(bad)
cmovo
or
pop
jb
test
jp
mov
jge
sub
pop
loope
outs
sbb
aad
or
dec
and
cmps
dec
frstor
push
shr
pop
ret
loopne
jp
in
pop
das
jle
out
dec
xor
fild
int3
rcl
dec
int3
jmp
sahf
jnp
daa
out
sub
dec
push
jmp
inc
stos
inc
in
push
sub
in
cmp
lods
adc
ret
and
stc
pushf
mov
dec
sti
or
jp
jae
xor
push
sbb
jmp
lahf
(bad)
or
arpl
ficomp
jne
jmp
test
push
jge
cdq
cmp
mov
ins
push
aas
test
xor
pop
call
add
push
xchg
sahf
into
jp
add
or
ds
mov
bound
mov
cmp
inc
fstp
fdivrp
sahf
mov
inc
mov
xchg
cmp
mov
fisttp
add
call
and
dec
movs
and
ins
enter
xor
repz
lds
cmp
push
mov
outs
stos
adc
pop
cmps
dec
rol
stos
bound
iret
cwde
xchg
imul
add
push
pop
dec
sub
loope
rcr
push
or
cmp
loopne
jge
pop
cdq
and
cmc
lds
cmp
dec
mov
sti
fs
xchg
dec
jge
fsubr
iret
and
cmp
int3
cmp
push
mov
jle
pop
sahf
add
fist
pop
loope
mov
stos
arpl
cmps
jae
(bad)
(bad)
dec
shr
stos
mov
ret
rcl
ret
add
popf
call
outs
and
dec
jmp
pop
xor
dec
push
outs
enter
jmp
xchg
xchg
jae
push
in
jg
sbb
(bad)
scas
js
xchg
test
cs
mul
sub
mov
jecxz
push
xchg
dec
pop
mov
dec
outs
xchg
pop
jns
add
pop
int3
cmp
pusha
cmp
lea
repz
test
mov
inc
sub
(bad)
scas
inc
mov
imul
cmp
xchg
mov
stc
add
in
xchg
iret
mov
xchg
dec
pop
cdq
mov
add
dec
sub
fucom
loop
sti
and
sbb
retf
or
pop
sbb
aaa
in
and
and
loop
stc
add
ins
push
mov
push
and
xchg
xor
ds
xchg
das
add
addr16
mov
rcr
not
jbe
popa
cwde
dec
lock
jbe
aaa
cmps
push
xor
mov
push
adc
std
mov
and
stc
sub
inc
mov
aaa
daa
cs
js
popa
push
add
and
and
jo
lods
mov
jge
test
shr
cdq
out
pop
scas
or
inc
imul
imul
je
loop
inc
jmp
jmp
mov
push
mul
mov
mov
cmps
fwait
mov
or
pop
out
jmp
(bad)
jmp
mov
pushf
sub
dec
sbb
in
mov
hlt
jne
sbb
fld
(bad)
test
aam
aad
mov
fst
inc
xor
pop
aaa
or
push
sbb
es
sbb
sub
ror
jb
pop
sub
cmp
jge
pop
push
sub
add
mov
ficom
jge
xor
pop
test
movs
(bad)
fcomp
xchg
mov
ins
push
shl
xchg
add
push
hlt
or
popf
ficom
sbb
xor
int3
sbb
mov
lods
and
add
mov
sbb
(bad)
push
adc
jne
adc
pop
cmc
scas
adc
jmp
cdq
dec
mov
xlat
adc
pop
rcr
fdiv
clc
ins
scas
mov
shr
dec
push
out
sbb
mov
cmp
jmpw
sahf
sub
jns
rcl
js
mov
int
outs
enter
sbb
adc
dec
cmp
pushf
mov
lock
push
and
cmp
mov
outs
rcr
std
test
in
sahf
bound
sti
packssdw
add
scas
clc
dec
or
mov
sub
inc
mov
inc
aaa
enter
shl
pop
or
scas
test
dec
sbb
mov
xchg
pop
xchg
mov
jmp
inc
mov
adc
ja
xor
jne
dec
adc
pop
inc
scas
push
dec
inc
jns
js
jbe
jmp
xchg
dec
pop
dec
and
shl
pop
aaa
xor
dec
rcr
adc
test
cmp
inc
out
pop
lods
popf
mov
in
adc
neg
in
and
pop
and
and
cld
jg
je
out
lods
sahf
xchg
arpl
inc
pop
outs
pop
xchg
shl
adc
pop
inc
cmc
and
mov
pop
movs
mov
add
add
push
rol
retf
test
sub
outs
data16
cmp
in
or
ret
xchg
in
xchg
jp
sahf
retf
js
(bad)
jmp
push
mov
cmp
lods
repz
xor
ret
cmp
js
icebp
inc
inc
out
push
or
scas
mov
leave
div
jmp
push
fimul
sub
les
imul
ret
push
adc
mov
(bad)
daa
mov
xor
inc
pusha
bound
mov
mov
ficom
xchg
push
mov
inc
cmp
pusha
dec
sub
imul
mov
sub
mov
int
std
mov
sbb
icebp
xor
sub
inc
leave
sbb
push
mov
loopne
hlt
stos
cmp
enter
pop
pop
mov
or
std
cmp
jb
dec
fiadd
xchg
vpmacswd
xchg
jl
les
sub
and
call
data16
push
push
add
(bad)
mov
mov
cwde
(bad)
fs
jge
xor
aad
inc
xchg
mov
sbb
call
in
mov
or
or
jl
les
test
push
mov
mov
xchg
xchg
scas
or
or
cmps
les
xlat
sub
and
lods
js
retf
ja
and
jp
imul
pop
(bad)
push
inc
or
iret
add
adc
xchg
repnz
sbb
mov
cwde
ja
push
dec
js
mov
sbb
retf
repz
jno
inc
and
push
push
gs
ja
mov
retf
dec
inc
and
mul
pop
fcomp
fwait
push
int3
aas
aaa
iret
add
xor
sbb
shr
pop
cmp
or
push
scas
and
add
cmp
and
mov
mov
shl
adc
mov
out
mov
fcomp
adc
leave
xor
push
jno
push
(bad)
push
fistp
push
(bad)
shl
mov
ds
cmp
pop
pop
jbe
call
jmp
test
mov
dec
push
loopne
out
ret
ror
jae
leave
and
mov
ds
cmp
cmp
ret
inc
mov
fcomp
jmp
sbb
or
leave
jmp
pusha
(bad)
cmp
in
dec
xor
call
repnz
sti
add
add
mov
fwait
pusha
inc
fldcw
test
fcmovb
pop
xor
scas
(bad)
gs
in
std
xchg
xor
loope
add
pop
mov
cwde
or
mov
stc
pusha
push
rcr
int3
rcr
xor
and
dec
leave
add
mov
mov
xchg
lock
lea
mov
nop
xchg
sbb
xchg
test
leave
loope
mov
cmps
mov
inc
cwde
adc
imul
(bad)
sbb
jb
lea
jmp
inc
inc
imul
cmp
jl
repnz
dec
fstp
jnp
popf
push
aam
fs
xchg
inc
sbb
jmp
ins
frstor
mov
inc
sub
sar
xor
mov
or
inc
sahf
mov
adc
stos
or
repnz
add
adc
cmps
lahf
mov
jge
fs
pushf
je
push
ss
ins
in
xchg
mov
cmp
outs
pop
push
jl
les
or
ret
loop
adc
jae
sub
push
rcl
jno
lahf
jecxz
push
adc
dec
sub
test
shl
push
push
fcomp
ret
jp
ficomp
jae
nop
sbb
inc
and
push
lds
ja
std
mov
nop
pop
inc
fnstcw
add
das
ret
mov
enter
das
es
jecxz
add
aas
xchg
scas
mov
inc
mov
and
adc
mov
adc
xor
repz
push
mov
lahf
aas
pusha
popf
mov
sbb
push
mov
scas
jle
sahf
mov
cwde
enter
fcom
rcr
cmc
addr16
movs
popf
outs
jne
xchg
dec
mov
xor
fcmovnbe
stos
scas
ins
or
mov
or
dec
call
inc
push
jns
lods
jae
push
xchg
ins
es
pushf
jle
mov
mov
sub
xchg
mov
adc
idiv
mov
cmp
push
fnclex
sub
aam
jmp
sub
pop
push
sub
jmp
dec
(bad)
push
retf
js
mov
push
inc
fbstp
popf
jb
xor
pop
inc
cld
fild
jae
hlt
xchg
(bad)
daa
add
pop
push
adc
(bad)
movs
icebp
push
sub
(bad)
adc
out
cld
pop
push
mov
inc
pusha
outs
stc
nop
(bad)
mov
push
test
test
das
xchg
mov
sub
inc
jg
mov
mov
mov
lea
in
inc
jno
movs
sti
mov
cmp
and
stc
or
popa
cmp
sar
pop
cs
or
ja
adc
(bad)
rcl
xor
loop
push
pop
sub
jl
jl
mov
or
(bad)
xchg
dec
imul
lods
add
or
xor
and
add
dec
sub
test
jne
cs
fdivrp
push
cs
pop
push
sub
and
int3
ja
mov
jmp
fist
inc
cmp
gs
dec
test
and
xchg
xor
jmp
inc
mov
retf
sti
ds
stos
pop
pop
inc
aaa
sbb
jo
sahf
xchg
push
lods
add
jno
(bad)
call
nop
xor
ss
ret
pusha
mov
out
nop
mov
xchg
cmp
sbb
popf
push
sbb
ja
bound
add
jnp
jns
pop
(bad)
or
call
mov
mov
inc
mov
adc
xchg
idiv
mov
stos
fucompp
push
rol
mov
icebp
and
dec
out
mov
repz
cdq
dec
inc
(bad)
xor
aaa
jb
push
mov
out
mov
push
inc
push
xor
jne
sub
mov
and
loope
loop
jae
cmp
and
enter
mov
adc
rcl
in
lods
jmp
popf
pop
lods
push
pop
(bad)
and
sbb
cmps
(bad)
dec
imul
add
push
mov
loope
out
scas
jge
movs
nop
hlt
(bad)
fisubr
imul
int3
test
cdq
jne
out
pop
xchg
sti
dec
(bad)
leave
pusha
cdq
test
outs
adc
das
sub
gs
std
scas
test
out
mov
jo
aas
push
mov
fnstenv
xchg
mov
sti
dec
pop
cld
clc
(bad)
jecxz
jno
inc
sbb
nop
(bad)
imul
(bad)
mov
mov
out
add
dec
jge
inc
adc
and
xlat
stos
adc
pop
adc
mov
sbb
xchg
shr
(bad)
cmps
add
xchg
xor
sub
(bad)
xchg
daa
dec
adc
jge
std
rcr
mov
inc
movs
jne
add
hlt
scas
mov
pop
cmp
addr16
push
xchg
cwde
jae
jns
mov
xor
out
rol
inc
and
je
ss
mov
aam
pop
inc
or
jnp
gs
out
sar
enter
pop
test
or
ror
mov
rcr
in
retf
data16
mov
int
vpsrad
sub
fptan
inc
pop
cmc
cli
shl
pop
push
fs
push
ds
dec
call
xor
ret
std
or
ins
inc
add
pushf
cmps
or
sbb
pop
push
pop
rcr
nop
mov
push
fsubp
rsm
pop
xchg
fwait
jns
or
rcr
push
dec
xor
ss
lods
call
xchg
enter
outs
xchg
push
retf
movs
jno
in
cwde
jae
pop
bound
stos
movs
xchg
sbb
jb
fisub
push
fnsave
mov
pop
(bad)
fcmovnu
pop
add
mov
jno
fistp
fsubr
dec
inc
shl
inc
std
cdq
retf
or
icebp
mov
inc
les
add
xor
outs
mov
push
mov
leave
sbb
pop
aam
dec
sbb
xchg
pop
sub
ror
or
mov
and
test
imul
or
stos
aad
mov
xor
jecxz
xchg
bound
mov
inc
scas
mov
fistp
rcl
adc
xchg
inc
jecxz
mov
jb
jns
xchg
ins
sub
fdivr
dec
mov
inc
dec
add
or
mov
scas
sbb
mov
mov
rol
repnz
or
or
or
ja
inc
or
push
sub
ins
clc
scas
bound
dec
mov
out
pop
adc
and
xor
popf
jecxz
pop
mov
sub
movs
stos
push
(bad)
rol
inc
aas
je
mov
das
push
bound
daa
and
icebp
popf
mov
xor
inc
jae
or
sub
pusha
sbb
test
adc
gs
xlat
sub
add
movs
(bad)
cmp
sub
test
dec
retf
mov
mov
movs
rcl
jge
and
sub
sbb
pop
cmps
sbb
retf
sbb
imul
pop
call
mov
xor
mov
jne
pop
push
stc
in
mov
jl
out
test
pop
jge
add
test
adc
add
sbb
jmp
xchg
dec
add
jbe
js
je
into
stos
xlat
arpl
or
jo
pop
scas
retf
mov
jl
pushf
les
nop
pop
js
ror
ja
xchg
cs
mov
cmps
not
outs
sbb
(bad)
mov
outs
(bad)
out
hlt
ret
es
mov
ins
xor
cmp
xlat
adc
inc
or
and
xor
mov
aas
xor
cli
cmp
xor
bound
xchg
inc
xchg
jl
mov
pop
mov
fcomp
xchg
add
cmps
pop
mov
cmp
jl
imul
sub
std
sub
and
and
dec
push
sub
scas
adc
movs
jno
sbb
mov
shl
or
div
xchg
and
repnz
test
sbb
or
call
ss
jno
out
ds
dec
lahf
xlat
xchg
mov
add
mov
sbb
fadd
add
or
das
push
std
test
rcl
std
imul
int
mov
and
xor
cmp
mov
jne
dec
(bad)
popa
pop
(bad)
cs
mov
sbb
bound
cmps
sub
lea
sti
xor
mov
leave
push
ret
pop
mov
sbb
adc
aaa
fdivr
dec
mov
(bad)
mov
mov
sbb
inc
bound
scas
or
ja
jne
rcr
imul
fs
fmul
push
add
clc
mov
fiadd
xor
jae
xor
pop
add
inc
mov
xlat
mov
mov
sbb
int
jo
xor
lods
ret
ret
fild
aaa
ret
stos
outs
(bad)
in
cli
fwait
sahf
and
push
je
icebp
xchg
add
adc
shl
jo
out
xchg
cmps
ds
push
push
lock
xlat
leave
adc
sub
inc
xor
pusha
(bad)
xor
sahf
lds
sbb
push
mov
in
jmp
stc
pop
adc
cmp
add
fs
adc
aaa
lahf
xor
jbe
ins
pop
push
ds
and
cmp
push
push
pop
inc
mov
mov
hlt
inc
sub
dec
fdiv
retf
cdq
pop
ins
mov
ret
lea
push
daa
pop
repnz
pop
ins
mov
lods
mov
mov
das
jl
adc
and
test
rcr
gs
and
mov
xor
mov
outs
cwde
gs
jecxz
jno
jns
mov
sub
pop
cs
mov
sbb
sub
or
or
xchg
je
cmp
or
sbb
dec
bnd
mov
shl
and
xor
je
fcomp
test
adc
dec
or
mov
loopne
je
(bad)
sar
cdq
mov
outs
mov
xor
scas
jl
cmp
js
cmps
mov
xlat
mov
in
sub
jge
popf
jno
scas
pop
mov
jnp
addr16
in
inc
pop
(bad)
loop
mov
dec
(bad)
xchg
(bad)
jmp
pop
dec
push
cld
(bad)
fwait
lods
out
adc
in
stc
xchg
movs
mov
or
(bad)
adc
outs
pusha
imul
outs
ret
xor
xchg
jb
mov
ret
rcr
gs
mov
test
int
ret
popf
das
xchg
lods
rcr
popa
call
loopne
jno
jg
mov
and
pop
cld
lods
add
xchg
mov
inc
add
sub
jge
daa
outs
rol
xchg
jns
ror
stos
imul
xchg
lahf
idiv
push
mov
mov
pop
imul
push
jl
fwait
clc
imul
int
add
int3
jecxz
in
add
icebp
mov
(bad)
icebp
jecxz
mov
mov
or
je
push
outs
fisttp
mov
jmp
outs
mov
pop
inc
jno
push
mov
cmp
test
xchg
leave
std
jge
sub
aas
xor
and
mov
aas
int3
xchg
(bad)
fwait
dec
pusha
not
add
fcomp
mov
nop
mov
aad
push
pop
adc
js
aad
ins
jecxz
(bad)
xchg
not
and
dec
push
push
test
fwait
stos
cmp
add
popa
popa
push
les
cli
mov
test
sbb
jbe
mov
aas
arpl
mov
arpl
push
ss
jmp
fidivr
in
retf
xchg
mov
jne
and
cmc
in
sahf
pop
cmp
mov
fdivr
jmp
push
shl
or
pop
sub
sub
add
sti
lods
add
std
hlt
in
(bad)
mov
cmc
frstor
fbstp
cli
imul
jne
aam
and
jne
lahf
or
or
enter
dec
jle
push
sub
in
xchg
mov
bound
(bad)
sub
sbb
js
xchg
pusha
and
rol
mov
shl
pop
cmps
scas
repnz
outs
or
arpl
je
adc
jp
pushf
inc
and
lahf
or
popa
gs
lods
popa
hlt
adc
outs
stos
fsubr
mov
inc
push
and
jb
sbb
out
pusha
cmp
fnsave
adc
and
sbb
popf
cmps
ret
mov
(bad)
adc
mov
shr
mov
jp
inc
push
or
lods
(bad)
in
jae
ret
pop
mov
sub
aad
and
(bad)
xchg
sub
push
rcr
nop
out
jne
stos
(bad)
xor
mul
mov
dec
cmp
xor
pushf
jl
mov
add
mov
cmc
(bad)
mov
xor
cmp
dec
xchg
frstor
pop
push
pop
out
imul
fmul
push
dec
mov
fidiv
aaa
mov
push
fiadd
sub
mov
js
push
cmc
push
iret
mul
mov
pusha
adc
pop
and
mov
jmp
leave
outs
dec
rcl
(bad)
lock
int3
xchg
movs
in
cmp
push
inc
out
pop
pminsw
and
test
sbb
push
xchg
pop
xor
call
iret
outs
sbb
jae
mov
repz
and
inc
aad
inc
jp
shl
(bad)
scas
jae
jg
repz
aam
jmp
mov
nop
(bad)
clc
ror
jp
cmp
sbb
out
ds
jno
dec
cwde
xlat
push
and
adc
js
dec
sbb
push
mov
ja
xchg
pushf
jmp
jg
inc
pop
cli
adc
bound
mov
test
fadd
dec
gs
jnp
cdq
xchg
mov
adc
inc
adc
or
mov
push
pop
mov
add
loope
mov
jmp
jp
pushf
jno
loopne
out
fsub
dec
xor
dec
out
int
fimul
mov
aam
loopne
ja
push
adc
sti
cs
pop
push
jp
push
popf
aam
aaa
int3
cld
pushf
sub
jg
outs
pop
repz
adc
adc
mov
mov
jl
xchg
dec
stos
je
push
and
mov
cmp
aad
loope
or
xor
es
mov
je
xor
in
and
clc
clc
aaa
xor
sub
addr16
cmp
jecxz
xor
add
jge
lds
pusha
pop
popf
sub
inc
out
or
neg
movs
xlat
xor
push
lahf
fstp
dec
data16
push
adc
js
rcr
addr16
sub
ror
mov
push
mov
inc
xchg
or
cmps
mov
sbb
and
or
cmp
mov
or
outs
adc
adc
and
xor
push
test
inc
cmps
ret
pop
mov
fwait
jg
das
pop
aad
jg
repnz
call
(bad)
or
loope
fsubr
popf
ret
dec
sub
test
rol
adc
imul
xor
jne
(bad)
push
cmps
dec
outs
jns
mov
dec
add
jle
adc
popa
retf
xchg
aad
in
sub
push
push
sahf
push
test
dec
xor
imul
mov
sub
dec
stos
sti
fwait
xchg
ins
push
loopne
fild
xchg
repz
test
movs
fmul
mov
prefetch
out
jns
jbe
cld
jns
cmp
sbb
pop
stos
retf
ficom
dec
(bad)
out
jae
xor
push
cmp
add
push
(bad)
adc
jns
xor
pop
aaa
inc
iret
jo
pusha
in
and
sbb
mov
adc
(bad)
cmc
push
popf
cmps
pusha
mov
mov
push
sub
cdq
aam
scas
pop
push
xchg
sub
inc
pop
inc
mov
adc
cmps
mov
ins
pusha
fwait
and
xchg
mov
inc
in
(bad)
leave
fwait
xor
stos
fdiv
rcr
xor
or
shl
jp
daa
out
adc
lock
ret
xor
(bad)
mov
retf
js
es
bound
pop
repz
hlt
inc
imul
scas
jge
in
pop
mov
out
loope
js
sahf
popf
mov
mov
jne
call
aas
fs
cld
retf
sti
pop
hlt
dec
inc
sar
(bad)
in
fisttp
das
sbb
dec
mov
xchg
xlat
adc
add
mov
gs
aaa
adc
mov
fist
pop
push
repnz
mov
js
out
stos
(bad)
mov
dec
repnz
iret
icebp
inc
add
scas
rcr
leave
adc
shl
cmp
sar
mov
call
dec
pop
jno
addr16
fst
addr16
push
mul
jp
jns
jecxz
aam
(bad)
icebp
je
add
and
add
fsub
fistp
dec
xor
push
mov
into
jg
xchg
sub
rcr
add
cmp
mov
popa
sub
mov
rcr
xchg
scas
not
out
sti
and
test
dec
mov
cmp
sti
adc
cmps
adc
movs
jmp
inc
loop
and
stos
pop
xor
movs
cmps
fwait
xor
mov
cmp
mov
nop
std
pop
xchg
bound
xlat
pop
inc
or
call
stos
ss
pop
jb
pop
frstor
in
mov
xor
fadd
jb
mov
xor
sbb
in
xor
pop
push
push
xchg
repnz
ins
add
mov
stos
xchg
adc
push
cmp
mov
into
cs
cs
nop
xchg
bound
fcmove
scas
sub
in
icebp
in
mov
test
pop
jmp
and
mov
xor
and
cmp
cmp
inc
out
fcom
sbb
or
push
push
and
pop
daa
mov
inc
push
mov
aam
stos
fidivr
jle
xor
cwde
stos
or
in
fstp
xor
xor
add
ret
nop
in
ins
cmp
call
mov
dec
lock
rcl
(bad)
mov
loop
xchg
inc
(bad)
push
call
and
lahf
aas
mov
sub
mov
dec
aas
dec
sub
xchg
fiadd
xchg
movs
jmp
aaa
pop
mov
sub
clc
mov
test
mov
out
aas
ja
test
fcmove
inc
out
nop
popf
cmps
data16
leave
mov
jge
ins
push
sti
scas
dec
out
enter
inc
xor
jp
xor
test
dec
fnstsw
jno
loope
sub
paddw
into
movs
or
outs
xchg
inc
(bad)
cmps
lea
pop
adc
rol
jno
scas
fisttp
jmp
(bad)
xor
fldenv
shl
sub
add
test
popf
mov
nop
(bad)
test
sub
pop
cmp
ss
push
ins
jp
call
cmp
test
sbb
adc
push
push
stc
in
das
jl
jle
loope
clc
rcl
lods
cs
(bad)
jns
shl
push
in
xchg
push
xor
gs
mov
cmc
adc
push
das
daa
push
or
fs
fwait
loop
or
dec
lods
nop
mov
jecxz
ss
cs
inc
stos
and
add
fdivr
and
mov
sub
push
push
dec
mov
adc
sub
(bad)
pop
call
add
xor
pop
push
pushf
data16
stos
mov
lods
div
scas
xchg
test
mov
and
mov
in
adc
mov
repz
push
or
xchg
sbb
call
add
cmps
leave
not
xchg
adc
mov
out
dec
rcr
or
stc
aad
add
retf
je
mov
call
fistp
jl
mov
push
pop
nop
ins
popw
pop
jg
mov
(bad)
mov
test
xchg
push
jns
test
xlat
lea
mov
xor
adc
xchg
cdq
sbb
jmp
and
in
fisub
dec
jg
lock
mov
imul
mov
mov
and
or
push
clc
jo
cli
int3
cmp
pusha
inc
outs
sbb
into
sbb
fisubr
xlat
push
mov
sbb
and
sti
ja
xor
add
xor
jmp
and
enter
cmp
test
push
cdq
retf
cmp
sbb
cmps
fmul
out
sub
sub
xor
test
lahf
push
jg
cld
les
jle
mov
jmp
ins
imul
(bad)
lea
in
cmp
inc
mov
mov
jmp
in
jg
sbb
dec
stc
add
call
push
mov
cs
pop
out
xor
or
stc
push
mov
(bad)
push
pop
mov
push
push
daa
fcomi
mov
mov
inc
in
fcmovnbe
ins
adc
xchg
push
mov
lds
mov
pop
in
ins
add
cmp
sub
push
retf
neg
dec
xor
cmps
and
test
cs
cmp
inc
lds
cmp
jecxz
mov
(bad)
mov
into
ja
ffree
lock
leave
push
xchg
call
mov
dec
cmp
in
xchg
mov
push
cmp
popa
jbe
xchg
adc
arpl
sbb
je
(bad)
leave
movs
xchg
shr
pop
adc
dec
push
jbe
int3
jge
shr
or
adc
dec
xchg
sub
dec
sub
push
sar
lea
loope
push
(bad)
mov
retf
movs
lea
dec
repz
imul
imul
aad
inc
pop
aaa
call
nop
sbb
pop
inc
xlat
or
xchg
popa
push
dec
add
das
loop
jge
je
and
movs
jbe
add
mov
cmp
xor
mov
int
jae
gs
ret
jbe
mov
inc
mov
pop
iret
or
xchg
xlat
push
(bad)
ret
lods
aas
sbb
mov
aad
mov
dec
jp
xchg
ins
and
mov
das
rol
add
out
mov
cmp
outs
(bad)
ja
ret
jbe
(bad)
lahf
cmps
sar
mov
jo
inc
add
popf
icebp
(bad)
cli
jbe
enter
or
invd
fimul
out
enter
and
test
jg
push
sub
xchg
call
inc
fwait
sub
retf
and
leave
xchg
xor
dec
sahf
pop
and
push
repz
sbb
pop
inc
or
dec
lds
in
cmp
or
call
sbb
add
mov
stos
add
movs
inc
mov
sbb
xor
rol
mov
jge
repnz
(bad)
xchg
fnstcw
pop
push
int
cmp
stos
sti
and
outs
stos
mov
lahf
aam
push
pcmpeqd
adc
push
(bad)
dec
call
movs
xor
scas
fisttp
sbb
push
out
std
cmp
repz
push
xchg
inc
inc
ins
cdq
xor
not
sbb
outs
(bad)
in
shr
inc
xchg
xchg
cld
ins
inc
cld
pop
iret
das
sub
pusha
xor
imul
add
movs
inc
adc
or
and
sub
jae
jmp
inc
mov
in
or
push
cld
sar
mov
adc
push
aam
mov
cmp
popf
arpl
pop
popa
test
fistp
xor
xchg
adc
retf
outs
jo
lea
out
or
and
mov
ret
test
sub
div
repnz
out
add
dec
cmp
outs
jmp
in
call
arpl
ja
outs
mov
push
loope
ins
aad
or
stos
test
and
inc
xchg
loope
popa
xor
sbb
sub
mov
mov
xchg
jns
dec
fdivr
jnp
cmp
pop
push
dec
mov
bound
jne
outs
test
imul
sub
push
mov
shl
lods
hlt
dec
aaa
lock
jae
mov
xor
mov
mov
mov
cs
ds
movs
xchg
cwde
repz
imul
(bad)
popf
sbb
ret
sub
and
stos
or
xor
movs
cmps
ret
in
add
pop
neg
lods
xchg
mov
sar
cdq
jge
mov
call
or
retf
and
xchg
clc
ins
sub
lods
lods
shl
xchg
xchg
jae
imul
mov
enter
jbe
repnz
jb
xchg
add
pop
sub
jecxz
mov
(bad)
mov
mov
outs
(bad)
int
ds
aad
mov
cs
cmp
xchg
pop
fwait
sub
mov
mov
in
(bad)
int
push
popf
cmps
aaa
es
js
sbb
cmp
and
ror
aad
in
xor
add
xchg
jns
inc
aas
movs
gs
nop
push
std
adc
push
outs
js
sbb
dec
mov
mov
fcmove
jno
ror
pop
or
dec
pop
(bad)
and
push
mov
sub
scas
cmp
stos
cmp
pop
sub
adc
mov
(bad)
mov
cmp
pop
sbb
sub
xchg
push
into
mov
pop
push
in
aaa
adc
inc
xor
stos
outs
mov
pop
push
fidivr
iret
in
retf
xor
jg
leave
sbb
dec
mov
adc
mov
dec
mov
aaa
jecxz
pop
push
ins
stos
rcl
gs
sub
icebp
jo
int
in
xchg
jmp
ss
mov
and
movs
add
or
fsub
dec
sbb
pop
enter
dec
aad
lods
add
pop
jp
mov
icebp
xchg
sbb
xchg
cmp
mov
sub
add
pop
(bad)
jle
repz
adc
hlt
pop
lds
lea
push
push
cwde
shl
or
add
sub
mov
(bad)
mov
add
ds
in
jne
xchg
mov
xorps
ret
clc
inc
mov
rep
shr
enter
loope
push
pop
sar
push
mov
ins
ffreep
jle
mov
icebp
mov
loop
in
pop
ja
not
pushf
dec
sub
dec
mov
cmp
inc
dec
push
add
(bad)
fnstsw
jo
ffreep
push
cwde
pop
loopne
push
pushf
pop
mov
lahf
inc
(bad)
(bad)
(bad)
(bad)
xchg
sbb
pop
(bad)
or
rcr
sbb
lds
rcl
push
xchg
add
ret
shr
mov
int3
test
xchg
lock
imul
cli
xchg
mov
xchg
in
call
arpl
jg
jne
xchg
or
sub
mov
or
pop
test
dec
push
push
pop
dec
icebp
jo
or
mov
jns
sbb
jle
movs
mov
(bad)
push
xchg
or
test
jbe
mov
jbe
mov
inc
push
inc
push
call
mov
not
data16
xor
retf
xchg
js
cld
add
dec
iret
outs
fsubr
ins
(bad)
mov
push
test
shl
mov
and
je
ss
pop
inc
das
out
call
mov
push
jns
aam
cmps
pop
in
loop
fld
fcom
cwde
scas
mov
dec
or
hlt
add
cmp
sub
and
mov
pop
hlt
fstp
not
test
nop
push
test
sbb
mov
call
(bad)
shr
mov
mov
daa
jne
mov
loop
ins
fld
enter
aas
(bad)
mov
sti
ins
pushf
lods
daa
push
cmp
add
dec
(bad)
jle
mov
add
and
pop
popf
cmps
sbb
aam
lods
xor
mov
push
push
inc
pop
jb
cmp
(bad)
push
and
ins
ds
sbb
adc
xchg
push
jge
in
fiadd
xor
icebp
mov
gs
and
inc
xor
add
and
push
movs
and
or
rcr
addr16
mov
fdivr
shl
mov
into
test
jp
ret
mov
aad
cs
mov
call
dec
fistp
xchg
xor
cdq
imul
int3
aad
push
aaa
imul
loope
cmp
rcl
jmp
mov
in
scas
jle
mov
fidivr
ja
(bad)
mul
mov
jmp
enter
inc
xchg
out
xchg
je
cwde
fist
ret
pop
xchg
scas
jns
jl
fpatan
or
mov
ret
jl
add
cs
or
loope
popf
push
xchg
aad
enter
sbb
mov
jne
aas
xchg
sahf
mov
shr
pop
dec
xor
mov
pop
fwait
pop
sbb
sub
pop
fimul
js
mov
(bad)
ins
push
(bad)
(bad)
push
stc
xchg
inc
ror
or
jmp
push
outs
mov
sub
sar
lods
sbb
outs
call
and
scas
(bad)
mov
or
sub
push
inc
dec
rol
jnp
push
xor
(bad)
mov
mov
stos
das
push
pushf
or
in
jns
popf
jle
jl
stc
xchg
pop
je
mov
sbb
or
movs
xor
popf
test
sar
dec
leave
dec
bound
jmp
aad
sub
cmp
mov
pop
test
or
rcr
shl
xchg
sbb
aad
and
lds
or
xor
sbb
dec
and
lea
pusha
or
mov
jl
or
icebp
mov
fiadd
xlat
sbb
mov
sbb
sbb
cmps
jge
jmp
shr
imul
push
add
jp
jmp
mov
xchg
lahf
ins
ret
push
fidiv
(bad)
add
pop
cmp
jmp
mov
(bad)
jp
mov
and
std
dec
mov
add
call
add
in
pushf
xchg
lahf
test
data16
add
ret
cwde
outs
shl
outs
inc
(bad)
push
or
call
add
aaa
in
aaa
ret
test
push
fnsave
(bad)
lahf
or
push
cmps
inc
repz
ror
add
xor
mov
data16
inc
ss
retf
xchg
xor
xlat
hlt
jbe
mov
lock
(bad)
mov
mov
fcom
stos
and
stc
mov
xor
ds
bound
inc
test
lea
popa
repnz
sbb
or
cmps
or
ret
dec
out
repnz
das
fistp
test
xchg
(bad)
data16
fcmovu
cld
int3
in
cwde
imul
push
(bad)
sub
jecxz
ins
les
es
pop
adc
add
pop
inc
imul
inc
mov
dec
or
mov
jbe
hlt
je
les
pop
je
int3
jecxz
sar
xchg
xor
mov
(bad)
jnp
cwde
mov
inc
rcr
cmps
inc
pop
out
inc
sbb
or
mov
mov
cmp
jnp
cmc
push
sub
neg
xchg
and
jle
ficom
outs
mov
imul
cdq
or
mov
xchg
ins
pushf
fimul
sub
xchg
dec
mov
mov
mov
not
mov
loope
(bad)
test
rcr
fadd
(bad)
mov
dec
scas
and
dec
xor
or
jecxz
push
pop
jmp
adc
cmp
ss
jmp
add
mov
push
mov
aas
gs
cmps
push
mov
cdq
cmp
(bad)
push
sub
lods
sbb
inc
das
stos
aam
out
arpl
mov
cdq
(bad)
mov
lods
xchg
leave
imul
cmp
xor
ss
push
sahf
cmp
out
jp
cs
jmp
cdq
iret
shr
pop
into
je
inc
push
sbb
jns
(bad)
in
mov
dec
loope
adc
ret
pop
sbb
mov
loop
mov
div
out
in
(bad)
jmp
mov
daa
test
xchg
and
push
mov
dec
push
push
jle
sub
mov
and
cwde
(bad)
clc
test
les
and
rcr
jle
pop
ret
ins
push
xchg
daa
iret
adc
and
lock
test
cdq
mov
repnz
mov
fldcw
jl
fs
push
out
int3
dec
dec
test
and
add
jmp
mov
dec
ss
mov
out
lods
aad
xlat
rol
call
xor
enter
sub
adc
jl
mov
inc
fisttp
xor
add
push
mov
dec
push
mov
ins
pop
aaa
xor
sub
push
push
test
mov
jecxz
cwde
inc
xchg
inc
xchg
pop
pop
dec
sub
leave
add
test
jne
cmp
adc
and
imul
xchg
(bad)
(bad)
aad
out
mov
mov
cmp
lock
fldenv
mov
or
mov
test
inc
cld
cmp
push
pop
push
mul
stc
rol
(bad)
xchg
dec
inc
popf
inc
mul
popa
xor
cmp
mov
mov
test
std
mov
pop
sbb
mov
dec
cdq
push
push
sti
test
jge
in
lods
mov
clc
gs
mov
sbb
mov
jmp
mov
dec
jge
push
sub
xor
imul
sub
enter
idiv
js
popf
adc
pop
and
nop
inc
bnd
call
mov
mov
add
sub
or
(bad)
mov
das
add
out
fsub
jl
mov
movs
and
pop
xchg
mov
jnp
cwde
dec
cmc
jp
jbe
pushf
jnp
sub
bound
cmc
adc
or
add
clc
idiv
cmp
retf
jp
iret
and
in
jmp
lss
ret
cwde
xor
xchg
pop
addr16
mov
int
jmp
push
sub
sub
call
mov
gs
add
sbb
sub
cmc
adc
or
cmps
jbe
ret
in
jl
cmp
push
ds
pcmpeqb
xor
sub
mov
jmp
xor
rcl
loop
push
jmp
adc
pop
sti
xchg
xchg
sub
(bad)
mov
(bad)
push
mov
popf
shl
inc
out
(bad)
imul
das
popf
jge
fwait
data16
ret
in
jmp
cmps
lahf
adc
xor
outs
xor
xlat
retf
ret
jmp
lea
out
xor
jmp
sbb
cmp
adc
cmp
div
(bad)
and
out
jnp
jle
sbb
test
add
rcr
ss
and
(bad)
mov
sub
mov
(bad)
mov
xchg
(bad)
add
imul
(bad)
mov
cmp
adc
xchg
int
jae
in
mov
into
add
sbb
aam
and
sbb
fisub
xchg
sbb
icebp
movs
pop
jbe
popf
mov
add
(bad)
aad
lahf
adc
fistp
inc
cmp
aas
adc
mov
retf
mov
gs
add
inc
jne
lock
aas
scas
dec
push
jle
in
dec
mov
push
sbb
and
or
into
mov
je
xor
sti
js
xchg
cwde
xchg
pop
retf
and
das
sbb
inc
test
mov
mov
in
jae
mov
mov
xchg
dec
sub
cmps
sub
mov
je
shl
xchg
nop
dec
push
xchg
imul
and
add
or
or
and
arpl
cli
ds
scas
adc
sbb
lea
jmp
dec
mov
mov
scas
push
push
mov
mov
push
jne
or
(bad)
jo
add
bound
outs
adc
bound
ficomp
inc
jg
int3
adc
cmps
pushf
stos
out
shl
arpl
add
push
div
or
shl
daa
popa
pop
fstp
pop
sub
or
push
adc
imul
lods
in
or
adc
cli
jae
shr
sub
mov
push
jmp
stos
push
add
dec
stos
aam
add
loopne
arpl
mov
test
sub
dec
jb
mov
cmps
inc
das
and
inc
aas
cs
inc
push
icebp
es
mov
or
sti
imul
out
jae
dec
ins
or
cmc
cmp
sahf
jne
fisubr
das
lods
mov
out
popa
sti
ret
enter
xor
rcl
nop
xor
pop
(bad)
pop
addr16
xor
sbb
pop
or
push
fdivp
retf
jle
and
push
push
add
xor
out
(bad)
lock
xor
jbe
sar
es
dec
movs
movs
inc
loop
cmp
pusha
or
mov
mov
dec
xchg
pop
fsub
into
hlt
gs
mov
dec
cmp
sub
out
pop
mov
imul
pop
push
jae
adc
stos
sub
es
adc
enter
xchg
mov
pop
add
cmc
mov
xor
dec
xor
call
je
sbb
rol
into
shl
clc
xchg
shl
out
jecxz
push
mov
les
xchg
or
push
nop
or
or
mov
aam
outs
outs
cmps
lock
stos
movs
and
gs
sub
cli
mov
out
imul
imul
adc
push
pop
test
loope
jge
(bad)
lods
cli
retf
shl
mov
mov
jecxz
push
out
scas
or
pop
pusha
outs
jnp
mov
dec
and
neg
aas
or
xchg
dec
leavew
into
pop
imul
mov
sbb
lods
ja
add
mov
and
pop
and
jno
imul
cmp
cwde
mov
mov
sub
loope
mov
mov
jne
and
mov
sub
mov
sub
push
jb
sub
sbb
push
aad
or
enter
aad
xchg
push
cld
xchg
mov
out
push
out
aam
xor
lds
dec
mov
icebp
(bad)
movs
stos
sub
xchg
inc
inc
nop
dec
dec
mov
adc
mov
out
sbb
xchg
outs
les
cmp
lds
pop
imul
mov
repnz
test
repnz
jecxz
ja
xchg
xchg
xor
jo
xchg
pop
fs
adc
push
pusha
(bad)
jmp
ins
xor
arpl
add
inc
repnz
push
imul
mov
cmp
xchg
pop
pushf
mov
sub
sbb
adc
test
add
jp
mov
push
leave
mov
add
jmp
in
inc
mov
xor
adc
add
idiv
or
(bad)
push
mov
inc
fist
dec
mov
scas
pop
xor
pop
movs
(bad)
(bad)
rol
pop
(bad)
int3
fwait
adc
cmc
inc
fisttp
adc
xchg
lods
xor
and
mov
retf
pop
ficom
sbb
jge
jns
dec
leave
bound
addr16
cs
sub
sub
in
jp
mov
push
sub
push
xchg
push
jmp
adc
mov
push
repz
xor
jb
sbb
xchg
mov
cmp
and
stc
ss
loopne
cwde
mov
pop
inc
mov
imul
xchg
fstp
pop
call
ret
inc
xor
cwde
xchg
add
cli
jg
xor
sub
or
stc
std
xor
push
es
xchg
pop
inc
mov
push
in
enter
lahf
leave
aas
pop
fimul
inc
xor
outs
rcl
das
jne
jmp
pop
xchg
psubsw
dec
mov
jg
add
xchg
rol
enter
fwait
lods
fucomi
push
jmp
cmp
sbb
mov
dec
mov
dec
sbb
inc
xchg
push
repnz
(bad)
jmp
pop
outs
dec
mov
xchg
push
jnp
xchg
mov
cmps
fnstcw
push
dec
adc
inc
mov
out
mov
retf
sbb
adc
dec
jnp
mov
inc
in
fnstenv
pop
and
or
cli
fcom
jo
cmc
pavgw
jnp
sub
(bad)
pop
loope
inc
sub
sti
in
movs
and
add
rcr
xchg
in
dec
(bad)
(bad)
push
div
scas
add
cmc
jnp
add
les
or
ins
(bad)
mov
mov
ret
mov
and
lds
xchg
sbb
adc
push
sub
xchg
mov
jmp
dec
outs
fadd
xchg
je
lods
into
das
xchg
nop
test
or
stos
mov
mov
inc
lds
xchg
mov
jbe
adc
lock
push
jle
call
xlat
cmc
xchg
mov
xor
sub
or
push
dec
mov
pop
fimul
cli
inc
mov
les
test
ins
mov
sbb
mov
xchg
int
xchg
sub
mov
push
data16
xchg
fs
mov
dec
stos
and
call
mul
pop
popf
mov
sub
fst
sub
scas
gs
push
inc
pop
jecxz
rdpmc
loop
add
inc
cmp
test
sub
xchg
scas
test
jbe
and
pop
mov
adc
or
jae
push
add
pop
pop
and
(bad)
pop
jecxz
out
aaa
cmp
add
xchg
sti
xor
adc
int3
repz
cld
es
in
inc
jbe
sub
pop
in
scas
adc
jecxz
push
pop
test
popa
(bad)
push
mov
cdq
add
cs
loope
rcr
and
(bad)
cs
fcomp
cli
mov
inc
je
add
pop
cmps
sbb
enter
sti
cmp
and
or
adc
inc
push
jg
jmp
or
pop
loop
sahf
loope
loop
xchg
cmp
push
push
mov
shl
jg
clc
(bad)
dec
out
cmp
mov
xchg
or
pop
cwde
cwde
popa
mov
push
aaa
adc
push
cmps
push
ja
out
xchg
(bad)
ror
data16
xchg
movs
aaa
add
out
jae
sub
sbb
jmp
mov
retf
adc
xor
mov
or
push
sbb
popa
test
fwait
cs
div
cmp
sbb
sub
jmp
jle
in
mov
(bad)
sti
movs
outs
hlt
jae
sbb
xchg
idiv
lds
and
push
jno
aam
push
ds
cmp
test
(bad)
adc
scas
adc
jmp
mov
inc
and
mov
dec
xor
scas
test
out
xor
mov
push
(bad)
in
int3
mov
add
jl
add
mov
mov
rcl
js
lds
mov
cmp
mov
out
push
std
mov
les
mov
and
stos
dec
jns
clc
and
and
(bad)
clc
stc
in
and
dec
and
lea
jb
lods
test
retf
sub
repz
test
test
sbb
push
lods
lds
pop
icebp
repz
and
mov
cdq
mov
pop
dec
out
jmp
aas
xor
sbb
push
inc
aam
inc
inc
pop
push
jno
xchg
(bad)
iret
inc
push
xor
cmp
sub
pop
pop
das
push
fnstenv
rcr
pop
pop
(bad)
sar
xor
jns
sbb
(bad)
pop
movs
je
popf
fwait
sbb
mov
sahf
adc
cmps
sub
stos
xlat
or
int3
sbb
in
dec
mov
stos
jbe
and
ss
movs
xchg
lods
mov
mov
lds
mov
outs
jp
jg
push
shl
js
loope
push
shl
neg
pushf
mov
dec
cmp
inc
scas
arpl
(bad)
push
jae
adc
dec
mov
lea
lock
imul
xchg
and
mov
pop
lahf
add
sub
adc
inc
imul
call
and
adc
jae
shl
jbe
inc
add
or
lahf
and
dec
nop
(bad)
shl
loope
xchg
out
xchg
or
push
das
not
jmp
imul
or
push
push
pop
cmp
(bad)
fnstcw
rcl
stos
push
pop
pop
and
xlat
add
int
add
popf
ins
ins
add
ret
and
mov
dec
fnsave
lea
pop
lds
jmp
sbb
or
inc
sbb
cwde
pusha
scas
dec
jae
mov
xlat
(bad)
xchg
or
jp
mov
xor
fdivr
and
movs
rcr
mov
dec
scas
(bad)
xchg
in
sub
test
pop
in
int3
sbb
mov
mov
fstp
lods
and
xlat
rol
xchg
imul
bound
aas
jns
lock
jecxz
lods
sbb
dec
pop
test
inc
xchg
pop
lahf
cmp
pop
data16
sbb
scas
aam
push
and
xor
pop
sbb
(bad)
inc
mov
dec
cli
pop
jnp
add
fbld
mov
mov
mov
adc
push
or
repnz
xchg
dec
into
xor
fwait
adc
cmp
sub
arpl
mov
jmp
das
sub
pop
fldenv
jecxz
pop
das
sahf
cmp
ins
xchg
into
loopne
cs
dec
sub
test
xlat
mov
add
jae
sub
xor
mov
out
xchg
push
test
push
adc
sub
mov
sbb
jo
sbb
leave
sbb
adc
sub
and
adc
cmp
dec
inc
mov
push
adc
stos
out
add
mov
inc
aas
xchg
jecxz
pop
jns
sub
inc
fwait
outs
(bad)
stc
pop
push
out
int3
test
call
or
mov
fwait
shl
xchg
mov
lods
aas
adc
loope
sbb
cmp
outs
js
push
fisub
in
pushf
mov
pop
and
jb
cmp
mov
adc
inc
cmp
jl
xor
rcl
jbe
inc
ja
lahf
sbb
leave
lods
sbb
pop
clc
out
xor
sahf
leave
in
and
add
nop
dec
or
lods
(bad)
pop
inc
mov
out
enter
push
data16
(bad)
cld
jmp
mov
leave
ret
repnz
mov
xor
daa
adc
ret
jns
div
(bad)
iret
fdivr
xchg
in
cli
pop
in
jb
jno
icebp
repz
pop
mul
nop
stos
lods
pop
dec
inc
(bad)
xchg
scas
sbb
jnp
inc
enter
into
out
pop
nop
push
xor
xlat
jg
call
cmp
sti
in
cmc
jmp
(bad)
push
mov
out
je
push
sbb
dec
ror
adc
ss
es
repz
add
aad
inc
push
sar
pop
jg
inc
test
fstp
xchg
xchg
fnstsw
mov
lahf
fadd
or
rol
jnp
jmp
pop
push
js
and
dec
mov
and
loope
in
inc
(bad)
sub
mov
push
adc
ja
push
jecxz
cmp
nop
inc
popa
inc
loop
adc
push
(bad)
pop
adc
lods
inc
pmulhw
cli
xchg
mov
fwait
mov
aad
sub
cwde
ja
ja
or
xchg
mov
cmps
sub
loop
aad
out
and
mov
jge
mov
out
lea
push
mov
movs
mov
sub
fwait
pop
movs
movs
mov
dec
loop
mov
pop
lds
rol
(bad)
sbb
cmp
pop
sbb
and
in
stos
fidivr
leave
leave
sub
movs
sub
jnp
or
cmp
hlt
(bad)
xor
pop
xor
mov
and
fiadd
xchg
and
xchg
mov
(bad)
lea
inc
xchg
ins
loope
jns
cmp
pop
das
dec
xor
mov
push
not
push
cwde
outs
xchg
inc
jbe
dec
pop
inc
out
jl
pop
arpl
push
(bad)
fadd
das
iret
test
adc
add
push
clc
jne
or
push
jbe
and
out
jnp
push
repz
dec
loope
mov
sub
push
rcl
push
pop
mov
mov
fisubr
xor
stc
add
lods
sbb
enter
mov
xchg
ficomp
hlt
rcl
mov
push
(bad)
jecxz
inc
xchg
jge
xor
or
loopne
cld
xchg
enter
mov
arpl
inc
das
(bad)
mov
jg
icebp
cwde
jns
xchg
and
loopne
mov
jge
test
call
push
out
pop
dec
xlat
xor
adc
push
mov
sbb
stos
ret
clc
mov
mov
pushw
dec
(bad)
pusha
cs
fldcw
mov
(bad)
inc
arpl
mov
push
mov
add
mov
cmp
daa
cmps
retf
and
fldenv
(bad)
xchg
pop
cmp
mov
or
sub
xor
jmp
iret
cmp
ret
pop
lds
and
mov
iret
popf
fmul
lods
inc
cmp
scas
fiadd
inc
movs
sub
push
outs
adc
cwde
and
pop
xchg
leave
stc
and
je
or
sbb
mov
xchg
mov
push
push
dec
pop
(bad)
rcl
in
fstp
jb
xchg
push
inc
addr16
xor
xor
call
jmp
mov
test
test
(bad)
dec
push
les
shl
cmps
jo
push
pop
mov
add
xor
sub
inc
xor
push
fcmovne
nop
imul
pop
mov
jno
call
in
add
popa
stc
lahf
std
cmps
dec
xchg
mov
data16
ror
jecxz
mov
jmp
sbb
mov
mov
leave
shl
sub
and
and
pop
pusha
out
aaa
addr16
xor
ins
fnstenv
inc
inc
lods
dec
retf
pop
cmps
lahf
es
jl
mov
aam
and
push
test
call
ret
test
adc
sub
jp
add
into
shl
jns
inc
mov
out
addr16
or
test
iret
hlt
test
lods
leave
mov
arpl
dec
xor
xor
xchg
dec
fdiv
sub
out
data16
push
mov
rcl
mov
fadd
and
inc
inc
retf
xor
push
jne
cld
pop
mov
mov
sbb
loop
inc
adc
mov
std
dec
pop
inc
mov
loopne
push
mov
je
mov
sub
mov
in
call
dec
cli
cmc
pushf
jl
out
iret
push
xor
jno
addr16
sar
test
xor
aaa
out
xchg
jmp
es
inc
cmp
jmp
sar
(bad)
test
sub
jmp
cli
lods
mov
xor
adc
inc
push
push
ror
in
test
call
sub
fs
sub
cmpxchg
cli
mov
bound
and
out
jns
out
rol
and
sar
add
xchg
in
inc
fidivr
jmp
cdq
gs
aam
rcr
mov
cmp
dec
xlat
xchg
mov
sar
xor
xchg
outs
xchg
jnp
lock
push
xchg
add
jns
cwde
dec
sbb
lea
or
jmp
and
cmp
push
or
adc
cmc
adc
loope
add
or
cmp
pop
xchg
aad
enter
in
sbb
xchg
jle
mov
ss
mov
and
cmc
pop
adc
out
xchg
out
inc
loope
aas
jecxz
mov
hlt
and
pop
jo
push
inc
inc
or
cmp
pop
pop
shr
dec
xchg
sub
or
jmp
pop
jecxz
js
mov
mov
(bad)
sub
sbb
mov
idiv
dec
sbb
xor
enter
pop
pop
scas
dec
setno
movs
dec
or
xor
dec
jmp
out
xchg
outs
dec
mov
pop
aas
(bad)
mov
ror
int3
dec
call
outs
ss
ins
ins
out
hlt
sub
xchg
cmp
adc
cmps
rcl
push
cli
mov
mov
sub
hlt
je
or
ror
rol
pop
sub
loope
das
mov
popa
ror
push
icebp
and
pop
arpl
inc
jmp
call
and
lea
clc
mov
add
aad
push
pop
push
sar
aas
dec
(bad)
xor
jg
das
pop
(bad)
and
sbb
adc
in
adc
out
push
nop
cwde
fs
xor
xor
das
mov
dec
and
sbb
cmps
xor
into
cmp
repz
mov
sub
retf
mov
iret
popf
xchg
ret
cld
jmp
sbb
add
fmul
popa
mov
scas
jmp
fwait
jnp
mov
or
lea
jb
mov
and
add
jg
ins
jne
jb
ja
or
cmp
call
pop
mov
nop
mov
dec
pop
test
and
in
fldenv
ins
das
scas
sub
or
rcl
mov
daa
out
hlt
sti
in
pop
cs
adc
mov
push
dec
xor
jnp
pop
xor
or
dec
or
and
call
cmp
fdivr
push
cmp
je
ja
inc
pop
dec
cmpxchg
sbb
into
arpl
jg
test
lods
dec
adc
retf
in
xor
and
or
push
scas
or
jl
mov
sub
xchg
mov
or
lods
out
inc
cdq
mov
lock
adc
loopne
sti
data16
cld
and
lahf
fwait
adc
xor
dec
xor
mov
pop
fiadd
push
push
in
sub
jmp
jnp
mov
pop
(bad)
(bad)
repz
dec
add
addr16
ror
cld
shl
imul
mov
mov
ror
loop
adc
pop
pop
out
fst
push
repnz
(bad)
jmp
pop
stc
dec
jp
add
dec
push
retf
les
ins
pushf
mov
cmp
sub
mov
inc
outs
push
fisub
add
ja
js
outs
sbb
fbld
xor
shl
(bad)
pop
adc
mov
push
fcom
cmp
push
mov
or
pop
lods
jp
cmc
mov
mov
xor
mov
adc
test
and
add
cmps
jno
dec
adc
sub
jnp
mov
dec
outs
mov
cli
sbb
fdiv
(bad)
fnstsw
jge
mov
sub
push
pop
mov
hlt
sub
xor
mov
cwde
aam
pop
call
stos
movups
stos
push
test
cmp
push
ficomp
fs
adc
adc
fbstp
std
pop
gs
outs
mov
mov
pop
test
stc
fcmovnu
retf
scas
push
into
pop
nop
aad
mov
test
dec
mov
cmp
fist
push
jmp
arpl
mov
mov
xchg
ins
fimul
push
mov
(bad)
fmul
mov
lock
rcr
adc
dec
stc
pop
mov
lds
push
cs
dec
stos
pop
jne
and
mov
icebp
lods
lock
adc
std
xchg
xchg
into
sbb
pop
mov
test
pop
retf
shl
test
mov
popa
loop
xchg
mov
pop
test
cmp
scas
jb
test
add
inc
jmp
lods
lds
push
mov
adc
loop
das
inc
lods
cwde
and
sub
retf
or
jmp
push
add
fsubrp
add
dec
xchg
jmp
mov
pop
mov
test
xor
adc
out
lods
xor
fild
adc
pushf
stos
lahf
dec
jno
stos
(bad)
clc
cld
push
mov
add
je
xor
xchg
jne
retf
mov
pop
xor
(bad)
(bad)
(bad)
jb
mov
cli
aaa
aas
adc
xor
(bad)
leave
push
test
(bad)
push
(bad)
sbb
das
loop
jo
call
ins
out
sbb
lea
jbe
push
adc
add
dec
rol
outs
add
push
int3
lock
in
adc
mov
aad
cmc
faddp
adc
pusha
mov
sub
mov
xchg
mov
test
ja
gs
jne
imul
xchg
hlt
xor
fldenv
imul
ins
push
add
in
lods
aam
cld
cmp
or
idiv
(bad)
sbb
dec
rcl
jno
xor
inc
jns
test
stc
mov
xor
hlt
ficom
mov
not
and
retf
mov
dec
xchg
stc
xchg
push
adc
pop
mov
(bad)
repz
jae
xchg
cmps
xor
pop
sbb
sti
ja
sar
pop
loope
mov
xor
sahf
adc
popa
xchg
dec
adc
jl
outs
inc
pop
and
adc
out
test
jns
cmc
xchg
add
mov
xchg
add
push
and
cli
test
pop
call
or
xchg
fisttp
(bad)
inc
out
mov
repnz
sahf
or
rol
mov
cmps
stos
xchg
lahf
loop
cmp
mov
jmp
jnp
sahf
cmp
adc
idiv
mov
push
ret
ins
test
cmp
xor
(bad)
push
dec
xchg
sbb
ror
popa
add
out
xchg
add
pop
loopne
cmp
xchg
out
movq
xor
call
pop
(bad)
and
nop
pop
mov
cmp
data16
mov
cmps
(bad)
int
in
mov
je
cmp
call
out
sub
sub
fwait
sbb
push
adc
xor
sub
pop
xor
add
outs
les
call
fcmovnu
fsubr
outs
jp
loope
fdivr
sub
js
and
push
popa
or
scas
mov
pushf
dec
sti
cmps
xchg
bound
pop
ins
mov
push
out
sbb
cmp
aas
dec
repnz
mov
dec
sub
fnstsw
sbb
gs
sbb
sbb
pop
(bad)
lock
int
xor
sub
shr
cdq
cmp
adc
or
(bad)
fstp
dec
push
sbb
js
stos
inc
jg
fwait
shl
movs
xor
mov
dec
cmps
or
sbb
jge
test
in
cmps
les
mov
aam
xchg
xchg
xor
mov
mov
xor
mov
(bad)
rol
in
xchg
sti
xchg
dec
mov
cmc
xor
scas
les
add
adc
cmp
or
cmps
sbb
out
xlat
mov
add
xchg
adc
push
sub
stc
sub
cwde
outs
mov
mov
mov
fistp
leave
cmp
out
arpl
(bad)
mov
cmp
xchg
and
sahf
lea
cdq
push
jl
and
movs
xor
cmp
ja
xchg
push
cmps
or
mov
dec
push
enter
add
mov
out
aaa
(bad)
loopne
xchg
neg
sub
movd
das
or
pop
sub
movs
repnz
xchg
test
sub
mov
ss
cmp
dec
aam
or
add
aad
push
xchg
hlt
aaa
loope
arpl
imul
lahf
out
movs
mov
push
mov
pop
fst
jecxz
xchg
xor
xlat
and
mov
lea
test
dec
rcl
sahf
imul
cdq
pusha
imul
dec
pop
add
jb
pushf
out
push
pop
pushf
dec
arpl
mov
rol
xchg
inc
pop
mov
dec
dec
aam
lods
and
jle
pop
cmc
in
in
xor
(bad)
out
push
inc
cmp
xchg
inc
into
mov
in
nop
fcmovu
dec
jl
sbb
leave
add
cmp
dec
adc
add
pop
scas
add
es
xchg
mov
retf
jmp
out
sti
jge
add
test
mov
pop
fmul
pusha
imul
xor
cwde
jmp
inc
inc
xchg
dec
fisubr
or
jb
push
cmp
cmps
call
pop
cmps
fstp
frndint
and
scas
stos
repnz
fld
loope
repnz
cmp
data16
mov
and
fnstcw
xor
arpl
in
xlat
gs
pop
or
cmp
dec
loopne
add
jmp
jp
fsubr
inc
in
adc
add
call
aam
or
jge
std
int3
or
sbb
sub
and
sbb
jmp
cld
push
daa
jmp
mov
pusha
sbb
fistp
in
scas
int
lods
jg
push
imul
repnz
in
inc
lahf
dec
xchg
adc
inc
int
xor
enter
or
jbe
or
popa
out
lahf
inc
adc
push
sub
les
mov
repz
out
dec
(bad)
dec
jp
push
mov
ret
inc
fistp
iret
inc
shl
neg
loopne
xchg
dec
shl
icebp
(bad)
mov
ins
test
or
xchg
mov
push
cmp
(bad)
das
gs
outs
ss
mov
adc
iret
pop
jecxz
push
lea
stos
fs
(bad)
repz
inc
imul
xchg
cdq
(bad)
in
mov
or
mov
jbe
loopne
sbb
or
cmp
sahf
cmp
aam
xchg
imul
cmp
mov
bound
addr16
fwait
and
cld
adc
cmp
mov
push
iret
sti
inc
adc
dec
and
(bad)
sub
dec
add
movs
mov
push
dec
(bad)
dec
adc
int
sti
scas
dec
dec
adc
or
test
and
jbe
jnp
mov
dec
shr
sbb
mov
loope
and
jl
lea
adc
loope
pop
dec
add
mov
cwde
pop
sub
sbb
icebp
inc
iret
xor
sub
cmp
pop
mov
rcl
lock
cmp
jg
(bad)
xchg
sub
pop
dec
jns
gs
in
(bad)
adc
jno
dec
xchg
(bad)
popf
and
clc
sub
adc
and
dec
bound
mov
xor
xchg
cmc
push
mov
imul
mov
addr16
mov
sti
push
arpl
pop
test
mov
movs
mov
movs
pop
mov
hlt
xor
sahf
and
ja
jge
mov
push
push
test
int3
lods
or
sar
and
sub
jns
aas
or
push
mov
jp
iret
popa
(bad)
and
dec
jae
stos
xchg
fwait
movs
ror
jmp
adc
in
out
inc
cmp
xor
push
retf
not
clc
and
cmp
pop
js
push
and
xchg
(bad)
fmul
xchg
icebp
inc
mov
test
int3
xchg
xor
inc
xchg
bound
stc
cmp
pop
stc
mov
and
sub
inc
add
aas
sbb
mov
cmp
setge
mov
xchg
loopne
mov
push
popf
pop
movs
retf
jbe
adc
js
jl
clc
fstp
cdq
les
icebp
in
mov
and
cmp
push
cmp
or
add
push
fimul
dec
sti
inc
cld
lods
aad
push
shl
jbe
push
sti
sbb
xor
pop
jle
and
xchg
in
xchg
cmp
jae
jne
pusha
dec
aaa
sahf
jns
xor
mov
jge
and
and
sahf
or
outs
aam
or
test
cmp
sub
int3
add
fucomi
pop
push
dec
xchg
lock
mov
push
aam
jno
pop
loop
stos
add
sbb
fimul
out
test
and
mov
(bad)
mov
out
in
dec
adc
add
sbb
loopne
fwait
(bad)
adc
imul
or
dec
push
std
xchg
movs
xchg
int
jle
hlt
(bad)
in
rcl
xchg
ficom
ja
push
adc
aam
ret
pop
clc
ss
inc
in
movs
push
cmp
jmp
sbb
xor
out
dec
push
mov
add
and
enter
mov
ret
popw
cmc
(bad)
sub
cmc
xchg
push
add
out
inc
push
or
dec
in
lea
mov
push
and
loope
pop
sbb
and
std
(bad)
pushf
mov
dec
mov
mov
add
stos
dec
ret
jp
lods
dec
and
ret
jg
dec
inc
cmps
ja
cmp
clc
aam
pop
adc
jno
in
xor
sbb
popf
into
test
jp
mov
dec
cmps
cmp
call
mov
add
mov
sbb
mov
(bad)
out
jmp
push
xchg
or
sbb
add
ja
mov
sbb
mov
cmc
out
in
repz
inc
icebp
loop
and
or
(bad)
int
inc
retf
pop
add
mov
mov
dec
pop
sti
imul
and
mov
retf
sbb
mov
inc
xchg
push
jle
lods
loop
test
adc
inc
mov
pop
popa
pushf
mov
retf
jmp
xchg
(bad)
cld
cmp
jmp
mov
inc
push
pop
call
leave
mov
into
or
dec
in
sub
test
fidiv
nop
xor
test
call
je
ja
cmp
shl
int3
jnp
(bad)
sahf
lds
aad
dec
pop
dec
sub
jge
mov
add
jnp
cmp
adc
sub
adc
ds
jno
inc
lea
jecxz
imul
cmps
rcl
or
add
mov
repnz
push
inc
adc
mov
in
jp
inc
pushf
lock
mov
test
rcr
jp
(bad)
mov
xchg
enter
stos
jmp
inc
pop
addr16
out
mov
out
xchg
test
mov
push
cmp
and
mov
cmc
idiv
js
sub
cmp
and
lods
push
aam
add
sbb
push
pop
mov
jno
mov
add
cs
mov
stos
jp
ds
mov
popa
(bad)
fcomip
xor
xchg
xchg
push
(bad)
jp
inc
retf
cmp
int3
fisttp
adc
sbb
push
xchg
push
cmp
mov
lahf
add
loop
out
mov
(bad)
xchg
mov
fndisi(8087
out
mov
or
aas
mov
mov
loop
test
fcomp
das
movs
xor
cwde
jb
jno
loop
push
or
pop
xor
jns
inc
loop
or
adc
mov
std
outs
icebp
sbb
sub
cmps
pop
outs
out
xchg
inc
mov
scas
jp
inc
jmp
xlat
das
mov
jmp
sub
imul
addr16
mov
cmp
xchg
dec
push
pop
push
pop
outs
adc
cmp
pop
es
popa
pop
mov
jb
mov
int3
mov
fstp
and
xor
jo
cmp
and
fmul
imul
scas
lods
add
scas
(bad)
sbb
push
dec
out
in
lock
cmp
push
xlat
sub
ins
fsubr
in
pmuludq
ret
neg
rcr
inc
cmps
fsubp
fwait
xor
pop
enter
xlat
push
cmp
jns
xor
push
xchg
mov
outs
test
xchg
test
in
jmp
stos
mov
stos
adc
stc
jbe
out
jmp
fcmovnu
push
pop
xchg
out
arpl
mov
fsubr
pop
sbb
addr16
push
aam
fs
daa
or
cmps
jmp
mov
mov
jae
jmp
(bad)
loopne
pop
(bad)
aam
add
pop
and
mov
or
aad
xor
and
popf
es
call
push
test
inc
hlt
lods
push
push
repnz
pop
inc
je
imul
iret
mov
loopne
xchg
je
frstor
pop
lds
xlat
add
adc
lods
and
jp
dec
stc
cmp
jecxz
sub
jmp
cmp
dec
(bad)
xchg
mov
jno
lods
or
and
repnz
fisttp
int3
repz
imul
fidiv
inc
adc
or
pop
cmp
sub
gs
add
or
mov
call
dec
and
retf
adc
adc
les
lods
push
mov
(bad)
out
and
fdivr
daa
adc
leave
ins
out
loope
fsub
lock
stos
clc
add
pop
pop
leave
pop
dec
push
mov
fiadd
inc
xor
stc
mov
mov
out
bound
adc
cmp
inc
sti
xor
ror
xchg
jl
or
add
leave
pop
xchg
dec
mov
aad
ret
jmp
xchg
push
int3
scas
je
(bad)
mov
sbb
sbb
(bad)
pop
sbb
jns
fadd
dec
inc
mov
loope
pop
xor
push
jb
jg
push
test
imul
rcl
jnp
scas
leave
sub
push
ins
lods
cmp
inc
adc
pop
shr
lock
lahf
push
xchg
std
jle
sub
inc
out
pop
ins
mov
or
adc
xchg
aad
add
jne
and
pop
inc
movs
les
es
out
leave
adc
xchg
clc
or
mov
cdq
das
(bad)
adc
fstp
push
pop
add
into
es
xlat
stos
adc
test
mov
mov
add
in
mov
imul
sub
ja
data16
je
dec
jle
fisttp
or
mov
sbb
arpl
imul
(bad)
mov
add
xor
cmps
mov
sbb
(bad)
jp
push
add
dec
pop
(bad)
pop
dec
test
mov
scas
popf
lods
les
lahf
mov
push
movs
call
daa
inc
mov
or
fmul
push
and
mov
jle
cmp
fs
ins
jecxz
xchg
out
js
cmps
nop
add
pushf
enter
xchg
movd
push
add
sahf
add
sbb
sub
push
cmp
fdiv
lahf
pop
stos
mov
bound
mov
xchg
fsub
jbe
xor
dec
imul
(bad)
out
fbld
jo
and
cmc
ja
or
mov
outs
cli
push
push
ret
rcl
add
std
mov
jg
sar
cmp
(bad)
xor
or
push
and
add
repnz
mov
outs
imul
(bad)
mov
pop
in
stc
jmp
popf
pop
cld
movs
cmp
lods
mov
in
pop
and
cs
hlt
mov
sub
out
dec
or
xor
into
out
pop
add
and
or
ja
mov
repz
jg
cmovb
repnz
and
cmp
xchg
mov
pop
and
xchg
pop
dec
mov
inc
shr
cs
push
or
inc
pop
pop
add
retf
or
cmps
fwait
pop
sub
dec
cmp
mov
xlat
and
fwait
cmps
inc
xor
jecxz
xchg
in
add
push
mov
icebp
xor
(bad)
jecxz
cdq
jmp
dec
mov
aas
nop
not
push
lea
mov
sub
xchg
sbb
jnp
push
cmp
pop
push
mov
mov
sub
jo
sbb
jmp
imul
inc
aam
fisttp
pop
inc
mov
push
add
push
(bad)
(bad)
(bad)
mov
sub
imul
xor
add
cld
lahf
inc
out
hlt
icebp
nop
pop
es
sbb
push
adc
or
enter
div
rcl
retf
lock
lods
je
retf
pop
pop
jecxz
movs
rcl
cmp
or
ds
pop
push
cmp
pop
imul
pop
ins
lods
ja
sbb
xchg
add
mov
jo
jns
fdivr
mov
or
xchg
pop
fimul
retf
pop
cmp
adc
das
cld
aas
add
jle
adc
loop
push
sub
aad
jle
cmp
int
sub
push
dec
sysret
(bad)
shr
mov
popa
pop
inc
or
ror
mov
sar
fimul
inc
popa
shr
leave
hlt
sub
adc
xor
popa
(bad)
int3
adc
inc
adc
mov
inc
cmp
sub
xchg
pusha
scas
movs
dec
sbb
xchg
adc
sbb
mov
pop
sub
and
cmp
outs
test
inc
jbe
cmc
stc
mov
push
xchg
pop
(bad)
push
sti
ins
xor
cwde
pop
je
enter
push
mov
jmp
mov
popa
sahf
inc
mov
stc
outs
sbb
aam
jnp
lock
add
cmp
mov
push
cli
dec
push
cmp
mov
fldl2t
pop
push
xchg
shl
je
inc
in
add
push
or
pushf
mov
cmp
test
adc
ficom
add
mov
clc
in
xchg
pop
test
dec
xchg
push
and
xlat
push
stc
push
nop
push
je
mov
mov
sub
stos
dec
pop
repz
mov
sar
add
shr
mov
enter
popf
mov
sbb
ficomp
ret
sub
sbb
mov
jp
xchg
sub
loope
(bad)
push
and
stos
pusha
ret
shl
add
cmps
out
and
test
(bad)
jmp
xor
dec
std
cmp
test
sub
dec
mov
arpl
or
sahf
das
jg
mov
jg
sub
sbb
stos
lds
es
cmpps
mov
jae
pop
(bad)
stos
dec
repz
outs
jecxz
cdq
jo
call
jmp
sar
stc
icebp
loope
push
pop
std
mov
(bad)
push
dec
(bad)
leave
mov
mov
jo
add
push
adc
aad
xchg
stc
inc
adc
test
mov
popa
inc
dec
enter
aad
dec
sub
(bad)
je
push
popf
loope
bound
cmp
(bad)
pop
loop
fsub
or
test
rcl
mov
sahf
sbb
sub
push
dec
and
inc
push
dec
dec
inc
xchg
enter
mov
retf
dec
fwait
retf
mov
push
or
sub
xchg
retf
xlat
mov
punpcklwd
adc
push
pop
div
cmps
mov
push
xchg
mov
dec
retf
jbe
and
fcomp
push
jecxz
pushf
pop
leave
rol
sahf
les
inc
movs
hlt
sbb
adc
mov
mov
stos
mov
leave
mov
enter
hlt
out
add
test
std
mov
inc
jne
mov
lea
lods
or
repz
pop
into
mov
cli
stos
cmc
or
rcr
push
xchg
out
adc
shl
ds
(bad)
fistp
test
fmul
call
mov
ins
mov
inc
bound
pmulhuw
inc
(bad)
xchg
pop
loopne
call
sbb
mov
int3
loope
les
sub
mov
or
mov
xchg
dec
call
mov
push
jecxz
sahf
cmp
mov
jl
gs
jle
jno
xor
aaa
xchg
ins
aam
fwait
pop
cdq
jns
popa
movs
lods
popf
test
es
ja
aas
lock
dec
stc
pop
jnp
xchg
cmps
pushf
pop
inc
bnd
scas
loop
mov
pop
in
lods
add
sub
sub
lea
mov
sbb
add
out
xor
mov
jno
push
push
push
je
sar
test
out
jae
aad
inc
jge
xor
jmp
jne
mov
jmp
ds
and
add
test
retf
xor
rol
test
sar
out
xchg
out
mov
stc
inc
and
and
xchg
mov
mov
sub
push
pop
jmp
mov
rep
not
mov
and
xchg
dec
mov
sar
nop
test
mov
add
stc
and
imul
jnp
dec
arpl
sub
test
jno
ret
(bad)
in
mov
jg
icebp
clc
es
clc
aas
(bad)
ins
jno
sahf
dec
adc
cmps
mul
jbe
(bad)
fdivr
into
shl
lock
stos
das
or
xchg
push
fwait
les
push
out
loope
ret
add
adc
mov
test
add
inc
xchg
in
retf
(bad)
bsr
push
popf
adc
addr16
jmp
ins
fs
test
nop
pop
retf
in
sbb
jnp
arpl
in
xor
repz
mov
xlat
xor
or
idiv
dec
aam
and
sbb
mov
sub
push
xchg
add
cmp
adc
(bad)
out
dec
(bad)
push
(bad)
nop
das
es
sub
dec
push
jge
popa
and
mov
les
dec
scas
push
punpckldq
jecxz
lods
xlat
(bad)
jge
aam
ret
xchg
sub
ror
stc
and
dec
jne
retf
push
xor
pop
jo
ss
inc
test
jg
jecxz
fistp
mov
out
jle
into
push
repnz
mov
js
das
xor
ja
aaa
cli
ror
sti
mov
mul
sahf
jmp
add
lds
dec
in
call
dec
(bad)
je
xchg
(bad)
cmp
cmp
pop
psraw
push
mov
dec
and
sti
cmp
or
add
mov
cmc
push
and
(bad)
sub
cld
test
pop
xor
pop
mov
xchg
jnp
mov
jmp
frstor
xchg
repnz
lock
sub
cmp
ja
mov
aaa
cs
sbb
int
inc
push
xor
and
js
push
aad
mov
js
(bad)
mov
xlat
inc
jge
add
dec
stos
xor
mov
mov
push
push
inc
jmp
sub
fldenv
pop
les
call
push
jp
sti
push
popf
test
addr16
int
lods
push
rcl
imul
shl
ror
movs
repz
or
stos
fsubr
xchg
or
adc
ret
jl
and
xchg
jg
mov
shr
bound
mov
icebp
sbb
mov
xchg
adc
mov
add
inc
sub
jle
pop
and
mov
loopne
(bad)
in
add
scas
mov
sbb
arpl
(bad)
fucom
(bad)
or
shl
pop
pop
inc
fadd
jmp
in
adc
xor
ins
shr
bound
add
jmp
cmp
mov
and
cmp
movs
fs
rcl
and
adc
imul
outs
lahf
and
imul
or
jmp
test
sbb
push
push
movs
jns
xor
mov
leave
(bad)
imul
cld
push
push
xor
xlat
push
cs
cmp
(bad)
(bad)
fwait
inc
cmps
repnz
ds
mov
neg
nop
push
outs
dec
test
punpckhdq
sub
xor
out
fs
push
stc
push
add
(bad)
test
jmp
dec
clc
jmp
xchg
jmp
add
inc
aas
mov
jbe
cmp
or
dec
imul
jmp
jg
pop
adc
sub
xlat
aaa
fld
retf
arpl
add
cdq
xchg
jne
icebp
mov
ins
sbb
dec
pop
mov
rcr
test
test
(bad)
mov
pop
push
rcr
sub
push
int
mov
(bad)
leave
xor
out
sbb
mov
xchg
add
sub
movs
std
cmp
push
pop
xchg
inc
jae
in
lock
pop
shl
or
pop
(bad)
pop
mov
push
push
pop
add
nop
ins
and
or
inc
xor
xor
dec
or
push
sti
(bad)
ret
shl
mov
in
xor
lods
hlt
xor
mov
jecxz
jno
inc
std
das
fdivr
push
xchg
imul
imul
bound
mov
jno
mov
pop
jmp
mov
xchg
aad
pop
loope
mov
push
mov
in
shl
imul
push
gs
or
lock
imul
jmp
and
fsub
jmp
inc
fs
and
dec
aam
icebp
cmp
mov
sbb
test
pop
and
cld
add
mov
fptan
sub
add
jmp
test
ret
mov
mov
(bad)
stos
mov
outs
sbb
shr
pop
add
jmp
out
shl
mov
jae
loopne
nop
aaa
sbb
cli
jl
lock
or
rcl
push
mov
push
sbb
mov
adc
cmp
clc
xchg
cmps
sub
mov
sub
repnz
jp
adc
in
aaa
push
lods
jmp
cmp
mov
xchg
rcr
adc
shld
and
repnz
adc
sbb
xor
or
inc
inc
mov
sbb
int3
sub
mov
lods
mov
jnp
stos
pushf
outs
pop
fcomp
(bad)
in
jae
scas
dec
dec
loop
out
in
(bad)
adc
les
xchg
pop
inc
push
lods
sbb
lock
stos
div
and
adc
popf
push
jbe
ret
sub
sbb
mov
jg
xchg
adc
or
xor
mov
pop
push
adc
(bad)
stc
call
jne
pop
bnd
inc
int
inc
ror
retf
jmp
push
or
jne
arpl
sbb
stc
bound
fwait
push
jbe
cli
or
lahf
sti
test
(bad)
fimul
out
call
and
inc
mov
cmps
imul
mov
rcl
dec
cmp
mov
or
dec
repz
sbb
xor
pop
add
fst
and
push
push
sub
outs
mov
scas
outs
je
leave
mov
jg
rcl
jns
jl
push
data16
xchg
rcl
xchg
add
test
clc
scas
test
pop
adc
cmps
retf
sti
lock
push
je
jle
and
fbstp
or
and
psrlq
(bad)
retf
clc
mov
cdq
rcl
dec
dec
loope
jmp
ficomp
or
icebp
test
imul
ins
push
jne
fsubr
xchg
sbb
cdq
fdivr
dec
stc
aaa
ret
push
dec
pop
rol
jg
(bad)
mov
(bad)
cmp
repnz
lea
imul
ror
aad
sub
pop
clc
(bad)
ds
enter
mov
sahf
sub
test
ret
pop
adc
hlt
inc
leave
ret
or
fwait
mov
iret
nop
or
jge
inc
inc
loopne
adc
jp
push
push
inc
xor
adc
sub
lods
sub
rcr
jp
pusha
inc
mov
addr16
pop
imul
pop
ds
out
rcl
cmp
icebp
mov
aad
jge
or
dec
mov
scas
mov
out
xchg
xor
sub
mov
cmp
in
call
in
push
jge
adc
arpl
popf
xor
ror
lods
cmp
push
repz
xor
test
call
cmp
test
pop
cld
div
pushf
iret
jge
popf
(bad)
xor
mov
mov
adc
push
cdq
mov
inc
xchg
sub
xor
call
mov
add
addr16
or
and
fs
xchg
mov
push
and
data16
xor
xor
or
sub
mov
mov
add
es
int
mov
mov
repz
inc
enter
add
aam
neg
push
aas
and
and
aaa
add
ret
mov
push
sbb
lea
sbb
add
sbb
xchg
les
js
sbb
cmps
and
scas
outs
xor
cmps
sbb
xchg
fadd
adc
fst
sub
mov
push
sbb
out
outs
dec
or
lahf
inc
into
cmp
mov
popf
push
sti
adc
aas
popa
ins
in
lods
fimul
dec
in
fstp
add
lea
pop
(bad)
ror
retf
mov
and
movs
bound
loop
lods
adc
(bad)
stos
pop
or
cmps
imul
adc
gs
lea
lods
or
icebp
(bad)
mov
jle
or
gs
push
sbb
int
fs
scas
(bad)
mov
ss
mov
mov
add
sub
test
movs
int
jmp
inc
sbb
dec
sub
xor
pop
cli
iret
inc
add
mov
xchg
add
rcl
ins
cmps
pop
movs
gs
test
push
arpl
movs
add
mov
sub
daa
les
push
jmp
jecxz
pop
out
(bad)
icebp
jl
dec
and
ins
inc
sub
loopne
mov
loop
jb
jnp
push
leave
not
pop
mov
xchg
add
das
xchg
arpl
bound
ins
lea
stos
pop
jle
rcr
outs
jecxz
sbb
sub
aam
push
inc
scas
call
xor
test
je
addr16
push
mov
test
push
mov
movs
cld
or
ins
mov
das
shl
push
outs
mov
retf
out
lahf
int
push
mov
mov
adc
pop
out
push
jno
sub
mov
push
sub
pop
adc
and
pop
ds
daa
xor
push
cli
sub
xor
sub
xor
fwait
hlt
or
stos
jg
xor
(bad)
jp
xor
les
out
and
ret
(bad)
out
mov
cmc
mov
cmp
ficom
lds
nop
sbb
out
loop
(bad)
test
pusha
test
in
and
push
and
gs
arpl
pusha
xlat
test
(bad)
mov
call
arpl
or
sub
fistp
cld
push
add
cld
dec
ret
out
cs
rcl
sbb
in
xor
push
popf
xchg
(bad)
in
mov
inc
pshufw
mov
mov
dec
loopne
std
add
les
jno
jl
jge
call
mov
call
add
push
rcr
sub
ror
mov
retf
sti
lods
sti
mov
loope
pop
dec
push
dec
loopne
stos
int
adc
scas
out
pop
xchg
sbb
adc
xor
and
pushf
fild
cmp
repnz
or
mov
cwde
jecxz
dec
movs
inc
not
ss
xchg
int3
dec
imul
aaa
sub
sbb
into
jae
jmp
ins
xor
(bad)
shld
aaa
in
dec
push
imul
add
lea
mov
stos
in
mov
mov
push
inc
dec
aas
pop
call
(bad)
daa
rol
mov
adc
dec
cmps
shl
pminub
(bad)
sti
sbb
mov
and
pusha
test
xchg
mov
ss
sub
xor
mov
mov
test
push
cmp
push
int3
adc
cli
in
push
jmp
outs
xchg
sbb
lods
jecxz
in
cli
inc
sub
bnd
pop
int
and
ins
or
pop
loope
call
loop
jo
cmp
mov
mov
mov
call
jmp
xor
pop
jnp
xchg
xchg
test
cmp
lods
cmp
in
add
jg
cli
dec
jmp
lahf
sub
je
dec
(bad)
cli
dec
iret
enter
mov
int
std
cli
or
add
or
lahf
mov
arpl
jp
mov
xchg
xor
cmp
les
adc
add
and
jl
sub
sbb
ds
outs
inc
add
fs
icebp
popf
daa
push
and
jp
scas
fwait
cwde
frstor
leave
inc
inc
lods
das
mov
rcl
fild
xor
jns
and
push
cld
sti
loopne
fisttp
fcom
mov
xchg
movs
outs
mov
jns
mov
jb
and
mov
mov
cmc
mov
loop
nop
add
pop
sub
outs
add
popf
xchg
test
or
add
out
test
pusha
xchg
cmp
push
dec
sahf
sbb
jl
mov
cdq
xor
xor
iret
add
mov
lahf
stos
ror
call
sbb
mov
dec
jbe
add
and
add
(bad)
dec
xor
shl
dec
imul
xor
push
cmps
or
inc
out
cmps
push
cmps
mov
stos
inc
and
add
pop
jo
dec
fstp
inc
movs
push
and
mov
loope
je
jle
mov
aad
adc
std
test
xchg
sub
(bad)
adc
xchg
loopne
jge
sub
ret
scas
add
or
mov
dec
add
frstor
xor
retf
hlt
loope
push
add
std
pop
xor
stos
mov
repnz
in
cli
mov
jno
dec
mov
ror
adc
loope
jae
pop
xor
jbe
jp
jp
(bad)
jmp
call
push
rol
xchg
push
outs
scas
lds
cwde
adc
push
mov
rcr
mov
add
repz
and
xchg
imul
add
lock
loop
dec
aaa
add
movs
push
fild
adc
mov
push
adc
in
out
jne
and
or
imul
lods
xor
hlt
sub
fidivr
ss
(bad)
xor
(bad)
ins
cli
dec
cmc
and
in
les
mov
xor
and
js
xor
cld
addps
sbb
aam
mov
cmps
pop
loopne
mov
adc
pushf
inc
jl
cmps
movs
xor
ins
cs
fwait
dec
repz
xlat
ror
in
add
enter
adc
js
sub
std
dec
sub
aad
icebp
or
add
ds
cwde
repz
push
mov
retf
pop
or
xchg
outs
sub
pop
mov
mov
push
adc
cmp
or
(bad)
cmps
es
adc
test
jle
adc
mov
sub
xor
outs
or
adc
mov
mov
enter
retf
inc
shl
js
add
stos
adc
mov
in
cmp
into
mov
fcom
inc
jno
aas
ja
ja
xchg
enter
add
mov
leave
mov
sub
add
(bad)
and
movs
cmp
repz
movs
or
cmc
xchg
ins
imul
cmps
inc
out
push
push
inc
lock
loope
xor
call
hlt
cwde
sbb
sti
repnz
popf
mov
fwait
inc
enter
mov
out
lahf
lock
cmps
stc
inc
(bad)
popa
mov
test
into
imul
idiv
js
test
push
es
xlat
mov
pop
push
repz
mov
push
rep
test
lea
mov
push
add
jp
(bad)
cdq
jo
into
ins
(bad)
ds
mov
sub
aad
sar
push
shl
dec
cmp
sbb
xchg
cmc
stos
pop
int3
iret
xchg
fdivr
je
neg
xchg
popa
iret
shl
cwde
sbb
popa
sahf
fcom
sbb
add
or
inc
jmp
inc
outs
sbb
into
hlt
or
cli
push
lods
cld
cmps
fild
out
and
adc
into
xor
(bad)
retf
(bad)
mov
pop
jb
fsubr
fadd
rol
dec
(bad)
outs
int
push
arpl
and
les
add
push
inc
cmps
fwait
test
or
nop
fdiv
sub
cs
movs
nop
and
add
gs
xchg
pop
xchg
mov
popf
sbb
idiv
sub
add
mov
imul
pushw
in
rcl
sub
inc
fs
sar
std
addr16
into
cmps
enter
dec
shl
mov
imul
dec
shl
jg
loopne
adc
push
es
int
jecxz
std
sub
loop
dec
mov
inc
retf
jae
stos
sub
xchg
inc
fwait
xchg
xchg
jns
pop
dec
cmp
pop
hlt
add
cmp
jl
inc
imul
add
adc
xchg
mul
movs
into
das
sub
enter
or
jne
iret
repnz
adc
js
(bad)
lods
sub
inc
js
jmp
gs
cmp
loop
add
push
jmp
shr
jp
cmps
mov
clc
rcr
adc
hlt
sub
mov
jmp
idiv
xchg
and
mov
leave
(bad)
xor
jnp
pushf
or
sbb
movs
inc
cmc
loopne
enter
jmp
xor
push
cmp
pusha
out
and
cmp
in
jp
xor
pushf
mov
mov
dec
mov
dec
pushf
das
retf
(bad)
xlat
rol
jne
cmp
aaa
dec
repz
xchg
mov
icebp
push
jecxz
sub
xchg
add
clc
mov
stos
scas
ror
lock
pusha
stos
dec
xchg
mov
cli
mov
push
mov
sbb
xor
dec
ret
and
(bad)
int
out
xor
fs
sub
inc
push
daa
sbb
jmp
dec
aam
dec
push
repz
jmp
dec
dec
push
mov
cwde
aaa
call
inc
ss
mov
(bad)
push
or
or
and
xchg
mov
sbb
pushf
cmp
test
push
dec
aam
std
enter
inc
fsub
in
hlt
mov
adc
push
fimul
clc
jecxz
stos
pop
dec
pop
jno
mov
mov
rcl
xor
arpl
push
pop
fiadd
shr
imul
add
adc
clc
loopne
jae
cmps
mov
call
imul
addr16
lods
mov
mov
and
sub
clc
push
repz
mov
mov
pop
rcr
stc
imul
aad
iret
in
hlt
(bad)
push
test
iret
(bad)
pop
pop
icebp
stc
int
pop
jne
in
inc
ret
jecxz
sub
cmp
mov
jae
xchg
ins
fadd
les
cmp
in
ficom
xchg
xor
rol
lds
mov
clc
push
add
jne
adc
sbb
inc
outs
loopne
in
fmulp
inc
xchg
jecxz
mov
dec
and
loop
dec
inc
cmp
dec
pop
mov
sub
sbb
repnz
pcmpgtb
fwait
jle
mov
repnz
aas
sub
xchg
mov
outs
fld
fidivr
gs
lock
outs
cmp
push
or
sbb
(bad)
dec
sub
mov
cdq
mov
dec
jmp
stos
inc
add
jno
mov
fimul
leave
sbb
push
and
stos
aam
stos
shr
aaa
inc
neg
or
(bad)
ja
rcr
sbb
inc
push
fnstsw
or
js
adc
out
and
iret
and
xchg
loop
mov
jns
cli
(bad)
pop
mov
mov
mov
cmps
push
jp
popf
push
outs
mov
sbb
pop
jne
adc
push
lods
lock
fidivr
add
push
sbb
call
stos
and
ins
cmc
dec
inc
inc
push
out
add
fisttp
xor
cmovle
pop
idiv
xchg
push
aas
inc
cmp
fs
mov
cdq
add
es
not
pop
neg
pusha
cmp
xchg
inc
stos
jge
repz
in
and
xor
dec
sub
push
xlat
outs
add
xchg
pop
push
outs
cmp
in
addr16
in
and
int3
inc
jmp
adc
mov
test
(bad)
ficomp
inc
hlt
(bad)
mov
out
xor
and
mov
pop
(bad)
pop
and
cmp
test
or
xchg
mov
add
call
pop
adc
mov
(bad)
loopne
adc
pop
cs
and
pop
(bad)
jmp
pushf
and
xor
add
iret
add
test
or
jne
lods
or
mov
out
lahf
xchg
les
(bad)
arpl
ds
fs
pop
push
data16
add
xor
enter
push
jns
fwait
mov
inc
(bad)
jno
stos
jl
push
adc
popa
inc
jae
ud0
mov
retf
and
aas
mov
sub
push
jno
cli
push
mov
pop
aad
ins
sbb
leave
repnz
pop
add
mov
movs
fmul
add
add
xlat
out
pop
inc
jo
shr
movs
cmp
inc
jnp
sub
pop
test
sub
ds
loopne
sbb
push
icebp
push
mov
outs
dec
xor
mov
ins
stc
xor
and
mov
fwait
int3
dec
dec
test
ins
xchg
jo
das
cld
mov
sub
aam
pop
in
gs
sub
(bad)
jp
adc
sti
or
mov
and
cdq
loop
movs
sbb
es
xchg
pop
add
test
fstp
ror
jns
test
dec
stos
fld
add
jmp
pop
sub
jb
push
in
stos
test
xchg
sub
mov
clc
cmp
mov
loop
jg
repnz
fs
shl
adc
jno
or
psubq
adc
mov
cmp
pop
arpl
and
xor
ss
outs
adc
xchg
cmp
inc
fstp
sbb
jno
adc
ret
aad
sub
pop
mov
or
dec
das
(bad)
icebp
cdq
in
aam
push
push
jp
mov
dec
aas
xor
xchg
scas
xchg
adc
ins
je
mov
fisubr
push
outs
sub
fmul
add
scas
jnp
xchg
mov
fld
pop
and
mov
fwait
mov
adc
btc
arpl
or
xchg
loope
test
jb
cmc
or
push
or
mov
into
push
cmp
inc
jg
stos
hlt
push
sbb
xchg
stos
cmp
div
add
inc
stc
adc
stc
(bad)
sti
xlat
in
and
aaa
addr16
test
arpl
int
loope
sub
in
inc
in
sub
movs
enter
ss
cmp
add
lahf
dec
cmp
inc
daa
aas
xor
xchg
push
jmp
dec
adc
or
lods
rcr
mov
mov
std
fld
shr
outs
movs
add
and
fiadd
ret
mov
retf
inc
in
and
adc
push
dec
xor
and
pop
pop
mov
retf
push
cwde
jmp
adc
sub
test
and
movs
mov
add
mov
lahf
jg
push
in
pop
cmp
mov
mov
xor
jmp
jmp
in
sbb
jle
jb
xchg
popa
and
into
popa
add
sbb
fsub
inc
adc
sbb
out
pusha
pop
test
retf
inc
adc
clc
cmp
push
dec
cdq
loop
loop
lods
inc
lahf
popa
div
popa
idiv
xchg
adc
outs
sbb
mov
jle
icebp
sub
pop
sub
ins
sub
dec
cmp
pop
mov
dec
(bad)
push
push
sbb
add
in
jmp
or
mov
push
push
cmp
retf
sbb
fcomp
or
sbb
repnz
scas
fwait
jp
fsub
fisub
mov
push
hlt
icebp
or
imul
sbb
xchg
out
popa
or
xor
stc
ins
(bad)
xor
or
xor
neg
xlat
call
push
fcom
aaa
aad
(bad)
mov
mov
shl
jo
jne
(bad)
lods
and
push
stc
jmp
retf
add
clc
mov
add
loope
retf
cs
jbe
xchg
adc
shl
or
mov
or
dec
push
or
jge
dec
dec
stos
inc
mov
stos
mov
adc
and
sbb
jbe
xchg
push
sti
pop
out
sbb
xlat
test
adc
inc
push
jge
jo
movs
mov
(bad)
jno
inc
push
aas
xor
pop
in
or
loope
sub
push
inc
pop
mov
and
iret
push
stc
scas
or
outs
jno
dec
outs
xchg
mov
xor
sbb
aam
enter
das
shr
(bad)
call
test
outs
inc
mov
sub
xchg
and
dec
xchg
(bad)
push
adc
xor
push
icebp
inc
adc
fwait
and
retf
or
jecxz
jbe
cmp
add
push
push
jbe
ja
mov
cli
cmp
aas
adc
xlat
xor
rol
(bad)
out
pop
or
inc
outs
test
call
and
ds
sbb
ret
xchg
xor
dec
retf
fstp
cld
mov
stc
int
and
cmp
lods
pop
xchg
icebp
cdq
mov
aaa
(bad)
dec
movs
dec
jae
xlat
lahf
inc
mov
nop
push
cs
ret
jecxz
xchg
inc
ret
mov
retf
in
sbb
xchg
fld
add
mov
lea
sbb
mov
or
mov
sahf
push
push
ficomp
lahf
push
xor
popf
adc
les
(bad)
hlt
adc
push
cmp
pushf
cmp
or
and
and
sub
adc
mov
sbb
mov
sar
adc
xor
out
(bad)
fisubr
jg
sub
cmp
mov
mov
push
retf
inc
xor
ret
inc
fisubr
xchg
and
call
popa
loop
ror
fcomp
jae
int
sub
push
add
lods
and
xchg
mov
ss
not
mov
push
dec
icebp
stos
dec
xchg
and
cwde
bound
mov
test
and
xchg
inc
das
push
or
adc
xchg
mov
shl
sbb
or
test
stos
mov
and
pop
fistp
ret
loop
push
daa
outs
idiv
jae
fidivr
jbe
xchg
push
push
sar
rol
mov
(bad)
repnz
retf
push
xchg
(bad)
adc
or
sub
jmp
lea
push
lea
and
xchg
retf
mov
aad
inc
repnz
sar
pop
scas
outs
mov
js
call
mov
dec
jecxz
frstor
addr16
mov
and
cmp
xchg
jg
inc
fdivr
push
mov
push
shl
mov
movs
dec
stc
push
xor
cwde
sub
shl
or
mov
sub
cld
sub
sub
shl
retfw
sbb
sbb
fs
pop
test
xchg
jl
or
pop
in
jns
jg
inc
ja
push
push
pop
inc
stc
jo
add
test
cmp
and
jae
shl
ss
xor
cmp
das
int
dec
inc
out
jmp
sbb
inc
hlt
lds
out
cmp
mov
jo
jns
push
add
les
(bad)
jmp
test
pop
mov
sub
das
sbb
push
xchg
fnstsw
xor
cmp
cs
clc
and
cwde
stos
adc
and
mov
dec
jbe
mov
enter
push
sub
or
sub
iret
lock
inc
xchg
xchg
push
xchg
cli
jae
inc
stc
push
xchg
(bad)
das
or
out
jp
xor
lahf
push
and
(bad)
xchg
popa
add
fadd
shl
mov
fdiv
out
nop
add
(bad)
aad
sub
dec
mov
mov
data16
dec
ins
retf
ret
cmc
je
jecxz
and
into
add
inc
cmp
mov
ds
shr
cld
lock
xlat
(bad)
cli
adc
mov
enter
dec
out
xlat
jmp
aaa
je
mov
aaa
out
mov
call
nop
mov
mov
cmp
ins
rol
sbb
shl
xchg
add
jae
mov
(bad)
movs
push
outs
and
xchg
repnz
dec
sbb
mov
cmc
fdiv
pop
clc
push
ins
push
xchg
enter
stc
cwde
sub
lock
xor
lods
outs
sbb
pop
rcr
sar
mov
inc
jge
mov
shr
push
gs
iret
imul
jnp
mov
pop
lock
sub
aad
mov
movs
std
cli
into
fwait
clc
cmp
xor
je
sar
jmp
mov
mov
test
cmp
fiadd
pop
mov
movs
in
lea
popa
scas
mov
popa
jns
stos
adc
enter
imul
sbb
loopne
xchg
cdq
not
cmc
retf
sub
add
pop
fcomp
dec
ss
mov
outs
jmp
test
les
fimul
arpl
bnd
xor
mov
lock
scas
inc
push
add
push
rcl
jle
mov
pop
sbb
add
pop
sahf
iret
(bad)
mov
mov
js
jmp
or
jae
xchg
add
fsubr
pop
repz
or
and
test
add
scas
in
dec
iret
inc
xor
xchg
stos
rcr
cmps
repnz
add
or
ret
imul
sbb
push
push
adc
clc
das
adc
cmp
js
cwde
js
sub
add
inc
dec
mov
mov
enter
mov
mov
mov
iret
xchg
out
mov
cmp
sub
icebp
repnz
(bad)
ficom
sbb
out
sahf
jne
daa
add
push
push
inc
push
aam
mov
jecxz
loop
aam
pop
pop
stos
sbb
adc
or
idiv
sub
or
scas
and
cld
rcl
xchg
mov
cmps
jmp
push
mov
fild
pop
add
mov
ret
or
or
arpl
cmps
cld
jbe
mov
and
push
cdq
push
ins
shl
dec
push
xor
lds
arpl
mov
(bad)
mov
sti
ffree
mov
or
push
ficomp
ins
inc
popf
mov
xchg
addr16
xchg
repz
jbe
xchg
adc
jb
cmp
cmc
fdiv
fcom
jg
es
and
pop
imul
mul
outs
dec
xchg
inc
bound
int
jp
es
xchg
dec
fisubr
dec
adc
jns
in
push
aad
fsubr
data16
xchg
imul
pop
mov
mov
out
or
in
sbb
dec
fwait
jae
out
popa
cmp
dec
cmp
mov
inc
outs
lds
sbb
pop
mov
pop
cmps
fbld
ss
pop
ret
rcl
jno
lock
xor
push
and
clc
jns
clc
repnz
adc
repnz
scas
out
scas
ds
mov
ret
jns
mov
inc
push
fdiv
dec
pop
pushf
ret
jle
xchg
(bad)
stos
xchg
mov
sbb
xor
inc
pop
inc
add
inc
mov
iret
mov
cli
dec
(bad)
xchg
mov
jecxz
pop
in
mov
dec
cmp
loop
cs
inc
mov
leave
mov
dec
cmp
call
add
dec
(bad)
push
push
and
cmc
jno
inc
out
pop
push
repnz
adc
mov
or
pushw
retf
adc
cmp
xor
iret
sbb
sub
mov
scas
pop
xor
adc
xor
js
fsubrp
cmp
push
ret
jb
retf
xor
outs
xor
iret
mov
leave
inc
call
outs
mov
test
test
retf
imul
jmp
shl
rol
mov
sub
pushf
sti
movs
pusha
mov
daa
push
pop
lods
dec
outs
mov
xlat
mov
add
dec
movs
dec
adc
scas
ins
(bad)
mov
adc
jmp
inc
jecxz
adc
or
sbb
test
mov
jmp
xchg
mov
fild
out
mov
sub
jnp
cmp
arpl
pop
inc
into
cmps
pop
ret
mov
mov
jmp
cmp
mov
push
and
sbb
xor
mov
stos
mov
xchg
pop
push
adc
push
add
mov
fdiv
(bad)
mov
xchg
out
(bad)
rcr
stos
test
mov
and
xlat
fs
mov
sub
adc
add
adc
sti
mov
loopne
mov
in
in
ss
aaa
inc
xor
add
fsubr
xchg
out
push
cmp
xor
xsave
aad
shr
adc
call
fcmovu
jae
push
jno
jge
movs
into
fsubp
lods
push
sub
scas
ins
call
shl
mov
mov
dec
jae
gs
(bad)
sbb
stos
cmp
cmp
mov
sbb
je
sbb
cmc
into
xchg
js
hlt
push
ss
and
daa
mov
add
pop
fadd
push
call
inc
jo
inc
jno
mov
or
pop
fsubr
cwde
jnp
mov
mov
cdq
int3
imul
add
mov
ja
test
fidivr
jo
out
fstp
mov
popa
push
fstp
mov
dec
je
jb
dec
cmp
xlat
xor
and
(bad)
das
sbb
popa
rcr
movs
int
getsec
push
add
cmp
cmp
xchg
jae
pop
stc
jge
loop
mov
push
or
(bad)
in
fadd
sub
cmps
ins
xor
lock
sahf
popa
jecxz
dec
iret
mov
jo
shr
sbb
stc
lods
pop
or
scas
scas
push
mov
and
in
ds
mov
(bad)
mov
and
pop
push
xor
ins
je
mov
retf
fidiv
sti
dec
(bad)
test
xchg
repz
sub
inc
mov
or
movs
xor
out
repz
(bad)
mov
sahf
mov
out
aad
shl
sbb
push
cmp
movzx
stc
retf
fld
sub
inc
mov
pop
jns
rol
in
xchg
stos
pop
jmp
das
ins
std
or
ror
cs
sar
outs
push
dec
adc
pop
and
les
repz
mov
popa
sbb
jne
xchg
push
inc
inc
outs
and
fstp
or
mov
cdq
mov
movs
das
cld
sub
or
daa
push
mov
rcr
mov
xchg
adc
sub
xchg
lds
(bad)
jg
push
cld
je
push
push
mov
mov
retf
inc
iret
and
sub
jecxz
lods
push
ret
movs
aaa
mov
jge
lods
popf
and
or
mov
push
std
xchg
stc
adc
or
pop
(bad)
xor
cmps
scas
mov
jmp
pop
xor
pop
fucomp
nop
mov
jmp
outs
call
dec
push
pop
(bad)
sbb
cmp
adc
push
lea
sahf
dec
imul
imul
ret
(bad)
mov
icebp
fdiv
xor
mov
adc
xor
adc
mov
cli
cmp
repnz
int
(bad)
mov
in
lock
fs
nop
and
retf
repnz
je
in
mov
dec
(bad)
xor
call
outs
lods
mov
xor
push
pop
inc
movs
leave
fdivr
lds
pop
aad
(bad)
clc
mov
add
in
mov
push
aaa
jle
repz
mov
sar
cld
mov
repnz
dec
ja
daa
test
repz
scas
mov
mov
push
jmp
or
scas
stos
ss
aad
aam
test
popf
pop
test
dec
jb
data16
pop
pop
jno
jmp
inc
push
sbb
cmp
dec
or
ficomp
push
adc
in
nop
xor
lods
xchg
sub
int
cs
mov
les
pop
test
fwait
mov
les
cmc
mov
pop
(bad)
fcom
movs
(bad)
aad
xor
mov
ret
xchg
test
sub
pusha
jb
mov
push
je
xchg
in
pop
dec
push
inc
shr
movs
push
push
movs
jns
adc
add
lea
ret
xor
mov
sbb
repz
push
lds
sub
cmp
pop
and
adc
and
movs
movs
mov
in
dec
ror
xchg
add
mov
mov
mov
ins
pop
jno
sbb
or
xchg
mov
mov
imul
imul
loopne
(bad)
add
jmp
sbb
pop
push
call
xchg
in
mov
call
mov
int
icebp
inc
enter
lods
fst
pop
mov
cmps
add
in
fist
or
int
hlt
stos
mov
mov
push
fsubr
enter
pop
(bad)
mov
mov
inc
cmp
adc
and
frstor
test
sub
std
rcl
out
pushf
lods
xchg
push
int3
jo
xchg
pop
movs
cmp
dec
aam
mov
scas
(bad)
mov
cld
lea
and
enter
stc
adc
mov
test
mov
sbb
xchg
dec
pop
loop
ret
jle
inc
mov
push
cs
ins
dec
ror
mov
pop
sub
ret
scas
lea
mov
xchg
xchg
shl
push
ss
aam
enter
mov
pop
cmp
mov
outs
xchg
push
jns
in
push
xchg
(bad)
std
adc
jle
mov
dec
(bad)
in
test
push
cmp
test
sub
fwait
enter
ins
xchg
mov
inc
rol
iret
push
and
daa
add
mov
jl
aas
fwait
add
in
mov
cmc
cmps
mov
xchg
aad
push
sbb
dec
pusha
stos
stos
imul
push
cld
scas
push
shl
sbb
pop
sub
xchg
sti
cmp
arpl
jg
popa
mov
and
sub
xchg
mov
push
sbb
ds
aas
movntq
out
mov
inc
sbb
stos
mov
mov
jns
mov
retf
(bad)
sub
pop
clc
add
pushf
popf
mov
bound
inc
nop
mov
pop
dec
inc
sti
cmps
shr
sub
push
setne
int3
dec
(bad)
add
ins
and
(bad)
loop
lods
fcomip
sub
mov
or
and
dec
push
pop
adc
mov
pop
sbb
rcl
mul
imul
sbb
shr
dec
sub
adc
dec
adc
imul
xlat
adc
lock
jnp
cmps
sar
fldcw
aaa
jmp
loop
xchg
popa
add
stos
arpl
mov
stos
out
cmps
daa
ds
jno
push
(bad)
pop
or
adc
outs
and
adc
cmp
xchg
cwde
repz
(bad)
pop
mov
enter
outs
mov
(bad)
fisub
and
xor
mov
adc
dec
push
fsub
repz
cmps
out
mov
in
lds
leave
mov
fistp
or
inc
adc
(bad)
xchg
cmp
arpl
iret
pushf
xchg
push
cmp
sub
inc
xor
inc
xchg
jl
add
enter
or
mov
rcr
cmps
cld
jbe
push
lds
adc
mov
lahf
mov
ret
inc
pushf
dec
into
aaa
adc
and
dec
leave
dec
mov
mov
sar
shr
lds
lea
popf
jae
push
fild
inc
jmp
movs
mov
call
cmp
scas
leave
jmp
test
xor
cmps
pop
jmp
xor
inc
icebp
daa
shr
lahf
add
mov
js
push
push
jae
xchg
xchg
adc
hlt
or
out
push
fisttp
xchg
xor
scas
(bad)
lahf
imul
cmps
inc
mov
adc
add
or
add
and
loope
ins
call
push
leave
into
test
adc
cmp
rol
mov
pop
jb
retf
pop
push
mov
daa
in
das
dec
sahf
imul
add
rcl
test
shr
lds
dec
pop
std
cld
nop
pop
xchg
push
add
ret
adc
xchg
das
enter
pop
ret
pop
bound
push
(bad)
pop
mov
push
(bad)
mov
int3
aad
shr
rcl
test
cwde
xchg
ss
movs
xchg
sti
lods
clc
in
jge
imul
fucomi
cs
(bad)
jno
test
or
fcomp
iret
addr16
icebp
(bad)
pop
fcmovnu
cmp
push
ins
add
xchg
adc
mov
rol
add
fsub
pop
push
retf
shl
mov
popa
fwait
cmc
jnp
sar
xchg
rol
shl
push
aam
fnop
jge
cwde
or
cmp
inc
ja
test
icebp
ds
(bad)
scas
shl
mov
inc
fincstp
jl
mov
lahf
shr
mov
movs
cmc
inc
mov
pop
aas
jns
rcr
(bad)
clc
ffree
pop
fdiv
ds
mov
and
arpl
test
jp
push
call
add
popa
mov
push
cld
in
ja
(bad)
inc
scas
popa
sti
hlt
lods
sbb
cmp
mov
jbe
out
xchg
fucomp
push
adc
sbb
test
inc
ret
call
(bad)
mov
das
dec
call
sbb
popa
loopne
jo
mov
sbb
add
lods
(bad)
jae
adc
std
mov
xor
test
pop
xchg
pop
pusha
adc
inc
push
xor
neg
inc
leave
das
cmp
pop
xor
mov
imul
sub
cmp
cs
repnz
cli
adc
movs
cmps
adc
sub
jmp
aas
cmp
ss
lock
xchg
mov
imul
jbe
xchg
je
fist
adc
pop
push
imul
and
movs
stc
lahf
adc
sbb
sub
inc
and
sub
shl
xchg
int3
out
jmp
sbb
push
add
(bad)
lea
rcr
retf
imul
cld
inc
movs
mov
jp
and
aad
lock
and
inc
mov
xchg
retf
jp
push
push
jb
movs
fdiv
mov
sub
outs
dec
jp
inc
lock
xchg
int3
fs
aad
pop
pushf
outs
inc
stos
lods
sub
ret
movs
call
in
imul
test
test
cmp
xor
push
push
adc
cwde
and
cmp
add
lods
mov
xlat
push
cli
jo
(bad)
pop
cmc
jbe
xchg
cwde
cs
(bad)
cmp
xchg
cmp
and
ins
test
xchg
xchg
pop
xchg
shr
pop
push
ss
jmp
mov
push
add
and
test
push
inc
in
push
dec
div
ss
add
imul
sub
mov
hlt
jl
fwait
cmc
ja
or
sbb
retf
pop
pop
movs
cmp
mov
retf
fwait
adc
push
repnz
push
or
pop
ins
retf
mov
ror
aad
idiv
pop
sbb
cmps
add
or
cmps
arpl
ret
and
mov
inc
int
xchg
shl
push
sub
cmp
pop
jb
lods
(bad)
sub
or
fnstsw
adc
or
xor
push
retf
cwde
pop
adc
inc
arpl
mov
(bad)
call
outs
cmps
lds
jno
push
enter
(bad)
xchg
out
cs
mov
dec
sub
sti
shr
xchg
xchg
or
and
cmp
fprem1
jno
pop
mov
shl
jmp
pop
scas
rcl
out
bound
dec
push
adc
push
mov
fnstenv
and
stc
mov
or
imul
popf
mov
cs
inc
sbb
jmp
inc
jl
jmp
(bad)
out
sub
movs
and
sub
pop
mov
or
ds
aam
push
and
lock
jbe
and
in
fisttp
add
test
inc
mov
or
pushf
or
sbb
leave
xor
in
xchg
or
and
mov
movs
dec
es
cmps
dec
pop
je
jmp
cmp
enter
xor
add
ret
mov
cs
adc
sub
mov
jo
popa
sub
hlt
in
bound
mov
enter
adc
mov
xchg
push
inc
out
out
dec
mov
test
mov
scas
jge
pop
cwde
dec
dec
inc
adc
scas
and
push
stos
frstor
mov
pusha
jne
mov
data16
frstor
mov
bound
movs
mov
clc
xchg
xor
retf
not
mov
movs
int
mov
pop
inc
dec
movs
sub
ja
jno
mov
sbb
cli
cmp
jp
fiadd
sub
mov
pushf
mov
in
aaa
es
sbb
add
or
ins
sub
push
mov
(bad)
xor
data16
in
bound
fidivr
push
mov
aas
push
adc
and
xor
mov
clc
ss
out
scas
es
fst
in
sub
xchg
lock
mov
jo
repnz
(bad)
push
mov
test
sub
adc
mov
cmp
mov
out
int
fnstenv
sbb
(bad)
jne
xor
(bad)
push
jns
or
clc
mov
push
inc
mov
int
cmp
ins
rcl
aaa
ret
push
or
xchg
in
ins
retf
add
lea
jmp
cmp
bound
(bad)
fdiv
fxch
fsub
mov
jo
pushf
push
lods
mov
popa
jns
mov
xchg
enter
fiadd
movs
xor
mov
addr16
fadd
xor
xchg
cmps
(bad)
in
add
out
int
add
je
lahf
not
sbb
xchg
sar
test
dec
push
and
or
daa
jge
or
jp
jp
inc
add
cmp
test
inc
repnz
imul
fdiv
aad
imul
scas
aaa
cmp
push
bsr
or
das
mov
cmp
stos
(bad)
ds
mov
xchg
and
pop
or
mov
add
test
xor
inc
mov
ret
sub
and
adc
hlt
jno
hlt
cmps
js
xchg
or
or
mov
mov
fistp
pusha
pusha
push
mov
push
push
mov
pop
xchg
call
adc
sub
clc
cld
sti
pop
iret
and
cwde
hlt
mov
add
lods
cli
movs
mov
lods
pusha
fist
adc
fwait
js
int
out
movs
inc
in
inc
and
fimul
fs
fisttp
cmovae
xchg
mov
jl
jnp
fisub
dec
and
xchg
outs
pop
repz
lea
and
mov
mov
cmc
and
mov
push
sub
sti
cmc
ficom
mov
sahf
es
mov
imul
imul
mov
fldenv
call
mov
mov
lds
ficom
dec
mov
mov
enter
and
mov
jge
cdq
je
ret
mov
aam
or
cmp
mov
pop
jmp
jle
xor
push
jle
push
fist
jno
adc
sub
cmps
push
scas
jns
adc
in
jns
stos
ror
add
(bad)
hlt
hlt
and
push
xor
scas
bound
or
jns
lods
popf
lods
pop
lods
and
push
shl
sbb
sbb
push
cwde
xchg
shl
js
lds
adc
and
ins
and
jmp
not
sbb
in
es
(bad)
retfw
shl
fsub
repz
add
call
dec
fist
lds
mov
pop
fisub
scas
xor
inc
dec
in
cmp
ficomp
popf
and
and
xchg
rcl
xor
scas
cmp
mov
lea
ds
sub
inc
test
mov
jecxz
pop
pop
aas
mov
rcl
mov
cmp
pop
inc
dec
adc
sbb
repz
xor
mov
xchg
pop
test
pop
and
xchg
adc
adc
es
rol
rcl
cld
or
sub
dec
imul
pop
out
int3
ss
and
leave
dec
movs
bound
xchg
pop
pop
cmps
jo
or
in
jmp
or
ins
mov
lods
repz
cwde
sbb
int3
stos
test
(bad)
and
cmp
and
imul
lahf
cwde
jle
adc
enter
nop
dec
mov
xchg
add
inc
or
shr
into
jecxz
fild
dec
xchg
lds
sub
cmp
dec
ins
push
add
fcmovnbe
leave
dec
sub
idiv
mov
icebp
cmp
addr16
clc
test
adc
add
pop
jbe
and
aas
pop
adc
mov
out
pop
dec
and
data16
stos
std
adc
sahf
fidivr
mov
fincstp
je
xchg
push
pop
mov
aam
ret
xchg
push
jecxz
push
and
int
hlt
imul
ins
sbb
sub
xlat
sar
dec
jne
repnz
pop
adc
call
dec
loopne
jno
xor
pop
dec
add
jmp
inc
mov
inc
jecxz
jge
push
je
sbb
lea
sbb
mov
sbb
je
or
(bad)
out
test
lahf
push
mov
test
jecxz
adc
push
jg
or
xor
add
mov
cmp
idiv
jns
outs
call
sub
cmps
mov
out
out
add
in
sbb
in
mov
outs
es
bound
or
iret
cmp
test
fldenv
cmps
loope
sub
inc
imul
test
dec
mov
test
xor
or
cs
mov
mov
add
sbb
jecxz
adc
inc
mov
jno
popf
ret
mov
loope
adc
jmp
scas
jmp
aaa
add
jmp
test
sbb
cdq
jmp
xchg
xor
es
xchg
loopne
sub
loopne
cmp
lods
stos
add
dec
adc
mov
xor
call
mov
out
inc
cmp
mov
test
push
adc
cmps
xor
ror
idiv
sub
ret
xor
(bad)
in
mov
in
imul
pop
add
dec
inc
aam
test
sahf
call
cld
ret
fwait
shr
gs
xor
sub
or
mov
test
push
cmps
push
fistp
test
shl
ja
ds
mov
xchg
pop
push
cli
inc
xor
push
loopne
(bad)
and
push
mov
ret
fs
xchg
outs
ja
pop
add
and
cmp
loopne
pop
leave
add
adc
jl
jb
mov
sub
xor
xchg
mov
(bad)
mov
daa
push
stos
pop
outs
xchg
or
pusha
scas
jmp
and
in
sti
sbb
jecxz
cli
out
dec
jmp
mov
jns
cmp
or
xchg
inc
mov
xchg
dec
pop
sbb
cmp
stc
jl
sbb
cmp
push
pop
call
xchg
cmp
pop
and
nop
sbb
add
ins
fisubr
sub
push
(bad)
bound
in
out
xchg
leave
mov
sbb
cmp
movs
add
mov
jnp
inc
mov
push
jl
push
mov
push
push
enter
sahf
pop
ficomp
mov
xor
pop
pop
pop
push
repz
in
push
pop
add
sar
mov
xchg
sbb
xchg
mov
ins
xchg
loope
pop
mov
fistp
rol
repnz
or
jp
and
push
cmps
inc
sub
add
mov
std
jo
mov
popaw
test
cmp
rcr
out
xchg
sahf
ins
jp
and
adc
mov
dec
mov
(bad)
in
cmp
and
sub
(bad)
int3
jns
xor
mov
push
sub
aam
inc
jecxz
xchg
jp
jp
(bad)
out
push
fst
mov
movs
fs
(bad)
mov
in
leave
fld
xor
mov
int3
mov
dec
test
push
add
adc
inc
mov
mov
sub
jg
mov
mov
mov
add
mov
sbb
and
dec
stos
je
mov
test
repnz
pop
add
js
xchg
shl
inc
inc
mov
add
inc
ins
add
mov
stos
lock
les
imul
and
add
shl
jg
xchg
mov
inc
mov
call
mov
mov
js
mov
ins
inc
(bad)
jae
mov
mov
mov
not
movs
xor
imul
xchg
arpl
std
cld
test
mov
dec
inc
es
popf
jmp
or
outs
adc
sahf
jmp
pop
push
pop
add
and
jo
clc
xor
push
addr16
vpsadbw
cmp
retf
fdivr
or
outs
push
fild
lods
xor
inc
adc
xor
jecxz
mov
rcr
stos
push
cmps
push
ss
mov
mov
cmps
out
fcomp
popf
sbb
pop
cmp
push
rol
add
pop
sub
retf
lock
xor
ins
fdiv
push
dec
int
push
in
adc
or
rol
les
xor
sub
inc
test
cmp
pusha
in
mov
(bad)
repnz
stc
scas
add
out
adc
push
std
ret
push
xor
rol
je
lahf
lahf
add
pop
into
xor
pop
dec
push
xor
stos
push
je
jp
mov
ja
xchg
xor
(bad)
fisttp
xor
ins
mov
scas
into
xor
aad
iret
push
or
jnp
into
jnp
das
(bad)
nop
push
mov
(bad)
jae
dec
fsub
shl
lods
test
fild
pop
movs
mov
adc
inc
and
sahf
adc
cmp
mov
pop
stos
jg
ss
pop
dec
jmp
xchg
lock
rcr
xlat
or
cmp
test
test
pop
adc
call
shl
mov
inc
out
xor
push
test
fisubr
imul
add
bound
xchg
lahf
dec
(bad)
rcl
and
data16
cdq
call
and
push
iret
push
aad
pop
jo
or
pop
daa
xor
mov
mov
dec
neg
inc
das
mov
or
sbb
pop
jne
loope
ins
in
mov
in
pop
call
and
stos
jae
popf
dec
cwde
sbb
cli
fs
xchg
gs
retf
add
cmp
enter
inc
js
loopne
inc
gs
leave
or
mov
rcr
sbb
ins
mov
cmp
aad
add
lock
test
int3
arpl
fsub
stc
pop
cli
ins
test
stc
pop
sbb
sbb
xchg
loop
imul
mov
test
aas
stos
stos
inc
add
neg
or
add
and
jo
and
and
stc
sub
adc
jnp
jle
and
jge
xchg
lea
or
jb
jae
mov
xchg
not
test
adc
cli
scas
je
inc
cmps
mov
movs
test
scas
adc
(bad)
(bad)
rcl
xchg
test
out
out
loopne
jbe
mov
stos
out
pop
stc
or
pop
in
popf
jae
xor
js
mov
cs
jmp
stos
in
xchg
daa
push
mov
xor
rcl
push
dec
adc
or
add
push
push
mov
add
mov
pop
hlt
inc
jne
jmp
fbstp
hlt
fmul
ins
push
pusha
lahf
rcl
sahf
jp
mov
mov
rcr
test
mov
xchg
add
test
or
jae
xchg
dec
push
retf
cmp
(bad)
and
mov
sti
jmp
mov
cdq
dec
mov
cwde
mov
xor
mov
push
xor
inc
push
xchg
sub
gs
xor
cmps
aad
ucomiss
or
mov
mov
mov
les
xchg
pop
dec
sbb
ret
mov
or
repz
sub
inc
sbb
nop
cmc
xchg
mov
xchg
enter
lahf
ror
dec
sbb
pusha
out
add
mov
scas
imul
stos
push
xchg
xor
inc
mov
jge
cli
add
jbe
adc
clc
adc
cmp
cmp
mov
adc
sub
test
jmp
add
mov
out
sbb
lods
and
mov
lahf
pop
xchg
jl
mov
xchg
jb
jnp
leave
lds
xchg
std
add
mov
xchg
out
or
bound
lods
outs
popf
outs
cld
push
push
jne
cmp
arpl
mov
in
cli
inc
ins
pushf
mov
in
dec
sbb
sbb
lods
mov
dec
adc
jae
inc
inc
jl
mov
pop
inc
xor
fcmovnbe
sbb
adc
cmp
mov
mov
sti
pop
outs
add
mov
xchg
sub
into
loope
adc
imul
loope
rcr
cmp
mov
fwait
sub
popa
pusha
mov
rcl
scas
sbb
sub
sbb
sahf
movs
test
xor
scas
push
push
pop
xlat
fldl2t
ds
sub
retf
js
retf
pop
add
or
bound
mov
xchg
jecxz
leave
xchg
sub
xor
xor
jl
shl
mov
jge
aad
scas
inc
ins
cli
fwait
int3
fisttp
push
sbb
je
enter
add
fwait
xor
out
and
cs
adc
mov
jns
int
loope
mov
and
test
popa
retf
push
stos
jge
push
dec
push
inc
adc
inc
popa
xchg
(bad)
test
push
mov
cmp
add
leave
fmul
clc
inc
outs
jbe
mov
aam
and
push
div
cld
(bad)
int
ins
jmp
into
inc
cli
push
test
daa
jns
ss
sbb
and
push
xchg
push
popa
pop
pop
inc
mov
ins
add
push
je
cmps
pop
and
lods
inc
ins
cmp
int
fwait
or
mul
iret
sub
fist
cld
inc
std
push
push
imul
add
pushf
std
jb
daa
mov
adc
sbb
ficomp
test
cld
jbe
psubusw
mov
inc
sub
sar
pusha
sbb
mov
jg
dec
adc
sahf
or
dec
inc
pop
ss
push
movs
jae
sub
icebp
xchg
mov
xchg
imul
(bad)
and
pop
rcr
test
cmc
icebp
inc
fwait
add
ror
mov
shr
cmp
aas
jge
push
cli
sbb
je
gs
pop
gs
aas
js
js
pop
sbb
adc
push
push
pop
arpl
cmp
xor
sub
rcl
sub
les
aas
jno
dec
xchg
mov
mov
mov
xor
addr16
pop
dec
adc
rol
(bad)
std
lds
xchg
sub
pop
pop
not
jp
sahf
ret
add
xor
push
cmps
dec
fcomp
call
add
sub
iret
fs
imul
loope
ja
(bad)
xchg
xchg
daa
aad
pop
mov
xor
jbe
and
sti
fsubr
pop
jbe
xor
loope
add
adc
push
rdmsr
cmc
inc
xchg
lds
push
xor
test
leave
cmps
mov
stos
ds
or
jp
shl
ret
leave
retf
and
aad
cmp
xchg
in
pop
scas
aam
mov
cmp
loope
(bad)
shr
enter
cld
lods
lea
inc
jbe
add
pop
int3
leave
lods
je
jmp
push
dec
shl
pop
mov
fwait
ret
loop
jmp
sub
jnp
pop
aas
gs
stos
mov
jp
push
cmp
lea
mov
xor
cmp
fstp
mov
not
js
xchg
mov
push
jp
mov
cs
mov
lea
jno
adc
test
(bad)
jle
sar
and
push
jmp
jmp
je
xchg
cmp
adc
inc
clc
pop
int
sub
and
jmp
data16
add
mov
jno
pop
add
inc
stos
ins
fiadd
test
mov
cmp
push
ret
push
jno
mov
nop
cmp
xchg
rcr
push
fcmovne
stc
ret
in
push
lods
jns
stos
jno
mov
xchg
test
movsx
inc
jno
aad
out
add
retf
push
add
sbb
xchg
adc
loop
mov
loopne
add
or
aam
pushf
push
pop
adc
sbb
repnz
repz
mov
je
sub
or
daa
ret
aam
mov
in
xchg
add
add
add
jp
fs
xor
pushf
mov
add
mov
cdq
xlat
ret
in
mov
dec
add
das
in
test
and
gs
sbb
mov
dec
and
jp
std
push
out
jecxz
loop
jbe
push
repz
icebp
xor
or
lods
mov
sti
adc
xchg
sahf
out
repz
adc
adc
(bad)
fild
loop
in
icebp
lods
(bad)
stc
add
xor
fwait
sub
xchg
test
cmc
inc
loopne
stos
dec
hlt
(bad)
rcl
outs
mov
pop
mov
mov
push
mov
lock
retf
les
and
dec
xchg
or
mov
sar
les
clc
mov
mov
and
adc
mov
inc
push
fist
adc
mov
xchg
iret
jp
dec
pop
fadd
pop
js
adc
inc
mov
and
shr
in
sbb
iret
pop
pusha
sbb
add
outs
mov
or
test
cmp
dec
jmp
xchg
dec
mov
xor
outs
jne
dec
xlat
call
iret
jno
push
push
lock
out
stos
jb
cwde
hlt
sbb
pop
gs
xchg
adc
dec
jnp
ja
fadd
pop
adc
sub
fstp
shl
(bad)
mov
dec
dec
fdivr
pushf
fwait
sub
inc
ror
sbb
pop
loope
jecxz
fcom
pop
bound
sbb
test
sar
push
dec
and
sbb
push
cmp
pop
fstp
scas
ins
dec
retf
sbb
dec
(bad)
movs
dec
mov
aam
push
fld
fisttp
sbb
pop
sbb
(bad)
loope
rcl
and
adc
(bad)
mov
dec
fcomp
and
add
ins
outs
loope
outs
add
lock
inc
cs
popf
movs
sbb
xor
dec
cdq
call
ret
js
sbb
push
add
dec
pop
mov
retf
pop
sbb
cmp
test
test
adc
dec
fadd
fcom
xor
enter
jbe
bndstx
je
fnsave
push
std
mov
pop
mov
or
add
repz
pop
cmp
adc
jp
or
dec
inc
xchg
push
cwde
xlat
or
mov
push
fimul
movs
lods
add
lea
fwait
dec
jmp
mov
(bad)
data16
pop
lock
xchg
or
lahf
cdq
mov
jecxz
dec
xchg
inc
lock
movs
div
cmp
sub
mov
sub
sub
jo
xor
cmp
cmps
mov
sbb
aad
jbe
ret
jmp
mov
pop
ins
mov
and
mov
and
or
jmp
in
sub
pop
jb
pusha
or
and
(bad)
fisttp
into
push
movs
mov
test
mov
in
jnp
mov
les
and
jbe
test
fstp
and
(bad)
sbb
daa
mov
jecxz
aas
pop
imul
jns
inc
xor
dec
out
xlat
mov
std
push
adc
(bad)
int3
iret
or
fnstcw
dec
aad
loopne
and
out
fcmovu
add
or
shl
(bad)
in
xchg
xor
inc
push
inc
mov
pop
mov
(bad)
jmp
jecxz
(bad)
loop
lds
test
jg
xlat
xrstors
int3
jbe
push
loop
mov
stc
jne
sub
lods
cmp
call
adc
pop
rol
(bad)
and
call
pop
add
xchg
jb
xchg
in
sub
xchg
inc
xchg
xchg
(bad)
mov
jae
fidivr
ins
pop
mov
out
inc
in
dec
adc
adc
or
fnsave
test
stos
and
cmc
pusha
imul
cmp
lds
add
ror
(bad)
adc
ja
das
push
cmp
adc
cwde
sar
mov
cmp
mov
add
mov
lods
inc
mov
nop
iret
or
aas
mov
cmp
lods
push
push
imul
mov
pop
xchg
cs
mov
je
ds
movs
mov
mov
lock
inc
xor
or
in
adc
mov
mov
mov
xchg
(bad)
pop
test
jle
dec
and
dec
ret
in
mov
cli
inc
test
cmp
jns
clc
dec
inc
sub
pop
and
enter
shr
or
xor
adc
mov
cmc
jge
pop
pop
push
add
loop
gs
add
xor
push
pop
out
retf
andps
out
test
movs
dec
iret
pop
sub
ins
das
dec
ret
add
adc
push
or
mov
fbld
push
jle
xor
sbb
fimul
cmp
outs
in
jno
jmp
addr16
sar
rol
ret
inc
mov
mov
jl
jae
and
jne
or
add
loop
gs
cdq
mov
mov
fld
dec
out
(bad)
mov
dec
jno
mov
or
jae
cmp
pop
add
lahf
inc
or
aad
push
mov
adc
xchg
lds
and
mov
jae
outs
sbb
stc
jbe
mov
(bad)
mov
adc
les
adc
addr16
mov
and
or
inc
pop
jmp
(bad)
mov
int3
jp
gs
and
(bad)
popf
mov
sub
pop
loope
push
rcl
pop
jae
fnstsw
lea
sub
pop
or
out
dec
scas
retf
or
iret
lods
shl
cwde
or
(bad)
pop
retf
jecxz
in
xor
xchg
adc
popf
retf
push
pop
cmp
lock
rol
mov
int3
adc
pop
in
mov
jno
mov
sub
leave
(bad)
repz
stos
inc
in
fs
xor
stc
jbe
pop
sti
fnsave
inc
mov
adc
ja
or
push
pop
ins
pop
and
lock
xor
xor
xor
mov
cmp
push
add
fsubr
out
neg
jno
xor
(bad)
lods
sahf
xchg
cs
cmc
dec
jecxz
imul
aad
pop
push
cs
jo
aas
mov
cmps
pop
adc
jle
call
sbb
js
ins
mov
lods
jo
inc
sub
pop
cmp
call
pop
sbb
ret
fld
pop
frstor
push
test
or
movs
(bad)
aad
and
cld
dec
or
aam
sub
pushf
inc
ja
jb
stos
outs
test
into
cmp
ins
in
cmps
jmp
stc
retfw
lods
ficom
dec
fucomp
cwde
clc
ja
sahf
pushf
mov
push
dec
cmp
mov
pop
movs
addr16
and
dec
test
push
inc
addr16
ss
pop
mov
and
cmp
and
retf
stos
bound
and
sub
jne
sbb
push
imul
std
stos
fidiv
in
arpl
or
rcl
xchg
div
(bad)
adc
inc
add
dec
(bad)
or
shl
pop
mov
icebp
jbe
adc
mov
in
pushf
jg
sbb
stos
pop
out
lods
xchg
mov
push
mov
bound
jae
sub
pop
or
ins
jecxz
push
lock
addr16
retf
inc
dec
inc
fdivr
fcomip
inc
popa
popa
in
dec
cs
mov
push
cmp
mov
leave
inc
add
call
push
aas
xor
aad
push
into
les
push
pop
les
leave
inc
addr16
lock
js
fld
mov
mov
pop
mov
rol
xchg
clc
(bad)
push
jmp
les
dec
add
aas
test
cmp
xor
cmps
ret
cmp
(bad)
jae
repnz
fwait
lds
mov
add
sub
xchg
inc
xlat
xchg
ja
add
ja
mov
push
(bad)
(bad)
pop
imul
nop
(bad)
cdq
das
cmc
pop
stos
xchg
shl
(bad)
or
(bad)
cli
std
mov
arpl
lock
call
cmp
cmp
aaa
mov
int3
out
dec
add
mov
iret
adc
dec
xchg
icebp
push
cmp
xlat
jge
rcl
mov
mov
or
push
mov
mov
fisubr
call
jg
ss
push
call
mov
mov
sbb
and
jbe
sar
out
jbe
mov
or
xchg
mov
add
loopne
xchg
loope
ret
or
pop
call
dec
neg
cmp
adc
lds
stos
jge
lds
clc
mov
rol
fadd
mov
in
xor
pop
jae
mov
add
test
shr
gs
mov
push
add
rcl
pop
mov
mov
cld
jbe
or
cwde
and
dec
inc
lods
inc
daa
cmc
sbb
pusha
ret
rcr
mov
inc
sub
mov
loop
mov
setl
fwait
add
test
dec
and
(bad)
push
pushf
sbb
in
aad
add
sahf
and
movs
nop
(bad)
rcl
pop
xchg
inc
cmp
mov
and
daa
pop
jecxz
xor
adc
add
mov
cli
pop
lds
fst
out
mov
xor
jbe
je
shr
add
sub
dec
or
fisubr
jp
fcom
add
shr
psubd
shl
jecxz
in
call
sub
(bad)
std
sub
sbb
das
dec
mov
cmp
sbb
jae
adc
fst
xor
lds
push
push
outs
in
hlt
jb
push
test
mov
cmps
stos
xor
push
inc
mov
xlat
jb
fs
jp
lods
cmps
xchg
and
mov
lock
or
pop
jge
mov
xchg
(bad)
cli
adc
and
cdq
pop
mov
call
adc
iret
andnps
sahf
mov
ret
jmp
or
dec
inc
or
xchg
shl
xor
pop
jne
(bad)
loope
cmp
cwde
iret
pop
das
add
and
retf
out
jnp
or
outs
push
gs
div
inc
(bad)
fsub
fs
iret
call
leave
xor
lods
mov
mov
mov
sub
ja
pop
retf
mov
push
push
(bad)
jmp
int3
mov
mov
mov
sub
cmc
jle
outs
dec
sub
pop
inc
adc
(bad)
(bad)
out
or
push
jl
outs
xor
xor
adc
data16
add
mov
in
cmp
mov
mul
or
push
in
xor
push
pop
pop
add
cmc
jge
jae
add
in
mov
bound
jne
and
mov
into
sbb
jb
leave
test
xor
fsub
(bad)
cmp
mov
sbb
jecxz
clc
cmp
mov
movs
test
xlat
retf
bound
adc
cmp
jl
cmp
jmp
outs
mov
cmps
push
pop
xor
cmp
adc
sbb
xor
jnp
push
jb
sbb
mov
mov
aas
jbe
push
sbb
push
std
rcr
jle
sub
adc
push
push
dec
mov
jle
or
cmps
(bad)
jae
adc
add
lea
out
or
xor
mov
scas
adc
add
mov
std
pusha
les
adc
mov
adc
mov
xchg
out
xchg
shl
adc
int3
mov
repnz
dec
es
add
in
not
mov
cmp
cmp
outs
ins
mov
inc
mov
pop
xchg
xor
jmp
(bad)
ds
lea
pop
push
cwde
sub
imul
jmp
inc
jecxz
sub
sbb
aad
call
inc
push
cdq
aad
scas
sbb
mov
stc
(bad)
push
daa
and
jecxz
rcl
dec
adc
outs
xchg
xchg
mov
sub
call
in
out
and
xchg
sbb
jg
cld
rol
call
lods
hlt
sub
pop
jns
inc
mov
cmp
pushf
push
dec
mov
imul
mov
out
sub
push
and
mov
mov
mov
data16
xchg
sar
rol
in
scas
push
pop
sbb
inc
fs
xchg
in
push
addr16
sti
adc
cli
mov
jb
loope
add
pop
lods
ja
xlat
jl
xor
jle
lahf
inc
mov
fwait
inc
pop
fisttp
cld
jmp
inc
repnz
mov
adc
pop
mov
mov
mov
mov
mov
fwait
or
ja
mov
and
lahf
mov
push
ficomp
xchg
retf
cs
add
std
out
movs
lds
adc
scas
or
mov
jae
mov
(bad)
mov
sbb
inc
or
xor
pop
fwait
bound
jnp
mov
jmp
dec
enter
mov
or
and
fwait
jae
lods
push
sbb
jo
mov
pop
push
js
repnz
mov
mov
shr
inc
mov
fmul
(bad)
lea
cmp
(bad)
cld
sbb
fisubr
nop
daa
push
adc
test
in
mov
dec
pop
int
mov
les
jp
ret
rcl
jne
cmp
dec
gs
in
mov
xchg
push
pop
pop
lock
(bad)
xchg
adc
rcl
sbb
jne
push
xor
pop
adc
div
loopne
(bad)
dec
test
and
(bad)
push
rol
jmp
sbb
stos
in
inc
aam
scas
xchg
jl
nop
push
leave
fdivr
add
test
dec
mov
lods
dec
retf
lock
adc
mov
pop
mov
popa
push
rol
scas
adc
mov
xchg
loope
pop
xor
inc
pop
nop
pop
ret
pop
mov
add
mov
invd
mov
cli
xchg
xchg
imul
out
shr
add
dec
cwde
add
inc
les
int
(bad)
xor
repz
push
aam
fistp
bound
adc
outs
add
push
pop
pop
repnz
rcl
inc
out
add
sahf
and
adc
adc
xchg
ja
jno
dec
scas
dec
adc
sbb
stc
push
and
sbb
mov
(bad)
pop
(bad)
adc
int3
inc
fmulp
shl
push
inc
pop
or
mov
jbe
daa
sbb
mov
adc
push
cmp
adc
pop
ss
mov
inc
fdivr
mov
sub
push
dec
sub
xchg
outs
xchg
leave
or
mov
retf
pop
xchg
push
adc
push
sub
test
mov
retf
jmp
xor
sub
push
popa
sub
mov
dec
arpl
mov
repz
push
es
fdivrp
adc
mov
mov
mov
inc
xchg
fs
add
pop
sbb
mov
adc
lods
add
push
pushf
jle
sbb
pushf
loope
push
dec
lods
test
les
(bad)
pop
or
sub
iret
imul
outs
rcr
fdivr
push
sub
xchg
push
sub
les
adc
mov
jle
lock
mov
add
xchg
fbld
jg
add
push
(bad)
stos
xor
ficom
mov
xchg
repnz
pop
rcl
les
mov
xchg
sub
jb
or
push
inc
push
not
cmp
nop
in
cmp
scas
(bad)
leave
sub
test
stc
mov
(bad)
cmps
mov
nop
pop
pop
ds
mov
sub
hlt
or
push
pushf
xor
push
sub
imul
mov
inc
sbb
xchg
outs
fst
cmp
cli
mov
mov
cs
das
mov
stos
ret
repz
or
xchg
inc
lods
adc
add
xchg
cdq
dec
xor
cmp
ret
dec
adc
mov
jle
push
lods
pop
aam
call
(bad)
sub
jle
jge
sub
push
dec
mov
mov
int
aam
or
push
jle
add
jle
pop
out
push
lods
inc
adc
aaa
loop
mov
mov
push
pslld
jo
mov
or
push
xor
cmp
sbb
mov
(bad)
js
fimul
inc
aas
mov
test
xor
mov
add
es
mov
cwde
fisubr
add
jecxz
and
dec
dec
mov
sub
sbb
stos
sahf
cmp
pop
clc
std
xchg
(bad)
jne
data16
cmp
add
retf
and
call
(bad)
pop
ror
push
pop
dec
std
sub
push
sbb
outs
mul
xchg
retf
xchg
icebp
push
sahf
xchg
or
loopne
test
mov
dec
clc
ja
and
dec
arpl
xchg
add
cmp
cmp
jmp
adc
push
into
cld
adc
and
push
shr
mov
sbb
(bad)
aam
lock
out
movs
sub
minps
mov
adc
cli
nop
xchg
ss
xchg
cmps
fs
cs
movs
pusha
jmp
sub
xor
cmp
push
jecxz
ja
xor
xchg
pop
bound
cmp
loopne
cmc
jno
les
jmp
sar
inc
call
mov
daa
mov
and
aam
add
dec
or
test
or
fimul
mov
in
lds
retf
jne
inc
sti
out
xor
inc
rcr
dec
pop
push
into
pop
cmp
jmp
fdiv
scas
dec
inc
aaa
fs
ret
imul
out
add
mov
pop
jns
dec
shl
adc
jmp
jnp
jae
sbb
gs
sbb
iret
mov
nop
jmp
inc
sbb
sbb
call
inc
imul
pushf
push
add
loope
ror
push
sbb
in
cmp
and
add
cld
icebp
add
push
(bad)
out
jg
cli
imul
hlt
mov
xchg
mov
sub
inc
sub
push
call
mov
add
nop
fdivr
les
mov
(bad)
add
out
lods
mov
push
dec
or
inc
out
mov
in
mov
push
cmp
daa
push
add
or
xchg
in
lds
xor
mov
or
mov
movs
cmp
es
shr
das
sti
push
mov
adc
add
cmps
push
xor
mov
mov
mov
inc
imul
add
cmp
push
xor
mov
mov
jecxz
jp
cmps
cmp
jp
cmp
mov
jns
sub
inc
add
mov
adc
fldenv
or
loope
scas
ds
and
imul
(bad)
mov
mov
outs
or
sbb
sbb
adc
xor
or
retf
loopne
mov
lds
enter
push
enter
and
xor
and
int3
cli
xor
cwde
pop
dec
dec
rcl
pop
pop
sub
mov
(bad)
xchg
mov
xor
enter
jnp
scas
int3
mov
fld
cmps
popf
shr
neg
fist
stc
inc
mov
cmc
fmulp
mov
mul
mov
mov
mov
retf
sub
xor
cld
mov
pusha
outs
clc
ficom
mov
movs
test
scas
inc
jmp
fidiv
jne
ret
and
pop
(bad)
out
gs
cmp
cmp
dec
sub
mov
and
loop
test
(bad)
sbb
hlt
lods
adc
fistp
(bad)
shr
cmp
hlt
cmp
cmp
ins
mov
mov
repz
rcl
pop
popf
xor
push
push
sahf
add
cld
shl
mov
pushf
pop
(bad)
jmp
into
inc
fisubr
fsub
sbb
cmp
ret
fist
jle
sahf
mov
retf
sar
and
or
xor
pop
imul
push
add
sbb
mov
cmp
ds
aaa
push
inc
leave
jns
xlat
imul
div
aam
mov
loopne
mov
mov
cmp
sub
outs
push
(bad)
pextrw
mov
test
xchg
ja
sbb
out
push
in
jmp
cs
mov
cli
and
mov
outs
int
mov
xchg
pop
cmp
inc
data16
xor
xlat
(bad)
js
sti
adc
or
adc
jne
xchg
test
idiv
adc
sti
cli
sbb
ins
out
xor
pop
push
dec
lods
arpl
jge
ds
sub
mov
pop
loopne
cmps
(bad)
repnz
sahf
je
sub
loopne
add
or
arpl
cmc
adc
pop
inc
mov
out
movs
xor
(bad)
and
jbe
jmp
inc
dec
aaa
out
test
sahf
mov
xchg
cli
call
outs
fstp
jmp
inc
xor
in
ds
xor
retf
xchg
cmp
inc
lahf
jl
jne
ja
mov
inc
and
popa
and
cs
adc
mov
shr
hlt
imul
push
push
int3
push
fsubr
dec
adc
fst
mov
nop
leave
fs
xchg
dec
vpsrld
mov
je
minsd
push
(bad)
mov
add
pop
xor
fimul
int
and
mov
outs
dec
fadd
mov
jecxz
xlat
fmul
data16
inc
add
sub
xchg
xor
mov
movs
je
sbb
pop
int
data16
jge
cmps
jb
std
inc
out
movs
in
out
dec
retf
cmc
div
outs
fnstenv
pop
pop
retf
nop
imul
(bad)
xchg
call
cmps
les
ror
xchg
dec
xchg
xchg
loop
or
mov
aam
jg
scas
or
cmp
fmul
jae
sbb
enter
scas
pop
dec
in
lahf
clc
cld
xor
sti
aad
jns
adc
test
sub
jg
push
add
fist
mov
retf
out
icebp
(bad)
sti
out
neg
ror
fnstcw
sbb
stos
(bad)
loope
pushf
sbb
rcl
inc
repnz
clc
(bad)
repz
sti
inc
mov
cmp
jb
fnstsw
stos
mov
add
cli
sub
(bad)
mov
pushf
pushf
jo
imul
pmaddwd
jne
fnsave
adc
pop
lods
nop
addr16
mov
popa
daa
dec
sbb
add
mov
xchg
pushf
jmp
fstp
jbe
cmp
fstp
call
mov
xor
repnz
idiv
push
mov
daa
movs
xchg
mov
pop
sub
cmp
push
push
js
outs
(bad)
xchg
pop
dec
pop
pop
adc
push
jmp
fwait
or
cmp
(bad)
sub
dec
les
add
ds
in
sub
cmps
cld
mov
jo
mov
xor
jo
jae
call
mov
outs
sub
push
cmps
cld
aaa
push
ror
push
out
sbb
int3
inc
js
hlt
or
outs
pop
mov
(bad)
sti
pop
inc
arpl
sub
repz
mov
cli
fldcw
(bad)
cmc
mov
jp
ja
mov
loope
adc
push
or
and
or
mov
lock
popf
pushf
mov
lahf
mov
mov
popa
les
lock
ret
xchg
push
imul
dec
cmps
pop
jle
(bad)
cmp
jns
das
jl
shl
in
lock
or
imul
sti
int3
cmps
leave
cmp
cdq
dec
cmp
cmc
mov
in
test
push
in
and
enter
rol
aad
push
mov
lahf
fdivrp
push
lahf
mov
pop
data16
pop
fs
stos
cmp
or
push
xor
push
mov
jbe
push
sbb
lea
popa
and
sbb
outs
mov
jmp
push
sbb
(bad)
mov
js
jnp
mov
adc
movs
jge
or
xlat
int3
xchg
enter
mov
out
push
stos
out
inc
aam
retf
xchg
es
xchg
clc
out
lahf
adc
jle
push
dec
inc
std
mov
sbb
sbb
or
les
gs
and
mov
cmc
mov
jge
cmps
out
sbb
iret
push
cmc
push
pop
jmp
inc
out
ds
push
out
mov
arpl
aam
test
xor
dec
mov
sbb
ja
push
cs
pop
loop
pop
inc
mov
mov
into
or
call
pop
stos
ret
lea
cmp
data16
in
fwait
shl
or
mov
loop
in
fsubrp
mov
and
loope
adc
mov
xlat
jg
loopne
sti
popf
xor
inc
pushf
mov
inc
cs
jae
pushf
adc
jns
mov
jbe
sub
dec
mov
jmp
cmp
push
mov
movs
mov
xchg
rcl
aam
imul
mov
push
xchg
in
mov
(bad)
lods
ss
sahf
scas
xchg
cli
ret
cmps
dec
cmp
jb
imul
shl
sub
sub
or
cmc
aam
mov
xchg
jnp
sub
fadd
ins
sub
cdq
adc
pop
mov
cmps
cmp
popf
std
xchg
aaa
data16
jno
pop
out
lods
cli
in
enter
out
sahf
aas
cld
aaa
aas
fidivr
xlat
ss
inc
sub
int3
fdivr
jb
push
xor
add
ins
mov
addr16
sub
mov
icebp
int3
pop
loop
in
icebp
loopne
test
outs
sub
sahf
retf
cli
test
sbb
leave
adc
into
arpl
psubusb
mov
repnz
push
(bad)
fsub
fistp
dec
push
in
push
out
ja
popa
scas
and
lock
repz
xor
aam
popf
rol
lahf
rcr
mov
mov
gs
xchg
jae
pop
test
ret
jnp
and
fld
out
loopne
mov
and
sub
inc
ja
cld
(bad)
imul
addr16
xor
xchg
mov
lds
push
sahf
retf
and
shl
cmp
ror
addr16
pop
pop
pop
aad
out
imul
out
lahf
adc
mov
clc
daa
pop
loop
and
outs
cli
(bad)
mov
push
jne
mov
scas
mov
inc
dec
in
(bad)
(bad)
cmp
mov
pop
jge
jne
sub
pop
mov
sbb
(bad)
out
(bad)
cmp
jmp
mov
xor
dec
xor
sbb
(bad)
out
jmp
call
out
lods
push
pop
mov
and
fiadd
cli
in
or
xchg
mov
inc
xchg
retf
xchg
jo
mov
mov
(bad)
cmp
xchg
iret
lds
fisubr
inc
xchg
stos
jnp
dec
clc
or
retf
xor
adc
add
mov
sbb
shr
add
mov
loope
iret
mov
mov
aam
pop
inc
push
jb
cmp
cmp
cmps
or
push
jns
ret
mov
je
(bad)
mov
daa
mov
movs
test
xchg
lods
sbb
pop
out
push
sar
cdq
jbe
dec
retf
rcl
mov
shr
xor
jbe
(bad)
cwde
data16
and
cmp
add
inc
(bad)
sti
aam
cmp
push
and
sbb
arpl
dec
cmps
mov
jnp
inc
aam
push
sbb
jnp
or
ins
cmps
mov
and
pushf
hlt
mov
pusha
rol
lfs
jbe
call
add
sub
jbe
xchg
inc
inc
ret
cmp
in
push
js
mov
xchg
(bad)
fstp
or
cwde
mov
jns
out
cmc
rcl
mov
jle
and
mov
mov
sbb
call
addr16
mov
adc
push
lea
nop
pusha
or
cli
or
or
in
adc
mov
test
add
into
jg
xor
dec
retf
aam
out
loope
sbb
xor
(bad)
fidivr
push
or
adc
sbb
push
or
or
mov
inc
xor
repnz
xchg
xchg
or
fidivr
jae
repz
out
mov
(bad)
ficom
mov
push
fs
mov
mov
xchg
add
(bad)
out
aad
xchg
(bad)
arpl
iret
iret
stc
je
dec
push
jno
mov
push
add
cli
loop
cwde
sub
mov
jg
inc
(bad)
pop
push
xchg
and
repnz
sti
mov
test
stos
sbb
dec
(bad)
fbld
sub
daa
fcmovb
fisubr
nop
call
pop
ud0
ins
test
jne
enter
jmp
push
inc
sub
loop
cld
ins
fldcw
das
call
sahf
push
test
xchg
fild
std
(bad)
addr16
outs
cmp
clc
ins
mov
cld
mov
clc
inc
cwde
js
clc
fsubp
cmps
cmps
xor
fs
jl
mov
and
movs
jnp
xchg
pop
sahf
cwde
(bad)
div
test
mov
jae
sub
rol
lahf
inc
cmp
and
jbe
xacquire
add
shl
repz
lock
mov
movs
cmps
dec
inc
jno
fld
imul
dec
xchg
fsubrp
jp
pop
push
cmp
push
fsubr
fimul
vpmadcswd
pop
adc
mov
mov
add
jg
pop
js
loope
shr
mov
cmp
das
xor
jnp
add
ror
das
adc
xchg
gs
cmps
ret
push
sub
stos
add
push
(bad)
mov
cmp
cmp
fistp
ss
test
inc
leave
ss
ja
jo
dec
dec
inc
ins
rcr
add
lods
mov
ja
push
add
lods
fst
out
fwait
pop
jl
dec
mov
movs
inc
sub
push
dec
in
or
push
sti
bound
cli
sub
lods
push
cmps
cli
cwde
jae
and
(bad)
sti
sti
jns
sahf
mov
xchg
jae
loopne
sub
mov
in
scas
push
sbb
sti
ins
aaa
jmp
add
pop
movs
add
std
out
add
cmp
and
std
icebp
jle
rcr
sar
mov
cmp
scas
leave
(bad)
xchg
adc
push
mov
test
inc
clc
mov
outs
mov
hlt
jbe
mov
adc
rcl
imul
sbb
pop
jns
push
add
test
and
add
jno
jns
mov
ror
xor
mov
imul
add
jg
jbe
js
sar
pop
fmul
xor
and
jg
dec
add
pusha
fbstp
nop
pusha
lods
ret
lods
aad
div
lock
iret
retf
movs
ret
push
and
mov
pop
adc
sub
popf
fs
nop
cmp
sahf
xor
or
dec
dec
call
mov
mov
mov
mov
js
push
outs
icebp
mov
add
in
or
pop
push
xchg
push
cmp
imul
sbb
jb
fsubrp
xor
inc
stc
das
inc
add
add
cmp
sbb
cmp
jno
mov
out
sbb
int3
cmp
call
dec
test
inc
fcomp
(bad)
lods
loop
aas
int3
sub
xchg
popf
add
ss
daa
mov
sbb
mov
scas
inc
mov
push
jb
scas
mov
push
adc
rcl
(bad)
stc
stos
pop
shl
and
xchg
jmp
hlt
cmp
push
pushf
adc
cld
enter
pop
aad
std
mov
mov
aas
mov
(bad)
push
pop
pushf
inc
add
sbb
(bad)
sbb
cli
jnp
cmc
js
addr16
movs
mov
inc
test
pop
pop
aam
sub
push
(bad)
enter
pusha
push
lods
add
adc
inc
add
sub
pop
sub
jno
rol
test
dec
jecxz
sbb
shl
out
push
pushf
inc
jge
sbb
ret
push
lahf
mov
lds
in
retf
repnz
leave
and
(bad)
les
test
popf
add
nop
pop
stc
mov
imul
sub
fild
inc
popa
aam
adc
es
dec
adc
cmp
push
pop
inc
ins
dec
les
fwait
xor
in
or
iret
jno
jno
rcl
aas
inc
mov
ret
mov
wrmsr
aas
rcr
and
test
jmp
dec
aas
jno
push
cmp
xchg
xor
inc
and
loop
or
mov
lds
enter
or
jae
xchg
(bad)
or
dec
sbb
iret
popf
jb
xor
xor
aam
call
pop
mov
inc
inc
add
mov
rol
inc
mov
cmp
add
mov
xchg
pop
push
xor
dec
sub
or
cmp
xor
mov
push
inc
adc
in
mov
sbb
aad
pop
inc
icebp
jmp
popf
addr16
mov
inc
dec
mov
addr16
es
sahf
jno
mov
in
ds
xchg
xchg
or
das
mul
scas
cmc
mulps
mov
lods
ins
sbb
pop
fld
fs
cwde
mov
cmp
das
sub
clc
pop
(bad)
sti
cmp
ins
or
stos
dec
pushf
xor
xor
pusha
imul
mov
mov
cmp
loopne
mov
inc
sbb
push
js
sub
rcl
in
retf
push
mov
pop
and
xchg
(bad)
pop
aaa
lahf
xchg
bound
and
push
shl
push
jp
mov
loope
mov
mov
pop
ret
adc
push
cwde
cmc
sub
add
push
sbb
scas
out
inc
in
sub
outs
nop
stc
xchg
mov
and
dec
mov
xchg
mov
fs
xchg
xchg
jae
inc
push
fisttp
jbe
bound
std
lods
mov
fnstenv
sub
and
daa
pop
stc
mov
aam
retf
push
cli
enter
jmp
sub
mov
push
(bad)
gs
sar
sbb
jns
xor
sti
mov
adc
mov
mov
pop
arpl
add
push
add
lods
and
scas
mov
(bad)
xchg
cmp
add
cmc
out
jnp
lahf
mov
and
repz
mov
sbb
not
pop
sbb
mov
cs
and
fdiv
cwde
(bad)
arpl
popf
in
in
and
mov
dec
adc
mov
retf
cs
ds
or
shr
or
xchg
aas
inc
adc
dec
xchg
mov
and
push
fwait
pop
xchg
(bad)
loop
bound
cmp
scas
pusha
lea
and
fld
pusha
adc
mov
and
cmp
push
sub
jae
xor
mov
push
pop
cmp
mov
test
leave
sub
cld
fimul
add
jae
xchg
push
fcomp
cli
out
xlat
cmp
cmp
jle
xchg
repnz
outs
pop
xor
sti
cmp
inc
into
cmps
(bad)
jg
les
jp
xor
mov
jl
xchg
adc
cmps
sahf
pusha
adc
movs
add
shl
push
pop
pop
push
cli
cmp
xor
xchg
(bad)
fs
pop
push
cmp
inc
xchg
xchg
clc
push
mov
xor
ins
xchg
cld
pushf
or
xor
int3
(bad)
aad
or
out
jecxz
cs
in
sub
cmps
retf
mov
retf
fstp
adc
loopne
fwait
jno
je
mov
xor
pop
test
adc
fwait
mov
add
sbb
dec
pushf
inc
sub
loope
sub
div
out
out
pusha
inc
popa
mov
js
pop
adc
mov
aas
jo
daa
shl
aam
push
popf
mov
sbb
mov
les
ins
leave
fwait
sbb
cmps
jo
test
jl
push
cmp
cdq
sahf
cs
and
dec
cld
adc
popf
inc
and
call
fbstp
add
xor
fcmovnbe
or
push
adc
cmc
pushf
jp
xchg
or
pop
dec
mov
xchg
pusha
out
fidivr
std
dec
clc
xor
aam
int3
cmp
sub
jle
push
movs
(bad)
sti
pop
jle
or
xchg
cmp
xchg
adc
inc
iret
xor
fs
mov
mov
bound
cmps
jmp
sub
fisubr
ja
mov
(bad)
dec
js
and
jo
call
cmps
rcl
popa
xchg
mov
neg
cld
mov
imul
jo
xchg
(bad)
mov
mov
inc
add
jl
aam
fisub
push
inc
lods
push
mov
mov
xchg
mov
ds
cmp
dec
fld
movs
jl
out
mov
in
or
xchg
and
sbb
icebp
lods
dec
je
pop
xchg
push
(bad)
fldcw
test
xor
in
cmp
mov
adc
cmp
xchg
xchg
push
mov
jmp
popf
cmp
outs
out
inc
dec
call
pop
mov
imul
mov
xchg
cwde
xor
je
std
mov
mov
(bad)
movs
fwait
mov
mov
(bad)
sub
lock
cmps
jbe
cmp
ret
sar
into
or
cmp
cli
xchg
loope
pop
or
sub
(bad)
shl
aas
bound
or
pop
vpmaxub
mov
add
or
mov
(bad)
cwde
pop
mov
or
sub
cmp
adc
in
test
push
xor
pop
mov
cs
sbb
jmp
loope
(bad)
pop
mov
ret
mov
cmps
push
in
outs
mov
mov
pop
xchg
pushf
push
adc
pop
shl
retf
mov
xchg
and
mov
pop
sub
dec
out
call
dec
dec
das
sub
ja
cmp
call
pop
dec
sti
popf
adc
enter
xchg
jmp
xchg
push
or
cmp
xchg
outs
daa
mov
pop
jae
xchg
jae
in
out
pop
cmp
scas
xchg
mov
jbe
mov
xlat
mov
lods
addr16
mov
mov
pop
call
int3
mov
cmp
repz
pushf
dec
lods
sbb
jbe
and
xor
cdq
add
ret
sar
cli
pop
and
push
clc
test
adc
ret
jbe
and
outs
movs
mov
mov
popf
and
xor
mov
xchg
push
dec
lock
out
push
dec
mov
add
cs
(bad)
push
mov
(bad)
xor
outs
fwait
jl
xor
cmp
add
jbe
or
xor
movs
(bad)
inc
push
in
jp
test
bound
mov
sbb
adc
jbe
push
push
mov
mov
fs
enter
jp
repz
loopne
inc
sub
push
shr
and
jl
sbb
out
push
xor
inc
ret
xor
mov
pop
xor
push
retf
shl
cs
cmp
jo
push
es
mov
movs
nop
mov
ds
cdq
sahf
adc
pop
in
ret
sub
inc
dec
mov
test
adc
fdiv
daa
or
dec
mov
fwait
mov
inc
sbb
jmp
cmovbe
mov
icebp
dec
xchg
pop
xchg
pop
pop
ret
add
(bad)
aaa
push
cmc
test
mov
cs
loope
scas
dec
icebp
add
aaa
mov
adc
push
jmp
loopne
in
lds
dec
xchg
push
push
out
test
retf
int3
repz
mov
pop
imul
div
(bad)
fld
xchg
xor
inc
repz
sub
dec
test
mov
mov
pop
gs
pop
pop
pop
jmp
in
adc
mov
fsubr
bswap
dec
pop
mov
das
ins
jo
sub
test
fnstcw
cmps
or
scas
inc
push
dec
repnz
cmp
xchg
jmp
js
push
cmps
jbe
mov
retf
test
sti
jne
mov
or
jbe
popa
out
sub
adc
xchg
jle
mov
inc
stc
ja
mov
sbb
ins
cmps
and
sbb
or
xlat
sbb
mov
movs
movs
out
sub
movs
pop
out
cli
daa
mov
xor
daa
test
mov
(bad)
xlat
or
jne
cmp
test
jns
sub
push
jmp
mov
in
popa
or
push
and
addr16
jns
xchg
xor
adc
jo
int
aam
ja
pop
arpl
cmp
push
fwait
inc
or
sub
popa
(bad)
retf
(bad)
jmp
and
push
neg
xlat
sub
push
xor
loopne
gs
pusha
dec
mov
xchg
(bad)
push
fwait
movs
test
int3
rol
sub
cmc
add
scas
mov
scas
mov
mov
or
add
ret
inc
into
shl
pop
popf
lea
mov
push
std
push
rcr
out
xchg
push
mov
push
xor
fs
test
out
xchg
mov
popa
mov
inc
mov
and
mov
jnp
fsub
inc
clc
mov
push
popa
popa
rol
jo
scas
popf
jae
inc
inc
dec
and
inc
pop
out
sbb
add
movs
cmp
stos
stos
test
or
push
cli
aam
stos
dec
xchg
data16
xor
sub
clc
(bad)
cmp
xchg
cld
adc
mov
shr
ret
vandps
(bad)
inc
cmp
pop
mov
sub
inc
outs
aas
fadd
push
sbb
inc
add
imul
repnz
(bad)
xchg
cs
sub
ret
push
xchg
aam
outs
pop
jne
jbe
movs
mov
dec
jmp
jle
jno
xchg
lods
mov
fsubr
popf
mov
stos
mov
inc
pop
sub
xchg
xchg
cmps
lods
sahf
les
out
aas
cmp
jmp
(bad)
and
ins
add
jb
adc
pop
cmp
xchg
(bad)
cwde
nop
and
clc
sub
stc
adc
mov
(bad)
cwde
loopne
add
and
jmp
push
xor
mov
stos
arpl
(bad)
call
sbb
xchg
jno
add
pop
scas
jbe
imul
retf
dec
mov
cmps
push
push
jp
push
xor
mov
mov
xchg
pop
xchg
dec
push
mov
jo
jge
xor
aaa
enter
xor
jmp
and
les
lds
mov
mov
bound
imul
int
dec
mov
push
mov
mov
dec
arpl
add
ret
sub
jb
mov
repz
(bad)
shr
mov
fimul
fwait
in
ret
stc
ds
outs
leave
mov
xor
mov
sbb
pusha
sub
jmp
and
mov
cmps
or
outs
out
inc
or
or
mov
int3
adc
mov
inc
xchg
push
jle
das
sbb
add
fs
sub
(bad)
jo
test
push
push
xor
into
lock
sub
nop
mov
iret
test
push
test
sbb
loopne
jne
std
inc
popa
mov
sub
shr
outs
and
sbb
sbb
sub
sub
jmp
test
add
cmps
add
jbe
mov
in
ins
sub
mov
addr16
sahf
cmp
je
test
jmp
push
dec
sub
shl
inc
dec
mov
cmp
ror
mov
dec
movs
inc
popa
lods
ds
(bad)
mov
and
mov
sbb
mov
bound
mov
aas
lods
jg
dec
icebp
test
add
pop
test
and
add
icebp
adc
mov
dec
enter
jno
mov
int
sar
xor
cmp
or
xchg
xchg
ret
push
or
sub
cli
cmps
mov
mov
jns
test
ss
ds
mov
cmps
pushf
rcl
add
imul
adc
pop
scas
add
xor
mov
cmp
mov
out
dec
call
mov
inc
fcmovb
fistp
cmp
sti
out
pop
popf
xor
push
jp
test
push
inc
pop
pop
mov
fld
data16
ins
test
cmp
xchg
out
sub
das
inc
lea
repz
mov
not
mov
mov
sbb
cmc
push
dec
push
push
jmp
sub
mov
sub
test
sbb
sub
jg
nop
out
retf
(bad)
sub
adc
lea
push
(bad)
shl
ret
sub
into
xor
jge
arpl
fwait
call
aas
inc
pushf
test
add
and
jnp
jns
repnz
cmp
stos
sbb
lods
cmps
dec
imul
inc
fimul
retf
ret
sti
sub
sahf
imul
pop
gs
outs
and
les
sahf
adc
jmp
adc
cmp
mov
outs
jmp
mov
ins
add
dec
dec
dec
inc
cmc
cmp
dec
fist
or
out
add
cmp
fimul
and
test
adc
jecxz
shl
cmp
(bad)
dec
clc
data16
and
xor
pushf
pop
and
pop
mov
push
rcl
ins
in
(bad)
test
inc
push
pop
stc
and
stc
sti
ds
or
add
adc
mov
push
nop
cli
cmps
or
jbe
ret
int
inc
int
lea
aad
(bad)
fcomip
rcl
cs
out
test
add
and
ret
lea
cmps
retf
lods
mov
jl
cmp
sbb
and
iret
fidiv
loopne
cmps
outs
lds
leave
rcr
cmps
add
in
mov
fimul
dec
xor
add
push
mov
cmp
scas
iret
fsubr
add
dec
or
and
xor
mov
ret
xor
(bad)
push
cmp
lods
sub
outs
les
jb
add
in
loopne
bound
inc
mov
gs
mov
mov
jecxz
(bad)
arpl
cli
cmp
sahf
push
xchg
aaa
xchg
jge
xor
int
pop
pushf
dec
in
xchg
pop
sub
and
mov
in
mov
mov
jns
sbb
inc
shl
jbe
(bad)
mov
fcmovne
in
cmp
pop
aas
ret
cld
ins
loop
sahf
inc
jl
adc
stc
out
pushf
fs
sub
or
or
lahf
ins
shr
and
fwait
sbb
or
je
es
arpl
mov
sbb
xor
inc
jmp
data16
mov
leave
hlt
or
idiv
cmp
xor
data16
or
iret
mov
xchg
pop
(bad)
or
addr16
xor
xor
enter
stc
pop
sti
sbb
imul
or
mov
xchg
jl
fninit
ret
and
pop
fld
lds
push
pusha
lahf
add
iret
add
pop
or
sbb
ds
xchg
or
loopne
jecxz
retf
arpl
repz
cmp
or
in
jo
adc
fidivr
adc
or
xor
ret
jle
(bad)
gs
daa
pusha
stos
ret
push
mov
test
sbb
xor
or
add
inc
cmp
test
jo
aaa
cmp
mov
jae
or
mov
test
push
test
mov
sbb
fidivr
ror
add
ror
xor
dec
ins
lods
imul
seta
cdq
maskmovq
imul
push
mov
xor
test
outs
push
dec
arpl
imul
sub
mov
and
dec
mov
addr16
cmps
sar
shl
sbb
inc
xlat
(bad)
loope
xlat
cmps
push
add
das
ret
cmp
cld
mov
mov
adc
mov
lods
pop
add
dec
test
push
adc
fdivr
fisttp
pop
icebp
shl
das
movs
cmc
movs
sbb
xor
jb
test
mov
mov
ja
leave
ficom
(bad)
imul
retf
xchg
adc
push
jbe
call
in
(bad)
mov
mov
cmp
push
xor
xchg
inc
ret
mov
add
jl
hlt
or
inc
push
inc
mov
retf
cmps
fdiv
mov
pop
iret
or
and
push
xchg
adc
mov
sar
sahf
retf
xor
or
lahf
(bad)
sbb
fimul
idiv
cmps
jg
jge
mov
addr16
rol
sbb
pop
test
pushf
jns
out
jmp
mov
or
cmps
xchg
sub
jl
xor
je
addr16
call
out
mov
dec
mov
jns
aad
jnp
and
mov
cld
cwde
xor
hlt
int3
lock
mov
push
mov
outs
dec
scas
mov
fcomip
mov
arpl
sbb
lock
addr16
push
mov
jns
or
jle
adc
ret
xor
imul
adc
xor
scas
xchg
icebp
pop
sub
test
cmp
addr16
push
loope
je
lahf
lds
sahf
sbb
cmp
je
sbb
or
(bad)
(bad)
leave
je
daa
dec
shl
scas
fmul
inc
(bad)
into
mov
inc
scas
jmp
stc
lods
mov
push
cmp
mov
add
jnp
cmp
adc
and
cmps
or
add
inc
lods
cmp
repz
mov
retf
jns
ss
ds
sahf
jmp
jnp
cmp
sahf
xor
test
jb
ds
add
sbb
jp
cmc
inc
mov
mov
data16
mov
xchg
and
push
jp
pop
xor
xor
inc
cmp
idiv
int3
or
dec
push
cmc
and
rcl
jg
dec
out
rcr
ins
or
cdq
xchg
xchg
out
sub
sub
cmps
lock
dec
cmp
daa
gs
test
inc
xlat
push
jecxz
shl
jnp
iret
add
pop
pop
sub
push
sub
mov
jo
sbb
sar
ror
mov
inc
test
cwde
fcomp
test
mov
ror
aas
ficomp
loop
aad
mov
mov
dec
jg
movs
mov
les
adc
mov
sbb
and
mov
add
lock
push
sbb
mov
repz
dec
in
aad
aas
xchg
stos
inc
out
pop
daa
xor
sbb
jl
(bad)
ins
in
(bad)
mov
test
jmp
pop
mov
retf
adc
sub
push
cwde
movs
bnd
or
das
add
xor
or
mov
xchg
push
adc
dec
movs
cwde
inc
xchg
jnp
or
repz
mov
inc
add
stc
mov
lahf
cmp
or
pushf
ret
xchg
mov
mov
sbb
mov
xchg
pop
inc
jge
push
jo
adc
push
test
addr16
ins
sbb
jmp
shl
push
adc
aas
mov
adc
stos
xchg
xchg
popf
movs
mov
xlat
jb
pop
aam
stos
sub
test
pop
pop
inc
or
xor
stc
stos
ins
mov
pop
inc
movs
cmc
add
rcr
enter
test
pop
(bad)
stos
pop
scas
inc
add
cmps
mov
push
mov
and
jmp
mov
sahf
xchg
and
and
xchg
cmp
cwde
and
fisttp
mov
adc
mov
movs
push
pop
repz
(bad)
in
mov
das
fldln2
push
test
sti
mov
movs
cmp
pop
cmps
sbb
cmp
sbb
sbb
pop
xor
dec
xchg
inc
je
sub
mov
imul
lods
pusha
push
mov
inc
loope
mov
arpl
mov
inc
aas
cli
ins
int
(bad)
aad
loop
movs
and
ret
pop
jb
or
shl
inc
push
movs
cwde
test
cli
xor
dec
fisubr
aad
shr
loopne
retf
jge
test
push
fimul
pop
xchg
inc
mov
ins
mov
adc
xchg
movs
les
call
pop
outs
mov
add
cwde
dec
shl
les
stos
pop
daa
aad
push
jmp
push
cmps
es
stc
int3
ss
rol
pusha
bound
test
js
push
xchg
dec
push
sub
icebp
movs
retf
leave
push
fisub
arpl
dec
pop
out
in
enter
pmaxub
shr
ror
out
mov
jns
ja
inc
cmps
aaa
mov
pop
mov
sysret
or
(bad)
sub
test
loopne
push
add
ret
imul
jecxz
inc
aam
(bad)
stc
xor
add
mov
pop
aas
adc
jb
shl
mov
jo
loop
inc
stc
mov
push
push
push
fisub
cmp
mov
or
mov
loop
and
jne
and
(bad)
dec
ja
das
jbe
xor
cmp
out
jmp
out
inc
cdq
ja
push
inc
cmps
stos
test
aad
(bad)
mov
dec
jge
add
mov
add
fisub
pop
cdq
mov
fdiv
popa
jne
aas
xor
(bad)
and
inc
setae
icebp
and
iret
inc
pop
(bad)
not
add
mov
mov
js
jle
shl
sahf
test
mov
popa
ss
retf
daa
loope
cmp
adc
jbe
nop
rcr
sbb
adc
mov
in
(bad)
aaa
out
inc
mov
push
movs
sub
add
lea
mov
adc
add
or
lods
inc
in
repnz
mov
xchg
mov
hlt
loopne
xchg
jl
ja
or
sub
jo
or
cmps
enter
in
out
mov
in
(bad)
stos
cmps
ja
xor
xlat
sub
pusha
dec
in
and
aam
(bad)
fisubr
(bad)
(bad)
dec
movs
js
jg
(bad)
nop
xor
push
mov
ds
scas
out
mov
jnp
sbb
in
scas
and
cld
std
mov
jle
xchg
aas
pop
jbe
add
(bad)
call
mov
push
add
xchg
and
or
cli
mov
sti
sti
or
call
push
bound
cmp
popf
xor
rcl
adc
das
pop
push
sbb
das
jmp
call
cmp
dec
push
mov
cmp
sbb
mov
jne
out
cmc
cmp
out
enter
outs
loopne
or
push
jno
adc
mov
inc
add
sub
cmps
sbb
mov
jle
sbb
pop
imul
push
push
xlat
inc
stc
stos
mov
in
ret
or
ret
int
retf
mov
mov
or
ins
mov
xchg
out
mov
push
ins
fs
sar
add
daa
sbb
out
sbb
(bad)
sub
jmp
in
cbw
xchg
xchg
int3
mov
and
stc
adc
bswap
xchg
es
pop
pop
stos
cmp
popa
sahf
mov
xor
outs
sub
xchg
mov
dec
xchg
inc
aas
dec
sub
pop
push
das
push
ret
adc
mov
jb
(bad)
or
push
mov
cmps
test
pop
jbe
dec
xor
repz
sahf
jge
jecxz
sbb
and
lds
or
mov
cdq
push
xchg
ds
sub
pop
inc
(bad)
sub
dec
pop
and
sbb
aad
mov
repnz
jecxz
sub
mov
fstp
jb
fild
and
or
retf
push
nop
shr
jmp
mov
addr16
pop
and
cmp
mov
ss
aas
cwde
je
imul
mov
call
jno
sub
push
mov
add
xlat
enter
cmp
mov
stos
push
aas
icebp
jb
out
sbb
xchg
mov
adc
lahf
test
outs
in
xlat
jbe
xchg
xadd
mov
stmxcsr
adc
push
xchg
mov
jae
push
or
mov
mov
cmp
cli
xchg
xchg
push
sar
inc
faddp
xor
mov
cmc
daa
movs
(bad)
loopne
mov
lods
jle
add
dec
xchg
mov
(bad)
in
lods
(bad)
and
sbb
sub
repz
std
dec
clc
loope
jl
fisub
pop
jo
test
inc
fsub
nop
sbb
adc
jmp
test
mov
push
dec
leave
cwde
pop
out
shr
inc
mov
hlt
fild
mov
neg
test
or
out
add
lods
(bad)
popf
adc
loope
push
sub
mov
mov
dec
push
xor
mov
jl
inc
xchg
jne
lds
inc
jb
sbb
iret
lahf
mov
jno
pop
push
push
idiv
mov
jmp
cmp
mov
sahf
aas
mov
cwde
sub
and
stc
sbb
xchg
mov
imul
dec
out
adc
push
test
iret
rol
dec
(bad)
adc
adc
cmps
loop
cmp
xchg
outs
scas
(bad)
mov
add
dec
xlat
out
(bad)
xor
and
push
data16
dec
xchg
mov
pop
(bad)
mov
lahf
stos
mov
test
push
or
pop
inc
xchg
cs
xchg
adc
icebp
inc
sbb
sub
gs
inc
and
in
mov
adc
jnp
lahf
add
mov
pop
aas
sub
mov
and
fwait
lods
xchg
adc
movs
cmp
inc
dec
adc
sub
cli
mov
imul
mov
shr
adc
hlt
pop
sbb
push
xor
mov
and
push
pop
push
(bad)
cdq
ja
mov
xchg
jmp
adc
sub
nop
lods
xchg
push
jnp
push
dec
xchg
in
test
adc
adc
aam
jle
repz
cmp
jl
pop
aas
ins
add
jmp
test
add
jge
ss
das
outs
adc
and
mov
xchg
adc
iret
loopne
push
outs
push
pusha
aam
imul
jne
add
out
adc
pop
loop
int3
jecxz
add
jnp
(bad)
pusha
mov
aad
mov
xchg
mov
sub
sbb
hlt
(bad)
bound
mov
add
xor
lods
jg
repz
adc
fstp
jmp
mov
data16
mov
popf
popf
inc
mov
loop
movzx
mov
sub
out
push
adc
cmc
in
xor
(bad)
cmp
pop
xor
pop
cmp
lahf
mov
mov
popf
mov
adc
jmp
inc
cdq
imul
xor
add
call
xchg
call
inc
pop
(bad)
loopne
push
sar
mov
or
stc
jl
push
inc
jge
inc
mov
enter
in
ins
mov
jae
adc
or
lods
cmc
cdq
es
and
fwait
arpl
jae
cmp
test
mov
and
mov
xor
mov
mov
adc
jno
lds
test
shl
xlat
add
push
cmp
and
in
inc
jmp
repz
sti
ret
(bad)
xchg
ins
and
push
movs
cdq
shr
and
mov
mov
leave
jbe
out
ds
dec
cmp
push
push
mov
arpl
push
icebp
dec
add
sti
push
sbb
xchg
test
mov
pop
inc
push
pop
fnstenv
dec
mov
and
mov
retf
out
jecxz
stos
push
pop
mov
dec
sub
mov
popf
pop
push
mov
add
icebp
inc
cmp
adc
mov
xor
mov
aaa
and
int
push
data16
mov
rol
frstor
jns
xchg
and
pop
add
imul
mov
dec
pop
pop
shr
pop
popf
mov
xchg
(bad)
scas
xchg
mov
cmp
outs
and
xchg
push
jne
loopne
icebp
int3
pop
cmp
lds
movs
icebp
add
icebp
bnd
or
mov
jmp
pop
add
ja
in
gs
mov
push
inc
cmp
and
sbb
push
jp
inc
inc
loope
sbb
cmp
mov
push
adc
std
mov
(bad)
aaa
pushf
stos
or
sub
fs
pop
mov
pop
cld
mov
jmp
mov
mov
inc
mov
movs
sub
sub
lahf
xlat
rol
inc
mov
jb
stos
sti
and
push
adc
pop
std
and
ins
lods
bound
xchg
inc
xchg
pop
lods
scas
push
xchg
xor
jmp
pop
pop
pop
loope
dec
out
dec
sub
sbb
add
ds
sbb
retf
outs
adc
std
popa
mov
xor
xchg
sbb
jbe
ins
call
jb
pop
add
pushf
xchg
jne
stos
xor
in
imul
shl
jp
and
sbb
jmp
mov
out
xchg
frstor
lds
lea
rcr
add
lds
je
jno
scas
std
push
frstor
(bad)
skinit
fs
xchg
or
aaa
inc
cmp
pop
mov
fiadd
pusha
sub
call
inc
push
mov
cmp
sti
fdiv
call
push
scas
lods
sti
mov
scas
mov
gs
setne
dec
dec
fdivr
outs
push
repz
stc
out
icebp
fsubp
in
out
and
stos
mov
mov
mov
(bad)
adc
ins
add
cmc
dec
inc
fs
push
mov
scas
xchg
adc
pop
mov
les
jno
and
mov
in
imul
push
iret
das
xor
popf
xchg
out
cld
xchg
sar
repz
fistp
inc
adc
je
mov
mov
xchg
mov
and
fimul
mov
ins
inc
aas
ins
and
ins
sub
outs
jmp
gs
fsubr
stos
ins
fisttp
retf
clc
or
rcl
loopne
icebp
in
push
push
push
pushf
lea
xchg
push
inc
jo
sar
or
fistp
stc
jae
add
fnstcw
inc
imul
sbb
add
addr16
mov
xchg
arpl
cld
xchg
movs
imul
les
in
ds
push
pop
push
js
lea
xchg
jecxz
in
call
es
dec
cmps
out
jmp
mov
jge
hlt
push
jmp
jno
int
dec
xchg
mov
inc
test
inc
fsubr
inc
cmps
push
xor
sbb
arpl
or
jnp
jmp
into
js
in
xchg
mov
inc
repnz
dec
test
outs
call
aad
pop
mov
repnz
jecxz
and
(bad)
pusha
and
push
loop
cmp
sub
mov
mov
das
fistp
(bad)
in
xor
call
arpl
test
inc
sbb
adc
outs
mov
or
popf
lock
retf
outs
cmps
mov
mov
imul
cmps
enter
sbb
out
bound
push
pusha
dec
push
push
xor
xchg
fsub
icebp
xor
sub
mov
cmps
xor
popf
int3
add
mov
and
sub
movs
or
push
cmp
stos
pop
arpl
stc
fsubr
aad
jbe
mov
mov
mov
popf
push
cwde
jmp
push
mov
mov
pop
enter
sub
popa
adc
or
ret
cmp
pop
mov
out
sbb
out
aad
test
cmp
or
sub
scas
xor
add
jg
jmp
cmps
xchg
mov
adc
fdivr
icebp
push
rol
jo
pushf
sub
test
mov
xchg
inc
mov
push
jmp
add
test
addr16
push
pop
sub
test
jae
pop
cmps
aad
jns
push
push
cld
out
fadd
gs
push
stos
mov
xor
and
push
in
pop
mov
popa
lahf
retf
(bad)
mov
inc
xor
sbb
add
jmp
cmps
ror
and
push
inc
mov
pop
push
(bad)
cmps
dec
js
cmps
cmp
jbe
mul
into
sbb
(bad)
fdiv
push
out
dec
lock
pop
mov
pop
(bad)
xchg
retf
mov
retf
push
xchg
mov
jmp
pop
les
or
xor
jne
popf
xchg
push
xor
rcl
int
cmp
jmp
pusha
cmp
mov
dec
mov
inc
lods
push
pop
les
push
mov
in
scas
xor
loope
jl
ins
sub
pop
pop
pop
sar
imul
adc
js
dec
(bad)
jp
add
outs
ja
dec
out
pusha
dec
ret
sahf
cli
cs
push
cdq
test
mov
push
fisubr
(bad)
mov
retf
not
inc
stos
aaa
pop
mov
clc
mov
aam
sbb
pushf
jecxz
push
mov
stos
gs
repz
inc
adc
icebp
adc
cmc
das
xchg
xor
sub
mov
pop
xlat
stos
xchg
cmp
cmp
sub
div
fstp
jo
movs
aad
cmp
aas
cmp
fist
ins
sub
sbb
xchg
xor
jnp
or
popa
test
xchg
mov
jle
mov
stos
inc
xchg
cmc
push
fimul
mov
xchg
(bad)
enter
and
dec
cmp
enter
cwde
test
mov
push
stos
ret
push
cmp
outs
add
clc
and
push
js
add
jae
enter
pop
pop
loope
add
ja
(bad)
pop
xlat
pop
lock
(bad)
enter
lea
leave
call
mov
sub
lea
test
mov
push
mov
fistp
dec
sbb
bnd
ja
pushf
outs
pop
or
out
clc
scas
leave
jle
imul
stos
cmp
ins
pop
(bad)
mov
mov
mov
sub
movs
call
pop
aad
in
lock
clc
lahf
sub
sbb
adc
cs
test
mov
pusha
es
shl
xchg
jo
fcomp
mov
in
ja
lahf
jp
sbb
popa
adc
xchg
push
aad
sbb
jb
jno
xor
mov
push
loop
(bad)
movs
jge
out
ins
xchg
loope
repnz
int3
popf
adc
lea
inc
call
sub
jle
inc
jp
mov
int
jl
daa
cmps
xlat
mov
(bad)
pop
and
nop
xor
cmps
mov
inc
inc
(bad)
sub
fidiv
pushf
push
add
xor
xchg
outs
(bad)
loopne
fdivr
fcmovne
stos
cmp
data16
cmovnp
mov
xor
and
dec
jae
fiadd
adc
rcl
int3
xlat
push
pop
jno
jg
mov
ins
xor
lods
outs
inc
add
dec
mov
popa
inc
ret
mov
pcmpeqb
xchg
mov
fwait
inc
and
xor
push
or
js
lods
push
ffree
dec
sub
(bad)
cli
ret
inc
dec
inc
sub
out
xor
dec
int3
cmc
xor
inc
lock
cmp
in
mov
cwde
sub
jb
xor
fstp
and
retf
inc
call
push
add
inc
push
mov
adc
lock
adc
test
shl
loop
xchg
adc
adc
(bad)
out
mov
sub
mov
mov
xchg
or
xlat
dec
cmps
xchg
loopne
lahf
mov
fidiv
leave
xor
ss
ds
call
in
cmp
add
into
popa
mov
mov
and
in
fnsave
fisttp
pop
push
and
(bad)
pop
sti
lds
lock
ja
or
mov
clc
js
inc
hlt
xchg
sar
mov
dec
jno
sbb
xor
xor
add
int
push
adc
or
xchg
enter
or
outs
or
leave
call
or
(bad)
mov
adc
not
mov
sbb
pop
jg
cmc
lahf
test
inc
mov
sub
int
hlt
push
fisttp
mov
jmp
mov
xor
je
pop
push
mov
mov
ss
fistp
sub
cs
xlat
cmc
mov
in
jne
adc
loop
pop
and
dec
jmp
mov
addr16
retf
xchg
mov
xchg
inc
shl
fldcw
fdivr
xchg
push
inc
push
add
adc
lock
movs
enter
mov
or
or
in
cmp
adc
adc
sub
lock
xchg
ja
ror
lods
loopne
jmp
mov
lahf
mov
loopne
fwait
xchg
in
dec
fstp
xchg
xchg
and
jle
xor
mov
fld
loope
pusha
pop
call
fst
xchg
ins
ss
add
mov
or
push
mov
gs
shl
jmp
push
dec
imul
shl
fiadd
push
lahf
xchg
cmp
fs
push
push
les
bound
icebp
or
dec
dec
addr16
push
mov
mov
inc
sbb
pop
pop
mov
mov
mov
ins
jne
pop
adc
xchg
gs
int
cdq
ss
ror
aad
jb
call
(bad)
call
pop
or
mov
or
xchg
fs
push
sub
pop
js
dec
mov
leave
xor
scas
rcr
sbb
(bad)
jmp
jbe
pop
paddd
mov
(bad)
fcomp
push
cld
ror
ins
fisub
inc
jl
ret
fadd
push
adc
sbb
cmp
mov
mov
pop
push
xor
test
test
(bad)
out
dec
ja
xchg
push
retf
mul
mov
cs
mov
dec
mov
inc
push
adc
loope
shl
iret
cmp
(bad)
and
call
out
mov
sbb
shl
gs
aam
hlt
mov
retf
int
loope
or
push
gs
dec
pop
rcr
aad
out
jle
inc
and
loopne
or
lods
sbb
mov
xchg
xor
clc
loop
frstor
loope
jl
xor
jmp
dec
xchg
test
sbb
ss
pop
lds
dec
pop
jnp
dec
add
push
mov
movs
mov
fs
ror
loope
ret
mov
jns
lods
hlt
jb
out
int3
enter
adc
aaa
mov
out
pusha
jbe
imul
cli
not
and
(bad)
push
inc
cmove
test
mul
fist
(bad)
push
and
test
jnp
xor
stos
mov
jp
test
popa
cli
sub
add
mov
aaa
in
cmps
rol
loope
pop
ds
adc
pop
retf
loopne
in
add
cmps
sub
into
popf
gs
outs
inc
inc
and
push
jmp
into
(bad)
adc
mov
sbb
call
inc
mov
rcr
push
pop
clc
lock
cmps
jnp
imul
cmp
fwait
test
cdq
add
sbb
sbb
adc
clc
retf
sbb
mov
dec
or
sub
icebp
(bad)
xor
mov
aaa
push
rol
jo
jecxz
(bad)
jo
fstp
cmp
and
outs
repnz
dec
jnp
fisubr
dec
push
mov
mov
sbb
lods
(bad)
movs
out
jmp
pop
hlt
aaa
icebp
push
sbb
adc
repnz
add
dec
les
push
hlt
xchg
jl
lahf
sub
int
arpl
cmp
imul
repnz
mov
jmp
xchg
in
movs
out
mov
or
scas
clc
or
push
shl
push
or
inc
jno
xchg
sub
cmc
adc
or
scas
sbb
imul
cld
nop
outs
jno
cmp
sti
or
movs
loope
and
push
dec
push
or
jle
mov
js
push
ret
push
cmps
add
sub
xchg
iret
push
(bad)
fisubr
test
inc
in
cmp
push
xchg
jge
imul
jmp
iret
gs
pusha
pop
ja
aas
mov
mov
sti
retf
test
cmp
cmp
ret
and
jmp
push
mov
xchg
pop
xchg
mov
popf
push
cmp
aam
push
mov
data16
ret
xchg
push
pop
pop
xor
(bad)
jo
ficomp
cmps
pop
in
dec
stos
(bad)
jp
cmp
inc
mov
and
fs
xchg
jge
add
mov
fmul
jl
mov
add
test
adc
xchg
js
lods
call
mov
les
or
dec
mov
xchg
fst
mov
sbb
in
bnd
mov
add
(bad)
fstp
cld
shl
push
adc
les
mov
cld
in
je
jb
jno
sbb
lods
ficom
gs
and
mul
dec
pusha
xor
icebp
cmp
jecxz
push
mov
ret
mov
and
mov
sar
popa
cmp
cs
call
cmp
clc
ss
pop
cli
push
jae
lock
add
push
dec
pop
inc
and
sbb
shl
mov
cmp
xchg
in
mov
mov
cmps
(bad)
mov
xchg
leave
dec
sti
adc
and
mov
mov
xchg
fist
or
pop
ins
aam
xor
cli
addr16
sub
push
inc
add
in
cmp
adc
mov
cmp
pop
xor
xor
adc
adc
popf
ins
rol
mov
adc
pop
and
dec
jl
ror
lar
add
pop
pop
lea
into
push
xor
xchg
sub
cmp
outs
xlat
out
out
jb
mov
or
mov
in
lea
cld
xchg
inc
out
adc
popa
(bad)
mov
mov
js
(bad)
sbb
addr16
and
outs
mov
jg
vmread
and
bnd
jle
or
(bad)
adc
fwait
aad
mov
(bad)
jge
pop
jl
push
ficom
inc
pop
ins
adc
scas
pop
ins
sar
adc
mov
dec
test
inc
pop
cmp
inc
test
dec
pop
ins
adc
xchg
cmp
test
push
lods
mov
adc
icebp
test
cs
mov
lea
int3
jno
mov
push
adc
scas
cld
pop
fs
jmp
xchg
lds
mov
jne
and
rol
enter
mov
es
dec
fbstp
cmp
xchg
push
inc
mov
daa
pop
stc
fwait
xchg
adc
in
sbb
jae
mov
jp
es
adc
(bad)
mov
mov
xlat
pop
fmulp
mov
aam
jmp
mov
xchg
fbld
sti
dec
vmovdqa
sub
sbb
push
movs
fwait
loopne
push
ja
nop
frstor
rol
sub
fptan
shr
or
dec
mov
lods
sub
neg
fbstp
jmp
enter
jbe
loope
jo
(bad)
leave
hlt
mov
push
sub
xor
sub
cld
enter
jae
lea
sti
cdq
sar
mov
fwait
das
les
imul
mov
sbb
into
(bad)
push
push
cmc
xor
in
std
pop
mov
enter
je
mov
mov
lahf
stos
or
cmp
jb
xor
out
rcl
popa
call
xor
imul
pushf
out
jno
retf
adc
mov
mov
pop
out
stos
xchg
fcomp
out
lock
out
loope
sbb
lea
popa
adc
dec
dec
popa
and
outs
jge
rol
es
call
adc
into
pop
pusha
dec
and
mov
inc
jnp
ja
ret
leave
cdq
popa
and
(bad)
mov
jae
call
cs
aaa
add
scas
shl
imul
jbe
movs
adc
ins
cmp
or
pop
jmp
call
imul
mov
xor
shl
sbb
pop
jp
mov
lock
dec
test
inc
fldcw
jg
pop
fst
push
mov
loope
cmp
or
push
xchg
cmc
push
nop
jno
mov
push
js
imul
sahf
call
sbb
iret
lds
cmp
das
popf
rcr
xchg
mov
shr
data16
push
(bad)
xchg
rcl
scas
sbb
mov
sti
stc
loope
dec
and
xchg
ds
retf
rol
pop
xor
cmps
bound
in
fwait
aad
in
xor
and
mov
inc
dec
and
std
retf
in
fwait
in
adc
movs
sbb
add
sbb
fisubr
jmp
in
fiadd
fst
adc
push
pop
scas
push
sbb
mov
pop
stos
inc
adc
dec
xchg
lahf
dec
nop
or
xchg
popa
jp
pop
not
adc
push
push
das
fisubr
mov
fwait
pop
loop
dec
in
xchg
push
das
(bad)
in
repnz
mov
scas
cmp
jl
ficom
fs
popa
mov
dec
ins
cmps
stos
std
stc
ds
or
jno
mov
jmp
mov
scas
inc
sahf
das
adc
in
sbb
pusha
xchg
sub
mov
pop
adc
jae
sub
out
inc
xchg
cmp
xchg
lods
les
sbb
push
xchg
sub
push
rol
pop
dec
add
inc
(bad)
btr
mov
push
xor
aaa
push
clc
sbb
retf
sbb
fiadd
dec
pop
sbb
out
jbe
repnz
xchg
imul
pop
aad
xor
or
pusha
jge
das
and
jne
and
jecxz
in
or
push
std
stc
jmp
test
xor
out
push
pop
sub
mov
sub
add
es
xchg
xchg
push
jmp
sub
mov
push
clc
push
sub
jmp
pusha
or
push
pop
pop
jae
xchg
push
ret
mov
mov
into
stc
or
aas
imul
sbb
jmp
scas
aad
pop
jmp
xchg
push
std
nop
jns
stos
jno
je
add
xchg
push
cmps
or
mov
bound
cmc
pop
push
and
cmp
stos
or
mov
call
dec
leave
ds
jge
enter
(bad)
mov
shl
xor
xchg
not
or
and
pop
(bad)
and
fwait
test
pop
mov
sub
call
jns
cmp
dec
xchg
(bad)
jnp
out
jl
leave
fwait
mov
push
fwait
into
pusha
fadd
test
inc
mov
sbb
shl
imul
enter
fidivr
dec
mov
ss
(bad)
cmp
ficom
outs
adc
ss
call
je
or
psubb
xchg
or
neg
jns
sub
inc
imul
xchg
xchg
outs
and
shl
adc
aas
fdiv
(bad)
ret
pop
arpl
in
pushf
cdq
popf
loop
enter
push
mov
dec
xchg
sbb
mov
push
cmp
shr
push
imul
push
mov
inc
call
pop
cvtps2pd
js
ins
mov
cld
repz
add
cmc
inc
push
fidiv
setle
call
scas
(bad)
fild
mov
lods
push
fcomp
es
mov
mov
inc
add
and
pushf
mov
mov
mov
aaa
mov
mov
add
mov
aaa
pushf
sub
inc
mov
in
or
xor
fst
adc
dec
stc
pop
pop
push
xchg
fs
add
or
stos
repnz
cmp
lods
stos
pop
int
xor
sbb
fsubr
call
(bad)
mov
xlat
or
cmp
add
fwait
jbe
adc
loop
sub
sbb
mov
lds
addr16
and
dec
adc
inc
mov
cmp
push
push
shr
jb
xchg
shl
push
(bad)
push
add
cmp
jge
xor
outs
out
stc
add
sar
retf
pop
fcompp
cmc
ds
sub
int3
out
sub
dec
push
dec
fld
jl
xchg
mov
add
aad
out
mov
int3
mov
mov
gs
hlt
or
into
mov
frstpm(287
retf
aam
xor
push
jnp
dec
mov
or
mov
cmp
mov
push
mov
and
cmc
loop
cs
inc
add
or
adc
cmps
xchg
rcr
pop
xor
xchg
sub
and
add
xchg
pop
jmp
cmc
jae
mov
and
test
call
mov
jmp
pop
sub
cmp
pop
cli
test
pop
adc
ins
shl
shr
dec
jns
mov
push
nop
imul
push
imul
add
shl
test
jbe
fld
push
pop
div
adc
adc
fcomp
daa
pushf
call
test
jge
(bad)
adc
rcr
scas
adc
pushf
and
int3
jb
xrelease
out
add
jp
(bad)
movs
inc
mov
ret
and
icebp
not
mov
mov
stc
mov
repz
add
cmp
pushf
sbb
das
pop
ja
int
and
dec
xchg
sbb
xchg
in
out
pop
(bad)
in
xlat
cmp
xchg
stos
rcr
mov
pop
push
mov
mov
add
adc
add
imul
cmp
sbb
mov
pop
or
popf
ins
cmp
push
dec
sub
inc
cmp
gs
push
pop
inc
jo
jecxz
cmp
shr
pusha
fcmovu
js
cmp
mov
mov
sbb
mov
stos
sti
push
repnz
cmps
push
lahf
fld
fisttp
push
int3
into
rcr
lods
cmp
(bad)
mov
push
push
jecxz
xor
mov
adc
test
xor
lahf
cmp
cmp
inc
cwde
test
mov
and
push
push
jp
call
sub
jmp
scas
nop
mov
cld
cmp
add
jo
push
int3
in
(bad)
aam
sub
cs
mov
into
jo
sbb
xlat
sub
cmc
push
mov
js
mov
mov
sbb
je
jbe
xchg
adc
or
pop
add
nop
lds
shl
mov
xchg
or
adc
push
sbb
or
sub
cwde
(bad)
and
push
cld
aas
icebp
nop
ja
call
cmc
dec
mov
ror
(bad)
daa
add
add
adc
jmp
inc
add
cmp
outs
iret
(bad)
push
cmp
bound
cwde
cmp
mov
dec
lods
cmp
sub
nop
push
xor
and
dec
xchg
ja
cmp
push
test
(bad)
shl
ja
ret
mov
test
jg
xchg
rol
add
stc
mov
test
bndstx
inc
xchg
dec
aaa
imul
pop
movs
nop
cli
sar
mov
dec
or
rcl
icebp
adc
loop
adc
pop
mov
and
sub
cli
push
inc
jmp
arpl
sub
inc
jmp
mov
cmp
cmps
and
jne
cmc
ins
push
jne
push
pop
dec
call
sbb
loopne
xlat
out
pop
inc
aas
movs
fadd
xor
lds
ja
mov
test
ret
cdq
aaa
adc
mov
sub
mov
and
arpl
pop
repz
mov
jecxz
or
inc
fnstsw
jmp
iret
inc
jg
ja
aad
xor
cmp
jmp
push
(bad)
adc
jle
test
ja
mov
cld
dec
push
(bad)
es
xchg
or
jno
push
scas
in
or
mov
adc
aaa
mov
xchg
mov
imul
jecxz
mov
imul
aaa
es
push
fild
xor
imul
xor
(bad)
jae
mov
cmp
pop
and
mov
xchg
push
hlt
sbb
shl
mov
cmp
xchg
add
mov
aam
or
ds
call
sahf
or
mov
(bad)
pop
pop
lea
aad
xor
ret
mov
inc
jge
mov
pop
or
pop
lods
mov
xchg
fwait
push
adc
inc
jae
js
sub
and
sub
dec
jae
push
jp
cmp
add
and
cwde
ror
or
lods
in
and
jle
clc
xchg
test
adc
mov
cmp
(bad)
lea
jns
mov
retf
xor
or
daa
popf
pop
mov
fidivr
aam
clc
sbb
fs
(bad)
test
hlt
iret
pushf
div
cmp
fcomp
enter
inc
xor
fidivr
and
push
adc
add
jle
xchg
cmps
mov
xchg
fdiv
icebp
js
jnp
dec
pop
ja
lods
popa
clc
jge
cmps
mov
out
and
add
movs
mov
cdq
cwde
and
fmul
inc
cwde
jl
mov
fcomp
hlt
add
push
xchg
sub
or
add
rol
(bad)
mov
fmul
lahf
adc
popa
jno
xchg
lahf
inc
les
mov
push
mov
(bad)
int
call
inc
and
pop
inc
mov
sub
push
cld
mov
(bad)
mov
fsub
enter
popf
callw
push
fimul
mov
out
cmps
leave
fidivr
or
jg
out
adc
ss
cmp
lds
shl
test
push
jecxz
bound
dec
pop
retf
dec
into
(bad)
pushf
pop
push
data16
adc
jg
ins
adc
aas
jmp
xchg
push
pop
jbe
or
bnd
pcmpeqd
retf
stos
jne
call
sbb
mov
jns
inc
inc
pop
inc
or
lea
arpl
enter
fnstsw
mov
dec
(bad)
push
push
push
lds
push
cmp
icebp
js
out
loop
push
push
ins
cmps
outs
mov
repnz
stos
pop
inc
je
push
sbb
pop
cmp
or
es
cdq
push
inc
mov
popf
add
xchg
jnp
les
push
and
or
daa
dec
ins
aam
pop
mov
ret
inc
shr
pop
mov
sub
jmp
sub
xchg
or
hlt
lea
pop
xor
xchg
bnd
fs
mov
stc
mov
movs
mov
cmp
ss
dec
adc
(bad)
and
in
hlt
jae
mov
repnz
inc
inc
aad
lock
ror
das
retf
mov
push
and
das
(bad)
lods
cwde
mov
xor
jl
push
mov
aas
arpl
inc
jo
div
push
shl
mov
idiv
ins
cmps
cmp
mov
imul
and
ins
stc
pop
jg
adc
btr
lahf
xor
aas
dec
jle
dec
adc
push
nop
sbb
test
xchg
ficomp
nop
adc
pop
dec
mov
push
add
or
aaa
fs
test
inc
in
lds
inc
or
or
or
imul
push
adc
pop
mov
loop
lods
push
imul
pop
mov
shr
and
sbb
test
push
jp
lods
jmp
(bad)
(bad)
stos
sbb
cld
shl
cdq
jns
in
mov
mov
xchg
xchg
repnz
nop
pop
scas
xor
mov
into
inc
push
xchg
sbb
xor
lds
inc
inc
fisubr
xchg
mov
cs
xchg
jne
(bad)
jne
in
cmc
jle
dec
aad
out
jecxz
js
daa
pop
and
out
or
xor
add
pop
push
cmp
sub
cs
fsubr
mov
and
fs
xchg
das
(bad)
clc
icebp
cmp
std
ins
fist
rol
push
test
enter
test
xor
fst
retf
repz
jl
out
jp
push
test
popf
xchg
push
mov
mov
pop
std
les
cmp
scas
sub
sahf
or
pop
aaa
lahf
pop
jl
mov
mov
cs
cld
xchg
xchg
test
sub
ins
inc
cmp
pop
jp
shl
mov
ins
jecxz
push
xchg
or
dec
sar
or
dec
stos
ss
dec
sub
mov
sub
loopne
xor
sar
ja
rcr
push
nop
gs
popf
je
cmps
int3
xor
jl
scas
push
call
xsavec
add
cmps
mul
pop
jo
les
push
pop
mov
pusha
fs
repz
pop
mov
jae
jns
ret
loop
enter
jge
or
pop
popf
jl
outs
gs
cmp
nop/reserved
xchg
or
fprem
sub
jle
sbb
outs
inc
in
pop
nop
imul
cmc
ins
dec
in
loopne
lea
mov
arpl
(bad)
clc
xor
xchg
out
and
stos
xchg
nop
cmps
cmps
jle
add
mov
aaa
int3
jno
push
xor
in
adc
jno
std
into
add
push
push
call
xchg
jl
mov
fdiv
mov
push
cdq
in
pop
or
mov
pop
int3
outs
and
inc
add
push
loope
enter
rsm
mov
not
imul
xor
js
aam
retf
mov
out
cmp
sub
test
push
pop
std
mov
mov
fwait
add
inc
dec
or
or
mov
xor
dec
fnstcw
cmps
sub
ja
adc
fld
retf
rcr
std
rcr
movs
push
xor
enter
sbb
mov
jge
sbb
xor
out
test
sub
push
ins
mov
cmp
cmps
repz
loop
xchg
sbb
and
iret
mov
pop
iret
inc
pushf
sbb
pop
fyl2xp1
je
xchg
ja
jne
xor
enter
inc
dec
ss
ds
push
mov
mov
mov
adc
pop
dec
aam
sub
inc
aas
xchg
out
in
jne
test
mov
ret
repnz
(bad)
nop
popf
xchg
loope
ja
cmp
ret
dec
xor
dec
xlat
mov
mov
and
inc
pusha
pop
mov
sbb
adc
jl
mov
inc
dec
jge
leave
xchg
fucomip
jno
mov
jns
push
retf
in
or
pextrw
mov
mov
sub
or
sub
movs
jne
div
sbb
adc
cmp
mov
inc
or
rcl
scas
mov
sbb
cdq
ffree
shl
out
inc
and
dec
mov
ja
retf
mov
iret
mov
retf
or
outs
icebp
repz
cmp
data16
xor
loope
ja
or
iret
push
out
mov
pop
inc
stc
int3
aaa
mov
jns
mov
jno
cmc
jmp
fs
inc
pop
fwait
loop
cmp
sub
push
es
fbstp
xlat
dec
cmc
mov
mov
test
addr16
pop
pop
icebp
sub
mov
xchg
call
jmp
es
(bad)
(bad)
pusha
mov
cmp
ja
mov
xchg
aad
push
mov
add
popf
dec
js
call
retf
dec
mov
pop
ss
js
sbb
cmp
in
call
mov
push
clc
xor
add
pushf
dec
(bad)
in
imul
dec
sbb
and
push
or
jo
fadd
and
icebp
inc
cs
mov
movs
loopne
daa
leave
jecxz
mov
inc
mov
inc
pop
jbe
hlt
sbb
mov
push
fcom
jno
sub
dec
repz
cmp
add
nop
idiv
jo
mov
sub
adc
sbb
mov
cmp
pop
std
sti
xchg
dec
xchg
inc
dec
retf
fld
pop
mov
push
mov
add
cmovp
cmp
daa
xor
in
mov
xor
or
xchg
nop
enter
mov
add
push
adc
(bad)
mov
sub
test
out
jg
xchg
scas
cli
cmp
loop
or
call
frstor
retf
and
dec
std
jne
push
cli
pop
jg
outs
int3
xchg
sahf
push
inc
adc
(bad)
mov
scas
or
xor
ja
dec
mov
mov
adc
lods
mov
das
add
mov
xchg
pop
xor
sub
push
std
inc
xor
cmp
xchg
hlt
and
cmp
mov
mov
(bad)
call
fneni(8087
add
ret
jmp
aam
clc
in
push
sbb
aas
cmp
adc
icebp
push
ror
fadd
sbb
(bad)
fs
test
out
or
xor
xchg
cmp
or
ss
mov
repnz
mov
xchg
dec
out
es
pop
sbb
inc
and
stc
cmps
loopne
repz
adc
mov
loopne
mov
movs
cli
pop
rcl
xchg
push
jp
cmp
or
int3
(bad)
jae
fcmove
jl
movs
dec
ins
push
rcl
lea
mov
or
outs
iret
mov
push
xchg
inc
mov
mov
mov
daa
xlat
jns
test
adc
or
(bad)
aam
maskmovq
mov
and
test
lahf
mov
hlt
nop
or
(bad)
mov
in
push
jmp
popa
retf
mov
and
xchg
retf
inc
mov
jmp
scas
cs
mov
adc
stc
hlt
ds
and
ins
int
outs
aas
push
cmp
ret
add
mov
xor
cmps
mov
mov
cdq
jmp
(bad)
xor
retf
xchg
scas
adc
pop
push
movs
mov
jno
lock
add
out
loop
lahf
and
xchg
and
sub
xchg
inc
jl
(bad)
mov
inc
cs
sbb
ret
mov
leave
rcl
xor
shl
inc
cwde
add
jmp
outs
loopne
cmp
bound
pusha
mov
fcom
mov
push
jne
retf
in
shr
mov
xor
add
neg
ins
fdiv
pop
fsubr
aad
mov
jg
rcl
repnz
jmp
pop
(bad)
(bad)
cmc
xor
mov
in
xor
mov
and
inc
jno
bound
sbb
(bad)
jmp
neg
xor
iret
fiadd
js
push
scas
and
push
xchg
inc
outs
sbb
jb
cmps
imul
lods
push
call
or
or
test
push
mov
lock
mov
cmp
add
mov
aaa
push
push
aad
lock
(bad)
and
arpl
or
inc
enter
xchg
retf
or
int
dec
cmps
test
cld
popa
das
push
bound
jae
mov
xor
aas
in
cmps
lahf
pop
cs
sbb
pop
mov
mov
pop
call
es
jne
mov
inc
loopne
mov
jns
or
add
outs
sbb
scas
xor
cmp
dec
(bad)
lock
lods
inc
scas
lds
aam
push
cdq
sti
and
addr16
sahf
xchg
pop
nop
aam
mov
test
(bad)
into
or
addr16
or
mov
pop
cmps
inc
fld1
(bad)
loope
add
mov
jp
dec
mov
cdq
repnz
xor
retf
add
mov
int3
mov
mov
inc
loopne
jno
push
inc
int3
xchg
popa
adc
push
fsubr
jno
adc
inc
sbb
pop
neg
mov
dec
popf
addr16
mov
dec
(bad)
mov
push
lods
clc
sub
sub
mov
cmps
adc
outs
mov
into
xor
adc
mov
jp
ins
mov
mov
fsub
je
inc
or
add
mov
mov
push
mov
inc
mov
mov
pop
sub
xor
push
sub
and
pop
jecxz
xor
mov
pop
inc
mov
out
fstp
and
jle
retf
inc
cdq
inc
sub
(bad)
out
mov
xor
fwait
inc
or
fnstenv
adc
mov
xor
test
loopne
(bad)
push
jle
fsub
fdiv
iret
js
mov
and
mov
fiadd
fld
aam
add
sbb
sub
jl
test
jg
test
mov
mov
mul
cmp
call
pop
in
scas
pop
mov
dec
mov
das
cmp
sbb
test
call
test
and
retf
jmp
jno
out
push
mov
sub
aam
cld
adc
push
cpuid
aam
test
in
or
ficom
pop
inc
rcr
iret
inc
jo
into
jp
xchg
mov
xor
pop
jae
in
xchg
lahf
dec
mov
inc
dec
or
lahf
iret
add
jns
and
or
test
pop
repz
mov
jo
rcr
cmp
popa
push
fidivr
imul
stos
adc
fdivr
and
iret
ret
sbb
loope
(bad)
aaa
xchg
push
push
repz
mov
pop
adc
inc
push
adc
fdiv
sbb
jg
aad
dec
ret
cld
ror
add
pop
pop
mov
test
xor
and
movs
jns
push
mov
sub
jnp
mov
rol
aaa
xchg
cmps
jne
outs
push
imul
mov
mov
fistp
jno
(bad)
and
mov
leave
mov
sub
stc
xor
or
cmc
(bad)
int3
cmp
xchg
jecxz
sbb
xor
pop
add
jp
push
push
fwait
mov
or
mov
fnstsw
lock
sbb
or
mov
pop
ss
dec
mov
xchg
cmp
addr16
dec
addr16
enter
jle
pop
mov
retf
imul
xchg
dec
jecxz
xor
or
fcomp
jo
sub
mov
(bad)
xchg
fwait
inc
pop
sbb
cmps
dec
sbb
mov
out
cmp
mov
push
ins
sub
pop
test
(bad)
mov
hlt
outs
call
inc
sti
call
pop
ret
xchg
data16
sbb
aaa
and
dec
push
int
dec
cmp
jmp
in
sti
or
pop
nop
and
mov
js
add
call
mov
loope
call
and
adc
and
(bad)
and
imul
mov
xor
sub
adc
xor
xor
outs
inc
cmp
push
and
sub
push
gs
mov
cli
or
(bad)
leave
in
aas
test
(bad)
jl
outs
ret
add
sub
leave
mov
outs
mov
inc
fs
ret
sub
stos
cmc
and
test
push
bound
retf
jp
jnp
call
push
test
xor
stc
outs
data16
rcr
pop
test
dec
and
rcl
mov
stos
jb
cmp
scas
cmp
push
popa
adc
and
and
cmps
add
jno
sbb
sub
les
add
in
mov
setno
fist
and
adc
(bad)
iret
dec
adc
jo
pop
push
cmps
sti
xor
clc
into
test
cmps
int3
push
scas
mov
outs
lea
jns
dec
sub
cld
sti
fisubr
popa
repz
vpmacsdd
mov
or
(bad)
les
sbb
ss
xchg
mov
dec
mov
mov
cmp
aas
jmp
xor
imul
sub
pop
div
test
dec
sar
outs
scas
push
jg
xchg
stos
dec
lock
mov
les
mov
(bad)
ins
fs
add
popa
and
mov
dec
mov
scas
dec
cmp
scas
xor
xchg
push
dec
dec
cmp
inc
mov
cdq
pop
push
ret
nop
xor
in
sbb
clc
jmp
adc
mov
pushw
sti
jns
cs
cli
dec
and
rcl
das
fcomip
ret
cmp
push
sbb
or
jmp
ret
lea
jnp
fucomp
xor
rol
imul
fistp
ins
nop
pop
jno
daa
lahf
stc
pop
outs
push
in
sbb
lea
pop
jl
mov
cmps
or
ins
jle
jmp
push
xor
push
mov
sbb
xchg
ins
xchg
setae
inc
adc
jle
sub
les
ins
inc
xlat
dec
push
(bad)
push
inc
stc
cmp
je
sub
xor
xchg
push
cmp
mov
push
xchg
add
shl
adc
shl
pop
les
enter
retf
adc
mov
xor
fst
sub
repz
sbb
imul
jno
mov
adc
dec
pop
movs
mul
xor
sub
stc
iret
das
imul
inc
int
mov
stc
or
(bad)
in
xchg
lea
jmp
xchg
rcr
cmp
scas
jae
sub
(bad)
fidiv
movs
aad
popf
outs
rcr
int
mov
aas
sbb
cli
lds
sti
call
xchg
sub
pop
out
shr
add
fs
push
loope
imul
out
xor
out
lods
push
inc
out
xchg
pop
sbb
and
adc
cwde
(bad)
add
mov
scas
jno
cmps
arpl
aas
in
pop
add
jae
pushf
sub
int3
(bad)
fsubrp
mov
(bad)
pop
pop
movs
pop
jo
mov
or
push
push
scas
push
jbe
shl
inc
sub
movs
mov
mov
sub
inc
xchg
add
fild
push
jb
push
test
adc
pop
pop
dec
push
mov
mov
test
mov
xor
add
mov
mov
fsubr
pop
je
pop
dec
and
(bad)
push
mov
sbb
inc
scas
add
adc
inc
mov
add
cmp
add
adc
shl
add
ins
sub
mov
out
lock
pop
xchg
out
stos
sbb
add
push
xchg
push
jp
or
fstp
adc
sti
cmp
pop
dec
lds
inc
pop
cs
aad
and
frstor
popf
and
pusha
mov
xchg
stc
cwde
cmp
ss
jb
pop
and
mov
and
mov
dec
pop
or
ret
ins
test
sbb
xchg
xchg
aad
lods
fadd
and
mov
sub
aam
shl
dec
jmp
pop
icebp
jns
adc
mov
mov
in
pop
or
pop
sub
cmp
enter
cs
fist
lds
adc
jecxz
out
add
ficom
ja
push
sub
fdivr
mov
mov
(bad)
ret
pop
pop
sahf
lods
(bad)
clc
add
mov
cmp
mov
jno
aas
fisub
mov
int3
sbb
lods
shr
mov
push
sbb
jl
das
movs
cmp
and
inc
and
ins
movs
xchg
pop
popa
cmps
push
imul
fld
sbb
arpl
mov
xchg
add
data16
dec
adc
dec
push
mov
cmps
xchg
out
mov
int
xor
add
movs
imul
imul
scas
stos
test
mov
mov
jo
rcl
imul
add
push
or
shl
in
retf
loope
mov
rcr
fs
dec
mov
outs
in
mov
fnstsw
sbb
sti
jne
stc
inc
cdq
sbb
call
mov
jno
add
or
mov
xchg
xor
movs
in
mov
or
aaa
pusha
pop
push
outs
add
mov
sub
pop
jp
into
cmps
sbb
sar
gs
pop
stos
mov
repnz
in
aad
mov
push
pop
sbb
loop
aas
pop
jbe
mov
ins
pop
ds
pusha
or
push
jmp
arpl
mov
aam
in
xor
mov
push
fmul
inc
or
arpl
mov
sbb
mov
or
jp
scas
ins
das
(bad)
and
fmul
aad
loop
aad
ds
inc
sub
in
hlt
and
enter
and
cmp
out
jno
popf
aaa
das
stos
vmulpd
imul
out
sub
stc
and
cmp
add
adc
xor
jnp
jl
ror
mov
xchg
push
test
mov
xchg
rcl
repz
das
aaa
jno
jge
inc
xchg
push
stos
mov
test
mov
push
mov
sbb
add
(bad)
and
fcomp
xlat
cli
inc
jns
pop
push
push
pop
inc
xor
inc
mov
aaa
push
xchg
jo
daa
(bad)
jmp
imul
outs
cmp
or
sub
add
xchg
push
inc
jbe
mov
leave
dec
fld
adc
push
jae
dec
dec
or
pop
adc
jno
cmp
mov
xchg
cld
jmp
mov
add
inc
jne
les
data16
(bad)
sub
cwde
fucom
sbb
ret
pop
push
mov
add
pop
arpl
jmp
jbe
inc
aas
test
ins
mov
xchg
adc
sbb
ss
sahf
leave
mov
aad
aaa
mul
les
arpl
(bad)
xchg
cmp
inc
mov
adc
std
xlat
daa
xor
lods
cmp
xor
push
pop
ret
test
push
mov
jge
movs
rcr
push
bound
cmps
sbb
or
out
mov
outs
(bad)
dec
fisubr
mov
das
push
inc
aaa
xor
das
jle
dec
mov
jmp
call
dec
dec
loop
dec
test
pop
sub
mov
add
test
push
jmp
sub
retf
das
sub
js
retf
pop
push
in
pop
ss
add
xchg
jb
jae
sar
or
xchg
(bad)
out
mov
sar
rcr
call
fistp
cld
pop
mov
add
out
ss
push
xchg
test
cdq
sbb
popa
cmp
xchg
jne
ficomp
adc
cdq
xchg
into
jge
cmp
pop
jno
mov
jecxz
push
dec
out
pop
imul
mov
shr
fnstcw
push
sub
inc
scas
push
cmc
pop
jne
lods
rep
push
(bad)
arpl
push
xchg
adc
ins
xchg
outs
mov
loopne
or
dec
sti
inc
xchg
xor
leave
xor
mov
rcl
(bad)
push
mov
and
pop
jmp
adc
add
push
push
cmp
dec
sub
lods
loop
push
inc
popf
mov
or
out
sub
lods
dec
push
outs
adc
sahf
je
test
iret
xor
add
iret
cmp
sbb
in
scas
adc
out
jge
mov
jbe
jecxz
push
push
or
cmps
retf
push
jnp
pop
sub
jns
loop
add
repnz
icebp
mov
xchg
sub
fbstp
xor
jg
mov
repz
sub
outs
fnstcw
stos
(bad)
fdiv
dec
or
cmp
leave
in
hlt
and
neg
inc
jmp
sub
cmp
pop
repz
retf
jno
div
inc
inc
lods
sub
xchg
(bad)
out
fidiv
lahf
jns
div
mov
dec
push
in
push
adc
daa
test
hlt
shl
call
adc
in
jge
sub
mov
sub
sbb
nop
ret
push
mov
je
out
cmpxchg
xor
repnz
mov
cwde
or
or
and
push
cli
out
mov
in
retf
push
(bad)
and
scas
ficom
out
xlat
or
js
push
into
lods
mov
jne
cmp
push
add
mov
xor
and
add
mov
int
sbb
sar
mov
push
imul
xchg
mov
mov
push
push
mov
jl
outs
outs
imul
ret
jns
inc
lahf
mov
mov
fstp
pushf
xchg
mov
(bad)
iret
lods
les
cs
mov
cli
and
ret
jmp
lods
mov
test
xchg
xlat
test
out
hlt
rcl
pop
push
push
xchg
mov
inc
cmp
mov
xor
outs
inc
retf
aas
sbb
pop
dec
out
xor
add
addr16
inc
xor
mov
jge
adc
and
pop
iret
dec
dec
jge
push
and
jns
fiadd
outs
rol
pop
xor
or
mul
stc
sbb
std
or
mov
push
cmp
gs
jb
loop
cmp
fimul
data16
ins
aaa
xchg
cli
mov
or
sub
jmp
mov
ins
sbb
and
jecxz
cld
test
pop
pushf
les
rol
nop
stos
jne
arpl
pop
sub
xlat
sub
pop
daa
fsub
dec
jg
adc
adc
push
dec
push
bound
js
test
sub
xor
ja
jg
imul
cld
outs
sti
lds
jns
(bad)
xchg
out
scas
and
or
push
mov
iret
jmp
wbinvd
retf
lds
movs
(bad)
shr
cld
xchg
popa
push
shl
jge
lods
popa
and
(bad)
stc
call
and
jge
and
mov
xchg
aas
sub
iret
stos
dec
test
test
push
stos
dec
xor
xor
mov
addr16
mov
mov
mov
outs
xor
ret
(bad)
and
jbe
test
(bad)
retf
jge
int3
dec
gs
or
mov
mov
(bad)
rcl
mov
leave
mov
fist
not
out
jnp
mov
movs
pop
adc
mov
cli
pusha
xchg
enter
mov
movs
leave
jnp
mov
div
retf
je
mov
or
addr16
sbb
adc
sbb
xor
xor
ret
jle
push
dec
adc
cmp
out
not
jl
sbb
lea
hlt
fldcw
push
pushf
ret
mov
mov
lahf
add
xor
test
sahf
inc
fidivr
data16
std
out
movs
jle
jge
xor
xor
jnp
sar
lea
or
cwde
sbb
loopne
aam
outs
sti
xchg
mov
ret
mov
or
gs
ror
loope
push
dec
sub
jmp
sbb
xchg
cmp
and
lods
ins
stos
push
fwait
add
or
sbb
and
cmc
fwait
cwde
and
mov
jmp
ret
loop
ss
dec
push
sub
mov
jmp
jb
(bad)
in
dec
and
lods
test
lds
outs
fnstenv
or
push
adc
push
or
sar
imul
add
outs
pop
out
call
mov
out
or
fwait
sbb
ss
lea
cwde
rol
test
cmc
scas
dec
pop
cmps
dec
call
jmp
push
cmp
sahf
push
popf
stos
inc
add
sbb
cli
or
mov
mov
(bad)
in
test
mov
add
pop
sub
fnstcw
jmp
cvtpi2ps
movs
push
cdq
and
and
dec
mov
loop
lahf
and
sti
(bad)
jae
test
pop
pop
rol
sar
dec
add
cmp
dec
mov
and
mov
lds
pop
jl
inc
int
ficom
shl
(bad)
add
or
nop
xchg
dec
mov
bound
ret
cmp
ds
push
inc
cmps
(bad)
push
inc
xor
jo
xchg
xor
ja
pop
addr16
fucomip
test
xchg
add
sbb
mov
ins
xchg
xlat
cs
out
adc
inc
cwde
jns
jne
pop
xchg
push
cmp
test
mov
sub
(bad)
mov
dec
aam
rol
dec
xor
xchg
scas
and
es
or
push
dec
sti
stc
mov
into
cmp
mov
ret
pop
popa
inc
sahf
cmc
sbb
aas
push
inc
iret
dec
cmp
adc
movs
sbb
mov
cmps
pop
cli
and
pop
inc
cmp
stc
repnz
into
pop
jecxz
jnp
dec
push
and
aad
test
shr
mov
fincstp
fisub
push
inc
jo
push
loopne
popf
jp
(bad)
and
test
cmps
das
int
je
iret
pop
(bad)
aam
imul
mul
cmps
(bad)
sbb
ja
mov
inc
dec
shr
xchg
or
jmp
sahf
inc
push
cmp
std
aam
mov
sbb
mov
fimul
jne
pop
mov
ds
mov
cmp
ds
cmp
cmp
lock
mov
popa
jne
or
pop
daa
xchg
adc
ds
ins
ror
jnp
int3
and
jecxz
push
stos
mov
sti
data16
lahf
imul
dec
pop
xchg
fild
inc
jb
sbb
pop
mov
cmps
jae
loopne
xor
test
retf
stos
bound
pcmpgtd
pop
(bad)
fadd
sahf
fisubr
sbb
sbb
arpl
test
sub
jecxz
fs
cmp
xor
mov
inc
(bad)
mov
add
add
xchg
sahf
jg
popf
mov
jae
cld
dec
in
jmp
in
push
jmp
push
scas
add
sub
retw
dec
rcr
mov
pushf
in
xchg
jbe
ret
pop
cwde
xor
xor
jo
mov
test
loop
call
stos
cmp
and
(bad)
repnz
sbb
push
lea
xchg
mov
bound
lahf
fwait
mov
lea
fisubr
pop
pop
xor
mov
popa
sub
int
call
enter
pop
jmp
cmc
neg
nop
fwait
mov
inc
mov
and
test
sub
call
push
adc
mov
mov
push
fisttp
data16
mov
(bad)
jge
inc
clc
aad
or
cmp
adc
cmp
fs
das
int3
lea
add
fdivp
test
movs
adc
mov
lods
pop
mov
out
bnd
mov
xor
add
gs
xchg
inc
xchg
lds
jnp
dec
xor
xchg
fidivr
cmps
pop
scas
add
add
xor
sub
dec
jns
cwde
lock
and
mov
dec
xchg
popf
ss
test
xor
stos
test
cmps
push
add
daa
xor
out
cmp
icebp
aas
hlt
loope
rcl
test
test
ins
jmp
shl
and
outs
aaa
sar
add
pop
adc
arpl
add
sbb
fdiv
dec
push
fdivr
mov
int
mov
repz
adc
inc
outs
test
out
div
fcom
dec
(bad)
jp
jg
inc
mov
stc
mov
mov
sub
aaa
push
mov
jecxz
mov
retf
(bad)
ins
sbb
sub
cmp
jecxz
std
jmp
add
aam
scas
outs
shl
sbb
pop
sbb
pop
aaa
fsubr
shl
cs
cli
add
xchg
cmp
add
pop
stos
mov
pop
daa
pushf
lds
pop
sub
sbb
xor
push
loope
xchg
push
adc
(bad)
punpckhdq
mov
push
sbb
xchg
cs
or
movd
fs
aas
inc
mov
mov
jmp
mov
hlt
loopne
push
pop
mov
test
and
stos
push
out
sub
or
jns
xchg
pop
bound
inc
mov
rcl
fld
sbb
fnstenv
fsub
mov
sbb
nop
inc
dec
rcr
xchg
imul
sti
adc
cmp
mov
push
mov
in
dec
push
lock
jle
add
aaa
data16
or
aad
xchg
inc
out
sbb
cmp
and
loop
fadd
xor
or
out
xor
jo
jecxz
mov
jle
inc
loopne
mov
sub
jle
mov
adc
xchg
fidivr
imul
xchg
(bad)
push
lods
sbb
or
xor
mov
add
dec
lds
fwait
idiv
call
jnp
mov
movs
push
push
cmp
shr
jle
sbb
jno
adc
rcl
cmps
add
add
ret
gs
cmc
adc
push
sbb
push
shr
xchg
hlt
sbb
sub
or
sub
xor
sub
in
xor
out
test
sbb
(bad)
xchg
adc
mov
jae
or
mov
xor
retf
out
dec
mov
in
jb
cld
xchg
sub
lock
sub
xor
or
adc
push
sahf
xor
mov
fsub
mov
sub
ret
mov
mov
jge
(bad)
(bad)
neg
pop
mov
lea
and
(bad)
pushf
into
push
std
adc
push
or
lock
or
mov
ret
ja
lock
in
jne
sub
jmp
outs
stc
cmc
aad
lods
inc
mov
test
mov
add
retf
aas
into
adc
retf
pop
mov
ret
jmp
movs
sbb
popa
imul
(bad)
out
fnstsw
dec
push
and
jg
xchg
loop
(bad)
push
(bad)
lahf
ja
or
jns
dec
sub
lds
popf
stos
jg
pusha
cmp
arpl
adc
mov
mov
sbb
(bad)
inc
in
in
movs
jecxz
adc
repz
adc
fist
sbb
jle
repnz
movs
dec
mov
arpl
inc
xchg
push
sub
sub
mov
xchg
call
xlat
mov
out
xchg
and
pop
stc
pop
xchg
push
ud2
std
push
inc
(bad)
leave
mov
loop
dec
inc
mov
ja
lods
mov
movs
push
test
mul
push
or
jns
mov
(bad)
(bad)
pop
cwde
jge
nop
aam
icebp
test
add
je
push
(bad)
mov
or
xchg
icebp
push
loop
cmc
jmp
loop
push
mov
retf
mul
or
das
out
shl
dec
popf
sbb
ret
and
shl
popf
pushf
outs
cld
sbb
rol
scas
es
jnp
and
mov
enter
sub
push
lods
daa
adc
dec
jge
inc
rcr
scas
ret
lds
pop
sub
pop
cld
pop
jae
pop
mov
pop
push
lahf
pop
cmps
xor
fisubr
out
inc
pop
push
mov
lahf
dec
lea
pop
imul
jbe
cmp
loopne
mul
add
imul
jmp
cmps
jno
call
pop
add
mov
test
je
dec
mov
sti
cmp
dec
cmp
aas
sti
xlat
sub
push
xchg
hlt
or
sub
and
jge
and
loop
sti
aas
lahf
mov
cmp
mov
outs
push
mov
aam
mov
mov
dec
jo
aam
cdq
and
cwde
in
call
jb
mov
sbb
cdq
stc
inc
call
icebp
cmps
ret
popa
data16
jle
mov
adc
mov
retf
adc
sti
icebp
push
data16
ror
sub
cmp
push
(bad)
lds
test
inc
mov
idiv
rcl
pcmpeqd
mov
dec
xchg
push
psrlw
jmp
bound
xchg
aad
jecxz
cli
cmp
jle
xchg
mov
lea
std
mov
push
(bad)
(bad)
shl
mov
sbb
es
pop
mov
sbb
dec
retf
pop
ret
lock
stc
cs
push
movs
and
and
xchg
imul
mov
dec
je
mov
inc
jbe
cmp
xchg
push
add
(bad)
xor
icebp
sbb
inc
jns
shr
lahf
jl
mov
out
inc
cmps
sar
lods
push
push
xor
xor
pop
mov
call
daa
mov
aas
scas
or
cmp
jge
cld
dec
pop
jl
repz
pop
push
data16
cmp
jo
adc
(bad)
push
ja
out
pop
inc
cmp
in
pop
cmp
dec
clc
out
jbe
inc
pop
(bad)
xchg
push
test
inc
pop
movs
mov
pop
mov
inc
inc
(bad)
jp
sub
outs
sub
or
enter
xor
mov
ins
jl
and
jmp
jo
sahf
stos
jb
sar
jmp
pop
mov
mov
xor
and
push
jno
mov
neg
mov
sub
xchg
das
jns
ret
das
test
jae
arpl
imul
jbe
or
cmp
or
mov
aad
sub
sbb
add
aas
jmp
or
pop
sbb
xchg
outs
retf
jmp
cmp
jecxz
stc
std
dec
and
ret
pop
bound
xchg
aam
adc
adc
(bad)
and
mov
jmp
mov
dec
lahf
push
ret
sub
mov
cmp
push
movs
jbe
mov
call
push
xor
leave
and
fs
pop
call
xchg
imul
jl
stos
cmp
cmp
jecxz
inc
adc
dec
popa
xor
and
(bad)
int
ret
in
xor
jmp
xor
adc
fbld
jb
mov
movs
fs
push
adc
sub
pop
and
pop
data16
sahf
push
stos
fistp
mov
cs
stos
les
inc
or
xor
pushf
xchg
movs
ja
sbb
push
mov
pop
mov
call
dec
sub
dec
rcl
pop
lds
xlat
pop
dec
jnp
mov
retf
cmps
pop
mov
sahf
and
push
je
inc
push
jge
mov
xor
dec
imul
hlt
imul
aam
sahf
dec
jecxz
shr
popf
dec
out
mov
bound
mov
hlt
cmps
call
mov
imul
rol
(bad)
sub
jae
jmp
lods
inc
lea
push
mov
fsub
das
jbe
retf
div
cwde
mov
adc
ja
xchg
sub
add
sub
push
add
mov
ss
push
in
jle
call
adc
retf
adc
cmc
add
sub
or
movs
xchg
daa
xor
aad
scas
stc
push
push
lds
sbb
jbe
movs
pop
call
dec
shl
push
imul
adc
mov
xchg
in
sar
fs
jbe
inc
push
add
mov
iret
imul
adc
pop
scas
xor
push
add
(bad)
jl
cwde
arpl
xor
pop
mov
xchg
mov
sub
adc
sbb
(bad)
popf
pop
and
daa
jecxz
jns
sub
mov
cmp
xchg
mov
imul
mov
retf
dec
in
inc
and
push
mov
push
mov
push
mov
jge
call
mov
(bad)
sub
test
pop
lods
loope
inc
mov
pusha
aad
or
dec
aam
cmp
pop
aad
jbe
jae
add
cmp
inc
(bad)
cli
rcr
pop
adc
push
fdivr
out
add
add
sbb
mov
imul
out
or
or
sub
xor
popf
and
scas
mov
pop
push
fimul
xchg
sbb
push
cdq
dec
daa
mov
lds
mov
in
sbb
jmp
cmps
inc
dec
mov
dec
retf
xchg
sub
and
pop
mov
push
dec
dec
iret
add
js
pmuludq
or
jl
push
inc
jno
xchg
aaa
pop
or
sti
mov
sbb
out
xchg
push
std
push
mov
cdq
xor
sets
dec
adc
jecxz
push
nop
(bad)
icebp
aaa
mov
jmp
mov
and
ds
js
pop
sar
popa
jnp
retf
cs
ins
dec
ins
in
jb
leave
adc
or
retf
test
lods
xor
xor
lock
and
mov
fld
std
jo
test
push
sbb
outs
xchg
mov
cmp
call
clc
pop
sbb
xor
test
dec
rcr
push
wrmsr
lods
mov
cdq
rol
jne
jp
int
retf
mov
in
mov
fst
xor
xor
mov
retf
mov
inc
fwait
div
xchg
dec
xor
ficom
mov
iret
push
dec
popf
retf
outs
ret
add
mov
nop
add
or
mov
xor
popf
clc
jmp
push
sub
push
es
sub
repnz
push
fwait
movs
cmp
xchg
ins
(bad)
jb
push
es
xchg
cs
fnstcw
loop
mov
mov
xor
dec
cmp
shr
icebp
adc
dec
jl
ret
xchg
sub
shl
mov
rcr
inc
sub
aad
push
repnz
fcmovnu
jmp
outs
mov
and
add
lods
inc
dec
dec
mov
xchg
dec
xor
std
jg
dec
sbb
int
xor
push
lods
add
jmp
adc
lods
jne
sbb
mov
jo
stc
sahf
mov
aad
sbb
inc
inc
jl
sub
mov
xor
adc
sbb
scas
push
stos
add
mov
int
sbb
scas
js
mov
lods
xor
ret
push
imul
xchg
jo
mov
idiv
lahf
xchg
movs
sub
and
dec
movs
xor
inc
test
xchg
fisubr
sbb
mov
sub
ins
(bad)
pushf
jnp
mov
popf
fiadd
fldenv
and
jne
int3
jmp
int
out
mov
and
mov
pop
xchg
pop
retf
aas
xor
out
push
or
mov
pop
pop
inc
adc
dec
and
in
xchg
shl
mov
fimul
jne
sahf
hlt
mov
jl
fdiv
xchg
scas
pop
xchg
mov
mov
ins
inc
sar
retf
adc
or
sbb
call
push
and
(bad)
fstp
addr16
imul
mov
(bad)
cmp
repz
adc
xor
ret
(bad)
cmps
mov
out
cs
mov
mov
mov
mov
mov
in
in
push
ja
mov
lahf
pop
inc
or
or
sbb
and
dec
js
push
fwait
cmp
or
dec
fstp
cmps
xor
xchg
cmp
scas
add
jl
loopne
push
xor
sub
push
sub
inc
xchg
fst
sbb
test
dec
lds
jno
lahf
stc
inc
outs
add
neg
push
ret
mov
or
or
xchg
sub
xchg
mov
sub
sub
xor
fsub
repz
je
dec
test
lods
push
popf
adc
jo
push
mov
mov
cwde
dec
dec
sti
xchg
mov
cmp
sbb
fcmovnb
xchg
out
es
enter
push
test
fisub
pop
out
fdivrp
mov
jnp
inc
mov
jmp
dec
push
xchg
push
adc
test
push
adc
rol
mov
push
cdq
rol
(bad)
push
mov
add
or
(bad)
pushf
add
out
rol
lahf
pop
sub
inc
mov
mul
in
xchg
in
push
jns
out
retf
mov
adc
cmc
push
jbe
clc
enter
pushf
jnp
int
sub
in
jmp
pop
scas
sbb
aas
inc
hlt
xor
push
fisubr
nop
jp
mov
shl
fistp
xchg
mov
outs
sub
ins
test
or
in
xchg
jmp
addr16
addr16
add
sbb
pop
cmp
loop
loop
pop
sub
push
movs
push
and
outs
ins
fcom
pop
ucomiss
test
mov
add
xchg
in
sbb
test
mov
out
cmp
fs
dec
es
adc
push
retf
dec
in
xchg
xchg
cld
and
mov
inc
ret
sub
push
mov
add
mov
mov
iret
out
movs
cmp
xlat
xor
add
lock
test
mov
clc
cmp
xlat
inc
shl
jmp
jg
dec
xchg
adc
adc
(bad)
ja
bswap
inc
push
mov
or
cli
inc
(bad)
mov
jo
jp
sbb
dec
outs
es
inc
enter
pop
nop
cwde
shl
mov
mov
push
jmp
lds
pop
and
dec
mov
xor
vaddsubps
and
loope
dec
hlt
adc
push
adc
add
inc
sub
inc
sub
xchg
aas
icebp
pop
std
xchg
inc
(bad)
or
sub
pop
aam
sub
and
dec
or
data16
add
add
sbb
push
push
repnz
xchg
push
mov
ret
dec
hlt
sub
rcr
lea
cmp
inc
(bad)
cmp
sbb
sub
xchg
xchg
inc
sub
mov
jne
xchg
sub
mov
xlat
clc
inc
test
jecxz
pop
(bad)
js
inc
xor
js
pop
aas
fstp
(bad)
mov
xlat
movs
lea
inc
xor
into
mov
mov
lahf
(bad)
mov
and
push
and
ret
and
mov
pop
or
dec
ret
mov
inc
repnz
fs
lock
leave
cdq
mov
jns
adc
lock
jmp
stc
inc
add
icebp
sbb
ins
jg
jnp
mov
ret
jle
loopne
and
pushf
mov
test
push
pop
jmp
jmp
adc
aam
pop
pop
sbb
mov
iret
mov
and
mov
xchg
pop
sub
mov
test
test
or
jb
js
retf
pushf
jno
mov
and
push
lahf
sbb
xor
addr16
popf
mov
scas
sub
out
inc
popf
dec
loope
xor
adc
data16
mov
cdq
cmps
xchg
mov
fiadd
(bad)
fwait
adc
cmp
xchg
and
je
sub
inc
call
mov
lds
fwait
mul
push
in
fs
cwde
ret
xor
repz
adc
push
aam
mov
stc
add
in
js
rol
xchg
jl
out
mov
lahf
stos
dec
add
repnz
inc
dec
sbb
mov
mov
lock
test
pop
nop
lea
imul
xor
or
dec
jle
(bad)
out
mov
push
xchg
and
push
mov
scas
mov
xchg
mov
shl
aas
repnz
das
jl
(bad)
lahf
cmp
fistp
movs
mov
mov
call
stos
mov
or
imul
adc
cmps
inc
mov
cmps
xchg
cmc
dec
xchg
ret
mov
mov
inc
movs
sbb
adc
(bad)
popf
(bad)
cmc
pop
addr16
xchg
cmps
jmp
cmp
ret
mov
pop
add
xchg
add
sbb
sbb
mov
pop
sub
ds
sub
das
gs
out
cmp
addr16
sub
repz
loop
push
jge
xor
or
test
adc
test
(bad)
in
mov
pop
inc
cmc
(bad)
jmp
jp
jb
jb
sub
jb
add
inc
aas
sti
and
(bad)
clc
js
sub
jnp
retf
mov
cwde
push
push
repnz
ja
int
cmp
hlt
push
mov
fist
jle
lods
mov
xor
add
pusha
sbb
out
fisubr
sbb
cwde
aad
xlat
mov
ret
enter
add
add
clc
xor
movs
data16
out
cmc
outs
sbb
cmp
dec
shl
xchg
push
cmc
cli
jnp
xchg
repz
mov
mov
pushf
stc
xchg
movs
aaa
pusha
or
in
add
enter
(bad)
xchg
xlat
mov
mov
aam
and
and
mov
add
rcr
mov
ins
sbb
or
js
(bad)
paddb
test
xchg
fcom
ins
cli
std
jno
jnp
popf
iret
or
jl
arpl
mov
push
(bad)
jae
ret
and
arpl
adc
fnsave
mov
push
jmp
cdq
shl
mov
add
(bad)
pop
int
sar
mov
mov
mov
dec
pop
inc
rol
sub
gs
imul
cs
sahf
mov
mov
pop
dec
(bad)
push
jnp
cli
stc
mov
inc
mov
ror
pop
shl
mov
(bad)
xor
clc
sbb
and
repz
adc
bound
in
fisttp
mov
dec
mov
sbb
scas
sbb
push
add
loopne
test
retf
dec
push
jb
xchg
push
test
mov
jecxz
loopne
data16
ins
add
mov
xchg
sub
mov
add
fdivr
jle
scas
aaa
inc
xor
cmps
cli
sbb
leave
mov
pop
mov
jl
mov
mov
adc
push
mov
js
jge
pop
lock
and
sub
sti
push
into
addr16
add
push
jmp
leave
or
mov
pop
xchg
jb
mov
jne
fiadd
jb
arpl
pop
and
mov
fwait
or
pop
sub
mov
jge
pop
js
jae
mov
or
rcr
mov
or
scas
push
sahf
pop
gs
or
mov
cmp
das
push
pop
sub
jbe
sub
push
popa
xchg
pop
push
lods
pop
test
(bad)
mov
test
daa
sbb
adc
(bad)
push
dec
imul
outs
sub
sub
rcr
mov
rcl
mov
fild
daa
js
lea
jmp
scas
je
or
in
add
into
cmp
jmp
cmp
lahf
ja
push
jb
jo
cdq
dec
test
and
rol
add
push
cdq
inc
loop
mov
popf
xor
and
jmp
add
fs
out
mov
push
pop
and
lock
mov
adc
adc
cmps
dec
sub
and
cmc
or
lds
fist
call
adc
push
inc
je
inc
aaa
in
jne
jnp
mov
sti
rol
ja
stc
sub
xchg
dec
das
retf
sub
mov
test
and
pop
xor
mov
push
lock
push
xchg
sub
and
dec
jb
ins
dec
mov
imul
stos
lods
es
cmp
test
repnz
inc
sbb
add
pop
fbld
ror
or
scas
cmp
in
xor
inc
mov
mov
adc
push
ret
jmpw
mov
jmp
fst
scas
loop
jo
dec
retf
shr
xor
mov
shl
cmp
scas
shl
shl
das
or
nop
sti
sti
in
lock
ins
lds
scas
mov
mov
ins
add
(bad)
cwde
inc
mov
inc
jae
lahf
pop
add
popa
add
inc
repz
cmp
jp
jbe
ja
jae
loop
iret
adc
fstp
xchg
sub
adc
cmp
jns
cld
push
rcl
ja
sub
addr16
sbb
repz
mov
cmps
fsubr
xchg
fild
mov
jno
imul
xchg
(bad)
fwait
cdq
inc
and
ss
int3
fchs
sar
sub
mov
fldenv
cmps
ds
outs
xchg
leave
fdiv
inc
sbb
xchg
cld
mov
sbb
xor
sbb
sub
push
adc
pop
mov
cmps
bound
scas
cmp
mov
sub
shr
mov
das
lahf
mov
dec
iret
pushf
enter
mov
pop
dec
sub
(bad)
hlt
xchg
sar
cdq
jno
dec
cmps
scas
jle
leave
push
pop
(bad)
bound
nop
(bad)
pop
js
and
stos
jle
jge
sbb
adc
das
shl
or
jle
loop
pushf
aas
cdq
xchg
shl
in
fmul
push
mov
sbb
mov
xor
cld
sbb
jne
inc
fidiv
pop
lea
cmp
cdq
xor
inc
outs
mov
loopne
dec
jmp
fwait
jb
rcr
gs
lock
loope
cmp
enter
inc
call
add
aaa
jmp
cld
dec
xor
sub
ficom
push
cli
loop
adc
and
sbb
ins
push
and
cmp
xchg
add
dec
lods
push
cmovl
popf
lock
xchg
nop
add
jbe
cdq
fsub
imul
cmps
leave
sbb
into
cs
xchg
xor
or
mov
pop
push
dec
push
dec
mov
in
pop
mov
add
sub
mov
dec
mul
xor
mov
pop
popa
xor
push
pop
ja
cmc
or
jae
dec
or
out
in
popf
mov
pushf
ret
push
pop
jmp
bound
fwait
(bad)
mov
int
mov
imul
cmps
jne
out
iret
cmp
jnp
les
test
mov
xchg
fist
ss
lds
cmp
sbb
mov
push
(bad)
es
popa
push
ins
sbb
push
aas
fldcw
ss
mov
cmp
ret
sbb
xchg
adc
adc
sub
ins
and
imul
(bad)
mov
jo
nop
loop
adc
add
mov
or
dec
pop
pop
sahf
xchg
clc
dec
dec
in
jmp
sub
icebp
call
lock
add
inc
(bad)
pushf
cmp
call
shl
inc
dec
jecxz
(bad)
fild
dec
pop
sbb
in
push
mov
pop
imul
inc
xchg
pop
imul
(bad)
xchg
xor
add
add
pop
pop
repz
outs
test
pop
aas
(bad)
jo
arpl
imul
int3
add
bsf
mov
push
sub
jle
mov
sub
daa
sub
xor
add
fistp
mov
cmp
add
or
fisttp
scas
mov
add
lock
mov
xor
rcl
dec
or
mov
xchg
add
pop
sar
xor
int
movs
xor
pop
shl
push
push
or
cmp
call
int
jmp
into
in
fwait
popa
into
jo
pop
rcr
cmc
retf
ret
mov
push
or
add
pop
repz
jg
into
call
cmp
xchg
leave
(bad)
in
cmp
out
bsr
mov
or
xchg
push
daa
nop
add
xor
mov
(bad)
mov
adc
pop
dec
pop
push
loopne
sbb
enter
(bad)
xlat
or
jns
mov
repnz
arpl
push
mov
out
sub
scas
push
nop
fyl2xp1
sbb
sbb
cli
out
mov
popf
(bad)
jbe
(bad)
add
xor
outs
jmp
pop
add
mov
mov
mov
cmp
aas
inc
out
lods
lea
xchg
aaa
outs
inc
stos
inc
jbe
cmc
into
idiv
or
inc
push
in
ins
rcr
or
pop
adc
adc
push
cmc
mov
enter
shr
dec
scas
ins
loopne
ror
ds
xor
dec
sti
daa
push
sbb
pushf
push
(bad)
xchg
push
push
jns
loope
pop
int
pop
or
lahf
and
popf
inc
xchg
(bad)
rcl
mov
fsub
fld
or
add
jge
sub
add
mov
aaa
push
add
data16
aad
ss
scas
or
xchg
mov
add
add
je
adc
or
push
pop
int
clc
sub
test
fld
imul
xchg
out
fsub
xor
imul
or
sti
xchg
test
call
dec
and
mov
call
mov
mov
repz
test
jg
lahf
out
cli
rol
jp
mov
add
mov
jl
mov
arpl
je
es
cmc
add
mov
xor
adc
dec
or
xor
scas
mov
mov
int3
xchg
mov
or
adc
bound
fcom
jbe
push
mov
(bad)
(bad)
mov
int
jge
lock
jne
and
cmc
jmp
cld
jmp
ficom
push
lods
xchg
add
fs
retf
pminsw
push
ins
scas
stos
push
ret
cli
mov
les
mov
mov
push
cmps
les
cld
push
pusha
dec
sub
in
push
gs
add
loope
cwde
cmp
lahf
retf
sub
xlat
or
push
xor
sub
neg
sahf
fiadd
mov
mov
adc
fdiv
cmc
lea
mov
inc
cld
arpl
push
lods
rol
scas
mov
loope
jbe
dec
fstp
or
retf
mov
out
jo
push
push
je
out
cmp
icebp
sbb
jb
adc
mov
or
fcmovne
pop
sub
(bad)
rol
neg
dec
sub
rol
xchg
and
push
pop
sti
jecxz
sti
or
add
mov
cmc
psubsw
arpl
and
sbb
inc
scas
jge
or
dec
out
div
xor
ds
mov
rol
push
sub
je
shr
dec
pop
xor
mov
stc
fisub
jg
xchg
mov
aas
test
ja
or
cdq
es
add
push
dec
and
pop
inc
jb
cmps
push
mov
mov
xlat
add
and
aam
gs
iret
out
popf
bound
pop
xor
jl
sbb
mov
or
nop
xor
dec
nop
dec
js
stc
call
sar
stc
cdq
cmp
mov
(bad)
jmp
mov
arpl
jne
cmp
lds
push
cwde
cmps
mov
int
repnz
ins
inc
fwait
and
cmp
out
retf
iret
jb
xor
sub
add
sti
std
xor
dec
jge
xor
mov
jmp
jp
dec
and
outs
dec
cmp
push
mov
iret
xchg
or
cs
mov
adc
das
nop
pusha
std
cwde
cwde
rol
(bad)
cmps
leave
jnp
mov
sub
adc
pop
xchg
jl
sbb
adc
or
push
retf
xchg
into
sub
inc
aad
mov
jg
je
push
(bad)
aaa
jmp
stos
sbb
pop
xlat
stos
add
lea
mov
jmp
xor
cmp
call
inc
call
test
dec
push
jmp
sub
test
mov
jge
scas
movs
mov
xchg
cmp
adc
popf
inc
jge
adc
cmp
dec
xor
and
cmps
les
dec
add
mov
ds
or
stc
inc
push
inc
in
neg
push
or
nop
cmp
jne
icebp
xor
xchg
or
inc
out
mov
dec
jmp
addr16
jae
inc
mov
push
dec
sbb
adc
inc
dec
(bad)
not
test
mov
cwde
add
inc
enter
jbe
ins
shr
sbb
ret
pop
call
cmp
ret
fidiv
pop
rcl
cmp
fnsave
inc
mov
inc
inc
sbb
and
rol
(bad)
aad
xor
cmp
aam
sbb
rol
lock
cmp
mov
pop
or
rol
sub
shr
add
or
sub
sbb
xchg
cmp
xor
and
mov
mov
dec
fcomp
data16
dec
pop
into
lea
dec
sbb
mov
retf
mov
sbb
cwde
cld
mov
ins
mov
xchg
aas
push
push
push
pavgb
test
pop
add
cld
in
ins
(bad)
in
mov
jp
(bad)
inc
lods
inc
add
out
inc
sbb
out
leave
adc
fwait
jg
mov
or
cmp
xor
loop
pop
jb
out
jmp
push
and
arpl
aam
push
aas
lock
sbb
sub
adc
xor
push
in
xchg
jae
inc
bound
ins
jns
add
pop
sbb
sub
push
dec
test
(bad)
jge
out
dec
jp
addr16
mov
fmulp
nop
out
in
pop
adc
mov
sub
lods
xchg
je
sbb
xor
neg
not
call
cmc
mov
mov
ds
pop
push
sub
add
add
sub
inc
jge
cs
mov
ds
fdivr
outs
inc
loopne
sti
stos
mov
aaa
jge
out
sar
(bad)
sbb
pop
push
push
mov
aaa
xor
push
push
pop
cmp
jg
xchg
cmp
xchg
xor
mov
fs
or
loopne
or
push
arpl
les
out
cld
mov
add
aas
rol
mov
rcl
xchg
push
icebp
add
push
out
jl
pop
call
test
dec
inc
push
xlat
xchg
int
add
cmp
cmp
push
cwde
aad
jmp
jge
cmp
push
add
dec
adc
loop
daa
pop
dec
(bad)
test
in
das
cwde
jbe
push
or
inc
adc
imul
repnz
or
mov
fcom
xchg
gs
or
or
push
js
jmp
xor
sub
jbe
sbb
out
or
scas
mov
rcr
push
pop
cdq
test
loope
lods
cmp
bswap
sub
mov
fcom
dec
sub
xchg
icebp
dec
inc
aam
sub
and
sbb
cmp
mov
mov
or
repz
and
jo
test
lods
or
cmp
call
addr16
ja
jl
repz
pop
jl
mov
push
out
(bad)
and
pusha
int
cld
mov
test
lea
dec
mov
(bad)
out
lds
push
push
js
xchg
inc
gs
dec
rol
dec
xor
dec
sti
mov
or
push
jae
hlt
mov
cmp
not
mov
mov
das
in
neg
jo
(bad)
cli
xchg
clc
icebp
(bad)
xchg
fisubr
xor
xchg
jne
loope
into
adc
cmps
js
fmul
mov
xchg
jno
xchg
and
add
loopne
mov
arpl
and
bound
leave
pop
sub
je
shr
jle
rcr
jmp
sbb
push
xor
jp
jecxz
sub
cmps
push
inc
and
sbb
fcom
lods
lahf
aaa
cld
and
fnstcw
stos
popa
mov
xor
mov
movsx
mov
rdpmc
ins
rol
push
leave
ret
loope
adc
fbstp
hlt
jle
cmp
leave
xor
fnstsw
hlt
xor
xor
mov
enter
xor
iret
push
mov
jno
fwait
mov
adc
outs
dec
mov
jo
fistp
dec
cmp
jns
fbld
push
push
shl
out
pop
push
sbb
ret
fcomp
sbb
mov
cmp
inc
stos
pop
cmp
mov
mov
pop
xor
jmp
in
inc
add
adc
mov
test
xor
(bad)
movs
jmp
hlt
int
sbb
cmps
inc
jbe
loop
jmp
bswap
xor
cwde
dec
mov
hlt
xchg
xor
and
pop
dec
jl
sub
js
inc
fldenv
test
mov
fild
les
out
push
daa
add
stos
pop
pop
int3
in
pop
inc
or
mov
xor
nop
popa
popa
dec
push
in
push
adc
pop
leave
cmp
daa
call
sub
adc
fcompp
out
pop
or
iret
and
fldenv
mov
cmp
dec
mov
outs
fstp
shl
je
inc
xor
(bad)
and
push
int3
cmp
pushf
repnz
fs
ins
mov
push
imul
lods
aaa
int3
and
scas
test
paddd
movs
sbb
scas
and
into
jae
mov
pop
sbb
jae
xchg
std
xor
dec
xchg
mov
int3
mov
xchg
jl
pop
adc
pop
stos
mov
pop
(bad)
adc
ds
xchg
cmp
icebp
mov
jnp
std
ins
or
add
xchg
xchg
fadd
inc
cmp
jmp
in
xchg
dec
das
xchg
retf
jns
dec
in
mov
xchg
push
retf
cdq
sbb
out
xor
jae
xchg
and
mov
stos
in
mov
aaa
push
into
inc
jno
mov
(bad)
push
push
mov
mov
pushf
stos
test
fisubr
fild
out
cmp
push
test
out
cdq
cmp
cmp
movs
(bad)
mov
xlat
mov
xchg
jne
sbb
jle
or
xor
addr16
stos
and
and
xlat
movs
add
enter
not
mov
mov
jns
mov
rol
push
jbe
xor
and
pusha
cmp
dec
aaa
call
and
(bad)
cmp
lods
idiv
movs
mov
adc
pop
push
nop
(bad)
(bad)
rcl
(bad)
lahf
mov
lods
out
xchg
push
push
add
bound
or
or
out
dec
cwde
(bad)
fbstp
inc
jbe
add
sbb
ins
or
or
and
mov
pop
ret
mov
nop
fisttp
stc
jecxz
(bad)
js
fisttp
daa
pop
aas
xchg
inc
cmp
ins
add
arpl
pop
cmp
(bad)
push
add
stos
cmc
dec
jmp
daa
mulps
add
aad
xchg
sbb
ficomp
cs
addr16
cmc
pushf
mov
mov
jmp
sar
push
push
test
or
imul
jno
shl
mov
fsubr
call
das
add
test
movs
cld
mov
or
inc
retf
mov
push
out
into
fidivr
test
or
addr16
mov
pop
and
sbb
add
(bad)
jg
aaa
mov
or
jo
sub
loop
jnp
or
repz
push
jne
xchg
cld
and
cmp
cs
dec
inc
outs
in
out
sub
les
xor
dec
imul
pop
retf
jne
jo
ja
lods
ins
test
shrd
xor
pop
lahf
sbb
jmp
icebp
or
add
retf
call
xlat
aaa
cmp
xchg
jns
sub
xor
in
loope
sbb
sar
shl
imul
push
push
scas
cs
movs
dec
mov
dec
js
add
cmp
or
test
imul
std
gs
test
retf
sbb
xor
data16
into
cwde
addr16
icebp
ficomp
sub
aam
inc
pop
(bad)
dec
in
jmp
aas
push
xor
in
add
mov
push
mov
cmp
dec
mov
das
dec
xchg
add
sub
add
mov
mov
dec
jl
add
push
pop
mov
(bad)
(bad)
mov
adc
loop
aam
fild
sbb
jno
enter
cmp
in
aaa
scas
dec
mov
add
inc
xor
adc
js
mov
mov
pusha
lds
sub
cmp
ds
ret
test
xor
dec
in
pop
pop
mov
sub
shl
dec
adc
or
test
and
sub
jo
xor
mov
cmp
push
(bad)
stos
xchg
js
and
push
pop
rol
sub
les
aaa
inc
shl
loopne
std
out
stc
push
bound
mov
(bad)
fsubr
out
dec
sbb
(bad)
xchg
sbb
and
arpl
sbb
push
(bad)
mov
cmp
fstp
cmc
ret
or
xlat
fstp
xchg
add
mov
or
sti
adc
fcomp
not
jae
shl
mov
cdq
pop
inc
or
cmps
and
xchg
cmp
jle
mov
enter
sbb
cmp
and
push
xor
ss
xchg
fisttp
or
inc
sti
mov
int
adc
(bad)
out
xor
push
loope
mov
mov
lahf
or
stc
sqrtps
adc
div
lods
xchg
inc
mov
and
lds
jae
lds
rcl
loopne
sbb
loopne
test
sub
in
mov
mul
rol
inc
and
mov
lods
push
inc
sbb
(bad)
mov
mov
lods
lds
and
iret
cmp
push
adc
jnp
loopne
cmp
aad
scas
call
inc
loop
inc
pop
sbb
pop
xchg
inc
adc
mov
fistp
or
xchg
bound
xchg
movs
sti
xchg
jb
inc
scas
cli
in
loopne
ds
gs
leave
xchg
adc
sbb
or
ret
pop
fwait
jge
mov
jns
fild
push
leave
jae
mov
xlat
cmps
cmps
inc
sub
mov
xlat
ror
gs
arpl
push
pop
aas
jge
adc
mov
mov
not
push
shl
rep
cmps
and
cmp
push
sbb
cld
mov
retf
out
pop
jl
mov
lds
mov
adc
out
dec
retf
mov
mov
sub
mov
movs
imul
push
push
mov
and
jo
cmc
sbb
ja
inc
call
mov
pop
mov
push
add
dec
scas
outs
mov
in
iret
pop
dec
nop
pushf
push
and
outs
and
lods
les
enter
inc
(bad)
jmp
sti
in
cmp
movs
jecxz
data16
iret
sbb
fst
adc
int3
jbe
in
stos
popf
movs
xchg
sahf
adc
push
into
mov
pushf
es
fmul
mov
xchg
sub
pop
adc
jnp
loope
push
(bad)
dec
ins
pushf
push
icebp
xor
into
jb
adc
dec
mov
mov
cwde
or
sar
pusha
xchg
imul
in
pop
add
fdiv
mov
pop
mov
retf
mov
push
pop
ret
and
mov
and
or
xor
xor
int
jp
dec
idiv
add
test
dec
out
rcl
jbe
inc
test
add
loope
lods
call
fxch
popa
fstp
les
icebp
inc
add
jecxz
add
xchg
mov
adc
or
fstp
jns
shr
not
call
rol
mov
mul
dec
movs
push
shr
xor
push
sub
inc
daa
jg
aam
cmp
es
sub
jl
and
std
fwait
es
jge
dec
push
aaa
pop
mov
jne
adc
inc
add
pop
sbb
das
out
stos
aad
jmp
fwait
add
xchg
mov
dec
call
sub
std
sbb
retf
mul
cmp
jl
or
dec
test
mov
or
hlt
or
cld
pop
(bad)
icebp
cmp
mov
pop
cmp
add
lahf
data16
xchg
stos
and
out
ss
and
shl
(bad)
mov
xchg
inc
add
add
mov
ds
mov
and
or
int
shl
sbb
pop
dec
dec
fisubr
jecxz
rcl
cmps
repnz
sub
pop
dec
jne
imul
and
sbb
sub
das
adc
mov
repnz
aaa
lock
stos
cmp
repz
je
push
outs
sub
test
xchg
iret
sbb
cmp
pop
clc
mov
adc
clc
pop
pop
jle
arpl
push
pusha
dec
push
fdiv
mov
and
repz
mov
cmp
jo
cmp
outs
cmp
adc
and
lods
inc
test
ins
lea
retf
aam
push
mov
ret
icebp
fcomip
lahf
test
inc
aas
fs
push
fstp
hlt
cdq
(bad)
clc
jge
icebp
pop
sbb
pop
hlt
stos
jmp
cmp
fnstcw
push
adc
fbstp
sub
bound
mov
call
dec
gs
imul
(bad)
mov
(bad)
sub
pop
enter
jae
pop
sub
aas
iret
cmp
jnp
into
in
cmp
in
xor
retf
add
pop
js
ins
cmp
cmc
pushf
adc
ins
jbe
std
xchg
retf
sbb
or
repnz
xchg
imul
ds
jae
aas
cwde
mov
cmp
xchg
jnp
scas
cs
inc
mov
(bad)
(bad)
mov
sub
push
mov
jmp
mov
ds
dec
in
mov
ss
cs
mov
pop
cli
cmp
push
int3
int
js
lds
retf
pusha
xchg
add
or
inc
jb
das
inc
jbe
dec
jb
sbb
push
or
push
add
das
sub
xor
(bad)
outs
push
js
xchg
fldcw
pop
repz
js
xlat
rcr
mov
outs
cld
mov
data16
ins
or
jge
cmp
lahf
jae
cmp
fidiv
push
xor
js
and
sahf
add
push
adc
dec
jnp
imul
mov
pop
ss
inc
outs
out
push
icebp
arpl
adc
ret
inc
fnstcw
cmps
mul
mov
pop
jb
mov
(bad)
fcmovnb
lea
dec
cmps
pop
outs
mov
xchg
iret
out
out
mov
movs
add
imul
and
sub
mov
cmps
mov
rol
punpcklwd
mov
dec
rcl
add
sub
jae
xor
jl
pop
and
fdivr
dec
inc
mov
(bad)
bound
fidiv
repnz
or
mov
xchg
(bad)
nop
xchg
enter
mov
int
cld
pop
and
clc
jne
mov
scas
cmp
in
(bad)
inc
push
and
mov
ja
dec
ins
xor
bound
dec
ins
shl
push
out
stos
ins
inc
cmp
add
imul
dec
shr
mov
stos
xor
dec
fld
xchg
mov
and
push
stos
rol
pop
inc
cmc
dec
stos
xchg
jae
adc
pusha
in
add
jae
outs
imul
pushf
cld
push
pop
jmp
cmp
test
mov
ins
ins
inc
xor
data16
cld
out
sbb
adc
push
push
dec
into
inc
and
dec
hlt
je
sub
ret
in
lods
mov
mov
dec
int
stos
jae
scas
jmp
cmp
out
lahf
(bad)
xchg
(bad)
cli
test
adc
or
sub
fisttp
imul
push
dec
push
jmp
mov
retf
jno
xchg
bnd
scas
(bad)
mov
lods
and
repz
mov
xchg
inc
sub
or
cmp
outs
add
add
iret
mov
mov
jnp
inc
xor
(bad)
cld
dec
aam
out
and
mov
in
cmp
mov
mov
aam
adc
mov
mov
pop
cmp
(bad)
sbb
out
mov
sbb
shr
push
idiv
mov
lahf
loope
xor
into
ud2
xor
mov
mov
aaa
jns
shl
push
or
cmp
sbb
xchg
ret
pop
dec
cmps
pmaxsw
cvtps2pd
pop
fwait
loope
mov
and
mov
ret
pop
arpl
sbb
sbb
xchg
sbb
nop
and
cmp
out
and
adc
mov
mov
jb
sub
inc
int
cs
or
jp
mov
inc
icebp
and
cmp
cs
or
in
push
and
xchg
mov
ds
clc
ins
(bad)
mov
jp
clc
(bad)
sbb
cli
or
jns
arpl
xchg
push
cmp
xor
leave
sub
push
sbb
and
out
outs
out
(bad)
add
retf
repz
jge
nop
xchg
cli
movs
fadd
mov
pop
mov
dec
dec
sub
adc
das
or
or
adc
addr16
inc
jle
outs
cmp
push
pop
push
in
addr16
xchg
sub
lock
(bad)
lods
sbb
xor
dec
stc
rol
ins
in
mov
out
mov
pop
sbb
mov
outs
cwde
mov
adc
in
xor
aaa
mov
mov
cld
cmps
jecxz
xchg
cmps
dec
mov
dec
movs
inc
pop
cs
out
sub
adc
inc
pop
hlt
in
mov
rcl
retf
adc
inc
ja
mov
mov
sbb
repnz
mov
add
inc
cs
(bad)
lods
scas
call
or
xchg
loop
jmp
or
outs
std
sbb
dec
out
fld
cmp
jae
retf
add
cmc
xlat
inc
(bad)
(bad)
fstp
repz
cmp
cmp
stos
xlat
(bad)
out
mov
daa
jmp
(bad)
xchg
rcr
sub
cmps
nop
gs
jne
xor
repnz
pop
pushf
adc
sbb
inc
sub
shr
push
cmp
adc
iret
pop
rcl
dec
pop
ins
xor
out
mov
xchg
loope
jmp
push
or
mov
lahf
cmp
js
movs
sbb
mov
fdivr
jecxz
loop
jnp
in
or
fbstp
mov
sbb
outs
das
sub
xor
cli
xlat
ins
lock
xchg
popa
scas
inc
pop
add
mov
inc
ret
movs
hlt
push
call
sub
outs
ret
mov
shl
rcl
dec
mov
stos
in
adc
sbb
(bad)
fst
outs
icebp
mov
test
sbb
mov
in
jge
bound
xor
lock
add
cld
xchg
cmp
mov
mov
mov
es
sub
pusha
add
dec
enter
jbe
or
cmp
fild
mov
or
test
scas
sbb
jg
imul
xchg
jbe
nop
mov
jecxz
jl
or
cli
xchg
inc
movs
ficomp
xchg
(bad)
pop
lods
imul
mov
mov
pop
stc
push
lock
cmp
iret
lods
loop
std
xor
jbe
fmul
xor
cld
out
repz
adc
jl
jmp
fadd
xlat
pusha
mov
ficom
push
fmul
and
out
rcr
mov
lock
imul
cwde
push
rcl
test
dec
rcr
cs
call
rol
fnstsw
retf
jmp
inc
outs
(bad)
pop
sti
add
cmp
iret
ja
test
sti
and
cmp
fsubr
mov
call
or
sub
mov
out
lods
popa
lahf
jle
mov
jle
rcl
retf
mov
daa
retf
mov
stos
icebp
adc
adc
leave
adc
pop
call
sub
push
dec
and
jnp
cmc
int
retf
mov
(bad)
xlat
mov
dec
aaa
push
sub
pop
push
sti
fidivr
sub
outs
adc
or
pop
retf
pusha
fld
loope
sub
aam
add
jno
jns
jmp
dec
inc
push
or
push
jmp
xchg
mov
inc
leave
out
jmp
ja
cmp
xor
add
or
jl
or
rcl
jecxz
dec
sar
sbb
mov
lods
mov
pushf
repnz
dec
sub
or
mov
mov
int
mov
and
xor
add
mov
sbb
dec
sub
out
adc
stc
iret
and
mov
pop
jmp
push
(bad)
cwde
inc
push
adc
lods
scas
retf
aas
sbb
inc
outs
sbb
mov
xchg
sub
dec
pusha
mov
ret
gs
jo
call
dec
or
xor
inc
cmp
and
xchg
dec
pop
cmps
fs
ins
sahf
rcl
in
adc
in
dec
repnz
mov
(bad)
out
xchg
push
inc
call
repnz
cmp
or
cmp
pop
mov
mov
add
jne
sbb
cli
lds
xchg
jb
ss
push
repz
mov
inc
and
lahf
jl
mov
jmp
sbb
inc
stos
shl
or
pop
sub
in
push
data16
cmp
stos
jne
out
ds
mov
push
cdq
dec
or
sub
ja
or
mov
stos
push
jb
shl
jno
mov
inc
sub
retf
rcl
test
push
and
fimul
inc
jg
pop
dec
cmp
stos
ins
fcomp
fnsave
and
test
(bad)
push
aas
mov
and
outs
mov
sub
xor
fld
aaa
xchg
je
and
or
retf
xchg
stc
mov
mov
pop
pop
mov
xchg
or
add
aad
mov
je
rcr
mov
(bad)
mov
push
jmp
push
xchg
or
cmp
sti
idiv
mov
(bad)
xchg
jmp
(bad)
icebp
js
setae
int
cmp
mov
push
inc
or
popf
popa
mov
ja
and
mov
dec
call
test
jp
xchg
lods
cld
mov
adc
sar
pop
and
cmp
sahf
(bad)
xor
rol
retf
sbb
ret
out
loop
mov
sub
hlt
popf
mov
daa
sbb
in
xor
popf
inc
pop
aam
push
cs
cmp
jb
clc
aaa
xor
cs
sub
xor
jp
and
xor
aad
inc
xor
pop
rcl
and
jecxz
fs
or
xor
cld
not
repnz
mov
frstor
daa
jmp
cmp
repz
popa
mov
cmp
or
push
add
push
add
xchg
xchg
xchg
cli
mov
jbe
(bad)
(bad)
cmp
mov
das
ss
nop
sub
sahf
pop
loop
inc
and
retf
jl
gs
mov
xor
mov
scas
lods
inc
mov
loope
popf
xchg
inc
mov
mov
test
out
inc
cmp
mov
fist
aaa
cmp
adc
inc
mov
jg
test
jmp
cdq
das
add
sbb
outs
mov
fsub
xlat
or
and
fs
into
aaa
mov
mov
sahf
mov
mov
mov
jg
je
pushf
push
sub
mov
add
out
pop
call
stc
xor
je
fwait
mov
inc
out
sbb
cmp
loopne
jb
mov
ffreep
pop
pushf
add
push
jge
ins
ret
jg
push
fisttp
in
stc
sti
and
bound
shl
fiadd
dec
ror
jmp
mov
dec
mov
out
retf
cli
(bad)
loopne
xor
mov
mov
cli
out
pop
mov
fs
jge
popf
arpl
pop
fucomi
(bad)
lods
push
mov
cmps
scas
std
mov
stos
cmp
lods
imul
jl
call
fild
jmp
imul
sbb
push
cmp
jae
adc
fsubp
xlat
outs
lods
fsubr
pop
daa
sub
int
mov
(bad)
mov
loope
mov
push
add
in
lods
pop
pop
inc
mov
add
xor
sub
into
scas
es
test
adc
dec
sub
(bad)
int3
mov
sahf
cmp
inc
and
xchg
loopne
or
mov
push
aaa
xchg
inc
adc
sub
xor
scas
mov
es
fiadd
mov
mov
sub
dec
dec
mov
and
mov
scas
ficomp
ins
inc
fdivr
cwde
add
inc
outs
add
push
xchg
retf
or
mov
fdiv
ins
add
fmul
test
mov
mov
sbb
or
push
mov
loop
jp
mov
syscall
add
jne
retf
pop
test
shr
xor
fisubr
jge
sti
lods
popa
mov
sbb
jmp
push
fld
xchg
movs
repz
add
and
cmp
or
and
int
adc
push
mov
out
adc
mov
cmp
xchg
and
sbb
test
iret
lods
xchg
jg
inc
dec
push
pop
ss
mov
pop
and
inc
xchg
cdq
mov
cmps
(bad)
push
dec
sub
jno
dec
mov
cmp
ja
add
adc
xor
retf
dec
mov
cld
aam
xchg
(bad)
mov
cmp
inc
call
push
mov
xchg
ret
jp
cmp
jmp
(bad)
iret
inc
les
aam
lahf
aam
push
sbb
dec
jg
sub
add
adc
sbb
push
add
aaa
jnp
outs
xor
rol
or
gs
test
dec
sub
or
xchg
scas
dec
push
pop
les
adc
sbb
fwait
mov
mov
mov
cmp
cs
fsub
fistp
cmc
pop
inc
push
movs
leave
sbb
add
lods
jae
imul
nop
shr
xor
loope
jae
and
jl
dec
pushf
shl
vmread
dec
xchg
icebp
mov
imul
loopne
scas
pop
push
add
ror
xor
(bad)
push
loop
inc
xchg
fs
pop
jno
sbb
jge
mov
loopne
cld
inc
in
xor
mov
(bad)
sub
inc
repnz
ror
pop
pop
test
pop
and
mov
ret
ror
les
jg
in
and
pop
adc
push
dec
dec
pop
xor
test
cwde
jmp
pop
call
ja
jg
pop
dec
pop
push
jl
dec
xor
aas
push
or
dec
imul
gs
pusha
or
pop
daa
cs
int
push
movs
pop
loopne
outs
and
dec
and
(bad)
jmp
dec
sbb
test
dec
loope
mov
repz
(bad)
jl
ss
(bad)
ins
push
fist
jne
aaa
add
jns
ins
cmp
add
dec
cmp
fs
push
jp
xor
add
repnz
xchg
add
in
dec
mov
lea
pushf
push
push
dec
adc
rcr
jnp
stc
mov
jp
dec
loop
or
ja
mov
inc
inc
and
adc
ret
fdiv
mov
adc
push
pop
test
cmps
shr
(bad)
cli
sub
jbe
ret
xchg
repz
imul
jbe
aad
fist
mov
mov
dec
cmc
nop
arpl
mov
jb
scas
or
mov
pop
fidivr
test
in
jle
mov
sub
sti
scas
mov
xor
push
retf
fisubr
movs
dec
(bad)
fisttp
sbb
adc
mov
cmp
add
test
xlat
add
repnz
jl
ja
add
push
push
lods
sub
or
jno
jmp
xchg
pop
mov
jmp
ja
mov
adc
adc
push
dec
mov
push
sbb
pop
mov
jmp
xor
push
loope
pop
scas
pop
or
xor
ret
adc
add
test
adc
pop
sbb
and
inc
aas
mov
dec
clc
in
cmc
dec
aad
je
test
jmp
les
bound
xchg
les
(bad)
test
sbb
ficomp
push
sub
fwait
xchg
adc
mov
push
ja
std
and
and
push
push
loopne
cmp
xor
and
adc
call
pop
mov
add
push
dec
mov
mov
aad
dec
add
jmp
dec
jno
mov
jp
hlt
stos
jmp
test
retf
mov
call
pushf
xchg
xchg
xor
and
les
stos
and
push
jne
or
rcr
xchg
cmp
aad
inc
adc
lock
sbb
test
jnp
add
add
jge
cli
xlat
mov
sbb
cli
sbb
jmp
sti
cs
mov
test
mov
pop
addr16
outs
icebp
lahf
ins
in
retf
lds
add
(bad)
gs
push
sahf
ficomp
(bad)
repz
loop
movs
sbb
xor
pop
test
stc
mul
(bad)
fst
data16
adc
jnp
or
out
add
in
in
nop
mov
sbb
aad
jno
mov
stos
inc
div
push
fld
push
sub
adc
les
sub
xchg
ds
push
inc
dec
ss
inc
jns
jle
sub
jo
mov
push
xchg
(bad)
(bad)
mov
fwait
iret
in
and
test
dec
xchg
xor
iret
das
xchg
lods
dec
add
(bad)
jl
adc
mov
out
imul
sbb
pop
mov
cli
hlt
jae
push
js
sub
cli
pop
test
xor
imul
test
pop
dec
sbb
and
ins
and
ins
sbb
into
lods
or
imul
stc
and
stc
lods
pop
jmp
(bad)
xchg
bound
movs
(bad)
pop
and
jmp
inc
jecxz
jbe
xor
int
mov
and
fstp
mov
stos
arpl
mov
stos
mov
cmp
aad
dec
shl
sbb
shr
cmp
in
into
out
lods
push
pop
out
fild
cmp
xor
adc
imul
push
push
sbb
stos
xchg
repz
mov
xor
fs
sti
arpl
inc
mov
xchg
ja
addr16
(bad)
(bad)
sti
cmp
mov
je
pop
fmul
sub
and
fsubr
and
(bad)
push
lahf
push
ror
adc
(bad)
xchg
ins
mov
mov
pop
add
sbb
jne
lods
in
shl
jg
sub
mov
loopne
xchg
fcomp
sbb
mov
(bad)
pop
dec
bnd
mov
mov
or
push
test
sub
int3
scas
in
xor
pusha
xchg
push
(bad)
mov
mov
dec
and
add
aaa
clc
sub
pop
push
mov
sahf
push
xchg
mov
pop
test
xchg
pop
inc
cmp
pop
push
cmp
icebp
jae
xor
pop
and
call
or
xchg
xchg
rcr
outs
les
or
cmp
lea
mov
cmps
pop
or
repz
test
xchg
xchg
ret
cdq
out
jmp
push
aad
shr
adc
or
mov
jnp
mov
mov
jnp
(bad)
mov
or
jnp
test
fsubrp
mov
xor
pop
mov
clc
push
in
repnz
xlat
add
cmps
in
push
test
ja
sbb
nop
xchg
(bad)
in
cmp
mov
leave
bound
xchg
dec
retf
push
jmp
xor
or
pop
adc
lods
adc
cmp
adc
mov
mov
mov
xchg
cmp
out
xor
mov
test
adc
rol
mov
ret
fdiv
pop
out
dec
mov
or
es
mov
movs
and
(bad)
fucom
adc
jp
ins
loop
out
add
inc
push
jne
test
mov
int3
mov
mov
sbb
(bad)
jg
or
in
xor
cmp
out
iret
jno
cmc
fmul
dec
test
mov
fwait
inc
rcr
std
and
mov
mov
sbb
jno
pop
in
les
dec
push
add
(bad)
jae
iret
sub
mov
push
jbe
inc
pop
add
dec
inc
jmp
dec
invd
adc
pop
test
ret
pop
inc
and
mov
jae
add
mov
cmp
pop
sub
out
das
in
loopne
imul
in
jl
test
cmp
movs
arpl
xor
pusha
jmp
mov
sub
sub
sbb
sbb
mov
fld
jnp
jecxz
mov
mov
inc
pop
ins
imul
push
xchg
fimul
popf
scas
out
jecxz
pop
jmp
push
xchg
in
xchg
(bad)
fnstenv
les
cmp
test
lods
adc
mov
into
adc
stos
call
fwait
loopne
mov
and
bound
call
pop
dec
repz
push
pop
pop
inc
mov
pop
les
sub
dec
xor
add
dec
adc
ds
dec
in
repnz
shr
cmps
lods
pop
imul
jmp
and
mov
mov
(bad)
out
and
fist
push
xor
jg
pop
fs
outs
sub
xor
aam
das
(bad)
cmp
imul
bound
addr16
rol
cmp
adc
hlt
sti
hlt
mov
or
call
xor
xor
ror
push
mov
mov
pop
stos
inc
not
add
popf
jg
gs
fcmovnbe
or
sbb
nop
js
inc
jns
pop
lods
or
or
lds
fs
push
fidiv
dec
mov
dec
lods
push
inc
inc
cmps
mov
loop
and
push
test
test
aam
ret
fwait
pop
sbb
sub
mov
push
or
jg
int
xchg
popa
loop
dec
and
xchg
aaa
outs
mov
mov
pop
and
mov
cmp
lea
and
sahf
retf
ins
mov
retf
fwait
sub
push
and
pop
fild
push
dec
rcl
cmp
call
pop
jbe
setl
add
cdq
pusha
mov
xor
arpl
fistp
and
mov
or
add
or
les
scas
outs
xchg
inc
and
mov
adc
mov
inc
sbb
xchg
sbb
xlat
or
movs
mov
mov
mov
(bad)
mov
mov
jnp
fs
sti
push
jge
mov
mov
xchg
mov
xlat
xchg
or
adc
pop
push
add
xor
stos
mov
test
movs
sub
hlt
out
cmps
jne
pextrw
call
lea
movs
dec
push
push
adc
add
repnz
mov
out
aad
adc
fadd
add
cmc
xchg
mov
mov
hlt
int
jg
scas
(bad)
dec
mov
sar
inc
pop
(bad)
(bad)
xchg
iret
ins
iret
sub
rol
pop
ror
push
push
mov
sub
xor
adc
and
sub
in
pop
int3
jmp
inc
sub
out
add
cmp
xor
xchg
jmp
std
jg
pop
xchg
stos
dec
iret
mov
and
sbb
popa
push
adc
into
or
popf
test
adc
nop
inc
int
out
xor
clc
sub
loop
addr16
ror
imul
pop
call
and
dec
mov
in
jmp
clc
pop
pusha
(bad)
jb
inc
sub
fwait
jecxz
sbb
sbb
retf
xor
(bad)
popa
inc
imul
imul
test
imul
stc
xchg
push
sub
adc
outs
jbe
das
mov
jno
push
and
cmp
fsubp
dec
cwde
dec
cmps
lods
(bad)
gs
and
dec
fsubr
sbb
cmp
dec
mov
adc
fnstenv
dec
test
fsub
pusha
mov
fiadd
inc
sub
pop
and
out
lds
mov
cmps
cmp
jmp
jmp
les
aaa
mov
js
and
push
pop
lods
push
or
jmp
jecxz
and
clc
xor
and
xor
cmp
and
lods
leave
cmp
sahf
mov
xor
lods
cmc
mov
mov
mov
int3
test
ins
in
mov
push
fnstenv
pop
add
cmp
adc
iret
enter
and
cmp
(bad)
loop
in
mov
ret
std
das
addr16
stc
mov
sbb
stos
sbb
lea
mov
and
jnp
mov
add
xchg
xchg
aaa
sbb
scas
or
mov
fwait
push
xor
out
jnp
pushf
rcr
stos
cmp
inc
add
out
sub
vpunpcklbw
sbb
into
mov
call
sub
pop
test
inc
mov
icebp
outs
push
mov
push
inc
or
into
push
mov
lahf
pushf
imul
jbe
mov
je
pop
xchg
sbb
out
cmps
cld
inc
test
sbb
std
jmp
jo
dec
enter
mov
and
jge
adc
xor
cmp
inc
(bad)
lock
mov
stos
inc
jbe
jno
fstp
cs
es
cmps
scas
int3
inc
call
xchg
hlt
shr
std
sub
xor
adc
and
fdivr
sub
add
sahf
adc
(bad)
fstp
cmp
mov
push
push
mov
sub
call
fwait
and
fwait
jo
repnz
(bad)
retf
test
sub
jmp
sub
sahf
hlt
pop
dec
jp
or
pop
mov
jo
dec
(bad)
fsubr
xor
rcl
push
pop
xor
sbb
imul
push
jb
test
mov
pop
pop
arpl
mov
and
pop
jmp
dec
xor
(bad)
sub
pop
movs
xchg
inc
cmps
or
pushf
mov
outs
mov
(bad)
add
ret
dec
mov
sahf
fimul
or
inc
mov
dec
sbb
mul
hlt
adc
sbb
sbb
mov
inc
ins
xor
mov
xchg
dec
pop
pop
sub
iret
retf
ja
je
lods
add
lea
dec
ret
enter
jge
inc
push
out
clc
mov
sti
mov
sbb
nop
push
rol
xchg
push
or
loope
mov
imul
movs
cmp
in
inc
pop
or
mov
loopne
movs
sbb
cmp
xchg
mov
mov
in
sbb
repz
xor
mov
jbe
fimul
xchg
jnp
(bad)
cli
mov
jbe
mov
ins
push
dec
jb
or
retf
mov
sub
gs
ror
xchg
outs
mov
mov
and
mov
lock
xchg
aad
test
adc
adc
and
sti
adc
mov
stc
sub
push
or
cmp
popa
std
movs
sahf
lods
xchg
jbe
dec
inc
or
xor
out
and
ret
mov
cli
sbb
mov
ja
shr
dec
adc
test
stos
xor
clc
call
add
out
dec
outs
out
jne
add
add
leave
out
cdq
out
push
int3
sub
sti
fsubr
add
cmp
pop
cli
mov
sub
(bad)
ins
sub
(bad)
int3
sub
xchg
and
inc
cmp
mov
mov
add
jbe
mov
or
sbb
and
push
retf
(bad)
imul
stc
mov
fdiv
sub
add
cmp
lea
jne
and
pop
rcr
inc
xchg
in
retf
pop
mov
cdq
int3
mov
pop
js
out
imul
jo
aas
or
imul
sub
adc
iret
sub
(bad)
cli
pop
in
pop
popa
push
stc
mov
pop
and
mov
aad
xchg
add
cdq
push
jmp
clc
mov
aaa
dec
call
jo
jp
cmp
repnz
cmp
scas
cmp
mov
jg
mov
add
mov
ss
and
imul
jmp
(bad)
repnz
pop
std
scas
fimul
lock
dec
pop
cmps
push
inc
in
lods
call
jo
xor
xchg
cmp
adc
push
adc
sub
dec
(bad)
es
xor
xor
bound
mov
xor
pop
or
mov
add
scas
ret
jl
ss
fadd
add
iret
test
cs
dec
xchg
mov
cmp
or
jp
gs
cmps
ficom
jle
push
in
aas
jmp
dec
adc
aaa
lea
idiv
mov
xchg
mov
add
repz
out
mov
xor
lods
push
mov
cmc
inc
loop
out
or
sub
cmp
xchg
test
(bad)
movs
mov
xlat
push
cmovo
sahf
or
shr
adc
enter
add
adc
aaa
leave
xchg
sbb
les
ins
sub
lea
hlt
or
dec
jp
ds
popf
fs
pop
pop
xchg
inc
sbb
dec
or
jmp
dec
lea
mov
inc
adc
sar
sbb
cmp
je
sahf
cmp
or
cwde
movs
mov
imul
mov
(bad)
out
xchg
fwait
shr
(bad)
rcr
in
es
pop
cmp
(bad)
cmp
in
dec
sub
repz
pushf
dec
jae
mov
dec
cdq
test
mov
test
ror
out
test
pop
imul
pusha
ss
enter
nop
xor
jge
lahf
sbb
mov
mov
dec
cmps
or
int3
mov
cmp
jno
jns
mov
push
pusha
jbe
or
and
pop
(bad)
xlat
fs
add
sahf
rcr
lods
arpl
xchg
sbb
sub
mov
sub
adc
xchg
aas
mov
or
add
dec
hlt
jmp
out
and
mov
xor
test
in
test
sahf
pop
enter
pop
imul
out
ja
xchg
jl
out
sbb
retf
test
call
es
out
xchg
push
xchg
imul
mov
ror
add
xlat
xchg
jmp
sbb
mov
(bad)
shl
add
mov
jno
das
sar
sti
stos
fcomi
jle
sbb
pop
mov
sbb
push
nop
push
ret
jmp
loopne
push
into
mov
xor
dec
inc
outs
(bad)
nop
jle
cmc
dec
mov
imul
out
iret
lods
add
sbb
hlt
lahf
sbb
add
mov
and
xchg
jmp
dec
mov
jecxz
sbb
shr
inc
adc
fsubp
push
inc
cld
pop
adc
pop
(bad)
addr16
xlat
std
push
(bad)
dec
jno
inc
loop
pop
cmp
inc
mov
or
push
sub
mov
in
mov
data16
xor
inc
or
xchg
pop
pop
adc
push
mov
cmps
mov
pop
outs
xor
push
out
or
pop
(bad)
push
xchg
sbb
push
out
mov
mov
or
in
cmps
pop
clc
js
(bad)
nop
in
punpcklbw
(bad)
repnz
sub
jbe
aaa
test
push
in
xor
jl
scas
sub
push
mov
xor
mov
mov
xor
and
stos
test
sbb
push
cwde
rcl
add
stos
fldcw
push
pop
jb
add
push
mov
mov
mov
add
dec
js
stos
xchg
xchg
push
dec
and
ficom
mov
cmps
pop
repnz
jmp
int3
add
loopne
push
push
stos
cmp
cmp
in
pop
cmc
out
test
sub
xchg
inc
jbe
pop
loop
jmp
mov
cmp
aad
xchg
xor
aaa
mov
in
dec
or
mov
sub
repnz
nop
rcr
inc
and
lea
(bad)
in
xchg
imul
push
ins
dec
jnp
jbe
imul
dec
rcl
repnz
jae
add
or
jo
jmp
pop
test
cdq
sub
or
dec
jb
hlt
dec
inc
dec
jp
or
ins
arpl
xchg
jne
cvttps2pi
cmc
clc
or
outs
push
and
mov
clc
in
jmp
movs
movs
cmps
jne
ficom
outs
ds
add
fdiv
ja
pop
lds
dec
iret
jns
jg
es
pop
push
das
pop
pop
aas
or
test
lahf
dec
fst
and
cmc
in
movs
cwde
(bad)
xor
int
add
xchg
sti
add
xchg
dec
out
scas
syscall
loopne
add
jp
out
cwde
sub
lds
bound
mov
adc
(bad)
cmp
stos
sbb
push
xchg
outs
cwde
repz
mov
pop
and
lds
push
out
add
outs
mov
imul
mov
dec
outs
out
adc
shr
popf
mov
movs
(bad)
iret
pop
pop
inc
fnsave
mov
call
aas
mov
(bad)
std
xchg
in
cdq
jmp
pop
retf
imul
jmp
popf
loope
jb
inc
hlt
and
lahf
aam
aas
ins
jnp
in
ficom
xchg
into
popf
mov
out
and
aaa
xor
jae
and
and
das
lahf
inc
std
ds
adc
mov
cmp
push
leave
fld
sbb
sbb
sbb
outs
ficomp
mov
stc
popa
and
hlt
mov
pop
and
xchg
mov
mov
mov
mov
mov
push
mov
wbinvd
mov
jmp
adc
inc
retf
mov
xchg
push
mov
mov
cmp
fs
scas
(bad)
xchg
xor
popf
xchg
stos
lods
xchg
arpl
sub
mov
xor
adc
outs
mul
enter
inc
sbb
mov
popa
mov
sub
call
jno
popf
pop
(bad)
cmp
ds
adc
pop
xchg
clc
sub
pop
jl
fisttp
add
lods
dec
pop
xor
sbb
mov
mov
pop
in
fadd
fxch
arpl
movs
jne
dec
and
mov
sbb
jmp
cmp
mov
adc
mov
xchg
leave
cli
movs
into
in
in
push
cmp
add
shr
gs
mov
movlhps
sub
(bad)
int
mov
push
pop
push
dec
nop
jle
rcl
fsub
pushf
jge
cmp
pop
mov
fidiv
push
cmp
pop
mov
jo
fcmovne
mov
movs
mov
xor
sbb
arpl
add
out
pop
rcr
call
mov
xor
fs
xor
cs
mov
pop
(bad)
fdivr
jge
mov
pop
or
mov
push
and
retf
adc
jb
push
std
sar
adc
add
inc
xor
and
dec
adc
mov
push
bound
ins
js
sub
cli
(bad)
jg
push
add
dec
dec
in
hlt
mov
push
ins
loope
or
mov
and
ins
mov
shr
xchg
fcmove
push
mov
jg
mov
jl
daa
or
loopne
hlt
dec
cwde
xor
mov
in
mov
cmps
mov
scas
jno
xchg
inc
xor
mov
xchg
cli
cdq
cmp
mov
mov
xchg
mov
dec
cmp
sbb
mov
xchg
dec
(bad)
outs
into
cmp
jns
cwde
cmp
or
add
jecxz
sbb
jae
push
sub
jl
es
cdq
lods
cld
bound
pop
push
inc
inc
aad
xor
sbb
xchg
mov
inc
popf
inc
movs
aas
iret
jg
or
mov
cmc
inc
les
xchg
mov
mov
daa
pop
xchg
xor
mov
jge
xchg
or
mov
or
sbb
sub
mov
adc
mov
into
cmp
pop
pop
in
aaa
scas
loop
add
add
scas
sub
pop
mov
pop
sbb
and
push
sbb
outs
cwde
sub
out
out
sbb
xchg
xchg
or
or
lahf
jno
out
fadd
pusha
in
add
adc
or
jg
push
neg
addr16
mov
loopne
mul
push
inc
in
mov
es
cli
inc
or
test
outs
mov
cmp
mov
call
mov
fadd
int
or
adc
xchg
mov
xchg
pop
adc
hlt
leave
mov
ins
jle
add
jecxz
fisttp
xchg
test
outs
sahf
xchg
cmc
sub
int
jbe
enter
lock
pop
into
xor
sub
ds
pop
fiadd
ret
pusha
push
dec
stc
shr
pop
movs
lods
fidiv
and
inc
in
fs
icebp
je
dec
push
pop
or
jmp
stos
dec
push
mov
or
and
jnp
lods
push
sbb
cmp
fcom
gs
dec
ficom
(bad)
pop
sub
or
and
fstp
ror
add
pushf
mov
iret
mov
sub
loopne
fwait
js
movs
add
or
mov
js
jns
sahf
xor
mov
jo
pop
pop
rol
sub
push
popa
idiv
xchg
or
pop
add
stos
mov
pop
pop
jle
sti
add
imul
mov
(bad)
xor
and
push
pop
shr
rol
cwde
jp
(bad)
fsub
retf
xor
scas
(bad)
mov
xchg
dec
cmc
jnp
jmp
push
mov
jmp
bnd
push
mov
inc
xchg
dec
adc
pop
aad
mov
and
xlat
xchg
mov
loope
cmps
mov
sbb
idiv
pop
pop
adc
je
mov
rol
out
pusha
adc
into
scas
fsubr
or
lods
sbb
in
pop
inc
mov
addr16
(bad)
int
ds
pop
push
stos
lahf
mov
les
fsubr
pop
sub
dec
movs
imul
call
nop
cmc
cmp
(bad)
lahf
mov
xor
jecxz
mov
cwde
test
xchg
leave
pop
push
shl
sti
sbb
adc
adc
dec
aam
fs
int
or
rcr
sbb
pop
jo
hlt
mov
test
inc
stc
xchg
xchg
movs
pop
adc
dec
(bad)
xor
int
jmp
cld
je
lods
jmp
jle
push
fwait
test
cmc
(bad)
xor
retf
hlt
mov
push
lahf
pop
push
mov
pusha
sbb
(bad)
cld
das
lea
ss
add
jns
into
fisub
dec
jns
ds
mov
sub
das
mov
lods
icebp
addr16
pop
in
cdq
scas
jle
int3
loope
pushf
dec
adc
jo
je
and
jg
lods
sti
mov
pop
call
ret
test
cdq
adc
jne
(bad)
pusha
inc
loope
aaa
jnp
and
or
or
in
push
out
imul
jmp
mov
add
stos
sbb
cmp
mov
add
jne
rcr
add
push
sbb
ds
jnp
arpl
les
xchg
in
xchg
icebp
jo
jmp
inc
jge
or
pop
jae
xchg
(bad)
ins
call
ret
jae
mov
xor
and
movs
and
cmovs
pop
(bad)
fist
mov
xchg
mov
aas
mov
and
mov
push
or
mov
out
(bad)
or
int
stc
push
or
and
dec
pop
movs
mov
push
out
sbb
sti
stc
fsubr
mov
adc
cmp
mov
or
push
mov
pop
nop
arpl
aas
imul
nop
and
add
das
cmps
xor
test
dec
popa
jo
pop
mov
ds
xor
pop
in
mov
push
push
dec
ss
pusha
call
mov
into
sub
call
mov
ss
sub
jnp
mov
add
cmps
std
jno
fisttp
jge
mov
call
pop
add
add
icebp
sbb
je
fldenv
shl
cwde
jl
sub
movs
(bad)
jnp
or
mov
jmp
push
inc
(bad)
hlt
sub
and
nop
fisttp
or
(bad)
dec
pop
xchg
loop
xor
lods
inc
sub
movs
je
push
in
clc
push
push
scas
and
fcom
push
les
pop
xor
lds
or
jmp
fsubr
xchg
scas
mov
shr
fsubr
inc
inc
aad
and
icebp
std
jge
and
loope
clc
js
cdq
data16
movs
mov
leave
gs
push
std
enter
inc
(bad)
sbb
add
(bad)
stc
fcomp
mov
sub
call
scas
fsub
dec
loop
test
mov
out
int3
mov
stos
std
sub
cmp
sti
js
pop
fbstp
int3
or
fadd
sti
dec
inc
cmp
shr
fimul
test
mov
js
cwde
xchg
push
adc
es
xor
aaa
aad
fwait
add
(bad)
data16
cmp
daa
outs
jbe
mov
push
jo
push
pop
fisubr
je
clc
(bad)
imul
adc
out
inc
out
loope
ins
xor
(bad)
and
xchg
sub
movs
stos
adc
ds
cmp
ror
iret
scas
or
push
and
jae
sub
jmp
sub
movs
xchg
push
jo
lds
clc
dec
in
(bad)
cmp
ss
jnp
call
ja
mov
mov
jle
lods
dec
adc
(bad)
nop
inc
sbb
aam
mov
dec
push
sub
scas
inc
lea
test
or
popa
enter
pop
dec
out
jle
sub
push
cmps
mov
mov
pop
xchg
mov
lea
sub
outs
in
das
mov
or
mov
pop
icebp
jne
inc
adc
out
jg
mov
or
and
(bad)
repnz
xchg
fwait
push
cmp
inc
inc
cmp
lds
lods
pop
xor
push
dec
lods
mov
dec
mov
jge
mov
mov
or
xor
xchg
mov
or
dec
push
add
jbe
or
or
cmps
or
cdq
xor
sub
rcl
mov
retf
movs
mov
xchg
pop
sbb
and
das
dec
xor
mov
cli
add
dec
mov
dec
sub
mov
(bad)
and
adc
push
jmp
mov
fwait
pop
lds
ja
sbb
repnz
mov
in
ins
pop
xchg
mov
out
das
(bad)
adc
loop
or
cmp
shl
jbe
test
add
pop
in
out
adc
mov
mov
xchg
sbb
call
jge
xlat
mov
mov
sar
and
cwde
mov
sbb
inc
adc
inc
add
cmps
mov
int3
push
retf
js
push
ja
ins
shl
outs
mov
iret
pop
dec
jb
push
pop
pop
pop
inc
(bad)
or
int
call
xor
movs
mov
xor
cmp
leave
lods
int
fist
mov
out
mov
xchg
inc
shl
sbb
bndldx
andnps
fs
ret
sub
mov
loope
ins
add
inc
loopne
jge
and
sub
movs
scas
call
sbb
imul
lods
xor
adc
jae
ror
mov
es
aas
popf
xchg
aaa
aam
repnz
cwde
xor
push
mov
movs
popa
fs
mov
mov
ret
push
dec
jge
pop
call
pop
dec
ja
push
xor
jecxz
or
call
xchg
add
ret
leave
pushf
lock
xlat
or
sub
mov
sub
out
pop
pop
xor
cs
mov
sub
push
inc
test
add
mov
dec
inc
pop
pop
imul
or
inc
les
repnz
popf
adc
fcomp
sub
int3
push
sti
push
jmp
lods
or
ret
das
xchg
ins
or
jo
push
pop
sahf
sub
hlt
mov
fs
pop
aad
inc
and
jmp
cmps
adc
cmc
jnp
dec
aam
and
test
and
bound
or
enter
ror
adc
lock
jmp
xor
mov
sahf
sub
shr
cmps
mov
mov
add
shl
ja
in
fild
mov
pop
cmp
push
jb
retf
icebp
mov
mov
mov
dec
push
out
or
arpl
sub
lock
shl
xlat
ret
adc
ret
xchg
add
inc
mov
call
mov
and
xchg
mov
rcr
xlat
pop
and
pop
push
neg
gs
jno
and
dec
shr
push
cmp
push
es
ins
pop
pop
dec
in
mov
fwait
cld
mov
push
mov
cmp
xor
jmp
mov
les
mov
adc
cdq
push
or
and
ficomp
xchg
xchg
jmp
push
xchg
rcl
cmp
mov
loopne
adc
jp
in
adc
push
jg
jg
inc
fistp
aad
rcl
jae
xor
jmp
cmp
mov
mov
les
test
xchg
sub
fpatan
or
wrmsr
ins
int
stos
mov
loop
imul
fdivr
js
imul
sub
cli
xor
push
push
popf
fwait
mov
fsub
push
(bad)
lock
push
lahf
pop
jle
test
nop
iret
rol
fcomp
mov
sti
lea
mov
sub
sbb
and
sahf
int
nop
nop
inc
jge
movd
or
nop
cmp
or
jmp
sahf
cli
sbb
ficomp
mov
xchg
xor
dec
add
push
and
in
fcom
inc
ins
mov
jmp
mov
movs
or
leave
xor
(bad)
call
inc
out
rcr
jb
jmp
int3
push
pop
jnp
ficomp
dec
cmp
shr
pop
inc
in
fs
or
add
je
stc
jno
and
aas
addr16
dec
inc
mov
add
sub
add
idiv
mov
loopne
jmp
and
popa
and
not
mov
cmps
(bad)
push
ret
daa
sti
rcl
daa
fchs
mov
and
in
xlat
stos
js
xchg
jg
aad
jno
repnz
call
dec
inc
jmp
and
icebp
and
and
in
jge
mov
test
or
nop
ficom
or
xlat
jg
(bad)
movs
(bad)
adc
xchg
test
es
in
rol
mov
jnp
mov
inc
inc
jg
addr16
jb
das
or
jge
adc
mov
pop
push
aaa
and
ds
sahf
and
in
test
pop
mov
push
xchg
mov
test
pop
add
fistp
in
mov
cwde
sbb
pop
sub
cmp
lods
ins
pop
enter
(bad)
mov
fsub
push
(bad)
neg
loopne
cs
jne
in
lock
jmp
sbb
into
fwait
xor
ins
add
and
and
imul
add
sub
hlt
ds
xchg
pushf
stc
sahf
scas
addr16
mov
jae
sub
sub
mov
sbb
xor
mov
or
xor
xchg
loopne
xor
mov
popa
jmp
pop
lods
and
inc
and
pop
popa
sar
mov
iret
push
stos
rol
dec
push
repz
mov
rcl
repnz
mov
out
mov
ja
add
aaa
scas
les
in
call
jecxz
iret
jne
and
mov
dec
xor
jge
xor
mov
add
(bad)
xor
dec
cs
jge
test
movs
stos
cwde
rcl
enter
bound
mov
xor
dec
add
mov
sbb
sub
mov
loopne
xor
mov
or
pop
aaa
test
pop
cld
(bad)
sub
mov
xor
fst
ins
xor
push
mov
repz
in
mov
push
shl
cmp
xlat
xlat
loope
mov
cmc
sub
add
mov
in
mov
mov
fiadd
popf
shl
cmp
movq
jle
ficom
mov
xor
ror
mov
sub
push
std
pop
mov
int3
or
hlt
dec
add
fwait
jmp
bound
aas
add
clc
rcr
out
rcr
add
dec
je
es
ror
cmp
ins
xor
jno
mov
jno
sub
xchg
in
jp
stc
pop
push
(bad)
icebp
and
sub
(bad)
out
mov
sub
mov
cdq
mov
jbe
ret
(bad)
mov
fnsave
xchg
xchg
ds
sbb
cmp
push
mov
mov
aad
fs
pop
or
and
sub
sub
stos
add
data16
ror
add
fucomip
sub
aad
lods
retf
rcr
movups
dec
and
or
repnz
mov
cdq
adc
fmul
icebp
fdiv
or
or
or
inc
pop
and
mov
bound
cmp
stos
pop
dec
stos
inc
add
arpl
(bad)
int
and
sub
adc
xor
test
pop
inc
jb
jmp
cs
sub
gs
mov
xchg
or
cmp
(bad)
pop
sub
cmp
rcl
aad
cld
dec
xchg
mov
outs
ss
and
add
push
push
push
xchg
es
mov
cs
jns
es
test
arpl
scas
ds
or
arpl
ret
or
sbb
in
movs
scas
jbe
enter
adc
ret
cs
stos
enter
sbb
mov
movs
pop
sbb
sub
test
lods
push
cmp
ret
lahf
popa
in
mov
jae
pop
les
rcr
mov
leave
adc
stc
jno
jle
mov
dec
pop
jbe
pop
pop
xor
ins
(bad)
(bad)
loopne
sbb
xchg
dec
cmp
pop
or
popa
adc
cmc
(bad)
jge
dec
pop
clc
fs
out
and
cmp
pop
test
sub
mov
mov
jno
pop
and
(bad)
sbb
push
adc
or
out
inc
div
xor
inc
jmp
stos
or
jns
rcl
dec
push
jo
sbb
(bad)
sbb
rcl
push
mov
and
fsub
dec
push
mov
cwde
(bad)
stos
out
mov
jb
mov
ret
fs
stc
aam
das
jb
sar
imul
scas
stc
sbb
mov
movs
xchg
push
adc
sub
push
int
lods
lahf
xchg
jge
aas
pop
cmp
jmp
mov
enter
or
loopne
(bad)
xchg
lock
(bad)
pushf
sub
inc
adc
push
fistp
pop
jbe
sub
adc
std
cdq
inc
push
(bad)
shl
jne
popa
cld
pop
xchg
or
imul
jne
hlt
(bad)
ins
(bad)
cld
inc
fdivr
mov
fidiv
shl
fcmovnb
shl
mov
fisttp
inc
add
push
jae
sbb
std
push
xchg
xor
dec
lea
retf
cli
jne
in
int
arpl
in
dec
out
mov
(bad)
ret
push
imul
mov
fiadd
sub
fxch
mov
in
push
or
mov
pusha
push
fdivr
je
add
jae
sbb
jne
or
mov
aad
inc
sbb
push
cmp
cmp
adc
sti
lods
mov
or
cmc
cwde
and
xor
jae
push
sub
bound
rol
mov
mov
ins
sub
mov
cmc
jle
retf
sub
mov
sti
mov
(bad)
into
push
clc
adc
leave
out
mov
jg
in
mov
jp
cmp
jl
and
cmp
cdq
nop
loop
stc
inc
sub
adc
add
arpl
push
int
sqrtps
je
aas
fadd
mov
popf
xor
cmp
mov
ss
mov
xchg
mov
sbb
inc
scas
mov
cmp
(bad)
cmc
in
sub
and
xchg
mov
out
in
hlt
out
loopne
xor
mov
add
pop
fisubr
sti
pop
sbb
repz
in
xor
test
mov
mov
imul
inc
(bad)
xchg
inc
stc
ror
mov
les
retf
inc
shr
mov
cmp
or
sub
push
aaa
or
retf
jmp
fidivr
ret
jno
push
sbb
inc
or
pop
shl
mov
jge
mov
in
out
xchg
hlt
jo
cmc
inc
gs
dec
and
bound
inc
jle
into
cmp
adc
mov
xchg
cmc
add
mov
push
pop
lods
int3
jg
in
call
jb
push
sti
cmp
out
push
data16
mov
sbb
push
stos
push
and
push
dec
jae
dec
adc
xor
shl
dec
popa
push
out
mov
jns
inc
add
sahf
sub
loope
mov
jge
inc
inc
(bad)
out
xchg
push
mov
nop
cmps
movs
jo
or
lds
stc
push
cld
test
(bad)
(bad)
gs
mov
xlat
dec
retf
add
mov
inc
mov
aad
adc
jle
add
cs
mov
enter
xor
cld
dec
xchg
retf
aaa
mov
xor
leave
push
jl
shrd
ret
or
test
aad
loopne
inc
and
and
popa
push
jns
mov
scas
cmp
push
jmp
dec
inc
ja
add
xor
scas
je
cmps
push
mov
dec
xchg
dec
xlat
(bad)
ss
pop
in
jbe
cmc
push
adc
add
push
fsubr
or
rcl
popf
mov
nop
icebp
dec
mov
mov
push
mov
sbb
stc
adc
jecxz
aas
daa
ins
je
sbb
ror
pushf
jnp
int3
dec
or
push
lds
es
dec
cmps
xchg
jns
ins
lock
cmp
mov
cmps
(bad)
mov
pushf
or
dec
cmps
push
into
mov
add
pop
add
ja
push
cmps
scas
mov
or
and
xor
add
sbb
sar
pop
out
adc
aad
or
or
(bad)
stc
cld
pop
mov
cmp
test
pop
sub
add
lock
imul
jo
jge
ja
rcr
adc
out
push
into
stos
mul
or
sub
sub
(bad)
push
xchg
mov
sub
push
xchg
cmps
test
leave
lock
mov
jl
loop
sahf
jmp
xor
mov
sbb
mov
xor
push
xor
in
pop
scas
add
xor
mov
mov
xchg
mov
add
fstp
fldenv
jl
out
xchg
addr16
adc
jg
cmp
sbb
jle
test
iret
cmps
cmp
out
int3
nop
test
dec
sub
test
add
pop
push
xchg
sub
fst
arpl
jne
cmp
adc
sbb
push
sbb
jnp
(bad)
push
adc
and
jno
add
dec
out
xor
fwait
inc
xor
jb
mov
rcl
std
psllq
jne
fidiv
dec
repz
sub
sub
test
icebp
push
in
and
fisubr
xchg
mov
jnp
js
loop
add
movs
xor
pop
xchg
pop
push
not
xchg
pop
sub
jbe
jo
sub
(bad)
retf
rcl
ins
dec
fsub
add
aaa
cwde
inc
jae
or
frstor
pop
cmp
fwait
aas
repz
mov
push
mov
or
shr
cmc
dec
xor
jg
dec
sub
pop
push
push
dec
fnstsw
pop
cwde
lods
push
movs
mov
pop
rep
xchg
lahf
fcmove
das
dec
mov
push
(bad)
movs
std
ret
pop
aad
sub
test
cmps
mov
out
and
dec
xchg
jbe
sbb
jno
int3
push
into
gs
cmps
lahf
jmp
es
mov
xlat
ret
push
mov
or
test
sub
out
and
fisubr
mov
mov
push
ret
mov
inc
int
push
out
mov
out
hlt
cmp
out
jle
sbb
adc
add
cmp
std
sti
adc
push
cmc
sub
jmp
out
js
cmp
mov
aad
xchg
xor
add
mov
mov
pop
mov
fidivr
xchg
push
xlat
jo
or
adc
test
ds
hlt
adc
inc
clc
add
sbb
mov
js
mov
mov
add
(bad)
in
push
add
xchg
xchg
clc
add
inc
and
aas
push
jbe
add
sbb
dec
inc
lahf
jge
dec
and
lock
xor
add
and
xor
xor
repnz
jl
adc
pop
mov
xchg
sbb
popa
stos
fcomp
cmps
fimul
mov
add
mov
out
lock
xor
stos
in
push
sbb
fist
aad
lods
adc
pop
and
int
lahf
pop
repz
jle
ja
and
popa
push
xchg
fcom
gs
xchg
cli
adc
jl
out
jmp
push
test
and
add
cli
add
sbb
mov
arpl
mov
iret
dec
dec
dec
inc
loop
dec
fs
sbb
mov
stos
jmp
jle
call
imul
ror
(bad)
enter
sbb
or
lods
xor
retf
pop
and
scas
and
mov
inc
scas
jae
push
mov
mov
cmps
shl
lods
loopne
push
xor
xor
xchg
sub
jno
loopne
outs
repnz
adc
shl
movs
pop
jge
(bad)
(bad)
and
dec
and
push
add
pop
int3
push
mov
nop
stc
mov
cs
sub
mov
dec
fbld
lods
scas
and
loopne
mov
loopne
sbb
(bad)
fst
lock
outs
push
push
test
jne
sbb
lahf
xchg
mov
push
rol
nop
inc
xor
jmp
cmp
add
push
sub
push
and
push
inc
cmp
daa
mov
ins
jmp
push
aad
lods
push
sbb
out
pop
aas
push
mov
jne
retf
mov
push
dec
lahf
xor
mov
fdivrp
and
ja
inc
xchg
pop
daa
and
std
lahf
pop
cmps
push
imul
mov
push
push
pushf
sub
cmp
aas
push
add
and
int3
push
leave
pop
ror
pushf
shl
jo
adc
imul
mov
pusha
ss
mov
jo
sub
movs
outs
inc
mov
(bad)
mov
sar
and
dec
add
jmp
mov
pusha
fwait
cmp
push
(bad)
pop
adc
lahf
lahf
test
cdq
cmp
push
jae
lds
clc
push
scas
in
push
cmps
inc
xchg
int3
xchg
in
sbb
shr
jge
das
rcr
and
or
and
sbb
outs
ror
neg
or
mov
in
mov
push
jp
ret
adc
ins
dec
scas
pop
xor
retf
pop
sbb
sbb
iret
dec
mov
in
mov
mov
adc
int
push
mov
inc
xor
sub
dec
mov
adc
lods
(bad)
out
push
dec
dec
sbb
scas
loope
and
push
stc
mov
jns
ror
fild
sub
cmp
sub
mov
clc
and
cmps
inc
cmps
push
adc
xchg
mov
imul
pop
xor
outs
or
jb
shl
adc
and
(bad)
cmp
cmp
sbb
add
clc
test
cmc
popa
mov
ret
mov
dec
sub
adc
dec
cmp
test
jmp
sahf
dec
sbb
js
jl
push
inc
call
mov
mov
dec
mov
cmp
stos
fxch
xor
xchg
sbb
das
push
add
mov
mov
(bad)
fsubr
mov
pop
or
jle
outs
and
mov
push
inc
sti
ins
jnp
fidiv
add
adc
mov
(bad)
retf
es
adc
pop
aas
idiv
ds
int3
ret
and
mov
push
fnstcw
jmp
jg
sbb
mov
retf
in
pop
inc
lock
sbb
push
nop
adc
mov
or
rcr
push
push
shr
mov
loop
daa
test
clc
in
div
push
repnz
dec
stc
jmp
test
inc
mov
adc
and
push
cmp
mov
push
cmc
lods
outs
je
dec
fcomp
inc
cmps
jb
xchg
test
fisttp
adc
jnp
inc
mov
mov
push
push
fadd
fild
(bad)
out
lds
fsub
mov
xchg
es
cmp
dec
gs
nop
inc
add
jo
or
idiv
scas
jno
or
cmp
dec
xchg
outs
and
mov
jecxz
outs
aaa
out
and
xchg
dec
sti
(bad)
fldcw
sub
ror
sbb
sub
lock
movs
mov
rol
mov
je
pop
ret
mov
xchg
loopne
pusha
lds
inc
cmp
push
adc
mov
and
cmp
push
push
jle
daa
mov
or
push
(bad)
and
cmp
lock
dec
rcr
cmp
push
stc
(bad)
pop
add
retf
fwait
outs
iret
sbb
add
or
addr16
or
xor
ss
xor
adc
inc
popf
mov
ds
test
dec
movs
mov
jae
cs
ret
or
xchg
cld
inc
int3
bound
daa
and
adc
dec
out
and
mov
add
popa
sub
shl
and
push
sub
cmc
dec
loop
push
stc
cmp
into
shl
or
inc
add
pushf
mov
xchg
imul
push
call
and
sub
sbb
bound
les
add
stc
sti
stos
call
inc
and
push
adc
int
adc
cmc
xor
add
adc
xchg
(bad)
rcr
adc
push
stos
sub
pop
xchg
mov
and
mov
inc
inc
xchg
fnstcw
sub
push
out
and
push
and
cld
push
nop
shr
mov
pushf
cmc
add
mov
aad
inc
retf
test
jae
sub
in
jecxz
mov
sub
call
xor
or
dec
test
rcr
iret
or
mov
test
std
out
cmp
or
test
lahf
out
movs
hlt
dec
lds
sbb
fist
ins
fsub
jecxz
inc
dec
add
das
dec
mov
inc
dec
sub
les
adc
jl
int3
aad
cmp
jnp
jmp
mov
push
sub
mov
repnz
sub
pop
pushf
and
lods
or
pushf
cwde
pop
(bad)
fcom
cmp
push
test
mov
cmp
sahf
test
push
inc
mov
cmc
rcl
and
arpl
inc
and
lods
lock
lock
mov
sub
gs
inc
jbe
jg
cdq
lods
ins
dec
std
mov
out
dec
inc
(bad)
or
mov
xchg
fisttp
test
adc
retf
sar
dec
mov
rol
fstp
mov
push
test
xor
sbb
dec
retf
mov
(bad)
clc
sub
ret
hlt
les
les
clc
mov
pop
fcomp
mov
xor
cmps
shr
aas
stos
(bad)
xchg
out
mov
fs
mov
pop
cmp
xlat
repnz
shr
outs
sub
dec
push
jae
inc
cwde
cs
jmp
cmp
(bad)
mul
int
ret
jno
and
leave
mov
cli
(bad)
push
inc
xor
pop
pop
or
js
jge
std
pop
out
push
test
mov
jno
cmp
fist
mov
xor
and
out
pop
loop
loope
dec
push
add
icebp
sbb
ret
retf
and
xor
ja
ret
pop
mov
sbb
loopne
add
jo
pop
inc
push
dec
cwde
and
sbb
scas
mov
jae
adc
push
xchg
mov
xor
mov
cdq
mov
and
adc
cdq
sbb
xchg
mov
mov
fnstcw
dec
jae
jns
xor
inc
xchg
fldcw
fwait
xor
lahf
loope
inc
add
outs
pushf
arpl
stos
pop
(bad)
daa
and
mov
popf
and
scas
pushf
(bad)
fwait
loope
scas
cli
mov
imul
mov
ret
add
cmc
jl
rcl
inc
or
xlat
cmp
and
out
cli
int
inc
fcom
dec
dec
lock
xchg
pop
movs
jp
shr
sbb
test
mov
test
movups
mov
push
fucom
cmp
xchg
test
je
lods
pop
mov
cmc
mov
aas
mov
push
in
add
test
add
adc
scas
sbb
in
mov
mov
cmp
movs
shr
pop
pusha
mov
aam
pop
mov
lahf
sub
popf
clc
adc
cmp
push
stc
dec
lods
fisubr
inc
xchg
jge
aas
mov
ds
into
hlt
mov
test
enter
or
bound
call
lds
adc
lods
xchg
xchg
test
jbe
cmc
sbb
xchg
sbb
stos
sub
pushf
add
stos
inc
push
loopne
adc
leave
xchg
push
fsubr
lea
push
mov
pop
shl
jnp
add
push
jmp
sahf
cmp
clc
ins
xchg
mov
push
and
or
mov
push
out
jnp
sub
ret
mov
jae
mov
xor
mov
(bad)
or
and
jb
cmp
mov
mov
jmp
push
imul
mov
es
in
cmp
inc
adc
lds
jae
ror
leave
mov
int3
push
pushf
mov
adc
aad
dec
jp
not
(bad)
loopne
lods
pop
jecxz
cmc
pop
inc
ds
cmp
or
mov
fdiv
adc
stos
jb
(bad)
sbb
stc
or
pop
in
call
ret
outs
xchg
leave
loope
mov
dec
fsub
ss
sub
pop
xchg
call
jmp
and
in
push
(bad)
and
int
inc
fdivr
daa
push
in
clc
test
jg
cwde
nop
aam
pusha
mov
and
inc
pop
sub
push
fstp
inc
jl
adc
pusha
xchg
adc
jmp
loop
loop
mov
mov
out
aad
fidiv
inc
outs
arpl
int
adc
jne
or
add
adc
add
add
push
lods
dec
pop
scas
iret
dec
inc
fs
xchg
push
movs
(bad)
xor
in
imul
mov
mov
xor
cmps
aam
xor
repnz
arpl
ror
jle
inc
dec
ins
and
pushf
push
xchg
xchg
jo
mov
aas
or
out
fisttp
push
adc
pushf
xor
push
int3
jne
icebp
aam
into
out
cmps
sbb
fadd
jmp
cmp
mov
sbb
inc
xor
inc
dec
cmp
sar
push
cmp
dec
dec
(bad)
push
nop
js
std
loopne
retf
jae
xchg
scas
fdiv
dec
add
sbb
aam
mov
pusha
jecxz
mov
mov
and
outs
loope
loope
clc
adc
pcmpgtw
dec
inc
loop
aaa
aam
enter
jg
or
shr
sub
mov
ror
mov
push
dec
adc
repnz
pop
nop
(bad)
jmp
loop
out
popa
aam
sub
lock
gs
fdivr
out
sub
sbb
or
hlt
call
and
data16
div
(bad)
das
cmp
jae
fdiv
fsub
adc
addr16
lock
mov
inc
je
cmp
fs
(bad)
jnp
sub
fdiv
dec
cmp
pop
xchg
in
and
shl
rcl
mov
pop
xchg
das
scas
xchg
cdq
xchg
out
and
in
mov
adc
jge
ins
cmc
cmps
sub
das
ss
out
cmps
aas
and
add
dec
(bad)
loop
pusha
(bad)
pop
adc
pop
or
push
add
mov
mov
test
nop
cmp
gs
xchg
ins
push
fld
shr
push
jmp
or
rcr
jbe
lock
fimul
into
ss
lds
nop
inc
call
sbb
cs
mov
das
out
dec
lods
mov
pop
push
pop
dec
inc
push
test
ins
mov
rol
popa
mov
sub
jmp
mov
sti
push
sub
xchg
iret
(bad)
or
push
cmp
and
jo
mov
retf
fnstcw
je
(bad)
in
or
repz
and
xor
xchg
call
lea
loop
or
sub
stc
aam
mov
sbb
mul
in
ficomp
mov
es
adc
inc
dec
lock
dec
test
les
test
lahf
mov
movs
xchg
ins
call
mov
(bad)
sahf
sbb
stc
add
jmp
stos
mov
arpl
test
das
(bad)
clc
inc
adc
sbb
mov
cli
mov
data16
ds
mov
shl
mov
pusha
ret
in
xchg
xchg
dec
mov
shr
sar
cmp
dec
lea
ss
lahf
jb
adc
push
xchg
outs
mov
push
stos
test
add
xchg
stos
mov
jbe
xchg
sahf
psubb
add
fld
and
xchg
in
ror
fs
jns
add
and
stos
sub
in
aam
mov
mov
mov
(bad)
stos
repz
xchg
sub
loopne
(bad)
stos
add
das
sti
push
mov
mov
lods
std
int3
lods
loopne
imul
test
sahf
(bad)
xor
adc
(bad)
shl
jne
out
cwde
xor
pop
jl
fist
data16
les
xchg
dec
cmp
punpcklwd
mov
pop
call
pop
sbb
jmp
fcom
movs
dec
adc
cwde
ja
in
sahf
push
lds
sub
icebp
js
xchg
stc
rcl
loope
fld
push
push
mov
pop
sub
das
movs
sbb
outs
sbb
xchg
jne
xchg
sbb
mov
in
aas
aaa
cli
mov
xor
cld
(bad)
fst
mov
mov
sub
stc
jecxz
xchg
pushf
jns
(bad)
pushf
dec
fmul
outs
xor
and
clc
inc
pop
dec
mov
xlat
xchg
jnp
in
and
popa
jae
sbb
mov
fdivr
xor
mov
add
push
lahf
sbb
clc
test
pop
push
add
and
fs
dec
jns
jae
bound
inc
inc
inc
push
jae
jns
js
inc
push
repz
pop
mov
mov
cdq
adc
pop
iret
jecxz
popa
pop
ss
not
(bad)
or
sub
add
cmc
jbe
sub
xor
jne
test
jg
loop
pusha
in
add
bnd
pop
test
popa
iret
push
mov
jg
out
push
fcom
mov
jmp
sahf
lea
je
les
cmp
je
test
dec
popa
loop
shr
jbe
mov
push
cmova
xchg
and
mov
mov
inc
push
mov
cmp
ja
mov
mov
and
jbe
cld
test
sahf
mov
adc
test
cmp
xlat
adc
fbld
sahf
inc
pop
dec
xor
or
mov
xchg
inc
or
mov
std
test
retf
je
mov
int3
xchg
(bad)
not
push
dec
or
sbb
jo
lods
pop
stc
sbb
inc
jmp
fwait
test
pushf
pop
add
or
jne
adc
loop
lods
xor
cmp
and
ja
outs
and
pusha
mov
fwait
arpl
and
jo
add
out
and
movs
outs
push
ins
out
stc
inc
dec
inc
loope
adc
xchg
stos
and
imul
(bad)
push
ror
xor
cmp
outs
daa
scas
das
dec
pop
mov
out
mov
xor
pop
jne
nop
mov
popf
aad
daa
mov
and
pop
mov
int3
fwait
push
jae
lahf
ret
mov
cmp
pusha
dec
inc
mov
imul
xchg
xlat
cmps
retf
jecxz
ficom
mov
mov
add
addr16
xor
bound
push
retf
xchg
inc
in
pushf
sbb
jae
mov
sub
in
outs
daa
aad
sbb
push
pop
sub
adc
rcl
movsx
pop
repz
int
mov
dec
cmp
scas
add
or
std
jb
cmp
ins
icebp
push
and
pop
and
test
outs
je
icebp
or
pop
lds
shl
enter
je
outs
loop
mov
dec
or
aaa
lods
push
pop
mov
pop
mov
pop
push
sub
into
cmp
jge
adc
loop
int3
or
shl
int
call
int3
xor
clc
aam
clc
ret
jae
dec
movs
pop
and
les
test
xchg
and
or
pop
mov
test
fld
sub
lahf
cmp
mov
cdq
dec
sub
dec
pop
scas
mov
ins
pop
adc
leave
pop
dec
fcomp
xchg
push
mov
js
lahf
push
leave
add
das
sub
jp
mov
adc
sbb
mov
dec
loop
mov
mov
imul
cmp
mov
xor
jae
cmps
sbb
mov
jmp
repnz
dec
jge
lock
test
popa
dec
shl
dec
xor
bound
arpl
pop
scas
cmp
jl
(bad)
xor
jmp
hlt
xchg
sub
bound
pop
ss
cmps
xor
add
xor
aam
adc
or
aam
scas
and
or
sti
int
inc
adc
shl
cli
(bad)
jg
arpl
mov
sub
push
jg
xchg
jp
iret
and
adc
ret
xchg
cld
pop
unpckhps
jl
cmovp
(bad)
in
mov
and
mov
or
pop
jo
loope
push
std
rol
js
or
dec
mov
xchg
fstp
pop
add
jg
jmp
test
inc
pop
pop
pop
add
pop
repz
popf
ja
ud0
cmp
aas
fld
push
push
test
push
adc
repz
vblendvps
jae
push
push
repz
sbb
call
or
xchg
movs
fwait
mov
lods
outs
xchg
add
xor
mov
rcr
and
cld
fcom
xor
retf
adc
jp
mov
gs
pop
dec
pop
fimul
test
sahf
rol
lock
cmc
pop
iret
xchg
xor
sbb
push
push
add
mov
loop
add
sbb
(bad)
xchg
cmp
push
sub
xchg
cmp
test
pop
jg
movs
sub
dec
mov
mov
mov
test
xchg
movs
mov
arpl
cmp
xor
push
(bad)
fnstsw
mov
out
aaa
xchg
call
nop
call
jo
clc
pop
(bad)
cmp
sti
ja
popa
outs
ss
out
movs
dec
and
pop
out
jbe
jge
or
dec
pop
movs
js
(bad)
cli
or
cmp
shr
add
jne
mov
out
(bad)
mov
int
shl
mov
push
hlt
stos
inc
stc
xor
and
aad
mov
inc
adc
or
ret
sar
and
mov
outs
mov
fdiv
retf
and
test
adc
daa
push
pop
mov
jle
xchg
js
and
inc
pop
fcomp
mov
push
hlt
jl
mov
push
sub
cpuid
dec
jp
fwait
in
(bad)
cmp
frstor
jecxz
inc
jmp
lock
xor
cmp
je
loopne
lea
pop
mov
sbb
pop
dec
(bad)
pop
(bad)
sti
xchg
out
push
mov
lods
xchg
jge
sbb
icebp
jns
xor
fst
jle
nop
mov
fist
inc
hlt
shr
pop
push
push
jae
hlt
iret
movs
mov
mov
jle
sbb
mov
ret
mov
test
aaa
call
fld
or
loope
mov
les
push
jg
pusha
leave
push
ja
jnp
call
sbb
das
cmp
jo
mov
pushf
mov
push
pop
aas
arpl
jmp
(bad)
and
add
movs
mov
test
imul
enter
cdq
fsubr
mov
mov
xchg
(bad)
jnp
fs
adc
fstp
mov
retf
push
xor
retf
add
shr
push
lock
push
adc
test
adc
jo
sbb
xor
add
lods
fs
pop
jbe
or
data16
int3
retf
jae
jmp
cmp
sti
xor
push
sbb
inc
mov
aaa
mov
popf
inc
inc
popa
les
sbb
jecxz
push
sbb
pop
test
fbld
pop
mov
xor
mov
mov
frstor
mov
ret
stos
(bad)
pushf
cld
sub
loopne
jp
call
inc
retf
retf
jo
repnz
jp
sti
sbb
pop
pop
mov
jmp
add
neg
push
test
les
loopne
jl
xor
lahf
sbb
add
pop
pushf
push
dec
mov
scas
sbb
pop
arpl
mov
xchg
je
cli
pusha
sub
retf
pop
lds
gs
ins
aam
cmp
mov
test
test
in
dec
and
ds
push
push
retf
cli
jo
outs
int3
stos
not
mov
xlat
and
stos
xor
addr16
mov
div
inc
icebp
mul
mov
push
push
mov
mov
in
retf
and
ret
sbb
xlat
sub
pop
xchg
jns
mov
scas
fs
lea
add
movs
repz
sbb
cmp
dec
xor
arpl
bound
int
mov
enter
sub
jp
adc
jecxz
test
mov
xor
mov
push
xchg
stos
jle
outs
add
pop
loopne
popf
xchg
lock
fld
enter
test
cmp
(bad)
or
xor
lods
mov
mov
xor
or
nop
in
inc
popw
cmc
sub
inc
ret
and
pop
mov
jo
xor
je
out
or
sbb
jne
lock
pop
cmp
gs
fwait
mov
adc
or
jmp
movs
aaa
xchg
pushf
pop
es
and
daa
stos
sub
push
mov
loope
aam
imul
sbb
pusha
mov
jo
xchg
sar
aad
jmp
jge
sti
mov
push
xchg
or
ss
fsubr
sbb
add
out
push
or
fwait
xor
out
sub
or
es
and
popf
pop
mov
mov
mov
sti
dec
in
xor
cmc
pop
jmp
push
dec
sbb
lds
mov
ins
test
or
push
outs
loopne
add
(bad)
jbe
korb
inc
dec
sbb
scas
cmps
popf
xchg
push
imul
scas
mov
aas
rol
dec
fbstp
rcl
sar
and
mov
ins
adc
push
data16
sbb
(bad)
jmp
dec
xor
sub
call
or
sbb
mov
mov
fiadd
imul
dec
jb
sub
jmp
and
(bad)
out
inc
push
pushf
push
cmps
and
sub
cmp
xor
sbb
pop
sub
jno
ficom
jbe
pop
jne
test
sbb
add
pushf
jbe
xor
mov
jns
test
pop
arpl
mov
es
outs
cdq
neg
test
in
dec
das
lds
push
xor
and
clc
(bad)
mov
xchg
clc
movs
ds
aaa
imul
(bad)
icebp
lea
imul
and
adc
call
jle
ins
push
pop
mov
mov
in
pushf
jo
push
cmp
push
mov
mov
sbb
aas
movs
and
inc
xchg
mov
xor
xor
dec
ds
imul
xchg
test
jecxz
mov
in
pop
xchg
sub
mov
or
sbb
ret
cli
cmp
adc
xchg
jecxz
(bad)
jg
fdivr
pop
fild
ds
cmp
neg
sub
xchg
fidivr
(bad)
xor
mov
into
or
bound
mov
adc
pop
sbb
adc
sub
mov
fldcw
daa
mov
ins
or
mov
sbb
sbb
mov
fbld
cmc
add
call
cmp
aad
(bad)
lock
add
test
jmp
dec
dec
and
in
xchg
cmp
add
mov
scas
sbb
cmp
adc
cmc
jb
jae
sub
xor
(bad)
repnz
lods
test
mov
out
pop
xchg
popa
test
das
mov
adc
mov
xchg
movs
clc
or
pop
xchg
or
xchg
loopne
jmp
pushf
sub
xchg
out
adc
jns
xor
(bad)
sti
leave
retf
shr
js
mov
sahf
cmps
int
sbb
cmp
xor
sbb
jmp
ret
add
call
enter
ins
in
mov
aam
and
and
dec
call
or
mov
lahf
dec
cs
dec
mov
cld
ins
cmp
rcl
xchg
adc
movs
xchg
mov
sbb
and
jecxz
pop
ja
add
aad
xchg
das
jp
dec
pop
cmps
sbb
inc
dec
(bad)
pop
hlt
sub
push
clc
int3
or
pop
cmps
jns
in
repnz
test
cmp
popf
pop
lock
cmps
inc
sbb
mov
mov
cmp
inc
push
mov
and
push
lahf
pcmpeqb
and
ins
sub
outs
out
mov
loop
mov
xchg
aam
cdq
stos
add
mov
fild
mov
cmp
ret
cmp
xchg
enter
adc
loopne
addr16
outs
inc
(bad)
xchg
pop
adc
call
mov
les
dec
fdivr
xor
es
add
xchg
adc
hlt
or
(bad)
aam
std
out
or
lahf
dec
dec
imul
inc
xchg
ins
cdq
rcr
in
xchg
out
cdq
(bad)
hlt
push
jns
arpl
or
push
sub
ret
mov
jmp
pop
leave
repz
dec
aaa
or
jnp
push
cmps
jmp
sbb
or
out
lock
(bad)
mov
ja
adc
adc
dec
mov
mov
jo
mov
into
pushf
sub
daa
sbb
rcl
and
test
stos
es
hlt
test
push
mov
or
jmp
test
mov
fild
xchg
jb
ja
stc
aad
mov
dec
ss
es
jecxz
into
xor
fmul
jo
out
adc
cmp
and
inc
pop
jmp
icebp
pop
repnz
rol
push
lods
mov
jae
and
(bad)
inc
pop
enter
movs
lock
loop
mul
add
adc
mov
add
(bad)
pusha
push
push
xchg
push
and
pusha
pop
int3
jae
sbb
scas
push
icebp
out
pop
cdq
mov
sbb
ret
mov
lahf
add
stc
pop
fidivr
mov
mov
in
cwde
mov
jb
lods
mov
dec
inc
pop
test
stos
push
mov
pop
or
pop
scas
enter
cld
test
cmp
fcomp
cmps
mov
imul
jo
shl
fcomp
repnz
or
(bad)
dec
out
and
enter
(bad)
call
inc
or
pop
je
mov
xor
push
xchg
and
fild
imul
dec
std
cmp
rol
xor
and
or
loop
push
mov
mov
aad
aam
(bad)
scas
fstp
dec
mov
stos
dec
push
aam
and
xor
adc
repnz
inc
dec
xchg
neg
cmp
iret
cli
imul
jo
movs
int3
je
aas
stos
sbb
aam
add
scas
push
imul
cmp
aaa
cdq
mov
sahf
add
mov
cmp
xchg
and
ins
xor
jo
dec
repnz
pop
cmps
inc
cld
inc
push
clc
push
ss
mov
mov
je
daa
mov
das
adc
xchg
call
inc
pop
push
adc
mov
das
mov
cmc
xchg
lock
xchg
cmp
bound
pop
jp
jmp
add
popa
jge
adc
popf
cmp
or
pop
popf
lods
in
repnz
push
push
mov
mov
add
add
(bad)
push
pop
ins
jg
fcmovu
outs
pop
xchg
sub
mov
mov
sahf
mov
popa
data16
mov
adc
inc
push
pop
jbe
std
ins
xchg
mov
pop
sti
and
mov
inc
xor
movntq
sbb
pop
dec
ds
outs
in
jae
out
add
call
bnd
inc
jle
push
dec
dec
cmps
jp
mov
outs
mov
mov
pop
adc
js
in
neg
aam
test
aad
xchg
lahf
cmp
retf
mov
out
xchg
(bad)
cmp
mov
imul
icebp
psubsb
jne
jmp
cmp
or
push
fisttp
cmp
lds
js
jno
cmp
xor
or
or
les
adc
xor
cmp
inc
inc
push
add
or
mov
push
dec
in
and
cmp
xor
out
xchg
out
push
or
cmc
cmps
jp
sbb
test
sub
pop
add
shl
gs
inc
scas
fdivr
repz
pusha
adc
enter
mov
xchg
mov
call
pop
outs
xchg
mov
xchg
push
sbb
mov
mov
stc
push
mov
dec
dec
loopne
pusha
sub
out
sub
loope
pop
pushf
rol
bswap
jp
cld
jae
outs
jl
push
(bad)
xchg
fst
mov
imul
pop
adc
mov
ror
sub
sbb
pop
scas
mov
mov
mov
mov
sub
adc
ds
iret
xchg
jmp
inc
dec
out
int
lahf
jbe
jmp
leave
lods
mov
call
jmp
int3
pop
jno
pusha
lods
icebp
inc
out
ret
out
mov
(bad)
add
daa
ins
in
dec
ins
or
mov
mov
mov
pop
push
adc
popa
push
pusha
aas
mov
xchg
mov
jp
xchg
push
and
jp
adc
dec
mov
sub
mov
and
push
pop
pushf
aas
or
test
inc
sahf
jae
push
scas
lahf
or
push
inc
out
ins
mov
movs
ins
add
inc
fidiv
xchg
shr
lods
and
xor
xchg
jno
mov
adc
imul
je
jb
lock
int3
test
in
cmp
gs
inc
cmp
sub
or
add
in
repnz
xor
ss
loopne
cwde
loop
push
sbb
retf
dec
arpl
repz
sub
sti
jl
adc
cmp
push
or
hlt
aaa
jne
cmp
scas
add
test
xor
and
and
outs
xchg
aas
jecxz
shr
retf
outs
adc
inc
sti
js
pusha
test
push
movs
cmp
outs
push
xor
loope
clc
icebp
and
mov
jb
aaa
jbe
outs
or
and
sub
inc
cdq
dec
call
rcr
inc
stos
retf
dec
push
in
xchg
mov
fdiv
(bad)
and
push
add
mov
stos
pushf
arpl
dec
cmps
neg
push
hlt
sbb
add
nop
xchg
sar
and
push
aaa
clc
inc
fisubr
mov
xor
(bad)
pop
je
adc
fst
retf
jge
out
jecxz
push
add
mov
and
lds
fs
and
outs
leave
push
inc
loop
mov
sbb
push
cmp
sbb
cs
lods
xor
inc
call
ja
xchg
xchg
sub
mov
shl
and
push
dec
dec
jnp
sar
pop
rep
mov
fild
pusha
data16
ss
popa
fisttp
mov
imul
bound
cmp
aas
retf
gs
rol
imul
js
cmp
das
push
xchg
or
xor
mov
clc
mov
sub
call
lods
scas
retf
and
sub
xchg
and
ins
xlat
(bad)
ret
push
dec
dec
inc
aas
push
jne
je
out
fwait
lahf
nop
mov
pop
jb
mov
imul
je
retf
test
sbb
jno
cmp
(bad)
fimul
js
retf
xchg
inc
mov
ja
mov
shr
imul
bound
inc
jnp
push
xchg
shl
popf
inc
daa
(bad)
adc
in
dec
pop
sar
loopne
push
adc
mov
add
aad
mov
add
hlt
pop
lods
arpl
and
push
test
lock
out
in
xor
adc
sahf
popf
cdq
jg
out
scas
inc
popf
(bad)
mov
cmps
and
xchg
add
lods
adc
push
(bad)
out
(bad)
in
pop
jnp
push
repnz
jne
popa
mov
fwait
hlt
mov
aad
aas
test
jle
outs
mov
rol
mov
cmp
outs
jae
rcl
shr
mov
(bad)
push
xchg
mov
add
cmp
lds
sbb
sbb
xchg
fmul
int
sbb
adc
dec
jne
mov
mov
cmps
xchg
in
xchg
sub
add
imul
sbb
adc
daa
push
jno
ror
outs
addr16
sub
jo
inc
push
test
retf
sub
push
cs
fstp
add
pop
(bad)
test
icebp
push
xlat
imul
cmp
test
push
test
add
retf
loope
pop
cld
call
cdq
sbb
jp
push
jnp
cmp
dec
loope
cmps
pop
mov
arpl
je
loop
mov
cwde
jmp
shr
xchg
adc
and
stc
jo
sbb
or
lods
setno
inc
pushf
(bad)
mov
lods
stos
or
and
in
sub
iret
jg
xchg
sahf
aas
mov
pop
and
push
movs
ins
pop
ror
sub
int3
mov
aad
gs
sbb
retf
xchg
and
sbb
jmp
pop
imul
stc
out
mov
mov
xchg
cmp
dec
retf
push
adc
rcr
cs
add
jge
(bad)
hlt
imul
lods
jnp
fld
xor
pusha
out
enter
test
mov
test
retf
cmp
pop
cmc
or
cmp
pop
retf
jmp
and
stos
and
mov
pushf
call
or
mov
mov
scas
cmp
mov
adc
and
mov
xor
icebp
sbb
iret
shl
mov
adc
out
sahf
sub
scas
lock
and
push
std
sub
test
push
mov
adc
mov
and
jmp
jnp
lods
ins
pop
adc
pop
add
adc
test
je
clc
mov
loope
call
and
push
push
sub
shl
jo
mov
or
push
into
aas
jbe
dec
out
call
or
shr
daa
int3
mov
and
jno
fmulp
adc
or
sbb
inc
aad
mov
movs
xchg
or
hlt
stc
nop
jmp
mov
call
mov
jo
push
jnp
test
jg
xor
mov
jmp
xchg
jno
cwde
dec
cmps
aam
mov
jl
mov
pop
in
ficomp
int3
xor
jg
sar
pusha
test
fdiv
mov
mov
jne
scas
call
in
sti
and
dec
mov
lds
xchg
adc
sar
in
imul
dec
adc
mov
inc
and
dec
pop
push
clc
aaa
dec
push
mov
jecxz
mov
jmp
dec
jne
stos
sub
ret
inc
adc
cwde
retf
add
or
jl
cwde
rcr
cmps
outs
sub
scas
sbb
sar
dec
addr16
(bad)
scas
cmp
mov
push
cmp
adc
daa
int
xor
and
adc
lods
jmp
addr16
fnsave
inc
cmps
pop
mov
dec
fst
ror
or
(bad)
repnz
adc
outs
stos
repnz
ds
mov
dec
iret
inc
mov
push
xchg
sahf
dec
mov
outs
stos
adc
arpl
aam
pop
xchg
mov
dec
in
dec
pop
push
es
dec
std
add
mov
pop
outs
cmp
xchg
jge
jo
or
sbb
inc
adc
mov
stos
or
rcr
hlt
cmp
dec
lea
xor
repz
mov
test
cmps
dec
je
icebp
jecxz
cwde
out
push
int
into
fist
arpl
hlt
add
cmc
mov
jae
test
push
and
mov
mov
push
dec
xchg
mov
or
inc
retf
ret
(bad)
mov
mov
jmp
inc
mov
fisubr
sub
mov
adc
xchg
jno
int3
xlat
call
pushf
(bad)
push
adc
xor
shl
loop
mov
out
mov
es
dec
movs
enter
adc
adc
mov
inc
xlat
sub
mov
mov
lods
cmc
push
pop
adc
pop
test
fidiv
xchg
sub
or
and
xor
ins
test
push
adc
iret
pop
lock
lds
sahf
inc
cmps
add
xor
mov
mov
test
pop
scas
dec
rcl
xchg
pop
mov
add
pop
enter
and
scas
xor
add
(bad)
test
jp
(bad)
repnz
or
sub
xor
retf
cdq
and
call
xlat
sar
mov
fsub
mov
sti
cli
pop
ret
rcr
jb
ja
jg
sahf
loopne
inc
or
cmp
std
or
inc
fidiv
sub
lods
movs
enter
repnz
popf
mov
jns
fwait
sub
mov
ins
mov
or
icebp
dec
xchg
pop
sbb
bound
loopne
push
mov
out
cmc
jae
xor
outs
gs
jae
add
push
mov
retf
loope
mov
test
repz
add
fnstcw
xchg
jno
cmp
lods
leave
out
xlat
stos
(bad)
mov
mov
retf
push
mov
push
call
or
or
jne
faddp
mov
mov
xchg
jno
jg
out
out
jmp
mov
cmps
sbb
sbb
int
fist
popf
xchg
mov
lods
xchg
js
(bad)
not
in
mov
idiv
pushf
push
call
jno
pop
mov
aaa
or
push
fistp
or
sub
adc
mov
sti
neg
mov
xor
cmps
jg
aam
xchg
xor
icebp
fdivp
sub
sub
pushf
aas
mov
jnp
dec
ins
inc
in
daa
mov
cmp
inc
fld
xor
pop
call
fild
cmp
int
fsub
push
jnp
mov
inc
icebp
push
retf
clc
js
sbb
push
dec
stos
sbb
dec
jmp
retf
cdq
xchg
ror
and
repnz
cmps
test
jbe
sub
jae
ret
mov
ss
(bad)
mov
adc
push
pusha
clc
pop
mov
sbb
rcr
xor
cmps
push
mov
jmp
adc
daa
xor
adc
push
fistp
popa
pop
lods
push
push
cdq
loop
cwde
and
arpl
fmul
cmp
sub
pop
je
fwait
lods
mov
mov
jmp
push
xchg
nop
jmp
mov
pop
or
sub
mov
add
dec
ja
jl
sbb
int3
sub
mov
pop
popf
inc
in
jle
adc
scas
dec
or
into
inc
les
sahf
cmc
jno
rcr
push
jg
loope
cmp
push
(bad)
add
cs
fs
cwde
loop
cmp
mov
push
push
sahf
xor
mov
sub
cli
in
clts
cmc
inc
pop
repz
adc
(bad)
lock
inc
mov
and
dec
xor
scas
std
rsm
push
push
in
int
stos
mov
(bad)
mov
xchg
push
in
scas
pop
fwait
inc
sub
mov
repnz
popf
push
cmp
in
push
test
inc
pusha
push
fs
pop
mov
mov
sub
adc
test
rol
push
jl
push
mov
push
aaa
es
fs
adc
mov
xlat
inc
dec
xchg
je
mov
push
(bad)
pop
ret
call
and
xchg
ja
mov
vmwrite
jl
ds
jns
mov
daa
js
xchg
mov
es
daa
enter
sbb
lahf
xor
into
adc
dec
shl
pop
inc
lods
inc
cdq
fsub
adc
outs
daa
add
out
adc
ret
jnp
inc
xor
push
sbb
and
inc
lahf
imul
mov
push
iret
retf
or
xchg
sub
xchg
movs
out
push
and
jno
std
ja
(bad)
lahf
xchg
sbb
xor
dec
imul
fbstp
mov
cs
xor
in
mov
ins
or
loope
loop
outs
xor
retf
add
push
mov
jae
shr
sbb
and
pusha
lds
adc
hlt
xchg
out
mov
inc
addr16
pushf
or
inc
mov
pop
fcmovnu
bound
jo
stos
in
ret
lock
jno
into
jb
stc
ucomiss
jmp
int3
push
pop
mov
imul
sbb
push
mov
mov
cwde
and
(bad)
in
adc
xchg
jne
repz
out
sub
xchg
pop
js
outs
adc
inc
inc
dec
dec
daa
(bad)
stos
xor
xchg
push
shr
adc
enter
(bad)
add
jmp
inc
(bad)
add
push
fstp
push
outs
adc
ror
mov
dec
xor
test
jb
jl
(bad)
movs
push
fs
add
rcl
dec
fs
inc
push
jae
outs
paddusb
sub
out
mov
jne
bound
dec
xchg
arpl
std
pop
inc
push
jo
xchg
mov
sbb
xchg
and
cmp
sbb
jg
and
lock
(bad)
shl
fiadd
cmp
icebp
jp
lock
jno
int
rcr
ins
imul
cdq
ss
pop
and
dec
mov
test
inc
add
or
cwde
ror
xor
add
out
mov
fcmovbe
mov
xchg
pop
xchg
push
and
cmp
wrmsr
cld
dec
les
daa
jae
inc
or
fist
sbb
(bad)
jo
in
xor
mov
ins
push
lea
aad
pop
das
add
adc
or
aam
push
pop
iret
call
arpl
cmp
mul
push
xor
js
sbb
mov
jns
ret
push
pusha
sub
int
arpl
pop
mov
mov
inc
mov
mov
push
add
jo
neg
mov
hlt
or
inc
xor
mov
scas
sub
popa
out
loopne
push
mov
mov
jmp
mov
sbb
cs
shl
mov
jl
ins
inc
jl
jle
jne
cmp
add
mov
cmps
add
(bad)
lahf
inc
sbb
sub
dec
adc
jno
test
inc
cld
lock
outs
ret
sub
cmp
test
or
out
loop
mov
push
xchg
mov
in
loop
mul
dec
sub
or
or
add
adc
rol
sub
dec
nop
not
add
adc
cmps
imul
lea
or
test
sub
mov
push
in
sub
imul
retf
sub
lea
iret
sub
loope
int
push
call
sti
push
ss
add
fldenv
daa
mov
xor
pop
pushf
sub
add
push
mov
adc
outs
jnp
xchg
mov
push
sub
add
cmp
pop
xchg
mov
pop
dec
cmp
xor
xchg
rcr
imul
mov
outs
clc
pop
jge
add
fnstsw
pop
std
inc
cmp
popf
leave
pop
push
iret
lahf
loope
sbb
mov
sbb
xchg
sbb
jb
out
mov
test
sub
pop
loope
sub
mov
lods
in
or
lods
hlt
inc
push
arpl
fimul
retf
push
or
sbb
rcl
push
outs
icebp
mov
cmp
mov
cld
push
in
iret
sub
inc
dec
xor
inc
push
sar
or
mov
jno
pop
sbb
fisub
mov
clc
xor
scas
dec
cmp
lock
adc
cmp
scas
adc
ins
fdivp
push
aam
pop
jmp
and
adc
call
ins
inc
stos
or
test
leave
shr
sub
test
push
stos
data16
inc
dec
mov
bound
sbb
neg
xchg
push
mov
jb
push
add
stc
mov
aas
ret
pop
jmp
fstp
movs
sbb
pop
mov
popa
lea
mov
repnz
stc
sub
push
xchg
jecxz
shr
push
in
popf
and
pop
xor
mov
mov
fcom
xor
cwde
cmp
pusha
clc
call
sbb
mov
jmp
pushf
cmp
dec
pop
mov
and
dec
sub
inc
push
dec
mov
xchg
sbb
les
lahf
clc
sub
xlat
test
stos
fwait
xor
jp
sub
dec
sub
pop
loope
jmp
mov
push
mov
jg
dec
inc
into
out
in
bound
arpl
test
add
in
xchg
mov
mov
pop
loopne
cmp
adc
push
adc
cmc
xor
js
mov
xchg
int3
aas
inc
test
fwait
mov
retf
inc
ret
ins
mov
leave
fld
push
xor
mov
mov
ss
pop
idiv
dec
xchg
retf
mov
imul
pop
fisub
jle
push
cmps
mov
repnz
(bad)
add
lods
jbe
ins
cmp
mov
mov
add
es
pushf
cmc
shr
test
nop
pusha
pusha
cli
outs
fnstsw
xor
fwait
xor
pop
iret
in
cmovae
popf
mov
add
cld
mov
add
jnp
inc
mov
add
int3
and
jbe
out
cmp
popf
daa
push
ror
(bad)
push
mov
pop
sub
pop
fist
and
retf
jne
cmp
out
dec
shl
or
cwde
mov
add
icebp
xchg
xor
jbe
ret
jne
enter
mov
inc
lahf
mov
ret
hlt
cmp
out
inc
xchg
aam
shl
pop
int
cmp
lods
add
dec
lahf
pop
mov
xchg
or
and
lahf
mov
mov
jnp
popf
out
mov
mov
shr
push
hlt
loope
out
jno
dec
cmps
rol
aas
mov
aaa
jns
mul
retf
je
cwde
mov
sbb
scas
xlat
mov
ins
dec
cmps
ss
fwait
xor
inc
pop
lds
jmp
mov
pop
data16
int3
dec
dec
sbb
in
cmp
cmp
stc
push
mov
or
loope
loope
cmovo
add
adc
fwait
dec
xchg
inc
cs
dec
jmp
xlat
xor
inc
xchg
(bad)
mov
popa
mov
xchg
shl
jne
test
out
jnp
fs
xor
repnz
sbb
hlt
inc
fs
rcr
clc
sub
(bad)
jno
sahf
mov
call
aam
xchg
hlt
addr16
fld
imul
lea
call
(bad)
(bad)
sub
and
cmp
adc
push
xor
nop
dec
dec
aas
js
adc
cmp
daa
fdivr
pop
push
int
xchg
mov
jbe
pop
sbb
in
int3
jp
lea
ins
adc
cmps
les
sub
stos
sub
(bad)
pushw
loope
inc
in
pop
or
or
sbb
cmc
push
cmps
retf
jno
fld
test
mov
or
pop
mov
cwde
movs
mov
jbe
jb
cld
and
lahf
cmc
inc
xor
jle
inc
fs
enter
mov
mov
lahf
mov
xchg
adc
lock
or
jmp
ror
xor
push
xor
iret
mov
mov
inc
and
jmp
mov
movs
shl
mov
ret
adc
jo
loop
mov
pop
pop
cmp
test
iret
arpl
aad
and
inc
fst
scas
dec
and
mov
cld
mov
dec
pop
loopne
call
ror
mov
(bad)
xchg
or
cmp
sub
xor
das
mov
inc
mov
out
fild
daa
xor
scas
iret
lds
mov
aam
out
lods
jno
inc
(bad)
and
sub
imul
outs
aas
or
lods
push
cmp
out
sbb
pop
jecxz
lahf
add
push
aam
(bad)
jb
in
loopne
cmps
lods
aas
stos
pop
cld
lods
adc
inc
sahf
inc
int
imul
movs
xor
mov
fldenv
sbb
shl
ret
(bad)
cs
cld
ds
fld
inc
mov
xor
repz
out
sti
lahf
inc
clc
imul
ds
ror
xor
fsubr
imul
dec
pop
(bad)
(bad)
out
jmp
mov
and
or
pop
dec
stos
retf
data16
scas
pushf
ret
in
mov
out
push
fidivr
jb
in
sbb
(bad)
mov
test
push
cdq
leave
loopne
push
pop
mov
repnz
push
outs
call
fild
bound
mov
jbe
enter
adc
jns
pop
xchg
mov
mov
iret
loope
mov
call
imul
sub
(bad)
leave
sbb
mov
cmp
sbb
sbb
pushf
sbb
mov
xor
imul
test
jbe
add
jmp
xor
lds
dec
mov
int
cli
xor
popf
mov
int
or
fild
xor
lea
jmp
rcl
xchg
add
xlat
jb
das
sub
cwde
mov
loope
xchg
cmps
shr
mov
lahf
loopne
cmc
jl
push
sahf
pop
pop
ins
gs
test
mov
mov
in
aad
das
sbb
(bad)
ja
int
mov
out
and
retf
aas
mov
out
call
sub
adc
lea
push
inc
cmp
outs
arpl
jge
arpl
popa
inc
mov
scas
cmp
clts
cmp
(bad)
or
inc
ss
imul
mov
and
mov
pop
push
jae
push
loop
mov
and
fist
inc
cmp
cli
mov
jae
push
repz
and
mov
lahf
stc
push
retf
xchg
fcmovu
movs
fldenv
cs
lods
rcl
push
int3
or
cli
mov
jns
dec
mov
enter
ret
shl
jbe
add
pop
ret
cwde
push
bnd
dec
cmp
into
(bad)
inc
add
push
movs
pusha
mov
out
(bad)
retf
cmps
pop
(bad)
lahf
in
in
shl
pop
push
icebp
sbb
call
dec
js
and
sub
sti
push
cs
mov
enter
push
add
xchg
iret
xor
lahf
or
retf
jmp
inc
(bad)
retf
inc
sbb
out
sahf
and
in
pop
iret
sub
out
add
out
and
arpl
lds
lds
add
jg
and
xor
pop
push
inc
outs
add
ins
clc
lea
sbb
sbb
(bad)
xchg
push
xchg
test
mov
clc
bnd
or
jecxz
pop
test
inc
shl
jecxz
iret
pop
mov
stos
pop
xor
inc
mov
cmc
mov
imul
scas
test
add
fcmove
adc
test
jne
mov
addr16
sub
pop
inc
sar
push
pop
sbb
mov
mov
icebp
jae
pusha
out
stos
push
out
jmp
fsub
mov
fcom
xchg
sub
and
mov
mov
ss
and
and
jmp
inc
call
pushf
jg
out
icebp
mov
mov
mov
retf
cli
and
jmp
mov
dec
cmp
in
sbb
stos
inc
pop
movs
dec
and
push
push
jmp
cld
scas
mov
cmps
mov
dec
sub
mov
mov
fs
push
stos
es
(bad)
xlat
loop
cmp
push
mov
push
sbb
std
das
add
repnz
pusha
mov
out
(bad)
jns
xor
jmp
mov
int
xor
int3
lods
int
jmp
lahf
mov
mov
pop
rcl
cmp
lahf
pop
ja
nop
push
in
outs
mov
push
inc
stos
and
iret
xor
pop
xlat
dec
or
cmp
fisub
jecxz
ret
fisttp
stos
fucomp
sti
ds
movs
sahf
push
xchg
sbb
inc
pop
dec
add
xor
dec
mov
in
mov
pop
cld
adc
and
pop
mov
nop
stos
mov
cli
sub
fs
sbb
mov
(bad)
adc
jmp
adc
adc
pusha
push
dec
adc
and
mov
mov
mov
and
push
mov
pusha
mov
mov
xchg
aas
aad
(bad)
ret
push
int3
aam
pushf
cs
jae
cmp
popa
push
adc
nop
shr
and
fcomi
and
retf
stos
out
mov
loope
(bad)
inc
inc
mov
sbb
mov
push
(bad)
mov
fistp
xor
add
adc
mov
jmp
(bad)
adc
push
xor
sub
jne
adc
cmp
and
and
loopne
and
mov
inc
(bad)
retf
mov
pop
dec
and
rcl
les
test
pop
fcom
adc
pop
pop
stos
(bad)
repz
data16
adc
jge
cmp
bound
int3
iret
loop
add
int
sbb
and
sbb
xchg
(bad)
push
cwde
in
sub
jl
cdq
je
enter
cmp
mov
and
mov
retf
mov
stos
inc
push
pop
fnstsw
jle
xor
out
mov
std
scas
fs
and
or
mov
pop
call
add
shr
adc
call
xchg
mov
ror
push
pop
enter
movs
stc
in
repnz
push
mov
xchg
add
mov
dec
(bad)
adc
inc
ins
cmp
aaa
lea
iret
addr16
pusha
fs
mov
and
aad
retf
inc
pusha
inc
inc
add
clc
mov
add
xchg
lods
test
sbb
les
outs
mov
xor
mov
js
std
int3
or
outs
enter
cdq
inc
(bad)
es
cmp
(bad)
jmp
dec
(bad)
push
mov
rcr
retf
inc
repz
cmp
xlat
fucomip
xor
nop
in
xor
rol
mov
xor
dec
pop
pop
out
xchg
sbb
imul
or
sub
xchg
stos
cmp
in
add
cmc
rcr
cs
xor
jbe
out
mov
or
jb
inc
sub
push
sub
sti
scas
cmp
cmp
cmps
je
leave
int3
mov
pop
aad
aad
outs
cmc
test
shl
sti
pop
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
